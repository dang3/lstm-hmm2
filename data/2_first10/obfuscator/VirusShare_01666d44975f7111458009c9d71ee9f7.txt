sbb
add
adc
les
lock
mov
jg
inc
pop
cs
jge
push
dec
imul
xlat
jle
les
loopne
aam
aad
xchg
inc
mov
inc
cmpsb
jl
mov
and
xor
sbb
inc
lret
daa
loope
faddl
cmpsb
dec
jno
add
jge
call
cmp
data16
jns
pop
leave
xchg
cltd
and
jbe
enter
int
xchg
jle
and
adc
test
or
lods
jb
lock
aam
data16
inc
xchg
sbb
pop
test
dec
adc
andl
not
add
fwait
ss
mov
into
adc
jl
adc
arpl
shl
cmp
je
sbb
scas
cmp
inc
xor
adc
out
pop
mov
xor
lock
dec
inc
ret
cs
jl
into
ljmp
roll
pop
int3
gs
movsl
cld
inc
push
ror
mov
sbb
cmp
sub
jle
movsb
cmp
test
lock
or
shrl
je
icebp
push
ja
push
fidivrs
xor
divb
add
arpl
inc
shl
jmp
mov
ljmp
push
cltd
adc
lock
inc
movlps
adc
dec
push
cmpsl
jge
dec
rolb
xchg
sbb
cmp
outsb
xchg
psubsw
lea
in
cmp
add
fldl
sbb
ret
aam
add
std
ret
xorl
mov
je
jb
aad
or
lahf
fcompl
jne
inc
std
into
sti
xchg
in
sbb
stos
movsl
and
inc
add
mov
loop
mov
xchg
and
jb
fsub
sub
in
test
pop
xchg
in
push
sarb
pop
ds
mov
or
imul
jbe
jo
xchg
mov
je
inc
mov
arpl
sub
dec
or
rcll
andb
adc
dec
aam
pusha
jo
xor
mov
jnp
imul
int
jnp
push
jl
ljmp
sbb
pop
lock
scas
xor
add
sub
sbb
lcall
cmpsl
add
xor
decb
dec
arpl
and
add
lods
shlb
mov
arpl
pusha
sarb
sub
int
sbb
sbb
testl
cwtl
mov
in
jo
popf
jb
das
cmp
adc
cmp
pop
lret
cmp
iret
sbb
pop
aaa
add
mov
fcoml
out
dec
bound
hlt
jl
mov
cmp
inc
mov
sbb
mov
sbb
inc
popa
rclb
sbb
lods
inc
mov
cld
int3
fcoms
popl
push
enter
je
sub
mov
outsb
es
inc
push
mov
cli
sub
jb
cmp
lea
jg
xor
fs
scas
cmp
mov
add
testl
cmc
jb
fsubl
ja
jmp
std
xchg
inc
dec
mov
fcom
pop
pusha
and
mov
ds
sti
adc
or
and
lret
or
test
adc
out
icebp
in
jo
or
inc
sahf
cwtl
subb
lret
mov
inc
jp
jb
bound
pop
mov
out
popa
pushf
mov
out
pop
sbb
mov
push
pushf
sub
add
lret
outsb
iret
cltd
or
inc
and
stc
pop
icebp
push
lods
mov
mov
jl
dec
dec
in
gs
je
ss
ret
push
lds
pop
sub
jno
iret
cwtl
stc
mov
and
dec
aaa
adc
push
in
hlt
cmp
cmp
mov
xor
and
and
adc
bound
js
shl
sti
fcmovnb
data16
lahf
inc
sub
push
pop
ret
lret
imul
dec
sti
sbb
dec
push
jnp
sarl
cltd
repnz
iret
jo
jge
les
push
and
mov
adc
inc
sti
leave
mov
cmp
and
movsl
or
or
add
cmp
mov
mov
mov
push
inc
mov
add
sarb
cmpsb
jnp
add
xorb
and
xor
mov
fldenv
es
lcall
push
insl
pop
push
push
pushf
sbb
jl
mov
jl
dec
xlat
shrl
jb
inc
repnz
mov
pop
imul
adc
dec
pusha
jmp
out
lret
push
fidivrl
rolb
cmp
aas
dec
in
test
sbb
adc
js
jnp
dec
fldenv
subb
mov
mov
mov
mov
jb
cmp
jecxz
popa
push
ljmp
dec
cmp
incl
inc
stc
add
jne
ret
jbe
push
dec
cld
je
scas
jge
mov
testb
xchg
test
ljmp
sub
push
out
gs
aaa
movsb
lahf
iret
dec
mov
xchg
mov
sub
fwait
pushl
jecxz
fcompl
push
scas
xchg
out
adc
adc
stos
dec
lods
xor
mov
rcrl
aad
xor
cmpsl
and
xor
std
and
push
aam
jge
sti
xchg
out
stos
or
je
nop
xchg
in
adc
pop
fstl
cmpsl
ss
into
out
scas
faddl
int
in
push
cmovb
loope
dec
jmp
in
scas
fildll
push
dec
dec
shlb
jne
inc
sbb
rcrl
out
xchg
lods
test
mull
je
pop
mov
lds
mov
outsl
stos
faddl
xchg
pop
lea
push
jno
test
jg
mov
pop
imul
pop
fadds
fmul
mov
fs
mov
ja
cli
sti
push
xlat
lahf
les
jne
fidivrl
call
pop
xor
ja
pop
ficoml
les
repz
sub
add
insl
into
outsl
cmpsb
xchg
lock
push
mov
sub
push
repnz
mov
pop
stc
rcll
ret
jmp
enter
xor
inc
int
out
dec
inc
or
enter
out
sarl
push
outsb
or
adc
xor
xor
push
jnp
and
sub
sbb
dec
mov
cmp
stos
dec
lock
sub
add
sbb
fists
cmp
cmp
ret
fsubl
jae
cld
pushf
and
push
out
ror
rorb
xchg
sbb
pop
jg
scas
scas
adc
daa
sbb
lea
icebp
arpl
hlt
fdivr
popf
movsl
adc
loope
insl
and
ljmp
push
ljmp
out
and
mov
xor
call
mov
stos
lret
lods
scas
outsb
dec
iret
cmp
xchg
jb
cmp
sub
or
jecxz
dec
adc
stc
jns
sub
hlt
xchg
shr
mov
cmp
jge
jmp
loopne
out
daa
insl
out
rolb
pop
unpcklps
enter
nop
push
or
lcall
or
mov
push
add
mov
dec
icebp
movsl
push
das
cwtl
loope
in
call
dec
mov
int3
movsb
xchg
ret
pop
out
jp
push
jnp
orl
jmp
push
push
movsl
hlt
stc
insl
jne
int3
push
imul
ret
xor
inc
pop
pushf
das
add
pop
or
inc
pop
test
xchg
fs
push
insb
outsl
sti
mov
sti
insb
lcall
sarl
and
xchg
jmp
ficoms
lret
push
adc
div
imul
inc
aaa
pop
icebp
outsl
out
es
in
pop
and
in
pop
sbb
adc
add
cmp
mov
mov
notb
arpl
enter
xor
insl
push
push
jnp
lret
push
cmp
add
stos
or
add
and
xchg
imul
loop
fildl
xchg
xor
movsb
adc
ret
orl
rcll
hlt
xlat
cld
add
mov
fnsave
pop
cmp
movsl
jb
nop
push
out
xor
nop
movsb
hlt
mov
cmpsl
cmc
dec
aas
push
pop
and
es
sub
outsb
sbb
aad
adc
pop
inc
out
sahf
insl
pushl
mov
cld
pop
aad
push
xchg
xchg
dec
add
ret
loop
xor
pop
lea
fcomi
outsb
mov
aaa
adc
mov
cld
jns
xor
mov
inc
pushf
out
lret
in
add
cmp
mov
shlb
dec
mov
es
lods
out
jp
jmp
clc
addr16
and
inc
mov
sub
out
mov
jecxz
add
cmpxchg
insb
sub
lock
repz
rorl
and
jnp
cmp
inc
mov
xchg
mov
mov
cmp
rcr
cmp
cmp
subb
mov
sub
pop
nop
push
sbb
cmp
xor
fisttpl
inc
and
into
lret
ja
sub
imull
cwtl
fwait
cmp
push
popa
cmpsl
movsb
cltd
ja
idivb
adc
mov
jbe
lea
jmp
mov
cmpsl
dec
popf
in
pop
fstpl
rep
jne
push
call
sub
shlb
cmp
mov
cs
dec
cmp
xor
cwtl
push
subb
dec
movsl
or
add
xchg
jecxz
mov
inc
test
loope
add
jmp
sbb
shlb
add
dec
dec
pop
loopne
cmc
out
cmpsb
mov
xchg
jge
aad
divl
adc
xchg
inc
subl
int
sub
ret
fists
jo
sbb
adc
outsb
insb
loop
mov
cmp
cwtl
scas
scas
mov
lds
pop
adc
dec
rclb
aad
lahf
cmp
dec
sahf
stc
out
xchg
in
daa
jecxz
fstpt
mov
dec
fcompl
push
mov
push
loop
xor
pop
and
lock
mov
fidivrs
in
stos
mov
stos
aam
pop
sahf
pop
adc
ret
jecxz
ret
test
inc
test
sbb
mov
xchg
mov
stos
cmpsb
mov
push
adc
lahf
out
push
ret
or
ficompl
pop
push
popf
or
out
add
sub
jno
xchg
cmp
push
rorl
or
inc
lahf
mov
pop
stos
in
cmp
ficoms
xchg
inc
xchg
lock
dec
aam
jge
nop
pop
ja
std
dec
xchg
adc
dec
sbb
repnz
adc
xor
jmp
ljmp
mov
dec
sahf
fldcw
add
rorb
jo
fwait
mov
cmp
loop
sub
xchg
fldcw
pusha
mov
sbb
mov
dec
push
mov
mov
pop
push
push
test
cmp
jo
add
addl
pop
fsubs
std
push
fwait
leave
and
mov
cmp
addr16
xchg
fistl
lret
in
inc
cwtl
and
dec
cmp
mov
ljmp
push
jno
xchg
mov
lock
mov
fmull
fdivs
adc
adc
mov
add
pmaddwd
lahf
pusha
mov
sub
xchg
testl
mov
mov
adc
xor
in
scas
mov
push
jo
scas
inc
rcrl
gs
test
mov
pop
outsb
push
ljmp
mov
sbb
arpl
lret
cmpsb
sbb
or
xor
ljmp
add
ffree
roll
cmp
sbb
mov
cmp
stos
jbe
dec
int
pop
inc
adc
adc
ret
cld
xor
fxch
or
aad
repnz
into
imul
adc
add
out
mov
adcl
mov
fsubrp
cmp
sub
das
cmpsb
sbb
cmp
daa
test
je
adc
sub
dec
push
test
lahf
sbb
and
add
jmp
out
jg
std
jno
icebp
dec
sbb
cmc
fildll
sbb
pushf
arpl
lods
xor
sub
sbb
pop
popa
insl
aad
bound
xchg
shlb
mov
sbb
xor
add
in
test
mov
popa
aaa
cmp
ds
scas
add
ljmp
jmp
pop
test
sub
test
and
bound
mov
into
sti
cld
clc
lret
ret
jno
sbb
xchg
sub
push
movsb
cmc
loopne
ljmp
sbb
add
xchg
imulb
sub
xchg
pushf
lcall
sub
mov
out
ds
pop
imul
xchg
mov
fdivrl
pop
mov
loop
mov
je
scas
xchg
shrb
outsl
or
iret
fcoml
mov
dec
push
mov
les
dec
nop
rcl
test
mov
inc
subl
lods
cmp
mull
arpl
inc
sarb
out
or
and
repnz
int3
repnz
push
sbb
mov
hlt
push
sub
nop
mov
mov
in
je
loope
rol
lods
idivb
pop
mov
pop
sub
scas
or
or
mov
or
aam
repz
lret
mov
mov
cwtl
inc
test
push
pop
jno
scas
mov
xlat
jg
jmp
rcr
add
mov
sahf
daa
pop
in
lods
ds
int
push
mov
lods
loop
mov
scas
dec
ret
scas
xor
das
sbb
or
lods
data16
outsl
mov
into
cs
int
mov
mov
imul
test
jne
cmp
in
icebp
xchg
pop
leave
or
cltd
ret
xchg
push
adc
dec
mov
mov
data16
cmc
call
or
icebp
in
aas
jo
mov
repz
fistpl
add
add
loop
add
lods
sbb
aas
cmc
aam
xchg
lods
inc
inc
jnp
mov
xchg
push
mov
data16
sbb
lret
jae
cmc
or
aam
inc
xor
or
ss
jns
sahf
pop
gs
scas
jmp
loopne
outsb
in
aam
jecxz
jae
sbb
jge
nop
dec
add
movsb
xor
lock
adc
xchg
sbb
outsb
mov
jmp
push
cmpsb
xor
gs
mov
xor
lods
mov
and
stc
scas
or
in
mov
or
mov
mov
outsl
mov
cmp
xchg
call
scas
repnz
and
jnp
insl
ja
ds
or
lea
and
sub
push
add
xchg
int
jns
in
ror
js
sub
aad
test
jbe
in
into
cmpsl
or
mov
sub
outsb
filds
push
pop
pusha
cmp
jmp
xchg
sbb
jg
dec
bound
push
into
sub
xlat
in
test
je
movsl
movsb
jb
loopne
push
pop
push
xor
ss
cs
push
les
mov
adc
shlb
push
pop
cs
imul
push
push
pop
loopne
cli
mov
mov
aas
inc
ja
push
aad
and
or
and
and
mov
jecxz
xchg
fidivl
mov
and
in
popf
inc
jne
pop
or
stos
cmpl
pop
push
jae
arpl
call
pop
add
sarl
sbb
mov
inc
loopne
add
pusha
ret
loopne
loopne
add
or
xor
movsl
xor
shll
lea
mov
imul
mov
test
out
js
xchg
or
mov
dec
sub
into
ljmpw
xor
aaa
hlt
dec
call
imul
fmuls
fwait
iret
add
mov
loop
sbb
cmp
test
sti
mov
push
mov
test
outsl
pop
js
jb
dec
lods
sbb
repnz
in
or
push
push
scas
mov
pop
dec
popf
xorl
stos
mov
frstor
int3
iret
lods
mov
or
std
adc
nop
decl
in
push
add
or
inc
out
rcrb
aad
pusha
lea
and
inc
add
mov
push
outsb
lahf
lret
push
into
fwait
jecxz
gs
lods
or
cld
clc
dec
jp
pop
cs
mov
xchg
xor
ljmp
repz
pop
xor
mov
mov
xor
es
inc
das
cmpsl
jl
rcrb
cmpsl
xor
daa
or
mov
xchg
inc
push
push
ret
add
mov
icebp
jp
pusha
test
repnz
gs
lea
pop
loopne
shr
xor
fcmovbe
pop
fs
jns
dec
mov
mov
push
cwtl
sbb
das
js
out
mov
jbe
xor
push
popf
xor
lods
nop
adc
mov
pop
mov
mov
pushf
mov
xchg
pop
mov
outsl
into
fimull
cmp
xchg
ret
rorb
sub
lods
ret
aad
cmpsb
in
outsl
mov
adc
dec
repz
mov
push
pop
add
fs
sub
popf
nop
int
mov
in
in
fs
xchg
cmp
lds
cmp
pusha
jge
push
adc
lcall
cmpsl
js
and
imul
pop
jnp
mov
mov
jb
out
adc
leave
jle
cmp
mov
mov
mov
stos
pushf
aad
inc
loope
pop
mov
xchg
xchg
jge
push
mov
dec
push
fs
movsl
adc
pop
xor
fisubl
add
jle
or
shl
sbb
and
in
je
mov
mov
scas
fwait
pop
testb
mov
dec
xor
stos
test
add
fsubs
roll
insl
push
in
addl
insb
sbb
fisubrl
push
and
das
lretw
and
bound
aaa
and
shl
xchg
add
rcll
add
cmp
mov
push
enter
int3
js
les
test
adc
mov
popf
xchg
sub
icebp
push
lret
out
cmpb
call
add
aad
subb
xor
call
int
or
int3
aad
push
mov
fcmovnbe
or
aam
and
mov
dec
mov
mov
movsb
or
lret
loop
jg
fimuls
mov
loope
mov
iret
mov
pop
repnz
and
ret
fcmovu
sbb
sub
jb
jecxz
jb
mov
xor
dec
shlb
hlt
lcall
xlat
cmp
mov
loopne
mov
test
cmpsl
mov
mov
ljmp
mov
sbb
andl
inc
push
sub
and
sbb
jae
loopne
notb
insl
adc
inc
push
enter
mov
push
push
sarl
xchg
sarl
pop
lcall
dec
sbb
mov
out
out
in
mov
xor
cmc
nop
dec
sti
rcl
hlt
add
adc
out
outsb
lds
dec
into
sub
outsl
sbb
pop
into
insl
push
push
ljmp
jnp
mov
loope
xchg
and
data16
xchg
cli
ss
pop
mov
mov
mov
cmp
adc
and
call
mov
sarl
and
lret
or
aam
imul
inc
or
sub
out
cmp
xor
and
adc
aam
or
int3
clc
in
ss
xor
cli
mov
test
or
push
imul
test
or
sub
ret
push
rorb
scas
sbb
push
xorl
movl
in
mov
add
push
repnz
inc
add
arpl
inc
negb
adc
mov
xor
icebp
pop
ret
roll
enter
inc
popf
jecxz
sub
or
adcb
adc
out
cmpsl
dec
mov
insb
inc
std
inc
lods
jp
dec
mov
xchg
rol
sub
fdivl
jb
and
ret
xchg
xor
inc
ds
mov
aas
rcrl
inc
shlb
repnz
icebp
out
sbb
cwtl
jp
push
lret
movsb
arpl
xchg
mov
mov
and
push
data16
clc
adc
mov
mov
mov
lods
ret
push
push
aam
pop
lods
mov
and
std
dec
jno
add
cmp
mov
pop
dec
lods
jns
add
ret
adc
or
cli
add
fadd
and
jae
mov
outsl
es
dec
mov
add
dec
mov
daa
cltd
sti
nop
das
fsubr
xchg
into
lods
fsub
mov
lea
push
cld
enter
xor
xchg
push
jl
bnd
mov
dec
add
pop
sub
subb
outsb
nop
rcr
pop
pop
jmp
xlat
fistpl
cmpsb
ljmp
sbb
fnstenv
xchg
out
loop
notl
pop
sub
sar
inc
pop
nop
adc
mov
inc
push
pop
cmc
dec
in
dec
add
or
dec
rorl
sub
call
mov
add
or
cmp
int3
rep
scas
pusha
or
idivb
mov
adc
fs
mov
lock
shlb
mov
enter
push
push
jns
jae
pop
sahf
mov
out
fldl
jmp
out
add
rorl
inc
lret
and
pushf
rclb
mov
and
inc
xchg
repz
mov
ss
pop
loope
sbb
outsb
push
addl
out
add
sub
xchg
inc
sub
aas
push
pusha
and
cwtl
pop
lea
jbe
adcb
mov
xchg
sbb
xchg
pop
das
mov
mov
or
icebp
int3
mov
push
or
sub
inc
cli
subb
faddl
inc
pop
mov
movsb
xchg
mov
adc
inc
lcall
cmp
and
mov
lea
andl
mov
nop
dec
sbb
xor
ret
or
jns
add
dec
and
pop
pushf
dec
rcrb
push
inc
jle
xor
jo
cli
rorl
push
pop
lcall
ret
xor
xor
mov
xchg
cwtl
sbb
test
sbb
jp
jns
cmp
outsl
test
pop
xchg
jge
push
hlt
das
mull
sub
shlb
das
out
and
into
sarb
adc
jecxz
scas
mov
cwtl
sbb
pop
addr16
shl
lea
pop
rcl
sbb
xor
fcomi
fcompl
mov
lret
mov
in
stos
cmovl
sbb
movsl
jecxz
stos
or
mov
fisubrs
out
dec
adc
sub
or
mov
sub
imul
mov
imul
adc
dec
fwait
mov
dec
jns
cltd
lock
add
es
mov
pop
ret
mov
test
iret
dec
xorl
inc
sub
movb
adc
fcoms
dec
subb
out
xchg
mov
outsl
decl
xchg
in
stos
pop
mov
scas
mov
fnstenv
jl
repnz
in
mov
fcomps
jb
adc
out
stos
dec
loop
xchg
cmpsl
jmp
mov
enter
jl
add
lock
sub
cmp
add
pop
jecxz
adc
pop
inc
mov
inc
outsb
cmc
jbe
js
and
imul
mov
lock
or
mov
lret
movsb
xchg
shlb
test
adc
not
jbe
out
aaa
pusha
cwtl
push
icebp
push
cmp
jmp
loopne
jo
imul
adcb
add
movsl
xor
and
in
shll
and
dec
jne
pusha
push
xchg
lret
cwtl
adc
adc
inc
mov
push
mov
push
sbb
and
shrb
or
add
imul
and
pushaw
mov
push
mov
dec
xor
xchg
and
lret
mov
push
movsb
repnz
xchg
add
mov
add
ds
loope
sahf
jne
loope
sbb
jb
out
sbb
sbb
ljmp
leave
rcrb
divb
or
jmp
int
loop
loope
test
call
sbb
push
loope,pn
mov
fwait
imul
jle
rcrb
sarl
and
scas
jp
inc
enter
xchg
addb
mov
dec
movsb
push
out
fsubl
sarb
test
divl
xor
cmpsl
aam
mov
fcoms
loope
lahf
in
std
loope
pop
sbb
std
fwait
jp
stc
inc
aam
jae
adc
mov
sub
dec
dec
test
push
jb
mov
xor
mov
xor
scas
push
sub
cli
pushf
xchg
xchg
mov
sbbl
jo
out
test
outsb
mov
sbb
push
call
inc
push
fcmovb
ret
sub
xchg
mov
sbb
xchg
div
lods
ror
ret
sahf
mov
inc
sub
outsl
or
mov
ficoml
scas
sbb
jl
nop
pop
adc
pop
jnp
mov
enter
adc
mov
bound
js
aaa
test
popf
shl
push
data16
ljmp
jno
lods
sbb
xchg
sbb
pusha
pop
sahf
or
cmpsl
or
xchg
cmp
movb
push
jp
push
mov
lods
mov
inc
stos
xchg
fstpt
fwait
add
or
push
lret
fsubl
adc
mov
sbb
cmpsl
lods
dec
testl
sbbb
dec
sbb
test
adc
mov
mov
xor
into
push
or
mov
add
outsb
inc
stos
icebp
ljmp
clc
fistps
pop
out
pop
negb
scas
das
mov
popf
test
inc
repz
je
popa
xor
nop
xor
stc
sub
roll
dec
scas
in
mov
lods
scas
decb
outsb
andl
scas
sub
fwait
js
sub
lds
push
push
sub
push
cli
ret
mov
enter
incl
dec
inc
dec
push
loope
add
mov
in
xor
sti
mov
xchg
stos
push
fs
lret
xchg
sarb
neg
mov
lods
lods
mov
cli
mov
and
loopne
les
pop
ret
es
sub
pop
jp
rcr
stos
repz
iret
test
enter
push
imulb
push
imul
or
push
movsl
mov
sbb
sbb
sub
or
mov
lahf
ret
ss
pop
dec
sarb
mov
scas
push
rcrb
push
or
add
fsts
inc
xlat
mov
cs
add
arpl
out
fwait
jl
ljmp
lret
lock
int
in
jg
lea
ja
mov
mov
test
add
sub
inc
xlat
xchg
push
inc
popf
xor
iret
ret
jae
push
insb
mov
mov
cmp
sahf
add
pop
add
lods
negb
in
push
xor
je
pop
xchg
gs
movsl
lock
add
pop
adc
jle
leave
scas
lahf
clc
and
fwait
inc
and
sbb
out
jmp
outsl
popa
jb
aad
and
insb
and
mov
ds
stc
jp
adc
mov
addb
inc
scas
jb
pop
sub
push
inc
nop
pop
mov
lret
or
push
push
rclb
popf
pop
xor
pop
mov
mov
jo
mov
test
fs
xchg
test
leave
cs
jne
inc
call
ds
push
shll
mov
push
ds
add
cmp
into
push
cmc
mov
loopne
cmpsl
mov
insl
pop
jno
leave
push
mov
cs
imul
xchg
sbb
and
adc
mov
sub
inc
loope
es
loop
aam
adc
mov
sahf
lcall
mov
add
loop
lea
lea
sti
cld
ljmp
jnp
lods
bound
out
lods
push
leave
sub
push
adc
fisttps
sbb
pop
sti
aas
enter
in
mov
mov
inc
inc
lret
xchg
out
mov
mov
lret
xor
cmp
xchg
xor
sar
ds
mov
mov
mov
cmpsb
js
push
movsl
or
adc
cmc
int3
xor
or
jne
rolb
lahf
add
sbb
pusha
push
scas
inc
sbb
sub
enter
xchg
faddl
add
fs
xchg
lods
out
enter
jbe
mov
pop
adc
subb
jbe
adc
jae
and
movsb
jns
mov
inc
mov
stc
enter
xor
inc
test
pop
repnz
add
cltd
into
subl
dec
out
lock
test
push
movsl
xor
ja
inc
pop
sbb
repnz
imul
addr16
jo
gs
or
inc
bound
ret
or
sbb
inc
cmp
pop
hlt
pop
mov
xor
aad
scas
cld
push
rcl
nop
lahf
pop
xchg
fmul
push
js
mov
push
inc
xchg
pop
pop
cs
sub
push
inc
dec
jecxz
and
mov
lock
cmp
fldenv
push
push
rclb
int
jb
lcall
test
out
idivl
fwait
int3
jb
sub
mov
fisubl
mov
add
dec
sbb
and
data16
in
or
mov
mov
xchg
scas
mov
test
adc
iret
enter
inc
push
xchg
sub
add
lahf
jecxz
movsb
movq
mov
xchg
jno
aam
xchg
and
sbbl
shll
mov
mov
inc
xchg
ja
cld
in
in
or
xchg
cmp
and
imul
mov
xor
ljmp
xor
jecxz
jnp
in
ja
add
sub
mull
pop
outsb
aaa
push
mov
adc
sub
inc
lret
lods
cmp
cmpsl
bndldx
arpl
mov
lods
add
ja
aaa
out
sbb
int
sub
push
lcall
dec
std
mov
pop
mov
pop
xchg
adc
xor
loopne
mov
aam
mov
gs
clc
aam
cmp
stos
jno
sub
push
nop
or
insl
shlb
stc
or
jo
testb
pop
cmc
jmp
mov
dec
cmp
cmp
xchg
pusha
shlb
inc
cltd
pop
push
fsub
pop
dec
push
push
pop
jp
sub
xchg
or
adc
icebp
and
cmpsl
cmp
jecxz
push
stos
hlt
ret
pop
scas
jne
mov
pop
add
dec
inc
inc
jecxz
push
pushf
loop
sub
sbb
mov
clc
out
pop
mov
cmpsl
lods
jne
aam
inc
insb
imul
or
std
inc
pop
ret
stc
sbb
xchg
cmp
lret
ret
int
loop
mov
ja
pop
clc
pop
cmp
lods
fstpl
mov
insb
outsl
xlat
setb
push
shlb
mov
or
and
dec
ja
enter
xchg
adc
push
add
addl
jo
or
inc
mov
mov
mov
rcrl
mov
dec
lock
push
lods
xor
into
gs
arpl
mov
or
js
sbb
jle
xorb
jge
mov
cs
and
or
movsb
adc
sahf
stos
arpl
data16
pop
fstl
xor
iret
add
pop
sbb
in
mov
pop
mulb
adc
arpl
cmp
sbb
sbb
jmp
mull
xlat
and
stc
jmp
insb
mov
dec
imul
mov
out
movsl
sub
jne
pusha
fdivl
pop
adc
adc
js
mov
push
fsubs
ss
mov
fbld
lods
xor
jb
jmp
cmp
push
mov
stc
loope
dec
pop
inc
xor
jb
dec
cmp
loopne
repz
pop
push
pop
add
cmp
jns
sbb
rolb
dec
idivb
pop
cmpsb
bound
add
icebp
mov
es
or
int
std
dec
mov
bound
mov
mov
testb
aas
xor
in
sub
sbb
ds
fcom
js
call
shlb
enter
push
sbb
inc
int
les
xor
jp
movsb
or
sbb
ss
jno
mov
into
aaa
inc
lahf
scas
flds
idiv
mov
test
scas
pop
popf
xchg
fidivl
sub
stos
xor
cmc
imul
movsl
movsl
andb
insb
add
and
mov
ljmp
xor
out
mov
jne
cmp
sbb
in
loop
jno
or
cs
rcl
lock
xchg
pop
lret
mov
dec
in
sbb
mov
nop
and
xchg
jle
inc
bound
jnp
add
pop
adc
cmp
mov
in
hlt
clc
pop
lret
int
jg
jbe
cmp
jnp
leave
es
sub
ror
shll
jbe
test
jle
jecxz
dec
sub
test
sub
jmp
scas
sbb
pop
cs
aas
ret
cmp
adcl
push
xchg
ljmp
ret
sub
fwait
pop
mov
pop
xchg
ror
test
aam
ds
loope
mov
lret
shlb
cmc
fildl
inc
mov
jecxz
mov
les
jno
mov
add
xor
pop
xchg
or
add
sub
insb
popf
out
lahf
adc
push
sub
cmpsl
sub
push
popf
push
lahf
fnsave
mov
inc
stc
loopne
mov
sbb
sbb
rclb
cli
jge
mov
pushf
aam
fsubl
mov
jle
add
mov
and
cmp
cmp
jae
test
insb
jmp
test
xor
adc
lcall
pop
mov
jns
out
aaa
mov
aam
push
push
add
dec
lcall
lret
and
inc
pop
jge
andb
clc
add
add
out
jns
cmp
in
fcompl
mov
aam
pop
js
mov
xchg
icebp
repnz
daa
out
out
popa
sti
inc
push
stc
cmp
sub
push
test
ss
sub
cltd
pop
mov
sbb
mov
dec
lods
dec
outsl
loope
xchg
les
lret
mov
xchg
daa
push
ret
test
sbb
mov
es
mov
mov
ds
adc
adc
loope
or
inc
arpl
dec
mov
xchg
sbb
mov
test
mov
push
xchg
push
std
jmp
sbb
xor
and
push
enter
frstor
pop
lcall
pushf
roll
xor
popf
push
pop
pop
and
xchg
ljmp
ljmp
or
xor
xchg
jp
jg
sti
shlb
and
mov
movsl
iret
sti
sbb
sti
push
dec
repnz
cmpsb
cmp
imul
fdivrl
dec
addb
leave
jo
out
dec
lret
in
and
lods
pop
xor
inc
and
pop
inc
subb
push
and
adc
lahf
test
xor
lcall
pop
push
shll
cli
lods
or
sar
pushf
mov
mov
sbb
sbb
pop
imul
iret
jb
sbb
test
shlb
sbbl
push
cld
rorb
movsb
inc
cmpsl
push
leave
stos
loopne
lods
fs
je
in
mov
fcom
and
xor
add
aas
inc
cwtl
popf
xor
pusha
mov
scas
xchg
pop
rorl
int3
mov
lret
in
cmp
add
sub
push
pop
fwait
sbb
inc
add
loope
dec
stc
jns
incb
mov
push
ret
ljmp
pop
dec
xor
sarb
sti
arpl
push
insb
leave
mov
sbbb
cmp
aad
mov
pop
stos
jno
xor
stos
jo
sahf
adc
popf
mov
ret
inc
xchg
pop
fldenv
dec
dec
les
push
data16
dec
jg
sub
daa
push
sbb
pop
mov
add
push
push
xchg
push
mov
bound
mov
xchg
cmpsl
xchg
out
cmp
data16
insl
push
lods
push
sti
js
xchg
int
pop
cwtd
push
loop
cmpsl
es
fcoms
in
push
ds
xchg
inc
xchg
cli
push
out
and
lods
dec
cmpsl
scas
pop
jns
inc
out
das
sbb
sub
add
xchg
add
std
inc
mov
cld
sbb
push
cmpsl
loopne
xor
push
gs
push
pushf
fnstsw
mov
mov
outsl
int
pop
cmc
sub
enter
dec
fs
xor
mov
mov
sbb
dec
shl
lods
mov
fs
push
sahf
sti
add
push
jb
daa
les
mov
dec
mov
in
or
insb
in
jno
mov
sub
outsl
xor
push
cmp
fbstp
sarb
push
cmp
rclb
xchg
mov
sbb
ror
fmuls
inc
leave
dec
inc
xlat
outsl
adc
pop
jge
adc
enter
cmp
scas
jo,pt
mov
jbe
mov
shll
les
cmp
aaa
lock
adc
daa
or
imul
and
mull
push
ficomps
iret
out
and
loop
or
jg
je
adc
jp
nop
jnp
into
pop
ret
mov
adc
mov
xchg
add
fwait
ds
hlt
xchg
inc
push
push
stc
sbbl
rol
mov
call
mov
ret
arpl
mov
adc
sub
fucom
out
test
or
lcall
fdivrs
sbb
adcl
jge
callw
js
mov
cld
or
push
in
out
push
out
mov
pusha
xor
cld
cmp
decl
push
imul
jbe
out
pop
popf
dec
in
pop
mov
testl
add
cwtl
add
mov
leave
push
rcl
mov
das
outsl
shlb
cmpb
cld
repnz
sub
mov
aad
sbb
push
sub
jmp
push
jnp
lcall
fdivl
fwait
scas
popf
sub
aam
dec
cs
inc
push
inc
lods
mov
jno
in
das
sbb
imul
mov
jmp
insb
rorb
ficompl
sbb
add
test
xchg
xor
enter
pop
cmp
sbb
pop
mov
imul
mov
add
mov
stos
sbb
jno
sub
and
mov
adc
std
iret
stos
or
push
lea
lods
out
lahf
pop
push
push
test
mov
xchg
bnd
pop
sbb
pop
inc
scas
enter
mov
pushf
lahf
test
leave
out
test
loope
mov
lods
push
jl
fwait
xchg
imul
insl
push
xlat
mov
xor
mov
iret
dec
cs
jo
in
mov
loope
xchg
mov
push
loop
fmul
xlat
pop
loope
push
push
mov
pop
stos
icebp
xchg
inc
sbb
les
sbb
xchg
sub
adc
add
pop
outsl
cltd
xchg
int3
repz
jo
loope
mov
jle
hlt
incb
and
push
mov
in
push
ds
orw
dec
mov
aaa
xor
or
cld
scas
fnstcw
jp
sbb
sbbl
push
das
mov
dec
repz
testl
fs
or
loope
jbe
imul
xor
test
adcb
push
ret
adc
int3
pop
int3
pop
adc
in
push
fisttpl
push
mov
outsl
mov
mov
leave
test
mov
cmp
je
mov
leave
filds
pop
add
pop
and
mov
adc
dec
mull
test
lret
jbe,pn
test
fs
cmp
scas
das
cmp
jecxz
shlb
or
sbb
ljmp
lea
jnp
push
outsb
inc
gs
out
test
fistps
mov
pushf
ss
pop
fildl
popl
dec
mov
mov
ds
mov
ja
inc
push
push
dec
adc
push
lods
test
jns
out
cmp
mov
cli
shl
fldenv
sub
add
stc
dec
pop
push
push
push
or
ds
inc
pushf
sub
pop
sahf
arpl
pop
mov
stos
xor
leave
sbbl
ret
pop
ffree
lods
inc
add
pop
xchg
inc
sub
lret
loope
fsubl
cmp
mov
sbb
gs
ljmp
push
fstpt
imul
leave
lds
dec
mov
or
cld
sahf
dec
sub
add
loopne
fnstcw
sub
fsubrs
lods
cli
inc
enter
int
pop
movsb
ss
lds
add
in
push
pushf
pop
jno
pop
divb
jp
shrl
mov
mov
in
mov
xor
fiadds
dec
mov
lret
adc
mov
bound
roll
jl
and
subl
add
pop
jne
cli
call
jge,pt
sbb
dec
xor
cmp
add
popa
stos
orb
sub
stos
adc
sub
jle
lods
mov
mov
xor
inc
xor
ss
outsb
dec
rcll
aaa
pop
mov
scas
pop
dec
ja
xchg
andb
daa
into
ljmp
mov
pop
mov
mov
in
dec
ljmp
lock
ret
jb
dec
xor
mov
pusha
mov
adc
pushf
aaa
sub
pop
push
aaa
xchg
aad
pushf
fldl
and
cld
push
mov
sbb
mov
xchg
adc
fisubl
mov
sbb
sbbl
mov
cld
pushf
push
out
out
inc
xor
std
mov
xor
mov
dec
fisubl
xorb
cmp
jl
sub
lods
cmc
rcrl
add
dec
push
ret
mov
push
xchg
adc
out
jmp
mov
fldl
outsb
add
jl
push
cltd
stos
jnp
insl
jp
mov
sbb
aad
xor
cmc
cli
dec
int3
stos
cmp
dec
int
mov
dec
divl
mov
loopne
leave
lahf
mov
ss
push
jo
xchg
out
call
fwait
dec
pop
sub
icebp
ss
sub
sahf
insl
mov
testb
lret
fcompl
push
pop
and
push
xorb
jnp
scas
repz
sahf
sbb
dec
cmp
inc
adc
inc
outsb
xchg
aas
ficomps
jp
sub
cld
adc
add
aam
lods
sbb
mov
ror
dec
rolb
and
sti
gs
push
lcall
jmp
mov
cli
fnsave
cmc
jmp
pop
or
add
mov
mov
adcb
or
xchg
loopne
xchg
mov
mov
rcrb
pop
lods
mov
cltd
sarl
jecxz
outsl
aas
les
or
jae
sbb
arpl
xor
shll
mov
bound
inc
mov
in
sub
stc
addr16
xor
sbb
and
fwait
or
ret
xchg
movsb
les
fwait
in
cs
push
pop
jno
outsl
sub
xor
outsb
and
les
xor
rcr
faddl
aas
cmp
jae
loopne
push
pop
movsl
idivl
stos
sbb
mov
cmp
jne
cs
test
sub
adc
call
popa
aaa
dec
pop
gs
cwtl
or
repnz
cltd
movsl
dec
mov
cmc
xor
lods
ret
push
xchg
cmpsl
xchg
adc
mov
mov
pop
adc
mov
rcrb
adc
sub
addr16
push
inc
add
retw
das
sbb
sbb
daa
outsb
js
jl
loope
mov
pusha
xor
enter
xorl
add
ljmp
dec
sbb
push
xor
ljmp
mov
pushf
or
inc
sub
sbb
push
jecxz
pusha
fwait
or
push
xorb
mov
xlat
lds
sbb
subb
jns
and
xor
mov
xchg
aas
test
stos
mov
xor
jo
shlb
in
ficoml
aam
imul
sub
ror
mov
cwtl
nop
jo
out
sub
push
xchg
ficompl
adc
mov
mov
imul
fst
mov
and
cmp
mov
icebp
mov
fdiv
xlat
jno
mov
cmpsl
adc
insb
xlat
mov
loop
and
mov
pop
outsl
adc
xchg
jg
jl
loop
push
mov
mov
stos
imulb
jb
rorb
add
fwait
jns
int
sti
hlt
ljmp
pop
or
loope
mov
mov
enter
mov
dec
cmp
pop
cwtl
cmp
mov
mov
add
inc
cmc
mov
inc
mov
adc
lret
cmpl
adc
cmpsb
push
cmp
frstor
and
sbb
xchg
xchg
rcll
test
push
mov
sbb
pop
add
xchg
inc
jl
shll
fwait
pushf
mov
adc
nop
lret
adc
inc
or
xchg
je
mov
out
jnp
sbb
in
hlt
jns
fsubl
icebp
mov
adc
sahf
and
inc
aas
ja
shll
mov
ljmp
cli
pushf
std
sub
lock
mov
jne
mov
ja
add
push
lods
ljmp
popa
cs
test
test
aad
shrb
push
adc
pop
out
xor
xchg
push
test
push
xor
fs
cmc
test
jb
popa
dec
dec
icebp
pushl
adc
sbb
imulb
mov
shlb
push
movsb
cli
or
jno,pt
rclb
jo
jbe
cmp
xchg
push
fcmovnb
inc
cs
push
or
mov
out
dec
mov
loopne
scas
stc
lcall
dec
xor
stos
pop
ss
orl
rolb
lods
inc
lock
out
enter
add
inc
xchg
sti
inc
mov
jecxz
xor
ret
in
jge
inc
leave
push
dec
sub
pop
outsl
sub
sti
insl
cmp
sub
or
push
jg
std
loope
adc
dec
mov
cmpsb
loopne
jge
mov
aam
mov
jns
shrb
into
jmp
inc
jmp
test
loop
bound
test
mov
adc
xor
mov
lret
movmskps
filds
pop
out
mov
mov
jne
sbb
jmp
xchg
gs
pop
arpl
and
imul
in
ret
xchg
pop
add
cmp
leave
int
push
mov
dec
sbb
pop
inc
cmpsb
push
out
and
and
dec
sbb
adc
mov
das
aaa
insl
mov
push
fnstcw
add
fs
pop
mov
mulb
push
mov
jge
clc
mov
cmp
loop
out
stos
jno
icebp
inc
rclb
xchg
dec
and
sub
test
aam
aad
xor
aad
repnz
mov
stos
adc
jecxz
jns
inc
sti
repz
nop
dec
xchg
arpl
and
mov
inc
sbb
mov
jmp
aad
mov
adc
mov
mov
mov
sub
xor
cmp
adc
lods
cld
iret
mov
stos
xchg
movsb
lea
adc
push
outsb
or
adc
or
mov
loop
dec
lret
stc
adc
cltd
fdivs
idiv
mov
inc
in
mov
mov
movsb
aaa
and
xor
mov
add
and
lods
jle
mov
sbb
int3
xor
outsl
xor
mov
aad
pusha
popa
mov
mov
out
push
sbb
hlt
pop
jb
outsl
jge
xchg
and
stos
js
xor
sbb
out
sbb
adc
pop
inc
jecxz
in
sti
sbb
push
call
adc
stos
mov
mov
and
sub
aam
icebp
idiv
insb
in
das
aaa
loopne
sub
shrb
call
ljmp
bnd
push
test
pop
xchg
arpl
ja
add
fdivs
int
lock
lret
fisubrs
ja
or
clc
cmp
ljmp
or
ret
push
pop
mov
sbb
mov
fsubl
sbb
push
push
jp
mov
add
les
fldt
sub
js
xchg
nop
mov
repnz
xor
add
ret
add
fisttpl
daa
lods
push
xor
call
call
pop
hlt
adc
adc
sub
sbb
mov
lret
fbld
loopne
cmc
push
jg
mov
xchg
push
adc
mov
mov
sub
ret
leave
and
shlb
aas
jmp
jecxz
mov
leave
jne
sbb
mov
jo
or
push
xor
mov
xor
in
hlt
outsb
or
fistpl
lods
int3
mov
mov
hlt
lods
cltd
in
dec
decb
incb
mull
xchg
xor
push
fiadds
xor
lods
ficomps
fstp
popf
jl
movsb
in
cmp
iret
les
movsl
mull
fxch
cmp
adc
xchg
stos
ja
data16
je
and
ljmp
icebp
iret
es
lock
out
aad
cld
xor
and
sub
out
pop
addr16
xchg
cwtl
adc
adc
mov
inc
and
or
push
dec
inc
adc
sti
daa
dec
xchg
icebp
mov
lcall
xchg
filds
outsb
add
push
inc
popa
or
and
stos
mov
push
orl
push
ja
cmpsb
pop
pusha
jae
adc
mov
xchg
outsb
stos
and
pusha
mov
ja
xlat
cmpl
in
push
jne
test
stos
data16
push
loop
cltd
and
mov
and
scas
and
and
std
loope
aam
mov
inc
mov
push
mov
roll
imul
int3
jge
mov
xor
ret
je
xchg
sets
pop
push
cmp
mov
or
out
sub
add
imul
dec
call
test
jg
dec
test
jbe
dec
jl
xor
and
hlt
stos
jbe
add
inc
cmp
fsts
cwtl
cmp
sub
ja
xchg
mov
inc
popl
lds
pop
arpl
or
gs
and
xchg
push
dec
in
orb
sbb
mov
dec
and
or
xchg
repnz
jns
imul
xchg
fidivrl
cmp
scas
arpl
les
xor
inc
mov
jo
in
jmp
push
daa
ja
test
les
mov
in
push
js
jmp
and
add
mov
and
push
push
cwtl
rcrl
mov
idivl
sub
push
xchg
pop
aas
shrb
out
bnd
mov
jns
or
pop
xor
in
xchg
repnz
jns
adc
sbb
outsl
jae
dec
xor
test
shlb
adc
and
das
cmp
or
sub
sub
xchg
pop
sti
scas
sbb
lcall
push
and
popa
adc
xlat
shll
rcrb
sbb
sbb
out
mov
pushf
call
xchg
sub
fstl
jbe
loope
xor
scas
aad
shll
mov
push
out
mov
mov
sbb
xor
jnp
scas
push
in
or
movsl
push
sbb
cwtl
dec
inc
in
mov
add
mov
dec
daa
push
enter
les
repnz
iret
popf
mov
add
jne
jp
mov
mov
sbbl
pop
mov
lock
sub
cli
hlt
insb
std
shlb
cmpsl
lea
push
cmp
pop
xor
and
pushf
push
inc
sub
call
jae
add
add
je
fistps
xchg
decb
mov
and
jge
int
hlt
jge
sub
test
mov
imul
test
shll
or
sub
add
outsl
in
fnstsw
stos
mov
ficoms
or
sbb
dec
les
pop
repz
lods
push
out
lret
lods
shl
xchg
iret
mov
enter
fstpl
adc
push
mov
das
jno
inc
sbb
scas
roll
jg
nop
jo
mov
or
sub
in
sub
scas
xchg
inc
mov
pop
mov
dec
gs
addr16
dec
rcl
aam
aam
and
adc
sub
iret
add
stc
xor
adc
mov
cmpsb
pop
stos
loope
nop
jns
call
sub
sbb
iret
test
jecxz,pn
outsb
arpl
and
je
mov
and
push
adc
and
cli
and
dec
mov
and
jle
cs
mov
nop
outsl
cmp
mov
jb
inc
or
sbb
vmulss
mov
sti
xchg
decl
das
xor
mov
add
lcall
xchg
cmp
dec
out
aas
mull
push
pop
gs
es
cmpsb
mov
arpl
mov
push
fnstcw
lock
sbbl
cmp
jmp
in
sti
arpl
add
aas
pop
lahf
or
ret
and
or
cs
fists
popf
test
movsl
out
outsl
dec
mov
adc
sub
shlb
gs
cmc
mov
dec
xchg
repnz
dec
aam
test
pop
lods
push
fbld
inc
dec
sub
mov
lcall
movsb
xchg
bnd
sub
adc
sahf
ljmp
cmc
lock
mov
push
int
test
test
mov
bound
outsb
outsl
push
jmp
dec
xor
sub
fsub
loopne
sub
je
loope
rorl
lea
sbb
cs
fldenv
sbb
leave
or
int
stos
xchg
daa
data16
xchg
dec
movsb
imul
fsubp
in
in
xchg
ss
rolb
int3
or
and
inc
lahf
xor
dec
push
jns
mov
leave
leave
arpl
fidivl
or
dec
lahf
jns
scas
mov
mov
adc
and
mov
outsb
outsl
movsb
jo
imulb
aas
cmp
rorb
or
cltd
mov
dec
stc
pop
pop
data16
andb
jl
enter
jnp
adc
push
xchg
lahf
addl
jne
jnp
pop
cmpsb
and
frstor
arpl
xor
popa
shll
sbb
push
leave
lea
leave
rorl
leave
push
xor
nop
add
cmp
mov
scas
mov
cmp
dec
lahf
sbb
lahf
je
lcall
or
mov
gs
aaa
stos
aam
scas
or
add
ret
lea
mov
mov
dec
fwait
sbb
adc
je
daa
cmc
push
pushf
add
cmp
mov
cmp
mov
mov
cmc
xor
std
adc
call
insb
jg
xor
inc
mov
add
notb
in
and
and
aad
outsl
xchg
push
inc
repz
jbe
stos
aad
dec
mov
xchg
dec
mov
pop
rcr
lods
sbb
jnp
inc
mov
dec
dec
fs
jecxz
jecxz
loopne
push
xchg
pop
adc
jg
and
clc
xchg
dec
ret
or
inc
pop
cmpsb
adc
mov
adc
lahf
jne
sbb
js
or
pxor
jb
js
xchg
hlt
pop
dec
push
and
sub
out
movsb
adc
xchg
out
cld
std
popf
repnz
insl
push
add
pop
das
out
inc
in
cmpsb
inc
push
stos
push
or
jnp
inc
fbstp
sbb
sub
mov
dec
fnstsw
mov
je
sub
popf
pusha
pop
xchg
add
pop
jg
cld
xor
jecxz
nop
xor
stos
mov
out
cmpsl
test
rcll
and
cmp
mov
testl
mov
mov
idiv
or
stos
pusha
sub
sbb
sahf
mov
or
leave
dec
in
fisubrs
inc
cmc
decb
cwtl
inc
inc
adc
inc
cmpsl
into
clc
test
in
fisttps
pop
and
push
insl
nop
loop
in
sbb
dec
lea
out
or
test
lock
outsl
inc
cmp
mov
mov
loop
push
ficoms
scas
fbld
and
cwtd
cmp
popf
xor
js
adcb
push
orl
stos
lahf
popl
loope
pop
cwtl
fisttpll
mov
in
addr16
cmpsl
jne
int3
xor
in
xor
ss
sub
bound
and
add
inc
jbe
mov
out
std
push
cmpsb
mov
orb
lods
je
mov
mov
ljmp
mov
mov
sbb
in
mov
adc
push
ret
pusha
jp
cmp
in
mov
or
pushf
lea
hlt
cli
mov
adc
or
loope
daa
sub
adc
mov
popl
addr16
inc
jnp
xor
pop
inc
dec
sbb
testl
nop
addb
or
in
test
shrb
xchg
loop
cmp
xor
jp
sahf
add
jo
add
inc
enter
xchg
dec
jp
lcall
xchg
add
std
dec
push
pop
stc
xchg
movsb
mov
aaa
insl
out
jbe
sub
les
xchg
xchg
or
imul
loope
push
adc
negb
int3
das
shll
fisubrs
sub
jno
arpl
and
fisttpll
mov
movsb
out
jp
ficoml
out
lret
xchg
sub
pop
mov
mov
rcrl
jg
xor
popf
test
xchg
cwtl
fwait
mov
push
js
dec
pop
in
or
push
jae
xor
adc
dec
lock
stos
aad
mov
mov
lret
jmp
fwait
mov
loop
out
les
xchg
test
adc
mov
inc
bound
cmpsb
and
add
dec
sahf
cmp
cwtl
mov
xchg
cmp
add
ljmp
pop
scas
lret
rcrl
lahf
cld
push
inc
fdivp
or
add
fwait
mov
ljmp
popa
fldcw
lock
or
inc
sbb
leave
pop
sub
decb
jne
adcl
sarb
inc
outsb
add
and
out
faddl
adc
pop
popf
pop
add
ffree
xchg
mov
pop
lods
lods
or
mov
cmc
inc
enter
cmpsb
repnz
xchg
mulb
inc
stc
mov
cmpsl
sbb
je
daa
cmp
movsl
out
pop
mov
jo
add
cmc
or
or
mov
xchg
loopne
and
int3
jge
das
sub
and
and
jns
jg
mov
mov
and
pop
inc
or
pop
adc
orb
push
mov
xchg
or
lea
in
push
mul
repnz
mov
enter
daa
movsb
js
ljmp
cmp
mov
lods
pop
adc
in
push
cmpsb
sahf
mov
xlat
sub
cltd
xchg
pop
lahf
jne
sbb
jmp
in
xchg
adc
test
adc
mov
rol
or
mov
cmp
lea
inc
sbb
imulb
inc
jl
dec
lcall
push
mov
xchg
mov
rolb
call
int3
hlt
pop
ficoms
std
pop
jmp
and
scas
push
int
xchg
fs
bndstx
cmpsl
cmp
mov
and
mov
xor
or
add
and
cmp
dec
fidivl
lods
in
shlb
cmp
jns
adc
push
imul
les
cmp
jl
movsl
sub
cld
lea
inc
push
mov
mov
lods
jl
push
pusha
cli
jne
shll
xchg
lods
icebp
adc
or
enter
dec
mov
mov
add
pop
push
fwait
add
pop
sub
sub
and
jb
jle
jnp
adc
xchg
jmp
dec
mov
xor
stc
push
xlat
and
mov
and
dec
add
clc
cli
jbe
cmp
scas
imul
or
int3
jmp
out
outsl
adc
cmp
or
jmp
jno
pop
cmp
inc
pop
inc
sub
jnp
cmp
fstpt
xorl
ror
aaa
mov
sub
jo
sarb
and
mov
movsl
xchg
pop
notl
jne
test
fistl
sbb
cli
nop
inc
dec
push
mov
movsl
lods
and
and
addr16
adc
dec
pusha
mov
mov
or
rclb
or
sbb
sbb
pop
rcl
jbe
imul
push
shlb
stos
mov
popa
xchg
cmpsb
cmpsl
cmp
mov
mov
incb
mov
push
sahf
or
sub
mov
out
lahf
mov
push
jno
push
xchg
das
and
imull
mov
add
xchg
jmp
cmp
inc
bound
sub
frstor
sub
stos
or
jne
xchg
cmc
mov
in
push
jnp
or
inc
pop
jl
push
sti
std
movsl
jns
enter
sub
and
xchg
hlt
scas
in
stos
mov
and
scas
mov
aaa
mov
push
loop
out
or
sub
dec
sahf
dec
addr16
mov
aas
cmp
xor
and
ljmp
hlt
pop
loopne
je
xchg
jg
dec
sbb
add
lods
sub
jae
cmp
inc
test
xlat
ror
outsl
mov
pop
jno
subb
push
dec
das
in
cltd
out
cltd
mov
fimull
movsb
xor
pop
cmp
cld
icebp
mov
sbbb
fstpt
and
add
outsb
sti
je
sbb
movsl
mov
scas
xor
out
mov
and
out
mov
lret
les
cmp
jbe
nop
mov
xchg
sub
push
sbb
jnp
xor
in
sub
pusha
inc
fwait
push
or
enter
or
pop
outsb
fidivrs
push
aaa
jno
inc
dec
dec
mov
add
mov
loope
mov
push
pop
push
mov
imul
push
jb
mov
mov
fcmovnb
pop
dec
xchg
mov
jge
cmp
stos
mov
fistps
mov
int
inc
mov
loope
data16
pusha
mov
popf
inc
inc
dec
cmp
xor
fcomps
and
inc
add
fdivrs
mov
scas
push
push
cmp
pop
insb
mov
mov
outsl
fwait
pop
dec
push
xor
adc
test
lock
or
mov
push
lret
int
pop
arpl
pop
clc
test
push
in
xchg
lea
xchg
out
ja
pop
push
pop
arpl
pop
add
or
sahf
sar
mov
xor
mov
add
push
sub
pop
and
std
rclb
out
out
mov
sbb
inc
std
mov
and
jnp
pop
xlat
mov
mov
sti
stos
push
aas
jg
sbb
shl
fsubrl
pop
sbbl
adc
xor
fdivrl
fs
gs
popa
testb
mov
xchg
roll
jge
cmc
lds
xlat
mov
out
push
out
data16
notl
out
mov
into
dec
xchg
xchg
or
push
enter
sub
mov
mov
cld
or
lea
adc
mov
cld
push
fdivrs
dec
and
cmpsw
cmp
cwtl
aad
roll
sub
xor
mov
pop
xor
sub
call
push
add
mov
mov
cld
and
cmp
xchg
int3
aam
fmuls
lret
daa
rcrb
inc
xor
sbb
aas
movsb
mov
cmp
xchg
cmp
mov
dec
pop
pushf
subb
fcmovne
push
in
xchg
cld
shlb
ret
xchg
mov
xchg
stos
lds
cmpsb
xchg
imul
ljmp
xchg
out
mov
test
repnz
lea
call
push
push
jg
mov
fwait
call
cltd
inc
ja
push
xchg
addr16
ds
adc
jo
mov
xor
mov
sbb
mulb
sahf
mov
lds
sub
inc
mov
ljmp
pop
sub
xchg
mov
psubd
add
ds
sub
pop
in
and
jno
mov
cmp
sub
pop
pop
inc
outsb
or
and
repnz
shrl
mov
mov
xor
jnp
add
mov
bound
or
and
xor
cmp
sub
popa
out
addr16
sub
pushf
dec
scas
inc
sub
fwait
outsl
xor
mov
adc
mov
and
push
mov
adc
jp
jo
mov
in
mov
mov
sahf
psubusw
pusha
rcl
aad
lret
xor
dec
pop
sub
pop
cmp
sbb
add
out
cmpsb
xchg
pop
mov
shlb
sbb
pop
scas
in
in
ret
shl
dec
mov
adc
rorb
dec
xor
fsubrs
fwait
icebp
pop
push
iret
adc
inc
mov
push
and
xor
jmp
xchg
and
and
and
insb
jo,pn
add
xor
nop
bound
dec
cmpsb
inc
mov
push
jmp
adc
mov
es
int
jnp
cltd
fsubrl
outsl
bound
in
mov
fisttpl
ss
fidivl
sbb
sub
or
sub
jmp
popa
dec
push
adc
adc
pop
lret
push
cld
push
xchg
jo
shrb
cmp
jp
cli
movl
mov
pop
repz
in
sbb
in
and
mov
xor
or
jb
daa
cmp
ja
cld
dec
push
push
repnz
push
imul
xchg
mov
add
xlat
add
jge
xchg
je
mov
arpl
xchg
fcoms
out
add
push
call
dec
shr
sub
mov
jle
adc
test
ret
push
sbb
mov
fwait
xchg
and
fs
lods
bound
lahf
cli
jle
mov
xchg
jne
fwait
mov
fbstp
inc
stos
push
xlat
aad
xchg
out
lods
sbb
mov
jle
ljmp
sbb
clc
dec
dec
mov
sub
insb
enter
dec
xor
cmp
scas
push
xchg
sub
or
dec
xchg
out
push
jecxz
pushf
cmp
jecxz
pop
fucomip
xchg
repz
hlt
xchg
cmp
mov
pop
es
sub
aaa
sub
xchg
xchg
into
jnp
push
test
pop
subl
sub
push
out
jae
pop
pop
inc
jae
add
push
call
inc
jno
jmp
out
mov
dec
pop
jo
pop
lret
loop
xorl
sbb
and
jbe
mov
xchg
push
addr16
ficompl
in
mov
xor
insb
pop
jbe
das
stc
dec
jnp
dec
repnz
push
hlt
daa
scas
pop
add
sbb
push
sbb
inc
cmp
adc
stos
dec
or
sbb
mov
int
xchg
push
dec
call
bnd
jecxz
jecxz
push
xor
sbbb
daa
pushf
in
push
nop
scas
xor
fldl
xor
jge
push
xchg
mov
iret
test
sbb
xchg
test
scas
fs
xchg
inc
mov
sahf
insl
mov
scas
and
and
loop
mov
and
das
nop
movsb
icebp
dec
push
cmpsl
std
xchg
stos
inc
and
adc
in
out
sbb
mov
jo
scas
sar
and
dec
je
jb
xchg
sarl
stos
jmp
mov
mov
lahf
adc
or
adc
cmp
cmpsl
xchg
insb
push
std
or
jmp
and
pop
cmp
push
movl
dec
push
jb
and
testl
pop
dec
and
insb
and
push
mov
mov
popa
pop
push
push
push
cmp
scas
idiv
sbb
fsubr
cmp
jl
mov
push
push
pop
loope
dec
mov
fidivs
inc
adcb
or
pop
shl
cltd
pop
xchg
imull
inc
inc
xchg
or
inc
fs
sub
or
mov
mov
push
pop
push
clc
push
or
pushf
hlt
insb
fldl
clc
and
dec
or
xchg
je
or
add
add
hlt
and
pop
sub
hlt
inc
pop
lret
clc
push
xchg
mov
jmp
es
mov
mov
sbbb
jne
mov
jo
pop
out
or
push
lock
lods
or
out
ja
lods
and
dec
sbb
ret
jecxz
cltd
jbe
dec
jecxz
lret
int
nop
add
sub
call
push
outsb
xor
adc
leave
stos
loopne
inc
xchg
testb
or
and
pop
inc
push
nop
or
adc
xor
xor
push
test
in
stos
mov
xchg
int3
and
sub
inc
lods
fisttpl
inc
mov
xchg
cs
jno
int3
out
pushl
sbb
lods
test
call
add
push
sub
fwait
cli
loopne
mov
scas
arpl
repnz
pop
arpl
sbb
adc
mov
mov
jo
sbb
pop
jecxz
push
ljmp
iret
in
das
fimuls
nop
mov
pop
ss
adc
repnz
shrb
cld
adc
push
dec
lcall
nop
enterw
sahf
cmp
xchg
push
int
xchg
cld
std
lcall
jge
js
jae
enter
pop
mov
rorb
pop
or
lcall
imul
and
pop
jne
xchg
pop
andb
or
sub
xor
pusha
es
sbb
iret
xchg
repnz
lock
je
lcall
int
push
in
test
jns
in
cmc
ret
cmp
das
mov
insl
mov
dec
add
jg
loopne
inc
mov
dec
pusha
in
mov
sbb
call
mov
js
jb
lcall
scas
xor
pop
shrb
filds
aam
cmp
das
out
sub
mov
add
fsubl
fisttps
mov
mov
cmp
out
pop
das
push
jae
icebp
loope
push
repz
lock
or
mov
xchg
lahf
mov
lods
push
adc
and
fs
sarl
lds
fs
and
push
push
xor
push
mov
mov
ret
out
add
add
mov
inc
pop
push
push
cmp
xchg
or
arpl
xchg
outsb
popa
pop
imul
stos
pmuludq
loopne
adc
xor
loopne
mov
in
mov
ret
cmp
fldenv
mov
cs
idiv
push
scas
jg
loop
lret
mov
and
push
dec
add
nop
lods
sbb
notl
add
and
loop
pop
pop
mov
and
and
dec
inc
add
setbe
push
add
dec
std
roll
loopne
imul
int
dec
inc
cmpsl
leave
lcall
and
pop
pop
mov
cmpsb
sub
out
out
popf
pop
dec
jno
shll
or
push
mov
fisttps
insl
xor
in
sbb
ljmp
rcrl
jns
outsl
pop
xchg
push
sbb
adc
fldl
outsl
mov
ljmp
xchg
shl
fldenv
lahf
xor
pop
xor
cwtl
sub
sub
out
pop
out
fsts
aam
movsl
outsb
cwtl
push
and
and
or
leave
icebp
mov
outsl
mov
jne
mov
mov
xor
cmp
inc
push
xchg
adc
jne
bnd
inc
pop
dec
sahf
stos
cld
lret
clc
ljmp
loop
mov
pop
jb
movsl
mov
pop
xlat
mov
mov
mov
jmp
push
push
mov
dec
in
add
std
inc
pusha
push
pop
pop
out
notb
ss
or
jl
decb
mov
cli
sti
mov
jp
mov
xchg
ds
mov
inc
jno
mov
pop
sub
and
sub
lret
cmp
jl
mov
jge
sub
shrd
repnz
aas
jecxz
push
pushf
stos
or
pop
int
movsl
or
mov
jmp
mov
or
scas
mov
xchg
lahf
imul
rorb
loop
imul
mov
mov
jecxz
fldt
or
adc
dec
popa
js
xor
fcoms
mov
push
jnp
sbb
add
add
das
roll
iret
inc
push
in
jo
movsb
ret
sub
mov
dec
dec
inc
inc
mov
lahf
inc
pushf
ljmp
or
fisubs
outsl
cmp
iret
or
push
ret
aaa
enter
mov
inc
and
aas
repnz
lcall
inc
sbb
sub
sub
xchg
mov
test
bound
mov
dec
subb
scas
xor
pusha
int3
inc
lret
push
mov
xchg
mov
and
adc
jae
jae
pop
aad
mov
lcall
push
xor
pop
aam
addr16
mov
xchg
mov
push
xchg
mov
gs
jno
stc
mov
mov
and
sub
inc
push
pusha
or
sub
pushf
adc
and
aas
push
adc
es
mov
push
push
scas
push
test
jns
xlat
push
out
in
mov
jcxz
sbb
cmp
addr16
sub
inc
das
jns
mov
ja
jp
hlt
xor
add
pushf
xchg
inc
enter
bound
jp
outsb
movsb
sbb
adc
je
push
dec
lret
insb
cmp
aas
gs
pop
dec
adc
inc
sti
and
lea
jb
mov
popf
lret
xor
xchg
mov
dec
shlb
mov
divl
mov
addr16
dec
xlat
mov
push
xor
out
stos
int3
fxch
mov
adc
std
sbb
mov
movsb
mov
out
ljmp
incl
fwait
rclb
lods
xor
jp
in
sbb
jmp
popf
icebp
mov
inc
cmp
adc
in
rolb
and
js
and
adc
jmp
mov
dec
push
insb
xor
mov
jno
dec
pop
push
mov
sbb
xor
sbb
hlt
mov
dec
jnp
inc
ror
xchg
and
cmp
or
sub
cli
mov
push
push
pop
aas
in
addr16
jmp
push
push
shr
mov
add
cmp
sub
pop
or
int
ficoml
pop
out
xor
jb
les
pop
push
xorl
dec
mov
outsl
gs
movsb
inc
mov
iret
and
into
call
aas
outsb
repz
pushf
into
lods
xchg
movsl
sub
xchg
mov
mulb
popf
jbe
pop
out
and
cmp
loope
pop
in
rep
or
sub
jle
sbb
push
ret
neg
cmp
mov
pop
inc
sub
into
sbb
ljmp
xchg
ja
dec
xchg
mov
mov
cmp
or
jno
loope
pop
aaa
mov
imul
loopne
cs
xor
shl
lahf
sub
cmp
movsb
mov
sarl
lea
push
jmp
sbb
jp
or
test
cld
pushf
stos
push
adc
mov
movsl
jbe
fisttpll
push
roll
xchg
lods
and
ret
iret
rcrl
scas
ds
dec
cmpsl
fists
loope
push
rol
shrb
pop
mov
push
cmc
cmp
insb
stc
lods
mov
pop
jnp
jae
call
pop
and
idiv
into
mov
add
lds
adc
daa
cmpsb
popf
xlat
dec
and
dec
sub
cmc
dec
inc
and
aam
outsl
mov
in
mov
sbb
jae
sbb
dec
inc
scas
dec
pop
sarb
rorl
leave
adc
mov
scas
scas
pop
pop
loope
add
pop
jp
js
xchg
push
push
outsb
leave
insl
cld
shrb
jmp
imul
lret
sbb
ret
iret
inc
jmp
filds
stos
ret
addb
cmp
sbb
mov
jne
orb
les
cwtl
movsl
sub
mov
inc
rcr
mov
sub
iret
decl
repz
push
jecxz
xchg
scas
pop
mov
and
sbbl
push
jmp
mov
test
dec
jo
adc
jo
leave
xchg
popa
cld
incl
ud2
out
mov
aad
xchg
pop
xor
or
out
dec
or
imul
jo
pop
pop
jo
mov
mov
push
cmp
xor
adc
xor
pop
arpl
loop
movsb
lock
or
mov
push
push
je
lret
cmp
inc
sbb
add
and
inc
sti
push
fstl
sti
sbb
fiaddl
rolb
ja
adc
cmpsl
mov
jmp
mov
mov
or
int3
lcall
cwtl
mov
cld
into
ja
push
and
xor
xor
or
aad
aaa
sub
hlt
rolb
mov
xor
and
aas
xor
into
fdivrs
pop
pop
sti
add
negb
stos
push
pusha
clc
mov
imul
mov
and
push
cmp
pop
insb
imul
icebp
fcomip
mov
pop
jae
in
add
xchg
or
cld
inc
pop
cmpl
inc
push
arpl
adc
pop
push
aam
cmp
loope
mov
fistpll
div
inc
jno
stos
sbb
out
adc
lret
mov
pxor
cmp
mov
mov
mov
lahf
add
hlt
pop
sbb
xor
testb
lcall
cs
mov
aad
cmpsl
cwtl
shrb
lret
sbb
lods
pusha
les
sub
jp
pop
hlt
jecxz
hlt
mov
addr16
aas
cwtl
fisttps
dec
inc
ds
popa
addr16
dec
loope
push
xchg
cmp
mov
loop
adc
hlt
pop
rcrl
xchg
jg
add
subps
fisubrs
bound
out
aam
cwtl
in
xor
inc
sbb
lahf
mov
leave
gs
je
repz
adc
arpl
fldenv
mov
inc
lods
repnz
lods
adc
xor
jo
sbb
fdivl
daa
adc
mov
or
pop
pop
inc
out
mov
pop
repz
push
insb
movsl
leave
mov
in
mov
xor
sub
notl
lds
sbb
ljmp
int
pusha
pop
lahf
in
mov
sub
je
pop
adc
mov
cmp
sbb
xchg
pushf
jge
arpl
pop
lock
nop
out
xchg
lods
into
addr16
gs
jecxz
daa
dec
out
test
inc
mov
pop
xchg
jne
mov
lret
xchg
shrb
adc
cli
sub
lds
xchg
repnz
push
jg
pop
mov
and
push
jge
stc
jmp
cmp
push
push
js
push
out
imul
jo
add
aaa
cmp
add
and
hlt
repnz
xor
sub
cmc
int
dec
les
jge
ja
mov
fdivl
adc
sub
cwtl
popf
pop
mov
pop
stos
dec
or
addb
insl
xor
popf
lcall
mov
imul
in
filds
sub
std
or
cmp
dec
aam
inc
and
dec
xchg
cmp
adc
sbb
pop
xor
mov
cmp
sub
jge
pop
xchg
test
lcall
insl
sbb
add
movsb
movsl
adc
lret
mov
or
out
adc
adcl
pslld
xchg
pop
rorl
rcrb
ljmp
push
mov
mov
lcall
jnp
sub
xor
sahf
xchg
ljmp
cmpsl
divb
dec
or
jae
fisubl
in
mov
jecxz
es
adc
add
std
push
sub
mov
xor
data16
and
pop
stc
data16
fsincos
mulb
enter
aaa
adc
arpl
sub
mov
sti
std
mov
mov
sbb
add
repz
inc
sub
aam
ljmp
das
sub
lods
rolb
fists
pop
xchg
adc
enter
mov
mov
xor
pop
pop
push
andl
pop
scas
mov
pop
xchg
outsb
loopne,pt
mov
and
jnp
dec
mov
sub
sub
or
mov
dec
jnp
shrl
and
lahf
xchg
rorb
fsubl
test
inc
sub
icebp
mov
in
ret
inc
mov
jnp
and
push
hlt
es
fisttpl
add
jbe
add
push
outsb
pushf
dec
movsl
arpl
in
fs
adc
cmp
inc
inc
or
cmpsb
push
aam
dec
and
je
das
xor
pop
in
jae
daa
sbb
xorl
sbb
fcmovb
mov
push
popf
pop
mov
add
roll
fdiv
xchg
push
xchg
xor
cmp
rcrb
leave
pop
dec
pcmpgtw
or
ficomps
insb
stos
or
mov
adc
cwtl
mov
cmp
lock
js
push
pop
push
lret
sub
scas
add
imul
fs
aam
flds
and
popa
scas
lods
pop
jbe
adc
inc
jo
jns
lret
mov
int
int3
xor
sub
or
and
mov
call
stos
popl
push
or
sbb
push
lds
das
xsha1
cmpsb
dec
mov
rcll
xor
mov
cmp
mov
or
jmp
mov
imul
icebp
aaa
jbe
aaa
sbb
pusha
inc
insb
and
push
nop
adc
and
pop
cs
cmp
mov
mov
inc
mov
xor
js
cmc
pop
jae
scas
cmp
inc
aas
dec
mov
jle
jne
mov
mov
mov
fisubl
mov
repnz
cwtl
add
mov
cmpsl
lahf
jno
test
jo
push
imul
lds
dec
xchg
int3
cld
inc
and
test
jecxz
repz
jb
adc
and
jp
adc
push
inc
mov
mov
sub
jnp
out
sbb
jle
pop
mov
sbb
xchg
add
and
add
mov
aaa
xlat
dec
or
adc
cltd
add
test
lret
fiadds
mov
stos
mov
aaa
xchg
sar
mov
enter
or
pop
push
xchg
das
mov
leave
xor
dec
sbb
ljmp
mov
mov
shl
xchg
cmp
jbe
sbb
shrb
mov
sbb
sub
pop
inc
nop
int
lods
fistpl
out
sub
aad
cmc
jp
mov
push
cld
add
sub
cmp
cmp
push
inc
hlt
pop
lret
mov
pop
rcl
cmp
int3
into
jae
jb
xchg
jle
es
mov
adc
or
jle
mov
int3
mov
dec
push
sub
insb
call
inc
imul
and
xchg
add
inc
cmpsb
sub
mov
xchg
xor
mov
movsl
xchg
add
mov
test
push
loop
aad
loopne
pop
mov
pop
cmp
mov
inc
xrelease
mov
loopne
mov
into
fwait
popf
mov
or
out
pop
xchg
sbb
imul
push
and
mov
xorl
arpl
pop
mov
js
xchg
mov
ds
push
mov
ljmp
push
push
jmp
lods
sub
cs
push
jge
div
addr16
inc
ret
shlb
cli
add
mov
inc
repz
and
cld
or
mov
insl
adc
mov
push
scas
fisttpll
dec
in
fsubl
or
push
dec
lock
cmp
cmpl
adc
ret
pop
jecxz
cmp
les
orl
xlat
ljmp
lret
mov
cmpb
into
cld
loop
out
mov
hlt
test
push
mov
or
jmp
mov
aad
stc
adc
push
mov
vmread
inc
or
or
outsb
sbb
nop
cmp
test
popf
jns
inc
xchg
cmp
lods
pop
push
mov
sbb
out
pushf
adc
pop
dec
das
adc
cmpsl
dec
fnsave
es
mov
mov
jl
repnz
ret
inc
mov
push
out
incl
pop
push
lret
lret
add
xchg
dec
add
popf
mov
addb
test
rcrl
fsubp
daa
stos
ret
cmc
ret
xchg
mov
cmpsb
jmp
es
dec
push
mov
lock
push
outsl
cmp
cltd
in
xchg
pop
cmovae
mov
inc
add
add
psubq
pop
mov
movsl
jp
push
mov
adc
daa
lret
dec
push
ror
movsb
gs
lret
mov
into
repz
and
mul
mov
insb
pop
movsl
xchg
xor
xor
adcl
dec
inc
mov
mov
xchg
jp
test
xchg
fistl
and
jae
les
cmpsl
insl
jle
addr16
jnp
or
fadd
test
iret
cltd
bound
test
mov
add
dec
jge
in
and
and
mov
scas
fwait
mov
cltd
pushf
and
je
pop
ret
fdiv
incl
inc
outsl
inc
mov
jbe
push
mov
dec
testb
cli
iret
dec
adc
xor
mov
cmc
movsl
mov
mov
repz
pop
in
jl
das
shl
clc
insl
lahf
dec
les
xchg
pop
mov
sub
pop
arpl
dec
adc
or
xor
inc
cmpsb
mov
jnp
bound
je,pn
shll
pushf
cmc
mov
or
and
dec
addb
in
mov
mov
inc
call
pop
pop
pop
push
push
pop
loope
mov
cmp
pusha
push
out
push
adc
cmp
mov
in
inc
mov
mov
sub
mov
daa
dec
std
lock
fldl
cmp
xchg
xchg
shlb
gs
sbb
pop
cmp
pop
cmc
iret
mov
sbb
mov
mov
pop
pop
scas
push
or
addr16
mov
lcall
add
mov
mov
movsl
ja
xchg
aaa
jge
and
lock
adc
mov
xor
popa
clc
or
cli
sub
idiv
and
sub
lea
mov
xlat
dec
adc
xor
fcoml
insl
xchg
icebp
inc
ss
in
ja
mov
dec
out
cs
pop
cmc
push
cmc
call
cmp
inc
pop
outsl
add
cld
test
adc
add
aas
or
dec
into
in
mov
lahf
jnp
fwait
lock
mov
xor
sub
sub
mov
mov
mov
shll
repz
dec
jg
movsl
mov
cmpsl
sbb
mov
push
fcoml
sub
push
gs
std
ret
sbb
or
add
xor
mov
sbb
or
dec
push
movl
rorl
or
fs
daa
imul
fwait
sbb
pop
jae
push
jge
pusha
push
stc
cmc
xchg
fiaddl
mov
sbb
shll
inc
es
jp
cmpb
add
or
js
dec
les
and
jle
cmp
jmp
cmp
xchg
jbe
mov
sbb
add
fcomps
mov
mov
pusha
das
dec
inc
mull
int
fnstsw
nop
or
xchg
inc
pop
sti
pushf
mov
push
mov
rcll
in
bswap
cltd
mov
stos
and
cmc
rclb
pop
sbb
mov
test
mov
rorl
loope
jno
and
and
nop
jae
mov
xor
shr
ja
inc
jecxz
add
lods
and
jne
test
mov
push
and
cwtl
lret
adc
adc
dec
mov
jns
lods
imul
loopne
pushf
pop
pop
ljmp
xor
push
aad
mov
jb
pop
mov
and
sub
and
scas
outsl
lods
push
jl
push
and
pop
rcr
jmp
mov
jns
mov
xor
ljmp
clc
mov
ja
sub
inc
sbb
pop
push
or
mov
sub
scas
dec
mov
add
divl
add
arpl
xor
or
jbe
pop
mov
push
mov
insb
jae
mov
bnd
pop
cmc
or
push
mov
cmpsl
adc
and
mov
xchg
and
or
inc
sarb
add
repnz
daa
jp
into
pop
enter
ss
loope
inc
incl
popf
les
es
js
adc
lret
push
inc
pop
nopl
shl
stos
push
inc
mov
addl
jge
fnsave
xor
xor
inc
imul
fidivrl
xchg
mov
fs
push
jne
lea
scas
mov
add
pop
mov
cmpsl
pop
push
imul
orb
in
xchg
fildl
lods
sti
aaa
insl
aam
loope
adc
xchg
mov
insb
stos
iret
pushf
xor
cmpsl
aad
or
std
xchg
insl
jne
mov
mov
ja
pop
pop
inc
stos
pop
inc
sub
mov
xchg
sub
movsb
push
cmp
inc
inc
push
cli
sbb
xorb
dec
and
lds
flds
cmpsl
adc
dec
cmp
aaa
imulb
stos
pushf
rorl
rorb
or
dec
mov
add
mov
cmpsb
push
clc
pop
cs
fs
pop
jne
sti
cmpsb
mov
lea
inc
popf
lods
xchg
sbb
test
jno
dec
cmpsl
test
into
add
inc
clc
sbb
sub
sahf
shlb
push
jg
in
xchg
sbb
jae
mov
lahf
std
ja
pop
lods
ret
lret
dec
movsl
push
fcoms
and
ja
jp
int
push
and
popf
or
cmpsl
mov
mov
adc
testl
seto
stc
das
les
repz
into
inc
sbb
lds
xchg
sti
inc
cmpsl
mov
adc
aas
sbb
sub
pusha
add
xor
pop
add
data16
sub
aas
add
pushf
jle
stos
fisttpll
cwtl
inc
scas
ds
mov
sbb
mov
movsl
sub
xchg
mov
repz
mov
scas
mov
push
bound
loope
pop
mov
fdivs
mov
daa
jae
lret
addr16
movsl
lea
sbb
jg
mov
outsb
xor
mov
mov
and
cs
inc
sti
in
enter
repz
pop
mov
mov
test
scas
ret
repnz
sbb
sub
sbb
sbb
xchg
jns
mov
adc
or
std
std
jp
xchg
lds
and
aaa
stc
sti
add
push
xchg
xchg
push
inc
enter
push
mov
loop
outsb
add
cmpsb
sub
cmc
fnstenv
jle
cmpsb
into
cmp
push
xor
leavew
loope
inc
ljmp
int3
pop
adc
push
popf
push
add
bnd
xchg
add
dec
pop
cwtl
cmpsb
arpl
xchg
jnp
add
jns
and
push
sbb
inc
fadds
or
insb
pushl
or
pop
sub
dec
icebp
popa
rcll
sub
jp
push
flds
pop
jecxz
mov
xchg
sbb
lret
rclb
ja
stos
lcall
jecxz
mov
in
push
rol
xchg
adc
pop
scas
mov
std
jae
out
or
pusha
pushf
pop
popf
enter
jmp
mov
inc
sarl
ds
gs
pop
in
repz
out
stos
sub
pop
sarl
or
aam
pop
adc
push
pushf
decb
xor
dec
push
fdivrl
insb
pushl
mov
add
or
iret
xlat
sub
leave
mov
jmp
cld
jecxz
dec
scas
xchg
das
mov
pushl
orb
ds
add
pop
outsb
sbb
mov
mov
nop
mov
lods
call
push
jge
sbb
dec
mov
mov
pushf
cmp
mov
pop
andl
mov
adc
aaa
mov
pop
scas
dec
fcomps
je
cmpl
stos
clc
jle
stos
xor
xchg
aam
and
sbb
clc
lret
lods
ret
in
xchg
mov
mov
adc
mov
sub
clc
sahf
test
xor
dec
mov
inc
ds
mov
xchg
push
push
sbb
int
test
lds
iret
aad
out
inc
xchg
xchg
stc
or
add
sbb
mov
lahf
mov
push
cmp
push
lret
icebp
stc
rcrb
ret
cmpxchg
or
push
xchg
enter
adc
jle
sub
mov
and
inc
js
pop
fsub
lret
sbb
fadds
mov
push
inc
lret
jl
pop
aas
ja
cmp
aaa
mov
les
pop
cmp
sti
int3
arpl
dec
outsl
enter
push
les
lods
cmp
cmp
cmp
js
mov
test
and
movsl
das
or
xchg
add
sub
push
sbb
iret
cmp
pop
cmp
bound
xor
insb
xchg
es
and
push
sbb
mov
inc
mov
mov
inc
insb
incl
ret
repz
add
mov
cld
shlb
jp
mov
lods
insb
pinsrw
pushf
mov
pop
stos
pop
xor
test
outsb
mov
dec
inc
mov
sub
stc
cli
dec
xchg
es
sub
loopne
loope
shrl
filds
stos
cmp
xor
add
push
repz
jmp
in
fistps
mov
int3
ja
push
pop
imul
or
fbld
jne
lcall
arpl
shlb
call
adc
js
pusha
xchg
or
jmp
nop
push
lahf
pop
inc
int
xlat
mov
imul
bound
sub
sbb
mov
xchg
jno
mov
or
add
mov
in
mov
out
inc
inc
insb
fimuls
jg
jns
mov
push
stos
or
sub
mov
or
sbb
in
pop
fsubr
movsl
sub
fisttpll
sub
cmp
or
xor
ss
lea
fs
push
mov
mov
rol
aam
sbb
push
lods
pop
sub
les
out
fwait
test
movsb
rcll
test
int
lahf
cmc
xchg
xor
ja
rolb
sub
lret
loope
scas
jg
jo
mov
sub
in
call
adcl
imul
leave
mov
mov
xchg
pop
mov
dec
mov
out
aad
push
jbe
cmc
inc
arpl
out
stos
testl
mov
xorb
call
xchg
loopne
insb
jbe
push
cmp
jae
cli
insl
push
icebp
sbb
add
xchg
lds
out
pop
push
cmp
in
loop
adc
inc
popa
in
add
inc
daa
lds
lds
sbb
xor
jno
mov
jno
pmaxub
imul
stc
int
and
cmp
mov
dec
adc
sbb
pop
adc
nop
int3
fcmovnu
xor
jnp
es
das
aas
adc
cmp
mov
mov
aas
in
push
lock
popa
lahf
loopne
jo
jo
dec
or
cmp
pop
mov
adc
divb
mov
inc
scas
pop
iret
mov
cmpsl
sahf
pop
cwtl
jnp
lret
rolb
xor
fisttpll
cmp
outsl
cli
popf
jnp
sub
cmp
out
ss
ljmp
into
shl
mov
and
jmp
mov
cmp
dec
push
cmpsb
lret
in
lret
xchg
or
mov
add
nop
or
shrl
pop
sti
mov
jmp
xchg
sbb
mov
int
leave
xor
repz
test
aad
pop
jge
pop
outsl
jp
lret
lock
pop
loopne
and
es
outsl
nopl
out
faddl
sub
mov
push
std
add
cs
ljmp
adcb
ljmp
int
pop
mov
push
mov
mov
push
jbe
adc
sub
ret
call
mov
cltd
out
adc
insb
pop
mov
data16
dec
std
aam
test
pushl
bound
sub
inc
pushf
xorb
sub
mov
add
mov
call
lahf
push
fmuls
nop
push
mov
cmovb
push
icebp
pop
data16
in
jge,pn
and
xchg
scas
mov
aas
enter
jmp
jp
xor
popa
and
inc
xchg
lds
hlt
xor
jb
dec
push
jmp
rcrl
add
adc
test
or
mov
nop
pop
jo
outsl
push
mov
les
pusha
add
dec
and
inc
andb
dec
shl
pusha
fsubl
add
xchg
insb
jg
adc
mov
inc
insb
dec
clc
fistpl
cld
aam
movsb
push
jbe
pop
clc
mov
xchg
outsb
xor
dec
add
add
mov
sbb
pop
cmpsb
or
cmp
and
jne
jle
ret
dec
push
adc
fldenv
cmp
dec
loop
mov
rolb
xor
pop
add
mov
cwtl
dec
inc
sub
fstl
adc
push
push
push
cmp
xchg
outsb
pop
push
ss
nop
mov
cmp
add
fsubrs
stos
or
cmpsl
xchg
insb
cmp
pop
xor
inc
lea
sahf
mov
adcl
cmp
cld
repnz
mov
push
add
nop
enter
adc
ja
or
out
notl
test
dec
adc
xorl
fiaddl
cmp
push
out
repz
sub
pushf
sub
bound
bound
jnp
cwtl
orb
xchg
fstl
pop
sub
mov
mov
cmc
dec
in
cmp
test
dec
pop
push
xchg
icebp
xchg
cwtl
outsb
or
into
xor
xchg
pop
xchg
in
jl
pop
lret
or
or
jl
or
mov
je
dec
aas
nop
xlat
icebp
and
mul
les
gs
pushl
ss
nop
js
pop
sbb
pop
fldenv
pop
pop
and
rol
ds
push
xchg
rorl
lret
addr16
aam
cmp
sbb
mov
popa
adc
xlat
or
out
xorl
xchg
push
inc
mov
mov
mov
fmuls
lock
mov
sti
or
xchg
mov
sub
lahf
jae
aad
xchg
out
fbld
adc
mov
push
adc
xchg
cmp
pop
nop
iret
dec
lods
fcoml
sti
sbb
adc
push
scas
sbb
mov
jmp
arpl
jbe
cmp
add
aaa
das
lea
push
icebp
std
xor
hlt
mov
test
add
dec
aad
daa
icebp
movsb
aam
adc
jge
not
rclb
dec
and
mov
adc
fs
fnsave
stos
and
lods
pop
pop
pop
push
mov
xchg
mov
pop
cld
orb
sub
scas
mov
push
and
mov
outsb
jp
mov
scas
jo
sub
pop
cmp
cmc
or
popf
pop
add
inc
adc
push
and
ret
push
insb
pop
cmpsb
test
in
mov
stc
inc
and
mov
mov
dec
xor
xchg
rclb
mov
xchg
cmp
jb
les
dec
xchg
xor
std
orb
ljmp
jle
loop
or
in
in
dec
xchg
mov
je
inc
ljmp
pop
bswap
test
js
rol
enter
add
mov
pop
mov
ljmp
ret
add
dec
lea
xchg
add
sub
test
lret
test
outsl
fwait
adc
fimull
inc
push
xor
push
or
sbb
add
cmp
xor
std
push
cmp
dec
xchg
rcll
clc
insl
rorb
dec
lahf
testl
out
aas
fists
out
or
jecxz
mov
fs
mov
inc
inc
pop
dec
jo
push
pop
daa
lods
fistpl
mov
sar
pop
and
ja
sbb
gs
dec
or
or
stos
sbbb
cltd
shll
sbb
ja
pop
mov
lock
adc
arpl
cmp
das
pop
sub
aas
inc
add
insb
rcll
pop
imul
clc
jp
clc
sbb
mov
mov
rcr
push
mov
cmp
fs
cmp
xchg
sub
ja
jmp
dec
es
sbb
xchg
iret
loop
jae
adc
inc
ss
mov
adc
aam
int3
lret
xor
xchg
jns
jl
shrl
dec
jle
add
int
les
inc
push
out
xor
push
inc
fistpl
push
add
orl
test
cmp
inc
loopne
push
dec
lret
push
sub
dec
sti
js
mov
sub
and
sti
daa
dec
daa
aaa
jno
mov
mov
or
bnd
ljmp
pushf
cmp
and
nop
dec
clc
fsubrl
outsb
ds
movsl
shlb
cmp
pop
out
sahf
movsb
mov
enter
sbb
mov
adc
insb
lret
lock
fwait
mov
sub
add
in
cmp
inc
outsl
loop
insb
imul
popl
cld
or
inc
sahf
xchg
inc
fisubl
sub
mov
lods
mov
and
push
movsb
and
ja
repnz
pop
lret
iret
mov
mov
cwtl
jge
int3
mov
fcoms
jnp
cwtl
jnp
call
mov
mov
scas
aas
je,pn
xchg
jns
cmp
cmp
mov
mov
mov
jbe
mov
cmovp
xor
ss
repnz
in
outsl
gs
loope
scas
xor
sarl
fs
scas
dec
xor
jo
cmpsb
mov
movsl
ret
mov
insb
aad
xor
push
add
and
sbb
add
iret
mov
and
push
push
pop
push
ja
fucomip
loop
shrl
xor
mov
jl
xlat
or
pop
jno
sub
xchg
inc
adc
lods
adc
pop
push
inc
stos
sub
or
dec
call
imul
xchg
and
iret
jo
mov
aaa
scas
push
nop
inc
fistpl
shlb
fiadds
out
jns
push
fstps
leave
dec
ja
bound
xor
cs
mov
hlt
ds
jo
sub
outsl
insb
pop
aas
stc
xor
setl
lds
or
test
xor
pusha
sbb
pop
or
loopne
mov
inc
xor
pop
movsb
in
xor
sbb
inc
cmp
sub
sbb
dec
mov
ror
aaa
xchg
inc
pop
mov
ljmp
pop
xchg
jns
les
cmp
mov
jg
iret
adc
outsl
icebp
fwait
imul
add
sti
cs
mov
xor
ret
lcall
arpl
pop
mov
adc
out
movsb
adc
ds
popa
stc
push
cmpl
push
stc
mov
dec
push
and
jge
push
xchg
xor
sbb
dec
out
xor
adc
mov
and
inc
ret
sbb
nop
cmc
xorb
push
lods
je
shl
pop
insl
in
clc
xchg
ljmp
cwtl
jne
jle
dec
gs
fistl
jl
or
jmp
shr
fucomi
lret
rcrb
loopne
and
and
mov
jl
data16
out
inc
loop
adc
jp
test
cmpl
push
jge
sbb
pop
shrl
mov
cli
adcl
jnp
cwtl
test
mov
adc
je
pop
sub
jmp
pop
dec
jo
ret
and
or
js
fisubs
inc
xor
or
aad
sbb
or
adc
jle
or
hlt
mov
sub
cmc
mov
call
enter
adc
add
mov
je
pop
mov
clc
inc
ficoms
dec
imul
push
insl
into
or
xchg
cwtl
push
push
or
and
imul
fsubl
mov
sbb
jnp
or
xchg
xor
popa
and
das
rorl
sub
idivb
sub
out
dec
xchg
or
ja
inc
addb
roll
insb
and
in
xchg
dec
cmpsb
out
pop
ret
cmp
ds
in
call
cmp
sub
xor
dec
add
xchg
mov
sub
inc
cmp
xor
mov
mov
outsb
ret
sbb
xor
leave
inc
shll
sbb
pop
aam
jb
mov
sbb
cmp
fisttps
push
flds
loop
xor
xchg
les
lods
sbb
pop
mov
inc
dec
movsb
or
ljmp
rcrl
sahf
mov
test
dec
mov
adcl
xchg
fstl
add
dec
push
in
cwtl
adc
test
bound
roll
mov
mov
sahf
jne
add
or
jnp
inc
test
sub
cmp
cmp
fisubrs
fstps
test
pop
pop
bound
push
mov
scas
cmc
stos
in
xchg
int
enter
push
adc
loopne
pop
hlt
and
decb
rol
jecxz
push
filds
rorb
in
jl
and
call
push
mov
mov
push
pop
ficompl
sbb
out
adc
icebp
insl
das
sub
in
sub
icebp
cmp
inc
mov
mov
push
call
cmp
aam
fnstsw
add
into
sbb
pop
jmp
hlt
add
jmp
mov
clc
movsb
jnp
mov
adc
repz
adc
or
or
pop
addr16
sahf
cs
lahf
arpl
push
inc
into
dec
inc
test
test
push
and
in
and
out
xchg
dec
pushf
loope
out
dec
nop
mov
jae
xor
sbb
fs
jmp
stc
xor
xchg
push
xorl
push
pop
dec
jbe
mov
inc
jb
xlat
fstpt
mov
rolb
mov
cmpsb
or
or
fidivl
insl
ret
cli
sub
popf
mov
xor
cmpl
mov
aas
idivb
rcrb
pop
stos
pop
fcoms
mov
pushf
testl
fwait
xlat
inc
xchg
add
imul
xor
sbb
xor
dec
scas
cmp
xlat
stos
arpl
or
scas
sub
jae
cmpsb
or
adc
push
pushl
js
fwait
imul
push
sbb
int
xchg
push
daa
call
xchg
push
iret
add
fnsave
xchg
rcrb
add
or
neg
pop
add
jo
xchg
fnstcw
push
fiadds
ror
sbb
cmc
sahf
in
loopne
lods
and
test
pop
adc
mov
cltd
pushf
mov
scas
inc
mul
movsl
test
sbb
in
sbb
cmc
mov
sub
inc
cmp
cltd
jnp
dec
bound
jg
rol
test
bound
jnp
clc
inc
into
and
bnd
jmp
rcrb
mov
sbb
icebp
jbe
sti
loope
jno
subb
es
dec
lcall
test
or
xor
fnsave
pusha
add
push
dec
push
repz
cmp
daa
xchg
dec
xchg
mov
mov
loopne
xlat
cmc
mov
in
iret
push
int
pop
inc
inc
push
insl
rclb
adc
in
or
stc
add
adc
test
in
in
xor
mov
call
sub
cmpsb
and
inc
ds
jl
pop
and
sub
xchg
nop
aam
xor
test
inc
data16
dec
fbld
jne
adcl
js
mov
mov
ja
adc
cli
mov
movsl
popa
in
mov
pop
decb
lret
or
jmp
cld
fs
adc
aam
mov
pop
ja
js
cs
pop
orb
lcall
sub
jae
push
cltd
mov
xor
mov
std
notl
gs
mov
push
sbbl
inc
or
lds
mov
xor
leavew
imul
dec
and
aas
xor
jb
cmc
mov
xchg
imul
mov
mov
ret
fwait
scas
mov
imul
and
dec
cs
xor
adc
bswap
xchg
add
jle
dec
loope
dec
or
dec
sbb
sub
ret
cmp
jae
mov
fsubr
sub
xchg
cmpsl
mov
cmc
gs
push
dec
orb
push
sub
rolb
push
pushf
pop
push
imul
addr16
pop
pop
scas
or
mov
push
popl
push
jo
insl
adc
jge
sub
pop
pop
or
fwait
xchg
loope
sub
jae
and
in
push
add
xchg
jmp
pop
sahf
pop
add
adc
cltd
xor
push
xchg
shrb
push
mov
pop
pusha
sub
pop
dec
jle
mov
xor
add
push
mov
fistpl
push
push
pop
push
inc
pop
pop
lods
push
add
lahf
adcl
add
pop
xchg
push
mov
jecxz
in
push
cs
and
mov
leave
lcall
mov
stc
pop
arpl
or
lods
sti
aam
aad
fldl
imul
cmpsb
dec
pusha
xor
lret
cmp
sarb
sahf
adc
vpsubw
mov
popf
in
stc
push
aam
and
notl
int
xchg
rcrb
mov
int
test
fsub
xchg
push
not
jmp
arpl
movsb
loopne
jl
stc
mov
mov
xor
rorb
fldenv
in
iret
pop
sbb
and
pusha
incb
fisubrl
repnz
daa
push
or
lret
outsl
adc
cmp
fs
xor
stos
fidivrl
pop
pop
call
fsubrl
push
enter
push
in
add
cwtl
mov
ret
pop
js
xor
mov
inc
inc
dec
adc
cmp
sti
aad
ja
repz
nop
sbb
sbb
sahf
sarl
cmovle
outsb
pop
outsb
dec
sbb
int
int
push
in
pop
push
outsb
sbb
add
das
jae
jle
int
pop
mov
cld
add
rolb
aad
and
xchg
xor
or
push
outsl
xor
loope
push
inc
lods
imull
mov
dec
aaa
rclb
mov
add
add
das
push
push
in
xor
xchg
inc
inc
xor
jle
add
repnz
das
fstl
fisubl
or
daa
cmp
xor
inc
xor
and
insb
lret
insl
js
lcall
test
push
mov
jl
dec
hlt
xor
sbbb
cli
fs
mov
fdivs
repz
mov
pop
imul
mov
pop
mov
in
cmc
mov
jnp
jbe
or
adc
pop
ficoms
aaa
xor
inc
mov
movsl
aam
dec
xacquire
mov
xchg
jg
cmpsb
and
clc
aaa
mov
jmp
fwait
push
loop
shlb
jb
cs
push
pop
push
mov
jo
sub
lock
sub
ret
xor
mov
dec
adc
mov
push
mov
xor
insl
aad
sub
mov
in
mov
pop
repz
xchg
pop
jg
repnz
jne
push
loop
pop
lods
mov
mov
gs
adc
cmp
jmp
movsb
fldlg2
push
mov
pop
mov
nop
out
scas
icebp
ffreep
pop
pop
outsl
inc
aad
test
xchg
dec
rcll
jbe
addr16
or
sbb
sub
pop
inc
pop
daa
push
add
stc
cli
fs
push
dec
insl
push
mov
and
mov
out
cmp
sbbl
out
flds
icebp
hlt
xchg
mov
aam
inc
clc
lds
mov
xchg
lret
movl
adc
add
jmp
sbb
adc
int3
in
or
mov
pop
dec
adc
test
stos
lock
imul
pop
movl
test
icebp
and
xor
adc
lret
and
sbb
cmc
enter
mov
pop
fcomp
cmc
pop
loop
sbb
cmc
fsubp
add
jl
loopne
insl
mov
adc
jmp
sbb
fdivrs
or
ljmp
mov
adc
je
sbb
push
daa
mov
pop
mov
xor
push
cmc
push
cmp
jl
stos
clc
ret
hlt
int
dec
or
adc
dec
dec
jmp
adcl
aam
add
xchg
cld
icebp
cmp
or
sbb
xor
cmp
or
push
dec
sub
jae
xchg
mov
mov
sar
push
cmp
pushf
fmull
xor
std
dec
call
mov
dec
push
or
clc
xlat
dec
mov
shr
notl
das
pop
fstl
int
std
fcmovnb
push
or
mov
scas
out
sbb
stos
mov
xchg
cmp
pop
mov
fsubs
sbbb
in
jp
sbb
pusha
test
inc
aam
fmull
mov
lret
sbb
outsl
imulb
xchg
mov
mov
jne
pop
or
cmpl
movsb
dec
addr16
xchg
out
mul
dec
jp
jge
movsb
mov
fdivl
movsb
and
sub
and
add
push
insl
cwtl
push
jmp
dec
das
imul
shrl
xchg
jge
jno
pop
and
lcall
into
aad
xchg
in
sub
lcall
xchg
adc
mov
add
ljmp
inc
cmp
adc
push
mov
test
push
xchg
adc
xchg
movsb
dec
xchg
push
fmul
jbe
in
or
clc
lcall
xor
jnp
inc
cmp
arpl
scas
mov
mov
mov
nop
icebp
mov
dec
cmp
and
stc
xlat
mov
and
mov
push
test
aad
rorb
mov
xchg
scas
iret
adc
ss
push
pop
mov
mov
pop
push
mov
jbe
nop
rcll
xor
and
rorl
and
mov
jmp
int3
repz
dec
test
xlat
sbb
cmp
scas
cmpsl
sub
notb
scas
pop
mov
ret
adcl
sub
loop
or
fs
pusha
sti
outsl
xchg
pop
inc
bound
loop,pt
xchg
stos
push
dec
push
in
pop
lea
mov
cmpsl
cmpsl
mov
xchg
xchg
lods
xor
les
adc
mov
cwtl
int
stos
daa
insb
aam
arpl
into
jle
xchg
out
cmp
into
pop
out
test
adc
sti
stos
adc
stc
aaa
cmpsb
rcrb
out
das
push
aam
enter
pop
in
inc
or
stos
adc
dec
clc
xchg
sub
es
xchg
cmpsb
outsb
inc
jbe
bound
inc
push
test
pusha
loope
jmp
pop
popa
dec
xchg
mov
aas
cmp
adcb
push
adc
or
mov
cmpsb
adc
mulb
push
add
pop
insl
xchg
ret
push
sbb
sub
call
aad
and
cmp
mov
cmp
xchg
fwait
scas
ds
push
or
lcall
cmpsb
outsl
xchg
mov
xchg
mov
sahf
sub
repz
push
and
jbe
xchg
jp
aad
jmp
sub
cs
mov
sub
jl
cltd
fdivs
lods
cli
push
xchg
movsb
sbbl
call
in
mov
push
dec
hlt
pop
test
mov
mov
sbb
jb
jge
cmpsb
enter
jmp
jb
dec
pushf
test
sbb
xchg
lds
ret
dec
or
orb
xchg
mov
xlat
cmp
mov
stc
mov
add
add
jnp
movsl
lret
jmp
gs
add
mov
xchg
sub
inc
ljmp
repz
xor
cs
jmp
push
jl
mov
add
mov
xchg
aas
inc
pop
js
mov
xor
inc
pop
stos
or
inc
bound
mov
sub
popa
mov
ss
pop
add
dec
or
jnp
out
xchg
ljmp
mov
cmp
mov
push
clc
lods
dec
jbe
inc
xorl
or
out
mov
mov
add
in
push
adc
pop
cmp
aad
jl
cmp
jno
and
mov
sub
leave
icebp
ljmp
repz
mov
rcrb
jbe
push
mov
cmp
adc
or
mov
inc
cmp
jge
pop
daa
jns
adc
test
inc
das
mov
sub
neg
rolb
xor
mov
repz
es
mov
dec
push
lcall
testb
lds
shrl
fildl
mov
repnz
ja
out
mov
push
mov
dec
mov
xchg
ja
jne
sarl
dec
add
xchg
pop
outsb
in
push
test
gs
stos
cmp
xchg
sub
push
and
in
stos
lds
fnstenv
sub
pushf
push
fwait
cmpsl
and
inc
jg
stos
and
push
out
pop
mov
std
test
test
lcall
test
test
ret
mov
inc
movsb
fsubrs
cmp
fisubl
movsb
cld
cmp
jg
xchg
lods
inc
test
sbb
mov
movsb
cltd
jp
xchg
xlat
movsl
aas
rclb
lcall
mov
aad
stos
and
xchg
inc
popf
sti
movsl
and
cli
pop
jo
mov
enter
push
jmp
push
aam
mov
scas
sub
push
mov
das
rolb
test
in
pop
inc
mov
inc
in
inc
pusha
jg
aam
cld
xor
and
and
inc
dec
cltd
cld
adc
push
dec
sbb
stc
jecxz
mov
xor
pushf
sahf
dec
xlat
jo
and
pop
fwait
roll
inc
insb
pop
pop
push
testb
scas
mov
and
aad
sub
inc
mov
xchg
mov
pushl
dec
rolb
lods
popf
mov
jns
repz
xchg
jg
mov
or
std
sub
shlb
test
and
push
sub
cmp
test
lea
mov
mov
push
xor
aam
ja
es
das
cld
shll
aas
pop
cmpb
xchg
push
sub
in
and
lods
pushl
lcall
dec
push
pop
mov
mov
push
shrl
or
sub
dec
mov
xchg
inc
cmpsb
cs
into
idivl
xchg
and
dec
es
ret
push
fisttps
xchg
fwait
scas
xor
adc
aas
and
pop
push
xor
xor
cmp
push
dec
mov
mov
xchg
sub
cltd
movsb
test
inc
xchg
nop
inc
and
pop
inc
mov
icebp
inc
push
push
cmp
enter
xchg
mov
sbb
mov
xchg
ljmp
outsb
sub
les
adc
stos
xor
inc
pop
or
lcall
lods
xchg
mov
mov
sti
xchg
mov
ja
ficoms
or
xchg
fsubs
fldl
shlb
out
inc
or
jp
mov
imul
mov
jbe
push
mov
push
outsb
or
or
jne
repnz
jae
mov
mov
test
arpl
int
add
push
pusha
idivl
adc
jne
cmpsl
ret
jl
mov
pushf
xlat
jg
dec
mov
mov
dec
lret
pop
pop
ret
fstpl
jmp
movsb
adc
les
mov
nop
dec
cli
xor
sub
jmpw
shl
push
lea
loope
or
push
into
dec
sub
xor
in
imul
orb
or
xchg
fsub
cwtl
mov
mov
mov
pop
mov
shrl
mov
push
xlat
xor
jl
or
dec
mov
outsl
pop
data16
xchg
aaa
cltd
mov
sbb
sbb
mov
pop
mov
xchg
lock
cmp
pop
lahf
stc
mov
loope
adc
adc
push
inc
fidivs
mov
push
inc
dec
jp
mov
mov
test
and
int
cmpb
jmp
sub
in
in
sahf
sbb
outsl
or
pop
popa
fwait
fs
and
xchg
sarl
insb
fadds
sub
jns
push
ret
ja
sti
outsb
iret
pop
sahf
arpl
and
inc
dec
sahf
cmpsl
outsl
cmpsl
mov
pusha
out
inc
xor
aas
subb
loop
xor
dec
adc
jne
add
filds
mov
andl
sub
mov
or
and
sbb
int3
or
test
push
mov
test
sbb
dec
fcmovbe
stos
ret
std
lea
or
mov
lds
xor
jl
int
xchg
and
addr16
cmpsb
cmp
mov
pop
lret
add
mov
add
mov
cld
rcr
mov
pop
outsl
push
adc
mov
leave
xchg
inc
jmp
push
xorl
mov
push
push
insb
jns
lahf
xor
jns
lock
mov
popf
or
scas
jno
mov
fidivl
arpl
cmpsb
adc
lods
mov
push
mov
out
jne
pop
adc
lock
mov
ror
cmp
cmp
ret
in
test
push
adc
fmuls
mov
repnz
jge
or
inc
inc
add
aad
cmp
sbb
xchg
xchg
stos
nop
scas
pop
mov
insl
rorb
jmp
sub
add
iret
sbb
cld
pop
fucomp
loopne
fiadds
mov
rol
push
in
xchg
push
imul
cwtl
ljmp
xor
mov
and
outsl
pop
pop
hlt
push
mov
mov
ljmp
bswap
test
ljmp
or
push
mov
fldenv
iret
es
mov
pop
test
push
cltd
cmp
lret
divb
cmp
mov
outsb
sub
shrl
shlb
ja
mov
jne
xchg
pop
ret
sbb
xchg
jle
scas
pushf
and
push
xor
add
inc
push
divl
jno
fimuls
xor
push
xchg
or
test
jg
cli
sub
stos
or
ja
icebp
push
pop
sub
and
cmc
cmp
mov
imul
roll
add
inc
movsl
scas
sub
mov
pop
push
dec
or
mov
mov
fistps
int3
out
pop
mov
addb
flds
push
pop
les
int
mov
add
jno
adc
or
into
call
fimuls
dec
aaa
cmp
js
sub
jno
dec
arpl
shl
mov
fisubs
mov
fsubrs
test
xchg
pop
cmp
dec
mov
ret
cmc
jmp
fsubrl
icebp
lret
stos
loopne
fcmovnbe
out
dec
mov
stos
fistpll
movsb
sbb
outsl
ret
scas
jle
leave
xor
xchg
dec
jmp
sbb
call
jns
pop
mov
push
xchg
mov
ret
xchg
aaa
out
fs
mov
add
xor
jl
jb
dec
repz
cmp
adc
cmp
mov
and
out
out
imul
outsl
add
mov
xchg
leave
fdivl
subb
jns
mov
dec
aad
mov
xchg
sahf
lods
sbb
jne
push
daa
pop
and
inc
in
xchg
jo
mov
adc
jge
xchg
decl
sbb
jb
dec
jns
cwtl
jecxz
shl
scas
and
adcb
or
in
dec
push
pop
push
scas
aaa
test
mov
mov
push
fldenv
popf
or
ja
cmp
std
xchg
adc
ds
lret
je
mov
mov
test
lret
jl
int3
xchg
adc
ret
mov
xor
test
mov
dec
lds
mov
and
jo
mov
retw
es
pop
fs
ss
aam
daa
jmp
pusha
jl
jecxz
inc
cmpsl
xchg
mov
shll
mov
mov
add
lea
dec
clc
aam
dec
dec
mov
cmp
int
test
fldenv
mov
leave
inc
in
add
add
scas
les
out
les
cmp
out
cmpsb
orb
jle
stc
sbb
bound
and
sub
xchg
hlt
jo
push
stc
lock
xchg
ljmp
ss
add
dec
cltd
aad
insl
dec
shrl
roll
test
mov
mov
jae
and
cmp
outsl
and
out
push
jl
mov
or
test
in
pop
and
xor
cli
arpl
mov
pop
mov
sbb
mov
jae
repz
and
out
and
mov
mov
push
test
cmp
mov
imul
test
inc
insb
sbb
xchg
jecxz
dec
rcr
mov
or
mov
test
sub
push
in
iret
jno
mov
mov
cmp
cld
fadd
dec
inc
shlb
sub
adc
lcall
addr16
jne
mov
add
xor
out
sbb
sub
aas
cmp
push
fwait
push
scas
sbb
arpl
add
cmp
cmp
out
pop
int
push
jge
inc
test
movsb
or
mov
addr16
jns
aas
mov
cmpb
stc
clc
call
sti
inc
int
mov
rcrl
xchg
push
shrl
adc
sub
popa
mov
ret
pop
jl
dec
mov
fs
pop
sbb
loop
shrl
inc
push
pop
mov
cmpsl
daa
pop
sub
das
inc
push
rcrb
mov
pop
inc
int
mov
sub
jp
mov
cmp
sbb
push
movsl
fisubrs
xchg
shll
mov
lret
in
loop
leave
repnz
out
add
cli
pusha
fldl2e
call
leave
cwtl
dec
lods
leave
mov
gs
stos
mov
mov
aam
push
daa
scas
jmp
mov
out
and
lret
xor
dec
mov
cmpsl
test
call
out
cmp
inc
lahf
mov
mov
xchg
loope
xor
loopne
and
aad
call
sbb
iret
or
or
jo
ljmp
enter
sti
aaa
pushf
insl
in
xchg
dec
test
bndldx
push
mov
xor
out
sbb
push
mov
js
sub
ds
sbb
ljmp
aaa
int
sbb
aam
aad
xorb
add
data16
loop
addb
outsl
xchg
subl
xor
push
insb
lods
push
adc
mov
mov
mov
pop
add
cmpsb
pop
and
push
ss
or
dec
lock
mov
push
mov
push
loopne
mov
cld
cmp
sub
out
int3
aad
rorb
mov
cmp
mov
jl
rcr
or
out
adc
out
lds
and
xchg
push
es
daa
or
stos
pop
sbb
daa
add
inc
add
jge
adc
imul
loopne
and
or
fwait
inc
aam
and
push
pop
neg
cmp
inc
push
pxor
mov
mov
dec
pop
and
ds
mov
daa
dec
mov
push
jecxz
jle
cld
aaa
adc
imul
and
mov
jl
pop
stos
xchg
mov
sbb
fidivrl
mov
adc
inc
pop
jmp
aad
dec
and
lret
xchg
rep
dec
pushf
mov
sbbb
push
lea
lret
setle
int3
out
dec
stos
lret
popa
inc
xchg
xchg
jns
and
test
mov
mov
pop
or
cmp
dec
xchg
bound
fs
push
fcomps
add
pop
fiaddl
xor
sbb
cmp
and
sbb
jns
imul
xlat
jae
in
inc
jl
sub
stos
daa
cmpsb
bnd
sbb
push
adc
gs
pop
xchg
jne
push
push
pop
jo
inc
jl
sarl
mov
adc
popa
shll
xchg
ss
jno
mov
addr16
iret
inc
pop
sbb
cwtl
pop
jl
push
fistl
in
mov
insb
cmp
adc
sub
dec
dec
sbb
push
les
cmpsl
jnp
mov
insl
push
js
inc
addr16
cmpl
mov
lret
js
outsb
jno
mov
ljmp
cmp
or
mov
xor
fwait
icebp
or
aas
xchg
adc
lea
jecxz
fs
dec
jo
inc
mov
lret
pop
sahf
cmpb
lods
lret
xchg
fisubl
xor
into
push
or
les
sbb
rcrl
sti
push
cmp
out
je
or
aam
das
std
or
fdivl
pop
cwtl
push
xchg
cltd
out
xchg
cmp
push
out
or
add
jp
les
pop
xor
sbb
sub
pop
es
incl
mov
test
std
out
lcall
popa
cmc
xchg
insb
pop
je
pop
pop
sub
xchg
or
lods
lahf
inc
roll
pop
mov
lret
scas
mov
je
jns
lret
mov
xchg
in
push
out
mov
inc
sbbb
ljmp
test
push
sbb
jnp
repnz
out
popf
adc
repnz
es
imul
daa
ds
dec
sbb
sbb
sbb
sarb
arpl
lcall
xor
or
xlat
dec
es
mov
out
cli
pushf
adc
inc
dec
add
mov
jecxz
cs
fistl
ret
lods
or
test
fldenv
add
mov
cs
stos
or
loope
fsubrl
insl
shlb
loopne
mov
insb
inc
test
call
dec
dec
pop
cmp
lret
dec
pop
and
insb
std
out
and
icebp
jge
xor
mov
loope
mov
sbb
aad
adcb
cld
mov
out
and
insl
xchg
sub
sahf
test
int
mov
xchg
push
mov
in
jbe
push
imul
enter
stos
or
fdiv
mov
sub
lds
dec
std
mov
and
jle
lods
add
jb
jge
push
pushf
shlb
push
or
adc
add
or
out
pop
stc
lds
rcrb
jp
mov
outsl
das
pop
adc
and
rcrl
stos
pop
mov
shlb
mov
pop
mov
adc
inc
enterw
ret
movl
sub
pop
sbb
push
gs
test
movsl
push
jp
mov
popa
call
daa
lcall
inc
dec
push
je
daa
and
sbb
ds
adc
fs
incl
orb
or
dec
popf
adc
and
js
jo
in
hlt
lds
mov
push
inc
ret
mov
and
sub
jge
test
daa
adc
stos
xor
pop
lods
push
scas
inc
cmp
dec
dec
scas
jno
mov
je
add
push
push
push
jge
pop
push
push
and
lret
lock
adc
sarl
out
mov
inc
mov
imul
xor
pusha
mov
jle
nop
sbb
rcr
and
inc
pop
inc
sub
cmp
sbb
push
imul
inc
mov
lret
pop
xchg
pop
fldl
mov
dec
loopne
jle
adc
xlat
mov
pushf
inc
sbb
jnp
and
inc
pop
bnd
ret
shlb
jne
cld
or
sub
cmpsb
cmp
push
or
imul
jmpw
leave
cltd
jl
inc
xchg
and
push
push
dec
insl
sbb
fisttpll
std
ret
add
jg
cmpsb
inc
push
fwait
lods
sub
pop
cmpsb
pop
xor
or
mov
add
mov
lods
sahf
push
pusha
aaa
mov
lret
mov
iret
lds
fnstenv
sbb
xlat
sub
push
adc
in
pop
mov
jbe
inc
decl
sub
idivl
stos
out
mov
aaa
js
mov
mov
in
dec
xor
mov
call
inc
jno
cltd
lcall
lahf
or
aaa
mov
and
and
inc
inc
clc
cmp
rcrl
mov
sbb
cmpsl
add
enter
xchg
nop
sub
push
mov
push
xchg
aad
sub
aad
xchg
jb
jg
push
push
lods
push
data16
mov
repz
adc
stc
loopne
mov
mov
repz
sub
adc
arpl
add
std
cmp
or
cmpl
mov
mov
stos
clc
push
lcall
scas
in
sahf
notb
mov
imul
rcrl
inc
push
inc
daa
push
and
xchg
bound
movsb
push
jo
mov
cwtl
int3
adc
sti
fcmovnu
data16
xor
loope
orb
aas
sbb
pop
cmpsb
loopne
out
int3
fcmovb
sahf
adc
sbbb
cli
stos
adc
jg
jnp
daa
jmp
test
push
adc
ret
mov
in
sti
jl
sbb
cltd
mov
mov
cmp
pop
je
hlt
aam
je
test
scas
insb
xchg
aas
jge
int
inc
mov
add
out
aas
shlb
test
sub
fisubs
mov
cld
pop
pop
enter
fwait
sbb
add
les
xor
call
lds
add
pop
xor
push
cmp
add
push
ds
pop
fildll
imul
insb
sahf
or
out
fcmovbe
mov
dec
inc
mov
push
cmpsl
inc
push
out
and
adc
bound
imul
loopne
iret
pop
fisubl
xchg
xchg
push
or
jnp
pop
adc
jb
or
jge
daa
cli
xor
loop
dec
pop
push
mov
or
lret
mov
loop
and
push
les
mov
or
mov
add
adc
mov
mov
in
add
mov
pusha
cli
xor
add
out
inc
mov
lods
mov
inc
jno
cmovo
mov
push
inc
clc
fsubrs
jne
cmp
clc
xchg
test
fldt
pop
or
xor
mov
aas
inc
mov
sub
lret
xor
jae
pop
add
jg
xor
push
sub
je
mov
in
scas
jle
and
out
mov
flds
jno
and
aaa
mov
jbe
dec
push
inc
sub
and
add
inc
loop
dec
dec
and
das
push
sub
fwait
mov
or
and
add
adc
arpl
or
pop
movd
loopne
std
fcompl
cmp
push
cmpb
mov
jecxz
mov
jmp
dec
repz
ljmp
add
jnp
adcl
les
sbb
push
int
or
fidivrs
hlt
lcall
push
mov
mov
pop
xor
mov
pop
or
push
push
mov
out
jmp
pop
int3
mov
add
cltd
test
bt
add
cs
les
pushf
jg
xchg
lret
mov
sahf
cmp
arpl
xchg
or
test
insb
lcall
dec
fisubl
xchg
mov
es
in
pusha
es
in
test
xchg
sbb
xchg
jo
jl
cmp
mov
inc
cmc
arpl
sub
cmp
sti
aas
aam
sahf
sbb
sahf
cltd
push
incb
popf
mov
loop
leave
aad
cmp
push
inc
cmp
out
nop
mov
int
jb
incb
push
xor
add
xor
cmova
cmpsl
aas
cmp
stos
sub
jmp
cmp
dec
and
aad
sahf
aaa
jl
imul
stc
fnstenv
xor
xchg
movsl
loope
movsl
cwtl
cmc
out
fyl2xp1
idiv
pop
in
ja
adc
sbb
outsb
add
ss
icebp
sbb
and
bound
dec
out
ds
loope
addr16
cwtl
rol
cwtl
negl
loope
shll
int3
out
jo
jbe
push
repnz
inc
daa
xor
inc
js
xchg
mov
dec
and
andl
fildl
stos
add
mov
ja
call
jnp
dec
fstpt
mov
pop
lret
pop
ss
xor
jbe
fcmovnbe
mov
jne
pop
jns
and
xchg
loop
mov
inc
cmpsl
pop
pop
xor
rorb
mov
inc
inc
shrl
jl
out
leave
inc
lret
jg
xchg
in
daa
movsb
inc
jmp
xchg
or
mov
mov
push
sbb
pushf
push
sbb
scas
mov
mov
subl
je
into
dec
es
out
sbb
jne
push
xchg
mov
mov
adc
inc
stos
lods
mov
gs
sub
add
in
lds
repnz
call
setb
xlat
add
push
sbb
loope
fmuls
mov
sub
aad
jno
or
fadds
or
stos
test
adc
test
imul
and
shl
sbb
cs
push
mov
xor
xor
mov
jns
jbe
les
pop
mov
dec
loop
inc
xor
mov
mov
lret
pop
into
jne
outsb
leave
mov
fistpl
push
xor
xchg
dec
arpl
cmpsl
test
andb
inc
std
dec
int
call
cmp
mov
jo
add
dec
mov
je
clc
adc
pop
or
mov
inc
mov
push
incl
fwait
lahf
aas
inc
fldcw
lcall
jbe
orb
lahf
mov
push
cmp
adcb
popf
adc
arpl
nop
push
push
add
push
jmp
in
xchg
xchg
mov
xchg
pop
or
sub
cmp
or
lods
lcall
xchg
or
out
xchg
cmp
sub
mov
orl
dec
push
sbbb
andl
cmpsl
pop
and
and
xor
or
enter
mov
movsb
mov
shrb
mov
jmp
dec
xor
jecxz
fwait
cmpsl
add
fucomi
jb
pop
sub
inc
or
jbe
mov
mov
clc
sub
int3
cmp
inc
jl
pusha
aad
add
lret
pusha
and
or
cmc
cld
pop
xlat
je
xor
add
mov
idivl
or
rcl
or
xor
xchg
inc
pop
je
outsb
mov
cmp
sub
rcll
in
push
shlb
icebp
insl
in
in
dec
in
aam
pop
jge
jecxz
gs
pop
mov
mov
sub
shrb
ja
out
jno
and
add
cmc
xchg
xchg
fwait
mov
scas
dec
ds
mov
data16
mov
clc
sbb
int
out
xchg
adcb
sbb
clc
adc
sub
cmp
jnp
int3
jno
xor
jle
mov
xchg
nop
mov
clc
xchg
aas
cmp
inc
mov
pop
sub
adc
call
mov
notb
pushf
test
dec
inc
call
cmp
mov
mov
push
add
hlt
aaa
and
and
insb
mov
cmpsl
in
xor
shrb
and
dec
mul
push
aam
dec
movb
movsl
xchg
pop
out
mov
movsl
add
fldcw
popf
aas
mov
out
or
adc
adc
xchg
mov
pusha
sbb
xchg
test
insl
pop
and
mov
rclb
sbb
cli
adc
lret
fs
pushf
mov
jg
xchg
cli
and
mov
in
imul
hlt
mov
rorb
sarl
leave
in
pop
mov
rcr
or
sbb
mov
jo
pop
dec
data16
push
jle
sub
aam
pusha
leave
xchg
js
jmp
push
icebp
es
orl
jo
add
or
xor
fists
out
push
shll
mov
ja
xchg
movsl
sti
push
pop
pusha
pop
mov
pop
inc
push
ljmp
js
das
cwtl
xor
inc
ljmp
je
add
cmp
shll
out
out
mov
sub
arpl
ret
xor
jecxz
das
push
repnz
cltd
into
repnz
ret
adc
pop
enter
in
shll
int
dec
out
mov
fisttpl
cmc
sti
mov
imul
inc
lret
cmp
xchg
xor
stc
mov
pop
pop
lods
outsb
sbb
clc
xlat
stc
rcll
notl
dec
in
push
push
orl
into
pop
dec
push
or
pop
aad
ret
outsb
ret
jg
or
mov
dec
push
jecxz
mov
lods
xchg
mov
clc
sub
in
aas
push
sub
into
test
push
divb
sub
enter
out
or
rolb
add
icebp
cmp
push
and
ror
mov
popa
loop
loop
cmpsb
jp
pop
fisttps
sti
push
addr16
ror
or
hlt
jae
add
jnp
xchg
in
notl
push
lock
inc
stos
push
mov
inc
cmp
sub
cmp
adc
jge
jbe
xor
clc
sbb
dec
push
jmp
pop
in
inc
orb
sbbb
and
jp
cmpsl
in
outsb
add
sti
out
jmp
jecxz
xor
add
push
ret
cmp
xor
shrl
mov
xchg
dec
dec
mov
xlat
repnz
idivl
mov
mov
cmp
movsl
lock
je
jb
ss
insl
sbb
movsl
or
sbb
outsb
movsb
mov
mov
lcall
stc
and
push
dec
stos
cli
leave
sbb
int3
push
fiaddl
pop
xchg
add
inc
xchg
cmp
sub
xor
cmp
into
cmc
xchg
sti
out
pop
or
sub
and
in
stc
lods
test
push
jnp
mov
negb
aam
test
lds
cld
jmp
daa
mov
mov
lcall
fadds
push
sbb
sbb
pop
mov
jo
out
and
rcrb
and
push
sbb
ss
out
pop
fistpll
stos
dec
sub
mov
xchg
inc
addl
pop
pop
jle
cmc
pop
roll
mov
and
cltd
mov
int
pop
sub
sbb
clc
popf
cli
adcl
sti
jmp
xlat
fcom
out
pop
mov
jbe
xor
sub
jecxz
popa
add
cli
add
fsin
sub
in
add
adc
jo
rclb
push
push
mov
je
sub
in
cltd
mov
fcomps
mov
mov
pop
or
into
xchg
pop
lds
subl
cmp
pop
decb
inc
add
sub
inc
dec
push
sub
stos
sub
stos
inc
fisubrs
add
xchg
xchg
push
ljmp
ficompl
lcall
mov
fstl
push
xchg
loopne
push
sub
dec
pop
popa
sub
loopne
std
iret
xchg
retw
fldcw
cwtl
call
fs
xchg
jb
cmp
fsub
jmp
add
roll
subl
in
pop
jmp
adc
or
test
sbb
mov
sbb
bound
xchg
pop
jns
or
ret
pop
adc
cmpsb
std
add
cmp
push
in
mov
cwtl
addr16
pop
lret
std
adc
jne
outsl
add
fcmovb
in
ss
sbb
arpl
repz
jle
inc
mov
mov
mov
xor
movsl
ss
push
mov
xor
adc
insb
xor
aam
adc
leave
push
add
pop
add
sub
pusha
dec
addr16
nop
or
xchg
je
loopne
int3
sar
out
cmpb
sbb
dec
sub
mov
jns
mov
ficompl
adc
bound
sub
xor
xchg
cmp
jge
mov
insb
mov
call
ret
xchg
mov
add
sub
in
push
push
push
pop
pusha
and
mov
mov
mov
jb
cmp
outsb
mov
repz
sahf
in
pop
xchg
jbe
ret
imul
inc
inc
xchg
stc
jnp
jmp
lock
insb
mov
adc
add
cmp
push
iret
dec
jo
add
pusha
push
push
mov
andl
fwait
cs
mov
movsb
sar
repz
shrl
call
imul
es
inc
ljmp
aaa
in
jp
cli
js
push
loop
dec
mov
testl
aas
adcb
lcall
jle
inc
push
xchg
mov
adc
outsb
cmp
xchg
sub
mov
int3
mov
dec
insb
sbb
adc
iret
cmp
mov
out
rcll
mov
jne
test
and
cmp
fsubl
data16
sbb
cmp
mov
das
call
mov
and
mov
in
xor
xchg
mov
xchg
xchg
cwtl
xchg
xchg
mov
es
mov
xor
test
sub
pop
rcrl
jo
and
data16
pop
adc
dec
in
aad
jno
outsb
sbb
mov
xchg
mov
or
pop
sbbl
sbb
ds
fldl
mov
pop
test
mov
xchg
movb
aam
repnz
sbb
sbb
mov
clc
in
jbe
mov
push
stc
outsb
mov
cmp
outsl
lock
daa
fs
mov
sarl
xchg
add
int3
mov
cmp
inc
jge
inc
cmp
jno
call
fimuls
icebp
mov
ror
fwait
pop
sub
mov
mov
sbb
std
inc
inc
push
mov
hlt
dec
sub
test
loopne
int3
mov
pop
mov
in
mov
ficoms
jl
cli
mov
out
xor
sti
negl
adc
mov
push
mov
push
pop
test
mov
jmp
xchg
mov
aad
sbb
icebp
sbb
pop
std
sub
or
cld
sbb
rcl
jp
nop
in
shl
xlat
jae
in
mov
jo
rolb
xor
sub
hlt
notl
mov
pop
jge
outsl
jns
mov
pusha
mov
fcmovu
je
ljmp
jns
push
cmc
cmpsb
mov
outsb
add
in
das
dec
adc
jb
test
imul
cmp
cmp
divb
stc
loope
xlat
and
xor
mov
and
pop
mov
mov
dec
sbbb
addr16
mov
jne
stc
addb
mov
or
fidivl
xor
mov
jns
and
jmp
jno,pt
mov
mov
loope
shlb
pop
iret
sub
sti
adc
xor
stc
xor
sti
shlb
aad
not
push
jo
jae
in
lcall
cmp
mov
pop
sub
insb
dec
ljmp
fwait
movsb
pop
aas
xor
pop
scas
or
in
add
clc
lret
je
mov
xchg
sbb
mov
push
pextrw
lahf
sbbb
xor
dec
adc
out
jg
repnz
jg
push
xlat
popa
mov
xor
jp
mov
push
xor
xor
cmpsb
shl
push
pop
or
daa
push
fcmovu
adc
pcmpeqb
sbb
repz
xchg
and
jge
push
pop
mov
sbb
addr16
dec
ljmp
mov
repz
xor
icebp
jae
fwait
pop
jo
pop
sub
cmp
int3
mov
aam
pop
and
push
ficomps
mov
aaa
dec
push
xchg
stc
std
add
pop
mov
and
js
jnp
inc
arpl
adc
lcall
aas
or
push
lods
enter
shl
push
lock
xlat
data16
das
push
sbb
ds
lret
shll
nop
mov
lcall
js
mov
pop
pop
int
repz
rcr
cmpsb
mov
sar
bound
lods
pop
jo
les
and
out
fistps
fcoml
mov
das
cmp
out
testb
call
cmp
inc
cs
loop
mov
pop
cli
mov
inc
fcoml
mov
out
mov
loope
xchg
ret
pop
jnp
cmpsb
push
aam
jo
pop
push
cs
in
mov
inc
xor
adc
xchg
mov
cli
mov
mov
add
jno
mov
shrl
push
or
fisubs
inc
addr16
mov
xor
push
enter
in
out
xchg
pop
sub
xor
jo
ret
xchg
insb
sub
xchg
jbe
popl
jecxz
or
push
mov
mov
xchg
jae
mov
adc
jno
inc
dec
mov
pop
add
mov
cmp
inc
add
jecxz
lret
add
mov
addr16
push
ret
xor
cs
imulb
call
out
dec
and
pextrw
ljmp
cmpsl
flds
frstor
mov
or
js
sub
out
decl
and
jg
insl
enter
cmp
lahf
popf
adc
movsl
fstl
imul
movsb
out
add
mov
sbb
mov
or
and
push
ljmp
inc
pushf
xor
sahf
ret
arpl
scas
sbb
scas
jmp
andl
xor
into
test
ljmp
rorb
movsb
xor
insl
add
imul
jp
or
pop
shll
cs
push
test
cs
pop
jbe
mov
and
cmp
test
stos
jge
inc
dec
out
jo
mov
pop
adc
ljmp
xchg
fidivl
mov
in
cmp
imul
mov
and
cltd
fstpt
xor
push
popa
rcrl
popl
lahf
xchg
mov
adcl
lcall
outsb
enter
mov
push
mov
or
cld
les
push
add
shll
leave
imul
fs
ljmp
insb
in
sub
push
pop
push
or
xchg
imul
inc
mov
inc
and
sub
mov
fdivrs
stos
ja
mov
scas
cmp
test
scas
lods
cwtl
push
pushf
jb
add
push
lods
imull
pop
xchg
js
es
jp
dec
aad
xchg
clc
push
pop
mov
mov
rorl
or
sub
lret
icebp
push
push
call
xchg
pop
sbb
scas
movb
mov
jg,pt
cmp
addb
testl
loop
mov
stc
sbb
mov
jo
push
xor
jb
jge
push
or
mov
or
jno
xor
inc
adc
sbb
aas
xchg
fisttpll
movsl
and
mov
aam
sti
xchg
adc
xlat
dec
jnp
xchg
in
mov
in
test
xor
mov
ret
push
inc
and
lds
call
cmpsl
cltd
ret
pop
push
pop
ret
lahf
stos
fcoml
pop
dec
xchg
out
mov
stos
fucomi
into
es
aam
jmp
xchg
or
push
call
mov
ljmp
push
mov
add
pop
inc
lcall
test
movsl
clc
jns
scas
leave
or
inc
jae
leave
in
insl
sub
mull
adc
pushf
scas
enter
dec
xor
stos
mov
aam
mov
cmc
cltd
sti
mov
sbb
mov
xor
mov
lret
mov
sbbl
mov
inc
aam
ja
inc
sub
dec
cmp
mov
and
adc
subb
push
jo
or
dec
mov
int3
jns
mov
rclb
imul
and
mov
jg
repz
add
fmul
jmp
aas
mov
push
dec
and
lret
faddl
xlat
xor
sbb
cs
adcb
or
sbb
sbb
stos
mov
and
xor
inc
cmc
jmp
jle
stos
add
mov
test
addr16
cmp
test
aas
repnz
sbb
es
xor
lahf
bound
pop
out
mov
ret
lcall
or
adc
lcall
mov
mov
roll
adc
inc
mov
dec
mov
push
enter
imulb
adc
inc
jecxz
inc
and
imul
mov
test
cmpsb
adc
scas
jns
stos
mov
or
es
mov
add
out
fadd
jne
notl
jp
or
addl
add
pop
sub
jb
inc
jbe
add
sub
push
xchg
fcompl
or
rcrb
dec
test
stos
ret
push
insl
stos
enter
dec
sbb
into
test
pop
inc
cmpsb
ror
sub
repnz
ficompl
lock
and
adc
shll
icebp
sbb
and
pop
je
loop
loop
popa
jne
jmp
in
ljmp
mov
das
aas
shrb
bound
mov
pop
inc
hlt
mov
cmp
add
xchg
add
mov
cwtl
add
pop
cmp
inc
adc
test
repnz
cs
xchg
int
xchg
outsl
dec
dec
jecxz
iret
rcl
cmp
ds
in
cmp
loope
pop
pop
sub
or
leave
xor
movsl
add
cmpl
and
sbb
dec
jecxz
pop
mov
pop
hlt
pop
popf
adc
xchg
dec
aam
call
jb
add
inc
jl
das
cmpsl
pop
pop
cmp
push
inc
pop
mov
imul
or
stc
lret
inc
aas
movsb
mov
popf
add
add
out
insb
outsb
add
scas
test
test
xchg
sub
dec
push
dec
into
ja
mov
jp
cmp
cmc
gs
andb
maskmovq
testl
mov
and
popa
push
popl
mov
jbe
mov
in
imul
and
dec
lods
mov
insb
bound
stos
addr16
mov
xchg
mov
push
xchg
ds
mov
mov
popa
pop
jns
lods
loopne
xchg
adc
out
adc
dec
jge
xor
pop
add
jecxz
in
shll
and
subb
ficomps
adcl
imul
cmp
mov
jl
xlat
loop
sbb
sub
adc
hlt
cmpsb
sbb
xor
inc
mov
jmp
mov
shl
mov
jb
pop
je
add
dec
xchg
arpl
or
xor
mov
ljmp
arpl
fistps
pop
out
stc
xor
and
inc
xchg
fwait
mov
sub
xchg
adc
jl
xor
jns
dec
dec
xchg
aaa
cmp
cmp
mov
es
add
jmp
std
rcrl
mov
xchg
iret
lods
int3
out
andb
cmpsb
jne
push
pop
xor
pop
mov
imul
xchg
jb
enter
negb
jecxz
outsb
xchg
js
push
mov
xlat
pushf
xchg
mov
xchg
sub
aaa
rcll
popf
stos
xchg
ret
dec
dec
or
nop
enter
xchg
push
leave
add
sbb
pop
sbb
mov
adc
dec
jecxz
loop
mov
ret
sahf
sti
fdivr
shl
nop
adc
stos
call
adcb
push
inc
adc
dec
cmc
cmp
cmp
in
xor
out
stos
mov
or
adc
cmp
lds
test
mov
out
jbe
push
mov
cmp
sahf
pop
popf
inc
mov
adc
pop
movsb
pusha
es
dec
fidivl
rolb
fdivs
mov
dec
jmp
and
mov
test
sahf
cltd
xor
movsl
cmpsb
mov
lahf
mov
mov
inc
insl
std
jne
test
orl
int
pop
int3
jmp
int3
xlat
bound
or
notl
mov
jno
lods
aaa
test
fwait
fwait
adc
push
add
cmp
cmp
cmpsb
pop
cmpsl
icebp
jmp
ret
pop
or
in
push
or
adc
jg
xchg
ljmp
out
xor
push
ret
ds
sbb
mov
mov
rcll
xchg
fistpll
aad
mov
rcll
inc
pop
out
dec
lcall
and
imul
push
dec
daa
pop
xchg
and
roll
adc
mov
pop
xchg
divb
mov
cmp
jno
mov
lock
sbbb
xchg
push
rclb
ret
push
les
jle
aaa
jl
scas
dec
int
mov
mov
push
pop
mov
daa
sub
pusha
mov
fs
aas
push
ljmp
loop
and
lods
inc
lea
fs
mov
ret
pop
jne
iret
cmp
gs
scas
call
test
cmp
and
and
xor
lds
rcr
sbb
roll
orb
imul
dec
fs
mov
jne
cld
push
push
aaa
out
aaa
sbb
inc
aad
xchg
call
push
add
push
dec
jo
in
subb
jl
daa
cmpb
mov
popf
sub
sub
pop
cwtl
leave
arpl
lahf
push
clc
cs
mov
pop
jns
loopne
xor
mov
gs
sbb
popf
push
mov
push
fstpt
shrl
out
ficoml
repnz
inc
xor
pusha
mov
adc
fisttps
sub
push
pop
cmp
dec
pusha
loopne
lret
xlat
sbbl
ss
push
shl
das
sbb
pushf
cmp
xchg
dec
pop
mov
xchg
xchg
xchg
mov
inc
test
mov
movsl
or
add
test
cmpsl
dec
pop
mov
loopne
es
fs
movsl
xchg
mov
pop
outsb
imul
and
shl
jnp
and
xor
xchg
mov
xchg
and
add
out
xchg
hlt
add
aas
jecxz
f2xm1
mov
xor
dec
sbbl
pop
test
daa
negl
push
fcompl
add
inc
repnz
enter
push
dec
mov
test
rcll
es
xor
out
or
or
scas
inc
mov
dec
push
dec
fwait
mov
movsb
rorb
pop
sub
stos
add
repz
into
insl
out
lods
aaa
xor
in
rcrl
inc
fcoml
ss
lcall
cmp
repz
inc
jbe
in
adc
xchg
and
jge
call
mov
cld
popf
push
sub
rol
dec
aam
jne
push
and
inc
adc
js
cmp
xor
push
sbb
mov
xchg
fsubl
mov
hlt
sub
pop
push
adc
inc
mov
lahf
push
clc
imul
nop
jno
pushf
shll
cmpl
cs
or
adc
push
je
xchg
scas
jle
mov
push
subb
mov
inc
jecxz
ja
mov
addr16
cmp
rcrl
mov
and
sbb
inc
mov
inc
jns
jne
push
pop
rcr
fsubrs
rcll
cmpsb
push
clc
ret
jp
inc
sub
orl
and
mov
fmull
mov
div
pop
sbb
loop
scas
sbb
imull
mov
inc
sbb
cmc
and
hlt
sub
jae
cld
xor
bound
lret
int3
test
fs
xchg
into
xchg
or
bound
sub
jno
jp
dec
xor
ja
sbb
lds
cmc
aad
cmpsl
in
mov
outsl
loopne
jl
sbb
data16
mov
rcl
call
addr16
lea
or
test
and
pop
inc
sub
cwtl
push
pop
jne
mov
movsl
fimuls
cltd
cmp
jne
insb
loop
sarl
mov
ss
xchg
push
xor
imul
push
cld
and
push
xchg
adc
add
fadds
mov
or
jnp
cs
mov
xor
push
push
iret
mov
pushf
xchg
dec
cli
cld
lock
outsb
out
lret
je
fdivrl
rep
pushf
repz
fs
std
aaa
mov
sbbb
repnz
xor
mov
icebp
push
out
mov
inc
lds
mov
or
xor
gs
sub
fisubrs
test
test
ss
sub
outsb
and
fists
pop
loope
in
cld
inc
sahf
jbe
mov
push
outsl
mov
in
mov
jb
add
fdivs
clc
push
movups
xchg
into
mov
pushf
data16
mov
xchg
adc
push
push
repz
imul
xor
mov
push
jecxz
fsubl
cmpsb
lods
adc
jnp
inc
pop
inc
pop
push
lock
mov
mov
pop
pop
stc
adc
mov
push
scas
xchg
sbb
out
mov
les
push
sub
jo
aad
jl
adc
dec
adc
pop
sbb
inc
inc
cld
test
int3
inc
xchg
adcl
sbb
push
out
div
pop
mov
mov
sbb
push
ja
insb
add
pusha
sub
imul
jp
xlat
cmc
add
inc
or
sbb
repnz
into
mov
fidivl
sub
popa
popf
adc
inc
fadd
lahf
test
fsts
pop
push
jae
in
sahf
jecxz
jns
inc
int3
pop
es
xlat
mov
imul
sahf
not
and
nop
mov
cmp
sub
cmp
jae
add
xor
out
and
mov
loop,pn
neg
lahf
pop
push
mov
cli
outsl
clc
lret
pusha
loopne
jecxz
jg
xchg
xchg
dec
xchg
adc
clc
fldl
popa
subl
out
sub
or
mov
int3
push
das
push
loope
cmp
xchg
or
pop
mov
cmpsl
fbstp
scas
fldt
aad
icebp
jbe
cld
add
aas
rolb
aad
insl
vpslld
xchg
gs
or
rcrl
or
lods
leave
add
lea
push
leave
outsb
in
out
stc
sub
stc
lcall
rcl
js
sub
xor
and
push
ljmp
out
jmp
pusha
fwait
mov
dec
or
fcompl
dec
and
iret
xor
cmc
scas
mov
mov
ja
pop
mov
arpl
xchg
fsubrp
mov
aaa
subl
insl
xchg
mov
jns
lret
mulb
mov
fistl
fcoms
sbb
cmpsl
shrl
decl
popf
in
std
mov
cld
push
mov
test
jl
pop
leave
in
dec
test
je
lahf
cmp
inc
out
enter
testl
loop
hlt
push
loop
cmp
push
jge
mov
push
or
cltd
or
pinsrw
push
ja
jge
push
inc
test
mov
jge
fldt
movsl
push
lahf
lahf
mov
bound
mov
lea
add
es
cmc
cmpsl
pop
cmp
xor
repnz
cmp
push
xor
pop
sub
hlt
sbb
jbe
push
cmp
add
inc
jne
mov
mov
push
dec
jne
mov
jl
dec
popa
and
maxps
pop
in
sbb
inc
xor
jle
dec
mov
mov
mov
sbb
fcomip
mov
repz
push
xor
call
jecxz
fnstcw
popa
test
setnp
loopne
jnp
leave
mov
cmp
pushf
cmpsl
xchg
nop
test
pop
push
adc
xor
sub
arpl
adc
jno
mov
xorps
jl
cmp
sub
cmp
cltd
mov
pop
stos
mov
scas
jmp
fisttpl
jmp
dec
xchg
cmp
in
inc
movsb
fdivp
pop
adc
mov
sub
pop
xor
jp
push
pop
fs
stc
adc
adc
push
into
adc
jae
add
mov
cwtl
xchg
fnstsw
xchg
pop
lods
inc
lds
push
jne
orb
insb
mov
mov
push
int3
cs
lods
notl
dec
addl
int
fwait
es
and
imul
xor
fs
neg
lret
push
mov
dec
fsubrs
popf
aam
pushf
out
int
cltd
idiv
jns
adc
inc
push
push
test
and
js
jno
sub
shrl
mov
xchg
adc
cmp
mov
sub
push
dec
push
sbb
fcmovbe
or
xor
adc
mov
mov
mov
cmpsl
test
movsb
dec
cmpsb
sub
cmp
mov
test
pop
pop
adc
xor
sbb
mov
push
lret
xchg
mov
mov
adc
ficoms
jae
lret
xchg
cmpsb
jg
and
int
ret
mov
mov
pop
sub
push
fwait
push
inc
jno
xor
out
cmc
testb
pop
or
fistps
enter
inc
mov
xchg
imul
dec
jo
scas
xchg
int3
cmp
mov
pop
loop
ficompl
imul
andb
dec
fbld
fsubrl
negl
xor
cmp
sub
xchg
or
jge
stos
fnsave
pop
insl
cmp
jbe
leave
sub
mov
cwtl
je
in
mov
idivl
outsw
xchg
and
fidivrl
dec
sahf
aas
pop
sahf
enter
jmp
pop
push
jmp
or
mov
and
xchg
out
rorb
push
push
push
pop
mov
in
scas
and
adc
dec
push
jb
pop
ret
xchg
jo
xor
rorl
cmp
lods
jmp
add
dec
ljmp
cmpl
push
negb
inc
push
sahf
mov
and
aas
outsl
shr
les
loope
loop
mov
stos
or
sbb
cli
mov
dec
dec
repz
addr16
enter
mov
mov
mov
push
dec
movsl
xor
aaa
dec
lahf
cwtl
leave
iret
mov
sbb
popf
dec
mov
sub
loopne
xchg
fistpll
lahf
test
stos
test
incl
xlat
popf
es
xchg
dec
je
andl
mov
cwtl
les
jae
xor
add
out
clc
xchg
dec
daa
iret
push
pop
in
adc
mov
and
xor
mov
and
mov
xlat
and
je
and
add
test
popa
ret
sar
xchg
scas
adc
pop
sbb
xchg
push
ret
jp
and
aam
jbe
sti
cwtl
pusha
mov
test
dec
xchg
shll
mov
jbe
jmp
adc
mov
out
or
xchg
push
enter
push
fsubrs
or
addr16
sahf
or
mov
cwtl
mov
inc
mov
shl
mov
loopnew
sahf
jne
mov
dec
push
push
push
mov
and
jge
pop
xchg
loop
jge
jbe
hlt
loop
imul
fucomi
inc
dec
rcrb
and
or
decl
popa
aaa
aas
hlt
daa
jg
fs
fidivs
out
sarl
dec
cmpsb
iret
pop
out
in
mov
xor
sbb
test
mov
das
inc
scas
sub
cmp
roll
mov
mov
pop
nop
pop
sub
or
data16
cmp
adc
sub
xchg
xchg
mov
dec
jl
inc
js
iret
push
ret
xor
xor
push
xor
mov
outsl
lock
pop
pop
test
out
push
adc
sbb
xorb
or
pop
test
test
cmp
jo
and
xchg
divl
loop
shrl
lahf
jb
push
roll
mov
addr16
sahf
xor
and
sbb
fists
mov
rorl
stos
xor
sub
sti
sbb
leave
and
int
jnp
xchg
push
cmp
push
mov
pop
lcall
mov
pushf
lcall
mov
xchg
push
shlb
xchg
rorb
out
jl
out
and
out
pmovmskb
lock
or
xor
shll
xor
js
inc
sbb
sub
mov
hlt
or
dec
sub
add
mov
push
mov
into
dec
dec
xor
mov
mov
cmp
fimuls
jecxz
and
jne
sarl
in
aad
loop
pushf
call
cwtl
inc
fs
adc
int
push
add
call
outsb
loope
pusha
adc
xlat
inc
sub
push
or
data16
inc
jg
push
mov
inc
add
or
add
xor
inc
nop
cld
mov
rcrb
aam
je
cmpsb
rclb
adc
fbstp
fimull
push
int
sub
loope
icebp
in
imul
xchg
mov
pop
jge
add
pop
test
pop
fs
std
sbbl
sub
lds
cltd
mov
cmc
pavgw
rcl
outsl
mov
lds
movsb
out
inc
xorb
ljmp
or
push
sarl
les
idivb
in
ret
scas
jb
dec
or
fwait
jb
jp
cmp
mov
test
cmp
mov
jl
inc
lahf
cmp
cmpsb
cmp
int3
and
push
out
dec
jno
or
jae
add
cmp
cmp
leave
xchg
paddq
cmp
add
push
popf
jns
sbb
jno
lds
jmp
mov
dec
ret
jno
popa
cld
insb
dec
cmp
sub
dec
cs
jp
push
sub
scas
jecxz
adc
lods
mov
movl
inc
ds
and
clc
leave
sbb
scas
test
push
adc
mov
and
cmpsl
pop
dec
repnz
mov
push
lea
fs
imulb
mov
loopne
xor
int
loop
leave
lods
sahf
ss
push
in
stos
pusha
insb
inc
inc
outsl
add
test
add
jbe
mov
cli
jne
cli
jo
mov
pushf
addr16
sbb
sub
xchg
xchg
pop
inc
lods
mov
mov
stos
cmp
syscall
cwtl
fs
outsl
jp
push
fcoms
dec
repnz
dec
cs
pushf
mov
mov
mov
add
cwtl
lds
pop
cmp
cmpsl
sahf
dec
or
pop
shl
dec
sbb
push
pop
icebp
pop
jecxz
mov
sub
out
sbb
pop
mov
lods
je
pop
sbbl
jecxz
add
fstpl
mov
jne
jmp
sbb
xchg
arpl
push
rorb
jg
dec
std
aad
pop
das
pop
and
and
add
mov
sub
ja,pt
add
bound
push
sbb
aad
add
out
pop
ljmp
xchg
xor
push
outsb
mov
and
and
or
loopne
in
stc
or
repz
mov
push
mov
orb
xchg
punpcklbw
inc
mov
xchg
pop
repz
sti
mov
neg
pop
sarb
in
xchg
stc
loop
lahf
sbb
ja
adc
cmp
and
pop
icebp
add
push
push
sub
xor
je
lcall
mov
hlt
ficoml
add
push
test
dec
add
out
sbb
fstps
movsb
inc
mov
and
addr16
test
repnz
iret
adc
xor
in
addr16
or
jp
scas
xlat
cmp
insb
addr16
xchg
inc
push
mov
push
xchg
sbb
adc
movsb
mov
cld
dec
pop
iret
imul
out
or
bound
aad
fisubrs
popa
sti
pop
pop
pop
popa
adc
jle
mov
xlat
inc
sti
nop
push
nop
sbb
repz
repz
roll
sbb
sbb
xchg
xchg
and
mov
in
mov
dec
fcom
sub
stc
xchg
sbb
cli
stc
mov
ja
fiadds
leave
sbb
jecxz
dec
mov
xor
adcb
lret
cwtl
dec
sub
mov
sub
and
out
inc
lds
pushf
fs
inc
movsb
aas
mov
cmpsb
sbb
mov
bound
rdtsc
lahf
loope
lret
mov
mov
bound
fcompl
scas
fwait
sbb
push
mov
shrl
sub
scas
mov
test
inc
xchg
popf
imul
pop
jmp
xchg
scas
sbb
outsb
or
into
inc
lcall
int
push
lret
out
sub
js
fdivrs
adc
pop
pop
adc
loop
popa
jnp
outsb
pop
mov
sbb
sub
outsb
sbb
sbb
inc
sar
add
in
xor
dec
pushf
push
pop
jg
in
adc
mov
loopne
xor
scas
fisubl
xchg
jnp
cmpsl
mov
bound
push
subb
pop
sbb
push
mov
xor
addr16
mov
xor
mov
sbb
xor
dec
push
jns
std
xor
mov
inc
ficoml
push
shl
leave
fstpt
stc
leave
dec
test
mov
cld
cmpsb
adc
cmp
inc
repnz
nop
sbb
ret
sahf
pop
into
scas
ret
cs
orl
ja
repnz
nop
ja
js
mov
outsb
jp
or
js
mov
ljmp
mov
fwait
in
sub
hlt
stos
ljmp
cmp
aad
push
mov
stc
dec
add
test
fidivl
adc
xor
dec
js
inc
out
fisubrs
xchg
inc
negb
fldcw
sbb
xor
lods
cmp
andb
xor
pop
push
inc
loop
sbb
dec
sahf
inc
ret
cli
call
in
jg
clc
arpl
fisubrl
mov
lahf
mov
dec
mov
cmp
fisubl
dec
cmp
sahf
sbb
pop
inc
fs
inc
jo
add
stc
adcl
dec
mov
or
aas
jle
mov
dec
loope
mov
push
xor
in
mov
lds
imul
inc
adc
jecxz
data16
xchg
or
cmpsb
pop
push
mov
ret
jae
imul
test
stos
pushw
jo
stos
or
push
cwtl
decb
push
test
sub
mov
adc
lret
scas
shll
icebp
inc
and
add
subb
dec
nop
mov
in
add
add
aam
pop
mov
sbb
dec
jg
cmpsl
mov
cmpl
sub
and
mov
cltd
out
cmp
xor
repnz
arpl
mov
adc
sub
dec
inc
lret
push
mov
adc
pop
mov
inc
jmp
into
fwait
push
cmp
inc
mov
test
popa
lds
inc
mov
clc
es
add
jmp
fistpll
inc
sahf
jecxz
or
mov
sbb
or
mov
in
movsb
into
sbb
aaa
jb
popl
repnz
popa
cltd
outsb
shll
popa
clc
std
pop
lret
ret
outsb
bound
out
pop
or
adcb
xor
xchg
fcomi
insb
mov
loope
rorb
lcall
test
mov
adc
dec
mov
negl
and
mov
subl
push
inc
mov
movl
insb
lahf
dec
insb
mov
xchg
ret
shll
push
push
push
out
mov
sub
ljmp
cmp
push
hlt
jae
jecxz
movsb
rol
jp
mov
ja
cmpsb
mov
dec
bound
pop
jo
scas
and
je
cmp
pop
add
jbe
cli
inc
push
pop
cmp
sti
mov
push
fistl
test
repz
and
or
pop
sar
es
pop
push
fcmovnu
sub
ljmp
das
fistl
mov
inc
mov
mov
andb
jno
aad
or
scas
or
jp
dec
add
jnp
cwtl
cmp
insb
xor
in
adc
mov
shr
sbbl
mov
cmpsb
loope
mov
xchg
push
jns
xor
movsl
mov
stos
cltd
pop
fistpll
fimull
insl
bound
das
pop
lea
test
repz
push
push
test
xchg
dec
inc
or
pop
and
mov
hlt
lcall
mov
hlt
stos
xchg
sti
dec
inc
fsubs
or
sbb
in
in
aaa
test
lods
mov
mov
stos
xchg
repnz
xchg
mov
ja
mov
sbb
adc
sbb
jmp
inc
orb
pop
repnz
out
sbb
les
sub
div
xor
lret
data16
test
rcll
mov
push
testl
add
push
sub
outsb
jmp
in
imul
mov
xchg
xor
es
pushf
mov
push
outsb
mov
jl
xchg
ret
js
add
mov
fldenv
pop
cmp
mov
cmpsl
out
pop
insb
dec
loopne
aaa
dec
daa
ja
cmp
into
data16
xchg
add
add
sub
inc
stc
jecxz
rolb
insb
sbb
push
xchg
mov
mov
lods
sub
push
movsl
and
popf
add
aad
test
and
inc
out
dec
loop
pop
push
sbb
and
nop
push
movsl
and
aas
mov
enter
test
test
inc
repnz
jle
ror
mov
xor
js
or
ljmp
push
sysret
out
mov
and
arpl
fsubs
lcall
jmp
mov
in
jecxz
mov
sbb
jo
cmp
mov
sbb
dec
mov
mov
pop
xchg
popf
shl
add
fwait
call
je
push
push
xor
adc
cld
xchg
xchg
xchg
icebp
arpl
lea
es
mov
imul
int
dec
dec
ljmp
rcll
sahf
idivl
nop
mov
jae
and
fisttps
sub
push
push
ja
cmp
add
imul
jne
sbbl
pop
out
mov
fisubl
or
xchg
jge
shll
scas
cwtl
in
jbe
scas
loope
std
mov
pusha
add
pcmpgtb
sbb
outsl
fdiv
rorb
dec
lock
movb
fdivrl
dec
pop
push
sbb
stos
loopne
inc
xchg
sbb
jns
fimuls
test
shlb
sbbb
mov
xchg
or
xor
pop
call
and
jo
test
mov
adc
call
je
lahf
and
pop
in
aad
stos
push
ds
sub
addr16
cmp
mov
scas
inc
push
aaa
scas
adc
mov
push
lods
mov
dec
xor
out
cld
orl
sub
push
or
bound
push
inc
ror
mov
je
nop
bound
mov
test
or
xlat
fidivl
aad
mov
push
inc
sub
loope
rcll
dec
add
addr16
mov
sbb
sbb
inc
mov
mov
cmp
sub
jecxz
stos
mov
ljmp
mov
push
inc
adc
and
sbb
and
into
cmp
call
xor
and
cmp
js
in
push
inc
cli
je
or
mov
sbb
aad
xorb
mov
je
mov
jbe
cli
inc
xor
sbb
xor
jge
int
ss
jg
sbbb
mov
leave
mov
xlat
mov
movl
fdivp
in
sub
std
call
mov
imul
and
loopne
call
push
mov
add
mov
lods
jo
int3
scas
pop
sub
push
xchg
push
mov
dec
loopne
popa
sub
and
imul
push
std
mov
out
adc
scas
add
pop
scas
dec
lods
push
mov
mov
shlb
gs
sbb
xchg
adc
jne
jl
cmp
loopne
adc
fwait
dec
daa
shll
lcall
push
out
pop
xchg
cli
dec
pusha
pop
pop
scas
movhps
or
into
jge
xchg
pop
insl
es
insl
rorl
in
in
mov
sarb
lods
adc
in
subl
inc
xchg
dec
xchg
aam
nop
add
ss
and
mov
inc
cmp
ret
sub
push
mov
cli
aaa
lea
lea
pop
jl
sbb
es
jb
jno
aas
mov
lcall
stc
int
lods
xchg
pop
jbe
movb
jmp
stos
rcrl
mov
pop
out
imul
sub
cli
insl
cmp
test
in
popa
movl
xorb
mov
dec
ss
push
insb
jno
or
mul
cs
pop
cmp
sub
ficoml
push
daa
sti
scas
dec
mov
xor
ret
fiaddl
mov
inc
subb
or
xchg
sub
dec
mov
cs
daa
sbb
push
xchg
push
loop
popf
push
xchg
or
xchg
scas
xchg
sti
sub
inc
shll
enter
ss
adc
popf
inc
xchg
cltd
add
jnp
test
je
or
fildl
dec
int
lods
or
jne
or
cltd
pop
std
add
pop
adc
cmp
mov
out
push
rcl
cmp
repz
int
ds
ja
jl
pusha
xchg
jae
push
ret
sub
pop
rorb
and
xor
sahf
shrb
andb
sub
and
insl
cli
shrb
xorl
mov
adc
adc
out
out
loope
jge
adc
imul
js
bound
or
mov
loopne
xchg
mov
xchg
je
ljmp
stc
jnp
xchg
mov
jb
shrb
in
adc
xor
pop
mov
clc
je
dec
lea
push
fucom
fcoms
aad
sub
std
or
test
cwtl
in
inc
adc
mov
sub
push
cmp
mov
mov
dec
fldt
jl
jmp
nop
cs
jg
xchg
int
dec
jnp
sbb
jnp
add
inc
cmpsl
out
fstps
mov
ljmp
cmp
mov
and
pop
xlat
sbb
in
fsubrs
movsl
cld
mov
lret
jge
insl
sbb
ljmp
mov
or
lahf
add
xchg
dec
jns
lock
call
jecxz
cmp
test
mov
aad
xchg
mov
repz
shll
cwtl
sub
mov
ret
das
xchg
sub
push
mov
and
pop
mov
je
lea
icebp
or
sub
roll
cmp
clc
aaa
ret
mov
adc
loope
jle
jno
cwtl
pop
inc
lcall
test
shrl
bswap
test
sbb
sti
mov
xchg
mov
scas
fisttpl
movsb
cmp
xchg
inc
insl
xchg
sbb
test
xor
shlb
inc
jle
push
push
cli
fcompl
jl
cltd
dec
lods
mov
ss
xor
ss
pop
stos
mov
mov
cld
loope
cmpsl
sti
jne
xchg
jge
scas
gs
ljmp
into
push
inc
fiadds
aas
xchg
insb
lcall
and
cmp
pop
xor
sarb
into
adcb
int
ficoml
lds
push
jecxz
pcmpeqd
pop
mov
xchg
pusha
leave
and
dec
xor
push
call
cltd
cmp
popf
ficomps
xlat
dec
cmpsl
imul
jae
jecxz
adcb
cld
mov
mov
or
dec
inc
push
imul
push
adc
pop
mov
lret
add
xcrypt-ofb
cmpsl
scas
imulb
dec
sbb
aad
xor
sub
pop
or
stc
sub
js
ret
into
xchg
jmp
jl
and
cld
mov
mov
pop
fwait
lret
outsl
jns
adc
jno
in
sub
mov
shll
pushf
xlat
xor
xor
cmp
stos
leave
leave
xchg
in
cmpsb
out
out
add
ja
pop
rorl
mov
cmpsb
lret
leave
int
test
insl
aad
les
fdivs
movsl
adc
xchg
fwait
dec
loopne
and
rolb
rclb
inc
mov
dec
pop
push
dec
into
test
shrb
mov
cltd
pop
lahf
jne
test
mov
scas
out
test
and
hlt
nop
push
mov
fdivs
popf
pop
cmp
inc
pop
xor
and
push
push
scas
lods
push
jno
pop
or
mov
popf
jl
sub
test
mov
sbb
xor
push
inc
mov
xchg
mov
mov
mov
pop
leave
cmp
or
cmpsl
js
jecxz
or
adc
jge
push
jns
rcl
dec
fcomi
push
pop
mov
data16
inc
scas
je
bound
mov
add
outsb
imul
mov
or
cwtl
bound
push
pushf
fwait
addr16
cli
shrb
sbb
inc
jno
dec
push
xchg
mov
loope
mov
sbb
lfs
cmp
inc
mov
dec
cmc
push
jge
cmpl
mov
sub
pop
and
fs
icebp
scas
mov
fwait
xor
mov
rorb
jno
imul
jne
xor
fwait
ljmp
ja
fs
pop
cmp
sbbb
mov
xchg
inc
int
imul
dec
cld
sub
xchg
mov
mov
in
xchg
or
in
addb
lcall
popf
dec
cmc
inc
inc
sub
iret
lea
pusha
mov
xchg
cs
dec
pop
sahf
jle
loopne
mov
pop
add
adc
mov
js
mov
cmc
add
adc
mov
mov
aaa
mov
lods
mov
fsubrl
mov
pop
testb
pop
movsl
int
mov
cmpsb
add
and
stos
into
mov
jge
std
push
xor
movsb
adc
xor
dec
ds
lea
jg
rolb
mov
inc
mov
pop
sub
inc
sub
sub
fcomp
jo
pop
dec
test
xchg
push
add
mov
lcall
mov
addl
inc
insl
lcall
mov
xor
popa
lock
div
sarb
xchg
jo
mov
shll
sbb
and
scas
outsb
fistl
ffree
mulb
pop
xor
push
push
mov
xor
and
push
mov
dec
stc
flds
lds
ffree
adc
retw
cmp
cld
enter
mov
fistps
enter
xorb
jno
test
xchg
ds
or
stos
mov
insb
or
cmp
cmp
iret
sub
push
inc
jecxz
jo
xlat
popa
int3
imul
clc
cmpsl
mov
cmp
xchg
jmp
xchg
leave
in
loope
mov
in
ja
sbb
daa
xchg
fnstenv
push
push
adc
ljmp
fldl
nop
or
ret
fsubrl
push
push
add
in
fidivrs
addl
repnz
xor
sub
sbb
push
mov
xchg
xchg
inc
inc
rclb
stos
clc
xchg
aam
jo
sub
fbstp
xor
sbb
ja
xor
xchg
testl
movsl
in
repz
insb
repnz
pushf
enter
stc
add
int
mov
imul
xchg
lds
les
adc
inc
sbb
mov
pop
dec
ljmp
out
or
lahf
lahf
pushf
lret
stos
loop
dec
lret
dec
stos
push
push
adc
sub
add
mov
sbb
push
in
vcvttss2si
aas
jecxz
movsb
popa
mov
inc
lea
outsl
and
popa
or
sbb
pop
sub
in
add
dec
in
inc
test
fwait
stos
lea
xchg
xor
adc
movsb
aas
pop
add
add
shlb
cmp
iret
fcmovnu
fndisi(8087
inc
mov
sub
dec
jae
dec
aad
xlat
add
add
inc
leave
hlt
aam
fbld
rcll
push
out
cmp
cltd
jbe
lock
inc
dec
insb
fisubl
adc
inc
xor
mov
mov
dec
fdivs
xchg
out
cltd
mov
incl
out
lods
pop
pop
inc
cmpsb
lret
xor
into
jns
gs
mov
fwait
jno
cmpsl
mov
int3
jns
or
cmp
or
sbb
scas
ficomps
dec
mov
push
vpandn
inc
cmp
pop
popa
stos
adc
fnstcw
jo
mov
out
dec
jp
mov
push
pop
iret
xor
pop
xor
mov
dec
or
mov
mov
pop
inc
inc
inc
xchg
pop
mov
sub
mov
mov
in
add
mov
add
inc
leave
rcll
and
mov
jae
jo,pn
data16
dec
imul
inc
clc
push
adc
sub
add
or
push
add
xor
inc
pop
push
negb
push
test
sar
add
test
imul
jge
notl
xor
dec
mov
jle
jmp
dec
jp
push
pop
sbb
stos
xor
or
jns
mov
pop
or
sbb
sbb
xor
add
mov
out
mov
icebp
lods
xchg
push
fcmovne
pop
arpl
ficoms
repnz
dec
sub
cli
dec
insl
xchg
arpl
push
ds
rcr
out
sbb
cli
orl
mov
popa
aaa
ret
jnp
push
ja
outsb
mov
mov
test
jmp
arpl
lcall
sbb
inc
xor
and
mov
aam
pushf
pop
lahf
add
cmp
ss
std
dec
shrl
out
mov
call
and
add
fdivrs
xor
imul
add
out
xchg
cmp
test
push
inc
int
mov
fists
fwait
stos
in
sbb
adcl
dec
pop
out
push
repnz
fcomps
pusha
jle
rorb
hlt
xlat
mov
sahf
insb
mov
xchg
pop
dec
add
fbstp
or
enter
scas
push
sbb
out
and
mov
int3
scas
scas
mov
cmpsl
add
mov
cmp
aas
scas
fwait
rolb
aaa
cmp
fidivs
scas
rcrl
inc
mov
bswap
shrb
mov
outsb
mov
in
jmp
fnstsw
pop
push
and
inc
testb
add
imul
mov
jne
push
mov
push
rcll
iret
jne
ret
je
arpl
mov
les
pop
in
push
rol
aaa
jle
inc
or
test
lock
cmpsb
popf
outsb
or
pop
mov
pop
nop
mov
into
fnsave
jge
je
pop
xchg
daa
xor
fadd
cmpsl
rclb
ja
out
scas
into
or
pushf
repz
add
ljmp
clc
xchg
mov
les
add
xchg
rcrb
test
sub
in
jnp
inc
in
cld
sar
or
jb
in
fs
fcmovbe
and
shll
in
push
jp
lcall
js
jae
das
lods
push
add
push
cwtl
pop
out
mov
sub
loopne
fcmovnu
mov
cmc
mov
cmp
adc
push
repnz
sub
sbbl
sti
mov
cmc
popa
rcr
out
jmp
movsl
dec
nop
cmpsb
or
xor
mov
or
test
movsl
jge
lahf
idivb
dec
jge
notl
add
mov
push
pop
lret
add
adc
lock
loop
sbb
mov
cmp
inc
sbb
or
add
xchg
mov
mov
lock
popf
in
mov
jns
pop
sbb
push
adc
or
push
fiadds
push
pusha
mov
xchg
fisttpl
add
ret
xor
inc
xor
xchg
ret
push
ss
movsl
add
mov
pop
sbb
jmp
fsubrl
popa
push
sarb
dec
lahf
in
imul
cmp
push
subb
mov
aam
xchg
leave
int3
out
jmp
xorl
pop
xchg
imul
lock
cmpxchg
cmpsl
and
add
jp
sub
jno
jo,pt
push
int
add
inc
lds
stc
fdiv
jns
push
scas
mov
pop
enter
ds
push
in
or
inc
push
pop
js
sbb
add
adc
adc
sub
sub
xor
dec
mov
xor
loopne
cmp
xor
sub
cs
or
movups
mov
sub
pop
outsl
xor
ds
ror
dec
fistps
jbe
sub
pop
xor
dec
sub
add
sbb
push
aad
mov
or
or
ljmp
les
imul
lahf
mov
mov
xchg
fnstsw
jnp
inc
lret
in
mov
stos
lahf
daa
cld
xchg
sbb
ret
repnz
pop
pop
mov
ds
fwait
mov
push
xchg
aaa
sub
das
mov
in
insl
test
jp
dec
lret
mov
push
ret
sub
mov
lret
mov
dec
das
pop
xor
test
push
sti
mov
fsubr
imul
xor
lods
hlt
xchg
xchg
xor
gs
lcall
sub
mov
lret
pop
lret
push
es
scas
mov
arpl
xchg
mov
mov
movsb
lret
je
addr16
push
test
sar
popa
push
xchg
out
push
cmpb
jmp
xchg
jl
xchg
sbb
cmpsl
fcoms
mov
pop
or
repz
xchg
xor
pop
loopne
sub
sub
sti
xchg
mov
std
fmul
pop
rorb
push
cmc
mov
inc
add
jns
out
pop
inc
rolb
enter
xchg
inc
fwait
rcrl
mov
lds
iret
push
es
inc
mov
ja
loop
mov
xor
in
lds
out
aaa
pop
jo
push
fcmovnu
lods
into
fwait
mov
imul
lods
sub
inc
outsb
pop
in
jbe
sbb
movsl
lret
pop
sahf
pop
fdiv
xchg
repz
sbb
rcrb
scas
push
imul
mov
jb
outsl
dec
test
lcall
hlt
fstpt
mov
loop
enter
adc
or
xor
xor
add
push
ud2
bound
test
or
repnz
inc
mov
cmpsl
add
inc
jp
negl
add
xchg
enter
stc
cmp
nop
into
test
xchg
pop
sub
sub
inc
and
pop
mov
mov
cld
mov
jp
and
lahf
pop
mov
test
imul
inc
jp
test
loop
mov
jbe
cmpsl
mov
and
sub
out
sahf
scas
sub
lcall
iret
push
cltd
cmp
jg
sbb
test
call
or
cmpsb
fists
mov
mov
or
andl
jnp
std
sub
scas
cmp
jne
popf
sub
dec
xchg
stc
pop
ljmp
xchg
test
lods
imul
pop
test
gs
xor
fwait
mov
xchg
mov
mov
xor
sahf
push
dec
and
push
mov
adc
sbb
dec
andl
pop
push
or
push
inc
jae
xlat
ror
pop
jle
outsl
dec
pop
fsts
mov
xlat
xchg
xor
test
sti
sbb
sbb
dec
jp
push
mov
pop
lcall
sbb
out
and
xor
add
call
clc
iret
mov
add
sbb
push
mov
mov
xor
popa
fcom
orb
sbb
cmpsl
aam
ret
dec
xchg
clc
xor
arpl
xchg
std
xor
rcr
fld
inc
sbb
push
ss
stos
lods
rcrl
or
mov
xchg
or
or
adc
movsb
outsl
adc
mov
dec
xor
jecxz
mov
dec
bound
cwtl
sahf
out
iret
jbe
popf
push
in
arpl
es
and
xchg
testl
pushaw
roll
jb
cmp
loopne
mov
cld
jae
push
outsl
test
jae
test
inc
pop
scas
test
mov
sub
lahf
mov
roll
mov
mov
adc
fidivs
mov
push
je
into
shll
aad
lret
out
rcll
daa
aad
jne
add
mov
xchg
xchg
mov
je
sub
cld
ret
xlat
imul
dec
mov
lret
dec
pusha
pop
lods
jno
cmpsl
call
daa
and
cmp
xor
mov
xchg
mov
mov
dec
mov
lret
jle
cmpsb
movb
popa
push
js
jbe
ret
and
mov
sbb
test
stos
out
insb
mov
out
in
out
push
mov
jge
pushf
ja
push
push
inc
adc
pop
or
push
cli
in
imul
daa
mov
test
js
jnp
adc
dec
dec
push
cmp
in
push
bound
subb
xchg
das
rcrb
xor
mov
cmp
push
aad
frstor
in
in
pop
sub
fwait
push
fwait
lea
add
sbb
sub
sbb
add
sbb
dec
pop
xchg
hlt
ss
cltd
cmp
rolb
cmp
jnp
or
popa
jno
pop
fstpl
aam
jae
lock
imul
mov
pop
jmp
cltd
adc
fldcw
out
in
and
repz
adc
pop
sub
mov
mov
cs
out
sahf
sbb
xor
cmp
inc
inc
hlt
movsl
rcl
inc
sbb
sub
cmc
mov
insl
rcrb
mov
sub
std
fcmovnb
add
movsb
rorl
adc
mov
test
aas
push
test
and
mov
cmpsb
cmp
aaa
mov
insb
fmul
stos
rcrl
stos
sbb
jle
repz
xlat
xchg
insb
push
and
dec
inc
mov
and
add
jge
sub
pop
adc
aad
test
out
jae
je
mov
xchg
push
xor
dec
leave
adc
lds
and
out
in
outsb
push
mov
rcl
jmp
cmpsl
mov
xchg
xchg
ja
clc
les
cltd
or
out
popa
stos
cli
or
out
push
lods
xor
cmpsl
sub
test
mov
pushf
mov
cmp
mov
gs
ret
and
mov
in
push
jae
sub
and
lret
and
mov
enter
push
jle
cli
sbb
add
jae
mov
repz
mov
sub
subb
push
push
cwtl
ds
xor
stos
aam
push
xor
xor
mov
mov
push
outsl
mov
inc
mov
insl
jmp
jmp
sti
cmp
mov
vmread
jne
pop
mov
stc
adc
andb
adc
aam
stc
cmp
mov
xorb
icebp
inc
mov
imul
dec
fs
les
mov
fdivrs
pop
jb
pop
orb
or
scas
mov
repnz
loope
add
sub
or
xor
mov
loope
out
les
lret
sub
pop
lea
and
test
filds
mov
mov
scas
cli
sbb
inc
mov
dec
sbb
bound
push
hlt
inc
cmp
imul
dec
loopne
xlat
adc
clc
mulb
cmpsl
ss
fidivrl
scas
mov
or
stc
iret
sub
cmp
dec
mov
push
orl
data16
mov
call
adc
adcl
mov
or
and
fisubs
lret
mov
fwait
push
lcall
ret
pop
mov
and
leave
in
mov
xor
out
sahf
rcll
in
sub
fwait
aas
sti
fcmovbe
call
sarb
out
mov
sarl
arpl
lds
lock
mov
insb
pop
or
pop
and
test
adc
sub
sbb
push
adc
loopne
es
popf
sahf
xchg
loope
insl
testl
mov
sbb
mov
test
in
sbb
dec
xlat
rorl
mov
data16
add
or
mov
dec
mov
xchg
dec
mov
in
jecxz
lahf
xchg
cmpsb
cmp
mov
xor
dec
inc
popf
stos
data16
stos
sbb
sahf
inc
stc
add
mov
mov
mov
push
enter
data16
pop
jb
fistpll
out
jl
in
xchg
dec
imulb
sbb
and
fidivl
call
cmp
stos
xchg
cmp
ljmp
faddl
test
add
jg
xor
pop
sub
test
xlat
kmovb
xchg
imul
loop
cmp
adc
mov
sarl
ficoms
jne
aas
mov
dec
test
in
movsb
xor
cmpsl
push
out
aaa
fidivrl
insb
add
cmpl
divl
ss
ret
adc
mov
rolb
adc
scas
inc
or
inc
mov
lods
stos
mov
xor
pop
insl
mov
int3
insl
unpckhps
scas
imul
mov
mov
jnp
adc
xchg
adc
je
or
jno
add
xchg
pop
loop
dec
or
cmc
leave
cmp
pusha
or
jle
in
mov
push
xor
and
fidivrs
mov
xchg
popf
inc
in
adcl
fidivl
lock
mov
rorb
fists
repz
mov
add
mov
add
adc
mov
xchg
jmp
mov
ficomps
movsl
cmpsl
push
pop
cmp
loop
add
ds
mov
mov
sbb
pop
mov
out
sub
cmpsb
fstp
hlt
inc
sub
scas
xor
mov
cmp
jo
mov
jbe
leave
sbb
shr
sub
es
iret
adc
int3
mov
scas
inc
mov
adc
test
inc
sub
scas
mov
dec
aad
rcrl
loope
ds
fadds
fwait
sbb
jg
jne
iret
sbb
add
sbbb
addr16
clc
bound
dec
sbb
cli
mov
andl
pop
cmc
cmpsl
ret
pop
jecxz
lea
scas
push
shlb
fstpt
aam
dec
incl
xchg
push
hlt
sti
lods
iret
adc
cmp
aas
in
pop
ds
addr16
std
and
daa
test
sbb
fisttpl
fstpl
pushf
push
dec
dec
adc
je
push
and
shrb
daa
lds
mov
in
inc
stos
sbb
pop
dec
test
or
int3
repnz
xchg
xchg
outsl
xchg
cmp
mov
dec
or
cwtl
xor
mov
jecxz
loopne
xor
mov
cli
stos
add
add
pusha
insl
xchg
add
movsb
push
xsave
call
add
mov
ret
dec
jbe
ret
mov
push
sbb
sbb
jbe
inc
add
lods
pop
loop
push
mov
xor
fdivrs
push
iret
dec
sbb
nop
into
mov
push
mov
mov
mov
stos
pop
cmpsl
pusha
pop
mov
enter
pop
cli
xor
out
int
sub
xchg
adc
pusha
add
es
pusha
daa
mov
pop
shll
test
aaa
mov
jo
and
xor
sbbl
notb
xchg
jmp
xchg
lahf
xlat
jb
movsb
pusha
cmp
sub
shll
mov
mov
fabs
adc
pop
stos
mov
xchg
pop
scas
fisubrs
cmp
cmpsl
mov
hlt
les
sbb
popf
lds
push
inc
lret
arpl
add
cltd
lods
ret
sub
into
adc
ljmp
cli
push
xchg
mov
mov
add
pop
sub
imull
jnp
call
sbb
mov
cmp
fsubr
inc
mov
lods
mov
aas
push
popa
jg
mov
adc
in
cltd
fsqrt
movsb
dec
ret
aaa
iret
xor
jb
mov
pop
insl
ret
push
insl
scas
imul
pop
cltd
subb
adc
mov
popf
movsb
inc
inc
xchg
cmp
jae
lock
data16
xor
jg
xor
xor
popf
push
mov
stos
out
adcb
jge
psrlw
mov
push
cmpsb
sub
or
out
cmp
push
sub
iret
sti
xchg
mov
and
cmpsb
or
stc
test
mov
adc
mov
lock
mov
cltd
and
call
mov
dec
or
cli
dec
xor
pop
adc
aam
rcrl
das
sub
sti
xchg
inc
jmp
xchg
add
or
jl
ss
divb
mov
stos
dec
sbb
jecxz
add
mov
in
push
loop
int3
adc
push
mov
int
pop
test
and
ja
out
pop
mov
push
pop
testb
sub
mov
sub
mov
test
sub
pop
push
jl
pop
inc
pop
mov
shrl
sbb
add
inc
sbbb
negl
cmpsl
stc
mov
ss
mov
fs
popa
aas
pop
mov
arpl
sub
sbb
and
mov
jae
jne
lret
dec
xchg
int
cmp
push
pop
cmpsl
fst
sbb
lcall
into
sarl
xor
add
mov
add
call
imul
xor
push
fcoml
mov
adc
xchg
popa
imul
aaa
call
xor
xchg
cltd
jl
xchg
jecxz
jo
movsl
imul
ds
fs
cltd
in
fdivl
xchg
loop
xchg
xchg
out
outsb
fistps
jo
mov
mov
mov
ljmp
xchg
inc
push
mov
lods
and
inc
mov
adc
sbb
sarb
mov
ss
div
add
pushf
idiv
push
rol
push
movsl
leave
pop
dec
mov
stos
mov
movsb
test
lods
lods
push
xor
mov
sub
data16
and
xchg
fxch
jno
mov
and
sbb
fs
xor
ror
data16
out
xor
es
sub
inc
addr16
lds
sub
loopne
psubb
lods
movsl
or
pop
push
pop
wbinvd
iret
arpl
mov
mov
mov
inc
nop
outsl
jno
scas
call
jle
adc
inc
jnp
mov
fbstp
jmp
pushf
outsl
sbb
into
push
push
scas
shl
dec
mov
call
out
jg
sti
popa
imul
inc
dec
incb
mov
mov
push
xchg
xchg
mov
leave
ja
lret
int
and
cmpb
mov
dec
pop
xor
pop
and
js
cltd
pusha
cmc
and
jle
jmp
fs
xchg
push
popa
cmp
and
mov
inc
cmp
outsb
dec
jge
lcallw
subl
insl
and
add
and
fisubrl
pop
imul
xchg
jle
shll
mov
fs
std
clc
mov
cltd
xchg
ss
inc
daa
fists
sub
xor
dec
mov
and
add
or
xlat
mov
dec
mov
sub
leave
push
push
pop
das
sarl
dec
out
lahf
mov
push
andl
add
add
xor
inc
push
cmc
icebp
and
cmp
mov
mov
and
jg
cmp
addr16
pop
push
pop
js
outsl
sbb
ljmp
fcoms
add
mov
dec
mov
sbb
lods
or
cmp
cs
je
jne
pop
mov
daa
mov
pop
dec
fildll
jno
adc
adc
jg
mov
mov
or
imul
les
mov
lods
add
push
es
nop
mov
xchg
call
es
leave
sbb
addr16
sbb
idivl
cmc
cmp
les
cwtl
push
call
lahf
or
push
lahf
cwtl
mov
or
push
xor
ret
mov
mov
repz
mov
out
and
mov
ja
int3
mov
lds
pushf
fsubrl
adc
sbb
outsb
movsl
shlb
jns
scas
cmc
les
jecxz
imul
fsubr
mov
xchg
in
mov
jbe
jmp
xorb
sbb
pop
icebp
mov
lahf
insl
iret
lcall
dec
rcrb
ficoml
out
adc
jmp
shr
test
jecxz
movsb
inc
cmp
mov
fwait
in
bound
mov
sub
sarb
sub
mov
xlat
dec
int
jne
fstl
sbb
mov
ret
aas
lods
testl
mov
mov
clc
mov
ficoml
lock
sub
xchg
popa
xchg
push
mov
mov
dec
sub
prefetch
or
cmp
into
out
lock
arpl
leave
mov
pusha
rol
enter
or
push
jmp
sbb
dec
js
sbb
sub
or
je
aaa
ja
xchg
lret
fstpl
push
adc
xchg
std
pop
push
xlat
lret
sbb
mov
jae
hlt
dec
dec
cld
mov
xchg
rcll
jbe
push
mov
push
mov
add
pop
dec
jno
shll
dec
mov
pop
sar
mov
rorb
cmp
lcall
jp
cmc
xchg
xchg
inc
cmpsl
jge
ret
lret
mov
scas
sbb
dec
dec
sbb
xor
in
std
add
or
mov
xchg
mov
push
fisubl
mov
ss
in
aam
jecxz
notl
mov
or
adc
sbb
bound
imul
ljmp
ja
xor
jne
pushf
js
xor
pmulhuw
loope
xor
xlat
insl
cld
rcrb
dec
jmp
in
cmpsb
and
sub
mull
dec
inc
dec
dec
sub
dec
mov
and
push
cmpsb
jne
inc
outsl
push
jnp
fsubr
cmp
aam
inc
mov
mov
icebp
jmp
pop
mov
adc
xchg
lcall
xchg
fmull
sets
pop
push
jno
out
call
inc
in
pop
pop
fld
push
cmp
lahf
aas
push
jge
inc
popa
add
adc
mov
or
gs
into
cli
sbb
ja
scas
loop
xchg
jp
pusha
cmp
inc
roll
inc
or
pop
pop
xorl
xchg
lretw
mov
test
lods
pop
repz
xchg
push
cltd
adc
dec
add
pushf
cltd
filds
xchg
jbe
add
push
sbb
arpl
mov
inc
fwait
push
orb
xchg
push
mov
or
ds
inc
jle
xor
in
or
aad
sti
cmp
adc
jns
adc
outsb
dec
imul
push
cltd
fistps
lock
mov
clc
enter
mov
add
dec
lcall
dec
in
aaa
mov
rcrb
pop
roll
mov
scas
mov
mov
push
pop
sub
inc
rcl
pop
dec
fwait
in
add
sbb
dec
not
xchg
jge
push
or
popa
xchg
jmp
inc
mov
push
pop
test
cs
jbe
stc
pushf
mov
adc
push
leave
inc
jb
loope
fisttpl
faddl
and
add
in
sub
lods
jl
ret
cmp
movsl
mov
mov
mov
popf
stc
nop
ss
pop
jb
add
add
movsl
insb
adcb
stos
pusha
cmpsl
cld
int3
pusha
pop
mov
js
pop
xor
in
inc
xor
ftst
push
xchg
mov
adc
incb
int
inc
jae
call
pop
fxch
jmp
fcoml
je
dec
fincstp
rolb
jne
cmp
or
mov
orb
popa
loop
popa
and
popa
roll
inc
push
ss
out
cld
adc
mov
cmpl
xchg
test
xor
dec
sarb
ljmp
cmp
and
int3
adc
push
pusha
sbb
mov
movsb
mov
xchg
fistps
incb
mov
rolb
push
jl
mov
jbe
ja
nop
lret
nop
call
adc
inc
sbb
jnp
hlt
les
leave
orb
jecxz
int3
adc
out
adc
mov
cmpsb
pop
dec
imul
push
push
dec
jp
rolb
mov
das
iret
lock
das
push
or
hlt
jns
cld
negb
mov
mov
shlb
push
cli
jnp
push
and
mov
and
mov
sbb
pushf
iret
js
xchg
dec
jnp
xor
int3
mov
pop
cmpsb
push
jnp
data16
push
pop
add
ret
test
sbb
sub
fidivrl
push
out
pop
icebp
push
js
and
jnp
insl
adcb
dec
add
sub
repnz
lds
cli
push
adc
call
sbb
bound
shlb
push
jno
jge
lea
cmp
pushf
push
sbb
xchg
std
inc
dec
mov
fildl
jl
jmp
out
adc
sbb
pop
cmpb
xor
pop
dec
mov
cmp
shll
sbb
aaa
push
cmp
sbb
test
ret
dec
repnz
mov
pop
leave
data16
cli
dec
inc
or
loop
push
pop
lea
cwtl
jno
int3
sub
test
add
push
pop
jecxz
cmp
sub
out
stos
into
test
inc
lahf
fld
add
shll
es
mov
sbb
mov
in
out
out
movsl
inc
mov
fidivrl
into
stos
lcall
repz
inc
sub
and
dec
sbb
push
mov
inc
pop
mov
int
xor
sub
lods
mov
enter
pusha
test
cmp
push
push
lea
fimull
lock
outsl
loope
adc
xchg
add
dec
mov
inc
cmpsb
jae
xor
cmp
push
sbb
movsl
xor
mov
and
and
cltd
rolb
imul
jge
jns
jno
pop
popf
add
nop
imul
jnp
lea
mov
inc
sbbl
mov
pushf
xor
mov
mov
daa
lds
scas
mov
sar
inc
lret
pop
lds
lods
ficomps
inc
mov
in
mov
add
jae
out
jo
in
cltd
iret
or
push
xchg
dec
scas
mov
pop
movsl
leave
push
in
cmpb
push
or
mov
and
lret
in
movsl
push
loope
xchg
mov
jecxz
adc
nop
dec
adc
cmp
nop
lahf
test
or
scas
add
pusha
jno
cmp
inc
jo
arpl
jge
fldl
xor
xor
cmc
out
push
movsl
lods
sbbl
push
push
fistl
testb
pop
sbb
dec
sub
mov
push
jno
push
loopne
mov
sbb
stc
adc
mov
jae
pop
xchg
mov
call
ret
pushl
lret
jg
inc
sahf
das
jnp
dec
in
and
iretw
jmp
jo
pop
and
add
negl
sbb
loop
cmp
cmp
test
sub
shll
rcr
add
sbb
sbb
or
and
inc
xchg
into
mov
add
test
and
dec
cmp
cmpsl
pop
inc
pop
dec
sbb
mov
mov
ja
push
icebp
pop
fistps
rorl
test
jae
aam
je
mov
mov
fldl
lock
cmpb
stos
cwtl
es
out
jne
sbb
pop
xorl
xor
stos
push
xor
push
arpl
add
lock
cltd
inc
sbb
push
dec
xlat
loopne
pop
pop
inc
jle
test
inc
lock
jmp
dec
dec
imul
mov
movsb
std
inc
xchg
ret
push
lods
cwtl
adc
push
cmpsb
jecxz
out
daa
outsl
mov
test
inc
cmpsl
cli
or
iret
test
sub
mov
inc
dec
lods
push
pop
shll
ljmp
int
pop
scas
sahf
jmp
ret
lahf
xor
add
std
lods
cltd
xor
test
fs
sub
pop
push
ret
cmpsl
aas
jp
sbb
push
jno
jle
xchg
aam
outsb
shlb
mov
cmp
lock
pop
lea
inc
xchg
lods
lahf
aad
mov
inc
cmpb
jo
fwait
lods
inc
pop
mov
or
or
pop
leave
stc
test
insb
xchg
or
cli
cwtl
or
aaa
in
out
movsl
scas
pushl
outsl
xchg
lcall
ja
bnd
repnz
add
lahf
mov
fldl
stos
mov
test
adc
mov
insb
cs
sbb
ljmp
call
imul
addr16
pusha
dec
stc
jmp
ds
into
xor
and
or
mov
or
insb
test
mov
js
and
aad
leave
xchg
mov
dec
es
mov
lea
outsb
pop
imul
sub
das
adc
xor
pop
repz
mov
push
xchg
sub
cli
mov
jmp
push
lds
push
test
ljmp
push
push
cmp
jl
mov
mov
dec
dec
mov
jnp
push
cmp
fdivrs
push
nop
or
in
pop
andl
ja
fstpt
mov
outsb
stos
cmpl
xchg
mulb
pop
leave
xor
push
sub
jbe
xchg
mov
lahf
aaa
data16
lds
xor
jle
dec
sbb
jp
das
push
scas
push
inc
movsl
xchg
test
push
adc
add
fcompl
ljmp
aas
cmp
insb
add
sahf
add
je
push
cmp
sti
nop
push
shll
loope
lcall
xchg
int
or
mov
std
xlat
jmp
mov
lret
jge
pop
pop
test
repz
jmp
jo
pop
adc
xchg
iret
mov
mov
lock
sti
or
mov
je
sbb
stc
mov
in
and
stc
cmp
dec
mov
mov
xor
decl
outsl
jle
or
in
fwait
add
das
nop
xlat
call
cmpl
clc
lods
push
icebp
jge
shlb
mov
cmp
mov
mov
ret
pop
add
jo,pt
leave
pop
scas
inc
aam
xchg
sub
mov
mov
imul
and
mov
mov
icebp
enter
loop
bound
jo
xor
fisttps
pop
xor
repz
mov
inc
or
lods
pop
dec
jp
and
and
shrb
dec
inc
hlt
subb
add
jp
mov
pop
cmpsb
add
shrb
mov
leave
js
and
adc
imul
inc
sbb
xchg
mov
push
mov
sbb
mov
pop
pop
sbb
fcompl
mov
jge
mov
int
insl
in
sahf
insl
jmp
jp
dec
mov
insb
leave
loope
add
inc
das
es
mov
xor
add
or
mov
fidivrs
lea
iret
imul
nop
rol
push
xlat
xor
out
pusha
mov
clc
clc
in
inc
jb
addb
pop
dec
dec
push
dec
dec
lds
adc
sub
fwait
mov
icebp
lret
inc
jmp
fldenv
sub
cmp
rclb
popf
xchg
lea
ljmp
arpl
jp
jae
test
mov
pop
cld
xchg
sub
mov
xchg
jb
cld
int
add
jno
lods
add
sub
mov
xchg
int3
mov
aad
es
xchg
ds
loopne
pop
mov
inc
push
add
sub
cmpb
inc
pop
popa
or
outsb
ljmp
xor
in
out
stos
pop
pusha
call
call
mov
shrb
aam
stc
lock
lahf
and
leave
or
sbb
mov
nop
in
mov
push
push
or
sarb
push
fwait
inc
call
out
push
mov
loop
popa
and
cmpsl
mov
sbb
xor
and
push
scas
leave
inc
rcrb
push
mov
add
xchg
xchg
jle
sbb
mov
sub
push
mov
xor
aas
sbb
fildl
fisttpl
bound
push
addr16
dec
clc
push
jno
or
ret
iret
mov
sbb
jle
mov
sbb
inc
jae
jg
cmpsl
arpl
jp
stc
sbb
enter
xlat
adc
xor
insl
cmp
adc
adc
adc
push
hlt
mov
mov
ret
mov
xchg
push
lock
adc
lcall
inc
xor
push
dec
aaa
jl
inc
fmuls
sbb
aaa
inc
out
lea
fs
pop
cmpsb
ja
pop
aam
jge
cld
jns
inc
xchg
fisttpll
dec
sbb
mov
lea
outsl
in
popa
add
rol
xor
or
xchg
in
scas
addb
jle
jmp
int3
mov
repz
xchg
pop
dec
fmuls
mov
gs
pushf
scas
subb
std
lret
test
dec
cmp
jno
cmp
jmp
pop
pop
jnp
outsb
xor
jp
cltd
enter
jo
sti
push
mov
test
mov
jmp
adc
sub
xor
addl
pop
mov
push
daa
adc
sbbb
je
xchg
loopne
orl
cmpsl
mov
add
mov
adc
xor
inc
scas
out
ret
arpl
mov
js
xor
or
fists
cmp
sbb
insl
lds
pushf
jecxz
dec
sub
enter
push
pop
adc
mov
xor
outsl
cwtl
inc
mov
les
cld
push
pusha
sahf
xor
call
cs
or
jo
adc
xchg
mov
cmpsb
popl
mov
mov
jl
test
lds
aam
add
inc
push
jl
mov
test
push
mov
fs
cli
mov
int
jb
jp
cltd
cmp
bound
icebp
mov
pop
adc
shll
mov
sti
cmp
mov
xchg
orb
fcmovbe
mov
sub
push
jbe
add
int3
sahf
or
mov
mov
les
cwtl
cmp
js
cmc
notb
insl
dec
mov
cmp
lods
out
fisttpll
jbe
jb
loopne
sub
pop
adc
xor
ffreep
sub
inc
push
inc
pop
out
and
fsubrl
push
out
btr
push
int
popf
pushl
rcr
mov
cmpsl
iret
jo
ds
mov
movsb
stos
jns
insb
in
mov
push
mull
push
sbb
push
pop
mov
xchg
mov
jb
jp
jge
scas
fisttpl
adc
jne
inc
xchg
jno
out
insb
bound
jns
adc
testb
xlat
ja
imul
scas
out
mov
cmpsb
pushf
push
testb
xor
cwtl
lcall
imul
clc
push
fstps
rcrb
push
insb
movsl
sti
sub
in
pop
or
shrb
add
into
fimuls
inc
fs
mov
dec
rcr
gs
adc
sarb
cs
mov
mov
lahf
lahf
enter
ret
popa
fidivs
mov
lret
jg
popf
or
out
popf
popl
add
xchg
adc
add
idivb
popf
leave
scas
xchg
outsl
fwait
lret
sbbl
repnz
jno
pop
pop
frstpm(287
shll
push
fisubrs
pop
ficoms
sbb
test
xor
mov
dec
scas
daa
cmpb
inc
inc
lea
and
and
pushf
inc
and
mov
pop
enter
mov
jb
in
jp
notb
pop
adc
push
adc
adc
add
pushf
adc
cmpsl
test
imul
sub
bswap
in
push
js
rcll
sbb
mov
push
inc
xchg
das
xchg
nop
adc
xchg
enter
jp
inc
or
jge
add
dec
sub
jnp
callw
outsb
cwtl
cmp
aam
mov
dec
xchg
lcall
and
imul
inc
mov
mov
jns
cli
mov
imul
mov
out
xchg
jp
mov
fcompl
cmc
push
adc
inc
movsl
jmp
mov
or
mov
xor
inc
popf
popa
sbb
adc
cmp
add
add
test
iret
adc
xor
cmp
add
ljmp
loope
int
sub
mov
cmp
mov
addr16
stos
arpl
es
dec
outsl
les
push
jnp
in
aam
gs
test
push
clc
and
push
sarl
loop
outsb
mov
jnp
das
lret
or
mov
mov
adc
in
subb
shl
sub
lods
push
mov
pop
cwtl
movsb
inc
xchg
hlt
ret
sub
xor
ja
jge
repnz
int
push
jg
xlat
out
sub
cmpsl
movsb
js
cli
and
std
dec
clc
std
xor
fisttpl
dec
scas
shll
enter
xlat
shlb
or
jae
cmp
add
jb
mov
sbb
xor
shr
adc
xor
mov
xchg
mov
sub
ja
sarb
or
fs
test
xor
add
xchg
enter
into
ja
loopne
pusha
xorl
out
dec
fildl
fwait
mov
mov
mov
sbb
lock
into
add
push
xor
or
xor
es
mov
rorb
dec
in
add
movsl
pop
cmp
jbe
jle
mov
mov
scas
gs
or
jo
aad
sub
repnz
cmp
jmp
imull
sub
dec
test
jne
lret
xchg
lar
xor
repz
push
rcll
xchg
cmp
mov
lods
cmp
inc
out
cmp
sub
pop
inc
arpl
call
pop
lods
adc
es
test
add
cwtl
and
mov
sbb
int3
iret
adc
jge
int3
inc
les
fiaddl
test
xchg
adc
mov
jns
popf
movsl
mov
and
jle
test
leave
xor
pop
pop
adc
js
mov
mov
mov
mov
mov
push
lds
outsl
lcall
clc
in
int3
jecxz
loopne
and
clc
push
adc
in
fcmovbe
pop
in
lret
adcl
lret
xor
in
mov
push
lret
sbb
add
cltd
in
jnp
mov
mov
cmpsl
ret
xlat
jp
inc
add
cmp
or
xchg
loop
pusha
data16
add
lea
mov
fadds
fdivrl
fbstp
iret
jne
ret
push
cmp
jno
adc
or
jg
mov
jne
insl
lret
add
loop
gs
and
cmpsb
xor
cmp
push
inc
cmp
jl
mov
mov
mov
out
inc
mov
std
les
jne
dec
cmp
push
push
adc
mov
dec
dec
data16
mov
adc
push
loopne
outsl
mov
lret
pop
jae
mov
stos
inc
xchg
mov
stos
stos
add
cmp
pop
push
in
leave
es
fisubrs
sbb
mov
jmp
adc
push
nop
push
filds
mov
ret
xchg
push
daa
out
icebp
scas
lcall
lds
cmp
or
adc
xor
adc
insl
fsub
and
dec
inc
inc
mov
dec
mov
stos
ds
push
repnz
fnstenv
add
fldcw
les
jge
push
cmp
sbb
mov
cmp
mov
xchg
hlt
or
push
push
push
sub
cli
ret
testb
rorb
and
cld
lods
jg
and
xchg
inc
xchg
push
push
push
jbe
mov
std
scas
add
les
pop
out
xor
mov
mov
imul
fdivl
sbb
lcall
aaa
xor
and
sti
fisubl
dec
stc
popa
mov
js
mov
lret
sbb
inc
mov
and
xor
xorl
mov
xchg
stos
fidivl
into
rolb
cmp
jl
fwait
adc
outsl
xchg
sbb
pop
jp
clc
jne
push
or
and
add
loope
sbb
inc
mov
xchg
dec
push
fwait
pop
mov
fists
dec
lcall
scas
inc
stc
jb
pop
addr16
pop
sbb
mov
test
loop
movsb
mov
out
loope
lea
les
sarl
arpl
ljmp
mov
xor
cs
mov
mov
insb
fwait
add
das
sub
ss
xchg
pop
bound
sbb
clc
push
sbb
push
add
or
sbb
sub
std
cmp
popf
pop
xor
xchg
pop
cmp
fidivs
sbb
movsl
lret
cli
ret
out
and
cmp
jmp
call
jno
fadd
fs
mov
xchg
xor
out
rclb
aas
es
jl
dec
add
pop
xor
loop
pop
sti
xchg
jno
xor
inc
cmp
and
in
push
cmp
mov
test
sbb
push
sbb
pusha
stos
add
sti
insb
xor
dec
add
lea
or
sbb
hlt
or
dec
hlt
push
adc
insb
les
loope
adcb
mov
xor
push
notl
adc
dec
lea
std
and
lcall
jmp
fdivrl
mov
dec
cmp
adc
push
mov
xchg
stos
sbb
insl
lods
jno
add
aas
mov
int
repz
cmpsb
cmpsl
gs
pop
jecxz
xlat
push
mov
jg
in
adc
imul
cld
int3
imul
push
int
mov
mov
push
lret
mov
popf
and
add
mov
pop
shr
clc
push
mov
pushf
mov
mov
cmp
aad
fwait
popf
or
pop
repz
mov
mov
faddl
fdivl
lods
fmull
and
mov
nop
cmp
jbe
jmp
ret
les
lret
sbbb
pop
enter
pop
ljmp
mov
and
fwait
cmp
stc
adc
pusha
pop
lcall
out
xchg
mov
jle
push
dec
and
adc
fnstsw
lahf
sub
outsl
push
jb
adc
loopne
fisubs
pop
movsb
pop
and
sub
and
fadds
cmp
sbb
pop
pop
out
sub
fildll
jbe
push
fiaddl
pop
bound
in
xchg
gs
lds
mov
or
les
cmc
xor
aam
push
jo
inc
sub
sub
aas
adc
and
jle
int
data16
out
loop
or
popa
mov
push
mov
xor
mov
jle
call
and
enter
pop
xbegin
pop
filds
je
outsl
mov
lea
data16
arpl
sub
and
pusha
in
pop
fs
mov
fsubr
inc
add
add
fsubs
sbb
scas
and
fwait
add
mov
loop
fdecstp
mov
lock
mov
jmp
cli
push
or
xchg
sub
fistps
lea
fidivrl
dec
in
out
cmc
add
les
dec
fiadds
add
sbb
mov
ficoml
pop
mov
dec
jle
xor
sbb
dec
mov
mov
test
adcb
dec
xor
lds
addb
xor
add
movsb
lods
test
data16
inc
xchg
push
lahf
test
mov
mov
jno
push
lea
repnz
dec
xchg
or
stos
andl
lock
testb
out
cmp
cmpsb
xor
outsb
dec
dec
cmp
sbb
pop
sub
in
fbld
mov
fmull
mov
sbb
sub
xor
icebp
scas
mov
mov
jns
sub
aam
je
mov
pop
stos
jp
or
jle
aad
movlps
sbb
mov
inc
push
pop
cwtl
adc
in
aas
roll
fwait
sub
pop
movsb
dec
sub
cmpsl
pop
fwait
jns
ffreep
and
arpl
mov
imul
call
daa
in
adc
or
xchg
sub
pop
into
leave
rorb
mov
mov
push
enter
incl
xchg
faddp
pop
int
ds
mov
testb
lea
jbe
or
lea
cs
shrl
pop
adc
push
gs
mov
push
jl
inc
jecxz
dec
sub
ja
popf
je
and
dec
push
xchg
je
jo
adc
push
xchg
push
aaa
fcompl
outsl
add
and
push
int
cs
int
and
lret
and
fs
out
dec
dec
call
loope
and
inc
xchg
jp
add
jne
xchg
je
sub
mov
cltd
cmpsb
cltd
pushf
inc
xchg
notb
or
mov
and
cmpsl
sub
fbld
pushf
sub
outsb
outsb
std
or
pop
push
sahf
pop
push
out
fadd
cmpsl
xor
cmp
hlt
mov
in
pop
jno
out
xor
lods
incb
push
cmc
aad
and
push
ret
add
xor
out
outsb
xchg
pop
mov
fsubrl
inc
pop
fwait
jmp
inc
sbb
mov
sahf
push
mov
add
jecxz
imul
rolb
outsb
pop
pusha
sbb
insb
insl
inc
mov
or
push
fcoml
lahf
jp
leave
insb
ss
es
ja
mov
mov
jae
sbb
out
mov
xlat
or
inc
xor
cmp
or
rclb
mov
mov
push
aad
dec
and
xchg
pop
int3
int
inc
test
sbb
in
icebp
aas
and
shlb
loope
xor
jnp
adc
das
fwait
daa
movsb
inc
nop
cwtl
rolb
jecxz
mov
jnp
fimuls
out
sbb
aaa
stos
push
mov
push
pop
push
jno
fnstenv
inc
cmp
push
inc
cmp
shrl
mov
test
icebp
clc
sbb
data16
xlat
repz
mov
sti
cmpl
mov
xor
mov
mov
fsubrs
cmp
adc
pop
mov
xchg
push
jns
jp
sbb
out
xchg
xor
xor
xchg
ljmp
repnz
loop
mov
popf
mov
mov
fs
mov
gs
sub
ss
push
fcompl
mov
lsl
mov
or
push
mov
cmp
dec
aas
adc
dec
sti
test
mov
or
pop
imul
dec
sbb
push
insl
mov
inc
jbe
into
lods
aad
inc
pop
shlb
jecxz
cltd
xor
xchg
pop
add
andl
inc
dec
ret
push
mov
and
mov
cmpsb
enter
rolb
loop
outsb
and
ret
adc
pop
rorb
push
aas
jl
pusha
orb
push
cltd
flds
mov
js
jnp
movsl
and
fwait
in
push
mov
pop
mov
push
xchg
add
out
inc
outsl
js
adc
pop
jbe
xchg
ja
or
mov
sahf
jb
sbb
icebp
fdivr
xor
pushf
in
xchg
jl
mov
cmpsl
push
pop
cli
pop
and
sbb
fisttpl
aas
push
push
cmp
shlb
mov
lock
pop
movsb
scas
xchg
sub
rorb
sub
xorl
push
aad
adc
cmpsb
mov
lds
and
add
loopne
clc
inc
inc
outsb
mov
jb
shlb
mov
mov
or
subl
pop
popl
mov
in
or
enter
mov
data16
jae
neg
mov
ljmp
ret
pop
imul
inc
mov
cmp
xlat
nop
push
loope
or
dec
sub
jecxz
mov
xchg
out
mov
and
pop
in
repz
mov
je
aas
ds
inc
je
shlb
mov
test
jg
sti
in
push
lahf
lods
stos
cmp
jl
inc
sbb
xlat
or
jp
sub
xlat
cmp
outsl
mov
ss
inc
and
mov
cmp
mov
pushf
flds
hlt
arpl
push
or
dec
cmc
push
or
pop
scas
int
stos
mov
lock
adc
ret
fwait
inc
shl
xor
xlat
insb
jo
push
mov
ret
pop
mov
inc
dec
push
leave
cmpsb
sarb
sub
or
mov
or
cld
addr16
sbb
out
push
test
cmpsb
sub
fsts
sti
cli
mov
dec
cs
push
mov
scas
pop
xor
sbbl
pop
fidivrs
ds
int
xor
xor
bnd
test
xchg
loop
insl
or
pop
inc
inc
imul
adc
xor
lods
cmpsb
loopne
fcomps
inc
mov
adc
mov
add
cltd
sbb
or
push
push
pop
or
add
xchg
adc
inc
jge
xchg
inc
pushf
mov
icebp
inc
ljmp
stos
and
push
jecxz
add
scas
jecxz
push
in
push
and
out
std
mov
add
push
xchg
xchg
fnsave
add
gs
inc
push
or
clc
jnp
fwait
jo
sub
cmpsb
mov
movsl
ffree
dec
test
xchg
mov
mov
hlt
add
and
std
inc
inc
pop
or
in
sbb
sbb
imul
and
push
shlb
imul
mov
lret
hlt
pop
mov
or
pop
xchg
cmpsl
xchg
and
push
in
and
mov
xchg
jp,pt
fsubl
ret
xchg
lcall
cmp
jg
push
mov
mov
sub
push
loopne
mov
idivb
rol
nop
movsb
stos
fucomi
jle
popa
addr16
mov
out
shlb
jb
mov
inc
daa
lods
sbb
lret
mov
shll
sti
popa
je
lods
aam
cmpsl
or
outsb
dec
pop
xor
pop
xchg
cmp
mov
stc
fsubs
int3
or
mov
lock
sbb
push
lret
xchg
jmp
ret
push
xchg
xor
ss
in
jmp
nop
dec
hlt
sahf
mov
rolb
aaa
mov
dec
push
cmp
aaa
sahf
pop
adc
push
xchg
loop
pusha
inc
mov
mov
pop
push
adc
cs
jge
inc
sbb
or
add
mov
inc
leave
cltd
lret
es
sbb
mov
sub
cli
int3
pop
mov
stos
pop
scas
mov
stos
dec
push
sbb
cwtl
mov
test
in
test
jbe
mov
jmp
push
pop
movsb
pushf
add
dec
imul
add
lret
cld
or
shlb
lods
imul
sub
mov
xor
filds
add
in
dec
fimuls
sbbb
mov
adc
adc
add
pop
sub
or
or
jecxz
mov
dec
ret
fadds
jbe
cmc
loope
clc
out
loopne
push
dec
lret
inc
sbb
sbb
xchg
pop
imulb
stc
push
xchg
aaa
int
and
jg
scas
mov
add
xlat
lcall
data16
sub
dec
mov
movsb
inc
push
gs
mov
jne
adc
shll
stc
adc
push
aam
mov
fists
push
inc
pop
mov
aad
add
dec
jae
or
out
arpl
adc
orb
mov
or
mov
xchg
push
jle
mov
adc
inc
not
jmp
repnz
or
xchg
incb
hlt
adc
mov
test
aaa
sti
sub
leave
xor
or
sub
sub
dec
ljmp
inc
cmp
ret
bound
test
and
out
and
movsl
fwait
enter
out
mov
movsl
mov
shl
pop
repnz
dec
inc
pop
insl
out
adc
cmp
rcl
cmp
or
mov
pushf
cmc
push
jp
xor
or
ds
inc
pop
push
add
hlt
mov
stos
push
repnz
addr16
mov
out
jmp
jge
adc
int
push
or
sub
jl
loopne
popl
inc
imul
popa
adc
popf
xchg
pop
stc
ljmp
mov
outsb
cwtl
inc
in
sub
jmp
sbb
pop
cmp
dec
or
gs
insl
add
negl
adc
mov
test
je
jns
push
out
xor
int3
add
push
sbb
lock
xor
inc
jb
jmp
test
shll
clc
lds
xor
inc
mov
xchg
cmp
lods
or
cld
push
cmp
dec
mov
adc
ret
jg
addr16
pop
in
sub
mov
pop
sbb
incb
pushf
mov
pushf
sub
sub
pop
xlat
or
daa
lret
mov
ficompl
sub
les
cmp
jmp
int
mov
popf
and
jmp
clc
dec
out
loopne
es
shll
pop
mov
mov
pop
pop
repz
push
add
ss
hlt
mov
das
pop
jg
into
xchg
adc
jmp
push
and
xor
dec
repz
and
jl
lret
mov
lods
insb
push
push
or
bound
in
or
jne
jbe
test
insb
xchg
das
outsl
sti
loopne
push
pop
adc
out
in
lds
dec
jns
hlt
and
push
inc
push
imul
mov
in
mov
cmp
sub
gs
jnp
dec
mov
jge
hlt
testb
adc
or
lds
in
rolb
mov
repz
jb
adc
and
push
pop
stc
inc
xchg
mov
jle
sbb
js
fwait
mov
or
add
popf
jp
int
pop
add
mov
ljmp
cld
sbb
shll
loopne
stos
subb
and
add
adc
outsl
xchg
add
arpl
fst
lods
mov
movsb
fimuls
inc
rcl
xor
fcmovnu
push
repnz
xchg
add
call
lret
jb
pop
rorl
pop
scas
rcrb
or
xchg
outsl
push
jecxz
lea
lea
push
test
mov
in
mov
and
icebp
jp
jne
ret
les
or
push
jbe
sbb
loopne
hlt
orl
jmp
in
mov
sub
push
stc
mov
dec
and
jnp
jge
imul
or
push
andl
dec
stos
std
adc
popf
jecxz
add
and
enter
dec
fnstcw
arpl
sub
xor
idivb
or
pusha
lret
xlat
mov
in
hlt
nop
adcb
and
xchg
adcl
pop
in
lods
aas
push
out
loope
sbb
jmp
mov
or
lock
mov
mov
sbb
cmp
fcoms
jno
xor
dec
jp
imul
xor
xchg
std
imul
add
aad
andb
inc
scas
cmpsb
loope
mov
sbb
or
or
nop
loopne
mov
clc
jmp
xor
in
sti
fs
cmc
out
jo
shlb
jp
shrl
sub
jnp
into
pop
or
test
test
xlat
lds
inc
cmp
push
hlt
pop
mov
adc
loope
mov
pop
dec
pop
into
add
add
mov
cmp
stc
jle
mov
in
jbe
outsl
in
sbb
push
jge
push
or
jge
sub
or
aam
pop
push
mov
popf
int
adc
dec
inc
ror
sub
xchg
mov
bnd
xor
shll
or
movsb
mov
sbb
in
sub
shlb
aas
fbstp
cwtl
cltd
addl
sbb
fcompl
cmp
cmpsb
and
jnp
filds
in
and
cs
adc
int
xchg
leave
subl
jg
cli
cld
lods
out
outsl
and
inc
inc
movq
cld
and
push
repnz
test
fadds
xor
and
sub
lods
jae
lret
mov
and
mov
push
xor
nop
fwait
mov
dec
cmpl
mov
jnp
cmp
jne
pop
cmp
jb
das
pop
mov
lahf
inc
xlat
cmp
test
nop
mov
insl
xor
fwait
xor
xor
cmc
pusha
mov
jo
dec
sub
ret
clc
adc
aam
mov
cmc
push
mov
inc
xchg
in
into
push
mov
push
cmp
xor
mov
decl
dec
and
push
and
outsb
sub
rol
and
mov
in
out
test
adc
pop
lock
pop
pop
push
pop
xchg
addr16
aas
popa
addb
clc
mov
cmc
fisubrl
int3
js
add
cmp
int
shrb
inc
jae
out
ljmp
or
inc
adc
or
inc
mov
pop
or
mov
inc
orl
jo
btc
sbb
sbb
jnp
pop
xor
lret
aad
push
mov
rcr
dec
out
psubb
orb
inc
lods
int
mov
push
cmp
movsl
stos
and
insb
mov
ret
in
jmp
imul
dec
inc
cmp
and
inc
lea
or
setb
loopne
je
punpckhwd
stos
mov
adc
mov
sti
icebp
cmp
add
adc
fs
and
ja
popa
pop
sub
aam
movsl
shlb
cwtl
mov
pushf
popl
cmp
xchg
push
js
repnz
daa
adc
arpl
movsb
mov
repnz
cmp
mov
jge
xchg
imul
outsl
sahf
xor
and
test
add
lds
push
test
push
jne
cltd
cltd
testl
loopne,pn
jecxz
cmp
jp
and
mov
and
ja
mov
adc
dec
sub
rolb
jle
mov
dec
add
sti
mov
or
pushf
inc
call
pop
sti
mov
addr16
hlt
shlb
and
subl
fnstsw
mov
mov
pop
into
icebp
sti
mov
scas
mov
sub
stos
sub
adc
mov
pop
xchg
sbb
jns
inc
inc
inc
or
popf
shrl
cld
jle
jmp
mov
lret
adc
arpl
call
in
and
dec
mov
aaa
or
loope
xor
std
aam
cwtl
popf
sbb
jnp
rcll
insl
mov
mov
ret
fdivrs
dec
jp
arpl
xchg
mov
sahf
mov
lahf
xor
mov
push
or
mov
lock
inc
fsubs
inc
dec
sbb
adc
lret
outsl
dec
scas
jp
mov
testl
cmpsl
adcl
aam
jmp
push
mov
rorl
inc
jecxz
into
push
loop
push
jge
insb
mov
cmp
cltd
mov
pop
sbb
mov
mov
inc
mov
divb
add
out
sarl
cmp
adc
sar
in
push
mov
arpl
and
mov
int
popf
add
add
icebp
dec
dec
mov
stc
clc
mov
fnsave
xlat
fstps
stos
ja
dec
cmpsb
jae
call
mov
daa
rolb
ja
jp
cmpsb
mov
mov
pop
roll
sub
pop
nop
adc
lret
cwtl
in
adc
clc
fisttpl
sahf
bsr
sarl
lahf
jae
xorl
icebp
stc
aas
jb
add
xchg
shl
xchg
mov
xchg
scas
mov
and
ss
adc
or
dec
pop
xchg
cmp
dec
stos
jae
mov
stc
or
xchg
nop
cltd
out
ficompl
push
and
ret
pop
ret
cld
or
test
sub
jbe
mov
es
mov
mov
std
xchg
pop
aam
xchg
push
in
lds
lret
fcmovnu
loope
adc
add
sbb
leave
inc
cmpsb
test
jge
cltd
loopne
push
mov
mov
sbb
cld
mov
jb
mov
dec
out
xchg
loop
sub
dec
repz
lret
aad
popf
popa
adc
add
cwtl
add
jge
outsl
xchg
mov
jns
daa
add
and
jbe
mov
nop
or
aaa
push
insl
push
xor
mov
insb
pop
mov
or
cltd
popf
jae
push
sub
jle
mov
inc
mov
neg
xlat
movsl
xchg
outsb
jbe
sbb
push
cmp
out
leave
in
or
out
rcr
adc
xchg
fdivr
xchg
inc
lds
andnps
mov
sbb
test
fs
and
orb
sub
push
dec
test
shl
fs
out
cld
test
popf
aam
xchg
or
aad
shlb
mull
sbbl
push
jbe
fwait
loope
add
inc
xchg
testl
cmp
cmp
sar
out
inc
aam
ficoms
ret
push
xchg
xchg
dec
sub
arpl
pop
shll
sbb
inc
mov
xor
fmuls
jbe
fsubs
dec
jmp
jmp
pop
mov
addl
cld
xchg
mov
cmp
jnp
push
pop
xor
push
in
xchg
push
les
testb
ss
ret
adc
push
sub
inc
mov
cmp
mov
add
inc
sub
push
lds
shlb
icebp
mov
das
scas
cmc
stos
into
into
loop
add
lds
xor
add
and
ds
notl
xlat
add
out
test
push
es
adc
dec
dec
pop
mov
xchg
sahf
and
out
sub
push
aad
xchg
mov
loop
mov
mov
sub
add
xchg
stc
cmp
in
ja
mov
cmp
negb
inc
and
push
xchg
stos
mov
ret
lret
sub
out
sti
pop
int3
test
dec
xchg
pop
subb
aam
add
js
loop
mov
popf
sub
gs
mov
fwait
cmp
lahf
test
jne
push
outsb
sub
add
shll
test
mov
nop
pop
shll
or
orl
push
dec
sub
jg
mov
aaa
sbb
popa
inc
shl
dec
inc
test
xchg
or
lret
cmp
xor
pop
in
mov
push
jg
in
insb
inc
fcoms
ret
adc
and
mov
pushf
pop
dec
cmp
je
or
das
mov
mov
xchg
std
mov
jno
cmp
or
and
jmp
or
ss
mov
ljmp
and
jp
sub
mov
les
loop
shrl
mov
js
outsb
lahf
or
dec
mov
cmp
cli
jge
ror
sub
push
push
imul
sbb
xor
adc
les
hlt
lcall
dec
stc
cmp
lock
and
pushf
loopne
push
mov
or
mov
loop
int
jp
push
and
pop
mov
dec
jbe
les
clc
dec
lds
push
imul
add
mov
nop
push
and
ja
icebp
mov
scas
xchg
cli
cld
mov
jmp
das
int
xchg
lods
cmp
in
jnp
jle
dec
mov
sub
fs
jge
and
or
imul
add
inc
fcmovb
iret
mov
or
lahf
int3
cmpsl
in
aam
icebp
ds
adc
dec
push
pop
and
out
cltd
mov
pop
dec
repnz
adc
ss
mov
xor
repz
stos
test
jge
nop
icebp
pop
sub
in
xchg
pop
ret
cs
adc
sub
pop
adc
pop
je
push
mov
inc
repz
add
test
test
in
mov
daa
mov
jg
dec
add
testl
dec
pop
sar
sub
jb
outsb
loop
sti
xchg
int3
and
jge
xchg
sub
jecxz
std
lea
aam
out
out
popf
das
mov
in
sar
jno
scas
xchg
inc
jl
cmp
dec
shll
sbb
mov
insb
fists
jmp
add
and
into
das
fsubrs
cmc
in
sbb
fsub
pusha
pop
test
sbb
push
sbb
xor
mov
insl
lret
sbb
push
push
jmp
push
addr16
inc
inc
stos
fisttps
jle
pop
test
inc
sbb
pop
sarb
sub
and
fistpl
mov
push
insb
fwait
jb
pop
xchg
fiaddl
inc
stos
inc
jnp
adc
aam
pop
cltd
stc
imulb
jmp
xor
iret
repnz
xchg
sar
add
sbbl
push
push
sbb
jne
test
daa
mov
or
xor
clc
aaa
pop
or
xor
pop
mov
mov
and
mov
xor
adc
jbe
sub
xchg
jno
insl
sub
sub
les
or
cmp
lock
pop
je
cmp
cmp
shll
or
arpl
sub
imul
dec
xor
cmp
pushf
mov
aaa
add
popf
mov
cmp
fiaddl
mov
sbb
aas
popf
dec
mov
sub
stc
and
xlat
cltd
xchg
or
lods
jmp
push
ds
push
imul
jo
dec
mov
mov
lea
sub
inc
ret
pop
mov
mov
call
push
andb
mov
fisttps
outsb
aam
mov
pop
movsl
cmpsl
inc
or
dec
cmc
divb
xor
cli
cld
lock
lret
push
pop
inc
xor
lahf
jecxz
cmp
cmp
mov
ret
nop
int3
insb
das
mov
aas
mov
add
and
dec
nop
ss
inc
push
inc
insb
cmc
mov
cmp
or
inc
outsb
cltd
leave
outsl
sub
mov
es
jmp
and
jno
aad
xor
inc
imul
sbb
jmp
mov
xchg
fwait
mov
fs
xor
stc
mov
call
xchg
lahf
aaa
jmp
fwait
sub
bound
hlt
ficomps
inc
or
iret
cs
dec
mov
popa
xorb
mov
sti
insb
mov
xchg
or
icebp
dec
pushf
popf
jb
sub
rcrl
add
call
or
push
xor
hlt
or
pop
sub
aas
movsl
je
inc
popf
iret
cmp
push
mov
test
mov
insl
add
xor
fmull
sub
ret
in
ss
mulb
repz
add
inc
xor
jo
fistpl
hlt
xor
inc
addl
outsb
ljmp
leave
rorl
lahf
and
shll
push
jbe
pop
adc
jnp
bound
or
scas
and
insl
jns
movsb
jge
xchg
lcall
pushf
jo
and
mov
sbbb
ret
lods
inc
mov
mov
mov
push
mov
sbb
repz
push
mov
lret
mov
adc
das
int3
pop
push
movsb
inc
cmp
and
cmp
nop
inc
arpl
aad
aam
and
and
inc
adc
icebp
sub
repz
lock
popf
leave
and
shlb
jo
mov
scas
adc
xor
and
dec
sbb
cmp
xor
sbb
js
inc
jne
test
mov
stos
xor
add
popa
cmpl
sarb
test
test
aad
mov
leave
jmp
pop
ja
cmpsl
mov
test
cld
icebp
xchg
and
std
push
add
adc
jae
iret
sahf
mov
jecxz
jae
or
enter
add
mov
jecxz
outsb
in
rol
aam
lret
fistpl
push
gs
repz
inc
mov
movsb
mov
test
gs
xor
push
stos
dec
jle
mov
sbb
cmp
imul
jne
movsl
fdiv
pop
imul
mov
ret
cmpsl
fcmovu
pop
lock
pushf
push
push
inc
sbb
dec
xchg
cltd
pop
lea
fxch
inc
mov
dec
and
pop
sbb
out
popf
sub
lds
mov
sbb
popf
icebp
pop
test
sub
cmp
add
xlat
xor
or
loopne
divl
les
sbb
sbb
inc
jecxz
jmp
push
je
xchg
mov
push
mov
clc
inc
and
je
pop
pusha
mov
inc
xchg
mov
inc
adc
rcr
mov
sbb
adc
inc
adc
insb
pop
fisubrs
push
imul
push
ds
mov
in
pop
mov
sahf
or
xchg
mov
mov
imul
shll
gs
cmc
pop
notb
adc
bound
pop
jne
cmc
imul
outsl
inc
cmp
andl
jno
pop
and
pusha
repz
lods
adc
insl
rorb
sbb
scas
push
cmp
push
rorl
mov
mov
mov
xor
out
cmpb
push
xor
je
jle
jo
iret
ljmp
mulb
fsub
repnz
pop
xchg
nop
gs
mov
addb
test
dec
imul
xchg
xchg
cs
jno
and
outsl
pusha
lahf
loopne
fcomp
sub
shrb
jecxz
pop
pop
ret
sub
ficompl
jae
aam
test
out
sub
scas
test
push
push
or
imul
sub
daa
movsl
loop
mov
js
leave
xchg
mov
push
sub
xchg
ret
xlat
mov
lcall
adc
in
xchg
pop
lret
fldl
rol
ret
xchg
mov
mov
jbe
sub
mov
mov
xchg
aad
lret
push
jnp
xchg
lret
and
mov
cmp
inc
mov
mov
pop
pop
inc
dec
inc
cwtl
cmp
insl
mov
xor
test
aad
int3
and
adc
add
pop
mov
mov
jo
inc
add
and
xor
cli
jae
add
outsb
or
adc
pop
mov
out
adc
scas
movsb
ja
xor
sti
push
pop
mov
lods
ja
and
popa
cmp
cmc
les
add
mov
jle
ret
jno
and
test
in
xor
lods
call
ficoml
dec
shrl
and
adcl
add
rcrl
dec
lcall
push
jp
xchg
adc
addr16
mov
sub
jnp
orl
movsl
push
xchg
sbbl
scas
flds
jns
mov
les
dec
mov
dec
subl
int3
fldt
cmpl
sbb
or
pop
in
sub
jo
pop
mov
jae
adc
cld
push
push
xorl
jp
pop
jae
popa
out
pop
dec
cld
inc
mov
push
xchg
sbb
mov
addr16
mov
mov
lcall
mov
cmp
movl
pushf
mov
inc
xchg
cmp
aad
ja
xchg
adc
or
push
rcll
cld
xor
int3
dec
int3
add
dec
xchg
addl
bound
mov
jnp,pt
repz
xchg
pushf
pop
fnsave
or
decl
lea
mov
out
mov
pop
mov
push
std
lret
gs
sbb
aam
lods
lret
imul
pop
lock
xchg
pop
lret
mov
sbb
fstpl
sub
adc
mov
jne
in
insl
adc
popa
dec
subb
mov
cmp
iret
shll
cmpsb
dec
mov
cltd
imul
dec
pop
or
je
xchg
sti
dec
divb
imul
and
adc
and
sbb
int3
mov
rcl
mov
pop
dec
aas
xor
pop
aam
add
push
jecxz
das
int3
mov
sbb
repnz
xchg
mov
cmc
cwtl
clc
xchg
xor
cli
jg
daa
lret
rcll
out
in
dec
jmp
test
gs
addr16
movsb
hlt
mov
xor
dec
loop
and
out
mov
shll
jnp
push
and
das
or
ja
sbb
es
fcomip
lret
cmp
xor
and
jp
sbb
outsb
out
jno
or
or
mov
into
lods
add
jae
jl
inc
orl
cmp
jmp
arpl
jne
mov
mov
push
gs
jb
jg
push
rorb
mov
sahf
decb
add
test
iret
nop
jno
fdiv
inc
dec
xor
or
pop
adc
fs
xlat
clc
fs
testb
pop
adc
xor
addb
popf
cmpsb
pushf
and
or
clc
imul
js
shl
enter
mov
xor
jo
lahf
inc
dec
imul
testb
iret
mov
dec
jns
imull
pusha
push
jg
fucomip
cmpsb
cmp
sahf
inc
sbb
rcl
push
jno
inc
lods
push
cmc
lods
pop
pop
jbe
das
inc
leave
movl
dec
es
daa
xchg
add
push
mov
scas
add
xchg
push
clc
jp
mov
xchg
rcll
outsb
cwtl
adcl
loop
adc
sub
pop
xor
add
push
fsubs
jle
into
jnp
dec
xorl
fnstcw
pop
sarl
cmpsb
jne
dec
rolb
fxch
cmp
les
outsl
pushf
ds
adc
bound
pusha
or
fsubs
push
aam
dec
mov
mov
xor
notb
pop
notb
sti
jnp
xchg
jle
mov
pop
mov
into
mov
dec
sbb
pop
cmp
add
cmpb
mov
stc
aas
adc
insb
and
dec
test
add
add
icebp
int3
test
stos
daa
addr16
scas
jns
inc
stos
mov
xor
jmp
inc
call
or
sbb
add
inc
add
jb
dec
imul
and
inc
add
xlat
pop
lcall
inc
fstps
mov
cmp
jecxz
jo
pop
mov
lret
icebp
ss
jne
dec
and
sub
mov
jmp
sbb
adc
add
xchg
jge
jge
inc
in
sbb
lock
xor
movswl
pop
and
ret
daa
in
lock
mov
or
adc
add
sbb
insl
lods
jnp
sti
leave
jns
mov
xchg
sbb
sti
int
loop
jnp
dec
adc
dec
inc
push
out
dec
sub
ljmp
mov
fiaddl
les
shr
mov
xchg
adc
jl
xor
cmc
js
adc
jge
jl
inc
xor
insb
sar
stos
or
leave
nop
dec
imul
push
push
cmp
pop
mov
or
xlat
cwtl
cli
cmp
bound
jne
pop
cmp
adc
push
leave
mov
in
lea
or
fstpl
jo
iret
std
shr
cld
inc
test
add
cmpsl
ret
scas
pop
pop
mov
les
addr16
stos
cmpsb
mov
jns
and
lods
mov
mov
jbe
clc
shll
or
hlt
or
pop
sub
xchg
mov
dec
add
rcl
inc
push
fcomps
mov
mov
mov
cmpsb
cvtdq2ps
mov
mov
add
inc
push
sub
adc
insl
loop
push
in
mov
or
sti
sbb
or
and
inc
mov
pop
push
cwtl
test
int
ret
push
mov
pop
mov
scas
cs
pop
fmull
pop
and
fadd
fwait
mov
mov
sub
repz
push
mov
add
adc
leave
mov
mov
das
push
stos
jnp
int3
adc
inc
inc
sbb
pop
mov
or
test
add
pop
mov
cmp
jno
sbbb
popf
pusha
push
mov
scas
sub
sbb
add
into
xor
mov
jecxz
imul
aad
and
inc
cld
inc
pop
leave
adc
sbb
flds
data16
and
push
jae
movsl
testl
popf
outsb
mov
and
iret
and
mov
mov
xchg
jmp
stos
push
insb
fisttpll
lcall
shll
fwait
loopne
inc
inc
rol
stos
xchg
inc
adc
cmp
sub
gs
mov
nop
mov
add
out
sti
mov
sarb
jp
xor
sarb
cmp
jno
sub
cmc
scas
sub
jmp
push
mov
push
mov
aas
std
jg
dec
and
add
or
jp
xchg
aas
mov
inc
hlt
dec
dec
xchg
jp
xor
cmp
mov
sbbl
dec
or
in
cli
pop
mov
jle
fwait
sbb
js
dec
and
lret
pop
hlt
loope
pop
lods
jecxz
cmp
lret
mov
dec
lcall
int3
cmp
or
ja
dec
fcoms
sub
pop
mov
lock
out
sub
xchg
imul
sub
cmp
fstps
mov
mov
lahf
mov
sarl
push
xor
loope
leave
into
push
sub
cmp
pop
sub
mov
pusha
loop
lret
and
push
mov
xor
movl
add
xchg
cs
jl
shll
mov
repz
out
in
call
inc
add
mov
jne
inc
jecxz
xchg
shrl
push
in
loope
mov
add
sarb
pop
movsb
shlb
mov
and
or
loope
push
out
iret
mov
shrb
xor
jno
lea
mov
imul
popa
mov
cwtl
sahf
cmp
and
mov
mov
stos
xor
mov
mov
test
aam
pop
sbb
sbb
cmpsl
mov
sub
xor
inc
xchg
sarl
fsts
cmp
pushf
stos
xor
fdivrs
hlt
add
fimuls
loopne
out
shl
xchg
insl
aaa
jmp
loop
mov
xchg
push
movsl
adcl
fbld
adc
in
ret
cmp
out
push
aaa
daa
cmp
pop
add
rorl
andb
test
pusha
inc
out
mov
pop
insl
in
jp
push
jne
pop
mov
sbb
nop
test
lcall
mov
inc
mov
inc
cld
mov
adc
pop
or
mov
jne
pop
subl
sbbl
xor
mov
mov
fbld
into
pop
sbbl
inc
imul
mov
push
push
pop
lahf
std
fdivrp
sub
loopne
xchg
sub
adc
inc
scas
and
add
push
clc
mov
mov
imulb
inc
ja
out
cmp
in
outsb
and
fxtract
sbb
sub
xchg
mov
jae
outsl
add
out
out
out
das
lds
sub
cs
cmp
mov
mov
dec
fdiv
inc
imul
mov
cmp
inc
loope
adc
bound
mov
mov
fwait
inc
fidivs
cmc
lea
inc
arpl
jns
cmp
xchg
cmp
cmpsl
sub
out
mov
rcrb
xchg
jb
cmp
iret
xchg
in
add
movsl
jmp
les
daa
sub
int3
and
iret
fmuls
cltd
mov
daa
fs
add
push
push
shlb
push
cmp
and
lods
shl
mov
rclb
fwait
mov
hlt
sbb
jae
xor
push
push
dec
sub
insb
popa
ret
and
dec
leave
fwait
pop
cmp
xchg
xchg
or
inc
or
ffree
lcall
or
arpl
mulb
pushf
outsb
jnp
and
mov
repnz
outsl
out
or
sahf
add
jno
idiv
mov
fstpl
ret
movsl
add
ljmp
je
push
cmp
pop
clc
outsb
add
arpl
lret
fsub
test
mov
popa
jnp
repz
push
sbb
aaa
mov
fildll
mov
test
dec
ljmp
push
pop
add
arpl
or
call
movsl
xchg
inc
or
adc
pushf
cmp
bound
idiv
push
add
push
fwait
ss
lret
jl
xchg
sbbb
xchg
xor
lods
add
cmc
rorl
mov
push
dec
data16
imul
inc
lock
pop
xor
aam
xchg
filds
inc
mov
jne
dec
xchg
inc
arpl
pop
aam
in
sub
mov
aas
jmp
imul
gs
cmp
iret
mov
jne
int
and
cmp
frstor
je
mov
mov
pushf
popf
mov
push
and
rolb
inc
fs
lcall
clc
fsubrs
xchg
js
inc
cmp
or
push
mov
cmp
jp
mov
mov
fildll
rorb
add
xchg
aaa
iret
xorb
add
jmp
sbb
jnp
sbb
popa
lea
xchg
add
xchg
pop
inc
xchg
xchg
popf
jl
jge
fisttps
das
movsl
fcmove
stos
mov
sbb
sti
faddl
inc
testb
dec
insl
mov
mov
lcall
negb
fwait
mov
xor
inc
out
dec
push
hlt
pop
jge
cmp
and
inc
cwtl
xor
outsb
outsl
or
out
sub
xchg
cltd
or
dec
test
rcr
lahf
push
pop
scas
or
icebp
sub
fcomps
push
mov
mov
fdivr
pop
inc
in
hlt
push
subb
mov
mov
stos
mov
in
cmp
out
pop
into
int3
cs
inc
pop
jge
inc
mov
lahf
mov
jg
sbb
stos
push
lahf
gs
jo
jmp
jns
ss
xchg
sub
jmp
cmpsb
cmpsl
fldenv
div
rorb
lods
notl
xchg
jne
stos
push
or
xchg
push
decb
mov
into
xchg
ss
push
mov
sub
dec
out
daa
xchg
lock
push
outsb
test
add
jmp
mov
inc
iret
xchg
inc
jb
aad
push
aaa
inc
scas
inc
sarl
jl
adc
movsb
adc
std
push
enter
mov
dec
mov
dec
mov
mov
nop
popf
sahf
popf
pop
pop
bound
call
shl
pop
je
stc
fidivl
xchg
push
add
repz
inc
fisubrl
mov
test
insl
jp
aad
add
dec
mov
jecxz
pushf
adc
push
push
repnz
pop
cmp
rcrl
imul
out
adc
dec
mov
pop
ret
xchg
js
imul
je
stc
or
flds
xchg
nop
push
inc
cmp
add
aad
jmp
mov
int3
push
lock
jge
sub
int
loope
mov
std
int
add
mov
ss
sbb
dec
mov
icebp
xchg
push
add
pop
loop
cmp
add
adc
xlat
jnp
sub
testl
mov
xchg
jae
adc
fimuls
shrb
cld
jno
ret
jae
repz
cmp
lcall
fiadds
cmp
stc
adc
jno
push
fsubrl
sbb
es
mov
push
push
dec
out
xlat
aam
mov
adc
popa
test
lods
jmp
invd
loop
xchg
shlb
pop
hlt
xor
rcrb
sub
cmp
and
xor
add
mov
aam
mov
test
adc
or
dec
adc
test
push
xchg
loop
and
add
iret
lock
sub
ret
xchg
hlt
xchg
mov
in
scas
cmp
mov
cmpsl
das
icebp
cltd
mov
jg
aaa
mov
dec
or
lcall
jle
adc
mov
int
push
adc
add
mov
sub
push
cmc
pushl
bound
mov
sub
loope
push
push
mov
pop
lcall
mov
sarl
pushf
push
fadd
cs
sub
das
hlt
jge
je
ret
clc
or
and
mov
sub
or
and
and
je
pop
adc
mov
daa
fldt
mov
popf
test
pop
data16
rclb
adc
cmp
aam
into
add
mov
repnz
mov
aad
das
xchg
imul
stc
mov
mov
nop
xchg
add
pop
sub
pop
sbb
add
outsb
cmp
mov
xlat
xchg
pop
out
arpl
sbb
lods
sub
call
mov
data16
add
cmc
pushf
jns
fiadds
mov
or
out
mov
aad
push
std
fsubrl
iret
xchg
xor
xchg
adc
xor
sbbl
xchg
ret
stos
jl
fdiv
inc
jne
repz
fiadds
ljmp
adc
pop
xchg
or
test
push
dec
inc
pop
iret
push
xor
repnz
sub
mov
mov
aam
mov
adc
mov
mov
in
pop
pop
xorb
push
mov
inc
fs
insb
movsl
push
or
jp
push
ljmp
mov
sub
scas
inc
mov
loop
push
repz
push
xor
sbb
lret
inc
int3
loopne
rorb
in
movsb
inc
stc
nop
ljmp
adc
ds
cltd
out
repz
inc
rcrb
adc
das
sub
jno
mov
adc
enter
icebp
push
fnstcw
push
fmull
mov
cltd
jge
mov
jo
push
mov
inc
jns
repz
mov
int3
pop
and
cmp
cli
jl
mov
and
movsl
hlt
sbb
movsl
in
sub
out
cmpsb
repz
jmp
out
fildll
mov
mov
outsb
jbe
sahf
orb
push
lods
inc
push
pop
faddl
lret
sub
mov
mov
rolb
add
xorb
in
addb
jo
inc
rcll
mov
sbb
int3
and
popf
xor
daa
add
fistpl
dec
mov
jno
decb
add
mov
lds
addr16
mov
pop
pop
cmp
outsb
push
mov
jnp
pop
and
xchg
and
orl
rorb
sti
mov
mul
jnp
scas
xchg
in
cli
ficoms
add
fidivrl
enter
rol
pop
or
inc
push
xchg
xlat
es
mov
and
sub
xor
mov
cmp
fiadds
movsl
cmp
cmp
int3
xchg
jecxz
inc
roll
push
pop
xchg
fisttps
and
pop
add
mov
jecxz
xchg
test
cld
aam
adc
aas
ja
fisttpll
pushf
cmp
lods
insb
stos
sbbl
mov
scas
out
adc
pop
repz
int
stos
adc
mov
mov
mov
pop
jb
push
adc
pushf
pop
mov
sub
sbb
inc
pop
lcall
xchg
and
out
mov
popf
int3
cmpsb
movb
arpl
inc
push
mov
jae
insl
sbb
cmp
loope
mov
xorb
and
aam
adc
jmp
call
in
add
outsb
cmp
xchg
imulb
ret
out
xor
lds
loop
and
cmp
pop
jae
jbe
xor
ret
sti
lret
jmp
ficomps
mov
aam
imul
mov
pusha
dec
add
loopne
ljmp
xor
cltd
leave
rclb
sahf
ret
push
pop
or
lret
xor
adc
ss
loope
jp
dec
xor
jl
pusha
jl
sbb
sbb
mov
test
xchg
fmul
xor
and
sbb
adc
mov
fs
ret
mov
negl
ds
or
and
xchg
pop
xlat
mov
sbb
out
das
fcoml
lea
add
flds
inc
mov
add
shlb
rcll
addr16
inc
sbb
jecxz
and
rorl
push
cmpxchg
inc
test
shrl
xor
mov
push
rcrl
inc
call
repz
fisttps
or
jo
and
pop
adc
jns
test
jns,pn
rolb
cwtl
mov
fwait
push
xchg
aad
mov
kaddb
xchg
pop
cld
and
mov
popf
jno
adc
jmp
les
lods
sbb
lea
mov
xchg
sbb
daa
insl
std
imul
adc
insl
push
js
cmpsl
mov
mov
pop
out
pop
adc
ret
add
mov
les
sbb
jnp
add
pop
adc
xchg
ret
mov
icebp
cs
xchg
sbb
aas
pop
xor
stc
cmp
nop
ljmp
mov
xchg
dec
pusha
ljmp
push
fidivrs
and
fcoml
adcl
dec
es
movsb
inc
lock
lea
dec
shr
iret
aas
call
cmp
mov
or
sub
iret
jl
lds
inc
gs
lcall
mov
roll
negb
jmp
int3
sarl
les
jb
xlat
pop
xchg
mov
lock
lret
pop
out
push
sti
decb
out
outsl
mov
idivl
pop
je
inc
cmp
in
pop
pop
sub
insl
stos
push
out
mov
and
mov
jns
mov
push
mov
clc
cli
dec
push
jg
inc
xor
gs
orl
leave
mov
orb
jne
xor
adc
test
ss
jmp
cmp
out
inc
lods
out
xor
out
arpl
xchg
out
adc
xchg
add
outsb
lock
inc
js
inc
or
mov
fisttps
cltd
mov
push
cmp
adc
sub
or
mov
mov
and
xchg
dec
push
add
mov
mov
lock
sub
imul
idiv
sbb
xor
fildll
pop
pop
dec
mov
sub
sub
xchg
aam
rcr
mov
scas
sub
mov
xchg
into
mov
jns
inc
call
jecxz
xor
scas
gs
jl
lret
fildl
pop
xchg
push
stos
loope
or
jge
fldt
aam
sti
sbb
add
dec
sub
mov
lret
nop
lahf
jp
mov
mov
cmpsb
inc
or
inc
add
es
jno
scas
movsb
sti
fidivrl
mov
sti
xorb
addr16
cli
bound
test
out
mov
mov
and
gs
lods
enter
fmuls
fcomps
mov
imul
xor
arpl
inc
test
add
inc
aad
cli
cmp
jb
sub
mov
jl
fdivrs
cmp
mov
mov
add
iret
or
jbe
xor
out
inc
cld
in
xchg
adc
sbbl
jecxz
inc
dec
arpl
jbe
dec
mov
sbbl
dec
or
mov
push
cmp
icebp
cmp
mov
add
sbb
into
stos
call
movsl
or
nop
add
ja
mov
push
push
sbb
jecxz
icebp
das
fistpll
add
jp
pop
xchg
sbb
mov
enter
scas
mov
mov
xor
dec
or
mov
lods
mov
outsl
popa
enter
imul
cmpsl
in
movsb
rorl
test
stos
mov
jp
popf
cmpsb
orl
push
mov
pop
loope
iret
cmp
dec
mov
mov
clc
hlt
sub
sbb
test
enter
adc
mov
shr
xchg
pop
dec
out
mov
in
daa
fsts
testl
cmpl
xor
mov
pop
adc
fcomi
cmpsb
pop
cmp
ljmp
push
in
mov
sbb
cwtl
repz
dec
pop
nop
pop
inc
jns
cmc
lahf
movups
outsb
cmovp
movsl
fisubrl
subb
inc
mov
mov
jge
mov
jae
cmpl
insb
pop
or
push
mov
insl
jae
inc
insb
test
addb
mov
xchg
pop
movl
loope
es
and
clc
xor
mov
sub
xchg
scas
adc
add
pop
stos
inc
mov
cs
ds
cli
jb
jp
scas
popf
imul
imul
xor
pop
aas
outsb
mov
flds
mov
inc
jne
sbb
mov
sub
jno
mov
mov
mov
inc
mov
in
and
push
push
push
pusha
je
pop
mov
pop
cltd
push
adc
mov
repz
lea
xor
shll
mov
or
mov
adc
movlps
xchg
sahf
ret
or
mov
fcompl
es
push
fcompl
jnp
out
push
mov
push
add
in
test
add
cld
xor
jne
movsb
loope
push
sub
out
imul
dec
and
ja
ret
push
inc
pusha
in
dec
vpsrlq
xor
dec
mov
mov
mov
adc
loope
jno
add
int3
push
iret
xor
sahf
clc
pop
sub
mov
ficoml
insb
sbb
pop
lret
lcall
rcrb
rcrb
pop
lock
pop
test
fsubrl
pop
xor
pop
push
adc
fisubrl
pop
fnsave
adc
lahf
push
mov
mov
mov
sti
leave
cmp
aas
xchg
xor
int3
adc
int3
dec
call
ret
std
cwtl
push
jle
and
xorb
call
andl
cmc
push
ja
or
push
out
sbb
jl
jl
mov
mov
or
mov
rcrl
mov
xchg
inc
lea
or
inc
and
popf
sbb
andb
in
inc
ljmp
mov
inc
imul
jnp
sub
int3
int3
dec
clc
jg
mov
mov
push
sub
and
enter
xor
lods
clc
fdivr
aaa
pop
xor
insl
popf
inc
arpl
stc
and
mov
je
lcall
adc
inc
out
mov
test
add
negl
mov
data16
add
add
xchg
mov
inc
cmpsb
pop
data16
mov
jns
xchg
adc
jns
je
js
push
pop
call
jle
mov
inc
fisttps
cmp
xchg
dec
push
leave
sub
ficoms
fstpl
das
int3
pop
popf
iret
insl
out
jns
mov
cmpsb
int
test
inc
aaa
mov
dec
insl
in
cmp
pop
into
push
lahf
test
cli
sbb
leave
fcomip
std
adc
jge
mov
mov
sub
test
fimull
dec
dec
mov
adc
mov
xor
fildl
pop
fimuls
inc
pop
jno
movsl
adc
pop
lds
scas
movsl
jle
push
sbb
rcr
mov
jp
sub
fwait
iret
sub
pop
push
or
lahf
stc
mov
jb
fadds
lods
cmp
out
mov
mov
mov
inc
push
jecxz
lods
push
and
cmp
data16
jmp
jmp
loope
sub
sbb
dec
rolb
je
inc
insb
lret
xchg
aad
mov
aas
es
repz
rcrb
stc
or
ja
std
xchg
sub
into
test
mov
imul
dec
adc
cmp
in
imul
adc
inc
lcall
push
outsl
cmp
cmp
test
xchg
dec
subb
cld
loope
xchg
xlat
mov
cmp
aam
dec
and
cmp
xor
dec
sub
ds
inc
mov
test
aam
popa
jns
push
cmp
mov
and
adc
mov
ss
call
addr16
add
sub
pop
lods
inc
cltd
je
xchg
sub
leave
addr16
fwait
lods
adc
in
loopne
aad
fnstsw
in
inc
cmpsl
loop
cmp
jb
xchg
jno
rcrl
test
and
cmp
es
xchg
jge
mov
push
dec
adc
push
dec
dec
xor
mov
aam
inc
mov
ret
mov
in
dec
sub
out
xchg
popf
xor
mov
mov
shll
icebp
or
jnp
fsub
mov
stos
xchg
aam
mov
into
out
cld
int3
mov
pop
pushf
cs
mov
xchg
aaa
mov
jae
iret
sbb
push
fcoml
ja
jnp
inc
lods
xor
shll
dec
push
pop
insl
cmp
mov
cmp
xchg
fwait
xlat
push
or
mov
adc
clc
repz
and
dec
sub
add
sbb
adc
ret
push
flds
jg
adc
testl
in
jle
mov
fstps
je
roll
pushf
dec
mov
scas
mov
mov
jmp
movsb
fistpl
cmp
mov
push
mov
mov
mov
mov
adc
fisubrl
outsl
adcb
mov
outsb
pusha
xchg
mov
xlat
jae
out
xor
mov
jb
xor
jle
or
outsl
and
push
out
sub
jecxz
xor
mov
or
inc
pop
aam
scas
fmuls
dec
mov
frstor
sbb
cld
adc
enter
mov
movsl
gs
ret
stc
mov
gs
mov
stos
imul
sahf
jne
sub
xchg
jle
andb
cld
inc
push
gs
cli
dec
push
jo
loop
sbb
mov
mov
xchg
leave
dec
or
dec
mov
les
ret
test
sub
jmp
add
repnz
fidivrl
sbb
int
and
mov
cmp
arpl
mov
xchg
es
adc
adc
in
out
mov
push
sbbl
sub
mov
push
lock
fisttps
inc
xchg
push
lods
xor
xadd
pop
cmp
enter
andb
and
jle
ja
hlt
and
rcl
xchg
fwait
ljmp
leave
xor
push
fdivr
push
subl
sbb
adcb
pusha
pop
xor
or
or
fcmove
jno
add
adc
cld
cwtl
das
cmp
hlt
lock
jge
dec
push
sbb
cmp
add
je
push
movd
sbb
shl
xor
cltd
dec
ret
int
cmpsb
push
cld
cmp
enter
fidivrl
rolb
and
jmp
xchg
push
xor
xchg
pop
pushf
outsl
aam
dec
sub
imul
and
cmc
push
push
xlat
data16
fcomip
hlt
add
cmp
pop
aad
push
je
jl
push
xchg
xor
xor
jb
xor
jnp
scas
loopne
shll
adcb
aam
jnp
nop
sbb
inc
dec
jnp
enter
and
push
loope
cli
int
and
jns
add
pushf
outsb
ljmp
sahf
rclb
icebp
cmp
test
fists
lods
aad
cltd
pop
aas
ret
cld
pop
cld
lods
les
fldl
mov
mov
call
push
xor
fdivrs
clc
mov
pop
or
and
clc
sbb
mov
hlt
xchg
inc
xor
sub
popa
test
jnp
addr16
mov
aam
adc
dec
ljmp
hlt
jae
in
notl
aam
sub
mov
adc
cmp
and
push
lods
sub
and
add
imul
inc
std
bound
dec
scas
jb
fwait
lcall
lret
cmp
sbbb
leave
daa
jo
sbb
or
mov
push
mov
out
aam
stc
dec
xchg
push
insl
pop
xchg
icebp
pop
addr16
jno
out
aam
jmp
sbbl
outsb
add
imul
dec
rclb
jl
mov
mov
ds
or
mov
into
out
and
call
ja
pop
lahf
fcoms
mov
xchg
sbb
adc
mov
cmp
sbb
add
jecxz
ret
jl
scas
add
adc
and
cmp
or
add
mov
or
rcll
mov
sarl
or
jp
mov
push
lret
out
dec
jae
xor
arpl
lret
pop
ret
popf
les
inc
loopne
ljmp
xor
xor
das
jbe
sub
mov
xchg
jge
xlat
divl
dec
mov
repz
stos
lahf
hlt
icebp
xchg
iret
std
jg
fisubrs
pusha
mov
loop
mov
lods
xor
pop
fsts
mov
fwait
stos
mov
stos
mov
in
lock
mov
sub
scas
ljmp
mov
pop
push
push
sahf
lods
int
cmp
adc
test
mov
xchg
xchg
inc
push
mov
mov
repz
int
leave
xor
add
jbe
push
out
nop
rcr
adc
sbb
idivl
inc
jecxz
cs
mov
or
pop
loopne
mov
xchg
pusha
out
pusha
jae
ret
cmp
mov
xchg
fnstsw
cmpl
jp
xor
adc
xchg
jmp
pop
pusha
mov
dec
into
mov
adc
mov
pop
sub
dec
jb
clc
mov
inc
scas
dec
mov
xor
push
out
and
inc
inc
aam
jecxz
adc
mov
out
mov
mov
cmp
push
jae
sbb
daa
test
outsb
in
stc
sbb
xor
addr16
pandn
int3
sbb
push
xchg
or
push
lret
fdivrs
pusha
lock
stos
and
sub
js
cmpsb
lock
fmull
jle
cli
cmp
icebp
addr16
add
ja
out
add
xor
inc
mov
dec
ret
fsub
out
icebp
pop
mov
pop
outsb
jno
mov
ret
loopne
gs
cwtl
mov
inc
add
add
je
hlt
pushf
xchg
mov
mov
nop
push
inc
inc
ljmp
sub
dec
lahf
xlat
stos
or
xor
ror
shrb
jo
mov
sub
bound
aaa
imul
daa
or
mov
pusha
pop
sbb
mov
mov
ret
jg
cmp
insb
sbb
lret
dec
adc
out
xor
pop
cmp
fcmovnb
out
data16
cmpl
cltd
jo
dec
aas
movsb
fcmovnbe
adc
pop
rcrl
cwtl
jns
mov
jl
mov
mov
jge
lea
daa
lret
add
cmp
pop
jnp
daa
xchg
data16
mov
push
rcr
pop
std
xor
shrb
shll
test
or
xchg
and
jg
cmp
cmp
lret
push
popa
cwtl
out
rorl
add
inc
dec
xchg
stos
push
scas
imul
add
jmp
outsb
out
cltd
aad
pop
push
or
shll
testb
sbb
sbb
andl
or
pop
stos
sti
cmp
xor
push
add
fwait
pushf
xorl
out
pop
mov
ljmp
stc
cmc
call
mov
pushf
cmp
adc
xchg
aam
fwait
sarl
decb
fsubrl
lds
cmp
pop
insb
fists
mov
mov
out
and
inc
icebp
push
pop
dec
dec
mov
sub
data16
popf
push
in
xchg
inc
push
jnp
or
movsl
mov
mov
fstl
mov
scas
sub
mov
pop
sub
lods
mov
add
dec
xor
or
jne
mov
dec
mov
jle
ljmp
xor
xchg
add
cmpxchg
dec
mov
mov
ja
dec
cli
push
cmp
xor
push
lods
pop
rclb
xor
push
fs
xchg
or
cli
pusha
add
inc
add
fwait
mov
cmp
stc
cmpsb
dec
sbb
cmc
inc
cmp
lret
jecxz
daa
scas
push
mov
mov
adc
stos
sub
adc
add
nop
cmpsl
push
je
stos
xor
ficoml
cld
bound
popf
mov
out
pop
mov
nop
xchg
pop
stc
mov
jb
add
cmpb
and
push
ret
push
stos
inc
xor
jb
lahf
js
out
repnz
inc
cli
sbb
mov
and
outsb
int3
fidivrs
push
aad
pop
lret
pop
in
pop
lahf
cmpl
xor
xchg
and
push
call
repz
outsl
lock
xor
push
in
xor
xor
adc
bound
std
insl
movsl
ja
xchg
lods
xorl
test
orb
or
xchg
jno
cltd
cmpb
cltd
sbb
decl
jno
inc
stc
ret
sub
shl
pushf
and
adc
pop
jo
sub
mov
cmovae
mov
mov
cmc
shl
mov
and
adc
inc
cs
sub
iret
pusha
cmpsl
sbb
inc
pop
sbb
negb
mov
fsubrs
ret
cltd
lds
hlt
and
adc
into
xchg
xor
sti
cwtl
or
mov
fsubrs
fs
sbb
aas
roll
pop
and
mov
int3
shll
ja
jmp
int3
inc
arpl
popa
jecxz
fisttpll
cld
cmp
mov
cs
sbb
fcom
adc
xor
dec
or
sahf
arpl
sub
and
mov
pop
mov
sbb
mov
pop
sub
fcmovnb
fnstenv
ds
push
lret
es
repnz
dec
pop
push
ss
sbb
repz
add
add
inc
fdivrl
popf
out
mov
lcall
jbe
jae
xor
cld
ds
sub
pop
hlt
notb
jmp
inc
in
mov
pop
jp
fimuls
push
inc
in
cli
mov
or
adc
mov
ficompl
insl
xchg
adc
and
mov
mov
insl
xchg
loopne
mov
xlat
add
fndisi(8087
andb
push
je
mov
cli
cmp
popa
push
loope
mov
aad
mov
xchg
adc
rcll
sbb
push
loop
je
test
ret
outsl
inc
sbbl
jle
stos
loope
mov
push
ret
outsl
add
xlat
cmp
inc
movsb
lahf
popl
cld
mov
mov
stc
out
lret
ficompl
dec
and
repnz
lcall
xchg
fiaddl
aas
jne
add
mov
leave
lret
cs
add
adc
jno
repz
push
pop
fdivrl
jbe
fcoml
cld
aas
outsl
enter
jmp
jmp
mov
into
mov
das
arpl
shrb
inc
mov
push
jle,pt
and
pop
xchg
outsb
cs
push
rol
js
popa
jns
daa
or
insb
adc
movl
mov
jmp
mov
cmpsb
dec
roll
mov
xchg
or
test
xor
dec
in
test
daa
push
mov
movsl
xor
push
dec
cmc
pop
lea
push
mov
cwtl
shlb
push
mov
sub
insb
ret
mov
mov
mov
lahf
pop
pop
jge
ljmp
stc
dec
xor
cmp
scas
xchg
adc
aam
test
imul
pop
lret
sti
outsl
popf
xor
jp
cld
into
dec
mov
adc
mov
inc
aas
stos
xchg
shlb
jp
mov
fs
paddq
ret
mov
mov
and
ja
mov
cmp
loopne
inc
mov
and
mov
dec
fwait
in
pusha
pusha
inc
movb
and
bound
mov
stos
loope
push
sub
dec
pavgw
jl
sub
out
addl
subl
add
pop
addr16
movsb
add
insl
adc
or
aam
xchg
fidivs
imul
popf
lcall
cltd
inc
push
pop
xchg
pop
cwtl
dec
js
jge
sub
or
test
dec
sar
sahf
adc
insb
test
pusha
shll
and
adc
add
xchg
inc
das
lcall
ret
hlt
push
sub
subb
inc
aam
subb
enter
insb
fistpl
pop
addr16
add
jl
je
mov
bound
sub
lret
sarb
mov
mov
dec
je
push
mov
xchg
add
and
jmp
movsb
icebp
movsl
stc
into
mov
loop
in
leave
jo
int3
test
pop
aas
inc
in
nop
mov
and
movsb
mov
inc
imul
loopne
cwtl
shlb
fwait
add
inc
or
xchg
jns
sbb
repz
bswap
in
push
add
arpl
popa
sub
add
mov
mov
dec
js
hlt
jle
lret
call
sbb
cmp
test
sbb
andl
test
imul
and
call
shlb
mov
movsl
mov
fwait
mov
adc
ss
lds
test
mov
pop
pop
or
xor
jne
xor
loopne
popa
cmpsl
push
mov
iret
mov
fstpl
mov
mov
xor
cmp
jp
push
in
loop
les
xchg
mov
lds
mov
mov
jo
push
lret
mov
dec
cmc
test
cmp
push
rcll
mov
int
mov
popa
or
cltd
enter
jp
or
insb
pop
mov
in
stc
jne
adc
lcall
repnz
xchg
mov
push
and
movsl
add
push
orb
out
cmp
ret
xlat
mov
cs
mov
inc
call
movsl
rorl
gs
pop
mov
mov
stos
insl
sub
fld
jg
jge
loop
lretw
pop
mov
adc
das
test
je
in
andb
xchg
dec
insb
in
inc
fwait
jns
insb
data16
add
xchg
orl
lret
lea
mov
pop
inc
in
add
mov
in
sub
stc
shr
push
ljmp
in
push
mov
sbb
icebp
clc
mov
xor
or
jo
outsl
movsb
push
mov
outsb
les
int
mov
arpl
mov
mov
cwtl
ss
sbb
mov
js
mov
inc
mov
mov
pop
add
lcall
idivl
mov
cltd
push
cmp
mov
jecxz
popf
arpl
add
nop
sub
test
mov
adc
call
mov
je
pop
loop
pop
mov
mov
sbb
sarl
dec
xchg
push
mov
add
jbe
jge
inc
je
push
movsl
mul
add
sbb
cwtl
daa
movsb
into
pop
sbbl
loopne
imul
push
pop
insb
mov
fwait
daa
mov
push
mov
cmc
mov
push
das
cmp
or
sbb
mov
and
mov
lret
repnz
jns
or
aam
or
lcall
sti
jns
int
movsl
jns
cs
adc
loop
aam
cmp
mov
sahf
sahf
dec
mov
ret
push
out
sub
pop
sub
fnop
roll
pop
in
push
pop
jmp
insb
mov
loopne
aas
mov
inc
push
in
jg
cmp
or
gs
mov
mov
sbb
dec
pop
enter
mov
fwait
push
push
shll
push
xchg
jge
sbb
lods
jae
mov
adc
adc
test
dec
aam
xlat
xor
dec
and
mov
dec
jno
jno
inc
mov
and
xor
add
lret
mov
in
push
jne
lahf
jp
xor
pop
movsl
jge
mov
sub
inc
int3
jnp
jnp
pop
loope
sub
mov
test
mov
xchg
xchg
inc
shr
xor
jg
ret
fwait
and
mov
pushf
sbb
dec
cltd
test
or
xchg
popa
clc
pop
fistps
fcomip
iret
xlat
pop
sbb
cld
or
sbb
xor
mov
jae
xor
mov
into
mov
xlat
gs
insb
sub
fucomip
xlat
ret
mov
fisttpl
ror
fmull
and
inc
and
hlt
lret
out
aaa
mov
dec
dec
repnz
push
enter
sbb
repnz
jo
cli
dec
inc
aaa
rcrb
scas
jmp
pop
push
mov
jecxz
ljmp
out
inc
je
add
outsb
out
lock
push
sub
inc
adc
das
dec
push
movsb
push
rcrb
dec
rol
dec
gs
mov
jl
inc
jae
push
fsubr
ret
int3
cmc
add
cmp
mov
mov
xlat
les
mov
cmp
js
push
psubb
sub
adc
jns
xor
or
cltd
pop
sbb
xchg
clc
and
jle
loopw
dec
xchg
lret
mov
lock
fisubl
cmp
sti
or
cwtl
push
sub
sti
jge
push
repz
movsb
push
fsubl
gs
lret
push
mov
loope
dec
lahf
js
and
imul
inc
fimuls
orb
imul
rcr
outsb
and
das
jne
xchg
mov
sti
pop
add
lahf
rcll
imul
mov
pusha
push
sub
sbb
jae
cmpsb
cmc
fwait
jbe
and
dec
pushf
push
jg
ja
ret
inc
mov
pop
insb
mov
aas
sub
repnz
xor
inc
and
inc
out
mov
sub
stos
clc
movsb
sub
test
xor
or
fsubr
push
rcll
movsl
test
int
xor
bound
cmp
ret
jle
arpl
cld
adc
cli
jmp
sub
ds
push
add
les
adc
dec
ret
inc
inc
jo
ror
outsl
das
scas
jae
iret
aad
cmc
mov
rorb
addr16
cwtl
push
fstl
push
push
adc
subl
cli
add
cltd
std
hlt
sub
fwait
daa
mov
cmp
mov
xchg
iret
ficompl
xchg
outsl
sbb
fwait
adc
mov
enter
jnp
inc
loope
cmp
jo
and
inc
out
or
push
inc
xor
mov
jmp
in
xchg
adc
cmpsl
je
mov
cmpsl
mov
mov
lods
pusha
and
inc
adc
pop
js
xchg
and
aas
jl
ja
jbe
lahf
adc
in
xchg
dec
jle
mov
lds
push
mov
inc
js
clc
adc
xor
add
lods
jmp
lds
jno
inc
je
mov
ja
divps
sbb
pop
push
pop
ficompl
in
xchg
mov
dec
les
xor
gs
in
sti
dec
aaa
add
mov
inc
sarl
adc
push
cltd
test
test
push
scas
loopne
xchg
dec
xor
fadds
push
lods
bound
out
mov
jnp
enter
add
xchg
loope
adc
lahf
and
fwait
rcll
loop
cwtl
cli
push
sub
ljmp
js
mov
test
add
push
mov
add
mov
nop
pushf
push
aad
push
scas
in
mov
loopne
push
dec
pop
mov
add
pop
push
mov
xor
xchg
cmc
jg
pop
adcb
add
imul
add
cwtl
pop
mov
xchg
mov
out
mov
data16
inc
dec
lds
cld
daa
ret
icebp
out
push
xchg
test
and
mov
lods
cwtl
sbb
cmp
mov
notb
mov
push
adc
pop
outsl
inc
lret
dec
jbe
push
popf
scas
pop
fwait
add
xor
into
dec
sarl
pop
lods
sbb
mov
mov
or
adc
out
dec
mov
push
dec
mov
js
xlat
sub
negl
fs
arpl
test
aad
push
lahf
imul
rolb
out
sub
jle
dec
insb
stc
clc
pusha
arpl
jge
sub
loop
or
lretw
pusha
push
test
xchg
mov
in
iret
shlb
fnstcw
fidivrl
pop
lret
jp
stos
outsl
ror
pop
std
js
mov
jg
cmp
jbe
dec
dec
cmp
xor
pushf
and
outsl
outsb
pop
dec
push
aad
cmc
pop
stc
xlat
in
loopne
mov
jno
and
fsts
lock
jg
cmp
mov
mov
push
cltd
movsl
jb
dec
push
repz
sbb
sti
lahf
mov
mov
xor
mov
sbb
xor
sub
inc
rorb
hlt
xchg
fs
pop
sub
mov
inc
or
jg
stos
sbb
jl
insl
mov
xchg
vpshuflw
xchg
sarb
fisttpl
out
xchg
jns
jmp
push
sub
sti
aad
outsb
and
in
idivl
lret
push
stos
fnstcw
pop
int
arpl
or
test
mov
adc
inc
hlt
inc
adc
pop
pop
call
imul
leave
cli
dec
fists
pop
sub
in
mov
rorl
gs
fbld
call
out
daa
in
or
sub
jns
and
mov
xor
imul
int3
andl
dec
subb
sbb
rorl
test
in
lret
xor
movsl
inc
jnp
xchg
xor
arpl
add
mov
pop
test
jo
test
lret
ret
je
fnstsw
or
adc
adc
popa
sub
xor
mov
cld
inc
cld
pop
push
jmp
sub
mov
inc
fisubl
in
mov
push
ret
mov
shll
push
dec
lock
adc
and
je
or
or
xchg
or
sub
mov
jl
xchg
andl
or
mov
inc
lcall
data16
dec
inc
test
push
pop
mov
mov
iret
push
cmp
inc
lea
rol
push
adcb
push
mov
jp
mov
fcmove
scas
lods
inc
pop
stos
shl
pop
shrb
xchg
ret
xor
mov
pop
adc
push
xor
pop
inc
xor
xchg
inc
xchg
subl
outsl
mov
cmc
call
xor
test
mov
cltd
jmp
cmp
add
add
insl
pop
sti
hlt
xchg
xchg
mov
mov
sbb
sub
lret
mov
jle
adc
sti
dec
inc
sub
int3
xor
add
mov
dec
sbb
dec
pop
jbe
je
addr16
mov
xor
fistpl
mov
lods
sbb
pop
mov
jecxz
sbbl
mov
mov
inc
push
push
ss
xchg
iret
push
mov
pop
faddl
jmp
adc
mov
add
cmp
sub
in
clc
sti
jmp
xchg
out
and
or
mov
push
pop
adc
push
lcall
cmp
sbb
lock
lds
push
inc
pop
int3
add
dec
stos
stc
repz
leave
inc
and
addr16
das
fistps
test
dec
mov
xor
fdivrs
pop
lahf
xor
inc
inc
loopne
sbb
pop
pop
xchg
incb
cmp
cmp
movl
test
inc
mov
shl
xchg
and
push
popa
imul
andl
std
push
inc
pop
dec
add
mov
sarb
jns
pop
xchg
mov
lahf
stos
mov
dec
inc
pop
xchg
push
scas
mov
sub
daa
sub
leave
lea
and
ror
push
sub
jg
push
mov
aaa
imul
mov
ret
popa
add
mov
negl
adc
dec
pop
repz
xchg
jbe
mov
outsl
push
lahf
push
out
xchg
xchg
xchg
sti
data16
sbb
xor
stos
and
jb
test
mov
sbb
mov
pop
dec
and
shrl
add
test
add
shll
insb
or
jl
cmp
fmull
test
sub
push
sub
movb
dec
adc
repz
ficoml
popf
xlat
pop
repnz
dec
mov
out
gs
dec
aad
test
mov
loop
lods
fs
aad
or
and
and
jmp
jge
lock
cmp
push
or
ret
lock
xor
mov
aas
adc
jle
xchg
xor
push
js
dec
fimuls
movsl
cmp
adc
inc
icebp
popf
jb
in
xchg
and
pop
push
sbb
hlt
es
sub
and
xor
pop
aam
mov
call
mov
out
pextrw
xor
adc
mov
pop
mov
and
int3
shrb
cmpsl
push
imul
rep
sbb
pushf
movsl
mov
adcl
shrl
lahf
sub
dec
cmp
aas
mov
fwait
pushf
dec
push
mov
mov
jne
lret
pusha
test
mov
mov
add
in
in
pop
push
sbb
ds
and
dec
xor
ficoms
cmpl
adc
femms
add
ja
test
and
adc
sbb
dec
sti
shr
mov
mov
add
fcoml
mov
mov
mov
or
testl
notb
jle
add
mov
pop
loopne
enter
cli
cld
or
add
pop
ljmp
pushf
jl
mov
sub
pop
push
icebp
cmp
jne
jl
or
jne
fldcw
cs
test
pop
jp
jle
repnz
in
add
push
xor
pusha
repz
add
fs
adc
sub
hlt
sarl
push
xchg
fwait
popf
lock
mov
xor
add
mov
mov
mov
clc
sub
ret
inc
ds
out
xor
test
call
xchg
cmpsl
cs
pusha
out
and
mov
jbe
cli
inc
lods
cmc
pop
jb
iret
nop
and
outsb
sub
mov
pop
cltd
mov
shrb
jge
mov
pop
mov
std
jbe
subb
fisubs
jge
lret
xor
fistpl
push
fcomps
jl
push
adc
ffree
sbb
jae
inc
stos
mov
or
push
aas
dec
cmp
fs
sti
dec
aam
cmpsl
ret
jo
stc
pop
dec
movsb
sbb
jo
mov
mov
fadd
fwait
xchg
inc
add
outsb
mov
xchg
cmp
jo
and
sahf
push
rcr
sub
adcl
push
test
add
push
or
enter
hlt
sbb
iret
push
jno
testb
out
mov
jne
stos
lock
cmp
inc
cmp
insl
push
push
push
js
inc
xor
or
dec
aas
mov
in
and
lds
adc
dec
enter
imul
xchg
pop
pop
in
xor
mov
cwtl
push
and
ret
test
icebp
mov
push
aad
aaa
loopne
fistpl
pusha
xchg
sub
clc
lcall
lcall
mov
inc
insb
cltd
sub
cmpsl
mov
gs
pop
int3
cmp
rolb
mov
adc
ljmp
cmp
insb
jbe
jmp
push
jmp
std
dec
sar
xor
mov
scas
addr16
loop
jns
dec
jp
test
lock
ja
cmp
sbb
testl
xor
js
inc
sbb
or
adc
push
pop
dec
mov
pop
stc
rorl
xchg
stc
xor
mov
std
leave
xor
jnp
mov
jmp
mov
and
add
ret
mov
inc
xor
ror
xchg
xchg
dec
pop
mov
arpl
xor
pop
sbbb
inc
sub
push
pop
xor
test
divl
and
and
out
mov
xor
xor
adc
rep
mov
es
sahf
pop
or
dec
inc
jno
mov
or
out
cli
call
adcl
inc
sti
out
leave
sarb
ficomps
out
push
mov
mov
inc
imul
test
frstor
repz
jo
jg
pop
test
cmp
int
push
add
out
lock
cmpsb
repz
mov
arpl
rcrl
in
dec
sub
push
call
rorl
push
lods
test
push
add
jmp
cltd
or
jno
sti
mov
sub
cmpb
lods
testl
cli
jge
cs
test
mov
mov
jno
scas
pop
push
push
pusha
dec
fdivp
xor
push
sarb
int
outsb
dec
daa
popf
jmp
jmp
inc
enter
sbb
ror
scas
leave
mov
icebp
push
jmp
inc
iret
xor
imul
mov
push
push
and
sub
mov
inc
mov
fcmovu
lret
xchg
add
ds
in
divl
ss
xlat
repz
pop
mov
cmpb
js
jae
mov
mov
pop
xchg
mov
lret
test
and
arpl
sub
mov
je
pop
rcrl
inc
xchg
decb
inc
ret
dec
push
cld
jmp
dec
hlt
adc
outsl
lods
and
add
push
loope
sub
and
fwait
inc
insb
cmp
jecxz
and
add
cmp
adc
mov
fldl2e
dec
adc
ror
mov
mov
rorl
inc
pop
mov
push
lods
lret
rorl
ds
pop
enter
or
mov
in
mov
xchg
and
aas
lea
pusha
pop
mov
imulb
shll
pop
aaa
xor
lock
and
push
inc
aad
insb
mov
push
sbb
xchg
xor
mov
outsb
and
daa
mov
mov
data16
mov
jecxz
xchg
xchg
pop
and
mov
push
scas
imul
adc
push
inc
mov
jge
dec
in
fyl2x
and
je
daa
mov
ds
pop
add
adc
sub
ficoms
cwtl
dec
push
add
adc
and
movsbl
arpl
popf
cmp
and
leave
out
xchg
adc
sbb
stos
adc
adc
inc
add
pop
fcomps
leave
icebp
divl
cld
icebp
out
push
je
pop
aaa
pop
adc
cmp
mov
clc
ljmp
mov
sub
and
mov
icebp
cmp
daa
jnp
popf
jnp
lahf
push
jp
data16
cwtl
xor
add
out
pop
and
and
outsl
shll
mov
cmp
mov
je
push
or
dec
inc
jne
xchg
xor
js
loopne
jns
pop
sub
aam
pop
fwait
loop
testb
aas
cmp
movsl
mov
imul
xor
and
sub
xor
aas
popf
je
inc
int3
mov
sbb
repz
xchg
xchg
pop
lds
inc
pop
xor
subb
daa
sahf
jb
loop
mov
mov
scas
mov
and
mov
xchg
lods
fsubrl
pop
lret
pop
cmpxchg
inc
into
cmc
std
dec
movsb
pop
sarw
test
fadd
add
mov
pop
mov
mov
out
ja
aad
adc
lods
pop
dec
out
ja
nop
rcrl
mov
or
xor
push
jp
clc
mov
mov
push
add
loopne
inc
in
xchg
jno
int
push
mov
pop
add
clc
pop
popa
add
push
punpckhbw
int3
fnstcw
daa
faddl
cwtl
sbb
dec
pop
pusha
arpl
ja
dec
mov
adc
dec
rorb
int3
div
xor
mov
test
dec
jp
jno
aaa
xchg
pop
out
push
mov
sub
dec
stos
and
dec
out
mov
sbbb
xor
fwait
dec
mov
sbb
mov
mov
lahf
das
out
mov
push
pop
gs
aad
pop
sti
fwait
aas
jmp
xchg
call
pop
mov
aad
iret
jl
mov
fwait
imul
pop
sbb
jmp
or
and
insl
mov
rolb
add
in
cld
outsl
cmpsb
cmpsb
fistl
push
pushf
mov
or
fucomp
sub
shrb
testb
mov
push
push
in
push
mov
movsl
adc
xchg
std
and
xchg
pushf
divl
dec
pop
or
adc
popa
or
mov
or
test
mov
lds
fwait
pop
push
fcom
icebp
or
adc
jle
inc
xor
adcb
xlat
sub
not
mov
push
gs
vpmaddwd
inc
mov
jg
and
and
nop
add
pop
sbb
nop
add
je
vmread
mov
push
sti
mov
pop
in
inc
jg
into
insl
mov
movzwl
imul
adc
repnz
xchg
lea
mov
mov
aam
push
pop
push
inc
or
xlat
inc
push
inc
mov
lock
leave
jecxz
and
jmp
scas
push
sub
pop
addb
loopne
push
jae
mov
mov
imul
ficomps
movsl
mov
out
rclb
push
cmpsb
inc
outsb
xchg
inc
push
xchg
and
pop
dec
mov
ljmp
mov
inc
pop
pop
ret
scas
outsl
idivl
outsl
out
insl
les
push
cwtl
lods
lods
sub
mov
fsubr
cmp
hlt
daa
xchg
aam
pop
xorl
sbb
ds
sti
mov
pop
je
inc
add
shrw
out
cld
ss
cmp
adc
sarl
mov
jns
push
popa
mov
js
out
mov
call
jo
rcrb
repz
push
and
mov
push
jo
cmp
cmp
cmp
inc
push
add
mov
dec
shll
fmul
pop
lods
and
jb
mov
inc
add
cli
fbld
push
and
cmpsl
mov
aaa
nopl
cltd
mov
mov
pop
push
or
pop
jb
cmp
popf
pop
ds
xchg
push
xor
jne
sbb
adc
xor
mov
aaa
sbb
add
xor
mov
aad
aaa
cs
sub
xlat
in
dec
ja
ja
lea
sub
cmc
fimuls
jmp
cmpsb
dec
je
mov
jp
jmp
and
mov
rep
jmp
out
fmull
mov
cmpsb
fdivl
in
sbb
xchg
popa
inc
pop
outsb
jae
std
out
add
fcompl
xchg
xlat
mov
call
mov
mov
or
pop
scas
and
pop
adc
xchg
mov
inc
out
mov
push
mov
std
jge
movsl
shll
in
xor
in
pop
and
fstps
sahf
cld
in
sarb
pop
xor
jg
or
fcoml
inc
xor
mov
jmp
inc
bound
ljmp
jo
les
icebp
sbb
xchg
shll
stos
xor
pushf
fwait
mov
jb
and
lea
push
add
fists
pop
pop
loope
ja
jae
xor
jb
enter
insl
xlat
jge
mov
divl
insl
test
push
fdivs
rcrl
pop
orl
xor
and
out
mov
insb
jne
add
shll
jno
shr
xchg
adc
and
in
adc
lret
mov
inc
xchg
cmpsl
and
push
notl
inc
iret
push
xlat
pop
jb
push
add
imull
lret
rorl
mov
clc
xchg
mov
xlat
ja
cmpsb
inc
call
inc
into
pop
mov
fs
cmpsl
mov
imul
pop
pop
sbb
bound
add
push
and
jecxz
push
outsl
outsb
ja
push
mov
ss
jle
lret
mov
popf
add
inc
xor
orl
push
push
or
incb
dec
outsl
popf
mov
push
ljmp
jmp
xchg
sub
popa
mov
dec
les
mov
sbb
jg
xor
popa
jp
ret
mov
int3
insl
icebp
sbb
cmpsb
shr
inc
push
mov
testb
fisttps
add
push
cmp
ficompl
push
ret
in
or
add
lock
cmp
mov
mov
jo
arpl
ljmp
mulb
stos
mov
adc
fstps
fbstp
lret
mov
push
cmp
mov
arpl
insb
inc
fstps
js
imul
and
dec
adc
cmp
std
fcoms
inc
mov
pop
xor
repz
cltd
fs
bound
jbe
xlat
pop
push
mov
fisttpl
je
dec
cmpb
mov
je
and
inc
cmp
lret
dec
cmp
inc
push
shlb
lret
adc
fidivs
mov
loope
addr16
sub
cmp
sbb
pop
and
dec
daa
xchg
inc
and
stos
aam
fidivrl
pushf
in
mov
popf
fcmovnbe
gs
hlt
and
lds
cmpsl
sbb
sbb
jae
dec
mov
daa
loop
loope
lahf
and
add
mov
xchg
js
fildl
pop
movl
fdivl
stc
mov
push
ljmp
jns
es
xor
pop
dec
adc
scas
jae
ljmp
iret
std
mov
or
jmp
xchg
aaa
sti
int
xor
jb
iret
push
lcall
shll
or
mov
sbb
and
jecxz
ja
dec
lret
ret
sbb
push
inc
stc
jb
adc
bound
jbe
addr16
push
movsl
scas
std
aaa
jl
push
xchg
imul
jg
jge
notl
aam
cmp
jae
sub
outsl
cmp
rdpmc
cmc
sbb
rclb
jnp
lock
mov
push
imul
rorl
sub
or
pop
push
ds
bound
imul
mov
inc
mov
into
lcall
dec
sub
hlt
stos
scas
inc
sbb
test
and
xor
adc
out
mov
push
ja
xchg
and
sub
negb
mov
inc
out
xor
imul
ret
xor
inc
inc
adc
pushl
bound
dec
mov
cmp
ret
insl
mov
or
es
mov
stos
jge
int
jmp
pop
pop
sbb
jbe
ret
test
adc
cmp
ljmp
lods
dec
cmc
sarb
or
mov
mov
insb
jge
adc
push
xchg
shll
sbb
jne
enter
jns
cmp
les
add
dec
jle
fs
jecxz
xor
push
inc
add
arpl
repnz
pop
inc
rcrb
fsubl
mov
movsb
das
out
xchg
stos
adc
dec
jg
insl
in
aas
outsb
inc
enter
push
and
cld
fildl
mov
in
clc
ja
scas
pop
or
rolb
fcmovne
cmp
jnp
insb
pop
add
xor
dec
xchg
cld
jl
ljmp
out
adc
jg
fisubrs
inc
out
add
jne
sahf
test
repz
xchg
cli
inc
push
or
int3
mov
aaa
push
ret
mov
xor
or
jecxz
loopne
mov
sbb
je
ret
xchg
adc
shll
sbb
dec
pop
das
cs
sahf
inc
ja
sbb
jecxz
add
enter
insl
iret
nop
cmp
outsl
xchg
inc
outsl
mov
cmp
xor
aam
ret
in
fadds
sarl
cmp
xchg
dec
cmp
roll
push
mov
inc
push
loop
test
in
or
leave
mov
sub
scas
sbb
popf
into
inc
clc
jmp
push
mov
xor
push
adc
or
xlat
leave
ficoms
popf
loopne
out
movsb
pop
sti
fdivrs
push
push
mov
pop
sub
inc
inc
sti
inc
mov
ret
dec
jae
fdivs
mov
test
or
jp
dec
aam
fmull
rol
cld
dec
out
clc
and
sub
mov
fmulp
arpl
mov
mov
repnz
pop
leave
sub
jp
mov
dec
loopne
cmc
ds
mov
stos
jle
lds
ja
dec
arpl
movsb
repz
push
mov
xchg
add
mov
push
xchg
in
add
jecxz
mov
mov
out
shrb
hlt
into
cld
inc
pop
jmp
mov
mov
cmpb
mov
cmp
aam
lods
pop
xchg
jp
out
popa
mov
inc
cmpl
xchg
push
mov
cmpsl
and
int3
push
dec
jne
cmovnp
ds
loop
cmp
mov
filds
lea
fsubl
pop
sbb
aad
leave
inc
push
adc
stos
xor
aas
and
cmp
lcall
xor
lret
stos
dec
scas
lahf
aam
add
jbe
jo
mov
adc
test
int3
dec
imul
outsb
push
cmp
sub
nop
mov
scas
cld
lock
insl
addb
pusha
arpl
pop
dec
test
sahf
mov
sub
xchg
imul
push
inc
xchg
fs
movsb
rolb
addr16
or
sub
je
adc
and
adc
add
dec
fisubs
mov
push
push
in
cltd
and
mov
mov
int
pushf
xchg
cmp
js
push
jmp
or
rolb
ja
push
sbb
push
mov
or
mov
sbbl
in
cmp
int
ret
mov
std
mov
mov
add
mov
imul
inc
testl
in
adc
mov
fimuls
and
rcll
cmpsb
push
mov
cltd
fimull
sub
jns
xchg
pop
scas
dec
outsb
orb
stos
lods
dec
clc
inc
out
sbb
fst
fcompl
fwait
pushf
adc
mov
adcl
imul
sub
imul
cmp
data16
aad
mov
sub
sbb
fld
loopne
cmc
pop
push
je
movb
push
cli
pop
add
add
les
pop
add
idivb
cmpsb
jns
and
mov
loope
insl
out
pop
fmulp
frndint
enter
push
neg
or
or
add
jg
push
xchg
or
push
ljmp
jno
pop
inc
dec
sbbb
cmpsb
lahf
flds
push
scas
rcl
in
loope
scas
mov
fadd
das
js
push
xor
mov
add
push
mov
cltd
scas
movsb
bound
subl
std
iret
popf
adcb
lret
nop
call
inc
mov
or
push
dec
mov
daa
cli
pop
mov
pusha
aaa
push
fdiv
lds
loop
inc
pop
and
add
push
adcl
inc
pop
arpl
jo
cld
xor
dec
cmp
mov
sti
rol
cmp
call
aas
mov
sbb
push
ret
adc
mov
mov
mov
repnz
cmp
out
jecxz
and
sar
jne
xchg
pop
or
lods
and
lcall
cmp
outsb
inc
mov
stos
into
fdivl
mov
add
jne
xchg
bound
and
xor
fcmove
fidivrs
mov
xchg
repz
jp
cmp
scas
mov
and
xor
out
and
gs
adc
lock
fwait
cmp
fbstp
clc
add
mov
popa
jecxz
or
test
out
out
fildl
jbe
in
add
sub
jecxz
insl
adc
sbb
mov
aaa
ret
sub
sbb
cmc
mov
xchg
inc
rolb
data16
push
add
shll
dec
clc
xchg
mov
xor
andl
lods
fadd
movsl
inc
inc
fdivrp
xchg
std
cmp
mov
mulb
rorl
data16
push
push
dec
aaa
mov
pop
push
movsb
subl
pop
sbb
loop
jmp
xchg
fdivs
lcall
dec
push
outsb
cmpsb
sbb
stc
mov
fsub
push
xchg
sub
stos
stc
sub
clc
adc
xor
adc
jns
outsl
pop
scas
roll
negl
leave
fcmovne
adc
adc
mov
inc
sbb
add
xorb
lret
dec
cmp
rclb
pop
push
add
lea
gs
ja
std
lcall
fsts
push
into
sbb
jae
add
and
and
pop
lret
push
fyl2x
and
incb
in
hlt
out
in
add
fisubs
aam
sbb
adc
shll
mov
or
and
je
dec
pop
mov
jo
outsl
test
push
ret
xor
jg
and
fnsave
lods
aad
jb
fcmovne
push
adc
std
fwait
in
mov
std
out
push
imul
dec
enter
test
pop
dec
push
push
std
pop
and
call
xchg
mov
xor
test
iret
push
out
cmpb
mov
notl
or
mov
dec
lock
lahf
aas
xchg
addr16
idiv
sub
fdivrs
stos
imul
mov
inc
mov
scas
sbb
or
jmp
leave
outsb
inc
and
mulb
dec
sti
jmp
inc
jns
adc
ret
sub
cmpsb
jp
adc
or
bnd
jne
push
adc
dec
mov
inc
in
fdivp
dec
fwait
aad
cli
hlt
push
pop
pop
and
andl
aad
int
lcall
mov
insl
pop
shrl
dec
fdivs
mov
shll
or
adc
or
mov
ljmp
lds
mov
in
jp
stos
pushf
lods
adc
adc
aam
lahf
mov
out
dec
aaa
aaa
mov
mov
in
add
and
sub
sub
lock
in
push
inc
mov
inc
sbb
mov
das
repz
cltd
push
popa
push
fwait
sub
jecxz
jp
jle
ja
fsubr
and
add
stc
push
std
gs
int
dec
jmp
fstpl
inc
call
xor
adc
add
out
jae
jns
fwait
push
test
adc
imul
pop
lahf
pop
orb
adc
xor
pushf
pop
nop
sbb
in
xchg
imul
sbb
adc
jb
mov
mov
lods
movsl
inc
dec
mov
test
mov
xorb
aaa
push
outsb
and
mov
or
dec
sbb
loopne
scas
imul
sbb
cmp
insl
imul
scas
jnp
jle
daa
in
and
out
dec
add
sub
movsb
jo
fucomi
sub
xchg
setne
ret
leave
sahf
cmpsl
icebp
mov
rorl
add
cltd
sti
into
scas
insl
adc
sbb
pop
loop
sub
adc
arpl
mov
lock
xchg
push
sbb
jmp
sahf
xor
cmpsb
mov
push
aas
cmp
or
xor
sub
lds
mov
icebp
push
mov
xor
xor
in
pop
rcrl
movl
cmpsb
sbb
jno
es
repz
lret
mov
or
dec
pop
pop
push
arpl
js
mov
cs
shlb
dec
pusha
mov
dec
mov
scas
jl
dec
add
cs
inc
cmp
mov
or
ds
faddl
pop
xchg
jp
pop
aam
out
push
orb
xchg
outsb
frstor
sti
pop
mov
mov
cwtl
inc
loope
outsl
or
xchg
js
inc
in
dec
mov
add
test
out
mov
fiaddl
xchg
jecxz
sar
aaa
xchg
ret
das
imul
or
andb
mov
insb
push
add
xor
pushf
insl
stc
pop
xchg
jg
je
or
das
push
add
cmpsl
pop
fmuls
repz
aas
popa
xor
xchg
arpl
sbbb
inc
incl
pop
xchg
ret
fbstp
jne
mov
daa
or
ds
and
xchg
inc
cmp
insl
mov
inc
xchg
mov
loop
imul
addb
pop
push
sbb
jo
jne
stos
stos
mov
cmp
popf
xor
add
adc
or
iret
jne
push
jbe
adc
repz
shrd
push
clc
cmp
xor
lds
int3
pop
fsubs
inc
pop
adc
call
repz
sbb
fcmovnb
mov
in
ljmp
inc
jb
pop
ret
test
int
test
xchg
pop
aam
jbe
jb
pop
jbe
test
in
daa
dec
into
lcall
fmul
xor
jnp
push
mov
push
lods
out
outsb
dec
inc
dec
sbb
mov
leave
cltd
imul
cmp
pop
or
shlb
out
inc
aam
inc
shl
xor
icebp
pop
int
cmp
jge
ss
movsb
decb
iret
aam
lds
aaa
clc
pop
das
inc
pop
in
adc
outsb
sbb
xor
fisttpll
jno
jge
sti
mov
hlt
push
enter
testl
iret
ficompl
push
push
pop
std
mov
mov
mov
xor
cmpsl
jno
fadds
enter
pop
xchg
repnz
daa
pop
stc
das
xor
cmc
sub
sub
leave
cld
stos
mov
out
std
repz
ss
mov
les
aad
shlb
cltd
xor
fcoml
mov
movsw
mov
imul
popf
push
jnp
pop
shlb
jo
sbbl
scas
loop
ud1
lahf
out
jae
xor
jb
inc
sbb
cmp
mov
fsts
lods
lods
mov
xchg
je
fldcw
push
stos
imul
das
mov
imul
cmp
data16
js
aad
jno
or
jle
sbbb
inc
mov
push
fcompl
inc
push
adc
lods
adc
mov
push
pop
jae
xor
test
dec
or
inc
outsb
push
xor
aas
push
or
cmp
outsl
ret
mov
mov
stc
aam
shll
push
lock
and
sbb
or
push
adcb
pop
mov
test
pushl
push
cmp
lods
add
icebp
dec
mov
mov
loopne
jno
je
les
xor
cwtl
mov
cld
mov
cs
outsb
outsb
int3
lods
xor
jle
into
push
sub
add
jae
add
aam
mov
or
jo
cmp
mov
pop
sub
fildll
xchg
pop
push
dec
ret
xor
mov
aas
mov
into
insl
dec
pop
popa
or
mov
or
enter
dec
in
pop
leave
outsb
test
insl
fbstp
cmp
or
lret
sbb
push
inc
pop
les
mov
jge
fadds
bound
inc
pushf
js
and
inc
sub
push
mov
inc
ror
adc
dec
icebp
mov
inc
in
test
push
inc
mov
inc
mov
test
xchg
outsb
adc
xchg
out
dec
aad
imul
sub
mov
cld
pop
mov
and
lds
insl
int
pop
dec
inc
xor
push
out
sub
jmp
rorl
adc
push
xor
add
mov
mov
movsl
test
lods
test
adc
sub
push
aas
movb
jg
out
pop
ja
mov
fistpll
cwtl
xlat
xor
pop
xchg
aad
insb
mov
mov
cmp
cli
int
test
mov
push
repz
dec
and
jae
rorb
lock
sti
dec
sbb
iret
lahf
pop
out
cmp
stos
dec
push
mov
aad
fdivs
or
iret
and
inc
mov
dec
xor
mov
insl
cmpsl
dec
insl
jmp
addr16
add
leave
cli
cmp
sbb
out
pop
hlt
out
gs
testl
cwtl
movsl
jbe
addr16
repz
in
leave
push
ret
jl
sahf
mov
shll
pop
cs
mov
orl
jmp
lock
dec
out
imul
fldenv
fisubrs
adc
pop
jae
scas
jbe
add
jmp
and
add
lods
outsb
bound
rorl
jl
lods
and
jle
dec
xor
sub
std
fcomip
jecxz
pop
and
pop
aad
fbstp
cli
cli
out
or
pop
fwait
adc
inc
nop
push
ret
test
jge
add
fmull
rcll
mov
leave
mov
iret
sub
dec
stos
jmp
lds
test
cmpsb
sub
daa
pop
shr
mull
cltd
sbb
sub
dec
test
xorb
nop
jp
sbb
fisubrs
ret
jnp
cmc
push
aam
mov
adc
or
out
push
jnp
xchg
mov
lods
lahf
imul
lahf
lcall
push
mov
inc
push
call
cmp
sti
scas
lahf
pop
std
mov
and
mov
pop
repz
mov
xor
mov
fcoms
cmp
ja
arpl
popf
icebp
xchg
inc
mov
out
and
cmpsb
dec
inc
icebp
imul
das
sub
pop
xchg
mov
clc
push
lock
repz
das
mov
ret
adc
lods
rol
shll
sub
mov
adc
aaa
fdiv
addb
jl
in
lcall
div
pop
inc
or
imul
nop
mov
xchg
lret
rep
or
imul
xor
popf
outsl
lock
sub
aas
jne
sbb
xchg
shrb
cltd
loopne
inc
lahf
lock
scas
sub
pusha
mov
aas
decl
adc
xor
mov
bound
mov
pop
out
scas
lock
fcmovne
fisubs
pop
mov
in
push
pop
aam
cmc
out
inc
nop
inc
jmp
insl
inc
push
cmp
xor
add
clc
std
pop
sbb
adc
pop
cmp
repz
andb
in
push
dec
inc
mov
jns
and
shlb
js
test
insb
pop
inc
push
jns
cmp
jno
sub
mov
push
mov
cmp
push
nop
aas
ret
outsb
call
jecxz
jge
scas
leave
dec
pushl
iret
pushf
xchg
inc
sub
pop
xchg
dec
test
adc
mov
mov
push
jmp
xchg
pushf
je
inc
adcl
xor
data16
test
ja
stos
xor
and
cmpl
andb
lcall
idivl
sbb
cmp
adc
cmp
jle
lods
inc
sub
push
lods
mov
jmp
aam
xor
imulb
sub
or
push
cs
add
push
lods
dec
push
enter
ja
xor
and
cli
aad
xchg
cmp
and
out
sbb
repnz
shrl
icebp
or
aaa
dec
ret
jae
dec
in
in
test
push
pop
lret
es
cwtl
jge
or
add
cmp
cmc
mov
push
xor
inc
jecxz
cld
inc
mov
out
dec
test
jp
xor
inc
push
iret
cld
popf
xchg
ficoms
add
cmpb
lahf
pusha
sub
sbbl
inc
mov
jo
xchg
xor
pop
shlb
gs
insb
lret
adcb
dec
cmp
mov
mov
and
cmpsb
outsb
cmp
jo
popf
and
out
xchg
xor
lock
mov
jnp
mov
inc
mov
out
data16
decb
test
popf
fwait
pushf
aas
data16
mov
push
push
sbb
ljmp
out
push
push
jle
dec
mov
lods
pop
std
test
rcll
icebp
push
pop
add
movsl
aaa
mov
add
aam
cmpl
out
jle
cmp
push
mov
fs
dec
movb
pmaddwd
imull
cs
stos
call
adcl
cmpsb
adcl
jb
pop
stc
xorb
sbb
pop
and
popa
xlat
jmp
mov
and
jecxz
xor
xchg
inc
pop
xchg
stos
adc
or
xor
dec
mov
sub
and
aam
sbb
ret
int3
push
cmp
loopne
clc
test
in
pop
fwait
adc
popf
xorb
mov
push
faddl
push
mov
aam
and
add
sbb
pop
inc
and
cld
inc
cs
idivl
dec
xchg
enter
das
mov
xchg
dec
and
mov
sbb
mov
fldenv
push
mov
pop
sbb
xchg
lret
inc
pop
adc
add
out
push
xchg
adc
imul
jbe
inc
pop
add
mov
clc
xchg
sti
mov
mov
hlt
bound
in
fistl
or
js
sahf
out
mov
mov
out
incl
pop
cld
pop
cmpsb
jb
or
out
into
fistps
mov
jge
movsb
dec
pop
lods
xchg
xor
adc
ljmp
jb
mov
adc
repz
cltd
inc
cltd
loope
addb
jp
jge
mov
pop
or
iret
ret
xchg
out
pop
mov
pusha
je
stos
out
push
and
pop
xchg
cli
jge
xor
jmp
rcrl
xor
push
rorb
xchg
testl
jecxz
mov
mov
leave
mov
push
rclb
fidivl
sub
inc
imul
dec
fisttpl
cmp
push
sub
mov
mov
lds
fcoms
mov
lock
loope
in
fsubp
fcoml
cmp
xchg
add
ret
inc
add
xchg
mov
cmp
shl
add
xor
inc
push
jp
add
shrb
jle
inc
mov
subb
stos
adc
lcall
in
fiaddl
xlat
push
ud1
sbb
mov
add
out
xor
divb
or
inc
scas
xor
mov
mov
icebp
and
insb
sti
jg
in
fwait
enter
outsl
push
cmp
stos
imul
repz
ret
push
push
rcrl
outsb
cltd
push
push
inc
or
cld
dec
leave
iret
imul
repz
insb
cmp
xchg
mov
lahf
sbb
shlb
inc
aad
aaa
cmp
adc
push
ds
adc
idivb
inc
dec
push
cli
lea
adc
or
push
aad
add
pop
cmpsb
stos
aad
inc
inc
cmp
je
push
mov
rorl
mov
lahf
sbb
outsb
mov
sub
add
adc
cmp
shlb
fidivs
pop
dec
add
test
mov
mov
sub
lret
mov
mov
ljmp
cmpsb
lret
cmp
daa
cmpsl
fwait
cmp
fnstcw
fs
dec
dec
and
mov
xor
push
cmp
pop
icebp
ss
sbb
lret
xlat
mov
xchg
sub
jo
sahf
pop
push
enter
add
dec
jecxz
push
sbb
cmpsl
lods
pop
aas
popf
in
push
mov
je
mov
dec
xchg
push
enter
and
sahf
pop
mov
push
add
cmpl
iret
or
out
xchg
lret
pop
fbstp
mov
les
pop
inc
or
push
xchg
mov
pop
testb
ret
int3
xchg
lods
jb
rol
cmpb
jo
std
pushl
xor
es
out
out
xor
lcall
or
or
or
aas
inc
jle
sub
int
out
dec
es
daa
pop
mov
cli
lock
lods
mov
in
std
jp
jmp
or
push
cmp
cmc
icebp
fidivrs
pop
add
mov
insb
fs
or
sbb
push
dec
cmpsb
data16
insl
lea
jae
jbe
fisubrl
es
cmp
test
lahf
sbb
stos
pop
cld
pushf
aad
out
and
adcb
jo
cltd
icebp
pop
imul
cmp
add
subl
jae
inc
pop
xchg
xchg
cwtl
mov
cmpsl
les
fnsave
inc
dec
mov
push
adc
mov
outsl
or
dec
sbb
cmp
inc
shrb
mov
mov
add
mov
cmpsl
mov
test
mov
jno
jbe
push
bound
lret
xor
iret
xchg
cltd
cmc
xchg
add
jge
scas
inc
jp
jl
rcrl
or
sbb
loopne
inc
cmc
out
ljmp
mov
jmp
popa
jmp
add
cmp
xor
push
sub
push
push
xchg
mov
push
idivl
dec
dec
xchg
in
bound
dec
pop
add
mov
lds
jo
sbb
int3
sub
clc
xchg
mov
fadd
sbb
xchg
mov
xchg
cwtl
les
out
and
filds
pop
filds
fbstp
ja
xchg
nop
sbb
push
jo
pop
mov
xchg
icebp
stos
insb
out
or
fisubl
das
add
testb
add
and
adc
imul
and
push
sub
testw
cli
jecxz
jne
std
imul
adc
jecxz
repz
mov
jb
test
mov
out
push
push
cld
data16
mov
add
sbb
jl
mov
and
ret
mov
lea
xor
mov
jo
push
repnz
sub
out
shlb
xor
xor
mov
xchg
sub
es
and
pop
and
jo
aas
cmp
sub
mov
mov
lods
pop
add
lods
leave
stos
fs
mov
or
pushf
cmp
divl
jns
arpl
jecxz
fwait
mov
aam
test
and
cltd
std
loopne
fmull
aaa
test
xchg
mov
stc
mov
or
inc
lahf
hlt
mov
cmp
fsub
movlps
inc
andb
aaa
xchg
pushf
dec
sbb
pop
fistl
lret
add
push
jbe
or
and
jns
cmpsb
test
xor
popf
adc
add
rclb
sub
imul
xchg
inc
sbb
aad
ret
pop
pop
sbb
jne
pop
adc
aad
adc
mov
jns
sub
mov
push
pop
out
out
mov
stc
jno
pop
sub
fisubrs
xchg
ret
mov
xchg
xor
mov
push
mov
or
jl
aas
cwtl
pop
lahf
sub
stos
dec
add
lea
into
int
cmp
orb
hlt
and
shl
enter
inc
pop
dec
push
pop
inc
mov
int
aam
imul
sbb
sti
test
insb
dec
and
or
pop
mov
mov
sub
mov
pop
mov
push
ljmp
mov
and
jns
cmp
call
add
pop
or
insl
clc
and
mov
or
mov
add
add
sti
inc
mov
imul
lcall
add
push
add
movsb
sbb
loope
in
sub
cmc
or
mov
mov
pusha
push
arpl
in
inc
sub
loope
or
xchg
insb
push
pushf
lods
jp
inc
gs
imul
ljmp
loop
push
aad
cmp
cmp
xchg
cs
stos
sbb
add
xchg
xor
jnp
sbb
mov
inc
inc
sarb
mov
ss
xorb
jne
mov
dec
xchg
xchg
aaa
call
jo
out
adc
dec
divb
mov
mulb
jge
cs
cmp
call
shll
sub
push
push
fnsave
rorl
sbb
rcrl
inc
clc
mov
bound
dec
push
mov
rorl
lods
cmp
sub
push
leave
test
mov
sub
xlat
mov
dec
fldt
pusha
pop
cmp
and
movsb
or
pop
mov
cmp
sub
mov
mov
inc
dec
icebp
jp
mov
push
ljmp
mov
mov
fs
jmp
push
sar
sub
dec
mov
jl
sbb
cmp
ror
mov
frstor
mov
icebp
xor
je
jnp
notb
jnp
push
aas
pop
inc
in
in
aam
push
cmp
xor
aaa
lret
push
cmp
pop
sahf
pusha
mov
xchg
push
adc
les
adc
insl
pop
push
mov
nop
es
in
push
pusha
test
fistl
fistl
inc
sub
stc
fldenv
mov
cmpsl
inc
data16
push
jecxz
popf
pop
adc
and
popf
lahf
dec
or
dec
pushf
pop
sbb
adc
mov
xchg
pushf
cmp
push
inc
icebp
sbbb
lahf
jo
popf
adc
push
leave
jle
test
icebp
jns
dec
sbb
lea
popf
lds
inc
xor
pop
fs
out
mov
sub
mov
add
sub
sbb
mov
sub
leave
mov
negb
xorb
pusha
mov
pushf
aam
imul
imulb
sbb
divb
cmpsl
repnz
aaa
mov
cmp
in
fistpl
push
cmp
inc
sbb
push
mov
xor
or
xor
gs
lret
adc
div
xchg
xor
imul
push
dec
dec
xlat
ficomps
gs
sti
mov
fadd
mov
xchg
les
cmp
pop
loop
fbld
jno
arpl
mov
rcll
int3
sub
pop
popf
mov
dec
fwait
add
sbb
jnp
ljmp
leave
shlb
push
pop
pop
jbe
xor
mov
testl
icebp
inc
add
adc
mov
pop
dec
adcl
pusha
fs
pushf
jne
stos
mov
mulb
xchg
lock
jb
mov
mov
out
bound
xchg
adc
mov
cmp
add
aam
and
jae
sbb
cmc
stc
jmp
dec
int
out
in
in
ret
daa
add
mov
lret
pop
test
das
xchg
cmp
jle
sbbl
js
mov
xchg
mov
les
dec
mov
mov
aam
dec
fcmovu
in
xchg
and
xor
pop
iret
sbb
aam
loop
inc
cmp
icebp
test
lcall
mov
insb
stc
cmp
push
dec
adc
je
call
scas
nop
outsb
inc
iret
call
mov
inc
lock
xchg
or
stos
stc
sbb
dec
in
push
and
addb
outsl
pop
loop
sbb
jle
push
mov
insb
mov
sub
push
and
rorl
imul
xor
inc
xlat
add
push
popa
dec
lds
popa
out
mov
sub
into
out
hlt
hlt
lahf
arpl
fdivs
push
popf
scas
lock
and
adc
pop
jg
or
dec
mov
and
sub
dec
std
mov
in
dec
add
cmp
xchg
int
jmp
inc
into
jbe
and
pop
fneni(8087
mov
jl
cwtl
push
sarl
outsb
and
push
xlat
shll
jecxz
lret
jb
js
mov
add
hlt
sub
fld
mov
cmp
out
xchg
rolb
testl
pushf
sti
test
pop
add
aad
out
mov
mov
cwtl
in
push
out
add
hlt
or
movsl
insl
jge
jle
pop
sarl
xchg
je
sub
push
push
xchg
or
pop
dec
stos
pop
pop
test
jbe
popa
or
pop
stos
bound
pop
or
andb
and
aas
hlt
mov
mov
mov
push
mov
or
sarb
daa
rcl
mov
mov
outsb
daa
pop
loope
add
dec
rclb
lods
in
push
jnp
sbb
iret
lods
pop
addps
adc
mov
dec
cltd
inc
inc
jmp
das
stos
stc
adc
xchg
dec
cmp
int3
jmp
orl
iret
jecxz
leave
enter
into
dec
dec
mov
push
or
outsl
jmp
ds
out
icebp
jle
mov
in
ja
sarl
xchg
pop
es
lret
mov
sbb
adc
adc
cltd
out
add
js
xor
addr16
or
jge
xor
lods
les
in
or
sub
mov
pop
cli
mov
adc
pop
loope
mov
cmc
clc
sahf
mov
jae
in
pop
insb
loop
popa
mov
mov
rcrb
es
cmp
pushf
sub
xchg
or
pop
hlt
lods
jle
sub
stc
mov
jb
gs
test
xchg
sbb
icebp
inc
push
and
je
call
out
mov
sbb
add
push
mov
pop
popa
rclb
pop
and
inc
pop
shr
jecxz
sahf
cmp
ss
sbbb
ljmp
loop
adc
ficompl
das
jg
lock
push
dec
jg
push
push
push
scas
lock
mov
in
jae
push
nop
adc
pop
orb
imull
fimull
add
addr16
std
test
add
sti
hlt
mov
int3
push
sar
repnz
sub
mov
and
mov
mov
cwtl
dec
stos
mov
lea
inc
mov
int3
faddp
insb
pop
sbb
cmp
xchg
cli
movsb
jns
jae
mov
rorl
mov
and
outsb
add
mov
dec
xorb
lock
popa
or
addr16
repnz
in
stos
push
xor
jne
sub
push
jbe
pop
movsb
sti
jl
cmc
nop
leave
das
mov
pushf
lods
sbb
adc
xor
mov
jg
scas
dec
push
leave
in
ret
mov
adc
out
mov
mov
mov
xchg
xchg
insb
add
inc
sbb
mov
cmp
push
or
xchg
add
push
daa
sub
fistpl
and
xor
xchg
sbb
fs
mov
push
les
mov
cmp
inc
cmp
outsb
imull
loop
aaa
shlb
sub
sbb
mov
mov
mov
cli
or
adc
mov
imul
xchg
xor
sub
push
jmp
lock
mov
sbb
pop
adc
sahf
insl
aas
fwait
insl
jne
pop
and
scas
cwtl
das
dec
bnd
iret
mov
xchg
in
notl
aad
or
cld
xchg
jl
lds
xorb
xchg
or
ja
sbb
mov
int
popf
push
cltd
inc
call
or
xchg
orl
cmp
lahf
jmp
xchg
cmpsb
or
repz
jbe
ret
add
mov
aad
jnp
shlb
shrl
dec
and
pop
cmp
cmp
aam
outsl
imul
pop
pop
es
loopne
mov
cld
adc
jo
inc
pusha
fwait
jge
jbe
pop
imul
dec
scas
push
xor
xor
outsl
das
add
loop
icebp
add
mov
cmc
stos
adc
scas
dec
enter
lret
into
mov
sbb
jbe
mov
incl
dec
pop
mov
mov
jecxz
pop
or
pop
ffreep
movsl
xor
cmpsl
adc
mov
cmp
and
jno
cld
lock
jo
outsb
push
mov
mov
sub
fchs
dec
adc
fbld
lods
add
and
and
and
mov
out
cmp
push
popa
imul
add
aaa
jne
mov
es
adc
dec
jle
ret
xchg
mov
cli
ret
xchg
nop
out
mov
sbb
fsubrs
or
pop
adc
sub
jge
push
lods
inc
daa
add
decl
lock
outsb
popa
loop
push
mov
xor
aam
sbb
dec
xor
push
cmp
and
iret
stos
mov
outsb
test
adc
adc
cmpsb
icebp
sbb
push
stos
cld
shll
mov
or
cld
mov
jnp
lods
leave
mov
insb
sub
lcall
mov
and
push
ja
jne
add
adc
es
cmpsb
imul
xchg
xor
cli
sahf
adc
fnsave
pop
fnstenv
mov
jb
jne
icebp
cmp
jbe
cmp
aaa
fisttpl
mull
fcmovbe
mov
and
inc
aaa
push
cwtl
out
push
mov
inc
sahf
ret
in
lds
stc
mov
adc
fdivl
cmp
lock
pop
scas
scas
sub
push
fs
test
cli
mov
mov
fstps
testb
inc
push
out
push
mov
cmp
mov
inc
xor
cmp
pop
test
bound
or
xchg
es
push
inc
sub
cmpsb
es
mov
cmp
add
stc
outsb
dec
push
jno
jg
cmp
adc
dec
xchg
cltd
push
jl
inc
lret
imul
inc
fidivl
dec
sarl
insb
nop
xor
lds
lock
mov
jo
aaa
mov
pushf
leave
sti
dec
adc
fcmove
mov
xor
inc
mov
pop
orl
sti
subb
fwait
sbb
pop
pop
jb
cmp
cmp
inc
xlat
stos
or
ljmp
push
int3
std
push
imul
test
stos
jg
inc
repnz
pop
or
inc
in
inc
or
loopne
cmp
jae
pop
jp
rorl
dec
cltd
mov
ret
out
aam
pop
inc
pop
inc
ljmp
hlt
sub
rcl
cvttps2pi
adc
mov
jge
inc
enter
fsub
and
or
cmp
dec
xor
xor
dec
mov
insb
xchg
xor
mov
dec
push
leave
jb
sbb
aad
repnz
dec
xor
sub
cwtl
jb
jne
shlb
push
imul
jl
mov
push
dec
int3
idivl
sub
push
pop
mov
ret
pop
xlat
lcall
cmp
es
jbe
rolb
pop
and
dec
pop
repnz
push
push
fldcw
ret
inc
mov
in
adc
repnz
add
mov
sbb
push
pop
jmp
cmp
sub
outsl
dec
movsl
mov
or
icebp
pop
xchg
jno
icebp
dec
or
popf
ss
pop
in
push
ds
cmpsb
inc
stos
xor
pop
stos
push
jge
mov
adc
push
mov
lret
cltd
in
push
xor
pop
xchg
cmp
xor
xchg
cmp
mov
xchg
mov
cmpsb
and
iret
out
inc
sub
adc
dec
inc
mov
jo
cmpb
sub
dec
sti
stos
fstps
jecxz
inc
scas
xchg
jne
adc
and
jae
pop
arpl
cmp
xchg
fcmovbe
mov
mov
cld
mov
mov
fbld
in
in
inc
test
adc
lret
adc
aad
mov
or
mov
movsl
sbbl
or
je
push
adc
jecxz
pushf
sub
jmp
jne
inc
outsb
pop
or
and
pop
xlat
cmp
stos
and
jge
dec
pushf
inc
sbb
adc
arpl
dec
aam
xor
jnp
push
pop
sti
jbe
movsl
lret
int
dec
pop
js
mov
lahf
scas
pop
mov
jae
xor
lods
and
in
add
mov
and
int3
inc
ret
xlat
hlt
mov
jl
sbb
call
and
outsb
adc
sarb
stos
bound
ljmp
loop
loope
xor
dec
in
lcall
sub
xchg
nop
xchg
fnstenv
mov
sub
or
cmp
sbb
cmp
mov
mov
push
cs
xor
shlb
dec
jp
xor
add
xchg
pop
mov
sbb
push
sbb
xor
mov
push
sbb
std
sub
mov
inc
push
in
stos
mov
push
jno
push
ret
je
mov
xchg
jge
in
icebp
jns
aas
ret
push
das
movb
in
sub
insb
inc
mov
sub
push
lea
xchg
mov
jle
cld
mov
repz
and
sub
push
out
sbb
lcall
cmp
bound
fmul
punpckhwd
cmp
add
mov
scas
mov
pop
dec
sub
jmp
fidivs
adc
mov
push
aad
fcoms
popf
daa
sbb
dec
pop
imul
mov
add
shrd
xor
xchg
aas
lret
and
add
or
flds
add
pop
test
insb
test
add
pop
repz
and
xor
xchg
dec
xor
jne
dec
das
lods
push
repnz
sbb
jb
addl
pop
cli
and
mov
test
cmc
fnstsw
jo
divb
pop
outsb
pusha
add
shll
sub
pushf
js
or
cmpl
pop
xchg
mov
jle
push
adc
pusha
sbb
mov
add
mov
insl
cmc
pop
mov
mov
push
mov
lret
sbb
dec
arpl
inc
pop
push
roll
inc
movsl
xchg
add
and
das
lret
push
xchg
or
adc
push
and
in
scas
xor
jne
inc
sahf
pop
xor
pop
inc
repnz
push
jle
add
jmp
sbb
dec
jno
js
aad
xchg
rolb
xchg
xor
icebp
lds
xor
mov
pop
mov
adc
mov
shlb
adc
sbb
call
sub
mov
xor
push
mov
insl
jns
repnz
dec
adc
loopne
lahf
inc
loope
aad
ret
mov
filds
out
sti
xor
lds
sbb
gs
adc
push
icebp
aas
call
inc
fmuls
adc
or
add
insl
mov
mov
stos
mov
pop
mov
hlt
int3
fdivl
mov
daa
jle
and
shll
push
ds
nop
cmp
and
cltd
sbb
imul
cmp
mov
in
and
mov
add
and
and
add
jmp
arpl
fcomi
adc
cltd
inc
hlt
mov
pop
push
aas
and
negl
cmp
dec
out
jno
addb
insl
jbe
and
pop
stos
lock
mov
sahf
cld
outsl
mov
in
hlt
lods
pusha
sub
test
cmc
js
dec
inc
shl
ss
pop
sub
dec
and
ja
stos
imull
fst
insl
lods
imul
loope
add
popa
fldt
daa
ljmp
push
gs
or
scas
cmpsb
push
jp
adc
dec
pop
add
daa
into
adc
sbb
and
pop
loope
into
in
sub
cmpsb
xlat
out
dec
insl
mov
adc
loop
imul
ficomps
and
cmp
mov
daa
std
iret
nop
popa
inc
testl
push
mov
sbb
xor
push
outsb
xchg
mov
mov
jno
fsubl
sub
scas
jp
cmp
sub
adc
or
testl
enter
push
aaa
stos
cmp
sub
repnz
mov
shrb
aam
in
jle
aaa
ljmp
std
xchg
add
mov
cmp
push
jmp
inc
mov
les
jbe
xor
aam
jg
inc
sti
pop
inc
adcb
push
stos
sbb
dec
push
aam
pusha
mov
dec
jecxz
push
popl
jo
push
mov
xchg
mov
mov
pushf
cltd
out
addr16
inc
shlb
out
std
mov
xchg
dec
xor
jno
jno
scas
push
push
sub
leave
sbb
das
xor
xor
inc
push
push
test
inc
lcall
xor
sbb
mov
dec
cmp
ss
jl
lahf
sub
dec
xor
ss
mov
test
icebp
cmp
mov
push
and
or
cmp
mov
xchg
fcmovnb
loopne
dec
dec
test
jl
xchg
testb
lea
mov
xchg
je
xor
insb
mov
mov
loopne
add
in
jmp
jno
or
cld
or
enter
jne
imul
cmp
mov
ja
inc
mov
pop
mov
xor
and
or
fs
fisubrl
or
daa
xor
aaa
cmpb
sbb
scas
cmp
mov
cs
xbegin
jmp
je
jno
out
fadds
imul
adc
cmp
test
pop
lods
inc
in
arpl
ljmp
pusha
xor
pop
out
mov
mov
jo
scas
iret
dec
das
dec
dec
add
jl
scas
mov
sarb
push
ficoml
mov
jns
mov
int
std
lea
mov
outsl
mov
in
xor
push
shl
mov
and
jmp
ss
mov
pop
or
inc
mov
out
cmc
mov
push
mov
sarl
sbb
imul
clc
sub
sub
or
lcall
xchg
jecxz
sbb
inc
test
inc
int3
stc
imul
test
iret
mov
int3
int3
lret
arpl
out
or
push
lods
push
and
in
ljmp
ja
xchg
jl
out
mov
pop
aad
mov
xor
or
mov
popf
or
clc
pushf
mov
jo
ret
data16
nop
push
iret
and
jno
pop
loope
or
adc
in
push
lea
adc
mov
cmc
lret
add
mov
adc
add
pop
ss
insb
jb
cld
icebp
inc
popf
sub
sub
cmp
jb
cltd
mov
add
lods
pop
jge
pop
or
or
mull
cli
fs
subb
adc
popf
jne
mov
dec
adc
mov
mov
lcall
adcb
jne
push
aam
pop
in
js
jae
hlt
ficoms
dec
and
mov
and
ret
dec
imul
fisttpl
sahf
inc
sbb
and
jle
lods
jnp
into
adc
das
iret
mov
das
shrl
sub
int
movzwl
adc
dec
rol
lods
pop
xchg
fcoms
das
out
push
jecxz
js
test
loopne
lods
aam
je
sarl
push
or
cmp
push
imul
or
fsubl
test
jns
adc
add
repz
mov
in
mov
mov
ret
xchg
lock
insb
sbb
cltd
loop
bound
sub
mov
or
xor
clc
mov
xor
das
fldcw
xor
jecxz
loopne
fdivl
xor
jmp
jne
mov
mov
add
loop
test
xlat
lods
xchg
jle
dec
xchg
addr16
mov
cmp
hlt
jne
add
push
push
ret
outsl
or
loopne
pop
fsubs
jg
mov
ljmp
pop
das
shlb
out
add
xchg
sub
ret
dec
and
dec
adc
insb
sub
fidivl
inc
add
ret
scas
cwtl
mov
jnp
jecxz
imul
daa
sarl
loopne
adc
leave
and
test
mov
xchg
cmp
cmp
fidivs
mov
push
cmc
adc
call
pop
call
cmpsb
cld
arpl
push
mov
mov
nop
xchg
jo
call
push
sti
bnd
push
stos
mov
shll
mov
hlt
lcall
jno
testl
jl
lahf
jg
push
mov
mov
xchg
outsl
outsl
iret
pop
jae
mov
dec
push
or
mov
sbb
xchg
aad
leave
mov
lock
outsb
and
and
je
xchg
dec
out
mov
cld
stos
adc
or
cld
frndint
filds
ljmp
outsl
bnd
out
clc
push
sti
in
into
or
mov
icebp
xor
in
das
xchg
daa
jbe
xchg
imul
inc
pop
ja
lock
or
aaa
dec
stos
inc
jp
sbb
outsb
fidivl
cwtl
jecxz
mov
cmp
lret
and
push
fldl
sti
into
adc
ljmp
cmp
pop
fcoml
jmp
mov
dec
inc
lock
mov
xor
into
push
inc
dec
hlt
lods
fdivrl
push
lea
mov
dec
add
andb
sbb
mov
int3
test
xor
stc
lock
pop
cli
xchg
fcomi
push
xchg
adc
sbb
insb
mov
int
mov
sbb
test
mov
mov
sbb
cmp
xchg
ffree
es
add
and
mov
iret
sub
xor
xchg
stos
push
scas
fcoms
pop
push
sbb
xchg
fbld
sub
mov
dec
ja
fsub
xchg
out
pop
mov
cmc
ficoms
push
adc
mov
mov
aas
clc
mov
dec
fs
cmpsb
in
push
jb
mov
scas
clc
pusha
xchg
fildl
xchg
xchg
and
jmp
cmc
addl
imul
mov
push
mov
shr
dec
adc
out
stc
pusha
stos
inc
adc
add
sbb
push
and
es
lret
cmovs
mov
fcmovnbe
fwait
shlb
inc
pop
cmp
in
es
dec
fdivs
ret
fwait
in
xchg
mov
lds
pop
rcll
insb
add
mov
out
push
sub
in
rorb
aam
push
divb
sahf
dec
mov
push
aam
or
and
xchg
sbb
cmc
es
sti
popa
push
imul
fsubrl
fbstp
add
lods
sbb
inc
or
pusha
mov
pop
fs
push
repnz
pop
inc
push
or
xchg
or
jb
imull
sub
data16
not
fmull
lea
test
or
int
xor
in
xor
push
lea
sub
dec
cmpxchg
mov
gs
inc
mov
clc
lods
mov
xchg
or
xchg
ja
jg
dec
and
icebp
sub
xor
addr16
ja
push
mov
addr16
add
xor
cmp
xchg
push
dec
stos
cs
adc
or
decl
push
in
movsb
mov
or
mov
or
mov
xlat
or
test
lret
pusha
cltd
push
inc
inc
sub
lcall
sub
or
clc
dec
adc
pop
jge
mov
je
in
shrb
jo
movsb
call
insb
push
mov
jb
shlb
xchg
or
dec
jb
out
jle
and
jnp
mov
add
cli
sub
or
pop
mov
jne
movsl
fidivl
xor
stc
pop
mov
imul
xchg
push
mov
mov
jb
stos
lods
mov
addr16
shr
test
xchg
enter
and
and
enter
xchg
jnp
in
xchg
incl
inc
adc
xchg
or
nop
lret
dec
fdivrs
push
std
inc
jbe
xchg
out
lcall
or
sbb
inc
rclb
push
and
or
hlt
cmp
mov
mov
mov
pop
pop
push
sar
insb
ds
aam
sbb
lea
cmp
adc
or
pop
sub
imul
hlt
dec
push
xchg
mov
cmp
xchg
add
int3
fadd
inc
sbb
jo
mov
cmp
int
mov
shr
lret
ss
mov
sub
mov
pusha
and
and
xchg
adc
and
cmp
xchg
pop
call
or
sti
stos
in
jne
inc
negb
or
lock
xor
mov
xchg
test
fidivrs
loopne
mov
xor
jle
icebp
or
sbb
mov
mov
enter
add
dec
repnz
push
or
xchg
xchg
je
fisubrl
mov
das
pop
insl
and
xor
push
sub
jp
mov
stos
sbb
cmc
xor
je
adc
aaa
cli
mov
dec
xchg
aam
test
outsl
add
addl
xor
xchg
ljmp
jno
int
and
stc
popa
jb
test
push
sbb
test
dec
sbb
leave
sub
push
or
js
aas
cwtl
add
push
ja
cmpsb
addr16
fstpl
mov
test
mov
test
push
mov
mov
ljmp
and
pop
jle
subl
test
xlat
and
test
cmp
dec
xor
nop
inc
mov
inc
add
pop
in
and
jae
shrd
movsl
jo
mov
fisubs
mov
repnz
pop
mov
jae
push
fnstenv
cmp
push
push
rol
adcb
adc
insb
rclb
call
aas
dec
inc
hlt
adc
cmc
out
int3
and
fisttpll
adc
repz
test
push
mov
loope
shll
loop
push
lahf
mov
sub
in
pop
les
xchg
cmp
inc
mov
lcall
lret
jmp
fstps
mov
sarb
nop
mov
push
adc
stc
adc
jle
pop
xchg
mov
xchg
rcrl
sub
push
test
mov
ret
dec
xchg
or
lea
out
fildl
loop
mov
cmp
orb
xchg
cmp
xor
cmc
pop
in
push
and
pop
pop
stos
in
icebp
outsl
push
imul
or
xchg
fldt
test
mov
xor
and
mov
xlat
mov
mov
movsb
pop
and
push
cs
lret
fisubrs
shlb
mov
or
sub
mov
imul
mov
iret
dec
shr
inc
in
xchg
dec
push
out
ds
sbb
push
dec
cmp
jb
push
lods
dec
mov
mov
mov
fcomps
xor
dec
mov
pusha
inc
jg
mov
adc
mov
loop
test
jp
pop
scas
in
mov
rcrb
adc
rolb
xchg
jecxz
andb
in
jge
and
dec
loop
outsl
rcl
int
dec
clc
mov
scas
xchg
nop
fcomp
js
sub
push
std
hlt
sarb
mov
sar
std
lock
jo
je
adc
test
inc
cli
and
test
push
call
sub
je
aas
xchg
dec
cs
sbb
sbb
je
fmuls
data16
pop
pop
pop
mov
mov
mov
push
xchg
cmp
popa
xchg
aad
rcrb
shll
pop
mov
ror
mov
lods
pop
arpl
hlt
stos
incb
cmpsb
aad
push
rcrl
mov
mov
fnstcw
hlt
dec
jo
add
mov
push
sub
push
jns
push
popf
push
enter
cltd
sti
sbb
scas
xor
jmp
push
dec
inc
repnz
jbe
stos
lcall
mov
sbb
push
popf
ljmp
dec
sbb
stos
cmc
jl
out
mov
pop
push
cmpl
or
movsb
add
push
adc
sub
sahf
pop
inc
rclb
add
decl
incl
and
push
arpl
inc
adc
sub
clc
adc
xor
and
jle
adc
mov
mov
cmpsb
outsl
outsb
fdivp
sbb
test
in
insl
minps
in
outsl
inc
cld
into
movsl
cmpsb
les
jp
dec
out
push
rcrb
test
jae
push
stc
adc
enter
and
jae
push
dec
aad
lret
lahf
outsl
add
dec
xor
cmpsb
xor
in
jle
mov
addr16
mov
mov
jle
imul
sbb
clc
in
adc
popa
cmc
sbb
add
push
mov
lea
adc
out
mov
ja
out
jae
insl
push
jb
ja
xor
movsb
fsts
stos
cmpsb
cmpsb
pop
push
leave
addr16
pop
faddp
aad
cmp
pop
ss
cmp
mov
inc
cmpb
shll
jecxz
and
mov
pop
stos
or
in
lret
mov
jle
mov
aam
push
mul
push
mov
add
mov
cmp
int
scas
pop
arpl
in
test
or
adcb
aam
sub
fwait
mov
lahf
lods
jbe
mov
adcb
nop
ja
das
pop
out
call
inc
mov
pop
jecxz
sub
and
mov
inc
jmp
xlat
jno
add
add
imul
mov
and
js
mov
xchg
notb
push
cmp
aam
adc
icebp
mov
push
inc
shrl
adc
push
out
sbb
sub
xchg
arpl
nop
jae
fcmovnbe
and
sub
lods
xor
push
ja
fstpt
test
pop
and
lods
xchg
insb
je
addr16
pop
movsb
cmp
lea
pop
mov
cmc
add
mov
jbe
push
inc
lea
lret
vmread
sbb
sbb
wrmsr
sahf
mov
ret
in
pop
push
rcrl
lcall
or
lea
ss
enter
sub
test
push
scas
mov
pextrw
ja
dec
roll
in
mov
fstpt
xchg
std
mov
xchg
push
in
xor
enter
or
into
fst
xchg
xchg
jmp
int
pop
nop
std
pushf
loope
or
xor
insl
mov
sub
in
or
jnp
xor
adc
xchg
loope
data16
dec
xchg
adc
shr
div
iret
jmp
fs
pusha
bndldx
jb
inc
mov
push
pop
mov
leave
cmpsl
push
int
pop
cmp
out
aaa
ret
cmp
add
jp
push
aam
loope
sub
xor
cs
idivl
xor
sahf
cmp
test
xchg
fcmovb
ljmp
cmp
cmp
lds
sub
cld
xor
mov
or
mov
js
pushf
inc
jge
and
pop
push
es
repz
mov
in
clc
pop
addr16
xchg
jl
xchg
daa
dec
test
popa
fidivrs
repz
adc
pop
jge
and
lea
roll
subb
insl
outsl
testl
push
das
movb
mov
in
mov
mov
ficoms
add
sahf
add
push
movsl
push
cli
add
push
xchg
adc
mov
jmp
cld
xchg
push
mov
outsl
mov
sbb
int3
sbb
stos
jmp
stos
into
mov
pop
mov
lret
xlat
mov
pop
aam
cmpsb
mov
out
test
mov
lcall
and
pop
shll
or
mov
and
loope
loopne
imul
loop
lret
dec
and
sbb
lods
dec
movb
pop
addr16
lea
movsb
push
mov
mov
jbe
cmp
mov
jge
stos
lcall
cmp
mov
xchg
push
ljmp
into
mov
rolb
hlt
mov
ret
pop
test
iret
jmp
sub
cmp
aam
adc
sbb
fs
or
hlt
cld
fidivs
clc
iret
sbb
and
jp
movsl
gs
mov
ss
in
or
add
popa
lret
push
mov
mov
cmpl
mov
out
or
jns
push
iret
mov
insb
in
addr16
ds
push
dec
leave
pop
cvtdq2ps
adc
cli
fsubl
ficomps
cmpsl
mov
inc
jns
mov
movsb
addb
xor
imul
inc
sub
mov
leave
fwait
jnp
scas
jae
and
xchg
jl
call
jge
mov
shl
les
inc
aas
xlat
jne
in
fldcw
mov
inc
notb
add
ja
in
scas
inc
int3
cmc
cmc
mov
arpl
out
sbb
push
adc
rcpps
sbb
shlb
loopne
pop
jno
popa
loopne
insl
mov
dec
jnp
mov
fwait
jp
inc
push
fistps
lret
cmpb
xlat
adc
call
les
and
sti
shrl
mov
adc
push
std
shl
rcrb
or
out
pop
jg
pop
lret
adc
shrl
int
lock
and
dec
and
adc
insb
or
adc
adc
jmp
xchg
xor
jp
add
push
mov
or
in
shll
insl
cmc
adcl
push
xor
add
sahf
xchg
mov
fdivl
jne
and
clc
cmpsl
cmc
pop
stc
xchg
iret
inc
leave
jp
add
je,pn
addr16
lcall
cwtl
shl
test
or
jge
jmp
into
xor
daa
and
cmp
cwtl
jno
movsb
xor
xor
add
fldt
popf
je
popa
ret
jb
or
insb
clc
jmp
in
sbb
xchg
lea
xchg
cmp
aas
mov
imul
inc
in
add
xor
xor
lret
sahf
mov
lds
cmp
rorl
or
mov
pop
xchg
xor
ss
and
pop
dec
roll
mov
adc
sub
sbb
stc
filds
dec
nop
mov
jle
mov
imull
in
cmp
or
cmpsl
mov
fwait
hlt
cmp
negb
mov
jns
and
scas
mov
jp
movsl
lock
jmp
data16
mov
push
icebp
add
stos
stos
clc
int
adc
icebp
shr
das
cmpsl
movl
pusha
sub
jle,pn
cmp
xchg
fildl
jmp
daa
popf
push
jecxz
jl
sbb
inc
mov
cli
push
inc
les
xchg
aad
jo
sub
push
jae
in
orl
sarb
push
loope
mov
outsb
int
cld
in
xor
pop
stos
and
cmpsl
push
xor
sub
stos
stos
xchg
jns
mov
sbb
push
in
sub
pop
lds
jg
xchg
pushf
ss
adc
adc
movsl
dec
inc
add
mov
fidivrl
xlat
movl
test
daa
push
cmp
dec
mov
cmpsb
add
popf
adc
sahf
loope
mov
rcrb
ret
add
sbb
in
xchg
inc
ds
sti
rol
inc
jmp
outsb
sarb
jnp
mov
inc
inc
call
and
int
jne
hlt
stos
test
mov
and
mov
sbb
cmpsb
aaa
pop
inc
inc
ret
or
push
adc
cmp
test
movsb
jp
cmpsl
xor
jecxz
xchg
nop
pop
js
mov
jno
je
stos
out
xor
iret
loope
pop
lret
and
add
push
movsb
stos
and
and
es
jo
mov
std
pop
adc
icebp
xor
mov
pop
mov
pop
xchg
rorl
cmp
repz
dec
lea
bound
push
xchg
mov
and
add
inc
clc
addl
mov
lret
cmp
lret
sub
out
mov
aad
sahf
sbb
jbe
push
cwtl
shll
push
mov
cld
jnp
xor
in
mov
pop
push
lahf
push
inc
fnstenv
mov
lods
mov
scas
cmp
xor
pop
mov
xor
flds
ljmp
out
clc
pop
stos
stc
fsubl
pop
fisttpl
cmp
js
pop
neg
xor
rcrb
add
pop
lret
add
mov
cmp
or
mov
in
cmp
popa
insl
dec
lock
movsl
subb
cltd
in
mov
scas
jp
enter
movsb
shl
arpl
int3
loopne
cmp
mov
jmp
inc
mov
fxch
pop
cmp
cmp
je
sub
jp
adc
push
cmp
dec
sub
lock
xchg
and
mov
cmp
jnp
out
push
fs
push
fdivrl
xor
ret
sub
jb
ss
imul
stos
sbb
fdivl
mov
call
jmp
stos
fiadds
into
test
add
fsubrs
out
jnp
in
inc
cli
in
xor
pop
test
dec
xchg
stos
int3
outsl
inc
lds
xchg
inc
jmp
jne
add
mov
sbb
aad
sbb
xor
out
push
loope
icebp
out
cmp
enter
decb
lock
das
test
ss
jmp
imul
inc
pop
push
scas
push
stos
pop
ret
add
js
sub
and
inc
jecxz
out
out
inc
adc
jg
adc
mov
inc
cli
push
adc
popf
mov
mov
jge
push
jle
mov
add
adc
jp
popf
rcr
sbb
lods
or
push
std
cltd
push
cmpsl
jecxz
push
xchg
and
dec
aaa
adc
inc
mov
stos
pop
jmp
mov
inc
stos
icebp
subb
cmp
into
jb
mov
fistps
das
add
pop
icebp
sub
jmp
sub
into
dec
pop
inc
test
test
loope
jmp
inc
mov
cmpsb
outsl
cmc
aaa
data16
aas
xchg
or
push
std
shlb
sahf
orb
addl
and
or
sar
out
and
dec
das
shll
mov
cmp
cmp
or
adc
enter
jmp
mov
jne
cwtl
aaa
divb
ret
hlt
mov
xor
fimull
jnp
movsl
mov
pop
pop
sbb
in
push
mov
nop
cld
and
push
sub
add
xor
cmp
cwtl
adc
aaa
subl
repnz
and
fsubrs
movsb
mov
and
mov
add
rcll
scas
cmc
iret
mov
xchg
push
cmp
mov
inc
sbb
shl
pop
fcompl
lret
and
cltd
sub
lods
cs
outsb
test
cmp
mov
imul
cmp
push
divb
push
jnp
icebp
insb
lahf
pop
int3
cmp
int3
es
jns
mov
xchg
add
inc
or
mov
bound
insb
jmp
xchg
es
fs
in
mov
jp
lret
push
cmp
dec
loope
aam
jae
mov
enter
push
data16
imul
loop
divb
jp
addr16
pop
cmc
jb
jae
mov
dec
scas
xchg
adc
push
pop
mov
adc
xchg
dec
arpl
jmp
popa
pop
stc
lods
xlat
pop
clc
cmc
cmp
scas
add
ljmp
fcompl
adc
ss
imul
repnz
clc
dec
mov
xchg
icebp
out
imul
mov
mov
fcomps
addl
rcrb
push
inc
or
sub
jmp
mov
movsb
xor
adc
push
mov
lea
or
and
inc
sub
dec
jbe
je
clc
xor
cmpsb
dec
mov
icebp
pusha
xor
fucom
cmp
sub
mov
xchg
inc
xchg
adc
decb
mov
test
mov
add
jo
fstl
xchg
fsubs
or
lds
dec
dec
das
inc
jnp
test
lods
outsl
add
orb
out
sti
xor
push
loope
fists
lret
int3
adc
inc
pushf
cmpsl
lea
mov
cmpsb
jns
rorb
sub
sub
mov
in
mov
dec
lea
sbb
jge
xchg
add
mov
subl
jmp
pop
adc
movsl
inc
stos
sub
jne
sbb
imul
aad
dec
add
xchg
dec
shlb
rolb
adc
sbb
cwtl
push
bound
pusha
ljmp
jge
dec
out
rorb
jo
inc
xchg
pusha
imul
mov
jo
pop
mov
inc
or
gs
loope
imul
lret
mov
lds
mov
dec
jl
test
jg
lcall
push
fidivs
mov
int3
scas
sub
inc
test
stos
daa
icebp
xchg
push
rcrl
mov
test
test
flds
xor
daa
dec
pop
sbb
and
jg
in
fildll
xchg
jne
cs
xchg
xchg
enter
jmp
jae
imul
jge
mov
push
les
or
and
dec
inc
addr16
icebp
lcall
xor
and
addr16
test
enter
fdivs
adc
repz
pop
leave
arpl
xor
jge
add
pop
xor
mov
push
mov
fcmovnb
pushf
or
leave
xor
adc
pop
jns
and
cmc
dec
ds
ds
and
icebp
ljmp
xor
icebp
test
pop
in
pushf
mov
pop
aas
xchg
inc
cmp
sbb
imull
pop
arpl
iret
jns
dec
fisubs
sbb
and
mov
ror
xchg
aas
mov
sbb
in
sahf
fnstsw
pop
mov
cltd
or
sub
js
das
cmc
dec
adc
sbb
mov
les
mov
sbb
cmp
push
mov
movsb
aam
push
adc
push
test
mov
sbb
test
lret
ret
xlat
aam
popa
icebp
stos
sti
mov
rolb
ficoms
int
and
or
xchg
mov
ds
adc
in
or
outsl
mov
fistl
inc
mov
dec
movsl
fwait
mov
aas
jmp
gs
push
scas
mov
and
subl
mov
test
mov
pop
sbb
cli
rolb
ret
sub
cmpsb
shrb
lret
xor
into
test
mov
test
cmp
lods
inc
pop
cmpsb
pushf
call
out
popa
jg
push
mov
dec
lods
push
xchg
sub
ret
addr16
cli
sub
shlb
jmp
dec
insl
pop
push
xor
lret
xor
pop
shl
data16
push
das
aam
in
and
sub
ret
repnz
cmp
add
arpl
xchg
pop
dec
jno
push
and
stos
hlt
fidivrl
jo
jo
mov
push
imulb
int
and
pop
sbb
xor
cmc
lret
mov
stos
mov
loopne
add
or
push
test
or
imul
push
cli
push
outsb
fstpl
outsb
sbb
xchg
aas
lds
aaa
fsubl
cmp
inc
adcl
push
idivb
fwait
hlt
add
fcmovnbe
jmp
js
lss
inc
nop
dec
dec
pop
ja
sbb
cli
add
pusha
push
xchg
inc
adc
mov
cmp
sbb
mov
jmp
movsl
cmp
mov
cwtl
pop
sarb
imul
fadd
cmc
test
mov
inc
imulb
and
dec
out
and
add
es
cltd
adc
pop
daa
cltd
mov
pop
dec
xor
xor
outsb
dec
and
mov
aaa
xor
push
pop
scas
lret
outsl
inc
add
andb
fldt
mov
test
and
pop
push
sbb
call
dec
mov
pop
or
nop
std
mov
ljmp
sub
jne
cld
xor
sub
imul
lods
xor
or
insb
dec
push
adc
iret
jns
insb
add
in
sbb
pop
mov
inc
popa
js
push
adc
bound
addb
loopne
sti
repz
lock
push
or
icebp
sbb
jl
test
and
mov
adc
ret
and
fldenv
sub
movsl
jecxz
shlb
push
add
pop
shlb
dec
sbb
sbb
cmpsb
inc
daa
lret
jnp
sub
into
call
xlat
stc
xchg
aaa
jle
sahf
dec
shrl
push
xor
rorl
imul
les
ljmp
lcall
test
mov
dec
pop
sub
dec
sub
adc
lret
fisubl
push
and
cmp
jg
popa
mov
dec
adc
imul
rcr
mov
inc
and
push
into
cltd
ja
and
les
cli
push
pop
adc
sti
stc
repz
lds
ja
iret
jno
cld
xchg
movsl
orl
inc
cmp
add
testb
mov
cmp
jno
mov
push
mov
xor
adc
mov
jb
shlb
fsub
sti
nop
inc
push
into
mov
adc
dec
sub
sbb
add
adc
inc
xor
sahf
xchg
and
inc
mov
dec
dec
and
int
mov
push
jnp
movsb
xchg
mov
xor
ja
mov
ret
mov
dec
push
in
lret
iret
pop
push
inc
sbb
xor
xchg
fsubr
push
and
mov
cmp
push
push
loop
cmp
cmc
mov
or
dec
in
jp,pn
scas
stos
pushf
mov
or
xchg
hlt
jb
repnz
fs
sbbb
mov
leave
xor
test
sbb
filds
pop
ljmp
or
pop
mov
inc
inc
lock
bound
pop
sbb
push
pop
lea
test
push
pop
mov
out
cmc
inc
jl
sbb
data16
into
rolb
and
test
adc
dec
out
sub
cmp
ret
adcb
lcall
xlat
xchg
add
lock
cmc
les
xchg
das
enter
mov
cmp
xchg
or
mov
xor
sub
mov
sbb
lods
ljmp
cltd
pop
pop
push
dec
jbe
xchg
or
xor
adc
in
out
jne
leave
add
mov
arpl
push
aad
in
xchg
jne
lcall
ds
push
xlat
push
imul
sbb
mov
out
jbe
dec
iret
ret
pop
arpl
jecxz
sbb
xchg
loopne
lods
mov
imul
int
jle
ss
push
mov
mov
cmp
stc
adc
cli
scas
stc
lret
fmuls
jae
iret
sahf
lahf
lods
aam
cmp
xlat
inc
das
jnp
push
jno
aam
sub
outsb
es
sub
jno
xchg
inc
xchg
sti
pusha
out
mov
stos
dec
or
inc
push
call
add
or
jmp
push
les
fidivl
sbb
test
inc
insl
jnp
adc
ficoml
scas
mov
xchg
movsb
imul
jmp
or
aas
imul
fldenv
test
push
inc
mov
xor
ds
movsl
mov
movsl
inc
and
sbb
mov
scas
stc
adc
ja
dec
les
cld
lret
jg
popa
mov
jg
fcomps
pop
clc
cmp
dec
int3
cmp
pxor
pushf
inc
push
mov
iret
fistpl
es
cli
decb
hlt
sbb
add
mov
cltd
add
adc
subl
pop
jb
adc
popa
and
or
stos
jl
test
add
fdivl
or
mov
outsb
sahf
cmpb
insb
test
subb
jb
pop
jb
adc
les
aam
outsb
lock
xchg
cmc
std
out
jecxz
int3
nop
call
jns
mov
sbb
or
push
add
mov
out
mov
or
out
sbb
mov
push
jp
inc
cmp
int
imul
stc
push
enter
pusha
stos
mov
pop
iret
push
sbb
ja
mov
dec
sub
mov
cmc
bound
ret
lret
mov
pop
fcomi
mov
push
cwtl
repz
fwait
dec
jmp
jmp
adc
or
shrl
inc
rolb
leave
dec
mov
stc
push
gs
es
rolb
adcl
adc
movsl
in
mov
push
movsb
push
mov
shll
test
pop
je
sub
stc
push
and
cwtl
outsb
jge
into
mov
insb
mov
and
imul
or
jl
mov
inc
and
rolb
int
jmp
cmp
popf
mov
stc
dec
jns
mov
and
rolb
scas
cmc
std
inc
jmp
out
mov
xor
iret
pop
stos
cmp
lods
inc
test
inc
mov
inc
inc
test
cmpsb
mov
ficoms
or
popf
adc
lods
sub
xchg
xor
jp
dec
call
popl
pop
in
jno
data16
add
pop
add
ret
js
int
mov
mov
or
add
mov
pop
dec
push
add
jb
xchg
addr16
jnp
xchg
stc
cmp
xchg
sahf
pusha
inc
dec
xchg
ljmp
xor
and
test
inc
in
adc
mov
enter
cmpsb
mov
sub
push
popa
mov
mov
dec
inc
and
sbb
lret
dec
les
push
mov
std
movl
add
in
shrl
ljmp
mov
mov
cmp
into
xchg
call
adc
sub
notl
mov
jb,pn
jnp
xchg
dec
inc
push
jns
maxps
insb
push
lods
lods
popa
and
or
shrl
and
js
mov
jl
enter
std
sbb
push
jge
mov
mov
fstps
push
in
jno
or
mov
pushf
inc
fs
decl
shl
pop
xor
mov
push
jb
mov
rorb
pop
fcompl
mov
push
dec
rcl
xlat
dec
clc
orb
mov
inc
inc
push
rolb
cltd
cs
aam
adc
insl
mov
insb
hlt
xchg
leave
movsb
sub
stos
sahf
shrl
mov
cmp
add
in
mov
mov
test
adc
js
test
call
ss
or
push
or
into
cmp
inc
xchg
cs
gs
pop
pusha
cmp
xor
sbb
insb
daa
mov
test
xor
jle
and
lods
cwtl
push
push
jns
nop
xchg
lds
push
jo
fs
shr
mov
es
mov
pop
test
adcb
fmul
loope
mov
mov
push
cltd
or
cmc
or
pop
lret
push
ja
incb
jne
orl
mov
lret
hlt
cli
popf
mov
lea
addr16
sub
jnp
sub
idivl
pop
js,pt
jmp
jae
push
icebp
mov
in
popf
out
movsl
push
sbb
repz
cmp
xchg
push
lock
sbb
shll
cmp
test
mov
mov
or
fwait
js
nop
pop
fistl
imul
daa
xchg
addr16
dec
push
ljmp
or
fisubrs
decl
jmp
aaa
iretw
fnstcw
add
inc
add
xor
int
mov
mov
sbb
loopne
aam
ljmp
int3
mov
xor
fisttpl
bound
cmc
or
std
dec
popf
mov
pop
jnp
dec
xchg
das
hlt
ret
es
repnz
push
jmp
add
popf
in
lds
or
push
std
outsb
xor
inc
js
xor
jnp
fstl
mov
mov
rcll
ds
sbb
push
mov
sub
push
sub
jmp
sti
in
adc
jl
cmp
pop
pusha
aad
xchg
sbb
lds
popa
lret
sti
shll
cmc
mov
dec
pop
mov
jmp
jo
pusha
icebp
movsb
addl
es
sbb
sub
xor
frstor
push
fbld
xchg
adc
in
movsb
std
or
js
les
dec
pop
cmp
push
mov
or
adc
imulb
xchg
mov
ljmp
cmpsb
aad
fimuls
jne
mov
adc
mov
js
and
idivb
dec
dec
dec
pop
mov
cltd
hlt
xor
sti
mov
flds
jge
cmp
imul
add
dec
data16
pop
lock
cwtl
xchg
push
mov
inc
fdivs
imul
inc
jae
pop
jb
sbb
pop
sbb
test
fwait
or
push
jno
jb
cmpsb
add
loope
std
pusha
mov
mov
sub
jle
pop
xchg
pushf
cmp
mov
push
addl
bound
dec
out
fwait
sti
push
aas
or
loope
pop
or
dec
imul
lea
lods
dec
pop
push
mov
in
inc
fidivs
jne
insb
mov
test
arpl
jl
clc
or
bswap
enter
aad
add
roll
ss
mov
pusha
mov
sub
test
inc
std
add
fistpl
push
fstps
aaa
rorl
xor
popf
inc
jo,pn
push
cmp
ds
arpl
cld
pop
mov
jne
push
sub
ret
xchg
daa
ds
jl
negb
sarb
push
mov
leave
scas
scas
and
push
shrl
insb
cwtl
mov
sub
dec
mov
sub
cs
inc
sbb
and
sub
mov
aam
rclb
lret
or
lods
dec
hlt
jp
notl
inc
cmp
cmp
or
adc
int3
daa
add
push
pop
mov
pop
mov
sub
arpl
test
in
test
adc
popf
push
ds
testb
out
push
or
add
mov
je
ficoms
push
test
cmp
hlt
sahf
jnp
mov
ss
inc
popa
out
aas
idivb
add
xchg
or
xchg
mov
mov
mov
inc
inc
out
cs
fcompl
xchg
xor
test
out
popf
pop
or
pop
pop
adc
mov
jg
push
xchg
xor
push
or
xchg
std
and
cmp
pop
mov
push
and
and
add
xchg
pop
in
jecxz
inc
push
fcoms
lret
orb
mov
xlat
jb
fs
and
mov
lods
mov
mov
lret
fcmovnbe
xchg
sbb
test
fcoms
adcl
pop
jnp
out
sbb
cs
lahf
jp
test
dec
jg
push
scas
mov
push
mov
lahf
and
push
adc
out
push
pop
push
cmpsb
sahf
xor
or
add
pop
pop
pop
daa
leave
rcrl
sbbb
negb
add
jg
das
xchg
imul
xchg
sub
and
insb
pusha
mov
cmp
outsl
sbb
jp
cmp
adc
add
lea
ja
cmp
mov
sub
es
cmp
jns
cmp
test
negb
xchg
movsb
fidivs
sbb
cli
push
pop
mov
pop
nop
pop
repz
add
dec
rolb
mov
xchg
dec
jp
mov
pop
pushf
aam
mov
cmp
push
lock
inc
sub
call
inc
icebp
int
lahf
fcompl
xor
pop
dec
fcoms
dec
pop
loope
and
mov
fbstp
lcall
out
rcll
iret
jle
or
pop
movsb
push
div
adc
lods
or
mov
addb
and
cmp
adc
inc
rolb
push
popa
jo
in
pop
inc
enter
jne
push
pop
mov
hlt
xor
mov
jmp
dec
adc
je
pop
push
mov
repnz
xor
andb
inc
sar
shll
dec
mov
adc
in
leave
mov
dec
cmp
cmp
movsb
loopne
je
mov
ror
xchg
ds
sti
ss
inc
into
inc
xchg
call
add
mov
pop
mov
mov
sbb
scas
lds
xchg
cmp
or
xor
jl
lods
jmp
adc
or
shll
cwtl
lds
stos
pop
add
dec
mov
cmpsb
push
sub
out
jle
imul
ror
rcll
in
cltd
jne
arpl
dec
outsl
shl
loopne
ljmp
cmp
pop
jae
lea
test
rolb
push
xchg
adc
aaa
jb
pop
adc
fistl
adc
adc
iret
adc
jg
outsb
rcl
aad
mov
clc
adc
push
xor
xchg
mov
xlat
adc
loop
xchg
push
sub
push
push
mov
jle
shlb
mull
fs
ja
cmpsl
dec
lret
pop
push
repz
xchg
loope
push
ficoml
repnz
fidivl
sbb
dec
or
les
outsb
andl
mov
pop
aam
inc
pushf
jmp
nop
and
mov
arpl
jge
add
mov
jo
jl
iret
dec
test
xchg
mov
mov
rclb
mov
pop
add
inc
mov
add
jle
popf
cs
inc
push
adc
loop
sarb
jbe
and
mov
pop
cmpsl
stos
mov
test
cli
xlat
cmc
mov
adc
shl
lods
cmp
add
vphadduwd
rolb
lds
push
sbb
je
js
xchg
push
pop
out
outsb
adc
mov
arpl
notl
fstl
fdivr
mov
fwait
dec
pop
sahf
xchg
outsl
mov
mov
add
push
jl
stc
inc
mov
scas
out
and
mov
imul
nop
jno
into
arpl
js
or
cmp
cmp
pop
dec
dec
xchg
and
ss
xchg
sbb
mov
in
mov
fldenv
mov
and
clc
xlat
and
add
test
pop
sahf
jno
faddl
dec
addr16
mov
adc
test
xor
insl
xor
aam
cmp
and
ss
push
jmp
fwait
mov
push
movsb
and
push
lahf
cmp
dec
xor
lret
int
iret
aas
lea
mov
stc
jmp
les
out
lods
xchg
or
fucomip
mov
aam
xchg
mov
hlt
and
nop
in
inc
addr16
sbb
mov
mov
add
sahf
mov
mov
jge
pop
pop
cmp
mov
fisttpl
roll
ss
js
push
rclb
jle
cmp
pop
sub
lret
add
imull
in
fsubrp
fisttpl
jecxz
stos
in
and
icebp
sub
mov
xor
pop
pop
xchg
xchg
test
movsl
and
push
insl
jle
or
cwtl
mov
jno
push
and
xchg
and
les
into
jb
ret
scas
xorb
je
or
sti
sub
add
push
addr16
xorl
pusha
fwait
pop
out
lods
into
iret
xor
sbb
mov
sub
dec
idiv
cwtl
jb
push
dec
aad
pop
mov
mov
mov
into
jno
push
mov
ficoml
pushf
orb
or
push
mov
pop
inc
adc
std
mov
inc
jb
sbb
sub
mov
lcall
and
stos
adc
xor
sbb
mov
aaa
out
adc
int
mov
push
push
inc
les
data16
and
sub
xchg
cmp
pusha
pop
mov
fldt
scas
fcomip
jae
sbb
pusha
sbb
call
pop
sub
mov
adc
pop
test
xor
dec
loopne
mov
push
mov
in
mov
lahf
or
add
ja
xor
fists
gs
shl
add
and
inc
shlb
jo
in
jno
lahf
hlt
jns
popf
pusha
out
cmp
pop
xor
dec
mov
add
lcall
jle
push
cmc
sbb
lcall
fidivrs
mov
sbb
adc
xchg
daa
cltd
inc
enter
pop
dec
pop
in
arpl
add
cmp
jbe
insb
lcall
pop
sbb
push
dec
data16
cmp
gs
faddl
rcll
insl
pop
mov
fwait
pop
dec
ja
inc
xlat
sti
sarb
xchg
dec
jne
fwait
pushf
addr16
push
insb
or
jbe
fucomi
adc
dec
mov
fdiv
xchg
jnp
pusha
xchg
data16
lods
or
pop
lods
dec
sub
mov
and
and
inc
sbb
and
sahf
push
je
push
std
inc
lea
stos
shrb
idivb
cli
jmp
jge
negb
and
mov
lea
dec
aad
clc
sbb
jb
sahf
adc
mov
cmp
push
or
jecxz
push
mov
push
or
clc
mov
cli
in
addr16
sub
mov
int3
xchg
lods
sahf
inc
mov
sahf
cmp
cmpsb
insl
add
jmp
mov
shlb
popf
sahf
dec
mov
mov
push
or
xor
int3
cmp
xor
xlat
shlb
loopne
push
out
scas
add
sub
cmpsl
pop
xor
sbb
iret
adc
dec
mov
je
lds
sbb
imul
in
pusha
lds
dec
fldt
jae
and
mov
leave
lcall
std
sub
push
jge
push
inc
and
jne
sub
jmp
inc
adc
push
out
in
lcall
dec
enter
imul
add
add
mov
inc
sbb
ret
push
mov
add
dec
and
js
aam
stc
xlat
dec
adc
xchg
pusha
sub
enter
pusha
mov
stos
dec
mov
inc
push
imul
out
and
pop
adc
xor
and
sbb
inc
mov
pushf
shlb
push
in
lcall
popf
jmp
stos
in
imul
xor
stos
mov
mov
pushl
rclb
mov
cmpsl
add
aaa
mov
hlt
fstps
jb
pop
fs
xor
sub
lods
pop
xchg
dec
cmp
loope
into
stc
jge
outsl
movb
sbb
add
pushf
adc
inc
pop
lds
shrl
popf
movsl
fmull
bound
jl
ret
sub
lods
xlat
mov
mov
cld
iret
cmp
mov
out
mov
add
lahf
pop
add
mov
sbb
leave
ss
out
pop
aaa
lea
icebp
adc
int
shl
mov
lcall
leave
ret
movsl
gs
scas
jl
movl
jne
xchg
addr16
xor
and
push
mov
cmp
daa
aas
fsubrl
cltd
fstps
push
enter
mov
mov
mov
imulb
lods
shlb
js
mov
lahf
ljmp
aaa
jno
sub
in
add
scas
xor
xchg
xchg
xchg
jp
mov
mov
mov
push
dec
vpaddsw
inc
iret
mov
inc
repnz
sbb
rolb
shl
jge
ljmp
or
popa
xor
ror
lock
sti
or
dec
nop
push
xor
ret
stc
imul
push
add
fsubrl
jbe
inc
adc
sub
cmc
xor
adcl
or
sub
lret
jnp
aam
cltd
lret
cmpsl
xchg
push
test
or
fisubrl
cmpb
xchg
mov
or
in
setb
outsb
add
adc
in
mov
mov
xchg
les
and
push
add
adc
out
out
adc
rclb
fnsave
mov
mov
mov
hlt
lcall
aas
insl
inc
pop
and
enter
mov
push
imulb
js
inc
inc
cli
push
xorb
ljmp
sbb
andl
jae
jnp
and
jp
mov
and
and
xchg
lahf
push
call
and
jne
ret
fidivs
imul
in
xchg
xor
test
movsb
sahf
mov
mov
nop
lret
leave
sub
ret
and
jne
xlat
inc
inc
sbbl
or
mov
push
mov
loopne
rcll
jns
pushf
dec
dec
mov
cmp
mov
popf
and
mov
out
jl
pop
and
jl
in
out
icebp
mov
mull
sbb
jae
dec
and
movsb
jbe
cmp
add
lret
icebp
imul
mov
lods
mov
add
insb
nop
jge
mov
mov
xor
repz
repnz
insb
inc
push
mov
cmpb
aad
fisubs
xchg
repz
lock
test
xchg
mov
les
jbe
aaa
pop
imull
fisubrs
jne
adc
or
push
shrl
popf
mov
in
cs
jg
shrb
xchg
xchg
push
inc
jne
sahf
xor
xchg
iret
imul
sbb
adc
push
pop
add
sbb
ficoms
xor
mov
sbb
sti
outsl
push
loopne
jbe
xor
addr16
dec
shlb
mov
aad
sub
pop
pop
mov
arpl
sub
mulb
dec
dec
mov
pop
fs
xchg
dec
xchg
dec
outsb
fmuls
jns
cmp
sbb
mov
pop
push
sti
shlb
mov
movsb
sbb
dec
cmp
lods
in
in
sub
add
imul
lcall
xchg
cli
inc
push
dec
and
push
outsb
add
adc
adc
jl
je
and
clc
mov
sbb
fnsave
es
das
adc
ds
mov
push
adc
mov
pop
mov
test
sub
pop
cmp
sbb
cmc
mov
inc
jp
sbb
pop
mov
sbb
fcoml
xchg
pop
mov
cmp
mov
xchg
ficomps
int
mov
lret
in
arpl
cmpsb
cmpsl
sub
int3
xor
inc
orb
pop
inc
imul
inc
out
cmp
adc
je
test
jb
bound
xor
das
lods
lea
cmpsb
cs
aas
jne
cmp
xor
pop
cltd
out
mov
push
pop
or
mov
xchg
insb
std
adc
adc
jmp
dec
sbb
push
aaa
imul
cmp
in
inc
aaa
jno
xchg
mov
pop
sub
xor
cltd
clc
push
loop
cmp
mov
jle
mov
xor
shll
insb
stc
andl
xor
pushf
xor
mov
call
add
or
mov
cmpsl
stc
rorl
adc
and
mov
inc
int
orl
jl
inc
cld
push
pop
clc
ret
adc
test
icebp
adc
mov
dec
dec
fdivr
and
dec
inc
pop
in
mov
fiadds
push
cli
sub
push
and
add
insl
mov
add
das
rclb
adcb
mov
jae
imul
sti
mov
xor
stc
shlb
sahf
push
test
push
ret
and
cwtl
cmp
jne
mov
mov
outsb
push
ds
or
cltd
in
aaa
mov
adc
cmp
lea
sarb
andb
ja
ret
mov
or
push
or
inc
xchg
insb
mov
jae
pop
test
mov
mov
das
mov
mov
or
icebp
mov
into
sub
jp
lret
mov
pop
xchg
jno
rolb
cmpsb
add
shlb
or
push
in
popf
in
movsb
pusha
loop
push
clc
xchg
jb
aaa
test
imul
sub
mov
scas
push
fcoms
cld
add
and
add
sbb
test
pop
push
sbb
sub
fbld
jmp
xor
push
mov
arpl
lock
mov
rcrl
jecxz
mov
cwtl
pop
lds
into
into
sbbl
jle
sbb
outsb
cmp
push
dec
enter
dec
aas
sti
stos
mov
popf
shll
je
repz
sbb
rol
push
mov
cld
add
adc
incb
mov
xorl
mov
and
dec
or
push
adc
jge
aad
jae
pushf
jmp
sbb
push
lahf
inc
sbb
or
jne
scas
xlat
sbb
push
data16
lock
and
pop
dec
arpl
mov
daa
andl
dec
xchg
ror
mov
mov
loope
cltd
mov
les
movsl
inc
mov
les
popa
mov
pop
sbb
sub
insl
lods
popa
icebp
out
ds
mov
adc
mov
jp
rorb
and
rcll
mov
sahf
cmpsl
inc
sub
cmp
cmp
push
rorl
bound
test
frstpm(287
les
fnsave
mov
mov
pop
out
or
stc
and
xchg
test
xor
jae
in
lahf
hlt
push
ret
fisttpl
cmp
mov
div
dec
sub
adc
arpl
mov
cmp
dec
lcall
mov
adc
test
or
and
sbb
test
aad
enter
pop
aaa
shlb
push
dec
aam
outsb
lea
and
imull
pop
add
hlt
xchg
enter
in
andl
pop
loop
stos
jp
or
lods
adc
or
push
and
mov
sahf
rsm
mov
mov
add
mov
sti
inc
jo
repz
push
es
add
inc
pop
hlt
pop
fwait
inc
pop
iret
movsb
data16
add
cmp
inc
and
aas
ja
lret
mov
cmp
mov
add
xchg
mov
and
xor
shlb
push
jo
mov
mov
fimull
cld
mov
add
mov
xor
testb
sti
pop
ds
popa
sub
and
mov
mov
pushf
pop
mov
dec
sbb
xor
vpsubb
mov
cld
cmp
pop
test
bound
sbb
jnp
push
pop
jo
movsl
addr16
sahf
mov
orl
popf
mov
add
jmp
xchg
sub
xor
or
ss
dec
inc
xor
or
push
out
out
shlb
push
add
lods
fucomp
inc
jmp
or
or
and
push
push
mov
lock
add
xchg
sbb
out
xor
shrl
data16
loop
xorb
push
pusha
into
cmp
pop
in
xchg
push
mov
push
jecxz
push
dec
jmp
arpl
jmp
jg
pop
cltd
dec
dec
xchg
fs
or
mov
movsb
fxam
xchg
mov
jmp
jb
fcmovnbe
ret
mov
sub
xchg
rolb
adc
js
dec
push
push
test
jmp
hlt
mov
popf
jno
lahf
push
lret
in
lret
mov
jnp
jnp
rcll
testb
popa
fisubrs
mov
sahf
dec
push
xchg
enter
or
add
xor
sub
in
shrl
nop
mov
xchg
inc
mov
movsl
lcall
mov
pop
dec
mov
shlb
rcpps
cs
fiaddl
and
inc
cmpsl
sub
xor
subb
stc
mov
int3
push
pop
in
and
cltd
test
and
fistps
mov
add
xlat
sbb
jmp
pop
test
addr16
outsl
mov
cwtl
repnz
sahf
mov
mov
lret
insl
sub
leave
imul
jl
adc
fisttps
in
mov
sub
or
mov
dec
cmc
imull
sub
jecxz
std
jae
adc
aad
pop
pop
xchg
ror
mov
xlat
or
jmp
stos
jbe
xor
jg
mov
aam
adc
sub
imul
loopne,pt
and
enter
das
ret
jnp
jp
mov
fistl
jge
mov
sahf
and
push
in
outsl
daa
mov
xchg
ljmp
inc
mov
std
jg
push
js
mov
sub
popf
cmp
lock
std
clc
inc
iret
cmp
fcmovnu
outsl
add
xor
xor
cmp
cmpsl
ss
inc
mov
imul
int
cmp
cs
jo
loopne
jae
pop
adc
jg
ja
push
ja
movsl
or
imul
pop
lock
jge
pushl
xchg
out
jb
add
sbb
scas
xor
and
xchg
sbb
mov
call
sbb
and
lret
add
adcb
add
sarl
lods
hlt
pop
dec
jbe
pop
out
and
adc
iret
scas
dec
sub
inc
mov
ds
es
pop
cmpsl
push
pop
and
mov
movsb
ja
pop
cmp
imul
inc
ret
sbb
icebp
xchg
incb
mov
ss
mov
inc
stos
sbb
adcb
push
cmp
mov
sbb
xchg
and
push
pop
push
stos
add
int3
jns
dec
inc
std
orb
add
clc
dec
dec
dec
shll
jae
sub
adc
pop
sahf
sub
and
pop
pop
loope
pop
inc
test
xor
faddl
sub
lods
ss
jns
out
jne
cmp
test
out
divl
sub
out
in
jp
sti
dec
ljmp
mov
inc
sub
xchg
adc
inc
sti
js
add
add
xor
outsl
addr16
jne
mov
in
dec
fisttps
sub
pop
ret
mov
sbb
cmp
ret
sbb
jp
addr16
push
fwait
aaa
or
movntq
push
dec
cmp
xlat
sub
shl
sar
imul
push
imul
pop
xor
cli
mov
dec
and
push
cs
adc
cli
jno
sbb
and
fs
push
inc
aam
rcrb
outsl
aaa
repnz
ficompl
icebp
mov
pop
mov
or
mov
mov
pop
dec
push
xor
inc
push
in
sahf
push
mov
cli
xchg
cmpl
sar
and
mov
mov
add
and
mov
xchg
js
fdivrs
add
int3
mov
pop
sbbb
jle
inc
lods
mov
xchg
adc
add
jl
jmp
imul
fmuls
cld
cwtl
ret
daa
mov
rcrl
and
cltd
jge
or
fwait
add
xchg
jle
mov
insl
add
xchg
cs
sub
and
jecxz
aas
aad
leave
gs
in
jp
pop
adc
dec
movsl
pop
fldenv
inc
insl
xlat
push
bound
ljmp
rclb
test
hlt
lahf
es
loop
push
jecxz
call
or
mov
notl
mov
push
stos
aad
out
xlat
enter
mov
pop
lods
fstcw
push
ds
addr16
inc
xor
clc
arpl
adc
loop
adc
jo
xor
loope
je
fs
pushf
ret
cmp
jecxz
idiv
mov
jl
push
dec
scas
fimull
test
pop
mov
or
imul
xchg
in
push
fisubl
insl
jg
and
add
cmpsb
movsb
lods
ret
cli
sarl
add
dec
dec
xor
outsl
xchg
add
fdivrs
shlb
cmp
dec
loop
push
ljmp
xchg
rcll
mov
dec
fcmovnbe
inc
call
hlt
sarb
cld
sub
lahf
sub
inc
jp
mov
std
xchg
xlat
mov
cmp
mov
jae
xor
cmc
ss
outsb
jae
fnstenv
test
inc
adcl
mov
test
adc
add
adcl
pop
scas
or
add
xor
ljmp
adc
jp
add
insl
or
out
idivw
push
pop
lret
lcall
jnp
pop
das
add
daa
or
lock
js
addr16
jb
xchg
enter
jge
lret
das
pop
sahf
pop
adc
push
movsl
dec
push
outsl
sbb
sbb
lea
gs
adc
push
push
dec
filds
fidivs
movsb
dec
adc
dec
sbbl
fwait
push
lock
nop
add
add
test
and
stos
lahf
xchg
dec
xor
push
inc
or
xchg
inc
adc
loope
push
xchg
imul
adc
add
in
mov
cmp
fiaddl
mov
fnsave
pop
jns
inc
rorl
and
jbe
adc
mov
in
idivl
xor
out
in
sbb
or
cmpsl
cmp
ret
in
loop
jbe
js
push
out
fcomps
lcall
cmpsb
or
pop
inc
xor
cmp
imul
sbb
shl
fs
insl
ret
loope
jo
jo
xor
jo,pt
cmp
ljmp
add
add
out
xchg
je
stos
scas
pop
or
mov
push
xchg
push
adcb
xor
mov
sbb
jmp
inc
jle
push
xchg
inc
ss
push
dec
mov
pop
iret
dec
xchg
into
in
pop
and
imul
jge
outsl
imul
push
ficompl
outsb
jle
dec
sub
mov
xor
and
pop
testl
cmp
push
push
xchg
lods
arpl
cmp
repnz
jns
xchg
je
jl
daa
cmp
push
gs
fistpll
out
mov
aas
push
inc
cmpl
cld
mov
mov
dec
add
or
xchg
xor
xchg
cmpsb
xchg
into
ret
push
add
imul
rcr
mov
adc
lea
dec
sbb
insb
adc
pop
adc
fcomip
insb
rcrl
aaa
mov
cmpsb
xchg
mov
xor
push
and
addb
pop
jo
paddd
dec
inc
aam
pop
movsb
ja
xor
hlt
dec
lods
mov
mov
popa
xlat
js
mov
outsb
pop
xlat
scas
shll
pop
push
and
je
jo
jp
lret
dec
push
lods
push
mov
mov
adc
jg
jge
sbb
aad
into
xor
fcoms
ljmp
push
push
pushf
xchg
push
sbb
das
inc
push
xchg
or
daa
arpl
punpckhdq
xchg
rorb
sarl
repz
or
jg
in
out
out
ljmp
das
jb
cmpsl
repz
mov
int3
es
xchg
mov
lret
push
int3
enter
xor
fmuls
movsl
imul
mov
popa
and
fnstcw
lea
int3
inc
cltd
loopne
pop
dec
push
fstl
shrl
add
fs
jbe
xchg
add
cld
daa
cmpsl
mov
pop
ja
xchg
shll
jo
xchg
jo
pop
inc
push
or
mov
je
mov
push
xor
add
mov
bound
xchg
dec
add
jae
ss
mov
out
pop
mov
imull
push
out
cmp
bound
mov
in
mov
xchg
xchg
sub
inc
in
fbld
inc
add
push
lret
aam
repz
xchg
out
bound
add
cmpsb
xor
outsl
insl
in
sub
dec
dec
daa
xchg
std
cmpsl
stos
mov
pushf
adc
ficoml
stos
hlt
mov
adc
clc
push
sub
cs
sbb
lods
outsl
mov
mov
insb
in
sub
insb
or
iret
jecxz
and
fwait
push
pusha
ljmp
mov
dec
jmp
xchg
lret
jl
and
mov
mov
stos
pop
xlat
loope
sub
lcall
dec
mov
push
addl
or
xor
fstpt
dec
pop
fisubs
popl
mov
shrl
cmp
sbb
pop
arpl
dec
jo
sub
mov
ja
neg
sub
sub
jle
mov
adc
jl
scas
ss
adc
adc
or
mov
mov
inc
fcmovnbe
in
jp
loopne
mov
adc
push
mov
test
jp
inc
push
mov
dec
or
mov
xlat
inc
mov
cltd
sbb
jg
sbb
sub
mov
les
les
mov
inc
and
cmpsb
inc
shr
inc
movb
or
adc
xchg
movsb
or
sbb
lahf
or
fwait
insl
or
fsubs
lret
fwait
xor
dec
xchg
enter
arpl
cwtl
or
adc
mov
lock
out
mov
lret
fildl
mov
jmp
test
std
lock
subb
ret
fdivl
mov
iret
jno
dec
xor
lcall
test
cmc
pop
push
clc
or
jbe
cmp
paddusb
lret
inc
cmpsb
stos
aas
xor
ffreep
jnp
shlb
decb
sub
aaa
insl
bound
and
repnz
push
lcall
call
bound
jnp
bound
mov
imul
inc
insl
cli
or
lds
cmp
inc
mov
fmull
mov
xchg
or
and
aas
cmp
mov
or
inc
ret
arpl
movsl
adc
test
mov
je
xlat
repz
shll
sahf
adc
add
adc
pushf
sbb
out
pushf
loopne
sbb
add
xor
mov
add
add
jae
ss
mov
or
movsl
cmpsl
inc
leave
lods
dec
test
pop
sub
push
pop
fldenv
push
mov
pop
cltd
ds
in
cmpb
daa
sbb
jge
fmuls
das
lds
push
cmp
mov
loop
je
mov
push
ljmp
cmc
jns
jns
push
es
lock
mov
xchg
mov
mov
xor
aad
sub
into
mov
add
sahf
aam
pop
stc
scas
cmp
jo
sahf
bound
imul
jmp
push
shlb
push
mov
ret
dec
pusha
mov
push
xor
sbb
jae
mov
and
add
sub
xchg
push
call
data16
push
testl
mov
hlt
dec
push
jb
ja
xchg
jg
int3
inc
xchg
add
dec
fsubl
addl
js
sbb
gs
pop
dec
aaa
xchg
ja
dec
jo
mov
std
jle
outsb
stos
faddp
scas
leave
clc
ds
and
mov
bound
add
sbb
or
cwtl
into
ja
test
sub
adc
inc
leave
xchg
dec
cli
xor
aad
fnstsw
dec
fists
cmp
cmp
mov
jb
cmp
add
in
mov
sbb
jge
jbe
jge
lret
cmc
mov
mov
xor
mov
push
lods
sti
pop
std
xlat
adc
loopne
loopne
shlb
lret
call
psraw
arpl
cmp
call
jg
cli
lock
cmp
dec
jns
cwtl
mov
dec
aaa
outsl
dec
fmulp
mov
fidivl
adc
pusha
push
push
dec
push
loope
pop
mov
and
or
popa
dec
and
sbb
sti
lds
xor
repnz
xchg
dec
jmp
inc
fs
mov
mov
xor
popa
repz
arpl
inc
std
aaa
sub
inc
repnz
inc
sub
adc
cmc
xor
sbb
cld
adc
leave
clc
jmp
push
lret
arpl
addb
lock
pop
scas
dec
cwtl
cmp
nop
add
or
mov
jbe
loopne
fs
mov
cmpl
jb
inc
test
xchg
push
fdivp
int
pop
iret
cmpsl
imul
sub
push
aaa
fisubs
xchg
lea
sub
mov
roll
test
in
push
mov
outsb
lahf
jl
fs
jge
btr
hlt
repnz
aas
fldcw
lods
xlat
mov
in
imul
mov
in
inc
call
add
out
or
add
stos
imul
neg
mov
mov
or
clc
push
add
sub
push
mov
push
daa
imul
dec
pop
push
xchg
loopne
add
dec
ret
jp
scas
mov
mov
mov
sbb
xor
push
pop
popf
xchg
call
popl
repnz
pop
xor
in
push
out
hlt
ja
dec
xor
cltd
shrl
xor
mov
mov
scas
xor
lret
sbb
and
adc
inc
xor
xchg
inc
fwait
sub
jge
test
fwait
cmp
jle
test
sbb
mov
cld
push
fs
inc
cmp
and
jne
imul
stos
dec
das
pop
mov
jo
xor
adc
pop
adc
adc
and
mov
lock
imul
jp
push
imul
lcall
leave
lahf
cmp
test
mov
sub
dec
test
adc
push
adc
pusha
fucomp
test
pop
ror
add
cmc
jno
dec
subb
cmpsl
std
ss
ds
les
xor
lods
jg
les
bnd
xchg
cld
mov
insb
imul
xorl
mov
leave
mov
mov
mov
adc
xchg
cmpsl
lods
into
lock
test
sarb
mov
rclb
xchg
pop
ret
push
dec
adc
cmp
rcll
sub
pop
inc
or
fbstp
clc
xchg
xchg
push
pop
subb
fcomps
icebp
je
int3
fimull
hlt
ljmp
xchg
aam
jne
add
inc
stos
pop
push
mov
cmp
mov
or
mov
or
js
shr
adc
sbb
in
testb
cmp
dec
insl
cli
test
arpl
dec
mov
mov
jns
andl
mov
lds
jbe
outsl
lahf
sub
clc
pop
and
jns
push
xor
imul
cwtl
dec
les
mov
cmp
leave
les
pop
add
push
push
stos
pop
sbb
push
dec
test
cmpsb
jle
fs
jae
ds
push
pushw
sahf
jno
andb
push
stos
shll
dec
lcall
xchg
test
jae
nop
imul
pusha
add
inc
pop
orb
movsl
and
cmpsl
sbb
out
xchg
jnp
rolb
mov
sbb
movsb
sbbl
scas
lahf
imul
sub
add
faddl
fcom
aas
flds
cwtl
scas
scas
adc
dec
push
je
je
cmp
mov
sbb
in
sub
sti
pop
mov
ficomps
push
outsl
iret
jnp
sub
add
adc
add
ss
and
sub
and
stos
mov
cmp
jg
stos
insl
sub
xor
pop
xchg
mov
cmp
bound
adc
jl
call
xorb
sub
jmp
jle
lds
hlt
cs
adc
mov
lcall
add
and
cmp
aas
repnz
repz
or
mov
mov
mov
mov
xor
jp
cmp
dec
cmp
sbb
mov
popa
xchg
pop
fsubrl
sub
or
xchg
bound
jb
xor
out
outsl
cltd
imul
rcr
cwtl
mov
jbe
test
jo
mov
xor
into
mov
ffree
sahf
lods
sub
pusha
mov
pop
pop
shrb
push
or
jmp
mov
test
fsin
test
and
add
lods
enter
fmuls
icebp
outsb
inc
repnz
xchg
push
das
or
test
pop
xor
shll
mov
shrl
cltd
ljmp
pop
xor
loopne
pop
repnz
int
sbb
orl
mov
jl
fadds
enter
test
nop
js
dec
sub
and
out
add
cmp
lret
inc
mov
loop
in
call
movsb
or
mov
push
pop
sar
mov
mov
mov
test
add
lahf
stos
imul
hlt
fisttps
mov
into
lods
loopne
movsl
inc
jb
sbb
out
hlt
ret
shlb
fidivrs
cmp
cld
mov
lds
cmpl
fwait
sbb
stos
ljmp
sub
out
das
imul
lahf
cmc
roll
bsf
popa
push
clc
leave
cmp
xchg
jmp
movsb
out
pop
je
jmp
mov
cld
mov
repz
call
push
pop
cmc
and
into
and
nop
inc
jmp
daa
lahf
pop
push
in
ss
adc
adc
or
bound
lret
loop
repz
scas
lcall
xchg
das
sub
test
rclb
xor
aas
mov
out
jns
push
pop
jle
aam
dec
enter
mov
js
pop
sti
mov
xor
int
dec
xorb
jle
sti
ds
mov
rclb
notb
mov
dec
repnz
jmp
negw
mov
fwait
jae
mov
in
mov
xchg
push
hlt
outsl
mov
add
add
xchg
or
imul
gs
jg
or
add
fmulp
fldt
xchg
push
in
subl
inc
cmp
sbb
and
lock
iret
dec
xchg
cmp
xor
cltd
aas
rclb
ret
pop
ficoms
nop
jbe
icebp
mov
daa
scas
inc
push
ret
lods
add
mov
shrb
xor
xor
xchg
adc
dec
roll
lret
xchg
loope
sti
pop
mov
sub
pop
inc
call
mov
repz
movsb
mov
inc
lret
xchg
sub
adcl
sarl
xor
sbb
cmpsb
dec
out
mov
adc
fcmovnb
mov
xor
mov
dec
rorb
pop
cwtl
not
mov
push
cmpsl
xor
loopne
and
xchg
jns
xlat
in
push
adc
sub
inc
repnz
jns
fwait
mov
fnstenv
inc
pushf
xlat
nop
nop
lock
jmp
out
jg
mov
cmp
pushf
test
lds
push
or
and
je
fnstenv
jnp
loopne
in
and
push
sub
popf
jle
jle
cwtl
inc
pop
fiaddl
push
out
dec
and
fstl
movsb
scas
lock
mov
test
jns
popa
mov
push
and
lods
pop
sbb
mov
addr16
push
jp
pushf
or
ret
ret
jp
lods
jns
dec
and
mov
andb
add
xchg
pop
mov
mov
xor
out
sub
es
pop
ficoml
stos
icebp
xor
cmp
je
test
out
pop
push
insl
pop
cmp
sbb
rorb
out
lret
out
arpl
adcl
xor
xor
xchg
adc
in
ficompl
mov
xchg
cli
and
or
jae
jp
fwait
lods
insb
adc
adc
aad
jg
repz
loop
push
push
pop
outsb
xchg
mov
pop
pop
sub
call
xor
sbb
xchg
icebp
in
mov
ret
mov
dec
mov
cmp
and
pop
aam
and
sub
xchg
mov
and
dec
arpl
jb
loope
jmp
or
ja
nop
inc
pop
sbb
aaa
mov
imul
mov
rcrl
add
mov
cmp
not
test
aas
out
sbb
ret
orb
and
push
pop
lods
je
arpl
daa
lea
dec
mov
imul
inc
pop
dec
and
xchg
sub
jp
fidivs
in
mov
jmp
jg
test
in
insb
cmp
aad
pop
sub
cs
fnstenv
jo
add
hlt
mov
fstl
jae
push
mov
and
adc
pop
cltd
fwait
in
cmp
repnz
iret
je
mov
or
mov
sub
mov
dec
stc
les
mov
mov
lret
out
in
xor
xchg
mov
repz
fisttpl
aad
call
or
xchg
sbbl
sub
fnstsw
jne
push
or
sbb
dec
mov
pop
leave
scas
addr16
mov
inc
aam
ss
mov
and
push
push
aam
or
xor
in
scas
sti
mov
mov
sub
add
aad
sub
fiaddl
dec
call
add
ss
mov
lock
nop
mov
outsl
mov
scas
xchg
pop
xchg
pop
sbb
sbb
inc
iret
jns
cmp
cmp
movsl
inc
cli
cs
cmp
pop
fcoml
pop
xchg
aad
mov
les
adcl
sbb
loopne
mov
jg
mov
mov
les
mov
aaa
inc
pop
ret
sub
movsl
imul
push
add
lock
loopne
cmp
cs
cmp
cmc
jnp
sub
fisubl
pop
dec
imul
sub
or
divb
gs
fisubrs
cltd
fs
cltd
jo
cmp
jnp
xchg
pop
pop
mov
mov
mov
arpl
stos
sub
or
and
xor
pusha
shlb
cmp
arpl
push
xchg
adc
aad
int
mov
out
sbb
iret
cli
or
push
xlat
mov
fwait
jne
shrb
xchg
and
in
movsl
adc
rcll
les
mov
pop
mov
shll
loope
adc
ja
das
addb
lcall
jns
imul
push
mov
scas
mov
jg
out
pop
xlat
out
cltd
cld
movsl
test
inc
aam
push
pop
mov
cmpb
adc
sub
push
adcl
imulb
jp
shlb
call
mov
imull
cmp
inc
mov
js
add
adc
dec
std
adc
fimull
les
cmc
sub
mov
fsts
rorb
test
jbe
out
test
movl
loope
popl
scas
aad
add
fsubs
xchg
daa
sub
push
or
push
sbb
in
dec
pusha
ret
jmp
mov
push
mov
in
xor
pop
sti
in
dec
push
shll
sub
icebp
loop
xor
ficoml
mov
int
icebp
movsl
lcall
xchg
sub
outsb
imul
xchg
nop
fs
shll
fdivl
pusha
mov
pop
movsl
aad
pushf
int
sub
add
jle
mov
test
sti
mov
mov
lods
testl
cmpsb
in
pusha
pop
sbbl
popf
xchg
data16
sarl
outsb
js
add
scas
cmp
outsl
orl
dec
push
in
inc
adc
xlat
sbb
mov
pusha
xor
mov
or
inc
lret
addl
xchg
mov
push
and
leave
jge
pop
adc
pop
and
into
mov
xchg
jne,pn
data16
ss
sbb
js
ljmpw
stos
iret
inc
pop
push
inc
jle
test
cmpsb
mov
ror
dec
das
test
jg
adc
data16
movsb
inc
testl
xchg
cltd
jecxz
inc
jo
mov
loopne
iret
mov
loop
dec
scas
addr16
mov
mov
stos
insb
fidivs
adc
js
call
xchg
lret
xchg
or
cmp
gs
add
sub
pop
cmc
mov
adc
mov
push
cwtl
mov
pop
sub
pop
test
andb
in
stc
adc
jne
int
div
outsb
out
inc
dec
pop
mov
xchg
fwait
sti
dec
cmp
cmp
jne
sbb
push
test
enter
aad
loopne
out
stos
mov
jle
inc
jnp
aaa
pop
frstpm(287
aas
out
leave
pop
and
aad
mov
push
push
mov
adc
outsb
nop
mov
sahf
pop
lods
mov
adcb
nop
lds
or
mov
xor
push
das
cmp
test
and
int
pop
aas
ficoml
shlw
and
pop
cmp
jle
adcb
dec
fwait
adc
mov
clc
dec
mov
mov
adc
sbb
adcb
xor
push
or
arpl
cmp
sbb
jbe
add
popl
es
frndint
add
mov
and
dec
sub
pop
mov
lods
or
jno
repnz
lock
dec
sub
outsl
jns
cmp
in
ja
and
xorl
mov
dec
or
pop
jg
mov
pop
jns
inc
outsb
xchg
sbb
test
movsl
notl
rcrl
out
push
xchg
loop
nop
dec
lcall
pop
ret
pop
mov
or
or
sahf
xlat
mov
pusha
xor
shl
dec
xchg
sbb
fnstenv
int
lahf
loope
cmp
in
cmp
outsb
sub
push
js
mov
mov
push
xchg
clc
inc
in
xchg
popf
mov
jecxz
and
data16
and
push
mov
dec
cmc
add
scas
adc
xor
jle
test
cmpsl
pop
insl
pop
sub
rcl
scas
or
adc
pop
inc
data16
mov
int
loope
inc
lcall
push
sarb
insb
mov
adc
fisttpll
pop
lods
or
fwait
ret
call
subb
lea
lahf
je
outsb
dec
cmp
adc
jno
sbb
mov
add
xchg
aad
add
pop
ja
jecxz
push
push
inc
cmp
aas
xor
das
cltd
popa
mov
and
fsubrl
les
xchg
and
xchg
cmpsl
mov
inc
lods
sub
std
rcl
ljmp
jmp
xchg
mov
push
pop
sub
gs
and
andl
das
pop
lods
shlb
inc
inc
sbb
cwtl
sbb
jne
xchg
inc
aad
sub
sbb
mul
jo
jge
mov
sbb
push
aaa
jno
jmp
jp
cmp
sub
arpl
out
insb
add
subb
mov
mov
mov
js
mov
xor
fwait
popa
mov
add
dec
bound
push
stos
xor
mov
lods
xor
data16
xchg
addr16
jg
mov
imulb
gs
arpl
and
dec
and
into
dec
xor
test
jo
jp
pmullw
call
outsl
jecxz
repz
out
dec
pusha
mov
ret
jl
test
push
addl
scas
test
insb
iret
push
add
aas
pop
mov
imulb
mov
incb
fwait
cmp
mov
mov
adc
push
sbb
pop
mov
jae
clc
ret
ljmp
jg
inc
lret
xor
push
dec
int3
xchg
shlb
insl
jns
insl
cmp
sbb
out
orb
mov
rorl
mov
push
mov
adc
mov
mov
jg
pop
pop
and
mov
mov
cmpsl
leave
mov
mov
insb
mov
nop
xchg
mov
outsl
or
in
iret
into
std
fwait
pop
mov
ficoml
cmp
dec
loope
ret
sub
jle
imul
ret
int
push
sbb
fistpll
push
cmp
and
lds
pusha
stos
jae
sub
fidivl
dec
popa
jbe
orb
cwtl
gs
cmpsl
mov
jae
mov
sbb
mov
test
sbb
inc
lcall
pop
fs
jns
es
shrb
in
rcrb
test
lock
mov
mov
ss
inc
pop
cld
lret
and
mov
mov
add
enter
add
push
repz
jmp
arpl
add
cwtl
fisubs
add
add
push
out
or
in
cmp
mov
aas
outsl
mov
fnstenv
push
in
mov
adc
insl
sbb
je
dec
out
and
filds
imull
pushf
scas
sub
test
aam
mov
mov
dec
sahf
outsl
ficoml
or
pusha
sbb
sti
gs
jne
mov
jp
testl
cmp
jnp
jg
cmp
rclb
scas
jne
imul
movsb
in
cwtl
xor
pop
sub
arpl
cmp
test
ja
loop
insb
pushf
call
pop
cld
jne
mov
repnz
cli
lds
pop
xlat
mov
push
loopne
outsl
es
inc
shlb
insl
jbe
subb
bound
ret
mov
arpl
mov
adc
out
adc
adc
jecxz
and
inc
push
cld
sarl
adc
rol
or
add
xchg
imul
mov
or
push
mov
or
mov
push
xchg
std
mov
aam
adc
adc
adc
shll
dec
outsl
push
jle
mov
mov
xchg
sti
adc
xchg
jl
or
pop
pop
add
call
lods
jl
ljmp
jo
fnstenv
or
lret
sbb
adc
gs
insb
mov
lods
lret
popa
clc
sahf
bound
jle
and
jp
outsl
lcall
inc
dec
xchg
pop
xor
add
mov
xchg
or
pop
out
pop
repnz
pop
mov
push
pop
mov
je
xor
pop
mov
push
out
pop
and
push
xchg
movsl
shrb
jno
adc
jge
xchg
js
push
adc
xchg
pop
lahf
leave
jb
dec
or
push
adc
cmp
movsl
lret
sarb
pop
rcll
push
adc
xchg
dec
mov
enter
mov
repz
outsb
or
fcomps
pop
sti
cmp
std
cs
test
je
mov
nop
gs
je
das
orb
jmp
stos
sub
outsl
jle
nop
sti
test
sbb
dec
add
xor
dec
insl
mov
fistpl
or
aaa
outsl
ret
adc
xor
pop
cltd
in
movsl
mov
daa
jb
jge
cmpl
and
in
ja
jg
sbb
das
pop
xor
icebp
das
xchg
sbb
adcl
xchg
mov
cmp
add
mov
mov
into
dec
cmpb
xchg
mov
out
adc
pop
xor
mov
sub
sbb
mov
add
stos
or
jnp
cmp
sub
and
sub
sbb
pop
imul
call
mov
inc
movsl
adc
sub
push
sbb
fs
fadd
jbe
nop
in
out
sbb
fdivrs
inc
test
or
adc
mov
test
push
icebp
outsl
cmp
jae
dec
sub
push
push
push
adc
cmpl
pop
adc
out
jle
lahf
out
jge
lahf
repnz
dec
add
sub
adc
jne
xchg
aam
sub
jo
and
sub
cmpsl
imul
rcll
sub
mov
outsb
fidivrs
mov
les
xor
mov
cmp
jno,pt
mov
mov
mov
bound
cmp
pop
mov
lea
pop
push
fldcw
lods
clc
xchg
adc
xchg
ds
cmp
insb
mov
arpl
ljmp
fwait
out
mov
cmpsb
inc
cwtl
in
adc
sbb
sbb
and
in
pusha
and
push
push
mov
ljmp
pusha
jl
adc
pop
and
out
inc
into
in
scas
sti
mov
fstps
or
outsl
ja
mov
jl
sub
mov
loop
dec
sub
ret
movsl
and
pushf
xchg
xchg
int3
stc
dec
orb
xchg
aaa
sar
outsl
cmpsl
push
jmp
jae
pop
shrl
stos
jns
pcmpeqb
push
add
mov
mov
sbb
mov
cmpsb
imul
loop
mov
into
cmpsb
cli
mov
arpl
add
mov
out
xchg
add
adc
lret
adc
push
aas
cltd
subb
lds
lahf
inc
jecxz
cmp
lods
sbb
sbb
hlt
mov
mov
cmp
mov
cli
pop
aam
iret
add
pop
lcall
mov
mov
pop
mov
push
ljmp
inc
xchg
fisttpll
outsb
sub
xor
movsb
xor
in
xchg
adc
cmp
arpl
repz
movsl
cmp
enter
mov
popf
pop
inc
or
in
and
sar
jg
addl
out
jecxz
xchg
rcr
ss
notl
sub
mov
jge
sub
cmpsb
sbb
jnp
test
pop
sbb
decb
gs
stos
lea
fstpl
xlat
dec
mov
ret
pop
fistl
mov
sub
inc
jb
outsl
cmpsb
mov
or
leave
cld
scas
jl
out
inc
push
add
inc
jae
and
dec
inc
icebp
lods
ss
jge
shll
loop
push
and
inc
es
fisttpll
aas
fs
pop
add
das
lret
daa
jnp
js
lds
lock
mov
dec
mov
pop
add
pop
lahf
adc
rorl
ret
sbb
fstl
mov
popa
ja
xchg
mov
xor
adc
jns
jge
das
mov
out
and
xor
aaa
cmpsl
shll
in
mov
daa
push
mov
jo
js
mov
mov
mov
mov
mov
hlt
sbb
sub
loope
pop
adc
movsb
xchg
jmp
dec
lds
movsb
stos
xchg
pop
enter
stos
pushf
movsl
mov
idivb
dec
fwait
xchg
mov
loopne
sbb
gs
mov
fldcw
aaa
daa
pop
cmp
mov
xchg
jp
xchg
rclb
lds
push
sti
aam
jnp
sub
adc
jo
adc
mov
insb
imul
and
fldcw
ret
movsb
jae
test
push
nopl
mov
dec
out
push
inc
dec
add
dec
sub
and
mov
mov
cmp
enter
addl
xchg
les
out
push
cltd
out
stc
inc
movsb
mov
enter
mov
filds
scas
fmuls
add
push
aam
in
dec
jge
pop
add
xor
and
push
jns
mov
jb
aaa
add
pop
mov
mov
inc
xor
pop
xchg
inc
push
push
je
sahf
lahf
stos
adc
test
push
dec
pop
scas
sub
test
sbb
sahf
xor
int3
mov
fwait
mov
je
mov
add
jp
arpl
insb
int
adc
js
dec
aam
out
sti
push
or
mov
aaa
pop
sti
insb
mov
gs
sbb
sbb
push
xor
into
fcompl
popa
push
jge
fimull
inc
divb
mov
jnp
shr
std
in
dec
loopne
pop
push
scas
movsb
xchg
sub
pushf
lock
sub
inc
adc
mov
lea
sub
mov
fs
cltd
fdivs
or
addr16
loop
loope
loop
mov
mov
pop
jnp
pop
repnz
sub
push
mov
mov
xor
stc
cltd
inc
push
insb
test
jo
sti
insb
push
shrl
mov
das
inc
xorb
adc
push
addr16
adc
jbe
xchg
or
rolb
and
hlt
jnp
adc
data16
loope
sub
fstpl
out
fsubp
sti
test
pop
cmp
inc
jp
int3
xor
mov
jg
lods
xchg
mov
mov
lds
bound
push
decb
sub
dec
scas
adc
mov
xchg
movb
dec
jae
or
mov
out
bound
jge
mov
jecxz
mov
adc
pushl
leave
ret
pop
insb
mov
cld
pop
insl
aad
frstor
inc
testb
cmc
fildll
gs
and
push
jg
and
inc
pusha
shl
loope
push
jo
movsb
push
mov
outsb
sub
add
scas
inc
testl
movsl
ds
adc
mov
aad
push
pop
add
push
jnp
es
iret
mov
dec
fistpl
sbb
add
loope
cs
xchg
pop
dec
jg
pop
clc
cmp
idiv
fsts
push
dec
arpl
add
leave
cs
jae
clc
fmul
insb
pushl
sbb
mov
pop
cmpsl
outsl
push
icebp
clc
mov
popa
add
and
pop
imul
aam
xchg
pop
out
mov
sti
push
insb
cmp
xchg
repnz
mov
andb
inc
insb
mov
fcmovu
or
js
les
add
fisttps
sarl
mov
loopne
icebp
test
pop
stc
adc
clc
xlat
lcall
cwtl
mov
imul
rcl
jg
shr
fs
inc
idivl
add
cmp
jl
std
clc
mov
cmpsb
or
movsb
pusha
dec
cli
das
cltd
mov
es
adc
pop
mov
fs
dec
or
xor
out
and
in
stc
cmp
mov
xchg
sbb
pop
pop
jge
popa
pop
xlat
add
adc
pop
lds
ja
rolb
je
xchg
sbb
dec
and
aad
ss
xor
pop
xor
push
push
sbb
outsl
out
sub
loope
aad
pushf
daa
into
mov
push
out
cwtl
pop
add
mov
push
dec
ret
xor
fdiv
add
inc
std
mov
xor
xchg
mov
pop
sub
sti
mov
mov
sub
cld
jo
in
fwait
shlb
aam
mov
stos
mov
repz
push
inc
or
int
das
out
icebp
pop
mov
adc
orl
jge
inc
cmp
repz
sarl
out
mov
sbb
push
adc
xor
dec
sub
movl
ret
les
adc
push
xchg
int
pushf
aaa
and
rclb
cmp
insb
aas
mov
cwtl
xor
cltd
sub
adc
pop
mov
and
mov
pop
into
mov
je
nop
aaa
sbb
sbb
xor
sbb
lahf
inc
mov
xor
in
out
sti
pop
sub
mov
aaa
pop
xchg
mov
incb
xchg
enter
and
fildl
adc
sbb
mov
ja
loop
fmul
out
inc
loop
in
movb
dec
fs
out
insl
mov
rcrb
dec
jge
cmp
int
sbb
ret
mov
clc
aas
xchg
dec
ss
andnps
xchg
pop
sub
mov
loope
pop
mov
lea
xchg
add
and
mov
jne
jecxz
and
jbe
cli
mov
cmpsb
push
add
test
out
je
sarl
js
movsb
mov
mov
ljmp
imul
dec
fdivrs
out
xlat
mov
push
mov
cmpsb
scas
or
aaa
mov
xor
push
push
shrl
clc
push
mov
lahf
into
clc
stos
jecxz
mov
sub
cltd
nop
les
cmp
adc
push
scas
jl
xlat
dec
mov
loop
ret
sbb
out
xchg
sbb
aaa
popf
cmp
mov
push
jecxz
xchg
push
and
cltd
fs
dec
sbb
lret
push
pop
adc
bound
cld
icebp
lods
out
andl
loopne
mov
js
test
in
shrl
call
insl
in
mov
sub
pop
mov
iret
sub
jmp
or
imul
jl
popa
inc
or
cmp
aas
jne
mov
sarb
arpl
sbb
hlt
xchg
adc
sub
sub
fs
push
les
mov
pusha
aam
or
ljmp
xlat
gs
scas
sbb
iret
popa
or
dec
jbe
outsb
and
pop
pop
cmpsb
cltd
in
loope
dec
sbb
aas
daa
and
dec
das
sub
jne
jns
push
es
daa
mov
out
inc
daa
xchg
xor
cli
std
inc
xchg
xor
out
repz
sub
mov
and
adcb
lret
fistps
inc
movsb
mov
jmp
pop
ja
imul
mov
loope
lods
dec
popf
xchg
insl
mov
mov
sub
dec
push
pop
mov
sbb
nop
jmp
bnd
sbb
mov
or
movsl
xor
jbe
test
frstor
mov
or
loope
call
loop
xor
push
xor
daa
popa
sbb
sub
mov
or
int3
arpl
aaa
sub
fadds
inc
movsb
call
enter
arpl
sub
leave
orb
pop
nop
lret
adc
jbe
xchg
mov
sarl
stos
lret
repz
cwtl
stc
sub
jbe
mov
je
dec
das
lret
jp
in
cli
mov
add
int
adc
insl
aaa
ficompl
add
ja
js
and
cmpsl
movsl
in
xchg
push
mov
mov
popf
xchg
or
pop
mov
les
sub
xchg
mov
pop
push
mov
cmp
decl
mov
adc
lods
mov
add
ds
lods
sbb
enter
add
and
mov
xor
xor
dec
jb
pop
cmp
lret
fnstenv
fsubrl
dec
test
pop
jnp
and
push
push
das
fidivl
loopne
into
rorl
shrl
adc
shrd
xor
mov
cmp
rolb
cmp
loop
iret
xchg
lret
jge
cmp
mull
mov
dec
xchg
xlat
push
mov
fxch
fcompl
cmp
cmpsl
aas
ljmp
sub
mov
repnz
testl
add
mov
xchg
mov
cld
aam
dec
notb
clc
pushf
shlb
int3
andl
cmpsb
gs
mov
sbb
dec
out
xlat
decl
fwait
mov
adc
and
sahf
movl
cmc
push
push
cltd
or
test
and
cltd
inc
int3
repz
add
loop
addl
mov
lret
jmp
xchg
add
scas
mov
addr16
movsl
in
movsb
mov
xchg
scas
movsl
mov
ret
pop
in
push
adc
cmp
jmp
xchg
jg
ds
scas
mov
mov
pop
jo
test
cmp
ljmp
jmp
mov
cli
push
mov
and
int3
icebp
pop
or
imul
fsubl
xchg
iret
stos
insl
mov
xchg
outsb
xor
pop
and
ljmp
ljmp
sbb
sub
xlat
sbb
fmull
subb
test
or
mov
int
mov
lods
adc
inc
and
in
fistl
leave
into
jb
xchg
jo
mov
aad
fldcw
push
cmp
in
and
or
inc
and
pop
call
mov
push
mov
cld
data16
lock
stos
fcomip
stos
xor
lret
sbb
mov
mov
sbb
inc
imul
push
jl
test
test
pop
and
jl
lock
mov
mov
mov
mov
out
inc
push
jb
hlt
test
or
fwait
mov
dec
test
test
xor
dec
out
cmc
mov
adc
negb
push
pop
jbe
add
sub
cwtl
in
adc
jno
or
push
sarl
xchg
pop
adc
dec
xor
fiaddl
mov
mov
cmc
adc
mov
test
mov
mov
fcompl
mov
xchg
jp
aaa
pop
sbb
insl
rcrb
sbb
inc
aam
dec
mov
leave
pop
push
inc
adc
adc
fwait
pop
add
je
xor
sahf
mov
sti
popa
push
mov
sbb
ljmp
fistpll
sub
call
sub
int
outsl
xorb
or
xchg
fidivrs
mov
lret
mov
jno
cmp
mov
test
daa
fmuls
sahf
dec
test
stc
pusha
data16
orb
in
out
mov
and
loopne
imul
lcall
or
pop
test
enter
jp
ss
test
loopne
and
sbb
add
cltd
mov
cmp
movsbl
shrd
sti
jne
sarb
notb
loop
pusha
andw
stc
je
inc
pop
cwtl
test
jg
fsubs
sub
inc
inc
mov
sbb
and
mov
cwtl
punpckhwd
je
ret
or
xor
xchg
cli
inc
add
insl
dec
out
idivl
and
in
dec
icebp
pop
fisubrs
sub
lds
sbb
subl
xchg
or
adc
popa
mov
jecxz
mov
adc
cmp
jae
lds
xchg
xchg
dec
cmp
das
jnp
enter
mov
out
cmp
iret
jl
loop
mov
xchg
lcall
inc
add
sbb
or
addr16
fnstcw
pop
pushf
jmp
arpl
daa
ja
adc
push
push
jp
jne
dec
sbb
xorl
mov
data16
inc
sti
movsb
dec
lret
xchg
sbb
insl
sbb
jns
out
mov
cwtl
out
in
cwtl
mov
call
push
dec
rol
jo
ds
push
int3
in
pop
mov
jb
xchg
rcl
in
test
jge
push
jmp
add
jb
mov
dec
sti
lret
push
pop
idivl
frstor
out
mov
into
in
imul
in
iret
xor
popa
cmp
pop
mov
lcall
into
xchg
out
inc
aad
add
sbb
popf
das
or
clc
dec
xor
out
jae
mov
inc
ret
popf
adc
fildl
jg
aad
dec
daa
xchg
frstor
push
xor
cmp
inc
adc
scas
dec
scas
xor
lods
lcall
xor
inc
aad
inc
add
jl
repnz
pop
int3
in
mov
inc
inc
and
std
dec
gs
sub
push
in
add
lds
insl
arpl
push
and
nop
push
jnp
mov
sub
cvtpi2ps
out
fidivl
xor
pop
sbb
jne
stos
sub
lds
js
sub
dec
mov
in
jle
mov
sub
outsl
push
aaa
stc
jmp
jle
xchg
sub
cmp
jns
mov
popf
leave
lahf
fwait
cmp
idiv
ljmp
shrb
cmp
add
xchg
sbb
pusha
and
and
push
lods
jo
add
jb
inc
iret
mov
lret
data16
sbb
call
dec
nop
outsl
adc
loope
sbb
pop
xchg
mov
idiv
adc
rorl
mov
xor
mov
xchg
jg
stc
jnp
mov
cmp
inc
out
jo
cmp
movb
add
outsl
push
cmp
xchg
push
es
out
inc
js
sahf
fucomip
das
jno
pop
push
mov
inc
adc
ljmp
lock
mov
shlb
dec
mov
sub
inc
popf
cmpl
andl
xchg
int
cmp
loope
inc
fimull
xchg
jecxz
jb
lods
out
rorl
cmp
jecxz
cmpl
cmp
inc
jecxz
adc
call
subl
fs
pop
sbb
and
jmp
cmpsl
mov
dec
ret
cs
in
sbb
mov
adc
pop
ds
jg
xchg
mov
into
mov
mov
adc
out
into
outsl
push
sub
xorl
add
cld
mov
les
jnp
imul
mov
and
rcll
cmp
jl
in
adc
cmp
or
movsl
xor
dec
sbb
sub
and
pop
xchg
movsb
and
mov
dec
pushf
cmp
pop
nop
cmp
dec
or
pop
shrb
sub
mov
inc
ret
les
dec
push
mov
outsb
out
movsl
cmp
stc
adc
and
or
ja
iret
jg
add
jg
pop
ss
hlt
mov
mov
dec
push
and
mov
rclb
fisubrl
jnp
int
or
aad
in
push
push
push
shll
scas
push
push
jmp
aaa
iret
cmp
mov
cld
mov
test
mov
jle
icebp
dec
cwtl
test
mov
mov
out
mov
and
int3
add
stos
shl
ret
data16
jmp
sbb
mov
xor
jle
pop
dec
fcmovu
call
adc
es
les
call
ret
mov
pop
push
scas
jp
and
mov
or
jb
aaa
or
xor
pusha
cltd
insl
jo
data16
je
std
imul
mov
or
and
add
fyl2x
or
dec
in
stos
jl
add
jmp
dec
add
hlt
dec
addr16
daa
sbb
inc
jecxz
popf
fwait
dec
lret
std
xchg
mov
aam
loopne
scas
loopne
mov
mov
jae
mov
out
daa
fcoms
and
inc
push
shll
popa
cmp
pusha
dec
les
mov
xchg
mov
push
aas
adc
jle
mov
shll
mov
insl
test
lock
stc
jo
and
mov
out
inc
jp
xchg
repz
mulb
iret
int
xor
xor
sbb
jno
sbb
sub
adc
sarl
jae
push
and
fs
lret
push
clc
shr
adc
sbb
push
jne
testl
imul
test
mov
xorl
cltd
jl
cmp
xor
dec
fwait
pop
push
jnp
xchg
sub
stos
sti
gs
mov
cmpl
repnz
xchg
xchg
sub
test
ds
push
inc
or
js
jno
mov
inc
push
lods
jns
ret
cmc
push
in
lods
popa
popa
jl
push
inc
xorb
and
pop
mov
insb
and
iret
out
test
sub
in
push
xor
fstps
add
sub
pushf
ds
adc
jmp
jmp
fistpl
mov
sbb
xchg
imul
icebp
cli
scas
mov
push
mov
or
jecxz
les
sahf
mov
lcall
sub
out
inc
cmp
mov
ljmp
sbbl
enter
bound
jo
sub
jp
stos
movsl
nop
mov
jecxz
sbb
movl
mov
gs
push
cs
mov
mov
inc
fucom
lea
leave
inc
rcrl
in
rcrb
dec
aas
jae
inc
mov
push
lock
mov
test
popf
dec
cli
call
std
push
scas
ds
addr16
aaa
outsb
or
mov
clc
adc
test
mov
repnz
test
mov
inc
inc
aad
jne
cmp
xchg
add
mov
fdivl
adc
out
cli
push
insl
sbb
adc
cmp
in
fcoml
xchg
pop
pusha
xor
cs
jae
fstl
push
pop
shll
mull
mov
mov
xor
fs
jns
cmc
pop
loope
jle
and
sub
jnp
std
mov
roll
sub
aam
stc
insb
dec
fimuls
jbe
pop
adc
cli
add
and
in
fldl
xor
cld
push
aas
outsl
bndstx
mov
fists
add
mov
add
dec
out
sbb
les
pusha
sahf
adc
push
adc
int3
mov
push
test
mov
mov
call
xchg
push
fcompl
xchg
fwait
arpl
fcom
mov
sahf
mov
xor
sub
xchg
mov
mov
cmp
pusha
fwait
inc
xchg
movb
and
jo
xlat
inc
cmp
or
inc
pop
test
insb
dec
mov
test
mov
cs
push
jmp
sub
andl
cmp
mov
shrb
mov
popf
mov
mov
add
mov
xchg
lods
icebp
sbb
add
jge
xchg
add
roll
add
das
aam
xchg
ljmp
pop
inc
ljmp
cmpsl
mov
flds
adcb
subl
adc
add
xor
mov
push
stc
fdivrs
jle
ss
test
mov
sar
cmpsl
das
ret
cwtl
ja
jne
in
mov
add
jg
out
pop
insb
shl
sbbb
push
xor
cmp
nop
js
rcr
sub
loope
fdivr
daa
icebp
jl
shlb
mov
sbb
ss
les
cmc
mov
xor
adc
stos
mov
icebp
mov
inc
es
in
push
dec
add
mov
xchg
push
outsl
es
add
pop
xlat
in
inc
loopne
lods
pop
bnd
out
mov
or
lods
or
jge
mov
aam
mov
adc
sub
add
xor
insb
call
mov
inc
outsb
sbb
mov
pop
scas
jnp
inc
inc
aas
int
mov
or
sub
jl
fadds
inc
js
sbbl
inc
enter
cld
cmp
push
out
mov
mov
push
in
push
mov
push
or
leave
jp
out
int
arpl
iret
mov
aaa
fwait
pushf
insb
fsts
sub
sub
fmuls
sbb
test
mov
js
mov
fdivs
fsubl
pop
loope
cltd
es
sub
test
mov
mov
and
adc
and
inc
xor
xchg
in
adc
faddp
mov
and
pop
and
rcll
jno
xor
adc
cwtl
pop
cli
xchg
mov
daa
jns
fwait
adc
mov
jmp
mov
xor
and
xchg
jl
jno
or
cmp
xchg
in
jg
hlt
in
mov
into
sub
pop
ret
pop
mov
pop
inc
adc
lea
push
jo
mov
arpl
dec
inc
mov
std
scas
mov
or
jp
outsl
mov
ss
cli
pushf
push
and
cmpsl
enter
cmpsb
or
aad
nop
jns
cmp
scas
sti
push
xchg
adc
cmp
movsb
jge
scas
decl
dec
xor
mov
sahf
mov
and
xchg
das
lcall
adc
add
fimuls
gs
jae
test
ror
ds
cmp
jb
jnp
add
mov
jl
jnp
ret
add
jo
pop
mov
out
ss
jmp
jmp
addr16
nop
scas
mov
cmp
xor
les
std
mov
cmp
ja
orl
dec
push
or
push
add
add
mov
xor
adc
xor
or
xlat
sbb
repz
popf
adc
pop
xor
stos
jb
push
lahf
jecxz
and
xchg
or
nop
jb
pop
sbb
pop
insb
pop
insl
add
mov
dec
mov
cs
cmp
loope
in
jne
sub
push
push
pop
mov
cmpsl
out
das
bound
das
mov
xchg
fisubl
rclb
mov
ret
pop
outsb
scas
sbb
imul
jnp
daa
mov
cli
pop
into
mov
sub
aas
pop
or
bound
out
lcall
in
shl
mov
pop
pop
jno
sub
mov
mov
sbb
mov
rorl
std
sub
vmptrld
loope
fistps
iret
sub
mov
scas
outsl
js
pop
sbb
dec
cmp
xlat
into
out
mov
lock
push
adc
faddl
fstl
arpl
adc
or
pop
lret
out
mov
mov
out
xor
cmp
inc
jmp
push
pop
dec
sub
mov
jl
stos
lods
out
add
test
pop
aad
scas
cmc
push
mov
ja
jge
fwait
not
nop
mov
cs
ds
mov
or
repz
and
jne
mov
inc
cmp
push
cmp
orl
xchg
sbb
jp
fwait
push
pop
or
iret
test
addr16
xor
pand
ljmp
fwait
mov
sbb
insb
pop
xchg
xchg
mov
loop
popa
and
dec
mov
push
call
or
movsl
sbb
xchg
adc
ret
push
hlt
addr16
out
imul
movnti
lahf
mov
mov
or
cmp
out
mov
push
pop
or
clc
pop
cmpsb
pop
popa
aas
test
push
pop
les
jle
repnz
cmp
xchg
push
mov
and
test
cmpsl
fisubrs
adc
movsl
mov
mov
jmp
int3
std
jnp
roll
dec
pushf
repnz
pop
int
in
fnstenv
inc
and
xchg
pop
pop
push
lret
jecxz
jns
popf
dec
push
cmpsl
test
aam
cltd
mov
imul
pop
sbb
mov
dec
lock
mov
mov
push
dec
push
lods
bound
loopne
pop
aaa
bswap
adc
into
test
mov
push
dec
stos
inc
mov
inc
ss
clc
sbb
push
cmp
push
adcb
out
ljmp
sbb
pop
cs
mov
cmp
lret
cmpl
lds
je
or
and
movsb
idiv
and
mov
les
dec
stc
in
hlt
sub
shr
pop
leave
inc
pop
iret
dec
cwtl
aaa
decb
xor
pusha
ss
rolb
or
jp
clc
les
imul
gs
jno
dec
ljmp
add
mov
addb
into
lret
frstor
outsl
stos
faddl
xor
ljmp
in
sarb
adc
roll
xor
push
cmp
mov
sub
xchg
cmpsl
pushf
sub
or
fwait
mov
jmp
shl
inc
fcoml
out
jb
dec
jnp
and
lret
mov
lock
dec
imul
out
insl
push
mov
push
pop
pop
sub
movsb
hlt
jge
push
adc
cmp
loopne
out
cmpsl
loope
mov
sahf
xchg
out
and
cwtl
adc
adc
or
jne
push
jg
aam
pusha
adc
inc
mov
sub
daa
jle
or
into
mov
aad
pop
jns
push
jns
imull
scas
xchg
xchg
lahf
dec
lcall
pop
lds
and
jecxz
inc
sti
decl
sub
hlt
bnd
sub
push
int
sbb
sti
sbb
xor
cwtl
mov
cld
fldenv
mov
jle
xor
data16
fnsave
jle
clc
cmpsl
in
xor
popa
call
in
data16
bound
sbb
lods
aas
inc
ret
rorl
fdivs
add
aad
test
push
pop
and
sbb
fs
test
aam
adc
clc
pop
pop
mov
push
push
sbb
xor
xlat
mov
xchg
daa
push
imul
int3
stos
punpckldq
xchg
mov
pop
aaa
xchg
push
dec
in
add
test
xor
js
sub
cmp
ja
xchg
std
icebp
inc
pop
jle
cmpsb
add
xlat
nop
fidivs
out
movl
enter
icebp
lret
movsb
push
ljmp
mov
shrl
mov
out
icebp
mov
shlb
ljmp
stos
jge
cmp
testb
push
outsb
mov
xchg
clc
inc
inc
aaa
test
fistl
or
mov
pusha
push
rcl
cmp
mov
xchg
xor
sub
inc
and
add
mov
jns
xor
pop
rclb
aas
or
fsubrs
mov
dec
and
fisubrs
int3
mov
jmp
in
cmpsb
fwait
lds
ds
aad
lock
adc
cmpl
jp
test
and
dec
mov
into
addl
inc
mov
and
xor
test
insl
add
mov
arpl
adc
and
ret
repz
xor
ret
xor
imul
clc
inc
les
fstpl
imul
and
mov
out
jb
mov
enter
jne
cs
mov
adc
inc
sub
jecxz
stos
int3
int3
adc
push
popa
fnsave
dec
popf
mov
sub
xchg
dec
jae
dec
outsb
js
test
push
dec
outsl
repz
push
xchg
fildll
xor
test
xchg
neg
scas
push
add
dec
sti
dec
clc
pop
out
int
out
jmp
inc
jo
pop
xadd
nop
pop
mov
mov
rcrb
add
sbb
test
jge
aam
add
cmc
test
pop
cmc
adc
jo
jmp
mov
dec
jmp
dec
mov
pop
daa
or
xchg
mov
cltd
xor
subl
push
ljmp
jae
fbstp
inc
mov
mov
not
pop
aas
jns
je
lret
and
push
mov
cmpsb
mov
nop
in
outsl
in
insb
push
inc
cmpsl
or
push
push
sti
lret
sub
in
fwait
pushf
lret
nop
xchg
jl
loope
fildl
inc
movsb
xor
mov
sbb
mov
xchg
cmc
xchg
das
popf
adc
cld
icebp
rcr
mov
shl
repnz
out
xor
popf
adc
jo
pop
push
addr16
cmp
mov
and
sub
sub
adc
pop
test
jno
std
lods
movsl
mov
jge,pt
imul
loopne
jo
inc
imul
pop
mov
in
shll
xor
xor
testb
jbe
lods
cs
xor
pop
ss
push
sub
xor
xchg
cld
xchg
and
enter
xchg
gs
jmp
lret
mov
xchg
cld
jne
rcr
outsl
cwtl
pop
movsl
jbe
push
mov
lods
mov
jge
push
imul
lods
jp
sub
es
testb
aaa
jp
lret
fsubr
jns
adc
lods
sbb
popf
rcrb
or
ror
divb
push
mov
lods
fcomps
xchg
mov
mov
fsubrl
fadd
adcl
pop
jl
aas
pop
mov
jl
in
mov
adc
stos
addr16
in
sbb
sub
orl
das
mov
out
adc
punpcklwd
cvttps2pi
mov
push
cltd
loopne
add
out
pop
push
cs
jg
mov
xor
mov
loopne
sub
lds
sbb
mov
mov
pop
mov
out
xchg
pop
insl
mov
lods
mov
ret
xorl
fs
ret
stos
in
fidivrs
push
nop
loope
jl
inc
loopne
adc
mov
or
pushf
sub
add
arpl
jecxz
fisttpll
pop
cmp
xchg
sub
mov
pop
push
dec
lods
mov
xor
sti
dec
test
push
xor
push
xor
jmp
nop
test
mov
loope
ds
jle
cs
push
pop
inc
rclb
jl
aaa
movsb
mov
add
pop
and
popf
in
xlat
cmp
fldl
pop
adc
mov
test
test
mov
push
sbb
notb
in
stc
insl
jg
movsb
sub
arpl
adc
sbb
cmp
jp
loop
movsl
dec
cmp
fstl
inc
xor
ficompl
or
mov
or
cmp
int
cmp
xchg
imul
out
sbb
cmp
pop
cltd
lahf
and
xor
inc
sti
xchg
mov
sbb
gs
xlat
lret
xchg
cmp
mov
lds
or
mov
adc
mov
das
imul
fdivrs
xlat
dec
push
cmp
xor
push
sub
int3
push
push
mov
xor
pop
xchg
cltd
xchg
repz
xchg
fs
inc
addr16
lea
cmp
dec
ja
inc
lahf
call
enter
in
mov
or
push
sbb
aam
retw
iret
outsl
lret
cmp
and
scas
aad
mulb
adc
cmp
and
in
test
dec
xchg
int
sbb
cmp
in
rcl
icebp
cmpsb
dec
dec
mov
pop
mov
inc
test
push
jmp
push
fisubrl
jl
xor
lods
lcall
add
outsl
std
xor
popa
and
dec
imul
enter
gs
cmp
test
mov
dec
adc
loopne
xchg
movsb
pop
inc
sub
insl
xlat
adc
out
outsl
dec
xchg
cld
cli
daa
push
sarl
and
mov
insl
sub
or
mov
ret
rcrb
push
iret
sub
test
inc
fstpt
cmp
mov
fisttps
push
mov
mov
fwait
insl
jns
push
xor
xor
adc
pop
dec
test
xchg
outsl
insl
pop
add
test
fiaddl
mov
push
or
inc
jo
addr16
repz
aaa
loope
enter
fcoml
adc
cmc
xchg
cwtl
jb
jno
fnstenv
out
cmpsb
pop
nop
aad
cmp
into
sarl
jmp
bound
dec
fsub
dec
mov
je
mov
jb
bnd
inc
pusha
cmp
mov
and
sbb
hlt
inc
mov
pop
mov
shll
mov
adc
stos
push
pop
not
pop
adc
cwtl
xchg
aam
repz
loop
dec
hlt
mov
and
adc
lret
div
sbbb
out
ret
call
cmp
push
lea
pop
push
rclb
testl
sbb
cmp
subl
icebp
push
adc
cmp
not
out
push
ss
sti
mov
in
popf
add
mov
push
shlb
enter
mov
flds
test
outsl
iret
adc
mov
lret
out
fdivl
sub
dec
dec
sbb
mov
repz
lret
int
cs
adcl
and
lret
aad
add
sarl
lcall
mov
stos
cmp
fisubrl
jb
inc
pop
adc
ljmp
push
xchg
scas
and
xor
adc
stc
neg
das
adc
sbb
insb
push
orb
xor
lea
sbb
movsl
je
mov
aaa
pop
rcrb
gs
faddl
sahf
jmp
cmpsl
mov
mov
into
xchg
pop
jl
imul
cmp
clc
lcall
lock
jne
push
scas
fmulp
aam
dec
push
out
inc
sub
cmpsl
mov
jb
ss
jle
push
xor
int
dec
pop
inc
and
pushf
hlt
in
jne
dec
xor
pop
pop
or
out
fstpt
sarb
ret
and
std
push
push
xor
mov
push
fimuls
jne
pop
pop
sahf
loop
andb
xchg
insl
and
pop
ret
jo
mov
daa
mov
daa
inc
stos
and
rcll
testl
out
push
dec
pop
scas
add
push
pusha
pop
push
fwait
leave
aas
lds
movsl
add
rcr
testl
test
dec
int3
xchg
or
xchg
imul
out
add
lret
cmp
aam
and
pop
cmp
and
jno
stos
and
mov
lods
lcall
clc
aas
mov
popf
and
jle
aas
push
clc
scas
les
inc
pop
or
sub
sarb
mov
mov
jns
mov
sbb
add
pop
jl
orl
lds
dec
mov
xor
jb
aaa
sub
pop
shlb
test
and
sbb
cmc
out
or
pushf
push
lods
mov
dec
repnz
push
pcmpeqw
mov
fsubrl
les
push
and
pop
mov
pop
divl
adc
add
out
orl
test
out
in
shll
push
dec
stc
mov
imul
xchg
or
loopne
or
mov
sub
adc
sub
sub
push
lods
jbe
pusha
jle
lahf
push
stos
lahf
xor
dec
in
jne
sbbl
add
cmp
rorl
dec
out
xor
out
repnz
sub
movsl
stos
inc
sbb
push
in
dec
in
clc
jbe
clc
fimuls
jo
in
xchg
lock
pop
mov
ds
cmp
cmp
iret
push
mov
jno
mov
mov
rcll
mov
out
and
ss
js
jno
aas
dec
std
test
jle
xchg
insl
mov
mov
ljmp
inc
fwait
or
fcompl
or
movsb
adc
aaa
sub
fisttpll
mov
mov
and
addl
out
adc
jecxz
dec
adc
arpl
or
xor
pop
mov
mov
push
sub
cmp
jbe
sbb
jno
int3
or
jmp
jns
outsl
aad
insb
lahf
test
les
mov
sbb
or
arpl
std
arpl
jmp
mov
pushw
cmp
outsb
imul
push
int
dec
inc
int3
gs
addr16
mov
xor
xor
pop
sub
pop
ret
mov
insb
push
aad
mov
sub
dec
std
mov
shll
inc
jmp
add
and
mov
adc
push
xlat
and
std
in
xorl
gs
or
pop
cmp
ret
pop
jnp
jecxz
pushf
mov
push
mov
adcl
push
xorb
imul
mov
jns
out
cmp
jbe
ljmp
cmp
nop
js
test
mov
test
loope
gs
xlat
xlat
cmc
std
ret
hlt
popa
push
mov
and
lahf
mov
ss
sbbb
cmp
mov
sahf
in
das
push
cld
dec
pushf
imul
jecxz
js
mov
and
add
dec
stos
in
sahf
sbb
push
push
sarl
and
jae
imul
popl
sti
and
jo
pop
insb
sbb
sarl
cld
jb
xor
xlat
int
std
add
mov
xchg
xchg
cmp
and
shl
js
call
sbb
mov
pop
inc
adc
sti
das
aas
mov
hlt
int3
xchg
pop
mov
scas
xor
cmp
shrb
sub
pop
call
subl
mov
add
outsb
loop
shr
cmpsl
push
push
lds
push
dec
or
cmc
push
cs
push
xor
cltd
mov
popf
lods
inc
adc
pusha
push
cmpl
jne
mov
es
jl
push
fnstcw
lock
lods
nop
xchg
mov
in
sub
adc
add
jbe
jmp
jle,pt
jmp
inc
test
mov
sub
cmp
pop
nop
xchg
adc
test
push
xor
mov
cmp
fstps
int
push
jbe
dec
enter
sbb
popa
push
in
xchg
insb
aad
fs
mov
stos
mov
jo
clc
in
mov
sbb
dec
pop
adc
cmp
insl
jno
insb
or
cmpsb
cmp
and
mov
imul
add
test
in
push
or
mov
mov
sbb
sahf
ret
adc
out
push
data16
outsl
insl
js
les
xor
iret
lcall
and
adc
rcrl
mov
addr16
cmp
or
cltd
addb
jl
scas
jl
aam
cmp
push
in
jl
and
or
cmp
xor
or
sbb
xor
xchg
int3
dec
data16
pop
mov
repnz
mov
and
pushf
lds
push
gs
imul
sub
out
xlat
push
inc
push
mov
push
mov
roll
lods
inc
ds
stc
mov
jbe
lods
mov
mov
add
mov
add
mov
dec
test
jecxz
cmpsb
cmpsb
sbb
scas
dec
push
push
mov
shrl
add
add
jbe
sbb
popa
fildl
call
push
dec
xor
jp
out
shll
adc
jmp
adc
mov
and
mov
or
mov
or
and
ret
outsl
lods
xchg
push
pop
mov
gs
mov
lret
xor
aad
inc
out
lret
inc
push
cmp
push
insl
mov
push
pop
popa
lock
shll
jge
add
mov
push
mov
cmpsb
pop
in
or
add
lock
jle
jmp
in
fdivrs
pop
or
adc
xchg
pusha
ret
icebp
in
mov
xchg
test
imul
dec
sbb
adc
in
in
pop
adc
sub
repnz
inc
mov
and
xchg
repz
pop
mov
jno
push
inc
dec
dec
ja
cmp
mov
test
inc
scas
dec
add
xorl
push
aas
rcrb
jmp
fidivs
clc
pop
pop
hlt
sbb
jnp
ret
and
out
ret
adc
bound
roll
xor
sub
pushf
xlat
lret
or
xor
lock
dec
sub
enter
xor
xchg
xor
jae
push
cmp
xchg
ja
dec
lret
xlat
clc
jno
dec
aaa
xor
mov
mov
out
and
jmp
aaa
lea
sti
ds
mov
jns
sar
or
insl
and
fwait
pop
adc
push
loope
sbb
lcall
mov
push
aad
out
jns
add
and
loope
cli
sbb
aas
ret
inc
bound
hlt
add
in
xchg
iret
pop
jmp
shrl
cmc
mov
xor
inc
scas
pop
push
clc
pushf
stos
cmp
scas
pusha
data16
adc
icebp
fcoms
outsl
aad
push
push
rorl
or
xorb
cmp
mov
in
test
lods
push
cmc
sbb
outsl
test
xchg
cmp
js
fsubrl
nop
xchg
sahf
inc
lods
or
imul
nop
inc
sti
lret
gs
jl
push
adc
xor
lea
inc
lret
mov
push
push
rclb
sahf
fs
scas
bswap
movl
mov
outsl
cli
clc
inc
xchg
ror
sub
ja
cmpsl
cli
jb
outsl
lcall
mov
or
mov
sti
mov
cmp
sbb
jns
sbb
repnz
adc
lods
inc
lcall
out
mov
inc
fldl
das
xchg
cmp
idiv
lods
lcall
push
scas
popf
push
or
aad
push
in
ret
xchg
lods
xchg
loop
aad
loop
jae
mov
je
in
jl
pop
xchg
loop
mov
sbb
outsb
jo
add
imul
rcrb
movsl
cmp
push
sub
mov
js
ret
fs
in
pop
cmp
insl
dec
out
sub
ss
popa
dec
add
pop
mov
daa
jle
shlb
sahf
mov
jmp
pop
mov
dec
out
pop
add
push
xor
dec
inc
outsl
scas
int
cli
ljmp
adcb
lahf
outsb
dec
mov
xor
dec
ficompl
mov
add
jp
push
or
fcmovu
inc
xlat
fidivrs
xor
or
inc
loope
jge
mov
cltd
add
pushf
lods
cmpsb
test
icebp
cmp
mov
push
fisttpll
xlat
jg
adc
mov
sbbb
std
imul
es
pushf
ret
les
in
mov
sbb
sbb
fs
sub
mov
addr16
lret
mov
repnz
insl
cmc
sbb
or
xchg
inc
add
add
aaa
cmp
leave
movsb
imul
data16
and
daa
cmp
xor
sub
cmp
outsl
enter
test
shl
fcomps
jl
fsub
cmp
mov
rcrb
pop
mov
sub
aad
mov
cmpsb
mov
cmp
lahf
jo
dec
mov
inc
xchg
scas
xchg
fwait
insl
out
aad
and
pop
jnp
les
sbb
call
push
adc
loope
add
movsl
test
push
scas
rol
orl
cmc
pop
scas
aas
dec
add
lods
push
adc
or
test
jmp
imul
mov
ret
cmp
push
sub
or
out
das
xchg
data16
cwtl
push
jb
jno
rcl
nop
pop
pop
lret
aaa
adc
imul
adc
test
mov
or
leave
stos
arpl
mov
push
pop
mov
push
lcall
fimuls
ficoms
sub
inc
mov
push
test
aaa
push
aaa
aam
mov
jl
pop
sti
lret
scas
pop
enter
punpckhwd
lds
sub
lds
xchg
or
xlat
test
cmp
cmpsb
push
arpl
lret
dec
push
dec
outsl
adc
mov
mov
jmp
jle
inc
mov
sub
jle
das
lea
mov
jecxz
js
push
or
imul
pop
cmp
lcall
sub
mov
push
aad
loope
stos
out
dec
jbe
push
xchg
loopne
in
sahf
testb
or
jle
xchg
sahf
pop
sub
dec
pop
dec
dec
lea
sbb
andl
fidivrs
inc
out
fnstsw
xlat
mov
cmp
repnz
push
lea
in
inc
jbe
jp
movsw
mov
outsl
sub
xchg
mov
ljmp
adc
mov
daa
jb
cltd
xchg
push
loop
push
mov
adc
lcall
push
test
xchg
movsl
xchg
outsl
pop
jb
jbe,pn
mov
jbe
std
out
test
jge
push
sti
jne
mov
int
sbb
adc
xor
ss
stc
adc
mov
vpsubusb
ret
data16
roll
out
imul
cmp
jl
push
and
xchg
mov
scas
sbb
aam
xor
loope
mov
mov
push
jmp
adc
mov
mov
dec
in
xchg
loopne
mov
dec
test
insb
fs
and
xchg
add
add
lods
jg
fmuls
mov
inc
xchg
lcall
sbb
pusha
mov
cmp
xchg
push
adc
mov
mov
jno
movsb
sub
fwait
sti
sbb
int
orb
insb
imul
sbb
dec
ficompl
aam
mov
pop
repz
lods
adc
ss
add
bound
jo
mov
mov
cmp
gs
jne
cmp
push
pop
shll
dec
push
mov
lock
mov
dec
jns
and
repnz
push
lret
es
cmp
loopne
push
cmp
movsb
or
mov
xorl
mov
mov
mov
mov
jb
push
iret
xor
mov
inc
jnp
xor
jp
cmpb
movsb
jg
jle
push
cmp
sub
ljmp
jmp
neg
xor
cmpsb
test
enter
mov
pop
dec
mov
imul
outsl
loope
mov
sbb
inc
push
cmp
mov
or
test
or
add
adc
lea
cmp
push
fdivrl
mov
jne
inc
mov
sbb
push
and
stc
stos
cmp
xchg
outsl
adc
leave
jp
test
subl
fcmovbe
fidivl
lods
sbb
jmp
and
mov
in
enter
scas
inc
push
mov
sub
mov
orl
insl
jo
movsb
fmul
lods
scas
test
outsb
fisttpl
mov
iret
out
icebp
xchg
test
mov
sub
outsl
divb
jmp
dec
inc
subw
rcrl
mov
or
lcall
add
les
das
clc
out
xor
test
gs
push
xchg
leave
adc
pop
sbb
adc
cwtl
scas
jl
nop
pusha
jge
icebp
dec
mov
pop
adc
jecxz
or
adc
mov
cld
and
or
outsb
lret
push
insb
lds
cmp
in
in
xlat
fnstcw
or
int
fldl
or
sbb
mov
insl
icebp
adc
daa
push
cmp
int
inc
sbb
or
mov
mov
call
xchg
in
xor
inc
aaa
loope
aas
mov
xor
mov
cmpsb
xchg
dec
lock
int3
and
inc
pop
jno
scas
pop
mov
test
call
xchg
fidivrs
repnz
mov
mov
lcall
push
jbe
repnz
roll
sub
add
mov
sbb
test
les
mov
jge
sbb
repnz
nop
xlat
jbe
outsl
push
jbe
mov
ds
and
xor
nop
lea
xor
ret
pop
adc
filds
int3
popf
pop
cwtl
add
pushf
xchg
out
sbb
int
aas
jecxz
jnp
iret
pminsw
mov
push
xchg
mov
lock
pop
cs
xor
fwait
imul
lret
movsl
jne
pop
test
and
xor
imul
out
ljmp
inc
int
outsb
mov
cmp
addr16
out
xor
pop
add
aas
xor
into
jns
sti
stos
pop
mov
pop
in
pop
push
mov
sbb
pop
test
pop
sbb
ret
divl
pop
lcall
imul
jae
or
call
or
movsb
jecxz
push
pop
and
or
ss
adc
sahf
mov
add
loope
push
push
insl
out
insl
hlt
mov
jns
pop
pop
shlb
or
popa
shll
mov
fldcw
sub
popl
or
xchg
or
mov
mov
stc
sbb
pop
xchg
loopne
add
sbb
jg
rolb
andl
pop
xor
ja
scas
cltd
and
aaa
mov
fdivp
or
movsb
out
adc
and
sarb
push
push
pop
negl
adc
xor
cmp
aam
mov
test
mov
or
mov
cmc
je
cmp
xlat
push
pop
orb
or
and
test
sbb
lods
xchg
pop
jle
mov
push
xor
mov
mov
pop
pop
pop
xorb
mov
rep
out
outsl
mov
mull
out
fldt
add
lcall
cmc
scas
jno
outsl
jnp
pushf
test
add
ljmpw
movsb
push
and
ljmp
pop
dec
jo
mov
mov
sbb
mov
add
inc
cmc
aas
pop
loope
mov
outsb
add
adc
les
das
je
add
push
ror
sub
insb
or
pop
mov
fsubl
fs
or
stos
outsl
dec
xchg
xchg
leave
mov
push
push
adc
loopne
adc
add
sbb
inc
sbb
movsb
imulb
xchg
mov
or
out
popf
and
jb
jne
outsl
add
mov
outsl
jo
popf
daa
and
pop
aaa
jo
mov
rorb
loop
test
cmpb
in
fldl2t
jp
jnp
sbb
js
jle
xchg
push
add
cs
shr
pop
nopl
stos
ds
adc
lahf
pop
negb
xchg
ret
or
xlat
xchg
mov
addr16
mov
xchg
ret
sbb
mov
add
loopne
sarl
pop
dec
jae
adc
sub
stos
mov
jo
out
jl
jns
xchg
fwait
push
add
inc
sti
push
xchg
test
jbe
jnp
cli
mov
cmp
aam
jns
jns
push
mov
mov
popf
mov
lahf
jb
dec
jecxz
daa
mov
lahf
outsb
mov
cmpsl
inc
add
in
dec
inc
push
cmp
stos
outsb
shlb
ficoml
mov
cli
int3
jae
les
into
adc
mov
data16
jno
rolb
xor
cld
push
xor
mov
or
ret
mov
dec
adc
rcrl
jnp
fsubr
push
and
or
push
add
pop
ret
jl
sub
scas
or
bound
ss
push
pop
push
and
xlat
adc
pop
push
loop
je
aas
mov
or
mov
sbb
pop
jecxz
aad
mov
icebp
or
mov
and
mov
jae
mov
dec
jl
mov
mov
dec
insb
daa
or
xchg
push
jnp
outsb
and
inc
sbb
sbb
sbb
daa
rdpmc
mov
push
daa
in
aaa
mov
lock
mov
jb
xchg
loope
jbe
xor
jae
stos
push
push
mov
leave
fldenv
icebp
and
push
fnsave
mov
daa
sbb
dec
inc
or
mov
bound
sub
xlat
inc
daa
cld
mov
daa
jb
add
push
sbb
dec
jge
lods
dec
xchg
push
jb
xor
jnp
dec
add
test
mov
mov
idivl
jmp
into
push
mov
sbb
dec
xor
adcl
pop
sub
ljmp
mov
mov
jp
iret
repnz
pop
subl
add
xchg
sub
add
pop
jp
mov
mov
lods
jecxz
adc
mov
and
lods
inc
jo
clc
bound
add
andl
inc
ja
fwait
andl
jnp
dec
add
nop
lahf
sahf
or
dec
push
std
mov
out
aad
leave
shl
movsl
lock
int3
ss
or
pop
jle
push
rcl
out
lret
divb
int3
or
fisttpl
mov
xor
pop
fwait
dec
mov
test
add
leave
inc
adcb
clc
les
add
mov
push
pushf
and
cld
sub
in
push
popf
or
pop
xchg
insb
sti
int
data16
lods
jae
imul
or
mov
add
jns
addb
repz
fdivr
inc
adc
mov
and
lods
sub
mov
mov
lcall
jbe
and
insl
add
push
push
pop
add
outsb
mov
int
stos
jmp
imul
bound
aad
add
in
xor
push
xor
cwtl
push
and
imul
mov
pop
mov
sub
push
fwait
sbb
mov
inc
cmpb
mov
je
mov
and
ljmp
loop
xor
mov
mov
mov
scas
mov
cli
subl
xor
test
xlat
xchg
cmp
xchg
leave
adc
dec
aad
outsb
out
outsb
addr16
cmpsl
inc
fcmovu
sub
stos
mov
outsl
ret
pop
cmpsl
xor
leave
pop
cmp
jne
sub
cmp
loopne
fwait
in
int3
add
inc
aas
std
shlb
sub
rorb
stos
or
aaa
jmp
mov
loop
mov
add
dec
subb
mov
and
jbe
das
push
and
dec
fwait
cmp
ret
mov
dec
js
mulb
add
push
xor
xor
add
mov
insb
mov
pop
xlat
stos
lods
int3
jne
push
cmpsb
xchg
pushf
stos
aaa
out
mov
sbb
sbb
and
jp
mov
mov
les
mov
loopne
imul
mov
shrl
xor
pop
in
pop
adc
jl
sub
jns
les
sahf
sub
mov
sbb
aaa
ret
or
jb
xchg
lret
mov
mov
add
pop
and
mov
sub
cmp
in
enter
out
pop
outsl
nop
push
pop
mov
das
mul
sub
xor
data16
sub
js
xchg
mov
mov
cmc
mov
fistps
jmp
jg
jo
test
add
repnz
pop
fistpll
xchg
jle
js
out
aas
fistpl
jno
loope
mov
mov
mov
int
jge
push
and
inc
pop
push
call
inc
or
imul
mov
orl
mov
and
aam
mov
xchg
gs
add
sarb
pop
mov
fisubs
sbb
xor
nop
fnstenv
jo
and
subb
repz
cmc
xchg
dec
out
pop
mov
push
mov
mov
sub
push
inc
fisttpll
pop
and
lahf
lds
mov
dec
ja
pop
adc
insb
flds
imul
daa
mov
outsb
inc
js
push
or
enter
push
fnstsw
ss
pop
pop
and
jb
adc
push
pop
add
push
sarb
adc
mov
mov
mov
inc
sub
rorb
dec
lret
mov
es
fucomp
sahf
and
lret
insl
jle
sub
xchg
shl
ljmp
mov
pop
out
push
data16
inc
sub
xchg
inc
xchg
dec
mov
lock
and
addr16
dec
cmp
dec
push
imul
ret
jmp
std
je
sub
jle
adc
sub
insb
mov
sub
mov
dec
loopne
fdivrp
lock
xor
fwait
cmpsb
lods
jae
pop
inc
repz
js
cld
jmp
push
mov
or
aaa
mov
mov
fildll
ret
sbbl
dec
push
out
mov
mov
ds
mov
jp
scas
cmp
push
mov
push
test
mov
xchg
jp
cmpps
xor
cltd
loopne
inc
mov
xchg
or
mov
loop
js
ss
fldl
xchg
call
push
xor
add
shl
les
pop
mov
lods
mull
jb,pt
aaa
pusha
dec
mov
add
cli
cld
sub
pop
pop
xor
mov
sti
mov
inc
mov
or
in
cld
sub
cwtl
mov
mov
lret
mov
fldt
inc
popa
lret
xor
cld
jmp
js
mov
add
adc
popf
movsb
or
iret
and
add
adc
into
mov
gs
cs
lahf
test
pushl
cmc
jle
in
dec
cmp
out
lea
jno
repnz
fsubrp
in
sub
andl
cli
xchg
cmp
aam
fdivl
jbe
movsl
mov
mov
fldenv
out
repz
stos
pop
lcall
adcb
ret
scas
jg
subl
cmp
jg
loop
out
test
in
ret
icebp
cmc
test
pop
sarl
test
loopne
pop
jecxz
mov
xor
jp
repz
ja
cli
test
and
mov
dec
popf
loop
cld
icebp
sarb
push
repz
adc
js
jo
mov
fidivs
pop
loop
cmpsl
out
ss
xchg
dec
daa
shll
fadd
jecxz
test
jg
xor
out
xchg
push
decl
in
push
addr16
cltd
or
sbb
repz
fcomps
mov
jbe
cmpsb
ficomps
pop
and
das
jmp
and
pushf
and
or
testl
xlat
or
adc
jb
fstps
adc
mov
push
inc
dec
lret
jb
sub
fldcw
pop
fsubrl
imul
pop
rcl
jae
jle
ret
pop
sahf
mov
xor
cmc
outsl
push
pushf
xchg
je
push
inc
nop
pop
shrl
or
push
out
jnp
loope
jmp
movsb
xlat
cmp
cmp
sbb
mov
int
fldenv
push
sbb
insl
stos
int
cmp
pop
rcrb
xorl
out
adc
insb
jno
and
adc
add
aas
in
xchg
test
insl
xchg
xchg
push
push
jb
fwait
pop
nop
in
shrl
lret
rclb
jbe
xor
xchg
inc
pushf
mov
cwtl
lock
orb
in
loopne
test
sbb
push
xchg
out
scas
pop
and
push
sub
xchg
and
sbb
mov
addr16
sbb
push
pop
mov
pushf
xchg
adc
fsubrs
imulb
push
add
or
pushf
cmp
dec
and
out
inc
push
imul
cmp
test
sbb
mov
js
icebp
pop
add
jnp
aam
dec
or
jbe
pop
popa
ss
push
xor
cmp
scas
fildl
jp
sbb
or
fiadds
dec
dec
out
inc
cs
sub
dec
xchg
sub
mov
fisttps
pop
cmp
addr16
xchg
pop
rol
mov
sbb
inc
push
inc
jl
xchg
mov
in
xor
adc
xor
ret
sub
frstor
jmp
push
in
push
iret
jne
mov
sti
cld
cwtl
xchg
xchg
mov
clc
pop
mov
sub
cmpsb
jae
pop
pop
and
add
mov
sahf
mov
scas
cs
divl
mov
hlt
jecxz
xchg
das
or
jmp
inc
xchg
dec
jno
incl
lock
mov
arpl
hlt
mov
aad
rclb
fisubrs
cld
in
sub
outsl
dec
cs
sub
hlt
mov
cltd
jmp
test
ficompl
test
fdivrp
int
notl
jo
xlat
or
mov
ud2
aad
xlat
lods
ja
std
push
sbb
mov
lds
sbb
outsb
jbe
mov
adc
popf
sbb
xchg
nop
jge
inc
mov
pusha
aaa
push
into
aad
aaa
push
sbb
icebp
dec
repz
push
ret
inc
xor
jle
mov
rorb
rcrb
dec
jmp
xchg
es
test
jno
inc
int
out
mov
call
das
cwtl
lock
inc
xchg
sub
pop
or
or
jp
dec
lret
jl
dec
inc
sbb
es
movl
add
aas
cwtl
mov
dec
iret
sahf
ja
into
arpl
mov
call
mov
in
jb
out
jb
mov
jbe
mov
xchg
jns
das
xchg
push
imul
and
mov
mov
fdivs
push
adc
xchg
and
idivb
out
sub
and
lcall
sub
dec
pop
lods
jp
mov
aad
addl
push
inc
lock
les
xor
jl
shll
dec
and
cmp
push
push
dec
jge
sbb
sar
fsts
mov
xchg
vmwrite
testb
mov
mov
movsl
push
mov
sub
fucomp
es
and
ret
push
mov
iret
mov
mov
call
ret
inc
std
les
data16
jne
jno
xor
in
xchg
mov
sahf
aaa
sub
push
and
scas
sahf
into
icebp
dec
rcrb
notb
fbld
lods
push
cld
js
or
int
shl
mov
inc
inc
jbe
xor
inc
std
lcall
or
sbbl
xchg
lods
fisubs
mov
into
aaa
leave
fsts
call
pop
mov
loope
movsl
sub
add
scas
aad
mov
inc
ss
jbe
inc
sbb
push
cmp
enter
lds
dec
and
pop
loop
shll
scas
dec
or
mov
inc
dec
push
int
outsl
in
enter
and
adc
cwtl
and
pop
bnd
xchg
adc
mov
sub
scas
pop
lret
mov
inc
hlt
adc
insb
jb
add
add
xchg
pop
pop
mov
sbbl
and
push
mov
xor
pusha
adc
je
into
int
pop
sbb
shll
mov
adc
sbb
cmp
or
cmp
xchg
out
xchg
xor
and
rcrb
mov
pop
aam
mov
lods
cmp
insl
add
outsb
shlb
push
sub
xor
pop
outsl
sbb
out
insb
stos
cmc
pop
push
xchg
adc
sub
cmpsb
cli
inc
pop
aaa
mov
hlt
dec
out
jne
adc
pop
xchg
mov
mov
lea
pop
xor
mov
xor
lds
scas
mov
cmc
repnz
jno
fs
inc
jle
or
lcall
adc
mov
int3
dec
mov
push
sbb
mov
xor
jl
aas
inc
or
push
arpl
xchg
hlt
mov
call
jle
inc
xchg
adc
push
leave
hlt
aas
arpl
add
adc
sahf
jmp
mov
popf
cmpsl
sbb
jg
or
insb
dec
mov
clts
mov
and
lcall
jp
fisttps
xor
aam
xor
aam
pop
jg
jb
hlt
lea
addb
xchg
out
les
pop
lret
test
ss
popa
ja
xchg
cli
mov
cmp
mov
jecxz
add
adc
or
cltd
test
daa
mov
out
push
mov
inc
pop
inc
aas
mov
inc
stos
stos
push
adc
js
adc
sub
mov
rorl
push
dec
cmp
adc
rorl
sbb
sbb
push
inc
fcompl
lahf
mov
inc
jge
lahf
je
dec
jge
add
cmp
ljmp
inc
add
test
ja
lock
push
pop
lock
add
ja
pop
lods
xor
adcl
arpl
mov
addr16
jp
jge
cmpl
outsl
jo
jbe
xchg
mov
rolb
xor
fstpl
cwtl
ss
xchg
and
xor
dec
cmp
fsts
lcall
pop
cmp
insb
xor
dec
add
jl
xchg
pop
lret
and
adc
mul
bound
aaa
xchg
xor
cmp
xorl
adc
daa
xor
stos
mov
dec
shlb
inc
andl
dec
add
ret
inc
push
push
add
dec
pop
or
push
push
in
cld
add
or
repnz
or
aad
aad
xchg
and
mov
lea
aam
mov
mov
test
mov
xor
push
jns
cmp
fld
adc
xchg
frstor
pop
enter
or
out
test
adc
xchg
pop
cs
add
movsb
mov
push
jno
aam
cmp
rorb
lods
in
jne
mov
popf
cmpsl
xor
and
mov
test
lock
je
test
dec
popf
mov
jns
ja
cltd
leave
cmp
dec
mov
repnz
shrl
shlb
sub
rorb
adc
clc
rcr
sbb
jnp
pop
mov
mov
xor
addr16
popa
cmp
rorl
imulb
pop
jg
ljmp
call
mov
pushf
outsb
fs
cs
pop
cmp
push
add
sub
stos
xchg
mov
lret
mov
xchg
push
call
cmp
stc
mov
popa
call
pop
xchg
xorl
jle
mov
outsl
imul
xchg
jp
inc
loope
lret
mov
sbb
add
jno
pusha
rcll
inc
push
das
and
cltd
fstpl
xor
sbb
push
aaa
sbb
push
sub
std
or
sub
pop
jp
xlat
sahf
sbb
jp
push
cmp
and
gs
sub
idivb
sub
shrb
dec
or
mov
icebp
adc
jne
repnz
ret
ljmp
xchg
rclb
sbb
sbb
pop
sbb
or
xchg
nop
push
mov
or
out
xchg
xchg
push
sbb
das
cmpsl
mov
pop
sub
cld
xchg
icebp
pop
xchg
pusha
xor
jns
test
data16
fwait
jne
xchg
inc
rcrb
push
dec
incb
scas
jle
sbb
fwait
jo
jae
mov
cmp
xchg
jne
sub
inc
ficoml
adc
mov
mov
and
lods
gs
jnp
sbb
out
add
test
stos
jbe
sbb
xor
push
dec
push
or
pusha
mov
and
aaa
mov
and
mov
enter
cmc
repz
push
notl
loope
out
jp
add
mov
fcom
dec
in
push
pusha
mov
inc
stos
inc
mov
push
xor
sbb
shll
int
lods
lods
ja
cmp
imul
arpl
jbe
arpl
outsb
loopne
cmp
sub
ljmp
mov
cmc
dec
xchg
sti
lock
movsl
js
and
or
push
jne
mov
int3
inc
lods
stos
lahf
add
adc
mov
sub
stos
cmp
mov
hlt
int
movsb
gs
adc
or
push
add
decl
push
cmpsl
pop
sti
sub
arpl
and
pusha
xchg
pop
fwait
or
inc
xchg
out
hlt
insl
pop
pop
das
jecxz
ljmp
cltd
add
mov
mov
std
sub
inc
inc
into
sahf
xchg
fs
lahf
sub
test
popf
test
stc
sbb
lea
add
pop
call
xchg
push
ficomps
cmp
sbb
lods
mov
mov
and
mov
imul
fld
mov
sub
stc
mov
in
stos
and
add
mov
cmp
das
stos
inc
in
xchg
call
mov
shrb
int3
sti
fcoml
loope
sub
xchg
xchg
loope
in
ror
fistps
dec
movsl
or
scas
fisubl
jle
xchg
lods
test
fsubrs
mov
lret
jmp
push
test
dec
and
mov
jnp
cmp
jge
sbb
enter
repz
rorb
ds
mov
popf
dec
cmp
lahf
mov
add
mov
mov
jle
jge
pop
push
ds
jnp
sbb
loopne
lcall
fsubl
les
daa
lret
notb
inc
jg
xor
push
and
mov
or
into
xor
push
mov
popf
bound
fdivs
push
mov
dec
out
insb
scas
nop
mov
sarb
mov
xchg
push
jae
ljmp
mov
mov
test
mov
cld
repnz
jo
cmpsl
mov
scas
and
movsl
dec
adc
dec
mov
aaa
push
jmp
ljmp
mov
into
stc
push
sub
in
loop
inc
sub
dec
lock
adc
lcall
pop
gs
divb
jg
out
jns
cmp
mov
inc
rcrb
mov
mov
jge,pt
cmpsb
mov
inc
lret
xlat
enter
dec
cmpsb
mov
ret
fs
or
inc
lret
dec
ret
pop
iret
popf
xchg
mov
inc
enter
js
xchg
fidivl
xchg
lock
out
inc
sub
andl
jl
inc
adc
lahf
aas
jge
xorl
loop
jno
cmp
sub
and
xchg
jecxz
xchg
xlat
push
add
inc
shl
or
xchg
fwait
aam
ret
push
adc
mov
dec
outsb
js
test
push
pop
dec
mov
mov
int
into
fstl
popf
repnz
mov
mov
add
lods
stos
bound
loope
js
inc
mov
pop
lock
pop
data16
les
insl
aam
call
fwait
xor
aad
xchg
enter
pop
xchg
insb
lds
pop
mov
add
add
ja
cli
jle,pn
call
xchg
push
mov
cs
ja
das
xor
into
xchg
jo
pop
inc
mov
jno
out
dec
mov
jecxz
xchg
shlb
sub
outsl
or
into
aad
out
or
lds
mov
in
ret
push
das
push
mov
sbbb
fwait
dec
lret
jne
jo
fdivr
imul
out
sar
push
jne
fstpl
sub
movsl
or
rol
ret
lods
sbb
adc
jl
int
cli
inc
int
xchg
cmp
fnstsw
repnz
mov
std
mov
pop
in
inc
inc
jno
dec
mov
movsb
mov
jg
jns
xchg
imul
jbe
mov
xchg
shrl
fst
push
mov
fs
nop
fsub
shrb
xor
lahf
pop
cmpb
lods
inc
sub
jo
cwtl
sub
ret
xor
fdivs
jno
stos
das
adc
inc
jge
js
jge
push
mov
pop
dec
cmp
push
jns
xchg
and
aaa
xchg
rolb
xor
xchg
or
pop
clc
mov
mov
rolb
jne
repz
aas
stos
inc
inc
fimull
lcall
out
shl
or
in
jmp
divb
addr16
call
mov
add
int
lcall
dec
cmpsl
testb
add
pop
int
push
pop
dec
les
mov
sbb
mov
mov
xchg
inc
mov
push
and
ds
xchg
ficoml
test
push
push
out
clc
jmp
lret
xchg
rorb
mov
out
mov
jecxz
jmp
lods
push
idiv
lahf
fldcw
add
movsb
cmpsb
inc
sub
filds
jl
cmp
movsl
mov
jle
test
clc
mov
rcll
jg
xchg
add
add
pop
xchg
dec
mov
pop
out
cltd
jnp
pop
leave
inc
push
cmp
mov
xchg
aas
inc
stos
adc
dec
xor
fucomip
cmp
sar
push
stc
nop
mov
ljmp
aad
loopne
or
stos
or
movsl
cld
cs
mov
enter
je
jns
ja
sub
or
sbb
xchg
lods
cmp
outsb
and
mov
xlat
adc
stos
mov
jnp
pop
cld
popw
cmc
pop
jne
inc
rcrl
jp
cwtl
pop
je
test
push
push
sub
in
sub
insb
or
mov
push
sbb
mov
xor
stos
dec
inc
fildll
movsb
jecxz
jmp
jle
shrb
ljmp
popa
and
int3
cmpsl
adc
test
ret
test
xchg
out
mov
cmp
and
es
movsb
lcall
out
mov
incb
mov
enter
rclb
je
insb
pop
cmp
push
aam
cmp
push
sbb
fistps
pushf
movsb
xor
or
out
sbb
push
push
insb
inc
or
test
jecxz
ss
xor
into
rcl
test
lds
ljmp
sub
push
pop
outsb
cmp
pop
ss
jmp
or
bound
xchg
jne
xchg
testb
xor
mov
adc
adc
cmp
and
loope
inc
mov
idivl
xchg
mov
inc
les
pusha
lea
sbb
pop
repnz
das
imul
add
sbb
cmp
insl
cli
push
cmp
add
fadd
insb
jmp
xchg
test
pop
xor
lods
mov
xchg
shrb
inc
sarl
add
push
fldt
shl
pop
je
aaa
mov
inc
arpl
adc
jge
cmpsl
insl
jbe
jns
imulb
fstl
and
sysexit
cmp
mov
xlat
add
js
mov
inc
dec
dec
loop,pt
test
lret
inc
sbb
mov
xchg
sub
or
pop
jl
mov
add
mov
enter
loopne
jb
dec
into
xchg
or
movsb
push
fnsave
or
jno
or
mov
lahf
ret
xchg
nop
aaa
pop
jnp
cmpsb
jo
jl
cvttps2pi
arpl
sub
rcrl
sub
shrl
hlt
icebp
cwtl
test
fimull
xor
iret
mov
fiadds
push
enter
push
mov
sub
clc
push
les
jb
xchg
mov
in
push
pop
jg
jge
jmp
stos
movb
lahf
fs
outsb
mov
mov
rolb
mov
pop
fldt
std
scas
xchg
fstpt
mov
shll
and
dec
outsl
cs
mov
dec
test
inc
inc
das
cmp
push
aam
cmp
es
xchg
fldcw
icebp
mov
mov
fistl
mov
rcrb
jmp
dec
jg
or
dec
dec
ja
mov
pop
mov
js
xchg
loopne
adc
adc
jge
jge
insl
sub
sbb
pop
arpl
or
adc
fstpl
add
inc
cmpsb
ret
cwtl
sbb
mov
jp
sbb
jmp
sahf
int3
inc
push
jns
pop
les
int3
lcall
inc
push
push
in
scas
cmpsb
les
aad
leave
dec
xchg
lock
mov
inc
inc
push
dec
jg
fcompl
or
lahf
mov
subl
mov
push
mov
mov
sub
jbe
mov
mov
sbb
sbb
xchg
stc
out
subb
lret
fildl
xor
add
pusha
adc
movsl
ret
jno
xchg
jl
cmpsb
data16
mov
adc
jmp
pop
hlt
adc
pop
push
mov
sub
pop
ja
jne
add
xchg
mov
jle
dec
int
mov
mov
sub
shl
lods
sub
loope
xchg
jl
data16
fsts
push
xor
xchg
shl
dec
mov
adc
add
jmp
imul
mov
inc
imul
ds
lds
int3
pop
adc
pop
or
adc
aas
mov
cmc
and
sti
jl
arpl
adc
jg
cmpsl
dec
dec
loope
jge
lahf
inc
push
jge
mov
jae
lret
jge
lahf
inc
pop
leave
in
sbb
jg
rorb
jnp
in
ficomps
jl
xchg
fs
sub
fisubrs
push
aad
icebp
scas
or
enter
movsl
fidivrl
ds
lods
xchg
add
cmp
push
mov
daa
popa
cmp
mov
mov
sti
lret
imul
hlt
push
lcall
js
js
push
pop
cli
xchg
mov
movsl
mov
cmp
dec
loop
out
jge
stos
es
add
push
sahf
dec
inc
push
mov
inc
jb
pop
cli
fistpl
cmc
adc
loopne
push
stos
in
lds
stc
push
enter
ljmp
out
insb
jo
aam
call
push
or
mov
mov
out
mov
call
fisttpll
or
loope
cmc
lods
push
and
push
sbb
pop
jns
sbb
sahf
inc
and
incb
arpl
std
pop
incb
dec
lea
clc
decb
push
pop
pop
xchg
pusha
pop
sub
jp
es
sub
sub
mov
and
or
xor
xchg
add
mov
and
xor
enter
pop
lret
aad
jmp
jge
jg
jecxz
or
adc
popf
adc
inc
shrl
test
daa
pop
push
cmp
in
popf
jecxz
xor
sbb
je
ret
adc
int3
roll
pop
mov
mov
addb
pop
std
ds
push
lds
mov
cs
jo
push
repz
daa
push
inc
mov
mov
dec
lret
mov
scas
rcr
pop
clc
xchg
mov
sbb
nop
push
push
inc
xchg
test
fcomp
jp
dec
mov
iret
or
xchg
bound
jno
pop
stc
ds
xchg
fcoms
lahf
cmc
push
pop
mov
in
xchg
bt
cmp
and
fs
ljmp
outsb
xor
std
mov
mov
lret
pop
ror
mov
js
mov
into
lcall
and
fstpt
mov
daa
ret
cmpsb
scas
xchg
add
repz
jnp
aas
sub
pop
enter
in
lock
mov
mov
scas
loopne
ss
cmp
outsl
icebp
mov
mov
inc
js
sbb
xchg
inc
lods
mov
movsl
mov
mov
cld
mov
pop
cltd
aam
cwtl
dec
mov
out
fists
loopne
sub
mov
loopne
cwtl
fimull
sub
mov
pushf
push
dec
fdivrs
fwait
sbb
jmp
pop
fwait
sbb
fisttps
scas
mov
cld
cmp
xor
pop
stos
mov
call
add
mov
xchg
pop
or
jne
sub
cld
xchg
adc
push
subb
xchg
fcomps
rolb
mov
lahf
xchg
pop
inc
inc
sbb
idivl
dec
add
add
xor
push
lods
pop
ret
test
inc
aad
pop
decl
pusha
sub
lds
push
push
xchg
repz
cmp
imul
pop
out
out
mov
pop
aam
in
inc
jns
push
xor
dec
jbe
dec
aaa
pop
pop
into
pop
pop
repz
lahf
adc
adc
push
ret
mov
xchg
mov
pop
xchg
outsb
and
xchg
pop
sbb
inc
adc
jnp
mov
imul
mov
inc
pop
mov
jne
scas
shlb
mov
insl
pop
xlat
daa
xor
push
mov
dec
jge
and
push
adc
push
adc
sti
gs
xorb
mov
stos
xchg
mov
mov
repz
pop
dec
or
push
mov
sbb
fldenv
lahf
cld
aaa
adc
mov
subl
lods
mov
lahf
jecxz
jno
cmp
pop
aaa
mov
fwait
dec
rcll
leave
ffreep
fyl2xp1
sbb
movsb
mov
out
es
push
pop
repz
je
cltd
mov
lods
pop
arpl
loopne
adc
xchg
sbb
mov
outsl
xor
dec
or
dec
xchg
nop
mov
cltd
push
repz
mov
icebp
sahf
in
sub
mov
jl
movsb
add
dec
std
cmp
mov
rcrb
or
inc
jbe
outsb
movsb
jnp
push
daa
mov
jle
divb
stc
and
rcrw
xchg
adc
in
jne
adc
or
and
sub
std
sahf
push
and
add
int3
push
stos
push
shll
iret
rorb
mov
cwtl
ror
int3
dec
rcl
sub
sbb
pop
jge
mov
enter
xor
test
iret
ret
adc
dec
sbb
fdivr
adc
scas
xchg
pop
push
pop
sbbl
dec
pop
scas
mov
ficomps
shll
or
cmc
scas
xchg
lahf
mov
pop
testl
pop
cltd
cld
call
push
lds
outsb
daa
push
jo
pop
in
mov
or
inc
rol
fnstenv
scas
aas
add
xchg
mov
and
mov
je
sbb
mov
sarb
pop
in
push
cmp
aaa
loop
mov
std
ret
push
andps
xchg
sti
out
dec
lret
imul
std
cmp
or
std
outsl
jge
cmp
mov
cmp
pop
scas
xchg
out
xchg
push
dec
jecxz
sbb
fwait
mov
imul
lods
jecxz
rolb
jge
dec
and
cmp
and
jle
aad
and
stos
mov
jmp
mov
fsubl
inc
mov
push
mov
mov
inc
cmovl
pop
and
lock
js
mov
je
dec
jecxz
ret
cmp
fsubrs
test
andb
mov
add
loopne
cmpsl
rorb
movsb
mov
das
in
jbe
cmpsl
push
popf
jbe
out
jno
cmp
mov
pop
dec
je
inc
cmp
jmp
mov
stc
dec
cs
fwait
inc
mov
cmp
repnz
pop
adc
push
and
push
lret
fsubr
hlt
test
fnstcw
xchg
rclb
outsl
sub
and
xlat
and
sbbl
push
aam
push
mov
dec
sbb
mov
adc
inc
mov
push
ja
fmuls
cmpsb
addb
or
inc
sub
pop
push
repz
add
negl
mov
test
stc
xchg
inc
cmpsl
jl
mov
inc
add
and
sub
add
cltd
push
fs
scas
sti
insb
sbb
jnp
fs
imul
in
add
push
jp
test
cmp
and
mov
inc
movsl
mov
icebp
test
insl
jne
cwtl
and
or
adc
or
fstps
push
adc
push
test
add
xor
pop
js
mov
lods
jo
pop
and
test
or
dec
mov
sarb
inc
js
addl
inc
out
jg
cmc
dec
mov
shlb
sbb
cmpsb
insb
psadbw
in
popa
xchg
lahf
popl
mov
ljmp
loope
inc
mov
sarl
arpl
std
inc
outsl
pushf
lds
xor
rorl
jle
addr16
insl
mul
repz
mov
adc
jae
push
lods
xor
loope,pt
push
inc
xchg
roll
cltd
sbb
and
int3
ja
xor
mov
or
xor
push
shr
jae
movsb
mov
mov
cmc
lcall
pop
sbb
mov
cli
fs
pop
push
mov
adc
pop
jg
pop
dec
repz
repnz
jl
popa
pop
sub
mov
out
cmp
scas
ds
out
call
ja
pop
jle
mov
sbb
out
pop
fsubrl
cmp
mov
mov
outsb
push
ficomps
fwait
jg
negb
mov
data16
mov
aaa
xchg
rolb
stc
inc
fwait
pop
rclb
dec
pop
scas
imul
xchg
stc
inc
cmc
lock
jo
dec
or
out
fnstcw
cmc
add
push
cpuid
inc
lock
mov
inc
sub
fcmovnbe
jl
aam
call
sbb
mov
push
sub
pop
xlat
push
scas
mov
and
sub
fwait
out
sub
adc
fwait
jb
popf
cmp
inc
cwtl
into
shrb
fwait
cmp
sub
pop
xchg
or
push
sbb
cmpsl
les
lea
fxam
icebp
out
dec
loope
insl
add
fbstp
adc
push
adc
out
loope
mov
fwait
mov
sub
sbb
jb
test
data16
insb
cmp
dec
jno
dec
mov
jnp
mov
mov
insb
fistl
aas
lods
sahf
xchg
clc
addr16
add
jg
mov
mov
je
ds
xchg
and
xchg
cmc
ds
mov
xchg
aam
lds
push
pop
pop
dec
inc
sbb
inc
and
push
stos
xor
lods
outsl
jae
sbb
push
decb
mov
xchg
lods
ss
jmp
sub
fiadds
clc
dec
je
lods
int3
inc
addr16
push
rcrl
popa
push
pop
movsb
mov
test
push
roll
xor
or
aaa
scas
pop
pushf
push
mov
push
pop
dec
pop
sbb
mov
sbb
mov
xor
or
fcmovu
addr16
sbb
sbb
cmp
stc
std
mov
mov
into
test
jmp
sahf
and
pop
pusha
mov
jo
mov
lret
clc
jne
jb
sbbl
inc
sub
call
mov
inc
fldt
lea
or
cmpl
repz
dec
shll
jecxz
out
jbe
repz
xorl
dec
stc
imul
pop
inc
adc
jl
scas
cmpsb
movsl
dec
cmp
dec
lret
cmp
xchg
pop
out
push
outsl
mov
sub
push
cltd
jl
cld
lods
loopne
or
mov
mov
popa
lods
pop
outsb
xchg
int3
mov
inc
fistl
sbb
push
mov
pushf
push
loopne
lds
dec
add
jge
ficompl
jmp
iret
pop
adc
inc
xchg
cltd
inc
cmc
negl
cld
jl
xchg
pop
hlt
jb
mov
jmp
mov
cmp
lds
ja
push
lock
xchg
adc
sub
out
fsub
mov
rolb
jne
test
add
aas
pushf
dec
ds
adc
xor
loope
lods
arpl
mov
movsl
lods
daa
xchg
cltd
test
cmp
repz
lret
outsb
cmp
adc
or
xor
mov
loope
cmpsl
adc
xor
fwait
sbb
or
sub
movsb
repnz
cmp
fwait
in
sub
lret
out
popa
xor
js
ret
leave
aaa
int3
in
cmc
lcall
mov
xor
pop
and
pushl
scas
pop
adc
jl
fsubrp
mov
add
adc
cwtl
sbb
sbb
jne
jle
add
jo
js
test
lods
ret
xor
jb
push
lahf
xor
fidivrs
xor
mov
mov
adc
into
xlat
cmp
sarl
movsl
cmpsb
push
test
lret
dec
andl
ds
mov
cmp
cwtl
jecxz
pop
sub
mov
xor
lahf
addr16
mov
in
sbb
ret
movsb
andb
mov
push
je
xchg
es
mov
mov
aad
fsubl
repz
add
idiv
jl
not
push
pop
cmpsl
hlt
outsb
xor
out
lahf
adc
stos
pop
or
stc
int3
ja
xor
push
pop
mov
lcall
jge
xor
std
add
add
pop
dec
test
add
add
pop
cmpsl
mov
sub
push
mov
in
hlt
lcall
mov
xor
repnz
cld
out
push
out
sbb
ret
jne
lds
fists
sbb
fdivrs
or
pop
xchg
and
cmp
test
or
mov
sbb
repz
loope
mov
sbb
dec
sahf
mov
shr
jno
sti
sbb
lock
lcall
xlat
stc
adc
rolb
gs
mov
mov
mov
loopne
fidivrs
xor
mov
into
into
push
cmp
push
jg
inc
push
imul
mov
xor
adc
jbe
movsl
and
mov
cs
mul
fs
lods
pop
lahf
mov
xorb
sub
out
ret
inc
mov
lret
lods
dec
pop
xlat
jg
dec
lret
adc
ja
in
cli
xor
jle
xlat
into
lea
xor
xor
repz
mov
cmp
daa
lods
mov
adcb
fwait
int
clc
leave
out
outsb
dec
xor
cli
popa
cmpsb
push
sbb
inc
push
lods
test
pop
push
jnp
test
or
cmp
jg
xchg
rcll
icebp
dec
mov
cmp
test
pop
mov
or
and
bound
rcll
cmc
mov
in
push
loope
aad
mov
inc
iret
hlt
arpl
mov
or
or
scas
mov
cld
aas
sbb
outsl
cmp
iret
or
jmp
aaa
stos
mov
cs
je
outsb
test
jmp
ficomps
fwait
cmp
fnstenv
push
lock
inc
std
jo
adc
xor
aas
mov
xor
mov
dec
loope
inc
sbb
inc
fsubs
test
fnsave
inc
pop
jbe
sbb
xchg
fisttpl
adc
xor
daa
popf
adc
or
pop
xchg
pop
pop
jns
stc
jae
sub
pop
and
push
or
cli
repnz
lods
mov
hlt
pop
xchg
pusha
and
lcall
jg
nop
test
fisubs
in
jne
loop
lret
sub
push
lcall
sub
repz
movsl
imul
mov
sbb
aam
inc
sub
sbb
scas
mov
xor
cmp
inc
popf
test
push
push
ss
ss
out
mov
ret
jnp
lahf
mov
shlb
cmp
loope
or
aad
or
fistl
insb
stos
push
test
loope
and
push
jmp
push
mov
repnz
stos
xchg
imul
not
sbb
ret
lret
mov
daa
push
or
shl
mov
and
sbbl
out
ror
pop
leave
jg
das
sbb
fists
fistpll
outsb
in
xor
rcl
or
mov
lock
sbb
mov
sub
cmp
test
fwait
cwtl
lahf
fbld
test
or
or
pop
ja
cmpsl
pop
dec
jecxz
call
inc
movsl
call
pop
mov
jge
xchg
xor
arpl
iret
jp
or
repz
scas
mov
cmpsb
dec
and
lea
into
imul
sbb
mov
rcll
dec
push
jecxz
orb
lods
xlat
pop
adc
mov
push
xchg
inc
imul
call
aam
ds
push
ret
jb
jl
xor
pop
pusha
inc
pusha
pop
ss
lcall
loop
jb
test
sub
mov
pop
adc
adc
movsb
shlb
icebp
dec
xchg
lcall
fidivrs
movsl
sub
call
push
out
adc
sbb
inc
imul
fwait
cmp
pusha
sub
pop
sarl
js
mov
jnp
sbb
sahf
and
dec
mov
jb
sub
mov
jecxz
movb
and
fnstcw
push
scas
adc
mov
repz
or
loopne
aaa
sarb
jnp
sbb
ljmp
sub
or
adc
sbb
sub
lret
dec
mov
scas
jbe
out
popa
mov
mov
fwait
and
movsl
dec
mov
popf
adc
outsl
cmp
pop
ret
cmp
xor
xchg
xchg
cmp
mov
fnstenv
andl
jge
lea
in
add
sti
mov
inc
arpl
ljmp
std
scas
mov
lret
cli
ret
int
mov
cld
or
rcr
mov
mov
mov
ja
outsb
fwait
mov
daa
leave
sub
leave
lcall
fdivrl
mul
mov
mov
pop
fcoml
cmp
dec
andl
lds
cltd
sub
push
add
sahf
scas
add
icebp
lds
insb
cmp
push
push
mov
or
int3
dec
sub
xlat
dec
inc
orl
mov
fdivrs
movsl
dec
xchg
je
fs
and
lahf
fs
movsl
mov
mov
test
shll
push
out
lock
mov
cld
in
pop
sub
in
or
je
fwait
jle
sbb
jnp
cltd
lock
jno
jae
stc
add
sbb
call
sub
xor
cmp
xor
int
int
in
daa
mov
std
fidivrs
push
das
pop
pop
lahf
inc
shll
mov
cmpsl
mov
ja
cmc
idiv
inc
or
bswap
aas
inc
cltd
in
or
inc
mov
inc
mov
cmp
inc
push
lcall
sti
and
or
in
jbe
mov
sbb
out
int3
inc
dec
fwait
pop
xor
int
xor
adc
xchg
cmp
mov
hlt
je
sarl
popa
push
xchg
out
movntps
jp
jmp
jo
imulb
xchg
xchg
pop
inc
inc
push
mov
scas
pop
jns,pt
sbb
fdiv
les
push
repz
xchg
mov
jl
decl
pop
loope
test
pop
stc
mov
lock
in
nop
mov
push
sbbb
cwtl
xchg
test
pusha
pop
mov
mov
ret
lods
mov
inc
jae
mov
data16
cmp
xlat
insl
sbb
push
lods
xchg
mov
jp
fldl
jmp
cmp
loope
adc
rcrl
loop
into
fildl
addr16
add
cmp
and
cmp
inc
test
mov
sahf
jg
pop
popa
mov
ja
scas
jmp
ja
jnp
jns
pushf
mov
push
jle
iret
insl
xor
ds
lea
and
mov
lods
push
test
lahf
mov
outsb
jae
xor
sar
idiv
in
pushf
jp
lea
push
or
call
add
lock
xor
xor
pop
lea
mov
adc
test
jg
roll
mov
cli
in
testb
sbb
adc
aad
mov
xchg
or
add
pop
mov
mov
push
push
pop
mov
mov
jnp
inc
popf
inc
add
in
xchg
pop
lea
xor
xor
mov
sbb
dec
call
jp
xchg
movsl
lea
rclb
pop
or
mov
in
sbb
xchg
out
test
add
jno
sub
popf
or
mov
mov
call
and
push
inc
jecxz
mov
lds
js
add
adc
push
outsb
push
lea
cmp
mov
jns
mov
insl
mov
aaa
cmp
mov
fsts
sbb
rcl
es
mov
imul
loopne
loopne
inc
mov
jecxz
jp
and
xlat
sbbb
ror
je
adc
out
cmpsl
fdiv
xchg
imul
lods
mov
loope
and
es
ss
pop
add
mov
pop
imul
sub
pop
pop
shll
imul
sbb
repz
mov
pop
sub
inc
cmp
rcr
popa
cld
lret
and
pushf
adc
into
dec
jns
pop
outsb
mov
push
xchg
dec
pop
inc
mov
mov
or
notb
fdivs
pusha
add
xor
and
sbb
sub
out
.byte
ss
.byte
gs
sbb
add
adc
les
lock
mov
jg
inc
pop
cs
jge
push
dec
imul
xlat
jle
les
loopne
aam
aad
xchg
inc
mov
inc
cmpsb
jl
mov
and
xor
sbb
inc
lret
daa
loope
faddl
cmpsb
dec
jno
add
jge
call
cmp
data16
jns
pop
leave
xchg
cltd
and
jbe
enter
int
xchg
jle
and
adc
test
or
lods
jb
lock
aam
data16
inc
xchg
sbb
pop
test
dec
adc
andl
not
add
fwait
ss
mov
into
adc
jl
adc
arpl
shl
cmp
je
sbb
scas
cmp
inc
xor
adc
out
pop
mov
xor
lock
dec
inc
ret
cs
jl
into
ljmp
roll
pop
int3
gs
movsl
cld
inc
push
ror
mov
sbb
cmp
sub
jle
movsb
cmp
test
lock
or
shrl
je
icebp
push
ja
push
fidivrs
xor
divb
add
arpl
inc
shl
jmp
mov
ljmp
push
cltd
adc
lock
inc
movlps
adc
dec
push
cmpsl
jge
dec
rolb
xchg
sbb
cmp
outsb
xchg
psubsw
lea
in
cmp
add
fldl
sbb
ret
aam
add
std
ret
xorl
mov
je
jb
aad
or
lahf
fcompl
jne
inc
std
into
sti
xchg
in
sbb
stos
movsl
and
inc
add
mov
loop
mov
xchg
and
jb
fsub
sub
in
test
pop
xchg
in
push
sarb
pop
ds
mov
or
imul
jbe
jo
xchg
mov
je
inc
mov
arpl
sub
dec
or
rcll
andb
adc
dec
aam
pusha
jo
xor
mov
jnp
imul
int
jnp
push
jl
ljmp
sbb
pop
lock
scas
xor
add
sub
sbb
lcall
cmpsl
add
xor
decb
dec
arpl
and
add
lods
shlb
mov
arpl
pusha
sarb
sub
int
sbb
sbb
testl
cwtl
mov
in
jo
popf
jb
das
cmp
adc
cmp
pop
lret
cmp
iret
sbb
pop
aaa
add
mov
fcoml
out
dec
bound
hlt
jl
mov
cmp
inc
mov
sbb
mov
sbb
inc
popa
rclb
sbb
lods
inc
mov
cld
int3
fcoms
popl
push
enter
je
sub
mov
outsb
es
inc
push
mov
cli
sub
jb
cmp
lea
jg
xor
fs
scas
cmp
mov
add
testl
cmc
jb
fsubl
ja
jmp
std
xchg
inc
dec
mov
fcom
pop
pusha
and
mov
ds
sti
adc
or
and
lret
or
test
adc
out
icebp
in
jo
or
inc
sahf
cwtl
subb
lret
mov
inc
jp
jb
bound
pop
mov
out
popa
pushf
mov
out
pop
sbb
mov
push
pushf
sub
add
lret
outsb
iret
cltd
or
inc
and
stc
pop
icebp
push
lods
mov
mov
jl
dec
dec
in
gs
je
ss
ret
push
lds
pop
sub
jno
iret
cwtl
stc
mov
and
dec
aaa
adc
push
in
hlt
cmp
cmp
mov
xor
and
and
adc
bound
js
shl
sti
fcmovnb
data16
lahf
inc
sub
push
pop
ret
lret
imul
dec
sti
sbb
dec
push
jnp
sarl
cltd
repnz
iret
jo
jge
les
push
and
mov
adc
inc
sti
leave
mov
cmp
and
movsl
or
or
add
cmp
mov
mov
mov
push
inc
mov
add
sarb
cmpsb
jnp
add
xorb
and
xor
mov
fldenv
es
lcall
push
insl
pop
push
push
pushf
sbb
jl
mov
jl
dec
xlat
shrl
jb
inc
repnz
mov
pop
imul
adc
dec
pusha
jmp
out
lret
push
fidivrl
rolb
cmp
aas
dec
in
test
sbb
adc
js
jnp
dec
fldenv
subb
mov
mov
mov
mov
jb
cmp
jecxz
popa
push
ljmp
dec
cmp
incl
inc
stc
add
jne
ret
jbe
push
dec
cld
je
scas
jge
mov
testb
xchg
test
ljmp
sub
push
out
gs
aaa
movsb
lahf
iret
dec
mov
xchg
mov
sub
fwait
pushl
jecxz
fcompl
push
scas
xchg
out
adc
adc
stos
dec
lods
xor
mov
rcrl
aad
xor
cmpsl
and
xor
std
and
push
aam
jge
sti
xchg
out
stos
or
je
nop
xchg
in
adc
pop
fstl
cmpsl
ss
into
out
scas
faddl
int
in
push
cmovb
loope
dec
jmp
in
scas
fildll
push
dec
dec
shlb
jne
inc
sbb
rcrl
out
xchg
lods
test
mull
je
pop
mov
lds
mov
outsl
stos
faddl
xchg
pop
lea
push
jno
test
jg
mov
pop
imul
pop
fadds
fmul
mov
fs
mov
ja
cli
sti
push
xlat
lahf
les
jne
fidivrl
call
pop
xor
ja
pop
ficoml
les
repz
sub
add
insl
into
outsl
cmpsb
xchg
lock
push
mov
sub
push
repnz
mov
pop
stc
rcll
ret
jmp
enter
xor
inc
int
out
dec
inc
or
enter
out
sarl
push
outsb
or
adc
xor
xor
push
jnp
and
sub
sbb
dec
mov
cmp
stos
dec
lock
sub
add
sbb
fists
cmp
cmp
ret
fsubl
jae
cld
pushf
and
push
out
ror
rorb
xchg
sbb
pop
jg
scas
scas
adc
daa
sbb
lea
icebp
arpl
hlt
fdivr
popf
movsl
adc
loope
insl
and
ljmp
push
ljmp
out
and
mov
xor
call
mov
stos
lret
lods
scas
outsb
dec
iret
cmp
xchg
jb
cmp
sub
or
jecxz
dec
adc
stc
jns
sub
hlt
xchg
shr
mov
cmp
jge
jmp
loopne
out
daa
insl
out
rolb
pop
unpcklps
enter
nop
push
or
lcall
or
mov
push
add
mov
dec
icebp
movsl
push
das
cwtl
loope
in
call
dec
mov
int3
movsb
xchg
ret
pop
out
jp
push
jnp
orl
jmp
push
push
movsl
hlt
stc
insl
jne
int3
push
imul
ret
xor
inc
pop
pushf
das
add
pop
or
inc
pop
test
xchg
fs
push
insb
outsl
sti
mov
sti
insb
lcall
sarl
and
xchg
jmp
ficoms
lret
push
adc
div
imul
inc
aaa
pop
icebp
outsl
out
es
in
pop
and
in
pop
sbb
adc
add
cmp
mov
mov
notb
arpl
enter
xor
insl
push
push
jnp
lret
push
cmp
add
stos
or
add
and
xchg
imul
loop
fildl
xchg
xor
movsb
adc
ret
orl
rcll
hlt
xlat
cld
add
mov
fnsave
pop
cmp
movsl
jb
nop
push
out
xor
nop
movsb
hlt
mov
cmpsl
cmc
dec
aas
push
pop
and
es
sub
outsb
sbb
aad
adc
pop
inc
out
sahf
insl
pushl
mov
cld
pop
aad
push
xchg
xchg
dec
add
ret
loop
xor
pop
lea
fcomi
outsb
mov
aaa
adc
mov
cld
jns
xor
mov
inc
pushf
out
lret
in
add
cmp
mov
shlb
dec
mov
es
lods
out
jp
jmp
clc
addr16
and
inc
mov
sub
out
mov
jecxz
add
cmpxchg
insb
sub
lock
repz
rorl
and
jnp
cmp
inc
mov
xchg
mov
mov
cmp
rcr
cmp
cmp
subb
mov
sub
pop
nop
push
sbb
cmp
xor
fisttpl
inc
and
into
lret
ja
sub
imull
cwtl
fwait
cmp
push
popa
cmpsl
movsb
cltd
ja
idivb
adc
mov
jbe
lea
jmp
mov
cmpsl
dec
popf
in
pop
fstpl
rep
jne
push
call
sub
shlb
cmp
mov
cs
dec
cmp
xor
cwtl
push
subb
dec
movsl
or
add
xchg
jecxz
mov
inc
test
loope
add
jmp
sbb
shlb
add
dec
dec
pop
loopne
cmc
out
cmpsb
mov
xchg
jge
aad
divl
adc
xchg
inc
subl
int
sub
ret
fists
jo
sbb
adc
outsb
insb
loop
mov
cmp
cwtl
scas
scas
mov
lds
pop
adc
dec
rclb
aad
lahf
cmp
dec
sahf
stc
out
xchg
in
daa
jecxz
fstpt
mov
dec
fcompl
push
mov
push
loop
xor
pop
and
lock
mov
fidivrs
in
stos
mov
stos
aam
pop
sahf
pop
adc
ret
jecxz
ret
test
inc
test
sbb
mov
xchg
mov
stos
cmpsb
mov
push
adc
lahf
out
push
ret
or
ficompl
pop
push
popf
or
out
add
sub
jno
xchg
cmp
push
rorl
or
inc
lahf
mov
pop
stos
in
cmp
ficoms
xchg
inc
xchg
lock
dec
aam
jge
nop
pop
ja
std
dec
xchg
adc
dec
sbb
repnz
adc
xor
jmp
ljmp
mov
dec
sahf
fldcw
add
rorb
jo
fwait
mov
cmp
loop
sub
xchg
fldcw
pusha
mov
sbb
mov
dec
push
mov
mov
pop
push
push
test
cmp
jo
add
addl
pop
fsubs
std
push
fwait
leave
and
mov
cmp
addr16
xchg
fistl
lret
in
inc
cwtl
and
dec
cmp
mov
ljmp
push
jno
xchg
mov
lock
mov
fmull
fdivs
adc
adc
mov
add
pmaddwd
lahf
pusha
mov
sub
xchg
testl
mov
mov
adc
xor
in
scas
mov
push
jo
scas
inc
rcrl
gs
test
mov
pop
outsb
push
ljmp
mov
sbb
arpl
lret
cmpsb
sbb
or
xor
ljmp
add
ffree
roll
cmp
sbb
mov
cmp
stos
jbe
dec
int
pop
inc
adc
adc
ret
cld
xor
fxch
or
aad
repnz
into
imul
adc
add
out
mov
adcl
mov
fsubrp
cmp
sub
das
cmpsb
sbb
cmp
daa
test
je
adc
sub
dec
push
test
lahf
sbb
and
add
jmp
out
jg
std
jno
icebp
dec
sbb
cmc
fildll
sbb
pushf
arpl
lods
xor
sub
sbb
pop
popa
insl
aad
bound
xchg
shlb
mov
sbb
xor
add
in
test
mov
popa
aaa
cmp
ds
scas
add
ljmp
jmp
pop
test
sub
test
and
bound
mov
into
sti
cld
clc
lret
ret
jno
sbb
xchg
sub
push
movsb
cmc
loopne
ljmp
sbb
add
xchg
imulb
sub
xchg
pushf
lcall
sub
mov
out
ds
pop
imul
xchg
mov
fdivrl
pop
mov
loop
mov
je
scas
xchg
shrb
outsl
or
iret
fcoml
mov
dec
push
mov
les
dec
nop
rcl
test
mov
inc
subl
lods
cmp
mull
arpl
inc
sarb
out
or
and
repnz
int3
repnz
push
sbb
mov
hlt
push
sub
nop
mov
mov
in
je
loope
rol
lods
idivb
pop
mov
pop
sub
scas
or
or
mov
or
aam
repz
lret
mov
mov
cwtl
inc
test
push
pop
jno
scas
mov
xlat
jg
jmp
rcr
add
mov
sahf
daa
pop
in
lods
ds
int
push
mov
lods
loop
mov
scas
dec
ret
scas
xor
das
sbb
or
lods
data16
outsl
mov
into
cs
int
mov
mov
imul
test
jne
cmp
in
icebp
xchg
pop
leave
or
cltd
ret
xchg
push
adc
dec
mov
mov
data16
cmc
call
or
icebp
in
aas
jo
mov
repz
fistpl
add
add
loop
add
lods
sbb
aas
cmc
aam
xchg
lods
inc
inc
jnp
mov
xchg
push
mov
data16
sbb
lret
jae
cmc
or
aam
inc
xor
or
ss
jns
sahf
pop
gs
scas
jmp
loopne
outsb
in
aam
jecxz
jae
sbb
jge
nop
dec
add
movsb
xor
lock
adc
xchg
sbb
outsb
mov
jmp
push
cmpsb
xor
gs
mov
xor
lods
mov
and
stc
scas
or
in
mov
or
mov
mov
outsl
mov
cmp
xchg
call
scas
repnz
and
jnp
insl
ja
ds
or
lea
and
sub
push
add
xchg
int
jns
in
ror
js
sub
aad
test
jbe
in
into
cmpsl
or
mov
sub
outsb
filds
push
pop
pusha
cmp
jmp
xchg
sbb
jg
dec
bound
push
into
sub
xlat
in
test
je
movsl
movsb
jb
loopne
push
pop
push
xor
ss
cs
push
les
mov
adc
shlb
push
pop
cs
imul
push
push
pop
loopne
cli
mov
mov
aas
inc
ja
push
aad
and
or
and
and
mov
jecxz
xchg
fidivl
mov
and
in
popf
inc
jne
pop
or
stos
cmpl
pop
push
jae
arpl
call
pop
add
sarl
sbb
mov
inc
loopne
add
pusha
ret
loopne
loopne
add
or
xor
movsl
xor
shll
lea
mov
imul
mov
test
out
js
xchg
or
mov
dec
sub
into
ljmpw
xor
aaa
hlt
dec
call
imul
fmuls
fwait
iret
add
mov
loop
sbb
cmp
test
sti
mov
push
mov
test
outsl
pop
js
jb
dec
lods
sbb
repnz
in
or
push
push
scas
mov
pop
dec
popf
xorl
stos
mov
frstor
int3
iret
lods
mov
or
std
adc
nop
decl
in
push
add
or
inc
out
rcrb
aad
pusha
lea
and
inc
add
mov
push
outsb
lahf
lret
push
into
fwait
jecxz
gs
lods
or
cld
clc
dec
jp
pop
cs
mov
xchg
xor
ljmp
repz
pop
xor
mov
mov
xor
es
inc
das
cmpsl
jl
rcrb
cmpsl
xor
daa
or
mov
xchg
inc
push
push
ret
add
mov
icebp
jp
pusha
test
repnz
gs
lea
pop
loopne
shr
xor
fcmovbe
pop
fs
jns
dec
mov
mov
push
cwtl
sbb
das
js
out
mov
jbe
xor
push
popf
xor
lods
nop
adc
mov
pop
mov
mov
pushf
mov
xchg
pop
mov
outsl
into
fimull
cmp
xchg
ret
rorb
sub
lods
ret
aad
cmpsb
in
outsl
mov
adc
dec
repz
mov
push
pop
add
fs
sub
popf
nop
int
mov
in
in
fs
xchg
cmp
lds
cmp
pusha
jge
push
adc
lcall
cmpsl
js
and
imul
pop
jnp
mov
mov
jb
out
adc
leave
jle
cmp
mov
mov
mov
stos
pushf
aad
inc
loope
pop
mov
xchg
xchg
jge
push
mov
dec
push
fs
movsl
adc
pop
xor
fisubl
add
jle
or
shl
sbb
and
in
je
mov
mov
scas
fwait
pop
testb
mov
dec
xor
stos
test
add
fsubs
roll
insl
push
in
addl
insb
sbb
fisubrl
push
and
das
lretw
and
bound
aaa
and
shl
xchg
add
rcll
add
cmp
mov
push
enter
int3
js
les
test
adc
mov
popf
xchg
sub
icebp
push
lret
out
cmpb
call
add
aad
subb
xor
call
int
or
int3
aad
push
mov
fcmovnbe
or
aam
and
mov
dec
mov
mov
movsb
or
lret
loop
jg
fimuls
mov
loope
mov
iret
mov
pop
repnz
and
ret
fcmovu
sbb
sub
jb
jecxz
jb
mov
xor
dec
shlb
hlt
lcall
xlat
cmp
mov
loopne
mov
test
cmpsl
mov
mov
ljmp
mov
sbb
andl
inc
push
sub
and
sbb
jae
loopne
notb
insl
adc
inc
push
enter
mov
push
push
sarl
xchg
sarl
pop
lcall
dec
sbb
mov
out
out
in
mov
xor
cmc
nop
dec
sti
rcl
hlt
add
adc
out
outsb
lds
dec
into
sub
outsl
sbb
pop
into
insl
push
push
ljmp
jnp
mov
loope
xchg
and
data16
xchg
cli
ss
pop
mov
mov
mov
cmp
adc
and
call
mov
sarl
and
lret
or
aam
imul
inc
or
sub
out
cmp
xor
and
adc
aam
or
int3
clc
in
ss
xor
cli
mov
test
or
push
imul
test
or
sub
ret
push
rorb
scas
sbb
push
xorl
movl
in
mov
add
push
repnz
inc
add
arpl
inc
negb
adc
mov
xor
icebp
pop
ret
roll
enter
inc
popf
jecxz
sub
or
adcb
adc
out
cmpsl
dec
mov
insb
inc
std
inc
lods
jp
dec
mov
xchg
rol
sub
fdivl
jb
and
ret
xchg
xor
inc
ds
mov
aas
rcrl
inc
shlb
repnz
icebp
out
sbb
cwtl
jp
push
lret
movsb
arpl
xchg
mov
mov
and
push
data16
clc
adc
mov
mov
mov
lods
ret
push
push
aam
pop
lods
mov
and
std
dec
jno
add
cmp
mov
pop
dec
lods
jns
add
ret
adc
or
cli
add
fadd
and
jae
mov
outsl
es
dec
mov
add
dec
mov
daa
cltd
sti
nop
das
fsubr
xchg
into
lods
fsub
mov
lea
push
cld
enter
xor
xchg
push
jl
bnd
mov
dec
add
pop
sub
subb
outsb
nop
rcr
pop
pop
jmp
xlat
fistpl
cmpsb
ljmp
sbb
fnstenv
xchg
out
loop
notl
pop
sub
sar
inc
pop
nop
adc
mov
inc
push
pop
cmc
dec
in
dec
add
or
dec
rorl
sub
call
mov
add
or
cmp
int3
rep
scas
pusha
or
idivb
mov
adc
fs
mov
lock
shlb
mov
enter
push
push
jns
jae
pop
sahf
mov
out
fldl
jmp
out
add
rorl
inc
lret
and
pushf
rclb
mov
and
inc
xchg
repz
mov
ss
pop
loope
sbb
outsb
push
addl
out
add
sub
xchg
inc
sub
aas
push
pusha
and
cwtl
pop
lea
jbe
adcb
mov
xchg
sbb
xchg
pop
das
mov
mov
or
icebp
int3
mov
push
or
sub
inc
cli
subb
faddl
inc
pop
mov
movsb
xchg
mov
adc
inc
lcall
cmp
and
mov
lea
andl
mov
nop
dec
sbb
xor
ret
or
jns
add
dec
and
pop
pushf
dec
rcrb
push
inc
jle
xor
jo
cli
rorl
push
pop
lcall
ret
xor
xor
mov
xchg
cwtl
sbb
test
sbb
jp
jns
cmp
outsl
test
pop
xchg
jge
push
hlt
das
mull
sub
shlb
das
out
and
into
sarb
adc
jecxz
scas
mov
cwtl
sbb
pop
addr16
shl
lea
pop
rcl
sbb
xor
fcomi
fcompl
mov
lret
mov
in
stos
cmovl
sbb
movsl
jecxz
stos
or
mov
fisubrs
out
dec
adc
sub
or
mov
sub
imul
mov
imul
adc
dec
fwait
mov
dec
jns
cltd
lock
add
es
mov
pop
ret
mov
test
iret
dec
xorl
inc
sub
movb
adc
fcoms
dec
subb
out
xchg
mov
outsl
decl
xchg
in
stos
pop
mov
scas
mov
fnstenv
jl
repnz
in
mov
fcomps
jb
adc
out
stos
dec
loop
xchg
cmpsl
jmp
mov
enter
jl
add
lock
sub
cmp
add
pop
jecxz
adc
pop
inc
mov
inc
outsb
cmc
jbe
js
and
imul
mov
lock
or
mov
lret
movsb
xchg
shlb
test
adc
not
jbe
out
aaa
pusha
cwtl
push
icebp
push
cmp
jmp
loopne
jo
imul
adcb
add
movsl
xor
and
in
shll
and
dec
jne
pusha
push
xchg
lret
cwtl
adc
adc
inc
mov
push
mov
push
sbb
and
shrb
or
add
imul
and
pushaw
mov
push
mov
dec
xor
xchg
and
lret
mov
push
movsb
repnz
xchg
add
mov
add
ds
loope
sahf
jne
loope
sbb
jb
out
sbb
sbb
ljmp
leave
rcrb
divb
or
jmp
int
loop
loope
test
call
sbb
push
loope,pn
mov
fwait
imul
jle
rcrb
sarl
and
scas
jp
inc
enter
xchg
addb
mov
dec
movsb
push
out
fsubl
sarb
test
divl
xor
cmpsl
aam
mov
fcoms
loope
lahf
in
std
loope
pop
sbb
std
fwait
jp
stc
inc
aam
jae
adc
mov
sub
dec
dec
test
push
jb
mov
xor
mov
xor
scas
push
sub
cli
pushf
xchg
xchg
mov
sbbl
jo
out
test
outsb
mov
sbb
push
call
inc
push
fcmovb
ret
sub
xchg
mov
sbb
xchg
div
lods
ror
ret
sahf
mov
inc
sub
outsl
or
mov
ficoml
scas
sbb
jl
nop
pop
adc
pop
jnp
mov
enter
adc
mov
bound
js
aaa
test
popf
shl
push
data16
ljmp
jno
lods
sbb
xchg
sbb
pusha
pop
sahf
or
cmpsl
or
xchg
cmp
movb
push
jp
push
mov
lods
mov
inc
stos
xchg
fstpt
fwait
add
or
push
lret
fsubl
adc
mov
sbb
cmpsl
lods
dec
testl
sbbb
dec
sbb
test
adc
mov
mov
xor
into
push
or
mov
add
outsb
inc
stos
icebp
ljmp
clc
fistps
pop
out
pop
negb
scas
das
mov
popf
test
inc
repz
je
popa
xor
nop
xor
stc
sub
roll
dec
scas
in
mov
lods
scas
decb
outsb
andl
scas
sub
fwait
js
sub
lds
push
push
sub
push
cli
ret
mov
enter
incl
dec
inc
dec
push
loope
add
mov
in
xor
sti
mov
xchg
stos
push
fs
lret
xchg
sarb
neg
mov
lods
lods
mov
cli
mov
and
loopne
les
pop
ret
es
sub
pop
jp
rcr
stos
repz
iret
test
enter
push
imulb
push
imul
or
push
movsl
mov
sbb
sbb
sub
or
mov
lahf
ret
ss
pop
dec
sarb
mov
scas
push
rcrb
push
or
add
fsts
inc
xlat
mov
cs
add
arpl
out
fwait
jl
ljmp
lret
lock
int
in
jg
lea
ja
mov
mov
test
add
sub
inc
xlat
xchg
push
inc
popf
xor
iret
ret
jae
push
insb
mov
mov
cmp
sahf
add
pop
add
lods
negb
in
push
xor
je
pop
xchg
gs
movsl
lock
add
pop
adc
jle
leave
scas
lahf
clc
and
fwait
inc
and
sbb
out
jmp
outsl
popa
jb
aad
and
insb
and
mov
ds
stc
jp
adc
mov
addb
inc
scas
jb
pop
sub
push
inc
nop
pop
mov
lret
or
push
push
rclb
popf
pop
xor
pop
mov
mov
jo
mov
test
fs
xchg
test
leave
cs
jne
inc
call
ds
push
shll
mov
push
ds
add
cmp
into
push
cmc
mov
loopne
cmpsl
mov
insl
pop
jno
leave
push
mov
cs
imul
xchg
sbb
and
adc
mov
sub
inc
loope
es
loop
aam
adc
mov
sahf
lcall
mov
add
loop
lea
lea
sti
cld
ljmp
jnp
lods
bound
out
lods
push
leave
sub
push
adc
fisttps
sbb
pop
sti
aas
enter
in
mov
mov
inc
inc
lret
xchg
out
mov
mov
lret
xor
cmp
xchg
xor
sar
ds
mov
mov
mov
cmpsb
js
push
movsl
or
adc
cmc
int3
xor
or
jne
rolb
lahf
add
sbb
pusha
push
scas
inc
sbb
sub
enter
xchg
faddl
add
fs
xchg
lods
out
enter
jbe
mov
pop
adc
subb
jbe
adc
jae
and
movsb
jns
mov
inc
mov
stc
enter
xor
inc
test
pop
repnz
add
cltd
into
subl
dec
out
lock
test
push
movsl
xor
ja
inc
pop
sbb
repnz
imul
addr16
jo
gs
or
inc
bound
ret
or
sbb
inc
cmp
pop
hlt
pop
mov
xor
aad
scas
cld
push
rcl
nop
lahf
pop
xchg
fmul
push
js
mov
push
inc
xchg
pop
pop
cs
sub
push
inc
dec
jecxz
and
mov
lock
cmp
fldenv
push
push
rclb
int
jb
lcall
test
out
idivl
fwait
int3
jb
sub
mov
fisubl
mov
add
dec
sbb
and
data16
in
or
mov
mov
xchg
scas
mov
test
adc
iret
enter
inc
push
xchg
sub
add
lahf
jecxz
movsb
movq
mov
xchg
jno
aam
xchg
and
sbbl
shll
mov
mov
inc
xchg
ja
cld
in
in
or
xchg
cmp
and
imul
mov
xor
ljmp
xor
jecxz
jnp
in
ja
add
sub
mull
pop
outsb
aaa
push
mov
adc
sub
inc
lret
lods
cmp
cmpsl
bndldx
arpl
mov
lods
add
ja
aaa
out
sbb
int
sub
push
lcall
dec
std
mov
pop
mov
pop
xchg
adc
xor
loopne
mov
aam
mov
gs
clc
aam
cmp
stos
jno
sub
push
nop
or
insl
shlb
stc
or
jo
testb
pop
cmc
jmp
mov
dec
cmp
cmp
xchg
pusha
shlb
inc
cltd
pop
push
fsub
pop
dec
push
push
pop
jp
sub
xchg
or
adc
icebp
and
cmpsl
cmp
jecxz
push
stos
hlt
ret
pop
scas
jne
mov
pop
add
dec
inc
inc
jecxz
push
pushf
loop
sub
sbb
mov
clc
out
pop
mov
cmpsl
lods
jne
aam
inc
insb
imul
or
std
inc
pop
ret
stc
sbb
xchg
cmp
lret
ret
int
loop
mov
ja
pop
clc
pop
cmp
lods
fstpl
mov
insb
outsl
xlat
setb
push
shlb
mov
or
and
dec
ja
enter
xchg
adc
push
add
addl
jo
or
inc
mov
mov
mov
rcrl
mov
dec
lock
push
lods
xor
into
gs
arpl
mov
or
js
sbb
jle
xorb
jge
mov
cs
and
or
movsb
adc
sahf
stos
arpl
data16
pop
fstl
xor
iret
add
pop
sbb
in
mov
pop
mulb
adc
arpl
cmp
sbb
sbb
jmp
mull
xlat
and
stc
jmp
insb
mov
dec
imul
mov
out
movsl
sub
jne
pusha
fdivl
pop
adc
adc
js
mov
push
fsubs
ss
mov
fbld
lods
xor
jb
jmp
cmp
push
mov
stc
loope
dec
pop
inc
xor
jb
dec
cmp
loopne
repz
pop
push
pop
add
cmp
jns
sbb
rolb
dec
idivb
pop
cmpsb
bound
add
icebp
mov
es
or
int
std
dec
mov
bound
mov
mov
testb
aas
xor
in
sub
sbb
ds
fcom
js
call
shlb
enter
push
sbb
inc
int
les
xor
jp
movsb
or
sbb
ss
jno
mov
into
aaa
inc
lahf
scas
flds
idiv
mov
test
scas
pop
popf
xchg
fidivl
sub
stos
xor
cmc
imul
movsl
movsl
andb
insb
add
and
mov
ljmp
xor
out
mov
jne
cmp
sbb
in
loop
jno
or
cs
rcl
lock
xchg
pop
lret
mov
dec
in
sbb
mov
nop
and
xchg
jle
inc
bound
jnp
add
pop
adc
cmp
mov
in
hlt
clc
pop
lret
int
jg
jbe
cmp
jnp
leave
es
sub
ror
shll
jbe
test
jle
jecxz
dec
sub
test
sub
jmp
scas
sbb
pop
cs
aas
ret
cmp
adcl
push
xchg
ljmp
ret
sub
fwait
pop
mov
pop
xchg
ror
test
aam
ds
loope
mov
lret
shlb
cmc
fildl
inc
mov
jecxz
mov
les
jno
mov
add
xor
pop
xchg
or
add
sub
insb
popf
out
lahf
adc
push
sub
cmpsl
sub
push
popf
push
lahf
fnsave
mov
inc
stc
loopne
mov
sbb
sbb
rclb
cli
jge
mov
pushf
aam
fsubl
mov
jle
add
mov
and
cmp
cmp
jae
test
insb
jmp
test
xor
adc
lcall
pop
mov
jns
out
aaa
mov
aam
push
push
add
dec
lcall
lret
and
inc
pop
jge
andb
clc
add
add
out
jns
cmp
in
fcompl
mov
aam
pop
js
mov
xchg
icebp
repnz
daa
out
out
popa
sti
inc
push
stc
cmp
sub
push
test
ss
sub
cltd
pop
mov
sbb
mov
dec
lods
dec
outsl
loope
xchg
les
lret
mov
xchg
daa
push
ret
test
sbb
mov
es
mov
mov
ds
adc
adc
loope
or
inc
arpl
dec
mov
xchg
sbb
mov
test
mov
push
xchg
push
std
jmp
sbb
xor
and
push
enter
frstor
pop
lcall
pushf
roll
xor
popf
push
pop
pop
and
xchg
ljmp
ljmp
or
xor
xchg
jp
jg
sti
shlb
and
mov
movsl
iret
sti
sbb
sti
push
dec
repnz
cmpsb
cmp
imul
fdivrl
dec
addb
leave
jo
out
dec
lret
in
and
lods
pop
xor
inc
and
pop
inc
subb
push
and
adc
lahf
test
xor
lcall
pop
push
shll
cli
lods
or
sar
pushf
mov
mov
sbb
sbb
pop
imul
iret
jb
sbb
test
shlb
sbbl
push
cld
rorb
movsb
inc
cmpsl
push
leave
stos
loopne
lods
fs
je
in
mov
fcom
and
xor
add
aas
inc
cwtl
popf
xor
pusha
mov
scas
xchg
pop
rorl
int3
mov
lret
in
cmp
add
sub
push
pop
fwait
sbb
inc
add
loope
dec
stc
jns
incb
mov
push
ret
ljmp
pop
dec
xor
sarb
sti
arpl
push
insb
leave
mov
sbbb
cmp
aad
mov
pop
stos
jno
xor
stos
jo
sahf
adc
popf
mov
ret
inc
xchg
pop
fldenv
dec
dec
les
push
data16
dec
jg
sub
daa
push
sbb
pop
mov
add
push
push
xchg
push
mov
bound
mov
xchg
cmpsl
xchg
out
cmp
data16
insl
push
lods
push
sti
js
xchg
int
pop
cwtd
push
loop
cmpsl
es
fcoms
in
push
ds
xchg
inc
xchg
cli
push
out
and
lods
dec
cmpsl
scas
pop
jns
inc
out
das
sbb
sub
add
xchg
add
std
inc
mov
cld
sbb
push
cmpsl
loopne
xor
push
gs
push
pushf
fnstsw
mov
mov
outsl
int
pop
cmc
sub
enter
dec
fs
xor
mov
mov
sbb
dec
shl
lods
mov
fs
push
sahf
sti
add
push
jb
daa
les
mov
dec
mov
in
or
insb
in
jno
mov
sub
outsl
xor
push
cmp
fbstp
sarb
push
cmp
rclb
xchg
mov
sbb
ror
fmuls
inc
leave
dec
inc
xlat
outsl
adc
pop
jge
adc
enter
cmp
scas
jo,pt
mov
jbe
mov
shll
les
cmp
aaa
lock
adc
daa
or
imul
and
mull
push
ficomps
iret
out
and
loop
or
jg
je
adc
jp
nop
jnp
into
pop
ret
mov
adc
mov
xchg
add
fwait
ds
hlt
xchg
inc
push
push
stc
sbbl
rol
mov
call
mov
ret
arpl
mov
adc
sub
fucom
out
test
or
lcall
fdivrs
sbb
adcl
jge
callw
js
mov
cld
or
push
in
out
push
out
mov
pusha
xor
cld
cmp
decl
push
imul
jbe
out
pop
popf
dec
in
pop
mov
testl
add
cwtl
add
mov
leave
push
rcl
mov
das
outsl
shlb
cmpb
cld
repnz
sub
mov
aad
sbb
push
sub
jmp
push
jnp
lcall
fdivl
fwait
scas
popf
sub
aam
dec
cs
inc
push
inc
lods
mov
jno
in
das
sbb
imul
mov
jmp
insb
rorb
ficompl
sbb
add
test
xchg
xor
enter
pop
cmp
sbb
pop
mov
imul
mov
add
mov
stos
sbb
jno
sub
and
mov
adc
std
iret
stos
or
push
lea
lods
out
lahf
pop
push
push
test
mov
xchg
bnd
pop
sbb
pop
inc
scas
enter
mov
pushf
lahf
test
leave
out
test
loope
mov
lods
push
jl
fwait
xchg
imul
insl
push
xlat
mov
xor
mov
iret
dec
cs
jo
in
mov
loope
xchg
mov
push
loop
fmul
xlat
pop
loope
push
push
mov
pop
stos
icebp
xchg
inc
sbb
les
sbb
xchg
sub
adc
add
pop
outsl
cltd
xchg
int3
repz
jo
loope
mov
jle
hlt
incb
and
push
mov
in
push
ds
orw
dec
mov
aaa
xor
or
cld
scas
fnstcw
jp
sbb
sbbl
push
das
mov
dec
repz
testl
fs
or
loope
jbe
imul
xor
test
adcb
push
ret
adc
int3
pop
int3
pop
adc
in
push
fisttpl
push
mov
outsl
mov
mov
leave
test
mov
cmp
je
mov
leave
filds
pop
add
pop
and
mov
adc
dec
mull
test
lret
jbe,pn
test
fs
cmp
scas
das
cmp
jecxz
shlb
or
sbb
ljmp
lea
jnp
push
outsb
inc
gs
out
test
fistps
mov
pushf
ss
pop
fildl
popl
dec
mov
mov
ds
mov
ja
inc
push
push
dec
adc
push
lods
test
jns
out
cmp
mov
cli
shl
fldenv
sub
add
stc
dec
pop
push
push
push
or
ds
inc
pushf
sub
pop
sahf
arpl
pop
mov
stos
xor
leave
sbbl
ret
pop
ffree
lods
inc
add
pop
xchg
inc
sub
lret
loope
fsubl
cmp
mov
sbb
gs
ljmp
push
fstpt
imul
leave
lds
dec
mov
or
cld
sahf
dec
sub
add
loopne
fnstcw
sub
fsubrs
lods
cli
inc
enter
int
pop
movsb
ss
lds
add
in
push
pushf
pop
jno
pop
divb
jp
shrl
mov
mov
in
mov
xor
fiadds
dec
mov
lret
adc
mov
bound
roll
jl
and
subl
add
pop
jne
cli
call
jge,pt
sbb
dec
xor
cmp
add
popa
stos
orb
sub
stos
adc
sub
jle
lods
mov
mov
xor
inc
xor
ss
outsb
dec
rcll
aaa
pop
mov
scas
pop
dec
ja
xchg
andb
daa
into
ljmp
mov
pop
mov
mov
in
dec
ljmp
lock
ret
jb
dec
xor
mov
pusha
mov
adc
pushf
aaa
sub
pop
push
aaa
xchg
aad
pushf
fldl
and
cld
push
mov
sbb
mov
xchg
adc
fisubl
mov
sbb
sbbl
mov
cld
pushf
push
out
out
inc
xor
std
mov
xor
mov
dec
fisubl
xorb
cmp
jl
sub
lods
cmc
rcrl
add
dec
push
ret
mov
push
xchg
adc
out
jmp
mov
fldl
outsb
add
jl
push
cltd
stos
jnp
insl
jp
mov
sbb
aad
xor
cmc
cli
dec
int3
stos
cmp
dec
int
mov
dec
divl
mov
loopne
leave
lahf
mov
ss
push
jo
xchg
out
call
fwait
dec
pop
sub
icebp
ss
sub
sahf
insl
mov
testb
lret
fcompl
push
pop
and
push
xorb
jnp
scas
repz
sahf
sbb
dec
cmp
inc
adc
inc
outsb
xchg
aas
ficomps
jp
sub
cld
adc
add
aam
lods
sbb
mov
ror
dec
rolb
and
sti
gs
push
lcall
jmp
mov
cli
fnsave
cmc
jmp
pop
or
add
mov
mov
adcb
or
xchg
loopne
xchg
mov
mov
rcrb
pop
lods
mov
cltd
sarl
jecxz
outsl
aas
les
or
jae
sbb
arpl
xor
shll
mov
bound
inc
mov
in
sub
stc
addr16
xor
sbb
and
fwait
or
ret
xchg
movsb
les
fwait
in
cs
push
pop
jno
outsl
sub
xor
outsb
and
les
xor
rcr
faddl
aas
cmp
jae
loopne
push
pop
movsl
idivl
stos
sbb
mov
cmp
jne
cs
test
sub
adc
call
popa
aaa
dec
pop
gs
cwtl
or
repnz
cltd
movsl
dec
mov
cmc
xor
lods
ret
push
xchg
cmpsl
xchg
adc
mov
mov
pop
adc
mov
rcrb
adc
sub
addr16
push
inc
add
retw
das
sbb
sbb
daa
outsb
js
jl
loope
mov
pusha
xor
enter
xorl
add
ljmp
dec
sbb
push
xor
ljmp
mov
pushf
or
inc
sub
sbb
push
jecxz
pusha
fwait
or
push
xorb
mov
xlat
lds
sbb
subb
jns
and
xor
mov
xchg
aas
test
stos
mov
xor
jo
shlb
in
ficoml
aam
imul
sub
ror
mov
cwtl
nop
jo
out
sub
push
xchg
ficompl
adc
mov
mov
imul
fst
mov
and
cmp
mov
icebp
mov
fdiv
xlat
jno
mov
cmpsl
adc
insb
xlat
mov
loop
and
mov
pop
outsl
adc
xchg
jg
jl
loop
push
mov
mov
stos
imulb
jb
rorb
add
fwait
jns
int
sti
hlt
ljmp
pop
or
loope
mov
mov
enter
mov
dec
cmp
pop
cwtl
cmp
mov
mov
add
inc
cmc
mov
inc
mov
adc
lret
cmpl
adc
cmpsb
push
cmp
frstor
and
sbb
xchg
xchg
rcll
test
push
mov
sbb
pop
add
xchg
inc
jl
shll
fwait
pushf
mov
adc
nop
lret
adc
inc
or
xchg
je
mov
out
jnp
sbb
in
hlt
jns
fsubl
icebp
mov
adc
sahf
and
inc
aas
ja
shll
mov
ljmp
cli
pushf
std
sub
lock
mov
jne
mov
ja
add
push
lods
ljmp
popa
cs
test
test
aad
shrb
push
adc
pop
out
xor
xchg
push
test
push
xor
fs
cmc
test
jb
popa
dec
dec
icebp
pushl
adc
sbb
imulb
mov
shlb
push
movsb
cli
or
jno,pt
rclb
jo
jbe
cmp
xchg
push
fcmovnb
inc
cs
push
or
mov
out
dec
mov
loopne
scas
stc
lcall
dec
xor
stos
pop
ss
orl
rolb
lods
inc
lock
out
enter
add
inc
xchg
sti
inc
mov
jecxz
xor
ret
in
jge
inc
leave
push
dec
sub
pop
outsl
sub
sti
insl
cmp
sub
or
push
jg
std
loope
adc
dec
mov
cmpsb
loopne
jge
mov
aam
mov
jns
shrb
into
jmp
inc
jmp
test
loop
bound
test
mov
adc
xor
mov
lret
movmskps
filds
pop
out
mov
mov
jne
sbb
jmp
xchg
gs
pop
arpl
and
imul
in
ret
xchg
pop
add
cmp
leave
int
push
mov
dec
sbb
pop
inc
cmpsb
push
out
and
and
dec
sbb
adc
mov
das
aaa
insl
mov
push
fnstcw
add
fs
pop
mov
mulb
push
mov
jge
clc
mov
cmp
loop
out
stos
jno
icebp
inc
rclb
xchg
dec
and
sub
test
aam
aad
xor
aad
repnz
mov
stos
adc
jecxz
jns
inc
sti
repz
nop
dec
xchg
arpl
and
mov
inc
sbb
mov
jmp
aad
mov
adc
mov
mov
mov
sub
xor
cmp
adc
lods
cld
iret
mov
stos
xchg
movsb
lea
adc
push
outsb
or
adc
or
mov
loop
dec
lret
stc
adc
cltd
fdivs
idiv
mov
inc
in
mov
mov
movsb
aaa
and
xor
mov
add
and
lods
jle
mov
sbb
int3
xor
outsl
xor
mov
aad
pusha
popa
mov
mov
out
push
sbb
hlt
pop
jb
outsl
jge
xchg
and
stos
js
xor
sbb
out
sbb
adc
pop
inc
jecxz
in
sti
sbb
push
call
adc
stos
mov
mov
and
sub
aam
icebp
idiv
insb
in
das
aaa
loopne
sub
shrb
call
ljmp
bnd
push
test
pop
xchg
arpl
ja
add
fdivs
int
lock
lret
fisubrs
ja
or
clc
cmp
ljmp
or
ret
push
pop
mov
sbb
mov
fsubl
sbb
push
push
jp
mov
add
les
fldt
sub
js
xchg
nop
mov
repnz
xor
add
ret
add
fisttpl
daa
lods
push
xor
call
call
pop
hlt
adc
adc
sub
sbb
mov
lret
fbld
loopne
cmc
push
jg
mov
xchg
push
adc
mov
mov
sub
ret
leave
and
shlb
aas
jmp
jecxz
mov
leave
jne
sbb
mov
jo
or
push
xor
mov
xor
in
hlt
outsb
or
fistpl
lods
int3
mov
mov
hlt
lods
cltd
in
dec
decb
incb
mull
xchg
xor
push
fiadds
xor
lods
ficomps
fstp
popf
jl
movsb
in
cmp
iret
les
movsl
mull
fxch
cmp
adc
xchg
stos
ja
data16
je
and
ljmp
icebp
iret
es
lock
out
aad
cld
xor
and
sub
out
pop
addr16
xchg
cwtl
adc
adc
mov
inc
and
or
push
dec
inc
adc
sti
daa
dec
xchg
icebp
mov
lcall
xchg
filds
outsb
add
push
inc
popa
or
and
stos
mov
push
orl
push
ja
cmpsb
pop
pusha
jae
adc
mov
xchg
outsb
stos
and
pusha
mov
ja
xlat
cmpl
in
push
jne
test
stos
data16
push
loop
cltd
and
mov
and
scas
and
and
std
loope
aam
mov
inc
mov
push
mov
roll
imul
int3
jge
mov
xor
ret
je
xchg
sets
pop
push
cmp
mov
or
out
sub
add
imul
dec
call
test
jg
dec
test
jbe
dec
jl
xor
and
hlt
stos
jbe
add
inc
cmp
fsts
cwtl
cmp
sub
ja
xchg
mov
inc
popl
lds
pop
arpl
or
gs
and
xchg
push
dec
in
orb
sbb
mov
dec
and
or
xchg
repnz
jns
imul
xchg
fidivrl
cmp
scas
arpl
les
xor
inc
mov
jo
in
jmp
push
daa
ja
test
les
mov
in
push
js
jmp
and
add
mov
and
push
push
cwtl
rcrl
mov
idivl
sub
push
xchg
pop
aas
shrb
out
bnd
mov
jns
or
pop
xor
in
xchg
repnz
jns
adc
sbb
outsl
jae
dec
xor
test
shlb
adc
and
das
cmp
or
sub
sub
xchg
pop
sti
scas
sbb
lcall
push
and
popa
adc
xlat
shll
rcrb
sbb
sbb
out
mov
pushf
call
xchg
sub
fstl
jbe
loope
xor
scas
aad
shll
mov
push
out
mov
mov
sbb
xor
jnp
scas
push
in
or
movsl
push
sbb
cwtl
dec
inc
in
mov
add
mov
dec
daa
push
enter
les
repnz
iret
popf
mov
add
jne
jp
mov
mov
sbbl
pop
mov
lock
sub
cli
hlt
insb
std
shlb
cmpsl
lea
push
cmp
pop
xor
and
pushf
push
inc
sub
call
jae
add
add
je
fistps
xchg
decb
mov
and
jge
int
hlt
jge
sub
test
mov
imul
test
shll
or
sub
add
outsl
in
fnstsw
stos
mov
ficoms
or
sbb
dec
les
pop
repz
lods
push
out
lret
lods
shl
xchg
iret
mov
enter
fstpl
adc
push
mov
das
jno
inc
sbb
scas
roll
jg
nop
jo
mov
or
sub
in
sub
scas
xchg
inc
mov
pop
mov
dec
gs
addr16
dec
rcl
aam
aam
and
adc
sub
iret
add
stc
xor
adc
mov
cmpsb
pop
stos
loope
nop
jns
call
sub
sbb
iret
test
jecxz,pn
outsb
arpl
and
je
mov
and
push
adc
and
cli
and
dec
mov
and
jle
cs
mov
nop
outsl
cmp
mov
jb
inc
or
sbb
vmulss
mov
sti
xchg
decl
das
xor
mov
add
lcall
xchg
cmp
dec
out
aas
mull
push
pop
gs
es
cmpsb
mov
arpl
mov
push
fnstcw
lock
sbbl
cmp
jmp
in
sti
arpl
add
aas
pop
lahf
or
ret
and
or
cs
fists
popf
test
movsl
out
outsl
dec
mov
adc
sub
shlb
gs
cmc
mov
dec
xchg
repnz
dec
aam
test
pop
lods
push
fbld
inc
dec
sub
mov
lcall
movsb
xchg
bnd
sub
adc
sahf
ljmp
cmc
lock
mov
push
int
test
test
mov
bound
outsb
outsl
push
jmp
dec
xor
sub
fsub
loopne
sub
je
loope
rorl
lea
sbb
cs
fldenv
sbb
leave
or
int
stos
xchg
daa
data16
xchg
dec
movsb
imul
fsubp
in
in
xchg
ss
rolb
int3
or
and
inc
lahf
xor
dec
push
jns
mov
leave
leave
arpl
fidivl
or
dec
lahf
jns
scas
mov
mov
adc
and
mov
outsb
outsl
movsb
jo
imulb
aas
cmp
rorb
or
cltd
mov
dec
stc
pop
pop
data16
andb
jl
enter
jnp
adc
push
xchg
lahf
addl
jne
jnp
pop
cmpsb
and
frstor
arpl
xor
popa
shll
sbb
push
leave
lea
leave
rorl
leave
push
xor
nop
add
cmp
mov
scas
mov
cmp
dec
lahf
sbb
lahf
je
lcall
or
mov
gs
aaa
stos
aam
scas
or
add
ret
lea
mov
mov
dec
fwait
sbb
adc
je
daa
cmc
push
pushf
add
cmp
mov
cmp
mov
mov
cmc
xor
std
adc
call
insb
jg
xor
inc
mov
add
notb
in
and
and
aad
outsl
xchg
push
inc
repz
jbe
stos
aad
dec
mov
xchg
dec
mov
pop
rcr
lods
sbb
jnp
inc
mov
dec
dec
fs
jecxz
jecxz
loopne
push
xchg
pop
adc
jg
and
clc
xchg
dec
ret
or
inc
pop
cmpsb
adc
mov
adc
lahf
jne
sbb
js
or
pxor
jb
js
xchg
hlt
pop
dec
push
and
sub
out
movsb
adc
xchg
out
cld
std
popf
repnz
insl
push
add
pop
das
out
inc
in
cmpsb
inc
push
stos
push
or
jnp
inc
fbstp
sbb
sub
mov
dec
fnstsw
mov
je
sub
popf
pusha
pop
xchg
add
pop
jg
cld
xor
jecxz
nop
xor
stos
mov
out
cmpsl
test
rcll
and
cmp
mov
testl
mov
mov
idiv
or
stos
pusha
sub
sbb
sahf
mov
or
leave
dec
in
fisubrs
inc
cmc
decb
cwtl
inc
inc
adc
inc
cmpsl
into
clc
test
in
fisttps
pop
and
push
insl
nop
loop
in
sbb
dec
lea
out
or
test
lock
outsl
inc
cmp
mov
mov
loop
push
ficoms
scas
fbld
and
cwtd
cmp
popf
xor
js
adcb
push
orl
stos
lahf
popl
loope
pop
cwtl
fisttpll
mov
in
addr16
cmpsl
jne
int3
xor
in
xor
ss
sub
bound
and
add
inc
jbe
mov
out
std
push
cmpsb
mov
orb
lods
je
mov
mov
ljmp
mov
mov
sbb
in
mov
adc
push
ret
pusha
jp
cmp
in
mov
or
pushf
lea
hlt
cli
mov
adc
or
loope
daa
sub
adc
mov
popl
addr16
inc
jnp
xor
pop
inc
dec
sbb
testl
nop
addb
or
in
test
shrb
xchg
loop
cmp
xor
jp
sahf
add
jo
add
inc
enter
xchg
dec
jp
lcall
xchg
add
std
dec
push
pop
stc
xchg
movsb
mov
aaa
insl
out
jbe
sub
les
xchg
xchg
or
imul
loope
push
adc
negb
int3
das
shll
fisubrs
sub
jno
arpl
and
fisttpll
mov
movsb
out
jp
ficoml
out
lret
xchg
sub
pop
mov
mov
rcrl
jg
xor
popf
test
xchg
cwtl
fwait
mov
push
js
dec
pop
in
or
push
jae
xor
adc
dec
lock
stos
aad
mov
mov
lret
jmp
fwait
mov
loop
out
les
xchg
test
adc
mov
inc
bound
cmpsb
and
add
dec
sahf
cmp
cwtl
mov
xchg
cmp
add
ljmp
pop
scas
lret
rcrl
lahf
cld
push
inc
fdivp
or
add
fwait
mov
ljmp
popa
fldcw
lock
or
inc
sbb
leave
pop
sub
decb
jne
adcl
sarb
inc
outsb
add
and
out
faddl
adc
pop
popf
pop
add
ffree
xchg
mov
pop
lods
lods
or
mov
cmc
inc
enter
cmpsb
repnz
xchg
mulb
inc
stc
mov
cmpsl
sbb
je
daa
cmp
movsl
out
pop
mov
jo
add
cmc
or
or
mov
xchg
loopne
and
int3
jge
das
sub
and
and
jns
jg
mov
mov
and
pop
inc
or
pop
adc
orb
push
mov
xchg
or
lea
in
push
mul
repnz
mov
enter
daa
movsb
js
ljmp
cmp
mov
lods
pop
adc
in
push
cmpsb
sahf
mov
xlat
sub
cltd
xchg
pop
lahf
jne
sbb
jmp
in
xchg
adc
test
adc
mov
rol
or
mov
cmp
lea
inc
sbb
imulb
inc
jl
dec
lcall
push
mov
xchg
mov
rolb
call
int3
hlt
pop
ficoms
std
pop
jmp
and
scas
push
int
xchg
fs
bndstx
cmpsl
cmp
mov
and
mov
xor
or
add
and
cmp
dec
fidivl
lods
in
shlb
cmp
jns
adc
push
imul
les
cmp
jl
movsl
sub
cld
lea
inc
push
mov
mov
lods
jl
push
pusha
cli
jne
shll
xchg
lods
icebp
adc
or
enter
dec
mov
mov
add
pop
push
fwait
add
pop
sub
sub
and
jb
jle
jnp
adc
xchg
jmp
dec
mov
xor
stc
push
xlat
and
mov
and
dec
add
clc
cli
jbe
cmp
scas
imul
or
int3
jmp
out
outsl
adc
cmp
or
jmp
jno
pop
cmp
inc
pop
inc
sub
jnp
cmp
fstpt
xorl
ror
aaa
mov
sub
jo
sarb
and
mov
movsl
xchg
pop
notl
jne
test
fistl
sbb
cli
nop
inc
dec
push
mov
movsl
lods
and
and
addr16
adc
dec
pusha
mov
mov
or
rclb
or
sbb
sbb
pop
rcl
jbe
imul
push
shlb
stos
mov
popa
xchg
cmpsb
cmpsl
cmp
mov
mov
incb
mov
push
sahf
or
sub
mov
out
lahf
mov
push
jno
push
xchg
das
and
imull
mov
add
xchg
jmp
cmp
inc
bound
sub
frstor
sub
stos
or
jne
xchg
cmc
mov
in
push
jnp
or
inc
pop
jl
push
sti
std
movsl
jns
enter
sub
and
xchg
hlt
scas
in
stos
mov
and
scas
mov
aaa
mov
push
loop
out
or
sub
dec
sahf
dec
addr16
mov
aas
cmp
xor
and
ljmp
hlt
pop
loopne
je
xchg
jg
dec
sbb
add
lods
sub
jae
cmp
inc
test
xlat
ror
outsl
mov
pop
jno
subb
push
dec
das
in
cltd
out
cltd
mov
fimull
movsb
xor
pop
cmp
cld
icebp
mov
sbbb
fstpt
and
add
outsb
sti
je
sbb
movsl
mov
scas
xor
out
mov
and
out
mov
lret
les
cmp
jbe
nop
mov
xchg
sub
push
sbb
jnp
xor
in
sub
pusha
inc
fwait
push
or
enter
or
pop
outsb
fidivrs
push
aaa
jno
inc
dec
dec
mov
add
mov
loope
mov
push
pop
push
mov
imul
push
jb
mov
mov
fcmovnb
pop
dec
xchg
mov
jge
cmp
stos
mov
fistps
mov
int
inc
mov
loope
data16
pusha
mov
popf
inc
inc
dec
cmp
xor
fcomps
and
inc
add
fdivrs
mov
scas
push
push
cmp
pop
insb
mov
mov
outsl
fwait
pop
dec
push
xor
adc
test
lock
or
mov
push
lret
int
pop
arpl
pop
clc
test
push
in
xchg
lea
xchg
out
ja
pop
push
pop
arpl
pop
add
or
sahf
sar
mov
xor
mov
add
push
sub
pop
and
std
rclb
out
out
mov
sbb
inc
std
mov
and
jnp
pop
xlat
mov
mov
sti
stos
push
aas
jg
sbb
shl
fsubrl
pop
sbbl
adc
xor
fdivrl
fs
gs
popa
testb
mov
xchg
roll
jge
cmc
lds
xlat
mov
out
push
out
data16
notl
out
mov
into
dec
xchg
xchg
or
push
enter
sub
mov
mov
cld
or
lea
adc
mov
cld
push
fdivrs
dec
and
cmpsw
cmp
cwtl
aad
roll
sub
xor
mov
pop
xor
sub
call
push
add
mov
mov
cld
and
cmp
xchg
int3
aam
fmuls
lret
daa
rcrb
inc
xor
sbb
aas
movsb
mov
cmp
xchg
cmp
mov
dec
pop
pushf
subb
fcmovne
push
in
xchg
cld
shlb
ret
xchg
mov
xchg
stos
lds
cmpsb
xchg
imul
ljmp
xchg
out
mov
test
repnz
lea
call
push
push
jg
mov
fwait
call
cltd
inc
ja
push
xchg
addr16
ds
adc
jo
mov
xor
mov
sbb
mulb
sahf
mov
lds
sub
inc
mov
ljmp
pop
sub
xchg
mov
psubd
add
ds
sub
pop
in
and
jno
mov
cmp
sub
pop
pop
inc
outsb
or
and
repnz
shrl
mov
mov
xor
jnp
add
mov
bound
or
and
xor
cmp
sub
popa
out
addr16
sub
pushf
dec
scas
inc
sub
fwait
outsl
xor
mov
adc
mov
and
push
mov
adc
jp
jo
mov
in
mov
mov
sahf
psubusw
pusha
rcl
aad
lret
xor
dec
pop
sub
pop
cmp
sbb
add
out
cmpsb
xchg
pop
mov
shlb
sbb
pop
scas
in
in
ret
shl
dec
mov
adc
rorb
dec
xor
fsubrs
fwait
icebp
pop
push
iret
adc
inc
mov
push
and
xor
jmp
xchg
and
and
and
insb
jo,pn
add
xor
nop
bound
dec
cmpsb
inc
mov
push
jmp
adc
mov
es
int
jnp
cltd
fsubrl
outsl
bound
in
mov
fisttpl
ss
fidivl
sbb
sub
or
sub
jmp
popa
dec
push
adc
adc
pop
lret
push
cld
push
xchg
jo
shrb
cmp
jp
cli
movl
mov
pop
repz
in
sbb
in
and
mov
xor
or
jb
daa
cmp
ja
cld
dec
push
push
repnz
push
imul
xchg
mov
add
xlat
add
jge
xchg
je
mov
arpl
xchg
fcoms
out
add
push
call
dec
shr
sub
mov
jle
adc
test
ret
push
sbb
mov
fwait
xchg
and
fs
lods
bound
lahf
cli
jle
mov
xchg
jne
fwait
mov
fbstp
inc
stos
push
xlat
aad
xchg
out
lods
sbb
mov
jle
ljmp
sbb
clc
dec
dec
mov
sub
insb
enter
dec
xor
cmp
scas
push
xchg
sub
or
dec
xchg
out
push
jecxz
pushf
cmp
jecxz
pop
fucomip
xchg
repz
hlt
xchg
cmp
mov
pop
es
sub
aaa
sub
xchg
xchg
into
jnp
push
test
pop
subl
sub
push
out
jae
pop
pop
inc
jae
add
push
call
inc
jno
jmp
out
mov
dec
pop
jo
pop
lret
loop
xorl
sbb
and
jbe
mov
xchg
push
addr16
ficompl
in
mov
xor
insb
pop
jbe
das
stc
dec
jnp
dec
repnz
push
hlt
daa
scas
pop
add
sbb
push
sbb
inc
cmp
adc
stos
dec
or
sbb
mov
int
xchg
push
dec
call
bnd
jecxz
jecxz
push
xor
sbbb
daa
pushf
in
push
nop
scas
xor
fldl
xor
jge
push
xchg
mov
iret
test
sbb
xchg
test
scas
fs
xchg
inc
mov
sahf
insl
mov
scas
and
and
loop
mov
and
das
nop
movsb
icebp
dec
push
cmpsl
std
xchg
stos
inc
and
adc
in
out
sbb
mov
jo
scas
sar
and
dec
je
jb
xchg
sarl
stos
jmp
mov
mov
lahf
adc
or
adc
cmp
cmpsl
xchg
insb
push
std
or
jmp
and
pop
cmp
push
movl
dec
push
jb
and
testl
pop
dec
and
insb
and
push
mov
mov
popa
pop
push
push
push
cmp
scas
idiv
sbb
fsubr
cmp
jl
mov
push
push
pop
loope
dec
mov
fidivs
inc
adcb
or
pop
shl
cltd
pop
xchg
imull
inc
inc
xchg
or
inc
fs
sub
or
mov
mov
push
pop
push
clc
push
or
pushf
hlt
insb
fldl
clc
and
dec
or
xchg
je
or
add
add
hlt
and
pop
sub
hlt
inc
pop
lret
clc
push
xchg
mov
jmp
es
mov
mov
sbbb
jne
mov
jo
pop
out
or
push
lock
lods
or
out
ja
lods
and
dec
sbb
ret
jecxz
cltd
jbe
dec
jecxz
lret
int
nop
add
sub
call
push
outsb
xor
adc
leave
stos
loopne
inc
xchg
testb
or
and
pop
inc
push
nop
or
adc
xor
xor
push
test
in
stos
mov
xchg
int3
and
sub
inc
lods
fisttpl
inc
mov
xchg
cs
jno
int3
out
pushl
sbb
lods
test
call
add
push
sub
fwait
cli
loopne
mov
scas
arpl
repnz
pop
arpl
sbb
adc
mov
mov
jo
sbb
pop
jecxz
push
ljmp
iret
in
das
fimuls
nop
mov
pop
ss
adc
repnz
shrb
cld
adc
push
dec
lcall
nop
enterw
sahf
cmp
xchg
push
int
xchg
cld
std
lcall
jge
js
jae
enter
pop
mov
rorb
pop
or
lcall
imul
and
pop
jne
xchg
pop
andb
or
sub
xor
pusha
es
sbb
iret
xchg
repnz
lock
je
lcall
int
push
in
test
jns
in
cmc
ret
cmp
das
mov
insl
mov
dec
add
jg
loopne
inc
mov
dec
pusha
in
mov
sbb
call
mov
js
jb
lcall
scas
xor
pop
shrb
filds
aam
cmp
das
out
sub
mov
add
fsubl
fisttps
mov
mov
cmp
out
pop
das
push
jae
icebp
loope
push
repz
lock
or
mov
xchg
lahf
mov
lods
push
adc
and
fs
sarl
lds
fs
and
push
push
xor
push
mov
mov
ret
out
add
add
mov
inc
pop
push
push
cmp
xchg
or
arpl
xchg
outsb
popa
pop
imul
stos
pmuludq
loopne
adc
xor
loopne
mov
in
mov
ret
cmp
fldenv
mov
cs
idiv
push
scas
jg
loop
lret
mov
and
push
dec
add
nop
lods
sbb
notl
add
and
loop
pop
pop
mov
and
and
dec
inc
add
setbe
push
add
dec
std
roll
loopne
imul
int
dec
inc
cmpsl
leave
lcall
and
pop
pop
mov
cmpsb
sub
out
out
popf
pop
dec
jno
shll
or
push
mov
fisttps
insl
xor
in
sbb
ljmp
rcrl
jns
outsl
pop
xchg
push
sbb
adc
fldl
outsl
mov
ljmp
xchg
shl
fldenv
lahf
xor
pop
xor
cwtl
sub
sub
out
pop
out
fsts
aam
movsl
outsb
cwtl
push
and
and
or
leave
icebp
mov
outsl
mov
jne
mov
mov
xor
cmp
inc
push
xchg
adc
jne
bnd
inc
pop
dec
sahf
stos
cld
lret
clc
ljmp
loop
mov
pop
jb
movsl
mov
pop
xlat
mov
mov
mov
jmp
push
push
mov
dec
in
add
std
inc
pusha
push
pop
pop
out
notb
ss
or
jl
decb
mov
cli
sti
mov
jp
mov
xchg
ds
mov
inc
jno
mov
pop
sub
and
sub
lret
cmp
jl
mov
jge
sub
shrd
repnz
aas
jecxz
push
pushf
stos
or
pop
int
movsl
or
mov
jmp
mov
or
scas
mov
xchg
lahf
imul
rorb
loop
imul
mov
mov
jecxz
fldt
or
adc
dec
popa
js
xor
fcoms
mov
push
jnp
sbb
add
add
das
roll
iret
inc
push
in
jo
movsb
ret
sub
mov
dec
dec
inc
inc
mov
lahf
inc
pushf
ljmp
or
fisubs
outsl
cmp
iret
or
push
ret
aaa
enter
mov
inc
and
aas
repnz
lcall
inc
sbb
sub
sub
xchg
mov
test
bound
mov
dec
subb
scas
xor
pusha
int3
inc
lret
push
mov
xchg
mov
and
adc
jae
jae
pop
aad
mov
lcall
push
xor
pop
aam
addr16
mov
xchg
mov
push
xchg
mov
gs
jno
stc
mov
mov
and
sub
inc
push
pusha
or
sub
pushf
adc
and
aas
push
adc
es
mov
push
push
scas
push
test
jns
xlat
push
out
in
mov
jcxz
sbb
cmp
addr16
sub
inc
das
jns
mov
ja
jp
hlt
xor
add
pushf
xchg
inc
enter
bound
jp
outsb
movsb
sbb
adc
je
push
dec
lret
insb
cmp
aas
gs
pop
dec
adc
inc
sti
and
lea
jb
mov
popf
lret
xor
xchg
mov
dec
shlb
mov
divl
mov
addr16
dec
xlat
mov
push
xor
out
stos
int3
fxch
mov
adc
std
sbb
mov
movsb
mov
out
ljmp
incl
fwait
rclb
lods
xor
jp
in
sbb
jmp
popf
icebp
mov
inc
cmp
adc
in
rolb
and
js
and
adc
jmp
mov
dec
push
insb
xor
mov
jno
dec
pop
push
mov
sbb
xor
sbb
hlt
mov
dec
jnp
inc
ror
xchg
and
cmp
or
sub
cli
mov
push
push
pop
aas
in
addr16
jmp
push
push
shr
mov
add
cmp
sub
pop
or
int
ficoml
pop
out
xor
jb
les
pop
push
xorl
dec
mov
outsl
gs
movsb
inc
mov
iret
and
into
call
aas
outsb
repz
pushf
into
lods
xchg
movsl
sub
xchg
mov
mulb
popf
jbe
pop
out
and
cmp
loope
pop
in
rep
or
sub
jle
sbb
push
ret
neg
cmp
mov
pop
inc
sub
into
sbb
ljmp
xchg
ja
dec
xchg
mov
mov
cmp
or
jno
loope
pop
aaa
mov
imul
loopne
cs
xor
shl
lahf
sub
cmp
movsb
mov
sarl
lea
push
jmp
sbb
jp
or
test
cld
pushf
stos
push
adc
mov
movsl
jbe
fisttpll
push
roll
xchg
lods
and
ret
iret
rcrl
scas
ds
dec
cmpsl
fists
loope
push
rol
shrb
pop
mov
push
cmc
cmp
insb
stc
lods
mov
pop
jnp
jae
call
pop
and
idiv
into
mov
add
lds
adc
daa
cmpsb
popf
xlat
dec
and
dec
sub
cmc
dec
inc
and
aam
outsl
mov
in
mov
sbb
jae
sbb
dec
inc
scas
dec
pop
sarb
rorl
leave
adc
mov
scas
scas
pop
pop
loope
add
pop
jp
js
xchg
push
push
outsb
leave
insl
cld
shrb
jmp
imul
lret
sbb
ret
iret
inc
jmp
filds
stos
ret
addb
cmp
sbb
mov
jne
orb
les
cwtl
movsl
sub
mov
inc
rcr
mov
sub
iret
decl
repz
push
jecxz
xchg
scas
pop
mov
and
sbbl
push
jmp
mov
test
dec
jo
adc
jo
leave
xchg
popa
cld
incl
ud2
out
mov
aad
xchg
pop
xor
or
out
dec
or
imul
jo
pop
pop
jo
mov
mov
push
cmp
xor
adc
xor
pop
arpl
loop
movsb
lock
or
mov
push
push
je
lret
cmp
inc
sbb
add
and
inc
sti
push
fstl
sti
sbb
fiaddl
rolb
ja
adc
cmpsl
mov
jmp
mov
mov
or
int3
lcall
cwtl
mov
cld
into
ja
push
and
xor
xor
or
aad
aaa
sub
hlt
rolb
mov
xor
and
aas
xor
into
fdivrs
pop
pop
sti
add
negb
stos
push
pusha
clc
mov
imul
mov
and
push
cmp
pop
insb
imul
icebp
fcomip
mov
pop
jae
in
add
xchg
or
cld
inc
pop
cmpl
inc
push
arpl
adc
pop
push
aam
cmp
loope
mov
fistpll
div
inc
jno
stos
sbb
out
adc
lret
mov
pxor
cmp
mov
mov
mov
lahf
add
hlt
pop
sbb
xor
testb
lcall
cs
mov
aad
cmpsl
cwtl
shrb
lret
sbb
lods
pusha
les
sub
jp
pop
hlt
jecxz
hlt
mov
addr16
aas
cwtl
fisttps
dec
inc
ds
popa
addr16
dec
loope
push
xchg
cmp
mov
loop
adc
hlt
pop
rcrl
xchg
jg
add
subps
fisubrs
bound
out
aam
cwtl
in
xor
inc
sbb
lahf
mov
leave
gs
je
repz
adc
arpl
fldenv
mov
inc
lods
repnz
lods
adc
xor
jo
sbb
fdivl
daa
adc
mov
or
pop
pop
inc
out
mov
pop
repz
push
insb
movsl
leave
mov
in
mov
xor
sub
notl
lds
sbb
ljmp
int
pusha
pop
lahf
in
mov
sub
je
pop
adc
mov
cmp
sbb
xchg
pushf
jge
arpl
pop
lock
nop
out
xchg
lods
into
addr16
gs
jecxz
daa
dec
out
test
inc
mov
pop
xchg
jne
mov
lret
xchg
shrb
adc
cli
sub
lds
xchg
repnz
push
jg
pop
mov
and
push
jge
stc
jmp
cmp
push
push
js
push
out
imul
jo
add
aaa
cmp
add
and
hlt
repnz
xor
sub
cmc
int
dec
les
jge
ja
mov
fdivl
adc
sub
cwtl
popf
pop
mov
pop
stos
dec
or
addb
insl
xor
popf
lcall
mov
imul
in
filds
sub
std
or
cmp
dec
aam
inc
and
dec
xchg
cmp
adc
sbb
pop
xor
mov
cmp
sub
jge
pop
xchg
test
lcall
insl
sbb
add
movsb
movsl
adc
lret
mov
or
out
adc
adcl
pslld
xchg
pop
rorl
rcrb
ljmp
push
mov
mov
lcall
jnp
sub
xor
sahf
xchg
ljmp
cmpsl
divb
dec
or
jae
fisubl
in
mov
jecxz
es
adc
add
std
push
sub
mov
xor
data16
and
pop
stc
data16
fsincos
mulb
enter
aaa
adc
arpl
sub
mov
sti
std
mov
mov
sbb
add
repz
inc
sub
aam
ljmp
das
sub
lods
rolb
fists
pop
xchg
adc
enter
mov
mov
xor
pop
pop
push
andl
pop
scas
mov
pop
xchg
outsb
loopne,pt
mov
and
jnp
dec
mov
sub
sub
or
mov
dec
jnp
shrl
and
lahf
xchg
rorb
fsubl
test
inc
sub
icebp
mov
in
ret
inc
mov
jnp
and
push
hlt
es
fisttpl
add
jbe
add
push
outsb
pushf
dec
movsl
arpl
in
fs
adc
cmp
inc
inc
or
cmpsb
push
aam
dec
and
je
das
xor
pop
in
jae
daa
sbb
xorl
sbb
fcmovb
mov
push
popf
pop
mov
add
roll
fdiv
xchg
push
xchg
xor
cmp
rcrb
leave
pop
dec
pcmpgtw
or
ficomps
insb
stos
or
mov
adc
cwtl
mov
cmp
lock
js
push
pop
push
lret
sub
scas
add
imul
fs
aam
flds
and
popa
scas
lods
pop
jbe
adc
inc
jo
jns
lret
mov
int
int3
xor
sub
or
and
mov
call
stos
popl
push
or
sbb
push
lds
das
xsha1
cmpsb
dec
mov
rcll
xor
mov
cmp
mov
or
jmp
mov
imul
icebp
aaa
jbe
aaa
sbb
pusha
inc
insb
and
push
nop
adc
and
pop
cs
cmp
mov
mov
inc
mov
xor
js
cmc
pop
jae
scas
cmp
inc
aas
dec
mov
jle
jne
mov
mov
mov
fisubl
mov
repnz
cwtl
add
mov
cmpsl
lahf
jno
test
jo
push
imul
lds
dec
xchg
int3
cld
inc
and
test
jecxz
repz
jb
adc
and
jp
adc
push
inc
mov
mov
sub
jnp
out
sbb
jle
pop
mov
sbb
xchg
add
and
add
mov
aaa
xlat
dec
or
adc
cltd
add
test
lret
fiadds
mov
stos
mov
aaa
xchg
sar
mov
enter
or
pop
push
xchg
das
mov
leave
xor
dec
sbb
ljmp
mov
mov
shl
xchg
cmp
jbe
sbb
shrb
mov
sbb
sub
pop
inc
nop
int
lods
fistpl
out
sub
aad
cmc
jp
mov
push
cld
add
sub
cmp
cmp
push
inc
hlt
pop
lret
mov
pop
rcl
cmp
int3
into
jae
jb
xchg
jle
es
mov
adc
or
jle
mov
int3
mov
dec
push
sub
insb
call
inc
imul
and
xchg
add
inc
cmpsb
sub
mov
xchg
xor
mov
movsl
xchg
add
mov
test
push
loop
aad
loopne
pop
mov
pop
cmp
mov
inc
xrelease
mov
loopne
mov
into
fwait
popf
mov
or
out
pop
xchg
sbb
imul
push
and
mov
xorl
arpl
pop
mov
js
xchg
mov
ds
push
mov
ljmp
push
push
jmp
lods
sub
cs
push
jge
div
addr16
inc
ret
shlb
cli
add
mov
inc
repz
and
cld
or
mov
insl
adc
mov
push
scas
fisttpll
dec
in
fsubl
or
push
dec
lock
cmp
cmpl
adc
ret
pop
jecxz
cmp
les
orl
xlat
ljmp
lret
mov
cmpb
into
cld
loop
out
mov
hlt
test
push
mov
or
jmp
mov
aad
stc
adc
push
mov
vmread
inc
or
or
outsb
sbb
nop
cmp
test
popf
jns
inc
xchg
cmp
lods
pop
push
mov
sbb
out
pushf
adc
pop
dec
das
adc
cmpsl
dec
fnsave
es
mov
mov
jl
repnz
ret
inc
mov
push
out
incl
pop
push
lret
lret
add
xchg
dec
add
popf
mov
addb
test
rcrl
fsubp
daa
stos
ret
cmc
ret
xchg
mov
cmpsb
jmp
es
dec
push
mov
lock
push
outsl
cmp
cltd
in
xchg
pop
cmovae
mov
inc
add
add
psubq
pop
mov
movsl
jp
push
mov
adc
daa
lret
dec
push
ror
movsb
gs
lret
mov
into
repz
and
mul
mov
insb
pop
movsl
xchg
xor
xor
adcl
dec
inc
mov
mov
xchg
jp
test
xchg
fistl
and
jae
les
cmpsl
insl
jle
addr16
jnp
or
fadd
test
iret
cltd
bound
test
mov
add
dec
jge
in
and
and
mov
scas
fwait
mov
cltd
pushf
and
je
pop
ret
fdiv
incl
inc
outsl
inc
mov
jbe
push
mov
dec
testb
cli
iret
dec
adc
xor
mov
cmc
movsl
mov
mov
repz
pop
in
jl
das
shl
clc
insl
lahf
dec
les
xchg
pop
mov
sub
pop
arpl
dec
adc
or
xor
inc
cmpsb
mov
jnp
bound
je,pn
shll
pushf
cmc
mov
or
and
dec
addb
in
mov
mov
inc
call
pop
pop
pop
push
push
pop
loope
mov
cmp
pusha
push
out
push
adc
cmp
mov
in
inc
mov
mov
sub
mov
daa
dec
std
lock
fldl
cmp
xchg
xchg
shlb
gs
sbb
pop
cmp
pop
cmc
iret
mov
sbb
mov
mov
pop
pop
scas
push
or
addr16
mov
lcall
add
mov
mov
movsl
ja
xchg
aaa
jge
and
lock
adc
mov
xor
popa
clc
or
cli
sub
idiv
and
sub
lea
mov
xlat
dec
adc
xor
fcoml
insl
xchg
icebp
inc
ss
in
ja
mov
dec
out
cs
pop
cmc
push
cmc
call
cmp
inc
pop
outsl
add
cld
test
adc
add
aas
or
dec
into
in
mov
lahf
jnp
fwait
lock
mov
xor
sub
sub
mov
mov
mov
shll
repz
dec
jg
movsl
mov
cmpsl
sbb
mov
push
fcoml
sub
push
gs
std
ret
sbb
or
add
xor
mov
sbb
or
dec
push
movl
rorl
or
fs
daa
imul
fwait
sbb
pop
jae
push
jge
pusha
push
stc
cmc
xchg
fiaddl
mov
sbb
shll
inc
es
jp
cmpb
add
or
js
dec
les
and
jle
cmp
jmp
cmp
xchg
jbe
mov
sbb
add
fcomps
mov
mov
pusha
das
dec
inc
mull
int
fnstsw
nop
or
xchg
inc
pop
sti
pushf
mov
push
mov
rcll
in
bswap
cltd
mov
stos
and
cmc
rclb
pop
sbb
mov
test
mov
rorl
loope
jno
and
and
nop
jae
mov
xor
shr
ja
inc
jecxz
add
lods
and
jne
test
mov
push
and
cwtl
lret
adc
adc
dec
mov
jns
lods
imul
loopne
pushf
pop
pop
ljmp
xor
push
aad
mov
jb
pop
mov
and
sub
and
scas
outsl
lods
push
jl
push
and
pop
rcr
jmp
mov
jns
mov
xor
ljmp
clc
mov
ja
sub
inc
sbb
pop
push
or
mov
sub
scas
dec
mov
add
divl
add
arpl
xor
or
jbe
pop
mov
push
mov
insb
jae
mov
bnd
pop
cmc
or
push
mov
cmpsl
adc
and
mov
xchg
and
or
inc
sarb
add
repnz
daa
jp
into
pop
enter
ss
loope
inc
incl
popf
les
es
js
adc
lret
push
inc
pop
nopl
shl
stos
push
inc
mov
addl
jge
fnsave
xor
xor
inc
imul
fidivrl
xchg
mov
fs
push
jne
lea
scas
mov
add
pop
mov
cmpsl
pop
push
imul
orb
in
xchg
fildl
lods
sti
aaa
insl
aam
loope
adc
xchg
mov
insb
stos
iret
pushf
xor
cmpsl
aad
or
std
xchg
insl
jne
mov
mov
ja
pop
pop
inc
stos
pop
inc
sub
mov
xchg
sub
movsb
push
cmp
inc
inc
push
cli
sbb
xorb
dec
and
lds
flds
cmpsl
adc
dec
cmp
aaa
imulb
stos
pushf
rorl
rorb
or
dec
mov
add
mov
cmpsb
push
clc
pop
cs
fs
pop
jne
sti
cmpsb
mov
lea
inc
popf
lods
xchg
sbb
test
jno
dec
cmpsl
test
into
add
inc
clc
sbb
sub
sahf
shlb
push
jg
in
xchg
sbb
jae
mov
lahf
std
ja
pop
lods
ret
lret
dec
movsl
push
fcoms
and
ja
jp
int
push
and
popf
or
cmpsl
mov
mov
adc
testl
seto
stc
das
les
repz
into
inc
sbb
lds
xchg
sti
inc
cmpsl
mov
adc
aas
sbb
sub
pusha
add
xor
pop
add
data16
sub
aas
add
pushf
jle
stos
fisttpll
cwtl
inc
scas
ds
mov
sbb
mov
movsl
sub
xchg
mov
repz
mov
scas
mov
push
bound
loope
pop
mov
fdivs
mov
daa
jae
lret
addr16
movsl
lea
sbb
jg
mov
outsb
xor
mov
mov
and
cs
inc
sti
in
enter
repz
pop
mov
mov
test
scas
ret
repnz
sbb
sub
sbb
sbb
xchg
jns
mov
adc
or
std
std
jp
xchg
lds
and
aaa
stc
sti
add
push
xchg
xchg
push
inc
enter
push
mov
loop
outsb
add
cmpsb
sub
cmc
fnstenv
jle
cmpsb
into
cmp
push
xor
leavew
loope
inc
ljmp
int3
pop
adc
push
popf
push
add
bnd
xchg
add
dec
pop
cwtl
cmpsb
arpl
xchg
jnp
add
jns
and
push
sbb
inc
fadds
or
insb
pushl
or
pop
sub
dec
icebp
popa
rcll
sub
jp
push
flds
pop
jecxz
mov
xchg
sbb
lret
rclb
ja
stos
lcall
jecxz
mov
in
push
rol
xchg
adc
pop
scas
mov
std
jae
out
or
pusha
pushf
pop
popf
enter
jmp
mov
inc
sarl
ds
gs
pop
in
repz
out
stos
sub
pop
sarl
or
aam
pop
adc
push
pushf
decb
xor
dec
push
fdivrl
insb
pushl
mov
add
or
iret
xlat
sub
leave
mov
jmp
cld
jecxz
dec
scas
xchg
das
mov
pushl
orb
ds
add
pop
outsb
sbb
mov
mov
nop
mov
lods
call
push
jge
sbb
dec
mov
mov
pushf
cmp
mov
pop
andl
mov
adc
aaa
mov
pop
scas
dec
fcomps
je
cmpl
stos
clc
jle
stos
xor
xchg
aam
and
sbb
clc
lret
lods
ret
in
xchg
mov
mov
adc
mov
sub
clc
sahf
test
xor
dec
mov
inc
ds
mov
xchg
push
push
sbb
int
test
lds
iret
aad
out
inc
xchg
xchg
stc
or
add
sbb
mov
lahf
mov
push
cmp
push
lret
icebp
stc
rcrb
ret
cmpxchg
or
push
xchg
enter
adc
jle
sub
mov
and
inc
js
pop
fsub
lret
sbb
fadds
mov
push
inc
lret
jl
pop
aas
ja
cmp
aaa
mov
les
pop
cmp
sti
int3
arpl
dec
outsl
enter
push
les
lods
cmp
cmp
cmp
js
mov
test
and
movsl
das
or
xchg
add
sub
push
sbb
iret
cmp
pop
cmp
bound
xor
insb
xchg
es
and
push
sbb
mov
inc
mov
mov
inc
insb
incl
ret
repz
add
mov
cld
shlb
jp
mov
lods
insb
pinsrw
pushf
mov
pop
stos
pop
xor
test
outsb
mov
dec
inc
mov
sub
stc
cli
dec
xchg
es
sub
loopne
loope
shrl
filds
stos
cmp
xor
add
push
repz
jmp
in
fistps
mov
int3
ja
push
pop
imul
or
fbld
jne
lcall
arpl
shlb
call
adc
js
pusha
xchg
or
jmp
nop
push
lahf
pop
inc
int
xlat
mov
imul
bound
sub
sbb
mov
xchg
jno
mov
or
add
mov
in
mov
out
inc
inc
insb
fimuls
jg
jns
mov
push
stos
or
sub
mov
or
sbb
in
pop
fsubr
movsl
sub
fisttpll
sub
cmp
or
xor
ss
lea
fs
push
mov
mov
rol
aam
sbb
push
lods
pop
sub
les
out
fwait
test
movsb
rcll
test
int
lahf
cmc
xchg
xor
ja
rolb
sub
lret
loope
scas
jg
jo
mov
sub
in
call
adcl
imul
leave
mov
mov
xchg
pop
mov
dec
mov
out
aad
push
jbe
cmc
inc
arpl
out
stos
testl
mov
xorb
call
xchg
loopne
insb
jbe
push
cmp
jae
cli
insl
push
icebp
sbb
add
xchg
lds
out
pop
push
cmp
in
loop
adc
inc
popa
in
add
inc
daa
lds
lds
sbb
xor
jno
mov
jno
pmaxub
imul
stc
int
and
cmp
mov
dec
adc
sbb
pop
adc
nop
int3
fcmovnu
xor
jnp
es
das
aas
adc
cmp
mov
mov
aas
in
push
lock
popa
lahf
loopne
jo
jo
dec
or
cmp
pop
mov
adc
divb
mov
inc
scas
pop
iret
mov
cmpsl
sahf
pop
cwtl
jnp
lret
rolb
xor
fisttpll
cmp
outsl
cli
popf
jnp
sub
cmp
out
ss
ljmp
into
shl
mov
and
jmp
mov
cmp
dec
push
cmpsb
lret
in
lret
xchg
or
mov
add
nop
or
shrl
pop
sti
mov
jmp
xchg
sbb
mov
int
leave
xor
repz
test
aad
pop
jge
pop
outsl
jp
lret
lock
pop
loopne
and
es
outsl
nopl
out
faddl
sub
mov
push
std
add
cs
ljmp
adcb
ljmp
int
pop
mov
push
mov
mov
push
jbe
adc
sub
ret
call
mov
cltd
out
adc
insb
pop
mov
data16
dec
std
aam
test
pushl
bound
sub
inc
pushf
xorb
sub
mov
add
mov
call
lahf
push
fmuls
nop
push
mov
cmovb
push
icebp
pop
data16
in
jge,pn
and
xchg
scas
mov
aas
enter
jmp
jp
xor
popa
and
inc
xchg
lds
hlt
xor
jb
dec
push
jmp
rcrl
add
adc
test
or
mov
nop
pop
jo
outsl
push
mov
les
pusha
add
dec
and
inc
andb
dec
shl
pusha
fsubl
add
xchg
insb
jg
adc
mov
inc
insb
dec
clc
fistpl
cld
aam
movsb
push
jbe
pop
clc
mov
xchg
outsb
xor
dec
add
add
mov
sbb
pop
cmpsb
or
cmp
and
jne
jle
ret
dec
push
adc
fldenv
cmp
dec
loop
mov
rolb
xor
pop
add
mov
cwtl
dec
inc
sub
fstl
adc
push
push
push
cmp
xchg
outsb
pop
push
ss
nop
mov
cmp
add
fsubrs
stos
or
cmpsl
xchg
insb
cmp
pop
xor
inc
lea
sahf
mov
adcl
cmp
cld
repnz
mov
push
add
nop
enter
adc
ja
or
out
notl
test
dec
adc
xorl
fiaddl
cmp
push
out
repz
sub
pushf
sub
bound
bound
jnp
cwtl
orb
xchg
fstl
pop
sub
mov
mov
cmc
dec
in
cmp
test
dec
pop
push
xchg
icebp
xchg
cwtl
outsb
or
into
xor
xchg
pop
xchg
in
jl
pop
lret
or
or
jl
or
mov
je
dec
aas
nop
xlat
icebp
and
mul
les
gs
pushl
ss
nop
js
pop
sbb
pop
fldenv
pop
pop
and
rol
ds
push
xchg
rorl
lret
addr16
aam
cmp
sbb
mov
popa
adc
xlat
or
out
xorl
xchg
push
inc
mov
mov
mov
fmuls
lock
mov
sti
or
xchg
mov
sub
lahf
jae
aad
xchg
out
fbld
adc
mov
push
adc
xchg
cmp
pop
nop
iret
dec
lods
fcoml
sti
sbb
adc
push
scas
sbb
mov
jmp
arpl
jbe
cmp
add
aaa
das
lea
push
icebp
std
xor
hlt
mov
test
add
dec
aad
daa
icebp
movsb
aam
adc
jge
not
rclb
dec
and
mov
adc
fs
fnsave
stos
and
lods
pop
pop
pop
push
mov
xchg
mov
pop
cld
orb
sub
scas
mov
push
and
mov
outsb
jp
mov
scas
jo
sub
pop
cmp
cmc
or
popf
pop
add
inc
adc
push
and
ret
push
insb
pop
cmpsb
test
in
mov
stc
inc
and
mov
mov
dec
xor
xchg
rclb
mov
xchg
cmp
jb
les
dec
xchg
xor
std
orb
ljmp
jle
loop
or
in
in
dec
xchg
mov
je
inc
ljmp
pop
bswap
test
js
rol
enter
add
mov
pop
mov
ljmp
ret
add
dec
lea
xchg
add
sub
test
lret
test
outsl
fwait
adc
fimull
inc
push
xor
push
or
sbb
add
cmp
xor
std
push
cmp
dec
xchg
rcll
clc
insl
rorb
dec
lahf
testl
out
aas
fists
out
or
jecxz
mov
fs
mov
inc
inc
pop
dec
jo
push
pop
daa
lods
fistpl
mov
sar
pop
and
ja
sbb
gs
dec
or
or
stos
sbbb
cltd
shll
sbb
ja
pop
mov
lock
adc
arpl
cmp
das
pop
sub
aas
inc
add
insb
rcll
pop
imul
clc
jp
clc
sbb
mov
mov
rcr
push
mov
cmp
fs
cmp
xchg
sub
ja
jmp
dec
es
sbb
xchg
iret
loop
jae
adc
inc
ss
mov
adc
aam
int3
lret
xor
xchg
jns
jl
shrl
dec
jle
add
int
les
inc
push
out
xor
push
inc
fistpl
push
add
orl
test
cmp
inc
loopne
push
dec
lret
push
sub
dec
sti
js
mov
sub
and
sti
daa
dec
daa
aaa
jno
mov
mov
or
bnd
ljmp
pushf
cmp
and
nop
dec
clc
fsubrl
outsb
ds
movsl
shlb
cmp
pop
out
sahf
movsb
mov
enter
sbb
mov
adc
insb
lret
lock
fwait
mov
sub
add
in
cmp
inc
outsl
loop
insb
imul
popl
cld
or
inc
sahf
xchg
inc
fisubl
sub
mov
lods
mov
and
push
movsb
and
ja
repnz
pop
lret
iret
mov
mov
cwtl
jge
int3
mov
fcoms
jnp
cwtl
jnp
call
mov
mov
scas
aas
je,pn
xchg
jns
cmp
cmp
mov
mov
mov
jbe
mov
cmovp
xor
ss
repnz
in
outsl
gs
loope
scas
xor
sarl
fs
scas
dec
xor
jo
cmpsb
mov
movsl
ret
mov
insb
aad
xor
push
add
and
sbb
add
iret
mov
and
push
push
pop
push
ja
fucomip
loop
shrl
xor
mov
jl
xlat
or
pop
jno
sub
xchg
inc
adc
lods
adc
pop
push
inc
stos
sub
or
dec
call
imul
xchg
and
iret
jo
mov
aaa
scas
push
nop
inc
fistpl
shlb
fiadds
out
jns
push
fstps
leave
dec
ja
bound
xor
cs
mov
hlt
ds
jo
sub
outsl
insb
pop
aas
stc
xor
setl
lds
or
test
xor
pusha
sbb
pop
or
loopne
mov
inc
xor
pop
movsb
in
xor
sbb
inc
cmp
sub
sbb
dec
mov
ror
aaa
xchg
inc
pop
mov
ljmp
pop
xchg
jns
les
cmp
mov
jg
iret
adc
outsl
icebp
fwait
imul
add
sti
cs
mov
xor
ret
lcall
arpl
pop
mov
adc
out
movsb
adc
ds
popa
stc
push
cmpl
push
stc
mov
dec
push
and
jge
push
xchg
xor
sbb
dec
out
xor
adc
mov
and
inc
ret
sbb
nop
cmc
xorb
push
lods
je
shl
pop
insl
in
clc
xchg
ljmp
cwtl
jne
jle
dec
gs
fistl
jl
or
jmp
shr
fucomi
lret
rcrb
loopne
and
and
mov
jl
data16
out
inc
loop
adc
jp
test
cmpl
push
jge
sbb
pop
shrl
mov
cli
adcl
jnp
cwtl
test
mov
adc
je
pop
sub
jmp
pop
dec
jo
ret
and
or
js
fisubs
inc
xor
or
aad
sbb
or
adc
jle
or
hlt
mov
sub
cmc
mov
call
enter
adc
add
mov
je
pop
mov
clc
inc
ficoms
dec
imul
push
insl
into
or
xchg
cwtl
push
push
or
and
imul
fsubl
mov
sbb
jnp
or
xchg
xor
popa
and
das
rorl
sub
idivb
sub
out
dec
xchg
or
ja
inc
addb
roll
insb
and
in
xchg
dec
cmpsb
out
pop
ret
cmp
ds
in
call
cmp
sub
xor
dec
add
xchg
mov
sub
inc
cmp
xor
mov
mov
outsb
ret
sbb
xor
leave
inc
shll
sbb
pop
aam
jb
mov
sbb
cmp
fisttps
push
flds
loop
xor
xchg
les
lods
sbb
pop
mov
inc
dec
movsb
or
ljmp
rcrl
sahf
mov
test
dec
mov
adcl
xchg
fstl
add
dec
push
in
cwtl
adc
test
bound
roll
mov
mov
sahf
jne
add
or
jnp
inc
test
sub
cmp
cmp
fisubrs
fstps
test
pop
pop
bound
push
mov
scas
cmc
stos
in
xchg
int
enter
push
adc
loopne
pop
hlt
and
decb
rol
jecxz
push
filds
rorb
in
jl
and
call
push
mov
mov
push
pop
ficompl
sbb
out
adc
icebp
insl
das
sub
in
sub
icebp
cmp
inc
mov
mov
push
call
cmp
aam
fnstsw
add
into
sbb
pop
jmp
hlt
add
jmp
mov
clc
movsb
jnp
mov
adc
repz
adc
or
or
pop
addr16
sahf
cs
lahf
arpl
push
inc
into
dec
inc
test
test
push
and
in
and
out
xchg
dec
pushf
loope
out
dec
nop
mov
jae
xor
sbb
fs
jmp
stc
xor
xchg
push
xorl
push
pop
dec
jbe
mov
inc
jb
xlat
fstpt
mov
rolb
mov
cmpsb
or
or
fidivl
insl
ret
cli
sub
popf
mov
xor
cmpl
mov
aas
idivb
rcrb
pop
stos
pop
fcoms
mov
pushf
testl
fwait
xlat
inc
xchg
add
imul
xor
sbb
xor
dec
scas
cmp
xlat
stos
arpl
or
scas
sub
jae
cmpsb
or
adc
push
pushl
js
fwait
imul
push
sbb
int
xchg
push
daa
call
xchg
push
iret
add
fnsave
xchg
rcrb
add
or
neg
pop
add
jo
xchg
fnstcw
push
fiadds
ror
sbb
cmc
sahf
in
loopne
lods
and
test
pop
adc
mov
cltd
pushf
mov
scas
inc
mul
movsl
test
sbb
in
sbb
cmc
mov
sub
inc
cmp
cltd
jnp
dec
bound
jg
rol
test
bound
jnp
clc
inc
into
and
bnd
jmp
rcrb
mov
sbb
icebp
jbe
sti
loope
jno
subb
es
dec
lcall
test
or
xor
fnsave
pusha
add
push
dec
push
repz
cmp
daa
xchg
dec
xchg
mov
mov
loopne
xlat
cmc
mov
in
iret
push
int
pop
inc
inc
push
insl
rclb
adc
in
or
stc
add
adc
test
in
in
xor
mov
call
sub
cmpsb
and
inc
ds
jl
pop
and
sub
xchg
nop
aam
xor
test
inc
data16
dec
fbld
jne
adcl
js
mov
mov
ja
adc
cli
mov
movsl
popa
in
mov
pop
decb
lret
or
jmp
cld
fs
adc
aam
mov
pop
ja
js
cs
pop
orb
lcall
sub
jae
push
cltd
mov
xor
mov
std
notl
gs
mov
push
sbbl
inc
or
lds
mov
xor
leavew
imul
dec
and
aas
xor
jb
cmc
mov
xchg
imul
mov
mov
ret
fwait
scas
mov
imul
and
dec
cs
xor
adc
bswap
xchg
add
jle
dec
loope
dec
or
dec
sbb
sub
ret
cmp
jae
mov
fsubr
sub
xchg
cmpsl
mov
cmc
gs
push
dec
orb
push
sub
rolb
push
pushf
pop
push
imul
addr16
pop
pop
scas
or
mov
push
popl
push
jo
insl
adc
jge
sub
pop
pop
or
fwait
xchg
loope
sub
jae
and
in
push
add
xchg
jmp
pop
sahf
pop
add
adc
cltd
xor
push
xchg
shrb
push
mov
pop
pusha
sub
pop
dec
jle
mov
xor
add
push
mov
fistpl
push
push
pop
push
inc
pop
pop
lods
push
add
lahf
adcl
add
pop
xchg
push
mov
jecxz
in
push
cs
and
mov
leave
lcall
mov
stc
pop
arpl
or
lods
sti
aam
aad
fldl
imul
cmpsb
dec
pusha
xor
lret
cmp
sarb
sahf
adc
vpsubw
mov
popf
in
stc
push
aam
and
notl
int
xchg
rcrb
mov
int
test
fsub
xchg
push
not
jmp
arpl
movsb
loopne
jl
stc
mov
mov
xor
rorb
fldenv
in
iret
pop
sbb
and
pusha
incb
fisubrl
repnz
daa
push
or
lret
outsl
adc
cmp
fs
xor
stos
fidivrl
pop
pop
call
fsubrl
push
enter
push
in
add
cwtl
mov
ret
pop
js
xor
mov
inc
inc
dec
adc
cmp
sti
aad
ja
repz
nop
sbb
sbb
sahf
sarl
cmovle
outsb
pop
outsb
dec
sbb
int
int
push
in
pop
push
outsb
sbb
add
das
jae
jle
int
pop
mov
cld
add
rolb
aad
and
xchg
xor
or
push
outsl
xor
loope
push
inc
lods
imull
mov
dec
aaa
rclb
mov
add
add
das
push
push
in
xor
xchg
inc
inc
xor
jle
add
repnz
das
fstl
fisubl
or
daa
cmp
xor
inc
xor
and
insb
lret
insl
js
lcall
test
push
mov
jl
dec
hlt
xor
sbbb
cli
fs
mov
fdivs
repz
mov
pop
imul
mov
pop
mov
in
cmc
mov
jnp
jbe
or
adc
pop
ficoms
aaa
xor
inc
mov
movsl
aam
dec
xacquire
mov
xchg
jg
cmpsb
and
clc
aaa
mov
jmp
fwait
push
loop
shlb
jb
cs
push
pop
push
mov
jo
sub
lock
sub
ret
xor
mov
dec
adc
mov
push
mov
xor
insl
aad
sub
mov
in
mov
pop
repz
xchg
pop
jg
repnz
jne
push
loop
pop
lods
mov
mov
gs
adc
cmp
jmp
movsb
fldlg2
push
mov
pop
mov
nop
out
scas
icebp
ffreep
pop
pop
outsl
inc
aad
test
xchg
dec
rcll
jbe
addr16
or
sbb
sub
pop
inc
pop
daa
push
add
stc
cli
fs
push
dec
insl
push
mov
and
mov
out
cmp
sbbl
out
flds
icebp
hlt
xchg
mov
aam
inc
clc
lds
mov
xchg
lret
movl
adc
add
jmp
sbb
adc
int3
in
or
mov
pop
dec
adc
test
stos
lock
imul
pop
movl
test
icebp
and
xor
adc
lret
and
sbb
cmc
enter
mov
pop
fcomp
cmc
pop
loop
sbb
cmc
fsubp
add
jl
loopne
insl
mov
adc
jmp
sbb
fdivrs
or
ljmp
mov
adc
je
sbb
push
daa
mov
pop
mov
xor
push
cmc
push
cmp
jl
stos
clc
ret
hlt
int
dec
or
adc
dec
dec
jmp
adcl
aam
add
xchg
cld
icebp
cmp
or
sbb
xor
cmp
or
push
dec
sub
jae
xchg
mov
mov
sar
push
cmp
pushf
fmull
xor
std
dec
call
mov
dec
push
or
clc
xlat
dec
mov
shr
notl
das
pop
fstl
int
std
fcmovnb
push
or
mov
scas
out
sbb
stos
mov
xchg
cmp
pop
mov
fsubs
sbbb
in
jp
sbb
pusha
test
inc
aam
fmull
mov
lret
sbb
outsl
imulb
xchg
mov
mov
jne
pop
or
cmpl
movsb
dec
addr16
xchg
out
mul
dec
jp
jge
movsb
mov
fdivl
movsb
and
sub
and
add
push
insl
cwtl
push
jmp
dec
das
imul
shrl
xchg
jge
jno
pop
and
lcall
into
aad
xchg
in
sub
lcall
xchg
adc
mov
add
ljmp
inc
cmp
adc
push
mov
test
push
xchg
adc
xchg
movsb
dec
xchg
push
fmul
jbe
in
or
clc
lcall
xor
jnp
inc
cmp
arpl
scas
mov
mov
mov
nop
icebp
mov
dec
cmp
and
stc
xlat
mov
and
mov
push
test
aad
rorb
mov
xchg
scas
iret
adc
ss
push
pop
mov
mov
pop
push
mov
jbe
nop
rcll
xor
and
rorl
and
mov
jmp
int3
repz
dec
test
xlat
sbb
cmp
scas
cmpsl
sub
notb
scas
pop
mov
ret
adcl
sub
loop
or
fs
pusha
sti
outsl
xchg
pop
inc
bound
loop,pt
xchg
stos
push
dec
push
in
pop
lea
mov
cmpsl
cmpsl
mov
xchg
xchg
lods
xor
les
adc
mov
cwtl
int
stos
daa
insb
aam
arpl
into
jle
xchg
out
cmp
into
pop
out
test
adc
sti
stos
adc
stc
aaa
cmpsb
rcrb
out
das
push
aam
enter
pop
in
inc
or
stos
adc
dec
clc
xchg
sub
es
xchg
cmpsb
outsb
inc
jbe
bound
inc
push
test
pusha
loope
jmp
pop
popa
dec
xchg
mov
aas
cmp
adcb
push
adc
or
mov
cmpsb
adc
mulb
push
add
pop
insl
xchg
ret
push
sbb
sub
call
aad
and
cmp
mov
cmp
xchg
fwait
scas
ds
push
or
lcall
cmpsb
outsl
xchg
mov
xchg
mov
sahf
sub
repz
push
and
jbe
xchg
jp
aad
jmp
sub
cs
mov
sub
jl
cltd
fdivs
lods
cli
push
xchg
movsb
sbbl
call
in
mov
push
dec
hlt
pop
test
mov
mov
sbb
jb
jge
cmpsb
enter
jmp
jb
dec
pushf
test
sbb
xchg
lds
ret
dec
or
orb
xchg
mov
xlat
cmp
mov
stc
mov
add
add
jnp
movsl
lret
jmp
gs
add
mov
xchg
sub
inc
ljmp
repz
xor
cs
jmp
push
jl
mov
add
mov
xchg
aas
inc
pop
js
mov
xor
inc
pop
stos
or
inc
bound
mov
sub
popa
mov
ss
pop
add
dec
or
jnp
out
xchg
ljmp
mov
cmp
mov
push
clc
lods
dec
jbe
inc
xorl
or
out
mov
mov
add
in
push
adc
pop
cmp
aad
jl
cmp
jno
and
mov
sub
leave
icebp
ljmp
repz
mov
rcrb
jbe
push
mov
cmp
adc
or
mov
inc
cmp
jge
pop
daa
jns
adc
test
inc
das
mov
sub
neg
rolb
xor
mov
repz
es
mov
dec
push
lcall
testb
lds
shrl
fildl
mov
repnz
ja
out
mov
push
mov
dec
mov
xchg
ja
jne
sarl
dec
add
xchg
pop
outsb
in
push
test
gs
stos
cmp
xchg
sub
push
and
in
stos
lds
fnstenv
sub
pushf
push
fwait
cmpsl
and
inc
jg
stos
and
push
out
pop
mov
std
test
test
lcall
test
test
ret
mov
inc
movsb
fsubrs
cmp
fisubl
movsb
cld
cmp
jg
xchg
lods
inc
test
sbb
mov
movsb
cltd
jp
xchg
xlat
movsl
aas
rclb
lcall
mov
aad
stos
and
xchg
inc
popf
sti
movsl
and
cli
pop
jo
mov
enter
push
jmp
push
aam
mov
scas
sub
push
mov
das
rolb
test
in
pop
inc
mov
inc
in
inc
pusha
jg
aam
cld
xor
and
and
inc
dec
cltd
cld
adc
push
dec
sbb
stc
jecxz
mov
xor
pushf
sahf
dec
xlat
jo
and
pop
fwait
roll
inc
insb
pop
pop
push
testb
scas
mov
and
aad
sub
inc
mov
xchg
mov
pushl
dec
rolb
lods
popf
mov
jns
repz
xchg
jg
mov
or
std
sub
shlb
test
and
push
sub
cmp
test
lea
mov
mov
push
xor
aam
ja
es
das
cld
shll
aas
pop
cmpb
xchg
push
sub
in
and
lods
pushl
lcall
dec
push
pop
mov
mov
push
shrl
or
sub
dec
mov
xchg
inc
cmpsb
cs
into
idivl
xchg
and
dec
es
ret
push
fisttps
xchg
fwait
scas
xor
adc
aas
and
pop
push
xor
xor
cmp
push
dec
mov
mov
xchg
sub
cltd
movsb
test
inc
xchg
nop
inc
and
pop
inc
mov
icebp
inc
push
push
cmp
enter
xchg
mov
sbb
mov
xchg
ljmp
outsb
sub
les
adc
stos
xor
inc
pop
or
lcall
lods
xchg
mov
mov
sti
xchg
mov
ja
ficoms
or
xchg
fsubs
fldl
shlb
out
inc
or
jp
mov
imul
mov
jbe
push
mov
push
outsb
or
or
jne
repnz
jae
mov
mov
test
arpl
int
add
push
pusha
idivl
adc
jne
cmpsl
ret
jl
mov
pushf
xlat
jg
dec
mov
mov
dec
lret
pop
pop
ret
fstpl
jmp
movsb
adc
les
mov
nop
dec
cli
xor
sub
jmpw
shl
push
lea
loope
or
push
into
dec
sub
xor
in
imul
orb
or
xchg
fsub
cwtl
mov
mov
mov
pop
mov
shrl
mov
push
xlat
xor
jl
or
dec
mov
outsl
pop
data16
xchg
aaa
cltd
mov
sbb
sbb
mov
pop
mov
xchg
lock
cmp
pop
lahf
stc
mov
loope
adc
adc
push
inc
fidivs
mov
push
inc
dec
jp
mov
mov
test
and
int
cmpb
jmp
sub
in
in
sahf
sbb
outsl
or
pop
popa
fwait
fs
and
xchg
sarl
insb
fadds
sub
jns
push
ret
ja
sti
outsb
iret
pop
sahf
arpl
and
inc
dec
sahf
cmpsl
outsl
cmpsl
mov
pusha
out
inc
xor
aas
subb
loop
xor
dec
adc
jne
add
filds
mov
andl
sub
mov
or
and
sbb
int3
or
test
push
mov
test
sbb
dec
fcmovbe
stos
ret
std
lea
or
mov
lds
xor
jl
int
xchg
and
addr16
cmpsb
cmp
mov
pop
lret
add
mov
add
mov
cld
rcr
mov
pop
outsl
push
adc
mov
leave
xchg
inc
jmp
push
xorl
mov
push
push
insb
jns
lahf
xor
jns
lock
mov
popf
or
scas
jno
mov
fidivl
arpl
cmpsb
adc
lods
mov
push
mov
out
jne
pop
adc
lock
mov
ror
cmp
cmp
ret
in
test
push
adc
fmuls
mov
repnz
jge
or
inc
inc
add
aad
cmp
sbb
xchg
xchg
stos
nop
scas
pop
mov
insl
rorb
jmp
sub
add
iret
sbb
cld
pop
fucomp
loopne
fiadds
mov
rol
push
in
xchg
push
imul
cwtl
ljmp
xor
mov
and
outsl
pop
pop
hlt
push
mov
mov
ljmp
bswap
test
ljmp
or
push
mov
fldenv
iret
es
mov
pop
test
push
cltd
cmp
lret
divb
cmp
mov
outsb
sub
shrl
shlb
ja
mov
jne
xchg
pop
ret
sbb
xchg
jle
scas
pushf
and
push
xor
add
inc
push
divl
jno
fimuls
xor
push
xchg
or
test
jg
cli
sub
stos
or
ja
icebp
push
pop
sub
and
cmc
cmp
mov
imul
roll
add
inc
movsl
scas
sub
mov
pop
push
dec
or
mov
mov
fistps
int3
out
pop
mov
addb
flds
push
pop
les
int
mov
add
jno
adc
or
into
call
fimuls
dec
aaa
cmp
js
sub
jno
dec
arpl
shl
mov
fisubs
mov
fsubrs
test
xchg
pop
cmp
dec
mov
ret
cmc
jmp
fsubrl
icebp
lret
stos
loopne
fcmovnbe
out
dec
mov
stos
fistpll
movsb
sbb
outsl
ret
scas
jle
leave
xor
xchg
dec
jmp
sbb
call
jns
pop
mov
push
xchg
mov
ret
xchg
aaa
out
fs
mov
add
xor
jl
jb
dec
repz
cmp
adc
cmp
mov
and
out
out
imul
outsl
add
mov
xchg
leave
fdivl
subb
jns
mov
dec
aad
mov
xchg
sahf
lods
sbb
jne
push
daa
pop
and
inc
in
xchg
jo
mov
adc
jge
xchg
decl
sbb
jb
dec
jns
cwtl
jecxz
shl
scas
and
adcb
or
in
dec
push
pop
push
scas
aaa
test
mov
mov
push
fldenv
popf
or
ja
cmp
std
xchg
adc
ds
lret
je
mov
mov
test
lret
jl
int3
xchg
adc
ret
mov
xor
test
mov
dec
lds
mov
and
jo
mov
retw
es
pop
fs
ss
aam
daa
jmp
pusha
jl
jecxz
inc
cmpsl
xchg
mov
shll
mov
mov
add
lea
dec
clc
aam
dec
dec
mov
cmp
int
test
fldenv
mov
leave
inc
in
add
add
scas
les
out
les
cmp
out
cmpsb
orb
jle
stc
sbb
bound
and
sub
xchg
hlt
jo
push
stc
lock
xchg
ljmp
ss
add
dec
cltd
aad
insl
dec
shrl
roll
test
mov
mov
jae
and
cmp
outsl
and
out
push
jl
mov
or
test
in
pop
and
xor
cli
arpl
mov
pop
mov
sbb
mov
jae
repz
and
out
and
mov
mov
push
test
cmp
mov
imul
test
inc
insb
sbb
xchg
jecxz
dec
rcr
mov
or
mov
test
sub
push
in
iret
jno
mov
mov
cmp
cld
fadd
dec
inc
shlb
sub
adc
lcall
addr16
jne
mov
add
xor
out
sbb
sub
aas
cmp
push
fwait
push
scas
sbb
arpl
add
cmp
cmp
out
pop
int
push
jge
inc
test
movsb
or
mov
addr16
jns
aas
mov
cmpb
stc
clc
call
sti
inc
int
mov
rcrl
xchg
push
shrl
adc
sub
popa
mov
ret
pop
jl
dec
mov
fs
pop
sbb
loop
shrl
inc
push
pop
mov
cmpsl
daa
pop
sub
das
inc
push
rcrb
mov
pop
inc
int
mov
sub
jp
mov
cmp
sbb
push
movsl
fisubrs
xchg
shll
mov
lret
in
loop
leave
repnz
out
add
cli
pusha
fldl2e
call
leave
cwtl
dec
lods
leave
mov
gs
stos
mov
mov
aam
push
daa
scas
jmp
mov
out
and
lret
xor
dec
mov
cmpsl
test
call
out
cmp
inc
lahf
mov
mov
xchg
loope
xor
loopne
and
aad
call
sbb
iret
or
or
jo
ljmp
enter
sti
aaa
pushf
insl
in
xchg
dec
test
bndldx
push
mov
xor
out
sbb
push
mov
js
sub
ds
sbb
ljmp
aaa
int
sbb
aam
aad
xorb
add
data16
loop
addb
outsl
xchg
subl
xor
push
insb
lods
push
adc
mov
mov
mov
pop
add
cmpsb
pop
and
push
ss
or
dec
lock
mov
push
mov
push
loopne
mov
cld
cmp
sub
out
int3
aad
rorb
mov
cmp
mov
jl
rcr
or
out
adc
out
lds
and
xchg
push
es
daa
or
stos
pop
sbb
daa
add
inc
add
jge
adc
imul
loopne
and
or
fwait
inc
aam
and
push
pop
neg
cmp
inc
push
pxor
mov
mov
dec
pop
and
ds
mov
daa
dec
mov
push
jecxz
jle
cld
aaa
adc
imul
and
mov
jl
pop
stos
xchg
mov
sbb
fidivrl
mov
adc
inc
pop
jmp
aad
dec
and
lret
xchg
rep
dec
pushf
mov
sbbb
push
lea
lret
setle
int3
out
dec
stos
lret
popa
inc
xchg
xchg
jns
and
test
mov
mov
pop
or
cmp
dec
xchg
bound
fs
push
fcomps
add
pop
fiaddl
xor
sbb
cmp
and
sbb
jns
imul
xlat
jae
in
inc
jl
sub
stos
daa
cmpsb
bnd
sbb
push
adc
gs
pop
xchg
jne
push
push
pop
jo
inc
jl
sarl
mov
adc
popa
shll
xchg
ss
jno
mov
addr16
iret
inc
pop
sbb
cwtl
pop
jl
push
fistl
in
mov
insb
cmp
adc
sub
dec
dec
sbb
push
les
cmpsl
jnp
mov
insl
push
js
inc
addr16
cmpl
mov
lret
js
outsb
jno
mov
ljmp
cmp
or
mov
xor
fwait
icebp
or
aas
xchg
adc
lea
jecxz
fs
dec
jo
inc
mov
lret
pop
sahf
cmpb
lods
lret
xchg
fisubl
xor
into
push
or
les
sbb
rcrl
sti
push
cmp
out
je
or
aam
das
std
or
fdivl
pop
cwtl
push
xchg
cltd
out
xchg
cmp
push
out
or
add
jp
les
pop
xor
sbb
sub
pop
es
incl
mov
test
std
out
lcall
popa
cmc
xchg
insb
pop
je
pop
pop
sub
xchg
or
lods
lahf
inc
roll
pop
mov
lret
scas
mov
je
jns
lret
mov
xchg
in
push
out
mov
inc
sbbb
ljmp
test
push
sbb
jnp
repnz
out
popf
adc
repnz
es
imul
daa
ds
dec
sbb
sbb
sbb
sarb
arpl
lcall
xor
or
xlat
dec
es
mov
out
cli
pushf
adc
inc
dec
add
mov
jecxz
cs
fistl
ret
lods
or
test
fldenv
add
mov
cs
stos
or
loope
fsubrl
insl
shlb
loopne
mov
insb
inc
test
call
dec
dec
pop
cmp
lret
dec
pop
and
insb
std
out
and
icebp
jge
xor
mov
loope
mov
sbb
aad
adcb
cld
mov
out
and
insl
xchg
sub
sahf
test
int
mov
xchg
push
mov
in
jbe
push
imul
enter
stos
or
fdiv
mov
sub
lds
dec
std
mov
and
jle
lods
add
jb
jge
push
pushf
shlb
push
or
adc
add
or
out
pop
stc
lds
rcrb
jp
mov
outsl
das
pop
adc
and
rcrl
stos
pop
mov
shlb
mov
pop
mov
adc
inc
enterw
ret
movl
sub
pop
sbb
push
gs
test
movsl
push
jp
mov
popa
call
daa
lcall
inc
dec
push
je
daa
and
sbb
ds
adc
fs
incl
orb
or
dec
popf
adc
and
js
jo
in
hlt
lds
mov
push
inc
ret
mov
and
sub
jge
test
daa
adc
stos
xor
pop
lods
push
scas
inc
cmp
dec
dec
scas
jno
mov
je
add
push
push
push
jge
pop
push
push
and
lret
lock
adc
sarl
out
mov
inc
mov
imul
xor
pusha
mov
jle
nop
sbb
rcr
and
inc
pop
inc
sub
cmp
sbb
push
imul
inc
mov
lret
pop
xchg
pop
fldl
mov
dec
loopne
jle
adc
xlat
mov
pushf
inc
sbb
jnp
and
inc
pop
bnd
ret
shlb
jne
cld
or
sub
cmpsb
cmp
push
or
imul
jmpw
leave
cltd
jl
inc
xchg
and
push
push
dec
insl
sbb
fisttpll
std
ret
add
jg
cmpsb
inc
push
fwait
lods
sub
pop
cmpsb
pop
xor
or
mov
add
mov
lods
sahf
push
pusha
aaa
mov
lret
mov
iret
lds
fnstenv
sbb
xlat
sub
push
adc
in
pop
mov
jbe
inc
decl
sub
idivl
stos
out
mov
aaa
js
mov
mov
in
dec
xor
mov
call
inc
jno
cltd
lcall
lahf
or
aaa
mov
and
and
inc
inc
clc
cmp
rcrl
mov
sbb
cmpsl
add
enter
xchg
nop
sub
push
mov
push
xchg
aad
sub
aad
xchg
jb
jg
push
push
lods
push
data16
mov
repz
adc
stc
loopne
mov
mov
repz
sub
adc
arpl
add
std
cmp
or
cmpl
mov
mov
stos
clc
push
lcall
scas
in
sahf
notb
mov
imul
rcrl
inc
push
inc
daa
push
and
xchg
bound
movsb
push
jo
mov
cwtl
int3
adc
sti
fcmovnu
data16
xor
loope
orb
aas
sbb
pop
cmpsb
loopne
out
int3
fcmovb
sahf
adc
sbbb
cli
stos
adc
jg
jnp
daa
jmp
test
push
adc
ret
mov
in
sti
jl
sbb
cltd
mov
mov
cmp
pop
je
hlt
aam
je
test
scas
insb
xchg
aas
jge
int
inc
mov
add
out
aas
shlb
test
sub
fisubs
mov
cld
pop
pop
enter
fwait
sbb
add
les
xor
call
lds
add
pop
xor
push
cmp
add
push
ds
pop
fildll
imul
insb
sahf
or
out
fcmovbe
mov
dec
inc
mov
push
cmpsl
inc
push
out
and
adc
bound
imul
loopne
iret
pop
fisubl
xchg
xchg
push
or
jnp
pop
adc
jb
or
jge
daa
cli
xor
loop
dec
pop
push
mov
or
lret
mov
loop
and
push
les
mov
or
mov
add
adc
mov
mov
in
add
mov
pusha
cli
xor
add
out
inc
mov
lods
mov
inc
jno
cmovo
mov
push
inc
clc
fsubrs
jne
cmp
clc
xchg
test
fldt
pop
or
xor
mov
aas
inc
mov
sub
lret
xor
jae
pop
add
jg
xor
push
sub
je
mov
in
scas
jle
and
out
mov
flds
jno
and
aaa
mov
jbe
dec
push
inc
sub
and
add
inc
loop
dec
dec
and
das
push
sub
fwait
mov
or
and
add
adc
arpl
or
pop
movd
loopne
std
fcompl
cmp
push
cmpb
mov
jecxz
mov
jmp
dec
repz
ljmp
add
jnp
adcl
les
sbb
push
int
or
fidivrs
hlt
lcall
push
mov
mov
pop
xor
mov
pop
or
push
push
mov
out
jmp
pop
int3
mov
add
cltd
test
bt
add
cs
les
pushf
jg
xchg
lret
mov
sahf
cmp
arpl
xchg
or
test
insb
lcall
dec
fisubl
xchg
mov
es
in
pusha
es
in
test
xchg
sbb
xchg
jo
jl
cmp
mov
inc
cmc
arpl
sub
cmp
sti
aas
aam
sahf
sbb
sahf
cltd
push
incb
popf
mov
loop
leave
aad
cmp
push
inc
cmp
out
nop
mov
int
jb
incb
push
xor
add
xor
cmova
cmpsl
aas
cmp
stos
sub
jmp
cmp
dec
and
aad
sahf
aaa
jl
imul
stc
fnstenv
xor
xchg
movsl
loope
movsl
cwtl
cmc
out
fyl2xp1
idiv
pop
in
ja
adc
sbb
outsb
add
ss
icebp
sbb
and
bound
dec
out
ds
loope
addr16
cwtl
rol
cwtl
negl
loope
shll
int3
out
jo
jbe
push
repnz
inc
daa
xor
inc
js
xchg
mov
dec
and
andl
fildl
stos
add
mov
ja
call
jnp
dec
fstpt
mov
pop
lret
pop
ss
xor
jbe
fcmovnbe
mov
jne
pop
jns
and
xchg
loop
mov
inc
cmpsl
pop
pop
xor
rorb
mov
inc
inc
shrl
jl
out
leave
inc
lret
jg
xchg
in
daa
movsb
inc
jmp
xchg
or
mov
mov
push
sbb
pushf
push
sbb
scas
mov
mov
subl
je
into
dec
es
out
sbb
jne
push
xchg
mov
mov
adc
inc
stos
lods
mov
gs
sub
add
in
lds
repnz
call
setb
xlat
add
push
sbb
loope
fmuls
mov
sub
aad
jno
or
fadds
or
stos
test
adc
test
imul
and
shl
sbb
cs
push
mov
xor
xor
mov
jns
jbe
les
pop
mov
dec
loop
inc
xor
mov
mov
lret
pop
into
jne
outsb
leave
mov
fistpl
push
xor
xchg
dec
arpl
cmpsl
test
andb
inc
std
dec
int
call
cmp
mov
jo
add
dec
mov
je
clc
adc
pop
or
mov
inc
mov
push
incl
fwait
lahf
aas
inc
fldcw
lcall
jbe
orb
lahf
mov
push
cmp
adcb
popf
adc
arpl
nop
push
push
add
push
jmp
in
xchg
xchg
mov
xchg
pop
or
sub
cmp
or
lods
lcall
xchg
or
out
xchg
cmp
sub
mov
orl
dec
push
sbbb
andl
cmpsl
pop
and
and
xor
or
enter
mov
movsb
mov
shrb
mov
jmp
dec
xor
jecxz
fwait
cmpsl
add
fucomi
jb
pop
sub
inc
or
jbe
mov
mov
clc
sub
int3
cmp
inc
jl
pusha
aad
add
lret
pusha
and
or
cmc
cld
pop
xlat
je
xor
add
mov
idivl
or
rcl
or
xor
xchg
inc
pop
je
outsb
mov
cmp
sub
rcll
in
push
shlb
icebp
insl
in
in
dec
in
aam
pop
jge
jecxz
gs
pop
mov
mov
sub
shrb
ja
out
jno
and
add
cmc
xchg
xchg
fwait
mov
scas
dec
ds
mov
data16
mov
clc
sbb
int
out
xchg
adcb
sbb
clc
adc
sub
cmp
jnp
int3
jno
xor
jle
mov
xchg
nop
mov
clc
xchg
aas
cmp
inc
mov
pop
sub
adc
call
mov
notb
pushf
test
dec
inc
call
cmp
mov
mov
push
add
hlt
aaa
and
and
insb
mov
cmpsl
in
xor
shrb
and
dec
mul
push
aam
dec
movb
movsl
xchg
pop
out
mov
movsl
add
fldcw
popf
aas
mov
out
or
adc
adc
xchg
mov
pusha
sbb
xchg
test
insl
pop
and
mov
rclb
sbb
cli
adc
lret
fs
pushf
mov
jg
xchg
cli
and
mov
in
imul
hlt
mov
rorb
sarl
leave
in
pop
mov
rcr
or
sbb
mov
jo
pop
dec
data16
push
jle
sub
aam
pusha
leave
xchg
js
jmp
push
icebp
es
orl
jo
add
or
xor
fists
out
push
shll
mov
ja
xchg
movsl
sti
push
pop
pusha
pop
mov
pop
inc
push
ljmp
js
das
cwtl
xor
inc
ljmp
je
add
cmp
shll
out
out
mov
sub
arpl
ret
xor
jecxz
das
push
repnz
cltd
into
repnz
ret
adc
pop
enter
in
shll
int
dec
out
mov
fisttpl
cmc
sti
mov
imul
inc
lret
cmp
xchg
xor
stc
mov
pop
pop
lods
outsb
sbb
clc
xlat
stc
rcll
notl
dec
in
push
push
orl
into
pop
dec
push
or
pop
aad
ret
outsb
ret
jg
or
mov
dec
push
jecxz
mov
lods
xchg
mov
clc
sub
in
aas
push
sub
into
test
push
divb
sub
enter
out
or
rolb
add
icebp
cmp
push
and
ror
mov
popa
loop
loop
cmpsb
jp
pop
fisttps
sti
push
addr16
ror
or
hlt
jae
add
jnp
xchg
in
notl
push
lock
inc
stos
push
mov
inc
cmp
sub
cmp
adc
jge
jbe
xor
clc
sbb
dec
push
jmp
pop
in
inc
orb
sbbb
and
jp
cmpsl
in
outsb
add
sti
out
jmp
jecxz
xor
add
push
ret
cmp
xor
shrl
mov
xchg
dec
dec
mov
xlat
repnz
idivl
mov
mov
cmp
movsl
lock
je
jb
ss
insl
sbb
movsl
or
sbb
outsb
movsb
mov
mov
lcall
stc
and
push
dec
stos
cli
leave
sbb
int3
push
fiaddl
pop
xchg
add
inc
xchg
cmp
sub
xor
cmp
into
cmc
xchg
sti
out
pop
or
sub
and
in
stc
lods
test
push
jnp
mov
negb
aam
test
lds
cld
jmp
daa
mov
mov
lcall
fadds
push
sbb
sbb
pop
mov
jo
out
and
rcrb
and
push
sbb
ss
out
pop
fistpll
stos
dec
sub
mov
xchg
inc
addl
pop
pop
jle
cmc
pop
roll
mov
and
cltd
mov
int
pop
sub
sbb
clc
popf
cli
adcl
sti
jmp
xlat
fcom
out
pop
mov
jbe
xor
sub
jecxz
popa
add
cli
add
fsin
sub
in
add
adc
jo
rclb
push
push
mov
je
sub
in
cltd
mov
fcomps
mov
mov
pop
or
into
xchg
pop
lds
subl
cmp
pop
decb
inc
add
sub
inc
dec
push
sub
stos
sub
stos
inc
fisubrs
add
xchg
xchg
push
ljmp
ficompl
lcall
mov
fstl
push
xchg
loopne
push
sub
dec
pop
popa
sub
loopne
std
iret
xchg
retw
fldcw
cwtl
call
fs
xchg
jb
cmp
fsub
jmp
add
roll
subl
in
pop
jmp
adc
or
test
sbb
mov
sbb
bound
xchg
pop
jns
or
ret
pop
adc
cmpsb
std
add
cmp
push
in
mov
cwtl
addr16
pop
lret
std
adc
jne
outsl
add
fcmovb
in
ss
sbb
arpl
repz
jle
inc
mov
mov
mov
xor
movsl
ss
push
mov
xor
adc
insb
xor
aam
adc
leave
push
add
pop
add
sub
pusha
dec
addr16
nop
or
xchg
je
loopne
int3
sar
out
cmpb
sbb
dec
sub
mov
jns
mov
ficompl
adc
bound
sub
xor
xchg
cmp
jge
mov
insb
mov
call
ret
xchg
mov
add
sub
in
push
push
push
pop
pusha
and
mov
mov
mov
jb
cmp
outsb
mov
repz
sahf
in
pop
xchg
jbe
ret
imul
inc
inc
xchg
stc
jnp
jmp
lock
insb
mov
adc
add
cmp
push
iret
dec
jo
add
pusha
push
push
mov
andl
fwait
cs
mov
movsb
sar
repz
shrl
call
imul
es
inc
ljmp
aaa
in
jp
cli
js
push
loop
dec
mov
testl
aas
adcb
lcall
jle
inc
push
xchg
mov
adc
outsb
cmp
xchg
sub
mov
int3
mov
dec
insb
sbb
adc
iret
cmp
mov
out
rcll
mov
jne
test
and
cmp
fsubl
data16
sbb
cmp
mov
das
call
mov
and
mov
in
xor
xchg
mov
xchg
xchg
cwtl
xchg
xchg
mov
es
mov
xor
test
sub
pop
rcrl
jo
and
data16
pop
adc
dec
in
aad
jno
outsb
sbb
mov
xchg
mov
or
pop
sbbl
sbb
ds
fldl
mov
pop
test
mov
xchg
movb
aam
repnz
sbb
sbb
mov
clc
in
jbe
mov
push
stc
outsb
mov
cmp
outsl
lock
daa
fs
mov
sarl
xchg
add
int3
mov
cmp
inc
jge
inc
cmp
jno
call
fimuls
icebp
mov
ror
fwait
pop
sub
mov
mov
sbb
std
inc
inc
push
mov
hlt
dec
sub
test
loopne
int3
mov
pop
mov
in
mov
ficoms
jl
cli
mov
out
xor
sti
negl
adc
mov
push
mov
push
pop
test
mov
jmp
xchg
mov
aad
sbb
icebp
sbb
pop
std
sub
or
cld
sbb
rcl
jp
nop
in
shl
xlat
jae
in
mov
jo
rolb
xor
sub
hlt
notl
mov
pop
jge
outsl
jns
mov
pusha
mov
fcmovu
je
ljmp
jns
push
cmc
cmpsb
mov
outsb
add
in
das
dec
adc
jb
test
imul
cmp
cmp
divb
stc
loope
xlat
and
xor
mov
and
pop
mov
mov
dec
sbbb
addr16
mov
jne
stc
addb
mov
or
fidivl
xor
mov
jns
and
jmp
jno,pt
mov
mov
loope
shlb
pop
iret
sub
sti
adc
xor
stc
xor
sti
shlb
aad
not
push
jo
jae
in
lcall
cmp
mov
pop
sub
insb
dec
ljmp
fwait
movsb
pop
aas
xor
pop
scas
or
in
add
clc
lret
je
mov
xchg
sbb
mov
push
pextrw
lahf
sbbb
xor
dec
adc
out
jg
repnz
jg
push
xlat
popa
mov
xor
jp
mov
push
xor
xor
cmpsb
shl
push
pop
or
daa
push
fcmovu
adc
pcmpeqb
sbb
repz
xchg
and
jge
push
pop
mov
sbb
addr16
dec
ljmp
mov
repz
xor
icebp
jae
fwait
pop
jo
pop
sub
cmp
int3
mov
aam
pop
and
push
ficomps
mov
aaa
dec
push
xchg
stc
std
add
pop
mov
and
js
jnp
inc
arpl
adc
lcall
aas
or
push
lods
enter
shl
push
lock
xlat
data16
das
push
sbb
ds
lret
shll
nop
mov
lcall
js
mov
pop
pop
int
repz
rcr
cmpsb
mov
sar
bound
lods
pop
jo
les
and
out
fistps
fcoml
mov
das
cmp
out
testb
call
cmp
inc
cs
loop
mov
pop
cli
mov
inc
fcoml
mov
out
mov
loope
xchg
ret
pop
jnp
cmpsb
push
aam
jo
pop
push
cs
in
mov
inc
xor
adc
xchg
mov
cli
mov
mov
add
jno
mov
shrl
push
or
fisubs
inc
addr16
mov
xor
push
enter
in
out
xchg
pop
sub
xor
jo
ret
xchg
insb
sub
xchg
jbe
popl
jecxz
or
push
mov
mov
xchg
jae
mov
adc
jno
inc
dec
mov
pop
add
mov
cmp
inc
add
jecxz
lret
add
mov
addr16
push
ret
xor
cs
imulb
call
out
dec
and
pextrw
ljmp
cmpsl
flds
frstor
mov
or
js
sub
out
decl
and
jg
insl
enter
cmp
lahf
popf
adc
movsl
fstl
imul
movsb
out
add
mov
sbb
mov
or
and
push
ljmp
inc
pushf
xor
sahf
ret
arpl
scas
sbb
scas
jmp
andl
xor
into
test
ljmp
rorb
movsb
xor
insl
add
imul
jp
or
pop
shll
cs
push
test
cs
pop
jbe
mov
and
cmp
test
stos
jge
inc
dec
out
jo
mov
pop
adc
ljmp
xchg
fidivl
mov
in
cmp
imul
mov
and
cltd
fstpt
xor
push
popa
rcrl
popl
lahf
xchg
mov
adcl
lcall
outsb
enter
mov
push
mov
or
cld
les
push
add
shll
leave
imul
fs
ljmp
insb
in
sub
push
pop
push
or
xchg
imul
inc
mov
inc
and
sub
mov
fdivrs
stos
ja
mov
scas
cmp
test
scas
lods
cwtl
push
pushf
jb
add
push
lods
imull
pop
xchg
js
es
jp
dec
aad
xchg
clc
push
pop
mov
mov
rorl
or
sub
lret
icebp
push
push
call
xchg
pop
sbb
scas
movb
mov
jg,pt
cmp
addb
testl
loop
mov
stc
sbb
mov
jo
push
xor
jb
jge
push
or
mov
or
jno
xor
inc
adc
sbb
aas
xchg
fisttpll
movsl
and
mov
aam
sti
xchg
adc
xlat
dec
jnp
xchg
in
mov
in
test
xor
mov
ret
push
inc
and
lds
call
cmpsl
cltd
ret
pop
push
pop
ret
lahf
stos
fcoml
pop
dec
xchg
out
mov
stos
fucomi
into
es
aam
jmp
xchg
or
push
call
mov
ljmp
push
mov
add
pop
inc
lcall
test
movsl
clc
jns
scas
leave
or
inc
jae
leave
in
insl
sub
mull
adc
pushf
scas
enter
dec
xor
stos
mov
aam
mov
cmc
cltd
sti
mov
sbb
mov
xor
mov
lret
mov
sbbl
mov
inc
aam
ja
inc
sub
dec
cmp
mov
and
adc
subb
push
jo
or
dec
mov
int3
jns
mov
rclb
imul
and
mov
jg
repz
add
fmul
jmp
aas
mov
push
dec
and
lret
faddl
xlat
xor
sbb
cs
adcb
or
sbb
sbb
stos
mov
and
xor
inc
cmc
jmp
jle
stos
add
mov
test
addr16
cmp
test
aas
repnz
sbb
es
xor
lahf
bound
pop
out
mov
ret
lcall
or
adc
lcall
mov
mov
roll
adc
inc
mov
dec
mov
push
enter
imulb
adc
inc
jecxz
inc
and
imul
mov
test
cmpsb
adc
scas
jns
stos
mov
or
es
mov
add
out
fadd
jne
notl
jp
or
addl
add
pop
sub
jb
inc
jbe
add
sub
push
xchg
fcompl
or
rcrb
dec
test
stos
ret
push
insl
stos
enter
dec
sbb
into
test
pop
inc
cmpsb
ror
sub
repnz
ficompl
lock
and
adc
shll
icebp
sbb
and
pop
je
loop
loop
popa
jne
jmp
in
ljmp
mov
das
aas
shrb
bound
mov
pop
inc
hlt
mov
cmp
add
xchg
add
mov
cwtl
add
pop
cmp
inc
adc
test
repnz
cs
xchg
int
xchg
outsl
dec
dec
jecxz
iret
rcl
cmp
ds
in
cmp
loope
pop
pop
sub
or
leave
xor
movsl
add
cmpl
and
sbb
dec
jecxz
pop
mov
pop
hlt
pop
popf
adc
xchg
dec
aam
call
jb
add
inc
jl
das
cmpsl
pop
pop
cmp
push
inc
pop
mov
imul
or
stc
lret
inc
aas
movsb
mov
popf
add
add
out
insb
outsb
add
scas
test
test
xchg
sub
dec
push
dec
into
ja
mov
jp
cmp
cmc
gs
andb
maskmovq
testl
mov
and
popa
push
popl
mov
jbe
mov
in
imul
and
dec
lods
mov
insb
bound
stos
addr16
mov
xchg
mov
push
xchg
ds
mov
mov
popa
pop
jns
lods
loopne
xchg
adc
out
adc
dec
jge
xor
pop
add
jecxz
in
shll
and
subb
ficomps
adcl
imul
cmp
mov
jl
xlat
loop
sbb
sub
adc
hlt
cmpsb
sbb
xor
inc
mov
jmp
mov
shl
mov
jb
pop
je
add
dec
xchg
arpl
or
xor
mov
ljmp
arpl
fistps
pop
out
stc
xor
and
inc
xchg
fwait
mov
sub
xchg
adc
jl
xor
jns
dec
dec
xchg
aaa
cmp
cmp
mov
es
add
jmp
std
rcrl
mov
xchg
iret
lods
int3
out
andb
cmpsb
jne
push
pop
xor
pop
mov
imul
xchg
jb
enter
negb
jecxz
outsb
xchg
js
push
mov
xlat
pushf
xchg
mov
xchg
sub
aaa
rcll
popf
stos
xchg
ret
dec
dec
or
nop
enter
xchg
push
leave
add
sbb
pop
sbb
mov
adc
dec
jecxz
loop
mov
ret
sahf
sti
fdivr
shl
nop
adc
stos
call
adcb
push
inc
adc
dec
cmc
cmp
cmp
in
xor
out
stos
mov
or
adc
cmp
lds
test
mov
out
jbe
push
mov
cmp
sahf
pop
popf
inc
mov
adc
pop
movsb
pusha
es
dec
fidivl
rolb
fdivs
mov
dec
jmp
and
mov
test
sahf
cltd
xor
movsl
cmpsb
mov
lahf
mov
mov
inc
insl
std
jne
test
orl
int
pop
int3
jmp
int3
xlat
bound
or
notl
mov
jno
lods
aaa
test
fwait
fwait
adc
push
add
cmp
cmp
cmpsb
pop
cmpsl
icebp
jmp
ret
pop
or
in
push
or
adc
jg
xchg
ljmp
out
xor
push
ret
ds
sbb
mov
mov
rcll
xchg
fistpll
aad
mov
rcll
inc
pop
out
dec
lcall
and
imul
push
dec
daa
pop
xchg
and
roll
adc
mov
pop
xchg
divb
mov
cmp
jno
mov
lock
sbbb
xchg
push
rclb
ret
push
les
jle
aaa
jl
scas
dec
int
mov
mov
push
pop
mov
daa
sub
pusha
mov
fs
aas
push
ljmp
loop
and
lods
inc
lea
fs
mov
ret
pop
jne
iret
cmp
gs
scas
call
test
cmp
and
and
xor
lds
rcr
sbb
roll
orb
imul
dec
fs
mov
jne
cld
push
push
aaa
out
aaa
sbb
inc
aad
xchg
call
push
add
push
dec
jo
in
subb
jl
daa
cmpb
mov
popf
sub
sub
pop
cwtl
leave
arpl
lahf
push
clc
cs
mov
pop
jns
loopne
xor
mov
gs
sbb
popf
push
mov
push
fstpt
shrl
out
ficoml
repnz
inc
xor
pusha
mov
adc
fisttps
sub
push
pop
cmp
dec
pusha
loopne
lret
xlat
sbbl
ss
push
shl
das
sbb
pushf
cmp
xchg
dec
pop
mov
xchg
xchg
xchg
mov
inc
test
mov
movsl
or
add
test
cmpsl
dec
pop
mov
loopne
es
fs
movsl
xchg
mov
pop
outsb
imul
and
shl
jnp
and
xor
xchg
mov
xchg
and
add
out
xchg
hlt
add
aas
jecxz
f2xm1
mov
xor
dec
sbbl
pop
test
daa
negl
push
fcompl
add
inc
repnz
enter
push
dec
mov
test
rcll
es
xor
out
or
or
scas
inc
mov
dec
push
dec
fwait
mov
movsb
rorb
pop
sub
stos
add
repz
into
insl
out
lods
aaa
xor
in
rcrl
inc
fcoml
ss
lcall
cmp
repz
inc
jbe
in
adc
xchg
and
jge
call
mov
cld
popf
push
sub
rol
dec
aam
jne
push
and
inc
adc
js
cmp
xor
push
sbb
mov
xchg
fsubl
mov
hlt
sub
pop
push
adc
inc
mov
lahf
push
clc
imul
nop
jno
pushf
shll
cmpl
cs
or
adc
push
je
xchg
scas
jle
mov
push
subb
mov
inc
jecxz
ja
mov
addr16
cmp
rcrl
mov
and
sbb
inc
mov
inc
jns
jne
push
pop
rcr
fsubrs
rcll
cmpsb
push
clc
ret
jp
inc
sub
orl
and
mov
fmull
mov
div
pop
sbb
loop
scas
sbb
imull
mov
inc
sbb
cmc
and
hlt
sub
jae
cld
xor
bound
lret
int3
test
fs
xchg
into
xchg
or
bound
sub
jno
jp
dec
xor
ja
sbb
lds
cmc
aad
cmpsl
in
mov
outsl
loopne
jl
sbb
data16
mov
rcl
call
addr16
lea
or
test
and
pop
inc
sub
cwtl
push
pop
jne
mov
movsl
fimuls
cltd
cmp
jne
insb
loop
sarl
mov
ss
xchg
push
xor
imul
push
cld
and
push
xchg
adc
add
fadds
mov
or
jnp
cs
mov
xor
push
push
iret
mov
pushf
xchg
dec
cli
cld
lock
outsb
out
lret
je
fdivrl
rep
pushf
repz
fs
std
aaa
mov
sbbb
repnz
xor
mov
icebp
push
out
mov
inc
lds
mov
or
xor
gs
sub
fisubrs
test
test
ss
sub
outsb
and
fists
pop
loope
in
cld
inc
sahf
jbe
mov
push
outsl
mov
in
mov
jb
add
fdivs
clc
push
movups
xchg
into
mov
pushf
data16
mov
xchg
adc
push
push
repz
imul
xor
mov
push
jecxz
fsubl
cmpsb
lods
adc
jnp
inc
pop
inc
pop
push
lock
mov
mov
pop
pop
stc
adc
mov
push
scas
xchg
sbb
out
mov
les
push
sub
jo
aad
jl
adc
dec
adc
pop
sbb
inc
inc
cld
test
int3
inc
xchg
adcl
sbb
push
out
div
pop
mov
mov
sbb
push
ja
insb
add
pusha
sub
imul
jp
xlat
cmc
add
inc
or
sbb
repnz
into
mov
fidivl
sub
popa
popf
adc
inc
fadd
lahf
test
fsts
pop
push
jae
in
sahf
jecxz
jns
inc
int3
pop
es
xlat
mov
imul
sahf
not
and
nop
mov
cmp
sub
cmp
jae
add
xor
out
and
mov
loop,pn
neg
lahf
pop
push
mov
cli
outsl
clc
lret
pusha
loopne
jecxz
jg
xchg
xchg
dec
xchg
adc
clc
fldl
popa
subl
out
sub
or
mov
int3
push
das
push
loope
cmp
xchg
or
pop
mov
cmpsl
fbstp
scas
fldt
aad
icebp
jbe
cld
add
aas
rolb
aad
insl
vpslld
xchg
gs
or
rcrl
or
lods
leave
add
lea
push
leave
outsb
in
out
stc
sub
stc
lcall
rcl
js
sub
xor
and
push
ljmp
out
jmp
pusha
fwait
mov
dec
or
fcompl
dec
and
iret
xor
cmc
scas
mov
mov
ja
pop
mov
arpl
xchg
fsubrp
mov
aaa
subl
insl
xchg
mov
jns
lret
mulb
mov
fistl
fcoms
sbb
cmpsl
shrl
decl
popf
in
std
mov
cld
push
mov
test
jl
pop
leave
in
dec
test
je
lahf
cmp
inc
out
enter
testl
loop
hlt
push
loop
cmp
push
jge
mov
push
or
cltd
or
pinsrw
push
ja
jge
push
inc
test
mov
jge
fldt
movsl
push
lahf
lahf
mov
bound
mov
lea
add
es
cmc
cmpsl
pop
cmp
xor
repnz
cmp
push
xor
pop
sub
hlt
sbb
jbe
push
cmp
add
inc
jne
mov
mov
push
dec
jne
mov
jl
dec
popa
and
maxps
pop
in
sbb
inc
xor
jle
dec
mov
mov
mov
sbb
fcomip
mov
repz
push
xor
call
jecxz
fnstcw
popa
test
setnp
loopne
jnp
leave
mov
cmp
pushf
cmpsl
xchg
nop
test
pop
push
adc
xor
sub
arpl
adc
jno
mov
xorps
jl
cmp
sub
cmp
cltd
mov
pop
stos
mov
scas
jmp
fisttpl
jmp
dec
xchg
cmp
in
inc
movsb
fdivp
pop
adc
mov
sub
pop
xor
jp
push
pop
fs
stc
adc
adc
push
into
adc
jae
add
mov
cwtl
xchg
fnstsw
xchg
pop
lods
inc
lds
push
jne
orb
insb
mov
mov
push
int3
cs
lods
notl
dec
addl
int
fwait
es
and
imul
xor
fs
neg
lret
push
mov
dec
fsubrs
popf
aam
pushf
out
int
cltd
idiv
jns
adc
inc
push
push
test
and
js
jno
sub
shrl
mov
xchg
adc
cmp
mov
sub
push
dec
push
sbb
fcmovbe
or
xor
adc
mov
mov
mov
cmpsl
test
movsb
dec
cmpsb
sub
cmp
mov
test
pop
pop
adc
xor
sbb
mov
push
lret
xchg
mov
mov
adc
ficoms
jae
lret
xchg
cmpsb
jg
and
int
ret
mov
mov
pop
sub
push
fwait
push
inc
jno
xor
out
cmc
testb
pop
or
fistps
enter
inc
mov
xchg
imul
dec
jo
scas
xchg
int3
cmp
mov
pop
loop
ficompl
imul
andb
dec
fbld
fsubrl
negl
xor
cmp
sub
xchg
or
jge
stos
fnsave
pop
insl
cmp
jbe
leave
sub
mov
cwtl
je
in
mov
idivl
outsw
xchg
and
fidivrl
dec
sahf
aas
pop
sahf
enter
jmp
pop
push
jmp
or
mov
and
xchg
out
rorb
push
push
push
pop
mov
in
scas
and
adc
dec
push
jb
pop
ret
xchg
jo
xor
rorl
cmp
lods
jmp
add
dec
ljmp
cmpl
push
negb
inc
push
sahf
mov
and
aas
outsl
shr
les
loope
loop
mov
stos
or
sbb
cli
mov
dec
dec
repz
addr16
enter
mov
mov
mov
push
dec
movsl
xor
aaa
dec
lahf
cwtl
leave
iret
mov
sbb
popf
dec
mov
sub
loopne
xchg
fistpll
lahf
test
stos
test
incl
xlat
popf
es
xchg
dec
je
andl
mov
cwtl
les
jae
xor
add
out
clc
xchg
dec
daa
iret
push
pop
in
adc
mov
and
xor
mov
and
mov
xlat
and
je
and
add
test
popa
ret
sar
xchg
scas
adc
pop
sbb
xchg
push
ret
jp
and
aam
jbe
sti
cwtl
pusha
mov
test
dec
xchg
shll
mov
jbe
jmp
adc
mov
out
or
xchg
push
enter
push
fsubrs
or
addr16
sahf
or
mov
cwtl
mov
inc
mov
shl
mov
loopnew
sahf
jne
mov
dec
push
push
push
mov
and
jge
pop
xchg
loop
jge
jbe
hlt
loop
imul
fucomi
inc
dec
rcrb
and
or
decl
popa
aaa
aas
hlt
daa
jg
fs
fidivs
out
sarl
dec
cmpsb
iret
pop
out
in
mov
xor
sbb
test
mov
das
inc
scas
sub
cmp
roll
mov
mov
pop
nop
pop
sub
or
data16
cmp
adc
sub
xchg
xchg
mov
dec
jl
inc
js
iret
push
ret
xor
xor
push
xor
mov
outsl
lock
pop
pop
test
out
push
adc
sbb
xorb
or
pop
test
test
cmp
jo
and
xchg
divl
loop
shrl
lahf
jb
push
roll
mov
addr16
sahf
xor
and
sbb
fists
mov
rorl
stos
xor
sub
sti
sbb
leave
and
int
jnp
xchg
push
cmp
push
mov
pop
lcall
mov
pushf
lcall
mov
xchg
push
shlb
xchg
rorb
out
jl
out
and
out
pmovmskb
lock
or
xor
shll
xor
js
inc
sbb
sub
mov
hlt
or
dec
sub
add
mov
push
mov
into
dec
dec
xor
mov
mov
cmp
fimuls
jecxz
and
jne
sarl
in
aad
loop
pushf
call
cwtl
inc
fs
adc
int
push
add
call
outsb
loope
pusha
adc
xlat
inc
sub
push
or
data16
inc
jg
push
mov
inc
add
or
add
xor
inc
nop
cld
mov
rcrb
aam
je
cmpsb
rclb
adc
fbstp
fimull
push
int
sub
loope
icebp
in
imul
xchg
mov
pop
jge
add
pop
test
pop
fs
std
sbbl
sub
lds
cltd
mov
cmc
pavgw
rcl
outsl
mov
lds
movsb
out
inc
xorb
ljmp
or
push
sarl
les
idivb
in
ret
scas
jb
dec
or
fwait
jb
jp
cmp
mov
test
cmp
mov
jl
inc
lahf
cmp
cmpsb
cmp
int3
and
push
out
dec
jno
or
jae
add
cmp
cmp
leave
xchg
paddq
cmp
add
push
popf
jns
sbb
jno
lds
jmp
mov
dec
ret
jno
popa
cld
insb
dec
cmp
sub
dec
cs
jp
push
sub
scas
jecxz
adc
lods
mov
movl
inc
ds
and
clc
leave
sbb
scas
test
push
adc
mov
and
cmpsl
pop
dec
repnz
mov
push
lea
fs
imulb
mov
loopne
xor
int
loop
leave
lods
sahf
ss
push
in
stos
pusha
insb
inc
inc
outsl
add
test
add
jbe
mov
cli
jne
cli
jo
mov
pushf
addr16
sbb
sub
xchg
xchg
pop
inc
lods
mov
mov
stos
cmp
syscall
cwtl
fs
outsl
jp
push
fcoms
dec
repnz
dec
cs
pushf
mov
mov
mov
add
cwtl
lds
pop
cmp
cmpsl
sahf
dec
or
pop
shl
dec
sbb
push
pop
icebp
pop
jecxz
mov
sub
out
sbb
pop
mov
lods
je
pop
sbbl
jecxz
add
fstpl
mov
jne
jmp
sbb
xchg
arpl
push
rorb
jg
dec
std
aad
pop
das
pop
and
and
add
mov
sub
ja,pt
add
bound
push
sbb
aad
add
out
pop
ljmp
xchg
xor
push
outsb
mov
and
and
or
loopne
in
stc
or
repz
mov
push
mov
orb
xchg
punpcklbw
inc
mov
xchg
pop
repz
sti
mov
neg
pop
sarb
in
xchg
stc
loop
lahf
sbb
ja
adc
cmp
and
pop
icebp
add
push
push
sub
xor
je
lcall
mov
hlt
ficoml
add
push
test
dec
add
out
sbb
fstps
movsb
inc
mov
and
addr16
test
repnz
iret
adc
xor
in
addr16
or
jp
scas
xlat
cmp
insb
addr16
xchg
inc
push
mov
push
xchg
sbb
adc
movsb
mov
cld
dec
pop
iret
imul
out
or
bound
aad
fisubrs
popa
sti
pop
pop
pop
popa
adc
jle
mov
xlat
inc
sti
nop
push
nop
sbb
repz
repz
roll
sbb
sbb
xchg
xchg
and
mov
in
mov
dec
fcom
sub
stc
xchg
sbb
cli
stc
mov
ja
fiadds
leave
sbb
jecxz
dec
mov
xor
adcb
lret
cwtl
dec
sub
mov
sub
and
out
inc
lds
pushf
fs
inc
movsb
aas
mov
cmpsb
sbb
mov
bound
rdtsc
lahf
loope
lret
mov
mov
bound
fcompl
scas
fwait
sbb
push
mov
shrl
sub
scas
mov
test
inc
xchg
popf
imul
pop
jmp
xchg
scas
sbb
outsb
or
into
inc
lcall
int
push
lret
out
sub
js
fdivrs
adc
pop
pop
adc
loop
popa
jnp
outsb
pop
mov
sbb
sub
outsb
sbb
sbb
inc
sar
add
in
xor
dec
pushf
push
pop
jg
in
adc
mov
loopne
xor
scas
fisubl
xchg
jnp
cmpsl
mov
bound
push
subb
pop
sbb
push
mov
xor
addr16
mov
xor
mov
sbb
xor
dec
push
jns
std
xor
mov
inc
ficoml
push
shl
leave
fstpt
stc
leave
dec
test
mov
cld
cmpsb
adc
cmp
inc
repnz
nop
sbb
ret
sahf
pop
into
scas
ret
cs
orl
ja
repnz
nop
ja
js
mov
outsb
jp
or
js
mov
ljmp
mov
fwait
in
sub
hlt
stos
ljmp
cmp
aad
push
mov
stc
dec
add
test
fidivl
adc
xor
dec
js
inc
out
fisubrs
xchg
inc
negb
fldcw
sbb
xor
lods
cmp
andb
xor
pop
push
inc
loop
sbb
dec
sahf
inc
ret
cli
call
in
jg
clc
arpl
fisubrl
mov
lahf
mov
dec
mov
cmp
fisubl
dec
cmp
sahf
sbb
pop
inc
fs
inc
jo
add
stc
adcl
dec
mov
or
aas
jle
mov
dec
loope
mov
push
xor
in
mov
lds
imul
inc
adc
jecxz
data16
xchg
or
cmpsb
pop
push
mov
ret
jae
imul
test
stos
pushw
jo
stos
or
push
cwtl
decb
push
test
sub
mov
adc
lret
scas
shll
icebp
inc
and
add
subb
dec
nop
mov
in
add
add
aam
pop
mov
sbb
dec
jg
cmpsl
mov
cmpl
sub
and
mov
cltd
out
cmp
xor
repnz
arpl
mov
adc
sub
dec
inc
lret
push
mov
adc
pop
mov
inc
jmp
into
fwait
push
cmp
inc
mov
test
popa
lds
inc
mov
clc
es
add
jmp
fistpll
inc
sahf
jecxz
or
mov
sbb
or
mov
in
movsb
into
sbb
aaa
jb
popl
repnz
popa
cltd
outsb
shll
popa
clc
std
pop
lret
ret
outsb
bound
out
pop
or
adcb
xor
xchg
fcomi
insb
mov
loope
rorb
lcall
test
mov
adc
dec
mov
negl
and
mov
subl
push
inc
mov
movl
insb
lahf
dec
insb
mov
xchg
ret
shll
push
push
push
out
mov
sub
ljmp
cmp
push
hlt
jae
jecxz
movsb
rol
jp
mov
ja
cmpsb
mov
dec
bound
pop
jo
scas
and
je
cmp
pop
add
jbe
cli
inc
push
pop
cmp
sti
mov
push
fistl
test
repz
and
or
pop
sar
es
pop
push
fcmovnu
sub
ljmp
das
fistl
mov
inc
mov
mov
andb
jno
aad
or
scas
or
jp
dec
add
jnp
cwtl
cmp
insb
xor
in
adc
mov
shr
sbbl
mov
cmpsb
loope
mov
xchg
push
jns
xor
movsl
mov
stos
cltd
pop
fistpll
fimull
insl
bound
das
pop
lea
test
repz
push
push
test
xchg
dec
inc
or
pop
and
mov
hlt
lcall
mov
hlt
stos
xchg
sti
dec
inc
fsubs
or
sbb
in
in
aaa
test
lods
mov
mov
stos
xchg
repnz
xchg
mov
ja
mov
sbb
adc
sbb
jmp
inc
orb
pop
repnz
out
sbb
les
sub
div
xor
lret
data16
test
rcll
mov
push
testl
add
push
sub
outsb
jmp
in
imul
mov
xchg
xor
es
pushf
mov
push
outsb
mov
jl
xchg
ret
js
add
mov
fldenv
pop
cmp
mov
cmpsl
out
pop
insb
dec
loopne
aaa
dec
daa
ja
cmp
into
data16
xchg
add
add
sub
inc
stc
jecxz
rolb
insb
sbb
push
xchg
mov
mov
lods
sub
push
movsl
and
popf
add
aad
test
and
inc
out
dec
loop
pop
push
sbb
and
nop
push
movsl
and
aas
mov
enter
test
test
inc
repnz
jle
ror
mov
xor
js
or
ljmp
push
sysret
out
mov
and
arpl
fsubs
lcall
jmp
mov
in
jecxz
mov
sbb
jo
cmp
mov
sbb
dec
mov
mov
pop
xchg
popf
shl
add
fwait
call
je
push
push
xor
adc
cld
xchg
xchg
xchg
icebp
arpl
lea
es
mov
imul
int
dec
dec
ljmp
rcll
sahf
idivl
nop
mov
jae
and
fisttps
sub
push
push
ja
cmp
add
imul
jne
sbbl
pop
out
mov
fisubl
or
xchg
jge
shll
scas
cwtl
in
jbe
scas
loope
std
mov
pusha
add
pcmpgtb
sbb
outsl
fdiv
rorb
dec
lock
movb
fdivrl
dec
pop
push
sbb
stos
loopne
inc
xchg
sbb
jns
fimuls
test
shlb
sbbb
mov
xchg
or
xor
pop
call
and
jo
test
mov
adc
call
je
lahf
and
pop
in
aad
stos
push
ds
sub
addr16
cmp
mov
scas
inc
push
aaa
scas
adc
mov
push
lods
mov
dec
xor
out
cld
orl
sub
push
or
bound
push
inc
ror
mov
je
nop
bound
mov
test
or
xlat
fidivl
aad
mov
push
inc
sub
loope
rcll
dec
add
addr16
mov
sbb
sbb
inc
mov
mov
cmp
sub
jecxz
stos
mov
ljmp
mov
push
inc
adc
and
sbb
and
into
cmp
call
xor
and
cmp
js
in
push
inc
cli
je
or
mov
sbb
aad
xorb
mov
je
mov
jbe
cli
inc
xor
sbb
xor
jge
int
ss
jg
sbbb
mov
leave
mov
xlat
mov
movl
fdivp
in
sub
std
call
mov
imul
and
loopne
call
push
mov
add
mov
lods
jo
int3
scas
pop
sub
push
xchg
push
mov
dec
loopne
popa
sub
and
imul
push
std
mov
out
adc
scas
add
pop
scas
dec
lods
push
mov
mov
shlb
gs
sbb
xchg
adc
jne
jl
cmp
loopne
adc
fwait
dec
daa
shll
lcall
push
out
pop
xchg
cli
dec
pusha
pop
pop
scas
movhps
or
into
jge
xchg
pop
insl
es
insl
rorl
in
in
mov
sarb
lods
adc
in
subl
inc
xchg
dec
xchg
aam
nop
add
ss
and
mov
inc
cmp
ret
sub
push
mov
cli
aaa
lea
lea
pop
jl
sbb
es
jb
jno
aas
mov
lcall
stc
int
lods
xchg
pop
jbe
movb
jmp
stos
rcrl
mov
pop
out
imul
sub
cli
insl
cmp
test
in
popa
movl
xorb
mov
dec
ss
push
insb
jno
or
mul
cs
pop
cmp
sub
ficoml
push
daa
sti
scas
dec
mov
xor
ret
fiaddl
mov
inc
subb
or
xchg
sub
dec
mov
cs
daa
sbb
push
xchg
push
loop
popf
push
xchg
or
xchg
scas
xchg
sti
sub
inc
shll
enter
ss
adc
popf
inc
xchg
cltd
add
jnp
test
je
or
fildl
dec
int
lods
or
jne
or
cltd
pop
std
add
pop
adc
cmp
mov
out
push
rcl
cmp
repz
int
ds
ja
jl
pusha
xchg
jae
push
ret
sub
pop
rorb
and
xor
sahf
shrb
andb
sub
and
insl
cli
shrb
xorl
mov
adc
adc
out
out
loope
jge
adc
imul
js
bound
or
mov
loopne
xchg
mov
xchg
je
ljmp
stc
jnp
xchg
mov
jb
shrb
in
adc
xor
pop
mov
clc
je
dec
lea
push
fucom
fcoms
aad
sub
std
or
test
cwtl
in
inc
adc
mov
sub
push
cmp
mov
mov
dec
fldt
jl
jmp
nop
cs
jg
xchg
int
dec
jnp
sbb
jnp
add
inc
cmpsl
out
fstps
mov
ljmp
cmp
mov
and
pop
xlat
sbb
in
fsubrs
movsl
cld
mov
lret
jge
insl
sbb
ljmp
mov
or
lahf
add
xchg
dec
jns
lock
call
jecxz
cmp
test
mov
aad
xchg
mov
repz
shll
cwtl
sub
mov
ret
das
xchg
sub
push
mov
and
pop
mov
je
lea
icebp
or
sub
roll
cmp
clc
aaa
ret
mov
adc
loope
jle
jno
cwtl
pop
inc
lcall
test
shrl
bswap
test
sbb
sti
mov
xchg
mov
scas
fisttpl
movsb
cmp
xchg
inc
insl
xchg
sbb
test
xor
shlb
inc
jle
push
push
cli
fcompl
jl
cltd
dec
lods
mov
ss
xor
ss
pop
stos
mov
mov
cld
loope
cmpsl
sti
jne
xchg
jge
scas
gs
ljmp
into
push
inc
fiadds
aas
xchg
insb
lcall
and
cmp
pop
xor
sarb
into
adcb
int
ficoml
lds
push
jecxz
pcmpeqd
pop
mov
xchg
pusha
leave
and
dec
xor
push
call
cltd
cmp
popf
ficomps
xlat
dec
cmpsl
imul
jae
jecxz
adcb
cld
mov
mov
or
dec
inc
push
imul
push
adc
pop
mov
lret
add
xcrypt-ofb
cmpsl
scas
imulb
dec
sbb
aad
xor
sub
pop
or
stc
sub
js
ret
into
xchg
jmp
jl
and
cld
mov
mov
pop
fwait
lret
outsl
jns
adc
jno
in
sub
mov
shll
pushf
xlat
xor
xor
cmp
stos
leave
leave
xchg
in
cmpsb
out
out
add
ja
pop
rorl
mov
cmpsb
lret
leave
int
test
insl
aad
les
fdivs
movsl
adc
xchg
fwait
dec
loopne
and
rolb
rclb
inc
mov
dec
pop
push
dec
into
test
shrb
mov
cltd
pop
lahf
jne
test
mov
scas
out
test
and
hlt
nop
push
mov
fdivs
popf
pop
cmp
inc
pop
xor
and
push
push
scas
lods
push
jno
pop
or
mov
popf
jl
sub
test
mov
sbb
xor
push
inc
mov
xchg
mov
mov
mov
pop
leave
cmp
or
cmpsl
js
jecxz
or
adc
jge
push
jns
rcl
dec
fcomi
push
pop
mov
data16
inc
scas
je
bound
mov
add
outsb
imul
mov
or
cwtl
bound
push
pushf
fwait
addr16
cli
shrb
sbb
inc
jno
dec
push
xchg
mov
loope
mov
sbb
lfs
cmp
inc
mov
dec
cmc
push
jge
cmpl
mov
sub
pop
and
fs
icebp
scas
mov
fwait
xor
mov
rorb
jno
imul
jne
xor
fwait
ljmp
ja
fs
pop
cmp
sbbb
mov
xchg
inc
int
imul
dec
cld
sub
xchg
mov
mov
in
xchg
or
in
addb
lcall
popf
dec
cmc
inc
inc
sub
iret
lea
pusha
mov
xchg
cs
dec
pop
sahf
jle
loopne
mov
pop
add
adc
mov
js
mov
cmc
add
adc
mov
mov
aaa
mov
lods
mov
fsubrl
mov
pop
testb
pop
movsl
int
mov
cmpsb
add
and
stos
into
mov
jge
std
push
xor
movsb
adc
xor
dec
ds
lea
jg
rolb
mov
inc
mov
pop
sub
inc
sub
sub
fcomp
jo
pop
dec
test
xchg
push
add
mov
lcall
mov
addl
inc
insl
lcall
mov
xor
popa
lock
div
sarb
xchg
jo
mov
shll
sbb
and
scas
outsb
fistl
ffree
mulb
pop
xor
push
push
mov
xor
and
push
mov
dec
stc
flds
lds
ffree
adc
retw
cmp
cld
enter
mov
fistps
enter
xorb
jno
test
xchg
ds
or
stos
mov
insb
or
cmp
cmp
iret
sub
push
inc
jecxz
jo
xlat
popa
int3
imul
clc
cmpsl
mov
cmp
xchg
jmp
xchg
leave
in
loope
mov
in
ja
sbb
daa
xchg
fnstenv
push
push
adc
ljmp
fldl
nop
or
ret
fsubrl
push
push
add
in
fidivrs
addl
repnz
xor
sub
sbb
push
mov
xchg
xchg
inc
inc
rclb
stos
clc
xchg
aam
jo
sub
fbstp
xor
sbb
ja
xor
xchg
testl
movsl
in
repz
insb
repnz
pushf
enter
stc
add
int
mov
imul
xchg
lds
les
adc
inc
sbb
mov
pop
dec
ljmp
out
or
lahf
lahf
pushf
lret
stos
loop
dec
lret
dec
stos
push
push
adc
sub
add
mov
sbb
push
in
vcvttss2si
aas
jecxz
movsb
popa
mov
inc
lea
outsl
and
popa
or
sbb
pop
sub
in
add
dec
in
inc
test
fwait
stos
lea
xchg
xor
adc
movsb
aas
pop
add
add
shlb
cmp
iret
fcmovnu
fndisi(8087
inc
mov
sub
dec
jae
dec
aad
xlat
add
add
inc
leave
hlt
aam
fbld
rcll
push
out
cmp
cltd
jbe
lock
inc
dec
insb
fisubl
adc
inc
xor
mov
mov
dec
fdivs
xchg
out
cltd
mov
incl
out
lods
pop
pop
inc
cmpsb
lret
xor
into
jns
gs
mov
fwait
jno
cmpsl
mov
int3
jns
or
cmp
or
sbb
scas
ficomps
dec
mov
push
vpandn
inc
cmp
pop
popa
stos
adc
fnstcw
jo
mov
out
dec
jp
mov
push
pop
iret
xor
pop
xor
mov
dec
or
mov
mov
pop
inc
inc
inc
xchg
pop
mov
sub
mov
mov
in
add
mov
add
inc
leave
rcll
and
mov
jae
jo,pn
data16
dec
imul
inc
clc
push
adc
sub
add
or
push
add
xor
inc
pop
push
negb
push
test
sar
add
test
imul
jge
notl
xor
dec
mov
jle
jmp
dec
jp
push
pop
sbb
stos
xor
or
jns
mov
pop
or
sbb
sbb
xor
add
mov
out
mov
icebp
lods
xchg
push
fcmovne
pop
arpl
ficoms
repnz
dec
sub
cli
dec
insl
xchg
arpl
push
ds
rcr
out
sbb
cli
orl
mov
popa
aaa
ret
jnp
push
ja
outsb
mov
mov
test
jmp
arpl
lcall
sbb
inc
xor
and
mov
aam
pushf
pop
lahf
add
cmp
ss
std
dec
shrl
out
mov
call
and
add
fdivrs
xor
imul
add
out
xchg
cmp
test
push
inc
int
mov
fists
fwait
stos
in
sbb
adcl
dec
pop
out
push
repnz
fcomps
pusha
jle
rorb
hlt
xlat
mov
sahf
insb
mov
xchg
pop
dec
add
fbstp
or
enter
scas
push
sbb
out
and
mov
int3
scas
scas
mov
cmpsl
add
mov
cmp
aas
scas
fwait
rolb
aaa
cmp
fidivs
scas
rcrl
inc
mov
bswap
shrb
mov
outsb
mov
in
jmp
fnstsw
pop
push
and
inc
testb
add
imul
mov
jne
push
mov
push
rcll
iret
jne
ret
je
arpl
mov
les
pop
in
push
rol
aaa
jle
inc
or
test
lock
cmpsb
popf
outsb
or
pop
mov
pop
nop
mov
into
fnsave
jge
je
pop
xchg
daa
xor
fadd
cmpsl
rclb
ja
out
scas
into
or
pushf
repz
add
ljmp
clc
xchg
mov
les
add
xchg
rcrb
test
sub
in
jnp
inc
in
cld
sar
or
jb
in
fs
fcmovbe
and
shll
in
push
jp
lcall
js
jae
das
lods
push
add
push
cwtl
pop
out
mov
sub
loopne
fcmovnu
mov
cmc
mov
cmp
adc
push
repnz
sub
sbbl
sti
mov
cmc
popa
rcr
out
jmp
movsl
dec
nop
cmpsb
or
xor
mov
or
test
movsl
jge
lahf
idivb
dec
jge
notl
add
mov
push
pop
lret
add
adc
lock
loop
sbb
mov
cmp
inc
sbb
or
add
xchg
mov
mov
lock
popf
in
mov
jns
pop
sbb
push
adc
or
push
fiadds
push
pusha
mov
xchg
fisttpl
add
ret
xor
inc
xor
xchg
ret
push
ss
movsl
add
mov
pop
sbb
jmp
fsubrl
popa
push
sarb
dec
lahf
in
imul
cmp
push
subb
mov
aam
xchg
leave
int3
out
jmp
xorl
pop
xchg
imul
lock
cmpxchg
cmpsl
and
add
jp
sub
jno
jo,pt
push
int
add
inc
lds
stc
fdiv
jns
push
scas
mov
pop
enter
ds
push
in
or
inc
push
pop
js
sbb
add
adc
adc
sub
sub
xor
dec
mov
xor
loopne
cmp
xor
sub
cs
or
movups
mov
sub
pop
outsl
xor
ds
ror
dec
fistps
jbe
sub
pop
xor
dec
sub
add
sbb
push
aad
mov
or
or
ljmp
les
imul
lahf
mov
mov
xchg
fnstsw
jnp
inc
lret
in
mov
stos
lahf
daa
cld
xchg
sbb
ret
repnz
pop
pop
mov
ds
fwait
mov
push
xchg
aaa
sub
das
mov
in
insl
test
jp
dec
lret
mov
push
ret
sub
mov
lret
mov
dec
das
pop
xor
test
push
sti
mov
fsubr
imul
xor
lods
hlt
xchg
xchg
xor
gs
lcall
sub
mov
lret
pop
lret
push
es
scas
mov
arpl
xchg
mov
mov
movsb
lret
je
addr16
push
test
sar
popa
push
xchg
out
push
cmpb
jmp
xchg
jl
xchg
sbb
cmpsl
fcoms
mov
pop
or
repz
xchg
xor
pop
loopne
sub
sub
sti
xchg
mov
std
fmul
pop
rorb
push
cmc
mov
inc
add
jns
out
pop
inc
rolb
enter
xchg
inc
fwait
rcrl
mov
lds
iret
push
es
inc
mov
ja
loop
mov
xor
in
lds
out
aaa
pop
jo
push
fcmovnu
lods
into
fwait
mov
imul
lods
sub
inc
outsb
pop
in
jbe
sbb
movsl
lret
pop
sahf
pop
fdiv
xchg
repz
sbb
rcrb
scas
push
imul
mov
jb
outsl
dec
test
lcall
hlt
fstpt
mov
loop
enter
adc
or
xor
xor
add
push
ud2
bound
test
or
repnz
inc
mov
cmpsl
add
inc
jp
negl
add
xchg
enter
stc
cmp
nop
into
test
xchg
pop
sub
sub
inc
and
pop
mov
mov
cld
mov
jp
and
lahf
pop
mov
test
imul
inc
jp
test
loop
mov
jbe
cmpsl
mov
and
sub
out
sahf
scas
sub
lcall
iret
push
cltd
cmp
jg
sbb
test
call
or
cmpsb
fists
mov
mov
or
andl
jnp
std
sub
scas
cmp
jne
popf
sub
dec
xchg
stc
pop
ljmp
xchg
test
lods
imul
pop
test
gs
xor
fwait
mov
xchg
mov
mov
xor
sahf
push
dec
and
push
mov
adc
sbb
dec
andl
pop
push
or
push
inc
jae
xlat
ror
pop
jle
outsl
dec
pop
fsts
mov
xlat
xchg
xor
test
sti
sbb
sbb
dec
jp
push
mov
pop
lcall
sbb
out
and
xor
add
call
clc
iret
mov
add
sbb
push
mov
mov
xor
popa
fcom
orb
sbb
cmpsl
aam
ret
dec
xchg
clc
xor
arpl
xchg
std
xor
rcr
fld
inc
sbb
push
ss
stos
lods
rcrl
or
mov
xchg
or
or
adc
movsb
outsl
adc
mov
dec
xor
jecxz
mov
dec
bound
cwtl
sahf
out
iret
jbe
popf
push
in
arpl
es
and
xchg
testl
pushaw
roll
jb
cmp
loopne
mov
cld
jae
push
outsl
test
jae
test
inc
pop
scas
test
mov
sub
lahf
mov
roll
mov
mov
adc
fidivs
mov
push
je
into
shll
aad
lret
out
rcll
daa
aad
jne
add
mov
xchg
xchg
mov
je
sub
cld
ret
xlat
imul
dec
mov
lret
dec
pusha
pop
lods
jno
cmpsl
call
daa
and
cmp
xor
mov
xchg
mov
mov
dec
mov
lret
jle
cmpsb
movb
popa
push
js
jbe
ret
and
mov
sbb
test
stos
out
insb
mov
out
in
out
push
mov
jge
pushf
ja
push
push
inc
adc
pop
or
push
cli
in
imul
daa
mov
test
js
jnp
adc
dec
dec
push
cmp
in
push
bound
subb
xchg
das
rcrb
xor
mov
cmp
push
aad
frstor
in
in
pop
sub
fwait
push
fwait
lea
add
sbb
sub
sbb
add
sbb
dec
pop
xchg
hlt
ss
cltd
cmp
rolb
cmp
jnp
or
popa
jno
pop
fstpl
aam
jae
lock
imul
mov
pop
jmp
cltd
adc
fldcw
out
in
and
repz
adc
pop
sub
mov
mov
cs
out
sahf
sbb
xor
cmp
inc
inc
hlt
movsl
rcl
inc
sbb
sub
cmc
mov
insl
rcrb
mov
sub
std
fcmovnb
add
movsb
rorl
adc
mov
test
aas
push
test
and
mov
cmpsb
cmp
aaa
mov
insb
fmul
stos
rcrl
stos
sbb
jle
repz
xlat
xchg
insb
push
and
dec
inc
mov
and
add
jge
sub
pop
adc
aad
test
out
jae
je
mov
xchg
push
xor
dec
leave
adc
lds
and
out
in
outsb
push
mov
rcl
jmp
cmpsl
mov
xchg
xchg
ja
clc
les
cltd
or
out
popa
stos
cli
or
out
push
lods
xor
cmpsl
sub
test
mov
pushf
mov
cmp
mov
gs
ret
and
mov
in
push
jae
sub
and
lret
and
mov
enter
push
jle
cli
sbb
add
jae
mov
repz
mov
sub
subb
push
push
cwtl
ds
xor
stos
aam
push
xor
xor
mov
mov
push
outsl
mov
inc
mov
insl
jmp
jmp
sti
cmp
mov
vmread
jne
pop
mov
stc
adc
andb
adc
aam
stc
cmp
mov
xorb
icebp
inc
mov
imul
dec
fs
les
mov
fdivrs
pop
jb
pop
orb
or
scas
mov
repnz
loope
add
sub
or
xor
mov
loope
out
les
lret
sub
pop
lea
and
test
filds
mov
mov
scas
cli
sbb
inc
mov
dec
sbb
bound
push
hlt
inc
cmp
imul
dec
loopne
xlat
adc
clc
mulb
cmpsl
ss
fidivrl
scas
mov
or
stc
iret
sub
cmp
dec
mov
push
orl
data16
mov
call
adc
adcl
mov
or
and
fisubs
lret
mov
fwait
push
lcall
ret
pop
mov
and
leave
in
mov
xor
out
sahf
rcll
in
sub
fwait
aas
sti
fcmovbe
call
sarb
out
mov
sarl
arpl
lds
lock
mov
insb
pop
or
pop
and
test
adc
sub
sbb
push
adc
loopne
es
popf
sahf
xchg
loope
insl
testl
mov
sbb
mov
test
in
sbb
dec
xlat
rorl
mov
data16
add
or
mov
dec
mov
xchg
dec
mov
in
jecxz
lahf
xchg
cmpsb
cmp
mov
xor
dec
inc
popf
stos
data16
stos
sbb
sahf
inc
stc
add
mov
mov
mov
push
enter
data16
pop
jb
fistpll
out
jl
in
xchg
dec
imulb
sbb
and
fidivl
call
cmp
stos
xchg
cmp
ljmp
faddl
test
add
jg
xor
pop
sub
test
xlat
kmovb
xchg
imul
loop
cmp
adc
mov
sarl
ficoms
jne
aas
mov
dec
test
in
movsb
xor
cmpsl
push
out
aaa
fidivrl
insb
add
cmpl
divl
ss
ret
adc
mov
rolb
adc
scas
inc
or
inc
mov
lods
stos
mov
xor
pop
insl
mov
int3
insl
unpckhps
scas
imul
mov
mov
jnp
adc
xchg
adc
je
or
jno
add
xchg
pop
loop
dec
or
cmc
leave
cmp
pusha
or
jle
in
mov
push
xor
and
fidivrs
mov
xchg
popf
inc
in
adcl
fidivl
lock
mov
rorb
fists
repz
mov
add
mov
add
adc
mov
xchg
jmp
mov
ficomps
movsl
cmpsl
push
pop
cmp
loop
add
ds
mov
mov
sbb
pop
mov
out
sub
cmpsb
fstp
hlt
inc
sub
scas
xor
mov
cmp
jo
mov
jbe
leave
sbb
shr
sub
es
iret
adc
int3
mov
scas
inc
mov
adc
test
inc
sub
scas
mov
dec
aad
rcrl
loope
ds
fadds
fwait
sbb
jg
jne
iret
sbb
add
sbbb
addr16
clc
bound
dec
sbb
cli
mov
andl
pop
cmc
cmpsl
ret
pop
jecxz
lea
scas
push
shlb
fstpt
aam
dec
incl
xchg
push
hlt
sti
lods
iret
adc
cmp
aas
in
pop
ds
addr16
std
and
daa
test
sbb
fisttpl
fstpl
pushf
push
dec
dec
adc
je
push
and
shrb
daa
lds
mov
in
inc
stos
sbb
pop
dec
test
or
int3
repnz
xchg
xchg
outsl
xchg
cmp
mov
dec
or
cwtl
xor
mov
jecxz
loopne
xor
mov
cli
stos
add
add
pusha
insl
xchg
add
movsb
push
xsave
call
add
mov
ret
dec
jbe
ret
mov
push
sbb
sbb
jbe
inc
add
lods
pop
loop
push
mov
xor
fdivrs
push
iret
dec
sbb
nop
into
mov
push
mov
mov
mov
stos
pop
cmpsl
pusha
pop
mov
enter
pop
cli
xor
out
int
sub
xchg
adc
pusha
add
es
pusha
daa
mov
pop
shll
test
aaa
mov
jo
and
xor
sbbl
notb
xchg
jmp
xchg
lahf
xlat
jb
movsb
pusha
cmp
sub
shll
mov
mov
fabs
adc
pop
stos
mov
xchg
pop
scas
fisubrs
cmp
cmpsl
mov
hlt
les
sbb
popf
lds
push
inc
lret
arpl
add
cltd
lods
ret
sub
into
adc
ljmp
cli
push
xchg
mov
mov
add
pop
sub
imull
jnp
call
sbb
mov
cmp
fsubr
inc
mov
lods
mov
aas
push
popa
jg
mov
adc
in
cltd
fsqrt
movsb
dec
ret
aaa
iret
xor
jb
mov
pop
insl
ret
push
insl
scas
imul
pop
cltd
subb
adc
mov
popf
movsb
inc
inc
xchg
cmp
jae
lock
data16
xor
jg
xor
xor
popf
push
mov
stos
out
adcb
jge
psrlw
mov
push
cmpsb
sub
or
out
cmp
push
sub
iret
sti
xchg
mov
and
cmpsb
or
stc
test
mov
adc
mov
lock
mov
cltd
and
call
mov
dec
or
cli
dec
xor
pop
adc
aam
rcrl
das
sub
sti
xchg
inc
jmp
xchg
add
or
jl
ss
divb
mov
stos
dec
sbb
jecxz
add
mov
in
push
loop
int3
adc
push
mov
int
pop
test
and
ja
out
pop
mov
push
pop
testb
sub
mov
sub
mov
test
sub
pop
push
jl
pop
inc
pop
mov
shrl
sbb
add
inc
sbbb
negl
cmpsl
stc
mov
ss
mov
fs
popa
aas
pop
mov
arpl
sub
sbb
and
mov
jae
jne
lret
dec
xchg
int
cmp
push
pop
cmpsl
fst
sbb
lcall
into
sarl
xor
add
mov
add
call
imul
xor
push
fcoml
mov
adc
xchg
popa
imul
aaa
call
xor
xchg
cltd
jl
xchg
jecxz
jo
movsl
imul
ds
fs
cltd
in
fdivl
xchg
loop
xchg
xchg
out
outsb
fistps
jo
mov
mov
mov
ljmp
xchg
inc
push
mov
lods
and
inc
mov
adc
sbb
sarb
mov
ss
div
add
pushf
idiv
push
rol
push
movsl
leave
pop
dec
mov
stos
mov
movsb
test
lods
lods
push
xor
mov
sub
data16
and
xchg
fxch
jno
mov
and
sbb
fs
xor
ror
data16
out
xor
es
sub
inc
addr16
lds
sub
loopne
psubb
lods
movsl
or
pop
push
pop
wbinvd
iret
arpl
mov
mov
mov
inc
nop
outsl
jno
scas
call
jle
adc
inc
jnp
mov
fbstp
jmp
pushf
outsl
sbb
into
push
push
scas
shl
dec
mov
call
out
jg
sti
popa
imul
inc
dec
incb
mov
mov
push
xchg
xchg
mov
leave
ja
lret
int
and
cmpb
mov
dec
pop
xor
pop
and
js
cltd
pusha
cmc
and
jle
jmp
fs
xchg
push
popa
cmp
and
mov
inc
cmp
outsb
dec
jge
lcallw
subl
insl
and
add
and
fisubrl
pop
imul
xchg
jle
shll
mov
fs
std
clc
mov
cltd
xchg
ss
inc
daa
fists
sub
xor
dec
mov
and
add
or
xlat
mov
dec
mov
sub
leave
push
push
pop
das
sarl
dec
out
lahf
mov
push
andl
add
add
xor
inc
push
cmc
icebp
and
cmp
mov
mov
and
jg
cmp
addr16
pop
push
pop
js
outsl
sbb
ljmp
fcoms
add
mov
dec
mov
sbb
lods
or
cmp
cs
je
jne
pop
mov
daa
mov
pop
dec
fildll
jno
adc
adc
jg
mov
mov
or
imul
les
mov
lods
add
push
es
nop
mov
xchg
call
es
leave
sbb
addr16
sbb
idivl
cmc
cmp
les
cwtl
push
call
lahf
or
push
lahf
cwtl
mov
or
push
xor
ret
mov
mov
repz
mov
out
and
mov
ja
int3
mov
lds
pushf
fsubrl
adc
sbb
outsb
movsl
shlb
jns
scas
cmc
les
jecxz
imul
fsubr
mov
xchg
in
mov
jbe
jmp
xorb
sbb
pop
icebp
mov
lahf
insl
iret
lcall
dec
rcrb
ficoml
out
adc
jmp
shr
test
jecxz
movsb
inc
cmp
mov
fwait
in
bound
mov
sub
sarb
sub
mov
xlat
dec
int
jne
fstl
sbb
mov
ret
aas
lods
testl
mov
mov
clc
mov
ficoml
lock
sub
xchg
popa
xchg
push
mov
mov
dec
sub
prefetch
or
cmp
into
out
lock
arpl
leave
mov
pusha
rol
enter
or
push
jmp
sbb
dec
js
sbb
sub
or
je
aaa
ja
xchg
lret
fstpl
push
adc
xchg
std
pop
push
xlat
lret
sbb
mov
jae
hlt
dec
dec
cld
mov
xchg
rcll
jbe
push
mov
push
mov
add
pop
dec
jno
shll
dec
mov
pop
sar
mov
rorb
cmp
lcall
jp
cmc
xchg
xchg
inc
cmpsl
jge
ret
lret
mov
scas
sbb
dec
dec
sbb
xor
in
std
add
or
mov
xchg
mov
push
fisubl
mov
ss
in
aam
jecxz
notl
mov
or
adc
sbb
bound
imul
ljmp
ja
xor
jne
pushf
js
xor
pmulhuw
loope
xor
xlat
insl
cld
rcrb
dec
jmp
in
cmpsb
and
sub
mull
dec
inc
dec
dec
sub
dec
mov
and
push
cmpsb
jne
inc
outsl
push
jnp
fsubr
cmp
aam
inc
mov
mov
icebp
jmp
pop
mov
adc
xchg
lcall
xchg
fmull
sets
pop
push
jno
out
call
inc
in
pop
pop
fld
push
cmp
lahf
aas
push
jge
inc
popa
add
adc
mov
or
gs
into
cli
sbb
ja
scas
loop
xchg
jp
pusha
cmp
inc
roll
inc
or
pop
pop
xorl
xchg
lretw
mov
test
lods
pop
repz
xchg
push
cltd
adc
dec
add
pushf
cltd
filds
xchg
jbe
add
push
sbb
arpl
mov
inc
fwait
push
orb
xchg
push
mov
or
ds
inc
jle
xor
in
or
aad
sti
cmp
adc
jns
adc
outsb
dec
imul
push
cltd
fistps
lock
mov
clc
enter
mov
add
dec
lcall
dec
in
aaa
mov
rcrb
pop
roll
mov
scas
mov
mov
push
pop
sub
inc
rcl
pop
dec
fwait
in
add
sbb
dec
not
xchg
jge
push
or
popa
xchg
jmp
inc
mov
push
pop
test
cs
jbe
stc
pushf
mov
adc
push
leave
inc
jb
loope
fisttpl
faddl
and
add
in
sub
lods
jl
ret
cmp
movsl
mov
mov
mov
popf
stc
nop
ss
pop
jb
add
add
movsl
insb
adcb
stos
pusha
cmpsl
cld
int3
pusha
pop
mov
js
pop
xor
in
inc
xor
ftst
push
xchg
mov
adc
incb
int
inc
jae
call
pop
fxch
jmp
fcoml
je
dec
fincstp
rolb
jne
cmp
or
mov
orb
popa
loop
popa
and
popa
roll
inc
push
ss
out
cld
adc
mov
cmpl
xchg
test
xor
dec
sarb
ljmp
cmp
and
int3
adc
push
pusha
sbb
mov
movsb
mov
xchg
fistps
incb
mov
rolb
push
jl
mov
jbe
ja
nop
lret
nop
call
adc
inc
sbb
jnp
hlt
les
leave
orb
jecxz
int3
adc
out
adc
mov
cmpsb
pop
dec
imul
push
push
dec
jp
rolb
mov
das
iret
lock
das
push
or
hlt
jns
cld
negb
mov
mov
shlb
push
cli
jnp
push
and
mov
and
mov
sbb
pushf
iret
js
xchg
dec
jnp
xor
int3
mov
pop
cmpsb
push
jnp
data16
push
pop
add
ret
test
sbb
sub
fidivrl
push
out
pop
icebp
push
js
and
jnp
insl
adcb
dec
add
sub
repnz
lds
cli
push
adc
call
sbb
bound
shlb
push
jno
jge
lea
cmp
pushf
push
sbb
xchg
std
inc
dec
mov
fildl
jl
jmp
out
adc
sbb
pop
cmpb
xor
pop
dec
mov
cmp
shll
sbb
aaa
push
cmp
sbb
test
ret
dec
repnz
mov
pop
leave
data16
cli
dec
inc
or
loop
push
pop
lea
cwtl
jno
int3
sub
test
add
push
pop
jecxz
cmp
sub
out
stos
into
test
inc
lahf
fld
add
shll
es
mov
sbb
mov
in
out
out
movsl
inc
mov
fidivrl
into
stos
lcall
repz
inc
sub
and
dec
sbb
push
mov
inc
pop
mov
int
xor
sub
lods
mov
enter
pusha
test
cmp
push
push
lea
fimull
lock
outsl
loope
adc
xchg
add
dec
mov
inc
cmpsb
jae
xor
cmp
push
sbb
movsl
xor
mov
and
and
cltd
rolb
imul
jge
jns
jno
pop
popf
add
nop
imul
jnp
lea
mov
inc
sbbl
mov
pushf
xor
mov
mov
daa
lds
scas
mov
sar
inc
lret
pop
lds
lods
ficomps
inc
mov
in
mov
add
jae
out
jo
in
cltd
iret
or
push
xchg
dec
scas
mov
pop
movsl
leave
push
in
cmpb
push
or
mov
and
lret
in
movsl
push
loope
xchg
mov
jecxz
adc
nop
dec
adc
cmp
nop
lahf
test
or
scas
add
pusha
jno
cmp
inc
jo
arpl
jge
fldl
xor
xor
cmc
out
push
movsl
lods
sbbl
push
push
fistl
testb
pop
sbb
dec
sub
mov
push
jno
push
loopne
mov
sbb
stc
adc
mov
jae
pop
xchg
mov
call
ret
pushl
lret
jg
inc
sahf
das
jnp
dec
in
and
iretw
jmp
jo
pop
and
add
negl
sbb
loop
cmp
cmp
test
sub
shll
rcr
add
sbb
sbb
or
and
inc
xchg
into
mov
add
test
and
dec
cmp
cmpsl
pop
inc
pop
dec
sbb
mov
mov
ja
push
icebp
pop
fistps
rorl
test
jae
aam
je
mov
mov
fldl
lock
cmpb
stos
cwtl
es
out
jne
sbb
pop
xorl
xor
stos
push
xor
push
arpl
add
lock
cltd
inc
sbb
push
dec
xlat
loopne
pop
pop
inc
jle
test
inc
lock
jmp
dec
dec
imul
mov
movsb
std
inc
xchg
ret
push
lods
cwtl
adc
push
cmpsb
jecxz
out
daa
outsl
mov
test
inc
cmpsl
cli
or
iret
test
sub
mov
inc
dec
lods
push
pop
shll
ljmp
int
pop
scas
sahf
jmp
ret
lahf
xor
add
std
lods
cltd
xor
test
fs
sub
pop
push
ret
cmpsl
aas
jp
sbb
push
jno
jle
xchg
aam
outsb
shlb
mov
cmp
lock
pop
lea
inc
xchg
lods
lahf
aad
mov
inc
cmpb
jo
fwait
lods
inc
pop
mov
or
or
pop
leave
stc
test
insb
xchg
or
cli
cwtl
or
aaa
in
out
movsl
scas
pushl
outsl
xchg
lcall
ja
bnd
repnz
add
lahf
mov
fldl
stos
mov
test
adc
mov
insb
cs
sbb
ljmp
call
imul
addr16
pusha
dec
stc
jmp
ds
into
xor
and
or
mov
or
insb
test
mov
js
and
aad
leave
xchg
mov
dec
es
mov
lea
outsb
pop
imul
sub
das
adc
xor
pop
repz
mov
push
xchg
sub
cli
mov
jmp
push
lds
push
test
ljmp
push
push
cmp
jl
mov
mov
dec
dec
mov
jnp
push
cmp
fdivrs
push
nop
or
in
pop
andl
ja
fstpt
mov
outsb
stos
cmpl
xchg
mulb
pop
leave
xor
push
sub
jbe
xchg
mov
lahf
aaa
data16
lds
xor
jle
dec
sbb
jp
das
push
scas
push
inc
movsl
xchg
test
push
adc
add
fcompl
ljmp
aas
cmp
insb
add
sahf
add
je
push
cmp
sti
nop
push
shll
loope
lcall
xchg
int
or
mov
std
xlat
jmp
mov
lret
jge
pop
pop
test
repz
jmp
jo
pop
adc
xchg
iret
mov
mov
lock
sti
or
mov
je
sbb
stc
mov
in
and
stc
cmp
dec
mov
mov
xor
decl
outsl
jle
or
in
fwait
add
das
nop
xlat
call
cmpl
clc
lods
push
icebp
jge
shlb
mov
cmp
mov
mov
ret
pop
add
jo,pt
leave
pop
scas
inc
aam
xchg
sub
mov
mov
imul
and
mov
mov
icebp
enter
loop
bound
jo
xor
fisttps
pop
xor
repz
mov
inc
or
lods
pop
dec
jp
and
and
shrb
dec
inc
hlt
subb
add
jp
mov
pop
cmpsb
add
shrb
mov
leave
js
and
adc
imul
inc
sbb
xchg
mov
push
mov
sbb
mov
pop
pop
sbb
fcompl
mov
jge
mov
int
insl
in
sahf
insl
jmp
jp
dec
mov
insb
leave
loope
add
inc
das
es
mov
xor
add
or
mov
fidivrs
lea
iret
imul
nop
rol
push
xlat
xor
out
pusha
mov
clc
clc
in
inc
jb
addb
pop
dec
dec
push
dec
dec
lds
adc
sub
fwait
mov
icebp
lret
inc
jmp
fldenv
sub
cmp
rclb
popf
xchg
lea
ljmp
arpl
jp
jae
test
mov
pop
cld
xchg
sub
mov
xchg
jb
cld
int
add
jno
lods
add
sub
mov
xchg
int3
mov
aad
es
xchg
ds
loopne
pop
mov
inc
push
add
sub
cmpb
inc
pop
popa
or
outsb
ljmp
xor
in
out
stos
pop
pusha
call
call
mov
shrb
aam
stc
lock
lahf
and
leave
or
sbb
mov
nop
in
mov
push
push
or
sarb
push
fwait
inc
call
out
push
mov
loop
popa
and
cmpsl
mov
sbb
xor
and
push
scas
leave
inc
rcrb
push
mov
add
xchg
xchg
jle
sbb
mov
sub
push
mov
xor
aas
sbb
fildl
fisttpl
bound
push
addr16
dec
clc
push
jno
or
ret
iret
mov
sbb
jle
mov
sbb
inc
jae
jg
cmpsl
arpl
jp
stc
sbb
enter
xlat
adc
xor
insl
cmp
adc
adc
adc
push
hlt
mov
mov
ret
mov
xchg
push
lock
adc
lcall
inc
xor
push
dec
aaa
jl
inc
fmuls
sbb
aaa
inc
out
lea
fs
pop
cmpsb
ja
pop
aam
jge
cld
jns
inc
xchg
fisttpll
dec
sbb
mov
lea
outsl
in
popa
add
rol
xor
or
xchg
in
scas
addb
jle
jmp
int3
mov
repz
xchg
pop
dec
fmuls
mov
gs
pushf
scas
subb
std
lret
test
dec
cmp
jno
cmp
jmp
pop
pop
jnp
outsb
xor
jp
cltd
enter
jo
sti
push
mov
test
mov
jmp
adc
sub
xor
addl
pop
mov
push
daa
adc
sbbb
je
xchg
loopne
orl
cmpsl
mov
add
mov
adc
xor
inc
scas
out
ret
arpl
mov
js
xor
or
fists
cmp
sbb
insl
lds
pushf
jecxz
dec
sub
enter
push
pop
adc
mov
xor
outsl
cwtl
inc
mov
les
cld
push
pusha
sahf
xor
call
cs
or
jo
adc
xchg
mov
cmpsb
popl
mov
mov
jl
test
lds
aam
add
inc
push
jl
mov
test
push
mov
fs
cli
mov
int
jb
jp
cltd
cmp
bound
icebp
mov
pop
adc
shll
mov
sti
cmp
mov
xchg
orb
fcmovbe
mov
sub
push
jbe
add
int3
sahf
or
mov
mov
les
cwtl
cmp
js
cmc
notb
insl
dec
mov
cmp
lods
out
fisttpll
jbe
jb
loopne
sub
pop
adc
xor
ffreep
sub
inc
push
inc
pop
out
and
fsubrl
push
out
btr
push
int
popf
pushl
rcr
mov
cmpsl
iret
jo
ds
mov
movsb
stos
jns
insb
in
mov
push
mull
push
sbb
push
pop
mov
xchg
mov
jb
jp
jge
scas
fisttpl
adc
jne
inc
xchg
jno
out
insb
bound
jns
adc
testb
xlat
ja
imul
scas
out
mov
cmpsb
pushf
push
testb
xor
cwtl
lcall
imul
clc
push
fstps
rcrb
push
insb
movsl
sti
sub
in
pop
or
shrb
add
into
fimuls
inc
fs
mov
dec
rcr
gs
adc
sarb
cs
mov
mov
lahf
lahf
enter
ret
popa
fidivs
mov
lret
jg
popf
or
out
popf
popl
add
xchg
adc
add
idivb
popf
leave
scas
xchg
outsl
fwait
lret
sbbl
repnz
jno
pop
pop
frstpm(287
shll
push
fisubrs
pop
ficoms
sbb
test
xor
mov
dec
scas
daa
cmpb
inc
inc
lea
and
and
pushf
inc
and
mov
pop
enter
mov
jb
in
jp
notb
pop
adc
push
adc
adc
add
pushf
adc
cmpsl
test
imul
sub
bswap
in
push
js
rcll
sbb
mov
push
inc
xchg
das
xchg
nop
adc
xchg
enter
jp
inc
or
jge
add
dec
sub
jnp
callw
outsb
cwtl
cmp
aam
mov
dec
xchg
lcall
and
imul
inc
mov
mov
jns
cli
mov
imul
mov
out
xchg
jp
mov
fcompl
cmc
push
adc
inc
movsl
jmp
mov
or
mov
xor
inc
popf
popa
sbb
adc
cmp
add
add
test
iret
adc
xor
cmp
add
ljmp
loope
int
sub
mov
cmp
mov
addr16
stos
arpl
es
dec
outsl
les
push
jnp
in
aam
gs
test
push
clc
and
push
sarl
loop
outsb
mov
jnp
das
lret
or
mov
mov
adc
in
subb
shl
sub
lods
push
mov
pop
cwtl
movsb
inc
xchg
hlt
ret
sub
xor
ja
jge
repnz
int
push
jg
xlat
out
sub
cmpsl
movsb
js
cli
and
std
dec
clc
std
xor
fisttpl
dec
scas
shll
enter
xlat
shlb
or
jae
cmp
add
jb
mov
sbb
xor
shr
adc
xor
mov
xchg
mov
sub
ja
sarb
or
fs
test
xor
add
xchg
enter
into
ja
loopne
pusha
xorl
out
dec
fildl
fwait
mov
mov
mov
sbb
lock
into
add
push
xor
or
xor
es
mov
rorb
dec
in
add
movsl
pop
cmp
jbe
jle
mov
mov
scas
gs
or
jo
aad
sub
repnz
cmp
jmp
imull
sub
dec
test
jne
lret
xchg
lar
xor
repz
push
rcll
xchg
cmp
mov
lods
cmp
inc
out
cmp
sub
pop
inc
arpl
call
pop
lods
adc
es
test
add
cwtl
and
mov
sbb
int3
iret
adc
jge
int3
inc
les
fiaddl
test
xchg
adc
mov
jns
popf
movsl
mov
and
jle
test
leave
xor
pop
pop
adc
js
mov
mov
mov
mov
mov
push
lds
outsl
lcall
clc
in
int3
jecxz
loopne
and
clc
push
adc
in
fcmovbe
pop
in
lret
adcl
lret
xor
in
mov
push
lret
sbb
add
cltd
in
jnp
mov
mov
cmpsl
ret
xlat
jp
inc
add
cmp
or
xchg
loop
pusha
data16
add
lea
mov
fadds
fdivrl
fbstp
iret
jne
ret
push
cmp
jno
adc
or
jg
mov
jne
insl
lret
add
loop
gs
and
cmpsb
xor
cmp
push
inc
cmp
jl
mov
mov
mov
out
inc
mov
std
les
jne
dec
cmp
push
push
adc
mov
dec
dec
data16
mov
adc
push
loopne
outsl
mov
lret
pop
jae
mov
stos
inc
xchg
mov
stos
stos
add
cmp
pop
push
in
leave
es
fisubrs
sbb
mov
jmp
adc
push
nop
push
filds
mov
ret
xchg
push
daa
out
icebp
scas
lcall
lds
cmp
or
adc
xor
adc
insl
fsub
and
dec
inc
inc
mov
dec
mov
stos
ds
push
repnz
fnstenv
add
fldcw
les
jge
push
cmp
sbb
mov
cmp
mov
xchg
hlt
or
push
push
push
sub
cli
ret
testb
rorb
and
cld
lods
jg
and
xchg
inc
xchg
push
push
push
jbe
mov
std
scas
add
les
pop
out
xor
mov
mov
imul
fdivl
sbb
lcall
aaa
xor
and
sti
fisubl
dec
stc
popa
mov
js
mov
lret
sbb
inc
mov
and
xor
xorl
mov
xchg
stos
fidivl
into
rolb
cmp
jl
fwait
adc
outsl
xchg
sbb
pop
jp
clc
jne
push
or
and
add
loope
sbb
inc
mov
xchg
dec
push
fwait
pop
mov
fists
dec
lcall
scas
inc
stc
jb
pop
addr16
pop
sbb
mov
test
loop
movsb
mov
out
loope
lea
les
sarl
arpl
ljmp
mov
xor
cs
mov
mov
insb
fwait
add
das
sub
ss
xchg
pop
bound
sbb
clc
push
sbb
push
add
or
sbb
sub
std
cmp
popf
pop
xor
xchg
pop
cmp
fidivs
sbb
movsl
lret
cli
ret
out
and
cmp
jmp
call
jno
fadd
fs
mov
xchg
xor
out
rclb
aas
es
jl
dec
add
pop
xor
loop
pop
sti
xchg
jno
xor
inc
cmp
and
in
push
cmp
mov
test
sbb
push
sbb
pusha
stos
add
sti
insb
xor
dec
add
lea
or
sbb
hlt
or
dec
hlt
push
adc
insb
les
loope
adcb
mov
xor
push
notl
adc
dec
lea
std
and
lcall
jmp
fdivrl
mov
dec
cmp
adc
push
mov
xchg
stos
sbb
insl
lods
jno
add
aas
mov
int
repz
cmpsb
cmpsl
gs
pop
jecxz
xlat
push
mov
jg
in
adc
imul
cld
int3
imul
push
int
mov
mov
push
lret
mov
popf
and
add
mov
pop
shr
clc
push
mov
pushf
mov
mov
cmp
aad
fwait
popf
or
pop
repz
mov
mov
faddl
fdivl
lods
fmull
and
mov
nop
cmp
jbe
jmp
ret
les
lret
sbbb
pop
enter
pop
ljmp
mov
and
fwait
cmp
stc
adc
pusha
pop
lcall
out
xchg
mov
jle
push
dec
and
adc
fnstsw
lahf
sub
outsl
push
jb
adc
loopne
fisubs
pop
movsb
pop
and
sub
and
fadds
cmp
sbb
pop
pop
out
sub
fildll
jbe
push
fiaddl
pop
bound
in
xchg
gs
lds
mov
or
les
cmc
xor
aam
push
jo
inc
sub
sub
aas
adc
and
jle
int
data16
out
loop
or
popa
mov
push
mov
xor
mov
jle
call
and
enter
pop
xbegin
pop
filds
je
outsl
mov
lea
data16
arpl
sub
and
pusha
in
pop
fs
mov
fsubr
inc
add
add
fsubs
sbb
scas
and
fwait
add
mov
loop
fdecstp
mov
lock
mov
jmp
cli
push
or
xchg
sub
fistps
lea
fidivrl
dec
in
out
cmc
add
les
dec
fiadds
add
sbb
mov
ficoml
pop
mov
dec
jle
xor
sbb
dec
mov
mov
test
adcb
dec
xor
lds
addb
xor
add
movsb
lods
test
data16
inc
xchg
push
lahf
test
mov
mov
jno
push
lea
repnz
dec
xchg
or
stos
andl
lock
testb
out
cmp
cmpsb
xor
outsb
dec
dec
cmp
sbb
pop
sub
in
fbld
mov
fmull
mov
sbb
sub
xor
icebp
scas
mov
mov
jns
sub
aam
je
mov
pop
stos
jp
or
jle
aad
movlps
sbb
mov
inc
push
pop
cwtl
adc
in
aas
roll
fwait
sub
pop
movsb
dec
sub
cmpsl
pop
fwait
jns
ffreep
and
arpl
mov
imul
call
daa
in
adc
or
xchg
sub
pop
into
leave
rorb
mov
mov
push
enter
incl
xchg
faddp
pop
int
ds
mov
testb
lea
jbe
or
lea
cs
shrl
pop
adc
push
gs
mov
push
jl
inc
jecxz
dec
sub
ja
popf
je
and
dec
push
xchg
je
jo
adc
push
xchg
push
aaa
fcompl
outsl
add
and
push
int
cs
int
and
lret
and
fs
out
dec
dec
call
loope
and
inc
xchg
jp
add
jne
xchg
je
sub
mov
cltd
cmpsb
cltd
pushf
inc
xchg
notb
or
mov
and
cmpsl
sub
fbld
pushf
sub
outsb
outsb
std
or
pop
push
sahf
pop
push
out
fadd
cmpsl
xor
cmp
hlt
mov
in
pop
jno
out
xor
lods
incb
push
cmc
aad
and
push
ret
add
xor
out
outsb
xchg
pop
mov
fsubrl
inc
pop
fwait
jmp
inc
sbb
mov
sahf
push
mov
add
jecxz
imul
rolb
outsb
pop
pusha
sbb
insb
insl
inc
mov
or
push
fcoml
lahf
jp
leave
insb
ss
es
ja
mov
mov
jae
sbb
out
mov
xlat
or
inc
xor
cmp
or
rclb
mov
mov
push
aad
dec
and
xchg
pop
int3
int
inc
test
sbb
in
icebp
aas
and
shlb
loope
xor
jnp
adc
das
fwait
daa
movsb
inc
nop
cwtl
rolb
jecxz
mov
jnp
fimuls
out
sbb
aaa
stos
push
mov
push
pop
push
jno
fnstenv
inc
cmp
push
inc
cmp
shrl
mov
test
icebp
clc
sbb
data16
xlat
repz
mov
sti
cmpl
mov
xor
mov
mov
fsubrs
cmp
adc
pop
mov
xchg
push
jns
jp
sbb
out
xchg
xor
xor
xchg
ljmp
repnz
loop
mov
popf
mov
mov
fs
mov
gs
sub
ss
push
fcompl
mov
lsl
mov
or
push
mov
cmp
dec
aas
adc
dec
sti
test
mov
or
pop
imul
dec
sbb
push
insl
mov
inc
jbe
into
lods
aad
inc
pop
shlb
jecxz
cltd
xor
xchg
pop
add
andl
inc
dec
ret
push
mov
and
mov
cmpsb
enter
rolb
loop
outsb
and
ret
adc
pop
rorb
push
aas
jl
pusha
orb
push
cltd
flds
mov
js
jnp
movsl
and
fwait
in
push
mov
pop
mov
push
xchg
add
out
inc
outsl
js
adc
pop
jbe
xchg
ja
or
mov
sahf
jb
sbb
icebp
fdivr
xor
pushf
in
xchg
jl
mov
cmpsl
push
pop
cli
pop
and
sbb
fisttpl
aas
push
push
cmp
shlb
mov
lock
pop
movsb
scas
xchg
sub
rorb
sub
xorl
push
aad
adc
cmpsb
mov
lds
and
add
loopne
clc
inc
inc
outsb
mov
jb
shlb
mov
mov
or
subl
pop
popl
mov
in
or
enter
mov
data16
jae
neg
mov
ljmp
ret
pop
imul
inc
mov
cmp
xlat
nop
push
loope
or
dec
sub
jecxz
mov
xchg
out
mov
and
pop
in
repz
mov
je
aas
ds
inc
je
shlb
mov
test
jg
sti
in
push
lahf
lods
stos
cmp
jl
inc
sbb
xlat
or
jp
sub
xlat
cmp
outsl
mov
ss
inc
and
mov
cmp
mov
pushf
flds
hlt
arpl
push
or
dec
cmc
push
or
pop
scas
int
stos
mov
lock
adc
ret
fwait
inc
shl
xor
xlat
insb
jo
push
mov
ret
pop
mov
inc
dec
push
leave
cmpsb
sarb
sub
or
mov
or
cld
addr16
sbb
out
push
test
cmpsb
sub
fsts
sti
cli
mov
dec
cs
push
mov
scas
pop
xor
sbbl
pop
fidivrs
ds
int
xor
xor
bnd
test
xchg
loop
insl
or
pop
inc
inc
imul
adc
xor
lods
cmpsb
loopne
fcomps
inc
mov
adc
mov
add
cltd
sbb
or
push
push
pop
or
add
xchg
adc
inc
jge
xchg
inc
pushf
mov
icebp
inc
ljmp
stos
and
push
jecxz
add
scas
jecxz
push
in
push
and
out
std
mov
add
push
xchg
xchg
fnsave
add
gs
inc
push
or
clc
jnp
fwait
jo
sub
cmpsb
mov
movsl
ffree
dec
test
xchg
mov
mov
hlt
add
and
std
inc
inc
pop
or
in
sbb
sbb
imul
and
push
shlb
imul
mov
lret
hlt
pop
mov
or
pop
xchg
cmpsl
xchg
and
push
in
and
mov
xchg
jp,pt
fsubl
ret
xchg
lcall
cmp
jg
push
mov
mov
sub
push
loopne
mov
idivb
rol
nop
movsb
stos
fucomi
jle
popa
addr16
mov
out
shlb
jb
mov
inc
daa
lods
sbb
lret
mov
shll
sti
popa
je
lods
aam
cmpsl
or
outsb
dec
pop
xor
pop
xchg
cmp
mov
stc
fsubs
int3
or
mov
lock
sbb
push
lret
xchg
jmp
ret
push
xchg
xor
ss
in
jmp
nop
dec
hlt
sahf
mov
rolb
aaa
mov
dec
push
cmp
aaa
sahf
pop
adc
push
xchg
loop
pusha
inc
mov
mov
pop
push
adc
cs
jge
inc
sbb
or
add
mov
inc
leave
cltd
lret
es
sbb
mov
sub
cli
int3
pop
mov
stos
pop
scas
mov
stos
dec
push
sbb
cwtl
mov
test
in
test
jbe
mov
jmp
push
pop
movsb
pushf
add
dec
imul
add
lret
cld
or
shlb
lods
imul
sub
mov
xor
filds
add
in
dec
fimuls
sbbb
mov
adc
adc
add
pop
sub
or
or
jecxz
mov
dec
ret
fadds
jbe
cmc
loope
clc
out
loopne
push
dec
lret
inc
sbb
sbb
xchg
pop
imulb
stc
push
xchg
aaa
int
and
jg
scas
mov
add
xlat
lcall
data16
sub
dec
mov
movsb
inc
push
gs
mov
jne
adc
shll
stc
adc
push
aam
mov
fists
push
inc
pop
mov
aad
add
dec
jae
or
out
arpl
adc
orb
mov
or
mov
xchg
push
jle
mov
adc
inc
not
jmp
repnz
or
xchg
incb
hlt
adc
mov
test
aaa
sti
sub
leave
xor
or
sub
sub
dec
ljmp
inc
cmp
ret
bound
test
and
out
and
movsl
fwait
enter
out
mov
movsl
mov
shl
pop
repnz
dec
inc
pop
insl
out
adc
cmp
rcl
cmp
or
mov
pushf
cmc
push
jp
xor
or
ds
inc
pop
push
add
hlt
mov
stos
push
repnz
addr16
mov
out
jmp
jge
adc
int
push
or
sub
jl
loopne
popl
inc
imul
popa
adc
popf
xchg
pop
stc
ljmp
mov
outsb
cwtl
inc
in
sub
jmp
sbb
pop
cmp
dec
or
gs
insl
add
negl
adc
mov
test
je
jns
push
out
xor
int3
add
push
sbb
lock
xor
inc
jb
jmp
test
shll
clc
lds
xor
inc
mov
xchg
cmp
lods
or
cld
push
cmp
dec
mov
adc
ret
jg
addr16
pop
in
sub
mov
pop
sbb
incb
pushf
mov
pushf
sub
sub
pop
xlat
or
daa
lret
mov
ficompl
sub
les
cmp
jmp
int
mov
popf
and
jmp
clc
dec
out
loopne
es
shll
pop
mov
mov
pop
pop
repz
push
add
ss
hlt
mov
das
pop
jg
into
xchg
adc
jmp
push
and
xor
dec
repz
and
jl
lret
mov
lods
insb
push
push
or
bound
in
or
jne
jbe
test
insb
xchg
das
outsl
sti
loopne
push
pop
adc
out
in
lds
dec
jns
hlt
and
push
inc
push
imul
mov
in
mov
cmp
sub
gs
jnp
dec
mov
jge
hlt
testb
adc
or
lds
in
rolb
mov
repz
jb
adc
and
push
pop
stc
inc
xchg
mov
jle
sbb
js
fwait
mov
or
add
popf
jp
int
pop
add
mov
ljmp
cld
sbb
shll
loopne
stos
subb
and
add
adc
outsl
xchg
add
arpl
fst
lods
mov
movsb
fimuls
inc
rcl
xor
fcmovnu
push
repnz
xchg
add
call
lret
jb
pop
rorl
pop
scas
rcrb
or
xchg
outsl
push
jecxz
lea
lea
push
test
mov
in
mov
and
icebp
jp
jne
ret
les
or
push
jbe
sbb
loopne
hlt
orl
jmp
in
mov
sub
push
stc
mov
dec
and
jnp
jge
imul
or
push
andl
dec
stos
std
adc
popf
jecxz
add
and
enter
dec
fnstcw
arpl
sub
xor
idivb
or
pusha
lret
xlat
mov
in
hlt
nop
adcb
and
xchg
adcl
pop
in
lods
aas
push
out
loope
sbb
jmp
mov
or
lock
mov
mov
sbb
cmp
fcoms
jno
xor
dec
jp
imul
xor
xchg
std
imul
add
aad
andb
inc
scas
cmpsb
loope
mov
sbb
or
or
nop
loopne
mov
clc
jmp
xor
in
sti
fs
cmc
out
jo
shlb
jp
shrl
sub
jnp
into
pop
or
test
test
xlat
lds
inc
cmp
push
hlt
pop
mov
adc
loope
mov
pop
dec
pop
into
add
add
mov
cmp
stc
jle
mov
in
jbe
outsl
in
sbb
push
jge
push
or
jge
sub
or
aam
pop
push
mov
popf
int
adc
dec
inc
ror
sub
xchg
mov
bnd
xor
shll
or
movsb
mov
sbb
in
sub
shlb
aas
fbstp
cwtl
cltd
addl
sbb
fcompl
cmp
cmpsb
and
jnp
filds
in
and
cs
adc
int
xchg
leave
subl
jg
cli
cld
lods
out
outsl
and
inc
inc
movq
cld
and
push
repnz
test
fadds
xor
and
sub
lods
jae
lret
mov
and
mov
push
xor
nop
fwait
mov
dec
cmpl
mov
jnp
cmp
jne
pop
cmp
jb
das
pop
mov
lahf
inc
xlat
cmp
test
nop
mov
insl
xor
fwait
xor
xor
cmc
pusha
mov
jo
dec
sub
ret
clc
adc
aam
mov
cmc
push
mov
inc
xchg
in
into
push
mov
push
cmp
xor
mov
decl
dec
and
push
and
outsb
sub
rol
and
mov
in
out
test
adc
pop
lock
pop
pop
push
pop
xchg
addr16
aas
popa
addb
clc
mov
cmc
fisubrl
int3
js
add
cmp
int
shrb
inc
jae
out
ljmp
or
inc
adc
or
inc
mov
pop
or
mov
inc
orl
jo
btc
sbb
sbb
jnp
pop
xor
lret
aad
push
mov
rcr
dec
out
psubb
orb
inc
lods
int
mov
push
cmp
movsl
stos
and
insb
mov
ret
in
jmp
imul
dec
inc
cmp
and
inc
lea
or
setb
loopne
je
punpckhwd
stos
mov
adc
mov
sti
icebp
cmp
add
adc
fs
and
ja
popa
pop
sub
aam
movsl
shlb
cwtl
mov
pushf
popl
cmp
xchg
push
js
repnz
daa
adc
arpl
movsb
mov
repnz
cmp
mov
jge
xchg
imul
outsl
sahf
xor
and
test
add
lds
push
test
push
jne
cltd
cltd
testl
loopne,pn
jecxz
cmp
jp
and
mov
and
ja
mov
adc
dec
sub
rolb
jle
mov
dec
add
sti
mov
or
pushf
inc
call
pop
sti
mov
addr16
hlt
shlb
and
subl
fnstsw
mov
mov
pop
into
icebp
sti
mov
scas
mov
sub
stos
sub
adc
mov
pop
xchg
sbb
jns
inc
inc
inc
or
popf
shrl
cld
jle
jmp
mov
lret
adc
arpl
call
in
and
dec
mov
aaa
or
loope
xor
std
aam
cwtl
popf
sbb
jnp
rcll
insl
mov
mov
ret
fdivrs
dec
jp
arpl
xchg
mov
sahf
mov
lahf
xor
mov
push
or
mov
lock
inc
fsubs
inc
dec
sbb
adc
lret
outsl
dec
scas
jp
mov
testl
cmpsl
adcl
aam
jmp
push
mov
rorl
inc
jecxz
into
push
loop
push
jge
insb
mov
cmp
cltd
mov
pop
sbb
mov
mov
inc
mov
divb
add
out
sarl
cmp
adc
sar
in
push
mov
arpl
and
mov
int
popf
add
add
icebp
dec
dec
mov
stc
clc
mov
fnsave
xlat
fstps
stos
ja
dec
cmpsb
jae
call
mov
daa
rolb
ja
jp
cmpsb
mov
mov
pop
roll
sub
pop
nop
adc
lret
cwtl
in
adc
clc
fisttpl
sahf
bsr
sarl
lahf
jae
xorl
icebp
stc
aas
jb
add
xchg
shl
xchg
mov
xchg
scas
mov
and
ss
adc
or
dec
pop
xchg
cmp
dec
stos
jae
mov
stc
or
xchg
nop
cltd
out
ficompl
push
and
ret
pop
ret
cld
or
test
sub
jbe
mov
es
mov
mov
std
xchg
pop
aam
xchg
push
in
lds
lret
fcmovnu
loope
adc
add
sbb
leave
inc
cmpsb
test
jge
cltd
loopne
push
mov
mov
sbb
cld
mov
jb
mov
dec
out
xchg
loop
sub
dec
repz
lret
aad
popf
popa
adc
add
cwtl
add
jge
outsl
xchg
mov
jns
daa
add
and
jbe
mov
nop
or
aaa
push
insl
push
xor
mov
insb
pop
mov
or
cltd
popf
jae
push
sub
jle
mov
inc
mov
neg
xlat
movsl
xchg
outsb
jbe
sbb
push
cmp
out
leave
in
or
out
rcr
adc
xchg
fdivr
xchg
inc
lds
andnps
mov
sbb
test
fs
and
orb
sub
push
dec
test
shl
fs
out
cld
test
popf
aam
xchg
or
aad
shlb
mull
sbbl
push
jbe
fwait
loope
add
inc
xchg
testl
cmp
cmp
sar
out
inc
aam
ficoms
ret
push
xchg
xchg
dec
sub
arpl
pop
shll
sbb
inc
mov
xor
fmuls
jbe
fsubs
dec
jmp
jmp
pop
mov
addl
cld
xchg
mov
cmp
jnp
push
pop
xor
push
in
xchg
push
les
testb
ss
ret
adc
push
sub
inc
mov
cmp
mov
add
inc
sub
push
lds
shlb
icebp
mov
das
scas
cmc
stos
into
into
loop
add
lds
xor
add
and
ds
notl
xlat
add
out
test
push
es
adc
dec
dec
pop
mov
xchg
sahf
and
out
sub
push
aad
xchg
mov
loop
mov
mov
sub
add
xchg
stc
cmp
in
ja
mov
cmp
negb
inc
and
push
xchg
stos
mov
ret
lret
sub
out
sti
pop
int3
test
dec
xchg
pop
subb
aam
add
js
loop
mov
popf
sub
gs
mov
fwait
cmp
lahf
test
jne
push
outsb
sub
add
shll
test
mov
nop
pop
shll
or
orl
push
dec
sub
jg
mov
aaa
sbb
popa
inc
shl
dec
inc
test
xchg
or
lret
cmp
xor
pop
in
mov
push
jg
in
insb
inc
fcoms
ret
adc
and
mov
pushf
pop
dec
cmp
je
or
das
mov
mov
xchg
std
mov
jno
cmp
or
and
jmp
or
ss
mov
ljmp
and
jp
sub
mov
les
loop
shrl
mov
js
outsb
lahf
or
dec
mov
cmp
cli
jge
ror
sub
push
push
imul
sbb
xor
adc
les
hlt
lcall
dec
stc
cmp
lock
and
pushf
loopne
push
mov
or
mov
loop
int
jp
push
and
pop
mov
dec
jbe
les
clc
dec
lds
push
imul
add
mov
nop
push
and
ja
icebp
mov
scas
xchg
cli
cld
mov
jmp
das
int
xchg
lods
cmp
in
jnp
jle
dec
mov
sub
fs
jge
and
or
imul
add
inc
fcmovb
iret
mov
or
lahf
int3
cmpsl
in
aam
icebp
ds
adc
dec
push
pop
and
out
cltd
mov
pop
dec
repnz
adc
ss
mov
xor
repz
stos
test
jge
nop
icebp
pop
sub
in
xchg
pop
ret
cs
adc
sub
pop
adc
pop
je
push
mov
inc
repz
add
test
test
in
mov
daa
mov
jg
dec
add
testl
dec
pop
sar
sub
jb
outsb
loop
sti
xchg
int3
and
jge
xchg
sub
jecxz
std
lea
aam
out
out
popf
das
mov
in
sar
jno
scas
xchg
inc
jl
cmp
dec
shll
sbb
mov
insb
fists
jmp
add
and
into
das
fsubrs
cmc
in
sbb
fsub
pusha
pop
test
sbb
push
sbb
xor
mov
insl
lret
sbb
push
push
jmp
push
addr16
inc
inc
stos
fisttps
jle
pop
test
inc
sbb
pop
sarb
sub
and
fistpl
mov
push
insb
fwait
jb
pop
xchg
fiaddl
inc
stos
inc
jnp
adc
aam
pop
cltd
stc
imulb
jmp
xor
iret
repnz
xchg
sar
add
sbbl
push
push
sbb
jne
test
daa
mov
or
xor
clc
aaa
pop
or
xor
pop
mov
mov
and
mov
xor
adc
jbe
sub
xchg
jno
insl
sub
sub
les
or
cmp
lock
pop
je
cmp
cmp
shll
or
arpl
sub
imul
dec
xor
cmp
pushf
mov
aaa
add
popf
mov
cmp
fiaddl
mov
sbb
aas
popf
dec
mov
sub
stc
and
xlat
cltd
xchg
or
lods
jmp
push
ds
push
imul
jo
dec
mov
mov
lea
sub
inc
ret
pop
mov
mov
call
push
andb
mov
fisttps
outsb
aam
mov
pop
movsl
cmpsl
inc
or
dec
cmc
divb
xor
cli
cld
lock
lret
push
pop
inc
xor
lahf
jecxz
cmp
cmp
mov
ret
nop
int3
insb
das
mov
aas
mov
add
and
dec
nop
ss
inc
push
inc
insb
cmc
mov
cmp
or
inc
outsb
cltd
leave
outsl
sub
mov
es
jmp
and
jno
aad
xor
inc
imul
sbb
jmp
mov
xchg
fwait
mov
fs
xor
stc
mov
call
xchg
lahf
aaa
jmp
fwait
sub
bound
hlt
ficomps
inc
or
iret
cs
dec
mov
popa
xorb
mov
sti
insb
mov
xchg
or
icebp
dec
pushf
popf
jb
sub
rcrl
add
call
or
push
xor
hlt
or
pop
sub
aas
movsl
je
inc
popf
iret
cmp
push
mov
test
mov
insl
add
xor
fmull
sub
ret
in
ss
mulb
repz
add
inc
xor
jo
fistpl
hlt
xor
inc
addl
outsb
ljmp
leave
rorl
lahf
and
shll
push
jbe
pop
adc
jnp
bound
or
scas
and
insl
jns
movsb
jge
xchg
lcall
pushf
jo
and
mov
sbbb
ret
lods
inc
mov
mov
mov
push
mov
sbb
repz
push
mov
lret
mov
adc
das
int3
pop
push
movsb
inc
cmp
and
cmp
nop
inc
arpl
aad
aam
and
and
inc
adc
icebp
sub
repz
lock
popf
leave
and
shlb
jo
mov
scas
adc
xor
and
dec
sbb
cmp
xor
sbb
js
inc
jne
test
mov
stos
xor
add
popa
cmpl
sarb
test
test
aad
mov
leave
jmp
pop
ja
cmpsl
mov
test
cld
icebp
xchg
and
std
push
add
adc
jae
iret
sahf
mov
jecxz
jae
or
enter
add
mov
jecxz
outsb
in
rol
aam
lret
fistpl
push
gs
repz
inc
mov
movsb
mov
test
gs
xor
push
stos
dec
jle
mov
sbb
cmp
imul
jne
movsl
fdiv
pop
imul
mov
ret
cmpsl
fcmovu
pop
lock
pushf
push
push
inc
sbb
dec
xchg
cltd
pop
lea
fxch
inc
mov
dec
and
pop
sbb
out
popf
sub
lds
mov
sbb
popf
icebp
pop
test
sub
cmp
add
xlat
xor
or
loopne
divl
les
sbb
sbb
inc
jecxz
jmp
push
je
xchg
mov
push
mov
clc
inc
and
je
pop
pusha
mov
inc
xchg
mov
inc
adc
rcr
mov
sbb
adc
inc
adc
insb
pop
fisubrs
push
imul
push
ds
mov
in
pop
mov
sahf
or
xchg
mov
mov
imul
shll
gs
cmc
pop
notb
adc
bound
pop
jne
cmc
imul
outsl
inc
cmp
andl
jno
pop
and
pusha
repz
lods
adc
insl
rorb
sbb
scas
push
cmp
push
rorl
mov
mov
mov
xor
out
cmpb
push
xor
je
jle
jo
iret
ljmp
mulb
fsub
repnz
pop
xchg
nop
gs
mov
addb
test
dec
imul
xchg
xchg
cs
jno
and
outsl
pusha
lahf
loopne
fcomp
sub
shrb
jecxz
pop
pop
ret
sub
ficompl
jae
aam
test
out
sub
scas
test
push
push
or
imul
sub
daa
movsl
loop
mov
js
leave
xchg
mov
push
sub
xchg
ret
xlat
mov
lcall
adc
in
xchg
pop
lret
fldl
rol
ret
xchg
mov
mov
jbe
sub
mov
mov
xchg
aad
lret
push
jnp
xchg
lret
and
mov
cmp
inc
mov
mov
pop
pop
inc
dec
inc
cwtl
cmp
insl
mov
xor
test
aad
int3
and
adc
add
pop
mov
mov
jo
inc
add
and
xor
cli
jae
add
outsb
or
adc
pop
mov
out
adc
scas
movsb
ja
xor
sti
push
pop
mov
lods
ja
and
popa
cmp
cmc
les
add
mov
jle
ret
jno
and
test
in
xor
lods
call
ficoml
dec
shrl
and
adcl
add
rcrl
dec
lcall
push
jp
xchg
adc
addr16
mov
sub
jnp
orl
movsl
push
xchg
sbbl
scas
flds
jns
mov
les
dec
mov
dec
subl
int3
fldt
cmpl
sbb
or
pop
in
sub
jo
pop
mov
jae
adc
cld
push
push
xorl
jp
pop
jae
popa
out
pop
dec
cld
inc
mov
push
xchg
sbb
mov
addr16
mov
mov
lcall
mov
cmp
movl
pushf
mov
inc
xchg
cmp
aad
ja
xchg
adc
or
push
rcll
cld
xor
int3
dec
int3
add
dec
xchg
addl
bound
mov
jnp,pt
repz
xchg
pushf
pop
fnsave
or
decl
lea
mov
out
mov
pop
mov
push
std
lret
gs
sbb
aam
lods
lret
imul
pop
lock
xchg
pop
lret
mov
sbb
fstpl
sub
adc
mov
jne
in
insl
adc
popa
dec
subb
mov
cmp
iret
shll
cmpsb
dec
mov
cltd
imul
dec
pop
or
je
xchg
sti
dec
divb
imul
and
adc
and
sbb
int3
mov
rcl
mov
pop
dec
aas
xor
pop
aam
add
push
jecxz
das
int3
mov
sbb
repnz
xchg
mov
cmc
cwtl
clc
xchg
xor
cli
jg
daa
lret
rcll
out
in
dec
jmp
test
gs
addr16
movsb
hlt
mov
xor
dec
loop
and
out
mov
shll
jnp
push
and
das
or
ja
sbb
es
fcomip
lret
cmp
xor
and
jp
sbb
outsb
out
jno
or
or
mov
into
lods
add
jae
jl
inc
orl
cmp
jmp
arpl
jne
mov
mov
push
gs
jb
jg
push
rorb
mov
sahf
decb
add
test
iret
nop
jno
fdiv
inc
dec
xor
or
pop
adc
fs
xlat
clc
fs
testb
pop
adc
xor
addb
popf
cmpsb
pushf
and
or
clc
imul
js
shl
enter
mov
xor
jo
lahf
inc
dec
imul
testb
iret
mov
dec
jns
imull
pusha
push
jg
fucomip
cmpsb
cmp
sahf
inc
sbb
rcl
push
jno
inc
lods
push
cmc
lods
pop
pop
jbe
das
inc
leave
movl
dec
es
daa
xchg
add
push
mov
scas
add
xchg
push
clc
jp
mov
xchg
rcll
outsb
cwtl
adcl
loop
adc
sub
pop
xor
add
push
fsubs
jle
into
jnp
dec
xorl
fnstcw
pop
sarl
cmpsb
jne
dec
rolb
fxch
cmp
les
outsl
pushf
ds
adc
bound
pusha
or
fsubs
push
aam
dec
mov
mov
xor
notb
pop
notb
sti
jnp
xchg
jle
mov
pop
mov
into
mov
dec
sbb
pop
cmp
add
cmpb
mov
stc
aas
adc
insb
and
dec
test
add
add
icebp
int3
test
stos
daa
addr16
scas
jns
inc
stos
mov
xor
jmp
inc
call
or
sbb
add
inc
add
jb
dec
imul
and
inc
add
xlat
pop
lcall
inc
fstps
mov
cmp
jecxz
jo
pop
mov
lret
icebp
ss
jne
dec
and
sub
mov
jmp
sbb
adc
add
xchg
jge
jge
inc
in
sbb
lock
xor
movswl
pop
and
ret
daa
in
lock
mov
or
adc
add
sbb
insl
lods
jnp
sti
leave
jns
mov
xchg
sbb
sti
int
loop
jnp
dec
adc
dec
inc
push
out
dec
sub
ljmp
mov
fiaddl
les
shr
mov
xchg
adc
jl
xor
cmc
js
adc
jge
jl
inc
xor
insb
sar
stos
or
leave
nop
dec
imul
push
push
cmp
pop
mov
or
xlat
cwtl
cli
cmp
bound
jne
pop
cmp
adc
push
leave
mov
in
lea
or
fstpl
jo
iret
std
shr
cld
inc
test
add
cmpsl
ret
scas
pop
pop
mov
les
addr16
stos
cmpsb
mov
jns
and
lods
mov
mov
jbe
clc
shll
or
hlt
or
pop
sub
xchg
mov
dec
add
rcl
inc
push
fcomps
mov
mov
mov
cmpsb
cvtdq2ps
mov
mov
add
inc
push
sub
adc
insl
loop
push
in
mov
or
sti
sbb
or
and
inc
mov
pop
push
cwtl
test
int
ret
push
mov
pop
mov
scas
cs
pop
fmull
pop
and
fadd
fwait
mov
mov
sub
repz
push
mov
add
adc
leave
mov
mov
das
push
stos
jnp
int3
adc
inc
inc
sbb
pop
mov
or
test
add
pop
mov
cmp
jno
sbbb
popf
pusha
push
mov
scas
sub
sbb
add
into
xor
mov
jecxz
imul
aad
and
inc
cld
inc
pop
leave
adc
sbb
flds
data16
and
push
jae
movsl
testl
popf
outsb
mov
and
iret
and
mov
mov
xchg
jmp
stos
push
insb
fisttpll
lcall
shll
fwait
loopne
inc
inc
rol
stos
xchg
inc
adc
cmp
sub
gs
mov
nop
mov
add
out
sti
mov
sarb
jp
xor
sarb
cmp
jno
sub
cmc
scas
sub
jmp
push
mov
push
mov
aas
std
jg
dec
and
add
or
jp
xchg
aas
mov
inc
hlt
dec
dec
xchg
jp
xor
cmp
mov
sbbl
dec
or
in
cli
pop
mov
jle
fwait
sbb
js
dec
and
lret
pop
hlt
loope
pop
lods
jecxz
cmp
lret
mov
dec
lcall
int3
cmp
or
ja
dec
fcoms
sub
pop
mov
lock
out
sub
xchg
imul
sub
cmp
fstps
mov
mov
lahf
mov
sarl
push
xor
loope
leave
into
push
sub
cmp
pop
sub
mov
pusha
loop
lret
and
push
mov
xor
movl
add
xchg
cs
jl
shll
mov
repz
out
in
call
inc
add
mov
jne
inc
jecxz
xchg
shrl
push
in
loope
mov
add
sarb
pop
movsb
shlb
mov
and
or
loope
push
out
iret
mov
shrb
xor
jno
lea
mov
imul
popa
mov
cwtl
sahf
cmp
and
mov
mov
stos
xor
mov
mov
test
aam
pop
sbb
sbb
cmpsl
mov
sub
xor
inc
xchg
sarl
fsts
cmp
pushf
stos
xor
fdivrs
hlt
add
fimuls
loopne
out
shl
xchg
insl
aaa
jmp
loop
mov
xchg
push
movsl
adcl
fbld
adc
in
ret
cmp
out
push
aaa
daa
cmp
pop
add
rorl
andb
test
pusha
inc
out
mov
pop
insl
in
jp
push
jne
pop
mov
sbb
nop
test
lcall
mov
inc
mov
inc
cld
mov
adc
pop
or
mov
jne
pop
subl
sbbl
xor
mov
mov
fbld
into
pop
sbbl
inc
imul
mov
push
push
pop
lahf
std
fdivrp
sub
loopne
xchg
sub
adc
inc
scas
and
add
push
clc
mov
mov
imulb
inc
ja
out
cmp
in
outsb
and
fxtract
sbb
sub
xchg
mov
jae
outsl
add
out
out
out
das
lds
sub
cs
cmp
mov
mov
dec
fdiv
inc
imul
mov
cmp
inc
loope
adc
bound
mov
mov
fwait
inc
fidivs
cmc
lea
inc
arpl
jns
cmp
xchg
cmp
cmpsl
sub
out
mov
rcrb
xchg
jb
cmp
iret
xchg
in
add
movsl
jmp
les
daa
sub
int3
and
iret
fmuls
cltd
mov
daa
fs
add
push
push
shlb
push
cmp
and
lods
shl
mov
rclb
fwait
mov
hlt
sbb
jae
xor
push
push
dec
sub
insb
popa
ret
and
dec
leave
fwait
pop
cmp
xchg
xchg
or
inc
or
ffree
lcall
or
arpl
mulb
pushf
outsb
jnp
and
mov
repnz
outsl
out
or
sahf
add
jno
idiv
mov
fstpl
ret
movsl
add
ljmp
je
push
cmp
pop
clc
outsb
add
arpl
lret
fsub
test
mov
popa
jnp
repz
push
sbb
aaa
mov
fildll
mov
test
dec
ljmp
push
pop
add
arpl
or
call
movsl
xchg
inc
or
adc
pushf
cmp
bound
idiv
push
add
push
fwait
ss
lret
jl
xchg
sbbb
xchg
xor
lods
add
cmc
rorl
mov
push
dec
data16
imul
inc
lock
pop
xor
aam
xchg
filds
inc
mov
jne
dec
xchg
inc
arpl
pop
aam
in
sub
mov
aas
jmp
imul
gs
cmp
iret
mov
jne
int
and
cmp
frstor
je
mov
mov
pushf
popf
mov
push
and
rolb
inc
fs
lcall
clc
fsubrs
xchg
js
inc
cmp
or
push
mov
cmp
jp
mov
mov
fildll
rorb
add
xchg
aaa
iret
xorb
add
jmp
sbb
jnp
sbb
popa
lea
xchg
add
xchg
pop
inc
xchg
xchg
popf
jl
jge
fisttps
das
movsl
fcmove
stos
mov
sbb
sti
faddl
inc
testb
dec
insl
mov
mov
lcall
negb
fwait
mov
xor
inc
out
dec
push
hlt
pop
jge
cmp
and
inc
cwtl
xor
outsb
outsl
or
out
sub
xchg
cltd
or
dec
test
rcr
lahf
push
pop
scas
or
icebp
sub
fcomps
push
mov
mov
fdivr
pop
inc
in
hlt
push
subb
mov
mov
stos
mov
in
cmp
out
pop
into
int3
cs
inc
pop
jge
inc
mov
lahf
mov
jg
sbb
stos
push
lahf
gs
jo
jmp
jns
ss
xchg
sub
jmp
cmpsb
cmpsl
fldenv
div
rorb
lods
notl
xchg
jne
stos
push
or
xchg
push
decb
mov
into
xchg
ss
push
mov
sub
dec
out
daa
xchg
lock
push
outsb
test
add
jmp
mov
inc
iret
xchg
inc
jb
aad
push
aaa
inc
scas
inc
sarl
jl
adc
movsb
adc
std
push
enter
mov
dec
mov
dec
mov
mov
nop
popf
sahf
popf
pop
pop
bound
call
shl
pop
je
stc
fidivl
xchg
push
add
repz
inc
fisubrl
mov
test
insl
jp
aad
add
dec
mov
jecxz
pushf
adc
push
push
repnz
pop
cmp
rcrl
imul
out
adc
dec
mov
pop
ret
xchg
js
imul
je
stc
or
flds
xchg
nop
push
inc
cmp
add
aad
jmp
mov
int3
push
lock
jge
sub
int
loope
mov
std
int
add
mov
ss
sbb
dec
mov
icebp
xchg
push
add
pop
loop
cmp
add
adc
xlat
jnp
sub
testl
mov
xchg
jae
adc
fimuls
shrb
cld
jno
ret
jae
repz
cmp
lcall
fiadds
cmp
stc
adc
jno
push
fsubrl
sbb
es
mov
push
push
dec
out
xlat
aam
mov
adc
popa
test
lods
jmp
invd
loop
xchg
shlb
pop
hlt
xor
rcrb
sub
cmp
and
xor
add
mov
aam
mov
test
adc
or
dec
adc
test
push
xchg
loop
and
add
iret
lock
sub
ret
xchg
hlt
xchg
mov
in
scas
cmp
mov
cmpsl
das
icebp
cltd
mov
jg
aaa
mov
dec
or
lcall
jle
adc
mov
int
push
adc
add
mov
sub
push
cmc
pushl
bound
mov
sub
loope
push
push
mov
pop
lcall
mov
sarl
pushf
push
fadd
cs
sub
das
hlt
jge
je
ret
clc
or
and
mov
sub
or
and
and
je
pop
adc
mov
daa
fldt
mov
popf
test
pop
data16
rclb
adc
cmp
aam
into
add
mov
repnz
mov
aad
das
xchg
imul
stc
mov
mov
nop
xchg
add
pop
sub
pop
sbb
add
outsb
cmp
mov
xlat
xchg
pop
out
arpl
sbb
lods
sub
call
mov
data16
add
cmc
pushf
jns
fiadds
mov
or
out
mov
aad
push
std
fsubrl
iret
xchg
xor
xchg
adc
xor
sbbl
xchg
ret
stos
jl
fdiv
inc
jne
repz
fiadds
ljmp
adc
pop
xchg
or
test
push
dec
inc
pop
iret
push
xor
repnz
sub
mov
mov
aam
mov
adc
mov
mov
in
pop
pop
xorb
push
mov
inc
fs
insb
movsl
push
or
jp
push
ljmp
mov
sub
scas
inc
mov
loop
push
repz
push
xor
sbb
lret
inc
int3
loopne
rorb
in
movsb
inc
stc
nop
ljmp
adc
ds
cltd
out
repz
inc
rcrb
adc
das
sub
jno
mov
adc
enter
icebp
push
fnstcw
push
fmull
mov
cltd
jge
mov
jo
push
mov
inc
jns
repz
mov
int3
pop
and
cmp
cli
jl
mov
and
movsl
hlt
sbb
movsl
in
sub
out
cmpsb
repz
jmp
out
fildll
mov
mov
outsb
jbe
sahf
orb
push
lods
inc
push
pop
faddl
lret
sub
mov
mov
rolb
add
xorb
in
addb
jo
inc
rcll
mov
sbb
int3
and
popf
xor
daa
add
fistpl
dec
mov
jno
decb
add
mov
lds
addr16
mov
pop
pop
cmp
outsb
push
mov
jnp
pop
and
xchg
and
orl
rorb
sti
mov
mul
jnp
scas
xchg
in
cli
ficoms
add
fidivrl
enter
rol
pop
or
inc
push
xchg
xlat
es
mov
and
sub
xor
mov
cmp
fiadds
movsl
cmp
cmp
int3
xchg
jecxz
inc
roll
push
pop
xchg
fisttps
and
pop
add
mov
jecxz
xchg
test
cld
aam
adc
aas
ja
fisttpll
pushf
cmp
lods
insb
stos
sbbl
mov
scas
out
adc
pop
repz
int
stos
adc
mov
mov
mov
pop
jb
push
adc
pushf
pop
mov
sub
sbb
inc
pop
lcall
xchg
and
out
mov
popf
int3
cmpsb
movb
arpl
inc
push
mov
jae
insl
sbb
cmp
loope
mov
xorb
and
aam
adc
jmp
call
in
add
outsb
cmp
xchg
imulb
ret
out
xor
lds
loop
and
cmp
pop
jae
jbe
xor
ret
sti
lret
jmp
ficomps
mov
aam
imul
mov
pusha
dec
add
loopne
ljmp
xor
cltd
leave
rclb
sahf
ret
push
pop
or
lret
xor
adc
ss
loope
jp
dec
xor
jl
pusha
jl
sbb
sbb
mov
test
xchg
fmul
xor
and
sbb
adc
mov
fs
ret
mov
negl
ds
or
and
xchg
pop
xlat
mov
sbb
out
das
fcoml
lea
add
flds
inc
mov
add
shlb
rcll
addr16
inc
sbb
jecxz
and
rorl
push
cmpxchg
inc
test
shrl
xor
mov
push
rcrl
inc
call
repz
fisttps
or
jo
and
pop
adc
jns
test
jns,pn
rolb
cwtl
mov
fwait
push
xchg
aad
mov
kaddb
xchg
pop
cld
and
mov
popf
jno
adc
jmp
les
lods
sbb
lea
mov
xchg
sbb
daa
insl
std
imul
adc
insl
push
js
cmpsl
mov
mov
pop
out
pop
adc
ret
add
mov
les
sbb
jnp
add
pop
adc
xchg
ret
mov
icebp
cs
xchg
sbb
aas
pop
xor
stc
cmp
nop
ljmp
mov
xchg
dec
pusha
ljmp
push
fidivrs
and
fcoml
adcl
dec
es
movsb
inc
lock
lea
dec
shr
iret
aas
call
cmp
mov
or
sub
iret
jl
lds
inc
gs
lcall
mov
roll
negb
jmp
int3
sarl
les
jb
xlat
pop
xchg
mov
lock
lret
pop
out
push
sti
decb
out
outsl
mov
idivl
pop
je
inc
cmp
in
pop
pop
sub
insl
stos
push
out
mov
and
mov
jns
mov
push
mov
clc
cli
dec
push
jg
inc
xor
gs
orl
leave
mov
orb
jne
xor
adc
test
ss
jmp
cmp
out
inc
lods
out
xor
out
arpl
xchg
out
adc
xchg
add
outsb
lock
inc
js
inc
or
mov
fisttps
cltd
mov
push
cmp
adc
sub
or
mov
mov
and
xchg
dec
push
add
mov
mov
lock
sub
imul
idiv
sbb
xor
fildll
pop
pop
dec
mov
sub
sub
xchg
aam
rcr
mov
scas
sub
mov
xchg
into
mov
jns
inc
call
jecxz
xor
scas
gs
jl
lret
fildl
pop
xchg
push
stos
loope
or
jge
fldt
aam
sti
sbb
add
dec
sub
mov
lret
nop
lahf
jp
mov
mov
cmpsb
inc
or
inc
add
es
jno
scas
movsb
sti
fidivrl
mov
sti
xorb
addr16
cli
bound
test
out
mov
mov
and
gs
lods
enter
fmuls
fcomps
mov
imul
xor
arpl
inc
test
add
inc
aad
cli
cmp
jb
sub
mov
jl
fdivrs
cmp
mov
mov
add
iret
or
jbe
xor
out
inc
cld
in
xchg
adc
sbbl
jecxz
inc
dec
arpl
jbe
dec
mov
sbbl
dec
or
mov
push
cmp
icebp
cmp
mov
add
sbb
into
stos
call
movsl
or
nop
add
ja
mov
push
push
sbb
jecxz
icebp
das
fistpll
add
jp
pop
xchg
sbb
mov
enter
scas
mov
mov
xor
dec
or
mov
lods
mov
outsl
popa
enter
imul
cmpsl
in
movsb
rorl
test
stos
mov
jp
popf
cmpsb
orl
push
mov
pop
loope
iret
cmp
dec
mov
mov
clc
hlt
sub
sbb
test
enter
adc
mov
shr
xchg
pop
dec
out
mov
in
daa
fsts
testl
cmpl
xor
mov
pop
adc
fcomi
cmpsb
pop
cmp
ljmp
push
in
mov
sbb
cwtl
repz
dec
pop
nop
pop
inc
jns
cmc
lahf
movups
outsb
cmovp
movsl
fisubrl
subb
inc
mov
mov
jge
mov
jae
cmpl
insb
pop
or
push
mov
insl
jae
inc
insb
test
addb
mov
xchg
pop
movl
loope
es
and
clc
xor
mov
sub
xchg
scas
adc
add
pop
stos
inc
mov
cs
ds
cli
jb
jp
scas
popf
imul
imul
xor
pop
aas
outsb
mov
flds
mov
inc
jne
sbb
mov
sub
jno
mov
mov
mov
inc
mov
in
and
push
push
push
pusha
je
pop
mov
pop
cltd
push
adc
mov
repz
lea
xor
shll
mov
or
mov
adc
movlps
xchg
sahf
ret
or
mov
fcompl
es
push
fcompl
jnp
out
push
mov
push
add
in
test
add
cld
xor
jne
movsb
loope
push
sub
out
imul
dec
and
ja
ret
push
inc
pusha
in
dec
vpsrlq
xor
dec
mov
mov
mov
adc
loope
jno
add
int3
push
iret
xor
sahf
clc
pop
sub
mov
ficoml
insb
sbb
pop
lret
lcall
rcrb
rcrb
pop
lock
pop
test
fsubrl
pop
xor
pop
push
adc
fisubrl
pop
fnsave
adc
lahf
push
mov
mov
mov
sti
leave
cmp
aas
xchg
xor
int3
adc
int3
dec
call
ret
std
cwtl
push
jle
and
xorb
call
andl
cmc
push
ja
or
push
out
sbb
jl
jl
mov
mov
or
mov
rcrl
mov
xchg
inc
lea
or
inc
and
popf
sbb
andb
in
inc
ljmp
mov
inc
imul
jnp
sub
int3
int3
dec
clc
jg
mov
mov
push
sub
and
enter
xor
lods
clc
fdivr
aaa
pop
xor
insl
popf
inc
arpl
stc
and
mov
je
lcall
adc
inc
out
mov
test
add
negl
mov
data16
add
add
xchg
mov
inc
cmpsb
pop
data16
mov
jns
xchg
adc
jns
je
js
push
pop
call
jle
mov
inc
fisttps
cmp
xchg
dec
push
leave
sub
ficoms
fstpl
das
int3
pop
popf
iret
insl
out
jns
mov
cmpsb
int
test
inc
aaa
mov
dec
insl
in
cmp
pop
into
push
lahf
test
cli
sbb
leave
fcomip
std
adc
jge
mov
mov
sub
test
fimull
dec
dec
mov
adc
mov
xor
fildl
pop
fimuls
inc
pop
jno
movsl
adc
pop
lds
scas
movsl
jle
push
sbb
rcr
mov
jp
sub
fwait
iret
sub
pop
push
or
lahf
stc
mov
jb
fadds
lods
cmp
out
mov
mov
mov
inc
push
jecxz
lods
push
and
cmp
data16
jmp
jmp
loope
sub
sbb
dec
rolb
je
inc
insb
lret
xchg
aad
mov
aas
es
repz
rcrb
stc
or
ja
std
xchg
sub
into
test
mov
imul
dec
adc
cmp
in
imul
adc
inc
lcall
push
outsl
cmp
cmp
test
xchg
dec
subb
cld
loope
xchg
xlat
mov
cmp
aam
dec
and
cmp
xor
dec
sub
ds
inc
mov
test
aam
popa
jns
push
cmp
mov
and
adc
mov
ss
call
addr16
add
sub
pop
lods
inc
cltd
je
xchg
sub
leave
addr16
fwait
lods
adc
in
loopne
aad
fnstsw
in
inc
cmpsl
loop
cmp
jb
xchg
jno
rcrl
test
and
cmp
es
xchg
jge
mov
push
dec
adc
push
dec
dec
xor
mov
aam
inc
mov
ret
mov
in
dec
sub
out
xchg
popf
xor
mov
mov
shll
icebp
or
jnp
fsub
mov
stos
xchg
aam
mov
into
out
cld
int3
mov
pop
pushf
cs
mov
xchg
aaa
mov
jae
iret
sbb
push
fcoml
ja
jnp
inc
lods
xor
shll
dec
push
pop
insl
cmp
mov
cmp
xchg
fwait
xlat
push
or
mov
adc
clc
repz
and
dec
sub
add
sbb
adc
ret
push
flds
jg
adc
testl
in
jle
mov
fstps
je
roll
pushf
dec
mov
scas
mov
mov
jmp
movsb
fistpl
cmp
mov
push
mov
mov
mov
mov
adc
fisubrl
outsl
adcb
mov
outsb
pusha
xchg
mov
xlat
jae
out
xor
mov
jb
xor
jle
or
outsl
and
push
out
sub
jecxz
xor
mov
or
inc
pop
aam
scas
fmuls
dec
mov
frstor
sbb
cld
adc
enter
mov
movsl
gs
ret
stc
mov
gs
mov
stos
imul
sahf
jne
sub
xchg
jle
andb
cld
inc
push
gs
cli
dec
push
jo
loop
sbb
mov
mov
xchg
leave
dec
or
dec
mov
les
ret
test
sub
jmp
add
repnz
fidivrl
sbb
int
and
mov
cmp
arpl
mov
xchg
es
adc
adc
in
out
mov
push
sbbl
sub
mov
push
lock
fisttps
inc
xchg
push
lods
xor
xadd
pop
cmp
enter
andb
and
jle
ja
hlt
and
rcl
xchg
fwait
ljmp
leave
xor
push
fdivr
push
subl
sbb
adcb
pusha
pop
xor
or
or
fcmove
jno
add
adc
cld
cwtl
das
cmp
hlt
lock
jge
dec
push
sbb
cmp
add
je
push
movd
sbb
shl
xor
cltd
dec
ret
int
cmpsb
push
cld
cmp
enter
fidivrl
rolb
and
jmp
xchg
push
xor
xchg
pop
pushf
outsl
aam
dec
sub
imul
and
cmc
push
push
xlat
data16
fcomip
hlt
add
cmp
pop
aad
push
je
jl
push
xchg
xor
xor
jb
xor
jnp
scas
loopne
shll
adcb
aam
jnp
nop
sbb
inc
dec
jnp
enter
and
push
loope
cli
int
and
jns
add
pushf
outsb
ljmp
sahf
rclb
icebp
cmp
test
fists
lods
aad
cltd
pop
aas
ret
cld
pop
cld
lods
les
fldl
mov
mov
call
push
xor
fdivrs
clc
mov
pop
or
and
clc
sbb
mov
hlt
xchg
inc
xor
sub
popa
test
jnp
addr16
mov
aam
adc
dec
ljmp
hlt
jae
in
notl
aam
sub
mov
adc
cmp
and
push
lods
sub
and
add
imul
inc
std
bound
dec
scas
jb
fwait
lcall
lret
cmp
sbbb
leave
daa
jo
sbb
or
mov
push
mov
out
aam
stc
dec
xchg
push
insl
pop
xchg
icebp
pop
addr16
jno
out
aam
jmp
sbbl
outsb
add
imul
dec
rclb
jl
mov
mov
ds
or
mov
into
out
and
call
ja
pop
lahf
fcoms
mov
xchg
sbb
adc
mov
cmp
sbb
add
jecxz
ret
jl
scas
add
adc
and
cmp
or
add
mov
or
rcll
mov
sarl
or
jp
mov
push
lret
out
dec
jae
xor
arpl
lret
pop
ret
popf
les
inc
loopne
ljmp
xor
xor
das
jbe
sub
mov
xchg
jge
xlat
divl
dec
mov
repz
stos
lahf
hlt
icebp
xchg
iret
std
jg
fisubrs
pusha
mov
loop
mov
lods
xor
pop
fsts
mov
fwait
stos
mov
stos
mov
in
lock
mov
sub
scas
ljmp
mov
pop
push
push
sahf
lods
int
cmp
adc
test
mov
xchg
xchg
inc
push
mov
mov
repz
int
leave
xor
add
jbe
push
out
nop
rcr
adc
sbb
idivl
inc
jecxz
cs
mov
or
pop
loopne
mov
xchg
pusha
out
pusha
jae
ret
cmp
mov
xchg
fnstsw
cmpl
jp
xor
adc
xchg
jmp
pop
pusha
mov
dec
into
mov
adc
mov
pop
sub
dec
jb
clc
mov
inc
scas
dec
mov
xor
push
out
and
inc
inc
aam
jecxz
adc
mov
out
mov
mov
cmp
push
jae
sbb
daa
test
outsb
in
stc
sbb
xor
addr16
pandn
int3
sbb
push
xchg
or
push
lret
fdivrs
pusha
lock
stos
and
sub
js
cmpsb
lock
fmull
jle
cli
cmp
icebp
addr16
add
ja
out
add
xor
inc
mov
dec
ret
fsub
out
icebp
pop
mov
pop
outsb
jno
mov
ret
loopne
gs
cwtl
mov
inc
add
add
je
hlt
pushf
xchg
mov
mov
nop
push
inc
inc
ljmp
sub
dec
lahf
xlat
stos
or
xor
ror
shrb
jo
mov
sub
bound
aaa
imul
daa
or
mov
pusha
pop
sbb
mov
mov
ret
jg
cmp
insb
sbb
lret
dec
adc
out
xor
pop
cmp
fcmovnb
out
data16
cmpl
cltd
jo
dec
aas
movsb
fcmovnbe
adc
pop
rcrl
cwtl
jns
mov
jl
mov
mov
jge
lea
daa
lret
add
cmp
pop
jnp
daa
xchg
data16
mov
push
rcr
pop
std
xor
shrb
shll
test
or
xchg
and
jg
cmp
cmp
lret
push
popa
cwtl
out
rorl
add
inc
dec
xchg
stos
push
scas
imul
add
jmp
outsb
out
cltd
aad
pop
push
or
shll
testb
sbb
sbb
andl
or
pop
stos
sti
cmp
xor
push
add
fwait
pushf
xorl
out
pop
mov
ljmp
stc
cmc
call
mov
pushf
cmp
adc
xchg
aam
fwait
sarl
decb
fsubrl
lds
cmp
pop
insb
fists
mov
mov
out
and
inc
icebp
push
pop
dec
dec
mov
sub
data16
popf
push
in
xchg
inc
push
jnp
or
movsl
mov
mov
fstl
mov
scas
sub
mov
pop
sub
lods
mov
add
dec
xor
or
jne
mov
dec
mov
jle
ljmp
xor
xchg
add
cmpxchg
dec
mov
mov
ja
dec
cli
push
cmp
xor
push
lods
pop
rclb
xor
push
fs
xchg
or
cli
pusha
add
inc
add
fwait
mov
cmp
stc
cmpsb
dec
sbb
cmc
inc
cmp
lret
jecxz
daa
scas
push
mov
mov
adc
stos
sub
adc
add
nop
cmpsl
push
je
stos
xor
ficoml
cld
bound
popf
mov
out
pop
mov
nop
xchg
pop
stc
mov
jb
add
cmpb
and
push
ret
push
stos
inc
xor
jb
lahf
js
out
repnz
inc
cli
sbb
mov
and
outsb
int3
fidivrs
push
aad
pop
lret
pop
in
pop
lahf
cmpl
xor
xchg
and
push
call
repz
outsl
lock
xor
push
in
xor
xor
adc
bound
std
insl
movsl
ja
xchg
lods
xorl
test
orb
or
xchg
jno
cltd
cmpb
cltd
sbb
decl
jno
inc
stc
ret
sub
shl
pushf
and
adc
pop
jo
sub
mov
cmovae
mov
mov
cmc
shl
mov
and
adc
inc
cs
sub
iret
pusha
cmpsl
sbb
inc
pop
sbb
negb
mov
fsubrs
ret
cltd
lds
hlt
and
adc
into
xchg
xor
sti
cwtl
or
mov
fsubrs
fs
sbb
aas
roll
pop
and
mov
int3
shll
ja
jmp
int3
inc
arpl
popa
jecxz
fisttpll
cld
cmp
mov
cs
sbb
fcom
adc
xor
dec
or
sahf
arpl
sub
and
mov
pop
mov
sbb
mov
pop
sub
fcmovnb
fnstenv
ds
push
lret
es
repnz
dec
pop
push
ss
sbb
repz
add
add
inc
fdivrl
popf
out
mov
lcall
jbe
jae
xor
cld
ds
sub
pop
hlt
notb
jmp
inc
in
mov
pop
jp
fimuls
push
inc
in
cli
mov
or
adc
mov
ficompl
insl
xchg
adc
and
mov
mov
insl
xchg
loopne
mov
xlat
add
fndisi(8087
andb
push
je
mov
cli
cmp
popa
push
loope
mov
aad
mov
xchg
adc
rcll
sbb
push
loop
je
test
ret
outsl
inc
sbbl
jle
stos
loope
mov
push
ret
outsl
add
xlat
cmp
inc
movsb
lahf
popl
cld
mov
mov
stc
out
lret
ficompl
dec
and
repnz
lcall
xchg
fiaddl
aas
jne
add
mov
leave
lret
cs
add
adc
jno
repz
push
pop
fdivrl
jbe
fcoml
cld
aas
outsl
enter
jmp
jmp
mov
into
mov
das
arpl
shrb
inc
mov
push
jle,pt
and
pop
xchg
outsb
cs
push
rol
js
popa
jns
daa
or
insb
adc
movl
mov
jmp
mov
cmpsb
dec
roll
mov
xchg
or
test
xor
dec
in
test
daa
push
mov
movsl
xor
push
dec
cmc
pop
lea
push
mov
cwtl
shlb
push
mov
sub
insb
ret
mov
mov
mov
lahf
pop
pop
jge
ljmp
stc
dec
xor
cmp
scas
xchg
adc
aam
test
imul
pop
lret
sti
outsl
popf
xor
jp
cld
into
dec
mov
adc
mov
inc
aas
stos
xchg
shlb
jp
mov
fs
paddq
ret
mov
mov
and
ja
mov
cmp
loopne
inc
mov
and
mov
dec
fwait
in
pusha
pusha
inc
movb
and
bound
mov
stos
loope
push
sub
dec
pavgw
jl
sub
out
addl
subl
add
pop
addr16
movsb
add
insl
adc
or
aam
xchg
fidivs
imul
popf
lcall
cltd
inc
push
pop
xchg
pop
cwtl
dec
js
jge
sub
or
test
dec
sar
sahf
adc
insb
test
pusha
shll
and
adc
add
xchg
inc
das
lcall
ret
hlt
push
sub
subb
inc
aam
subb
enter
insb
fistpl
pop
addr16
add
jl
je
mov
bound
sub
lret
sarb
mov
mov
dec
je
push
mov
xchg
add
and
jmp
movsb
icebp
movsl
stc
into
mov
loop
in
leave
jo
int3
test
pop
aas
inc
in
nop
mov
and
movsb
mov
inc
imul
loopne
cwtl
shlb
fwait
add
inc
or
xchg
jns
sbb
repz
bswap
in
push
add
arpl
popa
sub
add
mov
mov
dec
js
hlt
jle
lret
call
sbb
cmp
test
sbb
andl
test
imul
and
call
shlb
mov
movsl
mov
fwait
mov
adc
ss
lds
test
mov
pop
pop
or
xor
jne
xor
loopne
popa
cmpsl
push
mov
iret
mov
fstpl
mov
mov
xor
cmp
jp
push
in
loop
les
xchg
mov
lds
mov
mov
jo
push
lret
mov
dec
cmc
test
cmp
push
rcll
mov
int
mov
popa
or
cltd
enter
jp
or
insb
pop
mov
in
stc
jne
adc
lcall
repnz
xchg
mov
push
and
movsl
add
push
orb
out
cmp
ret
xlat
mov
cs
mov
inc
call
movsl
rorl
gs
pop
mov
mov
stos
insl
sub
fld
jg
jge
loop
lretw
pop
mov
adc
das
test
je
in
andb
xchg
dec
insb
in
inc
fwait
jns
insb
data16
add
xchg
orl
lret
lea
mov
pop
inc
in
add
mov
in
sub
stc
shr
push
ljmp
in
push
mov
sbb
icebp
clc
mov
xor
or
jo
outsl
movsb
push
mov
outsb
les
int
mov
arpl
mov
mov
cwtl
ss
sbb
mov
js
mov
inc
mov
mov
pop
add
lcall
idivl
mov
cltd
push
cmp
mov
jecxz
popf
arpl
add
nop
sub
test
mov
adc
call
mov
je
pop
loop
pop
mov
mov
sbb
sarl
dec
xchg
push
mov
add
jbe
jge
inc
je
push
movsl
mul
add
sbb
cwtl
daa
movsb
into
pop
sbbl
loopne
imul
push
pop
insb
mov
fwait
daa
mov
push
mov
cmc
mov
push
das
cmp
or
sbb
mov
and
mov
lret
repnz
jns
or
aam
or
lcall
sti
jns
int
movsl
jns
cs
adc
loop
aam
cmp
mov
sahf
sahf
dec
mov
ret
push
out
sub
pop
sub
fnop
roll
pop
in
push
pop
jmp
insb
mov
loopne
aas
mov
inc
push
in
jg
cmp
or
gs
mov
mov
sbb
dec
pop
enter
mov
fwait
push
push
shll
push
xchg
jge
sbb
lods
jae
mov
adc
adc
test
dec
aam
xlat
xor
dec
and
mov
dec
jno
jno
inc
mov
and
xor
add
lret
mov
in
push
jne
lahf
jp
xor
pop
movsl
jge
mov
sub
inc
int3
jnp
jnp
pop
loope
sub
mov
test
mov
xchg
xchg
inc
shr
xor
jg
ret
fwait
and
mov
pushf
sbb
dec
cltd
test
or
xchg
popa
clc
pop
fistps
fcomip
iret
xlat
pop
sbb
cld
or
sbb
xor
mov
jae
xor
mov
into
mov
xlat
gs
insb
sub
fucomip
xlat
ret
mov
fisttpl
ror
fmull
and
inc
and
hlt
lret
out
aaa
mov
dec
dec
repnz
push
enter
sbb
repnz
jo
cli
dec
inc
aaa
rcrb
scas
jmp
pop
push
mov
jecxz
ljmp
out
inc
je
add
outsb
out
lock
push
sub
inc
adc
das
dec
push
movsb
push
rcrb
dec
rol
dec
gs
mov
jl
inc
jae
push
fsubr
ret
int3
cmc
add
cmp
mov
mov
xlat
les
mov
cmp
js
push
psubb
sub
adc
jns
xor
or
cltd
pop
sbb
xchg
clc
and
jle
loopw
dec
xchg
lret
mov
lock
fisubl
cmp
sti
or
cwtl
push
sub
sti
jge
push
repz
movsb
push
fsubl
gs
lret
push
mov
loope
dec
lahf
js
and
imul
inc
fimuls
orb
imul
rcr
outsb
and
das
jne
xchg
mov
sti
pop
add
lahf
rcll
imul
mov
pusha
push
sub
sbb
jae
cmpsb
cmc
fwait
jbe
and
dec
pushf
push
jg
ja
ret
inc
mov
pop
insb
mov
aas
sub
repnz
xor
inc
and
inc
out
mov
sub
stos
clc
movsb
sub
test
xor
or
fsubr
push
rcll
movsl
test
int
xor
bound
cmp
ret
jle
arpl
cld
adc
cli
jmp
sub
ds
push
add
les
adc
dec
ret
inc
inc
jo
ror
outsl
das
scas
jae
iret
aad
cmc
mov
rorb
addr16
cwtl
push
fstl
push
push
adc
subl
cli
add
cltd
std
hlt
sub
fwait
daa
mov
cmp
mov
xchg
iret
ficompl
xchg
outsl
sbb
fwait
adc
mov
enter
jnp
inc
loope
cmp
jo
and
inc
out
or
push
inc
xor
mov
jmp
in
xchg
adc
cmpsl
je
mov
cmpsl
mov
mov
lods
pusha
and
inc
adc
pop
js
xchg
and
aas
jl
ja
jbe
lahf
adc
in
xchg
dec
jle
mov
lds
push
mov
inc
js
clc
adc
xor
add
lods
jmp
lds
jno
inc
je
mov
ja
divps
sbb
pop
push
pop
ficompl
in
xchg
mov
dec
les
xor
gs
in
sti
dec
aaa
add
mov
inc
sarl
adc
push
cltd
test
test
push
scas
loopne
xchg
dec
xor
fadds
push
lods
bound
out
mov
jnp
enter
add
xchg
loope
adc
lahf
and
fwait
rcll
loop
cwtl
cli
push
sub
ljmp
js
mov
test
add
push
mov
add
mov
nop
pushf
push
aad
push
scas
in
mov
loopne
push
dec
pop
mov
add
pop
push
mov
xor
xchg
cmc
jg
pop
adcb
add
imul
add
cwtl
pop
mov
xchg
mov
out
mov
data16
inc
dec
lds
cld
daa
ret
icebp
out
push
xchg
test
and
mov
lods
cwtl
sbb
cmp
mov
notb
mov
push
adc
pop
outsl
inc
lret
dec
jbe
push
popf
scas
pop
fwait
add
xor
into
dec
sarl
pop
lods
sbb
mov
mov
or
adc
out
dec
mov
push
dec
mov
js
xlat
sub
negl
fs
arpl
test
aad
push
lahf
imul
rolb
out
sub
jle
dec
insb
stc
clc
pusha
arpl
jge
sub
loop
or
lretw
pusha
push
test
xchg
mov
in
iret
shlb
fnstcw
fidivrl
pop
lret
jp
stos
outsl
ror
pop
std
js
mov
jg
cmp
jbe
dec
dec
cmp
xor
pushf
and
outsl
outsb
pop
dec
push
aad
cmc
pop
stc
xlat
in
loopne
mov
jno
and
fsts
lock
jg
cmp
mov
mov
push
cltd
movsl
jb
dec
push
repz
sbb
sti
lahf
mov
mov
xor
mov
sbb
xor
sub
inc
rorb
hlt
xchg
fs
pop
sub
mov
inc
or
jg
stos
sbb
jl
insl
mov
xchg
vpshuflw
xchg
sarb
fisttpl
out
xchg
jns
jmp
push
sub
sti
aad
outsb
and
in
idivl
lret
push
stos
fnstcw
pop
int
arpl
or
test
mov
adc
inc
hlt
inc
adc
pop
pop
call
imul
leave
cli
dec
fists
pop
sub
in
mov
rorl
gs
fbld
call
out
daa
in
or
sub
jns
and
mov
xor
imul
int3
andl
dec
subb
sbb
rorl
test
in
lret
xor
movsl
inc
jnp
xchg
xor
arpl
add
mov
pop
test
jo
test
lret
ret
je
fnstsw
or
adc
adc
popa
sub
xor
mov
cld
inc
cld
pop
push
jmp
sub
mov
inc
fisubl
in
mov
push
ret
mov
shll
push
dec
lock
adc
and
je
or
or
xchg
or
sub
mov
jl
xchg
andl
or
mov
inc
lcall
data16
dec
inc
test
push
pop
mov
mov
iret
push
cmp
inc
lea
rol
push
adcb
push
mov
jp
mov
fcmove
scas
lods
inc
pop
stos
shl
pop
shrb
xchg
ret
xor
mov
pop
adc
push
xor
pop
inc
xor
xchg
inc
xchg
subl
outsl
mov
cmc
call
xor
test
mov
cltd
jmp
cmp
add
add
insl
pop
sti
hlt
xchg
xchg
mov
mov
sbb
sub
lret
mov
jle
adc
sti
dec
inc
sub
int3
xor
add
mov
dec
sbb
dec
pop
jbe
je
addr16
mov
xor
fistpl
mov
lods
sbb
pop
mov
jecxz
sbbl
mov
mov
inc
push
push
ss
xchg
iret
push
mov
pop
faddl
jmp
adc
mov
add
cmp
sub
in
clc
sti
jmp
xchg
out
and
or
mov
push
pop
adc
push
lcall
cmp
sbb
lock
lds
push
inc
pop
int3
add
dec
stos
stc
repz
leave
inc
and
addr16
das
fistps
test
dec
mov
xor
fdivrs
pop
lahf
xor
inc
inc
loopne
sbb
pop
pop
xchg
incb
cmp
cmp
movl
test
inc
mov
shl
xchg
and
push
popa
imul
andl
std
push
inc
pop
dec
add
mov
sarb
jns
pop
xchg
mov
lahf
stos
mov
dec
inc
pop
xchg
push
scas
mov
sub
daa
sub
leave
lea
and
ror
push
sub
jg
push
mov
aaa
imul
mov
ret
popa
add
mov
negl
adc
dec
pop
repz
xchg
jbe
mov
outsl
push
lahf
push
out
xchg
xchg
xchg
sti
data16
sbb
xor
stos
and
jb
test
mov
sbb
mov
pop
dec
and
shrl
add
test
add
shll
insb
or
jl
cmp
fmull
test
sub
push
sub
movb
dec
adc
repz
ficoml
popf
xlat
pop
repnz
dec
mov
out
gs
dec
aad
test
mov
loop
lods
fs
aad
or
and
and
jmp
jge
lock
cmp
push
or
ret
lock
xor
mov
aas
adc
jle
xchg
xor
push
js
dec
fimuls
movsl
cmp
adc
inc
icebp
popf
jb
in
xchg
and
pop
push
sbb
hlt
es
sub
and
xor
pop
aam
mov
call
mov
out
pextrw
xor
adc
mov
pop
mov
and
int3
shrb
cmpsl
push
imul
rep
sbb
pushf
movsl
mov
adcl
shrl
lahf
sub
dec
cmp
aas
mov
fwait
pushf
dec
push
mov
mov
jne
lret
pusha
test
mov
mov
add
in
in
pop
push
sbb
ds
and
dec
xor
ficoms
cmpl
adc
femms
add
ja
test
and
adc
sbb
dec
sti
shr
mov
mov
add
fcoml
mov
mov
mov
or
testl
notb
jle
add
mov
pop
loopne
enter
cli
cld
or
add
pop
ljmp
pushf
jl
mov
sub
pop
push
icebp
cmp
jne
jl
or
jne
fldcw
cs
test
pop
jp
jle
repnz
in
add
push
xor
pusha
repz
add
fs
adc
sub
hlt
sarl
push
xchg
fwait
popf
lock
mov
xor
add
mov
mov
mov
clc
sub
ret
inc
ds
out
xor
test
call
xchg
cmpsl
cs
pusha
out
and
mov
jbe
cli
inc
lods
cmc
pop
jb
iret
nop
and
outsb
sub
mov
pop
cltd
mov
shrb
jge
mov
pop
mov
std
jbe
subb
fisubs
jge
lret
xor
fistpl
push
fcomps
jl
push
adc
ffree
sbb
jae
inc
stos
mov
or
push
aas
dec
cmp
fs
sti
dec
aam
cmpsl
ret
jo
stc
pop
dec
movsb
sbb
jo
mov
mov
fadd
fwait
xchg
inc
add
outsb
mov
xchg
cmp
jo
and
sahf
push
rcr
sub
adcl
push
test
add
push
or
enter
hlt
sbb
iret
push
jno
testb
out
mov
jne
stos
lock
cmp
inc
cmp
insl
push
push
push
js
inc
xor
or
dec
aas
mov
in
and
lds
adc
dec
enter
imul
xchg
pop
pop
in
xor
mov
cwtl
push
and
ret
test
icebp
mov
push
aad
aaa
loopne
fistpl
pusha
xchg
sub
clc
lcall
lcall
mov
inc
insb
cltd
sub
cmpsl
mov
gs
pop
int3
cmp
rolb
mov
adc
ljmp
cmp
insb
jbe
jmp
push
jmp
std
dec
sar
xor
mov
scas
addr16
loop
jns
dec
jp
test
lock
ja
cmp
sbb
testl
xor
js
inc
sbb
or
adc
push
pop
dec
mov
pop
stc
rorl
xchg
stc
xor
mov
std
leave
xor
jnp
mov
jmp
mov
and
add
ret
mov
inc
xor
ror
xchg
xchg
dec
pop
mov
arpl
xor
pop
sbbb
inc
sub
push
pop
xor
test
divl
and
and
out
mov
xor
xor
adc
rep
mov
es
sahf
pop
or
dec
inc
jno
mov
or
out
cli
call
adcl
inc
sti
out
leave
sarb
ficomps
out
push
mov
mov
inc
imul
test
frstor
repz
jo
jg
pop
test
cmp
int
push
add
out
lock
cmpsb
repz
mov
arpl
rcrl
in
dec
sub
push
call
rorl
push
lods
test
push
add
jmp
cltd
or
jno
sti
mov
sub
cmpb
lods
testl
cli
jge
cs
test
mov
mov
jno
scas
pop
push
push
pusha
dec
fdivp
xor
push
sarb
int
outsb
dec
daa
popf
jmp
jmp
inc
enter
sbb
ror
scas
leave
mov
icebp
push
jmp
inc
iret
xor
imul
mov
push
push
and
sub
mov
inc
mov
fcmovu
lret
xchg
add
ds
in
divl
ss
xlat
repz
pop
mov
cmpb
js
jae
mov
mov
pop
xchg
mov
lret
test
and
arpl
sub
mov
je
pop
rcrl
inc
xchg
decb
inc
ret
dec
push
cld
jmp
dec
hlt
adc
outsl
lods
and
add
push
loope
sub
and
fwait
inc
insb
cmp
jecxz
and
add
cmp
adc
mov
fldl2e
dec
adc
ror
mov
mov
rorl
inc
pop
mov
push
lods
lret
rorl
ds
pop
enter
or
mov
in
mov
xchg
and
aas
lea
pusha
pop
mov
imulb
shll
pop
aaa
xor
lock
and
push
inc
aad
insb
mov
push
sbb
xchg
xor
mov
outsb
and
daa
mov
mov
data16
mov
jecxz
xchg
xchg
pop
and
mov
push
scas
imul
adc
push
inc
mov
jge
dec
in
fyl2x
and
je
daa
mov
ds
pop
add
adc
sub
ficoms
cwtl
dec
push
add
adc
and
movsbl
arpl
popf
cmp
and
leave
out
xchg
adc
sbb
stos
adc
adc
inc
add
pop
fcomps
leave
icebp
divl
cld
icebp
out
push
je
pop
aaa
pop
adc
cmp
mov
clc
ljmp
mov
sub
and
mov
icebp
cmp
daa
jnp
popf
jnp
lahf
push
jp
data16
cwtl
xor
add
out
pop
and
and
outsl
shll
mov
cmp
mov
je
push
or
dec
inc
jne
xchg
xor
js
loopne
jns
pop
sub
aam
pop
fwait
loop
testb
aas
cmp
movsl
mov
imul
xor
and
sub
xor
aas
popf
je
inc
int3
mov
sbb
repz
xchg
xchg
pop
lds
inc
pop
xor
subb
daa
sahf
jb
loop
mov
mov
scas
mov
and
mov
xchg
lods
fsubrl
pop
lret
pop
cmpxchg
inc
into
cmc
std
dec
movsb
pop
sarw
test
fadd
add
mov
pop
mov
mov
out
ja
aad
adc
lods
pop
dec
out
ja
nop
rcrl
mov
or
xor
push
jp
clc
mov
mov
push
add
loopne
inc
in
xchg
jno
int
push
mov
pop
add
clc
pop
popa
add
push
punpckhbw
int3
fnstcw
daa
faddl
cwtl
sbb
dec
pop
pusha
arpl
ja
dec
mov
adc
dec
rorb
int3
div
xor
mov
test
dec
jp
jno
aaa
xchg
pop
out
push
mov
sub
dec
stos
and
dec
out
mov
sbbb
xor
fwait
dec
mov
sbb
mov
mov
lahf
das
out
mov
push
pop
gs
aad
pop
sti
fwait
aas
jmp
xchg
call
pop
mov
aad
iret
jl
mov
fwait
imul
pop
sbb
jmp
or
and
insl
mov
rolb
add
in
cld
outsl
cmpsb
cmpsb
fistl
push
pushf
mov
or
fucomp
sub
shrb
testb
mov
push
push
in
push
mov
movsl
adc
xchg
std
and
xchg
pushf
divl
dec
pop
or
adc
popa
or
mov
or
test
mov
lds
fwait
pop
push
fcom
icebp
or
adc
jle
inc
xor
adcb
xlat
sub
not
mov
push
gs
vpmaddwd
inc
mov
jg
and
and
nop
add
pop
sbb
nop
add
je
vmread
mov
push
sti
mov
pop
in
inc
jg
into
insl
mov
movzwl
imul
adc
repnz
xchg
lea
mov
mov
aam
push
pop
push
inc
or
xlat
inc
push
inc
mov
lock
leave
jecxz
and
jmp
scas
push
sub
pop
addb
loopne
push
jae
mov
mov
imul
ficomps
movsl
mov
out
rclb
push
cmpsb
inc
outsb
xchg
inc
push
xchg
and
pop
dec
mov
ljmp
mov
inc
pop
pop
ret
scas
outsl
idivl
outsl
out
insl
les
push
cwtl
lods
lods
sub
mov
fsubr
cmp
hlt
daa
xchg
aam
pop
xorl
sbb
ds
sti
mov
pop
je
inc
add
shrw
out
cld
ss
cmp
adc
sarl
mov
jns
push
popa
mov
js
out
mov
call
jo
rcrb
repz
push
and
mov
push
jo
cmp
cmp
cmp
inc
push
add
mov
dec
shll
fmul
pop
lods
and
jb
mov
inc
add
cli
fbld
push
and
cmpsl
mov
aaa
nopl
cltd
mov
mov
pop
push
or
pop
jb
cmp
popf
pop
ds
xchg
push
xor
jne
sbb
adc
xor
mov
aaa
sbb
add
xor
mov
aad
aaa
cs
sub
xlat
in
dec
ja
ja
lea
sub
cmc
fimuls
jmp
cmpsb
dec
je
mov
jp
jmp
and
mov
rep
jmp
out
fmull
mov
cmpsb
fdivl
in
sbb
xchg
popa
inc
pop
outsb
jae
std
out
add
fcompl
xchg
xlat
mov
call
mov
mov
or
pop
scas
and
pop
adc
xchg
mov
inc
out
mov
push
mov
std
jge
movsl
shll
in
xor
in
pop
and
fstps
sahf
cld
in
sarb
pop
xor
jg
or
fcoml
inc
xor
mov
jmp
inc
bound
ljmp
jo
les
icebp
sbb
xchg
shll
stos
xor
pushf
fwait
mov
jb
and
lea
push
add
fists
pop
pop
loope
ja
jae
xor
jb
enter
insl
xlat
jge
mov
divl
insl
test
push
fdivs
rcrl
pop
orl
xor
and
out
mov
insb
jne
add
shll
jno
shr
xchg
adc
and
in
adc
lret
mov
inc
xchg
cmpsl
and
push
notl
inc
iret
push
xlat
pop
jb
push
add
imull
lret
rorl
mov
clc
xchg
mov
xlat
ja
cmpsb
inc
call
inc
into
pop
mov
fs
cmpsl
mov
imul
pop
pop
sbb
bound
add
push
and
jecxz
push
outsl
outsb
ja
push
mov
ss
jle
lret
mov
popf
add
inc
xor
orl
push
push
or
incb
dec
outsl
popf
mov
push
ljmp
jmp
xchg
sub
popa
mov
dec
les
mov
sbb
jg
xor
popa
jp
ret
mov
int3
insl
icebp
sbb
cmpsb
shr
inc
push
mov
testb
fisttps
add
push
cmp
ficompl
push
ret
in
or
add
lock
cmp
mov
mov
jo
arpl
ljmp
mulb
stos
mov
adc
fstps
fbstp
lret
mov
push
cmp
mov
arpl
insb
inc
fstps
js
imul
and
dec
adc
cmp
std
fcoms
inc
mov
pop
xor
repz
cltd
fs
bound
jbe
xlat
pop
push
mov
fisttpl
je
dec
cmpb
mov
je
and
inc
cmp
lret
dec
cmp
inc
push
shlb
lret
adc
fidivs
mov
loope
addr16
sub
cmp
sbb
pop
and
dec
daa
xchg
inc
and
stos
aam
fidivrl
pushf
in
mov
popf
fcmovnbe
gs
hlt
and
lds
cmpsl
sbb
sbb
jae
dec
mov
daa
loop
loope
lahf
and
add
mov
xchg
js
fildl
pop
movl
fdivl
stc
mov
push
ljmp
jns
es
xor
pop
dec
adc
scas
jae
ljmp
iret
std
mov
or
jmp
xchg
aaa
sti
int
xor
jb
iret
push
lcall
shll
or
mov
sbb
and
jecxz
ja
dec
lret
ret
sbb
push
inc
stc
jb
adc
bound
jbe
addr16
push
movsl
scas
std
aaa
jl
push
xchg
imul
jg
jge
notl
aam
cmp
jae
sub
outsl
cmp
rdpmc
cmc
sbb
rclb
jnp
lock
mov
push
imul
rorl
sub
or
pop
push
ds
bound
imul
mov
inc
mov
into
lcall
dec
sub
hlt
stos
scas
inc
sbb
test
and
xor
adc
out
mov
push
ja
xchg
and
sub
negb
mov
inc
out
xor
imul
ret
xor
inc
inc
adc
pushl
bound
dec
mov
cmp
ret
insl
mov
or
es
mov
stos
jge
int
jmp
pop
pop
sbb
jbe
ret
test
adc
cmp
ljmp
lods
dec
cmc
sarb
or
mov
mov
insb
jge
adc
push
xchg
shll
sbb
jne
enter
jns
cmp
les
add
dec
jle
fs
jecxz
xor
push
inc
add
arpl
repnz
pop
inc
rcrb
fsubl
mov
movsb
das
out
xchg
stos
adc
dec
jg
insl
in
aas
outsb
inc
enter
push
and
cld
fildl
mov
in
clc
ja
scas
pop
or
rolb
fcmovne
cmp
jnp
insb
pop
add
xor
dec
xchg
cld
jl
ljmp
out
adc
jg
fisubrs
inc
out
add
jne
sahf
test
repz
xchg
cli
inc
push
or
int3
mov
aaa
push
ret
mov
xor
or
jecxz
loopne
mov
sbb
je
ret
xchg
adc
shll
sbb
dec
pop
das
cs
sahf
inc
ja
sbb
jecxz
add
enter
insl
iret
nop
cmp
outsl
xchg
inc
outsl
mov
cmp
xor
aam
ret
in
fadds
sarl
cmp
xchg
dec
cmp
roll
push
mov
inc
push
loop
test
in
or
leave
mov
sub
scas
sbb
popf
into
inc
clc
jmp
push
mov
xor
push
adc
or
xlat
leave
ficoms
popf
loopne
out
movsb
pop
sti
fdivrs
push
push
mov
pop
sub
inc
inc
sti
inc
mov
ret
dec
jae
fdivs
mov
test
or
jp
dec
aam
fmull
rol
cld
dec
out
clc
and
sub
mov
fmulp
arpl
mov
mov
repnz
pop
leave
sub
jp
mov
dec
loopne
cmc
ds
mov
stos
jle
lds
ja
dec
arpl
movsb
repz
push
mov
xchg
add
mov
push
xchg
in
add
jecxz
mov
mov
out
shrb
hlt
into
cld
inc
pop
jmp
mov
mov
cmpb
mov
cmp
aam
lods
pop
xchg
jp
out
popa
mov
inc
cmpl
xchg
push
mov
cmpsl
and
int3
push
dec
jne
cmovnp
ds
loop
cmp
mov
filds
lea
fsubl
pop
sbb
aad
leave
inc
push
adc
stos
xor
aas
and
cmp
lcall
xor
lret
stos
dec
scas
lahf
aam
add
jbe
jo
mov
adc
test
int3
dec
imul
outsb
push
cmp
sub
nop
mov
scas
cld
lock
insl
addb
pusha
arpl
pop
dec
test
sahf
mov
sub
xchg
imul
push
inc
xchg
fs
movsb
rolb
addr16
or
sub
je
adc
and
adc
add
dec
fisubs
mov
push
push
in
cltd
and
mov
mov
int
pushf
xchg
cmp
js
push
jmp
or
rolb
ja
push
sbb
push
mov
or
mov
sbbl
in
cmp
int
ret
mov
std
mov
mov
add
mov
imul
inc
testl
in
adc
mov
fimuls
and
rcll
cmpsb
push
mov
cltd
fimull
sub
jns
xchg
pop
scas
dec
outsb
orb
stos
lods
dec
clc
inc
out
sbb
fst
fcompl
fwait
pushf
adc
mov
adcl
imul
sub
imul
cmp
data16
aad
mov
sub
sbb
fld
loopne
cmc
pop
push
je
movb
push
cli
pop
add
add
les
pop
add
idivb
cmpsb
jns
and
mov
loope
insl
out
pop
fmulp
frndint
enter
push
neg
or
or
add
jg
push
xchg
or
push
ljmp
jno
pop
inc
dec
sbbb
cmpsb
lahf
flds
push
scas
rcl
in
loope
scas
mov
fadd
das
js
push
xor
mov
add
push
mov
cltd
scas
movsb
bound
subl
std
iret
popf
adcb
lret
nop
call
inc
mov
or
push
dec
mov
daa
cli
pop
mov
pusha
aaa
push
fdiv
lds
loop
inc
pop
and
add
push
adcl
inc
pop
arpl
jo
cld
xor
dec
cmp
mov
sti
rol
cmp
call
aas
mov
sbb
push
ret
adc
mov
mov
mov
repnz
cmp
out
jecxz
and
sar
jne
xchg
pop
or
lods
and
lcall
cmp
outsb
inc
mov
stos
into
fdivl
mov
add
jne
xchg
bound
and
xor
fcmove
fidivrs
mov
xchg
repz
jp
cmp
scas
mov
and
xor
out
and
gs
adc
lock
fwait
cmp
fbstp
clc
add
mov
popa
jecxz
or
test
out
out
fildl
jbe
in
add
sub
jecxz
insl
adc
sbb
mov
aaa
ret
sub
sbb
cmc
mov
xchg
inc
rolb
data16
push
add
shll
dec
clc
xchg
mov
xor
andl
lods
fadd
movsl
inc
inc
fdivrp
xchg
std
cmp
mov
mulb
rorl
data16
push
push
dec
aaa
mov
pop
push
movsb
subl
pop
sbb
loop
jmp
xchg
fdivs
lcall
dec
push
outsb
cmpsb
sbb
stc
mov
fsub
push
xchg
sub
stos
stc
sub
clc
adc
xor
adc
jns
outsl
pop
scas
roll
negl
leave
fcmovne
adc
adc
mov
inc
sbb
add
xorb
lret
dec
cmp
rclb
pop
push
add
lea
gs
ja
std
lcall
fsts
push
into
sbb
jae
add
and
and
pop
lret
push
fyl2x
and
incb
in
hlt
out
in
add
fisubs
aam
sbb
adc
shll
mov
or
and
je
dec
pop
mov
jo
outsl
test
push
ret
xor
jg
and
fnsave
lods
aad
jb
fcmovne
push
adc
std
fwait
in
mov
std
out
push
imul
dec
enter
test
pop
dec
push
push
std
pop
and
call
xchg
mov
xor
test
iret
push
out
cmpb
mov
notl
or
mov
dec
lock
lahf
aas
xchg
addr16
idiv
sub
fdivrs
stos
imul
mov
inc
mov
scas
sbb
or
jmp
leave
outsb
inc
and
mulb
dec
sti
jmp
inc
jns
adc
ret
sub
cmpsb
jp
adc
or
bnd
jne
push
adc
dec
mov
inc
in
fdivp
dec
fwait
aad
cli
hlt
push
pop
pop
and
andl
aad
int
lcall
mov
insl
pop
shrl
dec
fdivs
mov
shll
or
adc
or
mov
ljmp
lds
mov
in
jp
stos
pushf
lods
adc
adc
aam
lahf
mov
out
dec
aaa
aaa
mov
mov
in
add
and
sub
sub
lock
in
push
inc
mov
inc
sbb
mov
das
repz
cltd
push
popa
push
fwait
sub
jecxz
jp
jle
ja
fsubr
and
add
stc
push
std
gs
int
dec
jmp
fstpl
inc
call
xor
adc
add
out
jae
jns
fwait
push
test
adc
imul
pop
lahf
pop
orb
adc
xor
pushf
pop
nop
sbb
in
xchg
imul
sbb
adc
jb
mov
mov
lods
movsl
inc
dec
mov
test
mov
xorb
aaa
push
outsb
and
mov
or
dec
sbb
loopne
scas
imul
sbb
cmp
insl
imul
scas
jnp
jle
daa
in
and
out
dec
add
sub
movsb
jo
fucomi
sub
xchg
setne
ret
leave
sahf
cmpsl
icebp
mov
rorl
add
cltd
sti
into
scas
insl
adc
sbb
pop
loop
sub
adc
arpl
mov
lock
xchg
push
sbb
jmp
sahf
xor
cmpsb
mov
push
aas
cmp
or
xor
sub
lds
mov
icebp
push
mov
xor
xor
in
pop
rcrl
movl
cmpsb
sbb
jno
es
repz
lret
mov
or
dec
pop
pop
push
arpl
js
mov
cs
shlb
dec
pusha
mov
dec
mov
scas
jl
dec
add
cs
inc
cmp
mov
or
ds
faddl
pop
xchg
jp
pop
aam
out
push
orb
xchg
outsb
frstor
sti
pop
mov
mov
cwtl
inc
loope
outsl
or
xchg
js
inc
in
dec
mov
add
test
out
mov
fiaddl
xchg
jecxz
sar
aaa
xchg
ret
das
imul
or
andb
mov
insb
push
add
xor
pushf
insl
stc
pop
xchg
jg
je
or
das
push
add
cmpsl
pop
fmuls
repz
aas
popa
xor
xchg
arpl
sbbb
inc
incl
pop
xchg
ret
fbstp
jne
mov
daa
or
ds
and
xchg
inc
cmp
insl
mov
inc
xchg
mov
loop
imul
addb
pop
push
sbb
jo
jne
stos
stos
mov
cmp
popf
xor
add
adc
or
iret
jne
push
jbe
adc
repz
shrd
push
clc
cmp
xor
lds
int3
pop
fsubs
inc
pop
adc
call
repz
sbb
fcmovnb
mov
in
ljmp
inc
jb
pop
ret
test
int
test
xchg
pop
aam
jbe
jb
pop
jbe
test
in
daa
dec
into
lcall
fmul
xor
jnp
push
mov
push
lods
out
outsb
dec
inc
dec
sbb
mov
leave
cltd
imul
cmp
pop
or
shlb
out
inc
aam
inc
shl
xor
icebp
pop
int
cmp
jge
ss
movsb
decb
iret
aam
lds
aaa
clc
pop
das
inc
pop
in
adc
outsb
sbb
xor
fisttpll
jno
jge
sti
mov
hlt
push
enter
testl
iret
ficompl
push
push
pop
std
mov
mov
mov
xor
cmpsl
jno
fadds
enter
pop
xchg
repnz
daa
pop
stc
das
xor
cmc
sub
sub
leave
cld
stos
mov
out
std
repz
ss
mov
les
aad
shlb
cltd
xor
fcoml
mov
movsw
mov
imul
popf
push
jnp
pop
shlb
jo
sbbl
scas
loop
ud1
lahf
out
jae
xor
jb
inc
sbb
cmp
mov
fsts
lods
lods
mov
xchg
je
fldcw
push
stos
imul
das
mov
imul
cmp
data16
js
aad
jno
or
jle
sbbb
inc
mov
push
fcompl
inc
push
adc
lods
adc
mov
push
pop
jae
xor
test
dec
or
inc
outsb
push
xor
aas
push
or
cmp
outsl
ret
mov
mov
stc
aam
shll
push
lock
and
sbb
or
push
adcb
pop
mov
test
pushl
push
cmp
lods
add
icebp
dec
mov
mov
loopne
jno
je
les
xor
cwtl
mov
cld
mov
cs
outsb
outsb
int3
lods
xor
jle
into
push
sub
add
jae
add
aam
mov
or
jo
cmp
mov
pop
sub
fildll
xchg
pop
push
dec
ret
xor
mov
aas
mov
into
insl
dec
pop
popa
or
mov
or
enter
dec
in
pop
leave
outsb
test
insl
fbstp
cmp
or
lret
sbb
push
inc
pop
les
mov
jge
fadds
bound
inc
pushf
js
and
inc
sub
push
mov
inc
ror
adc
dec
icebp
mov
inc
in
test
push
inc
mov
inc
mov
test
xchg
outsb
adc
xchg
out
dec
aad
imul
sub
mov
cld
pop
mov
and
lds
insl
int
pop
dec
inc
xor
push
out
sub
jmp
rorl
adc
push
xor
add
mov
mov
movsl
test
lods
test
adc
sub
push
aas
movb
jg
out
pop
ja
mov
fistpll
cwtl
xlat
xor
pop
xchg
aad
insb
mov
mov
cmp
cli
int
test
mov
push
repz
dec
and
jae
rorb
lock
sti
dec
sbb
iret
lahf
pop
out
cmp
stos
dec
push
mov
aad
fdivs
or
iret
and
inc
mov
dec
xor
mov
insl
cmpsl
dec
insl
jmp
addr16
add
leave
cli
cmp
sbb
out
pop
hlt
out
gs
testl
cwtl
movsl
jbe
addr16
repz
in
leave
push
ret
jl
sahf
mov
shll
pop
cs
mov
orl
jmp
lock
dec
out
imul
fldenv
fisubrs
adc
pop
jae
scas
jbe
add
jmp
and
add
lods
outsb
bound
rorl
jl
lods
and
jle
dec
xor
sub
std
fcomip
jecxz
pop
and
pop
aad
fbstp
cli
cli
out
or
pop
fwait
adc
inc
nop
push
ret
test
jge
add
fmull
rcll
mov
leave
mov
iret
sub
dec
stos
jmp
lds
test
cmpsb
sub
daa
pop
shr
mull
cltd
sbb
sub
dec
test
xorb
nop
jp
sbb
fisubrs
ret
jnp
cmc
push
aam
mov
adc
or
out
push
jnp
xchg
mov
lods
lahf
imul
lahf
lcall
push
mov
inc
push
call
cmp
sti
scas
lahf
pop
std
mov
and
mov
pop
repz
mov
xor
mov
fcoms
cmp
ja
arpl
popf
icebp
xchg
inc
mov
out
and
cmpsb
dec
inc
icebp
imul
das
sub
pop
xchg
mov
clc
push
lock
repz
das
mov
ret
adc
lods
rol
shll
sub
mov
adc
aaa
fdiv
addb
jl
in
lcall
div
pop
inc
or
imul
nop
mov
xchg
lret
rep
or
imul
xor
popf
outsl
lock
sub
aas
jne
sbb
xchg
shrb
cltd
loopne
inc
lahf
lock
scas
sub
pusha
mov
aas
decl
adc
xor
mov
bound
mov
pop
out
scas
lock
fcmovne
fisubs
pop
mov
in
push
pop
aam
cmc
out
inc
nop
inc
jmp
insl
inc
push
cmp
xor
add
clc
std
pop
sbb
adc
pop
cmp
repz
andb
in
push
dec
inc
mov
jns
and
shlb
js
test
insb
pop
inc
push
jns
cmp
jno
sub
mov
push
mov
cmp
push
nop
aas
ret
outsb
call
jecxz
jge
scas
leave
dec
pushl
iret
pushf
xchg
inc
sub
pop
xchg
dec
test
adc
mov
mov
push
jmp
xchg
pushf
je
inc
adcl
xor
data16
test
ja
stos
xor
and
cmpl
andb
lcall
idivl
sbb
cmp
adc
cmp
jle
lods
inc
sub
push
lods
mov
jmp
aam
xor
imulb
sub
or
push
cs
add
push
lods
dec
push
enter
ja
xor
and
cli
aad
xchg
cmp
and
out
sbb
repnz
shrl
icebp
or
aaa
dec
ret
jae
dec
in
in
test
push
pop
lret
es
cwtl
jge
or
add
cmp
cmc
mov
push
xor
inc
jecxz
cld
inc
mov
out
dec
test
jp
xor
inc
push
iret
cld
popf
xchg
ficoms
add
cmpb
lahf
pusha
sub
sbbl
inc
mov
jo
xchg
xor
pop
shlb
gs
insb
lret
adcb
dec
cmp
mov
mov
and
cmpsb
outsb
cmp
jo
popf
and
out
xchg
xor
lock
mov
jnp
mov
inc
mov
out
data16
decb
test
popf
fwait
pushf
aas
data16
mov
push
push
sbb
ljmp
out
push
push
jle
dec
mov
lods
pop
std
test
rcll
icebp
push
pop
add
movsl
aaa
mov
add
aam
cmpl
out
jle
cmp
push
mov
fs
dec
movb
pmaddwd
imull
cs
stos
call
adcl
cmpsb
adcl
jb
pop
stc
xorb
sbb
pop
and
popa
xlat
jmp
mov
and
jecxz
xor
xchg
inc
pop
xchg
stos
adc
or
xor
dec
mov
sub
and
aam
sbb
ret
int3
push
cmp
loopne
clc
test
in
pop
fwait
adc
popf
xorb
mov
push
faddl
push
mov
aam
and
add
sbb
pop
inc
and
cld
inc
cs
idivl
dec
xchg
enter
das
mov
xchg
dec
and
mov
sbb
mov
fldenv
push
mov
pop
sbb
xchg
lret
inc
pop
adc
add
out
push
xchg
adc
imul
jbe
inc
pop
add
mov
clc
xchg
sti
mov
mov
hlt
bound
in
fistl
or
js
sahf
out
mov
mov
out
incl
pop
cld
pop
cmpsb
jb
or
out
into
fistps
mov
jge
movsb
dec
pop
lods
xchg
xor
adc
ljmp
jb
mov
adc
repz
cltd
inc
cltd
loope
addb
jp
jge
mov
pop
or
iret
ret
xchg
out
pop
mov
pusha
je
stos
out
push
and
pop
xchg
cli
jge
xor
jmp
rcrl
xor
push
rorb
xchg
testl
jecxz
mov
mov
leave
mov
push
rclb
fidivl
sub
inc
imul
dec
fisttpl
cmp
push
sub
mov
mov
lds
fcoms
mov
lock
loope
in
fsubp
fcoml
cmp
xchg
add
ret
inc
add
xchg
mov
cmp
shl
add
xor
inc
push
jp
add
shrb
jle
inc
mov
subb
stos
adc
lcall
in
fiaddl
xlat
push
ud1
sbb
mov
add
out
xor
divb
or
inc
scas
xor
mov
mov
icebp
and
insb
sti
jg
in
fwait
enter
outsl
push
cmp
stos
imul
repz
ret
push
push
rcrl
outsb
cltd
push
push
inc
or
cld
dec
leave
iret
imul
repz
insb
cmp
xchg
mov
lahf
sbb
shlb
inc
aad
aaa
cmp
adc
push
ds
adc
idivb
inc
dec
push
cli
lea
adc
or
push
aad
add
pop
cmpsb
stos
aad
inc
inc
cmp
je
push
mov
rorl
mov
lahf
sbb
outsb
mov
sub
add
adc
cmp
shlb
fidivs
pop
dec
add
test
mov
mov
sub
lret
mov
mov
ljmp
cmpsb
lret
cmp
daa
cmpsl
fwait
cmp
fnstcw
fs
dec
dec
and
mov
xor
push
cmp
pop
icebp
ss
sbb
lret
xlat
mov
xchg
sub
jo
sahf
pop
push
enter
add
dec
jecxz
push
sbb
cmpsl
lods
pop
aas
popf
in
push
mov
je
mov
dec
xchg
push
enter
and
sahf
pop
mov
push
add
cmpl
iret
or
out
xchg
lret
pop
fbstp
mov
les
pop
inc
or
push
xchg
mov
pop
testb
ret
int3
xchg
lods
jb
rol
cmpb
jo
std
pushl
xor
es
out
out
xor
lcall
or
or
or
aas
inc
jle
sub
int
out
dec
es
daa
pop
mov
cli
lock
lods
mov
in
std
jp
jmp
or
push
cmp
cmc
icebp
fidivrs
pop
add
mov
insb
fs
or
sbb
push
dec
cmpsb
data16
insl
lea
jae
jbe
fisubrl
es
cmp
test
lahf
sbb
stos
pop
cld
pushf
aad
out
and
adcb
jo
cltd
icebp
pop
imul
cmp
add
subl
jae
inc
pop
xchg
xchg
cwtl
mov
cmpsl
les
fnsave
inc
dec
mov
push
adc
mov
outsl
or
dec
sbb
cmp
inc
shrb
mov
mov
add
mov
cmpsl
mov
test
mov
jno
jbe
push
bound
lret
xor
iret
xchg
cltd
cmc
xchg
add
jge
scas
inc
jp
jl
rcrl
or
sbb
loopne
inc
cmc
out
ljmp
mov
jmp
popa
jmp
add
cmp
xor
push
sub
push
push
xchg
mov
push
idivl
dec
dec
xchg
in
bound
dec
pop
add
mov
lds
jo
sbb
int3
sub
clc
xchg
mov
fadd
sbb
xchg
mov
xchg
cwtl
les
out
and
filds
pop
filds
fbstp
ja
xchg
nop
sbb
push
jo
pop
mov
xchg
icebp
stos
insb
out
or
fisubl
das
add
testb
add
and
adc
imul
and
push
sub
testw
cli
jecxz
jne
std
imul
adc
jecxz
repz
mov
jb
test
mov
out
push
push
cld
data16
mov
add
sbb
jl
mov
and
ret
mov
lea
xor
mov
jo
push
repnz
sub
out
shlb
xor
xor
mov
xchg
sub
es
and
pop
and
jo
aas
cmp
sub
mov
mov
lods
pop
add
lods
leave
stos
fs
mov
or
pushf
cmp
divl
jns
arpl
jecxz
fwait
mov
aam
test
and
cltd
std
loopne
fmull
aaa
test
xchg
mov
stc
mov
or
inc
lahf
hlt
mov
cmp
fsub
movlps
inc
andb
aaa
xchg
pushf
dec
sbb
pop
fistl
lret
add
push
jbe
or
and
jns
cmpsb
test
xor
popf
adc
add
rclb
sub
imul
xchg
inc
sbb
aad
ret
pop
pop
sbb
jne
pop
adc
aad
adc
mov
jns
sub
mov
push
pop
out
out
mov
stc
jno
pop
sub
fisubrs
xchg
ret
mov
xchg
xor
mov
push
mov
or
jl
aas
cwtl
pop
lahf
sub
stos
dec
add
lea
into
int
cmp
orb
hlt
and
shl
enter
inc
pop
dec
push
pop
inc
mov
int
aam
imul
sbb
sti
test
insb
dec
and
or
pop
mov
mov
sub
mov
pop
mov
push
ljmp
mov
and
jns
cmp
call
add
pop
or
insl
clc
and
mov
or
mov
add
add
sti
inc
mov
imul
lcall
add
push
add
movsb
sbb
loope
in
sub
cmc
or
mov
mov
pusha
push
arpl
in
inc
sub
loope
or
xchg
insb
push
pushf
lods
jp
inc
gs
imul
ljmp
loop
push
aad
cmp
cmp
xchg
cs
stos
sbb
add
xchg
xor
jnp
sbb
mov
inc
inc
sarb
mov
ss
xorb
jne
mov
dec
xchg
xchg
aaa
call
jo
out
adc
dec
divb
mov
mulb
jge
cs
cmp
call
shll
sub
push
push
fnsave
rorl
sbb
rcrl
inc
clc
mov
bound
dec
push
mov
rorl
lods
cmp
sub
push
leave
test
mov
sub
xlat
mov
dec
fldt
pusha
pop
cmp
and
movsb
or
pop
mov
cmp
sub
mov
mov
inc
dec
icebp
jp
mov
push
ljmp
mov
mov
fs
jmp
push
sar
sub
dec
mov
jl
sbb
cmp
ror
mov
frstor
mov
icebp
xor
je
jnp
notb
jnp
push
aas
pop
inc
in
in
aam
push
cmp
xor
aaa
lret
push
cmp
pop
sahf
pusha
mov
xchg
push
adc
les
adc
insl
pop
push
mov
nop
es
in
push
pusha
test
fistl
fistl
inc
sub
stc
fldenv
mov
cmpsl
inc
data16
push
jecxz
popf
pop
adc
and
popf
lahf
dec
or
dec
pushf
pop
sbb
adc
mov
xchg
pushf
cmp
push
inc
icebp
sbbb
lahf
jo
popf
adc
push
leave
jle
test
icebp
jns
dec
sbb
lea
popf
lds
inc
xor
pop
fs
out
mov
sub
mov
add
sub
sbb
mov
sub
leave
mov
negb
xorb
pusha
mov
pushf
aam
imul
imulb
sbb
divb
cmpsl
repnz
aaa
mov
cmp
in
fistpl
push
cmp
inc
sbb
push
mov
xor
or
xor
gs
lret
adc
div
xchg
xor
imul
push
dec
dec
xlat
ficomps
gs
sti
mov
fadd
mov
xchg
les
cmp
pop
loop
fbld
jno
arpl
mov
rcll
int3
sub
pop
popf
mov
dec
fwait
add
sbb
jnp
ljmp
leave
shlb
push
pop
pop
jbe
xor
mov
testl
icebp
inc
add
adc
mov
pop
dec
adcl
pusha
fs
pushf
jne
stos
mov
mulb
xchg
lock
jb
mov
mov
out
bound
xchg
adc
mov
cmp
add
aam
and
jae
sbb
cmc
stc
jmp
dec
int
out
in
in
ret
daa
add
mov
lret
pop
test
das
xchg
cmp
jle
sbbl
js
mov
xchg
mov
les
dec
mov
mov
aam
dec
fcmovu
in
xchg
and
xor
pop
iret
sbb
aam
loop
inc
cmp
icebp
test
lcall
mov
insb
stc
cmp
push
dec
adc
je
call
scas
nop
outsb
inc
iret
call
mov
inc
lock
xchg
or
stos
stc
sbb
dec
in
push
and
addb
outsl
pop
loop
sbb
jle
push
mov
insb
mov
sub
push
and
rorl
imul
xor
inc
xlat
add
push
popa
dec
lds
popa
out
mov
sub
into
out
hlt
hlt
lahf
arpl
fdivs
push
popf
scas
lock
and
adc
pop
jg
or
dec
mov
and
sub
dec
std
mov
in
dec
add
cmp
xchg
int
jmp
inc
into
jbe
and
pop
fneni(8087
mov
jl
cwtl
push
sarl
outsb
and
push
xlat
shll
jecxz
lret
jb
js
mov
add
hlt
sub
fld
mov
cmp
out
xchg
rolb
testl
pushf
sti
test
pop
add
aad
out
mov
mov
cwtl
in
push
out
add
hlt
or
movsl
insl
jge
jle
pop
sarl
xchg
je
sub
push
push
xchg
or
pop
dec
stos
pop
pop
test
jbe
popa
or
pop
stos
bound
pop
or
andb
and
aas
hlt
mov
mov
mov
push
mov
or
sarb
daa
rcl
mov
mov
outsb
daa
pop
loope
add
dec
rclb
lods
in
push
jnp
sbb
iret
lods
pop
addps
adc
mov
dec
cltd
inc
inc
jmp
das
stos
stc
adc
xchg
dec
cmp
int3
jmp
orl
iret
jecxz
leave
enter
into
dec
dec
mov
push
or
outsl
jmp
ds
out
icebp
jle
mov
in
ja
sarl
xchg
pop
es
lret
mov
sbb
adc
adc
cltd
out
add
js
xor
addr16
or
jge
xor
lods
les
in
or
sub
mov
pop
cli
mov
adc
pop
loope
mov
cmc
clc
sahf
mov
jae
in
pop
insb
loop
popa
mov
mov
rcrb
es
cmp
pushf
sub
xchg
or
pop
hlt
lods
jle
sub
stc
mov
jb
gs
test
xchg
sbb
icebp
inc
push
and
je
call
out
mov
sbb
add
push
mov
pop
popa
rclb
pop
and
inc
pop
shr
jecxz
sahf
cmp
ss
sbbb
ljmp
loop
adc
ficompl
das
jg
lock
push
dec
jg
push
push
push
scas
lock
mov
in
jae
push
nop
adc
pop
orb
imull
fimull
add
addr16
std
test
add
sti
hlt
mov
int3
push
sar
repnz
sub
mov
and
mov
mov
cwtl
dec
stos
mov
lea
inc
mov
int3
faddp
insb
pop
sbb
cmp
xchg
cli
movsb
jns
jae
mov
rorl
mov
and
outsb
add
mov
dec
xorb
lock
popa
or
addr16
repnz
in
stos
push
xor
jne
sub
push
jbe
pop
movsb
sti
jl
cmc
nop
leave
das
mov
pushf
lods
sbb
adc
xor
mov
jg
scas
dec
push
leave
in
ret
mov
adc
out
mov
mov
mov
xchg
xchg
insb
add
inc
sbb
mov
cmp
push
or
xchg
add
push
daa
sub
fistpl
and
xor
xchg
sbb
fs
mov
push
les
mov
cmp
inc
cmp
outsb
imull
loop
aaa
shlb
sub
sbb
mov
mov
mov
cli
or
adc
mov
imul
xchg
xor
sub
push
jmp
lock
mov
sbb
pop
adc
sahf
insl
aas
fwait
insl
jne
pop
and
scas
cwtl
das
dec
bnd
iret
mov
xchg
in
notl
aad
or
cld
xchg
jl
lds
xorb
xchg
or
ja
sbb
mov
int
popf
push
cltd
inc
call
or
xchg
orl
cmp
lahf
jmp
xchg
cmpsb
or
repz
jbe
ret
add
mov
aad
jnp
shlb
shrl
dec
and
pop
cmp
cmp
aam
outsl
imul
pop
pop
es
loopne
mov
cld
adc
jo
inc
pusha
fwait
jge
jbe
pop
imul
dec
scas
push
xor
xor
outsl
das
add
loop
icebp
add
mov
cmc
stos
adc
scas
dec
enter
lret
into
mov
sbb
jbe
mov
incl
dec
pop
mov
mov
jecxz
pop
or
pop
ffreep
movsl
xor
cmpsl
adc
mov
cmp
and
jno
cld
lock
jo
outsb
push
mov
mov
sub
fchs
dec
adc
fbld
lods
add
and
and
and
mov
out
cmp
push
popa
imul
add
aaa
jne
mov
es
adc
dec
jle
ret
xchg
mov
cli
ret
xchg
nop
out
mov
sbb
fsubrs
or
pop
adc
sub
jge
push
lods
inc
daa
add
decl
lock
outsb
popa
loop
push
mov
xor
aam
sbb
dec
xor
push
cmp
and
iret
stos
mov
outsb
test
adc
adc
cmpsb
icebp
sbb
push
stos
cld
shll
mov
or
cld
mov
jnp
lods
leave
mov
insb
sub
lcall
mov
and
push
ja
jne
add
adc
es
cmpsb
imul
xchg
xor
cli
sahf
adc
fnsave
pop
fnstenv
mov
jb
jne
icebp
cmp
jbe
cmp
aaa
fisttpl
mull
fcmovbe
mov
and
inc
aaa
push
cwtl
out
push
mov
inc
sahf
ret
in
lds
stc
mov
adc
fdivl
cmp
lock
pop
scas
scas
sub
push
fs
test
cli
mov
mov
fstps
testb
inc
push
out
push
mov
cmp
mov
inc
xor
cmp
pop
test
bound
or
xchg
es
push
inc
sub
cmpsb
es
mov
cmp
add
stc
outsb
dec
push
jno
jg
cmp
adc
dec
xchg
cltd
push
jl
inc
lret
imul
inc
fidivl
dec
sarl
insb
nop
xor
lds
lock
mov
jo
aaa
mov
pushf
leave
sti
dec
adc
fcmove
mov
xor
inc
mov
pop
orl
sti
subb
fwait
sbb
pop
pop
jb
cmp
cmp
inc
xlat
stos
or
ljmp
push
int3
std
push
imul
test
stos
jg
inc
repnz
pop
or
inc
in
inc
or
loopne
cmp
jae
pop
jp
rorl
dec
cltd
mov
ret
out
aam
pop
inc
pop
inc
ljmp
hlt
sub
rcl
cvttps2pi
adc
mov
jge
inc
enter
fsub
and
or
cmp
dec
xor
xor
dec
mov
insb
xchg
xor
mov
dec
push
leave
jb
sbb
aad
repnz
dec
xor
sub
cwtl
jb
jne
shlb
push
imul
jl
mov
push
dec
int3
idivl
sub
push
pop
mov
ret
pop
xlat
lcall
cmp
es
jbe
rolb
pop
and
dec
pop
repnz
push
push
fldcw
ret
inc
mov
in
adc
repnz
add
mov
sbb
push
pop
jmp
cmp
sub
outsl
dec
movsl
mov
or
icebp
pop
xchg
jno
icebp
dec
or
popf
ss
pop
in
push
ds
cmpsb
inc
stos
xor
pop
stos
push
jge
mov
adc
push
mov
lret
cltd
in
push
xor
pop
xchg
cmp
xor
xchg
cmp
mov
xchg
mov
cmpsb
and
iret
out
inc
sub
adc
dec
inc
mov
jo
cmpb
sub
dec
sti
stos
fstps
jecxz
inc
scas
xchg
jne
adc
and
jae
pop
arpl
cmp
xchg
fcmovbe
mov
mov
cld
mov
mov
fbld
in
in
inc
test
adc
lret
adc
aad
mov
or
mov
movsl
sbbl
or
je
push
adc
jecxz
pushf
sub
jmp
jne
inc
outsb
pop
or
and
pop
xlat
cmp
stos
and
jge
dec
pushf
inc
sbb
adc
arpl
dec
aam
xor
jnp
push
pop
sti
jbe
movsl
lret
int
dec
pop
js
mov
lahf
scas
pop
mov
jae
xor
lods
and
in
add
mov
and
int3
inc
ret
xlat
hlt
mov
jl
sbb
call
and
outsb
adc
sarb
stos
bound
ljmp
loop
loope
xor
dec
in
lcall
sub
xchg
nop
xchg
fnstenv
mov
sub
or
cmp
sbb
cmp
mov
mov
push
cs
xor
shlb
dec
jp
xor
add
xchg
pop
mov
sbb
push
sbb
xor
mov
push
sbb
std
sub
mov
inc
push
in
stos
mov
push
jno
push
ret
je
mov
xchg
jge
in
icebp
jns
aas
ret
push
das
movb
in
sub
insb
inc
mov
sub
push
lea
xchg
mov
jle
cld
mov
repz
and
sub
push
out
sbb
lcall
cmp
bound
fmul
punpckhwd
cmp
add
mov
scas
mov
pop
dec
sub
jmp
fidivs
adc
mov
push
aad
fcoms
popf
daa
sbb
dec
pop
imul
mov
add
shrd
xor
xchg
aas
lret
and
add
or
flds
add
pop
test
insb
test
add
pop
repz
and
xor
xchg
dec
xor
jne
dec
das
lods
push
repnz
sbb
jb
addl
pop
cli
and
mov
test
cmc
fnstsw
jo
divb
pop
outsb
pusha
add
shll
sub
pushf
js
or
cmpl
pop
xchg
mov
jle
push
adc
pusha
sbb
mov
add
mov
insl
cmc
pop
mov
mov
push
mov
lret
sbb
dec
arpl
inc
pop
push
roll
inc
movsl
xchg
add
and
das
lret
push
xchg
or
adc
push
and
in
scas
xor
jne
inc
sahf
pop
xor
pop
inc
repnz
push
jle
add
jmp
sbb
dec
jno
js
aad
xchg
rolb
xchg
xor
icebp
lds
xor
mov
pop
mov
adc
mov
shlb
adc
sbb
call
sub
mov
xor
push
mov
insl
jns
repnz
dec
adc
loopne
lahf
inc
loope
aad
ret
mov
filds
out
sti
xor
lds
sbb
gs
adc
push
icebp
aas
call
inc
fmuls
adc
or
add
insl
mov
mov
stos
mov
pop
mov
hlt
int3
fdivl
mov
daa
jle
and
shll
push
ds
nop
cmp
and
cltd
sbb
imul
cmp
mov
in
and
mov
add
and
and
add
jmp
arpl
fcomi
adc
cltd
inc
hlt
mov
pop
push
aas
and
negl
cmp
dec
out
jno
addb
insl
jbe
and
pop
stos
lock
mov
sahf
cld
outsl
mov
in
hlt
lods
pusha
sub
test
cmc
js
dec
inc
shl
ss
pop
sub
dec
and
ja
stos
imull
fst
insl
lods
imul
loope
add
popa
fldt
daa
ljmp
push
gs
or
scas
cmpsb
push
jp
adc
dec
pop
add
daa
into
adc
sbb
and
pop
loope
into
in
sub
cmpsb
xlat
out
dec
insl
mov
adc
loop
imul
ficomps
and
cmp
mov
daa
std
iret
nop
popa
inc
testl
push
mov
sbb
xor
push
outsb
xchg
mov
mov
jno
fsubl
sub
scas
jp
cmp
sub
adc
or
testl
enter
push
aaa
stos
cmp
sub
repnz
mov
shrb
aam
in
jle
aaa
ljmp
std
xchg
add
mov
cmp
push
jmp
inc
mov
les
jbe
xor
aam
jg
inc
sti
pop
inc
adcb
push
stos
sbb
dec
push
aam
pusha
mov
dec
jecxz
push
popl
jo
push
mov
xchg
mov
mov
pushf
cltd
out
addr16
inc
shlb
out
std
mov
xchg
dec
xor
jno
jno
scas
push
push
sub
leave
sbb
das
xor
xor
inc
push
push
test
inc
lcall
xor
sbb
mov
dec
cmp
ss
jl
lahf
sub
dec
xor
ss
mov
test
icebp
cmp
mov
push
and
or
cmp
mov
xchg
fcmovnb
loopne
dec
dec
test
jl
xchg
testb
lea
mov
xchg
je
xor
insb
mov
mov
loopne
add
in
jmp
jno
or
cld
or
enter
jne
imul
cmp
mov
ja
inc
mov
pop
mov
xor
and
or
fs
fisubrl
or
daa
xor
aaa
cmpb
sbb
scas
cmp
mov
cs
xbegin
jmp
je
jno
out
fadds
imul
adc
cmp
test
pop
lods
inc
in
arpl
ljmp
pusha
xor
pop
out
mov
mov
jo
scas
iret
dec
das
dec
dec
add
jl
scas
mov
sarb
push
ficoml
mov
jns
mov
int
std
lea
mov
outsl
mov
in
xor
push
shl
mov
and
jmp
ss
mov
pop
or
inc
mov
out
cmc
mov
push
mov
sarl
sbb
imul
clc
sub
sub
or
lcall
xchg
jecxz
sbb
inc
test
inc
int3
stc
imul
test
iret
mov
int3
int3
lret
arpl
out
or
push
lods
push
and
in
ljmp
ja
xchg
jl
out
mov
pop
aad
mov
xor
or
mov
popf
or
clc
pushf
mov
jo
ret
data16
nop
push
iret
and
jno
pop
loope
or
adc
in
push
lea
adc
mov
cmc
lret
add
mov
adc
add
pop
ss
insb
jb
cld
icebp
inc
popf
sub
sub
cmp
jb
cltd
mov
add
lods
pop
jge
pop
or
or
mull
cli
fs
subb
adc
popf
jne
mov
dec
adc
mov
mov
lcall
adcb
jne
push
aam
pop
in
js
jae
hlt
ficoms
dec
and
mov
and
ret
dec
imul
fisttpl
sahf
inc
sbb
and
jle
lods
jnp
into
adc
das
iret
mov
das
shrl
sub
int
movzwl
adc
dec
rol
lods
pop
xchg
fcoms
das
out
push
jecxz
js
test
loopne
lods
aam
je
sarl
push
or
cmp
push
imul
or
fsubl
test
jns
adc
add
repz
mov
in
mov
mov
ret
xchg
lock
insb
sbb
cltd
loop
bound
sub
mov
or
xor
clc
mov
xor
das
fldcw
xor
jecxz
loopne
fdivl
xor
jmp
jne
mov
mov
add
loop
test
xlat
lods
xchg
jle
dec
xchg
addr16
mov
cmp
hlt
jne
add
push
push
ret
outsl
or
loopne
pop
fsubs
jg
mov
ljmp
pop
das
shlb
out
add
xchg
sub
ret
dec
and
dec
adc
insb
sub
fidivl
inc
add
ret
scas
cwtl
mov
jnp
jecxz
imul
daa
sarl
loopne
adc
leave
and
test
mov
xchg
cmp
cmp
fidivs
mov
push
cmc
adc
call
pop
call
cmpsb
cld
arpl
push
mov
mov
nop
xchg
jo
call
push
sti
bnd
push
stos
mov
shll
mov
hlt
lcall
jno
testl
jl
lahf
jg
push
mov
mov
xchg
outsl
outsl
iret
pop
jae
mov
dec
push
or
mov
sbb
xchg
aad
leave
mov
lock
outsb
and
and
je
xchg
dec
out
mov
cld
stos
adc
or
cld
frndint
filds
ljmp
outsl
bnd
out
clc
push
sti
in
into
or
mov
icebp
xor
in
das
xchg
daa
jbe
xchg
imul
inc
pop
ja
lock
or
aaa
dec
stos
inc
jp
sbb
outsb
fidivl
cwtl
jecxz
mov
cmp
lret
and
push
fldl
sti
into
adc
ljmp
cmp
pop
fcoml
jmp
mov
dec
inc
lock
mov
xor
into
push
inc
dec
hlt
lods
fdivrl
push
lea
mov
dec
add
andb
sbb
mov
int3
test
xor
stc
lock
pop
cli
xchg
fcomi
push
xchg
adc
sbb
insb
mov
int
mov
sbb
test
mov
mov
sbb
cmp
xchg
ffree
es
add
and
mov
iret
sub
xor
xchg
stos
push
scas
fcoms
pop
push
sbb
xchg
fbld
sub
mov
dec
ja
fsub
xchg
out
pop
mov
cmc
ficoms
push
adc
mov
mov
aas
clc
mov
dec
fs
cmpsb
in
push
jb
mov
scas
clc
pusha
xchg
fildl
xchg
xchg
and
jmp
cmc
addl
imul
mov
push
mov
shr
dec
adc
out
stc
pusha
stos
inc
adc
add
sbb
push
and
es
lret
cmovs
mov
fcmovnbe
fwait
shlb
inc
pop
cmp
in
es
dec
fdivs
ret
fwait
in
xchg
mov
lds
pop
rcll
insb
add
mov
out
push
sub
in
rorb
aam
push
divb
sahf
dec
mov
push
aam
or
and
xchg
sbb
cmc
es
sti
popa
push
imul
fsubrl
fbstp
add
lods
sbb
inc
or
pusha
mov
pop
fs
push
repnz
pop
inc
push
or
xchg
or
jb
imull
sub
data16
not
fmull
lea
test
or
int
xor
in
xor
push
lea
sub
dec
cmpxchg
mov
gs
inc
mov
clc
lods
mov
xchg
or
xchg
ja
jg
dec
and
icebp
sub
xor
addr16
ja
push
mov
addr16
add
xor
cmp
xchg
push
dec
stos
cs
adc
or
decl
push
in
movsb
mov
or
mov
or
mov
xlat
or
test
lret
pusha
cltd
push
inc
inc
sub
lcall
sub
or
clc
dec
adc
pop
jge
mov
je
in
shrb
jo
movsb
call
insb
push
mov
jb
shlb
xchg
or
dec
jb
out
jle
and
jnp
mov
add
cli
sub
or
pop
mov
jne
movsl
fidivl
xor
stc
pop
mov
imul
xchg
push
mov
mov
jb
stos
lods
mov
addr16
shr
test
xchg
enter
and
and
enter
xchg
jnp
in
xchg
incl
inc
adc
xchg
or
nop
lret
dec
fdivrs
push
std
inc
jbe
xchg
out
lcall
or
sbb
inc
rclb
push
and
or
hlt
cmp
mov
mov
mov
pop
pop
push
sar
insb
ds
aam
sbb
lea
cmp
adc
or
pop
sub
imul
hlt
dec
push
xchg
mov
cmp
xchg
add
int3
fadd
inc
sbb
jo
mov
cmp
int
mov
shr
lret
ss
mov
sub
mov
pusha
and
and
xchg
adc
and
cmp
xchg
pop
call
or
sti
stos
in
jne
inc
negb
or
lock
xor
mov
xchg
test
fidivrs
loopne
mov
xor
jle
icebp
or
sbb
mov
mov
enter
add
dec
repnz
push
or
xchg
xchg
je
fisubrl
mov
das
pop
insl
and
xor
push
sub
jp
mov
stos
sbb
cmc
xor
je
adc
aaa
cli
mov
dec
xchg
aam
test
outsl
add
addl
xor
xchg
ljmp
jno
int
and
stc
popa
jb
test
push
sbb
test
dec
sbb
leave
sub
push
or
js
aas
cwtl
add
push
ja
cmpsb
addr16
fstpl
mov
test
mov
test
push
mov
mov
ljmp
and
pop
jle
subl
test
xlat
and
test
cmp
dec
xor
nop
inc
mov
inc
add
pop
in
and
jae
shrd
movsl
jo
mov
fisubs
mov
repnz
pop
mov
jae
push
fnstenv
cmp
push
push
rol
adcb
adc
insb
rclb
call
aas
dec
inc
hlt
adc
cmc
out
int3
and
fisttpll
adc
repz
test
push
mov
loope
shll
loop
push
lahf
mov
sub
in
pop
les
xchg
cmp
inc
mov
lcall
lret
jmp
fstps
mov
sarb
nop
mov
push
adc
stc
adc
jle
pop
xchg
mov
xchg
rcrl
sub
push
test
mov
ret
dec
xchg
or
lea
out
fildl
loop
mov
cmp
orb
xchg
cmp
xor
cmc
pop
in
push
and
pop
pop
stos
in
icebp
outsl
push
imul
or
xchg
fldt
test
mov
xor
and
mov
xlat
mov
mov
movsb
pop
and
push
cs
lret
fisubrs
shlb
mov
or
sub
mov
imul
mov
iret
dec
shr
inc
in
xchg
dec
push
out
ds
sbb
push
dec
cmp
jb
push
lods
dec
mov
mov
mov
fcomps
xor
dec
mov
pusha
inc
jg
mov
adc
mov
loop
test
jp
pop
scas
in
mov
rcrb
adc
rolb
xchg
jecxz
andb
in
jge
and
dec
loop
outsl
rcl
int
dec
clc
mov
scas
xchg
nop
fcomp
js
sub
push
std
hlt
sarb
mov
sar
std
lock
jo
je
adc
test
inc
cli
and
test
push
call
sub
je
aas
xchg
dec
cs
sbb
sbb
je
fmuls
data16
pop
pop
pop
mov
mov
mov
push
xchg
cmp
popa
xchg
aad
rcrb
shll
pop
mov
ror
mov
lods
pop
arpl
hlt
stos
incb
cmpsb
aad
push
rcrl
mov
mov
fnstcw
hlt
dec
jo
add
mov
push
sub
push
jns
push
popf
push
enter
cltd
sti
sbb
scas
xor
jmp
push
dec
inc
repnz
jbe
stos
lcall
mov
sbb
push
popf
ljmp
dec
sbb
stos
cmc
jl
out
mov
pop
push
cmpl
or
movsb
add
push
adc
sub
sahf
pop
inc
rclb
add
decl
incl
and
push
arpl
inc
adc
sub
clc
adc
xor
and
jle
adc
mov
mov
cmpsb
outsl
outsb
fdivp
sbb
test
in
insl
minps
in
outsl
inc
cld
into
movsl
cmpsb
les
jp
dec
out
push
rcrb
test
jae
push
stc
adc
enter
and
jae
push
dec
aad
lret
lahf
outsl
add
dec
xor
cmpsb
xor
in
jle
mov
addr16
mov
mov
jle
imul
sbb
clc
in
adc
popa
cmc
sbb
add
push
mov
lea
adc
out
mov
ja
out
jae
insl
push
jb
ja
xor
movsb
fsts
stos
cmpsb
cmpsb
pop
push
leave
addr16
pop
faddp
aad
cmp
pop
ss
cmp
mov
inc
cmpb
shll
jecxz
and
mov
pop
stos
or
in
lret
mov
jle
mov
aam
push
mul
push
mov
add
mov
cmp
int
scas
pop
arpl
in
test
or
adcb
aam
sub
fwait
mov
lahf
lods
jbe
mov
adcb
nop
ja
das
pop
out
call
inc
mov
pop
jecxz
sub
and
mov
inc
jmp
xlat
jno
add
add
imul
mov
and
js
mov
xchg
notb
push
cmp
aam
adc
icebp
mov
push
inc
shrl
adc
push
out
sbb
sub
xchg
arpl
nop
jae
fcmovnbe
and
sub
lods
xor
push
ja
fstpt
test
pop
and
lods
xchg
insb
je
addr16
pop
movsb
cmp
lea
pop
mov
cmc
add
mov
jbe
push
inc
lea
lret
vmread
sbb
sbb
wrmsr
sahf
mov
ret
in
pop
push
rcrl
lcall
or
lea
ss
enter
sub
test
push
scas
mov
pextrw
ja
dec
roll
in
mov
fstpt
xchg
std
mov
xchg
push
in
xor
enter
or
into
fst
xchg
xchg
jmp
int
pop
nop
std
pushf
loope
or
xor
insl
mov
sub
in
or
jnp
xor
adc
xchg
loope
data16
dec
xchg
adc
shr
div
iret
jmp
fs
pusha
bndldx
jb
inc
mov
push
pop
mov
leave
cmpsl
push
int
pop
cmp
out
aaa
ret
cmp
add
jp
push
aam
loope
sub
xor
cs
idivl
xor
sahf
cmp
test
xchg
fcmovb
ljmp
cmp
cmp
lds
sub
cld
xor
mov
or
mov
js
pushf
inc
jge
and
pop
push
es
repz
mov
in
clc
pop
addr16
xchg
jl
xchg
daa
dec
test
popa
fidivrs
repz
adc
pop
jge
and
lea
roll
subb
insl
outsl
testl
push
das
movb
mov
in
mov
mov
ficoms
add
sahf
add
push
movsl
push
cli
add
push
xchg
adc
mov
jmp
cld
xchg
push
mov
outsl
mov
sbb
int3
sbb
stos
jmp
stos
into
mov
pop
mov
lret
xlat
mov
pop
aam
cmpsb
mov
out
test
mov
lcall
and
pop
shll
or
mov
and
loope
loopne
imul
loop
lret
dec
and
sbb
lods
dec
movb
pop
addr16
lea
movsb
push
mov
mov
jbe
cmp
mov
jge
stos
lcall
cmp
mov
xchg
push
ljmp
into
mov
rolb
hlt
mov
ret
pop
test
iret
jmp
sub
cmp
aam
adc
sbb
fs
or
hlt
cld
fidivs
clc
iret
sbb
and
jp
movsl
gs
mov
ss
in
or
add
popa
lret
push
mov
mov
cmpl
mov
out
or
jns
push
iret
mov
insb
in
addr16
ds
push
dec
leave
pop
cvtdq2ps
adc
cli
fsubl
ficomps
cmpsl
mov
inc
jns
mov
movsb
addb
xor
imul
inc
sub
mov
leave
fwait
jnp
scas
jae
and
xchg
jl
call
jge
mov
shl
les
inc
aas
xlat
jne
in
fldcw
mov
inc
notb
add
ja
in
scas
inc
int3
cmc
cmc
mov
arpl
out
sbb
push
adc
rcpps
sbb
shlb
loopne
pop
jno
popa
loopne
insl
mov
dec
jnp
mov
fwait
jp
inc
push
fistps
lret
cmpb
xlat
adc
call
les
and
sti
shrl
mov
adc
push
std
shl
rcrb
or
out
pop
jg
pop
lret
adc
shrl
int
lock
and
dec
and
adc
insb
or
adc
adc
jmp
xchg
xor
jp
add
push
mov
or
in
shll
insl
cmc
adcl
push
xor
add
sahf
xchg
mov
fdivl
jne
and
clc
cmpsl
cmc
pop
stc
xchg
iret
inc
leave
jp
add
je,pn
addr16
lcall
cwtl
shl
test
or
jge
jmp
into
xor
daa
and
cmp
cwtl
jno
movsb
xor
xor
add
fldt
popf
je
popa
ret
jb
or
insb
clc
jmp
in
sbb
xchg
lea
xchg
cmp
aas
mov
imul
inc
in
add
xor
xor
lret
sahf
mov
lds
cmp
rorl
or
mov
pop
xchg
xor
ss
and
pop
dec
roll
mov
adc
sub
sbb
stc
filds
dec
nop
mov
jle
mov
imull
in
cmp
or
cmpsl
mov
fwait
hlt
cmp
negb
mov
jns
and
scas
mov
jp
movsl
lock
jmp
data16
mov
push
icebp
add
stos
stos
clc
int
adc
icebp
shr
das
cmpsl
movl
pusha
sub
jle,pn
cmp
xchg
fildl
jmp
daa
popf
push
jecxz
jl
sbb
inc
mov
cli
push
inc
les
xchg
aad
jo
sub
push
jae
in
orl
sarb
push
loope
mov
outsb
int
cld
in
xor
pop
stos
and
cmpsl
push
xor
sub
stos
stos
xchg
jns
mov
sbb
push
in
sub
pop
lds
jg
xchg
pushf
ss
adc
adc
movsl
dec
inc
add
mov
fidivrl
xlat
movl
test
daa
push
cmp
dec
mov
cmpsb
add
popf
adc
sahf
loope
mov
rcrb
ret
add
sbb
in
xchg
inc
ds
sti
rol
inc
jmp
outsb
sarb
jnp
mov
inc
inc
call
and
int
jne
hlt
stos
test
mov
and
mov
sbb
cmpsb
aaa
pop
inc
inc
ret
or
push
adc
cmp
test
movsb
jp
cmpsl
xor
jecxz
xchg
nop
pop
js
mov
jno
je
stos
out
xor
iret
loope
pop
lret
and
add
push
movsb
stos
and
and
es
jo
mov
std
pop
adc
icebp
xor
mov
pop
mov
pop
xchg
rorl
cmp
repz
dec
lea
bound
push
xchg
mov
and
add
inc
clc
addl
mov
lret
cmp
lret
sub
out
mov
aad
sahf
sbb
jbe
push
cwtl
shll
push
mov
cld
jnp
xor
in
mov
pop
push
lahf
push
inc
fnstenv
mov
lods
mov
scas
cmp
xor
pop
mov
xor
flds
ljmp
out
clc
pop
stos
stc
fsubl
pop
fisttpl
cmp
js
pop
neg
xor
rcrb
add
pop
lret
add
mov
cmp
or
mov
in
cmp
popa
insl
dec
lock
movsl
subb
cltd
in
mov
scas
jp
enter
movsb
shl
arpl
int3
loopne
cmp
mov
jmp
inc
mov
fxch
pop
cmp
cmp
je
sub
jp
adc
push
cmp
dec
sub
lock
xchg
and
mov
cmp
jnp
out
push
fs
push
fdivrl
xor
ret
sub
jb
ss
imul
stos
sbb
fdivl
mov
call
jmp
stos
fiadds
into
test
add
fsubrs
out
jnp
in
inc
cli
in
xor
pop
test
dec
xchg
stos
int3
outsl
inc
lds
xchg
inc
jmp
jne
add
mov
sbb
aad
sbb
xor
out
push
loope
icebp
out
cmp
enter
decb
lock
das
test
ss
jmp
imul
inc
pop
push
scas
push
stos
pop
ret
add
js
sub
and
inc
jecxz
out
out
inc
adc
jg
adc
mov
inc
cli
push
adc
popf
mov
mov
jge
push
jle
mov
add
adc
jp
popf
rcr
sbb
lods
or
push
std
cltd
push
cmpsl
jecxz
push
xchg
and
dec
aaa
adc
inc
mov
stos
pop
jmp
mov
inc
stos
icebp
subb
cmp
into
jb
mov
fistps
das
add
pop
icebp
sub
jmp
sub
into
dec
pop
inc
test
test
loope
jmp
inc
mov
cmpsb
outsl
cmc
aaa
data16
aas
xchg
or
push
std
shlb
sahf
orb
addl
and
or
sar
out
and
dec
das
shll
mov
cmp
cmp
or
adc
enter
jmp
mov
jne
cwtl
aaa
divb
ret
hlt
mov
xor
fimull
jnp
movsl
mov
pop
pop
sbb
in
push
mov
nop
cld
and
push
sub
add
xor
cmp
cwtl
adc
aaa
subl
repnz
and
fsubrs
movsb
mov
and
mov
add
rcll
scas
cmc
iret
mov
xchg
push
cmp
mov
inc
sbb
shl
pop
fcompl
lret
and
cltd
sub
lods
cs
outsb
test
cmp
mov
imul
cmp
push
divb
push
jnp
icebp
insb
lahf
pop
int3
cmp
int3
es
jns
mov
xchg
add
inc
or
mov
bound
insb
jmp
xchg
es
fs
in
mov
jp
lret
push
cmp
dec
loope
aam
jae
mov
enter
push
data16
imul
loop
divb
jp
addr16
pop
cmc
jb
jae
mov
dec
scas
xchg
adc
push
pop
mov
adc
xchg
dec
arpl
jmp
popa
pop
stc
lods
xlat
pop
clc
cmc
cmp
scas
add
ljmp
fcompl
adc
ss
imul
repnz
clc
dec
mov
xchg
icebp
out
imul
mov
mov
fcomps
addl
rcrb
push
inc
or
sub
jmp
mov
movsb
xor
adc
push
mov
lea
or
and
inc
sub
dec
jbe
je
clc
xor
cmpsb
dec
mov
icebp
pusha
xor
fucom
cmp
sub
mov
xchg
inc
xchg
adc
decb
mov
test
mov
add
jo
fstl
xchg
fsubs
or
lds
dec
dec
das
inc
jnp
test
lods
outsl
add
orb
out
sti
xor
push
loope
fists
lret
int3
adc
inc
pushf
cmpsl
lea
mov
cmpsb
jns
rorb
sub
sub
mov
in
mov
dec
lea
sbb
jge
xchg
add
mov
subl
jmp
pop
adc
movsl
inc
stos
sub
jne
sbb
imul
aad
dec
add
xchg
dec
shlb
rolb
adc
sbb
cwtl
push
bound
pusha
ljmp
jge
dec
out
rorb
jo
inc
xchg
pusha
imul
mov
jo
pop
mov
inc
or
gs
loope
imul
lret
mov
lds
mov
dec
jl
test
jg
lcall
push
fidivs
mov
int3
scas
sub
inc
test
stos
daa
icebp
xchg
push
rcrl
mov
test
test
flds
xor
daa
dec
pop
sbb
and
jg
in
fildll
xchg
jne
cs
xchg
xchg
enter
jmp
jae
imul
jge
mov
push
les
or
and
dec
inc
addr16
icebp
lcall
xor
and
addr16
test
enter
fdivs
adc
repz
pop
leave
arpl
xor
jge
add
pop
xor
mov
push
mov
fcmovnb
pushf
or
leave
xor
adc
pop
jns
and
cmc
dec
ds
ds
and
icebp
ljmp
xor
icebp
test
pop
in
pushf
mov
pop
aas
xchg
inc
cmp
sbb
imull
pop
arpl
iret
jns
dec
fisubs
sbb
and
mov
ror
xchg
aas
mov
sbb
in
sahf
fnstsw
pop
mov
cltd
or
sub
js
das
cmc
dec
adc
sbb
mov
les
mov
sbb
cmp
push
mov
movsb
aam
push
adc
push
test
mov
sbb
test
lret
ret
xlat
aam
popa
icebp
stos
sti
mov
rolb
ficoms
int
and
or
xchg
mov
ds
adc
in
or
outsl
mov
fistl
inc
mov
dec
movsl
fwait
mov
aas
jmp
gs
push
scas
mov
and
subl
mov
test
mov
pop
sbb
cli
rolb
ret
sub
cmpsb
shrb
lret
xor
into
test
mov
test
cmp
lods
inc
pop
cmpsb
pushf
call
out
popa
jg
push
mov
dec
lods
push
xchg
sub
ret
addr16
cli
sub
shlb
jmp
dec
insl
pop
push
xor
lret
xor
pop
shl
data16
push
das
aam
in
and
sub
ret
repnz
cmp
add
arpl
xchg
pop
dec
jno
push
and
stos
hlt
fidivrl
jo
jo
mov
push
imulb
int
and
pop
sbb
xor
cmc
lret
mov
stos
mov
loopne
add
or
push
test
or
imul
push
cli
push
outsb
fstpl
outsb
sbb
xchg
aas
lds
aaa
fsubl
cmp
inc
adcl
push
idivb
fwait
hlt
add
fcmovnbe
jmp
js
lss
inc
nop
dec
dec
pop
ja
sbb
cli
add
pusha
push
xchg
inc
adc
mov
cmp
sbb
mov
jmp
movsl
cmp
mov
cwtl
pop
sarb
imul
fadd
cmc
test
mov
inc
imulb
and
dec
out
and
add
es
cltd
adc
pop
daa
cltd
mov
pop
dec
xor
xor
outsb
dec
and
mov
aaa
xor
push
pop
scas
lret
outsl
inc
add
andb
fldt
mov
test
and
pop
push
sbb
call
dec
mov
pop
or
nop
std
mov
ljmp
sub
jne
cld
xor
sub
imul
lods
xor
or
insb
dec
push
adc
iret
jns
insb
add
in
sbb
pop
mov
inc
popa
js
push
adc
bound
addb
loopne
sti
repz
lock
push
or
icebp
sbb
jl
test
and
mov
adc
ret
and
fldenv
sub
movsl
jecxz
shlb
push
add
pop
shlb
dec
sbb
sbb
cmpsb
inc
daa
lret
jnp
sub
into
call
xlat
stc
xchg
aaa
jle
sahf
dec
shrl
push
xor
rorl
imul
les
ljmp
lcall
test
mov
dec
pop
sub
dec
sub
adc
lret
fisubl
push
and
cmp
jg
popa
mov
dec
adc
imul
rcr
mov
inc
and
push
into
cltd
ja
and
les
cli
push
pop
adc
sti
stc
repz
lds
ja
iret
jno
cld
xchg
movsl
orl
inc
cmp
add
testb
mov
cmp
jno
mov
push
mov
xor
adc
mov
jb
shlb
fsub
sti
nop
inc
push
into
mov
adc
dec
sub
sbb
add
adc
inc
xor
sahf
xchg
and
inc
mov
dec
dec
and
int
mov
push
jnp
movsb
xchg
mov
xor
ja
mov
ret
mov
dec
push
in
lret
iret
pop
push
inc
sbb
xor
xchg
fsubr
push
and
mov
cmp
push
push
loop
cmp
cmc
mov
or
dec
in
jp,pn
scas
stos
pushf
mov
or
xchg
hlt
jb
repnz
fs
sbbb
mov
leave
xor
test
sbb
filds
pop
ljmp
or
pop
mov
inc
inc
lock
bound
pop
sbb
push
pop
lea
test
push
pop
mov
out
cmc
inc
jl
sbb
data16
into
rolb
and
test
adc
dec
out
sub
cmp
ret
adcb
lcall
xlat
xchg
add
lock
cmc
les
xchg
das
enter
mov
cmp
xchg
or
mov
xor
sub
mov
sbb
lods
ljmp
cltd
pop
pop
push
dec
jbe
xchg
or
xor
adc
in
out
jne
leave
add
mov
arpl
push
aad
in
xchg
jne
lcall
ds
push
xlat
push
imul
sbb
mov
out
jbe
dec
iret
ret
pop
arpl
jecxz
sbb
xchg
loopne
lods
mov
imul
int
jle
ss
push
mov
mov
cmp
stc
adc
cli
scas
stc
lret
fmuls
jae
iret
sahf
lahf
lods
aam
cmp
xlat
inc
das
jnp
push
jno
aam
sub
outsb
es
sub
jno
xchg
inc
xchg
sti
pusha
out
mov
stos
dec
or
inc
push
call
add
or
jmp
push
les
fidivl
sbb
test
inc
insl
jnp
adc
ficoml
scas
mov
xchg
movsb
imul
jmp
or
aas
imul
fldenv
test
push
inc
mov
xor
ds
movsl
mov
movsl
inc
and
sbb
mov
scas
stc
adc
ja
dec
les
cld
lret
jg
popa
mov
jg
fcomps
pop
clc
cmp
dec
int3
cmp
pxor
pushf
inc
push
mov
iret
fistpl
es
cli
decb
hlt
sbb
add
mov
cltd
add
adc
subl
pop
jb
adc
popa
and
or
stos
jl
test
add
fdivl
or
mov
outsb
sahf
cmpb
insb
test
subb
jb
pop
jb
adc
les
aam
outsb
lock
xchg
cmc
std
out
jecxz
int3
nop
call
jns
mov
sbb
or
push
add
mov
out
mov
or
out
sbb
mov
push
jp
inc
cmp
int
imul
stc
push
enter
pusha
stos
mov
pop
iret
push
sbb
ja
mov
dec
sub
mov
cmc
bound
ret
lret
mov
pop
fcomi
mov
push
cwtl
repz
fwait
dec
jmp
jmp
adc
or
shrl
inc
rolb
leave
dec
mov
stc
push
gs
es
rolb
adcl
adc
movsl
in
mov
push
movsb
push
mov
shll
test
pop
je
sub
stc
push
and
cwtl
outsb
jge
into
mov
insb
mov
and
imul
or
jl
mov
inc
and
rolb
int
jmp
cmp
popf
mov
stc
dec
jns
mov
and
rolb
scas
cmc
std
inc
jmp
out
mov
xor
iret
pop
stos
cmp
lods
inc
test
inc
mov
inc
inc
test
cmpsb
mov
ficoms
or
popf
adc
lods
sub
xchg
xor
jp
dec
call
popl
pop
in
jno
data16
add
pop
add
ret
js
int
mov
mov
or
add
mov
pop
dec
push
add
jb
xchg
addr16
jnp
xchg
stc
cmp
xchg
sahf
pusha
inc
dec
xchg
ljmp
xor
and
test
inc
in
adc
mov
enter
cmpsb
mov
sub
push
popa
mov
mov
dec
inc
and
sbb
lret
dec
les
push
mov
std
movl
add
in
shrl
ljmp
mov
mov
cmp
into
xchg
call
adc
sub
notl
mov
jb,pn
jnp
xchg
dec
inc
push
jns
maxps
insb
push
lods
lods
popa
and
or
shrl
and
js
mov
jl
enter
std
sbb
push
jge
mov
mov
fstps
push
in
jno
or
mov
pushf
inc
fs
decl
shl
pop
xor
mov
push
jb
mov
rorb
pop
fcompl
mov
push
dec
rcl
xlat
dec
clc
orb
mov
inc
inc
push
rolb
cltd
cs
aam
adc
insl
mov
insb
hlt
xchg
leave
movsb
sub
stos
sahf
shrl
mov
cmp
add
in
mov
mov
test
adc
js
test
call
ss
or
push
or
into
cmp
inc
xchg
cs
gs
pop
pusha
cmp
xor
sbb
insb
daa
mov
test
xor
jle
and
lods
cwtl
push
push
jns
nop
xchg
lds
push
jo
fs
shr
mov
es
mov
pop
test
adcb
fmul
loope
mov
mov
push
cltd
or
cmc
or
pop
lret
push
ja
incb
jne
orl
mov
lret
hlt
cli
popf
mov
lea
addr16
sub
jnp
sub
idivl
pop
js,pt
jmp
jae
push
icebp
mov
in
popf
out
movsl
push
sbb
repz
cmp
xchg
push
lock
sbb
shll
cmp
test
mov
mov
or
fwait
js
nop
pop
fistl
imul
daa
xchg
addr16
dec
push
ljmp
or
fisubrs
decl
jmp
aaa
iretw
fnstcw
add
inc
add
xor
int
mov
mov
sbb
loopne
aam
ljmp
int3
mov
xor
fisttpl
bound
cmc
or
std
dec
popf
mov
pop
jnp
dec
xchg
das
hlt
ret
es
repnz
push
jmp
add
popf
in
lds
or
push
std
outsb
xor
inc
js
xor
jnp
fstl
mov
mov
rcll
ds
sbb
push
mov
sub
push
sub
jmp
sti
in
adc
jl
cmp
pop
pusha
aad
xchg
sbb
lds
popa
lret
sti
shll
cmc
mov
dec
pop
mov
jmp
jo
pusha
icebp
movsb
addl
es
sbb
sub
xor
frstor
push
fbld
xchg
adc
in
movsb
std
or
js
les
dec
pop
cmp
push
mov
or
adc
imulb
xchg
mov
ljmp
cmpsb
aad
fimuls
jne
mov
adc
mov
js
and
idivb
dec
dec
dec
pop
mov
cltd
hlt
xor
sti
mov
flds
jge
cmp
imul
add
dec
data16
pop
lock
cwtl
xchg
push
mov
inc
fdivs
imul
inc
jae
pop
jb
sbb
pop
sbb
test
fwait
or
push
jno
jb
cmpsb
add
loope
std
pusha
mov
mov
sub
jle
pop
xchg
pushf
cmp
mov
push
addl
bound
dec
out
fwait
sti
push
aas
or
loope
pop
or
dec
imul
lea
lods
dec
pop
push
mov
in
inc
fidivs
jne
insb
mov
test
arpl
jl
clc
or
bswap
enter
aad
add
roll
ss
mov
pusha
mov
sub
test
inc
std
add
fistpl
push
fstps
aaa
rorl
xor
popf
inc
jo,pn
push
cmp
ds
arpl
cld
pop
mov
jne
push
sub
ret
xchg
daa
ds
jl
negb
sarb
push
mov
leave
scas
scas
and
push
shrl
insb
cwtl
mov
sub
dec
mov
sub
cs
inc
sbb
and
sub
mov
aam
rclb
lret
or
lods
dec
hlt
jp
notl
inc
cmp
cmp
or
adc
int3
daa
add
push
pop
mov
pop
mov
sub
arpl
test
in
test
adc
popf
push
ds
testb
out
push
or
add
mov
je
ficoms
push
test
cmp
hlt
sahf
jnp
mov
ss
inc
popa
out
aas
idivb
add
xchg
or
xchg
mov
mov
mov
inc
inc
out
cs
fcompl
xchg
xor
test
out
popf
pop
or
pop
pop
adc
mov
jg
push
xchg
xor
push
or
xchg
std
and
cmp
pop
mov
push
and
and
add
xchg
pop
in
jecxz
inc
push
fcoms
lret
orb
mov
xlat
jb
fs
and
mov
lods
mov
mov
lret
fcmovnbe
xchg
sbb
test
fcoms
adcl
pop
jnp
out
sbb
cs
lahf
jp
test
dec
jg
push
scas
mov
push
mov
lahf
and
push
adc
out
push
pop
push
cmpsb
sahf
xor
or
add
pop
pop
pop
daa
leave
rcrl
sbbb
negb
add
jg
das
xchg
imul
xchg
sub
and
insb
pusha
mov
cmp
outsl
sbb
jp
cmp
adc
add
lea
ja
cmp
mov
sub
es
cmp
jns
cmp
test
negb
xchg
movsb
fidivs
sbb
cli
push
pop
mov
pop
nop
pop
repz
add
dec
rolb
mov
xchg
dec
jp
mov
pop
pushf
aam
mov
cmp
push
lock
inc
sub
call
inc
icebp
int
lahf
fcompl
xor
pop
dec
fcoms
dec
pop
loope
and
mov
fbstp
lcall
out
rcll
iret
jle
or
pop
movsb
push
div
adc
lods
or
mov
addb
and
cmp
adc
inc
rolb
push
popa
jo
in
pop
inc
enter
jne
push
pop
mov
hlt
xor
mov
jmp
dec
adc
je
pop
push
mov
repnz
xor
andb
inc
sar
shll
dec
mov
adc
in
leave
mov
dec
cmp
cmp
movsb
loopne
je
mov
ror
xchg
ds
sti
ss
inc
into
inc
xchg
call
add
mov
pop
mov
mov
sbb
scas
lds
xchg
cmp
or
xor
jl
lods
jmp
adc
or
shll
cwtl
lds
stos
pop
add
dec
mov
cmpsb
push
sub
out
jle
imul
ror
rcll
in
cltd
jne
arpl
dec
outsl
shl
loopne
ljmp
cmp
pop
jae
lea
test
rolb
push
xchg
adc
aaa
jb
pop
adc
fistl
adc
adc
iret
adc
jg
outsb
rcl
aad
mov
clc
adc
push
xor
xchg
mov
xlat
adc
loop
xchg
push
sub
push
push
mov
jle
shlb
mull
fs
ja
cmpsl
dec
lret
pop
push
repz
xchg
loope
push
ficoml
repnz
fidivl
sbb
dec
or
les
outsb
andl
mov
pop
aam
inc
pushf
jmp
nop
and
mov
arpl
jge
add
mov
jo
jl
iret
dec
test
xchg
mov
mov
rclb
mov
pop
add
inc
mov
add
jle
popf
cs
inc
push
adc
loop
sarb
jbe
and
mov
pop
cmpsl
stos
mov
test
cli
xlat
cmc
mov
adc
shl
lods
cmp
add
vphadduwd
rolb
lds
push
sbb
je
js
xchg
push
pop
out
outsb
adc
mov
arpl
notl
fstl
fdivr
mov
fwait
dec
pop
sahf
xchg
outsl
mov
mov
add
push
jl
stc
inc
mov
scas
out
and
mov
imul
nop
jno
into
arpl
js
or
cmp
cmp
pop
dec
dec
xchg
and
ss
xchg
sbb
mov
in
mov
fldenv
mov
and
clc
xlat
and
add
test
pop
sahf
jno
faddl
dec
addr16
mov
adc
test
xor
insl
xor
aam
cmp
and
ss
push
jmp
fwait
mov
push
movsb
and
push
lahf
cmp
dec
xor
lret
int
iret
aas
lea
mov
stc
jmp
les
out
lods
xchg
or
fucomip
mov
aam
xchg
mov
hlt
and
nop
in
inc
addr16
sbb
mov
mov
add
sahf
mov
mov
jge
pop
pop
cmp
mov
fisttpl
roll
ss
js
push
rclb
jle
cmp
pop
sub
lret
add
imull
in
fsubrp
fisttpl
jecxz
stos
in
and
icebp
sub
mov
xor
pop
pop
xchg
xchg
test
movsl
and
push
insl
jle
or
cwtl
mov
jno
push
and
xchg
and
les
into
jb
ret
scas
xorb
je
or
sti
sub
add
push
addr16
xorl
pusha
fwait
pop
out
lods
into
iret
xor
sbb
mov
sub
dec
idiv
cwtl
jb
push
dec
aad
pop
mov
mov
mov
into
jno
push
mov
ficoml
pushf
orb
or
push
mov
pop
inc
adc
std
mov
inc
jb
sbb
sub
mov
lcall
and
stos
adc
xor
sbb
mov
aaa
out
adc
int
mov
push
push
inc
les
data16
and
sub
xchg
cmp
pusha
pop
mov
fldt
scas
fcomip
jae
sbb
pusha
sbb
call
pop
sub
mov
adc
pop
test
xor
dec
loopne
mov
push
mov
in
mov
lahf
or
add
ja
xor
fists
gs
shl
add
and
inc
shlb
jo
in
jno
lahf
hlt
jns
popf
pusha
out
cmp
pop
xor
dec
mov
add
lcall
jle
push
cmc
sbb
lcall
fidivrs
mov
sbb
adc
xchg
daa
cltd
inc
enter
pop
dec
pop
in
arpl
add
cmp
jbe
insb
lcall
pop
sbb
push
dec
data16
cmp
gs
faddl
rcll
insl
pop
mov
fwait
pop
dec
ja
inc
xlat
sti
sarb
xchg
dec
jne
fwait
pushf
addr16
push
insb
or
jbe
fucomi
adc
dec
mov
fdiv
xchg
jnp
pusha
xchg
data16
lods
or
pop
lods
dec
sub
mov
and
and
inc
sbb
and
sahf
push
je
push
std
inc
lea
stos
shrb
idivb
cli
jmp
jge
negb
and
mov
lea
dec
aad
clc
sbb
jb
sahf
adc
mov
cmp
push
or
jecxz
push
mov
push
or
clc
mov
cli
in
addr16
sub
mov
int3
xchg
lods
sahf
inc
mov
sahf
cmp
cmpsb
insl
add
jmp
mov
shlb
popf
sahf
dec
mov
mov
push
or
xor
int3
cmp
xor
xlat
shlb
loopne
push
out
scas
add
sub
cmpsl
pop
xor
sbb
iret
adc
dec
mov
je
lds
sbb
imul
in
pusha
lds
dec
fldt
jae
and
mov
leave
lcall
std
sub
push
jge
push
inc
and
jne
sub
jmp
inc
adc
push
out
in
lcall
dec
enter
imul
add
add
mov
inc
sbb
ret
push
mov
add
dec
and
js
aam
stc
xlat
dec
adc
xchg
pusha
sub
enter
pusha
mov
stos
dec
mov
inc
push
imul
out
and
pop
adc
xor
and
sbb
inc
mov
pushf
shlb
push
in
lcall
popf
jmp
stos
in
imul
xor
stos
mov
mov
pushl
rclb
mov
cmpsl
add
aaa
mov
hlt
fstps
jb
pop
fs
xor
sub
lods
pop
xchg
dec
cmp
loope
into
stc
jge
outsl
movb
sbb
add
pushf
adc
inc
pop
lds
shrl
popf
movsl
fmull
bound
jl
ret
sub
lods
xlat
mov
mov
cld
iret
cmp
mov
out
mov
add
lahf
pop
add
mov
sbb
leave
ss
out
pop
aaa
lea
icebp
adc
int
shl
mov
lcall
leave
ret
movsl
gs
scas
jl
movl
jne
xchg
addr16
xor
and
push
mov
cmp
daa
aas
fsubrl
cltd
fstps
push
enter
mov
mov
mov
imulb
lods
shlb
js
mov
lahf
ljmp
aaa
jno
sub
in
add
scas
xor
xchg
xchg
xchg
jp
mov
mov
mov
push
dec
vpaddsw
inc
iret
mov
inc
repnz
sbb
rolb
shl
jge
ljmp
or
popa
xor
ror
lock
sti
or
dec
nop
push
xor
ret
stc
imul
push
add
fsubrl
jbe
inc
adc
sub
cmc
xor
adcl
or
sub
lret
jnp
aam
cltd
lret
cmpsl
xchg
push
test
or
fisubrl
cmpb
xchg
mov
or
in
setb
outsb
add
adc
in
mov
mov
xchg
les
and
push
add
adc
out
out
adc
rclb
fnsave
mov
mov
mov
hlt
lcall
aas
insl
inc
pop
and
enter
mov
push
imulb
js
inc
inc
cli
push
xorb
ljmp
sbb
andl
jae
jnp
and
jp
mov
and
and
xchg
lahf
push
call
and
jne
ret
fidivs
imul
in
xchg
xor
test
movsb
sahf
mov
mov
nop
lret
leave
sub
ret
and
jne
xlat
inc
inc
sbbl
or
mov
push
mov
loopne
rcll
jns
pushf
dec
dec
mov
cmp
mov
popf
and
mov
out
jl
pop
and
jl
in
out
icebp
mov
mull
sbb
jae
dec
and
movsb
jbe
cmp
add
lret
icebp
imul
mov
lods
mov
add
insb
nop
jge
mov
mov
xor
repz
repnz
insb
inc
push
mov
cmpb
aad
fisubs
xchg
repz
lock
test
xchg
mov
les
jbe
aaa
pop
imull
fisubrs
jne
adc
or
push
shrl
popf
mov
in
cs
jg
shrb
xchg
xchg
push
inc
jne
sahf
xor
xchg
iret
imul
sbb
adc
push
pop
add
sbb
ficoms
xor
mov
sbb
sti
outsl
push
loopne
jbe
xor
addr16
dec
shlb
mov
aad
sub
pop
pop
mov
arpl
sub
mulb
dec
dec
mov
pop
fs
xchg
dec
xchg
dec
outsb
fmuls
jns
cmp
sbb
mov
pop
push
sti
shlb
mov
movsb
sbb
dec
cmp
lods
in
in
sub
add
imul
lcall
xchg
cli
inc
push
dec
and
push
outsb
add
adc
adc
jl
je
and
clc
mov
sbb
fnsave
es
das
adc
ds
mov
push
adc
mov
pop
mov
test
sub
pop
cmp
sbb
cmc
mov
inc
jp
sbb
pop
mov
sbb
fcoml
xchg
pop
mov
cmp
mov
xchg
ficomps
int
mov
lret
in
arpl
cmpsb
cmpsl
sub
int3
xor
inc
orb
pop
inc
imul
inc
out
cmp
adc
je
test
jb
bound
xor
das
lods
lea
cmpsb
cs
aas
jne
cmp
xor
pop
cltd
out
mov
push
pop
or
mov
xchg
insb
std
adc
adc
jmp
dec
sbb
push
aaa
imul
cmp
in
inc
aaa
jno
xchg
mov
pop
sub
xor
cltd
clc
push
loop
cmp
mov
jle
mov
xor
shll
insb
stc
andl
xor
pushf
xor
mov
call
add
or
mov
cmpsl
stc
rorl
adc
and
mov
inc
int
orl
jl
inc
cld
push
pop
clc
ret
adc
test
icebp
adc
mov
dec
dec
fdivr
and
dec
inc
pop
in
mov
fiadds
push
cli
sub
push
and
add
insl
mov
add
das
rclb
adcb
mov
jae
imul
sti
mov
xor
stc
shlb
sahf
push
test
push
ret
and
cwtl
cmp
jne
mov
mov
outsb
push
ds
or
cltd
in
aaa
mov
adc
cmp
lea
sarb
andb
ja
ret
mov
or
push
or
inc
xchg
insb
mov
jae
pop
test
mov
mov
das
mov
mov
or
icebp
mov
into
sub
jp
lret
mov
pop
xchg
jno
rolb
cmpsb
add
shlb
or
push
in
popf
in
movsb
pusha
loop
push
clc
xchg
jb
aaa
test
imul
sub
mov
scas
push
fcoms
cld
add
and
add
sbb
test
pop
push
sbb
sub
fbld
jmp
xor
push
mov
arpl
lock
mov
rcrl
jecxz
mov
cwtl
pop
lds
into
into
sbbl
jle
sbb
outsb
cmp
push
dec
enter
dec
aas
sti
stos
mov
popf
shll
je
repz
sbb
rol
push
mov
cld
add
adc
incb
mov
xorl
mov
and
dec
or
push
adc
jge
aad
jae
pushf
jmp
sbb
push
lahf
inc
sbb
or
jne
scas
xlat
sbb
push
data16
lock
and
pop
dec
arpl
mov
daa
andl
dec
xchg
ror
mov
mov
loope
cltd
mov
les
movsl
inc
mov
les
popa
mov
pop
sbb
sub
insl
lods
popa
icebp
out
ds
mov
adc
mov
jp
rorb
and
rcll
mov
sahf
cmpsl
inc
sub
cmp
cmp
push
rorl
bound
test
frstpm(287
les
fnsave
mov
mov
pop
out
or
stc
and
xchg
test
xor
jae
in
lahf
hlt
push
ret
fisttpl
cmp
mov
div
dec
sub
adc
arpl
mov
cmp
dec
lcall
mov
adc
test
or
and
sbb
test
aad
enter
pop
aaa
shlb
push
dec
aam
outsb
lea
and
imull
pop
add
hlt
xchg
enter
in
andl
pop
loop
stos
jp
or
lods
adc
or
push
and
mov
sahf
rsm
mov
mov
add
mov
sti
inc
jo
repz
push
es
add
inc
pop
hlt
pop
fwait
inc
pop
iret
movsb
data16
add
cmp
inc
and
aas
ja
lret
mov
cmp
mov
add
xchg
mov
and
xor
shlb
push
jo
mov
mov
fimull
cld
mov
add
mov
xor
testb
sti
pop
ds
popa
sub
and
mov
mov
pushf
pop
mov
dec
sbb
xor
vpsubb
mov
cld
cmp
pop
test
bound
sbb
jnp
push
pop
jo
movsl
addr16
sahf
mov
orl
popf
mov
add
jmp
xchg
sub
xor
or
ss
dec
inc
xor
or
push
out
out
shlb
push
add
lods
fucomp
inc
jmp
or
or
and
push
push
mov
lock
add
xchg
sbb
out
xor
shrl
data16
loop
xorb
push
pusha
into
cmp
pop
in
xchg
push
mov
push
jecxz
push
dec
jmp
arpl
jmp
jg
pop
cltd
dec
dec
xchg
fs
or
mov
movsb
fxam
xchg
mov
jmp
jb
fcmovnbe
ret
mov
sub
xchg
rolb
adc
js
dec
push
push
test
jmp
hlt
mov
popf
jno
lahf
push
lret
in
lret
mov
jnp
jnp
rcll
testb
popa
fisubrs
mov
sahf
dec
push
xchg
enter
or
add
xor
sub
in
shrl
nop
mov
xchg
inc
mov
movsl
lcall
mov
pop
dec
mov
shlb
rcpps
cs
fiaddl
and
inc
cmpsl
sub
xor
subb
stc
mov
int3
push
pop
in
and
cltd
test
and
fistps
mov
add
xlat
sbb
jmp
pop
test
addr16
outsl
mov
cwtl
repnz
sahf
mov
mov
lret
insl
sub
leave
imul
jl
adc
fisttps
in
mov
sub
or
mov
dec
cmc
imull
sub
jecxz
std
jae
adc
aad
pop
pop
xchg
ror
mov
xlat
or
jmp
stos
jbe
xor
jg
mov
aam
adc
sub
imul
loopne,pt
and
enter
das
ret
jnp
jp
mov
fistl
jge
mov
sahf
and
push
in
outsl
daa
mov
xchg
ljmp
inc
mov
std
jg
push
js
mov
sub
popf
cmp
lock
std
clc
inc
iret
cmp
fcmovnu
outsl
add
xor
xor
cmp
cmpsl
ss
inc
mov
imul
int
cmp
cs
jo
loopne
jae
pop
adc
jg
ja
push
ja
movsl
or
imul
pop
lock
jge
pushl
xchg
out
jb
add
sbb
scas
xor
and
xchg
sbb
mov
call
sbb
and
lret
add
adcb
add
sarl
lods
hlt
pop
dec
jbe
pop
out
and
adc
iret
scas
dec
sub
inc
mov
ds
es
pop
cmpsl
push
pop
and
mov
movsb
ja
pop
cmp
imul
inc
ret
sbb
icebp
xchg
incb
mov
ss
mov
inc
stos
sbb
adcb
push
cmp
mov
sbb
xchg
and
push
pop
push
stos
add
int3
jns
dec
inc
std
orb
add
clc
dec
dec
dec
shll
jae
sub
adc
pop
sahf
sub
and
pop
pop
loope
pop
inc
test
xor
faddl
sub
lods
ss
jns
out
jne
cmp
test
out
divl
sub
out
in
jp
sti
dec
ljmp
mov
inc
sub
xchg
adc
inc
sti
js
add
add
xor
outsl
addr16
jne
mov
in
dec
fisttps
sub
pop
ret
mov
sbb
cmp
ret
sbb
jp
addr16
push
fwait
aaa
or
movntq
push
dec
cmp
xlat
sub
shl
sar
imul
push
imul
pop
xor
cli
mov
dec
and
push
cs
adc
cli
jno
sbb
and
fs
push
inc
aam
rcrb
outsl
aaa
repnz
ficompl
icebp
mov
pop
mov
or
mov
mov
pop
dec
push
xor
inc
push
in
sahf
push
mov
cli
xchg
cmpl
sar
and
mov
mov
add
and
mov
xchg
js
fdivrs
add
int3
mov
pop
sbbb
jle
inc
lods
mov
xchg
adc
add
jl
jmp
imul
fmuls
cld
cwtl
ret
daa
mov
rcrl
and
cltd
jge
or
fwait
add
xchg
jle
mov
insl
add
xchg
cs
sub
and
jecxz
aas
aad
leave
gs
in
jp
pop
adc
dec
movsl
pop
fldenv
inc
insl
xlat
push
bound
ljmp
rclb
test
hlt
lahf
es
loop
push
jecxz
call
or
mov
notl
mov
push
stos
aad
out
xlat
enter
mov
pop
lods
fstcw
push
ds
addr16
inc
xor
clc
arpl
adc
loop
adc
jo
xor
loope
je
fs
pushf
ret
cmp
jecxz
idiv
mov
jl
push
dec
scas
fimull
test
pop
mov
or
imul
xchg
in
push
fisubl
insl
jg
and
add
cmpsb
movsb
lods
ret
cli
sarl
add
dec
dec
xor
outsl
xchg
add
fdivrs
shlb
cmp
dec
loop
push
ljmp
xchg
rcll
mov
dec
fcmovnbe
inc
call
hlt
sarb
cld
sub
lahf
sub
inc
jp
mov
std
xchg
xlat
mov
cmp
mov
jae
xor
cmc
ss
outsb
jae
fnstenv
test
inc
adcl
mov
test
adc
add
adcl
pop
scas
or
add
xor
ljmp
adc
jp
add
insl
or
out
idivw
push
pop
lret
lcall
jnp
pop
das
add
daa
or
lock
js
addr16
jb
xchg
enter
jge
lret
das
pop
sahf
pop
adc
push
movsl
dec
push
outsl
sbb
sbb
lea
gs
adc
push
push
dec
filds
fidivs
movsb
dec
adc
dec
sbbl
fwait
push
lock
nop
add
add
test
and
stos
lahf
xchg
dec
xor
push
inc
or
xchg
inc
adc
loope
push
xchg
imul
adc
add
in
mov
cmp
fiaddl
mov
fnsave
pop
jns
inc
rorl
and
jbe
adc
mov
in
idivl
xor
out
in
sbb
or
cmpsl
cmp
ret
in
loop
jbe
js
push
out
fcomps
lcall
cmpsb
or
pop
inc
xor
cmp
imul
sbb
shl
fs
insl
ret
loope
jo
jo
xor
jo,pt
cmp
ljmp
add
add
out
xchg
je
stos
scas
pop
or
mov
push
xchg
push
adcb
xor
mov
sbb
jmp
inc
jle
push
xchg
inc
ss
push
dec
mov
pop
iret
dec
xchg
into
in
pop
and
imul
jge
outsl
imul
push
ficompl
outsb
jle
dec
sub
mov
xor
and
pop
testl
cmp
push
push
xchg
lods
arpl
cmp
repnz
jns
xchg
je
jl
daa
cmp
push
gs
fistpll
out
mov
aas
push
inc
cmpl
cld
mov
mov
dec
add
or
xchg
xor
xchg
cmpsb
xchg
into
ret
push
add
imul
rcr
mov
adc
lea
dec
sbb
insb
adc
pop
adc
fcomip
insb
rcrl
aaa
mov
cmpsb
xchg
mov
xor
push
and
addb
pop
jo
paddd
dec
inc
aam
pop
movsb
ja
xor
hlt
dec
lods
mov
mov
popa
xlat
js
mov
outsb
pop
xlat
scas
shll
pop
push
and
je
jo
jp
lret
dec
push
lods
push
mov
mov
adc
jg
jge
sbb
aad
into
xor
fcoms
ljmp
push
push
pushf
xchg
push
sbb
das
inc
push
xchg
or
daa
arpl
punpckhdq
xchg
rorb
sarl
repz
or
jg
in
out
out
ljmp
das
jb
cmpsl
repz
mov
int3
es
xchg
mov
lret
push
int3
enter
xor
fmuls
movsl
imul
mov
popa
and
fnstcw
lea
int3
inc
cltd
loopne
pop
dec
push
fstl
shrl
add
fs
jbe
xchg
add
cld
daa
cmpsl
mov
pop
ja
xchg
shll
jo
xchg
jo
pop
inc
push
or
mov
je
mov
push
xor
add
mov
bound
xchg
dec
add
jae
ss
mov
out
pop
mov
imull
push
out
cmp
bound
mov
in
mov
xchg
xchg
sub
inc
in
fbld
inc
add
push
lret
aam
repz
xchg
out
bound
add
cmpsb
xor
outsl
insl
in
sub
dec
dec
daa
xchg
std
cmpsl
stos
mov
pushf
adc
ficoml
stos
hlt
mov
adc
clc
push
sub
cs
sbb
lods
outsl
mov
mov
insb
in
sub
insb
or
iret
jecxz
and
fwait
push
pusha
ljmp
mov
dec
jmp
xchg
lret
jl
and
mov
mov
stos
pop
xlat
loope
sub
lcall
dec
mov
push
addl
or
xor
fstpt
dec
pop
fisubs
popl
mov
shrl
cmp
sbb
pop
arpl
dec
jo
sub
mov
ja
neg
sub
sub
jle
mov
adc
jl
scas
ss
adc
adc
or
mov
mov
inc
fcmovnbe
in
jp
loopne
mov
adc
push
mov
test
jp
inc
push
mov
dec
or
mov
xlat
inc
mov
cltd
sbb
jg
sbb
sub
mov
les
les
mov
inc
and
cmpsb
inc
shr
inc
movb
or
adc
xchg
movsb
or
sbb
lahf
or
fwait
insl
or
fsubs
lret
fwait
xor
dec
xchg
enter
arpl
cwtl
or
adc
mov
lock
out
mov
lret
fildl
mov
jmp
test
std
lock
subb
ret
fdivl
mov
iret
jno
dec
xor
lcall
test
cmc
pop
push
clc
or
jbe
cmp
paddusb
lret
inc
cmpsb
stos
aas
xor
ffreep
jnp
shlb
decb
sub
aaa
insl
bound
and
repnz
push
lcall
call
bound
jnp
bound
mov
imul
inc
insl
cli
or
lds
cmp
inc
mov
fmull
mov
xchg
or
and
aas
cmp
mov
or
inc
ret
arpl
movsl
adc
test
mov
je
xlat
repz
shll
sahf
adc
add
adc
pushf
sbb
out
pushf
loopne
sbb
add
xor
mov
add
add
jae
ss
mov
or
movsl
cmpsl
inc
leave
lods
dec
test
pop
sub
push
pop
fldenv
push
mov
pop
cltd
ds
in
cmpb
daa
sbb
jge
fmuls
das
lds
push
cmp
mov
loop
je
mov
push
ljmp
cmc
jns
jns
push
es
lock
mov
xchg
mov
mov
xor
aad
sub
into
mov
add
sahf
aam
pop
stc
scas
cmp
jo
sahf
bound
imul
jmp
push
shlb
push
mov
ret
dec
pusha
mov
push
xor
sbb
jae
mov
and
add
sub
xchg
push
call
data16
push
testl
mov
hlt
dec
push
jb
ja
xchg
jg
int3
inc
xchg
add
dec
fsubl
addl
js
sbb
gs
pop
dec
aaa
xchg
ja
dec
jo
mov
std
jle
outsb
stos
faddp
scas
leave
clc
ds
and
mov
bound
add
sbb
or
cwtl
into
ja
test
sub
adc
inc
leave
xchg
dec
cli
xor
aad
fnstsw
dec
fists
cmp
cmp
mov
jb
cmp
add
in
mov
sbb
jge
jbe
jge
lret
cmc
mov
mov
xor
mov
push
lods
sti
pop
std
xlat
adc
loopne
loopne
shlb
lret
call
psraw
arpl
cmp
call
jg
cli
lock
cmp
dec
jns
cwtl
mov
dec
aaa
outsl
dec
fmulp
mov
fidivl
adc
pusha
push
push
dec
push
loope
pop
mov
and
or
popa
dec
and
sbb
sti
lds
xor
repnz
xchg
dec
jmp
inc
fs
mov
mov
xor
popa
repz
arpl
inc
std
aaa
sub
inc
repnz
inc
sub
adc
cmc
xor
sbb
cld
adc
leave
clc
jmp
push
lret
arpl
addb
lock
pop
scas
dec
cwtl
cmp
nop
add
or
mov
jbe
loopne
fs
mov
cmpl
jb
inc
test
xchg
push
fdivp
int
pop
iret
cmpsl
imul
sub
push
aaa
fisubs
xchg
lea
sub
mov
roll
test
in
push
mov
outsb
lahf
jl
fs
jge
btr
hlt
repnz
aas
fldcw
lods
xlat
mov
in
imul
mov
in
inc
call
add
out
or
add
stos
imul
neg
mov
mov
or
clc
push
add
sub
push
mov
push
daa
imul
dec
pop
push
xchg
loopne
add
dec
ret
jp
scas
mov
mov
mov
sbb
xor
push
pop
popf
xchg
call
popl
repnz
pop
xor
in
push
out
hlt
ja
dec
xor
cltd
shrl
xor
mov
mov
scas
xor
lret
sbb
and
adc
inc
xor
xchg
inc
fwait
sub
jge
test
fwait
cmp
jle
test
sbb
mov
cld
push
fs
inc
cmp
and
jne
imul
stos
dec
das
pop
mov
jo
xor
adc
pop
adc
adc
and
mov
lock
imul
jp
push
imul
lcall
leave
lahf
cmp
test
mov
sub
dec
test
adc
push
adc
pusha
fucomp
test
pop
ror
add
cmc
jno
dec
subb
cmpsl
std
ss
ds
les
xor
lods
jg
les
bnd
xchg
cld
mov
insb
imul
xorl
mov
leave
mov
mov
mov
adc
xchg
cmpsl
lods
into
lock
test
sarb
mov
rclb
xchg
pop
ret
push
dec
adc
cmp
rcll
sub
pop
inc
or
fbstp
clc
xchg
xchg
push
pop
subb
fcomps
icebp
je
int3
fimull
hlt
ljmp
xchg
aam
jne
add
inc
stos
pop
push
mov
cmp
mov
or
mov
or
js
shr
adc
sbb
in
testb
cmp
dec
insl
cli
test
arpl
dec
mov
mov
jns
andl
mov
lds
jbe
outsl
lahf
sub
clc
pop
and
jns
push
xor
imul
cwtl
dec
les
mov
cmp
leave
les
pop
add
push
push
stos
pop
sbb
push
dec
test
cmpsb
jle
fs
jae
ds
push
pushw
sahf
jno
andb
push
stos
shll
dec
lcall
xchg
test
jae
nop
imul
pusha
add
inc
pop
orb
movsl
and
cmpsl
sbb
out
xchg
jnp
rolb
mov
sbb
movsb
sbbl
scas
lahf
imul
sub
add
faddl
fcom
aas
flds
cwtl
scas
scas
adc
dec
push
je
je
cmp
mov
sbb
in
sub
sti
pop
mov
ficomps
push
outsl
iret
jnp
sub
add
adc
add
ss
and
sub
and
stos
mov
cmp
jg
stos
insl
sub
xor
pop
xchg
mov
cmp
bound
adc
jl
call
xorb
sub
jmp
jle
lds
hlt
cs
adc
mov
lcall
add
and
cmp
aas
repnz
repz
or
mov
mov
mov
mov
xor
jp
cmp
dec
cmp
sbb
mov
popa
xchg
pop
fsubrl
sub
or
xchg
bound
jb
xor
out
outsl
cltd
imul
rcr
cwtl
mov
jbe
test
jo
mov
xor
into
mov
ffree
sahf
lods
sub
pusha
mov
pop
pop
shrb
push
or
jmp
mov
test
fsin
test
and
add
lods
enter
fmuls
icebp
outsb
inc
repnz
xchg
push
das
or
test
pop
xor
shll
mov
shrl
cltd
ljmp
pop
xor
loopne
pop
repnz
int
sbb
orl
mov
jl
fadds
enter
test
nop
js
dec
sub
and
out
add
cmp
lret
inc
mov
loop
in
call
movsb
or
mov
push
pop
sar
mov
mov
mov
test
add
lahf
stos
imul
hlt
fisttps
mov
into
lods
loopne
movsl
inc
jb
sbb
out
hlt
ret
shlb
fidivrs
cmp
cld
mov
lds
cmpl
fwait
sbb
stos
ljmp
sub
out
das
imul
lahf
cmc
roll
bsf
popa
push
clc
leave
cmp
xchg
jmp
movsb
out
pop
je
jmp
mov
cld
mov
repz
call
push
pop
cmc
and
into
and
nop
inc
jmp
daa
lahf
pop
push
in
ss
adc
adc
or
bound
lret
loop
repz
scas
lcall
xchg
das
sub
test
rclb
xor
aas
mov
out
jns
push
pop
jle
aam
dec
enter
mov
js
pop
sti
mov
xor
int
dec
xorb
jle
sti
ds
mov
rclb
notb
mov
dec
repnz
jmp
negw
mov
fwait
jae
mov
in
mov
xchg
push
hlt
outsl
mov
add
add
xchg
or
imul
gs
jg
or
add
fmulp
fldt
xchg
push
in
subl
inc
cmp
sbb
and
lock
iret
dec
xchg
cmp
xor
cltd
aas
rclb
ret
pop
ficoms
nop
jbe
icebp
mov
daa
scas
inc
push
ret
lods
add
mov
shrb
xor
xor
xchg
adc
dec
roll
lret
xchg
loope
sti
pop
mov
sub
pop
inc
call
mov
repz
movsb
mov
inc
lret
xchg
sub
adcl
sarl
xor
sbb
cmpsb
dec
out
mov
adc
fcmovnb
mov
xor
mov
dec
rorb
pop
cwtl
not
mov
push
cmpsl
xor
loopne
and
xchg
jns
xlat
in
push
adc
sub
inc
repnz
jns
fwait
mov
fnstenv
inc
pushf
xlat
nop
nop
lock
jmp
out
jg
mov
cmp
pushf
test
lds
push
or
and
je
fnstenv
jnp
loopne
in
and
push
sub
popf
jle
jle
cwtl
inc
pop
fiaddl
push
out
dec
and
fstl
movsb
scas
lock
mov
test
jns
popa
mov
push
and
lods
pop
sbb
mov
addr16
push
jp
pushf
or
ret
ret
jp
lods
jns
dec
and
mov
andb
add
xchg
pop
mov
mov
xor
out
sub
es
pop
ficoml
stos
icebp
xor
cmp
je
test
out
pop
push
insl
pop
cmp
sbb
rorb
out
lret
out
arpl
adcl
xor
xor
xchg
adc
in
ficompl
mov
xchg
cli
and
or
jae
jp
fwait
lods
insb
adc
adc
aad
jg
repz
loop
push
push
pop
outsb
xchg
mov
pop
pop
sub
call
xor
sbb
xchg
icebp
in
mov
ret
mov
dec
mov
cmp
and
pop
aam
and
sub
xchg
mov
and
dec
arpl
jb
loope
jmp
or
ja
nop
inc
pop
sbb
aaa
mov
imul
mov
rcrl
add
mov
cmp
not
test
aas
out
sbb
ret
orb
and
push
pop
lods
je
arpl
daa
lea
dec
mov
imul
inc
pop
dec
and
xchg
sub
jp
fidivs
in
mov
jmp
jg
test
in
insb
cmp
aad
pop
sub
cs
fnstenv
jo
add
hlt
mov
fstl
jae
push
mov
and
adc
pop
cltd
fwait
in
cmp
repnz
iret
je
mov
or
mov
sub
mov
dec
stc
les
mov
mov
lret
out
in
xor
xchg
mov
repz
fisttpl
aad
call
or
xchg
sbbl
sub
fnstsw
jne
push
or
sbb
dec
mov
pop
leave
scas
addr16
mov
inc
aam
ss
mov
and
push
push
aam
or
xor
in
scas
sti
mov
mov
sub
add
aad
sub
fiaddl
dec
call
add
ss
mov
lock
nop
mov
outsl
mov
scas
xchg
pop
xchg
pop
sbb
sbb
inc
iret
jns
cmp
cmp
movsl
inc
cli
cs
cmp
pop
fcoml
pop
xchg
aad
mov
les
adcl
sbb
loopne
mov
jg
mov
mov
les
mov
aaa
inc
pop
ret
sub
movsl
imul
push
add
lock
loopne
cmp
cs
cmp
cmc
jnp
sub
fisubl
pop
dec
imul
sub
or
divb
gs
fisubrs
cltd
fs
cltd
jo
cmp
jnp
xchg
pop
pop
mov
mov
mov
arpl
stos
sub
or
and
xor
pusha
shlb
cmp
arpl
push
xchg
adc
aad
int
mov
out
sbb
iret
cli
or
push
xlat
mov
fwait
jne
shrb
xchg
and
in
movsl
adc
rcll
les
mov
pop
mov
shll
loope
adc
ja
das
addb
lcall
jns
imul
push
mov
scas
mov
jg
out
pop
xlat
out
cltd
cld
movsl
test
inc
aam
push
pop
mov
cmpb
adc
sub
push
adcl
imulb
jp
shlb
call
mov
imull
cmp
inc
mov
js
add
adc
dec
std
adc
fimull
les
cmc
sub
mov
fsts
rorb
test
jbe
out
test
movl
loope
popl
scas
aad
add
fsubs
xchg
daa
sub
push
or
push
sbb
in
dec
pusha
ret
jmp
mov
push
mov
in
xor
pop
sti
in
dec
push
shll
sub
icebp
loop
xor
ficoml
mov
int
icebp
movsl
lcall
xchg
sub
outsb
imul
xchg
nop
fs
shll
fdivl
pusha
mov
pop
movsl
aad
pushf
int
sub
add
jle
mov
test
sti
mov
mov
lods
testl
cmpsb
in
pusha
pop
sbbl
popf
xchg
data16
sarl
outsb
js
add
scas
cmp
outsl
orl
dec
push
in
inc
adc
xlat
sbb
mov
pusha
xor
mov
or
inc
lret
addl
xchg
mov
push
and
leave
jge
pop
adc
pop
and
into
mov
xchg
jne,pn
data16
ss
sbb
js
ljmpw
stos
iret
inc
pop
push
inc
jle
test
cmpsb
mov
ror
dec
das
test
jg
adc
data16
movsb
inc
testl
xchg
cltd
jecxz
inc
jo
mov
loopne
iret
mov
loop
dec
scas
addr16
mov
mov
stos
insb
fidivs
adc
js
call
xchg
lret
xchg
or
cmp
gs
add
sub
pop
cmc
mov
adc
mov
push
cwtl
mov
pop
sub
pop
test
andb
in
stc
adc
jne
int
div
outsb
out
inc
dec
pop
mov
xchg
fwait
sti
dec
cmp
cmp
jne
sbb
push
test
enter
aad
loopne
out
stos
mov
jle
inc
jnp
aaa
pop
frstpm(287
aas
out
leave
pop
and
aad
mov
push
push
mov
adc
outsb
nop
mov
sahf
pop
lods
mov
adcb
nop
lds
or
mov
xor
push
das
cmp
test
and
int
pop
aas
ficoml
shlw
and
pop
cmp
jle
adcb
dec
fwait
adc
mov
clc
dec
mov
mov
adc
sbb
adcb
xor
push
or
arpl
cmp
sbb
jbe
add
popl
es
frndint
add
mov
and
dec
sub
pop
mov
lods
or
jno
repnz
lock
dec
sub
outsl
jns
cmp
in
ja
and
xorl
mov
dec
or
pop
jg
mov
pop
jns
inc
outsb
xchg
sbb
test
movsl
notl
rcrl
out
push
xchg
loop
nop
dec
lcall
pop
ret
pop
mov
or
or
sahf
xlat
mov
pusha
xor
shl
dec
xchg
sbb
fnstenv
int
lahf
loope
cmp
in
cmp
outsb
sub
push
js
mov
mov
push
xchg
clc
inc
in
xchg
popf
mov
jecxz
and
data16
and
push
mov
dec
cmc
add
scas
adc
xor
jle
test
cmpsl
pop
insl
pop
sub
rcl
scas
or
adc
pop
inc
data16
mov
int
loope
inc
lcall
push
sarb
insb
mov
adc
fisttpll
pop
lods
or
fwait
ret
call
subb
lea
lahf
je
outsb
dec
cmp
adc
jno
sbb
mov
add
xchg
aad
add
pop
ja
jecxz
push
push
inc
cmp
aas
xor
das
cltd
popa
mov
and
fsubrl
les
xchg
and
xchg
cmpsl
mov
inc
lods
sub
std
rcl
ljmp
jmp
xchg
mov
push
pop
sub
gs
and
andl
das
pop
lods
shlb
inc
inc
sbb
cwtl
sbb
jne
xchg
inc
aad
sub
sbb
mul
jo
jge
mov
sbb
push
aaa
jno
jmp
jp
cmp
sub
arpl
out
insb
add
subb
mov
mov
mov
js
mov
xor
fwait
popa
mov
add
dec
bound
push
stos
xor
mov
lods
xor
data16
xchg
addr16
jg
mov
imulb
gs
arpl
and
dec
and
into
dec
xor
test
jo
jp
pmullw
call
outsl
jecxz
repz
out
dec
pusha
mov
ret
jl
test
push
addl
scas
test
insb
iret
push
add
aas
pop
mov
imulb
mov
incb
fwait
cmp
mov
mov
adc
push
sbb
pop
mov
jae
clc
ret
ljmp
jg
inc
lret
xor
push
dec
int3
xchg
shlb
insl
jns
insl
cmp
sbb
out
orb
mov
rorl
mov
push
mov
adc
mov
mov
jg
pop
pop
and
mov
mov
cmpsl
leave
mov
mov
insb
mov
nop
xchg
mov
outsl
or
in
iret
into
std
fwait
pop
mov
ficoml
cmp
dec
loope
ret
sub
jle
imul
ret
int
push
sbb
fistpll
push
cmp
and
lds
pusha
stos
jae
sub
fidivl
dec
popa
jbe
orb
cwtl
gs
cmpsl
mov
jae
mov
sbb
mov
test
sbb
inc
lcall
pop
fs
jns
es
shrb
in
rcrb
test
lock
mov
mov
ss
inc
pop
cld
lret
and
mov
mov
add
enter
add
push
repz
jmp
arpl
add
cwtl
fisubs
add
add
push
out
or
in
cmp
mov
aas
outsl
mov
fnstenv
push
in
mov
adc
insl
sbb
je
dec
out
and
filds
imull
pushf
scas
sub
test
aam
mov
mov
dec
sahf
outsl
ficoml
or
pusha
sbb
sti
gs
jne
mov
jp
testl
cmp
jnp
jg
cmp
rclb
scas
jne
imul
movsb
in
cwtl
xor
pop
sub
arpl
cmp
test
ja
loop
insb
pushf
call
pop
cld
jne
mov
repnz
cli
lds
pop
xlat
mov
push
loopne
outsl
es
inc
shlb
insl
jbe
subb
bound
ret
mov
arpl
mov
adc
out
adc
adc
jecxz
and
inc
push
cld
sarl
adc
rol
or
add
xchg
imul
mov
or
push
mov
or
mov
push
xchg
std
mov
aam
adc
adc
adc
shll
dec
outsl
push
jle
mov
mov
xchg
sti
adc
xchg
jl
or
pop
pop
add
call
lods
jl
ljmp
jo
fnstenv
or
lret
sbb
adc
gs
insb
mov
lods
lret
popa
clc
sahf
bound
jle
and
jp
outsl
lcall
inc
dec
xchg
pop
xor
add
mov
xchg
or
pop
out
pop
repnz
pop
mov
push
pop
mov
je
xor
pop
mov
push
out
pop
and
push
xchg
movsl
shrb
jno
adc
jge
xchg
js
push
adc
xchg
pop
lahf
leave
jb
dec
or
push
adc
cmp
movsl
lret
sarb
pop
rcll
push
adc
xchg
dec
mov
enter
mov
repz
outsb
or
fcomps
pop
sti
cmp
std
cs
test
je
mov
nop
gs
je
das
orb
jmp
stos
sub
outsl
jle
nop
sti
test
sbb
dec
add
xor
dec
insl
mov
fistpl
or
aaa
outsl
ret
adc
xor
pop
cltd
in
movsl
mov
daa
jb
jge
cmpl
and
in
ja
jg
sbb
das
pop
xor
icebp
das
xchg
sbb
adcl
xchg
mov
cmp
add
mov
mov
into
dec
cmpb
xchg
mov
out
adc
pop
xor
mov
sub
sbb
mov
add
stos
or
jnp
cmp
sub
and
sub
sbb
pop
imul
call
mov
inc
movsl
adc
sub
push
sbb
fs
fadd
jbe
nop
in
out
sbb
fdivrs
inc
test
or
adc
mov
test
push
icebp
outsl
cmp
jae
dec
sub
push
push
push
adc
cmpl
pop
adc
out
jle
lahf
out
jge
lahf
repnz
dec
add
sub
adc
jne
xchg
aam
sub
jo
and
sub
cmpsl
imul
rcll
sub
mov
outsb
fidivrs
mov
les
xor
mov
cmp
jno,pt
mov
mov
mov
bound
cmp
pop
mov
lea
pop
push
fldcw
lods
clc
xchg
adc
xchg
ds
cmp
insb
mov
arpl
ljmp
fwait
out
mov
cmpsb
inc
cwtl
in
adc
sbb
sbb
and
in
pusha
and
push
push
mov
ljmp
pusha
jl
adc
pop
and
out
inc
into
in
scas
sti
mov
fstps
or
outsl
ja
mov
jl
sub
mov
loop
dec
sub
ret
movsl
and
pushf
xchg
xchg
int3
stc
dec
orb
xchg
aaa
sar
outsl
cmpsl
push
jmp
jae
pop
shrl
stos
jns
pcmpeqb
push
add
mov
mov
sbb
mov
cmpsb
imul
loop
mov
into
cmpsb
cli
mov
arpl
add
mov
out
xchg
add
adc
lret
adc
push
aas
cltd
subb
lds
lahf
inc
jecxz
cmp
lods
sbb
sbb
hlt
mov
mov
cmp
mov
cli
pop
aam
iret
add
pop
lcall
mov
mov
pop
mov
push
ljmp
inc
xchg
fisttpll
outsb
sub
xor
movsb
xor
in
xchg
adc
cmp
arpl
repz
movsl
cmp
enter
mov
popf
pop
inc
or
in
and
sar
jg
addl
out
jecxz
xchg
rcr
ss
notl
sub
mov
jge
sub
cmpsb
sbb
jnp
test
pop
sbb
decb
gs
stos
lea
fstpl
xlat
dec
mov
ret
pop
fistl
mov
sub
inc
jb
outsl
cmpsb
mov
or
leave
cld
scas
jl
out
inc
push
add
inc
jae
and
dec
inc
icebp
lods
ss
jge
shll
loop
push
and
inc
es
fisttpll
aas
fs
pop
add
das
lret
daa
jnp
js
lds
lock
mov
dec
mov
pop
add
pop
lahf
adc
rorl
ret
sbb
fstl
mov
popa
ja
xchg
mov
xor
adc
jns
jge
das
mov
out
and
xor
aaa
cmpsl
shll
in
mov
daa
push
mov
jo
js
mov
mov
mov
mov
mov
hlt
sbb
sub
loope
pop
adc
movsb
xchg
jmp
dec
lds
movsb
stos
xchg
pop
enter
stos
pushf
movsl
mov
idivb
dec
fwait
xchg
mov
loopne
sbb
gs
mov
fldcw
aaa
daa
pop
cmp
mov
xchg
jp
xchg
rclb
lds
push
sti
aam
jnp
sub
adc
jo
adc
mov
insb
imul
and
fldcw
ret
movsb
jae
test
push
nopl
mov
dec
out
push
inc
dec
add
dec
sub
and
mov
mov
cmp
enter
addl
xchg
les
out
push
cltd
out
stc
inc
movsb
mov
enter
mov
filds
scas
fmuls
add
push
aam
in
dec
jge
pop
add
xor
and
push
jns
mov
jb
aaa
add
pop
mov
mov
inc
xor
pop
xchg
inc
push
push
je
sahf
lahf
stos
adc
test
push
dec
pop
scas
sub
test
sbb
sahf
xor
int3
mov
fwait
mov
je
mov
add
jp
arpl
insb
int
adc
js
dec
aam
out
sti
push
or
mov
aaa
pop
sti
insb
mov
gs
sbb
sbb
push
xor
into
fcompl
popa
push
jge
fimull
inc
divb
mov
jnp
shr
std
in
dec
loopne
pop
push
scas
movsb
xchg
sub
pushf
lock
sub
inc
adc
mov
lea
sub
mov
fs
cltd
fdivs
or
addr16
loop
loope
loop
mov
mov
pop
jnp
pop
repnz
sub
push
mov
mov
xor
stc
cltd
inc
push
insb
test
jo
sti
insb
push
shrl
mov
das
inc
xorb
adc
push
addr16
adc
jbe
xchg
or
rolb
and
hlt
jnp
adc
data16
loope
sub
fstpl
out
fsubp
sti
test
pop
cmp
inc
jp
int3
xor
mov
jg
lods
xchg
mov
mov
lds
bound
push
decb
sub
dec
scas
adc
mov
xchg
movb
dec
jae
or
mov
out
bound
jge
mov
jecxz
mov
adc
pushl
leave
ret
pop
insb
mov
cld
pop
insl
aad
frstor
inc
testb
cmc
fildll
gs
and
push
jg
and
inc
pusha
shl
loope
push
jo
movsb
push
mov
outsb
sub
add
scas
inc
testl
movsl
ds
adc
mov
aad
push
pop
add
push
jnp
es
iret
mov
dec
fistpl
sbb
add
loope
cs
xchg
pop
dec
jg
pop
clc
cmp
idiv
fsts
push
dec
arpl
add
leave
cs
jae
clc
fmul
insb
pushl
sbb
mov
pop
cmpsl
outsl
push
icebp
clc
mov
popa
add
and
pop
imul
aam
xchg
pop
out
mov
sti
push
insb
cmp
xchg
repnz
mov
andb
inc
insb
mov
fcmovu
or
js
les
add
fisttps
sarl
mov
loopne
icebp
test
pop
stc
adc
clc
xlat
lcall
cwtl
mov
imul
rcl
jg
shr
fs
inc
idivl
add
cmp
jl
std
clc
mov
cmpsb
or
movsb
pusha
dec
cli
das
cltd
mov
es
adc
pop
mov
fs
dec
or
xor
out
and
in
stc
cmp
mov
xchg
sbb
pop
pop
jge
popa
pop
xlat
add
adc
pop
lds
ja
rolb
je
xchg
sbb
dec
and
aad
ss
xor
pop
xor
push
push
sbb
outsl
out
sub
loope
aad
pushf
daa
into
mov
push
out
cwtl
pop
add
mov
push
dec
ret
xor
fdiv
add
inc
std
mov
xor
xchg
mov
pop
sub
sti
mov
mov
sub
cld
jo
in
fwait
shlb
aam
mov
stos
mov
repz
push
inc
or
int
das
out
icebp
pop
mov
adc
orl
jge
inc
cmp
repz
sarl
out
mov
sbb
push
adc
xor
dec
sub
movl
ret
les
adc
push
xchg
int
pushf
aaa
and
rclb
cmp
insb
aas
mov
cwtl
xor
cltd
sub
adc
pop
mov
and
mov
pop
into
mov
je
nop
aaa
sbb
sbb
xor
sbb
lahf
inc
mov
xor
in
out
sti
pop
sub
mov
aaa
pop
xchg
mov
incb
xchg
enter
and
fildl
adc
sbb
mov
ja
loop
fmul
out
inc
loop
in
movb
dec
fs
out
insl
mov
rcrb
dec
jge
cmp
int
sbb
ret
mov
clc
aas
xchg
dec
ss
andnps
xchg
pop
sub
mov
loope
pop
mov
lea
xchg
add
and
mov
jne
jecxz
and
jbe
cli
mov
cmpsb
push
add
test
out
je
sarl
js
movsb
mov
mov
ljmp
imul
dec
fdivrs
out
xlat
mov
push
mov
cmpsb
scas
or
aaa
mov
xor
push
push
shrl
clc
push
mov
lahf
into
clc
stos
jecxz
mov
sub
cltd
nop
les
cmp
adc
push
scas
jl
xlat
dec
mov
loop
ret
sbb
out
xchg
sbb
aaa
popf
cmp
mov
push
jecxz
xchg
push
and
cltd
fs
dec
sbb
lret
push
pop
adc
bound
cld
icebp
lods
out
andl
loopne
mov
js
test
in
shrl
call
insl
in
mov
sub
pop
mov
iret
sub
jmp
or
imul
jl
popa
inc
or
cmp
aas
jne
mov
sarb
arpl
sbb
hlt
xchg
adc
sub
sub
fs
push
les
mov
pusha
aam
or
ljmp
xlat
gs
scas
sbb
iret
popa
or
dec
jbe
outsb
and
pop
pop
cmpsb
cltd
in
loope
dec
sbb
aas
daa
and
dec
das
sub
jne
jns
push
es
daa
mov
out
inc
daa
xchg
xor
cli
std
inc
xchg
xor
out
repz
sub
mov
and
adcb
lret
fistps
inc
movsb
mov
jmp
pop
ja
imul
mov
loope
lods
dec
popf
xchg
insl
mov
mov
sub
dec
push
pop
mov
sbb
nop
jmp
bnd
sbb
mov
or
movsl
xor
jbe
test
frstor
mov
or
loope
call
loop
xor
push
xor
daa
popa
sbb
sub
mov
or
int3
arpl
aaa
sub
fadds
inc
movsb
call
enter
arpl
sub
leave
orb
pop
nop
lret
adc
jbe
xchg
mov
sarl
stos
lret
repz
cwtl
stc
sub
jbe
mov
je
dec
das
lret
jp
in
cli
mov
add
int
adc
insl
aaa
ficompl
add
ja
js
and
cmpsl
movsl
in
xchg
push
mov
mov
popf
xchg
or
pop
mov
les
sub
xchg
mov
pop
push
mov
cmp
decl
mov
adc
lods
mov
add
ds
lods
sbb
enter
add
and
mov
xor
xor
dec
jb
pop
cmp
lret
fnstenv
fsubrl
dec
test
pop
jnp
and
push
push
das
fidivl
loopne
into
rorl
shrl
adc
shrd
xor
mov
cmp
rolb
cmp
loop
iret
xchg
lret
jge
cmp
mull
mov
dec
xchg
xlat
push
mov
fxch
fcompl
cmp
cmpsl
aas
ljmp
sub
mov
repnz
testl
add
mov
xchg
mov
cld
aam
dec
notb
clc
pushf
shlb
int3
andl
cmpsb
gs
mov
sbb
dec
out
xlat
decl
fwait
mov
adc
and
sahf
movl
cmc
push
push
cltd
or
test
and
cltd
inc
int3
repz
add
loop
addl
mov
lret
jmp
xchg
add
scas
mov
addr16
movsl
in
movsb
mov
xchg
scas
movsl
mov
ret
pop
in
push
adc
cmp
jmp
xchg
jg
ds
scas
mov
mov
pop
jo
test
cmp
ljmp
jmp
mov
cli
push
mov
and
int3
icebp
pop
or
imul
fsubl
xchg
iret
stos
insl
mov
xchg
outsb
xor
pop
and
ljmp
ljmp
sbb
sub
xlat
sbb
fmull
subb
test
or
mov
int
mov
lods
adc
inc
and
in
fistl
leave
into
jb
xchg
jo
mov
aad
fldcw
push
cmp
in
and
or
inc
and
pop
call
mov
push
mov
cld
data16
lock
stos
fcomip
stos
xor
lret
sbb
mov
mov
sbb
inc
imul
push
jl
test
test
pop
and
jl
lock
mov
mov
mov
mov
out
inc
push
jb
hlt
test
or
fwait
mov
dec
test
test
xor
dec
out
cmc
mov
adc
negb
push
pop
jbe
add
sub
cwtl
in
adc
jno
or
push
sarl
xchg
pop
adc
dec
xor
fiaddl
mov
mov
cmc
adc
mov
test
mov
mov
fcompl
mov
xchg
jp
aaa
pop
sbb
insl
rcrb
sbb
inc
aam
dec
mov
leave
pop
push
inc
adc
adc
fwait
pop
add
je
xor
sahf
mov
sti
popa
push
mov
sbb
ljmp
fistpll
sub
call
sub
int
outsl
xorb
or
xchg
fidivrs
mov
lret
mov
jno
cmp
mov
test
daa
fmuls
sahf
dec
test
stc
pusha
data16
orb
in
out
mov
and
loopne
imul
lcall
or
pop
test
enter
jp
ss
test
loopne
and
sbb
add
cltd
mov
cmp
movsbl
shrd
sti
jne
sarb
notb
loop
pusha
andw
stc
je
inc
pop
cwtl
test
jg
fsubs
sub
inc
inc
mov
sbb
and
mov
cwtl
punpckhwd
je
ret
or
xor
xchg
cli
inc
add
insl
dec
out
idivl
and
in
dec
icebp
pop
fisubrs
sub
lds
sbb
subl
xchg
or
adc
popa
mov
jecxz
mov
adc
cmp
jae
lds
xchg
xchg
dec
cmp
das
jnp
enter
mov
out
cmp
iret
jl
loop
mov
xchg
lcall
inc
add
sbb
or
addr16
fnstcw
pop
pushf
jmp
arpl
daa
ja
adc
push
push
jp
jne
dec
sbb
xorl
mov
data16
inc
sti
movsb
dec
lret
xchg
sbb
insl
sbb
jns
out
mov
cwtl
out
in
cwtl
mov
call
push
dec
rol
jo
ds
push
int3
in
pop
mov
jb
xchg
rcl
in
test
jge
push
jmp
add
jb
mov
dec
sti
lret
push
pop
idivl
frstor
out
mov
into
in
imul
in
iret
xor
popa
cmp
pop
mov
lcall
into
xchg
out
inc
aad
add
sbb
popf
das
or
clc
dec
xor
out
jae
mov
inc
ret
popf
adc
fildl
jg
aad
dec
daa
xchg
frstor
push
xor
cmp
inc
adc
scas
dec
scas
xor
lods
lcall
xor
inc
aad
inc
add
jl
repnz
pop
int3
in
mov
inc
inc
and
std
dec
gs
sub
push
in
add
lds
insl
arpl
push
and
nop
push
jnp
mov
sub
cvtpi2ps
out
fidivl
xor
pop
sbb
jne
stos
sub
lds
js
sub
dec
mov
in
jle
mov
sub
outsl
push
aaa
stc
jmp
jle
xchg
sub
cmp
jns
mov
popf
leave
lahf
fwait
cmp
idiv
ljmp
shrb
cmp
add
xchg
sbb
pusha
and
and
push
lods
jo
add
jb
inc
iret
mov
lret
data16
sbb
call
dec
nop
outsl
adc
loope
sbb
pop
xchg
mov
idiv
adc
rorl
mov
xor
mov
xchg
jg
stc
jnp
mov
cmp
inc
out
jo
cmp
movb
add
outsl
push
cmp
xchg
push
es
out
inc
js
sahf
fucomip
das
jno
pop
push
mov
inc
adc
ljmp
lock
mov
shlb
dec
mov
sub
inc
popf
cmpl
andl
xchg
int
cmp
loope
inc
fimull
xchg
jecxz
jb
lods
out
rorl
cmp
jecxz
cmpl
cmp
inc
jecxz
adc
call
subl
fs
pop
sbb
and
jmp
cmpsl
mov
dec
ret
cs
in
sbb
mov
adc
pop
ds
jg
xchg
mov
into
mov
mov
adc
out
into
outsl
push
sub
xorl
add
cld
mov
les
jnp
imul
mov
and
rcll
cmp
jl
in
adc
cmp
or
movsl
xor
dec
sbb
sub
and
pop
xchg
movsb
and
mov
dec
pushf
cmp
pop
nop
cmp
dec
or
pop
shrb
sub
mov
inc
ret
les
dec
push
mov
outsb
out
movsl
cmp
stc
adc
and
or
ja
iret
jg
add
jg
pop
ss
hlt
mov
mov
dec
push
and
mov
rclb
fisubrl
jnp
int
or
aad
in
push
push
push
shll
scas
push
push
jmp
aaa
iret
cmp
mov
cld
mov
test
mov
jle
icebp
dec
cwtl
test
mov
mov
out
mov
and
int3
add
stos
shl
ret
data16
jmp
sbb
mov
xor
jle
pop
dec
fcmovu
call
adc
es
les
call
ret
mov
pop
push
scas
jp
and
mov
or
jb
aaa
or
xor
pusha
cltd
insl
jo
data16
je
std
imul
mov
or
and
add
fyl2x
or
dec
in
stos
jl
add
jmp
dec
add
hlt
dec
addr16
daa
sbb
inc
jecxz
popf
fwait
dec
lret
std
xchg
mov
aam
loopne
scas
loopne
mov
mov
jae
mov
out
daa
fcoms
and
inc
push
shll
popa
cmp
pusha
dec
les
mov
xchg
mov
push
aas
adc
jle
mov
shll
mov
insl
test
lock
stc
jo
and
mov
out
inc
jp
xchg
repz
mulb
iret
int
xor
xor
sbb
jno
sbb
sub
adc
sarl
jae
push
and
fs
lret
push
clc
shr
adc
sbb
push
jne
testl
imul
test
mov
xorl
cltd
jl
cmp
xor
dec
fwait
pop
push
jnp
xchg
sub
stos
sti
gs
mov
cmpl
repnz
xchg
xchg
sub
test
ds
push
inc
or
js
jno
mov
inc
push
lods
jns
ret
cmc
push
in
lods
popa
popa
jl
push
inc
xorb
and
pop
mov
insb
and
iret
out
test
sub
in
push
xor
fstps
add
sub
pushf
ds
adc
jmp
jmp
fistpl
mov
sbb
xchg
imul
icebp
cli
scas
mov
push
mov
or
jecxz
les
sahf
mov
lcall
sub
out
inc
cmp
mov
ljmp
sbbl
enter
bound
jo
sub
jp
stos
movsl
nop
mov
jecxz
sbb
movl
mov
gs
push
cs
mov
mov
inc
fucom
lea
leave
inc
rcrl
in
rcrb
dec
aas
jae
inc
mov
push
lock
mov
test
popf
dec
cli
call
std
push
scas
ds
addr16
aaa
outsb
or
mov
clc
adc
test
mov
repnz
test
mov
inc
inc
aad
jne
cmp
xchg
add
mov
fdivl
adc
out
cli
push
insl
sbb
adc
cmp
in
fcoml
xchg
pop
pusha
xor
cs
jae
fstl
push
pop
shll
mull
mov
mov
xor
fs
jns
cmc
pop
loope
jle
and
sub
jnp
std
mov
roll
sub
aam
stc
insb
dec
fimuls
jbe
pop
adc
cli
add
and
in
fldl
xor
cld
push
aas
outsl
bndstx
mov
fists
add
mov
add
dec
out
sbb
les
pusha
sahf
adc
push
adc
int3
mov
push
test
mov
mov
call
xchg
push
fcompl
xchg
fwait
arpl
fcom
mov
sahf
mov
xor
sub
xchg
mov
mov
cmp
pusha
fwait
inc
xchg
movb
and
jo
xlat
inc
cmp
or
inc
pop
test
insb
dec
mov
test
mov
cs
push
jmp
sub
andl
cmp
mov
shrb
mov
popf
mov
mov
add
mov
xchg
lods
icebp
sbb
add
jge
xchg
add
roll
add
das
aam
xchg
ljmp
pop
inc
ljmp
cmpsl
mov
flds
adcb
subl
adc
add
xor
mov
push
stc
fdivrs
jle
ss
test
mov
sar
cmpsl
das
ret
cwtl
ja
jne
in
mov
add
jg
out
pop
insb
shl
sbbb
push
xor
cmp
nop
js
rcr
sub
loope
fdivr
daa
icebp
jl
shlb
mov
sbb
ss
les
cmc
mov
xor
adc
stos
mov
icebp
mov
inc
es
in
push
dec
add
mov
xchg
push
outsl
es
add
pop
xlat
in
inc
loopne
lods
pop
bnd
out
mov
or
lods
or
jge
mov
aam
mov
adc
sub
add
xor
insb
call
mov
inc
outsb
sbb
mov
pop
scas
jnp
inc
inc
aas
int
mov
or
sub
jl
fadds
inc
js
sbbl
inc
enter
cld
cmp
push
out
mov
mov
push
in
push
mov
push
or
leave
jp
out
int
arpl
iret
mov
aaa
fwait
pushf
insb
fsts
sub
sub
fmuls
sbb
test
mov
js
mov
fdivs
fsubl
pop
loope
cltd
es
sub
test
mov
mov
and
adc
and
inc
xor
xchg
in
adc
faddp
mov
and
pop
and
rcll
jno
xor
adc
cwtl
pop
cli
xchg
mov
daa
jns
fwait
adc
mov
jmp
mov
xor
and
xchg
jl
jno
or
cmp
xchg
in
jg
hlt
in
mov
into
sub
pop
ret
pop
mov
pop
inc
adc
lea
push
jo
mov
arpl
dec
inc
mov
std
scas
mov
or
jp
outsl
mov
ss
cli
pushf
push
and
cmpsl
enter
cmpsb
or
aad
nop
jns
cmp
scas
sti
push
xchg
adc
cmp
movsb
jge
scas
decl
dec
xor
mov
sahf
mov
and
xchg
das
lcall
adc
add
fimuls
gs
jae
test
ror
ds
cmp
jb
jnp
add
mov
jl
jnp
ret
add
jo
pop
mov
out
ss
jmp
jmp
addr16
nop
scas
mov
cmp
xor
les
std
mov
cmp
ja
orl
dec
push
or
push
add
add
mov
xor
adc
xor
or
xlat
sbb
repz
popf
adc
pop
xor
stos
jb
push
lahf
jecxz
and
xchg
or
nop
jb
pop
sbb
pop
insb
pop
insl
add
mov
dec
mov
cs
cmp
loope
in
jne
sub
push
push
pop
mov
cmpsl
out
das
bound
das
mov
xchg
fisubl
rclb
mov
ret
pop
outsb
scas
sbb
imul
jnp
daa
mov
cli
pop
into
mov
sub
aas
pop
or
bound
out
lcall
in
shl
mov
pop
pop
jno
sub
mov
mov
sbb
mov
rorl
std
sub
vmptrld
loope
fistps
iret
sub
mov
scas
outsl
js
pop
sbb
dec
cmp
xlat
into
out
mov
lock
push
adc
faddl
fstl
arpl
adc
or
pop
lret
out
mov
mov
out
xor
cmp
inc
jmp
push
pop
dec
sub
mov
jl
stos
lods
out
add
test
pop
aad
scas
cmc
push
mov
ja
jge
fwait
not
nop
mov
cs
ds
mov
or
repz
and
jne
mov
inc
cmp
push
cmp
orl
xchg
sbb
jp
fwait
push
pop
or
iret
test
addr16
xor
pand
ljmp
fwait
mov
sbb
insb
pop
xchg
xchg
mov
loop
popa
and
dec
mov
push
call
or
movsl
sbb
xchg
adc
ret
push
hlt
addr16
out
imul
movnti
lahf
mov
mov
or
cmp
out
mov
push
pop
or
clc
pop
cmpsb
pop
popa
aas
test
push
pop
les
jle
repnz
cmp
xchg
push
mov
and
test
cmpsl
fisubrs
adc
movsl
mov
mov
jmp
int3
std
jnp
roll
dec
pushf
repnz
pop
int
in
fnstenv
inc
and
xchg
pop
pop
push
lret
jecxz
jns
popf
dec
push
cmpsl
test
aam
cltd
mov
imul
pop
sbb
mov
dec
lock
mov
mov
push
dec
push
lods
bound
loopne
pop
aaa
bswap
adc
into
test
mov
push
dec
stos
inc
mov
inc
ss
clc
sbb
push
cmp
push
adcb
out
ljmp
sbb
pop
cs
mov
cmp
lret
cmpl
lds
je
or
and
movsb
idiv
and
mov
les
dec
stc
in
hlt
sub
shr
pop
leave
inc
pop
iret
dec
cwtl
aaa
decb
xor
pusha
ss
rolb
or
jp
clc
les
imul
gs
jno
dec
ljmp
add
mov
addb
into
lret
frstor
outsl
stos
faddl
xor
ljmp
in
sarb
adc
roll
xor
push
cmp
mov
sub
xchg
cmpsl
pushf
sub
or
fwait
mov
jmp
shl
inc
fcoml
out
jb
dec
jnp
and
lret
mov
lock
dec
imul
out
insl
push
mov
push
pop
pop
sub
movsb
hlt
jge
push
adc
cmp
loopne
out
cmpsl
loope
mov
sahf
xchg
out
and
cwtl
adc
adc
or
jne
push
jg
aam
pusha
adc
inc
mov
sub
daa
jle
or
into
mov
aad
pop
jns
push
jns
imull
scas
xchg
xchg
lahf
dec
lcall
pop
lds
and
jecxz
inc
sti
decl
sub
hlt
bnd
sub
push
int
sbb
sti
sbb
xor
cwtl
mov
cld
fldenv
mov
jle
xor
data16
fnsave
jle
clc
cmpsl
in
xor
popa
call
in
data16
bound
sbb
lods
aas
inc
ret
rorl
fdivs
add
aad
test
push
pop
and
sbb
fs
test
aam
adc
clc
pop
pop
mov
push
push
sbb
xor
xlat
mov
xchg
daa
push
imul
int3
stos
punpckldq
xchg
mov
pop
aaa
xchg
push
dec
in
add
test
xor
js
sub
cmp
ja
xchg
std
icebp
inc
pop
jle
cmpsb
add
xlat
nop
fidivs
out
movl
enter
icebp
lret
movsb
push
ljmp
mov
shrl
mov
out
icebp
mov
shlb
ljmp
stos
jge
cmp
testb
push
outsb
mov
xchg
clc
inc
inc
aaa
test
fistl
or
mov
pusha
push
rcl
cmp
mov
xchg
xor
sub
inc
and
add
mov
jns
xor
pop
rclb
aas
or
fsubrs
mov
dec
and
fisubrs
int3
mov
jmp
in
cmpsb
fwait
lds
ds
aad
lock
adc
cmpl
jp
test
and
dec
mov
into
addl
inc
mov
and
xor
test
insl
add
mov
arpl
adc
and
ret
repz
xor
ret
xor
imul
clc
inc
les
fstpl
imul
and
mov
out
jb
mov
enter
jne
cs
mov
adc
inc
sub
jecxz
stos
int3
int3
adc
push
popa
fnsave
dec
popf
mov
sub
xchg
dec
jae
dec
outsb
js
test
push
dec
outsl
repz
push
xchg
fildll
xor
test
xchg
neg
scas
push
add
dec
sti
dec
clc
pop
out
int
out
jmp
inc
jo
pop
xadd
nop
pop
mov
mov
rcrb
add
sbb
test
jge
aam
add
cmc
test
pop
cmc
adc
jo
jmp
mov
dec
jmp
dec
mov
pop
daa
or
xchg
mov
cltd
xor
subl
push
ljmp
jae
fbstp
inc
mov
mov
not
pop
aas
jns
je
lret
and
push
mov
cmpsb
mov
nop
in
outsl
in
insb
push
inc
cmpsl
or
push
push
sti
lret
sub
in
fwait
pushf
lret
nop
xchg
jl
loope
fildl
inc
movsb
xor
mov
sbb
mov
xchg
cmc
xchg
das
popf
adc
cld
icebp
rcr
mov
shl
repnz
out
xor
popf
adc
jo
pop
push
addr16
cmp
mov
and
sub
sub
adc
pop
test
jno
std
lods
movsl
mov
jge,pt
imul
loopne
jo
inc
imul
pop
mov
in
shll
xor
xor
testb
jbe
lods
cs
xor
pop
ss
push
sub
xor
xchg
cld
xchg
and
enter
xchg
gs
jmp
lret
mov
xchg
cld
jne
rcr
outsl
cwtl
pop
movsl
jbe
push
mov
lods
mov
jge
push
imul
lods
jp
sub
es
testb
aaa
jp
lret
fsubr
jns
adc
lods
sbb
popf
rcrb
or
ror
divb
push
mov
lods
fcomps
xchg
mov
mov
fsubrl
fadd
adcl
pop
jl
aas
pop
mov
jl
in
mov
adc
stos
addr16
in
sbb
sub
orl
das
mov
out
adc
punpcklwd
cvttps2pi
mov
push
cltd
loopne
add
out
pop
push
cs
jg
mov
xor
mov
loopne
sub
lds
sbb
mov
mov
pop
mov
out
xchg
pop
insl
mov
lods
mov
ret
xorl
fs
ret
stos
in
fidivrs
push
nop
loope
jl
inc
loopne
adc
mov
or
pushf
sub
add
arpl
jecxz
fisttpll
pop
cmp
xchg
sub
mov
pop
push
dec
lods
mov
xor
sti
dec
test
push
xor
push
xor
jmp
nop
test
mov
loope
ds
jle
cs
push
pop
inc
rclb
jl
aaa
movsb
mov
add
pop
and
popf
in
xlat
cmp
fldl
pop
adc
mov
test
test
mov
push
sbb
notb
in
stc
insl
jg
movsb
sub
arpl
adc
sbb
cmp
jp
loop
movsl
dec
cmp
fstl
inc
xor
ficompl
or
mov
or
cmp
int
cmp
xchg
imul
out
sbb
cmp
pop
cltd
lahf
and
xor
inc
sti
xchg
mov
sbb
gs
xlat
lret
xchg
cmp
mov
lds
or
mov
adc
mov
das
imul
fdivrs
xlat
dec
push
cmp
xor
push
sub
int3
push
push
mov
xor
pop
xchg
cltd
xchg
repz
xchg
fs
inc
addr16
lea
cmp
dec
ja
inc
lahf
call
enter
in
mov
or
push
sbb
aam
retw
iret
outsl
lret
cmp
and
scas
aad
mulb
adc
cmp
and
in
test
dec
xchg
int
sbb
cmp
in
rcl
icebp
cmpsb
dec
dec
mov
pop
mov
inc
test
push
jmp
push
fisubrl
jl
xor
lods
lcall
add
outsl
std
xor
popa
and
dec
imul
enter
gs
cmp
test
mov
dec
adc
loopne
xchg
movsb
pop
inc
sub
insl
xlat
adc
out
outsl
dec
xchg
cld
cli
daa
push
sarl
and
mov
insl
sub
or
mov
ret
rcrb
push
iret
sub
test
inc
fstpt
cmp
mov
fisttps
push
mov
mov
fwait
insl
jns
push
xor
xor
adc
pop
dec
test
xchg
outsl
insl
pop
add
test
fiaddl
mov
push
or
inc
jo
addr16
repz
aaa
loope
enter
fcoml
adc
cmc
xchg
cwtl
jb
jno
fnstenv
out
cmpsb
pop
nop
aad
cmp
into
sarl
jmp
bound
dec
fsub
dec
mov
je
mov
jb
bnd
inc
pusha
cmp
mov
and
sbb
hlt
inc
mov
pop
mov
shll
mov
adc
stos
push
pop
not
pop
adc
cwtl
xchg
aam
repz
loop
dec
hlt
mov
and
adc
lret
div
sbbb
out
ret
call
cmp
push
lea
pop
push
rclb
testl
sbb
cmp
subl
icebp
push
adc
cmp
not
out
push
ss
sti
mov
in
popf
add
mov
push
shlb
enter
mov
flds
test
outsl
iret
adc
mov
lret
out
fdivl
sub
dec
dec
sbb
mov
repz
lret
int
cs
adcl
and
lret
aad
add
sarl
lcall
mov
stos
cmp
fisubrl
jb
inc
pop
adc
ljmp
push
xchg
scas
and
xor
adc
stc
neg
das
adc
sbb
insb
push
orb
xor
lea
sbb
movsl
je
mov
aaa
pop
rcrb
gs
faddl
sahf
jmp
cmpsl
mov
mov
into
xchg
pop
jl
imul
cmp
clc
lcall
lock
jne
push
scas
fmulp
aam
dec
push
out
inc
sub
cmpsl
mov
jb
ss
jle
push
xor
int
dec
pop
inc
and
pushf
hlt
in
jne
dec
xor
pop
pop
or
out
fstpt
sarb
ret
and
std
push
push
xor
mov
push
fimuls
jne
pop
pop
sahf
loop
andb
xchg
insl
and
pop
ret
jo
mov
daa
mov
daa
inc
stos
and
rcll
testl
out
push
dec
pop
scas
add
push
pusha
pop
push
fwait
leave
aas
lds
movsl
add
rcr
testl
test
dec
int3
xchg
or
xchg
imul
out
add
lret
cmp
aam
and
pop
cmp
and
jno
stos
and
mov
lods
lcall
clc
aas
mov
popf
and
jle
aas
push
clc
scas
les
inc
pop
or
sub
sarb
mov
mov
jns
mov
sbb
add
pop
jl
orl
lds
dec
mov
xor
jb
aaa
sub
pop
shlb
test
and
sbb
cmc
out
or
pushf
push
lods
mov
dec
repnz
push
pcmpeqw
mov
fsubrl
les
push
and
pop
mov
pop
divl
adc
add
out
orl
test
out
in
shll
push
dec
stc
mov
imul
xchg
or
loopne
or
mov
sub
adc
sub
sub
push
lods
jbe
pusha
jle
lahf
push
stos
lahf
xor
dec
in
jne
sbbl
add
cmp
rorl
dec
out
xor
out
repnz
sub
movsl
stos
inc
sbb
push
in
dec
in
clc
jbe
clc
fimuls
jo
in
xchg
lock
pop
mov
ds
cmp
cmp
iret
push
mov
jno
mov
mov
rcll
mov
out
and
ss
js
jno
aas
dec
std
test
jle
xchg
insl
mov
mov
ljmp
inc
fwait
or
fcompl
or
movsb
adc
aaa
sub
fisttpll
mov
mov
and
addl
out
adc
jecxz
dec
adc
arpl
or
xor
pop
mov
mov
push
sub
cmp
jbe
sbb
jno
int3
or
jmp
jns
outsl
aad
insb
lahf
test
les
mov
sbb
or
arpl
std
arpl
jmp
mov
pushw
cmp
outsb
imul
push
int
dec
inc
int3
gs
addr16
mov
xor
xor
pop
sub
pop
ret
mov
insb
push
aad
mov
sub
dec
std
mov
shll
inc
jmp
add
and
mov
adc
push
xlat
and
std
in
xorl
gs
or
pop
cmp
ret
pop
jnp
jecxz
pushf
mov
push
mov
adcl
push
xorb
imul
mov
jns
out
cmp
jbe
ljmp
cmp
nop
js
test
mov
test
loope
gs
xlat
xlat
cmc
std
ret
hlt
popa
push
mov
and
lahf
mov
ss
sbbb
cmp
mov
sahf
in
das
push
cld
dec
pushf
imul
jecxz
js
mov
and
add
dec
stos
in
sahf
sbb
push
push
sarl
and
jae
imul
popl
sti
and
jo
pop
insb
sbb
sarl
cld
jb
xor
xlat
int
std
add
mov
xchg
xchg
cmp
and
shl
js
call
sbb
mov
pop
inc
adc
sti
das
aas
mov
hlt
int3
xchg
pop
mov
scas
xor
cmp
shrb
sub
pop
call
subl
mov
add
outsb
loop
shr
cmpsl
push
push
lds
push
dec
or
cmc
push
cs
push
xor
cltd
mov
popf
lods
inc
adc
pusha
push
cmpl
jne
mov
es
jl
push
fnstcw
lock
lods
nop
xchg
mov
in
sub
adc
add
jbe
jmp
jle,pt
jmp
inc
test
mov
sub
cmp
pop
nop
xchg
adc
test
push
xor
mov
cmp
fstps
int
push
jbe
dec
enter
sbb
popa
push
in
xchg
insb
aad
fs
mov
stos
mov
jo
clc
in
mov
sbb
dec
pop
adc
cmp
insl
jno
insb
or
cmpsb
cmp
and
mov
imul
add
test
in
push
or
mov
mov
sbb
sahf
ret
adc
out
push
data16
outsl
insl
js
les
xor
iret
lcall
and
adc
rcrl
mov
addr16
cmp
or
cltd
addb
jl
scas
jl
aam
cmp
push
in
jl
and
or
cmp
xor
or
sbb
xor
xchg
int3
dec
data16
pop
mov
repnz
mov
and
pushf
lds
push
gs
imul
sub
out
xlat
push
inc
push
mov
push
mov
roll
lods
inc
ds
stc
mov
jbe
lods
mov
mov
add
mov
add
mov
dec
test
jecxz
cmpsb
cmpsb
sbb
scas
dec
push
push
mov
shrl
add
add
jbe
sbb
popa
fildl
call
push
dec
xor
jp
out
shll
adc
jmp
adc
mov
and
mov
or
mov
or
and
ret
outsl
lods
xchg
push
pop
mov
gs
mov
lret
xor
aad
inc
out
lret
inc
push
cmp
push
insl
mov
push
pop
popa
lock
shll
jge
add
mov
push
mov
cmpsb
pop
in
or
add
lock
jle
jmp
in
fdivrs
pop
or
adc
xchg
pusha
ret
icebp
in
mov
xchg
test
imul
dec
sbb
adc
in
in
pop
adc
sub
repnz
inc
mov
and
xchg
repz
pop
mov
jno
push
inc
dec
dec
ja
cmp
mov
test
inc
scas
dec
add
xorl
push
aas
rcrb
jmp
fidivs
clc
pop
pop
hlt
sbb
jnp
ret
and
out
ret
adc
bound
roll
xor
sub
pushf
xlat
lret
or
xor
lock
dec
sub
enter
xor
xchg
xor
jae
push
cmp
xchg
ja
dec
lret
xlat
clc
jno
dec
aaa
xor
mov
mov
out
and
jmp
aaa
lea
sti
ds
mov
jns
sar
or
insl
and
fwait
pop
adc
push
loope
sbb
lcall
mov
push
aad
out
jns
add
and
loope
cli
sbb
aas
ret
inc
bound
hlt
add
in
xchg
iret
pop
jmp
shrl
cmc
mov
xor
inc
scas
pop
push
clc
pushf
stos
cmp
scas
pusha
data16
adc
icebp
fcoms
outsl
aad
push
push
rorl
or
xorb
cmp
mov
in
test
lods
push
cmc
sbb
outsl
test
xchg
cmp
js
fsubrl
nop
xchg
sahf
inc
lods
or
imul
nop
inc
sti
lret
gs
jl
push
adc
xor
lea
inc
lret
mov
push
push
rclb
sahf
fs
scas
bswap
movl
mov
outsl
cli
clc
inc
xchg
ror
sub
ja
cmpsl
cli
jb
outsl
lcall
mov
or
mov
sti
mov
cmp
sbb
jns
sbb
repnz
adc
lods
inc
lcall
out
mov
inc
fldl
das
xchg
cmp
idiv
lods
lcall
push
scas
popf
push
or
aad
push
in
ret
xchg
lods
xchg
loop
aad
loop
jae
mov
je
in
jl
pop
xchg
loop
mov
sbb
outsb
jo
add
imul
rcrb
movsl
cmp
push
sub
mov
js
ret
fs
in
pop
cmp
insl
dec
out
sub
ss
popa
dec
add
pop
mov
daa
jle
shlb
sahf
mov
jmp
pop
mov
dec
out
pop
add
push
xor
dec
inc
outsl
scas
int
cli
ljmp
adcb
lahf
outsb
dec
mov
xor
dec
ficompl
mov
add
jp
push
or
fcmovu
inc
xlat
fidivrs
xor
or
inc
loope
jge
mov
cltd
add
pushf
lods
cmpsb
test
icebp
cmp
mov
push
fisttpll
xlat
jg
adc
mov
sbbb
std
imul
es
pushf
ret
les
in
mov
sbb
sbb
fs
sub
mov
addr16
lret
mov
repnz
insl
cmc
sbb
or
xchg
inc
add
add
aaa
cmp
leave
movsb
imul
data16
and
daa
cmp
xor
sub
cmp
outsl
enter
test
shl
fcomps
jl
fsub
cmp
mov
rcrb
pop
mov
sub
aad
mov
cmpsb
mov
cmp
lahf
jo
dec
mov
inc
xchg
scas
xchg
fwait
insl
out
aad
and
pop
jnp
les
sbb
call
push
adc
loope
add
movsl
test
push
scas
rol
orl
cmc
pop
scas
aas
dec
add
lods
push
adc
or
test
jmp
imul
mov
ret
cmp
push
sub
or
out
das
xchg
data16
cwtl
push
jb
jno
rcl
nop
pop
pop
lret
aaa
adc
imul
adc
test
mov
or
leave
stos
arpl
mov
push
pop
mov
push
lcall
fimuls
ficoms
sub
inc
mov
push
test
aaa
push
aaa
aam
mov
jl
pop
sti
lret
scas
pop
enter
punpckhwd
lds
sub
lds
xchg
or
xlat
test
cmp
cmpsb
push
arpl
lret
dec
push
dec
outsl
adc
mov
mov
jmp
jle
inc
mov
sub
jle
das
lea
mov
jecxz
js
push
or
imul
pop
cmp
lcall
sub
mov
push
aad
loope
stos
out
dec
jbe
push
xchg
loopne
in
sahf
testb
or
jle
xchg
sahf
pop
sub
dec
pop
dec
dec
lea
sbb
andl
fidivrs
inc
out
fnstsw
xlat
mov
cmp
repnz
push
lea
in
inc
jbe
jp
movsw
mov
outsl
sub
xchg
mov
ljmp
adc
mov
daa
jb
cltd
xchg
push
loop
push
mov
adc
lcall
push
test
xchg
movsl
xchg
outsl
pop
jb
jbe,pn
mov
jbe
std
out
test
jge
push
sti
jne
mov
int
sbb
adc
xor
ss
stc
adc
mov
vpsubusb
ret
data16
roll
out
imul
cmp
jl
push
and
xchg
mov
scas
sbb
aam
xor
loope
mov
mov
push
jmp
adc
mov
mov
dec
in
xchg
loopne
mov
dec
test
insb
fs
and
xchg
add
add
lods
jg
fmuls
mov
inc
xchg
lcall
sbb
pusha
mov
cmp
xchg
push
adc
mov
mov
jno
movsb
sub
fwait
sti
sbb
int
orb
insb
imul
sbb
dec
ficompl
aam
mov
pop
repz
lods
adc
ss
add
bound
jo
mov
mov
cmp
gs
jne
cmp
push
pop
shll
dec
push
mov
lock
mov
dec
jns
and
repnz
push
lret
es
cmp
loopne
push
cmp
movsb
or
mov
xorl
mov
mov
mov
mov
jb
push
iret
xor
mov
inc
jnp
xor
jp
cmpb
movsb
jg
jle
push
cmp
sub
ljmp
jmp
neg
xor
cmpsb
test
enter
mov
pop
dec
mov
imul
outsl
loope
mov
sbb
inc
push
cmp
mov
or
test
or
add
adc
lea
cmp
push
fdivrl
mov
jne
inc
mov
sbb
push
and
stc
stos
cmp
xchg
outsl
adc
leave
jp
test
subl
fcmovbe
fidivl
lods
sbb
jmp
and
mov
in
enter
scas
inc
push
mov
sub
mov
orl
insl
jo
movsb
fmul
lods
scas
test
outsb
fisttpl
mov
iret
out
icebp
xchg
test
mov
sub
outsl
divb
jmp
dec
inc
subw
rcrl
mov
or
lcall
add
les
das
clc
out
xor
test
gs
push
xchg
leave
adc
pop
sbb
adc
cwtl
scas
jl
nop
pusha
jge
icebp
dec
mov
pop
adc
jecxz
or
adc
mov
cld
and
or
outsb
lret
push
insb
lds
cmp
in
in
xlat
fnstcw
or
int
fldl
or
sbb
mov
insl
icebp
adc
daa
push
cmp
int
inc
sbb
or
mov
mov
call
xchg
in
xor
inc
aaa
loope
aas
mov
xor
mov
cmpsb
xchg
dec
lock
int3
and
inc
pop
jno
scas
pop
mov
test
call
xchg
fidivrs
repnz
mov
mov
lcall
push
jbe
repnz
roll
sub
add
mov
sbb
test
les
mov
jge
sbb
repnz
nop
xlat
jbe
outsl
push
jbe
mov
ds
and
xor
nop
lea
xor
ret
pop
adc
filds
int3
popf
pop
cwtl
add
pushf
xchg
out
sbb
int
aas
jecxz
jnp
iret
pminsw
mov
push
xchg
mov
lock
pop
cs
xor
fwait
imul
lret
movsl
jne
pop
test
and
xor
imul
out
ljmp
inc
int
outsb
mov
cmp
addr16
out
xor
pop
add
aas
xor
into
jns
sti
stos
pop
mov
pop
in
pop
push
mov
sbb
pop
test
pop
sbb
ret
divl
pop
lcall
imul
jae
or
call
or
movsb
jecxz
push
pop
and
or
ss
adc
sahf
mov
add
loope
push
push
insl
out
insl
hlt
mov
jns
pop
pop
shlb
or
popa
shll
mov
fldcw
sub
popl
or
xchg
or
mov
mov
stc
sbb
pop
xchg
loopne
add
sbb
jg
rolb
andl
pop
xor
ja
scas
cltd
and
aaa
mov
fdivp
or
movsb
out
adc
and
sarb
push
push
pop
negl
adc
xor
cmp
aam
mov
test
mov
or
mov
cmc
je
cmp
xlat
push
pop
orb
or
and
test
sbb
lods
xchg
pop
jle
mov
push
xor
mov
mov
pop
pop
pop
xorb
mov
rep
out
outsl
mov
mull
out
fldt
add
lcall
cmc
scas
jno
outsl
jnp
pushf
test
add
ljmpw
movsb
push
and
ljmp
pop
dec
jo
mov
mov
sbb
mov
add
inc
cmc
aas
pop
loope
mov
outsb
add
adc
les
das
je
add
push
ror
sub
insb
or
pop
mov
fsubl
fs
or
stos
outsl
dec
xchg
xchg
leave
mov
push
push
adc
loopne
adc
add
sbb
inc
sbb
movsb
imulb
xchg
mov
or
out
popf
and
jb
jne
outsl
add
mov
outsl
jo
popf
daa
and
pop
aaa
jo
mov
rorb
loop
test
cmpb
in
fldl2t
jp
jnp
sbb
js
jle
xchg
push
add
cs
shr
pop
nopl
stos
ds
adc
lahf
pop
negb
xchg
ret
or
xlat
xchg
mov
addr16
mov
xchg
ret
sbb
mov
add
loopne
sarl
pop
dec
jae
adc
sub
stos
mov
jo
out
jl
jns
xchg
fwait
push
add
inc
sti
push
xchg
test
jbe
jnp
cli
mov
cmp
aam
jns
jns
push
mov
mov
popf
mov
lahf
jb
dec
jecxz
daa
mov
lahf
outsb
mov
cmpsl
inc
add
in
dec
inc
push
cmp
stos
outsb
shlb
ficoml
mov
cli
int3
jae
les
into
adc
mov
data16
jno
rolb
xor
cld
push
xor
mov
or
ret
mov
dec
adc
rcrl
jnp
fsubr
push
and
or
push
add
pop
ret
jl
sub
scas
or
bound
ss
push
pop
push
and
xlat
adc
pop
push
loop
je
aas
mov
or
mov
sbb
pop
jecxz
aad
mov
icebp
or
mov
and
mov
jae
mov
dec
jl
mov
mov
dec
insb
daa
or
xchg
push
jnp
outsb
and
inc
sbb
sbb
sbb
daa
rdpmc
mov
push
daa
in
aaa
mov
lock
mov
jb
xchg
loope
jbe
xor
jae
stos
push
push
mov
leave
fldenv
icebp
and
push
fnsave
mov
daa
sbb
dec
inc
or
mov
bound
sub
xlat
inc
daa
cld
mov
daa
jb
add
push
sbb
dec
jge
lods
dec
xchg
push
jb
xor
jnp
dec
add
test
mov
mov
idivl
jmp
into
push
mov
sbb
dec
xor
adcl
pop
sub
ljmp
mov
mov
jp
iret
repnz
pop
subl
add
xchg
sub
add
pop
jp
mov
mov
lods
jecxz
adc
mov
and
lods
inc
jo
clc
bound
add
andl
inc
ja
fwait
andl
jnp
dec
add
nop
lahf
sahf
or
dec
push
std
mov
out
aad
leave
shl
movsl
lock
int3
ss
or
pop
jle
push
rcl
out
lret
divb
int3
or
fisttpl
mov
xor
pop
fwait
dec
mov
test
add
leave
inc
adcb
clc
les
add
mov
push
pushf
and
cld
sub
in
push
popf
or
pop
xchg
insb
sti
int
data16
lods
jae
imul
or
mov
add
jns
addb
repz
fdivr
inc
adc
mov
and
lods
sub
mov
mov
lcall
jbe
and
insl
add
push
push
pop
add
outsb
mov
int
stos
jmp
imul
bound
aad
add
in
xor
push
xor
cwtl
push
and
imul
mov
pop
mov
sub
push
fwait
sbb
mov
inc
cmpb
mov
je
mov
and
ljmp
loop
xor
mov
mov
mov
scas
mov
cli
subl
xor
test
xlat
xchg
cmp
xchg
leave
adc
dec
aad
outsb
out
outsb
addr16
cmpsl
inc
fcmovu
sub
stos
mov
outsl
ret
pop
cmpsl
xor
leave
pop
cmp
jne
sub
cmp
loopne
fwait
in
int3
add
inc
aas
std
shlb
sub
rorb
stos
or
aaa
jmp
mov
loop
mov
add
dec
subb
mov
and
jbe
das
push
and
dec
fwait
cmp
ret
mov
dec
js
mulb
add
push
xor
xor
add
mov
insb
mov
pop
xlat
stos
lods
int3
jne
push
cmpsb
xchg
pushf
stos
aaa
out
mov
sbb
sbb
and
jp
mov
mov
les
mov
loopne
imul
mov
shrl
xor
pop
in
pop
adc
jl
sub
jns
les
sahf
sub
mov
sbb
aaa
ret
or
jb
xchg
lret
mov
mov
add
pop
and
mov
sub
cmp
in
enter
out
pop
outsl
nop
push
pop
mov
das
mul
sub
xor
data16
sub
js
xchg
mov
mov
cmc
mov
fistps
jmp
jg
jo
test
add
repnz
pop
fistpll
xchg
jle
js
out
aas
fistpl
jno
loope
mov
mov
mov
int
jge
push
and
inc
pop
push
call
inc
or
imul
mov
orl
mov
and
aam
mov
xchg
gs
add
sarb
pop
mov
fisubs
sbb
xor
nop
fnstenv
jo
and
subb
repz
cmc
xchg
dec
out
pop
mov
push
mov
mov
sub
push
inc
fisttpll
pop
and
lahf
lds
mov
dec
ja
pop
adc
insb
flds
imul
daa
mov
outsb
inc
js
push
or
enter
push
fnstsw
ss
pop
pop
and
jb
adc
push
pop
add
push
sarb
adc
mov
mov
mov
inc
sub
rorb
dec
lret
mov
es
fucomp
sahf
and
lret
insl
jle
sub
xchg
shl
ljmp
mov
pop
out
push
data16
inc
sub
xchg
inc
xchg
dec
mov
lock
and
addr16
dec
cmp
dec
push
imul
ret
jmp
std
je
sub
jle
adc
sub
insb
mov
sub
mov
dec
loopne
fdivrp
lock
xor
fwait
cmpsb
lods
jae
pop
inc
repz
js
cld
jmp
push
mov
or
aaa
mov
mov
fildll
ret
sbbl
dec
push
out
mov
mov
ds
mov
jp
scas
cmp
push
mov
push
test
mov
xchg
jp
cmpps
xor
cltd
loopne
inc
mov
xchg
or
mov
loop
js
ss
fldl
xchg
call
push
xor
add
shl
les
pop
mov
lods
mull
jb,pt
aaa
pusha
dec
mov
add
cli
cld
sub
pop
pop
xor
mov
sti
mov
inc
mov
or
in
cld
sub
cwtl
mov
mov
lret
mov
fldt
inc
popa
lret
xor
cld
jmp
js
mov
add
adc
popf
movsb
or
iret
and
add
adc
into
mov
gs
cs
lahf
test
pushl
cmc
jle
in
dec
cmp
out
lea
jno
repnz
fsubrp
in
sub
andl
cli
xchg
cmp
aam
fdivl
jbe
movsl
mov
mov
fldenv
out
repz
stos
pop
lcall
adcb
ret
scas
jg
subl
cmp
jg
loop
out
test
in
ret
icebp
cmc
test
pop
sarl
test
loopne
pop
jecxz
mov
xor
jp
repz
ja
cli
test
and
mov
dec
popf
loop
cld
icebp
sarb
push
repz
adc
js
jo
mov
fidivs
pop
loop
cmpsl
out
ss
xchg
dec
daa
shll
fadd
jecxz
test
jg
xor
out
xchg
push
decl
in
push
addr16
cltd
or
sbb
repz
fcomps
mov
jbe
cmpsb
ficomps
pop
and
das
jmp
and
pushf
and
or
testl
xlat
or
adc
jb
fstps
adc
mov
push
inc
dec
lret
jb
sub
fldcw
pop
fsubrl
imul
pop
rcl
jae
jle
ret
pop
sahf
mov
xor
cmc
outsl
push
pushf
xchg
je
push
inc
nop
pop
shrl
or
push
out
jnp
loope
jmp
movsb
xlat
cmp
cmp
sbb
mov
int
fldenv
push
sbb
insl
stos
int
cmp
pop
rcrb
xorl
out
adc
insb
jno
and
adc
add
aas
in
xchg
test
insl
xchg
xchg
push
push
jb
fwait
pop
nop
in
shrl
lret
rclb
jbe
xor
xchg
inc
pushf
mov
cwtl
lock
orb
in
loopne
test
sbb
push
xchg
out
scas
pop
and
push
sub
xchg
and
sbb
mov
addr16
sbb
push
pop
mov
pushf
xchg
adc
fsubrs
imulb
push
add
or
pushf
cmp
dec
and
out
inc
push
imul
cmp
test
sbb
mov
js
icebp
pop
add
jnp
aam
dec
or
jbe
pop
popa
ss
push
xor
cmp
scas
fildl
jp
sbb
or
fiadds
dec
dec
out
inc
cs
sub
dec
xchg
sub
mov
fisttps
pop
cmp
addr16
xchg
pop
rol
mov
sbb
inc
push
inc
jl
xchg
mov
in
xor
adc
xor
ret
sub
frstor
jmp
push
in
push
iret
jne
mov
sti
cld
cwtl
xchg
xchg
mov
clc
pop
mov
sub
cmpsb
jae
pop
pop
and
add
mov
sahf
mov
scas
cs
divl
mov
hlt
jecxz
xchg
das
or
jmp
inc
xchg
dec
jno
incl
lock
mov
arpl
hlt
mov
aad
rclb
fisubrs
cld
in
sub
outsl
dec
cs
sub
hlt
mov
cltd
jmp
test
ficompl
test
fdivrp
int
notl
jo
xlat
or
mov
ud2
aad
xlat
lods
ja
std
push
sbb
mov
lds
sbb
outsb
jbe
mov
adc
popf
sbb
xchg
nop
jge
inc
mov
pusha
aaa
push
into
aad
aaa
push
sbb
icebp
dec
repz
push
ret
inc
xor
jle
mov
rorb
rcrb
dec
jmp
xchg
es
test
jno
inc
int
out
mov
call
das
cwtl
lock
inc
xchg
sub
pop
or
or
jp
dec
lret
jl
dec
inc
sbb
es
movl
add
aas
cwtl
mov
dec
iret
sahf
ja
into
arpl
mov
call
mov
in
jb
out
jb
mov
jbe
mov
xchg
jns
das
xchg
push
imul
and
mov
mov
fdivs
push
adc
xchg
and
idivb
out
sub
and
lcall
sub
dec
pop
lods
jp
mov
aad
addl
push
inc
lock
les
xor
jl
shll
dec
and
cmp
push
push
dec
jge
sbb
sar
fsts
mov
xchg
vmwrite
testb
mov
mov
movsl
push
mov
sub
fucomp
es
and
ret
push
mov
iret
mov
mov
call
ret
inc
std
les
data16
jne
jno
xor
in
xchg
mov
sahf
aaa
sub
push
and
scas
sahf
into
icebp
dec
rcrb
notb
fbld
lods
push
cld
js
or
int
shl
mov
inc
inc
jbe
xor
inc
std
lcall
or
sbbl
xchg
lods
fisubs
mov
into
aaa
leave
fsts
call
pop
mov
loope
movsl
sub
add
scas
aad
mov
inc
ss
jbe
inc
sbb
push
cmp
enter
lds
dec
and
pop
loop
shll
scas
dec
or
mov
inc
dec
push
int
outsl
in
enter
and
adc
cwtl
and
pop
bnd
xchg
adc
mov
sub
scas
pop
lret
mov
inc
hlt
adc
insb
jb
add
add
xchg
pop
pop
mov
sbbl
and
push
mov
xor
pusha
adc
je
into
int
pop
sbb
shll
mov
adc
sbb
cmp
or
cmp
xchg
out
xchg
xor
and
rcrb
mov
pop
aam
mov
lods
cmp
insl
add
outsb
shlb
push
sub
xor
pop
outsl
sbb
out
insb
stos
cmc
pop
push
xchg
adc
sub
cmpsb
cli
inc
pop
aaa
mov
hlt
dec
out
jne
adc
pop
xchg
mov
mov
lea
pop
xor
mov
xor
lds
scas
mov
cmc
repnz
jno
fs
inc
jle
or
lcall
adc
mov
int3
dec
mov
push
sbb
mov
xor
jl
aas
inc
or
push
arpl
xchg
hlt
mov
call
jle
inc
xchg
adc
push
leave
hlt
aas
arpl
add
adc
sahf
jmp
mov
popf
cmpsl
sbb
jg
or
insb
dec
mov
clts
mov
and
lcall
jp
fisttps
xor
aam
xor
aam
pop
jg
jb
hlt
lea
addb
xchg
out
les
pop
lret
test
ss
popa
ja
xchg
cli
mov
cmp
mov
jecxz
add
adc
or
cltd
test
daa
mov
out
push
mov
inc
pop
inc
aas
mov
inc
stos
stos
push
adc
js
adc
sub
mov
rorl
push
dec
cmp
adc
rorl
sbb
sbb
push
inc
fcompl
lahf
mov
inc
jge
lahf
je
dec
jge
add
cmp
ljmp
inc
add
test
ja
lock
push
pop
lock
add
ja
pop
lods
xor
adcl
arpl
mov
addr16
jp
jge
cmpl
outsl
jo
jbe
xchg
mov
rolb
xor
fstpl
cwtl
ss
xchg
and
xor
dec
cmp
fsts
lcall
pop
cmp
insb
xor
dec
add
jl
xchg
pop
lret
and
adc
mul
bound
aaa
xchg
xor
cmp
xorl
adc
daa
xor
stos
mov
dec
shlb
inc
andl
dec
add
ret
inc
push
push
add
dec
pop
or
push
push
in
cld
add
or
repnz
or
aad
aad
xchg
and
mov
lea
aam
mov
mov
test
mov
xor
push
jns
cmp
fld
adc
xchg
frstor
pop
enter
or
out
test
adc
xchg
pop
cs
add
movsb
mov
push
jno
aam
cmp
rorb
lods
in
jne
mov
popf
cmpsl
xor
and
mov
test
lock
je
test
dec
popf
mov
jns
ja
cltd
leave
cmp
dec
mov
repnz
shrl
shlb
sub
rorb
adc
clc
rcr
sbb
jnp
pop
mov
mov
xor
addr16
popa
cmp
rorl
imulb
pop
jg
ljmp
call
mov
pushf
outsb
fs
cs
pop
cmp
push
add
sub
stos
xchg
mov
lret
mov
xchg
push
call
cmp
stc
mov
popa
call
pop
xchg
xorl
jle
mov
outsl
imul
xchg
jp
inc
loope
lret
mov
sbb
add
jno
pusha
rcll
inc
push
das
and
cltd
fstpl
xor
sbb
push
aaa
sbb
push
sub
std
or
sub
pop
jp
xlat
sahf
sbb
jp
push
cmp
and
gs
sub
idivb
sub
shrb
dec
or
mov
icebp
adc
jne
repnz
ret
ljmp
xchg
rclb
sbb
sbb
pop
sbb
or
xchg
nop
push
mov
or
out
xchg
xchg
push
sbb
das
cmpsl
mov
pop
sub
cld
xchg
icebp
pop
xchg
pusha
xor
jns
test
data16
fwait
jne
xchg
inc
rcrb
push
dec
incb
scas
jle
sbb
fwait
jo
jae
mov
cmp
xchg
jne
sub
inc
ficoml
adc
mov
mov
and
lods
gs
jnp
sbb
out
add
test
stos
jbe
sbb
xor
push
dec
push
or
pusha
mov
and
aaa
mov
and
mov
enter
cmc
repz
push
notl
loope
out
jp
add
mov
fcom
dec
in
push
pusha
mov
inc
stos
inc
mov
push
xor
sbb
shll
int
lods
lods
ja
cmp
imul
arpl
jbe
arpl
outsb
loopne
cmp
sub
ljmp
mov
cmc
dec
xchg
sti
lock
movsl
js
and
or
push
jne
mov
int3
inc
lods
stos
lahf
add
adc
mov
sub
stos
cmp
mov
hlt
int
movsb
gs
adc
or
push
add
decl
push
cmpsl
pop
sti
sub
arpl
and
pusha
xchg
pop
fwait
or
inc
xchg
out
hlt
insl
pop
pop
das
jecxz
ljmp
cltd
add
mov
mov
std
sub
inc
inc
into
sahf
xchg
fs
lahf
sub
test
popf
test
stc
sbb
lea
add
pop
call
xchg
push
ficomps
cmp
sbb
lods
mov
mov
and
mov
imul
fld
mov
sub
stc
mov
in
stos
and
add
mov
cmp
das
stos
inc
in
xchg
call
mov
shrb
int3
sti
fcoml
loope
sub
xchg
xchg
loope
in
ror
fistps
dec
movsl
or
scas
fisubl
jle
xchg
lods
test
fsubrs
mov
lret
jmp
push
test
dec
and
mov
jnp
cmp
jge
sbb
enter
repz
rorb
ds
mov
popf
dec
cmp
lahf
mov
add
mov
mov
jle
jge
pop
push
ds
jnp
sbb
loopne
lcall
fsubl
les
daa
lret
notb
inc
jg
xor
push
and
mov
or
into
xor
push
mov
popf
bound
fdivs
push
mov
dec
out
insb
scas
nop
mov
sarb
mov
xchg
push
jae
ljmp
mov
mov
test
mov
cld
repnz
jo
cmpsl
mov
scas
and
movsl
dec
adc
dec
mov
aaa
push
jmp
ljmp
mov
into
stc
push
sub
in
loop
inc
sub
dec
lock
adc
lcall
pop
gs
divb
jg
out
jns
cmp
mov
inc
rcrb
mov
mov
jge,pt
cmpsb
mov
inc
lret
xlat
enter
dec
cmpsb
mov
ret
fs
or
inc
lret
dec
ret
pop
iret
popf
xchg
mov
inc
enter
js
xchg
fidivl
xchg
lock
out
inc
sub
andl
jl
inc
adc
lahf
aas
jge
xorl
loop
jno
cmp
sub
and
xchg
jecxz
xchg
xlat
push
add
inc
shl
or
xchg
fwait
aam
ret
push
adc
mov
dec
outsb
js
test
push
pop
dec
mov
mov
int
into
fstl
popf
repnz
mov
mov
add
lods
stos
bound
loope
js
inc
mov
pop
lock
pop
data16
les
insl
aam
call
fwait
xor
aad
xchg
enter
pop
xchg
insb
lds
pop
mov
add
add
ja
cli
jle,pn
call
xchg
push
mov
cs
ja
das
xor
into
xchg
jo
pop
inc
mov
jno
out
dec
mov
jecxz
xchg
shlb
sub
outsl
or
into
aad
out
or
lds
mov
in
ret
push
das
push
mov
sbbb
fwait
dec
lret
jne
jo
fdivr
imul
out
sar
push
jne
fstpl
sub
movsl
or
rol
ret
lods
sbb
adc
jl
int
cli
inc
int
xchg
cmp
fnstsw
repnz
mov
std
mov
pop
in
inc
inc
jno
dec
mov
movsb
mov
jg
jns
xchg
imul
jbe
mov
xchg
shrl
fst
push
mov
fs
nop
fsub
shrb
xor
lahf
pop
cmpb
lods
inc
sub
jo
cwtl
sub
ret
xor
fdivs
jno
stos
das
adc
inc
jge
js
jge
push
mov
pop
dec
cmp
push
jns
xchg
and
aaa
xchg
rolb
xor
xchg
or
pop
clc
mov
mov
rolb
jne
repz
aas
stos
inc
inc
fimull
lcall
out
shl
or
in
jmp
divb
addr16
call
mov
add
int
lcall
dec
cmpsl
testb
add
pop
int
push
pop
dec
les
mov
sbb
mov
mov
xchg
inc
mov
push
and
ds
xchg
ficoml
test
push
push
out
clc
jmp
lret
xchg
rorb
mov
out
mov
jecxz
jmp
lods
push
idiv
lahf
fldcw
add
movsb
cmpsb
inc
sub
filds
jl
cmp
movsl
mov
jle
test
clc
mov
rcll
jg
xchg
add
add
pop
xchg
dec
mov
pop
out
cltd
jnp
pop
leave
inc
push
cmp
mov
xchg
aas
inc
stos
adc
dec
xor
fucomip
cmp
sar
push
stc
nop
mov
ljmp
aad
loopne
or
stos
or
movsl
cld
cs
mov
enter
je
jns
ja
sub
or
sbb
xchg
lods
cmp
outsb
and
mov
xlat
adc
stos
mov
jnp
pop
cld
popw
cmc
pop
jne
inc
rcrl
jp
cwtl
pop
je
test
push
push
sub
in
sub
insb
or
mov
push
sbb
mov
xor
stos
dec
inc
fildll
movsb
jecxz
jmp
jle
shrb
ljmp
popa
and
int3
cmpsl
adc
test
ret
test
xchg
out
mov
cmp
and
es
movsb
lcall
out
mov
incb
mov
enter
rclb
je
insb
pop
cmp
push
aam
cmp
push
sbb
fistps
pushf
movsb
xor
or
out
sbb
push
push
insb
inc
or
test
jecxz
ss
xor
into
rcl
test
lds
ljmp
sub
push
pop
outsb
cmp
pop
ss
jmp
or
bound
xchg
jne
xchg
testb
xor
mov
adc
adc
cmp
and
loope
inc
mov
idivl
xchg
mov
inc
les
pusha
lea
sbb
pop
repnz
das
imul
add
sbb
cmp
insl
cli
push
cmp
add
fadd
insb
jmp
xchg
test
pop
xor
lods
mov
xchg
shrb
inc
sarl
add
push
fldt
shl
pop
je
aaa
mov
inc
arpl
adc
jge
cmpsl
insl
jbe
jns
imulb
fstl
and
sysexit
cmp
mov
xlat
add
js
mov
inc
dec
dec
loop,pt
test
lret
inc
sbb
mov
xchg
sub
or
pop
jl
mov
add
mov
enter
loopne
jb
dec
into
xchg
or
movsb
push
fnsave
or
jno
or
mov
lahf
ret
xchg
nop
aaa
pop
jnp
cmpsb
jo
jl
cvttps2pi
arpl
sub
rcrl
sub
shrl
hlt
icebp
cwtl
test
fimull
xor
iret
mov
fiadds
push
enter
push
mov
sub
clc
push
les
jb
xchg
mov
in
push
pop
jg
jge
jmp
stos
movb
lahf
fs
outsb
mov
mov
rolb
mov
pop
fldt
std
scas
xchg
fstpt
mov
shll
and
dec
outsl
cs
mov
dec
test
inc
inc
das
cmp
push
aam
cmp
es
xchg
fldcw
icebp
mov
mov
fistl
mov
rcrb
jmp
dec
jg
or
dec
dec
ja
mov
pop
mov
js
xchg
loopne
adc
adc
jge
jge
insl
sub
sbb
pop
arpl
or
adc
fstpl
add
inc
cmpsb
ret
cwtl
sbb
mov
jp
sbb
jmp
sahf
int3
inc
push
jns
pop
les
int3
lcall
inc
push
push
in
scas
cmpsb
les
aad
leave
dec
xchg
lock
mov
inc
inc
push
dec
jg
fcompl
or
lahf
mov
subl
mov
push
mov
mov
sub
jbe
mov
mov
sbb
sbb
xchg
stc
out
subb
lret
fildl
xor
add
pusha
adc
movsl
ret
jno
xchg
jl
cmpsb
data16
mov
adc
jmp
pop
hlt
adc
pop
push
mov
sub
pop
ja
jne
add
xchg
mov
jle
dec
int
mov
mov
sub
shl
lods
sub
loope
xchg
jl
data16
fsts
push
xor
xchg
shl
dec
mov
adc
add
jmp
imul
mov
inc
imul
ds
lds
int3
pop
adc
pop
or
adc
aas
mov
cmc
and
sti
jl
arpl
adc
jg
cmpsl
dec
dec
loope
jge
lahf
inc
push
jge
mov
jae
lret
jge
lahf
inc
pop
leave
in
sbb
jg
rorb
jnp
in
ficomps
jl
xchg
fs
sub
fisubrs
push
aad
icebp
scas
or
enter
movsl
fidivrl
ds
lods
xchg
add
cmp
push
mov
daa
popa
cmp
mov
mov
sti
lret
imul
hlt
push
lcall
js
js
push
pop
cli
xchg
mov
movsl
mov
cmp
dec
loop
out
jge
stos
es
add
push
sahf
dec
inc
push
mov
inc
jb
pop
cli
fistpl
cmc
adc
loopne
push
stos
in
lds
stc
push
enter
ljmp
out
insb
jo
aam
call
push
or
mov
mov
out
mov
call
fisttpll
or
loope
cmc
lods
push
and
push
sbb
pop
jns
sbb
sahf
inc
and
incb
arpl
std
pop
incb
dec
lea
clc
decb
push
pop
pop
xchg
pusha
pop
sub
jp
es
sub
sub
mov
and
or
xor
xchg
add
mov
and
xor
enter
pop
lret
aad
jmp
jge
jg
jecxz
or
adc
popf
adc
inc
shrl
test
daa
pop
push
cmp
in
popf
jecxz
xor
sbb
je
ret
adc
int3
roll
pop
mov
mov
addb
pop
std
ds
push
lds
mov
cs
jo
push
repz
daa
push
inc
mov
mov
dec
lret
mov
scas
rcr
pop
clc
xchg
mov
sbb
nop
push
push
inc
xchg
test
fcomp
jp
dec
mov
iret
or
xchg
bound
jno
pop
stc
ds
xchg
fcoms
lahf
cmc
push
pop
mov
in
xchg
bt
cmp
and
fs
ljmp
outsb
xor
std
mov
mov
lret
pop
ror
mov
js
mov
into
lcall
and
fstpt
mov
daa
ret
cmpsb
scas
xchg
add
repz
jnp
aas
sub
pop
enter
in
lock
mov
mov
scas
loopne
ss
cmp
outsl
icebp
mov
mov
inc
js
sbb
xchg
inc
lods
mov
movsl
mov
mov
cld
mov
pop
cltd
aam
cwtl
dec
mov
out
fists
loopne
sub
mov
loopne
cwtl
fimull
sub
mov
pushf
push
dec
fdivrs
fwait
sbb
jmp
pop
fwait
sbb
fisttps
scas
mov
cld
cmp
xor
pop
stos
mov
call
add
mov
xchg
pop
or
jne
sub
cld
xchg
adc
push
subb
xchg
fcomps
rolb
mov
lahf
xchg
pop
inc
inc
sbb
idivl
dec
add
add
xor
push
lods
pop
ret
test
inc
aad
pop
decl
pusha
sub
lds
push
push
xchg
repz
cmp
imul
pop
out
out
mov
pop
aam
in
inc
jns
push
xor
dec
jbe
dec
aaa
pop
pop
into
pop
pop
repz
lahf
adc
adc
push
ret
mov
xchg
mov
pop
xchg
outsb
and
xchg
pop
sbb
inc
adc
jnp
mov
imul
mov
inc
pop
mov
jne
scas
shlb
mov
insl
pop
xlat
daa
xor
push
mov
dec
jge
and
push
adc
push
adc
sti
gs
xorb
mov
stos
xchg
mov
mov
repz
pop
dec
or
push
mov
sbb
fldenv
lahf
cld
aaa
adc
mov
subl
lods
mov
lahf
jecxz
jno
cmp
pop
aaa
mov
fwait
dec
rcll
leave
ffreep
fyl2xp1
sbb
movsb
mov
out
es
push
pop
repz
je
cltd
mov
lods
pop
arpl
loopne
adc
xchg
sbb
mov
outsl
xor
dec
or
dec
xchg
nop
mov
cltd
push
repz
mov
icebp
sahf
in
sub
mov
jl
movsb
add
dec
std
cmp
mov
rcrb
or
inc
jbe
outsb
movsb
jnp
push
daa
mov
jle
divb
stc
and
rcrw
xchg
adc
in
jne
adc
or
and
sub
std
sahf
push
and
add
int3
push
stos
push
shll
iret
rorb
mov
cwtl
ror
int3
dec
rcl
sub
sbb
pop
jge
mov
enter
xor
test
iret
ret
adc
dec
sbb
fdivr
adc
scas
xchg
pop
push
pop
sbbl
dec
pop
scas
mov
ficomps
shll
or
cmc
scas
xchg
lahf
mov
pop
testl
pop
cltd
cld
call
push
lds
outsb
daa
push
jo
pop
in
mov
or
inc
rol
fnstenv
scas
aas
add
xchg
mov
and
mov
je
sbb
mov
sarb
pop
in
push
cmp
aaa
loop
mov
std
ret
push
andps
xchg
sti
out
dec
lret
imul
std
cmp
or
std
outsl
jge
cmp
mov
cmp
pop
scas
xchg
out
xchg
push
dec
jecxz
sbb
fwait
mov
imul
lods
jecxz
rolb
jge
dec
and
cmp
and
jle
aad
and
stos
mov
jmp
mov
fsubl
inc
mov
push
mov
mov
inc
cmovl
pop
and
lock
js
mov
je
dec
jecxz
ret
cmp
fsubrs
test
andb
mov
add
loopne
cmpsl
rorb
movsb
mov
das
in
jbe
cmpsl
push
popf
jbe
out
jno
cmp
mov
pop
dec
je
inc
cmp
jmp
mov
stc
dec
cs
fwait
inc
mov
cmp
repnz
pop
adc
push
and
push
lret
fsubr
hlt
test
fnstcw
xchg
rclb
outsl
sub
and
xlat
and
sbbl
push
aam
push
mov
dec
sbb
mov
adc
inc
mov
push
ja
fmuls
cmpsb
addb
or
inc
sub
pop
push
repz
add
negl
mov
test
stc
xchg
inc
cmpsl
jl
mov
inc
add
and
sub
add
cltd
push
fs
scas
sti
insb
sbb
jnp
fs
imul
in
add
push
jp
test
cmp
and
mov
inc
movsl
mov
icebp
test
insl
jne
cwtl
and
or
adc
or
fstps
push
adc
push
test
add
xor
pop
js
mov
lods
jo
pop
and
test
or
dec
mov
sarb
inc
js
addl
inc
out
jg
cmc
dec
mov
shlb
sbb
cmpsb
insb
psadbw
in
popa
xchg
lahf
popl
mov
ljmp
loope
inc
mov
sarl
arpl
std
inc
outsl
pushf
lds
xor
rorl
jle
addr16
insl
mul
repz
mov
adc
jae
push
lods
xor
loope,pt
push
inc
xchg
roll
cltd
sbb
and
int3
ja
xor
mov
or
xor
push
shr
jae
movsb
mov
mov
cmc
lcall
pop
sbb
mov
cli
fs
pop
push
mov
adc
pop
jg
pop
dec
repz
repnz
jl
popa
pop
sub
mov
out
cmp
scas
ds
out
call
ja
pop
jle
mov
sbb
out
pop
fsubrl
cmp
mov
mov
outsb
push
ficomps
fwait
jg
negb
mov
data16
mov
aaa
xchg
rolb
stc
inc
fwait
pop
rclb
dec
pop
scas
imul
xchg
stc
inc
cmc
lock
jo
dec
or
out
fnstcw
cmc
add
push
cpuid
inc
lock
mov
inc
sub
fcmovnbe
jl
aam
call
sbb
mov
push
sub
pop
xlat
push
scas
mov
and
sub
fwait
out
sub
adc
fwait
jb
popf
cmp
inc
cwtl
into
shrb
fwait
cmp
sub
pop
xchg
or
push
sbb
cmpsl
les
lea
fxam
icebp
out
dec
loope
insl
add
fbstp
adc
push
adc
out
loope
mov
fwait
mov
sub
sbb
jb
test
data16
insb
cmp
dec
jno
dec
mov
jnp
mov
mov
insb
fistl
aas
lods
sahf
xchg
clc
addr16
add
jg
mov
mov
je
ds
xchg
and
xchg
cmc
ds
mov
xchg
aam
lds
push
pop
pop
dec
inc
sbb
inc
and
push
stos
xor
lods
outsl
jae
sbb
push
decb
mov
xchg
lods
ss
jmp
sub
fiadds
clc
dec
je
lods
int3
inc
addr16
push
rcrl
popa
push
pop
movsb
mov
test
push
roll
xor
or
aaa
scas
pop
pushf
push
mov
push
pop
dec
pop
sbb
mov
sbb
mov
xor
or
fcmovu
addr16
sbb
sbb
cmp
stc
std
mov
mov
into
test
jmp
sahf
and
pop
pusha
mov
jo
mov
lret
clc
jne
jb
sbbl
inc
sub
call
mov
inc
fldt
lea
or
cmpl
repz
dec
shll
jecxz
out
jbe
repz
xorl
dec
stc
imul
pop
inc
adc
jl
scas
cmpsb
movsl
dec
cmp
dec
lret
cmp
xchg
pop
out
push
outsl
mov
sub
push
cltd
jl
cld
lods
loopne
or
mov
mov
popa
lods
pop
outsb
xchg
int3
mov
inc
fistl
sbb
push
mov
pushf
push
loopne
lds
dec
add
jge
ficompl
jmp
iret
pop
adc
inc
xchg
cltd
inc
cmc
negl
cld
jl
xchg
pop
hlt
jb
mov
jmp
mov
cmp
lds
ja
push
lock
xchg
adc
sub
out
fsub
mov
rolb
jne
test
add
aas
pushf
dec
ds
adc
xor
loope
lods
arpl
mov
movsl
lods
daa
xchg
cltd
test
cmp
repz
lret
outsb
cmp
adc
or
xor
mov
loope
cmpsl
adc
xor
fwait
sbb
or
sub
movsb
repnz
cmp
fwait
in
sub
lret
out
popa
xor
js
ret
leave
aaa
int3
in
cmc
lcall
mov
xor
pop
and
pushl
scas
pop
adc
jl
fsubrp
mov
add
adc
cwtl
sbb
sbb
jne
jle
add
jo
js
test
lods
ret
xor
jb
push
lahf
xor
fidivrs
xor
mov
mov
adc
into
xlat
cmp
sarl
movsl
cmpsb
push
test
lret
dec
andl
ds
mov
cmp
cwtl
jecxz
pop
sub
mov
xor
lahf
addr16
mov
in
sbb
ret
movsb
andb
mov
push
je
xchg
es
mov
mov
aad
fsubl
repz
add
idiv
jl
not
push
pop
cmpsl
hlt
outsb
xor
out
lahf
adc
stos
pop
or
stc
int3
ja
xor
push
pop
mov
lcall
jge
xor
std
add
add
pop
dec
test
add
add
pop
cmpsl
mov
sub
push
mov
in
hlt
lcall
mov
xor
repnz
cld
out
push
out
sbb
ret
jne
lds
fists
sbb
fdivrs
or
pop
xchg
and
cmp
test
or
mov
sbb
repz
loope
mov
sbb
dec
sahf
mov
shr
jno
sti
sbb
lock
lcall
xlat
stc
adc
rolb
gs
mov
mov
mov
loopne
fidivrs
xor
mov
into
into
push
cmp
push
jg
inc
push
imul
mov
xor
adc
jbe
movsl
and
mov
cs
mul
fs
lods
pop
lahf
mov
xorb
sub
out
ret
inc
mov
lret
lods
dec
pop
xlat
jg
dec
lret
adc
ja
in
cli
xor
jle
xlat
into
lea
xor
xor
repz
mov
cmp
daa
lods
mov
adcb
fwait
int
clc
leave
out
outsb
dec
xor
cli
popa
cmpsb
push
sbb
inc
push
lods
test
pop
push
jnp
test
or
cmp
jg
xchg
rcll
icebp
dec
mov
cmp
test
pop
mov
or
and
bound
rcll
cmc
mov
in
push
loope
aad
mov
inc
iret
hlt
arpl
mov
or
or
scas
mov
cld
aas
sbb
outsl
cmp
iret
or
jmp
aaa
stos
mov
cs
je
outsb
test
jmp
ficomps
fwait
cmp
fnstenv
push
lock
inc
std
jo
adc
xor
aas
mov
xor
mov
dec
loope
inc
sbb
inc
fsubs
test
fnsave
inc
pop
jbe
sbb
xchg
fisttpl
adc
xor
daa
popf
adc
or
pop
xchg
pop
pop
jns
stc
jae
sub
pop
and
push
or
cli
repnz
lods
mov
hlt
pop
xchg
pusha
and
lcall
jg
nop
test
fisubs
in
jne
loop
lret
sub
push
lcall
sub
repz
movsl
imul
mov
sbb
aam
inc
sub
sbb
scas
mov
xor
cmp
inc
popf
test
push
push
ss
ss
out
mov
ret
jnp
lahf
mov
shlb
cmp
loope
or
aad
or
fistl
insb
stos
push
test
loope
and
push
jmp
push
mov
repnz
stos
xchg
imul
not
sbb
ret
lret
mov
daa
push
or
shl
mov
and
sbbl
out
ror
pop
leave
jg
das
sbb
fists
fistpll
outsb
in
xor
rcl
or
mov
lock
sbb
mov
sub
cmp
test
fwait
cwtl
lahf
fbld
test
or
or
pop
ja
cmpsl
pop
dec
jecxz
call
inc
movsl
call
pop
mov
jge
xchg
xor
arpl
iret
jp
or
repz
scas
mov
cmpsb
dec
and
lea
into
imul
sbb
mov
rcll
dec
push
jecxz
orb
lods
xlat
pop
adc
mov
push
xchg
inc
imul
call
aam
ds
push
ret
jb
jl
xor
pop
pusha
inc
pusha
pop
ss
lcall
loop
jb
test
sub
mov
pop
adc
adc
movsb
shlb
icebp
dec
xchg
lcall
fidivrs
movsl
sub
call
push
out
adc
sbb
inc
imul
fwait
cmp
pusha
sub
pop
sarl
js
mov
jnp
sbb
sahf
and
dec
mov
jb
sub
mov
jecxz
movb
and
fnstcw
push
scas
adc
mov
repz
or
loopne
aaa
sarb
jnp
sbb
ljmp
sub
or
adc
sbb
sub
lret
dec
mov
scas
jbe
out
popa
mov
mov
fwait
and
movsl
dec
mov
popf
adc
outsl
cmp
pop
ret
cmp
xor
xchg
xchg
cmp
mov
fnstenv
andl
jge
lea
in
add
sti
mov
inc
arpl
ljmp
std
scas
mov
lret
cli
ret
int
mov
cld
or
rcr
mov
mov
mov
ja
outsb
fwait
mov
daa
leave
sub
leave
lcall
fdivrl
mul
mov
mov
pop
fcoml
cmp
dec
andl
lds
cltd
sub
push
add
sahf
scas
add
icebp
lds
insb
cmp
push
push
mov
or
int3
dec
sub
xlat
dec
inc
orl
mov
fdivrs
movsl
dec
xchg
je
fs
and
lahf
fs
movsl
mov
mov
test
shll
push
out
lock
mov
cld
in
pop
sub
in
or
je
fwait
jle
sbb
jnp
cltd
lock
jno
jae
stc
add
sbb
call
sub
xor
cmp
xor
int
int
in
daa
mov
std
fidivrs
push
das
pop
pop
lahf
inc
shll
mov
cmpsl
mov
ja
cmc
idiv
inc
or
bswap
aas
inc
cltd
in
or
inc
mov
inc
mov
cmp
inc
push
lcall
sti
and
or
in
jbe
mov
sbb
out
int3
inc
dec
fwait
pop
xor
int
xor
adc
xchg
cmp
mov
hlt
je
sarl
popa
push
xchg
out
movntps
jp
jmp
jo
imulb
xchg
xchg
pop
inc
inc
push
mov
scas
pop
jns,pt
sbb
fdiv
les
push
repz
xchg
mov
jl
decl
pop
loope
test
pop
stc
mov
lock
in
nop
mov
push
sbbb
cwtl
xchg
test
pusha
pop
mov
mov
ret
lods
mov
inc
jae
mov
data16
cmp
xlat
insl
sbb
push
lods
xchg
mov
jp
fldl
jmp
cmp
loope
adc
rcrl
loop
into
fildl
addr16
add
cmp
and
cmp
inc
test
mov
sahf
jg
pop
popa
mov
ja
scas
jmp
ja
jnp
jns
pushf
mov
push
jle
iret
insl
xor
ds
lea
and
mov
lods
push
test
lahf
mov
outsb
jae
xor
sar
idiv
in
pushf
jp
lea
push
or
call
add
lock
xor
xor
pop
lea
mov
adc
test
jg
roll
mov
cli
in
testb
sbb
adc
aad
mov
xchg
or
add
pop
mov
mov
push
push
pop
mov
mov
jnp
inc
popf
inc
add
in
xchg
pop
lea
xor
xor
mov
sbb
dec
call
jp
xchg
movsl
lea
rclb
pop
or
mov
in
sbb
xchg
out
test
add
jno
sub
popf
or
mov
mov
call
and
push
inc
jecxz
mov
lds
js
add
adc
push
outsb
push
lea
cmp
mov
jns
mov
insl
mov
aaa
cmp
mov
fsts
sbb
rcl
es
mov
imul
loopne
loopne
inc
mov
jecxz
jp
and
xlat
sbbb
ror
je
adc
out
cmpsl
fdiv
xchg
imul
lods
mov
loope
and
es
ss
pop
add
mov
pop
imul
sub
pop
pop
shll
imul
sbb
repz
mov
pop
sub
inc
cmp
rcr
popa
cld
lret
and
pushf
adc
into
dec
jns
pop
outsb
mov
push
xchg
dec
pop
inc
mov
mov
or
notb
fdivs
pusha
add
xor
and
sbb
sub
out
mov
mov
xor
push
mov
hlt
xchg
pop
xchg
and
imul
popa
fs
add
nop
inc
sub
out
push
shl
js
outsl
mov
mov
pop
inc
mov
inc
les
in
stos
push
jb
mov
loopne
or
or
fsubp
or
cli
xchg
mov
movsl
sub
and
xor
add
cmp
dec
xchg
aad
pop
pushf
and
pop
aas
bound
fsubrl
mov
fsubl
call
ja
aam
add
scas
mov
int
adc
mov
inc
test
jle
in
test
push
ss
mov
xchg
cmc
mov
jns
js
add
push
in
ret
pusha
ss
daa
daa
movsb
lret
mov
lret
adc
add
negl
push
xchg
mov
pop
cmc
pop
lock
out
cld
test
dec
std
or
sub
xchg
nop
andb
add
add
jg
jp
lods
inc
movsb
arpl
push
cmp
push
sbb
push
out
inc
cmp
add
add
gs
outsb
scas
push
shl
fildll
jns
mov
sti
dec
lret
sub
cmp
or
faddl
in
cld
pushf
stc
imull
mov
adc
xchg
xchg
lock
aaa
dec
js
hlt
or
daa
push
aas
aad
xor
ja
cld
mov
dec
push
xchg
in
sub
lea
xchg
pushf
cwtl
test
dec
sub
mov
sbb
mov
outsl
mov
pop
inc
dec
cmp
and
add
rcll
fstpt
daa
jge
loop
fisttpl
xchg
sbb
push
pop
mov
arpl
fisubs
mov
or
jnp
cmpsl
mov
pop
mov
or
test
adc
rcl
shll
inc
push
pop
sub
out
mov
adc
shrl
mov
pop
lds
or
lods
test
jmp
fdivl
pop
inc
push
inc
les
inc
xchg
pop
cwtl
mov
push
push
test
movsl
sub
add
jnp
dec
sub
dec
sub
xor
fwait
aad
cs
ljmp
pusha
sub
push
jne
repz
jnp
lds
js
or
and
movb
sti
negl
sbb
adc
in
stc
mov
push
or
xlat
sub
pop
dec
lret
popf
shll
adc
cmp
push
lods
sti
dec
sub
in
jo
ss
xlat
pop
fisttps
xchg
push
aad
and
pushf
stos
dec
cmc
cmp
xor
fiadds
mov
push
into
cmpsl
pushf
jae
stc
xor
jae
imul
fldenv
sbb
repnz
push
or
jo
jmp
stc
jno
into
mov
xchg
sahf
sahf
mov
pusha
mov
cmp
xor
push
or
fwait
popa
xor
sti
mov
imul
ret
mov
rolb
cmp
subl
je
adc
pop
bound
xchg
jecxz
je
aam
sub
add
test
mov
negl
adc
mov
fcomi
mov
test
out
mov
in
xor
inc
dec
or
iret
cmpl
xor
scas
lahf
adc
jno
adc
and
cld
arpl
and
cmpsb
push
std
jle
xlat
push
cwtl
cmp
ja
mov
lds
push
mov
cmp
add
clc
pop
cmp
shl
mov
imul
mov
addr16
out
sbb
inc
ss
das
inc
jmp
shl
adc
xchg
test
inc
xor
in
sarb
ja
sahf
dec
in
cmpsl
mov
pushl
mov
movsl
es
or
outsl
dec
shl
add
lds
push
mov
mov
cmp
jmp
adc
fcmove
sbb
jge
ss
mov
loopne
inc
sub
testb
mov
and
cmp
loop
mov
add
js
and
adc
mov
xor
aam
loopne
faddp
adc
add
in
mov
int3
jle
pop
mov
push
jo
into
mov
or
repz
fninit
pop
push
cmpb
add
add
push
sti
sub
ret
call
and
jno
push
cld
or
mov
imul
lock
fmul
lods
cmpsl
pop
and
inc
movb
mov
cmp
jb
test
lods
shl
sub
sub
sbb
xchg
add
ss
test
push
or
jle
xchg
sti
fisubrl
or
jb
jne
push
loop
insl
xor
jae
lahf
addr16
fistl
ss
pop
out
imull
push
fst
or
test
jmp
stos
sahf
out
adc
pop
add
jmp
or
inc
hlt
mov
sbb
cmp
mov
das
xor
pop
cmc
sub
shl
mov
adcl
fisubrs
push
push
mov
lcall
or
mov
div
fimuls
bound
jae
mov
pop
pop
nop
dec
das
xchg
fcmovbe
movsb
imul
mov
sub
dec
loop
and
xor
out
jg
mov
xor
inc
xor
test
push
lea
xor
outsb
js
sub
movsl
pop
mov
adc
adc
imul
xchg
add
insb
aas
mov
adc
das
pop
jecxz
sub
dec
cli
adc
js
inc
cs
outsb
pop
sub
pushf
and
mov
and
pop
and
out
mov
jmp
push
insl
inc
inc
enter
add
mov
lods
adc
test
push
inc
iret
scas
mov
cmc
scas
jl
add
aam
lods
pop
and
stc
mov
ljmp
pop
push
shlb
dec
in
in
add
out
cmc
pop
jns
add
and
pushl
jge
in
mov
jl
stc
mov
adc
cmpsb
aas
add
inc
popa
mov
gs
setne
shll
loop
ficoms
mov
add
jns
xor
test
int
lret
lcall
or
outsl
data16
int
lret
add
cmpsb
pop
pusha
dec
ret
leave
lods
sbb
and
push
push
cmc
jae
out
pop
or
sub
and
mov
aaa
sbb
shll
fs
cmp
sbb
scas
xchg
cmpsb
push
addb
icebp
dec
fists
pusha
nop
cld
mov
mov
fisttps
movsl
pop
ret
test
lea
xor
dec
jge
notb
test
lods
add
je
xchg
mov
xchg
jle
mov
inc
and
push
sbb
mov
mov
pop
ficoml
shrb
lds
mov
nop
xor
xor
aad
int3
loope
les
in
jg
dec
pop
or
sub
sub
sbb
pop
lds
sbb
cmp
shll
mov
imul
push
out
adc
jmp
sbb
rcl
jnp
xchg
roll
sub
push
out
inc
dec
fists
mov
scas
scas
xor
aam
movsl
xor
push
jbe
mov
rcll
dec
bsf
sub
mov
mov
mov
jbe
scas
int
mov
nop
test
cmp
cmp
int
or
lret
inc
test
notl
sbb
inc
sub
jae
int3
mov
xchg
iret
inc
in
fadd
mov
addl
sarl
stc
jbe
mov
orl
dec
pop
hlt
xchg
pop
loope
daa
mov
test
nop
in
xor
jbe
pop
jmp
ret
outsb
inc
ja
in
rcrl
push
lret
fiadds
ret
adc
cmp
out
jle
push
jb
mov
push
cmp
and
lret
cmpps
adc
sub
fwait
out
pop
push
dec
add
cld
mov
popf
int3
dec
hlt
stos
cs
bound
rorb
cs
loop
test
inc
scas
mov
mov
test
and
mov
sbbb
push
out
loope
out
into
mull
pop
fwait
adcb
pop
pop
insl
and
shrl
mov
das
sbb
rcr
loope
or
orps
jmp
js
insl
in
lcall
leave
xchg
jle
dec
pop
pop
inc
xor
add
and
pop
fsts
adc
ja
test
leave
mov
dec
and
jbe
jecxz
and
lock
mov
xor
push
imul
gs
ds
jbe
cmp
clc
enter
mov
std
add
xor
add
loope
dec
and
cmp
sahf
imul
mov
push
mov
mov
jbe
fildll
dec
inc
fdivl
addl
pop
push
repz
imul
popa
or
mov
pop
mov
test
cwtl
test
loop
inc
imul
js
repnz
mov
xchg
lret
cmpsl
test
and
xor
jns
repnz
sub
dec
sbb
sbb
and
xchg
mov
inc
shr
jmp
xor
or
push
adc
shll
outsb
push
jmp
or
lahf
adcb
xor
movsb
ss
and
xchg
stc
stc
int3
sbb
ljmp
inc
inc
add
or
push
pop
and
lret
inc
pusha
push
arpl
pop
push
andb
xor
in
push
sarb
cmpl
lcall
ss
sub
push
jno
mov
sub
adc
lahf
sti
sbb
inc
sbb
fwait
mov
mov
push
xchg
pop
scas
pop
jmp
sub
dec
lret
cmpsl
aam
sub
sbb
cwtl
test
adc
test
fisttps
mov
dec
pusha
push
mov
scas
add
lods
ret
in
sbb
xor
mov
adc
stc
xlat
fdivs
iret
repnz
mov
cmp
aam
imul
xchg
sbb
sbbl
aaa
test
cwtl
xor
mov
sub
movsl
pop
mov
push
cmpsl
fdivp
push
lret
aas
jno
dec
out
or
ljmp
mov
mov
ret
cmp
mov
pop
dec
mov
leave
sbb
cli
test
ja
daa
push
insb
sub
scas
sahf
movsb
loopne
in
jge
adc
cmpsl
mov
pop
out
stos
lea
cltd
xchg
or
clc
cwtl
imul
stos
cmpsb
std
sti
cmp
add
arpl
js
clc
fidivrl
xchg
mov
mov
pop
or
test
xor
in
sub
sub
aad
xchg
push
addr16
cwtl
xchg
bound
mov
ss
les
sbb
js
xor
aam
stos
fs
loopne
sti
int
aam
insb
sti
sbb
mov
nop
jbe
leave
sbb
adc
nop
das
sub
push
loop
stc
mov
mov
out
nop
inc
mov
pop
mov
in
pop
gs
cmp
mov
sti
xor
out
mov
sarl
push
lds
pop
mov
loope
inc
shlb
repz
add
push
jae
inc
or
inc
adc
ficompl
loopne
repz
aad
jnp
sti
sbb
mov
lods
ficompl
pop
inc
jp
nop
pop
adc
sbb
ficompl
ret
decl
divl
mov
pusha
lds
lcall
lods
insb
fisubrs
dec
cmc
pop
lods
and
jecxz
xchg
stos
mov
fmul
lods
lcall
adc
aaa
sahf
pusha
mov
jle
dec
cmpsl
push
push
dec
scas
push
fdivrs
ret
pop
push
test
mov
sbbl
mov
cmp
push
sarb
fistpl
in
in
ljmp
inc
jp
incl
jle
stos
cld
out
jno
add
ret
clc
jns
lahf
leave
cmp
cmp
insb
int
xor
test
xor
insb
js
mov
and
in
dec
or
aam
enter
jge
dec
aam
cmp
call
dec
movd
xchg
push
cmp
push
aad
sar
loop
or
addl
mov
insl
in
xor
ss
rcll
push
cmp
jmp
and
sub
into
mov
mov
sbb
and
push
dec
call
and
adc
pop
add
mov
test
cmp
push
pop
cmpsl
or
lds
add
push
inc
inc
cmpsb
mov
lds
and
lds
jb
jb
lock
xchg
bound
stc
and
into
pop
and
jbe
out
mov
pop
jo
mov
jae
cmp
cmp
sub
mov
push
ss
push
jp
and
cmpsl
lcall
fs
fnstsw
sub
inc
push
pop
out
mov
sub
gs
xchg
arpl
dec
or
mov
pop
xor
jge
insb
loopne
pop
call
xchg
cmp
shrl
les
jo
jmp
mov
enter
out
aad
sub
xchg
adc
in
sub
aad
dec
add
lock
dec
push
idiv
mov
cmp
adc
push
dec
mov
test
pop
pop
sbb
cmp
lret
fstpl
daa
fisttpl
lea
or
scas
dec
jbe
test
jns
xchg
push
rclb
fcmove
mov
loop
mov
sbb
sub
ja
fsts
inc
cld
negl
xor
ja
mov
fwait
aaa
add
add
lods
out
xchg
pop
push
pop
loop
lret
dec
xorb
ss
in
cli
jg
xor
inc
lret
jb
jge
sbb
mov
or
mov
xchg
push
das
push
or
jne
cmp
std
mov
pop
push
lods
xchg
push
movsl
pop
or
xchg
fdivs
sahf
scas
mov
loope
dec
test
subl
test
xchg
in
js
mov
ja
rolb
pop
mov
inc
cld
ja
or
cmp
mov
in
mov
das
mov
aas
jno
lahf
add
out
pop
pop
arpl
push
rcl
sarb
mov
add
cltd
add
mov
pop
repz
mov
lock
pop
sub
sub
pop
push
andb
enter
jmp
ret
ljmp
xor
sub
into
outsb
and
mov
cli
cld
pop
cmc
jge,pn
pop
arpl
push
mov
push
rcl
into
push
call
repnz
inc
mov
dec
sbbb
ds
cmp
and
fidivs
or
ret
bound
push
out
jle
in
sahf
je
pop
xchg
and
int3
or
jmp
fadds
je
add
in
xchg
sti
mov
pop
enter
ds
push
icebp
rolb
ja
insl
pop
insl
in
in
or
add
pop
scas
push
arpl
int3
adc
pop
imul
sub
mov
sti
rorl
ffree
popa
xor
jge
inc
jbe
iret
dec
pop
in
or
cmp
std
sub
jbe
inc
adc
pop
and
cld
push
pop
loope
xchg
cmc
int
and
fimull
inc
add
jge
jl
sbb
test
xchg
dec
cmp
mov
movsl
mov
movsb
inc
or
sbb
or
jbe
into
les
jp
pop
sbbb
inc
mov
or
jns
mov
gs
aaa
cwtl
push
cmp
inc
cmovne
insl
je
adc
xor
jb
inc
xor
and
jmp
sti
pop
mov
or
and
push
pop
std
fstpt
adc
push
mov
add
add
movsb
gs
adcb
mov
mov
stos
mov
outsb
mov
popa
cmp
popa
jmp
cwtl
testl
xor
and
push
fmull
sbb
add
aad
add
lock
sti
cwtl
out
add
daa
sbb
fs
es
je
loopne
pop
das
sbb
mov
mov
pop
inc
cmpsb
mov
cmpl
mov
icebp
addr16
dec
mov
jne
mov
aaa
push
and
fcmovnbe
jns
repz
lret
icebp
repnz
sub
sahf
lods
in
xchg
inc
addr16
fwait
and
mov
sbb
clc
sti
sub
pop
rolb
test
sbb
cmp
addr16
mov
add
adc
inc
and
jb
or
bound
psllq
adc
mov
jl
stos
lret
xchg
fisubl
sbb
ret
jnp
outsl
fistl
jne
mov
out
push
mov
cmpsb
movsl
pop
cmpsb
pop
dec
rol
andb
xchg
mov
or
lahf
mov
mov
adc
xorl
jg
sbb
mov
push
leave
or
dec
and
std
mov
adc
adc
cmp
pushf
xor
pop
cmpsb
pusha
jp
pop
in
cmp
and
sub
or
adc
sahf
fisubrl
cs
jg
mov
inc
sbb
cmpsb
pop
xchg
das
daa
outsb
sbb
leave
sub
push
pop
or
add
inc
jg
lods
lock
testl
or
sbbb
clc
loop
mov
lret
mov
les
jge
sti
cwtl
push
imul
nop
iret
or
addr16
sub
out
jne
sahf
lods
ficoms
add
pop
pop
adc
stos
rclb
imul
cmpsl
dec
push
cmp
int3
call
xchg
fs
fdivs
cmpsl
add
sbb
jns
push
jo
dec
dec
std
adc
cmp
xchg
dec
or
je
jl
dec
insb
xchg
pushf
out
in
clc
cmp
jge
lds
loope
icebp
jl
cli
clc
movsb
repnz
dec
out
cmpsb
cmp
push
and
adc
xchg
daa
outsb
xor
pop
push
mov
lcall
xchg
xlat
push
testl
in
cmp
ss
inc
sub
sbb
lret
arpl
mov
jmp
pop
mov
imul
out
jb
popa
sbb
insl
jle
add
cld
and
push
push
in
cmp
test
cmc
js
pop
sbb
jle
cmc
mov
out
and
int
fidivrl
jns
push
inc
pop
mov
out
push
divl
call
push
addb
sbb
xor
push
fildl
insb
push
dec
and
jge
mov
jnp
invd
js
xchg
hlt
std
jle
mov
popl
pusha
std
pop
xchg
add
gs
mov
hlt
sbb
in
insl
fcoms
cmp
or
xchg
xor
je
insl
fisubrl
leave
inc
cli
rorb
xor
sbb
mov
mov
lock
cmp
mov
imul
xchg
sahf
setb
xor
xchg
mov
xchg
mov
and
fidivrs
dec
ds
testb
out
mov
add
xchg
imul
mov
add
pop
add
xor
mov
addr16
cmp
scas
push
imul
add
xchg
fadds
pop
xchg
mov
mov
outsl
add
push
sub
fdivr
inc
sahf
xor
outsl
aad
inc
imul
iret
sub
iret
xor
fldt
dec
aas
or
add
fsubrs
test
bound
add
jl
mov
sbb
addl
jae
rorl
shll
jl
dec
push
xchg
or
xor
es
outsl
mov
cs
ret
and
inc
pop
leave
outsb
pop
movsl
and
cltd
jp
aas
sbb
add
icebp
fdivr
sarl
xor
pushf
add
ffreep
out
mov
sbb
arpl
lret
pop
adc
xor
dec
mov
lea
mov
cld
mov
push
lret
ja
sbb
outsl
lret
popa
gs
es
fcomp
fbstp
mov
cmpsl
movsl
cmp
jecxz
call
pop
xchg
js
scas
popa
cltd
mov
mov
mov
shl
or
and
mov
or
mov
in
shll
add
out
or
fisttpll
pop
mov
ror
xor
adc
das
push
cmpsl
push
ret
jecxz
pop
in
jp
jmp
dec
xchg
inc
ljmp
sub
pop
mov
dec
inc
mov
in
rclb
outsb
or
cmc
cmp
pusha
es
adc
xchg
inc
gs
adc
popa
xchg
es
and
div
cmpsb
cmp
inc
xchg
in
icebp
pop
pop
out
xchg
pop
inc
scas
add
xor
dec
pop
pop
xchg
lods
xchg
aaa
pop
pop
loop
lods
cmpsl
inc
push
inc
xchg
lea
fisubrl
mov
mov
cmp
mov
lds
in
pop
scas
psadbw
mov
mov
xlat
cmp
les
xchg
push
fcmovbe
jmp
and
cmp
add
jmp
repnz
pop
or
minps
inc
xchg
xchg
push
mul
fsts
fldenv
test
stc
mov
stos
and
mov
mov
gs
imul
insl
enter
iret
push
movsb
ret
scas
jnp
cld
adc
add
data16
xor
inc
in
in
cwtl
adc
loop
test
xchg
push
repnz
rorl
pop
pusha
lock
or
push
into
jne
das
outsl
insl
mov
sarl
nop
cmp
mull
mov
sub
cwtl
push
xor
jbe
jl
hlt
fisttpll
or
push
les
sbb
rcrb
lds
xchg
in
call
jno
mov
aam
lret
pusha
xor
jge
mov
xadd
repnz
mov
adc
out
xchg
into
lds
dec
enter
mov
ret
out
xlat
xor
add
mov
sub
cmp
sbb
ljmp
or
push
sbb
arpl
mov
pop
mov
movaps
imul
jmp
int
dec
adc
pop
divl
cli
push
pop
adc
insl
fidivl
push
bound
cld
mov
leave
dec
out
push
mov
rcrl
or
iret
push
daa
xchg
rorb
xor
adc
movsb
pop
orl
ja
dec
into
mov
cmpb
popa
lret
push
jne
test
movsl
mov
fs
pop
les
std
mov
push
xchg
stc
adc
add
push
jne
mov
mov
mov
out
push
out
jns
sub
xor
imul
adc
add
jmp
add
xchg
mov
imul
test
sbb
dec
add
data16
or
jnp
mov
fsub
jbe
sub
xchg
mov
sub
xchg
push
jnp
push
push
mov
xor
or
push
jmp
nop
movsl
sub
lret
cmp
mov
fsubp
mov
daa
xchg
inc
mov
push
add
xlat
or
repnz
push
sub
rorl
xchg
jmp
cs
push
fldenv
jae
sti
divps
je
pushf
cmp
loope
mov
push
push
push
dec
das
std
popf
pop
and
test
sahf
shr
js
xchg
mov
fwait
add
arpl
sbb
pop
testb
add
push
loopne
push
loop
lret
ficomps
xchg
inc
dec
sub
sbb
out
ds
enter
adc
test
ret
dec
add
xchg
stc
xchg
pushf
mov
or
inc
sbb
in
mov
sbb
fwait
je
push
pop
test
stos
repnz
mov
dec
sub
mov
test
cmc
xchg
dec
mov
add
xchg
inc
mulb
test
mov
lods
sbb
adc
and
mov
and
jne
mov
sub
xorl
and
adc
xchg
mov
decb
mov
sbb
fcmove
inc
xor
fdivs
or
cs
sub
ss
xchg
js
xchg
jge
xchg
sbb
daa
sbb
jp
dec
jbe
clc
jge
cwtl
add
pmullw
or
aam
and
addr16
or
out
out
dec
adc
scas
in
popa
dec
inc
ror
fistps
push
adcl
jl
xor
nop
mov
add
or
shrl
xchg
cs
pop
lea
lret
testl
mov
sbb
xlat
jl
push
or
cmp
loope
cmpb
clc
and
mov
cmp
cwtl
push
add
add
pusha
push
shrl
nop
add
gs
int3
les
push
and
stos
xchg
lahf
gs
pop
sbb
flds
lods
ret
pushf
jecxz
mull
cld
xchg
ja
mov
xor
not
push
loope
sahf
cmp
fdivr
call
mov
add
sbb
in
cwtl
mov
jo
shll
cmp
dec
les
push
xchg
lahf
lea
push
sbb
cltd
scas
or
fneni(8087
lods
dec
push
cltd
ds
xchg
jnp
lret
inc
dec
int
scas
pushf
push
fcompl
jecxz
fbstp
push
xchg
push
fimuls
cmpsl
pusha
rcrb
test
add
mov
xor
fsubs
shll
push
lret
jmp
push
out
lahf
fnsave
cmp
fwait
jge
and
dec
cmpsl
dec
push
xchg
mov
dec
or
and
adcl
pop
fwait
xchg
fwait
repnz
fidivl
mov
mov
and
mov
iret
mov
iret
jge
jecxz
xor
mov
dec
mov
mov
and
icebp
popa
mov
mov
adc
or
popf
fisttpll
and
or
add
test
sahf
fnsave
dec
push
jb
mov
fisttpl
sbb
jmp
and
movsl
repz
or
jbe
add
sub
jmp
mov
cmp
loop
inc
sbb
jge
test
pop
mov
mov
and
jg
adc
dec
add
addb
mulb
cld
jle
movsb
pusha
fdivrs
xchg
xor
xchg
mov
add
xlat
data16
mov
sub
sbb
add
jnp
jno
and
inc
jbe
rep
in
mov
cmpsb
mov
sub
or
cwtl
fxch
cltd
lods
outsl
dec
sbb
and
fsubs
lret
xchg
ja
adc
jmp
ret
cltd
in
xor
cmp
sbb
fcompl
xor
popl
dec
cmp
lds
pop
inc
lret
pusha
fs
out
fisubrl
sbb
popf
cmp
mov
aad
dec
or
mov
cmp
push
lret
mov
int
pushf
lods
and
xor
cmpsl
and
leave
adc
lahf
sub
out
mov
ss
jae
push
in
stc
cmp
loope
movsb
lds
ret
loopne
mov
dec
push
imul
mov
xchg
cmp
icebp
inc
and
mov
daa
gs
inc
mov
int
out
adc
pop
out
les
lea
sub
mov
in
test
xor
adc
lcall
and
push
xor
push
dec
fsubl
mov
inc
inc
shrb
adc
shrl
test
and
add
das
popl
lea
bound
and
add
mov
sbb
lret
and
mov
loopne
ja
roll
pop
push
inc
pop
mov
adc
mov
shll
aaa
ss
mov
pop
inc
push
mov
mov
mov
mov
fdivs
sar
mov
call
xor
gs
arpl
add
mov
imul
adc
add
aas
jecxz
jge
nop
pushf
adcl
in
fwait
xchg
jne
in
jb
int
lret
jmp
push
call
jle
add
mov
lcall
mov
fs
or
adc
xor
mov
sbb
out
std
mov
test
sbb
xchg
push
shll
data16
loopne
arpl
cltd
mov
cmp
sahf
push
loope
dec
inc
scas
dec
lea
scas
mov
push
mov
fcmovu
sbb
xchg
movsl
pushf
mov
ffreep
jnp
xlat
push
fld
sbb
dec
xchg
repnz
ficompl
xchg
cltd
fs
mov
aas
xchg
mov
hlt
mov
xchg
stos
jno
call
out
mov
insb
mov
cwtl
jl
or
xorl
cmp
out
test
cmp
insb
stos
jmp
mov
xchg
inc
pop
and
dec
shll
test
sbb
repnz
outsl
arpl
dec
fsubrl
fbld
cmc
lock
sub
bound
rcrl
fcoml
popf
xor
jae
aaa
subb
pop
push
test
jmp
push
pop
or
outsl
xchg
sti
das
shll
lds
jne
dec
loop
jmp
and
xor
xor
cmp
cmp
jl,pt
insb
xchg
xor
cmp
and
call
cmp
enter
addr16
mov
pop
cmc
ja
dec
mov
in
xchg
push
cmc
jo
mov
xchg
adc
and
inc
adcb
mov
in
mov
and
cmp
adc
adc
arpl
cmp
jg
pop
popa
aam
mov
or
cmp
jecxz
out
popa
mov
lods
jnp
push
daa
sub
adc
adc
inc
iret
insl
inc
add
xchg
addb
sti
and
leave
jmp
insl
mov
push
xchg
andb
shlb
or
arpl
ja
pop
int
xor
stos
shlb
ret
js
sbb
dec
sbb
lret
in
xor
adc
call
lds
ficomps
mov
sbb
mov
mov
ja
fistl
and
shl
and
fs
xchg
mov
xor
stos
fs
mov
jmp
outsl
pop
adc
in
mov
xor
mov
push
daa
lds
xor
dec
loope
out
sbb
int
subl
jmp
mov
movsb
mov
mov
xorb
inc
fldenv
daa
rcr
aaa
adc
pop
lcall
dec
cmpsl
jnp
jl
push
xor
call
xchg
or
pop
test
enter
dec
loopne
scas
xchg
mov
sbb
jne
jo
xchg
insl
pop
push
mov
mov
mov
xor
mov
hlt
aad
sti
jg
ss
jp
sub
ret
inc
adc
push
adc
mov
adc
stc
adc
lods
sub
clc
fisubl
pop
ret
scas
push
mov
dec
add
cmp
pusha
fadds
clc
aad
out
filds
loop
gs
push
ss
stos
dec
lods
lds
aaa
cmp
adcb
mov
xchg
mov
bound
sub
js
push
xor
jbe
pop
pop
mov
nop
mov
jns
sbb
call
shlb
mov
divb
repz
dec
add
loope
lahf
xchg
cmp
daa
ret
xchg
add
mov
mov
out
std
mov
insb
das
pop
mov
jo
xchg
adc
inc
dec
lods
jb
add
xchg
cs
push
add
add
adc
dec
scas
xchg
aas
pusha
pop
xchg
xchg
std
xchg
xchg
ja
leave
xlat
jg
rcl
add
dec
loopne
push
cli
loope
mov
add
jne
adc
sbb
fs
mov
shrl
push
test
sbb
lds
xchg
xchg
insb
fnsave
outsb
pop
jle
xchg
popa
inc
add
xchg
or
shll
lods
loop
jecxz
mov
loopne
repnz
mov
mov
in
jno
push
aad
sub
lahf
sti
pushf
push
nop
loope
cli
cmp
jns
xor
push
sbb
int3
adc
gs
shlb
repnz
jbe
sbb
out
insl
test
sub
sub
jbe
pop
sub
push
outsl
or
mov
das
jg
mov
pop
movsb
jno
mov
add
insl
sub
pop
jo
aad
mov
nop
mov
adc
and
push
or
mov
dec
push
je
repz
dec
or
fnstcw
jge
icebp
mov
arpl
jbe
xor
lcallw
leave
pop
dec
add
lods
mov
mov
xor
cltd
inc
cltd
xorl
jne
nop
and
lods
popa
popa
fldt
js
sbb
addr16
mov
xchg
lds
jb
jp
cmp
andl
dec
cwtl
jl
leave
out
pop
in
shr
je
dec
adc
xchg
lcall
add
add
cmp
mov
mov
adc
jmp
inc
inc
mov
mov
jo
rolb
push
push
test
or
int3
pop
outsl
mov
and
pop
mov
addr16
xor
je
or
repnz
bnd
ds
jg
nop
pushf
pop
xchg
xchg
sti
add
pop
cld
sub
mov
pop
push
in
dec
sbb
inc
or
jp
and
push
jg
sbb
mov
mov
sub
sbb
fldl2t
mov
pop
dec
cwtl
mov
dec
pop
mov
xlat
out
jle
daa
aaa
cld
sbb
leave
mov
dec
bound
xchg
lea
hlt
fnop
in
cmpsl
xchg
mov
stos
sbb
xchg
xlat
xchg
scas
out
in
lock
and
pop
dec
mov
cmpsb
xor
fldl
fldcw
cmc
cmpsl
popa
dec
push
stc
shr
push
scas
shll
push
push
and
mov
std
fcomp
sbb
jo
int
pushf
mov
ja
push
mov
hlt
lahf
test
into
pop
scas
insl
popa
test
cmpsl
and
mov
addr16
lcall
mov
jo
mov
xor
test
popa
push
cltd
rorb
or
mov
or
add
mov
shl
inc
xor
insb
and
push
in
add
aam
mov
fiaddl
fidivs
inc
shlb
cmp
inc
mov
ja
sub
mov
push
adc
or
movsb
jp
cmpsl
idivl
cli
idivl
mov
mov
mov
adc
fimuls
insl
aas
jmp
jg
popa
out
ret
test
jle
sbb
in
repz
mov
xchg
mov
cld
mull
ljmp
lods
stos
xchg
cmpsl
fstps
imul
lods
dec
fisttps
inc
sahf
enter
mov
les
mov
inc
inc
imul
loop
cmpsl
push
jae
stc
push
push
cmpsb
lret
sbb
fnstcw
and
mov
mov
xchg
fidivrs
inc
pop
xor
jno
push
ficomps
es
movb
dec
orb
xchg
inc
pop
das
pop
mov
fbstp
jae
cs
loop
push
dec
enter
push
aaa
push
cli
push
in
in
ret
sbb
outsl
imul
and
das
jecxz
xchg
push
lods
lea
mov
push
jbe
adc
push
ljmp
and
fisubs
jb
and
andl
or
mov
cmp
testl
leave
int
call
nop
xor
daa
adc
push
fnstenv
lods
dec
add
sub
lret
and
dec
and
ds
jl
adc
mov
add
nop
cld
icebp
fdivl
jns
xchg
mov
pop
jb
and
mov
outsb
pop
jl
xor
jle
dec
nop
stos
sub
lds
inc
or
test
push
mov
out
ja
xchg
into
mov
mov
fwait
mov
fldt
mov
adc
push
insb
and
adc
inc
xchg
cmp
pop
adc
push
div
repz
and
std
adc
jg
std
jno
into
jno
inc
adc
xor
mov
in
xor
mov
cmp
add
cs
xchg
inc
xorl
aad
xor
data16
or
shrl
or
leave
cs
repz
loope
idivl
mov
xchg
call
jbe
pop
mov
add
mov
xor
in
lcall
dec
sub
repnz
jbe
testl
fsts
sbb
loope
sub
shlb
loop
imul
cmp
xor
jno
mov
call
loop
aaa
xchg
push
cmc
and
shl
mov
adc
mov
sub
push
icebp
insb
mov
stos
loopew
or
push
xchg
out
loope
and
leave
ljmp
jb
lcall
push
add
test
cmpsl
add
jae
fdivrs
mov
enter
outsl
imull
rcrl
lds
dec
inc
clc
mov
inc
data16
adc
pushf
stos
and
movb
popf
add
clc
inc
pop
push
xchg
leave
leave
in
push
xchg
loopne
test
add
popf
les
je
test
ds
mov
mov
neg
ret
mov
adc
pop
pop
mov
pop
mov
out
das
fwait
or
push
pop
jmp
insb
sub
xor
pushf
adc
dec
adc
mov
adc
add
roll
sub
mov
push
pop
jge
jno
mov
clc
lock
xor
roll
xor
xor
outsb
inc
mov
daa
inc
inc
das
sub
xchg
stc
and
mov
xor
mov
sub
xchg
jle
aaa
add
or
push
ret
pushf
xchg
and
add
rcr
movsl
xor
or
push
mov
or
and
lcall
fmuls
or
je
jno
xor
popa
movsl
xchg
test
ss
mov
xchg
xlat
mov
add
and
lahf
cmc
mov
push
push
add
leave
mov
dec
ret
adc
adc
jmp
hlt
dec
fdivl
mov
pop
ds
inc
push
pop
fnsave
xchg
push
movsl
ss
aam
or
xlat
mov
movsb
pop
lock
push
mov
xor
push
xlat
inc
jmp
movsl
inc
ljmp
and
sti
push
push
sub
loop
dec
loopne
add
and
adc
repnz
out
call
adc
int
scas
and
xlat
xor
mov
movsb
mov
loope
jb
stos
jb
mov
je
cmpsl
or
das
in
push
gs
lcall
js
xchg
cmpsl
fstpt
shl
mov
inc
loopne
xchg
mov
adc
pushf
addr16
push
add
cmpsl
movsb
lret
or
neg
pop
lret
lret
subl
mov
fnsave
mov
fs
jae
in
decb
mov
nop
inc
in
adc
dec
lea
mov
ret
subl
xlat
cmp
pusha
test
dec
ret
jo
es
loopne
cltd
cs
arpl
pop
je
out
adc
pop
jno
dec
push
cmp
fs
xchg
pop
shll
or
imul
cmp
add
cltd
xchg
daa
or
jmp
stos
ja
pop
fsubrs
sub
loope
mov
push
push
fistpll
xor
pushl
mov
mov
in
mov
stos
ss
or
sbb
inc
imul
add
or
adc
aad
addb
divl
xchg
inc
cmc
neg
es
fiaddl
pop
cld
mov
mov
sub
mov
jne
sbb
sub
cmp
push
je
adc
dec
xor
fnstcw
popa
lcall
mov
adc
xcrypt-ofb
cmpsl
stos
in
and
jo
xchg
sbb
scas
push
mov
and
dec
xor
sub
movsb
push
cmp
push
jnp
or
push
sahf
cli
cltd
popf
pop
pushf
scas
popf
ljmp
in
inc
xchg
loopne
jmp
loop
shll
in
push
or
mov
xchg
loopne
into
stos
sbb
fisubrl
mov
cltd
cmc
dec
insb
sbb
in
xorb
and
sahf
lea
dec
repnz
sbb
xchg
cmp
shrb
inc
push
xchg
fstl
mov
scas
fidivl
loop
shll
loopne
cmpsl
into
imul
ja
pop
test
or
xchg
stc
inc
shrb
push
adc
jae
jl
repnz
adc
inc
pusha
ret
ret
xor
lret
mov
aam
ficoms
push
xchg
mov
add
or
push
rol
or
sub
jns
inc
pop
pop
sub
rorb
pop
pushf
cwtl
stos
xchg
movsb
rcl
lods
loop
and
dec
movsb
pop
nop
and
sub
adc
shlb
mov
icebp
test
outsl
jecxz
pop
leave
addl
push
xchg
inc
mov
mov
and
bound
lea
pushf
and
add
cwtl
mov
stos
jns
dec
and
aas
or
push
or
fwait
rcrb
ret
loope
test
les
cmp
pop
xchg
and
in
push
lods
and
mov
loopne
push
and
nop
and
or
xor
imul
mov
ljmp
insl
movsl
push
inc
pop
cmpsb
pushf
jg
sub
jmp
and
xchg
cs
xchg
fwait
jge
mov
push
cmp
dec
inc
jae
push
xor
and
mov
push
xchg
jo
pop
push
push
cld
outsb
in
insb
mov
lahf
pushf
test
fbld
stos
mov
fcomps
divb
int
je
into
and
pop
add
jo
push
cmp
sbb
mov
cwtl
mov
xor
jl
roll
pop
testb
mov
push
popa
es
pop
out
mov
es
ljmp
cmpsl
mov
leave
ret
xor
lock
push
int
xchg
xor
jle
xchg
iret
sub
int3
les
es
sub
pusha
xor
push
mov
jmp
mov
or
adc
push
ljmp
jecxz
jbe
int
push
cld
xor
pop
jns
adc
push
outsl
ja
pushf
insb
jbe
lods
cmc
xchg
cs
xchg
and
mov
jg
xlat
inc
push
xor
and
enter
ss
push
pop
and
mov
sub
sub
test
ret
mov
adc
xlat
js
int3
jb
and
aad
lcall
int
out
xor
sbb
sbbl
adc
stc
int
or
xchg
popa
inc
push
loop
and
or
jle
and
dec
pop
repnz
lds
in
bound
iret
fs
pushf
enter
rorb
and
mov
mov
test
xchg
mov
pop
iret
js
out
insl
mov
xorb
sub
push
xchg
lcall
loope
aaa
shlb
aam
adc
push
clc
icebp
ss
dec
jnp
inc
cmp
outsb
xorl
xchg
out
vunpckhps
xchg
jg
xchg
and
ret
div
add
js
xlat
outsb
cmp
in
cmp
jp
mov
mov
inc
les
adc
bound
inc
sbb
xchg
and
testl
or
fldenv
push
in
clc
ss
test
pop
or
femms
cld
scas
adc
add
lret
pusha
sahf
push
pop
adc
pop
into
inc
jg
adc
fldcw
xor
mov
dec
ss
cli
pop
cmp
jne
leave
test
enter
in
insb
cmovge
ret
push
test
pop
clc
xor
shrb
negl
adc
push
inc
gs
aaa
pop
xorb
adc
adc
or
adc
mov
loop
add
xor
push
add
mov
xchg
jl
xchg
fcmovnbe
push
xor
scas
lcall
adc
dec
test
sbb
xchg
push
sub
ljmp
hlt
mov
pusha
add
fdivs
mov
nop
outsb
ljmp
ja
inc
push
or
mov
or
cmp
push
mov
imul
cmp
enter
jbe
cmp
in
jbe
rcr
pop
mov
dec
pushl
in
hlt
ljmp
out
mov
js
mov
pop
jecxz
jne
mov
dec
cmc
dec
sti
fs
sbb
cli
out
xor
push
pop
push
inc
mov
mov
add
js
or
je
and
and
xchg
lock
jle
adc
pusha
sbb
lock
mov
dec
mov
inc
ficomps
push
mov
ja
rcrl
pop
pusha
jg
dec
pop
les
jo
imul
lods
mov
mov
addr16
mov
jnp
xchg
push
mov
push
mov
cmp
pop
sbb
or
push
or
je
out
imul
jns
mov
push
push
inc
subl
sahf
faddp
test
push
dec
test
mov
mov
popa
pop
jns
lahf
icebp
jmp
pop
adc
xor
adc
stos
lret
jp
test
pop
cs
in
testl
add
mov
fimuls
out
sub
in
mov
idivb
ja
mov
rcll
cs
ljmp
xchg
loopne
xor
mov
mov
and
in
pop
and
lea
or
ss
and
loope
mov
push
dec
ja
or
repz
pop
std
iret
into
adc
xchg
jmp
mov
repz
std
cwtl
mov
sbb
and
test
mov
insb
lahf
cs
js
mov
push
pop
dec
iret
test
cmc
fs
cld
aas
aam
stc
push
jnp
push
fadds
sub
mov
xchg
mov
xchg
sub
lods
icebp
jne
lds
out
shll
cmp
lea
cwtl
adc
icebp
inc
fidivrl
cmp
jae
xor
lret
sub
xor
out
test
lds
push
orl
out
loop
insl
insb
xor
icebp
pop
shrl
cmp
in
imull
inc
fcmovnbe
adc
ss
sub
neg
jecxz
shlb
imul
xor
add
xchg
pop
sbb
push
mov
dec
cltd
sbb
xchg
loop
dec
sub
outsl
dec
jl
add
dec
and
je
jbe
push
sub
inc
adc
sub
dec
test
mov
shll
jge
rorl
jnp
in
mov
mov
lds
add
hlt
pop
mov
push
xor
cmp
dec
xchg
add
cld
js
fucomi
sub
ret
lods
push
loope
cmpsl
cmp
pop
xor
and
data16
cmpsl
test
fcompl
mov
lods
add
test
dec
mov
daa
add
jnp
mov
mov
sub
sahf
mov
rcrl
dec
pop
or
popa
nop
jae
cmp
cltd
test
ljmp
fucom
arpl
test
icebp
push
and
clc
mov
or
sub
sbb
dec
ret
mov
xchg
pop
dec
rorl
out
cmp
add
mov
arpl
hlt
iret
push
xchg
xchg
mov
pushf
or
mov
nop
mov
dec
test
push
call
scas
pop
mov
pop
adc
in
mov
icebp
mov
cmpsb
push
inc
inc
pop
inc
cli
jne
fildll
xchg
inc
movsb
cwtl
mov
mov
pop
cmp
in
push
mov
push
sbb
cmpsl
push
stos
mov
test
adc
cmp
push
pop
mov
jp
dec
es
test
mov
sahf
jne
cmpsb
inc
int
gs
scas
cmp
popf
dec
pop
out
in
bound
and
push
iret
out
xchg
in
sbb
lcall
outsl
aaa
pop
mov
leave
add
pop
cmpl
adc
fidivrs
mov
mov
lcall
aas
cmpsl
lret
rcrb
daa
mov
rorb
popf
mov
sbb
daa
lock
out
push
lahf
pop
add
jbe
pop
push
pop
ja
jp
inc
adc
roll
pushl
push
inc
cld
lahf
pop
aaa
mov
sar
imul
xor
mov
fadd
cmp
sub
les
or
sub
push
sub
pop
sarb
loopne
mov
movsl
xor
fiadds
push
and
xor
repnz
xlat
jmp
push
lock
in
clc
dec
and
mov
popa
sbb
mov
jbe
or
movsl
push
leave
jp
pop
push
adc
dec
sbb
int
ret
xor
fmull
push
push
pop
aad
out
xchg
mov
pop
mov
gs
inc
pop
aaa
mov
cmp
out
std
inc
cmp
call
push
lods
mov
cmp
fs
nop
push
or
cmp
sub
outsb
pop
sbb
jbe
in
fcomps
and
sub
add
xchg
xchg
movl
inc
inc
mov
xchg
and
sub
xchg
xchg
mov
lods
cltd
pop
outsl
dec
fidivrl
or
push
lods
out
lea
cltd
inc
fs
cmp
inc
leave
pushf
daa
sub
movsl
call
pop
sbb
ret
xchg
cwtl
jle
xchg
cmc
push
dec
repnz
int3
into
lods
and
sbb
jno
push
sahf
or
popa
cld
jl
cmp
mov
std
dec
notb
jg
xor
or
add
test
sub
cmp
int3
inc
stc
xor
dec
mulb
or
adc
dec
int3
stos
jl
sub
icebp
add
pop
hlt
ret
and
sbb
jno
add
sub
gs
mov
aam
lds
mov
shl
int3
clc
xlat
adc
stc
dec
lods
mov
mov
pushf
rolb
add
jns
shll
into
pop
pop
mov
loop
and
adc
sbb
dec
subb
cltd
cmp
cld
movsl
jae
sbb
and
cltd
adc
nop
ss
mov
lcall
push
and
scas
sub
mov
pop
pop
push
std
and
xchg
dec
push
fwait
aad
dec
cmp
iret
push
push
xchg
add
not
mov
lret
and
lds
nop
enter
and
xor
mov
sub
sbb
out
fldl
cmp
popf
add
mov
push
sbb
leave
imul
xchg
int
in
cmp
add
mov
jmp
jecxz
negl
jno
and
sbb
jmp
outsb
xor
sbb
sahf
mov
std
mov
cwtl
lea
dec
cld
pop
add
and
add
inc
je
repnz
out
movb
frstor
mov
aas
icebp
shll
cwtl
push
fwait
loop
test
shld
test
sarl
dec
bound
push
insl
or
movb
dec
hlt
pusha
mov
add
lods
or
cmp
outsl
cwtl
pop
jl
stos
adc
insb
orl
mov
lock
sub
lods
orb
mov
cld
nop
rclb
shrb
xchg
jmp
add
jmp
lods
cmp
dec
or
mov
xchg
repz
lock
nop
xor
cmp
aam
sub
pop
push
jle
adc
insb
divb
fstl
mov
xor
push
insb
loop
sahf
pop
push
das
insl
loopne
cmp
mov
dec
out
xor
ja
cmp
shrl
mov
push
outsb
test
xchg
icebp
jo
lcall
mov
jae
es
mov
or
lods
xchg
cmc
in
imul
sub
stos
sahf
xchg
loop
jecxz
dec
xor
adc
push
cmc
das
mov
andb
dec
sub
pop
cmpsl
dec
in
movsb
out
pop
sbb
stc
inc
outsb
mov
stos
mov
cmp
scas
sti
insb
repz
push
popf
addl
lcall
mov
jp
jge
jne
dec
into
popl
lea
adc
out
cmp
lea
mov
pop
icebp
pop
pop
adc
addl
and
inc
loop
testl
sbb
lods
pusha
nop
call
mul
jb
fdivrp
xchg
in
sub
mov
push
jo
cli
mov
ljmp
mov
fidivl
or
fnstsw
xlat
cmc
nop
out
jns
ja
mov
xchg
lods
xor
or
adc
push
fisubrl
andb
jge
fldcw
cmp
cmp
dec
mov
jb
pushf
jmp
clc
sub
orb
dec
jae
pop
sarl
sub
mov
test
sbb
les
or
adc
fwait
lahf
insb
pop
lods
in
fnstenv
push
loopne
mov
push
mov
mov
cmc
ja
into
and
add
sbb
das
fdivl
bnd
lods
dec
in
jb
and
mov
xor
mov
xchg
jmp
rorl
sub
sti
insb
fwait
ret
push
push
add
stc
out
push
jns
testl
jge
add
cli
rcrl
mov
sub
shr
scas
and
pushl
mov
ja
mov
jno
xor
or
js
aad
imul
aas
mov
xor
bound
arpl
pop
xchg
mov
pop
icebp
lcall
mov
scas
test
das
pop
add
lock
xor
call
add
mov
push
rcll
dec
cmp
andb
jle
xchg
mov
xchg
in
lret
lods
movsl
jbe
add
add
jns
inc
fwait
call
xchg
movsl
or
loope
pop
xchg
sbb
mov
mov
int
push
inc
xchg
int3
loop
movsb
mov
adc
inc
inc
outsb
lods
sbb
add
insb
dec
xchg
gs
loopne
into
jb
subl
inc
jnp
xchg
sub
rep
stc
adcb
push
arpl
in
sahf
jns
dec
mov
mov
testl
xlat
ss
adc
sbb
outsb
rcll
daa
mov
imul
or
iret
xor
inc
movsl
xorl
out
fucomp
sub
sahf
add
lret
dec
push
mov
shll
sub
fildl
inc
out
and
scas
xchg
cmpl
cwtl
lcall
ja
nop
push
mov
or
mov
stos
push
test
dec
or
shlb
mov
in
iret
cmp
pop
inc
sbb
in
and
scas
fldenv
or
cld
lods
jmp
mov
out
dec
pop
or
cmpsb
das
rolb
and
mov
mov
sbb
xor
fcompl
and
into
ficoml
lods
out
xlat
movsl
pop
adc
dec
lahf
cmpl
aam
cmpsb
or
bound
dec
lcall
out
xchg
sbbb
int
insb
push
movsb
ret
mov
cli
cli
je
jae
mov
and
cltd
dec
fwait
pop
insl
dec
pop
es
xchg
mov
adc
pop
ds
mov
sub
push
enter
into
push
sub
jae
push
adc
leave
ja
push
arpl
fs
sbb
dec
sbb
rcrl
fstps
arpl
sbb
add
dec
sbbl
insl
testl
jle
leave
xchg
inc
xchg
sbb
inc
cmp
fs
add
repnz
or
add
call
xor
cmpsb
icebp
cwtl
inc
sahf
jae
mov
inc
dec
call
fiadds
jb
pop
int3
int
jmp
adc
inc
mov
lock
cmc
sbb
xchg
push
adc
shr
leave
pop
xchg
and
mov
mov
cmp
data16
movsl
in
push
int3
scas
into
sub
xchg
or
icebp
mov
mov
pop
xor
xlat
rcrb
jge
or
pop
jecxz
ss
cli
push
outsb
xchg
inc
sbb
das
loope
ds
rol
dec
inc
dec
pushf
mov
push
fimull
repz
int3
ret
dec
pop
cmp
stos
lcall
jne
daa
inc
sbb
push
cltd
pop
nop
ja
add
xchg
jp
add
mov
or
jmp
in
dec
aas
dec
imul
inc
jp
or
adc
shlb
loope
lahf
sub
jb
or
push
dec
add
sbb
xor
int3
or
or
cld
int3
cmpsl
mov
fucomip
lret
ror
inc
push
test
inc
and
outsb
mov
out
in
push
xchg
sub
test
fs
xor
jmp
lret
pop
push
and
xor
cmc
adc
xor
pop
sub
ficomps
outsb
repz
lock
test
mov
push
or
or
xchg
sub
and
and
das
or
cmp
push
and
mov
repz
bound
push
mov
in
mov
in
cmp
out
js
jnp
movsb
sbb
cmpsb
jne
fnstenv
dec
inc
arpl
inc
aaa
xor
addr16
cmp
inc
mov
ret
es
jl
ficoml
cmp
pop
iret
pop
jge
xlat
sbb
push
sub
adc
insb
roll
pop
stos
jmp
pop
xchg
push
inc
mov
adc
fimull
push
pusha
int
data16
test
or
mov
and
lds
mov
push
pop
daa
mov
iret
repnz
mov
ret
stc
mov
push
icebp
mov
mov
jns
sub
test
pop
clc
pop
dec
jl
or
stos
ficomps
jo
cmpsl
cmovae
adcl
fldt
lcall
lea
cli
cs
push
sbb
mov
mov
jl
loop
push
out
xor
outsb
lahf
rorl
inc
dec
les
pop
and
in
cmp
mov
jmp
xchg
shlb
loopne
fldcw
adc
pushf
xchg
or
lea
fstpl
xchg
repz
mov
movb
incl
in
cmp
pop
sbb
push
push
mov
outsb
test
cmpsb
jge
push
sub
mov
mov
mov
rorb
push
inc
cmp
je
loopne
cmpsl
sti
loop
lret
clc
loopne
mov
inc
mov
ljmp
mov
push
cwtl
arpl
sub
adc
mov
xorb
pop
push
cmp
shr
adc
test
dec
lahf
in
pop
orl
or
dec
test
inc
sarl
push
and
hlt
and
test
mov
jnp
pop
inc
cmp
cmp
push
int
sti
scas
pop
mov
pop
xchg
fs
jbe
shrb
sahf
xor
insb
popa
addr16
mov
mov
dec
call
jle
adc
mov
test
addl
je
jno
xor
push
or
inc
clc
sahf
or
mov
outsl
cmp
sub
pop
clc
jp
cmpsl
test
lods
movl
mov
xor
mov
jae
sbb
loopne
mov
hlt
fdivrs
xor
pop
adc
rolb
sub
repz
add
shrb
push
push
bound
shrb
push
stos
leave
shll
push
aaa
das
es
and
mov
fdivl
aas
mov
mov
ljmp
push
mov
ret
jg
arpl
test
cmp
test
push
fdiv
and
lcall
andl
push
mov
jmp
mov
inc
cmp
mov
int
sbb
jnp
push
popf
int
addb
pop
cmp
jbe
or
clc
sbb
test
ds
mov
out
dec
sbb
xchg
in
mov
cmc
shll
inc
aam
sbb
lcall
mov
xor
scas
mov
ja
inc
imul
jmp
xchg
jb
imul
inc
insb
fmull
mov
outsb
pop
aas
movsl
repz
sub
xor
pushf
lods
repz
inc
mov
je
leave
jg
adc
or
test
xchg
mov
mov
or
or
idivb
js
test
bnd
leave
aaa
popa
fimuls
popf
xor
mov
movsb
sub
jns
fldt
test
int3
popa
lods
lea
sub
xchg
das
mov
lret
lea
into
fdivrs
adc
popa
mov
cwtl
roll
repz
mov
cmp
xchg
aam
sarl
push
mov
rcll
or
adc
pop
push
cltd
xchg
xchg
lock
outsb
popf
sahf
cmc
std
lods
sub
cmc
stos
mov
sub
jb
add
jecxz
mov
xor
dec
pop
sbb
xchg
xchg
mov
pop
dec
movsl
loope
dec
imul
sbb
ret
and
add
fmuls
dec
add
pop
int3
sbb
scas
daa
inc
pop
or
loopne
sub
and
in
sbb
or
lcall
loopne
jae
pop
lods
in
ss
fisttpll
adc
in
dec
lret
cmp
xchg
pusha
repz
test
jp
or
aaa
outsl
iret
hlt
xor
add
jo
shrb
jns
sub
pop
cmp
into
xlat
dec
pop
jbe
into
pop
cmpsb
idivb
sub
jnp
movsb
inc
xchg
aam
inc
icebp
inc
xchg
xchg
ss
inc
scas
loopne
scas
movsl
xor
pop
in
sub
inc
jecxz
fisttps
pop
inc
fwait
sti
outsl
addr16
dec
iret
pushf
and
adc
insb
js
push
pop
das
cmc
pop
inc
sbb
movsb
and
ret
int3
inc
pop
aad
rorb
push
int3
add
stc
or
push
mov
cld
adc
push
lret
cmp
xchg
xchg
test
jno
xor
xchg
clc
mov
repz
int3
loop
mov
jle
pop
sub
adc
and
insb
decl
xlat
enter
xor
pop
fcmovnu
sub
add
imul
stos
or
xchg
cmp
xor
arpl
pop
popf
movb
pop
fiadds
jno
das
dec
and
lds
inc
call
fisubrl
roll
je
or
imul
ljmp
icebp
pop
pop
pop
pop
inc
shlb
mov
scas
push
mov
es
push
fsts
lret
adc
sti
inc
ljmp
jecxz
sar
mov
xlat
and
movsb
sub
and
mov
mov
les
stos
mov
pop
jl
stc
dec
push
testl
addr16
rolb
aaa
xchg
cmp
cs
or
test
xchg
jle
jle
push
sub
fsubl
mov
mov
sbbl
jb
push
std
out
int
mov
daa
stos
nop
jl
inc
add
dec
mov
out
cld
cwtl
mov
add
loopne
or
sbb
pop
jne
fisubl
fildll
iret
int
sub
sti
lock
or
mov
fmuls
daa
fs
and
ja
popa
stos
mov
or
imul
mov
xchg
fsubl
xchg
mov
sub
ljmp
jae
lds
lret
in
pop
pop
nop
lcall
ja
add
xchg
fidivrs
jne
loop
xor
xor
mov
fisttpll
imulb
xchg
mov
jnp
in
pop
mov
das
push
inc
cwtl
mov
into
aaa
mov
iret
adc
aad
nopl
pop
enter
sub
push
push
es
cmp
sub
ret
cmp
xor
mov
pop
inc
sahf
jnp
dec
rcrb
es
hlt
cmpsb
nop
xchg
add
push
xchg
mov
sbb
sbbl
jecxz
xor
bound
addr16
mov
enter
mov
nop
pop
inc
pop
sbb
add
popf
xchg
lahf
or
leave
ds
push
daa
fs
ja
rsm
fmuls
xchg
sbb
cwtl
push
adc
xchg
mov
mov
stc
pop
jmp
test
clc
cwtl
pop
jbe
sbb
fcoml
ds
mul
das
xor
mov
push
mov
mov
mov
jne
mov
loope
jp
es
add
outsl
out
or
repz
cmp
push
jmp
out
pop
mov
cli
call
jne
fwait
add
lods
jns
xor
xor
sub
ret
ret
fistpll
adcb
cmp
push
repnz
mov
cmp
aad
push
outsb
nop
push
and
aam
and
dec
out
inc
sub
and
lods
sbb
add
pop
dec
mov
and
or
cwtl
jle
divl
ss
or
popf
js
xchg
xchg
mov
adc
lds
sbb
sub
add
push
sub
mov
sub
xchg
addr16
std
mov
ret
iret
mov
pop
loope
adc
repnz
mov
insl
jb
popa
jae
add
cltd
inc
mov
dec
push
stc
lock
sbb
sbb
filds
in
mov
gs
decl
xchg
sbb
cld
mov
xor
sub
mov
jecxz
sbb
and
or
shr
int3
loope
adc
push
cltd
ret
xchg
inc
jbe
int3
push
pop
repz
outsb
popa
aam
sub
out
stos
mov
mov
xor
mov
mov
lfs
inc
jb
es
mov
pop
ds
dec
aam
xchg
test
pop
imul
scas
movsl
add
mov
lods
jbe
jae
ja
movsl
xchg
and
or
adc
movsb
mov
enter
mov
add
xchg
cmp
sbb
or
xchg
pop
jne
mov
std
or
inc
sub
inc
or
sbb
cld
in
push
ds
mov
add
mov
out
push
or
enter
leave
mov
jae
xchg
push
xchg
stos
call
sub
insb
jmp
jp
test
jno
loopne,pt
int
fwait
pop
out
fimull
js
pop
das
shrb
sbb
std
cwtl
sbb
mov
sbb
pop
mov
bound
mov
xchg
sub
jo
sub
sti
mov
mov
cli
push
sbb
or
popa
cmp
ljmp
inc
adc
cmp
stos
lret
stc
pop
divb
out
mov
xor
push
push
ds
mov
cmp
cmpsl
out
pop
pop
icebp
mov
ss
inc
filds
inc
bound
cmp
xchg
xchg
cmpsl
sub
xor
sbb
xchg
sarb
dec
mov
inc
mov
jge
test
push
hlt
mov
orb
and
adc
repz
and
push
push
pop
mov
and
sub
nop
sbbb
sbb
inc
jmp
faddp
xchg
repnz
mov
std
jg
lock
push
pop
mov
push
repnz
imul
movsb
pop
mov
mov
shll
addr16
jae
out
and
sub
test
pushf
ds
pop
adc
adc
xlat
insl
jno
add
in
ss
push
mov
pop
lcall
dec
mov
clc
mov
mov
test
cmp
xchg
scas
push
in
stc
push
fmulp
stc
sahf
cmc
jns
fiaddl
les
es
or
sbb
insl
xor
xchg
ss
jae
inc
push
int3
adc
and
fsubp
rorl
icebp
inc
and
repnz
xor
dec
inc
push
push
popa
cmp
dec
out
push
jg
not
clc
enter
test
fsubrl
or
rorb
or
adc
pop
sub
and
popa
inc
imul
and
sub
xchg
addr16
dec
addr16
cld
roll
push
lock
mov
jmp
sbb
jmp
push
ljmp
pop
cmpsl
stos
mov
aad
data16
outsb
sub
mov
out
fsubrl
cmpsl
jno
mov
jmp
ret
sub
clc
mov
aam
lret
push
sub
push
stos
cmp
loop,pt
sub
psllq
mov
or
nop
ret
sbb
sbb
inc
adc
or
repnz
mov
mov
scas
addb
or
add
sbbl
es
add
sbb
jnp
ljmp
outsl
xchg
scas
lret
data16
enter
and
xor
les
add
scas
js
iret
das
or
jge
ljmp
xlat
and
push
xchg
mov
adc
and
xchg
or
and
mov
ss
shl
mov
shll
cltd
cmpsb
ljmp
aam
adc
and
in
in
mov
jl
mov
pop
mov
les
in
push
push
pop
xchg
adc
and
adc
dec
ljmp
adc
mov
movsl
jp
outsl
insb
sub
dec
adc
arpl
add
nop
stos
addr16
or
nop
pop
pop
enter
stc
loopne
imul
xlat
xor
mov
pop
xor
or
scas
jge
scas
movsb
xor
push
mov
hlt
ret
shll
cs
sub
add
ljmp
or
out
clc
xor
leave
fiadds
ror
loop
dec
jbe
sbb
push
push
stos
std
in
stos
cmpsb
stc
stc
pop
inc
push
xor
add
fwait
adc
out
fadd
xor
data16
adc
rcl
sub
xchg
mov
sbb
or
pop
pop
xor
adc
lods
and
iret
insb
lret
lea
mov
cmp
add
jecxz
pop
xchg
dec
jne
ret
notb
mov
or
jbe
mov
mov
mov
or
leave
icebp
repz
pop
mov
out
jnp
in
fcomp
jmp
xchg
jo
mov
scas
sub
aaa
pusha
sbb
and
jp
or
addr16
xor
and
pop
and
aaa
jo
je
mov
cwtl
addb
in
repnz
fisubrs
xchg
inc
insb
mov
lcall
jl
scas
enter
jge
nop
int3
scas
xchg
mov
cld
mov
or
imul
sbb
ror
not
ljmp
or
les
add
dec
sub
xlat
arpl
fs
mov
adc
inc
rcrb
xor
cmc
cmp
nop
std
sub
scas
lea
repnz
hlt
xor
pop
jmp
jmp
mov
outsb
mov
stos
or
jno
xchg
sub
cltd
sub
enter
or
into
test
outsb
sbb
cmp
adc
inc
fsubl
dec
and
lods
pop
fildll
sahf
in
xchg
mov
sub
lea
adc
cmp
fildll
loopne
pop
jmp
gs
xchg
lret
mov
dec
jge
cmc
mov
leave
jnp
mov
hlt
in
and
jmp
adc
pop
subl
mov
icebp
xchg
dec
or
call
mov
cwtl
stc
test
je
ljmp
lret
in
xor
mov
in
mov
call
push
lods
add
popa
aaa
rclb
in
add
or
cld
ds
push
cli
jbe
sti
jg
dec
setno
jge
fsts
ret
subl
or
ss
sub
jecxz
outsl
add
add
cmp
mov
dec
enter
cmp
fsubrl
jecxz
es
sbb
add
int3
cmp
fs
imul
insb
cmp
lods
sbb
xchg
cs
push
or
jmp
push
jmp
push
or
push
lret
mov
xchg
dec
push
xchg
je
cmp
sbb
ret
sahf
je
cmpsl
mov
hlt
sbb
mov
inc
mov
inc
cmpsl
aas
mov
pop
cmpl
test
xchg
in
mov
jp
das
mov
cmpsb
cmp
xchg
imul
shll
mov
or
hlt
adc
in
cmc
push
pop
es
leave
add
sub
pop
and
cwtl
shlb
push
aas
andl
test
xchg
push
sbb
ja
mov
jbe
sahf
pop
add
pop
lret
lods
or
adc
xchg
jecxz
aaa
sub
adc
das
movsl
cmc
outsb
or
xchg
std
inc
je
dec
shl
xchg
ret
mov
out
adc
inc
inc
cmp
shlb
xor
mov
paddsw
mov
mov
sub
inc
andb
adc
stos
mov
cmp
imul
add
sbb
imul
pop
int
data16
inc
loope
push
fcomps
aas
scas
add
sub
pop
hlt
lods
or
xchg
je
xchg
in
in
jae
jmp
or
mov
fs
xchg
jns
dec
fwait
fwait
or
imul
cli
lea
and
scas
movsb
cld
cmp
ret
icebp
lahf
jns
mov
cmp
sub
or
es
xchg
stos
inc
lock
icebp
push
add
adc
lods
das
pop
mov
lods
sbb
adc
mov
jb
push
ret
mov
test
lret
sub
xchg
sbb
int
mov
dec
jnp
inc
rcrb
pushf
xchg
jbe
jle
orw
push
mov
sbbl
sub
into
jecxz
pop
mov
mov
or
xor
sbb
out
mov
mov
push
outsb
pop
ja
mov
pop
xor
test
stc
sbb
push
sub
sbb
lods
sbb
cmpsl
jnp
mov
scas
lret
fbstp
mov
push
xlat
mov
shrl
cmp
jge
add
xor
mov
aad
sbb
scas
and
push
mov
mov
pushf
or
xor
insb
push
sub
fistl
dec
sub
es
testb
pop
jbe
add
or
movsl
rcrb
imul
pop
cld
addb
push
in
inc
jne
push
aas
int3
rcrb
movsl
data16
iret
rcll
adc
in
fwait
outsb
cli
push
icebp
mov
aam
or
rcl
dec
push
push
xchg
test
addr16
imul
out
mov
call
out
adc
mov
push
orl
sub
jb
or
test
pop
mov
inc
pop
into
lods
mov
nop
mov
push
popa
mov
jecxz
jge
push
cmc
lahf
jecxz
adc
data16
push
imul
push
stos
inc
nop
mov
push
inc
lahf
sbb
dec
outsl
xchg
pop
mov
add
loop
loopne
cs
lret
dec
mov
cli
in
dec
je
sub
ljmp
or
xchg
adc
loopne
mull
iret
pop
jb
in
lods
or
scas
outsl
ds
orb
dec
dec
out
cmp
lock
xchg
enter
add
jbe
xor
and
jecxz
shl
lock
in
das
sbb
enter
inc
push
in
push
fcoml
or
inc
jmp
stos
mov
pop
cmp
push
inc
push
xor
loopne
aad
push
xor
sbb
jno
imul
xchg
aaa
ss
and
mov
jle
test
test
mov
jno
pop
dec
fildll
adc
or
sub
mov
outsb
inc
cltd
out
sbb
imull
dec
insl
notl
stos
jnp
pop
sub
js
xchg
aam
cmpsl
out
cli
mov
mov
cwtl
mov
mov
mov
push
push
aaa
pop
push
es
test
stc
mov
cmp
jae
xor
sbb
inc
adcb
or
mov
pop
arpl
fucomi
adc
sbb
stc
les
ret
mov
test
cli
jmp
jne
shlb
and
adc
lds
in
shrb
stc
sahf
sahf
dec
in
pop
test
rorb
rol
lcall
enter
mov
rcrb
add
mov
nopl
xchg
stos
or
xor
lds
push
fldl
sub
mov
popa
xchg
dec
out
dec
test
mov
hlt
imul
or
pop
dec
xor
xlat
mov
adc
or
pop
cmp
mov
ds
push
rclb
and
ja
lods
mov
pop
out
mov
sbb
fstpl
pop
lcall
mov
xchg
or
addb
rorb
dec
pop
fwait
adc
adcb
lock
mov
call
ret
pop
rcrb
bswap
and
dec
lods
idivb
shrl
mov
dec
mov
cmc
and
icebp
cmp
bound
shlb
fmull
mov
cmpl
loope
push
jp
rcll
mov
pop
pop
and
inc
flds
lahf
dec
stos
and
jnp
lods
sub
out
out
pop
sub
stc
enter
mov
icebp
xchg
or
xchg
lds
push
xchg
cmp
sarb
pop
aas
pop
int3
sbbb
pop
inc
mov
add
push
loop
sbb
cmpsb
scas
xchg
daa
js
and
jl
cmpsl
lock
adc
mov
jb
push
cltd
adc
lcall
daa
fidivl
mov
pop
cs
jp
testb
aaa
xchg
sahf
mov
pop
stc
in
lea
test
push
into
sbb
aad
and
out
fwait
xor
sbb
mov
xor
cmp
lock
cmp
pushf
pop
test
xor
popa
fsts
pop
in
cltd
push
ds
or
mov
push
addb
jbe
and
lea
dec
xchg
xchg
aam
and
mov
cli
inc
jne
shll
add
xchg
shll
pop
in
movsb
xlat
adc
sub
mov
shll
mov
testl
or
mov
std
icebp
push
sub
xor
dec
pop
jb
inc
stos
xor
push
es
mov
and
icebp
push
aad
push
ljmp
mov
lods
test
lret
in
inc
dec
lcall
inc
mov
lret
cmpsl
or
xchg
pop
sbb
sub
aas
and
xlat
mov
stc
loop
mov
mov
pop
pop
push
jmp
out
pusha
cwtl
push
adc
int3
push
cs
fildll
add
mov
icebp
pop
bts
add
std
clc
es
ret
lret
dec
sub
mov
pop
fdivr
jmp
or
cmpb
movsb
jp
or
cwtl
mov
jno
inc
fs
xchg
jg
and
loope
dec
nop
cli
sub
xchg
int3
xor
xchg
pop
add
mov
and
nop
in
imul
dec
xchg
or
inc
lock
paddusw
fwait
daa
ds
pop
jmp
fstps
push
movsl
mov
dec
insl
cli
inc
push
add
cmp
arpl
test
jne
loop
push
clc
testb
pop
mov
sbb
movsl
fxch
call
mov
jl
fbld
mov
lock
sbb
cmp
int3
sub
cmp
adc
cmp
js
push
sub
mov
cmp
ss
fisttps
push
inc
jle
jae
push
cli
sbb
stos
dec
insl
and
push
mov
sub
fwait
pop
pop
hlt
in
inc
adc
xchg
aam
mov
push
adc
negl
or
mov
adc
cmp
fiaddl
test
mov
lret
lock
mov
sbbl
xlat
mov
popf
repz
pop
in
ret
xchg
xchg
in
movsl
cmpsl
xchg
cs
aad
sub
xor
ret
cmp
mov
into
jle
xchg
lcall
cmp
jbe
clc
jae
add
int3
insb
aad
mov
xchg
jnp
dec
loop
cmpsl
mov
dec
dec
lea
lcall
cmp
scas
je
fmull
notb
ja
xor
or
lods
aad
shrl
inc
mov
lods
loope
inc
adc
outsb
sbb
insl
lcall
cmp
jno
mov
push
or
mov
or
ret
pop
push
mov
or
test
pop
dec
sub
cmpsb
sahf
adc
sub
mov
push
push
lods
js
xchg
mov
mov
cmp
sbb
clc
xor
pop
xor
daa
xor
mov
pop
xor
aam
inc
aas
ds
jae
scas
push
fst
mov
sub
testl
sbbb
lods
sbb
clc
lds
xlat
dec
sub
std
popf
jne
mov
mov
into
das
push
lcall
xchg
movsb
pop
push
adc
xor
andl
les
sti
and
decb
jmp
mov
lret
fadds
fstpt
lods
push
shll
cmp
mov
out
mov
push
add
mov
inc
adc
stc
lret
cmp
mov
sbb
stos
int
ret
add
push
stos
mov
cmc
xchg
inc
cltd
dec
lret
mov
hlt
sub
arpl
fwait
stos
mov
shll
aas
push
sbb
leave
stc
cmp
push
adc
call
mov
mov
or
scas
gs
cmc
mov
cmpsb
and
icebp
jg
push
jne
pop
sti
xlat
ret
cmp
lret
lods
outsl
rolb
mov
xchg
test
xchg
test
iret
jg
pusha
pop
dec
mov
ret
inc
dec
cli
fdivrl
xor
pushf
mov
insl
push
adc
std
push
testb
test
rcrl
outsl
mov
mov
xor
movsl
mov
out
cmpsb
push
jno
mov
push
push
push
insb
data16
adc
cmp
jnp
sar
mov
jo
xchg
and
or
aaa
or
cld
in
out
call
pop
ja
sarb
or
adc
cmp
cmp
popa
cmpsb
lcall
fldenv
mov
fimuls
pop
rorl
push
dec
jg
incb
out
jmp
ret
mov
push
push
sub
push
rcl
and
loope
mov
or
dec
and
stos
in
hlt
pop
into
ret
or
push
in
mulb
or
inc
and
mov
pop
loop
daa
inc
pop
push
push
es
fwait
sbbl
jge
andl
inc
cmp
lds
gs
aam
insl
into
iret
in
mov
cwtl
icebp
arpl
inc
cmc
into
bound
icebp
jae
into
or
mov
and
xlat
pop
jl
jmp
leave
rcr
mov
out
fcos
mov
adc
dec
cmp
dec
and
movsl
sarl
jb
cmp
test
xchg
pop
scas
inc
lds
add
lcallw
into
fdivr
loope
outsb
push
lahf
sbb
cmpsl
jae
pop
pop
aad
or
inc
cmpsb
sbb
ficoml
mov
push
shl
out
imul
mov
lods
xor
jle
shll
push
adc
sti
adc
mov
mov
inc
stc
jmp
xchg
mov
ret
push
loopne
jo
inc
jmp
mov
adc
fisubs
rol
push
testl
cwtl
push
aaa
push
push
mulb
and
ljmp
fs
call
xor
scas
pop
adc
cmp
leave
outsb
jg
sarl
push
pop
xor
xchg
les
jno
push
fld
scas
imul
and
mov
cmp
xchg
in
push
cmpsl
ficoms
leave
xchg
xor
add
sahf
pop
mov
pop
lret
xor
rcll
mov
jae
shll
in
push
sub
pop
cmp
xor
pop
rorl
sbb
or
pop
xor
or
ljmp
push
adc
mov
pop
jbe
jp
out
test
stos
in
push
mov
fsubp
fbstp
dec
mov
jmp
xchg
loopne
push
xchg
adc
sahf
dec
inc
mov
xchg
mov
cwtl
inc
inc
loope
push
mov
dec
lahf
or
mov
cwtl
push
jg
je
fsubrs
bound
adc
stc
in
cli
int3
jae
mov
push
in
fwait
sbbl
nop
cld
xchg
push
lea
ja
shll
cmp
adc
add
addr16
jo
mov
push
out
push
ljmp
xor
dec
adc
pop
mov
add
mov
lcall
xchg
xchg
adc
dec
pop
cmp
fmuls
call
mov
mov
jecxz
les
mov
xchg
js
mov
lret
not
sub
fbld
stc
xor
call
aas
push
cmp
jmp
dec
daa
punpcklbw
push
cwtl
add
addb
sti
in
rorb
cmp
push
mov
data16
sbb
ret
shll
sub
mov
xchg
fadd
daa
cmpsl
sar
jmp
sahf
ftst
mov
inc
push
push
mov
rcll
rcl
pop
cmp
aaa
inc
push
xchg
xor
inc
add
mov
dec
or
cmp
mov
lea
bound
in
dec
mov
sbb
cmpb
mov
rol
movsb
call
inc
rcrb
xor
mov
mov
pop
in
aaa
jno
fchs
mov
mov
in
pop
or
call
mov
cmp
sbb
call
fldenv
xchg
adc
lock
pop
fisubrs
jle
xchg
and
stos
lods
fimull
je
jle
xor
sub
inc
dec
rcl
bound
pop
lds
call
arpl
or
jle
mov
rcr
mov
mov
inc
sbb
mov
add
jp
inc
dec
shlb
xor
mov
dec
je
cmp
stos
jge
cmpsb
aas
mov
shl
outsl
dec
cmp
leave
cltd
dec
cmp
cmp
lea
loope
into
push
pop
or
dec
xchg
push
scas
mov
inc
xor
ret
dec
insb
call
mov
rcll
outsl
jle
inc
sbb
in
sti
add
and
mov
imul
adc
push
es
ret
sub
lret
fs
adc
and
push
sahf
and
sti
pop
adc
int3
and
push
or
shll
dec
jbe
mov
test
xlat
pusha
roll
cmp
stc
xchg
mov
incl
shlb
in
rorb
insl
mov
imul
fistps
pushf
dec
ljmp
insl
dec
xor
cmpsb
fdivl
imul
dec
lods
into
inc
mov
out
add
inc
ljmp
xchg
scas
inc
cmp
cmp
xlat
sbb
dec
or
pop
add
mov
mov
mov
and
lock
jecxz
mov
leave
dec
dec
fwait
pop
or
pop
add
adc
aam
add
jnp
gs
cwtl
addr16
add
push
ljmp
jecxz
adc
cmpsl
and
pop
filds
mov
scas
jmp
ficomps
pop
call
cld
adc
clc
jmp
repz
mov
mull
mov
jge
and
movsl
adc
repz
sub
lcall
in
jns
cwtl
pop
popf
mov
into
hlt
jbe
push
add
out
cmp
xchg
mov
data16
fimull
movsl
and
aaa
or
sub
xor
int3
push
roll
in
in
cli
shlb
mov
rorb
int
mov
or
jle
ret
mov
lcall
xchg
ljmp
cmc
fstpt
out
ds
jns
loop
push
mov
sub
mov
int
aas
jl
mov
lods
add
test
repnz
sbb
sahf
cmp
xor
out
ljmp
sub
mov
test
pop
fisubrl
inc
add
mov
addr16
cmp
mov
mov
fidivrl
cmp
inc
fildll
lock
arpl
std
xchg
int3
das
fildll
mov
add
movsl
add
jg
cld
inc
push
loopne
lods
cmpsl
movsb
pop
adc
sub
mov
dec
and
cltd
dec
jnp
out
push
or
adc
mov
outsl
clc
pop
cmp
jae
mov
pop
enter
repz
adc
jnp
fimuls
push
push
shll
hlt
adc
imul
arpl
sub
push
arpl
cltd
enter
sarb
push
fmuls
movsb
movsb
and
enter
fimull
or
jae
cmp
lcall
rcr
jp
mov
add
andnps
cwtl
ret
out
lods
jl
test
loope
jnp
jne
jns
cmp
xor
ja
out
mov
xor
arpl
add
ret
movsl
fists
xor
stos
add
js
rolb
cmpsl
xlat
sub
push
sub
nop
xchg
dec
cli
and
out
in
lods
push
setl
cmp
and
loop
mov
pop
into
rcrb
imul
in
mov
mov
push
jo
ljmp
bnd
adc
cmpsb
xchg
dec
nop
jge
and
jg
dec
and
je
js
call
push
stos
data16
leave
cmp
dec
mov
cli
adc
xchg
popa
inc
cmp
out
mov
pop
fsubrs
lret
or
shlb
pop
adc
xchg
popf
xorb
orb
push
inc
mov
data16
inc
add
fidivrs
stos
hlt
lret
lds
fwait
sub
fsubp
adc
in
xor
shl
jo
testb
push
stos
aas
mov
mov
sub
out
xchg
mov
sbb
insb
cmpsl
jnp
sub
xorl
insb
pop
in
repz
mov
mov
push
loope
inc
mov
int3
or
adc
xlat
rcrl
clc
pop
aad
sbb
arpl
pop
loopne
popa
push
mov
adc
inc
mov
xchg
fstps
add
sub
dec
in
cmpsl
ret
lret
stos
in
testb
xlat
out
dec
shlb
clc
xchg
stos
mov
int
data16
cmc
push
out
ljmp
mov
sub
in
sub
pop
add
adc
push
and
cmp
xchg
jbe
add
into
push
out
add
or
aad
adc
jb
inc
das
cmc
jmp
push
js
sbb
and
aad
pop
rclb
bound
push
andl
xchg
jl
pop
loopne
adc
cli
lret
push
push
mov
fmull
add
sub
rorb
or
mov
aad
popa
hlt
lahf
icebp
pop
bound
jmp
add
sub
and
mov
sbb
jmp
hlt
add
inc
cmp
or
sahf
sub
sub
mov
outsl
stos
inc
jbe
dec
pop
jne
nop
rcr
in
mov
ds
cld
rolb
unpckhps
add
fsubl
jb
sub
or
sbb
lods
loop
fisttps
cli
xor
jns
jns
cmp
arpl
jecxz
add
jns
xchg
add
inc
nop
popa
arpl
push
inc
inc
fnsave
push
push
fmuls
adc
xchg
xchg
dec
inc
add
inc
mov
pop
adc
mov
add
jo
cltd
sahf
adc
and
and
push
inc
mov
into
and
insb
data16
mov
pop
popf
in
repnz
or
mov
and
xor
cwtl
xchg
jnp
mov
add
cmp
xor
subb
cmc
loopne
lcall
cmc
sahf
pop
out
xchg
imul
push
push
pop
push
push
mov
pushl
jecxz
adc
sbb
in
nop
xor
cwtl
inc
lcall
mov
loopne
add
mov
sub
xchg
lret
adc
jle,pt
or
jl
mov
dec
aaa
scas
in
sub
pop
addl
pushf
push
cmp
inc
add
dec
xchg
and
lahf
jo
jl
daa
loope
jb
mov
leave
mov
icebp
je
popa
xor
sti
xchg
push
scas
mov
shlb
rcrb
test
popf
cwtl
cmp
popf
mov
fdiv
push
test
push
jno
or
push
add
jecxz
dec
or
mov
mov
shlb
rorb
inc
cmpsl
xchg
jecxz
ja
in
out
pop
xlat
dec
mov
clc
icebp
jnp
push
mov
jae
cmp
or
subb
xor
fs
mov
shlb
or
inc
jecxz
repnz
and
jne
pop
in
lds
jp
nop
adc
xor
adc
cmpsb
popf
xor
in
mov
add
movsb
jp
cli
jae
push
pop
xchg
in
add
sbb
jge
lar
in
and
adc
cwtl
xor
add
cmp
jno
push
or
iret
std
scas
xor
push
rol
das
aas
mov
adc
ds
es
loope
or
lret
adcl
sahf
sar
fldt
jnp
insb
dec
xchg
dec
xchg
push
push
loop
mov
icebp
daa
xorl
and
inc
fldenv
push
lds
mov
mov
and
mov
mov
cmp
cmp
inc
andb
jg
mov
xchg
add
dec
shl
xor
inc
dec
jl
sub
jne
outsl
cli
loope
jnp
jns
jb
or
inc
mov
push
push
jno
mov
int3
xor
inc
mov
mov
push
xor
xlat
in
arpl
leave
sti
xchg
mov
movsb
dec
aaa
mov
push
sub
loop
xchg
push
push
lods
movq
fisubl
mov
test
sahf
add
mov
adc
jmp
xor
cmp
jns
jns
cld
inc
mov
pop
shll
pop
cmc
jmp
push
js
mov
not
fldl
or
lods
mov
push
inc
mov
int3
fdiv
cwtl
jb
imul
ja
sbbl
das
sbb
cmpl
repnz
pusha
lret
jb
addl
jge
int3
es
fs
scas
dec
rcrl
sbb
jbe
in
popf
popa
fst
pop
popa
or
out
mov
mov
xor
inc
leave
pop
loopne
ljmp
sarl
cs
inc
mov
or
lods
loopne
add
fnstsw
out
ret
lret
frstpm(287
out
and
rcl
jmp
cmp
std
mov
pop
mov
cwtl
jne
xchg
sar
mov
add
cmp
scas
xchg
loopne
jl
jno
fwait
stc
loopne
dec
fninit
inc
repz
and
lock
fcoms
lds
jge
pop
es
sbbl
pop
ja
test
test
xor
pushf
cld
dec
xchg
pop
adc
push
push
test
mov
push
ret
mov
mov
test
outsb
daa
test
jae
scas
bound
sub
lcall
jns
fsubrp
stos
mov
mov
inc
xchg
xchg
dec
push
inc
addr16
call
adc
dec
mov
cmp
xchg
sub
pushf
pop
popa
sbb
mov
arpl
enter
and
fsub
popa
pop
popl
push
out
xchg
mov
xor
sarb
adc
mov
xchg
test
emms
mov
sbb
lock
sbb
jp
ret
mov
pop
repnz
rorl
xor
fcompl
add
out
sub
lea
loop
sbb
fildll
pop
hlt
cltd
jns
mov
ds
fidivs
xchg
push
std
mov
push
bound
jo
dec
xor
fisubrs
mov
in
sub
shr
inc
jb
loope
fwait
sub
inc
push
push
xchg
cmp
scas
xlat
lret
test
les
sbb
repz
es
sub
aad
cmp
inc
jnp
repz
add
enter
mov
dec
movsl
int3
mov
adcl
jae
outsb
xor
das
sbb
jbe
test
cmp
jne
pop
cmpsb
movsb
adc
mov
jmp
cld
jge
cmp
lcall
mov
movsb
fidivl
pop
and
pop
icebp
and
outsl
insl
xchg
bound
add
fidivs
fisttps
arpl
sbb
jge
out
ret
mov
cmp
xchg
mov
push
add
sbb
and
das
jge
lahf
and
pop
push
cmp
loop
push
scas
orb
sub
rdtsc
insb
cmpsl
sub
cmp
lds
movsl
int3
adc
in
enterw
and
dec
jne
add
sbb
push
sbb
sbb
cld
jle
sar
dec
aas
push
movsb
and
js
or
cwtl
dec
dec
pushf
push
dec
jg
sbb
int
mov
push
add
shlb
add
scas
aad
aad
pop
pop
jno
stos
mov
pop
and
int3
pop
cmpsl
mov
mov
and
or
aas
mov
fmuls
inc
mov
fwait
xchg
popf
shlb
and
sbb
add
and
jo
xchg
test
push
push
or
sbb
je
popf
idiv
xchg
sub
popf
mov
fstpl
outsb
stc
xor
lock
mov
mov
int3
push
pop
mov
lret
icebp
mov
sub
into
xor
les
and
fildl
xchg
or
mov
and
leave
aam
xor
push
lods
stos
lret
cmc
jge
lods
sub
jae
mov
xor
andl
roll
sbbl
sbb
or
or
or
mov
sub
dec
xchg
jle
inc
push
cmpsb
mov
testb
repz
js
call
test
sarl
outsl
aaa
pop
sti
ljmp
xchg
orb
jae
cmpsb
ss
loopne
xor
push
inc
add
jb
dec
dec
sub
add
xor
push
iret
icebp
pop
cmpsb
mov
cmp
mov
pop
loopew
mov
xlat
into
shlb
mov
mov
or
mov
imull
hlt
out
sbb
cmc
sub
or
xchg
arpl
xor
bound
cmc
fucomip
cmp
cmpsl
or
pushf
mov
mov
lcall
cld
cmp
mov
and
inc
adc
push
sbb
in
xchg
dec
icebp
or
xchg
iret
test
daa
dec
or
int3
and
jp
ret
out
sbb
xchg
jl
mov
cmp
lock
jge
jmp
xchg
nop
shrb
cmpsl
xchg
call
and
push
loopne
ret
jae
fdivrs
add
insl
add
push
xchg
rcrl
mov
pop
clc
mov
ds
addr16
mov
iret
scas
aaa
jbe
int
cmc
inc
cmc
cs
cmpb
enter
jno
xor
mov
insl
mov
adc
aaa
sub
fstps
xchg
sbb
rcrb
ret
into
mov
movsl
rcrb
dec
ret
jo
sub
push
add
fs
mov
mov
dec
out
sub
push
aaa
int
outsb
cmp
dec
sub
xor
sub
inc
mov
sub
and
mov
xor
xchg
fcmovu
pop
lea
cmpsb
pop
fidivrl
sar
adcb
mov
sub
fbstp
xlat
popf
mov
sbb
ror
dec
jmp
cwtl
bound
test
adcl
stos
push
addr16
jmp
loop
mov
dec
sbb
ds
sub
adc
cs
add
cld
jecxz
inc
or
rorb
in
loop
adc
lods
push
push
jp
sub
clc
les
dec
xchg
jp
push
mov
popf
out
pusha
enter
lret
sbb
fistpl
int
and
je
mov
adc
imul
jns
cmc
stos
adc
jb
fstp
mov
pop
cmp
jo
je
pushf
test
add
mov
test
dec
iret
mov
mov
pop
push
xor
int
or
xorb
addr16
or
sahf
dec
pop
loopne
or
mov
push
xchg
or
ss
and
out
push
jl
loopne
add
fisubrl
sub
ftst
or
adc
fwait
rcrl
aam
inc
cltd
xor
nop
outsl
push
ret
stos
mov
pop
mov
aam
icebp
mov
int3
shrl
sub
pop
test
dec
mov
add
jge
or
jmp
shll
imul
icebp
mov
sbb
dec
push
fnstenv
or
cli
pop
push
jmp
scas
xchg
push
bound
pop
jp
mov
or
jo
in
jle
push
jno,pt
pop
push
outsl
hlt
out
add
cld
mov
push
lahf
mov
jge
fisttpl
aas
xor
bt
and
mov
test
idiv
fwait
lods
outsl
dec
jle
pop
shl
shl
xchg
popf
sbb
jno
dec
push
sub
or
add
adc
xchg
push
or
lcall
xorb
js
mov
js
and
es
stos
xchg
xor
mov
ret
addr16
fldenv
int
mov
mov
in
jmp
jbe
push
inc
inc
std
outsb
into
rcrb
lds
adc
das
jno
xchg
mov
push
shll
dec
cmpsb
xor
mov
insl
and
icebp
or
call
mov
imull
sahf
and
add
mov
push
adc
sub
es
dec
leave
mov
xchg
std
icebp
sub
bound
cltd
jae
sub
aam
std
pusha
mov
pop
mov
cmp
xor
ss
ret
test
mov
or
lcall
hlt
rclb
ljmp
imul
or
xlat
in
mov
inc
iret
inc
pop
scas
dec
repnz
fists
mov
fucomi
add
mov
daa
in
inc
cwtl
iret
loope
xchg
xchg
loopne
in
and
xchg
dec
mov
jns
push
int
fwait
stc
int3
xor
xchg
push
and
ret
ss
sbb
mov
js
push
imul
call
std
bound
shr
cmpsb
loope
adc
xrelease
jle
cwtl
fs
sub
add
push
std
outsb
scas
popw
pop
loope
fnstsw
mov
cltd
lods
mov
xor
cmp
out
pop
popf
fsubl
dec
mov
das
cmp
das
and
or
out
xor
aad
les
jp
popf
outsl
out
mov
add
lds
mov
in
icebp
outsl
mov
nop
push
outsb
sub
iret
push
push
cli
and
jg
xorb
lret
mov
arpl
cmc
inc
jge
addr16
push
jg
add
jb
sbb
lret
bound
sbb
dec
lea
adc
lds
pop
inc
lcall
xor
dec
test
push
sub
xchg
push
movl
jae
push
push
sub
push
xchg
adc
add
push
addr16
jp,pn
jle
ret
in
lcall
lea
jnp
mov
and
pop
adc
sbb
mov
sub
adc
movsb
data16
and
hlt
push
mov
es
cmp
fs
movsb
xchg
push
pop
or
mov
sub
sub
mov
jo
ja
test
pop
sub
add
enter
cmp
pop
ds
cli
mov
xlat
sarl
pushf
inc
and
inc
sub
insb
lea
mov
xchg
pop
xor
xchg
pop
pop
inc
repz
dec
jne
roll
in
outsb
sahf
cltd
repz
jle
in
aas
jl
stos
xchg
or
ret
sub
test
test
mov
mov
dec
or
adc
mov
pop
xchg
pop
push
ljmp
outsl
xor
lds
mov
jge
push
and
decb
pop
cmp
xor
jne
sbb
xchg
inc
jl
cmp
shll
push
xor
sahf
iret
dec
setg
les
adc
in
stos
mov
sub
xor
inc
cmp
push
push
outsl
out
add
repz
fcomps
sbb
out
lods
jle
out
iret
leave
test
repnz
add
test
dec
cmp
dec
inc
and
divl
addr16
loop
lds
pop
cmpsb
or
mov
lret
nop
and
shlb
in
fistps
pop
xlat
xchg
dec
xchg
fnstenv
xchg
pop
cwtl
mov
test
sti
ds
jo
mov
xchg
and
popa
fistl
push
add
sbb
ficompl
flds
es
adc
les
inc
insb
inc
xor
cmp
in
lods
add
dec
xor
pop
imul
mov
push
mov
lds
fdivrl
push
inc
pop
aad
push
fnsave
sarb
mov
jo
jle
pushf
ret
aaa
pop
push
pop
pop
adc
push
hlt
inc
and
jbe,pn
sarb
js
mov
xchg
cli
and
push
mov
sbb
add
iret
loop
push
jnp
stos
lods
fnstenv
mov
jecxz
in
xchg
pop
fstl
in
push
pop
sub
mov
cmp
mov
in
das
mov
stos
xchg
fsubrl
push
mov
jmp
test
stc
leave
pop
scas
fwait
mov
test
movb
jecxz
test
or
add
rcrb
xor
sub
fisubs
lds
fistps
cmc
cs
mov
scas
mov
fnsave
push
addr16
clc
push
fwait
pop
add
stc
scas
pusha
mov
mov
in
in
xlat
push
cmpsl
rorl
iret
xchg
mov
in
into
outsb
mov
xor
sti
rorl
mov
test
imul
lcall
pop
fsubl
jae
lahf
mov
repz
cld
pop
inc
fstpt
fwait
mov
lret
push
adc
pop
adc
dec
pop
adc
adc
xor
add
mov
fmul
pop
xor
cld
ljmp
movsl
xchg
mul
xchg
rcrb
mov
mov
out
mov
into
inc
insl
shrl
xor
addr16
push
leave
xor
pop
subl
sub
and
in
rcrb
add
lcall
into
out
out
jge
popf
leave
pop
outsb
gs
pop
cltd
in
mov
and
iret
sub
out
insl
aaa
ja
add
out
inc
dec
xorl
sbb
xlat
cmpsb
pop
pop
aas
repz
add
repnz
ret
or
sub
and
jl
outsl
inc
ja
into
or
xor
xchg
ret
sub
push
test
jno
andl
jmp
ss
mov
lret
addr16
adc
lock
sti
adcl
dec
add
add
dec
and
mov
leave
jecxz
inc
popf
mov
aad
add
dec
cltd
repnz
cmp
push
push
sub
lahf
fsts
imull
in
sub
mov
and
scas
mov
in
pushf
pop
xor
nop
inc
lahf
cld
sub
es
addb
movb
outsl
imul
lock
shrb
leave
dec
cmp
loope
cmc
pop
sub
xor
loope
dec
adc
cmp
mov
mov
popa
dec
sarl
or
daa
adc
mov
and
lret
movsl
scas
out
push
ds
daa
mov
in
or
add
jbe
rcpps
fisubs
decl
cmp
push
out
pop
popl
lods
push
jbe
mov
cltd
mov
mov
dec
inc
int3
jecxz
fucom
add
je
repz
lock
lock
sub
lahf
xor
mov
fmull
mov
jmp
xchg
fistl
dec
or
les
data16
push
shrb
sbb
sub
jbe
fisttpl
scas
pushf
mov
mov
push
arpl
pushf
pop
pop
inc
dec
filds
filds
nop
repz
xor
fistpl
add
push
or
arpl
xchg
stc
ja
ret
mov
daa
arpl
pop
pop
mov
inc
out
or
mov
lea
xchg
insb
mov
ss
xchg
and
aad
adc
imul
and
xor
popa
loopne
xor
stc
pop
mov
cmp
movsb
adc
enter
mov
pmaddwd
mov
xchg
test
in
lea
push
lods
dec
and
inc
mov
pop
rorl
hlt
out
jge
mov
adc
push
ret
jnp
push
cmp
je
xchg
je
test
imul
mov
movsl
mov
les
xor
mov
push
xor
add
or
dec
pop
scas
sbb
pop
and
out
inc
push
shlb
push
subl
mov
cmc
fstl
inc
cmp
cmp
mov
pop
and
mov
je
imul
xorb
sub
stos
pushf
mov
insb
test
in
jmp
xor
jbe
add
insl
sbb
push
mov
pop
movsl
dec
dec
jne
bound
lcall
xchg
push
add
xor
js
jp
fs
mov
dec
mov
jle
mov
ss
lahf
dec
pop
mov
mov
add
xchg
inc
xlat
mov
adc
jp
mov
cwtl
cwtl
cs
push
cmc
add
or
sahf
mov
jae
push
xor
jbe
outsb
mov
fdivrl
and
and
inc
test
push
mov
inc
in
cltd
cmc
dec
cli
pusha
rcrl
sub
push
sub
push
fdivrs
fmulp
jne
sbb
mov
push
pushf
inc
xchg
jb
shll
jno
push
push
push
adc
aad
fsubrs
adc
push
push
ss
cwtl
int3
aas
mov
or
xor
rcr
dec
mov
mov
xchg
jecxz
rcrl
cmc
lods
sub
add
xchg
das
flds
pusha
ds
icebp
loopne
push
inc
mov
mov
push
add
xor
lock
xor
ljmp
test
mov
loop
ret
adc
in
fnsave
outsb
inc
sub
mov
and
in
iret
fidivl
jp
adc
rolb
add
aas
repnz
jge
inc
cltd
mov
add
or
and
icebp
adc
inc
sub
out
adc
sti
outsl
adc
insl
in
sub
xchg
je
out
adc
into
icebp
mov
fnstcw
mov
mov
fwait
mov
push
push
hlt
push
popf
mul
inc
push
test
out
lock
test
and
std
outsl
int3
scas
gs
filds
shrl
daa
lods
divl
jp
jb
and
lock
inc
scas
add
jle
push
pop
pop
lock
out
adc
inc
outsb
repnz
hlt
ret
pop
dec
icebp
add
clc
lds
cli
cmc
iret
mov
jmp
add
daa
sub
popf
mov
pop
std
sub
pop
shll
test
out
shll
sbb
mov
clc
aas
outsb
push
aaa
test
mov
cmpsb
or
push
push
pop
insl
jle
or
fsubs
adc
rcll
mov
dec
fwait
mov
push
into
xchg
imul
mov
push
push
cltd
in
add
int
imul
sbb
imull
fdivl
mov
dec
jbe
push
sbb
aaa
xor
jp
mov
dec
and
je
dec
sub
sub
adcb
xchg
xor
sub
ret
add
lock
push
mov
cs
aaa
adc
adc
pop
in
rorb
stos
inc
pop
mov
cmp
cs
repz
xchg
ror
bound
mov
pop
pop
and
sub
test
mov
pusha
ds
jmp
cmc
pop
movsb
xor
in
aam
cltd
sub
insl
mov
pop
stos
xlat
out
mov
xchg
mov
popf
cmpsb
mov
aaa
jmp
push
stos
add
cwtl
insl
aam
lret
pop
push
cmp
icebp
pop
jnp
shrb
std
inc
push
push
jo
nop
add
andb
sub
add
inc
adc
inc
in
and
into
loopne
push
cli
mov
push
mov
mov
inc
stos
inc
inc
cmp
aaa
loope
dec
cmp
mov
mov
fldenv
jecxz
mov
jmp
in
shll
lds
or
fisttpll
pop
fiaddl
xor
jge
sbb
inc
lds
shr
push
adc
outsl
rorl
add
jl
rolb
push
or
pop
imul
out
loope
xchg
fs
or
orl
mov
fidivrs
cmp
jb
dec
inc
fabs
lret
je
xor
inc
stc
add
arpl
pop
fs
push
xchg
adc
dec
testl
mov
xlat
scas
jg
mov
dec
xchg
mov
insl
lahf
jg
pop
mov
adc
aad
dec
pop
push
rcrb
xor
test
xor
inc
xchg
add
xchg
out
daa
mov
jbe
div
call
lods
repz
lock
jp
nop
sbb
bound
movsl
mov
daa
xchg
test
cli
sbb
into
ljmp
fadds
lcall
xchg
pop
inc
lret
daa
sbb
mov
adc
xchg
aas
or
cld
pusha
xor
pop
push
or
and
lahf
xchg
adc
add
gs
mov
test
aad
add
ja
jle
add
imul
jp
notl
mov
adc
cltd
adc
arpl
sbb
fwait
sbb
mov
push
and
movsl
ss
xchg
lahf
mov
pop
push
outsl
stos
fwait
xchg
imul
ja
mov
mov
sub
mov
push
cld
shrb
xor
push
ret
jno
cmp
inc
sbb
xor
xchg
call
and
stos
or
scas
xor
xchg
test
mov
loop
lret
in
jecxz
and
adc
test
or
jecxz
movsl
or
mov
loopne
cmp
sbb
mov
cwtl
gs
int
loope
sahf
ja
jp
inc
jo
imul
pop
call
int3
loop
mov
cmp
push
jecxz
jno
je
cmpsb
and
xchg
test
bound
push
add
je
fldenv
loop
or
push
sti
out
daa
push
lock
xor
mov
jg
lret
clc
rcll
jg
jbe
outsb
xchg
stos
mov
add
and
sbb
cmp
int
mov
and
pusha
jne
mov
xor
mov
repz
movsb
xchg
cmp
jmp
mov
scas
xlat
notb
dec
push
repz
pop
adc
test
mov
fs
scas
mulb
dec
push
mov
scas
iret
fwait
adc
sbb
movsl
jnp
test
mov
push
fcomp
std
lahf
sub
adc
add
or
sbb
push
mov
mov
dec
mov
dec
dec
xchg
push
push
mov
and
dec
data16
aam
fimull
mov
bound
jg
ds
and
imul
lahf
jge
enter
pop
fs
mov
xchg
sar
aas
inc
add
sti
add
stc
seta
iret
dec
mov
mov
aas
adc
mov
mov
push
pop
stos
idiv
pop
inc
push
dec
std
mov
insl
push
pop
xchg
mov
cmp
mov
jno
inc
pop
das
and
mov
cmc
sbb
adc
jbe
add
imul
push
call
ss
imul
das
mov
ljmp
pop
call
push
xor
pop
pushf
push
ljmp
inc
movsl
add
push
icebp
xor
je
ja
sbb
sub
jp
mov
jmp
repnz
dec
out
jmp
adc
cmp
test
sarl
sbb
xor
pop
dec
xchg
mov
orl
clc
rorl
jecxz
jge
or
xchg
push
movsl
movsl
push
mov
sbb
push
andb
cmp
test
cli
ret
adc
and
fs
cmp
es
shrl
push
stos
out
movsl
push
popa
or
rclb
sub
andl
pop
cmpsb
das
adc
imul
in
loop
add
enter
jne
jg
inc
fsub
mov
mov
insb
out
lods
ja
jnp
mov
jmp
icebp
push
mov
pop
loopne
test
cmp
insl
fs
and
jae
add
sub
gs
cwtl
xchg
lods
imul
push
in
pop
enter
xchg
cmpsl
pop
push
lock
std
adc
int
pop
mov
xchg
cwtl
sbb
xchg
lret
inc
and
lods
or
scas
adc
sahf
and
stos
shlb
je
and
iret
mov
movsb
mov
or
shr
outsb
sti
mov
push
xchg
test
push
xor
mov
in
push
sbb
arpl
cmc
and
dec
sub
dec
jae
xor
lods
test
loopne
ljmp
pop
daa
cmp
push
in
inc
sub
jbe
test
cltd
push
mov
jge
cmp
sub
xor
or
mov
inc
pop
xchg
jg
xor
gs
adc
mov
data16
in
jmp
jnp
mov
jl
daa
imul
sub
shlb
out
popf
out
mov
mov
jge
mov
or
mov
mov
lsl
adc
sbb
or
inc
cmp
sti
xor
inc
push
rorb
outsl
into
mov
pop
nop
cmpsl
xchg
sbb
sbb
sbb
and
sarb
or
test
daa
pop
mov
mov
lods
pusha
mov
push
fwait
xlat
je
sbb
adc
cmpsb
mov
and
mov
adc
incl
cmpsl
and
xchg
fstps
sbb
out
adc
mov
popf
ret
mov
mov
adc
jmp
add
jo
mov
inc
cwtl
pop
xchg
push
push
dec
sub
push
push
into
es
pop
negb
jb
push
adc
pop
int
xor
mov
dec
jecxz
pop
mov
push
push
aas
jecxz
mov
add
jmp
xlat
mov
pop
adc
das
cltd
divl
fwait
xor
add
pop
inc
rcrl
xchg
or
jnp
mov
neg
loope
faddl
loop
sub
rcrl
dec
add
mov
in
sub
push
popf
mov
lahf
mov
mov
ljmp
iret
cs
jns
addb
or
inc
dec
je
sub
cli
ffreep
je
pop
xor
lret
lret
mov
lds
imul
mov
xor
arpl
and
sub
fsubl
or
dec
add
pop
lods
mov
iret
cmp
add
ret
jmp
inc
jo
bound
fisttpl
inc
loope
cmp
xorb
fs
push
cmpsb
inc
xchg
enter
pushf
stos
pop
push
in
inc
push
outsl
out
xchg
cli
cmpl
adc
fs
xchg
idivb
push
mov
out
cmc
xor
lods
pusha
lret
int
pop
xchg
insl
fldcw
es
jl
or
cld
int
popa
add
lcall
add
fsts
xchg
mov
push
test
shlb
aad
in
mov
icebp
cwtl
bound
adc
popf
push
push
fstl
je
stos
xlat
mov
add
add
adc
xchg
in
push
pop
push
pop
test
xchg
ror
adc
aam
fs
adc
movsb
js
data16
fcompl
ret
adc
pop
test
mov
push
xor
push
sti
xor
mov
in
cmp
xlat
sub
dec
loop
jae
sbbb
lahf
aas
sbb
sub
jne
mov
cmpsl
shr
mov
pop
jnp
inc
fistpll
cmp
scas
gs
ds
jne
iret
or
jmp
jno
scas
test
adc
mov
int3
daa
adc
sub
push
imul
sbb
jbe
mov
fwait
mov
xchg
inc
insb
pusha
jmp
punpckhbw
sub
cmp
sub
loop
lahf
xchg
xlat
jbe
repz
sbb
nop
push
push
adc
loope
mov
cmp
mov
andb
adc
std
add
in
je
sub
fs
into
xchg
mov
int3
dec
dec
mov
rcll
outsl
sbb
cld
sub
das
pop
mov
movsl
or
fnstsw
dec
nop
dec
jo
pop
cwtl
mov
adcl
in
jnp
mov
fcmovnbe
gs
xchg
pop
pop
xlat
out
mov
and
test
call
jno
or
loopne
inc
jle
xchg
outsb
mov
enter
adc
pushf
cltd
jo
push
adc
jno
mov
adc
and
outsb
sbb
cmp
sub
push
pop
xor
sub
xchg
testl
popa
jo
enter
jp
pop
adc
int3
push
jg
stos
mov
mov
movsl
mov
xchg
ffreep
daa
scas
jecxz
xlat
adc
int3
or
data16
iret
xchg
cmp
sub
and
cmc
out
mov
xor
pop
fnstcw
leave
dec
dec
pop
scas
add
add
mov
lahf
lret
call
jp
out
pop
push
repnz
jmp
pop
xchg
xor
cs
inc
add
fdiv
add
push
mov
bound
adc
and
out
aam
cwtl
sub
mov
ficoms
es
mov
pop
adc
dec
outsb
das
or
cmpl
call
int
std
pop
dec
cmpsl
scas
jbe
mov
jae
inc
mov
xor
adc
insb
push
mov
dec
lcall
dec
push
sbb
pop
or
lods
sbb
pop
popa
out
insb
movnti
adc
js
mov
mov
mov
sti
insl
xchg
mov
pop
movsb
mov
sub
rcr
or
jmp
pop
roll
mov
and
and
mov
xchg
ret
mov
push
aam
or
pop
nop
xorl
hlt
mov
out
lock
in
dec
and
xlat
sub
mov
pop
shlb
insl
inc
insl
sub
sub
shll
fcomps
inc
loopne
shlb
popa
aad
xor
rcrb
repnz
in
cmp
lods
cmp
in
xchg
xchg
dec
arpl
xchg
jns
lahf
mov
mov
aas
mov
fdivrs
adc
lret
inc
lock
xchg
sbbb
jno
adc
adc
or
sbb
pusha
fwait
xor
adc
mov
scas
mov
cmp
imulb
inc
icebp
mov
mov
es
push
cld
and
xor
and
fadds
mov
push
pop
lret
into
inc
mov
pop
test
inc
sarb
xor
ret
xor
sub
pop
xlat
addb
loope
push
add
dec
xor
mov
fstps
xchg
pop
in
sbb
mov
push
xrelease
flds
mov
dec
and
pop
in
aas
fldenv
in
sub
fstps
aas
or
ja
mov
iret
xor
sbb
xchg
loopne
pop
movsb
sbb
push
insb
sub
insl
icebp
push
nop
dec
int3
mov
mov
jo
jno
jb
mov
mov
xchg
in
add
jmp
inc
sbb
sbb
sbb
cmp
pop
bound
and
int3
ljmp
daa
lea
shrl
gs
jg
aaa
adc
xchg
inc
fs
ss
stos
js
loopne
mov
popa
or
lods
out
sbb
xchg
call
cwtl
push
inc
sub
adc
sbb
popa
add
cmp
js
aad
xchg
add
lods
add
cmp
lcall
inc
mov
cmc
cwtl
nop
xchg
sbb
daa
fisttpll
sub
test
in
xlat
jle
repnz
or
pop
fisttpll
mov
sarl
call
mov
test
enter
jp
jecxz
push
cmp
sub
pop
das
mov
xlat
pop
fdivrl
arpl
xchg
jae
stos
sysenter
sub
out
or
mov
pop
subl
adc
cltd
push
pop
inc
adc
repnz
lock
out
movsl
arpl
mov
aaa
and
xchg
xor
add
or
outsb
icebp
lods
push
xchg
arpl
add
push
jg
or
jbe
lds
cmp
fisttpl
inc
arpl
pop
pop
sbb
sub
push
fwait
push
subl
shlb
daa
push
mov
xchg
adc
leave
shll
push
jnp
and
xor
sbb
mov
mov
pusha
cmp
mov
daa
dec
fstps
cmp
loop
iret
adc
push
test
scas
inc
xor
pop
mov
mov
push
aam
push
push
fwait
in
mov
add
mov
mov
add
sub
cmp
das
es
mov
adc
mov
mov
std
pop
push
sbb
adc
pushf
shll
mov
adc
mov
and
pop
or
mov
sbbb
sub
lcall
jecxz
popa
ret
out
sub
cmc
xor
addr16
int
jge
mov
add
nop
outsb
push
push
cli
jns
pop
or
sti
out
inc
sub
arpl
lods
xchg
out
in
mov
dec
adc
sub
aas
push
out
loope
xlat
cmpsl
and
icebp
pop
dec
mull
mov
mov
sbb
in
push
dec
jne
ret
dec
mov
push
pop
dec
aam
aaa
jo
cmp
or
clc
addr16
fistpll
and
xchg
add
ret
adc
mov
fsubs
fdivl
nop
movsl
sarl
sahf
iret
push
sti
pop
and
adcb
xor
mov
and
ljmp
mov
imul
les
add
dec
fwait
jb
add
int3
cmpsl
or
lcall
and
add
cmp
cmp
push
decb
lret
dec
mov
mov
ds
popf
fbstp
sbb
pusha
add
dec
nop
push
lods
jb
loope
lock
jg
adc
or
int
js
cmpsb
mov
out
xlat
test
in
xchg
or
sub
stos
mov
fucomp
sbb
lods
and
sbb
test
and
bound
negl
inc
lods
and
rcrb
inc
fmuls
out
in
mov
mov
mov
pop
sti
push
lds
pusha
adc
or
sarb
out
std
in
and
out
push
xor
jmp
mov
mov
push
mov
cs
cwtl
mov
adc
xor
mov
popf
jge
sbbb
int3
sub
mov
jb
lret
test
push
or
clc
mov
sarl
fstps
mov
jns
sub
xchg
or
les
push
pop
or
mov
mov
xor
lea
add
pop
mov
inc
sbb
jno
inc
push
iret
push
xor
push
xchg
lock
enter
mov
mov
cli
sbb
idiv
icebp
es
dec
lret
xchg
les
add
sbb
repz
loop
pop
pop
lock
cmp
mov
jg
bound
aad
lahf
sbb
jo
or
movaps
push
lds
shll
nop
mov
int
in
mov
testb
xlat
jecxz
push
scas
pushl
daa
adc
loope
sub
lds
or
adc
shll
mov
xchg
loopne
dec
and
xchg
vprotd
sub
addb
mov
jl
pop
int
sar
hlt
ds
mov
xchg
addr16
movb
inc
inc
div
notb
in
mull
lock
pop
mov
cld
xchg
test
xor
rcrl
push
imul
je
movsl
cs
sub
jo
mov
je
mov
mov
jge
xchg
push
jmp
push
pushf
mov
xchg
push
mov
mov
mov
fwait
sar
pop
mov
imul
pop
and
inc
mov
enter
out
ds
pop
in
mov
jmp
test
scas
mov
stos
out
mov
shl
shrl
xchg
int3
sub
imulb
cmpl
jge
test
addl
dec
dec
xor
jmp
cmp
das
lods
ret
sti
movsb
movsb
shlb
shrb
sub
ret
mov
popl
mov
sbb
or
scas
jb
cmpsb
test
push
aad
xchg
cli
inc
cmc
subl
movl
cwtl
push
dec
or
rol
cmp
clc
rcr
loopne
and
dec
stos
jns,pn
jmp
and
and
repnz
fst
imul
fcmovne
cwtl
lret
jecxz
loope
lea
scas
test
jl
sti
lods
test
cmc
popf
hlt
pop
push
adc
rorl
je
aam
sbb
loope
push
ret
pop
jo
repz
mov
test
nop
push
dec
sbb
mov
xor
lret
fcoms
cs
mov
popf
jno
cmp
popf
fwait
or
xchg
les
push
movsl
in
and
xor
cmp
push
cs
pushf
ror
adc
xorl
pop
xor
pop
clc
pop
test
sub
cmp
ds
push
cli
das
push
and
bnd
hlt
movsl
lret
cmp
cltd
add
and
sbb
jmp
push
inc
mov
push
inc
lcall
insl
xor
stc
std
scas
mov
movsb
push
inc
int3
inc
lods
xor
pushf
addr16
add
dec
popf
rcll
data16
and
movsl
dec
je
pop
ja
cmp
pop
test
std
jno
sbb
or
fldenv
les
jecxz
sbb
xor
outsl
jmp
pop
xor
mov
push
pop
sub
movb
mov
aad
mov
jae
mov
jo
cmp
popa
ss
imul
push
jae
out
aad
adc
mov
push
push
rcr
fdiv
fs
push
ss
mov
mov
inc
aad
sub
sbb
xor
rorl
dec
dec
das
cmp
clc
clc
jp
mov
cmc
mov
jae
pop
sub
fisttpl
add
jl
popf
dec
jmp
mov
adc
jbe
ret
sbb
fbstp
out
daa
aam
mov
adc
inc
jp
pop
fs
sbb
fists
and
pop
mov
rcrl
mov
jne
mov
add
icebp
mov
fistps
add
aad
fcomps
xchg
in
sub
bound
mov
pop
push
lods
mov
mov
fldl
cmp
aad
jmp
xchg
cltd
or
pop
or
call
jmp
jb
push
sub
mov
scas
nop
lods
xchg
add
or
and
dec
data16
sub
xchg
sbb
in
mov
data16
aam
mov
out
sbbb
loopne
dec
cmp
pop
add
test
imul
xor
push
in
imul
jle
jecxz
ja
pop
stos
fstl
lods
rcrl
sub
iret
jp
or
push
es
ds
dec
enter
movsbl
imul
xchg
mov
jno
aas
push
fstpt
and
fwait
cli
mov
dec
sub
sub
out
adcl
jg
fcomp
xchg
jno
mov
daa
insl
jno
daa
fldenv
mov
stc
or
add
lods
shlb
xor
test
xor
pop
dec
ret
ret
inc
jae
inc
insl
ljmp
dec
clc
or
mov
sbb
push
movsl
addb
lcall
out
dec
sarb
rorb
aas
mov
arpl
ficoms
xchg
outsl
cli
cltd
in
es
sub
mov
pusha
ljmp
jge
xor
test
mov
pop
and
sub
call
mov
add
or
lret
jmp
mov
or
orl
lea
shlb
pop
mov
cmp
xchg
icebp
xchg
push
jge
cld
les
cmp
push
scas
arpl
xchg
sbb
xchg
pop
stc
loopne
cltd
mov
cwtl
cmp
xor
or
cmp
dec
xor
xlat
fnstcw
imul
das
dec
test
push
push
or
xchg
in
nop
mov
pop
stos
call
stos
loopne
sarb
dec
mov
adc
cli
into
cmpsb
hlt
jne
into
sbb
nop
mov
pushf
addr16
ds
rorl
push
ja
roll
dec
or
leave
movsb
mull
jmp
in
mov
mov
subb
int3
test
leave
out
and
je
sub
xor
sub
pop
testb
aam
imul
mov
xor
sub
jbe
xchg
sbb
cmp
cmc
enter
insb
mov
sub
jl
ljmp
xchg
arpl
add
bnd
sbb
adc
inc
mov
xchg
lock
pop
pop
bndldx
push
mov
pop
push
ss
ds
mov
gs
aaa
adc
hlt
aad
jl
bound
data16
push
dec
loop
jb
push
icebp
es
incb
mov
stos
mov
dec
cmpl
sub
push
aas
test
aam
loope
xchg
sti
rsm
clc
outsb
mov
es
stc
xor
int3
loopne
rcll
insb
sub
jns
lods
js
pop
cmp
cmp
iret
aas
pop
inc
mov
cmp
add
pop
jae
lods
shr
adc
push
fdivrl
sbb
in
sub
push
xorl
xchg
dec
ljmp
pop
sub
hlt
pop
add
test
rolb
mov
fdivrs
jno
sbb
jo
xchg
lcall
jl
ljmp
stos
sub
and
stc
mov
jmp
sub
push
leave
push
push
xchg
cmovs
mov
or
mov
xchg
mov
ficoml
cmp
mov
enter
pusha
mov
pop
mov
inc
jmp
int3
xchg
mov
add
bound
sahf
in
scas
dec
mov
clc
inc
pop
popf
mov
int3
xor
push
mov
mov
lret
fisubrl
loop
aaa
xchg
call
push
repnz
inc
cld
inc
mov
jo
add
fimull
pop
mov
loope
loop
xor
mov
stos
mov
and
sbb
cmp
call
cmc
mov
cs
call
mov
mulb
lea
xor
mov
inc
inc
jl
xlat
cmp
xchg
and
pop
cmp
lock
addr16
enter
mov
int
add
scas
test
in
das
mov
addr16
scas
loope
cwtl
jecxz
sub
push
mov
lods
mov
stos
aam
xor
sbb
js
aam
sub
jb
divl
outsl
sub
daa
sub
jg
fmul
movsb
in
int3
es
lret
pop
fstl
aam
insl
bswap
jl
fwait
into
pop
addb
jge
sub
int
leave
sbb
cli
dec
xchg
mov
xchg
shll
xor
fisubs
jnp
or
mov
into
sbb
inc
xchg
cld
sbb
xchg
out
hlt
fists
push
cmp
mov
test
mov
mov
in
in
or
xchg
lods
gs
and
sbb
lea
cs
ja
mov
add
sarb
or
pusha
test
jl
cltd
push
cmp
fwait
popf
inc
lods
sub
ds
decl
pop
xchg
dec
int
adc
pop
pop
xchg
mov
push
xchg
xor
xchg
gs
cmp
outsb
inc
pop
mov
aam
cwtl
xor
jg
mov
les
ret
pop
xchg
popa
inc
push
sbb
sbbl
es
lods
pop
jmp
xor
subb
pusha
dec
cmp
add
pop
xchg
bound
and
push
ror
mov
xor
mov
and
pop
sub
inc
fidivrl
inc
pop
mov
pop
mov
test
xor
js
xlat
out
rcrl
adc
lcall
test
adc
addr16
cmpsb
pop
in
mov
sub
js
xor
test
jmp
cmp
test
pop
jmp
imul
psadbw
sub
jmp
xchg
js
fstpl
cld
pop
std
xlat
call
nop
mov
and
pop
lods
mov
aam
je
lods
sbb
add
or
adcl
push
out
jo
rcll
or
fdivrl
int
scas
aam
movsl
pop
pop
addl
jnp
jg
and
repz
dec
cmp
jl
pop
cli
popf
insl
into
mov
inc
inc
scas
lods
repz
sub
lahf
jmp
jae
les
es
lret
imul
inc
pop
shrb
and
fcoms
cltd
mull
jae
or
shrb
sbb
and
pop
je
push
imul
out
nop
mov
stos
hlt
jo
fisttps
dec
jl
test
jae
pop
adc
jae
or
dec
popf
xchg
leave
lock
pop
jnp
jmp
filds
icebp
mov
aad
bound
scas
sbbb
jns
jo
cmp
cmp
das
sbb
and
rolb
mov
fiadds
mov
scas
and
out
xchg
sub
iret
cli
out
add
sbb
jbe
push
push
sbb
das
inc
mov
push
jecxz
out
es
push
mov
mov
xchg
shrb
mov
fildl
ds
inc
push
mov
aam
dec
push
jecxz
inc
pop
ja
clc
lock
notl
mov
push
add
sub
xor
ret
jno
pop
pop
clc
jb
push
adc
xchg
pop
aaa
xchg
or
sahf
push
fsts
mov
int3
ss
insl
ss
mov
in
dec
and
mov
lret
jg
test
mov
and
rcrb
xchg
sbb
aaa
add
pop
sbb
or
or
jb
lds
inc
dec
dec
inc
inc
mov
push
mov
push
jg
adc
insb
fiaddl
es
ret
mov
dec
imul
xchg
fdivp
xor
cmc
jge
sbb
xchg
test
push
leave
pop
test
iret
push
mov
sub
cs
jge
push
and
fildl
cli
dec
imul
shl
cmp
repnz
outsl
mov
push
into
ret
cmpsb
fnstcw
mov
enter
pop
outsb
xchg
shrl
test
fildll
sub
pop
dec
jmp
mov
popl
es
jmp
inc
pop
push
out
or
aas
jnp
pop
orb
xor
ja
gs
inc
dec
or
jg
pop
mov
ret
xor
add
lock
cltd
mov
std
fprem1
hlt
fidivrs
or
std
out
lret
cwtl
daa
cs
psllq
es
mov
dec
enter
lods
pop
dec
jge
and
hlt
dec
imul
xchg
in
inc
lahf
sarl
dec
popa
push
fwait
jg
fdivrl
aam
pop
jb
jns
add
test
sub
jbe
mov
test
mov
test
outsl
cmp
stc
dec
imul
hlt
out
xchg
lds
stos
adc
mul
out
or
push
pop
es
jmp
int3
or
push
or
sbb
mov
add
ja
ja
cmpsb
nop
icebp
movsb
adc
cmp
jle
in
aaa
xchg
insb
call
or
sbb
xchg
cmp
sarb
adc
cmpsl
mov
xor
adc
cli
packssdw
cmp
adc
push
popa
nop
sub
sbb
inc
pop
mov
cmp
inc
pop
rcrl
pop
xchg
jae
add
stos
cmp
pop
hlt
push
xchg
sub
xchg
out
inc
xlat
es
xor
fs
adcb
leave
dec
jl
adc
jmp
push
lods
lds
je
adc
add
call
rorl
pop
jmp
and
xchg
in
jg
loopne
ret
xchg
inc
rol
in
in
mov
popf
andb
inc
jno
mov
dec
jg
les
or
shrb
push
je
xchg
mov
pop
orl
xchg
jae
out
dec
fdivrl
mov
push
push
lahf
mov
add
push
ds
inc
xor
push
insl
adc
push
in
stos
and
cwtl
in
cmpsb
push
iret
nop
cmp
call
dec
in
adc
mov
pop
cltd
cwtl
fstpl
add
jge
divb
xchg
outsb
add
lret
out
jno
je
cli
arpl
sub
inc
inc
xchg
sub
sbb
arpl
pop
pusha
outsb
jle
or
or
fildl
adc
or
sbb
pop
inc
jo
pushf
mov
xor
add
or
and
cmp
loopne
or
lock
sbb
inc
xor
les
or
test
mov
jb
jne
pop
dec
sub
cmp
rorl
mov
xor
pushf
ja
mov
or
mov
loope
xchg
or
dec
jge
pop
lahf
push
shll
push
adc
xchg
cmp
test
cld
pop
fnstenv
out
mov
push
mov
inc
adc
cmp
out
inc
loope
fwait
popf
adc
mov
sti
mov
out
inc
and
loopne
sub
jg
repnz
mov
mov
xor
sbb
aaa
imulb
sub
sbb
aas
jae
int3
ds
dec
push
adc
push
dec
cmp
leave
lahf
or
inc
lock
inc
push
sbb
dec
jo
inc
xor
dec
int
ljmp
in
xor
mov
inc
xor
int
sbb
dec
sub
aam
ret
imul
mov
lods
pop
lods
and
out
hlt
jge
icebp
push
shl
or
jne
mov
andl
repz
cli
test
add
clc
sar
out
or
xchg
stos
fadds
adc
xchg
lock
imul
icebp
xlat
fsubl
jg
in
mov
sti
loope
sahf
mov
lcall
out
pop
movsl
inc
cmc
add
dec
fsubs
outsb
cltd
cmp
pop
mov
dec
fdivl
call
sar
mov
dec
mov
popf
lcall
xchg
add
dec
nop
cmc
xchg
xlat
rol
pushf
pop
jp
cmp
and
fidivl
dec
lcall
pop
repz
mov
stos
testb
cmp
mov
xlat
pop
xlat
pop
jne
or
push
sub
aas
and
int3
or
xchg
inc
movsl
mov
or
pop
stc
dec
inc
mov
cmp
popa
push
xor
pushf
arpl
out
int
imul
das
sub
das
subl
and
shll
aad
mov
lea
lock
data16
into
sub
pop
stos
jmp
jp
clc
int3
pusha
out
out
push
mov
and
sub
push
scas
dec
addr16
jl
inc
popa
cmc
ret
dec
inc
adc
jle
fidivl
in
add
lea
adc
movsb
mov
mov
in
nop
inc
jge
push
inc
test
fisubl
loope
mov
cld
stc
xor
cmp
inc
bnd
sbb
xor
int3
call
jae
test
push
pop
lret
iret
mov
stos
dec
xchg
aad
cmpb
lcall
and
cmp
pop
adc
out
mov
add
repnz
les
aad
clc
xchg
jg
stos
inc
shrl
mov
insl
xlat
or
arpl
or
add
ret
fldl
ljmp
inc
sbb
bound
dec
cs
push
sub
pusha
mov
sub
xchg
ret
mov
fcmovb
mov
jno
sahf
jnp
lea
incb
mov
adc
lcall
pinsrw
pusha
sti
inc
xchg
lods
dec
lock
aas
mov
test
out
or
adc
into
lds
cmpl
loopne
jbe
xchg
add
ds
pop
add
lcall
andl
pop
pop
lret
and
mov
push
aad
stos
xor
loopne
in
inc
sbb
push
cs
mov
inc
divl
mov
mov
sbb
shrd
sahf
push
rolb
jecxz
pop
push
or
xchg
mov
mov
mov
cmp
aas
mov
fstpl
cmp
mov
or
jmp
sbb
push
xor
das
and
lods
enter
subb
imul
mov
mov
scas
cmp
dec
ret
mov
les
in
sarl
inc
ds
lcall
mov
enter
pop
push
mov
jle
sub
outsl
cmp
outsl
orb
dec
test
fbstp
out
add
out
sbb
outsl
or
std
ds
and
xchg
push
das
inc
add
rcr
popa
lds
enter
jbe
aad
mov
sbb
lcall
mov
lret
out
add
aas
jb
mov
repnz
xchg
pushf
shll
pop
int
fcomps
xchg
mov
pop
repnz
mov
inc
jge
mov
imul
sbb
jecxz
pushaw
aaa
mov
mov
test
imul
fisttps
loopne
cltd
repnz
aam
clc
into
cmp
daa
cmp
movsl
jmp
ja
sbb
cmpb
inc
jp
inc
xor
das
lods
pop
std
mov
push
cmp
inc
adc
pop
and
cmp
and
cmp
icebp
pop
sar
loop
jle,pn
pop
sbbb
and
in
lods
in
xor
iret
leave
push
iret
ja
fimuls
pusha
add
jmp
lock
inc
adc
inc
sbbl
dec
adc
repz
mov
enter
imul
dec
xor
fists
lea
out
dec
ss
mov
ljmp
out
mov
cmc
cs
in
add
xor
movsl
aas
lret
cmc
jge
mov
stos
push
mov
or
pop
stos
xchg
dec
ds
loop
or
std
inc
lock
sahf
hlt
pop
pushl
or
mov
pop
popa
dec
xchg
jmp
shr
jp
cmc
testb
mov
test
push
or
icebp
daa
sbb
mov
pop
mov
ror
push
cmp
and
rcrl
dec
mov
xchg
or
leave
push
xchg
jmp
iret
push
das
jmp
test
mov
xchg
lock
in
pop
and
out
test
outsl
lock
xlat
jmp
inc
inc
pop
fcoms
addb
enter
push
push
mov
lahf
mov
imul
mov
fstpt
xchg
lea
push
add
push
cltd
and
xchg
pusha
lods
arpl
xor
jmp
test
jmp
call
push
dec
in
dec
jle
adc
mov
mov
mov
push
jo
cmpsl
push
jns
das
mov
inc
push
lret
push
jecxz
lcall
adc
dec
sarl
mov
ret
pop
cmpsl
popa
and
pop
xor
icebp
outsb
sub
and
pcmpeqw
mov
fld1
jns
les
aas
sub
pop
aas
dec
into
mov
mov
mov
mov
cmp
inc
lcall
or
dec
inc
nop
jecxz
and
dec
dec
testl
ss
leave
mov
mov
adc
cmpsl
pusha
dec
hlt
repz
add
out
fcompl
hlt
arpl
add
or
sbb
lret
jnp
je
not
aas
jo
out
cmp
lea
xor
and
test
mov
pushf
int3
addb
in
push
sarb
lahf
je
dec
arpl
sti
xchg
aaa
clc
fwait
cmc
test
inc
rcr
xchg
fcmovu
or
sbb
das
sub
mov
xor
mov
lahf
lret
fdivl
sbb
notl
movsl
es
cmc
in
jb
subb
je
sbb
inc
jecxz
xchg
inc
cmp
out
jmp
inc
sbb
and
aam
mov
sub
xchg
ret
cli
and
xchg
pop
fdivrl
jmp
fdivl
in
insb
aaa
gs
repz
xor
mov
mov
pop
cltd
sub
cmp
pop
xor
or
fisttpll
insl
push
mov
adc
scas
ss
xchg
setns
ds
pop
fistps
popa
add
jne
xchg
xchg
mov
test
mov
loop
in
ja
lock
mov
jb
dec
jbe
mov
fcomps
and
adc
push
and
lahf
daa
adc
mov
imul
repnz
dec
repz
adc
mov
mov
movsb
xchg
cmp
aad
sub
loope
iret
jno
inc
loop
xchg
or
addl
dec
jp
jle
test
popa
data16
sbb
jne
les
test
push
add
fdivl
push
scas
mov
movsl
test
in
mov
xchg
lds
adc
fucomi
mov
mov
cwtl
push
cmp
dec
ret
mov
fwait
cmp
adc
push
push
lret
out
or
lea
fbstp
dec
add
dec
xchg
cltd
inc
jbe
xchg
subl
xorl
jle
aad
addl
add
loope
sbb
sub
stc
pop
adc
mov
test
mov
push
hlt
shrl
daa
ljmp
sbb
push
mov
ret
jae
rorb
nop
sub
cmp
loope
iret
lods
clc
fcomp
dec
lea
fildl
inc
je
cmovne
popa
ljmp
xor
js
lock
into
dec
mov
cmc
inc
adc
out
loop
scas
iret
repz
jo
push
je
mov
inc
push
push
jbe
xor
xor
add
aad
in
fiaddl
out
mov
adc
dec
daa
mov
popa
arpl
sahf
pushf
pop
mov
mov
in
inc
sbb
les
ds
pop
scas
and
mov
lods
cmp
out
cwtl
mov
js
mov
stos
scas
inc
imul
cmc
sti
mov
push
sub
and
repz
enter
xchg
push
mov
lret
pushf
nop
pushf
jg
inc
mov
sbb
xor
xor
mov
lods
sub
test
xchg
pop
imul
mov
scas
inc
data16
stc
les
in
dec
xor
push
pop
fdivrl
sbbb
data16
ret
push
mov
dec
cltd
cmp
xor
lcall
inc
push
mov
mov
cmp
outsl
jle
mov
xchg
mov
xchg
add
into
pop
into
js
fbstp
pusha
in
sub
in
adc
push
mov
sbb
arpl
dec
movsl
scas
xchg
sbb
lret
sub
out
pop
xchg
pop
in
sub
dec
fs
ret
movsl
jbe
cli
xchg
fucomp
shrl
or
fwait
xor
clc
push
sub
push
insb
or
sub
jno
test
ljmp
inc
dec
cmpsl
mov
adc
je
mov
sub
out
mov
and
jp
outsb
les
pop
mov
insb
stc
cwtl
sarb
mov
rcl
adc
and
sub
adc
test
std
call
int3
hlt
sbb
jmp
icebp
insb
test
repz
jmp
cmp
aad
or
sub
add
aad
fcmovne
stos
inc
shl
inc
aaa
enter
stos
cmpsl
push
cmpl
xchg
push
jb
xchg
xchg
add
dec
inc
jns
sub
sub
jle
out
das
int
dec
mov
or
mov
in
pop
or
jo
mov
xchg
fs
imul
sub
inc
xchg
mov
sbb
rorb
and
sub
jo
add
stos
mov
loopne
and
pop
push
push
mov
mov
jl
inc
sub
inc
sbb
fistl
jnp
sti
idivl
xchg
mov
sbb
add
mov
sbb
fstp
mov
adc
call
into
xlat
dec
add
call
mov
dec
inc
test
mov
and
push
je
jp
popa
jns
shr
rolb
arpl
inc
popf
fs
mov
int3
call
fwait
jl
add
jge
push
push
dec
mov
push
enter
lahf
out
js
and
nop
sub
repnz
push
arpl
pop
sbb
jg
fcoml
fnsave
push
stc
sub
bound
fsubrs
mov
xor
sub
mov
inc
fsubrp
xor
imul
jae
mov
add
out
movsb
pusha
mov
push
mov
daa
cmp
and
add
mov
hlt
xorb
notb
adc
mov
pop
sub
dec
dec
xor
cwtl
sub
adc
mov
xchg
leave
mov
ljmp
sub
sahf
popa
inc
test
or
jnp
and
stc
es
mov
nop
aas
jp
out
cmp
outsl
sbb
push
sbb
push
xor
push
aam
lds
dec
popa
ret
pop
cs
repz
and
and
clc
shll
jo
sbb
adc
inc
cmp
shr
int3
daa
imul
mov
negl
lods
or
outsl
sub
push
lahf
mov
add
sarl
adc
jne
pop
jg
add
notb
add
inc
popa
push
icebp
inc
shr
inc
lcall
negl
inc
push
and
repnz
pop
outsb
mov
lock
notb
and
push
adc
pusha
and
jns
mov
outsl
out
or
loop
cmp
or
pushf
loopne
out
fstl
jle
sub
xor
lock
movsl
adc
orl
lret
sbb
loop
mov
call
hlt
inc
sub
bound
out
inc
xor
mov
xor
sub
mov
xchg
inc
pushf
add
push
jge
lock
lods
es
mov
mov
shr
pop
jnp
jl
cmc
jge
xlat
pop
mov
xchg
inc
popa
es
adc
negb
test
popf
jb
xor
add
aaa
fnstenv
inc
mov
rcl
cmp
add
jno
leave
fs
stc
lea
or
repnz
push
cvtps2pi
sbb
pop
ja
push
and
xlat
cmpsl
sbb
test
dec
xchg
jmp
nop
mov
sti
lods
lock
dec
dec
sarb
out
testb
insb
inc
cld
outsb
daa
mov
dec
sub
fisttpl
pop
out
pushf
insl
add
mov
push
fldln2
and
jl
pusha
insb
lret
daa
lods
in
xlat
mov
fwait
jne
addl
scas
or
jp
add
call
sbb
add
or
push
or
push
test
xor
xlat
push
insb
mov
aaa
jmp
ret
addr16
mov
mov
or
pop
xchg
leave
test
int3
into
or
pop
sbb
call
adcl
and
incb
xchg
xchg
fsubrs
jg
push
mov
pushf
hlt
leave
cli
sbb
dec
test
mov
xchg
sbbl
xchg
and
lret
adc
mov
enter
adc
sbb
sbb
pushf
into
and
sub
cmp
sbb
xchg
not
sub
cld
and
dec
rcl
int
imul
and
out
add
das
and
pushf
rol
fstl
outsl
add
jg
cmp
data16
mov
test
mov
push
cmp
clc
je
push
sub
lods
sub
dec
call
nop
popf
pop
jecxz
scas
gs
in
hlt
aam
inc
or
out
sub
pop
xchg
add
mov
xchg
stos
jno
jnp
xchg
xor
stc
pop
into
or
fistl
js
filds
lret
addr16
scas
sbb
mov
rolb
sub
mov
fcoms
and
jb
mov
xor
sub
jbe
es
mov
sub
cmp
sub
cwtl
add
outsl
popf
idiv
jg
lcall
out
iret
push
dec
cmp
pop
popa
repnz
stc
addr16
xchg
sub
daa
roll
adc
lret
push
mov
dec
add
scas
dec
mov
cli
sti
or
scas
cmp
cmp
jle
int
xor
jo
int3
movsl
xchg
cmp
dec
movsb
test
lahf
pop
dec
jo
mov
push
shrb
ljmp
daa
sarb
daa
cld
aam
xchg
leave
or
cmp
push
fistpll
lcall
push
into
das
ds
add
mov
and
ror
mov
xchg
add
lods
bound
clc
scas
inc
jp
les
and
xchg
in
mov
push
sbb
in
lahf
pop
fs
sarl
je
mov
sub
xorb
lds
subb
xor
cli
or
std
push
pop
xchg
cmp
fiaddl
icebp
sub
lea
lcall
or
in
or
ficompl
ds
fmuls
jnp
test
sub
out
imul
add
cmp
orl
inc
xor
push
xorb
or
arpl
xchg
ljmp
inc
imul
mov
loope
mov
cmc
cmp
ss
push
and
push
cwtl
cmc
mov
popa
imul
cvtpi2ps
lea
xor
add
call
clc
int
adc
pop
repz
jno
xchg
pop
pop
fisubs
push
fisttpl
subb
inc
xor
popf
out
inc
roll
cmp
adc
sbb
pop
out
in
push
mov
dec
ret
popf
out
sub
cmc
pusha
sti
daa
inc
es
adc
jns
out
and
and
test
jmp
mov
negl
rcr
dec
enter
or
and
or
inc
ret
add
rcll
test
xlat
lahf
pop
dec
mov
pop
cmp
fsubl
xchg
stc
jecxz
pushf
and
orl
je
inc
jl
ret
push
push
in
and
xchg
pop
mov
mov
cmp
lcall
jp
sub
cmp
lods
push
stos
enter
insl
mov
cs
mov
ds
rolb
adc
clc
cmp
aad
es
mov
imul
movsl
mov
outsl
mov
lret
cmc
and
lock
aas
inc
mov
out
call
cltd
xchg
shl
outsb
ja
subl
cmp
mov
push
aaa
adc
stc
nop
es
xor
xor
sbb
aas
daa
push
xchg
and
fs
push
test
inc
jmp
push
add
add
lahf
and
jno
mov
push
jmp
inc
jne
push
or
test
sbb
mov
lods
inc
mov
fdivrl
sbb
mov
push
movsl
cmp
ss
xor
loopne
fiadds
mov
adc
mov
mov
inc
lock
mov
js,pt
pop
sahf
leave
mov
cltd
push
push
test
fdivrl
int
in
xor
sbb
mov
jmp
repnz
push
cmp
ficompl
mov
mov
push
cmpb
subb
std
dec
stos
cmp
gs
mov
mov
sti
add
mov
jae
jns,pt
jnp
cld
popa
cs
ja
cmpsl
filds
sbb
sub
outsl
dec
xchg
mov
push
cmp
loopne
lcall
mov
push
or
idivb
sahf
insb
insl
lret
jae
lret
clc
les
mov
cmp
cmp
add
addr16
lock
shlb
push
add
aad
cli
cmpsb
xor
std
sub
ror
dec
mov
sbb
inc
push
pusha
fcoml
add
shlb
outsl
mov
sub
cmp
xor
icebp
push
decl
push
cli
int3
into
pop
add
mov
mov
fistpll
popa
inc
push
dec
xorl
adc
push
jne
jmp
popa
jnp
mov
xchg
sarb
orl
jle
sbb
loope
in
mov
ljmp
pop
jo
push
mov
sbb
sarb
gs
test
fcompl
xor
sub
mov
outsb
arpl
data16
xchg
jno
sbb
in
cmc
insb
sbb
mov
retw
hlt
sub
inc
mov
insb
inc
xor
add
xor
xor
dec
dec
dec
push
or
outsb
loopne
cmp
sub
cmpb
lds
fs
mov
or
repnz
pop
adc
cmp
or
cltd
lods
and
lahf
mov
push
adc
and
add
dec
mov
inc
lods
fldt
lret
adc
xorb
js
dec
inc
iret
mov
mov
frstpm(287
jbe
adc
jmp
jecxz
popf
cmpsb
mov
mov
push
imul
cmpsl
and
inc
mov
sbb
inc
mov
loopne
scas
xchg
fidivrl
jns
inc
xor
movsl
pushf
in
cld
outsl
xchg
sbb
xchg
in
addr16
push
ja
cwtl
lods
push
inc
xor
fsub
mov
mov
jp
or
mov
fsubl
outsl
mov
bnd
lds
mov
cmc
loop
mov
int3
mov
push
cmc
sub
jns
jbe
roll
lods
cmp
cmc
sub
insb
push
mov
clc
xor
pop
inc
sub
lret
test
xchg
xchg
jg
sub
push
shll
idivl
mov
xchg
jns
mov
push
pop
sahf
mov
adc
push
push
pop
pop
jle
cmc
adc
xchg
andb
js
or
adc
or
nop
adc
pop
rcr
shll
and
and
das
inc
mov
xlat
call
fcom
pop
sbb
sbb
test
dec
cmp
in
jecxz
mov
adc
or
mov
pop
sbb
outsb
ret
scas
pushf
jnp
lock
daa
sbb
rolb
enter
xchg
insb
test
cwtl
inc
or
scas
jp
in
popa
outsl
pop
imul
out
mov
jne
enter
mov
adc
push
mov
jge
mov
in
inc
in
xchg
mov
jge
cwtl
lock
adc
push
jb
sbb
mov
popf
lds
pop
insl
in
inc
nop/reserved
aaa
mov
mov
dec
repnz
mov
je
mov
xchg
ss
jmp
mov
add
and
push
mov
dec
pushf
into
das
push
lret
mov
inc
iret
dec
aam
jp
hlt
adc
inc
stos
in
sbb
or
into
push
jg
dec
xchg
add
out
mov
inc
decl
jle
movsb
mov
sbb
cmp
ds
sub
test
add
add
adc
sub
mov
insb
hlt
pop
out
or
lea
mov
and
or
incb
mov
sub
sti
aaa
sahf
push
fimuls
fisttpll
mov
ror
int3
xor
es
xchg
xchg
mov
xchg
xor
adc
fwait
sbb
sbb
dec
push
mov
ljmp
jecxz
into
add
je
add
xor
cli
fcom
xorl
inc
inc
repz
mov
loopne
das
push
xchg
or
jg
lcall
nop
mov
aam
mov
mov
cmp
out
clc
js
mov
scas
fs
mov
sbb
ja
repnz
jp
cmpsl
bound
push
outsl
call
sbb
std
or
mov
xor
das
lahf
ficomps
inc
mov
inc
daa
scas
push
dec
or
sub
into
pop
add
mov
inc
arpl
fisubrs
jge
sti
subl
adc
sub
and
inc
jle
xor
addb
xchg
mov
js
aad
and
cmpl
push
xchg
sarl
stc
mov
fisubrl
lcall
imul
pushf
pusha
cmp
decl
sub
in
outsl
sahf
fstpl
and
mov
lcall
cld
lock
out
lahf
test
jnp
out
sahf
mov
fadds
sar
dec
lea
jecxz
addr16
rcll
mov
xchg
std
cmp
test
adc
inc
jecxz
stc
outsb
cltd
push
jp
imul
pop
es
or
setle
out
out
jp
bound
or
fwait
lahf
xchg
dec
out
cmpsl
mov
and
lea
sbb
pop
sbb
mov
aaa
sbb
adc
sbb
mov
lret
mov
mov
adc
popw
xchg
sbb
loopne
push
movl
loope
add
push
or
jg
cmc
dec
or
repz
popa
aas
sub
and
and
mov
and
int3
mov
ret
add
dec
sub
push
jnp
sar
loopne
or
push
mov
mov
aas
sbb
xchg
xor
cmp
push
dec
loop
in
xchg
mov
ret
pop
ds
mov
loope
pop
xchg
int3
repnz
push
push
loop
pop
push
sahf
stc
pop
sub
xor
xchg
fs
adc
sbb
mov
or
scas
jmp
xchg
xor
dec
cmp
test
sub
jmp
jl
dec
dec
test
mov
scas
dec
ljmp
fcomps
add
push
mov
lods
popa
aad
aad
std
enter
arpl
call
mov
loopne
adc
adc
cltd
es
inc
or
mov
test
mov
cmpsl
mov
lcall
jge
jmp
cmpl
cs
sub
pop
imul
mov
cmp
cmpsb
inc
mov
lds
push
in
jae
loopne
dec
dec
mov
push
rolb
in
mov
or
fwait
add
and
outsl
out
pop
pop
jnp
enter
inc
cltd
xchg
jl
out
test
cmc
sub
iret
gs
lea
cmp
movsb
int
jp
or
xor
icebp
add
dec
sub
adc
inc
int3
sub
fsubr
jno
sub
aas
pop
fcmovbe
arpl
inc
pop
mov
push
aad
mov
lock
inc
dec
mov
xorb
icebp
add
mov
inc
mov
cmp
pop
test
pop
imulb
std
sbbb
out
popf
lea
fucom
mov
jge
lret
fildll
mov
jg
adc
jne
ljmp
js
es
push
outsb
sahf
pop
or
ret
mov
in
imul
pop
push
mov
sbb
popa
mov
sub
mov
and
and
jp
xor
incb
push
lret
mull
lods
jbe
jb
cli
iret
add
loop
sbb
lea
lds
out
sub
add
xor
js
sahf
push
push
cmp
xchg
xor
movb
insb
daa
mov
xchg
push
aam
push
ficoml
movsb
sbb
and
sahf
cltd
cmp
jp
pop
and
scas
scas
jmp
sub
iret
arpl
cs
pop
xor
leave
dec
ja
cmp
ljmp
sub
pop
push
xchg
loope
xor
arpl
popa
adc
lods
les
stos
mov
lods
mov
inc
insl
movsl
into
ud0
push
sbb
shll
stc
sub
sbb
or
stos
into
sbb
scas
ljmp
fbstp
fdivrs
popf
dec
shl
lods
sub
or
push
cli
fnstsw
or
add
outsb
nop
das
sub
iret
inc
js
in
sbb
aam
cmpl
fsubs
ss
and
xchg
fs
jno
inc
lds
and
cmp
push
cwtl
dec
inc
mov
dec
js
insl
fadd
jl
das
mov
loopne
mov
call
xchg
mov
js
mov
pop
push
xchg
mov
cli
dec
mov
xchg
fmuls
stc
xchg
psubb
rclb
enter
mov
mov
das
xlat
pop
push
sbb
movl
outsl
addl
js
sarb
pop
enter
je
mov
push
xchg
fdivr
mov
and
bound
wbinvd
dec
or
pop
xor
test
loop
jg
repz
dec
pop
test
mov
push
cli
jg
gs
mov
or
fbld
cmp
and
pop
aaa
ficoml
xlat
adc
ds
dec
push
pop
sub
subb
xchg
push
arpl
mov
push
jae
push
pusha
sbbb
hlt
icebp
add
jbe
pop
xor
pop
mov
add
jge
mov
add
dec
les
inc
cmp
loop
jmp
cmc
subb
adc
fsubl
or
jle
sbb
xor
pop
das
nop
inc
dec
mov
lods
pop
sahf
and
cld
fcmovu
dec
aas
sub
and
loopne
cmp
push
and
into
jle
sub
mov
cmpl
aaa
movsb
inc
push
add
lcall
std
imull
nop
fucomi
fstl
cmp
jo
sbb
insb
sub
test
test
push
push
mov
int3
in
loop
leave
mov
call
ffreep
push
mov
sub
mov
xor
push
fwait
test
iret
popa
icebp
test
notl
dec
jg
cmp
test
stos
sbb
paddusw
gs
scas
fdivs
and
mov
jno
fildll
adc
jg
inc
test
mov
sub
shll
push
je
orb
ss
lods
lret
sbb
addr16
adc
ret
shll
bound
mov
mov
jns
hlt
idivb
push
repnz
ret
stos
hlt
es
sbb
ja
xchg
sbb
es
test
mov
push
nop
jo
stos
stc
mov
lcall
sub
pushl
add
xor
bound
and
pop
lea
jle
arpl
mov
jae
pop
pop
ss
fs
out
lahf
mov
scas
jnp
push
mov
or
add
sbb
inc
divb
push
mov
stos
pushf
ja
jne
push
pusha
insb
outsl
std
add
iret
xchg
ret
mov
xchg
loop
jl
das
call
imull
sub
out
or
test
sub
addr16
hlt
leave
xchg
test
leave
fcoml
popf
or
loop
jmp
movsb
shlb
push
pop
data16
int3
sub
cld
push
test
xor
xchg
or
mov
je
js
jge
adc
push
outsb
movsb
push
inc
and
push
mov
daa
faddl
pop
pop
lock
movsl
mov
lods
les
jb
push
rcrl
adc
lcall
or
arpl
or
fcomps
or
add
mov
xchg
nop
and
sbb
ja
sti
xchg
add
mov
cmp
repnz
addr16
sub
jo
stos
add
mov
fs
shrl
push
test
out
cmp
and
or
pushf
pushl
dec
cs
sbb
xor
sbb
add
cmp
dec
cld
into
sub
jnp
xchg
push
mov
or
xlat
lret
negb
repnz
sub
iret
pop
lods
add
and
cltd
inc
add
out
xchg
ss
outsl
xchg
push
mov
ficompl
lret
jb
fcoms
mov
shll
dec
mov
ret
sub
pop
pop
mov
mov
lods
xor
pop
dec
xchg
in
stc
sahf
aam
fsubrl
leave
sbb
popf
inc
jo
test
flds
mov
lret
mov
stos
cltd
mov
push
xchg
std
push
sbb
pop
es
sbb
inc
xchg
stos
cmpb
adc
fdivrl
push
scas
out
shlb
pushf
imul
cs
xchg
roll
test
add
cmp
cmp
push
das
rcll
scas
xor
push
cwtl
xor
shrl
ficoml
mov
hlt
fsub
fistpl
add
cwtl
sub
repz
push
icebp
or
stos
inc
cltd
mov
aas
into
fnstcw
faddl
push
xor
out
lds
popa
outsl
adc
popf
xlat
adc
lcall
xor
ja
sub
insl
xor
xchg
imul
mov
orl
mov
cmc
xchg
sub
mov
fnstsw
out
dec
mov
inc
shrb
addr16
mov
shr
repnz
and
enter
sarl
int
jp
movsb
js
iret
jns
jl
inc
outsb
das
sub
jp
pop
mov
push
mov
pop
test
fmull
pmulhuw
cmpsb
xchg
mov
dec
pushf
lcall
mov
aas
cld
iret
mov
or
shrl
mov
in
mov
dec
dec
sub
and
inc
pop
lds
mov
push
insl
cwtl
mov
imul
pop
les
das
xlat
sbb
bound
sbb
lret
pushf
faddl
cmp
rcll
test
mov
push
jge
orl
jno
sbb
fcoml
push
jp
adc
mov
aaa
xchg
imul
enter
shrb
mov
xchg
mov
sbb
or
xchg
int
les
les
aad
loopne
call
sbb
adc
dec
std
xor
rep
hlt
pop
mov
lahf
sbb
push
jo
dec
icebp
cmc
add
lahf
dec
push
sub
das
pushf
or
or
jle
xchg
mov
sti
mov
sub
movsb
xchg
push
jg
out
push
dec
sar
and
jnp
fdiv
clc
mov
adc
dec
lods
xchg
xor
test
jae
int3
push
sbb
xchg
push
push
dec
stc
lds
mov
lods
pop
pop
sub
push
inc
data16
add
ljmp
mov
bnd
and
ret
stc
mov
mov
test
stc
mov
add
sar
aad
xor
mov
jbe
adc
push
sbb
mov
sbb
cli
jo
dec
insb
andl
cmp
pandn
pop
lock
mov
scas
ret
stc
push
addr16
adc
push
lret
jno
sar
mov
imul
mov
aaa
sbb
and
iret
enter
fisttps
jno
push
pop
or
insl
xor
stos
das
gs
pop
inc
xchg
sbb
push
cmp
out
xor
je
add
inc
mov
push
repnz
push
add
mov
mov
fistpl
xchg
or
pop
push
pop
jne
sbb
sub
cmpsb
dec
mulb
or
cmp
jle
call
orb
dec
cltd
inc
repnz
and
inc
pop
pop
cmc
aas
push
jae
mov
pop
sbb
jb
insl
mov
dec
aaa
jnp
je
sbb
les
daa
and
jno
mov
daa
mov
pop
jmp
pop
mov
call
add
cmp
pop
xchg
pusha
mov
xor
je
popa
in
and
arpl
jbe
sub
cmp
and
mov
add
cli
orl
and
and
sbb
loopne
add
mov
sub
mov
stc
stc
mov
subl
jns
push
xchg
dec
sarl
lcall
adc
mov
enter
stos
push
inc
adc
cmp
fildl
mov
aaa
aas
inc
dec
orl
xor
loop
add
cwtl
pop
cli
sbb
out
dec
cmp
scas
jae
lret
sbb
jmp
sub
imul
negl
pop
push
push
jbe
jae
adc
jmp
add
lret
and
les
mov
nop
mov
nop
mov
cld
sbb
mov
mov
pop
add
xor
mov
xchg
mov
les
xor
cltd
mov
xchg
dec
push
fidivrs
or
add
sub
sbb
out
push
sub
xlat
dec
mov
add
mov
mov
sbb
sti
pop
std
lcall
and
rcrb
repz
jnp
pop
sbb
mov
xchg
mov
jne
mov
pusha
pop
stc
and
cltd
int3
mov
popf
int
pop
les
sub
pop
push
jae
jp
fmull
sbb
jp
sahf
push
mov
sbb
insb
mov
mov
mov
aad
mov
inc
test
sub
jae
sbb
imul
sbb
mov
jl
cmp
arpl
push
frstor
mov
mov
rol
test
test
cltd
sub
lcall
std
fisttpl
mov
add
lret
add
sbb
pop
xor
xchg
and
iret
fisubl
fstpt
add
nop
roll
pop
arpl
out
mov
add
out
mov
in
cli
pushf
sbb
mov
xabort
rcll
sub
jl
int
cmc
cmp
cmc
ficompl
push
add
jae
in
loopne
shr
loope
jno
mov
xchg
and
adc
lods
mov
inc
push
jp
adc
cmp
cmp
lods
xor
push
in
ja
lret
mov
test
mov
fcmove
cmp
mov
and
inc
or
push
movsl
add
test
unpckhps
or
aad
mov
imul
iret
icebp
push
movsl
iret
sub
jge
insb
cmc
mov
sub
or
pop
mov
mov
in
lods
out
je
push
test
cmp
int
sbb
pop
lcall
loope
rcrl
mov
bound
cmp
in
aaa
adc
mov
and
dec
out
or
pop
dec
sub
mov
addr16
mov
out
fmuls
cmpsb
adc
ret
xchg
mov
mov
xor
cmp
sbb
loopne
jg
movsb
dec
ljmp
roll
jmp
mov
insb
in
dec
fs
or
jg
mov
mov
pop
fdivl
popf
inc
and
aas
mov
gs
pop
pop
dec
dec
dec
cmc
jecxz
cmc
fistps
cltd
daa
loopne
xor
mov
repnz
or
outsb
hlt
popf
pop
inc
mov
inc
or
inc
repz
xchg
sbb
inc
push
inc
cmpl
lret
or
mov
xchg
in
mov
sub
stos
cmp
icebp
aas
aas
imul
into
enter
cwtl
sbb
jb
inc
leave
cmp
inc
gs
push
cld
insl
fmuls
aam
gs
gs
jae
mov
sbb
inc
mov
xchg
clc
sub
ret
movsb
test
sbb
cli
lret
jno
sbb
or
fisubrl
add
or
test
cmpsl
dec
sbb
daa
and
repnz
cltd
jl
pop
adc
inc
decb
mov
mov
sbbl
test
mov
movsb
mov
cmp
aam
push
lcall
js
bound
inc
fldenv
or
out
cmc
mov
popf
xchg
insl
stos
mov
sub
mov
aaa
lret
cmp
addr16
testl
fs
filds
push
in
mov
xor
adc
dec
fistps
jle
lods
pop
jns
popa
insl
rcll
jle
js
dec
mov
loope
movsl
xchg
sub
sbb
test
test
aam
lret
loop
push
arpl
pusha
addl
push
movsb
es
mov
loopne
icebp
jae
ljmp
mov
decb
test
aas
sti
adc
sbb
and
arpl
imul
into
imul
lahf
je
mov
and
xchg
or
movsl
add
push
popa
adc
sub
fbstp
adc
push
and
mov
xlat
lds
clc
cmp
push
adc
add
test
mov
cmpsl
enter
jp
js
mov
sub
rcl
sbb
lds
sbb
jl
mov
fistpl
push
fistpl
lret
pop
int3
xchg
iret
leave
ljmp
dec
subb
cmp
pop
and
mov
in
mov
lcall
test
mov
shrl
stc
xor
jnp
jl
mov
mov
insl
js
sub
mov
mov
push
jnp
lods
fdivrs
das
shrb
push
int
or
jle
adc
jae
add
popa
sub
xchg
xor
pop
adc
mov
das
dec
cmpsl
in
lret
and
dec
push
cs
fwait
adc
pop
mov
fdivl
mov
mov
mov
mov
adc
fadd
outsb
ljmp
sub
js
dec
jae
test
lock
mov
cmpsb
jb
adc
fs
push
sub
mov
dec
mov
or
sub
in
ret
sti
mov
dec
jmp
pusha
push
sub
arpl
mov
or
jbe
xor
subb
inc
push
in
dec
jle
mov
pop
movsb
push
cmp
sub
js
mov
popf
sub
ffree
dec
pop
imul
push
inc
xchg
aam
insb
dec
loop
pusha
inc
dec
or
lahf
cmp
sti
and
push
lret
js
pop
repnz
push
xor
cmp
adc
xchg
add
adc
lods
sahf
loop
fnstsw
pop
inc
shlb
or
mov
in
popf
jecxz
mov
dec
xor
jmp
sar
lea
filds
or
hlt
pusha
orl
daa
mov
sarl
data16
pop
xchg
imul
push
dec
scas
pusha
ss
into
pop
push
mov
rorb
sbb
mov
cli
dec
xchg
sub
push
mov
mov
lods
mov
push
and
mov
cmpb
in
add
imul
in
lock
pop
mov
fdivrs
in
sub
pop
in
push
stos
dec
mov
movsl
or
aad
sub
mov
add
inc
outsb
sbb
mov
xor
mov
xchg
mov
lcall
cmp
std
push
call
outsl
push
loope
mov
mov
in
pusha
xchg
lods
cmp
or
and
sbb
aad
mov
xchg
pop
mov
loop
cmp
mov
dec
ss
cmp
addr16
sub
lcall
or
xor
cli
push
jg
sub
mov
mov
mov
subb
mov
movb
mov
orl
dec
enter
mov
dec
pusha
mov
pop
xor
mov
dec
loope
xor
push
adc
mov
int3
mov
cmc
cmp
dec
sbb
outsl
test
faddl
mov
jb
movsl
xchg
dec
pusha
xchg
fchs
sbb
mov
lcall
mov
icebp
add
inc
xchg
pop
sub
frstpm(287
js
dec
addb
lods
enter
mov
or
jne
jo
insb
pop
adc
sbb
dec
mov
enter
add
in
and
dec
dec
inc
fisubs
pop
push
stos
prefetch
mov
cmpsb
cmp
jecxz
jns
dec
add
call
in
loop
fcoms
arpl
faddp
nop
push
mov
or
pushf
pop
ljmp
cltd
or
dec
push
adc
or
xchg
or
xor
jg
mov
icebp
leave
dec
or
movsb
aaa
or
mov
xchg
imul
imul
or
jbe
xor
pcmpgtb
adc
cmp
out
sbbl
repnz
imul
xor
lock
pop
dec
mov
and
ljmp
fistpl
push
rol
test
fcomi
mov
jnp
push
or
fstpl
into
jmp
std
aas
ficomps
add
cmc
cmpsl
dec
jg
jns
adc
bnd
mov
cmp
inc
pop
cs
xlat
and
xchg
adc
aaa
es
mov
add
add
xor
push
andb
sub
adc
call
sbb
scas
loopne
out
cmp
pusha
add
scas
inc
sub
pusha
push
popf
test
pusha
fnstsw
imul
lods
int3
jae
xor
fsts
mov
lods
cmp
and
dec
jb
std
lods
add
or
push
in
das
add
in
pop
add
jmp
daa
xorb
dec
bound
cmc
fwait
adc
movsl
cmp
imul
not
repnz
inc
xchg
rclb
cmpsl
fiaddl
adcl
cmp
mov
xchg
hlt
fidivrl
cmp
cmp
lea
pop
xor
cmp
rclb
les
pop
dec
roll
adc
pop
mov
leave
adc
mov
unpcklps
cmp
pop
or
cmpsl
or
fnstsw
int
sbb
and
mov
outsb
adc
cli
xchg
dec
mov
push
mov
fwait
pop
stos
addb
mov
dec
leave
lods
out
push
push
mov
and
fucomp
and
dec
iret
pop
call
sbb
popa
inc
sbb
mov
out
mov
xlat
sbb
out
mov
aad
mov
rep
in
cmp
pop
mov
sbb
scas
fmull
aas
xor
push
jmp
sbb
mov
xor
pop
sbb
inc
dec
sbb
and
fistps
jns
inc
mov
stc
adcl
std
lfs
jb
mov
ret
fdivs
jmp
insb
or
mov
fsub
xor
rcrb
cltd
sbb
or
and
and
mov
data16
pop
ljmp
pop
or
xchg
rcl
pushf
adc
and
push
mov
xchg
sub
jp
in
jecxz
and
mov
icebp
mov
rclb
fisubrl
shlb
outsl
pop
lods
sub
pop
mov
add
push
dec
shll
dec
mov
ljmp
in
gs
es
push
cmp
pop
cmp
call
push
sub
xchg
add
add
daa
lods
mov
out
mov
sahf
call
xlat
dec
pop
aam
lret
push
inc
out
popa
jmp
xor
push
xorl
adc
add
dec
ljmp
mov
mov
sahf
pop
or
jmp
es
mov
pop
inc
cwtl
pop
or
in
test
and
jecxz
int
adc
scas
stc
sarb
lret
jns
sahf
lret
pop
add
cld
fs
flds
add
dec
mov
push
jle
sbb
sub
in
and
test
push
pop
bnd
clc
in
push
insb
sbb
jns
lods
xchg
out
lods
mov
pop
or
jne
mov
or
shlb
fs
stos
dec
dec
decl
sub
xchg
mov
sub
clc
dec
pop
popa
jmp
test
cmp
jns
in
imul
mov
add
out
test
das
ret
rol
scas
rorb
pushf
std
cmpsl
push
mov
pop
jns
jae
int
not
jl
mov
fildl
sbb
dec
dec
add
bound
xchg
pop
lcall
sub
js
es
sub
xlat
seta
mov
lock
pusha
in
sti
lret
xlat
cmpsl
add
cmp
mov
arpl
add
push
cltd
dec
dec
sbb
sbb
lret
iret
xchg
rcrb
and
cli
testb
mov
movsb
lods
or
mov
pop
gs
xor
or
lock
mov
lods
bound
adc
xchg
mov
movsb
pop
push
cmpsl
fistps
int3
mov
jbe
xor
xchg
mov
push
loop
lock
mov
cmp
pop
xchg
jl
cwtl
or
pcmpeqd
int3
adc
jg
cmp
or
mov
rolb
nop
jge
shll
or
add
xchg
pop
pushf
test
lret
icebp
repnz
and
or
into
cmp
test
mov
icebp
lcall
pop
pusha
mov
shr
push
pop
mov
icebp
int3
sbb
ds
std
lock
out
sbb
push
dec
cmp
push
push
iret
ret
push
cmpsl
push
adc
xchg
pop
hlt
shrb
xor
pushf
lea
in
mov
inc
stos
or
push
lret
fdivp
adc
sbb
or
ret
sahf
mov
or
mov
inc
cmp
arpl
popa
fisubrs
in
arpl
cwtl
out
data16
lret
in
cmp
push
data16
push
xchg
mov
frstor
push
dec
jg
jmp
pop
out
adc
mov
push
push
sub
insb
sti
loop
test
iret
xchg
iret
adc
addr16
dec
mov
pop
sbb
mulb
addr16
lret
les
sbb
fists
test
fisttps
fiadds
xor
lea
arpl
in
cmpsb
ret
mov
dec
push
in
add
out
ljmp
mov
inc
mov
cs
popa
mov
adc
add
shr
insl
sub
fsqrt
dec
divl
sti
addl
js
scas
gs
inc
cmp
push
cmpsb
and
subl
pop
fisttps
adc
lods
test
xchg
adc
call
daa
lds
ret
insl
enter
cmc
std
push
dec
sub
push
jge
mov
into
mov
loope
gs
cld
ljmp
xor
int
pop
scas
ror
clc
scas
add
leave
add
cmpsb
lea
cmp
addr16
ret
gs
jle
ficoms
mov
icebp
push
out
mov
cltd
cltd
cli
cmpsb
out
xor
sti
mov
xchg
lock
sbb
lret
jmp
xchg
add
ja
movsb
hlt
push
mov
lcall
xorb
mov
enter
stc
aas
xchg
clc
in
add
xor
dec
pop
mov
mov
jmp
shrl
mov
sub
imul
jne
inc
int3
outsl
dec
mov
jmp
data16
sarl
add
xchg
add
cmp
aaa
gs
sbb
dec
gs
sbb
fisttps
int
xor
xchg
int3
hlt
es
and
sbb
icebp
fwait
mov
push
and
pop
lods
fwait
xchg
stos
cmp
int
adc
cmp
push
jp
pusha
lock
sahf
mov
xor
inc
arpl
jno
jb
int
mov
sbb
xchg
push
loopne
mov
outsl
and
inc
clc
fwait
xchg
jg
in
pop
lret
add
fadds
pop
sbb
pop
stos
xchg
das
jp
cmpb
and
addb
xchg
inc
xor
icebp
bound
xor
aas
pop
inc
movaps
inc
cmp
xor
dec
out
test
xchg
pop
push
xchg
test
inc
xlat
mov
sbbb
inc
aas
sahf
mov
loope
pop
push
cmp
jge
pop
fnsave
imul
cmpsl
cmc
xor
enter
test
fstpl
imul
mov
or
xchg
mov
sub
jl
pop
std
cmp
sbb
cwtl
mov
jmp
pushf
loop
insb
add
iret
push
add
sbb
bound
xor
mov
mov
std
xor
stc
and
aad
pop
pop
adc
mov
pop
push
cmp
adc
pop
cmp
nop
aas
dec
cmp
mov
add
in
jns
pop
and
jge
test
adc
fsub
out
cmp
jecxz
das
int
sti
or
inc
mov
gs
cmpsl
cmp
jl
test
js
comiss
ds
sbb
inc
aas
dec
or
adc
mov
pop
xchg
mov
mov
pop
pushf
out
ja
out
push
rep
dec
push
mov
push
outsl
push
in
sub
sbb
sub
add
jo
cmc
jne
xchg
sub
cmp
mov
sbb
dec
pusha
ret
mov
add
xchg
pop
jp
pop
push
jmp
xor
or
xchg
negl
jns
cmp
popf
inc
push
lahf
pushf
gs
pop
sbb
mov
xchg
dec
jae
push
cmpsb
and
jg
and
sub
or
je
xchg
jb
loop
jle
loope
lods
xlat
xlat
sub
cltd
xor
mov
dec
inc
aaa
jle
adc
sti
mov
sub
and
add
call
or
and
or
repnz
xchg
les
stc
aas
push
sti
lock
xlat
inc
jecxz
std
divl
mov
test
je
outsb
or
mov
push
aad
mov
inc
pop
in
loop
mov
fisttpl
jns
ja
jbe
add
dec
pop
xchg
les
push
cs
insl
jge
gs
sbb
xorl
out
insl
clc
xchg
daa
jp
mov
lods
adc
dec
push
shlb
jne
movsb
cs
repz
or
push
insb
pop
jmp
popa
out
push
and
ja
mov
add
lret
cmpsl
mov
inc
jle
inc
fisubl
xchg
mov
in
xor
jp
ror
xchg
pop
sub
and
mov
cmp
call
scas
or
sarl
xchg
or
xor
pop
cltd
lret
stos
push
das
xchg
xor
dec
test
mov
popaw
mov
mov
sbb
not
fiadds
lret
popf
mov
ficompl
lret
pop
mov
fidivl
stos
mov
aaa
andl
insl
xchg
cltd
js
sbbb
repnz
shrb
inc
push
push
sbb
and
fiaddl
stos
shll
cmp
lret
mov
in
aaa
sub
imull
sbb
imul
pop
xor
dec
sbb
imul
sub
sbbl
call
stos
andl
sub
xor
inc
and
mov
mov
cs
sbb
loopne
mov
xlat
insb
jmp
adc
push
fimull
adc
inc
rcrb
loop
test
mov
cmp
xchg
mov
xchg
cmp
mov
adc
xor
push
jmp
cmpsl
mov
mov
daa
fimull
and
fs
xchg
xor
mov
push
add
inc
sahf
into
pop
loopne
pop
daa
sbb
push
daa
or
icebp
or
daa
cmp
aam
in
lcall
mov
mov
jo
sbb
lds
push
ds
and
je
ret
sub
sub
xchg
xchg
outsb
push
mov
cmp
jno
cmp
mov
and
sbb
cli
adc
jmp
movsb
adc
xchg
cmp
xlat
lret
shl
pop
pop
into
jo
jo
jnp
inc
dec
aas
push
flds
cmc
adc
ja
pop
add
bound
cmpb
cmp
xchg
xor
sub
jmp
pop
jno
pop
lods
shll
pop
xorl
sub
mov
stc
in
lock
mov
push
data16
and
add
shr
popa
and
pop
sbb
jno
sbb
sub
pop
loopne
sti
outsb
adc
push
ds
xor
mov
jnp
out
push
xchg
pop
dec
sbb
fwait
mov
add
add
jno
mov
jbe
ret
jne
or
xchg
ret
arpl
icebp
fiaddl
aam
ss
shl
xchg
mov
push
mov
dec
add
add
jno
repz
cmpsb
shrl
fisubrl
call
lods
push
sbb
out
lret
loop
int3
hlt
aas
mov
popa
pop
xchg
mov
xchg
xor
movsb
test
or
cmpsl
fadd
push
and
scas
jnp
add
sub
loopne
rcrl
sbb
lret
sub
xor
xor
call
jmp
cmp
scas
pop
lock
push
mov
sbb
jb
push
inc
or
adc
add
push
popf
push
int3
mov
mov
cmp
mov
jge
fsub
popa
fcmovu
outsb
ror
sub
mov
xor
pop
icebp
ret
xlat
and
data16
out
loopne
idivb
je
pop
dec
pop
jnp
scas
mov
out
int
stc
mov
mov
mov
jne
shrl
mov
jnp
popf
mov
mov
imul
cli
fnstsw
jge
insl
lret
push
push
scas
stc
idivb
loopne
mov
sbb
dec
jo
inc
cmp
in
mov
dec
jb
into
ror
push
adc
std
mov
lds
subps
enter
sti
out
js
push
shl
leave
inc
adc
gs
pop
and
push
stos
mov
icebp
stos
mov
je
xchg
pop
clc
mov
mov
imul
rorb
and
mov
push
imul
jecxz
cwtl
xor
rclb
pxor
pop
xor
imul
bound
cld
xchg
jecxz
inc
div
sub
lock
inc
jl
mov
mov
mov
xchg
add
xchg
lahf
ret
hlt
adc
jmp
push
scas
pop
pushf
gs
dec
cs
push
sbb
push
pop
test
ficoml
in
jg
daa
sahf
aaa
call
cmpsb
lret
dec
jns
fadds
sbb
nop
or
aam
test
mov
in
sarb
lret
mov
test
fdivrp
loop
mov
sub
hlt
jb
repnz
aaa
or
xor
pusha
or
xor
pop
aam
in
fwait
xchg
cmpsl
xchg
and
jge
cmp
jbe
mov
xchg
xchg
xor
mov
xchg
jecxz
pusha
fnstsw
cmp
faddl
divl
in
cmc
std
outsb
sbb
andl
cmpsl
je
es
mov
add
or
daa
sbb
cmp
lcall
mov
repz
sub
lds
mov
jbe
mov
adc
sbb
xor
flds
push
mov
pop
sbb
lock
cli
pop
dec
mov
fdivr
test
das
mov
cmpl
lods
out
push
cltd
test
xchg
inc
lea
mov
push
pop
mov
jp
iret
stos
pop
mov
pop
mov
test
adc
js
out
mov
mov
outsb
push
push
fcomps
js
ss
push
leave
pop
rol
pop
out
adc
xchg
shrl
push
bound
or
aam
stos
adc
mov
lods
int
insb
dec
testb
inc
dec
mov
mov
jmp
pop
orl
mov
bound
in
dec
daa
pop
push
gs
in
sub
jb
add
dec
lods
push
xor
out
ja
push
int3
add
or
outsl
cltd
mov
ret
or
sahf
add
mov
sbb
adc
pop
outsb
test
in
ror
push
adc
jmp
jge
test
and
pusha
call
or
jb
nop
xor
nop
aam
aam
cmpsb
les
test
movsl
mov
xchg
cli
push
in
jb
adc
pop
pop
sub
jb
jle
xor
add
add
xchg
in
push
leave
repz
add
push
fidivs
bound
aaa
aas
mov
mov
lahf
cld
sbb
mov
pop
cmp
lods
push
adc
mov
int3
testl
adc
cli
dec
sub
in
lret
in
or
sbb
inc
popa
dec
mov
cli
negb
and
xchg
addb
loop
shr
movsb
add
test
push
sub
mov
add
xchg
mov
dec
xor
and
lods
sub
pop
add
xor
inc
inc
pop
and
mov
stc
push
clc
ljmp
lahf
lea
outsb
pushf
fistps
ret
inc
xchg
pop
lds
xor
aad
loop
dec
call
sub
mov
mov
push
mov
sti
xchg
cwtl
jno
inc
cmpsl
push
inc
and
loopne
add
mov
rcl
sbb
and
cmp
jae
push
push
jecxz
push
cmp
push
repz
nop
fisubrs
ss
pop
in
inc
and
in
stc
mov
cmpsl
fnstsw
jp
inc
cli
hlt
cmc
dec
mov
push
jmp
gs
and
pop
and
sub
movsl
sub
repnz
jne,pt
in
cmpsl
and
roll
lods
dec
mov
mov
dec
mov
mov
mov
dec
push
shr
jno
outsb
push
jge
lds
fwait
mov
cmp
xchg
popa
shll
mov
cwtl
inc
inc
dec
stos
add
ret
pushf
cld
mov
dec
sbb
lods
cmp
enter
incl
pop
push
mov
xchg
sub
stos
mov
mov
lahf
jnp
add
or
mov
add
push
das
ds
and
pop
frstor
loopne
xchg
pop
or
mov
mov
cmp
cld
decl
pop
in
lods
pop
sbb
lret
outsl
and
cld
mov
push
leave
cmp
jns
mov
pop
cmp
add
xchg
mov
leave
mov
jno
adc
dec
push
push
xor
gs
mov
pop
jg
and
adc
adc
mov
cltd
js
xor
xor
outsb
push
shlb
sarl
rclb
xor
jecxz
pop
xlat
sub
xlat
xchg
std
sub
sti
movsb
mov
ret
xor
sbb
das
cmp
movsb
push
loop
dec
cmp
test
insb
or
clc
xor
xchg
ss
subb
xor
jge
or
mov
imull
xor
and
mov
dec
adc
imul
sar
repnz
inc
mov
xchg
js
dec
fld
pop
pop
adc
lret
out
mov
mov
xor
mov
dec
or
jae
out
inc
add
cltd
mov
sbb
push
es
aad
cmp
and
and
sbb
ljmp
int3
push
adc
xor
mov
pop
dec
jbe
sub
cltd
xchg
pop
js
cltd
jo
xchg
mov
inc
lret
fcom
lret
inc
push
mov
or
mov
adc
loope
out
shll
pop
mov
push
xor
adc
push
es
jnp
test
jmp
fdivrs
repz
test
sub
cmc
sahf
out
xor
inc
stos
das
lds
hlt
xor
cltd
mov
push
fwait
rcr
adc
jmp
cmp
out
sbb
testb
gs
cmp
adc
sub
cmpsl
aam
or
cmpb
repnz
jne
and
aaa
imul
sbb
ss
imul
sub
xchg
push
ret
and
mov
gs
jl
adc
repz
or
loop
adc
pop
mov
sbb
mov
mov
cli
rcrl
pop
stos
jmp
xchg
test
add
das
mov
gs
mov
sbb
fs
out
inc
mov
dec
sub
mov
jne
mov
push
push
cmpsl
sbb
jb
xor
add
aas
sub
fcoml
xor
or
loope
into
cmpsl
mov
pushf
jl
push
setle
in
jbe
lahf
xor
int
or
cltd
push
push
mov
xor
pop
push
push
das
mov
pop
jne
xor
xor
stos
mov
lahf
arpl
pop
mov
push
fidivs
cmp
test
mov
sub
in
fildll
outsl
xchg
inc
fwait
sub
mov
sub
stos
stos
cmp
icebp
add
sub
mov
add
sub
xor
popf
push
mov
mov
divl
dec
add
cmp
cmp
jl
pop
pop
das
pop
pusha
xchg
sub
mov
adc
sub
xchg
mov
fimull
loopne
pop
xor
adc
dec
rcll
cmp
sub
inc
push
pop
adc
sub
adc
mov
aas
fidivl
push
dec
sub
subb
xor
pop
aaa
aad
mov
idivb
gs
mov
sbb
test
popa
test
mov
and
inc
ja
fsub
lahf
xchg
xor
outsl
adc
pop
cmp
adc
cmp
push
call
mov
jne
andl
popf
or
mov
dec
rcrl
add
mov
inc
inc
fs
or
les
jmp
mov
push
lret
iret
lcall
dec
clc
fmuls
push
imul
inc
pop
lock
dec
mov
test
mov
shlb
loopne
cmc
jmp
fistpl
inc
inc
xchg
scas
jg
mov
xchg
mov
cmp
lahf
pusha
in
hlt
pop
test
int3
adc
pushf
fldt
xchg
jnp
push
mov
outsl
out
fsubrp
dec
divb
push
pop
and
add
adcb
or
adc
add
rcrb
leave
dec
aas
adc
sub
sub
xchg
mov
lea
stos
inc
mov
lock
xchg
mov
stos
cltd
inc
sub
cmpl
in
jns
inc
xchg
mov
mov
xlat
adc
addr16
loopne
filds
aas
mov
sbb
dec
popa
aaa
cmp
push
push
jo
aam
inc
cmp
lock
mov
aam
or
cs
inc
add
mov
pop
sti
mov
test
dec
rol
jae
xchg
push
sbb
lfs
xchg
sar
and
xchg
cwtl
sqrtps
repnz
fdivrl
fdivl
mov
inc
mov
js
enter
aad
rolb
mov
mov
push
add
out
cmp
ja
adc
mov
cmpsb
ds
leave
aaa
pusha
pop
xchg
fistpll
xchg
bound
aam
nop
xor
and
dec
fdivr
stc
inc
sub
mov
adc
mov
mov
cwtl
push
bound
pop
hlt
call
add
sbb
push
add
stc
xchg
inc
insb
push
or
push
xchg
dec
lret
mov
push
out
insb
jae
test
rorb
stos
jne
cmc
rclb
push
es
lret
cmp
or
std
arpl
movsl
mov
inc
or
mov
add
mov
mov
add
ficomps
push
xor
stos
int
mov
jbe
aad
shl
mov
out
xor
sub
jl
cmp
pop
xchg
jle
push
dec
rolb
pand
dec
mov
mov
xchg
std
and
sbb
sub
ja
xor
xchg
loope
stc
mov
mov
ror
mov
jno
rorl
sub
inc
loop
out
aas
je
aaa
cmc
pusha
loopne
cltd
push
mov
add
push
fmull
or
out
inc
fisubrs
jl
out
xor
pop
and
mov
fsubr
xor
orl
sub
clc
adc
mov
popf
dec
xlat
nop
hlt
aas
inc
cmp
inc
or
push
nop
jbe
push
dec
inc
jne
or
out
inc
cmp
and
or
icebp
cs
daa
mov
pop
add
sub
xor
adc
xor
and
sar
pop
add
pop
cmp
dec
or
ja
push
xor
lock
dec
lcall
jecxz
xchg
pop
push
int3
push
lods
aas
or
dec
cmp
jb
dec
push
shrl
pop
loopne
add
lods
pusha
push
xchg
shrb
add
sub
or
movsb
rorb
mov
xor
mov
into
lret
adc
mov
sub
test
ds
cmp
and
sub
outsl
out
outsb
and
jae
mov
test
stos
jecxz
jns
cmp
jno
or
sbb
bound
imul
out
enter
lods
icebp
sahf
add
cli
or
dec
loope
fdivs
insb
dec
movsb
lret
cld
and
jle
cmp
das
out
lahf
mul
loope,pn
and
push
fsubr
jg
test
into
shrb
cld
dec
sub
cmp
movsl
cmp
push
test
xchg
pop
out
push
test
enter
out
cld
sbb
ret
inc
insl
bound
sarb
inc
stos
and
or
fsubp
fdivrs
jecxz
dec
repz
pop
cmp
cmp
cmp
mov
xor
cmc
adc
xor
sti
es
xor
push
dec
sbb
lods
pop
cmp
into
fdivl
pop
jae
adc
pusha
jp
loop
stc
cwtl
std
pop
aaa
shr
inc
push
cmpl
add
loopne
add
loop
or
sbb
push
mov
ds
adc
outsl
jmp
mov
shrb
ja
pop
pop
movsl
push
mov
jae
lds
sub
shl
pop
jno
cmp
imul
pop
cmp
pop
test
nop
jmp
dec
adcb
pop
daa
jnp
scas
shll
out
in
mulb
dec
mov
adc
outsb
cmp
ss
call
xlat
push
iret
leave
cld
push
mov
std
idiv
push
fsubrs
test
xor
or
fadd
xchg
fwait
mov
daa
icebp
adc
sub
dec
mov
mov
mull
insb
jae
push
cld
divb
adc
add
sahf
pusha
das
out
cld
lock
mov
mov
and
pop
push
mov
or
or
dec
jmp
jle
push
push
inc
sbb
mov
loope
push
popf
push
popf
les
jne
outsb
shrl
push
pop
jae
dec
cld
outsb
enter
leave
ljmp
fildl
jno
insl
div
enter
mov
movsl
pop
flds
and
mov
sbb
call
sbb
xchg
inc
in
roll
add
stos
in
test
push
push
ficomps
mov
cmpl
inc
add
jle
repz
push
cwtl
sub
sti
inc
dec
rcll
movsl
xor
ss
push
xchg
lea
xor
cmpsb
std
pop
xchg
xchg
out
jo
mov
out
daa
jns
insb
mov
dec
aas
outsl
jl
out
cs
cmpsl
push
mov
jg
movsb
jbe
shll
movsb
jb
cltd
jns
in
push
cmp
data16
aaa
mov
loopne
fs
sbb
in
sub
imulb
push
push
ja
out
mov
cmc
dec
xchg
pop
xlat
out
inc
sub
aaa
les
xchg
popa
mov
and
fdivl
push
sbb
lock
fwait
sub
dec
sti
inc
adc
arpl
push
std
test
loop
push
mov
xchg
cmp
mov
jb
repnz
mov
fsubrs
and
insb
xchg
ss
in
shr
sbb
mov
jae
add
mov
dec
and
rcrl
cltd
inc
push
rolb
int3
add
jp
push
incl
cmp
in
je
movl
and
mov
xor
mov
fcmovu
les
xchg
int3
mov
sub
push
pop
fwait
testb
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
push
push
nop
push
nop
push
nop
nop
nop
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
