push
call
ret
ret
pop
dec
xchg
mov
sub
dec
mov
inc
mov
or
lods
clc
lret
jp
and
je
aas
inc
aaa
xor
popa
and
mov
rol
in
popa
je
dec
add
adc
inc
xor
in
icebp
mul
pop
add
ja
stos
scas
cmp
jnp
sub
ret
adc
lds
xor
xchg
inc
pop
push
pop
cwtl
sub
inc
nop
pop
push
addr16
mov
and
repnz
inc
bound
pop
repz
into
sbb
mov
out
mov
pusha
xchg
mov
fidivrl
jl
imul
add
orb
mov
test
sub
or
das
xchg
or
add
mov
mov
arpl
jmp
xor
jg
aam
add
cmp
in
dec
cli
mov
movsb
les
or
push
out
out
push
mov
movsb
data16
scas
stos
sub
inc
push
xchg
out
dec
mov
xchg
mov
bound
cs
inc
lds
imul
cmp
sub
xchg
adcb
dec
lods
push
xchg
mov
sbb
into
popa
das
shlb
jl
xchg
loop
nop
sahf
sbb
nop
dec
iret
popa
dec
and
inc
int
adc
or
inc
jle
cmpsb
push
cmp
cli
mov
jmp
xchg
mov
pop
xor
mov
mov
enter
andb
fisttpl
popf
lret
mov
jo
xchg
sub
adc
rcll
jnp
mov
fbstp
mov
inc
mov
mov
out
pushf
add
dec
push
sub
pop
mov
inc
popf
daa
movsb
pusha
bound
lret
sbb
andl
fld
pop
mov
lahf
repnz
mov
fldt
sbb
pop
imul
mov
stos
out
loopne
and
sbb
adc
pop
fisubrs
inc
stos
push
mov
mov
sbb
jno
out
add
add
dec
cs
rol
loope
mov
jp
dec
bound
mov
mulb
and
inc
aas
inc
inc
mov
cld
xchg
push
cmp
lcall
test
daa
test
movsb
dec
sub
push
std
inc
out
xor
das
faddp
daa
hlt
out
dec
cmc
mov
or
xchg
xor
mov
or
ss
dec
ret
mov
sub
test
inc
or
pusha
imul
mov
mov
movsl
sub
or
outsl
iret
cmp
cmp
arpl
testl
in
cmpl
push
adc
sub
pop
push
popa
mov
cmp
adc
push
mov
xchg
pop
mov
aad
test
je
or
lret
push
ljmp
lds
mov
ja
pop
jmp
adc
pop
adc
inc
mov
mov
jp
int
dec
cmc
ljmp
sbb
lret
aas
lock
jmp
push
out
mov
notb
cmp
out
xchg
jge
and
adc
call
ja
enter
into
orb
gs
iret
add
pop
jle
cld
outsl
jmp
rolb
cmpb
sub
xchg
fisubl
fdivrs
adc
lds
xor
push
shrb
scas
xchg
aas
sub
in
or
mov
cltd
dec
aam
dec
cmp
mov
mov
dec
adcl
cmp
dec
arpl
rol
jb
repz
popa
lds
cld
or
or
push
xchg
push
or
stos
mov
je
mov
adcb
imul
imull
cmp
add
ficoml
cs
adc
movsl
das
faddl
mov
and
mov
daa
mov
aad
xchg
call
jmp
loope
fidivl
loope
mov
test
cmp
enter
or
test
adc
mov
or
mov
and
out
cld
mov
add
mov
mov
and
cs
jne
rclb
jp
ret
and
cmpsb
sarl
mov
in
add
popa
dec
loopne
fdivs
sub
xchg
xor
xchg
test
pop
mov
jl
jo
adc
fcoms
out
jmp
loopne
push
mov
jmp
and
jmp
adc
pusha
mov
std
sahf
cmp
and
ficomps
outsb
popa
cmp
daa
fwait
adc
pop
movsl
sti
mov
mov
ret
pop
jno
mov
push
mulb
repnz
daa
xchg
testl
xor
sub
sahf
cmp
dec
pop
scas
ficompl
roll
imul
ret
fmul
test
push
mov
push
sub
and
add
in
ljmp
push
jg
in
gs
test
ljmp
xchg
mov
repz
fstps
xchg
gs
cmpsl
andb
sbb
ret
nop
pop
inc
xor
cmp
subb
clc
adc
stos
or
movsl
add
push
adc
push
push
or
das
or
mov
imull
lahf
pop
sub
xchg
adcl
neg
mov
cld
pop
push
imul
test
mov
dec
jns
stos
push
lods
je
or
roll
mov
inc
jno
out
mov
mov
push
xchg
fldenv
xor
cwtl
stos
or
fcoms
xchg
dec
inc
and
cmp
imul
push
sbb
sbb
sbb
incb
fs
add
jl
push
lahf
mov
repnz
outsb
fistps
mov
popf
sbb
fidivrs
mov
jp
pop
hlt
add
leave
lret
les
inc
jle
add
shrl
mov
shrl
cld
in
fdivrl
je
fiaddl
je
ljmp
add
or
dec
divl
xor
pop
clc
mov
add
xor
add
lahf
add
mov
subb
int
and
cmp
adc
mov
mov
inc
fadds
bound
rcrb
lods
xor
repnz
lret
rolb
dec
aaa
pop
push
imul
rorb
xchg
cs
fsts
xorb
repz
bound
rolb
xchg
in
movsl
jae
in
xchg
ret
pop
push
dec
cmp
mov
movsl
sbb
mov
and
mov
in
cltd
inc
sti
data16
push
cli
jno
hlt
cmpsb
sub
test
sub
mov
add
adc
mov
cmpsb
push
dec
int
enter
mov
push
fcoml
sub
shlb
mov
dec
ljmp
pop
icebp
scas
lret
ja
xchg
jae
push
push
movl
sti
xchg
sbb
add
arpl
cmp
xor
out
nop
movsb
test
cmp
notb
repnz
jmp
sbb
stos
xor
sub
jl
cmp
jae
repnz
push
jne
int
shrl
jecxz
fldt
xchg
test
imul
sub
andb
sbb
pop
in
fwait
push
mov
in
and
mov
mov
jno
icebp
mov
scas
and
push
push
mov
dec
lcall
addr16
insl
imul
dec
inc
rcrb
mov
sub
clc
sub
jecxz
in
lret
mov
shrb
lods
lcall
and
aam
stos
filds
pop
mov
outsb
out
jo
push
les
mov
loope
adc
lret
mov
ud1
push
fwait
lock
jae
add
frstor
stos
adc
sub
stos
stos
iret
int3
xor
aad
add
cs
dec
sbb
xor
xchg
push
repz
in
lock
ja
idivl
xor
jb
fidivl
mov
dec
out
xchg
ret
popa
leave
sbb
mov
addr16
push
push
nop
mov
das
jecxz
push
lret
test
lods
add
push
shll
lret
fadds
arpl
outsl
es
cltd
jg
mov
mov
outsb
data16
or
rcrb
addb
mov
cmp
js
hlt
jns
mov
js
in
seta
push
cwtl
stc
xchg
cli
ds
cld
flds
scas
xchg
rcr
sub
mov
push
jbe
les
lods
imul
inc
mov
cmp
nop
pop
out
mov
std
loop
jae
dec
popa
sub
sbb
pop
jb
dec
lods
or
add
pop
lods
dec
cmpb
push
adc
loop
test
shlb
sahf
jno
or
das
xchg
pusha
scas
fwait
sbb
hlt
jb
es
mov
sub
aad
push
pop
imul
mov
mov
cmp
outsl
sbb
psrlq
add
pop
and
out
mov
in
push
inc
mov
and
and
jl
cmp
mov
cmp
mov
sbb
decb
gs
mov
das
push
jecxz
das
insl
mov
add
scas
sbb
je
vmovdqu
lds
aam
push
xor
je
add
insl
push
xchg
popf
push
data16
out
dec
ret
and
or
mov
xor
iret
mov
xlat
mov
jae
xchg
adc
push
cmp
pop
jle
rorl
mov
jns
test
aas
push
mov
mov
lods
orl
sub
test
ljmp
sub
mov
fistpll
loopne
int3
pop
clc
rorl
and
mov
mov
ret
pushf
mov
add
arpl
mov
lds
flds
sub
addr16
or
cmp
sti
jg
mov
jecxz
xchg
into
daa
xor
sbb
push
cmc
sub
and
pop
leave
int
add
adc
mov
dec
fst
inc
lahf
aad
cmp
push
jmp
pop
stos
xchg
cli
fstp
pop
repz
frstor
dec
aas
in
xor
inc
jecxz
mov
jle
daa
jl
dec
cmp
test
dec
pop
shlb
sub
mov
mov
sub
push
sub
sbb
push
int3
fst
jmp
inc
inc
xchg
inc
adc
sbbb
jae
aas
mov
call
popa
xchg
out
and
jae
xlat
xchg
push
pusha
push
gs
jns
mov
cli
sub
pushf
cmp
scas
xor
push
iret
arpl
cmp
aad
mov
dec
icebp
inc
mov
inc
dec
mov
xchg
xrelease
or
adc
mov
sub
in
bswap
jl
scas
push
rolb
inc
pop
mov
mov
aam
adc
pop
mov
cmpsl
xlat
divb
dec
fimull
inc
repnz
xchg
je
test
data16
jp
add
imul
pushaw
or
insb
arpl
mov
fwait
jnp
adc
xor
dec
xchg
lock
outsb
jp
or
arpl
sarl
pop
sahf
lret
int3
jb
pop
subl
ret
adc
test
push
xor
jmp
sub
sub
and
hlt
leave
pusha
jbe
xchg
or
dec
pop
shll
xchg
add
jg
dec
test
popf
pop
xchg
sbb
pop
cmpsl
and
jnp
jae
jecxz
jb
bound
jmp
fnstcw
mov
cmp
push
push
xor
push
and
dec
inc
shll
outsb
stc
or
jl
push
sub
rorl
sbb
popa
imul
rcr
cltd
mov
xor
mov
pop
cmp
mov
pop
cmp
mov
xorl
scas
les
adcb
shrb
push
nop
jo
je
sar
mov
mov
stos
fildll
cltd
sub
cmp
mov
jbe
cmp
sbb
mov
and
sub
inc
xor
fdivrl
push
mov
pop
xchg
and
and
dec
sbb
data16
test
fs
xchg
shrb
push
and
or
jo
push
insl
add
out
jae
repz
lahf
mov
add
sbb
cmp
fcomps
mov
cli
mov
adc
sbb
sbb
nop
imul
jmp
xor
in
jb
mov
mov
inc
icebp
movsb
xor
cmc
push
stc
lahf
mov
mov
lods
pushf
push
lea
jg
sub
xchg
pop
bound
or
mov
fwait
inc
lds
jb
sub
jnp
mov
aaa
mov
sbb
pop
mov
popf
jns
push
jnp
loop
das
adc
mov
das
sar
inc
out
cmp
jb
cmc
icebp
in
cmpsl
xlat
and
and
aas
leave
add
iret
daa
cmpsb
or
jne
in
call
add
nop
inc
mov
jle
push
stos
pop
test
repnz
iret
imul
addr16
jbe
and
dec
fistpll
scas
test
addb
hlt
push
out
fstpl
sub
xchg
int
aad
into
pop
xchg
add
inc
daa
test
jmp
fistpl
lds
in
cmp
xor
inc
sbb
pop
jns
dec
and
pop
fisttpll
mov
xchg
mov
out
in
loope
int
stos
iret
add
sub
mov
imul
dec
ret
push
in
inc
fs
fdivs
or
xchg
fiadds
adc
xlat
cmpsb
add
push
subl
push
dec
xor
sub
in
repz
dec
fstpt
sbb
mov
insb
sub
clc
rcll
dec
loopne
inc
fnstcw
gs
mov
stos
ret
or
in
cld
pop
xor
fwait
fs
xor
jne
sbb
into
mov
pop
mov
js
mov
jp
arpl
fisubrs
jns
outsb
shll
xor
lret
mov
lret
fimuls
ror
pop
and
insl
aaa
and
and
mov
sti
and
mov
inc
lahf
pusha
stc
pop
fs
int
ret
dec
cmp
mov
mov
add
fs
rclb
jnp
scas
stos
sub
sbb
dec
insl
cmp
in
adc
mov
adc
aaa
loope
jb
dec
js
pop
jg
lahf
mov
and
adc
mov
adc
xor
out
push
mov
push
outsb
mov
mov
pop
push
je
push
or
dec
pop
and
hlt
xchg
or
shrl
cmc
push
lods
add
jo
jecxz
sub
rcrl
jb
mov
mov
pop
xlat
dec
mov
dec
ss
adc
dec
pop
push
push
inc
in
push
lret
ret
enter
aam
inc
inc
pop
jb
aas
loopne
loop
jge
ret
fisttpl
clc
sbbb
lods
xchg
pop
cmpl
pop
outsb
and
lods
adc
sub
data16
push
mov
in
sti
mov
idivb
and
cwtl
fadd
in
loopne
inc
mov
adc
loope
push
add
inc
mov
test
cli
jp
add
call
repz
mov
dec
sbb
mov
mov
sub
push
sub
cld
push
scas
jle
lods
mov
mov
lahf
gs
xor
mov
lds
and
cwtl
loopne
xchg
imul
into
loopne
in
stos
leave
mov
sub
cmp
lret
insl
test
cld
sbb
sbb
test
adc
pop
and
repz
or
inc
es
stos
pop
mov
push
mov
sub
shrb
adc
repz
pop
xor
stos
inc
push
scas
cld
xor
int
mov
mov
loope
mov
and
pop
jo
mov
leave
in
mov
jnp
fdivl
mov
fistl
in
ss
lahf
movups
dec
std
das
pushf
pop
rcrb
lahf
inc
dec
xor
jbe
mov
adc
ror
inc
cmpsb
movsb
loopne
sub
xchg
jo
loopne
outsl
sub
xchg
jnp
movsl
dec
cmp
mov
xor
add
mov
aad
aas
or
ljmp
pop
cmc
shrl
and
scas
les
std
dec
adc
pusha
cwtl
cmp
push
add
push
dec
pushf
adc
pop
loopne
lea
push
push
dec
mov
stos
pop
cmc
packssdw
lcall
and
fisttpll
jbe
cli
adc
fdivp
sbb
cs
icebp
gs
sahf
lods
ret
cli
gs
in
jmp
jns
cmp
jmp
jge
cmpsb
inc
or
rcl
imulb
push
jg
push
mov
jno
shlb
aaa
jns
mov
cmp
pop
sub
adc
enter
fucom
call
std
lds
adc
stos
cmp
stc
insl
jbe
push
ret
xor
push
dec
bound
fcompl
mov
or
pop
push
pushf
icebp
addr16
xorl
jg
xor
xor
xor
sbb
push
sbb
bnd
push
shlb
inc
imul
push
add
sub
cmpsb
orb
call
dec
cmpsb
xchg
jo
in
loopne
fs
dec
std
adc
mov
fs
shl
sub
shll
and
in
stc
dec
rorl
sub
dec
fsubr
mov
jnp
test
sub
dec
mov
pop
sbb
lcall
push
inc
xor
xlat
arpl
popa
mov
xorl
scas
push
adc
jo
xchg
lcall
int
adc
mov
sbb
popa
sahf
lcall
mov
vpshlw
ljmp
adc
lret
in
xor
pushf
cwtl
or
cmp
xchg
sbb
fisubs
cmp
adc
bound
mov
lcall
inc
lret
mov
es
mov
dec
dec
sbb
test
and
cmp
adc
sbb
push
cmpl
push
xchg
and
rorb
ret
int3
xor
add
outsl
sbb
sub
xor
cmpsl
int
lret
push
lahf
jle
jns
loope
and
imulb
into
es
or
xchg
cmc
add
inc
inc
mov
and
xchg
test
ds
and
sbb
pop
lcall
pop
shrb
xchg
cmpl
rcll
adc
ret
jns
xchg
push
popa
mov
shlb
rorl
shll
aaa
lcall
jae
jno
imul
into
xchg
lock
test
test
push
popa
cmp
sub
ds
mov
test
ss
int3
jb
jmp
pop
int
les
mov
js
lret
pop
cmpsl
dec
push
scas
push
and
sbb
jp
pop
xchg
xchg
lret
aad
aad
ljmp
cmp
sbb
xchg
lea
leave
jnp
inc
sbb
push
js
jge
ss
stos
mov
pop
mov
jns
enter
stos
or
jnp
mov
fisubrs
ret
les
callw
mov
repz
in
ret
inc
inc
inc
sbb
cmp
xchg
ret
sub
sbb
test
cmp
mov
xchg
add
dec
mov
push
push
stos
scas
shll
cmpsl
scas
sbb
sti
js
pop
mov
mov
xor
push
sbb
hlt
ret
psubb
inc
push
mov
inc
loope
mov
xor
xor
fiadds
mov
inc
mov
jno
dec
mov
pop
jg
not
aad
add
adc
pop
rep
mov
xchg
mov
andl
pop
push
sub
xchg
mov
sub
add
imul
pop
mov
mov
pop
or
rcrl
jge
jmp
in
sarl
out
xchg
test
fsubl
jno
and
je
cmc
lea
or
xor
leave
cmp
mov
xchg
or
xchg
cmp
sub
subb
enter
icebp
scas
stos
sahf
das
xchg
push
xor
into
sbb
test
xchg
test
push
leave
inc
orl
inc
jge
sub
test
ret
fimull
stos
scas
mov
sbb
jbe
call
xor
cs
or
outsb
lock
fidivl
or
push
pop
cmp
cmp
and
pop
call
sbb
out
mov
dec
std
lret
xchg
mov
mov
or
mov
rcrl
pop
mov
xchg
jns
push
mov
pop
jnp
push
inc
out
addr16
and
push
mov
out
xor
adc
popf
mov
mov
shlb
jne
cld
lcall
das
in
mov
xor
mov
popf
mull
sub
test
cli
xchg
mov
lods
js
les
and
jmp
lock
cmp
shlb
repz
mov
jp
jae
mov
push
data16
mov
xor
sbb
fisubrl
clc
bound
fisttpll
push
dec
jp
aad
cmpsl
imul
shl
gs
adc
cmpsl
aaa
sub
sbb
pop
cmpsb
scas
sub
push
mov
int3
mov
dec
adc
jbe
push
or
lods
call
pop
call
jl
js
mov
mov
sub
cmp
push
add
pop
pop
pop
xchg
mov
ljmp
cmp
jns
fisubl
sbbb
xchg
or
sarb
ret
in
stos
push
mov
pusha
aam
and
inc
cwtl
or
shll
daa
shll
call
rcrb
sbb
push
sbbb
mov
cld
shrb
mov
inc
or
jae
ret
pop
imul
cld
addr16
lret
rep
inc
jne
sbb
repnz
jnp
std
test
and
cmp
test
movl
shlb
and
jg
jo
subb
mov
mov
ds
inc
roll
mov
pusha
and
test
mov
inc
repz
push
int
icebp
pop
push
xchg
and
xchg
xchg
push
aam
jbe
add
nop
dec
inc
data16
mov
pop
jecxz
dec
movsb
rcrb
mov
inc
and
pop
mov
in
fisttpl
pop
icebp
popf
jo
push
icebp
jae
test
cmp
repnz
push
push
lock
jns
add
sub
xchg
fmul
jo
and
pop
popf
mov
dec
leave
popf
xchg
adc
das
dec
lods
cmp
mov
push
sti
sub
jmp
xor
rclb
sbb
movsl
test
inc
or
mov
jmp
addr16
js
andb
and
lods
int
in
fwait
loop
fstpt
jne
popa
xchg
popf
lods
xor
dec
adc
jbe
mov
in
dec
enter
lret
jnp
sbb
xchg
ja
cmp
dec
fstps
mov
icebp
and
aad
inc
arpl
and
fs
xchg
out
sbb
dec
push
js
mov
push
mov
mov
dec
mov
aas
pop
add
mov
jle
push
push
lcall
int
xchg
xor
scas
fcomps
xor
inc
or
and
sub
ljmp
das
mov
or
mov
xchg
lcall
cmp
pop
cmp
movsb
mov
mov
aaa
pop
xor
mov
xor
and
or
or
cs
sbb
call
adc
pop
sarl
mov
jno
adc
mov
lret
arpl
and
das
aaa
cmp
shlb
fstpl
adc
xor
daa
popf
lea
fbld
sub
mov
repz
inc
test
je
and
lahf
xor
inc
push
dec
neg
mov
cmpsl
fcmovbe
cmp
cltd
inc
sahf
jne
movsb
pop
and
test
ret
jl
pop
fs
mov
outsl
out
fsubl
stc
xor
or
js
or
ljmp
mov
stc
jns
push
rcrb
inc
gs
and
cmp
addr16
mov
jp
loopne
add
pop
jge
mov
jmp
ret
inc
mov
scas
sbbb
jne
mov
jns
ljmp
xchg
or
xor
sbb
das
pop
imull
jecxz
fldenv
mov
sbb
insl
pop
shrl
inc
pushf
insl
mov
mov
shl
cmovne
xchg
insl
lds
xor
inc
pop
and
add
enter
into
mov
sbb
adc
sbb
mov
dec
mov
adc
dec
dec
sbb
add
sbb
cmpsb
scas
fildll
lret
pusha
fisubs
js
shlb
lcall
movb
les
enter
sub
push
aaa
xor
mov
andb
repz
cmp
xchg
mov
repnz
insb
add
cltd
mov
or
les
cmp
jb
xor
xor
lahf
std
pop
push
addr16
inc
sahf
add
lea
sub
add
in
inc
sub
xchg
xor
sbb
mov
add
out
jmp
mov
notl
cmp
fnstenv
xchg
loopne
jnp
addr16
sbb
mov
ret
das
jmp
loop
jg
loopne
rorl
adc
pop
fsts
movsb
add
pop
add
fbld
push
sub
mov
loope
sahf
or
movsl
notl
andb
mov
inc
adc
test
aas
roll
mov
mov
cmp
cwtl
into
insb
test
cli
mov
shll
xor
jp
cli
repnz
ss
outsl
inc
rorl
mov
js
movsl
scas
pop
adc
daa
mov
xchg
inc
imul
lret
inc
xor
in
jp
mov
jle,pt
sbb
jmp
mov
call
cmp
mov
in
dec
sbb
pushf
pop
xor
aaa
or
das
or
jbe
sbb
adc
push
inc
lret
push
sub
push
and
or
dec
sbb
sti
pop
adc
stos
pop
vphsubdq
lahf
in
inc
dec
stos
jns
mov
les
aad
and
cmp
jne
into
arpl
rol
pop
je
jg
adc
cld
push
mov
jo
in
enter
mov
icebp
sub
iret
jp
popf
mov
popf
mov
cmp
pop
mov
pop
xchg
fisubs
fs
lods
dec
mov
in
shll
loope
lret
je
imul
out
add
movsb
outsb
sbbb
insb
shlb
hlt
fisubrl
jmp
bound
movsl
sbb
std
xchg
ret
sbb
mov
sub
mov
add
adcl
dec
mov
outsb
push
pop
inc
pop
push
fsubp
lahf
mov
ljmp
cmp
in
cltd
xchg
xchg
ds
mov
push
jle
push
xor
sub
push
test
daa
test
and
in
in
sbb
loopne
jo
push
or
scas
out
mov
leave
push
ds
jae
fdivl
mov
les
hlt
sub
sahf
scas
scas
xchg
push
das
xchg
and
into
mov
shrb
lret
insb
or
mov
push
mov
pop
sbb
mov
inc
in
sbb
shlb
idiv
mov
or
xchg
inc
or
dec
jo
add
adc
shl
sbb
fs
popa
shlw
dec
jbe
mov
popf
push
xor
rcrb
daa
ret
sarl
rolb
push
lock
pop
ljmp
cli
lret
cmp
popa
scas
adc
rcr
ja
xor
cmc
sub
add
or
lods
in
stos
xor
clc
jae
aas
dec
rcrb
mov
movsl
insl
stos
xchg
test
xchg
mov
roll
ja
gs
xor
mov
test
push
and
pusha
dec
sbb
mov
and
cmpsl
dec
push
and
xchg
dec
adc
mov
xor
or
push
mov
adc
ds
adc
push
movsl
cmp
fiadds
cmp
cltd
jnp
mov
xchg
cwtl
mov
cltd
mov
rcr
cmpsl
enter
test
jae
mov
sbb
jb
in
mov
dec
push
shlb
mov
mov
bound
mov
and
insb
cltd
sub
test
add
sub
aam
cmp
hlt
and
aad
fs
lock
sbb
mov
out
cmp
inc
int
fldlg2
iret
jbe
sub
cmp
jge
xchg
and
or
sbb
pushf
outsl
dec
lret
cwtl
xor
or
sub
int3
out
dec
add
ret
pusha
dec
xchg
mov
push
cmpsl
cs
enter
mov
rorl
sarb
aas
lcall
cmpb
pop
xchg
inc
push
loope
pusha
xor
pop
fwait
mov
mov
dec
jno
jle
shr
das
imul
cs
push
pop
popf
xor
or
cmpsl
xchg
jns
cmp
adc
jbe
lcall
lock
sahf
push
outsl
cmpsl
cld
and
fisubrs
jne
repz
xchg
mov
in
stc
push
dec
aaa
daa
sbb
data16
mov
movsl
sbb
mov
test
adc
idivl
repz
pop
lahf
or
xchg
xor
mov
popf
pushf
xor
mov
cwtl
jecxz
mull
fstl
xor
or
mov
lods
cmp
jmp
xorb
insb
adc
cltd
push
xor
add
sub
or
jo
cmp
pop
in
loopne
adc
pop
push
xor
cltd
cli
in
ds
gs
xchg
jle
and
mov
not
push
mov
mov
xchg
imul
cmpsb
outsb
and
bound
dec
xor
jl
jmp
movsb
mov
mov
lods
sbb
mov
dec
or
adc
lret
in
mov
inc
in
imull
sub
pop
or
push
es
testb
and
das
cmpsb
lock
test
add
mov
popl
insb
push
mov
add
pop
lods
test
loop
jbe
addr16
jge
push
mov
or
jo
add
or
lret
in
mov
rorl
adc
imul
sub
cld
mov
pop
xchg
jp
push
and
jae
push
in
call
mov
dec
sahf
push
mov
pop
sbb
mov
outsl
xchg
xor
mov
add
xchg
inc
insl
aad
outsb
mov
je
add
in
inc
sbb
mov
xchg
xorb
xor
negb
es
mov
and
jmp
scas
sbb
aam
sub
or
inc
dec
push
clc
xor
jnp
xor
jo
cmpsb
xlat
adc
out
push
xor
stos
mov
push
pop
xchg
negb
xor
lea
orb
push
jno
push
lods
inc
dec
ds
roll
inc
loop
or
out
inc
jae
stos
pusha
jle
in
cmp
xchg
pop
jle
dec
and
dec
sbb
jns
data16
mov
sbb
xlat
jle
sub
hlt
jo
mov
xchg
nop
mov
ja
jb
pushl
jbe
pop
lea
out
cltd
arpl
mov
xor
mov
mov
sub
and
sahf
out
xor
xor
subb
mov
sbb
test
fisubs
dec
inc
mov
js
push
cld
pop
notb
and
call
ljmp
js
dec
or
sbb
pop
push
mov
cmp
fmuls
arpl
enter
insb
aam
repz
int
jecxz
xchg
dec
data16
je
scas
inc
test
test
insl
cmp
rcl
clc
lret
fiaddl
push
push
rcr
popa
mov
shlb
into
sahf
fs
add
xchg
or
mov
sbb
movsb
pop
lret
sbb
xor
nop
in
cmp
jo
sti
int3
test
rcrl
fstps
inc
imul
inc
mov
aam
mov
js
lock
scas
push
xor
mov
out
jnp
out
and
sbb
imul
add
pop
xor
jmp
cli
pop
jg
loope
and
cli
cmp
lea
imul
mov
daa
cmpsb
fs
xchg
pop
insb
mov
test
inc
lea
loop
push
or
or
push
pop
push
add
adcl
cmpsl
and
jbe
lds
jns
fldl
adc
out
cmp
jae
fildl
xchg
cmp
pop
mov
ss
xchg
mov
mov
cmp
mov
xchg
and
and
insl
push
inc
fcomps
mov
frstor
dec
or
push
or
xlat
test
mov
xchg
stos
or
les
pop
test
and
push
pop
adc
mov
mov
imul
loopne
imul
sbb
test
mov
xchg
je
jl
repz
addl
mov
pop
out
xor
jge
sub
push
gs
aam
notl
sub
push
and
jmp
fimuls
push
push
mov
pop
xor
jl
xchg
xchg
add
dec
je
fistpl
cmp
stc
pop
jae
ret
cmpb
or
jo
push
sub
adc
and
dec
push
mov
hlt
jo
sub
scas
jns
push
mov
stos
adc
sti
dec
xchg
or
push
xor
pop
sub
cmp
orb
insb
rcll
xor
sbb
pusha
fs
mov
mov
mov
push
imul
stos
dec
aad
cmp
ds
daa
adc
xchg
jo
mov
div
xchg
pop
enter
jae
jle
rorl
xor
cli
js
pop
mov
addl
daa
cmp
cmp
xchg
mov
push
or
lret
gs
or
cmpb
push
cmp
jp
sbb
xor
je
add
fldt
pusha
sbb
dec
push
icebp
xor
push
pop
xlat
sbb
and
aam
sbb
jb
rcrb
lods
dec
mov
sub
movsb
fimuls
mov
lods
inc
orl
pop
mov
jmp
add
cmc
push
cmpsl
out
leave
stos
jo
test
cmpb
cmc
mov
into
int
fwait
pushf
adc
scas
add
xchg
arpl
add
add
int3
fiadds
jbe
mov
pop
int
xchg
xchg
sub
mov
mov
repnz
lock
in
xchg
cmp
scas
cmp
sbb
roll
xchg
testb
add
repnz
cs
mov
arpl
mov
sbb
jle
testb
in
call
data16
and
lds
ret
mov
pop
jnp
ficoml
sbb
rcrl
out
sub
xchg
cmpl
and
stos
jmp
test
dec
gs
scas
out
pop
loopne
mov
or
shll
mov
mov
jb
add
sbb
andl
mov
cmp
push
mulb
mov
es
int3
pop
movsb
outsb
xor
repnz
inc
fcom
test
in
idiv
das
addr16
and
inc
push
popa
mov
pop
jo
jecxz
push
loop
push
nop
mov
push
or
jge
xchg
in
or
test
dec
loop
ret
jno
pop
jmp
and
cmp
dec
loop
cmpsl
imul
cmpsl
dec
adc
test
xchg
arpl
pop
or
ljmp
sbb
popf
pop
sub
dec
cmpb
out
push
sub
mull
xchg
movsl
repnz
inc
sbb
lock
inc
push
mov
insl
jp
aaa
pcmpgtw
inc
notb
mov
pusha
mov
insl
adc
cmp
add
rolb
scas
pop
adc
idivb
jns
enter
cwtl
in
pop
popf
addr16
inc
or
test
dec
mov
insb
mov
fwait
rcr
push
movsb
outsb
dec
test
repnz
adc
fmull
addb
add
pop
mov
sbb
lahf
mov
das
aad
xchg
add
xchg
gs
stos
cmc
jecxz
sbb
enter
lds
lahf
movsb
lods
std
aam
push
xlat
js
or
xchg
leave
mov
mov
lret
loopne
cltd
push
imul
popf
adc
addr16
aas
adc
pop
add
sub
sub
out
xchg
ljmp
popa
fs
popf
push
xor
stos
fistps
in
cwtl
cmp
add
pop
or
das
jecxz
sub
shlb
test
imul
insl
out
or
out
sub
xor
insl
fwait
gs
sbb
sbb
jne
xchg
cmc
add
sti
cmpsl
xchg
nop
iret
or
inc
jp
and
jg
inc
insl
cmp
sbb
icebp
aam
mov
sbb
outsl
lods
int3
mov
xor
mov
dec
sbb
popf
addr16
cmp
push
sbb
popf
sbb
in
ljmp
scas
movsb
mov
add
ss
pop
xor
push
pop
inc
inc
loopne
in
jb,pn
xchg
sbb
push
jns
out
add
loopne
fnstenv
sub
xor
mov
or
push
fiadds
dec
adc
fyl2x
lret
cwtl
leave
mov
xchg
test
mov
sub
lods
mov
sbb
addr16
shlb
jno
hlt
xchg
outsb
iret
sti
fldt
test
pop
adc
mov
imul
sub
push
call
outsl
fst
out
fdivrl
in
jmp
fcompl
mov
cmp
push
jp
pop
insb
iret
das
lds
mov
data16
cmpsl
sbb
ret
or
fs
outsl
xchg
fldenv
aaa
repnz
adc
sbb
roll
cmp
lods
sub
cmc
out
jle
mov
xchg
pop
hlt
out
add
fs
jmp
cmp
inc
dec
mov
gs
jle
add
cwtl
popa
push
popl
scas
adc
and
jp
dec
xchg
fwait
xchg
aaa
adc
repz
pop
insb
imul
out
cltd
mov
cmp
stos
shlb
gs
lock
jge
call
inc
add
out
xchg
or
mov
mov
data16
push
push
adc
lock
pop
xchg
into
dec
jmp
sahf
sub
jae
sti
mov
mov
add
jmp
jne
cmpsb
and
mov
jecxz
cld
or
mov
bound
dec
ljmp
jno
add
inc
lea
cwtl
push
cmp
mov
pop
or
popa
scas
insb
fistpll
nop
ss
leave
int
sbb
sahf
add
pop
in
mov
mov
imul
dec
std
pop
in
fiadds
jb
insl
add
popf
adc
shll
arpl
dec
or
add
imulb
mov
add
xor
cld
lret
pop
lock
fbld
push
cmpsl
xor
pop
insl
iret
es
cld
cmp
and
scas
mov
cwtl
xchg
jge
xor
test
sub
pop
leave
xchg
and
jge
mov
inc
cmp
int3
incl
mov
mov
add
pop
and
filds
dec
and
lret
pop
lret
sti
inc
sub
scas
add
fs
dec
add
push
jmp
cwtl
repz
rcrb
xchg
pop
insb
test
mov
push
dec
aad
lods
cmp
mov
enter
fwait
sbb
lret
push
stos
sarb
cld
cmp
stos
nop
movsl
shlb
adc
out
push
or
fidivrs
jo
nop
inc
add
cmc
fucom
insb
mov
mov
lods
pop
decb
daa
push
jmp
inc
jmp
bound
cld
call
pop
xorl
jecxz
dec
lods
and
outsl
push
loope
xchg
xor
sbb
xchg
gs
fildl
mov
adc
mov
cmp
pop
int3
out
mov
inc
repz
rolb
mov
dec
out
arpl
jae
inc
adc
es
clc
xchg
arpl
pop
xor
rcrl
sbb
pop
mov
hlt
outsb
sahf
cmp
stos
imul
cltd
mov
dec
pushf
jp
addb
cmpsl
push
xor
mov
hlt
pusha
dec
in
mov
sub
popf
or
hlt
xchg
adc
inc
mov
loop
call
xchg
ljmp
inc
pop
cmp
cmpsl
fmul
lret
sub
lahf
addr16
aad
xor
sbb
xchg
movsl
or
leave
fbld
sub
sbb
addb
in
mov
shl
jo
sbb
imul
inc
gs
cmp
or
jmp
rcr
imul
mov
mov
fnstsw
add
pop
arpl
int
or
and
add
or
adc
push
jne
sahf
mov
and
scas
in
pop
test
into
jo
ror
dec
mov
fwait
inc
push
mov
outsl
outsb
aas
repz
lcall
pop
data16
fidivs
aas
mov
mov
in
aas
add
pop
mov
adc
push
xlat
imul
das
lcall
rclb
jmp
je
mov
jmp
fimuls
fstps
scas
leave
cwtl
push
pop
in
das
jns
das
cmp
xor
mul
xchg
stc
jae
jmp
clc
lret
cwtl
push
fists
loopne
bound
cmpsb
adc
into
cli
push
mov
mov
dec
inc
jbe
aad
and
dec
pop
jmp
in
mov
adc
xor
mov
lock
xchg
call
pusha
int
nop
pop
jge
jne
sti
xchg
gs
js
shlb
jg
lock
cmp
jle
lock
pop
dec
jae
imul
jmp
fidivrl
js
aad
push
ja
push
jmp
stos
cmp
cltd
jle
enter
dec
adc
jbe
cld
and
jecxz
dec
jb
xchg
imul
inc
addr16
push
andl
outsl
push
test
and
mov
sub
js
stos
inc
leave
mov
jb
xchg
mov
ja
jmp
sub
cltd
xor
nop
call
cli
hlt
arpl
mov
imul
add
test
out
inc
cld
stos
mov
mov
mov
mov
pop
push
in
data16
fldenv
repnz
imul
lods
test
sarl
push
cmp
pusha
jecxz
shll
inc
mov
sbb
pop
add
adc
xchg
jb
cmp
imul
fwait
pop
movsb
sbb
cmpsl
fcmove
sub
pop
pop
xor
out
popa
sub
push
adc
out
clc
iret
fnstsw
test
xchg
push
pop
out
xchg
or
sbb
adc
enter
gs
sub
insl
ss
xchg
and
call
or
leave
xor
jnp
nop
sub
adc
pop
scas
aas
adc
mov
mov
sub
adc
subl
cli
xchg
pusha
and
adc
jle
outsl
mov
fstpl
xor
cmp
push
sub
xchg
fs
pusha
or
popf
push
mov
mov
mov
pusha
stos
jl
loop
pushf
cmc
mov
push
jecxz
mov
or
adc
mov
sbb
out
gs
out
sub
ja
lret
mov
pop
inc
lods
shrl
or
leave
mov
jnp
pop
jmp
jp
add
push
jne
stc
ret
add
adc
out
leave
movups
push
push
divl
pop
in
push
sub
jmp
rolb
in
addr16
cmp
cmp
xor
xchg
push
ds
sub
xchg
rcrl
lods
loopne
cmpsb
cmpsb
mov
cli
movsl
lock
or
out
jae
loopne
push
shll
jnp
xchg
sar
or
and
ja
mov
je
inc
add
das
fisubs
add
ja
loope
shll
lock
inc
aaa
push
clc
jge
inc
imul
add
xchg
xor
dec
imul
repnz
pop
xlat
mov
inc
int3
jns
add
lea
jo
push
out
leave
pop
xchg
sahf
sarl
cmp
push
ficompl
mov
mov
dec
mov
push
ret
ja
xchg
fisttpl
cmp
adc
stos
call
mov
xchg
and
cmp
push
xchg
add
lods
lock
outsb
mov
jnp
loop
jmp
mov
pusha
push
pop
test
int
sub
jg
lds
cmpsb
rcl
dec
cld
xchg
jle
cs
cli
xor
mov
fldl
push
adc
or
daa
mov
imul
sbb
les
cs
jl
and
push
das
jecxz
push
arpl
mov
arpl
in
xor
cmp
ja
lods
sbb
aas
push
jl
ja
or
mov
dec
fisubs
ret
push
notl
popa
and
out
push
jl
sahf
addr16
sbb
xor
mov
js
mov
lcall
in
ja
enter
jno
jo
mov
cmp
pusha
test
push
cmp
inc
fs
stc
push
mov
push
xchg
add
push
inc
mov
or
push
push
mov
dec
insl
push
add
shll
test
cwtl
fwait
insb
jg
sub
pop
xchg
in
leave
xchg
aas
mov
jne
sbb
fldcw
xor
mov
inc
adc
xlat
dec
inc
imul
sub
daa
dec
insl
inc
inc
lods
aaa
mov
ljmp
aad
pop
push
in
push
dec
pop
adc
inc
aam
insb
sbb
lods
out
in
in
es
clc
sar
xlat
jmp
cmp
jne,pn
mov
pop
sub
das
inc
jg
adc
rclb
daa
mov
mov
fistl
sub
and
or
roll
mov
jecxz
mov
rcr
fdivrs
mov
dec
mov
addr16
ficomps
arpl
and
cs
xor
xchg
adc
push
aam
mov
ret
fdivrs
mov
pop
mov
fistpl
arpl
loopne
mov
xchg
xchg
lahf
sub
fsubrp
fcmovb
insb
rcrb
ja
inc
mov
xchg
test
cmp
shll
pop
idivb
imul
jmp
adc
jg
mov
sbb
lret
xor
pop
lcall
xchg
lret
outsb
xchg
pusha
iret
inc
mov
jmp
xlat
sbb
pop
add
insl
xchg
call
inc
es
ljmp
xlat
xor
add
push
lret
lea
out
test
cmpb
mov
mov
mov
insb
mov
cmc
push
jne
repz
pop
test
aad
nopl
clc
fidivrs
enter
movsl
daa
fs
fistl
adc
dec
cmpsl
jecxz
mov
outsb
mov
xor
ljmp
mov
mov
sbb
bound
rolb
aaa
fstpt
sub
mov
sahf
jnp
mov
test
inc
lds
test
inc
stos
adc
mov
inc
in
daa
xor
jno
dec
mov
addr16
lds
xor
cmpsb
scas
sbb
cmp
out
fcmove
insb
es
cmp
pushf
scas
outsl
xchg
jb
sbb
mov
icebp
ret
xchg
xor
rcrb
aad
inc
into
outsb
mov
out
dec
lock
jle
adcb
call
pusha
or
iret
js
arpl
mov
into
push
push
dec
rorb
jnp
nop
cmp
or
cwtl
pop
ds
pop
inc
fs
stc
xchg
shl
rol
subl
sub
and
pop
xchg
push
jne
je
add
jl
je
cs
dec
test
aas
adc
sbb
sbb
mov
jbe
jecxz
pop
es
arpl
lea
add
imul
push
clc
pop
jae
add
fisubl
clc
mov
movsl
xchg
push
call
int3
sbbl
das
mov
pop
xor
jmp
mov
cmp
jb
xchg
dec
test
mov
mov
push
pusha
jne
jnp
fsts
test
and
inc
add
test
xchg
inc
or
inc
sarb
mov
jecxz
mov
push
outsl
bound
fs
mov
jnp
cld
and
sub
push
stos
pop
push
mov
cwtl
shll
mov
or
ja
pushf
cmpsl
push
ja
mov
pop
xchg
jno
fildll
sti
ss
pop
sbb
xchg
jge
cmp
xchg
int3
fimuls
push
insb
dec
fs
push
fisubrs
xchg
xchg
loopne
jnp
add
gs
xchg
sub
push
push
cwtl
sbb
sbb
or
mov
fnsave
or
xor
loope
test
ljmp
jmp
es
dec
shll
pop
sbb
lds
outsl
lcall
lret
push
inc
loop
mov
fwait
int
mov
imul
mov
out
xor
aas
ds
cmpl
jle
shlb
mov
filds
mov
xchg
xchg
in
icebp
cmp
idivb
je
push
nop
jecxz
cmp
dec
and
sbb
jg
xchg
orb
fwait
and
push
fldcw
add
bound
stc
subb
aaa
lahf
inc
fdivp
or
jno
pop
or
pop
mov
pop
cmp
adc
push
out
jns
test
cmpsb
test
notb
sub
out
mov
xchg
cmp
and
pop
xchg
cmpsl
or
stc
xchg
and
shlw
mov
push
and
popa
mov
sub
sbb
xchg
lea
lea
lcall
jbe
cmovg
or
lea
ljmp
movsl
js
jmp
fwait
sbb
xor
scas
lcall
pop
icebp
in
rcrb
push
inc
dec
jmp
je
or
aam
add
jo
sbb
shrl
cmpl
stc
addr16
dec
push
pop
or
push
jp
add
sub
mov
xor
add
jle
mov
sub
pop
stc
fcomps
outsb
or
cmpsl
daa
adc
cli
xchg
les
mov
mov
cmpsb
push
mov
out
fbld
add
push
mov
mov
jg
repz
and
sub
push
pop
adc
jo
mov
push
sbb
mov
and
enter
jl
inc
in
loopne
popa
dec
push
sbb
push
mov
dec
push
faddl
jle
mov
leave
pop
pushf
movsb
cmp
cli
jns
sbb
jbe
pop
sarb
xor
mov
inc
mov
dec
sub
xor
inc
inc
add
push
das
test
jecxz
stos
cmpsb
sbb
xor
add
movsl
js
sbb
cmpsb
mov
sub
mov
icebp
inc
mov
xor
push
sub
fcom
cwtl
inc
push
ds
dec
scas
stos
rsqrtps
in
ja
mov
inc
mov
out
sbb
cmpsb
dec
mov
mov
mov
repz
xor
mov
push
sub
fistpll
hlt
leave
adc
pop
adc
lods
mov
pop
mov
ret
push
jbe
xchg
outsl
adc
dec
jp
test
leave
push
mov
arpl
inc
aam
cltd
adc
fistpl
mov
inc
jb
sub
cmpb
pop
loopne
mov
push
lahf
loope
xor
jae
push
xor
enter
xchg
and
bound
or
add
je
xchg
or
imulw
inc
lret
jge
xor
call
xor
mov
push
sbb
xor
dec
jno
jbe
dec
lahf
mov
fdivs
mov
add
push
mov
mov
outsl
aas
dec
test
xchg
repnz
out
xchg
pop
leave
enter
sbb
mov
lock
jge
shll
mov
mov
js
fldenv
mov
dec
adc
loop
mov
push
dec
bound
rorl
push
mov
sub
and
xchg
cltd
sub
cmpsl
insl
fs
cld
ljmp
scas
dec
in
mov
and
xchg
test
ljmp
addr16
stc
xchg
jne
mov
out
cwtl
jne
cmp
mov
mov
clc
xor
jbe
mov
fcoml
or
mov
fidivrs
xchg
xor
scas
cmp
enter
divl
mov
int3
in
addr16
stc
adc
rorb
repnz
ljmp
into
pop
lods
inc
dec
xchg
xor
inc
xor
xchg
mov
xor
fadds
lds
insb
xor
out
add
imul
sub
les
push
or
cld
pop
push
mov
rclb
lock
out
pop
enter
ljmp
push
add
std
push
cmpsb
test
clc
push
inc
incl
cmp
stos
cmp
repz
aaa
fldcw
mov
push
mov
subl
sub
cmc
bound
dec
dec
jbe
jmp
inc
lock
fmuls
movsl
test
mov
xchg
and
lahf
daa
cmp
call
clc
sbb
lcall
dec
xchg
insl
pushf
shl
into
call
mov
dec
pop
mov
lret
jp
sub
shrl
enter
mov
mov
mov
cmp
mov
xcrypt-ecb
cmpsl
into
dec
out
jle
sub
pop
inc
and
hlt
lret
jnp
fcmovne
jmp
push
rolb
movsb
sub
jl
andb
pop
push
scas
mov
jne
inc
filds
lret
and
ja
cmp
jp
jae
push
xor
lcall
xchg
cltd
in
add
xor
cs
and
inc
aas
pop
ret
fildl
js
push
stc
scas
ds
cld
or
jo
enter
les
pushf
in
testl
mov
pusha
ret
sbb
mov
inc
arpl
ja
out
inc
nop
mov
test
fsubl
movsb
fwait
xlat
shl
sbb
jnp
inc
lods
sbbb
out
movsl
in
pusha
out
or
push
call
rcll
inc
imul
hlt
xchg
xchg
mov
ds
push
push
enter
insb
pop
or
test
mov
in
outsl
es
add
ss
rorb
cmp
mov
xchg
mov
inc
jmp
in
cli
adc
sbb
jb
jae
push
adc
cmpsl
sbb
xchg
ss
int3
ficoms
rolb
xchg
in
jl
add
mov
fidivrs
enter
dec
sbb
dec
stos
mov
push
cmc
les
xor
jmp
or
mov
mov
orb
cld
mov
inc
mov
mov
nop
or
push
movsl
les
cmpl
cmpsb
out
orb
pushw
aas
dec
cmp
and
fimull
fisttps
sbb
shrl
mov
and
ljmp
enter
inc
adc
int3
mov
adc
stos
into
push
lds
les
push
mov
cmc
dec
pop
xor
lcall
adc
repnz
andb
lahf
inc
jns
or
jecxz
je
or
mov
cwtl
pop
or
cwtl
pushf
pusha
loopne
mov
sbb
or
out
sti
mov
jnp
xor
pop
rorb
clc
out
push
sub
mov
lock
mov
adc
mov
mov
pop
jge
mov
push
cmp
dec
ret
mov
bound
les
cli
jge
push
cmp
push
mov
sub
mov
jmp
shlb
mov
adc
mov
imul
xchg
aas
cwtl
cmp
inc
fcmove
mov
mov
add
iret
and
ss
lahf
icebp
hlt
lcall
aaa
or
adc
es
orb
arpl
int
xlat
add
ds
test
xchg
cmp
mov
in
pop
add
lcall
fdiv
add
mov
xorb
dec
in
lods
dec
in
test
out
fists
xor
mov
jo
gs
addr16
or
and
fwait
sub
jp
cmp
sbb
or
or
repz
notl
test
mov
mov
flds
cli
mov
pop
xor
jnp
mov
out
scas
sub
insb
sbb
andl
lock
xchg
les
lahf
pop
xchg
add
cld
add
lods
cmpsb
adc
fstpl
add
andl
cmp
or
out
dec
push
pop
stos
fs
inc
orl
mov
in
sbb
nop
push
sbb
mov
dec
dec
fpatan
divb
xor
push
pop
out
jg
cmpsl
cmp
negb
jo
mov
mov
mov
in
pop
das
add
mov
icebp
sbb
cmpsl
loope
fidivl
dec
aad
arpl
outsb
fdiv
xor
insb
jne
pop
push
or
xchg
fsubl
xchg
jne
les
xor
loope
sarb
int3
rcll
xchg
lods
test
or
repnz
std
push
movsb
mov
mov
xchg
jo
ja
push
mov
jbe
push
xor
dec
out
aam
out
or
inc
add
lds
and
add
fstpl
gs
int
int3
dec
inc
jns
jmp
sti
inc
mov
sub
lret
or
sbb
insb
lds
sbb
mov
sub
out
test
mov
mov
add
out
mov
stos
aas
jbe
pop
icebp
xchg
aam
push
and
mov
aam
inc
popa
lock
out
bound
and
jge
sbb
push
adc
jb
aaa
pop
dec
mov
mov
int3
xchg
aaa
xor
mul
mov
sub
and
mov
add
mov
xchg
pop
rcrb
and
sbb
das
outsb
cltd
cmp
sbb
imul
and
lret
mov
not
xchg
and
rcl
cmp
adc
sub
les
xchg
inc
xor
inc
xchg
ja
pop
cmp
mov
or
pop
js
mov
jmp
mov
and
cld
jecxz
dec
cmpsb
push
outsl
lea
std
shlb
in
xchg
mov
mov
rcll
inc
popf
in
lcall
push
mov
outsl
jle
add
aaa
and
aas
pop
and
and
push
jp
test
in
jge
sbb
sub
std
jmp
sub
jl
popf
cmp
clc
add
int
iret
lds
loope
enter
popf
std
jbe
xor
sbb
stc
outsb
and
repz
ds
outsl
imul
pop
es
pop
stos
rcr
push
sub
adc
mov
xchg
pop
imul
and
aam
les
dec
add
lds
add
clc
xlat
pop
sub
jecxz
push
mov
lret
out
fistpll
mov
data16
xor
imul
add
outsl
cmpsl
xor
inc
fldl
xlat
ds
add
in
lods
sbb
insb
popf
hlt
fisttpl
imul
lock
lods
subb
xlat
jns
das
pop
add
jb
into
sub
icebp
dec
jns
dec
pop
sbb
icebp
adc
lahf
cmc
enter
jbe
xor
fcos
sub
xorb
add
pop
push
fisubs
popf
or
pop
and
scas
pop
add
pop
mov
adc
jo
aam
out
push
mov
add
mov
add
out
scas
notl
and
outsl
mov
imul
ret
push
repnz
cmp
insb
mov
jae
rorb
push
pop
mov
add
mov
mov
dec
add
in
or
sub
xchg
rorb
aas
cmp
leave
call
cmp
pop
in
cwtl
add
xchg
adc
fsubp
test
loopne
mov
jecxz
push
das
mov
adc
and
inc
push
xor
nop
lds
cld
pop
int3
jle
push
movsl
push
ficoml
push
in
jns
mov
loop
fisttps
adc
sub
or
sbb
pop
cmp
cld
pop
test
enter
jno
adc
cmp
and
stc
iret
int
es
stos
xchg
cmpl
or
sbb
test
addl
es
cli
repz
jmp
js
fwait
loopne
in
xor
pusha
movsb
dec
scas
shl
pop
sub
add
sub
inc
pop
aam
xchg
mov
sbb
scas
hlt
mov
cltd
popf
or
clc
cmc
and
imul
loopne
fnstcw
hlt
mov
lock
push
sbb
xchg
push
pop
pop
lcall
or
push
sbb
xchg
xor
mov
jmp
movsb
cwtd
mov
bound
mov
pop
mov
lret
jmp
inc
cwtl
dec
or
jmp
pop
adc
sbb
scas
gs
enter
push
mov
dec
mov
jl
pushf
rcrl
push
rcr
mov
in
ja
dec
push
shl
imul
jne
ss
mov
fst
jge
daa
lock
jbe
insl
fisubs
aad
sbb
std
mov
shrl
imul
xor
test
insb
or
scas
mov
sub
iret
rcrb
adc
jnp
mov
jbe
jno
lret
adc
add
test
into
mov
or
mov
dec
jl
mov
pop
xchg
test
mov
jecxz
and
iret
xchg
scas
pop
in
cmp
jbe
push
bound
adc
xchg
jo
shll
leave
sbb
push
and
cmpsb
and
sbb
fdivl
mov
pop
cmp
les
and
cmpsb
inc
ja,pn
lcall
icebp
sbb
add
cmova
xchg
ds
adc
push
rcrl
mov
gs
fwait
outsl
cwtl
scas
decb
andb
cld
int3
cs
adc
and
mov
mov
repnz
dec
loopne
scas
cmp
pop
inc
or
lock
mov
cld
lods
xchg
push
and
fstl
pusha
jns
das
jb
subb
adc
loop
dec
cmc
dec
push
enter
out
dec
ds
adc
push
stos
loop
andb
xor
lcall
ds
mov
inc
jp
hlt
nop
xchg
xchg
ljmp
jge
sub
push
insl
jge
cs
xor
and
add
loop
sbb
xor
sbb
or
pop
xor
xor
mov
mov
add
jp
add
fcomp
aam
pop
cmc
cmp
jb
filds
xchg
pop
pop
fmull
aaa
xchg
inc
pushf
cmp
jmp
add
inc
jbe
nop
inc
cwtl
pop
xchg
lret
cmp
out
sarb
pop
out
xorb
test
xchg
dec
adc
ds
mov
imul
dec
movsl
mov
ret
mov
dec
test
cs
xor
mov
mov
xor
ljmp
fnstcw
xchg
mov
shrl
out
fsubrs
xor
xor
shl
lods
pop
push
sub
xchg
and
mov
sbb
repz
adc
dec
lret
xor
adc
push
filds
and
leave
lds
pop
sahf
pop
push
dec
bswap
test
insb
push
xchg
sbb
cmp
push
jnp
push
in
les
xchg
jmp
jnp
ljmp
xor
cmc
mov
cmpb
lea
std
orl
lahf
fsubl
pop
enter
inc
dec
inc
cli
mov
sub
dec
mov
sahf
xchg
sub
paddsw
shll
fildl
adc
stc
jmp
cmp
mov
outsl
xlat
mov
xor
loopne
xor
jb
into
ret
repnz
divb
loope
mov
and
cli
push
cmp
mov
lea
pop
push
enter
mov
nop
mov
and
scas
adc
repz
cs
pop
or
pop
mov
movsb
inc
in
es
adc
inc
mov
mov
cmp
mov
sub
clc
dec
ret
mov
mov
jp
sub
push
fimuls
nop
cmp
stc
xchg
mov
insl
xlat
dec
jae
roll
in
rcll
gs
cmp
ret
mov
lahf
and
cmpl
stc
sbb
rolb
push
fnsave
test
lods
movsb
addb
into
mov
mov
add
loop
sbb
loop
push
sbb
and
mov
jecxz
cmp
and
xor
popa
adc
push
scas
jae
filds
or
xlat
pop
mov
inc
int3
mov
aad
outsb
subl
arpl
xchg
leave
dec
ds
pop
jle
and
sbb
adc
loope
inc
and
gs
push
icebp
or
cld
push
pop
jo
fcmovnu
imul
jge
bound
sub
aad
push
insl
ds
in
pop
ljmp
xlat
outsb
icebp
dec
jge
scas
xlat
jl
jb
lods
mov
stos
inc
sbb
sti
jne
push
test
push
fdivrs
subl
or
enter
lcall
ja
cmp
in
aad
sub
into
loope
loopne
mov
hlt
and
rcl
xchg
jl
sahf
sub
test
inc
lds
lods
xchg
adc
xchg
jecxz
pop
out
dec
shll
lret
add
fisttpl
lea
lods
inc
mov
test
out
iret
inc
loop
ret
inc
insl
inc
mov
movsb
adcl
icebp
pop
into
mov
cwtl
bound
xchg
lret
or
xor
sub
sub
sbb
dec
jecxz
mov
pushf
addl
and
sarl
aaa
in
cmp
aaa
imul
dec
lods
push
shrb
pop
jp
mov
sub
and
xchg
sub
lea
inc
cmc
jl
jge
int
ret
pop
ja
inc
push
stc
das
cmc
pop
loope
adc
hlt
popa
nop
out
movsb
test
mov
ss
mov
popf
in
add
sub
test
xchg
in
xor
pop
inc
or
push
testb
in
xchg
adc
sti
fabs
push
out
ror
add
popa
outsb
hlt
lea
jbe
sub
or
pop
clc
cmpsb
cmp
mov
and
fsts
jmp
ds
mov
fsubrs
test
data16
icebp
adc
das
jle
jg
cld
cmc
dec
mov
sub
mov
mov
dec
js
xor
ss
jecxz
cmp
jecxz
clc
xchg
jo
mov
ss
mov
adc
mov
mov
push
test
mov
push
mov
xchg
aas
mov
adc
ret
mov
mov
xchg
insb
in
push
xlat
cmp
and
aaa
push
push
out
mov
inc
fisubrl
or
cmp
mov
insl
jno
btr
aad
cmc
loope
push
sahf
ss
pop
inc
inc
je
sti
dec
xor
xor
sbb
push
outsl
std
xchg
cltd
rorb
xlat
jmp
daa
push
mov
insb
cli
aas
fs
dec
rorb
fstp
push
dec
cmp
mov
push
cmpb
xchg
inc
fwait
cmp
mov
jmp
pop
sti
sub
shll
sbb
arpl
shrb
aas
sbb
xchg
out
add
jle
mov
and
and
push
add
dec
and
inc
sbb
mov
gs
adc
push
jnp
aad
pusha
lahf
sbb
add
push
fidivrl
jne
push
test
mov
sbb
pop
and
cmp
bound
inc
jbe
jno
jb
cli
and
mov
fdivl
popa
xchg
sub
ss
mov
lods
movsb
in
and
sti
and
xchg
xlat
fisttps
in
dec
scas
add
pop
leave
adc
dec
or
lock
cli
mov
loopne
and
sbb
ss
push
and
test
cwtl
xor
and
iret
iret
and
sbb
push
repnz
or
pop
pop
mov
jl
clc
test
inc
push
mov
sub
repz
in
inc
dec
aad
inc
adc
pop
cmc
dec
jp
sbbb
dec
mov
rcrb
mov
fdivrs
xchg
inc
jns
sub
adc
pushf
loop
sbb
addl
testb
mov
and
mov
bnd
jp
ret
push
imul
lods
add
stos
stc
dec
adc
mov
cmp
sbbb
jne
or
gs
enter
movsb
mov
addb
stc
mov
enter
rcl
in
scas
repz
popa
mov
fdivs
lods
adc
icebp
lods
cmp
int3
popf
movsl
or
add
inc
xchg
mov
mov
push
mov
scas
jl
sub
stos
scas
lods
push
ds
and
dec
mov
shl
sbb
dec
shll
sub
jecxz
fcom
and
jne
sub
mov
rolb
.byte
adc
mov
nop
add
add
xchg
mov
hlt
out
aaa
cmp
add
cld
mov
add
cmp
push
lret
rcll
out
and
or
fwait
mov
jno
mov
fsubr
mov
loope
mov
mov
popf
lds
cld
mov
push
ret
hlt
int
add
rolb
push
insb
mov
ret
loopne
mov
jp
hlt
pop
pop
push
sbb
enter
test
xor
or
mov
inc
cmpsl
scas
scas
sub
cmp
roll
dec
mov
add
jno
dec
dec
loope
enter
pop
sbb
movsl
in
jge
or
sub
and
cmpb
pop
inc
cs
dec
int3
out
mov
lret
xor
fisttps
sub
mov
imul
and
sub
add
jno
outsb
lods
lods
imul
sub
inc
sbb
pop
push
add
push
jg
push
xor
test
nop
int
jmp
xchg
andb
and
jae
and
lret
pop
adc
sbb
popa
stos
xchg
add
movsb
jl
imul
out
shl
push
mov
mov
or
popf
xor
xorl
inc
cmp
push
lea
loop
jmp
lret
gs
xchg
xlat
and
sbb
int3
mov
adc
add
mov
mov
aam
push
xchg
push
pop
jno
fadds
sub
xchg
ljmp
xor
mov
out
js
and
pop
in
ret
sbb
mov
aad
mov
mov
pop
ss
div
leave
mov
lcall
xor
loop
cwtl
mov
cmc
pop
movsb
sbb
lds
push
imul
and
andb
fcompl
inc
.byte
add
add
repz
add
add
addb
addb
add
pop
add
addb
add
lock
orb
add
xor
add
mov
add
repz
add
add
add
add
addb
add
repz
add
add
add
add
add
add
addb
add
clc
add
addb
add
adc
add
sub
add
inc
add
addb
add
pop
add
addb
add
jo
add
mov
add
mov
add
add
fidivrs
add
add
add
pop
add
mov
pop
add
rolb
add
call
pop
add
add
add
sbb
add
xor
add
repz
add
add
add
add
add
add
pusha
add
orb
add
add
nop
add
adcb
add
add
add
add
addb
add
repz
add
add
add
add
subb
add
or
or
add
loop
add
testb
adcb
addb
add
and
add
inc
or
sbbb
add
or
or
add
loopne
add
clc
add
adcb
add
repz
add
add
add
add
add
repz
add
add
add
add
inc
add
add
repz
add
add
add
add
push
add
add
repz
add
add
add
add
pusha
add
add
repz
add
add
add
add
jo
add
add
add
repz
add
add
add
add
addb
add
fidivrs
add
add
add
add
nop
add
add
repz
add
add
add
add
mov
add
add
fidivrs
add
add
add
add
mov
add
add
add
repz
add
add
add
add
rolb
add
fidivrs
add
add
add
add
rolb
add
repz
add
add
add
add
loopne
add
add
add
repz
add
add
add
add
lock
add
repz
add
add
add
add
add
add
add
add
repz
add
add
add
add
adc
add
add
add
repz
add
add
add
add
and
add
add
add
repz
add
add
add
add
xor
add
add
add
repz
add
add
add
add
inc
push
add
add
add
repz
add
add
add
add
push
push
add
add
add
repz
add
add
add
add
pusha
push
add
add
add
repz
add
add
add
add
jo
add
add
add
repz
add
add
add
add
addb
add
add
add
fidivrs
add
add
add
add
nop
push
add
add
add
repz
add
add
add
add
add
add
add
fidivrs
add
add
add
add
add
add
add
fidivrs
add
add
add
add
add
push
add
add
add
repz
add
add
add
add
add
push
add
add
add
repz
add
add
add
add
add
push
add
add
add
repz
add
add
add
add
add
push
add
add
add
repz
add
add
add
add
add
pop
add
add
add
repz
add
add
add
add
add
pop
add
add
add
repz
add
add
add
add
add
pop
add
add
add
repz
add
add
add
add
add
pop
add
add
add
repz
add
add
add
add
add
add
add
add
repz
add
add
add
add
add
add
add
add
repz
add
add
add
add
add
add
add
add
repz
add
add
add
add
add
add
add
add
repz
add
add
add
add
addb
add
add
in
add
add
add
clc
jmp
add
in
add
add
add
adc
adc
call
add
add
add
add
in
add
add
add
add
add
add
add
adc
test
add
in
add
add
add
cwtl
into
adc
test
add
in
add
add
add
xor
adc
push
add
add
add
add
and
add
add
add
loopne
adc
test
add
in
add
add
add
js
adc
push
add
add
add
add
add
in
add
add
add
dec
pop
add
adc
add
in
add
add
add
pop
pop
add
or
add
in
add
add
add
pusha
pop
add
insb
add
add
add
add
add
add
pop
add
faddl
add
in
add
add
add
test
add
aam
add
in
add
add
add
jl
add
inc
add
add
add
add
add
add
pop
add
mov
add
add
add
add
add
add
add
add
add
add
sbb
add
in
add
add
add
xor
add
add
add
add
in
add
xor
add
in
add
add
add
and
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
add
in
add
add
add
dec
jbe
add
add
in
add
add
add
insb
jbe
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
xorb
or
add
in
add
add
add
mov
add
add
in
add
add
add
nop
jbe
add
add
add
add
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
add
in
add
add
add
lods
jbe
add
add
add
add
add
add
add
lea
add
add
add
add
add
inc
add
dec
add
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
orb
sbb
cwtl
call
stos
push
push
std
insl
push
pop
dec
lcall
mov
jae
push
push
dec
and
xor
scas
int3
shl
cmp
lock
mov
out
ret
aaa
and
add
pushf
orl
sbbl
or
repnz
repnz
dec
xchg
ss
gs
in
mov
lock
ret
arpl
ja
xorl
xchg
or
adc
mov
mov
xchg
pop
pop
adc
cmp
loopne
insl
xchg
xchg
pop
leave
out
push
call
mov
in
sbb
add
pop
adc
loopne,pn
pop
stos
addl
mov
inc
insb
push
xor
adc
mov
scas
aad
cld
adc
dec
fs
je
dec
pop
dec
and
mov
sbb
mov
jl
pop
dec
insb
mov
dec
or
mov
xor
ret
cwtl
add
dec
daa
or
adc
lret
arpl
fnstcw
out
cmp
push
dec
mov
sbb
xlat
jp
roll
add
repnz
cmp
sub
jg
bnd
aad
cld
aad
mov
dec
jo
add
cmp
clc
mov
fdivrs
xchg
sti
push
inc
or
sti
xor
movsl
jg
insb
out
jb
sbb
test
add
xorl
lret
mov
xor
add
adc
and
ljmp
dec
lret
inc
rcr
bnd
push
xchg
data16
test
sbb
push
dec
add
mov
movl
pop
cwtl
add
insl
sarl
int3
jmp
stos
pop
adc
lret
sub
repz
mov
repz
inc
and
outsb
jmp
frstor
adc
mov
dec
mov
call
ja
or
addr16
cmp
inc
inc
and
jbe
rcrb
int3
xor
int
jbe
and
pop
out
dec
pop
sub
pop
outsl
in
pushf
jle
imul
cmp
adc
or
mov
inc
arpl
ret
pop
cmc
fsubrl
pop
adc
in
icebp
data16
or
xlat
dec
inc
adc
push
dec
mov
inc
nop
mov
test
ss
dec
mov
imul
add
mov
jg
pop
repz
add
jp
sbb
push
imul
ret
iret
fnstenv
jns
ret
addb
mov
pusha
inc
push
sbb
das
mov
stc
jae
dec
push
outsb
cmpsb
leave
or
or
iret
or
or
loope
sbb
pop
inc
pop
and
insb
push
insb
or
test
inc
aas
mov
arpl
jb
in
jbe
add
das
in
ret
jmp
jp
dec
stos
push
faddl
dec
xor
or
scas
cmp
add
clc
mov
jecxz
fnsetpm(287
popa
shll
mov
fcmovbe
dec
cmpsl
sub
test
mov
popa
mov
jb
loopnew
popl
dec
pop
arpl
push
inc
pop
pop
fldl
and
shr
aam
sahf
adc
mov
sbb
cmpsl
mov
mov
movsl
dec
inc
jle
lods
xchg
ret
pop
call
mov
ja
lds
mov
push
or
pop
subl
jnp
push
loopne
aaa
sbb
push
and
std
call
push
ds
punpcklwd
or
cwtl
mov
add
xchg
xchg
mov
or
mov
inc
loopne
adc
mov
popa
push
scas
sub
inc
mov
fisttps
lcall
in
addr16
imul
xor
jmp
xchg
fidivs
xlat
jge
dec
xor
jge
jae
pop
out
xchg
clc
add
pop
out
mov
jns
cmpsl
push
inc
xchg
lahf
aam
push
or
rol
and
fs
js
aas
movsl
cli
xor
mov
rcrl
loope
inc
xor
jl
jne
add
jb
push
popa
push
je
inc
inc
xchg
dec
xor
shlb
outsb
cld
pop
inc
test
in
push
scas
or
jle
jp
xor
aas
mov
lds
testl
xlat
xchg
loopne
mov
sub
sbb
mulb
mov
lock
sbb
pop
stos
ret
cs
iret
pop
sub
mov
sub
sbb
sbb
dec
inc
dec
mov
jns
fdivr
or
or
xchg
test
and
call
mov
in
jmp
test
or
xchg
popf
jle
xor
inc
mov
sub
xchg
adc
xor
movsl
dec
xlat
out
pop
in
or
popf
lods
add
sbb
cmp
stc
pop
inc
cmp
mov
push
es
cmc
and
pop
add
xor
adc
mov
inc
adc
or
lcall
mov
inc
mov
xchg
jl
xor
pop
sbb
icebp
outsb
jmp
pop
outsb
jbe
sub
adc
icebp
mov
pop
inc
xchg
outsb
ret
mov
pop
sbb
cmpsl
mov
fwait
inc
popa
and
add
mov
fistps
mov
xor
in
outsl
cwtl
push
clc
lahf
inc
ja
fdivrp
pop
xchg
adc
aam
int3
jge
aam
push
outsb
dec
sbb
inc
jbe
jo
jecxz
or
loop
fwait
enter
dec
jb
test
bound
or
mov
popa
jecxz
pop
repz
fs
inc
cmp
mov
imul
push
movsl
decl
xor
adc
sbb
jnp
adc
repz
xchg
cmp
lods
pop
and
sti
fs
in
lcall
mov
pop
loop
lret
fwait
cmpsl
icebp
cmp
cmp
les
movsb
xchg
je
xchg
mov
mov
dec
rcrl
loop
mov
shll
pusha
inc
gs
mov
lret
adc
or
aad
insl
pop
int
cmp
test
test
aad
jb
fstl
sub
lods
adc
mov
or
inc
loop
sub
repnz
insl
cld
shr
movsb
jl
inc
push
ss
fistps
shll
outsb
add
lods
into
jne
std
rcl
and
cmp
enter
test
xor
mov
mov
fiadds
adc
cld
arpl
adc
jp
lret
movsb
mov
lret
inc
pop
in
cmpsb
daa
lea
aaa
cli
repnz
mov
sub
or
jl
jnp
leave
mov
push
std
std
ret
daa
mov
cmp
in
lret
inc
cmpb
cld
adc
cmp
push
sub
stos
ljmp
sbb
push
cld
mov
add
or
mov
and
push
jo
mov
sub
inc
icebp
jae
xor
add
ds
sbb
or
or
mov
je
mov
scas
sbb
xor
xorb
les
push
lret
lret
aas
pop
aas
pop
mov
dec
lock
pop
push
std
pop
aad
clc
hlt
fsubs
xchg
ss
inc
daa
xchg
jnp
push
push
and
jne
pop
mov
out
loope
push
in
or
jne
ja
adc
jl
push
push
roll
or
test
or
aam
jae
sub
cmp
cmp
adc
xor
dec
das
xchg
imul
mov
stos
push
testb
pop
in
in
ds
fiaddl
sub
mov
addr16
xchg
push
and
push
aam
ficompl
sbb
arpl
in
mov
jnp
mov
aad
dec
loopne
pop
xorl
cmc
xchg
hlt
and
pop
loope
pusha
push
aad
push
mov
lock
push
sub
mov
xor
in
mov
cli
push
fisubrs
jb
xchg
shll
adc
add
jae
in
add
cmp
movsb
enter
sbb
cltd
xor
mov
rorb
bound
push
push
hlt
aaa
in
mov
add
add
dec
mov
sti
cmpsb
inc
popf
repnz
mov
ds
jno
arpl
js
lret
jns
ficompl
jmp
inc
push
inc
inc
mov
inc
mov
push
or
cmp
in
cmpsb
add
pop
fadds
dec
jne
cmp
lcall
rol
or
xchg
imul
insl
mov
sub
mov
imul
cwtl
punpcklbw
arpl
repnz
inc
adc
xor
add
or
hlt
adc
adc
rorl
ucomiss
xor
jecxz
xchg
out
cltd
lods
aaa
lret
jle
js
push
sub
test
out
loopne
lock
mov
mov
pop
gs
fwait
movl
pushf
repnz
pop
rolb
add
xor
stos
cli
aad
ljmp
lcall
adc
jge
push
shll
add
cmp
ds
jo
cmp
inc
cmp
jbe
out
data16
or
test
pop
outsb
xor
stc
mov
adc
adc
ds
xor
repnz
loope
das
pop
ret
inc
sti
addb
fcom
add
clc
and
xchg
push
mov
jp
pop
push
das
test
sub
sbb
mov
sbb
jbe
ljmp
rorb
push
ret
rorb
mov
leave
jnp
jle
iret
incb
outsl
mov
rclb
jp
jb
mov
fisubrl
push
bound
adc
dec
dec
cmp
mov
cli
popf
cmc
and
loopne
pusha
xor
pop
aaa
mov
outsb
pop
mov
cwtl
dec
in
xor
lock
int3
repnz
je
movsb
rcl
les
or
data16
mov
push
pop
les
mov
cmp
rorl
xchg
lds
dec
jne
repnz
mov
add
inc
fnstsw
dec
xchg
sbb
jle
or
shrb
mov
lahf
and
cld
insl
ret
sub
jecxz
push
shrl
frstor
in
test
and
aaa
sti
or
add
xor
push
mov
popa
aaa
sar
pop
mov
xor
iret
je
jl
dec
mov
pop
stc
out
lret
jge
lods
sub
adc
test
and
inc
popl
scas
lcall
aaa
cmpsl
mov
cmpsl
ret
jne
es
push
mov
insl
or
mov
mov
in
imul
mov
push
pop
lcall
xchg
enter
and
sub
inc
leave
push
mov
push
dec
mov
sub
leave
push
jo
adc
mov
lds
mov
lea
movsl
lods
sub
nop
xchg
xorl
nop
push
jb
lods
sub
mov
jae
inc
mov
and
jo
xor
or
cmp
movb
dec
popf
cli
mov
movsb
dec
dec
pop
xchg
scas
jge
fs
ss
ja
arpl
adc
fldpi
aas
xor
sub
cltd
lods
add
push
repnz
pop
and
daa
cmc
fsts
cwtl
clc
push
dec
loopnew
stos
pop
rcll
push
insb
xor
cmp
add
push
mov
adc
jb
push
jb
sbb
out
inc
loop
xchg
es
and
mov
pushf
jl
mov
add
pop
jmp
clc
stos
adc
mull
jo
jnp
outsb
cld
mov
rorl
popl
ret
add
push
gs
sub
frstor
mov
repz
push
arpl
imul
and
inc
bound
stos
pop
scas
into
arpl
and
jle
out
mov
push
and
ja
xor
cmp
loopne
or
mov
out
repnz
inc
shrb
lock
je
add
mov
push
bsf
imul
jmp
cmpsl
fistpl
outsl
add
mov
or
xchg
fisttps
aad
daa
push
push
and
std
stos
sbb
movsb
mov
popf
jb
sbb
mov
shll
or
loopne
inc
pop
adc
cmp
sahf
cmp
cltd
call
fldl2t
push
stos
push
iret
sub
adc
cmp
popa
mov
outsb
add
stos
jge
adc
xchg
sbb
rolb
fdivl
sbb
idiv
sahf
fcos
fldenv
out
mov
mov
jmp
inc
in
mov
jo
rcl
movsl
adc
std
leave
and
mov
stos
mov
sub
aam
dec
dec
mov
cltd
inc
mov
out
jnp
std
pop
add
jecxz
in
int3
rcll
fildll
add
xchg
dec
or
mov
mov
sub
jne
cmp
pop
int3
insb
in
jne
pop
xchg
add
fs
fwait
sub
add
movsb
sub
ret
dec
call
jp
pop
add
sbb
pop
orl
cmp
out
pushf
fistpll
arpl
adc
sub
sub
xorl
sub
popf
mov
push
mov
jno
fidivrs
call
xchg
test
dec
scas
adc
mov
lock
push
in
jb
inc
mov
xchg
xchg
add
add
in
xorl
mov
or
fdivs
dec
add
mov
xor
movsb
or
or
out
inc
and
adc
mov
mov
pop
in
add
shll
dec
pop
and
ret
xor
ss
imul
jmp
cltd
shll
jns
scas
sub
mov
mov
cmpb
dec
lret
or
push
aas
or
lcall
inc
push
mov
insl
adc
imul
movsl
and
movsl
aaa
mov
sbb
hlt
cwtl
pop
cmp
in
sub
xchg
shrb
popf
sbb
add
inc
push
pusha
xchg
mov
or
push
out
inc
adc
xor
test
push
push
push
jb
aaa
mov
arpl
ret
jno
gs
in
iret
xor
cld
imul
clc
lods
int3
sarb
jae
jns
js
xchg
mov
cs
js
xchg
test
sarl
inc
mov
aad
jnp
inc
shll
xchg
test
clc
ror
bound
daa
pop
adc
rcrb
das
xlat
adc
lock
or
lds
std
in
stos
add
ja
mov
ds
jmp
mov
lea
sub
push
or
mov
xchg
adc
ret
loop
pop
push
xchg
cmp
movsl
incl
aaa
fxch
mov
pop
dec
fidivs
test
inc
std
dec
and
cmp
or
inc
aas
shlb
adc
inc
push
mov
pop
ret
push
stc
mull
das
mov
mov
in
pop
gs
mov
adc
test
mov
stc
imul
in
xor
lahf
xchg
outsb
cld
pop
xchg
jne
add
js
xchg
ret
xchg
scas
dec
fs
xchg
pop
repz
rorl
mov
outsb
mov
inc
xor
and
scas
add
imul
lret
xchg
xor
lahf
inc
mov
out
mov
push
outsb
pop
lret
imul
push
jne
scas
pop
inc
stc
jmp
shl
hlt
fs
rcrl
xor
mov
dec
pop
xor
std
or
ds
lods
adc
lods
push
mov
mov
xchg
adc
jbe
add
dec
out
sbb
aam
sahf
clc
loope
xor
sub
and
add
ss
or
cld
add
ja
pop
inc
movsl
jmp
inc
jl
aaa
ficompl
xlat
push
mov
sar
or
xor
or
inc
decl
mov
pop
pop
xchg
arpl
jns
inc
les
cmp
sti
sub
push
sub
ds
in
xor
dec
push
adc
sub
je
jl
sbb
xchg
js
jno
repnz
add
cmp
fcoms
sahf
dec
jnp
stos
xchg
xchg
jecxz
mov
push
rcrb
add
enter
sti
lcall
mov
sub
mov
sub
cltd
add
loope
adc
inc
cwtl
cli
aam
sub
mov
push
sahf
repz
inc
insl
add
repz
sub
loopne
pop
pop
shll
add
movsb
lret
adc
dec
or
data16
movb
mov
rorl
fadds
jno
inc
xchg
pop
adc
add
or
enter
enter
test
notb
data16
loop
jnp
loopne
arpl
jg
cwtl
push
out
push
mov
jp
outsb
sbbl
and
testl
xchg
addb
cmpsb
cmc
lea
lods
sti
pop
dec
fucomp
and
cwtl
add
xor
mov
cld
fadds
loop,pn
nop
lods
into
mov
in
lret
hlt
clc
mov
lcall
in
cltd
aad
pop
mov
dec
xor
add
fcompl
mov
pop
pmaxub
les
xor
xor
xchg
or
pop
daa
hlt
jno
jno
adc
xchg
sub
test
int
inc
push
sti
cwtl
mov
hlt
lods
dec
mov
imul
sti
and
mov
aam
xor
insb
sub
mov
shlb
cld
aad
ret
adc
inc
lret
mov
inc
ficompl
punpckhbw
jecxz
mov
lret
jns
aad
sbb
std
add
jmp
pop
fs
cmp
popf
push
cmpsb
incb
mov
aad
pop
fmul
jae
lods
mov
cld
fwait
mov
enter
fsubrs
push
and
cmpb
add
sbb
mov
idiv
cli
jmp
xchg
mov
in
int3
inc
dec
jmp
pop
mov
lods
jmp
sub
jl
cs
std
test
stc
pop
cmp
in
ljmp
fucomp
insb
xchg
ss
stos
push
add
enter
mov
push
ljmp
add
xchg
outsl
xchg
stc
sahf
push
jg
xor
lret
mov
jno
dec
cmp
xor
mov
es
cwtl
out
jl
xchg
push
xlat
cmp
and
inc
cmpsl
or
cmp
inc
mov
repnz
daa
repz
aas
cmp
pop
push
mov
mov
cmpsl
pusha
idivb
fisubl
sbb
je
shrl
and
stos
mov
test
add
and
adc
push
outsb
std
cld
mov
push
andl
icebp
pop
mov
test
fmul
cmpsl
push
in
adc
or
mov
in
pop
movsb
mov
gs
inc
dec
cs
sub
mov
cltd
add
shlb
adc
je
mov
cmpsb
in
aam
outsb
mov
loope
mov
fdivp
nop
lret
mov
sbb
sub
stos
call
out
ror
insl
lock
jnp
cli
and
mov
out
std
outsb
cmpsb
mov
sub
sahf
int3
sub
mov
mov
pusha
jne
in
push
mov
or
lods
pop
cmc
ficompl
in
lds
cmp
icebp
arpl
inc
inc
add
aam
das
iret
popa
adc
inc
inc
jae
test
imul
pop
cltd
cmp
push
aam
sarb
mov
in
ss
jo
pop
xor
popa
je
call
dec
mov
sbb
mov
rorl
mov
or
dec
hlt
mov
or
out
jnp
orl
shrb
xor
jp
jecxz
mov
inc
sbb
stos
sub
jno
jb
push
pusha
xchg
test
cwtl
fidivs
ss
or
scas
es
pushf
cmp
orb
cld
dec
cmpsl
fidivl
xlat
imul
sti
mov
pop
sbb
out
outsl
mov
loope
cmpsb
movsl
aas
xchg
lea
decb
push
xor
icebp
aaa
test
mov
outsb
lock
and
adc
ja
fnstenv
pop
aad
out
mov
pop
mov
xchg
sub
fistpll
or
push
jns
adc
fwait
ret
test
loopne
loop
jp
shr
adcl
ljmp
ror
les
outsl
js
jne
fnstsw
leave
cmp
push
out
lret
lods
sbb
sahf
and
rolb
jecxz
test
repnz
sbb
inc
arpl
stc
xchg
push
outsb
push
scas
lods
aaa
pop
inc
pushf
outsb
fs
mov
adc
popa
addl
stos
call
dec
dec
jg
mov
pop
and
movsb
shlb
adc
scas
sub
jmp
or
pushf
test
lods
adc
imul
xchg
testl
cmp
add
wrmsr
mov
cmp
fbld
dec
sti
or
pusha
lahf
push
sti
mov
lahf
mov
mov
cmp
pop
call
stos
xchg
or
and
hlt
pop
dec
out
add
xchg
cli
ja
into
int3
sbb
fisubl
jne
fnsave
gs
jecxz
jne
test
fs
adc
jg
fsubs
adc
gs
rorb
sti
cmpl
int
outsl
and
jmp
mov
ja
push
arpl
xchg
in
lret
imul
ds
pushf
out
mov
jb
mov
fstpl
and
outsl
sub
fstpt
inc
cmp
cwtl
push
sub
dec
inc
daa
in
pop
lcall
xchg
loop
inc
jbe
dec
cmpsb
gs
xor
add
and
pop
mov
and
xorl
jle
dec
stos
pop
or
xchg
mov
cwtl
xlat
cli
enter
insl
mov
fistps
mov
fs
inc
std
and
or
add
fnstenv
insl
adc
mov
repnz
inc
jno
push
mov
or
or
mov
xchg
dec
adc
jecxz
cmp
rcr
xor
arpl
mov
mov
loop
outsb
push
and
cmp
lods
stos
outsl
ficomps
orb
aaa
mov
cmp
mov
adc
popf
test
insb
dec
pop
xchg
or
mov
mov
js,pt
and
inc
add
loope
mul
inc
arpl
fwait
jmp
mov
pop
push
loop
mov
bound
add
pop
pop
xor
cmpsb
out
test
or
push
cmp
mov
mov
jp
imul
das
xchg
push
push
xorb
push
adc
sub
pushf
insl
rcrl
inc
and
cmp
cmp
adcl
mulb
dec
push
sub
fdivrl
mov
loopne
add
mov
mov
inc
ss
push
adc
pop
lods
js
adcl
pop
jp
or
sbb
out
push
cmp
add
dec
test
mov
cmp
push
andl
leave
ret
bound
loope
test
push
push
in
lods
jecxz
rcll
lods
jnp
push
incl
ss
lods
mov
out
repz
sub
hlt
xchg
out
xchg
or
cmpsl
sbb
mov
ljmp
test
and
add
lret
and
jns
imul
xor
xor
jl
mov
cmp
incb
aas
nop
test
inc
cli
xor
cld
xchg
adc
in
jne
fmull
push
or
loope
xor
out
fcmovbe
cltd
inc
mov
lods
dec
cmpsl
cld
sahf
add
test
cli
lret
mov
addr16
jmp
dec
pop
lods
push
xchg
pop
inc
int3
stc
pushf
dec
adc
test
jge
fildl
sbbb
xor
repnz
cmpb
xorl
or
pop
xor
mov
xor
sub
and
pop
icebp
push
push
loope
repnz
and
mov
in
ss
clc
pop
stos
xor
add
loop
aas
sub
cs
jns
push
or
out
or
scas
arpl
xchg
push
add
push
andb
fs
mov
clc
test
aad
and
pop
out
aam
jno
or
pop
movaps
jg
cmpsl
cmp
rorl
test
push
push
loop
mov
and
xor
jae
jl
xchg
js
lahf
addr16
jmp
aaa
rclb
push
adc
dec
roll
je
dec
sbb
mov
xor
dec
lret
outsb
mov
push
sahf
popf
sbb
push
mov
rcr
mov
aaa
cmp
ljmp
ja
fldenv
mov
mov
add
test
xchg
mov
es
das
mov
adc
lea
dec
popf
lret
xor
and
aaa
scas
hlt
mov
sbb
hlt
into
rcl
cmpsb
and
mov
or
insl
enter
add
xchg
scas
xor
out
add
lock
add
xorb
dec
jle
sbbl
addr16
add
aam
ret
or
mov
sbb
lock
sub
jp
pop
imul
jbe
add
xor
fcompl
add
add
sub
repnz
or
pusha
or
dec
push
sti
fcoms
cs
xchg
cs
out
leave
into
aad
negl
adc
pushl
xchg
movsl
outsl
dec
push
movsl
adc
in
push
jne
subb
ficompl
mov
nop
pop
icebp
mov
mov
mov
rclb
cmp
sub
adc
dec
addr16
mov
push
jl
test
aam
jecxz
ret
jecxz
ret
mov
and
cmp
sar
jmp
test
pop
sub
fldl
lea
fwait
shll
cmpsb
inc
stos
aaa
jge
mov
sarb
lea
mov
sbb
fs
pop
jl
int
imul
jl
inc
pop
and
test
mov
je
mov
mov
adc
pop
out
sbb
jg
pop
mov
into
dec
lahf
dec
in
jne
popf
cmp
and
inc
push
lock
imul
xchg
and
jns
xor
xchg
adc
les
mov
daa
inc
jecxz
mov
lahf
and
sbb
adc
sbb
psrlq
sti
stos
add
xchg
lcall
cmp
sub
push
push
sbbb
jno
or
jo
ljmp
xchg
add
nop
inc
push
push
jle
sarb
push
cmc
cmp
cmp
pushf
arpl
jl
jp
add
mov
push
movb
or
dec
xor
int3
ret
mov
lock
popa
pop
mov
mov
jmp
cmc
mov
bound
cmp
mov
xchg
test
incl
daa
shll
pop
leave
jp
mov
adc
sub
mov
add
jbe
pop
pop
or
cld
ss
popa
push
je
xchg
repz
in
les
sbb
ljmp
push
mov
mov
xchg
add
mov
jp
mov
dec
xchg
sbb
scas
and
lea
cli
shll
iret
mov
fldt
add
or
lock
mov
cmc
push
nop
pop
inc
jl
clc
xchg
out
jmp
lock
jnp
and
xor
xor
pop
pop
ja
ljmp
dec
mov
mov
xorb
imul
pop
insl
lea
push
or
pushf
jnp
cmp
mov
sbb
fisubrs
shl
lock
jle
repz
popf
int3
dec
cld
sbb
fsubrl
into
scas
push
hlt
std
lock
scas
insb
rcll
hlt
jno
pop
les
add
inc
fdivrl
xor
dec
roll
sub
mov
push
xchg
jns
stos
jbe
xchg
das
add
mov
mov
faddl
xchg
ffreep
cmp
dec
daa
dec
jl
mov
adc
hlt
addl
add
cmpsl
jle
sub
xchg
xchg
pushf
jecxz
sbb
lods
bound
sbbl
rcrl
mov
sub
in
scas
lea
addr16
loopne
scas
fwait
pop
mov
shll
cltd
lods
mov
cli
push
lock
clc
xchg
inc
lea
lret
or
out
aam
mov
dec
popa
enter
xchg
out
pop
mov
outsl
mov
mov
mov
hlt
ss
sahf
scas
and
mov
pop
mov
cld
loope
xchg
lds
or
pushf
in
mov
inc
in
jae
mov
andb
shr
mov
xor
jno
jb
pop
pop
ss
and
xchg
pop
test
test
popa
and
stc
add
mov
xchg
jge
jae
xchg
sti
jg
push
and
inc
cld
test
xor
in
rcrl
int3
cmp
daa
mov
jl
pop
mov
mov
inc
mov
jnp
xchg
cmp
ret
shll
orl
dec
mov
sbb
pop
outsl
adc
loop
test
cmpsb
push
xor
inc
xlat
adc
lret
jo
testl
or
add
adc
and
test
adc
push
popa
sub
sbb
pusha
lret
lods
sub
out
and
mov
sub
pop
adc
xchg
arpl
push
push
mov
je
shll
sbb
mov
push
pop
adc
xchg
adc
stos
mov
dec
pop
int
in
bound
fcoms
sbb
fisubl
dec
aaa
testb
mov
pop
jb
mov
jge
hlt
sbb
arpl
adc
adc
fistpll
xchg
sub
mov
adc
bound
xchg
sub
inc
arpl
pushf
or
or
xchg
imul
xchg
bound
gs
sub
fdivl
and
jmp
xor
inc
js
imul
fucom
add
adc
fwait
rcr
movsb
push
xlat
sbb
out
lret
jb
jecxz
or
adc
push
pop
or
jg
fidivrs
xchg
das
push
jns
xchg
jno
ret
push
movsl
out
fisttpll
add
pop
out
fsubrs
inc
subl
inc
inc
jae
xchg
xchg
sbb
or
or
inc
mov
mov
fwait
jne
inc
jnp
pop
aas
in
dec
mov
xor
cmp
pop
insl
imulb
mov
rclb
lea
icebp
ljmp
stos
mov
ret
int3
mov
cs
es
rcrb
push
lods
ficoml
xlat
stos
sbb
cmp
sar
push
cmp
aad
inc
xor
sbb
adc
or
cmpsl
lea
inc
inc
jecxz
cmp
repz
jp
icebp
test
fldl
sbb
dec
aas
mov
mov
xchg
and
push
sbb
push
sbb
andl
jle
inc
ja
adc
cli
dec
mov
test
push
stos
push
cmp
pop
inc
in
pop
sub
outsb
mov
rorl
lods
push
ret
cli
icebp
shl
push
dec
jo
add
push
sbb
fidivl
mov
scas
push
jle
repz
mov
rorb
data16
test
xchg
xchg
adc
and
and
test
ds
repnz
loopne
andb
sub
ds
loop,pt
test
stc
ljmp
shlb
out
mov
hlt
jbe
xor
adc
cmp
mov
ds
outsl
jge
cwtl
inc
std
repz
pop
data16
or
adc
fildl
mov
idivl
cmp
shl
xchg
jne
sbb
mov
arpl
fcoml
jp
pop
cld
mov
and
mov
mov
insb
xchg
aaa
jp
inc
in
imul
inc
loop
cmp
xchg
mov
lods
movsb
cmp
inc
test
ss
bound
cmp
pushf
cltd
and
loopne
mov
popf
pop
inc
icebp
int
stos
and
adc
dec
pop
aas
incb
adc
dec
xchg
mov
dec
jo
sbb
mov
pop
dec
roll
mov
ja
in
xlat
das
pop
jle
mov
and
xchg
fstps
shll
or
pop
mov
adc
mov
sahf
sub
mov
push
pusha
fldenv
imul
add
and
jns
btc
das
ja
arpl
sbb
or
jp
mov
movsb
xor
filds
pop
lods
push
daa
dec
ljmp
sub
jp
add
jo
int3
outsb
cmp
xor
sub
fmull
leave
adc
and
ja
mov
cwtl
lock
outsb
xchg
pop
sub
int3
jmp
and
cmpsb
pop
stc
dec
lods
pusha
int3
fld
mov
xchg
add
cli
mov
sahf
adc
sbbb
std
sub
jbe
out
outsb
test
mov
and
push
stos
les
shr
sahf
push
aad
cmp
es
popf
in
lea
mov
movlps
adc
jecxz
mov
mov
add
lret
mov
push
inc
inc
cltd
push
mov
mov
icebp
mov
xor
loop
lret
cmp
mov
lds
call
lock
dec
inc
bnd
mov
sbbb
sarl
dec
pushf
into
mov
or
xorl
fstps
lods
mov
decl
mov
dec
daa
cwtl
cld
out
pop
lcall
pop
imul
lock
adc
sbb
inc
out
adc
xchg
dec
pop
pop
adc
jl
test
std
push
iret
sbb
jecxz
cld
push
test
adc
jae
push
adc
mov
pushf
hlt
ss
push
dec
jb
popa
data16
cs
scas
test
mov
adc
push
pushf
mov
push
pop
insl
roll
adc
or
aam
push
popf
or
and
xchg
lcall
sbb
cmp
pop
aad
cmp
cmp
mov
ds
cmp
pop
mov
icebp
dec
lods
jno
and
ja
arpl
mov
inc
fwait
mov
imul
pop
cli
mov
sub
shll
gs
push
adc
dec
or
movsl
xchg
jae
mov
cmpl
inc
aas
mov
jno
pop
movl
clc
jb
cwtl
rcl
adc
ret
scas
pop
and
jnp
test
aaa
or
add
push
frstor
dec
shl
outsl
imul
inc
shll
cmp
xor
filds
push
xor
aad
cmp
dec
inc
lret
xchg
pushl
adc
mov
lret
cwtl
lret
xchg
jmp
xor
push
and
enter
mov
ja
sub
outsl
mov
push
fmulp
xor
jl
mov
inc
pusha
pop
xorb
cmp
adc
addb
sti
stc
icebp
xor
and
push
popa
scas
loope
fcompl
rcl
push
icebp
repz
xchg
pop
push
arpl
inc
ss
cmp
sahf
jno
xor
add
push
push
bound
cmp
lret
mov
loop
xchg
xor
clc
insl
pusha
roll
arpl
push
imul
mov
push
pop
sbb
vmovapd
test
pop
mov
sti
test
xlat
imul
addr16
cmp
orb
enter
in
cld
incl
ret
stc
jne
mov
jmp
inc
jae
testl
xor
add
and
int3
xchg
cmpsb
bnd
sbb
cmp
jle
xchg
stos
xlat
mov
inc
inc
out
shl
push
push
scas
inc
adc
and
insl
lahf
cwtl
lea
cmp
add
pop
test
stos
or
push
dec
pop
pop
and
imull
pushf
js
mov
mov
mov
jno
jge
ret
and
add
pop
lret
scas
loopne
and
fldcw
push
add
jmp
push
lret
stos
push
mov
lock
in
shr
sahf
cmp
pushf
add
jae
outsl
pop
repnz
pop
cmp
or
arpl
jno
pop
mov
xor
sbb
jae
pushf
popf
cmovno
loopne
into
pop
and
mov
std
pop
mov
sbb
inc
xlat
pop
xchg
and
adc
mov
inc
add
imul
inc
xchg
pop
add
pop
mov
stos
out
ljmp
pop
cmp
fwait
push
cltd
push
aas
inc
arpl
jo
or
jecxz
ja
ffree
lret
lock
fstpl
or
mov
fwait
jg
aaa
add
xor
or
gs
mov
mov
nop
push
lea
out
adc
push
es
xor
jno
xlat
lea
insb
repnz
jbe
lods
bound
pop
xor
test
rorl
xlat
inc
shrb
leave
sub
dec
pop
stos
js
decl
add
dec
xchg
in
ds
loopne
pop
mov
roll
push
sbb
push
xor
imul
pop
sbb
jno
sbb
aaa
adc
lret
add
sbb
arpl
mov
test
push
push
xchg
subb
ljmp
inc
mov
and
mov
popa
xchg
scas
outsb
mov
jo
push
flds
cmp
cmc
sbb
aam
daa
lcall
xchg
shll
icebp
mov
mov
add
cmp
cli
cmp
or
insl
pusha
cmp
loopne
jb
mov
faddp
call
popf
int
push
mov
aaa
jle
ret
sub
mov
adc
rolb
mov
xor
mov
int
pop
mov
cmpsb
lods
mov
sub
fdivr
or
iret
mov
push
mov
dec
outsb
mov
frstor
out
lret
push
popf
mov
mov
stos
ja
pushf
cmp
leave
cmp
mov
adc
lahf
jp
dec
fsubr
pop
add
scas
inc
aad
inc
gs
ret
out
das
leave
jb
adcl
test
add
and
lret
mov
frstor
mov
std
notb
rcll
inc
aad
mov
dec
out
test
xchg
cmp
call
xlat
push
cmp
repz
jle
ficomps
mov
cmp
cmp
mov
stos
push
or
pop
mov
mov
gs
or
sub
push
mov
add
and
mov
inc
mov
jle
fwait
pop
das
dec
aaa
sahf
mov
xor
inc
jnp
mov
adc
ss
adc
inc
inc
mov
jg
aaa
push
xchg
mov
imul
fnstenv
mov
shl
jno
mov
ljmp
iret
mov
sti
mov
xchg
mov
pusha
mov
lcall
scas
mov
movsl
push
pushl
adc
xor
sbb
cld
sbb
sub
mov
cwtl
dec
mov
test
xchg
daa
mov
cltd
jge
ret
insl
popa
stos
daa
adc
sbb
sub
cmp
sarb
mov
mov
fcoms
sub
mov
mov
and
repz
push
mov
sub
push
test
cmp
mov
or
push
sbb
daa
sbb
adc
jns
loope
jo
cmp
in
lock
dec
aad
sub
rorl
rorl
insb
shl
or
xchg
adc
mov
mov
mov
mov
pusha
fists
loop
cmc
push
xor
inc
sahf
negl
loop
cmpsl
mov
imul
inc
lea
xor
je
movsl
jo
stos
outsl
rcll
cmp
xor
pop
dec
scas
cltd
test
jns
jp
movsb
fsubrl
int3
dec
mov
in
cs
in
je
mov
scas
inc
inc
leave
mov
mov
push
daa
or
mov
int3
flds
and
inc
pop
mov
xchg
mov
push
arpl
stos
mov
cs
pop
mov
test
sti
int3
out
cmc
inc
xchg
data16
mov
sbb
sbb
rolb
into
mov
sub
fxch
cmp
insb
pop
outsl
xchg
es
and
aaa
das
rorl
scas
pop
jb
xchg
xchg
and
xor
jae
and
xchg
rcrb
mov
test
cmp
jl
imul
shrb
push
insb
cld
sbb
cs
aas
adc
iret
loop
pop
sbb
mov
pop
in
sbb
push
mov
pop
push
dec
bound
adc
and
mov
jo
test
sahf
cmp
daa
mov
sub
pop
aam
in
out
outsl
xchg
jo
xchg
sub
push
loopne
jmp
add
insb
fmuls
in
mov
push
aad
icebp
ss
fisttps
lcall
std
inc
dec
xchg
test
xor
mov
aam
test
inc
repnz
adcl
push
ret
jg
outsb
sub
movsl
sarl
jge
jecxz
enter
popf
sub
xor
xchg
ss
aam
call
push
pavgb
sub
das
stc
or
ret
test
dec
stos
push
lock
mov
cmp
mov
sub
mov
je
arpl
call
addr16
jg
incb
jp
inc
adc
subl
pop
test
cld
test
inc
push
popa
mov
mov
daa
and
divl
sub
jmp
ret
roll
jle
fucomip
sbb
xchg
fwait
insb
cld
cld
xchg
mov
jg
xchg
adc
and
jo
arpl
fcomip
adc
arpl
imulb
cmp
popl
fcomip
inc
in
les
addl
sbbb
popa
lret
sbb
xchg
arpl
adc
xchg
out
pop
adc
cmpsl
arpl
mov
lock
mov
adc
fs
lea
mov
adc
dec
adc
cmp
xchg
js
mov
fildll
mov
dec
repz
fcompl
shr
mov
movsl
ficoml
hlt
fildl
icebp
mov
decl
mov
or
imul
imul
push
mov
outsl
loopne
insb
ret
bound
in
lahf
inc
mov
lea
sbb
mov
jno
and
insl
ds
rolb
out
dec
jbe
pushf
sub
shrl
jl
bound
and
adc
pushf
sbb
dec
jno
adc
pop
out
and
inc
xlat
push
dec
xchg
push
dec
fcmovnu
mov
sbb
ss
pop
push
adc
xor
decl
repz
mov
ljmp
les
lahf
inc
jbe
xchg
daa
lret
cmpsb
into
push
ss
adc
jp
pop
out
jle
or
test
jp
push
lods
cli
repnz
aam
inc
int
stos
inc
test
shll
adc
xlat
mov
clc
push
push
mov
jno
mov
pop
mov
mov
lock
mov
cmp
pop
sbb
mov
or
sti
mov
add
lods
inc
jne
xchg
ds
iret
mov
pop
push
rcl
sub
dec
xchg
jp
sar
mov
add
pop
in
sti
arpl
repnz
mov
jecxz
xor
xchg
or
pop
aaa
mov
mov
fwait
in
cwtl
lcall
push
test
aad
push
or
pop
sub
or
leave
enter
xlat
jno
out
cwtl
cmpsb
rolb
xchg
jp
and
popf
dec
icebp
ficoml
test
lahf
adc
mov
movsl
push
add
movsl
adc
sbb
xchg
add
daa
scas
xor
xchg
arpl
lret
mov
inc
icebp
imul
pusha
xchg
negb
fdivr
loope
pop
or
in
sbb
lds
dec
dec
jg
test
test
es
cli
ret
jmp
stos
fwait
cmp
pop
sbb
call
out
lods
dec
aam
dec
pop
in
js
mov
scas
sub
mull
iret
pop
cmp
call
mov
pop
js
out
pop
ds
out
outsl
popf
adc
inc
repz
pusha
dec
fwait
lret
aas
inc
add
mov
mov
jbe
mov
gs
out
adcl
test
jle
xorl
push
insw
jnp
add
out
fisubrl
sbb
call
pop
sub
adc
arpl
call
pop
insl
ret
cmp
pop
mov
adc
adc
data16
cmp
cwtl
push
adc
out
jno
push
les
data16
fdivrl
add
cmp
mov
movsl
aaa
jns
mov
sub
xchg
sbb
push
stos
lret
fidivl
es
repnz
inc
add
cmpsl
ja
and
ljmp
arpl
std
popa
adc
jno
add
sub
mov
push
loope
push
and
shll
ja
flds
xor
push
push
and
jae
sub
jns
fstpt
dec
addr16
or
addr16
sub
aaa
push
xor
jmp
stc
mov
outsb
xlat
lret
cmp
je
xor
push
in
cs
sub
lea
stc
xor
or
jl
lods
aam
push
dec
jge
push
jnp
loop
or
cmp
cld
mov
sub
jae
pop
dec
cs
inc
xchg
nop
or
push
test
sub
aas
repz
push
jae
ljmp
aad
cmpsl
sbb
imulb
leave
aaa
jecxz
call
jmp
lods
data16
sub
leave
pop
cmpsb
movsb
ss
aas
inc
in
mov
iret
popf
mov
loope
and
enter
xor
fs
and
inc
sbb
inc
inc
subl
and
mov
inc
fsubs
mov
lods
orl
shlb
sub
out
daa
mov
jmp
es
inc
add
pop
lea
das
and
mov
enter
jp
fbstp
rol
sbb
jl
in
std
mov
pop
pop
repz
cmp
mov
mov
cmp
inc
push
lock
stos
push
ret
ficomps
cmc
cmp
ror
js
mov
dec
dec
in
and
gs
mov
loope
xchg
out
clc
xor
je
mov
and
movsl
lahf
push
pushf
xor
mov
loopne
cmpsl
ret
cld
insl
lods
ret
adc
xchg
inc
or
outsb
cmc
sarl
sbb
and
fbstp
shr
mov
adc
mov
fcoml
xchg
int
inc
mov
stos
loopne
data16
xor
dec
or
mov
xor
hlt
xchg
sti
mov
pusha
aas
and
rclb
ss
cltd
cmp
cld
push
jg
test
movsl
mov
movsl
jle
push
and
adc
cs
push
adc
add
jp
movsb
ja
mov
dec
add
cli
icebp
sub
cmp
mov
mov
jp
or
insb
aam
mov
inc
test
fisttpl
gs
sub
mulb
or
adcb
shll
sarb
and
addb
pushf
fisubrl
mov
inc
cmp
outsl
loopne
mov
jns
insb
jb
leave
push
mov
dec
scas
sti
das
nop
fildll
xor
ja
dec
add
xor
int3
xlat
dec
pop
es
insb
cli
add
cmp
adc
mov
or
leave
sbb
ds
rorl
add
push
sbb
pusha
daa
into
pop
arpl
or
fldenv
or
cmp
pusha
addb
xlat
jmp
inc
inc
std
sbb
subl
nop
fidivs
stos
sbb
push
gs
jne
dec
or
sbb
lahf
add
and
lea
xlat
push
xchg
leave
and
enter
sti
xchg
ret
mov
xchg
push
and
sti
mov
popf
jge,pn
sarb
dec
push
aaa
testb
xor
mov
das
aas
in
sub
mov
andb
es
je
pop
pop
dec
xchg
fidivrs
rep
mov
pop
and
and
jecxz
bound
fisubs
mov
pop
sbb
and
mov
push
fsubrp
cmpl
lds
sbb
scas
or
stos
sub
insl
inc
or
inc
dec
mov
lret
add
frstor
in
test
or
mov
mov
insb
dec
cmpsb
sub
pop
imul
pop
imul
test
adc
or
xchg
lods
clc
cmp
jno
jnp
cmpsb
inc
movsb
repnz
aaa
shr
ror
out
in
cld
addr16
xor
test
ljmpw
test
lea
filds
xor
push
add
icebp
test
stos
lret
mov
insl
out
stc
mov
lret
lods
mov
xor
mov
out
push
pop
insl
iret
mov
push
cmpsl
clc
mov
cmp
pop
xchg
xchg
adc
loopne
cmp
push
cmp
or
leave
fsts
cli
push
cmpsl
mov
mov
sub
idiv
sub
testb
hlt
sbb
mov
jbe
sub
aad
hlt
and
mov
fs
adc
into
outsb
xchg
mov
lcall
pop
xchg
sub
push
and
mov
lcall
add
decl
mov
inc
xlat
push
outsb
pop
push
jmp
iret
pop
mov
xchg
mov
out
mov
and
inc
es
cli
mov
daa
mov
jge
sub
add
jne
and
dec
ja
or
mov
cmp
pop
std
pop
mov
inc
daa
insl
lods
mov
outsb
sbb
add
xor
sahf
cld
in
shlb
dec
push
mov
pop
adc
fs
pop
and
lcall
ss
xchg
fistpl
test
mov
push
and
lcall
movsb
in
scas
repnz
mov
popf
scas
lret
xchg
inc
push
inc
mov
jle
lret
jb
xorb
xlat
push
ds
stos
dec
jg
shll
dec
in
push
in
fidivl
adc
xchg
mov
xor
jns
mov
rcll
mov
ret
test
push
enter
mov
mov
dec
orl
mulb
and
pop
dec
pop
clc
mov
std
arpl
jb
sub
jle
rcrl
inc
test
sub
pop
imul
pusha
arpl
push
aas
mov
mov
dec
dec
adc
test
xchg
int
mov
and
xchg
mov
add
fs
ffree
shrb
adc
mov
and
scas
test
jnp
push
or
shld
rolb
nop
mov
sbb
mov
outsl
shll
leave
dec
push
cmc
rorl
mov
lahf
jg
fdivrs
cmc
scas
pop
scas
xchg
repnz
scas
hlt
jae
in
mov
sub
mov
jmp
popa
loop
shlb
imul
or
cmp
push
ja
dec
adc
inc
and
add
movsl
mov
cmpsl
jae
adc
jl
mov
push
rcrb
movsb
xor
jo
and
adc
dec
xlat
ja
cmp
sbb
or
push
dec
mov
mov
pusha
mov
and
je
xor
and
pop
xchg
mov
add
in
call
mov
rcrl
pusha
std
shlb
sub
adcb
push
fs
push
xchg
or
outsw
cmc
jne
addr16
inc
push
xor
inc
xchg
sub
std
fimull
test
add
addb
lea
jecxz
mov
addr16
arpl
mov
adc
xchg
xor
jge
mov
mov
cmp
xor
lcall
cmp
dec
and
sub
push
inc
dec
daa
enter
mov
stos
inc
cmp
inc
push
bound
sbbl
xor
mov
out
cmp
sbb
out
andl
xchg
stc
imul
xor
mov
sbb
sub
mov
int
xchg
pop
cld
lret
push
adc
sbb
dec
enter
stc
jecxz
pop
scas
out
inc
jmp
je
xchg
ja
lods
cmpsl
pop
mov
out
adc
int
shrl
mov
shll
lods
and
jp
je
int3
or
xchg
sub
sbb
add
scas
js
mov
lods
insl
dec
pushf
out
iret
jmp
mov
shlb
pop
cmp
xchg
test
test
enter
aas
push
sub
scas
sub
notb
gs
pop
add
mov
in
test
les
pop
and
out
test
lock
test
cmpsb
push
ljmp
pop
mov
adc
inc
sar
sub
insl
cwtl
std
pop
js
jp
mov
xor
pop
lret
aas
fisubrl
adc
popa
push
jle
inc
inc
cli
jae
mov
push
mov
imul
xorl
jne
dec
arpl
push
fsub
cmc
pop
fildl
fisubs
je
mov
roll
adcl
cwtl
cmc
rol
add
out
inc
sbb
xchg
cmp
aaa
std
and
sub
aad
cmpsl
dec
aaa
movb
push
fwait
inc
push
out
dec
xor
adc
push
and
and
cmc
dec
jle
fbld
and
inc
fscale
dec
cmpsl
es
movsb
insb
dec
xchg
xchg
std
test
scas
cmp
pop
pusha
push
pop
xchg
sub
inc
xchg
add
push
mov
scas
rcr
add
stos
in
into
shlb
jmp
in
adc
jge
dec
ret
in
adc
fcompl
lea
testb
sub
cmp
sub
out
pushf
cmp
scas
and
cmp
js
mov
cmpsb
and
sbb
icebp
shrl
ja
cmpsl
jnp
adc
jl
loop
test
pop
ds
out
dec
sub
aad
nop
add
jl
cmp
test
aas
or
hlt
notl
into
push
push
loope
push
and
addr16
hlt
addb
jmp
fcoml
insl
nop
adc
ss
in
push
nop
lds
inc
add
mov
in
push
ret
subl
sub
pop
pop
arpl
push
fsubp
insb
sbb
pop
das
divb
xor
aaa
in
movsb
add
inc
xchg
cmp
xchg
mov
aaa
lret
dec
xor
sti
or
push
ljmp
sbb
cmp
cmpsb
insb
xorb
sub
cmp
mov
lods
mov
rorl
lods
test
pop
push
mov
inc
pop
or
mov
sarl
dec
insb
clc
dec
mov
and
lahf
mov
outsl
jecxz
cmp
test
lods
popa
mov
xchg
cmpsb
adc
and
fbstp
add
sarl
mov
dec
cltd
test
jp
scas
dec
push
cmc
gs
sub
jbe
lods
jnp
dec
test
jecxz
adc
mov
rcrl
jmp
fdiv
jns
ss
lods
mov
stc
outsb
iret
adc
andb
repnz
push
xchg
sub
sub
mov
into
mov
popf
cmpsl
je
or
mov
repz
outsl
sahf
daa
cmpsb
test
arpl
mov
or
mov
repnz
test
pushf
pop
imul
jge
insl
mov
push
bound
or
popa
push
push
cwtl
and
dec
out
push
fs
in
xor
jg
popf
out
mov
add
mov
fisttpll
jp
clc
std
leave
ss
ljmp
mov
jbe
cmp
inc
or
cmc
mov
imul
fwait
mov
adc
jge
test
pop
add
pop
cmp
leave
daa
ljmp
pop
xchg
stc
insb
stos
cmp
pop
inc
sub
xchg
mov
pop
jge
cmp
xor
int3
mov
push
inc
push
xlat
mov
xchg
inc
repnz
daa
jle
lcall
mov
adc
pop
pop
pop
mov
ljmp
xchg
adc
mov
fbld
push
int
in
stos
test
fwait
cmp
popf
ljmp
cmc
push
int3
outsl
loopne
loop
mov
xchg
mov
pop
push
xchg
pushf
sahf
lcall
cs
xlat
pop
fs
into
stos
cmp
mov
xchg
inc
mov
pop
lret
pop
gs
dec
icebp
in
jne
adc
pop
movsl
imul
and
add
lret
popa
jle
pop
add
dec
sti
adc
xlat
popa
or
sub
mov
insb
or
pop
sbb
out
and
ficomps
push
pop
mov
jl
add
movsb
cmp
fdivs
mov
xchg
repnz
dec
fists
lahf
and
mov
adcb
xor
sahf
xor
test
and
adcb
int
cmc
cmp
int
stos
outsl
das
fimull
inc
mov
icebp
pop
xor
mov
sbb
aaa
repz
mov
xchg
push
cmpsb
pop
cmpsl
jle
push
sbb
std
lcall
pop
cmp
and
add
push
xchg
mov
aam
fstpl
or
mov
adc
push
int3
fistpll
lret
push
dec
mov
mov
popf
sar
push
ret
insb
in
lret
js
jg
ret
lcall
mov
cmp
dec
scas
mov
mov
cmp
xchg
into
shlb
xacquire
pop
or
sbb
stos
and
mov
sub
repz
test
pop
pop
cs
les
aam
jne
xchg
jo
lods
mov
addr16
push
inc
mov
inc
das
add
jae
push
in
jb
or
mov
aam
push
xchg
or
inc
shlb
inc
rcl
inc
andb
and
jl
adc
and
aam
sti
std
xchg
push
or
outsl
fs
in
mov
and
mov
dec
dec
mov
ds
sbb
mov
daa
into
adc
mov
ja
std
adc
push
orl
sti
iret
lea
inc
sahf
add
lods
ret
loopne
mov
ljmp
add
jmp
shlb
in
mov
sbb
out
sbb
sahf
cmc
sub
xchg
or
push
icebp
dec
lods
mov
mov
scas
imul
xorb
add
fdivr
or
or
pop
out
ja
jns
and
decb
arpl
add
clc
jnp
lock
push
push
sbbl
das
xchg
aad
jbe
es
xor
xchg
in
adc
inc
inc
xchg
sahf
loope
lods
leave
shl
outsl
popa
cmp
sbb
fmul
ljmp
push
and
pop
mov
inc
jne
sub
mov
dec
ja
fs
adc
stc
outsb
inc
and
sarb
adc
repnz
dec
popf
adc
insb
sub
jmp
add
movsl
neg
adc
sbb
std
fnsave
das
pop
xlat
shrl
cli
scas
xchg
aam
inc
fldcw
push
pushf
leave
jge
dec
ficompl
pushf
imul
stos
sbb
cmp
arpl
sbb
and
daa
pusha
out
je
iret
push
mov
push
cmc
rcrb
sar
pop
aad
lret
push
sbb
stos
mov
pop
or
outsb
scas
pop
fistps
gs
cmp
mov
cltd
sub
insl
arpl
in
pop
mov
sub
sbb
and
sub
out
cmpsb
addr16
lret
sti
outsb
aas
push
pusha
xor
scas
xchg
dec
adc
pop
jecxz
mov
addl
test
sub
int3
fcmovu
sbb
pop
jle
adc
and
test
and
and
lods
je
or
nop
xlat
aaa
pop
or
push
in
sbb
out
xchg
pop
lds
xchg
popaw
jmp
mov
xor
ljmp
sub
push
cmc
sub
inc
lock
xor
dec
fsubrs
cmp
aas
push
jno
std
loope
sbbb
mov
jnp
sbb
ret
insl
xchg
dec
loope
cmp
icebp
xchg
lods
popf
mov
jg
sub
sub
jns
rcl
arpl
rcll
fs
sbb
leave
out
dec
pushl
andl
xchg
ds
call
push
pop
or
push
push
imul
inc
jbe
mov
xor
roll
push
jle
adc
xchg
pop
outsl
xchg
push
scas
hlt
cmpl
or
pop
out
std
sbb
iret
and
jl
mov
push
pop
mov
test
inc
movl
aam
in
adc
sbbl
dec
cmp
in
lret
stos
pop
sub
leave
cltd
mov
aam
dec
ds
adc
mov
pop
jne
lret
repz
lahf
jle
bound
dec
fisubs
cmp
push
pop
jo
jmp
jle
adc
shl
xchg
cmp
dec
paddsb
decl
and
stos
je
mov
add
dec
xchg
jg
ret
scas
mov
inc
fdiv
clc
fildl
and
hlt
mov
pop
push
jne
push
push
adc
sub
push
push
ja
movsl
in
inc
jle
mov
push
fstp
adc
stos
loop
data16
sub
popa
arpl
adc
test
or
pop
sub
pop
xchg
test
mov
mov
sub
mov
mov
rcl
xchg
or
sub
jmp
adc
and
sub
add
in
scas
add
bound
push
or
xchg
pop
xlat
and
sarb
btc
mov
jmp
in
inc
in
lcall
mov
inc
sti
push
mov
shlb
cmp
in
dec
aam
mov
hlt
pushf
add
ret
xchg
nop
out
push
icebp
pop
pop
mov
dec
or
mov
imul
mov
repnz
in
or
fnstenv
rcrb
pop
jle
xchg
pop
mov
mov
adc
lret
xchg
jle
add
or
mov
imul
pop
lds
push
std
pop
adc
mov
je
pop
or
out
dec
lret
int
mov
jmp
pop
or
sub
fsubrs
les
bound
fwait
pop
mov
jp
cmp
shlb
cld
xchg
cmp
lahf
mov
mov
pushl
stos
fdivrl
popa
dec
mov
mov
sbb
or
repnz
sub
dec
inc
shlb
aaa
lea
mov
notb
xchg
dec
mov
in
repz
int3
mov
cmp
hlt
fcompl
pushf
sub
sti
outsl
pushf
push
ljmp
adc
aaa
popa
leave
enter
or
xlat
add
sbb
repnz
ja
test
xchg
sahf
xchg
or
je
out
xor
mov
test
and
ljmp
into
mov
in
popf
sub
inc
push
dec
lret
mov
push
enter
mov
sarb
cmp
sbb
mov
imul
or
mov
inc
adc
and
popa
fisttpll
jo
xor
jns
ja
adc
enter
es
lea
xchg
and
pop
dec
outsb
mov
xchg
imul
cli
pop
outsl
mov
mov
jnp
movsl
xchg
pop
cmpsb
insl
inc
adc
xor
dec
fwait
xlat
shll
outsl
out
inc
rolb
mov
repnz
lret
outsb
scas
dec
jb
push
leave
test
loope
mov
mov
xchg
or
pop
mov
inc
test
jmp
mov
or
frstor
xor
sbb
adc
pop
add
int3
push
xor
fs
add
mov
mov
mov
inc
pop
sbb
jo
aad
mov
test
xor
sbb
xchg
pop
fwait
mov
cld
addb
mov
mov
or
mov
sahf
call
int3
jle
mov
xor
jecxz
and
xchg
pop
in
or
iret
mov
iret
or
orb
pop
cli
adc
mov
and
sti
das
push
call
in
pop
xchg
xorb
pop
adc
scas
outsl
push
repz
dec
inc
jo
jp
xchg
inc
cmc
inc
xor
ret
aad
dec
in
insl
addl
pushf
or
xor
dec
jb
add
rcrb
pop
cmp
flds
in
pop
or
cld
sti
mov
add
inc
push
adc
add
push
mov
insb
mov
nop
icebp
mov
dec
mov
cli
loop
repz
or
fistpll
jno
rcrb
cwtl
cmp
xchg
push
jmp
sbb
xor
mov
les
or
lret
and
pop
xor
in
sbb
mov
dec
xlat
mov
xor
add
adc
into
stc
aaa
add
dec
sbb
cwtl
xchg
mov
dec
sub
test
adc
testb
test
movsl
pushl
aaa
test
pop
mov
pop
lcall
test
mov
mov
cmpsl
fidivrs
push
cli
mov
jp
inc
aad
lahf
sbb
push
int3
pop
ret
imul
movsb
fsubs
sub
popf
andb
or
inc
lret
add
jae
fwait
inc
ret
imul
mov
daa
mov
mov
cs
lea
mov
sti
jno
mov
ljmp
rcl
sub
rorb
mov
fnsave
imul
adc
cmp
sub
adc
adc
pusha
jp
push
das
in
cltd
leave
loopne
sub
mov
fstpl
add
gs
popl
out
adc
inc
push
inc
jle
movsl
lcall
adc
xchg
push
test
out
push
pop
inc
loope
ds
jne
test
out
and
lock
dec
pusha
jmp
and
dec
enter
andb
or
iret
jle
xchg
jbe
adc
out
movsb
arpl
mov
lods
dec
push
imul
or
jmp
ja
cmc
and
and
or
in
incb
neg
test
jl
sbb
repz
adc
jo
xchg
pop
xchg
cmpsl
inc
or
push
iret
cmp
fs
lret
push
jmp
mov
notl
data16
pop
out
fisttpl
sti
or
sbbl
adc
mov
fsub
mov
sub
sbb
stos
sbb
jnp
add
mov
andb
and
mov
xchg
repz
fmul
fs
jmp
loopne
mov
mov
xchg
out
sub
or
inc
mov
scas
push
aad
and
cmp
fs
sub
test
outsl
pop
scas
sbb
movsb
leave
xchg
into
push
mov
call
adc
or
mov
add
adc
outsb
xor
js
leave
push
fimull
fstp
pop
repnz
lahf
mov
sbb
push
data16
repnz
and
ror
into
stc
cmpsl
sub
gs
jns
lcall
mov
mov
mov
cmpsb
push
jb
scas
mov
sub
dec
lods
push
mov
mov
sahf
rorl
movsb
ss
xchg
in
push
xchg
dec
mov
cmp
dec
insb
pop
sti
fidivrl
fisubrs
cmpsb
mov
and
or
and
mov
scas
cld
jns
sub
lods
push
out
add
sub
test
movsl
sbb
stos
inc
sbb
into
xlat
mov
pushf
outsl
aas
sbb
inc
outsb
aaa
subl
xchg
rclb
sub
push
js
cs
out
xchg
jmp
popf
mov
and
and
sbb
adc
pop
sub
inc
jge
std
adc
lods
rclb
sbb
popa
les
push
hlt
pop
mov
jbe
cmpsb
fsts
jecxz
push
push
fsubs
mov
in
dec
mov
es
fcoms
push
mov
sbb
lock
mov
cmp
adc
fisubrs
subl
clc
out
cld
adc
pop
adc
lods
push
push
sbb
cmp
lahf
loop
mov
and
mov
cwtl
sbb
inc
arpl
jle
call
mov
inc
cmpsb
xor
sbb
adc
mov
adc
jb
or
stos
test
aam
xchg
add
xchg
adc
dec
pushf
cmp
cmp
je
movsl
test
ret
or
mov
lods
iret
add
in
das
push
dec
or
xor
pop
decb
pop
leave
mov
out
pop
fiaddl
call
lock
xor
in
and
dec
mov
mov
jnp
setno
xchg
pop
stos
jo
lcall
pop
cmp
xchg
out
pop
test
ja
fs
xor
test
pop
punpckhbw
jge
into
cmp
pop
ja
imul
test
pop
rcrb
adc
cmp
dec
xor
xchg
pop
push
mov
leave
ss
stos
fldl
sbb
stos
xlat
mov
sahf
ret
mov
rcrb
iret
push
xchg
lahf
sub
cld
adc
inc
stos
lods
cmp
sbb
shll
cmpsb
cmc
sbb
nop
pop
out
movsl
mov
mov
cmp
fcmovnb
xchg
xor
mov
push
sub
popf
and
icebp
testl
gs
es
movaps
outsl
pop
sub
movsb
mov
dec
xchg
mov
jecxz
lcall
inc
arpl
jne
adc
call
addr16
and
xor
jmp
addb
ss
push
adc
jg
cwtl
pop
xchg
addr16
rcll
cld
in
xchg
sahf
arpl
pop
pusha
popf
call
cmp
test
loop
sahf
std
mov
shl
and
mov
scas
pushf
mov
test
insl
xlat
sub
fnstenv
jne
mov
jno
add
dec
push
xchg
sbb
rcl
movsb
ljmp
add
xchg
repnz
xchg
jne
ljmp
xor
push
jg
lods
mov
lret
xchg
and
lret
jge
mov
test
ret
adc
das
adc
and
mov
aad
out
push
push
pusha
stos
push
pop
inc
pop
popa
jge
mov
movsb
mov
push
push
xchg
popa
orl
cmp
xor
pop
pop
cld
push
mov
push
insl
lea
lea
or
cs
lret
jb
push
test
div
out
outsb
cmp
push
lea
adc
mov
inc
jge
mov
and
aaa
aad
scas
das
adcb
fs
popa
push
mov
mov
dec
sbb
addr16
cmc
gs
push
cmp
fidivrl
imul
sahf
std
rorl
cmc
std
mov
sbb
sbb
xlat
in
dec
jge
add
loope
rcrl
int3
sub
sbb
fadd
rol
stos
sub
iret
cltd
iret
sbb
pop
sbb
insl
inc
sbb
pushf
pop
cltd
fwait
int3
mov
add
cld
push
or
clc
iret
pop
pusha
popf
cli
cmpsl
mov
in
insl
and
push
adc
xchg
xchg
aas
or
pop
mov
stos
cmp
stos
and
sbb
arpl
pop
inc
xchg
sahf
xor
xor
jb
les
cs
sub
jl
shll
outsb
push
lea
xor
cmp
add
cli
inc
jl
xchg
icebp
test
mov
shll
imul
dec
mov
into
daa
ja
push
add
push
movsl
cli
leave
jnp
mov
pop
lods
add
ds
jbe
mov
mov
icebp
dec
push
pop
sub
movsl
insl
aaa
push
sub
mov
xchg
out
enter
xchg
ds
mov
mov
sub
jbe
or
aas
add
movb
popa
jnp
icebp
xor
push
jl
jae
std
loop
mov
jl
jg
rcrl
add
xor
jno
push
or
xchg
out
mov
lret
movb
inc
rcrl
cmp
sahf
mov
sbb
and
fimull
fdivrs
sbb
pop
stos
test
cmc
das
pop
sbbb
orl
dec
jecxz
xor
outsb
xchg
pop
ret
mov
enter
cli
pop
popa
data16
test
jne
jb
mov
clc
or
hlt
test
jle
sub
xchg
pop
sbb
or
xor
popa
pop
jne
in
mov
xchg
es
mov
jmp
leave
out
add
aaa
aaa
xchg
es
lods
int3
push
cmp
ret
pushw
out
push
lods
and
pop
lock
xchg
mov
aam
imul
out
test
clc
xor
mov
es
jnp
dec
dec
push
in
cmp
xchg
or
cltd
pop
inc
shrb
add
negb
nop
xchg
push
xor
call
scas
push
pushf
xchg
push
add
mov
out
lcall
sbb
bound
sub
ljmp
aam
sbb
push
in
test
mov
leave
push
test
sahf
push
decl
or
dec
lds
mov
les
fs
push
jge
stos
push
xlat
sub
or
mov
cmp
jnp
sbb
sub
pop
sub
aaa
cmp
ljmp
movsl
push
lea
cmpsb
sub
lcall
jo
xchg
in
push
int3
pop
dec
lret
scas
and
dec
ret
popa
mov
lcall
out
sub
scas
mov
jmp
nop
enter
in
xchg
or
mov
popa
pop
ret
repnz
sub
out
jge
lcall
test
and
movsb
and
sub
fwait
mov
in
cmp
mov
pop
shl
dec
popa
xchg
xchg
mov
mov
fld
push
pop
jg
rclb
incl
aam
push
roll
popa
icebp
push
es
into
sub
push
movsl
dec
pop
sarl
ss
and
repnz
icebp
add
fwait
dec
jmp
test
enter
or
outsb
loopne
mov
pop
insb
pop
mov
mov
imul
or
repz
loopne
sub
aad
mov
mov
xor
sar
cmp
inc
test
sub
loope
fsubl
push
mov
repz
test
stos
adc
les
push
push
inc
xchg
mov
out
dec
inc
mov
addr16
inc
loop
insb
mov
or
fdiv
mov
jns
notb
mov
shrb
cs
dec
push
test
mov
dec
cltd
mov
ds
test
lds
or
dec
add
std
scas
pop
mov
mov
or
or
xchg
or
jne
cs
push
jg
gs
idivb
xchg
loope
sahf
inc
xchg
sbb
mov
dec
je
cwtl
jge
cmc
mov
adc
lock
les
mov
mov
cmp
xchg
data16
push
ja
fiadds
inc
addr16
stc
adc
push
std
sub
add
push
das
xor
xchg
sbb
and
stos
in
sti
lea
pop
jbe
sub
mov
xchg
add
mov
ret
xor
cmp
roll
std
push
inc
jae
sub
lcall
or
lods
in
int3
sbb
clc
mov
dec
add
dec
scas
mov
mov
adc
inc
jne
and
popa
rcl
mov
in
lods
fmul
mov
or
and
out
mov
faddl
test
jp
daa
dec
dec
jge
pop
cmp
inc
xor
ss
or
fwait
xor
daa
or
rclb
pop
icebp
sarl
cmp
repnz
sbb
inc
pop
xor
iret
sbb
inc
dec
mov
cli
sbb
ds
dec
scas
mov
cmp
jae
sbb
leave
jbe
pop
sub
iret
mov
jo
push
stos
mov
dec
call
stos
cmp
cmp
insb
adc
mov
testl
add
adc
xchg
mov
ret
push
xchg
mov
arpl
lret
push
cmp
pop
mov
pop
vprotb
xor
and
jmp
adcb
mov
test
imul
and
and
iret
bound
cwtl
inc
cmp
mov
mov
scas
jne
fmull
rorb
sbb
and
fwait
enter
repnz
and
sbb
dec
mov
xchg
sahf
mov
xor
les
mov
xor
dec
imul
fstpl
sbb
mov
xchg
xor
dec
hlt
or
push
mov
jns
inc
and
and
jecxz
mov
sbb
sbb
outsl
out
or
mov
and
divb
cmp
adc
pop
lock
sarl
dec
sbb
xchg
ret
jno
aas
icebp
sbb
pop
fsubs
inc
sbb
iret
jle
aad
inc
les
dec
push
push
push
lret
fstpt
and
xor
loope
adc
sti
push
sub
test
cwtl
and
sub
mov
pop
mov
pop
and
stc
out
adc
mov
inc
cmp
inc
imul
test
rcrl
lock
pop
push
pop
jmp
test
lahf
xor
inc
pop
inc
ds
cmp
xchg
pop
fidivl
movsl
fidivrl
lods
inc
es
cmpsl
cwtl
pop
pop
insb
jns
xchg
add
je
inc
sbb
xchg
jae
push
jne
mov
in
pop
movsl
and
cmp
js
das
mov
cmp
mov
ret
loopne
iret
ds
out
inc
sbb
push
lds
rol
fdivl
dec
xlat
xchg
notl
jle
mov
outsb
cmp
mov
lods
push
jle
lds
movsb
lock
out
mov
cs
shll
into
in
add
push
dec
and
out
xchg
gs
jmp
fwait
xor
loope
sub
leave
xchg
or
xchg
jb
daa
jns
jmp
lds
lret
mov
es
mov
pop
jbe
std
fisttpll
test
sub
hlt
jae
arpl
fisubs
test
test
pushw
inc
cmp
data16
lret
leave
push
jae
mov
fwait
shl
mov
xchg
fisttps
sub
sbb
mov
loope
jno
pop
adc
cld
notb
sarb
push
sbb
jmp
sub
push
das
sub
out
loop
ja
jge
xor
mov
sub
sbb
cs
stc
cmp
cmc
aam
mov
cmp
or
arpl
data16
jle
out
lods
fcompl
lods
sbb
fwait
pop
push
inc
lods
mov
add
out
pop
inc
das
addl
icebp
mov
and
ret
mov
imul
adc
jmp
push
jp
inc
lods
pop
jmp
pop
mov
jg
xchg
lock
scas
lcall
outsb
cmp
lds
ss
xor
cmp
xchg
outsl
out
loop
out
int3
les
inc
adc
or
inc
push
cld
sub
std
jl
cmp
mov
stos
call
pop
jle
pop
lods
dec
pop
nop
jecxz
call
in
addb
add
xor
in
ret
mov
movb
add
mov
and
and
adc
fldenv
jno
lock
lret
or
cmpl
push
shll
outsb
cmpsb
jp
sti
test
jle
mov
mov
fcompl
das
jp
sbb
mov
adc
mov
enter
dec
mov
pop
push
adc
lds
xor
sub
ret
inc
repnz
out
jbe
and
test
add
push
stos
fisubrs
xor
mov
dec
lods
and
fwait
mov
xchg
cmp
adc
push
mov
cmpsl
mov
add
fcomp
sbb
std
cld
push
shlb
mov
sbb
xchg
mov
nop
or
out
je
jge
lock
dec
pop
sub
insb
cmp
and
test
jbe
mov
out
jbe
push
xchg
dec
pop
pop
cli
mov
in
jnp
pop
adc
mov
inc
jnp
xchg
in
jl
in
adc
xor
adc
gs
xchg
push
or
and
int3
imull
movsb
ljmp
mov
or
mov
or
pop
in
cmp
push
ficoml
loope
xor
je
aad
fsubs
cwtl
fistl
dec
cmpsl
push
mov
adc
stos
mov
mov
arpl
nop
xor
add
sbb
push
movsl
cli
lods
fst
pop
adc
shll
xchg
sbb
out
nop
mov
push
lret
cmp
xchg
addl
shll
lds
push
lods
adc
out
negb
mov
push
in
aas
add
push
or
mov
in
mov
sbbb
dec
jmp
shlb
push
lcall
sti
mov
push
or
mov
fdivrp
test
pop
cld
xorb
mov
pushl
push
aad
inc
sbb
sbb
xchg
stos
dec
fcmove
mov
mov
xor
cmp
cmp
sbb
dec
cmp
out
sbb
adc
adc
inc
mov
jns
jo
daa
push
jbe
ficompl
aam
int3
jnp
push
dec
lret
push
cmp
lock
push
push
push
add
stos
iret
mov
fistps
outsl
xlat
or
or
jmp
cmp
sarl
repz
add
leave
insb
mov
mov
cmp
fs
xchg
and
decl
inc
pusha
add
xlat
leave
call
mov
jle,pt
adc
xchg
adc
fists
sbb
xor
cmpsl
pop
shr
push
sub
mov
jg
push
and
ds
call
arpl
xorl
sarb
in
std
mov
test
dec
fstpl
and
cmp
test
xor
cmp
stc
clc
pop
fiaddl
cld
lods
xor
fnstsw
roll
mov
cmp
or
pop
xor
mulb
clc
int3
hlt
aaa
sub
dec
pop
sbb
jb
sbb
adc
enter
sub
jge
lret
xchg
pop
mov
les
test
mov
pop
imul
mov
and
scas
mov
sbb
fsub
push
test
icebp
add
jle
int
lods
lea
push
push
mov
jno
dec
aaa
je
mov
bnd
test
aam
ficompl
fmull
xor
dec
or
pop
cmp
mov
mov
das
mov
cmp
jg
frndint
loope
iret
popa
add
addr16
test
mov
or
add
push
sub
cmpsl
mov
je
jmp
repz
and
adc
push
inc
orl
aad
nop
addr16
outsb
sbb
dec
es
into
pop
test
das
sahf
adc
lret
test
mov
mov
pop
mov
das
adc
repz
push
cltd
out
test
push
pop
ljmp
test
xchg
imul
ret
cs
pop
push
adcl
push
cli
mov
xchg
adc
cmc
lret
push
xor
add
stos
jg
std
pop
push
xchg
or
jo
popa
sub
pop
dec
out
popf
test
cmp
xor
xchg
sub
add
mov
shll
in
mov
mov
add
cwtl
bound
stos
shr
mov
imul
scas
rcr
int
inc
mov
push
loope
add
rcrb
test
xor
lock
shrl
jmp
aas
jno
pop
mov
mov
dec
mov
aaa
jno
sbbb
adc
std
data16
outsl
pop
repnz
daa
or
mov
adc
lcall
xor
jnp
push
dec
outsb
into
pop
or
ret
int
mov
mov
xchg
fiaddl
test
int
call
test
xchg
test
push
sbb
mov
mov
inc
mov
mov
cltd
pop
mov
push
mov
hlt
jl
inc
push
or
cwtl
mov
mov
mov
cmp
scas
loopne
hlt
mov
xchg
ljmp
dec
ret
stos
add
ss
outsb
xor
les
inc
cmp
sub
push
enter
mov
add
dec
jp
jg
and
es
push
sub
icebp
pop
push
lcall
mov
scas
pop
ret
loop
lahf
les
pushf
mov
cmc
shlb
xor
fidivrl
in
dec
pop
stos
dec
outsl
or
sti
sub
jnp
subb
int3
std
pop
rcll
push
pop
xchg
xchg
push
xor
repnz
xchg
loope
mov
jmp
mov
dec
mov
into
xchg
mov
je
cmp
fidivrl
sub
xchg
das
movsb
out
test
divl
das
dec
mov
addl
cld
ja
orl
shlb
rcrb
movl
mov
repnz
jle
jmp
pop
imul
pop
loop
fsub
enter
popf
and
aaa
clc
data16
mov
or
sbb
scas
int3
mov
mov
aad
xchg
lea
cmp
xchg
mov
xlat
aam
mov
dec
jne
call
popa
sub
out
pop
mov
pinsrw
xchg
repz
pusha
jnp
jecxz
sbb
xchg
std
xchg
xchg
sbb
xor
sub
mov
and
out
cmp
or
push
aaa
js
dec
popa
scas
and
int
cltd
jnp
adc
mov
lods
add
loope
mov
aaa
fldenv
cmp
popf
mov
int
mov
push
scas
inc
push
shlb
pop
sub
test
or
pop
jg
lds
and
sti
cltd
sbb
xor
pusha
adc
fstpt
xchg
int3
and
pop
scas
rclb
jmp
test
popa
add
movsbl
cltd
leave
jnp
popa
mov
inc
popf
mov
sub
dec
cmc
mov
or
xor
mov
lahf
cmp
push
mov
mov
push
push
cli
dec
ds
sbb
js
add
cmc
jge
outsl
popa
outsb
mov
insb
sti
jns
mov
adc
or
add
cltd
inc
arpl
fstpt
enter
mov
mov
aad
or
into
into
in
test
mov
pop
mov
push
xchg
mov
pusha
das
popa
loop
xor
add
and
ss
mov
mov
test
xor
add
lea
dec
adc
scas
xchg
stos
pop
into
sbb
sti
gs
adc
push
jle
in
cwtl
cmp
mov
add
xor
mov
xchg
sbb
jmp
mov
lret
mov
call
scas
in
or
push
pop
fdivp
ret
mov
pop
push
mov
les
mov
imul
jnp
cltd
cwtl
xor
ret
xchg
dec
gs
cmpsb
int
push
sbb
scas
lea
inc
dec
and
mov
test
fs
sbb
test
or
ja
mov
push
cmp
mov
ljmp
sbb
ret
inc
xchg
and
mov
mov
mov
push
mov
inc
mov
sti
scas
stos
arpl
pop
pop
fwait
push
loope
aad
add
sti
js
xor
push
dec
fcmove
or
jbe
pop
fdiv
shl
jb
sub
aaa
push
mov
push
inc
jle
andb
aam
stc
pop
stos
dec
cs
jle
xor
sub
jns
add
test
mov
inc
jno
int3
lods
mov
dec
or
jle
fnstcw
inc
xchg
dec
fs
xor
jb
xchg
inc
and
xchg
dec
jl
fsubrs
cmp
repnz
cltd
int3
xor
mov
or
aad
pop
jns
in
das
xchg
and
movsl
into
aam
mov
das
aaa
push
inc
ss
cmpsb
jge
mov
add
call
sbb
data16
es
rorb
daa
out
xchg
jae
mov
aam
xor
ss
ljmp
nop
mov
mov
and
cmp
sarl
sbb
int
jb
js
push
dec
mov
sbb
imul
arpl
mov
es
insb
mov
inc
out
push
jo
jne
out
cmp
xchg
popf
dec
xchg
push
ret
or
mov
jae
xor
mov
xchg
mov
jl
insl
movsb
outsb
addr16
and
mov
jp
mov
or
push
dec
adc
movsb
push
push
hlt
jg
xchg
xchg
xchg
and
sbb
mov
lea
loopne
jae
ret
xchg
cmpl
sub
out
adc
fdivrl
cmp
movsl
into
or
cli
xchg
std
or
lock
icebp
insb
push
xchg
pusha
xor
sub
pop
testb
jg
push
shlb
jbe
pop
idivl
xorl
stos
or
mov
xchg
cmc
fidivrs
jo
inc
mov
mov
push
xor
mov
mov
mov
sahf
aas
mov
push
in
jge
shll
mov
movsl
xchg
xor
add
inc
push
dec
or
loope
les
out
loopne
mov
jmp
lret
jne
fists
lods
sub
fcmovnu
addr16
xchg
jno
add
inc
jmp
incb
or
xchg
cmovg
mov
or
rclb
mov
add
ja
jmp
inc
dec
push
push
adc
fs
movlps
rclb
push
and
cmc
xchg
sub
mov
mov
es
lea
repz
dec
mov
subb
sub
dec
xlat
cmp
stos
or
or
inc
pop
lods
pop
mov
push
or
sbb
xor
mov
mov
loope
jge
fs
push
ljmp
and
es
cwtl
dec
cmp
push
fistpl
roll
push
mov
mov
pop
xor
push
out
mov
clc
adc
in
and
ror
mov
and
adc
mov
divl
xchg
inc
cmp
dec
mov
imul
mov
cltd
cltd
das
cmp
testl
out
out
xchg
jae
pop
mov
mov
sbbb
cmpsb
pop
dec
in
imul
in
out
rclb
inc
sbb
cmpsl
scas
sub
and
sbb
loopne
out
and
dec
jns
adcb
data16
add
push
repnz
lret
cmp
mov
jb
push
adc
in
or
jecxz
xor
test
lcall
fdivs
jae
push
add
cmp
dec
jmp
stos
and
loopne
pushf
je,pn
hlt
shrl
lcall
jne
mov
in
pop
divl
mov
xchg
jb
mov
sbb
sub
aas
mov
stc
enter
jae
adc
ljmp
lahf
in
pop
xchg
add
aas
jb
aam
rorb
adc
fwait
out
movsb
jp
in
cmp
lret
je
xchg
mov
out
incl
push
inc
test
or
imul
xchg
nop
test
mov
xchg
sub
sub
popa
int3
add
insb
js
hlt
jge
add
shll
xor
rcll
out
mov
aas
test
mov
mov
cld
jnp
xchg
cli
pusha
ds
push
sbb
pop
xor
loope
icebp
or
jae
cmp
dec
push
minps
repz
rcl
mov
mov
inc
mov
ficoml
out
shll
push
mov
mov
cmp
lock
hlt
mov
xchg
in
sahf
int3
outsl
sbb
jge
int
out
mov
push
imul
imul
ret
sbb
pop
ds
dec
add
dec
shrl
adc
mov
dec
inc
mov
in
icebp
ret
fucomi
or
andl
push
xchg
lea
mul
ljmp
xchg
mov
test
outsb
xor
dec
xchg
stos
sar
aad
mov
jp
ret
repnz
mov
xchg
aas
inc
inc
ss
fnsave
push
sub
xchg
jge
mov
into
jecxz
xor
ret
scas
outsl
sbb
stos
cmpsb
sub
pop
pop
outsb
js
sbb
xchg
sub
sarl
mov
std
repz
push
insb
pushf
lret
push
mov
dec
stos
jbe
lods
lahf
push
jbe
pusha
mov
sbb
sub
popa
mov
fildl
imul
mov
insl
call
or
jnp
sub
fldenv
cs
cmp
and
cmp
adc
pop
scas
cmp
std
mov
imul
jl
outsl
bound
in
xlat
xchg
push
and
fmuls
psubq
jb
jle
push
test
call
ret
xor
mov
inc
hlt
or
mov
xlat
cmp
cmp
int3
pop
ds
mov
lods
bnd
aam
inc
pushf
test
xor
push
loope
arpl
sti
mov
adc
dec
fcmovbe
fnstcw
movsb
dec
sbb
and
pusha
addr16
push
or
cltd
movsb
and
adc
add
pop
cmp
fnstenv
cmp
sbb
leave
stos
mov
jmp
fiaddl
add
cmc
mov
pop
lea
js
mov
dec
jmp
mov
cmp
subl
inc
mov
pop
icebp
mov
inc
pop
sub
pop
jne
inc
stos
out
lret
aad
ljmp
arpl
imul
ss
loopne
in
cmp
dec
loopne
adc
push
xchg
pop
mov
xchg
pushf
fbld
sub
jp
or
sub
mov
sbb
jmp
cmpsl
lret
jb
dec
out
push
ljmp
leave
mov
inc
xor
adc
lock
mov
loope
push
adc
inc
popf
dec
pop
jns
cmp
fs
das
sarl
xlat
fidivrs
and
movsl
cmc
dec
mov
punpcklwd
adc
cmpsb
dec
xchg
es
shlb
sbb
pop
addr16
mov
pop
push
inc
sub
lds
jo
jecxz
xchg
roll
xor
mov
adcl
arpl
jbe
xlat
out
mov
jbe
xor
xorl
data16
adc
jo
jnp
pop
sub
shrl
loopne
push
and
div
clc
mov
pop
nop
insl
in
mov
sub
shl
movsl
xchg
xor
mov
jmp
mov
add
cmp
int
in
mov
cmp
hlt
and
popf
enter
divb
sbb
call
in
lahf
jmp
or
ret
cs
and
push
xchg
arpl
xorl
sub
jbe
or
mov
cmp
inc
les
xor
pop
mov
in
mov
mov
dec
nop
test
out
lret
lahf
or
xor
clc
inc
xchg
ret
or
call
fstpl
fidivs
xchg
imul
popa
dec
cli
push
mov
pop
lret
pop
mov
xchg
sub
out
pop
lds
jne
push
xchg
xbegin
outsb
test
loope
clc
or
pop
mov
repz
repz
xor
mov
add
decl
roll
and
jae
mov
sbb
mov
movb
dec
push
cmp
push
loop
jne
fimull
mov
cmpsb
test
sub
pop
adc
shl
cmp
nop
mov
sti
addl
je
push
xchg
sbb
fwait
push
xchg
inc
xor
repnz
push
push
sub
ret
xor
fidivs
adc
sti
cltd
xor
mov
mov
sarl
jecxz
pop
movsb
sub
popf
add
lcall
loop
mov
add
int
addr16
les
mov
push
mov
sti
bound
mov
dec
addr16
bound
mov
setge
loope
mov
repz
sbb
cld
add
cld
repnz
mov
test
int3
mov
xchg
xchg
jnp
mov
das
loopne
cmpsb
inc
icebp
loope
pusha
call
inc
add
jl
push
sbb
cltd
aam
fwait
addb
in
test
jmp
xor
insl
outsl
dec
pop
cld
mov
adc
filds
in
cmp
mov
and
in
mov
popf
inc
out
sar
mov
dec
repnz
movsb
fadds
or
jne
inc
test
mov
imul
mov
ret
out
mov
jo
mov
decl
pop
and
clc
lret
enter
inc
fsub
push
cli
addr16
sub
mov
sub
enter
adc
mov
lds
cli
outsb
mov
xchg
popa
ja
or
xchg
out
jb
std
lcall
fisttps
jnp
imul
lds
sbb
fnsave
out
sub
pushf
mov
lea
into
sub
ds
popl
popf
and
jp
arpl
xchg
test
ficompl
xor
out
adc
jecxz
repz
test
mov
ja
popa
sub
outsl
xor
clc
sub
mov
sbb
idivl
imul
cltd
rclb
pop
xlat
repz
sub
loopne
xor
jae
jge
scas
and
xor
loope
loopne
inc
inc
mov
inc
leave
jl
icebp
in
fildll
hlt
dec
pop
es
lcall
add
cli
hlt
lods
rorl
mov
fwait
testl
out
and
jne
push
pop
outsb
dec
bound
data16
fisttps
add
outsb
lcall
push
inc
or
inc
rclb
enter
push
cltd
sahf
mov
fs
add
test
adc
add
int3
mov
sbb
in
dec
fisubs
jb
nop
cmp
push
fsubrs
fcoml
cmp
inc
pop
pop
mov
aam
fisubl
test
pop
mov
aam
lret
int3
jle
imul
mov
int3
xlat
inc
cmp
arpl
cmp
pop
in
ror
jle
mov
ss
mov
call
and
adc
sarl
dec
push
ds
shll
fwait
lock
adc
jo
xor
lds
and
rclb
das
jno
orl
fwait
outsl
lahf
xlat
fadd
cmp
mov
or
xchg
xchg
push
xchg
mov
sub
add
mov
xor
xor
lret
pop
jno
mov
das
ret
lret
imull
rolb
xchg
sti
out
push
int
fdiv
call
jns
mov
add
add
cmp
mov
mov
es
or
aaa
inc
push
movsb
sub
pushf
cltd
xchg
xchg
inc
scas
xchg
out
cmp
xor
fdivrp
push
ficoms
outsb
stos
mov
out
aad
data16
movsl
sbb
push
mov
jns
adc
push
into
cli
adc
push
je
jle
movsb
daa
xchg
or
pop
xor
lahf
jae
sbbb
les
xchg
mov
cmp
mov
xor
or
shrl
ss
sti
sub
push
add
mov
sub
es
vmovaps
fsts
sarb
mov
imul
adc
jne
ret
hlt
testb
sbb
aad
sbb
loope
push
sub
cli
ljmp
cmp
xchg
add
sub
mov
mov
aad
insb
lods
xor
test
mov
xor
data16
xor
bnd
jle
ljmp
sbb
or
gs
add
cmp
xchg
rcrl
push
pop
sbb
push
repz
pop
adc
aaa
sbbl
loope
ficomps
adc
fldcw
pop
push
xchg
fcompl
lods
pop
sbb
sbb
add
addr16
fists
add
push
mov
out
testl
mov
jg
and
scas
test
dec
jae
pop
fcoml
lds
pop
fldl
sbb
in
adc
lods
loop
clc
dec
aam
push
mov
inc
lret
stos
push
push
repz
bound
xor
fists
dec
add
xor
shlb
or
addb
jb
jg
xchg
pop
adc
dec
test
sbb
xlat
push
fs
push
ret
lock
hlt
mov
pop
test
je
pop
repz
pop
int
daa
cs
xor
jmp
aaa
cmp
push
and
iret
imul
add
cwtl
aaa
popa
arpl
pop
or
xor
js
imul
push
push
inc
sbb
xchg
adc
or
pop
rcrb
outsb
jp
mov
push
add
pop
sbb
add
enter
xchg
push
shl
xorl
adc
aad
pop
or
mov
sub
or
out
adc
lock
push
pushf
jmp
mov
mov
jne
enter
jmp
leave
iret
ja
imul
mov
cli
scas
outsb
ret
imul
cli
ss
xchg
jg
inc
das
xchg
das
test
mov
add
mov
push
mov
push
mov
mov
scas
and
lods
push
iret
mov
out
or
ljmp
lods
js
push
loope
leave
cmp
fisttps
mov
out
push
jle
cmpl
ds
in
out
ret
sbb
movsl
and
pop
push
and
lods
push
or
test
mov
hlt
mov
and
sbb
pusha
jle
xor
stos
mulb
push
popf
inc
adc
xor
push
sahf
push
push
or
sti
hlt
imul
fmulp
mov
loope
add
ss
dec
icebp
sub
inc
adc
or
shlb
mov
data16
test
xchg
add
ficomps
pop
fs
in
lock
jg
fldt
sbb
push
pop
dec
push
push
dec
add
das
and
ror
ds
nopl
std
ret
push
flds
or
aas
subl
sub
lds
daa
aas
rorl
popa
and
out
sti
xlat
hlt
lret
imull
dec
test
xchg
dec
or
xchg
push
sbb
popf
push
xor
sub
push
push
or
jno
bound
jno
sub
push
add
ss
movl
mov
cmc
sub
in
shll
idivb
popf
arpl
mov
cmc
stc
in
mov
add
pop
xor
mov
inc
test
mov
insb
stos
push
fcmovne
or
shrl
sbb
add
hlt
push
jns
mov
xor
or
sbb
aam
in
enter
sub
sub
jp
hlt
popf
push
cmp
out
clc
sbb
mov
dec
enter
xor
pop
push
adc
inc
sub
push
imul
inc
add
or
sahf
movb
rorl
aas
push
xchg
jnp
out
loop
sbb
loope
pop
push
es
mov
xchg
lret
jp
into
repz
mov
push
push
jecxz
mov
push
aad
insb
xor
inc
push
cmp
fwait
dec
fldcw
mov
mov
and
xor
mov
pop
insb
cltd
xchg
and
mov
shrl
push
arpl
nop
dec
jae
jecxz
jns
sub
cmc
arpl
mov
es
mov
dec
mov
lcall
sahf
sub
movsb
test
dec
imulb
roll
ficompl
stos
lods
lret
dec
orl
rorl
in
lods
shll
xchg
dec
adc
mov
dec
adc
sub
cmpsl
jecxz
rorb
cmpb
in
lods
iret
outsl
jg
pop
shrl
xchg
adcl
js
xor
out
ret
aam
in
fwait
int
xor
aad
popa
xor
mov
mov
pop
xor
inc
push
add
sub
in
fimuls
cmp
and
sahf
ljmp
or
pop
inc
ja
xlat
subb
or
shll
mov
inc
push
sbb
adc
lds
sbb
mov
and
ljmp
imul
xchg
pop
leave
popa
es
icebp
cmpsl
scas
ret
insl
inc
xchg
jb
mov
int
pop
and
mov
or
mov
test
xchg
or
sbb
data16
adc
dec
and
cmp
cmp
test
cmp
out
imul
jne
sub
dec
addr16
push
dec
add
inc
arpl
int3
mov
enter
data16
sbb
pop
aaa
pop
lods
cmp
rcrl
pusha
or
add
add
stc
inc
scas
dec
push
stos
gs
sbb
dec
xchg
xlat
in
lea
adc
jg
push
arpl
adc
sbb
in
lods
shr
or
shll
or
mov
ss
outsl
add
shlb
sub
pop
push
push
sbb
xchg
adc
sar
test
mov
push
fnstcw
fisttpll
cmpsl
mov
or
sub
dec
push
fistpll
int
inc
jnp
push
inc
mov
inc
and
cmpl
cwtl
mov
ds
xor
lcall
cmp
and
addr16
dec
in
test
xchg
fisubrl
jecxz
mov
jo
sbb
mov
fs
fisubrs
inc
pop
lock
fxch
inc
lcall
sbb
add
fisttps
test
jns
pop
push
push
cwtl
shll
fs
jecxz
icebp
inc
addr16
insb
adcb
xchg
adc
mov
fnstsw
push
adcl
jge
stos
and
pop
xchg
push
lods
pop
xchg
mov
cmp
jmp
jp
lret
and
push
inc
cmc
sub
in
and
inc
loope
or
xor
mov
sbb
jp
mov
sbb
xor
xlat
pop
push
std
xchg
scas
imul
ja
cmpsl
rcl
dec
clc
jb
shl
cmp
pop
ljmp
fbld
cld
cmc
data16
test
xor
jne
aad
pop
pusha
in
movsl
or
sbb
xchg
jge
jg
imul
mov
sub
popf
ds
push
aaa
scas
pop
pop
imul
sub
lret
fwait
dec
bound
xchg
xor
cmp
loop
flds
lods
hlt
push
fwait
gs
movsl
ja
inc
in
mov
push
sub
pop
dec
pop
mulb
pop
push
jns
jnp
mov
cwtl
int3
popf
nop
xchg
or
pop
stos
sbb
fwait
mov
sbb
stos
or
call
add
das
bound
xchg
mov
pop
cmp
mov
loope
icebp
out
jg
mov
lods
or
in
mov
imul
mov
imul
xchg
fcom
mov
mov
sbb
adc
fbstp
daa
sub
xor
out
rdtsc
div
cld
push
aam
mov
std
fnsave
test
or
sbb
mov
mov
mov
jo
push
test
ljmp
xlat
jno
test
pop
push
mov
cmp
out
pop
sbbb
pinsrw
sbb
hlt
pop
xchg
sti
fiaddl
adc
inc
out
jne
xor
in
mov
movsb
xor
sub
scas
lock
or
in
outsl
xor
xorl
lcall
loope
sbb
dec
cmp
movsl
xor
nop
into
jmp
mov
pop
mov
xchg
pop
fxam
repz
imul
mov
mov
sub
or
jns
testw
adc
cwtl
pop
notb
movsl
inc
sbb
ja
cmpsl
pushl
int3
add
mov
rorl
aas
mov
add
inc
inc
outsl
out
cli
imul
jae
les
popf
mov
out
xchg
pop
lahf
inc
mov
movsl
pop
add
loopne
inc
inc
and
mov
fcoml
loope
inc
jno
mov
xchg
dec
add
xlat
bound
ds
push
mov
dec
out
push
xchg
frstor
lret
loop
and
cmp
sub
dec
mov
sub
aad
xor
xchg
ss
xorb
in
xchg
dec
add
lea
cmp
aad
stos
xorb
jnp
imul
lods
icebp
insl
gs
ja
pop
xor
cmp
and
mov
jo
mov
and
inc
sbb
dec
lret
sti
lahf
and
insl
adc
pop
rcll
rorl
lcall
jns
stos
inc
stos
divb
push
gs
mov
xor
jae
insl
je
xchg
xchg
cmpsb
ja
sbb
je
xchg
aam
sbb
imul
xchg
jle
dec
hlt
insl
xor
pop
dec
adc
mov
daa
arpl
and
dec
cltd
lods
jae
and
mov
add
imul
and
xor
xor
push
aaa
imul
mov
icebp
data16
or
roll
cmp
push
xor
movsb
bound
mov
repnz
adc
pop
andl
int3
addr16
fidivs
push
fildl
and
nop
mov
mov
xchg
push
jno
adc
aas
push
cltd
lock
rep
outsb
aaa
mov
mov
and
mov
into
jo
sub
iret
mov
movsb
test
push
xor
push
fadd
movl
push
jg
out
sub
bound
xchg
sbb
or
inc
ljmp
mov
mov
lea
inc
mov
shl
xchg
cmpsl
or
not
cmp
pop
or
mov
dec
jp
push
and
jne
test
jne
sub
pop
scas
or
or
xor
psllq
pop
imul
push
ret
sub
cltd
lock
cltd
mov
mov
fs
mov
bnd
sub
shll
adc
outsl
mov
inc
push
int3
testl
jb
aam
scas
adc
cmp
xor
sbb
jg,pn
jae,pn
mov
mov
and
jp
mov
data16
sbb
test
out
xchg
repnz
pop
inc
fdivrp
adc
test
sahf
lret
or
adc
arpl
mov
fwait
enter
push
jnp
sub
pop
push
dec
push
cmp
push
test
test
push
pop
inc
mov
dec
dec
in
test
push
cmpsb
lahf
sbb
inc
add
adc
xor
pop
ret
les
fidivrl
call
pop
mov
imul
push
sub
in
stc
pushf
jmp
js
cmp
jo
push
lds
fsubl
jbe
out
mov
cs
sahf
fwait
mov
dec
push
mov
mov
outsb
mov
sub
inc
sub
mov
mov
outsl
xchg
loope
mov
xor
loope
sub
pushf
js
dec
inc
loope
push
test
aas
out
sub
sarb
aaa
pop
inc
out
jbe
ficoml
xchg
mov
mov
loopne
loope
push
sarb
sbb
rcr
inc
shl
sahf
inc
ret
or
xor
lds
sbb
popa
fmull
jb
xor
sbb
xor
jecxz
mov
push
aas
ret
sub
ja
xor
xchg
mov
jge
or
push
int3
dec
jbe
push
test
mov
in
mov
xchg
out
iret
push
push
in
xchg
pop
push
lea
test
add
xchg
mov
dec
ds
test
mov
sub
jo
mov
testl
dec
xor
jne
push
fstps
mov
imul
cld
adc
cltd
out
mov
push
insb
shll
push
jnp
dec
arpl
pushf
jne
or
inc
or
xlat
outsb
and
shrb
or
jno
cmp
mov
iret
push
std
lods
imul
xor
mov
loope
je
cld
cmp
clc
cmp
mov
jae
push
push
in
mov
fcoms
repnz
subb
push
and
hlt
xchg
jle
call
daa
push
mov
int3
cwtl
dec
repnz
lock
and
rcll
pop
popf
gs
sbb
popl
pusha
jecxz
idivb
shr
leave
das
cmpb
cs
inc
jnp
xchg
imul
aad
clc
fwait
mov
mov
es
je
inc
dec
mov
cld
fwait
add
sti
mov
or
ret
inc
pop
insb
adcl
rcrl
fbstp
pushl
push
jecxz
lcall
jp
inc
push
mov
dec
icebp
inc
aaa
in
stc
aas
xchg
into
mov
movsl
mov
fimuls
mov
lock
scas
inc
imul
iret
cmp
xchg
orl
add
mov
pop
jp
pop
jae
rcrl
jge
negb
mov
outsb
jno
mov
out
jno
jne
mov
ljmp
lret
icebp
push
subl
testl
mov
or
xchg
insl
mov
fidivrl
cli
loop
cmp
test
fwait
cmp
adc
push
movsb
mov
pop
iret
enter
lret
jp
jnp
lods
mov
out
mov
and
cmp
or
sbb
or
movsb
movsl
rclb
addl
or
mov
ja
pop
lret
pop
icebp
lea
push
mov
push
and
fsubl
or
mov
pop
mov
loope
xchg
movsl
push
mov
xchg
scas
push
sub
lock
lret
out
mov
aam
sarb
mov
out
pop
cld
cs
loop
jl
lea
scas
dec
faddl
pop
fdivs
fscale
gs
fidivl
popf
dec
lock
mov
sti
pop
test
aam
mov
rorb
mov
pop
and
or
adc
ljmp
jmp
dec
ret
or
cmp
cwtl
lahf
lahf
and
pop
sub
out
mov
dec
cwtl
sahf
in
pop
bound
and
jmp
enter
ljmp
mov
inc
sti
add
pmaxub
xchg
sbb
insb
in
fdivrl
lods
cmp
scas
sarl
es
movsl
mov
imul
jg
fidivrl
mov
out
pop
nop
arpl
insb
jmp
mov
and
clc
mov
adc
or
pop
dec
cmp
inc
cmp
frstor
aaa
cmp
add
aad
pop
loopne
push
lock
sbb
mov
sbb
hlt
jl
or
sub
jns
lds
mov
add
or
xchg
or
push
stc
adc
pop
sub
mov
adc
sub
jecxz
add
mov
lds
sbb
mov
push
notl
adc
leave
pop
cmp
icebp
xor
clc
cltd
dec
lret
push
cltd
idivb
cmpsl
pop
or
popf
jno
call
mov
inc
and
adc
shlb
int
out
add
subl
pop
sub
and
lcall
sbb
xchg
mov
cmpsl
in
xlat
mov
push
fisubl
stos
and
jno
mov
movsb
add
aas
es
and
xchg
sahf
es
cmpsb
mov
out
pop
xchg
test
mov
aad
fcompl
jmp
or
cmp
sbb
cmp
sub
and
out
xchg
cld
stc
insl
pop
sbb
adc
mov
pop
in
sbb
add
push
mov
dec
sub
sbb
mov
mov
int3
fistpll
or
mov
cmp
mov
inc
cwtl
push
jp
andb
sbbb
push
adc
and
mov
push
dec
xchg
je
aad
loope
pop
or
hlt
mov
rol
pop
ljmp
loope
mov
sbb
add
pop
mov
lea
stos
dec
call
and
cwtl
rolb
in
pop
ds
in
loop
adc
sbb
rcrb
lret
lret
setle
sarl
idiv
xchg
push
mov
push
sub
pop
jmp
sub
mov
or
and
cmpsb
enter
pop
xchg
push
add
mov
imul
push
int
sti
pop
sub
in
or
inc
push
add
fwait
bound
movsl
subb
sti
add
dec
cmp
push
lret
mov
ror
cmp
les
inc
rorl
lret
or
push
aad
sub
lret
push
jns
push
sbb
repz
dec
insl
mov
icebp
es
fstpl
ret
notl
push
cmp
mov
shll
lea
inc
jne
data16
iret
loop
jbe
or
insb
sbb
sbb
stos
or
mov
jne
ret
cmp
inc
lods
ss
mov
sbb
push
xor
lret
or
xor
ret
push
mov
pop
mov
or
pop
pop
nop
or
push
hlt
loope
shll
cmp
or
lods
pop
fs
imul
or
jb
xor
insb
repnz
inc
adcl
clc
push
push
movsb
mov
push
jnp
xchg
add
stos
and
in
xor
pop
adc
xor
inc
adc
test
aam
pop
push
out
jl
scas
xchg
into
clc
sub
rcll
mov
xor
add
test
push
or
xchg
or
mov
out
push
mov
scas
outsl
inc
xbegin
jb
jae
xchg
es
hlt
mov
cld
popl
je
push
ret
stos
mov
dec
cmp
mov
mov
xchg
inc
fildl
lret
adc
and
ficompl
mov
ret
jl
lahf
push
cmpl
cmp
mov
push
aas
in
adc
bound
inc
inc
jno
dec
jae
movsb
mov
lret
jno
lods
int
pop
xchg
mov
mov
jo
in
sub
add
pop
jp
popf
inc
pop
jnp
mov
sub
gs
imul
int
icebp
ljmp
push
and
add
fwait
mov
test
es
and
push
leave
dec
adc
fs
add
enter
dec
mov
sub
cmc
sbb
fnstcw
adc
outsl
ret
or
pop
les
push
jne
cmc
addr16
inc
cmpsb
repnz
mov
or
jle
clc
lcall
fsubrl
xor
repnz
adc
in
mov
push
shl
in
inc
sbb
pop
or
test
sub
adc
mov
adc
shrl
insl
imul
into
sbb
or
or
adc
adc
adc
insl
mov
lcall
mov
rclb
push
sub
inc
add
js
dec
cmpsb
repz
inc
mov
jbe
fcmovnbe
and
mov
add
int3
jnp
sub
dec
loope
scas
sarb
jnp
lock
mov
mov
add
mov
out
clc
inc
in
sti
arpl
movsl
jno
inc
mov
mov
jae
out
mov
movaps
jle
popf
pop
lcall
mov
sti
addr16
iret
mov
sbb
mov
in
insl
push
sub
filds
into
mov
cwtl
call
test
mov
or
cmpsl
aaa
orb
hlt
test
xchg
cli
push
mov
xchg
nop
or
rolb
pop
outsb
sbb
jp
xchg
bound
les
fistpll
jnp
xlat
aas
rorb
dec
inc
pop
hlt
idivb
xor
and
cmpsl
cmc
movsl
ljmp
repz
or
aad
mov
outsb
pop
and
sbb
pop
imul
dec
int
movsb
lahf
or
cwtl
add
lret
xchg
push
push
sub
roll
mov
add
aaa
or
cmp
cwtl
sbb
and
jle
movsb
mov
aas
or
adc
js
pop
inc
push
push
xchg
in
and
inc
inc
lods
push
inc
push
addb
imul
cli
cld
shlb
dec
sbb
inc
jbe
xor
and
or
mov
mov
add
sbb
cmp
sbb
inc
fisubl
mov
push
inc
and
and
pop
roll
rorl
roll
clc
mov
sbb
push
pop
inc
sub
inc
repz
push
outsb
inc
stc
pop
mov
add
push
xlat
shlb
scas
inc
fisubl
sub
push
inc
cwtl
insl
cmp
addb
ja
or
pop
pop
sti
fcoml
xchg
cmp
xchg
adc
mov
inc
push
scas
pop
popa
aaa
jg
int3
lcall
jns
arpl
xor
cmp
sub
pop
pop
adc
sbb
and
dec
int
pop
pop
fsubrs
pop
mov
push
rorl
or
mov
loop
movsb
pop
aad
out
xchg
jno
arpl
dec
stos
lcall
iret
jge
test
mov
xlat
inc
inc
cmc
push
leave
sbb
loope
ficoml
pop
or
push
sbb
js
daa
enter
stos
lods
mov
sti
cmpsl
push
xor
mov
push
jb
gs
test
test
sub
jp
int
mov
and
ljmp
push
mov
popf
push
fs
pop
push
xor
pop
jno
js
pushf
not
and
mull
lods
sarb
dec
jnp
pop
sarl
mov
or
test
cmpsl
or
dec
hlt
lahf
icebp
mov
iret
add
mov
scas
ret
xchg
pop
jns
xorl
pop
hlt
scas
int
lock
jbe
mov
mov
lret
cltd
and
mov
lcall
bound
mov
jne
mov
inc
xchg
imul
push
cli
lret
je
sti
pushf
dec
jg
repnz
aam
adc
leave
adc
and
cltd
dec
xor
push
mov
aaa
andb
insl
pusha
mov
add
test
and
aad
std
mov
push
xlat
in
dec
pop
xor
lahf
imul
and
xor
cwtl
insl
pop
je
mov
adc
sub
repnz
fiadds
or
push
cltd
and
jo
jg
mov
fistpll
test
dec
popf
adc
sub
stos
and
cmp
adc
mov
jnp
inc
mov
mov
lahf
jge
lcall
fsubrp
cmc
jbe
add
jmp
outsb
adc
sahf
faddl
iret
xchg
push
mull
fidivs
nopl
and
ret
pop
jns
push
mov
or
outsl
pop
cmp
pop
sbb
inc
sub
repz
mov
and
fistps
adc
in
gs
push
xchg
push
pop
push
shlb
out
bound
dec
xchg
add
pop
pop
xor
rcll
or
andb
sbb
add
mov
outsl
jmp
inc
insl
push
jae
pop
sarb
push
jmp
aad
fnstsw
rorl
mov
push
sar
xchg
push
sub
inc
loopne
cmpsl
lds
add
inc
pop
adc
pop
addr16
cmp
pop
cmp
call
jb
shll
or
mov
and
mov
dec
rcrb
loopne
repz
outsl
xlat
jecxz
pop
cwtl
xchg
lods
js
lret
jno
xor
push
lret
ror
cmc
mov
subl
pop
pop
lods
sarl
ja
lds
pop
bound
pop
xchg
push
dec
push
adc
xor
in
sti
sbb
mov
adc
out
and
idivl
pop
mov
fistl
repnz
std
shlb
test
pop
aaa
pop
inc
inc
jmp
pop
sub
je
cmp
xchg
adc
outsl
jno
sahf
shll
mov
push
xchg
stos
in
sub
cmp
lahf
cltd
icebp
es
into
es
push
push
or
repz
jo
xor
pop
fs
loop
out
popa
test
cmp
push
scas
xor
cmp
pushf
je
and
mov
push
cwtl
jecxz
sbb
arpl
sub
mov
or
jmp
aam
iret
sarl
adc
adc
imul
pop
and
or
into
outsb
dec
fiaddl
add
enter
xchg
movsl
inc
rcrl
mov
lahf
in
or
je
nop
mov
xchg
mov
cmp
inc
cmp
mov
xchg
mov
and
stc
mov
lds
add
js
adc
inc
mov
xchg
repz
mov
pop
fdivs
imul
adc
int
push
call
and
movsl
xchg
push
cltd
jb
shlb
add
xchg
push
cmp
jns
loope
hlt
punpckhdq
enter
sbb
inc
faddp
aad
or
imull
sbb
ja
mov
mov
in
into
adc
mov
push
xor
test
and
xchg
cmp
sbb
mov
mov
add
cwtl
shrl
xor
dec
push
addl
add
sbb
icebp
mov
sub
sub
pop
lds
cmp
add
imul
pop
xor
adc
inc
push
mov
jp
call
mov
in
outsl
add
loopne
pop
pop
lahf
mov
icebp
mov
gs
cmc
test
xchg
cmpsb
push
xor
xor
mov
orl
sbb
es
movsl
aam
xchg
cmp
lea
ss
inc
push
push
fs
push
xchg
dec
mov
pop
or
das
lahf
sti
outsl
xchg
bound
sbbb
mov
xchg
stos
pop
shrl
vpxor
sbb
scas
or
sub
jp
push
cmp
and
mov
and
jmp
idivb
or
push
lods
mov
mov
ror
add
mov
orb
jl
mov
insl
dec
aas
pop
cli
xchg
fnstenv
or
and
lods
inc
es
and
test
icebp
sbb
mov
nop
in
lock
test
addr16
push
adc
mov
jp
repnz
out
outsl
popf
sub
aad
aaa
mov
adc
fs
imul
dec
test
jbe
xor
pop
cmp
mov
sbb
xor
fdivr
add
xchg
dec
loop
inc
pause
adc
pop
sahf
ss
shl
adc
repnz
jle
into
mov
mov
enter
arpl
bound
inc
adc
lret
xor
pop
hlt
pop
aaa
xchg
test
aaa
jb
jecxz
mov
adc
dec
pop
aas
jp
push
fstpt
jbe
aas
imul
popf
sbb
dec
or
add
neg
adc
sahf
imul
out
and
inc
cmp
dec
std
shlb
inc
sbb
xchg
ja
in
push
jo
xor
mov
mov
pop
sbbl
ljmp
xchg
fimull
add
dec
push
adc
in
pop
inc
xor
pop
add
mov
push
addr16
fisubrs
mov
mov
imul
aaa
jb
mov
test
repz
push
test
mov
xchg
and
pop
mov
adc
movsb
jmp
fmull
pop
sub
mov
cmc
add
aam
shrl
dec
lock
mov
sahf
mov
insl
add
xor
out
stos
mov
dec
mov
outsl
dec
pop
sbb
test
iret
jb
jbe
add
ljmp
test
in
and
loop
fnstenv
adc
pop
test
inc
cmp
mov
ffreep
pop
sbb
mov
lcall
insb
cmp
stos
and
hlt
mov
cld
out
xchg
push
add
sbb
add
sub
push
xchg
add
sbb
xchg
dec
pop
mov
dec
ss
cmpsb
dec
adc
mov
pop
push
xor
in
imul
inc
cmpsl
xchg
or
test
test
iret
dec
pop
mov
dec
cmp
rcr
repnz
out
cmp
push
mov
mov
add
lret
inc
mov
call
xorb
cli
mov
or
adc
jmp
adc
test
fmull
jg
adc
adc
pop
inc
outsl
dec
lahf
ss
movsb
clc
push
lret
xchg
shl
pop
inc
or
mov
imull
sub
pop
aam
mov
inc
push
sbb
into
or
mov
bound
aad
mov
dec
push
fstl
xchg
sbb
sbb
adc
pusha
movsb
pop
adc
jl
push
jnp
sahf
push
fcomip
inc
repnz
mov
jb
cld
stc
int3
jp
xchg
push
or
repz
andb
mov
imul
xchg
sbb
dec
lock
jae
dec
jns
inc
push
cmp
cs
shlb
jns
mov
xchg
and
push
add
es
add
mov
jmp
fistl
adc
clc
or
leave
cmp
push
and
cmp
jp
xorl
gs
je
inc
imul
mov
and
mov
pushf
inc
mov
push
sub
call
push
pushf
add
mov
ret
loope
insb
cmp
es
dec
or
loop
xchg
mov
sbb
shl
jp
pop
inc
call
adc
bound
adc
push
xor
cmc
pop
and
sub
js
dec
call
and
scas
push
lock
movb
xchg
push
inc
aam
fsubs
dec
add
mov
mov
mov
cmp
push
addr16
stos
scas
mov
pusha
jge
ds
pushf
int
and
mov
push
sbb
mov
shr
lret
movsb
movsb
stos
mov
cmp
xlat
xor
mov
mov
push
sbb
dec
call
shlb
inc
leave
xchg
stos
or
inc
ficomps
mov
mov
sahf
dec
inc
mov
mov
adc
xchg
icebp
js
cli
push
in
js
sub
or
aaa
mov
jo
xor
mov
dec
or
mov
in
mov
push
repnz
cs
sahf
lods
cmp
pop
push
dec
mov
int3
or
jbe
push
leave
test
lds
aas
loopne
ret
sbb
lods
or
shll
push
fwait
adc
cmpsl
into
mov
insb
rorb
movsb
dec
aam
repz
fstp
mov
adc
xor
push
adc
test
and
enterw
add
jnp
clc
iret
test
or
mov
ds
xchg
mov
adc
adc
xchg
sub
sub
pop
inc
push
sub
cmp
cwtl
inc
adc
sub
into
je
sub
lods
out
adc
pop
popa
lods
das
loop
aas
dec
aaa
xchg
jl
iret
mov
fyl2x
mov
inc
cmpsl
jo
popf
orl
test
popa
mov
std
inc
xor
jo
fsubl
lcall
sbb
idivl
sub
pop
test
fwait
test
adc
or
stos
push
repz
gs
jge
and
pop
scas
mov
xor
adc
insb
sbb
repz
fwait
add
mov
sbb
xchg
sub
pop
div
aam
xor
mov
subb
xorb
mov
push
fidivs
add
jecxz
push
das
popf
xchg
or
mov
shrb
js
aad
mov
sbb
mov
popa
outsl
mov
or
or
ss
das
andl
imul
mov
cmc
es
call
sbb
inc
jp
push
and
jg
aaa
movsb
jmp
iret
pop
test
loope
xchg
jne
icebp
aad
pushf
push
sub
or
shlb
insl
xchg
fs
mov
clc
ret
inc
insl
int
ret
jmp
jbe
lods
sbb
mov
js
push
bt
int
push
xchg
negl
movsb
mov
lds
cwtl
xor
jg
fidivrl
cwtl
inc
inc
or
mov
mov
jo
pop
fisubl
jg
push
add
fcomp
ds
enter
in
and
jbe
stos
pop
nop
or
inc
dec
aad
subl
xchg
or
and
mov
loopne
fs
stc
inc
xorb
insb
cmp
or
and
inc
push
mov
sbb
loop
inc
shrb
dec
jmp
es
inc
scas
gs
mov
inc
xchg
adc
mov
jg
mov
arpl
insb
inc
loope
mov
inc
xlat
xchg
sub
or
mov
fisubs
addr16
aad
out
pop
push
out
in
push
lods
and
sbb
inc
mov
pop
mov
sub
xchg
insl
push
pop
pop
and
push
cmpsl
loopw
lcall
outsb
mov
mov
roll
loopne
and
aad
cmpsb
aaa
js
push
cmp
fbld
dec
add
scas
inc
pop
jmp
sahf
jge
xlat
int
mov
jae
cmp
xor
pop
mov
sbb
fbld
mov
in
fs
xchg
ficoms
rcrb
loopne
and
imul
inc
das
pop
cmc
sub
xor
xlat
outsl
gs
xchg
jbe
out
adc
mov
cmp
shll
inc
repnz
sub
dec
stos
mov
push
jecxz
mov
cmp
stos
in
dec
push
arpl
in
push
and
lcall
add
xchg
inc
xchg
fdivrl
imul
fcoml
jmp
push
ljmp
arpl
jle
imul
pop
xor
jl
fs
fwait
test
subl
dec
sub
shll
les
or
jg
aam
imul
scas
adc
push
in
mov
rcl
lea
cwtl
pop
cmpsl
aas
aas
sub
sub
movsl
sub
fbstp
jmp
ja
outsl
gs
popf
lock
daa
ss
lret
push
cmpb
js
scas
sbb
and
inc
ljmp
lea
mov
fwait
clc
mov
push
testl
jle
stos
cmp
xor
inc
mov
push
orb
pop
mov
push
adc
xrelease
push
cmpl
jp
or
mov
xlat
jle
ja
gs
push
cli
loope
mov
inc
popa
repnz
ljmp
jle
mov
adc
add
jbe
jbe
cltd
or
loop
xchg
jg
mov
shld
aas
fs
je
sarb
das
stc
pop
les
je
sbb
ds
push
dec
mov
adc
or
mov
inc
in
fildl
imul
jnp
loopne
inc
scas
xchg
push
fistps
or
jnp
cwtl
repz
fs
enter
push
sub
xchg
mov
outsl
insl
sahf
push
pop
xchg
xchg
sub
add
sbb
dec
cmp
mov
fsubrs
sub
popf
push
push
mov
xchg
ret
jns
mov
cmp
fadd
xchg
hlt
mov
pusha
bound
daa
jge
stc
fbstp
stos
movsb
shll
cltd
mov
and
mov
pop
dec
popa
pop
push
pop
fmull
jne
hlt
jmp
and
fadds
and
lea
jl
sbb
outsb
outsb
pushf
mov
addr16
mov
std
out
pop
jmp
loope
ss
lods
and
dec
and
and
icebp
xor
frstor
mov
add
xchg
mov
pop
pop
test
dec
adc
xchg
cmp
rclb
push
xor
std
imul
data16
xchg
add
lea
nop
sbb
xlat
mov
jo
aam
add
lahf
push
mov
push
sub
xor
mov
shlb
ss
pop
loop
mov
xchg
sbb
stos
into
jbe
dec
lock
cwtl
out
stos
cli
dec
popa
movsb
push
pop
aaa
and
mov
push
lret
dec
gs
jmp
xchg
cmp
lods
shrb
sbb
loopne
mov
popf
or
mov
xor
orb
sbb
test
push
mov
and
test
and
sbb
out
fnstsw
xor
and
cmp
dec
andb
push
es
dec
arpl
popf
jnp
fimuls
inc
and
iret
leave
roll
pop
cmp
cwtl
pushf
xchg
jnp
mov
push
mov
xchg
sbb
inc
sbb
fdivs
arpl
mov
movsl
adc
stc
mov
mov
in
ljmp
lods
out
cmp
stc
insl
sbb
call
or
ret
jnp
or
xor
testl
add
mov
cs
add
mov
sahf
xchg
in
or
subb
pop
iret
dec
jns
or
fcoml
jmp
fwait
cmp
movsb
cmp
jl
inc
sarb
sbb
add
iret
add
jecxz
pop
out
sbb
inc
mov
and
inc
and
xchg
in
push
fstps
xor
sbb
jno
xchg
stc
xchg
js
jb
jp
mov
mov
lcall
xchg
xor
shlb
movsb
push
lock
insb
cmp
sbb
shrb
enter
mov
out
popa
les
or
mov
push
nop
jmp
dec
pop
mov
seta
jb
mov
xor
cmp
mov
mov
push
popf
lods
aad
icebp
push
mov
roll
jns
xchg
add
into
test
outsb
xchg
mov
fadd
jnp
mov
ss
shll
jns
xor
addr16
cmp
push
subb
add
pop
je
xchg
shlb
lds
mov
repz
in
jg
sarw
xchg
xchg
xor
test
mov
fadd
mov
stc
sbb
cli
hlt
push
pop
xor
xchg
pop
mov
cltd
cmp
mov
lret
notb
mov
gs
add
fs
pop
roll
cmp
outsb
jle
shl
jg
dec
outsb
and
stos
or
add
ret
ret
mov
dec
aaa
lea
movsb
add
xchg
and
cli
test
jge
ss
in
aas
jle
hlt
sti
dec
mov
fstps
jle
out
out
jno
roll
ficomps
in
iret
xchg
out
lret
rcrl
es
cmp
sub
sbb
in
shrl
xchg
jnp
dec
outsl
inc
addl
mov
aaa
mov
pop
jnp
iret
xchg
test
xchg
xlat
cmpsb
xchg
ret
mov
sbb
test
xchg
pop
in
insl
or
sub
pop
jecxz
push
add
sahf
xchg
xchg
push
jge
cmp
out
rcr
insl
sbb
sbb
or
andb
adc
leave
inc
cli
jecxz
test
adc
ljmp
sbb
sub
push
adc
hlt
adcl
jmp
inc
xor
imul
jp
and
xchg
xlat
cmp
lds
xor
jmp
gs
movsl
adc
push
leave
test
sbb
cli
inc
mov
fs
notb
gs
mov
xchg
sbb
dec
sub
pmulhw
pop
test
xchg
mov
cmp
cmpsl
fadd
nop
mov
fcoms
xchg
push
mov
imul
push
and
int3
mov
repz
mov
dec
dec
pushf
aad
or
xchg
push
ja
insl
mov
imul
xorb
inc
scas
mov
dec
adc
mov
and
enter
pop
fsubrl
xor
sti
xchg
lds
pop
sahf
add
aad
imul
mov
sub
fsub
sub
xlat
mov
repz
popf
enter
inc
pop
or
adc
clc
pop
enter
outsb
pop
add
adc
mov
cmp
mov
jns
pop
push
imul
into
cld
cmp
pusha
mov
add
movsl
mov
ret
jbe
cltd
addr16
jns
fmull
and
sbb
bound
push
jle
int
and
outsl
xchg
add
mov
and
inc
dec
jl
lods
xchg
negb
lds
jns
les
fstps
packuswb
or
pop
or
or
sbb
dec
and
idivb
sbb
stos
movsb
repz
push
int3
cli
stc
iret
push
mov
mov
and
ret
lahf
lret
xchg
ds
lahf
cmp
cwtl
dec
or
loope
mov
loope
sahf
mov
push
rorb
mov
in
std
ljmp
incb
int3
pop
and
jmp
in
enter
xlat
mov
mov
add
dec
std
lcall
rclb
xor
fucomip
push
cmp
dec
popa
aam
les
leave
cltd
inc
fcoms
lcall
xlat
jl
cs
flds
and
jecxz
lcall
add
pop
in
push
add
and
sbb
xlat
xor
adc
jns
inc
mov
das
aaa
pusha
loopne
das
adc
sti
addr16
test
dec
cmpsb
mov
mov
cmp
pop
push
xor
push
pop
mov
icebp
add
movsb
idivl
adc
xchg
popa
mov
mov
inc
fisttps
jbe
or
sbb
mov
mov
xchg
sbbb
xor
fwait
xor
pushf
adc
xor
aad
mov
lret
push
cli
mov
or
add
jb
shll
arpl
loope
push
stos
cltd
jl
fisttpll
dec
test
xchg
push
sub
jp
clc
xchg
shr
dec
mov
faddp
mov
lcall
fsubl
loopne
clc
jmp
scas
inc
test
mov
daa
and
nop
cs
mov
mov
push
pop
iret
push
shlb
aaa
cmpsb
imul
sbb
or
les
out
clc
sti
cld
call
pushf
cmpsl
repz
loopne
cmp
cmp
aaa
push
add
or
stos
lret
out
pop
pavgb
shll
mov
loope
out
xorb
loopne
xchg
xchg
sbb
dec
jno
xchg
ja
movsl
enter
js
push
dec
jnp
lret
arpl
and
cwtl
and
cmpsb
insb
pop
stos
cmpsb
inc
cli
pop
and
mov
daa
mov
or
imul
xor
xchg
add
test
repz
mov
adc
mov
iret
pop
stos
or
jo
mov
iret
scas
sbb
cld
xchg
sbb
push
lods
jnp
addr16
add
xchg
jge
scas
and
lds
push
stos
adc
xchg
stos
jmp
test
cmc
cmpxchg
fwait
or
mov
sbb
icebp
add
push
xchg
out
xor
insb
and
gs
or
and
cmpsl
ficoml
repnz
icebp
scas
push
adcb
cmc
lock
daa
push
add
pop
dec
pop
insb
mov
je
jnp
out
sbb
fimull
aad
sub
rolb
mov
enter
rcrb
into
icebp
add
adc
sbb
and
push
test
xchg
xor
fcmovne
xchg
or
int3
shlb
jo
mov
push
dec
and
or
xchg
jae
mov
loopne
leave
push
mov
fdivrs
stos
sbbl
dec
scas
jns
pop
pop
push
mov
in
cmp
push
enter
jno
mov
dec
jp
push
add
jae
shl
mov
rcll
mov
pop
dec
fldl
xor
cmpb
jae
gs
daa
sub
jns
push
popf
lcall
xor
out
imul
jbe
idivb
sub
popa
inc
xor
pop
aam
mov
mov
sub
push
adc
xchg
or
sti
in
lret
add
mov
xor
fnstenv
call
daa
xor
inc
jnp
cld
push
push
out
pop
sbb
push
outsb
xor
dec
adc
jno
jg
sahf
enter
pop
cmp
int
fidivl
sbb
iret
daa
lcall
xor
pop
js
pushf
or
mov
leave
clc
cld
stos
cwtl
repnz
jbe
scas
push
mov
gs
insl
mov
loop
movsl
and
cli
enter
pop
mov
xor
lret
lahf
leave
stos
lea
dec
inc
loopne
pop
std
dec
sub
mov
push
mov
jns
repnz
aas
mov
or
fisubrs
lret
sti
enter
test
xchg
inc
mov
lock
ja
or
pop
xchg
setne
inc
jb
or
ret
lods
mov
pop
mov
cmp
pushf
push
pop
andb
fdivrl
outsb
mov
jno
aas
jno
jns
push
test
repnz
ds
mov
xor
inc
adc
fildll
push
loopne
xchg
cmp
aaa
int3
mov
adc
sub
pop
ljmp
repz
dec
lods
negl
xchg
out
aas
push
cmc
or
mov
cmp
adc
mov
mov
push
aad
mov
add
andl
lods
mov
fisttps
in
add
inc
sub
dec
dec
pop
shll
scas
ja
xchg
out
jg
in
daa
mov
decb
cmpsl
cld
outsb
cli
push
xor
sub
imul
push
add
mov
sti
mov
out
test
fwait
mov
xlat
sbb
sub
stc
cli
pop
pop
inc
dec
mov
push
shlb
es
inc
mov
xor
in
mov
jb
cmp
push
sbb
or
xor
int3
jl
test
test
sbb
in
jne
daa
dec
inc
arpl
fs
iret
or
and
add
mov
ret
lcall
ljmp
imull
pushf
push
stos
jecxz
mov
push
popa
sbb
sub
push
aad
add
je
movsl
mov
adc
mov
dec
scas
sahf
inc
aaa
aad
aaa
lea
jl
test
xor
out
jno
dec
push
adc
add
jl
inc
hlt
add
add
cs
pop
dec
imul
push
test
jp
pop
add
fs
int
mov
movsb
cmpsb
fstpt
mov
fucomi
shll
cs
xchg
or
fidivs
sub
inc
push
imul
mov
pop
mov
cmp
aam
pushf
mov
and
lahf
popf
mov
ret
mov
pop
int3
call
aam
lds
sbb
fabs
or
push
xchg
sub
mov
int3
arpl
fistl
vpunpcklbw
in
adc
mov
subl
mov
loopne
xchg
fnsave
xchg
cmp
xor
insl
test
or
mov
push
aad
push
mov
push
loope
jnp
xorb
jge
push
scas
divb
mov
cmp
xchg
imul
mov
pop
std
and
sub
or
pop
fmull
xchg
add
test
cmp
leave
test
adc
and
idiv
xor
loope
mov
jle
sbb
xchg
cli
mov
xchg
test
xchg
pop
jo
jecxz
popa
int
out
loope
in
addr16
jge
movsl
lock
mov
lods
aad
xchg
ret
test
sub
mov
adc
outsb
lds
push
inc
in
hlt
out
bound
jl
mov
mov
insl
imul
jge
sbb
pop
sub
cmp
mov
jae
out
adc
jmp
xchg
cmpsl
inc
in
cmp
movsl
push
loop
fs
mov
pop
mov
xor
pop
inc
xor
andb
jbe
xchg
js
ja
stos
std
xchg
and
pop
xchg
xchg
cmp
negl
dec
lods
mov
outsl
mov
push
sar
mov
jo
add
rol
dec
and
or
pop
lret
es
leave
xor
cmp
test
fmul
push
dec
add
jl
mov
je
cmp
fistpll
in
push
sub
les
cmpsl
adc
lods
sbb
testb
lock
and
sbb
pop
dec
out
fisubrs
ret
and
sahf
inc
gs
xchg
xor
xor
cmc
lods
xor
xchg
dec
pop
jmp
pop
mov
cs
lcall
pushf
rorl
xlat
sub
xor
insb
fsubrl
jae
mov
add
faddl
inc
inc
fdivr
push
aas
or
ja
je
cmpsb
out
lret
push
xchg
daa
xor
repz
lret
into
jb
xor
lea
cmp
push
int
ret
push
inc
dec
lea
in
xor
les
mov
push
xor
xchg
xchg
jp
scas
xchg
shrl
add
data16
testl
ret
jle
int
and
aad
ficoml
scas
mov
lret
fisubrs
cmp
sbb
add
and
insl
lea
push
arpl
xor
ret
dec
nop
inc
xchg
xchg
bound
adc
xchg
jnp
aaa
adc
incb
pop
sbb
pop
imul
in
or
mov
xchg
jbe
sbb
cwtl
pop
aaa
push
fwait
jae
into
in
mov
into
ds
mov
pop
jns
sbb
xchg
out
int3
push
pop
pop
mov
fldpi
movsb
pop
inc
fmull
rol
push
dec
jge
push
xchg
stos
cmp
jmp
cmp
mov
mov
sbb
sub
pop
push
jge
fstpl
xlat
xchg
jb,pt
dec
jno
add
mov
mov
dec
outsl
bound
into
std
mov
lds
test
test
bound
inc
ret
mov
fidivrs
adc
mov
push
pop
cmpb
scas
xchg
bound
mov
mov
fwait
lret
adc
inc
sub
or
mov
mov
stc
adc
and
ss
in
jmp
inc
rorl
cltd
notl
cmpsb
adc
jmp
cli
push
mov
and
xor
dec
lret
dec
lods
fwait
or
dec
fidivrl
call
cmp
adc
mov
and
mov
pop
outsb
bound
lcall
jb
mov
mov
push
mov
fwait
mov
xchg
insb
mov
xchg
push
leave
cli
jbe
scas
dec
adc
inc
adc
fcmovne
inc
add
faddl
mov
aam
sbb
mov
pop
or
mov
orl
sbb
bound
loope,pt
test
mov
sub
je
aaa
lahf
out
in
bound
xchg
or
add
pop
pop
repnz
pushf
cmc
pop
jecxz
test
xchg
sti
and
add
mov
adc
adc
sub
in
stos
xor
sbb
push
cmp
ss
sahf
stc
push
cmpsl
adc
daa
testb
adc
mov
sub
popf
add
mov
and
std
jo
dec
nop
addb
sahf
in
loop
fisttpll
divb
xchg
cwtl
xor
sbb
lret
and
lret
mov
test
mov
rcl
into
cwtl
pop
pop
mov
xchg
mov
jno
mov
jp
fmull
cmpsl
push
and
lods
aad
inc
rorb
mov
and
cmpsl
xchg
cmp
mov
imul
pop
popf
das
jnp
inc
dec
pop
jge
add
ror
xor
cmp
and
sbb
xchg
pop
in
push
sti
xchg
inc
int3
aam
and
lock
and
daa
push
testb
out
mov
pop
mov
dec
mov
pop
add
pop
lcall
push
mov
or
outsb
mov
mov
gs
ljmp
lcallw
es
ljmp
pop
dec
popf
jg
mov
mov
and
in
lret
mov
cmpsb
ret
dec
cmp
lods
ja
add
cli
inc
fsubrl
push
test
cli
lea
repz
stos
cmp
cmp
xchg
or
xor
inc
mov
jg
into
lods
xlat
mov
xchg
dec
adc
movsb
sub
xlat
adcl
popa
cltd
sbb
jp
sub
xchg
sbb
mov
adc
push
mov
mov
lret
and
jge
rcr
jo
cmp
fisttpll
sbb
fldl
push
pop
xchg
push
lds
out
sbbl
push
inc
mov
sarb
out
mov
out
mov
stc
fmuls
stos
and
adc
call
inc
and
sub
div
mov
xchg
fildll
nopl
dec
jb
or
xor
in
inc
dec
imul
movsl
xchg
mov
jle
je
iret
fisubl
cmp
sub
outsl
mov
sbb
mov
xchg
dec
fwait
xchg
push
sbb
sub
mov
ss
inc
mov
dec
mov
in
xchg
insb
xor
rcll
nop
xor
repnz
jg
adc
mov
frstor
jg
push
rcr
lods
lret
cmp
push
test
test
ficoms
push
or
mov
inc
imul
pop
push
test
test
xchg
or
movsl
mov
and
incl
in
sbb
xchg
aam
sub
lock
idivl
leave
sub
mov
xchg
out
push
xchg
hlt
mov
cld
xor
inc
stos
sbb
pop
ds
sbb
or
mov
stc
imull
add
in
xor
iret
add
inc
jmp
orb
scas
and
adc
call
stc
hlt
jl
lcall
idiv
dec
scas
int
jl
xor
inc
out
xor
pop
cmp
lods
pop
push
pop
jno
xchg
xchg
and
insb
dec
mov
mov
adc
iret
add
add
and
jmp
popf
jl
adc
arpl
fstl
xchg
push
cmp
mov
lcall
sbb
sub
mov
mov
pop
call
push
sub
shl
test
fldt
add
sbb
sbb
add
pop
cmc
xchg
cli
call
jecxz
dec
rcrb
aam
fstpl
push
jl
xor
out
push
push
testl
jo
or
push
ljmp
lcall
xchg
add
xor
sub
daa
add
in
rolb
sbb
setae
inc
pop
push
popa
sbb
in
stc
sbb
mov
dec
xchg
xchg
dec
lds
in
lods
fldenv
hlt
mov
movsb
pusha
cmpsl
faddl
push
inc
mov
repz
sbb
cmp
out
sbb
icebp
dec
mov
jb
and
jp
sbb
daa
or
lock
into
fimull
xchg
fbstp
lcall
das
sub
fs
cwtl
adc
sbb
mov
ret
fstps
push
movsl
push
cmpsl
popf
push
js
icebp
nop
mov
adc
add
fdivrs
dec
adc
pop
repz
in
cmp
jb
dec
popa
xchg
or
insb
aad
lods
into
test
lcall
inc
inc
stc
cmp
jnp
lret
orl
pop
lds
fildll
mov
arpl
mov
addr16
rcll
cwtl
ss
es
jg
mov
es
adc
test
ficomps
aad
dec
jl
lret
outsb
xlat
bound
mov
mov
fwait
js
stos
cmc
mov
mov
test
ja
dec
adc
fistpl
cmp
loope
ja
fcom
test
test
cs
int3
sub
sub
jl
adc
repz
push
les
outsb
stos
fidivs
test
jle
inc
adc
add
jae
jns
jne
pushf
rcr
imul
mov
add
jne
cmp
rorb
hlt
jmp
xchg
jecxz
sbb
loope
sub
shrl
nop
push
test
scas
sti
loopne
loopne
daa
cld
pop
loop
inc
pop
fldl
out
add
sbb
push
mov
adc
inc
pop
xor
inc
mov
es
adc
imul
dec
inc
ljmp
out
xlat
out
loope
insb
out
lods
inc
push
out
mov
daa
and
outsl
push
rclb
addr16
dec
adc
push
jmp
fsub
ret
icebp
lock
cmpsb
std
daa
inc
sbbl
adc
outsl
pushf
and
jmp
addb
rolb
xor
dec
out
movl
xchg
in
sti
int
pop
arpl
mov
int3
jnp
sub
insl
push
or
out
xchg
adc
lahf
jle
stos
and
aam
addr16
aad
stos
cmp
shll
xor
lock
aam
dec
pushw
xchg
jne
movsb
mov
adc
stos
xor
inc
mov
sbb
mov
sbb
xor
mov
imul
and
pop
or
inc
mov
es
push
inc
pop
sbb
insb
ja
or
jno
pop
movsl
jl
clc
push
fcomp
mov
adcl
jns
fwait
outsl
cmpb
icebp
lret
xchg
mov
testb
test
lcall
mov
test
xor
sbb
lret
mov
mov
pop
sub
aas
dec
clc
jo
add
dec
xor
xor
mov
adc
jle
in
repnz
fcmovu
sbb
adc
add
mov
lcall
xor
je
jl
sti
inc
sbb
sbb
ss
or
sti
mov
adc
jg
pushf
fs
xchg
adc
not
push
jp
lds
xchg
pop
cmpl
or
push
fists
aaa
jo
mov
stos
push
cmp
clc
insb
loopne
add
xor
popa
inc
or
pop
mov
sub
int3
xor
shl
pop
lcall
in
push
mull
mov
enter
push
cmpsl
nop
arpl
push
js
cmp
sbb
sbb
fwait
test
fiaddl
inc
sbb
or
test
out
sub
cmp
int3
cs
scas
mov
cmp
mov
mov
in
add
xchg
inc
shll
mov
test
pop
leave
pop
loope
dec
test
in
subb
ja
xchg
inc
and
movsb
push
mov
mov
leave
sbb
push
xor
aas
pop
loope
and
jne
push
add
xor
loop
sub
dec
cmp
dec
and
xor
in
ret
mov
mov
fisttps
xchg
lea
or
stc
jno
ja
test
adc
jp
or
xor
cmpsl
sub
pop
loopne
aaa
adc
mov
outsb
mov
mov
push
mov
xchg
int3
iret
jge
xor
push
pop
sub
lock
sbb
pop
or
ds
add
pushf
jmp
pop
cmp
mov
out
aam
test
and
pop
add
fsubrs
pusha
cmp
push
xor
cmp
mov
das
xlat
dec
int3
xchg
flds
incb
cmc
clc
jbe
std
shr
mov
xor
inc
movsb
push
mov
inc
adc
test
pop
lods
leave
pop
push
mov
lret
and
insb
shl
jge
pop
cmp
cltd
test
jno
jnp
jp
jl
cli
dec
xor
mov
sbb
pop
cmp
add
lahf
sub
in
xchg
mov
repnz
xor
sbb
adc
fisttps
outsb
push
sub
cmp
sub
aas
ficompl
out
lahf
into
mov
icebp
imul
insb
popa
sti
mov
shl
imul
hlt
mov
sub
aam
fs
cld
leave
pusha
or
das
scas
ret
icebp
mov
and
xchg
ret
fsts
call
sbb
jo
xchg
mov
add
push
std
dec
frstor
rcl
daa
cli
sbb
sbb
imull
sbb
push
and
inc
push
push
std
div
test
cmp
cs
ss
in
push
sub
pop
sbb
sub
jns
adc
push
sbb
lods
mov
in
pop
int
inc
inc
outsl
pop
add
jmp
bound
add
cmp
dec
movl
sub
cmp
xor
xchg
cwtl
xchg
out
add
je
cmc
mov
lret
add
push
fldl
inc
adc
lods
lahf
sbb
cmp
sub
xor
call
das
xchg
test
dec
or
jns
insb
add
in
and
dec
or
adc
jmp
fnstsw
xchg
les
fsubrl
xchg
sbb
or
shl
test
movsl
sbb
sti
je
dec
fisttps
fadds
sub
test
xor
sbb
push
leave
pushl
and
xchg
cmpsl
and
cwtl
or
gs
pop
mov
jno
cld
sbb
cmpsb
lcall
xchg
fimull
mov
sbb
xchg
ds
cmp
pop
adcb
push
xchg
dec
mov
imul
mov
nop
jns
fidivl
mov
out
or
daa
ja
xor
push
iret
lret
and
int
mov
test
shll
or
ss
push
clc
sbb
or
sbb
dec
push
push
dec
push
xchg
lds
xlat
push
cwtl
lods
add
dec
push
xchg
fistpl
inc
and
sub
fsub
test
cmpsb
dec
and
fisttpll
shll
xchg
pop
ret
mov
loopne
adcl
xchg
test
mov
or
or
scas
pop
jg
inc
mov
pushf
mov
xchg
and
or
cmp
jle
cmpsb
push
scas
ficoms
sub
sub
mov
faddl
fwait
jmp
ss
mov
ljmp
cmp
mov
sub
dec
test
je
xor
xor
mov
push
clc
cmp
sahf
mov
xor
sbb
add
push
fstps
insl
push
inc
aas
mov
cwtl
sbb
ja
sbb
jne
lret
jecxz
xor
cmp
sti
ret
lea
fadds
fadd
inc
mov
in
jmp
mov
adc
add
lods
cs
lods
xchg
push
push
sbb
xchg
sbb
adc
ret
xchg
hlt
repz
imul
aam
sbb
push
pop
cmp
sahf
add
and
mov
mov
test
jno
mov
sbb
scas
int3
imull
jp
push
dec
sarl
stc
mov
sub
loope
jle
inc
add
insb
push
loop
push
lahf
mov
imul
jb
jecxz
adc
int3
cmp
jbe
mov
mov
lret
xchg
aam
push
push
cwtl
inc
pop
add
xchg
fiaddl
push
lds
inc
add
repz
test
sbb
or
or
rolb
adc
dec
mov
push
lret
push
in
sbb
in
out
dec
mov
hlt
pop
mov
sub
repz
pop
loop
addl
pop
sti
adc
dec
pop
jl
jmp
sbbl
mov
cmpsb
push
jg
bound
xchg
push
xchg
lods
xor
xor
mov
dec
pop
mov
sub
sub
rorl
cmp
or
ds
sub
dec
movsl
rcll
rcll
lock
inc
scas
enter
mov
rcrl
add
je
sbb
xor
mov
testb
cwtl
fisubrs
sbb
fwait
or
or
sub
daa
sbb
xor
nop
ret
cmp
stos
mov
pop
popa
popf
ret
xor
subb
jmp
xor
pop
aam
mov
sbb
push
scas
push
ficoms
das
cltd
mov
sbb
cmc
xchg
mov
nop
hlt
and
inc
sbb
inc
lods
pop
dec
fimull
adc
inc
outsb
mov
jne
std
push
sti
int3
push
insl
push
fldenv
lock
and
jecxz
rorl
xchg
mov
dec
cmp
dec
adc
inc
test
popa
fcomps
das
jo
shlb
rcrl
xor
clc
les
cmp
mov
fcmovbe
or
xchg
rcrb
dec
icebp
push
movsb
shrb
call
sti
pusha
add
pop
clc
loop
push
xchg
repz
pop
out
out
jecxz
popf
cld
mov
mov
inc
push
aaa
mov
jne
sarl
xchg
jne
aaa
mov
mov
sub
mov
jae
outsl
clc
fdivp
xor
pop
adc
cmp
pop
sti
jae
jle
xchg
icebp
or
add
adc
insl
lahf
sbb
sti
dec
xchg
xchg
or
sbb
xchg
xor
aam
loope
les
adc
es
mov
add
loop
aas
cltd
int
cmpsl
cmpsb
xchg
pusha
inc
adc
rcll
into
sbb
push
add
mov
push
aas
push
dec
push
and
sub
popa
ja
andb
and
cmpsb
mov
leave
jmp
enter
pop
sub
sbb
pop
xchg
mov
ror
push
mov
xchg
push
aaa
nop
mov
add
sbb
or
aam
xchg
aad
stos
push
inc
mov
popa
idiv
popa
test
or
mov
jl
jnp
push
mov
mov
jmp
push
fisubl
mov
sbb
adc
dec
ds
lret
insb
shrl
pop
ret
int
mov
lret
add
lods
outsb
es
cs
fcomi
adc
xor
xchg
cmp
mov
pop
sub
xchg
orb
inc
sbb
movsl
jmp
xchg
test
inc
jmp
cmp
insb
pop
sub
or
das
movsb
mov
push
jp
stos
jp
nop
out
dec
add
pushf
mov
cmpsb
gs
sub
out
adc
das
or
pop
iret
gs
mov
adc
filds
shr
dec
add
sar
loop
jne
mov
sahf
or
lcall
jns
pop
cmpsl
inc
ret
aas
xor
xor
insl
loope
mov
cmpsl
mov
jb
gs
test
jecxz
cmc
add
push
jmp
mov
sbb
ret
mov
fisttpll
add
sub
or
push
mov
pushf
xor
pop
out
insb
popf
push
or
mov
cmp
xchg
and
adc
andb
fists
xchg
push
pop
xorb
in
adc
leave
mov
mov
push
mov
rcrb
sbb
push
add
sbb
sahf
test
out
pop
aas
lret
mov
add
cld
lea
inc
shrb
or
orb
out
cmpsl
push
les
insl
xchg
sbbl
lock
xor
add
int
xlat
push
xor
jne
test
sbb
sbb
dec
dec
inc
inc
aam
jb
sbb
mov
dec
test
cmpsb
mov
cmp
and
sbb
gs
shlb
fnstsw
lcall
fidivl
xchg
stc
push
fldt
jge
inc
jb
cmp
test
fwait
pop
imul
push
sbb
and
scas
jae
jno
mov
lahf
sbb
or
fsubrp
stos
jp
in
insb
mov
inc
dec
mov
out
push
scas
push
movsb
imul
push
dec
and
pop
rep
outsb
adc
jb
sub
push
mov
jmp
push
mov
xchg
mov
push
mov
jecxz
les
pop
enter
ret
ja
insb
inc
cmpsl
out
sub
or
clc
xchg
sub
push
out
shl
iret
jp
int
test
fidivs
jmp
cmp
mov
mov
inc
fwait
daa
xchg
mov
scas
outsb
andb
ljmp
jno
ss
cmp
xlat
and
pusha
jg
test
xorb
aaa
testl
dec
mov
bound
test
add
xlat
jae
out
outsb
jmp
fcom
and
or
mov
lds
ret
mov
dec
outsb
mov
push
xchg
pop
inc
cltd
xchg
es
mov
inc
das
stos
pslld
xor
push
xchg
adc
push
stos
mov
mov
pop
mov
push
xchg
repz
push
mov
xor
cmp
sbb
push
cmp
or
xor
adc
out
jle
movsl
incb
jne
jge
pop
mov
mov
mov
outsl
hlt
insb
subb
test
inc
rcrl
mov
int3
xor
imull
xchg
dec
dec
out
xor
lret
lret
xchg
push
sub
imul
repz
push
mov
push
mov
xor
pop
int3
je
cwtl
mov
pusha
jge
mov
push
pop
sti
mov
repnz
fucomi
jne
dec
cs
rorl
cltd
jge
mov
push
xsave
jb
andb
pop
scas
mov
xor
mov
dec
outsl
ret
out
daa
jne
jle
push
seto
mov
fbld
icebp
cmp
mov
sub
xor
icebp
repz
jae
pop
std
das
pop
mov
adc
xchg
repnz
jge
pop
mov
out
sti
repnz
nop
repz
xadd
cld
movsb
mov
push
adc
pusha
sub
mov
aad
push
les
mov
lds
pop
dec
and
xor
xor
sub
into
das
inc
gs
sbbb
les
and
cmp
movl
push
cmp
cld
xor
popf
das
or
pop
dec
sahf
stc
sbb
lret
cmpsb
pop
inc
faddl
or
sti
rcl
pusha
mov
and
inc
mov
shlb
add
xor
inc
jae
mov
hlt
and
mov
ss
sub
inc
cmp
inc
push
jb
or
dec
push
test
scas
dec
xor
lods
inc
imul
or
inc
mov
add
decb
jecxz
ja
mov
mov
jo
dec
mov
push
pop
in
decb
mov
cmp
mov
and
in
test
test
popf
xchg
test
mov
and
cmp
ret
rclb
push
sahf
int3
out
int
mov
lock
mov
ljmp
adc
test
xchg
cmp
or
xchg
js
cmp
stc
mov
cmpl
jg
and
jp
sahf
pop
sub
pop
imul
xchg
pop
dec
fistps
int
in
lea
xor
mov
mov
xor
mov
mov
cmp
hlt
inc
cltd
mov
mov
insl
pushf
cmp
mov
dec
lret
jge
pop
sti
mov
xchg
xchg
es
test
pop
pop
outsb
ret
imul
nop
mov
dec
pop
aaa
add
sub
push
lock
sub
jns
cmp
and
test
sbb
lods
mov
stc
outsb
mov
mov
ss
and
test
inc
sbb
xchg
daa
fisttpll
cwtl
mov
negl
mov
push
int
out
in
in
or
pop
inc
sub
rol
and
mov
cmp
ljmp
repz
cwtl
mov
mov
push
pushf
and
mov
es
xchg
shlb
data16
push
cld
pushf
lods
cmp
add
mov
inc
or
xchg
and
js
rcrb
or
cmp
xor
pusha
loopne
icebp
in
add
out
pop
jbe
fmul
or
xchg
call
add
adc
andl
in
mov
sbb
cmpsl
cli
insb
iret
sbb
cmp
movl
pop
enter
shlb
push
and
negb
out
das
repz
lcall
in
sarb
dec
call
pusha
scas
je
loop
or
cmpsl
and
inc
stos
sbb
mov
leave
mov
inc
data16
inc
push
ret
dec
mov
faddp
shrb
nop
xor
addl
mov
and
mov
fldcw
xchg
pop
add
cmp
popa
cwtl
je
out
jb
cmp
iret
sbb
pop
mov
xor
jnp
orb
movsl
xor
test
fnsave
adc
jl
movsl
dec
fs
icebp
inc
mov
call
jle
xor
insl
pop
divl
add
test
into
fimuls
ja
lock
das
and
lds
outsb
out
imul
inc
push
xchg
xchg
mov
in
stos
cmp
movsb
dec
xor
hlt
ljmp
das
cmp
cld
popf
xor
bound
int
mov
aaa
arpl
mov
test
lods
mov
addr16
cmc
jb
dec
sbb
cmpsl
test
scas
mov
pop
out
flds
push
movsb
adc
insb
mov
jb
add
push
adc
jg
add
lods
cltd
mov
or
cwtl
lds
add
bound
push
sahf
pop
pop
lret
sbb
adc
add
sub
punpckhwd
mov
and
popa
cwtl
arpl
push
and
jb
and
sbb
jnp
mov
cmp
es
push
rorl
add
push
mov
mov
pop
jb
addl
bound
inc
push
loopne
inc
xor
pop
fwait
call
mov
adc
gs
aas
jmp
adc
stc
jmp
or
xor
enter
xchg
cmp
pop
mov
sub
mov
popf
daa
repnz
adc
neg
mov
sub
dec
adc
bnd
sub
sbb
add
mov
push
or
mov
shr
push
sub
out
fstpl
mov
int
sbb
lahf
jo
int3
fstl
pushf
push
test
lret
xor
pop
xchg
hlt
and
sbb
ljmp
arpl
ficomps
movb
inc
insl
mov
xchg
or
stos
sbbl
inc
dec
inc
dec
bsr
movsb
sahf
jns
cld
inc
rorb
jl
or
stos
inc
pushf
test
sti
add
test
mov
out
fidivrs
popa
ret
mov
xchg
jmp
loopne
insl
lods
incb
fldl
mov
insb
popf
popf
mov
orb
rorb
cltd
lcall
sti
mov
push
mov
dec
pop
and
fmul
cmpsl
cld
icebp
mov
add
dec
fcomps
jbe
mov
pop
or
sub
fildl
cwtl
jno
cmp
mov
dec
push
cli
movsb
fsubl
mov
adc
xchg
add
sub
lret
cmp
add
jbe
ret
sbb
dec
push
fnstsw
sub
je
lret
lods
outsb
add
jg
cmp
sub
rcrb
aaa
jnp
rcll
push
leave
xor
mov
popf
mov
cmp
shrb
enter
pop
lds
pop
and
push
outsl
cmp
cmp
and
adc
popa
push
lods
mov
xchg
out
filds
pop
sub
mov
pop
push
inc
ljmp
adc
sbb
cmp
jno
mov
fnstcw
lea
and
mov
mov
shl
jle
fsub
inc
test
push
test
fnstsw
pushf
adc
loope
nop
add
arpl
bnd
fwait
mov
icebp
shrl
adc
leave
mov
cmp
cltd
and
fcoms
cmpsb
clc
out
dec
push
fwait
insb
xor
mov
push
fildl
push
test
adc
pop
sbb
cmp
les
scas
mov
inc
testb
movsl
pop
int
pushf
fdivl
insl
pop
jb
popf
jmp
dec
dec
xchg
sbb
xor
gs
bnd
flds
push
dec
clc
lcall
add
int
or
xchg
lret
xor
ljmp
mov
pop
dec
popf
xchg
xor
mov
pusha
push
in
pop
sub
fldcw
jecxz
adc
int3
and
cmp
popa
pop
xchg
pop
xchg
in
xchg
in
jge
mov
test
movl
mov
jb
jg
xor
sub
cmp
testb
mov
movsb
mov
lods
ficoms
inc
or
xchg
adc
aaa
mov
scas
adc
lea
jecxz
mov
repz
testb
jnp
adc
jmp
pushf
outsl
movl
mov
outsl
sarl
aaa
and
mov
sub
pop
jl
cmc
dec
call
push
sub
dec
xchg
xorb
cltd
inc
out
cmp
xlat
jo
sub
je
push
mov
push
pop
sbb
jle
sub
mov
dec
hlt
subl
clc
lret
sbb
testl
adc
testl
cmp
insl
and
jle
sbb
andb
inc
jbe
mov
mov
scas
inc
push
ret
inc
xchg
add
pusha
repnz
inc
ret
loop
enter
or
xor
sbb
insb
push
jle
mov
ljmp
jbe
aam
sub
add
xor
popa
push
cmovnp
add
mov
pop
sub
fwait
mov
cmpb
fnstenv
dec
andb
insb
mov
sbb
sti
jge
lds
ret
shl
mov
ret
cmp
clc
mov
in
ds
mov
es
xor
push
pop
sub
cmpsl
pusha
sbb
push
int3
insb
cmp
call
insb
jns
pop
fisttpll
addl
adc
leave
bsr
dec
push
fcom
jb
xchg
cmp
and
cmpsb
and
test
out
push
imul
xchg
mov
imul
scas
flds
loopne
mov
pop
repnz
push
jo
mov
shll
cmp
into
dec
sub
pop
loope
mov
out
add
push
popl
rorl
movsb
push
sbb
add
pop
dec
push
cltd
add
repnz
dec
inc
aaa
bnd
jle
dec
push
movsl
sbbl
das
pop
mov
push
mov
out
jp
fidivs
popa
movsb
les
and
sbb
jo
push
das
ficoml
add
stos
test
out
es
testb
push
cmp
iret
in
pop
or
arpl
xchg
fwait
addl
neg
cmc
cmp
cmp
and
jno
cld
enter
leave
rcr
pop
push
mov
jg
dec
mov
gs
xchg
xlat
out
cmpsb
cmc
out
cltd
test
cmp
aaa
aaa
push
mov
ljmp
add
push
add
das
sbb
adc
or
push
jmp
dec
cmc
loop
pushf
jns
xchg
push
and
mov
ds
xchg
pusha
pop
dec
sub
jecxz
das
inc
out
test
mov
repz
jns
out
pop
or
push
cwtl
push
pop
fcomp
jge
test
inc
fwait
js
lcall
mov
cmp
js
das
xorl
add
mov
cwtl
stos
in
sub
mov
fwait
int
arpl
std
mov
hlt
inc
addr16
cmpl
inc
test
add
push
adc
push
xchg
push
mov
jne
and
mov
cwtl
jg
outsb
dec
shl
pop
mov
sbb
mov
mov
cmp
in
loopne
xchg
popa
addr16
lds
mov
insb
cmp
and
es
popf
sbb
mov
push
adc
sbbl
and
cmpsl
clc
aad
dec
lret
mov
mov
lock
sbb
mov
loopne
push
lcall
mov
shl
nop
mov
inc
jg
mov
adc
popa
ss
mov
sbb
shlb
aam
loop
adc
mov
test
pushf
sbbl
setnp
std
dec
popf
mov
mov
shl
call
iret
cmpsb
clc
rclb
or
sub
cmp
xor
frstor
int
lahf
dec
mov
bound
loopne
fdivp
test
dec
pop
cmp
ja
jge
cltd
push
and
cmp
add
cmp
jg
pop
xchg
mov
cmpsb
jae
ljmp
stos
xchg
scas
jp
xor
cmp
push
fnstenv
inc
mov
das
inc
adc
xor
fcmovb
cmp
cmp
jg
aam
xor
sbb
inc
inc
mov
mov
popf
lcall
push
pop
xchg
cld
outsl
xchg
aas
push
sub
call
daa
and
lea
clc
movsl
mov
pusha
clc
mov
in
inc
sarb
scas
arpl
mov
ja
decl
dec
xor
lods
loope
in
adcl
and
push
divl
jecxz
push
nop
xlat
repnz
jae
cs
and
cs
fs
in
nop
and
je
shrb
rclb
out
ja
cmp
sbb
cld
cmpsb
jne
mov
fsub
cmp
ret
push
push
ret
dec
cwtl
push
and
add
push
cmp
push
push
jge
testl
push
fdivs
xor
push
or
xor
ja
inc
imul
cwtl
cli
ret
lret
fwait
xchg
and
pop
data16
jo
sub
pop
and
pushf
adc
cmpsl
add
sbb
push
fwait
ja
mov
lret
cmp
scas
and
sub
test
sahf
or
cmp
or
xor
cwtl
inc
add
out
test
push
sub
cmp
dec
imul
in
sahf
and
dec
xchg
cltd
aaa
ja
pop
xchg
pop
inc
sti
fadd
call
into
jns
push
jb
fcoms
sti
movsb
inc
pop
cld
outsb
mov
popa
stc
pushf
push
jecxz
cmpsl
mov
mov
and
cmpb
fisubs
sbb
sub
jne
xchg
inc
out
popf
and
mov
or
btr
jge
pop
into
and
and
in
cld
mov
adc
sub
and
push
and
push
xchg
xor
or
inc
mov
fimuls
xor
push
pop
bound
push
or
es
jbe
xor
insb
mov
sub
lods
push
ret
leave
and
gs
mov
pop
xchg
insb
jecxz
lahf
mov
lret
int
mov
testb
js
mov
call
lahf
dec
mov
es
jno
cmp
adc
mov
xor
mov
lret
hlt
cli
inc
cmp
push
ljmp
test
ds
scas
cmp
outsl
hlt
sbbb
mov
cmpsl
inc
shrb
mov
xchg
fcomip
add
daa
shrb
iret
nop
add
cmpb
add
and
pop
push
loop
inc
xlat
pop
aam
pop
mov
or
stc
adc
add
sub
stos
inc
neg
and
xor
push
xchg
mov
ss
fs
mov
loopne
push
or
jns
bound
cmp
mov
push
test
xor
mov
lcall
in
xchg
repz
daa
jns
aam
and
aad
movsb
popf
and
divl
cld
sbb
add
mov
xchg
jns
and
mov
stc
mov
ds
mov
inc
add
fimull
adcb
popa
mov
and
inc
xchg
aaa
mov
pop
dec
push
movsb
and
push
push
push
inc
sarb
adcb
movsl
push
xor
sbb
sub
lods
and
sub
stc
cld
push
arpl
ds
nop
clc
stos
or
fimuls
stos
mov
btr
call
xchg
cmc
stos
popa
sub
rcr
daa
mov
push
xor
enter
out
dec
inc
or
lret
mov
cli
repnz
xor
pop
fst
repz
shr
sub
inc
or
mov
sbb
in
fnstcw
and
sub
inc
insl
xor
mov
fstpl
shrb
jg
loop
jmp
frstor
cmp
mov
mov
mov
mov
daa
sub
and
pop
orb
pop
cmp
mov
mov
sahf
scas
sahf
add
ficoml
mov
mov
fstpl
orb
inc
bnd
xor
cld
inc
xchg
shll
pop
fbstp
fadds
in
flds
jle
vmovq
popa
dec
pop
mov
into
insb
xor
pop
popa
rorb
cld
loope
pop
inc
mov
or
repz
incb
mov
jecxz
stos
mov
push
mov
or
aam
scas
lds
mov
cmp
push
or
or
push
or
mov
xor
imul
arpl
xchg
sbb
pop
es
out
push
in
xor
adc
pop
or
addl
pusha
aam
pop
mov
lahf
aas
lcall
pushf
dec
xor
loopne
roll
push
cld
cmpsb
xchg
lods
aaa
sbb
cli
aas
xchg
stos
adcl
push
and
aas
lret
loopne
add
xchg
insb
or
jns
xor
cmp
push
roll
push
mov
pop
mov
adc
hlt
pop
notb
adc
add
jmp
call
jne
dec
addr16
xlat
mov
jecxz
sub
inc
fcompl
popf
sub
adc
pop
jmp
mov
popa
inc
out
push
fwait
pop
jns
dec
es
or
shrb
jns
jbe
pop
and
outsb
sbb
jne
dec
inc
xchg
mov
xor
jns
or
leave
popa
insb
xor
fwait
add
sbb
jg
mov
cmp
icebp
cli
xor
imul
sub
mov
push
mov
or
jge
pop
out
add
lds
or
hlt
push
es
mov
jp
mov
pop
push
adc
sahf
push
inc
fdivrp
and
or
inc
addb
nop
gs
repnz
popf
pop
rclb
lods
pusha
and
test
out
vcomisd
sub
sbb
mov
repnz
fmuls
sub
mov
into
inc
and
cmpsl
aad
ja
dec
jbe
pop
js
hlt
data16
repnz
out
xchg
jo
or
sub
lret
jbe
xor
shrl
jno
or
in
mov
push
xchg
out
sub
or
mov
or
xchg
push
sub
add
fstpl
bound
inc
jns
sahf
cmpsl
push
repz
mov
cwtl
testb
insb
mov
and
pop
xchg
or
scas
pop
xor
int
mov
mov
xchg
jmp
lea
push
pop
rorb
cmp
dec
mov
mov
add
ret
jne
pminub
mov
adc
stos
cmp
push
jl
jecxz
push
or
out
out
sahf
iret
div
es
cmp
xchg
push
mov
daa
cs
pop
and
aad
lahf
jb
lret
pop
mov
ljmp
push
cltd
gs
in
ljmp
lcall
sti
mov
sub
and
cmp
inc
inc
inc
nop
addr16
loope
fildl
xorl
fisubrs
dec
lods
data16
arpl
pop
jb
lret
xchg
push
cli
sarb
sbbl
lock
lea
lret
daa
inc
mov
ret
xchg
inc
ss
xchg
push
dec
pop
mov
xor
ds
pop
cmp
pop
les
pop
xlat
std
outsb
clc
jl
push
out
out
xor
inc
fisttps
mov
xor
mov
add
loopne
lock
xor
imul
cmp
cmp
pop
xor
dec
icebp
clc
bound
jns
mov
jmp
mov
and
sub
movsb
add
outsb
mov
jbe
fst
addr16
pop
mov
mov
jp
and
pop
add
std
sub
lea
scas
mov
add
push
adcl
pop
idivb
into
dec
and
lock
pop
sbb
stos
mov
cmp
mov
lea
stos
push
jae
jae
adc
sub
or
fs
arpl
stos
call
mov
std
push
xor
pop
stos
jno
ljmp
jmp
jmp
inc
or
fnstsw
cmp
cwtl
sbb
popa
dec
lcall
mov
xchg
add
adc
outsb
stc
daa
shll
push
fistpl
cld
push
test
aaa
jbe
lea
cmp
or
lock
cli
lods
jbe
les
loope
ja
adc
movsb
push
dec
fildl
mov
mov
lahf
push
add
shll
sub
pop
repz
andl
fwait
dec
cmp
aam
pop
push
xchg
sbb
cmp
xor
ds
and
repz
inc
mov
in
pop
adc
or
jmp
inc
ror
lret
push
dec
in
lahf
pop
sub
divl
mov
insl
hlt
or
mov
stos
daa
pop
in
les
xchg
call
push
inc
xchg
test
push
scas
adc
dec
mov
or
sub
jae
pop
mov
inc
mov
mov
enter
or
mov
out
lea
sbb
sbb
sub
test
jmp
cwtl
jg
out
xchg
out
xchg
add
fimull
xor
cmpsb
mov
push
cmpsb
leave
ret
and
adc
lds
xor
pop
int
ret
jb
inc
insb
lods
push
movb
pop
pop
lcall
mov
rcll
enter
push
cmp
movsl
sbb
sub
repnz
stos
push
cmp
sbb
adc
mov
leave
xor
ss
xchg
sbb
jecxz
push
jle
out
jg
mov
fsubs
stc
adc
jge
inc
mov
arpl
lods
in
and
sub
mov
inc
cltd
xor
push
imul
enter
and
int3
mov
mov
addr16
pop
lods
add
add
push
pusha
or
call
and
lret
sti
lock
not
push
mov
arpl
out
fdivr
bound
cmpsl
in
push
aaa
les
shrl
cmpsb
ret
push
shlb
adc
push
lods
insl
jae
loopne
int
inc
mov
xchg
insb
lods
das
push
mov
add
mov
in
les
movsl
imul
mov
jg
imul
add
pop
stos
mov
dec
inc
mull
jmp
adc
jne
push
pop
in
adc
pop
mov
jl
into
scas
mov
dec
inc
dec
or
cmp
int3
or
sahf
lahf
daa
decb
aaa
int
push
cmp
enter
outsb
mov
adc
or
jnp
std
push
mov
enter
fiadds
xor
and
push
ljmp
ds
pmaxub
mov
shll
pop
adc
sub
jnp
arpl
nop
cmp
push
push
aas
out
ss
rol
fisttps
subb
es
pop
inc
sahf
repz
stc
leave
loopne
mov
adc
fsubs
pop
test
mov
lahf
adc
mov
inc
rcll
push
dec
test
in
loopne
and
std
push
or
lahf
push
pop
fcoml
dec
add
jb
sti
outsl
shlb
cltd
scas
push
adc
mov
push
lahf
les
in
pop
dec
add
mov
cmc
rolb
movsl
fcoml
push
mov
mov
push
jmp
fcmove
out
xchg
pop
leave
out
imull
add
and
mov
xchg
mov
rolb
jns
adc
push
mov
jnp
push
in
pcmpeqd
push
cmp
fistpl
arpl
ds
jae
push
lods
aam
mov
inc
enter
sub
enter
cmp
adc
repnz
jbe
idiv
in
insl
inc
push
push
and
les
jae
movsb
cld
mov
cwtl
xchg
scas
adc
mov
pop
ja
test
jns
jns
add
cmpl
adc
repz
int3
jp
and
xorl
pop
ja
inc
bound
jg
in
lcall
adc
fsubrl
sbb
pop
cli
pop
lahf
cmpsb
xor
ljmp
mov
push
jnp
pop
test
call
repnz
xchg
pop
inc
or
and
fistl
and
jecxz
jecxz
stos
sbb
dec
xchg
sbb
leave
jg
daa
mov
push
xor
dec
ret
mov
pop
mov
int3
dec
cmc
mov
lods
enter
add
sbb
repnz
test
or
jp
cmp
inc
mov
ja
mov
ss
push
addb
xchg
icebp
xor
sbb
inc
into
in
iret
mov
inc
pop
lock
or
cmpsb
outsl
xchg
push
addr16
cld
mov
pushf
repnz
sub
cld
fcomip
lret
add
or
adc
bnd
and
ror
mov
push
push
popa
out
xchg
pop
xor
imul
jno
mul
pop
inc
les
popa
add
xchg
xor
int3
mov
inc
mov
inc
or
mov
fwait
out
mov
iret
add
addr16
dec
pop
lods
jno
xchg
xor
jl
cltd
sub
imul
add
test
or
incl
inc
dec
popa
aam
outsl
cmc
es
cmc
test
or
adc
sbb
rcrl
xor
scas
sti
pop
dec
xor
push
loope,pn
xor
test
cmp
push
sub
fiaddl
dec
sub
or
es
scas
fiadds
xor
aaa
and
sub
mov
sbb
lret
mov
std
in
jnp
and
scas
and
jne
xchg
cmp
icebp
jno
jecxz
mov
fnstcw
ss
xchg
xchg
lret
dec
and
loopne
scas
loop
fstpl
out
mov
jb
inc
arpl
jnp
sarl
out
jb
xchg
pop
mov
mov
adc
into
sub
in
das
ljmp
in
inc
inc
call
xchg
enter
mov
xor
push
notb
push
div
cwtl
lcall
mov
xchg
fcmovu
addb
test
in
xchg
jnp
jl
outsl
lock
icebp
cmpsl
cs
icebp
push
pusha
in
and
arpl
fs
mov
addr16
hlt
inc
mov
adc
jb
cmpsb
in
inc
mov
jmp
into
das
fidivrs
stc
loope
and
sub
scas
gs
stos
call
repnz
xlat
stos
sub
jp
mov
test
rolb
mov
xor
pop
popf
cmp
jmp
and
xchg
scas
insb
mov
xchg
inc
fld
push
push
aas
mov
popf
inc
popf
dec
sub
out
push
xchg
jno
inc
dec
clc
imul
jb
cmc
fdivrp
push
movsb
std
lret
orl
push
lahf
sarl
sbb
les
jl
sub
mov
int3
movsl
int
ret
jns
and
jnp
jle
jns
push
in
addr16
shrb
and
pop
cmp
cmpsb
xchg
sub
jge
ja
movsl
or
popf
daa
xor
cltd
int3
pop
sub
das
push
add
fidivrs
or
cmpxchg
fimull
and
xchg
adc
or
mov
mov
mov
hlt
fiaddl
gs
lods
mov
mov
lcall
into
jb
mov
jmp
popa
ds
mov
and
add
int3
lret
cmp
out
int
dec
scas
mov
std
outsb
cmp
add
dec
jne
push
pop
mov
xor
outsb
adc
in
shl
jnp
mov
sub
testl
js
jbe
mov
outsb
pop
adc
faddl
mov
push
js
lock
mov
or
jb
in
idiv
and
cwtl
stos
inc
mov
in
je
fistpl
mov
jb
aas
pop
pop
std
mov
and
ss
out
jo
jbe
cld
push
je
pop
loope
mov
lcall
ja
sti
push
mov
and
mov
popa
jo
out
ja
inc
cs
cltd
sub
jmp
dec
mov
loopne
insb
cltd
je
jge
push
fchs
into
imull
push
sbb
sub
pop
notl
lret
outsl
add
jp
mov
inc
dec
stc
out
xor
xchg
jnp
mov
push
lcall
dec
sub
addr16
jne
mov
mov
pushf
incb
pop
roll
call
sbb
fwait
mov
nop
pop
lock
test
push
sub
sub
iret
or
pop
push
dec
inc
bound
outsb
add
sbb
stc
cs
and
cmp
aad
sub
add
xchg
sbb
notl
int3
inc
je
mov
testb
sub
aad
dec
lret
mov
lret
xchg
cmp
neg
cmp
loop
in
mov
or
jle
out
pop
sbb
jp
enter
or
into
mov
add
arpl
andl
lret
test
add
jle
and
add
sahf
xchg
cli
xchg
stos
xor
gs
mov
inc
imul
inc
inc
outsl
mov
filds
sub
test
in
or
nop
push
xor
fistps
shll
out
jle
mov
aam
stos
test
ficomps
sub
loope
cmp
incl
leave
lods
out
push
sti
dec
imul
and
or
or
inc
lcall
adc
sbbb
jg
push
cmp
dec
cs
mov
push
call
sbb
inc
mov
cmp
enter
and
std
mov
data16
push
sbb
in
enter
adc
xchg
jae
mov
sbb
sub
stos
pop
sbb
jp
push
push
out
or
aas
pop
jae
insb
push
adc
jo
adc
jge
push
jo
cmp
fsubl
stos
in
lods
lods
xor
enter
xor
mov
sub
dec
mov
jl
push
adcb
pop
lret
mov
inc
jg
fs
dec
cli
mov
addr16
pop
bound
adc
lods
jle
cmp
shlb
dec
insb
rclb
add
call
jne
dec
jg
mov
sahf
sbb
jo
mov
and
and
out
xchg
mov
push
push
lds
std
push
cmc
inc
xchg
inc
xchg
mov
wbinvd
sbb
xchg
aad
out
xchg
mov
bound
sarl
inc
or
and
pop
cmp
jg
mov
xlat
push
cmp
out
jp
sbb
mov
fldt
imul
add
dec
pop
mov
adc
xchg
les
fwait
mov
imul
loopne
mov
popa
jp
rcll
rorl
mov
in
data16
pusha
sbb
scas
aas
test
ret
dec
arpl
mov
dec
inc
sub
pop
add
push
pop
sub
repz
push
out
sub
lock
or
scas
push
cld
add
les
add
add
inc
pop
cmpsb
and
xchg
cwtl
xchg
mov
dec
stos
js
ret
xchg
pusha
jg
icebp
mov
fwait
jo
adc
in
pop
push
cmc
popa
lods
pop
mov
xlat
out
in
sub
aam
jne
int3
cmpsb
dec
dec
shrb
or
inc
push
push
adc
mov
enter
mov
ja
sbb
inc
sbb
in
pop
aam
cmp
test
mov
iret
push
ja
push
adc
mov
out
cmp
sub
aam
pop
out
loope
or
dec
ret
divl
loope
sub
stc
dec
subb
adc
mov
push
enter
or
dec
pop
lea
cmp
and
cmp
insb
mov
sbb
mov
cmc
stc
fstpl
or
jmp
fcomps
stos
das
jl
idivw
mov
inc
jle
xchg
push
and
mov
cwtl
xor
pop
xchg
movsb
sub
jno
xchg
stos
fisubl
mov
sbb
pop
pop
sub
mov
cld
ret
jne
inc
mov
daa
lcall
dec
js
inc
jmp
mov
sbb
test
cmpsb
ret
cmp
int3
in
push
ret
add
daa
push
jecxz
aaa
inc
sbb
outsb
add
mov
and
jno
pop
inc
pop
pop
rcrb
in
js
mov
dec
test
sarl
pop
sub
adc
adc
fmull
xchg
xchg
xchg
mov
shrb
mov
mov
jl
or
inc
les
cmp
push
dec
xchg
sbb
inc
dec
sbb
lods
ret
les
call
xchg
adc
sub
sbb
shlb
sbb
cvtps2pd
mov
mulb
xor
cs
fstpt
mov
fcoml
pop
mov
xchg
mov
push
pop
pop
bound
jo
rorl
add
lcall
xlat
push
dec
mov
sbb
outsb
jne
mov
pop
jmp
shl
add
push
xor
or
xchg
repz
or
adc
jne
jg
out
xor
sub
adc
fiadds
insb
movsb
push
push
cli
or
loopne
xor
rcrl
cmp
jle
mov
push
push
les
mov
rcr
or
ss
das
leave
add
and
jne
int3
push
fiaddl
test
cld
mov
in
popa
aaa
sub
xchg
std
imul
cmp
adc
mov
push
cmp
fwait
pmulhuw
rcrl
sbb
add
jns
mov
adc
xchg
rolb
push
jecxz
lea
or
lods
clc
jg
pop
inc
adc
jns
sarl
sbb
rclb
dec
jo
arpl
sbb
lock
jg
sbb
sbbb
jmp
gs
dec
fisubl
test
and
jecxz
pop
xorb
shlb
ret
lods
test
js
and
shll
push
loop
ffreep
mov
push
dec
shl
mov
cltd
fisubs
dec
push
or
sahf
push
fldl
in
and
dec
lea
pop
std
lret
mov
subb
aam
adcb
xchg
popl
push
ret
and
mov
movsl
xor
cltd
rcl
sbb
cs
repnz
dec
push
adc
lcall
das
xor
repnz
aad
lea
scas
mov
xlat
xor
cwtl
int
lock
jns
mov
xchg
push
xor
das
inc
popf
sub
loope
pop
and
ds
dec
lock
and
xor
aaa
and
xor
inc
jnp
add
cmp
popf
add
xchg
cmp
push
lods
dec
mov
movsb
lret
mov
mov
and
int3
xor
push
mov
lcall
ljmp
and
xor
lret
sbb
enter
lahf
push
dec
loop
js
ss
push
and
insb
cmpsl
sbb
inc
iret
mov
inc
inc
jnp
push
faddl
xor
pusha
sahf
or
loope
ss
or
inc
xchg
movsb
ss
xorb
dec
jns
out
cld
push
jne
dec
imul
fstpl
in
lret
adc
out
or
mov
lcall
or
sub
adc
dec
les
fsubl
fsubrs
xchg
xchg
pop
in
lock
scas
and
aaa
push
add
xchg
int3
xchg
xchg
js
divl
repnz
fiaddl
jmp
shrb
hlt
out
xchg
js
sti
gs
ljmp
repnz
push
cli
jno
ret
mov
lock
lock
mov
enter
jp
mov
testb
cmc
mov
popa
int3
fildll
outsb
add
pop
test
hlt
mov
fs
dec
cmp
aad
nop
loopne
xor
push
push
cmpsb
scas
jl
push
push
sub
add
data16
mov
mov
push
ffree
pop
push
xchg
js
and
je
jle
sbb
imull
mov
xor
pusha
insl
and
sbb
xchg
sbb
add
jp
dec
cmp
cmc
je
or
not
and
ror
lret
pushf
push
add
in
sbb
mov
lods
aam
divb
cmpsl
iret
cs
lds
jns
test
pop
adcb
rcrb
stos
test
jns
sub
adc
dec
xor
call
or
cmc
int3
lock
mov
sti
inc
mov
cmp
pop
test
imul
push
inc
push
ror
rcrl
mov
mov
rolb
jne
dec
adcl
xlat
icebp
adc
adc
lcall
loop
or
xor
jmp
mov
push
shll
fisubrs
or
xchg
sbb
dec
xchg
inc
outsl
es
xor
jnp
dec
and
jl
mov
repnz
pop
stos
cmp
or
fwait
dec
rcpps
xor
push
dec
mov
enter
dec
sub
lds
fists
xor
mov
xchg
gs
mov
mov
push
jmp
xor
mov
dec
push
rcrb
mov
cmp
cmc
sbb
clc
cmp
jecxz
pushl
std
jecxz
push
pop
mov
addr16
cmp
outsl
xor
or
testl
loop
jge
ss
jae
xchg
pop
inc
push
add
dec
push
jne
pushf
popf
jb
adc
sbb
enter
jbe
dec
add
mov
push
pop
ret
dec
aam
imul
pop
cli
jns
lods
arpl
int3
movsb
mov
mov
inc
mov
push
sbb
inc
ret
inc
jbe
popa
add
test
mov
pop
pop
out
mov
imul
mov
xor
in
in
lcall
sub
imul
lds
pop
xchg
leave
fwait
xchg
icebp
mov
mov
ss
jmp
mov
rcrb
movsb
mov
fmuls
cmp
push
mov
test
mov
aad
and
in
cmp
sti
ljmp
jl
dec
inc
adc
or
add
mov
lcall
insb
in
lods
sub
mov
sti
push
or
mov
fsts
xlat
bound
push
cs
in
adc
stc
mov
imulb
cld
mov
jbe
mov
cmp
addr16
or
cmp
mov
loop
icebp
xor
and
mov
movsb
imul
shrb
mov
hlt
hlt
or
inc
sub
fimuls
lods
in
xchg
js
adc
popf
and
cmc
shrl
inc
into
hlt
rcl
dec
stos
lret
lock
je
cmpsl
sub
add
inc
into
sbb
xchg
das
incb
je
fisubrs
jne
add
xchg
pop
aam
lret
mov
rorb
outsl
outsb
adc
inc
test
or
sbb
dec
iret
into
rolb
xchg
add
jecxz
sbb
ret
test
and
and
fld
mov
nop
pop
rcpps
xchg
push
push
pushf
dec
pop
test
fcomps
rolb
inc
add
adc
std
or
xchg
out
pop
and
pop
sbb
push
in
rclb
call
repz
pushf
out
adc
inc
aas
int
adc
and
call
repnz
aam
mov
outsb
and
pushf
das
test
pop
jne
or
sbb
xor
mov
pop
lret
ds
sub
in
popa
mov
movsl
testl
dec
add
and
mov
or
sbb
cmpsb
lret
push
adc
and
dec
out
jge,pn
mov
and
pusha
pop
sbb
loop
sub
fs
movsl
pop
sbb
jmp
ss
clc
xor
movsl
insb
aas
repz
dec
mov
adcb
outsl
mov
sbb
fdivl
ficompl
add
clc
xchg
sahf
xor
out
adc
inc
push
pushl
js
xor
std
hlt
mov
insl
sub
ljmp
push
push
lret
fstps
gs
clc
xchg
shl
popa
into
cmc
jmp
ja
ja
sbb
jns
lcall
xor
fucomp
mov
sub
out
fildll
pop
sbb
paddq
jnp
xchg
dec
fcom
and
sbb
push
push
fists
jae
loope
pop
pop
push
jmp
inc
arpl
int3
out
scas
adc
add
xor
mov
std
inc
pop
dec
dec
fisubs
or
inc
mov
imul
mov
repnz
inc
insl
adc
fisubrl
adc
mov
fimuls
ficomps
notb
dec
stos
mov
sub
call
test
mov
js
add
or
mov
adc
add
or
mov
add
rclb
dec
xchg
jno
mov
cmp
ret
pop
lahf
cmpsb
andb
add
int
lret
fcoms
pop
in
pushf
inc
inc
fstl
xchg
sbb
jl
dec
mov
xlat
cmp
inc
fsubr
cmpsb
aaa
dec
inc
loop
cs
dec
xchg
aas
aam
mov
sub
and
mov
negl
and
mov
or
fs
iret
in
mov
dec
jne
add
stos
add
and
test
mov
bound
in
and
fiaddl
sti
shlb
xchg
mov
xchg
adc
ficoml
aad
inc
lods
jbe
fs
stc
pop
aad
aas
jb
or
pusha
sub
mov
fwait
rol
push
jle
popf
sti
je
xor
nop
add
and
cld
jne
jmp
ret
pop
dec
idivl
sbb
pop
adc
mov
das
pop
push
adc
sbb
and
jle
adc
invd
and
mov
cld
repz
xchg
mov
mov
lods
xor
sbb
cmp
rcr
and
pop
dec
test
shlb
mov
test
push
sbb
push
loop
aam
lret
insb
cmp
lock
and
iret
and
xchg
shl
jne
lods
jb
aad
ja,pn
sbbl
mov
out
jo
sub
pop
out
imulb
out
jnp
push
cmovs
cmp
xorb
lret
sbb
inc
aas
mov
xchg
cld
sbb
mov
xchg
aam
test
xchg
popf
push
jo
std
aad
inc
mov
sbb
or
adc
stc
adc
add
fwait
lcall
xchg
or
in
mov
imul
jns
xor
mov
in
in
sub
or
mov
roll
xor
or
daa
out
and
inc
fs
mov
mov
add
add
fisubs
mov
mov
cmp
cmc
cmp
test
ja
jmp
aad
pop
fs
xchg
jle
lahf
insl
out
testb
pop
testl
xor
das
jp
and
sbb
idivb
inc
sbb
cmpsl
add
gs
add
imulb
pop
js
or
push
enter
or
push
and
cli
cmc
push
jge
push
shl
inc
adc
and
sub
push
xor
test
call
xor
jo
xorb
roll
and
cmpsb
cmpsb
dec
fsubp
mov
pop
pop
and
ret
test
aaa
lret
jne
fs
sub
push
and
jge
push
adc
iret
mov
mov
pop
add
aad
xor
sbb
fildll
or
push
mov
pop
inc
dec
fs
pop
lret
mov
out
lods
daa
sbb
rolb
test
fimuls
xorb
mov
fbstp
je
cmp
pop
mov
push
mov
mov
ret
cmp
stos
mov
sbb
out
jecxz
sti
add
adc
inc
jns
mov
es
lret
adc
fwait
lea
jo
jmp
pushf
daa
cmp
xor
subb
insb
sub
es
and
pop
es
imul
mov
jb
call
mov
push
cmp
cli
dec
fadds
repz
mov
popa
sahf
push
imul
popa
mov
data16
push
test
shrl
ror
pop
jecxz
ds
loope
stos
or
sub
lds
jb
lods
shrb
shll
pop
ja
mov
je
adc
aam
shrl
mov
or
ficoml
cmpsb
mov
shrl
add
mov
std
fcom
cmc
adc
jnp
mov
adc
lock
in
nop
test
lods
push
push
ror
dec
bound
push
mov
add
sbbb
lret
adc
add
std
ja
sub
mov
mov
push
ret
xchg
or
les
fidivrl
test
stos
xor
add
aas
ret
jae
cmp
pusha
icebp
xor
pusha
jp
pop
inc
mov
mov
jnp
scas
movsb
stc
pop
faddl
fldt
dec
mov
mov
jg
ja
mov
notl
fwait
mov
nop
std
jp
ja
in
inc
das
mov
cwtl
call
test
pusha
cmp
cmpsb
data16
xor
mov
jmp
xchg
popa
ret
inc
js
and
push
push
sbb
rol
add
xchg
lret
ja
push
mov
sub
push
clc
xchg
pop
mov
cli
sub
sbbl
cmp
test
test
pop
jae
xchg
imul
xor
xchg
pop
leave
scas
fldenv
ret
mov
test
mov
sti
sysret
test
xchg
in
daa
sbb
push
repz
push
subl
out
xchg
insl
cmp
inc
test
stos
push
popf
cli
loop
in
ljmp
dec
xchg
jne
inc
movsb
mov
dec
leave
jns
xor
jmp
stos
lds
fidivl
push
jge
mov
jl
sahf
add
sub
xor
dec
mov
cmc
mov
addr16
fildl
or
andb
fistpll
dec
sbb
adc
lods
xchg
sbb
out
mov
jp
data16
movsl
cmp
cmpsb
push
sti
add
inc
andl
test
and
fs
dec
jle
xchg
mov
and
fs
pop
cs
mov
shrb
pop
jb
cmovnp
or
push
int
stos
sbb
pop
or
jnp
push
out
dec
call
push
cmp
sbb
dec
mov
pop
sub
icebp
cmpsl
mov
cmc
pop
arpl
mov
adc
out
mov
sub
lcall
inc
insl
dec
and
mov
adc
pop
int3
addr16
push
test
movsl
in
sbb
je
aaa
fdivrs
and
xchg
aas
add
ficompl
sub
cmc
into
jp
iret
adc
mov
xchg
sub
inc
insl
jg
pop
mov
jae
mov
sub
pop
xchg
in
fcmovu
fmull
and
imul
out
icebp
test
sub
prefetch
or
push
stc
or
inc
and
xor
cmp
mov
or
inc
fmull
cltd
cwtl
shll
daa
dec
dec
lods
jno
cld
mov
push
jle
mov
popf
iret
aaa
test
hlt
cltd
arpl
sub
sub
fiadds
std
stc
in
outsb
out
adc
add
movsl
lret
loope
hlt
movsl
movsb
shrl
stos
enter
loopne
cltd
inc
dec
cwtl
in
mov
pop
jmp
clc
rcrl
dec
popa
pop
and
jb
mov
adc
inc
cs
pop
push
fdivrl
stos
push
jg
pop
shll
das
repz
mov
mov
ss
mulb
mov
pop
jbe
jp
xchg
outsb
jno
push
mov
decb
mov
jb
int3
ret
pushf
and
dec
lret
inc
mov
xor
dec
cmp
cmc
test
movsb
dec
divb
sbb
or
push
dec
pop
xchg
add
add
push
adc
adc
das
push
das
mov
outsl
push
repz
in
inc
mov
sbb
popa
ds
sbb
and
inc
and
insb
jne
sub
sub
sub
sets
fwait
pop
es
mov
or
repnz
mov
mov
insl
enter
mov
test
dec
sub
loop
mov
pop
call
add
popf
mov
mov
jns
sbb
sbb
cmpb
jl
addr16
mov
cmp
pop
pop
stc
les
addr16
notb
add
fldcw
rcrl
jl
sub
push
mov
mov
mov
xor
dec
and
adcb
and
and
jnp
je
cmp
push
clc
add
das
into
pop
cli
mov
mov
rclb
test
dec
cmc
cwtl
mov
pop
cmp
iret
sbb
add
enter
mov
jo
stc
in
xor
mov
sarl
and
cwtl
xchg
imul
mov
pop
jl
ret
xor
dec
scas
insb
pop
and
loop
push
cmp
cmpsb
jg
jae
inc
mov
add
adc
mov
mov
cmp
inc
xchg
jecxz
rclb
lahf
lods
lret
xor
jmp
cmp
or
lahf
call
mov
dec
jge
pop
jbe
scas
inc
enter
leave
push
fs
mov
sbb
mov
addr16
cld
push
jo
mov
dec
push
xor
pop
sub
lahf
popf
xchg
jecxz
in
sub
fsubs
pushf
or
enter
ret
cmp
sbb
inc
mov
mov
push
mov
mov
pusha
daa
jecxz
test
outsb
addr16
and
daa
shr
shlb
iret
sub
and
mov
cmp
jge
cmp
push
pop
inc
cmp
out
mov
mov
in
gs
in
mov
and
mov
push
repz
fdiv
xor
xor
negb
xor
and
mov
jne
mov
add
inc
mov
aaa
sub
add
push
sbb
inc
insb
push
jecxz
push
and
cwtl
rcll
arpl
call
xor
inc
push
jne
xchg
dec
cltd
add
js
cld
hlt
inc
cld
push
mull
jl
call
pop
cli
ds
cmpsb
cltd
hlt
adcl
mov
pop
and
cmpb
adc
sub
jb
cmpsl
or
shl
lahf
push
sarl
mov
inc
jl
in
add
clc
cmp
insb
nop
mov
inc
inc
mov
push
lock
lds
sub
test
pushf
fsubrs
insl
fsubrl
lods
lret
fwait
cmp
imul
jp
push
fnstcw
cmpsl
dec
xor
stc
addr16
movsb
loop
out
icebp
stos
arpl
iret
call
adc
push
cmpsl
arpl
push
out
jne
ret
cmpsb
push
add
inc
mov
lods
sub
push
mov
rorb
and
push
xchg
fildl
inc
imul
mov
out
in
lea
hlt
mov
idiv
jae
xchg
push
sysret
clc
dec
cmp
pop
cmp
imul
jnp
dec
shl
shlb
mov
dec
sub
rcrb
fists
pusha
scas
pushf
cli
stc
xchg
pusha
int3
jge
lods
cmc
dec
movsb
mov
dec
dec
mov
push
repz
add
imul
jmp
pop
adc
xchg
mov
cmp
mov
mov
inc
sub
push
rcrb
jg
jae
jle
sbb
and
testl
xchg
mov
adc
push
xchg
lahf
add
rcll
add
dec
test
insl
push
push
inc
mov
outsl
icebp
xchg
rcll
lcall
scas
aas
orb
and
and
data16
cs
into
outsb
jmp
sub
call
jg
xor
je
and
mov
mov
xchg
pop
sbb
dec
daa
push
leave
mov
lds
sub
push
int
sbb
jb
xchg
movsb
shl
test
shl
jno
adc
sbb
cmp
push
pop
cltd
sub
sub
sbb
xor
xor
cmp
cld
add
pushf
fbstp
enter
aad
jb
pop
test
lock
fdivrs
rorl
into
fbld
sbb
dec
adc
das
movsb
adc
mov
rcl
je
and
sahf
vmwrite
jae
stos
cmp
data16
lds
test
sbb
outsl
push
pop
jne
divl
popa
and
sub
popa
movsb
data16
std
fs
adc
cmc
jmp
notb
lcall
jne
inc
sub
test
insl
leave
or
imul
stos
gs
js
and
test
xor
xlat
in
pop
adc
cmpsb
mov
mov
in
movsb
jg
ja
lahf
je
xor
insb
divl
push
xchg
mov
nop
mov
movsl
daa
fmull
sarl
mov
jg
xlat
or
insb
cmp
fcoms
jle
js
pop
test
jl
inc
jge
dec
dec
or
lret
imul
ja
adc
xor
mov
adc
adc
repnz
psubd
negb
jmp
in
lahf
imul
mov
lods
and
jmp
jecxz
push
adc
movsl
cs
out
es
cmp
mov
mov
sbb
repnz
bound
popa
mov
xchg
cmc
mov
cmp
nop
js
xor
cmpsl
pusha
and
data16
sbb
cmp
out
psrld
jbe
sub
or
aaa
dec
insl
inc
push
jp
imul
mov
inc
enter
sub
mov
mov
cmp
pop
push
sbb
dec
leave
add
inc
and
daa
les
fwait
sub
push
shlb
fimuls
int3
lods
and
xor
jle
call
sahf
addr16
jnp
xchg
call
sahf
insb
pop
movsl
fnstenv
shrb
inc
and
in
sub
dec
lcall
imul
jbe
aad
add
lret
xchg
cmp
addr16
js
sti
outsl
out
xchg
add
in
cmpb
sbb
fisubs
mov
push
ficompl
push
lea
fucomp
add
stos
icebp
jecxz
clc
mov
rol
bound
cmp
mov
xorl
xchg
pop
test
mov
sub
jb
and
cmp
mov
cmp
mov
jbe
sub
cmp
pop
pusha
mov
addr16
and
cmp
int3
ljmp
jno
jnp
jno
popa
sub
out
cmc
les
imul
rclb
xor
mov
adc
testl
cmp
addl
fmul
push
divl
js
dec
xchg
xchg
add
xor
rclb
roll
adc
aas
push
pop
scas
inc
mov
out
pusha
push
mov
mov
mov
leave
jae
cmpb
push
pusha
testb
push
testl
pop
push
popf
dec
leave
sbb
loopne
cmpb
arpl
pop
lods
jle
icebp
dec
cmp
cmp
mov
sub
std
push
lahf
movsl
aam
mov
jne
fisubrl
add
cmpl
mov
ds
sub
pop
push
cmpsl
pop
jns
in
sub
hlt
jns
inc
arpl
sbb
sub
rcl
outsl
mov
sahf
outsb
xor
scas
mov
clc
push
push
push
mov
xchg
cmc
popf
loop
mov
jne
push
hlt
sbb
popf
mov
cmp
sbb
xchg
or
mov
push
in
mov
lock
jp,pt
mov
pop
sbb
jmp
mov
xchg
arpl
testb
pop
xor
fsubrl
cli
push
mov
inc
dec
mov
adc
pop
ss
dec
adc
aas
call
aam
lock
stc
movsl
pop
xchg
push
rcrl
pusha
jbe
ret
in
mov
cmpsb
fnstsw
fimuls
pop
and
sub
adc
adc
ds
sbb
xor
add
rorl
cmpb
jnp
dec
adc
je
push
mov
mov
inc
mov
cmpsb
loope
dec
adc
jp
push
add
sti
adc
shl
imul
and
jno
repnz
inc
xor
xor
out
stos
xchg
fldt
shl
or
test
cli
addr16
push
out
cmp
pop
mov
hlt
fsincos
imul
jge
jl
popl
cmp
popl
std
add
sahf
lds
jle
mov
jo
roll
jmp
xlat
adc
sub
lods
inc
or
push
mov
pop
xchg
fwait
pop
mov
iret
in
lds
jno
jmp
mov
cmpsl
ljmp
inc
icebp
clc
or
enter
cmpsl
xchg
adc
nop
int3
add
insb
jne
fists
sbbl
dec
rolb
fstpl
jbe
fdivr
cmp
jne
mov
icebp
xchg
loope
jo
dec
mov
iret
pop
imul
rcrl
lock
mov
int3
cmp
cltd
cmpsl
mov
mov
xlat
js
pusha
mov
xchg
xor
orb
out
outsb
rcrl
mov
mov
lock
test
push
daa
and
test
insb
adc
cltd
dec
sbb
pop
gs
loopne
mov
jmp
inc
dec
fnstenv
or
dec
mov
inc
or
mov
pop
add
les
out
and
inc
cmpsb
mov
mov
pop
outsl
xchg
dec
faddp
adc
dec
pop
pusha
in
dec
push
es
cmp
mov
push
sbb
test
pop
push
jne
iret
sahf
and
or
sub
in
cmp
adc
ret
and
shlb
dec
xchg
inc
or
inc
pop
push
aaa
cs
xchg
dec
repnz
aaa
aad
xchg
mov
pop
gs
daa
push
fwait
xchg
ds
mov
pop
xchg
xor
sbb
sbb
fwait
inc
repz
shlb
mov
add
in
pushf
fildl
jno
mov
mov
int3
pop
sub
push
loope
inc
dec
and
popa
push
add
test
or
pop
inc
pop
fimull
or
out
out
in
ret
in
push
mov
and
inc
or
repz
in
inc
adc
and
cli
imul
pusha
push
jnp
mov
mov
mov
andl
sub
test
cmc
jo
arpl
mov
cmc
leave
loopne
inc
dec
cli
outsl
inc
in
lret
dec
push
clc
sbb
mov
push
lds
xor
adc
cltd
in
je
adc
rcrb
lret
out
mov
inc
je
ds
imul
pop
fidivrs
dec
out
jg
cmp
or
cmp
sub
or
int3
and
cmpl
clc
adc
sarb
mov
incl
ja
inc
or
cltd
lods
pop
sbb
sbb
mov
mov
pop
fcoml
repnz
sbbl
mov
jns
push
divb
cmp
in
cmp
test
jecxz
lret
stos
xchg
push
lods
leave
xchg
lods
scas
ljmp
popf
insb
mov
ret
lret
sbb
sub
and
fsubl
adcb
lcall
leavew
shlb
in
fisttpl
stc
dec
inc
inc
inc
pushf
scas
into
mov
addr16
fcom
fcoml
xor
push
adc
pop
pop
pextrw
daa
icebp
loope
insl
ret
sub
test
movsl
and
xchg
shlb
repz
pop
mov
mov
lds
jmp
inc
jge
popa
jnp
sbb
subl
stos
mov
roll
inc
in
daa
adc
jo
in
and
movb
sbb
lods
xor
movsb
xor
sub
aas
iret
repz
xchg
push
or
mov
push
popa
dec
mov
cmpsb
movsb
xchg
clc
insb
inc
mov
adc
add
jle
xchg
mov
repnz
lret
xchg
mov
daa
jb
pop
mov
or
out
shrb
in
sbb
pusha
std
mov
bound
leave
ljmp
sbb
outsl
imul
or
inc
ret
and
dec
push
das
sub
dec
mov
mov
ret
loopne
call
adc
add
inc
ljmp
inc
js
mov
adc
adc
adcl
mov
mov
mov
sbb
loopne
lret
xchg
pop
call
inc
fnstenv
dec
and
dec
inc
inc
push
add
loope
dec
jg
push
mov
fdivrl
mov
pusha
lods
pushf
or
dec
sbb
mov
gs
jno
cmpb
mov
mov
or
loop
iret
cmpsl
lahf
xchg
mull
sub
mov
outsl
inc
and
and
call
orl
or
jg
insb
fildl
cmp
push
xchg
or
push
push
fstpt
sub
ror
repnz
cwtl
and
aad
fdivrs
leave
pop
xchg
stos
push
jp
xchg
imul
cs
popf
or
mov
pop
outsl
jno
push
into
loop
sub
xor
jnp
xchg
add
push
sbb
push
push
hlt
pop
jge
add
add
lds
outsl
sbbb
inc
bound
test
movsl
stos
shrb
insl
mov
ret
std
xchg
sahf
inc
int3
dec
mov
mov
xor
dec
inc
add
enter
or
mov
aas
jnp
pop
cmc
test
out
cmp
mov
lcall
jge
lret
popa
notl
push
rorl
test
add
cmp
mov
adc
mov
fisttpll
xor
repz
adc
sbb
mov
mov
xor
enter
jecxz
out
test
push
push
adc
mov
loop
cmpsl
mov
inc
jb
mov
inc
mov
std
pop
fwait
in
jno
mov
out
inc
out
push
rorl
xchg
sbb
sbb
call
xchg
sbb
and
mov
xchg
dec
jp
xchg
xlat
mov
or
push
cmpsb
out
inc
hlt
inc
push
les
aas
pusha
jecxz
das
sub
movsb
xchg
int
iret
mov
pop
out
pop
mov
mov
mov
insb
mov
out
sub
xor
test
jg
daa
cmpsl
adc
and
or
sbb
add
push
mov
in
pushf
mov
or
push
and
xor
mov
add
mov
add
sub
dec
cmp
dec
xchg
dec
cmp
or
add
dec
and
mov
push
fs
movsb
mov
insl
jecxz
pop
out
out
mov
adc
fdivs
enter
cmp
xlat
ret
lahf
loope
adc
mov
dec
fwait
jl
mov
and
pop
sbb
in
mov
popa
cs
fstpt
ds
jb
aad
inc
fadds
fsubr
mov
inc
or
xchg
hlt
mov
ljmp
and
adc
pop
ret
xchg
rorb
jb
dec
xchg
or
dec
popa
fcoml
repnz
lcall
dec
add
stos
out
cmp
mov
sbb
mov
mov
scas
inc
mov
stc
and
xchg
sub
in
popf
push
out
xlat
cwtl
ss
movsb
mov
test
cmpsl
int3
mov
fwait
out
jl
repnz
orl
mov
js
xchg
inc
mov
sub
imul
sub
repnz
or
push
cmp
mov
push
iret
push
out
jg
jbe
leave
adc
mov
inc
fcmove
cwtl
jo
or
aas
out
enter
shlb
pusha
faddp
pop
ljmp
xor
add
lret
sbb
push
jo
xchg
popa
and
mov
ret
push
jecxz
iret
xor
loop
jb
inc
call
xor
das
ds
mov
lea
test
inc
mov
sub
aas
or
xchg
adc
add
stos
arpl
sub
jmp
sub
inc
push
inc
cld
imul
repz
push
flds
bnd
cmpxchg
out
jg
imul
adc
push
and
cld
mov
mov
sti
ds
inc
jae
aaa
outsl
movsl
movsb
add
sub
sub
dec
inc
sbb
roll
popa
xlat
fisubl
leave
xlat
mov
pusha
int
lcall
jb
mov
out
push
cmpsb
dec
leave
mov
xchg
fwait
cmp
pop
iret
nop
mov
inc
adcb
inc
aaa
pop
lods
jne
mov
cwtl
or
jnp
sar
shll
push
lock
mov
scas
dec
test
std
jle
lds
jg
adc
enter
or
ja
ja
mov
jmp
xchg
and
dec
dec
cs
arpl
adc
jno
out
mov
push
mov
fcmovnb
daa
mov
js
mov
shll
jp
leave
cmp
inc
jmp
xor
add
mov
pop
and
inc
aaa
fsubrl
ljmp
icebp
call
not
lea
add
inc
xchg
add
mov
xchg
adc
subb
mov
mov
sbb
mov
cld
xor
fcmovnu
pop
jmp
or
clc
adc
sub
pop
out
push
sar
sbb
xlat
lret
out
mov
adc
xchg
sarb
lret
pop
and
stc
dec
pop
mov
out
fxch
or
dec
loop
adc
fs
pop
movsl
lock
or
lods
xor
xchg
loopne
into
sub
popa
dec
push
jnp
cmp
fidivl
push
add
or
xchg
mov
cli
xlat
fiaddl
test
jl
adc
mov
dec
imul
xchg
sub
dec
mov
imul
out
pushf
ja
cmpsl
das
movsl
and
or
adc
mov
jbe
adc
jnp
sub
jb
fimull
mov
jo
ss
pop
dec
test
sbb
sbb
fsubs
dec
push
push
test
clc
pop
and
aaa
mov
outsb
jmp
das
scas
xchg
pop
mov
mov
sarl
xchg
inc
push
sbb
lods
fbstp
sub
arpl
sbb
or
jb
into
jmp
cmpsb
insl
idiv
shrl
loopne
andl
dec
fcmovnu
or
shll
add
fadd
dec
jae
aaa
pushf
inc
jns
int
stos
jl
and
adc
inc
mov
adc
das
ja
pop
lods
ret
mov
dec
cmpsl
add
xor
das
das
cs
push
and
into
test
jmp
mov
pop
cli
xchg
and
jmp
popa
movsl
and
cwtl
and
dec
mov
jg
push
stos
das
add
sti
sbb
push
sub
out
mov
fucom
mov
push
cmp
insl
and
stc
xchg
xor
test
xchg
je
and
sub
sbbb
sbb
mov
outsl
ja
and
fstps
and
mov
bound
push
push
cmp
mov
or
scas
stos
je
push
push
or
movsb
dec
and
xor
xchg
mov
mov
sub
lds
add
std
jae
out
popf
adc
lock
imulb
outsb
or
loopne
inc
test
pop
pop
fcom
loop
cmp
dec
push
mov
push
mov
pop
icebp
inc
mov
js
adc
mov
scas
xor
jle
jbe
adc
inc
jmp
dec
sbb
push
movsb
adc
icebp
divb
xor
idivl
xchg
cmp
leave
xchg
roll
jbe
mov
lods
or
inc
out
xchg
xor
or
pop
aad
jl
jae
test
int3
out
sbb
test
cmc
push
incb
pop
pop
ja
insl
xchg
lret
push
lret
cmp
mov
dec
fdivs
aam
or
fdivr
sbb
imul
pop
je
mov
std
lods
lcall
int3
inc
mov
dec
cmc
dec
pushf
adc
ss
into
aam
cmovg
hlt
testb
imul
notb
scas
mov
cmp
imul
sub
xor
pop
lods
mov
dec
jmp
je
andb
scas
aaa
and
mov
inc
test
and
jno
and
nop
es
sub
xchg
xchg
js
sbb
sbb
adc
adc
cmc
out
push
inc
mov
shll
jbe
mov
xchg
call
outsl
fs
flds
jecxz
pop
int3
xlat
add
out
jle
mov
fwait
cmpsb
mov
push
ret
mov
dec
add
dec
dec
lcall
cltd
aaa
push
loopne
in
aaa
mov
pop
imul
xchg
cmp
jne
or
pop
mov
es
fisubs
inc
push
xchg
sti
lcall
xchg
xchg
repz
rol
cmp
enter
and
sbb
jg
mov
adc
fyl2x
test
sahf
nop
xor
into
repz
ss
iret
pop
pop
mov
ret
push
dec
ljmp
test
pop
lahf
add
push
cs
iret
test
in
pop
cmpb
ret
adc
dec
or
je
pop
ret
xor
iret
mov
xchg
push
pop
pop
jl
aam
mov
cmp
and
cmpsl
pop
es
pop
xchg
mov
nop
jns
lahf
mov
xchg
jp
dec
mov
push
scas
psubusb
inc
clc
shl
push
xchg
movsl
xor
int3
les
inc
popl
mov
adc
sysret
xor
lds
lods
lods
ret
sbb
sub
fs
je
or
jbe
adc
imul
mov
xor
leave
mov
scas
mov
icebp
mov
or
rcll
jecxz
inc
xchg
in
jecxz
jo
ljmp
aaa
add
mov
sub
pop
pop
pop
or
mov
xlat
sub
out
pusha
inc
das
mov
cwtl
gs
push
fistl
adc
push
mov
mov
or
xor
aam
in
mov
cld
xlat
fnstcw
cmp
dec
inc
cmp
fmuls
dec
mov
xor
add
iret
sbb
popa
mov
std
clc
ja
jae
rcrb
pop
jp
sbb
push
mov
lods
sahf
xor
andb
and
and
xchg
leave
fcomps
jae
cmpsl
loope
mov
pop
xor
lret
pop
sbb
and
std
ljmp
push
xchg
lds
pop
push
scas
stos
mov
shll
cmp
xchg
dec
or
or
jae
inc
je
fstps
jg
cmpb
or
mov
in
xor
mov
sbb
dec
das
fisubrs
mov
fwait
setae
xor
adc
loop
mov
andl
push
ljmp
lret
push
inc
cmpsb
cltd
movsb
xchg
enter
xorb
lds
mov
dec
daa
or
into
jmp
jmp
sub
loope
pusha
cmp
popf
aam
dec
jmp
ret
es
or
loope
mov
ds
jg
pop
stos
imul
dec
std
xorb
in
fidivrs
iret
push
inc
stc
enter
sbb
or
and
xor
adc
cmp
add
outsb
dec
inc
lcall
imul
xor
insl
sub
push
jl
ficomps
out
pop
outsl
cmp
pop
movsb
sub
out
fsubl
das
ficomps
jp
orb
inc
jl
and
mov
stos
sarb
jmp
push
fstpl
out
add
mov
cmp
ja
inc
lea
cmp
adc
push
loopne
in
les
mov
notl
fneni(8087
push
adc
inc
sbb
cmc
movsl
add
ja
jmp
into
mov
mov
enter
dec
push
push
push
adc
add
repnz
xchg
adc
sub
and
jl
sbb
inc
push
adc
nop
mov
push
stos
mov
jg
xchg
lock
lret
xor
cltd
fs
aam
jp
mov
push
and
orl
sub
dec
mov
in
jp
jmp
test
pop
shll
or
cmpsb
arpl
iret
or
pop
mov
sub
or
stc
or
loopne
iret
and
sub
icebp
js
xor
cmpsl
mov
add
inc
das
sbb
mov
push
and
mov
mov
xor
lods
adc
sti
pop
sub
jg
pop
paddd
inc
icebp
adc
adc
fcmovb
cli
or
dec
enter
mov
mov
out
divb
outsl
aas
dec
sahf
fs
popf
add
xchg
pminub
repnz
xchg
push
sbb
xor
adcb
int3
or
sbb
adc
mov
or
mov
sti
push
jp
cli
cmp
or
pop
pop
insl
mov
mov
add
imul
pop
mov
and
xor
push
ds
sbb
scas
inc
mov
adc
cltd
sbb
jo
call
pop
cld
mov
ret
and
pop
sub
inc
xchg
xor
xor
cli
xor
mov
loopne
and
cmp
pop
das
inc
dec
mov
sbb
and
in
mulb
sbbb
stc
push
out
loopne
mov
out
add
fsubs
adc
inc
cld
dec
outsl
popl
jle
mov
jo
pusha
pop
pop
fisubrl
int3
xchg
mov
sub
scas
jl
jp
adc
sbb
add
mov
mov
jne
stos
mov
stos
cltd
push
push
out
xchg
enter
addr16
sbb
adc
inc
lret
insb
add
pop
and
popf
push
fcoml
cmp
sub
sbb
and
dec
xor
xchg
loope
and
lods
leave
xor
pusha
jle
xchg
sbb
ret
sbb
scas
add
movsb
mov
imul
out
aam
ret
push
sti
js
je
mov
jo
jg
push
pop
scas
repz
push
inc
adc
dec
stos
add
pop
repnz
mulb
lods
cmp
ljmp
pop
test
lds
or
call
filds
repnz
mov
mov
mov
daa
shrb
dec
sahf
lea
outsl
xlat
cmpsl
nop
push
pop
test
jle
or
adc
push
scas
pop
or
and
dec
or
dec
sahf
dec
lods
fistps
xchg
jmp
les
jl
out
or
or
dec
and
pause
aas
call
jmp
adc
xchg
insl
inc
enter
adc
xchg
cmp
mov
push
inc
push
repnz
xchg
xor
mov
pop
lret
out
sbb
aas
inc
xor
mov
int3
pop
js
ss
mov
push
jecxz
dec
lock
cmp
push
ror
pop
jo
call
cmpsb
cld
sub
stc
cmp
mov
icebp
shrl
pop
mov
icebp
cmp
pusha
stos
xchg
mov
or
js
js
pop
or
test
fnstenv
scas
daa
jmp
in
stos
xchg
mov
lahf
lock
xchg
out
mov
push
sbb
and
inc
outsb
or
xchg
jno
pop
ljmp
mov
dec
unpcklps
push
mov
push
mov
inc
jo
mov
mov
mov
dec
jp
fucomi
inc
es
xlat
mov
imul
fmull
and
inc
lahf
mov
fiadds
xorl
pushf
pop
sbb
push
aas
out
repnz
add
aad
pop
fdivrs
inc
outsb
lahf
cld
mov
add
mov
sub
mov
icebp
cltd
rcll
xor
or
aad
int
div
fwait
pop
test
rorb
xchg
mov
cmp
dec
push
jae
dec
movsl
shll
and
mov
jo
decb
cmp
mov
mov
sar
pop
sbb
pop
xchg
sub
ret
in
stos
xchg
lea
repnz
pop
lret
jmp
inc
sub
in
jae
sub
scas
shrb
addr16
cli
ljmp
pop
iret
cs
in
dec
stc
pop
jge
sbb
jne
adc
pop
mov
pop
sbb
jge
sub
push
mov
jmp
sbb
mov
add
push
pusha
test
data16
xchg
mov
lods
jae
dec
sub
xchg
outsl
mov
or
push
popa
insl
fldcw
push
leave
push
sbb
in
das
add
aad
jb
pop
popa
insb
mov
hlt
adc
ljmp
cwtl
loope
sahf
or
push
loop
lret
iret
data16
dec
adc
xor
lret
xor
sub
and
lcall
inc
push
mov
stos
and
xor
adc
mov
test
in
rolb
mov
loope
lcall
les
inc
orb
or
pop
inc
pop
mov
outsl
add
out
mov
test
xor
fisubs
dec
push
or
sbbl
lahf
jge
mov
loopne
pushw
rcll
sub
and
stc
jp
stc
iret
and
or
test
outsb
shrb
mov
push
daa
dec
das
lret
pop
or
data16
and
sbb
jmp
or
jecxz
ja
or
add
movsl
mov
cmp
clc
cmp
test
je
in
pop
leave
adcb
sti
aad
mov
pop
inc
popa
mov
push
mov
or
pop
fwait
dec
cwtl
inc
pushf
lret
dec
enter
mov
ret
fwait
aad
fsubrp
hlt
enter
sbb
xchg
jmp
xchg
xchg
push
xchg
sbb
mov
scas
push
pop
mov
mov
mov
fisttps
jl
and
push
xor
jb,pt
lahf
adc
ds
jl
dec
inc
pushf
addr16
cmp
scas
fidivs
ficoml
loopne
ss
mov
gs
inc
ljmp
and
sbb
sub
loopne
and
lods
add
xlat
push
and
cmp
pop
mov
cmp
insb
adc
int3
pop
in
add
inc
aam
bnd
loopne
inc
inc
xor
inc
add
mov
sbb
push
ja
insb
and
imul
mov
out
pop
adc
js
jl
xchg
push
test
rolb
xchg
mov
loopne
in
xchg
into
aaa
fmuls
inc
xchg
stc
out
xor
js
mov
pop
xchg
in
mov
pop
cmp
jge
pusha
sub
sti
mov
mov
aas
lock
and
loopne
sahf
outsl
mov
mov
hlt
das
imul
andps
jbe
dec
jae
inc
xor
loope
mov
int
rorl
xchg
mov
fdivl
mov
gs
jae
imul
xchg
mov
sub
push
mov
jnp
add
adc
aam
pop
cmp
insb
cmp
push
push
rolb
pop
mov
adc
pop
cmp
test
pop
pop
orl
xor
test
mov
sub
xchg
je
leave
xchg
fisttpll
vcvtps2dq
imul
data16
mov
or
jg
add
repz
hlt
mov
xor
inc
inc
sahf
or
dec
cmc
sti
lret
push
mov
imul
jle
push
adcb
pop
mov
negl
pushf
cltd
in
mov
cmp
pop
fisubrl
push
jecxz
testl
sbbl
jl
es
lea
or
imul
jg
daa
fmull
push
sbb
mov
dec
xchg
mov
or
lret
pushf
mov
sbb
in
shrb
and
jecxz
fistl
int3
out
sbb
and
das
cmpb
aam
jo
shl
sbb
aaa
stos
and
cmp
sub
lret
mov
push
xor
mov
mov
push
js
push
dec
lret
in
mov
push
pop
pop
scas
mov
ds
adc
stos
ds
jl
psllw
stos
sbb
rol
sbbb
lret
je
sbb
lret
sahf
fst
fdivrp
scas
pop
push
pop
scas
mov
jno
adc
mov
pop
jo
test
xchg
cmpsl
pop
mov
outsl
mov
mov
sbb
sti
xchg
movsl
and
ret
daa
xchg
push
mov
fdivrl
int
movsb
jb
mov
arpl
cs
dec
aaa
xor
out
cmc
lock
loop
aaa
test
lds
in
xchg
loopne
cmp
and
aaa
pop
add
sbb
in
arpl
mov
adc
pop
cmp
xlat
jle
lret
scas
call
iret
add
ljmp
xchg
add
mov
arpl
mov
scas
call
jg
ficoml
enter
cmpsb
test
hlt
add
shrb
and
sub
add
adc
lahf
into
fcompl
dec
outsb
add
pop
jmp
mov
jno
adc
sub
sub
cmp
jae
jmp
xchg
sti
push
xchg
repz
push
lock
mov
xor
ja
and
jmp
cmpsb
std
dec
jne
test
cwtl
fucom
sbb
cmp
in
xchg
jmp
push
pop
xchg
jnp
iret
xor
in
adc
movl
add
insl
lea
cs
jb
call
push
dec
xor
jns
pop
sbb
jno
loope
adc
xor
lret
loop
and
out
sahf
loop
lret
sub
sahf
cli
mov
repz
jle
sub
mov
out
int
inc
repz
mov
jg
stc
push
jmp
jns
and
jmp
push
rolb
adc
daa
mov
jg
aaa
xchg
jnp
dec
xchg
enter
cmp
cmp
inc
orb
xchg
test
mov
mov
loop
xor
xchg
mov
lock
repnz
cmpsl
mov
mov
andb
insb
cmp
xchg
lea
sbb
or
in
lret
test
jno
lahf
in
cltd
sub
and
arpl
cmp
jbe
or
adc
dec
push
test
pop
cli
notrack
fsubs
adc
pop
mov
mov
mov
cmp
or
or
cmp
movsl
lcall
mov
ficompl
lock
lock
mov
je
push
sbb
xchg
sbb
repz
jle
add
xchg
and
das
xchg
jo
pop
or
push
sbb
jns
xor
mov
mov
stos
fs
mov
push
ret
or
jnp
repz
xchg
inc
xchg
leave
sub
add
sbb
faddl
jo
adc
gs
test
dec
das
pop
mov
lea
mov
push
mov
les
ss
bound
insl
adc
adc
mov
push
std
sub
pop
xchg
mov
cmp
sbb
daa
in
shll
and
clc
pop
stc
shlb
push
in
push
sahf
nop
add
jno
push
int3
pop
inc
xchg
dec
popa
mov
xor
iret
iret
xchg
inc
cmp
mov
popf
mov
aam
cmp
mov
stos
popa
lcall
arpl
mov
fidivrs
push
jmp
jmp
pop
or
push
in
mov
push
dec
scas
lods
or
cmp
scas
mulb
gs
push
inc
repz
push
push
add
divl
adc
mov
xchg
cmpsl
xlat
push
and
push
jecxz
repz
mov
xor
pusha
sbb
mov
cmc
sbb
negb
mov
mov
cli
mov
scas
nop
insb
arpl
sti
sub
enter
dec
push
lods
aam
jecxz
testl
sbb
inc
orb
pop
adc
sbb
inc
pop
ljmp
outsl
stc
pop
push
sbb
adc
adc
dec
cwtl
rcrb
cmpsl
xchg
ret
jg
imul
pop
mov
sub
popa
xchg
test
ret
mov
mov
popa
dec
push
xchg
add
movsl
mov
repnz
adc
or
push
sbb
xchg
mov
xor
jmp
push
ret
lods
aad
lret
filds
aas
and
jbe
vpunpcklbw
inc
arpl
ss
imul
sub
sub
cmp
movsl
cmpsb
push
mov
push
mov
or
mov
jecxz
mov
fisttpll
jbe
push
std
mov
or
rorl
inc
ja
add
bound
loop
pushf
aad
icebp
xor
hlt
aaa
push
inc
xchg
mov
shrb
idivl
in
ret
inc
daa
adc
xor
adc
push
clc
cmp
insl
in
ja
notl
and
sbb
adc
push
lock
xchg
aam
ljmp
sub
push
mov
lods
sub
add
push
hlt
loopne
les
orl
movsl
dec
push
pushl
adc
add
jns
adc
and
sahf
and
cmpsb
in
push
pop
mov
mov
or
cmpsb
loope
or
mov
jg
mov
mov
jno
or
cwtl
sbb
sub
lds
pusha
sbb
mov
jns
in
and
lds
mov
and
dec
mov
and
shll
in
push
outsl
outsb
and
aam
jo
shrl
lods
jmp
cmp
inc
negl
dec
scas
fwait
cs
ja
loope
lock
andl
aas
mov
sarl
sbb
imul
cwtl
out
inc
in
mov
inc
cmp
pop
fnsetpm(287
dec
lock
int
adc
rcll
test
mov
sbb
andb
orb
test
and
xchg
test
imul
pop
int
jmp
jle
sub
sub
cmp
call
test
pop
fbld
and
stc
pop
push
push
in
mov
enter
test
inc
mov
jno
mov
in
jae
pop
adc
cwtl
test
rol
jb
fsubs
and
and
out
mov
aam
pop
mov
fmull
mov
push
fnsave
shlb
shll
rorb
enter
sub
jp
xchg
imul
inc
inc
mov
xchg
dec
call
push
fsub
jmp
fcom
ss
mov
or
lret
int3
xor
cmpsb
dec
mov
movaps
xor
or
int
xchg
and
shll
loop
cmpsb
mov
sub
add
ja
push
fsubrl
dec
mulb
xor
hlt
add
push
sub
out
repnz
cwtl
inc
mov
and
dec
repnz
jg
push
test
push
movsl
or
push
sbb
mov
scas
mov
lea
mov
cmpl
sbb
das
sti
xchg
dec
movsb
dec
xchg
loope
dec
xchg
or
or
xor
xchg
clc
push
xchg
loope
pop
inc
test
test
pusha
jp
or
add
stos
in
popf
mov
dec
sbb
push
jp
and
loope
test
push
std
lods
sub
aas
lea
inc
frstor
iret
and
mov
adcb
xchg
mov
mov
jle
data16
pushaw
std
and
pop
aaa
pcmpeqb
enter
mov
mov
add
mov
pop
in
es
ret
je
pop
xorl
ficoms
mov
xchg
ds
shrb
mov
push
cltd
stos
sti
push
int
in
popf
inc
cld
sub
xchg
test
in
mov
es
scas
jne
aas
adc
lret
push
aam
cmp
frstor
push
xchg
push
pop
adc
jecxz
jnp
pop
xlat
fldt
dec
sub
add
shll
inc
imul
and
mov
fwait
cli
sbb
adc
inc
jge
sbb
and
inc
fwait
in
shll
daa
jge
icebp
rep
jmp
rorl
out
mov
mov
adc
mov
movsb
bound
pop
adc
aaa
add
cvtdq2ps
aas
or
sarl
lods
nop
push
jge
sbb
cmp
imul
add
mov
sub
dec
sbb
pop
fwait
out
aad
pop
data16
sarb
shlb
je
stc
repnz
and
pop
mov
inc
aas
es
push
pusha
pop
sbb
shrl
je
aam
jecxz
out
movsb
inc
push
pop
jl
jg
pop
add
push
insb
loopne
jp
js
cmp
test
faddl
dec
out
mov
mov
ds
fldenv
cltd
pcmpeqb
mov
outsb
push
pop
lea
cmpsl
rorl
pop
iret
out
das
mov
iret
and
sub
mov
cmp
scas
cltd
ja
out
and
cmpsl
jne
mov
fiadds
popf
in
push
lods
lock
pop
lcall
push
inc
lea
lret
mov
sbb
sbb
imul
and
jl
call
inc
jne
dec
outsl
ret
adcl
sbb
mov
imul
push
push
insl
clc
sbb
std
daa
aaa
pop
push
inc
xor
mov
jnp
pop
fnstsw
push
cmpsb
dec
notl
pop
sbb
jb
cmpsb
push
add
xchg
mov
push
out
fcomps
cs
subb
jle
sub
mov
xor
jns
mov
jbe
dec
xchg
mov
icebp
pop
push
call
push
and
roll
fimull
repnz
movsb
xor
jnp
and
cld
and
and
fcomps
and
ss
andb
xchg
in
jge
addb
outsb
sub
insb
add
lahf
je
cmpsb
cmpsl
jle
test
mov
fdiv
pusha
sbb
leave
fcmovne
cmp
sbb
lea
xchg
push
clc
gs
call
mov
fldl
sub
pop
or
mov
daa
jmp
push
jno
ss
xchg
jp
lods
xor
jne
cmc
pop
ror
lret
lahf
dec
pop
xor
test
lods
in
xchg
adc
dec
outsb
pop
xchg
mov
sbb
std
jo
ss
push
mov
idivb
andl
jp
xorb
add
adc
repz
test
mov
lock
mov
or
xor
push
ss
insl
sub
jne
jne
cmp
mov
jo
jp
or
and
pushf
outsb
push
movsb
mov
and
adc
scas
and
pop
mov
sub
cwtl
out
or
or
push
mov
inc
xor
fwait
repnz
cltd
and
mov
pinsrw
sub
fwait
int3
testl
dec
arpl
addps
fwait
xchg
xor
and
lcall
and
daa
imull
push
inc
push
jle
repz
xchg
inc
call
jb
pop
sub
pop
push
sbb
ja
jno
fnstsw
mov
cli
movsb
je
in
xor
cmp
xor
movsb
in
scas
jns
mov
shll
das
push
mov
repnz
inc
xor
roll
inc
cmc
push
xchg
mov
std
leave
cld
in
push
stos
stc
mov
pop
aaa
gs
clc
jno
mov
or
pop
pop
enter
addr16
mov
add
inc
scas
popa
xchg
shlb
neg
xor
cmp
xor
jle
ljmp
in
ja
popf
and
fs
pop
lret
ss
jle
and
fildll
jo
cmp
inc
pop
mov
ds
stos
je
dec
xchg
push
dec
pop
bound
movsl
scas
push
in
pop
nop
sub
pop
sbb
xor
xor
movsl
mov
or
outsl
fcmove
in
inc
rcr
lret
add
mov
jnp
cmp
lret
adcb
aad
clc
adc
cmc
pop
ds
subb
popa
pusha
dec
jge
jae
loop
sbb
lock
imul
add
cmpsl
pop
jp
cltd
rclb
leave
cmpsb
data16
sub
in
jae
add
cltd
jno
mov
mov
pop
clc
inc
cmp
fisubs
dec
and
add
fildll
xchg
and
call
cmp
xchg
and
std
sbb
inc
adc
in
pop
scas
jmp
int
ja
adc
lods
out
cmpsl
scas
sub
loopne
fiadds
lret
movsb
sub
mov
xor
stc
ficoms
leave
pop
mov
sbb
xor
push
pop
addr16
nop
push
lods
cs
lcall
adc
js
sarb
xor
cmp
sti
movsb
popf
popf
jae
xor
in
sahf
inc
mulb
cmp
cmc
inc
sub
add
mov
jmp
repnz
jge
stc
ficomps
cmp
jle
inc
rcr
repz
ds
insl
mov
ljmp
pop
nop
test
cs
fiaddl
icebp
aad
mov
jae
fwait
xor
and
xor
add
test
lds
or
lcall
push
aaa
add
ljmp
jge
dec
fwait
xor
cmp
dec
cltd
xchg
push
push
mov
outsb
sbb
mov
repnz
add
stos
icebp
xchg
sbb
jb
int
add
pop
aam
das
mov
scas
in
adc
cmp
cmp
fnsave
xchg
dec
dec
xchg
lret
cmp
sbb
div
inc
js
les
in
test
ljmp
mov
push
incl
outsb
fimull
push
ljmp
lahf
and
andl
outsl
cmp
xor
inc
aas
out
push
out
add
xchg
and
inc
les
insl
pop
icebp
jle
pop
ljmp
push
out
dec
inc
lcall
int
test
xchg
scas
insl
jmp
cmpsb
cmp
mov
xor
rcl
dec
add
std
or
sub
gs
sub
add
fdivl
mov
aaa
inc
cltd
cmp
add
push
cltd
xor
in
cmp
int
push
ss
xlat
ljmp
add
aam
jl
aam
add
mov
pop
test
dec
dec
mov
add
negb
jmp
popf
fs
dec
jo
orl
pop
sub
dec
fistps
jl
repnz
testb
js
pushf
lret
cmp
test
pushf
mov
jecxz
test
mov
push
or
push
mov
jle
ret
bswap
ret
loope
lds
sub
jl
es
insb
data16
popf
mov
in
out
pop
das
mov
xchg
inc
sub
pop
mov
xchg
dec
cli
xchg
cmp
out
mov
stos
dec
into
movsb
in
fsubl
and
loopne
addr16
cli
xor
clc
lods
add
stos
and
repnz
or
sahf
cmp
and
sahf
loope,pt
test
jbe
xor
jns
mov
mov
lods
repz
jno
pop
in
xor
adc
rorb
clc
xor
les
xchg
cmpl
sbb
dec
cmp
mov
repnz
ljmp
dec
push
xor
jo
xchg
fdivs
jnp
xor
lock
mov
lcall
or
or
and
sahf
xor
dec
push
es
scas
and
aas
popa
out
hlt
dec
insb
sti
fldl
rolb
into
test
dec
mov
and
or
aam
pop
rorb
or
addr16
mov
mov
nop
nop
fs
mov
mov
or
call
fistl
mov
loopne
gs
pop
pop
mov
pop
sahf
pop
arpl
adc
out
lret
xchg
adc
sbb
call
mov
cmp
jo
sub
jp
jle
jno
mov
add
mov
or
add
cmc
fiadds
insb
leave
lret
loop
iret
xor
xchg
fldl
rcrl
out
mov
xchg
inc
aas
or
xchg
test
xchg
fsubrl
aas
fmull
sbb
movsl
pop
mov
pusha
fidivl
push
fidivrl
mov
loope
jne
imul
lock
xchg
out
lret
fisttpll
and
push
movsl
movsl
pusha
push
aas
jp
inc
add
arpl
mov
pop
push
hlt
inc
push
mov
inc
cmp
out
hlt
imul
aam
sahf
cs
sbb
jmp
push
mov
xchg
pop
out
cmc
xchg
xlat
jp
mov
mov
cmp
mov
lahf
lahf
jns
mulb
nop
jbe
loop
hlt
aaa
lds
loope
push
in
jmp
outsl
repz
mov
ss
xorl
push
idivb
adc
push
sbbb
xchg
and
mov
imul
jle
loope
or
repnz
loop
jp
inc
and
push
xchg
and
loope
in
les
rorb
jge
cmp
shl
andb
and
jno
outsl
stc
add
mov
sarb
xchg
add
adc
fdivr
clc
hlt
dec
in
sub
push
in
adc
push
stos
cld
mov
addr16
xchg
cmp
sub
pop
ja
jmp
test
sub
jg
jbe
imul
cmp
mov
xor
in
sub
adc
addb
or
lret
push
dec
mov
sub
dec
test
mov
rcrl
int
sub
in
inc
cld
lea
popa
ljmp
push
test
pop
push
addr16
sub
pop
xlat
cmpsl
jne
mov
or
inc
lods
mov
mov
push
ds
in
test
and
outsl
stc
mov
lods
add
add
dec
sbb
enter
add
repz
dec
sub
shll
sub
enter
or
int
dec
fimull
and
xchg
shl
shl
xor
leave
mov
movsb
ficompl
and
inc
sub
add
adc
mov
xchg
andl
das
jmp
push
loopne
mov
jmp
mov
dec
cmp
inc
ret
les
mov
cltd
bnd
pop
lahf
cmp
fbld
sti
add
int3
pop
ja
mov
popf
cmp
xchg
rcr
ss
pop
cltd
mov
insl
movsl
adc
shll
jg
insl
in
in
mov
push
lahf
lret
stos
sbb
movsl
push
pop
js
popf
jbe
push
lock
or
movsl
inc
sub
test
mov
hlt
movsb
push
fs
sbb
jo
jg
je
and
pop
push
test
lock
and
sbb
sbb
mov
add
sbb
add
cmpsb
mov
jo
scas
mov
cmp
sbb
xchg
loop
inc
mov
out
jmp
lret
pop
inc
pop
mov
pop
xchg
xor
jo
xchg
subl
inc
aad
imul
aam
mov
sub
stos
ss
sbb
ss
inc
outsl
mov
xchg
aas
jns
pop
sub
jns
push
cmp
push
sbb
push
filds
push
xorl
fistps
mov
mov
ljmp
mov
in
sbb
adc
push
test
ret
loopne
pop
cs
bound
pop
jg
adc
push
enter
lock
jl
mov
aad
lods
out
push
and
pop
dec
iret
ljmp
popa
mov
fnstenv
int3
lret
mov
gs
rol
sub
or
mov
cmp
jbe
mov
je
std
jne
in
cmp
xor
sub
fmull
cmp
cld
adc
mov
pop
bound
pcmpgtd
imul
stos
xor
aas
fisubs
inc
jl
lret
sbb
mov
cwtl
mov
jl
imul
cld
cmpb
mov
xor
push
mov
fidivl
mov
mov
gs
test
push
leave
nop
xor
dec
or
add
adc
fldt
or
inc
xchg
fdivp
mov
adc
fwait
add
dec
in
xchg
cmpsl
jnp
sti
in
fbld
aaa
xchg
mov
push
clc
fs
inc
adc
mov
mov
xchg
cmp
xor
cltd
mov
xor
jno,pn
add
hlt
in
int
mov
dec
in
and
cmpsl
cli
inc
mov
aad
neg
test
and
int3
dec
fldt
cmc
mov
mov
jb
pop
jl
mov
scas
in
fimull
sbb
out
fisttpl
mull
xchg
pop
jns
call
test
lds
adc
mov
fildl
popf
dec
insl
out
mov
imul
pusha
sti
push
out
loopne
sub
dec
jne
adc
enter
adc
leave
and
sub
imul
ret
mov
popa
sub
cli
inc
fisubrl
icebp
push
sbb
dec
sbb
push
ss
sbb
fs
aaa
sub
flds
test
orb
shrl
sub
add
sar
aas
dec
push
jne
in
sbb
loop
jns
pop
cli
lods
lods
dec
mov
jl
mov
decb
notb
or
call
xchg
jns
pop
inc
pop
inc
test
dec
and
sahf
push
cmp
outsb
jo
stos
sarl
test
and
and
mov
mov
fimull
pusha
fnsave
nop
es
pop
mov
dec
pop
lret
mov
movsb
mov
movsl
xchg
xor
push
mov
add
in
enter
cltd
shr
inc
rolb
add
enter
test
fcmovne
cwtl
pop
iret
push
mov
xlat
jae
push
rorb
into
mov
int3
pop
cmpsl
push
aam
stos
mov
pushw
xor
inc
dec
jge
scas
std
or
add
sub
sub
cs
sbb
jp
cwtl
fs
ret
dec
mov
fldl
test
cmp
dec
xor
cmpsb
sarb
jbe
push
add
ja
push
push
jbe
lret
inc
xor
shl
and
icebp
jp
xor
and
cmp
je
xchg
sub
aad
cmc
jne
sub
push
push
push
loope
and
es
jnp
xchg
dec
movsb
and
pusha
adc
in
sub
clc
inc
movsb
call
adc
pop
mov
cmpsb
arpl
aad
xchg
adc
jl
js
lret
and
ja
or
xchg
jecxz
inc
movsl
xchg
pop
xor
shufps
or
push
cmc
int3
push
lahf
push
adc
in
sti
mov
popf
xor
or
mov
adc
icebp
jae
jno
aad
sbb
insb
fnsave
cmp
subl
inc
popa
mov
mov
xchg
syscall
lock
inc
aad
sub
mov
jb
cs
pop
pop
stos
or
lret
mov
sub
dec
gs
sub
mov
add
fwait
push
arpl
lret
xchg
push
mov
movsb
add
and
sti
add
scas
lcall
xor
mov
and
nop
into
sub
adc
aaa
cmp
mov
subl
mov
dec
pop
fs
das
iret
lods
add
divl
pop
dec
jle
adc
call
cmpsb
and
addr16
scas
jge
bound
pop
pop
fsqrt
pusha
jb
or
xor
pop
inc
in
imul
cmovg
call
mov
adc
cmpsl
ss
nop
push
push
cmp
cmp
sbb
bswap
pusha
mov
dec
aaa
jp
or
test
jmp
sbb
cli
mov
std
push
cwtl
pop
cwtl
mov
adc
jo
icebp
cltd
mov
out
sbb
outsl
jnp
adc
xchg
sbb
lahf
cmpl
jg
js
cli
fildl
addr16
sahf
xor
dec
cmc
pop
movb
out
addl
pusha
jl
push
push
push
dec
pop
test
dec
or
inc
sub
jnp
cmp
mov
ret
aam
out
jns
push
sub
cmp
jecxz
pop
nop
fld
adc
pop
mov
cmpb
ljmp
pop
mov
xchg
xor
cmp
or
sti
pop
mov
inc
sbb
push
iret
lods
inc
sbb
jp
xchg
les
sub
dec
into
mov
decl
call
cs
push
or
das
mov
jnp
dec
xchg
inc
cmovl
scas
fldt
testl
mov
movsl
int
push
xor
lods
jg
psubsw
push
data16
cwtl
add
inc
mov
ss
pop
lods
dec
int3
aas
popf
or
pop
imul
insl
aas
je
subl
xchg
mov
bound
popf
shrb
sbb
jle
jl
mov
mov
les
mov
dec
adc
insl
and
jae
add
xlat
outsl
and
lds
pop
pop
pop
sub
sbb
fdivrs
lcall
inc
xor
xor
rclb
leave
aaa
jl
push
mov
rorl
xor
xchg
pop
xor
or
or
lods
in
push
aam
dec
scas
mov
and
xlat
adc
xchg
adc
cmp
and
xchg
bound
jnp
jmp
scas
pop
ret
xchg
xor
pop
pusha
adc
or
xchg
movsl
inc
mov
subl
gs
jle
or
popa
dec
lcall
cld
out
fs
ficompl
fdivrl
insl
dec
nop
jns
dec
stos
shl
js
lahf
lea
flds
hlt
lock
scas
and
popa
inc
cmp
mov
lds
cmp
insl
fldt
fsubrl
jbe
call
mov
test
cmpsb
push
cmp
jge
pop
mov
xchg
loop
shr
push
sub
mov
adc
sti
mov
pushf
adc
mov
cmpsl
xor
xor
in
jb
mov
push
or
out
xchg
inc
push
idivl
test
arpl
enter
std
dec
into
shrb
pusha
mov
pop
add
scas
and
dec
xor
xor
adc
lock
fnstsw
xchg
lcall
dec
into
mov
out
inc
jp
ret
mov
ljmp
jecxz
aam
loopne
ret
sti
xor
xchg
and
xlat
and
movsl
fdivrp
cmp
xor
popf
inc
js
add
jo
adcb
cs
cld
push
icebp
lcall
dec
fucomi
adc
mov
mov
fwait
loop
fisubrl
lcall
mov
in
mov
test
dec
jbe
scas
fwait
xchg
jg
not
fstl
mov
out
lds
or
xor
call
jns
aaa
pop
in
xchg
pop
inc
out
inc
pusha
adcl
sub
jae
clc
shll
lret
push
loopne
jns
andl
mov
jnp,pt
sbb
sbb
icebp
xchg
adc
sub
jns
mov
int3
fisttpll
fiadds
pop
jl
outsb
out
cwtl
inc
aas
pop
call
fisttpll
lods
mov
ds
adc
pop
jns
and
inc
mov
and
inc
pop
enter
push
sbb
outsl
mov
xchg
daa
sarb
test
repz
pop
sbb
js
or
ret
dec
jmp
arpl
xchg
and
ret
inc
incl
xchg
int3
pop
and
icebp
xchg
das
xchg
imul
sarb
mov
sbb
mov
sarl
clc
mov
jb
cwtl
call
addr16
jae
sbb
jle
push
les
pop
inc
pop
dec
lea
ds
mov
mov
pop
inc
push
popa
hlt
or
fcompl
lret
incl
mov
leave
cmp
in
clc
xor
mov
lcall
xor
mov
inc
push
mov
mov
out
or
test
mov
pop
rcrb
data16
mov
pop
pop
add
imul
and
sbb
subl
xchg
cmp
fidivrs
inc
cmp
mov
inc
mov
mov
pop
fcmovb
jb
add
lea
inc
sbb
repnz
outsl
sub
int3
hlt
clc
jnp
push
xor
add
push
cwtl
js
mov
jb
or
arpl
mov
mov
sub
in
jmp
xlat
scas
popa
xor
jle
or
or
int
dec
push
pop
push
cltd
adc
mov
mov
loope
add
je
lahf
in
jp
jo
jmp
jns
jnp
dec
sbb
adc
movsb
xchg
rorl
push
dec
call
push
out
sbb
arpl
mov
jns
jge
shr
dec
push
icebp
jbe
je
divl
lods
pop
xor
cmp
popa
cltd
dec
jno
mov
pop
and
adc
data16
into
bound
fisubrl
jmp
dec
mov
adc
leave
pushf
icebp
stc
icebp
pop
add
pop
inc
push
cli
add
jmp
stos
jecxz
xor
add
mov
mov
push
and
fnstcw
fidivs
sbb
dec
test
and
push
pop
inc
dec
inc
cli
mov
cltd
insl
std
sarb
out
sub
ja
xchg
add
push
cmp
dec
out
push
cli
mov
gs
mov
ja
jge
stos
cmp
gs
mov
cs
push
inc
inc
stc
cmpsl
and
xchg
mov
imull
and
fisttps
mov
jb
pushf
xor
dec
mov
rol
insl
aad
mov
mov
loop
push
and
movsb
xor
ja
cmpsb
xchg
clc
mov
mov
test
pop
cmpsb
adc
sbb
xor
out
pop
ss
and
rorb
clc
out
pushl
jo
mov
imul
sbb
scas
adc
pop
push
inc
xchg
adc
into
sti
adc
out
lahf
subl
dec
xchg
dec
or
jo
aas
mov
jne
pusha
adc
inc
mov
fs
cmp
ret
into
sub
movsl
es
sbb
pop
mov
xchg
in
loope
mul
out
mov
xchg
iret
loop
nop
and
lods
iret
pop
push
rol
repz
leave
lock
xor
mov
dec
pusha
jp
sbb
ss
mov
lea
rep
adc
loope
stc
dec
leave
or
out
aam
stos
and
out
or
xor
jp
frstor
hlt
mov
sub
arpl
imul
push
in
or
xchg
jo
or
in
or
les
ss
mov
repz
mov
es
popf
push
and
lret
out
mov
inc
insb
cli
lret
xchg
popa
mov
out
lret
add
add
bound
shll
pop
push
arpl
jmp
lea
push
pop
lret
outsl
or
nop
pop
xchg
lret
xchg
orl
cmp
ds
stc
fs
mov
mov
lahf
inc
cmp
orb
in
ljmp
mov
int3
xchg
xchg
fwait
jb
push
jge
jecxz
cltd
and
add
xor
lret
add
rcrl
loope
daa
inc
inc
repnz
stos
pop
xchg
mov
mov
mov
or
dec
mov
dec
jp
xor
jb
mov
push
sbb
inc
or
pop
dec
stos
mov
sub
pop
cltd
pop
mov
mov
mov
leave
call
adc
dec
ja
lcall
xlat
leave
mov
arpl
fstpl
incl
insl
test
insl
mov
push
mov
pop
jb
fnsave
mov
rcrb
xchg
out
wrmsr
mov
call
das
movsl
push
add
movsb
add
xor
dec
insb
mov
iret
js
clc
mov
jno
pop
loop
or
push
cmp
pop
cmp
call
imul
fcompl
or
imulb
mov
dec
mov
call
rcrl
push
shl
stos
sbb
pop
jno
cld
mov
aam
xchg
push
cs
scas
dec
sub
jno
bound
xor
fidivrs
jno
mov
bound
jnp
mov
nop
sbb
push
xorl
sub
bound
fsts
in
pop
push
xchg
int
inc
mov
shlb
icebp
pop
xchg
adc
mov
cmp
push
dec
mov
mov
cmpsl
je
pop
and
jne
and
inc
pop
into
dec
add
adc
sti
xchg
mov
mov
fcomi
pop
call
enter
pop
xchg
jmp
out
movsb
push
add
cmpsl
cmp
call
out
sahf
fldt
ljmp
ljmp
fiaddl
imul
fcoml
xor
xor
mov
push
sbb
cli
jo
cmp
xlat
lods
int
scas
xchg
push
sti
in
ret
add
shll
stc
ljmp
test
pop
repnz
or
addl
outsl
pop
stos
and
cltd
popa
pop
xchg
xor
ja
loope
xchg
fs
cs
lods
mov
popf
mov
loopne
test
insb
jno
and
xchg
hlt
jl
sub
xchg
mov
and
inc
xchg
adc
loope
test
sub
xor
mov
sub
jg
inc
adc
in
xchg
mov
clc
test
sub
push
sub
sbb
movsb
aaa
xchg
outsl
adc
fadds
push
popa
xchg
mov
pop
lock
rclb
call
in
xchg
mov
daa
hlt
aam
test
push
lret
add
pop
fsubl
lods
cmp
je
sbb
or
inc
add
ja
pop
push
or
and
scas
out
xor
and
lds
mov
push
lret
sti
and
sub
inc
mov
scas
sub
jae
fs
jns
gs
push
jae
lret
jbe
cmpsb
out
mov
pop
insl
stos
mov
xchg
cmp
mov
pop
aas
mov
outsl
push
sarb
and
cmp
push
int
iret
lahf
leave
test
out
cmc
and
jp
jle
pop
ds
mov
inc
xchg
add
adc
test
das
or
mov
in
xchg
xchg
inc
fbld
icebp
adc
cmp
fldt
jno
out
mov
mov
push
test
pusha
adc
sub
xchg
cmp
mov
mov
pop
lcall
jmp
pusha
push
or
pop
fnstenv
repnz
clc
sbb
cmpsl
xorl
dec
xchg
sub
jo
jle
jl
add
jmp
rolb
je
aad
dec
sub
push
mov
sub
and
cltd
inc
les
in
cli
pop
shl
loopne
push
xor
rclb
mov
sbb
ret
sti
clc
test
pop
stos
xchg
or
dec
cltd
andb
and
fdivrs
out
in
xlat
jo
dec
push
push
out
loop
jo
xor
sbb
fildl
test
cmp
mov
mov
sbb
scas
inc
cmp
aad
push
out
cmp
cmp
pop
adc
pop
lock
gs
leave
push
jecxz
imul
inc
sbbl
mov
orl
das
xchg
cmp
xor
jnp
pop
adcb
int
ss
jo
or
fwait
dec
mov
pop
andl
rcl
aas
out
pop
sbb
lock
push
movsb
dec
ljmp
lods
xchg
call
imul
outsl
getsec
pop
push
or
mov
pusha
sarl
jae
cmpsb
adc
adc
iret
sbb
mov
rcll
pusha
cmp
ljmp
fisttps
xor
mov
pop
inc
cwtl
es
xchg
hlt
jae
into
mov
cmp
fwait
sarb
or
and
imul
aas
bound
popf
jae
lods
popa
dec
push
pop
jmp
push
sbb
xor
mov
pop
ret
jmp
pop
jno
xchg
sub
or
xchg
pop
ljmp
xchg
inc
arpl
mov
in
movsb
pop
clc
ret
pop
and
repz
cmp
in
jg
pop
pusha
ret
inc
adc
enter
idivb
adc
inc
push
dec
mov
sbb
shlb
push
push
pop
lods
or
jns
adc
cmpsl
adc
mov
add
fiaddl
add
fistps
je
push
sub
jge
mov
stc
sub
arpl
lods
pop
cmpb
fwait
add
in
je
out
xchg
je
or
ljmp
ja
and
movsl
sbb
scas
pop
aam
sbb
xchg
out
ja
shll
dec
arpl
dec
mov
loope
iret
int3
cmp
insl
or
cltd
jo
sub
mov
cmpsb
adc
and
dec
pop
fcos
out
lret
push
imul
sbbl
test
dec
jno
cmp
add
dec
repnz
dec
mov
cld
jecxz
enter
arpl
outsl
jp
adc
int
mov
pop
stos
gs
mov
xchg
xor
mov
cmp
pop
fs
cli
ja
arpl
mov
mov
push
cmc
call
mov
dec
xchg
xchg
dec
repz
mov
push
mov
jle
adc
pushf
pop
sub
mov
pop
popa
fwait
test
mov
or
arpl
pop
out
adc
sbb
nop
int3
pop
dec
insl
jecxz
mov
imul
fwait
xchg
fcmovnbe
mov
cmp
testl
ljmp
lahf
add
loopne
pop
mov
adc
jo
lds
pop
pop
xchg
ror
call
not
or
mov
sub
div
out
dec
and
dec
inc
fwait
arpl
ret
in
xchg
test
in
or
adc
xchg
out
mov
js
lods
cs
dec
jp
outsb
hlt
sbbl
arpl
pop
pushf
sbb
sarl
inc
enter
adc
cmp
inc
adcb
mov
enter
or
sahf
das
cmp
push
nop
imul
cmc
lods
rcrl
inc
xor
xor
push
mov
btr
sbb
jmp
sarb
mov
pop
daa
inc
test
xor
lcall
pusha
lcall
xchg
int
push
xchg
enter
sub
sbb
loope
mov
and
aaa
fbld
sub
in
mov
test
lret
stc
pop
mov
daa
andl
out
sbb
jbe
rorb
jne
test
mov
nop
pop
inc
pop
out
sti
lahf
cmp
lret
xor
addl
popf
sbb
pop
stos
jo
push
out
push
imul
add
cmpsb
mov
in
stos
daa
mov
repnz
mov
sti
mov
mov
lahf
and
push
shld
arpl
adc
jmp
jmp
mov
stos
dec
dec
mov
xchg
aaa
and
pushf
sbb
dec
lahf
pop
jb
or
and
inc
movsl
inc
orb
xor
and
fbstp
cmp
cmpb
lds
stos
xor
fstl
jp
aaa
push
sub
movb
ja
pop
xchg
add
iret
jne
inc
mov
movsb
xchg
mov
cmp
inc
das
pusha
inc
dec
xor
jp
lcall
add
fnstsw
push
push
ds
mov
xchg
xchg
inc
mov
loopne
adcb
fisubs
adc
inc
xchg
imulb
out
out
popa
pop
jbe
not
jno
lds
xchg
invd
pop
aam
xchg
test
dec
in
dec
cltd
jno
or
pop
shll
pop
divl
fbld
cwtl
out
jge
cmp
das
mov
xchg
xchg
cmpsb
cwtl
rcrl
sahf
or
sub
fwait
stc
stos
pop
repnz
ss
jb
inc
dec
pop
add
lret
pushf
lods
rcll
test
pusha
push
es
sub
pop
insb
jns
push
into
mov
clc
inc
xchg
imul
pop
dec
cmpsb
stc
testb
dec
fwait
or
push
xchg
or
movsb
xchg
loope
in
out
aad
xorl
dec
jo
popl
shr
call
imul
leave
adcl
adc
fiadds
push
mov
push
aam
ss
scas
mov
mov
imul
or
adc
cmpsb
jno
jle
lcall
rolb
daa
stos
mov
xchg
cli
repz
out
lret
mov
lret
fmulp
lock
pop
lret
aam
scas
out
in
test
ljmp
mov
cmpb
add
jne
jle
xor
sbb
cmp
push
insl
fsubs
or
sahf
xchg
ja
out
inc
cmpsl
shr
clc
inc
into
inc
cmp
nop
gs
mov
sti
jp
push
shl
push
pop
sbb
lahf
popa
mov
stos
outsb
pop
adc
and
bound
dec
or
or
jns
xor
bnd
arpl
jle
shl
out
add
clc
adc
push
xchg
push
outsb
in
inc
bound
fld
mov
sbb
insl
dec
cmp
in
xchg
addl
push
xchg
in
cmp
dec
jno
xchg
std
adc
cwtl
arpl
insb
sub
pop
int3
pusha
add
fcmovbe
push
rcrl
sub
sub
xchg
pop
jmp
inc
push
leave
mov
dec
mov
xchg
jne
lcall
sub
pusha
xchg
or
inc
repnz
sub
mov
adcl
ss
inc
loop
rorb
xor
xchg
in
popa
mov
jns
dec
insl
ss
clc
in
xorl
int
pop
ss
into
xchg
dec
xor
fisubrl
xchg
push
lea
sbb
out
imul
inc
dec
hlt
xchg
push
adc
lret
imul
add
add
jle
into
add
ljmp
and
sbbl
call
xor
fld
pop
push
insb
mov
cmpsb
shll
test
test
mov
fwait
xchg
cmp
pop
mov
mov
ljmp
ds
pop
and
pushf
call
outsb
iret
fwait
jmp
repz
push
sbb
mov
jl
xchg
pop
imul
add
mov
pop
int
push
sub
lea
out
stos
add
mov
sbb
push
scas
sub
icebp
push
dec
pop
outsl
cmp
icebp
mov
jl
cmp
cmova
mov
cmp
icebp
mov
bndstx
test
xchg
mov
dec
mov
loop
sti
cld
nop
call
xor
inc
sbb
or
sbb
js
pop
imul
xchg
mov
das
sub
jecxz
sub
xchg
cwtl
rcr
cld
movsb
gs
xor
test
test
xor
cmp
dec
mov
mov
push
mov
dec
fstps
xor
addl
js
or
dec
loope
stos
ljmp
jbe
loopne
sbb
add
daa
pop
dec
jo
mov
inc
cmp
fnstsw
outsb
xchg
adc
in
add
push
cmpb
xchg
loop
clc
test
loope
mov
fcomi
bound
push
pop
mov
repz
fwait
stos
lea
sbb
inc
pop
cmp
out
loop
aam
mov
xor
movsb
xchg
mov
xchg
push
movsl
xor
imul
inc
ret
mov
xchg
setnp
gs
add
test
aad
dec
pop
ljmp
loop
or
dec
xor
and
cs
cmp
sub
push
add
push
jb
sar
dec
sbb
mov
jp
pop
mov
jle
mov
loopne
enter
leave
inc
cmp
add
adc
leave
enter
pop
subl
out
lds
test
push
fdivrs
adc
lret
mov
jo
cmc
ret
fucomip
add
and
lods
jecxz
sub
push
inc
add
repnz
pushf
in
and
or
pushf
arpl
scas
sarb
xchg
jle
aas
test
inc
xlat
or
mov
mov
mov
dec
jo
das
lods
imul
frstor
lds
jae
inc
jle
lods
pop
das
add
push
aas
arpl
inc
in
icebp
inc
orb
xchg
daa
mov
ss
clc
in
sub
mov
jg
or
repnz
add
in
pop
xor
sub
and
mov
jg
lods
and
push
push
mov
mov
adc
repz
push
lods
xchg
pop
pushf
out
mov
or
sbb
lahf
sahf
mov
xor
out
lcall
mov
in
js
or
adc
push
movsl
pop
cmp
adc
mov
adc
xor
inc
xor
inc
inc
sub
push
xchg
cltd
test
mov
test
or
data16
jno
sub
arpl
ffree
mov
mov
and
ljmp
in
jo
pop
sbb
test
jns
jmp
popf
clc
mov
mov
arpl
ds
xchg
push
cmp
arpl
and
sti
out
mov
leave
inc
pop
cmp
pop
dec
xchg
cmc
adc
cmp
cli
push
sub
add
aaa
push
imul
dec
jmp
jecxz
or
pmuludq
cmp
or
inc
mov
out
sbb
fbld
dec
or
sbb
insb
in
clc
fwait
mov
les
lcall
shll
pop
sbb
inc
int
xor
pop
cmp
dec
incb
movsl
xchg
mov
lock
push
jmp
jae
jecxz
cmp
pop
or
loope
adc
mov
sub
sbb
fwait
lcall
xchg
frstor
cmp
je
xchg
cmpsl
movl
jb
jne
sub
jmp
dec
fdivs
in
lcall
or
out
aaa
cmp
sbb
outsl
xchg
cmc
imul
and
bnd
push
ficoms
insl
in
insb
cmp
cli
sti
hlt
popf
aaa
push
cltd
ja
aad
sub
fstp
sub
xlat
fidivrs
inc
cmp
mov
xchg
roll
cltd
fsubrs
mov
or
call
dec
cwtl
push
or
jecxz
scas
out
outsb
dec
xchg
jae
cmp
dec
push
inc
xlat
cld
cmp
out
lret
leave
sbb
xchg
push
cmp
test
cmp
scas
pop
repnz
lock
stos
daa
call
mov
jns
insb
cmp
gs
xchg
push
and
jnp
mov
inc
inc
clc
and
movsl
xor
enter
adc
stc
xlat
inc
xor
test
int
dec
and
or
and
jns
into
mov
mov
and
les
movsl
shlb
cmp
pop
aaa
les
stc
out
lods
mov
imulb
out
stos
sbbl
lds
push
insb
jle
ds
adc
mov
mov
or
test
nop
ja
enter
cmp
sub
inc
iret
mov
mov
ja
sub
or
repnz
aam
inc
scas
xor
scas
add
sbb
jno
push
lahf
outsl
jg
sti
call
fmull
sbb
xchg
push
shl
sbb
ss
lods
xorl
pop
repz
ja
scas
jb
xchg
adc
mov
pop
xchg
inc
jo
fidivs
mov
fmuls
shl
enter
test
sbb
test
mov
inc
mov
push
iret
mov
xchg
movsb
add
mov
aam
dec
aam
mov
jecxz
into
sub
and
mov
adc
lock
lock
add
insb
fdivrp
nop
fldt
arpl
test
clc
filds
gs
fsubs
orb
enter
fidivrl
clc
cwtl
adc
imul
jne
mov
lods
add
push
popa
and
mov
pop
sbbb
lods
inc
out
lods
fldt
inc
outsb
inc
data16
cmp
pop
pop
mov
in
jmp
cld
out
cmc
jnp
mov
xchg
nop
push
fnstsw
xor
aas
mov
pop
and
dec
repz
nop
sub
icebp
push
xchg
mov
dec
fiadds
andl
xchg
pushf
fildl
enter
pop
pop
inc
shlb
or
pop
mov
mov
xor
sbb
in
sub
mov
push
shlb
adc
mov
xor
and
addb
fcoml
in
js
xchg
xor
add
mov
outsb
fstl
pop
inc
sbb
cs
cmpsb
into
ss
cmpsl
adc
mov
or
jmp
sub
sub
dec
xor
adcb
repz
inc
jno
xchg
cwtl
loopne
pop
dec
jmp
cmp
shr
mov
push
cmc
ret
jb
inc
popa
jp
xor
xchg
icebp
and
out
pop
lds
pop
and
jb
cmp
mov
lret
mov
dec
jmp
js
xorb
add
scas
dec
mov
xchg
sarb
cld
jns
in
xchg
mov
mov
push
cmp
inc
xchg
push
xor
push
pop
pop
shll
movsl
dec
or
push
adc
dec
inc
fistpll
sub
push
insb
xchg
lret
mov
mov
fistpll
fwait
and
pop
in
push
sub
fucom
add
mov
xor
je
and
mov
cmc
inc
mov
inc
pusha
fstl
jno
jbe
neg
xchg
js
loope
sub
push
mov
add
ljmp
dec
jl
fs
pop
xor
inc
push
mov
cmc
jo
cmpsb
lret
or
sub
out
movsl
mov
dec
out
mov
dec
mov
mov
dec
xchg
lret
insl
test
stc
or
subb
repnz
push
into
cmp
movsl
pop
xchg
je
pop
sbb
inc
or
sbb
xor
mov
ret
or
xchg
dec
xor
cmpsb
test
adc
iret
mov
movsb
sub
push
xchg
inc
push
sbb
xor
mov
or
outsb
push
mov
lds
jae
outsl
dec
mov
push
push
lods
or
loop
mov
dec
pop
loope
aaa
lods
mov
sbb
cmp
insb
fwait
ljmp
popf
xlat
or
ljmp
push
mov
popf
add
xchg
nop
rcrb
xchg
mov
loop
in
loope
sub
enter
cmp
fs
aaa
and
testl
push
leave
nop
lcall
adc
xchg
gs
mov
dec
mov
cmp
lea
dec
cmp
clc
and
push
inc
xchg
cmp
add
add
mov
push
push
int
ja
pop
and
cmp
cmp
mov
push
mov
xor
icebp
pop
shlb
daa
repnz
adc
xchg
lret
xorb
xlat
push
sub
xor
cpuid
xchg
scas
les
lds
sub
test
decb
push
test
gs
and
das
add
push
jb
sahf
je
rcr
in
mov
ljmp
mov
cld
dec
dec
movsb
mov
xchg
adc
movsl
lea
fs
int3
ss
clc
aaa
xor
test
jecxz
outsl
and
test
loopne
test
pop
cmp
jle
es
jae
int3
jns
mov
xor
xor
lods
jmp
push
call
loopne
fdivrl
adc
cmp
pop
sbb
test
push
scas
dec
inc
mov
jo
add
xor
ret
jmp
lret
add
sub
sbb
mov
xor
xchg
aas
test
fiadds
mov
xlat
xor
cmpsb
loope
jne
insl
out
mov
iret
mov
pop
inc
enter
test
nop
sbb
pop
jae
fmull
mov
addr16
jno
adc
add
gs
adc
adc
jnp
insb
lds
adc
dec
lret
add
mov
sarl
mov
lods
in
testb
clc
push
or
lods
push
lea
imul
lock
movsl
ret
fidivrs
rorl
sub
mov
insl
pop
jecxz
pop
xor
fldz
jbe
pop
shl
push
inc
inc
enter
inc
mov
pop
addr16
or
addl
jbe
or
cwtl
cmp
cmc
xchg
lods
jo
popa
gs
mov
inc
xchg
and
or
arpl
dec
call
lret
je
icebp
xor
int3
mov
mov
cld
cli
adc
or
int
mov
sub
dec
imul
sub
aas
push
cmp
stos
pop
or
pop
outsb
sti
inc
lcall
cltd
jnp
rorl
cmp
shr
out
nop
stos
outsl
or
insl
imul
cmc
pop
fistpll
movsb
adc
cmp
cltd
mov
shl
cmp
es
fisttpll
and
int3
subl
nop
int
in
mov
adc
adc
mov
push
inc
pop
icebp
aaa
sbb
fcmovne
sub
push
lret
test
movsl
pop
cmc
in
push
lods
xlat
rcrl
jmp
test
int3
test
je
xchg
or
in
and
cmp
stos
je
or
xchg
mov
outsl
mov
sarb
arpl
pop
arpl
roll
cmpsb
inc
mov
into
fstpt
push
push
das
gs
test
pushf
in
xor
xchg
aam
mov
dec
inc
shll
outsb
pop
or
mov
dec
jg
roll
pop
add
test
pop
sub
mov
mov
bound
sbb
testb
mov
es
push
mov
jge
push
xchg
ss
ja
adc
push
xor
dec
xlat
xor
jge
push
cmp
inc
pop
mov
aas
inc
mov
push
xor
add
pop
sarb
scas
pop
test
add
jle
mov
js
sbb
xchg
mov
mov
jle
mov
xor
icebp
cmp
jnp
xchg
stos
nop
call
lods
push
push
dec
ret
pop
push
cld
jo
into
out
popa
fs
sbb
pop
lods
mov
out
jo,pn
xchg
or
test
dec
pop
out
movsl
pop
sbb
out
jnp
outsb
in
dec
mov
push
aaa
jle
bound
pop
mov
inc
mov
or
fsts
mov
push
scas
xchg
jb
lcall
jb
jl
movl
pop
les
or
xor
pandn
mov
jp
inc
mov
or
pusha
or
inc
stos
adc
lock
mov
inc
lods
cmc
cmpsl
test
ja
aam
int
push
xchg
mov
cmc
dec
cli
aam
les
adc
push
cmp
sarl
in
xlat
fisttpl
in
out
pop
addr16
mov
mov
clc
cld
or
fbstp
sahf
jae
loope
mov
dec
xchg
fmul
popf
xchg
xchg
flds
mov
mov
push
sbb
das
xchg
pop
push
rolb
enter
repz
std
sub
lret
sub
insb
inc
imul
pop
xchg
sti
scas
subl
div
mov
jecxz
jmp
pop
inc
xor
movsb
fstl
cmc
cmp
shrl
or
call
dec
aad
fcomip
imul
and
stc
lds
mov
jbe
rdtsc
lock
xor
clc
les
push
or
je
lods
fcoml
pop
stc
inc
repz
pop
sbbl
pop
outsl
ss
dec
sahf
jl
fadds
cwtl
sub
mov
sarl
lods
adc
dec
mov
cmpsb
jge
mov
xchg
fwait
and
cmp
add
fisttpl
push
aad
testl
cmpsl
int3
seto
pop
cvtps2pi
sti
mov
inc
in
sbb
filds
sahf
add
pop
fstpl
hlt
add
shl
pop
dec
cmp
mov
push
mov
lcall
shlb
pop
or
sahf
xchg
lds
arpl
mov
add
repnz
jbe
adc
mov
mov
mov
xor
mov
pop
and
out
pop
jp
sbb
mov
or
out
jne
loopne
mov
idiv
mov
or
movsb
jecxz
in
xchg
sbb
or
mov
mov
pop
xor
leave
jae
leave
push
pop
fdivrs
mov
cmp
cmp
dec
pop
adc
in
sub
jno
fcomps
dec
popa
push
aaa
repz
xchg
dec
cmpsb
cltd
sbb
jecxz
sbb
sub
sbb
sbb
jno
and
dec
cmpsl
mov
xchg
cmpsb
mov
aaa
xchg
sbb
add
out
loope
fisubs
mov
jae
mov
test
pushf
ljmp
out
sub
test
insl
test
jle
lods
push
sub
or
int
aas
sbb
loop
shrl
mov
inc
jle
xor
add
loop
popf
jecxz
dec
xchg
push
pop
jnp
jo
push
movsb
inc
mov
in
jp
lret
sbb
mov
repz
pop
cld
call
loop
popa
mov
mov
mov
inc
mov
dec
or
push
rcll
pop
test
popf
clc
rolb
call
xor
fldt
sub
xor
sahf
add
add
xor
aam
mov
xor
xchg
jge
cmpl
inc
out
lret
lret
cmc
sti
or
dec
ds
mov
addb
cmp
rolb
push
adc
dec
add
insl
icebp
rorb
loop
dec
push
pop
aad
insl
imul
push
pusha
test
shlb
jne
arpl
jp
pop
jno
bound
add
jbe
cmp
xchg
inc
push
jno
sub
cmp
in
dec
aam
sub
adc
lea
insb
inc
ret
gs
out
and
call
xchg
iret
out
insb
sub
rorb
dec
cmc
xchg
push
jecxz
dec
fcompl
cmp
and
add
inc
arpl
adc
popa
repz
addl
cltd
inc
and
leave
cmp
iret
lahf
in
roll
mov
jg
lods
sub
push
int
les
test
mov
out
lods
or
je
testb
into
out
mov
xchg
mov
cmp
add
in
adc
pop
inc
cmp
adc
into
sub
test
mov
insl
push
jnp
stc
sub
mov
ljmp
or
xor
dec
aas
or
dec
int
cmp
and
or
cmc
insb
daa
scas
add
xchg
nop
sti
sbb
gs
jl
test
lods
cmc
loope
jns
mov
je
lods
ret
dec
cmpsl
in
cmp
xchg
roll
sbb
ds
jb
push
adc
lods
stos
sub
inc
push
push
ljmp
bound
mov
fcomps
dec
sub
icebp
ss
fwait
adc
and
xchg
bound
pop
ror
jns
es
mov
or
bnd
sub
and
inc
lret
or
add
popa
add
test
or
aaa
jge
popf
push
pop
mov
shll
or
ds
mov
mov
mov
and
cli
sbb
add
call
ljmp
adc
xchg
and
cmp
shl
stc
aad
adc
push
pop
bound
out
adc
adc
out
inc
lds
call
add
push
xchg
push
jbe
sbb
rcll
jle
mov
hlt
or
push
add
mov
sbb
xor
jne
xchg
jp
pop
bound
fdivrl
mov
inc
mov
and
stc
or
mov
inc
inc
insb
imul
icebp
xchg
jb
or
and
aad
jle
jecxz
call
lahf
imul
into
cmp
push
pop
daa
cltd
push
fimuls
mov
ja
xor
xchg
in
idivl
bound
inc
sub
fisubl
dec
mov
lds
adc
xchg
idivb
test
xchg
in
cmc
aad
ss
inc
fisubrl
insl
pushl
enter
pushf
dec
in
push
push
mov
popa
adc
ds
and
pop
sti
dec
xor
in
jge
das
decb
btcl
sti
sbb
add
mov
mov
dec
mov
sbb
popf
aaa
call
arpl
stc
cmp
xchg
fstl
jbe
nop
lods
pop
lret
push
push
mov
jp
bound
or
mov
mov
jae
add
and
lods
jbe
iret
mov
xor
out
mov
out
xor
imul
outsb
pop
dec
or
addr16
pushf
addb
mov
addr16
lds
nop
add
push
pop
xor
int3
inc
ja
jae
lret
sub
ret
xchg
testb
fstps
xchg
adc
mov
mov
pop
scas
inc
add
inc
xor
ret
adc
add
mov
pop
insb
and
xorl
mulb
sub
mov
insl
push
cmp
jns
mov
mov
fisubs
cmp
dec
pop
xor
lea
xor
fs
sub
mov
xchg
les
in
jge
movsl
xor
in
icebp
js
stos
mov
jl
js
mov
jne
cmp
sbb
ljmp
pop
jae
sahf
pop
mov
push
lock
xchg
aaa
or
xor
insb
lret
mov
popf
jp
push
pop
dec
mov
scas
lea
pop
lock
push
mov
push
lret
loop
cwtl
cmpl
out
pop
cmp
push
xor
mov
or
loop
in
dec
std
ja
jp
sub
aaa
jno
call
push
mov
lret
aad
and
xchg
in
xlat
ljmp
in
mov
mov
cld
cmp
xchg
mov
loope
test
loope
jne
xchg
movsb
add
mov
and
and
aam
push
out
mov
xchg
cmp
pop
mov
xchg
pop
inc
inc
add
dec
lret
rol
popa
std
dec
lock
shlb
and
mov
push
ja
into
cli
lock
ret
push
jg
movsb
mov
sbb
int3
cmp
orl
and
ret
sub
mov
adc
inc
insb
dec
dec
xchg
mov
sub
scas
push
call
cmp
xchg
ficoms
mov
sub
cmp
cld
mov
jno
sti
and
xor
add
stos
xchg
jl
cmpsl
mov
and
cli
mov
sub
mov
pop
jge
add
je
and
jbe
pop
sbb
sub
add
inc
popf
cs
dec
aas
stos
jecxz
aaa
and
popa
mov
sti
int3
pop
jmp
push
out
cmp
out
insb
mov
adc
insl
sbb
mov
sub
js
das
lock
dec
movb
or
jae
sti
movsb
lds
loopne
or
push
pop
pop
sub
xor
jecxz
and
mov
pop
dec
mov
pop
cmp
sub
mov
pop
sub
fs
adc
jp
ret
pop
and
jno
inc
movsl
xchg
xchg
xor
jl
das
push
ljmp
mov
xchg
inc
push
cld
add
dec
or
fs
jb
push
idivb
lret
stos
adcl
hlt
add
cvtdq2ps
das
mov
sub
xor
lret
repnz
jo
in
imul
es
pop
pop
xchg
test
aaa
pop
add
lcall
test
rolb
jmp
xchg
addr16
cmp
jno
inc
mov
push
and
in
mov
jmp
cs
xchg
ja
inc
pop
xchg
stc
popa
pushf
rcrb
push
add
dec
adc
stc
add
xchg
into
out
sbb
bound
mov
out
lahf
insl
or
xchg
clc
outsl
sub
cmp
in
scas
shlb
sbb
lea
jo
pop
push
and
dec
inc
mov
pop
push
inc
pop
mov
mov
stos
stos
out
lahf
aam
movsb
loope
cmp
xor
lret
add
push
push
and
hlt
pusha
push
jge
lahf
mulb
sbb
mov
out
aam
add
mov
mov
ljmp
sbb
xor
xor
test
push
inc
cli
adc
outsl
in
inc
mov
mov
jnp
and
je
andl
mov
mov
mov
testl
inc
in
jmp
fwait
cmc
cmp
lret
push
jo
fwait
add
daa
jnp
or
cmpsb
xor
out
jmp
cmc
aaa
dec
stos
repnz
mov
mov
and
adc
mov
or
mov
fstpl
xor
rcrb
sub
xor
lods
sti
add
lock
rcll
stc
scas
sub
xor
idivw
mov
push
test
push
cltd
add
lret
sub
scas
cmpl
loopne
inc
notl
shlb
mov
or
push
inc
insl
fnsave
subb
pop
aaa
dec
jp
iretw
dec
stc
add
pop
xchg
mov
orb
rcll
enter
call
popa
andl
push
mov
inc
and
mov
lea
loopne
xchg
in
shll
ja
xchg
or
movsl
mov
popf
cld
inc
rcl
jo
rclb
xchg
sahf
mov
xchg
pop
jae
push
push
mov
leave
xchg
imul
and
std
push
push
out
push
jp
cltd
das
xor
jmp
xor
sahf
xchg
mov
rolb
mov
inc
movsb
push
test
test
ja
jg
cmp
sub
pop
pop
aam
int
inc
pop
cmp
or
je
ljmp
mov
mov
mov
or
add
fildll
mov
jmp
sahf
inc
fidivrs
pop
add
adc
dec
mov
jle
aad
inc
incb
test
mov
pop
sarb
mov
inc
into
outsl
cs
lcall
leave
jp
stos
jecxz
mov
scas
dec
or
ljmp
add
jbe
adc
or
ljmp
hlt
hlt
xlat
movsb
sti
or
push
ficompl
int3
loop
adc
out
scas
sub
pop
pop
iret
aaa
jb,pt
stos
push
andb
or
xchg
iret
xor
dec
pop
clc
aaa
in
pop
cmp
pop
sbb
cmovle
and
adc
mov
jecxz
rep
mov
clc
xor
and
sti
cmpsb
cltd
shlb
movl
adc
push
xchg
mov
pop
fpatan
test
fimuls
xor
js
mov
mov
enter
pop
int
xchg
cmp
nop
out
inc
rcl
add
mov
mov
je
pop
pop
icebp
mov
xor
mov
insl
movsl
rorl
jb
icebp
pop
add
and
jno
test
movsb
ficompl
lret
not
rcl
push
ljmp
jl
movsl
call
je
fdivrl
adc
push
jbe
cltd
mov
sub
dec
ret
sub
lock
mov
inc
push
xlat
jp
movsl
mov
push
fyl2xp1
mov
fidivrl
xor
popf
mov
movsb
mov
add
gs
test
jno
bound
push
mov
pushl
mov
push
inc
inc
das
daa
pop
repz
pop
fs
mov
pop
mov
sti
dec
xor
out
das
pop
mov
enter
aad
pop
testl
sbb
inc
sub
insl
xor
inc
int
pop
repnz
je
sahf
mov
jl
pop
sub
orb
aas
mov
cmp
ss
mov
sbbl
sub
inc
pop
es
cmp
sti
shrl
stos
into
pop
inc
lret
das
test
jmp
xchg
and
sbb
add
in
jp
push
xor
das
roll
add
movsb
fdivl
insb
fdivrp
xchg
data16
daa
test
fsubr
dec
jbe
daa
jp
pop
mov
cmp
js
frstor
bnd
cmpsl
jne
outsl
mov
cmovne
fdivs
add
or
inc
adc
je
push
or
aam
push
jge
aas
push
roll
cmp
imull
imul
jmp
insb
add
cmp
inc
test
cld
mov
mov
xchg
push
mov
addr16
pop
jle
cli
subb
cs
in
fdivrl
jne
jne
xor
xor
test
sarl
in
filds
mov
fcmovne
cmp
scas
jno
jmp
out
add
xchg
lds
push
shrb
int3
imul
adc
int
pushf
out
push
dec
repz
enter
lds
add
adc
lret
in
inc
repnz
cs
fwait
push
rcl
and
cwtl
fwait
addr16
ret
fisubrs
lods
cwtl
arpl
bound
jo
mov
test
ds
scas
add
les
sub
push
aaa
push
inc
add
jae
outsl
jno
jo
cmc
imul
add
mov
sti
bound
xor
jb
push
cmp
mov
cs
inc
enter
clc
enter
movsl
shrb
add
mov
fdivrl
adc
std
or
push
mov
in
repz
push
mov
add
inc
push
mov
sbb
xlat
lcall
sbb
push
in
dec
in
outsl
or
xchg
mov
cs
jl
movsb
xchg
and
mov
dec
dec
push
outsl
mov
or
imul
push
daa
inc
lods
fs
das
shll
pop
jbe
popf
lods
push
sti
ja
in
push
in
shrl
adc
addr16
jo
inc
sub
lods
stos
leave
cs
push
rclb
xorl
aam
subl
adc
lcall
outsl
fsubrs
scas
mov
pop
lods
insl
inc
lret
and
adc
pop
int
popa
cltd
scas
sti
mov
xchg
jns
mov
das
pop
jns
jb
sub
jle
idivl
idivl
mov
int
mov
aas
fldl
jne
ja
dec
xor
out
mov
cwtl
pusha
dec
xchg
nop
xor
bound
enter
jnp
in
or
imul
mov
xchg
stos
sub
fucom
xlat
xchg
adcl
imull
jmp
cmpl
xchg
out
popf
add
jmp
cmc
inc
pop
mov
fcompl
dec
xor
sahf
sub
adc
pusha
addr16
stos
push
pop
sub
movsl
and
movsb
enter
roll
sarl
imul
stos
push
in
or
push
sbb
or
and
in
jecxz
movsl
xor
fs
and
xor
mov
push
or
mov
inc
push
pop
push
jp
nop
aad
ret
xchg
lds
pop
adc
sbb
psubb
cmpsb
ds
notl
in
shl
xlat
lea
mov
xor
inc
sbb
int3
in
scas
xorl
imul
jecxz
std
push
gs
movsb
test
filds
movsb
fbld
mov
aas
inc
adc
sti
lods
dec
ja
addb
fmuls
and
jmp
sti
cmp
test
cwtl
sub
inc
fstps
push
in
mov
mov
pop
scas
lea
je
je
pop
xchg
jnp
cmc
test
and
push
std
movsl
jecxz
mov
in
sti
fcomp
rcrb
sbb
and
mov
push
dec
add
dec
icebp
mov
sarl
push
pushf
dec
mov
xor
mov
xchg
rcll
dec
int
gs
cld
enter
popa
aas
in
xor
jmp
jno
aad
sbb
fisubs
daa
mov
pop
enter
fldt
mov
cmp
adcl
fldcw
leave
orb
sbb
loope
popa
ss
ret
ret
fsubs
test
fwait
cvtps2pi
mov
adcb
mov
push
sti
mov
insl
xor
fbstp
insl
insl
jmp
push
test
jnp
ljmp
jl
lea
push
test
xor
and
pop
xor
mov
inc
pop
lea
sub
add
sbb
sub
movsl
pushf
cmc
pop
push
mov
imul
in
mov
push
dec
mov
je
inc
cmpsb
xchg
cmpsl
arpl
inc
jne
es
jns
cmc
xchg
mov
push
nop
pop
outsl
inc
add
adc
mov
popf
popa
lock
jns
cwtl
add
push
push
ljmp
hlt
dec
ljmp
xchg
ljmp
sub
sarl
sub
adc
test
subl
outsl
and
iret
or
in
into
fcmove
sbb
jns
mov
jecxz
mov
insl
sbb
sub
in
or
outsb
xlat
lret
lahf
cmpsl
jp
jnp
add
insb
je
ljmp
mov
push
fnstenv
dec
xor
ret
fcoml
arpl
leave
stos
repz
jno
shrl
dec
adc
adc
aaa
daa
testl
cwtl
xor
scas
mov
push
add
das
loop
subl
mov
testl
aam
jge
add
dec
mov
je
fcompl
adc
xor
lret
inc
jbe
mov
dec
cs
jg
daa
ljmp
mov
insb
and
lahf
adc
lahf
xlat
mov
das
push
shr
cs
cmp
ror
xor
cmp
enter
pop
push
inc
notl
jno
repnz
jmp
loop
dec
mov
pop
ja
or
shll
loopne
pop
into
push
mov
iret
pop
in
mov
dec
dec
add
insl
movsb
nopl
jne
pop
dec
nop
add
scas
mov
adc
das
cmp
xchg
fsubr
cmpsl
mov
add
mov
imul
daa
repz
test
loop
cmc
les
push
mov
jb
pop
out
jns
mov
repnz
xchg
jns
lea
inc
jb
into
notl
shl
les
icebp
xchg
and
addr16
inc
outsl
xchg
mov
mov
sbb
out
sub
fldt
add
stos
xor
mov
adc
adc
rcrw
hlt
cld
es
addl
idivl
lock
loop
mov
xlat
es
scas
add
or
lret
cmp
mov
out
mov
add
fstps
pop
roll
aad
shll
cmp
out
xchg
push
mov
jmp
data16
iret
xlat
cmc
inc
aaa
jg
arpl
lret
sbb
test
mov
jo
mov
cmp
scas
fbstp
mov
outsb
std
fdivr
leave
adc
stos
adc
inc
pandn
mov
data16
push
loope
add
movsb
repz
call
cmp
jmp
jl
cld
cmpl
xor
loope
pop
push
lcall
sub
sub
cld
cmp
mov
lea
pop
push
adc
cmp
frstor
or
mov
inc
push
pop
leave
mov
imul
add
inc
aas
daa
add
fxam
mov
add
ds
data16
fwait
les
subl
cli
int3
enter
xor
sub
aas
cmp
lret
jge
cltd
xor
jae
mov
xchg
shrl
inc
push
stc
push
dec
mov
and
dec
test
mov
mov
scas
add
cmpsb
shl
sub
add
sub
adc
xchg
test
jns
dec
pop
dec
fwait
sbb
dec
xor
xchg
in
test
call
pop
dec
shll
sbb
mov
sbb
aam
jmp
hlt
dec
inc
cltd
jle
cs
mov
mov
lds
cmpsb
mov
mov
inc
imul
add
ja
mov
les
jge
test
push
mov
or
xlat
ret
lcall
cmp
jle
iret
out
imul
mov
adc
fwait
pop
or
notl
and
insw
pop
out
imul
jb
into
sbb
and
dec
xor
cltd
pop
sub
push
cli
sub
xor
xchg
push
sarl
icebp
int3
stos
subb
pushf
ss
mov
aas
fisttpl
shrb
jo
fbstp
mov
pop
jg
pop
iret
and
cmp
inc
mov
bound
into
gs
mov
add
jecxz
and
xchg
adc
xor
jp
in
mov
add
int
aam
push
sub
in
xlat
testl
sbb
push
adc
test
and
jmp
dec
sbb
insl
mov
push
and
push
ss
cld
stc
dec
and
repz
int
cmpb
mov
cltd
test
testl
idivl
pop
sub
insb
jae
pop
mov
inc
pushf
cli
out
repz
adc
xchg
cld
mov
inc
inc
not
mov
cmpsb
pop
xor
shl
mov
pushf
loopne
sub
inc
pop
pop
outsl
es
shr
adc
or
sbb
sahf
push
arpl
ja
push
mov
dec
cmc
adc
cmp
pop
das
in
stos
in
shrl
bound
enter
arpl
iret
data16
jge
lahf
add
repz
sbb
jae
pop
mov
mov
arpl
dec
add
test
sub
aam
mov
push
ljmp
daa
jno
pop
out
in
and
popa
mov
pusha
adc
cmc
mov
push
pop
mov
popa
shr
jns
sbbb
fstp
clc
xchg
shrl
cmp
and
imul
les
in
cld
push
sbb
lcall
push
sbb
pop
push
cmp
pushf
xchg
or
mov
push
hlt
aam
leave
jl
dec
push
shll
insl
jno
xchg
div
push
aas
mov
daa
pop
xor
out
push
adc
adc
roll
jb
repnz
dec
popa
lea
lock
jp
cmp
loope
push
mov
gs
jmp
subb
adcl
push
mov
hlt
ja
jle
dec
xor
cmp
xchg
cmc
outsl
jg
aas
adc
mov
lds
fldl
mov
dec
sbbb
jl
scas
arpl
pop
jl
out
daa
jnp
xor
push
mov
sub
arpl
xchg
and
int3
push
idivl
push
test
cmpl
xor
lea
xor
jl
pusha
sub
sti
arpl
inc
test
pop
pop
mov
mov
jb
cmpsl
jo
scas
fsubrs
movsl
pop
stos
loop
dec
fstpt
ljmp
pop
sbb
mov
adc
xor
and
or
mov
fdivs
dec
pop
lcall
sahf
sbb
dec
stc
sub
int
call
and
dec
jo
les
lods
dec
stc
repz
aam
insb
sbb
ds
ss
sub
xlat
fistpl
cmpb
inc
stos
pusha
lcall
enter
pop
int3
pushf
addr16
fldl
imulb
inc
or
int3
aaa
xor
loope
rorb
pop
rorb
adc
add
fwait
mov
loopne
cmp
xchg
ret
lods
nop
call
push
lret
inc
mov
aas
or
xchg
insl
and
cmc
out
mov
push
inc
mov
jmp
jns
popa
pushf
test
idivl
jp
jmp
adc
inc
pop
jns
ret
adc
dec
mov
pushf
push
cmp
je
dec
push
jg
outsl
mov
pop
mov
inc
mov
add
sub
jmp
shl
adc
cmpsl
das
mov
and
pop
jne
xchg
mov
xor
test
insb
loopne
or
push
mov
iret
addr16
std
mov
sbb
jne
dec
sbb
stc
xchg
loop
into
fmuls
arpl
lods
sub
dec
rclb
lahf
xchg
add
pop
add
outsl
popf
outsb
pusha
sti
push
rcl
shll
push
add
or
mov
lahf
xchg
shll
test
inc
jbe
dec
xchg
repnz
add
sbb
scas
loopne
imul
lock
sub
push
inc
xchg
ss
dec
push
sub
cli
jne
hlt
fwait
pop
shlb
lods
sti
sbb
mov
call
mov
lcall
jns
mov
inc
xor
popf
push
mov
out
popf
mov
dec
or
or
cwtl
fmull
cmp
add
mov
testb
cmp
adc
imul
stos
into
cmc
scas
adc
je
adc
adc
lcall
pop
popa
dec
or
xor
js
xlat
outsl
sahf
fnsave
xchg
push
test
mov
outsb
sub
adcl
fstps
cmp
jle
mov
leave
push
cmpsb
mov
lods
mov
mov
fwait
out
sub
mov
jae
out
push
adc
cwtl
mov
mov
inc
gs
pop
shrd
sbb
in
mov
adc
jno
dec
gs
sub
pop
pop
dec
sbb
jp
mov
cmp
and
jno
add
push
shrl
aam
les
and
aas
ret
and
mov
xor
shlb
push
sub
xor
xor
add
outsl
sub
jp
or
push
popf
jnp
jg
and
stc
ja
mov
xchg
mov
cltd
inc
fidivs
xor
inc
shlb
lea
add
add
dec
xchg
imul
sbbl
sarb
lods
xorb
insl
rorb
inc
aam
das
pop
pop
dec
mov
push
mov
mov
std
xor
rcl
mov
addb
or
cmp
mov
sbb
cmp
lock
xor
fsubp
jb
pop
imul
jmp
clc
popa
sub
add
jmp
xlat
xchg
test
dec
adc
test
cmp
shr
rcr
mov
imul
push
test
pop
and
rcrl
jo
test
adc
repz
repz
out
adc
cs
mov
add
or
cmpsb
sub
in
popf
sahf
push
sbb
popa
add
fcoml
mov
mov
rcrb
test
and
mov
stos
adc
fimull
int3
pop
gs
mov
insb
and
dec
stos
test
mov
repz
mov
mov
pop
cmc
sub
stos
fstpt
push
pop
outsl
loopne
mov
fisubl
scas
sbb
cmp
je
in
out
mov
daa
orb
and
lock
outsb
xchg
out
sbb
jae
add
popa
stos
shrl
out
push
stc
ror
jno
xor
in
xchg
and
pop
xor
mov
fdivrs
stc
fnstsw
aam
inc
push
pop
repnz
out
pop
and
iret
adc
adc
cwtl
out
je
test
fbld
lcall
adc
add
adc
mov
in
frstor
mov
movsl
xchg
sub
adc
or
and
hlt
int3
adc
dec
xor
lods
mov
mov
jecxz
pop
and
xlat
pop
pop
decb
addl
and
mov
dec
test
mov
lcall
pop
arpl
shll
xchg
mov
mul
fdiv
dec
fwait
shll
test
popa
cli
into
out
mov
mov
lods
bound
push
sub
jp
inc
or
in
jne
ss
jb
xlat
into
xchg
daa
cmpsb
fwait
test
enter
in
dec
jg
jp
sti
dec
jae
cmp
sub
inc
mov
lcall
out
ljmp
jge
ret
test
dec
jo
movsl
rcl
sub
mov
out
sbb
sbb
leave
cmp
mov
outsl
mov
inc
mov
pushf
les
into
dec
test
and
add
enter
push
stc
hlt
jne
lcall
fisubrs
adc
pop
jno
mov
mov
js
adc
lods
jae
pushf
sbb
ret
pop
testl
repnz
cwtl
lret
mov
jg
jo
jecxz
cmpsb
loop
arpl
inc
mov
inc
daa
test
sti
lret
inc
pop
or
ret
mov
cmpsb
std
leave
add
int
mov
flds
cltd
jecxz
add
subl
in
adc
pop
dec
mov
or
xor
add
fs
imul
push
in
and
cmpsb
pop
pop
mov
push
dec
or
jmp
mov
addr16
into
roll
cmpsl
push
std
mov
push
sbb
sub
inc
into
bswap
fistpll
outsb
repz
addr16
notb
rolb
or
push
mov
lds
stos
je
lods
sub
pusha
and
ficomps
push
outsb
mov
scas
and
cld
pop
xchg
push
orb
out
inc
or
xor
xchg
add
rcrl
dec
mov
and
ret
cmc
fwait
cwtl
xor
sbb
pop
jns
push
push
or
or
cmp
xchg
data16
push
negl
popa
jl
push
aam
pop
iret
adc
add
call
push
add
xchg
jecxz
add
scas
xchg
mov
std
inc
adc
jmp
sub
pop
xchg
jb
ror
jns
add
popa
mov
pop
movsl
mov
das
sub
aas
ss
shll
xchg
movsb
mov
or
lock
mov
lods
dec
shr
lea
mov
ret
or
roll
pop
repz
loope
push
fistpll
dec
ljmp
adc
mov
pushf
add
mov
sti
pop
hlt
lcall
inc
mov
loop
mov
xchg
inc
pop
je
mov
imul
mov
xchg
out
sbb
lret
push
mov
xor
cmp
mov
lods
jle
icebp
jp
jns
xor
fwait
aaa
lods
imulb
int3
or
daa
adc
inc
out
ja
negl
in
nop
inc
dec
movsb
lds
and
or
sub
out
loopne
mov
in
repz
push
cmp
lods
mov
and
sbbl
sbb
fistps
subb
ficomps
sub
dec
mov
out
inc
add
rcl
hlt
rcrl
add
fstps
add
xor
cmp
orl
and
add
inc
pop
adc
lcall
shll
push
inc
aad
sub
shlb
add
jnp
popf
and
xchg
fucomip
pop
dec
insl
les
outsb
sbb
dec
push
cmc
mov
cltd
mov
or
nop
repnz
inc
movsb
out
sub
inc
sub
lret
imul
incb
pop
in
in
xchg
xchg
iret
addr16
xchg
cmp
add
jmp
mov
inc
xchg
cwtl
adc
pop
sub
xor
fsub
pop
xchg
mov
stos
pop
mov
push
je
xor
push
jne
xor
adc
jmp
lcall
xchg
cmc
fists
jge
frstor
mov
test
dec
sbb
pop
mov
out
jae
movsb
shrl
add
or
rclb
jno
fiaddl
pop
mov
cmc
dec
out
jns
or
mov
test
ret
inc
fdivrl
scas
arpl
and
push
push
cmp
insb
adc
mov
cli
adc
addr16
cmpsl
jno
dec
js
inc
push
outsb
enter
int
xor
idivb
and
scas
and
push
adc
sub
pop
mov
les
jge
mov
xor
outsl
daa
xchg
pushf
sahf
pop
dec
std
cmpsb
inc
neg
xor
push
loopne
inc
fisttpll
and
stc
mov
xchg
adc
inc
or
bound
je
iret
out
test
and
fld
and
clc
xor
loopne
clc
jle
mov
cmp
popa
xchg
lods
push
cltd
sub
sbb
add
push
int3
and
push
lock
jae
dec
sahf
cmp
push
sub
sbb
lds
mov
push
ds
xor
push
aaa
xor
imull
mov
ja
inc
adc
loopne
sti
stos
inc
outsb
nop
xchg
adc
lret
sub
sub
mov
sub
aam
mov
test
mov
or
inc
mov
jo
clc
adc
repz
sub
mov
outsb
cmp
jae
mov
add
push
lret
dec
fdivs
inc
jle
lret
push
cld
jecxz
xor
stc
jb
test
push
fstpt
stos
dec
lret
or
or
inc
pushl
sub
cmp
xor
sub
or
sbb
dec
jmp
aas
add
inc
sub
adc
ret
cmp
pop
adc
dec
jecxz
or
push
sti
fisubrs
adc
nop
mov
cld
jecxz
fmull
outsl
outsb
push
or
stos
xor
push
inc
mov
rorl
mov
cmpsl
pop
inc
dec
and
mov
shl
and
push
inc
jae
jne
repnz
mov
fcompl
push
dec
shll
bound
int3
fiaddl
push
pop
jecxz,pn
das
fldl2t
pop
in
repz
rclb
test
mov
or
arpl
stos
push
ss
pop
mull
or
pop
sti
mov
outsl
cli
ficoms
pop
adc
and
mov
fadds
mov
sbbb
jmp
xchg
push
cs
xchg
pop
insl
dec
add
fwait
lret
mov
mov
cmp
and
jmp
in
fnstcw
sbb
push
aaa
test
or
fidivl
in
and
push
cmp
mov
ljmp
mov
mov
sub
cmp
mov
add
inc
icebp
sahf
out
test
lret
xor
shrb
sub
lret
add
push
dec
arpl
add
sub
or
mov
adc
jo
aam
scas
push
mov
test
or
inc
mov
sbb
dec
dec
ja
push
mov
adc
push
enter
shl
xchg
test
xchg
out
mov
xchg
mov
out
ja
lea
dec
xchg
pop
les
int
test
push
jp
cli
pop
xor
test
fcomi
xor
in
int
xor
jp
xor
pop
arpl
xchg
sbb
mov
adc
jle
add
pop
jno
xor
and
push
mov
push
push
lds
xor
addr16
jp
pop
sbb
pop
adc
mov
into
xor
pop
lcall
dec
add
and
xor
or
cmp
lods
mov
cmp
adc
scas
cmp
cmp
inc
imul
mov
pop
leave
jns
sbb
cltd
cld
jno
mov
cli
add
and
imul
and
or
lret
inc
int3
dec
shll
and
mov
push
adc
stc
push
jno
aam
sub
dec
into
add
push
sti
gs
cmc
xchg
mov
mov
or
pop
movsb
mov
shr
cmpsl
ds
icebp
dec
dec
leave
push
imul
aas
sub
hlt
jnp
subb
pop
mov
enter
sbb
icebp
mov
stos
leave
test
test
jb
xchg
jecxz
jne
xchg
jg
fists
pop
mov
or
fxch
mov
pop
or
bswap
mov
xchg
lds
sbb
in
cmc
mov
lcall
dec
sub
aaa
rolb
call
jbe
dec
inc
flds
mov
fisubl
outsl
or
dec
stc
aas
adc
test
cltd
or
out
or
push
js
inc
pop
shl
arpl
pop
js
inc
fsts
in
add
xrelease
cmpl
or
mov
push
test
sbb
sti
jmp
addr16
aam
test
xchg
mov
clc
add
dec
inc
push
add
repnz
scas
jno
jno
mov
mov
out
fwait
lret
imul
add
and
xchg
add
inc
call
fmull
jmp
mov
add
negb
inc
cmp
mov
aam
push
out
cmp
and
adc
jns
inc
add
insb
cmp
xor
enter
xorb
mov
adc
pop
pusha
movsb
lods
rol
dec
in
mov
mov
jno
xor
pushf
flds
add
in
sub
sub
clc
and
lret
adc
cmp
cmp
cli
into
sbb
insl
xlat
gs
push
or
push
cmp
lock
mov
and
lret
and
inc
ljmp
stc
fbld
push
and
push
fsubrs
imul
inc
testb
xchg
jge
mov
adc
fwait
mov
movd
jo
test
imul
pusha
std
xchg
lds
aas
inc
mov
out
xchg
imul
movsl
aas
jb
mov
mov
mov
out
clc
in
in
jle
mov
fnstcw
ret
adc
roll
and
in
mov
aaa
inc
test
xchg
or
mov
test
xchg
icebp
out
stos
cmp
into
or
stos
or
movsl
push
cmp
mov
pop
push
sbb
xchg
movb
add
bound
aaa
mov
stos
cs
xor
mov
and
popf
push
mov
aad
mov
call
out
movsb
aam
xchg
clc
sbb
jno
lcall
cmpsl
test
roll
mov
pop
outsl
out
lcall
sbb
sbb
gs
insl
insl
jg
xor
int
out
fwait
fwait
mov
mov
cli
adc
aaa
add
add
and
jns
imul
out
xor
mov
pushf
dec
mov
lock
mov
movsb
aaa
inc
test
in
mov
sub
arpl
fcomp
jne
out
xchg
fstpt
mov
stos
ret
cli
insb
gs
mov
adc
push
out
add
iret
lahf
aas
jnp
pushf
cwtl
push
rcll
cwtl
xchg
sub
jns
int3
and
out
and
cli
cmpsb
push
add
sub
rorb
ss
ret
and
inc
cmp
cmp
xchg
xchg
iret
sbb
push
jle
ss
stos
lahf
lods
pop
jns
into
cld
xlat
dec
fucomi
dec
lea
fistps
rcl
xor
shl
mov
mov
mov
dec
sbb
les
cltd
je
add
lods
cs
popf
in
mov
out
add
jnp
sub
cmc
scas
cmp
mov
dec
loop
mov
xchg
call
or
lock
cld
mov
cs
lret
sti
sbb
jecxz
adc
stos
outsb
xchg
jecxz
loope
repz
add
pushf
xchg
sbb
in
cli
lock
inc
add
add
cmp
jno
cmp
popf
add
add
adc
dec
in
and
pop
xchg
cmc
pop
lahf
xor
sub
test
sub
pop
mov
mov
dec
lret
movsl
push
sbb
jno
imul
mov
es
sbb
je
iret
push
cs
dec
ss
idivb
mov
lahf
test
test
movsl
or
test
pop
mov
pop
xchg
incb
cmpsl
mov
pop
lcall
xor
xlat
call
enter
daa
xchg
xor
xchg
push
in
imul
sbb
add
bound
fsubl
jle
test
ficoms
pop
fimull
cld
roll
pusha
les
pop
mov
dec
rcr
movsl
sbb
sub
push
adc
lcall
clc
addb
xchg
testl
sbb
stos
mov
dec
add
cld
sbb
aad
or
xchg
adc
ljmp
adc
cmpsb
push
push
test
mov
lret
cwtl
std
and
pop
mov
aaa
inc
sete
mov
jl
sub
leave
adc
dec
cmp
imul
mov
scas
addr16
std
inc
lods
lock
jb
outsl
or
xor
hlt
shll
inc
sbb
xchg
pop
cwtl
sbb
aad
add
mov
and
dec
jno
jge
fs
mov
cmp
xchg
push
lcall
inc
lock
mov
jo
sub
dec
ret
mov
mov
das
es
aaa
pop
fmuls
mov
stc
lcall
ds
and
imul
loopne
mov
xchg
pop
inc
icebp
ja,pn
aad
add
lea
dec
xchg
stc
pop
iret
mov
mov
mov
inc
cmpb
sub
rcll
pop
mov
xor
push
xlat
notl
xlat
lret
sbb
push
xchg
cs
or
cld
jno
out
test
mov
mov
out
sar
outsb
jbe
inc
dec
or
mov
sub
scas
imul
and
pmaxsw
testb
or
sbb
push
xchg
cli
xchg
notb
xchg
and
outsb
mul
dec
push
shrb
in
adc
in
mov
cmp
mov
lret
aam
data16
out
add
mov
inc
sub
cmp
mov
insb
shr
aas
or
xorb
fimull
in
fwait
lods
sbb
out
mov
cltd
lahf
mov
loop
xor
push
xchg
ljmp
dec
fisubrl
adc
or
clc
xorl
in
in
insb
jns
ficoms
mov
add
or
sub
lret
addr16
dec
lcall
imul
aaa
and
mov
jbe
ljmp
push
repnz
into
fdivl
cmp
imul
ret
mov
jbe
fdivr
scas
jp
addr16
cmp
btc
fcmove
shll
ljmp
scas
jb
push
loope
cmp
or
jns
mov
dec
lds
sub
adc
jle
fadd
cmp
xorb
out
jmp
add
xor
in
dec
outsl
dec
dec
bound
mov
mov
rorl
int3
dec
add
in
test
dec
hlt
insb
jae
xor
sub
mov
lea
daa
insl
iret
xchg
int3
cld
xlat
xchg
stc
push
ja
or
lahf
cltd
std
popf
pop
adc
and
test
sbb
push
out
lock
repnz
and
popf
shlb
push
fdivrs
add
push
fwait
das
and
add
adc
stc
and
mov
inc
inc
sbb
sbbl
sbb
and
pop
lahf
inc
sbb
cmpsl
imul
push
mov
mov
das
adc
lods
pop
and
inc
popf
cmp
xchg
in
jecxz
sarb
arpl
xchg
jae
sub
sub
mov
xor
inc
sbb
sbb
inc
inc
lret
lret
out
mov
fidivrs
and
pop
mov
je
add
xchg
mov
sbb
push
mov
and
push
xchg
sbb
and
arpl
add
mov
xchg
cmp
fisttpl
js
lcall
adc
hlt
push
sbb
cmp
jne
jae
mov
jae
push
rorb
push
pop
mov
pop
lret
fidivs
data16
mov
push
cs
mov
out
inc
ret
in
aaa
and
insb
and
lahf
add
lret
mov
pop
push
bound
push
js
sub
loop
rorb
lock
sti
pop
testl
and
inc
inc
xchg
adc
push
mov
or
shll
lcall
push
andl
lret
dec
push
adc
roll
or
or
cmp
lods
loopne
cmp
lock
out
push
rep
jl
pushl
inc
and
pushf
imul
and
xor
xor
sbb
shll
sarb
insl
dec
jge
and
add
stos
hlt
add
pushf
push
movsl
mov
pop
adc
subb
and
dec
ss
ret
stc
jge
mov
aaa
xor
pop
or
mov
jns
add
cld
mov
idivb
je
popa
movsb
xor
pop
push
ss
iret
sub
ss
test
xchg
aaa
jl
test
pop
inc
in
lods
test
and
insb
dec
push
out
sub
loope
lea
pusha
pop
loopne
movsb
mov
xlat
xchg
cmp
cwtl
data16
sub
cli
les
dec
pop
jg
add
sbb
ret
jbe
fdivp
pslld
sub
push
scas
jg
popl
movsl
movsl
jge
ficompl
mov
popw
js
leave
lock
lock
bound
rcl
and
jnp
sbb
sbb
mov
dec
cld
xor
or
or
push
sub
sub
faddl
xor
arpl
iret
fildll
popf
inc
outsl
push
and
fs
and
jge
dec
mov
cmc
lock
dec
movsl
xor
adc
and
and
dec
sub
cmp
inc
loopne
call
movsl
dec
fistl
std
sbb
iret
sub
lretw
xor
sub
pop
into
push
stos
fsts
push
xchg
jp
pop
fsts
adc
mov
push
or
lds
mov
xchg
out
rorb
inc
jl
cmp
and
mov
ljmp
pop
push
pusha
dec
insl
call
scas
ss
shr
sub
add
pop
fidivs
scas
adc
and
dec
icebp
jno
dec
loop
push
pop
loop
sub
addr16
or
imul
sbb
sub
mov
ret
add
jns
daa
loope,pn
xor
adc
and
cld
sti
insl
pop
testl
dec
icebp
dec
pop
or
or
xchg
fcmovnb
sbb
and
add
inc
dec
jecxz
xor
sub
sub
fdivrl
sub
cmp
les
jl
fbstp
jno
sub
mov
out
dec
or
insb
mov
lods
std
ret
add
mov
std
movl
push
shrl
jbe
scas
mov
imul
in
push
fcmovb
pop
testb
ficomps
dec
sub
add
insb
sub
mov
jecxz
es
sub
pop
pop
add
dec
xchg
pusha
popf
cmpsl
mov
imul
mov
les
sbb
iret
push
in
lcall
inc
loop
mov
fldenv
add
xchg
mov
jno
rcr
addr16
push
ds
pop
or
mov
adc
cmp
xor
cmp
xor
cmp
aas
and
fistpl
xor
in
xchg
addr16
out
dec
pushl
mov
or
push
ret
jnp
fstpt
mov
out
mov
in
dec
enter
jp
fcmovnb
xor
ds
lahf
jne
xchg
dec
dec
pop
pop
pushf
mov
inc
mov
jmp
lcall
rcrb
add
mov
adc
xchg
ss
cmp
jnp
bound
arpl
pop
push
ret
loope,pt
mov
lods
xchg
add
sub
fildll
lds
call
rorl
pop
xor
inc
pop
mov
ror
fadds
pop
scas
loope
mov
mov
add
mov
sbb
divl
dec
sbb
lahf
inc
adc
mov
jne
aaa
sub
shll
xor
scas
mov
mov
test
xor
push
out
push
mov
in
ret
or
and
into
sti
push
push
out
pop
adc
sbb
mov
popa
adc
loopne
aas
sbb
shl
add
insb
xor
jne
in
test
out
es
push
mov
cmp
sub
mov
mov
daa
mov
adcb
fimull
stos
testb
mov
jae
mov
imul
pop
decb
sub
popa
add
or
xlat
lds
lds
imul
jne
fiadds
mov
ja
xchg
repnz
mov
loopne
inc
stos
popf
sub
mov
jnp
sbb
cmp
push
pop
sbb
dec
outsl
pop
xchg
jecxz
mov
fisttps
aam
inc
jo
je
push
ret
push
out
cmp
nop
loope
stc
imul
shrb
mov
cmp
mov
sub
push
mov
shlb
int
sbb
and
mov
push
add
mov
sbbb
in
jmp
pop
adc
cmc
lock
out
dec
repnz
fdivl
xor
in
fisttpll
daa
cmp
ds
test
sub
jo
adc
sarl
lret
fcoms
xchg
inc
roll
cltd
std
das
xchg
lahf
mov
mov
outsb
push
outsb
sbb
fidivs
inc
push
xchg
dec
adc
hlt
sbb
and
mov
cld
cs
cmp
negl
outsl
lahf
xor
rcrb
mov
mov
jmp
cltd
push
in
ja
jno
fiadds
jp
testl
outsl
mov
gs
shrl
imul
sbb
out
pop
inc
les
mov
ret
stos
pop
shlb
imul
xchg
mov
jle
jb
fwait
sub
dec
adc
or
push
and
lods
inc
std
gs
sbb
pop
push
cs
and
ret
pop
fcmovnu
lock
push
aas
pushf
pop
inc
int
push
adc
aam
cli
xlat
jl
mov
aad
sbb
insl
cmp
jg
push
hlt
ret
mov
xor
inc
xchg
mov
xchg
jne
cmc
stos
dec
adc
mov
add
xchg
or
ret
or
sbb
push
cli
adc
mov
inc
inc
in
mov
ret
mov
rclb
popf
inc
int3
xchg
dec
test
jl
xchg
rcll
mov
loopne
popf
icebp
in
mov
sbbb
inc
xorb
jne
fistpll
push
negl
outsl
mov
xchg
inc
lcall
pushf
lods
pop
mov
ffree
in
pop
ret
jb
in
cmp
or
iret
mov
out
leave
jp
dec
jmp
movsb
call
mov
pop
jp
and
mov
dec
pop
int
adc
xor
icebp
push
xchg
push
lret
leave
jmp
dec
adc
and
pop
mov
imul
jnp
cwtl
ficoms
push
mov
je
in
mov
jno
imul
mov
dec
in
pop
xor
push
xor
pop
int
outsb
xor
xor
ret
test
ljmp
sub
sarb
fiaddl
jns
and
mov
jnp
mov
filds
pop
inc
inc
scas
xchg
inc
mov
mov
shr
cmp
shr
dec
inc
and
fbld
pop
loope
into
dec
dec
pop
popa
imul
xor
inc
sub
outsl
cmp
repz
in
mov
mov
mov
cwtl
scas
in
add
addl
jp
fwait
lcall
or
into
scas
pop
mov
hlt
jmp
shll
adc
inc
lock
outsb
add
dec
sub
std
and
sub
push
shr
inc
inc
sub
gs
inc
int3
std
mov
loop
push
bound
pop
fiadds
test
adc
ja
test
aaa
sbb
push
cmp
jge
xor
lret
ret
jae
arpl
mov
or
dec
in
jp
int3
lahf
adc
sub
sahf
cmc
wrmsr
push
sub
fldenv
scas
out
and
std
mov
out
xlat
es
loopne
push
xchg
mov
push
inc
enter
aaa
sti
dec
outsb
mov
and
dec
out
out
xor
sbb
add
ret
mov
je
push
cmpsb
and
pop
sarl
push
lcall
ljmp
je
inc
push
in
lods
test
loop
popa
pop
ja
or
cmp
aad
jl
push
xchg
dec
insl
popf
rcll
cvtps2pi
lods
lds
pusha
nop
mov
adcl
mov
sub
mov
sbb
fmuls
adc
and
lret
jmp
sbb
imul
sbb
and
mov
push
outsb
mov
or
inc
mov
ss
pop
cmp
mov
mov
aad
cwtl
push
mov
and
clc
push
daa
adc
jne
mov
and
sbb
pop
roll
inc
adc
int
aad
popf
pop
int
dec
mov
or
push
out
cwtl
sbb
inc
jo
jmp
mov
pusha
xor
scas
add
divb
lds
and
xor
or
je
fwait
mull
push
pop
mov
jecxz
xor
insb
pop
mov
scas
push
test
push
pop
popa
cli
mov
mov
jb
add
fs
jecxz
mov
adc
jg
imul
or
lds
call
sbb
or
inc
sub
or
sbb
cmp
cwtl
cld
rorb
shlb
xchg
pushf
mov
mov
hlt
jne
in
outsl
arpl
push
dec
add
stos
lds
les
je
ret
dec
pop
loopne
imul
dec
iret
mov
xor
jp
shll
adc
imul
enter
pop
in
out
mov
fs
and
notl
cmp
imull
dec
xchg
outsl
sub
pop
jae
cltd
cmc
sahf
inc
mov
cmp
insb
cmp
sahf
lea
fstpl
pop
popl
jg
sub
adc
push
pop
test
ss
xchg
jne
daa
in
xor
cmc
ret
pop
cmpsl
test
ret
jge
push
or
int
stos
jo
mov
daa
push
sbb
pop
cmp
mov
sbb
divb
test
or
jmp
sub
lods
pop
lods
cmp
add
xchg
fxch
mov
ret
ljmp
ficoms
mov
leave
mov
sub
pop
jne
addl
inc
adc
or
push
cmpsl
leave
pop
pop
mov
and
sbb
enter
cs
pop
data16
out
stc
je
pop
inc
sub
cwtl
addr16
lods
mov
adc
stc
push
andl
pop
or
int3
cli
pusha
out
cmp
cmpsb
aad
pop
push
out
jl
pop
push
cmp
out
push
int
push
loopne
dec
fildll
aam
mov
stc
jns
loope
cmc
sbb
mov
sahf
push
mov
pop
mov
gs
shr
and
pusha
add
dec
loop
jno
sbb
or
pop
push
popa
lahf
inc
popa
je
sbb
pusha
xor
pop
cs
cmp
add
adc
and
test
dec
push
ss
movsb
pushf
xor
bound
adc
sub
hlt
imul
mov
push
in
hlt
fdivrl
js
dec
mov
pop
nop
and
pop
xor
arpl
inc
cltd
xor
push
loop
mov
pop
add
mov
mov
jge
or
roll
mov
xchg
pushf
adc
mov
shl
push
xchg
xor
and
xchg
inc
icebp
and
push
sub
rcr
dec
or
mov
inc
sbb
cmp
insb
push
in
mov
add
add
mov
push
nop
pushf
or
mov
lcall
das
xchg
jmp
pop
sub
or
insl
pop
and
mov
insl
jecxz
lock
sti
pop
mov
aam
sub
stc
cmp
inc
ss
sbb
pop
adc
out
mov
push
cmpsb
int3
sbb
pop
fs
add
push
fdivl
push
xor
jle
cmp
fnstenv
out
mov
jae
adc
add
xchg
fldenv
sbb
jge
add
or
adc
sbb
jns
pop
mov
and
push
lcall
iret
iret
jmp
ret
ljmp
dec
and
cmp
pop
rcll
fbstp
lods
flds
fstpt
in
add
bound
xor
out
pop
push
mov
sbb
xchg
mul
lahf
iret
test
xor
and
sub
dec
popf
add
inc
or
inc
xor
xchg
gs
or
movsb
lds
lods
mov
adc
or
outsl
push
mov
or
mov
fs
jl
xor
mov
sarl
fcomi
cmpsb
es
jbe
insb
push
sbb
xlat
jae
repz
rcr
xchg
cmp
addr16
sbb
repnz
out
ljmp
cli
mov
loop
sub
fmuls
pop
loope
xchg
jno
nop
sub
cld
sub
rcrl
cld
jns
sahf
movl
gs
loope
test
xor
push
and
mov
mov
inc
sub
mov
stos
mov
repz
mov
imul
dec
and
mov
movsb
mov
loope
or
dec
xor
lods
and
jbe
lea
pop
mov
es
mov
xor
push
jae
lret
out
sbb
scas
pusha
mov
adc
sbb
mov
mov
iret
dec
test
cmp
or
imul
jle
pushf
jmp
loop
pop
pusha
addr16
sub
inc
push
push
sbb
lcall
test
mov
jecxz
push
fisubrs
nop
out
inc
dec
adc
sbb
mov
add
jne
inc
lea
jne
loope
jbe
xchg
mov
cmpsl
xor
cwtl
dec
orb
lods
push
sar
inc
pop
sub
bound
mov
sahf
or
fnstenv
dec
sbb
mov
xor
into
ret
testb
je
push
mov
jnp
fldl2t
into
push
js
sub
xor
sub
iret
mov
mov
roll
fwait
movsb
clc
negb
or
ljmp
xchg
or
dec
dec
pop
loop
pop
hlt
dec
push
xor
mov
cli
popa
push
lock
adc
sbb
shll
in
leave
mov
incl
pushf
inc
imul
xchg
movsl
jns
cmp
xor
in
push
enter
ror
enter
push
ss
into
sbb
jnp
push
scas
mov
jmp
cmpsb
lea
xchg
outsl
jns
stc
cmp
xor
cmp
lea
out
out
adcl
pop
stc
leave
mulb
adc
arpl
pop
arpl
mov
add
sbb
dec
fists
out
das
decb
mov
sub
and
lods
in
jae
fisubrl
movsl
inc
cmp
or
cltd
adc
xchg
outsb
pop
sub
daa
xchg
cmp
and
scas
test
lret
clc
cmpsb
je
into
scas
arpl
fdivl
pop
sub
test
sub
sbb
notb
pop
xchg
inc
jnp
aaa
test
popa
test
xchg
repz
je
xchg
pop
out
insl
arpl
iret
dec
xor
sti
outsl
shrl
add
xor
sub
and
dec
xchg
pop
je
pushf
out
nop
jae
jmp
mov
mov
aad
lcall
pop
ss
xchg
out
dec
push
or
sbb
aad
test
cmp
cltd
jle
mov
mov
push
xor
in
shlb
pop
popa
int
xchg
aad
ret
gs
inc
push
pop
xor
adc
push
pushf
movsb
lods
mov
jb
adc
mov
adc
dec
sbb
in
dec
jno
push
lods
lahf
jns
xor
js
gs
mov
mov
push
adc
add
imul
sub
aas
cmp
mov
dec
fimuls
les
and
inc
andb
dec
movsl
stos
inc
lea
rolb
scas
mov
nop
sbbb
push
push
cmpsl
mov
and
loop
and
pop
imul
cwtl
loopne
add
jp
aam
jl
xor
stc
lods
test
ljmp
icebp
in
leave
xchg
int
imul
mov
adcl
lcall
das
push
pop
jns
testb
int
mov
push
sti
cmp
push
add
imul
push
incl
jle
mov
insb
push
push
cmp
mov
xchg
adc
outsb
sub
cs
xchg
cmp
jb
xchg
cs
adc
jmp
push
fstl
subl
sub
sub
cmp
push
push
mov
cmp
fcoml
movsl
adc
mov
xchg
push
push
popa
inc
cli
filds
mov
xor
xchg
cmp
pop
daa
dec
xchg
das
scas
in
bound
inc
jae
fisubl
mov
xchg
lahf
dec
nop
push
inc
mov
dec
lahf
enter
jg
or
nop
dec
mov
pop
xchg
insb
add
dec
mov
mov
in
inc
pop
int
movsl
cld
and
insl
sub
in
test
mov
inc
aad
and
xchg
mov
and
lret
ret
mov
popf
cld
fwait
jae
mov
mov
test
fldcw
clc
mov
iret
das
jns
inc
xlat
out
outsb
inc
sub
mov
cs
sti
inc
popa
mov
sbb
fnsave
es
and
push
and
cli
push
out
inc
push
push
add
rcrl
ja
xor
ljmp
adc
enter
insb
icebp
insb
cmp
rcr
in
loop
push
pop
or
jbe
and
xchg
pop
rcl
cmp
jae
sub
hlt
cmp
popa
repnz
call
mov
bound
dec
repnz
aas
dec
insb
pushf
imul
push
dec
pop
jg
loope
inc
inc
xchg
mov
xchg
lods
mov
repnz
mov
jmp
adc
test
mov
nop
inc
rolb
jle
fs
bound
test
dec
cltd
cs
push
and
int
dec
jne,pt
stos
out
pop
sahf
cmpsl
mov
sarl
sbb
or
adc
test
jmp
push
inc
mov
sbbb
jg
enter
mov
jmp
and
mov
popa
pop
xlat
das
xchg
adc
insl
fimuls
jmp
lcall
jns
rcrl
int3
cld
jmp
mov
and
fidivl
out
xchg
add
loop
push
ds
and
ds
pop
xchg
xor
xorl
pop
add
js
dec
stos
enter
dec
adc
push
jbe
adc
pop
ja
sbb
mov
repnz
cmp
stos
stos
add
std
nop
negl
lahf
jne
loop
and
mov
push
mov
mov
push
pop
sar
cmp
cmp
aad
inc
inc
loopne
mov
inc
mov
hlt
xchg
jae
dec
and
push
es
cmp
imul
push
cmp
pop
or
call
shlb
data16
or
xchg
out
idiv
xchg
cmpsb
add
repz
add
das
fdiv
push
lods
rclb
mov
cli
mov
mov
or
mov
and
pop
sub
js
mov
pop
dec
jp
xchg
andb
in
push
cmp
dec
ja
leave
sub
ret
push
les
and
mov
int
adc
jbe
mov
push
pop
das
add
push
xor
cmp
cli
adc
pusha
xchg
xor
push
xchg
mov
mov
adc
mov
xchg
push
cmp
jnp
aad
cmp
shl
xchg
dec
xor
les
std
pop
push
stos
in
jmp
push
nop
push
xor
and
pop
cmc
xor
rcr
outsl
inc
gs
ljmp
push
fnstenv
push
and
sub
stos
fdivrs
sbb
bound
pop
mov
jle
jp
mov
adc
movsl
jp
rorl
lret
je
out
sub
dec
xchg
xchg
shr
movq
es
movsb
sub
cmp
xor
xchg
mov
pop
arpl
enter
popf
cltd
aam
movzwl
into
and
arpl
loop
jge
pop
pop
adc
mov
xchg
xchg
xor
jb
pop
jns
xorb
sbb
push
arpl
cmp
sub
pop
cmpsb
xor
sbb
sahf
mov
xchg
dec
cmp
mov
arpl
sub
xchg
jbe
jl
xchg
imul
ss
xor
dec
addr16
mov
inc
inc
roll
push
sbb
data16
xchg
cmpsb
enter
arpl
jns
ret
dec
jb
cwtl
jo
jl
test
call
mov
es
sub
and
fcmovu
mov
movsb
fnstsw
addr16
jg
sub
rclb
ljmp
insl
mov
es
les
and
dec
les
and
aaa
icebp
dec
xchg
cltd
push
mov
jb
movsb
les
lds
and
fscale
or
adc
hlt
adc
sahf
loop
inc
gs
roll
mov
cmp
push
add
jmp
jns
iret
jnp
aaa
out
das
imul
rcrl
mov
and
cmpsl
inc
jmp
ljmp
lret
mov
movsl
cwtl
xchg
es
outsl
in
es
pop
scas
pushf
cmc
sub
xor
and
arpl
sub
jmp
pop
jbe
cmp
inc
test
dec
adc
xchg
jae
jno
pusha
pop
ret
in
mov
loope
cmc
lds
scas
into
rcll
enter
push
jb
scas
ljmp
sub
cmp
aas
xlat
mov
jg
inc
pop
nop
pop
dec
mov
iret
sbb
mov
shl
mov
repnz
ss
push
cmp
stos
jmp
xchg
jmp
sbb
pop
movsl
in
sub
adc
clc
adc
and
adc
push
mov
shl
xor
and
mov
arpl
test
adc
push
cmp
adc
mov
xor
sbb
in
stc
je
out
scas
and
loopne
dec
or
ss
test
inc
nop
jne
push
sbb
mov
mov
shl
cmpsb
mov
fadds
bound
jns
cwtl
inc
xchg
inc
xchg
lret
or
inc
mov
ss
iret
xchg
and
jle
das
or
fs
mov
imul
fwait
jmp
mov
arpl
clc
sub
hlt
mov
out
jo
inc
sti
and
scas
or
imul
jno
inc
bound
es
xchg
mov
mov
sbb
jne
lret
pop
stos
das
sbb
sbb
jno
loopne
jae
push
xor
pop
xor
dec
xchg
mov
push
in
and
pusha
dec
pushf
push
xor
ds
mov
lahf
out
dec
adc
arpl
inc
test
xchg
mov
fbld
lods
or
and
xchg
and
inc
push
sub
xchg
xor
mull
jno
lret
andb
adc
test
out
dec
xorl
mov
jbe
mov
movsb
cmc
push
imul
mov
gs
push
or
out
push
orl
mov
orb
sub
xchg
leave
inc
out
mov
arpl
scas
mov
je
inc
jo
mov
cmpsb
imul
incb
testl
sbb
lahf
test
or
and
xor
aaa
gs
lea
cmp
jl
hlt
sbb
add
std
lock
pop
lock
in
cmp
aas
mov
mov
test
std
movl
pusha
or
jne
mov
int
jle
add
cmc
pop
aam
xchg
fldenv
popf
mov
sbbl
and
pop
fimuls
mov
jge
aaa
sub
imul
stc
cwtl
xorl
add
lock
dec
mov
lods
jg
xlat
inc
sbb
subb
mov
push
mov
stc
movl
test
mov
and
neg
sbb
cmp
fwait
xchg
cmpsl
cmp
fxch
clc
or
jge
xor
jbe
jle
xor
inc
inc
add
cmp
mov
xchg
xor
xchg
xchg
jle
mov
pusha
xor
jns
mov
arpl
and
les
ret
cmp
cmpsb
fimull
and
pop
push
leave
sti
mov
add
inc
xchg
push
dec
insl
add
push
mov
push
mov
imul
mov
jmp
test
psubusb
and
adc
imul
mov
ds
test
ud0
jno
rol
lret
push
ret
or
push
xchg
xacquire
je
push
jb
sti
inc
test
scas
ficompl
sbb
subb
cmpsl
adc
lret
mov
nop
imul
xchg
shrl
rolb
sbb
add
xor
mov
scas
vmptrst
lods
insb
mov
push
cmp
xchg
std
push
mov
sbb
js
loope
lock
clc
add
push
mov
cmp
add
scas
sub
mov
add
cmp
xor
cmpsb
mov
cmovne
sarl
xor
scas
xor
mov
adc
out
mov
mov
sahf
or
cmc
lahf
cmp
mov
lds
insl
icebp
pop
jne
negb
pop
or
in
jecxz
pop
mov
test
stos
sbb
test
add
loope
out
loope
jbe
mov
xor
sbb
cmp
arpl
and
aaa
sub
js
out
mov
out
mov
call
mov
test
fistpll
out
dec
cmp
ja
movsb
faddl
mov
and
jle
and
sbb
sbb
out
mov
call
and
sbb
pushf
cmpsb
or
movsb
rorl
dec
dec
out
popa
repz
int
pop
insb
push
pop
loop
cltd
mov
loope
pop
daa
jo
insl
clc
fcoms
jno
ljmp
pop
push
inc
lods
aaa
decb
adc
adc
mov
sbb
and
cld
fwait
test
cmp
dec
inc
mov
leave
adc
mov
mov
sbb
push
push
mov
xchg
sub
and
ss
push
cs
mov
out
inc
stc
pop
out
sarl
jecxz
outsl
sbb
sti
out
ds
das
xchg
popa
sub
cmp
xchg
repz
adc
jecxz
cmpsb
popl
outsl
xor
mov
sub
fldt
addl
pop
in
aad
jns
subb
outsl
bndstx
imul
ja
mov
ss
xor
mov
subb
pop
fldl
inc
lea
xchg
mov
pop
aaa
and
mov
scas
maskmovq
and
gs
into
lea
mov
pop
sarl
es
ret
jp
sub
aaa
and
jle
sub
mov
push
stos
movb
xchg
push
imul
sbb
cmp
jg
mov
ja
sbb
std
mov
test
aaa
cmpsb
fnstenv
mov
jecxz
insb
iret
test
dec
out
xor
pop
adc
pop
sub
xor
addl
add
bound
icebp
or
sub
jns
fdivrl
icebp
cld
nop
clc
mov
mov
dec
pop
mov
sahf
aad
fldt
sbb
inc
in
xchg
and
in
mov
mov
xor
popa
pop
xchg
mov
jo
pop
inc
mov
xchg
and
mov
jne
cwtl
cmp
push
mov
movsl
int3
dec
and
jae
mov
or
lock
or
mov
pushf
leave
adc
ret
mov
jmp
test
fcompl
ljmp
add
sub
lods
sbb
out
xor
cwtl
and
leave
daa
cmp
mov
int
icebp
das
js
mov
sub
add
fisubs
fdivl
pop
inc
mov
pop
xor
loopne
adc
sbb
mov
pusha
nop
fidivs
scas
mov
aaa
adc
jae
shrb
movsl
mov
mov
int3
data16
dec
xor
out
pop
arpl
clc
adc
xor
inc
loopne
mov
and
sub
outsl
pop
and
incl
out
negl
inc
push
out
pushf
jae
popa
xchg
testb
dec
addr16
gs
add
push
xor
mov
lods
in
shll
and
and
lods
gs
push
ja
mov
gs
aad
ret
or
jb
pop
test
jecxz
gs
or
mov
jne
cmp
xchg
cmc
push
leave
lock
imul
out
sbbl
out
sub
lret
out
xor
fwait
enter
adc
pop
leave
mov
xor
lds
popa
std
xor
xor
popf
rolb
mov
ds
inc
and
test
mov
push
pusha
ret
fmul
mov
cmp
xor
inc
insl
aam
in
jge
fstps
lahf
mov
push
sahf
mov
mov
in
sub
cmpsl
dec
jp
jecxz
adc
dec
out
push
push
pop
cmp
xor
lret
cld
test
push
adc
dec
adc
sbb
loop
sbb
pop
add
mov
dec
testl
mov
arpl
or
push
data16
shll
push
divb
pop
sti
lods
ljmp
inc
notl
sbb
cmp
mov
mov
les
fcompl
fwait
andb
cwtl
stc
dec
call
fsts
push
push
call
int3
sub
out
out
dec
popa
or
xchg
mov
push
jl
insb
cmpsl
dec
jp
ficompl
dec
cmpsl
mov
aam
mov
dec
sbb
mov
lods
xor
xchg
and
fisttpll
mov
outsl
nop
stc
das
or
ss
pop
hlt
subb
nop
or
test
xchg
push
rcll
push
loopne
addl
add
cmp
push
sarl
ret
xchg
pop
dec
mov
iret
sbbl
inc
stos
test
out
cmpb
pop
adc
loop
rol
cld
mov
adc
jae
imul
push
lahf
pusha
push
jno
imul
xchg
mov
cli
xor
xchg
fnstenv
add
xor
cltd
and
mov
xor
scas
roll
mov
inc
repnz
mov
cld
fldcw
cmc
inc
adc
push
cmpsl
and
mov
test
sub
cld
adc
lret
sbb
adc
mov
add
pop
pop
je
lret
inc
jne
jmp
push
inc
cmc
insb
bound
xchg
xor
std
lahf
fisubs
das
lds
daa
xor
je
and
ljmp
cmp
inc
mov
push
add
insl
mulb
fs
pop
sarl
ljmp
hlt
dec
cmpsl
leave
xlat
jg
lea
or
inc
insb
fistpll
sar
xor
fidivs
dec
mov
in
mov
push
pop
jno
sbb
enter
rcrb
jg
cmc
fcomps
cwtl
rcrl
into
outsb
sets
lea
push
cltd
adc
jp
loopne
jp
add
mov
mov
hlt
scas
xchg
mov
test
jge
sub
les
mov
mov
sbb
push
jge
imul
int
jecxz
or
push
inc
andl
dec
jae
or
arpl
mov
jecxz
pop
decl
push
xchg
push
mov
imulb
push
push
pushf
arpl
ja
out
in
and
dec
scas
mov
jno
out
adc
shlb
sub
jns
les
repz
test
pusha
loope
cmpsl
add
xor
cmp
push
cmpsl
test
lock
lock
xchg
or
movb
mov
adc
fmuls
add
shrb
sti
mov
push
push
out
pushf
das
ljmp
pushf
pop
filds
loopne
lahf
xchg
mov
cmp
pushf
orb
xchg
add
cmpsb
inc
mov
into
and
out
rcr
jmp
out
into
fistl
cli
test
ljmp
arpl
aam
loop
mov
stc
cmp
inc
xor
orl
incb
cs
or
lahf
pop
push
mov
mov
shr
inc
fwait
pop
mov
cmp
inc
adc
ror
dec
insl
cltd
push
jmp
enter
loope
dec
ljmp
cwtl
sbb
xchg
sub
xor
ret
ret
in
jb
and
mov
jns
sbb
adc
sti
dec
sub
lods
push
jmp
or
lcall
inc
or
clc
addr16
aaa
push
lds
adc
outsb
and
sbb
push
jne
push
popf
cmp
leave
pop
and
jae
dec
mov
and
sti
daa
mov
cli
inc
mov
jo
repnz
andl
jg
outsl
inc
ret
sti
or
cli
sbb
jg
lret
cmpsb
xor
mov
push
mov
sbb
jno
xchg
push
shr
mov
in
fcmovbe
pop
inc
adc
xchg
jne
clc
mov
push
dec
sub
iret
pop
out
int
fistpll
push
mov
popf
fwait
out
adc
cmp
cmpsb
jne
cmp
xchg
push
pop
mov
push
push
xor
scas
int3
aam
cs
test
adc
adc
sub
lret
cs
mov
into
inc
mov
je
cmp
and
push
lds
xor
mov
sub
jp
push
iret
movsb
mov
sub
enter
int3
mov
icebp
mov
push
daa
xlat
subb
fmull
push
inc
fsub
pop
fbld
aaa
xchg
pusha
test
mov
in
js
fdivr
out
or
or
mov
dec
mov
aas
divl
inc
js
and
adc
rclb
and
xor
add
xchg
dec
lret
mov
loope
out
cmp
mov
movsb
mov
xchg
outsb
out
xlat
dec
movntps
or
add
push
inc
pop
fildll
mov
test
push
mov
pop
out
je
inc
jnp
or
shr
sbb
outsl
sbb
stc
and
mov
imul
cli
mov
mov
shl
int
jg
jp
xor
into
inc
inc
push
clc
daa
pop
into
out
push
pop
push
adc
stos
dec
enter
push
sub
es
ja
xlat
push
jae
enter
jge
mov
fisubs
repnz
daa
add
arpl
or
lea
js
mov
xchg
scas
pop
pop
lret
adc
js
lcall
sub
push
cwtl
stos
sahf
xchg
xchg
out
adcl
jecxz
sbb
lret
je
or
mov
ret
mov
test
test
mov
mov
xchg
arpl
lret
in
shll
push
sbb
mov
xor
xchg
ljmp
aaa
and
std
iret
mov
shll
in
jl
das
fldt
sub
daa
mov
jbe
and
sahf
xchg
ret
lcall
mov
mov
test
loopne
sub
jo
jbe
inc
inc
fstps
mov
lcall
mov
pop
sbb
cmp
xchg
inc
xchg
pop
add
in
shll
icebp
sbb
adc
pop
iret
add
and
mov
jo
ficoml
lock
pop
loopne
or
or
xchg
mov
out
je
and
mov
and
cmp
rcl
scas
pop
mov
mov
fisubs
insb
popf
pop
pop
fmull
pop
popf
mov
adcl
std
dec
xchg
or
mov
jg
pop
mov
notl
rcrl
sarl
lods
leave
xor
mov
fsubl
repz
testb
leave
and
push
outsl
outsb
sti
push
xor
hlt
mov
repz
jmp
ja
sbb
add
dec
pop
outsb
mov
jmp
or
add
sbb
sbb
std
mov
sub
popa
adc
inc
aam
mov
seta
jl
jae
xor
cmp
loope
bnd
dec
outsl
mov
mov
dec
dec
dec
popa
and
add
call
popf
lret
lret
fstp
imul
cltd
daa
mov
push
jb
repnz
test
mov
stc
or
clc
or
shlb
mov
js
repz
and
test
imul
mov
jl
aas
bound
clc
push
or
in
into
push
jbe
cmpsl
inc
icebp
jno
imul
cltd
sbb
jnp
ficoml
jg
rcl
in
add
lret
dec
inc
push
cli
insb
scas
out
nop
xchg
shlb
xor
push
mov
jno
test
jo
xchg
add
filds
out
pop
hlt
stos
loop
ds
inc
ss
pop
cmpb
ja
out
jo
cmp
push
mov
and
pushl
clc
or
xchg
sub
pop
jp
lret
js
inc
mov
aas
test
jo
iret
sahf
dec
jecxz
insl
mov
cltd
ja
js
dec
nop
jns
push
mov
mov
test
and
sbb
mov
sahf
adc
xchg
shl
add
cs
ljmp
andb
pop
daa
dec
push
sub
rcrl
xchg
xor
sbb
mov
xor
std
inc
mov
mov
xlat
xor
and
and
les
sbb
out
testb
in
arpl
hlt
aas
stos
mov
pop
mov
push
xor
mov
fldl
inc
sti
jge
fnsave
jbe
pushl
out
loop
pop
and
pop
xor
out
push
jo
sbb
mov
xor
mov
sub
bound
jo
cmp
push
outsl
xor
xor
jp
push
repz
jge
mov
xchg
adc
repz
fildll
gs
cmpsl
xorb
and
push
mov
mov
xlat
pop
stos
mov
xchg
sbb
mov
mov
repz
stos
and
pusha
loope
dec
js
sub
lret
jbe
loop
cmc
popf
scas
andl
addl
cmp
sbb
icebp
xor
jne
inc
sbb
ds
xor
fistpll
ljmp
xchg
and
inc
adc
jnp
sbb
icebp
inc
jg
pop
jne
fisttpl
aas
repnz
int
mov
pop
dec
scas
mov
sub
sbb
shl
xor
add
stc
shrl
leave
imul
push
cmc
ret
adc
sub
mov
adc
xchg
iret
jp
mov
or
mov
adc
jb
mov
mov
mov
and
pop
insl
push
in
fsub
adc
jp
cwtl
cmpsb
lret
push
hlt
and
push
mov
fwait
mov
pop
inc
lods
jl
adc
or
leave
lahf
fistps
mov
div
insb
lock
clc
adc
mov
jle
outsl
and
into
fs
push
nop
jge
push
outsl
push
cmp
and
pop
roll
xchg
cwtl
popf
stos
xor
sub
pop
outsb
xchg
cmp
dec
out
aas
mov
out
mov
mov
adc
xor
add
xchg
xchg
popf
mov
inc
arpl
bound
dec
imul
cmp
stc
into
jmp
xchg
mov
test
pavgw
daa
in
cld
fstpt
jo
and
loope
mov
insb
sbb
pop
inc
mov
lret
orb
into
addr16
and
sub
not
punpckhdq
jne
fmull
lret
jmp
xchg
push
ss
andb
mov
mov
cmp
mov
arpl
or
addr16
adc
inc
loop
mov
ss
fmuls
stos
shll
cmp
mov
inc
lock
add
nop
fcom
ljmp
push
addr16
daa
test
or
xor
and
add
icebp
dec
insl
push
xor
jnp
mov
outsl
pop
jno
pop
repnz
jg
out
pop
clc
ret
mov
imulb
mov
sahf
dec
dec
xor
sub
and
push
jge
adc
jno
mov
sbb
jo,pt
sub
or
imul
dec
out
pop
pop
in
push
js
daa
or
xor
push
mov
gs
mov
ja
pop
divb
out
or
sar
jmp
dec
xchg
jl
jo
shrl
add
icebp
movsl
lcall
insb
and
inc
mov
lds
adc
pop
fdivrl
rcrl
xor
jl
dec
mov
push
inc
in
dec
and
nop
icebp
jno
mov
mov
jne
and
adc
jbe
lahf
repz
rclb
or
cmpsb
mov
dec
fmulp
in
call
clc
push
xchg
das
push
lret
arpl
xor
xor
mov
dec
jmp
loope
cmp
cmp
popa
push
and
cmpsl
arpl
test
dec
add
jp
shrb
mov
and
mov
jb
push
fistl
mov
jl
sub
xlat
mov
fneni(8087
popf
les
inc
jae
call
nop
imul
pop
inc
dec
rcrl
cmp
les
cmpsb
dec
popa
mov
aam
sbb
xlat
sub
popf
fcoms
cli
add
stc
mov
cld
cmp
pop
inc
cmp
and
out
mov
xchg
pop
addr16
push
ds
rorl
nop
sub
jo
mov
ss
mov
pop
leave
mov
mov
test
gs
sbb
jecxz
dec
loope
jo
or
addb
push
leave
in
inc
jle
orb
inc
push
sbb
in
es
addb
xchg
inc
jecxz
add
rorb
jp
cld
mov
mov
push
add
mov
inc
xchg
loop
ret
cmp
pushf
mov
pop
mov
sbb
mov
shll
sbb
adc
sub
jmp
mov
repz
jmp
sbb
xchg
scas
jnp
jp
pop
dec
and
mov
rcrl
mov
fidivl
cmp
xchg
stos
xchg
dec
ss
push
adc
lds
lret
ljmp
adc
pop
mov
jnp
in
fisttpl
es
fisttps
adc
lret
ljmp
cltd
jmp
lret
sbb
sub
jmp
out
push
ret
jg
inc
nop
sar
cmp
stos
adc
mov
aad
adc
mov
lods
fisubrl
push
jb
call
mov
popa
in
cmp
scas
in
pop
mov
test
mov
adc
push
out
or
adc
idivb
aam
int
int3
inc
test
arpl
cmc
pop
mov
hlt
outsb
mov
and
or
xor
jp
push
add
xor
xchg
arpl
stos
pavgw
push
clc
hlt
iret
and
push
inc
sub
lods
lods
sbbb
mov
and
jb
and
shll
mov
clc
movsl
fidivl
adc
mov
das
mov
pop
pop
jle
push
add
sub
test
outsb
xchg
xchg
lds
xchg
add
jnp
imul
jle
cmp
jge
mov
sub
popf
dec
cld
jno
xchg
stos
cmp
test
sbb
adc
push
xchg
push
arpl
fwait
pop
enter
loopne
rclb
xchg
adc
and
clc
je
cs
inc
adcl
stc
cmp
les
cmp
jecxz
enter
mov
in
inc
xchg
pop
adc
jmp
sbb
add
loope
out
idivl
add
ja
jp
mov
mov
repz
sarb
add
std
lock
aam
cli
out
cmc
mov
lret
ljmp
nop
xchg
shlb
mov
jl
fstl
outsl
flds
sub
sbb
mov
repz
stos
pop
fsubrp
cltd
addr16
adc
fsubrl
jae
fwait
mov
stc
movsl
sub
and
pushf
out
add
sar
rcrl
cmpsb
push
stos
xor
push
cmp
fs
bound
test
fldt
sbb
or
xchg
xchg
test
inc
lahf
and
in
push
cmpsl
js
xor
pop
in
shl
dec
cmpsl
jle
and
mov
add
frstor
insb
shrl
push
push
xchg
cmp
adc
loope
sbb
enter
mov
lahf
out
dec
shl
shlb
inc
inc
sub
jmp
and
ljmp
insb
xor
leave
inc
cmp
dec
mov
imul
arpl
mov
pop
sbb
jns
int
pop
fbld
mov
push
xlat
and
test
in
fdivs
mov
lea
scas
pop
scas
jae
out
pop
ljmp
mov
sbb
adc
loope
pop
cmp
pop
pop
imul
call
stc
inc
jns
cli
ljmp
cmc
dec
loop
ljmp
outsb
lods
jne
xchg
addl
or
mov
lcall
fwait
ljmp
aam
and
xor
mov
dec
mov
iret
adc
xor
and
mov
pop
loop
xchg
addps
mov
inc
out
enter
int3
shrb
ss
and
iret
popa
xor
push
ss
sarb
int3
inc
adc
jl
mov
dec
movsl
sbb
or
xor
and
and
mov
mov
test
cmpl
dec
test
and
push
push
call
push
xchg
sub
jb
into
fs
cmp
fisubrs
sbb
sti
out
inc
sub
repz
adc
sub
mov
fmul
dec
xor
imul
stos
push
test
push
cmc
lahf
mov
pusha
adc
test
nop
dec
stc
or
scas
rcrb
pop
sbb
lods
add
insb
enter
push
nop
cmp
add
cwtl
mov
adc
cmpsb
in
inc
leave
es
out
and
pop
mov
push
stos
pop
pop
lock
mov
xchg
lock
andps
lret
ret
lock
mov
je
jnp
lret
mov
xchg
jmp
and
hlt
imul
mov
sub
shr
and
cmp
dec
fsts
xchg
or
pop
xchg
jne,pt
notb
cmp
outsb
push
xchg
xchg
pusha
repz
cs
sbb
addr16
jl
gs
jge
test
aad
dec
imul
or
je
out
sti
mov
sub
dec
sub
or
and
jl
xchg
cwtl
pop
inc
add
mov
cmpsl
inc
xchg
xor
jge
or
xor
mov
testb
into
cmc
fcoms
test
mov
push
lods
xchg
rcrb
mov
cmc
jns
scas
je
mov
xchg
lret
jne
sti
daa
je
lock
fcomps
xchg
add
loopne
aad
push
in
pop
into
xchg
lahf
or
fdivr
add
loop
xor
and
dec
push
daa
lock
or
ja
mov
cmp
iret
scas
push
xor
movsb
mov
loop
mov
test
sub
lds
xor
orl
cmpsb
xchg
xor
out
jp
sarl
mov
xchg
add
or
push
jmp
dec
sbb
aas
fstps
xor
xchg
faddp
dec
push
sub
adc
push
jle
aas
mov
pop
jge
or
jbe
jg
sbb
xor
pop
lret
cs
inc
mov
dec
pop
fimull
and
sti
cld
outsb
sub
insb
or
sub
dec
and
mov
xchg
lods
dec
mov
xchg
sub
lods
sti
insb
int
popa
and
fmuls
loope
call
insb
dec
sub
pop
test
popf
mov
jne
pop
sub
push
dec
adc
into
pop
push
fimuls
xor
add
or
push
jns
gs
es
adc
adc
scas
sbb
xor
stos
cmpsl
stos
mov
bound
insl
jo
dec
sub
or
xchg
addr16
push
rorb
mov
jo
clc
lret
stc
jge
nop
pop
pop
leave
push
mov
insl
xor
sub
push
negb
subl
mov
and
xchg
adc
cmp
adc
ss
iret
xor
dec
repz
jb,pt
iret
aad
popa
imull
ss
jecxz
dec
pop
mov
adc
gs
test
adc
movsl
pushf
mov
les
jns
or
bound
imul
aaa
roll
xor
shlb
rcll
cmp
xor
or
mov
jno
mulb
jle
mov
push
outsl
repnz
movb
dec
mov
cmc
mov
test
jl
inc
and
lret
inc
cltd
fisubrs
subl
sbb
test
cs
leave
sbb
lods
cli
mov
shll
xchg
and
rcrl
adc
test
or
pushl
pop
push
adc
or
das
pop
add
mov
pop
icebp
and
xchg
sub
jns
lret
mov
inc
orl
shl
out
outsl
stc
leave
stc
adc
int
jbe
jmp
jb
push
and
sub
imul
or
dec
pop
mov
jmp
and
mov
fisubrl
scas
mov
pop
jns
xor
mov
pop
jmp
mov
pop
push
pop
repnz
sub
sbb
sbb
imul
sub
dec
mov
xor
mov
sub
test
rol
inc
push
dec
call
movb
adc
arpl
sahf
pop
lcall
adc
jge
dec
xchg
aas
jb
in
aam
xchg
cmpsb
inc
push
adc
shrl
sub
jnp
mov
dec
or
jns
push
fmull
in
push
test
mov
mov
rcr
push
sbb
and
daa
jl
sub
sbb
out
push
pop
push
adcb
xchg
pusha
mov
cwtl
xchg
mov
dec
xchg
mov
xchg
mov
sub
lret
inc
xor
sti
jg
hlt
pop
lcall
out
sbb
paddsb
out
push
add
imul
or
xchg
or
sub
stos
imul
xchg
inc
pop
mov
das
in
popl
rol
shll
push
popa
and
addb
pop
leave
jle
lret
xor
inc
mov
fidivrl
sbb
repz
cmp
cmp
push
xlat
jmp
add
push
fwait
and
xchg
decb
test
jecxz
sbbl
sbb
xchg
loopne
test
and
stc
sarb
jbe
pop
xor
xor
lds
clts
out
cmp
popa
jae
loop
popf
aad
sub
test
mov
stos
push
xchg
js
ds
push
lret
aam
idivb
sub
xor
cmp
repnz
mov
outsl
or
cmp
push
mov
call
sub
pop
mov
pop
mov
pop
rclb
mov
or
jmp
enter
xchg
push
cmp
xor
aas
adc
lods
nop
popf
jnp
inc
mov
pusha
mull
pop
jg
xor
xlat
fldenv
cltd
repz
fisttpl
xlat
adc
popa
stos
fsubs
fcmove
cltd
mov
ffreep
fmull
call
jp
cltd
popf
adc
loopne
push
inc
pusha
xchg
ficompl
rcrb
push
adc
pop
inc
cwtl
jns
xor
rcr
adc
movsb
jecxz
imul
mov
cmp
frstor
xchg
adc
inc
mov
push
inc
fnstenv
data16
out
bsf
add
dec
insl
repnz
jl
mov
mov
into
sbb
xor
or
push
out
ficoms
pop
lahf
pop
pop
add
adc
xchg
mov
mov
sub
test
addb
fldcw
std
out
test
aaa
fwait
jb
pop
push
mov
pop
repnz
pop
imul
mov
clc
push
jmp
ljmp
mov
imulb
mov
dec
jp
pop
xchg
out
scas
xor
mov
scas
ljmp
scas
cmp
pop
in
inc
aas
xchg
clc
aam
pop
adc
mov
xor
out
nop
sub
cmp
sbb
hlt
mov
fstps
jmp
mov
inc
ds
xchg
movsb
xor
mov
lods
cmp
dec
inc
and
dec
test
incb
mov
add
cmc
scas
repz
push
xor
daa
popa
mov
and
js
les
adc
das
icebp
xchg
mov
jno
or
into
jle
pushf
fcoms
scas
gs
test
push
inc
sub
movsl
xor
lahf
xchg
inc
lcall
daa
jns
mov
add
or
aas
add
lret
cmc
sbb
sbb
movsb
xor
mov
mov
mov
loope
dec
mov
call
lret
push
mov
fs
out
fsincos
imul
int
pop
mov
arpl
inc
inc
arpl
sub
cmpb
cmpl
in
or
pop
inc
mov
inc
jecxz
jbe
ficoms
sbb
xor
pushf
mov
das
out
out
dec
inc
imul
sub
xchg
enter
and
push
mov
push
mov
pop
mov
mov
fisttps
cmp
bound
jns
mov
stc
xchg
push
adcb
cmp
movsb
fdivrl
and
jo
es
push
and
and
and
mov
or
dec
pop
loopne
sbb
pop
sbb
jg
fdiv
mov
daa
sbb
pop
call
js
mov
call
ljmp
pop
xchg
xor
orb
loopne
jbe
in
xchg
inc
out
push
sub
or
or
push
add
or
rclb
sub
cli
cmp
mov
pop
loopne
xchg
xor
cmc
popa
dec
add
ret
aam
jne
loope
mov
or
and
add
xchg
pop
dec
in
sbb
jecxz
dec
ja
cmp
inc
aad
sbb
lock
pop
xchg
push
sub
enter
sbb
sti
fsubs
xchg
cmpsl
iret
pushf
jg
or
mov
adc
pop
cmp
xchg
cltd
pop
loopne
ret
xchg
mov
adc
lahf
and
push
xchg
popf
sub
rolb
nop
xor
icebp
push
sbb
mov
pop
aas
mov
js,pn
outsl
orl
lcall
inc
add
mov
mov
xchg
mov
and
mov
cs
pop
aaa
mov
xchg
pop
mov
mov
adc
dec
call
adc
filds
inc
fbstp
mov
mov
ret
cmpsb
repnz
bound
mov
mov
mov
add
aam
pop
mov
inc
jmp
cmp
and
scas
xor
or
gs
xor
jbe
inc
pushf
fimuls
fistpl
notb
mov
or
lcall
scas
aam
xor
test
sbb
xchg
cs
jecxz
mov
jp
inc
pop
push
unpcklps
shll
sub
push
inc
adc
call
sti
aas
mov
jb
or
cmp
cwtl
arpl
divl
into
rcrl
out
mov
mov
mov
movsl
pop
jae
movsl
cwtl
fstps
lret
ja
cmp
sub
popf
sub
sbb
int
les
inc
push
hlt
pop
mov
sub
scas
and
sub
xchg
add
adc
sub
pop
and
cmc
jmp
xor
mov
pusha
mov
lods
lods
xor
jge
lahf
jns
test
mov
xchg
stos
divb
lock
loopne
les
andb
cmp
rcll
cli
mov
xor
xchg
or
mov
into
sbb
pop
mov
jbe
ds
sahf
xchg
loopne
mov
sub
xchg
out
gs
incl
pop
sub
jl
sbb
push
and
stos
cmp
out
sti
push
shrb
and
mov
cs
xchg
not
cmp
aad
sub
cli
and
ljmp
jge
sbb
sub
movsl
cmp
and
adc
sbb
jbe
xor
mov
mov
adc
or
adcl
inc
incl
lea
stos
mov
jb
pop
mov
dec
pop
sub
adcb
fcomps
ds
add
cld
jle
lea
inc
rcrl
insl
pop
mov
mov
in
mov
dec
cmp
push
rorl
ret
lds
jns
add
xor
insb
cli
addr16
data16
mov
mov
out
push
dec
dec
lcall
mov
loope
mov
or
inc
xchg
movsb
andl
mov
jl
fsubr
xchg
push
inc
pop
pop
loopne
scas
sbb
jo
dec
mov
icebp
mov
jmp
sub
xor
int3
sbb
fnsave
push
xor
push
fimuls
cs
cmpb
cmp
in
imul
cmc
je
arpl
sub
sbb
sahf
int3
stos
bound
sbb
lock
mov
aaa
pop
sub
iret
mov
mov
jmp
ljmp
xor
test
leave
mov
jmp
int3
sarb
and
shrb
jno
leave
cmpsb
lahf
psubq
shlb
lahf
shll
leave
test
loop
jp
mov
mov
add
sbb
inc
inc
pusha
inc
cwtl
or
push
dec
iret
jae
fwait
xor
xor
into
cli
push
sub
gs
es
push
vpaddq
jb
inc
movb
popa
sub
movsb
mov
jno
fiadds
call
inc
push
pop
sbb
sbb
fcmovnu
imul
add
inc
or
xor
sbb
push
dec
and
clc
xor
mov
popa
sbb
mov
mov
hlt
jno
ja
orl
sbb
add
push
es
stc
add
outsb
test
dec
cmpsb
loop
push
dec
std
push
jge
pop
lret
enter
adc
xchg
xor
mov
mov
add
out
jnp
loopne
mov
jg
enter
push
jo
jo
push
cmp
pop
push
lea
pop
and
notl
fs
adc
outsl
dec
cmp
or
stos
mov
mov
rcrb
je
dec
sbb
push
nop
in
xchg
les
xor
xchg
adc
fdivrs
hlt
shll
xor
pop
fstl
jns
xchg
xchg
cmpsb
xchg
stos
stos
xchg
mov
fstps
addr16
out
test
lcall
in
daa
cmpsb
lods
jmp
adc
xchg
lods
push
and
mov
bound
sbb
or
xchg
fdivs
ret
insl
stc
nop
inc
pusha
inc
pop
cld
lcall
in
mov
fcomps
mov
loop
lret
fstenv
mov
int3
outsb
fsubrs
mov
inc
and
in
rcr
leave
push
ja
arpl
or
ljmp
xor
dec
bound
mul
in
iret
pop
dec
sbb
xor
and
loopne
stc
outsb
lea
outsl
ja
leave
call
push
shlb
loope
mov
insl
or
lea
mov
sub
mov
xchg
les
daa
lret
repnz
or
les
dec
hlt
jnp
les
xchg
fsub
aam
cmp
adc
fsub
or
mov
xor
mov
cmpsl
mov
int
push
lock
mov
fucom
or
xchg
mov
xchg
movsb
and
arpl
repz
dec
ja
iret
push
xchg
jmp
lds
fstpt
xchg
jae
sti
jecxz
jns
jo
xchg
lods
mov
dec
lcall
xlat
mov
xchg
mov
push
js
jns
pop
adc
sbb
or
pop
xchg
ret
pop
add
sub
jbe
hlt
out
adc
fidivs
jl
jp
add
or
aad
fadds
xor
push
sahf
or
clc
cmp
sub
std
mov
mov
lret
fisttps
sub
push
adc
and
jns
pop
ss
adc
sub
add
les
test
or
scas
jecxz
dec
sub
add
out
ret
stos
cmpsb
add
call
inc
fists
rorl
lahf
jnp
stos
es
scas
adc
aad
lods
xchg
xchg
scas
xchg
jbe
xor
aas
fisttpl
add
inc
inc
and
filds
rcr
mov
mov
stos
and
outsl
mov
xchg
ljmp
jne
jb
add
das
movsl
mov
cmc
movsl
or
xchg
cltd
add
fdivrs
xchg
leave
push
lahf
mov
mov
jle
and
add
xor
jmp
xchg
xor
mov
jmp
sub
scas
push
ja
mov
pop
insl
add
lret
std
ss
test
cmp
push
arpl
test
sahf
push
sarb
jno
lahf
or
xor
dec
xchg
nop
stos
lea
shll
nop
add
mov
icebp
pop
int3
mov
ss
sub
sub
xchg
lahf
sub
mov
outsl
or
dec
add
repz
mov
insl
mov
jno
sbbb
push
ja
aas
lock
pusha
mov
sbb
mov
push
push
mov
sub
mov
les
cmc
push
cwtl
mov
inc
cltd
pop
pop
jne
enter
out
push
rorl
jle
or
dec
mov
hlt
je
cwtl
jmp
js
dec
mov
cwtl
mov
push
dec
sub
xor
test
clc
es
jmp
icebp
fcomip
cmp
les
sahf
pushf
and
outsl
jmp
adc
sbb
inc
mov
mulb
add
lods
dec
fiadds
dec
fsubs
push
aad
es
jno
orb
mov
push
xchg
out
dec
nop
in
push
xor
gs
popl
xchg
scas
subb
int3
in
xchg
and
lods
push
mov
ficoml
inc
xor
mov
mov
das
icebp
shlb
ljmp
int3
iret
aam
cmp
jecxz
lahf
sbb
divb
adcl
loopne
data16
cmp
push
inc
jbe
data16
sbb
imul
jp
lahf
aas
push
mov
xchg
dec
push
xchg
je
sahf
test
or
mov
pop
dec
sbb
pop
test
fistps
nop
je
cmpsl
sti
pop
bnd
jecxz
lret
jle
pop
mov
mov
xor
sbb
arpl
lret
hlt
xchg
xor
lcall
mov
bound
les
or
enter
mov
inc
xchg
xor
or
push
loop
das
ljmp
jae
sahf
leave
loop
repz
xchg
aas
outsb
dec
popf
jo
xor
pushl
xlat
push
adcl
mov
setge
mov
sub
leave
pop
and
xchg
lret
push
sub
pop
push
icebp
dec
lret
scas
cmc
sub
mov
pop
pop
test
sbbb
pop
movsb
jg
jle
stos
arpl
rorb
ljmp
pop
leave
inc
shl
dec
fwait
lds
xor
xor
add
push
push
jbe
test
and
movsl
rorb
dec
jno
repz
dec
jecxz
cmp
fs
adc
fidivrs
pushf
mov
call
ret
fnstenv
aam
or
inc
dec
pop
xchg
in
mov
outsb
js
outsb
or
xchg
icebp
pop
add
push
lds
mov
shll
cwtl
adc
imul
gs
cmc
lods
push
not
push
shlb
enter
sub
shrb
mov
mov
jb
into
nop
cmp
cltd
pop
cmp
icebp
xchg
testl
orb
sbbb
lea
mov
sbb
fidivs
and
or
ret
lds
sub
xchg
or
xchg
sahf
mov
cld
mov
jmp
push
mov
sbb
xchg
rsqrtps
in
xchg
lret
mov
out
in
or
repnz
mov
addr16
mov
sub
test
adc
or
pop
adc
and
lods
adc
sbb
push
int3
mov
clc
cli
and
outsl
push
shrl
pop
ljmp
loope
sbb
xchg
mov
inc
hlt
jne
js
bswap
and
icebp
lods
mov
pop
dec
jl
adc
xchg
pop
mov
sbb
test
loop,pt
fwait
cwtl
outsb
leave
pop
iret
mov
daa
jmp
mov
mov
xor
mov
sahf
clc
addl
adc
lahf
pop
sahf
loop
notl
addr16
je
inc
xor
cmp
add
push
imul
jno
xor
xchg
lock
in
mov
int3
ja
push
inc
mov
sub
xlat
loop
addr16
jl
popa
jmp
xor
mov
cmp
pusha
dec
jmp
sbb
mov
lock
and
stos
leave
fcomps
subl
xchg
daa
push
mov
popf
movsl
push
sub
mov
pop
cmpb
jnp
pop
sarb
scas
xchg
fdivrs
cmp
sub
mov
sbb
pop
dec
push
fs
cmpsb
int3
in
cld
rcll
faddp
mov
mov
out
hlt
jge
mov
and
jns
outsl
jle
out
add
repz
not
faddl
ffree
xchg
shl
lret
pop
out
inc
xor
out
inc
jb
push
xchg
dec
std
sbb
inc
js
inc
sbb
imul
push
data16
fsubr
aas
imul
in
mov
out
fwait
xor
rolb
sbb
lods
std
stos
in
adc
or
xor
fyl2x
and
jbe
lea
mov
cli
call
mov
push
pop
jbe
fwait
stc
lret
xor
adc
xor
mulb
pop
popf
add
sub
jne
ficompl
lcall
push
and
rorl
adc
data16
es
mov
shll
xchg
jo
jns
xchg
inc
mov
adc
mov
xchg
cmpsl
pop
insb
xlat
lds
push
pop
ret
cli
lods
sbb
mov
pusha
lahf
ljmp
jge
jb
gs
mov
lds
mov
fiaddl
call
ja
cmpsb
sbb
push
xchg
dec
stos
fsubrl
js
mov
jl
jmp
add
lds
mov
imul
push
mov
clc
sub
pop
sarb
shl
dec
dec
js
xchg
loopne
mov
dec
sub
push
jae
cmc
xor
jbe
inc
jns
xchg
out
xchg
ficompl
mov
dec
inc
repnz
out
push
loope
cmpsl
aad
pop
jge
mov
mov
jne
test
jne
push
and
pop
mov
and
or
es
mov
inc
insl
mov
leave
mov
daa
adc
std
lret
pop
jle
sbb
push
shll
int
nop
sub
and
les
dec
push
sbb
sbb
add
int
pop
pop
subl
cmp
iret
negl
in
fldl
ret
jbe
cmp
xor
and
xchg
ffreep
pop
in
jb
mov
das
mov
push
adc
or
js
frstor
adc
xchg
pushf
mov
pop
loope
xchg
adc
mov
pop
xchg
fs
push
cwtl
sti
rcr
push
inc
lods
mov
xchg
sub
cmp
push
push
adc
daa
cltd
add
mov
sub
mov
pop
sbbl
add
mov
fs
test
fbld
and
xchg
inc
ficomps
sub
icebp
int
push
out
or
mov
add
mov
jne
xor
adc
xor
stc
xor
hlt
ds
xor
add
mov
shrl
movsl
mov
sarb
pop
jl
mov
shll
incl
sbb
mov
imulb
mov
fcomps
inc
in
mov
inc
mov
pop
sbb
cld
scas
mov
push
adc
xchg
jno
in
pop
mov
adc
mov
push
adc
shr
pop
dec
xchg
lcall
movsl
jle
or
sahf
cs
mov
mov
cwtl
test
out
fcompl
mov
fldt
pop
push
inc
jbe
out
sbb
movsl
nop
dec
dec
cld
cwtl
ja
aad
and
xor
test
scas
or
push
into
orl
jg
or
sti
sarl
mov
fstpl
mov
push
jns
and
addr16
outsb
pand
adc
stos
pop
and
xor
stos
inc
leave
xchg
cvtdq2ps
cwtl
repnz
dec
pusha
xchg
sub
inc
dec
repz
stc
xchg
rorb
sbb
and
add
ret
mov
subb
jne
cltd
inc
cmc
mov
and
fidivrs
mov
push
inc
aam
cmp
repnz
dec
lret
sub
xchg
imul
stc
inc
xor
mov
mov
xor
pminsw
dec
xchg
ja
cmp
ret
dec
sub
and
lds
adc
cmpl
popa
mov
jg
fstpl
adc
mov
outsb
jle
inc
dec
insl
push
fnstsw
xchg
mov
jns
ljmp
inc
cmp
xchg
call
fisttpl
iret
or
stos
cmp
in
pushf
pop
call
jbe
pop
scas
popf
rcrb
fsubrl
fsubrl
jno
jecxz
ret
xchg
sbb
iret
sbb
popa
push
or
ficomps
lock
mull
sbb
dec
add
xchg
push
jge
outsb
ds
adc
fidivs
and
cwtl
hlt
lods
and
mov
popf
pop
fildll
mov
lea
xchg
fstpl
mov
int3
sub
push
adc
dec
adc
push
aad
dec
xor
xchg
aam
sbb
push
shll
sti
dec
mov
sbb
pop
leave
shr
pop
lods
addl
mov
inc
inc
lret
lcall
shrb
rsqrtps
jp
xchg
test
xor
loope
out
hlt
in
dec
movl
addr16
mov
out
or
nop
adcl
mov
sub
mov
sbb
cmp
ficompl
loopne
and
loopne
fimuls
jb
icebp
and
test
mov
dec
and
xlat
mov
lea
cmp
loope
out
inc
sub
sub
xor
inc
loop
dec
insl
cwtl
jg
sbb
inc
mov
test
arpl
or
and
push
stc
cltd
mov
pop
add
push
bound
cmp
add
test
or
push
negl
lods
and
arpl
mov
push
scas
je
aad
jecxz
cmpb
out
mov
push
push
subb
sahf
js
daa
xchg
inc
add
shl
push
bound
cmpsb
scas
push
scas
enter
les
pop
xchg
jmp
aam
lcall
pusha
jmp
stos
imul
orb
pushf
xchg
or
push
arpl
lcall
rol
clc
add
mov
push
xchg
nop
inc
test
aaa
inc
fildll
pop
idivl
lret
xchg
cltd
test
adc
imul
lds
js
push
adc
test
cltd
or
and
jo
adc
push
arpl
dec
fisttpll
mov
jbe
je
lret
insb
xchg
imul
push
inc
aam
mov
sub
jns
nop
int3
mov
push
inc
lahf
sub
dec
xchg
sub
out
xchg
mov
fcomps
mov
dec
sbb
or
es
jne
mov
imul
mov
fldt
push
in
pop
subb
movsb
imul
xchg
cli
inc
jne
into
mov
imul
aam
fdivrp
push
jge
pop
insb
push
inc
iret
inc
pop
mov
test
pop
xchg
mov
call
dec
sbb
cmp
lods
stc
icebp
andb
cld
jno
ljmp
ljmp
shll
mov
cmp
xchg
and
xchg
push
dec
cmp
sbb
fwait
inc
cmp
mov
pop
inc
fucomi
sti
add
in
fcmovu
movsb
gs
lods
fsubrl
bnd
out
mov
xor
cmpl
cmp
push
jp
mov
or
mov
mov
mov
pop
fldl
es
dec
out
lret
sbb
and
jno
or
daa
roll
out
xchg
pop
sti
imul
pop
mov
or
dec
add
jo
in
popa
js
out
out
iret
xchg
push
hlt
es
and
xchg
xchg
leave
pop
xchg
mov
add
stc
push
sarl
std
std
je
test
out
into
rolb
bswap
icebp
mov
js
in
punpckhwd
inc
fcomps
adc
test
add
imul
xor
mov
sahf
test
xchg
dec
mov
cltd
lret
pushf
jns
xchg
cmp
lcall
dec
mov
push
sbb
mov
pop
xchg
cwtl
mov
shll
sbbb
pop
push
sarl
lea
push
pop
es
subb
psrad
cmc
rolb
sub
fldcw
ljmp
push
movsb
sbb
sub
into
sahf
mov
leave
shrl
pushf
test
mov
imul
popa
sub
cmpsl
or
lods
sbb
push
pop
xlat
adc
ds
out
cmpsb
sub
push
mov
jl
ljmp
pop
adc
in
loope
adc
outsb
and
aaa
jno
lret
xor
sub
pop
aam
sarb
nop
ss
push
jp
shrb
shrl
add
xchg
fdivl
mov
or
push
sbb
pop
stos
ja
iret
fistpl
add
cmpsw
dec
mov
sbb
loop
dec
outsb
test
mov
mov
mov
js
dec
jbe
jns
sbb
mov
ficompl
or
cmp
xchg
dec
jle
outsl
sub
in
xchg
dec
inc
or
mov
cmp
xor
clc
data16
aam
mov
rcrb
rcrl
add
mov
mov
and
and
xor
daa
inc
dec
jne
sarl
stc
out
insl
hlt
push
push
dec
testb
insl
pop
out
mov
mov
mov
adc
jo
sbb
int
scas
lods
insl
mov
imul
leave
repz
dec
or
add
lock
mov
loope
cmp
iret
ret
je
jnp
jp
xchg
test
scas
rorl
add
decb
dec
xor
mov
jnp
push
cmp
push
loopne
std
loopne
inc
push
xchg
jmp
cld
pop
aam
jnp
xor
out
jle
in
fsubr
test
xchg
mov
xchg
inc
dec
adc
pop
mull
sub
dec
push
mov
inc
and
sub
pop
cmpsb
aas
dec
mov
mov
dec
mov
dec
test
adc
loopne
and
cmp
add
hlt
push
mov
xchg
loope
into
imul
cmp
xor
roll
icebp
lods
xchg
lahf
pop
lret
int3
cmp
cmc
loope
loope
or
xor
push
dec
pop
test
movsl
cmp
leave
xor
repnz
push
cli
and
add
cmpsb
mov
test
into
stos
xor
iret
test
push
and
popf
pop
movsb
pop
outsl
mov
add
inc
add
add
sbb
imul
int3
or
cmp
scas
sub
sub
mov
xchg
sbb
hlt
sbb
jle
bound
and
dec
inc
push
cmpl
in
inc
int
add
inc
xchg
mov
jnp
or
sub
dec
xor
inc
sbb
mov
lahf
push
divl
out
je
jecxz
dec
in
mov
push
fstpt
out
cmp
and
sub
lcall
xchg
leave
in
xchg
into
shll
mov
mov
inc
rcr
and
data16
aas
cmp
add
adc
int3
mov
sub
mov
imul
in
fcoms
or
add
fs
or
int3
pushf
cwtl
addr16
rorb
xor
push
xchg
pop
and
push
arpl
hlt
dec
sub
repz
sbb
jp
popf
jecxz
pop
push
int3
addr16
lds
push
hlt
outsl
fbstp
xor
dec
loop
sub
xchg
mov
icebp
outsb
pushw
push
hlt
in
rolb
imul
popa
jle
mov
imul
mov
sub
aad
sarl
or
adc
sub
dec
adc
lcall
std
add
pop
in
roll
into
and
loop
xor
mov
pushf
push
arpl
cmp
insb
es
nop
shll
add
jns
imul
mov
jbe
pop
lods
popf
mov
out
shrb
xor
or
ja
sub
pop
mov
call
leave
mov
in
inc
add
push
test
iret
add
call
jbe
sbb
sub
jns,pt
jmp
cmp
aam
cmpsl
mov
out
push
clc
jmp
mov
push
mov
add
ret
mov
cmp
out
push
ljmp
loop
pop
push
jns
mov
aam
jmp
stos
lahf
cmp
mov
lahf
mov
subl
pusha
pop
fwait
or
aam
sti
dec
push
retw
mov
sub
xor
mov
test
add
xor
sarl
mov
xor
adc
das
and
jae
test
xor
adc
pop
aaa
adc
pop
bound
mov
push
loopne
into
scas
mov
daa
sahf
mov
jo
jo
inc
je
adc
lock
mov
in
call
loope
dec
mov
mov
ret
adc
cmc
mov
sbb
jl
pop
inc
test
out
ss
sbb
test
jo
xchg
or
ficoms
outsl
push
gs
insb
or
orb
nop
mov
shll
imul
cs
add
pop
inc
lret
imulb
loopew
mov
mov
loop
pop
call
inc
add
fstl
mov
das
sti
cs
jne
xchg
push
lret
mov
inc
call
sarb
in
ficomps
lahf
mov
sbb
xor
out
push
jl
stos
mov
scas
adc
leave
cmp
sbbb
in
mov
fsubl
stc
fdivl
xchg
cmp
mov
xchg
add
jle
mov
pop
jb
sub
pop
fcompl
mov
call
loopne
orb
push
std
cmc
xchg
mov
inc
aam
jg
mov
lods
add
call
cli
sahf
mov
mov
mov
jmp
shlb
xor
sti
adc
fildll
ficoms
add
fstp
js
cmpsb
sub
mov
dec
xchg
inc
jp
or
data16
jbe
add
pop
adc
outsl
shlb
in
stc
rcrl
loopne
in
xchg
cmc
out
pusha
sub
push
sarb
aad
pop
sahf
xlat
aam
rcll
fmul
sbb
cmpsl
xchg
mov
mov
cmpsb
nop
cwtl
xor
push
push
push
incb
xor
jno
fwait
push
xrelease
xor
push
pop
cmpl
push
sbbl
mov
xor
or
push
icebp
out
push
rcl
adc
pushf
cmp
push
pop
and
cmp
add
mov
push
mov
or
lret
push
xchg
push
das
sub
xrelease
xor
sub
inc
xor
push
add
ljmp
push
cltd
push
test
jb
fwait
or
movsl
jmp
xor
out
inc
adc
shlb
or
repnz
fadds
push
xor
fadds
inc
inc
push
inc
adc
je
stc
pop
testl
xor
jle
mov
outsl
or
dec
iret
lahf
pusha
mov
dec
inc
jecxz
hlt
xchg
jns
dec
jle
pop
mov
mov
stc
pop
rol
adc
pop
xor
mov
loopne
push
mov
ljmp
and
push
jg,pn
adc
jo
xchg
xchg
xchg
fisttpll
fmul
mov
jne
loopnew
out
in
sarb
sti
mov
xchg
jecxz
repz
jge
cmp
roll
pop
in
outsb
ret
aaa
mov
cmpsl
jb
cmc
test
lret
push
or
in
lock
or
or
test
in
push
dec
mov
push
adc
ss
lea
mov
stc
mov
mov
filds
jl
es
inc
dec
pop
das
pop
sbb
jge
sub
xchg
jp
pop
dec
sbb
int3
pop
addr16
stos
pop
rclb
popf
jae
jl
pop
js
imul
or
xor
fst
xor
xchg
ljmp
jo
push
push
mov
hlt
pop
mov
and
adc
adcl
pop
hlt
int
je
push
test
in
fmuls
daa
cmp
jno
xchg
popa
inc
push
xorb
fadds
jle
sbb
cvttps2pi
pop
add
add
adc
lock
mov
cmp
clc
xor
xchg
js
mov
ja
dec
outsb
inc
enter
mov
stc
and
pusha
xor
mov
repz
sbb
pop
inc
and
orb
jns
bound
pop
in
xor
in
xchg
jg
sub
gs
lahf
add
adc
inc
lea
loop
repz
in
push
inc
push
lods
add
and
xchg
pop
mov
jg
and
jl
add
or
pop
or
outsl
insl
sbb
jo
leave
in
sahf
xor
shlb
js
negl
push
je
mov
outsb
xchg
xchg
jl
hlt
push
icebp
or
mov
fwait
int3
xchg
pusha
pop
outsl
mov
movsb
loopne
mov
mov
repz
adc
jl
push
jno
sbb
push
es
pop
cli
mulb
xor
cmp
jne
data16
and
roll
mov
imul
cmp
jnp
test
jb
xor
or
movsl
mov
subl
inc
popa
clc
fwait
mov
imul
sbb
stos
out
out
hlt
std
mov
les
jmp
aam
pop
mov
push
dec
mov
cmpsb
repnz
dec
es
push
push
push
enter
mov
jmp
pop
jae
mov
es
adc
lret
jl
mov
jl
dec
ds
sbb
xchg
je
sbb
test
icebp
push
jmp
pop
stos
aam
das
xchg
sti
jne
ret
out
scas
int3
jns
mov
jns
ljmp
xchg
cs
ljmp
hlt
mov
cmc
add
cmp
sbb
pop
pushf
xchg
arpl
sub
out
push
in
push
ret
mov
mov
xor
xlat
dec
sbb
int
pop
loopne
xorl
ljmp
imul
xchg
stos
jp
leave
mov
lods
lods
inc
loopne
dec
jo,pt
and
js
jle
jmp
js
push
add
sub
in
stos
add
dec
rcrb
out
cwtl
loope
in
push
into
test
pop
insl
adc
daa
out
test
pop
ljmp
icebp
mov
or
outsb
cs
in
mov
mov
mov
xorl
imul
int
imul
sbb
out
pop
in
rclb
mov
add
adc
std
fistpl
jae
movsb
add
xor
jnp
push
inc
mov
mov
mov
push
mov
pop
and
xor
or
es
mov
add
jno
push
roll
mov
sahf
mov
sbb
and
leave
inc
lcall
sub
pop
scas
or
incl
sub
add
xor
inc
dec
outsl
ror
mov
jo
rcl
or
push
xchg
cmc
xchg
sbb
aad
jno
and
xchg
sub
icebp
push
inc
push
sbb
adcl
pop
sar
jbe
sbb
xlat
xor
inc
and
mov
dec
jp
jp
not
aam
push
pop
movsl
dec
int3
sbb
int3
loope
xor
inc
sub
aam
cltd
jmp
mov
lret
and
xchg
movsl
and
lret
or
push
jge
pop
leave
shll
cmc
sarl
std
pop
sub
in
shl
nop
cli
xlat
ja
mov
cld
push
aam
jg
pop
and
cld
repnz
xor
roll
pusha
xor
stos
dec
xor
jno
jp
xchg
aas
test
adc
push
into
decl
loope
fstpt
aam
mov
mov
in
js
test
cmp
pop
int3
bound
xchg
mov
filds
push
mov
les
sbb
mov
lcall
lcall
test
add
popa
imul
dec
mov
mov
sbb
mov
xor
dec
sbb
jns
dec
aad
addb
int
and
xlat
sub
or
loope
lret
notb
mov
or
icebp
dec
lret
sbb
push
pop
sub
fs
jmp
faddp
jo
or
push
mov
sbb
clc
xor
loop
sub
out
aaa
movsb
fchs
push
daa
sbb
shlb
outsb
mov
add
pop
decb
lret
rorl
lahf
stos
scas
sahf
pop
fidivrs
and
nop
test
rorb
ja
test
sub
cmp
rol
xchg
out
mov
aaa
decb
sub
je
out
jb
std
sub
inc
sbb
sub
mov
stc
fcmovnbe
mov
imul
cs
movsb
jnp
js
jo
cmp
mov
div
rolb
fbld
orl
shrb
outsl
lret
ret
or
bound
push
sub
inc
sbbb
addr16
popa
lea
mov
out
pop
push
dec
jae
add
mov
lahf
mov
jl
mov
leave
lds
jns
test
in
and
mov
pop
sbb
outsb
mov
cmc
ds
add
pushf
or
stos
cmp
enter
les
mov
in
or
pushf
mov
jae
shlb
cwtl
repnz
push
das
fcompl
nop
dec
insb
call
test
icebp
and
add
arpl
xchg
cmp
loopne
sbb
jno
ljmp
mov
popf
insb
push
in
mulb
or
inc
sbb
push
fwait
ret
int
lods
adcb
push
mov
adc
out
inc
dec
xchg
cmpsl
mov
mov
in
inc
leave
jge
lahf
cmp
pop
xchg
stos
sbb
fwait
mov
mov
mov
js
aas
fnsave
sbb
jae
stc
cld
ror
dec
xlat
rol
fisubl
ret
mov
fwait
dec
push
jle
lahf
mov
mov
loop
pop
add
push
shrb
xor
rcr
call
cmp
adcb
sbb
shll
jmp
stos
insb
sub
cmpsl
pop
sub
pop
stc
fldcw
cmp
xchg
mov
clc
loop
jle
jb
xor
cmp
call
mull
or
pop
or
into
dec
xor
dec
jb
nop
pop
add
adc
repnz
dec
in
ror
or
das
xor
aaa
popf
dec
mov
xor
mov
clc
sbb
mov
outsl
xor
sbb
je
jo
xor
rcrb
out
push
int
inc
js
adc
push
movsb
jns
movsb
xor
mov
add
or
icebp
ret
scas
call
into
arpl
mov
cwtl
fisubrl
hlt
add
pop
mov
push
xchg
mov
dec
adc
sbb
addr16
sti
xor
aam
cli
sti
lds
ret
sbb
mov
out
mov
iret
into
adc
inc
cld
jne
or
sbb
roll
pop
out
cwtl
xchg
ljmp
jne
fwait
jmp
insl
aad
mov
in
mov
nop
ss
push
loopne
cmp
mov
out
ja
fldcw
cld
ljmp
adc
push
sub
test
cmp
arpl
les
fldenv
mov
out
test
lods
ss
pop
pushf
mov
lret
cmp
add
add
fadds
sbb
inc
sub
cli
repnz
push
jne
inc
or
hlt
push
and
push
pop
in
bound
mov
lret
sbb
and
inc
sub
sub
test
inc
cmp
jl
push
or
adc
adc
jo
les
fstps
test
in
sub
dec
pop
sub
pushf
mov
imul
pop
jo
and
popf
in
mov
mov
pop
jle
je
dec
jl
cmp
xor
push
rorb
or
xor
mov
sub
or
cmpsb
js
loop
dec
push
sbb
adc
outsb
dec
fwait
xor
repnz
repnz
in
fs
mov
movsb
sbb
into
std
mov
fsubl
push
pop
sbb
insb
subl
cmp
jg
fs
cmpsb
adc
insb
cmp
mov
push
jnp
dec
mov
and
test
cmp
mov
dec
pop
push
jg
in
je
pop
lea
pop
dec
cmp
or
push
sbb
int3
cmp
mov
in
xchg
dec
imul
add
xchg
shlb
into
mov
jb
push
cli
pop
inc
aas
push
std
xchg
dec
loopne
mov
pop
add
jb
xchg
push
imul
outsl
jb
sub
jp
push
stc
gs
cmp
xorl
fstpt
jp
stc
xchg
hlt
push
addb
or
fwait
and
sub
push
and
int3
dec
stc
sbb
jae
popa
sub
add
sub
sbb
cmp
dec
fidivrl
cwtl
int3
jo
mov
sub
or
test
and
jbe
cmpl
pop
shrb
mov
out
or
or
xchg
call
nop
dec
xor
scas
mov
xrelease
mov
idivl
xlat
pop
dec
data16
in
fmulp
jb
fsubs
pop
pop
xchg
mov
push
aaa
es
es
jno
adc
std
out
xchg
arpl
push
mov
aam
jno
pop
xor
mov
push
aam
nop
sub
jns
xchg
enter
sbb
lods
std
pop
aaa
icebp
cmp
pusha
mov
mov
jbe
out
sbb
inc
adc
push
adc
aam
int3
cltd
je
cmp
cs
xchg
sbb
out
shrl
scas
cmp
out
movsb
lahf
lret
sbb
jmp
xor
aam
movsl
adc
and
xchg
and
jge
movsl
int3
sub
pusha
or
fs
and
adcl
clc
es
cmp
imul
or
test
xor
push
pop
cmp
pop
js
mov
jmp
jg
es
test
cwtl
xchg
imul
dec
push
movsb
ljmp
jb
scas
push
aad
out
mov
inc
pop
movsl
fwait
adc
cmpsl
pop
jmp
mov
arpl
sub
loope
dec
aaa
mov
adc
outsl
iret
cmc
leave
test
clc
push
mov
cld
inc
mov
sub
adc
pop
pop
xchg
outsl
sbb
dec
push
dec
push
mov
lret
push
push
inc
mov
inc
pop
aad
jecxz
xorl
or
fisubs
xchg
sbb
movsl
mov
int
xor
mov
jmp
sub
sti
dec
repz
loopne
lret
sti
cmp
aad
pop
sbb
fisttps
cmp
jbe
std
fwait
and
gs
push
mov
enter
repnz
jmp
sbb
enter
cmp
mov
test
xchg
cmpsl
or
pop
push
xchg
repz
push
push
sti
inc
ret
test
mov
pop
mov
push
popa
dec
and
push
jae
inc
add
pop
mov
ja
push
sarb
jecxz
jmp
xchg
mov
mov
mov
or
xchg
call
bnd
popa
notl
imul
out
xor
out
mov
stos
mov
outsb
inc
add
int
pop
sbb
mov
andl
push
cmp
ds
movsl
mov
mov
in
cmp
and
ret
lret
dec
mov
imul
dec
fs
pusha
push
int
inc
pop
xlat
dec
lea
out
mov
mov
cmp
jno
mov
cmp
mov
xorl
cmpsb
popf
lret
outsb
imul
lods
dec
adc
ss
scas
lock
lds
adc
cmp
lock
roll
jp
scas
xchg
and
lret
insb
or
adc
mov
mov
and
aas
add
cltd
lds
enter
mov
and
pop
lret
call
mov
sbb
and
lock
xchg
sar
cmc
sahf
lods
sub
push
cmp
mulb
or
dec
rep
imul
or
dec
inc
out
stos
pop
mov
lret
xor
imul
push
jbe
and
mov
rol
insl
decl
lahf
jle
les
mov
mov
insl
mov
fimull
stos
jae
je
in
loop
pcmpeqw
cmpsb
lcall
jnp
xchg
or
fdivrl
inc
pop
inc
xor
dec
int3
shll
fldl
lret
loopne
push
push
cmp
stos
enter
fstl
mov
repz
xchg
imul
insb
xchg
jne
mov
mov
int3
or
iret
pop
repz
enter
or
and
je
cmp
pop
push
fcoms
or
shrb
movb
dec
mov
popa
mov
xlat
fnstsw
jb
daa
push
cltd
xchg
imul
out
ret
mov
xchg
dec
or
push
movsb
add
in
lret
mov
fistpl
xlat
movb
cmp
icebp
mov
call
scas
mov
mov
jmp
or
mov
mov
push
xor
pop
int3
test
sar
hlt
xchg
sbb
arpl
dec
or
clc
lea
mov
out
xchg
call
dec
pop
aaa
popf
loop
cmp
or
push
sar
push
mov
pop
lret
sti
movsl
cwtl
loopne
cmp
jbe
cmp
test
call
push
xor
inc
mov
add
imul
out
test
xchg
imul
xchg
clc
ret
mov
sbb
andl
out
stc
ret
adc
stc
inc
outsb
or
out
xchg
scas
adc
add
lods
sub
mov
dec
hlt
scas
mov
std
rcrl
les
nop
test
scas
add
inc
les
jle
inc
insb
pop
rorb
sahf
pop
and
rolb
addl
add
add
pop
jecxz
loop
aad
xchg
aaa
mov
lds
test
ljmp
scas
pop
xor
cwtl
adc
mov
scas
and
fistps
pop
xchg
xor
mov
data16
sub
std
and
xchg
cmpsb
xchg
std
mov
jnp
lods
fidivs
jge
and
int3
es
mov
dec
fisttpll
sub
shrl
mov
sub
push
mov
dec
pusha
aam
mov
jne
testb
out
push
mov
fsubrl
shll
dec
pop
inc
jbe
xor
mov
aaa
push
jns
ss
gs
jnp
xor
lahf
data16
lret
push
test
bound
jno
sahf
out
push
mov
dec
xor
inc
push
iret
and
rol
aam
xchg
push
mov
loope
rcll
cmp
aas
icebp
into
mov
sarl
jns
jne
or
cwtl
pop
mov
cmpsb
cli
add
clc
adc
lret
xor
gs
lret
jne
mulb
in
flds
aaa
sbb
shll
je
mov
dec
or
xor
and
jno
xchg
stc
fldcw
mov
vphaddbd
in
fs
cmp
and
sub
in
xchg
in
sbb
pushf
jg
gs
sbb
adc
cmp
adc
pop
cmp
jbe
push
movsb
add
jp
jl
pop
dec
test
mov
push
rorb
sub
orl
in
aaa
cld
js
icebp
dec
stos
iret
jl
inc
and
cmp
or
push
sarb
daa
mov
test
sub
adc
mov
enter
cmp
push
inc
jae
shrl
movsl
sub
pushw
decl
add
ret
dec
or
cmpsb
loope
icebp
xchg
pop
cmp
ret
pop
aas
jne
movsb
or
adc
ja
loop
lahf
lods
loopne
push
popa
and
xchg
outsl
mov
mov
cwtl
inc
loope
cs
jp
sahf
cmc
lret
xor
cmp
ret
in
add
lods
xchg
fsubs
rcrb
or
lahf
js
fs
mov
inc
cmp
test
sub
and
cmpsl
or
iret
jo
cmpsl
adc
mov
xor
call
daa
sbb
inc
push
rol
and
pushf
das
aad
cwtl
mov
adc
adc
cmp
push
inc
mov
xor
pop
xor
subb
dec
bound
cmpl
push
inc
loope
loope
sub
ljmp
cli
or
jecxz
push
and
into
sub
push
inc
mov
sbb
pop
xor
and
js
std
idivl
stc
sub
jae
enter
gs
lods
jg
sub
addr16
test
cmp
xor
popf
pop
push
push
cmc
out
add
xchg
loope,pt
int3
add
adc
mov
aaa
xchg
sub
stc
xor
jg
mov
andb
or
ds
aas
pusha
push
xor
insb
imul
lock
cmp
add
repz
dec
dec
jae
adc
icebp
sbb
add
dec
fwait
cld
dec
lock
inc
push
mov
cmc
popl
push
jl
or
and
adc
lods
sub
ret
cld
shrl
stos
bound
ljmp
xchg
xlat
push
test
in
sbb
subb
sbb
dec
sub
outsb
cwtl
call
sti
ficoml
adc
test
dec
sub
jmp
inc
mov
cmp
pop
test
xor
stos
jmp
xchg
dec
jno
stc
sbb
add
sub
or
push
test
bound
in
push
nop
roll
loop
cmp
xchg
sbb
in
jmp
add
inc
mov
test
fwait
or
inc
push
sahf
cld
iret
pop
cmp
vpmullw
mov
inc
iret
mov
loop
jae
rcll
sbb
xchg
pop
jns
shl
or
cmp
pop
adc
inc
mov
sbb
or
sub
xchg
bnd
aad
das
mov
inc
jo
pop
subl
xlat
mov
xor
push
test
xor
push
lcall
adc
cwtl
jp
push
nop
dec
std
lds
xchg
or
push
xchg
mov
jne
push
mov
mov
or
mov
mov
das
cli
dec
add
lcall
inc
outsb
adc
xchg
xlat
add
xor
cmp
ljmp
push
addr16
ret
movsb
add
das
lods
in
dec
daa
mov
in
shrb
push
mov
jecxz
and
aad
add
insb
jbe
lahf
insb
or
sbb
pop
insb
pop
sbb
int3
loope
fwait
sbb
xor
call
test
das
daa
lock
jns
out
jp
mov
arpl
push
pop
add
xor
inc
xchg
and
cmpsl
mov
xor
jnp
cmp
add
mov
lcall
mov
outsl
xor
loopne
nop
pop
inc
aad
scas
outsb
mov
mov
dec
dec
imul
mov
arpl
scas
popf
adc
mov
jo
xor
fcmovnu
pushf
sub
pop
aas
lret
xchg
sbb
lcall
int
mov
mov
xor
xor
cli
push
mov
int
mov
mov
addb
and
push
jle
pop
xorb
mov
sub
fmull
ret
xchg
sarl
fs
lods
push
pop
jo
fxch
scas
jl
push
add
loop
ja
mov
xchg
inc
iret
pusha
xlat
icebp
cmp
ljmp
bound
xor
mov
cwtl
rcl
icebp
fimull
fs
adc
jp
inc
mov
xchg
sbb
les
sti
adc
dec
loope
fsts
test
rol
les
adc
dec
sbb
fcmovu
sbb
pop
pusha
fldenv
mov
xor
push
mov
mov
mov
and
xor
mov
enter
mov
std
mov
or
mov
adc
push
xchg
jg
add
jns
adc
jmp
mov
mov
lahf
adc
shlb
xchg
push
shll
or
andb
push
sbb
sbb
jg
mov
popl
ds
daa
adc
orb
shrb
cmp
jmp
dec
and
add
stos
stos
adc
cmp
jge
fwait
cmp
adc
mov
and
scas
mov
pop
lret
sbb
dec
rcrl
push
pop
arpl
mov
iret
shl
loope
jl
dec
pop
scas
add
pushf
fs
xor
mov
sahf
mov
cmp
mov
mov
xor
fsubs
std
pop
cmp
shlb
ja
cld
pushf
in
cmpsb
mov
jb
jecxz
fadd
pop
adc
adc
lock
inc
jmp
and
sbb
outsb
push
jno
jge
into
lcall
jg
fisttps
repnz
shufps
and
nop
xchg
or
jge
repz
addr16
pop
test
sbb
pusha
pop
add
dec
push
add
cs
ss
jl
arpl
lock
mov
cli
dec
xchg
jb
int
test
cltd
pop
jge
je
adc
es
jp
sbb
rol
push
add
repnz
pop
cs
negl
pop
xor
jge
cmpsl
push
shlb
xchg
jmp
cmpsb
mov
xor
popa
xchg
out
push
sub
inc
shlb
insl
pop
enter
push
aad
in
jns
je
test
sbb
jge
mov
bound
sub
xor
add
hlt
sub
jns
sahf
mov
movsl
or
mov
mov
and
dec
outsb
ret
movsl
lock
and
push
add
addr16
mov
shlb
outsl
xor
sbb
rcll
lock
push
pop
push
bound
repnz
lods
hlt
push
shlb
mov
outsl
scas
pop
cmp
sub
or
push
or
sahf
xchg
push
add
ljmp
xor
mov
test
sub
mov
xor
test
or
imul
imul
pushf
mov
jmp
jmp
lret
cmc
lea
add
mov
pushw
jbe
icebp
mov
test
int3
int
jecxz
outsl
insl
or
fistpl
add
insl
aam
fiadds
add
adc
pop
rcll
mov
inc
cmp
dec
je
mov
jne
lahf
fs
sub
xor
decl
sub
push
jl
shl
cwtl
mov
sbb
sub
or
mov
subb
add
outsb
cmp
ret
dec
mov
cwtl
mov
loopne
rol
or
jne
das
cmp
pop
dec
ja
in
add
mov
jg
or
mov
cmpsb
jmp
push
adc
adc
mov
cli
sbb
mov
cmpsb
insb
xchg
fmull
inc
inc
xchg
test
lcall
aas
roll
xor
inc
sub
xchg
test
neg
push
sarl
stos
dec
or
mov
jno
sbb
jmp
mov
xor
popf
sahf
dec
xchg
int3
test
int3
mov
xor
pop
fsubl
inc
lea
inc
repz
or
xchg
jge
xor
fildll
xchg
push
xor
leave
pop
in
mov
rcrl
filds
icebp
jnp
push
sbb
push
sub
sti
mov
and
hlt
pop
pop
dec
or
inc
lret
out
mull
inc
sub
jbe
add
dec
in
loopne
and
dec
mov
adc
pop
fisubrl
enter
cltd
sub
jg
je
cmp
xchg
gs
adc
jp
pop
xchg
stos
pusha
jp
imul
clc
push
jnp
lret
pop
stos
push
gs
out
mov
xchg
in
inc
nop
fmul
push
dec
sub
and
lock
add
push
add
push
sub
jp
push
sbb
bound
pop
jle
add
sbb
jnp
dec
in
mov
popf
xor
jecxz
push
dec
mov
cmp
inc
repz
in
adc
dec
jo
mov
lds
mov
mov
lds
popa
out
mov
inc
cmpl
mov
inc
inc
outsl
jb
sbb
cmpsl
or
push
xlat
or
mov
mov
mov
fs
lcall
out
xor
sbb
inc
mov
or
cwtl
sti
pop
ds
xchg
fists
cmp
jg
dec
adc
test
pop
adc
cmova
stos
negb
stos
push
pop
pushf
and
or
hlt
dec
and
xchg
pop
mov
and
push
pop
lahf
mov
cs
inc
mov
cltd
mov
aam
lcall
fwait
or
jle
sbbb
mov
ret
ss
xchg
sbb
fistl
cmc
stos
push
iret
mov
cmc
sub
pusha
jle
test
jnp
jge
cmc
loope
lods
fcoms
lock
lea
pop
jp
fidivrl
jae
aaa
jmp
clc
faddp
push
cmp
xor
pusha
movsl
fisttpl
in
dec
arpl
cmpb
je
adc
sbb
idivl
stos
push
push
cld
adc
iret
mov
mov
shlb
cmp
stos
mov
lea
mov
roll
or
dec
or
push
lods
sahf
les
out
lods
movsl
sbb
cmpsb
mulb
fildl
addb
cmp
cmp
sbb
pop
rorl
push
xchg
iret
sub
mov
pushf
jle
or
or
mov
scas
gs
mov
stos
icebp
movsb
xor
jp
clc
cld
inc
sbb
xlat
subb
add
mov
xchg
fcoms
push
push
xchg
sbb
pop
dec
pop
push
sti
mov
mov
sbb
or
adc
pop
sbb
subb
outsl
jmp
mov
push
mov
jns
icebp
sar
sub
lret
or
dec
jp
mov
nop
mov
adc
aam
cmp
and
push
jbe
pop
xchg
lods
or
jge
dec
jle
out
sti
stos
pop
mov
cmp
lods
lods
inc
mov
fidivs
mov
fcmovne
pop
push
push
pop
std
lock
shrl
outsb
mov
js
sbb
push
int
xchg
es
jp
mov
loopne
or
pop
std
sbb
ficomps
mov
dec
popa
cmpsb
jecxz
sub
mov
cld
stos
lret
sub
xchg
fsubrs
jae
cmp
xchg
shl
sar
mov
ret
inc
sub
add
lret
ret
dec
mov
mov
sbb
mov
jge
sahf
mov
push
fisttpl
fldenv
pop
shll
dec
adc
mov
sub
pop
adc
cmp
sub
lret
push
push
fsubl
aaa
jb
lods
pop
aaa
sar
inc
xlat
mov
bound
std
mov
sbb
in
sbb
mov
xor
jae
jb
ja
into
push
push
dec
jo
fwait
and
jle
mov
mov
aaa
sahf
test
leave
je
ror
loopne
nop
sub
and
sahf
dec
adc
xor
xor
movsb
sbb
shll
mov
jmp
add
sbb
inc
andb
jmp
cmpsl
cld
rcll
ret
lock
add
add
sti
and
out
jle
and
mov
mov
inc
icebp
jbe
lahf
or
cmp
mov
mov
inc
sub
jbe
cwtl
lahf
es
dec
push
lret
adc
fwait
mov
inc
in
jnp
in
push
mov
pop
mov
cmpsl
mov
push
jne
loopne
pop
sbbl
xchg
pop
inc
icebp
insb
jb
test
inc
insb
inc
cmp
mov
ja
ret
mov
es
and
addr16
xor
push
inc
add
je
hlt
pop
mov
and
jg
arpl
mov
jle
lret
lcall
pop
and
in
cmp
loope
xor
in
sub
mov
adc
aaa
cmc
push
sahf
sbb
rolb
and
or
jle
dec
adc
test
push
lahf
je
stos
mul
mov
push
std
or
sub
mov
imul
shlb
push
scas
push
or
add
sbb
stos
and
pop
sbb
div
cmp
movsb
fs
mov
mov
shlb
mov
push
jnp
ror
mov
push
xchg
push
xchg
add
xchg
dec
stc
rorb
aad
or
faddl
sub
sbb
cld
in
lds
sub
push
nop
stc
je
out
mov
flds
dec
sbb
and
call
pop
or
js
jo
pop
les
jle
call
ficoms
push
sbb
mov
dec
xlat
inc
addr16
xchg
stos
in
or
lds
sbb
mov
or
ljmp
add
sbb
lcall
jnp
inc
mov
or
and
pop
sub
dec
pop
and
xor
or
je
cmp
inc
imul
dec
loop
test
xchg
mov
add
ret
xor
mov
mov
push
je
sub
dec
or
mov
movsb
mov
adcb
and
and
test
cli
bt
scas
xchg
dec
aas
test
sbb
pop
sbb
rol
xchg
push
xchg
cmp
test
repnz
add
aam
and
insb
or
fstl
jl
cmp
cmpsb
nop
add
mov
xor
flds
xor
mov
mov
hlt
ds
mov
jo
pushf
mov
out
and
push
fcmovnu
mov
imul
das
cmp
inc
addr16
push
js
adc
in
mov
xchg
lret
jmp
sub
repnz
sub
mov
das
dec
lock
lret
jl,pt
pop
bound
inc
rcll
mov
lods
inc
psllw
mov
sarl
dec
popf
adc
sub
adcl
call
or
add
in
test
enterw
or
dec
mov
sub
sti
jns
dec
std
rol
ljmp
outsb
addb
insl
addl
roll
ss
int3
cmpl
rorl
out
inc
nop
add
push
dec
or
and
lods
push
lods
loop
or
out
xchg
fmul
jae
cwtl
cld
mov
out
pop
inc
shll
adcl
xor
inc
push
movsl
ficoms
cld
inc
ret
add
divb
xchg
test
scas
inc
add
dec
mov
cmp
out
pop
or
xchg
adc
dec
in
inc
ds
push
cmpsl
ds
xchg
sub
and
push
xchg
adc
repnz
jns
pop
mov
enter
xchg
iret
pop
push
aaa
inc
or
stc
cmp
rcl
loope
sahf
sbb
cs
mov
and
out
push
jle
push
lret
pusha
ret
mov
cmp
iret
mov
mov
ret
and
insl
jo
addr16
daa
scas
adc
gs
ret
adc
inc
into
iret
pop
lds
mov
mov
push
sub
mov
mov
insb
mov
mov
lret
sbb
mov
sbb
or
pop
lods
cmpsl
mov
mov
int3
xorb
cmp
test
addr16
les
mov
pop
xor
cltd
cld
je
imul
in
dec
outsb
mov
pop
sub
in
mov
lods
fmull
or
inc
sahf
dec
push
add
test
je
adc
dec
sahf
stos
loop
push
xor
stos
rclb
mov
lret
enter
shr
popa
cltd
ja
loop
fs
clc
or
xchg
mov
loopne
jne
iret
test
jecxz
or
mov
cmovge
lds
push
and
loope
lea
hlt
mov
sub
cmp
jmp
push
xor
jae
mov
lret
std
addl
add
add
pop
jnp
sbb
push
inc
pusha
sbb
hlt
mov
in
js
mov
lea
cmc
jae
cmpsl
and
loope
or
jl
pop
xchg
fldl
lea
shrl
jmp
mov
add
stc
inc
shrl
add
enter
mov
pop
scas
repz
cmp
dec
mov
fildll
iret
sub
mov
inc
std
add
sbb
inc
adc
xchg
mov
cmp
push
dec
ja
mov
lods
mov
jg
push
call
push
outsl
nop
inc
fcompl
in
and
pushf
and
mov
xchg
mov
cmpsl
filds
in
pusha
inc
pusha
or
andb
dec
or
xor
xor
test
cltd
inc
fmulp
sbb
data16
jns
les
out
negb
sub
popf
stos
xchg
xor
ret
daa
adc
sub
inc
mov
xor
xlat
lea
xor
dec
cmp
in
shll
sub
and
lret
rcr
pop
in
pusha
fdivp
mov
insb
orl
or
int3
rol
sbb
mov
xchg
push
imulb
jg
cli
shll
sahf
pop
jl
or
sub
ljmp
sub
push
adc
sub
aam
fsubrl
repz
ret
scas
mov
dec
mov
add
into
inc
push
rorl
and
jnp
xchg
outsb
mov
adc
loope
frstor
icebp
jge
popf
pop
iret
cmp
les
roll
in
mov
xchg
xchg
xchg
jo
dec
cmp
arpl
mov
insl
sub
mov
mov
cmp
pop
cwtl
xchg
test
jmp
aad
lods
add
xor
mov
adc
lods
test
call
out
idivl
fnsave
adc
mov
add
push
sub
repnz
popf
push
mov
sub
sub
add
je
dec
adc
dec
push
mov
lret
add
push
loope
jno
pusha
out
push
push
cmp
mov
loope
pop
lods
and
into
jmp
in
mov
xchg
ret
jmp
sbb
in
fbld
xchg
cltd
xchg
cmpsb
in
xchg
mov
std
push
fstpl
cmc
cwtl
mov
lcall
adc
cli
aas
xchg
movsl
js
and
je
in
dec
loopne
cld
lock
adc
and
push
popa
xor
int
sub
enter
es
insl
notb
pop
into
mov
mov
xor
cli
call
inc
jb
push
mov
lret
ss
fstpt
pop
cs
pop
xchg
push
add
fistpl
jmp
movsb
sub
pop
jne
ret
rorl
push
jbe
repz
xor
out
cmpsb
pop
dec
fwait
sahf
lcall
stos
cmc
lods
and
mov
cwtl
cltd
adc
fidivrl
rorl
push
push
sarb
sub
mov
or
in
std
cmc
test
test
fnsave
pop
add
cs
push
aam
mov
push
fcompl
jns
mov
xor
lods
fcmovnbe
and
into
mov
repz
leave
xor
lcall
movsb
xor
sub
cmp
push
push
je
insb
addr16
mov
ret
imul
shl
mov
adc
aad
ret
jns
pop
insl
mov
es
pop
xlat
repnz
push
adc
mov
xor
lods
sub
fsubrl
test
test
and
inc
orl
ret
and
mov
inc
outsb
push
popl
inc
inc
cld
adc
js
pop
pushf
xlat
rorl
xchg
gs
add
push
pop
pop
sbb
popf
lret
test
jmp
xchg
scas
sbb
jns
loop
dec
push
lret
popa
xor
fbstp
xchg
out
sub
sahf
in
cmp
div
sub
dec
push
test
iret
mov
cltd
lret
enter
mov
movsl
xchg
jbe
inc
fidivrl
lret
in
mov
mov
push
fbld
test
hlt
jbe
outsl
int
les
xchg
mov
mov
stos
rolb
pop
xor
dec
mov
push
ja
push
and
cmpsb
sti
mov
sarl
adcb
dec
hlt
mov
ret
xorl
add
popf
add
jnp
xlat
or
ret
sub
std
push
or
xor
mov
dec
out
cmpsb
daa
mov
inc
mov
push
daa
outsl
pop
mov
loopne
out
lock
mov
loop
push
mov
pop
call
adc
dec
inc
lahf
and
ret
popa
pop
ljmp
fldenv
sub
int
mov
mov
mov
pusha
sub
scas
pushl
xchg
loopne
stos
dec
sub
out
dec
cmp
xchg
popa
xlat
fbstp
insl
push
cmp
or
xor
pop
loope
pushf
int3
lahf
pop
out
push
push
and
xchg
rcrb
cwtl
add
pushfw
push
push
and
jecxz
adc
pop
aam
mov
shrl
fwait
push
mov
pop
xor
int
fildll
hlt
or
mov
pop
fbstp
pop
and
add
in
cmp
push
das
hlt
imul
xor
pop
lcall
mov
shlb
inc
adc
js
out
cmpsb
mov
pop
sti
cmp
in
add
insb
int3
sbb
dec
push
mov
inc
mov
sub
sub
jb
lods
test
and
add
fwait
movsb
and
shr
mov
out
adc
fiaddl
dec
adc
jecxz
dec
push
adc
test
and
mov
iret
and
dec
nop
dec
jnp
ljmp
xchg
stos
inc
cmp
mov
hlt
and
or
xor
outsb
int
mov
dec
sub
mov
cmp
enter
je
add
loopne
jbe
cmpsl
pushf
mov
mov
lds
daa
jnp
jecxz
sti
jo
jno
repz
enter
stos
out
dec
jle
loope
movl
sbb
cmpsb
and
cmp
ficoml
xchg
add
dec
ret
aad
mov
leave
sub
les
add
push
mov
int3
sbb
aas
pop
cmp
jns
mov
mov
jecxz
fisubrl
cmp
data16
enter
jle
rol
adc
cltd
push
mov
push
inc
outsb
daa
xchg
popf
dec
frstor
sub
dec
or
mov
xchg
and
call
hlt
inc
pop
inc
outsb
jne
les
adc
nop
faddl
addr16
cld
stos
roll
sub
outsb
andb
adc
or
pop
mov
mov
push
std
cld
push
cmp
or
mov
add
test
push
daa
movsb
test
push
dec
outsb
sub
loop
fucom
and
push
aam
jne
cmp
sub
dec
pop
int
jmp
imul
insb
adcl
cmpsb
dec
adc
pop
nop
xchg
xchg
or
adc
jne
lea
adc
xchg
fs
cmp
and
jno
or
fldenv
mov
jbe
lea
stos
cmp
cmp
and
sub
insb
pushf
lea
and
das
lea
lea
shlb
cmc
cmpsb
cmp
push
mov
std
andb
lcall
pop
ja
xchg
adc
insl
cld
mov
out
mov
and
sbb
out
in
sbb
mov
addb
ja
xchg
add
and
scas
loope
scas
or
in
inc
out
scas
push
cmp
inc
jmp
push
push
clc
daa
mov
pop
movsb
push
stc
neg
mov
sub
out
orl
push
xchg
popa
and
int
or
mov
jb
xchg
and
xchg
bound
push
or
fcmovu
or
movsb
pop
xchg
jg
or
das
or
push
mov
sti
fwait
pop
cs
or
fistpll
fimull
mov
push
sbb
dec
xlat
fmull
mov
add
std
loope
lds
jg
andl
cmp
ret
jns
in
mov
push
sarl
lods
cmp
or
rcrl
jbe
xor
hlt
ret
fistpl
inc
int
or
adc
and
cld
add
insl
in
adc
imul
push
mov
push
sub
rol
fstpt
lods
dec
cwtl
mov
jecxz
adc
out
adc
rcl
addb
icebp
adc
pop
jmp
ret
add
hlt
push
ljmp
es
dec
push
cmp
cmp
insl
adc
mov
fsubl
cmp
mov
mov
jg
mov
mov
pushf
sub
jbe
sahf
ja
roll
cmc
jnp
movsb
fistl
popf
and
push
int3
or
cmp
mov
cli
mov
movsb
je
push
sbb
test
mov
daa
in
stos
adc
cld
lods
popf
adc
inc
fstl
rorl
mov
jbe
scas
cmpsb
and
and
movsb
fdivr
clc
testb
es
lods
pushf
lea
jb
call
or
mov
pop
lock
insl
rclb
push
push
lock
jg
inc
mov
rcll
dec
or
and
jl
jle
negb
in
adc
lret
fistpl
xchg
neg
sarl
dec
call
dec
xchg
faddl
adc
imul
push
cmp
enter
push
and
sbb
xor
cmp
aad
add
mov
inc
movsb
pop
ret
insl
jg
lock
enter
fsts
xchg
fcompl
test
inc
xchg
sbb
mov
movsl
cltd
inc
mov
and
and
sbb
or
loope
mov
adc
movsw
idivb
leave
fwait
push
jecxz
xlat
movsl
xor
xchg
xor
sbb
cmp
lcall
adc
inc
stos
fildll
inc
jl
pop
aad
sbbb
int
nop
js
fstpl
jmp
cmpsb
sbb
dec
jge
jbe
test
pop
outsl
mov
pop
xor
push
dec
xlat
test
sahf
test
lock
aad
dec
inc
sbb
mov
jbe
lea
mov
push
mov
cs
push
jl
shll
shl
xchg
loope
cltd
shr
cmp
cmpsb
das
pop
xor
mov
or
les
jnp
dec
sbb
and
jge
pusha
insb
and
inc
mov
jge
mov
or
mov
test
js
roll
aaa
or
and
pop
int3
jns
decb
scas
dec
adc
ret
mull
ljmp
je
pop
and
push
insl
sub
lahf
lcall
es
jecxz
push
cmp
ja
sub
bound
es
xchg
xor
addl
movsb
or
cli
mov
fucom
mov
push
cli
scas
rcll
js
sub
xchg
xor
pop
insl
in
mull
aas
loope
push
pop
and
mov
jl
aaa
xchg
stc
loopne
outsl
sub
sub
and
cmpsb
orb
xchg
mov
outsl
mov
cmc
bound
je
and
mov
imul
xorl
sub
mov
cld
lods
add
repz
mov
subl
lret
daa
ret
lret
dec
fidivrs
mov
and
cwtl
rol
pop
addl
aam
aaa
sahf
pop
int
lret
pop
cmp
mov
mov
push
jl
in
add
bound
lds
jbe
sti
adc
push
das
mov
pop
inc
les
and
xchg
push
out
les
adc
pop
pop
sub
mov
pop
xchg
pop
orl
sub
push
pop
in
test
inc
xchg
mov
fstp
filds
push
mov
add
inc
push
mov
add
les
mov
mov
xlat
shll
repz
notb
push
popf
push
or
lret
out
jo
in
leave
jp
clc
jno
je
pop
or
ds
into
testb
test
lcall
mov
ret
cli
push
xchg
insl
mov
rolb
adc
xor
movsb
xlat
sbb
and
orb
mov
mov
cltd
repz
jmp
je
imul
lods
xchg
out
subb
outsb
cli
scas
mov
sbb
addr16
mov
in
push
cmp
xchg
in
ss
mov
add
pop
pushf
jmp
jmp
sub
pop
mov
jmp
cltd
add
xor
xchg
adcl
shrl
scas
int3
jmp
sbb
xchg
lods
scas
and
icebp
lods
shlb
lods
cwtl
inc
jns
test
inc
add
or
lea
mov
xchg
bswap
xchg
subl
push
into
loopne
mov
fisttps
lds
xchg
and
push
sahf
pop
mov
arpl
dec
int3
pop
iret
sbb
das
in
shl
imul
jp
adc
loopne
ljmp
aas
cmp
mov
fsubl
fwait
loope
add
push
sbb
and
mov
mov
jns
sub
jnp
or
ror
mov
popa
mov
adc
dec
movswl
rclb
sub
mov
or
sub
and
mov
int3
add
dec
ds
mov
pushf
xor
adc
aas
cmp
leave
cltd
lcall
xchg
and
or
and
into
lods
add
pop
test
inc
nop
mov
xchg
xchg
daa
mov
inc
int
jns
cltd
sub
pop
jae
sub
jne
ljmp
std
pusha
or
out
cmp
popf
cmp
lret
pop
cld
inc
sbb
stos
jl
in
int3
test
aas
adc
stos
adc
or
mov
mov
sbb
and
dec
ja
incb
mov
or
mov
je
shrb
mov
pop
ret
sbb
scas
shlb
mov
stc
push
call
pop
inc
in
jae
and
insl
pop
lods
lds
stc
cwtl
lea
pushf
xchg
pop
sti
gs
jbe
jge
test
cmpsl
pop
les
dec
adc
mov
test
bnd
daa
jne
sbb
es
ret
cwtl
push
dec
loope
fstl
dec
and
stos
inc
inc
xor
lret
movsl
and
lock
lock
or
push
jno
adc
pop
or
nop
add
xchg
or
cld
sbb
or
xchg
fst
cmp
test
mov
push
cmpsb
sbb
push
sub
push
mov
mov
movl
clc
std
shrl
jmp
cld
leave
dec
test
test
jg
dec
lret
enter
int3
inc
xor
push
pushf
adc
std
push
nop
stos
pusha
ret
aaa
mov
adc
mov
call
sub
sub
mov
push
adc
and
inc
stos
adc
mov
sarl
pop
add
mov
add
push
rolb
push
sbb
out
jno
and
jecxz
xchg
mov
mov
decl
mov
dec
les
dec
or
inc
cmp
adc
xchg
int3
cmpsb
test
inc
mov
add
cmp
ljmp
and
popf
fnsave
inc
adc
pop
mov
or
xlat
pop
test
add
popa
dec
js
push
nop
dec
lods
jle
dec
aad
stc
mov
fwait
pop
aaa
out
xor
xchg
inc
push
loop
and
fistps
addr16
lcall
mov
insl
in
inc
ljmp
in
mov
sub
inc
adc
dec
mov
pop
outsb
testl
call
xchg
cmc
fisubrs
mov
loopne
sbbb
aaa
mov
xor
add
es
insb
adc
lods
xchg
dec
fwait
lock
fcmove
add
test
test
popa
xchg
scas
mov
cmp
arpl
fs
xor
push
insl
push
testb
cmp
iret
aaa
call
insl
fdivs
cmp
pusha
or
into
dec
pop
jecxz
push
loopne
and
shrl
or
mov
adc
mov
cld
mov
sti
fmul
adc
shrb
xor
sahf
lcall
leave
jae
shlb
inc
repz
sub
xchg
ja
dec
cmp
adc
xorl
mov
pop
scas
and
lock
or
out
fcoms
insb
or
xchg
out
cltd
dec
std
mov
in
mov
aad
push
jg
push
loopne
inc
adc
stos
cmp
rolb
sbbl
roll
jle
mov
dec
enter
in
inc
mov
subl
aas
fwait
dec
push
stos
jle
rcr
dec
lret
out
fnstcw
int3
and
jo
dec
sahf
fsubl
aam
aad
decl
mov
or
push
fstl
mov
or
pop
add
sti
push
divl
orb
jle
jbe
inc
sub
push
fld
movsb
jg
pop
add
movsl
inc
incb
lret
pop
lahf
mov
addl
bound
sbb
dec
arpl
pop
and
push
popf
lds
cltd
xor
and
sti
loopne
daa
gs
mov
int
and
add
xor
js
test
dec
xor
ret
mov
jmp
fistpl
mov
test
ss
push
out
xchg
sbb
pop
into
rorl
add
push
cmc
es
add
cli
lret
xchg
add
jb
call
push
cmc
mov
dec
mov
shll
mov
lcall
add
push
push
add
cmp
inc
cmpsb
mov
lds
pop
mov
cli
push
pusha
or
cmp
mov
int
sti
sti
imul
enter
lcall
dec
lcall
subb
cmp
loop
adc
sub
inc
and
int3
ror
cld
xor
movsl
outsb
inc
push
imul
pop
rcl
adc
rcr
aaa
and
cmpb
sti
mov
test
jno
adc
das
mov
pop
jb
lock
push
xchg
in
loopne
int
sub
push
inc
sbb
jns
cmp
sti
cs
repnz
je
mov
mov
xor
fisubs
outsb
sub
adc
leave
loopne
mov
mov
xor
filds
cs
cmpsl
mov
dec
mov
xor
adc
test
mov
mov
ja
mov
and
movsb
je
or
jmp
cmp
adc
daa
insb
loope
jnp
sub
pushf
lret
ret
movsb
jae
and
or
test
hlt
adc
pop
jne
push
icebp
jl
lods
fucomip
popf
and
lret
std
sub
gs
lock
sbb
push
push
jns
cmp
add
movsl
pushf
mov
sub
sbb
fsubs
popf
js
lcall
sbb
das
das
add
add
sbb
ret
pop
xorb
gs
adc
cwtl
outsl
cmpsl
push
sbb
xor
inc
xorl
pusha
xorl
stos
shlb
inc
stc
lock
xor
or
and
outsl
cld
pop
mov
enter
cmp
fbld
push
sbb
movl
inc
movsl
mov
cmpsl
ss
leave
arpl
repz
or
xlat
xor
and
clc
lods
xchg
xor
jge
sarb
dec
jns
mov
xchg
push
call
jcxz
fmuls
or
jnp
xor
pop
or
jnp
add
jle
jp
out
pusha
loop
imul
popf
mov
js
push
outsb
mov
push
cwtl
add
mov
mov
jp
lds
je
mov
imul
test
ficoml
repz
test
insl
das
sub
fdiv
shrb
repnz
cmp
orb
pop
enter
int
repz
std
mov
or
test
daa
adc
pop
mov
addr16
push
repnz
inc
ds
jb
or
lret
test
xchg
dec
push
loopne
arpl
pop
jmp
mov
jno
jecxz
call
add
pop
ret
adc
push
xchg
bound
cmp
loope
mov
ret
sbb
pusha
jo
lock
outsl
ja
outsl
xor
inc
addr16
popf
sub
or
push
notl
inc
subl
loop
mov
add
xchg
imul
insb
int
sub
and
pop
inc
fidivl
mov
leave
xchg
push
rorb
int3
cmpsb
insl
jecxz
xlat
xchg
movsl
xchg
cmp
adc
cmp
mov
jg
xchg
scas
push
in
mov
xor
add
sahf
cmp
andb
cmp
shrb
xchg
cmpsl
dec
and
movsl
adc
adc
or
cmc
adc
and
cld
ds
add
les
adc
push
pop
jmp
sub
sahf
xchg
inc
jns
pop
rorl
mov
jns
push
repz
loopne
jo
ret
cmp
jl
inc
mov
aad
icebp
cmp
mov
test
ja
dec
test
lret
xor
adc
testl
sub
popf
pusha
jp
pop
aas
ret
xor
aam
or
inc
pusha
add
jns
out
cmpsl
xchg
push
xor
repz
lret
rcrl
fdivrs
std
out
mov
loopne
call
in
jg
push
out
jg
pop
addb
sbb
into
push
or
loope
mov
add
out
aam
int3
rdpmc
call
hlt
push
orb
add
in
dec
mov
es
sbb
dec
dec
fwait
hlt
push
test
inc
push
dec
popf
imul
pop
lds
add
int
lahf
ljmp
outsl
mov
add
jge
pop
ret
xchg
cs
aam
jns
dec
hlt
lret
xchg
stos
leave
gs
dec
idivl
add
push
inc
push
popa
insb
mov
xchg
dec
daa
fsts
sbb
inc
fs
jp
scas
sbb
fists
jno
add
push
mul
adc
xchg
mov
subl
bound
std
jne
leave
cmpsl
or
stos
sar
rcll
das
bound
out
mov
loopne
fmull
mov
xor
or
xlat
push
lea
in
jo
outsb
roll
mov
jne
fwait
add
xor
push
sbb
js
je
ret
mov
jle
mov
ss
cld
in
sub
imull
and
scas
ja
pop
mov
cwtl
dec
add
sub
mov
cld
push
data16
adc
jg
addb
or
xchg
cltd
fdivl
ds
cmc
mov
add
into
test
sbb
inc
cmp
pop
repz
inc
sarl
aas
aaa
inc
mov
cmpl
ja
mov
xor
xor
fnstenv
push
in
inc
push
enter
mov
int3
cld
push
rol
mov
lret
pop
pop
fcmovnbe
or
js
xchg
stos
lds
cmp
push
sbb
dec
adc
cli
cltd
aam
int
enter
js
xchg
pop
cmp
lods
fcomps
jnp
add
aam
push
mov
lcall
and
les
mov
push
sahf
into
add
sub
dec
pop
jecxz
or
xor
push
inc
mov
loop
jb
test
inc
lea
mov
mov
pop
inc
sbb
pop
lret
cmpb
icebp
mov
cmpsl
aam
jl
mov
cmp
insl
jp
adc
dec
pop
mov
jns
fisttpll
sub
mov
pop
xchg
aaa
ss
sub
lock
mov
xor
popa
enter
or
jae
dec
les
jae
or
fiaddl
dec
cs
repz
nop
jne
ret
fidivs
les
mov
cmp
push
mov
jmp
xor
inc
roll
mov
cmp
das
fwait
mov
cwtl
sub
mov
or
xchg
fidivrl
add
adc
push
or
stc
ret
les
lds
mov
data16
inc
adcl
xor
mov
inc
sub
jae
pop
inc
fsub
cmp
pop
jae
sahf
jae
fistpll
flds
push
in
pop
sub
push
dec
movsb
cltd
icebp
push
dec
add
fadds
sti
jmp
push
jge
sbb
xor
cmp
out
mov
or
test
pop
or
pop
xchg
outsb
mov
popf
mov
or
push
das
push
xchg
fidivs
jb
frstor
shl
add
xor
mov
lret
and
aas
stc
mov
mov
xor
in
inc
push
out
insl
jp
adc
xor
orb
dec
negb
mov
add
pop
pop
ficompl
out
fs
cltd
or
adc
mov
je
mov
pop
aas
sub
pop
cltd
push
push
jmp
lret
fwait
cmp
addl
add
lock
dec
xor
mov
test
das
add
scas
dec
or
jmp
test
pop
dec
push
in
xchg
jp
fistpl
shlb
das
mov
add
test
mov
and
loope
or
mov
lcall
pop
mov
mov
jbe
xor
xor
icebp
popf
shll
dec
ja
outsl
push
daa
or
inc
pop
dec
cmp
fists
add
rcrb
push
adc
jmp
pop
hlt
sbb
cmp
jne
xchg
ret
fs
daa
js
mov
cmpb
mov
adc
out
push
xchg
xor
lods
lahf
cwtl
xchg
loop
sbb
ljmp
sar
ret
mov
sbb
notl
push
mov
cmc
mov
dec
inc
mov
popa
jecxz,pn
mov
adc
mov
pushf
ret
enter
andnps
das
cmp
xchg
ret
jecxz
add
test
xchg
jmp
sbb
mov
xor
insl
cld
js
es
add
lods
das
lret
xchg
test
sahf
xchg
lahf
and
fmuls
not
xchg
cmpsb
dec
dec
mov
popa
mov
outsb
ljmp
push
adc
dec
mov
or
jns
ja
jo
mov
pop
lcall
mov
mov
push
inc
mov
data16
icebp
ret
out
loopne
pop
xor
xlat
les
lret
and
jo
aas
mov
mov
mov
jmp
mov
inc
inc
xor
mov
sub
outsb
cmp
push
js
fs
sub
xor
or
xor
adc
mov
xchg
insl
xlat
xchg
icebp
in
jnp
fdivs
je
mov
mov
loope
out
mov
pop
test
and
insb
dec
cld
loope
test
and
inc
incl
rclb
push
or
adc
adc
pop
insb
imul
xor
cli
clc
jne
and
xchg
dec
pushf
movsl
jg
mull
xor
mov
sub
add
dec
ljmp
dec
test
push
test
or
lods
sub
xchg
jmp
out
and
mov
out
xchg
icebp
mov
xorl
ja
aaa
cmp
dec
in
jne
pop
sub
sbb
xchg
lret
nop
xchg
sbb
test
push
mov
sbb
push
cmp
rorl
mov
aaa
cltd
out
popa
xchg
mov
inc
add
push
gs
ret
mov
jne
popa
cmpsb
sbb
xchg
iret
inc
mov
lcall
or
movsl
jmp
sub
daa
hlt
or
mov
push
jno
je
cmp
adc
dec
xchg
cmp
repnz
sub
sbb
mov
sub
xor
subb
mov
xchg
scas
mov
push
mov
inc
push
out
push
adc
push
aam
jle
les
lds
mov
mov
push
out
mov
add
das
xor
or
push
jecxz
jns
xchg
add
dec
add
cli
jnp
pop
scas
ss
push
mov
adc
lods
ret
testl
and
push
and
inc
jg
loop
add
call
stos
mov
in
xor
mov
and
test
test
aam
and
push
sub
lcall
adc
and
xchg
aad
in
sub
fs
xchg
inc
push
add
xor
in
jno
inc
ds
daa
call
ljmp
cmp
out
stos
and
add
pop
pop
in
xor
dec
jo
scas
push
lods
or
out
scas
mov
pop
xchg
cli
loop
mov
cmp
mov
cli
mov
les
fmuls
jp
or
sbb
mov
in
sub
cmc
cmpsb
lock
or
loope
in
jnp
repnz
cmpsl
mulb
or
out
push
shlb
fildl
idivl
lea
cs
in
cmpsl
push
push
mov
mov
fldenv
add
daa
lea
sbb
dec
scas
sub
mov
add
lea
sahf
inc
adc
mov
arpl
sti
jecxz
dec
cmp
movsl
dec
and
xor
sub
js
fcompl
mov
mov
ret
dec
into
fistpll
leavew
jp
cmp
mov
mov
mov
push
push
mov
rclb
push
in
imul
call
dec
ds
daa
leave
and
xchg
repnz
rorl
mov
mov
mov
inc
add
mov
filds
aaa
cld
inc
jae
xorb
push
sbb
enter
or
loop
add
mov
scas
loop
push
adc
jg
fs
push
clc
enter
and
mov
cmp
mov
pop
cltd
enter
sbb
jl
add
xorb
not
cltd
pop
addl
adc
clc
data16
push
xchg
stos
cmc
scas
outsb
adc
imul
cld
pusha
jb
push
rcrl
sbb
push
add
imul
loope
repz
les
adc
lret
add
mov
xchg
lret
mov
adc
adc
inc
pop
aaa
mov
fwait
sub
outsb
paddw
rorl
and
sub
hlt
cmp
or
pop
faddl
lea
scas
cmp
fiaddl
or
sub
xchg
dec
data16
ss
shll
dec
fcoms
adcl
jnp
and
cmpsl
and
mov
lods
lds
scas
mov
sub
adc
js
mov
xchg
fldcw
push
inc
sbb
inc
leave
imul
adc
sarl
pop
scas
xchg
or
cltd
fbstp
rcrl
sbb
mov
lret
cmp
test
rorl
fistps
adc
adc
mov
mov
jg
dec
or
xchg
rcr
stos
subl
popa
mov
sbb
mov
push
fsincos
data16
cmp
jmp
cwtl
pop
push
push
out
lock
loop
xchg
adc
add
es
hlt
jb
pop
testl
fstpt
dec
enter
cmpsl
push
jmp
mov
ret
mov
int3
incl
pop
fstpl
ss
and
xor
movsl
inc
icebp
popa
repnz
mov
pusha
lods
sbb
out
out
sub
ljmp
pusha
je
sbb
fwait
rcrb
test
add
sub
sbb
mov
inc
xchg
and
sbb
push
cmpsb
and
test
dec
lcall
in
mov
out
cmp
xchg
in
rclb
ljmp
xor
jecxz
fldenv
push
inc
iret
push
pop
add
cltd
add
dec
nop
mov
lods
and
inc
mov
mov
lcall
fucomp
mov
les
mov
imull
sbb
data16
in
popf
repnz
xchg
xchg
inc
lea
mov
sahf
jmp
into
inc
shrb
lret
xchg
lea
pusha
les
sbb
fists
nop
sbb
cmpsl
movsb
mov
push
mov
shlb
push
shll
or
mov
or
je
cmc
jno
sub
andb
out
and
or
dec
and
push
in
mov
nop
jb
clc
sbb
add
aaa
mov
cmp
ljmp
cmp
nop
lcall
add
hlt
xchg
sub
lahf
add
out
enter
popa
and
fcomps
fdivrs
sbb
jbe
std
inc
xor
mov
push
cs
jp
push
dec
dec
xchg
fisttpll
nop
iret
imul
mov
mov
push
jecxz
or
pop
aad
mov
popf
jge
and
push
in
sarl
sbb
pop
loopne
imul
pop
mov
iret
adc
aaa
ja
mov
dec
ds
sbb
addl
movsl
arpl
mov
push
mov
aad
mov
mov
pop
push
call
iret
push
dec
cwtl
addb
sbb
cmp
inc
lods
or
testl
outsl
sub
cli
push
ret
lock
out
dec
mov
cmp
cmpsl
and
jno
data16
add
out
or
xchg
mov
negb
and
xchg
fldt
xlat
pop
paddsw
in
mov
sub
decl
xchg
cmp
iret
or
out
pop
inc
loop
mov
pusha
and
pop
in
inc
testb
shrl
iret
dec
pop
lea
scas
mov
sbb
pop
movsl
add
fisubrs
jne
lods
aas
mov
ja
lahf
push
lea
adc
out
jg
push
mov
or
addb
addl
xor
ss
and
sub
popf
das
cli
xor
hlt
jl
ja
inc
notl
sbb
dec
test
cmpsb
sbb
pop
adc
add
int3
xchg
xchg
pop
cmpsb
addr16
out
pushf
leave
int
mov
or
sbb
adc
jg
aad
sbb
push
stc
enter
stos
repnz
pop
and
push
dec
iret
scas
jbe
out
imul
pusha
cli
dec
jg
and
mov
jl
mov
and
ret
mov
add
in
jmp
sahf
leave
cmp
leave
lcall
cmp
inc
outsb
sbb
jb
bound
jle
enter
add
push
test
dec
mov
mov
add
pop
sbb
cmp
repnz
icebp
out
push
ljmp
gs
jp
mov
ljmp
mov
or
ffree
push
ds
popa
int3
jg
or
leave
stc
mov
fsubrl
bound
pop
push
fcmovnbe
jl
xor
mov
lea
mov
subb
stos
dec
push
cmp
stos
dec
notb
cmp
nop
xor
insl
outsb
lods
xlat
rcrb
std
xchg
ds
add
sbb
sub
pop
mov
pop
movsb
pop
inc
shll
sahf
mov
sbb
xchg
cmpsb
jmp
inc
pop
aas
add
sbb
and
fidivrl
popa
cmp
lods
gs
dec
mov
or
mov
lahf
mov
lret
scas
jne
lds
push
xchg
icebp
rep
test
call
ficomps
jp
ret
daa
and
cmpsl
mov
cmpsl
in
sub
pop
jp
push
inc
inc
loope
xlat
xor
push
mov
rcrb
popa
dec
inc
adc
rorl
outsb
or
adc
sub
enter
pop
ds
shr
pop
icebp
pop
mov
mov
jno
pop
pop
fs
dec
or
mov
adc
xorb
lret
pop
xchg
jmp
mov
or
xor
dec
xor
xchg
cli
mov
xor
jne
mov
push
push
or
lods
scas
sub
scas
cmp
dec
adc
addr16
sbb
lahf
pop
mov
sbb
in
inc
pop
xchg
in
repnz
push
mov
jae
test
or
mov
cmpsl
outsl
cmovae
sbb
pop
sub
and
cmc
iret
fisubs
and
flds
fwait
sbb
inc
scas
loopne
in
push
mov
rolb
jno
das
std
out
out
inc
sub
pop
lret
and
test
inc
js
cmpsl
lods
xor
popa
les
mov
out
orb
push
mov
mov
clc
xor
imul
xor
dec
mov
xor
in
repz
inc
fidivrl
sub
cmp
sbb
push
or
fmull
fs
sbb
cmpsb
push
fnstcw
pop
fs
ja
movsb
add
and
lds
add
aas
and
add
nop
jg,pt
in
ljmp
xchg
push
cwtl
sbb
int
xchg
daa
push
lret
xchg
mov
in
lods
cmp
fs
sub
cmp
adc
dec
mov
and
add
gs
ret
pusha
sbb
cmp
in
ljmp
scas
dec
xchg
mov
pushf
xlat
decl
bndldx
pop
push
cmp
ret
int
fwait
sub
push
and
xchg
sub
dec
ljmp
push
inc
test
or
in
js
cwtl
data16
inc
sbb
dec
xchg
mov
mov
nop
jmp
add
movsl
xor
repnz
inc
ja
adc
jns
sub
jp
fimuls
mov
dec
mov
loope
pop
addr16
das
or
and
or
xchg
cmp
adc
pop
arpl
mov
mov
xlat
mov
push
sub
test
pop
aad
out
shll
sbb
xchg
and
out
in
lahf
push
jg
lcall
mov
enter
out
mov
push
dec
mull
jns
mov
or
fwait
mov
imul
or
pop
fwait
adc
lods
inc
aam
sbb
push
outsb
cltd
mov
addl
repnz
cmp
repnz
test
pop
lahf
insl
mov
adc
push
jnp
fildll
inc
pop
inc
jmp
and
dec
pop
push
and
adc
dec
jne
js
les
mov
popf
leave
adc
pop
push
jbe
stos
mov
inc
push
in
imul
push
xchg
adc
pop
clc
dec
incl
xor
das
mov
inc
test
adc
icebp
popf
push
jnp
rcrl
movzwl
out
or
out
lods
fidivrs
mov
mov
inc
sub
push
int
js
insl
add
in
mov
cmp
in
lods
mov
push
xor
pop
xchg
pop
and
cmpsb
push
popf
lods
ljmp
cmp
or
mov
call
fisttps
mov
popf
push
push
or
dec
pop
mov
jnp
rcrb
sub
mov
leave
pop
aaa
mov
cmp
fldcw
pop
out
pop
jecxz
ja
loope
movsb
mov
lods
popf
cmc
cltd
movsl
test
cwtl
mov
and
sbb
int
cmp
in
pop
jne
les
inc
mov
inc
xchg
rolb
nop
enter
into
js
ds
jns
divb
test
pop
fadds
cld
mov
outsb
add
mov
jmp
push
jle
clc
inc
mov
es
fsubl
outsl
cmc
cmp
imulb
fnstcw
fwait
aas
cmp
sahf
enter
daa
movsl
insb
addl
shrl
xchg
xchg
sub
sbb
dec
jo
enter
hlt
mov
sub
stos
jecxz
aad
dec
push
inc
push
out
les
xchg
adc
movsb
mov
mov
xor
and
mov
dec
out
mov
and
push
xlat
jl
ja
jno
in
cmp
in
xchg
or
cmp
out
scas
clc
mov
fwait
nop
mov
mov
sbb
fsubl
fisubrs
call
or
pop
mov
mov
inc
in
pop
mov
mov
lds
mov
or
aad
fcomps
in
jmp
or
fwait
nop
scas
push
xchg
mov
xor
cmpsb
sub
dec
fisttpll
sbb
jp
inc
pop
and
xchg
jle
fildl
imul
push
xchg
add
xchg
xchg
inc
ds
repz
cmp
mov
pop
les
dec
mov
lods
jno
cmp
mul
push
mov
std
push
sub
jns
mov
jge
adc
ja
sbb
jle
lea
jb
xor
aam
into
mov
shlb
fstl
push
fcoml
fdivrl
stc
adc
sti
ljmp
scas
cmp
inc
adc
add
add
idivl
xor
aas
xor
cmpsb
xchg
inc
push
pop
xchg
xor
test
and
scas
cmp
fdivr
sahf
out
jae
loop
aas
cmp
pushf
dec
mov
lea
clc
loop
bound
fcompl
lret
hlt
push
adc
adc
xor
cmp
xor
lock
cmp
cmp
or
flds
pop
cmp
push
dec
add
jl,pt
inc
mov
inc
xor
inc
push
pop
imul
push
loope
aam
mov
cwtl
or
jnp
add
cmp
into
in
dec
adc
int
repnz
jns
int3
fisttps
aam
add
add
mov
and
sub
mov
or
test
xor
push
cwtl
dec
sbb
pop
push
inc
cmp
lcall
inc
loope
mov
adc
mov
mov
js
outsb
rcll
mov
mov
cmpsl
mov
xor
push
addl
mov
jmp
or
xchg
add
adc
mov
icebp
xor
or
sub
lret
leave
sub
jbe
push
or
push
sub
cmp
xor
or
das
js
inc
addb
push
inc
xchg
mov
cmp
mov
rcll
repnz
in
mov
out
add
jle
xchg
cmp
icebp
mov
xchg
cs
sub
jecxz
sti
lds
sbb
sub
cmpsl
repnz
inc
rorb
or
jne
in
addl
shlb
push
aas
cmp
shrb
push
jl
outsb
inc
outsb
lcall
dec
fld
mov
mov
lcall
aaa
pop
add
mov
inc
xchg
jno
mov
int3
mov
xchg
movsb
mov
out
ret
pop
add
cmpsb
cmc
adc
jge
adc
test
xor
lock
out
adcl
pop
movsl
pop
dec
test
test
out
lcall
jae
jmp
popf
enter
les
cmc
pusha
aad
imul
inc
loope
mov
push
div
push
cltd
mov
std
clc
xlat
popf
test
imul
sub
dec
jle
leave
lds
sub
arpl
lock
dec
and
cld
movsb
outsl
jno
xor
addb
cmp
repnz
sbb
sbb
repnz
mov
cmpl
enter
jb
add
lahf
pop
inc
or
mov
sbb
mov
jp
fisttps
add
cwtl
mov
lock
lock
pop
aaa
repz
and
out
xchg
sub
ret
push
xchg
int
inc
into
movsb
cwtl
jge
dec
stos
fistpl
mov
stc
push
inc
jae
jbe
adc
or
inc
popl
sub
in
lods
icebp
cwtl
out
outsb
into
jp
test
and
in
and
xchg
aaa
xor
or
jl
mov
jmp
cmpsb
test
mov
scas
mov
inc
mov
loopne
inc
or
mov
out
mov
mov
mov
fwait
sub
mov
push
push
xor
push
cltd
sub
inc
leave
push
insb
dec
dec
inc
mov
dec
push
in
pop
daa
mov
mov
js
mov
cli
pop
sub
inc
xor
outsl
push
cwtl
mov
mov
out
push
push
mov
cli
roll
push
cmp
aam
jae
insb
or
xor
adc
sarb
stos
pop
dec
mov
lahf
dec
shlb
cmc
mov
jo
nop
and
mov
cli
les
sbb
lods
push
adc
fwait
sub
jno
out
mov
test
sbb
aam
test
sub
mov
cmp
dec
pop
nop
inc
pop
out
pop
push
movl
or
or
repnz
aam
dec
jb
mov
push
mov
out
mov
arpl
xor
sti
jmp
cmp
cmp
sbb
das
and
cld
mov
inc
int
fadds
or
mov
adcb
sub
popf
xchg
mov
rorb
ficomps
ljmp
mov
into
cltd
in
pop
test
xor
pop
push
insl
std
push
cmp
sub
popf
stc
cmp
jle
sub
testl
icebp
addb
popf
push
into
or
aam
cltd
xchg
add
pusha
clc
xchg
mov
push
decb
jbe
inc
and
or
ljmp
sbb
cs
mov
test
jecxz
mov
std
adc
fdivrl
pushf
xor
jno
dec
ret
pusha
jae
test
inc
sar
out
inc
nop
adc
mov
mov
enter
mov
shlb
ret
jg
test
dec
out
cmc
push
in
pop
pop
mov
add
pop
xor
test
fucomp
and
imul
scas
ss
fcoms
popa
add
mov
pop
lret
xor
inc
jbe
scas
shrb
cmp
fsubr
pop
jno
fisubs
imul
fildl
loopne
jle
ret
jmp
loop
adc
inc
mov
lret
push
gs
testb
cltd
xor
jle
addb
mov
jecxz
inc
xlat
xchg
add
fs
fcoml
jmp
lods
scas
les
clc
or
cmp
xor
popa
inc
lds
or
nop
call
sbb
aas
jl
xchg
jmp
sbb
mull
xor
pop
outsl
pop
mov
andb
xor
jbe
test
jo
pop
mov
push
mov
add
dec
js
in
and
int3
bnd
pusha
scas
lcall
gs
jmp
mov
daa
xorb
shl
mov
mov
mov
das
and
pop
xchg
lods
movsb
pop
pop
sbb
cmp
mov
js
xor
cs
sbbl
pop
jbe
or
std
mov
ds
push
inc
dec
out
add
mov
xor
fbld
sbb
mov
xor
ret
cmp
sub
xchg
xor
dec
sti
inc
shlb
test
add
shrb
jno
adc
cmp
out
outsb
jb
leave
add
mov
popf
jbe
dec
loopne
cmp
dec
push
fistpll
xchg
testb
mov
inc
pop
test
cli
shrl
movsl
imull
sbb
lds
adc
test
dec
sub
pop
fmull
or
test
inc
sub
aas
mov
xor
outsl
call
pop
mov
ret
jmp
xchg
addl
repz
clc
sub
fisubl
pop
inc
jns
lcall
leave
pop
int
insl
pop
cmpsl
add
inc
mov
rcrl
pusha
mov
adc
bound
sahf
adc
cs
lods
lods
sub
xchg
icebp
xor
sbb
int3
adc
imulb
test
ljmp
dec
inc
pop
inc
fdiv
in
test
outsb
jge
push
outsb
outsb
jnp
inc
jp
repz
and
sbb
cmp
ss
add
jns
hlt
mov
mov
je
ret
je
jp
mov
or
test
xchg
out
rclb
or
xchg
fnstcw
out
test
mov
sbb
push
jb
ds
fsin
lret
lods
rcrl
mov
in
xchg
je
and
jmp
adc
add
in
test
movsb
lods
inc
pop
lds
pop
add
icebp
pop
cwtl
xchg
or
fildll
lea
shll
leave
dec
nop
into
jmp
testb
xchg
mov
inc
cli
pop
fidivrs
xor
flds
mov
mov
cltd
addr16
jno
inc
mov
movsl
inc
mov
imul
dec
sbb
pop
xor
cld
es
sub
shrl
sbb
jns
sub
sbb
cltd
call
icebp
add
mov
pop
andl
sahf
and
or
shlb
lds
cmp
cmpsl
jne
or
xor
bnd
xor
sbb
cltd
data16
mov
lret
decb
mov
outsl
adc
addr16
loope
pop
pop
adc
cli
mov
push
dec
insl
sub
add
mov
xchg
aad
xchg
mov
je
decl
cld
in
jecxz
sub
sub
mov
cwtl
out
jns
xchg
jno
xchg
loope
cltd
cs
or
fcomi
dec
mov
jg
data16
enter
mov
out
sub
xchg
adc
xchg
in
push
sbb
stc
add
adcl
cmp
mov
mov
push
lods
imul
out
push
out
or
dec
stos
xchg
addr16
adc
test
test
xchg
iret
ljmp
xor
sbb
mov
lcall
sbb
icebp
jge
mov
outsb
cmp
sub
scas
cmp
dec
test
add
xchg
lock
shrl
in
push
rcl
jecxz
and
iret
nop
enter
imul
pusha
std
dec
xor
mov
mov
mov
push
dec
adc
test
dec
jmp
lret
mov
flds
sbb
lods
lods
sbb
jb
negl
push
lcall
pop
jecxz
sub
inc
xor
and
lret
push
ret
out
sahf
int3
mov
shll
sub
or
clc
out
adc
out
xor
test
sahf
jmp
sub
loope
std
les
jne
pushf
ljmp
xchg
jmp
dec
popa
fwait
subb
das
lods
cs
out
insb
jmp
aam
sbb
fstpt
mov
popf
popf
pop
lahf
xchg
imul
cwtl
ss
in
call
lcall
inc
and
fucomi
fnstenv
and
imul
mov
aaa
stos
and
icebp
push
mov
test
mov
movb
mov
or
mov
add
push
cmp
cmp
aas
call
mov
dec
sarb
push
fs
outsb
dec
cltd
pop
in
inc
loope
jge
xlat
inc
jecxz
loopne
daa
mov
xlat
push
scas
std
fbstp
mov
je
push
in
adc
mov
adc
bound
and
pop
imul
in
jecxz
dec
data16
adc
adc
dec
lods
popa
mov
inc
adc
inc
shlb
mov
mov
sub
popa
fildl
xchg
xchg
adc
or
js
xor
into
adc
sarb
sub
add
sub
addb
sub
and
call
jae
stos
imulb
fs
call
lea
add
pop
jmp
sbb
pop
testl
enter
sbb
cmp
lods
mov
arpl
dec
scas
jmp
sub
mov
dec
loopne
xchg
mov
cmc
decl
or
push
xlat
pushf
or
ret
lds
pop
fucom
adc
add
push
test
mov
fimuls
adc
stos
icebp
xchg
loopne
mov
mov
stos
dec
mov
rclb
xor
std
dec
mov
jecxz
mov
xor
aas
mov
or
sbb
ret
aaa
jb
sbbb
mov
add
ret
lahf
mov
inc
push
xor
sub
outsl
iret
and
mov
in
sub
popa
pushw
shrl
aam
mov
in
fdivrs
xchg
out
pop
int3
cmpsb
inc
jecxz
dec
xchg
xor
mov
hlt
pop
pop
mov
jmp
adcl
add
adc
and
inc
push
idivb
add
enter
fs
push
out
dec
daa
sbb
jge
xchg
outsb
mov
js
jb
popf
mov
lcall
lds
mov
lods
lcall
les
mov
scas
loop
mov
add
sub
sub
add
xchg
lds
out
jmp
xchg
inc
dec
xchg
push
out
mov
cmp
mov
mov
ret
xorl
cmp
dec
loope
push
or
inc
dec
lods
lcall
lds
push
roll
mov
fs
sub
push
es
sub
scas
aas
icebp
mov
pop
add
enter
jge
xor
popa
sbb
jbe
stos
or
mov
mov
xor
lds
in
mov
prefetch
fdivr
mov
lret
xor
and
mov
andl
je
xor
imul
repnz
movsl
sbb
mov
jns
dec
lods
push
popa
jl
sub
mov
or
frstor
sub
push
push
mov
clc
cmpb
add
dec
cmp
mov
test
xor
push
sub
testb
mov
loopne
fisubrs
push
scas
mov
popw
iret
cmp
jne
negb
in
in
shrl
dec
bound
xchg
out
jbe
sbb
pop
test
data16
popf
push
mov
rolb
adc
mov
int3
inc
pop
add
jns
push
add
imul
mov
jp
enter
idivb
mov
stos
iret
jae
lock
lds
dec
xor
out
std
sub
movsb
js
call
js
pusha
lock
popf
fsubs
xchg
xchg
push
inc
aam
or
pushf
pop
xchg
loope
fsts
shl
push
or
add
jmp
je
mov
and
out
in
sub
lods
lods
rcrb
xchg
sub
mov
pop
add
push
add
movsl
xchg
aad
mov
lret
aaa
mov
popf
shrb
sahf
dec
dec
add
call
popf
and
les
xlat
dec
sbb
test
gs
sbb
das
imul
fwait
out
push
jmp
jne
inc
add
jne
xor
mov
icebp
movsl
mov
xlat
xchg
ret
bound
ljmp
push
mov
jecxz
mov
add
jns
aad
sub
lods
pop
jae
data16
mov
jp
into
jo
pop
cltd
test
jns
jns,pt
int
mov
aad
test
push
push
inc
inc
inc
out
scas
push
aam
mulb
xchg
adc
mov
or
pop
cltd
sub
and
add
mov
adc
sub
into
imul
lds
lret
inc
cmc
movsb
push
out
test
push
pop
das
stc
outsl
xor
push
push
aas
bound
popw
lcall
mov
test
rclb
mov
cmpsb
xchg
bound
popf
push
stc
call
aad
out
mov
dec
fimull
fs
loop
jo
rolb
mov
push
fsubl
cmp
shrb
sahf
clc
push
and
lock
rep
xlat
dec
pop
cmpsl
js
in
dec
push
test
jb
dec
enter
iret
mov
dec
inc
cs
add
mov
dec
add
jl
pop
ret
mov
fidivl
pop
add
fdiv
daa
push
ret
sahf
pop
outsl
insb
pusha
push
cli
dec
subb
outsl
or
icebp
push
adc
fidivs
cli
pop
fwait
lock
mov
xchg
inc
pop
pop
xlat
pop
mov
bound
cmpsb
mov
lret
aad
sbb
mov
pushf
lret
mov
out
sbb
mov
test
stos
lret
pop
or
xchg
push
pop
xchg
pushl
mov
clc
lret
call
ficoml
or
shll
movsb
popa
or
inc
fcom
and
adc
xor
js
add
mov
mov
mov
das
sbb
out
adc
neg
repz
mov
pusha
xchg
xor
hlt
rolb
shlb
sbb
and
xchg
sub
inc
sub
adc
mov
dec
repz
mov
out
jno
pop
push
mov
lret
mov
xor
fisttpl
adcb
mov
pop
jmp
pop
pop
insb
pushf
mov
fs
cli
lock
fdivrs
jo
cmp
and
inc
in
call
lret
daa
mov
arpl
repnz
in
int3
xor
repnz
addr16
imul
arpl
jecxz
cli
xchg
push
inc
rcll
mov
wrmsr
decb
aam
cmp
jle
push
mov
mov
mov
repz
fcomps
adc
xor
xor
cmc
xor
ja
test
mov
add
mov
inc
sub
inc
push
test
and
out
frstor
sbb
push
inc
fwait
mov
loop
push
cmp
push
pop
cwtl
cs
dec
add
stos
jbe
pop
insb
sub
jle
cmc
scas
jp
adc
test
decl
pop
test
sub
dec
rcrb
ret
js
aam
dec
aad
add
ss
pop
push
int3
push
dec
cwtl
mov
lcall
add
jne
add
xor
push
insb
push
push
out
ficompl
cmp
incb
inc
jns
sbb
imul
je
mov
push
inc
iret
dec
cltd
jmp
jg
lcall
or
pop
add
clc
or
xor
addb
xorl
jl
push
popf
pop
subb
cmp
xchg
out
dec
jmp
test
sub
cs
shrb
es
pop
mov
ss
xchg
jae
push
incb
pusha
nop
mov
dec
into
or
push
dec
outsb
push
pop
jl
cwtl
sbb
or
push
inc
add
inc
leave
dec
fmull
lahf
mov
add
mov
mov
shrl
cmp
pop
loope
cmpsl
sbb
jns
mov
subb
adc
outsb
out
mov
dec
scas
xchg
es
mov
popa
add
inc
ljmp
pop
mov
rcpps
dec
leave
push
cmp
decl
outsl
dec
fstpt
lahf
imul
jecxz
outsb
xchg
cmpsl
cmc
pop
dec
fprem1
cmp
xor
mov
and
sarl
mov
nop
jg
add
cltd
jno
and
inc
fisttpll
cld
dec
ror
jo
inc
inc
cmc
fadds
out
fildll
iret
lock
leave
xchg
out
fnstenv
xrelease
xchg
adc
in
ljmp
and
test
mov
sub
inc
dec
mov
jnp
scas
pop
or
xor
adc
or
fcom
jae
pop
lock
sub
push
xchg
pop
add
scas
outsl
push
cmc
sub
subl
rorb
in
fld
or
xchg
mov
push
sbb
push
dec
ret
pop
cmp
inc
inc
xor
dec
lods
pop
xchg
bound
icebp
jae
ror
adc
loope
insb
hlt
hlt
rcrb
xor
popf
adc
dec
arpl
push
xchg
test
jnp
ljmp
dec
aam
enter
xor
jbe
xchg
repnz
jbe
inc
ror
pop
icebp
mov
cwtl
stc
mov
xchg
xchg
aaa
daa
imul
out
or
inc
mov
notl
mov
sarl
and
inc
mov
loope
movsb
lods
icebp
pop
mov
pushf
push
pop
xor
nop
pop
jg
clc
cli
test
movsl
add
add
pop
cld
pop
push
cmp
cs
sbb
add
in
test
xchg
jbe
icebp
jbe
ljmp
test
mov
xchg
lahf
clc
pushw
mov
sbb
dec
sbb
jl
push
mov
cmp
jb
iret
gs
test
sbb
xchg
lret
add
pop
faddl
push
lea
jg
inc
and
mov
sti
movsl
dec
rcll
sub
test
jne
sub
inc
and
xchg
pop
push
sarl
mov
adc
xorb
and
sbb
push
scas
xorb
fdivs
addr16
icebp
je
mov
inc
sub
push
mov
es
pop
xchg
shlb
test
jnp
pop
fwait
addr16
jbe,pt
imul
pop
loopne
cs
sub
gs
xor
jb
sub
and
subl
arpl
lock
sub
add
inc
dec
sub
in
shrl
popa
and
pop
dec
adc
fmuls
repz
jp
mov
call
inc
cs
or
mov
sti
fwait
mov
movsb
sub
or
lahf
dec
dec
xchg
loopne
movsb
out
cmp
or
arpl
cs
scas
sub
daa
sbb
mov
dec
sub
add
mov
test
mov
xor
rclb
dec
int
in
test
sbb
mov
ja
fimull
push
and
xchg
inc
adc
dec
mul
mov
mov
jp
adc
iret
pop
sahf
aam
xor
pop
lock
jne
int3
ljmp
nop
enter
cmpsl
add
sub
push
in
testb
fcmovnu
lcall
cmpsb
and
push
cmp
mov
or
shlb
and
jne
in
int3
and
xchg
lds
in
cltd
mov
inc
xchg
sbb
push
fs
push
ds
mov
inc
add
out
in
add
xchg
pop
jae
orl
fidivs
lcall
adc
xor
outsb
xchg
adc
cmp
test
mov
pop
sbb
fisubs
and
cmp
int
test
lret
jne
cltd
adc
outsl
scas
fildll
imul
lret
jmp
push
jle
xchg
jl
add
dec
push
ja
idivb
mov
fld
in
psrad
pop
fiaddl
cmpsl
popl
or
xor
adc
imul
fst
adc
pop
mov
out
aad
pop
inc
push
sti
jbe
xor
inc
cmp
clc
mov
flds
sbb
nop
shrb
jno
lods
insb
mov
xor
adc
sub
inc
pop
out
jp
decl
dec
pop
and
jge
dec
loopne
cmp
jecxz
cmp
sbb
leave
xor
pop
movsl
or
loopne
pop
sahf
sbb
repnz
subb
mov
and
add
mov
mov
adc
dec
mov
mul
sub
adc
cwtl
jl
mov
shll
add
inc
not
mov
jmp
dec
dec
mov
jl
nop
push
lods
jg
fcoms
xor
add
outsb
mov
imul
into
push
test
addr16
cmp
add
ds
xchg
add
popf
sub
insl
lcall
arpl
les
loope
mov
sahf
inc
je
pop
movsb
popa
dec
sub
mov
cwtl
and
xchg
mov
cmp
iret
dec
mov
mov
mov
push
mov
pop
or
adc
push
ret
test
xor
cmp
pop
int
lods
mov
fistpl
vfmsubadd231pd
push
daa
outsb
xor
pop
and
mov
cs
aaa
ja
cld
ret
aam
mov
xchg
das
lret
fistpll
mov
dec
int
mov
ss
cmc
xchg
addr16
outsb
mov
push
test
jo
je
push
pop
dec
rcll
push
pop
inc
push
mov
mov
sbb
pop
pop
stc
xor
dec
mov
loop
imul
mov
jnp
mov
rorl
daa
jp
add
cmpsl
lods
pop
push
loop
sub
inc
mov
inc
pop
or
inc
dec
xlat
xor
arpl
bound
negl
aam
jl
and
in
xchg
mov
pop
jne
cmp
dec
inc
loope
add
or
lds
adc
sub
leave
mov
add
leave
ja
jl
cs
lods
sbb
aam
insb
idivl
fsubs
mov
add
xor
imul
push
dec
in
push
stos
or
sub
xchg
cmpl
mov
cmpsb
js
dec
out
push
cmc
fisttpll
aaa
jp
loopne
das
or
xor
push
cmp
add
scas
pop
subb
pop
test
sub
jns
jb
or
mov
or
fnsave
fsubs
fdivs
dec
xchg
mov
adc
and
sahf
pop
push
sarb
fwait
sbb
add
cmpsl
pop
and
xor
out
pop
sbb
mov
cmp
push
rol
xchg
ficompl
ror
movsl
movsb
jp
mov
push
cmp
dec
daa
test
mov
orb
dec
lods
mov
push
cmp
sub
sbb
adc
inc
pusha
call
test
jae
inc
nop
push
repnz
ja
loope
mov
sbb
xlat
mov
mov
fcompl
and
push
in
cld
add
int
sbb
pop
cmp
sub
leave
aam
movsl
inc
iret
inc
daa
loop
adc
mov
sbb
fs
xor
or
dec
out
xchg
xchg
mov
mulb
adc
add
cmp
popa
lock
and
imul
aaa
ljmp
xlat
mov
jb
xchg
pop
pushf
fistps
add
xchg
sbb
adc
repnz
aaa
inc
pop
scas
loop
insb
out
in
jae
loope
add
push
pop
and
and
jmp
lret
sti
push
jae
adc
fldenv
int3
or
lock
fisubrs
mov
or
dec
pcmpgtw
cmp
fs
jo
lock
cmpsl
mov
pop
jl
push
cmpl
add
clc
xchg
push
sub
addl
ds
inc
fbld
imul
ljmp
pushf
bound
stos
addr16
or
lret
cmpl
jb
dec
ror
mov
shl
mov
or
cmp
cs
pop
out
push
mov
int3
jmp
xor
mov
mov
mov
ficoms
ja
jo
add
lock
iret
and
addr16
lret
mov
fildl
or
pushf
sbb
lock
clc
lcall
mov
push
repz
add
pusha
div
pop
or
or
iret
lcall
pop
adc
ss
into
add
out
dec
aad
ljmp
jl
ds
outsb
or
mov
aam
or
icebp
push
sbb
mov
hlt
imul
imulb
fadds
xor
cmp
xor
cmp
pop
add
rolb
jmp
xor
push
das
icebp
int3
aam
rolb
out
gs
cmp
icebp
int
mov
mov
in
pop
xchg
lret
rorb
adcb
sub
psubsb
inc
add
jo
adc
lds
pop
inc
cmpsl
sbb
jbe
es
or
aas
cld
pop
cltd
je
dec
xor
sti
scas
cli
add
repz
ja
repz
mov
jns
mov
jle
mov
add
push
xchg
lahf
inc
push
lcall
data16
stc
dec
sarb
add
adc
mov
inc
cs
cmp
addr16
mov
and
sbb
fcompl
ja
adc
rcrb
in
and
adc
jle
mov
jmp
adc
nop
shl
orl
push
addr16
ret
jae
outsb
inc
pop
adc
sub
xchg
and
lods
pop
pop
idiv
icebp
iret
insl
cs
dec
sarb
sbb
adc
lret
shlb
mov
and
int
mov
aaa
cli
mov
push
push
fadd
mov
pusha
mov
test
cltd
dec
out
adc
out
mov
les
cmp
cmpb
stos
cmp
pop
testb
icebp
rolb
cmp
dec
insb
sbb
mov
push
cld
and
andl
pop
push
cmc
dec
inc
xor
jmp
adcb
push
stos
add
fwait
inc
mov
jbe
xlat
pop
rcr
daa
xchg
pushf
popf
lock
add
test
mov
js
xchg
cmp
dec
or
push
adcb
pusha
incb
shl
outsb
or
enter
mov
out
bound
push
cli
jns
dec
into
add
inc
inc
pop
int3
adc
js
aas
pop
mov
in
push
jne
mul
ficoms
pop
inc
or
dec
lret
pop
pushf
xor
jp
or
and
les
clc
jg
nop
subb
mov
insb
cmc
mov
cmpsl
out
das
sub
fdiv
mov
lret
push
cmp
push
mov
dec
mov
mov
decb
mov
cmp
push
ret
jp
idivb
decl
xchg
lds
adc
inc
fstpl
insb
sub
pop
je
or
shll
repnz
imul
xchg
cvtps2pi
ss
push
sti
mov
and
lcall
sub
dec
aaa
cli
mov
mov
out
cmpsb
test
jo
mov
mov
fidivs
mov
int3
add
fisubrl
stos
dec
insl
scas
jmp
pop
and
or
adc
jnp
pop
lods
rcrl
ret
xor
pop
mov
fwait
jb
pop
addr16
sub
sub
aad
push
xor
push
enter
insl
vmovdqa
or
test
xor
pop
push
fisttps
or
inc
mov
pop
enter
add
outsb
mov
xor
push
push
fcoms
cld
orb
jbe
in
lock
aad
sbb
or
nop
mov
jns
or
dec
xor
jmp
loop
rcl
pop
pop
add
test
call
inc
push
or
push
or
jle
inc
lcall
fbld
sahf
adc
mov
pop
sar
add
sub
inc
sbb
jg,pt
pop
outsb
mov
pop
mov
dec
ret
icebp
aas
inc
adc
cmpsl
scas
mov
mov
or
sbb
leave
lods
scas
test
mov
or
pop
or
pop
mov
jne
repz
fsub
cltd
mov
pop
adc
push
iret
orl
je
mov
and
push
aad
and
lret
es
cmp
push
push
in
xchg
out
lret
movsb
xchg
scas
in
inc
insb
leave
cmpsb
int3
and
jne
clc
addb
mov
es
out
aas
push
sahf
test
pop
or
sub
or
je
enter
test
push
mov
aam
add
cmp
fisubrs
mov
add
psllw
into
sub
pushf
movsb
inc
cmp
inc
pusha
in
xorb
arpl
and
and
lea
sub
mov
insb
sbbb
into
mov
mov
jae
shl
aam
mov
test
sub
pop
imul
sub
adc
pusha
cli
or
xor
and
mov
std
repz
dec
inc
mov
loop
dec
push
arpl
fmul
and
es
addl
addr16
or
cwtl
sbb
cld
fwait
movsl
mov
sbb
cmpsl
lahf
jecxz
sbb
mov
stc
jl
xchg
les
insb
mov
adc
cs
dec
xor
xchg
aad
into
cmp
mov
out
mov
shll
clc
mov
add
lret
ja
xor
popf
arpl
or
rcrb
nop
adc
hlt
scas
fmull
xchg
ja
push
jno
mov
or
xchg
push
and
lcall
imul
in
cmpsl
testb
out
jmp
xor
push
sbb
xchg
test
jbe
and
cmpsb
sahf
movsl
out
inc
ret
mov
lcall
inc
bound
inc
sbb
sub
push
and
inc
cmp
push
outsl
mov
or
pop
or
inc
enter
fisttps
jo
mov
sbb
xor
or
in
sub
cld
and
fstp
xchg
dec
repnz
push
int3
dec
stc
push
inc
jmp
ljmp
scas
dec
mov
push
sub
adc
sub
pop
xor
push
mov
pop
movsl
das
mull
xor
mov
xchg
cmp
sbb
or
inc
std
mov
xor
inc
subl
mov
adc
push
js
mov
xor
loopne
add
shrl
mov
mov
scas
mov
rcrb
mov
les
pop
xchg
fnstenv
movsl
imul
pop
xchg
sub
push
add
ja
mov
fnsave
popl
inc
ja
cwtl
dec
jne
lret
mov
add
xor
push
lcall
lcall
push
daa
xchg
sub
scas
mov
call
jnp
jo
sbb
xor
inc
jno
pusha
mov
adc
enter
xor
xchg
cmp
rclb
adc
ret
adc
inc
pop
push
les
sbb
scas
cmp
jecxz
sub
cwtl
adc
xor
dec
hlt
outsb
out
mov
jbe
fldcw
mov
mov
or
push
pop
jne
sbb
xchg
es
rcll
icebp
movsl
lcall
inc
pop
es
jmp
xorb
adc
pop
cmpsb
jno
movsb
pop
push
das
fisttpll
fstps
out
frstor
out
push
bound
xchg
rcr
adc
fists
jns
xchg
inc
ljmp
or
lods
mov
xchg
icebp
in
sbb
nopl
data16
xor
in
rcl
data16
and
lods
cmp
test
mov
mov
int
ds
sti
mov
xchg
jo
subb
ss
jne
xor
mov
or
inc
pop
or
loopne
and
mov
jae
outsb
or
lret
sarb
aam
iret
shlb
fwait
inc
lcall
icebp
adcb
bound
xchg
cmpsl
fmuls
sbb
add
mov
inc
std
jmp
dec
add
xor
xor
loopne
sub
cwtl
jge
mov
lods
inc
cmpsl
jp
cmpsb
test
inc
mov
xchg
test
lea
adc
popl
jge
hlt
movnti
je
scas
jge
jge
xchg
fiaddl
jae
fisttpl
leave
xchg
fnsave
in
sub
jno
jb
loopne
out
roll
insl
push
out
pop
pop
ds
push
lods
push
mov
mov
mov
test
sbb
mov
pop
mov
out
movsb
push
xchg
lcall
inc
inc
fadds
fs
aam
lods
inc
subb
or
sub
add
sbb
ss
shll
dec
mov
loope
stc
mov
rclb
inc
aam
cmp
mov
pop
stos
daa
sub
dec
cmp
adc
cmpsb
movsl
out
scas
int
pop
jp
xchg
xchg
sahf
addr16
jle
mov
les
loopne
jmp
pushf
or
sbb
out
and
add
sub
push
inc
lock
adc
fs
push
push
arpl
pop
push
dec
and
into
faddl
mov
adc
in
cmpsl
mov
mov
mov
loopne
jecxz
adc
add
sbb
add
mov
push
cltd
xchg
test
mov
loop
xor
adc
scas
ds
dec
lret
cli
cli
movsl
lcall
mov
pop
add
shlb
fldt
or
repz
lcall
add
shrb
lock
or
sub
xchg
rcll
fcoml
mov
int
sub
or
xor
hlt
rcll
mov
inc
data16
xchg
test
repz
shr
pop
lahf
mov
fwait
mov
adc
in
jmp
in
cwtl
cmc
sbb
insl
out
repz
popf
mov
lcall
sbb
pop
aad
clc
loop
xchg
mov
rcrb
cwtl
push
loope
loope
adc
in
jno
xlat
lret
xchg
push
fldcw
aam
int
adc
addb
xchg
sub
jae
xchg
sub
xor
mov
or
add
pop
shr
xchg
xchg
dec
cmpsb
scas
push
hlt
jecxz
fdivrl
or
rorl
test
and
mov
pop
push
dec
sbb
jle
jl
jb
jecxz
jo
sub
lret
mov
fs
cmp
or
jmp
push
inc
or
or
out
stos
push
or
jbe
adc
jbe
das
int3
xor
pop
pop
outsb
sti
mov
call
add
mov
div
or
es
in
jmp
mov
mov
and
ljmp
dec
jecxz
stos
jp
enter
in
scas
add
pop
sbb
inc
mov
push
stc
outsl
jno
ds
xor
jmp
sub
test
sub
sti
fistl
push
sub
ja
dec
pop
mov
std
andb
pop
dec
stos
cmp
out
ret
insb
arpl
add
push
mov
stos
daa
cmp
outsb
xor
sti
aas
cmc
and
xchg
push
rcl
lcall
jae
adc
ret
inc
popf
cmpsl
insb
and
push
push
decb
outsl
test
movsb
sbb
adc
jmp
lods
nop
mull
insb
jg
stos
xor
xlat
jnp
mov
sub
pop
lcall
scas
cltd
pop
popf
mov
or
inc
cmp
dec
hlt
aas
xor
cmp
mov
adc
js
pop
inc
fdivrp
and
pushf
xchg
sbb
std
cltd
loope
popa
dec
ror
cli
lahf
popf
push
fldt
sub
stos
fs
jb
jae
lods
call
adc
cltd
pop
sbb
lret
outsl
sti
out
int3
inc
fdivrl
cmp
and
cmp
outsb
icebp
pop
fistpl
fdivs
in
outsl
scas
mov
outsb
insl
lahf
cmp
in
into
andl
dec
or
inc
popf
divl
mov
gs
cli
xor
inc
inc
loop
lds
jecxz
push
je
into
gs
lds
movsl
sbb
daa
jmp
sub
add
add
jmp
sti
ret
daa
or
stos
cmp
cmpsb
cmp
mov
cmpsb
bound
lds
das
das
fbld
mov
xlat
mov
js
mov
outsb
xor
push
insl
xor
ja
mov
cmpsb
mov
push
xorl
inc
ljmp
fstpt
or
jle
flds
cmp
and
aas
out
sarl
sbb
add
push
jl
cmp
mull
dec
or
xchg
xor
push
cltd
sarl
jecxz
out
xor
mov
stc
mov
dec
cmpsl
push
mov
out
push
xchg
in
int
push
fisttpl
ret
dec
insb
xchg
mov
push
lock
lcall
ljmp
push
pop
sub
leave
lods
fdiv
pop
pop
shrb
jno
cmp
fsubrl
sbb
fwait
inc
sti
jge
xchg
xor
aad
rcrb
mov
pop
or
cmp
shlb
mov
nop
in
sbb
sub
mov
insb
jle
push
mov
mov
popa
mov
insb
pop
cmp
or
pop
fistps
outsl
movsl
xor
scas
mov
adcl
or
insb
xchg
cmp
aas
sub
mov
inc
call
adc
gs
ficoms
jns
xor
mov
dec
in
pop
adc
xchg
jns
dec
mov
dec
or
data16
or
adc
xorb
sbb
xor
inc
out
call
mov
or
pushf
mov
cmp
dec
sbb
out
sbb
mov
mov
hlt
shll
sub
or
or
rorb
xchg
cmp
jo
or
js
popa
inc
mov
lea
jb
dec
loope
inc
in
enter
jg
je
arpl
scas
xchg
sti
popa
xor
loope
add
stos
lcall
pop
out
xchg
fildll
inc
and
sbb
cld
cwtl
rorl
sub
shlb
mov
and
js
icebp
xchg
xchg
inc
mov
fsubl
mov
mov
stos
pop
mov
add
inc
mov
mov
adc
pop
jb
push
lahf
jge
jae
nop
mov
test
dec
or
cli
dec
xchg
in
dec
dec
movsb
cmp
lock
or
or
js
xor
rcrl
jge
movsb
lea
ja
loope
inc
aad
dec
cltd
xchg
leave
xor
rcll
int
mov
jae
das
or
icebp
mov
jecxz
add
rorl
loop
mov
aam
mov
inc
int3
repnz
in
push
jb
imul
sahf
rdmsr
jge
mov
sarl
repz
in
dec
dec
les
add
add
push
repz
lock
aaa
sub
stc
lret
xor
test
pushl
cmp
repnz
mov
pop
pop
gs
xor
jne
mov
bound
out
cmp
shrb
add
in
aad
cli
adc
adc
lods
cltd
cmpsl
push
push
jp
xor
jno
fsubrs
or
dec
leave
and
mov
cmp
xor
jno
push
bound
in
inc
fucomi
jae
dec
enter
pop
jnp
je
into
cmp
cs
mov
add
aaa
sahf
push
lcall
or
insb
cmpsl
pop
cltd
insl
xchg
dec
inc
or
mov
mov
loopne
cmp
shlb
and
cmp
jae
pop
mov
xor
cmp
iret
fisubrl
test
pushl
push
pop
inc
sbb
imul
je
push
mov
aam
inc
clc
aas
rcll
jl
jle
mov
addr16
push
sub
pop
sbb
imul
cmp
stos
mov
push
sub
in
insl
out
out
adc
mov
mov
pop
lret
out
xor
or
mov
mov
sahf
mov
adc
dec
push
jbe
jns
jae
xor
jnp
xor
and
sbb
and
loopne
mov
std
mov
jne
popa
jbe
pop
jbe
sub
inc
xchg
mov
hlt
inc
xchg
je
inc
xchg
in
loope
andl
jno
inc
es
sahf
fucomp
xor
cltd
out
mov
and
pop
inc
jp
jns
xlat
cmp
stos
in
dec
jbe
push
sti
sbb
jb
fwait
xor
or
js
inc
in
fildl
inc
push
lret
mov
subl
out
ja
js
dec
jmp
lcall
inc
lods
pop
fdiv
sub
pushf
mov
pop
and
dec
mov
adc
in
pop
popf
iret
sarb
out
sub
xchg
pop
mov
mov
jne
adc
adc
and
insl
fimuls
xor
xchg
daa
add
jns
in
dec
pop
aam
or
repz
lahf
outsl
xor
xor
pop
repnz
xor
gs
ret
decl
sub
rcr
inc
repnz
lret
pusha
lea
push
mov
pop
loop
push
mov
jp
mov
cli
inc
push
ret
cwtl
daa
and
mov
inc
sbbb
cmp
cmovae
or
in
mov
xor
push
push
orb
negb
inc
mov
mov
ret
fstl
jbe
fnstsw
js
or
push
es
inc
ds
pop
sub
jns
pop
loope
add
inc
and
push
leave
in
je
lock
repnz
pop
adc
sub
adc
mov
mov
or
pop
cmpsl
int
scas
xlat
loopne
push
pop
into
inc
xchg
dec
icebp
push
push
jge
xchg
mov
data16
mov
pop
je
pusha
push
mov
adc
sbb
lods
cmpsb
mov
jnp
leave
push
fimull
stc
into
cmc
and
ret
mov
outsb
icebp
in
pop
or
sbb
push
rcrl
jp
nop
lret
cmp
jle
movsb
ret
mov
cmc
mov
push
xor
pushf
mov
sbb
add
sub
and
mov
mov
inc
mov
pusha
mov
sti
jmp
jns
repz
pusha
shl
rcrl
mov
ffreep
imul
inc
pusha
test
push
jne
jno
in
cmp
shrb
add
jle
jmp
das
aas
push
ja,pt
dec
sbb
mov
fwait
cs
mov
scas
int3
in
in
repz
mov
insb
jae
pushf
insb
xor
psubw
ljmp
cmp
pop
jg
test
scas
and
push
pop
sub
rcrb
xor
jge
imul
and
and
mov
jp
mov
xchg
stc
push
jp
xor
adc
lods
dec
push
seto
cwtl
push
and
sub
addr16
cmp
stos
add
sbb
inc
pushf
push
js
hlt
fdivrp
and
sbb
out
fstpt
dec
imul
mov
in
test
inc
xor
inc
and
jle
inc
sbbl
punpckhdq
inc
mov
sbbl
or
lock
jmp
push
mov
outsl
push
dec
ljmp
xor
push
adc
cli
sbb
push
adcb
mov
jmp
jne
out
enter
insl
sub
adc
lret
rolb
inc
icebp
vpaddd
and
outsb
push
pop
sahf
xchg
ficoml
gs
test
mov
idivl
pop
pop
jmp
orb
insl
jbe
js
les
and
fdivrl
stos
fnstcw
jp
pop
and
adc
inc
lcall
mov
mov
mov
inc
cmp
fwait
mov
test
out
outsl
push
jno
mov
lcall
dec
mov
xchg
mov
cmp
scas
inc
cltd
jb
pop
or
xchg
mov
loope
or
inc
repz
or
mov
ret
xor
fs
push
aaa
into
cmp
xor
inc
xor
dec
and
dec
xlat
push
add
rorl
add
mov
lea
or
xor
int3
mov
pop
jns
pop
in
cmp
je
adc
stos
add
in
xor
jno
arpl
push
cs
insl
outsl
popa
mov
cmp
push
and
pop
sub
inc
xchg
popf
dec
jnp
repz
imul
cwtl
leave
data16
inc
mov
mov
shll
jge
push
cs
sub
testb
dec
pop
push
mov
andl
inc
mov
adc
fwait
mov
rclb
xchg
popf
out
adc
and
leave
lock
fdivrs
rorl
mov
aad
mov
or
sub
dec
xchg
push
jp
sbb
mov
rcrl
xchg
or
jno
mov
mov
cmp
jmp
std
dec
jl
cmpsl
pop
or
rol
dec
sub
mov
inc
pop
jge
cmpsl
push
adc
and
bound
stos
mov
leave
sub
push
xor
pop
sub
pop
movsl
call
in
shll
xor
cmpsb
andl
in
push
pop
hlt
xchg
lods
jg
in
xor
sub
cltd
inc
jle
push
mov
iret
les
pop
fbstp
mov
leave
in
movsl
jle
or
scas
mov
pop
sub
aas
and
push
sarl
test
inc
pop
inc
jne
movsl
xor
stos
mov
xchg
test
adc
aam
in
fs
lods
or
mov
mov
ss
inc
pushf
out
push
nop
std
adc
cmp
fwait
test
mov
xlat
loope
xchg
outsl
mov
inc
fdiv
in
push
xchg
into
pushl
xchg
adc
and
notb
inc
in
sbb
imul
adc
inc
jae
insb
hlt
pop
mov
les
loope
xchg
fs
lods
aaa
sub
push
call
cmp
nop
popa
pop
test
ja
roll
imul
outsb
cmp
es
push
xchg
jae
mov
adc
mov
pop
xchg
add
push
outsb
in
shrl
int3
pop
clc
xchg
or
data16
sbb
test
mov
ror
pop
fbstp
hlt
cld
adcl
mov
xor
imul
mov
outsl
ds
pop
fcoml
hlt
loope
push
imul
stc
call
jno
sub
mov
pop
je
push
pop
push
dec
push
mov
inc
fsubrl
ss
mov
push
insb
in
sarl
outsb
inc
setae
sbb
jmp
or
ret
push
and
sbb
loope
stos
add
cmp
je
push
mov
lods
pop
pop
dec
mov
leave
ss
sub
int
fistl
push
movsl
lods
add
sti
dec
lds
and
pop
in
mov
mov
movsl
lret
jbe
push
jbe
iret
lods
push
cmp
cmp
add
xlat
mov
pusha
sub
push
clc
negl
les
fiaddl
ret
xor
lahf
data16
push
and
or
push
cmp
inc
sub
jle
movsb
js
sub
dec
inc
addr16
push
decl
les
nop
jl
andl
adc
jg
out
mov
iret
sub
mov
cmpsl
pop
cmp
mov
test
or
leave
call
in
sbb
xchg
mov
cmp
mov
mov
fdivs
in
add
jge
mov
call
dec
pop
dec
add
xlat
pop
pop
pop
pop
roll
cli
sbb
push
jns
imul
pushf
mov
aam
adc
and
sbb
mov
sbb
lret
out
stos
mov
mov
enter
jge
adc
pop
and
out
sub
adc
cmc
bound
imul
pop
ud2
out
mov
inc
sub
dec
mov
hlt
and
mov
leave
cmpsl
stos
cli
cmp
lea
loopne
call
push
fwait
jl
mov
ljmp
loopne
shlb
mov
fcmovb
dec
pop
add
sbb
add
rcrl
cld
mov
scas
in
push
xor
lods
xchg
sub
sub
lock
mov
fwait
dec
sti
loope
xchg
lcall
out
inc
mov
mov
pop
in
mov
add
nop
std
cmp
dec
sbb
insl
or
lahf
push
jecxz
xchg
ljmp
cmp
mov
pop
addr16
jbe
sbb
fstp
sbb
ret
sarl
fisubrl
cmpsb
mov
dec
xor
and
hlt
and
cmc
jne
insl
pusha
add
mov
loop
sub
add
js
or
fcmovb
pop
outsl
cwtl
pop
xor
sbb
adc
push
into
and
jge
imul
pushl
jb
lret
jbe
fimull
xor
loopne
mov
mov
outsb
mov
insl
xchg
aas
push
jne
xor
mov
jo
mov
push
mov
mov
adcl
push
push
sub
dec
push
add
add
stos
in
sub
vprotd
jb
sbb
sbb
jb
mov
cmp
xlat
xor
sbb
jbe
iret
mov
xchg
xlat
jne
push
sub
cmpsb
sbb
std
mov
nop
xchg
cmpsb
insb
sub
rorb
cs
and
jne
fdivr
aam
jae
adc
popf
cltd
and
leave
fimull
pusha
movsl
call
inc
bound
sub
xor
sub
aas
ror
sub
push
jb
movsb
and
in
sub
cld
lods
mov
push
loopne
mov
adc
mov
xor
jmp
or
mov
scas
push
emms
aaa
or
push
cmp
in
sbb
mov
dec
jle
sub
bound
aam
lods
int
test
xor
or
hlt
cs
mov
int
inc
jmp
clc
push
jle
jae
xlat
lret
ficoms
or
fnsave
adc
fldl
pop
fidivs
mov
sbb
loope
testb
push
adc
lds
jle
addr16
push
or
aaa
dec
adc
fnstsw
lods
scas
ss
ret
mov
push
mov
inc
or
push
push
add
sub
stc
mov
mov
es
inc
or
cmp
xchg
int
xchg
nop
pop
out
dec
insb
mov
cltd
popf
or
imul
mov
mov
xchg
pop
mov
outsl
test
mov
xchg
and
jg
xchg
push
imul
jnp
mov
fs
mov
std
repnz
push
iret
ret
or
xchg
mov
out
jp
cmpsb
pushf
mov
test
sbb
cld
dec
pop
add
sub
sbb
popa
xchg
sub
stos
dec
xchg
push
mov
inc
outsl
push
test
das
mov
xchg
xchg
xchg
shlb
push
popf
adc
adc
xlat
nopl
mov
mov
in
cmp
jecxz
hlt
jmp
inc
inc
into
lret
mov
inc
inc
xchg
adc
sbb
cmc
mov
outsb
repnz
cli
cmpsl
dec
mov
mov
xor
mov
pop
jl
inc
loop
fdivs
xor
int3
sarb
lods
mov
and
ss
sub
lods
cmpsl
loope
push
add
lahf
xor
add
jl
mov
lods
mov
mov
cld
cmpsb
cmp
push
ficoms
mov
xor
jmp
fbstp
test
cmpsl
mov
add
and
lret
call
xchg
mov
icebp
sbb
lock
jno
inc
stos
fcompl
sbb
fcomip
mov
mov
and
xchg
lods
iret
and
mov
and
inc
jno
cmp
mov
mov
cwtl
jmp
sti
sub
scas
adc
shlb
stos
in
jae
pop
add
les
jne
fwait
loop
lret
sti
js
mov
adc
repz
test
xchg
popa
sti
push
mov
scas
bound
hlt
insl
jno
mov
adc
orb
xlat
add
cmc
mov
mov
sbb
jo
aaa
sub
popf
cmpl
sbb
cmp
movsb
mov
addr16
pop
inc
pop
sub
inc
sahf
push
mov
cmpsl
mov
js
xchg
aaa
addb
rcll
in
or
pop
push
adc
pop
push
outsl
pop
sub
and
test
in
push
or
jb
inc
pop
and
adc
xlat
or
add
nop/reserved
add
aas
dec
cmpb
lock
sahf
mov
mov
mov
and
pop
popa
aam
outsb
aad
sub
or
outsb
out
in
psraw
pop
push
xchg
imul
addb
loope
push
addl
jp
dec
adc
sub
out
aad
sub
jg
xchg
mov
mov
mov
add
popa
cmp
jb
and
jmp
bound
flds
je
aam
mov
jl
test
inc
xchg
add
arpl
push
jnp
orb
scas
xor
push
cs
mov
fdivr
jbe
ret
push
addr16
in
or
xchg
out
repz
or
stos
sbb
je
icebp
repz
xor
int
dec
cld
leave
inc
rcrl
cmp
ret
cmp
dec
push
in
mov
pushf
jnp
nop
and
cmp
jne
mov
imul
xchg
es
cld
inc
pop
pop
pop
push
sbb
cmp
and
fwait
mov
mov
fiaddl
xor
out
ret
fimull
mov
mov
fnstcw
mov
cld
insb
cwtl
inc
jbe
jnp
add
ret
imul
mov
jbe
inc
fisttps
xor
push
pop
inc
pop
jecxz
dec
pop
sbb
jne
xchg
or
notl
inc
nop
and
je
mov
fstps
popa
clc
arpl
test
sub
movsl
add
mov
addl
ljmp
add
xor
jp
jbe
mov
xchg
xorl
push
push
xchg
hlt
xchg
push
mov
pop
arpl
mov
pop
mov
xchg
inc
aad
fidivrl
cmc
cmp
incb
cmp
je
loopne
in
pop
movsl
pusha
hlt
mov
cmp
mov
jb
mov
adc
inc
lcall
push
inc
and
jnp
push
add
or
loop
or
fidivl
ljmp
mov
loope
or
mov
cmp
hlt
nop
rolb
call
pop
and
shll
mov
sub
xchg
dec
test
or
imul
pop
adc
dec
push
or
adc
stos
hlt
mov
dec
out
jge
mov
jp
sbb
js
mulb
dec
clc
mov
bound
mov
das
mov
outsb
dec
fs
lods
push
cmp
fnstcw
pop
leave
lcall
mov
test
lock
lret
and
popa
ja
pushw
jbe
sti
jge
push
orb
fsubrs
inc
xchg
push
jnp
lods
fidivs
loopne
stc
jo
push
sub
incb
test
inc
jp
mov
fdivs
adc
mov
lds
xlat
bnd
lods
jg
loop
xchg
call
pop
stos
movsb
outsb
popf
insb
push
dec
popa
pop
jne
jae
popa
jns
push
inc
or
cmc
sbb
inc
or
sub
push
ret
adc
mov
xchg
push
sub
rorl
pop
xchg
xchg
loopne
mov
push
fstpt
das
jno
rorb
lods
cld
pop
sub
int3
test
jge
aad
cs
arpl
pcmpeqd
pop
hlt
xor
loop
scas
adc
imul
add
mov
mov
mov
jnp
jae
inc
or
jns
js
cmpsb
cmpsb
fcoml
in
xchg
xor
jae
mov
pop
xchg
jae,pt
scas
inc
mov
push
andb
rorb
xchg
in
xchg
sarl
lods
sahf
ljmp
cmpsl
aam
push
roll
je
pop
mov
pop
dec
in
inc
jecxz
leave
fisttpl
data16
push
jnp
insl
and
xlat
mov
and
jne,pt
mov
popf
pusha
or
pop
add
je
lahf
xchg
push
cmp
sub
roll
repnz
lret
test
mov
ds
and
pop
inc
addr16
dec
aas
push
cld
jge
adc
orl
adc
lret
jle
hlt
add
insl
out
ja
dec
push
adcl
jmp
xchg
sarb
jle
push
fcom
jmp
cs
dec
data16
fchs
cmp
cmpsl
mov
jp
jns
call
cmp
mov
arpl
fmull
dec
mov
push
std
hlt
xchg
test
pop
or
jp
jecxz
or
mov
dec
call
aas
scas
je
sbb
out
mov
repnz
push
es
or
into
std
outsl
sbbb
xchg
mov
je
sub
mov
insb
ja
mov
insb
mov
shll
out
arpl
out
ud1
filds
jbe
push
xchg
sub
fldt
xor
mov
sub
lret
bound
mov
outsl
lods
jmp
jg
mov
push
sub
xor
addr16
sbb
adc
cld
frstor
jl
dec
mov
and
xchg
jge
rorb
dec
xor
xchg
roll
inc
sub
std
mov
xchg
jg
in
mov
jbe
cmpsb
mov
lods
rcl
lret
pushf
lods
ss
inc
adc
das
ss
xchg
xchg
push
push
in
and
cmpsl
leave
and
insb
add
insw
mov
mov
jmp
fs
loopne
sbb
push
dec
bound
xchg
xor
xchg
xchg
cld
jb
adc
daa
xchg
sti
decb
aam
ja
inc
notb
mov
or
ret
mov
and
pushf
push
dec
xchg
xchg
mov
je
fsubrs
xchg
jns
xor
call
popa
icebp
pop
dec
lods
mov
mov
adc
jecxz
xor
pop
stos
jno
mov
cmp
dec
or
hlt
cmp
push
mov
mov
shrl
dec
cmp
gs
loope
stos
or
ljmp
jp
frstor
sbb
xor
sahf
loope
xchg
sbb
and
ja
jne
lods
test
out
sbb
sbb
inc
shrb
sbbb
mov
mov
dec
jbe
lcall
popa
xchg
lret
out
rcrb
sbb
nop
cwtl
ret
icebp
mov
iret
rcrl
js
cmpsb
in
shll
hlt
mov
cmp
mov
cmp
mov
mov
cs
js
mov
xor
imull
adc
inc
insl
cmp
js
pop
arpl
sbb
sahf
decb
pop
pop
push
jns
into
xchg
jo
pop
xchg
push
sub
cld
test
cmp
decl
push
mov
xor
in
int
pop
test
sub
or
and
sub
and
mov
jbe
dec
push
dec
xchg
scas
rcll
insb
in
int3
or
lret
ret
and
push
xchg
fbstp
mov
add
dec
test
xchg
das
pop
into
js
in
cwtl
popf
jbe
out
mov
dec
gs
mov
mov
sbb
pop
pop
arpl
cmp
std
mov
loop
jns
aaa
lret
pop
dec
adc
inc
xchg
les
sbb
adc
lcall
je
push
jns
dec
lea
jge
jmp
out
push
mov
mov
inc
mov
inc
and
mov
add
fldcw
sbb
sub
lcall
ds
or
addr16
fstl
std
push
and
sarl
mov
stc
sbb
ficomps
outsb
push
dec
adc
jge
ja
test
rcrb
test
mov
jns
cmpsl
mov
push
add
sahf
jbe
push
add
orl
cmpsb
iret
pop
push
jmp
adc
ret
adc
ss
ja
movsl
pop
sub
pop
mov
xor
adc
add
out
popl
sbb
lods
add
cmpsb
repz
imul
mov
cmp
or
mov
sub
xlat
or
xchg
std
cmpsb
mov
mov
inc
mov
out
xor
xlat
cld
jp
ja
fwait
dec
adc
subb
pop
arpl
jo
repnz
xlat
pop
test
pop
aam
js
inc
adc
lds
test
ss
sarb
cld
inc
mov
das
inc
xor
dec
and
xor
call
xchg
push
pop
push
fsubrs
ret
mov
push
mov
adc
push
cli
dec
adc
xor
notb
out
inc
xor
hlt
out
das
jb
pop
popa
rcl
push
mov
loopne
push
cmp
fisttps
shlb
ja
push
test
sbb
and
les
cmovg
add
dec
mov
test
mov
test
xor
add
add
sub
mov
test
pop
adc
sbb
mov
push
jecxz
fwait
mov
jg
or
movsb
shlb
adc
push
iret
loop
loopne
inc
jmp
lds
int3
jne
adc
push
xor
xchg
mov
aas
repnz
pop
push
js
inc
aas
sbb
pusha
dec
out
lods
dec
sub
fs
mov
mov
push
lds
dec
jg
cmp
sti
sbb
daa
jmp
mov
mov
dec
dec
fcompl
daa
jecxz
jo
dec
cmp
es
and
mov
in
pop
sahf
push
testl
mov
mov
cmp
pop
jl
and
sbb
loope
cmp
sahf
mov
mov
cmpsb
daa
sub
jmp
mov
insl
pusha
bound
and
dec
fwait
ss
mov
shll
and
sbbb
test
adc
sub
es
inc
arpl
lahf
add
inc
mov
push
std
hlt
adc
push
cmc
arpl
jg
adc
jno
leave
push
jne
popf
imul
loope
dec
xor
and
mov
mov
mov
loope
or
les
clc
mov
push
add
pop
cltd
dec
pop
pop
pop
out
jg
scas
enter
dec
pop
cmp
and
add
mov
dec
ja
bound
mov
rcr
mov
pop
cmp
xchg
inc
out
pushf
adc
cmpsb
rcll
out
sbb
test
das
inc
sub
add
xchg
xchg
or
inc
fldcw
jbe
lcall
sahf
sub
roll
dec
popa
xor
fisubl
xlat
push
xchg
adc
prefetch
or
les
adc
icebp
pop
jbe
cltd
xlat
inc
mov
adc
dec
xor
mov
call
int
xor
cmp
xor
mov
stos
cmp
mov
mov
lahf
rolb
mov
cld
jmp
fwait
cmpsl
cli
sub
add
roll
adc
cwtl
sub
out
imulb
cmpb
pop
sti
pop
and
adc
repnz
mov
dec
fldl
cltd
pop
mov
cmp
xor
test
test
jge
mull
xor
push
add
es
fimull
or
mov
cld
subl
push
pop
sub
xchg
cmc
cmp
bound
xlat
dec
shlb
dec
les
into
push
dec
jae
sbb
sbb
jmp
sbb
add
data16
cmp
jae
hlt
push
lret
cmp
or
xchg
out
in
mov
pop
push
test
push
int
pop
push
and
inc
repz
cmp
inc
mov
mov
mov
dec
adc
mov
jo
outsb
int3
roll
add
inc
pop
sbbb
popf
aad
dec
mov
lahf
push
stos
jle
push
sbb
filds
jge
xor
add
dec
add
arpl
rorl
dec
push
push
ss
aam
push
mov
mov
cmc
loopne,pn
leave
out
fs
pop
push
xor
xchg
mov
cmp
lret
lahf
ret
iret
arpl
imul
xor
add
add
notb
mov
sahf
jp
push
xchg
negl
cli
daa
fcompl
aaa
cmp
jb
dec
and
je
jmp
jno
sbb
leave
inc
shl
div
test
jmp
iret
or
xchg
or
mov
sub
lds
mov
push
rolb
loope
sub
ds
sti
cmp
or
mov
lcall
cmp
dec
das
or
sbb
cmp
xchg
or
sahf
sbb
add
in
or
xchg
add
fistl
mov
mov
rcll
arpl
inc
pushf
loope
dec
in
push
mov
push
jp
aas
out
mov
sbb
movsl
insl
sub
addr16
loopne
adc
adc
sar
dec
add
xor
pop
sbb
imul
or
dec
xor
repz
xchg
pop
mov
leave
popa
jp
or
pop
in
out
dec
mov
add
push
xchg
pushf
pop
push
pop
orb
push
xor
aad
mov
repnz
sbb
loop
mov
pop
scas
imull
aas
sarl
loop
xchg
cmp
pop
cmp
repnz
dec
ja
icebp
fs
mov
add
mov
dec
push
cmp
mov
xor
in
or
xchg
push
mov
cmc
das
push
adcb
lcall
adc
xor
inc
aad
cmp
lds
outsl
jno
sbb
pushf
mov
mov
test
sub
mov
ds
push
cmpsl
sub
orl
mov
push
sbbl
and
fidivrl
push
dec
xchg
mov
cld
insb
lods
push
testb
outsl
mov
inc
xchg
pop
lahf
icebp
les
shll
data16
or
ss
mov
and
pop
aam
aas
leave
popf
movl
sub
sbb
sahf
out
jmp
fsubr
adc
call
push
dec
cwtl
cli
ss
mov
push
leave
hlt
mov
and
clc
sti
das
or
or
out
sub
out
dec
addb
jg
pop
xor
push
mov
repz
xor
xor
push
cmp
movsl
std
les
dec
inc
fld
int3
mov
jne
outsb
mov
lds
pop
mov
mov
sub
les
mov
mov
push
cmpsb
fistpll
mov
adc
push
inc
push
mov
repnz
cld
ja
fadds
mov
xor
bound
jg
aas
push
mov
mov
mov
rorb
addr16
xor
cmp
jae
in
ss
das
sbb
jg
push
fsubr
loopne
adc
sbb
pop
insl
jns
inc
arpl
sbb
call
repnz
test
je
insb
add
jns
fs
add
xor
add
dec
sbb
pop
test
mov
pop
dec
pop
stc
lods
idivb
into
mov
mov
and
adc
out
mov
dec
cmp
sbb
mov
iret
xor
inc
jle
xchg
in
aaa
jo
test
jmp
pop
push
inc
test
inc
jle
cmp
scas
dec
fimull
sub
or
inc
dec
es
fistpll
hlt
or
push
mov
cmp
sub
movsl
and
push
int3
jl
pop
xor
jecxz
fldenv
jnp
sbb
pop
xchg
jnp
mov
inc
xchg
pop
xor
lods
jle
pop
out
pop
adc
mov
into
jnp
add
jg
xor
pop
xchg
mov
xchg
in
out
repnz
jo
jecxz
inc
in
fwait
add
push
mov
mov
jg
aas
xchg
adc
orb
mul
test
rclb
push
mov
jg
dec
arpl
and
mov
es
in
xchg
mov
aaa
sti
repnz
xchg
jno
inc
lcall
pop
insl
repz
jmp
pop
popf
mov
ljmp
push
sub
lods
insb
dec
scas
call
sahf
lds
mov
sbb
inc
mov
pop
out
notb
in
or
cmp
arpl
addr16
xchg
andb
stos
inc
daa
es
outsl
jge
nop
push
stc
add
inc
daa
xchg
push
mov
push
or
xlat
mov
push
scas
shrb
test
imul
std
leave
inc
jnp
mov
sbbb
mov
cmpsl
sub
pusha
jmp
mov
jecxz
add
jb
xchg
pop
or
mov
pop
mov
jg
lods
lds
shll
std
jecxz
inc
fidivrs
mov
aas
cmpsb
jns
shrl
das
outsb
movsl
aad
cli
or
inc
fstp
or
scas
incb
mov
jmp
pminsw
cmp
sahf
outsl
mov
and
xchg
xchg
adc
outsl
popa
mov
pop
jle
xor
scas
pop
test
add
sahf
add
mov
enter
das
nop
lock
fiaddl
dec
dec
jno
dec
jbe
enter
insl
in
sbb
mov
mov
mov
push
and
mov
cs
cmp
xor
movsb
jnp
mov
int
sbb
jp
or
dec
shlb
andb
push
and
fstps
std
stos
dec
dec
mov
mov
sbb
cmp
daa
aaa
xchg
insb
cltd
mov
ret
leave
lret
std
fucomip
push
push
pusha
dec
insb
cmp
test
mov
sbb
fildl
add
add
xor
and
cltd
mov
mov
jb
mov
adc
xchg
cmc
jl
ret
pmulhuw
xchg
das
test
jp
jecxz
add
ljmp
ljmp
adc
test
ret
xorl
fldcw
mov
je
pop
repz
xchg
push
jo
iret
cld
sub
inc
mov
lret
add
mov
into
mov
pop
outsb
fidivl
pop
cmp
cs
xchg
mov
mov
push
mov
mov
xchg
cmpsl
or
test
jns
mov
cmp
test
cmpsl
loope
inc
and
xchg
cmp
push
add
je
movsl
mov
ja
mov
xor
jnp
lock
mov
or
dec
lods
idivb
mov
pop
stos
and
in
inc
or
inc
or
fwait
adc
cmc
les
push
adc
pop
out
jle
xchg
pop
inc
mov
sbb
lret
mov
pop
rcll
outsb
or
jmp
loope
ljmp
sbb
js
mov
leave
push
daa
dec
dec
orb
scas
adc
and
test
sub
in
dec
and
inc
test
dec
dec
cmpl
pushf
scas
stc
mov
xchg
in
sub
icebp
cmp
pop
xchg
lcall
pop
and
xchg
lods
xchg
lcall
leave
loop
and
inc
std
and
xchg
xlat
jnp,pn
lods
xor
mov
nop
mov
sbb
les
aam
dec
jnp
aaa
clc
jnp
sbb
and
xorb
fstpt
rcrl
pop
cmp
and
fwait
cmp
jg
sub
insl
imul
daa
fstpt
out
scas
mov
pop
mov
rorb
dec
sub
sub
test
cwtl
sub
xor
cmpsb
cli
adc
adc
jnp
xor
mov
out
push
add
mov
mov
repnz
popa
push
dec
sub
sti
xrelease
outsl
ret
mov
jae
test
xchg
mov
hlt
or
cmc
mov
cmp
shl
sub
pushf
and
xor
pop
pop
jecxz
sbb
mov
test
sub
push
out
stc
lret
adc
mov
adc
or
imul
or
icebp
add
xor
mov
into
imul
mov
ret
bound
addr16
dec
int3
das
in
adc
sub
loopne
out
jl
mov
mov
imul
cmp
cmp
movsl
add
mov
jns
cld
jmp
xor
popf
xchg
pushf
js
mov
lahf
imul
subl
pushf
lods
pop
jne
xchg
adc
mov
cli
lea
cmc
pop
sbb
scas
pop
mov
fsts
adc
call
into
cld
aas
pop
out
pop
stc
pop
pop
iret
cmpsl
sbbb
and
xchg
xchg
sub
mov
cmc
sbb
cs
in
add
inc
pop
dec
outsb
outsb
mov
jecxz
inc
outsb
stc
call
xorl
rolb
cwtl
call
into
cmp
in
mov
aad
jmp
inc
insb
xchg
lds
dec
dec
xorb
jmp
xor
jo
stos
cmp
pop
into
xchg
inc
sbbl
sub
enter
mov
adc
cmp
imul
mov
pop
push
orb
or
fstpl
pop
lods
aad
addr16
xor
mov
cmp
movsb
idivl
mov
fcmovnbe
sub
cmc
mov
shrb
mov
nop
add
sub
pop
mov
pushf
aaa
test
dec
clc
lcall
mov
xchg
gs
iret
push
cwtl
or
xchg
mov
xchg
or
add
xor
sub
xchg
and
cmp
loope
cmp
adc
mov
cmp
stc
xor
xor
fildl
cmp
out
adc
shld
add
pop
mov
and
mov
dec
icebp
imul
fstpl
cmp
mov
dec
ss
sub
int3
mov
mov
cltd
jp
mov
push
mov
mov
cmpsb
xor
mov
adcl
fisubrl
in
ljmp
mov
stos
jp
cmpsb
xchg
jo
or
mov
sbb
ret
xor
pushf
repz
push
imul
popf
roll
test
ret
ja
scas
inc
jle
cmp
add
ds
pushf
lret
jb
lahf
inc
fadds
jae
pop
or
pop
aas
xchg
insl
dec
push
mov
xor
xor
sub
daa
shll
test
int3
inc
jo
push
std
loopne
dec
push
dec
jle
pushf
lret
push
xchg
sbb
sub
cmp
jbe
das
pop
sub
repnz
pop
and
and
sti
adc
test
outsl
push
andl
dec
inc
insb
je
es
jno
adc
nop
push
xchg
loop
lds
mov
jecxz
inc
mov
xchg
push
mov
cmpsb
pop
mov
dec
and
mov
popa
sub
add
or
and
pop
in
or
pop
mov
enter
out
add
push
rclb
out
out
xchg
idivl
test
xor
movsl
xchg
add
cmp
sub
sub
jo
les
fldenv
pop
sub
pop
fsubrs
or
mov
cmp
push
inc
pop
cmpsl
fs
daa
pop
ja
mov
std
cmp
out
das
lea
dec
in
adc
dec
clc
sbb
hlt
dec
hlt
mov
fists
aad
add
and
dec
xorl
inc
lcall
imul
adc
mov
sbb
xor
mov
sahf
pop
sub
out
adc
inc
or
in
dec
pop
jle
dec
mov
jmp
lds
pop
pop
dec
pusha
ss
xor
ds
cmpsb
out
dec
mov
lds
inc
jns
and
pop
mov
add
or
daa
inc
jnp
fdivl
inc
sbb
xchg
or
in
xorl
in
adc
test
sbb
sbb
movsb
rolb
loop
stos
mov
fnsave
ds
mov
out
adc
test
mov
gs
mov
xchg
cmpsb
daa
fnstcw
dec
add
jno
loopne
inc
lss
cmp
stc
push
fnsave
mov
sarl
aaa
or
or
add
aam
pop
insb
jge
push
xor
into
pop
pmaxub
nop
xor
pop
adcb
rclb
xchg
lahf
pop
xchg
loopne
sbb
ret
mov
ja
sti
add
inc
push
pusha
cmp
lds
mov
mov
pop
lcall
out
cmpsb
dec
jge
rol
jecxz
rcrl
pop
cmp
and
and
xchg
jbe
testl
push
test
fldt
adc
jbe
movl
js
mov
and
jle
cltd
jns
mov
mov
pushf
xor
add
mov
jle
sbb
mov
mov
mov
insl
xor
divl
xor
xchg
in
push
repz
lock
pusha
and
cmp
cmpb
mov
or
mov
sub
gs
repz
inc
inc
lods
int
pop
mov
int
inc
popf
lock
int
mov
push
xchg
lret
pop
mov
imul
int
ret
xor
into
enter
sub
cmp
lds
popa
inc
cli
fadds
jae
sub
dec
sti
in
lahf
test
mov
in
js
xor
xor
or
push
ror
inc
cmp
lcall
sub
and
or
dec
iret
and
dec
xchg
cmpsb
xchg
cmpsl
int3
mov
push
add
int3
or
xorb
adc
mov
clc
inc
lds
testl
or
sub
jb
ret
lcall
jbe
or
js
fdivs
stos
or
dec
hlt
dec
sbb
mov
imulb
or
mov
nop
fldenv
cmp
movsb
mov
mov
mov
mov
jae
movsl
jg
pop
jg
dec
repnz
test
cld
xchg
cmp
or
or
inc
loope
add
lock
mov
js
xor
push
clc
loop
pushf
sti
jbe
es
jae
adc
mov
test
sbb
mov
in
fwait
dec
sbb
sti
sub
inc
cwtl
sbb
daa
cwtl
mov
sbb
addl
sub
mov
xor
ljmp
and
movb
les
inc
out
fisubrl
push
and
imul
arpl
push
into
leave
push
pop
subb
cmpsb
mov
add
adc
sar
inc
xor
in
xchg
popa
sbb
out
mov
dec
lret
pop
test
enter
lods
mov
lods
push
mov
xchg
add
js
and
mov
adc
add
push
push
push
ret
adc
xchg
fs
cmp
repnz
das
scas
jne
incl
sbb
pop
test
sti
dec
inc
rclb
adc
imul
addr16
xor
leave
and
les
and
nop
fcomps
or
into
outsl
inc
inc
nop
xchg
outsb
outsl
sub
sahf
test
mov
bound
mov
sbb
ss
fiaddl
fwait
xchg
push
decl
and
sbb
and
mov
aad
orb
xor
test
in
aaa
dec
push
push
dec
dec
in
mov
adc
hlt
mov
push
inc
and
inc
test
stos
dec
gs
aas
outsl
cld
xor
and
cmp
fidivrl
dec
notl
adc
pop
xchg
xchg
arpl
scas
rclb
clc
aam
in
and
sub
jp
or
xor
xchg
push
push
add
fwait
mov
cmp
xchg
sub
enter
daa
in
pop
aam
ja
out
xor
jg
movd
aas
inc
pusha
cmp
cmpsl
lds
push
ret
push
orl
pop
push
or
and
xor
int3
push
xor
push
pop
loop
sahf
dec
jne
jecxz
adc
pop
adc
mov
test
clc
cmp
fcmovu
fistl
imul
sbb
push
adc
gs
pop
sbb
das
fsubl
xchg
jns
lcall
ljmp
adc
xor
push
fwait
add
adcb
cltd
sbb
adc
repnz
sbb
les
mov
pop
popa
adc
xor
sub
loop
mov
sub
outsb
insl
shll
fdivs
add
popa
mov
xchg
xchg
mov
out
lea
ret
xchg
in
dec
movsl
xor
mov
add
mov
sbb
xor
lret
fs
mov
orb
aas
xlat
arpl
add
jns
sar
insb
jbe
arpl
test
adc
outsb
push
sbb
aad
iret
xchg
mov
cmpsb
test
cmc
mov
lock
imul
leave
cmp
test
mov
jmp
mov
mov
xchg
pop
jl
adc
dec
cmp
or
cwtl
xlat
in
dec
repz
dec
cwtl
sahf
addb
test
gs
aaa
or
cs
mov
mov
mov
test
mov
stos
mov
lret
or
add
dec
sahf
cmp
scas
mov
cmp
vmovss
sbb
fwait
jmp
lods
bound
or
jp
push
jp
lods
or
adc
dec
pop
movswl
mov
incb
sbb
or
push
or
imul
loop
pop
pop
jo
sbb
xchg
push
in
adc
sub
xchg
pop
pop
gs
mov
leave
pop
jno
cmp
pop
and
stos
cmc
mov
jmp
and
or
xor
sti
xchg
fnstenv
ret
push
cmpl
jbe
inc
in
pop
sbb
dec
mov
test
pop
push
in
mov
dec
jbe
jne
mov
adc
inc
repz
scas
pop
imul
lea
mov
bound
xlat
in
jl
mov
adc
sub
xchg
jecxz
xchg
mov
dec
sbb
bound
pop
adc
ret
mov
out
mov
sarl
fildl
repnz
bound
mov
dec
xlat
pop
cltd
test
sbb
mov
inc
out
clc
sub
dec
mov
ja
inc
sbb
js
les
bound
xchg
mov
fiaddl
rol
add
fadds
lds
mov
xchg
int3
ja
es
fildl
shll
jbe
mov
je
fcmovbe
mov
fsubrs
ja
lea
inc
icebp
dec
daa
jecxz
cmp
pop
imul
add
movsl
dec
cwtl
xchg
add
xchg
jl
mov
sbb
cmp
jne
inc
add
aaa
mov
push
xchg
in
in
adcb
xor
xor
and
pop
gs
loopne
in
addl
mov
sbb
inc
out
add
dec
test
fsubr
out
aaa
mov
test
xor
push
mov
push
insb
cmpb
pop
pop
mov
xor
mov
sub
movsl
pop
adc
and
push
rolb
mov
cld
adc
jno
imul
mov
mov
adc
stc
dec
scas
mov
iret
xchg
dec
iret
movsb
sub
ret
mov
popa
push
lock
and
mov
xor
adc
dec
adc
leave
testl
push
test
test
inc
adc
sub
xor
pop
xchg
mov
ljmp
mov
and
push
or
mov
es
shrb
shlb
mov
notl
or
test
jl
inc
clc
es
loope
fidivrs
inc
push
xor
sbb
xchg
xor
cli
mov
cmp
leave
arpl
push
inc
aaa
out
out
push
les
out
xor
jge
leave
mov
faddl
push
sbb
sub
adc
and
idiv
pushf
data16
sub
ss
jmp
shll
jp
scas
push
mov
xorb
push
leave
push
in
int3
repz
xor
adc
mov
fidivrl
adc
xor
jg
in
xlat
insl
cmp
cmp
pop
test
insb
mov
xchg
in
movb
popa
mov
push
aam
shlb
push
or
sarb
jo
cwtl
leave
push
lcall
push
fsubrl
mov
mov
mov
dec
clc
pop
jbe
adc
mov
dec
and
add
dec
orl
mov
cld
stc
mov
leave
fcmovnbe
xchg
xchg
sbb
dec
mov
mov
leave
cmp
movl
cmp
int3
in
fidivrs
ret
addr16
test
cmpsb
push
pusha
hlt
adc
int
insb
xor
andl
js
fidivrs
cmp
jns
push
jg,pt
push
sbb
xchg
adc
and
cltd
cli
dec
in
push
pop
mov
fsubr
sub
push
jnp
fcoml
push
sbb
nop
or
rcrl
adc
xchg
orb
lock
test
stos
adc
js
inc
lea
fcmovbe
pop
xchg
ja
cltd
mov
stos
lret
in
fists
test
push
mov
call
jmp
scas
cmp
xchg
cmc
dec
lods
pop
iret
push
push
movl
dec
jl
sbb
adc
cmc
add
xchg
scas
mov
in
sbb
lods
jns
mov
scas
cmpsl
stos
inc
pop
mov
mov
enter
and
xlat
dec
imul
ja
and
or
xchg
or
scas
int
cltd
mov
mov
adc
leave
mov
std
cmp
mov
mov
stc
faddl
xchg
outsb
mov
jnp
int
dec
sub
ficoms
adcl
or
inc
outsb
lahf
in
pop
and
xor
dec
xchg
push
and
scas
mov
ss
mov
mov
inc
pop
and
in
ja
jbe
pop
add
scas
jne
and
js
es
sti
sub
test
mov
and
sbb
jg
lahf
dec
out
int
mov
or
int
push
xor
pop
adc
dec
aaa
and
mov
jmp
cwtl
dec
cmc
stos
push
xchg
es
das
or
add
jmp
jle
xor
lock
out
je
rcrb
fwait
lret
dec
ds
mov
icebp
cmp
pop
xor
push
jecxz
jmp
lock
icebp
pop
inc
outsb
std
bound
mov
jne
orb
fcompl
cmpl
dec
pop
cltd
xchg
and
ret
jecxz
lea
idivb
dec
adc
rcll
mov
test
pop
mov
mov
jns
cwtl
xor
and
add
sub
test
mov
int3
stc
adc
int3
call
loop
jge
ret
or
lock
aad
xor
fistps
sub
push
or
nop
adc
lahf
lods
mov
addr16
cmpsl
dec
cmpsb
sub
mov
pop
fsubrl
xor
ja
roll
lods
mov
inc
fisubrs
dec
cmc
add
mov
dec
loop
test
fldt
mov
mov
xor
pop
xchg
aam
cmp
inc
and
jg
imul
mov
cmp
and
rcll
pop
xor
dec
je
daa
pop
xchg
jno
aam
mov
fwait
hlt
fucomp
cld
sub
dec
mov
dec
call
jmp
nop
jne
adc
shlb
pop
in
mov
in
sub
xor
sbb
aam
mov
fwait
iret
int3
shl
fidivrl
aaa
test
xchg
lret
mov
inc
mov
in
jno
loopne
aam
ja
push
push
aas
dec
aaa
mov
mov
fldl
jmp
cmovae
aaa
jmp
dec
jle
push
icebp
fisttpll
sub
add
fs
adc
lret
iret
movsl
sub
xchg
add
push
or
fstp
xor
out
dec
xchg
ss
xchg
rcl
sbb
pop
test
pusha
imul
jno
cmp
cmp
fdiv
enter
jp
sub
xchg
stc
sbbb
jb
movb
in
mov
sbbl
cmp
mov
lds
ss
jp
faddp
pop
cmp
mov
sbb
fxch
jg
pop
sub
aam
adc
mov
sub
jne
leave
jno
iret
sub
aas
sub
push
enter
mov
jge
dec
xchg
lret
mov
cmp
cli
xchg
lret
push
dec
int3
add
mov
in
add
add
mov
lods
daa
push
es
lcall
cwtl
sub
pushf
fs
mov
dec
xor
pop
outsl
outsb
sub
add
out
dec
cwtl
adc
lcall
or
or
xlat
ja
or
insb
ja
jmp
pop
push
mov
sub
in
xor
push
mov
lock
push
mov
cmp
cmp
shrl
cmpb
mov
loope
and
xchg
leave
xchg
jnp
and
inc
outsb
mov
in
leave
out
cmpsl
dec
mov
mov
cltd
mov
jnp
data16
xchg
ljmp
xorl
stc
adc
jno
loop
flds
ds
and
push
popf
mov
pmullw
in
and
or
xchg
out
bound
dec
jp
dec
loopne
mov
lock
lods
jl
sbb
addl
test
xchg
pop
lret
in
jge
mov
xchg
cmp
sub
sbb
idiv
int
mov
negb
adc
cmovl
xor
add
fmulp
pop
negl
aad
clc
jno
lods
repz
popf
stc
pop
mov
ficompl
push
int3
inc
xchg
aam
push
insb
sbb
les
ret
dec
into
inc
mov
cmp
mov
sub
rclb
cmc
movsb
bound
xchg
add
lret
add
std
lcall
xor
mov
push
and
lret
pop
aas
movsl
repz
mov
or
sbb
xor
jmp
ret
add
out
inc
movsl
jg
ds
cmp
fwait
push
lea
into
or
aaa
dec
bound
xchg
insl
sub
push
mov
ret
mov
fidivrl
jl
out
jecxz
popf
outsl
int3
sahf
ss
into
mov
hlt
shrl
adc
enter
jl
ljmp
cmp
ljmp
ljmp
insb
xor
jecxz
add
adc
xor
jae
mov
mov
enter
mov
jb
and
cld
imul
daa
shlb
inc
push
mov
stc
pop
or
xor
xor
or
out
xor
loop
push
loop
sub
pop
test
push
add
mov
aad
jae
cmpsl
xor
mov
add
je
jno
mov
pop
mov
addr16
xor
xor
popa
mov
jb
mov
outsb
sarb
sbb
addr16
out
lods
mov
subl
adc
jno
sahf
jb
loope
pop
xchg
mov
pop
sbb
mov
es
data16
and
mov
mov
mov
cld
enter
sbb
test
aaa
dec
jl
inc
jmp
or
dec
arpl
xchg
inc
inc
out
mov
pop
dec
dec
in
arpl
push
iret
mov
jl
shll
mov
xor
xchg
cmp
sahf
mov
and
or
add
fcoms
dec
andl
std
ffree
adc
xchg
daa
outsb
dec
shlb
mov
das
cmpsb
iret
fwait
push
pop
shll
imul
nop
adc
mov
cmp
popf
and
and
mov
int3
scas
out
filds
or
dec
dec
stos
push
sti
dec
cmp
fisubl
mov
sbb
cwtl
inc
xchg
inc
xchg
mov
inc
fwait
ja
mov
imul
or
and
pop
rorb
test
std
fildl
fldcw
clc
push
ret
sub
and
movsl
out
or
sbb
mov
pop
push
fcoml
dec
lods
sahf
jae
xchg
xchg
and
fiadds
push
out
push
dec
cmc
dec
jle
iret
cmp
xor
add
repnz
mov
dec
cltd
push
scas
shrl
imul
sub
adc
outsb
pop
sbb
sbb
imul
jecxz
sahf
lret
mov
jno
out
mov
pop
jbe
cmp
in
outsl
mov
xor
jl
dec
adc
mov
jnp
jge
inc
roll
push
icebp
mov
and
fs
lods
mov
loopne
repnz
mov
pop
arpl
mov
pop
inc
out
push
iret
mov
sub
and
stos
mov
cmp
dec
mov
das
pop
rcl
and
fldenv
jl
mov
jne
sar
mov
xchg
pushf
xor
pop
imul
jno
cmpsl
mov
jae
shl
pop
movsb
outsb
jmp
xor
ds
fimull
sbb
ja
jne
mov
nop
mov
xchg
jo
xchg
add
fdivrl
sbb
movsl
mov
dec
test
fwait
loop
jae
in
sarl
into
sub
jae
je
js,pt
jl
js
ss
cmpsl
xor
adc
push
dec
xchg
pusha
xchg
mov
mov
loope
cmp
cmp
push
xchg
loope
sbb
imul
xchg
add
jne
fstps
inc
jo
es
pusha
pop
leave
ljmp
xor
mov
movsb
jcxz
dec
test
jae
das
push
xchg
dec
loopne
femms
add
push
add
xchg
stos
xchg
pop
jle
add
mov
mov
add
in
pusha
add
cmp
mov
stos
testb
ja
sbb
fmuls
sub
dec
int
cltd
aam
add
jae
and
mov
dec
cmp
sub
popf
lods
fldenv
inc
rorb
lods
shll
dec
sbb
data16
in
lahf
add
orb
stc
jne
into
push
pusha
xchg
jmp
scas
sub
mov
sub
sbb
mov
lcall
mov
fnsave
sub
adc
test
insb
lods
lock
push
nop
enter
jne
mov
outsl
jg
pop
jg
lret
add
pop
push
dec
out
sub
sti
cmp
test
fs
push
pop
fisttpl
les
or
fsub
push
idiv
mov
sbb
pusha
xlat
stos
in
mov
pop
fwait
ret
jmp
andl
fildl
mov
imul
or
pop
scas
xchg
pop
orl
enter
jecxz
repnz
and
mov
push
push
negb
pusha
mov
sub
out
jnp
jmp
sub
lcall
call
insl
daa
cmp
gs
out
stos
movsl
and
fwait
adc
pop
mov
in
or
and
insl
sti
mov
iret
jno
mov
mov
xlat
lock
clc
shrl
cmp
rorb
movsb
out
aas
xor
dec
inc
out
je
ljmp
js
sbb
pop
jmp
aas
fwait
push
stos
or
das
bnd
int
mov
sub
gs
pop
dec
test
add
jge
jbe
add
lret
adc
cs
inc
mov
rol
fsubl
divl
loopne
repz
test
hlt
xor
add
in
lods
mov
stos
aam
fsubs
cmp
dec
push
sub
or
mov
pop
sbb
xor
add
not
xchg
ja
mov
fs
add
cmpsl
adc
jnp
add
jg
test
test
mov
and
bound
je
mov
jle
adc
mov
shr
or
cmp
adc
mov
push
sbb
xchg
xor
inc
std
aad
inc
out
fsubrl
adc
out
scas
es
movsl
clc
mov
lock
xchg
movsb
cmpl
popf
int
mov
inc
pop
mov
movsl
mov
push
xchg
imul
out
pushw
imul
or
ficoms
push
mov
or
add
imul
mov
addr16
xchg
stc
pop
pop
jmp
in
xchg
into
shrb
mov
fdivrl
repnz
vaddss
pop
push
das
fcmovnu
mov
popa
sahf
push
add
das
in
pop
mov
sbb
or
shlb
in
xor
push
sbb
test
test
sbb
push
das
cmp
xchg
jle
ljmp
ret
pop
sub
into
add
outsl
call
xchg
out
ljmp
dec
pop
rorl
hlt
iret
sub
mov
repnz
mov
loopne
hlt
lahf
mov
fstpl
pop
inc
cli
mov
inc
xor
or
dec
testl
jg
loopne
aam
xchg
dec
nop
hlt
les
lods
inc
shlb
inc
dec
sub
and
popl
daa
add
sub
mov
fildll
mov
addr16
clc
sbb
int
cmp
stos
out
jo
aad
std
cmp
pop
sbb
xchg
fcmovbe
inc
push
fmull
cs
inc
sbb
cmpsl
imul
sub
lock
sub
mov
cmp
scas
fwait
jmp
ret
or
data16
inc
sub
jmp
mov
and
decl
sbb
pusha
fidivl
and
std
adc
adc
fstl
dec
pop
mov
cmp
loope
les
and
push
mov
rcl
cmpl
subl
imul
mov
jns
js
pop
call
xchg
stc
sbb
mov
inc
sbb
les
pushf
repnz
mov
inc
lret
mov
jno
or
and
in
xor
stos
mov
push
adc
aas
cmp
mov
aam
xchg
adc
into
adc
push
push
cmp
jno
out
outsb
mov
incl
out
cmpsl
push
and
mov
fnstenv
js
imul
add
or
or
mov
mov
lea
and
add
out
mov
loop
mov
in
sub
call
inc
cmp
sbb
push
aas
sar
addr16
fiaddl
movsb
out
adc
xchg
pushf
and
lods
adc
jle
jnp
lret
pop
mov
ss
shll
pop
jle
jg
add
les
xor
jecxz
jg
imul
or
mov
or
or
rolb
popf
cld
pop
pusha
das
dec
jecxz
je
cmp
cmc
cmp
leave
lods
pop
add
sti
sub
js
xchg
shll
fwait
push
leave
mov
cmp
js
fs
mov
inc
movntps
aas
stos
aam
fsub
and
lcall
or
push
lret
xchg
adc
rclb
mov
push
ljmp
icebp
mov
add
lret
aam
jg
movsl
mov
je
or
xor
cmp
sbbl
imul
sub
inc
sbb
in
xor
xchg
call
fidivrs
dec
cli
sub
jge
jp
out
int
adc
cmp
fisubs
and
aas
push
decl
jecxz
arpl
stos
cmp
jns
dec
push
dec
dec
dec
sub
cmpsl
shll
lds
pushf
iret
mov
cmpsl
and
xchg
push
sub
mov
int3
hlt
icebp
mov
rcll
jge
jmp
js
pop
xchg
test
lea
push
jge
sub
in
int
jns
leave
ss
pushl
sub
aad
lods
ret
xchg
aaa
inc
sbb
ficoml
sbbb
inc
test
dec
xchg
cmp
int
das
jo
pop
pop
aas
fisubs
adc
xchg
cli
pop
popa
popf
imul
aaa
jno
lcall
ja
xlat
inc
dec
or
or
ss
push
pop
cmp
push
adc
mov
dec
pushf
jl
sub
mov
in
clc
xor
stos
testb
test
ss
ret
jecxz
insl
icebp
xchg
testl
lcall
lahf
xor
aad
xlat
adc
bnd
dec
adc
dec
pop
ret
outsl
mov
dec
into
in
xor
es
nop
pop
stc
sbb
and
inc
mov
cmc
push
pop
xchg
popa
xchg
test
sub
jp
or
fldt
ss
pop
bound
lock
mov
sarb
sub
or
out
outsl
or
pop
mov
jl
sbb
jecxz
shll
loope
iret
inc
push
jecxz
and
mov
aaa
scas
js
ficoml
out
cmp
js
sbb
inc
mov
cmp
pop
stos
std
test
pop
inc
repz
push
jge,pn
mov
inc
inc
fucom
ffreep
sar
mov
pop
mov
pop
in
mov
adc
addr16
call
icebp
test
cmp
dec
mov
xchg
pop
outsb
popa
inc
cmp
add
mov
sarl
mov
add
lcall
idivl
insb
ljmp
fwait
jns
and
mov
pop
lret
jns
xchg
daa
and
popf
and
out
mov
mov
jg
or
pushf
jae
fisttpll
add
sbb
pop
push
inc
xchg
or
cmp
hlt
xchg
mov
andb
test
mov
push
fdivs
dec
repz
ret
xorb
or
and
setbe
std
enter
push
adc
mov
push
xchg
xlat
fmulp
xchg
add
sbb
div
in
push
mov
push
das
sbb
scas
dec
or
mov
lds
sbb
xchg
adc
mov
or
es
jo
fs
pop
jbe
push
mov
dec
testb
cwtl
xor
push
bound
movsb
daa
stos
inc
test
add
xchg
push
push
daa
push
xchg
inc
lea
ja
lods
adc
cli
pop
loopne
adc
bound
mov
sbb
subb
add
sbb
sub
and
aaa
jno
and
call
das
addb
pop
mov
mov
or
dec
stc
pop
mov
jg
and
cmp
in
pop
ja
inc
jl
lds
or
inc
dec
adc
inc
outsb
call
and
fwait
into
cmp
jmp
and
push
iret
sbb
enter
ljmp
mov
pushf
jle
mov
jl
pop
add
fs
stos
push
sahf
outsl
lret
push
mov
dec
cmp
ficoms
add
insb
loope
xchg
or
loope
cs
xchg
push
adc
add
int3
inc
in
stc
rol
iret
jne
dec
jae
jmp
pop
jg
mov
mov
iret
mov
outsl
push
test
int3
inc
clc
and
test
add
cmp
mov
es
xor
lods
pop
pop
les
int3
nop
lret
mov
or
jne
push
sub
fisttpl
push
inc
addb
pop
sub
dec
dec
dec
jge
test
xchg
cmc
or
das
push
jbe
inc
push
mov
jl
cmp
popa
sbb
cmp
in
xor
fst
inc
rcrb
cmp
iret
sbb
push
push
mov
mov
das
stc
adcb
lcall
push
sbb
sbb
jno
mov
lock
daa
mov
pop
out
cli
mov
mov
push
ja
ret
hlt
mov
in
xor
outsl
mov
xchg
shrl
int
popa
aas
rolb
movsl
les
dec
outsl
je
pop
fsubrs
mov
add
repz
sub
mov
jge
add
inc
push
lcall
pop
es
std
lods
imul
sub
addr16
loop
mov
xchg
mov
inc
cmp
and
mov
xchg
mull
jbe
bound
into
jle
push
inc
call
out
mov
xor
and
stos
and
loop
push
rcll
lret
rcll
lcall
out
lret
arpl
xchg
dec
adc
sahf
mov
pop
dec
orl
pop
insb
mov
scas
lods
pop
mov
pop
pop
sbb
leave
scas
mov
cmp
push
fsubp
jb
push
call
out
or
cltd
mov
sub
test
mov
dec
gs
mov
scas
pop
stos
cmpsb
jp
subps
inc
inc
out
in
sahf
out
shlb
xchg
pop
sbb
fidivl
arpl
mov
lods
ficomps
test
jp
pop
add
pop
mov
call
stos
daa
push
mov
std
pop
lods
push
clc
inc
jne
insl
add
and
in
inc
shufps
sar
adc
xor
jae
adc
xor
fsqrt
push
arpl
cmpsl
fdivrs
das
pop
rcrl
cmp
stos
fisttpll
in
loop
xor
mov
cmp
xchg
ds
fdivl
daa
xlat
test
jnp
add
in
push
push
dec
mov
cmpsl
lods
jbe
popf
popa
insb
push
adc
cltd
cli
pop
sbb
call
xor
iret
adc
dec
mov
mov
movsb
pop
xchg
push
inc
pop
jbe
and
rcl
pop
subb
leave
mov
andl
in
out
push
pusha
sbb
fnstcw
add
imul
pop
clc
test
push
add
data16
jb
cmp
mov
test
sbb
loope
fsts
testl
pop
in
xor
xchg
aas
jbe
dec
cmp
sub
test
cmovns
popf
punpcklwd
out
xchg
inc
push
xchg
stos
and
clc
dec
aas
sbb
push
fnstsw
and
js
in
loopne
les
nop
stos
and
mov
repnz
cmp
sub
dec
mov
xchg
inc
add
add
leave
je
push
inc
dec
add
jo
adc
sub
adcb
dec
dec
lahf
or
stos
sub
mov
push
sarb
jge,pn
pop
sbb
pop
add
cmp
insb
das
xchg
pushf
cmpsb
into
ret
push
sub
pop
jae
cli
sbb
jne
push
adc
sub
into
jne
push
xchg
sbb
dec
fdivr
jmp
dec
dec
jnp
psubd
xchg
cmpsb
out
clc
lds
pusha
rcrl
lret
bound
aas
push
mov
pushl
lcall
sarl
jno
enter
push
inc
dec
pop
hlt
aad
mov
push
movsl
pop
mov
mov
repnz
xchg
jmp
dec
movsb
mov
scas
inc
cld
fnstenv
adc
jp
rorb
out
push
adc
rcl
movsb
or
lds
data16
out
adc
sbb
int3
push
hlt
movhps
fiadds
sbb
inc
xor
inc
adc
mov
sahf
pop
pop
and
daa
aaa
stos
pop
cmpsl
nop
iret
cltd
mov
adc
cmp
jno
pusha
lods
pop
jle
sbb
or
scas
mov
test
mov
ds
mov
sub
in
xor
push
shlb
out
push
mov
pop
add
jecxz
test
sub
jnp
fstcw
lds
sbb
jp
mov
inc
std
pop
pop
fstpl
aam
fcoml
sub
test
dec
mov
xor
push
pop
clc
dec
ss
cwtl
pop
lods
scas
and
add
mov
out
mov
loope
cwtl
mov
push
push
adcb
popa
int
test
out
pop
inc
pop
cmp
sbb
or
fcomip
mul
push
das
loop
inc
push
iret
lods
add
stos
test
xchg
into
mov
pop
push
fdivr
jg
fsubrp
inc
jae
rcl
into
sti
jb
pop
fs
xchg
jnp
cmpsl
cmp
adc
dec
adc
push
dec
xchg
fidivrs
sbb
mov
and
ds
xchg
xchg
les
loop
cmp
cld
js
sarb
fdivr
push
jl
lods
sbb
push
dec
sub
xchg
insb
or
dec
dec
stos
or
mov
in
movsl
jo
or
out
lock
pop
addl
test
iret
pop
fdivrl
dec
stc
dec
jl
lahf
mov
imul
hlt
sbb
js
cmp
inc
cld
out
das
jno
and
call
loop
mov
xor
das
jno
jge
cltd
jle
or
aas
imul
jg
mov
pushf
lret
icebp
add
ss
loope
push
imul
mov
aad
mov
or
pop
enter
sbb
xchg
mov
std
nop
lock
fs
stc
mov
mov
cmp
cwtl
adc
xchg
ljmp
xor
icebp
stos
jno
sub
cld
into
add
jo
int
pop
insl
jns
xor
sbb
and
adc
divb
jnp
mov
clc
dec
jecxz
inc
sbb
jle
scas
xor
pop
or
mov
xor
out
mov
ss
push
push
jne
xor
hlt
sub
xchg
repnz
fldenv
or
out
push
imulb
ds
dec
mov
sti
mov
imul
clc
pop
nop
cmpsb
ss
mov
sbb
in
call
sub
add
add
cmp
pop
mov
push
aas
jmp
pop
mov
dec
cmp
incb
scas
push
pusha
bound
dec
jg
lahf
ret
and
and
jmp
clc
dec
std
repz
out
insl
mov
cmc
jecxz
push
cmp
daa
mov
push
sbb
push
dec
sub
xchg
jo
js
imul
inc
cs
insb
test
mov
in
jl
icebp
leave
imulb
insb
jae
lahf
jl
cmp
xchg
movl
push
mov
pop
fdivrs
mov
insb
jge
and
fimuls
sbb
xchg
test
inc
and
sbbl
xchg
push
mov
inc
popf
push
inc
fisubs
xchg
jb
cmpsl
sub
jb
mov
sub
andb
push
loope
jp
mov
dec
stos
cmp
scas
lret
push
adc
add
inc
or
stos
repz
inc
fstpt
dec
fmuls
add
cmpsb
sbb
stos
jb
imul
mov
insb
iret
jae
cld
lds
jne
in
mov
loop
sub
add
loop
sbb
ljmp
push
in
jp
aas
bound
sti
daa
enter
scas
jp
jbe
daa
fwait
sub
xchg
testb
stos
dec
jl
movsb
push
addb
add
sbb
mov
daa
mov
add
jnp
mov
int3
pop
lds
xchg
xchg
cmc
loope
stos
adc
jno
xchg
cmp
fidivrs
inc
faddl
lret
loop
into
sti
adc
mov
jg
lret
test
test
es
inc
int
stos
mov
dec
mov
lret
cmp
sti
xor
pusha
cmp
push
jae
adc
pop
adc
mov
mov
or
mov
mov
out
fbld
ja
sbb
repz
mov
aas
ss
inc
push
jb
xchg
mov
inc
mov
mov
ss
ror
ss
adc
test
adc
mov
insl
sahf
repnz
sti
jecxz
xor
pop
cmp
mov
jl
cmpl
call
call
jp
daa
insl
cmp
leave
sbb
xchg
out
push
xchg
xcrypt-cbc
cmpsl
shll
pop
sbb
and
cmp
rcll
pop
mov
in
push
add
shrl
insb
xchg
and
mov
cli
cld
mov
leave
or
fbld
lds
xlat
hlt
and
iret
pop
inc
pop
into
fbld
and
xchg
repz
xlat
stc
cmpl
cmp
ret
shlb
lea
inc
leave
test
call
leave
push
sbb
mov
pop
call
add
xchg
adc
int3
or
push
push
or
std
pop
add
pop
or
add
inc
jl
adc
xchg
clc
jns
jle
cmp
in
lahf
jecxz
xchg
shrb
pop
jnp
lcall
fwait
stc
adc
sbb
sbb
mov
dec
mov
es
std
and
notb
std
jno
js
cs
daa
xor
mov
popf
ret
enter
out
in
adc
sbb
inc
fmul
test
jo
mov
xchg
fsubl
pusha
aam
fiadds
ret
rcrl
pop
adc
push
mov
popf
rorb
in
adc
push
mov
lds
loope
sti
pop
test
push
frstor
mov
sbb
lahf
dec
in
ja
mov
mov
mov
aam
inc
ficoml
xor
scas
cmp
xor
icebp
adc
repnz
hlt
add
mul
out
shr
adc
inc
sarb
xor
xchg
or
stos
mov
jp
fsub
mov
cmp
adc
out
fwait
and
adc
jg
leave
cmc
pop
movsl
xchg
imul
test
jl
ret
mov
sub
aad
xchg
cmp
arpl
xchg
cwtl
mov
jae
scas
insl
scas
mov
inc
sahf
add
out
inc
sbb
loope
inc
pop
test
push
mov
das
outsb
cs
inc
fistl
or
mov
add
aad
test
dec
xchg
imul
outsb
sub
push
repnz
test
inc
bnd
sarl
jecxz
inc
and
fistps
jnp
popf
ljmp
test
xlat
cmpl
outsb
ret
jecxz
xchg
stos
ja
jo
leave
jb
pop
push
push
in
inc
iret
hlt
cmc
lahf
mov
dec
lea
mov
andb
jl
fdivrl
ror
inc
mov
daa
adc
adc
mov
nop
out
inc
mov
mov
popw
faddl
inc
push
sbb
xchg
push
add
add
imul
jns
cmc
mov
clc
mov
or
mov
shlb
ja
data16
sub
jo
rcrb
jo
jg
and
mov
sbb
sub
cmpsb
aad
pop
pop
stc
lcall
inc
jno
divb
lret
sti
lods
pop
mov
stc
aas
push
adc
xchg
jmp
mov
push
repnz
subl
jle
cmp
iret
jge
dec
sbb
mov
in
add
inc
mov
pop
out
sbb
jp
popf
das
in
xor
jle
xor
or
mov
subb
mov
sbb
cld
jnp
jmp
add
inc
cmpsl
jl
in
xor
sub
lods
xchg
arpl
arpl
cmp
dec
pop
je
addr16
shlb
rcll
xchg
lret
sti
cmp
xchg
es
mov
loope
lods
div
xlat
test
sbb
inc
mov
jnp
xchg
dec
in
adc
cmp
ret
dec
jle
sub
mov
jmp
mov
or
movsl
movsb
and
or
es
imul
push
inc
pushf
lret
ja
inc
in
shl
jl
jne
or
xchg
dec
scas
hlt
rcll
jl
jno
lods
jp
jo
scas
std
xor
pop
or
push
sub
jns
cmp
out
mov
dec
aam
push
push
sub
aaa
push
aas
mov
stos
xor
out
mov
jp
add
nop
out
jbe
test
ret
pop
mov
xchg
hlt
sub
adc
jl
or
dec
hlt
ja
test
jle
pop
pop
push
xor
cmp
inc
pop
or
mov
xchg
sar
fnstenv
addr16
arpl
and
loop
ljmp
or
mov
pop
cltd
icebp
mov
jecxz
xchg
jo
xchg
cli
decb
aas
mov
sbb
inc
inc
mov
movsl
test
mov
xor
push
push
add
hlt
and
sti
mov
jns
or
push
pop
jge
aad
sub
mov
test
outsl
ficompl
testl
xchg
rcll
xchg
push
xchg
jno
pusha
sub
dec
popf
hlt
inc
lret
fdivrl
push
rorl
imul
hlt
push
add
out
jge
ja
arpl
push
mov
out
frstor
in
data16
pop
sbb
pop
sub
imul
or
or
sbb
mov
or
popf
popf
xor
sub
cmp
lock
push
xlat
adc
pop
pop
fnsave
int
imul
inc
icebp
cmp
and
inc
sbb
dec
sbbb
mov
loopne
aaa
stos
outsl
jl
sbb
mov
xchg
push
outsl
mov
push
adc
mov
add
adc
dec
scas
hlt
in
xor
popa
incb
pop
movsl
pop
mov
mov
scas
xchg
test
jle
pop
loop
cmp
add
sbb
or
adc
test
popf
call
or
in
data16
rorb
pop
dec
or
pop
popf
cmp
hlt
ret
div
pop
in
sub
sub
jo
ja
and
fbld
fyl2xp1
test
fimull
jg
mov
push
inc
stos
repnz
xor
in
mov
xor
add
pusha
pop
sarl
rcrl
in
cmp
test
in
mov
loop
jne
push
in
std
ficoms
inc
rcll
sbb
pop
outsl
jae
mov
shr
and
clc
sbb
test
fstpt
mov
cmpsb
dec
pop
popf
lret
in
imull
inc
popa
mov
lods
cltd
inc
rol
loop
mov
daa
shll
add
jle
add
cmp
push
int
pop
loope
pop
or
mov
mov
mov
jno
inc
pop
mov
and
push
sti
adc
iret
push
or
xor
inc
int
xlat
test
jle
add
mov
cmc
mov
inc
jp
jae
jl
xchg
jp
scas
lahf
cmpsl
lret
test
arpl
xor
jno
lret
fwait
sub
add
enter
mov
xchg
stos
shr
push
lret
inc
pop
ficomps
loop
inc
cltd
orb
movsb
add
mov
inc
add
mov
xchg
xchg
stos
xchg
popf
mov
mov
pop
popf
mov
xchg
divb
pop
psraw
sbb
clc
xor
lock
pop
out
and
mov
sub
ljmp
sbb
fidivrs
jge
dec
cli
mov
ja
dec
lods
pop
lcall
nop
movsl
mov
aaa
rcll
add
fcmovbe
inc
push
iret
mov
std
lock
lds
add
cld
and
cmpsb
stos
fwait
push
nop
shlb
addr16
sti
dec
fistpl
and
iret
sub
popa
jecxz
inc
add
inc
les
push
mov
jge
add
add
add
ljmp
mov
or
adc
adc
pop
dec
adc
xchg
out
or
test
out
sbb
repnz
andl
push
xchg
test
dec
dec
mov
mov
adc
adc
xchg
lods
inc
add
jp
ss
cmc
sbb
mov
cs
pushf
pop
movsb
gs
pusha
jmp
aad
push
cmpsb
add
cmp
stos
mov
xor
and
or
fwait
ret
xchg
insb
adc
push
mov
test
xor
push
cmp
pop
idivb
inc
negb
testl
xchg
leave
inc
imul
xor
xchg
cmpsl
lods
adc
adc
iret
xchg
gs
inc
xchg
addr16
shll
das
xor
xchg
shl
notb
jb
fwait
cmp
bound
pop
mov
hlt
xor
and
fnstenv
hlt
das
scas
dec
shrb
jb
mov
and
jl,pt
xchg
mov
mov
jo
dec
imul
push
loopne
stos
roll
sbb
push
scas
jle
pop
lea
mov
sbb
iret
mov
sbb
int
mov
push
pop
jb
mov
popa
adc
sahf
cmc
sub
cwtl
out
fdivl
mov
aaa
dec
cwtl
sub
sub
lods
rclb
mov
hlt
fwait
ljmp
test
xchg
inc
sub
jge
cmpsb
dec
push
into
add
movsb
pop
aad
ret
and
sti
xchg
jg
mov
pop
sub
adcl
lods
xchg
dec
xor
fldcw
movsb
dec
int
scas
adc
mov
imul
mov
lds
lahf
bound
outsl
rorb
fisttps
pop
sub
and
sahf
jns
shlb
mov
outsb
repnz
arpl
jp
iret
loope
xor
mov
lds
mov
mov
ja
push
sbb
sub
leave
push
into
dec
mov
lds
imul
out
mov
jae
or
mov
cli
sub
dec
sbb
mov
and
fld
adc
mov
cmpsl
xchg
mov
movsl
dec
adc
or
jnp
jge
sub
hlt
pushf
xchg
mov
push
xchg
push
sahf
scas
xchg
jnp
adc
or
pop
xchg
sahf
add
and
lret
cmp
push
ja
xchg
push
jnp
divl
sub
fwait
pop
sub
add
mov
loope
xchg
adc
and
push
aad
dec
lods
jecxz
testl
push
sub
fwait
xor
push
ss
notl
pop
fldl
shlb
std
int
inc
lcall
or
xlat
mov
imulb
imul
rcll
mov
jecxz
rclb
lret
pop
push
or
popa
call
popa
ja
dec
mov
loope
adc
jecxz
pushf
push
adc
nop
pop
jae
xchg
iret
mov
fidivrs
fistpll
orl
push
fwait
xchg
fstl
repz
dec
sub
mov
pop
pop
rclb
pop
ja
subl
jns
xchg
and
mov
jmp
inc
sub
mov
stos
jno
mov
shll
add
xor
ljmp
dec
adc
icebp
sub
push
cwtl
sub
xchg
loop
or
insb
dec
add
fisubrs
sbb
mov
or
popf
and
xchg
insl
adc
loop
cmp
jo
rcrb
int3
pop
or
jae
sahf
xor
test
rorl
pop
jns
mov
hlt
repnz
inc
pop
or
sbb
mov
popa
pop
fisttpll
xchg
test
sub
inc
push
and
aam
ret
sahf
push
fmul
sbb
cmpsb
pop
add
lock
imul
les
ja
imul
outsb
lcall
imul
dec
lret
mov
cmp
push
sub
les
xchg
shrb
sub
movsl
pop
pop
push
pop
inc
pop
shl
movsb
push
sub
out
mov
aam
aaa
loop
push
mov
push
fidivrs
push
jmp
aas
dec
lahf
xor
movsb
shrl
fdivrl
stos
fs
loop
js
add
mov
jge
les
jecxz
fcomps
aaa
cli
dec
daa
adc
nop
pop
push
loop
xchg
nop
pcmpgtb
jmp
in
psubsw
push
sbb
sub
mov
pushf
jbe
push
jae
idivl
mov
xchg
ja
loope
iret
testb
push
add
repnz
fstl
pop
out
jnp
mov
into
add
movaps
mov
pusha
cs
and
movsl
scas
xlat
jo
imul
fcmovnbe
jo
inc
mov
punpckhbw
mov
loope
jmp
ss
mov
mov
movsl
mov
sub
or
cmp
sbb
push
and
jmp
lret
scas
iret
call
stos
jns
daa
xor
jle
xchg
mov
sarb
test
ffreep
sub
add
pop
je
in
mov
sub
mov
shlb
std
sub
repz
jle
add
add
clc
jno
and
inc
pop
dec
cltd
adc
xor
mov
or
mov
xchg
jp
mov
outsl
rorl
shrl
push
mov
sub
ficompl
sub
or
adcl
inc
adc
test
aas
or
stos
lret
lret
pop
fsubrs
xchg
jge
adc
sbb
cmc
aam
or
imul
fstpl
jg
pop
pop
xchg
cmp
push
mull
inc
push
aam
in
je
mov
adcb
mov
test
jns
jmp
jg
rcrl
xor
mov
scas
and
dec
shrl
mov
xor
jl
mov
stos
jg
popf
and
lock
jmp
lods
sub
and
pop
lods
insb
xchg
prefetcht2
fwait
and
mov
push
fwait
jmp
xor
sbb
jns
push
mov
mov
mov
dec
inc
cmc
add
out
sahf
add
cmc
push
adc
push
dec
shrl
adc
push
or
dec
mov
add
mov
or
xchg
cltd
gs
mov
pop
xchg
pushf
and
jp
push
xor
jmp
cld
mov
dec
lret
orl
adc
xchg
xchg
push
out
incb
outsb
gs
jp
mov
enter
pop
jbe
inc
xor
idiv
mov
sbb
into
mov
mov
dec
sti
testl
hlt
mov
mov
scas
xorb
cmpsl
ljmp
jmp
sbb
rclb
inc
inc
test
xchg
pop
jmp
pushf
shrl
xor
mov
add
fbld
push
add
hlt
test
jmp
lret
xchg
mov
sbb
insl
cmp
sub
nop
insl
cmp
or
neg
fsub
or
int
popa
xor
lods
adc
sbb
mov
or
xchg
cmc
jmp
fmul
arpl
pop
icebp
mov
mov
push
aas
mov
lock
jae
sbb
out
lcall
int3
lret
lret
iret
mov
clc
cmp
cwtl
lahf
into
fisubrs
lret
loopne
and
dec
test
imul
setae
sbb
fsub
bound
repz
cmp
adc
xor
movsl
sub
jp
push
cmpsb
cs
cmp
push
lcall
insl
xor
mov
add
fldt
popf
notb
loop
dec
sub
cmp
pop
ss
arpl
nop
outsl
outsl
outsb
clc
cmp
inc
xor
add
xchg
jge
inc
inc
fisubrl
xchg
xchg
xchg
jns
inc
jg
adc
imul
jecxz
xchg
inc
xor
mov
fidivl
or
adc
out
testl
nop
push
mull
imul
ja
and
lock
adcl
dec
xchg
rorb
mov
aad
mov
imul
dec
movsl
ret
ficoms
and
xchg
and
and
push
pop
sbb
mov
addb
fnstenv
jecxz
xchg
std
inc
or
xor
loop
scas
fsubs
stos
test
pop
inc
pop
or
lods
cmp
sub
jae
push
xchg
mov
jge
ficoml
jnp
or
arpl
inc
xchg
sti
out
fld
mov
pop
mov
mov
sub
cs
inc
loope
cmpsl
and
pop
pop
nop
inc
mov
pop
or
xlat
mov
jmp
sbb
mov
lret
mov
std
push
fildll
sbbl
push
nop
and
xor
dec
mov
cmc
add
addr16
mov
mov
push
out
mov
in
idiv
in
fidivrl
jle
cmp
movl
test
adc
rclb
std
push
and
sub
dec
sbb
xor
dec
jns
xchg
jl
xor
jo
dec
test
jae
testl
push
adc
mov
sub
pop
sbb
xchg
pop
out
push
scas
cmp
sarl
mov
jnp
and
mov
getsec
jb
mov
sub
inc
mov
ja
mov
adc
pop
xor
dec
adcl
pop
aad
stos
shl
loop
mov
fiaddl
or
adc
hlt
mov
xor
mov
lahf
xchg
cmp
push
adc
mov
fildl
mov
push
pop
inc
mov
push
xchg
mov
test
or
jl
mov
aam
push
stos
test
sbb
push
mov
inc
dec
sub
fisubrs
xchg
sti
mov
lods
fimuls
mov
jge
lret
sub
ljmp
jecxz
or
push
xchg
into
stc
adc
dec
ret
jmp
jg
mov
sbb
pushl
mov
ret
and
sbb
insl
lret
addr16
mov
sahf
in
xchg
pushf
lahf
cld
lcall
mov
adc
repz
fnsave
mov
repnz
dec
int
sbb
insb
stc
pop
mov
cmc
push
ds
scas
subl
dec
inc
jle
inc
mov
xchg
movsb
scas
pop
sbb
push
rcr
cmp
std
popf
mov
sahf
cwtl
or
pop
jp
xchg
je
xchg
mov
shll
iret
xchg
adc
lock
cmp
sbb
jbe
jecxz
dec
xor
iret
jl
mov
es
mov
fs
push
xlat
dec
insl
stos
mov
xchg
ret
add
sbb
mov
test
pop
fwait
xor
push
loope
icebp
dec
mov
pop
add
hlt
mov
cmp
sbb
pusha
fcmovb
inc
mov
aas
push
xchg
xor
sub
lock
and
inc
fnstenv
jmp
sub
jnp
hlt
xchg
popf
adc
aaa
test
or
es
insb
sar
add
xorl
xor
insl
repnz
dec
insb
das
sti
insl
pop
pop
das
testl
stos
mov
xor
pop
ret
in
cmp
xchg
scas
cmp
leave
dec
aas
sahf
mov
pop
aas
or
and
cwtl
outsb
outsl
sbb
mov
pop
leave
mov
data16
loop
ret
mov
ret
cmpsb
in
into
add
shlb
push
fdiv
inc
pop
or
mov
or
ret
cmp
xchg
dec
mov
outsl
xor
adc
jb
nop
dec
dec
dec
imul
lds
pop
xor
mov
cmp
popf
jmp
inc
fs
sub
fdivrs
cmpsl
cmp
insb
clc
push
push
leave
int
mov
aam
pop
xor
or
fstp
fsubs
jns
into
jmp
dec
xchg
xchg
push
je
jns
lea
lahf
cs
cmpl
filds
jmp
pop
add
push
pop
addr16
jmp
adc
test
test
sub
xor
pop
outsb
mov
lret
push
jp
xor
xchg
mov
sbb
mov
ja
shr
cltd
lret
mov
repz
adc
sub
xchg
xchg
inc
and
lods
stos
lds
dec
xor
pop
imul
in
xor
sub
daa
mov
inc
call
es
jbe
adc
call
push
outsb
sysret
rcrb
clc
lahf
sub
inc
mov
dec
and
fldenv
sbb
or
add
scas
insl
mov
push
insb
adc
dec
js
sub
mov
out
fnsave
out
pop
loop
and
stos
fcompl
sub
sahf
stos
lods
adc
and
jl
test
cwtl
rcll
sar
rorb
shlb
in
mov
pop
mov
or
jnp
mov
sub
jge
mul
int
and
and
or
icebp
xchg
and
mov
pusha
xchg
cmp
or
xchg
out
inc
pop
aad
sahf
xor
js
adc
mov
xor
mov
jecxz
mov
ficomps
sub
aad
xchg
ret
ret
repnz
adc
jo
cmpsl
xchg
aam
xchg
nop
jl
jno
add
andb
loop
push
dec
jl
test
push
flds
arpl
pop
cli
clc
push
mov
imul
fdivrp
sbb
and
xor
loop
xchg
loopne
and
clc
loopne
mov
dec
mov
sub
ja
and
sbb
cmpsb
jge
incl
outsl
xlat
cmpsb
jmp
jns
mov
das
adc
ja
adc
addr16
jecxz
sub
sahf
test
aad
cmp
sti
fwait
inc
sub
outsb
jbe
xor
mov
or
push
add
cmpsb
and
add
dec
jno
mov
fs
mov
dec
push
pop
aaa
pop
stos
adc
sbb
out
imul
lcall
push
dec
movsb
dec
add
pop
adc
sarl
mov
jo
xchg
shlb
frstor
cld
mov
xchg
loope
bnd
or
xchg
or
bound
mov
cmc
dec
daa
icebp
dec
int
xchg
cltd
adc
mov
mov
sub
inc
or
shr
mov
mov
and
jno
int3
mov
js
cltd
popa
sbb
sub
lods
outsb
inc
test
mov
sub
cmp
out
mov
inc
mov
hlt
loopne
fadds
icebp
je
cmp
sbb
push
or
mov
cmp
push
loope
aam
in
out
mov
out
rcrb
xor
pop
sub
fdivrp
cmp
in
orb
je
push
adcb
adc
cld
cwtl
shll
lea
lcall
or
iret
cltd
cmpsb
push
aam
popa
fsubl
xorb
hlt
sub
int
push
addl
inc
xor
jle
mov
ss
mov
out
out
push
mov
test
cs
add
hlt
jo
cmpsl
pop
ret
fsubs
in
mov
pop
lock
inc
movb
sub
dec
stos
xor
out
push
outsb
out
dec
lds
out
jg
lcall
dec
push
imul
mov
sbb
pop
add
les
xchg
pop
lods
cli
jbe
and
mov
mov
adcl
inc
push
dec
jo
push
mov
aam
movsb
and
mov
inc
push
dec
pop
js
sbbb
inc
cmp
iret
adc
pop
mov
es
cmp
ficompl
imul
add
in
movsl
sub
fcmovne
imul
fs
mov
push
push
ja
outsl
cmp
add
dec
leave
aas
and
cmc
push
add
subl
pop
cltd
dec
aas
dec
aam
scas
cmp
cmc
push
or
std
rorl
sbb
shl
outsl
loop
bnd
lods
mov
mov
sub
adc
mov
pop
cmp
pop
or
xchg
je
aam
dec
mov
and
xchg
test
int3
sbb
punpcklwd
sub
imul
pop
sub
jns
and
add
inc
rol
lds
jns
or
aad
cmp
cmp
xchg
lahf
mov
xor
inc
mov
adc
loop
ja
mov
das
add
pop
adc
icebp
bound
call
add
psubusw
inc
and
jp
dec
fwait
adc
push
fistpl
and
lea
fs
adc
test
push
fs
cmp
add
ljmp
in
mov
pop
stos
loopne
mov
cmp
cmpsb
push
push
pop
cmp
pushf
and
repnz
stos
out
pop
dec
push
pop
jg
iret
and
dec
inc
sbb
dec
push
mov
cli
push
out
push
loopne
int
xlat
and
aad
into
sbb
xchg
push
ret
arpl
loop
cmp
incb
sub
andb
cmp
lds
stos
cwtl
push
fs
lods
cmc
push
jb
fs
push
mov
in
add
push
dec
cmpsl
adc
jns
cmp
popa
add
lea
loope
xor
sub
mov
sbb
jp
cmp
mov
and
outsb
add
in
dec
cmp
mov
shll
inc
adc
dec
mov
insb
ficoml
pop
aas
mov
xrelease
icebp
jmp
xor
mov
sub
xchg
and
jle
les
movsl
dec
pop
pop
addr16
cmp
adc
pushf
mov
mov
lock
lods
or
dec
daa
repz
out
inc
jmp
fwait
cwtl
adc
icebp
cmpsl
js
xchg
jo
sub
sbb
cmc
or
or
mov
xchg
out
dec
mov
cli
mov
jnp
xchg
xchg
sbb
mov
push
ret
and
inc
mov
mov
and
jnp
in
xchg
mov
add
adc
inc
ss
cmp
pop
js
ret
mov
and
mov
test
ror
sbb
imul
sahf
int
cmc
adc
xchg
jo
lret
or
or
push
xchg
add
push
mov
xor
sbb
mov
scas
outsl
sub
pop
mov
add
in
mov
add
mov
jmp
jp
aad
and
or
je
add
arpl
adc
add
and
inc
sti
mov
ja
mov
in
aas
pop
lods
fimuls
das
add
jnp
push
lds
xor
add
xlat
push
iret
sbb
jnp
xchg
jb
jecxz
xlat
dec
fsts
mov
add
cmp
pop
or
ss
mov
pop
fadd
cwtl
insb
scas
adc
xchg
cmp
inc
rcrb
test
cs
jbe
dec
inc
adc
movsb
adc
icebp
loope
jmp
sbb
mov
popf
rcrl
jae
enter
push
fistps
mov
or
shlb
jb
mov
jne
inc
sub
mov
lock
out
inc
sub
je
incl
aad
and
xlat
mov
in
arpl
aas
xor
outsb
push
sub
sbb
scas
adc
and
mov
dec
xor
test
std
test
ficoml
or
mov
mov
xchg
sahf
sbb
xchg
mov
mov
or
mov
sbbb
inc
scas
fdivrl
pop
leave
inc
xchg
loope
mov
xchg
outsl
sub
and
push
sbb
mov
xor
and
add
push
shll
lcall
mov
ja
mov
and
mov
inc
mov
lock
sbb
out
push
movsb
push
mov
repnz
xor
xchg
pop
mov
fmuls
sub
inc
adc
xchg
sti
ror
and
in
inc
add
insl
dec
repnz
fwait
add
movsl
stos
add
pop
mov
adc
mov
mov
xchg
cli
adc
out
aam
outsl
loopne
stos
inc
mov
lds
pop
pop
inc
sbb
and
shll
rcl
mov
adc
push
push
xorl
push
dec
cmp
and
xor
outsl
aas
xchg
adc
sar
incl
cmp
mov
aam
ja
push
cmpsb
sbb
xor
mov
loope
push
dec
push
orb
adc
cmp
sub
lret
xchg
jmp
lods
daa
jg
scas
sub
or
pop
sub
add
jo
movsb
scas
movb
fisubl
push
fsts
mov
cltd
mov
inc
aaa
and
xchg
fwait
test
in
in
mov
jne
and
shll
mov
xor
ret
pop
inc
and
jmp
cmp
bnd
lahf
xor
in
fisttpl
ds
enter
lea
lods
imul
mov
mov
dec
and
lret
pcmpeqb
stc
inc
mov
mov
mov
data16
mov
dec
sub
ss
addb
les
sub
leave
lock
jnp
inc
movsl
fldenv
clc
hlt
test
and
and
mov
es
xor
mov
call
mov
in
nop
int3
xor
lcall
add
loope
pop
pop
mov
mov
shrb
int
idivb
outsb
fiadds
dec
dec
pop
outsb
add
sub
push
inc
inc
bound
fstpt
bound
xor
fsubp
sti
imul
pop
fildll
loop
and
jns
insl
mov
and
data16
pop
test
or
xchg
test
adc
movsb
pop
arpl
je
scas
jmp
insl
popl
pop
mov
int
sub
mov
int3
jns
xor
jbe
cmpsl
ret
arpl
les
inc
sbb
xor
loopne
push
jge
scas
fbld
stc
cmpsb
mov
sbb
jno
xlat
loope
push
in
nop
mov
cmp
mov
leave
pop
mov
shrb
mov
loopne
dec
add
insl
imul
mov
rolb
das
ds
and
cmp
mov
test
mov
loope
cmc
aad
inc
mov
sbb
add
xchg
sub
cmp
mov
jne
push
xchg
fldcw
subl
adc
stos
sbb
jecxz,pn
jnp
push
mov
scas
sbb
sub
mov
out
and
sub
clc
icebp
test
mov
xchg
cmp
jg
cwtl
mov
push
jg
test
shll
xchg
xlat
lret
sbb
shlb
cmp
pop
data16
ja
push
cltd
xchg
lcall
scas
push
mov
ret
adc
xchg
in
aas
xor
mov
mov
push
lock
sbb
jge
adc
inc
rolb
call
pop
and
jno
shlb
jmp
jle
out
cmp
ficoms
jb
movsl
sbb
and
sarb
testl
xchg
or
pop
test
repnz
xor
dec
aad
push
xlat
into
mov
ds
lock
es
movsl
daa
jmp
int3
sub
adc
jge
and
icebp
adc
js
fstps
mov
pop
shlb
push
mov
fnstcw
js
and
xchg
aad
je
add
pop
fcompl
les
loop
pop
loope
push
mov
cwtl
fisubs
mov
lods
adc
mov
add
push
ds
arpl
dec
pop
lahf
xor
pop
aad
cwtl
mov
inc
scas
outsb
mov
jl
lret
stos
inc
add
test
sahf
mov
push
scas
sbb
pushw
adc
stos
adc
mov
outsb
xchg
xor
arpl
je
sahf
test
test
push
andb
in
jmp
push
shrb
subl
lea
in
lret
push
cmp
mov
mov
push
mov
mov
xchg
xlat
cmp
loop
adcb
out
xchg
push
test
movaps
hlt
and
fidivl
test
pushf
cwtl
ljmp
ss
hlt
test
push
xor
sbb
je
iret
sti
push
pop
and
cmc
lods
pop
sbb
adc
in
fsts
nop
lods
pushf
fmuls
call
xrelease
rclb
and
add
mov
sarl
mov
pop
mov
dec
adc
in
das
out
movsl
pop
jp
jns
push
addr16
mov
fwait
lcall
mov
cmpsl
pop
outsb
cmp
jns
iret
pop
inc
lods
test
xchg
inc
loop
inc
pusha
outsb
in
xchg
notl
iret
mov
cltd
add
inc
stos
into
lods
daa
jle
cmpsl
dec
jmp
cmp
in
jns
adc
pop
iret
test
jae
loopne
enter
test
cmp
mov
mov
mov
dec
imul
xchg
cmpsb
sub
in
stos
les
lcall
push
scas
in
inc
sbb
jno
add
outsl
sbb
dec
cwtl
in
inc
and
push
inc
xchg
das
sahf
jl
fs
ljmp
or
pop
jl
cmp
jno
test
sbb
or
sbb
sbb
mov
int
in
sahf
push
pusha
insb
pop
nop
ja
jp
mov
out
in
push
dec
out
jne
push
adc
inc
leave
xchg
imul
mov
sti
push
push
dec
loop
int3
push
mov
xlat
fidivrl
cmpsb
jo
add
sbb
lcall
orps
mov
in
push
jmp
cmpsl
stc
xchg
hlt
in
inc
mov
out
jns
jmp
sti
int
outsb
xchg
in
popa
mov
jbe
sahf
xchg
mov
addr16
xchg
push
mov
psrad
lret
and
inc
cmpsb
hlt
xor
cmpsl
les
push
cld
sbb
mov
inc
xor
scas
cmp
cmpsl
and
pop
inc
testl
push
pop
mov
push
fiaddl
sub
testl
push
mov
push
adc
rcrl
mov
sahf
jbe
add
repnz
xchg
xor
mov
jns
and
popf
mov
nop
adc
jb
sar
loopne
sbb
scas
and
jnp
mov
mov
mov
lret
jmp
mov
inc
mov
mov
lods
push
out
das
scas
pop
cmp
xchg
bound
ljmp
mov
stos
mov
je
sbb
fsubrp
jp
inc
cli
mov
sbb
in
imul
add
sbb
jle
mov
jmp
imul
mov
jp
or
mov
sub
call
cmc
stc
push
mov
nop
pop
imul
mov
iret
int
fsubl
sub
jns
xchg
sub
xor
les
andl
fwait
push
testl
mov
and
inc
mov
das
rolb
push
cld
add
jnp
mov
mov
jle
shrl
adc
xchg
test
std
movsb
sbb
adc
das
xor
xchg
cmpsl
push
mov
int3
pusha
mov
imul
data16
mov
mov
stos
jle
scas
jp
aaa
inc
or
es
stos
dec
outsl
insl
inc
in
push
out
push
loope
lods
test
or
mov
imul
inc
or
mov
dec
mov
imul
rolb
adc
pop
mov
int3
fldcw
lahf
aas
test
gs
shrb
xor
in
int
int3
mov
pusha
shll
and
gs
popa
xlat
sti
push
pop
cmp
push
inc
pushf
inc
inc
sbb
test
fwait
inc
stc
fwait
das
pop
fidivl
or
or
pop
test
push
dec
pop
lret
push
scas
pusha
fcoms
cmpsl
adc
rcll
ss
mov
adc
mov
push
push
fs
fwait
in
or
mov
mov
fildll
test
ja
adc
sub
inc
jno
xor
mov
pop
push
xor
loopne
dec
xchg
xchg
cs
mov
cmc
xor
cs
loop,pn
xor
arpl
les
in
push
lcall
div
jg
mov
sbb
jnp
pop
xlat
std
xchg
inc
dec
cld
jb
mov
dec
inc
hlt
jmp
pushf
adc
popa
xchg
add
xchg
call
out
or
addr16
imul
popf
cs
cli
mov
xor
cmpsl
inc
out
loop
aam
push
jb
lock
sbb
cmp
in
inc
pop
addr16
push
out
ret
mov
nop
jge
add
ss
insb
ficoml
std
lods
xchg
pushf
lds
rorl
sub
adc
scas
loope
push
mov
enter
push
mov
test
and
cli
and
decl
sbb
popa
xchg
fs
inc
mov
or
and
dec
inc
lcall
pushf
js
cld
and
cmp
out
cmp
jns
xchg
cmp
and
jnp
sub
lret
or
arpl
insb
mov
add
and
pusha
cmp
das
lods
pusha
jne
enter
add
cmpl
loopne
js
mov
lea
bound
xor
pop
sarb
das
je
leave
in
sub
aas
stos
xchg
scas
scas
jb
inc
xchg
hlt
jnp
stos
push
inc
fs
xchg
outsl
add
sbb
int
sbb
sub
orb
imul
jle
imul
xor
add
not
add
jae
pop
lods
dec
fists
xchg
out
mov
cmc
shrl
inc
js
test
xor
icebp
fwait
scas
lea
push
xor
adcb
insl
jns
incb
mov
adc
push
int
test
xchg
loope
cmpb
xchg
shll
in
ds
lock
in
and
sub
jnp
and
icebp
inc
push
imul
imul
enter
ljmp
ss
inc
out
into
movsl
iret
adc
add
shl
lea
lret
adc
fwait
int
int3
out
insl
jl
fdivl
scas
ret
mov
xchg
xor
sbb
pop
push
lock
mov
in
jle
adc
pop
fcom
in
jbe
mov
lods
pop
or
dec
push
or
jb
cmp
cmpsb
aam
jp
pop
jp
out
mov
pop
xchg
cwtl
push
jo
pop
or
xorb
popa
mov
imul
sub
jp
mov
mov
jns
push
pop
sub
test
fildll
out
pop
pavgb
mov
jecxz
push
xchg
mov
enter
xchg
rcll
sbb
jbe
rol
out
fimuls
pop
rcrl
and
push
mov
xchg
cmp
adc
and
add
jmp
dec
pop
les
enter
out
gs
pop
cs
nop
jmp
push
sub
jp
aas
xchg
dec
sub
pop
mov
dec
insb
and
in
insl
popf
addb
scas
stos
pop
fists
or
je
scas
xor
add
sbb
roll
inc
cmp
add
sbb
mov
pop
push
or
lods
mov
mov
dec
pushf
repz
shl
pushf
xchg
dec
bound
mov
xchg
xor
sbb
jle
xorb
xor
in
test
je
add
jg
jmp
cmp
jns
subb
cmp
fistl
js
sbb
fcoms
lock
pop
imul
pop
push
cltd
ds
inc
or
pusha
pusha
in
aad
cld
lcall
inc
xor
rorb
dec
movsb
mov
jnp
inc
sti
push
sbb
in
xchg
es
pop
and
or
mov
cmp
int3
push
ss
sub
xor
dec
enter
ja
loop
sub
insb
lods
mov
mov
mov
btc
ljmp
les
out
inc
pop
jae
rolb
adc
cli
fwait
repnz
xor
cmp
push
pop
jecxz
clc
sti
pop
outsb
fdivr
js
jnp
lods
add
fwait
xchg
inc
jo
pop
push
cmp
jo
xor
xchg
mov
inc
jg
or
adc
cmp
mov
dec
xchg
mov
pop
sbb
adc
mov
dec
test
cmp
cmp
fildl
lds
andnps
stos
jbe
cmp
decb
lock
iret
or
shll
lods
in
sahf
insb
fcompl
pop
mov
xor
dec
aas
lods
adc
jne
repz
pop
sbb
or
cmpsl
mov
push
dec
jo
xchg
push
cmp
mov
movl
pop
fstpt
dec
aaa
xorb
pop
dec
outsb
jne
sahf
insb
lods
xor
add
dec
mov
stos
fdivs
loope
jge
in
cltd
in
lret
jecxz
stos
dec
fdivrl
cmpsl
xchg
and
decb
mov
out
mov
icebp
jp
push
dec
fimull
cwtl
push
cwtl
dec
add
add
add
out
lret
lea
and
and
scas
inc
arpl
icebp
sahf
aaa
mov
xchg
rcrl
mov
mov
inc
stos
popf
sahf
bound
push
pop
adc
out
shlb
pop
mov
stos
push
cld
and
fnstsw
data16
sahf
scas
das
xchg
push
sbb
aas
and
add
loope
sbb
aas
push
sbb
out
dec
lahf
sahf
xchg
sbbl
repnz
pop
pop
xchg
and
inc
lahf
lods
sub
push
mov
aas
pop
loop
adc
push
sahf
inc
test
ljmp
scas
rcl
mulb
mov
data16
mov
pop
out
xchg
in
mov
insb
adc
test
jno
jno
adc
lcall
repnz
test
inc
sarb
add
das
jne
sbb
cli
xor
mov
fcoml
lahf
sub
fisubl
shll
jl
xor
cmp
out
outsb
inc
mov
lahf
push
jg
test
jnp
push
xchg
outsl
lock
aad
xor
ror
nop
mov
mov
insb
sub
jb
cmp
pand
mov
or
jne
xor
xchg
lock
test
aaa
jle
divb
imul
push
mov
bnd
push
add
daa
ror
lods
add
add
loopne
mov
out
loop
mov
push
cmpsl
mov
stos
dec
data16
call
mov
in
push
jno
std
cmp
je
xor
repnz
subps
sbbl
sahf
jg
lods
cld
enter
mov
mov
in
int
dec
fistpl
mov
adc
es
rclb
test
dec
mov
xor
adc
mov
pop
sub
in
dec
mov
into
fldl
fsub
stc
xor
inc
popa
xor
loopne
daa
add
roll
mov
in
mov
dec
xchg
add
sahf
scas
cmp
decl
loopne
popa
push
dec
leave
int3
imul
sub
pop
xor
into
pop
cmc
fstps
adc
push
lcall
sbb
jae
adc
mov
cmp
cmpsb
xchg
cld
mov
sbb
jno
loope
sub
or
mov
out
cmc
and
xchg
rcrb
xor
sahf
aas
cwtl
mov
or
jns
orl
in
fisubrl
cmp
hlt
and
cmovns
adc
pop
sbb
mov
and
mov
and
pop
adc
dec
mov
inc
sub
or
sti
jb
add
push
shl
pop
jbe
ss
mov
pop
ljmp
pop
pop
sbb
adc
or
pop
mov
lcall
dec
mov
mov
mov
int
push
jle
outsl
dec
ds
sub
push
lcall
imul
inc
adc
pop
sub
jp
rolb
shlb
or
flds
sbb
mov
jmp
xor
push
lcall
jns
ds
aad
loopne
jnp
push
or
push
dec
jo
mov
lcall
aaa
sbb
mov
jbe
popa
std
jnp
stos
inc
xor
vpmovmskb
imul
xlat
pop
jne
xchg
mov
jns
xor
adc
int3
xchg
and
pop
out
pop
addr16
sti
push
xchg
in
cld
add
push
pop
adc
mov
pusha
adc
icebp
addr16
outsb
std
cmp
es
inc
je
test
cmc
cmc
jmp
xlat
fisttpll
push
inc
inc
addr16
cwtl
loope
jl
xchg
dec
jnp
jb
hlt
mov
dec
mov
or
mov
jl
xor
pop
test
insb
cmp
cmpsl
mov
cmpl
inc
mov
incl
jl
xchg
fmul
mov
mov
arpl
jl
mov
rolb
adc
sbb
lods
add
loopne
sub
add
mov
and
pop
adc
in
lods
inc
mov
pop
adc
push
sbb
enter
loopne
mov
iret
sbb
fnstcw
and
xorl
js
mov
cmpl
mov
bound
or
and
in
dec
mov
xor
lcall
iret
flds
aaa
xchg
clc
mov
jmp
sbb
nop
xor
dec
and
push
add
arpl
xorb
lods
add
mov
mov
jecxz
xchg
out
and
sub
pop
sbb
mov
xor
mov
mov
cmp
daa
popl
push
insb
test
and
into
fs
xchg
sbb
pusha
int
mov
xchg
mov
pop
mov
adc
lcall
std
xchg
sub
aaa
repz
and
dec
mov
pop
inc
loop
iret
cmp
mov
and
jnp
loopne
cmc
pushf
sbb
or
cmp
add
ret
xchg
imul
out
inc
mulb
inc
ja
sub
jge
dec
add
cltd
mov
adcb
or
pop
jb
lahf
push
sti
and
or
push
jne
xchg
xlat
push
add
mov
sbb
call
mov
push
movsb
rorb
jo
cmp
lods
stc
shlb
sub
or
jp
std
adc
pop
mov
mov
xlat
inc
dec
int
int
adc
xchg
cmc
mov
imul
stos
lds
add
cld
inc
adc
in
out
jb
sub
pop
inc
les
lock
bound
push
adc
add
rorl
and
cmpsb
inc
xchg
rcrl
les
ficoml
push
mov
mov
js
cli
jb,pt
fadd
mov
addb
leave
sbb
xor
loop
cmp
and
and
xlat
test
inc
lret
shll
cmp
and
add
xor
add
pop
je
dec
in
lea
xchg
sub
mov
jp
and
push
pop
ret
repz
nop
mov
clc
xchg
pop
inc
jb
dec
pusha
adc
xchg
insb
into
cmp
xorl
fdiv
cmp
sbb
cmc
psubb
jle
mov
pop
adc
in
in
lds
popa
daa
rcrl
xor
insb
out
sbb
int
cwtl
popa
and
lea
mov
in
insl
push
cli
fldl
outsl
sahf
and
pop
push
pop
repz
dec
inc
pop
ret
fstp
shrb
mov
xchg
es
pop
pop
outsl
test
lret
dec
cmpb
lea
cmp
mov
and
nop
ret
push
and
les
jne
pop
movsl
int3
bound
ret
dec
test
js
mov
sbb
pop
dec
je
adc
mull
call
dec
sub
or
sbb
jmp
loope
mov
or
fs
dec
ret
pop
push
shlb
push
ss
push
shlb
stos
add
imul
adc
adc
pop
or
pop
xor
daa
aam
push
sahf
pop
inc
cwtl
xchg
sub
xor
push
lock
and
and
out
cmp
pop
inc
inc
adc
dec
jae
sbb
mov
mov
leave
adcb
pop
pop
or
mov
push
movb
bnd
das
jb
lea
dec
mov
mov
or
rolb
ror
movsl
lds
adc
jecxz
ret
lret
fstl
sbb
or
xchg
xlat
cmpsb
bound
pushf
sbb
lcall
sbb
xchg
dec
xor
pop
stos
dec
push
push
lret
popa
fadd
sbbl
or
test
and
ss
cmp
mov
test
cmp
sbb
les
in
sbb
mov
push
dec
enter
pop
dec
mov
and
sbb
mov
jecxz
pusha
aam
jns
shlb
mov
mov
sbb
lahf
cmpsl
fiaddl
bound
cmp
cmp
sub
aad
std
jp
ret
add
xchg
sbb
xchg
test
dec
push
and
cmpsl
mov
and
fdivrs
xchg
mov
jnp
jo
iret
fdivp
rcrb
sub
add
mov
leave
jp
gs
dec
cmpsb
repnz
cmp
adc
movsl
mov
dec
dec
mov
repz
push
sub
lcall
aaa
dec
lods
inc
ljmp
xor
mov
cmp
xchg
cmp
adc
xlat
jno
lret
xchg
lock
jmp
pop
pop
jp
mov
cmp
dec
adc
xorb
inc
mov
repz
add
cmp
xchg
sub
fwait
ret
mov
mov
ja
pop
push
cmc
mov
fistl
push
push
adc
adc
dec
push
pushf
ret
mov
int
arpl
adc
inc
jmp
xchg
das
xchg
sbb
fs
test
adc
sbb
fdivrl
fstps
dec
loope
push
popa
mov
inc
mov
lds
ds
ljmp
and
and
add
fs
inc
dec
pop
shl
mov
call
mov
jb
xchg
adc
int3
in
mov
pop
and
push
jmp
hlt
jg
mov
sarw
adc
pop
push
loop
fstpt
leave
mov
rclb
mov
add
test
outsb
xchg
fwait
jmp
js
mov
test
dec
xor
push
mov
in
jge
adc
fiaddl
sub
mov
sbb
xchg
mov
push
pop
xor
jmp
loop
bound
into
pop
adc
sbb
xor
jne
into
dec
mov
sub
gs
rcll
leave
scas
es
cmp
mov
out
rolb
clc
mov
test
xchg
jo
mov
mov
adc
cmpsb
lds
sub
aas
mov
adc
sub
popa
pop
adc
mov
in
andl
jle
pop
mov
push
shlb
lods
mov
fwait
or
add
xchg
ss
cli
jnp
mov
decb
scas
cmp
fadds
xor
cmpsb
dec
cmpb
int
leave
stos
adc
int
cmp
or
jmp
xlat
jo
lahf
jle
jmp
sbb
jb
stos
mov
push
and
bound
ja
bound
adc
ljmp
je
mov
enter
popa
clc
xor
sub
in
pop
mov
mov
mov
hlt
cmp
jg
sub
cmp
mov
push
scas
cmp
mov
aam
rcrb
mov
mov
stos
lcall
push
lods
fldcw
adc
subl
cmp
sbb
add
cmc
pushf
push
jp
mov
push
xor
clc
hlt
js
cmp
add
int
hlt
dec
popa
test
imul
push
cmp
dec
or
sbbl
sbb
mov
pop
imul
movsb
insb
mov
roll
test
sahf
in
add
aam
ds
xor
and
mov
ss
test
sahf
jg
sbb
mov
mov
scas
and
xor
pop
inc
sub
push
lock
insb
xlat
clc
cmp
jnp
xchg
fs
add
xchg
jecxz
shll
in
cmp
shl
push
ret
inc
push
push
ds
cmp
jno
aaa
cmc
xchg
jge
lret
mov
xchg
loopne
ret
sub
jnp
dec
aam
jp
movsl
add
xchg
push
std
stos
sub
pop
shlb
or
adc
std
mov
es
dec
mov
push
add
jg
adcl
inc
movsl
loop
andl
jle
sbb
jo
xchg
enter
mov
and
xor
cmc
pop
pop
enter
rcl
inc
scas
ret
loop
lcall
and
in
push
xor
mov
add
pop
sbb
data16
idivl
push
dec
pop
cli
sub
add
loope
inc
pop
stos
xchg
xor
or
fdiv
jb
arpl
ret
inc
lret
push
es
fsubl
xchg
mov
hlt
adc
or
cmovno
xchg
sbb
jns
sbb
in
jmp
mov
pop
jecxz
push
push
and
mov
dec
jbe
sbb
sub
fadds
rcrl
stos
ljmp
push
movsb
faddp
mov
ret
mov
ficomps
enter
lcall
inc
dec
mov
sbb
cs
sbb
outsb
das
pop
or
mov
push
icebp
pop
jge
leave
fmuls
push
call
test
xlat
xor
pop
ds
xchg
out
adcb
xchg
outsl
sbbb
xor
ss
xor
icebp
inc
jl
cli
xchg
pop
push
shr
cwtl
or
jne
lods
mov
inc
aas
mov
mov
and
les
mov
or
in
outsl
mov
imul
stc
pop
and
mov
xor
pop
push
clc
out
daa
push
rcrb
pop
push
mov
into
test
push
ljmp
mov
push
ljmp
mov
pop
mov
sbb
xor
push
jg
mov
push
addl
out
mov
mov
jno
xchg
xor
add
pop
ret
fadds
dec
dec
mov
pop
aas
or
jl
or
inc
inc
les
into
mov
cmc
push
add
lock
jns
test
jg
jbe
mov
pop
dec
xchg
shrb
mov
loope
mov
cld
rcl
subl
in
and
jle
xchg
repz
out
and
rcrb
into
jne
jnp
loop
cmpsl
dec
lods
call
loop
insb
in
add
lcall
adc
pop
adcl
and
pop
mov
cmp
push
pop
shl
jg
mov
and
pop
es
jnp
cmp
mov
xor
fs
imul
stc
nopl
sahf
testl
loopne
pop
mov
adc
adc
mov
and
popf
add
add
stc
pop
sub
adc
mov
stos
fisubrs
push
jbe
leave
lahf
stos
shrl
pop
pop
push
test
lcall
and
xor
mov
jae
add
xor
pushf
adc
xchg
fisttps
and
adc
jle,pt
stos
inc
push
arpl
mov
adc
lret
adc
dec
ret
cmp
push
jns
cmp
in
cmp
push
ret
nop
xor
sub
jnp
orl
mov
push
jnp
repnz
iret
xchg
inc
dec
xchg
lcall
xchg
in
push
mov
xchg
mov
inc
mov
push
mov
mov
divb
rsqrtps
push
mov
ret
pop
ficoms
pop
jb
inc
xchg
or
mov
in
insb
and
aam
add
insl
pop
inc
push
push
push
rolb
out
sub
pop
and
int3
mov
dec
and
hlt
inc
inc
push
dec
pop
in
fistpl
jle
mov
data16
push
rclb
outsl
dec
push
rorb
xchg
movsb
cmpsb
adc
shll
push
or
jecxz
xor
into
decb
test
into
adc
jo
ja
pop
loopne
test
mov
mov
xor
nop
mov
mov
sbb
lcall
cmp
pop
repnz
sub
fwait
hlt
cmp
es
clc
mov
lea
nop
jo
jno
hlt
add
into
stc
adc
test
pop
jns
lods
hlt
xchg
mov
outsb
sub
rcl
ffreep
or
fimuls
mov
or
and
pop
in
inc
jmp
jbe
pop
repz
xchg
movsb
jae
popa
in
ds
sub
pop
cmp
stos
mov
insb
or
out
push
adc
repz
or
adc
jbe
imul
pop
in
jnp
ljmp
xchg
adc
cmp
adc
pop
mov
jb
jecxz
lods
or
popa
sub
test
cmp
enter
sbb
fstpl
inc
add
fnsave
jno
sub
es
lret
lods
lea
push
xchg
add
adc
outsb
cmp
mov
pop
dec
push
fcoml
ss
pop
xlat
fcmove
ret
xchg
push
adc
sbb
inc
dec
mov
push
cwtl
stos
addb
and
mov
fsubs
or
insl
inc
dec
push
or
or
repnz
sub
xor
lret
les
push
cli
sub
out
mov
push
mov
outsl
dec
addr16
inc
nop
scas
xor
nop
push
cs
mov
sbb
pushl
dec
leave
cld
inc
pop
shl
scas
mov
mov
das
fs
add
xor
inc
std
dec
ficompl
jp
test
cwtl
sub
lret
stc
xor
pop
xor
add
push
insb
std
jl
push
cmp
jbe
and
mov
mov
or
and
jnp
ds
add
pushf
jb
in
jo
xchg
rolb
jmp
xlat
adcl
sbb
push
add
cmpsl
stc
out
lret
mov
push
mov
test
sub
stos
dec
xlat
or
inc
ret
xchg
mov
out
dec
or
jae
adc
loop
mov
inc
or
sbb
out
out
push
rorl
call
lock
out
xor
das
daa
xchg
das
popf
repnz
loop
adc
pop
cmp
test
mov
sti
cmp
and
and
sub
cmpsb
imul
sbb
pop
repnz
sub
or
sub
popf
repz
cli
pop
cmovo
addr16
push
fisubl
clc
push
xor
lret
lret
loopne
ds
fwait
add
push
sub
pop
sub
xchg
pop
and
addr16
xor
mov
test
jle
jge
call
xor
dec
mov
int3
int
inc
push
hlt
out
sbb
inc
xchg
mov
fwait
aad
jl
cld
stos
jge
cmp
mov
xor
jbe
les
sbb
fidivrs
mov
jns
rolb
cmp
adc
mov
inc
add
and
fistl
dec
dec
in
mov
mov
jbe
fdivrp
sti
push
or
in
addr16
nop
pop
imul
cwtl
decb
fldpi
sub
mov
xchg
and
inc
pop
imul
std
cwtl
jb
lods
sti
xchg
cltd
lret
pop
or
adc
push
ja
jge
int3
or
rcrl
dec
enter
push
jmp
adc
and
dec
adc
lds
add
xchg
pop
xor
add
xchg
pop
scas
aad
xchg
pop
push
dec
cmp
icebp
inc
sti
pop
ss
js
push
imul
adc
cmp
mov
fwait
push
xchg
stos
inc
lods
pop
mov
insl
push
cmp
mov
or
outsl
add
mov
sub
mov
out
mov
ljmp
inc
cmc
rcl
jnp
add
mov
pop
and
sub
xchg
xchg
out
sub
dec
mov
adc
xor
adc
inc
enter
leave
cmpsb
and
and
xor
out
mov
orl
fldt
jae
sbb
test
and
or
pushl
sub
out
sub
or
push
aaa
inc
add
xor
int3
mov
pop
vmulps
sbb
popa
in
addl
clc
dec
cwtl
jmp
fists
adc
fneni(8087
dec
ss
cli
push
sub
in
jl
jbe
lahf
aas
dec
mov
push
xchg
je
cs
xchg
imul
rcll
cmp
push
out
mov
xchg
call
push
xchg
jb
fisttpl
iret
repnz
sbb
dec
mov
in
sbb
test
ds
data16
mul
pushl
stos
int3
add
decl
sub
loope
loope
jl
push
add
sbb
sbb
xorl
andb
test
bound
xchg
and
test
push
sti
fisttpl
inc
test
inc
add
int3
mov
test
xor
in
xlat
jnp
inc
mov
test
mov
testl
cwtl
das
push
or
lds
pop
test
sbb
xor
cmp
inc
or
xor
inc
sarb
push
mov
dec
out
sbb
mov
cli
pushf
xorb
xchg
xchg
or
es
repz
jecxz
adc
add
sub
mov
sbb
fldenv
hlt
adc
push
nop
pop
je
push
fisttpll
sti
or
mov
cmp
shrb
or
pop
imul
jo
fisttpl
popa
jo
dec
jno
rcr
sub
push
push
sub
sub
movsl
adc
cmp
pop
jns
rclb
adc
xor
jne
fs
cmc
inc
add
cmp
xor
push
inc
adc
loop
xchg
push
out
push
push
push
jbe
jp
test
enter
inc
sbb
cmp
and
lock
xchg
and
in
test
clc
loope
add
loope
push
call
or
sar
lcall
mov
add
jg
jb
mov
sbbl
jo
sbb
aad
iret
notb
adc
fsubs
mov
inc
int
xchg
sbb
std
cmp
add
mov
and
push
adc
out
les
mov
jb
loopne
inc
and
insl
xchg
ljmp
push
and
subb
xchg
int
jno
push
or
inc
jno
jbe
stc
iret
loop
lods
fldenv
jg
jbe
ret
dec
mov
outsl
adc
inc
or
and
mov
rcrl
je
fs
inc
flds
xchg
push
cmpsl
arpl
cmpl
push
xor
sub
add
fs
xchg
lcall
pop
imul
test
int
flds
cmp
ret
movsl
push
arpl
movsb
ds
xor
lahf
aaa
mov
mov
mov
xchg
popf
pop
int
pop
or
push
fistps
lds
in
sbb
jnp
dec
in
test
mov
loope
divl
or
lret
xchg
push
imull
aaa
enter
jnp
push
je
mov
xchg
dec
inc
into
sbb
mov
and
lret
pop
xor
and
lea
pop
pop
insb
xchg
sahf
cmp
jle
jle
js
jecxz
fcoml
cmp
roll
nop
pop
repz
push
in
fildl
cmp
or
push
sbb
aad
shl
mov
xor
mov
shl
repz
aad
addl
mov
pop
insb
mov
stos
xchg
add
sub
adc
pushf
and
pop
inc
jmp
cltd
inc
jmp
sti
imul
adc
or
je
dec
jge
dec
sbb
xchg
jl
gs
inc
dec
sub
mov
mov
push
cltd
insb
lock
jne
jne
xor
inc
ss
daa
push
pop
pop
add
mov
pop
sbb
sub
mov
mov
pop
lret
jecxz
inc
mov
mov
lahf
pop
xchg
cli
push
bound
mov
and
test
imull
fisttpll
cmc
es
outsl
pop
xchg
fisttpll
inc
decl
mov
mov
les
xchg
adc
push
aad
data16
lcall
fistl
and
pop
mov
stos
in
pop
push
mov
mov
fisttpl
pop
mov
stos
or
shrl
aam
add
push
or
or
mov
mov
mov
lea
and
or
fbstp
dec
in
cmpsl
jnp
push
mov
test
pop
into
jp
and
xor
cmp
or
arpl
mov
std
adc
adc
dec
jno
pop
imul
dec
jbe
or
and
fidivrl
adc
outsl
adc
sbb
jecxz
push
xchg
mov
xlat
sub
inc
aam
inc
inc
sbb
mov
mov
sub
call
mov
cmp
ljmp
in
push
arpl
push
dec
aad
insl
hlt
inc
sbb
imul
adc
orb
js
insl
mov
nop
or
lds
frstor
sarb
cmpsl
repnz
mov
in
pop
arpl
xor
mov
inc
and
mov
xor
mov
and
call
or
test
push
lds
push
notl
push
sub
lds
movsb
mov
pop
fs
sbbl
dec
in
out
ja
icebp
adc
lods
cmp
cmpsb
jno
lret
insb
cmc
ja
inc
adc
imul
mov
xor
shrb
stos
sbb
mov
test
mov
out
in
mov
jle
jbe
lods
mov
clc
mov
and
lahf
and
pop
orb
cmp
jne
add
cld
pushf
rcrl
test
mov
int3
fs
jbe
jns
jbe
fs
pusha
push
jg
or
daa
andb
mov
adc
mov
pop
gs
sbb
push
outsl
xchg
jbe
add
cmp
xor
mov
push
negl
insb
mov
das
sahf
sub
das
or
mov
jns
movsb
ja
imul
outsb
xchg
stos
jle
inc
cmp
popl
ss
xor
cld
xor
pushf
xchg
int
test
lds
into
inc
int3
inc
loope
repnz
fistl
dec
jg
test
push
cmp
out
cs
out
fnstsw
jecxz
cwtl
xchg
push
pop
bound
std
lds
sbbl
inc
push
and
movsl
push
out
out
das
stos
push
fldt
cmp
cmp
mov
cmpsb
imul
in
xchg
insb
repnz
or
or
push
xor
pop
pop
add
fs
cmp
sbb
pop
insb
nop
pushf
js
fs
jno
inc
cmp
cmpsb
sub
cmpsl
xchg
dec
ja
lods
js
imul
out
add
fisubl
dec
mov
out
sbb
inc
push
rorb
setae
ds
rol
mov
bound
xchg
push
stos
test
pop
test
in
mov
aam
stc
mov
popa
enter
sub
mov
add
push
cmp
xchg
mov
dec
mov
pop
adc
idiv
add
xchg
fbld
arpl
mov
popf
lret
fmulp
or
or
xchg
outsl
sub
sarb
cmpsb
sbb
xchg
cmp
xor
adc
out
popa
add
rorb
jns
outsb
fdivrl
lret
dec
fisubs
xchg
test
push
dec
push
mov
inc
mov
fisubs
fldcw
sbb
add
sub
aaa
or
cmp
es
lea
jle
lcall
arpl
repnz
test
mov
ret
inc
lcall
adc
iret
call
xorl
sbb
cmpb
inc
jmp
xchg
jnp
push
push
repnz
lock
mov
adc
jno
std
imul
in
fs
arpl
xchg
fnsave
rorb
and
test
sub
push
fnsave
dec
mov
in
in
out
dec
out
inc
push
outsl
lahf
push
mov
test
stc
jne
dec
icebp
imul
ret
repnz
pushf
mov
shrd
mov
jmp
xchg
lock
out
pop
js
outsl
pop
pop
jp
dec
hlt
in
lahf
or
in
sub
add
shll
mov
cmp
push
js
jmp
faddl
inc
lea
sti
inc
and
xchg
mov
ljmp
push
in
jno
push
pushf
mov
lock
addl
push
xchg
push
sbb
jns
mov
push
repz
add
push
xlat
mov
rolb
xchg
test
ret
cs
popf
mov
dec
or
mov
mov
enter
stos
jg
and
popa
xor
mov
aam
out
jno
cmp
xorl
or
loopne
cltd
mov
rol
xchg
pusha
dec
xchg
sub
add
rcrb
and
dec
rorl
les
push
cmpsl
insb
into
lret
xchg
icebp
push
cmc
dec
mov
push
ret
sbb
stc
inc
test
fs
pop
std
sub
jl
jb
mov
mov
mov
push
es
add
hlt
xor
and
shrl
loop
in
fwait
mov
out
xchg
xorl
std
js
scas
popa
rcll
adc
xor
out
in
sti
xlat
adc
cmp
cmp
outsb
add
repz
pop
inc
mov
cmp
call
mov
stos
cmp
test
add
cmpsb
fldenv
cmp
in
test
nop
jae
mov
xor
sahf
push
or
and
add
fisubrs
mov
insl
xor
dec
sti
enter
push
test
mov
inc
leave
ret
aam
mov
jmp
mov
scas
out
pusha
and
push
outsl
imul
push
repz
ds
and
out
pusha
daa
dec
dec
and
cmp
jno
fucomip
sub
or
mov
in
add
mov
cmp
dec
clc
inc
popf
into
nop
decl
pop
cmp
dec
clc
add
push
cmpsb
mov
mov
push
ja
movsl
mov
xchg
pop
negb
and
jmp
in
jae
sahf
jmp
add
stc
fbld
inc
aam
sbb
aaa
popf
pop
pop
jmp
scas
xor
lea
adc
fistpll
lods
push
add
pop
mov
int3
mov
test
xchg
jo
jne
hlt
repz
repz
xchg
jp
mov
scas
xlat
mov
adc
enter
mov
mov
test
jl
ret
mov
cmp
in
sbb
xchg
fxch
gs
and
sbb
dec
sub
jmp
add
jae
in
adc
xor
enter
jae
out
int
xchg
push
lcall
js
test
test
mov
jle
add
int3
mov
sbbl
hlt
sub
xor
mov
push
out
outsl
fs
sub
add
pause
ret
mov
aam
mov
fldcw
packuswb
sub
shlb
xchg
cmp
pop
repz
pop
push
or
adc
mov
cmp
mov
sarl
mov
cld
test
ret
push
add
cmpsb
fildl
sar
add
adc
sbb
hlt
pushf
sti
fimuls
pop
lods
jae
gs
mov
mul
loopne
test
data16
movsl
fadds
mov
aam
scas
ret
mov
or
push
xchg
pop
xlat
loop
cmp
fwait
movzbl
lea
subb
adc
fcomip
pop
xchg
insb
mov
scas
fsubl
adc
mov
jp
mov
pop
imul
decb
xchg
lods
mov
sub
repz
mov
insl
add
or
scas
outsl
dec
les
and
popa
cmp
cmc
std
or
imul
cmp
js
push
cmpsl
hlt
popf
jae
icebp
mov
adc
ds
inc
pop
pop
cmp
push
mov
and
ret
outsl
cmc
mov
or
or
dec
sub
repnz
fs
cli
jmp
jle
mov
fidivrs
sti
fnstcw
dec
movsl
push
dec
push
ret
and
xlat
add
dec
inc
rcrl
nop
mov
cmpsl
std
das
xchg
adcl
lea
ret
call
mov
mov
les
lods
lock
xor
pop
or
sbb
lea
dec
push
div
push
ficoms
xchg
fwait
aad
or
push
jne
out
push
jno
fs
mov
inc
or
or
fisubl
jns
sarl
daa
pop
daa
mov
add
movd
sub
and
xchg
rcr
outsl
sub
call
psubw
popf
dec
mov
jl
sbb
and
jmp
sti
pusha
sbb
shlb
cmp
popa
iret
repnz
xor
lcall
adc
adc
int
mov
call
dec
pop
jecxz
add
sarl
cmp
pop
les
mov
idiv
mov
mov
cmpsb
jmp
sub
add
aas
inc
pop
lods
and
xlat
movsl
data16
push
or
ret
in
jbe
shlb
push
push
mov
orl
fidivs
push
xor
pop
jecxz
mov
aaa
ja
and
leave
jmp
aam
push
lods
jl
sbb
jmp
mov
jmp
psllw
std
and
push
incl
outsb
outsb
popf
out
push
add
fnsave
jb
jae
xchg
mov
std
adc
sti
pop
xor
jp
in
add
daa
xor
out
push
cwtl
push
jne
mov
std
xor
adc
jo
sub
aam
mov
push
std
lret
je
and
shr
mov
stc
mov
in
inc
je
inc
dec
adc
stc
inc
add
stos
std
xor
out
sbb
loopne
xor
sbb
lcall
test
into
sahf
push
orl
std
jae
sub
ja
adc
je
stc
lret
inc
lods
jl
out
rcll
or
dec
ret
pusha
imul
jns
icebp
jl
fwait
lahf
mov
xchg
jp
cmpsl
push
sbb
add
imul
outsl
clc
xor
cmc
hlt
mov
or
cli
mov
xor
dec
jns
sbb
int3
ficomps
mov
cmp
pop
xor
lods
adc
push
xchg
arpl
int
shll
pushf
cmp
sbb
push
stc
sub
inc
mov
fisubl
in
repnz
jae
inc
jle
mov
cmp
loope
add
adc
jno
stos
xor
out
xchg
jns
push
lcall
insl
sti
inc
or
xchg
adc
in
cltd
adc
out
sub
push
or
inc
lock
lea
dec
aad
mov
icebp
rorb
mov
out
pop
pop
push
jecxz
movsb
in
pop
call
jecxz
mov
sbb
xlat
inc
adc
jb,pt
cmpsl
stc
ljmp
adc
xor
stc
das
inc
scas
pusha
sbbb
mov
leave
jecxz
pop
cmp
jo
jge
xchg
sub
mov
mov
fcos
in
dec
loope
js
push
add
push
sbb
imul
dec
xor
pop
loope
leave
mov
sbb
std
inc
pop
sti
cmp
bound
fisubrs
add
movsb
pop
and
adc
pop
pushf
xor
mov
jne
and
inc
sbb
repnz
dec
xchg
push
gs
cwtl
inc
xchg
pop
mov
cmpl
dec
out
mov
repz
in
pop
cmp
test
nop
stos
sub
lcall
mov
sub
and
fs
xor
mov
rorb
pslld
ds
hlt
xchg
sub
enter
cwtl
cmp
mov
pop
cmp
push
xor
mov
fcoml
rolb
mov
lods
or
mov
push
pushf
je
push
mov
pop
notb
ret
xor
loopne
jne
sbb
test
icebp
pop
decb
setno
lock
inc
mov
orb
mov
nop
loope
xchg
mov
mov
lret
fcos
mov
xchg
xchg
stos
push
stos
jg
mov
cs
and
insl
fmul
or
push
in
ror
xchg
inc
add
xor
jo
jge
inc
mov
fstpt
lahf
lods
lods
jbe
mov
jmp
lods
dec
cmp
push
sbb
inc
outsb
xchg
outsb
or
dec
or
dec
cmp
insl
fisttps
and
lea
mov
jecxz
test
fsub
push
arpl
dec
jl
adc
cwtl
movsb
xor
and
cld
ret
sbb
xchg
sbb
sbb
cmpsl
dec
clc
and
repnz
push
and
add
and
jns
xchg
inc
and
xor
push
and
ret
stos
movb
mov
lds
cmpsb
call
mov
push
pop
enter
dec
jb
jle
shl
aas
xchg
push
or
fstl
xchg
pop
movb
es
into
or
not
cmpsb
jl
sahf
fidivl
jecxz
fsubp
sbb
jo
gs
imul
mov
lret
pop
ret
fisttpll
add
adc
pushf
adc
add
sub
stc
hlt
addr16
sub
iret
lds
jmp
push
rcll
cmp
cmpsb
mov
lods
inc
xor
mov
cmp
dec
jbe
int3
scas
arpl
mov
or
icebp
sbb
mov
jns
adc
mov
loopne
mov
dec
jle
xor
jnp
hlt
mov
nop
imul
sahf
lods
mov
shrl
lahf
fcomps
imul
push
cs
push
mov
xlat
popa
xchg
daa
popf
movsb
dec
xchg
ljmp
pop
rorl
aam
or
arpl
cmp
aas
pop
sbb
insl
add
mov
push
mov
add
xlat
jecxz
inc
pop
sub
dec
jb
mov
push
dec
sub
call
mov
and
out
movsb
add
adc
mov
push
andb
stc
and
jl
mov
mov
test
lret
test
repnz
out
mov
jg
mov
inc
sbb
pop
lods
jbe
mov
pop
xor
dec
call
popa
pusha
fadds
dec
int3
jl
insl
and
ljmp
lods
adcl
xchg
add
sbb
mov
pop
lcall
push
sub
adc
sbb
cwtl
pop
mov
nop
cld
and
aaa
out
mov
test
inc
ljmp
bound
test
adc
idivl
je
adc
call
dec
loopne
scas
cs
xchg
mov
ss
fsubrs
ljmp
aas
cli
insb
aam
daa
or
ljmp
pop
cmp
out
lret
pop
test
sbb
dec
xchg
xor
out
rorl
loop
mov
lahf
adc
sub
jge
in
lods
inc
fisubl
sbb
mov
cmp
add
dec
lods
out
hlt
jle
shlb
fwait
dec
int
mov
jns
sub
mov
ret
cmp
mov
push
xor
inc
scas
pop
clc
out
xor
xorb
inc
mov
pop
leave
mov
aam
in
cmpsb
ljmp
js
dec
movsb
lds
sbb
mov
and
mov
dec
and
mov
movsb
lea
xchg
dec
imul
lret
loope
mov
mov
scas
fwait
test
pop
cltd
fdivrs
mov
or
into
xchg
shl
decb
add
mov
add
pop
out
lret
sub
insb
sbb
aam
movsl
jle
cmp
jmp
scas
sub
cmp
clc
jmp
add
cwtl
cld
xchg
shrb
add
jp
push
push
xchg
mov
inc
or
mov
enter
dec
vpavgw
sub
stos
push
mov
add
dec
rcrb
push
xlat
pop
and
xor
add
pop
pop
cmp
mov
rol
sub
sbb
test
adc
mov
pop
sti
mov
lods
loope
mov
xor
dec
mov
mov
mull
lock
add
dec
pop
mov
xchg
rorl
fisttpll
jne
sub
roll
xchg
fucomip
or
je
rcl
int
push
mov
clc
dec
lahf
es
scas
sbbl
xor
mov
nop
pop
inc
insl
jmp
icebp
das
imul
add
pop
mov
call
dec
and
inc
fstpl
lods
xchg
push
gs
jns
aad
mov
and
cmp
int3
jne
movsl
mov
faddl
adc
inc
aad
push
aad
cmp
and
add
xorb
subb
shll
test
sarb
xlat
jmp
in
xchg
pop
jb
scas
aaa
xor
cmovle
inc
sbb
sub
jb
dec
rclb
pop
adc
xchg
clc
test
clc
cmp
xchg
xchg
out
mov
add
rorb
mov
mov
nop
or
pop
out
not
daa
jg
xor
stos
cmp
out
aam
xchg
cltd
das
iret
aad
and
jg
xchg
or
icebp
dec
aas
test
mov
test
movsl
pop
imul
lcall
cmp
xor
into
sbb
lret
cmp
popa
aas
jp
cmp
in
lods
jg
dec
push
dec
rcll
icebp
add
mov
and
or
mov
add
mov
hlt
jno
adc
mov
inc
xchg
ljmp
sub
jo
mov
sbb
int3
andb
dec
jnp
add
addr16
xchg
mov
test
push
xchg
and
jmp
mov
sub
mov
ss
cs
mov
aad
mov
rorb
test
int
ffree
sarb
shll
mov
loop
jo
lods
sub
dec
lret
int3
inc
adc
adc
inc
pop
mov
push
es
mov
es
xchg
pop
sbb
push
dec
inc
push
inc
cmc
cwtl
jl
call
cmp
sbb
iret
testb
jns
cmp
imul
pop
test
rcl
jge
xchg
cwtl
adc
pop
push
inc
xchg
mov
adc
sbb
aas
push
loope
and
lret
dec
add
xchg
cmp
addr16
iret
pop
mov
dec
mov
aad
cmpsb
mov
out
addr16
arpl
sbb
arpl
push
popl
add
das
lea
push
push
pop
pusha
aas
out
stos
inc
xchg
scas
popf
or
add
lcall
mov
jmp
sub
in
mov
and
push
xor
rol
xchg
mov
pop
xchg
cs
rcll
fstpl
int
inc
rorb
jnp
cmp
xor
shl
negl
inc
mov
mov
adc
fwait
stos
sub
cmp
sarl
adc
insb
sbbb
cmp
add
sub
aam
or
push
adc
mov
jge
addb
cmp
mov
pop
iret
pop
sub
shr
and
repnz
mov
xchg
scas
lret
mov
clc
ficomps
cmp
movsl
iret
inc
std
inc
popf
jmp
mov
pop
or
push
pop
mov
mov
mov
lcall
sbb
push
hlt
xchg
jnp
push
repz
dec
mov
push
stos
movsl
adc
repz
mov
cli
sbb
popf
test
sti
ret
test
loope
jle
jge
lods
inc
shrl
xchg
xor
sti
mov
sbb
in
mov
iret
test
popa
ret
xor
sub
pop
mov
jmp
and
dec
add
sbb
xor
out
pushf
push
outsl
imul
dec
lea
andb
in
or
adc
adc
hlt
push
pop
aas
mov
adc
test
xchg
iret
adc
movsl
fstps
into
daa
imul
cvttps2pi
loop
inc
stos
xlat
lea
add
jecxz
sub
push
fstl
loop
dec
aas
dec
ds
in
add
lret
ja
das
jmp
jb
lds
jne
mov
mov
scas
jmp
int
sbb
xor
outsb
notl
mov
stos
fnstcw
pop
roll
push
dec
dec
xor
lods
dec
jge
jmp
je
lret
jns
or
push
movsl
mov
push
fistpl
pop
push
dec
pushl
sbb
test
int3
and
push
rclb
sub
sbb
push
push
shl
inc
xor
cmp
jb
ljmp
jnp
sahf
out
inc
rolb
push
jp
sbb
arpl
adc
cmp
aam
test
xchg
pushf
fstl
js
pop
jle
jecxz
push
xlat
xor
jge
call
mov
pop
int3
adc
adc
imul
jbe
pusha
xlat
adc
mov
lods
sbb
shll
std
adc
lods
into
movsb
inc
push
out
add
push
pop
fmul
pushaw
jnp
or
sarb
outsl
lcall
mov
mov
xchg
enter
stos
enter
adc
jb
aas
das
push
inc
add
dec
or
ret
jo
mov
mov
imul
mov
hlt
outsl
out
add
cmp
test
cs
fs
push
push
xchg
gs
xor
cli
adcl
xor
bound
lods
ja
loop
sub
aaa
frstor
add
mov
gs
fcompl
jmp
pop
repz
fwait
sub
cmp
in
xor
pusha
mov
orl
push
and
dec
xchg
pushf
dec
dec
cmpsl
xchg
xor
test
xor
lea
nop
aad
push
arpl
jo
test
sbb
fwait
in
stc
shlb
mov
lea
out
xor
cltd
pop
or
movsb
push
push
pop
loope
cmp
dec
pop
jo
ss
add
push
scas
and
adc
stos
loopne
lods
xor
pop
cmp
dec
ss
aaa
pop
cmpsb
push
ret
call
mull
pop
and
sbb
push
icebp
cld
mov
mov
mov
mov
jecxz
notb
adc
out
push
out
xchg
jge
add
adc
popf
pop
push
jmp
xchg
mov
lea
add
jns
out
jmp
jecxz
ret
cwtl
sub
das
dec
call
std
jnp
fcomp
or
mov
lahf
push
sbb
mov
test
lods
test
not
mov
sbb
dec
dec
mov
and
or
pushf
fisubrs
hlt
addr16
movsl
or
inc
xor
out
cmp
xor
icebp
sbb
push
outsb
imul
sub
adc
call
sahf
dec
orb
or
mov
iret
inc
les
das
stos
sbb
sar
test
xchg
outsl
pop
and
imul
das
imul
cwtl
sub
mov
inc
cmpsl
test
push
popf
js
dec
and
cmp
mov
dec
sarb
leave
sub
or
mov
leave
push
leave
mov
pusha
mov
or
xchg
xchg
jp
fisttpll
push
loopne
jp
pop
outsl
stos
scas
add
inc
dec
dec
scas
jb
cld
lret
push
cmc
or
negb
adc
jge
pushf
inc
das
arpl
mov
decl
lret
outsl
loopne
dec
mov
add
or
adc
inc
pop
popf
outsb
mov
fwait
bound
lods
push
sbb
push
and
fcomi
mov
adc
mov
add
cmpsl
loop
mov
mov
inc
cld
jnp
icebp
mov
fwait
decb
fwait
sub
cmp
inc
sbb
cmp
adc
rolb
outsl
dec
pop
enter
sarl
and
inc
push
xchg
mov
push
sbb
xchg
pusha
lret
outsl
fcompl
test
daa
das
and
fucom
cli
cmp
and
and
add
xchg
sub
pop
pop
or
mov
xor
mov
add
dec
enter
jo
cmp
gs
jle
mov
push
das
or
ljmp
pop
sahf
xchg
in
sarb
mov
mov
jmp
ror
mov
sbb
call
push
sti
inc
pop
test
fisubs
add
xor
jne
gs
adc
sbb
xchg
repnz
leave
dec
xor
leave
jnp
sub
inc
test
not
cmpsl
mov
jne
dec
push
aad
rcl
icebp
orl
shr
adc
jbe
jae
jns
jae,pt
rol
fbstp
xor
cmp
sbb
add
jmp
mov
push
pop
sbb
xchg
ja
fsubp
mov
repz
in
or
out
arpl
fdiv
xchg
adc
push
and
and
dec
scas
xlat
roll
xor
mov
jle
lcall
rcll
inc
mov
stos
adc
jge
jp
fsubl
in
call
sub
jae
ss
cmp
dec
mov
push
pushf
cwtl
inc
ret
scas
xchg
jl
subb
shll
pop
fldenv
dec
repz
inc
cli
inc
mov
das
in
das
enter
sti
or
jne
push
jno
cmp
shll
fidivs
aad
fildl
arpl
dec
mov
add
pop
mull
adc
scas
leave
repnz
int3
iret
sbb
daa
lock
add
inc
xchg
out
add
pop
xor
leave
mov
mov
push
movsl
dec
int
or
mov
call
test
push
push
repz
mov
pop
ljmp
pop
inc
xor
or
jns
scas
adc
push
out
aas
into
mov
dec
outsb
fnsave
cmc
stc
inc
sbb
iret
jmp
xchg
xor
fidivl
dec
fisttpll
mov
xchg
mov
lret
push
into
push
pop
mov
mov
mov
rorl
or
and
js
mov
and
stos
add
mov
mov
popl
int3
aam
cmp
xor
adc
insb
lret
dec
adc
mov
jge
xchg
and
inc
xorb
jmp
ds
sbb
movsb
arpl
pop
pop
adc
sub
cmp
mov
pop
outsb
insb
lods
pop
ret
movsb
dec
dec
mov
xor
popa
lret
push
inc
push
mov
fcoms
jge
inc
in
cld
jecxz
aad
aam
jge
jnp
stc
and
push
shl
outsl
test
cmp
in
imulb
mov
test
sub
adc
sub
mov
roll
mov
aad
push
lods
rclb
mov
pop
mov
imul
cmp
imul
cmc
dec
outsb
mov
sub
lods
cmpsb
xchg
jl
mov
pop
out
outsb
dec
in
inc
lock
and
jb
sahf
repz
shrb
dec
and
jo
dec
inc
dec
dec
ret
cmp
shl
mov
arpl
pop
pop
int3
push
pop
xchg
push
pop
out
sub
jbe
jl
int
out
add
rcll
dec
ja
das
out
xor
fsts
jmp
add
gs
mov
push
push
xchg
add
push
fisttpll
hlt
push
or
dec
repz
lcall
dec
inc
jg
repz
fwait
pop
mov
cmpb
mov
mov
inc
inc
xchg
movsl
cmpsl
add
in
lret
cmpsl
mov
or
sahf
rcrb
enter
shlb
pop
mov
mov
adc
dec
adc
cmp
pop
leave
dec
out
fisttpll
icebp
pop
xor
mov
ja
movsb
pop
decb
cmp
cmpb
mov
push
mov
xchg
push
xchg
sub
cmc
test
std
loopne
push
loope
sub
push
dec
sbb
in
aas
and
lea
into
lcall
lcall
out
pop
fxch
or
push
cmp
add
ficoms
fistpl
push
ja
int3
notb
testb
lods
dec
into
fisttpll
ss
fs
jge
mov
pop
hlt
cmp
pop
jg
xchg
push
jp
fdivrs
add
not
inc
dec
cmc
xchg
cmp
gs
stos
leave
rolb
lret
push
ss
shll
dec
or
and
jp
dec
inc
repnz
outsb
jno
lods
mov
xorb
jmp
or
jcxz
jmp
fldt
subl
movl
nop
sbb
adc
movsl
inc
gs
hlt
mov
ret
icebp
mov
sub
loope
and
sbb
cmp
mov
iret
aam
jae
pusha
adc
test
jo
sub
pop
es
test
mov
iret
hlt
dec
clc
stos
repnz
subl
ds
push
mov
and
mov
mov
push
jb
dec
es
flds
ficoml
cli
add
aas
shl
inc
inc
push
ret
fidivrs
test
or
inc
sub
adc
xchg
sub
cmp
xchg
xor
sbb
inc
mov
rol
jae
int
popf
mov
pop
or
adc
hlt
js
insb
out
fld
test
add
push
jg
in
fistpl
sbb
xlat
mov
push
cld
xor
pop
fwait
push
daa
in
or
sub
test
mov
mov
mov
and
xchg
xor
dec
jmp
mov
movsl
xor
push
repnz
push
mov
sub
adc
xor
leave
imul
push
stos
cmc
dec
add
daa
jle
lods
jae
clc
rorl
enter
jecxz
icebp
mov
xchg
xchg
cltd
mov
jbe
shrb
rclb
loopne
cli
dec
cmp
or
push
pusha
daa
sahf
mov
mov
dec
jns
mov
pusha
fstpt
xor
mov
ds
cmpsb
dec
mov
add
mov
mov
pop
xor
ret
lret
loopne
dec
add
test
sbbb
mov
lcall
iret
aas
mov
in
mov
test
fdivr
in
jnp
jb
fwait
inc
xchg
in
and
lret
push
xor
push
or
jns
movsb
dec
sub
int
jbe
xchg
xor
je
sub
xchg
push
icebp
add
inc
mov
mov
mov
sbbl
popf
sub
pop
imul
cmc
roll
dec
pop
cmp
je
aam
bound
cmp
dec
cmp
adc
fldcw
sub
insl
pop
lcall
jb
xchg
jb
lret
in
in
popa
dec
xchg
into
je
inc
mov
or
cwtl
mov
mov
sbb
dec
lock
push
inc
cld
mov
mov
inc
cmpsb
pop
mov
movsb
xchg
and
sub
in
sbb
in
adc
jle
lcall
adc
movsb
test
clc
xor
ffree
xor
pop
loopne
int3
cmpl
in
dec
daa
filds
jge
cmp
push
add
pusha
imul
adc
cmpsb
jno
xor
mov
insl
in
or
dec
xchg
arpl
cmp
pop
pop
pushf
or
cmpsb
jle,pt
pop
adc
imul
or
nop
or
pop
mov
sub
inc
ret
push
jbe
sti
movsl
dec
inc
pop
std
fimull
adc
or
inc
daa
popf
movsb
cmc
aad
aaa
fwait
insl
mov
fs
scas
inc
stc
adc
add
aas
lcall
ljmp
pop
add
push
dec
testl
pop
int3
stos
outsl
jbe
and
or
cmp
xchg
fidivl
ljmp
and
pop
das
sub
sti
sub
adc
popa
out
adc
jb
andl
and
fdivrs
sbb
adc
dec
insb
pop
dec
fisttpl
sbb
repz
add
lods
fisubrs
sub
dec
xorb
scas
mov
mov
xor
mov
cmp
cmp
mov
arpl
movsb
mov
das
push
lret
lcall
in
insb
outsb
jl
sub
dec
into
movsb
and
xlat
call
mov
or
cld
jge
sbb
lods
outsl
jg
call
sub
test
lods
and
mov
mov
and
lcall
jecxz
mov
sbb
test
sti
xor
or
mov
or
push
mov
aam
inc
xchg
movsb
mov
ljmp
loopne
add
imull
cli
pop
js
mov
in
rclb
dec
fstpl
xor
mov
xchg
rorb
sub
es
mov
ja
jle
mov
sub
into
mov
fsubs
xor
mov
cmp
push
sti
in
clc
test
mov
jle
pop
xchg
dec
inc
sbb
stos
insb
stos
and
lret
ret
push
push
lahf
and
pop
mov
inc
jl
and
jns
insb
scas
or
mov
xchg
sbb
or
sub
sbb
fldt
orb
iret
test
cwtl
lods
ret
or
mov
mov
pop
sarl
xor
bswap
inc
mov
insl
iret
push
cmpsl
cld
dec
cmp
or
mov
xor
pop
inc
fiadds
mov
in
test
jne
lret
movsb
nop
cwtl
cmp
add
cmc
jecxz
cmc
mov
sbb
repz
cmp
jno
out
repnz
stos
xchg
sbbb
add
stos
xor
xchg
pshufw
mov
out
ds
and
icebp
ds
out
adc
xor
stos
nop
inc
mov
cld
das
sahf
mov
inc
das
icebp
sbb
aam
cmp
insb
lcall
pop
or
aam
arpl
push
test
push
outsb
jg
push
fisubs
xchg
stos
adc
jbe
repnz
mov
in
cmc
in
hlt
add
inc
int
xor
push
fistps
fists
cld
dec
imul
scas
aaa
add
rcll
jnp
pusha
dec
and
out
daa
in
aas
adc
cmc
loope
sub
insb
int3
add
testl
dec
adc
test
cmp
adc
xor
mov
mov
out
dec
in
in
jle
in
inc
jno
ret
mov
mov
dec
and
ret
jge
push
push
xor
jg
push
mov
mov
mov
add
pop
ljmp
adc
clc
and
int3
mov
mov
or
gs
mov
and
pushw
pusha
popa
flds
lcall
or
push
mov
divl
popf
pop
mov
enter
scas
into
mov
dec
push
xor
mov
jecxz
mov
fwait
xchg
mov
cmp
sbb
push
notl
dec
pop
das
xor
orps
jns
pusha
jae
cmp
shlb
test
mov
jmp
xor
cmc
jg
add
jp
subl
jg
call
mov
add
jae
loopne
add
push
andl
jns
xchg
ja
dec
cmpsb
loopne
mov
scas
jge
adc
test
aam
and
test
sti
test
xor
add
xchg
lret
push
xor
adc
and
xor
fwait
stc
jp
int3
xor
into
mov
mov
pop
popa
mov
cmp
cli
cmc
mov
pop
ds
mov
push
pop
inc
push
cltd
pop
mov
data16
jl
push
mov
lock
xor
push
aam
xchg
subb
cmp
push
inc
jo
push
subl
mov
clc
mov
mov
enter
jo
and
mov
bound
fcompl
push
pushf
mov
dec
clc
lahf
test
test
pop
pop
addr16
movsl
xor
jne
dec
xchg
movsb
repnz
xchg
xchg
mov
pop
cld
scas
divb
movsb
adc
in
mov
into
xchg
out
inc
jns
scas
and
mov
daa
xchg
outsl
cld
adc
cmp
and
icebp
sbb
rcrb
add
addb
sbb
mov
test
nop
iret
sahf
in
lcall
imul
cmpsl
mov
hlt
mov
mov
rorl
add
mov
je
sub
dec
lret
xchg
jl
jno
sbb
pop
es
lcall
inc
pop
jmp
stos
loop
mov
xor
js
test
add
and
push
pop
cmp
jb
sbbb
loopne
pop
mov
ss
jne
pop
insl
aad
or
pop
lods
pop
mov
imul
mov
xor
cmp
and
sbb
mulps
xor
mov
imul
mull
inc
sub
mov
xor
test
push
dec
mov
out
cmc
int
int
inc
jg
adc
lods
cmp
lret
jo
cli
jge
je
rolb
mov
jg
adc
ss
cli
out
adc
cmp
mov
aam
mov
shll
lock
divl
dec
add
loopne
mov
xchg
mov
jnp
pushf
push
xor
mov
mov
mov
aam
adc
rclb
mov
jl
or
stc
push
and
mov
xor
or
mov
insl
xor
jp
stc
stos
int
inc
inc
aad
pop
jp
cmp
sub
add
xchg
andl
add
jbe
and
add
or
stc
pop
out
push
adc
xorl
xchg
aas
sub
add
jp
in
out
sub
int
fsubr
cmp
mov
lret
xchg
insl
adc
mov
adc
fcomp
cmpb
ja
xchg
sbb
mov
dec
jg
xchg
jecxz
xchg
aas
add
div
pushf
icebp
hlt
into
mov
and
or
lea
mov
fst
push
adc
jg
sbb
icebp
or
xlat
test
jb
out
data16
outsl
jns
loopne
add
adc
dec
inc
pop
pop
bound
and
pop
les
fcmovnu
inc
dec
pop
jo
fimuls
dec
popa
aam
adc
and
and
inc
scas
in
outsb
ss
adc
rolb
sub
xor
loop
and
xchg
mov
pop
and
repz
int
push
mov
pop
cmpsl
xchg
pop
and
movsb
ljmp
xchg
xchg
jns
fisubrl
adc
lcall
cmp
push
cmp
lret
stos
aas
in
pop
push
arpl
leave
fdivr
add
or
mov
push
cmp
xchg
inc
ret
into
mov
mov
notb
dec
jnp
js
shl
test
sbb
mov
std
sub
push
das
fistps
nop
adc
jns
mov
or
sbb
and
je
dec
cmpsl
cmp
out
stos
out
or
jge
dec
mov
jmp
adc
sti
add
cld
inc
adc
sbb
out
xchg
cli
and
push
mov
roll
das
inc
lret
mov
jnp
in
add
sti
xor
jns
movl
inc
pop
les
loope
cli
pop
loope
fadd
in
lret
mov
mov
pop
sbb
mov
repnz
jmp
xchg
pop
in
imul
iret
push
or
cmpsl
cwtl
push
ss
mov
pop
das
fidivrs
xchg
mov
test
mov
add
div
shll
and
sbb
cld
fimuls
xor
dec
es
lea
xor
jae
push
cmp
xor
leave
jne
and
iret
jp
jecxz
mov
mov
xor
and
icebp
js
xor
jmp
mov
movsb
fs
inc
lahf
mov
pop
sarl
jae
ror
jno
adc
xchg
negb
and
xchg
shl
sub
pop
lret
jle
dec
xlat
pop
push
nop
pop
pop
adc
jmp
xorb
push
outsl
fmulp
ja
sub
out
lret
mov
loope
popf
pop
popf
adc
sbbl
repnz
push
ficoms
out
loopne
popf
subl
jecxz
ud2
sbb
shrl
ja
jg
data16
das
sbb
dec
add
cmp
xchg
clc
ljmp
lods
cwtl
cmp
dec
xchg
sub
pop
sbb
in
rcrb
xor
push
cmpsl
dec
dec
popa
xor
mov
aaa
ret
fidivrs
mov
xor
repnz
movsb
fdivl
add
shlb
call
cmc
loopne
xchg
test
sbbl
insl
gs
popa
ret
cli
rcr
clc
jo
jp
inc
mov
and
or
rcrb
add
push
xor
shrl
cs
inc
jcxz
sbb
lods
roll
outsb
pop
lcall
mov
mov
cmpl
addr16
xor
minps
leave
ret
in
loop
aaa
lret
mov
xchg
jmp
pop
dec
popa
lret
sbb
in
dec
xor
pop
arpl
sbb
xor
repz
jl
rol
clc
push
jge
test
jg
or
mov
adc
sbb
lock
inc
inc
dec
shl
mov
adc
adc
jg
mov
cmpsb
add
clc
lcall
xchg
imul
loopne
xchg
or
int3
mov
xor
push
lods
cmp
ficoml
dec
pop
adc
insb
inc
aaa
xlat
add
shll
stc
add
andb
cmp
stos
xchg
push
mov
add
sub
pop
hlt
andb
sub
dec
cmpsb
jp
pop
ja
std
movsb
lods
xchg
inc
pop
adcb
icebp
cli
lret
xchg
push
jl
add
dec
lcall
sub
mov
ds
shr
xor
add
pop
mov
push
cmp
mov
inc
or
js
lahf
jns
adc
aaa
cmp
mov
ret
fwait
or
adc
push
orb
dec
cwtl
test
mov
jl
dec
adc
push
iret
sub
in
or
repz
jp
cmp
push
stc
inc
and
lods
gs
or
or
push
xor
negb
hlt
int3
mov
inc
ljmp
mov
cmp
mov
daa
sbb
push
sub
jp
jl
cmp
fadds
jp
nop
push
loop
lock
and
outsl
mov
mov
mov
jns
sub
inc
popa
mov
cld
xchg
cld
imul
mov
ret
das
and
dec
test
cli
js
sub
mov
jb
jns
dec
mov
sar
scas
test
in
mov
pop
inc
inc
push
cs
fcoml
repnz
jns
out
fdivrl
scas
insb
push
xor
push
aas
repnz
dec
xor
mov
adc
out
stos
adcl
sub
jae
ficoms
jmp
test
sub
push
mov
cvtps2pd
mov
xlat
sub
mov
loopne
mov
into
pop
div
leave
or
inc
js
dec
mov
clc
cs
inc
mov
mov
std
or
imul
test
and
jno
lcall
aad
sbb
out
adc
in
mov
and
addr16
jg
mov
jno
dec
mov
jle
cmp
rorl
push
adc
add
add
or
shrb
pusha
mov
sbb
imulb
shlb
or
inc
fcmove
iret
test
out
andl
bound
cltd
fucomi
loope
jl
jno
insl
sahf
jle
jl
lret
lds
pop
outsl
test
lds
xor
aaa
and
ret
push
mov
nop
adc
or
cmpsb
mov
aam
cmpsl
in
pop
das
xor
dec
xchg
push
cmpsl
dec
add
mov
movsl
xchg
jo
jo
pop
dec
dec
pusha
loopne
stos
das
mov
mov
jnp
jne
call
out
popa
out
mov
arpl
out
aam
jnp
push
mov
mov
mov
negl
adc
rcll
jno
std
sahf
cmpsl
xor
or
mov
pop
cmpsb
sbb
out
dec
rcrl
into
out
add
mov
sub
jne
lock
sbb
std
adc
je
mov
fisubrl
xlat
negl
int3
pop
lock
xor
movsl
xor
push
mov
adc
inc
lret
or
bound
scas
test
push
xchg
pop
movsl
mov
mov
dec
addr16
jge
lcall
in
xchg
and
add
add
mov
rcrb
mulb
addl
pop
cmp
sbb
pop
mov
add
pop
scas
mov
and
push
mov
and
jns
cmp
dec
das
imul
notl
sti
lock
out
into
jecxz
mov
jne
pusha
cmpl
xor
cmpsl
xchg
inc
jno
adc
clc
pop
mov
push
inc
sub
mov
adc
sbb
mov
xchg
or
cmp
inc
and
mov
pop
dec
dec
nop
aad
xchg
outsl
std
fs
bound
repnz
call
push
aam
out
xor
pushf
mov
xchg
mov
dec
aam
fs
in
xchg
sbb
mov
push
xor
inc
fs
jo
addr16
test
bnd
and
dec
mov
mov
stos
andb
sbb
filds
or
mov
mov
shrl
mov
jmp
pop
dec
pushw
rol
sbb
insl
sbb
movsl
jmp
gs
dec
repz
lret
mov
pop
jg
or
push
enter
sti
or
cmp
and
scas
mov
sub
sub
mov
lret
push
xor
jl
lods
int
push
lahf
aad
add
mov
in
loope
push
inc
cmp
cmc
lret
shll
ficoms
jno
pusha
and
in
xor
arpl
or
xchg
jge
repnz
cmp
pusha
jmp
adc
arpl
xor
fcompl
jb
ja
and
mov
fldl
stos
addr16
fdivrs
loop
mov
dec
cmp
mov
jae
xor
inc
dec
ficoml
xor
insl
jmp
movlps
cmc
jp
xchg
pop
subl
jle
cmpsb
add
jmp
pop
cwtl
rol
out
inc
add
push
das
pusha
pop
mov
outsl
aas
pusha
aaa
sub
dec
mov
add
das
icebp
sbb
fcomip
pusha
cmp
stos
mov
movsb
fs
sub
loopne
pop
dec
jmp
mov
and
pop
mov
or
fimuls
xchg
ret
fadds
jb
outsb
std
dec
ret
mov
dec
cmc
iret
cmp
ret
sbb
addb
inc
cwtl
jle
mov
stos
xchg
pop
xchg
jb
xor
mov
sbb
test
int
cltd
out
shlb
xchg
jb
fsubp
ret
jge
fwait
arpl
into
xchg
pop
stos
sbb
movsl
dec
popf
jle
clc
popa
inc
dec
xor
cld
jge
lcall
xchg
sub
push
push
pop
xchg
and
xchg
push
and
pop
xor
fs
aam
inc
incl
push
inc
test
sahf
mov
je
xchg
dec
cmpsb
cs
rolb
cmpsb
xchg
gs
bnd
mov
xchg
in
ljmp
pop
sbbl
imul
les
std
mov
jge
sub
mov
cld
clc
cld
xchg
les
fwait
sbb
and
mov
pop
call
div
stc
in
imul
dec
inc
push
roll
xor
sub
or
xlat
or
js
or
cld
sti
mov
jg
sbb
ret
lods
push
jbe
loope
xor
loopne
in
shll
xchg
mov
dec
mov
daa
xchg
sbb
fwait
ds
or
mov
lea
aaa
js
movsb
fistps
push
and
mov
mov
cmp
xor
xchg
dec
ja
cld
cmp
or
lret
nop
xor
mov
mov
pop
mov
push
dec
mov
bound
pop
sub
addr16
iret
push
clc
mov
sub
fadds
mov
bound
fbld
adc
ljmp
js
lcall
cmp
lcall
push
xchg
push
push
mov
mov
bsr
pusha
push
and
dec
das
push
add
cmp
idivb
imul
jl
xchg
mov
aas
int3
lock
dec
cmp
jp
pusha
mov
cwtl
int
adc
and
xor
in
in
outsl
xchg
xor
call
jns
jno
out
xor
xchg
sbb
xor
inc
loope
repnz
mov
mov
cwtl
dec
out
inc
mov
es
cmp
dec
adc
imul
dec
daa
repnz
test
loope
inc
fucomp
jb
dec
add
push
sub
jns
xor
fcompl
mov
and
in
and
mov
mov
test
jle
xchg
mov
decb
push
pop
xor
mulb
dec
add
mull
cmp
and
push
xor
mov
cmp
fldcw
mov
gs
dec
popa
divl
gs
inc
inc
sahf
je
xor
push
lods
push
xor
ret
sub
push
loop
loope
testl
dec
add
jg
stc
call
mov
leave
insb
in
jnp
mov
movsl
cwtl
mov
enter
and
sbb
xchg
sub
inc
pop
popa
dec
mov
lods
repz
out
int
inc
aas
movsl
pop
gs
xchg
xchg
or
lss
in
rcl
dec
aad
and
xchg
repz
sub
movsl
out
pop
cmc
fstps
dec
cs
insl
in
ss
dec
mov
lret
inc
cmp
dec
mov
loopne
cmp
push
dec
hlt
scas
into
bound
xor
and
nop
dec
iret
leave
test
push
push
test
pop
mov
xor
and
sbb
push
mov
push
shll
es
int3
xor
add
repz
push
orb
cmpsl
pop
movsl
gs
imul
add
add
adc
lock
and
sub
jg
ret
or
lock
cmp
dec
dec
ljmp
xchg
inc
in
pop
pop
sbb
inc
out
push
les
sbb
adc
out
lea
mov
add
sub
outsb
and
mov
sbbl
mov
out
mov
adc
in
cli
pop
jmp
adc
cld
pusha
imul
mov
jae
ret
jl
xor
pushf
sub
sti
xor
repz
psraw
cwtl
sub
mov
pop
repnz
shlb
aad
hlt
sub
cmp
or
mov
outsl
cmp
adc
mov
mull
inc
sbb
push
pop
dec
rol
aad
mov
mov
cmp
pop
xchg
xlat
cmp
neg
icebp
adc
clc
push
decb
and
jp
imul
mov
jae
repnz
lcall
pop
mov
mov
lret
sbb
xor
jb
cmp
and
in
dec
mov
insl
ret
add
dec
jns
mov
stc
push
sbb
push
mov
ret
dec
ljmp
adc
test
sbb
push
mov
sub
jne
mov
rorb
jp
mov
jg
loope
stc
mov
jno
cli
iret
ja
es
mov
cld
mov
or
lods
pop
andl
or
mov
inc
jo
mov
out
pop
shll
outsb
inc
jecxz
lods
pop
adc
sbb
jb
or
jle
dec
xor
ret
mov
adc
dec
cltd
test
cs
and
jecxz
cltd
fistpll
push
fbld
push
jl
testb
fists
xchg
cmp
stos
pop
and
dec
test
push
dec
jecxz
and
test
sub
xchg
or
mov
pushf
xor
jb
mul
adc
in
flds
xor
movsb
sbb
mov
add
add
or
mov
jnp
inc
and
add
cmp
cmpb
jl
xchg
dec
rorb
xchg
dec
shrb
mov
or
jle
sub
lods
out
cmpsl
and
outsb
popa
cmpsb
jl
cmp
sub
push
jae
xor
clc
cwtl
inc
in
adc
mov
mov
jl
into
push
and
mov
mov
and
lods
popf
cmp
and
lret
push
and
not
push
sub
insl
lods
cmpsb
pop
dec
roll
dec
lcall
sarl
rcl
jb
inc
and
jo
lods
cltd
mov
fdivr
cmp
cmp
xor
cmpsl
std
jo
mov
push
cli
mov
push
repnz
fnstsw
inc
sahf
mov
scas
in
out
jmp
push
ds
in
nop
notl
jnp
cltd
roll
test
push
mov
cld
call
lcall
stos
xchg
xchg
ret
push
sbb
and
sub
xor
loopne
mov
mov
inc
or
push
jne
and
popf
fldcw
fdivrp
sub
outsl
jg
cltd
in
sahf
push
sub
cmp
pop
leave
stc
mov
test
prefetcht1
or
pop
jp
push
pushf
or
or
push
gs
cmp
or
jp
xor
mov
cmpsl
lock
std
dec
mov
jp
jl
dec
imulb
push
scas
lock
cmp
in
popf
ljmp
xchg
and
lcall
subl
inc
and
mov
stos
popf
mov
or
jne
xchg
xor
add
pop
pop
pop
jnp
sub
jecxz
cs
mov
bound
leave
cmp
das
mov
cld
pop
rcrb
and
outsl
add
enter
add
mov
or
cmpl
dec
cmp
in
cmp
int3
iret
std
sub
lock
insl
adc
icebp
mov
add
xchg
adc
lea
push
mov
jmp
fisubrl
and
repnz
mov
ficoml
mov
sub
insb
pop
jg
cs
mov
mov
sbb
adc
sbb
inc
sbb
dec
loopne
fiaddl
mov
cmpsb
imul
lods
jecxz
ret
inc
cmp
and
dec
stos
adc
mov
mov
decb
sub
cmp
dec
cmp
xchg
inc
into
mov
cli
push
insl
inc
mov
mov
ret
pop
test
adc
push
adc
rcll
imul
fistpl
xor
jae
inc
lds
cli
inc
aam
or
iret
pop
dec
and
outsb
ds
fldl
inc
imul
xlat
ss
push
dec
cmp
or
cmpsl
je
test
ret
jg
jmp
stc
lods
xchg
cmc
inc
mov
mov
adc
das
mov
push
popa
or
add
cmc
xrelease
add
cmp
jg
mov
inc
and
fnstenv
xchg
mov
add
mov
sub
mov
cmc
or
bound
xor
cmp
fisttpl
xchg
imul
out
repnz
out
pop
pop
jcxz
nopl
jno
or
imul
and
fmull
mov
setge
hlt
add
pop
aam
popf
cmp
lods
aam
pop
cmp
cmp
aad
add
push
aad
push
cmp
orl
das
es
dec
lods
jnp
call
mov
icebp
add
pop
rcrb
dec
fsubrl
jo
in
ja
jle
int
xor
andb
xor
push
ljmp
xchg
mov
xchg
test
push
cltd
mov
lret
loope
inc
lret
pop
xor
lret
mov
clc
cmp
cld
ret
lds
negl
loop
mov
mov
or
cmp
repnz
mov
test
ja
les
in
pop
mov
sub
testb
lods
add
stc
xchg
loop
movsl
mov
inc
stos
inc
fbld
xor
mov
lret
bts
add
add
push
sbb
mov
lods
mov
call
inc
pop
fistps
mov
rclb
insb
insl
pop
cmpsb
inc
data16
sti
mov
shrb
popa
pop
jle
out
cmpsl
sub
add
inc
sub
shlb
stos
imul
out
sbb
xchg
pop
sahf
add
in
mov
mov
push
rcl
or
div
dec
inc
loope
sub
sub
pop
cwtl
adc
cmp
sar
ljmp
push
cmp
xchg
sub
nop
push
and
sahf
adc
inc
dec
dec
ret
sub
loop
pop
pusha
repnz
stc
fbstp
cltd
cmp
adc
enter
js
and
sahf
and
gs
jmp
jb
je
shll
into
push
pop
dec
lds
dec
or
pop
push
lret
mov
sbb
in
sbb
xchg
shrb
popa
es
pop
notb
icebp
lea
pushf
mov
jl
adcl
ljmp
fstpt
mov
inc
scas
insb
ss
pop
sbb
mov
xchg
xchg
xchg
test
adc
addr16
xor
push
cs
insb
xor
out
icebp
nop
leave
cwtl
cmp
daa
jne
and
rcrl
frstor
iret
or
stos
ficomps
mov
daa
nop
movsl
imul
pop
outsl
testl
mov
int
fiaddl
addb
imul
mov
jl
in
jp
xchg
loopne
inc
xchg
stos
xchg
les
lahf
into
cmp
mov
cmc
pop
sbb
ds
into
idivb
fistps
sbb
jle
jmp
jmp
mov
cmc
sbb
or
aam
loopne
lods
sbb
jmp
setae
push
imul
in
lcall
stc
fs
sbb
and
xchg
ljmp
add
xlat
xlat
xor
jnp
int
xor
shr
mov
imul
test
testl
mov
repnz
fst
mov
jg
push
sbb
cmpsb
imull
mov
cmc
fs
mov
cmc
mov
fwait
push
mov
push
jae
fistpll
out
enter
mov
addr16
mov
loopne
fists
cmp
pop
add
subb
arpl
sbb
sub
lahf
scas
mov
mov
xchg
xor
test
mov
gs
mov
bnd
outsb
mov
push
clc
sbb
cld
jae
mov
push
push
out
das
cltd
repz
mov
pop
pop
push
es
lcall
sbb
fwait
das
cmp
into
jbe
add
jbe
repz
dec
add
sti
sbb
sbb
bound
imul
loop
jg
pop
aam
xchg
lcall
das
xor
inc
and
pop
insb
push
xor
mov
imul
divl
bound
lahf
cwtl
pop
push
push
and
movsl
push
enter
lock
stc
test
test
cmp
or
addr16
out
inc
cmp
mov
xlat
mov
std
pop
cmp
movsb
enter
cli
rol
mov
dec
cmp
movd
push
pop
test
cltd
push
das
jns
repnz
addl
jmp
xor
mov
dec
daa
stc
mov
in
push
pop
sub
cwtl
fcoml
push
fistpl
mov
inc
jne
iret
int3
shl
mov
lea
sub
dec
fwait
add
mov
dec
adc
dec
adc
dec
je
loopne
fimuls
xor
enter
sub
dec
fcom
jae
sbb
fcmovnb
sbb
scas
enter
mov
adc
cmp
sbb
lea
mov
test
fcompl
cmpsl
sub
lea
jg
mov
xor
data16
in
adc
addr16
andl
push
and
pop
inc
pop
jne
inc
dec
fldpi
test
inc
inc
stos
nop
mov
add
fcom
pop
pop
mov
repnz
push
xchg
add
add
or
or
scas
push
or
xor
stos
xchg
cmp
andl
push
xchg
cmpsl
sub
pop
orb
xchg
test
iret
aas
ficoml
jmp
out
pop
or
test
xor
out
into
out
dec
inc
lea
test
fisubs
lret
or
divl
addr16
jae
dec
xor
xchg
lods
sub
and
divl
sbb
ss
aam
mov
cmp
pusha
push
cltd
stos
cmp
ret
cmp
adc
or
mov
mov
mov
inc
imul
je
add
addl
ss
mov
cmp
adc
ret
ficompl
push
mov
dec
rol
nop
cmp
xor
fbld
xchg
sbb
xchg
bound
mov
xchg
lret
mov
nop
shll
enter
push
call
cmpsb
mov
loop
sub
stos
cli
pop
adc
rorl
mov
movsl
mov
aam
das
leave
dec
mov
aas
ret
mov
ret
lods
push
sbb
mov
fnstsw
sbbb
ret
scas
arpl
in
arpl
or
fwait
jne
adc
sahf
lods
mov
sahf
ljmp
sti
jmp
push
push
mov
xchg
push
test
pushf
bound
jno
stc
mov
shlb
in
sahf
pop
mov
or
mov
addl
pop
dec
and
xchg
mov
cmp
bound
std
inc
sbb
aad
aas
mov
dec
imul
xchg
mov
mov
cld
test
mov
mov
popa
rcll
adc
adc
push
cmp
pop
out
push
jp
push
jl
adc
pop
dec
pop
test
or
jnp
adc
xlat
xor
clc
sub
popa
xchg
mov
lret
fldcw
popa
shr
out
mov
mov
and
sbb
sub
and
xchg
add
mov
testl
in
mov
xchg
out
cwtl
call
pop
ret
sbb
jne
outsb
arpl
shll
sub
test
mov
out
les
xchg
testb
sbb
sub
icebp
nop
pop
mov
rcrb
clc
mov
and
mov
js
push
repz
pop
inc
data16
ret
insl
xchg
cmp
cli
je
pop
jnp
adc
mov
mov
test
mov
stc
jp
sbb
pop
mov
sti
rcl
cmp
push
mov
sub
inc
inc
mov
out
jns
xor
ljmp
adc
sahf
adc
cwtl
ljmp
mov
jge
into
insl
mov
dec
ror
outsl
jnp
es
push
mov
std
add
jge
ret
cmpsl
repnz
int3
push
mov
out
adc
andl
mov
mov
cli
decb
jge
out
sub
rcll
shrb
arpl
insb
adc
loop
into
les
arpl
arpl
into
sti
pop
arpl
ds
dec
mov
jb
test
enter
sub
xchg
cld
pop
pusha
mov
pop
jo
inc
mov
lock
fbld
mov
mov
int
out
push
jg
push
pop
dec
and
call
add
bswap
jbe
inc
jno
pop
add
dec
inc
out
and
mov
pop
sbb
sbb
bound
leave
add
dec
cld
shlb
popa
or
mov
mov
aam
jle
rcr
pop
adc
lahf
je
test
hlt
mov
repnz
xchg
leave
jg
push
xor
xor
imulb
push
cwtl
pop
rcpps
mov
jbe
xchg
out
jl
jae
xchg
and
pushf
xor
jns
test
mov
sub
mov
test
test
push
push
pop
mov
fisubs
imul
in
repnz
rcll
out
xor
push
push
push
iret
mov
pop
in
ror
mov
sti
mov
out
lods
out
xchg
aam
data16
ficompl
jae
xor
inc
aad
or
jge
sbb
sub
xor
ret
lcall
dec
sub
cwtl
jle
dec
and
inc
pop
jecxz
mov
xchg
lcall
popa
xchg
adc
xchg
jl
mov
mov
xor
mov
cli
lcall
push
rolb
adcb
push
je
sub
inc
push
add
or
testb
inc
adc
addl
mov
pop
pop
dec
in
xchg
push
pop
add
sbb
and
fbstp
pop
push
jbe
sub
lcall
insl
mov
sbb
ret
or
lret
add
push
movsb
dec
out
pusha
push
repz
arpl
xor
enter
add
cmp
dec
je
daa
and
loopne
dec
cmp
mov
movsb
mov
xor
decb
test
ret
and
popa
push
and
cs
test
and
jnp
dec
pop
or
lcall
or
fildll
push
mov
repnz
mov
fcompl
cmp
dec
dec
hlt
stc
or
in
mov
sub
jb
es
lret
enter
mov
lahf
sub
stos
stos
cld
ror
xor
jno
cwtl
pushf
sbb
push
aaa
in
test
rcl
xor
lahf
inc
mov
das
xchg
arpl
push
pop
loop
cmp
ljmp
jecxz
stos
dec
incb
jmp
outsl
adc
dec
into
jl
mov
fcoms
sbb
push
stos
movsb
mov
imul
dec
ss
mov
or
lods
push
nop
push
inc
mov
push
lock
push
out
test
fs
or
jnp
xchg
icebp
push
loop
mov
adc
push
dec
and
lea
xchg
adc
mov
mov
mov
xchg
cmpsb
lcall
cmp
lds
xchg
mov
int
push
push
outsl
lahf
lret
outsl
enter
repz
inc
hlt
push
insl
into
add
sti
dec
fldenv
inc
jo
sti
out
bnd
sahf
mov
or
push
ret
test
dec
mov
push
out
notb
repz
loope
adc
es
push
insl
jmp
dec
cmp
movsb
cmpb
sub
test
xor
sti
xchg
or
xchg
pop
in
or
and
das
add
dec
dec
cmp
inc
adc
sub
jecxz
cmp
movsl
lret
dec
mov
lods
call
cmp
xchg
cmp
sub
cmpsl
jge
pop
add
jbe
jne
adc
outsl
push
push
call
iret
sub
popf
divl
xchg
ljmp
iret
adc
push
sbb
inc
aaa
or
sub
mov
push
mov
dec
int
pop
es
shrl
sbb
pop
shlb
xor
mov
xchg
popf
xor
xchg
or
xchg
movsl
pop
xchg
rorb
mov
in
dec
sub
add
mov
jp
mov
push
mov
pushf
rclb
sbbl
scas
adc
cmp
repnz
out
add
sub
adc
cmp
mov
xor
popa
mov
jge
or
sti
lahf
pop
inc
ret
add
sub
cmpsb
pop
popf
cmp
xor
cltd
lods
xchg
mov
in
pop
dec
pop
scas
test
movsb
and
mov
arpl
pop
jno
mov
hlt
xchg
dec
mov
das
jns
cli
scas
lea
mov
test
rcrb
icebp
fwait
sahf
push
xorl
test
jp
sbb
mov
mov
call
push
sbb
scas
push
xor
pop
mov
pop
pop
cs
shl
sub
jg
das
aad
and
repz
js
and
rorb
js
and
push
push
push
cmp
popa
sbb
add
js
shrl
cmp
mov
insb
mov
mov
jl
lret
mov
xlat
jecxz
shl
sbb
push
gs
mov
out
loop
dec
ja
pop
loopne
add
push
cs
ja
push
mov
fldenv
out
mov
test
repnz
xorb
or
lahf
mov
add
cwtl
jp
fstpl
sahf
xor
sbb
in
test
xchg
jecxz
xchg
icebp
scas
inc
lea
mov
dec
repnz
repnz
jne
lods
jg
xlat
mov
in
add
in
insb
or
push
loope
push
popa
sbb
insb
or
inc
xchg
or
mov
pop
mov
jbe
mov
leave
cmpsl
xor
dec
pop
inc
fst
inc
and
push
push
inc
mov
or
sbb
add
int
xor
or
pop
push
pop
xor
lahf
loopne
pop
icebp
sbbb
test
lahf
sub
pop
dec
xor
xchg
jecxz
adc
sbb
in
cwtl
jae
stc
ljmp
jmp
jns
daa
jo
ss
mov
dec
mov
and
test
js
jecxz
sub
aam
adc
jns
xchg
sbb
pop
dec
dec
adcb
adcl
fidivs
jmp
test
adcb
sahf
xor
cmp
xor
rcrb
jge
mov
cmp
mov
testl
or
and
addr16
add
push
inc
mov
mov
and
and
les
lahf
cmp
mov
mov
shlb
sub
jbe
stc
inc
les
cmp
and
js
dec
in
xlat
pop
into
movsb
sbb
push
jo
mov
sub
or
sub
or
rclb
xchg
mov
mov
sub
rorl
cmpsl
int3
in
push
dec
mov
jne
rcr
add
lds
fcoms
cmpsl
sar
lret
lret
push
ss
loope
movsl
push
mov
into
jb
push
arpl
sub
mov
pop
fs
es
mov
pop
inc
mov
sti
ja
nop
mov
pop
je
push
leave
scas
pop
cmp
sub
and
and
jns
mov
or
cmpsl
mov
xlat
rcr
pop
inc
cmc
iret
push
sbb
mov
and
fucomp
cmp
push
mov
aad
jge
testb
push
xor
push
in
ljmp
int
data16
mov
and
mov
xor
xchg
or
mov
out
test
push
inc
in
add
mov
daa
adc
pop
mov
sub
div
push
pop
stos
add
xchg
adc
js
mov
inc
cmp
ljmp
mov
cmp
stos
sub
ss
gs
imul
sub
dec
out
sub
das
pop
into
insl
xchg
mov
sarl
and
int3
inc
fwait
cmc
stos
mov
push
cmp
stos
jb
ljmp
lahf
outsl
xchg
ja
jp
movups
xor
outsl
aam
pop
loopne
mov
sbbb
cmpsb
or
xchg
rorb
dec
test
sub
push
sbb
mov
sbb
lahf
jne
mov
jae
inc
mov
adc
pop
sti
aas
jl
mov
ret
inc
mov
int
inc
mov
stos
xor
or
call
pop
sahf
leave
cmp
mov
mov
mov
sub
dec
je
sbb
jbe
negl
mov
es
mov
pop
sbb
popa
jle
mov
addr16
adcb
mov
rcl
in
xor
add
or
test
pop
popl
in
push
lods
lods
xor
mov
sbb
jmp
adc
jnp
test
nop
sti
sbb
xchg
pop
or
or
inc
test
cld
mov
push
jle
cmp
test
cmc
scas
je
push
je
xor
inc
xor
dec
addr16
xchg
pop
ds
mov
outsb
or
shrl
shlb
test
mov
xchg
popa
inc
push
aaa
popa
xchg
mov
fistpll
shrb
mov
push
push
ss
cli
inc
js
mov
push
int3
sub
enter
or
push
mov
out
jb
cwtl
sbb
test
and
out
inc
cmp
push
divl
mov
lds
xchg
movsb
js
xor
shlb
mov
add
cwtl
mov
add
in
cwtl
mov
add
xchg
imul
mov
cmp
mov
cltd
in
jecxz
cmpsb
dec
sar
xchg
jl
data16
pop
or
in
and
push
cmc
cmp
dec
jp
cmp
outsl
addr16
ja
lods
sbb
movsb
ret
cmp
daa
adc
jg
mov
jp
aad
in
jae
lcall
mov
daa
mov
or
fdivl
push
int
cmp
test
leave
aam
pop
adc
xor
loopne
gs
div
sub
dec
outsl
fcmovnb
xchg
inc
sub
hlt
xchg
jns
pop
adc
xor
xchg
inc
mov
mov
es
sbb
pop
shlb
xor
repz
adc
pop
or
insb
fidivrs
mov
addr16
jne
dec
fisubs
inc
mov
fwait
mov
inc
add
push
and
lods
cmpsl
outsb
adc
xchg
les
lea
mov
mov
xchg
xchg
add
test
mov
data16
outsb
xor
cmp
jno
out
int
rcr
scas
mov
mov
xor
loop
sub
xchg
mov
add
xchg
xchg
or
sysenter
dec
iret
pop
push
lret
outsb
inc
mov
jo
sbb
push
addr16
jmp
lahf
ret
paddsw
fwait
sbbl
bound
inc
int
mov
mov
or
or
lahf
sbb
push
dec
cmc
lcall
jne
sti
jb
imul
mov
push
adc
cmp
push
cmp
loop
clc
loopne
fdivrs
stos
es
pop
jle
add
repz
icebp
les
jmp
lahf
int3
hlt
test
adc
sbb
pop
and
lea
daa
jp
mov
ffree
mov
cmp
pop
fdivrl
mov
adc
inc
cmpsb
sub
in
shll
or
mov
ret
loope
cmpsb
cmp
add
sarl
das
push
out
outsb
adc
lds
jg
or
mov
jge
add
xchg
lahf
dec
jo
int
lods
repz
lods
mov
movsl
xchg
insb
insl
push
jge
mov
test
mov
out
mov
cld
aam
rclb
cld
sub
mov
mov
mov
jle
adc
mov
arpl
jecxz
sub
jae
and
lret
loop
popa
jo
mov
adc
leave
or
pop
dec
sub
sbb
cmc
aas
test
lods
test
lahf
fs
and
data16
test
mov
jne
or
lea
dec
mov
mov
insl
mov
adc
pop
and
stos
xchg
mov
inc
pop
int3
fs
repnz
jl
rcrb
loop
cmp
ljmp
pushf
out
jno
flds
and
sub
in
sbb
pop
dec
cmp
in
out
pop
xchg
mov
pop
or
pushf
popa
cli
dec
pop
lods
dec
mov
cwtl
mov
fs
push
push
or
push
iret
dec
test
mov
rorb
inc
fdivr
shll
int
aaa
cmp
shl
mov
add
in
add
dec
xchg
pop
jg
xor
es
jb
cmpsb
out
inc
mov
call
lret
test
cmp
mov
inc
push
mov
sbb
or
push
jo
jns
mov
push
lret
jp
arpl
repz
push
nop
mov
scas
mov
dec
push
xchg
mov
dec
pop
mov
or
add
test
or
adc
insb
in
std
ss
adc
adc
outsb
adcl
pop
xor
xchg
mov
mov
out
in
repnz
enter
mov
dec
mov
adc
stos
leave
inc
fiadds
aam
loope
dec
test
sub
lcall
xor
mov
sti
lods
addr16
and
jb
sbb
xchg
dec
push
cmp
mov
shrb
jae
dec
aaa
and
pop
dec
das
fsts
imul
sub
sbb
push
push
pop
mov
cmp
fsubrs
lds
mov
cmp
inc
cmp
or
fbld
call
mov
mov
jle
dec
push
mov
add
jecxz
add
pushf
mov
push
xor
js
adc
adcl
mov
in
daa
push
add
fucom
push
mov
icebp
nop
dec
sarb
testb
fisubl
ljmp
arpl
fsubr
clc
addb
sub
stc
xor
jl
clc
or
inc
or
loope
test
xchg
jecxz
lret
scas
popa
into
in
fistpl
dec
mov
stc
popf
popa
dec
out
cmp
shll
std
stos
lret
lods
or
pop
addb
aas
pop
jge
ret
jmp
shrb
xchg
aas
movsw
push
sbbb
push
rorb
lock
and
push
mov
pushl
insb
xchg
mov
mov
int3
es
mov
daa
pop
nop
mov
push
pop
sub
clc
xor
pop
push
out
push
ss
lcall
js
out
cmp
pop
push
rcrl
gs
andb
adc
pop
push
enter
in
mov
insb
xchg
push
lods
xor
push
iret
and
lcall
insb
aad
test
xchg
pop
cmpsb
cs
dec
or
cmp
mov
ds
insb
cmc
push
daa
ret
cmpsl
dec
mov
addl
mov
xchg
lods
lahf
cs
test
je
int3
jecxz
mov
int3
popf
mov
mov
mov
fadd
idivb
and
in
dec
inc
sti
loopne
cltd
xchg
adc
cmp
outsb
popa
sbb
push
inc
nop
fisttpll
adc
je
mov
cmp
adc
inc
bound
adc
rcl
fmull
imul
inc
xchg
and
in
negb
fsubs
xchg
out
decl
imul
push
adc
or
push
aam
jae
sbb
and
sub
and
cmc
insb
push
sub
sbb
movsl
sahf
insb
or
jge
fsubl
nop
inc
inc
out
xlat
test
cld
dec
and
call
int3
sahf
push
bound
cmp
aas
imul
add
xchg
lods
fincstp
xchg
popf
and
mov
ret
cmp
jmp
movsl
daa
jno
mov
push
sub
hlt
dec
lock
in
sahf
and
sbb
mov
stos
jne
inc
int3
mov
ror
add
xor
loopne
addr16
js
mov
adc
out
popf
cmp
or
jns
lea
pop
push
pop
pop
cmp
lods
cld
pop
data16
cmpl
xchg
push
lock
xchg
add
loope
mov
inc
adc
clc
push
aad
sub
jmp
mov
daa
out
inc
mov
pop
mov
hlt
out
js
cmpsl
sbb
clc
lods
add
leave
cmpsl
lods
dec
popf
into
std
push
mov
and
mov
das
xchg
jne
xchg
xchg
adc
jne
pop
int3
mov
push
xchg
push
add
fwait
dec
mov
out
movsl
dec
jmp
mov
add
lea
sbb
movb
add
adc
roll
sub
xor
jnp
mov
push
and
and
dec
or
enter
fcoml
int3
dec
filds
fisubs
call
adcb
pop
popf
xchg
pop
cmp
fisttpll
call
int
sub
sub
dec
jle
addr16
pop
cli
push
xchg
in
lcall
aaa
sahf
scas
mov
mov
pop
pop
mov
in
adc
in
aam
adc
dec
mov
movsb
cmp
cmp
popf
insl
mov
enter
pop
std
mov
inc
rolb
shrl
out
and
rol
mov
adc
dec
mov
ja
cmp
fcoml
sbb
shll
mov
int
popl
outsb
daa
pop
lret
xor
lcall
dec
ds
ror
das
std
push
pop
ret
test
pop
fidivrl
outsb
imull
sbb
cli
adc
push
mov
pushf
sub
inc
push
es
xlat
inc
movsl
xchg
imul
aaa
jp
pushf
negl
xor
inc
outsb
cltd
insl
stc
xor
repnz
mov
lods
lcall
int3
push
sub
into
inc
adc
movsl
inc
mov
filds
fwait
loop
aaa
pop
inc
mov
cwtl
mov
pop
cmp
jno,pt
stc
dec
mov
mov
scas
popa
fcmovnb
inc
add
jne
shll
sub
add
int3
je
out
cmp
pop
push
cmp
inc
std
push
shll
cmp
jmp
test
leave
jno
sbb
jbe
aad
sti
inc
lods
add
mov
xchg
mov
shrb
int
pop
jns
add
push
mov
lahf
sahf
ret
repz
gs
xor
repz
pop
stos
into
dec
or
insb
dec
lea
data16
inc
mov
add
das
or
aam
cmpsb
push
jp
sub
lret
out
movsb
outsb
mov
ja
mov
aas
out
xor
mov
sub
mov
mov
pop
xor
jg
xchg
daa
and
fsubr
xor
push
andb
je
mov
inc
fdivr
ss
fdivrl
mov
sbb
push
ret
in
mov
vpunpcklqdq
stos
sbb
jge
incl
mov
adc
mov
lods
cmpsl
cwtl
cld
out
mov
scas
or
sub
inc
jle
inc
mov
push
push
jle
adc
sarb
push
cli
add
and
aam
sub
mov
xor
cmp
scas
sbb
xchg
addr16
push
xchg
mov
cmc
jbe
sbb
gs
insl
adc
cmpsl
shl
int3
movsb
je
in
je
mov
dec
orl
rcll
pop
ret
nop
xchg
shlb
lea
inc
lret
out
imul
xchg
jno
jnp
sub
mov
pop
xor
and
test
loopne
fcompl
outsl
and
mov
andl
out
pushf
cmpsb
lods
push
pop
sbb
fisubrl
scas
fisubl
test
test
rcrb
dec
iret
or
cmp
push
xchg
aam
movsb
je
aad
dec
lds
and
push
in
daa
hlt
fbstp
lods
xchg
leave
insb
cmp
cmpsb
arpl
sbb
cmc
xchg
enter
test
jmp
fwait
adc
mov
or
xor
xor
out
sub
push
fldt
jg
add
aas
inc
push
pop
aaa
ret
xchg
sbb
loop
int3
out
inc
push
andl
aad
movl
jmp
aas
es
outsb
push
add
leave
xor
pop
xchg
popf
xor
cs
lods
adc
dec
mov
clc
mov
jg
shll
daa
push
xchg
cmpb
xor
stc
sbb
mov
out
rolb
mov
icebp
sti
gs
xchg
popw
xor
mov
xor
jp
jp
fsubl
sub
adc
aas
popf
xchg
adc
cmc
es
lds
bound
push
popf
push
rclb
sub
cmc
shrl
enter
cmp
imull
call
sarl
inc
enter
inc
adc
repz
rolb
adc
jae
xchg
mov
int
xor
push
xchg
lret
fucomi
pop
pusha
pop
inc
and
xchg
inc
xchg
or
xchg
int3
pushf
add
in
cli
xor
incb
div
push
stos
pop
popa
jno
loop
xchg
pop
stos
ljmp
movsb
jge
ja
sbb
lahf
pop
xchg
sub
dec
xchg
xchg
stc
dec
mov
lret
mov
pop
xchg
pop
in
pop
mov
xor
int
aam
push
ja
xchg
in
mov
and
stos
xor
scas
push
push
dec
mov
mov
ret
xlat
clc
and
mov
js
dec
mov
mov
mov
lods
dec
mov
sub
imul
cmp
mov
in
push
scas
add
lret
jle
push
in
push
sub
xchg
pcmpeqd
mov
insl
sbb
jg
jg
lahf
lret
xchg
inc
fidivl
lock
push
dec
jo
out
das
pop
mov
cmpsb
pop
or
lods
inc
mov
jae
adc
jbe
bound
push
addl
ficoml
xchg
add
test
and
test
mov
ljmp
cmp
inc
sub
clc
sub
sarb
mov
cmp
jge
pop
pop
leave
js
into
mov
xchg
out
xchg
adc
fisubrl
outsl
imul
test
mov
and
push
add
hlt
outsb
inc
gs
loopne
xchg
push
lcall
ret
leave
xor
mov
lock
push
mov
add
addr16
jbe
mov
sub
push
pop
xchg
push
mov
mov
adc
in
jle
jo
scas
push
jae
add
xchg
ds
sbbl
inc
sahf
fidivrl
les
inc
sub
pop
inc
and
jl
out
xchg
sbb
jbe
shr
icebp
rclb
adc
push
cmpb
jp
andb
add
add
sub
cmpsl
shr
and
pop
les
idiv
daa
mov
push
jmp
push
mov
cmp
fdivl
pop
popf
in
mov
mov
inc
aam
or
fidivrl
cmp
xchg
xchg
jb
scas
inc
fcompl
dec
sbb
cmpsb
dec
nop
mov
sub
loop
jmp
aad
jge
pop
mov
pop
and
pop
rorl
stos
pushf
mov
jle
pop
xor
fwait
lock
rcll
cmp
adc
sbb
fwait
adc
push
jecxz
mov
lcall
mov
shrl
loopne
fsts
mov
repnz
lret
cmp
stos
scas
sti
ljmp
xchg
inc
insb
pop
adc
mov
cmpsb
lahf
lcall
cmp
lahf
mov
insl
repnz
mov
push
aad
clc
int3
in
out
cwtl
aad
cmp
fmull
in
call
pushf
mov
pop
dec
or
fcompl
mov
xorb
inc
test
xchg
push
mov
pushw
loope
mov
scas
or
xlat
adc
test
cmpb
mov
xor
fdivrl
mov
push
sub
push
imul
mov
mov
sbb
in
adc
mov
xor
and
aam
mov
les
movsb
add
adc
push
int
movsb
mov
popa
loop
mov
sbbl
pop
loop
and
sbb
jns
jmp
mov
rorb
and
fiaddl
fwait
insb
add
stos
jnp
ljmp
sbb
and
mov
shrb
sti
addr16
orb
dec
mov
inc
data16
insl
shlb
ja
call
lcall
in
stos
cmp
mov
fs
mov
mov
ljmp
cmp
sub
loope
xor
push
xor
add
adc
fcoms
xlat
aaa
in
and
dec
sub
lds
test
and
mov
js
out
dec
sbb
push
mov
test
addr16
lods
xor
cltd
jmp
fucomip
iret
shrb
jmp
popa
in
pop
mov
psubq
or
ljmp
shlb
out
pop
cmpsb
lds
stos
inc
jns
or
adc
aam
push
aas
mov
sti
hlt
mov
pop
movsl
or
xchg
fcomp
lods
push
sbb
push
testb
fmul
xor
jp
push
push
sbbl
insb
mov
cli
pop
ljmp
ret
jnp
add
add
cmp
mov
xor
clc
mov
push
sbb
or
daa
sbb
pop
pop
fdivl
in
pop
pushf
aad
test
push
or
xchg
rol
push
cmp
sahf
mov
xor
inc
outsb
xor
mov
adc
mov
pop
push
mov
dec
add
lods
cli
add
mov
fsubrs
sarl
adc
addl
out
sub
push
mov
daa
leave
in
pop
clc
imul
mov
imul
fists
and
inc
sbb
dec
or
and
arpl
dec
jo
in
lea
inc
ret
cmc
pushf
inc
mov
shll
outsl
push
dec
int3
stos
sbb
stc
leave
adcb
inc
fidivs
loopne
mov
sbb
sbb
inc
ret
imul
int
popf
mov
aaa
lock
clc
rcrl
adcb
mov
cmp
pop
incb
xchg
and
mov
mov
test
sti
sbb
dec
ret
jle
roll
mov
jge
xchg
jecxz
push
test
aam
xchg
and
addb
les
xor
mov
mov
mov
adc
adc
scas
aaa
cs
stos
cmp
mov
outsb
pop
js
dec
stos
loop
insb
not
sarb
arpl
aam
lret
in
adc
adc
out
jecxz
dec
xchg
adcb
out
mov
scas
pop
popf
jo
xchg
shrl
je
stos
jo
adc
ficomps
aad
fwait
jbe
jne
push
xlat
scas
in
test
jb
mov
cmc
fcompl
scas
aam
out
lcall
stos
cmp
xchg
arpl
repnz
lea
sbbl
sarl
jo
mov
mov
jmp
int3
sbb
imul
mov
jg
pop
dec
xchg
nop
sahf
cmpsb
adc
dec
ss
cmp
stos
aam
insb
shll
mov
mov
or
add
push
subl
movsl
je
or
adc
adc
int
sbb
les
mov
aas
pushf
mov
scas
xchg
cli
dec
jl
cli
inc
mov
aaa
sub
dec
lock
jns
gs
cltd
fmuls
mov
pop
stos
pop
mov
pop
push
cs
cwtl
push
lret
mov
inc
mov
rorl
enter
xor
aas
push
add
jmp
lret
out
inc
mov
insl
add
cli
jb
pop
je
or
sub
in
lock
int
jne
cmp
or
adc
or
push
imul
shrl
dec
xor
xor
mov
je
pop
aaa
ljmp
rcrb
lret
int
rclb
push
sbb
sarb
adcl
pusha
test
out
jnp
addr16
add
out
add
cwtl
pop
aas
cs
pop
push
pop
cmpsb
and
insb
insl
into
pop
ret
shlb
push
pop
jb
test
outsl
mov
ja
mov
sub
cmp
xor
paddd
jbe
imul
or
mov
mov
icebp
in
and
sbb
fwait
hlt
mov
pop
jge
in
dec
push
jne
rcrl
rorb
fwait
data16
push
pushf
popa
ret
sub
push
mov
adc
inc
and
js
stc
fwait
repz
scas
iret
mov
jl
std
push
mov
xchg
insl
mov
jle
movsb
pop
mov
in
push
gs
ret
adc
add
ss
push
lods
add
out
pop
das
insl
cmp
icebp
xor
jnp
cmc
or
cli
jae
cltd
jl
xchg
sub
iret
adc
dec
push
fnstsw
hlt
fnstenv
xor
lods
cmp
mov
pop
push
pop
dec
lods
sbb
mov
in
jae
push
jnp
xchg
hlt
fs
add
or
test
mov
je
in
add
outsb
inc
and
sbb
shl
push
xchg
stc
in
cmp
lods
inc
fstpl
xchg
nop
sub
sbb
or
test
popf
pop
es
push
dec
out
xor
lret
scas
mov
push
das
fisttpl
sub
loop
xor
lret
sub
mov
mov
jo
sub
sub
mov
rcll
push
hlt
loopne
jb
and
leave
rcl
jns
gs
insl
pop
ja
cmpl
bound
sbb
insb
pop
push
lods
int3
jb
clc
adc
frstor
xchg
jne
push
and
cmpsb
sub
stos
xorl
mov
ret
cmpsb
push
scas
xchg
xchg
add
sysexit
add
dec
xor
cld
push
loopne
push
clc
orl
cmp
fstpt
sub
int3
mov
test
mov
push
mov
imul
data16
xchg
mov
gs
iret
adc
in
mov
or
call
sar
inc
ja
test
mov
fyl2x
xchg
rorb
popf
xor
adc
sti
xor
bound
jmp
and
xchg
and
inc
xchg
testl
pop
or
sti
xorl
or
push
mov
daa
jge
push
nop
inc
fsubs
push
gs
mov
sbb
dec
push
dec
lock
out
lret
xor
loopne
lcall
sbb
pop
sbb
push
dec
enter
cmpb
sub
lahf
or
outsl
bound
or
pop
mov
inc
daa
cmp
ss
ja
mov
sub
lahf
xchg
das
fisubs
inc
popa
aad
sub
xchg
xchg
icebp
push
cmp
popa
outsl
push
fs
fsubr
pop
sbb
and
imul
jl
pop
pop
stc
shl
gs
test
dec
add
push
lret
lcall
ret
lret
lods
sub
addr16
lods
in
in
lret
sbb
daa
icebp
sbb
in
jo
fwait
sub
pop
leave
rorb
jge
lock
xchg
in
cmp
dec
pop
adc
mov
xchg
add
pop
int3
ret
cmpsb
bswap
shr
and
pop
or
rcrl
mov
loop
dec
jmp
int
lods
out
push
pop
jl
mov
cwtl
fs
test
aaa
xchg
mov
adc
cmpsl
mov
adc
and
adc
loopne
adc
cmpsb
movb
cmpsb
mov
mov
pop
mov
mov
and
or
shll
orl
inc
mov
hlt
int
pop
fwait
ds
sub
das
cmp
cli
cs
mov
mov
test
sbb
dec
xor
lods
push
xchg
mov
or
nop
cmp
xor
out
out
test
lods
stc
fildl
xchg
popf
cmp
mov
lods
mov
mov
call
inc
adc
adc
scas
lock
cmc
fbld
cmp
roll
and
lods
dec
repz
loope
push
cmp
or
popf
popf
or
clc
movsl
std
into
lock
cltd
inc
xchg
and
push
fs
inc
xchg
pop
data16
inc
pop
aam
fldenv
es
les
cmp
sub
fsubl
fstpl
loope
insl
push
cmp
shrb
or
add
add
cmovne
gs
imul
pmuludq
xchg
movsl
sub
pmaxsw
mov
xor
mov
pop
push
and
ja
sti
addr16
xor
loopne
jmp
mov
out
hlt
repnz
mov
adc
xor
lea
jge
mov
mov
and
dec
lcall
mov
clc
shrl
sub
lea
mov
jp
pop
mov
imul
in
mov
and
dec
add
dec
movsl
mov
sbb
mov
out
mov
enter
jp
xchg
std
push
cli
pop
call
hlt
sti
and
scas
xor
or
mov
test
jnp
daa
mov
movsb
jge
enter
icebp
inc
mov
or
jp
sbb
sbb
jg
pop
outsb
push
xor
das
orb
pushf
xchg
cli
mov
and
shlb
dec
jne
inc
jp
mov
popa
sbb
xchg
xchg
dec
test
aas
rcll
inc
mov
sub
push
stc
iret
jge
pop
xchg
enter
lea
ljmp
test
ret
sub
cmpsb
ja
xchg
inc
adc
fdivl
les
movsb
aam
outsl
ds
repnz
adc
sahf
lods
test
or
hlt
jecxz
sub
out
dec
sbb
push
arpl
es
incl
xlat
mov
iret
in
cmpsb
or
adc
scas
insb
or
and
int
inc
push
jne
pop
ljmp
adc
dec
cmp
push
stos
jle
gs
mov
sub
js
jo
jl
sub
mov
add
fidivrs
stc
sbb
in
pop
jmp
adcb
push
xchg
xchg
jmp
pop
push
test
xchg
mov
ljmp
adcb
div
adc
cmp
or
or
pop
mov
adc
mov
jae
dec
mov
or
mov
les
add
dec
dec
sbb
adc
filds
popa
stos
jno
jbe
inc
cs
pop
mov
bswap
sbbb
mov
imul
mov
imul
into
jp
mov
sbb
or
and
or
js
out
fstp
mov
ja
inc
fs
scas
outsl
gs
xor
xor
ljmp
das
jnp
insb
call
fsubl
jae
clc
stc
mov
sub
cld
imul
movsl
or
xchg
mov
jmp
push
int
pusha
aas
dec
xor
jb
neg
popf
push
inc
add
inc
or
shrl
xchg
ds
icebp
and
xchg
cmc
pop
mov
push
mov
mov
xor
inc
in
and
shl
pop
jmp
pop
sbb
enter
fwait
lret
inc
sub
scas
dec
dec
sbb
jae
xor
and
scas
lret
fwait
mov
or
ds
dec
ret
lds
jnp
mov
mov
mov
cmp
xor
insl
pop
pop
ret
pushw
push
call
int
push
xchg
iret
unpcklps
and
mov
lahf
adc
lahf
sub
push
push
push
std
rorl
lods
or
shrb
xor
jge
push
rcl
xor
clc
je
ja
xor
lahf
jg
int
aad
outsl
popa
sub
add
push
hlt
movl
sbb
xor
cmp
mov
in
push
mov
pop
xchg
push
mov
aaa
outsl
or
sbb
fnstcw
mov
and
or
cmp
lret
mov
pop
adc
scas
adc
cmpsl
aas
shlb
adc
sub
jbe
imul
pop
pop
stc
cmp
pop
pop
movsl
out
pop
dec
adc
adc
xchg
stos
adc
daa
scas
aas
sub
dec
jp
adc
push
mov
pop
xchg
or
and
in
sbb
fisubs
cmp
inc
in
loop
pop
out
lahf
xchg
jmp
lcall
lahf
adcb
fwait
mov
jb
mov
inc
out
sub
frstor
and
jge
cmc
push
mov
pop
xor
pop
push
mov
movsb
sbb
dec
out
xor
pop
pop
movsb
aaa
std
push
icebp
pop
adc
lock
jecxz
aaa
mov
test
inc
sti
pusha
mov
dec
cmp
cmp
cmpb
xlat
inc
in
aam
pop
insb
or
out
xor
cmp
aam
es
ss
inc
test
test
mov
mov
gs
dec
stc
pop
or
in
mov
cmp
sahf
addb
loopne
enter
imul
jecxz
nop
test
std
ljmp
xchg
pop
inc
push
leave
imul
lret
dec
pop
sbb
sbb
arpl
sbb
enter
mov
loope
dec
in
or
and
jnp
mov
bound
mov
mov
inc
cli
inc
and
in
mov
int3
icebp
shrl
ret
and
mov
test
test
jecxz
adc
cs
insl
and
mov
xor
adc
push
jns
jb
jl
adc
jae
push
dec
dec
sbb
in
adc
fstpt
sub
adc
test
sarb
ss
push
test
and
rcl
je
xor
add
inc
cmp
enter
adc
inc
cmc
mov
out
cmp
sbb
test
lcall
or
sub
addr16
mov
and
adc
pop
pushf
jo
out
jae
fwait
and
adc
add
aas
out
xchg
xlat
insb
lcall
mov
push
or
sub
sbb
mov
and
test
or
fwait
pop
dec
pop
sti
sahf
lret
lahf
in
xchg
adcb
int3
xor
pushf
ss
mov
mov
aas
mov
or
pop
jp
das
push
ret
mov
inc
pushf
fldcw
jl
int3
nop
sbbb
popa
sahf
out
pop
adc
es
rcrl
and
pop
push
mov
roll
aad
shl
loopne
test
in
lods
push
roll
add
mov
mov
scas
pop
add
out
mov
rclb
xor
xchg
push
pop
push
adc
into
cmpsb
jo
cmp
fs
pop
xchg
sbb
lahf
xchg
mov
mov
idivb
lods
jno
mov
jnp
add
imul
push
sahf
popf
jne
sub
dec
sbb
push
lods
std
or
scas
mov
add
fsubrl
fdivs
dec
mov
push
jl
mov
cmp
inc
or
push
lea
xchg
mov
jo
cmp
cmpb
or
cmp
outsl
fstpl
popa
xchg
loope
mov
into
rcrl
mov
insl
imul
leave
dec
fistps
or
lahf
or
stc
or
pushf
mov
xchg
push
ret
fnstenv
call
sub
in
or
add
imul
or
cwtl
mov
xchg
mov
repnz
addb
mov
and
sbb
jl
sbb
push
icebp
icebp
mov
scas
mov
push
insb
repz
jno
pop
inc
mov
clc
iret
fwait
in
xchg
adc
insl
push
xchg
cmc
pop
adc
mov
push
jns
ror
sub
fstpl
push
lods
mov
jae
mov
xchg
fbstp
loopne
in
arpl
xor
mov
outsb
adc
daa
xchg
ja
cwtl
inc
cmpsl
shrl
test
sbb
fdivrl
pop
push
cs
dec
mov
cmpsb
mov
lahf
das
add
xlat
dec
subb
cli
adc
sbb
xor
hlt
movl
and
dec
adc
icebp
push
lret
mov
jg
mov
mov
inc
dec
inc
imul
push
xchg
les
mov
mov
push
sub
ret
jae
in
lea
adcb
inc
dec
pop
imul
cmp
outsl
mov
push
push
rcrl
in
sbb
adc
in
ss
push
enter
cmp
adc
sbb
xchg
fdivl
and
lods
and
icebp
cmc
ffree
aad
jo
negb
outsl
mov
inc
lock
loope
test
inc
xchg
sbb
std
iret
jb
xor
mov
sub
div
insl
int3
iret
mov
js
mov
cmp
test
mov
pop
cmp
sti
outsl
inc
out
add
xchg
out
les
mov
add
xchg
movsl
mov
jne
mov
or
jns
mov
scas
dec
mov
cwtl
xlat
test
pop
adcl
in
pusha
dec
inc
ja
inc
sub
and
push
inc
add
stos
push
leave
cmp
push
outsl
leave
andl
pop
in
mov
jo
ss
ret
mov
or
cmpsl
imul
data16
jns
nop
jmp
leave
pop
add
mov
loope
lahf
xchg
xchg
ret
leave
pop
jo
inc
aas
or
out
ss
xchg
rcl
popf
adc
cmpsb
cmp
pop
xlat
push
call
pushf
dec
xor
mov
stc
mov
push
hlt
xchg
sbb
mov
in
add
test
imul
mov
fnstenv
mov
addb
xor
shll
daa
inc
shrb
adc
mov
je
mov
cwtl
pushf
sub
mov
imul
lods
jbe
icebp
in
sub
aad
cmp
out
mov
out
fistps
mov
push
fists
pushf
popf
jmp
xchg
cmc
push
jne
mov
xor
pop
cli
dec
mov
push
pop
divb
adc
xchg
out
pop
sbb
lods
jns
dec
jbe
push
cmp
les
out
gs
pop
push
pushf
cwtl
shrl
in
inc
dec
pop
add
arpl
xchg
stos
aam
test
push
push
std
lods
call
int
push
fs
faddp
cmp
scas
pusha
cmp
es
aam
mov
mov
enter
push
push
test
lret
push
lret
inc
mov
xchg
adcl
sbb
sbb
das
adc
fsubrs
and
pop
stos
stos
cmp
dec
and
repz
ret
scas
loop
subb
subb
stc
hlt
mov
push
sbb
lahf
pushf
in
cmc
sbb
sahf
mov
pop
nop
lahf
mov
jge
fidivrl
arpl
push
int3
test
lcall
bound
enter
dec
leave
push
adc
popf
mov
sarb
xor
test
cmp
fldl
mov
and
cmc
push
dec
push
orl
idivl
cltd
outsb
cs
nop
add
pop
popa
jb
in
push
push
sub
dec
or
fdivrs
aas
mov
mov
jg
pop
inc
fs
pop
cmpsb
xor
loop
sbb
test
ljmp
lahf
movsb
sbb
sub
ficoml
loop
aam
movsb
popa
jg
not
repnz
sarb
jno
dec
push
mov
outsb
xor
fdiv
push
jmp
xor
xlat
and
ret
inc
pusha
pop
mov
cmpsb
jle
testb
out
mov
or
int3
mov
inc
repz
fisubrs
clc
push
mov
sub
add
out
sub
and
mov
and
gs
incb
aas
jl
int
push
inc
jae
push
mov
jae
lahf
repz
sbb
pusha
xchg
pop
lret
xchg
or
mov
sbb
sahf
pop
jecxz
xchg
jno
pop
xchg
xor
or
pop
mov
pop
jnp
subl
lock
inc
data16
roll
mov
pop
dec
xor
mov
xor
loopne
xorl
xor
jb
adcl
lcall
mov
jge
mov
lcall
push
test
jbe
in
xchg
and
or
dec
add
pop
in
out
sbb
pop
mov
sti
nop
sbb
jmp
sub
daa
pop
fimull
push
dec
inc
sbb
push
sbb
sbb
popl
dec
sbb
ljmp
xchg
inc
push
add
shrl
cld
sub
add
inc
or
pop
shll
pop
jo
sbb
mov
xor
xor
and
aaa
mov
sub
cli
sub
punpckldq
test
push
les
aas
out
popf
push
daa
jno
aad
outsl
outsb
aas
dec
mov
push
cmp
adc
mov
das
mov
rorl
cli
mov
jno
adc
iret
shll
sub
jecxz
cmc
insl
lock
mov
repz
mov
ficomps
mov
aad
jle
sub
xchg
jb
lods
je
call
sahf
inc
jns
push
cmpsb
loop
sub
cmp
push
outsl
ja
jnp
lcall
or
lock
je
xor
mov
pop
mov
or
xlat
cmp
stos
add
popa
xchg
jecxz
adc
and
mov
mov
and
cmc
test
inc
jbe
inc
and
testl
adc
sarl
fsts
xchg
shr
rcrl
enter
popa
inc
cmp
mov
cs
cld
loope
shrl
dec
dec
and
aas
rcll
pop
clc
adc
fstpt
sub
xchg
mov
cmpsl
dec
sti
adc
sub
xchg
sbb
jo
adc
cmp
pop
pop
cmp
sbbl
daa
aas
stos
mov
shll
enter
incb
cs
push
lret
jg
jb
jbe
lock
xchg
cmpsb
pop
stc
jo
mov
inc
ror
outsb
loop
rorb
cltd
cmpsl
jmp
lahf
xchg
and
shll
ret
cmpsb
cwtl
scas
jne
pop
stc
repnz
pop
movsl
decb
mov
outsl
stos
gs
sbb
xchg
xchg
cmp
cmp
into
jecxz
aas
xchg
outsb
push
push
jo
ja
push
shll
lcall
sarb
shrb
enter
xor
push
cmp
mov
fnstcw
in
or
xchg
aam
mov
daa
or
lds
mov
mov
or
ret
cmp
push
test
mov
and
cli
and
scas
cli
cli
outsb
or
inc
bound
into
scas
push
adc
das
mov
mov
or
xchg
inc
rorb
insl
cli
mov
adc
bound
and
popf
cli
movsl
lock
mov
enter
loop
int
lods
aam
insb
imul
sub
hlt
and
inc
xor
jno
sub
arpl
pushf
loope
sbbl
jp
cmp
gs
xor
inc
mov
aam
mov
data16
sarl
test
sbbl
cmp
xor
cmp
inc
lea
mov
hlt
mov
mov
std
add
inc
push
imul
sahf
adc
push
dec
in
sbb
mov
fcompl
xor
cmp
ret
icebp
inc
push
into
cmpsb
pushf
in
mov
cmc
loop
arpl
xlat
mov
outsl
stos
cmc
mov
pop
mov
pop
jnp
xchg
jne
loopne
push
sub
es
push
cmp
pop
outsb
lock
cmp
inc
sub
loopne
movl
push
adc
cld
xor
dec
push
mov
push
outsb
add
lret
inc
lret
mov
dec
insl
push
popa
test
pop
mov
mov
inc
or
ret
and
test
mov
mov
lcall
lret
mov
and
fisubs
shlb
cmp
xchg
add
push
sub
dec
or
and
js
pop
psubq
mov
je
jb
pop
in
shl
adc
adc
call
stc
lods
mov
add
sub
push
gs
sbb
cmp
sub
loopnew
and
or
sbb
or
add
out
nop
cli
cmc
repz
out
inc
mov
push
aas
push
jl
outsb
dec
sub
ljmp
aad
loope
adc
pop
bound
and
xor
jbe
and
frstor
cmp
dec
ljmp
cmp
sub
outsl
jae
cmp
jae
inc
lret
adc
xorl
cmp
pop
xchg
jl
mov
rcll
cwtl
lahf
sar
ja
test
and
outsb
xchg
das
dec
and
in
or
mov
jp
or
outsl
cmp
pop
lretw
aaa
int3
fs
pop
cwtl
test
shr
inc
leave
lock
std
pop
jae
iret
lods
mov
dec
mov
xor
insl
insb
arpl
mov
dec
shll
stc
lret
test
cmp
bound
mov
icebp
ja
loope
dec
or
jne
leave
mov
push
loope
shrl
jle
cmp
sub
pop
xchg
push
cmp
sbb
ret
das
hlt
cmp
mov
pop
xor
in
add
sub
push
or
adc
and
rolb
cmp
adc
xor
imul
push
cld
or
rorl
mov
adcb
dec
dec
sti
pop
aaa
data16
adc
lret
or
inc
test
bound
push
jmp
dec
dec
repnz
xchg
pusha
dec
sbb
shr
xchg
jns
insb
repz
incb
xchg
adc
dec
mov
mov
mov
pop
or
sbb
and
add
jo
mov
enter
adc
lods
jle
pop
xchg
cmp
dec
sub
mov
mov
mov
sbb
mov
vpunpckldq
mov
pushf
clc
nop
mov
or
inc
daa
addb
stos
nop
xor
mov
fcoms
cmovo
addr16
ss
adc
mov
call
pop
sbb
out
dec
sbb
jg
push
push
outsl
dec
ja
jno
adc
je
and
sbb
add
xor
dec
pushf
mov
not
mov
popf
xor
aaa
stos
jno
lods
cltd
hlt
mov
dec
les
bound
mov
jnp
pop
push
xor
ja
in
inc
mov
jmp
stc
dec
mov
push
fwait
jbe
loop
or
in
pop
dec
or
push
sub
das
cmpsl
xchg
mov
cld
sbb
stc
test
iret
mov
or
jnp
pop
lret
lcall
sbb
adc
jae
in
lret
push
ret
inc
jnp
sahf
fucom
call
clc
push
sub
jns
inc
xchg
stos
psubd
pop
aam
push
fcmovu
mov
cmpsl
rclb
imul
adc
loop
dec
cmpsb
pusha
sbb
popf
or
fsts
xchg
je
xchg
mov
lcall
push
mov
mul
pop
mov
jo
sbb
hlt
jno
gs
inc
dec
sahf
add
sub
cmpsb
sbb
add
sbb
sbb
xchg
icebp
mov
or
add
xchg
push
cmp
mov
and
ret
sahf
cmp
call
add
fwait
mov
rolb
test
movsl
cmp
lea
add
cmc
dec
push
inc
jno
add
fimuls
sarb
repz
adc
es
les
xorl
mov
cmp
and
loopne
xchg
enter
orb
loope,pt
fsubr
xor
fidivrs
jp
in
lahf
je
and
or
mov
inc
mov
push
mov
mov
jge
mov
add
push
rolb
mov
ljmp
stc
daa
aas
lea
in
inc
cmpsl
and
inc
cmpsb
imul
cmc
sbb
repz
cltd
jecxz
jns
jne
and
shr
inc
sub
and
leave
push
scas
sub
jg
cmp
daa
or
mov
insl
cmp
sub
xchg
aam
cmp
sbb
aaa
sub
cmovl
and
loop
mov
dec
and
jae
pop
adc
mov
or
pop
loopne
pop
sub
pushf
bswap
imul
into
xor
push
push
notb
adcb
fadds
jne
dec
fcompl
movsb
xchg
jae
xor
jg
iret
lods
insl
xchg
nop
data16
sbb
xchg
pop
std
jae
bt
jg
das
insl
dec
dec
rorb
loope
sub
addr16
sbbl
mov
adc
cltd
push
fs
bound
cmp
mov
sub
or
stc
imulb
fildll
pop
jno
leave
test
jnp
lcall
xor
je
xchg
mov
mov
push
out
cmc
in
sbb
inc
sbb
dec
popa
rolb
xor
stos
jg
out
leave
hlt
dec
jecxz
lret
or
imul
das
mov
in
out
pop
mov
mov
sbb
std
wrmsr
mov
mov
outsl
dec
aaa
cld
stos
mov
xchg
cld
popa
mov
mov
ss
mov
std
jl
push
xor
inc
gs
xchg
cmpsl
cmpsb
das
aaa
ret
fildl
sub
repnz
cmpsl
dec
icebp
jne
orb
lods
repz
mov
cmpsb
jp
inc
negl
inc
and
aad
stos
jnp
mov
push
icebp
fistl
movsb
std
cmp
lock
popl
sahf
jmp
mov
pop
pop
or
cmp
cli
sub
cltd
lcall
in
mov
fisttps
or
test
push
sub
jae
add
scas
jp
cmp
jns
sub
sbb
adc
insl
push
shlb
sbb
sbb
and
and
adcl
pop
xchg
call
lds
adc
not
cmp
cmpsb
add
jno
jg
inc
loopne
outsb
leave
int3
dec
jg
or
cwtl
imul
cmp
ds
xor
push
out
jl
inc
and
outsl
pop
inc
ret
es
mov
xchg
push
mov
sub
out
mov
rorl
push
insb
fwait
mov
ret
sti
fisubrs
cld
stos
gs
xchg
repz
cmp
pop
leave
jmp
popf
mov
mov
adc
xchg
mov
xlat
shl
mov
adc
adc
inc
pop
pop
aad
xchg
popf
shrb
xor
cmp
mov
lahf
out
inc
daa
add
push
xchg
inc
out
sub
cmp
pop
jae
add
enter
sti
shr
pop
iret
cmc
cmp
and
pop
cmp
pop
fisubl
push
jb
jnp
js
jns
cmp
jo
sarb
and
xchg
pushf
push
in
rcr
sbbl
sub
cmp
leave
andl
jge
testb
inc
rclb
imul
push
in
nop
dec
enter
and
cmpb
mov
cmpsb
xor
push
fdiv
adc
std
jnp
pop
mov
stc
fstps
cmpb
sbb
cmpsb
xor
push
add
arpl
test
xor
lods
fstpt
test
sbb
rorb
stos
xor
or
lret
mov
sub
fistps
sbb
cmc
mov
mov
or
inc
dec
les
xchg
pushf
adc
or
cli
mov
mull
mov
vpinsrw
jmp
mov
mov
sub
jmp
jge
xchg
push
lock
pop
xlat
push
xchg
dec
testb
pop
jle
scas
test
jl
xor
jp
mov
push
xor
jb
lds
cld
pop
test
fildl
jmp
insb
pusha
dec
sub
inc
cmp
xlat
jmp
adc
adc
daa
rorl
nop
push
xchg
mov
ss
mov
jb
aad
imul
addr16
daa
andl
add
cmpl
add
xchg
add
out
xchg
pop
js
inc
push
pop
outsb
into
mov
mov
ds
mov
sti
add
je
dec
int3
cmp
mov
xlat
subl
int
shrl
cld
cmp
cmp
fwait
movsb
mov
insb
in
sub
cmp
mov
dec
pop
mov
imul
aaa
shlb
jmp
add
cltd
wrmsr
xchg
aam
jae
loop
test
jecxz
xchg
insl
inc
sbb
fcoms
cmp
xchg
aaa
lcall
mov
popf
push
into
adc
leave
adc
into
mov
sbb
inc
jmp
lret
imull
pushf
lahf
scas
jmp
jmp
cli
std
cmp
dec
pop
roll
rolb
pop
sub
push
aas
pop
lret
inc
out
mov
addr16
test
aad
dec
repz
daa
ret
enter
push
xchg
jne
inc
mov
push
jo
push
icebp
cli
or
pop
shll
lret
xor
clc
adc
xchg
icebp
pop
movsb
enter
mov
repnz
sbb
rcll
mov
bnd
mov
and
out
jp
jge
lcall
or
push
mov
inc
cmc
in
push
and
rolb
sbb
add
xchg
sbb
pop
xchg
mov
aaa
rorb
addr16
out
dec
xchg
mov
xchg
inc
gs
sar
add
outsl
insb
cmp
rsqrtps
pop
push
dec
and
mov
push
adc
inc
call
mov
fs
sub
jle
jmp
cltd
mov
mov
movsl
in
lcall
cmc
xor
fldl
mov
imul
add
jns
xor
and
addl
push
and
mov
movsl
ljmp
add
mov
sti
add
mov
xlat
cmp
adc
xchg
dec
rorl
adc
push
shrl
mov
cmp
adc
popf
loope
shl
push
or
stos
sbb
mov
lock
xchg
cltd
and
sahf
movsl
cs
push
or
clc
shll
ret
and
push
mov
lods
dec
push
mov
push
nop
cmp
pause
aam
and
pushf
sbb
sbb
add
loope
ret
fsubr
add
sbb
pusha
lods
ficompl
leave
imul
mov
pop
mov
cmpsl
mov
insb
cmp
aad
sbb
fistpll
mov
loopne
xor
repnz
inc
test
cltd
pop
outsb
push
jnp
test
push
scas
int3
sub
add
mov
jmp
stos
push
adc
jecxz
ret
test
mov
mov
cwtl
int3
or
sbbl
xor
adc
cmpsb
mov
xchg
ret
sbb
mov
xchg
aaa
xchg
cmp
pusha
push
jo
add
mov
je
fld
cld
jo
push
aad
inc
outsl
push
mov
xor
inc
adc
push
sbb
pop
dec
push
mov
js
es
cld
test
cmp
cmp
jae
fstl
int
movb
push
xchg
mov
jmp
ret
mov
xor
sarb
arpl
int3
imulb
pop
ja
shr
hlt
xchg
pop
sti
data16
mov
lahf
daa
sahf
or
stos
divb
dec
mov
mov
jnp
inc
cmp
pop
pop
or
loopne
xor
add
rcl
das
test
daa
xchg
jne
cmp
push
insb
xchg
jbe
imull
push
lock
dec
dec
movsb
dec
add
cmp
push
sub
inc
sbb
jecxz
mov
int
jle
test
jle
and
mov
xor
adc
mov
sahf
adc
cmp
mov
inc
xchg
repnz
shrl
fmuls
jmp
sti
fs
add
fstpl
int3
rorb
sbb
roll
mov
shrb
push
add
out
sub
test
outsb
stos
push
sbb
lea
or
ljmp
mov
or
sbbb
sbb
test
mov
or
push
sub
addb
stos
push
mull
mov
stos
pop
incl
int3
fsts
punpckhbw
lds
outsb
fs
sub
imul
ljmp
xor
int
andb
aaa
lock
sti
pop
cmp
push
dec
stos
aaa
les
leave
enter
jnp
pop
insb
pop
jns
cmp
je
adc
jo
aaa
mov
sub
loop
faddl
int3
adc
jmp
inc
push
jle
jno
inc
cmpsb
inc
mov
xor
movsl
jo
mov
inc
fcmovb
iret
sub
mov
sbbl
out
inc
sub
sbb
cltd
mov
mov
cli
mov
xchg
xor
or
int3
repz
addr16
dec
inc
stos
js
inc
inc
jmp
mov
adc
out
movsl
push
subb
icebp
aaa
jo
aad
movsb
push
jge
and
nop
mov
test
scas
or
jae
dec
call
xchg
loope
push
xchg
mov
cltd
mov
bound
loopne
cld
and
xchg
pop
sahf
inc
and
sahf
data16
mov
je
arpl
mov
mov
lods
out
roll
jge
cmp
loop
inc
mov
std
insb
push
jne
cvtdq2ps
xchg
mov
xor
in
mov
shlb
das
repnz
mov
sbb
mov
sti
xchg
pop
ret
ljmp
jl
dec
aaa
mov
nop
clc
jge
icebp
xchg
adc
into
fwait
xor
mov
in
pop
pop
push
xchg
add
mov
xchg
leave
push
sarl
mov
fidivrs
rcr
cld
mov
popf
xchg
out
call
fcomp
stc
mov
rcrl
jnp
sub
dec
push
das
lahf
lds
mov
rcll
add
xchg
testb
out
mov
dec
cmpsl
xchg
jnp
insb
xchg
dec
sbb
mov
and
xlat
rolb
mov
push
daa
loopne
xor
push
jo
shl
mov
fldcw
icebp
cli
inc
dec
pusha
pop
cmp
std
inc
add
cmpsl
popf
popa
out
lcall
dec
xchg
push
icebp
ret
xchg
jbe
andb
jmp
int
mov
push
addr16
es
sbb
fbstp
lahf
test
call
fdivrs
adc
or
mov
sahf
pop
or
dec
push
addl
or
mov
push
bswap
and
outsl
pop
sbb
cs
push
rorb
popl
out
pusha
mov
iret
push
rcrb
pop
ret
jno
cmp
es
push
test
mov
fisttpl
adc
push
mov
arpl
int3
outsl
mov
rcrb
mov
sahf
dec
lock
mov
in
xchg
mov
xchg
sti
sbb
jg
xchg
and
lahf
rclb
adc
sub
cmpsl
xchg
push
lock
xchg
pop
mov
push
xchg
fldt
jo
cmp
pop
in
xchg
add
dec
cmp
std
sbb
fwait
jbe
pop
je
fdivs
or
inc
fcoms
jb
pop
mov
lods
push
dec
mov
push
add
jnp
ret
nop
lods
jp
jne
out
inc
lock
test
jbe
xor
loop
mov
pop
ret
je
xchg
xchg
test
jns
mov
lret
or
add
xor
fcmovnu
movb
mov
cmpsb
add
je
iret
sbb
dec
or
mov
iret
enter
sbb
or
push
mov
bound
mov
mov
pop
fisubs
sbb
insl
pop
int3
icebp
or
ret
ret
and
rcl
push
push
sbb
add
add
xor
and
adc
fs
aad
into
push
inc
xchg
cmpsb
mov
sub
out
int
pop
out
pushf
ret
xor
cmpsb
inc
push
cmp
xchg
enter
jns
mov
and
inc
sub
dec
sbb
jp
in
pop
xor
and
dec
cmp
push
mov
rclb
cmpb
pop
andb
pop
and
mov
dec
adcl
fistpl
jne
inc
jl
cmc
cmp
repnz
mov
pop
xchg
iret
movsb
lock
push
push
cld
and
test
das
pop
xchg
out
add
dec
test
cmp
pop
inc
pop
out
adc
inc
call
adc
fidivs
or
je
push
std
xchg
popa
add
stos
out
xor
xor
jns
mov
das
movsb
xchg
push
mov
mov
cs
addr16
std
decb
mov
addr16
gs
mov
and
imul
push
addl
or
out
mov
or
ret
test
sub
rorl
out
arpl
or
iret
or
out
mov
cmp
mulb
imul
adc
xchg
cwtl
sub
insl
adc
push
and
repnz
rol
gs
cld
cmc
push
pop
add
push
push
adc
fsubs
jae
fs
pop
fidivl
shl
jmp
scas
cmpsl
pop
loope
mov
adc
or
xor
push
pop
ds
push
push
push
add
pop
xor
scas
mulb
bound
flds
aam
xor
cwtl
sbb
add
xchg
int
outsb
enter
mov
pop
and
push
icebp
in
std
and
xchg
movsl
mov
enter
repnz
int
jno
jecxz
sbb
jmp
je
loop
test
sub
mov
andb
or
dec
iret
and
mov
mov
cmc
sub
jle
jne
decl
mov
dec
jnp
bound
ret
repnz
push
push
mov
idivl
mov
xor
dec
icebp
ds
cli
mov
push
xchg
adc
aas
out
pop
sbb
ffree
mov
dec
fmuls
sub
mov
and
aad
jge
sahf
stos
popa
dec
jecxz
adc
aaa
mov
inc
sub
ljmp
inc
out
jno
aam
movsl
into
jbe
iret
jbe
mov
rclb
je
leave
fstpt
pop
add
stos
push
xor
cmp
xchg
enter
sub
insb
mov
xchg
or
pop
in
inc
xor
xor
movsb
rolb
push
jmp
adc
dec
movsb
xchg
xor
loop
adc
xor
jno
pop
sbb
test
cmp
jp
pop
adc
les
xchg
xchg
jo
in
jge
lods
loopne
inc
aad
push
in
add
pop
mov
mov
test
lock
add
inc
test
in
scas
sub
push
test
stos
lcall
std
shr
mov
notb
dec
jp
push
loopne
xchg
mov
jle
xchg
mov
test
dec
sub
lods
mov
inc
ds
and
lods
scas
mov
mov
repz
stos
add
add
inc
addr16
rcrl
nop
mov
inc
jmp
aaa
mov
jnp
and
cwtl
pop
push
daa
loopne
sbb
rclb
scas
subl
clc
sub
flds
aad
sbb
mov
xchg
or
arpl
cmc
mov
ljmp
fistps
mov
sub
xchg
mov
lret
sar
dec
mov
dec
js
add
out
enter
mov
std
stos
ds
jg
imul
test
gs
sbb
mov
fwait
test
sahf
lea
divl
or
popa
mov
insl
mov
pushf
adc
push
xchg
pusha
lret
ret
shll
stc
dec
xor
or
outsl
sub
js
and
ss
call
mov
jo
dec
shlb
cltd
sub
std
mov
bound
fcoml
std
push
mov
leavew
lods
and
and
nop
repnz
or
mov
shr
or
pusha
lcall
ror
idivl
cmp
gs
ds
das
bswap
inc
mov
ret
subb
add
sub
jmp
std
enter
dec
aam
jns
rcl
mov
movsb
out
pushw
push
push
sti
bound
out
mov
xor
push
stos
outsb
add
mov
push
outsb
mov
in
add
les
mov
sbbb
xor
mov
adcb
cmp
jne
jnp
sbb
test
sbb
mov
stc
jbe
dec
aas
aam
cmc
mov
cmp
aad
mov
lds
or
pop
je
and
cmp
mov
mov
mov
xacquire
xchg
mov
enter
or
out
push
ret
and
dec
popa
orb
mov
ss
push
jmp
movsb
jle
cmp
or
cwtl
mov
sub
das
adc
loope
sub
out
mov
es
mov
addl
mov
nop
addr16
fdivs
and
or
test
jne
lods
insb
outsb
pop
mov
and
cmpsl
xchg
inc
fisttpll
ret
push
cmpsb
test
cmp
or
sarl
add
jmp
in
jp
sahf
andl
pushf
dec
fxch
pop
mov
mov
ljmp
dec
and
xchg
cmpsl
sub
pushw
aam
ss
lods
cmp
mov
pop
mov
jle
sub
adc
sub
mov
jne
adc
and
jns
loopne
mov
dec
push
js
add
sbb
cld
push
rorl
jmp
imul
int
push
into
dec
jl
sub
movsb
stos
dec
pop
fwait
enter
push
push
out
les
cmp
sbb
inc
xchg
cs
insb
jge
mov
lods
add
and
movsb
and
shl
xchg
xchg
xor
mov
lods
jb
je
or
stc
xchg
cltd
andb
lret
mov
jo
pop
loope
xchg
filds
jmp
push
push
mov
mov
push
into
and
popf
inc
stc
mov
xor
aaa
rolb
stos
inc
and
popf
sbbl
insb
push
push
inc
mov
push
imul
mov
fidivrs
cmp
ret
xchg
pop
push
mov
aaa
pop
pop
adc
push
and
cwtl
test
pop
sbb
inc
xchg
jne
outsb
outsl
js
fwait
std
xor
fcom
fimull
push
fidivrs
xchg
mov
lret
fldl
in
insl
pop
iret
cmp
inc
cmp
les
dec
mov
aas
xor
jnp
outsb
pop
xor
imulb
push
pusha
shrb
fimuls
mov
sub
mov
push
jmp
push
cmp
fldl
mov
mov
shl
cmp
sub
xor
es
lret
ffreep
add
into
test
lods
cmpsl
xor
mov
cs
repnz
pop
mov
xor
ficompl
adc
adc
add
into
stos
aam
cmp
push
push
aad
jae
xchg
std
xlat
push
adc
je
add
icebp
add
in
jae
insb
pop
push
repz
int3
dec
loope
mov
jb
dec
inc
xor
pop
jb
incl
and
sub
dec
mov
mov
or
nop
lret
dec
or
add
sbb
leave
fcoml
mov
mov
out
ds
push
repz
out
or
xor
cmp
roll
push
mov
add
add
push
jns
add
je
insl
lds
and
into
adc
lahf
sar
or
and
mov
push
rcr
aas
leave
xchg
popf
pop
mov
scas
xor
mov
nop
ds
and
scas
sti
inc
mov
sbbl
dec
out
inc
mov
sbb
mov
in
out
cs
aam
jge
fstps
arpl
adc
mov
dec
iret
lret
inc
sub
test
scas
pop
es
xchg
mov
les
aam
xchg
sub
push
std
js
js
mov
ja
sub
or
lea
pushf
jbe
push
fldcw
incb
mov
mov
fwait
and
arpl
iret
mov
dec
cmpsl
insb
insl
imul
imul
loope
mov
mov
jp
mov
xchg
dec
cld
scas
lods
ficoms
adc
pop
outsl
mov
sbbb
icebp
xor
xor
adc
jecxz
xchg
mov
jmp
cwtl
jecxz
repnz
mov
jecxz
imul
fldl2t
add
pop
push
jo
shrb
cmpsl
xor
lret
test
add
jb
adc
popf
inc
pop
mov
mov
imul
pop
roll
jge
push
pusha
dec
push
jg
mov
xor
fildll
mov
mulb
lea
std
sub
inc
mov
mov
popa
ror
rcr
dec
inc
cld
out
test
iret
jo
and
repnz
mov
adc
jg
mov
arpl
pop
dec
iret
fsubs
pop
arpl
arpl
cmp
inc
adc
inc
icebp
jecxz
aas
int3
ds
aaa
orl
les
cmc
lcall
xchg
adc
and
or
mov
dec
loope
ja
mov
adc
pusha
mov
js
pop
test
std
imul
fwait
jmp
mov
xchg
sti
rclb
inc
dec
inc
jo
push
fstpl
jle
mov
jmp
jmp
insb
jmp
scas
adc
pusha
subl
movb
fmuls
out
dec
mov
and
xor
pop
les
sbb
mov
pop
push
and
or
mov
push
xchg
dec
ret
repnz
push
adc
sbb
test
aas
cmp
jbe
mov
sti
out
andb
or
cmp
xchg
sbb
stos
les
and
push
or
stc
mov
clc
faddl
xchg
add
sbb
arpl
repnz
cs
cmp
dec
push
push
xchg
cwtl
imull
movsl
xor
rcrb
das
mov
jne
mov
test
xchg
cmp
les
pop
pop
nop
inc
in
mov
jb
xchg
test
cwtl
mov
inc
mov
mov
and
cmc
inc
cwtl
rorl
jl
pop
ljmp
adc
pop
dec
xchg
cmp
ret
jae
sahf
fadd
dec
mov
sbbb
push
pushf
fdivr
out
jnp
mov
repnz
or
int
out
les
sbb
std
lds
push
jmp
mov
subb
pusha
es
lcall
sbb
outsb
and
setp
lcall
in
jmp
cmp
push
lret
cmp
xchg
out
cmc
mov
jp
push
dec
jno
outsl
mov
push
xchg
add
sbb
lods
scas
sbb
jne
loop
inc
clc
cmp
gs
daa
xchg
push
aam
mov
dec
test
xchg
scas
ljmp
movsb
xchg
mov
add
mov
out
in
pop
lods
xorl
or
dec
call
sub
repz
pop
mov
stos
mov
inc
mov
es
add
out
in
adc
ret
mov
adc
out
pop
addr16
out
stos
repnz
stos
adc
in
mov
cld
xchg
rorb
lods
mov
pop
and
shll
xchg
in
xor
mov
fcomip
and
daa
jmp
pop
xor
pop
adc
lahf
sub
enter
aam
lahf
stos
pop
push
loope
sbb
mov
cld
loope
gs
incl
dec
rcr
rorl
or
nop
sbb
push
mov
lcall
in
jmp
movsb
mov
dec
push
mov
inc
mulb
inc
dec
xchg
mov
pop
xchg
std
fs
adc
mov
add
xchg
xchg
sub
mov
push
cli
shll
cli
stos
inc
ja
mov
cmpl
cmp
sbb
jns
mov
xlat
cmp
mov
add
cmp
mov
push
lds
bound
dec
push
adc
mov
cld
clc
stos
out
ja
hlt
lret
cli
add
out
mov
sti
sub
repz
push
mov
jge
rcll
test
aad
add
loope
lods
sbb
mov
pop
cmp
jbe
loop
repz
lock
int
pusha
dec
adc
sub
in
lds
pusha
int
sbb
or
fisttpl
sub
movsb
xor
and
fcomps
cmpsb
sub
mov
out
aaa
push
test
fwait
int
shrl
mov
cwtl
sbb
xchg
cmp
fstpt
test
ds
loopne
push
jbe
lea
movsl
setno
add
popa
repnz
cmp
push
int
sub
lahf
rorl
mov
jecxz
icebp
add
cmp
cltd
jl
add
and
lods
leave
in
mov
lock
or
jp
out
lods
movsbl
std
push
add
and
pop
out
sbb
ret
stos
mov
add
dec
loopne
or
shlb
ss
pop
int3
fdivp
adc
lahf
or
pop
sbb
adc
jns
dec
push
movsl
push
dec
cmpxchg8b
lret
push
mov
sub
xor
outsl
mov
mov
xchg
data16
and
data16
insb
lret
loopne
stos
jecxz
stc
dec
loope
sbb
or
jge
adc
fdivp
stos
pop
cmc
iret
insb
addr16
cs
adc
jo
rolb
gs
shlb
xchg
test
lret
inc
push
pop
jno
es
stos
push
call
pop
in
and
pop
pushf
mov
mov
dec
adc
js
ficoml
push
lods
inc
cmp
jo
dec
sbb
clc
adc
add
jo
cli
out
test
mov
jmp
cld
nop
fiaddl
pop
sahf
in
imul
and
pop
jl
adc
inc
xchg
pop
jmp
inc
mov
adc
aad
movsb
in
fcomip
fwait
repnz
fnstsw
and
jne
xchg
ret
arpl
inc
ja
or
push
jb
xchg
xchg
xor
stos
imulb
mov
sbb
lock
movsb
lods
fs
mov
shrb
dec
arpl
xchg
sbb
cmp
aaa
mov
or
sbb
push
sbb
cli
call
cmp
ds
mov
ret
and
lds
cmp
hlt
dec
test
mov
bound
popa
sub
xor
inc
dec
lods
jne
fwait
adc
int3
cmpsl
pusha
ljmp
cli
idivb
inc
cld
test
mov
cs
inc
das
out
call
iret
jns
or
add
sbb
or
add
add
adc
dec
inc
shll
cmp
lods
sub
les
push
or
mov
xor
mov
out
shufps
push
push
js
mov
inc
or
sub
cmc
push
sbb
fcoml
fistpl
daa
out
sub
gs
and
fs
push
and
and
and
ret
push
movsl
push
out
cli
sarb
ret
push
sub
and
lea
lds
sub
push
orb
call
filds
push
in
jge
jno
out
imul
ret
or
and
xor
in
cld
cmp
and
shrl
mov
adc
pop
je
es
and
jmp
or
mov
xchg
pushl
xchg
popf
push
loopne
cmp
sti
mov
fnsave
notl
pop
and
pop
push
sbb
and
lcall
and
aas
js
popf
scas
ds
jle
insl
push
add
mov
or
mov
ret
mov
push
mov
xchg
pop
movsb
shlb
bound
aam
lret
mov
dec
out
or
jns
ret
adc
xchg
imul
or
cmp
xchg
jl
push
jecxz
inc
add
js
mov
aad
sbb
stos
mov
or
dec
dec
jge
shrb
int3
rep
insb
push
je
pop
in
push
xor
gs
outsl
lahf
pushl
ficomps
cmp
add
push
xchg
loop
push
inc
pop
sbb
leave
inc
into
fisttpll
dec
rcrl
ss
out
aas
out
and
xlat
sbb
aam
lret
ja
inc
mov
ljmp
scas
mov
stos
hlt
out
cmp
inc
addr16
out
sbb
cli
int3
push
sbb
jge
or
xor
and
jnp
sub
out
sahf
aas
pop
add
mov
sbb
jge
cmp
and
fsts
jae
push
int
add
add
out
addr16
xchg
sub
cmp
out
in
stos
mov
adcl
lret
push
inc
lcall
xlat
pop
cld
into
push
inc
xchg
mov
in
sbb
pop
ret
inc
enter
push
lds
add
hlt
xor
xchg
pop
mov
roll
add
movsb
mov
jns
add
in
les
lock
mov
adc
pop
scas
clc
pop
imul
dec
mov
pop
arpl
mov
xchg
sbb
lcall
pop
xor
inc
js
popa
sbb
cmpsb
jno
xchg
mov
test
xchg
test
sub
mov
imul
mov
daa
stos
push
mov
outsl
aas
mov
loopne
push
dec
ds
rcr
inc
imul
fidivs
jp
mov
adc
and
lahf
cmpsb
int3
int
jns,pt
jno
cld
jecxz
cltd
jl
push
cmp
cmp
jno
out
or
lock
sar
xchg
fwait
or
and
scas
xor
xchg
and
sti
or
aas
pop
push
cs
sub
mov
or
mov
ret
in
je
add
and
jle
sub
sub
aas
das
jbe
rep
outsl
cwtl
and
push
adc
mov
sbb
shr
mov
stos
sbb
outsl
add
arpl
int3
or
mov
adc
inc
into
es
inc
or
int3
out
push
push
pop
rcrb
in
popa
mov
sbb
std
divl
shlb
and
dec
mov
push
or
repz
stos
pop
pusha
mov
shr
pop
jl
fstpt
push
rolb
loopne
inc
jnp
cmp
adc
dec
push
cmp
dec
mov
cmp
mov
mov
inc
jp
aas
cmp
sub
sbb
popf
mov
mov
in
les
fs
psubusb
in
xor
cmp
decb
jbe
push
in
mov
push
test
or
mov
push
mov
scas
lret
ss
cld
stc
lret
mov
add
push
inc
iret
std
dec
and
out
push
add
lds
inc
cmp
xor
maxps
mov
fimuls
fwait
enter
icebp
mov
jne
or
jmp
testl
arpl
loop
mov
outsl
imul
jb
sbb
adc
enter
int
out
mov
jg
lcall
mov
add
mov
mov
adc
out
inc
pop
push
sbb
mov
adc
dec
pop
xlat
ss
fisttpl
out
in
and
pop
in
fldt
push
inc
cmp
jecxz
xchg
mov
in
inc
lods
mov
outsl
add
dec
inc
cmp
sbbb
bound
push
xchg
enter
outsl
sbb
mov
inc
adc
cmp
ljmp
clc
push
and
cmp
cld
loope
dec
dec
jmp
pop
lds
jne
lahf
jecxz
andb
and
es
adc
call
and
jl
sub
mov
inc
lret
stos
aad
mov
mov
push
and
hlt
icebp
mov
mov
ss
out
fwait
xchg
xor
loope
push
int3
inc
pop
or
repz
movl
cmc
add
mov
filds
es
addl
test
les
das
jne
getsec
jb
push
ja
movl
inc
rorl
aam
dec
sub
int
sbb
ret
push
lret
xchg
data16
jp
inc
jns
add
inc
aad
ficompl
imul
dec
sahf
xor
and
enter
and
les
sbb
popa
cli
pusha
push
divl
mov
in
jle
cltd
mov
dec
jb
or
lahf
push
xorb
insb
or
iret
sub
jecxz
test
stc
rolb
adc
popf
jg
daa
cmp
cmp
push
je
pop
mov
xor
outsb
cs
roll
pop
xchg
adc
mov
loope
rcrl
ljmp
jne
pop
cmpsl
lret
in
pop
cmp
ss
mov
icebp
inc
scas
scas
dec
lods
repnz
adc
or
mov
push
jbe
cmp
rcll
jnp
test
adc
stc
xor
lods
test
rorb
cmp
fwait
in
jp
push
mov
sub
sbb
ljmp
mov
pop
push
fstps
in
clc
mov
nop
cs
dec
loop
fmull
in
mov
pop
das
cmp
loope
and
pop
test
adc
jle
cltd
lcall
cmp
popa
stos
loope
inc
mov
jmp
lret
jl
dec
adc
dec
out
ret
mov
pop
jns
push
fnstsw
outsl
mov
in
dec
sub
in
xorb
add
ret
mov
mov
cmp
dec
shll
aaa
push
mov
loopne
mov
push
add
sahf
dec
lock
lahf
push
mov
adc
or
std
test
mov
lret
ljmp
jle
pop
or
lods
movsb
shlb
cmp
pop
mov
int
rolb
fxch
fucom
mov
repnz
addr16
rcrb
xlat
fstps
xchg
fs
jbe
mov
insb
ficoml
rorl
adc
jge
out
push
jb
xchg
cmpsb
mov
ljmpw
lods
mov
outsb
cmpl
xchg
addr16
cmp
xchg
mov
test
clc
pop
sarb
mov
test
js
andl
jne
or
dec
imul
int
or
cmp
mov
insb
push
inc
inc
mov
jnp
inc
loop
add
loop
insb
mov
mov
adc
sub
cli
inc
jnp,pn
xor
fildll
lahf
sub
mov
push
adc
push
mov
mov
mov
push
test
popa
aad
jecxz
sub
jmp
and
xorl
aam
js
pcmpgtb
jmp
pop
cmp
in
in
mov
mov
sbb
imul
inc
pop
lock
cli
mov
mov
out
out
icebp
adc
or
and
mov
adc
xor
or
outsb
adc
sbb
test
jns
in
xor
arpl
mov
psubq
push
testl
inc
push
pop
test
mov
or
cmp
int3
add
imul
inc
mov
and
pop
call
fcmovbe
sub
movsl
sbb
sbb
fisttpl
shrb
mov
into
repnz
xchg
xlat
mov
test
and
cld
pusha
sbb
cmp
or
daa
mov
mov
test
push
fsub
xchg
ja
mov
into
mov
cwtl
lock
shl
and
sub
pop
inc
inc
xor
aam
xor
push
lods
insb
insb
and
popa
xchg
and
jne
sub
pop
sbb
les
and
cmp
ja
std
mov
cmp
insb
std
jp
ficompl
movb
ds
sub
and
jae
dec
arpl
aaa
clc
cmp
xchg
shl
xor
popf
movsl
add
or
imul
inc
mov
jns
inc
imul
mov
test
test
mov
ret
or
inc
mov
and
xchg
stc
mov
aas
xchg
cmp
jo
mov
lret
cs
stos
cmp
pop
pop
adc
mov
jg
outsb
pusha
jg
xchg
mov
popf
sahf
out
add
push
test
mov
cmpsl
and
pop
mov
loope
pop
idivb
imul
or
cmp
mov
dec
dec
mov
js
jns
idivl
sub
mov
inc
in
jo
cmpsl
jo
insb
and
and
insl
inc
xor
pushf
and
pusha
fwait
xor
sbb
in
or
cmpsb
icebp
inc
movsb
and
mov
and
test
mov
stos
and
jnp
mov
mov
jnp
xor
cli
les
ljmp
repnz
test
xor
inc
andl
mov
mov
scas
pop
sub
int3
pop
shlb
mov
adc
mov
mov
and
ja
pop
clc
in
jnp
mov
mov
mov
or
std
jg
mov
jl
inc
iret
decl
out
imul
or
dec
push
jb
mov
in
inc
mov
insb
jl
sarl
imul
out
xor
push
out
dec
je
mov
repz
push
mov
sbb
out
repz
mov
and
das
jo
xor
movl
mov
mov
iret
fdivs
ret
xchg
hlt
sub
xabort
imul
push
mov
movsl
sub
repnz
in
jmp
inc
push
int3
outsb
popa
popa
push
push
jg
dec
dec
stc
sbb
mov
out
jo
dec
popa
lcall
ret
mulb
mov
es
cmp
sbb
daa
sub
gs
sbb
jae
ja
push
insl
dec
icebp
cmp
daa
lcall
in
arpl
outsb
icebp
addr16
icebp
and
sub
mov
lods
repz
shlb
stos
xchg
ret
stos
jae
cmp
sub
push
stos
jb
repz
or
fistpll
xor
push
loop
adc
in
hlt
popf
fldl
cmp
leave
daa
sar
cmp
popf
aam
je,pn
fsubrs
xor
scas
mov
dec
jg
insl
pop
in
xlat
mov
dec
dec
or
pop
shlb
adc
inc
enter
gs
into
push
mov
xor
cmp
lds
mov
sub
cmp
jb
adc
push
adc
and
cmc
add
sbb
push
cmp
fs
jns
int
mov
and
push
imul
jae
fmull
jmp
js
push
les
jge
mov
ds
mov
out
nop
cmp
out
repnz
movl
ja
outsb
jp
push
scas
lods
imulb
pop
push
pop
js
add
push
sub
push
movb
sub
int
jne
repnz
ja
pop
inc
xchg
push
or
test
repnz
adc
mov
add
dec
lret
sub
add
ja
sub
dec
movsl
notb
test
loope
mov
js
inc
ja
jmp
mov
dec
jp
bound
fldenv
cli
or
arpl
sub
repz
repz
xchg
daa
lret
xchg
mov
jne
dec
adc
mov
mov
into
ret
scas
cld
adc
outsb
mov
mov
fiaddl
add
adc
lds
cmp
push
cltd
orl
mov
sbb
ds
push
cmp
xchg
inc
inc
enter
pop
pusha
clc
dec
push
xchg
adc
lcall
fdivrl
mov
xor
cmpl
inc
test
and
arpl
jo
pop
pusha
push
mov
mov
sub
jo
rolb
push
in
inc
fstpl
icebp
inc
popa
aas
jnp
in
sbb
pop
popf
fld
fcmovu
jmp
inc
sahf
aas
lods
imul
cmp
mov
and
rclb
sahf
xor
aam
addr16
jb
adc
mov
inc
adc
in
outsb
movsl
xlat
xor
add
pop
mov
jecxz
inc
xchg
out
loopne
xchg
sub
push
into
sbb
sahf
ljmp
iret
ret
fildl
dec
cmpsb
mov
or
adc
ja
xchg
or
std
sbb
pop
mov
xchg
filds
inc
stos
sbb
push
fldcw
mov
pushf
inc
test
mov
fdiv
inc
mov
ljmp
xchg
sub
sub
fcoms
stc
xchg
and
cmp
bound
mov
pop
xchg
mov
inc
insl
cld
jo
jae
ljmp
or
nop
lods
mov
cmp
jge
loope
aas
sbb
jae
cmp
jge
mov
sbbb
mov
pop
movsl
mov
jo
pop
ror
jecxz
adc
or
dec
sub
pop
subl
pop
add
jns
or
popa
mov
inc
negb
lods
cmp
mov
sbb
dec
inc
arpl
int
aad
pop
and
sbb
xor
in
popa
outsl
jo
stos
bound
sub
sarb
xor
inc
loopne
ficoms
or
aas
xchg
dec
adc
mov
cmp
jl
adc
or
mov
aam
xchg
rolb
adc
sbb
dec
call
and
jg
ja
cmp
push
mov
movl
aam
daa
negl
loop
fistpll
sbb
adc
adc
int3
divb
in
fdiv
xchg
fldcw
gs
pop
sub
adc
mov
lea
and
outsl
mov
adc
scas
xor
pop
mov
daa
ja
cmp
push
adc
jo
dec
lods
mov
sbb
cmp
aaa
movsb
aam
push
in
mov
orl
mov
dec
in
das
and
dec
xchg
test
push
shl
inc
repnz
clc
adc
pop
jmp
dec
scas
cmp
jp
add
pop
push
jns
mov
je
push
sarb
imul
pop
xchg
sub
add
add
jmp
imul
xchg
inc
ljmp
sbb
mov
xlat
or
fisttpll
insl
das
and
repz
mov
sub
push
movsl
dec
in
inc
dec
mov
lret
lods
aam
jg
adc
push
or
sbb
inc
mov
insl
lods
adcb
lods
aad
cmp
push
push
loop
mov
arpl
push
xlat
add
aad
jg
dec
ja
popa
mov
pop
mov
icebp
add
iret
mov
dec
adc
ljmp
xor
cmpsb
scas
pop
mov
jg
out
push
sbb
xchg
fwait
jmp
test
adc
inc
subb
in
sbb
fcmovne
cmp
sti
cmp
jl
ds
inc
cmpsb
arpl
adc
shl
sbb
push
lods
xor
push
filds
ret
xor
iret
int
stos
loope
pop
popa
jae
xchg
sbb
dec
jp
outsl
test
lea
jp
jl
push
pop
cmp
outsl
jo
idiv
rorl
jecxz
stos
into
xchg
xchg
dec
outsl
jbe
je
xchg
fcmovnu
pusha
bound
in
pushf
sub
mov
pop
sahf
dec
sbb
sub
and
mov
push
xlat
std
cmpsb
mov
ds
out
cwtl
xchg
pop
sbb
lea
mov
jo
lds
mov
fs
push
in
pop
lret
roll
mov
jecxz
add
insb
inc
cmp
gs
cs
fwait
ljmp
and
mov
bound
ret
adc
pop
pop
jae
push
lds
jne
ret
mov
loopne
addr16
inc
lcall
shrl
jmp
fisubrl
pusha
push
aaa
mov
dec
fstl
fcomip
or
and
es
dec
mov
push
gs
call
add
insl
and
test
bnd
pop
inc
mov
movsb
or
insb
mov
lret
mov
mov
push
sbb
fnstenv
mov
cmp
and
shlb
mov
fwait
cmp
mov
ds
xchg
adc
add
jp
pop
std
dec
repz
shlb
out
ret
test
ds
aad
inc
xchg
cmp
cwtl
adc
mov
or
adc
mov
shlb
nop
hlt
sub
test
rcll
add
leave
fldcw
xor
push
mov
dec
push
dec
sub
repnz
sahf
jns
dec
xor
sahf
test
idivb
outsl
in
insl
out
add
fiadds
cmpl
push
xchg
push
shll
mov
movsl
dec
repz
push
pop
lcall
adc
fcomps
in
outsb
lods
pop
mov
mov
dec
icebp
xchg
push
aaa
out
xchg
negl
in
push
dec
int
in
scas
inc
loopne
std
aam
fldenv
push
fwait
mov
sahf
inc
adc
data16
xchg
mov
jecxz
outsb
push
mov
ret
pusha
mov
adc
sbb
shr
addr16
outsb
enter
push
call
in
pop
jg
lahf
ds
adc
xchg
imul
push
add
xlat
sub
and
nop
adcb
leave
jo
or
test
adc
mov
test
lret
lret
mov
cmp
gs
cmpsb
out
rolb
xchg
or
cmp
xlat
in
and
sub
test
sbb
inc
jae
mov
inc
mov
xor
lods
sub
sub
sahf
adc
inc
addr16
sub
rcrl
or
jecxz
xorl
int
sbb
ja
jge
push
adc
repz
jns
xchg
and
iret
jno
push
dec
mov
mov
dec
test
testl
sub
and
imul
push
push
testl
fsubl
std
xchg
imul
push
pop
or
mov
test
int
xchg
mov
fs
out
mov
add
fcoml
or
in
paddb
pop
je
int3
in
mov
push
test
mov
mov
sbb
sbb
lcall
push
out
out
and
data16
int
mov
xor
psubusb
xor
hlt
and
sub
sbb
adc
dec
cltd
mov
insl
dec
adc
addr16
add
xlat
mov
rcrl
fisttps
cmp
dec
fnstcw
sub
test
mov
inc
or
pop
mov
sahf
jo
add
xchg
or
xor
decb
movsl
inc
lods
mov
arpl
arpl
dec
popf
cwtl
into
aam
ljmp
jle
ret
adc
mov
lock
dec
cld
cld
ret
pop
lock
iret
jp
fisttpl
call
push
pop
dec
xor
sbb
data16
movb
in
int
loopne
cld
syscall
inc
xchg
out
mov
add
test
inc
jmp
loopne
aad
mov
cmp
bound
scas
inc
mov
mov
cmc
in
and
push
dec
mov
idivl
enter
inc
dec
mov
aam
shr
mov
nop
mov
or
aam
xchg
loope
push
out
cmpsl
testl
sub
ds
sub
xchg
aas
aad
rcrl
jb
jle
mov
pcmpeqd
mov
xor
add
nop
dec
lcall
int3
dec
and
inc
pop
pop
sub
iret
loopne
fs
js
out
adc
inc
stos
int
ss
ret
dec
jg
sahf
and
jbe
out
aam
or
mov
xor
pop
das
daa
mov
ret
adc
cmp
aaa
pop
stos
repnz
dec
mov
hlt
pop
ss
lock
push
dec
pop
shrb
sub
lahf
in
fsubl
movsb
mov
mov
adc
jp
xchg
call
loop
js
insl
gs
cmp
mov
xchg
stos
in
test
xchg
jmp
push
lock
jge
clc
push
and
xchg
aad
icebp
cvtps2pi
fs
jp
jno
xchg
ss
sbb
inc
repz
jne
fwait
rcrb
fnsave
push
ss
addr16
and
rcrb
pop
shl
cwtl
adc
loope
cmp
and
xchg
mov
pop
movsb
scas
mov
xor
push
cmp
sub
dec
fidivrl
popa
jmp
pop
mov
jg
clc
dec
mov
sub
lds
xchg
out
scas
cmp
jb
add
pop
filds
leave
fistl
lret
push
or
inc
mov
dec
addb
cmp
fs
cmp
or
cld
hlt
scas
call
mull
scas
call
movsl
push
mov
xchg
jmp
fbld
xchg
out
adc
out
cmp
pop
mov
mov
je
data16
xor
lcall
cmp
loope
sub
test
dec
xorb
cmp
jno
frstor
div
or
hlt
pop
xor
std
rcr
jns
stos
imul
pushf
lcall
push
bswap
insl
imul
in
mov
adc
xor
in
add
es
orb
jg
adc
pushf
fwait
add
not
mov
adc
cmp
mov
push
stc
push
ret
jns
or
loopne
add
mov
adcl
nop
inc
cmp
inc
nop
and
jns
fistl
pushl
mov
pop
hlt
inc
dec
or
push
int
andb
imul
stc
push
int
xor
adc
cmp
fdivrs
sahf
daa
test
jp
pop
or
popa
test
inc
in
insl
or
mov
out
xor
dec
dec
jno
in
cmp
jae
js
ret
outsb
sub
roll
lahf
pop
loop
hlt
ds
jne
mov
jbe
push
addb
mov
je
pop
mov
test
repz
pop
jns
enter
cwtl
xchg
pop
psubd
adc
test
repnz
xchg
cli
pop
xchg
into
mov
mov
add
popf
inc
lcall
das
std
mov
or
mov
dec
xchg
sbb
jns
push
pop
lods
test
bound
ljmp
pop
and
push
jmp
pop
add
mov
jmp
rol
lret
cmpsb
out
sub
add
push
cmp
pusha
cmp
data16
sub
dec
out
jae
bound
pop
cmp
fiadds
stos
pusha
test
jg
gs
push
jle
in
lods
sub
sub
jno
leave
dec
out
sbb
push
adc
mov
test
movsb
pop
and
mov
cli
sar
icebp
insl
sti
inc
gs
inc
push
in
mov
std
pop
into
jb
aad
jno
inc
ret
sbb
lahf
lret
loopne
sub
dec
fs
adc
jae
mov
jg
arpl
cwtl
subl
inc
addr16
inc
dec
js
dec
leave
mov
cmp
mov
call
rorb
mov
packsswb
push
mov
push
adc
jle
enter
jecxz
sub
andb
push
and
lret
add
ret
pushf
mov
pushf
mov
psubb
and
sbb
mov
sub
and
jl
push
xchg
in
sti
push
cwtl
push
xor
xchg
imul
mov
jmp
insl
xchg
leave
aas
add
lods
icebp
sub
jnp
adc
mov
movsb
aaa
or
mov
or
stos
xor
add
xchg
mov
or
cmp
fs
sub
lds
xchg
pop
movsb
add
push
rcl
inc
jno
fistl
arpl
je
imul
push
mov
divb
cmpsl
or
mov
test
inc
ds
pop
sets
pop
xlat
fs
fcomp
mov
sahf
lods
mov
cmp
icebp
sahf
lock
mov
das
sbb
cmpsb
xchg
les
inc
daa
jl
xor
mov
in
popa
sub
pop
fimuls
xchg
xchg
mov
mov
mov
pop
jle
xchg
push
mov
imul
popf
lcall
arpl
or
mov
mov
test
sahf
jo
fwait
mov
mov
dec
inc
mov
ja
adc
cmp
je
add
lea
loopne
add
mov
in
outsl
iret
jecxz
jmp
jae
gs
mov
jle
pop
sub
insb
rol
mov
push
cmp
mov
pusha
and
dec
jne
push
subl
in
inc
and
lea
aam
cmp
pop
cmp
inc
subl
xchg
mov
dec
loope
jp
imul
cmp
mov
cs
ljmp
cli
and
cs
pop
call
and
imul
movsb
insb
jge
jl
xlat
push
outsl
mov
fcmovu
sahf
push
std
cmp
mov
fisubrs
les
inc
xchg
addr16
push
lock
les
enter
pop
jns,pn
cmc
inc
pop
js
push
add
pop
jne
xor
jo
lret
test
and
xchg
movsl
enter
bound
mov
sbbb
xor
das
aad
mov
push
insb
dec
subb
jle
adc
sub
push
icebp
push
push
cmpsb
adc
xchg
ljmp
mov
xchg
loope
pop
in
inc
or
mov
incl
and
ret
gs
xchg
push
mov
add
sub
cs
mov
jno
jp
sub
sbb
movsl
sub
int
enter
mov
cmp
xor
adc
hlt
push
adc
mov
adcb
adc
lea
sub
test
nop
or
fimuls
or
mov
sbbb
cmpb
pop
jge
lock
int3
mov
mov
cmp
ficomps
cmp
and
scas
dec
cmp
mov
jo
xchg
jno
loope
out
inc
pop
test
cmp
jmp
iret
in
call
into
jnp
test
int3
mov
subb
dec
call
aas
mov
push
fwait
cwtl
push
jg
loopne
fs
adc
xchg
cmp
out
loope
jne
fs
outsb
xchg
fmul
add
push
fidivs
es
lahf
adc
inc
ss
xor
iret
jle
stos
dec
fnsave
mov
sbb
mov
in
cmp
pop
mov
jae
popl
mov
and
cmp
jmp
call
push
xchg
sub
push
jl
out
sub
andb
mov
fwait
cmp
mov
lret
dec
les
pop
sub
add
ljmp
xor
pop
aad
fwait
shlb
fidivrl
sbb
pop
clc
cmp
int3
negl
mov
aas
push
arpl
stc
adc
add
cmpsl
call
xor
cwtl
stos
insl
mov
icebp
ja
mov
adc
mov
nop
push
adc
mov
sub
or
in
xor
push
mov
pop
push
out
fs
xchg
pop
mov
and
push
into
es
cwtl
aas
push
xor
sub
adc
lods
dec
loope
repnz
cmp
xor
imul
sbb
sbb
mov
pop
daa
push
xchg
mov
orb
mov
divb
adc
add
mov
into
cld
iret
ja
out
xor
inc
test
pop
aam
cmc
sbb
pop
xchg
jle
popa
xchg
pop
inc
lds
jl
test
daa
dec
movsb
cs
outsb
int3
push
mov
cmp
adc
fucomi
mov
mov
outsb
mov
sbb
and
movsl
mov
push
pushf
outsl
jle
jecxz
iret
dec
lea
cs
shrb
push
sub
xor
aas
or
mov
dec
xlat
stos
cmc
dec
adc
fbld
mov
jns
stc
in
iret
clc
lds
xchg
repnz
mov
shl
outsl
movsb
xor
std
cmc
xor
cmp
sub
jecxz
jo
and
int3
xor
lock
das
sbbl
pop
icebp
xor
xchg
call
scas
mov
sbb
lds
iret
and
shll
add
jnp
and
cmp
fiadds
pop
push
dec
and
dec
cmc
dec
out
enter
ss
pop
test
loope
lret
stos
sub
iret
mov
add
dec
and
iret
mov
hlt
push
into
dec
fdivl
movsl
into
sbb
test
xor
in
xlat
sbb
lock
imul
sbb
inc
cmp
test
or
jle
jne
sub
pusha
pop
adc
js
push
fucomi
movsl
mov
push
loopne
cmp
xor
pop
or
cmpsw
stc
jno
or
sub
mov
sbbl
inc
cmp
loopne
jecxz
fwait
pop
clc
addr16
leave
push
shll
shll
cltd
fisubl
xor
stos
mov
xchg
lahf
dec
mov
insb
jae
sbb
mov
in
push
sub
insl
imul
cmpsl
daa
lods
push
sub
push
adc
or
push
mov
inc
or
jl
adc
loopne
jnp
push
sub
jnp,pn
mov
or
inc
leave
mov
push
movsb
and
or
leave
cltd
jmp
push
adc
jle
or
cwtl
aad
or
xchg
lea
movsl
iret
or
daa
mov
lods
and
pop
xchg
xchg
stc
clc
xor
mov
and
icebp
lahf
fs
popa
dec
xor
add
movsl
cmp
repnz
push
outsb
sbb
jae
ds
lea
and
lahf
push
out
int
shll
or
test
lcall
push
outsl
arpl
mov
sti
cwtl
cli
in
inc
inc
xchg
std
sysenter
mov
clc
lods
fisubrl
add
add
iret
or
adc
outsb
ror
out
jb
push
lcall
wrmsr
add
das
fsubrs
pop
fwait
lcall
adc
addr16
in
ret
div
jg
mov
fnsave
adc
pop
fwait
loopne
scas
out
xchg
inc
lea
sub
mov
jmp
je
icebp
push
and
sbb
inc
in
rorb
push
cli
imul
iret
lret
cmpsb
std
or
mov
mov
fwait
dec
mov
lahf
dec
sub
mov
jb
mov
xchg
repz
aas
xchg
cmpsb
icebp
mov
unpcklps
jae
mov
pop
and
pop
push
jg
sbb
movsl
mov
ja
enter
xor
ljmp
pop
test
and
cmp
out
leave
daa
neg
inc
cmpsl
inc
jb,pn
mov
pop
or
repz
xchg
mov
jbe
xchg
mov
sub
lods
mov
cmp
stc
icebp
in
add
add
xchg
mov
or
push
test
cmp
push
jg
clc
inc
and
sbb
push
paddusb
in
outsb
adc
pushw
rorl
cld
xor
sbbl
pop
mov
cwtl
and
fstp
in
mov
scas
jo
shl
in
xchg
fsubrs
ret
repnz
mov
mov
fbld
inc
repz
xchg
pop
pop
cli
frstor
sti
test
mov
and
add
mov
push
int3
cmpsb
call
and
sti
sub
jmp
pop
xchg
sbb
xchg
nop
jo
mov
aaa
cmp
notb
loopne
jl
repnz
push
push
cltd
aas
mul
pop
xlat
xor
arpl
popa
out
cmpsl
xor
cld
pop
push
cmp
pushf
subb
adc
mov
mov
or
rcl
push
aad
jmp
js
lcall
repz
cmp
cmp
mov
aad
and
cmp
sub
in
int3
test
stos
mov
or
jle
stos
add
inc
mov
jle
clc
ja
test
movsb
push
mov
stos
jo
fldenv
orl
or
adc
adc
adc
xchg
pop
jb
xchg
push
outsb
imul
fs
int
outsb
lret
in
pusha
in
push
pop
sbb
xchg
push
call
mov
push
push
or
mov
dec
arpl
xor
mov
fucom
push
inc
ljmp
xchg
adc
out
add
xor
mov
bound
add
lock
mov
imul
jbe
xor
mov
mov
and
mov
jg
cltd
addl
mov
fidivl
mov
inc
mov
cwtl
xchg
or
xor
pop
lds
ja
outsb
add
inc
cmpl
popl
xor
push
aaa
pop
sbb
mov
xor
push
clc
cmp
mov
stos
aas
sbb
cmp
arpl
neg
outsl
jg
xchg
roll
orb
jge
fwait
neg
or
mov
adc
negb
push
inc
xorl
jl
xchg
jae
add
jl
xchg
push
mov
arpl
sbb
shrl
pop
lret
in
adc
jae
jae
lods
call
adc
and
add
stos
pusha
ds
mov
lock
cmp
stos
rorb
std
stc
int3
arpl
sbb
into
inc
dec
cmp
lods
bound
std
sub
mov
xor
or
bound
dec
pop
inc
popa
faddl
xchg
dec
idivl
pop
jle
jle
fsubl
or
orl
mov
mov
inc
or
aas
adc
adc
or
cld
enter
or
inc
lea
xchg
push
rclb
push
adcl
int
into
aam
push
xor
rcrb
jl
rclb
out
leave
movsb
adc
lea
mov
sub
notl
push
lcall
and
jmp
test
mov
jle
xlat
jge
leave
mov
cmp
mov
dec
xor
adc
test
mov
dec
push
pop
xchg
mov
test
int3
push
fwait
mov
filds
or
stos
push
mov
cmp
mov
mov
lcall
scas
adc
mov
pop
mov
cmp
sti
sub
ljmp
xchg
push
jge
sbb
xchg
orb
enter
inc
cmp
cmp
in
popa
sarb
cwtl
dec
notl
pop
mov
pop
imull
xchg
sarl
xorl
shr
lods
in
subb
int
mov
call
cli
pushf
std
in
adc
lret
dec
scas
or
cmp
sbb
ret
movsl
sbb
jecxz
cltd
mov
insl
sub
cmp
xchg
adc
fbstp
lods
push
push
push
xor
les
ret
and
xor
les
sub
lahf
add
mov
inc
or
inc
jae
push
std
mov
out
in
sti
test
adc
lods
add
lock
into
fidivrs
dec
fistpl
sarl
mov
sub
and
movhps
iret
adc
pushf
rcr
and
fadds
ret
jp
mov
mov
mov
enter
pop
test
mov
ret
inc
loop
pop
lds
fldenv
sahf
pop
mov
stos
dec
xor
subl
ss
and
in
cmp
mov
jo
into
lret
mov
mov
mov
mov
adc
xor
mov
sbb
pop
cmpsl
arpl
stos
sub
fcompl
inc
inc
jmp
les
ret
sub
sbb
sub
and
pushf
cmp
pop
push
popf
fldcw
pop
out
test
inc
jp
int3
xor
xchg
sub
mov
orl
jl
inc
insb
lcall
or
sti
dec
loope
and
pop
pop
orl
mov
cmp
popa
push
ret
jecxz
ret
xchg
mov
test
daa
jecxz
std
dec
stc
lds
roll
cli
jg
cltd
sbb
lea
mov
jo
lds
add
jmp
mov
call
mov
fs
jbe
call
lea
lahf
mov
pop
adc
clc
mov
push
xchg
dec
sub
sub
insl
test
or
fildl
aam
add
sub
scas
cwtl
mov
mov
xchg
lret
mov
xor
cmp
test
mov
hlt
out
xor
xchg
in
scas
ljmp
xlat
inc
push
clc
adc
cmc
addb
mov
cmc
xor
and
push
sbb
es
and
ds
pop
xor
mov
mov
lsl
stos
sahf
data16
bound
rcll
lods
dec
push
fstl
jg
fistpl
sbb
dec
add
shrl
or
adc
lods
mov
or
pusha
fbstp
or
addl
cmc
dec
cs
add
sbb
arpl
xchg
aam
adc
pop
sbb
fisubl
or
repnz
sub
push
pop
ror
ss
adcb
jmp
cmpsl
shll
stos
test
fcoms
pop
mov
mov
movb
ss
mov
push
mov
sub
and
push
jg
mov
jle
mov
cld
pop
fcmovbe
lods
testb
mov
and
cmp
add
scas
mull
xchg
ret
pop
ror
andb
nop
cwtl
mov
dec
cmp
mov
test
ljmp
mov
out
lcall
pop
inc
mov
mov
aad
cli
fisubs
cmpsb
in
hlt
sub
sub
subb
push
sub
test
scas
mov
add
mov
jns
ja
je
push
out
xor
imul
out
push
fisubl
movsl
out
or
xor
imul
ljmp
imul
lret
aad
into
fsubrs
push
and
mov
push
push
aaa
mov
mov
mov
es
push
ret
sbb
insl
and
mov
adc
sub
call
cmp
lods
push
mov
xchg
add
add
dec
dec
outsb
push
inc
sub
arpl
push
lods
loope
je
jo
mov
push
adc
inc
test
inc
xchg
xchg
pop
sub
xchg
ret
addl
jne
test
jns
adc
xor
jg
ja
divl
cmp
jno
xor
mov
mov
sub
in
jo
mov
fbstp
xchg
mov
insl
fcomps
jl
sbb
jno
scas
ret
or
je
and
jle
cld
aaa
ficoml
xlat
jns
outsl
inc
or
in
in
inc
mov
mov
inc
mov
stos
sub
roll
mov
and
imull
xchg
js
in
and
out
jbe
pop
or
int3
mov
xor
xor
mov
lcall
scas
xor
aad
sarb
jbe
sbb
cmc
jno
xor
sti
sub
cmp
cmp
add
ljmp
and
mov
push
sub
jle
push
mov
inc
imul
mov
dec
pop
add
ds
xor
js
pop
pop
shrb
push
sbb
rolb
stc
shll
and
popf
xor
scas
lock
int3
xchg
addb
push
push
stc
lret
push
and
mov
mov
sub
lock
sub
xchg
cltd
mov
cwtl
mov
xchg
cwtl
xchg
fcmovbe
insb
je
pop
inc
movsl
pop
sub
inc
out
dec
sub
push
sub
xchg
push
nop
ljmp
fisttpl
pop
test
lea
add
dec
sub
pop
ret
push
test
cli
pop
inc
call
jbe
repz
ror
fimuls
xor
adc
fcmovne
and
push
ljmp
cmp
push
cwtl
sbb
clc
inc
inc
je
jnp
pop
jno
xor
das
andb
pop
fstl
cmp
das
fstps
lret
outsl
mov
ficoms
push
sub
xor
pop
mov
add
adc
and
inc
pop
cli
cmp
nop
test
mov
sbb
jle
sahf
addb
or
nop
fwait
push
jae
mov
mov
and
aad
icebp
or
xchg
pop
ret
icebp
xchg
lods
xchg
jmp
jno
arpl
jle
jae
ret
lods
push
int3
mov
cmp
ss
pop
call
and
sub
stc
ret
and
push
sti
cli
iret
jnp
pop
in
cmpsb
out
lcall
or
mov
ret
xorb
roll
mov
lea
and
jmp
pop
jge
ret
xchg
roll
dec
nop
cmpsb
dec
push
fwait
inc
and
cmp
xchg
lds
loop
call
daa
out
pop
sbb
jnp
fimull
fisubl
lcall
inc
pushf
sub
insl
and
sub
push
orl
loop
jns
xor
ja
add
adc
dec
stos
in
xorb
inc
adc
aaa
bound
lods
dec
daa
out
lds
repz
sbb
push
rcr
push
ret
push
jbe
subb
loope
sbb
fmulp
add
cmc
inc
in
or
test
test
gs
mov
mov
mov
or
outsb
sub
mov
mov
std
dec
popl
out
mov
aam
inc
call
js
xchg
xchg
fdivrp
and
scas
jp
lcall
and
adc
shll
mov
jecxz
sahf
jnp
push
sbb
orb
test
mov
outsl
adc
dec
jnp
insb
test
andl
lods
test
jmp
mov
and
out
repnz
push
inc
cwtl
orl
push
xor
pop
fdivl
popa
push
scas
in
cmp
sbb
push
and
or
jecxz
cmpsl
inc
call
adc
mov
cs
sub
or
ficompl
push
sub
or
les
jne
ret
ret
or
jne
lea
fisttpl
test
int3
jmp
mov
mov
xor
mov
jg
jb
or
cmc
sbb
mov
out
out
mov
sbb
mov
pop
shl
and
pop
loope
gs
loope
sbbl
jne
int3
inc
les
xor
inc
fisubl
lods
fcmovu
mov
mov
dec
sbb
stos
xor
xchg
push
inc
adc
jge
loop
xchg
push
push
jmp
xchg
or
xchg
pop
dec
sbb
insl
out
jnp
shr
mov
pop
lods
adc
leave
rcpps
adc
subb
inc
in
test
add
inc
push
lods
scas
daa
adc
pop
bound
jb
xorb
xchg
jle
cmp
daa
xchg
mov
pushl
adc
fs
call
leave
movsb
aad
jno
pop
imul
int
jl
sti
fs
mov
lret
cmp
cmp
daa
stos
lods
push
mov
push
inc
xor
or
pop
ror
test
cmpsb
pop
sti
or
pusha
and
ljmp
dec
ror
rcrl
popa
stos
and
cmp
jmp
jne
mov
mov
sub
iret
test
and
mov
shr
jae
insl
sahf
movsb
ret
adc
sub
mov
xor
andl
inc
cmpsl
xor
hlt
xchg
gs
mov
fcmovu
dec
and
mov
inc
lea
adc
or
adc
orb
rcrl
cmp
mov
out
je
fcomps
sub
insl
fildl
xchg
jmp
pop
add
add
xor
mov
pop
lretw
dec
shrb
in
or
repnz
hlt
loop
scas
sub
loop
xlat
sarb
xchg
fbstp
scas
sub
mov
pextrw
imul
lock
sub
xchg
sbb
cmp
enter
sub
mov
divb
mov
mov
jecxz
ret
xor
jmp
shll
daa
mov
jno
fs
pushf
add
out
push
mov
mov
xor
push
loopne
lods
aas
test
inc
pushf
inc
nop
xor
int3
lret
dec
push
mov
sub
sbb
mov
jmp
jb
pop
fildll
movsb
xor
mov
xchg
mov
sahf
mov
mov
clc
rcr
push
out
xchg
cmp
sbb
in
dec
loope
out
sbb
ficoms
sub
mov
xchg
loope
jl
sub
or
int
movsb
cmp
jne
jle
xor
sbb
adcb
xchg
sub
xlat
shrl
cmc
fs
ror
push
jnp
in
mov
out
or
xchg
xlat
mov
push
pop
dec
insl
shr
movsl
xchg
mov
xchg
stos
fstl
mov
imul
repnz
inc
cmp
mov
mov
add
and
pop
mov
mov
out
jle
shrb
push
and
pop
xor
fs
mov
and
xchg
xchg
cmp
out
jmp
jbe
xor
or
rol
cltd
andl
and
xchg
fcomps
cmp
push
dec
cmp
sti
sahf
lds
lods
test
fnstsw
cmp
rcr
call
jo
cmp
dec
push
mov
dec
scas
mov
loope
xor
or
dec
cmp
push
pushf
int3
scas
push
in
sbb
cmpsb
repnz
dec
inc
mov
lods
sbb
out
push
sbb
cmpsl
lea
insb
sub
iret
mov
xor
jae
jg
inc
pop
pushf
xlat
xchg
sub
int3
sub
pusha
push
pop
call
fmull
adc
sahf
sbb
outsl
enter
ret
jnp
mov
mov
pop
cld
adc
daa
sbb
mov
xchg
jns
or
fnsave
pop
aaa
fisubrs
pminsw
dec
bound
gs
xchg
loope
in
xchg
pop
inc
movsb
leave
ret
test
ret
sub
pusha
inc
lock
cli
push
inc
cld
jecxz
test
jl
sbb
dec
fidivrs
add
or
icebp
insb
sub
pop
inc
aas
stc
fiadds
and
cmp
jbe
insb
jp
mov
std
jno
pop
cwtl
cmpb
mov
jmp
arpl
xchg
out
cld
sbb
bound
iret
es
sbb
or
inc
mov
push
cmc
aaa
out
push
scas
les
enter
sub
clc
repnz
fistpl
sbb
mov
inc
mov
jb
add
mov
imul
in
xor
adcl
shll
test
mov
popa
jnp
pusha
fwait
jne
fnsave
fidivs
dec
sub
in
add
pop
in
sub
mov
int
or
mov
adc
cmp
add
mov
mov
sahf
lahf
lahf
pop
add
jo
inc
imulb
pop
fs
dec
lds
and
insl
ljmp
sbb
sub
sbb
xor
jns
add
insb
mov
insb
sub
pop
out
ds
aas
lea
fldcw
stc
mov
ljmp
xchg
xchg
push
imull
jno
and
enter
push
out
out
shrl
push
loope
scas
mov
dec
scas
mov
adc
popa
cmp
lods
pop
and
jmp
fwait
arpl
sahf
push
jae
data16
ret
push
gs
xor
in
addr16
jle
loop
sub
jge
dec
iret
je
lcall
and
mov
dec
xor
add
das
dec
rclb
pop
ret
rcrb
test
xchg
dec
loop
fdivrl
shll
add
or
call
int
sahf
adcl
pop
lcall
daa
insl
stos
push
lods
inc
lods
cmp
aaa
lods
mov
mov
shlb
cmp
add
xchg
dec
ja
repnz
adcl
movsl
xor
out
divb
jmp
adcb
out
jnp
mov
jg
jnp
inc
and
xor
xchg
int3
or
mov
jo
pop
fsubrl
push
push
cmp
jns
fsubrs
frstor
sbb
or
lcall
aam
stos
xor
mov
rorl
cmpsb
mov
sbb
gs
mov
mov
push
ja
pushf
push
xor
arpl
mov
aas
adcb
aaa
pop
sti
sub
cli
sub
or
out
dec
lds
cld
xchg
sub
lahf
rcll
mov
fmuls
push
jmp
mov
push
dec
dec
cmp
idivb
js
xchg
adc
fsubs
mov
out
int
mov
pop
pusha
push
push
aam
mov
dec
push
jnp
pusha
mov
cmp
lret
in
fildll
cmp
mov
add
push
cmp
pop
dec
test
loope
xchg
repnz
cli
xor
mov
push
jo
in
mov
clc
and
jns
xor
cmp
aam
dec
pop
in
imul
and
add
cmpsb
andb
pop
push
cmp
pusha
aas
mov
sbb
outsb
cmp
sbb
or
sbb
push
pop
lahf
mov
pushf
or
notl
push
cmpsb
xor
rcrb
lret
insb
ret
mov
adc
jge
fcompl
sbb
pop
mov
inc
call
inc
add
das
cmpb
es
sti
xchg
or
dec
cmp
xor
adc
scas
xchg
fcom
push
in
sub
jge
push
loopne
add
subb
sbb
xchg
sbb
mov
dec
inc
add
jo
sub
les
pop
scas
inc
lret
or
jge
sbb
je
push
sub
inc
lds
mov
inc
xor
fwait
xchg
test
scas
xor
jae
sbb
shrl
loopne
jg
cld
sbb
mov
jp
loop
mov
xlat
xor
aaa
xor
cmp
in
daa
sbb
pushf
lods
pop
xor
and
pop
xchg
mov
in
jb
sub
lods
pop
jnp
je
push
imul
adc
cmp
and
adc
stos
shll
lcall
loope
lods
mov
pop
mov
mov
add
nop
add
mov
stos
insb
ds
adc
adcb
jne
xchg
push
sbb
out
cwtl
leave
lcall
inc
imull
or
lds
cmpb
mov
out
and
cli
dec
add
xor
push
cmp
inc
push
adc
xorl
xor
pop
arpl
out
mov
test
and
orps
loop
push
ret
xor
xor
aam
imul
fs
je
ds
inc
sub
aam
push
fcompl
mov
in
sub
lcall
mov
dec
cmp
xor
subl
pusha
inc
pop
mov
jmp
je
pop
aad
pop
cmp
into
inc
int3
pushf
add
lret
mov
mov
inc
cmp
rcrb
jbe
jne
ss
xchg
push
push
adc
fwait
rcr
xchg
or
sti
fs
xlat
mov
pop
loope
xchg
jno
or
and
pushf
bound
sbb
dec
pusha
push
xchg
test
pop
testb
inc
mov
or
int3
popf
lret
mov
sbb
jle
lea
ljmp
mov
jmp
stos
inc
jge
push
in
cmp
adc
scas
mov
or
arpl
or
daa
sub
and
xorb
movsb
fidivs
daa
inc
jge
pop
dec
dec
add
mov
mov
idivb
repnz
aad
mov
adc
dec
jl
ret
adc
imul
push
dec
pop
jo
sbb
or
ljmp
xorl
sub
dec
adc
push
addr16
push
jns
jmp
sub
jno
push
shrl
and
pop
into
adc
mov
fbld
push
add
sbb
cmpl
xor
mov
lea
lods
jle
mov
enter
sbb
test
imul
ud0
xchg
pop
xor
sub
shlb
aaa
movsb
push
cltd
mov
mov
orl
xor
lods
mov
mov
inc
xor
loope
call
ss
mov
arpl
sub
ds
push
arpl
inc
jl
pop
dec
js
aaa
cmc
arpl
fidivs
cmpsl
cmp
or
pop
add
dec
iret
data16
fsts
sti
pop
pusha
jl
jo
iret
in
sbb
xlat
pop
pushf
ds
in
movsb
aaa
popf
pushf
xchg
lock
int3
mov
ljmp
lods
stos
fimuls
gs
pop
jmp
xor
out
call
ljmp
lea
jne
mov
sbb
bound
in
dec
cmp
ja
movsl
or
mov
pop
or
mov
pop
les
out
jecxz
push
push
inc
adc
aas
jno
insb
or
add
xlat
push
push
repnz
xchg
push
cmpsb
add
pop
push
xor
push
mov
inc
pop
add
js
pminsw
mov
ss
loopne
dec
push
mov
jns
lds
sbb
ret
loopne
xor
jle
pop
dec
xchg
bound
testl
sub
dec
scas
sbb
loop
push
sub
xor
sbb
jbe
push
js
xchg
test
cltd
mov
addl
rcrl
cmp
xchg
bound
add
test
es
sbb
gs
cld
stc
push
iret
mov
or
dec
scas
xchg
test
add
sarl
not
loop
lcall
outsb
and
inc
xchg
inc
out
rcll
xchg
stc
fmuls
out
test
shll
sub
inc
add
in
xchg
sahf
xchg
out
je
in
insl
pop
push
ror
add
lcall
cmp
push
or
nop
xchg
in
aad
cmpsb
outsl
out
xor
int
push
lret
sbb
mov
inc
mov
jge
mov
fwait
dec
pusha
psubq
popl
xor
mov
enter
test
sbb
jg
pop
clc
adc
in
mov
popa
add
pop
fiadds
jae
fwait
sub
fsubs
jo
fucomp
jae
ret
ds
fcmovne
mov
ret
popa
popf
xchg
add
addr16
outsb
es
insb
or
xchg
or
lret
mov
outsl
lret
adc
andl
add
and
cld
jmp
xchg
cmpsl
push
leave
iret
out
inc
adc
stos
hlt
je
arpl
mov
mov
lahf
imul
pop
cmp
jp
add
inc
pop
stc
in
mov
mov
jbe
mov
sbb
sbb
mov
imul
call
dec
sub
push
ds
jo
test
cli
adc
cltd
pop
sub
rorb
insb
das
or
aaa
mov
enter
aad
cs
lahf
outsb
adc
sbbb
sahf
scas
stos
push
popa
jg
stos
pop
mov
mov
out
add
inc
in
sub
jp
cmpl
adc
mov
outsb
scas
dec
and
cmp
xchg
mov
fdivrl
push
add
sbb
dec
or
loope
adc
popf
idivl
mov
pop
add
inc
outsb
jp
lcall
in
ds
je
or
xchg
bound
xor
es
test
or
dec
lret
fdiv
lret
bound
adc
mov
iret
jnp
sbb
inc
mov
in
aam
mov
jo
cwtl
in
mov
mov
or
pmaddwd
push
mov
test
push
adc
in
mov
pop
ljmp
pop
out
icebp
stos
or
push
pop
pop
adc
lcall
xchg
mov
lds
jge
xchg
lret
or
push
fcomps
xor
dec
popa
sub
jmp
mov
in
imul
jecxz
fdivs
aad
ljmp
xor
fstps
inc
andl
xchg
es
jbe
cmpsl
cmc
add
xorl
cmp
xor
je
sub
lds
mov
je,pt
jns
push
stc
jae
jno
les
cmp
inc
dec
sub
leave
sbb
and
and
insl
xor
or
scas
mov
neg
xlat
rcll
enter
push
sbb
in
int3
shll
shl
push
xor
sahf
mov
cld
pop
cld
repz
std
cmp
cmc
sub
sbb
outsb
insb
sti
loop
loopne
inc
jns
ds
clc
cltd
in
mov
pop
jno
popf
inc
and
push
gs
out
mov
out
lods
fstpt
xchg
iret
idivl
xchg
ret
in
rcll
sub
icebp
arpl
xor
fcmovnb
test
loopne
incl
mov
push
repnz
mov
xor
and
cmc
mov
es
pop
sarb
lret
sbb
test
push
xor
test
sub
pop
insb
imul
xor
sub
inc
test
inc
mov
sbb
call
xor
into
test
adc
mov
and
daa
popa
add
push
mov
int3
inc
push
andl
sub
sbb
sahf
ret
mov
scas
xchg
mov
pop
pop
les
jo
loope
data16
fs
and
ds
sahf
xlat
xor
sahf
test
mov
pop
in
cmp
enter
shll
out
sub
test
sbb
add
arpl
pop
or
loopne
xor
fwait
adc
push
pop
xchg
sbb
sti
sub
add
lods
xor
cmpsl
fs
testl
inc
jae
pushf
loope
jns
mov
jp
decl
or
addr16
mov
mov
push
or
inc
cmpsl
pop
and
insl
js
inc
ds
push
test
cmp
or
mov
mov
cmp
cli
sbb
int
adc
sub
adcl
repnz
xor
cmpsl
sahf
jmp
push
inc
sub
and
popf
ljmp
xor
call
nop
mov
xor
push
les
rcl
mov
inc
aad
test
jbe
lods
mov
xor
add
movsl
cmp
roll
adc
pop
pop
fs
sub
je
add
inc
adc
sbb
ljmp
jp
test
xchg
or
xchg
mov
inc
xchg
in
sbb
pop
faddl
pop
mov
sbb
pop
sbb
out
mov
mov
daa
scas
sub
and
sahf
idivb
push
inc
xorl
inc
std
mov
cltd
test
mov
mov
int3
lock
xchg
hlt
mov
push
pushf
out
push
negl
xlat
cs
shll
rcrl
icebp
mov
lods
jg
inc
adc
movsb
push
push
push
into
jae
push
mov
ficoml
mov
enter
js
int3
adc
outsl
test
movsl
adc
mov
call
mov
lods
mov
xchg
cmp
cmp
inc
cmpl
lock
or
pop
leave
pushf
pop
daa
inc
pop
addr16
lds
jbe
sub
pop
jmp
or
les
inc
insb
loope
sar
push
mov
pop
stos
mov
cs
cs
aad
lret
nop
cwtl
test
shrb
sub
push
aaa
xchg
rcr
dec
adc
dec
jl
in
dec
mov
jno
adc
add
pop
add
dec
pop
add
loop
test
mov
or
movsl
rclb
rcr
mov
fdiv
jo
outsb
call
sti
jne
and
jecxz
sti
pop
xchg
cli
in
sbb
mov
popf
mov
xor
mov
arpl
mov
and
insl
fisttpl
ljmp
enter
or
lcall
int3
fsub
inc
mov
jo
mov
mov
or
mov
dec
and
push
loope
repz
cld
jle
movsl
fdivrs
loope
mov
adc
push
mov
jbe
adc
mov
and
sti
sub
stc
or
mov
sbb
dec
ja
sub
or
cmc
dec
jle
xor
mov
cmovp
mov
pop
adc
scas
push
test
and
add
pop
ss
loope
aas
test
fdivr
inc
cmp
push
xchg
faddl
pop
negl
cmp
jmp
xor
add
mov
lcall
test
mov
xor
pop
pop
into
push
cmp
lock
or
fcoml
jle
jmp
jbe
add
inc
lret
adc
xchg
push
inc
test
scas
and
mov
adc
pop
ret
mov
cltd
pushf
cmp
dec
inc
ja
fdivs
aas
jns
dec
sbb
inc
mov
adc
les
jge
xor
inc
notb
jmp
jb
or
xor
mov
xchg
in
test
mov
js
xchg
stos
mov
sub
push
pusha
das
subb
pop
loopne,pt
xchg
test
jle
sbb
std
cmpsb
ljmp
mov
mov
int3
mov
leave
sub
xor
mov
and
dec
mov
push
pusha
sbb
popa
and
mov
add
cmp
repz
bound
mov
repz
dec
cmp
jle
jp
mov
scas
jge
mov
jge
cli
jp
test
mov
popa
stc
mov
lea
cmc
inc
test
mov
inc
xor
shll
sbb
xchg
jmp
dec
sbb
dec
push
mov
sub
adc
ret
repz
loopne
vmovups
rcrl
pop
aam
stos
aam
stos
and
js
sub
xor
aas
push
mov
cmp
xor
and
sbb
dec
jecxz
daa
jp
notb
xchg
out
rorb
push
jbe
ja
aad
or
xchg
jnp
sarl
xchg
push
subb
xor
push
lcall
mov
cmp
sbb
cltd
jmp
cmc
rcrb
clc
imul
pop
sbb
adc
lods
cwtl
and
imull
mov
rcrl
popf
je
into
xlat
inc
test
loop
sbb
sub
testb
push
sub
mov
lods
inc
je
sbb
or
mov
mov
add
fimuls
dec
jne
jmp
pop
rorb
movsb
sub
and
loopne
mov
mov
inc
cmp
inc
mov
fcoms
sbb
sub
inc
scas
lahf
rcll
sub
push
cs
xor
pop
cmp
imul
push
and
mov
xor
rcl
sub
and
add
leave
scas
mov
insl
cwtl
in
notb
jno
das
in
mov
jo
adc
push
cmp
mov
aaa
arpl
or
ljmp
and
cltd
stc
ret
pop
lods
adc
pop
xor
jne
mov
xchg
sbb
aaa
mov
mov
or
es
push
push
stos
decl
cmp
fxch
pop
out
dec
das
push
jns
out
pushf
ljmp
push
cmp
in
test
jbe
inc
mov
add
movsl
fimuls
nop
call
and
pusha
loopne
test
fisubrl
push
sbb
jnp
jmp
dec
pop
int
and
dec
adc
loop
std
cmp
adc
daa
into
loope
push
sbb
outsb
test
aaa
lock
jo
dec
push
xchg
stos
jno
outsb
adc
or
aaa
jbe
add
pop
xor
lods
xchg
and
dec
dec
int3
mov
push
shrl
sub
shrl
push
mov
int3
mov
adc
in
xchg
jl
pop
mov
jmp
mov
cmpb
pop
fstl
leave
xor
pop
xor
je
stos
outsl
repnz
addr16
pop
xchg
cmpsl
rclb
fildl
cmovb
movsl
imul
jge
in
shr
mov
jmp
mov
xor
ja
jge
ret
sbb
xchg
mov
push
pop
and
sub
inc
xor
lods
in
cmpsl
scas
sub
mov
bound
jg
xor
in
mov
ss
mov
jmp
insl
movsb
notb
add
jp
dec
pop
pop
lods
add
mov
xchg
repz
and
mov
mov
es
add
stos
sub
into
dec
rsqrtps
push
pusha
lea
add
leave
clc
inc
dec
jle
popa
jg
dec
cwtl
mov
movsl
push
inc
inc
pop
and
cmp
add
cmp
add
loopne
add
mov
sbb
mov
mov
pusha
jmp
jns
xchg
push
inc
int
lret
xchg
addr16
xchg
add
jp
sbb
inc
cld
xor
loop
andb
push
divb
lret
cmp
cmp
add
cmp
das
jge
scas
adc
dec
lea
push
adc
adc
xchg
mov
dec
mov
mov
jne
call
pop
pushf
push
js
mov
cli
test
pop
cld
mov
mov
das
add
shlb
adc
ret
arpl
xchg
into
arpl
pop
in
int3
mov
xchg
jne
and
outsb
push
mov
xor
xor
jae
divl
mov
dec
scas
dec
or
jecxz
sub
add
jae
cld
xchg
xor
sub
xor
pop
insl
lret
dec
lret
jne
pop
xchg
data16
test
push
lock
xor
push
pop
outsl
das
cwtl
and
sbbl
and
dec
iret
adc
mov
leave
jle
scas
shll
out
int
cld
aad
ds
xor
popl
pop
cmp
pop
pop
lods
aad
inc
xor
leave
cmovl
xchg
imul
dec
xchg
add
popf
or
sbb
or
outsl
mov
repz
lret
mov
dec
inc
push
mov
test
xor
push
push
push
jns
jbe
mov
fstpl
imul
sbb
jno
rcrl
jb
mov
lahf
push
and
jecxz
xchg
fnsave
xorl
popf
test
and
mov
inc
out
inc
les
add
dec
adc
out
cmp
dec
sub
xchg
jl
aas
in
filds
icebp
sub
cmc
lock
sbb
rcrb
mov
dec
ficoms
jns
addr16
xchg
imul
leave
in
fisubrs
pop
dec
sti
subl
mov
adc
xor
and
stos
ret
inc
push
lds
add
rolb
daa
das
dec
imull
jle
cli
xchg
mov
sbb
ds
jns
shrb
outsl
xlat
mov
jmp
pop
scas
and
ret
pop
shl
mov
ret
inc
mov
or
fisubrl
jmp
push
std
pop
mov
aam
xor
mov
je
leave
mov
mov
dec
xor
cmp
in
cld
lods
inc
loope
pop
les
repnz
mov
jb
mov
xor
mov
int
add
mov
adc
pop
cmpsl
jle
xor
or
int
jp
data16
int
xor
xchg
pop
xor
test
in
or
lahf
cmp
fs
mov
outsl
or
nop
jae
xorl
jmp
mov
gs
sar
nop
rcr
sahf
les
cmp
inc
xchg
push
jge
test
add
and
movsl
lcall
in
sbb
mov
xchg
or
sub
fs
mov
lds
jns
push
dec
cmpsl
xorl
sti
pop
or
gs
jl
outsb
fsubs
call
jns
clc
in
outsb
xchg
inc
add
pushf
xchg
pop
inc
push
fcmovb
push
and
cld
subb
and
inc
lcall
add
lods
scas
fwait
in
popf
fst
subw
bound
and
outsl
push
inc
mov
in
outsl
pop
mov
pop
bound
push
sbb
pop
dec
sub
pop
test
mov
jecxz
push
cmpsl
mov
scas
xor
scas
negl
addb
outsl
inc
dec
cmp
dec
cs
in
js,pt
xor
pop
testb
sub
fstpt
dec
mov
push
mov
arpl
sub
fwait
idiv
lea
sahf
mov
mov
shl
cmp
inc
xor
push
outsl
les
or
mov
data16
push
pop
andl
and
test
fcmovnbe
movl
int
mov
out
or
nop
lea
xlat
push
mov
add
dec
dec
into
inc
mov
add
inc
jne
mov
lds
sbb
das
ja
mov
push
push
push
sbb
adc
test
xor
or
mov
inc
movsb
adc
xor
pusha
sbb
xchg
insb
xchg
and
sub
push
out
scas
dec
enter
sahf
push
dec
fdivrl
in
addr16
or
xor
adc
xchg
push
xchg
dec
aas
std
xor
test
add
pop
dec
pop
pop
cmpsl
test
scas
scas
sub
xchg
outsb
aas
inc
and
das
ds
daa
ret
push
jno
push
xor
mov
cmp
sub
cmpsb
jmp
js
xlat
lock
scas
push
xor
shlb
mov
jno
lods
sub
xor
mov
xchg
push
mov
lds
cwtl
jmp
pusha
rol
icebp
xchg
add
xchg
dec
push
rclb
setbe
int3
dec
or
pop
imul
fcmovnb
jl
std
std
shrb
xchg
pop
test
xchg
push
pop
stc
sub
dec
test
std
into
sbb
outsb
jl
aad
movsb
ja
cmovnp
cwtl
repnz
jo
sbb
mov
xchg
pop
push
rorl
mov
cld
ja
loop
lds
push
or
or
repnz
sti
inc
jle
pusha
push
ss
push
inc
icebp
mov
into
mov
xlat
outsl
scas
mov
pop
mov
mov
dec
int3
fwait
jae
push
push
leave
scas
add
cmp
sbb
adc
xchg
sbb
pop
repnz
sub
fidivl
icebp
xor
mov
ret
add
dec
mov
mov
pop
mov
sbb
sub
sbb
xchg
add
push
jmp
popf
ljmp
andb
scas
mov
jp
mov
mov
cltd
fnstenv
ss
cwtl
movsl
nop
xor
js
adc
adc
fdivr
dec
cmpsl
sub
sbb
roll
bound
push
test
jmp
scas
and
cmp
push
cmp
push
mov
cs
mov
loopne
adc
and
lret
adc
mov
mov
mov
adc
pusha
mov
lret
push
mov
or
fistl
fsts
loope
flds
test
out
out
push
into
pop
xorb
sbb
jb
mov
leave
and
pop
sbb
jne
push
ret
popa
pusha
loopne
mov
stc
fs
or
adc
mov
and
add
movsl
sub
push
insb
cmp
or
lret
std
leave
jns
dec
fsubs
sbb
xor
add
cmc
iret
icebp
cmp
clc
mov
cli
into
stc
add
fistpl
add
sbb
jae
jo
mov
dec
push
scas
xchg
and
add
jp
jge
ja
cmc
das
hlt
push
adcl
inc
jnp
ds
dec
insl
mov
or
aad
test
pop
cwtl
mov
cmp
xor
nop
push
push
mov
scas
test
lea
adc
push
mov
lock
iret
in
sbb
xchg
dec
sahf
dec
dec
and
adcb
int
push
data16
gs
shrb
ss
daa
adc
popa
cld
psrld
jns
push
sbb
add
arpl
xchg
into
add
mov
fs
or
cmp
xchg
xor
mov
mov
or
cltd
lcall
inc
fnstenv
inc
mov
jns
push
clc
aaa
inc
mov
fimull
and
loop
out
stos
adc
incl
dec
fsubl
ret
jge
fs
and
daa
pop
dec
pop
xchg
sub
jmp
bound
sbb
and
mov
in
loopne
dec
nop
push
cltd
cli
push
sub
sbb
sbb
jp
sti
cmc
adc
or
cld
fs
or
xchg
pop
pop
cmp
jl
mov
adc
xor
std
xchg
cltd
sbb
pop
arpl
sub
mov
xor
add
out
cmp
std
in
sub
xor
or
mov
fs
ja
pop
loope
sbb
loop
dec
jmp
leave
nop
outsl
add
pop
or
stc
mov
xchg
lods
cltd
mov
pop
dec
gs
mov
mov
cmpsb
push
hlt
or
jle
xor
pop
inc
imul
add
pop
out
jae
dec
xor
push
inc
jbe
out
add
sub
pop
ss
xchg
push
mov
repz
sub
insb
iret
sbb
adc
js
lcall
xchg
adc
jl
sub
cmc
movsl
pop
aas
cli
push
inc
sbb
addb
and
inc
out
outsl
outsb
cmp
lret
jno
dec
pop
dec
mov
fisubrs
inc
add
lods
je
lcall
call
loop
test
inc
jne
mov
mov
push
pop
or
jmp
insl
mov
add
frstor
icebp
sarb
mov
cmp
lcall
adc
cmp
in
pop
insb
hlt
out
lods
xchg
xor
cmpsb
ret
stos
in
sbb
pop
mov
pop
mov
cmp
subl
push
sub
adc
fisubl
aam
and
hlt
aad
mov
mov
inc
pop
push
pop
bound
push
or
cmc
mov
mov
mov
movsb
lahf
push
test
xchg
test
ret
fcmovnbe
aam
mov
pop
cmp
push
bound
movsl
pop
jmp
sbb
icebp
lahf
fs
test
popa
xchg
adc
pop
sub
addr16
dec
push
add
jmp
xor
scas
int
outsb
orb
out
jle
insl
sahf
mov
xchg
mov
pop
add
jb
mov
pop
stos
mov
sbb
arpl
jns
add
pop
jb
lret
xor
outsl
ljmp
mov
or
and
pop
sub
pop
push
bound
test
outsb
fildl
movsb
mov
test
push
aaa
movsl
jo
je
xchg
arpl
pop
cmp
mov
jecxz
and
or
adc
push
lcall
and
and
cltd
mov
xchg
stc
aaa
dec
adc
jecxz
sub
sbb
out
insl
inc
in
mov
mov
je
jmp
and
int
nop
pop
repnz
mov
or
adc
ljmp
scas
or
test
fldenv
daa
movsl
jp
aas
les
jecxz
xor
arpl
cmpsb
add
pop
dec
mov
imul
inc
xchg
xorl
mov
xlat
insl
icebp
xchg
jp
je
mov
lcall
imul
sbb
xor
push
xchg
mov
inc
cltd
daa
inc
pusha
xchg
fldcw
pop
dec
leave
inc
and
stos
imul
std
sub
push
sub
fisubrl
sti
test
ret
cmp
xor
movsl
fistpll
mov
add
fs
out
pop
int
and
mov
insb
mov
sbb
jmp
and
dec
sbb
stc
xchg
inc
dec
je
stc
fcompl
jp
sbb
cmp
roll
pop
cld
nop
int
adc
std
dec
cmp
jns
add
sbb
enter
dec
idivb
mov
pop
or
fisubl
lds
sub
cmpsb
mov
jne
xlat
stos
popf
pushf
popf
dec
pusha
test
ret
test
xor
pop
jne
pusha
add
sub
xor
fnstsw
jle
icebp
adc
filds
or
mov
aad
insb
dec
push
cmp
int3
xchg
push
add
fdivs
sub
fs
out
adc
fmul
mov
les
or
sbb
fidivl
inc
jl
inc
sub
fsubs
mov
push
and
je
push
repnz
leave
test
dec
das
xchg
pop
sahf
cwtl
dec
loop
out
loope
mov
inc
mov
shlb
inc
arpl
insl
dec
aad
lea
scas
xchg
mov
jg
enter
mov
mov
push
mov
push
xchg
add
xchg
mov
xchg
and
xchg
mov
iret
jbe
inc
ss
mov
movsl
fs
mov
xlat
sti
xor
cmpsl
push
movsb
xor
mov
icebp
sbb
cmp
dec
dec
xorb
insl
push
jl
xchg
filds
mov
ja
pop
push
sbb
xlat
scas
mov
rorl
gs
inc
xchg
xchg
ficoms
mov
lds
sbb
jne
inc
add
test
int3
shlb
mov
push
dec
fcompl
repnz
test
icebp
fwait
data16
dec
sbb
and
lds
out
push
enter
sbb
inc
loopw
sbb
adc
out
push
cltd
jbe
enter
rcrl
or
shr
pop
insb
fwait
jns
and
dec
pop
aam
jb
pusha
fwait
mov
fldcw
mov
data16
ljmp
test
imul
add
daa
lock
push
mov
imul
ficomps
daa
add
lret
add
cltd
or
out
push
call
push
es
fs
popf
jp
cmpsb
in
loop
dec
mov
jae
xchg
cmp
sarl
pop
pusha
shlb
mov
mov
notl
and
fprem
stos
adcl
loopne
aas
push
cltd
push
stos
iret
mov
call
clc
push
jle
out
cmpsb
xor
cmpsb
adc
loopne
pop
in
icebp
pop
xchg
dec
popf
inc
frstor
push
jb
mov
es
mov
out
inc
ss
int3
dec
mov
in
pushf
sub
pop
add
stc
xor
cmp
pop
jl
push
movsb
ja
sbb
in
mov
int
jmp
ja
inc
or
fcoml
jmp
xor
stos
jge
mov
out
mov
push
or
popa
jb
inc
pusha
jecxz
arpl
test
pop
xchg
ret
dec
xchg
cmp
sub
mov
xorb
jge
pop
jns
push
loopne
das
shl
mov
mov
shll
jg
andb
fstpl
cmpsb
add
or
push
mov
pop
or
cld
mov
insb
cli
mov
push
scas
in
pop
lea
clc
jb
cld
cmp
dec
stc
out
jecxz
mov
push
or
cmp
das
icebp
and
fcomp
int3
mov
pop
fildll
cmp
adc
inc
fwait
adc
scas
sti
lods
scas
pop
nop
out
arpl
dec
lea
imul
adc
mov
mov
outsb
out
push
fistpll
or
jae
dec
sub
shlb
adc
mov
aad
pop
ja
mov
das
jnp
and
sub
push
in
mov
fadds
sub
or
add
push
enter
pop
mov
sbb
insl
adc
add
fucomip
xchg
or
cmpl
sbb
rolb
inc
mov
sub
mov
sti
cmp
sub
push
popa
sbb
inc
fisttpl
lcall
js
iret
lret
dec
pop
fsubrl
cmpsl
divl
jp
pop
test
loopne
lea
xchg
add
popf
stos
roll
sar
or
shll
xchg
imul
std
popf
mov
aaa
jne
mov
orl
loope
xchg
push
pop
rolb
and
dec
and
xor
in
xchg
inc
push
push
fsub
es
jo
out
dec
xchg
fidivl
ret
mov
pop
mov
ljmp
xchg
adc
adc
mov
mov
xchg
cmpl
iret
mov
outsb
hlt
pop
jo
cmp
or
fwait
in
sub
mov
ret
mov
pop
ret
pop
aad
aad
jbe
lds
inc
std
fnsave
fsubrl
gs
add
test
insl
xor
rorl
adc
in
out
fcomi
pop
xchg
andl
mov
std
cmp
ficoml
mov
xlat
push
pop
sbbl
cmp
ret
and
stc
insl
adc
mov
filds
xchg
shll
das
jle
repz
adc
out
jo
outsb
lods
mov
dec
cmp
out
js
lret
cmp
adc
adc
aad
jo
xor
daa
nop
jmp
fstl
xlat
fs
mov
pop
mov
mov
cmp
cmp
mov
and
or
xchg
setne
mov
adc
ret
mov
cmc
sub
dec
inc
data16
in
lret
xor
jmp
push
mov
cmpsb
sbb
in
jecxz
lock
push
push
sbb
xchg
shlb
stc
jns
inc
mov
and
jmp
adc
or
scas
adc
mov
xlat
stos
data16
jbe
jo
mov
push
fdivp
sbb
xor
je
inc
xchg
in
add
in
int
mov
mov
and
cli
sub
aaa
dec
dec
es
cmp
xor
test
rcr
mov
lret
femms
add
popa
es
arpl
dec
aam
jmp
inc
add
sub
aas
test
adc
pushl
cmp
or
add
mov
pop
sahf
add
push
jo
int3
lods
daa
push
addl
pusha
std
jno
mov
adc
xor
imul
pop
jns
push
and
test
fdivrp
pop
xor
ret
les
arpl
sub
mov
push
push
cmp
scas
xlat
mov
shrb
into
call
nop
mov
inc
mov
mov
loopne
stc
push
add
dec
outsb
lret
mov
in
inc
lds
insl
cmpsb
aaa
mov
adc
das
pusha
inc
xlat
dec
or
dec
mov
int
jns
adc
fs
mov
fdivs
cmp
ret
inc
xchg
gs
adc
int
and
and
dec
shl
ret
dec
idivb
mov
testl
adc
lods
xchg
lds
xor
iret
insl
fistpl
mov
or
jb
mov
push
and
sbbb
rcrb
sbb
and
adc
mov
sahf
inc
mull
xchg
mov
add
and
aas
jl
cld
movsb
popf
mov
ret
jnp
in
push
jnp
out
sti
mov
dec
add
inc
mov
addr16
mov
mov
loopne
or
out
jb
lcall
daa
pop
xor
lods
inc
push
adc
lea
or
paddw
ljmp
or
in
cmpb
adc
mov
pop
jb
popf
inc
pop
addl
jnp
pop
xor
pop
cmp
testl
or
scas
loopne
inc
fdivrs
in
fmull
ud0
cmpsb
mov
popa
jno
mov
arpl
subb
mov
adc
and
and
cmp
enter
add
call
stos
fwait
leave
das
push
and
jecxz
out
fimuls
sbb
lcall
sbb
movsb
andl
xchg
cmpl
cmp
lea
aam
aad
shll
pop
or
add
push
mov
aaa
cmp
xlat
movsb
mov
ja
and
fnstsw
push
push
adc
sub
and
insb
jle
mov
mov
test
iret
cmpsl
je
imul
cmp
fcomi
mov
into
cwtl
dec
dec
mov
lods
sarb
jle
movsl
push
push
push
fxch
cmp
or
cltd
in
inc
jae
je
cmp
sarb
hlt
inc
icebp
divl
lods
xchg
mov
cwtl
in
mov
pusha
jp
xchg
adc
cmp
shlb
pop
inc
adc
lcall
std
adc
mov
inc
mov
xchg
or
sub
cs
mov
cmp
jns
scas
iret
ja
xor
push
dec
aaa
leave
xor
add
mov
push
mov
dec
xchg
pop
enter
daa
adc
pop
dec
mov
insl
cmp
pop
fwait
or
xchg
movsl
sbb
mov
in
fcoml
ret
mov
inc
lcall
sbb
mov
shlb
sub
ret
push
flds
lods
enter
decb
jbe
inc
es
xchg
ss
pop
inc
call
mov
dec
sub
inc
mov
pop
pop
loopne
mov
xor
jns
rcl
pop
mov
or
mov
mov
out
addr16
xor
dec
sbb
push
in
xchg
adcl
mov
jns
int3
jnp
xchg
xor
and
jno
sarb
add
daa
push
inc
in
push
testl
and
push
lcall
test
inc
addb
sbb
dec
fisttps
sub
int3
test
xchg
lret
clc
out
cs
xchg
mov
stos
test
jge
stc
in
aaa
popf
mov
jg
jp
fs
pop
mov
stos
push
lret
or
mov
xorb
icebp
and
dec
xlat
sub
and
adc
fcmovnu
pop
xor
jl
loop
dec
repz
inc
ficoms
icebp
dec
xor
mov
scas
xchg
shlb
push
scas
or
jmp
mov
cwtl
ss
and
lock
or
ja
lret
push
sub
cmpsb
sbb
pop
mov
test
stos
rorb
xchg
or
movsl
aad
es
dec
sahf
icebp
pop
add
push
pop
sub
and
cwtl
sub
stc
data16
mov
into
jns
mov
jl
cli
ja
out
mov
movsl
dec
rclb
xor
jl
mov
je
add
xchg
cmc
push
inc
push
push
push
decb
mov
stos
lret
cmp
jmp
pop
pop
adc
jnp
shlb
or
push
xor
lret
psubq
cmp
xchg
mov
ja
dec
jle
mov
test
rclb
nop
cli
jns
aam
add
cli
lods
ret
xchg
add
mov
cs
call
divl
mov
xchg
out
inc
push
sub
notl
mov
cmpsb
sbb
or
ret
mov
imul
sbb
xor
inc
pop
fdivs
jns
jnp
insb
jle
pop
test
dec
cmc
ja
dec
movsl
mov
add
jae
ret
sbb
mov
lods
jae
fcmovnbe
push
fwait
test
scas
addl
inc
loope
cmpsb
push
inc
dec
mov
mov
pop
std
outsb
jae
into
es
push
mov
sub
cs
loope
insb
sub
dec
jle
loop
pushf
popf
xchg
or
loopne
lock
lods
mov
mov
lret
jl
add
pusha
inc
lock
ret
nop
inc
or
jl
push
push
add
push
lods
stos
sti
inc
jg
fisttpll
push
cmp
or
outsl
in
sbb
ja
or
fwait
xchg
orb
or
insb
shll
sub
cmp
lahf
jmp
xchg
pop
out
ds
call
or
out
dec
mov
push
out
aad
cmp
ljmp
clc
lea
sbb
and
cmp
mov
xor
sub
dec
inc
add
cmpsl
jne
or
repz
mov
incl
mov
mov
lret
mov
ffree
ja
lcall
hlt
cmp
jmp
mov
call
fwait
stos
ja
dec
lods
imul
xchg
pop
and
push
push
je
push
cltd
in
sahf
push
sbb
aad
dec
or
xor
and
sbb
loopne
iret
push
aad
sub
js
jno
adc
inc
jbe
add
mov
lods
bound
push
ret
out
adc
push
test
xor
lods
cmp
in
xor
adc
xchg
insl
sbb
inc
insb
xchg
xor
pusha
mov
pop
pop
inc
arpl
xchg
xor
pop
adc
notl
mov
pop
sbb
cld
andb
jnp
jmp
add
dec
mov
pop
in
and
in
jne
or
int
stos
mov
int
push
repnz
orl
mov
test
cvtdq2ps
cmp
in
mov
mov
pop
add
ljmp
sub
pushf
inc
data16
mov
dec
or
xchg
pop
int3
inc
xchg
mov
adc
sti
and
pop
scas
cmc
xchg
jns
mov
rclb
cmp
xor
fnsave
mov
cmp
dec
daa
and
sti
add
cmp
jg
dec
mov
dec
xlat
out
insl
mov
ret
pop
add
adc
add
cmp
je
xchg
flds
data16
push
cltd
ljmp
stc
popf
add
sti
dec
cwtl
gs
mov
lock
push
es
movsl
scas
dec
jne
push
cmpb
jae
scas
or
pop
fsubrl
shlb
push
into
mov
xchg
jle
outsl
sub
addr16
ja
fisttpll
ds
adc
cmpsb
stos
jge
mov
mov
lcall
popa
repnz
pop
lret
mov
fstl
cmc
cmc
mov
mov
jl
push
adc
pop
mov
add
out
insl
xchg
mov
add
add
sbb
pop
xor
cmp
jle
adc
icebp
and
jae
aad
push
push
mov
push
fs
cmp
je
sub
push
shrl
pop
pop
pop
and
sbb
jg
fstpt
sarb
ds
out
pop
adc
dec
std
jbe
mov
rcrl
rcl
fidivrs
fldenv
movsb
lea
loop
and
in
ficoml
push
sbb
or
jns
mov
lock
add
cmpsl
xchg
data16
xor
add
pop
inc
in
adc
jg
fcmovbe
or
jbe
dec
cli
out
in
inc
sub
aaa
shl
inc
fcmove
push
stos
pop
mov
adc
jg
jb
fadd
or
cs
mov
popf
mov
sbbl
cld
pusha
push
repz
sub
test
arpl
aam
into
xlat
mov
or
mov
pop
stos
adc
negb
pop
ljmp
mov
int
sub
jl
cmp
xchg
sub
dec
inc
or
mov
fs
mov
inc
dec
leave
shll
cmp
loope
push
cld
lock
push
test
pop
lock
dec
lods
out
dec
jnp
enter
aas
cmp
dec
ss
push
out
adc
movsb
mov
repz
inc
add
jg
pop
mov
pop
xlat
rcll
mov
scas
and
sbb
in
enter
jns
addb
pop
stc
dec
clc
and
repz
push
jb
add
stc
out
mov
mov
mov
imulb
sub
cmp
nop
push
pop
stc
repz
lods
rolb
int3
jl
dec
lock
fistl
lahf
arpl
fs
ljmp
rcll
roll
xchg
cmp
xchg
scas
ja
iret
inc
movsl
popf
adc
jecxz
shll
sbb
sbb
and
rol
sub
lret
ss
xchg
xchg
mov
jg
insb
sbb
sti
xlat
sbb
jl
outsb
push
aam
push
jb
adc
cmp
in
jecxz
flds
nop
cli
jo
mov
cmpsl
repnz
push
cmp
fs
sbb
fcmovnu
inc
xor
idiv
and
xor
cmp
push
dec
or
idivb
xorl
test
ja
xchg
ja
hlt
add
in
jecxz
mov
shld
sub
lea
scas
lock
adc
lahf
add
or
push
xor
add
lahf
cs
jg
mov
in
or
sub
mov
xchg
lods
mov
js
cmp
xor
lret
lock
pop
push
pop
mov
test
mov
dec
sub
push
ds
stc
push
pushf
jmp
clc
xchg
adc
out
lock
out
xchg
cmc
mov
adc
adc
jp
mov
mov
cmc
add
mov
mov
in
adc
into
mov
xchg
xchg
xor
xchg
mov
sbb
pop
popa
jnp
xlat
cmp
adc
jle
mov
stos
mov
inc
in
loop
and
ds
add
sub
mov
adc
pop
cmp
xor
mov
sbbb
mov
mov
lods
rcrl
outsb
jecxz
aaa
jmp
and
mov
push
push
mov
xchg
pop
sbb
jno
sbb
nop
repz
pusha
sub
or
pop
jl
jb
call
xchg
inc
or
test
xchg
ljmp
add
outsl
fnsave
or
adc
popa
movsl
pop
jg
movb
xchg
into
and
out
push
fcmovbe
xchg
sbb
ljmp
lret
shll
outsl
pop
jecxz
adc
sbb
out
push
lods
sub
cwtl
les
scas
js
xorl
rclb
nop
rolb
dec
mov
lods
jle
mov
sub
outsb
dec
push
mov
ret
test
push
imul
test
jbe
dec
dec
scas
xchg
dec
jp
pusha
adc
outsb
adc
pop
rcll
das
push
aas
rclb
ret
jle
test
xchg
in
ja
push
dec
test
dec
or
ret
std
jg
or
dec
push
mov
dec
xchg
inc
mov
in
daa
sti
pushf
hlt
gs
in
or
mov
xchg
mov
lret
into
lret
cmp
add
aam
lret
fcmovu
push
mov
sbb
adc
scas
fisttpl
daa
aam
xchg
aaa
jmp
mov
lds
mov
xor
cmp
mov
dec
xor
jecxz
insb
dec
outsl
imul
scas
repz
std
push
lret
xchg
rcrb
mov
into
xor
pop
rcl
push
stc
lds
fistpl
xchg
dec
fisttpll
les
div
daa
pop
js
aad
or
pop
pop
out
mov
sahf
inc
dec
push
pop
xchg
insl
jo
loope
dec
test
xchg
inc
pop
sub
pop
rcrb
push
mov
das
outsl
pop
sub
scas
ret
xor
mov
add
sbb
jnp
fwait
into
mov
nop
pop
clc
jge
mov
lahf
jnp
sub
fcomps
in
int3
mov
testb
bound
add
int
pop
push
in
sbb
fcompl
out
sub
cmp
test
cld
xchg
mov
xchg
pop
xor
cmc
mov
mov
in
shll
imul
loope
lret
insl
lret
scas
xchg
mov
add
repnz
sbb
add
lods
int3
dec
mov
mov
loop
jmp
sbb
loopne
pop
incl
mov
out
fnstsw
gs
add
adc
add
js
rcrl
movsb
mov
jne
lods
sub
xlat
mov
pop
arpl
icebp
inc
mov
aas
stos
inc
mov
mov
xor
inc
stc
push
pop
mov
add
cmp
jp
imul
inc
bound
orb
pop
sti
push
mov
cmp
push
iret
and
cmp
mulb
jmp
push
fwait
xchg
pop
insl
xchg
cmp
xor
xor
frstor
add
sbb
push
enter
mov
jb
movsl
insl
pop
push
jp
mov
cmpsb
ljmp
adc
aaa
xor
and
pop
push
xchg
inc
pop
je
mov
call
lahf
test
pop
xchg
sbb
pop
adc
adcb
loop
mov
lods
jnp
push
mov
push
lods
in
les
iret
mov
sbb
mov
mov
push
das
jbe
mov
mov
int3
sbb
mov
mov
aas
mov
xor
cmp
pop
xchg
inc
cmp
repnz
cmpsl
xchg
push
jns
sub
fwait
outsl
xchg
dec
add
out
hlt
fists
leave
in
add
lahf
sbb
lret
or
add
imul
mov
enter
loopne
and
add
jmp
cmp
and
pushf
in
add
and
fisttpll
inc
push
xchg
fcomps
dec
dec
movsl
repz
and
lods
dec
js
fmuls
fs
std
cli
jg
sub
insl
xor
sbbl
ret
loopne
outsb
inc
xchg
lret
cmpsl
xchg
out
inc
sbb
xchg
dec
fstpl
lcall
add
dec
mov
out
adc
xchg
test
inc
inc
out
mov
shll
inc
test
in
inc
mov
mov
jg
lret
xchg
ret
out
bound
push
pop
aaa
lret
sub
orl
pop
cmpsb
pop
fstpl
dec
rcrb
push
mov
scas
add
dec
push
scas
ret
out
out
jg
gs
je
mov
les
stos
shll
inc
xor
in
int3
sbb
mov
into
fwait
icebp
scas
push
inc
xor
fcoms
fisttpll
mov
or
or
cmc
push
xor
outsb
sahf
and
dec
xchg
in
sub
inc
movsb
ja
inc
jmp
inc
xor
fistl
cmp
lock
lcall
mov
xchg
mov
mov
out
and
inc
xor
mov
cwtl
aaa
dec
sbb
pop
jmp
xlat
es
xorb
cmpsl
pop
mov
jae
fisubrs
add
aaa
pusha
xor
dec
cli
icebp
jg
pushf
iret
cmp
or
or
subl
jmp
clc
push
int
jb
in
add
sbb
movsb
cltd
sbb
push
xor
fildll
inc
aas
xchg
adc
jl
push
call
nop
lea
inc
xchg
pop
inc
inc
je
aas
ljmp
or
or
loopne
cmpsb
push
fwait
js
add
out
aad
aas
out
hlt
mov
cmp
fidivrs
sub
or
mov
and
mov
mov
mov
push
push
imul
ret
jmp
push
sbb
mov
data16
dec
adc
xchg
imul
insb
push
add
ss
loope
int
out
out
dec
test
aaa
mov
and
mov
cmp
fidivs
jno
push
and
loop
lock
ficoml
divl
jae
xchg
data16
cmp
outsb
mov
and
push
icebp
xor
or
xor
push
roll
rorb
xchg
cmp
aam
adc
ss
sub
sub
dec
in
add
jno
daa
outsb
dec
xchg
adc
jb
stc
or
mov
cmp
jle
pop
and
in
push
lahf
call
cmp
les
adc
shll
pop
addl
mov
push
adc
outsb
or
mov
and
call
shrb
aam
add
sbb
sub
aas
mov
pop
out
xchg
arpl
jmp
or
fyl2x
xor
mov
leave
dec
or
dec
inc
rdpmc
xchg
lcall
sarl
ja
cmc
stc
cwtl
xchg
rcrl
jo
dec
ljmp
sarb
test
mov
push
add
repnz
movsb
mov
aaa
mov
js
popw
fcomps
or
dec
jns
cs
and
movsl
mov
bound
xchg
stc
dec
sub
sbb
mov
dec
popf
ficompl
jecxz
mov
lahf
inc
mov
dec
fwait
add
rcr
dec
sub
inc
jae
xor
inc
js
xlat
orb
or
lret
push
inc
repnz
push
cmc
dec
push
lock
lret
cmpsb
loope
mov
push
in
loopne
inc
sbb
pushf
cmp
mov
mov
cmp
sti
sahf
push
loope
popa
aam
jecxz
outsb
sbb
push
decl
fistpll
cmpsb
inc
lret
sub
push
xchg
mov
xchg
push
xchg
mov
out
jp
je
cmp
imul
sbb
add
stos
push
nop
aaa
xchg
sbb
mov
xor
xlat
mov
cld
xor
and
jmp
pop
lods
int3
fdivs
aas
into
and
xchg
pop
mov
divl
js
cmp
mov
add
mov
es
mov
inc
xchg
jg
js
cmpsb
pop
adc
mov
insl
inc
loopne
lods
bound
jp
adc
cmp
sbb
aad
iret
jge
add
and
lock
dec
dec
ljmp
out
inc
sahf
jmp
xorl
scas
lea
pop
add
mov
je
sahf
xchg
push
sub
sbb
cmpl
dec
xor
out
mov
push
lods
cmp
lea
mov
mov
aas
je
dec
mov
popf
jns
jle
adc
mov
out
jecxz
stc
pop
pop
mov
js
lock
add
sbb
scas
xchg
mov
push
pop
mov
jnp
std
push
sub
lahf
xchg
push
lods
xor
mov
sbbb
jle
push
cmp
lret
punpckhwd
mov
adc
xlat
xchg
inc
rorl
adc
loopne
jno
fs
jbe
push
push
out
xlat
sbb
icebp
icebp
cmpsl
sub
adc
jns
in
lahf
pushf
hlt
adc
jl
cwtl
ret
pop
mov
lods
filds
jmp
adc
adc
push
mov
fildl
inc
das
adc
cmc
jle
lret
jo
xchg
int
addr16
mov
mov
std
sarb
pop
pop
sub
cmc
mov
int
leave
sub
push
push
push
or
pop
cmp
nop
adc
cltd
push
test
cmpsb
jl
repnz
cmp
dec
adc
or
fidivrl
push
insb
stc
cmpsb
mov
dec
sub
insl
das
cli
stos
jo
arpl
xchg
loope
push
mov
ret
xchg
mov
xchg
add
lods
ja
cmc
and
test
jp
scas
mov
xorb
jp
push
dec
jmp
data16
pusha
nop
jmp
and
cmp
pop
lds
jbe
in
xlat
sub
inc
mov
xor
lock
das
lcall
xlat
ja
sahf
or
push
out
or
pop
mull
inc
stos
mov
inc
aam
xor
jo
shrb
mov
push
jmp
cmc
or
sub
mov
sbb
cmp
mov
fisubrl
push
pop
hlt
loop
push
js
mov
test
fisubl
pusha
rcrb
mov
jb
lea
lret
and
movsl
mov
cmp
rclb
movsl
mov
mov
xchg
dec
sub
subb
adcl
or
push
xor
out
aas
add
jnp
fwait
cmp
mov
rol
xor
sti
mov
cmp
outsl
sbb
call
cltd
sbb
jmp
push
push
adc
add
or
pop
sbb
push
inc
cli
rolb
pop
pop
and
lods
jnp
jmp
call
cmp
int
les
popf
js
aaa
push
adc
das
movsbl
pop
in
xchg
inc
sub
push
mov
xchg
add
aam
fiaddl
repz
push
jecxz
mov
lods
sahf
cmp
push
and
mulb
iret
push
cmpsb
cmp
hlt
gs
std
cmp
add
cmp
int
pusha
lret
loope
xchg
xchg
sbb
les
push
divl
dec
test
and
neg
xor
pop
js
jl
dec
scas
mov
mov
xchg
shrl
jno
cvtpi2ps
jbe
xchg
inc
mov
test
dec
call
mull
ja
ljmp
push
in
and
movb
or
push
in
inc
dec
es
orb
mov
iret
xchg
jb
cmp
mov
cwtl
orb
out
pusha
xor
mov
sub
inc
cmpsb
mov
pop
aaa
scas
dec
xchg
nop
mov
mov
xor
fdivl
imul
sbb
add
jmp
sub
wrmsr
into
hlt
cmp
lret
pop
add
and
push
or
mov
cltd
stc
fcomi
fstpt
jbe
jg
pop
push
push
cmpsl
loopne
lcall
push
lds
cmp
pushf
xlat
pop
jns
xor
clc
in
dec
sub
xchg
mov
in
stos
mov
out
test
inc
dec
loope
push
ja
pop
mov
xchg
cmp
dec
cmp
outsb
aam
mov
xchg
scas
adc
inc
sbb
lds
aad
or
and
movsb
adc
out
jnp
pusha
dec
jns
insb
test
lea
xor
shll
cltd
loope
mov
jmp
xor
mov
xchg
cltd
add
testb
cmp
nop
push
add
add
push
dec
xlat
loopne
in
pop
movsb
decl
or
pop
adc
imul
into
aam
sahf
mov
xor
das
jg
ret
sub
mov
adcl
dec
xlat
insl
cli
test
mov
leave
xor
dec
repz
popa
call
mov
inc
neg
icebp
iret
sbb
ret
pop
je
addb
fwait
scas
rcll
pop
adc
adc
pop
or
and
lock
dec
arpl
lds
and
jmp
int3
sbb
push
pop
in
rcr
xor
std
cmpsl
push
cmp
fimuls
sbb
add
jne
push
sar
sti
stos
xchg
cs
adc
dec
dec
fs
xor
cmp
in
lret
popa
int3
cmpsb
push
jge
cli
mulb
jmp
mov
into
sbb
cmp
lret
mov
leave
xadd
add
sti
pop
cmp
clc
adcl
xchg
xlat
jmp
fisubrs
and
loope
outsb
mov
pop
inc
or
movsb
mov
lret
leave
sub
testb
cmp
mov
frstor
cs
rcl
adc
sbb
mov
adc
lods
call
faddl
call
push
push
cmc
sbb
ja
leave
movsl
or
fisttps
jle
gs
dec
mov
xchg
lds
iret
add
jecxz
inc
leave
in
push
add
jne
repz
jle
insb
fisubl
adc
in
repz
fimull
jne
jge
xor
xchg
push
fs
das
cmp
js
cmpsb
sub
jl
dec
jp
cmp
xchg
mov
mov
inc
and
xchg
mov
mov
add
pop
jbe
mov
test
mov
out
inc
lcall
mov
insl
pop
inc
fldln2
add
or
or
std
popa
int3
jmp
cmp
daa
pushf
xlat
mov
inc
insb
int3
cld
sbb
inc
stc
fcmove
or
bound
add
sbb
push
pop
cmpsb
xor
outsl
and
mov
dec
sbb
jp
pop
mov
rorb
sbb
push
scas
and
aas
les
insb
mov
mov
xchg
mov
adc
sbb
pop
test
cmpsl
lcall
mov
dec
fisttpl
push
mov
mov
aas
dec
mov
mov
sub
mov
jns
fwait
xor
inc
mov
and
jae
or
sub
negl
outsb
ljmp
pop
push
push
pushf
out
aam
jge
bound
sti
mov
fistpl
cmc
sbb
rorb
jle
or
or
mov
enter
sarb
into
data16
cs
mov
cmc
mov
test
jp
sub
inc
pop
cltd
adc
mov
mov
clc
sub
das
ss
lret
addl
push
dec
push
fadds
pop
hlt
and
mov
pusha
pop
jmp
and
js
jle
add
enter
mov
movsb
push
mov
sub
xchg
mov
jbe
push
dec
test
pushf
xchg
loopne
cmpsl
sar
ljmp
sbb
orl
adc
jb
push
shrb
cmpsl
jmp
test
rcrb
filds
mov
jbe
pop
dec
mov
add
fsubrl
mov
je
xchg
mov
popf
jbe
iret
lret
cmpb
inc
cmp
cmp
in
add
mov
lahf
addl
dec
aad
test
jle
sbb
and
dec
lret
imul
jmp
mov
and
adc
mov
push
mov
push
leave
xchg
faddp
xor
xchg
inc
mov
inc
pusha
shufps
push
ljmp
xor
jg
jecxz
je
mov
cmpsl
loope
add
lret
test
sub
bound
mov
daa
mov
out
push
jle
add
add
xchg
cltd
lods
push
xchg
add
fnsave
cmp
cmc
xor
add
or
pop
fmuls
daa
movsb
aaa
jbe
aas
shll
arpl
add
jecxz
mov
popf
jmp
int
inc
inc
lahf
push
aaa
insl
xchg
mov
push
adc
jmp
rolb
adc
push
lds
hlt
es
mov
mov
xchg
xorb
insb
mov
jb
or
sbb
xor
shl
pop
mov
fadds
sti
and
mov
mov
imul
push
pop
cs
pop
je
lret
leave
jno
dec
lods
sub
inc
jae
std
and
dec
cs
xor
iret
rorb
fwait
mov
loopne
jle
adc
aad
xor
aas
aad
popf
mov
cmp
popl
popf
xor
pop
nop
ret
out
addr16
in
pop
inc
insl
cmpsb
je
aad
sub
xchg
mov
dec
sarl
out
add
sbb
test
xor
jns
sub
and
push
jno
jg
lret
inc
push
clc
inc
popf
add
insb
pop
inc
xchg
sbb
mov
ss
and
shll
ljmp
in
cmp
lods
test
and
subl
loop
mov
cmp
bound
pop
or
iret
xchg
popa
push
or
fildll
cmp
pop
pop
test
outsb
arpl
mov
sub
dec
aas
aas
adc
or
es
sbb
in
out
mov
test
dec
add
fisubrl
push
scas
int
adc
push
pop
mov
fisttpl
into
in
repz
mov
jne
inc
pop
or
jg
outsl
rcrb
cmp
or
enter
adc
loopne,pn
pop
hlt
pop
fs
cltd
lods
xchg
gs
push
dec
xchg
stos
stc
pop
fcmovb
push
dec
mov
mov
cmpsb
mov
xchg
push
inc
daa
jecxz
jnp
and
mov
scas
aam
cmpsl
jmp
pop
sub
mov
inc
cmp
jmp
mov
lret
repz
jb
movsb
mov
jge
xor
mov
loope
inc
lds
add
lret
sti
inc
or
adc
inc
out
cmpb
cmp
shrb
rcll
lahf
push
xchg
lods
scas
ror
cli
imul
test
xchg
jbe
fsubrl
mov
setp
lock
mov
movsb
ss
sti
cli
test
aam
mov
cmp
hlt
stc
repnz
adcl
mov
sbb
fisubrs
jmp
pop
mov
dec
mov
xchg
sbbb
pop
jae
push
shrb
push
mov
mov
imul
xchg
ja
movsl
repnz
fwait
out
subl
dec
cmp
les
mov
clts
inc
sti
test
outsb
xchg
inc
test
sahf
pop
dec
xor
adc
lret
mov
adc
outsl
stos
lcall
mov
xchg
mov
mov
popf
lretw
mov
iret
std
lahf
cmpsl
cwtl
mov
sbb
cs
xlat
xchg
in
out
int
pop
push
jmp
sbb
pop
lock
mov
pop
jecxz
call
adc
fnsave
inc
popa
int
outsb
adc
mov
cmp
lock
mov
leave
adc
movsb
mov
daa
fadd
cmp
xor
hlt
les
xchg
ret
ja,pt
insl
enter
pop
les
sahf
repz
and
cld
inc
adc
or
popf
lock
out
roll
les
xchg
xor
cwtl
adc
sub
dec
daa
fldl
paddusw
inc
out
jnp
cltd
hlt
jno
jge
xchg
push
xor
stos
xchg
imul
inc
mov
xor
sub
sub
js
pop
push
and
mov
mov
xchg
out
cmp
mov
ret
leave
and
cwtl
cld
and
push
sbb
jge
lea
insl
aas
sub
punpcklbw
ds
rcl
imul
imul
mov
ljmp
sahf
mov
imul
decb
dec
jae
mov
pop
xor
fwait
test
dec
enter
mov
pop
inc
lods
enter
inc
adc
mov
sub
push
iret
add
pushf
mov
cltd
call
inc
roll
push
and
xor
stos
sbb
rcr
sti
push
loop
sbb
ja
dec
pop
add
xor
mov
mov
xor
addr16
cmp
lret
push
fcoml
or
roll
mov
stc
dec
ret
inc
xlat
inc
std
mov
pop
jmp
xchg
ljmp
test
div
xchg
call
and
lahf
inc
adc
test
sub
imul
mov
push
or
pop
and
nop
fwait
nop
das
daa
shll
rclb
pop
addr16
or
movsl
sub
iret
cmp
mov
fst
insl
mov
sub
movsb
ret
sbb
jmp
cmc
jg
mov
shlb
cs
movb
cmp
mov
push
imul
mov
push
cli
movsb
xchg
xlat
jbe
mov
pop
pushf
negb
cltd
and
sub
xchg
scas
lds
filds
sbb
or
stc
pop
cmpsb
movsb
dec
pop
pop
add
fldl
orl
mov
into
sbb
inc
sbb
ss
mov
cwtl
repz
sbb
dec
pop
push
sbb
pop
scas
sar
mov
jle
mov
mov
and
dec
outsl
mov
mov
mov
push
and
push
pop
push
sbb
outsb
daa
mov
sub
add
rclb
stos
push
sbb
dec
repz
add
out
mov
push
out
das
cmpsb
sahf
inc
js
inc
test
mov
sub
aam
fisttpl
and
ja
push
ret
mov
insl
jbe
cmp
imul
dec
movsb
xor
into
xor
inc
push
shlb
in
xor
sub
adc
enter
arpl
bound
std
sub
cs
xchg
dec
shll
jp
in
xchg
add
cli
sbbl
cmp
and
jbe
sbb
shrb
pop
in
jl
out
jp
stos
mov
add
aaa
xor
and
xchg
adcl
bound
jo
lods
test
xchg
jns
jo
fbstp
pop
cmp
mov
cmp
mov
fldcw
sub
stos
fwait
icebp
push
mov
stos
jp
mov
xchg
inc
js
insl
xchg
dec
das
and
push
or
notb
push
les
pop
pop
inc
and
cmpsl
ret
pop
idivb
into
mov
je
pmaddwd
sarl
hlt
addl
cmp
mov
push
repnz
add
ss
cmp
test
ljmp
mov
mov
jb
sub
cmpsl
pop
push
in
stos
popa
leave
nop
add
push
scas
add
rcrb
ja
or
cmpxchg
leave
mov
pop
cmp
out
int3
arpl
pop
je
xchg
sbb
imul
xor
mov
mov
add
cmpsl
iret
xchg
or
sbb
pop
int
scas
dec
xchg
adcb
sub
jecxz
imul
dec
inc
mov
jp
cli
and
aad
popf
in
cs
mov
in
push
outsb
cmp
sbb
ljmp
sbb
es
dec
data16
cli
push
jecxz
rcrl
outsb
mov
insl
js
in
sti
pop
fbstp
roll
inc
sbb
into
mov
cmp
pop
and
xchg
xchg
sbbl
test
gs
movsb
lods
add
lds
andl
out
sub
movsl
sub
mov
popa
in
inc
jb
sub
stc
pushf
fldcw
cmp
stc
stc
rcl
adc
sbb
imul
lods
inc
int3
pmuludq
shlb
int3
dec
mov
or
insb
addb
sbb
push
iret
stos
inc
cmp
std
inc
rorb
mov
cli
subl
movsb
mov
aad
mov
pop
xorb
push
daa
movsb
and
sub
out
leave
sbb
aam
insb
sti
dec
mov
rorl
repz
mov
popf
popa
daa
or
add
lea
sti
cwtl
mov
data16
shrl
add
jecxz
xchg
nop
xchg
decb
sti
cwtl
cmp
jmp
inc
imul
jmp
mov
stos
das
test
jno
andb
orl
test
and
loop
test
movl
lock
push
pop
jmp
push
cli
out
mov
and
cmpsb
adc
stc
iret
mov
dec
mov
in
shrl
push
and
inc
sahf
cmpsb
or
xor
adc
icebp
sti
or
pop
xchg
mov
inc
hlt
adcb
push
xchg
mov
add
std
push
js
fbstp
aas
hlt
push
jne
push
sbb
sti
push
orb
ljmp
pop
in
sbb
lret
imul
xchg
lds
pusha
out
push
inc
seto
dec
and
dec
les
pop
notl
lcall
in
add
loopne
dec
sbbb
in
xchg
nop
mov
add
arpl
cld
or
cs
mov
addr16
pop
aam
mov
push
negl
bnd
iret
inc
in
jne
xchg
mov
push
loop
or
push
mov
mov
push
xor
xchg
mov
test
mov
ret
mov
shl
sub
pop
mov
mov
xor
and
movsl
or
pop
mov
push
enter
call
sti
negb
mov
and
std
push
cld
fisttps
sbb
ficoml
arpl
movsl
adc
setns
les
push
int3
pop
inc
lock
jns
pop
cmp
popa
mov
imul
subb
test
rcrb
shrb
icebp
add
icebp
ds
jmp
mov
pushf
jae
xor
ss
repz
ds
test
call
out
mov
mov
mov
pop
cmp
ja
in
testb
inc
stc
pop
dec
add
out
or
lods
sarb
jle
mov
psrlq
cmp
mov
cli
xor
aaa
dec
fists
adc
sbb
dec
push
cmp
in
test
mov
imulb
mov
dec
mov
dec
cwtl
xchg
push
xchg
mov
movsb
mov
repz
jl
pop
sbb
cld
notb
sub
mov
jl
adc
in
popf
mov
into
add
ret
loop
pop
bound
mov
popf
test
mov
inc
cli
mov
mov
cmp
iret
imul
jmp
je
bound
sub
pop
dec
fsts
scas
cs
inc
int3
inc
inc
pop
xchg
insb
lods
adc
adcl
lret
push
sub
repz
cmpb
jno
mov
shlb
notb
gs
push
adc
cmp
aaa
push
pop
sbb
int3
mov
imul
cs
mov
inc
mov
xchg
test
jecxz
lahf
popf
inc
sbbl
int
scas
adc
pop
pop
shll
in
cwtl
cmpsb
test
je
lret
sbb
cmp
push
movb
mov
or
dec
scas
cmp
xor
xor
or
jl
insb
sbb
insb
lcall
push
jne
jne
xor
test
subb
stos
xor
fldenv
out
mov
and
fwait
test
aas
iret
inc
push
xchg
inc
mov
add
jge
mov
or
ljmp
fiadds
fildll
cmpsb
mov
sbb
imul
mov
popa
cmp
clc
fmuls
push
push
pop
scas
adc
repnz
and
sub
mov
pop
js
jbe
jbe
test
lods
mov
xor
mov
push
push
inc
repnz
inc
add
inc
cltd
and
mov
push
scas
push
dec
fsubrs
mov
mov
and
stos
outsl
outsl
outsl
mov
sbb
push
lret
insb
loope
mov
cmc
addr16
mov
inc
fadds
dec
mov
sub
ret
inc
push
lods
pop
jmp
push
sub
adc
sbb
sub
hlt
fcoms
cmpl
imull
push
add
adc
lcall
lods
lock
jmp
inc
sub
or
lret
add
js
mov
dec
add
inc
adc
pop
push
pushl
inc
sahf
mov
or
xor
or
lret
out
repnz
cmp
nop
jns
data16
outsb
or
dec
add
sub
and
fwait
test
int
xchg
xchg
jne
sub
adc
div
xor
xorb
add
sti
into
xor
sub
sub
test
idiv
or
pop
pop
and
jne
and
repnz
fadds
lahf
sub
pop
push
scas
popa
mov
js
mov
mov
stos
xor
outsb
adc
je
sub
xchg
or
ja
aas
push
mov
adc
dec
icebp
adc
mov
mov
in
xchg
or
xchg
and
lock
xorl
jge
xor
les
mov
in
cli
adc
mov
inc
dec
adc
sahf
sbb
adc
mov
cmp
mov
loop
cmp
icebp
fnstenv
loope
lods
add
cwtl
xchg
sbb
repnz
xchg
jmp
push
roll
inc
xchg
xchg
popf
cmp
cltd
sbb
aad
jb
jnp
sub
aaa
sbb
adc
adc
fistpll
sbb
rolb
dec
add
lds
pop
inc
jg
and
inc
mov
imul
or
lds
jb
xchg
in
std
adc
xchg
in
dec
pop
and
in
mov
mov
sub
xor
pmulhuw
push
les
adcb
cld
repz
adc
add
cmpsb
pop
loop
and
cmpsl
adc
sbb
repz
and
or
call
dec
lds
fwait
pop
fnstcw
xor
add
fwait
sarb
add
shll
popl
add
jecxz
cli
lods
inc
bound
out
inc
jp
add
ret
push
sub
jl
mov
ret
addr16
aam
adc
pop
outsl
mov
test
inc
mov
mov
fwait
scas
jne
pop
add
mov
ds
cmp
loop
movsl
test
mov
adc
inc
cltd
mov
xlat
aaa
insb
bnd
push
cmp
out
nop
cmp
dec
in
filds
jp
gs
ror
jle
mov
lcall
jae
xor
xchg
movsb
es
xchg
mov
int3
ljmp
pop
ret
jg
inc
dec
pop
cmc
mov
inc
aam
stc
out
mov
in
stos
pusha
outsl
adc
jge
test
mov
mov
push
jnp
test
add
dec
fdivl
ds
lods
icebp
stc
push
insb
mov
mov
cmp
aam
xchg
inc
in
mov
mov
push
iret
repz
inc
pop
mov
jg
cs
fwait
pop
push
push
xchg
int
fwait
xchg
mov
testl
into
add
push
mov
pushf
cmp
mov
outsl
addr16
imul
out
movsl
dec
pop
addr16
xchg
mov
lahf
push
andl
pop
xchg
lret
loope
push
test
cltd
cmpb
mov
ret
ret
into
jmp
inc
mov
and
xor
push
adc
adc
pop
stos
jnp
cli
lds
adc
dec
or
or
arpl
xchg
je
or
test
jb
mov
jbe
scas
pop
enter
cmp
mov
insl
adc
in
test
fdivp
cmp
jnp
cs
jge
mov
int3
add
sar
add
or
cmpsl
pushf
ret
xchg
mov
jp
int
push
bound
std
pop
jmp
out
and
fidivl
repz
xchg
aam
xchg
mov
sub
cltd
sbb
addw
jmp
pusha
data16
fldt
popa
jo
lock
in
imul
inc
xor
sbb
cli
mov
cmp
sub
leave
stos
cltd
push
repnz
clc
decl
jle
push
outsl
mov
cmpsl
pop
popa
fucom
lds
addr16
mov
cs
les
dec
dec
cwtl
pushf
and
push
add
popa
xor
popf
jmp
call
xor
shrl
movsl
lahf
shll
scas
sub
iret
pop
push
dec
jns
sbb
adc
sbb
and
scas
xchg
imul
stos
insb
adc
and
les
pusha
repnz
add
cmc
xor
mov
inc
out
fmuls
enter
aad
repz
cltd
adc
mov
push
out
lea
daa
add
movsl
stc
mov
push
getsec
test
xchg
aam
dec
fstpl
out
sub
jae
fmuls
cmp
dec
ret
pop
arpl
dec
hlt
pop
push
out
dec
pop
inc
daa
pushf
fsubs
pop
push
cld
or
ret
scas
clc
hlt
inc
dec
loope
dec
movsl
hlt
add
test
sbb
clc
inc
das
jns
mov
adc
cs
cmp
sahf
push
xorb
sub
shrb
sub
mov
inc
loope
push
push
fs
adc
push
rcr
mov
lea
mov
jne
lcall
inc
ja
lahf
sub
cmpsl
mov
test
push
push
aas
mov
outsl
push
icebp
sahf
push
mov
xorb
nop
xor
lret
aaa
mov
outsb
test
movsb
arpl
xchg
xchg
jle
icebp
lods
cwtl
mov
push
cs
das
mov
les
xchg
xchg
mov
mov
leave
out
call
ret
push
outsl
xor
test
div
gs
leave
fs
je
dec
dec
mov
scas
out
mov
push
out
fmul
xchg
movsb
adc
pop
mov
adc
cmp
xchg
lods
pop
mov
push
inc
test
cmp
xchg
stos
jno
inc
lret
jg
fs
lock
lahf
push
adc
lret
mov
pop
cmc
xchg
xchg
repnz
xor
sub
pop
faddl
xor
inc
rcrb
adc
iret
add
sub
cltd
sub
repz
dec
iret
cmpl
sub
ja
add
scas
fldt
cltd
mov
js
les
pop
mov
out
repnz
lret
je
bound
pop
in
lods
ss
ror
adc
dec
cmp
call
mov
push
xchg
loope
iret
add
inc
cmp
hlt
sbb
std
inc
das
inc
mov
mov
mov
push
roll
jbe
and
mov
popf
sub
ret
inc
add
fs
sbb
mov
jb
dec
cltd
sbb
pusha
and
sub
cs
cmpsb
cmp
data16
add
cmp
cltd
lea
fisubrs
fisttps
cmp
std
inc
mov
sti
inc
add
pop
popf
rcr
cmp
and
cmc
rorb
rclb
arpl
push
sub
sub
addl
iret
dec
aaa
jnp
jmp
loopne
idivb
xlat
dec
sbb
sub
add
test
xchg
xor
jmp
loopne
and
sub
cmp
mov
out
dec
xor
divl
aad
push
fmull
or
lods
lcall
outsb
push
aad
xor
and
jg
int
sub
pop
jp
mov
mov
push
xlat
adc
ljmp
das
aas
xchg
loop
mov
je
jnp
push
and
cmp
jg
jecxz
pop
lods
imul
imul
sbb
int3
pop
outsl
push
cmpsb
arpl
test
push
stos
int3
jnp
lahf
adc
jbe
dec
outsb
les
mov
pop
incl
fcomps
out
test
cmpsb
insb
shlb
and
arpl
leave
repz
pop
jecxz
sbb
pop
mov
sub
pop
clc
js
insl
stos
mov
push
fldl
mov
xor
sarb
cmpsb
jno
jnp
mov
aaa
dec
decb
sti
pop
scas
cltd
aad
jnp
sub
xchg
jae
sbb
and
and
add
pop
clc
mov
mov
push
push
push
adc
or
in
add
lods
pop
aad
fwait
xchg
rcl
shll
and
mull
jecxz
dec
leave
movsb
dec
or
int
insb
jl
shrl
icebp
aas
jp
ja
fstpl
loopne
mov
sub
xor
loop
int3
inc
dec
mov
and
dec
push
push
sbb
mov
adc
sahf
xchg
jl
rcrl
push
or
mov
orb
loope
gs
pop
xchg
cmp
push
push
stc
mov
push
pusha
rcr
mov
pop
cmp
jno
xor
jns
sbbl
orb
lret
dec
fcoml
imul
jle
cmp
in
stos
mov
fwait
leave
rorl
push
adc
int
std
adc
add
cs
pop
or
pop
mov
dec
or
inc
je
std
out
push
out
jae
dec
push
das
sbb
xchg
adc
mov
push
subb
push
jo
pusha
sub
pushf
leave
dec
sti
adc
xor
nop
movsl
add
xlat
movsb
jo
fisubl
scas
push
dec
int
mov
pusha
push
and
idiv
stc
cmp
bound
pop
test
stc
add
mov
add
dec
std
push
xorb
pop
lcall
rolb
jg
cmp
cwtl
das
inc
xor
jb
pop
add
dec
add
data16
mov
imul
gs
hlt
xor
mov
or
or
gs
sbb
adc
sub
push
push
or
repnz
add
or
fwait
pop
repnz
add
out
cwtl
int3
inc
and
es
jo
sub
cmpsl
das
jg
xor
add
rcl
jbe
js
into
nop
and
push
and
pop
rcr
dec
sarb
sub
jae
xchg
push
jb
cmc
std
xchg
push
jno
bound
inc
jns
mov
clc
fwait
into
std
data16
mov
iret
push
jae
int
push
cld
stos
rcr
jp
cmc
test
pop
test
dec
push
ret
xor
jmp
outsl
adc
pop
mov
pop
fildl
iret
mov
and
cmpsb
cli
rcr
leave
lods
push
pop
imul
aad
pop
dec
sbbl
adc
stos
push
into
push
test
sahf
bound
fisttpl
lret
std
or
aam
push
xchg
adc
xor
lret
stos
xchg
jg
adc
icebp
in
sub
sub
rcrb
and
sbb
lcall
inc
fstpt
je
or
data16
add
pop
or
insb
mov
xchg
push
lods
subl
stos
xorb
adc
lret
lret
orb
xor
sti
shl
adc
stos
dec
and
mov
out
test
mov
push
roll
shr
mov
out
mov
pop
in
incb
int
jp
ljmp
js
xchg
lods
xor
scas
dec
fwait
iret
add
pop
in
inc
fisubrs
mov
sbb
mov
jg
ret
in
cld
or
jmp
pop
jbe
mov
xchg
shl
into
or
movsl
cmpsb
addr16
pusha
and
push
pop
jecxz
lret
movsb
add
es
cmp
loopne
pop
js
loope
jo
les
mov
or
cmp
pusha
mov
push
fbstp
push
mov
adc
lea
mov
jno
test
test
mov
lcall
mov
ss
mov
das
mov
adc
ds
ret
jmp
enter
test
cmpsl
js
stos
lcall
movsl
xor
nop
cmp
stc
rcl
pusha
dec
movsb
pop
mov
lcall
cmp
dec
fcmovb
enter
int
insb
add
int
test
xchg
mov
incl
dec
pop
mov
or
lock
mov
fst
xchg
popa
shrb
mov
ljmp
aam
out
js
xlat
ret
dec
test
inc
inc
movsb
popf
sbb
mov
in
mov
lea
cmc
cmp
xchg
nop
imul
in
jg
nop
orb
xor
and
test
xor
lds
in
mov
jecxz
xchg
sub
inc
dec
inc
dec
push
repnz
mov
push
dec
andb
loop
jp
int
xchg
lret
pop
sti
sub
fstpt
sbb
xor
popa
mov
inc
mov
mov
stos
out
lahf
push
stc
and
mov
pop
outsb
adc
mov
mov
push
xchg
icebp
cmp
testl
daa
lds
daa
push
xchg
test
cmpsb
fsubs
and
xchg
call
loope
adc
icebp
push
rcll
daa
xor
cmp
xor
cmpsb
jnp
sbb
es
popf
or
jbe
inc
inc
adc
sub
mov
imul
lds
ret
jp
sub
push
push
push
xor
sbb
adc
xchg
data16
xchg
aam
cmp
js
push
adcl
or
jns
cmpsb
shlb
test
pop
fcomps
dec
sub
popf
shl
inc
out
mov
icebp
adc
mov
movsb
cwtl
mov
mov
sub
cmpsb
movsb
jb
stos
dec
cmp
scas
dec
xchg
push
ret
dec
xor
mov
jg
aaa
jae
or
call
push
xor
mov
jbe
fisttps
push
insb
cwtl
push
adc
stos
lds
mov
aam
sub
cltd
jno
mov
jo
das
mov
xor
or
jecxz
push
data16
adc
xchg
xchg
notb
scas
and
lock
lea
adc
in
xor
mov
fadds
inc
loop
loope
mov
fiadds
mov
dec
dec
adc
xchg
rolb
inc
leave
adc
sbb
pop
sti
push
mov
mov
or
push
and
and
sub
jo
cmpsl
xor
push
mov
mov
iret
or
popf
sbb
pop
jmp
push
cmp
lods
in
shlb
aam
test
imul
pop
fsubr
mul
lcall
xchg
mov
jg
dec
mov
sbb
jbe
sbb
cmp
mov
jl
or
push
pop
mov
fstcw
ficomps
js
cmp
xchg
lret
clc
xor
mov
mov
into
jbe
xlat
xchg
add
or
and
js
stos
into
mov
sbb
je
jle
les
sub
xchg
out
xchg
testl
lcall
push
daa
loopne
push
and
and
scas
aaa
sbb
inc
mov
cs
sbb
cmp
pop
xchg
loop
add
cs
jecxz
adc
mov
sub
fisttps
sub
ljmp
dec
test
xchg
xchg
push
scas
and
sub
jl
in
dec
sub
push
test
popf
shlb
lock
xor
push
ficomps
jg
jno
ret
xor
mov
push
mov
or
movsb
mov
filds
lds
inc
pop
lods
test
cmp
and
daa
ja
lcall
mov
pop
xchg
push
movsl
fldcw
and
rclb
mov
mov
xchg
mov
dec
xor
fs
inc
pop
push
push
mov
fwait
test
xchg
push
and
mov
sbb
jne
orl
or
jne
in
xchg
jbe
pop
cmp
out
or
push
test
xchg
movsl
and
subb
add
cld
test
mov
or
lods
add
push
mov
and
cld
adc
mov
mov
test
cli
push
sbb
fisttps
aad
ficompl
sahf
int
fimuls
or
push
int3
pop
mov
jg
dec
pushf
cmp
lds
mov
loope
xlat
add
add
pop
push
pop
inc
inc
lds
in
mov
out
stos
movsl
sahf
idivb
jnp
mov
mov
cmc
mov
xchg
cmp
add
loope
sbb
mov
fdivl
stos
xchg
fldl
or
pop
pop
test
fistps
push
shlb
in
inc
mov
addr16
das
and
pushl
and
lods
loopne
nop
and
mov
dec
xchg
std
or
ret
pop
scas
mov
pop
pop
cmp
lds
mov
push
adc
insl
stos
shlb
jmp
lcall
imul
out
in
sti
scas
iret
and
movsl
int
das
xchg
mov
cmc
mov
ffree
das
xchg
mov
out
mov
or
ss
test
insb
sarl
gs
xchg
dec
jne
lret
lahf
sbb
jg
out
fisttpl
roll
mov
cmp
jg
bound
pop
lea
jbe
inc
mov
push
addb
jns
aam
lahf
movd
not
and
and
adc
cmpsb
xchg
adc
push
ret
ljmp
icebp
pusha
pop
pop
mov
xor
fidivs
adc
movsl
mov
mov
loopne
xor
mov
push
mov
das
fs
xchg
inc
xchg
test
or
cld
mov
loop
and
add
push
inc
popa
stos
push
pop
mov
sbb
ret
adc
cmpl
out
das
fsubs
sub
mov
test
push
int
mov
add
xlat
fidivl
rcr
loope
xchg
out
push
aad
addr16
xchg
out
cmp
shr
hlt
xchg
pop
ja
pop
pop
lea
outsb
push
adc
loopne
loope
cmp
outsl
jbe
mov
pop
out
cmc
insl
push
inc
ja
scas
cmp
repz
js
cmp
dec
or
sbb
in
mov
pop
mull
bound
inc
std
scas
dec
fneni(8087
daa
mov
les
jecxz
stc
loope
jg
xor
mov
das
outsl
or
aaa
mov
pmaddwd
adc
dec
sub
notb
jno
sub
imul
mov
hlt
nop
xchg
lcall
je
ret
sbb
loopne
scas
shrl
xor
cmc
and
inc
loopne
stos
mov
int3
mov
inc
scas
sbb
sub
shr
jmp
jbe
cld
mov
hlt
mov
insb
xor
gs
jae
fcmovbe
cmp
mov
dec
test
lcall
ret
sbb
jb
lock
and
mov
pop
sahf
pop
cmpl
cmpsb
scas
cmpps
mov
popf
jae
dec
push
imul
sbb
push
lret
fdivl
out
rol
mov
xchg
imul
out
enter
sbb
pop
sub
daa
pop
aam
lods
stc
fs
mov
push
pop
jecxz
pop
das
inc
jle
or
sbb
or
xor
std
pop
jl
movb
pop
fadd
xlat
xchg
adc
pop
push
cmp
cs
inc
jbe
cmpsb
cmp
mov
fs
clc
pop
push
push
test
and
hlt
jae
popa
jmp
pxor
ja
cmp
push
inc
fimuls
dec
sub
enter
dec
cmp
mov
or
pop
test
sbb
xor
pop
movsl
es
and
add
aad
mov
push
push
test
ja
sahf
pop
aam
jle
mov
inc
test
fs
mov
or
sbb
mov
jo
int3
sub
add
and
add
dec
inc
out
test
pop
xchg
and
sbb
imul
jge
add
fildll
popf
cwtl
mov
xor
pop
dec
push
imul
cmp
cmp
jnp
xchg
inc
in
mov
js
and
and
cs
dec
push
clc
test
sub
mov
inc
push
adc
push
cmpl
lret
push
test
clc
mov
rcrl
aam
fdivrs
jns
ficomps
stos
mov
cmc
pop
mov
xchg
sahf
sbb
cmpsl
in
dec
aas
int
mov
xchg
mov
push
shrb
sbb
pop
mov
xcrypt-ecb
cmpsl
or
sub
test
sub
cmp
mov
inc
popa
pop
jmp
pop
push
and
jmp
mov
pop
pop
mov
mov
lods
dec
mov
lock
pop
mov
sahf
mov
pop
mov
or
inc
stos
std
in
mov
dec
lea
sbb
jo
into
cmp
sub
adc
mov
es
dec
dec
addr16
cs
pushl
jge
sbb
cmp
xchg
adc
push
pop
pop
jmp
idivl
cmpsl
addb
or
cmp
mov
or
fstps
inc
add
pop
std
leave
sub
stos
fprem
xchg
mov
call
shl
icebp
mov
push
push
inc
mov
cmp
lock
or
daa
mov
and
add
into
push
fs
xlat
xchg
js
pusha
mov
mov
or
xchg
fucomip
leave
daa
cld
or
cld
faddl
sub
push
adc
jg
mov
push
lods
and
repz
mov
mov
hlt
in
jp
pop
adc
and
pminub
push
or
insb
dec
dec
jle
hlt
push
clc
mov
cwtl
imul
push
lret
push
fiaddl
cmpsl
or
test
rcrl
test
xlat
add
lds
adc
cmp
int3
outsb
fcoml
daa
mov
ret
push
int
mov
add
popa
ret
add
xor
test
pop
aam
push
sbb
inc
pop
movsb
hlt
repnz
idivb
inc
scas
push
jnp
add
nop
in
jae
cmp
pop
jp
xchg
mov
das
fcmovne
push
imul
push
xor
xorl
sbb
ja
int3
xchg
sbb
push
hlt
repnz
enter
or
dec
pop
adc
aas
mov
sti
repnz
out
fucom
lea
xor
insl
aaa
test
mov
jge
push
inc
jo
ljmp
ds
movb
shr
xchg
ret
xor
mov
cld
pop
les
sub
aas
ja
fs
jae
int
jbe
mov
lcall
mov
adc
cwtl
loope
ret
aam
dec
notb
adc
addr16
cwtl
insb
jnp
std
into
nop
jle
in
add
jp
je
or
out
loop
mov
mov
push
sahf
jno
dec
and
push
sub
pop
cmp
lds
xor
mov
shll
lahf
pop
jle
dec
add
dec
test
mov
mov
pop
popf
sub
stos
mov
cmpb
popa
cmp
test
ljmp
dec
pop
lcall
mov
stos
add
lret
mov
xor
testl
xchg
loope
inc
sub
insb
cmp
lahf
sub
cmp
cmp
dec
jnp
cmpsb
push
xor
mov
cs
imul
dec
outsl
clc
push
mov
sbb
inc
daa
and
fwait
push
fadds
push
sub
jae
pop
mov
daa
inc
imul
mov
ficoms
addr16
movsl
mov
jp
loopne
outsl
in
and
lods
ret
repnz
sub
fxch
xchg
add
sbb
fsts
inc
sahf
push
dec
cmpsl
std
sub
sti
movsb
and
leave
in
push
push
mov
call
mov
insb
mov
in
and
popa
mov
sbb
dec
xor
xchg
dec
add
jns
aaa
xchg
dec
mov
scas
cmpsl
jp
inc
cld
jo
sub
sub
inc
inc
into
jecxz
je
cmp
mov
xor
mov
stc
out
inc
jnp
out
jns
es
adc
in
sbb
pusha
jmp
es
jb
xor
mov
mov
adc
nop
fwait
dec
xor
adc
dec
lahf
add
push
jo
cmp
adc
mov
mov
push
les
push
cmpsl
push
cltd
mov
jmp
jge
add
cmc
or
outsb
stos
inc
repnz
mov
jns
lea
icebp
pop
pusha
pop
fdivs
mov
dec
jge
pop
or
jne
sbbb
lret
sub
push
rolb
adc
sub
mov
cmp
push
dec
pop
gs
shrb
std
out
mov
lcall
jge
cmp
mov
sbb
adc
or
cwtl
push
popf
push
imul
push
enter
jmp
jnp
sbb
lret
sub
add
push
enter
push
fdivrp
pop
cmpsb
outsl
aam
mov
sarb
adc
dec
dec
xchg
movsb
cmc
and
mov
test
mov
mov
sti
arpl
repz
push
ljmp
cmp
sbb
and
sub
icebp
xor
aaa
lods
addr16
push
pusha
sbb
ret
pop
addb
sub
and
shl
or
sub
insl
pop
loope
cmpsl
jb
push
aad
inc
ss
push
repz
ljmp
xchg
dec
aam
fidivs
sbb
jo
mov
sbb
dec
push
add
or
jmp
fcmovu
pushf
jne
insl
rol
pop
add
shr
icebp
mov
push
popf
sbb
test
or
jnp
inc
xchg
adc
movsl
cmc
mov
lcall
andl
ror
jp
lret
loop
icebp
jno
jle
sbb
icebp
repz
push
outsl
dec
cltd
xchg
icebp
loopne
out
dec
xor
xchg
gs
or
cs
bsr
movsl
mov
xor
adc
push
mov
pusha
xchg
add
fisubrs
aam
mov
nop
jne
inc
mov
xchg
mov
pop
stos
jl
insl
fsubr
adc
cli
sbb
add
jl
psraw
xchg
pushf
jnp
dec
clc
mov
outsb
stos
and
dec
push
ret
imul
mov
and
cmp
pop
dec
fsub
inc
pop
add
xor
bound
mov
cltd
mov
fst
jl
xchg
div
addb
call
cld
pop
jo
jg
lds
ficoml
fdivr
ret
fnstcw
js
iret
fsubr
xor
andl
jnp
sbb
dec
test
aas
cmpsb
inc
add
xchg
es
mov
inc
out
add
cltd
stc
jmp
daa
rcll
testl
and
fsubl
pop
enter
xor
or
adc
imul
sbb
xchg
and
ljmp
pop
add
imul
es
mov
jbe
xchg
inc
mov
out
fnstcw
cmp
push
insl
or
push
dec
cwtl
rcl
inc
adc
fsubl
aad
lret
sub
shlb
sub
stos
mov
mov
repz
pop
sub
jl
les
mov
loop
mov
xchg
mov
adc
fisttpll
rcll
jp
cli
pop
jge
pop
adc
fldl
ljmp
incl
mov
inc
pop
clc
mov
sbb
and
call
inc
out
inc
sbbb
pop
popf
out
cmp
inc
jb
testl
stc
sbb
mov
cmp
or
ret
or
inc
cmc
out
sahf
cs
mov
pop
cmpsb
icebp
sub
aas
enter
nop
add
in
jl
inc
jnp
fistps
xchg
jno
repz
icebp
lea
mov
sbb
test
xor
aaa
stos
sarb
pop
push
inc
cld
loop
mov
mov
mov
sub
or
ljmp
push
or
stos
sbb
or
int
roll
bound
stos
popl
out
notl
sub
jecxz
dec
fdivp
pop
xchg
xchg
scas
or
es
fdivr
ljmp
fidivl
dec
repz
daa
push
sbb
movsb
outsl
mov
orps
mov
stos
dec
hlt
in
lock
jo
arpl
in
cli
jbe
xchg
add
call
sarb
or
cmc
mov
fcoml
cmp
or
mulb
nop
rcl
inc
jle
lds
sti
push
sbb
mov
cs
rcrl
pop
jns
xor
push
hlt
cmp
mov
and
faddl
loope
imul
jbe
add
adc
push
loopne
and
xchg
sti
mov
add
imul
or
fsts
enter
rclb
stos
mov
mov
mov
cmp
scas
sub
mov
push
cmp
or
mov
scas
fcmovnu
lods
cmpsl
push
imul
lcall
sub
add
outsb
int
insl
test
sbb
and
incb
lock
lods
jmp
mov
loopne
xor
dec
dec
mov
lods
xor
test
adc
rolb
loopne
xor
mov
add
fmul
mov
cmpsl
in
xor
pop
insl
ss
mov
dec
xor
xor
push
jne
sub
add
divl
and
gs
mov
stc
pop
pushf
mov
and
inc
jp
xor
sub
outsb
jb
mov
and
data16
repnz
movsl
xchg
sbb
out
fisttpl
mov
loop
or
pushf
mov
mov
push
sti
pop
mov
in
push
fldt
ret
mov
outsb
sub
sub
and
xorb
ret
mov
int3
add
idiv
mov
adc
jl
cmpsl
lcall
add
call
arpl
push
cwtl
add
iret
addr16
sub
mov
std
xor
push
and
mov
mov
jae
jo
push
xchg
iret
in
push
out
pop
cmp
ficoml
push
aaa
lock
pop
sub
shll
jle
adc
sub
mov
pop
and
fdivrl
push
out
or
ret
xor
sbb
mov
push
stc
in
out
and
xor
push
inc
out
add
xchg
mov
mov
incb
push
movsl
fwait
jl
push
mov
mov
es
mov
arpl
out
mov
cmp
add
xor
dec
sbb
call
cli
mov
jp
fmull
fs
cld
jne
sbb
xlat
scas
mov
test
dec
push
fimuls
shlb
cmc
mov
and
mov
xchg
mov
push
push
sbb
cli
add
push
add
mov
cmp
inc
f2xm1
xchg
jge
hlt
dec
enter
rorb
flds
idivl
dec
mov
mov
xor
pop
ja
dec
std
inc
enter
test
popf
jne
jno
cmp
les
xchg
pop
push
cmp
fnsave
xchg
roll
pop
mov
adc
push
sbb
or
imul
push
mov
clc
sub
insb
into
out
aad
sub
es
adc
inc
mov
stos
les
cmpsl
repnz
ds
push
dec
xor
xlat
testb
aaa
dec
mov
or
int3
scas
inc
adc
subb
jbe
mov
dec
ds
dec
loop
cmpb
xchg
add
ss
popf
repnz
cld
lret
lret
mov
in
in
sbb
and
xlat
out
mov
cld
pop
arpl
lea
mov
xor
jns
jb
pop
and
mov
mov
je
inc
sub
out
mov
pop
test
pop
sub
aas
jb
sub
cs
and
adc
mov
enter
ljmp
outsl
adc
mov
push
jo
lods
mov
filds
xor
push
fistpl
fwait
pop
mov
push
rcrl
call
inc
ja
dec
std
addr16
imulb
mov
lahf
pusha
jb
or
mov
or
cli
mov
mov
scas
jbe
pop
inc
jns
sbb
test
andb
lea
out
sbbl
mov
add
sahf
push
dec
es
push
xor
mov
loop
sbb
add
lret
xchg
or
pop
sub
add
int3
insb
cmpsb
cli
mov
fldl
mov
lock
jae
mov
push
pop
and
rorb
loopne
in
sti
mov
xchg
add
hlt
movsb
mov
lcall
mov
sbb
mov
push
add
dec
or
das
test
adc
inc
or
inc
push
outsl
xor
imul
sbb
dec
xor
xchg
rcrl
lcall
xor
mov
out
iret
test
adc
sbb
and
lea
add
push
jnp
dec
test
lret
pop
jp
ret
adc
adc
lret
cld
mov
inc
addr16
ficomps
push
jp
adc
and
lods
adc
inc
or
fsubrs
push
mov
fsubr
push
or
gs
xchg
sub
fidivs
mov
push
mov
pusha
xor
cld
push
sbb
ret
bound
fbld
scas
jnp
add
mov
cwtl
test
rorl
xor
sahf
xor
cld
pushf
adc
jae
xchg
mov
lcall
imul
sub
das
pop
jg
and
cmp
cmpsb
ret
and
fwait
std
pop
jae
test
xchg
push
out
ror
fs
inc
repz
jecxz
mov
or
pop
icebp
in
add
imul
ret
push
adcl
data16
sbb
in
insb
mov
in
push
xchg
addr16
sub
loop
loope
sbb
pop
sub
mov
or
pop
mov
pop
orl
xlat
mov
insl
sub
mov
ds
xor
mov
insb
inc
fwait
cmp
pop
std
outsl
testl
push
push
scas
jmp
xor
mov
xchg
data16
cmpsb
lods
cmp
jnp
jb
mov
pop
mov
and
je
or
arpl
ret
push
sti
and
jne
push
adc
or
rclb
pushl
in
pop
testl
mov
mov
xchg
or
sbb
inc
mov
xorl
xor
sbb
popa
out
shl
lret
and
sub
or
xor
test
add
adc
rcll
cs
add
mov
arpl
sbb
sahf
scas
push
fnstsw
adc
sub
ret
testb
ret
inc
loop
sti
xchg
dec
test
loopne
adc
jmp
ret
pushl
nop
fxch
ja
or
pop
addr16
adc
scas
jbe
sbb
mov
add
rcr
push
sbb
gs
cmp
sub
inc
jne
dec
sbb
or
and
lret
fdivr
addl
add
xchg
cmp
ds
lret
cmpsb
test
xor
xchg
out
xchg
pusha
ret
pusha
outsb
ljmp
jb
pop
movsb
mov
push
push
aaa
test
out
push
aaa
jle
es
cld
lock
jmp
dec
jnp
xchg
pop
das
neg
sub
or
jnp
mov
in
shr
cwtl
aaa
sti
inc
mov
ret
dec
jbe
add
insb
mov
flds
adc
outsl
data16
or
xor
dec
mov
fcmove
test
dec
mov
mov
in
fimull
push
pop
movsb
ficompl
xor
popa
jb
aas
shl
cltd
add
test
jle
cmp
xor
popf
mov
fcomp
das
xor
loop
mov
add
push
std
push
cmc
gs
js
jge
fldenv
cmp
push
jne
xchg
mov
negl
loope
test
movsl
jge
cmp
cli
lahf
arpl
mov
arpl
repnz
cmpsb
add
jne
sub
cmp
je
adc
insl
mov
mov
es
cmp
jecxz
mov
cmp
dec
push
push
xchg
les
shll
sub
pop
sbb
scas
sub
rcrl
negb
loopne
cmp
adc
int
mov
lret
or
dec
fadds
push
int
dec
subb
test
fistpl
clc
jns
int3
push
dec
xchg
rclb
roll
dec
mov
sbb
jns
xor
jne
push
xchg
and
shlb
cmp
rcrl
cmpsb
pusha
daa
aam
mov
cli
fbld
push
push
mov
xchg
xor
cltd
adcl
xchg
mov
push
ljmp
mov
loope
popf
mov
push
adc
mov
addr16
xor
jo
xchg
xchg
push
cmp
icebp
fidivrl
cmpsl
pop
leave
xlat
cmpsl
daa
sbb
shlb
iret
jns
mov
mov
inc
movb
cwtl
sbb
fnstenv
aam
push
adc
inc
adc
cmp
es
or
cltd
je
pop
vmread
fisubs
fwait
jp
mov
mov
adc
add
sub
jne
filds
xchg
clc
call
pop
and
pop
aaa
ffree
sbb
or
xorb
xchg
icebp
push
addb
lea
mull
inc
aaa
push
pushf
stos
into
or
xchg
lret
and
mov
or
jnp
xchg
mov
push
pop
ja
sarl
xor
fimuls
sub
mov
push
inc
fs
mov
arpl
hlt
sub
push
iret
dec
jmp
fsub
jmp
sarb
maskmovq
imull
or
xchg
inc
mov
xchg
pop
das
stc
ret
movsl
and
aaa
outsl
jns
adc
pop
and
aam
and
dec
divps
test
jb
mov
cmp
push
mov
insb
ds
push
xchg
rolb
pop
mov
movsb
ret
cmp
fcomp
int3
xchg
xchg
lea
sbb
jae
enter
roll
and
ficoml
imul
push
arpl
push
testl
cltd
mov
xor
sbb
push
jb
xchg
das
and
loop
pand
cs
jmp
dec
mov
xchg
adc
popf
shrb
pushf
xor
idivb
aas
dec
int3
fmulp
test
loop
sub
push
dec
ficoms
mov
push
jnp
lea
add
ds
ret
pushf
push
sub
testb
aas
js
out
loope
cli
jmp
pop
push
rcrl
sub
je
daa
sbb
lret
in
push
ds
push
push
js
dec
rolb
jno
cmp
cld
pop
lret
aam
or
fidivs
mov
iret
dec
cltd
es
jp
ljmp
add
pop
xchg
out
addr16
lahf
jne
sub
sub
lcall
lods
cmpl
mov
push
mov
imul
xorb
iret
rcr
jno,pn
mov
fcompl
jne
push
je
loop
sti
iret
or
das
or
adc
sar
add
testb
test
pop
daa
lods
jb
call
jo
mov
add
ret
push
lods
sti
pop
add
mov
cmpsb
xchg
inc
lahf
daa
imul
mov
jl
aam
sub
mov
lahf
mov
jb
test
daa
add
rcr
mov
loop
sarl
adc
mov
sub
pop
xor
cld
mov
xchg
mov
inc
mov
test
lahf
dec
lods
aaa
mov
int
mov
cmp
mov
xlat
push
rdpmc
je
in
cmp
pusha
add
and
ret
hlt
sbb
jns
lea
inc
nop
and
lret
and
sbb
stc
mov
jo
push
sbb
js
dec
cli
and
adc
and
mov
xor
and
sbb
push
or
mov
mov
aad
cltd
fadd
fdivl
filds
fdivr
insl
mov
popf
in
fstpt
out
ds
nop
add
push
dec
pop
or
inc
cwtl
xchg
into
mov
and
xor
jb
adc
push
gs
lcall
add
add
xlat
das
out
imul
push
fs
fcoml
or
cmp
and
sub
mov
and
xchg
ss
mov
push
jnp
movsl
add
or
mov
add
sub
pop
mov
loope
lds
mov
fsubrl
xchg
in
add
stc
idivl
jne
push
xchg
mov
push
enter
pop
push
adc
call
cmp
movsl
aam
repnz
xchg
xchg
in
clc
stos
hlt
pop
cmp
xorb
adc
xchg
ss
cld
mov
inc
dec
sub
insl
xchg
into
inc
push
adc
sbbb
xchg
inc
jo
fidivrs
leave
jl
pop
lods
pop
jns
sub
cwtl
jnp
push
shl
cmp
xor
pop
repnz
or
in
or
or
arpl
loop
icebp
push
push
shl
push
notb
psubsw
leave
cmpsb
mov
dec
outsl
mov
test
ret
ds
pop
ja
cmp
pop
icebp
and
std
mov
add
popf
mov
arpl
scas
mov
shr
jbe
mov
or
mov
adc
fisubl
testb
lods
loop
inc
adc
xor
pop
push
jecxz
aaa
xlat
sbbb
pop
pop
int
mov
popf
add
rcr
xchg
mov
out
dec
cmp
mov
cmc
cmp
insb
and
cmp
fstp
xor
bound
movsl
into
fsubrl
sbbl
mov
mov
cmpsb
adc
jmp
ret
lea
dec
push
test
loope
sbb
lods
and
or
fbld
push
mov
mov
in
mov
sbb
mov
jle
das
cmp
popf
ffreep
fcom
lds
imul
pushf
ret
std
scas
pop
xor
outsb
rorl
jecxz
pop
iret
dec
clc
xchg
cmp
push
add
pop
xor
inc
xchg
push
test
sub
shlb
push
test
mov
or
dec
test
leave
stos
and
inc
pop
sbb
sbb
inc
and
stc
mov
nop
dec
push
xlat
leave
ror
or
rcr
fbld
add
mov
notb
daa
das
movb
pop
add
icebp
jl
or
pop
cli
push
into
cmp
mov
pushf
cs
add
or
daa
es
jnp
inc
inc
sbb
shll
sbb
mov
pop
sar
subb
mov
jno
jno
lock
xor
push
imul
bound
pop
imul
push
pushf
je
ds
leave
enter
popa
aas
jmp
stos
sarl
out
mov
aam
movsl
cs
pop
cmp
and
loop
push
or
or
stc
mov
lcall
sbb
movsb
mov
into
dec
mov
add
cmp
cs
stos
into
imul
repz
pusha
jmp
adc
ret
sub
mov
xchg
inc
cli
cmp
shll
ja
adc
sbb
pop
test
fidivrs
adc
jno
cld
adc
cmpsl
and
pop
xor
and
sub
stc
aad
sti
repnz
dec
js
or
aaa
pop
out
popa
aam
daa
test
push
std
clc
popf
fwait
xchg
xchg
fnstenv
cmpsl
test
sbb
sbb
lcall
cld
mov
dec
mov
jbe
cs
jecxz
aad
pop
rorl
pusha
lcall
flds
cmp
insl
inc
test
sub
into
add
xchg
in
fistpll
orl
aas
shl
repnz
je
andl
sarl
movsl
test
push
or
xor
sti
ret
mov
dec
inc
push
xchg
add
cmpsb
subb
mov
aaa
les
mov
popf
and
movsl
iret
push
call
xchg
or
cmp
vunpcklps
dec
sub
loopne
call
cmp
cli
dec
add
lods
clc
dec
xchg
jnp
pop
cmc
scas
xchg
jb
insl
test
jno
es
jo
sub
inc
pusha
inc
push
call
mov
imul
dec
cli
add
fnstenv
jmp
sbb
mov
cld
loop
xchg
int3
add
fcmovnb
cltd
testl
lods
arpl
pop
in
addl
sbb
jbe
stc
sbb
out
movsl
stos
arpl
subl
ja
push
stos
cmp
push
std
iret
xlat
pop
xor
outsl
dec
mull
xor
ficompl
inc
lcall
hlt
pop
out
add
data16
push
mov
mov
push
lcall
pop
push
jecxz
pushf
mov
test
jl
cmc
arpl
loope
gs
dec
sub
dec
adcl
xchg
xlat
gs
dec
push
mov
int
fiadds
repnz
ret
push
shrb
inc
lock
testl
pop
xchg
dec
xor
xor
cmp
aaa
xchg
adc
push
pusha
icebp
adc
push
mov
imul
xor
fidivrs
aam
mov
in
jbe
aam
shl
ret
mov
mov
arpl
and
mov
adc
test
outsb
jae
cs
xchg
jmp
insl
and
test
ss
push
jecxz
movsb
dec
xor
jns
aad
add
adc
sub
nop
push
add
in
shlb
roll
push
sub
cmp
into
or
outsl
daa
repz
and
jl
jmp
fidivl
mov
jae
mov
cmp
pop
push
data16
notl
incl
mov
xor
mov
addr16
xchg
lds
rorl
adc
jo
or
xchg
stos
jmp
int3
jae
push
sahf
sbb
cmp
xor
jle
adc
scas
loopne
xchg
repz
or
outsb
imul
xchg
rcrl
and
ss
ss
test
pop
je
insl
repz
push
push
aas
lret
xchg
xchg
dec
or
cmpsl
mov
out
cwtl
pop
jns
repnz
mov
add
test
mov
adc
cmpsl
pop
cltd
movsb
in
mov
into
popf
pop
xchg
cmp
into
lcall
jmp
xor
cs
mov
mov
dec
aam
cld
pop
call
pop
jecxz
mov
jmp
cwtl
cmpsl
inc
jg
repz
out
jb
push
sbb
xlat
sahf
popa
adcb
pop
sar
mov
fidivrs
mov
mov
bound
repnz
cmc
xor
lcall
dec
js
push
ret
xchg
cwtl
sbb
roll
int
or
push
dec
mov
test
outsb
outsb
add
pop
insb
pop
inc
mov
jg
jge
shlb
out
add
inc
sbb
mov
andb
cmp
mov
loope
sub
pop
mov
nop
mov
cmpsb
std
cmp
adc
js
pop
mov
ja
push
adc
vfmsub132ps
outsb
das
std
in
dec
ret
add
push
dec
mov
aad
lret
cmpsl
stos
mov
popa
mov
rcl
inc
dec
inc
lds
cld
shlb
adc
sub
dec
mov
dec
lret
and
jp
dec
sub
cltd
fnstsw
sbb
icebp
xchg
push
arpl
and
ja
aaa
mov
cld
hlt
mov
stos
push
in
leave
pop
adc
xlat
movsb
pop
inc
ss
movsb
aas
in
cmp
stos
add
dec
popa
test
push
jbe
mov
aas
mov
jp
pop
scas
pop
mov
xlat
aad
out
mov
js
shll
sahf
adcl
test
xchg
inc
cmpsl
mov
dec
mov
push
cmp
adc
fcmovne
sbb
fs
stc
xchg
xchg
das
or
sub
lahf
mov
imul
mov
xchg
sbb
inc
sub
cltd
orb
in
or
popf
aas
daa
mov
loop
mov
and
pop
sbb
push
lret
out
fidivrs
sbb
ss
mov
mov
sbb
inc
sti
mov
sub
mov
repz
pop
cmp
xor
testl
jecxz
iret
popa
sbb
jp
shlb
out
pop
add
lods
outsl
push
popa
push
out
std
push
mov
subl
fimull
sbbb
jmp
mov
push
pushf
in
js
call
in
and
cwtl
insl
rorb
inc
and
cli
fidivs
js
fildll
movsl
or
das
cmpsb
adc
nop
stos
test
es
into
frstor
in
adc
cmp
inc
add
push
loopne
fimuls
sub
mov
mov
pop
inc
sbb
pop
call
add
sti
int3
jnp
mov
das
jle
mov
rcr
dec
mov
mov
pop
mov
sbb
out
loope
push
jbe
xor
add
mov
loope
push
push
cli
mov
push
inc
fildll
lsl
mov
xor
add
pushf
pop
dec
test
insb
cmp
repz
movsb
es
out
outsl
pmulhw
in
jl
sbb
jecxz
xchg
jecxz
mov
cmp
add
inc
mov
je
sub
into
adc
cmp
add
lret
add
xor
subl
and
jae
mov
jno
int3
sub
out
inc
js
inc
or
xchg
sub
aaa
xchg
cmc
in
jmp
pop
insl
mov
mov
push
sbb
ret
fmull
jge
popf
inc
out
fmull
jle
aam
dec
jbe
xor
sbb
dec
ds
je
test
mov
clc
fdivs
fsubl
pop
pop
mov
jl
test
mov
mov
adc
mov
cmp
push
fisubrl
adc
inc
pusha
pusha
mov
scas
mov
fs
aad
dec
inc
lret
fiaddl
adc
xlat
lahf
sub
adc
push
mov
stos
fnsave
mov
lahf
xchg
jbe
pop
xchg
cmpsl
fists
pushf
cmp
add
push
mov
xor
add
daa
jo
push
icebp
jns
hlt
icebp
lcall
imul
push
xchg
sarl
lea
xchg
adc
rcrl
ret
outsb
push
test
inc
imul
faddp
cmp
sub
xchg
push
lods
mov
push
cld
js
xchg
or
daa
lcall
fcomps
lods
xchg
pop
jnp
out
in
add
in
sarb
xor
idivl
cmp
hlt
pusha
xor
aas
dec
sbb
pop
pop
xchg
sbb
ret
jl
imul
rol
or
sbb
pushf
mov
cmpsb
fcompl
xchg
sbb
out
ffree
pop
int3
ljmp
push
push
push
mov
sbb
les
rclb
testl
mov
mov
pop
out
mov
mov
xchg
pop
push
sbb
cmp
adc
cmpsb
or
hlt
push
cltd
add
bswap
push
push
testb
test
mov
in
dec
pop
and
rorb
scas
and
mov
dec
sub
ss
jmp
into
lds
dec
in
loopne
rcll
shlb
movsl
popa
divl
adc
jbe
rclb
test
mov
inc
leave
pop
repz
mov
dec
or
aaa
out
mov
ret
push
adc
inc
or
jmp
pusha
inc
xchg
rcrb
cmp
cmc
inc
and
enter
xor
inc
push
ret
adc
sbb
sub
int3
test
and
andl
xchg
adc
daa
pop
inc
pop
rcl
daa
dec
mov
rolb
nop
hlt
push
test
push
pushf
shll
sub
or
ljmp
mov
mov
shrl
in
jo
or
add
push
mov
xchg
mov
sarl
outsl
mov
xchg
sub
stos
loope
mov
xor
sub
adc
lds
jbe
xchg
pop
loope
pushf
in
ds
pop
lds
xor
pusha
mov
data16
xchg
xlat
xlat
cmp
lods
mov
sbb
cmpsb
mov
mov
mov
stos
aas
xchg
popf
outsb
shl
cmpsl
cmpsl
ja
xchg
je
sub
xchg
scas
movsl
lods
out
stc
cmp
sub
mov
iret
sbb
adc
inc
pop
fdivrl
xor
or
xchg
in
sub
loopne
mov
or
or
and
stc
push
inc
fisttps
loope
mov
imul
inc
ja
xchg
inc
in
mov
hlt
mov
cltd
jmp
int
jle
mov
jle
pop
xlat
push
mov
jmp
pop
mov
aad
test
mov
cltd
std
xor
ret
out
sbb
repz
jae
popf
loop
cmp
loop
sub
in
mov
cmp
cli
mov
mov
aad
loopne
frstor
inc
cmpl
mov
cmpl
push
in
inc
out
cltd
jbe
and
test
pop
aaa
and
push
fbld
stos
xchg
pop
add
jecxz
jne
push
xchg
imul
stos
or
push
lea
mov
push
jle
ss
imul
imul
stc
es
xchg
loopne
into
mov
xchg
jp
clc
scas
jbe
js
push
shll
stos
js
or
ret
adc
push
mov
ljmp
pop
xchg
fwait
jbe
jb
cs
test
xchg
jmp
out
inc
sbb
fimuls
mov
fwait
bound
aas
fmull
fs
ja
xorl
iret
bound
test
push
pop
mov
incl
xor
nop
cmc
decb
repz
out
xchg
jl
addr16
popf
andb
xchg
aaa
adc
lds
cltd
sub
lahf
cmp
in
fidivl
pop
mov
push
xor
shll
hlt
adc
mov
aam
ret
jg
ds
cmpsl
mov
sub
in
inc
sub
push
imul
ret
and
sub
das
cmc
pushf
js
push
dec
mov
xlat
mov
cwtl
ret
xor
mov
fdivrs
xor
dec
mov
mov
imul
sbb
in
ja
mov
inc
lods
mov
sarw
mov
mov
dec
je
pop
jge
push
cmpsl
fdivs
jae
pop
jecxz
in
fs
inc
dec
movsl
popf
dec
lret
push
ss
xor
adcb
cltd
add
inc
gs
movsb
sbb
leave
add
lahf
data16
add
test
jmp
lret
imul
int
iret
pop
dec
stc
jne
int
out
jle
xchg
mulb
mov
lock
inc
je
lods
roll
cwtl
ret
popf
jg
shll
push
movsb
aam
xorb
xchg
mov
xor
orl
pop
add
fcoms
rol
mov
push
lods
add
mov
aam
out
mov
sbb
pop
xchg
xchg
fstpt
and
sbb
inc
xchg
mov
fs
mov
xor
clc
movsb
mov
mov
sbb
call
lock
loopne
test
push
mov
cmp
or
sub
scas
add
ucomiss
rolb
scas
sub
mov
mov
into
out
leave
out
dec
lahf
imul
daa
nop
push
or
fwait
out
adc
xor
test
cmp
xor
mov
mov
push
aam
lret
cmp
imull
pop
adc
mov
cmp
or
es
dec
mov
lds
dec
sbb
jo
mov
xor
pop
fistpll
out
test
insl
in
xor
pop
aaa
sub
imul
pop
cmc
push
shrl
mov
movsl
dec
or
in
xor
jp
xchg
fildl
jno
subb
outsl
shrb
gs
insl
jo
jnp
push
jns
out
call
or
aam
mov
lret
das
clc
mov
xchg
jno
mov
les
mov
mov
push
addr16
add
in
xor
shlb
pop
cld
addr16
repnz
xchg
mov
cmc
stc
mov
sub
das
decb
xchg
fdivp
negl
mov
pop
mov
shlb
mov
push
nop
cmp
and
nop
clc
dec
in
addr16
mov
incb
addb
rolb
sub
push
xor
adc
mov
push
xchg
mov
rcl
cwtl
mov
stos
mov
push
adc
incb
cmp
add
adc
sbb
imul
repz
push
arpl
dec
fs
leave
in
mov
fildll
cmc
imul
pop
or
xor
cmovg
subl
cltd
mov
hlt
cmovae
mov
ss
jmp
fsubp
jecxz
mov
out
fstp
adc
data16
test
hlt
dec
out
sarb
fistps
jge
cmp
das
lea
dec
and
sub
push
dec
fidivl
cmpsl
dec
cmp
test
inc
cld
imul
cmpsl
loope
lret
jno
loopne
mov
clc
mov
lcall
cli
mov
xchg
and
lahf
fstpt
and
dec
cmpsl
lcall
cmpsl
popf
dec
movsl
mov
xchg
adc
stos
cltd
das
pop
lds
inc
add
lea
in
push
fsubr
rcl
pop
add
push
test
push
cld
loop
adc
push
mov
xchg
mov
and
cs
mov
lods
xor
pusha
xchg
xchg
or
pop
into
xchg
add
scas
mov
fdivl
loopne
add
push
push
das
fiadds
push
decl
sub
mov
iret
cmc
mov
mov
mov
faddl
jg
mov
xchg
sub
out
cmc
and
jmp
dec
jae
dec
in
enter
imul
inc
push
sti
les
cmp
imul
push
in
rcl
fwait
js
loopne
jmp
cmp
mov
jo
mov
push
arpl
ja
mov
leave
lods
pop
pop
xchg
orb
shll
xor
xor
stc
mov
popl
push
cmovne
aam
sub
inc
fldl
fcmovu
pop
push
repnz
jge
jae
inc
ja
inc
call
sub
mov
faddl
xchg
dec
je
insl
test
out
mov
mov
ret
dec
mov
mov
ret
add
mov
int3
or
cltd
das
sub
cmpsl
popa
cmp
sub
cmp
aas
sub
cmc
xor
jno
mov
or
fldl
loop
lcall
pop
mov
push
push
pop
sar
sub
sbbb
push
sub
pushl
push
cld
rclb
aas
ret
out
es
out
mov
nop
out
test
hlt
mov
add
popa
gs
xchg
bnd
sub
ror
ja
jg
lahf
orl
cltd
filds
in
mov
rcrb
inc
pop
insl
testl
mov
fdivp
mov
stos
lret
pop
aad
shrb
push
mov
cmp
fwait
dec
pop
or
clc
sub
test
push
adc
test
shlb
jle
in
adc
or
xchg
inc
mov
cmp
aas
sbb
cmc
adc
ficompl
pop
je
lea
and
mov
mov
pop
fldl
sub
pop
add
outsl
mov
mov
inc
out
std
jne
and
jg
cmp
loopne
and
push
inc
or
adc
mov
ja
repz
fbld
mov
xchg
jecxz
std
push
and
xor
mov
out
cmp
xor
xchg
fisubrs
push
sahf
gs
mov
mov
das
sahf
pop
lds
or
adc
mov
insl
outsl
hlt
cld
push
mov
mov
pop
add
sbb
jnp
ret
xor
adc
xlat
pop
stos
fwait
aad
jp
in
mov
cmp
repnz
imulb
mov
std
sar
xchg
cmc
sbb
out
shl
js
stc
jbe
jo
mov
fidivl
jae
push
pushf
sarl
call
jmp
fisubs
pop
leave
icebp
mov
movups
pop
dec
ljmp
js
inc
cmc
mov
add
fxch
xchg
iret
xchg
lret
cwtl
ds
add
insb
push
in
jmp
cmp
or
jne
ret
outsl
in
xchg
pop
inc
fistps
inc
enter
mov
and
mov
mov
testl
mov
aas
cmp
cmpsb
lods
xor
jae
fisubrl
fmuls
xchg
mov
imul
loop
mov
cmc
stos
nop
dec
lds
std
jbe
js
pusha
lock
int3
jbe
mov
gs
dec
xlat
pushf
shlb
push
shll
cmp
and
fwait
sbb
pop
mov
sbb
mov
mov
data16
mov
mov
sub
in
addr16
pop
pop
lods
inc
dec
sbb
lret
fucomp
les
pop
fbld
sti
push
dec
fmuls
pop
imulb
add
mov
pop
scas
scas
or
cmpsl
loop
sub
mov
daa
mov
dec
pop
hlt
pop
roll
or
pxor
inc
mov
cltd
and
pop
inc
adc
mov
pavgb
jecxz
pusha
lcall
dec
cmpsl
sbb
push
inc
movsl
dec
in
nop
dec
stos
xchg
movsb
xorl
mov
mov
data16
pushf
std
mov
mov
loope
dec
xchg
jnp
inc
movsl
in
arpl
mov
jg
jle
mov
jae
sbb
ja
sbb
mov
insl
sub
push
cmpsl
jle
add
test
jmp
mov
insl
inc
jnp
icebp
jp
pop
sbb
xor
inc
repnz
push
adc
sbb
bound
xchg
ret
jo
ror
or
xchg
test
popl
mov
sub
icebp
pop
pop
das
les
push
stos
pop
insl
push
add
dec
xchg
mov
adc
sub
out
movl
mov
add
add
inc
xchg
mov
adc
ja
and
sub
dec
adc
int
push
fadd
and
loope
sub
jne
push
inc
fsubr
adc
xchg
mov
int
sahf
je
sbb
xchg
repnz
dec
iret
mov
sub
mov
push
inc
test
sbb
mov
mov
add
mov
shr
push
into
sbb
push
cli
jecxz
xchg
add
xor
cwtl
movsb
invd
jo,pn
cmp
mov
jg
out
jb
cmp
movsl
mov
xchg
jmp
icebp
inc
lcall
xchg
sbb
cmpsl
pop
mov
cmp
hlt
and
push
cmp
lock
pop
in
pop
push
outsl
pop
push
cmc
stos
stos
inc
ss
dec
xor
das
icebp
out
lock
icebp
sahf
ficompl
fdivrl
or
lock
jp
mov
daa
lahf
jo
repnz
popa
shl
je
call
outsl
adc
xor
movsb
push
lds
and
inc
adc
or
jp
push
mov
addl
sbb
repz
jne
les
fistps
and
in
stos
iret
outsb
pop
out
out
xchg
sub
cmpsl
mov
outsb
jae
pop
mov
addl
mov
stc
sahf
inc
adc
pop
into
ret
sti
fistpll
addr16
mov
push
xchg
xchg
fwait
push
mov
sar
mov
sbb
adc
xchg
push
leave
pop
xchg
lock
pop
push
jle
mov
lods
push
cltd
push
sarb
push
cmp
inc
and
sub
dec
movsl
lret
pop
pop
push
dec
push
dec
push
popa
inc
sahf
cmp
mov
or
jo
push
mov
mov
inc
cmp
iret
pop
sbb
jg
add
nop
add
std
das
and
pop
cmc
test
mov
sbb
sub
fbld
test
cmpsl
out
inc
iret
leave
xlat
jg
shlb
aas
clc
jne
adc
mov
aad
lret
test
xlat
jnp
insl
mov
icebp
pop
push
lcall
pop
pop
arpl
in
jl
mov
mov
inc
and
daa
sbb
add
mov
xchg
mov
mov
repnz
mov
pop
jns
push
in
lea
pop
xor
cmp
mov
aad
pop
add
and
dec
lea
in
int3
inc
adc
mov
dec
into
jnp
jne
arpl
lret
in
jnp
cltd
inc
jmp
jp
inc
test
adc
je
ja
int
sub
fs
outsl
shl
inc
sti
sbb
and
sbb
movsb
pop
adcl
xchg
daa
loope
subb
inc
lahf
js
scas
or
xchg
cld
push
mov
sbb
test
aam
or
fsts
scas
pop
fnstenv
cmpsl
jno
sbb
fildll
push
jo
sbb
test
dec
cmp
decb
pop
or
mov
mov
or
ficomps
adc
and
ret
mov
in
data16
sbb
xor
insl
jle
stos
xchg
cld
daa
fs
movsb
dec
or
sahf
pop
mov
mov
enter
xchg
sti
loope
js
dec
and
fs
dec
cmc
out
aas
cltd
or
pushf
ret
add
test
fistl
jns
sub
push
push
mov
mov
rcl
fldt
inc
into
push
inc
fmuls
adc
fdivrs
pop
xchg
jbe
push
imulb
pop
or
jmp
cltd
lods
push
rorl
sbb
pusha
insb
sub
jo
loop
rcrl
pmaxsw
sub
cli
loope
push
xor
int3
hlt
roll
and
add
negb
sub
xor
ss
pop
das
jo
arpl
mov
mov
aam
push
cli
sub
jo
sbb
and
mov
mov
adc
adc
in
mov
das
add
push
lcall
push
lret
cmp
insl
lds
pop
mov
lods
bound
adc
stc
adc
jb
mov
into
pop
data16
mov
mov
jbe
ret
cmpsl
adc
insl
sub
outsb
jp
jne
cmp
inc
mov
pop
test
jo
mov
stos
out
dec
push
lret
scas
cwtl
insl
out
jne
push
stos
in
cmp
cmpsl
out
xor
mov
lcall
aad
jl
fcos
subl
jmp
aas
ret
jmp
sbb
out
cmpsl
jge
test
stc
sub
insb
inc
add
enter
mov
mov
lock
jbe
jge
imul
jge
lcall
iret
mov
jecxz
out
icebp
push
dec
shlb
jb
data16
jo
lds
loopne
jne
push
dec
mov
es
push
inc
adcl
push
and
shll
fldt
hlt
cwtl
nop
adc
and
loop
jp
fisubs
lret
mov
push
push
pop
outsl
popa
sub
je
int3
insl
and
mov
in
fildl
aas
push
push
add
sbb
xchg
and
inc
xor
into
stc
hlt
mov
push
mov
jne
mov
icebp
dec
roll
insb
fptan
jno
xchg
sub
scas
iret
js
scas
aad
jge
lahf
mov
fcmovnu
and
pushf
lret
imul
or
jne
jecxz
stc
cltd
mov
mov
mov
data16
lock
inc
mov
push
jne
push
shr
xchg
cwtl
rcrl
mov
xchg
adc
fcoml
push
xchg
std
sarl
repnz
fldenv
sbb
icebp
xchg
int
sbb
sarl
les
mov
loopne
inc
cmpsl
das
repz
leave
sbb
fisttpl
lods
jae
imul
stos
push
jge
or
fmull
out
sarb
pop
sub
push
test
adc
aam
es
fisubrl
or
repz
hlt
jle
push
xor
jno
adc
adc
cld
jns
mov
mov
xchg
push
roll
lahf
push
cmp
icebp
jns
jmp
pop
or
and
call
fwait
repz
jae
rcrl
add
lock
sub
scas
in
inc
pop
iret
dec
pop
daa
mov
and
push
mov
clc
jle
mov
andb
add
xchg
xchg
cli
push
mov
les
or
pop
xchg
xor
xchg
idivb
enter
in
into
xchg
dec
push
xorl
popl
scas
inc
idivb
lea
ja
xchg
mov
scas
sbb
push
sbb
sbb
stc
je
sub
ljmp
das
push
jb
adc
jecxz
and
mov
mov
loopne
lcall
lret
xor
cltd
mov
cmpsb
push
and
cli
cmp
sbb
mov
and
in
jmp
por
pop
push
push
inc
mov
mov
adc
into
cld
or
dec
sub
fidivl
mov
add
push
mov
mov
decb
or
repnz
pop
jns
xor
fs
lahf
int
testb
ret
sbb
jbe
int
or
mov
pop
cmc
add
xchg
cltd
pop
ror
imul
in
mov
ss
and
fs
pop
xchg
lret
clc
pop
cmp
xor
in
dec
mov
fsts
inc
sbb
lods
push
fistpl
adc
popa
hlt
add
pusha
inc
xlat
out
fcoml
jnp
sbb
push
lods
dec
arpl
jge
das
cmp
inc
push
inc
adc
dec
jge
loope
xlat
and
push
sub
sub
sub
push
test
mov
cmpsl
xchg
mov
mov
or
pop
mov
in
dec
lock
stc
into
inc
lret
push
mov
adc
push
xor
adc
sti
adc
je
jg
push
mov
lret
aas
scas
dec
and
mov
push
lock
xchg
adc
jns
sub
loope
or
aad
pop
andb
pop
mov
fisttpl
mov
imulb
add
movsb
leave
sbb
jo
ljmp
outsb
icebp
pop
xchg
fdiv
adc
dec
sub
adc
fiadds
data16
sub
out
and
sub
and
mul
mov
dec
and
mov
lret
dec
pop
or
js
adc
mov
stc
xor
fildl
je
popl
pop
push
xchg
ret
pop
mov
xor
dec
xchg
fisttpll
cld
lahf
cmp
xor
in
jno
jnp
push
loop
pop
popf
jno
shl
jmp
lea
enter
add
out
xchg
enter
cmp
mov
enter
adc
cmp
lea
xchg
jae
mov
xchg
mov
pop
jle
xchg
mov
pop
pop
and
divl
push
js
div
loope
sar
sbb
shl
sahf
add
xlat
mov
xchg
cmp
adc
jp
cmc
sbb
int
fidivl
xorl
popa
into
lds
mov
aaa
lods
into
ret
cmpsl
dec
push
das
mov
fcoms
test
das
ja
gs
inc
xor
jmp
out
mov
mov
jmp
andl
idivb
add
outsb
sbb
fistl
adc
mov
int
jno
lea
test
sub
xor
add
sbb
push
mov
push
lock
pop
dec
lods
mov
jge
xchg
mov
push
cld
shlb
pop
cmp
inc
jno
jae
pop
push
adc
jge
out
inc
addb
cwtl
imul
inc
out
mov
xchg
jmp
xchg
push
fldt
fisubl
mov
rcl
hlt
push
xchg
lcall
pop
push
repnz
dec
data16
sar
sbb
jae
repz
pop
movsl
and
add
mov
bswap
ret
cmp
adc
maxps
add
js
int3
popa
pushf
stos
imul
ss
enter
in
in
test
test
jbe
jb
pushf
push
rorb
mov
add
pop
loopne
and
jmp
lret
sahf
or
xorb
or
dec
ljmp
movsb
stos
scas
lret
test
push
xor
enter
in
xchg
jo
pop
xchg
pop
sub
inc
and
iret
mov
jns
mov
push
pop
cwtl
or
mov
leave
mov
push
mov
pop
outsb
and
out
pop
sub
xchg
xor
out
popa
sub
mov
pusha
sarl
mov
roll
dec
ret
mulb
repz
sub
stos
mov
mov
dec
adc
mov
mov
rclb
aam
pop
insl
fdiv
addr16
fstl
sbb
pop
dec
sbb
in
or
or
inc
xchg
cltd
jo
data16
icebp
add
scas
addr16
sub
or
xor
sar
jecxz
mov
call
gs
leave
push
dec
stc
int3
fstl
inc
mov
adc
and
fwait
cmp
aam
and
sbb
push
xchg
xorb
in
mov
stc
cmp
andl
sbb
iret
insb
je
clc
xchg
jne
push
data16
aam
fnstsw
sbb
xchg
xchg
test
add
cli
sbb
pusha
mov
cltd
mov
in
inc
sti
sbb
lret
loope
popa
cltd
adc
adc
arpl
inc
pop
cmp
cmpsb
push
mov
cwtl
xchg
xor
mov
lcall
xchg
notl
loope
jp
adc
movl
je
pusha
aad
xchg
push
lahf
int
xor
push
fbld
rcll
xchg
mov
sbb
sbb
inc
je
push
and
pop
cmpsb
out
cmc
add
and
rorb
insb
es
xor
jb
jle
fs
push
rorb
out
lods
xlat
popa
pop
cmp
xor
sbb
add
mov
xor
enter
mov
jbe
mov
gs
dec
shl
les
orb
scas
lds
insl
mov
push
ja
fwait
mov
push
sbb
dec
push
insl
sub
dec
sbb
cmp
push
gs
jo
xchg
out
dec
cmp
mov
pushf
inc
mov
jns
adc
lea
xorl
push
adc
loop
dec
push
lahf
pushf
xor
jecxz
dec
or
pop
dec
mov
inc
mov
fldcw
pop
lods
mov
lcall
and
es
in
das
mov
mov
fimull
hlt
loopne
cmp
test
sub
cmpsl
mov
lahf
push
in
mov
cmpb
fs
test
leave
or
mov
sbb
mov
jle
xor
dec
stc
adc
lods
dec
aaa
lret
aam
arpl
ljmp
mov
push
fnsave
pop
lahf
dec
mov
xchg
lods
test
cmp
cld
or
xchg
inc
test
pop
sti
shll
mov
inc
repnz
inc
out
add
imul
mov
int
cmp
xchg
popl
push
or
aaa
test
mov
addps
leave
adc
jbe
adc
dec
adc
push
sub
and
cltd
dec
and
fwait
and
xor
int3
xor
add
jecxz
mov
addb
insl
lret
jmp
pop
ljmp
lds
and
ljmp
dec
inc
sbb
mov
xchg
cmp
xchg
adc
fbstp
sub
lods
jg
cmp
or
add
adc
push
adc
and
subl
push
les
mov
push
shlb
sahf
das
mov
loop
xchg
hlt
adc
mov
xchg
mov
xor
subb
mov
xchg
cmp
add
dec
push
xchg
call
nop
roll
push
xchg
jb
push
ret
sub
fwait
dec
xchg
add
push
call
mov
mov
jg
and
pop
push
popf
aas
clc
adc
mov
jle
loop
jle
addb
insl
into
test
and
fsubl
adc
fstps
sbb
in
jae
sbb
pop
mov
stc
mov
mov
icebp
jecxz
stc
loop
leave
adc
aas
in
sbb
mov
cmp
add
nop
add
sahf
pop
mov
lret
cltd
sar
mov
std
push
enter
push
incb
dec
imul
cmp
xchg
cwtl
sahf
mov
rcll
cmovo
aam
test
pop
outsb
imul
cmpb
out
fcmovu
imul
inc
inc
ljmp
jo
push
imul
or
ret
int3
hlt
lret
testl
inc
hlt
add
lret
push
add
push
inc
hlt
push
pop
das
inc
push
int3
jb
shl
movsl
scas
loope
pop
sub
loopne
mov
mov
aas
cmp
rol
pop
xor
mov
daa
cli
test
mov
stos
add
or
rcll
std
repz
out
addr16
aas
js
loopne
push
mov
or
cmc
add
push
cmp
and
xor
loop
lcall
loop
rcrb
in
mov
outsl
cmp
lcall
cld
data16
addl
test
xchg
aas
xchg
push
scas
adc
cmp
add
in
mov
xchg
xchg
xchg
int3
jmp
cmp
cmp
push
lods
lea
jecxz
sub
lcall
dec
out
xchg
popa
xchg
and
push
jne
mov
inc
in
and
ljmp
rcrl
push
hlt
push
test
dec
dec
inc
and
mov
std
and
in
jbe
mov
sbb
sbb
mov
pusha
fwait
mov
lods
inc
stos
xor
push
jp
xchg
mov
in
xchg
and
and
hlt
mov
ds
addl
jnp
out
pop
out
mov
pop
cmpsb
flds
lret
cmp
mov
jecxz
push
shl
lods
sub
cltd
mov
insl
dec
jo
call
lret
add
cli
cmp
inc
test
scas
jmp
pusha
shlb
subb
mov
inc
push
cmp
push
ja
xchg
pusha
inc
and
repz
dec
xchg
aas
rolb
fiaddl
sbb
jge
cmp
clc
pop
mov
mov
jl
jae
and
imul
scas
pop
adc
mov
mov
sbb
ja
imul
sub
or
inc
mov
repz
notb
lret
and
aam
dec
inc
dec
std
leave
dec
das
push
sub
addr16
arpl
sub
inc
mov
stc
adc
test
or
jns
sub
push
pop
jg
movsl
mov
jp
std
xor
dec
sub
shlb
in
ret
std
push
fbstp
scas
xlat
and
incb
scas
test
mov
insb
jae
fmull
ds
push
mov
es
pop
dec
cmp
bound
xchg
or
mov
lods
dec
repz
movsb
dec
mov
lock
dec
sub
xchg
shll
in
fldt
in
in
jne
add
sbb
enter
mov
mov
leave
lcall
ret
xchg
das
hlt
je
push
lret
add
inc
or
and
je
lods
adc
in
out
xor
scas
jo
dec
loope
push
out
mov
jle
scas
mov
loop
fbstp
mov
cmp
clc
aad
clc
xchg
xor
xor
pop
ficomps
testl
test
push
sub
movsl
or
pushf
scas
scas
insl
sub
sti
mov
xchg
push
ja
mov
xor
clc
cmp
mov
cmp
sti
jecxz
cmp
add
fistl
decb
loop
scas
sub
loopne
cmp
add
divl
inc
dec
add
loopne
mov
in
ret
repnz
pop
jge
int3
test
lret
insb
sbbb
cld
ljmp
mov
push
xchg
addr16
pop
sbb
jle
int
std
mov
adc
cmc
xchg
xchg
mov
test
nop
mov
gs
ds
pusha
pop
loopne
add
ljmp
lgs
popa
inc
adc
shr
or
push
aaa
stos
scas
loopne
ljmp
aaa
mov
cmp
pop
xchg
lret
and
inc
and
ret
xchg
rcll
insb
sub
aaa
clc
pop
test
dec
add
int3
jae
shl
out
enter
test
loopne
out
bnd
in
loop
data16
fists
mov
loopne
inc
or
dec
repnz
das
mov
lcall
sbbl
ss
jb
scas
lock
jecxz
insl
in
xor
cmp
iret
dec
pop
mov
xor
es
add
stc
roll
mov
cmp
pop
jnp
lret
lcall
sbb
mov
frstor
xchg
cmp
call
out
sub
js
cs
push
stc
fwait
xor
pop
clc
outsl
inc
pop
clc
test
gs
pop
lret
ret
xor
aad
add
ss
mov
fnstcw
clc
inc
std
in
std
jle
hlt
and
inc
fucomp
push
sub
inc
mov
fmuls
lds
sbbl
jns
lret
lahf
mov
outsl
js
ja
cltd
addl
sbb
jne
jb
das
or
inc
pushf
mov
repz
mov
enter
repnz
bound
sbb
stos
pop
cmp
pop
outsb
mov
rcll
call
dec
push
mov
imul
and
stos
xor
inc
cld
cmp
or
xchg
xchg
fcmovnbe
or
ds
cld
and
adc
or
push
sub
push
inc
test
sbb
daa
push
aad
stos
mov
movsl
jo
xor
inc
jl
dec
mov
adc
aas
push
stc
fstpt
cld
fisttps
and
dec
rclb
pop
sbb
sbb
push
rcrb
fisubs
pop
icebp
adc
and
cwtl
add
sub
lea
or
sahf
xchg
cmpsl
sarl
dec
fsts
out
mov
les
cmc
add
into
or
jg
jo
int
mov
xor
scas
les
sahf
sbb
loop
call
and
add
xlat
ret
sbb
loopne,pn
loop
jnp
les
mov
out
sbb
mov
mov
pop
inc
add
lret
aaa
cld
les
cli
cmp
cmc
std
push
xor
je
and
insl
mov
dec
mov
sbb
daa
testl
push
pushf
scas
adcb
xor
xor
out
mov
jno
setb
stos
movsl
xchg
sbb
xchg
sbb
sti
mov
mov
sbb
imul
cmc
push
rcl
in
fcmove
mov
xor
xchg
fisubl
jo
insl
ja
xor
pop
in
js
cmp
fdivl
dec
xchg
and
jnp
dec
cltd
mov
iret
decb
ja
shr
or
sub
rorl
inc
les
mov
std
and
push
stos
test
mov
js
xchg
jnp
push
fildll
inc
push
clc
add
xchg
fidivl
dec
dec
dec
jo
in
js
cs
lods
movsb
sbb
sbb
cwtl
inc
inc
fsubrl
lcall
rolb
aad
jl
aas
sbb
xchg
mov
jecxz
jp
push
outsl
add
sub
push
in
xchg
mov
lret
addl
ror
test
push
xchg
lea
sti
cwtl
push
outsb
test
xor
xchg
arpl
mov
jge
popa
test
rclb
mov
jbe
jge
and
test
or
xor
test
jne
call
jp
mov
nop
lcall
movsl
mov
or
push
and
leave
and
inc
subb
dec
cmc
out
repz
leave
add
loope
dec
mov
sbb
testl
or
mov
push
mov
dec
bound
adc
test
out
lret
movsl
xor
std
enter
cmp
mov
decl
or
cmpsl
push
lcall
push
cmpsb
inc
aas
sbb
aaa
cs
xlat
adc
jmp
or
cmp
jge
pop
push
fidivrl
fiadds
loopne
sub
sub
mov
sub
adc
dec
add
adc
fsubrl
out
call
inc
sub
or
lret
stos
mov
add
hlt
fisttpl
bound
and
int
sbb
out
mov
lret
ja
mov
and
clc
fcoml
movsl
or
dec
lea
hlt
push
lods
mov
mulb
mov
ljmp
xchg
add
xchg
movsl
jmp
enter
inc
adc
jb
or
fbld
or
sbb
popa
mov
xchg
add
sub
std
in
inc
jg
fcmovnbe
push
call
int
mov
call
stc
pop
sub
xor
scas
push
lcall
jns
and
fsubrs
sbb
add
fdivl
sub
hlt
cmp
cli
pop
imul
rorl
ret
fcoml
xchg
add
mov
je
mov
mov
and
shrb
pop
idivl
mov
and
push
mov
or
test
cmpb
mov
int3
call
shrl
fsubr
cwtl
sbb
mov
je
fildll
xchg
xor
fwait
xor
pop
xor
scas
fstpl
gs
lcall
sub
cltd
adc
das
cmp
popf
ljmp
and
ror
lods
sub
push
cli
leave
nop
aam
arpl
push
ret
sub
xchg
ret
outsb
pop
mov
and
outsb
nop
and
xor
cli
mulb
sub
rcrb
dec
int
or
xor
inc
inc
mov
or
ja
cmp
mov
and
xor
pop
jbe
test
mov
sahf
in
push
push
push
add
loopne
imul
ss
adc
pushl
rol
in
push
outsb
dec
gs
test
adc
add
cmp
sub
es
outsl
and
cmc
lods
mov
sarb
mov
and
add
insb
xor
inc
orl
lock
stc
pop
int
inc
inc
sbb
dec
sbb
outsl
stc
imul
ret
movl
icebp
test
push
jmp
shll
pop
push
sub
lahf
cli
cmpb
pop
repnz
xchg
scas
stos
add
and
xchg
test
test
lcall
repnz
out
movsb
imul
push
daa
xchg
mov
xor
cltd
jmp
daa
adc
sub
outsl
mov
xchg
push
jecxz
icebp
push
lods
fisttpl
add
jmp
roll
sbb
repz
mov
test
adc
leave
pusha
xchg
cwtl
cmp
lahf
mov
pop
scas
or
ret
sbb
fcoms
inc
bound
ja
adc
mov
std
aas
pop
vmread
int
adc
push
jecxz
lods
enter
mov
je
xor
inc
sbb
repz
stos
lea
lea
xor
jl
pushf
ljmp
lock
xor
mov
ret
jnp
int
fwait
sti
xchg
dec
or
pop
js
loope
orb
movsl
int
push
bound
inc
ret
push
inc
mov
roll
xor
lods
popa
adc
fisttps
insl
in
in
arpl
mov
das
jl
jecxz
add
cs
xchg
inc
repz
xor
push
mov
loopne
jp
cmp
dec
fwait
out
inc
pop
mov
jge
ss
sbb
and
stc
inc
test
in
mov
lret
push
aaa
pop
xor
jle
orl
xor
push
xor
cmp
mov
lds
out
or
std
jg
fsubr
push
xchg
fsubr
sbb
jle
xchg
divl
push
or
stos
cltd
test
mov
lahf
outsl
inc
pop
dec
pushf
jmp
movsb
push
repz
push
push
das
movb
mov
mov
jg
inc
pushf
jo
out
sbb
xchg
enter
jp
mov
mov
cmp
lea
mov
pop
shlb
mov
or
scas
adc
loope
mov
cmp
xor
scas
int3
jl
int3
out
mov
out
inc
stos
sbb
rclb
sub
aas
pop
std
adc
inc
inc
daa
sbb
mov
cmp
and
jge
stc
jecxz
subb
call
movl
out
push
jo
pop
add
movsb
mov
pop
jl
bound
ja
push
lea
movb
mov
arpl
xchg
jae
and
sub
cmp
mov
jne
cmp
cs
nop
andl
cld
and
iret
jmp
dec
pushf
jmp
push
ljmp
mov
lds
das
push
sbb
adc
jne
mov
testb
adc
sub
lock
pop
cmc
in
xor
nop
pusha
push
shrb
mov
pushf
cltd
xor
fsubrs
std
or
xlat
aas
push
test
push
lahf
mov
dec
and
mov
lods
mov
cltd
fwait
dec
pop
push
xor
sbb
and
lea
mov
xorl
adc
mov
aas
loope
jmp
xor
fs
mov
lock
jb
je
mov
fldt
sbb
iret
loope
out
jns
pop
int3
pop
mov
lcall
aaa
aad
mov
bound
gs
and
iret
push
sub
mov
popf
loop
loopne
pop
imul
and
addr16
add
inc
mov
fnstcw
repz
cmp
icebp
mov
pop
inc
jno
icebp
add
mov
in
mov
out
out
aas
popa
in
jae
cmp
xor
std
clc
call
outsl
dec
icebp
mov
jge
push
and
stos
les
sub
add
stos
push
cmpsb
xor
pusha
mov
test
int
test
in
jg
popf
iret
ffree
inc
sub
pop
in
dec
das
cmp
pusha
mov
xor
pop
fdivrs
dec
not
mov
aad
int3
xchg
xchg
push
inc
outsl
inc
adc
aas
push
mov
jae
sbb
mov
les
sub
mov
mov
push
mov
mov
jmp
sar
push
xchg
fiaddl
mov
jo
dec
push
insb
loop
sub
scas
mov
and
out
aaa
arpl
mov
bound
inc
push
mov
repnz
jno
push
sbb
not
lea
xor
mov
or
test
mov
mov
jecxz
lods
sub
in
insl
fdivs
in
xchg
data16
pop
fisubl
add
repz
int
leave
jl
mov
pop
popl
cwtl
loop
push
rcll
in
and
data16
jno
pop
sub
push
ret
aam
and
ja
mov
jne
inc
ret
add
dec
lret
mov
jecxz
inc
ds
orb
add
push
jmp
iret
lret
test
stc
cmc
out
pushf
jno
cmc
dec
mull
sub
imul
addb
mov
mov
mov
jge
icebp
and
imul
adc
int3
addr16
cmpsb
adc
sub
es
ret
rcr
stos
fsubs
loope
addr16
out
mov
xchg
dec
push
push
nop
pop
sub
mov
test
add
popa
push
mov
mov
mov
aad
pop
out
outsb
shll
sub
mov
shll
inc
cmp
fimuls
in
add
dec
inc
cld
inc
test
mov
ja
add
mov
jb
inc
push
or
xchg
or
add
lret
scas
mov
ljmp
adc
outsb
movsl
mov
fimull
mov
jns
xchg
fisubrl
sub
daa
dec
mov
test
lahf
mov
out
out
fimuls
inc
sub
pop
es
fidivrl
imul
es
icebp
icebp
jge
mov
leave
test
pop
or
aaa
mov
test
iret
fnsave
add
inc
and
adc
lds
push
repz
dec
std
sbb
xchg
dec
fwait
cmc
das
mov
mov
adc
xor
cmp
lahf
sbb
mov
popa
popf
loop
adc
inc
out
or
sbb
jo
bound
pop
rol
mov
dec
push
lods
in
stos
daa
sbb
add
int3
jbe
lods
adc
and
in
xchg
or
addr16
xchg
mov
dec
popf
sbb
push
jns
jmp
adc
mov
enter
dec
or
rol
in
aam
xchg
inc
pop
rclb
sbb
sti
add
jae
mov
jmp
or
lret
xor
nop
hlt
or
xor
clc
ficomps
cmp
inc
cmp
jb
mov
sub
pop
movsl
mov
push
mov
je
outsb
dec
dec
mov
sub
sbb
fisubs
repnz
das
or
inc
push
add
xor
mov
dec
std
jb
xchg
mov
leave
cmpsl
test
lea
stos
or
sbb
stc
nop
aaa
mov
push
add
jp
outsb
hlt
lahf
jno
adc
push
or
repnz
xchg
jle
out
mov
mov
aaa
xchg
mov
jne
jmp
mov
add
cmc
test
mov
xlat
inc
adc
mov
lret
xor
fdivl
jae
lret
adc
aad
pop
cli
push
out
pop
push
ret
or
arpl
jnp
sub
mov
imulb
cs
xor
mov
xor
aaa
lock
push
in
cmp
inc
sahf
mov
xor
fwait
jo
nop
inc
notl
jno
rcrl
mov
testb
fdivr
scas
mov
icebp
inc
add
jecxz
jo
cmp
jne
out
and
lea
mov
sub
pop
iret
int
ljmp
push
mov
cli
add
jle
xchg
popf
xor
bound
mov
add
icebp
mov
jae
leave
cmc
mov
fcoms
add
inc
adc
push
jbe
sub
cmpsb
rorb
jg
out
mov
dec
xor
lea
lcall
inc
hlt
movsb
sbbb
mov
pop
pop
outsl
mov
mov
call
jb
xchg
mov
ret
sub
bound
xchg
out
pop
rep
pushf
cwtl
mov
push
mov
stc
addb
arpl
sbb
out
cwtl
and
cmpsb
seto
mov
das
push
add
scas
call
pop
xchg
push
cltd
sbb
outsb
loopne
or
outsl
jle
cmp
adc
daa
or
lods
fstps
out
jmp
or
sub
push
hlt
dec
and
mov
adcl
sub
iret
or
cmp
dec
inc
into
mov
outsl
jnp
shl
xchg
andb
push
xlat
xor
cmc
lods
jae
pop
dec
lret
jecxz
insl
cmp
push
xchg
or
and
add
out
adc
jle
sub
bnd
inc
xor
inc
fcmovu
les
fwait
dec
lahf
mov
insb
adc
mov
adc
andb
aad
cmp
out
std
movzwl
sub
cmp
stos
hlt
mov
or
lcall
push
mov
or
loopne
dec
xor
dec
xor
pop
in
jne
sbb
stc
mov
mov
pop
mov
or
sbb
daa
fwait
sub
jb
pop
mov
push
cmp
cld
rcl
mov
cs
outsl
add
sbb
lods
add
xlat
call
lods
loop
ja
sub
jmp
les
addb
push
push
fwait
inc
lods
and
inc
pop
test
cltd
fsubrl
dec
xor
stos
jae
addr16
xor
stos
pop
enter
inc
sub
and
lahf
adc
sub
sub
fdivs
das
jp
gs
mov
pop
or
xchg
ja
in
fsubrs
pop
lret
ret
cmc
inc
mov
aaa
sbb
xor
cltd
push
test
scas
shrl
dec
xchg
sub
test
aam
aam
mov
sti
dec
mov
movsl
fldenv
insl
or
jl
jb
pop
push
ret
xchg
out
and
push
adc
or
movsb
cli
lock
inc
xchg
stos
stos
sahf
scas
in
fwait
cmc
out
inc
inc
dec
mov
xchg
and
out
shufps
mov
psrld
mov
and
sti
pusha
adcl
fstpl
stos
hlt
addr16
out
test
ror
pop
xchg
jo
insl
and
int3
incl
pop
jge
push
addr16
bound
lds
mov
pusha
xlat
adc
inc
testb
dec
mov
ja
sbb
adc
dec
mov
data16
popf
add
pop
sbb
mov
push
inc
push
sub
ret
pop
fwait
dec
jecxz
loope
adc
fwait
shrl
fiadds
pop
mov
orl
xchg
and
and
xchg
mov
pop
cwtl
pop
movb
int
rorb
subb
jae
push
out
adc
pop
and
inc
pop
scas
dec
sarl
in
push
and
sbb
orl
inc
in
icebp
push
xchg
mov
cs
sahf
lret
xchg
jle
jmp
fcomps
mov
push
pushf
xor
cli
in
lahf
ret
xchg
ja
ss
fs
jecxz
shlb
mov
int
pop
xchg
lahf
aas
mov
outsl
dec
or
push
xor
cld
out
sbb
pop
cmc
mov
dec
sahf
xor
out
cmp
push
clc
or
mov
aaa
xor
fdivp
pop
pop
xor
mov
rclb
jo
outsl
pop
stc
into
loop
cmc
cli
mov
lds
loop
mov
lds
pushf
jecxz
mov
ficomps
mov
shlb
push
or
imul
push
std
sub
dec
test
scas
stc
pop
cmp
imul
aad
mov
push
mov
inc
jle
jo
mov
adc
stos
xchg
sbb
ss
jne
ss
and
bound
push
insl
mov
adc
adc
pop
lock
or
imul
das
or
jo,pt
sub
js
aad
ret
xor
push
push
aaa
xor
icebp
stos
das
dec
xor
dec
inc
or
inc
sbb
gs
in
outsb
xchg
rcll
push
vpor
pop
lods
cmp
add
insb
ss
stos
xlat
sub
dec
xchg
jecxz
pop
mov
enter
push
gs
out
pop
and
inc
mov
mov
mov
cmpsb
repnz
insb
dec
or
filds
jb
rorb
or
ret
push
pop
xor
add
lcall
jo
icebp
lods
sahf
or
dec
or
notb
aaa
test
lea
scas
pop
jmp
jno
mov
lds
ret
fs
pop
xor
push
neg
xchg
add
fs
add
outsl
mov
das
adc
pop
mov
mulb
inc
push
fsubl
ret
scas
jbe
push
daa
aaa
adc
mov
push
in
fcoml
mov
sbb
int3
dec
add
add
in
jp
push
add
and
jecxz
inc
pop
adcl
cwtl
dec
les
aam
repz
stos
addr16
insl
lods
push
leave
in
rcr
push
push
inc
add
rcrl
cmpsb
ja
add
dec
and
ror
lret
lret
adc
jo
jg
cmpsl
jle
sub
mov
xchg
out
mov
cmp
mov
pop
jno
jmp
sti
out
out
aas
add
dec
or
mov
cmp
cmp
push
pop
mov
mov
leave
inc
mov
inc
divb
imul
shl
cli
mov
cld
xchg
lea
mov
adcb
movsb
imul
push
lods
mov
loopne
clc
add
insb
xor
popl
clc
cmpb
lods
xchg
push
mov
adc
sub
dec
jp
mov
jp
adc
je
xchg
pop
mov
mov
mov
cli
jnp
repnz
pop
push
jno
sbb
mov
lods
pop
insb
xchg
ds
push
not
rcll
adc
push
cltd
sbb
push
shlb
out
test
cltd
jecxz
push
sar
loope
pop
pop
nop
and
cltd
test
test
les
outsl
loop
mov
dec
mov
jae
mov
fs
movsb
lret
cmpsl
aad
add
pop
cmp
mov
lea
jmp
mov
sbb
push
xchg
sub
jae
mov
pop
jecxz
and
and
sbb
add
test
fwait
mov
mov
repz
lods
sbb
mov
xchg
out
push
xchg
ljmp
xchg
test
ljmp
addr16
leave
cmpl
aaa
cmp
bound
push
cmp
pop
fildl
xor
movl
out
es
push
cltd
and
dec
or
mov
mov
xchg
cli
shll
fidivrs
gs
push
pop
push
roll
nop
test
fwait
xorl
adc
je
movsb
or
push
addr16
fstl
xor
jns
jnp
mov
pushf
adc
or
jp
mov
inc
cmp
mov
push
out
rcrb
xor
dec
popa
inc
xor
xor
pop
sub
pusha
push
pop
add
cmp
xchg
rorb
cmp
mov
jne
mov
mov
jnp
inc
out
inc
lock
fnstsw
lret
pop
pop
fists
mov
xor
cmp
push
xor
adc
pop
sub
lea
nop
stos
cltd
inc
pop
add
xor
pop
mov
mov
int3
clc
aaa
out
mov
mov
out
clc
lret
daa
ss
jle
cld
push
hlt
ds
lods
inc
mov
lret
sbb
stos
stos
mov
fstpt
sub
mov
cs
mov
xor
sti
das
sbb
int
loope
mov
and
sahf
dec
push
test
aad
daa
lods
psllq
inc
adcl
jnp
push
mov
outsb
mov
subb
ror
fs
lahf
adc
xlat
xor
outsb
add
push
cld
xor
inc
rcr
inc
aas
adc
sbb
cmc
das
mov
outsl
push
scas
shl
dec
xchg
sbb
es
adc
fists
xor
mov
es
shl
xor
sbb
cli
iret
call
addr16
rcpps
fsqrt
sub
daa
pop
xchg
jno
push
and
inc
xchg
inc
mov
pop
test
and
cmp
and
sub
sbb
test
adc
xchg
mov
outsl
xlat
push
add
mov
jns
mov
outsl
icebp
or
or
out
xor
lods
shrb
add
xchg
addr16
jle
xlat
cmp
dec
sbb
popf
cld
mov
test
pop
ds
cli
xchg
push
into
mov
fdivl
add
xchg
add
bound
jno
xchg
imul
push
sbb
shrb
inc
xchg
and
test
scas
add
mov
lock
mov
fwait
add
addr16
lods
add
adc
out
jp
icebp
dec
mov
xor
lods
cmp
rol
aas
dec
add
std
fildll
mov
push
orl
lcall
in
mov
cmp
call
xchg
andl
orb
sbb
lods
mov
mov
or
test
mov
scas
inc
sub
inc
mov
add
xchg
inc
sti
outsl
inc
sbb
jae
jb
xchg
js
jmp
or
lds
push
js
fldl
cmp
dec
cmovne
insb
iret
fcoms
mov
mov
out
mov
xor
fdivrs
movsl
push
dec
insl
mov
add
pop
loope
sbb
pop
sbb
out
loope
inc
or
cltd
lahf
mov
adc
xchg
fwait
cltd
push
mov
mov
loopne
jecxz
fisttpl
repz
xor
stos
lods
popa
fistps
fsubr
jmp
imul
cld
and
mov
dec
inc
xlat
jg
aam
pushf
pop
jb
out
sbb
sbb
mov
pop
loop
shlb
inc
repnz
jle
lahf
pushf
dec
lods
xchg
push
jmp
adc
insl
stos
aaa
arpl
rcrb
test
jno
mov
xchg
fwait
outsb
xor
pop
in
mov
iret
xchg
sub
push
test
jmp
dec
mov
cmp
xlat
jbe
cmp
sub
jmp
icebp
out
fisubrs
daa
sti
sbb
mov
popa
sub
ljmp
ja
or
fistpl
lahf
fidivrl
cld
mov
ljmp
push
pop
repz
push
insb
fsincos
mov
add
dec
enter
loopne
xor
sub
push
imul
call
inc
mov
push
pop
add
add
xchg
inc
adc
into
mov
cli
out
std
cli
xor
aas
push
enter
xlat
aad
push
bound
fnstsw
loope
pop
push
enter
arpl
mov
andl
lods
adc
xchg
pop
aas
lock
sbb
imul
sbb
jmp
sbb
aad
mov
ljmp
call
pop
jecxz
sbb
cmp
test
out
xchg
inc
rcll
pop
setb
stos
shll
xchg
mov
iret
cld
mov
jne
sti
popa
mov
outsl
mov
inc
xor
inc
fidivrl
ss
or
or
subl
icebp
nop
adc
inc
push
inc
test
cmc
cmp
cmpsl
push
mov
out
jae
shlb
mov
xchg
jle
jl
test
or
stc
mov
outsb
jnp
enter
les
jmp
test
orb
sbb
sti
xchg
jns
ss
aam
out
in
test
jb
pop
xorl
clc
sti
ret
fstpt
or
xor
lds
int
dec
push
sbb
cmp
sub
add
xlat
cltd
cmp
enter
lods
gs
ds
inc
and
inc
pop
fwait
into
inc
sarb
movsb
or
sub
push
mov
mov
add
nop
fildll
xor
fs
imul
jecxz
inc
push
add
xchg
outsl
ds
iret
pusha
or
mov
or
in
cmp
jno
ss
mov
add
add
and
push
fisttps
push
sar
or
xor
xor
or
imul
xor
popa
mov
orb
push
push
cmp
cmp
lret
ret
or
and
js
pop
pop
dec
mov
jnp
call
cmp
inc
mov
mov
add
ljmp
ret
nop
aaa
cmp
scas
sbb
pop
fs
xchg
add
dec
ds
mov
cwtl
movsb
inc
pop
inc
xchg
mov
mov
xchg
pop
push
push
mov
xor
gs
bound
push
mov
add
xchg
movsl
pop
stos
adc
sub
jmp
out
iret
mov
cs
xorl
mov
push
cmp
sarb
pop
test
xor
sbb
and
fildll
mov
mov
fs
fldenv
cli
adc
rcrl
pop
xchg
lds
xor
mov
adc
mov
xchg
or
repz
insl
popf
lcall
js
or
shl
repz
test
vpaddb
lods
mov
mov
and
mov
pop
sub
out
decl
mov
in
xorb
clc
xchg
push
sbb
aad
pushl
jns
stos
xchg
jle
vpsubsw
iret
nop
jmp
sbb
cltd
pusha
pop
mov
xchg
add
xor
mov
std
push
shll
dec
mov
aaa
enter
or
push
pop
sbb
or
or
pop
dec
pop
addl
repnz
mov
sbb
fwait
je
sub
push
test
mov
or
jbe
add
int
insb
sub
ja
and
or
pop
mov
addb
jns
push
mov
scas
cmp
enter
mov
and
ja
xor
out
jb
cli
adc
lods
aaa
or
push
scas
jno
mov
inc
add
rorb
sub
test
inc
xor
inc
popf
add
into
jecxz
mov
js
mov
pusha
lcall
fcomps
test
repz
and
in
movsl
push
cwtl
int
cmpsl
xchg
mov
test
adc
out
stos
cmp
je
lcall
dec
cld
jb
adc
pusha
xchg
sbb
les
ss
into
pop
repz
movsl
das
ret
mov
mov
shlb
adc
loop
testl
fld
add
cmpsb
xlat
xor
ss
jl
or
cmp
inc
cld
test
cmp
jmp
ficompl
inc
xchg
push
mov
mov
or
xor
mov
dec
sahf
es
dec
sbb
rorb
jg
popf
vpavgb
pop
xchg
negb
out
mov
loope
sub
lret
jbe
add
xchg
add
stc
dec
scas
sub
fldpi
clc
mov
ret
or
sbb
dec
sub
push
popl
cvtdq2ps
add
adc
pop
jae
imul
dec
mov
xchg
xor
mov
dec
shll
loope
pop
leave
fsubrl
iret
pop
iret
aas
fldenv
or
xor
push
cwtl
push
push
shrl
dec
mov
fidivs
mov
dec
movb
sarl
sbb
push
cmpsl
xchg
dec
xor
add
sbb
and
dec
lods
stos
daa
push
ret
cmp
dec
out
mov
add
lret
call
mov
xor
cmpl
aam
das
pop
xchg
sbb
stc
ss
outsb
aam
out
xor
jno
sub
shr
call
out
sbb
jb
subb
popf
icebp
rolb
test
add
pushf
sbb
jns
imul
mov
xchg
cmp
loop
iret
cs
call
ja
out
sub
add
adc
push
dec
in
mov
or
pop
cmpsl
add
shl
lea
fistps
push
inc
es
fists
mov
jge
xor
mov
mov
and
out
cmc
scas
push
pop
lods
sbb
cmp
xlat
pop
sbb
mov
or
xchg
pop
and
push
imul
cmp
imul
pushf
inc
dec
fisubrl
out
jae
mov
adc
inc
aaa
push
xor
inc
adc
fcomps
rcrl
sbb
xchg
ja
jbe
in
icebp
jle
jp
mov
aam
pop
push
mov
notl
outsl
sbb
cmpsb
ja
aaa
sti
xor
je
push
jle
cmp
xchg
push
cmp
call
mov
insb
push
push
pop
sahf
dec
enter
inc
cmp
ret
cmp
int
loope,pn
shrl
rol
dec
movsb
lretw
nop
push
push
aam
xchg
dec
jno
jnp
adc
aas
std
cmc
aas
adc
std
notl
sti
ret
sarb
mov
ss
jp
adc
sub
orl
movsl
mov
lret
pop
inc
push
ret
cld
jge
loope
inc
rcl
adc
repnz
out
dec
fsub
inc
test
rol
dec
cmp
mov
loope
mov
jno
push
cmpsl
xlat
xor
mov
and
mov
push
lods
ljmp
mov
out
sbb
adc
push
mov
push
daa
mov
add
repz
jmp
and
or
pushf
mov
mov
icebp
jg
push
das
stos
ljmp
sub
dec
test
and
rolb
clc
jb
jbe
sub
aad
push
xchg
sub
sub
jns
mov
loope
dec
aam
stos
add
jns
mov
insl
mov
dec
inc
das
cmp
repz
adc
les
lods
xor
cmp
add
mov
adc
lods
stos
xchg
add
pushf
push
js
jno
fisubs
xor
es
movsl
and
mov
les
and
mov
cmpsl
mov
adc
pushf
ljmp
fcom
inc
cli
and
xlat
fisttpl
cmp
mov
sub
sub
add
out
ret
fbld
cli
arpl
mov
pusha
jl
mov
enter
mov
test
fiadds
ret
in
fsubrs
adc
mov
and
int3
dec
stos
imul
adc
cmp
bound
jmp
loope
adc
addl
iret
xor
jnp
push
mov
negl
test
enter
add
xor
arpl
repnz
pop
gs
or
je
lods
sbb
mov
imul
roll
adc
in
mov
xchg
adc
mov
sub
ffree
test
movsb
fidivl
out
icebp
mov
fildll
lock
add
movsb
jmp
cmp
sbb
ljmpw
pop
cltd
cltd
xlat
push
jmp
adc
call
mov
and
or
pop
sub
loopne
arpl
dec
cmc
movsl
sahf
mov
test
inc
out
dec
adc
pop
xchg
or
jp
dec
cld
gs
dec
sbbb
scas
pop
mov
popf
xchg
enter
add
pop
push
neg
adcl
xchg
jge
mov
sbb
cmpsl
mov
ss
mull
pop
dec
mov
dec
or
imul
in
outsb
adc
cmpsb
outsb
add
shlb
mov
xor
adc
jns
sbbb
pop
enter
in
insb
or
sbb
inc
jmp
dec
out
sub
and
mov
addb
pop
out
loop
daa
test
ret
jg
mov
das
pop
xchg
int
sub
dec
out
xchg
cmp
xchg
mov
add
sbb
adc
fldcw
dec
mov
pop
pop
loop
add
mov
cli
es
popa
inc
jecxz
iret
mov
xlat
jae
or
popf
icebp
in
idiv
fwait
lret
add
icebp
adcb
sbb
jecxz
inc
xchg
ja
fldcw
or
aam
outsb
int3
dec
jbe
cmp
js
leave
pop
and
or
adc
sbb
pop
rclb
mov
jno
sub
sbb
xchg
fldcw
ja
and
cwtl
cmp
insb
outsl
dec
sar
mov
ds
and
sub
xor
hlt
jno
shrl
push
dec
xor
sub
clc
inc
mov
sub
sub
mov
xchg
leave
je
movsl
mov
aam
push
xchg
mov
nop
shr
cmpsl
out
mov
fucomi
xor
inc
dec
fmul
rcll
fisubrl
cmp
repz
or
xchg
rorb
es
adc
in
mov
fisttpl
pop
lret
cmp
cs
mov
sbb
cld
nop
cmp
mov
mov
insb
fdivrl
divl
adc
push
stos
mov
or
insl
insl
mov
cmp
iret
mov
in
ja
adc
test
xor
cmpsl
stc
cltd
xchg
push
stc
pop
mov
test
xor
inc
fs
xor
jne
and
push
mov
sub
in
xchg
sahf
push
mov
shrb
dec
pextrw
cltd
lds
stc
lret
out
outsb
dec
cld
sbb
jb
sub
mov
call
dec
cmpsb
shl
add
mov
inc
dec
mov
fstps
arpl
ret
in
push
mov
shrb
sub
lret
dec
and
cmc
je
sbb
adc
push
mov
pop
aaa
fidivrs
incl
ss
roll
fldcw
add
sbb
mov
cmp
mov
outsb
iret
lahf
jns
leave
loop
push
jno
ljmp
mov
cmc
adc
sbb
cli
jmp
scas
xchg
lcall
jae
pop
lods
xchg
mov
nop
cs
fmuls
test
cld
pop
sti
sbb
sub
xchg
cwtl
lods
mov
jne
sub
pop
incb
xlat
push
cltd
into
mov
js
gs
sub
inc
and
lods
jnp
sbb
dec
pop
popa
dec
fisubs
xlat
shrb
mov
lahf
mov
sub
mov
add
ljmp
dec
adc
inc
test
int
mov
mov
ffreep
mov
inc
mov
js
pop
jle
adc
inc
outsl
data16
cli
stos
notl
mov
cmc
adc
sub
jae
xchg
fcompl
outsb
cli
out
ss
sbb
iret
ror
pusha
shl
ficoml
loopne
jns
dec
fwait
push
dec
jne
hlt
dec
jg
inc
jno
insl
inc
adc
jb
add
js
xor
cld
sbb
push
xchg
sbb
mov
jecxz
pop
add
fcmovnu
pop
xor
mov
or
fsubp
mov
mov
jb
xchg
ret
cmpsb
outsl
pop
push
xor
sub
mov
cmp
lods
inc
sub
dec
push
sbb
adcb
sub
cmp
dec
rorb
sub
ret
dec
xchg
mov
fnstcw
mov
cmc
mov
leave
inc
ljmp
dec
outsb
sbb
xlat
jnp
mov
and
cs
mov
push
or
aas
cmp
mov
shrb
xchg
sub
aam
mov
scas
aad
xchg
js
mov
jp
arpl
lcall
sbb
dec
test
pusha
push
das
ret
stos
lcall
js
jge
dec
movsl
add
vmovupd
mov
mov
in
aaa
clc
popf
mov
insb
stc
push
add
clc
add
scas
imul
in
sahf
pop
outsb
or
hlt
pusha
mov
lods
cmpsl
leave
cmp
bound
xor
jecxz
inc
pop
mov
inc
aad
int
xchg
repz
mov
jge
in
sub
jge
aaa
das
sub
mov
jae
shrl
std
adc
gs
scas
sub
mov
xor
xchg
xchg
and
int3
xchg
pop
int
nop
mov
pop
stos
mov
sub
jl
cmp
repnz
add
pop
adcl
push
push
inc
push
cmpsl
out
outsb
xor
and
cmp
ss
hlt
lcall
stc
out
xor
movsb
test
jp
pusha
jne
mov
mov
add
fbstp
inc
shl
mov
and
and
xor
cld
jp
aaa
cmp
cmp
loope
scas
lret
clc
jns
out
loope
repz
cmp
push
addr16
in
cmp
out
das
sub
enter
or
mov
das
loop
sub
inc
fidivs
inc
iret
cltd
xor
cmp
xchg
cmp
mov
lret
xlat
loop
hlt
or
jmp
fwait
js
pop
fwait
xor
out
jg
push
push
daa
adc
fwait
shll
mov
rcr
enter
aad
aaa
mov
inc
mov
stos
cmp
in
dec
lods
mov
mov
sub
cmp
and
inc
shrb
jmp
sub
sub
add
lds
outsb
lahf
xchg
das
pop
add
or
push
mov
fwait
es
or
movsb
test
and
jle
fsubl
mov
imul
and
mov
push
scas
mov
shrb
jp
enter
data16
aas
loope
and
fcoms
rclb
gs
in
add
jbe
insl
jmp
push
or
dec
xor
cmp
add
mov
cs
jl
or
int3
aad
pop
inc
outsb
push
xor
mov
xchg
icebp
or
imul
pop
fsubs
js
dec
xchg
test
in
xchg
fldt
add
inc
xor
ljmp
sti
outsb
adc
mov
mov
cmp
lea
and
outsl
dec
xchg
mov
stos
aas
fcmovu
repnz
stc
dec
mov
mov
mov
ja
sbb
leave
pop
pop
xchg
mov
sbb
mov
inc
add
xchg
jne
pop
push
mov
push
adc
cmp
ss
push
cmp
pop
sub
sbbl
jle
add
dec
or
push
xor
lahf
mov
mov
test
sbb
icebp
or
or
pushf
popf
es
mov
pop
xor
pushf
and
mov
pop
add
mov
or
pop
lds
inc
xor
lcall
add
test
xorl
faddl
dec
push
xor
mov
jb
or
leave
cmp
mov
scas
ss
dec
cmp
sbb
sub
jb
imul
arpl
mov
inc
adc
fistl
je
lahf
inc
inc
out
pop
xor
stos
fldcw
mov
xchg
outsb
push
push
dec
pop
pop
push
mov
std
ljmp
inc
ret
jmp
ja
push
andb
es
scas
movsl
and
outsb
jl
jle
and
jno
out
mov
mov
or
lahf
fmull
int3
inc
mov
push
jno
and
test
in
add
jp
mov
xchg
mov
andb
xchg
push
mov
cmp
adc
sbb
adc
and
ret
gs
jne
f2xm1
arpl
xchg
pop
dec
es
sbb
scas
mov
lock
repz
push
ljmp
sub
push
push
jge
push
pop
pusha
jl
bound
push
add
cwtl
aam
sub
xor
mov
add
add
jg
fstps
cld
insb
cmpsb
arpl
mov
pop
mov
jmp
insb
inc
sub
divl
and
stos
nop
int3
rolb
dec
pusha
lods
repnz
sub
xchg
lahf
shrb
sti
pop
stc
iret
xor
pop
lahf
adc
ss
jbe
lcall
jnp
mov
and
lods
xor
fcmovu
lea
clc
cld
in
pop
push
stc
sub
jge
inc
xor
sbb
xchg
insl
push
cmc
mov
je
popf
sub
mov
pop
mov
xor
jle
les
aam
shlb
xchg
iret
pusha
jbe
jo
mov
or
fnsave
push
in
and
dec
cmc
data16
adc
pxor
mov
rorl
or
lods
or
rcrb
mov
fnstsw
popa
xchg
dec
mov
sub
sbbl
add
cmc
shrb
js
ucomiss
outsl
xor
aam
stos
cmp
sbb
mov
inc
rorb
push
jo
mov
xor
lea
ret
out
stc
sbbl
adc
sub
pop
loop
adc
sarb
test
xchg
inc
mov
xor
cmp
sbb
scas
lahf
sub
cwtl
mov
outsl
sahf
push
aaa
pop
pop
inc
adc
iret
mov
into
fwait
je
cwtl
push
pop
arpl
cltd
outsb
call
insl
mov
inc
jns,pt
sub
ss
daa
fsubrl
and
or
das
ret
out
into
xor
lds
paddsb
jmp
insl
or
push
mov
add
or
mov
hlt
add
push
shr
cmpsb
fcomps
adc
hlt
jae
jo
pushl
cmp
cltd
frstor
cli
nop
mov
adc
lods
iret
inc
jmp
jp
jp
test
push
cmp
sbb
dec
and
push
adc
repnz
jle
jmp
imul
adc
mov
inc
int3
pop
pop
popf
sbb
sbb
cmp
insb
enter
lahf
cmp
mov
add
push
sbb
push
add
icebp
mov
dec
out
outsl
mov
ljmp
test
and
out
ret
add
insb
fs
lods
cmp
dec
fstps
mov
adc
test
push
dec
neg
inc
popa
pop
add
mov
fiadds
xchg
pcmpeqw
inc
test
mov
push
shl
cli
addb
repz
xor
push
stc
popf
push
pop
sti
in
push
cltd
or
add
xchg
sub
push
cmpsb
mov
clc
adc
imul
cmp
gs
and
xlat
xorl
pop
xor
addr16
pop
ljmp
and
push
push
cltd
adc
sub
xor
push
mov
sbb
enter
jp
addl
mov
cmpsl
cwtl
lret
popfw
xorl
adc
xchg
sub
xlat
sbb
jb
out
mov
mov
xlat
xchg
dec
push
add
pushw
addr16
xor
arpl
insl
mul
mov
imul
push
jle
lods
psubsw
sub
add
popa
pop
add
movsl
lea
inc
pop
and
mov
shll
movups
sub
dec
int3
mov
leave
cmp
sbb
sbb
mov
andl
push
aam
in
mov
jno
xchg
mov
mov
sub
insl
or
ss
loope
lahf
xor
dec
or
mov
js
add
mov
mov
lods
jbe
jecxz
jge
leave
aad
clc
ror
decl
and
orb
inc
es
dec
jp
lahf
int3
push
imul
xchg
test
sbb
sub
lods
inc
mov
jl
fstpt
push
cmp
or
jle
pop
add
mov
jno
pop
mov
popa
mov
lret
xor
sbb
cli
sub
mov
add
nop
rcrl
lahf
cld
cltd
xor
loope
adc
scas
inc
cmpsl
and
loop
xchg
pop
pushf
mov
push
js
test
jle
cmpsl
std
add
jmp
mov
fucomip
repz
ja
push
cmp
in
clc
mov
loopne
dec
sti
cmp
lret
xor
push
or
mov
aam
xor
es
int
sbb
shll
cltd
and
outsl
mov
insl
jg
inc
stos
or
insl
outsb
ds
out
ret
dec
or
pop
mov
mov
push
lcall
dec
push
mov
push
xor
or
fsts
lds
scas
jmp
rorb
int
mov
jecxz
mov
push
mov
sbb
sbb
cwtl
pop
ja
lds
popf
notl
sub
or
or
je
xchg
jne
shl
scas
lahf
jns
fstpt
adc
fs
inc
adc
add
add
pop
cmpsb
dec
popf
std
cmp
add
or
int
adc
stos
push
sbb
mov
sti
int
xchg
jb
out
dec
xor
lds
cmpsl
jmp
pop
inc
sbb
pop
mov
loope
in
xchg
xchg
jmp
cmp
jnp
pop
pop
cmp
cmp
rorl
in
jle
or
ljmp
pop
sbb
and
push
repz
cmp
jmp
dec
dec
stc
cltd
jns
test
add
loop
js
sbb
add
cld
insl
jle
xchg
lret
jecxz
jmp
push
sub
push
lea
dec
push
mov
or
adc
das
roll
inc
or
cmp
mov
sub
jg
in
in
adc
cmp
mov
dec
orb
lds
xor
dec
adc
jl
xchg
dec
test
in
pop
inc
int3
xor
es
xchg
cmp
sub
je
lock
jg
add
mov
nop
shr
mov
add
mov
or
mov
inc
leave
inc
jmp
int3
sbb
jne
jae
mov
mov
and
xchg
sbb
jmp
std
and
mov
inc
icebp
dec
movl
test
insl
test
cmpsb
arpl
outsl
xchg
andl
and
or
popf
pop
push
imul
aas
aam
xchg
sarl
xlat
sub
sbb
mov
ss
in
sub
push
add
into
test
adc
pushf
out
mov
stos
xchg
test
insb
inc
or
mov
addr16
test
js
cs
push
mov
pop
xchg
iret
jne
fldt
test
arpl
std
xor
mov
in
add
pop
jge
jns
or
iret
add
rcll
and
sbb
fisttpl
or
xlat
mov
test
adc
pop
fnsave
loope
lods
outsl
popa
and
mov
or
sbb
popa
pusha
pop
shrb
push
clc
cli
pop
dec
sar
int
movsl
mov
inc
cmpsb
lcall
pop
jne
jle
mov
add
sub
mov
in
call
xchg
lahf
mov
cwtl
xchg
sub
xor
inc
call
pop
repnz
lea
xor
xor
imul
xor
ficomps
xchg
int3
mov
into
jno,pn
sub
pop
and
lods
and
cmp
ja
fistps
push
jno
push
pop
mov
lea
xor
leave
outsb
ljmp
sub
jl
mov
daa
mov
mov
into
xor
cmp
stc
pop
jno
addr16
hlt
inc
ret
cmp
cmp
adc
rcl
outsl
mov
sarl
pop
and
fisubl
xor
pop
mov
stos
adc
pop
push
push
out
hlt
mov
out
lret
imul
cmp
sub
pop
daa
out
cltd
imul
mov
lea
imul
loop
or
inc
fs
roll
add
jg
movsb
dec
cwtl
sub
adc
fmull
push
xor
add
movsl
lahf
icebp
popl
jl
ljmp
rcrb
dec
cmp
jae
rcrl
cld
mov
scas
scas
inc
add
das
xor
dec
or
dec
repz
sub
cmc
sbb
lgs
xchg
testl
mov
jns
dec
ss
xchg
lea
cld
jno
jg
aad
mov
push
std
les
inc
out
mov
pop
push
xlat
mov
or
aaa
xor
cmp
or
push
jb
in
mov
sarl
and
pop
ret
adc
push
das
and
lds
pop
je
int3
jecxz
or
lea
mov
xor
xchg
jno
mov
fiaddl
xchg
inc
dec
lret
inc
lret
stc
dec
lods
das
adc
dec
cmp
pushf
pop
fistpl
pop
mov
lcall
repz
add
loop
dec
push
loop
mov
inc
push
lods
add
mov
jmp
lret
orl
lods
nop
cld
push
sti
sbb
xchg
mov
ficompl
mov
cli
in
jns
cmp
insb
add
push
mov
out
mov
testb
sbb
rorb
jnp
mov
mov
push
fnstenv
fiaddl
mov
aad
adc
xor
sbbl
stos
pop
jl
xchg
imul
pop
push
mov
adc
iret
dec
sub
js
or
sub
or
arpl
add
inc
pop
je
or
popa
data16
repnz
push
dec
cmp
rcl
cli
call
fisubrl
sbb
rorb
lret
sub
cmpl
sub
shrb
add
bound
push
std
hlt
icebp
mov
xchg
fstl
aad
shll
test
sbb
aaa
outsl
jbe
ret
or
sbb
push
pop
mov
cltd
mulb
bound
lds
repz
mov
add
popf
scas
stos
dec
and
scas
lahf
sub
imul
jo
jge
loopne
adc
cltd
aad
inc
mov
inc
ret
cmp
iret
fisubl
inc
ljmp
add
xor
scas
int3
mov
cmp
sarl
or
sub
adc
jge
pop
jno
in
mov
jne
add
mov
arpl
dec
in
roll
adc
cmp
xchg
inc
js
push
fsts
mov
popa
cmpsb
mov
es
inc
scas
repz
ret
ja,pn
imul
rorl
adc
pushf
jle
popa
lret
icebp
test
cwtl
push
aam
xchg
popf
sarl
pop
scas
popf
and
repnz
mov
lea
lcall
mov
repnz
cli
mov
mov
jecxz
dec
into
pusha
and
and
ljmp
mov
ja
cmp
jne
mov
mov
add
inc
sub
movsl
fldl
pop
loope
dec
adc
pop
shr
push
mov
push
xchg
adc
bound
add
mov
dec
ret
rorb
pop
hlt
push
add
pop
arpl
push
or
fsubp
les
bound
imul
and
mov
xchg
cltd
mov
jno
cmpsb
andb
data16
es
adc
daa
mov
xchg
shlb
test
cld
mov
push
mov
rcrl
mov
test
inc
sti
in
mov
daa
in
pop
cld
stc
fdivrl
lds
lea
mov
in
or
fdivrl
ret
out
pop
pusha
mov
dec
mov
sub
enter
xor
int
orb
pop
dec
repz
fldl
add
cwtl
push
mov
adc
out
pop
pusha
lds
in
int3
scas
inc
aad
shr
pop
idivl
rcrb
sbb
outsl
jmp
ljmp
cwtl
xor
sbb
or
or
pop
push
push
bound
inc
fnsave
clc
lods
insl
ret
sub
xchg
into
push
gs
cli
push
lds
dec
lock
push
cli
cmp
repnz
out
lea
out
loop
and
jae
add
xchg
mov
or
jg
out
xchg
jnp
push
bound
shll
stc
xor
jg
aad
into
xchg
xor
or
inc
fistl
lcall
cmc
repnz
sbb
outsl
mov
or
fstps
or
mov
push
cwtl
jbe
sbb
lods
mov
ret
jbe
fwait
outsb
mov
in
fnstcw
scas
cmp
clc
fninit
jl
test
xchg
dec
les
xor
or
and
push
sahf
mov
jle
pop
enter
mov
rorb
repnz
cmc
and
cmp
xchg
or
imul
mov
pop
and
mov
and
dec
jo
add
mov
std
fisubl
pop
call
adc
adc
sbb
xor
xchg
and
pop
jnp
ret
xchg
test
jnp
mov
sub
jbe
imul
push
sub
adc
rolb
rcr
add
mov
push
pusha
in
cmp
xchg
add
scas
shrl
ds
mov
xchg
std
and
mov
adc
sub
shlb
pop
jo
mov
stc
add
dec
sti
xorb
mov
sbb
add
jno
push
mov
sub
xor
mov
mulb
push
mov
and
insb
mov
addl
cmp
jo
insb
into
sub
imul
xchg
add
jecxz
fisubs
add
cmp
js
shl
shr
repz
mov
xchg
rclb
jne
add
push
repnz
xchg
push
mov
js
and
flds
in
movsl
int3
insb
sbb
int
add
in
jb
and
inc
dec
fisttps
je
fs
aam
stos
mov
mov
sub
xchg
lcall
xchg
jns
mov
scas
push
lods
sub
test
sub
aad
ret
enter
hlt
dec
lods
loopne
and
scas
mov
push
mov
pushf
negb
xchg
cmp
lcall
pop
movsl
call
dec
and
js
jae
add
mov
es
ret
je
xor
mov
mov
mov
xlat
pusha
addl
repz
mov
jo
popf
repnz
mov
into
jecxz
fwait
cwtl
orb
test
fidivrs
jmp
repz
sbb
dec
mov
ljmp
xchg
popa
sarl
enter
in
dec
out
fcmove
enter
gs
call
pop
pop
cld
fbstp
leave
push
leave
imul
loope
cmp
les
repz
pop
pop
pop
or
inc
cld
mov
in
add
jmp
jae
stos
dec
push
lods
decb
aam
rol
shlb
mov
xchg
jb
push
jae
cltd
cmp
stc
xor
into
xchg
imul
adc
cmp
jmp
xor
jp
js
add
insb
imul
pop
inc
inc
icebp
andl
inc
xchg
xor
jg
or
movsb
pop
pop
insb
jno
pop
xor
or
or
pushf
add
outsb
xchg
int3
fcomps
add
out
cmp
inc
std
decl
ror
jecxz
test
push
add
test
fisubrs
jge
sbb
inc
es
rcr
cwtl
repnz
loopne
insl
fucomp
lock
and
pop
leave
lods
sub
out
notb
sbb
pop
cmpsb
jnp
mov
les
pushf
mov
push
pop
fucomp
fsub
lock
aam
int
addr16
mov
stc
test
int3
outsl
xchg
xchg
ror
sbb
or
lret
sbb
push
icebp
out
cmp
inc
fsubl
out
mov
mov
push
xchg
xchg
stc
or
dec
lcall
outsb
ja
pop
mov
cmp
mov
sbb
add
popf
jmp
fwait
push
sahf
push
mov
scas
leave
sub
mov
push
popa
jb
push
sbb
test
lods
mov
pop
or
lahf
mov
push
fcompl
rcl
stos
mov
lcall
lret
add
mov
mov
jnp
popa
and
or
jg
ret
jg
movsb
cmp
loop
lret
clc
adc
data16
stos
xor
pop
xor
adc
push
and
and
and
mov
xlat
int
or
mov
es
inc
outsb
shr
cli
xor
mov
es
leave
shrb
adc
push
in
mov
xchg
fdiv
ljmp
movsl
sar
in
mov
lret
imul
gs
xchg
xor
sahf
push
aam
iret
loope
out
in
sbb
mov
pop
repnz
scas
xlat
cmp
cmp
push
xchg
movsl
inc
pop
cli
loope
pop
aaa
xchg
mov
dec
scas
decb
mov
lret
out
inc
shl
inc
pop
push
xor
push
loope
ret
sbb
int3
mov
jnp
pop
lock
fwait
jle
lea
xchg
lahf
and
jecxz
in
enter
sbb
pop
mov
lds
mov
add
xchg
arpl
or
or
scas
jge
in
and
push
jl
jp
dec
inc
hlt
insl
lds
xor
cmp
sub
jnp
enter
test
and
sti
repnz
idiv
mov
cmp
jle
lock
mov
fsubr
lahf
add
adc
cmpsl
pop
jns
sub
inc
mov
pusha
xor
xchg
popa
sar
dec
notb
out
fs
lock
xor
shr
je
mov
inc
aad
mov
add
shrl
dec
mov
repz
lret
into
rclb
sbb
pop
sub
ljmp
iret
iret
outsl
xor
mov
scas
mov
adc
in
call
xchg
xchg
dec
loop
sbb
aam
enter
jne
adc
cs
scas
arpl
fstpt
ret
jp
inc
xlat
enter
pop
cmp
inc
lret
cmc
enter
bound
scas
cmc
inc
mov
sarl
fnsave
sbb
adc
mov
pop
pop
gs
movsl
and
pop
nop
je
adc
xchg
repz
sti
add
lcall
ss
in
js
push
out
test
mov
movl
loop
in
push
sub
pop
pop
fs
adcb
and
inc
mov
mov
add
sub
add
adc
sub
jle
adc
jle
mov
mov
sbb
loop
fisubl
cmpsl
jnp
xchg
jns
inc
add
xchg
insb
jno
in
jl
push
in
mov
inc
mov
xorb
push
jg
push
pop
cwtl
testl
dec
outsl
icebp
test
sbb
cmp
mov
mov
pop
mov
loope
fneni(8087
and
xchg
lret
or
or
cmc
xchg
mov
sub
bound
and
fwait
xor
push
dec
jo
aam
scas
ror
scas
scas
cmp
movsl
mov
cwtl
cld
xchg
shll
or
xchg
das
mov
mov
or
in
xchg
outsb
ss
aaa
test
test
syscall
inc
aad
sub
adc
mov
add
sbb
ljmp
sbb
clc
sarb
cmpb
xchg
lods
sub
adc
sub
sbb
aaa
push
sbb
jno
sarb
dec
inc
ss
mov
jecxz
fstp
insb
adc
or
mov
jle
adc
lret
pop
jg
and
mov
repz
mov
out
push
push
add
js
dec
add
movsb
clc
sub
push
sub
or
mov
pop
ja
leavew
aas
adc
ss
cwtl
pop
jno
in
aad
dec
sub
movsl
inc
insl
cli
into
loope
jne
repz
daa
lock
fiaddl
fcomi
lds
dec
mov
testb
test
cld
bound
inc
cmc
ds
std
adc
jp
fistl
xchg
pop
add
xchg
imull
loope
adc
adc
imul
cltd
arpl
inc
cs
cmp
jno
outsb
push
pop
jae
call
mov
les
mov
fcmovb
jmp
and
dec
and
cmp
cltd
cmp
scas
pop
in
pop
pop
into
jl,pt
or
push
lods
fcoms
aam
xchg
or
mov
inc
jo
mov
push
nop
pop
pop
out
sbb
daa
popa
mov
test
inc
mov
aad
sti
inc
shll
dec
aam
bswap
add
xchg
inc
call
cmp
jo
jns
cmp
xchg
sub
adc
push
inc
mov
mov
js
loop
outsl
pop
rorl
and
or
or
sti
mov
in
aaa
mov
sbb
or
data16
jmp
mov
hlt
negb
loope
ja
xchg
xchg
rcl
mov
jp
pextrw
mov
push
ljmp
cmp
cmpsb
scas
fnstenv
xor
cmpsb
add
addr16
fwait
movsl
int
inc
and
ja
dec
xchg
iret
xor
decb
lret
lds
gs
fxch
and
rcrl
sub
movaps
dec
mov
inc
push
mov
and
outsb
pop
jle
ret
scas
es
sahf
jmp
flds
adc
jnp
push
push
add
out
add
pop
ret
ljmp
sbb
pop
jg
cld
enter
jo
cmp
dec
ret
jmp
push
cltd
pusha
or
nop
jb
mov
push
in
mov
cli
inc
loopne
in
xor
cmpsl
shll
test
mov
jnp
out
or
das
imul
shll
mov
cmpb
shrl
cmpl
jbe
cmp
jbe
imul
jp
jbe
daa
rol
jp
pop
js
lret
ja
int
rolb
stos
pop
cmp
lahf
jge
ss
mov
pop
mov
es
push
xor
mov
xlat
daa
test
add
cmp
push
lahf
in
sub
jo
mov
dec
sub
mov
add
loope
in
stos
add
push
jmp
push
dec
pop
inc
test
fiadds
xor
nop
nop
or
or
sub
repnz
shlb
dec
and
push
leave
mov
jmp
fmuls
jo
mov
cmp
dec
push
pushf
push
pop
movsl
in
or
pushw
mov
ss
rorb
jmp
cmpsb
sub
das
jb
stos
inc
mov
into
mov
lea
andb
inc
inc
inc
xchg
pop
pop
cli
out
pop
jnp
sub
nop
pop
add
jo
ror
test
es
lods
js
arpl
dec
into
mov
icebp
and
jbe
mov
div
int
pop
ljmp
pushf
cmp
sahf
aad
mov
test
bound
push
jne
test
js
pushf
xor
inc
sbb
int
mov
rcl
lret
enter
xchg
addr16
push
mov
movsl
xchg
mov
gs
imul
scas
and
call
inc
out
cltd
hlt
inc
inc
lret
rolb
inc
push
xchg
dec
fidivrs
cmpsl
cld
incb
lods
ja
mov
sub
inc
mov
adc
inc
bound
mov
jbe
jno
dec
and
jp
dec
sbb
xchg
push
pop
push
cld
xor
jbe
imul
call
adc
ljmp
mov
xor
inc
test
or
cld
jge
xor
xchg
add
pop
dec
mov
mov
es
inc
nop
repnz
pop
and
cmpsb
mov
jg
stc
xchg
jns
popa
iret
stos
inc
pop
int3
cmp
movsl
aas
xor
or
lods
push
aaa
or
inc
jnp
scas
aas
scas
daa
test
fwait
cmp
mov
jbe
sub
xchg
xchg
sarl
cmc
aaa
imul
in
incb
and
test
movsl
and
mov
mov
movsl
jmp
push
jnp
mov
and
add
shrl
or
jle
cmp
pushl
adc
cmp
xor
mov
in
mov
lea
dec
pop
xor
inc
in
and
pop
xchg
imul
push
addr16
xchg
push
dec
push
jnp
mov
mov
inc
sub
push
push
aas
int
xchg
xchg
js
mov
int
enter
fucom
imull
add
jnp
and
aad
mov
cltd
add
das
and
mov
xchg
xchg
pop
cmp
or
push
pop
mov
cli
pop
mov
push
push
mov
dec
cmp
mov
lds
pusha
jb
insl
xor
test
outsl
and
int
dec
stos
mov
and
dec
add
out
out
shlb
and
inc
aam
mov
scas
jmp
cmp
lret
adc
push
sahf
mov
ret
mov
test
jb
xlat
subb
adc
pop
fistps
jae
xchg
push
cmp
test
fldcw
push
addr16
fdivs
fldcw
scas
xor
cmp
mov
lcall
bound
inc
add
in
dec
cmp
cs
or
push
movsb
lret
dec
enter
and
xchg
sbb
mov
push
sbb
or
cmpsl
mov
btcl
sbb
hlt
push
fcomps
aam
popf
lock
mov
pop
xor
leave
stos
sub
incl
andl
int3
pop
push
mov
sub
cmp
leave
fs
pop
je
mov
adc
or
or
add
or
cwtl
pushf
cmpsb
bound
lret
fiaddl
scas
fcmovnu
in
cmc
enter
stos
mov
xchg
xor
inc
adc
movl
fabs
push
inc
cmpsb
pop
adc
add
sub
es
xor
sbb
inc
mov
shrl
cmpsl
sbb
outsl
fisubs
scas
add
cli
xor
inc
or
jmp
xor
jb
cmc
notl
mov
fwait
int
js
jge
inc
repnz
push
jae
mov
sub
push
jnp
lods
xchg
ror
sbb
add
inc
adc
push
mov
pop
xchg
cmp
push
add
xor
lock
xchg
xlat
jg
jno
mov
push
imul
cmp
mov
imul
add
inc
out
xor
sub
pop
movsb
mov
fbld
in
mov
in
dec
sti
add
mov
nop
ds
outsb
aam
or
pop
sub
and
pop
repz
sahf
inc
adc
dec
fidivrl
movsb
out
jle
sub
sbb
adc
mov
repnz
xor
mov
dec
addr16
xchg
cmpsb
push
cmp
jnp
xor
push
cmp
xchg
cltd
inc
sub
sbb
dec
jnp
xchg
mov
jo
ss
and
arpl
scas
lcall
or
loope
dec
std
rcr
sub
push
or
call
mov
test
jns
in
int3
dec
and
jmp
rdmsr
mov
sarb
int3
sub
insb
insb
mov
lods
inc
je
mov
jecxz
push
insb
mov
mov
lods
push
pop
test
mov
inc
xlat
insb
das
pushf
push
xor
lret
insl
dec
mov
shr
and
ret
mov
mov
jb
add
in
cwtl
iret
std
sti
insb
sbb
adc
aas
jnp
mov
push
in
addl
ljmp
enter
pop
mov
imul
call
rcrl
insb
xchg
out
xor
and
and
jecxz
and
lock
pop
and
movsb
test
xrelease
adc
imul
lret
in
sub
incb
adcl
fildll
xor
cmpsb
cmp
sub
pop
inc
or
jne
mov
pop
in
fdivp
pop
jae
push
aam
push
fnstsw
xchg
push
or
inc
adc
dec
mov
nop
test
inc
sbb
ss
dec
roll
fsubl
mov
stos
mov
repnz
mov
or
arpl
mov
jl
sbb
pop
shlb
je
dec
add
popf
jg
jne
enterw
dec
xchg
in
mov
icebp
mov
xchg
cmp
shld
aad
mov
mov
add
inc
mov
testl
jns
xchg
mov
sti
leave
addr16
pop
jg
mov
push
cmp
cmp
aam
sub
sub
xor
cmpsl
push
div
lods
lret
or
mov
fildll
sbb
mov
and
std
fwait
iret
mov
mov
or
xor
test
lahf
pop
ds
aam
jns
notl
sbb
inc
pop
push
jo
or
push
sahf
aad
insb
enter
inc
and
inc
mov
mov
add
sbb
std
in
rol
xchg
out
lods
outsl
adc
dec
pop
out
cs
jle
outsb
clc
hlt
aaa
push
mov
aas
lods
cltd
sub
jnp
pop
pop
in
sbb
outsl
test
inc
adc
xlat
jmp
pop
add
outsb
push
aaa
mov
fwait
cmc
pop
icebp
pop
mov
faddl
ss
jns
lret
jg
test
out
loop
pop
ss
pop
aam
pusha
xchg
cmp
jp
test
mov
mov
scas
mov
jb
inc
scas
inc
jbe
repz
ffreep
jle
aaa
ret
push
jne
xor
iret
mov
outsl
mov
xor
lea
or
pop
add
out
inc
jl
inc
pop
and
pushf
cmc
aad
call
adc
repnz
and
sub
xchg
jmp
mov
mov
repnz
scas
nop
adc
arpl
or
mov
shrl
cmp
in
mov
mov
push
jne
ret
repnz
push
push
mov
xchg
notb
xor
repnz
jp
jmp
aaa
movsb
add
repnz
sbb
sub
add
sbb
insb
push
mov
push
adc
daa
mov
or
lock
dec
jbe
sub
das
sub
test
push
xor
outsb
into
fwait
adc
mov
mov
sbb
sub
cs
mov
imul
loopne
sbb
js
movsl
jbe
jnp
ds
enter
ds
sbb
ja
jb
call
aad
cmpl
cmpl
test
push
inc
loop
iret
xor
faddp
cmp
mov
mov
jo
iret
mov
aam
in
jbe
xchg
aad
mov
push
push
lea
sbb
cmp
outsl
sub
mov
pop
xchg
lods
jnp
aaa
sub
fcompl
or
out
daa
push
test
push
jecxz
sbb
lods
out
stc
inc
cmpsl
jns
pop
ljmp
cmp
lods
add
pusha
lds
pop
cmp
adc
pop
jbe
lret
call
cmp
sub
push
xchg
mov
ret
hlt
in
les
fstpt
xchg
movsl
iret
fsts
js
sbb
dec
xor
rorb
aaa
or
mov
movsl
cmp
cmpsl
fsubs
lahf
loopne
push
add
cwtl
loop
testb
pop
ljmp
fwait
push
dec
dec
push
jb
pushf
jle
sti
loop
lret
sub
scas
and
sar
lcall
sub
fcomi
shlb
fldl
and
outsb
sub
fdivr
test
sbb
ljmp
loope
sub
or
andl
push
lods
cmp
xor
scas
and
pop
push
mov
xchg
lahf
lods
jne
and
subl
sbb
in
lret
sbb
fcom
or
outsl
dec
xchg
cmp
sub
inc
pop
fisttpl
sbbb
jne
divb
adc
cs
jmp
aas
xchg
movsl
push
out
mov
pop
in
mov
pop
pop
loop
imul
push
not
ja
orb
repnz
ds
or
push
shrl
pop
lds
loop
mov
xchg
mov
and
mov
or
lods
shll
gs
sahf
and
dec
or
xor
mov
jno
xor
push
stc
int3
cmc
and
add
lret
xor
pop
xlat
cmp
cmc
cmpsb
icebp
pop
or
pop
dec
iret
pop
add
dec
mov
cld
call
add
pop
push
ljmp
clc
cmp
insl
and
repnz
test
or
in
and
jmp
cld
ljmp
popa
cmp
and
shrl
xor
jp
push
ret
mov
add
ffreep
clc
loope
inc
fsubl
ljmp
shrl
repz
pop
fcmovnu
sbb
test
cmpb
pop
pop
xchg
cmp
dec
cli
xor
jae
xor
loopne
mov
into
test
add
cld
add
cmp
fcompl
roll
insb
imul
mov
and
dec
outsb
add
mov
arpl
xor
push
jmp
out
mov
sahf
jge
jmp
xlat
add
adc
shr
iret
xor
gs
cmp
loope
bound
xor
dec
and
push
leave
pushf
inc
cmp
repnz
sbb
push
cmp
inc
fbstp
mov
jge
cmp
mov
insb
icebp
lods
push
xchg
int
adc
sti
sub
insb
inc
rclb
inc
adc
or
movsl
adc
popf
enter
push
sub
mov
or
mulb
sbb
dec
inc
jmp
sahf
cmpsb
cmp
popf
xlat
sub
adc
push
nop
cmp
fisttpll
mov
mov
xor
divl
ja
hlt
iret
mov
dec
lret
imul
sar
push
jb
movsb
mov
lds
mov
cmpsb
dec
ss
stc
dec
xor
les
nop
adc
add
or
pop
out
pop
mov
mov
cmp
ffreep
jecxz
mov
rcll
or
and
cmpsl
mov
out
push
push
push
test
lret
out
jae
daa
scas
xchg
mov
push
popf
mov
xchg
popa
lahf
sarl
adc
inc
inc
je
in
cmpsl
addb
imul
js
pop
inc
fmul
mov
call
push
aaa
inc
call
mov
lcall
lret
scas
pop
jg
inc
mov
cmp
adcb
sbb
mov
cli
or
fdivs
jl,pt
mov
mov
xchg
lock
pop
pusha
push
sbb
mov
loopne
inc
aad
and
lret
and
xchg
cmp
dec
sub
sbb
mov
lea
inc
jne
mov
dec
daa
inc
mov
sub
ja
cs
out
out
dec
movsb
push
outsl
fidivl
out
rolb
cltd
scas
insl
cmpsl
movsb
decl
xor
or
xor
scas
cld
mov
sub
push
adc
orb
rcl
xchg
rcr
push
loopne
fwait
pop
in
mov
fidivl
xchg
repnz
sub
js
pop
push
gs
pop
ret
shll
pop
sub
je
mov
std
adc
and
push
jmp
inc
mov
pop
inc
dec
add
lret
xor
dec
inc
cld
test
inc
xchg
xchg
hlt
dec
enter
pop
add
mov
roll
mov
sbb
lahf
inc
inc
mov
sub
dec
jae
mov
loopnew
inc
cmp
sub
ja
aaa
adc
mov
aad
pop
pop
and
dec
xor
int
shrl
icebp
sbb
inc
inc
mov
test
pop
call
add
js
jp
mov
cs
rcll
mov
push
dec
sub
std
enter
xor
imul
cmc
pop
js
inc
jge
lds
les
gs
mov
lret
movsb
xor
fstl
mov
cmp
mov
ljmp
mov
pop
add
push
pop
loop
js
popf
out
andl
push
sub
jnp
dec
cmp
stc
add
scas
mov
sbb
push
aad
mov
add
fwait
push
mov
jecxz
xchg
mov
in
add
je
incl
out
imul
pusha
flds
xchg
push
add
and
icebp
test
jp
and
testb
dec
cmp
int3
push
adc
pop
movsb
aaa
loopne
movsb
push
cs
lock
std
cmp
data16
loopw
in
mov
dec
xor
test
sub
insb
jns
push
sbb
stos
mov
xchg
aad
loopne
in
sbb
aad
pop
inc
fidivl
outsl
add
pop
cmc
inc
popa
and
mov
or
add
loop
or
jmp
inc
and
xchg
push
sti
xchg
popa
fcmovu
arpl
je
sub
roll
push
jecxz
cmp
test
jmp
push
gs
xlat
and
push
cmp
mov
je
cmp
add
cmpb
fidivrs
fs
in
add
pop
xchg
js
call
sbb
fists
lods
adc
pop
inc
sub
dec
aam
mov
pop
mov
jae
movsl
imul
icebp
outsb
add
jne
insl
outsl
and
lock
xchg
stos
loop
in
mov
fdivr
pop
mov
dec
inc
popa
das
test
lcall
pop
xchg
dec
sbb
sub
cmp
incb
mov
push
jbe
js
pop
insb
and
subb
xchg
dec
xchg
cltd
push
cmp
and
sbb
fprem1
dec
fdivs
and
xor
dec
jl
icebp
clc
popa
or
ljmp
pop
sub
enter
mov
push
insb
hlt
adc
mov
pop
fndisi(8087
icebp
fidivs
sbb
add
jbe
mov
push
push
outsl
mov
jl
sub
fidivrl
and
and
push
xor
mov
imull
mov
in
std
jae
mov
shll
sahf
fbstp
pop
hlt
jne
lea
jne
mov
je
rorb
dec
arpl
mov
arpl
jne
add
roll
jno
in
jecxz
sbb
imul
adc
jle
inc
cmc
addr16
fsubrs
call
int
pop
push
push
sbb
insb
popa
testl
mov
xchg
mov
and
imul
adc
pushf
sbb
push
jmp
xor
xchg
int3
das
rolb
addr16
xchg
into
xor
jmp
xchg
push
dec
sub
int
jno
clc
ja
xchg
insl
outsb
cmp
or
pop
xor
add
xchg
pxor
push
in
jp
cld
sbb
cmpsb
pop
xchg
cmpb
cmc
clc
jno
xor
jmp
es
adc
jge
and
push
mov
cmp
cli
scas
mov
shr
cmpsl
cmpsl
pop
ds
lcall
mov
xchg
pmulhuw
jbe
leave
aam
lret
mov
stos
int3
xchg
add
add
add
fmuls
jno
in
loop
dec
fiaddl
ds
mov
inc
and
xchg
std
movsl
aam
stos
jg
xchg
pop
mov
out
inc
jb
test
aaa
ret
lahf
ss
imulb
pushf
dec
or
add
jne,pn
gs
add
mov
rcrb
add
cwtl
push
jle
pushl
push
test
mov
cltd
stc
adc
dec
mov
popa
jge
jns
inc
adc
lock
jl
out
pop
xchg
xchg
imul
xchg
mov
nop
dec
sub
dec
cld
imul
jne
adc
dec
test
jo
and
in
fistps
out
sub
enter
dec
pop
shll
leave
push
xor
orb
push
inc
mov
xor
adc
sbb
inc
sub
xchg
pop
push
fiaddl
outsl
aam
fnstcw
imul
fisttpl
cmp
ja
test
jnp
leave
cmp
inc
gs
inc
pusha
repz
dec
adc
pop
dec
scas
mov
sbb
mov
je
jae
cmp
lods
mov
mov
mov
inc
icebp
jp
dec
jge
add
fldenv
pop
es
out
lcall
lods
adc
pop
sbb
push
icebp
out
ret
lods
or
scas
shll
daa
movsl
mov
and
addr16
pop
pop
push
nop
idivl
jp
int
popf
and
imul
inc
test
xor
pop
mov
or
pop
add
push
adc
lahf
mov
or
cmpsl
cmpsb
test
gs
push
pop
ljmp
mov
jne
pop
mov
lea
fimull
ja
mov
lcall
popf
stc
cli
push
or
xor
mov
cli
mov
xor
jnp
jo
mov
mov
push
add
inc
fsubrl
xchg
xchg
add
aam
enter
jmp
sub
adc
mov
aaa
inc
mov
scas
xor
dec
push
or
pop
and
pop
cli
clc
gs
jle
pop
in
fwait
push
lock
xor
cld
adc
mov
scas
ljmp
f2xm1
insl
xor
inc
xchg
adc
sbb
mov
shll
inc
adc
fstpl
xchg
int3
bound
xlat
ljmp
std
jno
adc
and
sbb
orl
mov
imul
mov
loope
inc
adc
xchg
repz
sub
in
arpl
jmp
ret
jge
cmp
xor
js
call
out
into
out
mov
stos
inc
lahf
ja
es
cli
sbb
dec
inc
nop
nop
sahf
xchg
sar
pop
dec
lds
xor
fistps
daa
icebp
out
fisubl
push
aad
subl
andb
mov
sub
sub
mov
fistpl
icebp
nop
stos
shlb
ret
or
xor
hlt
stos
and
es
hlt
dec
cmpsb
out
adc
cmpsb
inc
cmp
or
mov
jge
cmp
sbb
pusha
push
fs
sbb
mov
ss
adcl
dec
mov
loop
test
test
jbe
es
inc
mov
jne
jae
jp
xchg
lds
fidivl
push
mov
mov
and
add
sbb
stc
inc
fs
adcl
xchg
fdivrl
xor
cmp
movsl
adc
mov
dec
sub
mov
and
inc
adc
in
xor
out
mov
push
stos
lret
xor
jle
insb
cld
in
inc
enter
adc
cwtl
cwtl
adc
or
bound
iret
push
cmp
pusha
or
imul
cmp
pop
movaps
gs
dec
filds
sub
pop
dec
rorl
stc
adc
mov
cmp
cmp
pushf
jecxz
pop
cmovle
imul
lahf
cmpsl
rcl
xor
mov
testb
gs
ja
jecxz
sub
push
rorl
faddl
test
adc
mov
push
xchg
in
roll
jae
mov
repnz
repnz
dec
popa
cmp
add
mov
das
ds
and
stc
fs
pop
push
pop
xor
jecxz
out
xor
push
sub
cmp
aad
test
xchg
lods
mov
xlat
fidivrl
or
js
es
mov
adc
add
std
inc
fs
jmp
mov
insl
jl
pusha
dec
lea
das
shl
insl
xor
repnz
roll
movsl
fs
and
adc
adc
push
push
jbe
shll
out
cmp
ljmp
inc
inc
outsl
cltd
daa
mov
mov
das
call
test
mov
shlb
xchg
clc
xchg
dec
and
or
jne
inc
movsl
out
scas
dec
push
es
xchg
pop
bound
add
cmp
xchg
adc
add
test
jbe
aaa
mov
push
or
ja
stos
sarb
insl
jbe
jno
cmp
rorl
mov
jnp
data16
pop
xchg
sar
cmp
stos
xor
or
and
sbb
les
mov
mov
shrb
mov
outsl
dec
call
movsl
inc
and
iret
adc
hlt
les
add
mov
mov
inc
subb
and
iret
sub
in
sub
jne
dec
in
sub
push
popl
mov
int
pop
xor
dec
mov
cmc
xchg
lahf
xchg
add
iret
mov
push
imull
add
dec
fdivl
enter
int
push
gs
sti
and
bound
adc
pop
mov
ficompl
inc
inc
sbb
cmp
data16
inc
mov
push
lods
gs
push
outsb
or
cmp
push
movsl
jns
mov
cli
jg
in
out
nop
ds
mov
es
xchg
sahf
xchg
stos
test
cld
movsb
adcb
mov
out
mov
or
xor
cmp
pop
xor
push
lods
jp
mov
jb
shlb
scas
shlb
xchg
pusha
mov
mov
inc
sahf
mov
test
xchg
push
and
mov
notb
sub
mov
dec
neg
mov
sub
in
imul
adcl
push
add
xor
inc
lds
lcall
and
adc
leave
jle
and
lods
sub
fcompl
xor
and
vphaddubq
imulb
bound
pop
loopne
pushf
out
addr16
fidivrs
lock
addb
sahf
es
cwtl
cli
xchg
clc
ljmp
inc
scas
and
ss
sahf
scas
pop
rolb
aaa
pop
lret
or
xchg
lret
sub
ljmp
sbb
xor
movsb
add
outsl
ds
stc
arpl
fldt
sbb
adc
add
dec
mov
push
inc
fwait
mov
dec
lock
push
imul
mov
xchg
xor
push
out
inc
dec
fsubl
repz
sti
push
cmp
xlat
aad
mov
pop
jle
test
mov
into
dec
outsl
mov
or
cmp
cmp
and
loope
cmp
add
aas
shl
push
inc
lret
xor
jle
sub
cmpl
insb
or
mov
pop
stos
adcl
mov
pop
popf
das
jge
sar
fldl
pop
sbb
add
jne
in
add
sub
out
leave
sbb
gs
ret
rclb
dec
or
dec
mov
mov
iret
aas
out
scas
sub
jne
inc
adc
push
test
cmpsl
dec
imul
sbb
mov
aad
xchg
jg
jl
pop
addr16
mov
std
sar
cwtl
jg
repz
sub
mov
rorb
add
es
jne
jl
roll
dec
push
mov
stc
std
push
int3
gs
outsl
das
stos
or
arpl
stc
dec
sbb
cmp
enter
mov
movsl
push
aas
test
addr16
or
in
bound
mov
ficoml
sti
add
dec
or
nop
out
jmp
or
sbb
sub
xchg
loop
ja
cmp
test
mov
cmpsb
in
xchg
fidivl
test
gs
mov
push
in
out
sub
dec
pushf
pop
andl
jns
push
jg
dec
negb
ja
jmp
addr16
outsl
push
add
mov
lret
popa
clc
cld
xor
les
mov
jmp
xlat
sub
adc
and
pop
icebp
jecxz
mov
test
add
push
movsl
add
in
and
mov
enter
int
in
inc
adc
addb
push
popf
xchg
add
add
jecxz
push
fsubrl
shr
fdivrp
pop
adc
sbb
mov
push
or
push
xor
ss
push
fbld
pop
cltd
shlb
stos
fildl
inc
inc
fsubrl
fimull
mov
rolb
jno
inc
sbb
out
push
dec
sahf
mov
and
dec
sub
mov
stos
test
iret
pop
xchg
stos
sbb
gs
pop
rcrl
xchg
xor
push
mov
ja
pop
rcrb
mov
or
aam
adc
xor
mov
repz
mov
ds
in
cmp
sub
push
fwait
push
into
or
or
adc
iret
dec
push
cmp
jge
out
bnd
dec
push
jae
ret
xchg
aam
xor
mov
sub
js
test
adc
fdivrs
stos
pop
out
xor
jecxz
rorl
loop
subb
std
pop
int
pop
imul
stc
mov
adc
shrl
xchg
xorps
sbbb
or
repz
push
sbb
mov
dec
cmpsb
outsb
iret
das
in
out
inc
sub
mov
mov
pop
add
xchg
cmc
inc
stc
sub
sbb
sub
jo
xchg
shlb
xchg
insb
iret
cs
sbb
scas
adc
cmp
push
mov
mov
lea
xor
cmc
mov
stc
dec
inc
inc
dec
pop
shr
fwait
jo
xchg
mov
xor
jmp
push
adc
xor
fcompl
pop
xchg
clc
stos
or
mov
mov
pop
fs
jns
pop
dec
ljmp
xchg
mov
aaa
lds
stos
repnz
loopne
popa
add
push
lds
fisubs
loop
jg
or
push
mov
movsb
mov
mov
push
mov
and
enter
mov
imul
int3
adc
push
add
mov
push
arpl
add
pop
icebp
push
or
mov
pop
cltd
dec
in
and
lds
in
jg
jnp
dec
mov
xor
movb
out
xchg
fcompl
out
mov
fldenv
jmp
mov
sarb
ret
pop
push
in
and
mov
out
xchg
sub
dec
daa
out
inc
sbb
jmp
int3
iret
cmpsb
sarl
mov
mov
mov
fcomps
add
fists
in
bnd
bound
push
sahf
ror
mov
add
and
or
scas
xor
xchg
cmpsb
outsb
mov
mov
xchg
ss
push
or
push
ds
mov
rorl
hlt
mov
sahf
shlb
cltd
xor
iret
mov
addl
or
sbb
loope
out
nop
fwait
scas
mov
ljmp
lcall
or
jmp
or
das
outsb
jns
mov
xor
pop
out
les
jmp
pusha
push
insb
lods
ss
add
outsl
cmpsb
and
mov
lods
cmp
aam
mov
mov
mov
mov
cmp
jb
sbb
lret
repnz
outsb
cmp
roll
lahf
adc
push
in
jl
cmp
hlt
push
aas
test
xchg
xchg
cmp
fldenv
addr16
and
gs
jns
cmpb
jecxz
xchg
cmp
pop
loopne
jns
stos
inc
lret
push
adc
loope
sti
and
data16
ljmp
cmp
in
sti
cmp
cld
lock
push
div
mov
ss
sub
mov
dec
fildll
adc
sub
pop
rorl
aad
mov
shlb
stos
push
mov
jmp
imul
lahf
rcrb
sti
mov
and
nop
sub
mov
sub
pop
test
sub
inc
mov
dec
sti
push
test
push
jecxz
int
sbb
out
repnz
xchg
pop
pop
out
mov
pop
sbb
fsubrp
pusha
gs
pop
cmp
stc
es
outsb
ret
bound
cmp
dec
daa
mov
rorb
gs
test
and
and
pop
push
xor
lock
adc
and
mov
dec
into
mov
cmp
mov
out
out
cmp
or
ret
arpl
ljmp
sub
aam
addr16
and
add
inc
and
loopne
or
jb
insb
mov
mov
mov
dec
scas
push
cmp
cmp
cmpsb
ret
iret
addb
jae
mov
ljmp
repz
fiadds
pop
in
dec
inc
mov
out
imul
sub
pop
dec
and
enter
mov
adc
or
inc
xchg
je
enter
fadds
pop
mov
mov
fs
and
cmpb
pop
adc
pop
notl
cmp
sub
sbb
adcl
mov
fsubs
xchg
jle
mov
dec
popa
outsb
inc
cli
mov
pusha
jae
pop
insb
cmpsb
dec
mulb
pop
and
mov
ljmp
pop
shrl
aam
dec
or
clc
push
pop
inc
repz
mov
sahf
xor
adc
lea
dec
xor
cmp
in
test
outsb
pushf
dec
xlat
fimuls
add
pop
cmp
push
sbb
je,pn
and
sbb
dec
imul
leave
pusha
daa
mov
std
aaa
rolb
sbb
xchg
dec
sub
add
ret
jnp
movsb
sub
push
inc
mov
cld
mov
or
out
mov
outsb
mov
mov
add
pop
adc
fcomp
jl
jb
jbe
cmp
int
mov
jno
inc
shr
xchg
in
out
je
ficompl
xor
test
fadds
dec
adc
and
lahf
loopne
xchg
ret
sub
test
mov
pop
ja
dec
dec
cmpsl
or
mov
push
push
add
jmp
mov
inc
xchg
js
push
int3
enter
inc
xlat
das
jns
dec
mov
nop
mov
loop
sbb
out
and
push
cld
mulw
ss
insb
mov
es
mov
xchg
ret
and
inc
addl
lret
pop
jge
xchg
xor
arpl
sarb
push
mov
aam
xor
lods
movsl
loope
out
xor
shrb
in
rol
sbb
sarb
les
aad
inc
popa
imul
and
xchg
testb
test
fnstsw
inc
pop
scas
add
adc
cmpsb
je
int3
inc
pop
xchg
outsb
fldcw
xor
ja
mov
push
clc
popf
or
out
in
push
jo
adc
or
loope
imul
sbb
leave
lret
inc
mov
push
xchg
mov
lock
pop
cmpb
inc
repnz
mov
fsub
sar
ss
xchg
mov
push
jae
push
pop
dec
into
push
dec
xchg
lahf
aad
fistl
add
and
cmp
and
fcmovnbe
push
inc
jbe
je
dec
and
mov
test
inc
xor
mov
jb
call
das
add
push
jp
mov
push
fimuls
dec
hlt
push
jno
ljmp
fdiv
and
nop
jo
xor
add
shlb
or
xchg
mov
add
insb
add
or
mov
lret
sbb
push
in
dec
in
or
insb
mov
push
push
and
lret
inc
xchg
and
mov
and
test
imulb
adc
test
pop
aam
dec
nop
insl
cmpsb
pop
out
inc
jnp
shlb
cmpl
xor
aaa
pop
adc
cmc
dec
adc
int3
ret
fisttpl
cmp
sbb
loop
into
sbb
pop
mov
aam
inc
mov
mov
cwtl
movsb
test
das
fs
pop
adc
shll
inc
pushf
stos
mov
adc
cmp
ja
outsb
pop
push
movsb
lcall
mov
call
sbb
mov
jb
dec
icebp
flds
adc
xor
cmpsb
leave
adc
mov
ret
push
movsb
sub
fadds
cmpsb
mov
pop
repz
mov
pop
cmpsb
cmpsb
mov
bnd
pop
daa
sbb
pop
pop
js
cmp
daa
xorl
or
lock
in
clc
xchg
push
test
or
and
fcompl
pop
fcoml
lahf
fwait
xchg
or
push
nop
add
inc
shlb
in
call
jb
jns
xchg
jle
cmc
repz
stc
xchg
sub
ret
xor
lods
xchg
bound
stos
das
inc
int
cmp
imul
xchg
jnp
loop
jge
mov
sub
idivb
clc
push
push
lret
inc
jmp
and
mov
aas
adc
outsb
xor
fwait
and
sti
ficoms
fmull
ret
sarl
cli
pop
fldt
in
ficoms
cmp
cld
out
push
jecxz
adc
movsb
filds
subb
jb
out
cli
arpl
out
ret
jb
push
clc
dec
xchg
adc
add
lahf
lds
imul
outsl
push
cmp
pop
pop
cvttps2pi
push
cmpsb
xor
mov
jno
std
adc
jb
out
shll
mov
ss
xorl
xchg
sub
fmull
cltd
fwait
lret
sub
sub
call
push
cli
test
adc
pop
push
add
lret
mov
jne,pn
cmp
xchg
stc
aas
cmpsb
sbb
add
arpl
js
mov
sub
jbe
out
and
cmp
jl
rcrl
imul
cmp
jne
dec
js
sbbb
mov
ret
outsb
in
push
cmp
xlat
int
jae
xchg
stc
aad
ja
xor
sbb
arpl
push
adc
push
push
or
mov
push
and
dec
mov
es
dec
jbe
fsubs
dec
cwtl
push
jmp
loop
ror
subb
mov
insb
adc
xor
ss
arpl
sub
dec
movsl
fwait
mov
jo
adc
add
cld
repnz
call
mov
shll
repnz
xor
lret
dec
cmp
inc
pop
ret
jecxz
arpl
stos
xchg
and
imul
or
das
jg
js
setbe
fwait
sbb
cmp
mov
pop
int3
daa
imul
xchg
ret
stc
push
inc
sub
xbegin
daa
aaa
push
sarb
xchg
pop
mov
adc
fiadds
jecxz
xchg
mov
in
daa
inc
sbb
clc
popf
arpl
fchs
pop
mov
xchg
icebp
add
sahf
xchg
and
and
adc
sti
hlt
dec
cmp
xor
ret
lcall
jbe
ret
sub
mov
xor
icebp
mov
push
mov
and
add
xchg
scas
xchg
outsb
int3
xchg
inc
mov
ret
and
mov
popf
flds
pop
mov
push
add
imul
stos
sub
ret
mov
xor
adc
or
push
jp
jnp
loop
iret
mov
nop
in
loop
mov
fwait
insb
or
jl
sahf
out
add
adc
leave
push
pop
imul
mov
mov
jbe
andb
lods
jmp
aas
out
inc
sbb
filds
or
testl
scas
insl
jbe
leave
lahf
out
loope
lahf
and
addb
and
cmpsl
cmp
in
ffreep
add
dec
xchg
int
fisubrl
out
pusha
and
in
jle
pop
arpl
xor
shll
fsubs
shrl
das
pop
inc
loope
lcall
shrl
push
inc
cs
sbb
and
mov
cwtl
jl
cmp
mov
pushf
dec
jns
popa
fbld
push
movsl
mov
push
xor
imul
and
jb
mov
imul
outsb
mov
mov
ljmp
or
push
test
into
cmp
push
into
pop
loopne
lods
js
pop
dec
in
aad
xor
fabs
lods
xchg
mov
sub
or
fptan
ficoml
ret
into
mov
les
aaa
scas
xchg
cmp
mov
pop
push
add
outsb
adc
aaa
cwtl
imul
xchg
aad
mov
jnp
push
icebp
testl
add
loopne
int3
divb
pop
aad
xchg
fdiv
sbb
rorb
mov
imul
insb
xchg
loope
mov
and
mov
stmxcsr
test
hlt
mov
out
inc
pop
std
aad
sbb
pop
pop
add
pop
sbb
out
adc
or
mov
in
dec
repz
outsb
pop
push
ja
in
inc
pop
bound
add
into
add
mov
out
add
lock
aad
lods
dec
jno
jecxz
adc
mov
stc
xchg
or
pop
jp
les
jne
std
test
ret
sub
push
fcompl
sub
ret
loope
ret
rcrl
mov
repnz
xchg
pop
mov
movsl
or
pop
arpl
or
push
mov
jl
repz
jne
inc
lods
imul
sahf
jo
xchg
mov
pusha
mov
pop
loopne
sbb
fimuls
lock
and
mov
nop
cmpsb
shrb
jl
ds
es
fcmove
and
sub
inc
sbb
outsb
mov
rorl
fidivs
jecxz
pop
in
xor
cwtl
cs
mov
lea
rcrl
sub
mov
mov
fs
lahf
cltd
mov
ja
repnz
rol
movsb
and
sbb
mov
cwtl
xor
aas
xchg
sbb
sub
pop
xor
int3
adc
jmp
mov
dec
hlt
jbe
movsl
push
pop
sub
mov
sbb
push
pop
adc
cld
aam
out
addr16
cmpsl
mov
ret
xor
cmpsl
cwtl
or
not
lods
push
push
int3
xor
daa
sub
push
jp
push
bound
inc
pop
xchg
in
and
cld
sub
sbb
pop
cmp
sub
ja
adc
xlat
lahf
fsts
aad
mov
adc
stos
xor
cmp
mov
push
fmull
out
cmp
loopne
in
sahf
dec
rcrb
ficompl
inc
mov
stc
jo
outsl
inc
mov
lret
inc
jns
adc
mov
dec
push
scas
icebp
mov
adc
pop
mov
mov
rcl
mov
outsb
cltd
jle
jns
sub
inc
xchg
fsts
fidivrl
push
scas
adc
out
mov
outsl
xchg
mov
orl
jo
call
out
inc
gs
mov
mov
push
adc
movsl
scas
outsl
out
mov
pop
movsl
jae
test
mov
lret
enter
push
fists
shlb
daa
aad
jmp
ds
xchg
jae
add
xor
lret
sbb
sbb
sbb
dec
mov
inc
xchg
loope
cmp
shrl
jo
push
outsl
stos
lret
cmp
test
jns
mov
xor
jns
sub
and
add
int
mov
adc
push
movsl
popa
lcall
mov
pusha
pushf
outsl
cld
mov
int
add
outsl
div
mov
jo
add
or
or
loopne
pushf
imul
dec
sbb
push
add
fcmove
xor
cmpsb
test
dec
enter
mov
sub
inc
push
sbb
pop
sub
in
lcall
outsl
xchg
inc
shl
xlat
fldt
mov
adc
pop
roll
int3
jae
or
call
adc
push
add
adc
or
imul
sub
mov
and
scas
mov
cmp
in
and
lds
xchg
push
pop
jb
lock
mov
call
xor
mov
mov
cmp
enter
add
add
and
cmc
test
test
cli
out
aam
add
mov
mov
cli
mov
push
jp
jmp
xor
inc
push
fcomps
enter
negl
xchg
fld
sub
aaa
pop
jp
loop
mov
jmp
std
lcall
js
pop
cwtl
jp
mov
cmp
xchg
call
cmc
sbb
jae
inc
mov
mov
aam
sbbb
movsb
cmpl
orl
dec
dec
inc
test
fwait
addr16
imul
test
decl
push
inc
jmp
mov
dec
add
cld
das
daa
inc
addr16
cs
jmp
outsl
rclb
mov
adc
jb
ss
adc
fcmovne
orl
test
cmp
mov
dec
daa
jl
or
inc
add
scas
or
daa
mov
fs
repz
sub
test
mov
in
cltd
push
sub
aas
xor
cmp
out
sub
les
lret
mov
pop
div
pop
fs
jnp
mov
pop
pop
mov
mov
cmp
movsl
inc
sbb
call
mov
fisttpll
mov
fdivrl
dec
lcall
mov
inc
stos
lcall
push
jecxz
push
jbe
cmpsb
xchg
adc
mov
add
popf
into
pop
xchg
xchg
vphsubwd
sub
jg
pop
adc
rcrl
cmpb
popf
lods
int
gs
arpl
jmp
or
in
mov
inc
sub
adc
in
int
mov
mov
dec
jg
and
xor
push
mov
push
test
aad
or
adc
lock
cmp
pop
mov
push
jnp
cmp
push
jl
inc
testb
fldcw
ljmp
jl
or
xchg
imul
jle
in
testl
jno
pop
jp
or
mov
xor
sbb
call
popf
jge
shll
xchg
mov
mov
xor
push
cmpsb
and
pop
lock
lcall
sub
sbb
jae
pop
adc
sub
cltd
cwtl
loop
enter
push
jecxz
add
and
cmpsb
out
hlt
dec
xchg
daa
jecxz
lds
cmpsb
cld
rcll
add
ss
sbb
cmp
stos
testl
popl
adc
jl
pop
mov
outsb
push
shll
lock
popa
mov
lds
iret
mov
mov
pop
in
lock
in
dec
sbb
push
push
mov
sahf
pop
cltd
mov
jmp
jl,pt
push
incl
pushf
lods
pop
cmp
sub
or
pop
push
das
mov
shll
xchg
and
jbe
mov
testb
add
xchg
push
adc
pop
lcall
rclb
xor
imulb
scas
pop
in
push
xor
popa
inc
daa
pop
xchg
xlat
xor
iret
xor
stos
adc
daa
sbb
enter
fcmovu
pop
arpl
mov
sbb
add
xor
mov
filds
out
sub
test
cmp
outsl
xorl
nop
pop
pop
mov
fdiv
into
adc
shl
push
adc
xchg
cmp
add
cs
adc
decl
rcl
movsb
sub
sbb
push
mov
lahf
lcall
xchg
adc
jne
xor
jge
xlat
fisubrl
roll
and
xor
dec
add
jg
aas
pop
ror
mov
stos
and
les
cli
aam
or
cmp
or
lods
das
rcl
std
inc
inc
or
mov
adc
sbb
mov
addr16
and
or
adc
pop
ret
inc
mov
or
dec
imul
cs
mov
aad
xchg
mov
cmpl
dec
dec
push
mov
and
jno
pushf
add
sarl
dec
cmp
loope
les
cmc
jge
xchg
dec
fistpll
or
fs
cmp
leave
or
pop
push
jb
fstl
push
popl
scas
es
sbb
scas
sub
xchg
xchg
xlat
or
or
rcl
adc
out
rorl
imul
arpl
es
jns
ret
jge
inc
mov
das
sahf
sbb
ret
enter
roll
cmp
stos
lea
xchg
cltd
xor
xor
cmpsl
popf
nop
jbe
mov
sbb
adc
hlt
leave
in
dec
mov
ds
jmp
and
into
enter
int
jae
sub
dec
rorb
dec
outsb
xchg
mov
fisttpl
dec
cmc
in
iret
mov
jb
test
cld
adc
pop
in
jae
pop
pmaxsw
xchg
adc
mov
pop
push
movl
into
adc
jge
pushf
std
iret
adc
or
pop
dec
inc
xor
ss
xchg
mov
fists
shll
nop
jne
xchg
push
test
test
scas
popf
mov
ljmp
movl
inc
scas
and
push
xchg
xchg
jg
std
in
popaw
jne
shl
mov
lock
movsb
out
mov
cmp
stos
and
loopne
push
pop
inc
lods
push
cmpl
xchg
mov
fdivrl
in
dec
sub
test
mov
cmp
or
mov
mov
sbb
push
mov
or
cmp
lock
dec
adc
lahf
mov
xor
dec
jo
mov
cmp
pop
testl
jno
lods
subl
std
dec
pop
xor
and
clc
loope
add
movb
addr16
ja
cmp
dec
scas
and
adc
js
or
cli
pop
or
add
mov
inc
pop
fidivrs
xchg
or
js
adc
and
xchg
cld
daa
mov
cmp
dec
jp,pn
or
test
sub
and
les
fnstenv
xor
and
dec
enter
mov
push
adc
and
dec
cli
lock
cld
in
xor
mov
cmp
mov
call
loop
sarb
or
dec
cmpsl
push
mov
cld
ret
push
cmp
insb
and
jle
inc
inc
mov
shll
sbb
xchg
push
push
mov
jl
stc
hlt
std
jg
mov
jno
mov
stc
lods
xor
daa
stc
jecxz
aad
imul
add
jmp
imul
mov
mov
iret
ret
fs
arpl
push
stc
mulb
das
mov
repz
out
push
dec
and
push
ss
lret
push
dec
into
das
or
cmp
subb
pop
int
sbb
mov
xchg
push
push
lahf
test
adc
mov
pop
pop
pop
aad
out
mov
cs
ss
sahf
loopne
cmp
cmovno
arpl
sti
jge
das
mov
rol
sub
repnz
shrl
jl
inc
loopne
mulb
das
pop
sub
and
shlb
fwait
dec
pop
into
push
jle
push
hlt
push
inc
push
popf
or
add
jmp
jne
xchg
repz
cmp
fcompl
mov
inc
push
cld
xchg
xlat
xor
xor
leave
sub
cmc
ret
fistpll
dec
jns
lock
dec
mov
sbb
repz
jno
xor
add
xor
xor
aad
fistpll
adc
lahf
push
dec
cltd
dec
cld
dec
or
jns
mov
cwtl
add
inc
mov
vminps
out
sahf
enter
sub
inc
cmp
sbb
ja
pop
gs
cmpsl
popf
repz
mov
shll
fcmovu
test
push
pusha
push
in
inc
outsb
fildl
inc
mov
xchg
rorb
dec
lcall
jb
scas
ficomps
mov
mov
cmpsb
pop
mov
test
leave
push
ja
dec
cld
in
xchg
xor
bound
mov
iret
adc
stos
test
and
adc
jae
sub
jae
mov
daa
jae
das
sbbl
sub
cmp
popa
arpl
repnz
push
mov
out
xchg
and
loopne
add
xor
and
iret
mov
cli
jg
cwtl
cwtl
pop
cmp
aad
aad
xor
ljmp
int3
push
push
dec
mov
lahf
xchg
pop
icebp
aad
sbb
fs
push
xchg
dec
jns
jae
lds
push
mov
jg
fcomip
idivl
loopne
push
les
dec
fwait
xor
dec
ds
ret
outsl
sbbl
int
jmp
orl
mov
xor
lods
es
hlt
fmull
or
jae
or
jl
cmp
sbb
and
lea
sbb
or
loop
xor
cmpsb
lret
subb
mov
dec
lds
mov
das
insb
call
and
mov
mov
into
loop
add
popa
je
add
sbb
mov
mov
cmp
stos
sbb
cmp
in
lret
push
fs
fstpl
jbe
push
xor
mov
into
jbe
cmp
xor
fs
lds
rol
mov
aaa
imul
aas
add
jecxz
dec
inc
mov
repz
aam
sbbl
cltd
sbb
inc
cs
jg
call
mov
mov
lock
mov
outsl
loopne
stc
out
fstpl
inc
mov
fbld
das
mov
pop
pop
adc
adc
fnstcw
jns
mov
push
add
pop
aam
mov
or
jg
in
adc
jae
cmpsb
sub
pushf
mov
popa
push
inc
mov
lds
jmp
and
fsubl
mov
out
test
sbb
push
adc
jecxz
lahf
jnp
xchg
loop
test
ljmp
aam
aaa
or
in
ss
insb
mov
sbb
jo
cli
imul
jo
sub
ret
fmull
push
jns,pt
inc
xchg
xor
push
adc
shr
add
xchg
sbb
jno
ss
in
pushf
push
push
adc
lret
pop
push
ficompl
cmpsl
sub
dec
scas
rcll
arpl
addr16
mov
jl
int3
mov
repz
aam
shll
arpl
test
mov
jbe
aas
and
repz
jge
adc
rcll
lret
add
pop
cmp
and
ret
mov
jle
mov
ret
mov
and
jno
mov
dec
iretw
jae
push
pushf
sbb
loop
das
sti
fists
pop
aas
dec
and
sbbb
cmp
fwait
stos
in
insl
ss
loopne
fwait
jo
add
xor
add
pop
daa
fcmovu
mov
out
sub
push
loop
imul
mov
dec
adc
call
fsubrs
sti
xchg
inc
mov
xchg
push
pop
ljmp
cmpl
jle
jae
insb
cmpsl
scas
xchg
hlt
fs
loope
out
in
enter
jnp
in
jne
cmp
xchg
in
pop
lea
ss
xor
fistps
gs
adc
mov
ljmp
xor
roll
add
push
fcmovne
xor
push
inc
mov
push
push
pop
mov
std
icebp
test
sbb
jno
xchg
dec
pop
inc
mov
call
xor
fisubs
jl
pop
outsl
cmpsb
rorb
outsl
fnstenv
out
fwait
inc
sbb
adc
mov
ret
insl
sub
in
call
cmp
mov
jp
in
ja
jbe
xor
je
ja
mov
lods
add
out
lods
or
xchg
pop
xlat
xchg
scas
jns
mov
jp
enter
shlb
aam
inc
cmc
xor
and
mov
imul
dec
dec
xchg
lock
jmp
fsubrp
out
pusha
ds
jnp
cmpsb
adcb
adc
fcmovne
out
cmpl
fidivs
sub
lret
les
xchg
lds
fidivrs
jecxz
xchg
jge
jae
jae
vmulsd
mov
aam
cmp
data16
push
sbb
add
sbb
iret
sub
adc
pop
ds
jne
fiadds
fstpt
fwait
outsl
cld
sbb
aad
dec
das
push
leave
pushf
adc
repz
ja
mov
xor
test
imul
push
test
out
clc
mov
scas
mov
add
jl
aad
ret
push
xchg
repz
lret
mov
mov
jo
adc
in
mov
push
add
lret
sbb
lret
rorb
pop
cmp
cmp
bound
or
mov
test
lret
popa
aad
or
xchg
sub
mov
add
jle
lret
test
dec
std
jp
mov
decb
das
pop
mov
fdivs
rep
or
fldenv
addl
xlat
sbb
xor
xor
cmpsb
fwait
int3
adc
iret
and
jo
and
xor
dec
mov
sahf
or
lock
outsl
push
jmp
push
pop
sahf
sbb
fsubl
mov
insl
enter
cmp
es
hlt
cmc
in
cmp
out
sbb
adc
lret
neg
mov
lret
lods
aam
or
fistpll
clc
loop
push
dec
cmp
pop
ret
rorl
outsl
enter
std
mov
dec
pop
push
mov
jno
jne
mov
movsb
cmpsl
aam
jecxz
repnz
sub
test
ret
imul
out
dec
sbb
lock
test
xchg
dec
mov
jbe
test
outsb
pop
add
and
ja
jne
out
mov
mov
add
outsl
jno
leave
scas
push
push
jecxz
push
int
call
or
pop
cmp
xchg
pop
aas
push
aaa
add
pop
add
outsb
jge
and
mov
add
jmp
add
mov
stc
jns
mov
in
push
das
rorb
sub
sub
lahf
lret
sub
pop
ficompl
mov
cmp
cmpsb
lods
mov
and
dec
jno
int3
ja
push
sub
sarb
push
jnp
add
scas
and
andl
rcll
popf
dec
fiadds
bound
pop
push
jp
leave
dec
dec
pop
dec
loopne
sti
mov
xor
and
cltd
and
xchg
scas
icebp
sub
test
inc
push
clc
outsb
rolb
testl
pop
mov
fstpt
stos
loope
daa
repz
in
xchg
in
lret
cli
pop
cli
push
es
sahf
ret
pop
pop
sbb
sbb
mov
out
das
or
dec
cmp
jne
pop
imul
mov
std
pop
xchg
inc
int
inc
mov
aaa
imul
adc
mov
mov
adc
dec
fisttpll
lcall
loopne
sti
pop
lcall
push
mov
mov
pop
xchg
fisubrs
mov
in
aam
rcrl
xor
sbbb
adc
adc
scas
sub
sbb
or
popf
decb
mov
inc
and
ja
sbb
adc
pop
fs
addr16
cmp
js
icebp
cmc
insb
cmp
push
sti
rorl
pop
push
insb
insl
push
jmp
and
roll
in
int3
scas
das
lea
jb
movsb
jge
xorb
jae
jne
pop
popf
sub
ljmp
mov
addl
lahf
pop
bound
sbb
call
adcb
sbb
adc
dec
movsb
data16
mov
stos
inc
daa
cwtl
mov
mov
push
xchg
or
sar
adc
sbb
mov
cmp
jl
pop
xchg
insb
inc
test
scas
out
dec
addr16
inc
push
andb
lods
mov
pop
test
xchg
inc
push
mov
add
adc
out
adc
sbb
sub
lods
notb
sbb
cmp
out
sbb
sub
popf
mov
pop
repz
pop
cmpsl
aas
jecxz
mov
jecxz
xchg
sbb
mov
or
or
loop
stos
adc
push
lret
xor
lea
add
jl
fwait
scas
sub
jp
mov
push
mov
dec
jmp
divl
inc
mov
jb
lods
pushl
leave
and
push
jg
adcb
scas
mov
scas
sarl
fcmovnbe
test
jg
push
dec
jg
test
bound
int3
inc
addb
repnz
out
and
test
mov
mov
test
xor
pop
shll
mov
pop
xor
adc
push
popa
in
ret
inc
xchg
bound
pop
mov
or
or
ds
sub
adc
push
ljmp
ret
lods
push
dec
pop
clc
fldenv
mov
mov
pop
popa
jo
xor
or
push
mov
push
pop
and
mov
adc
sahf
jmp
inc
fsubrl
and
xchg
cmp
or
sub
iret
das
pop
imul
cmp
ljmp
in
jo
xchg
fcoml
sarl
jbe
bnd
movsl
shl
inc
and
cmpsb
cmc
aas
or
mov
mov
fwait
push
dec
inc
or
cmpsl
out
fnstenv
in
lcall
jnp
dec
cmp
push
cli
arpl
add
xchg
pop
lock
push
ret
ja
cmp
aas
jae
mov
ss
or
mov
add
sub
xchg
xchg
push
jne
shrb
push
and
rorb
cmp
lea
icebp
fucomi
jle
daa
push
xor
stos
add
mov
cli
xchg
sub
push
pop
adc
cld
fs
fyl2x
outsl
cmp
js
gs
xchg
popa
adc
and
popf
mov
mov
push
lea
sub
xchg
sub
imul
pop
jmp
push
stos
xor
icebp
cltd
movsb
lods
movsl
lret
daa
sub
push
icebp
lods
sbb
test
xlat
ret
jbe
fs
sar
pop
imul
mov
xchg
add
pop
push
mov
pop
cmp
aad
pop
mov
addr16
inc
cmp
iret
ret
rclb
mov
outsb
jp
cs
sbb
lcallw
cmp
sti
in
and
adc
xchg
insl
mov
mov
mov
sahf
aam
xor
test
jmp
xchg
cs
xlat
sbb
push
popa
mov
bound
cwtl
push
ret
xor
cmp
mov
out
dec
mov
orb
mov
add
jmp
mov
out
add
sbb
push
inc
hlt
int
sbb
mov
sbb
or
sbbb
add
push
bnd
jno
mov
add
loop
add
pop
pop
mov
add
sub
lsl
dec
lods
fsubp
jbe
ljmp
adc
mov
scas
dec
and
push
xlat
lret
add
pop
inc
sub
fisttpll
cmp
aas
test
mov
xor
inc
xchg
aaa
in
gs
insb
mov
xchg
mov
mov
imul
cmp
jb
shlb
adc
pop
fmuls
rclb
sub
lahf
icebp
iret
cmpsl
dec
lock
fbld
mov
outsl
mov
fidivl
out
push
mov
push
xchg
mov
outsb
es
dec
xchg
dec
xor
sub
inc
jb
mov
out
ss
sbb
imul
insl
lret
inc
add
cmpsl
cwtl
fidivrl
jg
call
fwait
mov
pop
ss
xchg
lods
mov
sub
jb
add
mov
outsb
dec
jmp
sbb
adc
mov
std
sub
mov
mov
lcall
lret
lods
xor
ja
inc
xchg
lock
mov
mov
or
lea
push
imul
lea
mov
ljmp
add
push
fidivrl
rolb
sbb
int
and
mov
imul
pusha
dec
add
dec
pop
inc
jns
sbb
push
bswap
push
test
lods
jo
in
push
xchg
movsl
std
jmp
inc
daa
add
or
ss
push
mov
dec
int
hlt
aas
push
push
scas
lret
inc
mov
push
or
pop
add
dec
fildl
mov
and
cltd
mov
mov
cwtl
push
icebp
xor
outsl
xchg
mov
xor
xchg
or
stc
sub
mov
icebp
xchg
xchg
add
xchg
jl
pop
ret
or
idivb
or
push
adc
nop
sbb
cmp
sbbb
nop
and
jl
push
or
sar
cmp
sbb
cmc
and
inc
test
xchg
mov
aas
aam
negl
add
or
in
pop
mov
movsb
pop
test
sub
fcoml
push
cmp
xchg
shrb
xor
push
arpl
pushf
shll
xor
cmp
adc
and
or
lea
and
cltd
lcall
jmp
repz
scas
movsb
sbb
out
outsb
fs
push
inc
imul
jne
mov
data16
ljmp
fcoml
mov
sysret
ja
xchg
and
pop
pop
cmp
pop
and
sbb
sbb
scas
and
hlt
pop
xchg
mov
add
inc
mov
mov
mov
repnz
and
adc
mov
aas
cwtl
xchg
dec
mov
movsl
test
das
cmc
pop
or
stc
adc
cmp
mov
clc
mov
insb
bound
and
adc
adc
mov
jl
pusha
out
bound
in
or
je
pop
mov
adc
imul
sbb
xlat
xchg
lcall
mov
arpl
hlt
addr16
int
cmc
xor
mov
lahf
scas
dec
mov
loope
sub
mov
leave
lods
lret
mov
in
lcall
bound
push
frstor
xchg
mov
das
aas
stos
pop
push
out
jno
pop
pop
sub
add
je
pushf
popf
cwtl
sti
sbb
pop
int
or
into
sbb
enterw
out
nop
and
lret
loopne
add
cmp
aad
xchg
movsb
sub
sti
cli
xor
mov
popa
shl
rol
addb
xchg
adc
adc
scas
xchg
fimuls
push
pop
lret
pop
hlt
arpl
sbb
cli
loop
scas
pusha
mov
jbe
test
mov
cmp
je
add
cld
ja
ret
push
push
shrb
jo
mov
cltd
fistpll
fsts
pop
dec
mov
stc
mov
insl
test
mov
cmpsb
mov
adc
mov
cltd
rorl
sbb
cmp
and
mov
outsl
lea
jb
data16
adc
or
outsb
aam
jns
mov
lods
push
and
movsl
pop
mov
fs
cmp
dec
cmpsl
push
mov
mov
xchg
cmpsl
dec
push
or
pop
xchg
imul
ffree
adc
inc
mov
cwtl
sbb
push
movsl
int
adc
jl
int3
xor
sub
insb
sbb
cmp
push
mov
sub
nop
sub
clc
dec
popf
xchg
and
mov
and
cs
cmp
mov
push
ds
xchg
and
shlb
inc
in
pop
dec
pop
jb
mov
dec
out
fcomip
int
call
fucomip
insl
xlat
testl
stos
das
movsb
add
lret
mov
flds
icebp
push
dec
mov
scas
aam
popf
stc
in
mov
sarl
clc
cltd
sti
inc
mov
xchg
sub
pushf
add
rolb
xlat
das
and
movsl
xchg
lds
mov
push
xor
mov
push
mov
rcrl
inc
sbb
fcmovbe
push
xorl
or
mov
xor
outsb
out
shll
loope
push
mov
testl
in
cmp
into
loope
jmp
sub
inc
ss
pop
pop
outsb
mov
dec
outsl
bnd
lahf
xchg
mov
popf
xlat
lcall
cmp
in
clc
shlb
outsb
ss
nop
or
jbe
outsb
mov
fwait
dec
stos
out
inc
addl
repz
inc
mov
sarb
repz
inc
pop
orl
pop
jp
pop
mov
in
rcr
ja
scas
add
loop
loope
mov
dec
std
mov
icebp
ret
mov
inc
push
es
out
jge
lods
fmuls
push
arpl
add
xor
cmp
or
gs
and
fwait
lods
repnz
push
sbb
jl
sbb
sahf
push
cmp
insb
jo
add
mov
test
push
xor
scas
add
add
shll
push
mov
mov
aas
pop
adc
clc
mov
jp
or
or
test
scas
repnz
iret
and
fcoml
sahf
jg
cltd
jge
add
popa
sub
adc
aas
movsb
adcl
cld
ja
xchg
mov
jg
sub
pop
ds
or
push
mov
iret
stos
mov
adc
jbe
or
popa
push
pop
and
ljmp
loop
or
or
int3
decl
dec
inc
cmovno
ffreep
lret
wbinvd
jne
mov
iret
mov
xchg
jbe
loopne
into
xchg
mov
inc
call
dec
data16
cmp
les
pusha
cmc
loope
add
xchg
adc
adc
push
cld
fs
push
xor
clc
sub
shll
arpl
push
outsb
ss
inc
sub
imul
jbe
pop
stos
cmp
insb
inc
jmp
inc
cmpsb
imul
loope
inc
repz
xor
push
cs
aam
icebp
inc
std
xchg
adc
nop
rcr
mov
dec
sbb
jge
jmp
jno
mov
inc
int3
js
int3
test
test
inc
inc
push
clc
cmp
xlat
jbe
sarl
imul
aas
add
mov
loope
cmp
fisttps
mov
jecxz
inc
iret
xor
dec
mov
lods
push
mov
mov
stos
lds
push
arpl
aaa
call
pop
mov
pop
push
loop
cltd
mov
outsb
jecxz
loopne
dec
faddl
push
inc
xlat
mov
roll
add
aad
or
mov
in
mov
es
iret
pop
shl
pop
sub
cltd
and
inc
leave
add
fwait
mov
mov
pop
xor
adc
outsb
std
ret
sub
loop
cmpsb
jmp
shll
jge
mov
xchg
sub
jno
dec
push
sbb
and
xchg
out
lock
adc
pusha
sub
test
ss
xchg
fiadds
fisubrs
fdivl
jne
pop
and
mov
dec
mov
jp
inc
xor
push
ror
js
cli
pop
and
inc
push
rcrl
add
and
mov
push
ds
cs
mov
and
mov
jge
cmp
inc
repnz
mov
pop
lret
xor
jmp
push
fcmovnbe
push
stos
fistpll
cld
je
push
aad
cmp
mov
mov
mov
jmp
cmp
fwait
jns
push
sub
jnp
mov
out
cmp
in
mov
inc
inc
mov
dec
xchg
dec
mov
mov
mov
adc
pop
repnz
insb
push
push
call
or
pop
lcall
rcrb
push
loope
ljmp
cmpb
jp
fisttps
ja
inc
push
adc
orl
jne
jo
aaa
xor
cmpsl
pushf
aas
in
loope
out
add
adcl
flds
dec
push
data16
in
rorb
mov
das
lods
dec
out
mov
imul
orl
lret
fwait
jb
scas
test
xor
jae
xchg
scas
jne
adc
aam
fists
subb
push
sbb
pop
scas
lcall
jnp
jne
int3
faddl
imul
cmp
fs
pop
call
mov
xchg
jb
inc
dec
xor
pop
in
or
sar
and
inc
enter
mov
jge
pop
lds
adc
lea
lea
mov
outsl
hlt
test
xchg
adc
sub
out
addr16
or
data16
popa
dec
aaa
iret
mov
mov
insl
push
shlb
insb
push
cmp
jae
dec
xchg
push
iret
pop
sub
movsb
xchg
fs
adcb
push
nop
popa
and
fwait
mov
lcall
inc
sbb
xor
cmc
and
mov
and
add
dec
loop
out
mov
cmp
xor
lea
std
sub
ds
mov
fldl
cmpsl
push
sbb
mov
mov
jmp
adc
push
imul
outsl
bound
lods
stc
inc
dec
jmp
lret
jb
cs
mov
shll
mov
mov
mov
and
jge
xchg
dec
lea
adc
add
jo
jmp
lods
leave
jne
out
add
divl
aad
sub
sti
adcl
stos
add
lods
sbb
in
leave
add
jp
xchg
adc
sbb
or
mov
sbb
push
iret
int
mov
js
xchg
fwait
pushf
mov
out
or
cmp
int3
sbb
pop
or
fwait
mov
dec
lret
inc
cli
mov
dec
jno
push
sub
sub
and
in
mov
sbb
lods
out
dec
or
jle
repnz
lcall
popa
cld
and
sti
rorl
frstor
sbb
lods
fwait
mov
out
mov
add
fldl
mov
push
xor
ja
mov
ficompl
in
data16
xlat
adc
sarb
icebp
push
mov
cmp
sbb
jmp
and
scas
data16
xchg
test
ljmp
les
lock
push
mov
in
mov
sub
enter
sub
imul
mov
stc
sub
mov
js
jnp
cmpsl
arpl
in
sbb
push
xchg
cwtl
and
test
add
jne
pusha
sbb
lea
push
xorb
ljmp
out
mov
jp
out
jg
das
and
sub
out
push
lret
xchg
add
test
inc
xchg
mov
mov
jge
pop
loop
cmp
mov
cld
push
pusha
inc
or
sarb
sbb
out
sub
aaa
jbe
xor
int3
mov
sub
mov
mov
and
test
scas
popa
das
cmp
jle
jmp
dec
jno
mov
mov
mov
incl
push
aam
ljmp
ss
mov
ja
pushl
fcmovu
bound
mov
adc
out
jp
roll
int
adc
in
inc
out
cmc
cs
lds
stc
fstpl
bound
pop
and
mov
push
jecxz
adc
stos
pop
out
and
adc
daa
push
in
out
mov
pop
pop
movsb
sub
into
mov
and
xchg
push
pop
jae
sbb
mov
inc
cmp
call
pop
outsl
sbb
int
lock
cmp
jo
xor
fldl
icebp
xchg
cmp
sbbl
daa
rcl
faddl
lea
mov
lods
add
jbe
jnp
mov
mov
dec
or
js
aas
mov
lea
adc
jo
icebp
adc
pop
cmc
xchg
dec
bound
xchg
push
push
inc
pop
das
push
shr
shll
movsb
scas
xchg
cmp
cs
sbb
neg
test
mov
fistpl
xor
xorb
lods
dec
mov
sub
insl
mov
cmp
pop
shrb
ljmp
mov
mov
push
rorb
das
stos
xchg
cmp
daa
or
mov
ss
mov
dec
pop
bound
pop
mov
and
icebp
test
adc
sub
or
pop
jb
imul
pop
inc
mov
push
lcall
je
stos
xor
les
inc
add
stc
mov
ss
mov
push
inc
stc
mov
imul
dec
adc
ljmp
jne
mov
lea
fwait
mov
push
nop
add
push
and
and
mov
aam
popl
mov
ss
stc
dec
roll
xchg
or
cmp
jmp
enter
xor
push
and
xor
sbb
mov
outsb
fstps
shll
xchg
jecxz
shlb
push
fldl
adc
cld
imul
fs
cli
pop
push
adc
int3
inc
lock
inc
ror
les
or
push
jns
cmp
push
sub
test
out
lcall
sti
ljmp
hlt
mov
bound
and
mov
hlt
xchg
mov
notb
add
jno
and
cmc
nop
cmp
mov
dec
enter
and
mov
lock
hlt
daa
mov
ja
popf
cmc
jb
push
xor
xchg
lea
mov
icebp
loop
xchg
pop
jno
push
cltd
fmuls
fcompl
pop
sub
or
mov
dec
cmp
pop
and
testb
inc
loop
jl
push
test
cmp
outsb
aas
jle
xchg
movsb
sub
add
shl
add
and
aad
jb
inc
jle
cmc
or
or
out
adc
pop
scas
jl
and
push
xor
sahf
es
adc
sahf
fstpt
cmpsb
jge
jl
add
pusha
test
xor
scas
pop
aas
sarl
aas
je
pusha
movl
or
fdivrs
int3
sbb
pop
setp
into
dec
clc
orb
ss
and
jl
push
sahf
inc
adc
push
ljmp
shrl
es
test
pushf
into
xchg
jo
jno
int3
jmp
pop
data16
sub
cmp
cmp
test
rcrb
and
lock
lcall
lock
dec
fdivs
mov
ja
mov
and
out
lods
popf
mov
mov
inc
aaa
mov
or
fdivrs
out
add
xor
lret
dec
pop
aad
leave
push
adc
fimull
movsl
inc
adc
scas
inc
add
roll
mov
cltd
dec
mov
xchg
pop
out
push
daa
or
mov
nop
cmp
inc
scas
shll
aas
scas
adc
test
pop
ret
mull
out
adc
xor
fstl
cmpsb
iret
or
fsubrp
test
lret
lret
cs
pop
test
mov
push
mov
cmp
jl
push
ficomps
mov
xchg
and
cmc
fnsave
pop
ja
mov
xchg
cltd
inc
and
mov
pop
decl
aam
xchg
shrl
and
les
jo
test
popa
cs
push
fiadds
cmp
xchg
push
mov
stos
adc
testl
inc
pop
pop
movsb
fmuls
xchg
sarl
xchg
push
ja
stos
mov
add
xchg
fadd
inc
mov
das
cmp
test
adc
jae
inc
xor
dec
pop
pusha
imul
jns
mov
xchg
shrl
push
ljmp
ss
xchg
xchg
xor
dec
jne
mov
dec
movsb
or
xlat
mov
pop
call
jo
je
xchg
ja
filds
sti
jmp
in
pop
test
mov
cmp
jbe
jae
or
mov
pop
add
inc
xchg
stos
sub
sbb
mov
fwait
hlt
fidivrs
jnp
pushf
daa
pusha
jecxz
mul
pop
hlt
scas
les
lds
inc
insl
pop
stos
scas
jge
jb
cmc
data16
ficoml
xor
sbb
in
adc
push
mov
xchg
pop
dec
and
xchg
pusha
lea
cmp
mov
push
mov
and
mov
mov
add
sub
insb
fidivrs
inc
je
icebp
stc
outsb
inc
mov
mov
sub
sbbl
das
mov
testb
push
mov
add
mov
inc
or
test
add
rcrb
testb
jno
push
sbb
add
dec
mov
add
insl
dec
push
cmc
pop
in
cmp
scas
lock
gs
jnp
inc
mov
les
mov
xchg
loope
out
mov
inc
lock
mov
xor
lret
dec
repnz
movsl
test
ds
sbb
cmc
xchg
and
jnp
cmpsl
pop
testl
push
pop
enter
pushl
rolb
or
imul
in
pushf
xor
pop
push
cmp
push
icebp
xlat
jne
xchg
mov
xchg
jl
rcr
jp
scas
pushf
cmpsb
xchg
jmp
adc
out
dec
fwait
or
dec
ds
nop
ljmp
out
lcall
push
iret
aam
or
xor
arpl
add
mov
jns
cmp
outsb
mov
out
ret
sbb
hlt
cltd
ja
arpl
movsb
lahf
xor
dec
xlat
sbb
jb
cli
jno
jle
xchg
inc
lock
hlt
or
dec
mov
xchg
fwait
push
xchg
jp
jmp
mov
jl
mov
pushf
cwtl
dec
test
push
cld
daa
sub
movsl
push
lds
fwait
bound
and
js
fildl
test
outsb
ss
pop
mov
sub
stos
jmp
arpl
in
lods
and
pop
fiaddl
push
test
mov
add
inc
or
repnz
cmc
inc
adc
test
cmp
test
mov
addr16
or
gs
sarl
adc
repz
shlb
jbe
call
adc
dec
sub
xlat
sbb
dec
arpl
add
push
repnz
aad
shlb
mov
and
pop
adc
jae
aaa
std
dec
mov
jne
sbb
adc
push
dec
popf
fs
cmp
nop
call
inc
lds
fisttpll
cmp
inc
mov
adc
dec
mov
cmpsl
and
xor
jl
pop
out
clc
dec
ret
fwait
mov
jl
push
ret
or
pop
and
and
adc
sbb
xchg
mov
sbb
mov
push
aam
xchg
mov
div
jbe
insl
lret
push
mov
pop
lds
shr
loope
and
mov
stos
mov
ret
je
and
sarb
mov
pop
or
lret
push
sbb
aas
sarb
shrb
mov
into
pop
lods
arpl
and
cmpsl
dec
dec
enter
aas
mov
out
and
mov
cmpsb
cs
fists
sahf
lahf
ja
sbb
inc
adc
xbegin
pop
xor
and
testl
scas
test
mov
xchg
clts
lods
push
stc
xor
mov
dec
outsl
scas
lock
mov
pushf
fdivl
ret
xor
lods
jecxz
and
jo
xchg
stos
mov
shlb
and
loopne
xor
pop
cs
mov
mov
cmpsl
sub
sbb
sub
shlb
push
sbb
jle
push
mov
add
sub
mov
mov
and
push
sbb
xchg
pop
or
std
pop
sbb
push
mov
cmp
cmp
loopne
jne
jb
outsl
xor
adc
fstpl
jge
mov
sub
aam
ret
les
jne
aaa
pushf
push
push
mov
xor
xchg
subl
sbb
xorl
pusha
lock
mov
sub
push
inc
dec
iret
es
mov
push
rcrl
int
mov
pop
cltd
fsubp
add
xorl
popa
mov
jne
xchg
add
int
pop
push
cmpsl
cmpsb
mov
add
jne
jle
clc
adc
xor
pop
push
nop
shlb
loope
jge
xchg
jge
inc
cmpsb
imul
outsb
loop
std
push
mov
movsb
nop
push
mov
ja
in
mov
stos
call
push
lret
rclb
mov
fidivrs
push
jno
jb
mov
adc
lods
xor
xor
xor
rorl
pusha
adc
pop
cmc
jb
jo
pop
adc
add
dec
shr
imul
adc
mov
lea
jbe
mov
mov
xor
sub
mov
sub
sbb
jl
xchg
lds
add
call
das
je
js
adc
jp
in
xor
les
mov
mov
mov
mov
test
fld
jb
cmp
sbb
push
jae
adc
bnd
mov
pop
push
jg
in
mov
xchg
ja
push
and
mov
mov
jno
jae
or
lds
pop
clc
mov
xor
in
push
stos
and
mov
xlat
divl
and
lcall
lret
xchg
and
lahf
leave
inc
xchg
add
jbe
test
imul
dec
jecxz
fstps
pop
dec
xchg
mov
into
sbb
inc
cli
scas
mov
inc
std
lock
fwait
pop
dec
dec
fcomps
pop
jmp
dec
jno
rorb
inc
mov
push
stos
fsubrs
xchg
pusha
sub
fucomip
xor
xor
scas
or
sahf
add
xor
push
cld
enter
dec
repnz
adc
cmp
sbb
sub
mov
add
adc
cld
inc
cmp
ja
push
lahf
mov
jo
repz
add
sbb
mov
jecxz
sbb
push
sub
fsubs
lods
and
arpl
cld
lret
inc
fstpl
sub
fwait
dec
xchg
std
xor
cli
pop
cmpsb
pop
push
shlb
adc
hlt
or
cmp
and
pop
pop
scas
lret
mov
mov
aam
mov
call
gs
clc
push
or
inc
mov
pop
mov
roll
repnz
je
test
roll
mov
cmp
adc
addr16
or
push
push
ret
sub
dec
aas
int
out
repz
xchg
sahf
xchg
cs
leave
add
out
xor
imul
popa
add
rorb
fistpll
xchg
push
mov
and
sbb
mov
sub
cmp
loope
in
jecxz
xor
jno
imul
out
xor
loopne
test
cmp
movsl
pushf
ds
sbb
push
out
inc
ja
and
xchg
mov
mov
cmp
sbb
or
xlat
dec
dec
outsl
push
sub
js
repnz
loopne
xor
adc
push
mov
adc
jne
xchg
pop
xchg
mov
and
xor
mov
cmp
subl
daa
sbb
inc
mov
in
pushf
mov
divb
jb
int
jge
sahf
sbb
push
inc
pop
xchg
dec
je
lods
mov
sbb
xchg
dec
pop
fnsave
ret
sub
sbb
or
aas
subl
inc
imul
fimull
jno
push
inc
ficoml
mov
mov
aaa
add
mov
leave
mov
fimuls
jb
or
mov
sti
xchg
imul
imul
aam
js
sbb
sub
ret
fisttpl
mov
inc
push
dec
loopne
dec
fnstcw
test
fmull
inc
cmp
lock
pop
loope
insb
mov
sub
push
cmc
jne
add
pushf
int
mov
test
js
insl
fsts
pusha
shlb
jmp
add
add
xchg
dec
ja
fnsave
scas
add
jnp
mov
xchg
sbb
sub
fstpt
sub
jle
xor
sub
lea
les
pop
pop
jns
pop
add
and
jne
cmpsb
call
xchg
popf
inc
fimuls
aas
mov
push
xor
lods
jb
mov
mov
jno
pop
clc
dec
movsb
out
or
sub
fcompl
pop
jae
les
and
dec
es
lods
push
dec
adc
pop
fldenv
mov
dec
push
nop
pop
loopne
leave
rcl
cs
mov
or
fwait
scas
jne
daa
test
aad
fdivrs
jle
sbbl
and
xchg
xchg
aas
repnz
sub
jns
inc
cmp
insl
mov
mov
cmp
data16
and
xor
pop
pop
jle
or
jmp
iret
sbb
dec
imul
sub
lods
add
cmp
pop
dec
sub
jmp
push
mov
lret
jle
in
lea
iret
ficoml
push
mov
pop
aas
cli
ljmp
out
in
insb
in
pop
pop
in
sbb
add
cli
dec
cs
js
jns
clc
mov
out
cltd
pushf
pcmpgtb
arpl
out
cmp
inc
ror
in
lds
pop
add
fbstp
pop
xchg
insb
lcall
call
fs
lea
loopne
lret
pop
push
sbb
push
add
das
dec
inc
jns
cli
adc
ljmp
and
lds
rclb
and
pop
cli
subl
test
pusha
adc
mov
or
dec
jge
icebp
scas
xchg
mov
sbbb
jmp
sbb
ljmp
daa
int3
ds
into
or
testb
lods
add
push
xchg
shl
pop
mov
call
pop
xlat
test
and
cld
jecxz
out
scas
mov
lret
xchg
iret
sbb
inc
ret
movq
int
adc
push
out
lods
pop
adc
xor
gs
scas
dec
fwait
insb
jb
outsb
mov
dec
xchg
mov
sahf
xchg
sub
pop
mov
and
xchg
add
ljmp
data16
out
loope
loopne
push
push
and
fisttps
and
mov
xor
xchg
pop
outsl
popl
sti
leave
pop
packssdw
push
jbe
popf
shll
push
movsl
sub
in
add
add
xchg
jnp
xor
push
push
cmp
pop
inc
cmp
jle
test
xor
jns
add
dec
test
mov
mov
lods
or
scas
jne
and
mov
lahf
rol
lea
cmc
mov
insl
test
pop
push
cmp
mov
add
adc
imul
out
or
sbb
idivb
fxam
nop
cmp
out
mov
loope
xor
ret
sbb
xchg
jl
or
call
insb
loopne
cltd
mov
jae
add
insb
mov
sbb
push
je
in
dec
js
push
xchg
mov
mov
adc
addr16
dec
popa
sbb
inc
fst
mov
out
xlat
shlb
dec
movsl
ja
int3
jp
insb
sub
hlt
movsl
cmp
cmp
xchg
add
xchg
jns
addr16
sub
xchg
stos
scas
fstpl
jmp
data16
jns
gs
das
outsb
pop
mov
test
mov
loopne
daa
sbb
bound
dec
and
clc
inc
mov
jno
add
mov
rcll
sbb
lods
xchg
push
outsl
test
das
test
push
ret
fwait
test
pop
mov
push
push
fstpl
dec
cmp
lock
pop
iret
xchg
loopne
push
adc
lahf
movups
adcl
in
out
xchg
sbb
sbb
sub
pop
insl
jbe
jge
push
loop
push
cmp
inc
dec
ret
or
xor
jmp
popa
adc
inc
shr
add
lret
test
repnz
inc
nop
test
cltd
out
mov
sbb
and
mov
faddl
imul
sti
pop
xor
int3
sbb
int3
and
sub
out
cmpsb
mov
in
adc
call
sahf
pop
jae
pushf
inc
flds
mov
or
dec
int
inc
lret
add
mov
add
js
jg
or
and
pusha
jge
inc
xchg
fsubrs
pop
dec
icebp
jmp
adc
mov
sbb
jbe
add
int3
lock
add
xchg
out
jbe
fisttpll
mov
sub
repz
dec
or
inc
test
push
pop
or
inc
je
push
fists
popf
jecxz
pop
hlt
cs
inc
jecxz
test
mov
js
lds
sbb
lcall
fisttpll
sbb
loop
fucomi
push
inc
cwtl
adc
cmp
cli
lret
js
shrl
ficomps
and
cmp
mov
call
lods
sbb
add
cmpsb
fdiv
xchg
pop
fdivl
mov
sub
rcll
jle
push
xchg
jg
sub
or
fdivl
sub
pop
arpl
mov
xchg
repz
call
dec
nop
sti
push
fisttps
fwait
mov
popw
daa
cmp
imul
xor
ror
jne
pop
xchg
mov
out
add
sub
push
jmp
jge
xchg
pop
add
test
dec
lret
loope
test
pop
in
pop
xor
cmp
push
ror
push
andb
ficomps
aaa
sub
xlat
packssdw
lret
test
into
in
xor
cmp
or
push
dec
es
cmpsl
fwait
push
sub
outsb
sahf
inc
adc
lock
xchg
in
aaa
das
jb
ret
push
sub
add
inc
call
sbbb
ret
xchg
dec
mov
icebp
jb
jp
movsl
or
stc
nop
roll
adc
push
adc
hlt
adc
int
inc
push
dec
lcall
into
mov
jg
rcl
lds
fiaddl
push
inc
addr16
push
jp
mov
es
adc
jp
test
testl
movsl
push
xchg
push
movsl
into
mov
imul
adc
stc
test
out
jle
scas
pop
jbe
ret
outsl
inc
lock
lret
sub
out
jb
repz
ja
sti
cmp
pop
and
inc
push
xchg
out
popa
lods
xchg
jnp
jb
scas
dec
jno
push
push
pop
push
dec
sbb
nop
add
mov
xorb
push
popa
inc
xchg
pop
insb
rcrb
fcmovnbe
and
jne
cmp
mov
out
lcall
mov
inc
outsl
push
or
inc
inc
dec
movsb
cmp
jbe
out
xorl
xor
mov
add
jmp
mov
mov
in
sub
call
mov
push
lret
or
or
pop
test
dec
mov
dec
push
xor
in
dec
mov
mov
mov
push
adc
mov
pop
jg
loopnew
enter
in
iret
cmp
mov
and
adc
pop
pop
out
lcall
jno
popf
lret
mov
movsl
ficoml
adc
add
and
int
mov
int3
fisubs
fisubrs
iret
sbb
mov
dec
aam
push
fsubl
mov
lea
popf
ficoml
lcall
mov
xor
imul
or
lock
and
scas
pusha
mov
mov
cs
inc
das
lcall
jns
xor
leave
and
addr16
jle
adc
jle
push
imul
sahf
push
jg
push
inc
adc
mov
mov
mov
lahf
mov
inc
adc
movsl
mov
out
lahf
int3
sti
mov
cmpsb
dec
xchg
add
add
mov
sarb
out
data16
xor
cmp
push
std
ljmp
pop
les
inc
cmp
insl
add
outsb
push
cmp
adcb
or
xor
and
fcomps
lret
insb
movsb
sarl
xor
and
mov
rcl
imul
pop
aad
shrb
leave
ds
dec
rcl
cmp
inc
pop
test
in
js
pushf
dec
pop
je
lret
push
sti
shrb
jl
in
out
sub
jle
mov
stos
mov
xor
inc
fstpl
and
cmp
push
ret
out
aaa
jno
stos
adc
sbb
push
movsl
test
into
sub
movsb
push
fistps
jmp
sbb
pop
jmp
mov
mov
popf
movsl
add
lods
mov
outsl
jno
xchg
pop
xchg
das
lock
mov
push
hlt
mov
nop
sub
stos
xchg
dec
adc
imul
call
outsl
mov
pop
popf
lods
lret
jnp
test
testl
and
xchg
cmp
or
dec
shrl
or
mov
jecxz
push
mov
fwait
icebp
push
decb
adc
mov
leave
inc
out
pushf
jge
lds
mov
jae
das
rcr
and
dec
pop
clc
cwtl
pushf
loopne
lds
int
repz
push
add
fs
cmpsb
mov
enter
lock
pop
mov
clc
jp
in
xchg
push
adc
or
aad
xchg
jmp
lahf
sbb
cmpsb
popa
outsb
imul
aam
inc
movsl
mov
popf
cld
test
cs
into
pushf
lcall
add
sarl
adc
push
sub
in
and
scas
lods
dec
cltd
or
orl
sub
mov
test
stc
imul
inc
stos
mov
xchg
repnz
fimull
test
cltd
aad
clc
out
jnp
scas
push
aam
mov
shrl
inc
or
pop
mov
sub
and
pop
jmp
mov
nop
dec
in
scas
add
lods
mov
sbb
arpl
rcrb
dec
arpl
cmpsb
sti
sbb
cmp
js
push
push
xchg
mov
xor
sub
push
inc
ds
jmp
sbb
ja
fs
js
jp
cs
sbbl
ljmp
add
or
lods
mov
ss
and
dec
out
lret
or
imul
cs
sahf
sahf
cmpsl
pushf
mov
js
push
lret
fists
mov
xchg
dec
int3
fst
push
aaa
stc
push
scas
aaa
push
sbb
in
or
scas
mov
push
in
inc
mov
xor
repnz
or
xchg
in
xor
out
xchg
bound
out
andl
pop
ja
test
jnp
outsl
in
das
pop
rcrb
shrb
xchg
jb
sbb
in
je
jl
sub
cli
push
sub
mov
pop
das
jle
push
xor
repz
cmp
or
nop
pushf
cli
jnp
ds
pop
dec
add
scas
jp
rclb
aad
inc
adc
and
mov
mov
mov
into
dec
aaa
sbb
test
nop
loop
daa
in
xor
cs
arpl
orl
lahf
inc
js
test
cmpsb
mov
movsl
cwtl
mov
sbb
nop
out
stos
inc
jno
loope
call
mov
test
mov
inc
jnp
int
cmpl
push
shlb
mov
cmp
testl
movsb
adc
sbb
dec
ss
jbe
neg
stc
sti
fisttpll
ret
mov
ficoml
fdivl
push
lds
mov
scas
add
xchg
mov
mov
repnz
sbb
or
add
or
mov
sti
outsl
lods
push
in
leave
mov
push
aam
arpl
cmc
mov
out
test
xor
out
push
cwtl
iret
scas
add
jle
mov
and
pop
push
cmp
rcrl
stos
push
das
scas
dec
iret
enter
aas
shlb
leave
js
call
jp
pop
cltd
test
clc
adc
xor
es
das
fldenv
jns
sub
out
lock
mov
lods
hlt
sbb
xchg
test
pusha
xor
mov
mov
push
inc
cmp
jae
mov
scas
inc
hlt
mov
push
daa
dec
cmp
dec
sub
jp
adc
mov
push
test
or
shll
add
out
fcomps
outsb
popa
xchg
push
out
aaa
xchg
mov
cmc
cmp
jle
repz
pushf
cltd
cmc
mov
aam
mov
les
jg
ja
movsl
movsl
fstpl
push
adc
pop
cmp
mov
test
mov
clc
sahf
cmp
dec
rcll
leave
mov
in
push
xchg
aaa
stos
jmp
jo
outsb
push
and
int3
sub
fwait
cltd
sbb
out
cmp
lods
out
sbb
lcall
je
sbb
ss
ret
sti
pop
ret
loop
inc
mov
push
jo
je
jg
jae
pop
pushf
filds
dec
nop
xlat
insb
arpl
dec
test
push
sbb
cwtl
push
xor
outsl
mov
mov
int
shll
test
inc
dec
icebp
cmc
jns
xchg
pop
mov
cmp
jbe
push
cmp
imul
sub
mov
nop
pop
mov
and
push
mov
pop
inc
loop
sbb
adc
popf
mov
mov
cmpsb
roll
movsl
sub
sbb
lret
adc
mov
adc
addr16
in
ss
jmp
in
aad
repnz
cs
add
add
jb
cmp
outsb
lock
mov
cwtl
ret
and
shrl
pop
jb
adc
iret
nop
dec
mov
imul
stos
mov
pop
shll
out
sub
or
push
add
stos
cltd
dec
xchg
sbb
in
pop
lods
jle
push
lahf
aam
outsb
lock
and
lds
sub
jae
lret
fcoml
test
sbb
fildl
add
sti
cmpsl
push
ljmp
icebp
and
ja
ja
insl
js
imul
inc
lahf
enter
jbe
pusha
mov
std
sbb
frstpm(287
and
pop
jb
cmp
test
negb
loopne
mov
pop
outsl
xorl
pusha
sub
aaa
xor
dec
mov
dec
stos
mov
mov
or
into
dec
mov
cmp
cmc
aas
adc
cmp
psubw
das
mov
lds
addl
cmp
push
rcll
icebp
movsb
repz
push
sti
or
cltd
popf
xchg
int
stos
pop
pop
or
mov
pushf
pop
cld
ficomps
mov
rolb
push
push
mov
bound
lods
dec
mov
andl
and
xor
mov
mov
and
lahf
sbb
ret
xchg
fsubs
pop
pop
inc
mov
cmc
mov
test
enter
xchg
sbb
and
mov
pop
or
cmp
and
jecxz
addl
loopne
or
enter
mov
inc
sbb
jae
add
cs
ret
jno
cmp
and
mov
mov
stc
jl
jmp
xor
push
mov
pop
jns
xchg
dec
pop
adc
mov
popa
data16
mov
xchg
mov
cmp
mov
stos
xchg
pop
ret
mov
popf
imul
xor
pushf
pop
or
cs
sub
movsb
xor
or
cmp
es
in
jle
jg
sub
popf
out
sarb
and
adc
ja
imull
sbb
sti
fwait
pop
stos
cmpl
repnz
mov
jnp
out
mov
inc
inc
iret
xlat
adc
das
lock
addr16
insb
jae
inc
or
les
aas
dec
mov
insb
push
testl
sbb
jmp
and
scas
inc
push
ret
mov
inc
cmpsl
sub
iret
inc
aad
sbb
aam
push
cmp
sub
adc
enter
dec
fs
ret
jl
shlb
aad
test
pop
dec
dec
add
dec
xchg
xchg
bound
shll
or
inc
mov
shrb
jbe
jg
push
pop
cmp
or
rcr
mov
aas
or
jne
and
maxps
xchg
add
enter
mov
mov
xlat
fnstenv
mov
loope
inc
jmp
mov
sbb
insb
pop
mov
rorb
xchg
fsubrl
jmp
arpl
mov
ds
mov
ret
out
mov
jne
mov
pop
stos
lock
xchg
adc
mov
aaa
stc
cmp
test
mov
fistps
push
mov
cmc
call
rol
jne
sahf
scas
cmp
dec
cmp
daa
sub
adc
cmp
mov
sbbb
stos
sub
fsubrp
jo
enter
push
jns
test
cmp
testb
out
movsb
jp
cltd
inc
pop
nop
mov
push
jp
jbe
push
icebp
xchg
neg
add
out
mov
fimull
sbb
xor
xchg
int3
pusha
cmpsl
jno
test
nop
inc
sub
mov
clc
in
lcall
jae
push
shr
mov
out
xchg
jle
xor
dec
adc
and
mov
arpl
and
jge
push
jo
in
cmp
adc
jo
jb
adc
cmc
adc
adc
inc
and
jns
cwtl
popf
inc
jle
mov
nop
inc
cmpsl
clc
jo
jge
ds
lods
and
int
inc
or
jle
lods
test
jae
push
add
xlat
jno
test
pop
stos
jae
jge
in
push
pop
and
xchg
das
dec
jp
fadds
popa
insb
or
xor
outsb
and
fisubs
cwtl
and
xchg
dec
scas
outsl
loope
mov
pusha
bound
imul
jno
and
pushf
pop
nop
jl
mov
push
dec
fcos
clc
push
lods
mov
push
mov
ret
mov
push
out
lret
aaa
or
ljmp
mov
sahf
jne
xlat
or
cmpsb
and
int3
mov
mov
popa
pop
sbb
shr
mov
stc
les
and
movsb
es
daa
hlt
add
inc
stos
push
sarl
jmp
loop
ljmp
jl
push
xchg
pushf
sub
fimull
mov
xor
jb
jl
scas
inc
gs
dec
xchg
push
icebp
xchg
lret
mov
pextrw
xchg
adc
or
add
add
popf
or
dec
jbe
mov
push
pop
cltd
mull
ds
and
in
aad
lret
adc
push
mov
out
xchg
out
pop
sahf
pop
push
xor
rol
aad
jns
sub
mov
into
cmc
dec
inc
jnp
out
popa
jae
ret
sub
in
push
sbb
mov
pop
jg
mov
sub
fcmovnb
cwtl
mov
lds
add
sub
dec
sbb
pop
aas
inc
push
rclb
mov
fstps
decb
mov
adc
jecxz
push
shlb
bound
mov
adc
cli
mov
cmpb
fistl
daa
lret
fnstsw
lcall
lret
xchg
push
out
xlat
lret
fstpt
sbb
jae
fcoms
pop
and
xor
or
hlt
jle
sub
pop
fsin
pop
sarl
stos
sub
inc
sub
xchg
imul
jns
xor
mov
or
cmp
out
mov
aas
mov
lahf
cwtl
or
xlat
test
ss
push
push
pop
and
repz
pusha
push
cli
sbb
shl
ret
imul
mov
pop
enter
or
and
mov
insb
mov
fdivs
inc
mov
sub
cmpsl
stos
fs
sbb
dec
gs
stc
in
stos
or
pop
out
lahf
fmuls
fmuls
fdivr
jo
dec
push
mov
adc
push
and
cmpsl
scas
imul
mov
adc
clc
cmpsl
or
cwtl
pop
push
or
pop
repz
icebp
pusha
test
pop
mov
cmp
and
inc
jno
movsb
pop
loope
stc
push
movsl
les
enter
ret
mov
mov
je
cld
lcall
nop
sahf
or
ja
nop
sub
sbb
xor
push
lret
xchg
mov
adc
lcall
sub
outsb
sub
sub
jb
or
fwait
cmp
mov
xchg
out
jns
push
xchg
cmc
add
xor
or
cmp
push
pop
ljmp
aam
sub
pop
out
xlat
std
or
inc
or
scas
cmp
sub
fdivp
lods
nop
addl
jmp
adc
pop
loop
aam
inc
xchg
popa
clc
mov
jp
das
adc
pop
cmp
pop
adcb
xor
lcall
dec
dec
bound
fildll
ret
push
dec
setb
push
loop
enter
rcll
into
rsqrtps
push
lcall
fldenv
xchg
jo
add
xchg
mov
push
ja
ja
mov
in
call
cmpsb
sti
jae
and
cli
or
xor
jnp
sub
xor
leave
lods
jb
loopne
js
bound
add
outsl
inc
stos
adc
fimuls
rolb
xor
dec
loope
int3
and
dec
das
imul
lahf
push
xorl
sti
or
dec
mov
xor
cmpsl
mov
lcall
fxtract
mov
mov
add
push
cwtl
es
pop
out
nop
xchg
xchg
and
ja
push
mov
sub
fldl
outsl
xor
rclb
sbb
or
test
adc
dec
lods
inc
in
lret
pop
subl
dec
cmp
sbb
ret
pop
out
movb
fstpl
sub
out
dec
jmp
sbb
jae
es
adc
mov
inc
lcall
ja
testb
insl
inc
jae
popa
push
mov
aad
subl
mov
push
insb
push
fcomps
xchg
cmp
xchg
lret
cli
fidivs
sarb
seto
jbe
ret
add
ljmp
dec
int
push
int
outsl
adc
push
insl
fstpt
inc
pop
sbbb
mov
inc
adc
test
leave
jge
scas
mov
jnp,pn
pusha
adc
in
das
cmp
xor
mov
jno
orl
mov
es
mov
cmp
imul
add
inc
pop
adc
xorl
mov
sbb
cmc
cmp
ret
icebp
inc
sti
fdivrl
call
mov
add
xchg
enter
adc
jge
xor
pop
scas
jae
dec
cmp
pushf
fldt
xor
or
in
adc
jns
add
lret
sbbl
adc
add
outsl
mov
jnp
dec
clc
add
jmp
cwtl
mov
adc
ret
mov
cs
cmpsb
sub
mov
lea
test
loope
cwtl
jmp
call
cmp
add
xchg
std
insl
xchg
sbb
pop
movsb
add
inc
sbb
mov
lods
cmp
cmp
cli
les
add
adc
int3
loop
mov
nop
ds
adc
lea
test
das
xor
mov
dec
xor
mov
sarl
push
or
xor
idivb
cmp
or
shl
fstps
shlb
mov
xchg
aas
in
xlat
and
xor
mov
stos
les
mov
ret
test
fld
sahf
sbb
xchg
pop
pop
pop
cmp
jbe,pn
ljmp
ficompl
call
stc
xchg
add
das
push
lret
movsl
add
or
jge
dec
or
add
jecxz
ret
cli
inc
pop
or
add
xor
testl
inc
dec
rorb
fildl
mov
xchg
pop
stos
dec
sbb
outsl
and
mov
add
sub
xchg
pop
and
cmp
movsb
aad
inc
pusha
cmp
stos
daa
mov
lea
adc
push
sbb
insb
cwtl
and
cmp
and
jbe
stos
sbbl
lcall
lds
popa
in
add
mov
cmp
sarl
jp
jno
int
lds
das
stos
fisttps
std
popf
dec
in
mov
in
repnz
add
sbb
dec
lahf
adc
inc
test
pop
sub
add
mov
shlb
sbb
pop
arpl
rcrb
fwait
jns
fmull
xchg
out
mov
int3
ss
les
addr16
push
fildl
mov
jo
movsl
pop
cmp
rcrl
pop
adc
inc
lahf
addr16
ret
push
out
or
mov
mov
jmp
popa
in
dec
and
sub
movsl
add
push
xorps
dec
ficompl
lahf
mov
imul
out
sub
jne
cmc
mov
xchg
ss
fwait
mov
push
fscale
testl
loope
or
inc
lea
iret
mov
lock
adc
sarl
inc
rorl
push
mov
insb
enter
cld
sbb
adc
outsl
mov
jecxz
clc
adc
mov
mov
mov
pop
insb
push
mov
dec
mov
xchg
inc
sub
xor
jne
out
mov
imul
outsl
and
inc
jle
jae
jb
arpl
add
xchg
dec
cmpsb
mov
inc
inc
test
push
subl
push
dec
in
mov
pop
mov
cmp
loope
lea
push
push
int3
sub
jns
pop
and
inc
add
arpl
hlt
inc
cmp
ja
movsl
adc
push
dec
daa
push
fdivrs
out
sub
push
in
xchg
pop
leave
pusha
shr
inc
test
outsb
inc
andl
insl
testl
xchg
in
jmp
adc
pop
push
clc
fxam
negl
cmp
mov
cmp
aas
cmp
jns
mov
lret
adcl
xor
jecxz
xor
or
xchg
cmp
xchg
mov
aam
jne
mov
test
test
xchg
adc
in
inc
cld
fistpll
mov
mov
cmp
xchg
xchg
sub
and
in
push
movsb
shlb
xchg
or
add
ljmp
sub
repnz
adc
test
mov
mov
push
cs
fidivs
dec
dec
and
movsl
mov
and
fcmovne
push
aad
repz
xor
ror
sub
cmpsb
push
push
out
add
push
xchg
cmpl
xchg
lcall
pushf
cmp
test
mov
sahf
popf
mov
jno
out
or
into
jl,pt
sbbl
xor
pop
sbb
mov
xor
and
and
mov
jb
fiadds
aad
and
jno
adc
add
sbb
mov
out
jbe
adc
mov
ficoms
inc
inc
rcll
sbb
dec
pop
add
lcall
shlb
jmp
cmc
idivb
xor
ljmp
test
push
lret
fwait
mov
stc
ljmp
fcoml
popa
cld
xor
xchg
leave
xchg
mov
mov
shrb
xor
xchg
nop
pop
dec
lea
and
jbe
sti
ficomps
fmulp
lcall
repnz
or
inc
push
test
xor
mov
lea
push
imul
xor
loope
xor
test
int3
inc
lcall
stc
test
mov
sub
mov
sub
mov
bound
mov
sti
ret
sahf
es
arpl
pop
xchg
adc
fidivs
mov
pop
sbb
or
sbb
xchg
lods
repz
xchg
inc
or
push
cmp
jge
fcoms
push
hlt
pop
dec
outsl
mov
in
les
mov
xorb
sti
stos
loope
xchg
or
jl
xor
cld
bound
sbb
imull
aas
push
jns
test
insb
es
jno
nop
out
cli
cmp
jg
aam
inc
or
lock
add
hlt
in
xchg
dec
pop
pusha
or
mov
mov
sahf
into
push
test
sbb
sub
or
jnp
xchg
lock
test
shll
or
inc
pop
sbb
mov
popa
pop
ljmp
pop
cmp
push
dec
add
mov
call
movhps
movsb
jae
inc
int
repz
sbb
shll
dec
and
inc
cmp
popf
push
nopl
sub
arpl
les
mov
xchg
int3
sbb
dec
mov
mov
xchg
push
cmp
or
mov
mov
push
pusha
daa
adc
xor
adc
insl
jo
dec
mov
mov
lods
repnz
fs
add
pop
inc
shrb
pushf
adcb
xlat
cli
or
jno
movd
or
iret
pop
xchg
out
xor
cltd
cmp
out
push
cmp
xor
imul
mov
adc
and
daa
mov
aaa
push
xchg
xor
jg
out
int
sub
jbe
push
add
dec
rol
mov
ja
js
cmp
hlt
fmull
pop
test
cmpsl
movsb
fwait
xchg
aas
fwait
test
sahf
lea
push
jo
xchg
mov
sbb
in
sti
sbb
xor
fisubrs
repnz
pushf
cwtl
xchg
sbb
lock
mov
mov
pop
sbb
shrb
insl
or
mov
out
fcmovu
jle
jl
jbe
jp
repz
rcr
push
xchg
out
loop
xchg
mov
or
dec
in
ja
iret
repnz
mov
ret
aam
das
cmovl
and
pop
pop
js
cld
mov
fwait
out
sub
repz
loope,pn
jns
fwait
cmp
mov
gs
int3
cmp
sbb
sub
sysret
xchg
xchg
mov
mov
jbe
xor
pop
fcompl
lods
and
sbbl
cld
sahf
mov
jmp
fildll
xlat
xchg
lea
push
jnp
cli
dec
pop
or
jbe
scas
sbb
cld
pop
andl
imul
sbb
loop
cli
mov
push
mov
push
pusha
sbb
mov
sub
shrl
outsb
add
jmp
inc
pop
dec
mov
sbb
push
lcall
mov
hlt
and
out
or
push
mov
add
jle
fsubl
inc
stos
jg
cmc
jnp
jge
mov
mov
bound
daa
mov
iret
cmc
ret
fadds
add
jge
jecxz
pop
cltd
mov
dec
jb
loopne
ss
xchg
test
or
lods
or
std
test
adc
lock
lcall
shlb
ds
cwtl
xor
dec
adc
out
pushf
aad
sbb
test
rcl
and
insb
cld
outsb
outsl
pusha
sub
shl
jo
sahf
in
loopne
inc
les
sbb
fmull
test
loop
xor
in
movsl
js
lock
into
sbb
push
in
shl
scas
sub
sub
fcmovnu
mov
lret
int
adc
pop
aad
xchg
mov
push
dec
mov
mov
dec
mov
add
cmpsl
or
sub
cli
cmc
adc
lds
sub
inc
pop
push
mov
mov
and
add
xlat
push
jne
jl
sub
into
stc
jl
in
mov
push
in
mov
in
call
enter
pop
jb
mov
mov
push
test
jmp
dec
xor
cmp
out
inc
xchg
iret
pop
sbb
pop
sahf
dec
addl
negb
fisubl
es
iret
push
xchg
ja
cmp
adc
fs
loop
movsb
pop
mov
fimuls
sti
aaa
stos
loopne
add
repz
bnd
out
adc
push
sbb
cmp
mov
dec
mov
jmp
aad
es
xlat
push
push
xor
push
es
jge
push
hlt
enter
inc
lcall
loopne
and
add
sbb
das
aam
jnp
jno
addr16
fwait
out
inc
xor
inc
xchg
daa
and
lods
and
or
ret
dec
outsl
cltd
mov
mov
lods
pop
movsl
jmp
pop
fwait
sub
inc
mov
inc
mov
cmp
sbbb
sub
add
aam
sbb
push
push
cmp
pop
repnz
pop
push
inc
jl
cs
insl
test
ficoml
adc
sahf
mov
mov
nop
frstor
pop
imul
shll
je
push
cmp
jle
lahf
and
addr16
inc
test
sbb
dec
hlt
xlat
mov
das
or
xorb
adc
nop
es
dec
push
jge
add
aas
sbb
jo
mov
cltd
leave
jb
add
jp
icebp
mov
loopne
cmp
js
mov
or
shl
insl
mov
jge
jns
and
aam
rcr
stc
cmpsl
mov
nop
bound
adc
repz
mov
stos
js
mov
mov
repz
cmpsl
fwait
ja
sub
mov
std
sub
out
mov
das
mov
fcomi
push
ljmp
aad
int3
bound
push
pop
nop
jb
test
xchg
in
dec
fistpll
sbbb
enter
sahf
jns
sub
jno
add
xchg
fisubrs
sub
not
fucomp
rorl
mov
mov
mov
or
lret
push
loope
pop
pop
paddw
in
pop
call
fcompl
stc
push
mov
xchg
sbb
out
pop
jb
or
mov
mov
add
mov
scas
lahf
and
in
mov
jp
push
add
addr16
nop
pop
mov
in
push
adc
pop
jecxz
and
and
rolb
dec
xchg
movsb
dec
fwait
test
xchg
hlt
mov
enter
div
into
dec
mov
jne
arpl
jne
mov
lods
mov
fmulp
es
xchg
hlt
push
push
sti
pop
scas
mov
aad
lods
les
cs
enter
xchg
and
sti
mov
sti
scas
inc
inc
push
repz
test
es
xor
cwtl
sbb
pop
sub
lret
mov
mov
inc
cmpsb
test
out
xchg
imul
dec
test
mul
aad
in
dec
cmp
popa
cmp
call
lods
sub
cmpl
xchg
pop
adc
adc
in
lret
adc
jae
mov
inc
sahf
adc
xor
lret
shll
lcall
fs
jbe
negl
dec
push
sti
mov
test
or
inc
pop
xor
sti
jmp
xchg
mov
jo
lods
or
cwtl
adc
pop
mov
nop
roll
jo
jecxz
out
insb
fwait
sbb
sub
mov
inc
add
stos
inc
xor
xchg
test
in
movsb
rcl
jp
mov
movlps
lods
mov
push
and
jnp
mov
inc
push
enter
push
lods
push
loopne
xlat
iret
dec
cmpb
out
pop
insb
jae
push
movsl
sub
mov
pop
push
cmpsl
rcrb
out
aaa
add
jo
mov
cli
out
cmp
mov
dec
popf
in
push
imul
les
sti
mov
mov
add
adcl
or
fs
loope
lock
cmpsb
adc
lods
dec
push
cmp
add
push
scas
das
movsl
orb
sub
std
cli
test
jl
test
jae
adc
or
scas
loop
or
pop
and
aad
xchg
ret
ret
mov
mov
fistpll
and
xor
aaa
addr16
adc
jne
xor
loop
cltd
and
pop
aad
ja
aam
mov
repnz
hlt
jnp
lds
mov
clc
imul
fisttpl
adc
add
movsl
xor
push
testb
sub
push
add
add
fdiv
fdivrs
lds
add
mov
fisubs
ret
xor
pop
mov
adc
cmp
push
mov
icebp
push
outsb
nop
out
aam
scas
jb
dec
test
ret
inc
mul
jnp
cmp
ja
aaa
push
cmp
mov
xorb
stc
lods
add
mov
in
jbe
aaa
push
cmpl
aaa
notb
mov
fsubrs
adc
xchg
divl
xchg
pop
mov
push
pop
mov
mov
adc
jg
mov
add
lret
push
inc
clc
mov
push
sub
or
cmc
sub
xchg
sti
les
cmp
add
das
in
and
adc
mov
jnp
xor
pop
mov
xchg
pop
iret
mov
push
fs
mov
mov
aam
sbb
jmp
or
call
data16
frstor
mov
fsubrs
aad
push
jno
push
aaa
mov
movsl
xchg
mov
arpl
push
dec
pop
je
mov
pop
inc
mov
cmpsl
inc
je
inc
fidivrl
mov
testl
pop
xor
fidivl
pop
movb
shlb
jle
xor
test
dec
jbe
push
lret
sbb
stos
mov
xor
mov
enter
data16
mov
daa
xchg
jno
fs
outsb
lds
ret
sub
jle
jnp
cltd
jnp
cwtl
test
rcpps
adc
test
lods
push
xor
dec
dec
icebp
outsl
xor
sahf
sub
lods
sarb
adc
lcall
pop
loopne
xchg
push
sbb
xor
stos
popf
xchg
inc
lods
and
decb
adc
sbb
xchg
mov
jmp
sub
lods
gs
xchg
adc
fcoml
out
push
jno
je
jmp
lahf
jge
mov
mov
xchg
mov
cwtl
push
addb
mov
cwtl
adc
adc
or
and
add
stos
dec
call
stc
or
push
adc
fildl
fists
iret
adc
and
rorl
xor
aam
xchg
xchg
adc
xor
sarb
jmp
cmp
scas
cwtl
arpl
pop
sbb
sbb
test
mov
mov
push
xor
rorl
mov
sbb
dec
aas
cli
mov
out
stos
lds
cltd
in
loop
xchg
lret
mov
fistpll
pop
fdivl
sbb
gs
stos
add
les
fiadds
pop
rclb
test
mov
xor
push
xor
nop
scas
sbb
fldcw
adc
fdiv
lret
or
or
mov
inc
lods
hlt
jo
aad
loop
inc
sbb
inc
dec
xchg
enter
mov
mov
push
push
adc
and
mov
test
nop
jbe
pop
jns
or
out
jle
xchg
push
jno
pusha
pop
popa
pop
cmp
data16
mov
loop
mov
and
inc
inc
cmpsb
add
scas
mov
dec
lea
xor
loopne
adc
mov
adc
movsl
inc
sahf
lret
jns
xchg
pop
in
insl
inc
xchg
add
movsl
movl
lods
sbb
mov
jo
cmpsl
sbb
xlat
add
xor
mov
loop
andl
add
xchg
rorb
mov
cmp
imul
push
adc
test
jbe
inc
sbb
fldcw
xchg
push
mov
sub
mov
movb
popf
cmp
fmuls
shll
inc
clc
aad
repz
push
cmp
les
jle
sbb
and
ljmp
inc
cmp
sbb
nop
out
jns
test
adc
mov
add
inc
call
imul
jbe
add
sbb
xchg
out
xor
cmp
push
pop
xor
adc
aam
cltd
negb
bound
push
jmp
lea
fildll
inc
dec
jecxz
push
dec
sbb
leave
adc
imul
mov
inc
adc
mov
in
sbb
or
addr16
aaa
mov
pushf
mov
xor
rorb
ds
jo
mov
insl
add
mov
into
jp
aas
jns
jae
ljmp
pop
or
jb
es
fucomip
sbb
lahf
xor
mov
leave
inc
adc
mov
add
adc
jl
inc
cmpsl
mov
sbb
aam
movsl
sub
jnp
sbb
cli
lahf
add
mov
xchg
mov
inc
les
mov
mov
addb
icebp
push
lock
aaa
mov
mov
imul
jecxz
gs
mov
call
fsts
out
inc
call
notl
xchg
push
inc
cmp
adc
sub
outsl
sub
sarl
out
inc
jg
gs
cmp
pop
dec
mov
into
push
sbbl
rcrb
sub
mov
pop
std
fwait
test
cmp
jecxz
mull
lea
js
mov
cmp
mov
sub
and
add
std
inc
movsb
inc
xchg
mov
mov
xor
xor
xchg
arpl
lds
jbe
shlb
test
out
daa
sub
cld
cmp
cmpsl
insl
mov
ret
push
mov
inc
sbb
ret
xchg
and
jns
inc
xorb
sbb
ss
pop
mov
sub
xchg
cmp
test
sbb
rorl
dec
dec
mov
sbb
xchg
jge
xchg
jmp
jnp
out
push
jecxz
rorl
pushf
sahf
dec
sahf
inc
xchg
outsl
push
pop
cmpsl
jae
int
out
lods
rcl
sbb
out
mov
das
outsb
addr16
rcll
mov
xor
pop
sbb
and
js,pt
push
pop
mov
add
mov
cmpsl
mov
xchg
stos
sbb
hlt
xchg
ja
aad
mov
inc
push
cmpsl
fcompl
push
or
cld
stc
int3
jnp
inc
jb
sub
sub
sub
mov
ljmp
cmp
sarl
jecxz
outsb
jno
fucomip
enter
out
leave
ret
gs
roll
xchg
std
pop
pushf
push
add
aas
xor
xchg
clc
mov
testb
xor
cmp
cli
in
lods
and
mov
les
jl
je
rcll
lods
sbb
inc
in
jp
ds
cmp
xchg
stc
shrl
or
push
insl
loop
pop
jnp
jmp
cmpsl
pushf
jp
test
fsubl
cmp
adc
or
stos
jae
repz
int
jle
mov
rclb
in
ret
notb
enter
stc
sub
lds
rolb
add
mov
shrb
mov
lret
je
aad
sarb
mov
xchg
pop
pop
fabs
xchg
fs
ss
inc
stos
cmpsl
inc
movb
sbb
push
dec
ja
std
add
cmpsb
cmp
add
pop
shrb
add
outsb
subb
push
dec
sbb
jg
jp
sbb
push
xchg
rorb
jno
dec
je
or
das
xchg
insl
mov
pop
push
sub
inc
add
fstpt
mov
out
decl
and
dec
sbb
bnd
cld
push
mov
int3
sbb
insl
xor
pop
sub
addl
sub
repz
sub
aaa
call
iret
out
arpl
cmc
fs
aaa
repz
outsl
ja
pop
add
bound
icebp
and
xchg
xor
jb
dec
and
xchg
xor
dec
cmp
ljmp
aad
insb
mov
bound
mov
cmp
js
repnz
jg
mov
jp
push
stos
mov
dec
in
lcall
fisubs
lahf
loop
sbb
or
iret
shrb
inc
xor
js
lea
push
push
dec
push
loopne
mov
mov
xchg
mov
lods
mov
inc
lods
insb
daa
divb
adc
push
push
pushf
inc
test
dec
cmp
mov
push
in
xchg
sbb
sub
push
add
insb
inc
loope
fsts
loopne
dec
inc
cld
lcall
addr16
sbb
pop
jnp
outsb
lret
pop
arpl
sub
lea
and
sbb
xchg
mov
mov
or
lahf
lds
inc
test
call
cli
jae
movsl
das
sub
sbb
cmpsl
and
or
sbb
sbb
inc
bound
push
jae
dec
mov
shll
ret
in
ss
clc
xchg
sub
dec
pop
mov
int
and
cwtl
mov
push
das
fists
push
loopne
push
sbb
lods
adc
mov
adc
mov
call
push
add
sub
ds
inc
loopne
sub
imul
xchg
sbb
inc
sub
pushl
add
loope
xchg
and
test
xchg
cmc
aam
lahf
jnp
and
stos
adc
fdivrl
or
leave
push
pop
imulb
adc
scas
popa
inc
fyl2x
xor
adc
adc
in
int3
adc
enter
push
sub
inc
cmpsl
adc
cs
jae
fistpll
fiaddl
gs
adc
or
push
inc
cmpb
cld
cmp
xchg
jle
mov
mov
filds
xchg
ret
in
sub
sbb
or
mov
lods
push
add
jmp
add
dec
jl
mov
pop
cmp
movsl
mov
in
inc
daa
scas
jmp
jge
je
sahf
rorl
add
mov
xchg
jae
shrb
loope
mov
or
js
or
aas
push
cltd
popf
and
mov
push
adc
pop
jp
xor
mov
stos
push
and
inc
es
jp
dec
xchg
lods
inc
cmp
mov
cmpsb
popf
mov
addl
jl
lcall
in
mov
cmpsl
pop
and
xchg
push
adc
pop
cmp
adc
jmp
xchg
aam
fists
scas
pop
aas
out
mov
push
fidivl
ja
jnp
sbb
xchg
or
in
add
fs
inc
in
add
mov
and
and
out
stc
push
data16
cmp
cmp
fidivrl
mov
jns
or
dec
cmp
pop
shrb
jp
scas
popa
nop
adc
jle
xlat
mov
movsl
push
xchg
sub
inc
enter
aam
sbb
les
jns
loop
sub
sub
xor
mov
mov
push
or
stc
mov
jle
cmp
sarl
xor
push
neg
cmp
cmpl
je
imul
mov
or
fsubrl
push
outsb
clc
movsb
sub
popa
test
mov
stc
push
in
sub
mov
arpl
xor
jl
movsl
int
cld
popf
pop
xor
adc
or
shll
add
xchg
jmp
loop
lds
sbb
push
push
mov
das
sub
orl
insb
adc
jl
mov
and
jmp
movsl
or
enter
pop
sbb
jl
inc
inc
sbb
mov
stos
mov
hlt
je
stos
cmp
mov
inc
enter
icebp
sbb
into
sar
loop
sbb
xchg
xchg
arpl
jle,pn
mov
lcall
dec
sahf
mov
cmpsl
inc
sbb
cmp
out
add
int
adc
testb
clc
cmpsl
sbb
adc
clc
iret
inc
push
pop
mov
enter
ljmp
jmp
in
inc
int3
popf
test
ss
pop
dec
jmp
push
and
add
mov
test
dec
insb
cmp
sub
out
sti
outsb
cmpsb
int3
aad
inc
outsb
jmp
ja
sbb
or
cmp
adc
mov
pop
dec
scas
mov
mov
add
jno
sti
fistpll
adc
stos
loop
jp
sbb
call
stc
push
sub
enter
or
test
test
adc
pusha
in
jmp
insl
sub
sar
movsl
xor
adc
stos
cltd
fisubs
cs
jbe
mov
mulb
cmp
cmp
xor
test
pushf
fcoms
addr16
aad
dec
mov
insl
push
ss
dec
inc
sbb
mov
test
sbb
inc
test
xor
lcall
jp
sbb
add
fwait
mov
push
sti
andl
aam
mov
sbb
les
mov
adcl
leave
mov
fsubrs
icebp
icebp
jne
cmc
popa
sbb
mov
push
sbb
xchg
insb
lds
jne
ds
sbb
data16
fdivs
sbb
leave
int
popa
popf
push
inc
mov
in
ja
test
std
pop
outsb
es
in
jmp
int3
dec
pop
sbb
cmp
movswl
mov
push
jle
push
dec
test
gs
shlb
xchg
xor
out
out
idiv
add
cmpsb
out
sti
sub
xor
push
stos
dec
sub
out
xor
sbb
sub
cmp
sub
nop
jp
xchg
lods
movsl
pop
mov
ffree
jp
scas
cmp
sbbb
push
push
pusha
dec
push
decb
scas
add
movsb
pop
add
sbbl
popa
insl
adc
jno
or
xchg
cwtl
icebp
xor
mov
imul
les
dec
pop
inc
call
push
clc
sub
movsl
subl
cld
pop
adc
in
icebp
loop
ret
stos
xor
lds
sub
push
mov
or
mov
add
adc
push
push
push
lods
int
xchg
aam
sub
mov
nop
pop
mov
ret
or
fwait
inc
in
test
cwtl
xchg
mov
jne
out
test
sbb
mov
loopne
loopne
jae
or
icebp
or
and
pop
dec
lods
dec
leave
inc
aam
xchg
dec
aam
adc
fidivs
xor
das
in
jl
pop
std
cmp
cmp
sub
xor
xor
or
jg
lret
push
xchg
lret
popf
test
inc
sbb
lock
pop
lea
xor
pop
mov
add
decb
mov
cmp
inc
loopne
rcl
cwtl
push
mov
sbb
jmp
xchg
int
insl
pop
gs
fsubrp
push
clc
xchg
pushl
xor
pop
dec
pop
adcb
ja
sbb
push
push
movsl
and
mov
xchg
out
pop
cmp
mov
out
inc
mov
push
js
in
pushf
xchg
jne
imul
inc
sbb
iret
sbb
jmp
movsl
addr16
inc
arpl
xor
fsubrs
lret
test
fcomps
aam
fimull
es
cmp
hlt
cltd
inc
mov
cmc
sar
jge
xchg
das
cltd
icebp
outsb
push
xor
inc
add
rorl
mov
fwait
call
arpl
push
pushf
lret
or
and
inc
and
test
jecxz
sbb
je
xchg
ret
cmc
cmp
lret
popa
fiaddl
movsb
jbe
bound
lods
icebp
or
dec
inc
in
and
mov
mov
mov
jbe
nop
iret
add
js
loop
mov
fidivl
pop
mull
in
mov
xchg
adc
mov
dec
int
cld
pop
pop
mov
sub
mov
xchg
icebp
xchg
or
mov
adc
xchg
lods
xchg
push
mov
cmp
add
insl
test
call
pop
sub
mov
repz
jg
popf
jnp
xchg
pushl
mov
jg
mov
jae
push
rclb
ds
mov
mov
jl
lods
mov
pop
imul
dec
cld
cld
jmp
adc
les
je
fnclex
push
xor
xor
outsb
jb
jp
cmp
in
or
cli
lcall
lods
mov
dec
xchg
add
scas
add
mov
push
and
push
loope
inc
insb
add
cwtl
inc
pop
sahf
std
push
inc
cmc
sub
sub
cli
or
xchg
sbb
es
or
test
and
test
in
addb
sbb
ret
mov
leave
mov
jno
fcoml
pop
sti
scas
addr16
xor
jmp
mov
add
das
outsb
ficompl
icebp
cmp
and
xor
cmp
inc
push
mov
je
jg
xor
into
sbb
push
push
and
ja
stc
mov
xor
movsb
ret
outsb
aad
ljmp
pop
mov
sahf
lock
nop
sbb
or
and
jb
imul
sbbl
fnsave
cltd
add
push
adcl
aaa
enter
sub
iret
adc
scas
xchg
xor
push
cmp
in
stos
out
mov
fcomps
mov
or
jne
pop
jl
jae
fmull
test
mov
cmc
pusha
cmp
stos
mov
clc
jnp
or
arpl
push
push
ljmp
mov
ljmp
push
pop
mov
and
jno
out
jmp
xchg
stos
test
mov
gs
pop
lock
cmp
and
test
and
in
mov
aam
into
inc
fbld
pushf
inc
add
xchg
ret
pop
aad
cmp
push
mov
test
cmpsl
arpl
repz
shr
pop
cltd
nop
mov
out
lods
int3
scas
mov
pusha
add
mov
push
adc
inc
sub
cmp
ds
test
out
xor
xchg
sarl
xlat
int3
inc
cwtl
clc
lds
orb
push
cli
jnp
add
in
inc
lea
lahf
mov
mov
dec
lds
jae
lods
push
lods
inc
cmp
movsb
mov
jns
divl
xchg
ret
sub
dec
sub
push
filds
cmp
xorl
add
mov
sahf
and
jp
xchg
push
rclb
sbb
sti
jle
ret
mov
je
test
aam
out
xchg
pop
jbe
fists
push
lea
sub
mov
rolb
xor
pushf
scas
sbb
std
rcl
shll
push
gs
lret
or
and
xchg
push
or
cmp
sbb
mov
mov
jg
mov
notl
pop
mov
imul
imul
xchg
into
pop
lea
push
fidivl
add
addr16
jge
jns
xchg
mov
cmp
cltd
dec
and
popf
push
iret
inc
test
sub
dec
cmc
jnp
or
fs
dec
aaa
outsb
ret
sub
popf
int3
jbe
lods
pop
sub
iret
popf
testl
jmp
clc
mov
jno
xlat
ret
inc
push
jecxz
cwtl
cltd
sbb
jbe
add
pop
mov
ret
mov
ja
xchg
test
mov
inc
cli
call
sub
mov
xchg
sub
pop
scas
mov
cmp
or
cmp
lds
inc
repz
test
cmpsl
out
cld
lahf
inc
and
repnz
lock
pop
jge
cmp
push
mov
aam
loopne
enter
cmp
dec
sbb
add
test
ds
cmp
ljmp
add
orl
and
in
data16
mov
adc
inc
shlb
xchg
mov
outsl
mov
rclb
jmp
call
movsl
in
les
pop
push
xor
lods
push
iret
je
mov
dec
ss
push
xchg
xchg
ss
dec
mov
in
jb
mov
int
std
sub
mov
movsb
popf
cmp
sbb
xchg
push
jne
repz
imul
xor
das
jne
mov
lea
pop
mov
lcall
jg
movl
jbe
lcall
sarl
push
jge
adc
or
fwait
and
andb
ja
mov
scas
fcoms
mov
pop
dec
add
sbb
inc
icebp
and
jecxz
inc
or
mov
shrl
cld
aaa
lds
push
stos
lcall
cmp
and
xchg
push
popa
jp
pusha
sarl
push
add
imul
pop
fwait
xchg
sub
sub
js
ret
divb
push
dec
ret
adc
jl
shl
mov
cld
std
lret
or
cmc
test
pop
subb
jns
and
push
or
lea
jle
sbb
in
scas
sahf
mov
adcl
mov
and
int
lcall
psllq
jle
pop
ja
cmpsb
mov
or
mov
add
in
je
push
inc
pop
test
ror
mov
inc
std
mov
in
push
pop
xchg
inc
cs
imul
add
or
add
fcom
or
cmpsb
frstor
dec
sub
aas
jae
out
dec
add
and
jns
call
fsubrl
sub
sbb
sbb
cmp
sbb
xchg
mov
repz
or
hlt
mov
dec
cmp
addr16
mov
arpl
lods
inc
out
push
mov
incb
push
sti
or
ja
pushf
lock
in
cmp
inc
xor
loopne
xchg
cs
lea
mov
cmc
nop
inc
cmp
nop
rcr
jmp
lret
add
mov
mov
mov
sbb
adc
jbe
dec
repz
addr16
xchg
test
daa
in
negl
add
or
stos
mov
adc
jae
stos
ss
xor
adc
out
jl
iret
jge
cmpsb
je
xchg
into
adc
mov
pusha
add
jp
fsubl
insl
dec
cmp
cmpsl
sub
mov
xchg
inc
lods
fbstp
jg
bound
stc
or
inc
mov
notb
fildll
and
jne
mov
leave
stos
pop
mov
xchg
sbb
dec
sub
pushf
push
add
dec
cmpsb
lods
cmpsl
push
mov
loop
lahf
inc
adc
pop
sarb
arpl
dec
xchg
push
push
jge
pop
movsb
xchg
mov
push
sub
dec
and
xchg
mov
or
pop
pop
adc
dec
mov
cmp
pop
cmp
add
push
xchg
std
pop
out
pop
pop
mov
movsb
or
mov
adc
imul
jbe
sub
mov
pop
sbb
push
xchg
cmp
nop
pop
lods
jmp
mov
xor
adc
sub
sbb
cmp
xor
out
push
lds
popa
repz
movsb
dec
into
pop
mov
mov
lods
fs
movsl
xor
and
mov
jg
loop
jo
xchg
gs
mov
ficoml
lods
lcall
insb
mov
cli
gs
mov
jg
inc
push
cli
inc
jns
inc
push
mov
lock
in
push
push
sbb
mov
sbb
sbb
fsubrp
or
popf
mov
dec
push
out
adc
push
dec
js
sbb
sbb
or
outsb
or
inc
add
mov
enter
adc
decl
in
push
or
out
or
jg
sub
pop
mov
push
adc
mov
xor
adc
shrb
mov
inc
mov
ljmp
inc
push
dec
leave
pop
sub
pop
push
or
push
adc
jb
out
andb
sbb
popf
jp
mov
sub
popf
dec
xchg
mov
or
jne
jno
lods
test
loopne
mov
das
push
stos
pop
lahf
jl
pusha
test
pushf
fsubr
test
gs
lea
mov
push
imul
push
mov
pop
in
ds
inc
fsubrs
shl
jl
scas
in
ja
xchg
dec
sub
pop
cmpsl
xchg
cmp
aaa
ret
cs
inc
ret
mov
pop
repnz
ljmp
or
in
push
dec
mov
inc
ficompl
movsl
dec
lds
dec
fwait
dec
add
lret
leave
and
add
inc
mov
xor
mov
sbb
sub
outsb
fmuls
push
stos
mov
mov
insl
out
dec
lods
adc
dec
mov
adc
add
orb
xchg
inc
and
gs
test
mov
scas
in
out
sub
sbb
unpckhps
stc
sbb
xchg
and
insb
test
mov
add
lcall
xor
into
dec
fwait
dec
fcmovnu
mov
fmull
add
jo
inc
lcall
test
in
pop
push
jecxz
outsb
sbbb
arpl
lods
xchg
test
add
push
cs
lds
flds
cmp
testl
cmp
dec
mov
out
outsb
shrb
mov
jmp
sub
mov
cli
push
adcb
add
cmc
dec
mov
mov
into
into
xlat
bound
cwtl
fldl
xor
jae
dec
adc
pop
mov
push
arpl
sub
iret
sub
mov
dec
icebp
js
lret
enter
imul
sub
insl
push
in
scas
dec
jmp
mov
sub
mov
fsubp
jne
inc
aad
ret
loopne
icebp
xlat
inc
and
dec
cmpl
rolb
loop
sub
jno
mov
popf
inc
cli
jmp
mov
loope
jae
and
mov
out
and
or
inc
adc
inc
cltd
fists
mov
jmp
mov
mov
jmp
or
dec
mov
and
fldt
es
cmp
lret
lds
push
xor
adc
xlat
imul
or
pop
fadd
dec
push
sbbl
arpl
pop
cli
lret
mov
addl
cli
push
pop
lret
outsb
xchg
test
into
mov
push
sbbb
xor
cltd
push
or
push
outsb
cmpsb
dec
movsl
pop
pushf
clc
push
jno
sbb
dec
cli
fcmovnbe
ds
js
cmpb
sub
xor
inc
mov
pop
xor
divl
mov
imul
push
jae
pop
dec
mov
js
jmp
pop
jae
ret
mov
push
ljmp
imul
push
hlt
push
jns
inc
stos
or
xchg
scas
imul
insb
icebp
mov
fucomi
aam
enter
andl
inc
push
mov
fimull
subl
push
mov
add
push
mov
stos
negl
push
in
insl
add
rorb
test
sti
push
xchg
or
push
lock
inc
fnsave
jle
xchg
leave
shll
jle
movsl
add
mov
or
inc
mov
test
jecxz
mov
orl
sbb
xorl
into
stos
dec
push
or
fldl
jp
dec
aaa
shl
sbb
aad
orl
fwait
jg
jne
sub
in
inc
add
dec
mov
pop
jnp
or
rcrl
insb
mov
inc
jmp
insb
fisttpl
sahf
sub
and
sarb
shrb
and
add
subl
jl
mov
lahf
stos
pop
aas
fidivs
inc
popa
pushf
pop
xchg
pop
in
adc
call
or
xchg
xchg
xor
stc
xorb
adc
cmp
xor
int
dec
fadd
aam
cmpsb
ret
jp
shrb
cmp
es
imul
cwtl
fildll
cltd
outsb
insb
cmp
sub
popf
push
inc
add
repnz
in
sub
ficomps
icebp
mov
in
push
push
mov
add
cmp
jno
ud2
sub
inc
cmp
mov
xchg
int3
xchg
pop
sarb
mov
mov
arpl
fcompl
pop
mov
es
inc
xor
es
and
push
mov
mov
mov
xor
jae
mov
xor
imul
jge
jns
sub
or
xbegin
insl
dec
mov
stos
mov
mov
add
in
sub
jp
roll
pop
aaa
stos
mov
jl
cli
pop
ja,pn
mov
mov
cwtl
arpl
adc
daa
sub
loopne
push
fisttpl
negl
pop
movsl
aad
rcrl
lods
cmpsl
dec
sahf
adcb
outsb
int
loopne
cwtl
mov
add
out
lahf
fimull
push
or
cmp
sbb
cmpsb
scas
fldenv
inc
fnstenv
ss
add
sub
push
mov
hlt
test
or
fsubrl
enter
sub
mov
inc
cwtl
pop
pop
and
xchg
pop
cmp
add
sysexit
arpl
mov
fsts
dec
push
mov
iret
cmp
mov
jg
push
call
mov
mov
adc
dec
jg
subl
or
push
ja
enter
push
mov
ja
aaa
ja
loope
mov
or
pop
and
lock
stos
iret
inc
cmc
std
push
and
dec
push
sbb
fwait
or
push
popf
pop
ljmp
popf
cmp
neg
push
inc
push
divl
adc
ja
enter
xchg
ds
xor
stos
int3
sbb
xlat
and
xor
imul
mov
cmp
adcb
mov
push
addb
in
push
std
push
dec
nop
rcll
pop
xchg
cmp
fnsave
gs
repnz
lds
xor
pop
aas
pop
sub
pusha
roll
xchg
inc
int3
pop
in
nop
js
lds
inc
cld
js
jecxz
ficompl
or
push
add
leave
xchg
jecxz
mul
sub
mov
mov
push
sbb
loope
sbb
rol
xchg
mov
cs
pop
lds
sub
add
cwtl
lods
adc
test
gs
out
icebp
dec
jecxz
inc
imul
mov
pop
push
push
add
inc
mov
jg
ljmp
test
aaa
lods
mov
js
mov
adc
mov
jl
aad
jecxz
pop
and
inc
xchg
pop
test
sbbl
or
add
std
negl
push
in
mov
push
scas
mov
in
je
dec
xchg
call
xchg
outsl
into
loope
add
jnp
xor
pop
and
pop
cwtl
cmc
fiadds
daa
jmp
rorl
adc
out
fs
lock
adcb
les
mov
ss
jl
popf
push
arpl
iret
cmp
jle
mov
ficomps
mov
pop
xor
xor
pop
cmp
pop
pop
push
out
loopne
lods
sbb
add
in
fdivl
mov
lret
movsb
dec
pop
fidivs
ror
pop
insb
out
rcrb
gs
dec
xchg
mov
leave
adc
push
or
cmp
cmp
add
mull
imul
shlb
enter
cmpl
push
popf
xchg
push
sarl
dec
lret
xor
jo
popa
js
push
push
cli
mov
imul
mov
pop
mov
ds
enter
movsb
pusha
lret
or
insb
xlat
rcrl
or
mov
xor
adc
pop
shlb
out
xchg
sbb
test
push
mov
ljmp
cmp
sti
imul
sbb
movsl
lret
dec
jo
mov
sub
pop
mov
jecxz
test
mov
mov
mov
pop
pop
loop
das
mov
mov
sti
cmpl
loop
xchg
adc
daa
aaa
hlt
pop
repnz
lcall
call
aad
out
jb
xlat
imul
push
push
dec
xchg
movsb
xchg
icebp
mov
dec
stos
mov
cmp
jge
ss
or
cmpsb
sbb
aaa
xor
aaa
mov
movb
jne
popf
sbb
xchg
pop
push
or
push
mov
xchg
mov
shl
mov
test
imul
mov
dec
cmpb
enter
pop
nop
pop
dec
dec
adc
jb
sbb
lods
sub
cmp
iret
lods
xor
scas
popa
mov
fistps
push
pop
hlt
jae
mov
add
popa
lret
mov
lcall
jns
mov
out
rorb
pop
cmp
xor
jo
out
mul
inc
mov
xor
mov
xor
pop
aaa
movsl
std
subb
push
insl
movsl
sub
dec
lds
std
mov
sbb
sub
fcomip
testb
xchg
inc
and
in
stos
fs
jns
scas
pop
ficoms
xor
mov
push
addr16
insb
daa
lock
mov
scas
push
ljmp
xor
scas
mov
fnstenv
lret
mov
cwtl
xchg
inc
cs
push
xchg
mov
jne
imul
mov
repnz
add
sub
ja
mov
mov
mov
inc
test
xchg
xor
adc
fdiv
and
fwait
stos
xor
dec
pop
movsb
test
mov
pop
sub
pop
adc
insl
mov
std
sub
arpl
sbb
mov
mov
cmp
adc
stos
iret
ret
sub
xlat
cmp
call
imul
ss
sub
lock
les
jo
mov
sbb
pop
jnp
lret
add
xor
inc
and
sbb
dec
cmpsb
jp
push
dec
cmp
push
sub
lds
fld
jp
xor
push
push
repz
push
js
addr16
ljmp
arpl
push
jmp
mov
sbb
jl
push
pop
adc
repnz
ja
data16
in
cs
xorb
add
fldcw
fbld
sahf
xor
xor
dec
push
lahf
shlb
cs
mov
shrb
gs
adc
cmpsl
pop
mov
sbb
inc
sbb
fsubs
fwait
xchg
aad
mov
retw
psubq
or
test
clc
push
and
leave
cmp
int3
or
insb
popf
push
xchg
cmpsl
push
sbb
cmp
sbb
dec
lods
jmp
outsl
rcll
inc
sub
outsb
jl
pop
mov
mov
jle
fildll
push
sbb
jae
into
enter
out
cmp
inc
sbb
dec
fldcw
test
sbb
shl
shlb
out
repnz
push
push
add
and
pop
and
mov
dec
push
repz
pop
inc
xor
xchg
xchg
stos
push
cmc
dec
movsb
rol
decl
sub
repz
fimull
outsb
inc
in
push
shll
addb
loope
pop
out
cld
push
adc
push
in
out
insl
loope
scas
inc
push
ljmp
lods
imul
mov
jae
cltd
add
and
push
and
mov
mov
rorl
push
cmp
cmp
mov
adc
xchg
cmp
inc
and
dec
and
sarl
int3
out
push
sbb
pushf
aas
test
xor
and
ss
cmp
xchg
cmp
push
decl
inc
cld
sbb
jo
jecxz
or
insl
dec
mov
jle
dec
lea
pop
insl
or
adc
xchg
dec
in
pop
sbb
lcall
and
dec
cmpsl
inc
in
mov
inc
cmpsl
movsl
fisubl
sbb
pop
cmp
lods
jbe
cmp
sarl
ret
xor
add
and
mov
add
ss
sub
cmp
xlat
cli
and
fimull
aad
push
dec
mov
jge
rcrl
cmp
out
popa
xlat
and
sub
xlat
nop
sub
idivb
push
movsl
push
cwtl
dec
dec
jns
repnz
call
mov
testb
nop
mov
cwtd
dec
pop
jp
and
mov
push
xchg
fcmovne
fcompl
xchg
popa
mov
test
adc
xlat
test
iret
lahf
add
sarl
mov
test
push
pop
lods
mov
cmc
insb
fmul
lcall
lret
jae
mov
jno
roll
pop
lret
push
shll
dec
fwait
push
adc
in
call
adc
int
and
movsb
fldpi
insb
mov
cs
add
cmp
jb
popf
xchg
and
jg
push
mov
add
cmpsl
enter
sbb
and
jns
xor
pop
push
outsl
rcrb
fistpll
and
jmp
dec
daa
stos
mov
and
and
add
inc
subl
dec
bound
adc
jg
inc
sarb
push
pop
pop
mov
cmovl
popl
mov
mov
jge
or
mov
loop
cs
lcall
jo
jbe
idivl
mov
bound
inc
cmp
xor
cld
imul
notb
fstpt
fstpl
outsl
lea
insb
popf
jle
incb
push
xchg
mov
mov
xchg
inc
femms
loop
mov
push
fwait
in
mov
outsl
xor
movsl
lea
mov
out
push
push
mov
cli
daa
jo
in
negb
push
inc
or
mov
add
fcoms
in
cli
or
int
jne
clc
add
loope
inc
lahf
xchg
add
icebp
ljmp
cwtl
ss
mov
imul
movsl
mov
les
rcll
fsts
mov
int3
stos
ret
div
xor
iret
les
sahf
mov
sbb
pop
push
repz
gs
movsl
in
test
imul
jo
inc
mov
and
aaa
push
xchg
loop
call
add
adc
push
jne
hlt
mov
ss
mov
mov
jnp
xchg
idiv
pop
sub
cmc
pop
jle
or
sub
sti
repnz
xchg
insl
dec
xor
xchg
dec
mov
jmp
sar
outsb
cmpsb
cld
shll
sbb
shlb
ret
testb
mov
into
imul
pop
sti
jb
mov
ja
mov
pushf
or
cmpsb
fwait
dec
inc
pop
ljmp
aad
scas
dec
pop
std
inc
divl
scas
das
jnp
mov
and
sub
ja
mov
adc
sbb
mov
jns
jns
js
insl
jns
decb
sub
repz
frstor
jb
inc
mov
xchg
jecxz
pop
fisttpl
ficomps
pop
lret
mov
push
sbb
pop
dec
les
jno
push
loope
arpl
js
dec
push
pop
inc
rcrb
ss
push
dec
clc
sahf
jae
and
aam
cwtl
jnp
xchg
push
mov
xor
ficomps
add
notl
arpl
mov
mov
cmpl
in
mov
arpl
shll
jp
add
adc
pop
push
mov
aam
outsb
add
fnstenv
push
jnp
inc
push
fisttps
inc
ds
xchg
notb
sub
in
dec
cmpsl
loope
xor
negl
lods
out
and
fiaddl
or
lea
push
bound
mov
mov
xchg
pop
mov
shrb
scas
pop
insb
jmp
cmpsb
push
imul
test
add
cmpsb
fcomi
add
lret
int3
lods
add
clc
aam
dec
mov
sbb
mov
das
inc
lods
out
pushf
in
mov
test
dec
and
nop
mov
ds
jns
add
jp
es
or
xor
mov
cltd
popa
sub
adc
mov
ficoms
push
xchg
frstor
adc
and
in
dec
or
xchg
mov
push
or
xchg
cmp
mov
mov
fldl
popf
add
pop
stos
jno
push
les
fisubl
mov
xchg
xor
lret
mov
cwtl
subb
sub
sahf
data16
sub
int
mov
pop
shll
dec
xor
int3
ret
xor
mov
ja
stos
and
sub
push
xchg
nop
mov
idivb
lock
push
daa
pop
push
in
xchg
push
mov
sbb
repz
mov
test
fsubs
cmp
mov
int
mov
dec
sbb
out
dec
aas
out
sbb
dec
sub
xchg
test
sub
gs
pop
pop
ja
push
push
mov
fstl
in
rcll
inc
pop
imul
fucomip
xor
jns
jo
push
jp
icebp
scas
icebp
xchg
mov
xor
rorb
xchg
in
cmp
push
ja
add
xor
mov
fmuls
outsl
mov
pop
orl
insl
jecxz
xor
in
ja
mov
jp
mov
outsb
xor
xor
shrb
pop
scas
sub
rorb
aas
jle
pop
jb
mov
jne
mov
or
ja
xchg
repz
cmp
jecxz
or
push
and
sub
lret
sbb
icebp
dec
neg
add
clc
outsl
sti
enter
or
sbb
aad
sub
sti
pop
sub
jecxz
jl
pop
dec
out
lds
jg
aas
das
mov
pop
xchg
jb
pop
imul
add
xchg
or
imul
hlt
add
push
jbe
pop
in
bound
sbb
fcoms
inc
cmp
mov
stos
push
and
ss
pop
movsb
bound
in
xchg
jb
lods
mov
pop
hlt
popf
push
daa
dec
pushf
int
xchg
std
insl
sub
repnz
cmp
addr16
and
adc
pop
popa
lock
lea
cmp
imul
push
push
iret
imul
dec
sbb
dec
push
leave
bound
push
insb
repz
jle
cmp
jmp
adc
roll
dec
or
jno
test
cmp
daa
arpl
outsb
movsl
addr16
imul
dec
lret
fwait
mov
pushf
movsl
jo
inc
les
add
and
sbb
push
fisubs
adc
lcall
outsb
stos
adc
lcall
sub
sbb
fiadds
or
iret
inc
pop
dec
cmp
jecxz
xor
and
add
push
push
adc
pop
pop
enter
aam
test
pop
icebp
imul
sub
xor
add
cs
mov
imul
or
xorl
jle
xor
loop
jo
ja
xor
xchg
lds
fdivp
jb
notb
add
gs
stos
iret
fisttpll
les
add
xchg
std
mov
dec
outsb
cs
sarb
mov
push
jmp
cli
ja,pn
sub
in
or
into
dec
fnsave
outsl
jp
push
mov
inc
jbe
je
nop
push
xchg
cmpsl
add
xchg
in
mov
iret
je
cmpsl
daa
in
out
ljmp
maskmovq
negl
test
jne
inc
ret
cwtl
into
mov
mov
add
push
dec
int3
or
jo
push
sbb
lods
jns
mov
sub
pop
loop
loope
js
cli
cmp
fwait
insl
lds
and
scas
fstpl
sub
sub
xchg
add
subl
jmp
jnp
sub
push
ret
or
in
xchg
cmp
push
push
imul
and
adc
imull
cmp
pop
sti
mov
push
into
jno
imul
in
cmp
insb
and
sub
leave
sbb
movsl
push
inc
lock
push
into
stos
inc
cs
jmp
es
pop
sub
cmpsl
lods
iret
jnp
scas
xchg
xchg
scas
mov
pop
repz
inc
sti
fs
mov
jg
mov
push
sub
mov
imul
sbb
push
repz
ror
ret
jecxz
inc
fstpl
mov
or
mov
mov
filds
jle
sbb
push
mov
test
dec
jae
push
adc
dec
hlt
cmp
fxch
jmp
jb
mov
jne
push
sbb
fstl
in
test
scas
pop
dec
sbb
sub
hlt
arpl
and
xchg
pop
jl
xor
cs
in
lods
xchg
sahf
pop
lea
push
push
test
cmp
lods
and
js
or
jno
jg
jl
dec
aad
mov
jno
mov
stc
fbstp
add
repz
out
loope
scas
into
loopne
inc
push
jecxz
inc
xor
lds
or
ja
gs
test
sub
das
mov
cmpsl
shrl
in
push
popa
imul
pop
inc
dec
mov
dec
jns
mov
fiaddl
push
insl
xchg
mov
repnz
dec
mov
enter
mov
lahf
adc
fs
or
ja
roll
lret
lret
push
js
xchg
mov
or
pushf
push
orb
dec
mov
jns
faddl
insl
push
rolb
int3
cli
jl
push
jecxz
andl
inc
ffreep
je
cltd
push
into
dec
inc
adc
mov
inc
jne
jno
in
mov
lds
xchg
ja
cmpl
lods
pop
pop
lock
cli
in
mov
pushf
arpl
jmp
add
sbb
and
loop
mov
aas
sbb
decl
pop
push
jmp
rol
xor
rcrl
sahf
mov
fsubl
out
cmpsb
stos
sub
or
and
int3
add
mov
jnp
mov
cmpl
lcall
test
lods
std
cmp
mov
push
sbb
jmp
cs
mov
and
mov
mov
lahf
mov
pop
cmp
fimull
jnp
stc
ret
out
mov
rorl
scas
test
mov
insb
mov
test
add
pusha
push
inc
cltd
rclb
in
jmp
add
push
lea
scas
test
or
sbb
je
aam
fwait
popa
pop
jmp
cmp
mov
jg
movlhps
adc
sbb
stc
or
bound
jns
sub
push
lock
push
nop
lcall
mov
out
push
int3
inc
lea
dec
pop
adc
cmp
jns
test
enter
jecxz
andb
and
sbb
cmp
xchg
lahf
aaa
lret
adc
sub
in
fisttps
push
mov
pop
push
jnp
outsb
and
push
roll
sub
xor
sub
aam
cmp
jnp
int3
lock
dec
in
fldt
push
sbb
add
push
add
clc
push
orl
dec
call
js
push
ja
cld
test
mov
push
sti
xchg
and
out
inc
inc
adcb
xchg
jbe
in
incl
lcall
pop
inc
pushf
loope
xor
sub
mov
hlt
adc
sub
adc
cltd
and
jg
ds
push
jae
std
pusha
or
sbb
adc
bound
inc
mov
inc
xor
fwait
add
stc
cmp
loop
loope
fst
sub
or
sbb
call
push
int3
and
adc
lock
aad
rorl
adc
mov
mov
mov
lock
sub
in
enter
lea
insb
sbb
cmpsb
es
cmpsw
loope
mov
gs
jne
dec
xchg
idivb
fs
xchg
xchg
aad
lcall
shll
imul
adcl
xchg
or
lea
xchg
insb
mov
fsubl
nop
daa
lock
jg
addl
push
inc
iret
mov
xchg
mov
mov
clc
push
inc
in
xor
adc
movsb
movsb
pop
pop
pop
repz
loopne
repz
ljmp
xchg
jg
imul
mov
and
dec
addr16
mov
sahf
mov
push
pop
sahf
and
adc
add
pushf
loop
lret
xchg
cmpsb
movsb
mov
je
push
mov
adc
mov
push
adc
aam
cwtl
sub
push
jne
imulb
fcoms
ficoms
loop
dec
cmpsl
pop
mov
scas
test
add
rclb
movsb
addl
pop
unpcklps
addr16
in
push
fdivr
out
sbb
mov
and
sbb
cs
jns
mov
lock
loope
pop
mov
mov
mov
push
inc
add
jae
and
sbb
sub
aam
push
shlw
sub
ljmp
out
mov
lret
cmp
jne
sahf
push
jmp
and
sub
dec
push
lods
arpl
dec
mov
out
mov
fiaddl
repnz
stos
cmp
adc
xchg
fucomp
push
inc
lods
push
cmp
in
inc
or
pop
cwtl
sub
mov
and
bound
add
cmpl
mov
ret
cmp
sbb
mov
mov
add
mov
leave
fs
pop
xchg
mov
insb
stc
mov
inc
cmp
imul
and
push
lock
lock
pop
mov
les
test
xchg
in
ja
shlb
daa
rolb
xchg
into
insl
arpl
ret
inc
mov
sar
lret
stos
xchg
lods
int3
enter
pusha
jecxz
inc
jmp
jle
and
xchg
das
push
mov
popf
sub
lods
imul
mov
xchg
ds
adc
mov
jnp,pn
jecxz
or
dec
arpl
sub
mov
mov
push
xor
fnstcw
mov
xchg
sub
jne
push
cmp
jle
aaa
dec
sub
lret
jnp
cmc
das
push
sbb
rcll
xchg
jg
shl
outsb
jge
pop
movsl
fnstsw
sub
add
pop
pop
pop
leave
jmp
or
jp
pushf
lock
xlat
adc
repz
xchg
mov
mov
jnp
adc
mov
insl
aaa
stos
mov
clc
shlb
jg
leave
xor
mov
xchg
je
enter
jl
push
leave
mov
mov
inc
pop
sbb
mov
push
js
lea
inc
cs
mov
mov
xor
das
mov
dec
or
inc
sbb
std
je
ds
leave
into
sub
lods
or
je
fstpl
xchg
add
sbb
xor
sahf
mov
pop
mov
orb
stos
pop
add
lahf
test
pop
mov
aaa
pop
daa
addr16
and
sub
adc
xchg
jmp
shll
mov
cmc
sbb
sti
inc
aaa
mov
not
dec
push
or
fstps
cld
jecxz
inc
into
mov
movsb
in
hlt
sub
adc
jbe
pushf
xchg
mov
and
pop
pushl
sub
sub
imul
std
arpl
adc
mov
xor
data16
lea
cmc
mov
popf
clc
mov
lock
jb
xchg
push
push
ljmp
out
push
fwait
stos
lds
aam
pop
int3
inc
jbe
lods
mov
xor
lds
int3
clc
sub
fbld
hlt
test
in
lods
push
sbbb
mov
dec
out
mov
test
dec
or
add
jno
and
cmp
int
mov
or
inc
cmpsl
mov
pop
jno
add
fdivrl
sbb
mov
dec
popa
push
mov
js
inc
pop
adc
dec
fcoms
and
icebp
dec
cmp
fadds
movsl
hlt
mov
lcall
ret
loopne
cmp
push
xchg
shlb
inc
or
enter
movsb
sbb
ljmp
lret
dec
loopne
mov
sti
inc
jnp
sub
incl
call
in
xor
dec
sbb
mov
pushf
sar
mov
sti
xor
push
out
orl
out
adc
sub
push
fsts
push
out
addr16
xchg
mov
pop
rcr
sbb
pop
neg
mov
movsl
sbb
mov
lea
out
aad
xor
imulb
jnp
add
repnz
cli
fidivrl
enter
icebp
xor
flds
fs
adc
test
lcall
and
cmpb
inc
push
adc
out
sbb
mov
jle
mov
pop
ss
or
enter
int3
ds
outsl
movsl
xor
or
pop
ljmp
test
ret
movsl
ds
pop
inc
pushw
decl
or
outsb
push
push
xchg
pusha
cltd
jno
jb
jno
jno
nop
jmp
pop
pop
sbb
test
or
mov
je
push
pop
adc
loopne
xchg
es
jmp
outsb
je
and
nop
push
pop
ja
les
ljmp
test
adc
repz
cmc
repnz
push
inc
or
scas
xlat
sahf
jae
inc
dec
xchg
lods
mov
aaa
inc
dec
xor
shll
mov
add
out
in
stc
scas
pop
rcrl
cmpsl
xchg
out
es
push
les
jmp
xchg
fimuls
in
mov
test
jg
and
pop
lcall
divl
dec
sbb
jae
outsb
pop
lcall
cld
into
insb
call
pop
mov
jl
ja
xlat
cld
ror
in
outsl
and
xchg
adc
in
das
lock
mov
and
mov
out
lea
shll
push
dec
sub
jno
xor
into
shrb
ljmp
adc
sbb
sbb
mov
mov
aam
xor
jecxz
rolb
aaa
or
ja
xor
movsl
lret
sti
xchg
das
ret
mov
add
dec
inc
imul
in
push
xor
outsl
add
aaa
sbb
in
push
mov
mov
jmp
mov
scas
push
loop
sub
push
mov
sub
add
cwtl
js
stos
fdivp
push
mov
ja
cmp
cmp
inc
call
test
popf
pop
pop
xchg
test
rcll
xor
and
xchg
out
jmp
sub
jo
les
testb
dec
jae
sti
test
xchg
stos
stos
jecxz
inc
jnp
or
jg
shrl
imul
clc
outsl
pop
xor
mov
in
or
pop
adc
sbb
mov
mov
lret
f2xm1
sahf
mov
pop
xchg
call
jge
mov
test
rcrb
ss
insb
lret
in
jg
cmp
ljmp
fwait
negb
cmp
fadds
cmc
fsubr
and
pop
sub
divl
adc
imul
jbe
xor
jmp
xchg
in
mov
pop
inc
dec
push
enter
iret
sub
loop
mov
jle
add
mov
cmp
fsubr
sbb
cmc
pop
push
cld
es
xchg
lds
scas
or
int3
ss
inc
xor
xor
mov
pop
sbb
push
add
cmp
xor
adc
mov
xchg
xlat
jnp
cmp
iret
jge
mov
imul
xchg
xor
jg
loope
repz
fcomps
mov
mov
iret
add
lock
adc
xacquire
ds
ds
insb
jne
pop
dec
stc
insl
jp
movsb
and
mov
aas
roll
push
push
ret
sti
jno
idivb
jb
dec
loope
addr16
popf
fiadds
adc
stos
fidivrs
xlat
sbb
arpl
aad
cli
hlt
loope
xor
mov
jp
inc
sub
inc
xor
or
lahf
sub
mov
push
call
push
dec
sbb
mov
xchg
mov
sbb
mov
aam
stos
dec
inc
sub
push
xchg
mov
and
in
mov
or
mov
scas
jl
lds
adc
cmc
into
jae
adc
scas
shr
lea
add
pop
daa
ds
iret
xchg
inc
jmp
adc
out
rcll
inc
ja
jnp
mov
jmp
lods
in
and
fwait
inc
js
fsubrs
jmp
sub
out
and
xchg
mov
stos
pop
popa
jecxz
pop
inc
cltd
subl
sub
and
pop
push
cld
or
inc
xchg
xchg
aam
lods
and
fwait
scas
dec
es
adc
pop
sub
mov
popa
inc
inc
dec
addl
xor
outsl
or
jle
cld
jae
insb
mov
jnp
call
xchg
sbb
adc
dec
int
dec
mov
outsl
xchg
xor
mov
and
push
sbb
das
jmp
mov
repnz
testl
xorl
clc
out
cmp
lock
jmp
mov
outsb
dec
cld
rcrb
ss
pop
lods
inc
repz
or
mov
cltd
xchg
in
push
sbb
fiaddl
popa
adc
pop
and
and
mov
or
orl
sbb
in
push
ljmp
xor
add
xlat
fdivs
pop
dec
in
mov
lret
clc
adc
dec
imul
sub
inc
or
icebp
lds
mov
dec
jno
add
daa
je
jo
outsb
inc
arpl
std
stos
test
lods
ret
and
inc
cwtl
mov
rorl
add
in
sbb
test
mov
xchg
push
xlat
mov
shl
xchg
xchg
or
or
mov
push
xor
mov
adc
test
jnp
mov
arpl
pushf
jge
cmp
inc
int
call
mov
lret
push
enter
jmp
movl
mov
jg
pop
int
push
add
or
lret
fcompl
mov
negl
inc
add
and
scas
pop
lds
scas
sbb
jle
sahf
push
push
mov
push
pop
jg
adc
xor
aad
sti
mov
aaa
and
mov
sbb
imul
cld
clc
and
stc
xor
mov
rcrb
inc
inc
mov
mov
pushl
or
pusha
xchg
jae
lahf
mov
sbb
or
jecxz
rcrb
pop
add
sbb
mov
bound
fwait
push
cwtl
es
movsl
sub
jge
pop
loopne
sub
jg
shl
jbe
mov
ss
mov
lea
or
sbb
fcmovbe
mov
add
cltd
std
outsl
adc
aaa
xor
jno
pop
xchg
out
or
movl
cmpsb
mov
jae
dec
dec
sub
add
gs
int
shrl
movsl
push
ret
imul
setle
and
js
push
insb
out
mov
repnz
lds
cmpsb
cmp
dec
push
fistps
or
daa
xchg
lods
xchg
jne
jecxz
cmp
push
add
cmc
test
mov
sub
outsl
pop
enter
lret
mov
adc
sbb
mov
pop
jmp
leave
test
cmpsl
inc
adc
mov
jo
in
icebp
std
test
mov
xor
cs
pop
mov
ret
push
jno
lret
mov
sub
mov
jne
fwait
mov
fidivl
mov
cli
lret
fstps
shlb
das
orb
push
mov
add
dec
cmpb
outsb
loop
popl
xchg
inc
push
push
push
rol
outsl
pop
xlat
jge
stos
cwtl
std
rcrl
inc
je
outsl
xchg
inc
push
movsl
repz
dec
xchg
jae
outsl
inc
xor
lods
cld
andl
xchg
push
lret
cmp
je
xor
jns
jecxz
ficompl
insb
insl
and
mov
dec
xchg
arpl
dec
js
mov
adc
ss
xchg
stc
push
cmpsl
dec
push
xor
out
inc
adc
and
mov
mov
jmp
xor
mov
jno
in
dec
daa
xor
sub
cmpsb
out
jge
mov
adc
sub
mov
mov
in
and
adc
pop
js
jecxz
les
and
pop
jo
in
stc
stos
adc
jb
pushf
add
out
iret
dec
adc
push
movsl
mov
ss
xor
xor
das
stc
sbb
sahf
push
sahf
sub
repnz
loopne
and
loopne
pop
cmp
adc
or
orl
add
push
push
push
mov
mov
mov
adc
adc
mov
outsl
out
rcrb
cs
movsb
xchg
repz
xchg
xchg
out
and
scas
dec
adcl
or
andb
mov
icebp
std
jbe
and
arpl
mov
pop
loope,pt
and
dec
lods
xor
mov
adc
leave
outsl
fstl
cli
rep
fisttpl
shll
ret
fnop
sbb
inc
ficoml
mov
scas
sbb
shrl
push
aam
into
pushf
sbb
repnz
nop
mov
dec
mov
repnz
inc
sub
mov
pop
lock
insl
mov
lea
clc
cmp
repz
push
and
ds
insl
in
jge
xor
into
cmp
push
xchg
jo
sub
jge
scas
cmp
icebp
cwtl
inc
and
cmpsb
mov
lods
lcall
cmp
cld
stc
xor
or
ret
int
imul
jle
pop
pop
mov
mov
sbb
jae
ss
fwait
pop
mov
lds
xorl
pop
add
inc
add
test
mov
dec
push
xor
pop
adc
xchg
sbb
test
mov
or
jno
lahf
in
xor
push
repz
push
lea
test
pop
jns
fdiv
test
add
jne
jns
jbe
ud1
pop
and
jg
sbbb
jecxz
fsubs
andl
daa
leave
gs
adc
cmp
leave
cmp
jns
pop
daa
push
das
jnp
sahf
lds
xlat
jnp
pusha
sub
inc
mov
mov
shl
xchg
sbb
in
sbb
xchg
mov
pop
xor
or
fldenv
in
sbb
pusha
cmpsl
sbb
or
cmp
mov
mov
mov
insb
out
lods
cltd
sbb
ss
fwait
mov
add
push
clc
aaa
and
lret
sub
aad
ret
imul
add
add
push
out
call
outsl
ficomps
push
in
xchg
sbb
fwait
lret
xchg
mov
add
pop
lods
pop
cli
adc
jbe
mov
and
pop
dec
jge
arpl
push
push
xor
dec
xchg
cmpsl
fisubl
mov
mov
movsb
insb
xchg
arpl
cmc
dec
mov
testb
cmc
jge
push
shlb
andb
xor
mov
cld
jmp
cwtl
imul
mov
xlat
loopne
in
lahf
and
and
ds
inc
or
stc
mov
int3
js
cld
add
or
or
out
jecxz
cmpsb
inc
cs
loop
mov
call
addb
or
and
jne
jp
xchg
adc
rcll
lahf
jg
sub
and
pop
xchg
je
popa
cld
mov
in
aad
jecxz
ljmp
pop
mov
icebp
sbb
or
cmp
push
fabs
push
push
inc
xor
nop
jns
dec
jg
das
fwait
jne
xor
cmp
or
push
outsl
jmp
ffree
andb
cmp
or
fnsave
fdivrl
pop
jns
mov
sub
es
jecxz
fs
mov
dec
arpl
cwtl
xor
push
pop
lds
test
jae
lcall
iret
jmp
arpl
shrl
mov
cmp
mov
hlt
sub
bound
pop
sub
mov
jl
and
xchg
dec
mov
adc
ljmp
faddl
jo
push
pop
and
cmc
cli
xor
imul
insl
cld
and
sti
mov
jg
pusha
mov
push
inc
lret
je
pop
xchg
jmp
nop
sbbl
pop
jb
adc
jl
pusha
xor
in
jno
in
mov
or
pop
and
lcall
stc
pusha
cwtl
popf
or
fimuls
enter
and
fsub
jnp
vpmacssww
pusha
xor
cmp
sub
in
ljmp
or
cmp
cwtl
cld
inc
scas
lods
mov
mov
ja
cmpsb
add
lret
jmp
inc
mov
cwtl
mov
repnz
or
xor
mov
jnp
and
push
fisttpl
inc
cmp
pop
out
es
and
jns
and
roll
jne
test
mov
call
daa
or
rcrl
fsubl
js
cmp
sahf
incl
movsb
pop
out
adc
jmp
or
sti
test
mov
lret
jp
mov
rol
scas
cld
sub
ja
ljmp
mov
push
insb
scas
and
inc
int
xor
adc
xchg
dec
fdiv
jle
inc
shl
jmp
std
or
adc
cli
xchg
mov
mov
xor
adc
jmp
int
ja
inc
jle
xor
aam
faddp
loop
cmp
xor
add
xchg
jge
test
neg
scas
in
push
xchg
push
ret
and
stos
dec
mov
shll
andb
jmp
xor
stos
ret
adc
inc
mov
cltd
jno
or
lret
inc
push
aam
sbb
pushf
cld
pop
int
lret
cmp
mov
xor
dec
shrl
mov
sbb
dec
sub
daa
rcr
mov
mov
lds
jns
and
or
xchg
loope
iret
in
icebp
fcompl
inc
aad
xor
push
aas
in
imul
mov
sbb
popf
in
and
sub
xchg
cmp
pextrw
push
pop
out
mov
mov
push
pushl
pop
inc
pushf
fst
fcoml
or
lcall
dec
lret
sub
out
lcall
ds
sbb
fs
out
cli
test
adcb
loope
push
test
negl
rorl
mov
add
pushf
push
sub
cmc
sub
pusha
sti
call
fcmovne
jo
jb
out
insl
je
rcrb
ds
mov
imull
jae
mov
or
add
jecxz
ljmp
dec
jge
mov
push
cltd
pop
test
mov
adc
stos
ljmp
out
add
jl
mov
mov
jb
sub
cli
mov
dec
pop
add
dec
pop
cli
or
adc
das
gs
inc
dec
pop
mov
push
ret
adc
jbe
cmp
mov
add
into
add
test
inc
fcoml
ljmp
dec
xor
jo
pop
and
out
pop
loop
cltd
subb
xchg
movsl
cmp
clc
inc
scas
in
das
or
iret
out
in
shll
popf
shll
leave
aad
mov
sub
out
repz
sub
lods
fcompl
stos
aam
pop
cmp
les
jl
jmp
mov
adc
mov
loop
xchg
call
loop
xchg
into
leave
jae
outsb
jnp,pt
rcll
outsb
es
mov
fcoms
aaa
add
movsl
mov
int
pop
xor
mov
out
stos
iret
loop
outsb
jmp
push
jnp
nop
movsl
aad
push
fs
push
sub
mov
xor
pop
movsb
popf
jg
adc
mov
xchg
adc
fisubl
out
lahf
xlat
xchg
mov
int
rcll
add
adc
adc
jb
add
xchg
xchg
pop
xchg
push
test
clc
adc
jo
xchg
add
jo
daa
lahf
mov
mov
push
fadds
das
inc
mov
enter
and
inc
ds
gs
fldl2t
xor
setns
fdivrs
dec
shlb
xor
cmpsl
xor
pop
into
mov
xchg
and
push
cwtl
repz
xchg
sbbl
add
xor
push
pop
push
jp
cmpsb
mov
rorl
dec
jnp
mov
xchg
xchg
in
nop
incb
mov
xor
enter
lret
cmp
aas
jo
add
inc
imulb
mov
add
out
sub
sub
dec
sub
aas
push
addl
jbe
or
aam
insl
push
repz
ret
fdivl
xchg
cmp
xchg
dec
cmp
ficoms
lret
pusha
sbb
mov
cmp
and
push
or
fwait
dec
cmp
xchg
cld
cmp
inc
adc
mov
jnp
pop
cmpsb
mov
xor
cmp
sbb
int
xor
les
cmp
std
mov
dec
stc
jb
ret
sbb
sub
mov
push
mov
idivl
push
add
and
push
jmp
dec
pusha
and
xchg
push
xchg
fistpll
mov
aam
mov
jae
mov
or
xchg
movb
or
sahf
adc
ror
mov
and
push
cmp
test
gs
sub
std
lahf
push
pop
sbb
jne
popa
je
insb
cmp
int
sub
or
adc
movsb
ds
sbb
gs
inc
push
leave
mov
mov
jl
add
mov
das
jle
jg
mov
or
repnz
ret
mov
xchg
in
clc
cwtl
out
xchg
divb
pop
fadds
dec
sbb
aaa
xorb
mov
test
xchg
push
or
arpl
mov
xchg
xchg
mov
sub
testb
js
or
dec
inc
fstl
insl
dec
cmp
cwtl
dec
xchg
repnz
add
clc
and
sbb
mov
icebp
inc
mov
jno
push
shl
sub
lods
lock
inc
mov
add
pop
pop
test
mov
adc
shlb
lods
fs
xchg
xor
pop
cmpsb
leave
mov
add
into
jno
arpl
mov
hlt
sub
jl
cmp
pop
jno
jb
out
dec
call
xchg
xor
push
mov
mov
xor
mov
jmp
or
jns
jo
sbb
jno
push
dec
and
scas
popf
stc
addl
dec
repnz
roll
ret
cmpsb
and
xor
jne
cld
in
out
ret
int
mov
addr16
dec
mov
sahf
rcrb
mov
dec
fiaddl
pop
pop
xchg
ljmp
sub
sbb
jnp
icebp
or
inc
xchg
jmp
repz
rcll
fisubs
in
mov
pop
repz
xchg
jnp
mov
outsl
mov
or
push
test
mov
xor
push
push
sbb
rcrb
or
fcmovb
fistpll
stos
dec
jbe
adc
mov
test
jge
arpl
dec
int
sar
mov
push
dec
pop
lret
jae
fimuls
xor
push
pusha
adc
into
dec
sbb
outsb
adcl
mov
lds
cmp
mov
pop
fisubl
loope
mov
cmpsb
fmuls
mov
shl
dec
je
mov
mov
icebp
lods
cmpsw
ret
in
fptan
push
mov
sti
fstpl
scas
lods
and
xor
and
and
mov
push
mov
ds
outsb
and
or
fadds
lret
pop
adc
mov
mov
sti
mov
les
dec
mov
xor
push
test
rcll
dec
push
push
add
es
leave
fnstenv
inc
add
stos
into
jle
fsubs
mov
add
mov
jg
test
ljmp
loop
outsl
in
into
xchg
mov
bswap
cmpsb
in
aaa
mov
inc
add
cs
sub
dec
inc
mov
sbb
test
out
inc
mov
mov
jle
xor
add
mov
push
fdivp
jb
mov
inc
or
pop
out
adc
lcall
call
jge
shrl
sbb
popf
ds
or
js
js
nop
cmpsb
lods
ja
mulb
ss
push
push
xlat
mov
int3
pop
cmc
inc
stos
mov
fisttps
pop
cmp
xor
imulb
lret
frstor
pop
mov
call
sarb
ja
movsl
aas
or
loopne
sti
adc
lea
pop
mov
aad
cmp
imul
cmp
fbstp
push
je
mov
jecxz
fldcw
or
sub
jno
lods
out
fs
shll
out
aam
cld
out
mov
loopne
add
adc
xchg
add
jo
pop
mov
mov
and
sbb
out
xor
add
adc
adc
cmp
stos
jo
out
jg
lret
loop
lahf
jl
xchg
xor
inc
adc
imul
lods
dec
shll
neg
jp
pop
jns
fucomip
jne
jp
gs
xor
sbb
imul
cmp
fcmovnu
push
or
addr16
into
roll
sub
hlt
mov
cltd
cmp
sahf
fsubs
pop
dec
outsl
int
int3
and
jl
pop
push
cmp
test
testb
xchg
mov
jmp
jns
leave
xor
cs
shr
mov
jns
lcall
in
test
mov
lret
jae
add
xor
out
and
mov
mov
sub
sbb
lods
push
test
jb
lea
xor
jnp
xchg
push
popf
stos
aas
jno
adc
aas
fcomps
mov
sahf
pop
or
dec
jbe
push
inc
out
loopne
rcr
lahf
push
cltd
xchg
inc
inc
lahf
cmp
icebp
mov
sub
pusha
loope
and
pop
sub
sti
xorb
inc
push
es
inc
sub
dec
aaa
dec
stc
sub
xchg
push
aas
fwait
inc
sub
rcrb
push
icebp
pop
jae
xor
add
outsb
loope
jbe
mov
adc
cs
dec
cmp
sarb
leave
jl
inc
out
sti
or
xchg
lret
adc
pop
mov
insl
sbb
mov
jno
push
mov
dec
fstl
jl
scas
cltd
aas
clc
adc
insb
jno
pop
pop
inc
adc
sbb
pop
inc
cmc
test
sub
lret
pop
mov
push
inc
mov
push
movsb
flds
in
push
int3
sub
mov
jecxz
fwait
outsl
dec
adc
push
mov
jg
xchg
sub
outsb
add
jo
adc
lea
inc
mov
fnstcw
inc
lea
jle
out
ljmp
dec
ljmp
ja
sbb
popa
xchg
lods
add
not
mov
popa
push
fists
dec
testb
js
pop
call
fmul
hlt
psubusw
sar
and
imul
ret
dec
inc
out
stos
sub
cmpsl
add
inc
push
xor
cmp
pop
iret
sub
sbb
in
in
hlt
fsubs
test
cmc
mov
add
fucomip
fucomi
pushl
push
aaa
scas
xor
rcll
adc
jge
leave
jmp
popa
push
add
pop
repnz
repz
stos
into
push
mov
xor
jb
cli
lea
sbb
pop
das
push
repnz
rorb
dec
mov
lock
inc
call
leave
lods
or
or
sbb
pop
incb
xlat
addb
push
sbbl
out
jp
ljmp
fcoms
jg
fmulp
repnz
test
imul
push
adc
xor
and
pusha
jns
lret
and
mov
inc
mov
test
pop
lcall
cmp
push
pop
arpl
js
xor
cmp
mov
bound
jmp
sbb
mov
bound
testl
les
jecxz
out
fsubs
adcl
add
xchg
mov
jb
adc
ja
pushfw
pop
shll
iret
cli
enter
mov
ret
push
dec
leave
lods
aam
dec
sub
lret
stc
xchg
inc
xchg
or
scas
jne
add
loope
pop
push
sub
mov
jnp
push
jmp
ret
int3
inc
jecxz
cli
xlat
loopne
pop
and
pop
lret
sub
pop
pop
xchg
dec
push
je
fmul
pop
sub
xchg
pop
xchg
push
outsb
xor
sbb
sub
movsl
jge
pxor
push
adc
das
std
idivb
pop
movsl
add
jnp
adc
pop
push
rcrb
cli
dec
or
sub
fmuls
inc
jmp
pop
shl
cmp
mov
inc
sub
xor
push
xchg
xchg
add
mov
adc
sbb
out
leave
call
out
imul
sub
inc
xchg
mov
and
jmp
je
popa
or
xchg
xor
and
adc
outsl
pop
daa
mov
subl
cmp
shr
push
add
add
sub
popa
adc
aaa
pusha
divl
mov
ret
cmp
frstor
push
push
sbb
sub
leave
fmuls
leave
les
pusha
dec
xor
xchg
shrl
cmp
cmp
int
cmpsl
ds
and
mov
or
jecxz
loope
out
xlat
adc
out
filds
mov
mov
andb
pop
mov
push
pop
or
inc
push
loope
or
mov
jne
int
call
js
mov
popa
add
xor
arpl
xor
adc
test
cwtl
outsl
das
sub
fisubs
jl
lcall
into
call
or
fiaddl
jne
in
push
xor
and
cmp
sbb
hlt
or
cmp
call
data16
es
jns
aaa
sti
mov
sbbb
int
aas
dec
inc
out
xor
ja
rcrb
pop
pop
lahf
xor
mov
jecxz
ds
mov
out
jnp
fstl
js
xchg
sub
into
dec
rcpps
inc
sub
js
and
pop
enter
in
push
out
or
popa
inc
out
lret
jne
inc
cmc
dec
int3
mov
fs
pop
pop
ja
push
or
mov
pop
ror
xchg
stos
ljmp
pop
jp
jl
test
in
sti
in
jns
ret
push
subb
je
pop
mov
sub
lret
ljmp
xchg
pop
push
and
mov
cmc
aas
and
cmc
fldt
xchg
fbld
mov
mov
aaa
adc
shlb
aas
ret
dec
insb
mov
dec
cli
xchg
mov
xor
imul
imul
push
pop
jp
dec
sbb
xorl
rcll
jns
pop
xor
fsubr
xlat
push
mov
sarl
rorb
neg
push
mov
sbb
push
jl
or
jecxz
xor
inc
jge
shlb
das
out
push
outsl
mov
lods
jno
int3
mov
lahf
outsb
and
xlat
les
mov
jge
in
sahf
ds
xchg
sbb
ja
insb
lea
ret
push
jbe
ss
add
sub
jae
and
and
es
jl
jl
sub
dec
mov
lret
dec
cmp
xchg
pusha
cmp
inc
inc
xchg
fidivs
test
enter
sub
mov
xor
mov
sub
das
mov
and
pop
movl
sub
pop
pop
mov
movsb
push
dec
addb
gs
adc
negl
scas
fldcw
jge
or
popf
mov
test
aam
add
lds
rclb
std
jmp
mov
fcoms
jge
dec
das
imul
fldcw
shll
mov
out
adc
mov
cvtps2pi
je
popa
pop
xchg
sbb
repnz
pop
push
out
shlb
pusha
jecxz
mov
adc
push
push
dec
outsl
push
lods
inc
hlt
and
jnp
cwtl
xchg
rorl
imul
cmp
cs
lea
ja
je
rol
or
fwait
int3
test
in
xor
xchg
pop
shrl
cld
pushf
mov
shll
mov
jnp
loopne
jge
aaa
xchg
shll
sbb
sarb
adc
in
push
and
push
and
xchg
cmpsb
xor
dec
pusha
int3
and
jno
sub
aam
iret
ja
jno
inc
orb
orb
shll
shrb
xchg
shrb
mov
push
test
jb
rclb
jg
push
popl
and
mov
mov
in
mov
addb
jae
xchg
pop
push
push
lods
sub
push
mov
sub
jo
and
cmp
push
lcall
imul
fistps
xor
shlb
jecxz
pop
mov
fidivl
push
hlt
cli
loope
pop
jle
loop
or
hlt
mov
in
popf
jl
xchg
push
sbb
sub
lods
lret
shll
fnstenv
data16
or
test
and
nop
jnp
push
jae
mov
fadd
out
inc
mov
xchg
sub
stos
stos
outsb
pusha
xchg
push
es
mov
loope
sahf
jno
pop
push
sub
lret
sub
xchg
out
int
ja
aam
pop
enter
stos
add
jae
xchg
jb
or
cmp
dec
mov
xchg
ljmp
push
data16
xchg
inc
icebp
mov
daa
sbb
xor
pusha
out
or
mov
mov
rcrb
movsb
jns
cmpl
leave
sti
xchg
mov
in
xchg
loope
mov
add
in
jecxz
inc
jne
mov
mov
ret
adc
jnp
jo
shrb
lea
mov
addr16
add
xchg
jg
sbb
sub
inc
dec
cmc
and
inc
imul
js
push
inc
jg
cmp
ret
sub
xor
and
ret
cltd
stos
jno
push
cmpb
pop
dec
and
cwtl
pusha
daa
mov
sub
les
jbe
jno
jo
push
jle
in
sub
aam
out
pop
adc
mov
std
lods
scas
cmp
or
loop
mov
das
lret
mov
mov
out
aaa
hlt
jg
cmp
lret
stos
js
aaa
stc
ret
stc
jge
xchg
lahf
sbb
push
inc
mov
lahf
fcoml
inc
lcall
mov
pop
and
add
cwtl
in
dec
ja
mov
cmp
incb
mov
mov
cwtl
mov
pop
pop
jl
jecxz
lods
mov
out
popa
sub
jecxz
aas
xchg
dec
decb
pop
addr16
and
shl
sbb
rclb
loope
and
out
dec
ljmp
inc
add
push
push
jno
sahf
push
sahf
push
dec
imul
mov
adc
das
shrb
stos
and
push
sbb
push
pextrw
or
repz
aaa
lret
bound
inc
adc
subb
in
adc
arpl
ficoml
mov
or
out
lods
in
rolb
daa
negl
stos
mov
and
xchg
ja
sub
js
out
dec
lock
punpcklbw
out
and
rcl
pop
testb
push
jno
push
dec
xchg
pop
xor
push
and
mov
xchg
mov
xor
dec
data16
fwait
cmp
imul
xchg
mov
xor
es
addl
add
pop
daa
cmpsl
sub
aam
fcmovu
leave
inc
jns
cwtl
jge
xchg
lock
mov
out
cwtl
mov
lcall
incb
mov
cmp
inc
inc
pop
mov
mov
rcr
mov
xor
inc
cli
push
sub
xor
dec
mov
inc
leave
cmpsb
mov
ljmp
mov
mov
jo
push
addr16
shl
gs
pop
sub
test
cmc
and
scas
mov
fstl
or
inc
mov
test
mov
add
sub
or
sti
mov
aad
int
lock
mov
xor
or
fcompl
scas
decb
mov
es
xchg
cwtl
scas
and
in
lret
in
ds
jg
pusha
inc
js
mov
dec
sub
test
leave
pop
daa
ret
mov
xchg
mov
and
push
rcr
xor
in
and
mov
jns
fildl
push
jb
dec
or
mov
mov
cmp
out
aaa
mov
adc
mov
call
mov
jae
je
sub
or
xchg
adc
sbb
jmp
mov
xor
pop
cmpsl
lret
int3
xchg
out
lret
inc
std
popa
out
pushf
dec
orl
dec
cs
ss
mov
js
dec
xchg
fs
pushf
push
add
mov
xchg
xchg
iret
fadds
pop
sahf
andb
int3
into
shrb
std
fadds
arpl
sbb
loopne
loopne
loopne
mov
cld
mov
ret
jae
mov
rcl
cmp
dec
into
sbb
dec
out
dec
lcall
das
loopne
mov
pusha
scas
stos
aaa
mov
and
daa
sub
sub
sub
xchg
lods
fstpl
mov
das
stos
mov
mov
cmp
test
or
lds
ss
cmp
jp
fisttps
iret
dec
mov
or
and
adc
lods
mov
mov
inc
cld
jo
dec
jo
sbb
test
ljmp
push
xchg
pop
mov
int3
pop
pop
fmul
push
xchg
add
das
sub
mov
insl
sbb
mov
cmp
xchg
jae
pcmpgtb
fnsave
addr16
sbb
ja
cmp
xchg
jnp
push
adc
cltd
movsb
jne
jnp
scas
dec
pop
cmp
sarl
xor
decb
add
xchg
cmpsb
mov
in
push
repnz
jmp
scas
jo
movl
jo
jge
cmp
fs
pop
les
js
inc
dec
sbb
jno
mov
pop
pop
sbb
mov
call
mov
adc
aas
arpl
lea
xchg
jmp
or
insl
insl
or
test
push
shrb
push
in
in
dec
pop
imul
push
jp
aam
mov
imul
cltd
js
mov
xchg
dec
or
push
xor
inc
les
lcall
adc
in
test
cld
jnp
cmp
push
sarl
aam
cmpsl
mov
jg
adc
xchg
lahf
cmp
mov
out
shll
add
mov
sarl
add
sbb
fldt
ss
scas
add
scas
call
icebp
xchg
xchg
adc
xor
cmpsb
xlat
sbb
andb
xor
push
popa
push
movsl
xor
bound
jmp
inc
cmp
in
insb
fsts
pushf
mov
sub
aad
scas
ret
sub
fidivs
fisubrl
and
mov
cld
and
daa
dec
sbb
mov
push
dec
lock
xchg
aam
mov
mov
call
xchg
inc
mov
mov
push
xchg
dec
das
mov
jb
jp
and
scas
mov
add
aad
xchg
mov
pop
stc
loopne
mov
mov
inc
inc
mov
sbb
ljmp
xchg
fs
repz
out
jle
nop
arpl
jp
mov
dec
sarl
jle
rolb
adc
lcall
sbbb
ja
ret
ljmp
cwtl
test
ret
pop
push
cwtl
sbb
xchg
sti
dec
cltd
pop
or
imul
add
mov
jo
out
mov
ret
fcomip
pop
insb
xchg
sbb
cwtl
pushf
imul
jmp
mov
adc
xchg
outsb
out
or
sti
daa
or
add
cmp
test
mov
dec
mov
jge
fstl
rcll
push
pop
add
cltd
es
or
adc
pop
repnz
icebp
aaa
scas
gs
xchg
rcrb
cmpsb
call
call
fiaddl
repz
dec
or
mov
mov
imul
pop
xorl
jmp
xchg
shl
add
pop
shrb
xor
add
hlt
mov
out
add
je
popf
test
mov
dec
sub
or
lods
imul
sub
pushf
mov
jecxz
popf
mov
loopne
in
xchg
cmp
xor
shrl
mull
jbe
cmp
jns
clc
lret
iret
sbb
xchg
fnstcw
mov
gs
or
sub
stos
cmpsb
push
call
loop
clc
lds
adc
inc
lods
pop
scas
and
fcmovne
clc
mov
addr16
jge
mov
mov
xchg
push
and
cmp
in
sub
sti
mov
xchg
bound
xchg
insl
xchg
cli
jmp
pusha
mov
repnz
fists
aam
lds
mov
bnd
cltd
pop
add
dec
and
push
out
in
sahf
sbb
enter
dec
les
pusha
inc
das
sbb
fs
stc
mov
lea
sub
filds
sbb
movsl
cmp
push
les
inc
jle
push
leave
inc
push
adc
roll
xchg
push
scas
mov
push
js
push
and
push
cmp
fdivrs
popf
js
add
cwtl
mov
push
mov
aas
pop
cmpsl
lods
adcl
mov
lea
push
jl
loopne
std
xor
loop
mov
lods
notrack
sbb
imul
adc
dec
fwait
hlt
outsb
xor
cmp
test
jo
cltd
fs
insl
inc
cli
incb
xchg
dec
stc
xor
int3
loope
test
mov
inc
xchg
pusha
sbb
cmpsb
push
andl
in
sub
rorb
push
push
dec
mov
lahf
and
adc
aad
js
jge
sbb
add
mov
cmpsl
enter
push
inc
notb
dec
xchg
pop
mov
mov
push
das
cmp
insb
sub
mov
adc
sbb
cmp
stos
adcl
test
add
adc
out
push
stos
shll
push
jp
jo
clc
fstps
push
mov
sub
inc
add
out
lcall
mov
cld
xor
pop
inc
fdivrl
lahf
dec
push
aaa
test
xor
mov
pop
jg
lcall
sbb
mov
in
adc
cld
jl
je
and
cmp
lcall
mov
test
xchg
or
rolb
adc
push
fimuls
xchg
paddusb
dec
add
cmp
jmp
ret
scas
cs
out
movsb
cld
inc
fadds
cmpsb
dec
sbb
mov
xchg
add
cmp
add
cmp
adc
shrb
popf
fsts
push
loope
cmc
lea
mov
add
fmulp
push
mov
cmpsb
xor
sub
inc
rol
mov
jno
inc
mov
sbb
in
mov
daa
inc
adc
out
popa
ds
adc
in
jbe
mov
std
xor
add
and
outsl
pop
and
dec
out
dec
sub
sbb
push
les
push
ljmp
in
cmp
fcoms
test
lcall
std
mov
push
sbb
aad
xchg
xchg
sbb
xlat
test
sub
into
repnz
push
shl
test
call
fistps
mov
dec
xchg
ja
lods
ret
cmp
stos
add
mov
fdivrl
rorl
loope
cmp
lock
inc
cmp
pop
movsb
sub
cmp
lcall
insl
cwtl
stos
pushf
dec
ss
push
add
jp
imul
pop
and
xor
xor
add
ret
daa
pop
mov
xor
mov
lods
xlat
popa
and
push
and
sarb
push
mov
int
sbb
mov
xchg
addl
xlat
mov
adc
push
flds
add
out
lahf
sub
push
out
test
sahf
sbb
inc
xchg
sahf
das
stos
inc
or
std
or
mov
jmp
les
jp
pop
popa
fidivrs
sub
sbbb
stc
mov
enter
ja
cs
jmp
and
xor
imul
add
push
pop
xchg
sub
xchg
andb
out
sub
push
xor
cli
or
fsubl
insb
pop
jmp
les
loope
cmp
pop
jge
adc
nop
mov
fnstcw
xchg
pop
test
ja
or
stos
mov
fcmovu
mov
or
ds
mov
cmc
loope
sub
in
inc
pop
lret
scas
test
cmp
in
push
xor
jnp
push
add
jnp
stc
out
and
or
sar
jne
ss
add
sti
rclb
movsl
es
jp
mov
dec
and
in
inc
mov
lock
loop
shll
mov
add
mov
aaa
ret
andb
mov
push
add
jecxz
dec
pop
jp
cmp
in
pop
lods
jae
inc
int3
sbb
xor
inc
cmp
js
popa
test
out
rorb
stc
jo
enter
pop
mov
jae
mov
xchg
xchg
jmp
dec
mov
jb
dec
es
xor
test
lods
pushf
sbb
fsubs
int
add
imul
lock
shl
repz
imul
ss
cld
xchg
insb
sub
outsb
xor
jno
push
pushl
aad
hlt
lods
icebp
or
dec
add
mov
mov
jge
int3
es
pop
cmp
insl
lahf
jo
push
cmp
and
ja
arpl
movsl
mov
jbe
rcr
push
clc
adc
pop
inc
jb
add
pop
jae
add
je
lcall
cltd
lahf
pop
sti
cmpb
jb
sbb
cmpb
add
gs
mov
fidivrl
lea
repz
mov
movsl
out
sti
push
cltd
inc
loopnew
ret
mov
icebp
lcall
mul
mov
xchg
out
imul
mov
fistl
sbb
shlb
fmul
ss
imul
in
jne
dec
push
dec
gs
dec
cs
scas
fldcw
jp
add
scas
outsb
mov
push
add
sbb
insb
imul
enter
lea
daa
jo
inc
sbb
or
sub
push
stos
aas
add
testb
fwait
adc
cmp
into
and
inc
mov
xchg
sahf
pop
data16
fcmovb
adcl
mov
movsb
lea
jbe
repz
inc
adc
andb
or
push
fidivrs
in
sub
icebp
pop
shlb
inc
test
adc
and
test
pop
sbb
repnz
mov
imul
push
inc
es
fcomp
inc
and
jmp
leave
outsb
jle
loop
inc
jno
sub
fstps
scas
sahf
xchg
adc
fstpl
cmp
add
stos
xchg
adc
cmp
lock
inc
insb
stos
jmp
xchg
insb
dec
sbb
mov
mov
and
lret
pop
insb
push
cmpsl
mov
mov
add
fldcw
sti
in
in
xchg
loop
cmpsb
mov
or
xor
adc
cld
inc
add
addr16
fisubl
mov
sub
mov
inc
test
adc
int3
scas
cwtl
xor
out
pop
adc
out
and
imull
pop
mov
bound
add
mov
rolb
jmp
icebp
in
jge
in
sbb
jmp
mov
sub
push
mov
push
fdivs
jbe
fcoml
xchg
scas
push
dec
xor
movsb
lds
mov
lret
mov
push
ds
xchg
add
leave
cmpsb
popa
inc
iret
cltd
dec
out
mov
xlat
sbb
push
out
out
insb
add
cmp
pusha
xorl
out
cmp
std
call
mov
andb
xchg
fcomi
test
clc
xchg
subl
shr
repnz
mov
rorl
bnd
mov
cmp
adc
into
aam
inc
mov
jmp
cmp
daa
push
mov
push
out
gs
out
cltd
xchg
xchg
mov
sub
or
aam
imul
jb
fwait
jo
ret
mov
xor
dec
mov
arpl
sub
or
mov
mov
pop
or
jb
repz
pop
lret
popf
lret
xchg
dec
in
cs
mov
icebp
push
or
nop
or
aad
shll
js
jno
les
sbb
loopne
data16
sbb
add
andb
adc
push
lahf
jb
aam
push
adc
cld
stos
fdivrp
scas
mov
mov
mov
lods
shlb
lods
xchg
outsb
lcall
dec
dec
and
je
mov
sbb
faddl
xor
pop
xor
mov
pop
inc
sahf
cltd
jno
fisubrl
sub
dec
pop
int
test
xlat
rorb
mov
jns
clc
jno
in
lock
push
lock
insl
daa
js
or
roll
ffreep
and
mov
xchg
mov
sub
or
dec
xchg
mov
test
push
mov
mov
mov
fstl
and
push
ret
inc
mov
xchg
insl
loope
idivl
cmpsb
sar
sbb
sub
pop
sbb
jae
andb
enter
mov
pop
sahf
iret
hlt
cmc
mov
sarl
shlb
es
mov
pop
cmp
test
nop
and
cmp
imulb
shr
test
push
int
daa
adc
xor
jne
mov
mov
fisttpl
xchg
pop
sub
lods
call
test
mov
push
adcb
mov
scas
stos
loope
inc
ja
out
pusha
jecxz
int3
inc
aad
mov
subb
sub
cmp
stos
push
sbb
add
lea
call
cmp
cs
pop
mov
orl
xchg
sub
pusha
imul
jl
fwait
std
ficompl
push
pop
push
adc
push
inc
mov
cmp
mov
cltd
test
mov
lcall
test
inc
pop
cmpsb
aam
das
or
jmp
je
pop
fucomip
jle
fidivs
in
jns
divl
push
and
test
mov
inc
stos
xor
pop
cmp
arpl
das
lock
ds
push
int
add
adc
jg
xchg
dec
out
jae
inc
xor
push
clc
inc
mov
popa
lret
stc
lods
dec
repz
sub
push
shll
mov
xorl
sub
jl
testl
in
adc
cmp
jmp
ljmp
ret
das
pushf
jmp
or
or
pop
dec
push
mov
call
mov
cmp
jnp
pop
adc
mov
faddl
add
nop
jbe
pop
cmpsb
ja
mov
sub
or
jle
addr16
jae
js
not
jge
clc
les
aaa
adc
fistpll
cmp
push
negb
adc
cli
pop
fldcw
lret
dec
nop
mov
jecxz
jmp
push
popf
dec
add
push
lcall
mov
pop
sbb
pop
inc
and
sbb
insb
movsb
push
jg
push
lahf
call
ret
jle
fistpll
xlat
push
push
jge
insb
loopne
adc
sarb
jo
add
mov
adc
or
push
movsb
imul
and
out
jo
aaa
push
xor
cmpl
xor
dec
inc
pop
mov
clc
cmp
push
loopne
es
sub
cmp
cmpsb
cld
cli
mov
xor
jg
push
cmp
sub
test
std
lods
out
add
sbb
add
add
or
add
mov
jmp
xchg
lahf
imul
pop
call
divb
sbb
insb
mov
cmp
dec
jb
sti
in
jle
fisttpl
adc
aaa
mov
mov
push
add
sub
rol
mov
shrl
pop
sbbb
cmc
lea
push
jb
insb
cmp
and
fisttps
fbld
popf
dec
jne
pop
fidivs
mov
xchg
lcall
dec
das
jbe
jnp
outsl
cmp
inc
aam
xchg
ret
xchg
paddusw
scas
movsb
insb
adc
push
add
pop
xor
nop
test
and
mov
sahf
daa
das
mov
and
pop
orb
xor
lock
xor
jae
jae
shl
mov
fs
add
inc
xor
xor
xlat
cli
fisubrs
cmc
ss
mov
out
push
nop
mov
xchg
call
xor
call
jbe
push
in
xchg
inc
pop
in
dec
sub
scas
jo
add
mov
aam
jg
dec
dec
cmc
push
pop
pusha
mov
pop
sub
in
adc
iret
test
xchg
add
ss
dec
div
xchg
jl
push
hlt
adc
lock
xor
loop
mov
out
out
sti
mov
repz
out
dec
mov
hlt
je
std
mov
out
pop
aaa
out
test
push
int
sub
mul
push
out
sbb
xor
lahf
mov
in
jo
mov
inc
cmpsb
loopne
jmp
push
cltd
mov
into
or
jns
xchg
xchg
xchg
cltd
setne
insb
jmp
push
aas
or
rclb
inc
in
xor
jle
jge
js
xor
jbe
mov
add
popf
push
mov
lahf
clc
jne
data16
mov
jo
mov
and
xchg
das
loopne
mov
cli
xchg
dec
fcompl
in
ja
outsl
mov
test
fs
movsb
mov
pop
dec
and
out
movsl
mov
xchg
mov
push
xor
cmpsb
pushf
das
xor
mov
lahf
aad
sahf
in
imul
les
ja
stos
add
scas
int
mov
and
movb
aaa
and
ret
fpatan
cmc
cmp
rcll
daa
das
insb
cmc
pop
cmp
movsb
rol
pop
aam
mov
in
adc
cmp
cmpb
pop
jnp
push
xor
mov
sub
test
cli
add
mov
loopne
sarl
xlat
adc
stc
inc
ja
inc
mov
mov
ficomps
and
dec
repz
lahf
loope
jnp
xor
mov
nop
mov
jle
push
cmpsl
xchg
lock
scas
xchg
mov
aad
jmp
aad
adc
mov
mov
popf
ss
add
mov
add
std
inc
ret
in
xor
das
adc
mov
pop
cltd
sub
scas
cmc
push
jo
mov
sahf
out
cld
mov
jmp
hlt
negb
inc
lock
or
stos
pop
inc
add
ds
aaa
xlat
ds
xchg
gs
push
mov
mov
and
in
pop
aaa
sbb
dec
cld
int
icebp
fidivrl
and
mov
leave
pop
inc
insb
inc
inc
in
sub
push
cmpsl
mov
adc
test
inc
jo
clc
cmpsb
out
mov
sub
mov
repz
xor
insb
lcall
add
adc
jnp
sarb
les
fwait
mov
imull
lods
and
rclb
cmp
fwait
sbb
xchg
mov
push
mov
std
xchg
in
xor
dec
jge
cmp
cmp
pop
shrb
lcall
and
lcall
loop
lea
sub
jle
mov
cld
fwait
dec
sub
int3
adc
outsl
adc
and
jl
data16
xchg
cld
hlt
mov
pop
inc
insl
jecxz
push
sbb
fwait
cmp
outsb
popf
mov
cmovs
add
push
aam
test
xor
push
inc
loopne
jle
push
jnp
sub
xor
sub
mov
mov
push
cmp
jg
loope
out
push
hlt
jmp
shr
fiadds
aad
insl
inc
inc
repz
add
out
dec
repnz
inc
and
ljmp
jle
pushf
or
lahf
aam
xchg
js
push
xor
inc
mov
dec
adc
push
call
add
out
xchg
shrb
out
or
and
xor
cmpsl
scas
lods
pusha
push
sbb
jae
mov
sub
adc
repnz
mov
add
inc
xor
lock
das
jmp
mov
adc
xor
js
inc
les
rclb
and
iret
hlt
enter
mov
rolb
fs
fadd
flds
addb
popf
lods
cs
cli
cmp
xchg
push
xor
and
ja
mov
mov
and
and
rcll
or
loop
popf
inc
sbb
nop
adc
hlt
and
jl
jl
aam
pop
pop
sbb
mov
sbb
xor
add
and
xchg
test
lret
xchg
xchg
subl
fs
mov
jno
cld
sub
xchg
pop
lcall
mov
cltd
test
xor
ljmp
and
xchg
notb
push
mov
sub
sti
and
ss
cld
or
xchg
cltd
lret
std
mov
fwait
jl
notb
loope
ret
sub
arpl
pop
add
dec
daa
subl
xor
pop
popa
cmp
sbb
sahf
insl
and
shll
push
movb
hlt
subb
add
loopne
dec
arpl
sti
push
in
adc
icebp
test
leave
jp
shl
push
xchg
gs
jb
iret
int3
bound
cmp
push
sub
adc
addb
popf
cmp
or
pop
mov
lcall
fimuls
loopne
enter
jbe
pop
aam
scas
arpl
mov
sbb
push
sarl
stc
dec
imul
pop
pop
jnp
or
lea
pop
ja
inc
gs
rolb
push
cli
and
inc
rclb
dec
and
mov
xchg
jb
out
lds
and
cmp
mov
add
pop
ret
mov
loopne
shll
dec
or
cltd
rol
sub
or
outsb
push
sbb
fwait
lret
pop
push
fiaddl
and
aas
sub
mov
es
gs
push
push
call
out
rcll
mov
cmp
cmc
call
cs
aaa
cmpsl
lods
or
and
mov
sub
mov
stos
je
cwtl
outsl
jle
or
in
jo
mov
out
jle
leave
addl
sar
cs
pop
fucom
sbb
xchg
out
negl
adc
xlat
dec
mov
xchg
and
aaa
ljmp
lahf
xlat
pop
dec
lahf
mov
sub
cmpsb
sub
or
cs
daa
lods
jb
xchg
mov
jecxz
gs
jo
loop
pop
and
inc
imul
cld
test
xlat
xor
das
leave
inc
or
add
das
jp
int3
inc
insl
sub
xor
rcrl
mov
sahf
push
enter
cmp
jmp
xchg
sub
call
jbe
mov
aad
mov
popa
sub
into
out
push
int3
lods
sahf
xor
sbb
cmp
enter
cmp
int3
pop
repnz
dec
cmp
sub
scas
mov
addr16
ss
lahf
push
inc
xor
xor
out
or
xor
adc
xchg
sbb
inc
mull
sbb
cltd
xchg
fcoms
cmp
add
in
aaa
inc
bound
lret
add
push
lret
sahf
test
fmuls
pop
movsl
inc
adc
aam
arpl
out
lods
jle
outsb
mov
jns
popa
lods
pop
pop
mov
sbb
les
adc
pop
cld
adc
scas
cs
mov
leave
cmpl
pop
and
sti
lods
xor
pusha
call
decb
repnz
adc
call
cs
lahf
in
cmpb
lcall
out
les
pop
dec
dec
xchg
inc
icebp
inc
mov
out
adc
cmp
adc
adc
jns
scas
adc
adc
sub
lea
pop
jb
pop
sti
pushf
or
out
in
adcl
xchg
testl
mov
stos
fbld
imul
movsb
gs
add
and
in
jp
mov
pop
outsl
les
xor
imul
repz
fcoml
pop
dec
mov
push
rclb
dec
add
popa
pop
cmpsb
lret
dec
negb
js
addr16
je
out
inc
bnd
ds
ss
inc
cmpsl
outsl
insb
sbb
add
sub
iret
dec
cltd
mov
xor
dec
sub
ret
lret
orb
js
push
fsubs
sar
in
jl
enter
ficoml
loope
lea
stc
cltd
lahf
sbb
cwtl
mov
test
fwait
icebp
mov
pop
ds
insl
jle
mov
insl
push
inc
add
xchg
out
xchg
lret
repz
shrb
aaa
or
inc
ret
call
lods
in
inc
and
scas
sbb
sbb
pushf
nop
dec
fcompl
push
wbinvd
push
xor
fisttpl
fldenv
xor
ljmp
xor
lret
dec
or
pusha
std
inc
shl
repnz
fwait
sbb
jg,pn
lret
add
lret
adcb
addl
mov
pop
sub
mov
fmul
pop
aad
fwait
sub
shll
mov
xlat
into
jbe
mov
and
lret
sub
add
mov
mov
notb
dec
inc
dec
sti
pop
imul
data16
jg
xor
jecxz
das
push
insl
or
nop
adc
sub
mov
stc
outsl
jbe
clc
xchg
sub
mov
fistl
mov
into
data16
lcall
mov
stos
xorb
js
adcb
js
add
lea
icebp
iret
jecxz
xchg
cmp
or
dec
movsb
popa
mov
ja
add
sbb
mov
mov
je
pop
insb
jmp
sub
sahf
int3
adc
sahf
idivl
jns
xor
lcall
jne
lret
test
scas
rcrl
in
cmp
or
sub
out
push
add
pop
insb
out
call
xchg
jno
rorb
pop
dec
cmp
fnstenv
sub
loopne
out
or
pop
insb
cmp
in
dec
pop
mov
mov
xchg
gs
sbb
mull
dec
imul
outsl
xor
mov
inc
rol
mov
mov
xor
lods
or
lods
jg
sub
pop
mov
push
and
add
stos
dec
jno
pop
add
insb
xor
xchg
cmpsl
xor
and
loope
dec
lcall
inc
jecxz,pt
pop
sbb
jb
call
or
xor
aad
sub
mov
rclb
rcr
jno
xchg
xchg
fmull
xor
ret
ja
mov
inc
and
jmp
xchg
mov
inc
adc
ds
test
inc
ret
or
adc
jl
scas
cmp
push
push
pop
cmpb
sub
jae
cltd
cli
lea
stc
dec
inc
shll
stc
xor
je
and
xchg
push
mov
out
ds
scas
inc
mov
je
sbb
fdivs
xor
dec
int
imul
test
rcrl
xlat
push
stc
cmp
jle
sbb
sub
and
push
das
adc
dec
pop
stc
fwait
cmpsl
ds
cwtl
push
pushf
push
std
lods
outsl
icebp
xchg
out
xchg
mul
mov
inc
pop
cs
inc
mov
xchg
repz
scas
add
int3
aaa
push
std
mov
mov
lahf
sub
push
out
sbb
and
pop
jecxz
int
loope
rcrl
rcl
jb
dec
mov
std
jmp
iret
aad
insl
dec
in
mov
adc
add
call
imul
pop
sahf
bound
push
cmp
xchg
mov
in
nop
lea
out
popa
sub
shlb
scas
clc
lret
insb
cld
out
xlat
pop
int3
aaa
pop
and
inc
imull
cwtl
enter
sub
cld
outsl
mov
das
sub
fs
lods
cmp
pusha
rsm
inc
mov
cltd
stos
push
pop
pop
adc
es
jmp
pop
je
and
xor
xchg
outsl
lods
add
adc
xchg
push
dec
inc
movsl
xchg
or
mov
jb
or
bound
pop
push
cmpsl
hlt
fnstcw
imul
adc
cmc
mov
cmp
rcll
insl
call
adc
cmpsb
sarl
mov
inc
push
inc
loope,pn
cmp
icebp
lods
clc
xchg
xchg
sbb
ljmp
dec
push
sbb
pop
pop
cmp
pop
sar
mov
xorb
stos
lods
je
ja
lods
sarb
and
fwait
int
je
shlb
mov
das
mov
and
lcall
pop
pop
cs
pop
xchg
fstps
scas
and
xchg
xor
mov
sub
lret
sahf
inc
mov
adc
rorl
jge
xor
das
xlat
xchg
les
pop
jne
sbb
xchg
das
or
jns
pop
mov
mov
push
xchg
dec
in
xor
or
pop
mov
inc
movsl
movsb
inc
sub
inc
or
jnp
xor
lods
movsl
movsb
sar
pop
out
lods
or
cmp
les
xlat
jnp
mov
sti
inc
leave
inc
ret
jne
sbb
outsl
mov
fcmovbe
cmpsl
stos
jmp
shlb
adc
xchg
in
call
or
mov
or
dec
int
fistps
scas
idivl
jge
lods
repz
xor
hlt
sarb
lds
and
hlt
or
test
xchg
pop
sti
iret
lds
inc
adc
addb
xchg
dec
scas
mov
fistpll
int
fbstp
sbbl
or
out
adc
add
mulb
pop
ja
daa
fstpt
leave
add
or
ret
mov
out
cmpsb
subl
pop
jge
inc
mov
lea
mov
repz
xchg
pop
push
stos
jb
inc
insb
incl
sub
fnsave
adcl
cltd
xor
lock
mov
shll
xlat
ss
sub
js
mov
ffree
std
mov
mov
leave
push
jmp
push
xor
cmp
xor
out
sub
fs
addl
xchg
sbb
lock
sbb
paddw
sbb
fcomi
fistpl
mov
enter
les
add
push
and
push
addr16
mov
cld
mov
sbb
mov
in
lahf
push
mov
subl
mov
jle
les
cmp
movaps
std
or
enter
in
ljmp
sub
mov
icebp
ficomps
nop
test
ja
cs
add
jnp
pusha
cmp
sub
inc
fnstsw
mov
out
mov
adc
fdivrs
xchg
sbb
frstor
fs
push
sub
das
pop
pop
fdivrs
je
inc
jmp
test
bound
iret
icebp
stc
out
mov
lock
insl
push
pop
das
test
data16
push
push
adc
data16
pop
sub
pop
cld
push
jmp
sub
sbb
das
mov
adc
dec
adcl
and
sub
les
adc
push
sahf
or
and
jo
dec
leave
loope
jbe
pand
jbe
pushf
mov
push
arpl
add
jbe
das
fsubp
mov
mov
dec
mov
cmovge
xor
into
fistps
jl
sub
mov
repnz
jle
cmp
enter
mov
test
or
mov
sahf
ror
fwait
sbb
xchg
adc
jmp
pop
sbb
adc
stos
repz
js
add
push
cmp
xor
arpl
lea
test
push
add
or
je
or
insl
adc
and
push
sub
push
add
push
cltd
mov
jbe
mov
pusha
add
gs
insl
in
icebp
mov
mov
lcall
sbb
inc
fcomps
bound
pusha
xchg
vshufps
xchg
in
iret
sti
dec
push
test
mov
in
imul
cmpsl
and
mov
outsl
sub
jp
mov
adc
xchg
adc
enter
rorl
stos
imul
pushf
xorb
out
or
sbb
je
repnz
cwtl
xchg
adc
mov
cmp
in
jb
adc
in
iret
adc
add
test
mov
or
mov
movsl
push
adc
jnp
lds
or
sbb
jbe
stc
jl
sbb
xlat
adc
lcallw
or
scas
rorb
jle
lods
push
pop
mov
and
adc
jns
pushf
cmpsb
and
push
int
enter
pusha
jge
and
lods
loop
or
sub
and
hlt
or
mov
aam
sbb
rorl
dec
leave
bts
mov
inc
inc
mov
loopne
and
jae
lds
iret
jp
negb
fdivl
sti
push
stc
gs
inc
mov
pop
rorb
mov
mov
xchg
out
mov
sbb
push
mov
movsb
push
addb
in
pop
inc
insl
imul
stc
test
sahf
es
stc
leave
sbb
and
fcomps
sub
lea
xchg
es
fmuls
into
jp
fcmovnb
push
sbbb
fisubs
iret
dec
push
shlb
add
bound
imul
jo
aad
in
inc
pop
enter
add
fidivs
cmp
or
mov
stos
or
xor
out
mov
push
dec
popa
xor
sub
mov
or
lahf
and
adc
int
ret
inc
sub
popa
clc
pop
lock
sbb
jge
ret
mov
in
inc
loopne
add
add
cmp
fwait
pop
adc
shll
jmp
jns
int3
outsl
popf
insl
inc
in
insl
sbb
jp
sbb
pop
lahf
pushf
int
xchg
pop
cltd
xor
mov
cli
int
xchg
jmp
out
or
mov
mov
pusha
xchg
jmp
cmpsb
ljmp
clc
scas
xchg
outsb
loopne
mov
adc
sbb
ja
cltd
mov
jnp
sub
insb
cmpsb
test
adc
mov
dec
inc
rclb
mov
or
sbb
in
push
xchg
push
popf
fsubs
pop
ret
outsl
enter
pavgb
push
pop
add
mov
mov
in
pop
add
pop
jo
or
jg
adc
testb
out
lret
jbe
test
inc
inc
cmpsb
mov
inc
pop
jmp
dec
inc
cmpsb
or
adc
test
sbb
lds
aad
cmc
repnz
and
mov
xchg
mov
outsl
sub
push
bound
mov
stos
repz
xor
decb
and
add
fnop
lods
push
addb
nop
push
jae
mov
push
mov
mov
ret
sub
sub
stc
xchg
nop
dec
ficomps
adc
xchg
sub
outsl
jbe
cmpsb
ds
jns
jb
sub
insl
lds
sub
cli
cmpsb
jl
stc
lods
fildll
mov
std
push
sar
lcall
jb
push
fnstcw
movsl
cmp
test
push
stc
push
pop
dec
lds
add
xorl
sub
xchg
cli
js
aam
xchg
lret
or
xchg
fdivs
fdivs
icebp
dec
pop
sub
or
lahf
cmp
jne
sbb
inc
sub
test
mov
call
inc
dec
jp
hlt
int3
roll
imul
cmpsb
call
pop
or
iret
cmovg
mov
lods
popa
mov
mov
aas
and
aaa
test
js
pop
inc
jl
xlat
es
inc
mov
xlat
pop
sub
sbb
imul
and
push
push
movsl
sub
out
sub
xchg
out
roll
rcrl
fwait
sbb
fs
inc
sub
cmp
xlat
adc
mov
and
imul
sub
or
stos
jns
in
fidivl
jo
loop
xchg
inc
cmp
cmp
and
mov
sbb
adc
mov
mov
cmp
sahf
ss
test
push
ds
xchg
clc
loop
or
adc
bound
cwtl
add
push
lds
jae
push
cwtl
pop
xchg
dec
shlb
dec
stc
mov
and
std
fldl
jo
sti
adc
fnstcw
sub
dec
jnp
in
jno
fstl
xor
xchg
inc
test
xchg
cmp
mov
xchg
out
and
or
xor
les
and
outsb
shrb
imul
push
movsb
insb
lods
pusha
jno
adc
cs
adc
stos
dec
jmp
inc
lea
add
fldt
dec
sbb
xchg
mov
or
mov
add
bound
icebp
mov
movsb
mov
test
sub
mov
xchg
cld
mov
outsl
adc
popa
cmp
jecxz
and
mov
jns
mov
jno
sbb
jg
xor
mov
fxch
shrb
repz
jmp
fstpt
into
lds
or
mov
add
and
sub
hlt
jmp
enter
scas
int
cmp
cmp
cmp
mov
popf
mov
imul
adc
and
lods
sti
xchg
and
addr16
out
popa
adc
and
pop
and
inc
cmpsb
push
adc
jmp
fwait
mov
leave
xor
jle
sub
sbb
cmpsl
mov
mov
or
stos
or
std
outsl
ret
dec
inc
out
mov
rorb
add
insb
ja
jns
mov
or
cmp
cwtl
fwait
mov
popf
mov
sbb
xor
sub
or
pop
pop
mov
repz
and
push
adc
mov
popf
mov
fdivrs
les
xor
fstpl
aas
xchg
push
xchg
test
jmp
out
pop
push
sbb
push
add
mov
adc
in
shlb
dec
arpl
inc
pop
js
jnp
sbb
aas
pop
inc
jge
in
pop
ficoml
out
bound
adc
jbe
in
shll
mov
fldenv
fnsave
sarb
aad
cmp
inc
nop
mov
jg
lods
pop
inc
ja
jne
inc
sbb
das
dec
out
ror
and
mov
fmull
sub
jns
xchg
daa
or
roll
and
cmc
xchg
jg
push
roll
fidivrl
ljmp
fstpt
sbbb
inc
push
jnp
sub
imul
adc
sub
xchg
mov
or
mov
rcr
cmp
in
mov
iret
and
mov
dec
jecxz
hlt
ss
pop
int3
cmp
or
test
mov
subl
ljmp
mov
or
call
mov
lcall
mov
pop
aad
add
call
push
adc
shlb
push
jg
aaa
fimuls
movsb
xor
jl
out
sub
leave
idivb
stos
xchg
inc
pop
jb
jo
xchg
add
pop
pushf
arpl
loopw
icebp
repnz
in
loope
mov
push
scas
scas
pop
pop
pop
cmpsb
and
mov
sbb
push
jle
in
movsb
jne
mov
in
mov
inc
pop
or
ja
hlt
mov
cmp
stos
and
in
add
into
mov
subl
push
leave
dec
xchg
ds
jbe
sub
sbb
pop
lahf
dec
popa
outsl
stc
inc
aad
jg
pop
or
mov
pop
dec
jbe
orb
mov
pop
and
stc
daa
xor
rorl
lahf
div
jl
cltd
and
push
ret
adc
inc
lret
ret
adc
cld
pop
xchg
mov
cmp
sub
pop
sub
cmc
mov
mov
bound
fstpl
add
inc
push
or
fstpl
fcompl
cmpsb
out
lods
dec
sbb
mov
jg
push
mov
push
nop
outsb
xchg
lea
pop
and
fists
inc
pop
shl
push
cmp
lcall
and
cmp
and
out
xlat
cltd
sti
mov
cmc
push
test
pop
pop
rcll
ret
dec
cmp
imul
popf
hlt
mov
dec
int
arpl
push
pop
in
ja
adc
inc
and
mov
out
and
cmpsb
int3
jns
jnp
loope
adc
mov
jbe
pushl
pop
lods
pop
data16
add
cmp
mov
nop
jecxz
inc
adc
sbb
int3
mov
out
je
jne
mov
aaa
and
jb
mov
push
xor
pop
je
add
out
dec
stc
sbb
sbb
push
xlat
pusha
push
push
in
int3
or
mov
mov
or
js
and
or
mov
pop
mov
repnz
dec
push
fnstsw
dec
mov
cmp
loope
mov
jb
sbb
sbbl
stos
push
or
es
cmp
in
stos
inc
mov
lock
loop
das
ss
ja
ja
xlat
ret
into
data16
aaa
gs
into
lock
mov
outsb
xchg
mov
aam
xlat
mov
lret
mov
addb
aaa
and
adc
fwait
out
push
cmp
jo
jae
leave
or
aam
jp
cmp
nop
adc
dec
inc
sbb
pop
aaa
outsb
mov
bnd
stc
push
xchg
nop
sub
xchg
add
adc
dec
mov
add
mov
jo
mov
cmp
jae
mov
out
leave
imul
cmp
pop
xchg
or
fwait
dec
dec
fbld
or
rclb
or
aaa
les
incb
aad
neg
cs
fstpl
xor
jmp
push
loope
stos
pop
mov
cmp
jge
call
scas
dec
out
xchg
jp
aad
lea
in
mov
push
xchg
fbld
stos
arpl
push
xor
xor
and
xchg
mov
mov
icebp
xchg
dec
or
cltd
inc
fstp
enter
sub
jl
leave
jno
push
ret
test
insl
mov
dec
push
incb
sti
pop
adc
jnp
out
lcall
rol
sarb
outsl
aaa
cmp
shlb
sub
mov
sbb
insl
xchg
imul
pop
fimull
xor
enter
lods
js
leave
cltd
sub
jno
sub
sbbl
fxch
sbb
jecxz
rorb
rcr
push
mov
es
les
aam
push
push
jg
test
add
cmp
inc
popa
push
push
add
negb
rcrb
dec
pushf
xchg
daa
movsb
sbb
xchg
je
popa
add
cwtl
mov
xchg
cmpsl
sbb
or
xchg
insb
repz
jmp
sub
add
jl
leave
enter
aam
shrb
mov
mov
sti
push
and
lea
loopne
inc
pop
cli
pusha
xor
outsl
mov
sbb
inc
icebp
sub
mov
xor
leave
cmpsb
inc
js
cmp
push
imul
push
aam
xchg
mov
stc
into
inc
add
lock
cmp
push
into
shlb
loop
lret
mov
aaa
push
jns
enter
addr16
rorb
aaa
sub
cmc
hlt
fwait
sub
idiv
andl
fcomi
xor
inc
dec
outsb
push
mov
mov
push
pop
call
repnz
add
loop
aas
push
mov
cwtl
push
xchg
mov
pop
jb
xchg
icebp
pushf
adc
aaa
cmpb
test
ret
mov
out
lods
mov
rcr
stc
lahf
into
inc
push
shlb
lock
sbb
sub
pop
jns
in
pusha
pop
mov
xor
out
stc
incl
js
sbb
jb
adc
jg
addb
das
add
aam
idivb
enter
add
in
rcll
pop
mov
lock
push
lods
in
push
cmpsb
mov
or
dec
imul
push
push
pop
or
scas
sbb
add
or
pop
data16
loop
cmc
pop
sub
das
pop
jne
cwtl
cwtl
clc
cs
in
and
mov
std
lea
test
loop
xchg
xchg
and
jne
cmp
stos
inc
mov
jb
das
cmp
push
rcll
jnp
xchg
fbld
js
xor
div
mov
add
xchg
stc
in
pop
into
mov
push
shr
mov
insl
pop
testb
mov
icebp
nop
dec
pop
inc
lods
sbb
pop
sub
mov
and
adc
jnp
pop
adc
stos
add
mulb
pop
xchg
cmp
xor
jae
popa
xchg
subb
cltd
adc
loope
mov
cmp
pop
loope
xor
int
lds
or
pusha
scas
adc
jbe
ds
xchg
gs
mov
sub
ja
mov
addl
sub
lods
add
pop
pop
xchg
aam
push
nop
stc
clc
imul
bound
dec
pop
mov
mov
push
sbbl
inc
inc
sub
xor
dec
hlt
bound
insl
add
xchg
and
and
fldl
jns
jecxz
fcmovbe
or
cmpsb
push
inc
outsb
out
or
imul
cmp
lahf
fdivrs
lods
test
pop
cmp
inc
cmc
into
arpl
jge
bound
cmc
cmc
mov
imulb
xor
lock
jg
leave
std
push
lods
bound
push
rol
inc
add
push
mov
mov
mov
cmp
xchg
inc
repnz
and
lahf
inc
lds
icebp
xor
push
aaa
dec
pop
lock
bound
sbb
cmp
inc
or
cmp
insb
loop
dec
lds
bound
and
and
andl
pop
cmp
popa
dec
inc
fsts
loope
repz
out
test
fisttpll
test
insl
mov
mov
dec
mov
mov
jnp
mov
fists
fisttpll
jns
sub
mov
jmp
dec
jno
lea
stos
loope
clc
nop
imul
xchg
divb
sarl
inc
mov
arpl
movsb
mov
or
aaa
mov
call
mov
inc
cld
sbb
push
xor
in
or
push
sbb
or
loopne
xchg
push
add
xor
cli
sti
sbb
push
xchg
fwait
loope
mov
mov
sti
call
loope
scas
dec
xchg
cmp
addr16
cwtl
push
in
mov
add
std
jb
sarb
jns
lret
cltd
cmpsb
lds
test
jo
fidivs
add
in
js
mov
iret
push
push
xor
adc
testb
adcl
and
mov
rorb
outsl
push
aad
jbe
data16
jl
pop
push
leave
jmp
in
adc
mov
mov
mov
or
das
fnstsw
mov
mov
clc
ja
arpl
rcrl
js
pop
test
mov
clc
jmp
and
and
call
test
xlat
or
cmc
nop
mov
and
enter
loopne
outsl
nop
jae
cmpsl
cmpsl
add
into
aad
outsl
pop
jmp
lods
jb
pusha
fidivl
mov
xchg
rcll
push
mov
lds
sbb
or
jle
cmp
cmp
test
jae
pushf
enter
push
subl
inc
inc
xchg
cmpsb
vcvtpd2dq
sbb
outsb
int3
lcall
inc
cltd
mov
xor
cltd
mov
ds
out
add
test
or
fldl
rcr
ja
stc
cmp
in
shrl
or
sub
jno
sub
iret
rorb
insb
dec
cltd
xchg
adc
testb
inc
icebp
xchg
shl
add
sub
nop
jge
inc
sbb
mov
aam
cwtl
bound
sub
decb
or
bound
mov
sub
lds
pop
arpl
jb
mov
xor
movsl
cltd
out
stos
jle
adc
push
hlt
mov
sar
add
ss
add
sub
mov
jns
sarl
pop
int3
lahf
fisttps
lds
outsl
sub
pop
je
inc
sub
xchg
imul
xor
sbb
mov
push
push
pop
add
pop
xor
mov
xchg
lea
shll
xor
jle
jmp
xchg
pop
cld
arpl
fisttps
ret
mov
xorl
fucomp
loope
out
push
inc
cmp
push
pop
cmp
sub
stos
mov
repz
ret
sbb
cli
repz
enter
pushf
cltd
lahf
jb
in
repnz
mov
adc
mov
dec
fmuls
add
sbb
ror
ret
push
gs
mov
test
fdivrl
test
test
xchg
xchg
and
jge
lcall
mov
movsb
pop
cmp
fstl
int
xlat
inc
call
lahf
pop
in
dec
xchg
push
mov
rclb
cmp
sbb
mov
repnz
xchg
in
cwtl
inc
dec
scas
jbe
cmp
and
fdivs
dec
neg
add
or
or
lds
or
fidivs
sti
and
mov
jle
insl
jle
outsl
test
mov
jge
add
fcmovnb
mov
push
xchg
adc
inc
and
push
pop
aad
gs
in
mov
cmpsb
movsl
pushf
daa
adc
js
into
and
popf
inc
jnp
daa
ror
scas
repnz
mov
repnz
jne
sub
inc
notb
adc
dec
or
add
xchg
repz
sub
mov
fildl
xchg
int3
enter
xchg
clc
ds
xchg
dec
fistl
or
sarb
mov
aam
mov
in
and
addr16
dec
repnz
sti
xchg
sbb
loop
xlat
or
add
in
mov
mov
sub
push
sbb
push
xchg
mov
cmc
cmp
mov
test
xor
add
mov
inc
fwait
out
in
push
xchg
data16
push
and
aam
mov
jmp
mov
decb
shll
out
in
in
or
mov
cwtl
dec
cs
mov
sub
std
sbb
popf
cli
dec
xor
cli
mov
push
cmp
jo
adc
movsb
pop
fsub
lcall
fsubl
sbb
push
add
dec
pop
lods
or
fwait
in
lret
fdivl
mov
xor
mov
and
and
mov
dec
out
fistpl
rclb
jge
lds
inc
jne,pt
shl
sbb
lea
mov
add
push
jecxz
dec
jbe
and
stos
mov
negl
mov
or
adc
lahf
in
and
mov
std
cmp
sub
test
hlt
dec
fldl
ss
xchg
inc
sub
addr16
jnp
lcall
mov
out
push
mov
outsb
sub
sub
jl
add
mov
push
or
lock
push
fsts
jp
insl
xor
push
popf
jae
lea
xchg
mov
or
or
mov
pop
inc
adc
mov
mov
sub
bnd
jmp
sbb
or
lods
mov
sbb
push
pop
add
cwtl
push
jecxz
sub
xchg
jmp
inc
out
test
in
xchg
in
hlt
rcll
in
imul
mov
cmpsb
adc
les
xlat
jmp
lds
out
cltd
lock
jecxz
jmp
cmp
andl
aad
clc
les
stos
ljmp
fs
dec
negb
sub
push
fadds
push
xchg
wbinvd
out
addr16
sub
or
out
adc
xchg
mov
mov
roll
jmp
fsubs
out
add
movsb
mov
lret
fstpt
aaa
push
repnz
xchg
scas
fwait
ds
aam
aaa
outsl
subb
cld
push
popf
loope
into
xchg
addr16
mov
scas
scas
repz
fisttpl
push
and
push
push
and
cwtl
xor
into
mov
jnp
lock
mov
lock
test
and
mov
cmp
mov
cld
out
xchg
fs
in
jnp
int3
xor
test
or
cmp
mov
add
or
in
mov
adc
icebp
lods
mov
in
lcall
xor
sahf
arpl
jmp
dec
push
xor
insb
pushf
jns
xlat
cmp
push
push
shlb
and
xor
cmp
mov
jbe
std
and
lret
pop
and
fiadds
jns
fmul
mov
cmp
idivb
mov
jg
add
inc
icebp
fsubrl
dec
scas
mov
jne
icebp
xor
lahf
nop
cmpsb
push
mov
push
sbb
in
fists
stos
add
cmp
adc
or
xchg
loopne
jae
aam
ret
cmc
add
mov
jle
clc
orb
int
push
lret
repz
dec
into
dec
ret
add
pop
or
mov
bsf
inc
out
std
sub
stc
inc
lret
push
leave
sbb
out
xor
cmp
sbb
mov
adcb
push
jl
ja
push
clc
aad
push
sbbl
fsts
inc
andl
lahf
lret
call
lea
or
xchg
add
in
shlb
cmc
xchg
mov
lods
test
stc
sub
adc
inc
jmp
mov
notl
pop
mov
iret
xchg
int
stc
test
jle
idivl
xchg
out
inc
leave
push
xor
mov
inc
adc
mov
mov
xor
inc
pop
jl
mov
jo
mov
push
xor
ljmp
and
in
stos
push
mov
add
and
mov
repz
pop
xchg
lret
pop
push
cli
sbbl
adc
pop
andb
jmp
jecxz
pop
ret
jae
scas
sub
outsb
fadd
ljmp
cli
pop
mov
cmp
adc
sbb
imul
into
inc
outsl
dec
fmull
xchg
add
stc
mov
mov
test
bnd
shlb
or
fiadds
dec
pop
stos
adc
mov
insb
popf
mov
jg
xlat
addr16
stos
je
in
lret
test
or
hlt
incb
mov
movsl
cmp
enter
addr16
mov
sti
inc
lds
out
shr
sbb
mov
adc
sbb
jns
jnp
ucomiss
leave
and
lea
addr16
fs
sbb
inc
xor
add
and
cltd
sbb
lods
mov
test
ljmp
shlb
addr16
daa
shrb
push
js
xchg
imul
mov
mov
pop
and
daa
adc
repz
cmp
lret
or
aad
fists
mov
lcall
jp
orb
in
inc
jmp
ffreep
cltd
cmp
lock
les
lcall
and
leave
ja
mov
icebp
inc
jne
xchg
push
fstl
mov
imul
jo
pshufw
add
push
sbb
cltd
adc
adc
outsb
sbb
add
and
in
stc
out
loop
lea
fidivrl
pusha
inc
fwait
sahf
bound
dec
lret
mov
dec
cld
jg
push
test
push
enter
jge
add
outsl
std
add
pop
dec
movb
repnz
inc
jmp
addr16
mov
or
push
mov
ja
push
adc
mov
mov
jno
or
add
inc
fiaddl
pushf
aas
push
adc
xor
fs
div
sti
xchg
stos
mov
jne
sbb
sbb
outsl
sub
dec
and
aam
and
sub
sahf
mov
mov
out
mov
xor
dec
je
mov
mov
fdivp
and
fs
arpl
push
add
fmul
repnz
aaa
xor
sbb
ja
shrb
out
mov
or
xlat
cli
int
or
xchg
mov
pop
lea
out
jno
repnz
mov
leave
mov
pushf
xchg
sub
aam
jmp
mov
imul
int3
jp
xor
scas
inc
or
jnp
dec
imul
nop
cmp
mov
es
fimuls
inc
pop
add
or
inc
icebp
push
das
add
or
sbb
out
icebp
and
cs
and
outsb
notl
test
pop
ucomiss
outsb
je
rcl
subl
xchg
idiv
rclb
cwtl
pop
push
mov
jbe
cmpsb
sbb
xchg
and
in
in
jmp
xor
imul
jmp
gs
adc
mov
or
adc
mov
mov
jnp
stos
leave
fldenv
insb
fisubl
cmp
enter
sahf
cwtl
scas
push
cmp
repz
pop
test
fistpll
add
and
loope
rcll
mov
push
xor
lcall
mov
push
and
cmpl
into
cmp
dec
out
dec
insb
jl
push
popl
mov
out
pop
sbb
lret
cmc
add
mov
inc
add
cmp
es
inc
cmp
push
cmpsb
mov
daa
insb
xchg
jbe
lods
jo
andl
aad
movsb
pop
push
fildl
xchg
gs
pop
idivl
cli
pop
xor
lret
inc
push
stos
pop
js
lret
add
mov
add
bound
repz
xchg
dec
jbe
xor
mov
push
fs
lret
outsb
and
lods
cmp
insb
dec
ret
ret
stos
or
xchg
in
push
fsubs
xor
mov
test
les
scas
into
rorb
add
imul
push
int
mov
pushf
idivl
cmc
mov
shlb
or
jnp
enter
stc
mov
pop
divl
sarb
out
clc
in
aam
sub
ss
mov
xor
loope
xor
adc
dec
aad
arpl
test
lahf
jl
daa
pop
imul
push
les
xor
rorb
jge
loop
imul
pop
nop
push
sti
sub
inc
jnp
dec
mov
jmp
mov
adc
sbb
xor
and
pop
test
or
cmp
in
inc
shlb
jb
es
pop
add
sub
push
les
xlat
in
data16
ucomiss
ffreep
int
pop
or
rcll
sub
mov
lds
pop
sbb
movsl
cmp
push
and
pushf
xchg
lock
cwtl
pop
adc
adc
pop
sbb
dec
outsb
loop
loop
pop
push
outsl
icebp
xor
adc
push
hlt
inc
sbb
sbb
mov
fmul
add
push
aas
mov
mov
xlat
sti
aas
orb
movsl
pop
push
test
push
jp
jb
outsb
jne
jno
mov
xchg
sahf
fs
shlb
mov
jle
scas
pop
mov
hlt
out
dec
mov
sbb
xor
test
out
jno
add
pop
sub
pop
in
scas
mov
inc
test
sahf
sub
mov
xchg
in
sub
pop
inc
fimuls
jnp
jbe
clc
push
adc
xchg
js
es
pop
roll
push
cmp
ret
jae
cmpsb
out
fstl
sti
outsl
xchg
cmp
gs
nop
jp
rol
lret
lea
das
in
pushf
add
sbb
or
push
cwtl
sbbb
pop
daa
sbb
shrb
pop
dec
rorl
sub
pop
sti
dec
pop
lret
cmovne
jmp
adcl
jle
dec
mov
add
lock
sub
cld
sbb
ret
aam
mov
repnz
fwait
push
cltd
test
cld
std
leave
movl
int
inc
sar
jne
lock
pcmpgtd
outsb
outsb
or
adc
mov
add
sub
push
fwait
scas
xchg
fsubs
idivl
xor
dec
ret
add
xor
or
or
rcr
mov
mov
mov
jbe
pop
xor
xor
and
call
scas
leave
outsb
inc
cmpsb
fucomp
mov
fidivrl
sar
movsb
out
int3
adc
int3
pop
sbb
inc
ss
test
out
nop
inc
and
ret
stos
or
aaa
adc
ret
lods
inc
or
sti
out
in
outsl
pop
fildl
roll
pusha
enter
mov
jp
cmpsl
jg
roll
movsb
lock
call
fisubrs
iret
mov
xorl
cmp
int3
cli
adc
fstpt
sub
gs
sbb
arpl
insb
in
cmpsb
adc
jmp
xorb
popa
jbe
jno
mov
outsl
adc
pushf
dec
mov
push
push
arpl
adc
mov
push
cmp
ret
mov
in
pop
in
cmpsb
mov
xchg
add
orb
pop
sub
lcall
push
loopne
sub
sub
mov
and
cmp
lahf
aad
mov
mov
fiaddl
push
mov
movsl
push
mov
mov
adc
xlat
push
xchg
fdivl
pop
sti
pop
xchg
sub
and
mov
cmc
adcb
sbb
loop
test
push
mov
negb
dec
addr16
imul
mov
add
adc
pop
loopne
mov
mov
test
icebp
imul
xchg
loop
aaa
jmp
lock
adc
dec
and
dec
push
aam
lds
ret
adcb
loopne
int3
mov
add
mov
cmpb
pop
mov
imul
addr16
and
add
subb
cltd
mov
sbbb
dec
xchg
daa
lea
pop
mov
out
dec
cmp
adc
push
mov
cmpsl
bound
int3
rolb
lock
xor
lcall
inc
push
mov
call
jmp
sahf
cmp
imul
inc
lods
jb
jecxz
rorb
sub
cmp
inc
jecxz
std
fs
subb
rcr
inc
movsl
int3
dec
jecxz
push
cmp
sub
pushf
xchg
add
push
popa
repz
shlb
mov
jae
sbb
mov
mov
out
mov
inc
mov
mov
pop
call
bound
mov
push
dec
icebp
in
popf
add
pop
jmp
mov
xor
cmp
mov
push
sub
dec
hlt
cmc
push
jge
ucomiss
mov
fdivl
ljmp
test
pop
and
fidivrs
fdivs
push
test
mov
scas
je
std
mov
inc
addr16
cmpb
scas
outsb
fildll
ljmp
mov
les
mov
inc
xor
mov
mov
inc
jo
dec
outsl
out
out
std
xchg
add
mov
push
das
flds
xlat
pop
retw
stc
push
dec
fsubp
jb
leave
nop
movsl
cmp
and
lret
xlat
push
mov
lret
iret
mov
push
mov
cwtl
jge
jae
jl
rcl
xor
inc
aad
sbb
and
bound
cmp
scas
aam
lea
push
mov
inc
mov
cmpsl
xor
mov
pop
jl
pop
sub
cmp
imul
inc
push
mov
fcomps
jg
cwtl
mov
add
mov
jbe
jnp
push
mov
xchg
out
adc
or
outsb
repnz
lea
adc
xor
repz
and
jns
pop
inc
xor
sbb
jbe
je
add
xor
adc
popf
dec
daa
ss
lods
sub
xor
arpl
popf
sub
jno
pop
xor
xor
stos
sbb
call
cld
enter
out
nop
aaa
cmpl
icebp
sub
or
xor
movl
pop
bound
test
clc
inc
loop
popa
sub
push
add
loopne
sub
push
jae
sti
cmp
dec
fistpll
push
test
xchg
cmp
cmpl
sbbl
stos
push
push
sbb
mov
and
or
lahf
sti
into
mov
les
add
jecxz
inc
das
call
xor
arpl
jbe
in
out
lods
das
rcrb
loopne
test
jp
testb
incb
ret
sub
loopne
filds
sbb
push
mov
stc
sarb
repnz
fstl
mov
adc
dec
pop
and
jae
xchg
cmpsl
sahf
cmp
xchg
stos
lahf
jl
mov
out
mov
cmp
push
sub
repnz
cmp
sub
shlb
jecxz
cmp
mov
scas
cmp
inc
js
inc
mov
push
sbb
enter
cmpsl
idiv
aas
repz
and
jne
push
pushf
add
push
stos
mov
hlt
push
xchg
out
xchg
imul
decl
test
sahf
aaa
xlat
pop
pop
repnz
xchg
int
mov
je
sbb
xchg
pop
mov
fnsave
mov
call
mov
push
pusha
inc
push
sbb
jae
push
xchg
shr
push
xchg
add
sti
mov
add
xchg
into
inc
inc
or
movaps
add
lds
out
add
stos
std
mov
es
mov
aas
outsb
test
xchg
inc
add
stos
enter
push
mov
jns
je
push
scas
sub
xor
lcall
lahf
fwait
out
mov
test
test
lahf
jbe
test
mov
dec
dec
jmp
or
pop
or
dec
mov
fisubs
mov
daa
clc
dec
xchg
push
push
test
leave
mov
mov
mov
repnz
xor
push
sub
fsubrs
mov
mov
gs
push
xor
sbb
pop
addr16
mov
ret
iret
aad
es
sub
mov
jg
adc
cmp
lods
pushf
sarb
ret
mov
pop
mov
hlt
daa
pop
out
xchg
lock
in
fidivs
es
ljmp
jne
jb
or
mov
ja
bound
stos
js
gs
mov
mov
mov
push
stos
push
push
mov
aas
push
xchg
jae
add
fsubl
shl
add
movsw
and
mov
imul
jecxz
adc
shll
fcom
and
add
iret
mov
push
clc
mov
mov
pop
mov
jae
leave
stos
fs
fwait
xor
jno
leave
lcall
pop
mov
cmc
repz
fldenv
lock
imul
lods
test
or
xchg
lahf
mov
pop
add
inc
inc
add
xor
inc
iret
sub
fs
arpl
mov
inc
sbb
push
mov
adcl
jns
push
or
lret
jbe
mov
add
ss
push
dec
hlt
mov
js
fldenv
inc
jo
movsl
jae
fs
and
or
push
into
das
jl
fdivs
mov
xchg
cmpsl
int3
test
in
aad
inc
dec
and
nop
sti
or
jno
mov
push
sti
cli
lret
cmp
and
cmp
frstor
imull
xchg
mov
adc
lods
fst
sahf
or
sti
test
stos
insl
inc
insl
shlb
push
or
push
jp
adc
cmp
test
aaa
out
rclb
in
dec
mov
push
aas
movsb
rcr
sbb
pop
push
and
xlat
mov
mov
in
clc
add
jb
push
cmp
xor
cwtl
and
xor
push
mov
cmpl
cmp
dec
lcall
stos
lock
mov
ficoml
add
mov
mov
scas
mov
popf
mov
mov
pop
cld
xchg
cmpsb
aas
into
test
cltd
imull
lcall
lret
xor
inc
rol
push
mov
sub
jns
add
jne
mov
scas
sbb
mov
mov
push
mov
jo
mov
jbe
test
xor
das
flds
add
adc
hlt
inc
fisubrl
loope
test
fcoms
mov
aam
insb
test
xchg
int3
pop
scas
hlt
call
or
mov
notl
rcr
jns
mov
cmpsb
push
xchg
dec
push
cmp
mov
mov
sub
add
xchg
add
pop
sub
aam
and
mov
jp
fst
inc
jmp
sub
icebp
in
pop
lds
sbb
dec
stc
popa
int3
in
push
xchg
cmp
adcl
pushf
push
ret
add
and
dec
ret
xchg
mov
fmuls
test
and
mov
cmp
jbe
testb
pop
add
xor
outsb
push
das
mov
cs
adc
mov
pop
adc
inc
xor
inc
stos
sub
mov
pushf
mov
dec
into
lcall
loopne
inc
push
xor
cmp
imul
xchg
lret
xor
test
dec
xchg
mov
pop
sbb
push
stos
cltd
ljmp
xor
fs
pop
push
cmpsb
lret
mov
pop
pop
push
jb
cmpsl
lret
jle
add
stos
adc
pop
pop
sub
fwait
mov
dec
fisubrs
icebp
std
je
out
pop
sti
sub
jl
outsb
fldl
push
pop
fwait
and
fwait
rcrl
jnp
mul
dec
xor
stc
stc
stc
mov
rolb
inc
jp
push
dec
xchg
outsb
lret
xor
pop
iret
fnstcw
aaa
jecxz
shl
cmp
mov
scas
sub
fistpl
cltd
mov
lds
add
sbb
xor
mov
out
xor
sti
sahf
mov
imul
sahf
sub
fnstenv
lock
mov
clc
mov
leave
test
test
jl
sub
sub
rorb
mov
xchg
into
inc
jne
out
les
ret
mov
ficoml
in
mov
sub
clc
in
sub
xor
mov
addr16
inc
xchg
mulb
inc
add
or
or
mov
jmp
inc
mov
dec
fisubrs
mov
push
mov
outsl
aaa
es
mov
lret
jo
test
adc
pop
push
push
sbb
adc
cmp
icebp
add
jae
push
mov
enter
pop
push
lods
dec
sbb
dec
pop
adc
pop
xor
popf
rcrb
mov
adc
outsl
jl
or
push
mov
push
rol
stc
mov
mov
stos
xchg
push
fadds
cmp
sbb
xchg
pushf
adc
or
sub
clc
mov
mov
add
cmp
iret
cmp
pop
xor
ljmp
add
lods
int
mov
jecxz
pushf
hlt
ret
push
mov
dec
pushf
mov
cmc
adc
pop
cmc
sbb
iret
or
sbb
test
sbb
lods
test
jo
insb
aam
dec
cs
push
push
fildll
fisubrl
in
cmp
lods
sbb
mov
cmpsb
scas
cmp
leave
cmpsl
sub
shrl
aad
cmpsb
add
sub
mov
cmp
aam
pop
sbb
in
stos
push
fildll
xor
ss
shll
push
rcl
lret
fisubrl
cwtl
fldcw
cmp
mov
mov
shll
cmc
jne
mov
and
jns
lret
imul
add
andb
fcomps
xchg
cmp
dec
mov
push
fpatan
mov
adc
mov
mov
mov
pop
sbb
pusha
decb
or
xchg
xor
popf
aas
repz
lret
push
xchg
mov
lret
lods
push
inc
addr16
int
jnp
push
push
dec
sbb
sbb
add
push
mov
add
inc
lock
dec
xchg
in
dec
adc
lahf
test
leave
push
mov
mov
test
ds
xchg
sti
aaa
fisttps
push
mov
mov
cld
cli
rcrl
mov
sti
leave
or
pop
movsb
pop
repz
clc
idivl
dec
roll
cli
or
jp
cmp
xchg
xor
cmp
cmpb
pop
repz
lock
xchg
clc
lock
adcl
add
les
shrb
icebp
inc
or
xor
nop
inc
movsb
jno
sbb
add
sub
push
lods
and
data16
sub
adc
dec
shll
pusha
push
push
pop
insl
rcrb
push
imul
and
sub
fnstsw
into
xchg
sub
repz
jno
mov
xor
add
repz
cmp
fcmovnu
jg
xchg
stos
cli
sbb
lret
arpl
mov
sbb
in
mov
sub
dec
das
hlt
cltd
scas
fdivrs
cwtl
rorl
sbb
push
cltd
inc
out
xchg
mov
subl
aaa
xchg
jns
gs
loope
mov
test
fstl
xchg
test
sub
fsubr
push
cld
or
adc
xchg
cmc
dec
xor
arpl
mov
inc
pop
mov
push
out
and
sbb
out
ja
das
sbb
inc
push
rcrb
inc
xor
dec
fstpl
shrb
inc
pop
cwtl
xchg
stos
sub
jmp
mov
mov
fcmovnu
fxtract
mov
cwtl
add
push
mov
fstl
lahf
cmpsl
adcl
mov
jae
pop
push
adc
add
cld
add
movl
enter
or
or
jmp
inc
cmc
rcrb
jg
fmuls
sbb
jno
mov
mov
daa
movl
mov
xchg
push
and
dec
or
test
scas
in
cmc
test
insl
dec
in
or
xchg
dec
lret
mov
mov
insb
jbe
dec
add
sub
in
mov
adc
push
and
jb
mov
arpl
pop
fisttpll
sbb
inc
lret
xlat
adc
fsubr
inc
imul
lret
push
push
aaa
js
scas
outsl
enter
sub
mov
inc
inc
jmp
sbb
xchg
orl
sti
movsb
or
je
in
adc
and
sbb
dec
xchg
subb
inc
jb
push
scas
das
movb
popf
nop
add
aam
sub
lds
jmp
outsl
xchg
loopne
xor
arpl
ds
jno
ja
xor
nop
fwait
sbb
pop
and
push
int
sbb
pop
and
cmp
hlt
aaa
or
popf
xchg
xchg
mov
push
push
cmpb
out
shll
stos
les
xchg
mov
out
insl
stc
pop
push
fldl
inc
in
cmp
mov
in
les
jle
and
mov
outsl
mov
sub
and
pop
mov
or
add
inc
mov
scas
xchg
test
arpl
sbb
jmp
aam
mov
mov
repz
mov
outsl
insl
pop
dec
cltd
jecxz
testl
cmp
push
lret
push
outsl
sbb
and
imul
out
mov
adc
fisubl
xchg
repz
ss
xor
push
out
nop
cmpsb
adc
sub
jne
mov
xchg
test
jge
lods
jmp
fbstp
jnp
sbb
pop
xchg
mov
add
mov
fwait
ljmp
inc
sahf
and
insl
nop
jg
fld
cmp
pop
in
fistps
lret
inc
ss
out
das
out
xchg
mov
cmp
pop
pop
dec
xchg
xchg
and
inc
in
xchg
ret
and
add
loop
xchg
xor
lea
inc
test
xor
cmp
jno
popa
or
mov
lods
es
adc
enter
in
push
or
sub
mov
idivl
icebp
or
mov
sbb
pusha
fdivl
sub
enter
jbe
xchg
jnp
aam
fcmovnbe
mov
pop
cmpb
addr16
lahf
das
and
lods
dec
cs
es
mov
fwait
and
mov
sub
mov
xor
dec
jecxz
and
scas
xchg
pop
fiaddl
add
dec
jae
fs
mov
jbe
call
lds
ja
sub
mov
add
cmp
push
xor
push
jo
cs
insl
and
bound
lea
ss
adc
mov
cmp
je
repz
xchg
xchg
push
das
dec
inc
lods
insb
inc
sbb
jmp
cs
in
stos
xchg
mov
subb
je
aam
push
cwtl
dec
xchg
hlt
pop
pushf
sbb
fimuls
mov
mov
cmc
jae
xchg
inc
mov
sub
fcoms
xchg
inc
adc
mov
ljmp
mov
fbld
je
idiv
outsb
sub
dec
mov
je
cmpsb
inc
andl
adc
xchg
add
jge
test
bound
repz
sub
sub
xchg
xchg
cmpsb
add
add
fldt
cltd
fcomip
aad
or
in
mov
lds
jbe
popa
pop
loop
hlt
ss
push
loop
in
shl
mov
sbb
cmp
cmc
aam
push
sbbb
repz
test
cmp
or
xor
hlt
shll
scas
ljmpw
add
fildl
xor
adc
arpl
adc
int3
imul
pop
adc
repnz
cmpsl
cmp
jns
pop
fisubrl
int3
jae
lahf
icebp
or
push
and
es
dec
push
enter
xor
mov
movb
adc
jae
outsl
mov
into
mov
fisubl
test
fcompl
add
jno
and
mov
jge
sti
jb
pushf
scas
push
mov
mov
leave
sub
mov
and
mov
jg
xor
es
stc
xchg
and
jns
dec
or
jae
cmpsl
mov
mov
out
leave
insb
push
das
subb
push
mov
mov
test
mov
pop
pop
sub
sub
mov
imulb
jl
xchg
jmp
lods
xor
dec
mov
xchg
outsb
sti
jo
out
pop
imul
pop
jne
cmp
cmp
ljmp
test
ret
aas
or
mov
movsl
cmpl
mov
mov
in
lds
add
cmpsl
sahf
mov
fstps
outsl
fnstcw
add
lcall
adc
xlat
cwtl
ljmp
xchg
add
fidivrl
cmp
push
and
pop
mov
outsb
out
cmp
lds
inc
push
xor
sbb
xor
in
lret
movsb
push
bswap
sbb
jecxz
fdivr
dec
pop
and
or
sbb
dec
mov
jle
jnp
mov
cmp
std
test
sbb
ffreep
aam
mov
inc
add
pop
lret
pop
dec
rorl
pop
xlat
icebp
push
add
loopne
movsl
jo
fwait
dec
lods
test
sbb
mov
xor
push
jecxz
mov
call
and
loop
sbb
adc
std
cs
sbb
add
ds
popa
inc
mov
inc
dec
out
xchg
mov
pop
minps
xor
xchg
sub
cmp
push
subl
sbb
loop
inc
push
mov
and
out
and
insb
sub
adc
dec
mov
jae
dec
xchg
mov
cmp
and
rorl
sub
mov
pop
xor
mov
and
and
xchg
pop
pop
roll
ret
add
ja
pop
dec
daa
dec
pop
mov
in
push
mov
pusha
mov
mov
pop
jno
mov
sub
lods
mov
fmuls
mov
cld
in
inc
dec
lcall
shll
jae
cmp
jp
push
clc
jmp
pop
pushl
push
xor
clc
lds
or
and
push
cmpsl
xor
fsubrl
add
imull
mov
repnz
mov
cli
cmpsl
mov
movsl
xchg
mov
outsb
movsl
jecxz
mov
popa
mov
loop
inc
cmpsl
dec
cmp
aaa
mov
push
or
fdivl
dec
mov
cmc
lret
jmp
sti
jmp
xchg
mov
jb
sbb
or
or
push
aaa
imulb
and
mov
insl
or
cltd
and
fucom
jle
into
push
mov
mov
or
and
cmp
add
mulb
fsubrs
aam
jp
iret
mov
inc
loop
cwtl
stc
aas
inc
out
nop
jbe
std
insb
mov
stos
aad
inc
icebp
and
and
ret
cmpsb
cltd
inc
inc
gs
rorb
cmp
ds
adc
insl
jecxz
iret
bound
adc
lret
cmpsl
dec
mov
jne
fwait
cmp
xor
shrl
test
mov
shl
lea
mov
cmp
testb
leave
fisubl
mov
not
mov
ds
cmp
mov
mov
push
into
inc
rcr
xchg
cmpl
arpl
push
jmp
test
icebp
in
mov
sar
rcrb
jb
xor
mov
ja
and
add
mov
bound
inc
mull
shrl
or
push
push
sahf
ss
rolb
or
loopne
mov
jp
xchg
push
add
rolb
xchg
sbb
fwait
pop
push
sub
std
adc
mov
cmp
add
xchg
popa
add
pop
jge
sbb
cmp
sub
or
cmc
push
addr16
xchg
inc
into
mov
mov
stos
in
dec
pop
sub
les
pop
out
daa
repnz
sub
shrb
mov
jle
mov
push
sub
push
adc
xor
mov
out
xlat
mov
mov
mov
dec
rclb
push
mov
xor
pop
push
scas
or
loop
xchg
sbb
test
xchg
cwtl
and
lods
cmp
or
add
insb
adc
adc
rorb
sbb
push
test
jle
sub
inc
lahf
loopne
sub
push
dec
aaa
mov
mov
jle
out
mov
push
hlt
iret
mov
out
call
jno
je
push
cli
jge
out
shll
push
loopne
repnz
pop
shll
loop
xor
jl
gs
mov
pop
ror
ss
push
push
jp
dec
inc
jne
dec
out
hlt
push
and
hlt
mov
movsb
jns
jecxz
ffree
movsb
inc
adc
aaa
fldcw
mov
xchg
outsl
mov
popf
scas
or
cmc
rcrl
xor
rep
in
push
cmp
sub
or
xchg
test
jl
adc
push
jecxz
pop
pop
jl
das
adc
mov
ret
jg
sbb
pminsw
inc
sahf
neg
mulb
into
sbb
pop
lret
dec
pushf
dec
inc
push
movsb
or
int
jne
test
ja
xlat
jmp
xchg
and
cmc
mov
cmpsl
jne
out
xchg
pop
repnz
mov
outsl
stc
or
ss
mov
cmpsl
mov
mov
mov
mov
jp
and
jb
outsl
fnstsw
in
jno
mov
out
adc
daa
orl
mov
rcrl
jp
jb
add
dec
jbe
loopne
and
mov
in
xor
jne
push
push
jp
call
ret
adc
mov
jnp
push
mov
jne
sahf
jnp
xor
lods
jnp
mov
mov
or
add
out
mov
pcmpeqb
dec
mov
push
mov
lods
xchg
imul
mov
daa
sub
and
test
cmpsl
cld
mov
xor
ljmp
scas
gs
fdivrp
mov
jno
and
and
cli
xor
and
sarl
mov
pop
lock
jb
je
call
sbb
outsl
shrl
dec
jns
sub
mov
fidivs
outsl
cld
rolb
jle
add
push
std
addr16
pop
rcl
dec
add
mov
nop
jl
pop
mov
adc
sub
xchg
sbb
fdivl
mov
jl
jb
bound
sbb
xlat
or
pop
in
mov
mov
into
inc
cli
lahf
mov
inc
aam
sbb
nop
inc
andl
xor
sahf
lahf
in
hlt
aad
inc
outsl
out
outsb
inc
mov
ss
mov
in
in
test
mov
ljmp
imul
jne
pop
addr16
xchg
pop
jnp
fs
int3
add
inc
enter
mov
dec
adc
xchg
adc
xor
lahf
xor
jecxz
arpl
push
ds
cmpsl
mov
add
movsl
push
dec
aaa
dec
movb
add
lds
sbb
lds
roll
std
mov
mov
mov
xor
jbe
lods
cmp
fs
dec
lcall
jle
dec
xor
inc
add
fadds
mov
dec
out
adc
mov
and
push
jbe
pushf
cli
mov
sahf
push
roll
pop
push
or
inc
xchg
cmp
std
push
xchg
ret
jo
push
mov
iret
in
mov
add
adc
push
adc
sbb
es
push
mov
pushf
push
xor
scas
adc
fwait
inc
dec
addr16
and
andb
insb
pop
bound
stc
mov
cld
cmp
mov
sub
push
jmp
stos
sbb
or
popf
or
hlt
lods
jmp
lret
sbb
sti
jp
mov
std
ret
push
xchg
mov
xor
mov
fs
add
adc
bound
mov
add
stos
jbe
jnp
mov
loope
int
pop
and
or
sbb
in
lea
into
pop
pop
mov
movl
rorb
int3
and
rorb
popf
jge
inc
push
test
inc
jle
pop
pop
movsl
add
loop
imul
and
add
insl
lea
iret
jnp
cmpsl
ja
xor
cli
lcall
or
out
jns
jne
test
inc
push
pcmpgtb
repz
addr16
cmp
xor
scas
addr16
fsubp
inc
xchg
xchg
fmuls
gs
pop
and
leave
or
push
pop
out
outsb
stos
adc
popf
cs
popa
vlddqu
in
aam
sbbl
sub
imul
adc
cmp
mov
adc
xchg
lock
pop
iret
or
or
add
test
or
pop
or
bound
pop
cmp
dec
and
movl
ds
push
in
mov
bnd
and
add
dec
ror
push
lret
pop
loopne
add
ja
iret
out
fwait
xchg
xchg
ja
iret
cmpsl
cmp
rcrl
cld
imul
clc
or
lret
push
fisttps
xchg
sub
sbb
ja
outsb
dec
jo
je
mov
sbb
mov
cmp
push
adc
cmpsb
ds
sbb
cld
lods
inc
divl
jp
and
dec
aad
mov
test
dec
sub
call
and
adc
iret
fsubrl
mov
xlat
das
aad
std
loope
mov
sub
lds
and
xchg
repz
add
stos
lods
mov
out
sbb
rolb
aam
adc
std
dec
lods
lahf
dec
add
les
xchg
xchg
call
movsl
test
cmp
in
or
fidivl
xchg
daa
stos
ds
fimull
arpl
or
or
push
test
ss
xchg
out
push
pop
and
sbbb
fldt
pop
add
rolb
sbb
popf
cltd
repz
aas
ret
jae
lea
insb
mov
inc
jmp
fcoms
mov
call
in
jp
push
mov
mov
into
cmp
jno
ret
fbstp
sti
sahf
aad
push
push
adc
or
sbb
andb
loop
xchg
sub
sub
dec
int3
lcall
push
aas
insl
push
out
loopne
jl
hlt
xor
ljmp
test
popf
iret
mov
pop
xlat
rcl
or
dec
std
cmpsb
xchg
push
pop
loop
roll
jle
jo
dec
testb
sti
sahf
std
and
push
test
and
or
or
pop
adc
lahf
lret
jne
notl
xor
cmp
and
push
mov
cmp
mov
cli
adc
or
sarb
ret
cmp
mov
adc
hlt
xlat
into
push
mov
and
xchg
sub
iret
dec
xorl
aas
inc
int3
hlt
push
dec
in
stc
pop
push
stos
jle
fwait
addr16
std
or
add
lahf
cltd
inc
bound
push
xchg
cwtl
sbb
movsb
mov
jg
clc
call
fstl
leave
mov
es
nop
scas
outsb
std
jecxz
jns
dec
xchg
testl
jne
sbb
ja
pop
imul
movsl
cmp
cmp
sub
pop
sub
mov
push
push
out
fsts
aas
mov
loop
and
int3
mov
mull
jg
movsl
adc
cmp
add
fisubl
mov
adc
stc
negb
mov
jl
push
pop
and
imul
fdivrs
fiadds
mov
call
aad
insb
jmp
adc
mov
stos
inc
or
or
stc
push
mov
mov
std
cmp
inc
test
mov
adc
insb
cmp
mov
js
sub
icebp
mov
insb
mov
inc
ds
imull
inc
lret
sbbl
or
push
cmc
aam
mov
stc
pop
jo
mov
or
in
hlt
in
and
cs
jnp
dec
arpl
cmp
iret
mov
xchg
loop
inc
cmp
jae
push
sbb
movsb
imul
cmp
mov
push
inc
int3
stos
inc
mov
sarl
outsl
rolb
xor
out
ss
movsb
jl
pop
pop
int
ret
out
loope
mov
test
sti
popa
lret
xchg
and
cmp
adc
inc
mov
xchg
pop
dec
dec
xlat
jge
cmp
push
push
in
mov
pop
mov
xchg
outsl
cmpl
stos
xchg
pop
dec
stos
hlt
fstpl
add
push
push
les
cmp
les
or
movl
inc
or
jge
into
pop
and
inc
mov
jbe
imul
mov
add
xchg
push
shl
jp
pushf
das
mov
fsub
dec
pusha
push
jl
push
out
or
jecxz
add
fwait
rcrb
cwtl
mov
aaa
addl
xor
add
xor
scas
or
int
shrb
stos
pop
pop
pop
cltd
fidivrl
int3
push
or
mov
xor
add
add
enter
cmpsl
xchg
js
and
jnp
cmp
or
jle
cmp
imul
arpl
sub
leave
sbb
mov
push
fisubrl
decb
enter
xchg
jnp
pop
in
mov
mov
add
fcomps
out
mov
xchg
or
cltd
adc
andb
mov
aas
push
mov
add
xor
or
rclb
push
push
push
outsl
pop
pop
lods
ret
icebp
leave
mov
mov
adc
push
jl
iret
sbb
in
call
xchg
test
pushf
ljmp
repnz
dec
cld
les
stos
aaa
popa
lret
xor
mov
fwait
stc
mov
fwait
inc
outsl
fadd
nop
mov
xchg
xchg
rcl
mov
mov
icebp
pop
out
imul
int3
sahf
mov
jae
dec
xchg
stc
jge
lcall
inc
stos
pop
call
fsubs
mov
xchg
or
fwait
mov
sub
cmp
adc
iret
and
lcall
dec
mov
outsl
in
xor
push
mov
addr16
sub
xchg
clc
arpl
pop
iret
xchg
popa
mov
xlat
in
aad
push
cmpsb
int3
not
enter
pop
das
or
jmp
sbb
je
sbb
jne
rolb
stos
in
jns
je
jb
int3
shlb
cld
cs
mov
xor
push
push
or
fwait
mov
push
cld
int
sbb
data16
movsb
xchg
add
into
dec
mov
inc
dec
inc
xchg
mov
nop
mov
jle
lods
fcmove
or
add
mov
fisttpl
jp
into
push
xor
jg
push
pop
in
xchg
fstps
adc
mov
lods
enter
movsb
stc
aad
sub
push
je
jno
pop
outsb
call
fnstenv
lret
nop
jmp
popa
lods
xor
adc
shl
push
lea
mov
jmp
test
jg
pop
mov
les
mov
mov
xchg
mov
movsl
into
and
mov
lock
repnz
arpl
or
inc
jmp
adc
mov
sub
add
or
xor
pop
ljmp
gs
leave
aam
shrl
xor
pop
sbb
rol
inc
pusha
add
arpl
mov
or
sti
mov
ljmp
outsl
cmp
lret
rol
mov
cwtl
daa
das
pop
cmp
pop
pop
in
jg
out
inc
mov
ss
stc
sbb
lret
adc
push
pop
addr16
outsb
inc
jbe
xchg
add
jg
stos
mov
jle
pop
inc
insl
sti
or
arpl
test
cmc
adc
cs
mov
repnz
test
popf
pop
jns
mov
cmp
jb
push
and
mov
mov
clc
sti
jle
xchg
movsb
fwait
xor
xchg
mov
lret
adc
das
mov
mov
mov
xchg
push
push
xlat
int
fcom
mov
and
sbb
pop
adc
fnstcw
addr16
hlt
dec
shlb
lahf
mov
inc
xor
pop
cltd
jb
adc
rcrb
lea
imul
mov
lahf
and
shll
mov
cmc
sub
add
xchg
ja
outsl
ret
adc
std
xchg
push
inc
imul
cmp
loopne
add
leave
xchg
dec
and
push
lret
test
jge
call
outsb
add
dec
cmpb
mov
cmp
sahf
movsb
inc
dec
dec
mov
sbb
mov
out
cwtl
adc
mov
pop
xchg
inc
pusha
push
dec
add
mov
insb
int
jecxz
rcrl
ds
sbb
and
mov
scas
jge
xchg
ds
sbb
mov
test
pop
cmp
out
push
push
lahf
inc
movsb
popf
mov
clc
add
inc
mov
iret
cli
sub
mov
pop
aad
add
mov
sub
and
sbbb
sbb
imul
movsl
sbbb
les
xchg
loop
pop
int
mov
fmull
in
imul
mov
mov
mov
cmpsl
dec
and
adc
dec
push
mov
gs
lcall
jge
mov
jno
push
out
fstps
outsl
jae
popa
outsl
lock
sub
push
in
mov
cmpsb
mov
sbb
divl
lock
pop
iret
fwait
mov
mov
xchg
jg
fcmovnbe
imul
sbb
cli
out
ds
push
ficomps
lahf
cmp
icebp
pop
jmp
add
or
rsqrtps
push
add
clc
adc
pop
movsl
add
stos
icebp
and
inc
aas
pop
push
fcmovnu
jle
outsb
mov
push
mov
xor
add
rsm
sbb
call
popf
andl
jbe
jns
mov
jle
push
lds
add
leave
and
cmp
and
pusha
adc
loope
adc
lcall
inc
pop
inc
outsb
fucom
cld
orl
xorb
fiadds
or
stc
test
cld
dec
icebp
mov
aas
hlt
pop
aaa
es
dec
in
aad
xchg
jbe
jge
cmc
or
or
lret
rolb
sti
fdivl
mov
shr
dec
stos
jle
xchg
inc
inc
push
data16
in
mov
mov
or
cltd
sahf
or
outsl
je
cmpsb
xor
mov
inc
cmp
and
push
pop
cmp
scas
and
mov
ror
xor
call
mov
nop
cmpsb
mov
pop
mov
add
fisubs
and
jns
dec
push
inc
scas
push
mov
mulb
add
ret
jg
cmpsb
jnp
aaa
sbb
push
and
repnz
ljmp
mov
sbb
dec
clc
or
and
ret
jbe
or
test
test
jne
mov
in
cltd
in
stc
add
subl
push
and
mov
test
add
inc
imul
dec
push
ret
movaps
sbb
and
sbb
add
sub
ljmp
xor
pop
inc
adc
ret
into
push
or
pop
pop
dec
adc
mov
gs
sbb
jne
nop
xor
mov
push
sbb
xchg
in
mov
jecxz
cmp
fnsave
jnp
les
xchg
scas
mov
cmp
or
push
fistps
pop
imul
aad
xchg
pop
mov
dec
nop
cmc
mov
cmp
xchg
das
cs
loop
xlat
add
cs
aaa
mov
xor
movsl
std
xor
sbb
xor
cltd
mov
sbb
cmc
iret
or
sub
sbb
jbe
sub
lds
stos
test
hlt
jle
in
repnz
sbb
aas
daa
leave
enter
and
add
stos
jae
fisttpl
ljmp
stos
pusha
dec
shlb
cld
xchg
lret
adc
aaa
sahf
and
cmp
or
in
roll
jp
push
pushf
push
aad
cmp
mov
fldl
and
cmp
lea
push
and
mov
insl
mov
out
fdivrp
aam
sti
sti
mov
les
mov
xor
mov
sub
mov
in
inc
xchg
imul
leave
test
mov
adc
mov
mov
dec
out
pop
mov
lea
loopne
cmpsl
cmp
pop
jmp
pop
test
sbb
movsb
mov
cmp
nop
pop
jns
lret
mov
in
ljmp
dec
adc
out
cmp
jle
cmp
sub
dec
sar
mov
gs
mov
add
test
pop
jb
shr
and
jnp
ficomps
mov
movsb
xlat
jmp
push
jmp
inc
dec
mov
add
imulb
jl
mov
dec
and
xchg
movsb
sbb
pusha
je
inc
aad
pop
jg
xchg
dec
sahf
in
js
adc
mov
mov
dec
call
dec
or
std
inc
mov
fisubrl
das
mov
rclb
inc
dec
jle
push
mov
mov
sub
sub
dec
pop
notw
in
cmp
je,pt
jne
ret
mov
lods
int
int3
xchg
xchg
enter
push
mov
pop
push
test
out
jbe
popa
inc
arpl
jns
imul
add
lock
cmc
jno
jecxz
out
call
mov
dec
sti
pushf
xchg
ror
xor
popa
ja
sub
and
cwtl
das
inc
leave
mov
insl
sub
dec
push
ss
mov
cli
or
xchg
pop
push
jl
gs
adc
pushf
or
cmp
push
loope
cmpsb
pop
lret
sbbb
mov
cli
into
inc
sbb
repz
or
cmp
sub
xor
mov
or
in
mov
je
jecxz
add
cmp
cmp
in
mov
xor
out
mov
clc
pop
leave
lahf
ficoms
adc
sbbb
adc
xchg
rol
push
imul
ss
mov
push
inc
and
dec
sbb
bound
mov
dec
cmpsb
xor
popa
xchg
lods
insl
lahf
ss
icebp
jmp
mov
test
cli
sbb
xchg
lcall
mov
dec
lret
stc
pop
lcall
jecxz
and
and
adc
add
imul
fbstp
sahf
jno
cmp
popf
sbb
je
mov
shl
inc
mov
ds
sub
xlat
adcl
and
add
pop
mov
mov
mov
mov
xchg
mov
xor
pushf
stos
mov
lcall
jns
inc
cwtl
dec
mov
mov
add
xorl
mov
pop
and
push
push
add
sbb
sub
jnp
shrl
rcrl
movsl
scas
xor
jnp
cmpsl
and
lahf
and
xor
xchg
stc
mov
xchg
clc
test
nop
jg
jge
push
mov
adc
setno
sub
std
lock
and
mov
jnp
call
int
jg
jle
xchg
scas
gs
jbe
enter
fwait
xor
ja
divb
lea
loope
sub
cmpsb
jle
dec
mov
mov
call
add
cltd
insb
popf
and
adc
jl
cmp
faddp
fchs
sahf
xorl
sub
cmpsl
jns
mov
mov
iret
xchg
ret
fsubl
push
mov
and
mov
pop
jmp
xor
inc
outsl
mov
jg
jne
or
jno
add
jbe
or
jp
or
shrb
out
dec
flds
add
fiaddl
pop
pop
test
test
scas
loope
pop
outsb
pop
dec
jno
icebp
out
adc
es
fsubl
fcoml
mov
inc
test
bound
mov
mov
or
lret
pop
sbb
cmp
ds
cmp
sbb
ljmp
shl
nop
mov
xchg
push
jmp
push
adc
xor
lods
popa
pop
aaa
aam
push
cmp
push
xor
in
pop
push
cmp
daa
js
icebp
das
push
lret
mov
popf
add
stc
push
lea
jb
cmpsl
xchg
stos
imul
clc
out
loop
cmp
push
mov
or
sub
nop
pop
pop
or
jl
xlat
or
jb
xchg
mov
test
pop
call
in
rorl
mov
int
fmuls
cwtl
nop
push
inc
pop
cmp
lret
mov
mov
pushf
add
mov
add
cmp
mov
roll
jb
add
test
xchg
enter
cmp
sbb
mov
mov
add
mov
push
xchg
popa
inc
ljmp
xchg
loope
hlt
test
inc
imulb
sbb
addr16
inc
or
pop
mov
outsb
xchg
jl
push
clc
adc
mov
mov
mov
sbb
in
push
jge
inc
dec
push
sbb
sahf
mov
test
or
and
pop
dec
subl
out
leave
jge
mov
aad
and
scas
mov
mov
push
mov
push
cmp
add
pusha
sbb
xchg
rcrb
in
mov
pop
popf
push
outsl
sbb
jg
lds
movsb
negl
in
or
leave
mov
inc
pop
jl
cmp
pop
mov
outsb
sbb
dec
pop
cmp
movsl
mov
les
lock
xor
in
mov
xchg
scas
pop
lds
mov
add
lahf
and
cmp
insb
mov
movsl
pop
repnz
dec
cli
enter
int
pop
jo
xchg
aaa
addr16
cld
fs
mov
clc
or
fidivs
fidivrs
testl
push
and
add
mov
jp
loope
jns
test
mov
ret
dec
mov
mov
movq
out
data16
pusha
insb
es
lds
lcall
jae
push
or
mov
repz
hlt
mov
xchg
mov
push
cmc
icebp
cmp
xchg
repnz
xchg
pop
mov
lea
jmp
popa
pusha
ds
testb
and
jno
inc
xchg
mov
into
mov
out
mov
lods
pop
pusha
xchg
dec
ret
out
cmp
loop
inc
pop
sbb
cli
cmpsb
pop
ret
push
lea
ret
adc
test
xchg
cmp
mov
lcall
fs
and
adc
ja
sub
mov
in
push
cmp
ficoml
je,pt
lret
notl
popa
in
loop
lock
stos
sbb
xchg
mov
popf
inc
and
jg
and
adc
stc
xchg
xchg
imul
mov
stos
adc
xchg
jae
lock
pop
test
and
mov
insl
xchg
fdivrl
and
inc
and
leave
xchg
adc
sti
mov
cmp
sbb
xchg
jge
jp
subl
fwait
mov
or
dec
outsb
data16
xchg
nop
scas
xor
cmpsl
int
push
cld
mov
repnz
mov
inc
aaa
lahf
aam
ss
loop
scas
cwtl
cmp
sub
pop
adc
mov
cmp
push
insl
push
cli
pop
dec
fsubrp
xchg
mov
in
insb
fdivrs
push
or
je
fs
jno
xor
adc
jecxz
ret
dec
daa
push
lret
jmp
xchg
inc
sbb
fsubrs
and
fnstenv
sub
je
or
push
outsl
push
sub
mov
or
fwait
imul
jl
push
pushf
or
jno
das
dec
add
mov
sbb
out
iret
mov
xor
nop
sti
ljmp
popa
cwtl
fcoms
cmp
and
sti
shll
test
sahf
lods
inc
push
mov
inc
mov
les
mov
jecxz
in
sub
push
cmp
pop
dec
jmp
jnp,pn
dec
jb
xlat
rcl
push
lock
pop
inc
insl
jge
addr16
push
sub
ror
xor
xor
add
xchg
and
push
mov
clc
stos
or
inc
jbe
xor
sbb
sub
pop
push
ja
pusha
inc
bound
les
sbb
jbe
ja
cmpsb
aad
xchg
xchg
aas
cmc
mov
xor
ljmp
shrb
and
lods
pop
jne
or
jb
jns
cmc
ss
rcrl
out
daa
clc
mov
and
clc
mov
aas
loope
mov
shlb
mov
sub
xor
or
mov
mul
pop
xchg
jbe
cli
jg
push
sbb
imul
mov
adc
cmc
cmp
out
aam
aam
push
xchg
scas
int
push
pop
xor
les
inc
andb
sbb
testl
mov
iret
xor
movsb
inc
jle
xor
test
mov
inc
fcmovu
or
insl
lock
xor
xchg
cmp
test
inc
arpl
out
cwtl
cwtl
fsub
int3
test
sbb
jmp
xor
add
ja
aas
xor
popf
mov
xlat
and
aam
ja
push
xor
inc
mov
shlb
pop
mov
mov
jle
fdivrl
ss
ds
cmp
stos
sbb
sub
mov
or
jp
rorl
xchg
loopne
mov
in
subl
outsl
mov
or
ret
mov
jmp
push
arpl
lret
in
and
jbe
mov
or
ss
xchg
leave
movsb
aam
push
sbb
inc
mov
insl
adc
and
adc
ret
pop
mov
push
in
xor
and
movb
rorb
sub
call
pop
stos
push
mov
cmc
arpl
shll
fisubrs
mov
dec
jmp
jae
bound
ja
stos
stc
mov
xchg
hlt
xchg
jg
lods
lea
repz
movsb
push
lods
inc
mov
adc
icebp
in
mov
push
cs
or
std
mov
pop
js
and
jp
daa
pop
adc
es
aam
shrl
adc
icebp
cwtl
mov
push
stos
loopne
das
jecxz
mov
outsl
push
add
nop
jmp
paddw
addl
or
adc
mov
inc
mov
test
pop
xchg
stos
mov
push
sub
fldpi
jl
ret
cmp
loopne
mov
ret
dec
xor
fisttpl
or
out
imul
cmp
adc
jae
mov
lcall
jno
push
mov
js
test
rcrl
adc
xchg
stc
mov
repz
fstpt
mov
imul
and
push
ret
add
cmpsb
aaa
arpl
xchg
mov
into
aad
push
orb
mov
jae
and
clc
sub
popf
dec
ret
das
repnz
xchg
cmpsl
pop
ret
add
push
xor
pop
lds
cmp
and
mov
lock
fxch
test
cmp
adc
in
and
aaa
mov
adc
xchg
push
xchg
jno
xchg
push
cmc
sbb
xchg
jg
leave
aas
xor
cmpl
inc
sub
addr16
dec
scas
jae
jns
jmp
push
imulb
xchg
pop
adc
lock
xor
aas
or
jnp
and
mov
lods
sub
cwtl
fdivs
decb
adc
cmpl
hlt
mov
pusha
xor
pop
xchg
sbb
cli
outsb
xchg
je
and
lcall
and
xor
ds
aad
test
inc
inc
cmpsb
pop
adc
push
or
and
add
inc
leave
cmp
test
pusha
sbb
adc
fadd
adc
neg
in
ret
adc
orb
dec
idivb
jbe
ret
push
adcl
fdivp
cmpl
dec
mov
in
rcr
clc
inc
aam
out
pop
jp
outsb
andl
outsl
lds
aas
mov
sahf
gs
adc
nop
push
sub
cmc
jl
dec
inc
cmovnp
xchg
loopne
and
iret
testb
shll
push
mov
data16
mov
push
rcrl
cmp
adc
repnz
cmc
scas
jb
dec
adc
lods
and
je
jp
or
bound
sbb
arpl
dec
fwait
push
into
lock
das
les
cmp
aas
mov
mov
rorl
pop
rcr
aas
pop
adc
push
lods
fs
repz
jmp
jecxz
lods
add
test
outsb
int
mov
sbb
mov
mov
pop
aaa
inc
inc
jecxz
ror
dec
sbb
sub
jle
cmpsl
push
mov
lret
rorl
push
push
adc
push
cld
add
stos
fildl
xchg
and
loop
push
test
xor
mov
xchg
outsl
ja
aaa
js
dec
loopne
add
dec
lock
dec
cmp
add
fnstsw
inc
cmp
add
ds
pop
jecxz
cmp
hlt
dec
push
inc
dec
jns
ljmp
mov
pushf
mov
addr16
and
mov
iret
pop
push
xlat
movsl
cltd
or
sbbl
sahf
cmp
bnd
jl
xor
cmp
cmp
mov
stos
pushf
stos
pushf
lret
sub
pop
outsb
sbb
push
sbb
jmp
stc
imul
jns
popa
pop
dec
pop
cwtl
and
push
push
xchg
int3
sub
fbld
iret
push
cli
lea
fisttpll
push
outsb
jmp
mov
push
push
iret
les
jge
rorb
repz
push
in
sub
xchg
mov
icebp
fstpl
pusha
call
sbb
mov
movsb
std
dec
push
jae
ret
inc
sarl
sub
jecxz
gs
test
aad
ret
shrb
aaa
lods
not
jmp
mov
pop
mov
imul
inc
mov
push
sbb
das
repz
int3
lds
sub
xor
cmpb
cli
out
repz
xor
into
mov
pop
push
mov
fnstcw
pop
sti
xchg
xorb
outsl
aad
cmp
lahf
lret
out
jg
or
sub
pushf
adc
pop
pusha
pop
jbe
mov
mov
jo
cmpl
adc
fsubr
stc
fildl
inc
fsts
adc
in
andb
mov
add
pop
adc
cmpsb
xchg
ret
test
and
fnstcw
pop
dec
and
cmp
in
outsb
push
mov
aam
fdivrs
imul
outsb
xor
add
outsb
inc
mov
test
psubq
es
cltd
clc
int3
clc
je
int
test
sbb
xor
ror
out
jge,pn
xchg
jle,pn
jge
mov
lret
xchg
adc
add
stos
xchg
push
mov
or
mov
xchg
xor
inc
fs
lea
mov
add
cmp
pop
js
inc
dec
mov
push
xorb
loopne
shld
push
or
add
movsb
popa
push
test
repz
lret
xor
dec
in
pop
das
dec
and
adc
push
popf
sti
call
mov
mov
xchg
mov
push
cmp
lds
sub
mov
les
push
mov
arpl
inc
daa
inc
in
jo
mov
mov
pop
out
cmp
pusha
ljmp
mov
cmp
scas
mov
es
addl
andl
sub
mov
jmp
ficoml
add
xor
ret
dec
data16
movsb
jb
lock
mov
xchg
pop
subb
mov
out
xchg
ja
sahf
std
sub
push
ljmp
mov
or
test
scas
sti
jnp
in
inc
repz
js
pushf
popa
dec
jb
xlat
lret
aad
aad
inc
mov
ja
sti
sbb
xor
cld
ljmp
adc
shrb
inc
addl
and
sbb
call
imul
addr16
jle
loopne
ja
fwait
adc
mov
call
jp
cmp
xchg
popa
aas
fmuls
add
and
mov
mov
add
sub
mov
xor
add
pop
movsl
arpl
cmp
loopne
xor
mov
xchg
lret
mov
mov
mov
cld
jge
stos
sbb
or
lahf
in
pop
movb
adcl
jns
sahf
or
dec
jp
ret
rcrl
push
in
pop
sub
xor
xchg
add
dec
ficompl
idivb
add
push
fstpt
jno
ficomps
inc
dec
inc
cmpb
fadds
and
insb
xor
pop
inc
lds
pushf
pop
and
sti
repz
jmp
iret
jecxz
cli
dec
stc
mov
adc
movsb
loope
mov
xor
fstl
rcll
outsb
pop
cld
sbb
aam
cmc
pushf
fsubs
adc
mov
call
push
lret
sahf
inc
ljmp
rclb
push
ret
jge
add
xchg
mov
lcall
jl
repnz
aad
inc
add
loope
xchg
ss
mov
sbb
int
mov
lea
sbb
in
and
adc
adc
cwtl
sbb
push
out
int3
adc
adc
je
stc
emms
imul
sti
mov
cmc
into
fwait
jnp
in
cwtl
int
cmc
cld
cltd
mov
dec
mov
pop
imul
xor
and
rolb
lret
mov
mov
mov
stos
outsl
fcomi
sbb
push
xor
fwait
sbb
xchg
mov
pop
xor
ficompl
xor
mov
xchg
pop
cltd
movsb
daa
push
cmp
inc
adc
pop
cltd
dec
int3
mov
lods
outsb
out
inc
stos
out
stos
call
test
insl
scas
adc
insb
sbb
sbb
popa
push
xchg
insb
out
popf
jmp
cmpsb
pop
jo
dec
fwait
push
mov
or
add
mov
loop
int3
sti
out
lret
daa
add
inc
sbb
aas
jne
xor
iret
xchg
push
sbb
mov
add
adc
xchg
shrl
les
popa
mov
iret
les
outsl
int3
adc
cmp
sub
dec
fsts
repnz
sbb
mov
insb
cmp
pop
pop
pop
mov
stc
sbb
fnstcw
push
mov
add
xchg
scas
pusha
xor
call
inc
repz
rcrb
lods
loop
lret
int
inc
fisttpll
imul
mov
inc
or
mov
lock
pop
sub
ja
push
into
mov
or
insb
add
mov
out
mov
dec
jge
or
pop
int
or
out
fadds
mov
in
cli
sarb
mov
lods
stos
pop
les
cmp
push
js
stc
and
iret
push
outsb
sti
mov
test
lds
in
rcrl
adc
movsl
rclb
push
scas
lret
hlt
add
and
mov
adc
aas
lods
popa
xchg
call
out
push
bound
aad
inc
jmp
in
push
loopne
les
fstpl
jg
jl
jne
dec
ret
sbb
add
out
shl
movsl
ds
xor
lahf
inc
rdtsc
lods
jle
pop
or
and
dec
lcall
inc
sbb
lcall
sti
nop
mov
xchg
es
mov
dec
mov
push
pop
jno
je
jb
andl
xchg
sar
cwtl
movsl
test
mov
mov
sbb
xor
ss
daa
je
add
mov
test
adc
or
xor
lahf
sti
addb
jno
jl
imul
aaa
xchg
pop
fistps
adc
test
imul
dec
xchg
cltd
jge
and
adc
fstp
sbbb
mov
loope
xor
xchg
sub
lret
outsb
xchg
push
xchg
data16
jl
push
add
je
outsb
inc
add
cmp
icebp
pop
in
jmp
call
fldt
call
xchg
and
mov
cmc
push
enter
popa
cs
pop
push
jge
mov
pop
xlat
and
add
out
ret
insb
mov
cltd
in
movsb
xchg
adc
lods
sub
or
mov
ja
mov
popf
sbb
dec
js
loopne
mov
add
arpl
mov
sbb
loop
jp
in
test
mov
ljmp
or
or
pop
test
jmp
jbe
mov
adc
subl
mov
enter
out
adc
inc
enter
lea
adc
stos
pop
lcall
std
sbb
jne
or
jnp
push
fs
popf
add
fcoms
pop
pop
cmp
scas
fnstsw
fadds
test
mov
jae
add
imul
pop
in
mov
xchg
cmp
push
jmp
leave
mov
adc
mov
iret
pop
sbbb
inc
jo
mov
pop
inc
das
pushf
repz
dec
shrb
testl
fidivl
inc
fisubl
pop
jge
jae
dec
lret
push
test
repnz
push
add
add
inc
cltd
inc
mov
imul
fmulp
outsl
mov
imul
cmp
sub
or
mov
jno
xor
pop
enter
inc
fcompl
outsb
movsb
add
jge
aaa
dec
lcall
push
xchg
imul
les
sub
pushf
int
loop
adc
lods
mov
mov
dec
mov
cmpsb
mov
push
mov
stos
xor
mov
jp
mov
lret
xchg
jge
dec
lock
aad
sbb
sbb
mov
sub
outsl
pop
xchg
inc
int3
mov
cmp
aam
cltd
dec
lcall
cmp
or
push
cmp
test
repz
imul
fs
loopne
mov
outsb
mov
cmpsl
mov
int3
iret
or
dec
data16
clc
sbb
lock
popa
loope
xchg
xor
pop
f2xm1
in
test
insb
jnp
mov
lea
nop
int
test
cli
inc
ja
push
or
mov
dec
movsb
sbb
xchg
mov
and
int3
icebp
jmp
jae
cld
or
sub
inc
xor
cmp
lods
mov
int
push
pop
aas
test
insl
mov
dec
pushl
adc
cmp
into
xor
cmp
dec
pop
xchg
lret
in
lret
in
adc
andl
movsl
arpl
sub
enter
rcrl
sbb
test
push
ljmp
out
cmp
inc
jnp
imul
fwait
repz
call
lods
divl
adc
adc
lret
jmp
lea
pusha
add
popa
lcall
mov
leave
push
and
mov
outsl
sarl
std
call
lret
jge
xchg
mov
push
push
mov
repz
jne
ljmp
and
and
ret
add
notb
nop
dec
outsb
dec
loop
lods
shll
imul
out
dec
sahf
pop
push
and
mov
inc
popa
push
notl
movsb
xlat
add
sbb
jns
mov
lcall
lods
fwait
sti
and
sbb
aam
outsb
mov
test
or
popa
mov
jo
fistl
out
mov
xor
jbe
sub
nop
lret
jno
loopne
sbb
xchg
int3
mov
cmpsl
mov
sbb
sbb
rorl
and
test
dec
add
fdivrl
sbb
inc
xchg
gs
cmp
cmc
dec
inc
std
fimuls
ret
in
shrl
daa
sbb
addr16
lret
push
pop
cmpsb
lret
outsl
popa
or
std
mov
pop
call
jne
or
mov
xchg
ret
jne
test
adc
push
xchg
jecxz
movsb
or
sbb
jge
stos
lds
adc
push
lcall
and
hlt
clc
mov
jbe
sti
and
jmp
mov
xor
mov
pop
rorl
jae
pop
test
mov
jne
cli
cs
stos
mov
test
call
push
lahf
push
fdivrs
cmp
sbb
cmp
sbb
popf
gs
push
xchg
xchg
pop
push
or
sbb
fmull
cmp
cmp
xchg
je
jo
and
sti
cld
push
push
push
jmp
test
mov
and
in
std
out
test
int
jnp
pushf
dec
stc
add
bound
and
fs
ljmp
xor
push
loope
stc
cmp
pop
or
or
movsb
clc
lea
cmp
mov
ljmp
arpl
push
push
and
scas
int
lret
adc
adc
mov
pop
shrl
mov
jb
cmc
sbb
in
mov
or
inc
adc
xor
stos
mov
ljmp
fcoml
pop
push
mov
xor
call
or
lahf
js
add
and
int
popa
cmpsl
push
mov
and
imul
arpl
loopne,pt
pop
xor
sub
mov
jge
push
jle
add
push
mov
stc
cmpl
push
jnp
insb
adc
adc
pop
ss
into
and
adc
shrl
std
popf
sti
jne
jb
movl
adc
cmp
stos
xor
mov
mov
cmp
insb
mov
sti
dec
add
inc
aam
sbbb
call
fbstp
xlat
xchg
jnp,pn
dec
in
leave
popa
je
mov
stc
push
cmpsb
adc
push
outsb
cld
lahf
lcall
push
out
add
adc
cmpsl
push
jbe
xchg
sarl
adc
add
fmul
ret
mov
sub
cmp
and
and
scas
xchg
sub
xlat
sbb
jmp
test
pop
rorl
pop
mov
fiaddl
int3
insb
out
inc
je
adc
out
sti
sub
mov
cmpl
sub
dec
or
fmuls
sub
push
aad
xchg
addb
push
jecxz
clc
add
out
shrl
into
mov
clc
ljmp
popf
lahf
in
pop
repnz
pop
push
mov
mov
lret
cmp
or
repnz
mov
mov
cmp
mov
scas
imul
adc
pop
dec
jbe
mov
mov
into
dec
mov
loope
lahf
stc
jno
clc
adc
cmp
xchg
pop
insl
pop
idiv
sub
adc
ss
dec
mov
inc
cmc
jnp
pop
clc
mov
ret
ljmp
sub
popa
lea
adcl
fbld
sbb
shrb
stos
pop
or
push
xchg
and
xor
stc
imul
mov
lret
inc
pop
aas
inc
neg
mov
xor
xchg
ret
pushf
andl
mov
sbb
push
aad
fidivl
sub
and
cs
pop
mov
movsl
movsl
xchg
pop
mov
mov
ss
and
movsb
push
jp
cmpl
pop
and
mov
into
in
rclb
stc
xchg
mov
mov
cli
std
adc
aad
aas
adc
rorb
addr16
jbe
pop
pushf
int
loope
mov
andb
dec
popf
out
daa
inc
hlt
testb
add
das
sbb
or
in
push
xchg
test
and
mov
cmpsl
out
dec
jmp
popa
loopne
jle
popf
bnd
or
into
lods
or
xchg
dec
pop
push
inc
push
jno
mov
movsl
enter
fisttpll
mov
push
outsl
imul
sub
movsl
lret
push
mov
roll
adc
jmp
in
ffree
fisttpl
push
call
pop
cs
fldl
outsl
add
incb
fcompl
shlb
sar
dec
fidivrs
jecxz
sbb
aam
or
rcrl
mov
push
fcomp
and
mov
dec
dec
sub
setle
adc
mov
or
fcomip
pushf
mov
call
jae
pop
jb
jmp
mov
sbb
popf
rcr
dec
out
mov
mov
mov
mov
adc
lahf
in
jno
addr16
aad
scas
les
aad
inc
jg
pushf
add
test
mov
popf
lahf
adc
xor
dec
push
or
add
daa
stos
jmp
test
jnp
es
push
jbe
in
dec
andb
leave
cmp
lret
pop
push
sbbl
repz
push
xor
or
leave
push
sub
inc
std
push
push
ret
push
cli
mov
mov
add
mov
and
ja
lahf
xor
insl
mov
push
popa
stos
aam
arpl
sbb
mov
jge
xchg
loope
or
iret
xchg
mov
dec
cmpsl
jp
sub
push
sub
mov
add
scas
mov
jle
aam
cmp
rcrl
sbbl
test
push
mov
jno
fcompl
xchg
mov
mov
or
mov
pop
pop
stos
mov
in
fldt
xchg
gs
lret
jns
cmc
fnsave
add
or
dec
loope
sbb
pop
jne
jo
test
shll
scas
cmp
addl
mov
ds
cmp
fidivrl
push
or
pop
aad
call
xchg
test
mov
pushf
dec
push
mov
pop
inc
sbb
mov
mov
push
sbb
lcall
lea
sti
jae
aas
push
int
jg
sbb
scas
mov
xchg
inc
inc
jbe
or
sbb
mov
mov
imul
mov
hlt
mov
pop
movsb
cmp
pop
fwait
repz
or
cmp
jb
adc
jle
mov
cmp
xor
and
mov
js
pusha
test
int
push
data16
pop
push
jmp
pop
aaa
push
sub
jg
jge
inc
inc
test
les
mov
and
pushl
frstor
into
repnz
or
cli
test
xchg
mov
decl
aam
ret
push
dec
popa
or
repnz
pop
push
shlb
loope
addr16
cmp
cmp
xchg
mov
lods
push
pop
mov
pop
xchg
daa
cmp
add
adc
pop
shlb
push
jbe
stc
push
push
mov
xchg
sbb
mov
je
add
mov
outsb
scas
dec
popf
scas
push
xor
popl
cli
adc
inc
adc
out
adc
ret
fists
fldl
xchg
sbb
mov
mov
mov
pop
stc
jge
loope
jmp
cmp
xchg
cmc
jg
xchg
xchg
inc
cwtl
push
in
push
out
sbb
pop
nop
add
or
push
mov
cmc
lods
pop
inc
inc
imul
or
jge
imul
cmp
nop
aaa
mov
enter
lcall
aad
or
repz
aas
or
pop
imul
or
lods
cli
enter
pop
lret
adc
iret
xchg
les
sbb
xor
shrb
mov
jecxz
imul
and
cli
lcall
xchg
pop
xchg
shrl
loopne
adc
pop
js
cmp
fsubs
cmp
stos
scas
mov
pop
test
xchg
out
mov
ja
les
in
outsl
pushl
or
loope
hlt
or
xchg
shrl
and
jns
cltd
aaa
and
sub
sub
leave
mov
cli
stos
in
mov
pop
xor
shr
mov
jg
rorb
test
pop
pop
xchg
jae
test
subb
sarl
mov
xchg
pop
push
jnp
fs
pushf
je
lock
push
xor
push
out
inc
sub
insl
out
mov
push
mov
aaa
push
sub
push
sbb
stos
pop
adc
xchg
jp
xor
das
jne
call
xor
jge
dec
xchg
into
xchg
pop
sbb
fisubrl
test
mov
negb
lahf
sbb
pop
stos
sbb
inc
cmovae
inc
push
jo
or
insb
inc
xor
push
and
enter
dec
aam
mov
lea
insl
xor
dec
lahf
js
je
add
clc
jne
xor
dec
inc
jl
push
pop
push
push
xchg
sub
addb
addr16
test
dec
into
inc
pop
xlat
cmp
sbb
jp
mov
sbb
repz
movsb
outsb
popf
roll
inc
repnz
xchg
ret
xchg
lods
push
add
or
addb
gs
dec
add
cmpsb
test
outsb
add
push
push
mov
popa
mov
out
pop
loop
ud1
test
aas
nop
mov
push
mov
mov
mov
divl
cmpb
cmc
xchg
mov
nop
mov
pushf
sbb
pop
mov
insb
daa
pop
adc
shr
icebp
test
aaa
fisubl
cmp
mov
jb
test
sub
fstl
sub
push
pop
cmc
jne
push
shlb
mov
scas
pop
adc
mov
and
jp
das
cld
jb
js
daa
mov
adc
shll
aad
xchg
add
iret
outsb
inc
fs
push
push
inc
sti
mov
fcompl
daa
negb
and
das
fistps
shlb
fisubs
pop
out
test
mov
test
nop
imul
pop
cmp
incl
xchg
jge
push
mov
xchg
mov
dec
jp
mov
scas
cmp
mov
mov
in
add
sbb
int
aaa
aad
call
loope
mov
jo
sub
jb
sub
add
push
sub
pushf
mov
ss
test
push
pop
cli
xchg
push
mov
hlt
pusha
fimull
ds
cwtl
push
jg
mov
mov
or
jecxz
and
jnp
push
cmc
out
sbb
nop
cld
mov
loope
or
notb
cmpsb
sub
imul
fdivr
pusha
daa
rcr
push
add
mov
stc
data16
lret
add
mov
popa
cmp
rcl
cli
jg
add
ja
cltd
jno
pop
iret
js
cltd
mov
mov
xchg
int3
fisubrs
inc
mov
mov
lcall
sbb
inc
je
cmp
cmp
pop
jmp
setns
gs
jne
mov
jg
and
inc
aaa
andl
fsubrs
cwtl
pop
or
rorb
clc
pop
mov
xorl
mov
jmp
sahf
rcl
movsl
imul
or
adc
and
inc
cli
mov
push
in
cmp
loopne
push
inc
cwtl
iret
inc
out
aad
dec
and
inc
sub
mov
and
int3
data16
inc
push
adc
pop
xorb
jnp
in
lahf
push
sbb
xor
pop
nop
xchg
or
les
and
shrb
mov
sbb
xchg
mov
pop
mov
daa
cmpsb
mov
add
dec
add
in
mov
mov
pushf
sbb
test
jp
pop
jns
fcmovnbe
mov
jbe
shll
loope
mov
ss
mov
fisubrs
xchg
mov
inc
xor
and
inc
dec
add
xor
outsb
aad
lea
mov
lcall
shl
mov
mov
pop
cmp
scas
in
fs
cld
push
aaa
repz
in
jb
pop
lcall
sbb
repz
lds
push
inc
hlt
mov
test
or
repz
jge
jae
inc
and
fnstenv
repz
out
ds
push
dec
inc
mov
testb
hlt
pop
arpl
jnp
push
into
sbb
xchg
cmp
sbb
jl
sbb
inc
add
iret
jne
test
insl
jecxz
cli
xor
addr16
dec
daa
in
js
dec
test
lods
test
cmpsl
notb
fdivrs
add
add
outsl
fiaddl
and
jo
repnz
jbe
mov
scas
mov
shrb
mov
inc
jbe
pop
popf
mov
and
scas
or
mov
pop
xchg
mov
pushf
daa
add
mov
popa
push
cmp
inc
mov
jmp
imul
loope
or
aas
sub
jmp
xor
xor
push
das
subl
dec
lods
in
xchg
data16
dec
in
jno
adc
shrl
dec
mov
fwait
mov
xor
orb
or
test
mov
inc
flds
loope
sbbb
mov
fwait
nop
push
sub
imul
adc
sahf
xchg
push
mov
pop
divb
aad
sarb
mov
movsl
ret
sbb
icebp
mov
imul
xlat
je
les
pop
fsubr
sahf
mov
cmc
enter
pop
lods
js
mov
cmp
pop
or
loope
cmp
pop
fwait
js
and
xor
pop
mov
pop
cmc
push
cli
out
xor
mov
and
inc
dec
test
test
xor
mov
dec
out
filds
dec
scas
add
inc
lds
sbb
movsb
mov
inc
stc
mov
xchg
pop
mov
enter
mov
sbb
push
ret
inc
xchg
xchg
xchg
neg
clc
add
fisubs
call
pop
pop
add
inc
hlt
shl
sbb
mov
mov
dec
inc
sub
lret
movsb
adcb
out
adc
inc
shl
flds
dec
mov
je
and
adc
aas
push
pop
aaa
clc
hlt
dec
sub
push
mov
add
xor
ss
stos
xchg
dec
sub
jae
jg
or
push
inc
mov
pop
push
jp
pop
fstl
fsubrs
push
mov
lock
outsb
xor
xchg
adc
shr
test
jne
push
lea
dec
sbb
ret
adc
adc
aam
jb
fistps
mov
xor
pop
pop
inc
jg
push
cmp
dec
out
roll
or
add
nop
cltd
aam
and
push
xchg
inc
inc
mov
imul
jmp
pop
push
pop
out
pushl
adc
loopne
je
add
mov
add
arpl
mov
sahf
adc
mov
ret
mov
outsb
sub
sub
jg
scas
hlt
jo
in
ds
pop
inc
and
test
dec
sbb
data16
jb
and
mov
fldenv
out
pushf
mov
jecxz
inc
sbb
mov
and
xor
mov
rol
push
fists
dec
inc
sub
inc
inc
ret
pop
mov
pushf
popf
int
rcrb
in
aas
inc
cmp
dec
imul
push
mov
push
mov
call
jle
adc
cmp
int
cli
outsb
mov
pushf
add
test
and
loope
sbb
mov
mov
lahf
jo
aaa
lea
incb
pop
sbb
push
sbbl
lret
mov
cmp
sbb
mov
and
push
sub
test
iret
insb
jmp
clc
lock
jmp
outsb
ss
inc
cmp
mov
lret
push
rorb
fldt
stos
lret
mov
adc
xchg
sub
fists
mov
stos
hlt
dec
scas
or
pop
inc
pop
test
fwait
pop
xor
shll
pop
sbb
cmp
sub
add
add
lock
into
xor
outsb
jmp
lahf
sbb
and
mov
add
mov
add
loope
mov
je
imul
xchg
pop
dec
mov
out
xchg
bound
outsb
movsl
mov
dec
inc
pop
add
movsb
int
jnp
push
loop
data16
and
push
jl
cmp
aaa
outsl
clc
add
clc
movsl
ja
push
mov
fdivr
xor
bound
inc
dec
cmp
mov
push
fidivrs
enter
adc
sub
pusha
mov
inc
mov
dec
outsl
scas
jo
outsl
pop
nop
fisubs
out
sub
xor
test
fsts
mov
add
inc
pusha
dec
mov
cs
mov
pop
pop
mov
xor
and
add
bound
xor
iret
adc
movsl
cwtl
into
pop
aad
mov
mov
mov
push
mov
daa
out
adc
xor
in
adc
add
inc
inc
je
push
js
jb
je
push
leave
push
inc
inc
or
xchg
mov
add
or
dec
pop
out
mov
shlb
lret
inc
pop
movl
sub
jecxz
and
xor
das
nop
mov
xor
cmp
ror
subl
push
push
and
mov
hlt
movsl
ljmp
adc
mov
push
pop
mov
mov
sbb
cmp
mov
aaa
daa
mov
pop
mov
roll
pop
std
cwtl
sbbb
cmp
adc
inc
xchg
or
or
xchg
cmp
cmp
popa
andb
cmp
dec
mov
stos
test
call
mov
aad
cmpsl
dec
add
adc
adc
sbb
xchg
in
jge
es
cmp
call
sub
movsb
fwait
or
push
insb
pop
xlat
xchg
jecxz
subl
lods
and
push
flds
fidivrl
sub
fcompl
fs
xlat
sbb
sub
jg
adc
mov
and
or
xchg
lea
js
xchg
out
in
ds
jbe
sbb
inc
xchg
push
jge
inc
scas
mov
sbb
sub
stc
pop
cmp
and
jb
syscall
sahf
lea
mov
jge
sti
sahf
ss
or
push
add
hlt
push
pop
aas
dec
or
std
push
loope
mov
leave
cli
dec
xchg
dec
jb
in
popa
insb
pop
mov
into
lcall
stos
in
and
cmp
lea
push
insb
and
sub
call
mov
ret
cwtl
fsubs
lea
xor
fcom
sarb
in
gs
and
cmc
fisubl
jbe
xor
pop
xorl
inc
cs
sub
lret
in
cs
data16
popa
stc
int
jae
adc
rolb
sbbl
enter
adc
dec
aad
add
add
lods
test
test
sub
pop
jno
fsubr
jae
rcll
inc
lcall
dec
mov
mov
outsb
and
dec
mov
push
call
popa
jns
jl
dec
fstps
fnstenv
lcall
sub
or
xchg
cvtps2pi
push
ja
wbinvd
popa
push
pushf
push
and
mov
dec
divb
gs
cmpsl
dec
sbb
cmp
leave
mov
mov
ja
rolb
test
adc
jo
xchg
xchg
lock
add
or
jge
es
gs
inc
fnop
mov
inc
stos
mov
ret
outsl
inc
xor
aaa
push
mov
sub
pop
divb
subb
sub
adc
or
jne
cld
loopne
add
mov
call
pop
xchg
inc
xor
adc
add
mov
mov
push
dec
mov
leave
leave
push
fs
xchg
and
mov
jne
repz
fstpt
lret
popf
mov
stos
out
mov
cld
pop
fistpll
push
rol
mov
dec
mov
cli
fnsave
mov
push
or
sub
aam
xchg
mov
mov
xchg
xchg
ror
lods
jg
call
sbb
push
adc
addr16
add
pop
xchg
sub
sbb
or
mov
mov
cmp
sub
cmc
or
arpl
aas
ret
jae
lds
mov
cmp
jmp
int
push
shrb
inc
out
cmp
mov
jns
mov
pop
jnp
cld
or
daa
aas
cmp
push
dec
pop
shr
rorb
insb
mov
leave
push
movsb
mov
adc
idivb
fldt
adc
xor
outsb
inc
insl
ficoml
inc
mov
mov
add
cmp
sub
cmp
cmp
pusha
iret
les
les
les
and
mov
pop
orl
das
iret
jecxz
lock
ss
sbb
data16
daa
test
sub
xchg
add
lcall
mov
icebp
sub
push
pop
daa
cld
or
cmp
sub
shrl
cmp
daa
cmp
inc
pop
insb
lods
xor
adc
nop
and
xchg
jns
iret
fistpl
cld
xchg
xor
lock
js
add
shlb
jo
out
popa
movl
add
and
repz
xor
xchg
test
movsb
mov
cmp
gs
mov
fistpll
fldt
cli
adc
nop
and
xchg
mov
xchg
in
nop
mov
int3
and
leave
movsl
and
mov
push
xchg
and
and
xor
jl
xchg
js
bound
push
pop
inc
cld
xlat
xchg
icebp
fdivrl
sbb
das
rorl
ret
sub
mov
es
inc
out
jmp
out
imul
push
sbb
inc
inc
dec
cmpsb
fwait
cmp
neg
mov
or
repz
xor
cmp
pop
movsb
mov
icebp
xlat
fistps
and
mov
sbb
dec
xchg
cmp
adc
mov
mov
mov
fimuls
mov
cmp
xor
les
jno
mov
cwtl
adc
push
aam
js
fmuls
adc
mov
test
dec
add
in
lcall
sti
loop
pop
in
aaa
dec
sub
cld
fdivrs
maxps
sahf
mov
pop
add
sarl
pop
dec
push
fisubs
iret
mov
lods
xchg
mov
add
cmp
out
and
stos
pop
adc
push
cmp
mov
clc
addr16
jmp
add
mov
adc
fsubrl
mov
sarl
icebp
inc
stos
stc
mov
popf
neg
sub
decb
or
rolb
sahf
adc
push
mov
lock
es
pop
sub
das
mov
test
mov
sbb
add
fsubs
jo
fiadds
movsl
in
js
sbb
movsl
mov
popf
ja
push
xchg
fwait
push
jmp
sbb
sbb
mov
mov
es
aam
and
xchg
mov
ss
int
bndstx
cmp
xchg
fldl
ret
jnp
xor
adc
cmp
cwtl
sarb
inc
js
xchg
addr16
aad
testl
shrb
popf
inc
fwait
push
xor
adc
jle
or
or
int3
push
push
push
cmpsl
push
cltd
fsubrl
pop
int
inc
ljmp
pop
jae
int
xchg
pushf
inc
jne
jmp
jno
bound
hlt
mov
int
cld
sahf
xor
and
pop
sub
daa
addb
dec
mov
push
or
lods
xchg
xorl
roll
add
adc
push
ret
jno
push
push
add
mov
aas
stos
xlat
add
hlt
adc
xchg
aam
imul
ret
pushf
loopne
test
rorb
fisttpl
addl
stc
addr16
movl
mov
bound
movsb
pop
pop
jnp
dec
arpl
add
lods
lahf
lea
push
sub
push
jp
mov
mov
in
sub
lret
jge
push
arpl
sbb
frstpm(287
cli
xor
push
mov
push
add
jo
scas
xor
mov
mov
mov
mov
mov
test
inc
xbegin
scas
cmp
sbb
xchg
xchg
mov
jo
push
push
jmp
mov
ljmp
addr16
ljmp
das
xor
pop
cmp
dec
fmul
cmp
out
cltd
mov
mov
push
jmp
movsb
lea
fistps
mov
pusha
cmp
call
inc
mov
into
jbe
or
cli
ficomps
add
roll
fsubs
pop
loope
xor
notl
jbe
and
lea
out
aam
repz
pusha
xor
lock
pop
or
mov
or
das
dec
dec
dec
in
jge
lock
scas
jge
pop
movsb
fcmovnb
inc
mov
int
mov
loopne
mov
fnstcw
popa
int3
xchg
cmc
pop
push
fbstp
and
aas
jnp
jns
pop
icebp
xchg
xor
push
cltd
fucomp
div
bnd
xchg
cmc
mov
sub
out
mov
lods
push
sub
pushf
push
push
or
stos
jl
sub
jg
repnz
xlat
pop
out
in
inc
ss
xor
in
and
sub
stos
sbb
adc
adc
hlt
sahf
xor
cltd
inc
shll
aam
enter
in
pushf
xor
rcrb
loop
sbb
push
test
jne
add
stos
stc
fcoml
test
inc
insb
imul
ds
add
push
les
jb
push
jb
sbb
cmp
stos
xlat
push
jb
inc
aaa
flds
aad
mov
pop
jg
add
dec
mov
popf
popa
sub
jne
jecxz
mov
cmp
mov
rol
cltd
femms
fwait
sbb
scas
leave
insl
add
push
xor
cmc
outsb
cli
xor
mov
xor
icebp
stos
lret
pop
pop
jecxz
and
bound
fdiv
dec
mov
and
jmp
bnd
pop
adc
ljmp
or
jmp
sbb
mov
fildll
add
mov
into
cld
enter
and
enter
shl
ja
ret
aaa
sbb
pop
sarb
ss
rol
mov
inc
mov
jne
xor
outsb
push
fwait
in
xchg
inc
imul
ds
sub
pop
or
adc
add
add
ret
lret
cltd
mov
dec
or
dec
mov
sarb
cmp
std
fidivs
add
das
mov
jno
test
outsl
mov
mov
push
mov
sar
sub
loope
dec
jno
imul
and
popa
jmp
add
gs
es
mov
sbb
cli
cmp
lahf
add
sub
stos
or
sbb
fwait
xchg
jmp
testb
mov
int
notb
push
cltd
cmp
addl
clc
cmpsb
clc
sub
mov
scas
push
mov
cmc
gs
or
jbe
enter
mov
pop
enter
cmp
push
jne
out
mov
repnz
jmp
or
jg
js
bound
outsl
xchg
jb
add
add
jge
cmp
dec
inc
into
push
pop
xchg
xchg
ret
cwtl
xchg
and
jb
hlt
fsub
movsb
pop
dec
dec
dec
pop
push
xchg
cmpsb
ljmp
xor
inc
ret
mov
sub
cmpsb
adc
sbb
adc
push
pop
add
cmp
sbb
mov
mov
xlat
stos
dec
loop
cmp
jns
xor
testl
daa
pushf
repnz
sbb
xlat
jno
repz
push
ret
jbe
dec
lcall
sbb
mov
mov
or
push
push
gs
inc
cmp
or
jns
jns
dec
mov
mov
push
sbbb
xchg
icebp
in
and
stos
xchg
mov
ret
sub
inc
roll
and
fcmovu
or
loope
pop
fistl
insb
lods
mov
mov
cmp
fisttpll
cmp
testb
mov
xchg
sbbl
jle
in
or
loop
mov
popa
pusha
inc
scas
lcall
mov
js
pusha
lods
xor
add
outsl
add
jns
out
and
or
dec
push
into
dec
ja
sbb
int3
push
stos
sbb
adc
mov
ja
shll
mov
aaa
pop
imul
mov
mov
xlat
enter
jg
mov
shrl
insl
subl
push
cmpsl
je
sbb
xlat
mov
push
jb
je
xchg
vshufps
mov
pop
add
jnp
xor
mov
jne
shll
jo
pusha
inc
sbb
ja
fstps
cmp
mov
test
xchg
ret
sti
mov
jl
xlat
push
cmp
cld
cmp
dec
and
rcr
fdivrs
or
dec
mov
daa
or
mov
cmpsl
and
xchg
sbb
or
imul
lock
and
sbb
pop
add
lret
leave
nop
push
dec
test
inc
dec
ret
scas
fs
cmp
inc
jae
pop
inc
enter
jl
ja
add
movl
stc
ret
subl
jle
push
dec
adc
push
in
sbb
pop
jno
adc
pop
xchg
fcoms
mov
nop
test
and
sub
arpl
or
mov
sbb
mov
lods
dec
sbb
pop
loop
out
jo
sbb
inc
negl
adc
std
pushf
popa
push
mov
pop
xchg
fadds
loopne
insb
sbb
jl
fs
movsb
pusha
movsl
push
add
push
jecxz
ljmp
mov
dec
sub
sbb
in
jb
je
push
rorb
daa
test
fsub
in
sub
scas
xor
int
lret
mov
popa
in
or
xor
addr16
repz
mov
xor
cmp
data16
jo
xlat
popa
add
ljmp
sub
repz
in
mov
cmp
sub
jb,pt
xchg
in
ljmp
adc
mov
out
mov
sub
in
xor
adc
imul
xchg
dec
mov
repnz
add
dec
loopne
hlt
ret
insb
incb
out
push
jb
mov
fwait
pop
mov
cmpsl
outsb
out
and
dec
sbb
inc
push
test
jne
aas
cmp
and
sub
stos
pop
sbbl
mov
or
nop
pop
popf
add
loopne
ret
pop
icebp
popf
loop
movsl
or
jbe
and
inc
mov
ja
mov
and
lcall
imul
rol
fbstp
pop
add
push
addl
mov
bound
vpmacssdqh
scas
frstor
aas
fs
pop
pop
pop
sub
leave
mov
xor
insb
movsl
adc
cli
xchg
incb
dec
sahf
aaa
mov
pcmpgtd
dec
cmp
dec
mov
push
into
int
inc
mov
xlat
fincstp
mov
negl
cmpsl
ficompl
push
dec
inc
and
jns
fidivrs
outsb
or
aaa
and
sub
inc
xchg
pusha
jne
mov
lock
dec
jnp
addr16
ljmp
arpl
sub
sub
jo
jnp
adc
mov
cmp
add
cmc
fmull
cmpl
pop
fbld
inc
aad
out
idivl
xchg
insb
add
adc
mov
jbe
add
mov
shll
fwait
shrb
icebp
std
xor
mov
xlat
cld
jbe
nop
dec
cmp
adc
push
cwtl
jmp
arpl
mov
xchg
mov
cmp
jnp
pop
sar
lds
arpl
xor
pusha
xor
jl
push
adc
xchg
ret
punpckhbw
data16
dec
xor
jmp
jl
bound
adc
mov
loopew
loopne
and
insb
jnp
mov
mov
inc
sbb
jae
flds
push
test
rcrl
call
shr
push
movsb
inc
ficoms
fldl
dec
cmp
jg
sub
iret
push
sbb
ret
and
and
aaa
test
mov
xchg
sbb
je
in
cmp
dec
adc
out
in
jmp
xor
in
leave
in
scas
enter
dec
jl
cmp
xor
int3
orl
cmp
push
ret
push
jl
out
dec
lret
or
push
jecxz
mov
insb
dec
das
jo
adc
out
ficomps
insl
popf
rdpmc
insb
pushf
aad
les
out
testb
stc
test
mov
jg
in
mov
out
jmp
mov
mov
push
inc
jns
clc
push
je
sahf
xchg
popa
je
in
inc
adc
jg
inc
std
dec
outsl
stos
push
xchg
mov
sbb
push
scas
fisttps
cwtl
clc
sti
and
frstor
cwtl
aas
or
xchg
add
lds
inc
mov
jns
and
push
stc
add
sub
cmpsb
or
adc
pop
addl
popf
cmp
push
iret
pop
cmp
and
inc
sub
mov
sub
daa
mov
mov
jl
cmp
out
ret
inc
push
aas
xor
mov
inc
es
lock
adcb
aas
test
shlb
pop
nop
loope
test
mov
sub
orl
test
insl
popf
sub
inc
lret
loop
sub
int
push
loopne
mov
decl
ffreep
scas
add
loopne
dec
push
or
xor
mov
inc
adc
inc
fs
fs
repz
lret
inc
mov
fmull
pop
adc
jo
mov
icebp
movsl
loop
clc
test
test
psubusb
mov
lret
add
mov
mov
movb
dec
lret
dec
push
cld
xchg
sbb
aam
sub
jmp
mov
movsb
sub
inc
or
les
pop
xor
rorl
fbstp
mov
and
inc
cmp
das
fs
stos
push
xor
leave
sub
jbe
cltd
fnstsw
lcall
mov
pop
scas
inc
xchg
push
jnp
jecxz,pt
out
pusha
fcompl
gs
out
inc
add
jbe
push
in
or
add
xchg
sarl
push
outsl
pop
subl
sbb
jle,pn
mov
inc
add
mov
arpl
and
adc
inc
lods
mov
cwtl
daa
shlb
xchg
rclb
ljmp
fsubs
mov
cmp
movb
lods
cmp
inc
mov
pop
call
call
mov
dec
xor
ss
and
and
mov
pop
fiadds
dec
ss
mov
ljmp
and
inc
mov
xor
sbb
add
xor
jmp
inc
mov
dec
sarb
inc
push
add
add
mov
or
shrl
pop
lret
xbegin
mov
push
or
jecxz
sbb
dec
xor
push
or
mov
mov
loopne
or
ds
icebp
and
imul
add
roll
xchg
or
cld
inc
sbb
push
dec
push
sahf
cli
mov
or
int
lock
cmp
enter
enter
das
pop
data16
inc
and
out
dec
int
pop
push
dec
xchg
xchg
jno
ds
pop
incb
xchg
and
testb
adc
xor
fdivl
outsb
mov
cmp
cmp
lock
sub
mov
add
mov
push
bound
sub
hlt
cld
or
xor
mov
dec
push
xchg
movsl
mov
sbb
aam
jl
outsl
cli
and
dec
mov
pop
mov
xchg
cmp
faddp
mov
sbb
cli
ret
push
ss
mov
loop
mov
fsubl
fsubrl
mov
adc
stos
scas
ja
cmp
fimuls
pop
pop
mov
xchg
cli
lds
scas
cmp
movsb
xor
sub
int3
into
sbb
adc
push
rclb
pop
jnp
int3
roll
add
iret
mov
pop
mov
repz
sub
or
or
mov
imul
or
xor
push
je
clc
and
push
test
bound
jl
stos
iret
adc
loop
dec
push
les
mov
push
inc
leave
push
inc
lcall
repz
lahf
repnz
fwait
gs
sbb
xchg
inc
mov
js
jmp
cmp
cmpsb
or
fisubrl
mov
jb
cwtl
adc
hlt
pop
mov
hlt
aam
add
loopne
adc
test
and
es
xchg
imull
shrb
mov
add
mov
cwtl
add
xchg
mov
fildl
mov
adc
lock
dec
call
inc
int3
or
clc
jb
ljmp
cmp
jle
ja
rcrl
pop
lret
dec
out
xor
cmpsb
cmp
and
aaa
push
push
ljmp
aad
jle
mov
into
sti
movsl
xchg
daa
in
fnstsw
mov
xchg
push
add
push
mov
add
ja
jne
push
fisubrs
inc
mov
and
mov
xor
mov
test
push
scas
mov
mov
in
and
sarl
outsb
into
iret
fwait
enter
and
inc
and
pushf
daa
sbb
adc
push
lods
cs
or
push
popf
mov
cmpsb
fcoml
test
push
adc
sbb
pop
or
dec
sbb
es
sub
sub
pop
test
jp
jnp
inc
popf
aam
aad
inc
cmp
scas
out
lods
mov
mov
popa
das
jg
sbb
out
hlt
dec
xorb
int3
lahf
inc
mov
rcl
mov
scas
xor
jp
clc
ss
pusha
cmpsl
pop
sbb
push
repz
lock
clc
add
xchg
lret
movsb
sub
xchg
mov
and
inc
fsubl
jb
cmpsl
scas
push
sbb
mov
push
test
shr
cmp
mov
lahf
push
icebp
xchg
and
js
sub
pop
cwtl
dec
int
psllq
lahf
or
or
add
mov
daa
std
push
xor
loopne
push
sbb
pop
int3
cmp
mull
xor
into
inc
das
jbe
push
jmp
mov
jae
mov
jns
xor
push
jmp
push
push
dec
and
cmp
add
dec
hlt
insb
push
push
daa
sub
or
mov
mov
imull
mov
loope
mov
cmpsb
in
cmp
mov
xor
dec
pop
pop
mov
fcomip
add
mov
icebp
loopne
sub
jl
fs
or
adc
dec
rcrl
add
xor
pusha
cmp
dec
xchg
inc
aad
jl
mov
dec
rdpmc
xlat
stc
mov
mov
sub
cli
out
sub
ret
jne
imul
arpl
push
and
dec
push
arpl
inc
dec
or
mov
test
repz
and
jmp
mov
andl
jno
mov
cmp
adc
out
icebp
mov
adc
xor
inc
scas
sub
gs
add
sbb
nop
data16
addr16
push
outsl
clc
pop
jo
cmpsl
ret
je
fcmove
push
mov
shr
add
pop
sub
adc
mov
clc
adc
fldenv
xchg
fs
pop
pop
test
dec
imul
imul
inc
iret
push
inc
fsub
and
jp
pop
mov
lahf
dec
mov
add
cmp
hlt
xchg
xor
sarl
rorb
subl
scas
mov
nop
jmp
loop
cmp
mov
mov
movsl
fcomps
adc
shlb
inc
enter
rol
lea
in
add
outsb
inc
cld
or
imul
fdivrs
xor
mov
enter
inc
int
fldcw
mov
test
jle
cli
xor
sub
sarb
pop
jl
subl
fwait
sti
in
ss
and
add
mov
mov
cmpsb
setno
outsb
fisttpll
inc
xor
out
imull
xor
or
in
rcr
pop
jp
pop
and
mov
test
cmpsb
js
push
dec
jnp
mov
test
jb
daa
lret
and
repnz
or
test
push
ret
lret
je
test
and
fs
pop
push
add
daa
arpl
xlat
call
or
lahf
in
add
nop
ss
sar
lcall
sub
repnz
pop
hlt
mov
rcll
scas
cmp
push
xor
cmp
xchg
lods
pop
jg
push
rolb
lds
inc
sbb
insb
mov
inc
popa
mov
faddl
ret
ret
pop
mov
adc
and
insb
cmp
ficoms
xchg
add
push
inc
dec
daa
ret
sbb
cmp
pop
aam
pop
jmp
cld
or
lds
out
fnsave
pop
push
mov
jb
in
mov
mov
cmp
ss
stos
push
pop
shl
adc
jp
dec
add
roll
cmpsb
xor
or
adc
dec
into
imul
and
push
in
sub
mov
mov
xor
and
leave
movsl
jmp
pop
testb
pusha
outsb
and
add
inc
test
loopne
mov
mov
cmp
jns
dec
sti
and
push
imul
fsubl
scas
clc
add
movsb
pushf
bnd
cmpsl
xorb
jae
cmp
adc
mov
scas
add
sub
sub
ret
jne
and
in
push
xlat
outsb
in
pop
or
jp
jo
or
jmp
sub
xlat
pop
add
pop
call
test
sbb
push
push
push
mov
fbstp
push
dec
ss
jge
enter
xor
xor
int3
js
sahf
cmc
lcall
inc
enter
mov
leave
cltd
pop
jmp
test
ret
or
push
inc
xor
adc
inc
xchg
dec
mov
xchg
aas
push
mov
call
clc
rclb
aam
leave
repnz
lcall
inc
lcall
sbb
pop
mov
add
scas
jmp
cmp
xchg
pop
les
inc
out
lret
jp
loop
nop
mov
into
sbb
jnp
inc
pop
subl
add
sahf
in
cmp
aaa
cs
sahf
push
push
xor
mov
shll
pop
mov
sub
aam
pop
les
lods
jecxz
out
pop
jmp
jbe
xchg
mov
cs
in
inc
rcl
or
orb
mov
push
arpl
and
loope
movsb
test
and
ljmp
arpl
cmp
jns
mov
jne
pop
lahf
or
or
mov
pop
pusha
jmp
movsl
add
mov
mov
cld
cmp
mull
adc
pop
jbe,pn
les
fistpll
je
loop
dec
cltd
xor
bound
imul
and
mov
test
in
in
push
das
fcomi
movb
cli
jmp
lea
pop
jno
mov
ret
ret
pusha
orb
pop
mov
mov
pop
push
add
lret
sub
mov
xchg
mov
push
lods
fisttps
stc
ficompl
addl
lret
cli
loope
mov
ds
or
sub
lods
into
or
int
stos
jb
sub
sbbl
and
add
enter
cwtl
out
sub
lret
aaa
mov
lea
dec
inc
or
out
adc
pop
xor
pushf
aam
or
aad
pop
movsl
int3
dec
cmp
addr16
pop
das
loopne
jo
out
outsb
push
mov
test
mov
mov
jg
xor
xchg
ss
xchg
je
sub
fstp
pop
into
inc
push
xor
jb
pop
jns
mov
xchg
popf
out
nop
cmpb
ficompl
mov
push
push
sbb
stos
stc
jle
push
dec
imul
aam
mov
fsts
daa
data16
adc
adc
add
gs
fadds
cwtl
mov
xlat
movsb
arpl
aad
mov
jae
push
sbbb
sbb
aam
data16
push
or
sbb
sahf
aas
insl
out
dec
push
jle
sbb
sub
rcrl
inc
fnstenv
leave
sbb
clc
sarl
cli
push
pop
mov
mov
jno
fcomps
and
mov
aam
cmp
hlt
and
stos
sbb
into
cmp
stc
or
xor
and
cmp
fnstsw
arpl
pop
add
test
jp
mov
mov
nop
scas
icebp
rolb
cmp
jmp
mulb
mov
lods
sub
xor
repnz
call
repz
negb
popa
or
dec
mov
mov
and
or
push
dec
addb
adc
andb
outsl
testb
lds
mov
push
add
lret
fwait
xchg
pop
in
bound
cmp
rcr
addr16
dec
xlat
xchg
test
insb
aaa
repz
xor
push
inc
ja
stc
push
lock
mov
pop
repnz
dec
and
jecxz,pn
lret
loope
xchg
mov
inc
fcomp
rcl
mov
in
ret
fs
adc
shlb
mov
cmpsb
ret
jmp
scas
push
push
gs
pop
pop
gs
lods
sbb
inc
fdivr
dec
mov
mov
xchg
fs
xor
outsb
pop
add
mov
icebp
cli
jecxz
sbb
inc
andb
nop
scas
push
inc
push
pop
inc
adc
adc
or
mov
pop
shll
sub
outsb
imul
movsl
pop
sbb
loope
out
push
sbb
ja
sti
or
jmp
lret
jecxz
mov
mov
rorl
in
push
fwait
cs
rol
jl
mov
frstor
rcll
ss
and
jp
pop
cmp
push
add
push
xchg
push
fwait
xor
sahf
pusha
mov
lret
mov
lcall
fimuls
cmpsl
xor
insb
nop
push
push
cmp
jne
xchg
scas
test
ffreep
movsl
sbb
jns
imul
pop
add
and
divl
ret
rorb
fnstenv
shlb
sahf
mov
addl
sahf
mov
loopne
ljmp
and
js
adc
in
fsubp
add
pop
push
stos
mov
loope
and
icebp
xchg
cmpsb
stc
cmp
pop
pop
movsb
xlat
inc
adc
pushf
cmp
mov
cld
xor
out
out
cmc
testb
or
aas
pop
inc
pop
sarb
xor
mov
jae
push
jbe
loop
lcall
mov
adc
xchg
or
dec
ja
jnp
lret
outsl
scas
int
insb
std
shlb
mov
sub
out
jecxz
sbb
push
mov
nop
add
mov
mov
out
pop
mov
cmp
adc
sub
jl
mov
or
orb
inc
pop
sub
movsb
popa
xorl
fiadds
push
mov
sbb
add
in
adc
fcompl
das
lret
test
add
ret
adc
jnp
loopne
test
imul
and
push
mov
jnp
xor
mov
fcoml
push
pop
xchg
dec
sbb
push
xchg
and
out
or
test
push
test
xchg
stos
fiadds
xor
inc
xlat
int3
sub
cmp
call
negb
adc
shlb
push
movsl
mov
fstpt
push
lods
negb
lds
rorb
and
cltd
into
pushf
jle
jo
inc
pop
mov
jg
ror
stc
or
add
lds
mov
sub
lret
xor
inc
push
sub
addr16
and
mov
and
leave
fcomps
xchg
pop
and
pop
loopne
and
push
andb
xchg
aaa
lea
adc
mov
cli
xchg
jp
or
push
xor
mov
adc
mov
iret
adc
fstpt
mov
push
test
pop
push
cwtl
sbb
adc
stos
xor
mov
loopne
or
aad
push
push
sbb
mov
cwtl
mov
xchg
jne
fwait
xchg
or
xchg
or
xor
daa
pop
sahf
popf
cwtl
test
gs
ret
popf
outsl
int
push
adc
xchg
ja
sarb
cmp
lret
fistps
clc
mov
loop,pt
std
add
xor
mov
jo
out
xchg
ss
loopne,pt
xor
cmp
call
adc
addr16
jle
add
or
cmc
mov
sbb
out
dec
xchg
xor
sub
jmp
add
mov
ss
enter
addr16
jb
fisubs
ss
dec
xchg
pop
out
xor
or
lret
jmp
adc
pop
scas
movsl
rcll
add
imul
mov
mov
fcmovbe
imul
call
push
icebp
cmp
and
xor
pop
cltd
out
dec
scas
fimull
and
xor
mov
add
outsb
mov
orl
lahf
das
mov
push
mov
jb
jecxz
cmp
pop
inc
pusha
jne
inc
push
or
xor
fildl
push
add
or
dec
test
push
in
push
sahf
leave
add
popa
mov
icebp
in
mov
cmpsb
cwtl
pop
push
das
pop
xchg
ja,pn
adc
jmp
sub
fdivs
stos
dec
mov
mov
lods
dec
adc
in
pop
pop
xor
xorb
inc
aaa
jb
in
test
jns
sub
stos
mov
shlb
cmp
pop
pop
lahf
ret
and
sub
xor
mov
out
pushf
sub
push
notb
int
cwtl
hlt
cmpsb
popa
mov
cmp
mov
adc
ror
stos
ffree
xchg
dec
cmp
ret
jge
pop
adc
dec
mov
fildll
lahf
xchg
outsb
lds
xchg
aam
iret
cmp
cmp
nop
sbb
mov
push
fistpl
movsl
or
jnp
jne
inc
fwait
outsb
mov
jmp
mov
js
into
leave
sbb
repnz
xlat
cwtl
pop
sub
ljmp
push
pop
out
js
fstpl
mov
cmpsl
jno
sub
fstl
push
xor
andl
push
movsl
xor
ljmp
mov
xchg
sub
cld
fdivs
pop
cli
ror
jge
das
sbb
pop
cmpsl
jnp
inc
jecxz
scas
je
in
comiss
sahf
fidivl
xor
nop
or
jbe
dec
jecxz
pop
in
inc
sbb
inc
sar
jns
jmp
sbb
add
test
dec
xchg
imul
fdivrs
inc
sub
adc
fbstp
cmp
jne
cli
in
xchg
out
or
pop
cmp
cmpsl
stc
sub
ja
int
dec
roll
inc
cld
jne
andl
push
insl
fdivr
lret
pop
ret
push
int3
sbb
out
stos
icebp
lret
daa
in
xchg
inc
aaa
inc
movsb
push
cmp
int
dec
jl
addr16
sub
lods
push
xlat
pushf
mov
xchg
add
stos
add
pop
xchg
mov
ret
leave
mov
inc
mov
lcall
lahf
cltd
push
sub
arpl
push
mov
dec
sbb
cwtl
lods
cmpsb
mov
sbb
dec
shll
dec
push
add
adc
mov
cs
gs
stc
mov
rorl
mov
test
mov
jae
jbe
inc
sahf
cwtl
ja
inc
pop
lcall
jmp
xchg
push
cmp
js
lock
test
xlat
pop
loop
test
dec
cmp
outsb
xor
inc
push
inc
and
dec
lahf
cltd
xorl
cmpsb
inc
psubw
sbb
push
sahf
loop
pop
adc
movl
mov
fs
out
mov
sub
push
fcomip
shlb
fs
mov
out
mov
push
cmp
add
cmp
les
inc
das
mov
pusha
push
into
iret
cmp
cmp
mov
jecxz
daa
dec
scas
mov
pop
pop
adc
pop
mov
jne
lock
test
rcl
cmp
in
dec
test
inc
cltd
cmpsl
hlt
call
icebp
sbb
xchg
adc
pop
int3
push
fsubrp
mov
sti
pop
fildll
jnp
imul
cmc
ja
out
or
cmpsb
dec
iret
adc
das
flds
pop
in
mov
sbb
mov
xchg
jno
xor
mov
mov
loop
lds
or
push
ret
faddl
movsb
ss
pop
pusha
sbb
das
dec
mov
xchg
dec
gs
xor
pop
or
mov
or
insl
mov
fisubl
jp
jg
push
inc
sbbb
hlt
scas
cmp
test
push
xor
sub
pop
xor
imul
and
cmovo
adc
in
shll
rolb
dec
loope
mov
adc
lahf
out
fdivrp
ss
mov
xor
jecxz
and
test
mov
vmovdqu
lcall
mov
lcall
and
and
outsb
pop
xor
ret
mov
cmp
push
mov
pop
adc
pop
hlt
in
pop
int3
notl
xor
xor
and
das
iret
xchg
cs
mov
and
push
adc
cmp
push
dec
sbb
pop
and
push
or
inc
jno
inc
mov
shrb
xor
xchg
popa
popa
sti
jns
pop
sub
test
sbb
call
enter
cmp
bound
loop
inc
out
pop
in
adc
dec
hlt
fstpl
lret
inc
test
push
jmp
fsub
fildll
inc
sub
jle
and
pop
sub
fistpll
jo
mov
mov
repnz
out
push
and
stos
pushw
sarl
push
xor
push
or
or
test
sbb
pusha
jns
push
imull
arpl
lahf
mov
cmc
lock
stos
sahf
mov
loope
jmp
push
popf
dec
movsb
std
jae
gs
mov
fdivs
jb
mov
xlat
pop
inc
fstps
add
les
subl
ret
rclb
in
insb
mov
sbb
out
sub
movsb
lods
push
test
mov
push
mov
inc
mov
add
shl
adc
data16
lods
cmpsb
out
add
xchg
pushf
leave
sub
or
xor
cmp
or
rcrl
xlat
aad
mov
or
enter
stc
popa
popf
and
xchg
mov
jno
sbb
test
fmull
jb
xchg
jbe
repnz
lret
push
sub
pop
stos
sub
dec
les
mov
mov
mov
and
mov
mov
mov
imul
cwtl
addr16
jb
mov
push
push
cmp
lret
icebp
pop
adc
pop
lods
and
aad
ret
test
push
push
je
mov
aad
and
adc
cmp
int
fbld
inc
mov
lea
mov
mov
into
sbb
in
sbb
mov
std
repnz
pop
mov
jns
popa
fwait
jne
or
dec
scas
loop
inc
sarb
sub
cs
sahf
popf
into
xor
push
sub
sbb
inc
das
insb
inc
inc
dec
in
jmp
cs
and
sub
mov
cli
or
ds
clc
ja
mov
ljmp
cmp
inc
mov
mov
test
fidivs
add
addr16
dec
loope
jg
adc
ret
lret
xchg
lea
loopne
cmp
clc
daa
inc
hlt
lahf
pop
mov
cmp
adc
es
xor
arpl
in
leave
cmpl
repnz
push
inc
test
mov
push
imul
loopne
jo
push
out
lds
inc
testl
loop
loop
pusha
test
sarb
pop
sub
mov
fistl
add
pop
inc
jne
jbe
pushf
movsl
bound
sub
mov
jae
fucomp
xor
in
lods
cmpsl
repnz
mov
iret
shrl
inc
pop
add
aaa
jnp
std
daa
pop
movsb
mov
fwait
sbb
stc
out
dec
xchg
call
insl
cmp
clc
or
out
lea
ja
jb
sub
je
andb
cli
and
outsl
int
insl
cmp
xchg
clc
adc
dec
in
xchg
shlb
shrb
ret
ds
inc
jbe
push
ficoml
rolb
pop
mulb
fsubrs
adc
xor
test
sub
or
bound
movsl
and
jno
hlt
xchg
push
test
stc
cmc
and
xchg
aas
xor
inc
cld
adc
push
push
stos
mov
subb
leave
rcrl
divl
or
outsb
ja,pn
cwtl
inc
jno
test
mov
ja
lock
and
push
sbb
pop
mov
sbb
nop
mov
int3
sahf
adc
ljmp
push
xchg
mov
add
xchg
adc
in
sub
leave
shrl
sbb
sbb
sbb
mov
adc
outsl
dec
cltd
and
xchg
mov
iret
test
xor
push
test
jo
sub
fidivl
cmp
xchg
aas
loope
mov
aas
adc
or
fs
sbb
out
xchg
fisubl
mov
enter
push
insl
sbb
out
inc
sarb
lcall
push
fucomp
add
sbb
incl
cmp
fdiv
stc
daa
popf
add
aad
jns
shrb
sub
decl
arpl
outsl
clc
mov
add
mov
mov
adc
popa
xlat
pop
inc
push
cmp
cmp
test
jmp
lret
mov
je
add
jnp
iret
pop
jnp
sbb
jg
shll
mov
imul
lret
test
fwait
and
cmp
lods
xor
popa
fiaddl
out
push
jg
jnp
pop
add
dec
inc
mov
or
adcb
cli
jl
cmp
int
mov
cs
dec
cwtl
lock
inc
jae
jmp
xchg
xchg
enter
leave
popa
sub
mov
inc
outsb
add
cmpsl
mov
ja
mov
shll
xor
mov
fidivl
rorb
imul
scas
mov
xlat
leave
fiadds
clc
push
xchg
push
in
js
int3
aaa
mov
mov
or
iret
sbb
add
mov
mov
jl
lret
bound
dec
das
pop
mov
js
xor
or
inc
and
xor
in
insl
mov
push
cmp
nop
and
mov
jecxz
xor
idivb
jno
aas
ja
cmp
clc
cs
test
mov
xchg
stc
pop
js
mov
cmp
mov
mov
test
bound
mov
test
popa
cmp
adcl
xor
insl
push
outsl
int
sub
aas
push
jp
vxorps
inc
sbb
jmp
inc
mov
mov
ret
xor
xor
xor
pop
adc
xlat
or
or
and
sub
jbe
pop
and
inc
sahf
push
rclb
loope
mov
insl
ljmp
loopne
mov
xchg
xlat
sub
rclb
ret
lret
adc
cmp
jae
nop
push
jo
xor
adcl
xchg
data16
mov
insl
dec
dec
push
mov
out
sbb
lret
cld
mov
xchg
ljmp
fsubs
cmp
cli
mov
mov
aad
push
jmp
rorl
outsb
into
inc
xchg
les
xchg
insl
je
xchg
rolb
xchg
les
inc
dec
movl
mov
aad
mov
int
dec
xor
and
xchg
stc
cltd
lret
jb
gs
stc
xchg
pmulhw
sub
cmpsb
imul
xor
popa
fdivr
adc
cwtl
icebp
shrl
ljmp
out
xchg
movsl
adc
cmp
int3
cmpsl
popa
jno
xor
stc
xor
inc
pop
and
adc
push
in
loope
int
dec
out
or
mov
nop
out
inc
or
cwtl
xchg
sbb
lds
xor
pavgw
jne
daa
das
cmp
xor
or
sub
push
scas
ret
daa
mov
cmp
xchg
cltd
or
out
mov
push
push
sbb
cmp
insl
int
test
sub
adc
xchg
popf
es
fs
jb
sub
leave
mov
cld
add
mov
aas
jmp
cmp
mov
mov
mov
fnstenv
mov
pop
xchg
ficomps
jmp
dec
jns
das
loopne
int
mov
jp
scas
xchg
ljmp
les
pop
or
or
xchg
cmpsb
and
and
cwtl
lahf
arpl
and
push
add
aas
cltd
xchg
mov
push
jne
add
lret
pop
jle
aas
scas
pop
add
loop
out
out
cmpsb
pop
out
and
aam
fwait
push
mov
sbbb
push
loope
mov
cmp
or
add
mov
jae
fstpt
mov
adc
mov
in
sbbl
iret
ret
xor
or
repnz
fidivrs
out
nop
gs
jno
iret
add
dec
cmpl
fs
clc
popa
in
call
fcmovbe
push
lods
test
jecxz
outsl
in
mov
xor
shlb
push
data16
aaa
pop
rorb
fcomps
and
xor
daa
jle
arpl
hlt
addb
sub
and
mov
aas
inc
out
inc
and
aad
roll
mov
mov
lcall
push
stos
or
jae
in
fucomp
adc
jno
sbb
data16
imul
jb
hlt
pop
xchg
jnp
adc
mov
stc
mov
xchg
lcall
cmc
jecxz
roll
in
outsb
es
mov
bound
cmp
jmp
pop
sbb
aam
mov
pop
jne
cmp
push
lds
movsbl
rol
sub
out
lods
sahf
push
sbb
out
test
testb
pop
movsb
adc
push
dec
sbb
jnp
stos
pop
jmp
and
sub
loope
fists
fdivs
cs
pusha
cli
loope,pt
fcmovnb
xor
rorl
sbbb
xchg
push
jle
cmpl
push
iret
imul
pop
shrl
push
adc
xchg
roll
mov
xor
mov
in
cmpsl
clc
data16
and
fldt
sarl
or
push
enter
inc
in
dec
das
and
adc
jno
dec
popf
mov
dec
adc
in
mov
incb
data16
sub
add
cmp
repz
add
out
in
hlt
out
dec
ds
cmp
popf
enter
in
popa
gs
fsubr
sub
inc
jl
and
push
notl
popf
mov
cmp
in
das
aam
mov
out
lret
not
ds
and
in
dec
insl
xchg
popa
cmp
rorl
test
or
or
dec
rolb
dec
rclb
add
adc
rolb
cwtl
cmc
fldenv
lret
sbb
outsb
in
or
stos
ds
sub
dec
or
jl
mov
push
add
ret
mov
mov
cmp
frstor
or
scas
int3
les
sub
add
dec
and
jno
jne
adc
inc
out
sbbl
outsl
jbe
dec
sub
xor
mov
or
mov
pop
add
dec
pop
sub
or
ss
xchg
fwait
pushf
outsl
jo
jge
sbb
stos
test
fwait
sbb
data16
ljmp
add
mov
shll
insl
push
and
int3
xchg
mov
mov
dec
and
xlat
cld
movsl
xor
idivb
repz
sti
mov
ret
out
dec
xor
shlb
mov
cmpsb
push
push
cmc
imull
xorb
adc
js
push
ds
std
push
vmwrite
dec
insw
cmp
push
mov
xor
out
mov
dec
pop
idivl
lods
xlat
in
imul
mov
lods
sbb
sub
mov
sahf
les
jbe
shll
pop
xor
loopne
clc
dec
pop
mov
sbb
xchg
outsb
incl
sub
lods
leave
pusha
adc
mov
sbb
stc
clc
jg
stc
add
add
shll
loopne
lock
xchg
mov
imul
test
mov
sbb
jno
mov
mov
pop
xchg
dec
cmp
jb
xor
scas
aam
and
add
inc
jge
stc
fisubs
shlb
jle
repz
popa
xchg
and
ret
xchg
shrl
mov
imul
orl
test
pusha
mov
je
jbe
into
jno
out
xchg
inc
mov
jg
ficoml
ds
pop
imul
pusha
dec
add
aas
xchg
movsl
movsb
add
fistps
adc
sub
sbb
push
nop
mov
jbe
sub
mov
sbb
outsb
js
xor
adc
cmp
cmp
mov
sahf
push
mov
push
test
data16
hlt
dec
fimull
add
push
inc
push
cmp
shlb
filds
cmp
bound
fistpll
or
leave
jg
pushf
les
inc
mov
mov
scas
push
push
dec
xor
loope
out
pop
inc
adc
test
iret
in
cli
pusha
push
jge
cltd
fs
ljmp
outsb
fildll
xchg
xlat
inc
aas
aaa
mov
sbb
pop
popf
xchg
jb
aas
movsb
iret
mov
rcl
out
in
cmp
sbb
jle
loop
cmp
cmp
adc
or
sbb
std
mov
loope
ds
inc
lock
mov
je
pop
sbb
mov
fcompl
pop
das
imul
scas
test
mov
add
cld
rorl
cmp
mov
or
mov
jmp
aam
out
sbb
mov
js
das
add
loop
and
push
mov
push
xor
mov
in
sbb
adc
fnstenv
hlt
js
adcl
jmp
mov
aaa
adc
mov
adc
or
dec
js
int
xchg
out
into
sbbb
cmp
movsb
or
scas
fimuls
lahf
pop
dec
sarb
sub
push
inc
mov
or
idivb
arpl
mov
arpl
rclb
push
adc
xor
daa
cmp
adc
test
pop
mov
test
cmp
inc
sbb
sub
xchg
jp,pt
lods
fucomip
insl
xor
outsl
mov
lcall
cltd
imul
or
or
xchg
dec
pop
lds
jmp
adc
daa
sbb
xor
pop
in
lods
test
xor
mov
cmp
pop
mov
inc
jo
sub
ss
movsb
roll
hlt
bound
jae
jg
ljmp
mov
loopne
fists
mov
mov
adc
cmpsl
sar
pop
adc
add
pushf
enter
add
mov
pop
push
jge
ret
cmp
cmpsl
mov
lcall
leave
out
xor
jno
dec
ret
jge
test
inc
xchg
inc
ret
je
add
inc
rclb
leave
xchg
sub
test
nop
nop
mov
or
call
repz
push
les
xor
xchg
loope
out
mov
pop
adc
cmp
jmp
push
std
mov
sub
xor
es
inc
mov
dec
jg
inc
xor
dec
mov
mov
movsb
scas
test
mov
push
mov
xor
sbb
pop
mov
stc
xlat
aad
loopne
fidivs
nop
or
dec
ficoms
and
add
int
mov
pusha
ja
mov
inc
xchg
pusha
adc
mov
idivl
into
mov
sti
test
pop
sti
or
jnp
es
jmp
fnstenv
bound
cmp
mov
cmpb
repnz
adc
mov
psadbw
cmpl
mov
xorl
negl
mov
cmp
imul
das
repnz
inc
pop
subl
pushf
push
clc
xor
cmp
xchg
sub
add
jg
sbbl
mov
mov
mov
xor
inc
lods
xchg
sub
xchg
dec
out
mov
lea
shlb
mov
add
mov
stos
lret
sbbb
imulb
jnp
shrb
jp
test
or
std
adc
xchg
jae
mov
adc
push
lret
push
mov
fdivr
pop
mov
loopne
mov
and
mov
adc
cmp
sarl
jmp
scas
loope
btr
neg
adc
xchg
insb
jae
add
sub
inc
test
lock
cmp
inc
loop
stos
pop
cmc
cwtl
rorb
arpl
jae
icebp
add
push
inc
mov
or
ja
fldcw
cli
push
ljmp
cltd
dec
add
test
aaa
add
shrb
gs
or
cmp
stos
sbb
inc
and
lea
mov
cli
fwait
arpl
jg
out
mov
cmc
push
push
sub
sbb
dec
pop
in
test
clc
inc
adc
xor
out
fwait
xchg
popf
and
lcall
cmpsb
dec
arpl
repnz
scas
js
mov
pop
arpl
mov
xchg
out
iret
mov
or
jle
push
sahf
icebp
xor
mov
dec
xor
xor
cmp
mov
daa
xchg
faddl
jg
and
xchg
loopne
inc
xchg
iret
cli
je
fimull
sbb
xorl
dec
xor
jecxz
aas
sbb
jne
pop
mov
push
adc
arpl
rorl
loopne
adc
jo
test
or
jecxz
sub
das
ret
insb
mov
and
outsb
push
or
or
mov
push
sub
dec
pop
mov
lods
fs
jl
xor
shlb
sahf
mov
scas
scas
test
arpl
stos
adc
loopne
or
sub
cmp
popa
adc
pop
ret
xchg
push
imul
je
mov
xor
jnp
jl
xchg
sub
xor
das
fiaddl
cmc
cmp
mov
sbbb
mov
push
hlt
xor
jbe
xchg
loop
aad
ds
mov
out
orl
in
mov
mov
loope
xchg
or
lock
orb
es
mov
aam
and
mov
insl
sahf
sbb
dec
aad
mov
fildll
in
dec
scas
pop
jae
imul
dec
loop
orl
imul
sub
mov
int3
jp
sar
xor
adc
cwtl
pop
lds
lock
cltd
popf
fsubs
pop
pop
or
pushl
xchg
int3
ljmp
repnz
pop
ret
dec
cld
mov
ja
popa
inc
mov
enter
sbb
femms
out
cli
sub
xchg
cmpsb
xor
inc
pop
dec
cmp
sub
loope
mov
cmpb
dec
mov
mov
jecxz
and
dec
je
push
and
addr16
adc
or
mov
shlb
inc
mov
repnz
cmp
jae
xlat
loopne
mov
dec
xor
mov
push
scas
mov
push
mov
daa
cmpsb
or
lods
test
dec
push
add
pop
jno
mov
push
mov
addr16
add
jo
xchg
int3
leave
andb
pop
xchg
jle
pop
xorl
sar
mov
and
mov
dec
xchg
fs
lea
sbb
insl
cs
call
push
push
inc
sub
mov
insb
int
dec
cwtl
lret
mov
ljmp
fistl
jl
aad
xor
and
mov
movsl
cwtl
test
fdivrl
inc
add
sbb
xchg
jae
ljmp
pop
dec
movlps
jno
imul
xchg
fwait
inc
cli
rcrb
enter
hlt
adc
jp
jb
aas
mov
pushf
jnp
fnstcw
lret
fnstsw
das
inc
mov
push
into
leave
cwtl
jl
stos
jge
jp
and
pop
xchg
loop
in
jnp
push
comiss
and
in
cmp
add
adc
mov
loop
fcom
mov
dec
mov
out
and
leave
inc
lret
je
fistpll
test
or
loope
cmp
loope
xchg
or
push
sbb
xor
or
jp
jg
xchg
inc
xor
ds
cltd
jge
cs
adc
cltd
and
push
sbb
rcll
idivl
push
mov
loopne
push
test
ret
clc
mov
dec
cmp
mov
icebp
add
gs
je
cli
push
cmpsl
jecxz
scas
pop
mov
int3
gs
jnp
sbb
jnp
pushf
jecxz
pop
jne
cmpsb
sub
jno
in
lock
test
insb
or
xchg
jo
jnp
mov
mov
hlt
ucomiss
cmc
lds
movsl
cltd
ror
ss
into
loopne
mov
xchg
scas
ss
mov
adc
int
adc
outsb
or
icebp
jg
jne
sbb
lret
sub
xchg
inc
sub
add
sub
push
in
sub
or
mov
xchg
xchg
xor
lea
das
imul
jb
dec
inc
outsb
es
mov
test
addr16
cmp
movsl
inc
js
jl
jns
orl
sbb
mov
cmp
and
sub
aaa
test
fmuls
cmp
jecxz
das
aam
pop
jo
or
enter
mov
iret
out
mov
repz
aaa
loopne
dec
aad
cltd
ret
enter
int
push
push
insb
test
sub
jo
mov
int
outsw
jp
in
pop
std
out
pop
call
fld
inc
jo
daa
inc
popa
jmp
into
data16
shrl
push
adc
fldl
divb
fsubp
shr
mov
daa
cs
dec
mov
cmp
xchg
rcll
fldcw
in
test
or
jg
es
mov
pop
xchg
jmp
out
push
and
xlat
xor
sbbb
xchg
out
shl
cmpsl
into
insl
pop
jl
or
adc
andb
dec
ljmp
gs
in
scas
jmp
jno
stc
dec
orl
jle
jmp
push
in
popf
push
jge
push
lea
inc
push
pop
jp
idivb
add
popa
mov
bnd
lock
das
xorl
push
or
insl
movsl
out
ds
sub
and
sub
pushf
cwtl
lock
or
xchg
mov
push
cmc
xor
out
fistps
popf
jo
cmc
jae
enter
in
mov
mov
fstpt
inc
cmpsb
push
mov
ret
add
stos
push
pop
cmp
xor
add
jmp
xor
and
or
leave
cmpsb
popl
sub
bound
inc
shlb
adc
and
xchg
aad
mov
sbb
push
xchg
pusha
lret
pop
aam
sub
adcb
push
rcl
ret
jmp
mov
inc
fdivrs
loopne
jae
jmp
dec
stos
jns
sub
push
shlb
push
adc
out
push
sbb
sub
pop
mul
cmpsb
movsl
xchg
ret
aaa
or
fwait
pxor
or
jge
add
jae
mov
jg
loopne
xor
dec
add
loopne
into
mov
cmc
and
aad
or
leave
mov
cmp
inc
and
jge
mov
testb
push
sbb
repz
push
mov
or
sbb
pop
add
int3
cmc
dec
push
popf
pop
mov
leave
jo
test
neg
mov
mov
mull
movsl
inc
decb
rcll
mov
jo
and
and
scas
lahf
push
mov
pusha
jb
xchg
cs
jle
or
fnstcw
shl
out
pusha
out
adc
lods
jno
ret
addr16
test
dec
gs
mov
or
ret
insl
push
mov
xchg
sub
xchg
mov
sub
in
push
ja
adc
sub
sbb
ss
test
xor
mov
jb
dec
sbb
mov
inc
in
sub
mov
roll
aaa
mov
push
push
push
xor
outsl
stos
mov
push
or
xchg
sub
mov
xchg
cmpsb
mov
scas
push
sub
loopne
mov
lahf
cltd
stos
push
imul
jle
push
add
out
sub
int3
jbe
in
out
xchg
push
subl
push
push
shl
outsl
push
xlat
popa
sub
xorl
jb
ja
cmp
mov
loopne
scas
out
leave
in
incl
or
jge
pop
js
push
scas
lock
mov
push
mov
fistpll
int3
mov
scas
int
add
mov
lret
mov
xor
lods
push
jbe
cmp
and
sub
sub
mov
xchg
adc
lret
sbb
icebp
xchg
xor
inc
js
push
jnp
push
loopne
push
andl
jb
call
nop
mov
lock
push
aas
inc
cmpsb
pop
or
xlat
and
inc
shl
jo
test
adc
push
inc
mov
lahf
mov
notb
into
sub
and
and
cmp
bound
and
push
push
push
or
mov
sbb
jecxz
scas
pop
cmc
dec
ficompl
mov
lret
pusha
sub
mov
call
mov
lret
repnz
out
gs
jae
cmp
xchg
ds
lcall
jns
mov
jns
mov
andl
mov
orb
inc
loop
pop
or
test
xor
push
xor
sub
cltd
inc
mov
pop
cmp
sbb
adc
in
cmpsl
mov
cmpl
push
repz
jb
adc
pop
xchg
mov
mov
xlat
bnd
jg
adcb
shlb
jp
and
jge
and
arpl
cmp
cmp
dec
into
pop
call
mov
push
pushf
lret
mov
add
insb
mov
cmc
rorb
decl
push
adc
sub
cmp
sti
or
and
loopne
lods
dec
and
cld
insb
pop
repz
lods
lock
mov
popa
popf
adc
push
pop
adc
cmp
or
shlb
shrl
aad
adc
jg
lcall
xor
rclb
adc
and
mov
sbb
lods
dec
jb
mov
adc
sub
push
les
sub
mov
incb
adc
clc
pop
mov
lcall
aad
dec
push
mov
ror
jne
cltd
mov
and
sub
stc
cmp
or
in
addr16
scas
test
push
mov
addr16
mov
cs
xor
fdivrs
in
mov
mov
xor
cmp
xchg
add
cmp
int
iret
leave
jecxz
cmp
sbb
pop
mov
push
int
jge
test
in
pop
mov
and
ljmp
xlat
mov
rolb
mov
out
int3
adc
pop
push
push
mov
mov
inc
pushf
inc
xchg
lret
addr16
cmp
loop
and
jo
mov
mov
dec
fimuls
cmp
and
test
or
push
pushf
aam
cmp
mov
leave
xchg
movsl
into
push
shll
arpl
pop
in
pop
mov
inc
clc
sbb
or
and
fwait
and
popa
xchg
lds
push
int
imul
or
push
xor
or
movsb
leave
or
xchg
aad
fldl
mov
movsb
es
xor
fisttpll
mov
pop
mov
stc
ds
and
push
mov
mov
fildl
out
mov
mov
sbb
mov
mov
bound
iret
enter
fadds
outsb
das
into
lock
popa
sbb
jae
and
sub
call
shr
sti
ds
mov
cmpsl
dec
inc
inc
and
shrb
pusha
push
call
mov
adc
leave
jle
cltd
dec
mov
add
aaa
outsl
inc
scas
inc
xchg
and
sbb
add
mov
cmp
pop
sbbb
pop
or
or
add
adc
out
xchg
in
add
fidivrl
add
add
mov
push
add
popf
pop
adc
orb
mov
enter
push
insl
pop
ss
and
dec
test
cmpsb
xchg
rolb
lret
shl
jp
iret
mov
push
lock
push
stos
inc
or
cmpsb
push
mov
mov
loop
ds
in
push
in
or
fwait
mov
into
push
mov
xchg
and
push
mov
nop
jb
and
std
mov
pop
test
icebp
or
icebp
bound
outsl
addr16
in
sbb
push
pop
mov
mov
out
cmp
mov
mull
aam
xchg
mov
arpl
xchg
scas
sti
pop
push
fisubs
jb
and
pushf
adc
jo
push
lcall
ret
pop
cmpsb
xchg
pop
mov
outsb
inc
sbb
jbe
iret
push
cmp
xor
cmp
sbb
xor
sbb
cwtl
adc
push
sbb
data16
adc
lods
push
std
mov
stos
dec
mov
dec
adc
rclb
test
rcll
or
test
fmull
popf
mov
xor
lods
jae
in
pop
dec
pushf
test
bound
jb
xchg
xchg
mov
dec
ss
jne
push
push
dec
sbb
insb
push
shl
xor
iret
fsubrs
popa
xor
out
int3
ds
push
cmp
ret
aad
out
add
mov
es
jl
dec
cli
mov
or
add
mov
aas
insl
push
clc
cld
xor
lock
inc
fwait
into
push
out
mov
fisubs
dec
rcrb
sahf
xchg
ss
out
jl
test
xlat
in
adc
loopne
mov
inc
mov
out
xlat
adc
xlat
sbb
jg
sub
outsb
inc
dec
push
xchg
enter
shrl
xor
hlt
lret
jg
add
mov
xorb
cltd
ja
or
outsb
mov
push
jmp
pop
mov
jno
mov
loopne
mov
test
repnz
or
or
fmuls
arpl
stc
jmp
fstpt
jne
or
mov
cwtl
fcom
lcall
push
test
in
popa
js
push
cwtl
sarb
repnz
insl
sbbl
jno
stos
mov
dec
lret
add
shrb
xchg
shlb
leave
cmpsb
push
mov
rolb
xchg
je
repnz
adc
sub
mov
into
pop
cli
movsl
cmpsl
movsb
lahf
jle
cmp
sbb
sbb
jmp
int3
pop
jne
stc
xchg
jne
or
fiaddl
aas
dec
jmp
ret
ss
fnsave
lret
aad
adc
shrb
inc
mov
dec
addl
ss
xchg
cmp
ficoms
bnd
icebp
inc
std
je
in
insb
arpl
mov
pop
fisubrl
cmp
jbe
and
sub
ret
sbb
push
nop
in
xor
sbb
inc
clc
add
ds
mov
movsb
jb
outsb
push
jne
jbe
repnz
or
adc
xor
rcr
jbe
mov
push
mov
mov
sub
cltd
pushl
test
mov
movsl
adc
fwait
int3
sbb
aas
adc
sbb
std
adc
fsubrs
icebp
std
incl
pop
clc
lcall
enter
cli
in
lahf
jbe
jns
pop
daa
jnp
mov
in
jbe
adc
pop
outsl
jg
sub
leave
rorl
repz
or
adcb
xchg
loop
les
outsb
xchg
mov
add
lcall
pop
jp
and
xor
push
jno
cmpsl
and
xchg
imul
mov
and
adc
lods
inc
mov
insb
xchg
fwait
push
dec
xchg
lock
popf
vmread
dec
shlb
stc
or
sub
jecxz
sahf
mov
xchg
xchg
out
movsb
insb
hlt
nop
lods
jle
outsb
pusha
mov
lahf
xchg
loopne
movntq
push
and
pop
pop
sahf
hlt
jb
lods
stos
jl
cmp
daa
ret
or
imul
pusha
jbe
clc
add
sahf
adc
pop
negb
notb
jno
adc
jecxz
and
add
in
xchg
push
ds
pushf
mov
call
mov
cmpsl
adc
or
lods
mov
add
ja
xchg
dec
popa
jmp
sti
sub
pop
inc
hlt
jl
sahf
jge
jl
push
movsl
push
int3
aad
dec
xor
pop
cmpl
mov
ss
jo
mov
outsl
out
pop
mov
pop
insb
outsb
jp
lods
ja
sbb
pop
in
test
push
pop
add
outsl
addr16
mov
xchg
xor
inc
or
adc
roll
stos
lea
lods
add
sarb
xchg
rolb
test
stos
cmp
add
xchg
popa
jno
imul
add
jae
cmpsb
adc
cltd
cmpb
cltd
daa
cmp
xchg
fsts
mov
pop
enter
stos
add
mov
ja
adc
or
mov
fs
leave
imul
jne
and
xchg
lret
sub
test
test
popf
rcl
push
mov
les
push
pop
push
ds
xchg
pop
idivb
or
mov
je
ja
shrl
pop
lret
jmp
inc
sbb
dec
push
loop
test
jb
and
mov
jb
scas
sub
outsl
xchg
popf
sahf
pop
pop
cld
jno
mov
sub
or
adc
lcall
sbb
mov
pusha
xor
icebp
jne
jle
xor
aam
jne
lock
stc
mov
pop
stos
push
xchg
and
lock
sbb
lods
mov
xchg
xchg
adc
push
add
pop
and
mov
jmp
pop
gs
mov
dec
stos
js
repz
jp
xchg
xor
shlb
je
imul
xchg
pop
bound
cmp
mov
rcll
jecxz
sub
jns
movsl
aas
xor
mov
ds
dec
mov
fs
fsubl
daa
lret
push
sub
push
data16
mov
inc
xor
js
xlat
dec
popf
lret
mov
out
mov
cmp
dec
pushf
jb
repnz
dec
lock
out
pop
add
mov
push
mov
and
or
add
outsb
mov
iret
dec
or
lea
mov
jecxz
fsubrs
push
inc
fldenv
mov
daa
out
out
adc
cld
push
or
xchg
xchg
jnp
mov
mov
xchg
xor
ja
adc
aaa
pop
popa
jecxz
xlat
push
daa
add
adc
lret
adc
in
js
hlt
jno
xchg
xor
aaa
inc
mov
add
jne
je
or
cmp
mov
fiaddl
iret
mov
push
xlat
neg
adc
fs
lcall
sbb
sahf
dec
mov
push
sbb
mov
fsubl
inc
iret
cmpsb
dec
inc
or
fwait
xchg
insb
pop
cmp
rcll
xchg
pushf
shlb
mov
nop
pop
ret
sbb
leave
dec
jno
pop
out
or
nop
adc
dec
xchg
inc
pushf
out
push
inc
scas
fcmovnbe
jg
and
mov
or
insl
push
ror
dec
push
add
jg
fnsave
mov
cli
sbb
outsl
jno
jle
mov
jb
in
sbb
jmp
nop
pop
cmc
push
mov
cs
fsubs
mov
rcrb
mov
push
mul
mov
fcompp
pop
xlat
mov
xchg
adc
jbe
add
test
and
hlt
xor
add
adc
in
aam
shlb
pop
jbe
es
inc
push
push
std
and
ret
rorb
sub
pop
lods
push
sbb
je
xor
dec
out
popf
callw
sbb
push
lret
pop
jp
inc
or
cmpsl
stos
enter
dec
rorb
lret
lret
add
mov
add
sahf
wbinvd
sub
les
or
addl
cmp
mov
je
xor
pushf
xor
inc
push
sbb
jg
dec
inc
outsl
ret
cmp
jnp
cld
rolb
pop
inc
mov
popf
jo
mov
mov
scas
and
xor
movl
cmp
add
iret
cmp
inc
sbb
iret
cmpsl
pop
xlat
inc
leave
out
mov
fimuls
clc
out
orb
les
xlat
test
lods
and
xchg
and
and
cli
hlt
inc
loopne
mov
cmp
stos
sub
iret
ss
mov
push
int
jg
mov
mov
inc
dec
movsb
xchg
sub
push
adc
ds
lods
outsb
shl
cmpsl
pop
into
repnz
inc
stos
sub
sbbl
fcmovbe
push
cli
jle
js
mov
test
jae
into
sbb
mov
mov
sub
ja
fsubl
ret
jne
pop
mov
xchg
xchg
lods
mov
orb
xchg
cmp
dec
mov
gs
lock
lods
in
daa
sub
pop
and
rcll
fildll
mov
xor
rorb
push
xchg
sbb
nop
testb
jnp,pt
lea
aaa
aad
lahf
decb
aad
add
enter
ficompl
mov
adc
js
filds
push
adcl
icebp
mov
iret
xchg
xchg
xchg
cmp
mov
into
leave
mov
bound
inc
orl
jb
or
insl
int3
jmp
cmp
pop
mov
mov
mov
mov
or
lods
cmpb
mov
das
and
mov
test
sar
mov
fadds
iret
movsl
jle
pop
shrb
cmp
push
mov
cmp
sbb
pop
push
test
jge
out
fwait
push
stos
loop
aas
adc
cmp
mov
cmp
or
test
inc
into
push
pop
out
xor
push
lds
mov
pop
xor
mov
cli
dec
outsl
mov
lds
and
cs
aas
xchg
pop
xor
pushf
jmp
pop
shl
ret
xor
fcoms
ljmp
bound
push
sbb
xchg
sahf
mov
cmpsl
cmp
movsl
repnz
std
loope
sbb
ficomps
jmp
jg
or
leave
shrl
stc
stos
repz
and
outsl
jle
pop
xor
jle
fdiv
ret
iret
cmp
mov
ret
bound
pop
fcoml
pop
or
inc
ja
mov
pop
push
adcl
mov
add
cmc
je
mov
popf
movsl
out
mov
xor
push
dec
or
xchg
add
movsl
loop
ljmp
sbb
cmp
lock
lcall
dec
and
sbb
mov
push
or
mov
pop
jecxz
iret
fbld
mov
stc
xor
mov
cmpsb
lea
pop
rcrb
loopne
cli
cmpsl
cwtl
scas
mov
adc
addr16
sbb
xlat
sub
ret
icebp
outsb
cs
jae
mov
daa
hlt
dec
cmp
insl
push
or
leave
pop
mov
pushf
mov
je
std
lea
or
fsts
cmp
je
test
sarl
cmp
outsl
adcb
and
enter
scas
bound
cld
sahf
dec
aad
add
dec
rcrb
xor
push
jmp
jl
imul
lea
ss
jne
push
sahf
daa
fldt
dec
aad
cmpsl
dec
sbbl
jns
jbe
enter
jg
fsubrl
pop
scas
bound
fists
mov
roll
dec
outsl
aad
out
insl
stos
push
test
addl
xchg
mov
cmp
add
mov
push
pop
je
hlt
lret
jge
hlt
dec
mov
add
and
adc
and
lret
push
jb
cs
test
cmpsl
add
push
leave
js
xor
loope
push
or
inc
pop
hlt
out
mov
mov
fnsave
mov
jae
daa
test
orb
adc
inc
mov
das
jp
jns
loopne
in
cmp
sarl
jns
cmp
sahf
in
pusha
push
gs
in
xor
pushf
inc
fidivrl
jecxz
mov
sahf
movsl
test
sub
aam
mov
cmp
in
mov
sub
loopne
mov
adc
jmp
mov
out
pop
push
pushf
cmp
test
xor
and
mov
dec
jmp
popa
cmpsl
jns
adc
jecxz
mov
pop
fwait
lcall
and
sub
jle
add
fisubrl
das
addr16
ljmp
xor
arpl
pop
mov
mov
xchg
adc
and
jle
sub
xchg
sbb
or
imul
out
ja
test
dec
and
cmc
cmp
in
test
jb
ficoml
cmp
aam
pop
inc
add
inc
lret
sbb
pop
sti
sbb
jnp
test
add
cli
add
movsl
adc
pushl
pop
add
and
jne
and
or
mov
movsb
insl
mov
pop
xchg
and
pop
pushf
ret
inc
xchg
in
jle
ja
cld
add
outsb
cmp
jecxz
stos
mov
outsl
or
dec
pusha
andl
xor
add
jecxz
je
fstpl
xor
xchg
xchg
mov
cmpsb
std
or
or
fyl2x
rcr
out
push
sub
jg
sbb
not
inc
mov
lea
mov
add
and
aaa
int3
push
cmpsb
mov
mov
out
add
das
rolb
mov
shlb
sub
fists
sbbl
mov
add
insb
out
xchg
pushf
jne
int
insl
add
and
loop
ficompl
cli
clc
xor
into
or
shll
and
dec
and
insb
sahf
push
and
lret
mov
mov
pop
xor
ficomps
jnp
sub
pop
mov
cmp
arpl
ss
cwtl
gs
inc
and
ja
jbe
les
jo
sahf
mov
mov
sbb
push
stos
js
sub
fsubs
lds
mov
inc
inc
sbbb
and
inc
xor
xchg
or
mul
adc
mov
sti
inc
mov
test
mov
fdivrs
inc
add
popa
xchg
add
cmp
mov
rolb
mov
mov
cmp
fisttpll
mov
push
cltd
mov
adc
pop
inc
sbb
out
xchg
sahf
outsl
sub
pop
cltd
push
inc
stos
sbb
sbb
scas
xchg
pop
adc
jecxz
in
scas
ljmp
push
mov
ljmp
cmp
mov
addb
jnp
aam
test
mov
xor
jo
xor
lret
xor
inc
jl
int3
dec
push
std
pop
inc
imul
mov
dec
insl
push
xchg
test
out
sbb
pusha
je
pop
out
jmp
inc
mov
cli
sub
sub
imul
lret
pop
mov
ss
pop
fmuls
push
cmp
xor
jbe
mov
adc
inc
cmp
insl
xor
mov
xlat
sub
add
mov
sbb
lea
test
xor
add
repz
ret
mov
pusha
outsb
out
jb
addr16
loope
daa
arpl
loopne,pt
stos
pop
xor
out
inc
mov
outsl
fidivrs
sub
lds
dec
sarl
cmpsb
jbe
xchg
loopne
mov
cwtl
mov
pop
int3
push
sub
popa
xchg
or
gs
leave
sbb
sahf
flds
push
scas
push
sahf
shr
rcrb
sub
jo
sti
mov
sbb
xor
lahf
dec
hlt
pop
aad
rcll
imul
popf
jl
jmp
sbb
add
or
shrl
mov
xchg
adc
mov
jno
lods
jne
les
xchg
cs
les
jmp
add
in
mov
sbb
lcall
xchg
stos
adc
mov
cmp
or
clc
lds
cltd
icebp
sbb
imul
cmp
xor
mov
out
jecxz
mov
sbb
movsl
mov
popa
inc
lods
test
inc
inc
jno
popa
jne
call
orb
out
xor
sub
jo
aam
jo
cmpsl
and
insb
sbb
lock
pop
cmpb
mov
pop
cmp
rorb
cmp
ss
data16
lcall
pop
jns
mov
js
imull
pop
mov
rorl
mov
loop
addb
cwtl
xor
adc
lock
gs
cmp
xlat
ss
xchg
add
popa
mov
xor
jo
loop
insb
jno
pop
dec
int
ds
fbstp
test
cmp
mov
or
sub
test
cmp
out
sbb
mov
orb
divl
inc
sar
aaa
cmc
les
jns
inc
js
popa
mov
mov
xor
outsb
jge
outsb
mov
repz
inc
imul
xchg
aaa
fmuls
sbb
scas
jl
jp
mov
insb
andl
imul
jne
call
cs
sub
sbb
mov
cmp
rclb
and
inc
xchg
jp
jne
cmpsl
popa
in
inc
bswap
push
mov
aas
dec
sbb
add
dec
mov
sbb
xor
push
stos
shl
shrb
shr
ret
lahf
push
lret
repnz
sub
push
adc
imul
std
ror
data16
xchg
xchg
mov
call
jmp
xchg
or
sbb
adc
jo
out
push
movsb
or
das
mov
mov
mov
mov
xchg
orl
push
fidivrl
pop
test
xchg
fiaddl
push
addl
lea
movsb
xchg
push
xor
js
pop
incb
ret
push
dec
xchg
add
pop
inc
adc
mov
xor
dec
or
cmp
pop
add
cltd
fnstenv
outsl
cmp
add
in
push
aam
movsl
push
sbb
sbb
sti
sub
inc
movsb
xorb
mov
dec
loopne
xor
cmp
or
sbb
sbb
and
mov
imul
lds
sti
fmul
gs
or
and
push
int3
jmp
lock
lods
or
push
inc
adc
xchg
addl
fwait
xor
dec
jo
adc
dec
dec
or
xchg
push
mov
enter
push
mov
or
cs
pop
ss
lods
xchg
fisubs
in
push
ror
dec
pop
push
pop
dec
outsb
sbb
outsl
icebp
push
test
fs
rclb
loopne
jmp
sahf
insl
mov
and
outsb
fld
scas
shll
outsl
and
or
mov
gs
push
decl
rcr
in
adc
jne
xor
imul
inc
mov
icebp
adc
mov
push
cmp
stos
jmp
stos
ficomps
rcl
jbe
inc
out
pop
inc
push
lcall
cmc
push
jg
jg
inc
cmp
pop
shrl
push
out
shrl
and
mov
mov
push
inc
loop
mov
jbe
ret
jg
push
cmp
movsb
push
jmp
cli
mov
scas
sbb
mov
mov
pushf
jl
adc
out
int3
pushl
jne
mov
cmp
dec
rorl
jl
or
dec
mov
pop
nop
jns
xor
lea
imul
jno
mov
in
mov
adc
loope
and
sbb
insb
mov
push
insl
subb
test
inc
mov
je
pop
xchg
in
cs
xchg
pop
ja
es
push
fsubl
push
adc
adc
out
hlt
cmp
jnp
pop
sarb
test
ds
dec
jle
jmp
test
out
out
inc
insl
jmp
std
negb
insb
stc
cmp
scas
rorl
aaa
fmul
repz
mov
into
mov
stc
dec
lcall
inc
xor
jb
jle
jp
adc
cmpsb
mov
pop
clc
push
sub
shl
nop
dec
cs
js
and
fildl
in
insb
sub
cli
popa
and
mov
inc
inc
mov
mov
xor
mov
cmp
pop
call
adc
xor
dec
xchg
adc
daa
mov
test
add
imul
jecxz
inc
mov
push
mov
add
sbb
adc
mov
adc
push
jp
daa
fists
fucomi
fmul
call
jmp
push
and
lods
push
insb
adc
in
jge
push
mov
dec
pop
xor
std
loope
int
popa
inc
rcl
test
pop
fmuls
dec
iret
push
mov
dec
mov
out
xchg
or
movsb
jnp
add
pop
andb
mov
bswap
mov
xor
mov
push
inc
jo
mov
xor
hlt
pop
stc
rolb
iret
pushf
sti
outsb
insb
outsl
cmc
inc
xchg
jns
push
pusha
popa
mov
dec
sub
jge
aaa
adc
adc
fidivl
add
xchg
in
jg
jne
mov
aam
dec
push
iret
ret
xor
mov
mov
jns
loop
leave
int3
outsb
cmpsb
push
or
sbb
dec
ds
add
js
pop
add
jl
xor
add
popf
repz
mov
data16
pop
pushl
clc
and
sahf
lds
jo
cmp
push
cmp
jle
mov
fisubs
xchg
popf
cmp
daa
lock
or
dec
push
inc
pop
push
sbb
mov
fwait
push
sahf
pusha
dec
repz
add
fwait
stos
int3
cmp
in
cltd
out
insl
js
sub
vpsubb
sub
sti
mov
pop
pop
push
cmp
pop
js
jl
aam
lods
sahf
addr16
loope
sub
mov
dec
in
fcoml
out
mov
or
and
enter
sub
xor
jbe
std
inc
out
xchg
or
daa
mov
and
jg
add
sub
mov
popl
push
aam
pop
xor
popa
pop
daa
pop
pop
mull
push
pop
mov
int
xor
jmp
jb
jg
fmuls
mov
scas
dec
or
cli
xchg
ror
adc
mov
and
cmp
and
sbb
enter
repz
jg
lret
dec
push
aas
adc
mov
sub
xchg
negl
jecxz
mov
add
jns
and
xor
cld
popf
push
in
repz
sarb
push
mov
jg
rcrb
push
ret
imul
inc
push
and
lods
sub
test
fldt
call
inc
push
push
sbb
int
jae,pt
arpl
rcr
iret
addr16
jg
mov
out
gs
add
cmpb
xchg
cmc
pop
jg
int3
push
ljmp
outsl
mov
adc
enter
icebp
sbb
pushf
lret
xchg
jae
jo
shll
fadd
mov
mov
outsb
xchg
mov
call
sbb
push
push
movsl
scas
call
mov
xchg
test
rcr
xlat
or
sub
pop
pop
inc
lods
lahf
dec
dec
int3
add
test
cmpsb
notb
movsb
jg
aad
out
mov
push
pop
cmp
pop
lcall
test
jbe
dec
and
sub
jge
cmp
mov
idivl
xchg
xchg
call
adc
mov
lret
std
jl
dec
inc
int3
jmp
shlb
call
xchg
dec
ret
stc
jo
pushf
mov
movsb
in
jo
and
pusha
xlat
frstor
lea
sbb
mov
and
int3
adc
repz
sub
adc
fisttps
pushf
mov
or
insb
leave
sbb
repnz
lds
fildll
mov
adc
lret
cmp
ret
jge
jp
in
das
xor
movsb
dec
cld
mov
push
push
sub
movaps
rcrl
orb
int
es
outsl
ret
adc
fists
mov
roll
pop
pop
mov
sub
sub
outsl
lret
dec
sbbl
xchg
dec
aad
sbb
jp
adc
push
xor
inc
je
orl
dec
imulb
jge
and
repz
rclb
cli
adc
xor
sbb
popf
mov
jp
push
xchg
fnsave
scas
mov
jnp
in
sbb
in
xor
addl
jnp
lahf
xchg
mov
int
bound
ss
gs
movsb
pop
sub
cmp
jp
les
xor
xlat
fldenv
xchg
pop
rclb
push
lcall
or
inc
sbb
mov
frstor
aaa
adc
adc
cmp
push
xor
cmc
jmp
or
loope
loop
nop
xchg
sarl
and
mull
decb
mov
data16
xchg
enter
jns
gs
xor
sub
and
pop
cmc
cmpsl
mov
and
cs
mov
mov
push
std
mov
cmp
mov
jmp
push
cmp
in
pop
bound
mov
filds
fnstsw
sub
ret
jg
xchg
sbb
mov
jge
in
sti
push
mov
dec
xlat
dec
lods
mov
int
inc
leave
cmp
dec
push
loopne
jb
pop
stos
xchg
and
add
inc
enter
iret
std
mov
aaa
stos
lcall
scas
mov
inc
jle
orl
pop
fistpll
pushf
dec
rorl
mov
fsubrs
inc
cld
enter
push
test
mov
adc
jbe
xchg
xlat
jae
mov
xchg
sub
lcall
or
push
ss
mov
rcl
mov
out
aad
mov
mov
call
sub
push
pushf
int3
adc
divb
jbe
mov
xor
popa
ljmp
movsb
jp
mov
push
adc
mov
or
lods
or
jbe
clc
loope
or
rolb
add
jmp
xchg
stos
sub
aaa
inc
add
or
pop
out
lea
je
cmp
outsl
sbb
adc
sahf
test
mov
fdivrl
jmp
notl
hlt
pop
mov
push
lds
add
jno,pt
fcoml
les
shrl
imul
xchg
mov
cmp
push
jmp
push
arpl
jns
sbb
jns
mov
add
cmp
sub
or
int3
xchg
inc
jmp
xchg
int
jle
js
pop
pop
cmp
mov
push
xor
cmp
xor
mov
mov
xor
mov
cmp
cmp
rcl
in
mov
lds
test
pop
inc
cltd
ret
movsb
cmp
in
xor
pop
cli
dec
lock
mov
fidivrl
mov
test
cmpsl
cmc
jecxz
int
dec
bound
pop
call
outsb
push
jecxz
test
xchg
lcall
je
jecxz
call
pushf
mov
out
cmc
rcl
jno
arpl
mov
sub
or
aas
pop
in
cmp
and
xorb
push
cs
clc
and
mov
shl
pop
loopne
das
inc
out
mov
add
dec
push
push
xchg
jle
push
cltd
xchg
jge
dec
cltd
cmp
aam
mov
cli
xchg
dec
dec
das
push
sbb
pop
mov
sti
jno
cmpl
fs
mov
aad
test
inc
xchg
movsb
cmp
push
orb
scas
push
and
dec
or
mov
add
sub
aam
jns
jo
shlb
out
inc
fdivs
mov
iret
xchg
mov
or
nop
sarb
lods
mov
aad
int
scas
cltd
xor
cmp
pop
xchg
or
lret
fs
je
pop
pop
xor
call
gs
push
push
add
sub
push
movsb
jnp
sbb
mov
das
mov
fstps
data16
ret
xchg
inc
inc
add
pop
sub
lahf
insb
es
lret
loop
mov
xchg
adc
inc
into
int
popf
xor
ss
adc
in
int
mull
out
icebp
cmp
mov
stc
pop
loope
add
lock
add
sub
jecxz
cmp
mov
jbe
add
push
scas
fdivrp
and
sbb
and
pop
pusha
add
push
xor
inc
std
adc
jp
or
adc
mov
push
xchg
or
mov
subb
mov
xchg
lret
mov
push
push
jne
fs
add
or
cld
adc
mov
xor
dec
cmp
outsl
lds
dec
aas
inc
lea
mov
mov
divl
push
jo
pop
addl
xchg
xchg
sbb
popa
mov
xor
dec
add
scas
jecxz
sti
cmp
cmpsl
inc
and
and
popa
sahf
mov
rorb
sbb
fisttpll
push
lret
mov
and
imul
xchg
adc
push
adc
movsl
jno
pop
lahf
pop
leave
cmp
cmp
mov
mov
outsl
push
aad
dec
outsb
inc
stc
es
sarb
jecxz,pt
sub
xor
jno
mov
inc
add
clc
or
sbb
sti
cmp
push
xchg
in
imul
call
ds
pop
ljmp
sub
int3
dec
xchg
cmpsb
jle
mov
ret
cmpb
iret
mov
mov
sub
test
pop
and
dec
cmp
adc
arpl
popf
mov
pop
push
bound
jae
stos
fsubrs
and
jae
pop
adc
nop
repz
push
fbld
or
or
loopne
jle
cli
fidivrl
jne
out
fcom
sbb
bound
scas
insb
xchg
mov
out
dec
outsl
fnstenv
sti
inc
xchg
and
or
inc
adc
or
xchg
push
mov
cmp
and
data16
fidivrs
sbb
aaa
and
rorb
jo
bswap
sbb
popl
addr16
ja
into
dec
clc
cmp
daa
dec
push
pusha
inc
inc
and
lahf
out
xchg
sti
jo
pop
mov
mov
popf
std
repnz
lods
mov
cs
ss
fs
jnp
shl
pop
mov
and
mov
dec
das
lods
cmp
xchg
xchg
xlat
dec
scas
xchg
popf
xchg
sub
xor
loop
popf
mov
lcall
xchg
mov
subl
addr16
scas
enter
cmp
mov
inc
insl
outsb
add
dec
mov
sbb
dec
scas
inc
and
or
mov
pushl
subl
fmuls
ret
adc
aaa
repz
jnp
cld
iret
push
jbe
cs
adc
into
leave
pop
hlt
popl
cmp
mov
shlb
mov
aas
inc
je
flds
or
inc
rcr
xchg
outsb
dec
rorl
fadds
jbe
inc
rclb
ret
cmpb
iret
mov
push
movsb
data16
jns
lods
iret
sub
push
or
mov
push
jne
aad
or
cmp
or
or
mov
mov
test
jmp
sti
sbb
adc
je
cmc
cmp
mov
sti
lods
int3
fildll
lea
sahf
jl
dec
or
pop
sbb
jae
sbb
xor
aad
jb,pt
mov
add
mov
cmp
popa
mov
mov
loopne
add
nop
ret
jb
ljmp
insb
iret
inc
or
fwait
pop
insl
out
sbb
sub
jl
cli
in
xchg
push
pop
jns
mov
popa
dec
pusha
pop
adc
xchg
jp
xrstors
jle
sti
dec
in
enter
addb
ret
dec
pop
stc
mov
in
test
mov
shll
pop
fdiv
cmp
pop
lea
sti
mov
mov
adc
fwait
sbb
gs
add
call
and
out
scas
std
push
push
mov
pushf
data16
inc
adc
in
adcl
in
inc
ret
fs
and
push
mov
mov
mov
les
clc
out
cwtl
xor
pop
adc
adc
daa
inc
sar
data16
pop
jbe
inc
jmp
push
fnstenv
and
and
pusha
out
sbb
enter
xor
add
mov
insb
clc
push
mov
outsb
dec
test
jp
push
cmp
add
or
imul
int
cmp
sbb
ss
pop
cmpsl
shlb
xchg
sub
sub
not
hlt
into
rorl
lahf
arpl
xor
imul
mov
pop
cmc
rcll
jecxz
clc
mov
pop
decl
jmp
mov
lret
jl
mov
shlb
mov
fnstcw
les
mov
scas
test
fldcw
cmpsb
dec
mov
movl
mov
loop
mov
dec
test
fistpll
dec
outsl
stos
cmovno
sub
xor
jmp
mov
pushf
stos
pop
lret
xor
repz
jge
shlb
icebp
lret
xchg
cmc
mov
cli
lea
sbb
sub
cmp
mov
mov
xchg
and
inc
scas
xchg
adc
jno
push
mov
outsl
dec
xchg
add
lock
push
inc
sbb
or
imulb
out
loop
xchg
mov
fldt
sbb
jne
mov
fldt
sub
int
xchg
pop
jno
jbe
jns
cwtl
sub
loope
cli
in
jmp
outsb
add
jp
inc
jge
pop
mov
aaa
adc
rcrl
test
mov
mov
movsb
lcall
and
mov
movsl
xor
sbb
arpl
jne
add
adc
adc
cmpsb
mov
iret
sbb
pop
mov
jne
les
mov
icebp
push
cmpl
mov
mov
idivl
xchg
shl
int
xor
cmp
mov
sbb
push
scas
pop
pop
push
scas
jecxz
mov
enter
adc
pushf
push
les
ret
mov
adc
popf
push
push
pop
icebp
pop
outsb
inc
fmul
xor
rcrb
adc
jmp
pop
mov
pop
jbe
push
ja
dec
lock
and
ds
add
lret
std
aas
mov
inc
imul
xchg
xlat
cmp
jns
lahf
mov
pop
jns
xchg
ds
test
movsl
cmp
in
test
lret
push
sub
aaa
lock
mov
or
or
pushf
fcoms
adc
repz
cmp
movsb
fs
outsl
fnsave
shll
jbe
inc
jnp
imul
sub
das
mov
sahf
jne
shll
jno
push
imul
cmp
divl
or
arpl
mov
push
jecxz
shr
ss
xor
xchg
or
popa
aam
out
dec
dec
pusha
push
repnz
or
stos
jg
ja
addr16
fidivrs
popa
cmpsl
mov
adc
orl
mov
aaa
xor
fsubl
repnz
ljmp
jmp
ds
jae
and
push
jno
pop
out
xchg
mov
pusha
dec
in
subl
shlb
cmp
add
or
xor
jnp
test
mov
sbb
inc
lea
test
push
fdivrp
lahf
and
or
mov
fisubrl
fnstcw
bound
dec
insl
fdivs
mov
aad
fisubrs
lods
ja
cli
std
sbb
xchg
lds
sbb
into
add
mov
shll
decl
ss
jns
sti
mov
add
repz
popa
cwtl
loope
push
push
cmpsb
xchg
fisttps
stc
pop
push
sahf
out
mov
stos
cltd
lods
or
and
mov
shrl
mov
fld
xchg
and
jge
pop
push
mov
sub
and
sti
mov
fbstp
sub
ljmp
mov
and
inc
dec
mov
mov
movsl
scas
xchg
mov
test
repz
mov
sub
andb
sbbl
lds
mov
stc
inc
out
into
dec
mov
inc
jg
pop
pusha
jmp
das
aas
test
inc
out
pop
jno
fwait
bound
push
in
jmp
mov
into
out
add
cmpsb
xchg
mov
scas
xchg
into
dec
xchg
sub
jg
ja
addl
jb
pop
xchg
xor
dec
and
ret
cmp
nop
pop
xchg
addb
inc
sub
push
pusha
test
mov
mov
fwait
mov
sbb
push
lock
and
test
jbe
xchg
pop
push
shrl
pop
stc
jae
pop
ljmp
or
push
mov
cld
mov
fsubrp
sub
jb
test
popa
inc
add
cli
push
aad
outsl
test
or
rcrl
push
push
mov
lret
call
xchg
mov
aaa
bound
jns
push
mov
cmp
iret
stos
mov
mov
arpl
mov
mov
adc
je
out
cltd
jle
add
sub
dec
pop
ret
xchg
cmpsb
jl
icebp
jae
int
push
jmp
xor
adc
movsb
xchg
test
bound
scas
stc
pop
or
xchg
mov
fnstsw
sub
mov
sbb
sarl
jno
sbb
and
or
xchg
or
xchg
mov
cld
cmp
out
addr16
or
xor
or
cld
icebp
xor
pushf
aad
cwtl
shll
jnp
fstl
aas
daa
loop
push
push
mov
popf
lds
loope
add
in
out
pop
sbb
daa
divb
rol
fwait
xlat
popf
test
aaa
and
pop
and
lahf
xor
sbb
xchg
repnz
inc
sub
clc
mov
bound
mov
adc
ljmp
push
adc
pusha
push
mov
outsl
mov
repz
push
mov
push
push
mov
adc
pusha
clc
outsl
pop
or
push
cmp
inc
std
dec
test
int
xchg
les
jecxz
and
aad
lock
adc
daa
pop
stos
jge,pt
inc
xchg
pop
xchg
pop
stos
xor
sbbl
xor
jecxz
movsl
mov
push
test
pop
dec
pop
push
sub
mov
cmpsl
repz
pop
int3
pop
add
repnz
dec
sahf
test
fldt
pop
pop
jmp
dec
aaa
pusha
xchg
dec
mov
add
add
pop
pop
lret
sbb
sbb
and
cld
jp
mov
in
fidivs
lods
adc
jmp
rorl
and
mov
outsl
test
test
add
xchg
push
push
lds
and
xchg
jns
or
icebp
stos
mov
and
mov
inc
movsb
je
outsl
movsl
lds
push
into
dec
fs
adc
add
adc
dec
aam
mov
sbbb
fidivs
adc
adc
roll
negl
movsb
mov
jp
test
xchg
mov
sbbb
imul
fcmovu
and
decb
fisubs
jae
mov
xchg
jne
pop
mov
pop
push
cmp
and
xchg
xor
pushf
loope
sub
out
adc
sar
mov
fstps
sbb
test
cli
mov
frstor
sub
push
xchg
xlat
add
push
shll
cmpsb
push
fwait
das
inc
scas
gs
mov
xor
mov
pop
test
out
nop
mov
bsf
data16
mov
dec
push
aam
jle
arpl
and
sbb
imul
orb
dec
xchg
xor
push
inc
stos
cli
inc
sahf
mov
sbb
lret
xor
and
repz
push
mov
or
mov
and
add
stos
mov
dec
pusha
fs
and
or
mov
pop
js
dec
std
hlt
inc
sbb
add
xchg
arpl
ficompl
inc
popf
jno
vpsubw
mov
sub
mov
xchg
inc
xchg
add
out
adc
data16
pavgb
enter
push
pop
adc
push
cmpps
add
add
xchg
add
push
adc
add
mov
pop
in
pop
pop
int3
mov
jns
sub
bound
push
hlt
ret
aaa
jp
lds
in
daa
mov
in
adc
rcrb
int
jae
lds
mov
and
sub
mov
mov
adc
pop
addr16
mov
scas
push
sbb
inc
mov
lret
repnz
std
xchg
sarl
insl
mov
mov
jge
shl
push
adc
jecxz
sbb
jne
outsl
hlt
lods
jo
js
mov
mov
int
jbe
add
ljmp
lahf
push
in
repnz
fmuls
in
add
mov
sahf
jp,pt
mov
jne
ja
lea
fmull
ljmp
cmp
or
add
push
mov
and
mov
js
push
mov
icebp
in
arpl
lods
add
clc
fisubrs
pusha
or
pop
mov
shlb
jmp
jp
lea
outsl
add
addb
inc
lds
push
xor
lock
ss
mov
jbe
cmpsl
cmp
adc
psubw
insl
int
xor
inc
popa
sbb
out
mov
jmp
add
inc
pop
jns
sub
fcoms
scas
orb
divl
add
cwtl
loope
loop
popa
cmpsb
mov
and
fwait
cmp
cmpsb
clc
add
sub
fiaddl
mov
mov
int3
icebp
stos
addb
dec
aad
inc
ss
sbb
cmpsl
or
popf
lods
ret
lahf
add
push
mov
lods
xchg
enter
popf
mov
insl
sbb
fsincos
mov
adc
jbe
mov
pop
xchg
jnp
adc
add
out
and
mov
fmull
or
ja
cmpsb
jb
mov
fsin
test
imul
fisubrs
sub
pop
int3
cmp
mov
call
cmpl
stos
punpcklwd
repz
sti
inc
adc
popf
dec
test
add
push
jae
ja
in
frstpm(287
in
push
nop
xorl
enter
loopne
repz
push
negl
xchg
mov
int
push
pop
xor
stc
xor
inc
jae
mov
iret
insl
push
outsl
repz
xorb
out
jns
int3
push
xlat
pop
movsb
mov
and
in
inc
lcall
xchg
sahf
pusha
iret
pop
loopne
cmpsl
shll
in
push
adc
pop
inc
iret
adc
sub
inc
push
lods
stc
bound
iret
push
xlat
cltd
mov
mov
rcl
rorl
fcompl
sub
je
test
insb
jle
lret
cwtl
xchg
popa
mov
aas
pop
mov
je
push
repnz
or
cli
ret
push
out
filds
pop
orb
lret
adc
xor
fisubrl
adc
lds
xor
mov
test
popa
lret
xor
sbb
cmp
cmp
jp
call
push
add
sbb
sub
shrb
xchg
inc
cmp
jne
mov
push
sbb
mov
movsb
stc
mov
js
incb
mov
gs
jl
push
lods
mov
insb
adc
pop
insl
pusha
mov
mov
out
pop
scas
or
in
bound
dec
mov
lock
jae
cmp
dec
lods
jns
std
lahf
sbb
out
outsb
cmp
nop
aaa
cmpsl
pushf
xor
hlt
negl
and
fistpll
jo
fcoms
sahf
loop
fwait
lcall
push
out
jne
cmp
cmp
jns
daa
repz
jo
mov
dec
mov
cmp
lds
pop
loop
aad
lcall
stc
jb
pusha
cmp
jnp
pop
outsb
insl
pusha
mov
lahf
pusha
out
xor
jp
cmp
mov
xchg
jp
daa
fsubrp
dec
jo
pop
inc
out
jne
bound
mov
test
add
xchg
xchg
push
mov
fistpll
jmp
mov
inc
movb
push
pop
daa
push
push
lock
aaa
cwtl
xor
sbb
jecxz
xlat
ret
sub
sub
inc
cltd
lcall
and
iret
loope
mov
push
pop
mov
lcall
fwait
mov
cwtl
adc
push
pop
jb
push
xchg
testl
repnz
frstpm(287
aaa
mov
mov
push
and
sub
sbb
jnp
or
add
mov
ds
hlt
ret
pushl
fsubrs
mov
cmp
mov
jo
mov
clc
ret
sbb
outsl
jmp
iret
dec
inc
dec
fadds
mov
ror
dec
inc
jmp
emms
pop
xchg
mov
adc
addl
loope
xor
in
clc
mov
push
fimuls
mov
jecxz
pop
cwtl
fcoms
push
add
lods
mov
lahf
xchg
jb
jae
js
mov
push
cmp
shrl
setae
sti
pop
data16
xor
sub
cmpsl
das
cmp
dec
clc
fnstsw
add
jns
jl
popl
inc
int
xor
add
mov
lcall
aam
or
mov
xchg
jbe
fsubs
daa
jo
cmovp
test
dec
lds
sub
in
inc
out
xor
sub
mov
push
rcr
in
jecxz
sahf
xlat
adc
int
dec
sub
insl
outsb
es
mov
jecxz
mov
mov
pop
push
ljmp
ja
lods
or
mov
mov
push
mov
fldcw
lret
and
jb
push
movsl
std
out
outsb
jnp
data16
push
test
pop
jno
xor
pop
ds
xlat
inc
push
mov
sub
enter
jo
popf
cmp
movsb
pop
loope
pop
loope
mov
out
xchg
mov
adc
in
imul
test
sub
lahf
sahf
mov
lods
outsl
xchg
push
enter
bound
dec
test
ret
cmpsb
sub
xchg
bnd
mov
scas
and
lods
push
in
lds
das
hlt
and
pop
fdivr
andl
test
mov
data16
fdivrs
loope
push
in
js
lcall
in
scas
sub
sbb
or
fistpll
cltd
in
mov
xor
in
or
mov
cltd
fst
arpl
add
add
fimull
std
mov
or
mov
fidivrl
dec
jns
pop
loope
test
push
xor
leave
stc
or
mov
imul
xchg
add
push
xchg
insl
lahf
xchg
insl
and
ds
and
popf
ret
dec
mov
mov
loop
lea
xchg
idivl
sbb
jb
hlt
sbb
lcall
push
dec
mov
or
push
mov
fs
pop
in
dec
cld
mov
leave
jecxz
outsl
lock
fildll
or
rcr
inc
arpl
fdivr
sti
out
mov
dec
ficomps
rcr
cmp
jl
dec
rorl
sub
std
test
in
adc
jne
es
mov
mov
fs
cmp
xor
or
loop
mov
cmpsl
cld
jns
stc
and
bswap
push
daa
xchg
in
mov
xchg
add
aad
jne
sbb
ja
dec
imul
lcall
fs
repz
mov
mov
xchg
xchg
dec
or
mov
std
ds
leave
out
mov
loopne
mov
jge
hlt
push
xchg
stc
outsb
pop
stos
sbb
sub
in
mov
inc
dec
sti
push
gs
push
xor
pop
rclb
call
or
push
inc
cmc
and
jno
xor
push
adc
mov
das
imul
pop
jnp
or
mov
cmc
pop
stos
test
push
rcrb
pop
jnp
pop
int3
push
shr
ss
mov
pop
add
mov
std
pushf
adc
out
push
xchg
nop
add
stos
lahf
shl
in
in
enter
dec
aaa
mov
sbb
test
dec
lret
jne
data16
cmp
dec
popa
xor
in
jle
mov
rol
pop
lcall
arpl
push
sti
add
fdivrs
xchg
add
imul
daa
xor
mov
xor
mov
xor
bound
dec
test
cmc
add
and
adc
xchg
std
sarb
fsubrs
push
lret
iret
sbb
or
xor
bound
and
daa
in
sub
int3
decl
pop
mov
lock
cmp
lea
call
sbb
aam
jo
jl
mov
jnp
inc
adc
adc
mov
push
xor
or
push
loop
es
mov
add
fmull
cmpsb
repnz
dec
cmp
lds
push
push
fs
xchg
movzbl
mov
stos
enter
sbb
jg
cmp
push
pop
mov
jge
repnz
dec
testl
ret
xlat
data16
push
nop
jp
sub
xlat
ret
xchg
xor
cli
sub
add
xchg
aam
pop
scas
jle
cld
cmp
insb
cmc
pop
cwtl
sbb
rcl
das
push
pop
xchg
fdivl
or
jle
mov
mov
push
test
mov
push
test
lcall
je
inc
test
test
ret
stc
and
dec
orl
xor
jno
es
jo
mov
push
scas
arpl
in
adc
sub
cmp
inc
xchg
fidivrl
std
mov
sub
test
and
sub
mov
leave
mov
popf
sub
hlt
pop
repnz
xchg
aam
sbb
stc
orl
push
lahf
test
mov
lcall
das
mov
scas
dec
jge
movsl
das
push
dec
push
xor
test
mov
pop
fmulp
imul
jns
decb
loope
sub
icebp
mov
adc
jg
or
or
out
sbb
xorl
xchg
scas
or
mov
test
push
dec
fistl
sti
repz
dec
js
push
or
sub
test
loop
sbb
cs
xchg
cmp
cmc
out
sbb
in
sbb
pop
add
aam
dec
push
xlat
push
push
xchg
jmp
fldlg2
rorl
jl
je
cwtl
dec
inc
push
cmp
cmc
add
ds
movsl
jmp
mov
xor
mov
push
mov
stos
or
cmp
mov
out
inc
pushf
dec
mov
mov
add
test
cli
sub
mov
xor
push
sahf
dec
pop
fldl
inc
mov
fstpl
sahf
inc
jbe
or
rolb
es
nop
mov
fisubrs
test
mov
arpl
push
xchg
bound
inc
mov
mov
lods
push
mov
fadd
mov
into
andl
shrb
out
mov
inc
sub
std
ljmp
jb
aam
lock
enter
arpl
and
scas
aam
iret
into
rcll
add
in
mov
js
add
scas
or
mov
rcl
xor
subps
repnz
dec
jge
arpl
insl
cmp
cmp
xchg
mov
jle
outsb
and
jmp
jle
repnz
shrl
cmp
or
mov
pop
jmp
mov
pop
or
adc
loope
sbb
or
inc
gs
xor
arpl
mov
movsb
sbb
rcrl
mov
gs
ljmp
loope
mulb
or
out
test
shrl
dec
or
sti
into
out
push
or
lahf
xor
jo
mov
rcll
dec
and
call
mov
sub
lds
out
clc
mov
mov
popf
push
or
push
and
mov
jbe
dec
scas
daa
xor
add
push
movsl
cmp
leave
imulb
jg
mov
ja
mov
adc
test
mov
or
mov
aad
loopne
test
dec
out
sahf
and
mov
outsb
sub
xor
into
test
divl
push
mov
shr
sub
hlt
mov
add
out
sbb
idivl
pop
mov
sbb
inc
cmp
mov
fdivrl
push
and
cld
insl
sub
aas
shll
jp
sahf
in
das
pop
inc
lods
idivb
xchg
pop
in
sub
or
xorb
je
fisttpll
xchg
inc
shlb
sbb
push
js
xor
pop
add
mov
imul
leave
aaa
lods
cmp
shll
lahf
jb
jne
jno
clc
inc
push
dec
pop
dec
pop
jae
mov
cmpsb
cmpsl
adc
ror
push
cmp
nop
pushf
mov
leave
cmpsb
dec
push
test
insb
jge
clc
jno
mov
cmp
ss
pop
pusha
push
xlat
clc
add
mov
inc
adc
inc
sub
cwtl
or
or
inc
inc
jmp
xor
fcoms
sub
aaa
and
pop
push
loopne
clc
or
fcomps
mov
pop
sbb
leave
loop
push
push
push
aam
mov
pop
mov
xchg
insb
push
cmp
cmc
aaa
idivb
or
into
pushf
pusha
out
fdiv
addb
int3
mov
pop
inc
xchg
int3
loope
cwtl
leave
sbbb
sbb
rolb
ljmp
mov
adc
lock
xor
inc
ljmp
jnp
arpl
mov
hlt
xor
sub
ja
scas
sbb
loop
cmp
inc
sub
popf
add
je
sbbl
lds
pop
das
push
bound
push
push
inc
xor
push
xor
outsl
push
pop
or
jbe
or
dec
xchg
repnz
or
outsb
mov
movsb
and
sub
pushf
sbb
cmp
addr16
sbb
divb
aad
cmp
ja
cwtl
test
pop
xchg
ret
sub
in
sub
pusha
daa
or
jns
mov
into
add
cmp
ljmp
add
cmpsb
lret
ret
push
ret
lcall
fistpl
mov
jmp
icebp
push
mov
setle
insb
ja
adc
cli
insl
fwait
xchg
mov
imul
inc
push
mov
inc
mov
or
les
insb
sub
cmp
cmp
out
dec
iret
or
adc
jo
cmp
sub
push
mov
inc
mov
movsb
pop
add
call
shlb
and
mov
insb
lock
in
dec
xor
test
subl
add
jae
and
ja
sbb
mov
shll
cltd
cmc
xchg
cwtl
mov
xchg
test
sub
stc
add
pop
xor
scas
xchg
cmp
mov
lret
xor
or
shrl
add
jp
aaa
shll
adc
incl
dec
mov
push
fs
stos
lret
cld
add
imul
arpl
std
out
enter
xchg
movsb
js
mov
pop
mov
mov
mov
into
pop
mov
cmp
lret
adc
xor
or
cmp
cmp
pop
data16
sub
or
lods
mov
push
loopne
stos
xchg
mov
jne
pop
pop
cmpsb
mov
rcl
adc
test
scas
je
pop
ljmp
lods
mov
pushf
sahf
nop
xor
mov
gs
jo
sbb
xchg
int
fs
and
cmp
std
push
adc
push
inc
xchg
shrl
cmp
xchg
jns
pop
cmpsl
sahf
and
mov
or
xchg
scas
push
fidivs
inc
sahf
cmc
sbb
lock
sti
jecxz
js
xchg
mov
cmp
mov
leave
dec
shlb
sub
scas
divb
out
jnp
and
into
call
push
mov
ffree
xchg
out
mov
shll
adc
ss
pop
and
stos
ljmp
pop
mov
mov
mov
int
addl
dec
loopne
xchg
xorb
inc
mov
mov
iret
aam
xor
ds
sti
daa
mull
loop
rcl
pop
out
or
or
pop
mov
fcmovnu
dec
xchg
aaa
xor
cmpsb
sub
bound
mov
or
push
jecxz
jmp
push
cltd
lret
outsl
ss
sub
jge
and
pop
lea
jl
jno
ret
dec
dec
loop
xchg
lock
xor
in
daa
aas
sti
dec
pop
fdivrs
adc
test
mov
test
mov
or
pushfw
movsl
push
mov
popf
add
cmp
addr16
add
adc
and
sbb
jns
push
adc
adc
popf
ja
int3
xor
int
lcall
pop
shll
testb
fisttpll
adc
cmpsl
insb
cmp
and
dec
ret
mov
cmp
dec
js
out
mov
loopne
ljmp
or
mov
xchg
cmp
jmp
icebp
insl
gs
mov
ret
unpckhps
mov
pop
adc
or
je
add
jne
iret
jmp
add
std
xlat
sbb
dec
sbb
pop
clc
cmp
push
fcoms
faddl
push
push
nop
outsb
in
cmc
push
or
addr16
jb
stos
xchg
push
fs
inc
fs
inc
jbe
fidivrl
sbb
or
mov
in
stos
cmpsl
lret
sarb
orb
sti
in
mov
sbb
and
or
fsub
push
and
push
sti
je
rcll
clc
dec
mov
hlt
jae
push
add
push
xchg
xchg
das
push
ja
loope
xor
cmp
aaa
cs
jp
insb
in
out
in
sbb
in
jle
movsl
jb
bound
xchg
inc
out
adc
cli
rcr
call
scas
cmpsl
loopne
loop
into
jo
pop
aaa
mov
lods
inc
mov
mov
inc
sbb
xchg
pop
ss
jecxz
lods
or
test
pop
pop
xchg
aas
mov
in
xor
jmp
lods
or
int
cmp
add
inc
mov
data16
add
imul
inc
add
push
fwait
imul
push
neg
outsl
or
xchg
push
pop
sbb
jne
rolb
dec
or
movsb
lahf
pop
sahf
in
and
sbb
fisubl
jae
addr16
or
outsl
outsl
je
fsub
dec
dec
hlt
jmp
xor
stc
ficoms
mov
sbb
xchg
mov
dec
cltd
adc
pop
mov
in
out
jo
mov
xchg
pop
and
dec
pop
loopne
cmp
push
mov
jmp
xchg
adc
inc
data16
push
lahf
call
and
xchg
cmc
push
sbb
fstps
inc
mov
ds
add
inc
imulb
sbb
push
sbb
cmp
loopne
xor
mov
inc
jnp
test
mov
dec
dec
lock
arpl
jne
dec
add
jne
pop
pop
inc
stos
inc
or
xlat
inc
jno
insb
mov
insl
dec
dec
jns
cmpsl
cmpl
sbb
push
and
jno
iret
icebp
mov
adc
and
int
mov
jge
sub
push
cmc
lcall
fdivp
daa
movsb
pusha
xchg
out
jns
sub
mov
dec
jne
pop
insb
xchg
addr16
push
fidivrl
push
aas
fsubs
xchg
xchg
cmc
dec
xor
mov
js
dec
cmp
inc
scas
cltd
mov
es
lds
stc
ret
in
or
push
add
in
filds
scas
inc
inc
imul
daa
pop
adcb
inc
cld
xor
jle
scas
cmp
push
jae
cmp
cmpsb
call
arpl
ret
out
cmp
and
push
and
cs
movsl
or
arpl
fldl
and
dec
add
mov
aas
adc
mov
loopne
and
shlb
xor
cmpb
adc
mov
orb
cmp
out
test
jl
mov
sbb
sbb
shll
lret
adc
mov
push
mov
xchg
add
call
lret
jnp
sub
stos
cmp
sub
enter
aad
sti
call
les
cmp
sbb
sbb
int
jmp
scas
inc
hlt
push
xor
pop
sarl
pop
aad
pop
mov
mov
cld
mov
in
pop
lock
addr16
push
insb
div
push
sar
pushf
cwtl
gs
fsubrl
imul
sub
inc
in
shl
sahf
insl
or
inc
pop
test
in
push
lods
push
mov
in
jno
vmovd
pop
pop
into
jge
daa
test
adc
lea
xchg
dec
sub
nop
pop
jp
cwtl
fucomi
jae
jg
xchg
popf
out
xchg
and
mov
jmp
js
mov
movsb
sub
scas
dec
ret
in
hlt
push
pop
cmp
test
leave
shrl
insb
mov
jge
pop
or
xchg
mov
divl
stos
adc
int3
jae
mov
loope
rcr
iret
notl
inc
std
out
push
lea
in
inc
repz
movsb
or
out
cmp
fninit
mulb
mov
and
ret
mov
test
jns
ja
dec
or
mov
and
sarl
jne
jp
aas
xchg
add
cs
clc
pop
jl
cmpsl
jb
bound
cmp
cmp
out
sub
shrl
dec
popa
lods
lods
mov
test
sub
mov
sti
mov
enter
inc
rorb
ret
popa
push
ds
inc
popf
sbb
xor
lret
sub
fs
mov
shrl
push
insb
jecxz
test
mov
call
jmp
pop
push
inc
push
sub
mov
inc
pop
mov
cmpsl
add
dec
pop
mov
cmp
or
push
push
fwait
sub
sub
push
sahf
xor
or
push
xchg
mov
inc
jo
arpl
push
xchg
clc
sarl
inc
outsl
cmp
jns
mov
les
inc
outsb
cpuid
rcr
fisubrs
sbb
adc
mov
leave
xlat
push
outsb
jne
pushf
and
inc
daa
adc
and
push
cmc
add
inc
sbb
xchg
push
cs
call
push
fsubl
mov
cld
xor
sbb
adc
xchg
leave
sub
ret
call
pop
pop
roll
mov
popa
jb
aam
out
mov
ret
divl
and
push
and
aad
jo
xchg
cmp
xchg
mov
mov
and
mov
es
mov
scas
pusha
cmp
cwtl
xchg
jae
sahf
aaa
xchg
dec
push
push
jecxz
incb
movsb
jnp
pop
cmpsb
enter
mov
mov
push
or
dec
bound
mov
pusha
orl
and
jmp
sbb
pop
mov
addr16
popa
pop
pop
js
push
pop
ja
daa
jno
cld
aaa
inc
jle
jne
lods
mov
pop
or
and
rorl
daa
xchg
pop
and
adc
cmp
push
jb
ja
sub
ss
xchg
lea
iret
aas
das
xor
pushf
iret
sub
inc
ja
sbb
clc
cmp
ds
add
or
stc
ret
mul
adc
clc
and
rclb
mov
jmp
adc
push
mov
fidivs
out
pop
inc
dec
dec
pop
and
mov
mov
lret
movb
mov
cmp
xchg
cmpxchg8b
leave
lea
icebp
std
dec
add
daa
aaa
adc
mov
repnz
lods
cmc
movsl
mov
or
stos
test
mov
push
lds
dec
hlt
lock
cmc
sub
and
jecxz
mov
mov
pop
mov
int3
mov
dec
mov
addr16
outsb
mov
fimuls
icebp
inc
rolb
push
divl
jg
mov
in
outsb
call
mov
insl
out
push
jg
mov
ja
mov
repnz
clc
in
add
xor
jae
stc
ret
lock
js
rorb
pop
xor
rorb
xchg
pushaw
stc
rcrb
popf
insl
pop
dec
fstpt
adc
inc
inc
inc
pop
lods
jbe
insb
cmp
leave
flds
mov
mov
repnz
xorb
inc
and
js
test
pushf
nop
lock
arpl
xchg
dec
shll
mov
outsb
push
sbb
in
mov
divl
xor
dec
and
or
pop
in
popf
aas
push
into
add
xor
test
pushf
or
ficoml
loopne
or
fistpl
in
icebp
cli
pop
mov
insb
push
sahf
mov
scas
dec
xor
imul
inc
cltd
push
mov
test
mov
movsl
scas
xchg
mov
jno
push
fs
mov
repz
iret
cmp
jno
insl
and
or
daa
imul
lea
add
mov
mov
or
aam
jo
sub
mov
or
js
ds
inc
mov
xor
scas
xor
data16
xchg
or
les
popf
jge
movsl
xor
sti
aas
cmp
inc
imul
push
cmc
pop
lods
xchg
mov
stc
lret
push
imul
popa
inc
popl
into
sbb
mov
pop
sbb
sub
push
out
inc
pop
lods
cltd
sti
sbb
icebp
add
repz
jo
into
je
cwtl
mov
add
sub
mov
loope
xchg
xor
mov
out
bound
mov
xor
and
sub
jnp
inc
dec
das
pop
sti
mov
aaa
mov
into
add
mov
rcll
je
int3
mov
shlb
lods
test
pop
push
stc
mov
jns
push
xchg
mov
enter
xorl
sbb
xor
nop
push
nop
lret
and
xchg
popf
push
jbe
mov
jnp
sti
jb
mov
leave
out
sub
mov
xor
fdivrs
in
inc
add
inc
inc
das
xor
sub
cs
jmp
and
dec
inc
or
sti
sbb
mov
jno
jbe
hlt
lods
mov
dec
fucomi
in
jnp
cmpsb
and
xchg
xlat
mov
and
xchg
cli
inc
push
lods
xchg
xchg
lahf
push
jb
insl
mov
dec
add
hlt
push
dec
push
adc
mov
cld
js
dec
or
ss
lret
mov
xchg
pop
arpl
insb
sub
jno
xor
or
mov
jno
mov
in
dec
mov
pop
int
sub
xchg
out
ficoms
lahf
out
cwtl
out
inc
mov
aam
dec
cmpsb
cmpsl
in
add
sub
stc
test
pop
gs
stc
sbb
add
out
jns
sub
fldt
mov
mov
mov
stc
lea
and
xchg
sbb
adc
xchg
or
pop
add
jmp
repz
popf
push
push
adc
xor
push
aas
push
lods
nop
mov
insb
fcompl
cmp
push
push
jns
pop
popa
and
cmp
sbb
sbb
pop
fldcw
int3
xor
dec
mov
es
jns
mov
push
xchg
in
mov
pop
jae
and
or
lret
daa
adc
inc
mov
aas
aaa
sub
mov
adc
push
arpl
or
cltd
mov
fisubrs
jle
divl
or
jnp
sbb
mov
das
jne
push
xor
cli
sbb
mov
push
sub
push
imul
addr16
jo
and
lret
shlb
push
cmp
in
mov
push
add
jns
orl
dec
mov
xchg
sub
loopne
jne
lea
push
adcl
or
clc
aas
pop
push
mov
cmp
ret
lret
gs
fistps
jle
repnz
mov
sub
xor
jb
sbb
iret
mov
fnstsw
and
in
ljmp
lds
pop
sub
rcl
movsl
sti
gs
lahf
lea
test
loopne
inc
xchg
and
adc
dec
call
shlb
jae
sbb
push
pop
and
adc
push
lea
out
fwait
sub
xchg
mov
sbb
pop
mov
and
cmpsl
sub
cmp
xchg
insl
ss
leave
inc
xor
cmp
test
jo
enter
xchg
push
xchg
xchg
popf
outsl
pop
imul
and
push
dec
and
jo
dec
in
push
aam
incb
cmc
imul
shrb
pop
shl
and
push
push
mov
and
fsub
in
xchg
notb
out
in
pop
int3
outsl
xor
or
testl
stos
push
mov
mov
pop
mov
xchg
out
add
out
pop
outsl
mov
int
ljmp
sti
push
jle
out
idiv
sbb
cmp
adc
imul
cld
test
in
mov
dec
mov
cmpsl
mov
notb
jns
adc
mov
jecxz
adcl
xor
push
sub
pop
push
cmpsb
jae
lock
cmpsl
aad
and
fimull
lret
sbb
sub
push
adc
cmp
cmp
and
in
sub
inc
cmp
push
vprotb
cmp
dec
jb
mov
push
jno
out
fs
rcrl
imul
jp
adc
loop
mov
cmp
pop
addb
add
xlat
in
ret
dec
lods
mov
inc
testb
xchg
pop
xchg
cwtl
jo
or
std
mov
or
js
xchg
or
out
xchg
loop
xchg
cmp
je
es
sub
xchg
shlb
push
es
adc
mov
mov
lods
dec
cli
dec
or
aam
push
mov
pop
jb
fmulp
popf
jg
mov
sub
xchg
loop
sbb
adc
jae
or
jbe
push
mov
adc
aas
ss
dec
fbstp
int
dec
xor
mov
es
mov
mov
gs
cmpsl
xor
inc
loope
xchg
push
and
or
sub
in
and
pop
mov
sbb
andl
int
xchg
fsubrl
xor
popf
inc
adc
call
dec
push
and
in
inc
mov
icebp
cli
fcmovnb
fidivrs
inc
test
mov
jge
std
xchg
jbe
inc
fistpl
mov
adc
xor
addr16
dec
shl
pop
mov
jle
add
shlb
inc
cld
sahf
jne
xchg
inc
ja
dec
and
pusha
xchg
mov
dec
imul
mov
cmc
cmp
ss
fists
cmp
mov
out
fwait
lret
loopne
xchg
jmp
pop
jno
in
mov
jmp
bound
orb
clc
mov
adc
cmc
popf
lods
stc
lret
dec
lea
and
mov
fwait
xchg
adc
dec
adc
sbb
leave
and
add
daa
jg
les
and
jmp
push
les
pop
popa
sbb
in
add
sahf
and
iretw
ljmp
push
jp
enter
shrb
fcoms
jae
fadd
aad
mov
std
sub
pop
sbb
gs
scas
xor
repz
rcll
loope
insb
and
fwait
in
shll
adc
int
pop
cltd
push
adc
and
adc
daa
inc
aam
fnstenv
xchg
mov
fbstp
mov
sub
jo
ja
sbb
pop
pushf
cmpsb
das
mov
iret
push
mull
sbb
fisubl
imul
xchg
pop
jmp
dec
and
cmp
repnz
cmp
test
hlt
mov
push
hlt
adc
int3
insl
dec
js
stos
push
mov
popf
add
pop
lcall
mov
addb
fmul
xchg
std
out
test
xchg
mov
push
addb
push
and
movsl
shlb
pop
or
loopne
sub
dec
leave
sbb
decb
cmpsb
pop
sbb
jno
popf
xchg
mov
cmp
pop
pop
ds
fadd
sub
outsl
add
cltd
jno
gs
jo
xorb
push
test
mov
sub
lods
fildll
rcrl
js
add
sahf
cwtl
mov
int3
or
nop
mov
iret
shr
imul
jo
inc
leave
out
xlat
lahf
dec
xchg
enter
lret
sub
xor
mov
iret
jecxz
rol
and
pop
add
lea
pop
sbb
aaa
stos
out
mov
sub
cltd
and
andb
ret
pushl
mov
xor
repnz
or
mov
dec
jbe
fs
outsl
in
add
sub
incl
neg
js
jecxz
or
add
mov
and
pop
jo
rcrl
sub
sarl
or
jge
loop
fiadds
xchg
push
lcall
out
divb
imul
jp
jno
into
mov
mov
sbb
je
test
jnp
pop
hlt
sub
je
out
out
dec
imul
xchg
aam
mov
repz
sbb
fisttpll
in
mov
loopne
scas
cmp
adc
out
push
push
repz
les
rcr
pop
or
mov
xor
aam
fisubs
add
mov
test
and
es
adc
or
jnp
idivb
mov
idivb
nop
lea
popf
stc
push
into
stos
rclb
lods
sti
ds
inc
rcrl
sarl
mov
cld
fwait
and
sub
xchg
sub
inc
dec
sbb
out
cmc
pusha
sub
cmovno
sub
pop
add
or
xchg
push
sbb
sti
mov
cwtl
xor
in
aam
loope
ljmp
xchg
sbb
adc
mov
mov
mov
jb
imul
adc
pop
inc
mov
aas
and
js
jmp
inc
je
int
lods
les
push
or
dec
lds
ja
jecxz
jns
lods
addr16
das
and
out
push
or
roll
sarl
test
inc
dec
mov
leave
xor
mov
mov
std
cmp
mov
add
test
xor
fidivs
sbb
mov
add
aam
sub
and
out
arpl
cs
adc
xchg
clc
pop
mov
into
out
out
enter
sbb
sub
js
in
into
jb
in
or
cmp
and
adc
mov
loope
dec
xchg
mov
cmpl
xchg
sub
jmp
dec
sbb
mov
cmpsb
cmp
add
mov
pop
pop
shr
fs
dec
jae
or
test
mov
dec
xor
mov
add
or
in
mov
pusha
in
xchg
pusha
aas
fisubrs
aaa
add
in
ss
add
imulb
push
test
add
sub
nop
insl
and
cltd
inc
inc
in
shll
lahf
pusha
movsl
fidivrl
js
jmp
pop
fincstp
inc
push
cmp
cwtl
sbb
push
imul
js
jmp
xor
lea
cmp
mov
cmp
mov
pop
out
mov
add
popa
jns
ret
imul
insl
cmpsb
sti
pop
insl
sbb
and
mov
imul
out
dec
repnz
fsubs
dec
insl
shlb
cld
std
sub
leave
fwait
jno
mov
push
mov
inc
xor
or
loopne
cmp
cmp
and
in
aas
or
and
icebp
dec
lret
xchg
aad
out
into
jb
and
jne
dec
mov
cmpsb
inc
xchg
fldt
inc
and
pop
mov
lods
inc
and
mov
cmpsb
jp
dec
push
add
cli
cs
jns
sbb
jg
mov
lcall
jmp
mov
and
icebp
in
aad
pop
gs
fwait
insb
dec
push
jo
pop
pop
dec
outsl
xor
js
sub
pop
and
sub
inc
shrl
fs
movsl
popa
inc
ds
jge
jbe
je
inc
and
pusha
imul
push
lcall
push
pop
mov
xchg
mov
lcall
add
pop
pop
sarl
ficoml
inc
jb
rorb
sbb
scas
push
mov
pop
jno
mov
sahf
sbb
pop
jns
mov
push
nop
inc
mov
push
push
and
aas
push
lret
jp
pop
mov
cs
ficoms
push
sbb
popf
cmp
test
mov
ss
fdivrl
iret
mov
pop
jns
mov
pop
vcvttss2usi
loope
mov
cmp
decb
adc
jns
cmpsb
int
pop
imul
mov
cmc
aaa
jl
test
stc
jecxz
mov
cltd
cltd
popf
sbb
cmpsb
ljmp
movl
cmp
adc
cmp
gs
dec
dec
mov
sub
xchg
mov
mov
scas
pop
xor
sub
stos
sub
lds
jb
xor
subl
lret
dec
sarl
shrl
jne
test
in
std
roll
or
insb
out
cmp
pushf
out
push
fadd
fwait
sahf
mov
rolb
inc
popf
repz
mov
or
fstpl
ficompl
or
adc
popf
sub
pop
ljmp
ds
repz
sbb
xor
sbb
push
mov
sarl
or
jne
les
mov
push
test
xchg
shll
mov
jno
repnz
xchg
and
add
sbb
xchg
movsb
arpl
roll
adc
push
mov
push
mov
out
insb
ds
cmpsb
data16
pusha
int
pop
loope
outsb
pop
add
ret
pop
mov
add
push
in
shl
cmpsl
inc
test
or
ret
xor
pop
sbb
xor
int
mov
mov
xor
push
loopne
pop
mov
mov
stc
adc
insl
mov
test
out
out
push
mov
jae
xchg
loopne
push
mov
subl
pusha
lret
inc
and
cmp
pop
xor
fdivs
and
aad
sbb
ret
popf
fbstp
add
int3
pop
iret
and
repz
mov
inc
sahf
aad
and
inc
popf
fistpl
adc
add
cmp
addr16
sahf
nop
mov
pusha
pop
lods
adc
in
push
push
lret
scas
inc
loope
loopne
in
push
punpckhdq
lret
cmpl
stc
mov
sbb
andb
push
dec
cltd
ficoml
pop
jno
xchg
fadds
cmp
push
sbb
mov
les
dec
les
ret
cmp
bound
in
mov
inc
syscall
popa
cmpsb
inc
scas
lods
fisubrl
ficoml
test
sub
out
idivl
cmc
je
mov
in
xlat
aam
push
inc
cli
addb
movsb
xor
clc
mov
leave
aas
insb
jbe
mov
mov
lods
test
into
cmp
out
jmp
mov
jb
or
lock
lret
mov
cltd
cmp
int
stc
popa
cltd
pop
mov
add
mov
push
lret
xchg
and
jne
aas
pop
xor
rcll
xchg
sti
lock
adc
inc
xor
sarl
sub
add
mov
mov
imul
jl
cmpl
cwtl
push
push
xchg
xchg
and
fcmovnbe
add
mov
loope
fdiv
cmc
loopne
pop
cltd
jne
and
pop
es
insb
clc
sub
outsb
mov
movsb
or
movsl
bound
adc
cmp
push
mov
in
cltd
aaa
sbb
in
and
pop
loope
xor
push
in
cld
jl
dec
cmc
push
cwtl
cmp
sbb
jmp
inc
xchg
sahf
push
ljmp
mov
sub
fldenv
sbb
arpl
xor
ret
outsb
int3
fistpll
xor
incb
mov
cmpsb
mov
cld
nop
inc
sub
and
pop
and
mov
cmp
ljmp
jle
mov
mov
sub
lea
lock
add
imul
daa
xor
adcb
fisttpl
sub
or
mov
dec
ss
mov
ss
mov
ret
cmp
mov
daa
rorb
lods
rorl
push
fstpt
xor
jno
mov
mov
in
xor
xor
out
sub
incb
mov
cmpb
add
imul
mov
ret
call
or
int3
adc
sbb
xchg
andl
pop
dec
stc
jmp
pusha
jmp
call
sti
inc
push
and
jmp
and
lret
jecxz
lock
loopne
jnp
dec
pop
adc
fcomps
and
clc
and
fwait
push
or
adc
jmp
je
rcrb
test
lds
je
out
dec
dec
jmp
cmpsl
ror
into
cmp
fcom
test
mov
jl
test
test
mov
test
mov
or
in
push
xlat
stos
cmpsl
in
pop
les
xchg
pop
dec
fyl2x
cmp
int3
sub
enter
sbb
and
rol
push
into
add
adc
or
scas
into
ret
inc
shr
dec
sbb
cltd
jnp
in
pushf
xor
inc
inc
enter
outsb
outsl
pop
mov
sbb
pusha
add
mov
fdivr
xor
cli
mov
pop
add
iret
stos
xchg
jnp
xchg
jg
lds
aas
lock
aad
lcall
inc
pusha
lret
bound
mov
xchg
popa
adc
hlt
mov
mov
or
xorb
imul
mov
mov
cmpsb
loope
and
or
cltd
daa
test
sbb
mov
adc
outsb
fwait
xchg
stc
in
fwait
mov
js
xorb
test
repnz
mov
fsubrl
add
or
push
xchg
and
mov
aas
insb
xor
cmpsl
repz
lahf
jns
fcoml
mov
je
and
push
and
fistpl
les
jp
rorb
pop
lret
sahf
and
outsb
jbe
or
pusha
ret
sbb
adc
pop
ja
movsl
shlb
or
aad
dec
mov
and
jb
mov
xor
outsl
inc
and
jae
sub
ljmp
inc
jo
mov
popf
and
adc
mov
cmp
adc
sbb
push
inc
js
aam
push
add
jle
test
gs
out
inc
scas
repnz
stos
cld
daa
cmp
sbb
outsl
jne
xor
push
cmp
pop
jns
xor
je
mov
rcr
xor
jbe,pn
lods
lea
jle
test
shll
mov
mov
out
test
cmpsb
cmp
pop
loop
andl
test
cmp
cltd
or
or
lcall
hlt
fs
sub
jne
sub
and
jl
mov
push
nop
sub
clc
push
inc
xchg
adc
fidivrl
pop
gs
jns
cmc
aad
mov
out
adc
push
int
dec
cmp
jp
push
jns
out
dec
mov
add
cmp
jmp
xlat
push
lret
mov
popa
arpl
outsl
pusha
gs
mov
insl
lret
cli
shlb
cmp
inc
in
in
stc
push
gs
jp
test
mov
inc
sub
out
std
mov
shl
add
mov
leave
cmp
jno
xor
scas
and
xchg
dec
ja
push
enter
lods
push
shlb
dec
mov
sbb
push
pop
sub
xor
cmp
or
sub
imul
cmp
adc
cmpsb
addr16
lea
loope
dec
mov
dec
inc
int
lcall
sbb
cmpsb
je
push
cmp
ret
sub
stc
jge
hlt
xlat
pushf
pop
inc
jnp
int
div
add
pop
popf
jno
stos
mov
cld
xlat
andl
test
mov
aas
in
rorb
repnz
std
lret
test
push
out
arpl
pop
sbb
fstpl
cmp
push
add
sub
push
or
jle
xchg
add
jno
pop
lret
and
cmc
pop
jle
pop
lret
sub
sub
sub
mov
push
in
and
shlb
pop
push
push
call
aam
aas
dec
dec
test
mov
call
jne
mov
sub
and
lahf
andb
inc
xchg
mov
jge
push
sub
cld
inc
ja
imul
cmp
xchg
and
outsl
test
test
fidivrs
push
xchg
xchg
jnp
jno
cmp
pop
dec
cltd
in
daa
inc
call
int
leave
push
add
arpl
sub
call
fs
sbb
jmp
mov
lret
pop
fisttpl
inc
and
in
push
sbb
xchg
mov
and
test
jmp
ret
push
nop
cmp
pop
mov
push
dec
or
cmp
xor
pop
sbb
mov
cmpsb
jb
mov
pop
cs
ret
xlat
jmp
pop
mov
mov
data16
test
inc
sub
std
dec
lods
mov
lahf
push
and
sbb
cmp
mov
jmp
push
lods
push
or
imul
jp
rcl
rcrb
mov
push
enter
mov
js
or
xor
lcall
dec
add
or
adc
fisubrs
arpl
or
and
pop
cmpb
repnz
xor
mov
add
daa
adc
xor
bound
jp
sti
jb
xor
dec
scas
add
cmp
cli
negb
jle
lods
dec
iret
adc
jno
cmpsb
jnp
sbb
pushf
inc
sar
mov
inc
cld
push
leave
fs
test
mov
or
js
mov
inc
dec
mov
ds
inc
and
fidivrs
es
jmp
sub
push
cmp
jnp
cmp
pushf
lea
lock
orb
ret
push
fstps
in
stos
arpl
aad
icebp
push
in
cmpsb
enter
arpl
add
test
xchg
call
enter
mov
out
fcomi
cmp
test
pop
in
out
xor
pop
cmp
jmp
movsl
cmc
push
sbb
and
lock
xor
jge,pn
ss
jb
iret
jl
and
or
imul
movsl
scas
out
xchg
icebp
cltd
mov
out
pop
leave
scas
out
stos
movsl
fldl
xchg
pop
loopne
mov
je
push
in
push
and
clc
dec
rcll
push
xchg
daa
and
pop
jb
ds
jg
js
and
mov
dec
enter
push
lods
jecxz
std
aaa
push
dec
rclb
or
pop
push
cmp
mov
and
dec
loopne
add
insb
negl
scas
jns
pop
dec
push
push
dec
adc
mov
mov
mov
jb
pushf
stos
xor
bound
ret
inc
xchg
jne
pop
lcall
arpl
fs
rclb
dec
out
cmp
or
and
popf
adc
cmovne
pop
shlb
mov
and
and
test
pop
xor
cmp
std
lods
or
in
sahf
mov
iret
or
adc
das
sahf
add
enter
or
pushl
jp
and
jne
add
jge
adc
ret
inc
popf
inc
in
std
cmpsl
out
stos
addr16
dec
sbb
pop
mov
dec
pop
in
hlt
mov
sbb
push
cli
sarb
cmp
mov
xchg
xor
ljmp
pop
scas
shlb
or
or
xor
stos
sub
xchg
push
cld
xor
xchg
orl
xor
imul
adc
frstor
pop
sar
jo
inc
ljmp
mov
xor
sbb
ja
sbb
imul
push
out
dec
loopne
stc
fstpt
sti
adc
xor
push
mov
clc
mov
mov
push
and
shrl
and
inc
sbb
cwtl
push
int3
in
xchg
dec
add
test
inc
push
add
ret
rcrb
in
ljmp
and
shrl
repnz
fiaddl
adc
out
push
outsl
push
rorl
mov
push
pop
xor
pop
fnstenv
or
cmp
xchg
and
and
jno
inc
inc
push
jbe
out
sahf
xchg
mov
fiaddl
lret
shll
push
mov
pop
dec
mov
in
stc
rolb
sub
xor
out
lcall
xchg
dec
subl
or
cmp
jbe
push
cmp
mov
clc
mov
sub
mov
fmull
push
aad
dec
inc
dec
sbb
inc
add
adc
sbb
jl
rcll
mov
mov
jnp
rorl
test
pop
jb
imul
call
mov
or
sub
bswap
mov
adc
lcall
das
fwait
cmpsb
cmp
mov
jo
push
and
mov
in
roll
xchg
jmp
in
mov
push
xchg
xchg
sub
jb
sbb
sbb
imul
sbb
xor
mov
pop
shlb
popf
mov
into
nop
inc
enter
lea
sub
dec
adc
adcl
aam
jle
rep
insl
xchg
sbb
notl
adc
mov
lcall
jecxz
or
or
push
inc
cmp
adcb
mov
fcoml
or
push
push
bound
jb
shlb
daa
not
adc
rorb
pop
jg
fldl
clc
les
inc
sbb
into
aaa
stc
xchg
jb
in
repnz
or
and
or
mov
aas
imul
jno
add
inc
stos
rol
je
outsl
in
adc
lcall
cs
xchg
fcompl
lock
fcmovb
sbb
das
sub
xchg
push
jecxz
push
dec
add
not
aam
push
inc
out
adc
idivb
pop
push
xchg
mov
dec
pop
push
scas
lret
fst
sub
lock
test
sti
push
cmp
sbb
sub
lcall
push
cmp
lds
cwtl
mov
sbb
pop
stc
jb
scas
outsl
adc
movsb
adc
pop
pop
xchg
adc
daa
in
lods
or
or
in
notl
jnp
adc
mov
inc
xor
mov
mov
lds
roll
das
hlt
aaa
sub
mov
pop
fwait
lds
ljmp
sbbb
lahf
js
jbe
sub
loopne
xchg
in
sbb
pop
or
inc
add
or
test
inc
out
xor
ljmp
cmp
xchg
push
adc
sub
push
divl
pop
sbb
jne
imul
xor
scas
cltd
mov
ljmp
jns
stc
fists
cmp
push
jns
jmp
adc
mov
push
data16
cld
pusha
mov
stc
mov
add
jae
sub
je
or
jns
adc
divb
stc
sub
and
and
sbb
rcrb
lcall
pop
adc
cmp
pop
cmpsl
std
test
mov
mov
data16
cmp
bound
aam
or
int3
mov
xor
rcll
sahf
or
jmp
ficompl
and
dec
mov
cmp
xlat
cld
xchg
lcall
iret
divb
in
xchg
scas
pusha
push
mov
cmp
loop
imul
arpl
jmp
shl
jmp
sub
insl
movsl
stos
push
jns
notb
in
sub
push
fwait
and
dec
dec
inc
push
push
loopne
cmpsl
jge
enter
cmp
enter
pop
dec
fstpl
xlat
outsb
pop
mov
cmp
mov
fs
adc
jmp
bound
lahf
lods
clc
jmp
movsl
mov
jb
mov
das
aad
mov
stos
fldt
stos
xchg
negl
and
or
shl
sub
or
push
mov
dec
roll
jmp
adc
sub
mov
icebp
jmp
mov
insl
rolb
sbb
xor
mov
jmp
daa
mov
lds
loope
in
repz
insl
and
fcomps
add
jl
lret
ja
mov
std
shrb
idivl
or
or
in
cmpsb
shll
pop
inc
dec
fwait
sbb
fimull
mov
mov
jge
jmp
scas
lock
jns
jns
mov
hlt
std
jnp
sub
sub
jp
stos
and
aad
jbe
in
inc
in
inc
faddl
aas
je
adc
xchg
les
mov
add
in
jno
lcall
imul
jl
push
push
in
addr16
or
or
andb
je
es
mov
add
outsl
xchg
sbb
or
jl
and
out
bound
icebp
sbbl
xor
and
pop
in
into
shr
movsb
scas
out
dec
mov
mov
cmpsb
mov
dec
xor
ret
xor
cltd
or
ret
fbstp
cmp
pop
mov
nop
or
sub
fstpt
out
add
lret
imul
or
leave
pop
test
jno
repz
push
add
ret
adc
in
dec
cmp
sub
loop
mov
and
hlt
adc
cltd
hlt
lds
pop
pop
scas
shrl
iret
jl
xor
mov
imul
negb
dec
stos
push
cmp
shlb
gs
jae
das
adc
inc
outsb
js
std
adc
pop
jmp
mov
clc
jnp
pop
repnz
lcall
dec
push
lea
loopne
fistpl
outsb
pop
in
inc
cld
adc
pop
sbb
jae
sub
sub
cmpb
cmp
pop
loop
aas
cmp
mov
insb
add
ss
cs
sti
shlb
mov
mov
cmpxchg
jo
cmpsl
lcall
ljmp
sti
fwait
out
and
ja
movsb
mov
adc
testb
mov
pop
inc
xchg
je
imul
aad
stc
cmp
bound
stos
mulb
stc
scas
int
mov
sti
dec
std
mov
pop
add
mov
sub
push
push
push
mov
sbb
pushf
adc
jns
push
stc
mov
cmp
loope
fdivrl
sbb
cmc
subl
rclb
stos
mov
lea
mov
lods
push
loope
mov
ret
cltd
sbb
lock
pop
call
daa
ja
pop
inc
jp
mov
or
jecxz
adc
ljmp
push
pop
adc
in
in
test
xlat
lahf
sbb
or
divb
int
pop
in
testl
fsubs
mov
sbb
ss
aad
stos
jno
jb
clc
icebp
arpl
lods
adc
ret
mov
mov
jo
push
aas
inc
dec
stos
shlb
scas
xchg
sbb
cmp
inc
in
pop
icebp
jb
not
in
mov
fmulp
add
data16
adc
or
and
fldenv
and
sbb
aam
std
shlb
cmp
jnp
cs
dec
dec
inc
adc
jb
xor
jl
xor
sbb
mov
or
jp
and
stos
mov
adc
mov
int3
shl
push
lahf
repz
push
pop
mov
lret
xchg
outsl
in
cld
cld
gs
xchg
ret
fcomps
je
dec
sub
jle
rcrb
jbe
int
push
ja
sub
call
sub
mov
fwait
ret
and
inc
sub
xchg
shll
pushf
mov
sbb
push
out
ja
not
cwtl
mov
loop
add
cmc
add
xor
mov
sahf
dec
inc
add
shll
cmp
pop
add
stc
xchg
arpl
jge
mov
xor
inc
pop
sti
jns
imul
int3
loop
lods
adc
int
mov
add
pop
adc
cmp
jp
sub
inc
jns
push
dec
xchg
ret
pop
cmp
adc
negb
mov
stc
into
lret
call
inc
mov
stos
repnz
aad
push
and
xchg
aam
std
inc
xchg
sbb
sub
push
andb
sub
jg
ja
ret
clc
and
add
gs
je
divb
outsb
clc
or
movsl
adc
cmp
cwtl
repnz
lcall
inc
outsb
add
xor
push
aam
jae
xor
pusha
stos
shl
ret
adc
pop
sbb
sbb
mov
or
in
pop
cmp
adc
jne
loop
xchg
cwtl
push
aaa
mov
xchg
push
sbb
out
xchg
sub
cld
gs
aaa
jbe
and
cmpsb
mov
jmp
inc
ljmp
mov
cld
inc
cmc
sbb
je
xor
sub
fwait
enter
inc
cmp
dec
mov
jns
and
repz
sub
popa
or
test
mov
movsb
cs
jecxz
push
or
xor
jl
xor
cmp
dec
xor
shrl
das
push
popl
mov
loop
in
xlat
pop
push
mov
sub
out
pushf
pop
test
cmpb
xchg
mov
shrl
adc
adc
rorb
sahf
mov
ret
loope
int
dec
faddl
shrl
xchg
push
clc
adc
cmp
int
sbb
or
add
je
aad
dec
mov
fs
in
hlt
pop
push
push
testb
rorb
xlat
jge
js
cmovle
shll
out
sub
xor
in
mov
fldcw
dec
add
cli
mov
ljmp
push
jb
rcr
aam
mov
cmp
mov
xchg
xchg
shll
inc
sbb
xchg
orb
adcl
cli
jns
stc
adc
jne
mov
sub
xchg
adc
inc
leave
xlat
cmp
js
push
jo
sbb
das
xlat
mov
cld
and
mov
sbbl
pop
push
movsl
xchg
pop
mov
xor
pop
stos
lock
cmpsb
lods
orb
popf
mov
out
dec
mov
push
clc
xchg
sub
mov
cwtl
pop
aad
incl
loopne
sbb
mov
mov
leave
dec
or
movsl
push
xchg
cltd
mov
imul
mov
pop
or
test
or
into
cmp
inc
mov
int3
and
inc
xor
in
sub
cmp
xor
addl
adc
or
iret
add
push
jecxz
fdivrl
dec
pop
xlat
outsb
movsl
sbb
inc
mov
rolb
inc
gs
pop
xchg
pop
push
std
sbb
fcomps
or
or
rcrl
pushf
jnp
rcrl
fiadds
aam
inc
or
jmp
push
push
sahf
jge
jp
mov
mov
xlat
sbb
cltd
cmp
sbb
orb
lahf
mov
push
decb
icebp
jae
jb
cmp
mov
lea
cmpb
adc
and
ss
pop
push
dec
mov
push
stos
adc
jl
xor
movsl
sbb
testb
mov
bound
inc
dec
fdivs
inc
leave
inc
mov
adc
push
int
ret
fwait
jns
mov
fstp
stos
mov
fldenv
cmpb
dec
and
add
cmp
jecxz
xchg
mov
inc
shlb
outsl
test
adc
push
jecxz
adc
test
notl
xor
roll
les
pop
insl
xor
cltd
ret
icebp
pop
sub
std
outsl
iret
fcomps
mov
jp
push
rcrb
push
lods
xor
pop
pop
jns
lret
popa
inc
or
rcrb
push
dec
cmp
dec
dec
fisubs
mov
lret
cmp
sub
int
jmp
orb
insl
pop
jne
mov
stos
push
lahf
jno
repz
pushf
push
inc
mov
enter
lods
push
dec
mov
test
jmp
xor
add
mov
pop
xchg
adc
je
jge,pt
pop
xor
ret
xchg
mov
fstps
scas
lea
mov
inc
mov
test
cmp
push
lcall
in
inc
les
mov
jl
mov
arpl
out
lret
insl
cltd
mov
dec
test
cld
out
int
sbb
dec
jmp
jp
into
jp
cs
insl
data16
sub
dec
stos
xlat
stos
ljmp
xchg
and
push
push
xchg
subb
stos
push
repz
pop
jns
jl
xchg
insb
cmp
xchg
pop
stos
mov
xor
dec
lods
and
jne
push
mov
movsl
addr16
mov
int3
push
or
jno
xchg
lcall
andb
js
sti
ds
and
push
leave
insb
mov
nop
pop
dec
fsts
adc
push
andl
inc
jl
mov
repnz
push
add
lods
ret
fsubr
rorb
arpl
int
leave
lret
bound
nop
les
in
mov
lods
mov
jae
and
imul
jno
mov
cmp
iret
pop
sbb
scas
ret
mov
int
mov
and
aaa
js
mov
hlt
scas
in
jo
lods
sbb
ret
push
jle
push
test
mov
mov
je
ljmp
ret
lock
cmc
cltd
movsb
jmp
ficomps
push
and
sub
clc
icebp
pop
cs
repz
push
ja
cmp
lret
popa
and
adc
push
dec
jp
cli
xor
dec
mov
jmp
icebp
leave
push
mov
test
repnz
mov
mov
jnp
dec
mov
pusha
rcr
leave
int
or
mov
rorl
ds
and
mov
loope
jl
xrelease
lods
rorl
ljmp
jno
stos
inc
or
ljmp
dec
xor
shl
stos
pop
push
or
cltd
insb
ret
fisubrl
jbe
cmc
movsb
test
mov
repz
adc
loope
idivl
pop
adc
aaa
popa
adc
inc
xor
xchg
out
fldl
xchg
mov
and
ljmp
and
and
dec
pop
fimuls
in
jmp
mov
lea
mov
leave
popf
lret
into
push
mov
test
jp
and
testb
jb
lret
shrb
leave
pop
adc
sbb
jmp
cmpb
inc
pop
pop
outsb
int
inc
lcall
call
and
data16
repz
mov
in
mov
pop
out
xlat
icebp
and
imul
lds
insb
sbb
sti
ret
mov
dec
xor
test
test
addb
shlb
cwtl
mov
inc
mov
lods
mov
and
inc
mov
aas
gs
pop
cmp
mov
pop
das
fsts
sbb
pop
jnp
stos
mov
aam
pop
test
fcomp
push
sbb
mov
inc
jl
mov
jo
mov
push
fcomp
push
mov
mov
mov
or
push
dec
scas
xor
mov
add
mov
adc
cmp
mov
cmp
out
leave
and
xchg
cmpsl
push
mov
dec
sub
xchg
sti
mov
jnp
jae
hlt
push
mov
mov
dec
push
inc
and
or
mov
xchg
cmpsl
push
pop
negb
into
adc
ss
mov
lcall
jae
mov
pop
push
mov
outsl
stos
adc
sbb
das
mov
mov
lods
lret
fadd
jp
cmp
push
in
adc
loopne
xchg
mov
mov
outsb
or
movsl
mov
adc
sbb
inc
hlt
cld
fsts
lcall
cld
push
fcoms
push
add
and
inc
enter
push
xchg
test
xchg
push
pop
pop
xor
add
pop
roll
push
xor
and
dec
cmp
jae
out
mov
cli
outsb
mov
stos
pop
lods
xor
movsb
and
mov
jg
push
cld
movb
aam
fisubs
add
push
or
add
xchg
loopne
mov
test
pushf
push
icebp
dec
out
mov
add
dec
cmc
iret
jmp
cmp
cltd
je
jg
mov
mov
lds
jbe
push
pop
add
in
jnp
loop
mov
inc
ds
dec
xchg
enter
lcall
inc
push
notl
push
add
in
and
enter
sbb
push
push
xor
and
push
or
hlt
jae
mov
mov
cmc
sahf
mov
popf
enter
ljmp
add
jne
std
int
sbb
sub
jle
pop
movsl
jl
inc
dec
push
xchg
cld
imul
lods
mov
test
and
jl
push
lcall
mov
and
jle
pop
dec
imul
mov
icebp
stos
dec
push
xor
test
test
inc
outsl
or
mov
pop
or
pop
sub
adc
push
push
sub
sbb
leave
cltd
test
xchg
cld
adc
pop
mov
imul
setbe
in
push
into
call
hlt
push
jge
int3
push
pop
xchg
jle
xchg
sbb
mov
fnsave
fisubs
dec
inc
dec
stc
adc
pop
fs
mov
icebp
aas
jae
push
nop
add
sbb
fs
push
xchg
xor
inc
test
mov
pop
mov
push
sbb
out
and
mov
popf
jl
xor
int3
sbb
push
xor
iret
out
inc
cmp
cltd
lret
insl
jecxz
mov
add
pusha
adc
lret
push
push
xchg
jmp
xchg
stos
xchg
jae
mov
mov
in
into
mov
dec
cmp
mov
hlt
push
jp
sub
aas
inc
dec
mov
dec
clc
cmpsb
inc
scas
mov
add
lea
cmc
mov
and
imul
mov
icebp
shrb
mov
ljmp
dec
stos
mov
jl
lret
push
inc
test
push
pusha
jae
mov
aam
es
xchg
sbbl
jnp
cltd
leave
xor
cwtl
inc
mov
or
leave
loopne
fcmove
inc
dec
jo
js
push
loop
jns
data16
jnp
push
lret
jno
fimull
mov
adc
xchg
cmp
push
xlat
add
in
xchg
scas
add
xor
xor
loopne
cmp
push
jecxz
xchg
adc
push
jp
loopne
jns
mov
in
xor
nop
test
and
mov
movsb
jo
shll
enter
cmp
push
ret
jp
add
mov
adc
lret
jg
jmp
and
loopne
rcll
leave
dec
pop
jb
mov
fstp
mov
lea
pusha
ljmp
movsl
aam
jo
arpl
ret
adc
cmp
sub
scas
xchg
pop
pop
xor
int3
std
push
loop
sbb
jno
mov
mov
or
test
push
rolb
jmp
adc
aas
or
movsb
test
popf
lcall
arpl
in
mov
icebp
adc
mov
lcall
lds
lcall
inc
push
imul
inc
mov
pop
lret
out
sahf
adc
mov
and
jecxz
jg
bound
xchg
sbb
xor
push
in
test
mov
add
fcomps
fwait
and
dec
mov
inc
fcomps
mov
xlat
mov
jae
sub
cltd
je
fiadds
cmp
in
sets
shlb
adc
shl
pop
outsl
adc
mov
xor
cmpsb
jl
inc
clc
or
and
and
pop
xor
data16
scas
pusha
pop
aaa
fmull
inc
paddsw
or
leave
fcmove
lcall
mov
push
xlat
mov
xchg
ret
cmp
push
stos
cmp
adc
rorl
push
sahf
push
and
arpl
shlb
ficomps
movsb
fucomp
jnp
imul
out
mov
mov
loop
jne
mov
jecxz
mov
sub
pop
shlb
add
add
cmpsl
shll
inc
decb
push
xor
std
xchg
inc
ret
pusha
add
xchg
aaa
push
lret
js
mov
repz
mov
dec
scas
shlb
push
lea
mov
loop
mov
loopne
cmpsb
pop
in
aam
sarl
shrl
push
xchg
mov
lahf
jecxz
int3
or
lahf
dec
and
std
lds
aaa
mov
sbb
or
sbb
mov
cmp
xchg
and
mov
mov
adc
fwait
test
pop
mov
out
and
mov
pop
in
hlt
pop
xchg
jl
sahf
iret
xor
mov
rcrb
out
sub
sub
fcompl
cmpsl
clc
iret
int3
adc
aam
sub
fsubr
xor
jae
push
xchg
dec
in
push
xorl
mov
mov
mov
ret
idivl
outsl
stc
icebp
jmp
mov
cmp
or
adc
pop
mov
cmpb
pop
repnz
pop
cmpsb
clc
cmpsb
mov
cs
adc
jecxz
jno
or
push
fs
aam
icebp
daa
mov
shll
int
outsl
xor
popa
cmp
jne
jg
xchg
out
test
fucomp
pop
inc
mov
pop
pop
decb
repnz
outsl
in
mov
push
push
sahf
jae
dec
test
mov
jno
pop
xchg
push
lea
flds
add
xchg
add
mov
xchg
into
decb
add
cmpsl
xlat
pop
enter
jecxz
lods
pop
and
sbb
popa
ret
mov
sub
addb
insb
das
sbb
pop
mov
hlt
leave
or
pop
jb
jge
sbb
mov
pop
std
xchg
in
fwait
loopne
fcomp
mov
shlb
in
out
mov
mov
fwait
or
adc
jbe
in
in
rorl
rorb
jns
adc
adc
jo
jmp
or
mov
xor
xor
sub
cli
xchg
mov
inc
or
movsl
mov
std
push
inc
jl
jns
cmp
outsb
cmpsl
mov
mov
jle
repz
fdivs
and
mov
cld
fsts
in
mov
movsl
and
scas
outsb
mov
jo
push
jg
push
pop
jp,pn
lret
jmp
or
lods
rcrl
ss
dec
dec
fistpll
mov
dec
pusha
shr
xchg
lea
sub
jg
fsts
mov
popf
ficompl
in
movsl
clc
inc
into
xor
sahf
jbe
adc
cli
pop
bound
cmpsb
push
cltd
pop
mov
scas
and
mov
test
mov
mov
dec
xchg
popf
cmp
popf
lea
cltd
lds
mov
fmull
std
inc
xorb
push
mov
fisttps
in
sub
cwtl
add
mov
mov
pop
fs
lds
xchg
aam
sti
loopne
sbb
leave
cltd
mov
ret
movsb
jmp
out
adc
sahf
in
xchg
mov
add
daa
sub
into
insb
jle
or
test
aas
sub
cmp
in
and
scas
xchg
add
lret
insb
xor
pop
mov
ljmp
repnz
int3
jo
mov
repnz
push
lret
add
cld
fcompl
loope
adc
cmp
xchg
mov
cmpsb
pop
pushf
in
mov
pop
xor
out
cmp
aaa
cmp
enter
psubw
mov
je
mov
int3
das
push
xchg
push
push
sti
inc
fsts
iret
inc
cmc
outsb
imul
jb
test
mov
into
outsl
fidivrs
mov
arpl
lds
xchg
aam
or
mov
add
cmp
add
sti
xor
sub
int
fsubrl
mov
mov
add
clc
int3
stos
xor
inc
dec
mov
jecxz
in
jl
out
xchg
jecxz
ret
mov
and
inc
in
inc
rorl
lods
mov
stos
ret
je
dec
push
arpl
aad
repz
mov
push
in
jae
inc
mov
jno
fisubs
sub
pop
mov
inc
clc
pop
inc
ja
testb
push
rcr
xchg
xchg
xor
stos
or
lods
dec
imul
dec
add
testb
std
push
cmp
in
in
sub
test
test
addr16
add
cli
inc
fstpt
fistpl
and
inc
mov
jl
std
mov
fildll
jg
iret
sbb
jno
repz
or
sbb
stc
add
xchg
push
xchg
jne
mov
loope
rcrb
iret
shrl
ss
in
adc
mov
data16
sarl
clc
dec
nop
fsubp
inc
out
sub
int
out
sub
push
mov
ds
cmp
pop
dec
lret
push
jmp
ret
dec
push
sbb
pop
push
nop
jecxz
lds
xchg
push
ja
mov
imul
hlt
int
xor
adc
xchg
sbb
add
sti
pop
jb
and
mov
lcall
and
cmp
iret
sbb
sahf
push
adc
jmp
dec
stc
inc
xchg
pushf
int
lds
arpl
cli
icebp
jno
mov
push
call
jg
jge
ds
mov
decl
jp
pop
divb
dec
outsl
inc
xor
mov
inc
orl
sahf
in
out
sbb
lcall
pushf
aas
sbb
xor
cmp
fiaddl
pop
cmp
call
or
bound
xchg
xor
push
pop
pop
adc
xlat
std
ror
mov
pop
adc
xchg
and
jns
pop
inc
mov
add
testb
sbb
js
hlt
pop
xchg
ficompl
stc
cmpsl
push
das
je
or
int3
xchg
or
or
mov
in
adc
adc
and
inc
imul
inc
int3
mov
iret
jecxz
test
adc
jle
sbb
out
push
xlat
mov
pop
mov
out
movsl
xor
out
dec
push
testb
xchg
or
mov
repz
xchg
xchg
jb
jge
mov
jmp
rcr
mov
lahf
ret
jb
sub
fisttpll
mov
imul
inc
cld
test
sbb
inc
jae
or
pfrsqit1
adc
mov
cmp
lcall
lock
outsl
jl
sbbl
push
jmp
jg
and
xorb
add
mov
nop
addr16
mov
sarb
popa
nop
fs
rcrl
ljmp
cmp
push
dec
mov
test
mov
mov
shll
imul
jo
add
cwtl
sub
fdivp
mov
sbb
sub
mov
pop
sub
inc
mov
add
or
scas
test
subl
jo
scas
xor
dec
dec
mov
xor
sbb
jp
adcb
pop
cltd
mov
push
push
xor
in
dec
lahf
sbb
outsl
sarl
cmp
push
mov
or
test
mov
cltd
ljmp
lret
in
push
fcomi
pop
leave
mov
je
add
or
aas
sbb
test
repz
sbb
push
xlat
pop
fisubrl
adc
subl
stos
jg
or
lods
stc
xor
rorb
movsl
daa
adc
incl
cmpb
mov
nop
adc
or
sbb
add
daa
jae
xor
mov
adc
repnz
sub
sub
es
data16
or
dec
aas
lret
jnp
rolb
int3
push
cmpsl
sbb
sbb
subb
xchg
jne
cmp
call
test
jae
je
cld
roll
jae
adc
sahf
jg
mov
cli
jns
mov
mov
imul
dec
jne
aaa
or
add
sbbb
push
push
addr16
xor
xchg
jno
cmpsb
sti
dec
adc
ljmp
xchg
push
sub
fmuls
sahf
and
stos
inc
cwtl
inc
and
xor
fisubrs
sarb
jge
pop
pop
hlt
mov
cld
push
repnz
xchg
mov
adc
inc
ret
js
popa
mov
jmp
sub
lods
das
daa
lock
push
adc
fs
pop
rol
int
shrl
pop
movsl
neg
cwtl
sbb
push
push
pop
pop
stos
inc
push
pop
mov
aam
inc
in
cmc
fs
push
jge
ja
fcomi
mov
mov
inc
fucomi
or
clc
push
call
mov
lea
rorl
push
into
imulb
mov
xor
test
outsl
dec
into
jp
cmp
fdivr
addb
das
stc
jae
mov
shll
cmp
fcomps
ds
lock
nop
adc
jne
cwtl
xlat
push
xor
das
mov
call
imul
shll
xlat
xlat
push
and
lods
roll
or
insb
cmpsb
cmpsb
mov
js
inc
or
das
mov
mov
gs
mov
outsb
aas
cwtl
or
cmp
push
jo
fcomip
mov
xchg
sbbl
test
adc
cmp
dec
jnp
lret
mov
div
sub
push
iret
lock
ret
jcxz
pop
fnstsw
xor
aam
lcall
dec
dec
mov
lods
jne
xchg
std
mov
inc
nop
xlat
mov
push
cwtl
mov
pusha
jle
imul
sbb
cmp
out
mov
jecxz
xor
loop
stc
pop
test
inc
lret
jnp
mov
mov
imul
inc
loope
xchg
and
add
dec
push
rol
ret
cmp
fistpl
jne
xchg
pop
popf
cmp
fisttpl
enter
cs
jne
sbb
ret
jp
cs
stos
inc
push
scas
fcoml
ret
lret
mov
jbe
pop
cmp
dec
repnz
mov
push
add
and
xlat
sub
sbb
ja
lock
mov
addb
push
and
mov
sti
fcmovbe
sub
mov
inc
lock
insb
sti
push
inc
pop
nop
ss
aam
dec
xor
or
sbb
mov
int3
lcall
lcall
cmp
das
subl
ss
mov
sbb
sbb
mov
pop
cmc
incb
mov
outsl
outsb
imul
fldl
je
int
sti
push
andl
cwtl
sbb
jnp
add
test
jp
movsl
xor
inc
xlat
into
cmp
xor
imul
sbb
push
sbb
pop
js
lret
cltd
xchg
mov
mov
shlb
xor
lahf
mov
push
mov
std
outsb
push
popf
push
pop
mov
cmc
icebp
insb
icebp
dec
cmpsl
sub
inc
xchg
fucom
ja
outsb
nop
jg
out
je
push
mov
mov
mov
xchg
lret
cmp
push
or
rol
sub
subl
jns
add
sub
stc
xchg
pusha
xchg
pop
out
cmc
xchg
addr16
mov
ja
fiadds
fstl
add
jnp
mov
pop
mov
fcmove
loop
xor
mov
jb
mov
loop
dec
mov
pop
aam
test
inc
lcall
sub
fbld
cld
push
jmp
jbe
mov
xchg
test
push
pop
dec
or
lret
mov
bound
xchg
aam
clc
movsl
mov
ja
dec
jle
add
test
xchg
popa
fwait
orl
loop
mov
push
mov
int
sub
jmp
push
rorb
mov
fisubrl
test
dec
lret
fcomps
sbb
xchg
pop
add
les
sbb
fstp
cmp
rcl
js
in
sub
inc
dec
ret
addl
add
outsl
sbb
sub
cld
in
push
xor
les
sub
pushl
pop
mov
movsl
dec
add
outsl
adc
lret
cmp
and
push
cmp
sub
lock
add
xchg
and
mov
pushf
xor
jns
jo
mov
mov
test
and
divb
push
dec
out
aad
dec
cmp
mov
pop
or
jns
in
jo
mov
loopne,pn
jp
xchg
out
orl
fdivrs
cmp
rcrl
stos
mov
data16
pop
or
mov
insb
ret
sbb
jbe
popf
enter
adc
xchg
cwtl
adc
jmp
mov
addr16
inc
and
into
pop
pop
adc
stc
inc
inc
lock
nop
dec
mov
jmp
or
in
negb
imul
nop
mov
mov
mov
mov
push
xor
adc
and
pushfw
adcb
pop
inc
mov
mov
adc
sub
mov
ss
and
in
enter
xor
cld
mov
cmp
push
mov
inc
jge
arpl
andl
and
arpl
sti
xchg
add
sbb
aam
mov
addr16
sahf
imul
in
add
gs
bound
je
das
test
sarl
fsubrp
test
push
sub
mov
lods
mov
xchg
movsb
roll
inc
cltd
jo
test
jmp
outsb
je
pop
adc
cld
movl
sub
enter
out
or
int
lock
pop
stos
iret
mov
pop
scas
inc
xor
sub
dec
fnstenv
movsl
xchg
add
add
sub
sbb
jnp
iret
lods
loope
sbb
push
inc
push
and
ljmp
add
out
inc
out
push
enter
or
dec
pop
adc
int
add
fwait
push
push
data16
imul
xchg
fsubrl
mov
add
and
in
aas
xor
mov
int
jbe
loopne,pn
call
sub
inc
arpl
xchg
ja
int3
pusha
int
xchg
jne
xchg
xor
sub
fnstenv
lods
xchg
popa
jo
cwtl
xor
test
mov
int3
fmuls
or
xor
cli
ds
dec
cmp
add
mov
dec
fildl
sub
adc
out
pop
dec
adc
lret
jo
dec
imul
lods
fidivs
adc
mov
or
in
mov
or
shlb
sub
adc
adc
mov
inc
sub
jbe
mov
cwtl
cmc
aad
mov
mov
pop
test
add
and
nop
insb
xor
and
mov
jb
mov
jb
jmp
sbb
cmp
dec
jns
xchg
mov
push
pop
lods
dec
mov
sub
xor
inc
cmp
cmc
inc
out
outsl
je
fsub
scas
idivl
xchg
push
jp
testl
cltd
add
xor
pushf
test
add
fst
pop
or
dec
mov
nop
std
inc
stos
sbb
sub
scas
incb
push
sarb
adc
sub
jecxz
sbb
dec
dec
and
or
mov
xchg
push
nop
adc
jle
pop
sub
jge
enter
mov
mov
lock
std
clc
arpl
sub
mov
add
mov
cmp
xchg
outsb
out
xchg
insb
fimull
scas
fwait
jecxz
jecxz
mov
add
in
or
and
ds
xor
cs
and
sub
sub
dec
call
mov
xchg
push
outsl
lods
and
lret
lock
jne
push
movl
inc
add
xchg
fs
lods
mov
insl
sub
jnp
fwait
adc
jo
in
xchg
scas
lods
cmp
push
jg
popf
mov
dec
out
stos
cld
divb
int3
jmp
fisubs
adc
pop
push
push
dec
pop
pop
arpl
sbb
ret
aaa
mov
mov
pushf
ljmp
inc
faddl
js
jb
nop
jbe
xchg
mov
ljmpw
sbb
lods
insl
insb
mul
std
iret
ds
sbb
movsb
lds
mov
lea
dec
stos
pushf
and
fwait
sub
xchg
loop
mov
fdivl
loope
sti
ds
xor
lock
adc
mov
scas
xor
or
int3
iret
call
cmc
daa
push
sub
xchg
ss
sbb
add
mov
inc
fxch
out
aas
cltd
mov
mov
loope
mov
ficoml
mov
das
popa
mov
xchg
xchg
ds
dec
dec
out
mov
scas
push
les
push
mov
jno
enter
insl
call
sbb
out
mov
pop
cmp
jle
add
out
pop
nop
inc
xchg
push
cwtl
mov
dec
mov
or
sbb
sub
das
push
dec
sbb
movsl
pop
test
pop
loop
inc
lret
out
std
outsl
rep
cltd
sbb
pop
jae
inc
inc
dec
push
push
fstps
cwtl
ficompl
jmp
movsb
cltd
or
mov
in
jecxz
popa
push
pop
push
and
cmc
insl
jp
mov
cmc
and
or
mov
jmp
cmp
dec
xorb
adc
les
lea
xlat
jne
and
inc
fwait
push
and
mov
inc
sub
inc
add
sub
in
popaw
repz
lahf
insb
push
mov
and
mov
shrb
repnz
sub
inc
cmp
fxch
push
loope
jbe
lret
shr
jae
arpl
std
xchg
ja
addr16
ja
pop
jbe
jle
test
mov
push
push
outsb
cmc
aad
adc
mov
std
mov
inc
pop
das
pusha
out
and
mov
or
fimull
pop
sub
sbb
popf
pusha
dec
push
and
pop
xor
or
and
dec
jnp
jp
orb
fs
adc
lahf
rcll
popf
loop
fmuls
or
stc
and
pop
sub
hlt
subl
mov
dec
mov
in
push
out
js
aad
outsl
shlb
in
stos
or
adc
enter
jno
push
in
inc
das
mov
push
mov
sbb
inc
mov
jo
lds
push
adc
xor
pop
or
jnp
mov
jmp
inc
out
test
test
call
sbb
push
mov
out
int
mov
and
ret
cmpxchg
loop
push
movsl
mov
mov
insl
sbb
and
or
loopne
aam
or
jbe
fmull
js
in
test
fwait
pop
mov
insb
ficomps
je
cli
mov
xchg
sbb
aad
mov
lods
mov
mov
push
xchg
or
pop
fcoms
in
je
xchg
xchg
imulb
or
xchg
daa
mulb
mov
add
cwtl
les
cmp
fiadds
clc
cmp
or
or
sbb
jne
movsl
push
dec
loope
add
mov
aad
js,pn
lods
or
inc
std
in
dec
or
xchg
and
test
test
xchg
sub
pop
pop
das
outsb
inc
outsl
int3
mov
mov
pop
or
aaa
outsl
sub
call
add
jns
in
xor
jle
insb
ret
shll
cmc
adc
ret
rorb
mov
jmp
sub
sub
xor
aaa
xlat
aam
sbb
cmp
cs
mulb
pusha
lcall
jp
shll
adc
daa
adc
fucomi
pop
push
insl
sbb
fwait
and
ret
jno
inc
sub
xor
inc
test
int3
adc
test
movsl
sbb
cmp
mov
push
pop
or
into
push
cmp
jae
xchg
cmp
fcmovnbe
js
call
movsl
pop
mov
repz
lahf
aaa
popa
cld
stos
add
pop
mov
das
mov
or
sti
outsl
xchg
push
sbb
pop
aam
or
dec
es
push
lcall
mov
fcoml
dec
daa
int3
cmc
xchg
jg
cmp
add
std
aad
cmp
inc
pop
clc
leave
ja
out
push
mov
fnclex
lea
gs
add
xor
movsl
or
sbb
sti
jle
adc
cmp
call
add
arpl
add
sahf
cmp
mov
lds
jl
int
mov
cmp
adc
dec
test
cmc
fwait
xchg
mov
mov
jg
aas
push
pop
lret
adc
sbb
test
insl
adc
sub
inc
push
shll
aam
lods
dec
xlat
hlt
cmpsb
mov
out
inc
mov
add
cs
ljmp
insb
jne
dec
pop
ljmp
fs
xor
or
aam
loopne
in
inc
lock
in
daa
pop
sub
adc
inc
jne
ret
or
dec
inc
sub
xor
xchg
add
cld
pop
stc
sahf
pop
fbstp
mov
fistl
jb
int3
push
les
out
into
jo
insl
push
insb
in
and
inc
or
les
fnstenv
jle
push
testl
mov
adc
push
sarl
cmc
sti
andb
repnz
mov
divb
mov
cmpsb
testb
sbb
icebp
cmpsl
pusha
ret
shll
add
prefetcht2
or
sub
js
xchg
pop
enter
or
leave
movsb
push
out
data16
sbb
adc
fld
xlat
xor
sub
leave
popf
insb
jecxz
lahf
mov
pop
dec
es
inc
outsb
push
inc
push
mov
cmp
jmp
pushf
test
dec
hlt
jne
sub
jp
insl
sbb
and
orb
ds
js
lcall
dec
xor
in
lea
inc
push
mov
cmp
xor
rcrl
sub
add
ds
lods
and
and
pop
fisubl
roll
xor
stos
jnp
mov
addl
jge
jb
jge
add
mov
fistps
movsl
adc
pop
and
ficomps
mov
jge
jp
xchg
and
pop
movsb
add
das
xor
incl
push
into
add
xchg
ret
xchg
dec
xchg
mov
dec
jl
push
xchg
or
mov
fwait
movsl
adc
mov
xorl
loop
mov
test
mov
stc
out
pop
mov
xchg
lea
lcall
push
add
mov
push
pop
lcall
sub
sub
jle
out
test
roll
mov
xchg
into
mov
push
gs
dec
scas
shr
xchg
shlb
inc
shr
rol
pop
jle
mov
push
div
mov
jl
pop
out
xor
into
addr16
jb
mov
rcrl
dec
outsb
enter
jno
mov
pop
out
cmpsl
into
cmp
push
ss
sub
and
notb
stos
pop
jle
xchg
mov
out
leave
adc
iret
js
jle
fimull
and
or
mov
dec
das
stos
xlat
bound
add
pop
jg
sbb
clc
sbbb
movsl
mov
lcall
jnp
xchg
cmp
shlb
inc
inc
xchg
addr16
adc
push
mov
inc
xchg
shlb
adc
mov
mov
fsubrs
push
ficoms
je
pop
imulb
out
inc
fld
cmp
lods
sub
je
jno
sbb
shl
jae
sub
xchg
das
lock
jb
add
stos
xchg
jbe
sub
mov
mov
jecxz
out
mov
clc
fidivs
and
je
cwtl
sub
pop
adc
mov
ret
in
repnz
lods
rclb
jp
cs
addr16
xchg
in
aad
mov
xor
mov
or
cli
mov
pop
pushl
push
fsubr
pop
adc
stos
push
inc
adc
cmp
or
sarl
add
pop
push
test
mov
lret
roll
shr
adc
popl
jge,pt
cmc
in
outsb
sub
lcall
xchg
inc
push
imulb
fdivs
test
push
add
shrl
stos
xor
adc
aam
inc
lcall
test
movsb
out
or
addr16
fstpt
and
aad
mov
aaa
je
arpl
cmp
mov
gs
fsubl
and
pop
push
mov
lahf
or
push
popa
push
xor
jg
add
test
lcall
cld
mov
repnz
mov
jge
dec
inc
enter
cmpsb
cmp
mov
xchg
popf
cmp
mov
lcall
lds
ja
outsl
jnp
nop
cmpl
sbb
ret
mov
std
inc
addl
cltd
mov
jae
jmp
fsub
mov
addl
es
lret
inc
push
in
mov
or
popf
or
clc
sub
jg
stc
daa
js
fwait
test
push
je
fsubs
not
shlb
xchg
and
jb
pop
xor
repz
lods
inc
xor
jbe
ret
lahf
popa
rcll
and
jmp
imul
mov
cltd
stos
inc
jecxz
shll
jnp
and
mov
sub
push
add
inc
jae
add
pop
adc
outsb
ret
jnp
sbb
sarb
mov
jmp
and
cltd
iret
stos
mov
call
roll
inc
out
jno
mov
jbe
mov
or
in
jne
lret
test
push
cs
pushf
lods
xor
cli
sub
lds
imul
sub
jge
in
mov
out
mov
adc
add
pop
lahf
cltd
test
mov
mov
adc
xor
sbb
mov
add
gs
int
mov
call
jle
enter
or
lcall
dec
in
pop
and
pushl
outsl
lock
lods
sub
notl
lahf
ja
roll
dec
cmp
call
dec
xor
dec
test
cs
mov
inc
jns
mov
dec
dec
fistl
pop
lds
popf
inc
sti
or
xor
stc
mov
aas
mov
pop
stos
in
movsl
data16
gs
lods
xor
or
lret
push
fmul
ja
mov
push
les
icebp
pop
dec
not
push
incl
decl
push
jmp
repz
lds
ret
test
dec
mov
cltd
je
mov
adc
inc
mov
into
test
jp
push
pop
jp
clc
dec
push
aaa
inc
nop
dec
and
or
out
pop
test
pop
popa
mov
vminpd
jb
jo
xchg
and
add
imul
adc
push
add
jb
xchg
inc
pop
pop
fistpl
xor
and
sub
jb
test
js
push
sbbl
daa
stos
xchg
incb
jp
push
pop
scas
sbb
xchg
dec
xor
mov
jge
push
push
fiaddl
push
leave
scas
fisttpl
push
jl
movsb
loopne
in
imul
add
nop
adc
push
dec
xchg
mov
test
pop
lret
and
cmp
lock
cltd
call
xchg
stos
sub
inc
inc
adc
pop
rcr
out
sub
call
test
cmc
nop
push
xchg
and
test
ret
xchg
dec
popa
push
js
inc
push
inc
dec
es
cmp
pop
cmp
push
out
iret
incb
int3
pop
cmp
sub
outsb
lcall
add
xchg
es
xor
pop
inc
ret
repnz
and
ret
dec
or
data16
sub
out
clc
mov
and
dec
shll
je
and
movsb
out
and
inc
std
ds
repnz
sbb
mov
fnstsw
mov
jns
inc
pop
push
loopne
lahf
inc
mov
fistpl
mov
xchg
xchg
in
mov
jg
adc
pushf
push
rorl
repz
icebp
fwait
xor
rol
popa
pop
aad
push
sbb
js
fcmovu
cmp
pop
arpl
data16
stc
xchg
xchg
xor
mov
fisubrl
add
stos
fucomp
or
data16
adc
xor
ja
gs
test
out
add
icebp
out
cmp
es
xchg
add
jmp
mov
clc
mov
jmp
in
pop
ficompl
pop
loopne
dec
push
leave
aam
push
jl
jl
gs
add
daa
lret
xor
inc
sbb
in
ds
in
adcb
xor
dec
or
pop
xchg
ret
ret
or
mov
xor
rclb
inc
jae
out
sbb
mov
aad
xlat
cmp
call
lret
adc
or
mov
xchg
repnz
into
mov
jl
outsl
shrl
mov
xchg
jns
shl
test
cmpsl
dec
adc
jo
jl
fbstp
sbb
std
js
cmp
pop
int3
jle
int
imul
hlt
out
arpl
lods
mov
push
or
jne
lea
sbb
mov
jnp
mov
test
mov
or
add
cmp
icebp
int3
mov
add
add
xchg
mov
pop
jno
push
fldcw
jecxz
mov
xor
sbb
adc
cltd
pop
mov
rclb
sbb
push
cs
sub
push
mov
imul
ss
mov
or
shlb
push
shll
push
test
add
lret
adc
cmp
mov
sbb
dec
sub
int
cmpb
mov
ss
dec
ljmp
jbe
shlb
aas
ss
out
fs
pushf
es
push
lods
ljmp
xor
mov
fucomp
shlb
and
or
or
in
popa
or
icebp
clc
mov
xor
cmp
jg
adc
add
push
cmp
cmovb
repnz
push
fnstcw
js
es
jg
icebp
dec
mov
cltd
jno
stos
mov
fadd
imul
sub
ljmp
outsb
pop
fs
push
in
mov
mov
repz
jne
lea
push
test
addr16
nop
inc
fwait
test
adc
arpl
inc
cmp
pop
xor
lods
push
sub
addr16
icebp
xorl
call
mov
sub
xor
xchg
sbb
xor
inc
lret
jbe
lds
cwtl
push
out
or
and
aas
test
pusha
xchg
ror
mov
inc
and
xchg
xchg
in
mov
mov
cmpsb
std
pop
xchg
sbb
dec
cmp
imulb
or
in
mov
sarb
mov
or
push
dec
ret
cmp
rep
lds
xchg
je
sub
push
adc
push
sbb
xchg
xor
push
clc
dec
das
das
fistl
sbb
mov
sbb
pusha
mov
cli
stos
pop
adc
mull
xor
rcr
mov
stos
das
std
jne
fs
lea
or
gs
xor
mov
dec
jns
test
xor
test
lahf
popa
jp
xchg
fwait
dec
cmp
jo
jp
mov
es
mov
test
mov
sub
icebp
mov
lcall
mov
hlt
xchg
mov
mov
push
lods
int3
or
dec
data16
sbbl
icebp
or
hlt
cwtl
orb
fldcw
xorl
repz
fsubrp
mov
shll
ljmp
repnz
adc
xchg
ret
adc
sbb
decb
lret
and
clc
and
mov
lock
xor
fs
data16
cs
stos
inc
adc
scas
inc
orb
jecxz
inc
lahf
adc
hlt
cmpsl
sub
push
dec
mov
lods
xchg
xor
mov
or
in
scas
imul
cmp
dec
rol
stc
lods
sub
push
mov
mov
mov
push
sbb
insl
xchg
mov
xchg
push
shrl
aaa
mov
inc
inc
arpl
add
rcl
cltd
outsl
push
repz
bound
jo
test
aaa
ss
jl
mov
aaa
ds
insb
idivb
adc
inc
push
jp
fistl
mov
inc
out
in
mov
and
popa
mov
decb
mov
scas
aas
lahf
xchg
sbb
push
iret
and
mov
xor
xchg
lea
outsb
xchg
cs
sub
mov
mov
lock
shll
aaa
mov
jecxz
push
repnz
dec
jmp
imul
ret
shl
mov
cmp
orl
xchg
and
sub
add
ds
call
jbe
mov
xchg
pushf
mov
stc
int
jno
push
add
jne
or
loope
fcoms
xchg
cmp
das
in
xchg
mov
xor
sbbl
dec
cld
inc
fwait
push
xchg
je
push
or
xor
ret
xor
lcall
sbbb
ljmp
mov
loope
jne
out
test
std
mov
sub
cmp
or
loop
cs
xor
jns
rol
shlb
icebp
adc
mov
int3
cmp
rclb
cltd
add
movsb
in
mov
arpl
mov
add
in
cmc
out
mov
rcll
jo
cmp
push
sub
push
adc
into
dec
mov
rcll
fwait
pop
inc
sub
push
and
gs
and
popa
out
stos
xor
sbb
sub
fstpl
xchg
pop
jae
inc
xlat
jmp
mov
das
inc
jne
gs
das
insb
push
lahf
or
xor
scas
mov
sbb
jns
negl
testb
ffree
rcll
mov
fs
pushfw
sbb
mov
mov
hlt
pusha
or
pop
ret
or
incl
lock
add
lods
inc
outsb
adc
inc
dec
inc
iret
gs
sub
cmp
inc
sarb
mov
fldl
movsl
arpl
jle
aas
mov
sub
in
mov
add
add
jno
or
push
aam
mov
lret
andl
js
pop
test
pop
aad
mov
sub
mov
mov
imul
insl
sbb
mov
and
dec
xchg
mov
mov
loope
push
ds
je
daa
push
aaa
inc
fsubl
xor
pop
mov
pop
lock
in
str
leave
add
pop
mov
adc
aam
mov
insl
mov
je
add
js
and
movsb
ret
aas
sahf
lock
push
nop
adc
imul
cli
les
ret
xor
xchg
mov
test
aas
jmp
je
dec
sub
aaa
cwtl
shlb
es
das
pop
mov
pop
jb
xchg
jo
into
inc
push
fsubl
cwtl
ds
cs
mov
pop
mov
jge
aaa
mov
clc
add
sbb
push
push
jnp
sti
jl
jne
test
cmp
and
sub
test
cltd
xchg
je
aas
sbb
push
sub
xor
mov
and
roll
outsl
shll
pop
rol
fdiv
in
lea
push
gs
push
cli
and
adc
lret
shr
and
cmp
sbb
mov
mov
push
mov
int
in
mulb
insb
out
inc
sub
xchg
pop
aad
dec
ja
inc
pop
nop
sub
mov
into
lcall
popa
arpl
cmp
jmp
orb
xchg
mov
add
in
movsl
mov
cmpsl
xor
insl
hlt
fwait
mov
iret
pusha
mulb
and
cmp
cmpsl
mov
pop
fisttpl
cmp
movsbl
das
pop
repnz
xchg
adc
jle
aam
std
mov
push
or
subl
popf
and
adc
nop
stos
in
xor
repz
mov
xchg
repnz
fcoms
jp
shlb
in
pop
data16
cwtl
cmpsb
and
xor
loopne
dec
dec
add
xor
rclb
adc
aad
xchg
fistps
test
mov
mov
insb
cli
int
xchg
pop
dec
add
clc
cmpsl
mov
jb
pop
test
insl
jmp
hlt
addr16
mov
outsl
je
xchg
sahf
decb
stos
xchg
fnstenv
les
adc
pusha
popa
in
clc
mov
leave
mov
loopne
insl
lea
int
xchg
mov
cmpsl
push
dec
sub
in
jge
in
clc
stc
mov
or
daa
or
pop
js
cs
add
add
add
inc
inc
or
jecxz
cmp
pop
dec
jb
cmp
jmp
jmp
pop
sub
and
aas
sar
int3
lcall
lods
add
pop
mov
test
test
cltd
ret
int3
hlt
add
inc
inc
jmp
sti
aam
jbe
jmp
xchg
lds
pop
adc
cld
adc
out
sbb
jo
rcr
aaa
add
add
fs
pop
in
mov
cmpsl
rclb
mov
gs
fwait
or
jg
jae
push
ret
jmp
sub
sub
add
iret
pop
icebp
sub
nop
or
int
jecxz
xor
ret
data16
xchg
mov
mov
sub
adc
jo
adc
imul
mov
imul
rcl
mov
push
gs
pushl
mov
fcos
sbb
and
gs
shl
pop
int3
and
fs
movsb
lahf
test
jns
cmpsb
rcrb
out
push
jmp
xor
sbb
xchg
call
or
aad
pushf
cmpsl
mov
mov
or
jno
sbb
push
cmp
pop
dec
cmpsl
push
outsb
fsubrl
pop
testl
jge
cmp
repz
jb
inc
cmp
adc
movsl
dec
ss
add
lock
dec
insb
xchg
stos
popf
les
cmp
mov
pop
cmp
fcomip
fidivl
pop
hlt
fisubrs
mov
js
cmp
xchg
lret
dec
pop
js
sub
imul
cmp
mov
pop
icebp
das
inc
fistl
lahf
into
addr16
pop
mov
movsl
ret
jno
push
scas
lahf
adc
test
push
pop
mov
lret
adc
pop
notb
fimull
lcall
jp
pop
lea
cmp
xor
mov
jmp
adcb
scas
lahf
xchg
mov
xor
das
adc
movsl
or
rol
inc
mov
cs
lahf
movsl
in
fisubrs
std
mov
sbb
fiaddl
mov
out
and
jge
pop
rolb
inc
or
add
ret
mov
mov
idivb
or
xchg
dec
pop
xchg
mov
jl
jmp
add
or
ffree
or
loope
sahf
or
dec
push
adc
push
lcall
arpl
push
ret
pop
shr
outsl
fimuls
jecxz
fdiv
repz
jo
inc
xchg
or
or
testl
rolb
cmp
cmp
out
jb
out
cs
test
push
and
out
inc
jl
mov
out
push
push
add
pop
mov
scas
jb
insl
pop
sti
cmpsl
jge
fdivs
test
popf
mov
jo
cmc
mov
lods
lock
jae
mov
pop
in
and
call
ret
xchg
jmp
xor
das
fs
jg
movb
fnstcw
mov
dec
or
mov
call
movsl
dec
lea
xlat
sub
fists
dec
dec
repz
mov
mov
jg
xchg
mov
in
imull
lcall
mov
jl
ficoms
push
jmp
movsl
nop
lock
sahf
mov
inc
loope
dec
dec
dec
jo
add
pop
loop
jo
mov
in
xlat
movsb
jmp
mov
addl
lret
faddl
jbe
in
addr16
int3
mov
xchg
inc
mov
mov
xor
pop
aas
sti
ret
sti
dec
cmp
fcomp
pop
dec
mov
pop
sub
mov
ret
mov
lret
jle
stc
pop
jns
test
mov
adcl
adc
fdivs
add
adc
iret
sbb
sub
mov
jp
xor
rclb
idivb
orl
or
push
fsubl
data16
mov
or
into
push
add
add
pop
mov
sbb
add
pop
mov
mov
mov
into
mov
push
cmpsb
jecxz
ds
sub
push
insb
out
rorl
push
sub
push
dec
pop
pop
pop
mov
das
mov
dec
and
cmpsb
mov
movsb
xchg
adc
das
lods
pop
mov
inc
cmp
xlat
arpl
xchg
add
and
outsb
sub
jge
dec
fsubl
and
popa
pushf
pop
mov
int
testb
xchg
std
into
popf
jno
mov
in
mov
push
add
jmp
in
ret
lahf
jp
inc
in
stos
shll
imul
arpl
sahf
jecxz
movsb
cmpl
dec
xor
mov
movsb
icebp
lcall
insl
cmp
xor
add
mov
cmc
dec
adc
adc
mov
mov
subb
daa
out
and
mov
hlt
push
ja
loope
or
sbb
jg
data16
xor
or
add
je
lret
cmp
and
addr16
sub
out
adc
xchg
mov
nop
mov
add
test
or
mov
movsl
or
aad
rorl
in
jl
jne
sti
lds
xchg
adc
std
mov
lret
or
aam
stos
out
dec
lret
and
and
mov
or
aam
jno
addr16
sbb
or
mov
rolb
test
popa
cwtl
pusha
shrb
cmpsb
jnp
leave
cld
and
pop
in
in
pop
pop
dec
adc
mov
ror
push
cmp
inc
adc
imul
pop
daa
pusha
jne
jmp
lret
repnz
jne
xor
push
lret
jl
mov
push
xchg
adc
hlt
nop
jo
or
test
scas
loope
cmp
insl
repz
mov
test
adc
iret
call
lods
push
mov
or
test
ds
ja
jae
jne
xchg
inc
call
pusha
jecxz
loop
add
popf
test
xor
sbb
xor
push
mov
aaa
adc
dec
fwait
imul
xor
or
mov
insl
pop
push
mov
ja
mov
shll
xchg
sub
adcb
inc
dec
div
mov
pop
mov
xchg
outsb
out
xchg
loop
fmull
jmp
les
cmp
fnstsw
jg
das
repz
inc
sbb
inc
negl
test
idiv
jbe
into
and
inc
mov
mov
sarl
pop
inc
mov
jnp
shll
push
mov
mov
test
lret
and
repnz
push
movsl
push
dec
sub
out
dec
pop
in
cmp
cmp
cltd
dec
dec
add
xor
xor
scas
sub
pop
mov
push
cwtl
sub
pop
jmp
faddl
and
pusha
mov
loop
ljmp
shrl
cs
xchg
neg
cmpl
inc
roll
dec
mov
sahf
rorb
test
cmc
es
in
mov
or
inc
jae
into
jecxz
add
outsb
icebp
ret
cs
stc
cmc
jne
push
cmc
nop
adc
cmp
jo
xor
cmpsl
xchg
dec
scas
mov
lret
roll
iret
inc
sbb
mov
jae
dec
push
loopne
int3
push
pop
xor
or
jne
mov
ds
iret
xlat
fs
movq
pop
test
cmp
fstps
jns
pop
cmp
dec
test
push
stc
fsubrs
xchg
sbb
cmp
add
sbb
push
outsb
xchg
dec
inc
push
movsb
dec
jmp
cmp
jg
aad
scas
sbb
and
dec
bound
test
mul
inc
stc
outsl
xor
sub
jp
sbb
loopne
ror
js
aad
and
adc
inc
inc
mov
stos
push
test
inc
xchg
pop
inc
mov
filds
inc
mov
mov
cltd
jne
jo
repnz
or
sub
repz
mov
add
adc
je
mulb
enter
pop
pop
pop
ja
outsb
mov
int3
shlb
cmpxchg
inc
or
xchg
test
aas
mov
or
xor
dec
fs
vmulss
int
iret
imul
and
negl
cmp
push
arpl
or
sub
mov
xchg
mov
movsb
test
shl
pushf
cmp
xor
xchg
sub
lds
orl
hlt
inc
dec
call
in
push
idivb
ret
xor
stc
in
inc
inc
sarb
sbb
icebp
jo
or
or
jb
pop
push
scas
pop
lods
daa
mov
pop
ja
cmp
mov
nop
mov
dec
out
sub
inc
testl
dec
fcoml
or
xchg
sbb
push
cli
and
sbb
or
sahf
xchg
stos
xor
push
sbb
rorl
mov
movsl
mov
pop
xor
and
jl
mov
dec
inc
fs
cmp
lods
aas
mov
xchg
mov
andb
sub
lds
repnz
out
clc
aam
loope
jge
popa
sbb
pushf
or
cmp
mov
mov
jge
push
ljmp
sub
sarb
mov
loope
jns
sbb
add
lds
inc
rorl
push
jecxz
mov
adc
cltd
xor
pop
sarb
xorb
iret
sub
and
in
mov
insl
push
hlt
mov
xchg
ret
mov
dec
mov
jecxz,pn
fdiv
cli
sub
shlb
mov
insl
bound
cmp
adc
mov
mov
insb
xor
mov
mov
dec
dec
pushf
scas
into
cmp
jmp
test
xor
dec
je
push
insl
in
lea
sub
sbb
fmulp
xlat
jno
cmc
popa
inc
add
xchg
or
mov
sete
mov
push
mov
push
mov
xchg
cmp
xchg
lret
cld
call
leave
in
mov
xchg
mov
imul
scas
lods
adc
cmp
fadd
add
or
jnp
xchg
mov
out
push
sbb
sub
dec
mov
loopne
push
daa
pop
pop
mov
and
addr16
sub
xchg
mov
fisttpll
dec
pop
popf
adc
lret
pop
xchg
call
push
int3
xor
mov
mov
gs
add
mov
and
dec
shl
popf
mov
and
push
lods
or
lea
dec
dec
pusha
inc
jns
cmp
xchg
test
gs
cmc
cmpsb
cmc
push
cld
fwait
enter
inc
and
lcall
pop
adc
in
stos
mov
addr16
inc
dec
adc
xchg
mov
movsl
shlb
pop
xchg
leave
bound
or
jg
sahf
into
mov
or
jecxz
mov
in
mov
xor
popa
jo
pop
fwait
movsl
lock
cwtl
cmpsb
jl
movsl
pop
cmp
scas
xor
lcall
jle
sti
xlat
jb
and
lea
mov
loope
scas
shlb
sub
push
arpl
adc
in
in
inc
mov
roll
sub
inc
fwait
add
dec
cld
fisubrl
sbb
push
ds
lret
sbb
xchg
inc
or
or
std
cmp
or
mov
pop
repz
jmp
pop
mov
ss
lock
dec
outsl
xchg
jns
cld
int
shlb
push
push
cmp
pop
or
int3
imul
aaa
das
mov
adc
fistl
push
mov
inc
jle
pop
sbb
mov
xchg
xchg
push
adc
jo
lahf
cmp
mov
stos
sub
add
in
push
movsl
test
sub
mov
insb
and
out
ffree
out
rcrl
jb
fs
mov
push
subb
cmpsb
imul
mov
cmp
insb
jge
xchg
mov
adc
sbb
cmpsb
pop
xchg
jge
push
fucomi
inc
test
nop
sahf
push
out
icebp
insl
shl
je
mov
filds
mov
lea
daa
jle
cmp
or
jle
dec
mov
into
leave
das
popa
jns
int
lret
clc
jae
lcall
sub
xlat
arpl
fildll
dec
in
je
test
in
xor
fisttpll
in
cmp
pop
inc
mov
or
mov
jmp
pop
add
rcl
sub
les
sub
or
addb
pop
mov
cwtl
pop
adc
stos
pop
mov
sbbb
orb
jne
fs
popf
test
mov
xlat
jge
jbe
and
sar
and
add
in
test
loope
fsubl
jle
testb
out
mov
dec
cmpsb
pop
jbe
xor
push
or
dec
jae
shl
cli
xor
rol
insl
lds
out
cs
sub
rorb
stos
mov
push
ret
cmp
sbb
js
inc
push
sbb
scas
cmp
inc
xor
add
scas
fnsave
jmp
arpl
adcb
daa
cmp
test
cmpsb
inc
xchg
loope
push
ret
xchg
mov
mov
outsl
or
mov
mov
jno
sbb
cli
inc
daa
add
pushf
dec
enter
repz
cmp
loopne
jecxz
popa
mov
test
inc
movsl
pop
sub
jp
cmpsl
aam
or
add
cwtl
jo
scas
inc
ds
sub
xchg
loop
push
mov
cmpsb
das
adc
fidivrs
push
pushf
mov
enter
adc
repz
push
in
fcmovu
shr
out
xchg
and
push
xor
out
pop
mov
sub
and
aad
push
and
jmp
fcompl
cli
adc
mov
and
dec
xor
cmp
addr16
sarl
xlat
mov
rolb
mov
repz
inc
xor
sub
scas
jno
add
adc
je
int3
or
jge
and
add
xor
pop
psubsb
adc
fucomp
shrl
xor
lcall
and
pushf
pop
pop
sbb
lods
cltd
in
in
cmpl
adc
mov
mov
jecxz
xchg
insl
aaa
aad
ljmp
mov
jg
and
mov
test
or
jo
lret
push
jo
sbb
scas
rcrl
stos
jg
test
xor
inc
mov
xor
push
mov
flds
pop
call
add
sub
in
jae
fiaddl
jbe
clc
sbb
mov
mov
inc
cmp
or
cmp
stc
push
mov
stos
sbb
pop
out
mov
mov
dec
and
cmpsb
les
or
flds
movsb
aam
cmp
sbb
jmp
xchg
mov
leave
ret
xlat
call
sar
jle
outsb
in
test
sbb
cmp
int
aad
call
or
shl
in
xor
cmp
fidivrl
dec
into
mov
adcb
sub
shlb
idiv
testl
out
cwtl
xchg
leave
sbb
or
je
inc
out
pop
stc
arpl
ss
push
add
inc
sub
in
pop
cmpb
fnstsw
mov
cmp
inc
adc
jg
std
sbbl
jmp
je
stc
ja
add
out
jp
mov
mov
xor
inc
xchg
xchg
push
mov
mov
in
and
push
xchg
fwait
jmp
push
loopne
rcrl
shlb
int3
push
jle
lods
push
and
adc
rorb
in
pushf
push
jae
cs
out
add
mov
in
add
add
cmpsl
test
int3
popf
sbb
xchg
add
nop
mov
cltd
push
sbb
pop
ljmp
std
and
or
mov
test
cmpsl
insl
insl
pop
xchg
fcmovbe
sar
imul
push
pop
icebp
pop
movl
adc
push
int3
arpl
stc
or
or
mov
dec
mov
jle
mov
movl
repz
jae
out
ret
lret
loop
fmull
fildl
iret
stos
orb
add
sbb
fnstenv
push
push
inc
xchg
xor
pop
jge
mov
inc
pop
shlb
mov
push
jge
mov
and
jmp
bound
mov
mov
jb
ret
xor
mov
cli
pop
jle
mov
fucom
jno
mov
xchg
xor
jg
mov
mov
xchg
pop
lock
leave
xor
mov
mov
sahf
sbb
lahf
push
pop
hlt
or
xor
dec
add
cmpsb
loop
jns
mov
add
jnp
jmp
mov
inc
pusha
cmp
test
pop
inc
aas
mov
mov
add
pop
inc
pop
cmp
cmp
mov
sar
fcomi
sbb
loop
gs
pop
jbe
add
shll
cwtl
aad
xchg
jg
in
and
adcb
push
mov
pop
nop
push
jecxz
or
jns
fists
jle
fsts
rcl
dec
push
bnd
pop
int
lea
repnz
loopne
xchg
and
shll
sarl
push
mov
fwait
ret
jp
bound
hlt
in
cltd
cli
and
cmp
cld
cli
mov
insl
repnz
jl,pt
mov
xchg
and
ljmp
push
aaa
neg
test
dec
or
cmc
mov
add
mov
inc
rorl
rorb
shrl
cs
arpl
push
call
sub
inc
mov
cmp
or
lea
pop
call
addr16
add
aam
mov
adc
add
sub
rcl
js
mov
je
push
cmp
xchg
jmp
mov
inc
mov
lods
cwtl
inc
es
add
cmp
test
cs
xlat
sbb
sub
push
adc
xchg
xor
fdivs
inc
mov
stos
out
fucomp
xor
push
push
jns
das
lea
fldl
hlt
add
fisttpll
stos
adc
sub
imul
jne
cmp
adc
pop
dec
add
dec
fidivrl
sub
mov
cmp
mov
add
cmp
pop
stc
push
pop
sbb
xchg
pusha
or
add
dec
or
xchg
icebp
sub
adc
mov
cmp
inc
cli
add
push
or
fdivl
or
dec
pop
mov
sbb
js
popl
lret
add
cmpsb
loope
dec
cmp
xor
out
xchg
cmp
int3
fdivrs
cmp
push
mov
bound
inc
mov
dec
roll
scas
es
bound
lret
aad
pop
pop
mov
mov
pop
leave
stos
filds
pop
push
call
aas
ret
xchg
sub
push
popa
and
stc
sbb
push
adc
mov
mov
scas
cli
sbbl
ss
xor
jge
sti
aam
filds
xor
xchg
int3
out
imul
pop
add
mov
mov
popf
mov
add
loop
jmp
popf
mov
lahf
insl
push
mov
in
sub
fisttpl
jo
inc
lods
sbb
fisttpl
pop
ret
sub
cmc
test
in
pop
adc
xchg
or
shll
push
shlb
in
inc
test
lds
mov
aam
lds
inc
jns
pop
mov
mov
std
jp
stc
je
mov
cld
push
loop
push
es
stos
inc
and
or
jle
and
fwait
add
push
sbb
out
xchg
scas
add
jl
fldcw
call
mov
mov
sti
pop
add
sbb
loope
nop
xor
add
dec
xchg
test
add
jmp
xchg
cld
pop
movsl
sub
inc
cmp
arpl
movsl
movsb
lods
push
mov
mov
pop
ret
lret
mov
xchg
or
pop
mov
cmp
add
ret
xchg
and
push
mov
adc
adc
or
mov
fidivl
push
sbb
xchg
sbb
xor
pop
hlt
jp
xchg
xor
cmp
outsl
stc
push
hlt
gs
and
xlat
cmpl
in
lret
sahf
into
xchg
xor
int3
arpl
int
std
or
cmp
pop
jle
rolb
mulb
inc
xor
mov
lcall
pop
inc
inc
push
and
xchg
add
into
mov
or
in
cmc
imul
mov
test
std
push
and
xor
pop
cs
push
ret
dec
divb
icebp
pop
out
cmpsl
cmp
and
test
fistps
cmpsb
fs
lds
jb
out
jbe
js
add
dec
icebp
cs
xchg
loope
gs
or
xchg
cmp
loope
pop
cmp
sbbl
int3
addr16
mov
jmp
add
xor
push
jmp
sbb
dec
push
jecxz
dec
std
stos
sti
sbb
clc
ret
jge
cmpb
xorl
xchg
or
xchg
scas
mov
std
mov
mov
pop
movsl
and
pop
movsb
test
rcll
or
xor
cmp
sub
mov
sub
pop
adc
and
aad
add
adc
inc
loop
iret
loopne
jle
jg
cld
jp
nop
ja
dec
loop
ds
insb
sub
imul
stos
or
stc
cmp
es
ss
and
cmp
pop
push
mov
repnz
aam
mov
inc
loop
push
adc
xchg
pop
mov
js
insl
clc
enter
lret
mov
mov
jb
aad
out
cmp
ds
xchg
xor
repnz
jg
adc
jge
push
inc
cmp
movsl
fs
cmp
add
cwtl
push
nop
mov
add
dec
cmp
jno
mov
test
fs
daa
push
sbb
gs
shrl
push
test
icebp
notl
daa
push
adc
mov
mov
xlat
xchg
movsl
adc
mov
popa
adc
xchg
lret
cwtl
pop
in
dec
cmp
test
adc
mov
mov
mov
pop
sbb
pop
aam
int3
mov
es
adc
pop
fnsave
cmc
xor
in
cmp
data16
frstor
in
mov
push
mov
mov
jecxz
add
jno
bound
xchg
dec
addr16
cmpsb
mov
pusha
pop
push
out
jle,pn
outsl
rclb
push
xorl
jno
mov
loop
jp
mov
sub
fdivrp
jp
mov
cmpb
mov
mov
out
bound
xor
push
cmc
fidivrl
mov
or
data16
ret
push
out
xchg
jbe
xor
sbb
and
jmp
test
stos
arpl
icebp
out
adc
scas
call
or
inc
arpl
je
orl
push
xchg
push
iret
mov
negl
movsb
nop
paddd
outsb
jnp
sub
popf
pop
pop
arpl
cmpsl
mov
xchg
test
idiv
mov
test
lds
mov
add
mov
out
das
hlt
dec
sbb
cmp
cmp
dec
out
int3
scas
pusha
fwait
add
xchg
cli
push
cli
lahf
pop
push
notl
into
stc
dec
insl
push
push
lcall
sub
push
sbb
dec
dec
inc
les
mov
push
add
jns
pop
ljmp
loop
arpl
mov
push
pop
jecxz
cmp
pop
add
jmp
ret
jge
imul
and
add
bound
push
loop
xor
int
cwtl
stos
jns
in
sub
fisubl
sahf
in
stos
fcmovb
sbb
cli
ret
xor
pcmpgtw
imulb
icebp
movsl
fstpl
cmc
std
pop
xorb
rol
sub
sbb
dec
lods
push
lahf
je
or
xor
xchg
insb
dec
scas
loop
and
add
push
mov
pop
pop
jmp
mov
push
mov
jno
lret
push
sbbb
cmpsl
repnz
sbb
loop
push
fs
pop
testb
daa
std
lock
xchg
push
sbb
push
push
fnstenv
pop
mov
adc
dec
call
sbb
adc
sub
notb
int
jnp
test
jmp
pop
mov
or
lret
rcll
gs
xchg
mov
inc
rorl
cli
inc
idivl
xchg
xlat
insb
mov
mov
roll
or
pop
mov
cmp
pop
dec
dec
mov
mov
inc
and
push
cmp
bnd
jns
sbbl
xor
std
cmp
push
mov
sub
add
sub
add
adc
push
pop
jmp
emms
sub
leave
fwait
xchg
fs
arpl
adc
sbb
mov
mulb
das
push
inc
sub
mov
xchg
repz
std
sub
xchg
iret
test
hlt
add
fs
pop
push
pushf
inc
jae
rcrl
pop
cmpsl
jno
pop
dec
mov
push
lret
loop
into
add
lret
add
cmc
mov
jl
jge
add
jp
sub
mul
rcrl
mov
push
js
mov
dec
icebp
dec
or
arpl
mov
cmp
and
idivl
aaa
popf
push
imul
test
sbb
and
orl
rclb
inc
pop
cs
push
insb
mov
shrb
or
mov
je
xchg
enter
pop
jecxz
stos
mov
mov
in
imul
test
es
sbb
xor
mov
jle
sbb
cmp
pop
push
inc
add
test
das
loop
mov
or
stc
aas
mov
testb
imul
push
jp
xchg
jg
lock
sbb
and
in
xor
scas
sub
mov
or
mov
nop
xor
dec
jmp
add
jnp
sub
jnp
ja
fcmovu
lock
jmp
sbb
sbb
lods
jmp
inc
movsb
xlat
sub
cmc
mov
repz
and
jb
loop
sbb
cmpsb
add
es
pop
addl
or
jge
pop
sub
pop
pop
pushf
loope
add
cmp
mov
je
mov
and
cs
sub
out
loop
xchg
addl
mov
fsubr
popa
fs
jo
or
add
mov
push
and
int3
out
stc
xlat
mov
sti
gs
sub
fsubrs
mov
clc
scas
xchg
xchg
mov
shl
lret
push
repz
movsl
out
sbb
jecxz
stos
mov
push
outsl
sub
pop
add
push
jb
and
mov
dec
fwait
inc
lret
sti
and
mov
lods
out
scas
push
shll
or
pushl
aad
leave
scas
sahf
and
in
push
sub
imul
popa
subb
xor
ret
sbb
push
mov
movsb
add
jbe
push
or
adcl
cmpsl
sub
add
scas
push
dec
insb
mov
mov
dec
push
shll
mov
mov
loope
adc
dec
mov
dec
pop
push
jbe
test
mov
test
std
xlat
addr16
xlat
mov
or
test
pushf
dec
clc
and
mov
popa
cli
lea
int
add
cld
mov
or
push
mov
arpl
js
sub
lahf
fs
push
jle
cmp
stc
out
out
adc
jge
into
sahf
cmp
mov
fldenvs
enter
pop
jne
fidivl
ror
inc
sbb
inc
or
ljmp
mov
dec
adc
rclb
sbb
lds
cmp
jg
pusha
mov
lcall
mov
in
aaa
pop
jo
jg
adc
jns
xchg
sbbb
iret
mov
jns
rol
mov
xchg
imul
and
js
mov
add
cmpsl
cmp
jae
dec
cmp
inc
sbb
loopne
out
loop
add
inc
ljmp
dec
jecxz
cld
movsb
pop
add
lock
add
cmpsb
push
inc
inc
mov
and
shrb
in
aam
xchg
sbb
shll
mov
cmp
jg
cmp
loop
add
fidivl
cmp
adc
scas
fsubrl
cmp
xor
cmp
jo
out
adc
sub
pop
sahf
int3
ljmp
sub
hlt
aad
dec
int
cld
mov
dec
int
scas
and
jp
jle
repz
out
pop
xor
mov
or
push
shrb
clc
mov
cmp
sbb
ljmp
sub
jnp
lock
les
dec
jge
mov
sbb
and
and
sbb
scas
jae
cmp
jns
xchg
insb
daa
ret
scas
pop
test
addr16
imul
pop
das
lods
push
clc
or
push
inc
xchg
shr
and
jg
pop
mov
xchg
mov
ljmp
ss
scas
lock
js
pop
pop
dec
inc
test
xor
aas
mov
clc
and
sti
xchg
enter
roll
pop
mov
dec
call
nop
sbb
pusha
push
push
add
jnp
adc
cwtl
xchg
mov
push
lret
scas
or
push
sub
fwait
out
mov
add
stos
sbb
pop
fwait
call
jns
jge
ljmp
out
pop
xlat
sbb
jge
xlat
and
push
sub
popa
fs
out
pop
aas
sub
jmp
adc
push
sbb
jle
lds
inc
dec
push
xchg
into
inc
mov
sub
les
add
jns
sbb
cmp
xchg
out
add
push
xor
sub
adc
pop
jl
out
jecxz
hlt
pop
push
movsb
ljmp
pop
dec
lods
add
cmp
dec
add
xchg
pushf
pop
sub
outsl
out
sub
pushf
aad
movsb
add
imul
mov
into
jnp
pop
fbstp
cmp
jl
test
subb
lcall
jg
sbb
test
sti
in
shlb
xchg
inc
movsl
pop
dec
xor
xor
es
cmp
mov
push
lret
testl
jge
jl
mov
pop
xchg
iret
mov
jle
push
mov
gs
and
aad
cmp
cmp
ffree
xchg
xor
mov
movl
and
cmp
cmp
cmp
mov
aam
daa
aas
aad
in
push
adc
je
cmc
cmpsb
sti
add
pop
lea
ret
add
repnz
xorb
jbe
insl
gs
in
fwait
les
jecxz
sub
add
mov
mov
std
es
ret
lahf
inc
sub
in
pop
mov
fs
dec
mov
les
hlt
stos
jecxz
pushf
mov
sbb
cli
pusha
xor
pop
das
arpl
lret
aad
es
jg
sti
add
insb
shl
or
jne
pop
cltd
sbb
push
push
inc
or
mov
fildl
add
stos
push
pop
sbbl
xchg
xchg
xchg
sbb
sub
add
pop
fdivrp
and
insl
xor
sub
mov
jns
lock
movsb
cwtl
negl
mov
mov
sub
hlt
outsb
popf
fiaddl
cmpsl
sti
xchg
lea
sub
inc
and
out
das
push
xor
ret
push
dec
inc
jmp
pop
movsl
push
lret
pminub
lret
clc
push
adc
xchg
push
jmp
hlt
xchg
sbb
fbstp
push
adc
or
cmp
pop
adcb
push
lea
push
inc
cs
mov
std
or
mov
jmp
jbe
leave
stos
add
dec
test
xchg
inc
test
ss
sub
mov
jmp
repnz
bound
mov
paddusb
fwait
mov
sbb
std
lods
pop
test
xchg
outsl
dec
xchg
cmp
pop
cli
imull
pushf
testl
mov
pop
ret
sbb
sub
sbb
push
loope
xlat
xorb
push
xor
int3
ret
mov
pop
add
sub
jbe
imulb
mov
adc
leave
test
mov
jp
adc
adc
sub
and
and
add
add
add
pop
test
and
or
or
cli
jne
fidivs
sbb
test
ss
bound
lahf
sysexit
stos
dec
movsb
mov
and
scas
fcomps
ja
inc
in
adc
lea
movsl
mov
jnp
push
push
or
pop
inc
fwait
rcrl
scas
cld
fdivrl
aad
imull
xchg
into
mov
addl
inc
hlt
xchg
inc
clc
jns
in
pop
adc
jns
pxor
sbb
and
sub
jns
sti
mov
scas
push
iret
ret
gs
clc
mov
mov
arpl
dec
push
mov
popf
jle
addr16
cmp
sub
call
repnz
pop
xor
sbb
fwait
mov
sbb
aaa
jl
out
lcall
inc
mov
mov
adc
fsubrl
adc
mov
pop
es
xor
stos
dec
xor
jnp
cmp
dec
mov
mov
mov
dec
shlb
fcompl
fstpt
test
sub
and
shr
or
or
test
sbbl
test
adc
jbe
imul
jl
xor
dec
and
sub
imul
lock
out
cmpl
xor
add
int3
rolb
popa
mov
inc
xor
mov
rolb
aam
lods
cwtl
sbb
les
pop
jae
pop
pushf
sbb
loope
mov
jnp
lahf
movb
sbb
jae
xor
cmpsl
out
inc
imul
lds
inc
in
lea
lret
aas
icebp
xchg
icebp
mov
jnp
fists
mov
cmp
ja
or
xchg
mov
lret
pop
mov
in
movsb
push
push
ror
mov
iret
testb
lcall
mov
mov
lods
mov
enter
push
jmp
inc
sbb
xor
add
add
fwait
xor
lea
mov
mov
xor
cwtl
sbb
jmp
inc
fimull
sbb
sub
add
inc
add
out
insb
mov
sti
fs
dec
inc
dec
lea
cld
sub
xor
aam
roll
jmp
and
jne
fcoms
js
dec
jmp
cmp
movsb
xchg
pop
shlb
lcall
jns
or
lds
sbb
sbb
push
in
cmp
scas
cmp
sbb
push
repnz
sbb
aas
cmp
in
les
lock
xor
push
clc
and
jb
ret
push
sarl
dec
xchg
out
or
nop
leave
fwait
xor
call
push
inc
out
adc
cmp
popa
jb
out
xor
imul
xchg
cmp
jns
mov
pop
dec
inc
lcall
repz
in
inc
loopne
int
xchg
fs
mov
jmp
push
mov
xchg
push
lret
cli
int3
ret
insb
das
or
sub
ljmp
sub
aam
bound
inc
add
xlat
dec
mov
xor
shll
movsb
xor
test
movsb
dec
stos
test
mov
mov
mov
inc
dec
add
xor
fwait
and
bnd
insl
adc
andl
push
mov
add
data16
and
jne
mull
xlat
rol
cmp
sub
sub
xor
mov
outsl
repnz
lret
enter
push
sub
xor
add
dec
xchg
lods
in
mov
scas
and
lret
movsb
sbb
mov
jno
pop
xor
shll
ds
jnp
cld
inc
inc
enter
lea
sbb
push
cmp
inc
and
inc
mov
pop
popa
dec
sbb
mov
insb
adc
aaa
add
or
xchg
cmpsb
hlt
xchg
jg
dec
push
cmpsl
xor
pop
inc
cmp
sarb
ljmp
mov
in
adc
jns
inc
sub
test
adc
fldcw
xchg
push
mov
in
aam
and
outsb
xchg
stc
lret
and
sbbb
enter
xchg
xlat
lea
test
or
or
adc
cmpsl
test
cwtl
pop
stc
shll
sub
mov
stos
cli
pop
movsb
inc
inc
xchg
xlat
shrb
push
adc
loope
lock
imul
sbb
pop
orb
mov
insb
inc
sbb
mov
xlat
test
cmp
rcll
repz
test
movsb
jl
mov
inc
mov
inc
xor
imul
les
pop
mov
adc
mov
je
insl
dec
lahf
inc
push
nop
gs
or
test
out
mov
leave
xor
lods
lcall
sub
jo
xor
leave
out
push
jne
repnz
pushw
and
popf
movsb
pop
mov
incl
mov
xchg
stos
adc
jno
cwtl
adc
lock
mov
rclb
xchg
fucom
into
frstor
adc
pop
arpl
cli
gs
or
imul
add
cli
cmp
sbb
imul
js
mov
pop
jl
inc
leave
sub
pop
mov
sbb
jp
sbb
call
icebp
mov
xor
out
pushf
ljmp
adc
adc
mov
cmpsl
int3
push
imul
and
aas
push
jno
pop
cmp
cmpsl
xor
or
in
xor
adc
pop
leave
mov
pop
mov
outsl
mov
pop
mov
mov
pop
js
int3
xchg
sahf
xchg
popa
int
fcompl
jae
ja
jg
loop
sub
sub
and
jae
jae
mov
lea
sbb
test
gs
cmp
pop
dec
lods
mov
jne
lahf
adc
sbb
movsl
enter
in
push
pop
xor
mov
pop
xor
jbe
xor
pop
dec
aas
dec
mov
sbb
add
out
mov
jns
jle
add
xchg
jl
hlt
xor
jno
loope
addb
mov
sbb
jns
inc
and
adc
sbb
mov
add
push
or
pop
pop
push
and
arpl
lock
xlat
pop
sub
xor
loop
scas
nop
add
pop
mov
sbb
push
mov
mov
fwait
cwtl
lea
popf
pusha
js
lock
mov
sub
sbb
insl
jnp
fsubrs
out
or
adcb
pop
nop
js
out
pop
daa
jecxz
mov
inc
pop
scas
mov
push
lock
mov
fisubrl
insb
sub
std
xor
jo
shll
ljmp
xchg
sbb
lea
and
cltd
sahf
xor
gs
xor
mov
mov
lret
mov
lcall
in
mov
repz
xor
and
or
in
sbb
dec
add
ret
sar
mov
aas
out
xor
es
jbe
loop
stos
out
dec
and
sub
cmpb
jns
and
mov
inc
sub
insb
pop
mov
jbe
mov
rorl
jl
aam
and
sbb
mov
or
pusha
fisubrl
xor
inc
imul
or
pop
jmp
hlt
fisttpl
sbb
lret
negb
arpl
sub
cmp
lock
or
jg
inc
int3
aam
in
js
pop
out
adc
aas
push
xchg
test
mov
push
out
in
inc
pop
shll
lret
xchg
xor
mov
stc
and
pop
cmp
jb
mov
insl
or
add
loop
inc
inc
scas
ljmp
mov
dec
mov
xchg
sbb
mov
stos
mov
xchg
cld
loop
repnz
arpl
mov
sub
shl
jno
and
push
mov
and
scas
lret
dec
dec
or
and
addr16
stc
inc
sbb
int
xchg
dec
icebp
mov
sub
pushf
cmp
out
inc
add
imul
pop
mov
mov
pop
inc
xor
jp
aad
mov
adc
and
cmpsb
lods
xor
or
cwtl
sub
jge
fadds
lcall
adc
push
outsl
adc
adc
push
insl
mov
xchg
es
daa
popf
xchg
cmovl
dec
push
cltd
stos
dec
mov
pop
mov
mov
shrl
or
add
xchg
enter
push
push
sbb
int
div
loopne
mov
jns
test
outsl
insb
outsl
cli
cmp
push
lods
rcrl
mov
xor
or
loopne
les
sahf
addr16
or
fildl
cs
pushf
inc
inc
cmp
cmpsb
out
pop
jb
or
add
sbb
sbb
pushf
int
mov
aad
loop
cmpsb
scas
jno
xchg
push
nop
call
loopne
pop
dec
ja
push
sbb
test
imul
out
ror
xor
inc
xor
sub
sbb
fcoms
push
push
popa
in
pop
xor
ja
out
sbb
scas
push
pop
cmp
jne
xchg
jmp
inc
push
into
push
mov
jnp
iret
mov
xchg
lock
cmp
mov
mov
inc
xchg
lock
and
xor
mov
fs
and
fnsave
cltd
jb
sub
cmp
adc
sbb
xchg
dec
lcall
daa
aas
pop
mov
adcl
jo
fstps
jle
ret
outsb
ret
mov
mov
ja
gs
loop
fiadds
jno
shr
lret
ljmp
repnz
jne
outsl
jne
ret
hlt
mov
inc
pop
push
sahf
leave
xchg
or
adc
and
lods
scas
inc
dec
repz
pusha
sub
fsts
jno
das
lods
popa
mov
dec
sub
adc
notl
daa
adc
or
jmp
mov
push
fucomp
add
mov
inc
mov
pushf
dec
pop
xor
out
scas
ljmp
jmp
rcl
je
test
and
or
fcompl
cmp
std
cli
xchg
xchg
arpl
mov
add
es
repz
clc
pop
pop
inc
push
sub
cld
dec
arpl
ljmp
dec
mov
adc
mov
prefetch
ret
push
mov
adc
mov
add
mov
repnz
cltd
sbb
aaa
sbb
adc
mov
lcall
pop
imul
insl
jl
mov
sub
fdivrp
mov
nop
daa
cltd
movsb
mov
pop
mov
mov
imulb
in
or
jo
jmp
gs
or
imul
mov
jns
fnsave
add
lds
and
dec
sarl
repz
pushf
mov
daa
imul
pusha
std
mov
dec
mov
lret
inc
jecxz
jae
imul
fstpt
jmp
sbbl
ljmp
int
cmpb
movsl
cmc
inc
insb
ret
lcall
fnstsw
and
or
jl
std
jno
cmp
dec
gs
sbb
push
addr16
negl
cli
jb
pop
aas
into
fidivs
in
mov
mov
std
xchg
ds
pop
mov
and
adc
pop
mov
mov
fptan
dec
in
jge
lea
xchg
sbb
push
test
lea
and
pop
movsb
lods
pop
dec
cmp
fisttps
and
lea
dec
icebp
test
xchg
cmp
icebp
jo
and
sarb
sbb
xor
jge
loop
xchg
jecxz
xor
rclb
push
jge
lret
cmpsl
sti
mov
dec
sub
add
addr16
and
inc
push
cmp
sbb
push
rorb
cli
popa
sub
push
xor
lock
nop
sbb
pop
out
iret
fistpl
mov
inc
push
and
ficoms
in
aas
xchg
fnstsw
inc
jne
ja
cli
jnp
in
cmc
mov
pop
jecxz
pop
pop
std
jne
pop
mov
or
jle
es
cmpsl
shrd
xorl
stos
xchg
mov
sbb
mov
push
sub
xchg
cwtl
and
cltd
mov
adc
popf
int3
pop
mov
and
rorl
dec
mov
mov
lahf
decl
les
mov
adc
test
adc
mov
jns
ret
lds
aam
popf
jecxz
rol
fldt
jns
test
mov
sub
xchg
mov
out
jbe
sub
add
xchg
mov
daa
repz
mov
sbb
addb
push
js
mov
xor
sbb
add
xchg
sub
pop
test
cmp
rcll
jecxz
push
scas
inc
pop
or
sub
cmp
push
imull
out
inc
mov
mov
sub
inc
mov
aad
push
dec
imul
shrb
mov
adc
jp
sahf
cs
movsb
push
imul
xor
jb
clc
xchg
or
aam
mov
cwtl
stc
push
sbb
shrb
pop
adc
fistpl
jg
fwait
mov
mov
les
mov
btc
jmp
sub
imul
mov
dec
xor
inc
sahf
adc
mov
je
mov
sti
add
leave
mov
add
xchg
fistpll
movsl
ss
push
int3
xchg
addr16
lods
sbb
mov
jno
push
bound
or
push
cli
cmp
sahf
std
repnz
fsubr
sbb
or
push
push
fldln2
and
mov
mov
dec
out
fistl
cmp
ret
aam
and
push
jnp
shlb
enter
push
lods
push
lock
mov
sbb
inc
iret
add
aas
popf
enter
xchg
xor
pushf
cmp
and
shlb
stos
mov
out
mov
or
cmp
ficompl
push
mov
add
std
popa
push
push
pop
dec
xor
mov
lea
pop
xor
imul
jp
je
sti
xor
mov
jnp
paddb
push
mov
out
or
push
mov
test
cmp
dec
loopne
jo
mov
sub
xor
rcrb
dec
divb
xchg
mov
mov
mov
pop
or
stos
xor
iret
pop
inc
mov
dec
xchg
push
add
sub
int
pop
pop
add
xchg
cmpsl
sub
mov
pusha
arpl
jns
in
pusha
scas
xlat
stos
xor
std
and
adc
aas
pop
mov
es
cli
call
mov
gs
daa
or
enter
popf
mov
cs
push
push
mov
mov
insl
insl
imul
xchg
adc
lret
mov
push
notl
jecxz
jg
jne
push
or
in
jecxz
fwait
add
ret
aad
ds
and
mov
xchg
jecxz
mov
rorb
fidivrl
shr
cmp
daa
mov
sbb
dec
fldenv
dec
addb
sbb
cltd
sub
sbb
stos
mov
xchg
mov
or
les
test
jp
sbb
icebp
jo
xor
sbbb
ret
scas
flds
fmull
jbe
pusha
mov
push
jecxz
div
in
rcrl
fdivrl
push
nop
into
addb
pop
data16
rcrb
xchg
mov
push
call
in
shll
popa
jmp
int
dec
inc
mov
cltd
cltd
xor
cmp
aad
push
xchg
pop
stos
and
cs
mov
mov
and
popf
in
loop
mov
mov
jns
insl
shlb
daa
out
sbb
xor
add
add
call
in
pop
and
mov
mov
mov
inc
xchg
pop
das
inc
mov
xor
sub
es
sarb
inc
xor
enter
pop
frstor
movsl
jecxz
sarl
ror
gs
or
cltd
fistpll
and
shrb
cltd
fidivrl
in
daa
inc
mov
xchg
aaa
pop
pop
in
jecxz
into
dec
xchg
cmp
jmp
add
mov
sub
aam
sahf
dec
or
sub
popf
cmp
and
or
and
push
rorb
shrl
push
icebp
repz
in
mov
cli
enter
loop
mov
xor
xor
push
fnstsw
sub
cmp
mov
jo
and
mov
adc
loop
lahf
xchg
and
sub
ret
ret
cmpsb
xor
stos
xchg
loop
into
hlt
jg
mov
lea
data16
outsl
and
push
cld
add
mov
daa
ret
jae
dec
sti
sbb
fadds
sub
fadd
pop
xlat
in
sub
inc
jae
push
cmpsl
jbe
mov
pop
inc
imul
push
xchg
mov
ret
scas
sbb
inc
loope
scas
rcl
mov
ljmp
aad
xor
in
test
adc
push
loopne
mov
lds
in
sar
movsl
in
sbbb
sarb
insb
scas
into
mov
push
js
cld
popf
add
repz
mov
test
xchg
push
outsl
push
push
xchg
int
pxor
push
mov
push
jbe
pop
lods
pop
pop
enter
nop
adc
xchg
and
dec
sbb
xchg
je
cmpsl
jne
xchg
int3
sub
mov
jnp
arpl
dec
mov
adc
ljmp
dec
or
dec
mov
dec
in
or
push
int3
sbb
xor
or
or
nop
push
imul
jns
in
push
or
inc
and
push
ret
jb
xchg
sahf
repz
loope
add
and
dec
pusha
int3
out
jo
mov
popf
and
adc
lock
push
pop
scas
adc
jmp
shrb
push
pop
cmp
mov
push
add
add
dec
and
jo
jae
shlb
mov
cwtl
test
cmp
lret
jb
or
pop
stos
adc
xchg
leave
movsb
repz
addb
aas
shrl
pushf
cmpsl
pop
dec
adc
inc
xor
lock
sbb
cmp
mov
stos
mov
rorl
jge
fdivrl
jno
into
fists
inc
xchg
inc
dec
inc
lock
ret
fs
xor
popa
inc
jle
xchg
mov
outsb
shll
in
imul
or
int3
lock
stos
mov
out
imul
sbb
pusha
fisubs
rol
pop
xor
negl
mov
add
inc
test
stos
lods
divl
aam
mov
pusha
cs
jns
push
inc
fwait
sbb
faddp
femms
sbb
add
nop
iret
scas
lea
test
add
push
aam
ss
jp
sub
mov
das
jo
mov
xchg
arpl
lods
mov
or
mov
push
in
sub
adc
pop
xchg
test
xchg
push
lea
fcom
lock
push
lods
pop
xor
insl
and
sub
test
and
sub
das
xor
aam
hlt
leave
negl
pusha
rolb
shlb
fdivrs
out
aas
fdivrp
leave
out
mov
fsubrl
mov
cmc
xor
pusha
adc
ret
push
pop
std
and
pop
pop
fistpl
and
jecxz
daa
sub
iret
inc
push
fstl
fistpll
lret
sahf
in
shrl
lcall
pop
mov
sub
pop
idivl
test
adc
loop
out
and
daa
cmp
ret
push
je
xchg
pop
dec
aaa
and
mov
and
andb
inc
pusha
inc
enter
sbb
fs
or
fs
add
orl
fxam
jg
and
dec
xchg
insb
in
mov
sub
push
push
push
sbb
ds
scas
mov
cmp
cmp
inc
mov
xchg
lcall
scas
lds
rcl
filds
jb
push
loop
add
jg
ss
loope
aad
jae
cmc
dec
pop
lret
pop
inc
inc
xor
xchg
mov
push
mov
lahf
push
mov
int3
adc
test
mov
shl
push
xchg
inc
mov
jp
fs
xchg
clc
sbb
into
adc
mov
imul
test
pusha
icebp
mov
xchg
repz
jmp
iret
push
lret
fisttpll
xor
mov
test
fdivs
or
sub
push
cwtl
or
sbb
out
imul
lock
xor
dec
or
cmpsb
and
xchg
mov
mov
mov
pop
or
or
inc
mov
jge
push
rorb
int3
add
lock
mov
push
push
adc
and
pop
cs
pop
push
shl
sub
stos
xor
jnp
xchg
sbb
mov
ss
lret
test
and
rcr
pop
jl
das
sbb
gs
aas
popf
mov
lock
xchg
into
push
or
cmpsl
pop
dec
arpl
cmpsb
fidivs
into
popa
add
xchg
fs
imul
scas
sub
into
aam
dec
inc
mov
dec
aaa
sub
xchg
cltd
lea
in
pop
inc
sub
adc
das
push
xchg
pop
push
or
add
stos
push
adc
inc
xchg
repnz
or
je
jo
idivb
or
cs
shll
in
jbe
push
pop
cmpb
out
xchg
out
and
cwtl
fcoml
flds
push
mov
mov
cmp
and
and
out
leave
and
adc
mov
cmc
sbbl
movsb
cld
sub
add
dec
test
pop
xchg
xlat
push
xchg
push
pop
aam
inc
inc
sub
adc
add
dec
add
iret
mov
mov
add
add
ljmp
movsl
out
sub
mov
inc
fsub
jo
inc
pop
mov
imul
mov
stc
pop
imul
or
jg
adc
popf
adc
ds
rcr
or
sub
push
jle
pop
and
xchg
aam
pop
xor
cwtl
mov
int3
scas
jl
jecxz
add
ret
movb
xchg
ss
or
stos
std
out
jb
inc
lods
enter
and
inc
mov
xchg
cli
cs
dec
je
cltd
pop
ljmp
mov
mov
xchg
repz
mov
xlat
cs
adc
cmp
mov
cli
and
nop
or
mov
push
pop
into
ja
sbb
aaa
adc
enter
xor
insl
xchg
out
push
add
out
cmp
push
pop
in
bound
mull
xor
sub
mov
adc
jmp
mov
enter
push
jmp
push
sub
xchg
push
outsl
or
push
adc
out
pop
and
mov
popf
in
xor
push
xchg
outsb
stos
cli
mov
adc
dec
mov
pop
dec
movsb
sbb
pop
jmp
and
mov
mov
xor
mov
test
adcb
std
sbb
icebp
sub
imul
jns
sbb
pop
mov
clc
pop
push
inc
sbb
int3
in
stos
out
inc
in
roll
pop
pop
cltd
push
push
icebp
sbb
mov
jmp
fwait
jl
add
arpl
cmc
xchg
aas
je
and
sub
icebp
loopne
sbb
ret
aad
stc
push
sbb
gs
push
lods
mov
mov
jle
cmp
mov
cmp
xchg
loop
mov
or
clc
add
aaa
in
fistpl
jne
addb
jmp
jne
push
add
mov
jle
xchg
and
outsl
sbb
push
mov
ficoms
jb
insb
xor
mov
adc
sti
popa
pop
movsb
icebp
cmc
in
jg
arpl
mov
xchg
xor
or
insb
jmp
push
mov
fstl
loop
add
cmc
fdivrp
add
out
idiv
test
mov
sub
je
add
mov
or
in
insb
xchg
or
dec
jmp
outsb
cmp
pop
fstl
or
clc
hlt
mov
sbb
cmpsb
sbb
sub
sub
ja
out
pop
call
int3
addr16
jns
lret
popf
adc
out
imul
or
cltd
cmp
pop
cmpsb
or
das
xor
adc
icebp
clc
jg
pop
loope
inc
sub
mov
jne
inc
in
cli
sub
daa
loopne
cmp
mov
outsb
dec
in
add
push
popa
scas
cmpsl
sahf
jp
mov
rcrl
sbb
push
js
xor
shl
jmp
or
repnz
pop
inc
pushf
in
fmul
jne
sarb
movsb
and
adc
fwait
mov
clc
xor
push
repz
jle
jae
dec
cmp
pushfw
push
push
ret
adc
aaa
inc
sub
leave
mov
mov
repnz
enter
and
dec
lods
dec
out
add
push
adc
dec
add
sbb
clc
sbb
repnz
fucom
inc
dec
jae
sahf
mov
lock
and
dec
dec
pop
add
vpsllvq
xor
sbb
push
cli
inc
jae
cltd
daa
cmp
cmp
loopne
and
and
bound
dec
mov
sbb
dec
popa
adc
push
jle
mov
fnstcw
adc
sbb
insb
out
cmp
dec
xor
aam
jp
and
cs
cltd
mov
mov
adc
aaa
inc
pop
iret
inc
push
mov
mov
in
cmp
mov
ss
xor
sbb
loope
stc
dec
inc
adc
mov
mov
sub
insl
lds
or
lock
out
mov
lods
mov
imul
into
rorl
das
xor
ror
xor
lds
into
mov
mov
add
jo
inc
iret
xlat
add
test
add
mov
sub
lods
pop
push
ds
push
pushf
lret
push
mov
mov
aad
sub
push
jo
inc
fldt
sub
lods
push
popf
imul
mov
cmpsl
xor
int3
xchg
inc
insl
outsb
push
mov
inc
daa
add
sti
lods
outsb
mov
sbb
jbe
push
incl
pop
or
pop
jmp
jnp
mov
leave
add
jmp
xchg
inc
lcall
add
hlt
out
lods
mov
ret
cmp
xchg
aas
std
adc
mov
push
sbb
rorl
or
mov
rorl
mov
xor
cli
xchg
cmp
es
sub
stos
test
sub
sub
inc
call
jne
stos
js
repz
leave
adc
test
outsl
loop
fidivrl
mov
jbe
or
rorl
movsb
lods
add
pusha
jecxz
dec
push
idivb
repnz
mov
iret
mov
ljmp
sbb
or
lret
lods
pusha
push
mov
push
pop
and
inc
or
mov
jne
or
adc
outsb
push
push
pusha
mov
pop
inc
and
lret
cwtl
mov
popf
xchg
add
or
push
pop
fcoms
mov
cmp
nop
and
pop
movsb
sub
sbb
fisubrl
mov
stos
repnz
shll
cs
hlt
pop
adc
xor
loope
dec
mov
sbb
fwait
imul
sub
insl
push
and
xchg
add
push
lock
outsb
jne
int
mov
cld
stos
inc
push
and
std
xchg
rorb
jno
mov
cmp
pop
test
add
ss
lret
out
data16
xchg
bound
xor
fs
cmpl
in
xor
jmp
stos
push
hlt
jmp
cmc
fstpl
xor
xchg
das
jae
mov
fadds
mov
adcl
in
out
cmpsl
insl
test
sub
push
or
popf
xchg
sbbl
or
pusha
lock
lret
mov
push
ror
push
hlt
das
je
mov
hlt
sbb
jno
push
ja
pop
js
jne
ds
xor
sbb
dec
push
lahf
std
adc
pop
ljmp
aas
cs
inc
inc
jge
movsl
insl
xchg
mov
call
pop
pop
mov
test
test
push
pop
in
pop
mov
and
shll
pushf
mov
push
push
and
iret
movsl
jecxz
add
mov
cmp
jbe
ficompl
es
loopne
lods
sub
test
lods
xlat
rorb
jae
xchg
jge
mov
dec
jbe
int3
loopne
dec
ror
xchg
pushf
das
stc
fisubrs
add
cmc
adc
shll
mov
lea
sub
rcrl
adc
or
out
sbb
sbb
js
push
je
iret
cmpsl
cltd
pop
stos
jl
addl
cmp
mov
push
lret
rcrl
cwtl
inc
shll
jg
push
lods
or
icebp
and
mov
xor
out
cmp
sub
in
mov
sbb
xchg
push
mov
jl
imul
in
mov
jmp
sti
cmpsb
fbld
mov
lahf
int
imul
fcomps
aaa
movsb
lahf
mov
adc
stc
xor
clc
test
push
xor
repz
ret
pop
loopne
roll
mov
jae
out
sbb
cmpsl
ret
cmp
mov
rclb
std
and
out
pop
hlt
daa
mov
sti
xor
ja
test
pushl
movsl
in
repnz
add
mov
xchg
mov
jmp
orl
or
shll
test
mov
sbbl
sbb
and
call
outsb
sbb
and
lods
in
push
lods
push
mov
daa
movsb
call
and
xor
sbb
cld
call
xchg
in
das
sarl
ja
inc
insb
jle
loope
pop
push
aad
jle
into
xor
les
icebp
int3
or
pusha
jecxz
pushf
push
adc
xor
mov
in
movsl
jbe
add
push
das
jmp
fnstenv
sub
dec
rcrl
nop
lret
inc
lods
lahf
and
lea
aad
jo
add
inc
xchg
jle
jns
clc
sahf
inc
test
ret
push
adc
and
fstpt
subl
sub
js
negb
mov
loop
aaa
fwait
pop
out
adc
ljmp
mov
loopne
sbb
push
lds
xchg
add
imul
jnp
dec
mov
push
clc
or
sub
call
loope
fcompl
inc
jnp
in
push
lahf
xchg
ja
mov
dec
push
and
and
and
loopne
xlat
xchg
cltd
adc
sbb
push
out
outsb
hlt
mov
movsl
shl
jno
cltd
sbbb
pop
or
popf
aas
mov
clc
sbb
int3
push
xchg
lret
sahf
fmull
dec
in
dec
loope
xchg
in
test
loopne
mov
adc
add
jge
in
cmp
jbe
push
add
mov
mov
xchg
and
or
add
and
cmpl
and
sub
cmpl
dec
mov
push
stos
out
pusha
xchg
jecxz
stos
mov
iret
jmp
jns
mov
cli
adc
mov
dec
aaa
test
cmc
mov
add
aad
aad
lret
adc
lods
pop
test
and
dec
sbb
sbb
inc
sbb
and
cs
mov
jo
movsb
hlt
adc
subl
mov
mov
insb
push
dec
xlat
popa
dec
movsl
or
in
int
push
mov
fidivrs
bound
mov
mov
cmp
fcoms
fwait
sahf
shlb
sbb
adc
cmpl
or
push
mov
xchg
push
aas
dec
jecxz
fisttpll
jno
test
sbb
adc
mov
push
push
adc
ror
hlt
sub
ljmp
jmp
mov
loope
push
rcrl
cmp
push
adcb
push
jno
xchg
mov
loop
mov
dec
jo
stos
jmp
pop
inc
xchg
sarl
xchg
ffree
xchg
sub
pusha
rol
push
cwtl
dec
add
subl
add
cmp
frstpm(287
adc
and
add
shrl
cmp
and
jnp
adc
iret
inc
mov
cltd
mov
jo
dec
mulb
jge
jbe
movsb
jo
jle
loop
and
arpl
sub
icebp
lea
cltd
xchg
ret
add
test
pop
xchg
adc
pop
mov
mov
inc
mov
clc
data16
insl
xchg
nopl
dec
or
xor
inc
jne
cwtl
aam
lods
lret
dec
jecxz
ret
or
ret
push
dec
dec
shrl
mov
pop
test
pop
xchg
sub
addl
pop
ror
fwait
stc
sub
pop
shrl
jp
pop
dec
in
and
repz
scas
add
ljmp
shlb
jecxz
out
data16
push
push
mov
push
dec
xchg
std
fisttps
fisubl
ljmp
jmp
sbb
mov
xor
fsub
sub
shll
or
lret
mov
test
or
and
push
roll
pop
and
sahf
sbb
sub
aad
rol
adc
sahf
mov
int3
mov
lcall
dec
xchg
push
push
mov
sub
addl
hlt
xlat
icebp
and
lea
inc
dec
icebp
fyl2xp1
movsb
movlhps
mov
jb
add
push
cmp
aad
lret
xchg
pushf
cmp
call
push
and
add
mov
shr
stc
or
adc
in
mov
jbe
inc
mov
aad
or
data16
add
mov
das
imul
pushf
aas
mov
out
mov
sarb
in
stos
xchg
inc
test
sub
dec
jmp
testl
sti
sub
sbb
mov
loope
fcoms
insl
sub
sbb
push
movsl
imul
xchg
les
aas
out
push
cmpsl
pop
out
call
aam
ljmp
clc
xchg
cmp
adc
iret
fwait
in
sbb
pop
gs
add
adc
fwait
out
add
sub
imul
jne
aas
bound
insb
fnstenv
sub
pop
jge
loope
mov
or
xbegin
cmp
adc
lods
pop
cmp
mov
hlt
adc
dec
popa
push
xor
hlt
push
out
or
mov
fmuls
push
adc
cwtl
ja
scas
mov
rcrb
adc
dec
mov
push
xchg
fs
sti
mov
pop
lahf
jnp
je
daa
push
mov
js
loopne
cltd
imul
jecxz
push
pop
loopne
cmpsl
push
pop
mov
scas
pop
neg
das
repz
sbb
lcall
dec
pushf
cmp
rcrl
add
in
fs
sub
adc
and
repnz
jnp
adc
jecxz
sbb
xchg
test
stc
or
jmp
and
insl
cli
je
dec
insb
cmc
aas
call
add
fldcw
mov
mov
cmpsb
or
or
out
sub
push
xlat
ret
lret
js
push
jg
aaa
pusha
add
inc
add
enter
pop
cmp
insb
les
sub
repnz
pop
xchg
or
cs
mov
mov
push
push
or
mov
push
js
insl
push
mov
test
adc
push
cmp
or
je
mov
movb
push
cmp
movsb
rcrl
lcall
loop
sbb
loop
and
pop
push
sbb
repnz
sub
mov
push
xor
pop
test
mov
xor
cmp
inc
shlb
les
mov
pop
add
mov
out
adc
test
fdiv
or
wbinvd
stos
xor
rorl
cltd
lahf
je
and
icebp
mov
cli
cmc
dec
bndldx
clc
out
pusha
bnd
rorl
mov
adc
mov
scas
loope
mov
sbb
fadds
dec
cmpl
cs
cwtl
push
imul
movsb
mov
push
arpl
xchg
aam
adc
push
dec
mov
out
xor
sahf
jb
dec
or
mov
rcrl
js
fistps
pop
call
add
in
xor
loope
stos
inc
shlb
ret
mov
xchg
popf
sub
sub
sub
fsubl
sahf
and
bound
int3
mov
push
gs
cmc
mov
mov
popf
mov
mov
fimuls
or
dec
inc
dec
push
out
or
mov
or
es
push
sbb
add
mov
push
rclb
adc
mov
xlat
gs
sub
jo
notl
clc
fsubrs
inc
fwait
dec
mov
pop
dec
add
or
pop
test
and
lea
or
dec
pop
fildll
addr16
mov
out
cs
orl
or
pop
pop
push
xchg
and
hlt
sub
add
push
fnstcw
cmp
data16
ret
push
or
lahf
sahf
int3
inc
rcl
sbb
scas
leave
or
movsb
xor
push
dec
mov
xor
repnz
ljmp
fs
cmpsl
dec
or
dec
inc
sub
and
mov
and
xor
push
lds
mov
push
rcl
add
jg
shlb
dec
dec
fbstp
repz
add
mov
inc
xchg
adc
dec
pop
int
mov
mov
jbe
xchg
ret
lds
push
sub
dec
cwtl
adcb
xor
pop
dec
and
jb
or
xchg
xor
pop
cmp
jbe
mov
mov
imull
lea
and
pop
push
inc
fnstenv
inc
dec
lock
adc
or
inc
enter
cmc
jb
cmpsl
jecxz
clc
ljmp
imul
jmp
ror
mov
cmp
repnz
or
jo
insb
xchg
rorl
insb
xchg
pop
lea
aas
mov
and
jmp
sbb
popf
sbb
jne
push
in
push
sub
inc
push
xchg
jns
scas
aas
enter
jb
push
dec
nop
xchg
clc
push
mov
adc
adc
mov
pop
das
jge
out
aad
daa
daa
jg
pop
mov
jne
daa
jb
shlb
lods
rol
enter
push
scas
aaa
dec
xor
sbb
fimull
mov
jmp
clc
lcall
stos
scas
imul
push
sti
imul
xchg
sbb
mov
imulb
ja
or
cmp
mov
push
repnz
pop
jns
cs
in
lock
and
scas
ss
mov
call
sbb
cmp
pop
dec
fimull
mov
dec
popf
flds
in
mov
pop
std
sub
jp
pop
jne
aas
out
cmp
pop
nop
scas
push
inc
mov
mov
jle
outsb
addb
fisubrl
cmp
lret
cmp
inc
ret
sub
bound
subl
xor
mov
push
inc
fisubrl
xor
and
les
ljmp
sbb
frstpm(287
in
jbe
sahf
mov
icebp
clc
push
imul
inc
jbe
cwtl
fisubrl
jns
push
pop
mulb
fldl
dec
jl
jbe
push
mov
xchg
sbb
xchg
es
ss
pusha
adc
repnz
gs
insb
dec
stos
add
xchg
mov
or
pushf
loopne
lea
icebp
push
pop
push
mov
and
pop
popf
js
pusha
mov
pusha
lret
sbb
push
and
movsb
pop
es
repnz
dec
enter
movsl
cmp
inc
cmp
mov
mov
ljmp
mov
sti
mov
rolb
xchg
jbe
fidivrl
cmp
sub
jg
mov
icebp
outsb
aad
push
adc
ror
pop
imul
lahf
in
leave
cwtl
dec
aas
sub
cwtl
insb
and
jb
je
xor
insl
add
in
into
inc
fwait
pop
outsl
xor
cwtl
sarl
test
pop
lret
mov
les
mov
pop
jge
lods
mov
push
lds
push
dec
aad
mov
or
push
nop
pop
cmp
pop
mov
sub
adc
xchg
hlt
mov
push
dec
ljmp
push
push
lods
stc
inc
int3
jns
or
bnd
sbbl
sub
packssdw
fcmovnu
sbb
inc
add
shr
lret
sbb
test
mov
out
or
dec
insl
data16
cmp
sbb
xchg
add
in
push
sbb
fcmovnbe
inc
adc
mov
add
int3
mov
int3
pop
hlt
lds
scas
cmp
fnstenv
xchg
sub
fisubrl
je
or
or
or
add
ret
in
test
cli
xchg
sti
pusha
lret
push
std
xor
cli
mov
inc
mov
nop
int3
lods
jne
push
jne
mov
out
sarl
out
mov
pop
cmp
xlat
or
jnp,pt
es
fbstp
jp
xchg
andb
sbb
leave
ljmp
roll
mov
jp
lcall
test
xlat
iret
fisubrl
xchg
dec
xor
xor
loope
add
adcl
stc
cmpsl
xchg
fs
mov
sbb
pop
push
xchg
jmp
dec
mov
add
sbb
inc
xchg
sbb
insb
mov
int3
shll
adc
test
test
mov
imul
roll
pop
shlb
xor
cmp
fiaddl
or
popa
inc
loop
daa
mov
add
mov
xchg
in
movsl
subl
fsubrs
inc
cltd
ds
adc
jb
xor
or
rcll
add
pop
outsl
sahf
mov
mov
mov
lock
inc
scas
dec
mov
dec
ds
adcl
repz
insb
add
cmp
cmpsl
out
mov
mov
cmpsl
or
jo
cwtl
out
mov
cs
pop
mov
sub
addr16
adc
ret
mov
cmp
add
cmpsb
mov
out
popf
pop
movsb
sbb
mov
cmp
mov
scas
mov
pop
jg
int3
cmp
pop
sub
mov
outsb
std
test
test
jp
ja
cmp
mov
inc
stos
jge
xchg
ret
iret
lods
dec
xchg
dec
clc
stc
cmp
outsb
mov
fwait
and
pop
ds
add
bnd
xchg
inc
or
into
addr16
mov
leave
add
or
rcl
pop
ljmp
inc
push
push
adc
addr16
test
fldenv
jnp
insl
inc
std
add
bound
cmpsl
adcl
xchg
test
xchg
js
test
sbb
or
popl
lods
je
mov
int3
adc
rolb
mov
cli
cltd
pop
or
inc
jl
sahf
mov
push
sub
and
adc
fmul
and
div
in
inc
jo
dec
xor
adc
sarb
testb
loope
xor
jg
xlat
jne
sub
push
in
mov
jg
adc
sub
cld
push
sub
pop
jecxz
out
out
jnp
xor
dec
aam
outsb
inc
push
push
xchg
mulb
cwtl
pop
sub
jecxz
ficomps
jbe
jne
fs
jo
mov
adc
xchg
es
xchg
pop
ss
mov
rcrb
inc
aad
sub
ret
cltd
add
mov
fsub
popa
push
mov
xchg
pop
jle
xor
mov
jge
xor
sub
mov
xchg
inc
or
loop
mov
inc
pusha
insb
iret
xchg
fcom
cmpb
movsl
pop
popa
scas
pusha
mov
cmp
mov
mov
fstpl
pop
fstpl
mov
or
xchg
ja
aas
xchg
jns
outsb
rol
and
cmp
cmp
xor
mov
sbb
roll
inc
mov
push
lock
pop
and
hlt
gs
mov
or
mov
adc
or
roll
cmpb
ret
push
frstor
fistpl
sbb
ret
xor
mov
aad
aaa
dec
subl
mov
aas
push
fiaddl
dec
popa
push
xchg
pusha
adc
and
fsub
dec
add
sar
inc
inc
jnp
xor
icebp
pop
mov
xor
loop
add
add
shrl
fcoms
scas
cmp
cmp
mov
cmc
cwtl
inc
insl
or
or
sbb
in
in
int3
loope
sub
sahf
cltd
adc
and
dec
lret
bound
clc
ja
push
iret
xchg
sub
add
lret
bound
les
addr16
enter
mov
xchg
gs
jo
shr
xchg
xchg
sbb
pop
dec
pop
test
into
push
movsb
cmp
pop
ljmp
nopl
mov
sarb
inc
ret
sbb
hlt
pushf
movsb
aaa
add
fdivrl
jbe
pop
loopne
push
xchg
dec
sbb
sbb
or
icebp
pop
and
notb
out
int3
stos
rol
stos
jecxz
jnp
hlt
add
sarl
jp
mov
scas
sbb
movsl
mov
xchg
cltd
push
sahf
xchg
cmp
mov
lcall
gs
lds
in
mov
enter
lret
xchg
pop
dec
ficoms
nop
xor
sub
movsl
or
cmpsl
es
add
mov
dec
lret
jno
dec
adc
xor
repnz
inc
or
aam
mov
sahf
xchg
lea
sbb
shr
xor
stos
repnz
test
es
add
add
jmp
ret
imul
mov
daa
fidivs
or
icebp
loop
fs
cwtl
imul
jl
or
inc
repz
xor
inc
mov
les
mov
push
adc
dec
hlt
cmp
sub
add
mov
sub
jl
mov
dec
xlat
pop
xchg
jge
mov
and
sub
mov
sub
jle
mov
add
or
mov
and
or
jge
pusha
push
in
out
pop
cmpsb
gs
mov
pop
and
pop
scas
out
aaa
push
fwait
arpl
in
leave
shrl
push
mov
shll
in
inc
mov
xor
fdivrl
scas
data16
mov
cmp
add
jmp
lods
repnz
ret
pop
call
cwtl
lret
lcall
testl
mov
sub
mov
mov
inc
cmp
xor
xchg
in
mov
mov
jmp
xor
cmp
mov
decb
mov
push
fisttpll
test
test
fsubrs
imul
cld
mov
leave
imul
mov
shll
cbtw
je
pop
mov
imul
push
pop
enter
mov
mov
adc
xor
iret
and
add
and
xchg
cwtl
mov
ljmp
cmpsb
stc
inc
jle
adc
adc
aam
jmp
outsl
scas
xchg
pop
jne
pop
out
pop
cmp
mov
xchg
or
mov
int
dec
xor
loopne
pop
pop
mov
push
mov
in
cmp
icebp
push
sub
pop
pop
stc
sbb
outsb
or
add
and
cmc
fwait
je
clc
add
pop
pop
fistps
int
incb
push
adc
jno,pt
movsl
fmul
in
iret
in
cmp
xchg
enter
out
leave
jmp
pop
std
xchg
add
and
cmp
pop
dec
shlb
pop
std
stos
cmpsl
in
mov
mov
repz
fstps
mov
fiaddl
loope
push
jne
sbb
aas
iret
jo
add
dec
dec
push
notb
sbb
fnsave
mov
icebp
fs
les
fcoml
cmc
cli
push
rcl
pop
repnz
xchg
outsl
jnp
shrd
mov
outsl
jne
cltd
dec
inc
mov
adc
push
out
aam
add
jge
sti
enter
decl
push
xlat
in
lcall
fisubs
jmp
mov
in
scas
incl
enter
gs
icebp
js
mov
xor
fwait
jbe
push
sbb
mov
mov
popf
scas
xor
push
sti
inc
imul
fisttpl
cld
jbe
xchg
add
test
jmp
adc
sbb
mov
sahf
stc
cmp
loope
push
test
pop
or
xchg
stc
clc
cmp
lods
shlb
dec
fidivs
stos
leave
aam
mov
loopne
jp
mov
outsb
icebp
clc
push
movsb
pop
pop
ja
inc
mov
jge
lea
adc
jle
dec
ja
movsl
out
xor
dec
mov
add
jns
scas
in
dec
imul
mov
sub
push
lea
pop
mov
lock
inc
jbe
sbb
add
jge
icebp
or
xchg
lods
sahf
adc
cli
popf
cli
in
and
aad
adc
inc
int3
add
push
sbb
pop
aas
shl
cmp
pushf
xchg
add
ds
stos
mov
dec
out
aad
mov
add
gs
and
cmp
xlat
fisubrs
adc
fidivrl
sub
into
mov
pop
xchg
in
or
addr16
mov
fidivs
mov
jae
icebp
xor
mov
out
xchg
push
ret
decb
and
into
pop
adc
xor
xor
push
out
stos
mov
mov
add
mov
insl
add
jg
test
or
hlt
test
dec
adc
and
mov
pop
sbb
test
lods
divl
jg
and
add
push
inc
mov
rcrl
jo
stos
test
sub
mov
jb
or
pop
sbb
or
push
push
mov
fs
loopne
push
mov
fldenv
xchg
je
add
dec
sub
adc
fwait
pop
ret
add
mov
adc
mov
in
int3
mov
test
xor
fbstp
xchg
add
int
stc
jl
mov
sbb
aas
nop
pushf
mov
mov
adc
mov
adc
mov
add
in
mov
popa
das
pop
addr16
mov
sbb
xchg
daa
es
cltd
xorb
cmc
fistpl
scas
or
xchg
iret
push
jne
lret
imul
aam
push
shll
mov
dec
cmc
push
je
mov
sub
lock
cmpsb
aam
scas
pop
or
icebp
loope
dec
in
outsl
test
jae
jnp
jl
enter
jmp
sahf
mov
jmp
mov
scas
cmc
sub
mov
dec
xor
loopne
aad
mov
loop
mov
stc
popf
mov
jecxz
mov
cmpsb
cmp
mov
scas
sbb
div
iret
fisubl
jo
mov
sub
rol
xchg
gs
push
sub
into
mov
fsubs
jbe
sub
shrl
test
push
cmp
inc
or
xchg
dec
pop
sub
mov
xchg
daa
fsubl
rcl
nop
outsb
ss
and
mov
dec
movsb
adc
jae
loop
jns
fstpl
ret
out
mov
cmp
inc
cmpsb
sub
inc
xor
cli
add
push
and
cwtl
and
xchg
js
xor
out
jmp
es
cmp
or
xchg
data16
sub
js
mov
repz
scas
cmp
pop
mov
cmp
loopne
cli
xchg
adc
bound
loop
inc
dec
into
clc
push
sub
inc
pop
adc
pop
in
inc
addr16
xor
int
mov
mov
push
push
lds
aaa
mov
out
adc
adc
imul
addr16
into
pop
sahf
test
int3
cmpsb
mov
jmp
and
inc
stos
mov
andl
xlat
ja
sub
inc
fcmovbe
mov
add
pushf
dec
ljmp
push
in
sub
daa
pop
inc
jmp
jecxz
jle
scas
sarl
and
add
movsl
nop
rep
push
loop
enter
add
cmpsl
enter
push
adc
xchg
scas
push
iret
aas
xor
mov
mov
in
test
adc
mov
jno
jo
xchg
jle
insl
or
fadd
cmp
bnd
or
jecxz
sbb
fbstp
inc
ret
push
mov
inc
rclb
cltd
jg
mov
adc
push
scas
inc
cwtl
mov
cmc
inc
add
pop
ja
xlat
jns
adc
push
rcrl
cld
je
repz
repz
aad
xchg
mov
repnz
lahf
imul
mov
fwait
imul
pusha
fmuls
ret
cwtl
and
jno
adc
fisttpll
add
mov
pushf
stc
pushf
nop
inc
test
mov
into
ds
sbb
orl
mov
and
pop
mov
repnz
adc
pop
ret
mov
adc
in
sti
inc
or
jmp
mov
xlat
out
pop
idivl
inc
lds
outsl
in
xor
add
sbb
testl
or
jmp
or
jge
in
gs
push
fbstp
scas
xor
sub
and
ljmp
mov
mov
cwtl
inc
sbb
movl
sbb
sbb
cmp
sub
inc
xor
cmp
lcall
je
ret
sbb
loopne
call
cltd
dec
cmp
ret
inc
push
push
xchg
add
into
enter
xchg
dec
cmp
xor
pop
mov
ja
jge
jl
popf
xchg
std
and
test
fisttpll
cmc
sbb
push
xchg
mov
pop
xor
cld
pop
mov
dec
outsb
inc
adc
cmp
add
test
in
in
cmp
mov
sbb
lcall
mov
fwait
fwait
call
movsb
mov
inc
fsubrs
test
adc
pop
xchg
loope
fs
fidivl
in
mov
dec
push
mov
sub
push
lds
mov
mov
test
dec
in
das
dec
sub
pop
pop
js
mov
pop
test
and
lock
jmp
scas
adc
int
lods
mov
mov
sbb
add
dec
pushf
inc
push
push
je
in
hlt
jbe
mov
jnp
test
xchg
and
push
push
popf
push
mov
rcll
adc
into
pop
push
sub
add
loope
into
subl
lcall
or
mov
sub
push
mov
mov
jg
loopne
adc
fistps
clc
stos
test
sub
pop
or
xlat
test
subl
push
pop
pop
fdivl
stc
sbb
insl
sbbb
pushf
iret
scas
push
add
mov
jecxz
fdivrs
fistpll
repnz
cli
mov
xor
cmpsl
repnz
jo
xchg
mov
aam
sub
arpl
sbb
xor
inc
mov
popf
add
ss
jg
mov
xor
push
cltd
push
addr16
mov
mov
repnz
mov
mov
add
rolb
test
mov
mov
stos
and
adcb
into
mov
pop
out
xchg
lret
jnp
inc
mov
pushf
add
adc
cmc
setns
fdivs
mov
sub
mov
lcall
and
xchg
xor
and
insb
lods
jo
jle
jno
iret
fbstp
dec
dec
das
insl
sbb
sbb
or
cli
or
lods
and
arpl
xor
out
gs
cmp
adc
out
mov
adc
and
and
jle
jae
jno
mov
data16
bound
sbb
add
js
mov
xchg
jge
cmpsl
push
lds
stos
popf
sub
popf
popf
pusha
stos
push
adc
fisttpl
lret
ds
scas
lea
imul
push
in
add
cs
adc
sbb
nop
hlt
xchg
lret
push
ljmp
push
outsb
push
in
fs
cmc
stc
jp
frstor
and
clc
mov
xlat
push
shll
sbb
xor
jbe
xchg
sar
lea
adc
sub
jle
lret
pop
test
negl
stos
jecxz
cmp
mov
jge
mov
andb
cli
sub
xchg
ret
mov
imul
xchg
push
fisttpll
cmp
mov
add
add
push
inc
xlat
push
sarl
in
and
cltd
and
das
cmp
jmp
inc
pusha
pop
inc
push
popa
mov
mov
insb
push
sarb
cli
sbb
outsl
sarb
lock
dec
jl
mov
mov
mov
pop
jb
push
test
je
sbb
cmp
popa
inc
ljmp
fs
cmpl
pop
lock
dec
push
xchg
rcr
fstp
jp
mov
xlat
fstps
int
pop
add
or
gs
test
xchg
xlat
shld
in
and
jno
mov
clc
lcall
popf
daa
pop
ret
jmp
les
xor
mov
adcb
divl
mov
adc
es
aad
mov
into
sub
mov
out
cmp
cwtl
jmp
jne
loope
jb
push
and
xchg
jae
push
mov
dec
jg
jae
jmp
js
shlb
adc
cmp
ss
push
and
push
nop
sbb
inc
adc
jne
aad
pmulhuw
push
js
das
clc
mov
ret
push
lea
and
pusha
jae
jecxz
cli
sub
pop
xchg
jb
jae
loop
jl
ror
lock
and
fwait
aas
loop
sub
cltd
cld
mov
jecxz
cmp
jg
cli
sbb
imul
fmull
stos
dec
cwtl
mull
jge
or
push
lret
mov
aam
into
dec
and
push
repz
outsl
in
sarl
sbb
fmul
add
xchg
pop
cli
sarb
in
jge
xlat
jnp
jecxz
out
movsl
mov
dec
mov
mov
sbb
hlt
jl
iret
push
pop
xchg
cmp
cmc
jno
outsb
bound
shlb
sbb
addr16
mov
add
lds
sbb
mov
pop
jbe
pushf
popl
and
xor
aad
ds
mov
add
call
out
in
test
stos
push
rcrl
cmpsl
mov
ffreep
movsb
push
push
adc
roll
xchg
xchg
or
or
mov
testl
xor
or
lret
sub
loope
ret
ljmp
push
jno
add
lock
lret
scas
lcall
mov
imul
ret
popa
sti
adcb
fisubl
adc
jge
psraw
adc
dec
sub
cmpsl
rcl
adc
mov
xchg
sar
push
lods
cmp
push
mov
mov
cltd
sub
xor
out
xlat
adc
jp
cli
sbb
icebp
and
dec
and
sti
scas
mov
int
mov
sub
shrl
dec
sbb
jp
jl
dec
in
addr16
sbb
ss
popa
cmpsl
aad
decb
mov
je
rcrb
sub
inc
xchg
adcl
adc
cmpb
mov
addr16
test
call
fstps
and
xor
and
fs
pop
lahf
mov
or
lea
add
popa
mov
pop
pop
dec
push
out
loopne
xchg
js
in
jae
mov
add
dec
rorl
test
or
sub
sub
and
in
and
cmc
addr16
scas
out
inc
rorb
mov
mov
add
dec
cwtl
data16
push
dec
push
dec
dec
cmp
aas
add
jb
xor
mov
xor
aad
or
mov
pop
mov
jp
ss
int
fwait
push
inc
fmuls
add
movsl
movsl
out
add
sub
pop
or
xchg
xor
mov
xor
test
loope
loopne
cmp
jmp
adc
inc
sahf
jecxz
push
aad
pop
push
lret
rclb
imul
sub
shlb
cmpsl
cli
das
aaa
hlt
jmp
cwtl
pop
push
ljmp
scas
je
jl
imul
inc
int3
in
subl
and
jae
inc
sub
sub
in
jno
pop
icebp
out
jo
pop
sbb
push
stc
sbb
popf
es
shlb
or
add
scas
stc
mov
mov
test
inc
mov
int
orl
pop
fsubl
jno
pop
push
mov
push
int
and
out
lea
sub
inc
xchg
jo
push
mov
push
cmp
mov
shrb
sti
dec
sarb
adc
pslld
imul
out
mov
sub
pop
mov
mov
xor
push
pop
or
and
sbb
les
and
mov
mov
jb
inc
call
adc
xor
sbb
in
mov
xchg
and
imull
add
cmp
mov
mov
push
imul
ret
fldl
and
sbb
mov
push
push
xlat
mov
jl
cli
jmp
movsb
sbb
iret
mov
xor
orb
mov
mov
and
jno
imulb
pop
out
push
pop
shl
ret
mov
jle
fs
aas
mov
xor
loop
test
mov
adc
andb
mov
push
setns
inc
push
test
ror
test
dec
cltd
test
fidivs
stos
pop
fidivs
sarb
jp
adc
int3
fsubl
mov
sub
or
cs
cmp
adc
sbb
loope
inc
pop
loope
mov
lret
arpl
xor
lret
dec
or
mov
ljmp
out
jbe
cmp
dec
nop
push
sub
mov
sub
fadd
mov
inc
out
and
scas
add
imul
andb
test
lds
popa
enter
jae
les
mov
mov
insb
fs
pop
clc
inc
lods
imul
sub
sbb
add
adc
dec
clc
lea
push
fs
aam
jl
out
sbb
notl
cs
stos
popf
sbb
bound
jno
ljmp
loopne
xor
fisttpll
fs
jae
jns
cmp
fwait
mov
xor
lods
popf
adc
add
ja
adc
mov
imul
cwtl
data16
jmp
pusha
call
jns
cld
lock
xor
lret
push
sbb
mov
cli
test
and
data16
loopne
mov
jmp
push
mov
jno
aad
xchg
test
xchg
mov
xchg
int
xchg
jle
into
and
cmp
dec
dec
cmp
xchg
push
call
push
test
in
insb
xchg
xor
pop
out
in
mov
repz
rolb
fisubrs
add
inc
mov
mov
pusha
and
iret
jmp
push
and
shl
movsw
jl
lods
int3
loope
outsl
jle
loope
push
mov
cmc
pop
jmp
sbb
mov
aas
or
es
stos
cltd
mov
sub
mov
ljmp
mov
adc
inc
jb
mov
sub
sbb
in
pop
mov
jne
sbb
movsb
in
js
or
jecxz
push
rclb
adc
sub
adc
aam
mov
push
fdivrs
sahf
imul
dec
outsb
jle
add
xchg
shr
pop
mov
lcall
jmp
es
xor
adc
xchg
cmpsb
pop
shrb
xchg
jo
xchg
pop
mov
fisubs
cmp
mov
loope
stc
ficomps
das
sub
jp
insl
popf
repnz
push
enter
mov
sub
mov
stos
adc
int3
mov
add
loopne
rorl
es
jg,pt
fs
push
cmp
call
adc
fnstenv
cmp
std
fwait
adc
push
and
pop
cmp
ret
es
int3
dec
sti
jns
ret
pop
movsb
cmpsb
orl
push
daa
mov
icebp
jp
cmp
outsb
cs
xchg
shll
mov
imul
rorb
adc
cmp
call
dec
out
push
in
push
jecxz
outsb
xchg
adc
sbb
out
in
loop
jo
repnz
pop
mov
pop
cld
inc
or
mov
xchg
sbb
jae
lods
inc
adc
sbb
les
les
sbb
shlb
sbb
pop
jae
in
jp
inc
sub
imul
les
in
lock
cs
js
xchg
add
je
sbb
add
popf
or
cmp
sub
mov
call
cmp
popl
or
pushf
stc
adc
mov
mov
repnz
inc
xlat
aas
pop
fsubs
cmp
xor
imull
dec
pop
xor
lret
ds
pop
shlb
or
mov
pushl
mov
mov
outsl
ljmp
nop
mov
sbb
pop
addr16
aas
repnz
sbb
adc
inc
ja
push
xor
or
jo
movsl
lret
pop
pop
js
adc
jg
sti
fcmovnbe
add
ss
or
xchg
push
jmp
sti
ss
inc
test
nop
not
mov
lods
xchg
nop
aam
push
arpl
cld
dec
and
push
mov
cs
sbbb
adc
mov
mov
cmp
dec
mov
lcall
lea
push
push
out
nop
adc
push
in
xor
shll
cmp
sbb
insb
scas
and
sbb
cmp
or
sbb
sub
pop
push
inc
jp
loopne
cmp
mov
mov
rorb
int3
mov
faddl
lret
andl
test
xchg
fs
icebp
push
rcrl
or
es
das
decb
sbb
pop
push
cs
pop
les
and
jmp
dec
push
in
dec
mov
out
lods
lods
std
fnstsw
test
ret
cmp
outsl
push
fistpll
cld
and
xor
stc
jbe
cltd
dec
mov
jo
mull
and
push
adc
xchg
ret
stos
test
sub
int
lock
mov
pop
or
add
push
push
mov
pop
fidivs
nop
jne
cmp
mov
push
fcomps
cmpsl
xchg
xchg
pop
mov
mov
in
mov
add
lods
xchg
test
xchg
in
or
mov
ss
cmc
std
cmp
or
inc
mov
pop
lea
mov
mov
call
sbb
imul
loopne
add
stc
sahf
cmpsb
mov
sti
xor
pushf
and
cli
aad
dec
mov
add
call
test
xchg
aad
lret
xor
mov
popf
mov
sbb
cmpl
subl
pop
xchg
dec
insb
loop
push
lcall
xorb
outsl
xchg
inc
add
aas
jl
in
push
xchg
pop
pop
icebp
mov
pop
add
sbb
mov
das
es
jp
out
les
xor
sub
adc
leave
aad
xchg
mov
shrl
gs
cmp
addb
sarl
ret
mov
iret
outsl
movsb
lock
mov
rcrl
iret
xor
insl
out
xchg
xchg
cltd
lret
mov
lock
es
out
popa
jmp
scas
mov
push
popl
in
andb
dec
add
mov
xchg
mov
mov
out
dec
out
pop
rcll
cwtl
outsl
xchg
adc
insl
das
dec
pusha
ljmp
insl
inc
sbb
inc
pop
inc
leave
fdiv
leave
or
clc
push
adc
pop
mov
pop
movsl
or
adc
jl
pop
adc
add
cmp
jle
movsb
sbb
sub
cmp
xor
add
out
sub
adc
vpunpckhwd
je
mov
fnstcw
repz
lea
cmp
inc
pop
and
loop
or
jp
orl
popf
pop
enter
cmp
push
xchg
sbb
push
sbb
popa
jnp
jge
add
pop
es
addr16
mov
scas
ljmp
daa
imul
xor
xchg
lahf
jmp
into
dec
fs
arpl
cli
xor
inc
enter
and
mov
mov
xchg
mov
std
mov
test
jo
and
push
testb
test
mov
mov
pop
push
mov
sub
adc
push
push
pop
push
sub
test
jle
hlt
ret
pop
mov
cmpsb
mov
and
jmp
mov
test
and
sarb
add
mov
in
popa
adc
xchg
iret
daa
jne
in
shl
xor
rorl
pop
aas
aaa
sbb
pop
and
mov
mov
cmc
fistpll
mov
pusha
push
stc
scas
and
jns
imul
jle
xchg
mov
mov
lock
aad
and
shrl
xchg
das
pop
push
dec
sub
lret
popf
lods
sbb
jmp
popf
pop
jbe
mov
cmpsl
aas
jbe
inc
jmp
xchg
in
or
int3
jmp
adc
xor
and
sub
sti
and
and
push
push
mov
jp
addr16
mov
sub
icebp
cld
pop
lahf
adc
sub
inc
int3
add
in
push
push
cltd
wbinvd
pop
cmp
in
pop
inc
repnz
out
lods
mov
hlt
mov
pop
jge
fwait
movsb
xchg
adc
mov
loopne
ret
insb
dec
lret
bound
outsb
in
ret
ja
mov
stos
int
imul
push
xor
or
in
test
or
test
pop
cld
or
jp
jge
addr16
fsubrs
pop
idiv
int
inc
popf
ja
cmp
cmp
xor
loop
inc
mov
adc
lods
cs
inc
pop
jg
inc
inc
enter
sbbb
stos
scas
insb
repnz
inc
push
jecxz
lahf
inc
and
mov
ficoml
add
add
xor
push
aad
xchg
mov
aad
push
pop
mov
push
dec
xchg
add
jmp
mov
test
cmp
sbb
icebp
shll
mov
fwait
test
pop
rol
pop
int3
mov
mov
in
pop
inc
or
sbb
xor
dec
mov
pusha
lcall
mov
and
enter
dec
sahf
cltd
ljmp
in
stc
insl
and
push
out
into
je
int3
pop
cmpsb
rorl
jp
int
xchg
add
aaa
loope
jno
cmp
dec
ror
inc
pop
nop
test
adc
inc
xchg
test
xor
cld
push
in
sbb
cmp
sub
sbb
jecxz
ljmp
enter
jne
cmp
daa
add
adc
mov
push
fwait
mov
in
ss
jmp
popf
dec
cltd
dec
lcall
inc
iret
repz
dec
push
add
mov
rol
iret
data16
pop
adc
sahf
jns
inc
hlt
xchg
and
jp
out
xchg
sahf
add
stc
pop
and
imul
mov
lcall
mov
cmp
sub
add
sub
leave
lock
das
fwait
pop
ss
xor
hlt
in
add
testl
incb
ljmp
or
popa
jnp
inc
inc
leave
ds
stos
cli
push
cmp
adc
sub
mov
push
dec
roll
xlat
stos
sub
push
adc
loope
xchg
dec
dec
cmp
fmuls
popf
data16
in
xchg
je
mov
mov
arpl
mov
out
test
aaa
cmp
enter
dec
jbe
or
out
adc
test
jg
mov
aad
adc
loop
xchg
mov
hlt
inc
push
and
adc
call
fidivs
push
push
xor
cmp
xchg
pop
sahf
xor
js
add
xor
lock
andl
push
fidivrs
outsl
xchg
mov
pop
mov
fwait
sbb
xor
orl
aam
ja
movsl
js
jne
call
lods
mov
repz
adc
mov
jmp
pop
in
sub
and
fidivrs
inc
mov
fwait
cmp
test
pop
fiaddl
pop
cmpsb
ret
ja
inc
cwtl
fs
adc
add
pop
dec
inc
mov
pop
xor
add
mov
sub
ret
cmp
insl
jp
cli
stc
mov
jbe
nop
pop
push
stos
cld
arpl
add
mov
ja
add
notb
push
test
jmp
out
jmp
dec
std
and
fcomip
push
imul
lahf
lahf
mov
or
pop
jecxz
pop
pop
loop
adc
mov
sub
jno
push
push
jns
inc
lods
ja
imul
test
popa
subl
xor
outsl
adc
jmp
lret
out
enter
hlt
out
jge
jmp
jp
dec
jle
lea
es
mov
stc
jno
test
mov
jle
imul
mov
sub
cli
push
cmpsb
mov
shlb
mov
adc
add
mov
mov
rcrl
mov
je
xlat
lret
adc
fdivrl
push
pop
adc
dec
xor
es
ret
shl
rcrb
lret
loope
lods
push
pop
insl
loopne
test
and
jae
iret
pop
jecxz
mov
push
subb
ljmp
loopne
mov
inc
out
aad
or
fsubs
sub
decb
popa
lock
sahf
sarl
rcll
xchg
cwtl
andb
out
je
mov
add
out
ret
dec
jnp
ror
or
mov
enter
cmp
add
gs
out
jns
mov
test
lret
arpl
lods
sub
and
je
int
xor
pusha
adc
sub
sti
movaps
loope
cmp
icebp
stos
cmp
into
and
aam
mov
sarb
sbb
add
pop
scas
mov
shrl
ja
adc
mov
cmc
les
pop
mov
fisttps
out
jecxz
je
aas
cmp
add
fadd
cmc
add
in
adc
lret
imul
fs
jp
mov
xor
cmp
xor
shlb
out
sbb
sub
add
fisttpl
movsl
push
jp
xorb
sbb
iret
inc
lds
jns
sub
jb
test
pop
enter
jp
repz
mov
pop
mull
lea
push
mov
movsb
insb
push
dec
push
cs
jns
and
mov
mov
fdivrl
lods
pop
mov
fs
fcomp
das
jbe
dec
mov
cmp
in
dec
subl
std
xlat
pop
fidivl
int3
jmp
test
fldl
push
cmp
stos
cmp
inc
jb
jbe
mov
xchg
pop
add
jne
adc
cmp
mov
dec
or
and
or
cmpsb
ljmp
mov
push
clc
xchg
dec
jle
jg
xchg
nop
mov
cmpsl
out
adc
stos
hlt
stos
jl
xchg
cwtl
loop
loop
push
push
cwtl
pop
inc
out
mov
testl
lds
mov
movl
push
mov
jae
std
lret
mov
mov
mov
cmpl
sti
mov
repnz
dec
xor
add
jne
sbb
xchg
or
mov
xlat
lahf
scas
inc
rclb
insl
dec
xor
xlat
xchg
in
cmpsb
in
mov
jl
xlat
and
add
int
push
lods
imul
xchg
mov
sub
imul
jp
pop
xchg
shrb
jnp
ds
mov
popf
shrl
scas
je
movsl
jge
cwtl
add
pop
sub
and
addr16
aad
ja
loopne
and
mov
mov
sub
es
xchg
add
push
sti
cmc
lret
js
sbb
xchg
movsb
cmc
push
xor
ja
mov
call
imul
divb
mov
lcall
jne
cmp
pop
cmp
jbe
fimull
scas
or
rclb
or
lcall
idiv
dec
ret
push
dec
aas
pusha
sbb
lret
inc
dec
lcall
mov
sub
mov
loopne
push
mov
mov
xor
jl
shrl
fs
popa
mov
sbb
jns
sbbb
adc
sbb
repnz
adc
sub
push
push
jp
mov
or
mov
adc
push
push
shll
pop
fwait
mov
stc
sbb
lods
xchg
pop
xor
scas
lds
push
fcomps
xchg
clc
push
push
mov
dec
xlat
mov
adc
mov
dec
mov
icebp
jp
xor
clc
je
cld
ret
cmp
jae
pop
push
jmp
iret
mov
fstps
sbb
xor
lcall
ljmp
add
pop
mov
add
stos
jge
lret
leave
lcall
shlb
lock
mov
mov
sub
sbb
stc
aam
movsb
shrl
jne
hlt
daa
inc
arpl
dec
inc
lds
fstpt
leave
or
aad
mov
ljmp
loope
sub
pop
in
sub
jge
xchg
jb
or
pop
movsb
push
lea
cmc
in
loope
push
add
adc
jo
or
fsubrs
les
movsb
cmp
mov
adcb
shrb
dec
cmpb
out
lahf
pop
daa
cmp
push
xor
sbb
out
push
stos
mov
negl
loop
mov
xchg
push
sti
xchg
js
ret
in
pop
cmpsl
ficomps
mov
stc
iret
repnz
push
cmp
jo
inc
inc
fistpll
lret
stos
int3
aaa
out
cmp
lods
inc
sbb
fwait
or
frstor
and
jb
xchg
pop
or
push
sub
mulb
test
fidivs
fisubl
adc
dec
push
test
cs
mov
adcb
lock
xchg
pop
jno
pop
subl
scas
into
jne
mov
xor
clc
xchg
mov
add
jmp
push
xchg
jno
push
sarl
cmpsl
inc
cmp
jnp
add
fs
or
pop
push
wbinvd
mov
ss
inc
jg
cld
cs
das
dec
pop
sub
ret
lods
sub
cmp
mov
jmp
sbb
inc
or
fcoms
pop
jne
inc
sub
push
pop
mov
cmpsb
push
inc
mov
xchg
loopne
sbb
lods
push
fidivrl
fcomip
lret
inc
cld
cmpsl
pop
enter
jnp
ret
je
push
mov
aaa
mov
xchg
popl
ss
push
sbb
jns
jno
iret
jns
pop
divb
xchg
pop
fs
fnstcw
andl
sahf
popa
cmp
stc
stos
adc
movsl
mov
int
xlat
dec
inc
insl
mov
inc
pushf
fs
push
add
jo
inc
mull
jb
sbb
pop
mov
xchg
out
test
movsl
jnp
pushf
cmp
scas
and
jo
adc
test
lock
sarb
outsb
lods
popf
mov
insb
fs
in
cmp
push
adc
inc
pop
cld
fldt
dec
xchg
in
pop
and
ljmp
mov
movsl
fwait
mov
jne
out
cmp
push
cmp
into
xor
test
cmp
imul
setg
outsb
sub
pop
push
sti
sbb
and
arpl
xor
xlat
jb
popa
and
js
addr16
jbe
jp
xchg
cmpsl
into
ljmp
pop
mov
mov
xchg
cmp
cmpl
xor
out
push
movsl
loopne
jmp
shrl
adc
stc
dec
ss
es
inc
into
icebp
push
add
and
ss
pop
mov
pop
mov
or
cwtl
test
fimuls
loopne
decl
nop
ret
jge
add
lahf
pop
iret
sbb
popf
jns
pop
inc
scas
int
mov
xlat
mov
icebp
and
pusha
jl
mov
into
rorl
mov
sub
mov
xor
out
push
cmp
ret
outsb
insl
mov
mov
or
popf
in
sbb
ss
pop
inc
adc
add
ret
out
out
push
pop
cmp
mov
dec
mov
arpl
xchg
cmp
inc
cltd
xchg
mov
aad
fwait
sbb
ret
push
aad
mov
test
dec
cmp
in
decl
ret
push
subb
push
mov
jmp
and
mov
mov
dec
sub
jmp
imul
mov
jae
dec
xor
sbb
adc
add
jbe
dec
mov
adc
cmpsb
scas
sbb
cmpsb
outsb
nop
adc
pushw
clc
idiv
loopne
leave
outsl
xchg
xor
dec
int3
jae
in
rol
aad
lods
jo
mov
or
push
push
movsl
inc
jae
scas
frstor
rcrb
inc
es
sub
nop
cmpsb
out
and
stc
in
cmpb
xor
mov
int3
repz
xchg
or
cmp
aad
push
xchg
ss
xor
sub
daa
jns
out
mov
xor
lods
jle
lods
cmp
scas
int
js
xorl
in
adc
cmp
mov
mov
mov
stos
es
jno
sti
push
or
ret
jns
add
data16
pop
mov
sbb
push
mov
pop
filds
cmc
sub
and
or
pop
push
jg
sbb
or
sti
and
xor
mov
stos
fs
push
lods
aam
push
scas
push
leave
mov
jl
mov
jle
mov
pusha
pop
in
jns
or
add
shrb
pop
fldenv
pop
jno
jno
push
fsubr
mov
out
dec
iret
jecxz
mov
xor
inc
mov
aad
mov
add
pop
mov
nop
dec
and
sub
inc
ja
into
insb
andl
push
iret
pop
mov
mov
pop
loop
lret
and
jno
push
cs
jp
int
sub
aas
xchg
jb
popf
jns
into
xchg
int
adc
ja
in
mov
adc
jl
xor
stc
sub
or
adc
xchg
adc
cmp
stc
and
ret
adc
sub
pop
xor
sub
pop
ds
dec
mov
jbe
xor
test
add
dec
pop
stc
cmpsb
test
outsb
dec
cwtl
mov
pop
js
xchg
hlt
insb
stos
and
ret
mov
adc
mul
dec
rcrl
or
adc
pop
lock
push
push
lds
lahf
and
clc
cmp
push
sbb
aaa
sti
adc
std
sub
xor
jo
int
mov
cli
inc
adc
std
xchg
mov
fnsave
cmpsl
imul
mov
xchg
cmpsl
mov
add
loope
lahf
xor
outsl
sub
outsl
or
mov
mov
mov
lea
adc
xor
jae
xor
dec
test
or
sub
add
out
sbb
aas
push
sbbb
sti
pop
loopne
xchg
shlb
sub
and
sub
lods
fs
add
xchg
leave
and
adc
push
adc
shr
roll
add
lods
int
mov
stos
xchg
incb
sti
bound
jo
push
nop
sbb
js
jle
lods
insl
in
sti
test
imul
scas
and
push
pusha
pop
add
or
sbb
dec
fistpll
icebp
inc
sbb
lea
ds
lret
jle
or
fsubl
xor
into
cmp
movsb
cmp
fs
dec
sahf
repnz
mov
push
jp
insl
xchg
cs
js
xchg
xchg
sbb
mov
sbb
jp
adc
mov
xor
dec
push
push
out
fucomip
sbb
aam
jge
push
and
push
mov
push
out
push
std
bound
lods
aaa
mov
aam
ffree
lcall
dec
mov
out
mov
add
test
xchg
jbe
adc
sahf
dec
mov
iret
sbb
repnz
pop
push
xor
mov
mov
fadds
les
scas
arpl
shll
lods
into
sub
push
jg
fsubs
jnp
inc
call
pop
sbb
fdivr
dec
mov
add
pop
cmpb
mov
pop
jecxz
fisttpll
push
mov
or
cmp
adc
sbb
cmp
xlat
xor
jecxz
in
loop
add
mov
xor
lcall
outsl
xlat
lock
xchg
negl
push
fcmovbe
mov
xchg
pushf
mov
ds
jl
or
xor
mov
pop
popa
mull
jnp
rcrb
sahf
push
subb
or
test
and
adc
std
cs
addb
mov
jnp
in
inc
xlat
cmp
dec
add
and
cmp
pusha
xchg
jmp
scas
aam
cmc
scas
inc
rol
xor
lret
xchg
jae
call
push
cli
mov
adc
movb
mov
push
mov
movb
movsb
testl
sbb
dec
xchg
mov
es
repz
dec
pop
aaa
and
lret
adc
aaa
fwait
pushf
cmpb
mov
jbe
inc
push
jbe
popa
and
out
xchg
aas
fwait
into
pop
adc
test
sahf
out
cmpsl
or
and
sahf
jecxz
pushl
sbb
pop
pushf
and
stos
or
mov
jmp
and
xchg
es
or
shr
pop
xor
push
aas
ss
mov
or
push
insb
iret
insl
js
mov
clc
push
test
clc
xor
inc
add
jns
loopne
xor
andl
lea
stc
aam
jo
cwtl
cmp
add
and
rorl
pand
sub
sub
loop
and
push
sbb
mov
xor
or
jg
fidivl
adc
pop
cmpsb
cmp
rclb
inc
jne
jnp
andl
roll
add
lret
in
jge
dec
ret
add
clc
xchg
imul
add
nop
sbb
pop
or
jo
cmp
push
in
lea
jbe
ret
dec
mov
daa
arpl
test
add
xor
das
xor
pop
inc
lods
xor
jnp
mov
xchg
mov
mov
dec
mov
movsl
push
push
mov
or
clc
mov
lods
sbb
pop
mov
dec
imulb
jbe
inc
jge
inc
lret
lds
lret
push
notl
xchg
add
or
cmpsl
insl
sub
push
test
push
dec
mov
test
adc
movsl
mov
sub
cwtl
xor
xchg
xor
aas
int3
jg
jg
iret
sbb
xlat
mov
mov
int
dec
stos
clc
inc
push
sbb
scas
xor
aas
or
jg
sbb
pop
cmp
iret
xor
testl
and
arpl
cli
cwtl
jb
ljmp
xor
dec
mov
or
mov
mov
cmp
in
imul
in
sub
rcl
iret
arpl
lahf
imul
inc
xchg
dec
hlt
cld
dec
test
aam
pop
cs
jae
mov
xlat
sbb
mov
out
and
test
call
mov
nop
or
mov
mov
outsl
mov
xchg
push
sub
rcrb
je
test
mov
xchg
xor
out
mov
scas
lods
cmpsb
imul
mov
xor
dec
popa
mov
jbe
mov
push
mov
fldt
mov
popa
orb
adcl
adc
lods
mov
xchg
outsl
pushf
fidivrl
push
sub
mov
jmp
or
sarl
adc
or
mov
sub
pop
sti
mov
pop
out
aaa
stc
push
pop
sahf
xchg
cld
in
push
pop
inc
mov
adc
int
les
mov
fdivrs
xor
in
cmp
sbb
cld
test
xchg
cld
xchg
sbb
add
clc
cmpsb
lods
sbb
ret
xor
cli
std
add
fisttpl
pushf
xchg
cmpsb
mov
stos
fldcw
mov
xor
xlat
repnz
sub
nop
out
dec
add
sub
and
lahf
cmp
je
mov
jbe
and
xchg
or
adc
es
pushf
lret
into
cmp
loopne
roll
pop
in
and
js
adc
sti
roll
decb
enter
pushf
inc
mov
test
sbb
andb
int
test
aas
in
ss
addr16
stos
jb
sub
ret
aaa
and
testl
and
arpl
fiadds
mov
movsl
or
cmp
adc
jl
push
lret
pop
ljmp
repnz
scas
bound
stos
push
push
iret
xchg
cld
gs
add
fimull
cwtl
xchg
nop
xchg
mov
inc
sbb
lret
mov
inc
nop
pop
stos
fidivrs
out
xor
push
int
lcall
cwtl
push
test
repnz
ljmp
das
dec
call
pop
decb
fisubs
ss
jae
jl
subb
jle
shr
and
pushf
leave
push
or
fwait
push
stc
int
xchg
arpl
ret
imul
jae
xor
bnd
mov
sbb
mov
test
sub
nop
dec
and
loope
popa
mov
mov
in
lods
xchg
or
dec
xor
mov
mov
or
pushf
mov
ficoms
pop
ds
pop
in
jmp
pusha
mov
jns
popf
mov
fmull
mov
pop
loop
xchg
pop
or
fwait
mov
mov
sub
jae
out
pop
pushf
lcall
xor
test
or
xor
xlat
repz
js
jae
and
or
movsb
push
cmp
je
jnp
push
xchg
push
scas
lea
movsb
push
push
mov
cmp
je
or
mov
cmp
lahf
enter
cmp
mov
out
and
mov
xchg
leave
adc
jae
adc
sbb
out
mov
add
fbstp
sahf
ja
xchg
mov
inc
sbb
adc
inc
lret
sub
cmp
mov
mov
mov
or
cmc
in
mov
pop
scas
repnz
scas
outsl
std
std
add
or
mov
arpl
lods
call
xchg
jmp
in
xchg
mov
add
push
sbb
in
in
popa
mov
into
mov
jecxz
mov
sub
repz
js
lret
adc
outsb
dec
mov
test
or
push
xor
arpl
lahf
add
adc
scas
jg
rcll
in
fmull
mov
mov
inc
hlt
jle
dec
sbbb
push
popf
or
stc
mov
push
scas
and
jnp
pop
mov
test
fstl
jg
pop
in
dec
sub
jle
sahf
rorl
imul
mov
mov
or
std
outsl
insb
inc
test
test
add
cmp
notl
and
test
imul
mov
push
inc
dec
lcall
xor
or
pop
push
jb
ss
xchg
jbe
xor
sub
arpl
xor
xchg
or
repnz
pushf
les
filds
int3
cli
mov
std
rcrl
xor
xchg
mov
adc
loope
xor
cmp
sarb
mull
int
daa
js
xchg
ror
fldz
dec
cld
push
xorb
xchg
xchg
fisubrl
enter
cmp
sti
mov
sarb
lods
and
clc
push
mov
pop
cmp
ret
pushf
test
inc
call
shlb
cmp
pushl
aas
inc
addr16
std
aam
push
xchg
testl
imul
sarl
das
dec
inc
or
pushf
test
pop
in
popf
add
add
cwtl
jecxz
fcoms
shl
cli
cmp
mov
add
dec
sbb
out
mov
ror
push
sbb
mov
push
lock
test
xchg
test
in
push
push
add
cwtl
inc
dec
gs
jbe
or
mov
outsl
sbb
nop
iret
pop
or
xor
jge
mov
mov
push
inc
push
int3
xchg
jnp
rcrl
das
add
mov
push
add
loop
das
pop
xor
shll
cs
cwtl
stos
mov
inc
cmp
push
rol
cmpsb
add
fs
ja
pop
arpl
jo
dec
stc
inc
inc
jae
jge
lret
orb
adc
dec
mov
cltd
les
mov
popa
cmp
aas
nop
xor
push
out
jg
and
xchg
scas
cmp
mov
fnstenv
lods
call
nop
cmp
ss
lret
jno
pop
movl
mov
dec
push
movsb
mov
and
mov
jge
xchg
push
stc
stos
mov
pushf
fildl
cltd
sti
xlat
gs
lahf
ljmp
call
push
shrb
pop
adc
sub
in
orl
scas
sti
sub
imul
or
xor
pop
mov
fadd
sbb
sti
ljmp
leave
adc
pop
fs
stc
ffree
rorb
outsl
xlat
je
pusha
ljmp
pop
in
xchg
fisttpll
push
roll
fabs
ret
add
mov
xor
jge
push
mov
cmpsb
or
and
mov
adc
jae
icebp
cmp
int3
fmuls
dec
das
orb
std
mov
sub
mov
sub
test
sarb
mov
sbb
addr16
push
imul
sub
aas
pop
pop
xchg
or
cmp
outsb
stc
aad
andb
in
cmc
push
aaa
cmp
mov
lds
fcomip
pop
push
pop
mov
test
jbe
xor
or
cmp
movsl
and
loopne
setbe
adc
hlt
and
or
movsl
mov
push
lods
out
test
sbb
sbb
fistpll
sub
stos
iret
xor
mov
jge
dec
inc
xor
stos
mov
cmp
iret
mov
in
mov
lds
decb
pop
sbb
aam
inc
iret
xor
sub
rcll
addr16
int
push
ret
divb
loope
cmp
lods
jge
in
add
mov
add
inc
or
test
xlat
sti
add
mov
mov
xchg
mov
scas
push
int3
pop
mov
outsl
sub
das
sbb
bnd
push
jns
std
mov
cmp
xor
add
xchg
mov
aam
div
sub
add
ljmp
jo
mov
inc
ja
mov
mov
or
add
mov
jbe
push
adc
pop
repz
js
cmpsl
inc
movsb
lret
scas
mov
sub
ret
push
call
sub
pop
inc
mov
das
test
pop
out
test
inc
mov
shll
fcomps
inc
out
mov
add
cmp
lcall
stc
add
pushf
mov
and
jmp
outsb
ljmp
les
test
dec
insb
jg
mov
and
sub
jg
or
mov
sub
loope
dec
lods
mov
out
fnstcw
loopne
fisubl
test
mov
fdivrl
popf
mov
out
mov
scas
mov
cmp
repz
push
inc
fcmovu
and
or
mov
daa
push
xchg
mov
xor
jecxz
out
cmp
imul
imul
mov
or
icebp
int
pop
pushf
pop
andb
sti
xor
mov
push
mov
sti
adc
stos
jmp
dec
sub
aaa
repnz
inc
or
dec
sbb
xchg
addr16
call
insl
mov
shrb
fsubrs
js
mov
xor
push
adc
cwtl
aaa
ds
adc
movsb
rcl
push
dec
rolb
push
int
xorl
pushf
xchg
jmp
insl
push
fistl
push
sbb
shlb
cmpsl
gs
icebp
mov
mov
ljmp
ret
movsl
stos
divb
xlat
fmulp
sti
sub
or
push
daa
push
mov
mov
movsl
scas
f2xm1
out
jle
add
andl
inc
inc
mov
and
scas
in
mov
fcomip
pop
in
push
fisubrs
mov
add
sub
in
sarb
jmp
scas
or
or
xor
cwtl
mov
dec
push
xchg
mov
jp
sbb
mov
in
xor
inc
in
lods
push
aad
cmp
fistpl
ret
fldcw
sub
bsr
jge
dec
jp
outsb
jno
clc
inc
push
push
mov
fistpl
in
loop
and
popa
adc
imul
inc
push
loope
add
cmpsb
cltd
push
and
inc
inc
out
add
repnz
jnp
and
inc
out
imul
sti
push
scas
stos
xchg
pop
repz
mov
leave
gs
mov
pop
mov
sub
push
inc
mov
inc
xor
xchg
rorl
or
insb
popf
and
test
subb
andl
mov
jb
xor
inc
loope
ds
push
inc
jecxz
xor
in
xor
adc
aaa
loop
iret
outsl
divl
mov
pop
and
aas
bound
mov
inc
push
ret
mov
gs
call
int
or
call
add
cmp
daa
pop
call
mov
adc
inc
leave
aam
cmp
lods
imul
pop
imull
leave
mov
xlat
ret
imul
sub
push
fdivl
movsl
gs
popl
scas
xchg
insl
repz
cwtl
pop
fcomip
int
stos
shlb
test
mov
cli
jge
jmp
sbb
lret
add
cld
sub
add
ror
das
cwtl
js
imul
stc
shll
mov
push
lea
fisubs
je
lods
mov
xor
repnz
and
in
dec
scas
int3
repz
add
stos
xchg
mov
in
push
out
pop
pop
fldl
enter
xor
in
mov
adc
das
and
mov
adc
jo
mov
rorb
jecxz
sti
icebp
mov
lea
cld
cmp
xchg
sbbl
mov
add
in
xchg
iret
mov
and
ja
lea
inc
dec
les
cltd
xor
or
cmpsl
jne
into
stos
xor
addb
ret
inc
xchg
pop
bound
and
or
repz
push
inc
jecxz
dec
sub
rorl
sahf
xchg
and
push
sbb
lods
call
loope
cmpsb
aad
add
mov
ljmp
mov
ret
mov
daa
ljmp
sbb
mov
outsb
test
pop
adc
sahf
aaa
stos
pop
aas
stos
and
jp
mov
outsl
out
fdivrs
pop
pop
add
clc
sub
jns
inc
cmp
roll
pop
decb
pusha
mov
loope
test
sbb
data16
addr16
sbb
mov
inc
mov
dec
loop
inc
cmp
sub
rolb
mov
adcb
push
pop
pop
pop
jb
dec
loope
test
mov
loop
push
repnz
and
adc
xor
add
sbb
es
notl
sbb
call
mov
jo
mov
xor
mov
je
test
add
test
mov
adc
cmp
cmpsl
xlat
lock
mov
dec
sbb
mov
lea
mov
xor
cwtl
stos
cmp
mov
cmpsb
mov
mov
and
std
sbb
stc
jo
sarb
jle
sub
cli
movsb
xor
sub
inc
sub
jge
or
jo
loopne
and
andb
sub
xchg
add
and
or
std
lahf
inc
in
loope
inc
stos
cvtps2pd
nop
in
inc
ds
outsb
mov
mov
mov
test
shll
in
or
cmp
popf
sub
std
or
rcll
mov
push
dec
or
push
xchg
data16
inc
push
insb
hlt
aam
mov
jle
xlat
shll
xor
js
mov
inc
jnp
addr16
pushf
loopne
fildl
scas
xlat
dec
cld
and
icebp
jb
pop
mov
mov
inc
xchg
pop
and
jnp
sahf
cmpsl
sub
mov
jge
dec
ret
inc
pop
mov
mov
dec
adc
sub
sub
and
mov
xchg
movsl
dec
outsl
scas
sub
lods
sbb
and
mov
sti
xlat
arpl
mov
bound
mov
add
icebp
mov
mov
and
jb
mov
outsb
repz
lcall
sbb
push
xor
aaa
xor
leave
or
loopne
pop
je
push
pop
pop
inc
add
dec
out
cmp
jns
mov
lods
dec
fs
add
mov
cli
jnp
jle
test
scas
notl
adc
cli
and
es
inc
repnz
out
push
scas
xor
lcall
mov
mov
push
push
mov
repnz
inc
jg
nop
stos
add
in
jo
sub
pushf
push
adc
pop
and
inc
or
fcmovnbe
dec
dec
fsub
push
lret
iret
mov
mov
subl
scas
jnp
fidivs
js
neg
std
xor
push
mov
jge
push
rol
pop
sub
mov
xchg
aam
imul
sub
insb
es
xchg
test
lahf
and
mov
sbb
mov
movsl
imul
jno
es
jo,pn
and
push
scas
stc
jb
subl
sub
mov
add
imul
lret
dec
mov
aam
jmp
xchg
fidivs
cmp
xchg
daa
test
add
adc
stos
inc
movb
sti
fsts
adc
lcall
dec
cmp
lds
sbb
push
jp
or
xor
push
xchg
or
mov
inc
jb
iret
sti
pusha
cltd
repz
xor
push
subl
pop
aam
mov
sub
out
xchg
stos
cli
cwtl
xchg
pop
aam
ror
imul
popf
jbe
insl
lea
cmc
loopne
inc
subb
cli
cmpsl
mov
mov
rorl
xchg
loope
test
addr16
out
in
pop
inc
ja
call
jge
mov
or
mov
adc
jns
and
inc
push
mov
mov
cmp
mov
pop
cmp
cwtl
pop
icebp
xchg
push
imul
pop
es
addr16
lret
add
mov
lods
lcall
mov
cmp
movsl
test
jns
leave
pushf
and
ret
int
out
jns
subb
or
insl
push
shll
aam
adc
adc
popf
xor
int3
xor
insl
jl
mov
mov
mov
lret
jo
in
xchg
arpl
aad
int
cmp
pop
or
xchg
mov
sub
add
mov
jecxz
add
lea
jns
push
andb
dec
dec
inc
fsubs
cmp
cmpsl
sbb
jae
shrb
js
rorl
mov
jecxz
mov
pop
in
dec
pop
sbb
jns
daa
test
mov
lods
leave
jo
jbe
inc
js
mov
cmpl
stos
mov
enter
inc
cli
or
cmpsl
sbb
arpl
push
push
test
adc
xchg
inc
ret
pop
jle
inc
mov
jmp
int
jecxz
rorl
test
fwait
sbb
mov
stc
gs
lret
insl
mov
jle
inc
jne
add
bound
arpl
add
fists
xlat
add
lods
push
push
mov
ficompl
cs
stc
xchg
daa
sbb
mov
fwait
aas
inc
inc
test
fld1
andl
cwtl
mov
cwtl
sbb
cmpsb
aaa
imul
lret
jns
push
ds
xchg
and
dec
insl
jmp
gs
aaa
dec
aaa
mov
fcmovu
popa
push
or
hlt
dec
clc
mov
mov
stos
pop
mov
jl
mov
xor
rcll
push
adc
xor
add
dec
icebp
pop
rcll
inc
adc
mov
outsb
iret
ja
mov
add
mov
ja
jl
outsl
sbb
daa
shlb
addr16
adcl
insb
stos
mov
sbb
and
mov
paddw
sti
dec
in
add
jno
int
mov
test
das
ss
add
inc
test
add
jbe
out
add
cmp
push
call
mov
xor
outsb
push
sub
inc
ja
push
mov
sbb
movsl
push
cmp
fs
rorl
adc
rcll
jle
in
cmp
shll
adc
iret
loope
or
add
orb
divl
jo
out
shlb
pop
mov
add
push
pusha
mov
or
out
adc
xchg
repnz
mov
stc
imul
mov
imul
fstl
push
jg
jg
aaa
lods
jle
jp
lret
push
add
push
out
xchg
sub
fbld
sub
cli
fwait
cli
and
jp
inc
repz
push
pop
inc
xchg
inc
daa
adc
fadd
dec
and
mov
pop
cmpl
lea
ret
jle
add
arpl
out
sub
push
mov
je
sbb
mov
or
shlb
jo
pop
pop
lret
popf
je
mov
insb
mov
add
cli
sub
adc
addr16
leave
fldcw
pop
push
cmc
movsl
xchg
push
and
add
cltd
jmp
add
decl
sub
inc
mov
pop
xchg
fstpt
mov
push
cld
adc
inc
cmc
jecxz
pusha
mov
push
push
jb
out
mov
in
lret
mov
lds
adc
add
daa
notb
aas
fistpll
jge
xlat
cmpsl
cltd
mov
cmp
lcall
mov
dec
xor
stc
pop
hlt
loop
cmc
mov
inc
rcrl
adc
cmp
cs
add
bswap
cmpsb
cmp
ss
jl
mov
push
push
adc
inc
or
add
xor
jbe
jno
in
jp
jae
ds
addps
jmp
adc
or
scas
xor
icebp
cli
popa
pusha
movsb
outsb
loop
jge
popa
imul
mov
xchg
push
test
xor
fmulp
mov
inc
imul
pop
mov
sub
call
int3
test
adc
cmp
xchg
lods
lahf
dec
pop
call
movsb
pop
jle
xor
pusha
lock
cmpsl
lahf
xchg
in
shlb
and
in
xchg
add
xchg
adc
int
movsl
and
repz
push
setb
push
sbb
mov
lds
cmp
mov
lds
out
cmp
cmp
insl
arpl
shll
gs
jne
ret
je
sbb
sbb
leave
sbb
and
div
nop
rolb
inc
fnstcw
fwait
pushf
push
in
lea
scas
lcall
cmp
cld
push
mov
dec
faddl
std
shr
mov
cwtl
dec
cmc
cli
cmp
jmp
das
dec
pushf
sbb
mov
sub
out
cmp
popf
inc
ret
mov
mov
icebp
jge
ficoms
jo
scas
lock
loop
or
rorw
mov
loope
lds
daa
les
inc
stos
push
and
sbb
out
stos
aaa
mov
loop
and
jl
insl
sub
dec
sbbb
repnz
dec
pop
out
xchg
or
pop
xlat
shrl
in
mov
mov
jno
mov
pop
ljmp
mov
mov
push
xchg
ljmp
lods
icebp
jg
add
fcomip
mov
dec
adc
add
cmp
sbb
mov
mov
sub
js
lret
insl
inc
jmp
mov
sub
dec
scas
pop
inc
add
int
in
loopne
ja
ljmp
xor
orl
mov
jl
inc
jmp
fmuls
scas
insb
inc
adc
fidivl
adc
rol
jns
inc
insb
ret
fs
out
call
mov
jno
xchg
push
icebp
mov
test
sbb
cltd
mov
sbb
or
cmp
fdivl
out
xchg
pop
pop
cmp
cmp
adc
andb
in
lods
mov
addr16
scas
pop
pop
stc
lods
clc
aaa
mov
xchg
mov
scas
into
shll
mov
adc
loop
mov
ljmp
leave
push
movsl
lea
jne
mov
sub
test
cmc
pop
lods
dec
cmpsb
in
xchg
mov
push
jns
xchg
ret
test
lock
mov
jno
sbbl
xlat
orl
fsub
bound
mov
sbb
fdivrs
jmp
lea
jnp
jo
xor
mov
jg
cmp
mov
mov
iret
push
dec
bound
mov
and
adc
shlb
mov
ror
out
std
clc
pop
xor
jmp
push
fidivl
test
jl
mov
pop
lods
pop
lahf
movsb
bound
push
mov
clc
outsl
data16
fisubl
mov
pop
hlt
pop
jl
mov
cmc
sbb
stc
jo
sbb
faddl
adc
inc
clc
inc
sub
mov
mov
cmp
lods
jl
mov
xor
sti
daa
mulb
inc
xchg
lcall
xchg
cs
mov
pop
cmp
jecxz
ja
adc
push
mov
cmc
pop
fdivl
in
iret
pop
xchg
jb
xchg
and
outsl
iret
inc
sar
jecxz
mov
div
stos
or
sbb
add
mov
in
lods
and
jle
mov
js
xor
push
mov
and
fcomps
sbb
cmpsl
lods
or
enter
bts
add
dec
lret
cli
dec
jnp
mov
mov
mov
push
jno
out
mov
call
clc
aas
and
dec
lcall
insb
jg
enter
fwait
idivb
movb
sbb
xchg
dec
jmp
outsl
mov
int
dec
cmp
pop
push
mov
and
add
outsl
mov
dec
stos
xchg
bound
ljmp
sbb
xor
jne
pop
arpl
cwtl
test
xchg
jbe
xor
aas
xor
pop
mov
int
push
add
xorb
loop
loop
jp
ds
lock
flds
jbe
push
dec
ret
int3
jo
pop
test
jnp
mov
mov
adc
xor
test
cmp
jmp
inc
cld
mov
ljmp
pusha
ret
sahf
jecxz
push
push
ds
mov
lret
inc
push
push
mov
movsb
pop
out
mov
jge
aaa
ret
sar
decb
fisubrl
jne
loope
icebp
xor
sahf
push
mulb
mov
add
les
pop
push
mov
jb
aas
mov
ss
fsubp
pop
std
pop
push
imul
xchg
fdivl
add
xchg
out
scas
mov
rcrl
stos
cmp
and
repnz
enter
rcrb
sbb
scas
inc
mov
mov
cmp
out
nop
stos
sub
outsb
and
test
add
inc
or
sahf
adc
insl
ja
dec
call
xlat
pop
or
fmul
iret
push
pop
addr16
mov
jbe
vmread
or
mov
push
sub
call
call
xor
or
xchg
js
jle
clc
imul
jnp
push
push
adc
xor
or
decb
mov
xor
sub
js
xchg
and
addps
mov
popa
scas
mov
lds
scas
and
pop
ret
inc
jle
xchg
push
lahf
inc
repz
into
fnstcw
cmp
insl
data16
scas
cli
xchg
rorl
push
mov
push
icebp
xchg
xor
xchg
insb
mov
cmp
das
fwait
ss
adc
jbe
mov
enter
rolb
lea
mov
int
dec
cli
add
add
xchg
jo
test
xchg
aad
lds
rcrb
cwtl
movsl
sahf
ret
cmp
or
lods
sbb
and
mov
insl
and
stc
or
push
add
cmpsb
jmp
daa
jb
dec
xor
sbb
outsb
imul
adc
sarl
cmp
lcall
mov
test
push
in
nop
xlat
fwait
add
sbb
loope
pusha
pop
or
rcl
sahf
xchg
pushf
lret
dec
mov
repnz
inc
lcall
cli
push
push
loopne
xchg
lea
jl
sub
test
jmp
cmp
pop
jmp
bound
fsub
push
mov
xchg
pop
push
je
or
mov
push
inc
xor
rcl
cmp
incb
adc
mov
pusha
sub
jns
in
inc
test
dec
push
aam
pop
lcall
jae
outsl
dec
or
fucomi
and
xchg
mov
cmp
sub
pop
lret
call
cmc
xchg
cmc
aad
popf
xchg
xor
sbb
pop
cs
mov
sub
enter
fwait
mov
and
cmc
in
clc
addr16
xor
jo
mov
lret
pusha
mov
mov
mov
inc
dec
xor
enter
cltd
jp
cltd
pop
mov
stc
aad
cmp
push
sbb
mov
push
push
insl
popf
adcb
sbb
fcompl
mov
dec
mov
rcl
bound
test
cmp
ret
jno
lods
int3
daa
ret
or
adcb
xchg
mov
cmp
jo
mov
pop
cmp
test
ret
push
push
aad
sbb
rolb
shlb
push
cmp
addl
dec
divl
push
dec
adc
pop
cmpsl
aaa
push
mov
jb
in
pop
ss
cmp
and
imul
or
push
loop
push
mov
mov
outsl
sbb
lods
mov
inc
rcrb
push
divl
inc
sarl
adc
cli
push
xchg
sbb
pushf
push
shrl
mov
mov
clc
inc
mov
mov
iret
mov
or
inc
xchg
enter
test
jmp
cmp
xor
push
dec
add
inc
and
lahf
push
popf
push
push
mov
jecxz
inc
sti
jg
dec
enter
mov
mov
insb
sub
decl
loop
or
xchg
stos
mov
and
mov
mov
mov
fiadds
jge
adcl
dec
inc
pop
push
je
sub
idiv
call
jbe
dec
jp
stos
lods
or
cmc
dec
lea
pop
testl
testl
lock
fistpll
or
ret
mov
xchg
inc
xchg
xor
imul
and
pop
fsts
adc
dec
mov
xlat
lahf
mov
cwtl
jnp
das
pop
ja
fs
cmpsl
stos
sbb
push
ss
push
xchg
push
and
sbbb
repz
idiv
xcrypt-ofb
cmpsl
sub
pop
repnz
shrl
arpl
jno
enter
test
es
push
and
jb
dec
mov
inc
lds
aad
mov
mov
push
in
add
and
iret
xchg
mov
and
andl
hlt
push
jl,pt
sub
repz
sbb
inc
xchg
xchg
and
add
shl
nop
jb
popa
call
add
cli
mov
sbb
movsl
mov
fisttpl
lahf
outsb
xor
xchg
mov
jmp
or
adcb
cld
mov
sub
lret
popf
mov
dec
adc
lret
pop
add
cld
cld
nop
and
cmp
scas
shll
ds
cmp
cli
lret
add
ds
xchg
mov
push
lods
call
mov
add
sbbb
daa
mov
mov
jnp
aam
lock
push
lretw
repz
les
add
or
lea
mov
imul
mov
xchg
lea
pop
test
rcrl
push
dec
push
jns
cmp
imul
mov
mov
enter
sbb
mov
outsl
test
mov
xchg
test
pop
imul
add
or
jno
andb
shr
inc
outsl
cmp
sub
xchg
pop
pop
push
int
push
bnd
sub
jge
cltd
dec
or
stos
dec
push
test
and
ss
mov
iret
cmp
leave
inc
out
or
add
cld
sbbb
xlat
jmp
lahf
pop
sbb
inc
decl
mov
jmp
stos
xchg
inc
mov
dec
adc
push
jo
sbbb
int3
aaa
aas
out
jb
xor
add
fwait
rcrb
insl
mov
shll
and
out
sbb
mov
filds
pushf
lods
inc
bound
test
sub
push
stos
push
xchg
fcmovb
mov
jnp
sbb
cmpsl
xchg
int
testl
mov
push
mov
fisubrl
inc
aas
ret
inc
in
xchg
mov
dec
cmpsl
bound
xor
dec
inc
outsl
push
dec
repnz
cmp
int3
sub
inc
or
je
mov
xchg
xchg
mov
pop
pop
pop
lahf
xchg
popf
fwait
sbb
mov
rolb
or
scas
adc
test
fucomip
out
stos
mov
pop
sahf
lock
mov
fnstcw
fdivs
pop
cli
mov
scas
jo
sbb
and
or
add
aaa
inc
imul
in
push
sub
in
jmp
loopne
push
mov
dec
dec
pop
sbb
nop
ss
xchg
in
pop
sahf
mov
ds
dec
cli
fnstcw
sub
loopne
das
cli
dec
lea
push
repnz
sahf
jns
and
pop
scas
gs
aad
stos
fdivrs
xor
push
cmpsl
or
mov
push
insb
stos
jle
and
xchg
in
add
or
push
pop
cmp
mov
cmpsb
cmc
sahf
xor
mov
fcompl
int3
loope
clc
push
sub
popf
pop
sub
adc
mov
and
push
push
sbb
mov
cmp
jae
stos
xchg
jl
dec
shrl
sahf
popf
dec
sub
jo
jmp
sahf
lock
cld
data16
push
mov
not
arpl
test
popa
sub
mov
inc
clc
fadds
shll
test
lcall
mov
or
out
jne
jnp
cld
out
xor
iret
jo
mov
int
pop
sub
pop
push
mov
push
sbb
sti
imul
inc
cmp
lock
pop
data16
xchg
leave
and
in
enter
test
pushf
push
ret
stos
int3
dec
mov
add
push
fs
or
test
arpl
add
icebp
test
sbb
mov
loopne
out
pop
xchg
pop
mov
or
mull
rorl
sbb
repz
dec
mov
cs
or
mov
mov
fwait
movsl
push
or
mov
in
pop
cmc
rcrl
sub
in
push
xor
hlt
ds
jg
mov
inc
dec
lahf
mov
popa
jbe
xchg
sub
dec
mov
xor
lahf
stos
rcpps
cmc
fidivs
imul
divl
pop
lock
lcall
mov
arpl
sub
push
add
ja
bound
js
out
fiaddl
les
inc
pop
mov
pop
jecxz
dec
ss
sub
cmp
mov
xchg
pop
cmp
adc
xchg
mov
mov
inc
ljmp
jl
rorb
loop
dec
pop
mov
scas
das
or
insb
mov
arpl
iret
jb
jns
or
jno
jbe
es
pop
push
jae
push
push
scas
mov
outsb
out
pop
enter
test
cmp
pop
ljmp
mov
cwtl
jg
xchg
es
add
std
xchg
ds
out
ja
mov
sahf
aaa
mov
push
cmp
xchg
sti
cmp
xchg
imul
pop
mov
xchg
jg
fidivrs
inc
and
ss
test
out
push
imul
mov
aas
aaa
out
imul
sub
xor
xor
jp
div
lahf
repnz
fisttps
out
cmpsb
lret
mov
mov
inc
or
stc
pop
lock
out
push
stc
lahf
int
mov
leave
imul
jle
mov
dec
cmpsb
and
aam
sbb
push
cmp
jo
and
ret
into
dec
sarb
insb
loopne
leave
fs
cwtl
iret
loope
sub
xor
mov
pop
out
dec
sbb
pop
inc
dec
pop
push
imul
pop
pop
fbld
int
xor
sub
mov
stos
xchg
or
pop
movb
cmp
dec
cmp
or
cwtl
in
or
jecxz
subl
test
clc
xchg
imul
pop
push
xor
pop
xchg
ret
out
pop
mov
xchg
inc
mov
lods
inc
es
scas
movsb
jg
mov
mov
out
sub
adc
mov
sub
data16
scas
fsts
orb
mov
ljmp
add
xchg
fstl
dec
mov
test
mov
into
jne
xchg
jne
std
sub
xchg
call
cmp
mov
dec
push
cmpsb
jecxz
xchg
xor
push
and
lahf
mov
mov
sti
sbb
fwait
into
fisubrs
mov
xorb
loope
fidivrl
rclb
xchg
or
inc
sbb
test
test
mov
sub
cmpsl
add
pop
hlt
push
rcll
fsubs
jno
push
dec
and
leave
aas
jp
sub
inc
shrb
jnp
mov
sahf
stos
popa
movsl
adc
pop
leave
mov
mov
mov
ficoms
aam
loop
mov
mov
and
out
mov
int3
cmp
mov
cld
jge
and
ljmp
js
xchg
pusha
xor
xchg
inc
cmpl
test
push
loopne
fsubrl
xlat
pop
dec
test
cmp
xor
cli
pop
xchg
divb
jl
inc
jbe
adc
lds
hlt
pop
jae
aad
scas
sahf
xchg
or
in
pop
jo
fwait
test
gs
push
lods
pop
mov
in
dec
push
push
pop
jae
xor
call
mov
xchg
add
movsl
dec
adc
jg
idivb
incl
jae
gs
shll
bound
mov
adc
arpl
sbb
aad
popf
mov
xor
in
or
pop
into
lahf
mov
fs
cmp
ljmp
jl
pop
jle
inc
add
or
in
js
out
fldl
inc
cmp
in
stos
jmp
xchg
aad
dec
mov
clc
cld
jp
dec
inc
mov
and
push
xchg
incb
mov
loopne
gs
stos
je
fsubrl
fstl
and
scas
and
mov
or
movsl
or
adc
xor
ljmp
xlat
pop
push
pop
push
fisttpl
and
insl
mov
mov
shrb
mov
out
scas
add
jle
mov
test
or
inc
add
cmp
jle
jl
jg
popf
es
jno
scas
testb
sbb
cwtl
jg
pop
dec
pop
icebp
push
mov
xchg
mov
jmp
pusha
xchg
xchg
push
iret
adc
arpl
xor
testb
inc
call
je
xor
jl
jnp
or
test
mov
insb
and
xchg
push
or
inc
popa
xchg
nop
and
int
je
xor
xchg
add
insl
dec
aas
sub
fistps
add
push
inc
mov
push
lock
mov
out
insl
cmp
add
sbb
mov
test
lds
enter
cmp
loop
in
cmp
push
dec
and
sbb
mov
xchg
sbb
mov
int
mov
dec
lret
mov
repnz
out
fildl
js
jno
cli
orb
shl
or
inc
stos
mov
into
push
sarb
dec
mov
imull
xor
mull
and
shr
sbbl
or
rol
inc
pop
fiadds
adc
pusha
lods
jp
xchg
adc
push
out
shrb
mov
cmp
push
ja
push
mov
or
movsb
and
mov
loop
test
dec
and
shll
or
mov
mov
cmp
dec
cmp
out
add
add
adc
mov
sub
imul
push
and
int3
cmc
dec
out
jb
xor
and
dec
adc
inc
in
aas
fmuls
lock
sub
shrl
cmp
cltd
insl
and
test
and
jno
sarl
shll
dec
nop
addl
jo
lods
js
xlat
les
out
lods
xchg
pop
mov
push
xor
mov
pop
das
pop
shl
sbb
jno
xor
sbb
fisttps
sub
cmp
push
mov
lock
in
sti
stc
sarb
std
dec
lods
xchg
mov
and
sbb
movsb
roll
movsl
cmp
sbb
fxch
jo
insb
lret
ds
int3
jmp
mov
sub
jbe
enter
push
shlb
fistpll
cmpsb
enter
or
push
hlt
adc
dec
ja
adc
out
popf
mov
inc
mov
cmp
push
pusha
enter
mov
add
ljmp
fwait
cmp
in
out
fldt
xor
add
xchg
xor
pop
mov
lods
fsubl
pop
test
dec
and
rcl
sub
stos
pop
inc
mov
vshufpd
lea
in
in
add
xor
pop
fisttpl
jle
cmpsb
pop
jg
out
cmp
repnz
push
mov
movsb
or
fidivs
es
gs
aaa
mov
pop
jg
call
xchg
mov
js
out
lods
movsb
inc
mov
jle
into
pop
dec
mov
int3
test
arpl
inc
xor
add
mov
pushf
scas
decb
add
es
xor
and
xchg
push
mov
ljmp
push
xor
out
push
loope
adc
jbe
insl
test
cmova
call
cmpsb
or
enter
pushf
leave
inc
out
pop
jecxz
inc
jb
loop
xor
in
cs
adc
jp
dec
adc
imul
enter
out
dec
icebp
mov
jle
in
sbb
aaa
mov
movsl
lock
push
sub
mov
push
jno
mov
rorb
add
xor
cli
outsl
jbe
pop
repz
in
imull
cwtl
in
cmpsb
cmp
lcall
push
add
fwait
movsl
imul
xor
cli
dec
inc
mov
mov
aaa
sub
repnz
mov
dec
sti
and
cmp
bound
rcll
sub
jbe
pop
fcomip
shlb
adc
les
inc
repnz
repz
push
out
sti
add
mov
cmp
fs
pop
cmp
dec
cwtl
imul
pushf
push
inc
pop
adc
inc
lods
icebp
push
push
imul
inc
xchg
jb
inc
aad
push
hlt
mov
stos
pop
int3
ret
sbbl
inc
dec
add
xor
out
sbb
mov
jno
mov
shll
cmp
movsl
jp
xor
fsubrs
aad
stos
push
inc
add
mov
stc
mov
push
push
mov
pop
push
adc
out
or
les
fucomp
ja
clc
pushf
lock
jno
gs
mov
call
jne
add
and
push
pop
push
ss
lock
or
push
xchg
cli
ljmp
jne
loope
push
xchg
sti
cmp
lock
in
xor
inc
or
sbb
int3
loope
insb
sbb
scas
mov
ds
push
xor
mov
push
push
insb
adc
lret
aad
insb
call
jecxz
lahf
ret
movsl
data16
cli
mov
out
out
mov
negl
jnp
pop
icebp
add
jg
popa
test
inc
in
jbe
jbe
inc
inc
lcall
jmp
cmpsb
xorb
mov
adc
push
stc
shll
jle
stc
mov
inc
xor
ja
stc
scas
es
in
push
aaa
mov
stc
xor
mov
test
mov
mov
or
dec
movsb
ret
pop
or
jecxz
sbb
xchg
xchg
mov
in
stos
dec
fcmovne
cmpsl
cli
add
sahf
pop
pop
in
adc
bound
sub
mov
rcrl
movsl
dec
mov
loope
cmc
mov
xor
mov
adcl
add
jb
xlat
rcr
addl
and
pop
fldcw
inc
clc
mov
jle
jbe
inc
sub
cli
lods
inc
imul
mov
mov
cmpsl
or
out
adc
dec
cmp
jecxz
xchg
and
xchg
cmp
adc
jmp
addl
addr16
aaa
mov
insl
rcrb
adc
aas
ss
fnstsw
or
jle
pop
arpl
adc
mov
ss
pusha
push
jo
push
gs
inc
add
mov
addb
sbb
push
add
adc
sti
call
pop
mov
lock
lahf
xchg
and
inc
adc
add
cwtl
fisttps
xor
fwait
sbb
cmpsl
inc
addl
ror
push
mov
push
and
or
dec
cld
enter
inc
push
nop
addl
and
mov
or
ret
mov
fsubr
lea
push
lods
mov
sahf
adc
outsb
and
jecxz
test
xchg
shll
insl
inc
sub
aad
xor
insb
sbb
enter
dec
loop
cmp
mov
movsb
cli
xor
test
out
push
jbe
push
adc
lret
push
les
lock
paddsb
lods
cli
or
rol
mov
enter
inc
cld
cmp
add
orl
mov
adc
jl
adc
cwtl
xor
xchg
mov
sub
outsb
imul
sbb
sbb
mov
pop
in
push
pushf
mov
or
bswap
lret
je
add
ja
mov
insb
push
sbb
sbb
sub
sbb
xor
push
push
in
ret
pop
cmp
in
jo
mov
bound
mov
mov
xor
dec
push
mov
movsl
shrl
rcr
sbb
fmull
or
xor
notb
lret
add
ret
das
or
xor
jo
mov
mov
bound
xchg
movsl
incb
es
mov
jbe
sar
inc
rorb
out
ret
add
inc
add
cltd
bswap
dec
inc
cmp
dec
aaa
dec
cld
push
loopne
sti
jmp
cmp
push
in
mov
push
cmpsl
fildll
pop
lret
fimuls
out
dec
sahf
jge
ss
idivl
mov
sbb
jmp
jmp
lret
push
sbbl
popf
ret
outsl
test
mov
in
shll
and
xor
inc
in
push
mov
jns
sbb
bnd
aad
cmc
loopne
fsubrs
xor
mov
sbb
add
mov
jo
or
stos
out
xchg
negb
or
mov
adc
fwait
dec
mov
stos
divb
push
fs
data16
loop
cmc
mov
cld
xchg
push
scas
aam
dec
fs
push
ficompl
ret
adc
lea
adc
sbb
iret
adc
adc
push
xor
mov
stos
cmp
lret
adc
add
addb
xchg
aas
pop
flds
push
pusha
call
pop
mov
cmp
int
push
cmp
lret
mov
out
jle
sbb
xor
pop
mov
jbe
xchg
dec
mov
inc
mov
rcrl
lds
rorb
add
shll
cmp
mov
aad
push
dec
gs
fcmove
xchg
adc
clc
xchg
and
mov
mov
sub
jle
ljmp
shll
loopne
cmp
xchg
mov
cmp
lahf
or
add
xchg
cmp
out
pop
test
pop
sbb
sbb
icebp
sub
out
dec
push
push
test
mov
jecxz
sub
in
ds
js
outsl
movb
scas
cmp
lret
enter
mov
cmp
cmp
jbe
jb
mov
popf
lcall
or
inc
or
cmpsl
push
loope
mov
icebp
lcall
xchg
jne
xchg
pop
jp
mov
out
iret
nop
xchg
pop
loopne
into
push
out
cld
test
outsl
sub
in
lret
mov
or
pusha
jge
jecxz
mulb
ljmp
cmp
test
fsubr
aas
sub
and
sub
outsl
popl
mov
push
sbb
pop
xchg
iret
xchg
or
sbb
push
cli
add
mov
not
shlb
scas
in
cmp
inc
rclb
les
add
shr
mov
iret
jae
or
ja
mov
into
mov
in
jp
bswap
sbbb
subb
mov
jp
fsubp
imul
stos
push
jb
test
fimuls
nop
mov
mov
je
gs
cmp
xchg
out
pop
or
mov
or
sbb
bound
int
or
jb
or
inc
loopne
adc
ds
lods
int
mov
xor
in
dec
jo
in
fs
cmp
adc
sbb
xchg
enter
xor
mov
sub
mov
decl
sub
push
jp
xchg
mov
lret
pushf
es
or
repz
jb
dec
sbb
stc
mov
nop
xchg
scas
scas
imul
js
subl
and
mov
mov
ret
mov
bound
xor
in
push
cmp
fstl
dec
pop
maxps
je
xor
sbb
or
in
push
test
cld
push
jge
jge
sub
sahf
movsl
mov
jle
shrb
ret
jl
lods
outsb
imul
loopne
rclb
enter
popa
push
xlat
xchg
mov
int
imul
inc
popa
es
cltd
fistpll
or
loop
pop
dec
jns
and
xchg
shl
sarb
dec
out
addl
push
fldl
cld
xor
sahf
push
mov
lea
sti
jge
stos
ds
lahf
mov
fnstsw
enter
aad
loopne
cmp
xorb
mov
dec
cmpsl
xorl
push
iret
xor
inc
imul
and
test
sti
fdivp
dec
jecxz
cmp
in
je
test
test
and
xchg
out
cs
and
jge
push
sahf
into
mov
dec
rorb
lds
and
xor
int
xor
repz
les
push
add
imul
clc
or
sbb
jp
ja
lret
fbld
push
gs
jo
mov
in
adc
fcoms
cmpsb
or
push
jmp
gs
in
rol
fwait
lcall
cmc
iret
jmp
cmp
mov
test
cs
in
mov
stc
lret
push
jnp
pop
and
mov
fcompl
in
xchg
sub
in
or
mov
cld
cli
mov
jmp
nop
xor
mov
mov
ret
ret
leave
ljmp
je
xchg
pop
or
out
nop
inc
mov
adc
movsb
jge
clc
mov
mov
test
sub
cli
sti
pop
and
add
daa
sahf
imul
sbb
cmp
mov
cmpsb
xorb
test
jmp
sbb
notl
cmpsb
mov
cs
in
mov
inc
push
push
mov
inc
scas
xchg
outsb
aam
lret
arpl
js
and
adc
lret
add
das
sub
push
imul
jecxz
and
dec
loope
subb
xchg
adc
popf
test
lcall
pop
lret
sbb
mov
shll
ficompl
pop
sti
jne
jg
or
pop
dec
mov
sub
enter
add
jle
lds
mov
inc
mov
sbb
fisubrs
pusha
scas
mov
jg
xchg
push
sbb
pop
dec
fdiv
sub
cli
push
int
lcall
pusha
mov
jmp
test
je
cmp
or
xchg
mov
stos
push
in
aas
out
loopne
push
in
ljmp
std
ror
inc
ljmp
xchg
jno
and
out
int
mov
push
and
pusha
ss
xor
xor
xchg
daa
push
int3
or
push
data16
leave
jne
dec
cmpsl
adc
hlt
in
andb
mov
or
dec
mov
inc
incb
out
sbb
dec
mov
xchg
mov
inc
dec
pop
fwait
sarb
pop
jbe
and
mov
mov
push
mov
ja
fs
testl
icebp
xor
push
outsl
out
inc
or
roll
dec
xchg
and
dec
sarl
push
int
sbb
pop
pop
jbe
out
add
rorb
jg
add
jg
jl
out
scas
adc
jb
rcll
add
shlb
enter
sbb
data16
les
loope
idivb
lret
out
dec
dec
pusha
test
add
cli
mov
jns
fstp
mov
xorl
inc
push
iret
fsubrl
mov
sbb
rcrl
xor
stos
push
push
sbb
rclb
mov
cltd
cmp
sbbb
stos
mov
adc
mov
pop
push
pop
or
jo
lods
dec
sar
test
scas
inc
cmp
mov
push
push
xor
push
inc
sarl
das
xor
sub
mov
add
adc
inc
adc
shll
mov
inc
mov
sti
xor
pop
lds
les
xchg
push
insl
sub
icebp
rolb
mov
fmulp
xchg
fs
cmp
scas
dec
outsb
sbb
and
lahf
insb
loopne
rcl
ret
aaa
or
clc
mov
mov
outsb
sub
ja
fidivrs
mov
out
mov
out
cmp
js
dec
sbb
ficoml
push
ss
mov
dec
mov
dec
mov
add
cmpl
sarb
sub
outsb
pop
in
loope
js
sbbb
sbbl
sub
sbb
add
fsts
mov
sub
sti
daa
lret
add
outsl
jo
mov
test
lret
lods
inc
adc
popa
push
sub
pop
add
sbbb
adc
sti
dec
rolb
xchg
subb
addr16
repnz
dec
mov
shll
fwait
xor
cmp
addl
jl
das
pop
push
xchg
fdivr
bound
mov
dec
fadds
sbb
nop
in
jl
mov
dec
ja
mov
and
call
xor
xor
push
jecxz
sub
mov
loope
js
add
in
sbb
jle
sub
mov
jmp
xor
test
repz
lea
cmp
pop
subl
icebp
in
mov
loop
enter
subl
push
pop
jg
push
scas
pop
add
rcrb
std
mov
js
pop
and
out
dec
xor
test
addl
sub
fs
push
dec
aam
inc
movsl
sbb
scas
dec
call
adc
push
imulb
sbb
insb
add
xchg
lock
pop
and
jb
or
ljmp
fwait
jg
rcll
imul
decb
lods
xor
sti
mov
stos
dec
and
insb
xchg
pop
lods
int
popa
arpl
aaa
dec
cmpsb
aam
call
stos
out
pop
hlt
dec
push
mov
lea
movsb
cmp
xchg
stos
fwait
adc
add
mov
or
outsl
sub
sub
jno
ss
gs
add
mov
std
xchg
inc
cmpsb
popa
and
sbb
fucom
mov
sub
and
push
mov
enter
popa
xchg
sub
dec
fsubs
ficoml
popf
test
push
xchg
xchg
jmp
dec
fldl
movsl
sbb
mov
into
mov
popf
das
adc
int
add
jae
sub
mov
fiadds
and
repz
mov
in
loop
jno
sbb
js
and
bound
scas
pop
aas
mov
cwtl
ljmp
pusha
xlat
shrl
aam
inc
pop
push
rorl
testb
popf
lret
xchg
mov
cmpsb
fadds
add
mov
adc
call
mov
and
jmp
jno
fsubs
clc
movsl
jmp
jno
xor
lds
cli
loope
mov
daa
pop
pop
sbb
orl
leave
push
lret
ficoms
int
dec
insb
jae
mov
and
arpl
shll
int3
pop
sub
mov
mov
add
mov
repnz
pusha
and
push
dec
xchg
test
mov
and
popf
mov
sbb
sub
xchg
dec
and
or
js
pop
mov
iret
mov
and
push
dec
pusha
shl
push
cmp
pop
shlb
lret
into
dec
push
xor
cmp
adc
cld
stos
push
repnz
rcrl
dec
cltd
push
inc
out
adc
ret
xor
aas
inc
xor
pop
int3
sbb
sti
adc
insb
notl
xchg
movsb
test
fs
inc
mov
mov
jb
bound
mov
cmpsb
adc
mov
fdiv
cmp
inc
fprem1
and
adc
adc
xchg
test
sub
cmp
js
adc
repnz
dec
pop
or
jg
and
addb
lret
cmpsb
popa
pop
sub
inc
insl
mov
sbb
xchg
and
xchg
daa
xor
test
test
fsubrl
and
pop
mov
pop
cmc
add
movsl
mov
pop
adc
lahf
sub
into
fnstcw
repz
sub
sbb
roll
sahf
iret
fdivl
dec
mov
inc
sub
aad
nop
dec
pop
jb
adc
iret
push
cmpsb
sub
out
dec
add
aaa
bound
addl
outsb
pop
ljmp
xchg
mov
and
mov
scas
movsl
inc
adc
hlt
in
loope
mov
rclb
or
insb
cmp
dec
jbe
inc
and
shll
dec
das
jle
je
pop
push
rcll
mov
mov
loope
mov
xor
dec
nop
push
imul
daa
mov
fidivs
fwait
pop
in
in
jg
shl
xorb
ret
sub
lret
jno
add
ja
adc
fsub
inc
mov
shlb
je
ret
int3
pop
pop
pop
int
adc
cs
sahf
mov
roll
push
adc
add
mov
jge
pop
sub
lds
testl
jl
negb
sbb
loopne
cmp
les
pushf
mov
sbb
insb
add
fwait
inc
sbb
in
jp
nop
xor
pop
push
mov
pop
dec
jmp
mov
inc
aam
ret
sbb
or
inc
add
es
pop
int
dec
stc
xchg
mov
jmp
nop
out
cwtl
sbb
sub
xchg
fimull
fadds
lahf
mov
inc
int3
je
inc
addr16
mov
inc
outsl
enter
ror
mov
mov
jmp
jp
jae
fisttpll
insl
aam
ret
rcr
jb
or
inc
mov
icebp
jns
cmp
or
sub
int3
lcall
testl
xchg
gs
xchg
fldenv
cmc
mov
mov
xchg
mov
jl
sbb
int
fwait
inc
mov
cmp
stos
repnz
adc
mov
into
push
gs
stc
rcrb
sub
fldt
sbbl
das
pop
sti
sbb
or
movb
xor
rolb
xchg
in
inc
out
adc
js
ljmp
dec
fs
inc
incb
fisttpll
cwtl
xchg
cmp
xchg
sahf
pop
aas
add
inc
andb
xor
sarl
daa
insl
dec
pop
xor
or
cmp
popa
sub
dec
or
sub
pop
js
inc
aad
xchg
sbb
sub
inc
mov
mov
push
scas
shll
leave
jp
subl
dec
out
sbb
xchg
mov
hlt
cmp
aad
icebp
cltd
pushf
sbb
lcall
rcrb
cmp
shl
out
out
gs
lock
shlb
stos
jle
insb
fsubr
cmp
sbb
aam
xchg
scas
jecxz
call
lods
fists
or
into
sub
mov
inc
aaa
pop
jo
push
cmpsb
pop
and
sub
mov
pop
sub
push
jo
add
push
rol
mov
scas
push
push
push
fwait
and
call
lock
test
lods
xor
lret
mov
inc
mov
es
mov
cwtl
pushf
push
cmpl
and
jle
sub
xchg
test
iret
jae
push
psrlq
lret
dec
cltd
push
jne
popa
dec
das
fbld
dec
sti
mov
icebp
mov
jge
jle
adc
repz
or
lahf
out
lods
pop
les
jnp
cmpsb
jbe
push
mov
dec
xchg
pop
lahf
jl
js
cmp
sbb
mov
mov
shr
pushf
push
jle
lcall
add
sbb
in
and
inc
inc
cmp
cmp
and
icebp
arpl
aad
les
inc
push
mov
scas
sbb
xchg
stc
inc
or
jnp
imul
stos
jne
sub
shrb
in
xchg
add
sbb
xchg
js
lea
jae
out
mov
sbb
bound
xchg
mov
pop
fwait
adc
scas
push
mov
es
imul
jo
push
lods
fadds
fdivs
push
pusha
sub
leave
adc
scas
divl
push
icebp
stos
dec
sub
cmp
mov
sbb
push
in
scas
lds
mov
mov
jl
popf
lea
jne
pop
int
mov
daa
xor
xchg
adc
loope
das
ret
jecxz
or
ret
dec
fisubrs
jecxz
push
or
test
loopne
stc
mov
xor
fcomp
daa
pop
fidivrs
xor
sbb
pop
or
pop
shl
pop
mov
and
call
es
xor
mov
fidivs
aaa
jnp
cltd
orb
enter
jl
push
mov
and
pusha
repz
xchg
push
out
and
bound
popa
xor
pop
lahf
cmp
xchg
xlat
mov
clc
sbb
mov
sbb
nop
in
cmp
fdivl
mov
push
data16
cltd
push
or
sbb
jecxz
xchg
sub
ftst
movb
mov
push
or
mov
xchg
cmp
or
out
mov
sbb
bound
scas
sub
lcall
fisttps
or
sbb
xchg
adc
ret
push
imul
shlb
mov
push
bound
dec
daa
jge
inc
jnp
or
push
pop
scas
fldcw
inc
addr16
rcrl
jne
xchg
popa
sub
xchg
inc
cwtl
jbe
lahf
aaa
mov
dec
jecxz
cld
cmp
out
int3
notb
push
push
xchg
mov
mov
and
sub
inc
xor
fdivrs
jae
inc
inc
lahf
test
ud0
scas
loop
ds
cmpsl
lods
push
push
xchg
sub
test
mov
pop
inc
pushf
mov
imul
mov
adc
push
or
dec
sbb
loopne
pop
int
rol
mov
lret
or
inc
loopne
subb
or
cwtl
push
std
mov
sbb
and
sbb
repnz
add
stos
scas
sbb
adcb
ret
inc
clc
jp
insl
cli
pop
dec
stos
pmaxub
orb
cmpsb
mov
ja
push
sbb
cmp
and
aaa
cmc
jg
aad
mov
inc
mov
xor
and
pop
into
js,pt
fcmovb
test
xchg
and
pushf
push
and
inc
testb
es
aam
jmp
je
mov
icebp
into
fcmovb
les
jl
jne
sub
xchg
loop
xchg
fbstp
scas
xchg
xor
mov
xchg
mov
jmp
jle
adc
or
cmp
lcall
xchg
xchg
mov
push
xor
mov
mov
mov
xchg
out
sahf
and
fs
ljmp
jb
mov
notb
jae
mov
xlat
push
pop
aaa
sub
pop
push
cmpsl
jae
cmp
cmp
mov
in
jbe
dec
pusha
out
push
test
mov
insl
rclb
mov
rcr
ret
cmp
aas
aaa
ja
pop
bound
cli
xlat
xor
in
cld
xchg
cmp
cmpb
jl
fidivrs
jg
push
fmulp
pop
or
stos
inc
adc
mov
and
sbb
sub
notb
mov
ja
xchg
leave
test
mov
fwait
inc
mov
or
mov
pop
jg
mov
jle
lahf
add
popl
pop
adc
loopne
push
lahf
cld
adc
dec
es
xor
push
xorl
sarb
push
data16
movsb
loop
cmpsl
scas
sbb
sbbb
push
ds
int
xchg
lods
fstpt
test
cld
pop
in
pushf
mov
aas
pop
or
mov
cwtl
clc
push
pop
fdivrl
aad
mov
mov
or
push
xor
sbbb
and
int3
mov
sub
pop
sub
lods
lods
aam
xchg
or
sub
inc
or
push
lods
inc
aaa
push
out
push
pop
add
dec
notl
push
sbb
les
xor
jno
and
lret
ret
pop
cltd
scas
mov
scas
xchg
inc
adc
inc
lea
mov
inc
jbe
jno
cmpsl
je
movsb
or
inc
ds
sub
inc
cmp
rol
cs
popa
imul
in
lods
scas
popa
orb
xor
lds
jnp
in
pop
push
mov
or
pop
popa
rcrl
out
jg
mov
fldenv
jns
push
fisttps
cmp
lds
mov
insb
or
sbbb
mov
mov
xorl
sti
sub
cli
or
aad
cmpsl
js
cmc
mov
loop
xchg
adc
mov
lds
push
xchg
popf
stos
xor
scas
cltd
dec
leave
test
out
push
mov
cmp
or
xor
mov
xchg
loope
inc
inc
lret
rolb
in
add
jns
mov
cltd
jns
mov
int
ficoml
scas
lock
sub
push
and
push
aam
movl
pop
or
push
xchg
ljmp
out
lock
and
es
pushf
cmc
test
xor
std
inc
fbstp
scas
cmc
add
call
mov
sahf
pusha
lret
data16
mov
loope
pop
arpl
cmp
aas
repnz
sti
dec
jle
sar
dec
bound
loopne
mov
dec
add
xorl
and
sarb
adc
sub
jge
inc
insb
adc
pop
inc
daa
loope
dec
jp
mov
jp
bound
mov
mov
fs
shrl
fcmovne
and
cmpsb
addr16
std
pop
lret
fstl
push
es
mov
push
sbb
push
popf
push
mov
xchg
cmpsb
out
jp
mov
inc
fstl
sahf
test
lea
lds
mov
xchg
push
arpl
test
mov
repz
mov
call
lret
pop
xchg
aam
mov
out
add
jmp
mov
xor
cmpsl
xor
xor
mov
cmpsl
mov
pop
push
dec
mov
or
or
out
cmp
inc
inc
leave
mov
je
mov
int
out
dec
orl
scas
mov
dec
mov
xor
sahf
movsb
je
stos
icebp
mov
out
test
mov
sahf
cltd
jg
push
daa
xlat
stc
lahf
mov
pop
xchg
or
mov
adc
fstp
scas
xchg
int3
lcall
aas
or
aam
mov
jg
clc
mov
xchg
mov
leave
sarb
add
and
sbb
insb
xor
pusha
shll
shlb
stos
lcall
imul
addr16
xor
leave
mov
sahf
popa
mov
jmp
cmp
incb
xorb
cmp
in
mov
out
cmpl
jg
jmp
call
dec
and
out
mov
cmp
or
sub
cmp
inc
add
add
or
push
addl
or
cvttps2pi
sub
inc
xchg
mov
jle
push
mov
sub
add
mov
mull
out
xor
mov
ret
and
mov
cmc
mov
jle
xchg
push
add
test
clc
sub
inc
push
push
int3
mov
and
ja
pop
add
and
or
inc
cwtl
xlat
ja
push
dec
adc
sbb
jae
sub
jbe
sahf
fwait
mov
shll
test
mov
fs
hlt
call
xor
mov
sti
int
mov
movsl
or
cmp
dec
and
pop
push
imul
sbb
add
sub
adc
add
jle
adc
and
pusha
cli
test
in
jge
fs
or
xor
xchg
cmp
dec
nop
rclb
mulb
sub
fsubrs
sub
push
mov
fwait
shll
stos
xlat
jge
jne
sahf
adc
data16
sub
nop
add
jg
pminsw
push
in
adc
inc
dec
pop
pop
or
dec
addr16
adc
fstpl
inc
jmp
outsl
push
out
mov
pop
pop
stos
dec
add
addr16
idiv
cmp
inc
mov
imul
jno
mov
pop
jle
cli
sbb
mov
dec
mov
ja
fldcw
in
ja
or
test
cmp
inc
jns
sub
jmp
aad
hlt
ftst
mov
jbe
je
and
push
fwait
mov
cld
cld
scas
add
enter
jle
pop
pushf
movsb
push
pop
jns
cmp
lret
in
sub
inc
mov
cs
mov
ret
fisttpll
cmp
data16
inc
ss
jae
nop
mov
dec
add
ret
pop
mov
lods
sbb
outsb
cmp
sbb
sahf
aam
mov
ret
pop
iret
cwtl
jbe
jmp
fwait
mov
lods
or
inc
in
mov
mov
mov
jns
loope
insl
pushf
cmp
sbb
lret
sub
sub
xchg
pop
adc
mov
lock
lcall
shrl
daa
popf
push
cmpsl
inc
std
add
sub
and
inc
fs
xor
sbb
or
jne
and
or
addr16
mov
mov
daa
dec
inc
jl
sbb
btc
cs
mov
add
jns
je
cld
popa
jecxz
cmpsb
jnp
test
rcll
lea
ds
adc
sub
mov
pusha
mov
push
fcoms
imul
rcl
pushl
xchg
adc
ret
scas
add
adc
xor
push
xor
lods
cmp
out
mov
sbb
push
cmp
sbb
pusha
adc
imul
mov
call
inc
adc
or
pop
pop
dec
sbb
sbb
pushf
repnz
mov
rorb
shlb
movsb
cmpsb
inc
or
test
jge
aas
lcall
aad
addr16
daa
and
push
pop
std
sbb
imul
adcl
imul
aad
stos
mov
loop
jg
mov
addr16
sub
xchg
inc
cwtl
pop
test
pop
call
dec
push
lahf
or
pop
xchg
fisubrl
in
imul
lahf
imul
stc
cmpsb
pop
cmp
jb
loopne
pop
out
sub
stos
push
sbb
push
jg
daa
rorl
aad
ja
loopne
pop
adc
sub
sbb
loope
popa
in
mov
jge
sub
clc
push
mov
push
ljmp
call
int
out
push
dec
out
aas
call
aad
mov
sub
sbb
mov
cli
inc
lock
push
cmp
cmpl
mov
mov
and
pop
ja
inc
dec
xchg
lods
addr16
cmpl
jmp
fdivrl
mov
mov
orb
xor
jecxz
pop
xchg
xor
movsl
dec
data16
daa
not
sub
jmp
inc
push
inc
jne
xchg
inc
lods
cmp
add
cmp
imul
shl
dec
stos
out
adc
mov
shrl
dec
mov
insb
add
pushf
jnp
clc
fisubrs
mov
mov
xchg
xchg
jnp
dec
icebp
inc
movsl
or
jge
sbb
jecxz
jbe
arpl
mov
aam
add
ja
stos
lahf
mov
pop
test
adc
sub
iret
mov
ljmp
dec
sub
ffree
setbe
sbb
in
fs
xchg
test
mov
ret
cmc
or
pop
pop
cmp
call
ds
add
leave
out
inc
xor
inc
cmp
cli
push
inc
mov
cwtl
mov
aad
clc
popf
push
mov
cs
mov
push
stos
repnz
mov
or
call
pop
sub
push
daa
sub
scas
pop
inc
sbb
fisubrl
sub
jo
stos
lds
fidivs
arpl
and
mov
orb
xor
int
adcl
push
lcall
in
scas
push
inc
scas
jecxz
adc
rorl
xor
andl
add
clc
add
xlat
stos
add
and
out
cmp
inc
movsl
inc
clc
push
fwait
mov
insb
jns
popf
test
icebp
xor
cld
mov
enter
add
fidivrl
fstpt
push
mov
mov
ret
shlb
sub
push
scas
arpl
or
lret
mov
xchg
xor
stos
push
stc
inc
in
and
int3
add
and
xchg
xchg
or
rclb
js
aas
sti
stc
nop
pop
or
mov
lcall
rol
cmpsl
push
into
pop
sar
mov
and
inc
mov
bound
push
fisubl
shlb
jno
outsb
sub
gs
push
loopne
mov
mov
or
fidivrl
fnstenv
adc
jae
lea
insb
push
mov
lods
adc
or
rclb
add
arpl
cs
jmp
mov
lods
and
es
roll
cmp
iret
in
adc
cmp
jae
test
popa
sbb
mov
xchg
mov
jecxz
lahf
test
sbb
fs
and
jmp
sub
sti
inc
fwait
sbb
dec
pop
js
repz
pushf
jmp
add
int3
xor
jno
jecxz
push
push
movsb
cmp
sbbb
test
icebp
mov
pop
and
jp
repnz
icebp
ret
mov
cmp
jnp
jl
bound
xor
movl
sub
push
dec
or
and
inc
jle
into
outsb
cmp
lds
xorl
inc
sub
mov
ret
push
in
push
dec
fst
popa
in
cmc
xor
stos
sub
mov
dec
push
les
and
xchg
imul
int
jmp
inc
lcall
xchg
mul
icebp
cltd
mov
jne
cmp
cmp
mov
mov
push
inc
popa
cmp
mov
jb
mov
xor
aam
jne
inc
and
and
testl
add
imul
sub
pop
addr16
leave
sub
mov
fadds
sbb
jo
mov
mov
ror
add
cmpsb
push
jb
xor
cwtl
orb
aad
jnp
repnz
cmc
pop
cmp
lods
cmp
jns
xchg
std
adc
push
or
push
in
xor
and
fidivl
mov
sbb
test
mov
dec
add
loop
and
int3
inc
mov
mov
xchg
imul
loope
insl
pop
dec
jbe
xor
bnd
push
pushf
and
add
fdivp
jo
cmp
cmp
cli
adc
mov
sub
jnp
xor
inc
and
lods
jno
imulb
push
imul
inc
out
pop
lods
ja
aam
mov
insb
mov
pop
arpl
mov
mov
addb
mov
test
adc
adc
adc
xchg
ds
or
jp
push
subb
out
sahf
loop
imul
loopne
movsb
clc
enter
mov
in
js
push
lds
lds
cwtl
jns
xlat
or
rcll
add
inc
fbstp
stos
test
or
mov
fs
ljmp
aaa
outsl
mov
adc
aas
cmp
shlb
sub
sbb
popf
pop
cld
pop
std
outsb
cmp
dec
roll
push
dec
mov
fs
stos
add
icebp
stos
movsl
hlt
xor
fsubr
jle
pushf
jae
inc
cmp
push
hlt
push
in
jb
mov
leave
sub
cmp
in
mov
pop
rcl
mov
popf
mov
cmp
sbbl
push
jp
adc
lods
stos
and
les
adcb
mov
pushf
pop
nop
mov
mov
xchg
pop
lods
icebp
hlt
dec
xchg
pop
mov
mov
ret
mov
mov
sub
fcmovnb
xchg
pinsrw
divb
mov
cmp
scas
add
fmul
mov
pop
xchg
lret
sbb
add
pop
mov
fldl2e
dec
xorb
popf
jno
cwtl
jge
frstor
push
ud2
cmp
cli
je
push
lret
int3
and
sbb
dec
js
incb
adc
pop
add
mov
fisubl
and
punpckhdq
or
add
sbb
aas
mov
aam
dec
sbb
sbb
repnz
inc
nop
push
test
mov
push
fs
cltd
add
popa
movsl
in
aaa
movsb
sub
jge
add
das
repnz
ret
cwtl
test
lock
pop
mov
fwait
push
rorb
push
sbb
adc
adc
push
sub
push
inc
cmp
mov
push
fdivrl
pop
sub
pop
dec
mov
mov
mov
push
dec
js
jmp
inc
popf
in
lret
xchg
or
sub
add
mov
arpl
or
sub
cli
jno
sbb
popf
fisubrs
loope
push
mov
hlt
pop
lcall
dec
or
jo
mov
mov
out
stos
ss
jo
jg
outsl
sbb
push
mov
hlt
or
mov
into
push
adc
std
ret
call
filds
ja
pop
mov
or
ja
push
notl
jp
test
in
cmp
jne
sub
cmp
pop
inc
test
cmpb
adcb
daa
mov
adc
mov
es
jb
pop
dec
pop
lods
fnsave
inc
jecxz
jg
shrb
into
mov
xor
jns
stc
add
lods
inc
and
int3
out
mov
lods
lcall
push
std
insb
fwait
out
cmp
mov
xchg
fisttpll
xor
xchg
mov
push
add
add
gs
xchg
pop
xor
or
lahf
mov
inc
pusha
cmpsl
mov
pushf
mov
jecxz
andl
dec
or
mov
and
scas
std
sahf
add
mov
mov
mov
push
jnp
or
jne
xchg
inc
mov
mov
pop
aad
cmp
mov
rcrl
mov
lds
push
stc
dec
inc
and
jno
and
addb
daa
jmp
and
inc
mov
cwtl
sbb
push
jnp
sub
sti
pop
jmp
outsb
test
xchg
or
sbb
inc
fs
pop
cmc
lcall
fsubs
mov
fdivrs
jae
divb
add
movsl
movb
push
push
fldenv
push
sub
je
iret
add
movsb
add
lcall
adc
bound
mov
pop
pop
jno
and
hlt
cmp
pushf
out
int3
push
in
mov
mov
push
jns
xor
inc
and
mov
or
adc
nop
out
int
sbb
in
sbbl
push
mov
loope
push
add
shrb
jns
mov
loop
cmp
mov
xchg
rclb
fneni(8087
fisttps
and
pop
mov
jns
sub
cmpsb
aad
xchg
adc
jne
repz
jbe
fsubrs
imul
mov
roll
or
sub
pop
pop
mov
loop
ja
enter
pop
shlb
mov
mov
lods
negl
ss
adc
xacquire
dec
pop
cwtl
pop
and
lods
out
dec
adcb
pop
jmp
out
jb
call
sbb
fs
mov
je
or
lcall
cmp
mov
add
int
or
push
mov
add
outsl
xchg
out
sub
roll
mov
pop
jp
testl
rcr
or
lods
mov
jno
mov
adc
add
add
push
jae
and
cmpsb
inc
outsl
jne
aad
into
xchg
mov
int
xor
and
cwtl
xchg
and
sub
scas
insb
mov
mov
mov
jno
ret
push
lds
adc
add
pop
test
jp
lods
std
xchg
cwtl
mov
lock
fiaddl
pop
sub
inc
dec
sahf
cmp
add
jge
fcoms
or
xor
push
pop
repnz
cmp
xchg
push
mov
push
or
movsb
scas
test
rorl
mov
sbb
daa
pop
pop
inc
popf
cld
add
adcb
fdecstp
xchg
sbb
sbb
mov
dec
pop
push
or
mov
mov
bound
stos
stc
xchg
push
cmp
jg
sbb
push
cmp
imul
sub
scas
rclb
daa
scas
sbb
cli
jo
cs
cmp
xchg
or
hlt
dec
jg
mov
stc
or
out
xchg
push
jns
or
pop
js
cmpsl
inc
lret
jns
out
dec
test
leave
mov
inc
mov
xchg
loopne
movsl
inc
fcmove
sti
pop
lret
pop
xor
xchg
out
insb
das
jecxz
push
imulb
push
adc
pop
lds
mov
lcall
pop
xor
sub
outsb
scas
inc
and
addr16
mov
xor
test
xchg
push
adc
sti
mov
lahf
xrelease
loope
lock
rclb
cmp
push
sbb
jno
lcall
cmp
dec
mov
pop
fwait
mov
stc
cmp
mov
add
dec
dec
in
jbe
jl
std
or
aam
shld
add
xchg
btr
xchg
push
pop
scas
push
pop
mov
pusha
jo
jns
call
aaa
cmpsl
push
and
mov
push
aas
hlt
xchg
xor
mov
jnp
ffree
dec
adc
pop
rcrl
gs
stc
push
inc
inc
leave
inc
int3
mov
add
into
orl
xchg
outsl
mov
cmp
cmp
mov
sbb
sub
in
fistpl
xor
jl
jnp
jge
add
push
inc
push
xchg
je
mov
pop
inc
scas
xchg
data16
int
jl
sbb
lret
test
int
ret
xor
xchg
mov
jae
sbb
push
int3
pop
inc
sbbb
mov
cmc
mov
fildl
mov
add
push
je
out
and
inc
outsb
lcall
pop
dec
cwtl
jnp,pn
mov
sub
mov
xor
lret
into
sub
and
inc
inc
int
cs
mov
push
and
int
dec
sti
lea
fs
imul
mov
fdivr
lcall
sbb
cmpl
cli
aam
mov
adc
cld
pusha
leave
fistpll
dec
mov
addr16
out
sbb
aaa
push
xchg
jecxz
shll
jmp
pushf
pop
and
insl
shll
add
mov
xchg
rcll
aam
lock
and
push
stos
and
fimull
outsl
mov
dec
and
adc
je
mov
lock
add
mov
ret
sub
xbegin
loopne
cmc
sbbl
lock
add
push
xor
mov
cmc
das
loopne
xchg
in
dec
pop
xchg
mov
clc
imul
loope
sbb
jmp
mov
daa
inc
ror
lods
mov
mov
jecxz
inc
cltd
jecxz
or
sbb
sahf
clc
es
mov
xchg
shr
mov
and
xchg
out
inc
push
mov
push
ds
movsl
pushf
stc
xor
mov
out
or
aas
pusha
push
xchg
adc
das
cmpsl
lods
sub
sub
jecxz
sbb
repnz
mov
shr
inc
sub
int3
sbb
sbb
scas
adc
loop
cmp
int3
mov
in
test
mov
repnz
popa
inc
pop
lahf
into
or
ret
dec
lods
in
sbb
in
aas
inc
push
popf
sarb
push
into
jmp
sbb
jle
in
cld
jno
sub
inc
mov
xchg
fs
call
or
mov
inc
sbb
mov
dec
fiaddl
pop
je
imul
call
adc
ficoms
rcl
pop
lret
ret
jae
inc
pop
cmp
inc
xor
xor
mov
inc
es
mov
movsb
fwait
jo
imul
sbb
enter
in
out
push
sub
loope
xchg
pop
mov
mov
sbb
mov
mov
or
dec
dec
sub
sti
sub
fbld
fwait
pop
xor
in
rol
in
test
out
repz
jb
std
or
mov
fildll
inc
jae
call
and
xor
bound
jne
clc
icebp
test
popa
sub
testb
mov
imul
pop
dec
jno
add
jmp
scas
fisttpl
ja
sub
mov
sbb
mov
std
pop
fmuls
jmp
mov
push
inc
test
jo
stc
add
pop
pop
dec
add
stos
xchg
xorl
dec
mov
lret
pop
jb
sub
stos
fists
adc
pop
test
xchg
lret
int
out
int
push
dec
cmp
out
loopne
loopne
outsb
addps
sarb
es
popa
xchg
xchg
jg
push
inc
movsl
mov
cwtl
ss
hlt
test
mov
bnd
pop
pop
insl
iret
mov
scas
pushw
jbe
xchg
leave
jo
lret
pop
sbb
stc
bound
outsl
add
push
pop
into
loope
or
jg
sub
dec
mov
dec
xlat
mov
or
dec
int
adc
push
call
mov
mov
sub
in
lods
inc
addb
shrb
sub
mov
lea
mov
and
sub
adc
sub
enter
test
iret
mov
daa
sbb
push
push
enter
xchg
pop
mov
mov
in
sbb
cmp
and
mov
lods
mov
cmp
pop
sub
adc
mov
lock
sahf
mov
cmp
mov
sub
xlat
mov
adc
xor
insl
push
mov
mov
and
sarl
or
out
jmp
and
mov
push
out
dec
jns
sub
inc
ss
mov
jae
mov
mov
pop
mov
mov
or
sub
js
fwait
push
movsl
mov
xchg
ret
push
jae
out
mov
cmc
or
sarb
daa
lret
or
test
hlt
js
mov
dec
icebp
notl
dec
adc
cmp
mov
cmp
lds
ret
shl
push
cmpsl
popa
ds
pushf
fdivrs
verw
dec
test
int
imul
xchg
test
lret
cmp
and
pop
int
outsl
xor
jmp
test
mov
push
stos
addr16
lahf
fimull
fdivl
movsb
sbb
jne
in
dec
faddp
aaa
lea
xchg
out
mov
imul
push
shll
fs
xchg
cld
test
daa
sbb
cmc
in
and
jno
jo
mov
cmpsl
out
jo
lret
in
mov
mov
sti
pop
mov
ljmp
fcompl
sbb
xchg
dec
sub
sub
arpl
fs
popa
and
test
inc
mov
test
xchg
adc
pop
mov
and
cmpsb
loop
mov
clc
xor
imul
insl
mov
ret
outsb
mov
mov
fidivl
push
cmp
and
enter
call
pushf
mov
dec
add
and
outsb
fiadds
mov
iret
out
cmp
jecxz
jmp
pop
loopne
scas
dec
xchg
dec
aam
xlat
adcl
loopne
push
or
sahf
add
mov
mov
jl
push
and
xor
les
inc
movsb
push
or
cmp
dec
in
push
adc
push
or
jecxz
clc
es
xchg
pop
mov
aad
scas
and
ljmp
stos
adc
adc
cmp
or
xchg
pop
push
out
adc
lods
repz
inc
jp
inc
add
adc
xor
or
or
leave
fsincos
sbb
push
and
jno
add
imul
lret
xor
idivb
scas
into
jb
stos
jl
and
out
add
ret
jg
clc
sbb
cmp
nop
sbb
xor
xchg
add
and
xchg
in
adcb
push
mov
adc
aas
or
cmp
dec
out
mov
jno
fsts
mov
inc
mov
adc
mov
rcll
testb
daa
fists
mov
push
or
sub
movsl
loopne
enter
clc
outsl
ficoml
js
popa
mov
mov
mov
out
stos
and
jmp
jnp
jge
call
adc
add
cli
add
out
movsb
leave
adc
aam
je
push
in
testl
mov
jmp
lret
leave
nop
sbb
arpl
mov
cmp
mov
mov
or
test
xchg
ss
and
add
sbb
bound
mov
cltd
cmpl
imul
pop
sub
and
mov
outsb
orl
sbb
lahf
or
popa
adc
lds
xor
pop
jge
cmp
adc
bound
loop
mov
imul
push
out
mov
dec
pop
mov
jle
prefetch
xchg
mov
cmp
mov
pop
sar
out
jne
aam
mov
andb
pop
sbb
adc
sbb
jae
mov
push
mov
mov
mov
xchg
fbld
xchg
lods
cmp
pop
out
leave
add
pop
mov
xor
out
or
sbb
dec
les
push
mov
inc
ficompl
push
in
clc
mov
movsl
test
pop
push
adc
popa
cmpb
fisubrl
jge
jge
out
lea
sub
inc
jmp
xchg
add
sbb
add
adc
mov
aam
neg
cld
xchg
test
pop
push
daa
push
xchg
jo
sub
mov
jp
mov
hlt
pop
cmpsl
mov
movsb
sub
inc
or
mov
scas
push
lret
adcb
rclb
das
adcl
push
insb
inc
aam
jae
jle
push
mov
enter
dec
dec
mov
and
cmp
rcll
sub
sub
int
mov
fisttpl
inc
clc
test
dec
mov
inc
mov
test
mov
mov
add
jmp
mov
test
pop
aas
inc
jns
sbb
sahf
push
iret
aad
add
mov
into
mov
xchg
sub
pop
lds
lcall
rclb
or
sub
fiadds
rorl
call
nop
cmp
mov
adc
dec
push
aas
mov
test
pop
sub
or
and
orl
and
xlat
ljmp
and
stos
pop
mov
lock
ja
aam
xlat
fnsave
sti
js
jmp
mov
insl
sub
pop
or
fwait
lahf
addl
adc
fnstcw
in
sub
in
arpl
push
inc
sub
push
outsl
mov
push
cli
push
pop
je
hlt
rcll
pop
sbbb
int
inc
xchg
dec
stos
xor
sbb
add
pop
stc
jg
xor
out
and
sbb
movsl
retw
add
or
imul
mov
cmp
lock
mov
mov
add
adc
lock
inc
xor
sti
mov
out
bound
xor
dec
cld
cwtl
fimull
pusha
cld
es
out
aas
fwait
and
pop
xchg
jae
cmp
pop
inc
dec
test
mov
fnstsw
sahf
popa
pop
xchg
pop
add
or
inc
mov
or
call
imul
rcrl
add
mov
in
inc
popa
les
arpl
jne
ljmp
sbb
sti
mov
jmp
fists
jnp
popa
pop
inc
iret
push
pop
sahf
add
xchg
addr16
jae
sbb
divps
jg
insl
push
fldt
or
rorb
push
inc
adc
jno
mov
leave
cmpsl
cmp
cmp
sbb
jecxz
or
push
stos
jbe
rorb
loopne
divb
movsb
and
sbb
test
push
mov
out
jge
push
mov
mov
mov
push
pushf
imull
mov
dec
mov
push
jo
adc
lret
push
pop
xor
add
das
xor
dec
mov
mov
mov
xchg
jb
sbb
add
mov
das
daa
outsl
daa
subl
repz
sahf
je
inc
adc
adc
jbe
pop
pop
ret
sub
iret
push
push
push
push
mov
adc
push
push
lods
inc
stos
popf
mov
xchg
jp
ficompl
loopne
mov
loope
inc
push
and
jb
cmpsb
sbb
add
movsb
fdivrs
cmpl
sbbl
cmp
adc
leave
mov
jle
test
pop
xchg
pop
jl
inc
jbe
sbb
sahf
cltd
jg
dec
test
inc
loop
scas
dec
movsl
repz
es
scas
add
lods
pushf
mov
test
pushf
jae
inc
stos
add
out
add
mov
or
pop
dec
push
outsb
sti
mov
and
aas
mov
and
lods
fdivr
bsr
lock
popf
push
sub
jle
sbb
fs
ss
push
inc
mov
test
add
dec
jbe
push
sbb
or
aaa
stos
cwtl
pop
mov
adc
iret
inc
shll
pop
pusha
jae
pop
dec
adc
mov
jo
sub
fisubl
test
test
mov
aad
popa
iret
or
lea
nop
pop
dec
mov
cli
in
xchg
push
out
mov
mov
lock
dec
fwait
mov
loop
cmp
pusha
jbe
fildll
and
xor
pop
mov
cmpsl
ss
mov
fstl
push
sub
iret
bound
mov
mov
imul
lcall
test
and
imul
aas
and
fstpt
aad
loop
push
rcrb
xor
add
lods
dec
mov
lock
xor
aaa
addl
ret
adc
jge
sbb
dec
lods
inc
inc
push
push
das
out
adc
scas
cltd
cwtl
jge
es
push
rcr
mov
lods
sub
mov
imul
mov
cwtl
insb
dec
call
jne
arpl
sbb
int
lea
mov
cmp
mov
cmpsl
jb
cwtl
dec
cwtl
and
xor
scas
cld
sub
test
xlat
cmp
test
jmp
adc
int
imul
inc
lret
dec
stos
or
sbb
dec
push
mov
insb
lcall
addb
fmulp
loopne
cmpsl
in
lcall
imul
and
push
inc
in
mov
inc
mov
movzbl
dec
mov
pusha
popf
cli
int3
adc
rorl
jns
rorl
and
ljmp
mov
adc
stos
scas
insl
cmp
in
aaa
bound
and
out
loope
lea
repnz
outsb
jmp
jno
fdivrl
lret
jle
aas
push
add
ja
aaa
pop
repnz
xchg
jl
call
lret
and
lea
outsl
jecxz
insb
mov
xchg
hlt
arpl
jae
mov
mov
dec
xchg
xorl
jl
mov
xor
xchg
adcb
lahf
push
std
divb
jmp
add
enter
popf
mov
nop
mov
mov
pop
out
mov
fdivr
pushf
xchg
dec
std
into
lret
stos
inc
stc
icebp
and
in
push
inc
pop
addb
jmp
rcrl
jge
lea
cmp
sbb
cmpsb
adc
aas
test
movsb
mov
or
iret
push
sub
push
and
rcl
dec
sbb
sahf
scas
adc
mov
xor
xchg
pop
lahf
jg
ss
outsl
cli
jbe
add
adc
xchg
xor
mov
cmp
nop
push
mov
pop
pop
push
adc
cmp
or
into
add
pop
js
mov
mov
dec
jmp
or
int
iret
pop
cmp
adcl
out
adcl
fwait
dec
push
pop
push
lcall
or
lcall
stos
mov
pop
data16
test
addr16
lret
sub
stc
ljmp
add
ficoms
call
xchg
push
mov
jecxz
jbe
int3
pop
lret
decb
cmp
inc
push
inc
pop
mov
jge
inc
sbb
inc
test
adc
mov
shl
fneni(8087
push
push
sub
jbe
add
cmp
xor
sbb
addr16
xor
in
fwait
pop
pop
lods
fiadds
xchg
push
clc
insl
popa
mov
lods
xchg
xor
xlat
lods
or
in
sub
fdivrs
in
mov
cwtl
push
in
jp
cmp
add
fmulp
xchg
dec
gs
pop
inc
mov
adc
arpl
sti
sub
mov
push
mov
mov
push
jge
push
arpl
fcompl
push
dec
arpl
jbe
ret
add
sub
sbb
cmp
test
ja
jo
push
add
ficompl
pop
jne
pop
inc
and
sbb
mov
lds
mov
ret
and
sbb
or
and
jle
lds
andl
fsubl
cmp
inc
mov
dec
push
int
sub
cmpsb
xchg
mov
sbb
aaa
cltd
mov
add
out
pop
std
xorl
pushf
push
es
shll
andb
adc
jae
push
jno
ficomps
scas
loope
mov
add
aad
pop
push
xorb
mov
stc
mov
out
mov
mov
xchg
push
mov
mov
data16
hlt
cmp
stos
es
jno
pop
jno
sub
in
dec
cmp
ds
sub
in
sub
lock
push
fbstp
push
fs
popf
cmp
movntps
xchg
stos
xchg
dec
pop
andb
out
jb
jne
dec
mov
testl
out
aad
dec
push
push
out
repz
mov
mov
je
out
xchg
hlt
sbb
pop
movl
pop
xchg
or
sub
inc
test
sarl
dec
fsts
aad
push
mov
add
xchg
push
cmp
ja
mov
aaa
pop
and
stos
sbb
lock
sahf
adc
test
jnp
xor
das
adc
dec
lcall
ljmp
pop
jnp
push
test
lods
push
fwait
xchg
idivb
mov
push
aas
lods
adc
pop
push
imul
mov
test
call
dec
out
int3
dec
push
ror
mov
add
mov
jo
enter
mov
lock
xchg
outsb
test
cld
mov
mov
enter
mov
inc
rorb
mov
std
dec
cmp
mov
push
out
mov
pop
inc
dec
and
fisubrl
adc
out
outsl
je
pop
sub
incl
jl
jae
je
test
pop
movsb
js
jge
push
dec
arpl
shl
inc
cmp
lcall
shr
sub
stos
fstpt
mov
fs
adc
arpl
inc
and
jmp
mov
outsl
adc
and
inc
addb
dec
sahf
or
icebp
sbb
icebp
dec
inc
sbb
aas
es
neg
mov
cmpsb
jg
leave
shll
stos
cli
arpl
shrb
dec
lcall
iret
es
leave
mov
out
ss
pxor
pop
mov
and
dec
mov
or
loopne
jae
mov
dec
jle
mov
or
les
incb
mov
mov
cmp
fnsave
lret
ljmp
lret
ljmp
aad
adcb
rcll
push
incl
testl
jns
outsl
pop
ret
jns
test
sub
stc
leave
or
pop
ljmp
inc
out
subb
imul
stos
insl
add
aam
xlat
or
cwtl
inc
icebp
clc
out
mov
in
fs
pop
push
dec
dec
shr
xchg
cs
mov
out
sbb
ja
adc
mov
sbb
pop
dec
daa
mov
mov
mov
dec
cmp
jmp
andb
rcl
sub
sti
or
sbb
loope
lock
div
cli
les
mov
or
out
dec
loopne
add
mov
test
cld
push
test
frstor
jecxz
jl
loop
dec
test
adc
sub
mov
fcoml
pusha
jg
fwait
ds
ret
xor
or
xor
mov
sbb
movsb
sbbb
dec
sbb
push
mov
jge
lods
je
popl
mov
stos
xchg
pop
fldt
xor
pop
lock
insl
es
movb
aam
jbe
test
test
loop
cltd
outsl
sahf
js
es
sub
pop
enter
push
xchg
loope
xchg
aam
and
je
lods
cli
enter
xchg
mov
ds
fiaddl
lea
fisttpll
xorb
js
fcmovu
mov
sub
pop
mov
out
fsubl
sub
xor
fistpl
pop
daa
mov
fdivl
mov
lret
in
push
gs
sti
inc
adc
lret
pop
xor
mov
lret
sub
xor
or
and
mov
cltd
call
mov
sbbl
push
loopne
sub
cld
fisubrs
cmp
jmp
mov
mov
fst
inc
or
add
daa
jmp
imul
jbe
std
hlt
pop
mov
aas
pop
pop
repz
sbb
xchg
imul
and
push
sbb
mov
mov
mov
lea
rclb
shr
pop
sahf
push
or
outsb
push
push
xlat
jl
jl
push
or
mov
mov
inc
pop
xchg
in
dec
scas
sahf
jge
arpl
dec
add
jbe
rcrl
imul
int
jae
pusha
scas
inc
test
cs
xor
scas
inc
aaa
xchg
mov
cli
pop
pmulhuw
pusha
jo
inc
std
enter
insl
lret
xor
add
inc
pop
push
ret
push
mov
lahf
inc
dec
push
fistl
shlb
sbb
dec
jecxz
insb
popa
pop
sub
imul
in
mov
or
jno
sbb
pop
pop
xor
sub
lods
outsb
subl
rorb
inc
xchg
mov
jecxz
test
jne
aad
fsubrs
xor
xor
push
lea
out
pop
push
ljmp
sbb
sbb
xchg
mov
imul
xchg
jne
sub
lock
add
pop
jg
nop
test
adc
xor
pop
jne
xor
mov
add
popa
pop
aad
xchg
dec
jp
pusha
lcall
mov
and
stc
push
dec
lds
rcrb
lods
inc
mov
gs
push
jae
fisubl
mov
add
pop
pushf
aas
or
movsl
push
mov
lcall
inc
loop
int3
repz
call
lds
lahf
fsubs
push
and
mov
pop
xchg
ret
sahf
push
repnz
dec
mov
andb
mov
sbb
mov
sub
sub
xchg
push
lods
in
xor
fcmovb
sarl
xlat
pop
mov
das
or
cltd
dec
and
pop
inc
jne
iret
xchg
dec
sbb
sbb
bt
ret
dec
add
daa
sti
pop
je
add
xor
jne
jae
pop
adc
in
and
or
xor
ja
lahf
lock
mov
lcall
repnz
out
adc
inc
outsb
jae
repnz
cs
call
xor
jne
cmp
xor
fildll
dec
shlb
push
test
xchg
hlt
test
mov
inc
xor
test
xlat
rolb
sarb
stos
mov
ss
movsb
mov
push
jns
mov
loopne
pop
test
inc
adc
xchg
outsb
push
inc
mov
fwait
and
or
sub
repnz
ret
cld
inc
fimuls
popf
mov
fidivrs
and
mov
rclb
push
pop
popf
mov
adc
push
jo
mov
in
mov
bound
andl
lods
clc
sub
or
or
or
mov
dec
mov
cmp
xchg
fwait
cmpsl
fnstenv
bound
dec
das
cmp
mov
iret
cmp
xsave
inc
pop
shl
int
imul
xchg
xchg
mov
fldl
insl
lea
sub
pop
dec
mov
pop
aad
push
int
jne
xor
inc
xchg
andl
or
subb
jns
testb
mov
movsb
out
addr16
mov
aad
jecxz
ljmp
cmp
mov
in
popf
jns
mov
lret
mov
pop
pop
sti
sbb
popf
into
mov
cmp
aam
inc
mov
or
xor
fmull
je
mov
insl
popf
data16
pop
pusha
sbb
adc
jge
and
cli
push
fsts
inc
jne
scas
shll
jp
mov
xlat
xchg
addl
daa
outsl
mov
pop
pop
idiv
mov
mov
or
notb
dec
rcrb
or
mov
mov
das
pop
aam
scas
adc
repnz
add
sbbl
push
jb
lret
and
dec
pop
js
leave
or
lcall
daa
xchg
xchg
or
icebp
js
jl
ret
pop
pop
jmp
aaa
test
rclb
adc
fsts
sbb
cld
lahf
adc
cmp
cltd
bound
stos
call
xor
iret
nop
or
or
fdivp
iret
orb
xchg
jns
xchg
cmp
mov
popf
popl
insl
adc
adc
repz
test
and
mov
arpl
fisttps
mov
jle
xchg
mov
jle
out
or
lds
test
loope
jg
popa
jnp
pop
lods
cmp
cmp
adc
mov
jge
stos
xchg
push
mov
movsb
repz
mov
lods
cmp
xchg
adc
add
mov
ret
add
add
jns
outsb
mov
mov
cmpsb
cli
ja
je
push
xchg
mov
mov
mov
stos
bound
pop
inc
jno
or
in
push
pop
pop
fcomp
loope
push
in
and
jmp
push
inc
inc
shrl
mov
mov
jmp
adc
jne
add
pop
js
stc
add
push
xchg
mov
out
push
mov
fdivrl
imul
icebp
and
repnz
test
hlt
fildl
add
jnp
or
dec
shlb
xor
stos
stos
inc
aas
in
es
aad
stos
stos
les
aaa
jecxz
andb
push
dec
shr
ret
mov
fwait
std
ret
daa
loopne
jae
cmp
dec
and
sub
std
mov
mov
rcrb
mov
inc
pop
add
stos
pop
pop
mov
dec
sub
xor
pop
inc
push
xchg
in
adc
cli
jmp
and
push
loopne
jo
mov
sub
and
mov
lea
test
out
jg
pop
dec
lahf
pop
sbb
test
andl
inc
aad
ss
ficomps
mov
ds
loopne
add
jns
mov
push
xchg
pop
xor
pop
ror
xchg
arpl
int3
scas
add
push
pop
cmp
sub
inc
adc
outsl
cli
sub
adc
pop
cltd
outsb
mov
idivl
dec
ret
mov
push
psubb
cli
and
xor
in
xchg
in
xchg
pop
mov
pushf
push
inc
fwait
xor
and
test
mov
cld
sbb
out
test
movb
cwtl
cmpl
push
sarl
int3
jns
lret
adc
lods
cmpsb
push
push
dec
xorl
jge
push
cld
adc
push
jmp
daa
jmp
clc
cld
pushf
push
scas
dec
insb
add
popa
fstps
mov
pop
gs
sub
mov
adc
mov
mov
in
xchg
and
repz
sbb
xor
rcll
out
cwtl
lods
popa
sub
pushf
iret
hlt
add
pop
inc
mov
popf
in
mov
cmc
out
push
mov
je
nop
pop
ret
mov
push
in
xchg
in
insb
fstpl
dec
jp
sahf
pop
ret
jae
dec
repnz
les
push
dec
inc
jno
test
inc
pop
or
stc
dec
or
and
shrl
arpl
popf
cmp
mov
lcall
xchg
sub
mov
or
push
pop
out
mov
aas
sbb
fs
fmull
imul
int
push
jno
adcb
lea
aas
adc
in
jns
cld
cmp
sub
bound
mov
pop
pop
pushfw
pop
decl
jmp
sbb
push
or
rcll
div
test
bound
outsl
aas
add
and
out
test
movsb
xlat
pop
sarl
mov
push
xchg
sbb
mov
cwtl
add
das
mov
inc
dec
loopne
push
test
pusha
js
push
out
xor
inc
xor
and
or
push
jle
aam
push
in
in
stos
and
test
push
aad
adc
add
mov
adc
fs
repnz
xchg
cmp
js
movsl
push
mov
mov
push
out
xor
stc
mov
xchg
in
inc
mov
jecxz
test
nopl
ljmp
push
lea
sub
repnz
das
jns,pt
addr16
sbb
jg
ja
xor
cs
aad
dec
es
popa
xchg
xor
stos
mov
sub
or
clc
test
pop
out
insl
andl
sahf
mov
arpl
mov
and
out
pop
in
out
test
mov
dec
dec
popa
das
adc
test
lcall
inc
jno
xchg
jnp
sahf
xor
lret
out
in
cmp
bound
and
mov
xor
inc
call
out
adc
xchg
pop
orb
sub
mov
aad
insb
data16
clc
pop
stc
out
sub
cmp
push
ret
jne
sbb
iret
xchg
out
insb
jl
mov
mov
pop
inc
repz
fists
outsb
pusha
pop
sbbl
mov
test
ja
dec
shlb
ljmp
fs
mov
push
call
mov
mov
xchg
jl
xor
cmp
cmpsb
xchg
pop
cwtl
pushf
popa
je
fwait
pop
out
cmp
fwait
mov
stc
add
sub
mov
and
shrl
xchg
xchg
clc
push
push
sub
lods
jb
adc
jge
sbb
push
cmp
xchg
mov
clc
xchg
in
jae
or
imul
or
mov
inc
xor
pop
add
or
or
aas
ror
xor
and
loopne
fstl
mov
or
and
sahf
pop
jge
clc
xchg
testl
adc
lea
loope
pop
mov
stos
testl
test
dec
pop
aas
and
lahf
je
mov
jae
icebp
push
jne
sub
scas
cmpl
lcall
add
ret
mov
inc
movsl
fists
imul
sub
out
std
jo
sbb
dec
mov
hlt
mov
push
pop
mov
push
shlb
sarb
sbb
stc
test
les
inc
and
cli
fwait
mov
jmp
loopne
jo
lds
lods
mov
sbb
lahf
fnsave
in
ficoms
int
aad
fsts
fs
test
mov
mov
xlat
add
lcall
push
int3
pusha
inc
inc
add
fs
mov
pop
mov
stos
aad
mov
and
pop
fisubrs
or
rclb
enter
pop
add
shr
fldcw
mov
nop
out
sti
es
sub
cmpsl
int3
movsl
jecxz
dec
insl
mov
xchg
mov
mov
jp
add
pop
pop
out
imul
jp
out
push
cli
outsb
dec
sbb
jecxz
add
cmp
cwtl
call
xor
in
or
add
cmp
mov
fcmovnu
imul
or
roll
stc
enter
dec
fdivrs
add
inc
sub
and
pop
cmc
and
jo
nop
adc
jno
rcrl
adcb
push
fs
leave
sahf
inc
clc
rorb
xor
pop
stos
out
push
aad
cmp
jmp
mov
imul
stc
push
cmc
rcr
and
sbb
scas
fstpt
and
dec
pop
dec
cwtl
dec
xor
clc
pop
add
outsb
add
fildl
adc
loopne
inc
pop
adc
js
ds
jns
lret
sbb
icebp
dec
push
das
mov
and
stos
xor
inc
lds
xchg
ret
out
clc
xor
lods
or
int
add
in
lods
loope
xchg
das
mov
sub
lods
sahf
outsb
lea
in
pop
sbb
pop
mov
adc
fldcw
cmc
in
roll
adc
jnp
sub
jge
and
sahf
adc
sbb
dec
aas
nop
push
mov
out
push
xor
mov
adc
cmpsl
xchg
popf
push
push
push
ret
sub
lea
das
dec
sub
insl
cmp
mov
pop
ds
jg
aas
cmp
push
fistpl
jae
pop
adc
jmp
pop
mov
adc
push
stos
hlt
sbb
xor
add
into
jne
xchg
and
sbb
jecxz
subl
ljmp
xor
ss
out
push
mov
fisubrl
push
fwait
xlat
mov
jo
mov
les
aas
xor
shlb
push
call
fucom
cmpb
mov
aam
jno
mov
lahf
add
jl
dec
lret
out
ss
jne
mov
addr16
cmpsb
out
mov
push
in
inc
mov
jb
pop
or
push
mov
out
mov
mov
dec
out
mov
mov
cmc
stos
int3
xchg
xchg
repz
xchg
pop
mov
pop
fdivrs
dec
stos
push
ret
fsubrs
and
cli
sub
sbb
mov
xchg
scas
out
outsb
inc
xchg
jbe
out
sbb
std
xchg
xchg
movsl
and
aaa
rcrb
mov
mov
or
xor
pop
ljmp
dec
xchg
lcall
jo
or
pop
ret
xor
loop
mov
jl
je
popf
rcll
inc
add
ja
test
scas
push
test
push
and
xchg
dec
or
movsb
addb
ss
lds
dec
push
imul
js
jo
xchg
jo
int3
lret
das
sbb
into
inc
test
mov
es
insl
ljmp
sbb
int3
push
or
stc
aas
jb
jae,pn
rcrl
mov
jnp
fnstcw
in
and
lods
int
mov
mov
jb
insl
inc
pop
and
xchg
jp
pop
std
cli
push
lods
dec
xor
push
insl
cmc
gs
and
sub
cmp
pushf
jmp
jns
out
push
stos
aad
sahf
adc
jb
leave
daa
pop
mov
cli
ja
and
fwait
mov
lds
loope
dec
inc
xchg
cmpsl
stos
mov
and
jo
push
cmp
and
popf
imull
sbb
push
cmc
repz
mov
loope
fsubl
rcll
and
jno
shrb
out
mov
rol
push
gs
fs
ror
sbb
adcb
ret
test
dec
pop
inc
xorb
ds
push
add
mov
les
push
out
in
rol
idiv
cwtl
lea
sub
push
xchg
pop
js
ror
jb
out
sbb
lods
es
dec
incl
ljmp
jg
in
lock
ficompl
mov
das
pop
js
pop
iret
adc
and
mov
daa
insl
lock
jbe
xor
add
scas
push
mov
sbb
mov
cmp
ja
mov
adc
or
add
rolb
ljmp
cwtl
and
lock
movsb
dec
add
bound
imul
outsb
das
daa
pop
ljmp
dec
test
xor
adc
mov
xor
adc
inc
repnz
and
mov
cli
lcall
xor
je
sub
aad
gs
add
imul
jp
loope
push
outsb
pop
pop
push
test
movsl
lcall
das
test
sbb
sarb
out
lret
ds
sub
mov
pop
adc
popa
mov
cmpsl
adc
or
inc
push
add
cltd
inc
and
divb
loopne
out
jg
xchg
fcoml
movl
and
test
add
stc
fdivrl
dec
mulb
fwait
shlb
into
jecxz
test
shlb
jmp
les
test
lods
out
cmc
pop
cmpsb
ljmp
cmp
sub
cltd
cmp
jne
insb
je
inc
xchg
jbe
add
adc
jne
andl
jbe
out
test
jae
call
test
adcb
gs
add
sub
sub
leave
icebp
sub
dec
jp
or
leave
fdivr
in
js
push
lret
jg
and
adc
jo
inc
in
lock
mov
rorl
push
ficomps
out
test
mov
sti
cld
mov
data16
add
xchg
cmp
push
cmp
dec
jne
or
int3
movsbl
add
cltd
dec
sub
cld
int3
xlat
sarb
mov
ret
js
dec
mov
movsl
ficomps
stos
pop
push
sub
sub
nop
pop
mov
rcrl
fimuls
pop
push
and
shll
push
cs
inc
pusha
jecxz
je
dec
imul
mov
call
insb
jb
mov
scas
adcl
inc
stc
sti
dec
dec
stos
jno
dec
inc
sub
enter
mov
pusha
xchg
arpl
mov
xor
xchg
and
sbb
lret
mov
lods
rorb
sbb
sbb
cmpsb
lods
pop
jns
dec
xor
and
scas
les
jb
test
or
inc
push
push
rol
xchg
push
aad
mov
cmpsb
enter
test
adc
imul
sbb
stos
and
adc
mov
das
xor
negl
mov
pop
aam
lods
xlat
je
shll
pop
jbe
fs
cmc
test
lods
fdivrp
pop
push
and
add
jae
sub
aaa
shll
inc
jp
cmp
or
lods
xchg
adc
cmp
cmpsl
stc
imul
sbb
test
push
push
and
and
jp
repz
call
bound
inc
insb
paddsw
xlat
loope
pop
mov
sarb
pop
jmp
lea
mov
pop
xchg
cmc
cli
andb
lea
test
outsl
inc
jne
pop
or
int
jecxz
xor
stos
lds
cmc
jns
jl
xchg
or
bswap
rcll
dec
push
xor
push
xor
xchg
mov
xchg
or
xor
pop
mov
jle
dec
jo
mov
jmp
stc
out
mov
mov
hlt
jl
sbb
add
fistl
sti
jge
lahf
mov
hlt
sarb
popa
jns
in
bound
std
dec
adc
mov
mov
cltd
shll
sub
pop
leave
inc
bswap
shll
mov
cmp
pushl
je
fs
int
cltd
dec
xor
int3
loop
sbb
stc
mov
dec
scas
mov
push
mov
push
in
cmp
sahf
jle
adc
das
jecxz
xchg
sar
lcall
fbld
xchg
or
xchg
mov
arpl
pop
int3
out
sbb
insb
push
push
sbb
push
stos
push
pop
pop
repz
cmp
mov
inc
sbb
stos
cmp
lret
es
aam
push
sub
pushf
or
test
arpl
pusha
mov
inc
xor
xor
popa
mov
loopne
xchg
pop
in
add
aam
jno
ja
jecxz
xchg
inc
xchg
or
lret
clc
jae
jle
shll
subb
and
jge
leave
xor
int
jmp
jg
loop
or
xchg
or
pop
cmp
xor
bound
stc
xor
sbb
cmp
rclb
push
pop
xchg
inc
ss
out
test
xchg
aas
pmaxub
daa
jo
lea
lock
mov
repz
mov
aas
cltd
arpl
daa
adc
int
cli
dec
sub
into
push
pop
fst
sbb
mov
sub
int3
cmp
mov
mov
and
sahf
cmp
sbb
in
push
xor
cwtl
and
inc
dec
js
xchg
sbb
push
in
mov
mov
adc
and
fnstsw
mov
orb
add
mov
inc
rol
mov
por
stc
pop
addl
sbb
pushf
cld
mov
in
sbb
mov
and
pop
sub
jb
sub
ret
jo
out
fcom
mov
mov
loopnew
pop
imull
gs
enter
scas
push
test
mov
add
shlb
sahf
nop
mov
test
std
or
fisttps
icebp
or
and
stos
in
xchg
sahf
xor
mov
inc
roll
popa
and
jne
mov
fstpl
sub
and
ja
xchg
movsl
or
fistpll
add
cmpsl
sbb
cmpsb
pop
mov
xchg
dec
mov
adc
cli
mov
lds
sbb
jb
jnp
sbbl
sbb
loop
and
and
loop
xchg
cmp
mul
mov
lods
add
add
and
push
xchg
test
test
shl
out
aad
jp
pop
xor
add
or
add
mov
add
xchg
mov
inc
aam
push
adc
arpl
sbb
out
shl
jmp
movsl
pop
lahf
out
xchg
push
mov
lret
inc
sbbb
push
and
pop
push
or
ljmp
gs
mov
xor
outsl
push
inc
adc
scas
or
sbbb
fldt
push
pusha
loop
pop
or
mov
arpl
cwtl
loope
push
jb
aad
stos
dec
mov
cmp
shll
outsb
in
mov
adc
mov
shl
sbb
out
push
sbb
sbb
add
dec
je
in
enter
mov
mov
push
adc
pop
mov
je
xchg
xchg
sbb
into
enter
pop
mov
jns
sbb
pop
fsubs
cwtl
push
dec
loopne
lcall
xchg
in
dec
mov
jp
mov
and
sarb
jb
out
vprotb
stos
adc
lret
call
and
mov
and
rorl
mov
pushf
scas
add
aad
into
lods
jecxz
sbb
push
push
movl
lods
fsubrs
stos
enter
lock
int
sbb
jne
cmpsb
scas
jnp
cmpsb
call
mov
push
jmp
add
jecxz
jg
out
ja
adc
or
xlat
push
fnsave
jns
test
and
enter
push
stos
cmp
sub
jg
mov
subb
fiaddl
mov
add
or
pop
or
cmpsb
ss
sbb
add
mov
inc
fdivp
je
in
pop
int3
std
je
aad
leave
sbb
pop
dec
push
stc
dec
inc
hlt
ljmp
cmpsb
mov
enter
imulb
fsubr
adc
mov
cmovbe
test
cltd
mov
push
push
push
push
push
jg
xchg
loop
push
test
jne
mov
aad
xlat
std
push
test
imul
fidivs
pop
jnp
test
jns
fidivrs
jle
and
jl
xchg
sub
push
pop
inc
cmc
in
mov
add
outsb
pop
push
mov
add
lret
jle
mov
lea
imul
pushaw
pusha
das
andl
xchg
adc
popa
clc
scas
cmp
fildll
jns
cmpsl
pop
cmp
jecxz
pop
rclb
and
loop
sub
loop
negl
clc
aad
std
push
out
push
imul
out
cwtl
bound
test
imul
jno,pt
out
dec
mov
out
mov
jae
js
add
push
add
inc
adc
repnz
in
xchg
inc
pop
and
xchg
add
movsl
cmp
movswl
stos
mov
pop
xchg
jne
dec
mov
dec
decb
int3
lea
mov
xor
adc
cmp
dec
aaa
mov
inc
lea
adc
push
mov
dec
mov
rcrl
mov
jae
mov
pop
in
jp
add
addr16
loope
jge
mov
mov
lcall
sub
adc
test
in
mov
xchg
sub
bnd
shll
mov
cmp
pop
cmp
movsl
ljmp
fcoms
cmc
adc
test
or
mov
mov
mov
jno
xlat
adc
pop
rcr
dec
aad
mov
sub
sti
sub
cmp
and
push
pop
push
in
mov
push
lret
dec
jne
pop
mov
sar
pop
xor
push
xchg
in
cwtl
ss
jl
push
inc
test
daa
jo
cli
adc
xchg
push
das
inc
lods
or
scas
rorl
fiadds
mov
cmp
jno
pop
xchg
ret
jle
pop
fldenv
loopne
arpl
mov
or
xchg
ret
sbb
lds
xchg
aad
mov
mov
mov
mov
icebp
cmpsb
popa
lds
dec
xorb
ja
cwtl
adc
lods
jns
mov
push
insb
dec
imul
mov
shl
jmp
xchg
out
stos
inc
insl
loop
daa
cwtl
cmp
jnp
and
cmpsl
push
lods
arpl
ljmp
mov
jle
stos
fdivrl
push
and
cmc
add
jae
ja
shrb
mov
or
aam
add
es
cmp
push
cmp
outsb
lahf
mov
mov
fwait
imul
push
mov
lcall
js
outsl
out
dec
lret
enter
cmp
fnstenv
addr16
jnp
mov
addr16
or
push
les
pop
ret
mov
mov
mov
push
aam
and
mul
push
mov
mov
cmp
lahf
mov
add
cmp
leave
add
add
push
mov
sub
sarb
jmp
mov
push
pushf
cmpsl
push
mov
add
mov
shl
mov
iret
dec
dec
push
daa
int
inc
sbb
cwtl
xchg
xchg
sbb
mov
sub
mov
xor
sahf
inc
fnstenv
scas
push
bnd
xor
mov
stc
push
mov
dec
jecxz
mov
or
adc
adcl
mov
out
test
pop
sbb
das
mov
sbb
loop
xor
dec
mov
gs
mov
push
push
adc
mov
test
loopne
xchg
inc
adc
loope
fidivl
adc
lcall
setnp
inc
sbb
push
jl
stos
cld
popa
push
and
cmp
shrb
js
mov
fnsave
xlat
xor
push
inc
push
sub
sbb
add
pop
sbb
mov
push
xor
mov
fmuls
ret
test
push
cmp
dec
mov
sub
mov
in
jb
cmp
fdiv
or
ret
in
add
xor
mov
sbbb
xchg
ret
lods
cmpl
mov
test
shrl
mov
pop
cs
or
popf
cmpl
int
inc
mov
mov
movsl
push
mov
aas
push
lret
mov
ljmp
xchg
dec
scas
in
lret
add
inc
nop
out
nop
cmp
lret
xchg
add
push
sub
and
sbb
ljmp
adc
xor
jb
enter
pop
test
jg
lds
pusha
enter
jg
scas
sbb
and
mov
lods
sub
push
insl
and
inc
std
mov
daa
push
cmc
in
in
xor
cltd
mov
jb
push
add
repnz
shlb
cmpsl
cmp
inc
pop
adcb
sbb
xor
mov
mulb
mov
jns
rorl
lret
push
cmpsl
jl
pop
push
pop
mov
xor
js
push
push
lcall
adc
xor
ret
pop
push
push
dec
xchg
and
outsl
std
inc
xor
test
or
adc
pop
int3
inc
and
jne
cwtl
inc
stc
push
fisttpl
rol
popf
and
fdivrl
stos
std
aaa
jg
cmp
mov
pop
xor
pop
enter
add
aaa
cld
ror
inc
jp
lret
repnz
dec
sbb
push
or
in
test
jns
pop
xor
int
pop
inc
js
sbb
dec
or
add
out
or
loop
cmp
jb
pop
and
mov
leave
xchg
out
mov
adc
sti
icebp
inc
mov
jle
dec
xorl
sub
push
cmp
and
push
lahf
xchg
dec
or
mov
out
jg
cmpsb
pop
push
out
scas
cli
jbe
in
jnp
mov
insl
jmp
ljmp
push
jo
and
orl
int3
fmuls
test
pop
and
test
add
jp
xor
out
out
fstl
stos
cmp
outsl
adc
xchg
and
pop
stos
push
aaa
pop
pop
lds
jecxz
cmp
push
inc
dec
jmp
or
add
adc
in
inc
dec
adc
mov
or
pop
fisttps
movsl
dec
lds
dec
mov
cli
repnz
pushf
fcoml
lahf
nop
dec
adc
outsl
in
xor
push
jp
js
leave
xor
dec
enter
sti
and
cmpsl
mov
popa
scas
out
cld
mov
enter
jno
imul
sbb
dec
xchg
xchg
imul
xor
ret
sub
cmp
sbb
mov
jne
and
pop
mov
pushf
jb
cs
pop
jbe
mov
mov
push
jecxz
mov
jmp
lahf
mov
scas
mov
dec
mov
lret
test
cmp
dec
jge
mov
inc
adc
fstpt
ja
cmp
gs
subl
or
pushf
cmp
fsubrp
push
sbb
xor
pop
and
out
ret
push
mov
test
cmp
and
cmp
cmp
mov
jg
dec
fcompl
aam
cmpsb
sbb
repz
pop
sbbb
aad
sbb
fstpt
xchg
movsl
adc
push
testl
pop
add
xor
stos
jo
jmp
xor
das
inc
push
sub
cs
stc
xchg
sub
xchg
aaa
mov
mov
out
rcl
outsb
add
add
ja
aad
jecxz
fs
dec
cmp
and
adc
pop
ja
inc
dec
pop
push
xorb
bound
cmp
mov
xchg
aad
mov
xor
in
inc
and
mov
pop
jge
test
addr16
xchg
sub
and
movsl
aas
xor
mov
sarb
sub
adc
into
add
jo
lods
dec
fnstcw
push
aad
mov
inc
es
testl
jae
shrb
cmp
ret
push
mov
pop
push
leave
fidivrs
push
inc
addr16
inc
pop
lret
sub
mov
popf
pop
int
cmp
stos
pop
mov
out
ja
sub
inc
xchg
xchg
scas
mov
adc
pop
xchg
sub
bound
or
mov
sbb
mov
js
addr16
xor
sbb
adc
rol
xor
lock
call
cmp
mov
xchg
int3
cmp
imul
sub
into
push
mov
xchg
push
adc
das
cmp
adc
push
ffreep
cmpsb
xor
dec
push
sub
sub
nop
xchg
notl
and
lahf
cld
mov
xchg
inc
adcl
inc
mov
mov
and
push
ljmp
xchg
movsb
pushf
into
cli
fisubrl
popf
xchg
xor
pop
inc
add
imulb
sbb
jmp
add
mov
in
stos
fwait
dec
adc
jmp
daa
test
enter
mov
sahf
sahf
pushf
and
pop
xor
xor
push
int
cmp
jae
add
sub
mov
cwtl
and
or
decb
mov
mov
cwtl
or
cmp
enter
pop
inc
pop
loopne
jl
hlt
lods
scas
or
addr16
sub
and
ds
dec
lcall
outsl
sbb
rclb
and
jp
inc
inc
in
pushf
and
xorl
sbb
xchg
and
iret
mov
xchg
ret
jmp
add
inc
lahf
cmc
and
sub
xchg
adc
and
ret
jge
mov
test
mov
mov
xchg
adcl
dec
xchg
sbb
push
jno
adc
in
arpl
cli
mov
aaa
mov
jl
or
aaa
rorl
pop
mov
jge
roll
les
push
xor
int3
shr
mov
mov
add
cmpb
dec
jae
out
bound
cmpsl
jns
adc
jle
lods
inc
das
adc
shr
aas
xor
pop
pushl
shlb
lods
gs
insl
lds
mov
push
test
xchg
in
mov
cmc
mov
fidivrs
sub
pusha
std
out
aaa
lret
cmp
sahf
arpl
std
test
out
or
jl
sbb
fidivrl
xor
inc
xor
test
xchg
pop
sbb
adc
jne
imul
filds
xchg
pop
das
insl
test
jp
cmp
insb
xchg
testl
shl
test
movsl
push
rcl
adc
cltd
fucomi
dec
push
stos
mov
fcoms
sub
lahf
mov
dec
mov
add
mov
mov
cmp
stos
xchg
xor
jo
adc
fists
mov
fdivrp
fidivrs
cmpsl
lahf
dec
xchg
shrb
and
popa
sarl
jle
adc
dec
mov
xchg
or
dec
mov
jmp
mov
mov
inc
cs
ret
xchg
repnz
add
pop
loope
mov
cli
inc
cld
push
add
dec
popa
es
in
mov
sub
enter
ss
jo
or
imul
cli
cld
subl
jl
into
mov
bound
sti
mov
inc
xchg
rcll
adc
repnz
inc
or
faddl
push
out
cs
cmp
add
fcmove
add
cmp
sub
repz
stc
push
cmp
adc
lods
jecxz
into
mov
mov
scas
add
insb
imul
push
test
sub
jno
lea
pop
fcomps
enter
cmp
push
or
pop
jg
xor
jl
daa
pop
loop
std
pop
test
jne
mov
enter
cmp
inc
or
mov
xor
outsl
jnp
pop
imul
fnstenv
pop
divb
outsb
pop
jb
inc
mov
cltd
fisubrl
shr
jg
pop
test
sbb
insb
or
and
rorb
inc
les
shl
mov
call
aad
jns
insl
outsl
cmp
pop
inc
out
pop
out
xor
enter
mov
lea
cs
mov
pop
or
sbb
mov
test
sbb
cmc
mov
pop
dec
ret
aam
imul
jbe
pop
roll
imul
inc
fwait
inc
incl
dec
mov
out
mov
and
test
shll
test
rcrb
mov
movl
add
xchg
out
xor
cmpsb
stos
mov
out
mov
push
push
out
mov
out
cmp
jle
loope
sub
lods
cmp
dec
and
imul
mov
sub
fists
push
outsb
mov
enter
inc
mov
sub
test
sbb
mov
mov
shrb
add
jns
mov
lahf
dec
icebp
inc
test
cmp
sub
push
out
lods
int3
shlb
test
enter
cli
out
pop
and
in
push
sbbb
xor
pop
dec
pop
insl
fisubl
mov
mov
sub
leave
xchg
ret
dec
mov
and
mov
pop
cmc
or
jno
inc
icebp
jnp
fwait
fwait
dec
mov
xor
lret
pop
outsb
fcompl
sbb
lret
fwait
cwtl
mulb
fdivr
adc
lock
mov
xor
sbb
enter
lahf
inc
and
rclb
xlat
mov
push
test
dec
test
pop
xchg
mov
or
in
pop
fdiv
lods
pop
ja
xor
insb
jb
adc
es
push
sub
imul
int3
cltd
das
mov
icebp
int3
sbb
inc
pop
outsl
mov
lock
dec
xchg
imul
daa
push
adc
test
lock
adc
ja
sub
or
les
lcall
testl
sbb
in
faddl
lcall
xor
fnsave
cltd
mov
xor
ret
sbb
or
popa
lds
and
or
or
mov
xor
stos
sbb
cmp
dec
jmp
dec
mov
nop
test
lcall
into
push
adc
rcr
out
or
scas
sbb
cmp
jo
push
cwtl
stc
adc
sub
adc
dec
cmp
loop
lret
cs
push
and
mov
mov
shlb
mov
xchg
mov
aad
xor
dec
or
test
in
mov
and
sbb
add
repz
or
xchg
dec
fisttpll
xchg
or
sbb
pushf
mov
scas
mov
pop
enter
sub
or
pop
cmp
xor
loop
add
loope
in
or
cmpsl
sahf
jb
cmp
push
add
das
dec
repz
orb
xor
and
aaa
ljmp
out
addb
adc
aad
inc
dec
jne
inc
cwtl
mov
das
push
popa
int3
inc
cltd
dec
or
loope
xchg
cmpsl
push
fildll
fadd
negl
cmp
push
push
pop
xor
outsl
iret
int3
push
lretw
ret
inc
mov
or
pop
mov
cmp
xchg
int
iret
dec
faddl
and
jge
xchg
pop
mov
orl
mov
cmp
out
std
xor
ret
into
jle
in
jne
mov
push
pop
xor
test
or
ljmp
scas
ficompl
sub
clc
mov
sbb
cmp
lds
mov
add
ja
lcall
stos
mov
in
jno
jo
mov
orl
addl
mov
mov
push
adc
mov
sbb
arpl
push
fcom
out
xchg
test
add
dec
fisttps
dec
shl
popa
repz
fbld
cmpsl
ljmp
and
cs
mov
jecxz
inc
cltd
mov
bound
pusha
rol
loopne
cmp
cmp
or
xchg
rorl
lahf
dec
sub
sbb
hlt
fxch
pop
mov
or
pop
mov
pop
in
mov
xchg
insb
sbb
repnz
shl
xorb
out
sub
xchg
adc
pop
testl
int
shl
shll
insb
loopne
fwait
aam
push
mov
std
xchg
xor
movsl
xchg
insl
js
in
lea
xchg
cmp
sbb
fbstp
addr16
repnz
outsb
adc
adc
scas
or
xchg
xor
add
dec
iret
push
ret
push
int3
jg
rolb
aam
jo
push
and
mov
and
push
cmc
filds
mov
jge
rorl
pop
mov
xlat
dec
mov
nop
icebp
daa
stc
xchg
mov
lcall
mov
arpl
aas
pop
loopne
int3
adc
addr16
and
popa
cwtl
mov
test
and
xchg
push
cmpsl
cmp
dec
push
roll
ret
push
adc
sub
mov
add
pop
mov
inc
aam
mov
test
enter
xor
repnz
lods
mov
add
or
popw
movsb
mov
or
inc
pop
mov
fbld
push
adc
mov
stc
sti
shrb
fiadds
popa
sbb
imul
and
outsb
dec
jne
add
mov
xor
in
mov
xor
insb
fldenv
fs
mov
push
in
test
pop
push
xor
dec
lock
inc
xchg
add
cmc
fcoml
jg
sub
inc
cmp
push
cs
mov
push
dec
mov
adc
out
mov
and
mov
fnstenv
inc
jbe
adc
fstl
pop
movsb
cld
pop
jbe
mov
in
dec
je
sub
push
xor
jb
movsl
sub
sti
push
outsb
mov
push
pop
sahf
xchg
xlat
and
stos
push
sbb
loopne
mov
arpl
mov
push
mov
mov
sub
mov
inc
xchg
scas
insl
mov
fdivl
push
or
iret
or
cmc
mov
add
dec
add
lods
addr16
xchg
in
xor
mov
std
adc
and
xor
das
xchg
mov
ret
push
dec
and
stc
sbb
jnp
mov
xchg
push
rcr
js
pop
dec
xchg
ret
mov
mov
inc
subl
pop
mov
xor
lret
mov
xchg
inc
rorb
add
repz
movsl
cld
cltd
into
inc
adc
pop
aas
push
cmpsb
push
in
test
nop
cmpsl
mov
leave
pop
mov
fs
movsl
out
push
pop
inc
mov
int3
gs
push
or
xor
adc
in
xlat
daa
pop
jp
stos
add
sub
in
shlb
sahf
and
add
pushf
dec
push
mov
ljmp
mov
leave
fimuls
adc
mov
add
bound
and
adc
mov
jmp
jb
sti
sub
inc
or
dec
fisttps
std
xchg
lods
leave
mov
add
cmp
lret
insb
shr
add
aad
loopne
cmp
out
add
loop
cli
ss
rcl
cmp
push
rol
xchg
jecxz
loop
hlt
mov
xor
dec
nop
loopne
sbb
or
fsts
ficoml
jle
jecxz
jge
xor
and
ds
test
rorb
outsl
pop
iret
inc
push
xchg
testb
or
out
iret
loopne
fsts
popa
lock
sbb
out
or
lret
lock
iret
sbb
mov
imul
xor
scas
adc
leave
lea
mov
repnz
pop
mov
xor
into
pop
mov
jae
aam
and
leave
sub
mov
data16
lds
daa
jmp
add
jle
sbb
test
mov
popa
sub
adc
pusha
push
int
add
jns
loope
popa
test
or
rcrl
xchg
dec
mov
pusha
ja
jle
sbb
mov
push
mov
pop
js
pop
xor
jmp
sbb
pop
test
insb
mov
into
sub
fldl
mov
sbb
rcrb
dec
stc
movsb
adc
rcll
pop
popa
cwtl
adc
jmp
imull
lcall
ficoms
dec
repz
iret
fcomip
mov
rolb
cmp
repz
iret
push
scas
mov
jns
fisubl
push
xchg
push
ja
adc
ret
xor
add
rclb
ja
and
stos
pop
push
or
jnp
popf
test
js
push
shrl
and
cmp
loopne
xchg
inc
jo
push
cld
sti
ja
jl
ljmp
outsl
into
add
jne
mov
sbb
or
xchg
in
imul
ljmp
dec
lock
sahf
mov
movsl
mov
jae
lret
mov
lea
es
sub
mov
cmp
dec
jae
jns
aas
mov
pop
insb
ficompl
xor
out
fwait
add
stos
adc
mov
and
and
or
sub
cmp
fistpll
stos
push
jb
or
fistpl
je
cmpsl
dec
lcall
repnz
xor
cltd
push
xchg
out
dec
add
pusha
push
int3
dec
mov
pushf
add
mov
xchg
repnz
imul
sbb
mov
push
xchg
cld
push
sub
adc
jl
jmp
repnz
movsl
fmull
movsb
ficomps
add
daa
in
out
or
cmp
fbstp
ficomps
scas
push
fdivrs
fwait
sub
clc
out
inc
push
mov
xchg
mov
add
repz
stos
or
sub
test
das
mov
addr16
xor
jmp
xor
xor
fidivrl
jl
sbb
push
in
pop
mov
add
xlat
sub
lods
sbb
lds
pop
negl
sub
rorb
pop
pop
inc
ret
mov
pop
jecxz
cwtl
jg
neg
cld
fldl
das
in
fistps
adc
cmp
mov
inc
daa
test
fbstp
mov
dec
movsb
cmp
xorb
adcb
xchg
out
outsb
std
jne
loopne
pop
call
xchg
pop
and
mov
in
mov
mov
adc
andb
test
inc
nop
pop
nop
or
rclb
jae
sbb
cmp
push
cli
sbb
pop
cltd
jb
pop
test
xchg
sbb
lods
adc
jno
loopne
cltd
ss
mov
stos
inc
push
push
mov
adc
inc
xchg
xchg
mov
sub
and
cld
popa
das
aad
lcall
test
inc
inc
inc
outsl
inc
negl
mov
inc
mov
jo
pop
and
cmp
pushf
mov
es
int3
int
cmpsl
idivl
sub
xor
jo
inc
mov
in
cmp
lret
sarb
stc
mov
add
idiv
or
lock
stos
add
xor
cmp
sub
cmc
dec
adc
aaa
inc
shl
mov
mov
jge
mov
fcomps
maxps
push
cld
mulb
and
xchg
pop
adc
mov
in
fcoms
xor
test
add
add
call
repnz
or
dec
cmp
scas
imul
ss
sub
stc
dec
stos
mov
add
int
cwtl
pushf
and
pop
jge
addb
xchg
int
push
lcall
pushf
pop
sar
mov
repnz
mov
mov
shl
fisubrl
fnsave
mov
fldenv
ds
rcll
xchg
repz
fistps
dec
add
jp
pusha
add
mov
pop
repz
or
mov
pushf
mov
lods
inc
fdivrs
nop
faddl
mov
adc
notb
jge
out
cmp
js
add
cmp
in
shrb
scas
cmc
inc
call
xchg
aam
push
fs
andb
int3
test
fnstsw
in
gs
sbb
adc
xchg
sbb
push
out
mov
mov
test
cwtl
jl
push
or
mov
cmp
js
test
mov
mov
pusha
lahf
adc
pusha
repnz
mov
fistl
dec
arpl
aad
ret
or
pop
in
shlb
shr
cmpsl
cmp
mov
out
das
jmp
adc
decl
jmp
sbb
lock
es
int3
aaa
xlat
out
push
pop
rorb
sub
mov
inc
sub
arpl
fdivrl
out
into
pop
cmp
mov
add
enter
xor
jb
sub
mov
sbb
cwtl
mov
mov
insl
mov
aam
push
pop
pop
divl
pop
xchg
leave
sub
pop
sub
ljmp
push
call
dec
cltd
hlt
roll
and
lds
stc
fsub
ficompl
shlb
xchg
jo
sbb
ret
rol
pop
insl
mov
push
out
les
imul
adc
inc
pop
ret
inc
in
xchg
xor
push
inc
dec
pop
daa
cs
int
push
sarl
xchg
xchg
xor
xchg
pop
mov
mov
add
adc
cmp
or
or
adc
int
pop
lods
test
ss
icebp
mov
jge
lret
dec
add
pop
lods
shll
test
mov
and
repz
insl
leave
xchg
cmpsl
xor
sub
pop
mov
negb
std
stos
sbb
push
cmpsl
aaa
icebp
add
daa
mov
fisubrs
stos
dec
int3
inc
mov
adc
pop
lea
inc
in
data16
jnp
add
notl
xchg
or
xor
jmp
xlat
mov
leave
fsts
rcll
clc
inc
decl
test
movsl
mov
mov
nop
and
push
mov
mov
pushf
mov
dec
in
je
cmc
loope
xchg
dec
mov
mov
xchg
jp
leave
push
cmp
inc
xchg
test
popa
jo
shrl
outsl
and
push
fsubs
enter
adc
aad
std
mul
rcrl
and
sbb
cmp
in
xor
rcr
push
out
dec
fisttps
sti
mov
xor
cwtl
xlat
out
xchg
dec
fstps
imul
popf
jmp
mov
mov
cltd
adc
cmp
daa
out
ds
sbb
stc
loopnew,pt
aas
push
sar
xor
dec
in
xchg
sbb
xor
xor
es
jmp
and
lock
incl
pushf
fistpll
push
out
arpl
xor
push
out
xchg
pushf
mov
dec
lea
fstpl
sub
aam
add
insl
cmp
mov
inc
push
scas
xchg
mov
xchg
jne
in
and
jno
fmull
sti
mov
dec
pop
cmpsl
mov
xor
sub
and
add
lds
inc
call
loope
fs
mov
test
xchg
imul
cmp
in
in
ret
addr16
jns
push
cmp
sbb
roll
jno
ja
daa
int3
roll
stc
nop
leave
in
mov
or
jns
inc
pop
leave
cmpsl
icebp
or
iret
arpl
adc
adc
loopne
es
inc
or
rclb
out
push
jp
or
testb
mov
pop
cmp
iret
mov
imul
sub
cmp
sbb
mov
ds
and
loope
cwtl
and
outsb
jecxz
dec
mov
xlat
push
mul
dec
mov
imul
xchg
mov
aad
jmp
std
out
out
mov
lret
mov
mov
aam
adc
or
stc
xchg
xchg
fisttpl
lds
int3
push
pop
xchg
fistl
xor
mov
and
sub
jb
fdiv
das
cs
push
stos
popf
mov
cmpsl
mov
pop
sbb
xlat
insb
in
pop
popa
test
or
roll
fdivl
int3
scas
add
icebp
inc
pop
sbb
xor
gs
lcall
sbbl
je
mov
pop
jb
loope
mov
mov
add
cs
xor
jg
sub
gs
sub
and
loopne
dec
dec
leave
jno
mov
mov
mov
xor
sub
popa
scas
je
cmp
fists
hlt
movsl
cmpsb
mov
in
into
jo
xchg
xor
sahf
xor
in
in
adcl
mov
gs
scas
int
xchg
out
and
add
test
pop
inc
ljmp
movsl
in
out
pop
mov
outsb
cmp
imul
sbb
sbb
pop
mov
mov
jg
sbb
mov
out
pop
ret
pop
jge
add
mov
test
shll
xor
jp
imul
and
popa
std
fistpll
ret
cmpsb
inc
adc
lds
xchg
dec
imul
out
js
xor
and
lea
fsts
sub
sti
cmp
inc
push
add
arpl
jmp
pop
cli
mov
jne
mov
push
mov
xor
loope
mov
push
inc
jno
in
push
mov
jno
cmpsl
fimull
mov
call
xchg
lods
call
mov
hlt
out
adc
jmp
lahf
outsb
repnz
and
jle
push
mov
jno
stos
dec
popa
inc
pop
and
jg
shrb
test
mov
mov
js
movsb
lods
shl
daa
adc
lcall
aaa
push
js
aas
add
jmp
mov
sub
cmp
ds
inc
jmp
repnz
popf
mov
inc
mov
lock
negb
sbb
scas
or
inc
adc
sub
push
arpl
or
or
test
jne
inc
push
rcl
mov
in
inc
das
jne
notb
sub
mov
xchg
and
jp
pusha
cmpsb
stos
lcall
mov
int
jmp
lret
out
mov
int
lret
sub
js
fisttps
inc
mov
pop
stos
add
add
out
jns
inc
aam
into
cmpsb
xchg
and
xor
outsb
add
in
vpmulhuw
cmp
jg
aam
fimull
jle
test
mov
out
andl
leave
cmpl
sysenter
push
xor
shrb
and
dec
jmp
adcl
cmp
leave
enter
or
das
add
std
js
test
jmp
lret
fwait
push
int
xor
cmpsl
or
mov
ss
jno
adc
pop
movsb
fbld
sbb
pop
inc
push
pop
test
xchg
popl
pop
xchg
sahf
sbb
std
pop
mov
cld
rclb
mov
and
inc
mov
lock
jp
pop
mov
outsb
mov
idivb
loopne
aas
cmp
sub
sbb
lret
dec
scas
mov
and
andb
lret
scas
adc
sbb
mov
push
call
pop
sbb
in
cmpsl
in
aas
lret
arpl
ror
outsb
ljmp
addr16
inc
js
jne
xchg
test
popl
mov
mov
imul
pop
inc
sub
lods
aam
addr16
dec
imul
pop
je
push
xchg
jg
lea
add
lock
inc
xor
pop
data16
lret
bound
loope
xchg
sbb
inc
jns
loop
push
ret
ret
jp
sbb
scas
mov
loope
xchg
imul
cld
xor
fildl
sub
inc
test
push
andl
sub
fistl
insb
add
mov
inc
xor
dec
pop
ds
cwtl
int3
xchg
jle
ficompl
push
aas
dec
and
es
imul
mov
pop
imul
xor
or
lea
sub
mov
mov
ss
cltd
inc
stos
ret
dec
and
cmpsb
xchg
loopne
dec
fmuls
sbb
movsl
cli
mov
push
orl
adc
cmovno
inc
cmp
pop
outsb
xor
jge
jns
jne
in
mov
loope
lcall
mov
dec
fldl
loopne
outsb
es
cmpsl
inc
imul
mov
cmp
or
mov
inc
repz
fs
pop
lods
aam
clc
mov
mov
mov
call
jg
push
or
decb
pop
sbb
cmp
xchg
jmp
add
push
xor
test
adcl
cmp
cmp
rclb
jnp
and
mov
fsubrs
cmp
sub
inc
rclb
sub
mov
sub
adc
pop
and
test
insl
outsb
and
enter
leave
inc
test
outsl
test
push
sarb
lcall
fldl
xor
xchg
hlt
push
and
or
ret
fwait
inc
pop
enter
bound
test
pop
call
mov
jne
jno
jle
scas
daa
icebp
sub
repz
je
xor
adc
jecxz
insb
fnstenv
jge
jnp
mull
sbb
fwait
movsb
sti
mov
bound
inc
xchg
inc
jo
mov
lods
in
inc
fstps
sub
pop
les
lea
lret
icebp
sbbb
add
and
setp
xor
cmc
xor
fmuls
mov
aaa
add
push
sub
or
fistpl
and
addr16
fldl
bnd
pop
shrl
adc
cmp
xchg
add
cli
clc
jns
pop
out
add
push
mov
leave
xchg
loope
dec
ljmp
inc
dec
movsl
ja
neg
scas
mov
outsb
xchg
adc
and
push
xor
loop
pop
imul
mov
clc
imul
pushf
in
xlat
jmp
xor
push
dec
xchg
pop
or
mov
sub
cmpsb
out
pop
pop
jge
mov
aad
push
and
stc
pop
pop
mulb
or
xor
xchg
les
mov
inc
or
inc
or
xorb
jb
addl
ss
es
jmp
adc
aas
cmp
ret
push
fwait
sub
push
and
mov
in
int
cmp
adc
pop
scas
mov
and
int
xorb
pop
add
ficomps
arpl
sub
dec
cwtl
inc
push
enter
jo
mul
mov
push
and
clc
clc
push
lea
mov
into
inc
mov
pop
inc
jne
das
test
push
cmp
jb
negb
stos
iret
out
icebp
scas
sbb
mov
fbstp
stos
jge
inc
lods
push
xor
out
hlt
int
leave
xchg
push
sub
jmp
in
xchg
and
popl
adc
ja
popf
int
push
rcrl
cmpl
sbb
jge
mov
pushf
sbb
test
cmpb
jnp
icebp
scas
jle
pop
repz
mov
add
cmc
sbb
sub
out
scas
std
mov
mov
xchg
xchg
addl
out
inc
stos
fisttps
out
push
out
xchg
mov
cmp
dec
or
pusha
les
test
ror
mov
inc
pop
lods
loop
sti
mov
je
bound
imul
fmull
mov
mov
xchg
mov
sub
rcrb
pop
push
lock
xor
lods
mov
dec
hlt
push
xchg
xor
sahf
pop
fnstenv
imul
test
mov
inc
inc
mov
int
scas
dec
sbb
mov
loope
jo
into
mov
add
mov
push
mov
inc
mov
inc
das
dec
push
adc
aad
loopne
push
sub
arpl
test
push
xor
mov
andb
popa
mov
idiv
ret
fistps
mov
fxtract
or
push
mov
inc
into
jp
jl
xchg
shll
push
jns
out
int
call
or
xor
adc
jecxz
xchg
push
test
jo
ja
int
inc
push
rol
xor
inc
call
dec
mov
loopne
mov
int3
mov
push
movsb
pop
inc
inc
push
push
not
xchg
xor
cmp
jb
and
mov
cltd
mov
inc
mov
arpl
jge
xor
jl
call
mov
fistl
fstpt
xor
inc
rcr
cmp
cs
and
push
mov
jb
inc
sub
pop
repnz
mov
addr16
mov
jge
xchg
inc
jbe
adc
jb
add
shl
movsl
sbb
xor
mov
dec
lock
nop
jne
add
shl
inc
jmp
sbb
push
mov
jo
xchg
or
fcomp
stos
mov
mov
shl
loop
outsl
jns
xor
or
std
ss
jo
ror
and
push
aas
xor
addl
xchg
pushf
bound
rcrb
test
xchg
pop
pop
das
pop
adc
das
inc
stc
das
sub
mov
jge
jae
adc
test
mov
cmp
movsb
mov
jecxz
roll
inc
fcmove
xor
aaa
or
xchg
cltd
jg
inc
incb
adc
lret
push
cwtl
dec
inc
mov
jnp
mov
es
mov
icebp
lds
icebp
mov
inc
push
imull
sub
jecxz
aad
sub
int
xor
sahf
movsb
mov
cmp
inc
lcall
push
fisubrl
mov
fstps
jecxz
and
inc
out
int
shlb
int3
mov
pop
push
pushf
mov
push
mov
aaa
pop
dec
pushf
rolb
iret
fidivs
add
dec
adc
test
pop
mov
popf
scas
insl
ret
scas
cmc
cmp
int
xchg
pop
mov
fistl
pop
add
mov
scas
mov
bound
dec
mov
push
ja
push
cld
stos
mov
dec
shl
gs
xchg
stc
fdivl
test
dec
dec
add
jmp
in
jge
cs
sbb
imul
xor
mov
sub
cmp
lcall
icebp
je
jecxz
test
mov
notb
push
jne
jp,pt
xor
out
pop
xor
test
mov
push
dec
fadds
cli
cmp
shlb
mov
xlat
repnz
rcrb
mov
or
push
cmp
pop
mov
push
push
cli
push
into
mov
dec
adc
jecxz
mov
sbb
xor
dec
dec
icebp
mov
insl
xchg
cmpsb
dec
mov
mov
movsl
pop
xor
push
jne
add
xchg
loop
loopne
lahf
jl
aam
stos
jb
pushf
add
sarb
dec
mov
mov
lods
jae
jg
in
out
pusha
leave
pop
adc
adc
enter
mov
pop
push
and
sub
shl
and
int
sub
jae
je
ljmp
int
jb
lock
arpl
xchg
mov
loopne
lret
push
push
push
xor
jl
shlb
sub
inc
in
mov
jmp
mov
push
xchg
int
push
daa
rolb
fldcw
mov
pop
jp
sub
pop
push
jns
lahf
jno
pop
push
mov
ds
popa
cmp
fidivl
mov
cmp
push
pusha
mov
xchg
mov
push
iret
lcall
add
and
xchg
and
sti
in
sbb
mov
mov
loop
and
imul
cmp
cmpsb
aad
fsts
sahf
mov
jbe
int
push
lret
inc
pop
out
xchg
stos
mov
jecxz
mov
cmpsl
push
cltd
xchg
cs
mov
popa
bound
in
xchg
test
dec
mov
mov
fisubs
xchg
les
insl
les
cld
push
sbb
mov
or
leave
mov
out
movsb
mov
cltd
pop
cmp
rorl
xchg
je
nop
test
mov
cltd
push
push
pop
adc
sub
pop
mov
sar
mov
loopne
imul
mov
fiaddl
cwtl
pop
mov
dec
test
cld
pop
subb
mov
mov
pop
loopne
xchg
xchg
stos
call
es
pop
inc
jno
mov
mov
es
int3
mov
push
adc
aam
enter
cmp
lods
mov
test
sbbl
rorb
ss
repz
cmp
fiadds
sbb
cmp
push
fdivp
sbb
adcl
les
xlat
mov
mov
pop
push
lcall
cmp
shll
mov
and
jle
jnp
dec
pop
xlat
mov
mov
stos
push
adc
inc
in
shlb
arpl
cmp
add
pop
jo
aam
xchg
inc
dec
lcall
scas
dec
int3
push
adc
daa
cld
lea
mov
cmc
lret
bnd
mov
or
or
movsl
and
int3
fldl
lret
add
xor
shl
scas
mov
jl
in
pop
ss
loope
cltd
fldenv
pop
insb
inc
mov
nop
cmpsb
mov
mov
test
insl
jnp
insb
cmp
daa
inc
push
ja
sbb
jbe
sub
sub
sti
test
inc
mov
sub
mov
loop
lahf
cmc
out
pop
or
je
loopne
nop
stos
enter
mov
mov
mov
add
mov
pop
cmp
inc
mov
scas
iret
out
in
dec
fldl
inc
ret
fabs
mov
aad
xor
push
daa
push
sbb
push
pop
mov
test
out
xchg
jae
and
pushf
data16
sub
js
stos
dec
or
xor
mov
andl
mov
fwait
mov
mov
lret
fdivrl
cltd
mov
cmpsb
cld
inc
incl
jbe
xchg
in
jge
adc
repnz
mov
mov
jg
fwait
jmp
and
rorl
divl
dec
or
xor
jb
repnz
bound
fdivrs
int
pop
xor
in
lods
hlt
dec
lods
or
fsub
sti
mov
push
hlt
xchg
iret
jmp
lock
test
insb
repz
or
in
cmc
sub
mov
dec
xchg
cli
call
dec
sbb
mov
or
lret
lcall
pushf
jno
adc
inc
pop
ljmp
jbe
or
sub
xchg
out
mov
fdivs
mov
cmp
in
adc
sahf
sbb
jle
xchg
xlat
jnp
ja
adc
sbb
mov
xorl
sbb
aad
nop
out
lods
lcall
lret
or
movsb
mov
jle
xor
out
xor
cmp
lock
dec
sbb
sbb
in
faddl
int3
or
sbb
fisubrl
gs
pop
xchg
jmp
sbb
pop
add
into
arpl
pop
sub
mov
sub
inc
cmp
mov
out
push
cld
adc
sbb
popa
push
movsl
pop
adc
xlat
lods
sub
ja
movsb
lret
xor
cmp
sub
xor
sub
and
fildll
test
and
sub
das
fadd
add
and
arpl
jmp
pop
adc
sbb
sbb
inc
scas
push
adc
pop
shrl
pop
mov
lret
je
fisubrl
push
iret
and
xlat
xchg
jne
imulb
gs
add
daa
int3
and
sub
subl
and
xchg
fisttpl
iret
dec
cltd
adcl
out
add
pop
rclb
push
and
mov
insb
popa
sub
mov
test
loope
sarb
jp
lds
adc
adc
in
mov
xchg
dec
jmp
xchg
and
sub
mov
xor
cli
les
jp
out
push
xor
out
dec
or
inc
xchg
mov
pop
out
sub
fidivl
in
mov
pushf
shr
loopne
ficomps
adcb
call
fcompl
dec
fisubrs
mov
aad
or
daa
xor
dec
sti
or
push
ljmp
sub
mov
test
push
cmp
ret
icebp
add
lahf
xor
xchg
fmul
mov
and
sbb
adc
lahf
jg,pt
add
out
xchg
sahf
outsb
inc
and
push
jns
int3
loopne
and
lds
ss
test
push
xchg
xor
mov
or
lret
outsb
push
mov
mov
dec
push
insl
adc
movd
jl
mov
jge
and
lret
add
aas
das
rorl
dec
pop
scas
xacquire
cmp
lret
test
jmp
dec
adc
push
xchg
mov
out
int
es
pop
push
add
sub
iret
repnz
jno
dec
sub
jae
int
and
cmp
arpl
jae
pushf
aas
test
mov
and
jo
mov
insl
jl
or
mov
ret
jmp
xor
movsl
cli
fcompl
jb
add
push
repnz
fldenv
nop
jmp
mov
cmp
push
xlat
pop
fistl
stos
and
pop
push
or
pushf
push
sbb
in
bound
addr16
adc
mov
mov
nop
jmp
outsb
dec
pop
lret
mov
cmp
shll
lcall
sti
dec
leave
and
adc
cwtl
xor
mov
and
movsl
pop
ljmp
ret
sbb
rclb
out
mov
loope
add
iret
cmc
push
dec
icebp
test
push
rcl
or
xor
mov
sbb
add
notl
jl
int3
push
xorl
mov
mov
mov
mov
sub
jae
or
jno
pushf
lds
ret
add
pop
fsubrp
ss
mov
mov
pop
and
push
enter
int
xor
and
push
cmpsb
adc
out
inc
imul
addl
sub
cltd
repnz
or
xor
and
xor
je
shrl
add
inc
fidivs
movsl
loopne
sub
repz
popl
stos
loopne
js
dec
pop
cmp
out
inc
hlt
inc
push
mov
xchg
imul
es
jb
shl
push
pop
aad
imul
and
push
sbb
pop
mov
cld
aam
fistpll
xor
movsb
jno
cmp
test
adc
movsl
cltd
and
pop
cmp
jmp
into
push
mov
into
dec
sub
ljmp
sub
xchg
mov
leave
fistps
pop
mov
test
into
jnp
inc
mov
add
arpl
adc
adc
mov
push
sbb
jle
cmp
adc
rorb
pop
divl
and
jg
imul
xor
dec
mov
cmp
cmp
ret
pop
gs
mov
cld
sar
cmpsl
lods
adc
cli
xchg
and
mov
mov
test
ja
xchg
ret
clc
pusha
inc
mov
repnz
notl
pop
sbb
adc
arpl
stos
cmp
dec
sar
aam
adc
fwait
dec
pop
mov
test
cmpb
mov
lds
testl
push
jl
dec
mov
fldenv
or
popf
jno
dec
xor
rcrl
loope
lret
mov
in
xor
jmp
fs
insb
idivb
inc
push
test
adc
cmpsb
scas
xor
xchg
fidivs
xor
ret
int3
in
into
inc
adc
call
cmpsb
and
add
cmp
jo
subl
insl
rolb
repnz
lds
jp
and
repz
data16
push
pop
mov
push
mov
sub
mov
mov
cwtl
pop
inc
inc
add
fdivrs
adc
adc
mov
aaa
jb
cmpsl
addb
push
xchg
into
rcr
mov
mov
das
xchg
mov
imul
loop
xor
sbb
out
mov
or
xchg
xlat
push
mov
mov
fnop
adc
les
stos
cld
mov
hlt
ret
and
push
std
push
mov
pushl
cwtl
cmpb
sbb
xchg
inc
js
arpl
iret
mov
mov
xor
jmp
imul
pop
cmp
push
pop
iret
jb
lods
ja
cli
jge
mov
shl
push
mov
lret
stos
and
jbe
pop
aad
sub
outsl
ds
mov
ret
addb
out
out
gs
xchg
mov
adc
outsl
ja
sbb
insl
stos
nop
or
pop
jle
mov
dec
dec
clc
das
popa
leave
pop
or
pop
repnz
cmp
icebp
sbbb
jle
std
jb
popa
movsb
dec
cltd
mov
in
int
push
xchg
hlt
cmp
filds
mov
test
xor
jg
jb
xor
call
loopne
les
cmpsl
aaa
inc
mov
push
push
jecxz
adc
push
inc
cmp
mov
push
push
push
pop
xchg
icebp
inc
pop
xchg
test
pop
jmp
mov
cmp
xchg
cmp
push
mov
cmp
std
fwait
test
add
in
orl
and
xor
lods
mov
mov
aas
nop
cmc
push
and
jbe
fiaddl
sub
adc
cmp
pop
repnz
popa
dec
sahf
andb
sbb
ds
stos
push
in
lret
sub
popf
ljmp
nop
adc
pop
lret
mov
daa
sahf
or
aaa
jecxz
fwait
lcall
aam
daa
push
insl
ljmp
mov
dec
or
inc
jb
xchg
andb
and
sahf
or
and
and
add
pop
ljmp
lahf
jns
inc
fmuls
pop
stos
movsl
fistpll
or
push
je
cmp
cltd
add
int
mov
cmp
push
shll
pop
fcomps
xlat
push
scas
jns
test
jno
out
mov
test
and
sbb
or
mov
fisubl
adc
inc
add
xchg
dec
and
sub
push
push
addr16
and
imul
in
cltd
mov
sahf
lcall
notb
int
pop
pop
dec
xor
scas
outsl
stos
xchg
lret
push
lods
mov
lret
shlb
xor
xor
push
out
sti
div
mov
mov
xorl
add
inc
addr16
cmc
int
test
jge
fiadds
xchg
jle
cmpsb
faddp
adc
inc
mov
inc
xchg
aaa
inc
mov
mov
dec
daa
adc
mov
roll
adc
movsb
jmp
cmp
mov
mov
mov
add
daa
adc
jp
pop
sti
xor
push
les
iret
inc
lret
jbe
sub
stc
xlat
stos
in
xchg
fmull
rcll
sub
adc
dec
test
int
mov
jp
sub
dec
in
orl
stc
push
dec
xchg
scas
inc
pop
ss
mov
push
les
add
sbb
cmp
jnp
mov
add
pop
or
sbb
sbb
and
lcall
mov
sub
jne
fnsave
aas
add
cltd
gs
add
fsubl
lds
mov
pop
push
xchg
dec
pushf
adc
es
leave
add
fldt
xchg
dec
dec
scas
fcompl
push
pushf
pop
nop
mov
icebp
mov
jp
fistl
in
jns
ja
stos
cld
outsb
test
hlt
and
sarb
cli
test
nop
dec
sbb
adc
aad
popf
fcoml
xor
jmp
loope
add
orb
pushf
data16
pop
cmpsb
cmc
iret
push
xchg
inc
xor
mov
dec
clc
adc
hlt
sub
inc
clc
inc
cmp
fcmovnb
test
pushf
int3
rcrl
stos
xchg
pop
xchg
bound
adc
mov
mov
inc
mov
push
push
sar
sub
sub
xor
not
jns
xor
pop
or
push
cli
negl
das
mov
jb
sbb
and
fistpl
cld
push
setnp
push
int
leave
roll
jno
js
cmp
lret
push
mov
fistl
cwtl
jmp
push
lock
add
push
add
popa
add
mov
filds
xchg
cmp
cmp
and
add
cmc
std
addr16
mov
dec
cwtl
xchg
rcrb
ds
and
scas
loopne
ret
cld
mov
fstpt
sub
push
repnz
mul
ss
jg
aam
rcll
lods
mov
int3
rol
sbb
jg
mov
insl
cmp
pop
andl
sbb
dec
xchg
into
inc
in
pop
pusha
fsubr
jo
xlat
push
pop
fmuls
xchg
sarb
cltd
adc
jne
push
mov
int3
insb
ret
push
push
xchg
les
outsl
sti
fsubrl
lock
push
prefetcht0
rcrl
mov
fcmovb
daa
push
pop
outsb
fsubr
adc
movsl
xchg
rclb
cli
imul
jno
shrb
ljmp
cmc
imull
xor
lods
push
adc
and
xlat
xor
divl
inc
inc
fwait
enter
pusha
push
nop
leave
daa
cmp
js
ficoms
stc
stc
rcrb
sbb
cmpb
cmp
add
lcall
add
sbb
sahf
xor
mov
xchg
rcrb
push
cmp
imul
pop
dec
stos
inc
and
pop
into
sub
pop
xchg
mov
inc
pop
xchg
push
insl
lcall
lret
mov
in
stos
fs
rolb
sarl
cmp
add
push
shr
xchg
inc
xor
hlt
aad
sub
call
test
xor
mov
jbe
mov
lock
sbb
cld
js
cmp
mov
in
lods
sub
je
cmp
mov
jge
ret
cwtl
arpl
cmp
xor
mov
imul
lret
sbb
sub
and
dec
inc
xor
in
std
push
jnp
dec
push
push
adc
mov
jbe
movsl
ret
ja
into
adc
jge
andl
adc
mov
push
movsl
mov
test
stos
sub
jecxz
out
cs
fsubr
rcll
mov
lahf
mov
push
addr16
xor
pandn
and
dec
push
aas
xor
add
jae
mov
jae
jne
xchg
cmp
sbb
or
jl
adc
xor
sbb
loop
mov
mov
push
cmp
adc
mov
cmpsl
pop
sub
jnp
cwtl
into
xchg
sub
and
popl
roll
add
jb
pop
mov
lret
pop
imul
dec
dec
test
fistpll
dec
sub
cmp
into
dec
insl
into
int3
or
pop
mov
pop
fnsave
push
push
lds
xchg
cmp
rorl
repnz
movsb
sub
dec
cmp
outsl
sub
add
fstpt
popf
pusha
inc
jae
rol
add
repz
ficomps
mov
rcrb
pop
pushf
aam
push
cmp
cmpsb
lds
jbe
test
xor
jmp
js
fistpl
add
fwait
inc
push
dec
call
daa
cmp
out
dec
lods
fsts
xor
out
xchg
in
and
lret
cli
ret
xlat
test
cmp
jecxz
and
mov
adc
scas
cmp
adc
mov
adc
js
andb
fisubs
sub
and
xor
sbb
inc
outsb
das
ret
jbe
lret
xorb
ljmp
mov
cmp
mov
fisttps
ss
int3
fidivrs
push
loop
orb
pop
mov
popa
xor
loopne
xchg
cmp
xor
xlat
pop
cmpsl
add
adc
push
jbe
arpl
push
cld
dec
xchg
xchg
addr16
aam
jo
dec
enter
xor
int
push
cmp
repnz
mov
pusha
in
stc
arpl
mov
cmpsl
rcll
push
ljmp
push
push
fdivr
push
inc
jnp
jle
inc
sar
xchg
add
jecxz
lret
sbb
xor
fistl
dec
jo
out
xchg
cmp
dec
adc
add
mov
imul
pop
pop
movsl
pop
xchg
lcall
inc
addl
sar
jae
cld
mov
jge
xlat
jg
cmp
inc
add
cltd
insw
cmp
xchg
dec
cmc
push
add
daa
test
mov
inc
sbb
push
daa
sbb
imul
inc
movsl
dec
movsl
aam
mov
xchg
movsl
jmp
repnz
dec
rorb
dec
cmc
shr
pop
test
es
add
jae
cmp
mov
lret
push
out
clc
bound
cmp
sub
lds
jno
mov
jmp
cmpsl
mov
fwait
push
loop
shll
shr
jno
xchg
jge
or
mov
xor
mov
mov
sar
in
lods
mov
dec
pushw
cmc
je
mov
test
addr16
rcrb
pop
xchg
jmp
aas
or
cmpsl
adc
push
stos
sbb
scas
fwait
pop
jnp
and
or
fcmovu
shlb
mov
shlb
orb
aad
sub
cwtl
enter
sub
push
mov
ja
fisttpll
cmp
mov
dec
push
popa
dec
inc
aas
pop
xor
call
lret
push
nop
pop
and
stos
pop
xchg
push
out
aad
mov
leave
hlt
test
sub
mov
out
mov
sbb
pop
bound
in
stos
add
xor
cmp
sub
inc
dec
inc
jmp
jg
ret
inc
dec
nop
pop
ds
mov
jmp
cmpsl
push
push
mov
or
movsb
mov
test
faddl
iret
vpunpckhdq
out
fnstsw
mov
inc
cmc
push
sahf
push
inc
ret
das
jbe
pop
xor
sub
mov
int3
pusha
mov
or
dec
mov
cmp
mov
xor
dec
xchg
and
sub
mov
cmp
sub
mov
jmp
cmp
mov
cmc
xchg
cmp
mov
lds
pop
pop
jmp
insb
mov
mov
mov
sbb
in
sub
ficoms
sub
mov
dec
repnz
pop
pop
mov
stc
sub
pop
frstor
or
cmp
xor
mov
add
lock
adc
xor
xchg
push
pop
int
xor
jne
fs
mov
stc
gs
cmc
adcl
dec
adc
adc
xor
dec
iret
insl
or
adc
insb
inc
adcl
sbb
int3
ss
inc
dec
sbb
push
cmp
imul
push
fs
hlt
pushf
pushl
loop
fstpt
roll
jbe
push
js
iret
fwait
std
clc
dec
cmpsl
xchg
sbbl
scas
ret
fucomip
movsl
pop
bound
dec
out
sub
push
fsubl
subps
and
inc
incl
mov
cmc
pcmpeqd
loop
inc
xchg
cwtl
fsubs
sarl
fistpll
mov
mov
mov
lret
popa
lods
add
outsl
clc
sub
mov
mov
cwtl
cmc
loop
loopne
das
sub
popf
aaa
aas
cmp
dec
dec
push
dec
cmp
stc
test
leave
push
push
jg
fnsave
or
dec
jnp
xor
pusha
cwtl
sbb
push
xor
scas
and
xor
not
inc
add
jb
dec
in
mov
jp
dec
dec
test
add
mov
push
and
xor
mov
mov
cmc
into
enter
xor
faddl
lock
mov
and
aam
pusha
jp
testb
jno
xchg
jbe
xor
out
out
stc
rorb
jo
loopne
mov
mov
int
pop
pop
outsl
add
leave
jne
inc
out
hlt
mov
es
lret
sbb
mov
mov
jne
rolb
mov
mov
ja
dec
int
mov
out
lcall
es
jnp
int3
add
bound
jns
icebp
adc
and
insl
sahf
push
or
inc
mov
push
or
repnz
movsl
or
push
dec
lahf
ret
nop
jg
jb
loopne
and
and
cmp
outsl
int
mov
dec
ja
jp
or
repnz
mov
jp
out
lea
ss
imul
fwait
or
lds
and
pop
inc
das
or
jl
push
fistl
loope
shlb
lds
add
pop
repz
push
rcrb
pusha
pop
test
cmp
sbb
ja
iret
mov
int3
rclb
imul
pop
les
ja
sbb
or
cwtl
push
pop
push
ret
sub
jge
xor
movsl
pop
push
sub
sbb
clc
cli
andb
jae
imul
push
aas
mov
lret
fsubrl
insl
sbb
scas
or
cmp
xchg
adc
addr16
outsl
mov
fdivl
and
jg
icebp
cmp
xchg
pcmpgtw
xchg
test
fs
aad
push
xor
ds
sbb
shlb
and
cwtl
mov
push
daa
jge
cli
aas
je
aaa
or
sub
test
jmp
xchg
xor
pop
test
ljmp
jnp
fiadds
lods
or
bound
push
xchg
push
enter
fwait
test
cs
jnp
mov
and
sub
mov
int
out
mov
cmpsb
pop
int
mov
push
mov
mov
out
inc
ja
adc
adc
xor
jb
adc
lods
or
mov
cwtl
out
add
mov
pop
mov
sbb
sub
icebp
stc
xor
push
fisttpl
mov
mov
jl
psllw
in
bound
cltd
pop
test
mov
loop
lock
mov
add
dec
enter
leave
xchg
pop
insl
mov
and
adcl
and
std
ret
push
mov
jge
adc
shll
xor
sarb
divb
sbb
xchg
push
scas
jge
cmp
push
scas
out
xor
rorl
aaa
dec
cld
adc
mov
push
inc
insb
es
repz
ss
mov
imull
imul
pop
out
add
add
xor
cmp
push
dec
scas
gs
push
daa
sub
add
xor
imul
push
or
jnp
repz
adc
in
sub
adc
outsb
repnz
lods
ret
jne
jmp
insb
adc
cwtl
sbb
fwait
push
lahf
push
lea
in
mov
mov
test
and
mov
and
jb
leave
sbb
addr16
mov
and
mov
mov
pop
push
rcll
pop
inc
push
push
fstps
push
iret
stos
dec
jae
sub
pop
sahf
inc
push
out
jne
in
dec
xor
icebp
mov
movsl
push
loop
call
or
or
push
je
mov
imul
repz
mov
ret
fcomps
dec
pop
aaa
pop
bound
stc
xchg
push
dec
jae
cmp
xor
addr16
aas
outsl
adc
push
call
dec
pop
divb
cld
nop
xor
aad
push
jae
stos
ret
lds
lods
cmp
or
pop
rcll
or
or
movzbl
cmp
call
pmullw
aas
add
cmp
or
sti
lods
aad
lods
sbb
adc
jmp
icebp
pop
dec
les
sub
popf
lds
jae
mov
adc
and
cmp
je
add
call
xchg
std
pop
rcrb
jb
les
and
mov
xor
arpl
sarb
ret
out
fnstsw
jns
out
rorl
pop
mov
pop
pop
cmp
or
xor
pop
inc
addr16
orb
pop
sbb
xchg
pop
adcb
xchg
in
jns
lret
dec
scas
pop
xor
jle
dec
pop
pop
mov
shll
into
ljmp
stos
jle
push
mov
dec
decl
lds
loop
push
xor
cmpsb
decb
push
fcmovb
imul
pop
jecxz
ljmp
test
sti
jp
cmp
insb
imul
inc
jae
ret
and
pop
sbb
dec
and
sbbb
shll
add
filds
xor
or
jns
ds
push
inc
sbb
les
bound
imul
lret
sub
outsl
icebp
mov
cmp
inc
cmpsb
add
xlat
jp
fstps
subb
mov
sub
mov
lahf
mov
sti
inc
xchg
xchg
sub
pop
jl
jbe
popa
dec
mov
dec
xchg
pminsw
mov
sub
mov
mov
lock
into
or
lock
pusha
push
scas
mov
or
jmp
fs
ret
imul
insl
adc
loop
je
and
mov
bound
cmpsb
or
pushf
int
mov
push
aaa
dec
inc
adcl
and
xor
pushf
cmpb
loop
dec
xor
sbb
sbb
insl
stos
sub
roll
inc
inc
mov
loope
jno
and
scas
lods
jecxz
mov
mov
mov
jo
test
dec
sbb
adc
cmpsl
or
lret
jecxz
or
mov
jb
insb
jl
and
or
lcall
insb
mov
fmuls
mov
and
mov
add
sahf
js
imul
xor
push
xchg
sub
stos
cld
movsb
jae
inc
enter
cs
out
jne
loope
or
mov
leave
cmpsb
jno
iret
fptan
addr16
or
test
inc
out
jno
xor
push
pop
in
xor
xchg
add
xchg
fs
or
stos
popa
cmpsb
jle
cmp
mov
enter
sbb
adc
les
scas
lret
cltd
sub
inc
repnz
push
push
outsl
movsb
std
iret
insl
cltd
xlat
loope
inc
pop
jo
or
pushf
inc
mov
sub
and
mov
ss
into
call
push
lods
inc
das
add
rcrl
jne
jp
xchg
enter
cld
cmp
lock
and
jg
lea
add
repz
inc
xchg
and
pop
fidivl
add
cmp
lahf
aad
subl
push
xchg
mov
lods
cltd
mov
fldcw
add
mov
jbe
jg
icebp
cmpsl
mov
pop
mov
lahf
pop
mov
mov
mov
std
sbb
ret
jne
iret
sbb
lcall
pop
enter
rorb
mov
sub
sahf
stc
inc
shrl
mov
enter
cmc
inc
in
lahf
or
cmc
mov
xchg
aad
arpl
lcall
jb
nop
ja
shr
arpl
and
sbb
daa
cltd
pop
aas
push
iret
test
lods
repnz
mov
pop
xchg
aas
lcall
xor
adc
push
mov
movsb
mov
imul
adc
cld
sub
push
inc
test
mov
in
jbe
test
shl
and
push
repnz
fstl
and
add
les
jae
jle
jge
or
sub
movsb
xchg
xor
inc
fsubrl
pop
js
shll
int
jbe
sarb
adc
out
jae
mov
and
fcos
lock
repz
stc
cmp
fst
mov
aaa
rcrb
add
add
sub
adc
fidivl
jmp
add
adc
mov
sub
sub
sbb
es
daa
xchg
mov
xchg
shll
fwait
inc
jge
out
push
clc
jmp
dec
out
mov
jl
inc
pop
sbb
jp
mov
mov
sub
nop
insb
ja
mov
cs
hlt
call
mov
lcall
cs
jo
shll
cmp
movsl
mov
pop
bound
outsb
sbb
ljmp
mov
push
andl
dec
dec
and
sbb
inc
mov
mov
into
popa
push
add
movsb
scas
shrl
jl
call
addr16
mov
outsl
inc
call
rcll
mov
lcall
mov
jg
inc
xor
out
nop
push
cmp
mov
inc
jp
add
jl
popa
lahf
jmp
or
repnz
stc
sbb
icebp
in
sub
insb
jno
mov
pop
push
stos
aas
shll
sbb
ja
fwait
repz
sbb
jns
lcall
or
loope
jne
inc
mov
cmp
xlat
hlt
mov
push
cltd
lods
mov
lret
je
jmp
sub
add
dec
pushf
adc
mov
xor
xchg
cmp
xor
dec
fstpl
inc
adc
xor
rcrb
loope
dec
mov
mov
insb
ret
add
mov
lret
outsb
fcom
out
cmp
xchg
je
cmp
pop
sub
pusha
add
lods
sbb
mov
movb
push
in
cmpsb
add
xor
cmp
push
test
rcrl
and
jmp
and
xchg
or
sub
test
loopne
inc
lret
pushf
fdivrl
or
dec
xor
push
pop
out
adc
push
sbb
out
in
sub
sti
and
cmc
out
mov
sub
ja
mov
sbb
jne
in
sub
cmp
jmp
aad
lods
pop
lret
fisubrl
sahf
mov
jmp
adcb
fldenv
rolb
mov
mov
test
lret
mov
test
push
dec
mov
dec
and
push
lcall
fcoms
mov
outsl
add
idivb
fwait
imul
std
mov
outsl
outsl
cmc
cltd
pop
jb
lds
roll
movsb
jne
jge
fimuls
notl
pop
call
mov
dec
jmp
cs
xor
ss
cwtl
into
jmp
or
aam
clc
leave
pushf
pusha
inc
xchg
mov
jp
sbb
stos
and
dec
ljmp
ret
je
ljmp
jge
scas
cmc
popl
mov
iret
mov
sbb
test
mov
fucom
in
imul
fdiv
mov
rolb
lock
jns
jge
mov
mov
ja
mov
outsb
rcrl
shr
sub
lds
lahf
stc
lods
add
scas
lahf
enter
lret
push
jbe
dec
inc
testb
cld
add
aad
and
mov
xor
loop
sar
push
iret
mov
dec
arpl
dec
lret
call
push
sub
or
sub
cmova
clc
enter
push
test
or
mov
int
out
push
bnd
test
mov
rorb
push
mov
shll
adcl
out
jle
and
idivl
rcrb
stc
sub
add
jecxz
add
mov
push
mov
adcb
or
or
test
pop
sub
pop
xchg
cmp
cli
xchg
icebp
aam
pusha
cwtl
and
fldz
add
or
popl
xlat
adc
lret
pop
mov
adc
xchg
movsb
or
xchg
pushf
fisubl
mov
sti
fistl
cmp
cmc
xor
mov
push
inc
cld
mov
add
and
fnsave
ja
push
fldcw
nop
das
jecxz
mov
mov
nop
cs
dec
shll
fstpt
mov
aad
or
sub
int3
inc
or
les
mov
in
jg
xor
test
sbb
xlat
push
lock
pop
pop
stos
test
vpmovsxwd
movsl
add
pushf
shl
scas
sbb
push
lret
pop
or
xor
or
jg
movb
cmp
rcll
fisttpll
in
cmp
pop
inc
xchg
sbb
bound
in
addb
stc
fmuls
faddl
mov
cltd
ja
rcl
push
push
cmpsb
inc
push
jae
mov
add
inc
sub
ss
pop
ss
dec
adc
jne
pop
rcrb
ds
or
stos
inc
cmp
mov
clc
popa
xor
lret
inc
mov
adc
iret
in
and
dec
xor
jns
jmp
fimuls
jp
lar
movlhps
in
aaa
xorb
mov
xor
cmpsl
ss
dec
sarl
and
aaa
scas
sub
scas
mov
mov
dec
cmp
stc
cmpsb
outsl
dec
clc
mov
mov
adc
lods
pop
inc
xor
stos
lret
pop
out
pop
pusha
loopne
mov
repnz
sub
dec
jg
imul
mov
test
push
sub
mov
ja
pop
aad
add
std
int
cmp
adc
sbb
pop
xchg
iret
lds
push
xchg
daa
insl
pop
mov
mov
enter
out
arpl
cmp
shll
lds
push
xchg
inc
dec
cld
das
movsl
aaa
vunpckhpd
iret
leave
cli
jmp
add
enter
hlt
stos
fnstenv
cli
and
lds
daa
jns
cmp
lea
push
adc
lods
push
in
or
out
sahf
pushaw
sbb
push
fsubrp
ffreep
cmp
add
dec
xor
cmpsb
imul
daa
aam
push
mov
jmp
dec
sbb
rcll
or
loopne
test
cltd
int3
xrelease
adc
and
rcl
mov
setl
adc
cmp
jl
fimull
addb
insb
or
inc
push
sti
jnp
lret
pusha
mov
nop
inc
jmp
or
xor
pop
jnp
clc
mov
or
jb
jo
push
scas
mov
mov
push
outsb
das
and
lahf
mov
inc
aas
ret
mov
jmp
lock
pop
insb
stc
lea
pop
sub
rolb
neg
xor
inc
cmpsb
jge
insl
and
std
mov
or
sbb
aaa
repz
add
jns
cmp
stc
in
sub
sarl
lods
xor
jb
dec
cmp
std
ja
gs
mov
add
in
mov
inc
xor
test
lock
std
sub
insl
int3
or
std
pop
push
cmp
rolb
pop
vaddsubpd
icebp
inc
scas
shrl
pop
fsubs
add
shll
std
mov
andl
int
lea
pop
je
jecxz
fisubrl
fs
ja
mov
lcall
xor
jo
jecxz
insl
jecxz
inc
sbbl
mov
xor
jo
test
arpl
adc
add
or
ds
dec
sub
lods
outsb
ret
aad
xchg
or
push
mov
mov
hlt
cwtl
and
inc
adc
out
mov
adc
cld
pop
or
inc
aad
out
arpl
and
xchg
cs
test
xchg
fisubrl
mov
lret
push
dec
xchg
push
sti
andl
pop
sub
movsl
mov
inc
ja
push
lods
sbb
lahf
nop
pop
fiadds
push
pop
xchg
sbb
mov
mov
jb
bound
ret
in
pop
mov
clc
xor
scas
fidivs
push
inc
or
jle
push
jae
push
add
jae
or
push
leave
dec
repz
ss
cmc
pop
pusha
addr16
in
mov
ljmp
mov
jg
mov
rorb
xchg
cld
or
and
inc
nop
test
sbb
sbb
imul
mov
or
subl
push
xchg
xor
xor
in
jae
testl
sbbb
adc
push
mov
test
es
mov
add
fdiv
bound
ljmp
rorl
popf
int3
out
mov
call
pop
pusha
add
cltd
sbb
aas
cmp
xor
jp
cli
push
xor
push
aas
scas
adc
jg
dec
hlt
and
jmp
stos
lods
xor
xor
jl
push
push
push
push
pop
mov
minps
shr
jo
and
sahf
pusha
in
adc
sub
mov
lret
sbbb
mov
nop
fisubrl
dec
push
mov
push
mov
inc
int
nop
adcl
jbe
sub
int3
push
cmpb
popf
push
iret
cltd
sti
mov
das
dec
in
js
fs
sti
jge
or
or
lock
loope
jns
jne
pop
sar
dec
mov
jo
fcoml
daa
push
imul
sub
push
mov
or
push
lret
xchg
inc
dec
into
mov
mov
sar
push
mov
add
mov
in
mov
sub
test
fcoms
xchg
or
addr16
mov
nop
lea
cmp
out
adc
adc
loop
lds
lret
adc
ret
out
sbb
mov
fsubp
jecxz
xchg
les
test
daa
mov
mov
out
and
subb
xor
aad
cmp
test
jns
xor
sbb
add
stc
cltd
push
cmp
faddp
push
jmp
and
ja
rorl
or
push
dec
inc
out
mov
or
jg
cmp
loop
pop
jge
push
inc
mov
subl
or
sub
sbb
sbb
xchg
pushf
sub
adc
and
stos
push
xchg
push
imul
cwtl
out
mov
fdivrs
inc
movsl
pusha
xor
inc
dec
mov
xchg
loop
cmp
inc
mov
in
or
lods
mov
jb
scas
pop
out
sbb
cmp
add
test
test
mov
addr16
cld
xchg
jmp
test
movsb
dec
icebp
leave
add
fidivl
vpminub
out
ret
les
les
inc
fsubrl
push
dec
cltd
jmp
mov
push
bnd
jae
xchg
inc
pushf
fwait
cwtl
andb
xchg
dec
ffreep
jo
xor
and
loope
test
mov
dec
arpl
loopne
rcrb
push
sub
std
sti
sbb
inc
xor
xchg
jge
and
fiaddl
lahf
jp
xchg
sahf
in
and
pop
sahf
xchg
les
divl
repz
into
push
ja
out
dec
pop
cli
call
imul
ret
lahf
stos
addr16
stos
mov
adc
xchg
xchg
or
adc
cmpsl
add
fnstcw
inc
and
mov
mov
daa
jno,pn
jae
loop
jg
mov
mov
les
fucomip
cmc
jp
lret
ret
add
inc
push
mov
lock
out
dec
xchg
and
xor
rcll
xchg
shrb
fwait
inc
outsb
pop
cli
inc
rol
rclb
mov
sub
aad
adc
adc
sub
mov
sbb
xchg
sbb
idivl
add
add
loope
fcmovbe
lock
adc
pop
mov
pushf
pop
pop
lahf
aam
in
lahf
mov
xchg
xchg
enter
jo
fwait
cwtl
scas
cmpl
gs
rorb
out
outsl
adc
sub
adc
cmc
call
call
int3
aad
ss
xor
push
lret
neg
pop
cmp
daa
push
ds
in
mov
xor
in
cmp
jb
mov
sub
test
adc
xor
pop
jne
add
lahf
push
xor
lods
js
cmpsl
leave
test
fidivl
jo
gs
call
push
dec
mov
aad
mov
lock
call
gs
dec
adc
lcall
pop
rclb
jo
ds
dec
push
and
jle
lods
scas
inc
out
cmp
lret
rol
xchg
pop
and
andl
pop
cmp
in
xchg
mov
popf
mov
movsl
mov
mov
mov
push
add
insb
inc
aas
xchg
inc
ja
ja
iret
jecxz
lgs
cmpsl
cmp
es
outsb
push
push
adc
leave
imul
pop
fildl
mov
shl
sbb
xor
jecxz
add
insb
adc
pop
xchg
and
cmp
mov
dec
insl
mov
and
jo
xor
or
mov
mov
fnstcw
cltd
mov
pusha
inc
mov
ja
imul
mov
pop
rcl
inc
dec
adc
jg
sbb
mov
ja
ljmp
dec
rorl
incl
addr16
cmp
sarl
mov
mov
movsl
lods
fcomp
popa
pop
popf
sbb
cmpsl
out
dec
addr16
aad
add
inc
icebp
dec
add
fcomp
cmp
pop
push
cmpsb
push
jmp
fsubrl
clc
aam
sub
sub
cmp
andl
jge
jne
shlb
dec
insb
cmp
mov
in
add
xor
in
divl
cmp
dec
cmp
jns
sbb
xchg
mov
call
xor
cltd
js
adc
cmpsb
scas
sub
pop
or
sbb
sub
and
jae
or
jbe
sub
jle
sub
mov
xchg
loope
cltd
dec
cmp
pop
xchg
jb
add
xchg
jb
mov
clc
negl
mov
es
adc
leave
testl
pop
scas
or
jo
jno
mov
popa
cmp
mov
mov
stc
mov
xchg
add
and
jno
fistpl
push
sahf
push
mov
jne
push
clc
jb
inc
fnstsw
xor
inc
push
dec
jecxz
dec
outsb
popf
pop
mov
enter
dec
cld
mov
pop
fcompl
xchg
scas
adc
sub
fists
add
push
push
lea
jae
iret
and
jno
pop
mov
loopne
pop
fsubs
in
push
add
in
pop
jle
dec
push
rorl
jbe
aam
loopne
jo
cmp
cmp
test
flds
fistpll
sub
push
sub
mov
and
das
rcrb
inc
mov
mov
rcrl
test
sti
ljmp
xor
pop
sbb
mov
and
jp
rol
ss
divl
gs
and
push
insb
and
divl
sub
push
shr
xor
push
sub
and
cli
movsl
sub
push
cmpsl
in
shrb
repz
pop
mov
mov
les
in
into
add
fldenv
lret
mov
lea
js
inc
popf
loope
sub
adc
inc
cmc
add
mov
ret
dec
das
jp
push
dec
rcrb
lea
xor
in
icebp
adc
lds
hlt
hlt
addr16
mov
sti
mov
mov
cmp
jb
aam
psadbw
and
mov
cltd
xchg
jp
dec
push
les
ljmp
stos
ds
inc
push
je
sbb
out
lret
or
mov
js
mov
pop
dec
in
xor
push
or
call
sbb
rcrl
mov
fwait
mov
mov
ljmp
arpl
cs
jbe
pop
std
sbb
test
imul
lock
sbb
rcrl
inc
arpl
pop
sub
mov
mov
and
pop
pop
xor
lods
cmp
xor
notb
es
stos
add
clc
dec
mov
sbb
loope
mov
lret
lods
bound
inc
sub
movsl
or
hlt
jae
xchg
add
mov
add
mov
xchg
mov
adc
mov
mov
xchg
lcall
xor
sbb
xchg
jns
sub
popf
mov
repz
and
dec
daa
scas
xchg
push
repnz
sub
jne
loope
xchg
pop
xchg
call
adcb
jmp
popa
out
mov
xchg
in
xor
mov
test
pop
imul
xor
outsl
aad
movsb
int
shlb
lret
aas
shrl
mov
mov
test
xchg
cmp
lods
xchg
out
inc
ficomps
dec
mov
push
cmpl
fiaddl
jmp
stos
cwtl
fnstenv
inc
pop
and
xchg
stos
cmp
into
pusha
addb
testl
movsl
and
sub
inc
fcmovne
push
push
lret
imul
mov
test
in
gs
inc
dec
stos
mov
push
fcoms
fcomp
xor
in
mov
lcall
fbstp
dec
push
shll
push
push
mov
popf
sbb
inc
mov
inc
lret
enter
sub
cmp
nop
add
sbb
xchg
aaa
in
scas
sub
cmp
and
or
loop
icebp
xchg
dec
sub
icebp
test
adc
inc
lahf
dec
data16
bound
mov
inc
xchg
jp
out
loop
cmp
repnz
enter
jp
push
mov
sub
iret
in
femms
inc
jmp
and
aam
pusha
arpl
mov
sti
inc
or
xor
jno
jno
xchg
mov
cwtl
pop
xchg
imul
rorb
movsb
mul
push
mov
in
inc
not
jmp
pushf
es
add
frstor
clc
jno
push
adc
scas
jmp
xchg
sti
sti
push
pop
cmpsl
jle
sbb
fcompl
bsf
pop
mov
push
sub
insb
call
filds
sbb
dec
xchg
lock
push
add
andl
leave
aad
xchg
test
decb
jge
nop
mov
jnp
jl
rcrb
mov
lds
jge
rol
and
ror
xor
push
mov
mov
mov
pop
inc
scas
push
sub
or
adc
lret
xor
out
sub
int3
jg
mov
test
mov
es
xchg
sbb
test
pop
xchg
adc
sub
sbb
fadds
pop
jno,pn
xchg
pop
cmpsb
push
int3
jno
xor
jmp
ficomps
mov
mov
jb
mov
dec
imull
jp
jnp
and
imul
adc
pusha
push
pop
pop
push
push
and
imul
push
jne
sbbl
xchg
sbb
push
out
and
cwtl
xlat
pop
adc
mov
stos
jl
lock
dec
call
xlat
lock
in
out
mov
js
dec
arpl
adc
inc
mov
push
repnz
into
add
inc
stc
out
pop
mov
test
cmp
jne
sub
lret
aaa
pop
xlat
pop
sbb
subl
jg
pop
pusha
insl
push
fwait
adc
mov
mov
lds
mov
cli
xchg
addl
js
cltd
xchg
sbb
fstpl
stos
cld
out
stos
out
pushf
aaa
sbb
fwait
mov
mov
mov
outsl
mov
bound
xor
xor
mov
push
movsb
pop
std
dec
add
push
xchg
fildl
mov
cmp
mov
les
sub
jmp
xor
leave
ss
mov
pop
fs
push
dec
sub
or
out
mov
add
xchg
xlat
sti
loope
sbb
iret
addr16
add
pop
adc
loopne
pop
jb
add
mov
mov
repz
and
sbb
mov
test
stc
stos
popf
dec
inc
inc
push
cmp
into
cmp
out
jo
sub
stc
mov
sbb
pop
out
fisubrl
xor
adc
push
push
aam
xchg
into
pop
popa
push
dec
in
mov
ds
jae
adc
ret
outsl
loope
xor
and
outsb
lcall
std
pop
mov
fldt
je
hlt
jg
fdivrl
jmp
mov
in
push
sub
add
fcoml
pop
loopne
outsl
sbb
xbegin
cld
ficomps
loopne
or
add
add
repnz
adc
push
adc
pop
jb
pop
jno
xchg
and
jg
nop
stos
pop
sub
outsl
mov
and
push
aam
pop
ret
mov
mov
jne
dec
xchg
push
loop
mov
jbe
add
cli
jne
loopne
cmp
scas
pusha
enter
sub
jns
rolb
jns
add
inc
pop
add
mov
or
cmpb
cmp
cmp
hlt
cld
stc
ss
dec
addb
std
mov
sbb
in
das
out
and
and
mov
xchg
pop
out
dec
xchg
rclb
push
mov
inc
adc
xchg
mov
movsb
hlt
sbb
jne
and
jge
mov
mov
rorb
jge
mov
xchg
mov
int
das
jno
or
dec
xor
dec
jge
sahf
outsl
aad
push
ja
aad
loop
decl
add
cmp
inc
adc
popa
or
pop
ja
add
loop
dec
pop
add
xor
jae
daa
pop
jmp
xlat
outsb
imul
mov
addl
sub
mov
lods
jnp
pop
mov
subl
pushf
stos
mov
sub
ja
rclb
pop
mov
cmc
add
and
and
push
ja
fnstsw
andb
mov
insb
mov
cmc
push
sbb
shrb
or
and
popa
popa
inc
add
xlat
xchg
adc
ret
pushf
mov
addl
jle
or
pop
inc
call
aas
jmp
adc
nop
sub
push
scas
mov
mov
mov
mov
das
push
iret
pop
je
adc
inc
scas
fisubs
pop
aam
xchg
mov
jge
movsl
fnstenv
test
fcmovu
jne
jno
call
dec
push
shll
faddl
enter
outsb
or
push
iret
mov
ljmp
jno
and
sub
fimull
aaa
out
call
jno
sbb
xchg
jp
pop
test
sahf
sub
rcll
and
xchg
jecxz
and
clc
push
sub
jg
imulb
pop
shl
cmpsl
outsl
mov
sahf
je
popa
xchg
xchg
mov
inc
loopne
jno
insl
add
les
push
pop
mov
in
jae
add
sbb
adc
mov
and
test
sbb
es
out
mov
push
out
push
mov
mov
sub
push
loop
sbb
push
in
pusha
popa
sarb
sahf
mov
lock
sbb
test
iret
test
mov
sbb
data16
lds
out
dec
lods
in
and
out
mov
push
movsb
jae
lcall
mov
mov
add
pushf
sbb
jae
cltd
cmp
aas
fisubrl
mov
out
lods
and
sahf
add
fs
xor
sub
jmp
jnp
jo
mov
and
movsb
insl
pop
in
jmp
nopl
push
and
loopne
fnsave
and
jo
and
lea
inc
pop
shrb
pushf
scas
test
xchg
cwtl
jge
imul
jno
pushf
cli
xor
test
out
rcll
sub
pop
adc
imul
test
stc
pusha
jo
imul
or
push
imul
sub
pop
xor
movsb
leave
nop
mov
jle
and
dec
cmpsb
add
jge
jl
fwait
sub
jb
adc
imul
sarl
bound
ret
fnstenv
sbb
xchg
orb
or
test
xor
fcmovnb
fdiv
and
jno
cmpsb
imul
xchg
or
aam
addr16
ret
xchg
js
ss
pop
jge
lret
mov
push
add
out
cld
sbb
sti
and
push
jle
jl,pt
negl
cmc
mov
add
pushf
jb
xchg
imull
loopne
xchg
out
or
mov
fistl
mov
js
lock
sub
sub
int
popf
xorl
jl
mov
dec
mov
jge
jno
negb
es
jg
pop
cmp
into
out
adc
je
shll
ret
fstpt
sbb
mov
mov
sub
dec
mov
xchg
outsl
pushf
jge
push
hlt
and
prefetch
rcll
movsb
imul
push
xchg
jns
xor
mov
dec
loopne
scas
xor
dec
sti
aad
leave
fstpt
insb
jo
or
scas
fldlg2
loopne
add
das
daa
arpl
dec
enter
stos
icebp
pop
mov
in
dec
inc
add
bound
pop
fdivrs
cmc
dec
clc
shll
cmp
inc
sahf
ss
xor
xchg
jle
push
pushf
bswap
shrl
rorl
push
inc
cld
mov
fdiv
test
ret
jne
in
pop
jno
push
cltd
mov
insb
xchg
mov
mov
icebp
xchg
xor
lods
subb
xchg
dec
push
les
jp
push
inc
and
ret
imull
adcb
stos
dec
xchg
pop
sub
mov
fcom
xchg
mov
and
std
push
outsl
inc
fisubs
enter
adc
test
xchg
icebp
test
rcl
fsubr
sub
les
inc
xchg
add
in
ss
mov
ret
cmp
and
add
push
push
xchg
loope
nop
xchg
imul
repz
aas
push
dec
push
push
test
mov
aad
push
cmp
ljmp
pop
jmp
dec
inc
lods
fstl
imulb
stos
cld
sbb
sti
adc
inc
mov
fdivs
and
jecxz
jp
insb
sbb
gs
xchg
mov
cltd
repz
adc
stc
ret
int3
int3
test
push
shrb
cmpl
arpl
jo
adc
mov
mov
je
jmp
iret
into
or
mov
pop
mov
pop
lds
xchg
add
adc
iret
mov
add
mov
mov
scas
stos
testb
mov
or
aad
lahf
pop
cltd
pop
mov
hlt
adcb
insl
testl
ds
cmp
pop
sub
add
mov
push
popf
xchg
add
ficoms
add
stos
or
lock
jo
jne
cmp
pop
sarb
stc
sub
xchg
xchg
dec
rcll
scas
movsb
leave
leave
mov
negl
jae
or
dec
cltd
les
xor
addr16
test
mov
popf
sub
push
clc
add
inc
in
stos
icebp
icebp
lds
clc
inc
into
inc
push
push
fucomip
sub
movsb
pushf
in
lock
leave
push
scas
pushf
inc
lret
cwtl
or
add
in
jbe
lea
in
mov
iret
inc
cmp
and
lods
inc
sahf
mov
push
bound
into
enter
repz
aad
add
outsb
addr16
testl
inc
and
pop
vpand
fists
jae
iret
jns
xchg
adc
and
jb
scas
sub
cli
push
out
ror
adc
or
xor
loopne
push
jp
imul
inc
add
mov
leave
mov
inc
inc
sti
push
or
push
js
enter
push
pop
cs
fucomp
mov
mov
adc
popa
paddb
iret
into
inc
or
rol
ret
inc
lea
xchg
jns
enter
and
jp,pt
xlat
mov
pusha
add
popf
sbb
cmpsl
aam
inc
loope
ss
lret
dec
mov
test
iret
andl
into
mov
and
or
dec
enter
imul
in
in
cmp
imul
xchg
jmp
xor
stc
shlb
lods
adc
lock
int3
lcall
jmp
or
fisubrl
mov
int
cmp
shrb
and
mov
shr
pop
fsub
jge
add
ds
mov
push
push
mov
call
mov
add
addw
adc
pop
clc
gs
jno
jg
mov
stos
out
push
into
cmp
add
lret
jecxz
or
popa
dec
shlb
mov
and
mov
mov
inc
sbb
pop
adc
popa
jmp
rclb
lret
fdivs
mov
jle
jp
or
ret
out
and
mov
das
push
fwait
ja
cmp
jbe
xor
nop
outsb
xchg
mov
repz
add
or
test
lahf
cli
inc
inc
xchg
push
shrb
add
sbbb
xor
jecxz
mov
jmp
pusha
test
jae
inc
lret
sub
imul
rcrl
fs
sub
outsl
cld
mov
and
push
shrb
loop
aam
scas
mov
shlb
xor
inc
pop
dec
push
mov
pop
xchg
add
rcll
sbb
xor
std
jle
std
in
pop
pop
mov
xchg
sahf
add
insb
fdivl
ds
push
mov
cmc
mov
cmp
mov
cmp
push
aam
int3
sub
lahf
test
and
mov
aad
pop
test
pop
repz
rcrb
aam
gs
scas
push
dec
sar
rcl
out
lret
es
cmp
jno
popf
in
jne
inc
cld
pop
sub
sahf
pop
xchg
testb
and
test
push
leave
xchg
push
fs
aam
or
add
inc
lret
mov
imul
push
cmp
and
outsl
roll
push
movsb
std
add
and
lea
xor
cmpsb
insl
subl
or
xchg
jge
enter
js
cmp
mov
shrb
mov
sti
mov
dec
frstor
pusha
sub
daa
inc
jle
int3
jne
xchg
inc
ret
pop
fisubrl
clc
call
leave
loop
shll
adc
les
mov
out
dec
bound
scas
sti
pop
jnp
arpl
repnz
cmp
inc
xor
es
mov
dec
jmp
jge
rcrl
stos
mov
xchg
dec
pop
inc
fs
push
dec
sarl
or
in
jne
xchg
decb
sbb
sub
lcall
xlat
je
sub
icebp
xor
sbb
sub
addr16
push
inc
xor
in
jle
movsb
push
sub
dec
mov
call
fs
pop
mov
pop
dec
or
fcomps
mov
lds
mov
mov
hlt
dec
ret
iret
es
imul
ret
cwtl
int
cli
in
cmp
out
or
inc
out
daa
test
fsubrl
rcr
inc
repz
mov
adc
dec
orl
push
sbbb
shl
pushf
rcrb
insl
pop
fiaddl
lret
outsb
jbe
daa
fucomi
lret
pop
mov
push
pop
fcompl
sub
inc
fwait
mov
daa
mov
jecxz
jp
inc
imul
dec
lahf
out
sahf
xchg
stos
clc
pushf
dec
loopne
je
lahf
shr
jo
bound
adc
daa
addr16
and
xlat
and
cmpsb
bound
push
sub
shlb
sti
mov
aas
test
push
sbb
je
inc
icebp
mov
and
jp
xchg
rolb
adc
mov
test
jb
add
pop
cmp
mov
adc
jnp
or
dec
out
adc
mov
pop
cltd
lds
jnp
jle
repz
out
shll
pop
dec
mov
aaa
dec
pop
lcall
xor
or
sbb
data16
into
movsl
jmp
cmpb
jle
cmp
push
je
je
jecxz
jp
xchg
mov
push
inc
and
jbe
dec
fadds
push
aas
xor
cmp
jnp
dec
in
sub
test
outsl
int
fs
mov
es
mov
divl
hlt
lds
xor
pusha
scas
mov
and
sub
das
adc
mov
lods
push
and
xorb
repz
dec
jne
fsubrl
jmp
add
jl
dec
out
sbb
js
popf
cltd
bnd
repz
dec
shrb
jle
rorb
add
add
fsubrp
aam
dec
shlb
push
xor
inc
or
jno
enter
add
push
movsb
repz
out
adc
cwtl
mul
lea
rolb
cmp
cmp
in
ret
adc
inc
mov
adc
rcrl
pop
ja
adc
enter
mov
inc
dec
pop
lret
pop
out
xchg
mov
pop
out
jecxz
lds
stos
loopne
and
cwtl
test
push
scas
jae
mov
ret
sahf
arpl
jo
mov
mov
fs
cmpsb
pop
and
aas
scas
sarl
dec
push
and
dec
inc
cmpsl
sub
jnp
sahf
adc
lret
xor
dec
pop
xor
cld
div
dec
std
jo
cmp
add
mov
and
xchg
aaa
adc
sbb
shrb
stos
adc
xor
pop
mov
jb
lahf
mov
clc
pop
sbb
xlat
sti
nop
xor
sar
leave
xor
pop
xchg
cmp
leave
shr
and
fwait
cmp
sarl
mov
adc
stc
ret
arpl
xchg
xchg
lock
xor
push
fldt
mov
cli
jmp
insl
incl
dec
push
push
sub
cmp
fwait
inc
std
in
dec
fsubrl
jno
fbstp
add
and
jo
clc
or
cmp
jb
push
add
push
mov
mov
jno
das
mov
sub
cmp
popf
inc
iret
les
pop
dec
push
cli
shlb
sbb
dec
jb
cmpsb
fsts
stos
fists
cmc
mov
push
pop
les
imul
inc
cmp
lret
sbb
mov
mov
mov
fidivl
inc
mov
imul
push
inc
stos
sub
lock
jp
mov
fcompl
out
xchg
push
lret
cltd
mov
fnstcw
push
lds
jb
jne
fists
div
pop
dec
and
loopne
popa
dec
and
add
stos
mov
dec
cwtl
aam
and
movsb
fisttpll
and
das
outsl
repz
pop
rolb
adc
rcll
aam
push
push
cmpb
mov
xor
jle
ds
and
jp
call
mov
mov
aaa
sbb
mov
fimull
sub
inc
idivb
sub
ret
clc
or
xchg
les
aaa
xchg
call
inc
xorb
ja
cmp
pop
jl
pop
repnz
pusha
cli
or
das
out
add
dec
mov
mov
cmp
pusha
fdivs
imul
and
push
loop
test
sbb
mov
add
mov
pop
call
cld
inc
addl
push
shlb
inc
jnp
push
in
les
lds
lea
les
sub
sub
sub
stos
push
or
sub
add
cmc
scas
mov
mov
mov
xchg
lods
out
mov
push
push
movl
repnz
jl
dec
data16
adc
cmp
in
iret
insb
jg
mov
repz
xchg
mov
cwtl
xchg
inc
pop
inc
and
addb
stos
xchg
je
mov
ss
fidivl
xchg
xchg
cs
mov
cs
mov
pop
xorb
mov
sbb
jmp
lods
test
rorl
xor
sbb
into
ret
insl
pop
out
cwtl
ds
jmp
mov
sub
test
rorl
lock
pop
addr16
daa
loope
push
nop
iret
jmp
rolb
add
mov
cld
lea
jecxz
mov
pop
mov
sub
or
imull
aad
stos
push
mov
cmp
ds
pop
mov
xor
cmp
push
cld
test
jmp
iret
jp
and
sahf
mov
dec
sbb
or
fistpl
test
push
test
sub
xchg
clc
xor
popf
pop
mov
call
lock
sub
sbb
xor
jle
jmp
adc
fs
adc
add
outsl
mov
xchg
push
pop
xor
or
jg
gs
sbb
fistpll
mov
push
add
mov
cmp
cli
iret
loopne
aas
pushf
push
jg
add
mov
fdivrl
stos
sahf
movsb
xchg
mov
adc
insb
pop
mov
push
xchg
arpl
xchg
mov
jb
push
mov
popa
xchg
cwtl
mov
push
sbb
enter
mov
inc
xor
mov
aam
sub
xor
inc
movsb
mov
shl
xlat
xchg
cmp
sbb
xchg
push
push
enter
hlt
inc
fcoms
int3
jecxz
popf
cli
inc
mov
mov
mov
mov
jecxz
add
add
cld
push
sub
xor
adcl
dec
ja
adc
xlat
pop
dec
test
mov
rcll
push
pop
loop
out
mov
xor
xchg
test
sbb
loope
xchg
in
jecxz
add
mov
stos
sti
out
push
test
dec
mov
movsl
and
adc
fs
cmpsb
or
mov
xchg
dec
int3
out
cmp
mov
mov
fldt
in
fists
popa
shrl
xchg
mov
or
incl
cmp
mov
dec
fcoms
testl
cmc
out
aam
in
orl
jno
mov
push
jmp
pop
jge
xor
pop
repnz
sbb
add
mov
loope
nop
mov
inc
xchg
popa
and
out
scas
inc
mov
inc
scas
xor
inc
je
push
lret
pushf
or
pusha
aaa
xlat
lea
in
aaa
jmp
fcomps
lret
add
mov
mov
xchg
sbb
pop
lock
mov
and
xchg
push
inc
inc
out
movsb
cmpsb
sub
push
scas
bound
mov
bound
mov
or
sbb
xchg
cli
loopne
adc
inc
lea
fildl
and
sub
pusha
bound
jb
sarl
xlat
pop
and
pop
jo
xorl
push
test
dec
and
dec
bound
rclb
scas
fdivl
pop
adc
imul
test
je
pushf
imul
imul
lret
sbb
fidivs
gs
push
cmpsb
scas
adc
cmp
pop
push
dec
repz
js
les
stos
sahf
clc
sub
jno
aad
dec
push
insb
arpl
push
rol
fisttps
sub
test
pop
int
js
scas
dec
pop
jno
ja
mov
adc
stc
mov
or
cld
pop
or
lock
pop
data16
xchg
mov
and
out
xchg
mov
jg
jle
lret
jnp
mov
xchg
shll
cmc
sub
pop
jne
adc
pop
dec
jecxz
inc
hlt
testl
test
gs
xor
or
addl
xchg
out
stos
outsb
mov
xchg
or
add
sbb
hlt
aas
out
push
jbe
cmp
adcb
inc
push
rolb
aam
mov
ljmp
add
cmp
out
mov
in
jo
adc
xor
jae
mov
xchg
notl
dec
fstl
xchg
test
pop
add
sub
gs
cmp
mov
loop
inc
jbe
xchg
aad
lea
jg
fistps
pop
cwtl
sbb
scas
cmc
je
cwtl
iret
push
mov
mov
rolb
loopne
arpl
jno
out
jbe
or
cmp
xchg
out
outsb
pop
imul
jae
push
sub
jae
xor
or
push
aaa
pop
or
jp
insb
xchg
jecxz
cli
xor
sbb
jecxz
pop
orl
rcrb
dec
pop
outsl
clc
aas
pop
xchg
icebp
into
mov
push
xacquire
sbb
mov
lret
fs
fwait
pop
popa
jo
cs
pop
mov
and
sbb
jne
inc
fwait
scas
adc
sti
dec
dec
lods
xchg
jl
xchg
pusha
bound
sub
jne
outsb
push
je
xchg
dec
sbb
inc
sub
pusha
shrb
jbe
or
jne
inc
pop
sbb
out
mov
and
pop
mov
xchg
inc
and
stos
fs
or
mov
pop
and
and
and
mov
push
stc
mov
mov
sbb
fisubs
out
out
jp
adc
adc
and
jne
jns
pop
xchg
inc
push
movsl
mov
xchg
fidivrl
repz
bound
cmpsb
jne
leave
dec
mov
adc
jae
sbb
and
xor
sbb
imul
pop
and
scas
lods
fdivr
mov
add
ret
js
lds
int3
in
sbb
jno
leave
cmp
jbe
sub
push
jecxz
ss
or
sub
stos
or
ret
mov
add
jge
movsb
test
movsl
imul
std
xor
test
ljmp
dec
sub
mov
cmp
sahf
loope
mov
mov
roll
data16
dec
orb
jp
push
pushf
dec
jmp
push
push
xchg
imul
out
je
adc
sub
and
add
xchg
pop
repnz
inc
cltd
pop
fxch
out
les
cmp
pop
xor
pop
mov
scas
sarb
jne
or
jb
andl
jge
add
add
jmp
enter
push
mov
pusha
adc
movsl
frstor
mov
lds
pop
lcall
mov
sub
mov
test
movsb
scas
xor
mov
lea
int3
in
mov
ljmp
shrl
push
jmp
lds
pushl
mov
add
push
inc
push
sti
test
aas
dec
arpl
loopne
push
jmp
outsl
sets
movsb
inc
dec
mov
xlat
cld
push
in
inc
enter
mov
cld
mov
adc
insl
push
and
aas
jp
popa
cltd
lds
cmp
out
push
fs
int
add
mov
nop
std
lods
pop
sub
inc
outsb
jg
inc
xchg
inc
out
dec
mov
mov
mov
dec
push
mov
or
imul
sbb
inc
and
mov
in
fcmovu
in
mov
mov
mov
and
test
orl
insb
mov
mov
pop
rdrand
fdivs
out
jp
mov
sub
mov
call
push
mov
outsl
sbb
adc
pop
sti
mov
outsb
int3
cmp
xor
push
dec
into
divb
pushl
fsubrs
test
adc
adc
repz
adc
fnstcw
daa
jae
cmp
lds
popa
adc
stos
outsl
mov
in
cmp
pusha
addr16
lds
mov
jae
xchg
shll
xor
mov
sub
pop
push
jmp
cltd
push
xor
adc
mov
out
ljmp
test
iret
mov
enter
push
fldcw
jb
ret
aam
sub
push
rcr
add
jns
sbb
or
sbb
mov
loope
sub
sbb
mov
cld
xchg
repz
sbb
dec
mov
aad
xor
cwtl
and
cmpsl
jl
lock
jl
mov
fsubrs
or
loopne
xchg
cmp
push
repnz
test
cmp
cli
mov
cmpsb
xor
sub
sub
push
mov
aam
sbb
repnz
rcr
adc
xchg
push
popf
and
ljmp
sbb
xchg
rcrb
inc
arpl
xchg
sub
fdivrs
scas
sbb
cmp
cmpb
and
jl
bnd
loop
insb
xor
pushf
cli
mov
cli
inc
sub
sbb
sbb
inc
cmp
mov
jle
and
push
jns
nop
call
xor
enter
mov
push
insl
repz
mov
jg
jbe
dec
mov
in
mov
in
scas
cli
negl
cmp
cmp
mov
enter
cmp
repz
pop
fcmovnbe
faddp
aaa
mov
stc
mov
repz
jmp
clc
stc
movsb
mov
js
lret
fcompl
xchg
call
xchg
leave
pushf
push
jecxz
jb
dec
mov
in
jmp
insl
fwait
shlb
sbb
aad
push
cld
xorl
out
es
mov
inc
mov
ret
data16
jb
dec
xor
dec
out
adc
not
xor
ljmp
mov
mov
jle
cmp
or
repnz
lods
mov
add
mov
push
dec
push
aaa
sub
xchg
in
popf
testb
out
sub
pop
mov
mov
sub
inc
lock
xchg
js
mov
inc
mov
out
add
sub
jbe
pop
cwtl
sub
jb
mov
cmp
nop
cwtl
in
xchg
jbe
lock
clc
pop
dec
mov
std
cmpsb
mov
adc
call
daa
daa
sub
movsl
mov
and
add
cmp
aam
inc
or
mov
lock
ja
pop
negb
incl
jp
ror
jo
inc
fisttpl
jle
movsl
bound
jo
das
jg
and
mov
dec
sti
outsl
sbb
cmp
cltd
sbb
xchg
dec
addr16
call
mov
dec
repnz
cmpsl
ret
daa
and
jg
push
mov
mov
or
add
jnp
gs
outsl
leave
xor
loope
popa
enter
shll
in
cltd
pop
jp
sbb
or
fwait
rcl
arpl
sbb
aad
mov
jmp
mov
lock
sbb
int3
rclb
and
and
push
ja
inc
sub
rolb
xchg
clc
xorl
mov
and
movsb
xor
push
rcl
dec
inc
cli
into
in
bound
lea
jns
dec
xor
enter
sbbl
mov
sbb
pushf
fsubp
dec
mov
lock
enter
fdecstp
lea
jp
sbb
sub
adc
sahf
push
loope
ljmp
lret
dec
cmp
jb
aaa
fyl2xp1
pop
out
dec
popf
fs
mov
sbb
sbbl
popa
sbb
mov
pop
pop
loop
dec
xor
xor
jmp
xor
insb
jmp
xchg
sbb
add
test
xchg
add
stc
xchg
inc
adc
cwtl
inc
dec
ret
mov
xor
xchg
pop
imul
ds
jnp
or
repz
fimuls
popa
dec
in
and
bound
lret
push
cmp
notl
cmp
pop
fnsave
clc
push
add
pop
cmp
fwait
mov
loop
ficoms
inc
fcom
insb
outsb
test
mov
insl
and
jmp
sahf
sub
movsl
aam
repz
ljmp
inc
adc
inc
movsb
add
sarl
mov
pushf
in
add
add
fs
sahf
jae
mov
sub
pop
mov
or
or
xchg
xchg
lcall
ds
shlb
mov
movsb
push
flds
outsb
lret
add
mov
and
ficoms
inc
jno
jb
rcrb
leave
divl
push
subb
jnp
stos
fbstp
imul
in
out
or
mov
stos
cmp
dec
mov
jbe
adc
shrl
mov
mov
cmpsl
and
jno
pop
std
adc
lcall
frstor
cmp
mov
or
je
fstps
add
andl
arpl
jge
or
mov
insb
adc
aas
frstor
xchg
cld
lret
add
dec
fadds
cmp
daa
rolb
adcb
pop
cmp
dec
jns
push
leave
sbb
rolb
sbb
repnz
sbb
pop
mov
dec
shrl
dec
mov
adc
outsl
or
mov
out
mov
addr16
lea
ficoml
mov
mov
adc
movsl
lods
insl
cmp
cmp
or
faddl
jge
inc
out
inc
jb
mov
add
rorb
stos
sub
push
sub
xchg
and
dec
jg
icebp
cmp
push
out
and
dec
out
int3
push
cmp
int3
add
xchg
mov
or
sub
dec
notb
pop
ljmp
aam
stos
dec
inc
outsl
adc
push
out
and
xchg
or
in
xor
cli
repz
mov
lcall
cmpsb
pusha
adc
pusha
push
add
dec
rorb
nop
sub
bound
hlt
movsb
xor
cmpsl
add
test
sbb
in
pop
stos
pop
call
mov
pop
jb
cmp
shlb
mov
pop
push
into
push
pusha
pop
inc
pop
mov
jnp
pop
das
sub
or
push
cmpsl
adc
xor
shrl
bound
out
mov
aas
sbb
icebp
push
jmp
call
push
mov
sti
xchg
loop
test
sbb
and
int
arpl
outsb
lcall
ret
sti
push
add
out
cmp
inc
adc
sub
fcmovb
in
ds
fsubrs
int3
jno
pushl
mov
shlb
dec
inc
call
stos
repnz
pop
scas
sub
pop
cmp
pop
cmp
fwait
inc
pop
insl
stc
mov
adc
jle
jns
jge
adc
xor
xchg
sbb
or
sub
test
fxtract
lds
xorb
xchg
xor
call
push
pop
fbstp
and
es
out
shrl
std
bound
mov
xchg
xor
ljmp
daa
sar
adc
mov
adc
adc
divl
adc
inc
adc
adc
xor
repz
cmpb
push
sub
fldenv
jbe
lea
adc
mov
ficoms
ljmp
push
pop
push
ja
pusha
xor
jnp
fnsave
mov
push
push
dec
ljmp
inc
mov
adc
cmp
pop
adc
pop
and
push
mov
xchg
and
jne
lahf
jnp
enter
fcmovu
ret
mov
cmp
dec
sbb
cmp
faddl
jb
fisubrs
lret
and
add
mov
sbb
push
cltd
int
dec
jb
sub
orb
adcl
leave
sti
fwait
adc
mov
es
addr16
push
mov
bound
inc
push
das
loope
inc
call
das
cld
xchg
inc
xchg
jne
adc
pushf
mov
ljmp
pusha
outsb
sbb
jb
insl
push
push
push
jmp
pop
jl
push
popf
decl
int3
sub
mov
sahf
cwtl
imull
dec
mov
mov
cmp
ffreep
add
sbb
mov
test
cmp
test
add
xor
in
push
fidivl
mov
loop
mov
inc
xchg
cmc
sub
push
push
bound
inc
pop
insl
inc
cltd
sub
jo
ja
clc
or
push
and
push
lea
jl
icebp
and
or
pop
adc
mov
inc
mov
in
mov
cmp
outsl
sub
aam
fadds
dec
es
mov
jle
push
test
fisubrl
lret
negl
xchg
ljmp
adc
push
imul
mov
lahf
ds
adc
insb
sbb
or
cli
in
and
sbb
mov
cld
xor
inc
jb
pop
stos
or
loop
aam
inc
int
cld
xor
add
jnp
lds
cmp
xchg
daa
cld
and
add
sahf
jle
fistpll
add
gs
xchg
pop
push
stos
rcll
div
jl
mov
xor
sti
shr
or
sti
fwait
or
sbbl
out
cmpsl
shrl
ret
push
push
and
mov
xchg
xchg
roll
sbb
daa
inc
xchg
negl
add
dec
jle
sbb
cli
mov
pop
jb
sahf
fisubrl
fs
push
push
es
ja
std
or
aas
lret
ret
sbb
divl
xchg
aaa
int3
clc
testl
inc
arpl
or
sbb
push
add
lcall
push
and
dec
int
lcall
scas
gs
nop
aaa
dec
xor
xor
fs
in
scas
xor
in
xor
pop
arpl
test
mov
pop
imul
mov
cs
dec
imul
dec
pop
aad
dec
out
popa
xchg
xchg
je
into
push
mov
push
inc
cmp
aaa
movsl
push
adc
nop
jmp
mov
inc
sarl
jnp
fistpl
add
xor
scas
jbe
lret
xor
xchg
xchg
or
pop
js
adc
mov
push
xchg
pop
sbbl
fsubs
out
lret
mov
jl
fimuls
in
mov
xchg
aam
push
mov
push
cli
cmp
xor
scas
jns
mov
xchg
push
loop
sarl
cmp
mov
adc
add
and
mov
push
movswl
mov
sbb
shrb
xchg
dec
sbb
adc
inc
mov
add
xor
aam
pop
dec
mov
adc
dec
neg
xchg
xchg
sub
mov
adc
enter
add
sbb
inc
sbbb
scas
jnp
sbb
xchg
cmp
jnp
mov
and
movsb
xchg
test
pop
je
inc
lahf
aas
gs
jb
rcrl
jge
and
pop
insb
mov
add
test
loope
data16
lods
cmp
int
dec
sar
fwait
loopne
ret
lods
fwait
xchg
cmc
jp
adc
push
fcom
out
jp
inc
cltd
rcrb
fcmovne
das
stos
lcall
cld
xorb
xor
push
fisttpl
lret
dec
lds
or
ja
mov
cmc
adc
fs
adc
roll
jb
mov
xchg
jmp
add
mov
fiadds
or
push
xchg
cli
sbb
imul
icebp
leave
into
inc
lock
stc
popa
movsb
add
mov
loope
lret
bnd
test
adc
orb
xor
rcrl
lahf
mov
insb
repz
test
ja
mov
into
fcmovnbe
or
arpl
mov
sbb
pop
pop
cmp
mov
jmp
sub
in
dec
out
lahf
clc
ja
rcr
adc
sbb
sbbl
sbb
adc
ret
jmp
pop
ret
dec
push
pop
sub
sbb
cvtpi2ps
adcl
pop
push
int3
rcr
cmp
cmc
call
das
sbb
inc
sub
cmp
xchg
xchg
jp
mov
imul
rorb
inc
push
mov
call
xchg
jb
popa
mov
push
jecxz
and
mov
jp
push
xchg
insl
jbe
adc
or
inc
pusha
rolb
xchg
int
cmp
mov
dec
jae
jl
mov
push
movsb
push
aas
fadds
int
icebp
imul
lods
sbb
and
lods
ret
xor
mov
jg
xor
arpl
insl
in
add
and
mov
pushl
lahf
and
hlt
xchg
iret
nop
sbb
mov
cmp
add
or
pop
faddl
shlb
gs
in
sbb
add
sub
push
fistpll
dec
sti
inc
inc
and
das
lahf
aam
cmp
sub
cmp
int3
shr
mov
lods
mov
js
adc
mov
jnp
out
mov
pusha
xchg
cmp
jge
xchg
lock
in
andb
lahf
out
jb
out
adc
cmc
xchg
sbb
ret
stos
push
add
push
imul
mov
pop
adc
lock
les
jae
adc
sbb
testl
push
cmp
stc
and
shl
sti
sbb
aaa
notb
xchg
push
xor
inc
pop
icebp
stos
ret
movsb
mov
rorl
push
dec
add
xor
push
or
and
test
push
and
popa
add
aad
repnz
popf
pop
sbb
mov
leave
or
dec
jbe
jnp
clc
insl
addr16
movl
inc
adc
repnz
lahf
out
sub
rcl
outsb
cwtl
pop
stc
jmp
xor
fisttps
or
xor
mov
lods
mov
mov
mov
mov
sbb
retw
and
inc
repnz
dec
je,pn
sbb
sbb
xor
repnz
pop
and
push
mov
pop
xchg
je,pt
pop
or
dec
adc
sub
pop
xchg
adcl
jb
jns
inc
xor
pop
xor
pop
or
jmp
mov
mov
iret
push
insb
sub
nop
js
ss
xlat
pop
mov
sub
in
test
iret
imul
hlt
mov
ds
movsb
scas
rcrl
add
outsl
sub
sub
xchg
mov
stos
sbb
imul
push
push
sbb
xchg
mov
and
mov
sbb
mov
sti
dec
inc
inc
in
adcl
into
call
mov
ljmp
mov
push
and
or
fs
xlat
jmp
pop
ficomps
gs
xor
push
mov
dec
adc
shll
addb
inc
out
mov
test
rcrb
shl
adc
mov
fistl
loopne
fmul
das
jmp
rcr
sahf
or
xchg
xchg
repz
cmpsl
sahf
dec
cmpb
mov
test
sbbl
js
popf
jle
xchg
push
adc
mov
push
jo
pop
cmpsb
fldl
lds
or
scas
or
inc
adc
das
hlt
fistl
xlat
mov
hlt
inc
je
sub
in
mov
push
cwtl
push
mov
sbb
sbb
sub
gs
and
iret
test
int3
jmp
pop
mov
jg
push
push
jg
pop
xchg
sbb
push
subb
cmp
ret
fwait
js
mov
and
cs
dec
mov
out
mov
xor
mov
mov
jbe
pop
mov
sub
pushf
sbb
cmp
icebp
xchg
arpl
enter
push
pop
cmc
stos
jno
leave
xchg
insb
ret
push
xor
mov
jo
shrb
sub
bound
nop
inc
ret
jns
sub
sbb
push
push
mov
cmpsl
add
pop
adc
sub
repz
fadd
dec
dec
push
leave
sti
jbe
out
xor
mov
or
xor
data16
mov
xlat
cmp
push
out
dec
fldenv
rorb
bound
cmp
movsl
mov
jnp
or
mov
push
xor
mov
repz
aad
xor
lea
dec
popf
js
cmc
inc
ss
pop
hlt
imul
loopne
inc
mov
mov
aaa
add
ds
mov
std
push
and
fimuls
mov
sub
je
in
shrl
mov
shl
and
dec
mov
filds
inc
mull
scas
cmc
psubusb
push
sbb
ds
cmc
test
cmpsb
and
sahf
shll
test
and
sbbl
pusha
jl
test
cwtl
in
sti
les
fisubrl
xchg
jo
loop
jp
push
mov
mov
mov
adc
jae
sbb
outsb
push
xchg
imul
xlat
adc
cmp
es
cltd
in
lret
mov
and
les
mov
push
xchg
cld
xchg
int3
xor
jmp
sub
push
icebp
mov
outsl
xchg
mov
fbstp
rcr
loope
or
mov
sub
or
icebp
das
aam
jno
pop
mov
mov
negl
jo
push
push
lods
xchg
lea
cmpsb
xor
mov
lods
scas
pop
loopne
mov
fnsave
xor
movsl
push
xor
sub
ret
ja
ret
lret
jl
iret
sub
ja
push
cltd
pop
mov
jne
stc
and
rclb
enter
test
sarb
sbbb
xchg
movb
cmp
mov
fidivs
mov
leave
fcoml
pcmpeqd
adc
popa
js
int3
dec
out
lahf
mov
shrb
fldenv
shlb
adcl
mov
bound
testl
rcrb
out
mov
mov
jg
not
inc
xchg
and
adc
add
jg
cmpsb
sub
fstpl
sub
cmc
sbb
dec
and
xchg
jns
mov
mov
adc
mov
mov
cli
shl
mov
cld
mov
es
sub
xchg
scas
scas
cwtl
sub
das
xor
mov
pop
jl
jo
push
ljmp
fiadds
xor
cmp
ss
in
cmp
cwtl
mov
repnz
or
inc
fidivs
rorl
jbe
sbb
mov
jl,pn
lock
mov
sbbb
outsb
pusha
jne
or
cmpsb
adc
outsb
and
repz
aas
cs
push
lcall
inc
cmp
in
cmp
lock
pop
and
sub
push
int3
icebp
in
lds
rclb
movsb
jl
and
mov
clc
jl
sbb
test
in
or
add
add
pop
cltd
movsl
xor
xchg
cmpl
ljmp
sbb
sub
mov
movsb
add
fmull
test
shlb
push
enter
testl
movsb
leave
mov
call
clc
aam
incl
xchg
jp
dec
inc
push
cmp
lret
mov
shl
mov
sahf
mov
cli
lcall
xchg
and
scas
sub
xor
out
pop
xchg
xchg
je
or
jne
adc
test
cmc
or
or
cmp
jne
adc
cmp
inc
lret
or
sahf
xchg
icebp
dec
adc
sbb
daa
sub
jb
mov
repz
mov
or
jl
out
push
and
xchg
sbb
lahf
loop
fisubl
sub
js
mov
lret
xchg
jnp
dec
scas
movsb
lds
cs
out
add
aad
sub
xchg
inc
es
jle
cmp
loop
aad
call
fwait
dec
test
les
xor
dec
mov
mov
shl
cmp
in
or
test
and
addl
and
add
mov
mov
inc
xor
pusha
push
xchg
div
aam
lret
jle
xor
add
sti
mov
lock
int
decb
leave
and
cmp
pop
push
xor
leave
inc
lods
lea
add
test
insl
xchg
xchg
mov
rorl
pop
je
add
ret
repnz
leave
push
xchg
mov
and
fistl
pop
pop
push
add
cld
cltd
repz
mov
xlat
in
mov
fs
inc
mov
dec
dec
lds
adc
imulb
adcl
cmp
out
mov
or
sbb
out
mov
rolb
jmp
ficoms
in
gs
int
test
mov
ret
sub
ret
aaa
imul
fnstenv
and
and
ret
dec
or
or
aam
aad
stc
enter
push
test
pop
inc
xchg
hlt
adc
cmp
fdivrs
out
rcl
mov
gs
dec
fldcw
adc
add
cmp
jecxz
cmc
push
inc
fisubs
int3
xor
dec
xor
int
and
outsl
imul
jae
insl
inc
sbb
std
or
or
adc
imul
mov
mov
mov
xchg
arpl
scas
cmpb
xorl
movsl
data16
js
inc
lea
scas
subb
ss
fisttpll
dec
or
sbb
fisubrl
dec
jb
loope
mov
nop
sub
xchg
pop
jge
lcall
dec
pop
jbe
pop
xor
clc
test
fs
jbe
cmp
add
jge
shl
in
mov
adc
pop
lahf
xchg
aam
lret
mov
inc
cmp
adc
stc
bound
aas
or
push
cmpsl
iret
std
out
or
pop
mov
fbstp
push
js
addb
negl
inc
test
nop
stc
jg
out
mov
mov
mov
stos
xlat
or
push
dec
fcoms
test
add
pop
jp
xlat
sbb
stos
negb
xchg
pop
mov
or
imul
out
sub
push
in
sub
adc
xor
in
pop
xchg
rorl
test
les
addr16
jae
addr16
test
mov
fwait
cld
push
movsb
loop
int3
sbb
cmp
lea
jae
and
jecxz
test
or
add
xchg
rorb
lods
cmpsb
negl
fs
lret
mov
xchg
loope
iret
vmovlps
dec
cmc
mov
sbb
mov
aas
call
pop
jle
add
mov
fisttpl
cld
xor
mov
push
insb
pop
sbb
and
cltd
ret
sub
pop
cmpsb
movsb
inc
je
scas
roll
mov
xlat
iret
xor
jle
jae
shlb
sub
insb
push
lods
pop
push
int3
out
in
ljmp
jl
inc
in
movsb
sub
or
out
dec
inc
xchg
mov
push
dec
insb
adc
movsl
xchg
xchg
cmpsb
in
or
cli
cmp
adc
icebp
xchg
daa
iret
sti
scas
dec
fsubrl
mov
xchg
loop
ffreep
mov
hlt
enter
xchg
lds
ss
xlat
or
loop
sbb
jno
mov
decb
cmp
xchg
cmpb
or
inc
mov
xchg
dec
add
adc
loope
mulb
dec
fstl
stos
add
rclb
and
sbbb
pop
mov
pop
lret
sbb
leave
mov
cwtd
or
int
pop
loopne
scas
popa
insl
dec
sbbl
repz
pop
xchg
and
negl
aaa
out
cmp
shlb
mov
xlat
push
add
cmpsl
loop
cltd
xchg
or
daa
in
insl
gs
fstp
push
pop
aam
in
mov
xor
sbb
or
add
cmp
push
stos
push
enter
sahf
or
fidivrs
mov
outsl
sub
inc
inc
and
aad
filds
jb
outsl
fistl
fadds
loope
inc
sub
in
outsl
popf
sub
mov
test
dec
jb
lahf
leave
sbb
jmp
mov
mov
add
inc
pop
test
jbe
fcom
sbb
sub
mov
push
and
scas
jo
aas
add
clc
enter
subl
pop
aaa
xchg
aaa
je
int3
jb
pop
and
push
mov
fisubrl
js
ficoml
push
cld
mov
xlat
push
dec
pop
ficoml
out
lret
mov
ss
loop
push
icebp
xlat
insl
sbb
les
lods
fwait
push
outsb
hlt
es
les
mov
mov
mov
sahf
fidivrs
and
mov
daa
or
sbb
aas
pop
sub
xor
xor
cmp
bnd
fs
mov
dec
les
scas
repnz
mov
loopne
and
lds
and
cmpsb
push
jp
inc
pop
inc
cmp
es
jns
in
adc
push
xchg
rclb
insl
pop
cmp
pop
or
and
stos
jmp
int
mov
xor
jne
loop
aad
add
xchg
mov
arpl
dec
jmp
repnz
push
xor
int3
aaa
stos
push
fs
cmpsb
sub
clc
mov
inc
in
push
fcoms
lret
sbb
dec
mov
imul
xchg
fadds
fadds
add
in
insl
or
and
loope
add
mov
xor
add
xor
adc
int3
lcall
sbb
popf
xchg
cwtl
and
and
icebp
mov
shlb
les
lcall
or
sbb
shl
pop
cmc
loopne
push
xlat
and
push
enter
cmp
pop
test
les
jnp
repz
xor
jge
sbb
push
loopne
pushf
mov
mov
cwtl
add
shrb
in
mov
dec
adc
test
mov
movsl
jno
mov
sub
xchg
in
push
repz
mov
mov
jmp
sar
sahf
or
pop
dec
es
inc
pop
in
mov
fs
out
lret
pop
std
jno
pop
dec
xchg
xchg
jbe
ret
loope
cs
sbb
sbb
in
fimuls
xchg
inc
mov
xlat
dec
popf
push
jne
inc
mov
xor
sbb
adc
inc
cmp
add
scas
in
loope
add
shrl
jg
mov
xor
add
mov
push
lcall
xchg
xor
pop
push
das
icebp
cli
push
jno
xchg
push
inc
btl
ss
jg
sbb
mov
jno
push
cmp
mov
mov
sub
pop
stos
xchg
loope
xor
pop
jmp
and
shl
cmpb
push
fsubs
movl
adc
adc
cmpsl
js
mov
ret
ja
mov
xchg
lock
pop
divb
imul
add
stc
int
and
xchg
mov
leave
iret
mov
cmp
div
je
ret
js
cmpb
lcall
xchg
add
xchg
xchg
aam
daa
jnp
in
iret
in
imulb
inc
and
jno
test
ds
mov
pop
jnp
imul
and
cmc
mov
fs
mov
xchg
fwait
call
out
inc
dec
push
and
je
ror
mov
jecxz
addl
inc
push
rcl
cli
inc
push
push
shl
mov
push
pop
ret
pop
xlat
mov
sbb
insb
dec
xchg
add
push
fnsave
jecxz
cmp
pop
mov
mov
aad
jl
mov
jmp
ret
sbbb
xlat
jl
or
pop
push
cmpsb
push
and
fucomip
and
addl
or
cmp
push
dec
rcl
push
fcmovnb
jg
push
dec
scas
inc
xchg
ljmp
ja
fs
inc
jne
rolb
fs
daa
or
inc
xchg
inc
inc
cmpsb
sbb
cld
movsl
outsl
adc
repnz
ficoms
scas
sub
push
jg
mov
add
add
and
sbb
sub
fsubs
push
cmp
clc
jo
lret
ds
in
out
jb
lods
sub
sub
mov
xor
jmp
jl
mov
movsl
adc
xchg
nop
adc
notb
sub
bound
gs
or
dec
and
fucomip
mov
jb
idivb
inc
sbb
xlat
sahf
out
fwait
cmp
sub
or
push
push
inc
pop
leave
jp
scas
push
add
shll
and
xchg
jo
aas
xor
addr16
sbb
push
sbb
adc
inc
mov
cmp
add
mov
or
push
int3
gs
mov
push
jp
xchg
ja
movsb
add
dec
loop
pop
inc
les
xchg
popa
sarb
adc
push
fimull
das
xchg
xor
xchg
push
clc
xor
mov
fs
mov
repnz
and
or
aad
push
leave
jnp
push
popf
lock
jle
cs
xchg
adc
addr16
lcall
cmc
enter
mov
or
push
jecxz
mov
imul
stos
push
add
das
lret
idivl
addb
mov
test
aaa
sub
test
rcrb
mov
mov
mov
xor
out
lock
test
add
imul
xchg
dec
pop
call
outsb
dec
out
xchg
call
push
add
ficoms
jg
lock
or
into
addb
test
outsl
testb
testb
jae
cmp
jb
dec
in
stos
stos
popf
push
add
orl
xchg
jbe
cmc
pop
shl
jmp
xchg
dec
outsl
negl
pmullw
sbb
mov
sbb
cmp
mov
adc
shlb
dec
andl
fdivs
into
or
call
imul
add
enter
xchg
outsl
adc
test
mov
cltd
pop
add
cmpsb
addr16
ss
xor
push
mov
and
icebp
cmc
inc
xlat
jp
loopne
push
les
xchg
hlt
lods
rcr
std
mov
dec
or
shrb
pop
cmpb
sub
lock
in
jp
inc
xor
js
dec
mov
adc
adc
shrb
inc
jb
enter
push
jl
cmp
ret
nop
cmp
pop
cwtl
jmp
pop
cmpsl
push
imul
popa
mov
popl
lcall
call
push
out
arpl
leave
fstpl
je
mov
cmpsl
mov
push
lahf
aam
mov
je
dec
aam
jge
fdivr
out
jge
fwait
push
jle
int
mov
popf
repnz
leave
in
mov
mov
adc
cmp
ret
add
ss
adc
mov
mov
repnz
pop
xor
jge
inc
sbb
lahf
adc
es
aas
dec
scas
ss
rclb
lea
int3
and
jecxz
lret
pop
adc
fabs
in
aas
cmp
inc
push
mov
jmp
add
lret
mov
hlt
inc
dec
cmc
insl
pop
stos
sbb
nop
ljmp
jg
loopne
xor
pusha
movsl
aad
mov
inc
jnp
out
mov
fmull
cmp
faddl
mov
popf
je
adc
sub
in
aad
mov
ljmp
xchg
fmull
les
add
and
imul
and
add
test
sbb
je
push
popa
lock
cmpsb
in
push
daa
call
repz
xchg
mov
mov
sub
cld
imul
ljmp
div
dec
xlat
lods
mov
and
sbb
mov
aas
dec
pop
leave
jl
cmc
jl
push
push
sbb
cmp
data16
xlat
cmp
sbb
movsb
xchg
jne
xchg
jns
in
insb
or
cmp
xor
sbb
xchg
scas
jno
xchg
pop
sub
lds
movsl
lock
jo
insl
icebp
or
fs
pop
out
pop
adc
mov
add
shl
mov
fbld
loopne
ret
popf
das
imul
mov
xor
xor
je
movsb
jecxz
mov
dec
ret
mov
pop
inc
mul
or
jnp
stos
ljmp
sbb
adc
addr16
mov
or
data16
xchg
dec
push
stos
dec
xor
sbb
sbb
jne
imul
and
mov
push
mov
and
cmp
push
jle
adc
xor
cmp
jge
out
addr16
rclb
sub
pop
push
movsl
fisubl
inc
jmp
adc
add
mov
jno
aad
test
mov
leave
idivl
fidivrl
cmp
sti
cmpsb
icebp
xchg
mov
mov
mov
add
stos
xor
sub
pop
stc
stc
sub
ljmp
arpl
sbb
pop
out
push
push
xor
andb
inc
xchg
test
push
aad
outsb
xor
cmpsl
ja
lea
push
scas
mov
test
jp
cmp
inc
in
rclb
rcll
cmp
stc
shlb
cmp
push
or
les
pusha
cmpsb
fidivrs
sub
int3
mov
cs
adc
adc
cli
rorb
xchg
test
arpl
icebp
test
jbe
dec
aam
jg
gs
xorb
jno
push
rcrb
or
lods
cmp
pop
sbb
in
push
dec
fists
scas
popf
es
data16
jecxz
scas
jae
sbb
dec
lods
inc
stos
pop
es
out
sub
mov
mov
popa
loope
fidivs
inc
sub
dec
xor
mov
pop
push
push
jl
and
jo
pop
rorb
mov
loope
fsts
push
daa
add
push
addr16
push
fwait
xorb
mov
dec
aas
jl
repz
sbb
idiv
or
lods
imul
sub
call
ret
push
pushf
lsl
xchg
lods
insb
sarb
mov
sbb
inc
xchg
xchg
xor
mov
ljmp
pop
adc
xor
les
xchg
popa
xor
insl
adc
test
sub
or
sbb
fidivs
scas
xchg
idivb
adc
ja
mov
add
inc
and
test
pop
aam
notl
stos
outsb
rorb
lahf
pop
xchg
insl
sbb
mov
repz
push
xchg
jno
cmp
pop
cli
test
or
subl
outsb
push
mov
pop
testl
or
pop
push
inc
pop
jb
dec
push
or
mov
xor
inc
test
jecxz
dec
popa
popa
cltd
mov
cmp
rcr
jo
mov
xchg
icebp
mov
testl
nop
movsb
mov
popa
cmp
and
adc
int
xor
out
sub
sbb
repz
sub
or
jp
popa
cmp
stc
or
xchg
fldt
dec
cld
inc
lock
mov
xchg
shl
jecxz
popa
test
mov
jnp
mov
arpl
xlat
dec
int
push
scas
add
push
and
rcrb
lahf
cltd
cld
mov
mov
sub
int
pop
or
sbb
negb
xchg
mov
cli
flds
adc
imul
mull
push
aaa
addr16
cmp
mov
or
out
js
sbb
outsb
loopne
fistl
mov
repz
add
dec
test
cmpsl
jge
cmp
pop
lcall
mov
test
popf
idiv
fmull
std
repz
in
bound
xor
xor
shr
int3
mov
mov
xor
nop
out
lcall
cmp
pop
jg
pop
sarb
pop
cmp
mov
stos
add
push
mov
addb
out
mov
xchg
aad
stc
inc
lds
mov
push
not
mov
mov
xor
daa
jb
into
add
xchg
or
fs
clc
lcall
push
mov
ret
add
cmp
jne
mov
fsub
jns
inc
lock
add
sbb
or
mov
or
sbb
push
mov
es
in
mov
out
inc
or
iret
or
aam
sub
jmp
addr16
dec
lcall
lahf
mov
rcll
daa
add
fldcw
lret
push
jne
loope
mov
jne
cmp
or
mov
fbstp
clc
or
sarb
lock
jae
shll
dec
cmpsl
outsl
mov
mov
popf
push
sbb
int3
in
aad
xor
iret
add
mov
imul
cmc
inc
or
add
fimuls
pop
sub
into
pusha
repnz
aam
dec
adc
loope
adc
and
jnp
fcoml
ds
mov
fsub
sbb
aaa
jp
mov
inc
add
sub
mov
jle
mov
adc
pusha
test
cltd
fstl
stc
or
gs
adc
cwtl
imulb
adc
mov
xor
jl
jne
inc
outsl
cmpsb
rcrb
push
xchg
mov
adc
clc
lods
dec
gs
movsl
loope
xchg
adcl
shrl
fldt
mov
rclb
pop
out
pop
sub
jns,pt
pop
jae
and
push
cs
inc
mov
and
pushf
cld
jmp
out
out
adc
jns
cmp
mov
adc
pushf
pop
test
ret
mov
push
sbb
xchg
movsl
cmp
fcoms
mov
leave
testl
ret
push
inc
leave
lahf
xchg
pushf
push
fstps
pop
push
cmp
mov
sbb
sbb
in
fmull
lea
inc
xor
cs
fstp
sbb
jns
sti
lods
gs
fiaddl
into
js
cmpsl
outsl
rolb
mov
inc
lods
add
aam
aaa
in
mov
icebp
stos
mov
or
insl
sbb
mov
mov
lret
lods
loope
adc
stos
add
mov
inc
or
sbb
js
add
dec
call
popf
shlb
sbb
adc
xor
repz
cmp
hlt
popl
mov
xchg
mov
xchg
cmp
inc
cmp
dec
loop
test
ss
xor
aas
mov
mov
dec
int
xchg
sub
add
jns
and
adc
sarl
repnz
js
or
cmpsl
mov
cmc
test
rolb
out
push
jb
mov
jg
sbb
scas
stc
push
mov
inc
jno
popf
in
or
push
popa
lock
not
xchg
lods
iret
push
loope
adc
and
adc
pop
add
jb
push
das
scas
xchg
negl
lret
and
mov
icebp
jnp
xchg
ret
sbb
test
stc
and
inc
ja
sbb
inc
pop
add
in
xchg
pop
iret
adc
cli
ret
sub
mov
xchg
jae
cmp
out
mov
push
std
inc
pop
imul
sbb
outsb
cmp
or
jecxz
push
xchg
pop
mov
lcall
repnz
mov
inc
jge
inc
xchg
lret
add
dec
inc
outsl
dec
fucom
stc
aaa
mov
sbb
mov
push
push
cmp
std
sti
add
ret
in
cli
iret
les
mov
stos
mov
test
jnp
or
mov
int
ret
aas
jnp
inc
call
lods
lods
jns
dec
mov
call
icebp
xchg
adc
adc
flds
mov
cmc
mov
pop
xor
dec
add
dec
jmp
mov
or
fstpt
add
sbb
js
add
jp
adc
mov
js
dec
scas
jae
xor
push
int3
les
inc
and
xor
out
call
in
js
jmp
or
outsl
sub
push
add
push
inc
daa
push
xchg
movsl
cltd
testl
fwait
push
hlt
mov
xor
rorb
outsl
daa
pusha
data16
xchg
hlt
jg
fdivrl
aam
negb
or
cmp
sub
bts
push
mov
imul
sbb
mov
rcll
sbb
testl
jge
in
inc
mov
mov
mov
jns
stos
hlt
lcall
ffree
inc
daa
popa
mov
shll
mov
mov
dec
xchg
dec
es
clc
push
push
orb
cmp
mov
push
shlb
clc
loopne
xor
mov
mov
xchg
inc
dec
cmp
xor
fdivs
mov
insl
popl
xchg
or
dec
inc
mov
movsb
sbb
insl
dec
ja
jl
cmp
in
je
pop
test
das
lret
sub
xor
push
or
mov
movsl
fwait
mov
pop
cmp
rolb
pop
imul
pushf
mov
movsl
cwtl
pushf
xor
pop
sub
out
scas
test
push
pop
rsqrtps
lcall
test
lds
test
es
stos
adc
jne
add
sub
daa
sub
clc
mov
addr16
test
mov
add
enter
sbb
hlt
pop
rclb
daa
fwait
stos
sbb
jo
adc
jl
dec
or
xlat
shl
xchg
insl
or
ljmp
sahf
cmp
fidivrl
inc
mov
jle
testl
mov
pushf
lods
sub
pop
or
push
sti
mov
frstor
cltd
xor
bound
lods
popaw
pop
clc
aam
add
adc
js
cmp
shl
repnz
enter
mov
mov
loopne
sbb
aam
aas
repz
pop
lret
inc
lcall
into
xchg
sbb
into
dec
mov
shll
mov
inc
and
jns
xchg
mov
mov
add
loope
mov
and
clc
test
gs
jge
test
push
je
lds
dec
push
out
dec
pushf
pop
xlat
aad
push
cmc
fsubp
xor
mov
pop
cmp
ficompl
add
jecxz
andl
xchg
jge
push
jae
aad
sarl
decb
or
jne
jae
sbb
sbb
mov
sbb
xchg
mov
xor
lods
and
pop
movsb
inc
testb
push
aas
adcb
lahf
xchg
rol
cmp
jge
xchg
into
clc
pusha
fistpl
push
test
cmc
idivl
lea
cmp
adcb
mov
pop
arpl
adc
daa
mov
in
lock
mov
ret
mov
xchg
in
xor
mov
test
cmp
mov
dec
push
pop
adc
mov
sub
test
jl
mov
jl
imul
mov
mov
mov
xchg
iret
xor
jg
mov
and
jbe
adc
jb
aaa
add
or
inc
popa
xchg
lcall
nop
and
or
lock
repz
test
add
or
mov
pop
es
mov
bound
aad
into
push
mov
push
mov
sub
push
xchg
das
sbb
and
cmp
jmp
sbb
push
jg
lahf
mov
jo
les
bound
dec
fcompl
fwait
sub
cmp
mov
std
mov
dec
sbb
test
lcall
mov
icebp
rol
dec
add
leave
cmp
pop
mov
or
imul
mov
pop
into
clc
mov
les
out
push
je
mov
outsb
ret
xchg
test
sub
adc
insb
fwait
dec
push
test
mov
imul
or
jbe
ds
mov
jo
idivb
fmuls
fldt
fidivl
jle
push
jb
inc
repnz
mov
cmp
stos
and
cmp
pop
pop
js
jb
scas
pushf
repz
cmc
mov
xchg
push
push
movsb
lcall
push
clc
cmp
sbb
dec
cmp
stc
fsts
rcll
movsl
andb
sub
jmp
mov
aas
and
mov
inc
nop
pop
mov
dec
jp
loopne
jns
nop
xor
xor
shrb
jb
inc
jo
xor
or
sti
mov
add
cmpb
lret
dec
cli
jg
adcl
imul
lods
mov
and
out
test
loope
pop
mov
ljmp
xchg
xchg
cmp
aam
cmc
cld
sub
add
xchg
fwait
int3
dec
sub
sub
add
xchg
jecxz
ss
outsb
aas
cmp
xchg
add
int3
leave
pop
stc
stos
xor
sbb
imul
push
ret
inc
cmovle
outsl
dec
xchg
mov
shrl
mov
sbb
inc
ljmp
vpcmpeqb
adc
inc
addr16
icebp
mov
jno
jae
aam
les
fdivs
jle
jne
pop
sarl
inc
std
jns
loop
pop
int3
mov
lret
arpl
orb
imul
inc
cmpsb
push
fstpt
cmpsb
insl
jge
loope
fnstsw
cs
mov
das
jae
sub
int3
pushf
or
xor
cltd
adc
nop
rcr
jl
cmp
in
push
lods
test
in
stos
pusha
inc
adc
cwtl
push
movlps
lods
mov
push
addb
fisttpl
adc
orps
clc
fidivs
cmp
es
push
xor
out
mov
cli
fadds
stos
aas
out
mov
ja
mov
push
cmpsb
mov
add
test
jle
insb
fwait
sub
aam
dec
cli
or
movsl
pop
adc
xchg
imul
inc
mov
mov
cli
lret
stos
popa
sub
pop
lret
pop
rcr
sahf
push
cmc
inc
jecxz
ljmp
sbb
and
dec
jp
sbb
xor
sbb
frstor
outsb
not
aas
imul
faddl
out
out
cmp
stos
xor
add
xchg
or
nop
enter
adc
jl
repnz
or
cmc
addl
imul
fs
enter
add
push
jno
push
call
adc
mov
xchg
lahf
ds
push
ret
push
mov
inc
dec
mov
lret
out
psubq
fstpt
stos
sub
test
jne
dec
add
xchg
mov
cmp
and
lock
das
addr16
adc
enter
xchg
push
xchg
decb
xor
push
mov
test
add
adc
mov
lahf
jle
pop
data16
les
xorl
or
jnp
fstpt
inc
repz
jns
and
sti
imul
stos
fwait
int
cli
imul
mov
pop
mov
imul
xchg
sbb
stc
outsb
or
pusha
scas
inc
sub
jg
out
fldt
in
movsb
in
inc
pcmpgtb
notl
sbb
sahf
dec
lret
jp
xor
and
jno
scas
scas
fadd
push
sub
mov
add
dec
push
adc
and
jmp
jmp
int
add
push
js
add
sbb
cmp
insl
out
mov
pop
and
and
dec
cmp
sbb
add
sub
ret
leave
loop
ret
lds
pop
sbb
xor
cwtl
adc
dec
popa
test
cltd
sbb
ja
out
cwtl
push
das
int3
cmpsb
mov
negb
mov
mov
push
mov
push
sti
sar
jp
inc
or
nop
push
enter
push
pop
jno
in
or
daa
or
cmp
loopne
add
pop
jae
stc
and
mov
popa
mov
cli
cwtl
rcll
loop
lret
cmpsl
pop
push
rol
repz
outsl
movsl
insb
lods
loope
jns
jecxz
inc
movsl
adc
shl
push
test
dec
xor
lret
mov
divb
loope
lahf
rorb
mov
jo
adc
rorl
fwait
dec
aaa
sub
xor
fdivl
adc
xchg
les
ret
jnp
sub
add
push
movsl
and
mov
sar
das
ret
lcall
loop
jle
les
or
mov
sbb
arpl
divb
adc
adc
jb
out
xchg
std
ret
or
inc
test
pop
sub
stc
outsl
jb
dec
aas
cmpsb
sub
xchg
ror
lahf
sub
inc
xchg
enter
adc
sbb
xchg
add
adc
cmp
fistps
push
mov
sub
fimull
repz
jnp
sub
lods
inc
fisubrl
or
loop
xchg
or
mov
xor
mov
enter
ja
fcoms
addb
lock
in
jle
sbb
and
and
ss
or
and
int3
fwait
cmc
out
das
cmp
test
inc
andl
adc
or
adcb
loope
repnz
test
pop
inc
inc
jge
enter
cmc
gs
jae
in
not
adc
in
repz
or
sub
adc
dec
movsb
push
sub
or
dec
aam
pop
hlt
adc
mov
repnz
sub
jp
out
mov
push
jns
mov
mov
jg,pt
sahf
xorb
jl
xor
fnstsw
adc
xchg
sub
cmpsl
stc
bound
dec
rolb
mov
repnz
mov
fdivs
mov
shlb
mov
insb
xchg
push
in
rcll
mov
add
lahf
or
nop
jnp
cmpsl
mov
sub
jnp
cmc
xor
push
sbb
jle
push
pushf
sub
int3
clc
cmc
mov
add
fnsave
xor
inc
clc
jge
out
push
aas
jns
jmp
inc
stos
and
loop
ror
lret
pushf
jmp
sub
int3
add
xchg
inc
dec
out
cld
mov
jne
inc
lea
in
leavew
xor
mov
popa
push
sbb
fwait
and
popa
jge
popa
xchg
mov
ret
push
mov
jp
jg
push
push
jecxz
mov
dec
fists
mov
in
or
inc
ficompl
add
roll
mov
sub
dec
mov
nop
or
jge
xchg
dec
jmp
mov
cltd
pop
and
sarb
ja
imul
loopne
cmp
jb
jecxz
std
sub
out
les
pop
and
and
pop
daa
mov
pop
dec
aaa
data16
inc
sub
jae
mov
std
lahf
out
nop
lret
das
and
lret
cli
mov
addr16
mov
ss
or
stc
in
iret
outsl
loopne
in
sbb
inc
push
daa
mov
call
xchg
sbb
enter
stc
das
jno
into
lods
orl
mov
dec
and
pop
aam
cmpsl
rcrb
fwait
cld
dec
push
orl
into
sbb
stos
adc
xor
ja
cmp
flds
jb
add
mov
shr
push
jb
xor
push
xor
pop
and
and
jmp
push
push
adc
pop
dec
outsb
test
cmp
mov
dec
mov
or
mov
adc
cmp
xchg
mov
clc
xchg
daa
cli
sub
inc
mov
mov
movsl
out
xor
jecxz
mul
sbb
push
inc
movsb
ret
cmp
fstpl
mov
jge
in
sti
dec
pushf
dec
repz
jnp
int
aad
daa
sub
sub
mov
repz
push
dec
fwait
push
into
pop
push
aaa
dec
orb
inc
or
or
cmpsl
jno
xor
lea
dec
sbb
notl
dec
sarb
cs
mov
popa
mov
pushf
pop
shll
data16
jns
push
cmc
decb
add
sub
push
xor
jl
add
sub
jb
shll
fiaddl
leave
sub
shr
loope
pusha
xor
jb
addr16
mov
mov
pop
sbb
mov
mov
push
sti
mov
stos
mov
jbe
cmp
ljmp
bound
outsb
and
cmp
pop
and
popa
out
xchg
ret
push
jno
adc
ljmp
dec
mov
into
pushf
hlt
push
mov
lret
into
es
in
std
push
xchg
fwait
lods
cltd
sub
cmpsl
ja
mov
xlat
in
gs
jmp
testb
sbb
jb
sub
out
not
iret
mov
out
movzbl
mov
scas
jg
fs
jmp
das
lods
lcall
or
cmp
shlb
mov
mov
divb
add
addr16
dec
pop
and
negl
xchg
inc
and
push
bound
jae
movsl
ror
fcomps
test
mov
imul
rol
mov
inc
or
or
or
pop
rcll
fwait
aas
outsl
dec
mov
add
gs
adc
in
cmp
cmc
out
mov
enter
loop
popa
cmp
lock
xlat
lods
stos
mov
xchg
mov
sbb
repnz
sbb
mov
or
das
push
and
leave
stos
repnz
sahf
gs
add
adc
sbb
stos
sub
xor
aam
sahf
cmp
push
data16
lcall
out
call
mov
call
aam
loope
pushf
push
xor
mov
pop
and
mov
sbb
popf
jo
insl
mov
jo
inc
aaa
pop
mov
and
lods
and
push
xchg
add
sbb
in
xlat
jmp
sub
cli
pop
shlb
xchg
pop
cmpsl
push
jmp
bound
stc
cmp
dec
push
and
in
lret
push
scas
cmpsb
inc
fidivl
cmc
cmpsl
jae
or
iret
adc
pop
shll
xor
or
dec
adc
lods
mov
fnsave
push
test
xor
pop
insl
popf
addr16
es
lods
mov
dec
pushf
cs
adc
dec
jge
mov
inc
pop
mov
call
dec
or
push
mov
adc
das
sub
push
leave
jnp
fisubrs
dec
cli
rcll
daa
and
xor
jg
lret
gs
hlt
fisubl
mov
imul
mov
fistpll
arpl
ret
outsb
xchg
sbb
enter
call
adc
dec
sub
je
repz
pop
jbe
cmc
fdivr
subb
and
pop
cld
movsl
mov
and
inc
pop
fistps
aaa
ret
dec
clc
dec
mov
sub
insb
clc
mov
divb
adc
test
repz
cwtl
insb
xorb
sub
sub
jg
lock
ss
outsb
ret
mov
std
mov
mov
enter
cli
mov
repnz
ret
test
cmp
hlt
xchg
inc
out
mov
pop
or
and
mov
clc
sub
adc
adc
dec
jns
mov
js
movsb
pop
sbb
shlb
out
pop
nop
mov
dec
neg
ds
mov
je
jge
clc
out
cli
push
dec
adc
sub
das
jne
or
adcb
add
jecxz
testl
xchg
adc
aaa
or
adc
pop
aaa
out
ret
les
push
add
fisubrs
rcll
fnstcw
xor
and
pop
and
and
cmpsl
mov
fisubl
fwait
cmp
xchg
pop
jle
insb
lret
jp
push
mov
fsubrs
ret
movsb
out
mov
js
cld
test
je
xchg
ret
dec
insl
in
pop
mov
popa
fstpl
out
les
jne
in
dec
inc
dec
clc
cmp
push
mov
lods
mov
push
xor
xchg
jecxz
es
pop
int
stos
push
xor
fwait
scas
push
jae
rolb
imul
in
ss
mov
ljmp
insb
into
jbe
dec
testl
push
pop
lret
in
mov
adc
mov
inc
std
jbe
fisubs
in
clc
push
iret
cmpsb
cmpsl
push
sahf
add
mov
mov
mov
xchg
add
mov
imull
dec
mov
mov
push
shll
adc
push
add
fbstp
js
push
idivb
sub
push
lods
push
enter
mov
pop
cltd
inc
js
jmp
repnz
push
les
mov
jmp
dec
gs
jmp
ret
les
in
lds
insb
fnsave
data16
scas
sub
std
sub
jg
sub
and
ret
add
sub
shll
mov
adc
xchg
cmp
mov
jne
jp
mov
aas
sbb
test
fmul
enter
js
andb
decb
sub
sub
xchg
sbb
jnp
jne
mov
pop
jb
lock
sbb
imul
sarb
aam
cmp
lock
adc
push
fnstsw
pop
inc
jbe
movsl
fsubp
mov
sub
xchg
cmp
xor
mov
leave
stos
jb
push
ret
inc
fwait
pop
loope
nop
into
sub
hlt
outsl
pusha
xchg
adc
or
or
pop
cld
fcomps
es
mov
movsl
dec
rclb
icebp
cmp
jmp
dec
shl
mov
push
test
push
out
cmp
rcll
pop
in
push
mov
jl
out
sub
clc
icebp
sbbb
push
fistps
inc
sbb
fcoml
mov
jns
fucompp
sub
cmpb
das
imul
mov
cmpsb
or
pop
test
dec
jns
xor
es
shrb
mov
pshufw
cmpsl
rcrl
insb
cli
xchg
ja
sbb
xchg
jg
push
jne
loopne
mov
inc
jge
int
mov
add
fwait
cmpsb
out
jge
xor
test
mov
call
and
dec
mov
pop
pop
mov
mov
movsb
xchg
dec
pop
jns
pop
push
insb
nop
in
es
and
lret
movsb
push
mov
test
jb
loope
out
pop
add
scas
adc
jmp
ret
jbe
out
loope
dec
mov
cwtl
push
jle
push
pop
mov
xor
xlat
rolb
sbb
cli
scas
inc
lret
dec
mov
jg
mov
xor
mov
rolb
aas
sub
dec
enter
xor
pop
sarb
aam
fwait
xlat
sbb
std
shll
ret
aam
js
sbb
outsb
pusha
testl
cmpsb
mov
cmp
pushf
sub
insb
add
mov
fiadds
aam
mov
and
ljmp
adc
rol
sbb
cmp
mov
xchg
fdivrl
cltd
dec
popf
add
jp
push
outsl
jbe
repnz
rolb
add
lods
aam
ret
addl
fwait
loope
sub
xchg
test
xor
loope
cmp
pop
ret
cmpsl
cmp
dec
adc
fidivrl
stc
popa
add
cs
sti
cmp
xchg
enter
sbb
ret
scas
lahf
sbb
out
adc
or
jbe
mov
and
int
es
inc
push
addl
and
xchg
push
dec
cmp
mov
test
repnz
in
mov
push
js
inc
mov
outsl
jmp
dec
into
lods
ss
sub
jle
adc
rorb
fsub
sahf
shl
in
xor
pop
mov
loop
sub
nop
push
dec
imul
call
and
pusha
iret
mov
mov
inc
or
fxch
movsl
jmp
inc
or
in
sub
es
jmp
add
test
add
stos
mov
sub
push
sbb
inc
sub
adc
dec
push
or
sbb
mov
mov
sahf
pop
pop
lds
pop
loop
push
ret
mov
notb
push
nop
sub
cmpsb
mov
add
push
adc
sbb
sub
mov
or
aas
pop
aad
sub
not
dec
xchg
sbb
xchg
pop
aad
sti
decb
outsb
pop
imul
repz
fsubl
insl
leave
inc
mov
dec
imull
xor
sub
xor
and
mov
stos
stc
outsl
sub
dec
lock
dec
loopne
jbe
push
xchg
push
dec
adc
add
pop
jge
xlat
push
sbb
cltd
repnz
cmp
cmp
xchg
mulps
orl
push
stc
add
xchg
jp
push
and
stos
cmpsb
js
adc
cmp
js
aam
pop
aad
cld
sbb
lds
and
inc
add
xor
lds
int
mov
add
fs
xor
dec
loope
shr
popf
frstor
jnp
shl
dec
add
jbe
rorb
test
xor
mov
push
pop
scas
stc
mov
ss
jbe
paddb
shlb
push
fprem1
mov
leave
pop
bound
dec
cmp
jecxz
xchg
jecxz
mov
icebp
lock
cld
sub
clc
popf
imul
inc
cld
push
int3
push
or
xor
xor
mov
mov
test
pop
mov
cli
in
addr16
cmp
jle
pop
jmp
mov
push
xlat
push
out
add
frstor
push
cmp
movsb
jae
scas
call
add
insb
fcomps
cmc
ljmp
popa
mov
nop
mov
mov
push
stos
cmp
cld
pushf
sub
push
inc
jecxz
cmpsl
pop
cld
outsb
jb
jmp
add
out
es
cmpsl
mov
add
std
and
jb
xchg
shll
sbb
movsb
and
sbb
adc
scas
and
cmp
jl
jg
stos
lods
pop
add
notl
shl
ficompl
adc
pop
test
ss
pop
add
std
lods
mov
jmp
xor
dec
ror
mov
jp
cmp
push
dec
push
pushf
dec
cli
dec
sahf
sti
cmpsl
jl
mov
xor
mov
xchg
push
shll
lods
xchg
or
cmp
subl
mov
add
sbb
sub
add
test
ficoms
sub
lods
xchg
push
movsb
and
bnd
mulb
imul
add
or
repnz
mov
adc
mov
out
inc
jnp
cltd
add
mov
stos
test
fdivs
and
stos
sbb
lahf
lock
pop
fwait
cmc
dec
jg
test
cld
add
lea
inc
pop
lahf
stos
sti
mov
or
lds
sub
adc
out
js
push
nop
test
repz
mov
pop
push
mov
jge
add
imulb
xor
xchg
imul
es
push
insb
jle
lds
ret
jb
shrb
xor
divl
popa
loop
xchg
xor
loopne
xchg
arpl
push
adc
pop
loop
xlat
out
leave
cmp
int
leave
jg
fldt
inc
mov
push
daa
add
or
imul
mov
xorl
lret
xor
shll
ret
sarb
pop
fcoml
mov
test
mov
aam
outsb
or
int3
cmp
and
mov
mov
arpl
lds
push
or
pusha
sub
jb
fisttpl
inc
subb
push
mov
cmpsb
jmp
cmp
dec
in
adc
test
push
cmp
fwait
sub
lret
push
cs
dec
das
int
outsl
mov
lds
xor
pusha
mov
or
stos
fchs
clc
ljmp
pop
sub
aam
cmp
repz
aad
data16
nop
or
gs
add
push
fimuls
push
pop
push
xor
loopne
mov
test
mov
mov
xor
stos
and
mov
mov
ss
mov
lea
repz
jnp
mulb
jl
and
cmp
add
fs
call
mov
inc
xchg
loopne
repz
fldt
or
sbb
xchg
sahf
jecxz
push
lods
xchg
aaa
and
add
je
lods
push
pop
push
pshufw
dec
push
cmp
enter
lock
dec
enter
mov
addr16
out
mov
stc
fsubrs
jae
and
or
insb
imul
shlb
inc
mov
jb
aas
pop
mov
pop
jp
repnz
jg
adc
ljmp
out
arpl
fsubr
cltd
pop
xchg
or
pop
sbbb
cmpsl
sbb
mov
out
xlat
scas
loopne
xchg
sbb
xlat
and
mov
out
stos
idivb
and
aam
add
push
in
imul
fstl
stos
loope
jp
lcall
push
xchg
pop
mov
pushl
xchg
lock
ret
imul
mov
int3
sub
scas
lcall
mov
decb
mov
push
test
push
mov
and
xor
aam
xchg
sbb
cmpb
lret
adc
mov
lock
into
jae,pn
push
pop
add
mov
dec
and
aas
or
aaa
cmp
push
addr16
cltd
stos
push
cmovge
adc
test
popa
sub
pop
jmp
enter
scas
inc
inc
mov
cmc
pop
xor
scas
ja
inc
jne
lcall
sub
and
ret
pop
mov
ud1
sti
jle
ds
das
and
cmp
pop
mov
inc
divb
loope
push
testb
call
mov
xor
subb
add
pusha
imul
add
and
xchg
std
jmp
imul
xchg
dec
lahf
je
out
pop
xchg
fadd
cmc
xchg
cli
ljmp
xchg
fisubrs
nop
movb
pop
xadd
mov
mov
lods
or
movsb
jnp
push
cmp
out
shlb
les
cmp
push
movsb
movb
sbb
pop
or
mov
lret
sarb
out
bound
popa
cmp
imul
loop
adc
into
rcrl
jno
aas
out
and
mov
popa
subl
xor
pop
in
xchg
shrb
fsubrl
in
cli
inc
data16
mov
xlat
sbb
and
movsl
pop
push
xor
jp
pop
movsb
scas
and
mov
rorl
repz
and
mov
push
sahf
mov
pusha
jmp
pop
mov
add
imul
aas
push
or
pop
movsl
jle
xchg
push
mov
pop
sub
inc
pop
out
lods
sbb
mov
xchg
or
dec
xor
ret
cmp
cmp
lea
sbb
outsl
arpl
movsl
out
std
push
mov
ror
push
and
push
mov
push
xchg
push
jno
adc
aas
cmpsl
mov
xchg
shrl
inc
mov
inc
adc
dec
adc
das
dec
sahf
sbb
push
jo
insb
sbb
dec
xor
ret
daa
out
pop
xor
xchg
pop
xchg
shrb
mov
int3
cmp
scas
pushf
outsl
repnz
dec
push
cmpsl
cmc
insl
negb
out
push
aad
adc
arpl
popf
push
dec
cmp
loop
ljmp
add
adc
xchg
scas
jno
xor
jns
leave
and
jmp
out
int3
mov
mov
fisubl
or
xchg
push
add
push
popf
jns
movsb
sub
xchg
sub
pop
popf
dec
pop
sub
cmp
ds
inc
test
rclb
push
dec
les
loopne
jecxz
imul
mov
add
loop
xchg
adc
aas
pusha
push
fadds
mov
push
cmp
aaa
test
sub
inc
adc
jmp
jl
pop
cmp
cmpsb
std
xor
inc
lahf
jecxz
jecxz
inc
pop
das
or
cmpb
outsl
jmp
mov
xor
loopne
mov
lods
scas
pop
cmp
jns
sbb
lahf
fldenv
inc
add
push
mov
mov
shrb
push
and
jg
mov
push
outsb
cltd
pop
sub
mov
dec
pop
ja
ror
aam
and
addr16
sbb
and
cmpsl
sarl
orl
notb
sub
call
cmp
push
lea
jle
sub
ficoms
addr16
mov
push
add
lock
pop
les
lahf
jbe
repz
adc
imull
jae
inc
shl
fwait
jbe
and
adc
mov
cltd
cmp
jmp
push
cs
scas
dec
push
pop
adc
fwait
test
movsl
push
sbb
cmpsl
and
inc
out
or
inc
mov
pop
xlat
or
sahf
cwtl
mov
mov
jae
pop
push
mov
sub
mov
and
cwtl
sbb
dec
cmpsb
std
aas
xchg
lret
sbb
xor
push
popf
jl
adc
and
imul
xchg
loop
inc
sti
dec
xor
loope
out
pop
add
cmp
arpl
adc
pop
adc
inc
xchg
popa
pop
cmc
push
lahf
in
pop
das
dec
shr
outsl
add
dec
pop
adc
add
add
adc
idivl
sbb
repnz
sub
and
jecxz,pt
ficoml
xor
mov
xchg
and
jns
pop
mov
pop
out
pop
mov
and
imul
dec
pop
fdivrl
cmp
mov
icebp
xchg
in
jno
inc
lea
xchg
stos
or
sbb
insl
loopne
jp
cmpsb
sub
ficoml
push
pop
rcrl
push
mov
sub
xor
jl
test
nop
fs
jnp
adc
es
or
aad
rcrl
push
push
mov
pop
ret
lcall
fisubl
pop
and
dec
decl
enter
add
dec
mov
sub
xor
pop
pop
incb
dec
sub
push
movsb
fiadds
cmp
xchg
push
scas
push
lahf
jbe
mov
adc
pusha
loop
xor
stos
cli
push
push
sti
dec
ds
fidivl
jo
sub
or
stos
add
sti
push
cli
out
shrl
xlat
jp
jae
scas
mov
stos
mov
stc
jmp
lods
mov
in
add
jo
adc
arpl
mov
mov
inc
dec
enter
adc
push
or
inc
out
xchg
lahf
push
add
stos
outsl
not
xor
mov
lret
push
aad
xchg
fwait
imul
les
mov
push
and
repz
and
nop
aad
push
mov
adc
fsubr
fdivrs
fmull
fdivr
call
mov
test
jb
ror
cmp
cmp
jae
mov
jge
add
lahf
pop
mov
es
push
mov
mov
pop
ds
xchg
pop
pop
push
mov
pop
mov
jbe
jo
xchg
push
fwait
sub
sbb
or
jns
jecxz
andb
inc
mov
inc
data16
and
mov
loope
mov
ret
loopne
pop
jecxz
jecxz
shll
pop
xorl
mov
sbbb
lods
imul
clc
add
sbb
xor
div
dec
popa
daa
xor
lcall
pop
fbld
xchg
cli
push
movsl
xor
rorb
dec
push
sti
dec
fadds
je
pop
jmp
mov
mov
sbb
push
int
inc
mov
inc
push
adc
hlt
inc
icebp
jns
fs
out
sbb
arpl
iret
pop
jge
pop
ret
cld
sub
lcall
das
out
push
pop
dec
nop
mov
std
int
dec
or
scas
aaa
xchg
inc
mov
add
sub
aad
scas
test
orb
inc
loopne
gs
dec
mov
lds
add
push
push
xor
jae
test
test
xchg
mov
sub
sub
mov
pop
mov
and
pop
mov
sbb
xchg
xchg
or
movsl
daa
mov
or
xor
mov
clc
mov
lods
pusha
add
adc
inc
inc
bnd
testb
mov
ss
xorl
cmp
cmp
ljmp
dec
inc
jle
pusha
out
jae
sub
or
dec
aad
lods
outsb
pop
xchg
fildl
sbb
mov
outsb
pop
jno
push
sahf
nop
mov
outsl
add
push
sbb
mov
or
xchg
fwait
cmpsb
je
and
imull
int
imul
mov
dec
in
loopne
add
push
add
xchg
pop
adc
and
leave
cmpsb
lea
jg
cmp
jl
repnz
mov
xchg
pop
add
es
iret
sbb
mov
popf
inc
cmp
mov
push
mov
aam
and
mov
jmp
fsubs
icebp
jae
stos
mov
and
jle
xor
das
fbld
cmp
mov
add
xchg
test
es
jbe
inc
xor
rcr
push
adc
lock
pop
dec
lcall
mov
sbb
xor
loopne
mov
mov
inc
lds
adc
xchg
ret
je
push
icebp
sbb
mov
mov
dec
cmp
jne
dec
xor
in
test
mov
mov
int
dec
cmp
mov
or
pop
add
sbb
push
jne
add
mov
or
mov
cmpsl
rcl
dec
lods
xchg
repnz
xor
imul
scas
fimull
cmovs
in
fsubs
call
and
adc
xchg
into
pop
popf
sub
mov
lcall
mov
lret
cltd
xchg
loope
lods
push
lock
mov
cmpsl
cmp
pushl
aam
lret
decl
ljmp
aas
popa
mov
mov
jbe
push
sbb
les
lret
and
push
and
int3
clc
inc
out
inc
fists
push
pushf
outsb
lret
jno
push
dec
icebp
lods
dec
adc
jo
xor
and
insl
cmc
lret
inc
pop
inc
or
into
cmp
int3
stc
scas
and
movsl
push
dec
jb
aad
lahf
fucomip
mov
pop
sbb
gs
lcall
ja
lods
test
and
push
dec
jmp
pop
pop
cs
stos
shrl
inc
push
lcall
sbb
adc
mov
bound
xchg
push
pop
pop
jg
insb
and
and
jns
xchg
and
ljmp
push
cmp
xor
hlt
xchg
mov
outsb
hlt
imull
shlb
popa
mov
mov
mov
lds
jno
xchg
adc
pop
sub
adc
faddl
pop
dec
into
lahf
subb
and
jae
fnsave
inc
mov
inc
loope
push
imul
adc
dec
ljmp
xor
cmp
sub
add
loope
lods
in
fs
popa
mov
xor
ss
push
lea
sbb
mov
insb
push
aaa
testl
push
mov
adc
ficoml
mov
out
sub
test
jns
lods
test
jecxz
ds
into
jbe
popa
mov
arpl
pop
sub
and
push
mov
xchg
xchg
dec
leave
test
and
lcall
add
dec
xor
adc
or
xor
popa
lahf
cwtl
and
mov
pusha
sbb
xchg
mov
mov
xchg
ret
scas
imul
jle
nop
repz
aaa
es
sub
hlt
dec
cmp
stc
xor
xchg
xor
pop
repz
xor
mov
mov
ljmp
lret
aaa
pop
std
scas
ret
pop
add
inc
ds
xchg
andl
mov
push
adc
faddl
sub
push
push
dec
loope
and
mov
mov
mov
pop
push
xor
lea
cmp
mov
dec
sti
push
push
cmp
mov
mov
sub
lods
jae
ret
shl
adc
lea
cmp
ret
jns
sbb
imul
add
pop
inc
or
xor
jmp
fisubs
inc
add
cmp
dec
dec
dec
inc
fwait
loope
cmc
ljmp
and
adc
pop
mov
push
cli
rcrl
dec
jmp
jae
sti
push
pop
sub
mov
and
adc
pop
jnp
and
or
cmc
mov
int
mov
stos
imul
cmc
cli
xchg
pop
push
jbe
cmpsl
dec
mov
cmp
xor
cld
xor
sbb
loope
cmp
xchg
xchg
loop
mov
pop
in
mov
and
mov
je
pop
mov
adc
into
aaa
dec
add
mov
pop
loope
pop
mov
xchg
bound
aam
fcomip
repz
lock
pusha
es
les
add
dec
mov
cmp
imull
in
xchg
psubd
jmp
mov
ficoml
fwait
pushf
mov
push
sahf
into
pop
sbb
mov
pop
jecxz
xchg
shlb
sbb
lret
sbbb
pop
jb
mov
add
fsubrs
xor
daa
stos
sub
mov
push
and
ljmp
popa
sbb
insl
mov
cmp
stos
sahf
add
sahf
sarb
addl
loopne
les
mov
ret
push
add
test
sbb
add
push
push
insb
push
frstor
dec
imul
jmp
adc
lret
int3
and
mov
adcl
adc
sbb
addb
out
push
das
or
jecxz
cmp
dec
mov
rcr
sbb
movsb
pop
test
ffree
mov
push
std
out
inc
ljmp
pop
je
adc
cltd
inc
arpl
inc
cmp
pop
pop
sti
nop
sub
jb
fmulp
rorb
mov
outsb
xchg
and
gs
adc
repz
add
dec
pop
mov
inc
push
mov
cs
into
mov
xchg
lods
jmp
lods
cmp
xchg
out
pop
sub
cmpsb
sbb
imull
leave
popa
in
pop
or
fisubl
cli
bound
pop
negl
and
inc
insb
sbb
shrb
stos
pop
repz
or
jno
js
lahf
jnp
fmulp
push
cmp
inc
adc
lods
jmp
mov
sbb
imul
add
pop
lret
jno
and
lea
mov
or
mov
lds
das
mov
sub
jmp
lock
shrl
sub
add
aad
pusha
or
push
fwait
ljmp
movsl
ja
ja
xchg
ret
daa
stos
pop
mov
pop
mov
push
lret
and
push
call
fnstenv
jg
jno
cmc
adcl
repz
fcom
movsb
jle
cmp
adc
mov
out
test
or
jae
push
inc
and
cltd
enter
repnz
notl
fsubrl
mov
pop
dec
and
sub
shr
xchg
enter
mov
pop
jmp
addr16
xchg
push
in
sbbb
jecxz
xor
dec
sbb
push
inc
fadds
push
lds
and
shll
das
and
pusha
int
fwait
loopne
je
and
sub
movntps
mov
sub
mov
lret
xlat
pushf
bnd
shlb
adc
test
mov
aaa
dec
pop
sub
mov
lds
xchg
cmpsl
in
sbb
rorb
or
inc
mov
pop
js
popa
mov
notl
imul
aad
fcmovb
mov
xchg
push
pop
jl
das
loope
xor
sub
fdivl
inc
lods
fidivs
rclb
add
lods
or
cmc
cld
ja
aaa
push
inc
sbb
push
push
in
hlt
cmp
push
out
jnp
dec
sbb
fs
pop
xlat
pusha
push
sbb
imul
and
sti
cmp
cmc
pop
rorl
iret
mov
sub
mov
pop
push
xchg
xor
insb
dec
push
rcr
addr16
cmpb
aam
loop
mov
scas
mov
mov
xchg
fcomp
outsb
in
mov
sti
lea
adc
out
insb
rol
inc
inc
push
mov
cld
sub
str
hlt
fadd
inc
inc
ja
pop
insb
fidivrs
dec
fstl
sub
popf
stos
xchg
aaa
aas
or
int
iret
sub
rol
sbb
push
mull
push
jle
iret
popf
push
push
jae
inc
pop
add
iret
addl
mull
dec
jp
cmp
push
push
leave
add
mov
lret
mov
sub
les
setp
mov
xor
mov
sbb
idivl
push
icebp
push
lahf
cmp
ret
test
ja
cmp
in
lds
push
subl
in
imul
add
cmc
add
sbbb
xchg
int
jae
mov
cmp
dec
bound
shll
mov
add
inc
cmp
sbb
xor
pop
sbbl
xchg
xchg
in
repnz
loop
cmp
les
pop
leave
sar
xchg
repz
test
push
jg
sbb
jno
mov
test
loope
pop
in
mov
repz
cmpsl
sahf
adc
fidivrl
pushf
ffreep
outsb
xor
xorl
fstl
adc
cmc
mov
daa
sti
fldcw
dec
mov
pop
stc
inc
fidivl
cwtl
pusha
adc
shll
jecxz
jne
test
bnd
std
les
pop
cmp
xchg
ret
cs
push
inc
pop
in
subb
lcall
rcr
lds
int3
add
mov
aaa
jmp
test
dec
hlt
pop
mov
scas
jle
out
sbb
sar
cld
pop
sbb
mov
mov
push
pop
dec
jl
fwait
xor
add
mov
lods
xchg
dec
out
aad
stos
fstpt
xchg
pop
inc
pop
jne
push
loop
pop
sarl
cmp
add
sahf
cs
mov
xor
push
sbb
sbb
sbb
lock
mov
fwait
mov
pop
fdivl
addr16
sbb
or
in
movsb
aaa
cltd
gs
mov
rcll
ficoms
lahf
popf
fadd
cmp
roll
pop
push
arpl
dec
shr
jmp
insl
and
mov
lock
add
pop
jl
push
inc
daa
jnp
mov
sbb
mov
ja
lahf
jns
add
rcrl
xor
jp
adc
in
fldcw
ss
mov
xor
dec
pop
xor
xchg
sub
pop
xchg
dec
jp
xchg
cmc
test
xor
into
mov
add
pop
jp
loopne
in
cs
inc
sbb
fcoms
repz
or
xchg
mov
or
inc
jnp
pop
or
jae
addb
inc
pop
in
aam
loope
ud2
mov
lods
jle
push
jb
fwait
aaa
sub
adc
pop
or
mov
mov
cld
dec
jmp
fistpll
enter
mov
add
xor
or
ret
push
scas
sbb
inc
lret
js
cs
pushf
testl
lods
es
jg
jb
insl
inc
ret
sbbb
xor
and
and
add
jmp
ljmp
push
push
out
jmp
les
sbb
xchg
nop
insl
and
xchg
ljmp
push
andb
pusha
pop
fidivs
ljmp
bound
jge
js
shr
shlb
xchg
inc
jl
lret
mov
arpl
fdiv
mov
mull
pop
inc
push
mov
pop
mov
mov
and
jge
jmp
mov
mov
fs
divl
dec
testb
fs
out
sbb
sarb
push
xchg
addl
mov
cwtl
jmp
bound
adc
sbb
hlt
mulb
cmpsb
xchg
dec
push
add
mov
xchg
fst
in
pusha
or
pop
jns
into
repz
and
ds
cmp
out
sbb
pop
into
xchg
jmp
sbb
xor
and
scas
cmc
mov
inc
sbbl
testl
pop
mov
enter
mov
sbb
and
cs
lock
push
mov
mov
dec
fists
or
pop
push
add
jecxz
dec
rcl
jno
cltd
in
inc
push
movsb
adc
jp
cwtl
mov
pop
cli
scas
shrb
insb
inc
inc
testb
fs
dec
mov
cmpsb
inc
inc
inc
mov
jns
xchg
xor
data16
sub
sub
movsb
pushf
jae
das
jae
aad
adc
icebp
test
push
cmp
ljmp
dec
repz
fimuls
dec
imul
push
ja
add
mov
out
dec
ret
xchg
mov
dec
out
pop
shlb
pop
mov
and
clc
push
fnstenv
inc
testl
das
idivb
jmp
loope
lds
adc
out
mov
xchg
mov
popa
xor
dec
inc
inc
into
lret
and
lret
mov
mov
test
addr16
inc
out
xchg
push
int
jg
lret
aas
sbb
ja
jbe
push
push
adc
jno
and
test
fs
outsl
mov
cmpsl
jmp
add
mov
test
aas
xchg
inc
pop
dec
mov
ret
mov
fidivrs
test
aam
mov
nop
loopne
dec
pop
inc
sbb
pop
mov
xor
dec
jmp
imul
adcb
or
int
ss
lea
mov
les
rorb
fistpl
imul
xchg
or
push
sarb
cmp
push
push
push
pop
and
lcall
cmp
or
pop
rorb
mov
rorb
repnz
cmp
add
aas
int3
jbe
sbb
pop
xchg
call
mov
loopne
push
xchg
loop
test
lods
lods
adc
sub
push
sub
scas
rcrb
jnp
es
pop
arpl
xchg
fildll
gs
mov
mov
mov
push
scas
xor
out
pop
jo
jl
outsl
movsl
pop
scas
nop
shll
xor
insl
xchg
add
idivb
in
mov
mov
gs
test
inc
cmc
ljmp
jnp
call
repz
in
mov
lcall
fdivr
aaa
inc
cmpsl
mov
adc
cmp
xor
xor
out
in
pushf
pop
stc
dec
fnsave
imul
fsts
push
sub
sbb
ja
or
xorb
mov
std
imul
sub
add
scas
mov
incl
and
lret
xchg
push
xor
push
add
in
ljmp
sub
mov
add
stos
ljmp
mov
mov
mov
add
push
push
mov
inc
cwtl
fwait
mov
popf
fildll
cmp
and
out
cmp
push
daa
and
ficomps
aas
push
dec
imul
stos
add
cmpsl
sub
mov
xor
dec
fs
mov
sbb
jmp
add
jecxz
xor
cmp
daa
sub
sbb
es
cmp
iret
cmp
aam
adc
in
xor
stos
inc
loope
sub
and
xchg
push
sarb
stos
inc
mov
push
pop
and
push
cmp
popa
aas
mov
push
lock
in
push
mov
inc
dec
stc
cmovb
clc
xchg
jmp
add
adcb
test
add
pop
mov
fmull
ljmp
jmp
mov
dec
scas
dec
xor
jne
cmp
lret
adc
pushf
push
mov
xchg
in
or
int
cltd
ret
dec
inc
add
mov
jne
fimuls
pop
incl
pop
cmp
dec
sub
add
test
mov
mov
pop
cmp
ficompl
lea
in
jnp
lret
add
call
cmc
fildl
sbb
mov
loopne
mov
add
and
adc
push
pusha
mov
bound
pop
stos
ljmp
iret
xchg
shll
add
jno
clc
dec
jmp
mov
pop
cld
mov
lods
xchg
xor
sbb
xchg
cmp
xchg
fcompl
dec
scas
mov
inc
out
jb
push
push
pusha
pop
mov
inc
ja
divb
stos
push
mov
jecxz
xchg
mov
sahf
pop
cmp
sub
shrb
push
in
mov
sarb
rcl
ficoms
fnstcw
stos
sbb
pop
xchg
sbb
and
sar
dec
fs
cmp
sarb
add
lcall
mov
lods
ljmp
jg
enter
lock
aas
push
out
pop
lret
jmp
insl
push
aad
mov
lds
test
inc
pop
mov
push
pop
dec
xchg
add
pop
loope
mov
push
push
jo
cwtl
dec
dec
gs
add
test
jb
icebp
fiadds
stos
or
ror
xchg
mov
enter
imul
push
mov
dec
adc
jb
xchg
push
fcompl
xor
push
inc
fwait
pop
push
or
adc
pop
xchg
scas
xchg
hlt
mov
mov
lock
inc
stos
dec
leave
dec
adc
mov
je
push
pop
in
or
mov
iret
stc
mov
test
push
cmpsb
scas
mov
addb
mov
or
or
adc
leave
push
scas
or
test
mov
add
push
clc
mov
movaps
mov
xor
js
xor
xor
cmp
std
popf
mov
rcrb
jp
lods
fucomi
inc
dec
iret
add
hlt
dec
adc
and
or
or
pop
mov
or
aad
xor
icebp
xor
mov
mov
mov
adc
cld
stos
orb
outsl
lods
sub
and
setne
and
scas
xchg
xor
es
fisubrs
test
cld
scas
outsb
jo
sar
cmp
jno
mov
cmp
xchg
cmp
xor
aas
xor
mov
xor
pusha
mov
imul
mov
out
or
mov
into
mov
aam
xor
xchg
inc
inc
pop
mov
push
inc
and
es
mov
pop
inc
sbb
dec
dec
testl
inc
ret
or
add
add
jge
in
inc
fwait
leave
fnstcw
jbe
outsl
addr16
mov
add
add
inc
inc
jb
cmp
push
mov
mov
pushf
int3
lret
es
mov
sub
psubsw
pushf
test
mov
add
push
cmpsb
dec
cmp
movsl
mov
clc
mov
addl
mov
push
inc
arpl
add
push
jae
push
add
ret
popf
xor
xor
das
pop
sarb
mov
pop
out
sbb
je
arpl
clc
movsb
fisubrl
and
mov
mov
lock
addb
push
lret
movsl
mov
adc
pop
xor
fsubrp
fstpt
call
fadd
xor
inc
sti
mov
ljmp
push
mov
addr16
add
inc
pop
cmp
jbe
jle
jae
clc
jp
mov
stos
and
pop
fs
mov
jo
rolb
ret
adc
jp
or
bound
jl
mov
inc
mov
push
flds
jp
dec
and
push
mov
stos
rorl
cmp
pop
or
pop
xchg
mov
xchg
push
aam
jbe
inc
xchg
test
fildll
sub
orb
dec
mov
cmpsl
sub
loopne
adc
ja
stc
sbb
xchg
and
sub
stos
lea
test
xor
fbld
orl
jecxz
push
clc
mov
push
sub
lcall
insl
xor
jb
bound
insb
inc
sbb
fcoms
cmp
cmpsl
or
cwtl
dec
mov
inc
shlb
out
mov
idiv
xchg
mov
cli
ja
push
int
push
xor
int
push
out
int
flds
xchg
ds
add
jb
fidivs
jge
add
jl
pcmpeqd
popf
jp
fwait
out
out
or
shlb
mov
sbb
addl
into
sub
push
mov
jo,pt
in
loopne
mov
mov
data16
in
test
int3
mov
mov
xor
mov
repz
mov
and
sar
sbb
fldenv
pop
repz
jne
out
dec
mov
xor
and
aad
mov
and
sahf
sar
xor
imul
mov
and
xor
push
fisubl
imul
mov
iret
sbb
jbe
adc
dec
loope
lret
mov
sbb
dec
jecxz
test
jl
jnp
cs
pushf
sbb
jecxz
aaa
je
push
sti
sbb
mov
sub
sbb
or
mov
test
stos
xchg
xchg
arpl
fistl
push
into
orl
jb
test
sti
loope
in
or
adc
xchg
dec
adc
xor
inc
icebp
aaa
ret
mov
lods
hlt
inc
loop
fnsaves
ret
mov
pop
dec
stos
nop
sahf
mov
xchg
inc
aad
lret
xchg
cmp
dec
popa
mov
xlat
jne
dec
inc
test
pop
or
aaa
dec
xor
adc
cmp
or
incb
int
mov
addr16
sub
inc
test
pop
ret
shrb
testb
sub
inc
sub
sbb
js
fildll
adc
push
in
cli
or
ja
testl
mov
cmp
pop
jne
xlat
push
jmp
xor
lods
push
jecxz
ja
mov
and
cmp
pop
movaps
imul
pushf
pop
mov
shrb
inc
mov
negl
bound
or
fwait
leave
cmp
inc
push
in
sub
mov
mov
mov
push
aam
jne
stos
idiv
xor
out
mov
push
arpl
sbb
dec
xchg
inc
jg
sub
movsl
xor
xor
loope
mov
and
adc
rorb
scas
imul
stos
fiadds
aam
add
fsubp
dec
js
andl
addb
popf
sbb
adc
xchg
jb
movsb
pop
adc
in
outsb
popa
sti
lea
sbb
cmp
das
clc
cs
pop
push
push
mov
cmp
lret
adc
lea
cmp
adc
lods
xlat
loop
mov
inc
inc
outsb
stc
cmp
xchg
push
xchg
cmpsl
xchg
mov
cwtl
xchg
fnstcw
aaa
mov
push
aam
leave
aas
xor
xchg
adc
lods
jg
cmc
sbb
movsl
adc
mov
push
inc
mov
adc
call
mov
sub
dec
pop
or
jne
and
pushf
fisttpl
shrl
enter
rcr
cmpb
or
mov
mov
je
shl
pop
in
hlt
jbe
fiadds
dec
loope
push
clc
cmp
cmp
fucomp
cwtl
arpl
cmpsl
scas
push
inc
and
xor
cwtl
in
testb
xchg
or
lock
or
inc
int3
dec
add
add
mulb
dec
adc
push
mov
test
pop
inc
dec
mov
fwait
out
nop
movsb
mov
pop
lret
push
add
sub
fwait
mov
xor
and
cmp
dec
mov
pop
add
in
lods
jge
mov
mov
je
or
mov
int3
ja
in
lahf
popf
in
lock
lret
cld
js
pop
mov
and
xor
ja
jecxz
push
repz
repz
sub
pop
sahf
loopne
cwtl
mov
inc
xor
or
sub
jb
mov
ja
leave
imul
jge
mov
in
pop
bt
int
int3
out
rcll
leave
and
lret
mov
jo
jl
or
arpl
inc
push
jns
fwait
and
cs
rcr
andb
cli
sti
in
aaa
iret
xlat
xor
aas
cs
inc
sub
loope
pinsrw
ds
daa
inc
pop
mov
in
sub
pushf
sti
and
jae
add
or
mov
imul
mov
dec
test
sbb
pop
push
enter
push
mulb
icebp
in
ret
fst
mov
ret
leave
call
shll
sub
sub
repz
mov
xlat
mov
cli
jge
xchg
stc
inc
xor
aas
sub
outsb
jp
inc
in
sbbb
push
mov
gs
dec
stc
xor
inc
lods
add
and
imul
lret
cmpsl
int
cmp
fldcw
nop
scas
mov
ret
cmp
popf
cmpl
inc
dec
sarb
jecxz
test
cmp
and
fwait
dec
lods
push
mov
cs
loop
jle
xchg
into
or
pop
lret
pop
jb
xchg
inc
add
lret
push
je
lret
loopne
push
js
jo
fstl
test
pop
nop
es
iret
push
data16
sub
dec
xchg
and
shrl
cltd
and
pop
or
ret
cmc
jmp
dec
sbb
push
lret
je
shrb
rcrl
push
inc
test
inc
xchg
mov
jno
jbe
or
into
pop
adc
cwtl
imul
jae
imul
xor
int3
orb
out
pop
or
adc
pop
push
and
adc
inc
das
std
dec
dec
push
xor
movsl
jmp
adc
cmp
push
outsl
pop
rep
mov
inc
lret
xor
mov
inc
outsb
popf
insl
mov
push
repnz
dec
rcll
dec
mov
imul
dec
adc
jl
ss
xchg
loopne
xor
cs
enter
mov
cmp
inc
fnclex
ret
and
scas
iret
repnz
sub
cwtl
lcall
jbe
nop
add
add
sub
add
insb
xor
xor
sub
inc
mov
iret
daa
je
jnp
in
lret
add
test
push
mov
pop
pop
in
and
mov
push
sbb
repz
loopne
xor
icebp
test
mov
dec
mov
pop
sti
ja
xor
sub
rolb
dec
addr16
cmpsl
jmp
fldenv
lods
mov
xor
lea
xchg
hlt
inc
add
jp
pushf
or
sub
sub
jle
stc
mov
int
lcall
and
cs
xchg
stos
add
push
pop
mov
xor
push
adc
push
aad
xchg
lock
fstpt
fiadds
adc
lret
push
mov
cmp
xor
fdiv
push
insl
lcall
mov
add
xor
testb
xor
aaa
sub
or
std
lret
jbe
adc
ss
push
inc
inc
jg
lods
jno
lret
div
jo
push
xor
clc
insb
pop
insl
and
rclb
nop
cmp
sbb
dec
dec
xchg
xlat
jmp
mov
push
fs
pop
jge
icebp
dec
scas
lret
push
or
js
stos
pop
jge
inc
imul
mov
add
adcb
int3
push
cmp
pop
dec
insl
xchg
push
cmp
sbb
xchg
mov
sbbb
cmpsb
iret
adc
imul
dec
js
mov
adc
mov
or
mov
js
ret
popa
repz
cmp
jo
mov
and
pop
sub
pop
lods
hlt
xchg
jo
xor
int
movsb
mov
xor
push
sub
pop
pusha
lock
mov
ljmp
sti
sahf
movsb
lods
jge
mov
aam
xchg
incl
xchg
pop
test
loopne
xchg
sub
dec
mov
insb
stc
mov
jge
leave
sahf
or
pop
scas
sbb
xchg
inc
pushf
jle
mov
sub
js
jnp
dec
pushf
xor
int3
mov
int
out
mov
jnp
push
mov
inc
pop
and
xchg
jae
sbbl
or
in
lods
adc
pop
inc
mov
jge
jge
divb
cmp
repz
mov
jnp
cmp
dec
ds
push
adc
pop
gs
in
loop
aaa
jne
movsl
test
pushf
mov
out
int3
aaa
fdivrl
popa
ret
roll
mov
cli
stos
arpl
add
and
cs
lcall
dec
add
mov
fnstsw
in
push
aas
pop
leave
je
inc
adc
xor
jecxz
pop
imul
fcmovne
adc
push
lret
fwait
mov
stc
xor
or
pop
pop
mov
scas
jmp
xchg
mov
cmpsl
into
adc
scas
call
outsl
or
inc
cmp
jnp
xlat
dec
cwtl
xchg
or
movsb
lods
mov
jle
aaa
cmp
aam
mov
les
fidivs
jg
sar
pop
stos
push
adc
ret
jbe
stc
inc
cmp
mov
into
dec
jg
adc
out
push
leave
in
sbb
xchg
cmpsb
shll
hlt
push
push
test
cli
cmp
idivl
xchg
pushf
int3
sarb
in
in
rclb
loop
je
push
push
lods
lahf
mov
xor
push
sbb
pop
in
jns
adc
mov
or
test
icebp
push
push
jl
sub
adc
push
pushf
xor
jmp
cli
inc
dec
aam
push
and
cmp
inc
xor
insb
lahf
add
xchg
xchg
sbbl
or
pop
xchg
pop
bound
cmc
loopne
push
insb
adc
mov
sub
mov
movsl
icebp
sbb
faddl
int3
or
mov
jae
insl
frstor
out
fdivrl
lcall
ss
sar
mov
push
cmpsl
outsb
lcall
sbb
inc
mov
aas
mov
cld
jecxz,pn
jecxz
subb
ja
out
aad
lock
js
ficompl
pusha
enter
jno
xorb
sbbb
sti
shlb
pop
jmp
rcr
adc
test
sbb
cmc
cmp
or
out
icebp
lock
lret
out
test
test
mov
bound
in
loop
mov
pop
rol
dec
ret
jb
push
mov
or
aaa
xor
mov
scas
shlb
xchg
cmp
add
jmp
incl
mov
popa
dec
or
in
aam
pop
inc
xchg
xchg
pop
into
or
xlat
stos
push
lea
pop
stos
dec
add
movb
adc
loopne
xchg
out
xor
movsl
lea
loop
dec
xor
pop
mov
rcl
ret
fmull
cmp
icebp
fs
daa
jne
xchg
popa
add
js
lret
popa
daa
outsb
pop
dec
ret
xor
cs
pop
push
mov
pop
neg
test
test
inc
push
mov
pop
enter
negb
fiadds
lods
push
iret
push
inc
add
ja
jns
xchg
test
inc
loope
loope
mov
stos
or
dec
adc
popf
or
adc
into
sub
add
sbb
push
lds
ljmp
test
in
add
add
repz
idivb
cli
add
jnp
insl
in
clc
mov
xor
sub
in
mov
push
imul
cmp
pop
dec
mov
pop
loopne
pop
mov
xor
inc
cmpsb
mov
fs
sbb
pop
jb
aas
sbb
fsubr
xor
fcoms
lret
mov
dec
hlt
aas
jmp
cltd
mov
bound
mov
jl
ja
push
adc
jae
inc
cmp
or
xchg
scas
push
mov
and
xchg
mov
rolb
adc
out
sub
out
ret
adc
adcl
outsb
inc
sbb
loop
jae
outsb
ret
insb
sub
and
in
push
adc
pop
pushf
inc
fcom
xchg
outsl
nop
int3
push
notl
jns
jle
jmp
xorl
popf
fidivl
mov
xchg
dec
pusha
leave
dec
das
and
push
in
mov
pusha
imul
int3
or
push
stos
push
xor
add
ret
pusha
aas
sub
xor
outsb
cld
jle
rol
cmpsl
pop
sahf
mov
scas
xor
ljmp
clc
dec
or
mov
test
jp
and
sbb
push
fstpl
pop
dec
lods
in
stos
jno
xor
xchg
mov
popa
leave
cld
test
inc
outsb
and
cs
shll
imul
popa
scas
mov
cmp
addr16
aad
sbb
mov
jo
mov
mov
jmp
test
test
adc
xchg
movsb
cmp
and
xchg
shr
mov
aas
shlb
lcall
fcoms
cmp
mov
int
sbb
pop
jmp
sarl
cmp
or
loope
imul
adc
cs
dec
cmp
xor
jns
jl
lods
dec
mov
data16
scas
ljmp
ret
ds
push
lret
sti
push
shll
pop
dec
aas
push
lds
fstpl
xchg
push
add
cmp
nop
jg
out
loope
es
sub
cltd
loop
aas
lock
cld
mov
sbb
cmp
mov
mov
add
loope
push
sbb
or
jo
jecxz
lea
push
push
jae
hlt
sbb
movsl
add
and
jnp
ds
xlat
xor
add
xchg
outsl
jg
rcl
movsb
push
push
jbe
inc
mov
loopne
mov
scas
std
sub
sar
not
test
das
cmc
jo,pn
sbb
imul
pop
stos
ljmp
jb
mov
cmpsb
mov
jge
hlt
loop
int
adc
sbb
add
icebp
and
lret
stc
sub
pop
jne
imul
out
daa
hlt
add
das
je
jns
mov
dec
inc
or
mov
js
mov
ret
jno
mov
clc
in
cmp
cmp
addl
mov
mov
loope
imul
shlb
mov
mov
gs
ljmp
flds
adc
push
loopne
adc
stos
aad
int3
stos
jecxz
mov
pop
in
xchg
sub
push
adc
adc
aaa
in
fiadds
mov
dec
cltd
mov
inc
mov
aaa
adc
push
adc
sahf
insl
push
ja
push
jo
xor
push
adc
lret
int
dec
mov
into
rcll
or
hlt
test
fisubs
xor
jmp
mov
mov
push
or
lea
push
sub
les
bound
je
sub
out
shll
mov
stos
lock
or
add
jge
jle
outsl
xchg
inc
pop
sbb
jg
jae
cmp
sti
enter
out
xchg
sub
js
dec
ret
push
cmp
mov
pop
cli
out
push
pavgb
addb
cli
dec
lret
addr16
es
and
pop
sbb
out
or
fistpll
pop
dec
dec
gs
js
adc
mov
sbb
faddl
repnz
test
ficoml
sahf
cli
mov
dec
push
fld
fnstenv
jbe
insb
stos
cmp
jbe
hlt
scas
lea
or
or
cmpsb
pushf
xlat
addr16
adc
imul
push
sbb
sbb
pusha
fbstp
out
shl
mov
mov
mov
fs
cld
sbb
push
sub
pop
xor
outsb
shlb
mov
push
loope
pop
sldt
xchg
fisubs
cmp
cli
push
cmp
mov
stc
lcall
adc
mov
lds
adc
dec
xor
sub
cmp
data16
mov
add
cmpsl
ja
push
fwait
cs
jl
test
jnp
inc
out
lock
jno
mov
mov
cmp
xor
insl
shrb
in
shll
lods
jmp
push
mov
inc
negb
mov
daa
inc
lret
loopne
xor
jl
mov
or
mov
pop
outsb
aad
mov
sbb
mov
aas
aaa
dec
sub
mov
mov
addr16
jbe
call
aaa
insb
bnd
inc
jne
repz
add
push
pop
iret
mov
jnp
add
cmpb
int3
ljmp
cld
divb
in
jp
inc
in
or
mov
dec
xor
mov
dec
movsl
hlt
dec
adcl
outsb
push
jb
sbb
and
adc
jnp
cltd
sub
add
dec
mov
push
add
sub
or
or
fcmovu
xor
out
std
js
xlat
mov
mov
jge
mov
or
and
cmpsb
bound
push
add
xor
scas
or
push
int3
jno
rolb
pop
in
or
mov
fwait
mov
xchg
clc
push
fiaddl
jmp
int
test
mov
cmp
push
jmp
pop
iret
adc
lea
sub
add
push
les
sub
xchg
push
iret
push
out
loop
xorl
mov
out
int
xorl
mov
sub
xlat
rcll
std
adc
lret
inc
repnz
push
jge
pop
jno
test
dec
js
sarb
add
test
fadd
add
fisttps
sub
pop
and
pop
shrb
push
mov
or
inc
andb
cmp
js
icebp
xlat
shll
dec
dec
inc
and
add
xchg
xor
test
daa
add
xor
movlps
cltd
imul
xor
pop
in
cmp
xchg
push
jb
and
je
int3
int
sbb
jge
xchg
aaa
in
dec
scas
xor
cltd
dec
and
push
enter
stc
ret
nop
incl
out
jnp
shrb
mov
daa
push
inc
pop
addr16
cmc
mov
mov
movsl
aas
inc
push
adcl
aaa
xor
je
xchg
dec
sbb
int
add
mov
out
add
stc
hlt
scas
popf
mov
jb
sbb
add
xchg
cltd
int
movsb
cltd
dec
push
insl
sub
add
xchg
and
sbb
mov
sbb
popf
inc
mov
dec
fwait
cli
stc
xor
bound
dec
jns
and
pop
pop
jb
and
xor
pop
and
in
pop
add
sub
sbb
and
in
imul
cmpb
push
je
das
and
cld
lea
popf
dec
mov
fcoms
cmc
loopne
mov
dec
jo
pop
cwtl
mov
scas
js
insl
sub
jp
in
mov
mov
push
sub
sbb
out
in
and
lret
dec
inc
inc
repnz
scas
xor
xchg
out
xchg
sub
sbb
sub
pusha
jge
ljmp
icebp
adcl
dec
sub
in
outsb
aaa
xchg
sbb
hlt
aad
push
nop
jecxz
adc
rcrb
xor
mov
jl
fwait
push
adc
xor
push
bound
clc
lods
push
dec
and
cmp
jmp
jge
lods
sub
xchg
inc
jne
iret
jnp
xor
add
push
mov
les
test
push
push
hlt
rcr
les
and
and
pop
ret
xchg
movsb
outsb
xor
jmp
movsb
ret
inc
hlt
push
xchg
jns,pt
stos
icebp
in
adc
and
in
dec
inc
divl
popl
dec
and
leave
xor
xor
sub
mov
sbb
adc
jae
push
sub
inc
mov
mov
push
loop
xchg
clc
jae
rorb
inc
push
mov
mov
xchg
lods
decl
out
add
mov
imul
xchg
pop
pmaxub
and
mov
loop
jge
sti
or
mov
xchg
xor
ljmp
or
daa
adc
xchg
push
and
inc
hlt
leave
mov
jge
dec
or
sbb
xchg
push
mov
mov
cs
cmpsl
out
aaa
inc
bound
cmp
pusha
in
popa
push
mov
aam
xchg
adc
scas
pop
push
dec
jbe
sub
mov
mov
mov
cmp
test
jae
dec
mov
into
push
push
push
sbb
scas
in
insb
jl
push
icebp
jecxz
and
add
pushf
xchg
mov
lea
lea
adc
dec
pop
dec
or
icebp
fs
das
adc
mov
sbbb
dec
arpl
mov
dec
xor
ds
xchg
fwait
mov
imul
fmull
ret
add
cmp
mov
mov
mov
int
mov
or
jae
arpl
push
call
jo
push
jmp
adc
mov
ja
cltd
in
dec
and
dec
je
call
add
repnz
test
mov
movsb
dec
sbb
or
lea
jb
call
mov
ret
lcall
cmp
stos
add
cmp
inc
int3
outsl
dec
js
fimull
into
mov
dec
xchg
scas
sbb
jmp
fs
pusha
jmp
jmp
sub
outsl
sti
lahf
push
sub
jnp
add
addl
add
add
inc
cwtl
jb
sti
icebp
and
fbld
sbbb
mov
xchg
jmp
jbe
pop
xor
xor
inc
dec
cmpb
jnp
shl
xor
addl
punpckhbw
jg
mov
push
mov
popf
mov
sbb
xorb
imul
jp
seta
add
insb
out
scas
lock
cmpl
inc
std
orl
movsb
sarl
insb
repnz
rcrb
cld
lds
jmp
xor
mov
scas
dec
push
sarl
or
xchg
mov
cli
inc
and
das
or
fists
call
jmp
lret
mov
ds
inc
mov
mov
pop
sbb
loop
insl
test
push
cmp
pop
mov
cwtl
ret
repz
mov
cmpsl
movsb
pop
jae
fwait
adc
stc
das
sub
mov
inc
imul
repnz
push
push
inc
jo
xlat
sub
xorb
bound
pop
dec
outsb
movsb
stos
clc
inc
mov
scas
mov
xchg
cltd
adc
xchg
je
inc
idivl
mov
jb
cmp
test
mov
into
jle
pop
inc
roll
mov
fcoms
rol
jmp
xchg
jnp
pop
push
int3
push
xor
andl
cltd
push
stos
out
xorb
inc
call
lea
jbe
aad
mov
pop
jno
and
jbe
std
ret
jnp
sbb
jp
mov
imul
mov
out
jg
out
cmp
pop
add
push
xor
lods
aaa
sbb
int3
stc
push
push
xchg
push
nop
add
call
xchg
inc
psrlq
xchg
sub
sbb
and
sub
cltd
cltd
add
loop
jb
repz
std
sbb
jns
jp
stos
repnz
je
jl
loopne
dec
adc
jmp
dec
hlt
mov
pop
mov
daa
aaa
sarl
rcrl
mulb
mov
jg
add
and
sub
xor
mov
mov
shlb
mov
cmpb
push
pop
lret
inc
loop
mov
mov
and
lret
push
pop
add
dec
movsl
sbb
or
jl
jnp
adc
daa
mov
mov
nop
sub
out
and
cmp
inc
int3
xor
mov
jge
ds
jns
or
pop
sbb
push
and
out
mov
ret
jbe,pt
add
mov
lcall
rclb
fadds
test
push
dec
fcmovnu
cli
pop
jmp
es
mov
imul
sub
shr
xor
cmpsb
test
push
orl
fcmovb
shll
push
add
jb
add
inc
insl
push
stc
add
lods
adc
adc
fcmove
out
pop
adc
jl
stos
mov
add
and
dec
and
push
xchg
ljmp
dec
jae
ds
test
hlt
in
push
mov
loope
cmc
popf
iret
out
movsl
pushf
popa
lcall
and
push
ljmp
mov
sub
pop
sbb
sbb
inc
js
push
daa
in
inc
call
imul
add
adc
pushf
aaa
js
and
je
inc
pop
lahf
fwait
add
test
pusha
stos
loop
or
xchg
out
rolb
sahf
fucom
fisttps
mov
jbe
ds
xchg
inc
and
pop
jp
mov
push
sbb
ljmp
das
shll
jbe
loopne
inc
out
adc
out
dec
ljmp
and
xor
addb
in
sub
jge
sbb
cs
stc
das
adc
dec
or
xchg
lds
inc
test
dec
andl
xchg
nop
js
pop
cmp
or
sahf
scas
jns
test
fsubr
mov
cmp
sub
into
sahf
rorl
enter
sub
nop
dec
push
inc
aas
fsub
pusha
repz
jmp
pop
data16
sub
mov
xor
fisubrs
lods
stc
outsb
mov
xchg
aam
or
out
shr
or
sbb
in
loopne
negb
inc
daa
into
cmp
nop
or
dec
ret
cltd
rolb
sti
mov
push
nop
setno
push
push
or
adc
lret
scas
cmp
or
mov
mov
jecxz
dec
sbb
sbb
push
je
loop
or
enter
fs
pop
push
pusha
clc
ds
fs
xchg
lret
call
jle
fisttps
inc
jne
fwait
mov
testl
mov
ret
aaa
push
ret
add
loope
mov
mov
shr
or
mov
subl
movsl
xchg
adcb
xchg
enter
cmpsl
outsb
js
or
and
lods
mov
mov
leave
shl
sub
jno
imul
xor
mov
idivb
fwait
nop
mov
add
out
ljmp
cld
pop
hlt
cmpsb
push
mulb
mov
inc
stos
adc
mov
cmpsl
add
loop
pop
insb
movsl
shl
jge
adcl
lcall
xor
ficoml
dec
dec
sbb
inc
cmp
pop
into
jle
xchg
sahf
ror
ss
out
fdivrs
dec
pusha
jae
inc
sbb
pop
mov
sbb
push
mov
test
pushl
clc
iret
and
mov
loop
inc
int
es
test
in
movsb
jle
je
add
sti
or
xchg
mov
inc
cmp
rcrb
inc
mov
xor
xor
lds
fldenv
push
add
ficoms
ficomps
dec
jl
aaa
dec
rcll
movsb
and
les
fcomps
aaa
mov
les
inc
jmp
cmpsl
jg
mov
lock
jo
test
fstpt
out
or
inc
xchg
decl
in
shl
fnstsw
leave
es
cmp
and
loopne
cmpsb
mov
rol
cmpsl
ror
push
inc
jge
push
std
lock
inc
jae
stos
movb
and
ret
in
xchg
mov
dec
push
out
cltd
lret
outsl
addr16
maxps
std
scas
out
cmp
dec
es
popf
imul
ss
dec
enter
mov
shll
adc
push
out
bound
mov
add
and
jbe
xchg
subl
test
fwait
js
sar
pop
enter
xchg
pop
cwtl
cwtl
jb
cltd
add
inc
fsub
test
test
jl
adc
lock
push
fildl
int
adc
mov
sbb
mov
mov
cmp
sahf
mov
xor
test
adc
lcall
push
sbb
dec
in
push
out
pop
cmp
pusha
in
movsb
or
mov
cmp
push
pop
pop
out
inc
lahf
into
cmpsl
cwtl
rclb
or
or
add
shl
jo
jo
pop
xorb
cs
mov
inc
call
inc
cs
test
lcall
xlat
movsb
fsubs
into
in
dec
push
aaa
orl
test
xchg
outsb
and
jbe
in
out
movsb
int3
stos
js
cmc
fnstsw
xchg
xchg
and
ror
mov
cwtl
out
lahf
cmp
adc
cmp
loop
mov
dec
jnp
cmp
mov
mov
inc
pop
push
jg
sub
into
sub
sahf
mov
pop
lahf
add
push
aam
aas
test
jmp
inc
adc
xchg
xlat
jecxz
sahf
pop
orl
nop
daa
push
inc
ret
jns
inc
scas
sub
in
lcall
pushf
test
pop
enter
leave
test
movsl
int3
mov
inc
jb
or
jecxz
sub
push
pop
mov
xchg
mov
push
xorb
aaa
jl
in
cmp
sub
iret
pop
nop
mov
and
jmp
push
ret
add
leave
xor
imul
xchg
insb
and
mov
sti
pop
inc
movsl
hlt
pop
jmp
insb
shll
sub
mov
aas
sbb
stc
mov
inc
fstl
movsl
stc
stos
cli
bound
and
pop
addr16
aaa
repz
repz
lock
ret
inc
or
sbb
xchg
clc
push
sub
imul
jns
nop
xchg
adc
lock
push
xor
or
xor
dec
pop
mov
sahf
es
pop
jge
push
rcrl
push
sbb
filds
jp
pushf
dec
push
push
adc
mov
cwtl
add
cmc
adc
insb
cmpsb
or
scas
mov
jl
bt
add
enter
sub
jnp
jge
mov
jo
sbb
lret
shufps
test
push
nop
in
scas
ret
xor
test
loopne
jmp
mov
into
or
push
xor
inc
mov
xor
adcl
add
scas
dec
and
xchg
stos
jg
mov
movsb
mov
fwait
sbb
sbb
push
cmpsl
lret
cmp
scas
lret
leave
push
repnz
mov
mov
or
loope
adc
repz
cmp
fdivs
dec
push
or
fwait
push
enter
ss
mov
daa
fwait
push
push
call
cmc
mov
push
sbb
jo
loop
jmp
ret
cmc
shll
xor
cld
xchg
push
and
xor
insl
das
xor
ja
or
jno
inc
jnp
xchg
cmp
ficomps
lcall
dec
inc
cli
xor
cmp
jae
dec
aas
sti
data16
icebp
sub
or
ljmp
ss
in
in
cmc
push
push
js
push
les
fmuls
push
shr
mov
push
xchg
out
fcoms
push
and
stos
pop
xchg
arpl
dec
xchg
daa
mulb
xchg
repnz
jge
or
dec
psraw
pop
iret
mov
sbb
ja
sbb
orb
pop
add
out
test
ss
std
pop
decl
add
add
xor
sub
mov
movsb
lds
les
nop
adc
pop
jg
jne
sahf
ds
daa
lret
mov
sbb
cmp
xchg
dec
out
adc
xchg
stc
add
incl
movsb
inc
je
ret
jmp
mov
lret
cwtl
repnz
xchg
mov
jl
jge
xor
mov
cmp
sbb
cmc
jae
push
clc
icebp
rorl
pop
mov
mov
mov
jle
xorl
lcall
xchg
dec
sub
adcb
fwait
gs
mov
iret
mov
sbb
leave
pop
dec
pop
jle
lret
jmp
pop
out
mov
jb
addr16
cmp
jmp
inc
push
clc
aas
sarb
sub
xor
push
or
cmp
addr16
mov
in
lds
xor
dec
fistps
push
testb
ret
and
push
addr16
cmp
pop
adc
and
ja
loop
add
xor
shlb
xchg
lret
sub
sub
out
lret
xchg
push
adcl
sub
mov
pop
cs
clc
mov
faddp
nop
lds
mov
or
adc
mov
mov
dec
or
xchg
xor
je
fbstp
clc
iret
push
push
ror
add
fnstenv
out
push
sahf
jle
inc
mov
dec
insl
xchg
mov
push
mul
movsl
push
inc
or
add
sbb
or
mov
outsb
xor
adc
push
ds
jmp
add
add
imul
data16
jle
jno
mov
call
mov
mov
mov
push
sbb
lds
mov
ss
dec
sub
sbb
outsl
mov
xchg
xchg
les
lods
push
clc
call
jge
xchg
pop
cmp
insb
push
lcall
mov
loopne
incb
cs
push
call
fs
xchg
call
pop
jg
frstor
xlat
mov
incb
push
rcl
dec
cld
or
jb
fcoms
out
inc
push
sub
pop
pushl
fst
jae
shrl
and
fwait
jecxz
jne
dec
in
xchg
pop
lcall
outsl
adc
fs
sub
fiadds
mov
repz
pop
pop
jnp
insl
pop
loope
dec
arpl
lea
push
sbb
lea
xchg
inc
xchg
pop
mov
add
xlat
gs
pop
xchg
mov
icebp
test
stos
add
outsl
dec
or
pop
iret
sbb
cmpsl
inc
scas
andb
push
dec
insb
adc
fisttpl
xchg
cli
mov
imul
or
inc
xor
add
add
inc
outsb
fdiv
sbbb
push
leave
sub
lods
pushf
mov
and
test
int3
or
repz
inc
xchg
popf
xchg
es
shlb
or
lahf
jno,pn
test
add
clc
or
xchg
bound
sbb
xlat
xlat
mov
pop
push
cld
aad
fimuls
pushf
orb
shr
jb
cmpsb
shrl
sbb
call
orb
push
or
or
fmul
lahf
mov
push
hlt
sbb
cmp
mov
xor
loopne
jbe
std
jno
adc
xor
mov
leave
sbb
gs
sarb
shll
mov
stc
outsl
insl
push
int3
mov
pop
add
andb
outsb
cld
popa
sub
xchg
push
pusha
xchg
jg
mov
popa
cmp
jmp
icebp
mov
loope
xor
mov
cmp
popl
fcoms
adc
and
fwait
push
rclb
lea
jo
inc
adc
call
cli
dec
test
push
ret
cltd
andl
nop
sbbb
adc
lock
pop
divl
jne
mov
mov
sbb
dec
cmp
push
shll
ja
outsb
inc
aaa
icebp
pop
cld
mov
enter
push
cmpsl
pop
movsl
inc
mov
cmpsb
cmp
cld
xchg
in
rcll
test
sub
dec
sbb
nop
std
jl
jge
addr16
mov
mov
sbb
push
mov
ss
push
push
out
pop
jle
in
pop
test
lock
outsb
loopne
xor
test
fdivrl
jl
xchg
js
or
xchg
movsl
and
test
outsl
inc
xor
scas
arpl
inc
cwtl
dec
pop
jp,pn
test
sub
push
out
repnz
push
lods
cld
adc
pop
test
jp
push
xchg
pop
lcall
pushf
or
xor
ret
insb
sub
mov
and
inc
xchg
movsb
pop
pop
mov
jne
lods
outsb
ja
cmp
sub
out
mov
push
loope
and
adcb
cwtl
pop
sbb
jecxz
pop
test
jmp
clc
mov
xchg
fistps
dec
stc
mov
mov
out
ficoml
pop
cmpsb
lock
push
sbb
jmp
in
mov
cmp
sub
or
imul
add
add
cmp
sbb
adc
daa
push
js
js
mov
cli
ljmp
mov
mov
pushf
push
aam
in
call
push
int
cs
xchg
lods
pop
pop
or
ljmp
mov
add
or
or
adc
repnz
fs
out
jmp
jne
ficompl
lcall
push
mov
test
imul
fistl
faddp
inc
or
xchg
call
in
jge
lret
push
ljmp
lret
in
sbb
xchg
fildll
xor
mov
sbb
xchg
sti
or
pushf
xor
shl
stos
test
pop
xchg
test
dec
mov
cmc
movsl
push
cmp
sbb
stos
mov
lea
invd
out
pop
jle
jbe
js
mov
jns
dec
and
frstor
pop
lock
stos
jg
or
dec
loope
nop
adc
lods
in
in
inc
pusha
arpl
jp
orl
mov
loope
sub
push
call
daa
insb
das
sarb
fwait
lds
aad
xchg
mov
rsm
adc
das
das
jnp
jmp
pop
or
or
fisttpl
pop
sbb
jge
sub
test
aam
xchg
adc
xorb
scas
rep
shr
cmpsb
outsb
and
sub
cs
add
xchg
ss
mov
pop
fstpt
pop
sbb
mov
xchg
mov
stos
js
popa
and
sbb
sbb
pop
fcmovnbe
push
inc
ljmp
hlt
ja
gs
fyl2xp1
dec
jbe
shlb
cmp
dec
mov
jnp
jge
xor
lahf
sbb
inc
sbb
enter
inc
nop
fwait
xor
sbb
jne
daa
test
stos
or
popa
fcomip
lahf
cmpsb
movzbl
aam
dec
inc
pop
or
jb
icebp
sbb
sub
sbb
mov
ljmp
adc
xor
sbbl
adc
pop
or
inc
ret
sbb
xchg
inc
mov
sbb
or
pop
or
mov
cmpsl
cmpsl
ja
sbb
mov
and
lcall
xlat
cltd
pop
fildl
xchg
lods
cli
fs
or
ret
in
stos
cwtl
mov
ljmp
adc
xlat
leave
mov
and
cmpsb
out
je
mov
add
dec
jno
xchg
pushf
je
sbb
fdivr
mov
addr16
xchg
push
fcompl
mov
lcall
and
and
adc
pop
jns
fdivl
and
aad
in
jne
ljmp
mov
pushf
movsb
pop
loop
xor
ret
loop
cmpsb
stos
pop
dec
push
movsl
lods
imul
sub
icebp
daa
xchg
mov
inc
mov
int
imul
push
push
dec
mov
and
and
mov
lock
data16
add
jmp
jge
lcall
ret
mov
popa
add
fdiv
sbb
inc
stc
push
repnz
sbb
mov
sbb
or
push
xor
sub
arpl
scas
mov
std
xor
stos
out
jg
push
icebp
sbb
cmp
jne
pop
sub
addr16
sub
movsb
jmp
stos
repz
jl
add
and
or
xor
push
in
or
clc
mov
mov
sub
and
mov
and
xlat
mov
sub
into
enter
add
sti
loope
stc
call
dec
xchg
shlb
push
add
dec
mov
adc
or
hlt
jmp
loop
mov
push
stos
stc
jne
dec
mov
push
stos
imul
mov
sub
adc
sti
and
pop
pop
push
push
push
divb
mov
pop
xchg
notl
dec
hlt
or
sub
pop
jp
pop
sbb
repnz
mov
mov
ja
adc
loopne
or
mov
bound
lock
in
add
repnz
cmp
cwtl
in
into
ja
cmpsl
push
testb
cmpb
add
pop
aaa
mov
movsb
sbb
push
bound
shrb
cmp
je
or
divb
cmpsl
pop
aaa
jge
mov
aaa
jbe
cmp
repnz
imul
push
loope
cmp
xchg
xchg
lds
fwait
sti
push
bound
jecxz
add
cmp
mov
adc
xchg
or
movsl
cmp
mov
shlb
arpl
loop
ret
loop
lcall
repnz
dec
shl
and
mov
fst
cmpsb
pushf
cmp
in
scas
dec
mov
pop
xor
adc
mov
pop
xor
test
mov
les
mov
cltd
fsts
nop
mov
fnsave
xchg
pop
es
adc
push
mov
sbb
push
lds
cs
pop
inc
rorb
movsb
bound
dec
shrb
mov
add
int
inc
mov
in
popa
xorb
popf
push
fistps
popf
add
mov
fmull
notb
lahf
xchg
out
pop
mov
pop
fisubs
std
pop
stos
clc
jbe
mov
sbb
xchg
adc
dec
int3
pop
fimuls
cmp
sub
hlt
push
data16
gs
adc
fisubl
push
sub
and
dec
popf
pushf
jae
stos
cmp
push
jg
xchg
jae
xchg
sub
mov
or
push
out
xchg
stc
std
outsb
aad
pop
adc
mov
repz
add
int
rolb
lret
add
int
nop
arpl
pusha
sub
sub
xor
add
add
jb
push
mov
xchg
sbb
outsl
clc
sbb
in
xor
inc
cmc
mov
pop
push
cmp
out
out
or
jmp
and
xor
imul
xchg
cmc
repz
fwait
inc
sub
mov
movsb
jle
scas
stos
push
dec
das
mov
gs
sbb
or
fwait
push
dec
mov
ret
pop
xchg
bound
stos
sub
add
dec
ret
xchg
test
test
nop
push
pop
arpl
or
or
xchg
fwait
int
out
out
fadd
addr16
rorb
test
xchg
xchg
inc
jae
insl
fldenv
push
mov
add
scas
int3
pop
or
inc
sbb
push
mov
cmp
dec
fdivr
enter
sbb
aad
jecxz
sbb
roll
cs
push
sub
imul
mov
sub
inc
mov
dec
xchg
dec
add
push
call
test
xchg
out
pop
or
rolb
adc
lods
out
sbb
sbb
sub
inc
mov
xchg
icebp
icebp
jae
lret
xorl
mov
dec
ffree
cmp
std
inc
mov
push
cwtl
inc
addl
adc
xchg
pop
jb
ret
call
cmp
mov
out
mov
sbb
push
mov
pushf
pushf
xorb
test
gs
cs
or
mov
daa
sub
mov
repnz
out
and
push
insl
cltd
ja
rorb
test
inc
test
jae
les
test
mov
inc
jb
mov
loop
lds
ds
sbb
popa
int
cmp
mov
mov
lock
repnz
repz
arpl
sahf
mov
add
mov
xchg
jo
jae
mov
mov
mov
cmp
adc
add
das
test
out
push
dec
push
test
stc
out
xor
sets
pop
enter
and
frstor
rcrl
fwait
pop
jbe
mov
mov
incb
add
and
add
push
push
or
outsb
lods
inc
clc
sub
inc
insb
jg
cmc
dec
mov
adc
imul
push
icebp
xlat
jmp
jno
xchg
push
jae
movsb
daa
popf
ret
andl
pop
aam
test
fs
jg
xchg
or
and
out
adc
push
cs
or
jg
lcall
in
insb
loopne
sbb
jge
or
add
pop
inc
test
scas
xchg
js
ljmp
xor
add
out
sub
int
popa
out
insl
xor
decl
cld
adc
pop
es
in
insb
xor
xchg
mov
and
jle
pop
xor
rcrl
scas
jmp
outsb
mov
in
push
xor
push
dec
or
xorb
mov
or
sbb
fcoml
rorl
fisttpl
mov
rolb
lea
pop
test
add
xchg
iret
mov
or
ficoms
mov
cwtl
push
push
xor
imul
inc
or
xor
push
xor
pop
aas
call
hlt
dec
mov
shrb
lret
jmp
pop
inc
test
push
repnz
hlt
nop
push
dec
repz
pop
inc
mov
sub
pop
jo
fwait
sbb
pop
ja
mov
jae
repz
lret
cli
cmp
adcl
cli
pop
dec
and
scas
pusha
imul
xor
sbb
scas
sbb
sub
xlat
push
stos
sub
sti
cmp
mov
int3
lret
out
push
pop
in
int
stos
sub
xor
call
cmp
or
jnp
jle
lods
stc
pop
imul
jecxz
add
inc
ljmp
xor
jb
testb
lock
cmp
ja
cmp
inc
xchg
push
ret
mov
add
adc
pop
inc
in
and
mov
out
fldz
mov
scas
fnsave
mov
shll
ljmp
cmp
and
lds
adc
mov
xor
je
sbb
jo
xlat
xchg
jno
addb
incl
and
addl
js
jnp
stc
mov
cmp
mov
or
adc
ret
push
mov
pop
ds
inc
int3
xchg
rolb
sbb
fsubs
lret
or
sub
xlat
shrb
scas
out
insl
fs
inc
lods
rclb
movsl
mov
in
push
imul
mov
out
and
cmp
enter
clc
orl
add
rcll
sahf
sbb
adc
jmp
cld
or
xchg
adc
mov
and
sbb
push
ret
dec
ret
mov
dec
mov
mov
lds
gs
cld
pop
out
ret
repz
adc
in
stc
popa
out
ds
mov
jp
sub
sbb
xor
cltd
jmp
mov
xchg
clc
pop
jns
sbb
xchg
lock
ljmp
push
sub
movsl
xchg
adcb
pop
test
xchg
sarl
lods
pop
pop
dec
clc
xchg
cmp
jmp
mov
cmp
in
shrl
daa
lcall
int
dec
fdivrl
das
sahf
std
pop
jnp
aad
sti
loope
sub
icebp
stos
clc
add
enter
cli
push
cmc
sbbb
gs
jo
xchg
mov
jne
xor
xor
in
mov
push
mov
cmpsb
in
cwtl
mov
fs
xor
cmp
dec
mov
mov
xchg
inc
mov
aaa
std
dec
cwtl
movsb
cmp
mov
je
mov
sub
out
ret
call
mov
xchg
push
cmpsl
adc
test
lahf
in
mov
fisttpl
mov
rclb
fsub
mov
and
lret
adc
popa
cltd
and
cmp
mov
xor
in
jae
inc
lds
repz
push
sbb
push
sub
lret
movsl
aad
or
sub
sub
jmp
inc
adc
xchg
mov
mov
aad
push
aas
adc
dec
xchg
xor
xor
pop
mov
and
or
and
fcoms
dec
add
inc
xchg
rol
push
mov
pop
je
push
fs
push
pop
xor
sbb
in
push
sti
arpl
je
lea
mov
push
mov
pop
loope
cmp
sub
mov
add
pop
push
mov
test
adc
xlat
cli
jmp
add
mov
jecxz
xor
frstor
lods
cs
ret
jns
in
sti
mov
movsl
dec
push
movsl
int
imul
and
and
cli
dec
pop
lcall
in
ror
push
in
ret
adc
sub
popa
mov
popf
or
fcomps
cmpsl
mov
mov
popa
das
mov
cmp
dec
fsubrl
sahf
in
addr16
lret
fldcw
sub
aam
das
lds
insb
cmpsb
sub
pop
xchg
xchg
adcl
mov
shl
add
es
cmc
jns
sub
shlb
and
jne
and
in
cltd
dec
sub
in
inc
sub
imul
pushf
jg
jns
add
icebp
lahf
js
mov
and
xchg
js
call
mov
pusha
or
dec
sarl
push
mov
daa
lret
mov
or
mov
pop
push
jecxz
sub
pop
or
insl
bound
es
flds
push
lods
in
jb
pusha
cmc
out
push
push
inc
and
inc
xchg
int
nop
mov
pop
mov
adc
mov
mov
jg
cs
sbb
mov
or
and
insl
cwtl
and
rclb
lcall
repz
aas
cmpsb
outsl
or
popf
aam
aaa
or
jl
ds
dec
xor
mov
inc
lret
sbb
ljmp
hlt
cmc
out
out
in
stos
push
fs
jno
lret
sbb
shlb
xor
rcl
push
js
and
lcall
fdiv
popa
and
shlw
std
xor
pusha
leave
adc
sbb
icebp
jg
shr
fidivrs
adc
sub
pop
mov
mov
fsubs
cmp
mov
inc
push
add
testl
mov
scas
fidivrl
lds
in
jp
in
pop
test
push
test
jns
hlt
push
mov
adc
stos
cs
aam
lret
iret
pop
jl
in
sub
jne
xorb
dec
push
sbb
aas
aad
cmp
mov
xchg
add
and
mov
lock
aaa
fisubl
xchg
add
sti
cltd
mov
js
mov
aad
mov
out
imul
push
lahf
std
jmp
cwtl
mov
pop
sbb
adcl
call
fs
push
adc
das
mov
mov
arpl
xor
or
jns
xchg
sbb
test
xor
bound
jo
or
mov
in
sbb
stc
pusha
xchg
fldcw
cmp
sub
cmp
cmp
push
cmpsb
jb
xor
rclb
testb
aad
dec
mov
ss
and
rorb
jle
repz
xchg
push
call
stos
and
push
inc
mov
lret
je
or
and
test
lds
orl
aaa
mov
sub
insb
lods
lea
mov
or
xor
into
mov
stc
lods
mov
int
add
xlat
pop
hlt
out
add
shll
or
push
int3
movsl
es
and
aad
push
dec
jo
test
bound
push
dec
pushf
xlat
sbb
fld
add
cmp
jne
push
adc
dec
ja
fimuls
aaa
jo
pop
das
ja
lret
pusha
icebp
sub
sub
adc
xor
ficomps
jns
or
adc
pop
cmp
into
pushf
in
cli
sbb
pushf
xchg
shll
frstor
pop
mov
or
xchg
xor
clc
mov
stos
mov
nop
fstl
cmp
sbb
mov
inc
test
mov
scas
cmc
sub
pop
xor
fildll
icebp
cltd
add
add
inc
xor
cmp
xchg
adc
stos
aam
jae
sub
fwait
xor
lret
das
scas
mov
rolb
jae
or
dec
jno
adc
stos
jbe
movsl
int3
scas
js
dec
repnz
iret
mov
lea
sti
jge
adc
pop
repnz
push
leave
icebp
stc
aaa
insl
cmp
pop
jge
pop
add
or
xchg
push
add
in
icebp
push
inc
std
mov
adcb
jae
mulb
xor
es
iret
shr
adc
jbe
cmp
pop
pop
cmp
pop
adc
sub
add
popa
insb
pop
je
popa
rcrl
and
popfw
adc
pusha
ja
or
push
xchg
mov
mov
push
lahf
sarb
cmpsl
fcompl
addr16
mov
and
adc
rcrb
pop
mov
mov
dec
cmp
xchg
stc
movsl
scas
jb
clc
in
lahf
jno
cli
scas
dec
fdiv
loop
dec
lret
insl
mov
enter
fs
push
arpl
push
mov
lret
sbb
jp
push
std
jnp
cltd
pushf
fistpl
mov
sub
xchg
std
fwait
push
mov
xchg
je
lds
popf
xchg
and
cmc
in
call
jl
lods
mov
mov
xchg
dec
movl
pop
mov
test
jle
and
popa
mov
push
shlb
xchg
stc
outsb
push
pop
js
insl
mov
lods
inc
xchg
sbb
xor
mull
adcl
lret
out
mov
mov
stos
pop
insb
mov
pop
sbb
fnstsw
dec
mov
lahf
or
fdivrs
stc
bound
mov
cmp
cmp
dec
push
popf
mov
mov
xlat
add
mov
pop
cmpsb
fwait
sub
repz
fidivs
jb
add
cmp
or
ret
xchg
dec
call
movsb
mov
push
mov
adc
sub
sbb
and
icebp
lock
stos
xchg
push
test
mov
adc
jo
ljmp
fwait
xchg
ret
xchg
lret
lock
les
xor
mov
adc
adc
rcrb
dec
iret
cs
lcall
aad
jmp
test
or
lret
lretw
mov
scas
push
lcall
je
jbe
bound
pop
jo
mov
xor
incb
pusha
sub
ret
popa
js
push
movsb
mov
lds
lea
cmp
pop
push
in
xchg
push
fcoms
xchg
pop
and
pushf
pop
sub
mull
stc
ret
ljmp
push
jge
out
pop
dec
scas
and
add
pop
cmpsb
add
and
push
fnstenv
aaa
push
add
mov
aaa
lods
test
scas
xorb
js
and
addr16
add
add
or
outsl
lea
xchg
int3
int
lcall
xor
jp
inc
int
sub
jmp
mov
in
mov
jl
mov
shlb
repnz
cwtl
adc
cmpsb
jge
sbbb
or
cli
ret
lds
xlat
mov
repz
jge
rcl
mov
cmp
loop
cmp
rorb
cmpb
pusha
loop
add
outsl
into
xor
mov
push
and
repz
adc
lcall
mov
les
stc
mov
sbb
xchg
add
fistpll
movsb
jmp
daa
xor
fiaddl
shll
lods
or
in
lcall
rclb
jno
xor
or
mov
mov
jg
imul
jg
adc
push
dec
sub
das
xor
out
dec
xchg
xor
shrb
mov
pushf
jecxz
rcrb
dec
mov
xchg
xor
and
cwtl
jno
into
pop
fnstsw
pop
lea
mov
lock
ljmp
push
and
cmpsl
mov
mov
stos
imulb
push
lds
in
jbe
inc
jbe
fs
lea
add
out
dec
clc
into
repz
push
imulb
or
dec
into
ljmp
cmc
loopne
gs
loopne
mov
iret
ss
test
mov
jbe
jle
fxch
push
pop
mov
ss
std
mov
adc
mov
lods
and
jb
pop
loop
mov
mov
push
test
add
pop
scas
xchg
mov
ljmp
jle
mov
push
inc
data16
xor
or
xchg
fwait
roll
inc
sbb
xchg
aad
movsb
inc
add
rcr
stc
fs
cs
jle
repz
rorb
int3
aaa
adc
and
cmpsb
mov
lock
dec
js
inc
cmp
or
push
subb
sub
fsubrl
or
mov
inc
lods
push
clc
mov
or
or
scas
add
push
and
in
or
cmpsb
xor
or
into
xchg
imul
push
dec
aam
pop
and
and
out
test
push
call
cs
jne
stos
sub
repz
dec
add
pop
fcompl
or
ss
shll
loop
lock
mov
xchg
mov
ss
mov
jns
cld
inc
mov
xacquire
or
xor
xor
enter
leave
daa
roll
ja
adc
mov
dec
fs
sbb
sarl
lret
in
sub
cmp
mov
arpl
dec
or
mov
inc
or
mov
imull
jo
sub
jb
mov
mov
das
or
cmp
and
add
cmp
mov
inc
fstpt
cmp
and
in
test
cwtl
sub
inc
aam
outsl
fdivl
sar
lods
add
xchg
push
push
ljmp
adc
cmc
sbb
sub
mov
inc
adc
push
fstl
andb
mov
dec
outsb
addr16
jb
fnstcw
inc
inc
mov
test
add
filds
jl
icebp
dec
push
pop
loop
xchg
mov
loop
xchg
jne
xor
enter
int
aad
icebp
jge
pop
lahf
shr
sub
aaa
aam
xor
jbe
popa
int3
xchg
stc
enter
or
jle
and
ret
aaa
lods
xor
lods
mov
test
push
pop
mov
xchg
test
mov
mov
shrl
out
mov
adc
scas
popf
mov
mov
sbb
mov
cwtl
push
cmpsl
xchg
mov
adc
xlat
fnstcw
jno
adc
pop
test
or
not
jnp
push
out
xchg
ror
push
clc
sub
pop
cmp
sub
movsb
stos
imul
sub
xor
adcb
or
xchg
sarl
jno
dec
movsb
sti
hlt
xchg
pop
ds
sub
cmpsb
jnp
dec
push
loopne
out
neg
nop
add
inc
dec
mov
cmpsl
push
pop
cmpsl
cli
lock
aaa
cmp
test
push
or
sbb
loop
jne
and
ja
in
dec
pop
stc
imul
dec
or
mov
stos
pop
dec
add
mov
in
cmp
jp
or
pop
push
ffree
mov
lret
add
sti
xor
cmp
cmp
mov
mov
inc
dec
mov
ja
in
xor
sbb
negl
add
xor
sbb
stos
mov
sbb
cmc
out
sub
sub
cwtl
clc
sub
mov
sbb
push
icebp
cmp
loopne
stos
mov
mov
pop
dec
pop
or
xchg
sbb
mov
xor
test
adc
push
lods
aaa
adc
pop
mov
mov
xchg
cmp
movsl
ja
cli
lods
fistl
lret
repz
je
dec
adc
push
in
or
mov
and
mov
push
aaa
roll
pop
lsl
xchg
aas
mov
jmp
cmpsl
add
jecxz
xor
lock
scas
push
sahf
sarb
cmp
hlt
xchg
aaa
inc
inc
mov
fsubl
pushf
jae
into
push
cmpsl
ds
ret
jge
sub
xchg
outsl
jp
lret
rorl
lds
push
inc
xchg
in
pop
adc
js
and
jne
dec
sahf
xchg
dec
das
sub
push
pusha
mov
push
push
leave
scas
imulb
pop
dec
pop
cmp
das
add
das
pop
in
jns
scas
or
push
out
and
sti
jns
into
hlt
cltd
clc
cmpsb
xor
mov
pusha
adc
in
addb
jg
pop
dec
cmp
mov
push
repz
fdivrl
leave
sar
int3
jmp
pop
gs
and
mov
int3
mull
cli
pop
push
ret
imulb
ret
jns
inc
xor
repz
jbe
js
lea
jbe
mov
dec
dec
call
les
stc
xor
fstpt
sub
stos
jbe
adc
xlat
clc
pmuludq
mov
add
mov
shl
js
das
dec
out
mov
jmp
ret
inc
push
dec
push
xchg
push
or
xchg
dec
pop
mov
in
jg
imul
mov
pop
sub
scas
pop
mov
mov
fdivl
cmp
mov
lock
mov
push
adc
sahf
push
das
mov
cmp
leave
mov
and
nop
out
or
mov
sub
jns,pn
xchg
adc
dec
fstpl
xor
shrb
inc
xchg
dec
shlb
dec
cmpsl
mov
dec
sti
test
inc
shll
pop
test
ljmp
and
push
outsl
jno
test
sti
scas
add
sub
pop
movsl
in
cli
insb
mov
inc
in
pop
test
dec
and
xchg
mov
mov
or
cmpsb
adc
nop
sti
scas
aam
loop
fildl
mov
and
sub
mov
dec
pushl
out
mov
xchg
jge
lea
clc
les
outsb
xor
cld
sub
lcall
repnz
div
push
xchg
sub
cmp
loopne
xchg
int
sub
aam
mov
shlb
fstpl
subl
inc
sbb
xor
mov
pusha
pushf
inc
mov
xchg
jmp
sub
pop
xchg
in
ret
ds
stos
shr
jp
fldl
in
inc
push
andb
xchg
push
div
fisttpll
fdivrs
rcr
mov
outsl
cmc
clc
fisttpl
jnp
ds
in
mov
test
push
lods
or
pop
hlt
in
push
aaa
test
pop
cs
jg
xchg
cmp
mov
dec
pop
punpckldq
push
or
loopne
push
sub
push
add
test
sub
cmp
hlt
inc
mov
repz
xchg
mov
cmpsl
jae
push
inc
xlat
cld
jno
inc
in
rcrl
lahf
scas
push
pop
xor
jbe
push
in
shl
jb
ss
insl
fsubrs
jg
scas
fiaddl
push
push
xor
insl
addr16
add
sbb
sub
sub
mov
test
lods
adc
mov
xor
arpl
out
dec
or
pop
or
and
inc
push
into
inc
gs
pop
jne
or
pop
pushf
mulb
adc
mov
fnstsw
loop
jo
jge
push
xchg
mov
scas
mov
int3
cmp
sub
cmp
arpl
rclb
pop
lret
pop
cmpsb
inc
fmuls
mov
push
inc
cmp
jnp
data16
xor
iret
mov
addb
mov
out
mov
decl
loop
rorl
ret
jp
dec
and
stos
ret
into
fs
add
jge
pop
fwait
stos
adc
pop
push
fwait
jbe
xchg
rclb
mov
sub
call
idivb
test
adc
insl
mov
mov
pop
stc
pop
mov
nop
jmp
scas
push
xchg
les
xchg
jno
outsl
sbb
mov
imul
scas
add
jb
sub
jae
in
cmp
dec
cmovp
fcmovb
sti
push
xchg
pushf
andb
test
push
stc
xor
dec
inc
dec
jp
insl
cwtl
fists
sub
aas
pop
loope
mov
jno
sbb
jb
lahf
xlat
mov
push
out
dec
mov
adc
mov
fsubr
dec
nop
nop
add
fldt
fsts
js
adc
test
jl
aas
ss
or
andb
incl
bound
jb
adc
pop
mov
sub
mov
dec
add
pop
mov
enter
mov
push
add
loopne
xor
dec
ficoms
cmp
push
out
inc
cmpsl
outsl
mov
aas
mov
push
jmp
mov
pushf
sbb
call
add
lea
cmp
int3
dec
cmpsb
incl
cmp
sbb
jmp
fldt
xchg
adc
out
and
cwtl
add
ficomps
stos
nop
test
lds
xor
call
jne
inc
xchg
jae
push
in
pop
and
pop
pop
inc
xor
test
adc
out
or
push
repnz
pop
in
hlt
int
nop
in
xchg
pop
jae
sti
sbb
outsl
push
and
clc
add
push
pop
pop
mov
js
mov
push
sbb
fldt
or
popf
push
inc
rcrl
xchg
in
dec
and
fucom
imul
cmc
pop
pop
mov
inc
addr16
daa
popf
ret
mov
lret
inc
popa
ja
cmp
ja
add
daa
jp
mov
cmpsl
jmp
xor
jecxz
xchg
fsubr
add
pusha
push
add
dec
fstpl
pop
cmp
mov
js
fldenv
arpl
fdivrs
xor
aam
pop
dec
or
mov
mov
mov
insl
xchg
cli
add
push
jge
clc
divl
pop
mov
inc
lods
dec
push
or
and
in
loope
lret
clc
dec
mov
test
adc
test
sbb
pop
sahf
xchg
int3
jecxz
jg
outsl
roll
fwait
jecxz
push
stos
lahf
mov
xor
cmp
mov
iret
dec
push
mov
xor
rcl
pop
add
pop
test
arpl
mov
movsb
mov
insb
inc
gs
xorl
push
sub
dec
rcrb
add
cmp
inc
loop
mov
iret
dec
mov
adc
in
test
ret
loope
fbstp
push
sbb
xchg
jo
mov
jo
pop
fdivrl
and
fidivrl
or
scas
cmpsb
sbb
in
push
rolb
outsl
out
aam
inc
add
xor
mov
dec
jo
sub
mov
repnz
dec
pop
cld
cld
xor
in
ss
out
dec
and
or
jo
test
fisubrs
pop
xchg
nop
adc
enter
pop
outsb
push
test
lods
es
jmp
sub
xor
clc
std
cmp
jb
push
loop
shrb
pusha
les
fcomip
mov
mov
adc
pusha
mov
dec
pop
repz
mov
inc
mov
repz
test
cmp
push
xchg
pop
ja
xor
sub
xchg
add
xchg
insl
xor
in
inc
rcrl
fnstsw
and
pop
arpl
mov
dec
and
out
or
mov
pop
arpl
lret
adc
idiv
imul
bound
sbb
inc
sbb
xlat
push
shll
inc
shlb
pop
in
ja
cmp
fistpl
mov
insb
jl
mov
pop
push
test
fs
add
inc
push
mov
sahf
ja
pop
pop
sub
das
pop
aaa
clc
mov
jnp
test
cwtl
xor
gs
call
decl
push
mov
cld
cltd
je
mov
dec
daa
xor
push
jne
sti
scas
jb
cmp
mov
lock
inc
adc
adc
cmp
dec
jo
mov
mov
nop
jp
sti
stos
insl
add
mov
pop
add
inc
sbb
lcall
sbb
dec
loope
out
push
mov
pop
xor
mov
dec
sbb
push
adc
stc
loop
adc
add
jg
and
jmp
dec
cmp
js
je
xor
mov
int
stos
mov
mov
sub
data16
mov
rcrl
lods
sarb
ja
and
adc
arpl
ret
add
sbbl
xchg
cltd
outsl
and
movsb
clc
repz
call
mov
adc
bound
or
test
int
mov
hlt
popa
jmp
scas
dec
pusha
jg
leave
mov
in
jno
cmp
lock
mov
mov
push
icebp
insl
pop
push
movsb
js
add
mov
imul
pop
int
imul
sub
mov
es
mov
movhps
jbe
mov
mov
sbb
rcll
cmp
rcl
ds
bound
cmp
movsl
sub
pop
jl
jl
push
or
loopne
js
mov
leave
fidivs
fisttpll
js
inc
cmp
inc
adc
es
jb
call
mov
sbb
cmpsl
pop
xchg
inc
aad
pop
bound
negb
inc
mov
mov
insb
sar
jnp
mov
insl
xor
sub
imul
lods
and
jo
and
popa
xchg
pushf
shl
dec
pop
pop
sub
shrl
push
divb
hlt
mov
fldl
pop
pop
enter
push
push
pop
add
push
mov
and
cmp
add
cwtl
jno
add
mov
loopne
or
xchg
shlb
mov
fbstp
sub
xor
add
xor
xchg
mov
icebp
dec
lods
adc
test
xor
adc
lahf
insb
pop
je
sti
mov
inc
mov
cmc
roll
dec
ret
mov
data16
popa
inc
jno
pusha
mov
cltd
and
cmp
je
add
fcomp
popf
jecxz
dec
loope
pop
dec
in
jae
ret
daa
jbe
lcall
aad
xchg
xor
std
push
sti
lods
test
sub
repz
mov
push
lahf
pop
push
lods
push
dec
push
mov
mov
test
cmp
je
cmp
leave
add
mov
push
push
cmp
or
icebp
ljmp
test
int3
imul
sub
push
outsl
js
fs
lcall
mov
dec
pop
sar
jns
cli
rep
nop
mov
jle
xchg
lcall
push
out
lds
pop
and
jno
mov
sbb
in
sbb
ss
xor
sub
cmc
pop
jecxz
mov
test
aad
into
and
out
xor
pusha
add
bound
lret
enter
xlat
aam
stc
sub
pop
mov
sahf
sahf
mov
mov
scas
push
inc
cltd
in
xor
mov
mov
inc
aaa
shl
int
pop
roll
scas
push
pusha
mov
cmp
dec
mov
pop
mov
enter
cld
jge
mov
dec
cmpsl
xchg
xor
cs
cmpsb
rorl
imul
lret
mov
sub
ds
outsl
pop
add
or
scas
mov
fildl
sub
cli
cmp
shll
cld
aaa
inc
mov
bound
ret
dec
pop
call
sahf
sbb
and
adcb
stos
lahf
xchg
sahf
roll
xor
xor
in
and
loop
adc
xor
dec
icebp
push
sahf
aaa
xchg
mov
pop
mov
mov
pop
aas
ds
pop
push
sub
lahf
dec
clc
inc
hlt
mov
push
add
push
push
sti
sub
jg
test
psubusb
or
dec
jl
ret
add
push
jo
popa
jmp
push
push
sbb
push
js
sbb
or
mov
cmp
popl
mov
sarl
push
add
pop
test
sub
and
pop
arpl
pop
xchg
scas
sub
push
mov
mov
cmp
xchg
mov
out
sbb
lcall
cmp
dec
pop
sti
adc
and
xchg
mov
push
mov
and
lods
fildl
push
xor
mov
stos
or
adc
ret
jl
dec
xchg
jns
pop
adc
mov
js
pop
out
inc
and
inc
lea
icebp
push
add
mov
cli
pop
xchg
jno
xchg
sbb
or
add
jno
mov
cli
mov
movsl
cmp
lock
xor
mov
jg
jg
xor
sahf
lret
xlat
xchg
in
icebp
clc
jno
adc
jmp
mov
mov
outsb
cwtl
stos
jmp
inc
pop
cmc
ljmp
xchg
jg
or
test
push
fwait
jae
ror
jae
cmpsb
xchg
test
ja
mov
movsl
into
add
mov
leave
push
mov
test
inc
push
insb
cmpsl
lds
push
decl
pop
das
push
lcall
cmp
dec
xor
loopne
pop
fwait
insb
sbb
ljmp
jmp
fs
cs
mov
daa
mov
cmp
xchg
jo
adc
fidivl
or
jmp
out
mov
inc
push
outsl
lret
cwtl
movsl
or
push
js
push
movsb
jecxz
in
leave
imul
outsb
mov
xchg
dec
psadbw
jmp
sbb
pop
jp
dec
mov
dec
mov
pop
insb
insb
cld
xchg
add
negb
mov
test
lods
mov
xchg
pop
mov
jbe
pop
cli
xor
and
sub
mov
out
add
cmpsb
push
stos
stc
mov
xchg
sbb
add
cltd
mov
movsb
jo
rcll
fwait
adc
xlat
movsb
jecxz
out
loopne
insb
sbb
ljmp
bound
leave
push
cmc
mov
dec
push
mul
adc
mov
xchg
jl
inc
call
inc
fbld
movsb
or
popa
inc
bound
and
or
shll
mov
pop
cmc
jns
push
arpl
sahf
pop
enter
inc
pop
or
inc
push
call
inc
mov
rcrl
daa
orl
mov
dec
pop
in
call
sbb
dec
sahf
push
cltd
pusha
or
daa
fdivrl
adc
sti
shll
lret
lock
or
addr16
xor
inc
mov
mov
mov
inc
mov
lock
mov
dec
pop
andb
and
add
pop
incb
mov
push
enter
into
sbb
inc
iret
add
cmp
and
rorl
xchg
pop
dec
adc
xchg
js
mov
lret
not
adc
adc
cmp
inc
shlb
inc
sbb
in
std
add
fcmovbe
push
pop
js
dec
xchg
adc
lock
js
loope
sbb
lcall
rcll
cmc
pop
push
ja
roll
inc
mov
xchg
mov
pop
repz
mov
outsl
pop
inc
stos
iret
pop
jno
ss
je
in
stc
in
mov
xchg
jp
fcompl
loopne
mov
cld
xchg
repz
mov
lods
in
mov
pop
aam
mov
dec
and
jb
sub
add
int3
mov
bnd
fwait
pop
add
or
sub
adcb
add
inc
adc
mov
jbe
dec
in
test
sub
lret
jecxz
jecxz
daa
pop
sbb
dec
and
arpl
fisubl
arpl
add
adc
inc
test
fs
push
inc
fists
inc
jb
jne
sbb
stc
and
jle
mov
and
mov
push
mov
sahf
in
mov
sub
fs
inc
push
scas
lcall
mov
jle
data16
mov
jno
cli
data16
mov
xorl
mov
mov
dec
pop
js
inc
sub
mov
loop
dec
inc
pusha
inc
add
sub
scas
rolb
inc
inc
or
mov
cmp
loope
xor
adc
popf
bound
mov
imul
push
lock
lods
ss
lods
cs
adc
fildll
leave
mov
push
shrl
addr16
cmp
aas
sub
movsb
pop
sbb
sbb
mov
sahf
mov
push
les
es
cmpsb
inc
gs
adc
sub
int
sarl
push
cmpsb
imulb
scas
movsl
sbb
mov
out
mov
and
add
push
push
xchg
addr16
pop
mov
jbe
jmp
cli
mov
jno
mov
jo
fs
out
nop
fcompl
xor
dec
lret
mov
into
stc
ret
test
leave
test
jns
ja
cmpsl
sbb
inc
add
or
push
adc
jmp
jge
ret
leave
lock
xchg
jg
add
scas
es
out
test
inc
dec
rorl
fisubs
rcr
dec
leave
arpl
mov
dec
mov
xor
sbb
imul
clc
xchg
in
mov
lods
xor
push
in
adc
inc
mov
ljmp
enter
lahf
pushf
test
jbe
mov
test
adc
jmp
xor
out
in
sub
ret
out
into
out
in
or
adc
out
arpl
stc
addr16
cmpsb
cli
cmp
inc
popf
jge
stos
mov
cmpsb
jne
jno
incl
fidivl
stos
data16
mov
jne
addb
cmpsb
sub
push
paddq
inc
pop
xor
mov
aam
inc
sub
add
or
cmc
pop
fsubrl
aad
pop
xchg
jne
mov
or
cltd
sbb
push
loop
dec
adc
or
incb
mov
xchg
stos
adc
dec
stos
cmpb
mov
dec
mov
inc
jae
lock
adc
cld
push
xchg
test
lret
out
push
jns
iret
fisubrl
jno
dec
dec
dec
mov
adc
mov
and
movsl
ljmp
ds
ja
lret
push
cli
enter
int3
stos
cmp
outsl
sub
push
mov
iret
dec
jno
dec
incl
cltd
push
cmp
pop
xor
xor
fs
lds
sub
add
adc
hlt
mov
das
mov
inc
scas
outsl
subl
sub
test
jg
mov
and
mov
fidivl
cmpb
fcoml
add
mov
mov
push
push
imul
test
or
into
sbb
and
sbb
icebp
xor
imul
inc
push
out
mov
fbstp
mov
pcmpeqb
sub
data16
jbe
cmp
sbb
inc
stos
mov
mov
or
jno
sahf
cmpb
scas
sub
adc
jp
dec
gs
hlt
hlt
add
xchg
das
jmp
jle
xor
mov
daa
std
loope
movsl
scas
adc
shrl
popa
adc
test
or
mov
lahf
mov
mov
or
mov
pushw
int
and
daa
aas
aad
xchg
sarb
bound
xor
inc
add
push
stos
jne
cmp
jmp
pop
mov
shlb
in
loopne
push
dec
inc
test
push
pop
leave
mov
stos
cmp
stc
push
xlat
inc
shll
call
mov
fistps
push
mov
aad
dec
divb
rcll
pop
aas
bnd
add
ja
aas
push
or
es
loope
mov
call
shll
mov
jle
mov
out
add
stc
cld
mov
insl
mov
xchg
inc
adc
mov
stos
out
inc
in
cmp
jp
pop
pop
divl
add
out
subl
xchg
adc
jg
cmp
adc
sbb
sub
int3
mull
jp
insb
pop
loopne
sbb
sub
mov
jns
jns
push
icebp
dec
aaa
pusha
inc
nop
jbe
fsubrl
data16
fildl
or
or
mov
pop
insb
xor
fs
mov
imul
jno
mov
std
cmp
ljmp
push
push
ljmp
loop
xchg
in
mov
jb
fcoml
rorb
cmc
mov
and
xchg
pop
hlt
mov
add
mov
ljmp
mov
mov
pop
inc
cli
pop
xchg
sbb
add
rclb
mov
pop
push
xor
fisttpl
rolb
push
mov
cmp
addr16
jg
adc
pop
inc
mov
cmp
test
adc
ret
xchg
xor
stos
repnz
cs
lcall
aaa
sti
repnz
daa
sub
test
and
mov
xchg
outsl
inc
mov
in
int3
gs
test
mov
sub
aam
pop
data16
stos
pop
outsl
repnz
sub
xorb
in
xchg
movsl
daa
xchg
test
inc
in
jecxz
rcrb
pop
loope
jnp
fistl
fdivrl
xor
push
and
pop
inc
int3
or
xchg
pushl
pop
js
jle
add
scas
hlt
fs
mov
andl
cmc
out
sbb
sbb
out
pushf
js
sbb
jnp
and
ja
ja
pop
pop
mov
inc
push
pop
add
or
int
sub
inc
icebp
not
outsl
cwtl
pop
or
push
sub
andl
stos
sub
les
xchg
icebp
cwtl
mov
inc
pop
mull
pop
mov
inc
shll
inc
xchg
shrb
out
les
add
fbstp
xorl
negl
xchg
int
xchg
outsb
add
into
xlat
ret
push
shlb
add
mov
jb
sub
test
cmp
adc
add
jecxz
mov
jp
dec
xchg
mov
ss
push
mov
ja
scas
inc
in
and
icebp
xchg
outsb
push
stos
xchg
aas
lret
dec
inc
push
aas
or
int3
mov
mov
push
jae
xor
lods
mov
js
out
clc
push
enter
das
out
aad
ljmp
cmp
jno
push
adc
xchg
test
popf
add
or
pop
pop
fcomps
das
xchg
ret
inc
mov
jo
mov
call
je
test
shlb
pop
cmpsb
xlat
cmp
cmpsb
jecxz
icebp
pushf
int
daa
dec
push
rcr
push
cmp
pop
cli
subl
jecxz
lahf
pop
adc
js
pop
pop
mov
mov
mov
dec
loopne
sub
add
fisttps
movsl
dec
jno
loopne
xor
fucomp
imul
mov
inc
sub
push
push
jmp
cli
arpl
nop
xlat
lret
rolb
sub
add
pop
xchg
sarl
inc
aas
xor
pop
push
xor
inc
pop
flds
jae
xor
rorb
push
adc
ret
addb
shll
adc
and
lods
in
pop
inc
xor
lea
das
sti
dec
inc
dec
push
jl
dec
sbb
or
mov
stos
jecxz
mov
out
cmp
lret
push
pop
dec
add
dec
movsb
push
mov
adc
aad
xchg
cltd
or
sbb
cld
call
add
loopne
dec
subb
and
sbb
insb
roll
bound
jo
mov
xor
inc
mov
hlt
dec
das
jns
outsl
imul
sbbl
testl
leave
daa
stc
inc
mov
mov
dec
or
push
aam
in
arpl
out
daa
add
out
leave
mov
sub
and
fsubs
mov
test
push
cmp
mov
in
push
and
outsl
std
fisttpll
xor
or
xchg
pop
xor
adc
insb
in
inc
popf
dec
into
mov
jg
insb
sbb
cli
xor
mov
push
pop
mov
mov
mov
movsb
jmp
xor
es
iret
iret
pop
arpl
out
stos
inc
fwait
sysret
jne
mov
jno
ss
call
in
pop
or
pop
repz
xor
mov
call
in
mov
cli
mov
jno
xchg
ds
mov
mov
repnz
jg
cmpsb
cmp
mov
mov
jae
fstpt
cmpsl
xchg
xor
mov
jmp
adc
mov
adc
dec
xchg
lock
pop
sbb
psubb
dec
mov
ss
test
inc
cwtl
or
sub
adc
je
stos
inc
test
push
js
sub
lcall
mov
add
and
mov
ret
dec
and
dec
sub
xor
mov
mov
cmp
or
lret
arpl
subl
out
ja
jne
lock
push
or
popa
mov
cmp
sbb
mov
push
add
lea
and
inc
daa
jg
pop
jbe
mov
in
lret
cmp
imul
sbb
repz
sbb
lcall
cld
mul
leave
scas
sarb
push
mov
lock
stos
mov
xchg
mov
repz
idivl
sbb
fcomp
ficompl
mov
and
xchg
jmp
in
dec
aaa
inc
inc
xchg
out
loopne
lret
in
jne
push
jb
test
loope
pop
cmp
insb
pop
fs
in
into
xlat
mov
mov
les
cs
icebp
xchg
call
sub
inc
stos
jmp
add
mov
stos
jge
xor
fidivrs
lods
jecxz
adc
sbb
out
mov
add
aaa
aam
inc
or
or
dec
sub
pop
dec
pop
add
xlat
push
enter
mov
ret
ret
xchg
adc
or
arpl
andl
leave
in
or
and
imul
mov
sub
mov
fistps
call
mov
push
and
mov
js
adc
sbb
dec
dec
pushf
mov
push
pop
in
pop
aas
test
push
mov
xor
adc
ljmp
or
in
adcl
cs
lea
cmp
and
test
stos
cmp
mov
mulb
xchg
inc
cmp
jo
jmp
in
push
cmp
adc
out
je
push
push
and
pop
int3
cmp
xchg
pop
mov
push
push
icebp
push
sub
repz
cli
sahf
icebp
and
aas
vshufps
sub
fwait
mov
imul
mov
jo
incl
xchg
push
subl
sbb
and
jnp
jno
inc
movsb
test
push
mov
test
scas
lcall
xchg
leave
xchg
cmp
out
fcmovnu
xor
mov
call
push
idivb
cmp
mov
pop
mov
push
enter
xor
pushf
insb
enter
add
pop
gs
jg
dec
sahf
insl
cmp
xchg
imul
or
divps
dec
mov
push
or
xlat
mov
pop
out
or
stc
out
repnz
mov
dec
jo
es
shr
loop
or
fisttpl
jbe
and
rolb
mov
nop
mov
ret
popa
cmp
mov
mov
mov
lahf
and
ds
and
lret
mov
push
sbb
data16
add
push
aaa
frstor
pop
jo
cs
adc
mov
stos
scas
and
shlb
jo
add
decl
adc
jbe
scas
adc
loop
imul
xchg
sub
cmp
jnp
mov
std
push
call
out
out
jl
dec
pop
mov
mov
push
insb
adc
out
lea
add
dec
lret
add
dec
dec
lcall
mov
mov
mov
add
pop
ret
mov
rclb
call
push
sti
sbb
scas
add
out
stc
mov
adc
lods
push
pop
xchg
cmpsb
push
dec
inc
jae
and
std
push
test
outsb
into
in
adc
adc
dec
adc
pop
inc
mov
pop
xor
pop
idiv
inc
pop
insb
insl
loopne
mov
xor
cltd
jno
mov
mov
pop
inc
aad
lahf
xor
add
xchg
and
mov
pop
cmpsb
sub
fisubrl
shlb
repnz
icebp
push
mov
mov
cmpsl
mov
scas
push
adc
mov
jge
lcall
adc
xchg
and
rclb
inc
mov
repz
pop
push
xchg
inc
inc
jns
icebp
jmp
decl
pop
rclb
sbb
adc
xchg
neg
rcrl
mov
out
xorb
insb
inc
js
into
subb
mov
dec
fcomps
jo
push
push
repz
jb
sub
push
xchg
and
sbb
dec
iret
pop
addps
iret
ljmp
ljmp
cmpsl
fwait
in
sbb
rol
leave
and
mov
and
xchg
lock
mov
fsubrs
add
or
roll
sti
mov
inc
xchg
push
cmp
or
inc
sbb
jnp
leave
out
mov
pop
jl
loopne
fs
xlat
or
push
ds
cmp
xor
pop
push
movsb
lcall
push
sub
out
sub
ljmp
jnp
cs
mov
icebp
mov
fstps
sbb
lds
fistps
les
adc
inc
dec
mov
cld
orl
clc
dec
dec
pop
inc
stos
gs
xor
and
lcall
cmp
mov
sub
mov
lock
mov
cmp
mov
jl
cltd
cmp
imul
movsl
add
mov
mov
lods
dec
mov
pop
lods
mov
push
pop
sbbb
mov
rorl
pushf
sbb
leave
sti
mov
nop
addr16
mov
test
push
xor
mov
pop
fstpl
jno
and
popa
jle
mov
mov
shl
enter
lock
or
xchg
push
pop
inc
popa
test
sub
lahf
mov
adc
fbld
fistpl
ss
jle
int3
mov
jle
ret
mov
mov
mov
push
mov
and
mov
fisubrl
xor
ja
pop
fmul
adc
mov
or
sarl
jecxz
pop
mov
aaa
push
stc
out
mov
ret
bound
bound
out
arpl
shlb
xor
sahf
dec
int3
fnstcw
imul
sub
sti
pop
xchg
lock
fisttpl
dec
xchg
mov
pop
iret
push
inc
jo
add
fwait
mov
scas
mov
xchg
pop
jecxz
pop
push
idivb
stos
and
and
sub
stos
popa
rorl
xchg
sbb
icebp
fldcw
mov
add
push
addl
dec
sub
fmul
and
jmp
mov
lea
xor
js
jo
inc
push
fs
inc
or
inc
add
test
jno
xchg
aas
dec
in
jns
fistl
mov
jbe
imul
xchg
pushfw
mov
test
pop
loopne
cmp
mov
cwtl
aaa
sti
loopne
dec
mov
fistpll
jle
stos
sbb
int3
pop
lds
push
lods
imul
push
sbb
cs
mov
ja
int3
mov
js
fldl
jle
aam
push
popf
sbb
xchg
dec
jge
adc
pop
xchg
jge
nop
stos
movsb
jl
adc
cmpsb
jg
sub
rcrl
imul
xor
mov
lcall
fdivs
sbb
es
sub
push
sub
pop
in
jmp
mov
or
xchg
lea
xorl
mov
sbb
js
mov
cmp
jp
xchg
inc
mov
movsb
stos
cwtl
fsubs
repz
adc
ss
jecxz
sahf
fadds
mov
mov
cmp
test
cltd
adc
fldt
fstpt
jnp
mov
jl
add
out
inc
ljmp
out
and
add
int3
xlat
sbb
dec
enter
out
mov
popa
pop
cmp
add
in
dec
popa
push
sbb
adc
and
js
clc
mov
lods
mov
andl
roll
dec
and
js
std
lret
cmpsb
in
push
add
js
out
push
xchg
inc
sbb
sar
shlb
shlb
sub
aas
dec
je
mov
adc
push
in
lea
enter
in
aam
xor
xor
mov
ja
jg
inc
dec
mov
or
sbb
xor
cmp
mov
jo
sbb
add
pop
dec
aaa
mov
aaa
jmp
sub
sub
inc
jp
adc
aam
stc
adc
shl
bound
jbe
xor
adc
popf
in
or
ret
and
mov
mov
mov
sarl
dec
sub
mov
cmp
fists
jg
lret
das
fiaddl
push
lea
fistl
lock
pop
ss
test
dec
push
outsl
clc
inc
push
add
sub
mov
enter
loope
adc
sub
movsb
fsubl
add
add
movb
sbb
add
inc
or
negb
xor
aaa
out
lea
mov
out
mov
mov
pop
inc
pushf
mov
ret
or
lock
cwtl
xchg
outsl
cwtl
enter
mov
xchg
sar
mov
inc
scas
push
push
rcrl
scas
mov
ficompl
xor
jmp
mul
push
lret
and
fstps
ds
xchg
xor
push
pop
repnz
sub
jno
repz
stos
ss
out
out
inc
orl
jle
jmp
sbb
fwait
imul
scas
imul
sbbb
aam
dec
icebp
adc
out
sub
lret
inc
pop
repz
xchg
cmp
jae
xlat
adc
stc
fidivrl
imul
push
mov
dec
cmp
jns
test
inc
adc
lds
jge
mov
or
imul
out
std
add
fs
pop
or
mov
or
sbb
outsl
aam
xor
inc
jo
jle
adc
icebp
scas
mov
sbb
int3
enter
pop
mov
cmp
jnp
je
xchg
sbb
jnp
ficoml
fstpt
fistps
xchg
sbb
sub
jmp
add
push
cs
ret
das
sbbl
add
or
sbb
insl
xchg
dec
mov
push
shll
lods
sti
lcall
mov
jl
inc
push
sti
lcall
or
out
aaa
call
cmp
dec
sub
jns
cmp
ljmp
add
popa
scas
mov
icebp
dec
and
insb
loop
xor
pop
lea
sub
and
push
mov
xchg
inc
add
addr16
jo
jne
pushf
les
dec
jle
dec
movsb
sbb
call
push
sarb
inc
cld
xchg
fwait
mov
inc
pop
jp
fiaddl
jne
sti
pop
test
rorb
xchg
mov
xor
inc
aad
test
ret
dec
mov
cwtl
pop
insb
movsb
iret
xchg
mov
sbb
pusha
cmp
jbe
in
cmpsb
push
lcall
push
mov
push
mov
jae
js
cmp
or
mov
cmpsb
sbb
mov
and
stc
xchg
cs
xchg
fcomps
in
adc
push
clc
jno
sbb
add
inc
jae
in
sti
pop
xchg
inc
dec
icebp
mov
mov
lea
cmovno
imul
icebp
pop
lock
daa
addr16
mov
jmp
fstpl
pop
mov
mov
add
cmp
ljmp
loopne
push
sub
lahf
push
pop
lods
aad
xchg
push
cmpsb
cmpsl
test
lods
xchg
jns
repz
xor
pop
pushf
or
inc
sahf
testb
aas
sti
sbb
jne
jle
push
aad
jle
pop
lds
xchg
test
icebp
xor
fsts
popa
dec
mov
cs
and
mov
jge
je
leave
xchg
pusha
test
out
popf
mov
add
adc
xchg
leave
xchg
dec
xlat
push
xor
icebp
or
dec
pop
cmp
pushf
xchg
xor
xor
add
mov
out
sbb
adc
cli
push
lcall
xchg
pushl
aam
scas
and
cmpsb
mov
sbb
jecxz
sbb
inc
mov
xlat
call
jmp
mov
lds
pop
adc
add
dec
jno
xchg
push
mov
pop
add
movsb
test
sub
adc
mov
hlt
jbe
mov
out
jmp
jp
es
in
sub
adc
mov
push
cltd
cmp
pop
jp
jno
movl
das
insb
pop
xlat
scas
mov
mov
and
lret
push
lods
adc
cmpsl
mov
mov
jecxz
cmp
mov
adc
mov
xor
lret
dec
std
loopne
lea
lods
loopne
cmp
cwtl
xor
scas
adc
mov
outsl
adc
inc
vunpcklps
and
push
sbb
push
vpmaxub
das
or
jp
xchg
ret
xor
mov
mov
adc
push
adc
sbb
mov
lea
inc
push
rcrb
mov
aaa
scas
shlb
mov
es
jl
addl
sbb
push
stos
mov
jnp
mov
bound
jl
out
dec
ficompl
jno
aam
inc
push
sub
cmc
addr16
mov
mov
dec
add
mov
cli
rclb
shlb
rcrl
xchg
pushl
cmpsb
push
imul
inc
xchg
lods
shlb
jmp
rorl
mov
ret
xor
icebp
xchg
jne
dec
iret
inc
loopne
pop
inc
test
call
mov
mov
mov
mov
ljmp
mov
push
or
movsl
sub
test
adc
xchg
adc
jo
lods
xchg
out
xchg
mov
xor
mov
cmp
inc
inc
int3
in
imul
jnp
leave
jmp
xchg
xchg
test
jo
sub
lock
cmp
cmp
jno
pusha
jmp
pop
jmp
cmc
xor
dec
les
cmpsb
test
xchg
push
adc
in
or
dec
aad
push
add
fisubrs
sub
in
inc
cmpsl
push
jno
outsb
push
sub
cld
jb
subb
xor
push
ret
sub
xchg
lahf
pusha
repz
sbb
add
nop
push
push
clc
adc
or
adc
in
inc
hlt
aaa
out
ja
inc
inc
adc
mov
fisubl
bound
cmp
sub
test
push
ret
movsl
orb
lock
shlb
xchg
aas
or
inc
stc
push
mov
lods
mov
xor
mov
and
mov
pop
mov
sahf
sub
in
add
mov
inc
xlat
xor
or
mov
dec
lods
cmp
mov
testl
and
in
ljmp
cltd
loop
cmp
roll
cld
xor
fidivrs
clc
into
and
out
out
ds
xor
xchg
jno
pop
jg
shlb
loop
and
insb
fisubl
cmp
dec
outsb
xor
adc
mov
popf
ds
dec
rorl
sahf
sub
outsb
jp
pop
sbb
add
mov
jns
push
rcl
out
and
pop
aam
insl
les
test
outsl
test
xor
mov
rcll
dec
jb
sbb
ficoml
xor
xchg
shrb
sbb
mov
xchg
in
push
dec
stos
xor
xlat
add
mov
or
fcomi
je
mov
mov
stos
sbb
xlat
and
cmp
sub
test
dec
push
sub
push
pusha
out
gs
lods
std
jecxz
ss
scas
enter
mov
lret
adc
inc
repz
xchg
fstpl
or
sub
inc
aam
ret
cltd
mov
pop
xor
bound
xchg
jb
je
fmull
sbb
inc
mov
push
ljmp
aas
adc
jb
push
repz
sub
dec
and
inc
scas
xor
cmpsl
sti
leave
lock
pop
rcl
out
xchg
and
mov
lds
iret
std
xor
jb
inc
sub
push
testb
dec
sbb
lret
test
mov
jg
loopne
pop
movsb
xor
adc
push
add
inc
xor
jb
cmp
sahf
and
in
or
imul
int
out
xchg
adc
pushf
out
lea
and
mov
stc
cmp
jno
mov
sbb
enter
testl
push
inc
jecxz
add
add
sbb
push
popa
stc
sub
xor
jmp
mov
pop
inc
imul
mov
mov
movsl
inc
mov
cs
xor
cmp
cmp
popf
dec
subl
cmp
pop
sbb
xchg
cltd
jne
jmp
xor
or
stos
test
xchg
sti
xchg
and
sub
into
jne
out
push
jmp
ja
lret
rclb
rol
roll
ds
pop
dec
imul
pop
out
and
xchg
pop
into
cmpb
add
data16
sbbl
xchg
shlb
lea
out
movsl
sbb
or
in
imul
outsb
mov
into
std
mov
pop
fimull
movsl
fcmovnbe
das
add
mov
mov
xchg
jmp
test
mov
jg
call
cld
inc
cmp
push
inc
xchg
add
sahf
sbb
cmp
push
cmp
fwait
and
or
cmp
xchg
push
bound
jmp
mov
push
jno
outsb
inc
stc
adc
addr16
fnstenv
pushf
inc
data16
sub
nop
ret
mov
notl
inc
mov
mov
das
ja
mov
jae
xchg
je
inc
jl
jecxz
arpl
or
ret
movsb
pushf
xchg
pop
dec
js
stos
mov
test
in
push
mov
cld
jmp
fsubrl
xor
inc
pop
add
fnstenv
je
scas
push
test
jp
fdivr
ja
addr16
pop
fsubs
and
ja
daa
sarl
movsb
sub
faddl
int
ficompl
ljmp
sahf
cmp
add
push
xchg
mov
lret
pop
insl
data16
and
enter
fmuls
jg
in
mov
fistpll
push
mov
adc
loope
ret
shr
imulb
push
push
loopne
ror
cmpsl
inc
rcrl
stos
and
push
fwait
push
rolb
lret
ds
dec
or
mov
lds
imulb
jl
loopne
rcrl
out
mov
js
xor
daa
fnstenv
inc
subl
out
fisubrs
adc
punpcklbw
arpl
or
sub
adc
aam
imull
clc
pop
shll
sub
pop
lahf
dec
popf
mov
add
and
mov
push
outsb
subl
dec
cmp
xlat
call
fcmovnbe
pop
push
adc
mov
adc
mov
in
add
scas
mov
stc
jge
sub
add
xchg
mov
push
cmpsb
dec
xchg
or
das
outsl
int3
test
push
sbb
or
dec
mull
dec
jecxz
dec
into
js
les
sub
jo
and
mov
push
stc
or
sub
fwait
icebp
pop
cmc
loopne
add
lods
xorl
mov
rolb
and
pop
jp
fsub
mov
sbb
in
loopne
jbe
jl
test
pop
adc
es
mov
lret
aas
das
jge
inc
or
mov
or
lret
pusha
stc
or
pusha
and
mov
and
cwtl
inc
pop
add
in
add
cltd
xor
pop
jne
and
sub
adc
mov
dec
out
mov
mov
jo
mov
leave
repnz
adc
lock
push
outsb
out
ss
jnp
inc
stc
sbb
mov
loope
scas
adcb
lds
dec
sbb
aaa
faddl
push
pop
xchg
add
or
cltd
es
pmulhw
divl
mov
mov
xor
push
insl
jmp
and
test
pushf
rol
xor
push
push
enter
mov
ds
gs
addb
mov
jo
jb
jne
xchg
xor
in
shll
sbb
ljmp
ljmp
movsl
ja
or
shl
cli
jo,pn
sub
inc
inc
jle
or
cmpsb
dec
fadd
jl
icebp
insb
outsb
inc
fsubl
sbb
add
shrb
cmp
pop
lret
push
cmpsb
out
lea
repnz
fldcw
mov
ja
aad
and
inc
push
xlat
imul
push
ja
xchg
nop
xor
lret
sbb
mov
mov
push
cltd
outsl
and
into
pop
repz
insb
cmc
insl
lds
cwtl
or
xor
std
cld
aas
dec
xor
inc
pop
in
into
pusha
lcall
jmp
repnz
ds
cmp
xchg
sub
pop
mov
lahf
or
sub
push
subl
xchg
movsb
ljmp
xchg
cmp
ret
add
mov
lods
lea
mov
push
mov
pusha
aad
pop
jno
sahf
pop
inc
ljmp
je
loope
sbb
sbbb
dec
xor
outsb
stos
xchg
mov
cmp
insb
push
pop
mov
lods
fsubs
ficomps
daa
add
xor
roll
movb
adc
cmp
mov
pop
addl
inc
mov
push
sub
in
imulb
pop
jl
daa
filds
sub
xchg
cmp
loope
lock
stos
jl
gs
inc
adc
stos
jb
inc
into
add
iret
stos
adc
in
mov
in
shrl
xchg
rcll
pop
int3
inc
sub
and
imul
adc
les
ret
jnp
test
bound
les
xchg
stos
arpl
mov
cmp
pop
xor
or
mov
lahf
or
add
sahf
cltd
ljmp
orb
std
popf
sbb
rcll
data16
mov
add
mov
cmp
lret
xchg
cmp
int
sarb
movl
inc
pop
shlb
or
xchg
and
xor
mov
cmp
les
into
test
cmpsl
inc
out
test
loope
dec
leave
mov
fistpll
hlt
push
data16
int3
imul
sub
push
sub
or
dec
xor
jecxz
xor
mov
out
cmpsl
popf
xor
lret
inc
mov
mov
push
stos
in
stc
mov
inc
out
setnp
and
sahf
call
sub
sti
jge
fisttpll
xor
rcll
xchg
cmp
sub
ret
enter
test
testl
mov
sarb
fsubs
xchg
push
adc
sub
out
push
cmp
ja
jbe
leave
lods
scas
in
pop
mov
lds
add
mov
leave
inc
sbb
mov
mov
or
dec
jl
inc
repnz
push
dec
push
adc
adc
sub
rcl
sti
mov
inc
aaa
rcrb
aas
jl
insb
notb
imul
xor
ljmp
dec
cmpsb
xchg
out
clc
add
xchg
push
or
int3
sbb
test
cltd
cmc
jg
pop
pop
dec
arpl
jb
std
pop
inc
xchg
mov
test
out
mov
mov
leave
pop
mov
cli
fistps
shlb
call
xor
fisubs
add
jmp
inc
mov
dec
test
add
xchg
adc
and
mov
dec
jle
in
jns
jp
hlt
ss
daa
js
mov
clc
mov
mov
data16
sbb
inc
leave
adc
adcl
pop
scas
xchg
cmpsl
popa
inc
mov
cmc
jle
fstps
pop
shlb
adcl
data16
jg
daa
dec
xchg
insl
xor
out
cmp
cmp
scas
bound
mov
pusha
aaa
push
shl
das
jge
ljmp
jne
daa
popa
add
adc
repnz
daa
xchg
es
xchg
test
sbb
gs
dec
rclb
in
lea
push
or
jnp
test
add
rclw
pop
mov
popf
mov
les
add
call
aaa
mov
aad
lcall
jns
cwtl
aaa
aaa
gs
test
loope
stc
iret
dec
inc
lahf
int
lods
imul
aaa
sbb
fucomp
jns
xchg
xor
fs
cmp
imul
lea
enter
insb
xchg
cld
mov
or
leave
or
xor
bound
pushf
jg
inc
xor
out
aas
fidivrs
in
gs
jbe
add
lock
sbb
jp
jl
testl
ljmp
cli
je
es
mov
adc
xchg
outsb
xchg
sbb
in
stc
fdivrs
std
xor
or
div
scas
xor
mov
lcall
das
push
xchg
push
pop
mov
movsb
mov
into
test
ret
xchg
inc
test
frstor
fsubrs
xchg
stos
sbb
sbb
xchg
movsl
ja
pop
in
and
les
iret
popa
insl
pop
jne
rorl
popa
sub
in
fiadds
push
fsubr
mov
movsb
test
lret
in
clc
pushf
aam
jmp
pop
in
or
push
add
fmul
ret
xchg
shrb
adc
xchg
xchg
sub
dec
fwait
iret
sti
and
xchg
pop
sub
scas
cmc
call
xchg
push
es
in
jae
pusha
xchg
lods
push
adc
in
sub
testb
aam
push
mov
pop
bnd
xor
pusha
lahf
fsubl
add
cld
mov
cmp
inc
add
rclb
in
jecxz
enter
dec
push
sub
jmp
jns
sub
nop
pop
sti
xor
xchg
sub
movsb
push
jnp
lock
sub
dec
mov
stos
into
xor
mov
fists
outsb
sub
or
mov
repz
push
imul
mov
sub
arpl
lcall
cmpsb
mov
fisttpl
xchg
repnz
and
pop
out
jle
notb
pop
outsb
lahf
int3
test
js
mov
lock
dec
in
xchg
mov
inc
dec
push
pop
and
add
pop
pop
xor
mov
addr16
mov
out
iret
test
xchg
stos
mov
aam
repz
mov
into
add
es
lock
js
mov
dec
scas
add
mov
jl
incb
aas
push
push
ret
xorl
xor
out
sub
les
fnstenv
gs
jecxz
pop
in
mov
pop
outsl
scas
scas
push
stos
cmp
mov
cmp
push
lret
xor
lods
mov
push
mov
test
xchg
cmp
adc
jbe
daa
mov
xlat
mov
and
ja
cmp
icebp
fdivs
xlat
dec
out
imul
fistpll
cmp
mov
insb
mov
lods
add
push
addr16
jmp
add
lcall
cmp
enter
int3
or
inc
enter
and
mov
faddl
pop
or
mov
xchg
jp
outsl
sub
xlat
push
sti
sbb
int
mov
mov
lret
push
xchg
dec
ret
lods
jmp
divps
scas
inc
cwtl
pop
movsl
insb
jle
cmpsb
fisttpll
out
mov
mov
imul
scas
outsb
sbb
mov
fadds
dec
pop
xor
push
xor
sbb
push
je
fcompl
test
xor
lret
mov
mov
mov
scas
loope
adc
or
out
mov
stc
into
lret
fadds
repnz
mov
jo
scas
pop
xchg
fdivrs
push
ja
push
push
pushf
cmp
and
push
movsl
mov
rol
sub
jp
sar
mov
out
push
sar
inc
sbb
xor
jle
push
pop
stos
pop
stos
pop
adc
hlt
out
push
pop
and
in
cwtl
cltd
xchg
lods
xchg
adc
dec
fstpl
mov
insl
aaa
push
sbb
pop
call
arpl
pop
mov
movsl
push
mov
int
icebp
stos
or
or
pop
sahf
add
xchg
mov
or
dec
cld
in
xlat
cld
dec
stc
push
adc
adc
adc
mov
outsl
sti
mov
lods
inc
in
fs
xor
into
push
push
pop
inc
lcall
mov
enter
mov
xchg
cmp
mov
popf
or
lret
shlb
aam
int
inc
dec
aam
aam
pop
jp
ljmp
fistps
pop
outsl
pop
insl
push
pop
jge
cmp
xor
cmp
pop
push
sub
leave
data16
mov
pop
sub
add
or
push
popf
mov
xor
jp
std
pop
jl
push
shr
jo
std
push
inc
mov
pop
in
push
push
stc
repz
fstl
cmp
imulb
dec
lret
cmpsb
mov
dec
in
fnsave
pop
cmpsl
ds
popa
dec
pop
insl
bound
ds
test
cmp
iret
scas
or
cmp
fiadds
pop
addr16
inc
in
outsl
test
mov
inc
mov
cmp
add
ret
mov
mov
inc
aaa
les
mov
adc
sbb
in
imul
shll
jge
pusha
loopne
add
shll
pop
jo
lds
xchg
add
xchg
je
mov
mov
or
add
jp
ret
out
push
cld
ud2
cwtl
in
arpl
push
sub
push
call
push
xchg
out
leave
sub
pop
in
push
jae
sub
push
repz
mov
sub
inc
leave
mov
imul
dec
mov
dec
nop
loop
cld
xor
lret
test
mov
xor
pop
lcall
out
insb
and
cmp
sbb
mov
es
lret
shlb
dec
mov
cmp
lea
mov
sahf
pop
leave
sbb
adc
push
dec
stos
in
data16
shrl
fistpl
cmp
aas
pop
xor
std
sbb
pop
add
ljmp
pop
shlb
jo
pop
insb
stc
data16
stos
ret
xchg
lcall
mov
xor
jg
xchg
cmp
int
push
stc
xchg
mov
dec
or
dec
nop
lret
test
inc
add
shll
sub
stc
jl
pop
ret
subl
sub
add
stc
and
test
cmp
loope
pop
cld
inc
fadds
sarb
and
cmovg
ret
sub
mov
add
adc
mov
pusha
jne
jle
mov
cltd
pop
mov
mov
jp
aaa
sub
movsb
jnp
insb
mov
bnd
shlb
lea
mov
movsb
xlat
jo
aam
imul
pop
or
ss
jnp
xchg
lds
int
inc
and
pop
jo
adc
and
mov
sti
push
mov
push
pop
outsl
and
or
dec
data16
data16
jne
mov
dec
pop
sbb
mov
jmp
mov
and
int
or
andb
nop
icebp
in
push
addr16
mov
push
sbb
xchg
sub
aas
adc
outsl
popa
push
loop
fbstp
outsl
inc
dec
mov
mov
mov
mov
cmp
sbb
cmp
lods
arpl
in
sub
pop
ja
push
cmp
fs
xchg
dec
lret
jg
inc
dec
mov
movsb
jl
fs
add
fwait
nop
es
or
in
out
pop
lret
hlt
repz
mov
ja
decl
fstl
cmp
sub
add
imul
int
jp
loopne
sahf
movsb
adc
in
jle
mov
sbb
orl
cmpb
adc
das
pop
or
add
pop
sub
scas
mov
mov
jns
cmpsb
mov
mov
in
out
andl
pop
sbb
inc
cmp
inc
add
xlat
pushf
sarl
adc
call
push
inc
sbb
cmc
ja
popa
mov
jne
scas
mov
mov
jbe
xchg
rorb
dec
es
js
lret
push
repz
sarb
mov
jecxz
mov
push
adc
push
add
jecxz
and
mov
cld
into
mov
movsl
cmpsl
fs
stos
lea
lock
loopne
test
cmp
sbb
jl
push
jo
or
jnp
jmp
lret
mov
and
and
fldenv
je
xor
pusha
mov
sahf
mov
ret
jns
cmp
jb
pop
jmp
mov
nop
movsb
es
inc
and
push
dec
loope
lcall
jns
aam
pop
and
cmpsl
mov
inc
insb
mov
push
and
fistps
lds
test
popa
and
clc
aaa
je
jmp
cmpsb
cmp
popf
fdivs
fcompl
sub
or
mov
mov
into
sub
sub
imul
stos
xor
stc
outsb
dec
adc
aam
arpl
push
ljmp
xchg
adc
pushf
stos
xor
negl
cmp
push
ret
xor
addr16
mov
fcomi
xchg
adc
xchg
not
cltd
mov
dec
xor
ret
jl
repnz
mov
or
stc
inc
iret
jge
in
rcl
js
mov
mov
mov
mov
hlt
pop
inc
adc
pop
sub
xor
xchg
fbld
imul
pushf
loop
jb
jecxz
mov
out
pcmpeqb
bound
ds
insb
push
sbb
out
jmp
cmc
mov
adc
cmp
push
aaa
sarb
adc
sbb
movaps
inc
jp
jno
rorl
and
sbb
or
fbstp
add
dec
out
stos
sub
dec
jo
adc
xor
mov
ficoms
iret
addr16
xchg
imul
ffreep
push
test
mov
adc
cmpsl
jmp
xor
orl
xchg
add
sub
pop
addr16
inc
ret
mov
mov
or
insl
cmp
jb
sti
mov
or
jbe
inc
xor
insl
push
insl
cmp
ss
aaa
cmp
icebp
adc
imul
mov
add
lea
addr16
cltd
lea
lcall
and
loop
fistl
ss
lret
test
adc
xchg
push
xor
mov
shll
shl
cs
cld
bswap
pop
xor
fiaddl
fimull
pop
sti
clc
lret
lret
adc
das
dec
iret
xchg
outsl
dec
pop
xchg
inc
cmp
xlat
mov
sahf
imul
pop
xchg
sub
add
mov
mov
mov
dec
xchg
mov
xchg
sbb
mov
xor
test
xor
push
cmpsb
and
mov
fcoms
in
dec
push
add
fcmovnu
cmp
dec
insb
adc
loopne
stc
mov
icebp
shl
add
movsl
push
mov
stos
nop
test
aam
leave
xchg
dec
sbb
mov
adc
lret
dec
dec
mov
mov
in
aad
push
hlt
cmp
mov
js
loop
inc
icebp
or
inc
in
lea
ret
jns
or
les
lods
mov
popf
push
adc
mov
cli
rcll
lock
nop
fstpl
jae
add
mov
arpl
and
dec
mov
and
cwtl
and
int
add
add
pop
sbb
loop
ljmp
pop
jnp
stos
lea
std
hlt
cli
mov
lret
add
jno
mov
out
jb
test
aaa
ficompl
jnp
pxor
aas
or
xchg
je
sub
call
sbb
jmp
push
adc
xor
mov
adcb
mov
xchg
inc
fdivs
stos
fists
xlat
mov
movsl
lea
cltd
pop
dec
jnp
fs
stos
pop
shll
xchg
std
jno
xchg
mov
icebp
cmp
pop
enter
inc
adc
lahf
cld
or
cmpl
aad
scas
js
mov
sub
loopne
sub
adc
inc
xchg
ja
xchg
xor
imul
push
je
push
push
aas
cs
call
test
les
push
push
jbe
xchg
fwait
lds
lret
fnstenv
and
jge
imul
cmc
mov
lods
xor
jg
lret
xor
iret
sub
jecxz
leave
inc
lods
std
cltd
les
lahf
sti
ljmp
mov
repnz
xchg
pop
out
jns
jg
mov
int
cwtl
aaa
stos
sub
or
or
mov
andl
cwtl
aam
dec
popf
mov
lods
cli
jg
sub
cmpsl
sub
inc
jno
sbb
lods
es
xor
adc
mov
jne
sbbb
scas
call
jg
call
cmp
test
fisubrs
sub
test
sarb
outsl
jo
and
cmp
xor
ret
dec
in
ja
fwait
push
cmp
or
sub
mov
mov
out
pop
cli
xchg
cld
inc
pushf
pop
lods
mov
lahf
jg
pop
xor
cld
das
test
jmp
mov
fists
in
mov
imul
push
mov
fnstsw
and
aas
xor
dec
in
inc
adc
andb
cmp
ljmp
inc
ficompl
fisubl
adc
fnstsw
pop
jmp
xchg
or
loopne
mov
loop
jbe
sub
mov
pop
mov
dec
leave
out
xchg
lods
notl
mov
in
inc
shl
bound
mov
adc
mov
int
cli
insb
push
ss
cmpsl
cld
addr16
inc
dec
sub
mov
fs
dec
shlb
jl
jecxz
push
xor
or
jge
push
adcl
in
fidivl
jns
adc
sub
fldenv
ds
mov
xor
test
inc
xor
movsl
nop
out
pop
pop
cmpsb
cmpsb
add
xor
pusha
int
mov
mov
scas
lcall
inc
dec
scas
add
cmp
dec
mov
aaa
pop
negl
inc
xor
out
jbe
in
xchg
rcrb
inc
sbb
adcb
jbe
adcb
roll
jge
pop
add
es
enter
ret
fnstsw
adc
aaa
and
jl
dec
test
loopne
xchg
add
xor
jo
fs
sahf
inc
pop
outsb
adcb
mov
pop
jmp
sbb
testb
arpl
insl
fdiv
jbe
fidivs
lock
ljmp
jb
mov
mov
out
mov
das
dec
mov
pusha
mov
scas
lret
xchg
add
fs
add
cmp
jl
shr
mov
inc
sbb
aas
arpl
outsl
cwtl
ja
fnstenv
mov
nop
stos
arpl
cmp
fbld
jge
mov
cmpsb
jmp
and
mov
lds
ljmp
test
mov
stos
pop
jecxz
jmp
xchg
dec
mov
cli
stc
add
ljmp
sub
orb
mov
int
ret
push
sub
push
xchg
add
sub
fsubr
sub
aam
mov
mov
stos
leave
push
sub
cmp
mov
xchg
pushf
pushl
imul
test
loopne
into
dec
mov
std
mov
das
cwtl
adc
test
lahf
jb
addr16
mov
imul
sub
insb
call
stc
inc
cmp
lea
pop
stos
xchg
dec
mov
and
scas
sub
jg
out
sub
cmp
jp
das
imul
sbb
push
inc
call
enter
push
ret
inc
dec
push
das
inc
mov
cmc
cwtl
jmp
scas
inc
pop
rcl
nop
xchg
cli
dec
dec
jns
jge
mov
jns
mov
movsl
pop
mov
int
push
test
repz
cmpsl
push
xor
fneni(8087
pop
mov
jo
inc
dec
pop
ss
fimull
scas
xor
or
lahf
hlt
xor
insb
cmp
xor
addl
dec
aam
push
or
jg
bound
dec
mov
mov
es
stos
pop
movsl
or
enter
xchg
mov
jne
dec
jbe
testl
loop
xor
iret
gs
jno
xchg
xchg
inc
jge
nop
decl
cmpsb
cmpsb
pop
jns
shll
in
sbb
ja
lock
addb
dec
push
bound
or
mov
aad
cmpsb
ficomps
fcmove
mov
mov
in
xor
inc
mov
mov
aam
sbb
psadbw
jns
mov
xchg
jmp
mov
sbb
bound
mov
inc
jmp
mov
adc
std
loopne
or
mov
mov
bound
push
lret
mov
push
add
cmp
push
or
idivb
jle
sub
leave
sub
cmp
inc
fsts
rcl
dec
pop
dec
xchg
mov
sbb
push
mov
sub
data16
sub
roll
mov
pop
sbb
adc
fcomps
incl
push
fwait
mov
push
mov
adc
xor
sbb
leave
xchg
hlt
data16
cwtl
mov
inc
mov
inc
into
clc
aaa
dec
and
lds
sbb
pop
add
cmpsb
sbb
cmc
mov
jo
std
and
ljmp
dec
je
leave
mov
ljmp
loop
fbld
or
and
add
lock
fdiv
icebp
cmpb
mov
enter
mov
cmp
in
jl
rolb
sub
movsl
or
js
pop
sub
pop
push
add
or
sbb
fwait
add
or
adcl
xchg
pop
inc
adc
xor
mov
or
xchg
xchg
sahf
fistps
pop
in
jnp
lret
je
out
dec
stos
scas
aaa
cmpsl
dec
xor
std
icebp
scas
es
sub
stos
movsl
push
hlt
mov
daa
fwait
idivb
inc
pop
cmp
in
js
in
outsl
jae
test
stos
fs
leave
fstp
cmc
and
jge
push
js
ffree
testb
out
and
add
scas
ret
cmp
adc
inc
movsb
cmp
fldenv
pop
es
push
loop
fcomi
jg
dec
dec
fsubl
add
lahf
lods
ljmp
add
mov
aam
sbb
sub
outsb
cmp
test
addr16
push
xor
xchg
inc
in
faddl
cmp
dec
popf
push
xor
scas
dec
or
arpl
jnp
repz
mov
xchg
jno
cmc
push
das
cmp
and
fs
xchg
mov
cmpb
mov
sbb
sub
cmpb
push
inc
mov
jge
push
dec
dec
fs
daa
addr16
mov
shrb
sub
mov
stos
mov
pop
mov
shll
dec
sti
mov
add
fcomp
lods
lret
xchg
inc
pop
mov
or
sbb
js
mov
push
jl
shrl
cltd
loop
cmp
xor
mov
inc
xor
cs
push
pop
sbb
lahf
iret
out
lock
call
sub
jp
cmovae
adc
jmp
cmp
lahf
xor
jae
pusha
aam
fisttps
dec
outsb
lret
movb
out
push
pop
push
jnp
aas
inc
cs
cld
inc
inc
test
in
mov
inc
clc
fldenv
push
pop
or
arpl
adc
ret
scas
add
addr16
lea
stc
stos
lods
lea
push
and
aam
xchg
or
dec
mov
mov
or
xor
idivl
xchg
push
test
mov
jp
jl
outsl
std
dec
mov
xlat
ds
dec
arpl
push
push
test
in
mov
mov
int
scas
add
mov
fcomps
add
sub
ljmp
xchg
imul
mov
and
std
ror
inc
movsl
and
dec
mov
ficompl
mov
call
xor
mov
xor
adc
leave
mov
into
and
jnp
or
hlt
enter
inc
in
inc
popf
sub
mov
mov
in
in
cmp
subl
repnz
sub
fdivrl
fs
dec
cmp
inc
pop
pushf
shl
add
orb
inc
pop
jns
test
mov
test
or
nop
xor
and
imul
mov
push
clc
jge
fucomip
fists
push
or
repz
xor
sbb
test
push
mov
cmp
cs
enter
popf
push
fsubl
leave
icebp
sbb
lahf
dec
ds
and
xchg
movsb
out
mov
xchg
xor
jl
jns
mov
cltd
mov
push
xchg
in
sbb
or
leave
cltd
xchg
and
push
testl
outsl
subb
subb
enter
sub
test
or
jecxz
jecxz
or
jmp
mov
ljmp
les
cld
sbb
jle
push
shll
das
xchg
addb
mov
xchg
movsl
push
sub
sbb
inc
adc
inc
in
gs
std
sbb
add
dec
jl
sbb
or
dec
inc
fisubs
test
ret
sub
stos
fsubl
aas
std
push
or
or
adc
pop
lds
pop
fld
aam
mov
push
dec
fildll
cmpsb
rolb
and
pushf
imul
push
cmp
and
cmp
stos
adc
scas
push
out
or
sub
and
pop
xchg
cmpsl
dec
mov
xchg
fldl
ss
pushf
or
pop
mov
ret
lds
dec
ret
aam
push
aaa
dec
pop
cs
sbb
cli
enter
cwtl
in
movsb
inc
pop
aas
cltd
inc
xchg
or
mov
jl
shrl
adc
imul
outsb
mov
add
sbb
les
xchg
popa
dec
cltd
lcall
ss
dec
in
repnz
adc
lods
jae
pop
inc
loopne
mov
ja
loope
frstor
inc
sbb
push
cmp
es
cwtl
jp
inc
inc
pushf
lret
push
aam
xor
cmp
shll
sbb
out
dec
pop
xor
ret
lea
aam
xchg
push
lahf
stc
sbb
jl
or
ja
fadds
es
mov
dec
inc
daa
scas
push
lahf
mov
cmp
mov
cmp
cmp
notl
pop
fidivl
mov
in
aam
mov
push
pop
fidivrl
sub
outsl
testl
cmpsb
pop
xchg
mov
bound
cmp
into
xor
scas
lods
negl
mov
cltd
dec
cmpsl
xorl
dec
jbe
aad
mov
les
adc
nop
cld
mov
lahf
xor
adc
in
inc
add
loope
mov
push
inc
cwtl
sbb
mov
add
sbb
jl
sbb
and
jo
ret
pop
pop
dec
fcomps
and
popf
imulb
or
jne
jl
and
mov
mov
fistps
sbb
out
pop
dec
loop
sti
pop
mov
pop
lods
aad
movsb
nop
shll
lods
aad
inc
loopne
and
pop
lock
cmp
mov
push
mov
xchg
fdivl
pop
lods
ret
sahf
mov
fsubrl
cwtl
jmp
mov
lret
bound
xor
xchg
jno
repz
int3
mov
popa
or
sbb
inc
adc
mov
push
ja
xor
lahf
pop
push
jl
ss
jne
loopne
mov
jns
je
cmp
dec
lods
and
ficomps
imul
repnz
adc
fadd
cld
pop
clc
fwait
popf
push
or
mov
mov
push
cmp
dec
adc
outsl
dec
add
inc
andb
fistl
scas
push
std
aad
and
cmp
xor
outsl
sbb
jnp
dec
mov
pusha
mov
out
sub
notl
sbb
ja
jbe
xlat
in
pop
xchg
pop
idivb
adc
inc
test
mov
outsb
mov
push
mov
outsb
pusha
jnp
mov
int
sbb
mov
add
andb
and
adc
add
loop
dec
call
mov
push
gs
mov
push
pop
fiadds
dec
jbe
cltd
test
pop
push
popa
das
addr16
nop
cmp
xlat
adc
insb
cwtl
ffree
xor
jg
lcall
into
mov
xchg
int
negl
sub
pop
mov
xor
sub
leave
rcrl
sub
cli
xor
enter
icebp
adc
xor
repnz
adc
lea
int
inc
mov
add
xchg
push
outsl
mov
les
sbb
insb
adc
dec
push
or
mov
fs
mov
rclb
dec
cmp
fs
lock
cmp
call
sti
inc
loope
push
adc
push
push
test
mov
mov
repnz
pop
and
repz
addr16
dec
cld
mov
inc
insb
or
adc
faddl
popa
dec
ja
shlb
mov
cli
cwtl
clc
int3
mov
outsl
loopne
lret
xchg
fcmovne
loop
shll
repz
jecxz
les
repnz
or
adc
ds
imul
xor
mov
pop
dec
shr
fdivr
bound
sbb
inc
es
inc
push
stos
xorl
jp
nop
mov
lahf
push
imul
hlt
mov
les
fisubrl
fisttps
mov
fnstsw
dec
sub
xchg
es
cwtl
nop
fwait
jle
test
cmp
adc
in
hlt
les
scas
sbb
xor
xchg
add
aam
dec
inc
sti
cwtl
addr16
jne
mov
mov
insb
mov
insl
mov
dec
stos
out
mov
movsl
ds
int3
cmpsl
push
subb
outsb
mov
in
xchg
addl
ljmp
in
push
inc
test
lret
int
inc
shrl
movsb
cmpsb
pusha
lock
lahf
data16
pop
add
sub
into
scas
and
fildl
outsb
mov
scas
xchg
sub
cmpsl
lds
iret
fcomi
adc
inc
push
fsubs
shr
stos
imul
divl
shl
clc
cli
clc
ja
pop
xor
adc
xchg
mov
pop
or
enter
jg
jns
sub
mov
sub
ret
mov
xchg
mov
dec
mov
or
inc
sub
dec
out
sbb
lahf
jl
stos
sbb
pop
leave
or
dec
repz
mov
and
scas
and
cwtl
adc
lods
push
adc
in
sub
inc
jnp
enter
aaa
dec
jecxz
sbb
pop
rcll
enter
lods
mov
orb
sub
push
sbb
stos
add
bound
das
adc
fs
mov
test
les
fabs
ffree
loope
add
stos
push
cmp
pop
and
add
add
jl
lods
mov
jae
jmp
imul
imul
or
dec
repz
popf
sub
sbb
ljmp
cmpsl
xor
adc
xchg
fisubrs
rcrl
mov
mov
or
shll
push
movsb
lods
std
push
fdivl
xchg
xchg
in
inc
leave
xor
inc
xchg
or
mov
or
movsl
ja
dec
pusha
add
inc
aaa
movsl
inc
mov
hlt
mov
jmp
push
sbb
ss
testb
mov
out
enter
inc
sub
daa
cmpsl
out
mov
mov
lock
inc
cwtl
push
xchg
xor
hlt
pop
or
or
xlat
jp
or
dec
stos
mov
mov
into
daa
movsb
cmp
mov
jo
sub
jns,pt
inc
ds
ljmp
bound
xchg
mov
cmc
addr16
jmp
sar
adcb
mov
push
addr16
orb
pop
and
ljmp
add
mov
inc
jne
adc
adc
jne
lret
or
loope
lods
testb
or
cld
les
dec
int
pop
stos
inc
insl
xchg
ds
pop
jae
jo
xchg
movsl
and
pop
xor
jecxz
add
cs
aam
add
out
mov
ja
loope
mov
imul
hlt
enter
inc
jo
push
jno
or
movsb
cmp
subb
mov
mov
or
fidivrl
fcmove
sbb
aas
or
lret
add
adc
push
jb
xor
adc
fwait
in
dec
je
subl
mov
or
adc
push
das
mov
in
dec
jnp
sbb
dec
repnz
cltd
lret
xor
enter
fdivs
sarb
push
pop
adc
jae
lods
ffree
jecxz
cli
and
out
daa
sub
inc
scas
sub
and
push
adc
xor
xor
ss
iret
dec
std
mov
xchg
rclb
xchg
icebp
inc
mov
idivb
or
orl
mov
int3
mov
hlt
nop
rcll
lods
cli
movsb
jge
mov
insl
popa
ror
dec
or
sahf
sbbl
mov
cs
shrl
or
push
fists
cmp
mov
lahf
mov
mov
in
push
inc
addr16
sbb
mov
les
popf
test
shrl
sub
add
daa
subl
or
cld
in
xchg
sar
cs
fidivrl
mov
sbb
mov
push
lcall
in
pop
lock
call
sbbl
sbbb
outsl
add
fidivrl
or
mov
stc
add
imul
adc
pop
jae
addr16
rcl
out
mov
adc
sbb
dec
loop
mov
shl
inc
out
mov
inc
cmp
enter
nop
mov
push
out
cmp
dec
test
xor
push
push
xchg
adc
inc
or
cli
jle
dec
xor
inc
mov
bound
loop
aam
jnp
or
fiaddl
pop
jmp
jge
icebp
loop
sub
call
ja
add
pop
lea
jne
sub
xor
pop
mov
push
push
pop
pop
ret
popa
cmpsb
out
sbb
and
fisttpl
ffreep
jns
dec
inc
push
mov
into
jle
mov
cmpsb
sahf
enter
pop
sbb
dec
and
push
sbb
cs
jp
xor
jg
xor
mov
bound
fcmovu
decl
mov
aad
mov
int3
dec
mov
rcll
cmc
dec
fistpll
mov
jmp
xchg
push
sbb
inc
and
sbb
cmp
test
push
aam
xchg
outsb
cmpb
mov
cli
int
xchg
fisttpll
outsb
lods
iret
xchg
sub
mov
shl
imul
pop
insl
aad
aas
insl
sti
mov
fstpl
mov
subl
mov
aam
outsb
cmpsb
bswap
mov
add
in
imul
call
pop
in
out
cmp
rcll
data16
cmp
jle
repnz
dec
orb
push
add
pop
std
mov
cmp
push
int3
rcll
push
or
aad
sti
rcll
mov
loop
ret
xlat
or
ret
add
data16
rcrb
inc
xor
adcl
in
adc
cmpsb
add
mov
or
xchg
mov
out
and
mov
mov
test
insl
sarl
cmp
mov
xor
fnstenv
lea
mov
mov
push
adc
call
mov
lret
bound
push
sub
repz
das
jo
sbb
cwtl
mov
lea
sub
xor
fcomi
xchg
fcmove
ljmp
movsb
pop
in
xor
das
lea
imull
test
cmpsb
popa
mov
addl
xor
enter
jle
iret
push
iret
fcomps
gs
jmp
cmpsb
add
popf
cmpsb
lahf
inc
jb
dec
push
inc
add
pop
and
shl
inc
jmp
pushf
inc
dec
fsub
mov
rolb
mov
and
movsl
and
pushf
push
pop
mov
imul
xor
and
cli
or
int
cmp
inc
mov
pushf
jecxz
clc
fs
call
std
test
pop
sahf
lods
mov
xor
xor
cmp
mov
jge
outsl
adcl
jg
fcomip
test
inc
mov
pop
jmp
xor
dec
xor
test
popa
mov
mov
jnp
lea
xchg
out
push
in
sub
adc
out
push
out
in
mov
or
icebp
mov
or
pop
jno
mov
loope
flds
xor
or
sahf
add
sub
mov
sbb
jl
cmp
fcompl
rclb
rcrl
lods
mov
sbb
xchg
inc
fiadds
leave
xchg
pop
rol
xchg
inc
jns
xchg
push
push
sub
jg
js
aad
jb
loopne
add
xor
jmp
or
jg
sahf
movsb
xchg
insl
xor
inc
mov
xor
cmp
lock
mov
pop
rolb
lahf
sbb
dec
std
negl
test
xor
mov
jb
lods
cmp
int
jmp
xor
lahf
cmp
mov
ss
mov
aaa
sti
push
shrb
push
out
push
cmp
push
imul
lock
xor
xchg
daa
mov
cld
aaa
push
cmpsb
bound
sub
lret
aaa
mov
inc
and
push
movsl
sti
mov
xchg
cmp
sbb
es
xor
add
lods
mov
cwtl
outsb
pop
sbb
push
fisttpll
xlat
pop
lods
inc
xchg
fstp
pusha
lock
add
adc
loop
or
mov
inc
lret
ret
push
or
xchg
out
cmp
sub
arpl
jae
pushf
imul
adc
ffreep
mov
fs
incl
cs
dec
outsb
nop
mov
pop
cmp
aam
mov
inc
mov
cmpb
pop
repnz
xor
and
jge
and
popa
repz
push
jnp
js
sarl
and
jmp
pop
jae
sbb
push
dec
arpl
push
cli
mov
push
jmp
push
push
rcll
pop
inc
test
cmpb
xchg
xchg
push
test
call
jmp
pop
test
push
les
push
push
imul
loopne
mov
testl
and
push
jp
iret
shll
lret
push
in
jns
dec
ret
dec
jle
out
cmp
jae
jnp
ljmp
push
mov
sysexit
icebp
aam
mov
sbb
sbb
jecxz
fs
inc
arpl
test
and
add
enter
outsb
mov
mov
fwait
lahf
ljmp
mov
mov
cwtl
movsb
lods
aas
mov
pop
fdiv
sbb
sub
xchg
aaa
loope
mov
cmp
or
sbb
and
cmpsb
sub
jp
jnp
inc
mov
dec
out
ret
add
idivl
movsb
sbb
xor
insl
je
in
sbb
xchg
and
add
sbb
inc
inc
addr16
popf
lahf
xchg
sbb
add
addr16
les
sbb
stos
push
and
sbb
rcrl
daa
push
sub
popl
cmc
or
jmp
sti
inc
xchg
pop
sub
xorb
jne
cmpl
jg
push
fsubrp
insb
push
xchg
les
in
imul
xorl
iret
mov
adc
adc
andb
dec
pop
dec
lahf
pop
aaa
arpl
xchg
sahf
mov
and
les
gs
mov
push
mov
jg
add
add
cwtl
call
jl
fiadds
cmp
inc
mov
insl
xor
push
rclb
fcoml
lret
jge
mov
jmp
xorb
push
gs
xchg
stos
inc
cmp
sbb
push
sbb
mov
adcl
cmp
test
lahf
das
data16
pop
out
and
push
and
push
bound
lret
shrb
mov
xor
lods
cltd
dec
dec
ret
mov
jae
ficoms
dec
mov
mov
sahf
mov
sub
inc
fisubl
fildll
mov
dec
push
dec
mov
jns
dec
mov
nop
ja
inc
push
leave
fcoms
dec
into
lcall
mov
fucom
xor
mov
gs
out
shlb
adc
jle
movsb
and
jns
ljmp
mov
mov
mov
pop
ds
jmp
popf
lret
mov
cmp
jbe
add
aaa
pop
repz
pop
jbe
pop
dec
adc
test
jmp
jnp
sub
fsubr
test
add
sbb
add
sbb
dec
fsub
jecxz
adc
cli
pop
mov
xchg
cmp
mov
mov
cmp
loope
shlb
lret
add
jle
inc
fwait
cmp
or
outsl
test
inc
cmc
sbb
xor
add
in
sbbb
test
fistpll
jae
stos
mov
outsb
jmp
mov
shll
mov
mov
sub
sub
dec
mov
sbb
jp
jno
mov
ret
xchg
ljmp
sbb
jmp
cwtl
push
mov
xor
f2xm1
jo
push
xor
mov
mov
lea
pop
lds
mov
cld
inc
push
mov
push
jno
addb
imul
mov
push
dec
xchg
jae
repnz
add
testb
inc
add
mov
clc
enter
mov
mov
xchg
xchg
test
jmp
or
jne
loope
icebp
add
fisubrs
out
sub
ret
test
mulb
ds
int
xchg
aaa
cmpsl
mov
mov
pop
fstps
es
pusha
push
std
popa
lahf
push
xor
movaps
add
nop
mov
cli
imul
sub
jo
ja
pop
mov
jl
addr16
mov
adc
cmp
mov
int3
stc
dec
or
jge
cmc
jns
and
adc
out
pop
iret
xlat
jecxz
out
pop
cmp
idivb
pusha
fiadds
jge
imul
lret
test
dec
mov
addb
mov
cmp
pop
lret
jbe
arpl
cmc
or
mov
mov
xchg
mov
jns
ret
lahf
push
jbe
xchg
aas
jae
dec
test
fisttps
adc
dec
add
imul
cwtl
pusha
les
xchg
popa
insb
mov
cmp
sub
push
adc
mov
aam
pop
mov
push
into
into
lock
push
mov
cs
add
cs
xchg
loopne
je
mov
pop
bound
test
ss
in
inc
xchg
mov
out
testl
jp
mov
mov
mov
sub
jg
pop
negb
mov
add
mov
mov
jge
mov
dec
inc
dec
mov
xor
push
mov
mov
inc
dec
nop
ljmp
xchg
push
jmp
shrb
js
pop
daa
push
jmp
cmp
xchg
ss
dec
in
mov
push
mov
out
sub
add
gs
sub
inc
aas
pusha
push
mov
inc
in
cmp
js
aad
fiadds
cmc
push
outsb
lock
incl
mov
sub
cmp
xor
in
and
inc
in
movsb
clc
mov
je
fcoml
cwtl
aam
idivb
mov
leave
ja
pop
fidivrs
add
and
xor
cwtl
pop
out
adc
pop
or
ret
cmpb
jg
xchg
ja
and
stc
das
cltd
mov
fcmovnbe
jl
nop
mov
out
adc
sbb
mov
fldenv
push
lret
out
and
pop
push
inc
mov
cmpsb
dec
sub
lea
dec
pop
mov
fmulp
mov
incl
sub
sbb
stos
and
inc
mov
out
inc
mov
call
inc
sub
cltd
fcomip
mov
cmpsl
bound
mov
add
and
xor
adc
cmpsb
cmp
pop
mov
cltd
sbb
subps
int3
jne
pop
push
fnstsw
mov
loop
or
mov
mov
push
inc
out
pop
cmp
mov
ljmp
mov
sahf
gs
cmpsl
loopnew
dec
jb
push
pushf
roll
iret
sbb
mov
mov
pushf
mov
mov
jg
xchg
jo
cmpsb
clc
incb
repnz
pop
shl
jbe
ffree
adc
jle
xor
pop
adc
pop
add
scas
add
imul
sub
dec
test
fdivl
call
leave
roll
sbb
pop
sbbb
mov
cmpsl
mov
movsl
ds
xchg
int
cmp
shlb
lret
and
sub
out
mov
push
push
jl
das
ds
push
in
push
mov
aas
loope
or
dec
pop
and
mov
lret
sahf
mov
aad
jo
mov
cmp
inc
cmp
mov
into
popf
jp
das
lods
sbb
or
jns
jbe
sub
stos
imul
push
mov
jmp
and
sub
mov
push
lret
dec
mov
pop
dec
into
leave
popa
in
mov
call
mov
aad
ds
mov
pop
test
push
lods
outsl
inc
xor
lods
pop
add
fs
lds
sub
subl
sub
std
lods
aaa
inc
or
lods
inc
cs
mov
or
jae
roll
or
fdivr
or
imul
icebp
movsb
xchg
addl
jge
lods
leave
jl
rcll
pop
fisubrs
sbb
jmp
adc
movsl
xor
adc
aaa
rorb
pop
pop
adc
xchg
fdiv
stos
cmp
inc
and
jns
nop
add
shrl
xor
dec
xchg
mov
xor
pop
je
adc
sub
aas
jbe
sub
enter
jb
fimull
pusha
std
cmpsl
pop
imul
fwait
add
or
lods
pop
jp
jno
sub
dec
pusha
leave
stos
cltd
mov
outsb
or
out
mov
fsubl
movsl
xor
js
sub
sti
out
inc
loopne
dec
leave
inc
xor
test
movl
add
lahf
mov
imul
sub
lret
inc
pop
adc
call
leave
ljmp
bound
jmp
popa
push
in
inc
sbb
hlt
adc
jge
hlt
add
stos
shll
cmp
pop
inc
xchg
lods
ret
xchg
dec
cmpsl
xorl
dec
aaa
test
fidivrs
cmc
inc
or
jl
cli
cmp
je
das
daa
mov
xlat
fdivrp
es
shll
dec
push
rclb
aaa
dec
test
pop
adc
inc
pop
icebp
das
sbb
dec
ficoms
test
push
cld
xchg
mov
sbb
jne
add
jg
sbb
test
dec
sub
cmp
add
insl
rolb
cmp
add
xlat
jnp
js
sti
int3
jmp
dec
loopne
mov
cltd
enter
jno
out
xor
lods
push
jae
mov
inc
ds
and
jge
cmp
mov
jge
ret
sbb
pop
test
mov
test
out
dec
js
mov
stos
dec
cmpsl
inc
dec
and
stos
in
cmpsl
xchg
out
scas
loop
mov
cmpsb
out
xlat
xor
shl
jmp
pusha
mov
inc
inc
nop
clc
lcall
cmp
and
rorl
rcrl
cs
aad
mov
cmp
mov
int
dec
xchg
cmp
push
jo
sub
in
test
fwait
or
mov
and
mov
adc
pop
cmpsl
pushf
dec
addr16
in
cmp
inc
sbb
jbe
arpl
les
mov
test
jg
mov
xchg
xchg
enter
pop
xor
adc
jo
pop
scas
jle
sub
test
pop
loop
das
jne
in
out
push
icebp
stos
inc
cwtl
xor
int3
mov
push
dec
push
outsl
rorb
dec
bound
outsl
xchg
push
cmp
jg
repnz
repnz
push
in
xor
inc
mov
pop
inc
in
mov
subb
leave
js
pop
cli
lods
out
test
mov
cmp
shr
xor
mov
bound
jnp
clc
xchg
sub
xor
pop
test
dec
pop
repz
mov
sub
addr16
cmpsb
daa
and
nop
ret
into
fstp
or
xor
mov
jl
xor
iret
mov
bound
lret
cmp
insl
and
lods
cmp
lcall
xchg
sarl
mov
outsb
xchg
jno
out
mov
iret
shl
push
pop
pop
add
and
sbb
in
and
push
int3
rcrb
movsl
cld
cmp
aas
mov
insl
push
mov
or
mov
adc
popa
cmp
mov
out
and
push
call
pop
dec
xrelease
sub
add
rcrl
pop
std
mov
jnp
sub
arpl
mov
push
notl
push
cmpb
in
cli
mov
xor
lods
shlb
jl
test
sti
cmp
lock
movsb
dec
add
add
addb
aaa
cmp
dec
lds
loop
aam
jg
lea
outsb
inc
or
sahf
sahf
xor
popa
aas
aaa
loopne
cmp
inc
fwait
sbb
icebp
mov
or
les
es
push
jb
adc
icebp
popa
mov
imul
inc
dec
or
xchg
leave
mov
dec
sahf
ljmp
dec
xchg
in
pop
iret
fsubrs
scas
jno
lds
inc
fildl
jmp
dec
jne
pop
mov
sbb
push
xchg
add
and
insb
out
mov
lcall
dec
jo
lods
fidivrs
mov
into
cmp
pop
xchg
cli
add
dec
cmc
iret
add
xchg
sub
stos
push
dec
leave
dec
push
xchg
movsl
xchg
inc
lods
and
out
mov
ret
mov
sbb
push
xchg
mov
andl
loopne
sub
cwtl
lock
push
fists
sub
jmp
scas
push
add
xlat
mul
scas
pop
pop
cmpsl
jge
push
ret
test
jl
loope
jp
adc
mov
ret
push
inc
icebp
add
xor
xor
jo
push
scas
inc
xor
jge
out
aad
lcall
push
adc
push
nop
ja
jecxz
xchg
pop
mov
loop
lock
mov
inc
in
dec
js
sub
dec
mov
pop
mov
nop
test
lods
test
sub
pop
cli
and
decl
jmp
xor
or
adc
repz
and
scas
mov
pop
lods
test
aad
sti
adc
inc
hlt
push
jne
xchg
cmp
sbb
lds
outsl
inc
pop
mov
divl
mov
out
sti
arpl
adc
jo
clc
adc
adc
leave
sahf
bswap
aam
xor
stc
xchg
push
outsl
mov
shrl
fdivrl
push
jge
jb
and
call
mov
add
bound
mov
mov
or
scas
rol
xchg
push
mov
sbb
pop
clc
lods
add
mov
mov
cli
stos
loopne
sub
adc
test
pushl
es
sbb
xor
int3
int3
sbb
dec
mov
lret
cmp
scas
into
test
inc
ss
xor
pop
rclb
orl
xor
insl
lods
xchg
or
imul
and
xchg
jb
hlt
inc
and
mov
les
jle
pop
fcomp
andl
dec
and
jae
rolb
lea
xchg
lock
xchg
add
scas
inc
outsl
sub
mov
push
mov
lret
add
shlb
les
or
fdivp
fisttpl
imul
jbe
aaa
jns
xorb
cmp
in
out
mov
cli
mov
enter
lods
pop
mov
fwait
cmp
jg
in
rcrl
ljmp
cmp
out
xorb
sub
loope
xchg
jl
sbb
and
jne
adc
lret
dec
movsl
and
test
clc
sub
iret
xor
ret
into
loopne
pop
xor
ja
jnp
or
out
dec
ja
sbb
insb
jp
in
shrb
jae
addr16
sbb
jb
mov
aas
xchg
fs
cs
rorl
sub
andps
or
and
push
xchg
mov
adc
into
and
dec
adc
sbb
mov
movsl
jae
repz
cmp
jmp
mov
cmp
jl
jge
mov
cld
aaa
cwtl
loop
xchg
fsts
jno
adc
or
nop
and
movsl
mov
xchg
adc
inc
and
and
fnstcw
rcll
pop
daa
sti
add
nop
test
pop
jl
out
cltd
int3
in
and
fs
jne
cmpb
push
into
xor
lret
cmpsb
jg
addr16
decl
and
popf
cmpl
popl
test
lahf
pusha
pushf
pop
push
test
cmp
adc
dec
adc
imul
jmp
loopne
negb
repz
xor
enter
xchg
data16
inc
fwait
sbb
pusha
out
mov
dec
data16
mov
mov
adc
mov
cmpsb
mov
movsl
jae
adc
mov
dec
ror
sbb
push
adc
and
out
jmp
xor
cmc
iret
push
push
negb
adcl
loope
cli
test
xor
addr16
cli
jno
or
inc
sub
xorb
in
imul
in
sti
aad
pop
leave
call
sbb
andl
adc
int3
inc
data16
mov
negl
insl
xor
push
pop
sarl
in
xor
dec
lret
mov
ret
es
test
or
pop
lock
or
add
mov
dec
test
subl
xor
adc
cli
es
roll
into
mov
push
movsb
mov
cmp
add
ror
hlt
fcompl
rcll
inc
jo
add
out
mov
ss
adc
or
stos
xchg
hlt
add
xor
stos
pop
cmpsb
test
mov
cli
sbb
xor
adc
mov
and
insl
sub
adc
out
lret
jmp
pop
and
mov
sbb
std
mov
add
das
enter
out
and
xchg
pop
rorb
inc
push
mov
adc
fwait
inc
out
lret
mov
out
mov
inc
xor
lcall
or
sub
les
movsb
xchg
lock
cs
popa
jp
inc
out
into
push
fwait
mov
push
ds
in
or
iret
sbb
xchg
adc
jle
sub
sub
push
adc
rcrb
repnz
jl
test
out
lea
out
and
adc
xor
adc
pop
adc
scas
jge
pop
adc
test
ljmp
sub
mov
femms
push
imul
inc
out
adc
repz
lahf
imul
mov
mov
mov
push
xchg
mov
js
mov
push
mov
mov
pop
mov
push
push
pop
and
mov
orl
cmp
addr16
lea
testl
push
push
sub
clc
push
out
inc
add
daa
jmp
aam
xor
sahf
xchg
test
dec
inc
mov
mov
rorb
sarl
ss
adc
gs
repz
mov
andb
mov
adc
test
xchg
paddw
pop
and
lock
pop
mov
add
mov
inc
inc
add
bnd
xor
adc
mov
pop
lret
lods
test
mov
jne
push
sub
outsb
xchg
lret
sarb
jnp
mov
xor
xor
jns
mov
inc
inc
mov
or
out
dec
pop
lcall
mov
push
cmc
pop
lods
or
movmskps
aam
pop
cmp
cmpsl
and
and
leave
jae
sub
mov
ret
push
stos
repnz
int
out
decl
adc
test
push
movsl
stos
mov
js
jge
xor
movl
sub
mov
and
bnd
xchg
aad
inc
jecxz
mov
or
sbb
fwait
ljmp
fisubrs
xchg
sahf
mov
mov
fwait
push
jns
xchg
loope
imul
jl
dec
xchg
int3
andl
test
xchg
pop
or
jns
mov
and
fs
insb
setbe
xor
repz
add
clc
and
fdivrp
add
or
and
movsb
flds
gs
mov
mov
xchg
cltd
push
testb
bound
add
add
push
sbbb
jge
inc
loopne
mov
pop
hlt
mov
pushf
sub
test
jb
and
cld
in
into
mov
icebp
rcll
icebp
add
or
sarl
inc
jl
jle
test
and
clc
xchg
fdivr
jb
repnz
nop
mov
popa
test
add
xchg
test
and
out
aam
and
jnp
imul
data16
mov
lods
cmp
cwtl
cmp
cmp
mov
shll
add
push
stos
aaa
pop
ja
add
inc
cli
out
push
mov
and
inc
mov
mov
or
cwtl
rclb
pop
ljmp
pop
jp
inc
sub
dec
xor
xchg
mov
insl
std
cmpsl
mov
cmp
lock
hlt
lds
mov
or
ss
mov
push
push
mull
ret
mov
push
lret
test
mov
and
dec
xchg
aad
xor
pop
push
mov
add
fbld
mov
cwtl
ljmp
jne
and
cltd
fidivs
sar
adc
in
xchg
mov
jno
lcall
mov
cmp
repz
pop
icebp
and
dec
pop
dec
shr
add
xchg
and
dec
jl
dec
sbb
aaa
pop
xor
lret
jg
test
sub
push
push
loope
or
cs
dec
mov
jbe
je
xor
push
fidivl
fwait
int
movsl
ret
jmp
or
and
cmc
sahf
or
rcrb
adc
aas
shll
and
xor
xchg
movsb
ds
inc
scas
loop
inc
aaa
std
mov
adc
imul
leave
arpl
icebp
fs
cli
in
adc
jecxz
testb
data16
lods
sarb
cmp
das
test
add
mov
jno
in
stos
arpl
leave
out
clc
push
push
test
test
mov
pop
sahf
movsb
fnstsw
icebp
inc
mov
push
jb
or
xlat
js
sub
cltd
jbe
jl
popf
mov
pop
pop
inc
rcl
adc
jg
mov
shrl
in
pusha
and
dec
scas
xchg
cmp
pushf
push
push
jge
stc
in
sbb
mov
lcall
pop
cs
ljmp
mov
xor
and
inc
add
mov
jns
iret
pop
cltd
xor
loope
hlt
jg
aam
cmpb
je
mov
dec
sbb
pop
pop
imul
icebp
mov
jnp
inc
lret
adc
xchg
add
pop
orb
loope
push
push
mov
and
mov
and
out
mov
test
pop
scas
mov
daa
sbb
pop
pushf
pop
addr16
icebp
cmp
je
std
ljmp
cmpsl
outsl
pop
call
inc
testl
insb
mov
jae
lods
sahf
ds
push
pop
and
or
and
pop
sbb
adc
movsl
xchg
jp
jge
push
lcall
xchg
stos
sub
inc
test
shl
test
setle
pusha
xchg
or
push
cmp
cmp
jge
add
cwtl
add
inc
data16
jmp
aas
mov
loop
jno
pop
leave
mov
rcrl
or
popa
cmp
mov
xchg
pop
sub
cmpsl
adc
ja
dec
mov
jecxz
lcall
xchg
cmpsl
es
xlat
inc
arpl
fistpll
or
jp
xor
cli
pop
loop
sahf
jle
lahf
sar
adcl
ret
push
std
xor
add
mov
or
xchg
lret
push
sub
and
jnp
pop
push
lret
aaa
das
and
aaa
out
mov
repz
ret
lcall
jecxz
mov
idivl
shll
loopne
mov
dec
sbb
jmp
fwait
mov
iret
aad
inc
ljmp
inc
test
mov
ret
testb
loop
dec
mov
or
jne
test
stos
ficoms
test
add
std
out
subl
lret
fistpl
icebp
add
add
adc
into
cmpl
and
inc
mov
addr16
adc
cwtl
lcall
mov
lea
sbb
mov
mov
xor
ss
xor
add
daa
jne
pop
xchg
xor
gs
mov
sub
mov
adc
sti
mov
dec
fsubr
adc
mov
loop
jp
ja
cmp
sub
in
leave
or
xchg
bswap
sbb
jp
rorl
std
add
xor
enter
lret
movsb
add
aad
inc
repnz
dec
push
push
call
inc
pusha
cmp
pop
aad
sub
pop
sbb
lret
xchg
shlb
add
jle
cmpsb
inc
shll
jnp
mov
divl
fcomps
dec
inc
in
ss
gs
cmp
daa
cmpsb
lar
dec
sub
sub
cmp
mov
jo
iret
loop
sti
inc
cmc
cmp
inc
mov
leave
popa
movsb
and
filds
pop
mov
sbb
xchg
cmp
stc
lock
hlt
mov
aas
aaa
scas
mov
cltd
imul
or
loop
in
jmp
stc
arpl
imul
xchg
xchg
dec
dec
or
pop
repz
or
xchg
fsts
into
pop
fs
roll
jle
sub
repz
and
and
xchg
cli
push
pop
cmp
xchg
dec
jg
sub
dec
adc
pop
repnz
test
pushf
pop
mov
inc
dec
div
mov
inc
or
cld
push
mov
jg
add
and
inc
sub
mov
and
aas
adc
adc
movsl
in
mov
push
cltd
mov
or
push
mov
lods
inc
adc
sub
je
mov
js
stos
pop
pop
inc
mov
popa
jno
in
mov
outsl
jnp
add
ficoms
jbe
xchg
sub
sbb
add
lea
push
push
or
repnz
sub
mov
adc
pop
out
loopne
pop
je
or
sbb
loope
test
jl
cmpsb
cmp
mov
lods
sub
sub
ret
imul
scas
add
mov
adc
sub
call
or
mov
loope
dec
and
test
aaa
push
push
fs
sbb
mov
out
inc
nop
in
aad
adc
testb
andl
ffreep
xor
cmc
shrb
cltd
addl
in
jmp
rcl
call
mov
iret
adc
cmp
test
out
js
lock
mov
xchg
ds
cwtl
pop
mov
push
insb
mov
xchg
xlat
sub
sbb
pop
fbld
or
int
lcall
pop
xor
sub
or
test
mov
inc
shrb
sbb
stc
fcmovnu
lods
push
addr16
lock
mov
loope
lea
les
int
dec
neg
or
inc
pushl
adc
daa
inc
push
push
call
pop
mov
mov
es
push
popl
sbb
jle
enter
adc
scas
mov
inc
pop
mov
pop
lahf
mov
test
push
cli
cmp
adc
xchg
std
or
sub
mov
subl
xchg
std
add
push
cmp
mov
pop
fwait
ja
mov
jl
stos
xor
mov
and
fsub
outsl
call
sar
pop
int
xor
lods
cmp
into
push
lock
std
adc
out
daa
and
mov
imul
fcmovbe
inc
pop
push
push
adc
add
hlt
imul
mov
setle
dec
xchg
inc
pop
shll
xlat
inc
mov
loopne
bound
insl
or
daa
push
ficoml
les
lea
js
dec
sbb
std
int3
and
rcll
adc
lahf
pop
out
test
pminsw
loop
lcall
testl
cmc
pop
sahf
sarl
mov
aad
fdivl
nop
lds
in
test
dec
in
lods
std
xlat
adc
es
mov
xchg
inc
je
inc
into
repz
int
adc
scas
sub
shll
add
test
or
sub
pop
jecxz
adc
sbbl
je
cld
cmp
or
push
sbb
scas
pop
ja
dec
mov
pushl
add
jmp
mov
jnp
fcomip
subb
out
cmp
jae
pop
cltd
cli
int
pop
xor
dec
xchg
imul
fdivrl
mov
imull
mov
dec
push
xchg
test
popa
lret
inc
lods
out
test
xor
adc
adc
sub
mov
xchg
dec
jmp
cwtl
mov
cld
adc
cmp
pop
lcall
mov
adc
inc
enter
push
lret
addl
cmp
adc
jl
or
inc
in
xor
ja
stc
push
mov
sahf
inc
sbb
fsubr
stos
or
inc
nop
add
xchg
out
das
jne
testl
out
xor
adc
jecxz
jmp
or
aaa
sub
pop
pusha
shlb
mov
setl
scas
popf
lods
ret
or
xor
jno
mov
inc
sub
das
inc
sbbl
roll
test
out
rcrl
in
out
or
inc
sub
rorb
call
shrl
inc
jno
cmpl
or
or
daa
movsb
add
rclb
push
jmp
insl
add
movsl
lahf
aad
cmpsl
imul
pop
arpl
mov
xor
in
jp
lds
std
xor
push
cli
inc
stos
ret
xor
mov
mov
lock
sbb
adc
imul
hlt
mov
arpl
js
imul
out
sbb
dec
mov
movsb
out
sti
or
push
push
rcrb
mov
xor
mov
cmp
cmp
pushf
lock
loope
sbb
les
xchg
repnz
inc
push
push
cmp
xchg
adc
push
pop
jnp
mov
lods
jns
setne
inc
scas
mov
mov
das
xchg
mov
leave
xor
push
jle
cltd
or
inc
inc
out
mov
mov
sub
push
lret
cltd
cli
push
je
jne
xorb
sbb
sub
lds
fdiv
jp
int
pop
gs
jae
bound
out
outsb
inc
cltd
insb
mov
ja
mov
cmp
jae
imul
push
lods
and
in
mov
cmpl
pop
jp
sbb
iret
cli
mov
dec
xor
pop
cmp
push
out
inc
push
mov
pop
int
xlat
push
jno
test
xchg
sbb
and
mov
daa
pop
test
pop
fistpl
lret
dec
or
and
je
aad
das
bnd
adc
stos
fsubrs
test
cmpsb
loop
jne
xchg
stos
insl
xchg
xchg
fldt
mov
aaa
xorb
push
sbb
ljmp
jge
and
aas
sub
iret
sub
loopne
push
repnz
out
push
xchg
inc
xchg
out
outsl
addr16
dec
insl
mov
test
ficompl
xor
sub
pop
loop
rolb
xorl
lahf
fs
pop
adc
adcb
add
mov
lahf
cltd
dec
outsl
or
mov
xor
sbb
sub
push
sti
in
sub
xor
ljmp
push
rolb
pushf
popa
je
xchg
jecxz
pop
push
je
mov
xlat
fwait
mov
jb
push
jp
mov
in
repnz
add
cwtl
and
pop
jb
add
and
xchg
nop
imul
sbb
xchg
loop
mov
push
movsl
or
test
in
cmpsb
cltd
sub
scas
lods
mov
nop
imul
sub
lea
push
cmp
sub
repz
sub
inc
inc
sub
aad
push
adc
sbb
jae
adc
bound
xchg
inc
test
dec
mov
mov
and
lahf
sub
popf
sahf
js
movl
pop
clc
fdiv
out
fisttpll
les
lcall
dec
pop
rcrb
xchg
dec
jne
mov
sbb
push
popa
std
adc
rorl
les
call
jns
or
pop
xchg
fsubrl
call
and
jmp
cmp
aam
pop
inc
bnd
test
xchg
mov
lods
cmp
push
sti
testb
int3
mov
xchg
mov
mov
sub
mov
or
xchg
push
pop
ds
cmpsl
mov
lret
jmp
xchg
or
mov
xchg
mov
sub
sti
addr16
dec
sub
jmp
mov
movsl
stos
outsb
ret
mov
in
dec
ret
mov
push
aam
loopne
cmp
mov
cmp
test
cmp
sub
ljmp
add
adc
test
xor
out
jne
std
cmp
hlt
int
ret
xor
jo
aam
sbb
jb
ljmp
inc
fs
sbb
push
mov
jecxz
sub
sub
lds
jae
mov
sbb
aaa
movsl
in
add
and
push
inc
cwtl
fnstenv
repz
dec
sti
pop
xlat
pop
mov
fisttpl
sub
pop
out
enter
adc
add
sub
xor
hlt
pop
mov
imul
push
jecxz
cmp
inc
test
mov
adc
ss
and
test
rcr
ret
and
ret
add
call
xchg
mov
sub
nop
or
pushf
mov
push
in
cmp
mov
arpl
imul
loope
rcll
xor
jnp
insl
or
jmp
int
sbb
aam
orb
xchg
ficompl
nop
dec
mov
mov
pushf
mov
pop
addr16
inc
jbe,pt
aam
dec
mov
jo
cmc
lock
or
fistl
shrb
nop
ret
pop
jge
fldt
aam
scas
mov
inc
aad
add
test
pop
inc
aas
lock
push
mov
or
mov
inc
and
stc
xchg
inc
jg
jmp
in
lods
cmc
sbbl
mov
les
pop
xchg
int3
mov
clc
adc
arpl
add
subl
pushf
xchg
lcall
bnd
xchg
sti
aaa
fisttpl
add
mov
mov
pusha
or
mov
js
xchg
jnp
int
arpl
jecxz
mov
xchg
inc
mov
frstor
and
mov
fimull
mov
adc
loop
mov
std
divb
call
adc
rorb
mov
dec
sub
jg
pop
sub
push
lcall
in
and
shlb
push
or
mov
rol
xchg
into
push
lea
cmp
push
fmuls
adc
loop
mulb
icebp
add
shr
aas
stos
clc
cmp
sub
icebp
mov
lret
testl
iret
and
xchg
or
pop
mov
cmp
sbb
repnz
dec
pop
pop
inc
mov
and
sbb
adc
lods
xlat
jo
fwait
sahf
test
test
xlat
orl
add
int3
test
outsb
mov
adc
mov
inc
mov
adc
jns
or
pushf
xchg
lcall
jb
inc
xchg
push
call
fisubl
iret
mov
add
out
cld
inc
fwait
mov
inc
out
mov
mov
mov
jle
stos
inc
cli
leave
dec
adc
mov
mov
mov
out
stc
lods
inc
stc
jl
mov
movsb
idivl
pop
insb
inc
push
scas
sub
mov
xchg
in
test
fdivrs
and
cmp
cmc
int
xchg
outsb
iret
mov
inc
inc
adc
jo
mov
in
pusha
loopne
cmp
adc
and
dec
push
ljmp
mov
inc
ficomps
std
outsb
pop
pop
and
adc
arpl
test
cmp
popa
lea
pop
inc
mov
push
pop
lods
call
push
fnstenv
mov
int
pop
push
jae
add
push
jg
jmp
mov
mov
jns
test
inc
jne
rolb
lock
out
je
and
movsl
fs
movl
mov
mov
mov
xchg
mov
ret
add
sti
rcll
pop
or
jb
and
adc
inc
shl
decb
pop
cmc
sahf
cmpsb
scas
popa
push
cli
pop
xchg
les
fcoml
push
inc
dec
xor
andl
fisubs
insl
ljmp
subl
shrb
addl
sarb
out
mov
into
insl
cmp
int3
movsl
sbb
bound
mov
fnstsw
lods
mov
adc
cmp
sub
cmp
dec
lods
mov
xor
std
cltd
pop
sbb
sub
aas
cmp
mov
call
add
push
cmpl
dec
cli
aam
leave
mov
mov
cmp
inc
push
rcll
rcll
fnstenv
dec
mov
cmp
ret
sub
add
push
sub
insb
pop
mov
jmp
mov
xlat
adc
xchg
or
clc
nop
mov
fidivrl
pop
mov
xchg
xor
sub
into
fcmovu
subl
jp
dec
mov
fs
xor
mov
add
fnstenv
xor
cmpsl
pop
xchg
xchg
mov
mov
das
or
jp
scas
inc
dec
cmp
fldt
rcrl
fs
cmpsl
cli
inc
adc
jp
clc
mov
movsl
inc
fstl
and
lret
mov
hlt
jne
mov
or
lret
xchg
mov
lods
lahf
lcall
mov
add
add
icebp
dec
or
loope
cmc
inc
add
mov
test
lods
lea
pusha
aad
jns
and
push
fs
mov
dec
scas
jp
into
sbb
fmuls
int3
push
cmp
fs
inc
jmp
inc
mov
mov
enter
push
push
out
js
ds
mov
fcomip
push
jno
hlt
jmp
ret
test
pop
mov
test
jge
test
lods
sub
mov
sahf
cmp
push
inc
sti
lds
adcb
sub
sub
mov
and
mov
pop
je
pop
push
repnz
mov
out
mov
add
xor
int
mov
push
in
pop
lahf
xlat
mov
arpl
test
cmp
mov
sbb
inc
movsb
das
lods
push
int
test
das
shll
mov
shlb
dec
rolb
xor
inc
arpl
std
sub
test
sbb
mov
push
inc
dec
cmp
pop
sarb
arpl
dec
adcl
fidivrs
add
add
lods
sub
pop
jae
pop
aas
call
inc
and
push
int3
cli
pushf
xor
aam
aad
lock
mov
mov
dec
pop
mov
or
fbld
and
pushf
adc
push
pop
hlt
mov
nop
not
scas
push
xor
sub
or
jle
mov
mov
mov
lea
push
mov
dec
sub
add
adcl
dec
jnp
mov
jnp
outsb
aam
ret
ljmp
in
inc
inc
and
sbb
popa
xchg
loope
ja
je
jmp
and
and
bound
mov
lea
shlb
int
sub
fcompl
test
and
sti
and
test
push
jo
adc
adc
in
sbb
in
fldpi
add
adc
and
and
in
mov
loop
xor
pop
dec
cs
mov
ret
jecxz
mov
add
js
outsl
sub
int3
pop
cli
out
mov
pop
cwtl
out
dec
jmp
dec
iret
out
std
test
test
sub
in
out
insb
notb
push
push
mov
lea
lret
repnz
pop
sti
jne
out
loop
pop
pop
pop
sbbl
stc
xor
jae
cmp
inc
daa
and
or
jbe
mov
in
in
pop
sbb
mov
or
fldt
stc
fists
fs
sbb
jmp
or
dec
shr
push
push
and
pop
pusha
addr16
xchg
inc
je
outsl
cld
mov
dec
push
clc
mov
pop
lret
mov
out
and
bnd
mov
and
scas
icebp
and
fnsave
call
xor
lods
repnz
cmp
into
movsl
mov
lock
ljmp
xchg
cmp
lods
adc
fstl
ja
mov
decb
mov
dec
orb
out
inc
les
xor
xchg
in
fcmovne
jge
sbb
or
std
mov
cmp
enter
pop
xor
inc
mov
stos
daa
sub
add
cmp
testb
subb
test
orb
fiaddl
scas
shll
jo
pusha
in
or
pop
mov
sub
std
scas
je
add
xor
popf
cmp
repnz
ljmp
fdiv
dec
push
adc
push
add
xor
loop
xor
outsl
cld
nop
gs
dec
mov
loop
fmuls
lock
mov
add
push
lods
xor
mov
jae
mov
fs
jle
or
in
sub
fs
cs
in
cmp
or
mov
and
pop
les
scas
fnstenv
loopne
or
sub
fbstp
mov
mov
stc
mov
fnstenv
cmp
jl
stc
dec
pusha
xchg
ret
out
mov
bound
stos
mov
jmp
loope
xchg
add
insl
mov
pushf
jb
shll
xchg
in
das
aas
ljmp
cmpb
int
mov
adc
cwtl
mov
or
xchg
hlt
push
fimull
adc
jle
imul
xor
cmpsb
or
dec
imul
int
fildll
data16
or
es
jb
xchg
dec
pop
jmp
pop
inc
mov
push
dec
int3
pop
jae
je
js
xchg
clflush
mov
mov
loope
sub
cs
sti
push
add
jg
loop
lcall
xchg
jp
jp
mov
lds
in
xchg
sbb
xlat
xchg
shll
addr16
dec
jne
mov
mov
test
pop
xchg
fs
sbb
xchg
movsb
in
add
insb
mov
and
push
fidivrs
int
es
in
incl
loop
add
out
fistl
jbe
xlat
dec
scas
xchg
xor
xchg
rcrl
xchg
leave
adc
sbb
mov
inc
pop
add
in
into
test
js
loopne
mov
jno
jne
mov
inc
jl
jnp
insb
pop
or
js
pop
mov
fs
and
mov
xor
fs
gs
cltd
cmp
pop
mov
mov
jnp
fnsave
fidivrs
cmp
mov
cmc
gs
lret
xor
rolb
testb
imul
in
inc
loope
sbb
or
mov
and
or
js
push
jb
push
addb
lahf
clc
js
push
pop
roll
sub
mov
icebp
jl
dec
cmc
pop
push
mov
cmp
nop
mov
rorl
jecxz
fldt
jge
dec
dec
or
ja
pusha
and
xchg
pop
push
mov
push
and
lahf
into
gs
xor
pop
pop
pop
jns
andb
out
subl
and
pusha
mov
mov
ficoml
lods
xlat
out
xor
aad
mov
pop
mov
mov
nop
gs
in
push
aam
dec
hlt
ja
aaa
sub
out
add
or
push
movsb
stos
xchg
xchg
test
movsl
or
xchg
in
add
dec
mov
mov
xlat
push
stc
aas
hlt
xchg
dec
sahf
xor
js
jg
sbb
adc
mov
lret
out
mov
ljmp
clc
loopne
adc
in
cmpsl
ja
pop
mov
mov
mov
ljmp
movsb
pop
xchg
loopne
mov
sbb
loope
mov
dec
in
push
cmp
prefetch
or
imul
and
mov
push
xor
pop
daa
push
xor
jnp
push
ljmp
stc
in
popa
adc
in
push
mov
test
paddsw
cmp
pop
xor
sbb
fsubs
jae
cltd
lcall
mov
xchg
add
sahf
cwtl
movsl
test
inc
add
mov
out
inc
jnp
and
ret
sahf
push
mov
loope
rcrb
xor
cwtl
cmp
sbb
sub
xorb
icebp
lret
vpmovzxdq
in
xchg
outsl
pushf
add
or
pop
leave
xchg
and
fisubs
sbb
jnp
push
insb
xchg
in
cld
add
mov
lret
dec
push
lock
mov
call
mov
dec
aas
xor
andl
mov
outsl
inc
in
inc
stc
mov
adc
lea
and
push
stos
xchg
cwtl
mov
inc
jg
imul
dec
aam
repnz
and
incb
orl
dec
mov
push
jle
sub
sub
sub
ja
bound
cltd
push
out
gs
or
xor
mov
sbb
jmp
mov
adc
mov
xor
or
loop
push
ret
lock
jecxz
rorl
popf
pop
repz
add
fiadds
xor
addb
sub
add
dec
stos
hlt
stos
in
xor
ljmp
add
aas
push
test
insl
add
mov
imul
fwait
adc
imul
outsb
cwtl
mov
insl
inc
add
xor
popa
and
or
aad
push
mov
and
lcall
pop
daa
push
mov
inc
sbb
xor
adc
into
add
jge
addb
jb
repnz
adc
push
cwtl
mov
arpl
mov
gs
lock
xor
inc
popf
into
add
mov
ss
dec
adc
lods
sbb
clc
loop
adc
ljmp
add
lcall
or
mov
mov
scas
jecxz
mov
and
or
mov
faddl
adc
divl
cmpsb
clc
insl
mov
jl
and
push
data16
jne
out
movsl
push
enter
popa
shld
dec
movsb
jo
mov
out
mov
ljmp
rcrb
sbb
or
aam
xor
testb
repz
int
adc
xorl
dec
popa
ja
lods
shl
lods
addr16
inc
push
insb
iret
dec
out
mov
fidivrs
cmp
sub
jno
jne
fsubl
sub
sbb
pop
hlt
scas
rclb
es
les
inc
xchg
mov
mov
jns
mov
dec
sbb
push
test
sub
push
and
insb
pop
jp
out
cli
add
cmp
stc
cmp
sub
fsubr
cmp
or
sub
ret
repnz
dec
mov
sti
xchg
pop
sub
subb
fimull
int3
inc
movb
outsb
xchg
cmpb
rcrb
addr16
and
pusha
or
leave
sbb
scas
sub
mov
pop
dec
outsl
into
imul
jbe
pop
jecxz
nop
push
bound
in
push
iret
fcom
lret
cld
shrl
leave
push
sbb
cmp
aad
and
push
mov
jmp
addr16
jns
inc
stc
pusha
stos
push
or
fwait
pop
hlt
es
xchg
addb
cld
mov
or
into
rcl
adc
fdivl
dec
dec
inc
add
lock
in
incl
adc
sbb
jecxz
cwtl
mov
cltd
jmp
mov
sub
aam
jno
lret
scas
jbe
xchg
pop
fdiv
filds
adc
inc
pop
mov
sub
jno
imul
push
daa
int
adc
push
mov
mov
in
sbb
movsl
and
and
dec
xchg
iret
add
push
scas
out
xchg
clc
sbb
push
adc
lahf
add
dec
std
sti
sbb
mov
pop
cld
fwait
xor
and
loop
mov
movsl
xlat
in
sbb
leave
fnstsw
adc
xor
xchg
int3
loop
outsl
movsb
dec
adc
add
mov
jne
dec
sub
xchg
inc
dec
adc
dec
ljmp
aam
andb
dec
out
cmp
movsl
loop
adcb
push
sub
jne
and
push
lods
adc
sub
xchg
jb
and
fs
push
push
daa
sbb
or
negl
pop
jp
pop
mov
repz
adc
shll
enter
sub
pop
or
bound
cld
mov
and
out
push
lds
sahf
in
jne
mov
lods
dec
imul
dec
sub
test
pop
mov
inc
sub
mov
push
out
cwtl
xor
imul
loope
or
das
dec
in
mov
ret
add
pop
pmulhuw
in
pop
cs
andb
js
push
mov
push
out
out
aad
adc
add
mov
cmpl
jo
sbb
cmpsb
fildl
and
inc
or
fadds
imul
inc
int
jnp
orb
cmpsl
divl
movsb
push
ds
mov
imul
insb
imul
orb
add
loope
clc
adc
pop
outsb
mov
int
xchg
and
pop
int3
fdivr
sub
int3
mov
sti
mov
fmul
add
pusha
js
sarl
subb
roll
clc
push
adc
pop
movsb
jbe
loop
push
aas
cmp
xchg
lret
push
pop
in
jb
ja
pop
iret
pushf
sub
into
add
neg
mov
in
xchg
jg
xchg
push
cmc
jp
fnstsw
shll
cs
xchg
sbb
or
jle
enter
les
xor
push
inc
loop
mov
mov
nop
dec
sub
sbb
lods
scas
lock
mov
mov
jo
dec
fwait
mov
leave
movsb
mov
adc
mov
lret
in
sbb
adc
mov
jp
imul
mov
fldcw
xchg
sbb
shll
pushl
out
bound
and
aam
mov
and
adc
pop
cs
ljmp
imul
mov
push
subl
out
jb
aaa
xchg
stos
in
and
pop
sbb
stc
push
push
jno
out
mov
xor
stos
sbb
loopne
dec
fcmovb
test
aas
lock
cmc
and
ja
cli
insb
outsb
loope
fists
push
or
jne
out
mov
fcomps
adc
je
sub
pusha
iret
xor
rcrl
mov
jmp
in
xorb
adc
sbb
int3
dec
gs
sub
stos
add
xchg
add
jp
mov
popa
test
or
jp
shl
cltd
loope
mov
push
xchg
add
sub
mov
movsl
mov
movsb
mov
pushf
and
jbe
sub
jne
mov
mov
jl
add
andb
aas
enter
jle
pop
adc
xor
cmp
push
lret
inc
icebp
popf
test
movsb
adc
int3
cmp
pop
xlat
data16
and
adc
lock
or
inc
aad
in
inc
add
inc
or
mov
xchg
push
cmp
mov
xlat
in
lock
pop
rcl
dec
mov
adc
mov
lcall
dec
jmp
movsl
mov
mov
pop
jmp
xchg
in
or
test
cmp
out
sti
mov
andl
rclb
cmp
sarb
pop
push
adc
and
stos
fbld
xchg
mov
xor
aad
bound
hlt
push
lods
in
insb
rcrb
imulb
dec
fdivs
push
push
mov
aad
inc
out
inc
inc
je
pop
cmp
stos
repnz
pop
jb
sbb
fisttps
lds
or
orb
mov
loop
js
and
insb
shlb
add
cwtl
shll
daa
andb
arpl
lret
ficompl
inc
lods
mov
jnp
shlb
test
xchg
push
lock
stos
xchg
stos
inc
mov
xor
sbb
mov
jl
out
dec
jle
iret
aas
sti
cltd
in
xor
in
pop
mov
pop
jge
fwait
std
push
fsubrl
mov
xchg
push
mov
das
xor
mov
in
or
imul
popf
shlb
insl
mov
in
inc
xchg
lock
scas
jne
rol
cwtl
add
movsl
sub
and
pop
les
negb
lret
popf
fidivs
leave
add
stc
leave
mov
add
push
jmp
js
call
mov
loope
jnp
es
mov
xor
mov
fnstsw
mov
pop
push
add
sub
out
xchg
dec
adc
and
mov
outsl
inc
lcall
xchg
cwtl
pusha
enter
arpl
loopne
cli
cmpsb
mov
dec
sub
or
mov
divb
jae
mov
ret
jno
imul
test
dec
push
sahf
or
push
fbld
out
es
insl
pusha
enter
sbb
aaa
aad
insl
jbe
sub
add
push
push
and
jmp
ds
push
sbb
mov
push
xor
negb
jle
pop
nop
add
adc
xor
hlt
cmp
pop
mov
mov
adc
adc
hlt
lds
in
cltd
xor
adc
fwait
pop
ret
xor
or
cmp
sbb
aad
roll
adc
in
pop
mov
xlat
imul
cmpl
xor
fsubr
lods
inc
lea
cld
inc
fwait
aam
mov
fsubl
xor
and
in
movsl
outsb
jns
mov
mov
or
push
out
nop
outsb
xor
xchg
sbb
lds
sti
mov
je
pop
inc
sbb
push
adc
repnz
hlt
jecxz
jns
sub
push
mov
jecxz
dec
mov
add
mov
add
lret
lea
loope
cltd
popf
jmp
popf
or
sub
push
gs
aaa
mull
xchg
aaa
test
push
pop
les
daa
fbld
inc
mov
leave
sub
jg
mov
xorl
loopne
ljmp
jl
and
int3
xchg
and
xchg
leave
sub
xchg
pop
loop
dec
sub
insl
out
dec
sbb
fiaddl
out
aam
and
xchg
inc
mov
adc
mov
mov
outsl
and
fwait
mov
rclb
or
pop
inc
sbb
scas
xchg
cmp
push
fsubs
inc
jle
adc
lds
and
lods
aam
mov
fstpl
movsb
adc
ds
xorl
jl
js
and
test
fcoms
and
xchg
mov
mov
pop
mov
stos
pusha
mov
jns
xchg
jne
pop
dec
fcmovu
das
and
lock
out
aad
xor
mov
lahf
mov
mov
mov
shlb
mov
mov
lods
dec
and
adc
and
jp
add
xor
sbb
mov
mov
jae
clc
adc
lcall
in
cmpsl
or
push
add
addr16
negl
rol
jmp
xor
dec
xchg
xchg
add
testb
lret
xor
add
movsl
shl
inc
nop
ffreep
iret
cmp
rcll
cmp
fisubl
popf
mov
out
repnz
pop
inc
sub
push
jns
mov
push
xchg
es
sbb
inc
insb
andl
add
push
mov
add
shl
inc
mov
jnp
push
cmp
adc
sbb
or
jge
mov
repz
les
xor
ficoms
sub
ds
shl
mov
outsl
xchg
mov
rcll
je
popf
mov
dec
jo
cwtl
fstpl
test
sbb
cmp
add
adc
lods
push
xchg
xorb
popf
sub
int
loopne
pop
loopne
adc
ljmp
imul
mov
test
or
rcrl
je
inc
fdivrl
inc
cld
mov
test
push
inc
clc
or
ret
xor
mov
xor
jb
mov
jle
movsl
jbe
cmpsl
add
sub
jo
scas
adc
cmpsl
or
or
mov
sub
sbb
icebp
cmc
adc
push
jnp
lcall
cmpl
and
popa
adc
shr
mov
into
adc
xor
test
fildll
cmp
das
fs
xor
int3
and
leave
inc
addb
cmp
jmp
testl
add
pushf
pusha
mov
adc
repnz
ja
test
jnp
xchg
bound
enter
mov
sub
mov
xchg
pop
aaa
dec
or
popa
orb
inc
icebp
pop
ja
jmp
fadds
push
stos
cmc
nop
dec
push
repz
jmp
movsl
cmpsb
das
or
inc
push
fwait
adc
shrb
mov
std
data16
pop
out
lahf
imul
insl
fdivrl
jl
aad
je
xchg
outsb
cmp
negl
andb
outsb
mov
pop
xlat
lods
jae
jmp
xchg
or
rcll
scas
mov
xor
pop
push
jle
jl
stos
mov
jno
jae
ja
rcrb
jae
cli
xchg
enter
mov
pop
jo
dec
fldcw
aaa
shlb
inc
fildll
push
mov
and
jl
je
sub
inc
fmuls
ret
cmpb
je
sbb
cmp
shll
dec
movsl
jp
int3
cltd
sbb
clc
bound
fisttps
aas
mov
mov
fisubl
shl
sbb
stos
jmp
xchg
mov
cmp
and
dec
dec
test
addr16
popl
push
jp
mov
repz
dec
xor
xor
sbb
ja
dec
adc
xchg
arpl
sub
pop
ret
aad
xor
push
outsb
sti
out
andl
sbb
fdivrl
push
movsl
mov
xor
and
or
add
mov
mov
icebp
popa
pop
enter
inc
in
rcrb
mov
xor
and
sbb
fs
sti
int3
xchg
mov
pop
cld
inc
loop
inc
jae
jne
sbb
cmp
inc
jae
push
std
mov
shll
mov
lcall
pop
add
jns
mov
xor
push
push
addr16
aaa
jge
mov
lea
std
xlat
dec
nop
sbbb
xchg
push
out
sub
push
add
jecxz
xchg
sub
add
hlt
mov
cmp
pop
or
repnz
mov
xchg
pop
jmp
mov
jge
sub
lods
push
stos
stos
lods
push
dec
dec
int
in
xor
rorl
sbb
mov
pop
pusha
xchg
es
std
imul
cld
sub
add
fcmovb
mov
aaa
lret
adc
pop
push
cmp
xchg
inc
fidivrs
dec
xchg
mov
les
shl
adc
fiaddl
divb
inc
mov
jne
test
ss
mov
xor
mov
scas
xchg
es
adc
xor
jo
je
andb
ljmp
lcall
orl
cmp
inc
out
clc
ljmp
iret
cmpsb
aaa
push
or
lock
scas
stos
call
loop
adc
jb
in
push
fiadds
jp
push
fbstp
in
mov
xor
xchg
je
push
or
xor
inc
push
test
in
lcall
pop
frstor
xor
stos
inc
mov
fiadds
mov
pop
loopne
repz
sbb
xor
mov
fsub
icebp
or
das
negl
inc
divl
push
or
out
fwait
sub
enter
mov
cmp
jl
inc
dec
push
andl
jo
mov
adc
lds
add
push
dec
mov
and
cmp
test
xor
out
ljmp
lret
cmp
xor
cmp
das
pushl
and
negl
sbb
pop
icebp
insb
fs
adc
mov
dec
outsl
sti
lret
xchg
inc
in
scas
inc
faddl
xor
jno
jb
clc
add
rcrb
loope
or
xchg
adc
lock
fbstp
or
mov
push
pusha
push
mov
xor
cmp
push
add
xchg
cmpsb
mov
rolb
mov
cmp
in
add
pusha
cld
cs
ds
xchg
movsb
and
jmp
add
out
pop
cmp
sub
xchg
mov
add
ret
add
mov
dec
hlt
jle
sub
out
lods
loop
xor
xor
dec
pop
dec
or
insb
pop
fwait
aaa
and
stos
arpl
ror
mov
cmp
test
sti
push
sbb
cmp
cmp
bound
loopne
mov
aaa
inc
cli
xor
or
jge
sbbl
mov
call
enter
fldl
out
pop
inc
clc
inc
mov
sbb
push
cmpsl
xchg
fcmovnu
cmp
iret
inc
call
xchg
fnstenv
dec
mov
mov
dec
fcom
cmp
cmpsl
int
loop
cwtl
sahf
xchg
fwait
inc
push
mov
enter
and
popf
cmp
imul
pop
add
xlat
je
lea
cmp
push
pop
scas
aaa
inc
lods
jmp
lahf
outsl
jmp
add
rorl
sti
dec
les
call
out
and
lcall
shr
jle
and
sbb
and
loop
inc
jne
enter
pop
sarl
fmull
shl
xor
pop
push
int
call
xchg
pop
das
cld
pop
inc
ret
lret
popf
mov
je
xor
sahf
sub
mov
dec
xor
lret
fbstp
movsl
push
shll
bound
ret
je
cwtl
pop
mov
lcall
mov
adc
shll
mov
arpl
jecxz
push
inc
dec
int
dec
insl
stos
xchg
movsb
dec
xor
xchg
ret
sti
sarl
lods
ja
push
sti
sbb
in
push
pop
or
test
push
jg
add
rcrb
and
push
push
rolb
sub
scas
jp
sbb
ds
in
fidivl
mov
pushf
enter
rcrl
in
inc
jbe
pop
lret
in
iret
jne
pop
lcall
clc
mov
loopne
dec
stos
push
push
add
and
pop
dec
js
inc
jmp
test
das
pop
aam
std
mov
mov
mov
mov
mov
jle
mov
push
push
add
lcall
mov
shll
dec
add
jmp
xor
mov
sub
popf
jmp
dec
dec
xor
push
clc
adc
inc
out
mov
cmp
shlb
mov
pushf
sub
xor
xchg
xchg
psubusw
insb
rcll
jae
ret
push
rol
cmp
aas
stos
mov
bound
cmc
xor
push
mov
inc
test
scas
subb
jl
cmp
shll
loop
push
andl
xchg
idivb
ljmp
fimuls
dec
xchg
pushf
mov
pushf
icebp
add
lret
cmpsb
pop
popa
out
stos
add
mov
je
push
xlat
xchg
cmpsb
std
pop
imul
imul
lea
mov
ror
out
or
stos
stos
cmp
cmp
dec
xchg
aam
insl
mov
push
sbb
jl
clc
nop
cmp
sub
gs
add
iret
pop
jns
pop
jp
aam
inc
mov
cwtl
frstor
or
push
sbb
pop
icebp
mov
int
sub
mov
data16
xchg
leave
sarb
sub
movsb
xchg
ljmp
adc
fildll
rcrl
andb
insl
add
xor
int3
and
and
xchg
lods
out
ljmp
adc
pop
aas
iret
int
loop
bnd
and
outsb
test
mov
insl
xchg
inc
mov
jnp
in
xchg
ljmp
jmp
xor
lods
inc
mov
aam
dec
bound
cmp
mov
xor
sub
adc
in
push
cmovno
mov
jb
xchg
mov
pop
add
nop
push
daa
jg
dec
ret
lahf
mov
mov
inc
shlb
jo
adc
pop
sahf
inc
addr16
jnp
and
xchg
idiv
cwtl
movsl
pop
notl
divl
sahf
jge
xor
lret
cli
mov
out
sub
mov
or
enter
stc
sbb
leave
push
cld
xchg
cmpb
pop
pop
in
pop
bnd
ja
or
dec
fidivs
add
xor
aaa
imul
sbb
lock
rol
cwtl
dec
or
andl
mov
cmp
lods
daa
pop
stos
enter
xchg
xor
orl
sub
out
aas
cmp
pusha
push
lcall
mov
or
jno
mov
xchg
jnp
mov
and
push
xor
scas
mov
cmp
mov
ret
mov
inc
jg
or
sub
aas
lea
mov
insb
out
cmp
fcmovb
popf
jnp
test
dec
add
lods
sahf
jnp
cmp
loop
sbb
add
insl
outsl
cld
es
popf
test
iret
loopne
xor
dec
inc
mov
js
in
les
jno
sub
jg
sbb
leave
pop
adc
mov
mov
jecxz
ss
cmpsl
mov
sub
jge
mov
out
shrl
out
call
pushf
outsl
jbe
mov
mov
sbb
jge
outsb
cmp
arpl
sbb
dec
xchg
sub
or
sub
mov
mov
popf
lds
inc
push
push
push
jno
mov
xchg
xor
test
xchg
pop
or
pop
rclb
repnz
out
clc
cmp
rol
sbb
jbe
addr16
adc
mov
sbb
mov
push
mov
inc
xchg
and
ds
scas
mov
cmpsb
sarl
cmp
push
and
loop
mov
and
dec
fs
sub
rclb
mov
or
test
ds
and
mov
cmp
cwtl
cmp
mov
dec
movsb
xor
cmp
xchg
aam
pop
jo
mov
lcall
incl
sbb
out
adc
std
cs
faddl
mov
into
sbbb
ret
movsl
test
cmp
fdivr
popf
adc
repz
mov
push
push
mov
lret
jecxz
popa
xchg
ret
shlb
aaa
sbb
pop
cmp
stos
test
ret
xchg
sub
dec
and
cli
mov
sub
push
fimull
shrl
lret
aaa
movsb
nop
pushf
out
add
iret
pushf
dec
dec
in
es
or
in
pop
xchg
dec
imul
or
or
and
das
fildll
push
orl
faddl
dec
icebp
js
sub
cmpsb
adc
sub
in
daa
or
aas
mov
mov
jl
out
loop
test
pop
add
push
lret
je
or
mov
bound
lahf
rclb
add
push
das
popf
fcmovb
subl
push
and
push
pusha
mov
jb
arpl
mov
mov
leave
inc
imul
test
ljmp
add
movsb
jp
cmc
je
jb
insl
jnp
inc
pushf
nop
and
xor
test
stc
int3
jno
xchg
enter
or
mov
dec
scas
xchg
add
add
das
cmp
leave
mov
sbb
gs
sti
inc
or
in
inc
jns
add
xlat
add
sub
scas
cli
inc
sti
aaa
mov
cmc
rcll
inc
sbb
fisubrl
mov
loope
cmp
or
and
divl
sub
pop
sub
psadbw
push
sti
inc
out
add
scas
push
cltd
imul
pop
mov
pop
jnp
iret
outsl
add
cld
insb
cmp
mov
cmp
mov
mov
repz
les
jg
fwait
add
sub
xchg
push
stos
nop
mov
fisubl
mov
nop
xchg
cli
movsl
and
cld
stos
pop
nop
xchg
sahf
mov
movl
jno
cmp
data16
repz
xchg
hlt
sub
sti
cmp
mov
pop
dec
or
lods
sub
fwait
and
xchg
mov
sbb
dec
clc
idiv
sbb
lret
jae
xchg
into
hlt
xchg
pop
lret
cmp
push
test
jns
pop
cwtl
pop
mov
and
xlat
pop
mov
mov
mov
stos
cmp
adc
inc
dec
add
aaa
add
daa
and
cmp
mov
jle
mov
popf
lods
add
dec
jmp
xchg
in
bound
mov
sbb
dec
xor
cli
jle
and
inc
fwait
clc
int3
pop
fcomip
and
sarl
ret
out
push
or
test
scas
xor
xor
repnz
clc
adc
cmovg
and
inc
lea
into
out
pop
pushf
dec
iret
mov
pop
adc
aad
aam
jno
xor
and
loope
pop
or
outsb
or
or
xorb
sbb
inc
cld
mov
imul
mov
sbb
xor
dec
insb
jae
lret
fistps
pop
cmc
int
int3
jge
out
test
rcrb
addr16
ret
iret
inc
arpl
push
cmpsb
add
aam
mov
mov
mov
insl
scas
mov
lret
sbb
stc
cmp
inc
inc
jb
out
das
add
xlat
push
enter
rcrb
xbegin
out
fistpll
jnp
xor
mov
push
imul
pop
jnp
and
sbb
cmp
push
inc
icebp
xor
lods
dec
out
outsl
sbb
bound
push
in
cli
xor
pop
jno
push
ret
sahf
xor
push
in
sti
clc
data16
push
aam
add
pop
xchg
inc
mov
movsl
push
enter
sbb
lahf
shlb
das
bound
lret
call
fdivrl
imul
inc
mov
movsl
pop
push
jg
sub
mov
cld
sbb
aas
imul
xor
pop
insb
test
imul
pushf
hlt
lret
and
pusha
dec
mov
pop
pop
scas
add
push
jmp
dec
adc
cld
mov
inc
xchg
mov
cmp
rolb
jmp
or
push
adc
mov
mov
call
mov
sarb
aam
loop
outsl
test
sub
xchg
xchg
out
ja
popf
insb
xchg
and
bound
and
push
out
cmp
pop
insl
js
pop
pop
adc
mov
ret
cld
inc
jns
fidivs
pop
call
test
xchg
loope
jbe
cld
and
mov
loopne
jl
mov
fnsave
fnstenv
sbb
test
sbb
xchg
xchg
stos
and
add
fsubs
cmp
js
xchg
adc
xlat
int3
andl
sbb
lods
lods
ss
scas
adc
jecxz
bound
sbb
std
loop
fstpl
ss
push
daa
inc
cmp
push
pop
lea
lods
mov
push
inc
xchg
popf
shr
mov
and
stc
fwait
jecxz
popa
mov
daa
shr
fiaddl
ret
pop
cmpl
jb
or
imul
enter
out
into
movsl
int
sti
into
fildll
fmuls
icebp
sbb
sbb
adc
mov
jp
mov
in
dec
ret
xchg
jno
sub
insl
mov
mov
dec
ljmp
xchg
or
test
mov
xchg
jo
fwait
xor
mov
aaa
add
or
daa
mov
adc
arpl
lret
cwtl
cwtl
fwait
sub
ljmp
imul
adc
into
imul
and
stos
es
or
popf
dec
pop
mov
cwtl
or
inc
out
jnp
pop
adc
loope
mov
push
test
push
inc
cmp
dec
and
adc
pop
adc
iret
stos
faddl
push
mov
push
pop
mov
adc
loop
or
shll
cmp
pop
push
inc
fmuls
sub
es
jp
xchg
add
sub
cwtl
xor
ss
xchg
ja
inc
lods
jnp
gs
jb
rcrb
xchg
popa
inc
mov
cmpsl
push
push
push
adc
or
bound
mov
lock
pusha
ja
pop
jecxz
pop
xlat
sbb
movsb
test
test
pop
ss
cwtl
es
cmp
jae
lds
data16
aaa
xchg
mov
iret
dec
rcr
adc
lcall
pop
jge
adc
insl
fisubrs
cmp
dec
loopne,pn
cmpsb
xchg
add
jb
daa
scas
pop
aad
repz
out
xor
aaa
pop
out
sbb
es
gs
stc
pop
push
test
add
sbb
arpl
push
idivl
jl
call
js
pop
loop
lds
test
stc
stos
jg
in
mov
push
dec
sbb
dec
lea
sbb
cmp
dec
negl
in
or
or
or
es
dec
loopne
jecxz
lods
fistps
out
jp
mov
xchg
in
jle
pop
xorl
into
popa
out
inc
push
fidivl
testl
fwait
scas
mov
mov
jecxz
je
fwait
lret
stc
cwtl
mov
push
fcomps
adc
sbb
xchg
cmc
daa
notl
mov
and
jg
or
mov
testl
mov
shll
jb
rcrb
pop
aad
stos
sub
outsb
xchg
insb
and
dec
cmp
fwait
in
xor
adc
xchg
xor
test
lcall
add
pop
mov
fldl
and
cltd
dec
and
push
sbb
jo
icebp
iret
loop
inc
mov
aas
movsl
cli
imul
addb
push
xchg
or
inc
scas
mov
sub
inc
inc
fldpi
negb
push
xchg
test
adc
push
mull
xor
mov
pop
idivl
jp
shl
inc
gs
arpl
inc
roll
inc
pop
push
sub
in
sahf
and
roll
push
inc
push
push
jns
mov
js
pop
and
insl
das
and
lea
fwait
lret
inc
sets
jge
cli
ficompl
xchg
shlb
lods
mov
sarb
stc
les
sti
scas
xor
mov
hlt
lods
movsl
cmpb
xchg
cli
cmpsl
mov
push
ja
iret
mov
mov
cwtl
cmp
cmp
cmpsb
mov
jmp
hlt
int3
dec
lock
in
jecxz
mull
cmp
mov
cmp
imul
dec
insl
out
in
nop
adc
cli
out
sub
mov
push
lea
jnp
xor
repnz
gs
push
les
or
add
jle
mov
std
lahf
aas
repnz
add
es
cmp
in
xchg
pop
push
int
sub
clc
sbb
jg
pop
ds
std
sarl
xchg
dec
inc
adc
movsl
cli
imul
pop
pushf
mov
scas
leave
vpmovmskb
stos
imul
pop
mov
mov
icebp
push
movsl
outsl
and
lods
jns
pop
or
and
xchg
ja
in
jl
mov
inc
in
mov
les
imul
push
sub
mov
ret
out
rcrb
xor
sbb
mov
and
fs
scas
out
sub
nop
repz
xor
cmp
dec
test
int
dec
sub
pop
mov
xchg
adc
test
adc
pusha
sub
aad
andb
jb
xchg
in
mov
aam
in
lret
add
cs
mov
mov
add
imul
push
dec
cltd
cld
fcomps
stos
test
in
cmpsl
lock
dec
xchg
cmp
or
dec
sti
sub
popa
add
dec
testl
jg
jo
test
ficompl
imull
push
loope
jbe
sarl
jge
lods
adc
loop
in
xchg
outsl
mov
and
dec
mov
inc
inc
xchg
and
out
ret
pop
adc
add
xor
fidivrl
ret
enter
xchg
push
and
imul
in
lret
sbb
mov
mov
mov
nop
add
jae
js
mov
or
push
mov
inc
xchg
push
fdivrs
xor
push
insb
xchg
and
loop
cmp
rclb
push
cwtl
xchg
mov
jnp
jns
mov
stos
add
fucomi
and
lds
nop
cmp
and
ja
sub
xor
pop
lods
test
sbb
lret
dec
mov
sub
clc
test
dec
and
scas
dec
mov
push
fwait
adc
mov
or
mov
inc
sub
push
xchg
js
aam
lock
inc
cmp
loopne
nop
lret
or
mov
fsubrs
ficoms
dec
fdivrl
aas
test
pop
sbb
mov
ret
pop
push
fnstenv
negb
add
outsb
and
lock
arpl
xchg
xor
xchg
bswap
ret
or
add
jp
adcb
loop
mov
jmp
push
mull
ljmp
cmp
cmpb
testl
mov
xchg
leave
push
dec
out
push
shl
int3
cmp
jp
push
push
add
mov
sub
loopne
iret
or
popa
push
aas
inc
jns
or
mov
mov
xchg
mov
cmpsl
adc
xchg
cmpsb
test
gs
cs
dec
outsl
mov
mov
xchg
outsb
repnz
inc
jmp
mov
dec
arpl
jb
maskmovq
notl
pushf
bound
jmp
pop
pop
popa
pop
ss
ret
sbb
fstp
mov
and
jge
xchg
sti
idivb
push
out
push
jnp
dec
bound
iret
icebp
cmpsb
lret
cmp
xchg
fucomp
mov
dec
dec
sbb
cmp
movsb
lahf
andb
or
lcall
dec
in
dec
test
fimull
mov
xchg
xor
push
add
es
and
or
jno
xor
loop
rcrl
mov
or
in
fadds
add
ja
jno
lods
xchg
pop
jp
in
xor
out
fildll
xchg
lret
pushf
mov
xchg
mov
jge
fs
mov
cld
dec
xchg
push
sbb
shlb
aas
lods
aas
xor
and
fs
mov
js
fsubl
gs
jl
lret
shlb
stos
xor
or
add
xor
jno
divl
adc
inc
mov
cmp
dec
adc
fisttpll
loopne
in
dec
aas
rcr
mov
xor
jae
js
ja
es
sub
mov
pop
cmp
sbb
push
inc
dec
repz
int
out
push
jnp
fwait
loopne
xchg
add
and
pop
arpl
test
push
mov
xchg
or
dec
lret
cmpsb
or
pop
in
call
xchg
xlat
pushf
lods
mov
adc
jne
add
orl
cmp
mov
add
stos
push
es
push
or
sub
mov
push
movsl
inc
addr16
out
mov
dec
fdivrs
inc
mov
les
movsb
mov
xchg
call
ret
enter
mov
pop
and
mov
jl
int3
lock
repnz
movsl
enter
push
inc
xor
popa
xchg
push
dec
sarl
xor
fldz
daa
inc
cs
mov
movsb
fwait
sbb
addr16
or
lods
sbb
subb
mov
add
roll
jg
dec
xchg
repnz
jmp
push
test
mov
inc
into
daa
sbb
lock
leave
das
sub
popa
pop
push
inc
pop
cld
xor
push
adc
mov
cmp
faddl
jge
xor
xor
lods
sub
aad
xchg
gs
sub
inc
and
push
pop
data16
je
daa
shlb
repnz
push
bswap
lcall
in
adc
pop
aam
dec
adc
xlat
pop
mov
lea
xchg
add
pop
pusha
in
pop
push
fmuls
mov
scas
cwtl
dec
and
inc
mov
jg
xchg
dec
lcall
cmpsl
idiv
adc
loopne
pushf
dec
mov
rclb
push
xor
out
dec
jne
adc
ja
fnsave
mov
aaa
adc
inc
lcall
sbb
cmp
inc
mov
mov
stc
pop
jg
jle
out
and
xlat
inc
ss
mov
jge
xor
mov
cltd
lcall
adcl
adc
icebp
push
fldcw
inc
cld
in
fistl
pop
test
or
ss
xchg
xchg
je
faddl
pop
fisubrs
pop
js
mov
test
sub
repz
cwtl
sbb
and
add
add
orl
incl
cmp
jno
xchg
jecxz
sbb
or
jg
adc
shrb
sub
rcll
arpl
aaa
mov
clc
adc
jge
testl
mov
insl
dec
sbb
sbb
cli
jne
xlat
mov
jno
lahf
xchg
add
movsl
jmp
jns
movsl
notl
sub
ja
testl
jl
cmp
or
add
mov
dec
cmp
mov
xchg
cmp
pop
mov
jae
aaa
imul
pop
pop
in
smsw
jle
xor
sbb
cwtl
out
mov
out
jo
shlb
cmp
or
in
or
sub
mov
push
repz
out
sub
or
lds
push
inc
jb
gs
mov
dec
das
sub
mov
mov
imull
and
jecxz
js
add
xchg
xchg
add
push
cmp
in
inc
dec
adc
push
gs
movsb
repz
stos
dec
push
test
xor
aaa
cmp
dec
mov
nop
push
daa
fcmovbe
hlt
mov
push
pusha
jp
xor
xchg
jb
mov
pop
pusha
cmp
popa
dec
xor
lret
jmp
xchg
test
jp
push
adc
out
pop
or
inc
fnstcw
sbb
jnp
fcomps
shlb
pushf
xchg
stos
cwtl
adc
jge
sbb
dec
xor
rclb
out
push
test
or
dec
push
sarl
dec
dec
push
adc
and
repz
push
mov
mov
and
js
and
and
and
cmpsb
push
or
cmp
lret
je
je
shlb
or
lods
imul
imul
ljmp
mov
es
popf
jl
or
adc
lcall
aam
lds
shll
ret
clc
pusha
mov
cmp
jp
xor
pop
push
or
sahf
pop
mov
nop
fisubrs
xor
cmp
shll
scas
and
nop
sub
adc
xor
add
cmp
stc
jo
test
and
push
xor
pop
std
push
cld
sub
aad
loopne
mov
or
mov
add
mov
cmp
mov
lods
or
push
dec
adc
lcall
mov
adcb
dec
cmpsb
test
mov
stos
jge
lret
jg
shl
lock
clc
gs
xchg
inc
jl
mov
std
dec
into
or
and
mov
mov
daa
xor
sbb
enter
adc
div
push
add
fcoml
test
cmp
stos
jp
pop
cmp
popf
cmp
jl
jl
mov
inc
inc
pop
scas
jmp
gs
xchg
outsb
mov
out
in
inc
and
mov
test
mov
pop
xchg
fildl
lds
cmpsl
xchg
es
dec
aas
push
inc
xchg
test
aas
lods
arpl
cwtl
imul
or
divb
push
into
mov
mov
aam
add
adc
cmp
jp
hlt
dec
cltd
sti
push
add
add
loopne
ret
push
ja
das
mov
and
das
sbb
mov
mov
xorl
xchg
xchg
jno
pop
pusha
sbb
fidivrl
test
push
xor
dec
mov
dec
ja
jae
cmpsb
sbb
adc
cld
shlb
sbb
jmp
mov
mov
jle
sub
pop
iret
out
or
inc
push
rcll
int3
movsb
mov
inc
jnp
push
adc
pusha
leave
fcompl
dec
cmp
roll
mov
cmp
stos
cmp
movsl
inc
fsub
dec
push
test
cmpsb
out
div
lods
popa
stc
stos
mov
dec
int
inc
repz
mov
fimull
cmpsl
pop
jae
fisubrs
adc
inc
fstpl
nop
sahf
shrl
push
scas
test
sub
mov
xchg
lock
js
sbb
mov
adc
adc
xor
jne
jge
sub
fwait
mov
sbb
sub
stos
mov
sub
mov
js
in
cmp
mov
jle
mov
les
ljmp
out
inc
insl
ss
movsb
enter
and
mov
repz
add
adc
mov
fstpl
mov
pusha
pop
mov
ja
jle
inc
jge
jg
ret
jle
fisubrs
cwtl
mov
sub
das
int3
mov
mov
add
cmovs
scas
frstor
mov
mov
adc
in
call
icebp
pop
cmp
sub
mov
inc
xchg
xchg
or
add
sub
and
addr16
stos
xor
notl
mov
inc
scas
mov
into
pop
cmp
dec
insb
fs
bound
adc
subl
iret
mov
loop
sbb
addb
rdtsc
cmp
push
cmc
out
in
add
inc
cmpsb
out
xchg
xchg
push
mov
ret
and
lods
outsl
lret
sub
and
arpl
iret
call
inc
das
inc
repz
icebp
jge
push
out
mov
adc
cmp
pop
into
pushf
pop
test
inc
out
cmp
mov
mov
js
cld
dec
xchg
cmpsl
mov
cmp
push
ss
add
sub
or
dec
sbb
mov
mov
cmp
pop
sub
mov
hlt
les
sbb
pop
cmp
ficompl
fisubrl
imul
ret
cmpsl
cmpsl
jns
fdivl
dec
mov
jbe
int
pop
int3
pop
mov
jo
out
xchg
xor
into
sub
pop
cltd
jnp
push
add
jmp
dec
daa
inc
mov
add
mov
test
data16
movsl
pop
pop
pop
test
addl
psrlq
fs
cmp
mov
sbb
imul
push
mov
lods
into
push
cmpsl
pop
xor
sti
out
mov
jae
cmpl
mov
ljmp
sbb
jge
movsl
cmc
lret
enter
or
outsl
add
xchg
rolb
xlat
stc
out
pushf
inc
repz
aad
jmp
add
adc
cmp
mov
push
cmp
repz
lahf
movsl
sub
adc
inc
mov
inc
fwait
cmpb
and
enter
or
shlb
jnp
pop
xchg
push
push
xchg
out
xchg
dec
pop
add
jo
call
mov
outsb
lahf
jl
ljmp
call
cmp
adc
scas
add
or
lea
test
int3
mov
jnp
xchg
ss
cmpsb
mov
xchg
xchg
and
xchg
lret
das
decb
lods
mov
add
jge
imul
fdivrp
xchg
ja
das
mov
mov
in
lcall
pop
aad
call
lret
das
js
push
cmp
clc
mov
push
nop
dec
fsubrs
movsl
ret
cmp
pop
sbb
cmp
cmp
lds
mov
das
push
or
add
or
andl
ja
pop
hlt
pop
add
inc
jo
push
scas
jae
push
xor
popa
lea
enter
xchg
bound
add
adc
out
jns
subb
in
inc
push
bound
jo
push
std
lahf
push
push
push
ret
add
bound
push
and
ds
xchg
outsl
cmp
sub
xchg
push
inc
shlb
jle
cmp
adc
imul
inc
rclb
jp
addr16
out
fs
add
out
call
adc
push
inc
push
fdivrs
div
imul
xor
mov
scas
negl
out
or
and
cmp
and
lods
cs
sub
ret
lcall
lret
pop
sub
pop
xor
dec
mov
movsb
fmulp
jnp
pop
imul
scas
jmp
sub
dec
std
and
int
cli
in
push
push
out
pop
call
or
add
pop
pop
dec
add
jno
push
jle
jp
mov
jmp
mov
dec
mov
mov
lahf
lods
addr16
jl
xchg
push
out
insb
jbe
pusha
push
fadds
sahf
fs
movsl
pop
pop
or
cmp
push
and
sti
ret
mov
and
mov
sbb
ficoms
adc
mov
test
out
fcmove
test
pop
push
xchg
push
mov
popa
fnstenv
mov
popa
in
es
hlt
ljmp
mov
std
mov
fs
dec
clc
jb
lret
pop
inc
mov
outsb
sub
gs
fidivs
les
jle
inc
leave
stos
sub
pop
pop
mov
cmp
mov
xchg
js
mov
xchg
sti
in
jmp
call
pusha
push
push
inc
adc
push
add
enter
ja
push
add
imull
lcall
jnp
arpl
in
push
dec
rcll
ss
dec
push
cmp
inc
popf
loopne
xchg
pop
mov
pop
jmp
loopne
ret
add
and
adc
bnd
jns
fwait
movsb
rolb
add
mov
dec
jno
ret
sub
cmp
pop
out
inc
jae
sti
imul
jp
inc
out
mov
popa
cmp
mov
js
inc
mov
test
jge
into
out
cwtl
aad
aaa
lods
gs
pushf
sbb
rcr
daa
incl
mov
ljmp
into
inc
sbb
add
xchg
ljmp
push
cmpsb
sahf
clc
icebp
mov
xchg
shrb
xchg
mov
mov
and
sahf
mov
daa
sti
pushw
fcmovnu
inc
divb
push
lcall
das
out
mov
dec
loope
int
lods
dec
xchg
and
sti
dec
and
jbe
push
jg
mov
mov
rcrb
xchg
stc
imul
push
call
ljmp
push
out
lahf
loopne
movsb
test
test
cmp
inc
mov
xchg
dec
and
xor
xlat
mov
cmpsb
cwtl
and
jae
iret
div
mov
or
or
es
mov
sub
daa
inc
lret
or
fsubrs
or
mov
and
into
mov
inc
mov
ja
rcll
orb
fisttpl
cmp
and
pusha
cmpsb
mov
xor
mov
popa
sar
cld
addr16
test
mov
sahf
xchg
ret
gs
insl
dec
into
repnz
popl
xor
loope
mov
loop
or
mov
cwtl
cmpsb
rorl
cmc
test
inc
sub
inc
or
ret
mov
stos
iret
test
scas
xchg
xchg
and
repz
pop
cli
loopne
lret
in
lods
je
xchg
mov
sub
out
push
inc
rcrb
ljmp
cmp
xor
fdivl
bound
sbb
push
cmp
and
pop
xchg
pop
cmp
pop
push
pop
pop
inc
jbe
mov
enter
or
stos
int
mov
loop
cltd
pop
repnz
je
movsb
dec
jns
push
fldenv
movsb
in
aaa
mov
mov
les
or
jg
xchg
sbb
fisubrs
inc
nop
popa
mov
push
or
jns
xor
sbbb
loope
pop
test
mov
cmp
in
mov
pushf
imul
pop
mov
cmc
test
gs
cmpsl
mov
fs
mov
lahf
in
dec
loope
fcompl
addr16
mov
pop
mov
xor
repnz
jmp
call
lods
xchg
data16
dec
out
fimuls
xor
jb
ret
adcl
pop
icebp
xchg
cmp
mov
dec
pop
imul
dec
dec
stos
insb
pop
aad
xchg
mov
add
data16
push
adc
inc
mov
sbb
xchg
out
inc
xchg
bound
filds
and
mov
fnstcw
pop
lods
movsl
ja
add
jne
insb
js
sbb
hlt
sbb
cmp
lock
inc
mov
into
and
sub
cmp
mov
mov
rorb
arpl
pop
lahf
push
pop
pop
jo
fmull
jg
cmp
xor
aad
aaa
or
jns
dec
push
enter
cwtl
iret
add
lcall
cmp
inc
stos
add
xchg
jno
mov
mov
out
das
lock
jl
cmp
mov
sub
cmp
outsb
movsb
push
pop
repz
pop
inc
xchg
xor
insl
ja
jg
rcr
jl
adc
je
pop
imul
add
xor
popa
mov
cmp
bound
fstpt
loope
es
popa
xor
movsl
push
insl
rorl
inc
mov
out
cltd
pop
and
cmp
shr
adc
jp
rcrl
jo
call
stos
loopne
mov
rcll
xchg
unpcklps
fs
jbe
call
movsl
out
push
adc
xchg
sub
jl
lcall
mov
lock
push
or
mov
insl
mov
mov
mov
out
xchg
inc
cli
xor
dec
mov
pusha
fwait
xor
mov
adc
push
sbb
hlt
sbb
inc
rorb
notl
int
xchg
in
notb
dec
enter
jne
in
imul
sbb
loop
arpl
xorb
test
mov
sbbb
pop
inc
fstl
jecxz
adc
xchg
xorl
int3
in
jle
lock
aad
and
push
movsb
stos
testb
xchg
adc
test
in
je
sbb
xchg
repz
filds
sbb
dec
data16
inc
neg
xchg
and
push
and
lds
sub
cmp
imul
sbb
scas
ret
gs
cli
mov
in
push
in
xor
data16
pop
mov
dec
mov
inc
lods
lock
jne
mov
jne
cmpsl
dec
sbb
das
inc
sbb
push
icebp
sti
add
imul
jnp
mov
andb
xlat
mov
rclb
mov
mov
jmp
inc
push
mov
adc
mov
inc
lods
mov
cmp
sti
movl
jg
cli
call
adc
lea
fs
and
cmp
sub
push
or
out
mov
into
gs
sbb
sub
dec
xchg
shl
xor
jns
fadds
int3
adc
lock
pop
and
dec
cwtl
jp
pop
pop
fidivrs
pop
iret
subl
fmuls
jg
cmpsb
mov
cmp
pop
das
adc
js
cli
xchg
xor
pushf
shll
scas
iret
lret
or
sbb
cltd
mov
stc
aaa
pop
pop
or
sbb
insb
ficompl
cli
mov
movsl
and
lods
jecxz
clc
testb
movsl
js
pop
movsb
in
shl
add
ficomps
pop
cmc
loopne
xor
dec
add
insl
pop
loope
enter
jb
xchg
movsb
inc
xor
push
jb
cld
shrw
adc
xchg
push
outsb
push
into
adc
clc
daa
jle
dec
mov
lea
cmp
xlat
jmp
jnp
inc
popf
or
xchg
aaa
xlat
pop
js
js
mov
xchg
pop
aam
jl
leave
cs
xchg
dec
xorl
sub
or
sbb
movsb
icebp
mov
dec
out
int3
addr16
sbb
das
ja
mov
cli
sarl
loopne
jmp
mov
push
aaa
in
adc
mov
push
jnp
mov
xchg
cs
sti
jmp
pop
aaa
in
or
lahf
test
mov
inc
cmpsb
das
aam
shll
data16
arpl
cs
push
mov
lcall
and
outsl
and
lret
or
outsl
mov
hlt
jno
mov
push
dec
inc
mov
and
movsb
and
leave
dec
pop
sub
lods
xorl
xor
test
jae
inc
push
dec
scas
adc
loop
mov
jo
xor
inc
mov
fiadds
mov
int3
xor
test
xchg
je
cmp
pop
ljmp
cld
mul
sbb
fildl
push
xchg
xchg
mov
rcrl
out
push
xchg
popf
outsb
xlat
cld
mov
icebp
rcrb
and
shll
dec
push
lret
and
adc
cmpsb
sub
repz
jne
ljmp
mov
cmp
lods
mov
insb
es
mov
push
adc
sub
data16
or
cmp
das
cltd
or
repnz
lea
pop
aaa
cmpsb
xchg
repz
jb
add
cmpl
dec
repnz
frstor
pop
loope
inc
mov
and
jae
int
mov
gs
fldl
jmp
sbb
lock
insl
sub
out
fwait
pop
mov
and
rcll
shl
fdivr
movsb
pop
lds
pusha
jecxz
or
fstpt
push
and
das
sub
xor
outsl
xor
test
aam
jl
fcomps
xchg
jnp
pusha
cltd
sbb
inc
cwtl
mov
push
mov
mov
shrb
fnstsw
rorl
sub
mov
mov
xchg
push
outsb
or
loopne
ret
call
ficoms
rsqrtps
ds
adc
jge
rcrb
mov
mov
mov
imul
mov
or
or
jmp
les
add
sbb
and
push
bound
aad
shrb
int
mov
call
test
jge
add
es
adc
test
push
inc
into
scas
in
subb
and
adc
leave
iret
out
movsb
xlat
mov
lahf
inc
mov
idivl
mov
jae
cmp
sahf
rorl
push
mov
xorl
xchg
or
xchg
push
jb
sahf
stc
aas
push
ret
idivb
repnz
and
add
call
push
sbb
popf
jns
xchg
jne
mov
repnz
sub
push
in
gs
popf
add
pushf
pop
ret
adc
mov
adc
ljmp
jno
add
push
xchg
ds
push
out
clc
jbe
and
jae
sar
scas
shll
xor
fstpt
jo
fstl
loopne
hlt
enter
jge
outsl
push
pop
mov
pop
call
aad
mov
jbe
ficomps
dec
push
xor
stos
and
clc
push
repz
pushf
or
adc
cmpsb
lret
ljmp
std
push
scas
push
getsec
imul
lret
sti
popf
loope
lds
mov
lcall
jne
add
pop
mov
jns
adc
xchg
add
or
shlb
in
sub
aas
mov
mov
mov
out
test
jl
and
in
mov
mov
jae
dec
ret
ret
push
in
repz
out
lods
clc
push
cltd
dec
scas
cmp
pop
push
fiaddl
push
and
popf
out
fimuls
lock
add
mov
push
mov
stos
lock
push
nop
inc
adc
gs
jbe
out
sbb
cmpsl
inc
inc
cs
add
icebp
add
mov
sbb
sbb
xchg
xor
or
lret
cmp
mov
mov
jmp
rol
outsl
notl
out
jnp
out
out
jo
ds
sahf
inc
xchg
fistl
and
sbb
imul
add
out
sbb
jg
test
pop
sub
andl
fwait
sbb
pop
imull
shll
push
stos
fmuls
aaa
dec
dec
aas
addr16
dec
loopne
lahf
inc
mov
lds
jge
out
pop
jo
lea
shl
cmp
pop
ljmp
loope
dec
loopne
sub
ficoms
jb
andb
add
cmp
xchg
push
out
pop
adc
mov
mov
push
pusha
iret
test
xchg
stos
aam
out
pop
sarl
mov
mov
shr
imul
outsb
mov
sub
pop
mov
push
sub
cmpsl
push
or
in
jnp
xchg
or
mov
cmp
imul
xchg
mov
dec
jecxz
std
in
nop
shll
aaa
sub
dec
fimuls
dec
inc
je
mov
fsubrl
inc
mov
mov
jp
sbbl
cmp
jg
inc
xchg
enter
xlat
adc
scas
dec
mov
lea
push
wbinvd
fwait
mov
movsb
pop
mov
jle
rol
and
push
adc
loope
les
enter
pmuludq
lods
cltd
sbb
add
icebp
cmp
outsl
pop
push
inc
sbb
or
mov
call
dec
loope
pop
mov
aad
aad
xchg
pusha
cltd
cwtl
push
repnz
mov
outsb
ds
mov
cwtl
cli
cli
push
add
jno
pop
inc
js
call
cmpsb
xchg
or
data16
ja
xor
std
mov
aam
into
adc
pop
mov
push
cmpsb
call
jecxz
dec
cmp
imul
fs
loope
enter
and
rcrb
xor
adc
gs
adc
popa
jp
jbe
es
adc
gs
out
xchg
ss
fdivs
pop
mov
or
inc
jnp
pop
mov
cmp
sub
divb
xchg
inc
jmp
xchg
faddl
clc
iret
int
mov
out
jg
xchg
dec
pop
inc
test
xlat
ss
ja
rorl
lcall
push
hlt
lock
cwtl
mov
push
pop
mov
insl
push
sub
leave
and
adc
and
out
xchg
cmovnp
and
test
mov
sub
add
or
adc
out
and
aas
std
pusha
aas
adc
lret
lcall
push
in
jns
leave
icebp
push
cmp
or
mov
push
sbb
jle
mov
call
jge
lock
in
dec
pop
data16
push
pop
into
xchg
adc
xor
mov
jmp
outsl
inc
push
fistpl
jmp
xchg
pusha
xchg
inc
das
call
adc
mov
stc
push
xlat
daa
push
mov
fxch
jnp
cwtl
je
add
mov
push
mov
lahf
jns
jb
push
shll
test
roll
imul
mov
iret
ja
dec
sub
rorl
aas
scas
push
cmp
or
loope
loopne
xchg
lahf
mov
mov
and
lods
mov
std
lea
test
xor
incl
lds
jno
or
pusha
push
lock
ss
mov
imul
mov
ficoms
sub
stos
pop
outsb
sbb
loopne
add
sbbb
test
lret
adc
lds
out
leave
mov
sbb
loopne
jle
cwtl
mov
push
sub
and
xchg
push
xchg
loopne
cmp
lret
repnz
mov
test
dec
add
mov
xchg
lds
and
or
sahf
jae
sarl
lcall
sbb
jle
out
cmp
and
xchg
mov
pop
dec
add
orl
mov
int3
cmp
bound
push
lea
enter
and
mov
cmp
ret
cs
lret
mov
hlt
lahf
shlb
fs
mov
pop
inc
ds
fmulp
test
imul
adc
and
addr16
adc
and
add
xchg
stos
or
mov
test
inc
cmp
cltd
jb
mov
inc
and
xchg
arpl
sar
inc
repz
cwtl
bound
loope
pop
add
push
test
lods
xchg
sub
jecxz
ljmp
push
jb
jo
cmp
or
clc
sub
out
cmpsl
addr16
js
fistl
je
mov
cli
les
push
sbb
rorl
cmp
fnstsw
jmp
aas
imul
push
repz
das
loop
or
push
mov
in
out
cmpsl
gs
mov
push
cmp
pop
and
ret
std
inc
jp
movsl
sbb
jl
lret
or
inc
shll
sub
inc
cld
xorl
adc
scas
xorb
xchg
cmpsl
xor
jno
and
imull
sub
fsts
jns
push
stc
stc
lds
pusha
mov
loopne
mov
pop
rorb
frstor
cmp
xchg
push
decb
add
popf
popa
lcall
push
fidivrs
imulb
add
push
xlat
sbb
cmpsl
sub
ret
xchg
fnstsw
jge
pop
mov
and
mov
jge
cli
sbb
cmpsl
data16
movsl
pushf
add
adc
mov
loop
movsl
or
cld
test
pushf
fists
mov
outsb
inc
outsl
jo
adc
sbb
daa
iret
lret
in
mov
push
in
popf
les
sbb
xchg
pushf
cmp
cld
or
mov
sahf
or
aam
push
mov
in
int3
mov
mov
mov
sub
sbb
add
cmpsb
adc
clc
mov
xchg
ljmp
cmp
push
jno
push
xchg
push
fdivrs
dec
aaa
sub
jnp
push
int3
lret
cmp
popf
push
int
cwtl
cmp
sarb
xor
dec
iret
cltd
mov
push
mov
rclb
pop
mov
shlw
sub
push
test
inc
pop
push
jl
dec
les
cld
xchg
mov
pop
dec
pop
mov
xchg
sbb
sub
adc
pusha
adc
js
or
lahf
inc
mov
xchg
cli
addr16
scas
sbb
xchg
add
sarb
sbb
and
dec
stos
stos
jp
mov
mov
mov
inc
adc
xchg
hlt
cmp
pusha
test
push
shrb
mov
adc
outsl
sub
lret
mov
ja
loope
fsubr
push
push
push
push
loope
inc
or
xlat
ficomps
lcall
jae
lock
cwtl
ret
ret
add
sub
into
into
inc
adc
xchg
mov
sbb
cmp
test
jnp
inc
mov
pop
cmp
or
sbb
shrb
lods
lret
add
xchg
adc
sbb
cltd
mov
stos
imul
les
cmp
pop
jge
outsb
lea
or
dec
push
insb
loope
mov
lods
add
or
mov
shrl
fisttpl
mov
push
loopne
ljmp
push
xchg
or
insb
repz
lcall
mov
sbb
dec
and
in
mov
inc
pop
sub
rcrl
loope
clc
pop
insb
sbb
in
xcrypt-ctr
cmpsl
pop
mov
int3
pop
sub
mov
sbb
push
mov
adc
cmp
push
hlt
mov
add
fmulp
scas
push
xor
pop
mov
dec
mov
pushf
mov
add
jl
jno
sub
and
cmp
aaa
xchg
sbb
shrb
xor
sub
push
pop
lret
sbb
int3
test
leave
ds
das
out
fdivr
inc
dec
mov
xchg
ret
dec
popf
aaa
arpl
leave
pop
ficomps
push
pop
loopne
sbb
aas
pushl
in
imulb
cmc
scas
sti
mov
mov
inc
lea
push
les
xor
out
jne
addl
pop
sub
or
jbe
cmp
mov
cli
push
adc
mov
pushf
movsb
in
jns
test
orl
sub
iret
sahf
jns
lret
mov
add
jp
inc
lcall
adc
addb
push
dec
shl
in
mov
lods
inc
insl
and
sti
fistps
mov
ja
sahf
or
rcrl
js
lret
mov
inc
mov
push
mov
shll
rorl
fsubl
sub
sbb
lcall
inc
daa
unpcklps
sti
in
adc
and
or
push
shlb
repnz
add
xor
inc
lods
or
mov
test
add
insl
jge
ret
in
cmp
add
sbb
std
or
test
pop
add
xchg
add
sub
insl
rol
adc
stos
pop
mov
in
fisttpl
or
sbb
iret
bound
and
bound
xchg
mov
xchg
and
test
sbb
adcb
jno
loopne
aaa
outsl
dec
fsubl
cmp
fs
pop
mov
mov
push
inc
shll
std
outsb
outsl
inc
loope
shll
mov
adc
dec
out
es
jp
dec
jmp
ja
lret
push
jae
mov
inc
bnd
lock
inc
lret
in
rcl
pop
or
jae
jno
aaa
pop
cmp
addr16
jle
loopne
or
lret
cmp
out
xchg
iret
lock
ss
das
dec
test
loopne
jmp
sub
inc
jo
mov
inc
cs
or
in
into
pusha
rcl
lcall
add
testl
je
xor
mov
jl
pop
jnp
mov
ljmp
mov
jp
xchg
scas
int3
add
mov
in
pop
loop
test
cmp
or
jno
mov
adc
bound
sbb
icebp
cmp
inc
or
pushf
notb
pop
and
in
push
incl
add
flds
add
jmp
mov
mov
jl
cmp
push
testb
scas
dec
movsl
jmp
std
addr16
js
pop
into
cli
clc
test
pop
pop
das
rol
or
add
and
jno
jns
cmpsb
adc
jo
stc
xor
fisubrl
stos
mov
sub
mov
popa
idivb
xchg
rol
sti
call
in
cmp
mov
bnd
fstpt
fisttpll
mov
mov
ds
pop
ss
xor
jb
jno
jle
cltd
mov
push
std
and
clc
add
xchg
jmp
mov
mov
and
fisubs
cmpl
push
jno
insb
xor
and
hlt
ss
jbe
push
stc
push
setae
mov
cmpl
outsl
adc
push
dec
call
xchg
mov
xor
insl
faddp
dec
add
call
popl
in
mov
add
jb
cmpsl
xor
sub
sti
outsl
mov
out
lcall
jge
call
and
jo
mov
jle
mov
dec
jnp
es
mov
push
iret
ret
add
outsb
ss
inc
int
adc
mov
cmpsl
mov
jle
stc
sahf
mov
xor
clc
xchg
outsl
xchg
adc
adc
push
or
aad
shll
out
mov
data16
repnz
dec
sbb
cli
pop
inc
cmpsl
jb
cwtl
cltd
sub
ret
pop
mov
xlat
xchg
pop
aaa
in
in
add
xchg
mov
bts
cmc
mov
into
push
aam
lods
pop
mov
adc
outsl
lahf
dec
fcomps
mov
aaa
push
paddb
cmp
or
xor
adc
movsb
cmpsl
jne
outsb
into
xchg
push
or
push
jg
movsb
xchg
pop
shll
jle
sub
inc
clc
pop
icebp
fsubs
sbb
xlat
mov
sbb
xchg
mov
mov
ljmp
xchg
aaa
sbb
aam
jno
lods
sbb
xchg
fldt
arpl
loop
in
xchg
mov
jmp
mov
mov
les
scas
fcoml
cmpsb
ja
lds
dec
ret
sub
cmp
jmp
jns
test
popf
xor
mov
loopne
lahf
ja
sbb
sarl
mov
jno
cmpsl
fwait
imul
in
es
add
xor
push
mov
stos
mov
pop
int3
popa
fiadds
das
jo
sub
faddl
sbb
push
mov
push
out
pop
outsb
dec
rcr
popa
fnsave
jle
and
mov
mov
arpl
test
imul
fwait
xchg
addr16
mov
add
push
jbe
sub
and
xchg
xchg
and
ficoms
pop
out
cmpsb
inc
repnz
shl
jns
lds
xchg
test
lds
fisttpl
icebp
fildll
ficomps
ret
dec
xchg
xor
cmpsb
stc
cmp
lcall
mov
mov
test
pop
sub
cmpsl
mov
xor
mov
or
push
pop
mov
iret
cmpb
sbb
jg
mov
fsubr
push
xchg
pop
push
pop
loopne
pushf
in
mov
outsb
cmp
nop
xor
sti
out
rorb
or
push
sahf
jae
jae
and
mov
cmp
inc
pushf
icebp
lahf
xlat
scas
sbb
inc
repz
int
jmp
sahf
cmc
int
dec
mov
fucom
sub
in
pop
cmp
inc
rorl
ljmp
mov
dec
orl
mov
jecxz
dec
in
xchg
test
or
xorb
movsl
cmpb
jae
stc
cmc
pop
test
out
jmp
lea
cmp
std
xlat
out
push
dec
xlat
dec
out
imul
and
adcl
test
imul
shl
imul
xor
lock
or
add
hlt
mov
pushf
jge
in
push
mov
les
xchg
cltd
push
mov
shll
lahf
test
add
outsl
mov
gs
sbb
mov
xchg
push
fs
add
fcompl
aam
jl
cmp
in
xor
scas
lock
daa
arpl
mov
pop
cmp
into
inc
outsb
js
push
aad
mov
sar
xchg
add
push
sbb
xor
lahf
jp
sbb
inc
sbb
stc
test
mov
fstp
pop
pop
mov
jmp
outsl
rol
lcall
mov
loopne
inc
sub
sbb
les
mov
shlb
push
mov
adc
call
test
cmpl
ficompl
add
arpl
xchg
movsl
ret
xchg
iret
je
stos
jne
lret
jns
popf
scas
mov
mov
jecxz
cmpsl
pop
ret
dec
pop
lea
lcall
mov
jae
adc
sub
jp
daa
xor
jae
insl
es
popa
push
inc
loope
insb
jge
es
fidivs
fldt
mov
pop
and
std
xchg
das
and
xchg
fs
lods
mov
push
outsb
jmp
lods
pop
pushf
loop
and
add
ss
sbb
jl
ds
cmpsl
pop
decb
lret
mov
insl
sub
xchg
mov
adc
and
stos
mov
daa
lds
inc
inc
dec
mov
pop
test
movsw
outsl
push
mov
sub
out
jne
xor
lret
add
pop
in
jbe,pn
ja
jge
out
andb
js
mov
fwait
mov
mov
pop
or
enter
in
xchg
xor
dec
jmp
inc
aam
sbb
and
sbb
sbb
stos
shr
mov
inc
bnd
notb
push
xor
dec
sub
sti
mov
fists
sub
jmp
dec
hlt
cmp
int3
sbb
xor
mov
jle
sub
js
inc
dec
stos
mov
adc
mov
addr16
adc
fmuls
stos
mov
fidivs
mov
sbb
add
mov
mov
add
and
shl
shrb
xor
add
sbb
pop
dec
mov
sub
pop
inc
sub
into
cltd
sbb
add
fst
rolb
sub
sbb
inc
cmp
mov
jno
cmp
rcl
bound
fs
test
in
add
imul
push
lds
and
add
dec
pushf
push
cmpsb
fldenv
and
loope
mov
jne
lods
ficomps
hlt
push
sbb
movl
push
fwait
or
insl
sarl
stc
xor
out
cld
jecxz
sahf
xchg
out
jns
aad
jg
adc
xchg
cwtl
jnp
pop
inc
dec
orl
stos
sbb
out
std
lcall
lret
addl
jg
pusha
je
jbe
adc
aaa
bound
cwtl
inc
and
and
in
aam
mov
or
mov
mov
imulb
xchg
mov
lahf
shlb
shl
aaa
pushf
les
sti
mov
push
mov
in
das
cmpsb
sarl
ljmp
push
icebp
cmp
mov
xchg
sbb
cmp
jecxz
dec
mov
lock
adc
nop
pop
nop
jmp
repz
cli
mov
pop
cli
and
data16
add
imul
shl
push
xchg
and
pushf
adc
lcall
aaa
jbe
xor
repnz
add
jle
inc
daa
lods
outsw
aad
fnstenv
cli
std
loopne
addl
add
in
andl
dec
add
les
in
imul
sub
outsb
ja
adc
test
sbb
and
jmp
xrelease
or
fdivr
dec
inc
int3
and
mov
cmp
sub
jecxz
add
mov
mov
adc
gs
adc
push
cmpl
inc
dec
in
lds
sarl
divl
dec
or
mov
inc
pop
dec
mov
imul
lods
cmp
sbb
pop
pop
push
outsl
push
mulb
dec
sahf
push
adc
adc
arpl
cmc
fwait
adc
orps
je
push
mov
adc
push
push
mov
sub
cs
out
or
stc
jecxz
inc
int3
pop
push
sub
les
xlat
jge
push
test
ds
xchg
jle
mov
mov
xlat
les
loope
or
mov
sbb
lahf
jbe
test
outsl
sub
cltd
add
cld
insl
xchg
sti
out
cs
dec
add
xchg
inc
movsl
cmpsb
xchg
cmpsb
xor
push
pusha
in
aad
lahf
push
out
and
pop
pop
xchg
or
jae
add
in
or
aam
in
jl
stc
mov
lods
sbbb
scas
inc
in
lds
add
pop
loopne
add
lock
ja
addr16
xchg
cltd
fimuls
add
pop
addr16
std
cli
and
xchg
xor
dec
lahf
aaa
aam
xchg
lds
or
out
addl
fiadds
gs
jp
push
es
test
scas
nop
jae
je
fistpll
or
lods
mov
fcomps
mov
call
insb
into
mov
push
xchg
iret
fisttpll
cmp
xlat
jne
sub
and
stc
fdivrs
cmpsb
outsl
sub
out
push
in
cs
loop
cmp
adc
xor
or
lret
fiadds
addr16
adc
pop
ret
stc
mov
or
push
jl
popa
sti
mov
fsubl
out
push
lods
orb
sahf
push
test
lds
or
pop
jl
pop
push
xchg
dec
mov
xor
fs
inc
ds
test
dec
xchg
sub
cmp
fisubrs
jle
imul
clc
mov
cmp
sti
mov
mov
jb
and
push
or
insb
xchg
or
sub
push
xchg
inc
lea
test
test
stos
xorl
cmp
jno
faddl
shll
shll
xchg
aaa
xchg
mov
ds
cmp
add
mov
mov
pop
into
adc
jb
adc
jbe
add
sbb
pushf
dec
cmc
push
dec
add
cmp
xchg
es
mov
mov
and
or
stos
jmp
mov
in
xor
int3
test
ret
fsubs
insl
stc
ss
jnp
fcoml
xor
cmp
or
or
inc
or
notb
test
je
inc
pop
dec
dec
add
subb
or
cmp
stos
aaa
jecxz
dec
aaa
pusha
add
mov
xchg
dec
sub
enter
pop
cli
add
jp
out
lock
int3
mov
pop
xchg
bound
mov
out
pop
call
lods
insl
cs
test
call
mov
cmp
push
lret
data16
cwtl
sub
pop
les
sub
fisubrs
movsl
mov
addb
out
stos
cmp
aad
aam
dec
pop
nop
push
cmp
sbbl
fwait
xchg
adc
jg
test
cmp
cltd
scas
div
and
inc
push
in
stos
xchg
push
adc
pop
pop
mov
je
fwait
fdivrl
loop
fucomp
out
push
iret
mov
stc
inc
mov
adc
sub
push
lea
jmp
sub
xchg
jns
pop
dec
out
mov
int
push
ljmp
mov
es
jnp
adc
dec
push
dec
dec
cltd
xlat
xchg
sbb
repnz
sbb
push
ficompl
mov
addr16
ljmp
pop
lods
iret
popf
ds
out
push
mov
int3
sub
test
push
stos
lret
arpl
cmp
xchg
movsl
jp
sbb
fisttpl
mov
and
sahf
stos
mov
rorl
xchg
jmp
pop
ds
iret
cmpsl
fsubrl
push
pop
mov
and
sub
ss
pop
rcr
cmc
and
addl
cwtl
inc
lret
es
repnz
add
int3
scas
sbb
scas
cwtl
fnstcw
mov
scas
dec
cmp
imul
outsl
lret
sub
lock
out
sbb
daa
mov
arpl
inc
or
dec
sub
aaa
lret
test
sub
test
or
roll
inc
inc
push
xor
pusha
ds
loopne
xchg
scas
ficoml
xor
in
jmp
pusha
stc
lods
loop
arpl
test
push
les
lea
cltd
cmc
inc
add
lods
mov
shrl
sahf
xorl
or
repnz
sbb
dec
and
dec
jne
out
stos
mov
pusha
adc
lahf
mov
xor
sub
mov
js
out
pop
out
aaa
test
jnp
sub
sahf
aaa
les
inc
cwtl
icebp
or
xchg
pop
in
call
cmpb
push
loopne
sub
rclb
push
jo
mov
sbb
rolb
insl
mov
cmp
dec
fists
je
and
daa
add
insl
pop
lcall
xchg
stc
inc
push
lods
popa
imul
inc
lret
movsb
frstor
dec
icebp
loop
mov
stos
mov
pusha
inc
or
mov
push
jae
sarl
ds
sub
js
lret
push
js
lea
hlt
out
pop
jle
shrl
mov
hlt
or
jecxz
mov
jnp
jo
add
call
rep
jp
clc
test
add
sub
std
dec
lea
mov
stos
or
mov
mov
lods
jmp
cmc
setge
fidivrs
mov
ja
ljmp
add
popf
sbbl
ja
xchg
sub
lock
ficoms
xor
push
lds
xchg
std
ret
xchg
dec
pop
adc
aam
pusha
jns
dec
cld
inc
ss
test
push
div
jle
mov
insl
inc
cmp
add
or
nop
pop
push
jae
jmp
fwait
lea
ljmp
rcrl
lock
or
cmpsb
add
popa
outsb
leave
rcl
mov
cld
clc
pop
insl
repz
dec
sub
dec
ds
test
fcmovnu
mov
repnz
sahf
xchg
dec
pop
mov
push
and
xchg
push
jno
mov
sub
icebp
jg
xchg
in
shll
or
mov
add
mov
fcmovbe
fidivs
test
imul
scas
xchg
sarb
int3
xor
and
sbb
scas
mov
stos
ja
dec
sub
inc
pop
loop
cmp
lods
cmc
pushl
mov
mov
or
adc
jg
adc
push
jnp
imul
nop
jo
push
jb
ja
in
xlat
stos
imul
mulb
lret
inc
cltd
adc
dec
test
push
adcb
mov
mov
lods
push
popf
pop
xchg
sbbl
notb
jge
jg
inc
aas
inc
ja
xor
stos
mov
push
cltd
scas
inc
cwtl
je
aas
dec
xchg
in
inc
lds
mov
mov
arpl
mov
leave
mov
movsb
js
rolb
add
mov
sbb
sbb
hlt
fcmovb
hlt
into
push
mov
sub
and
loope
inc
jl
call
mov
or
daa
nop
dec
out
fsts
push
jne
mov
je
clc
adc
lods
sbb
fldcw
xchg
and
arpl
aas
add
jl
movsl
and
xchg
les
jge
xchg
dec
xchg
fwait
pop
push
out
out
aam
dec
ss
push
negl
les
dec
pushf
test
arpl
jb
mov
and
xchg
push
add
mov
push
outsb
loopne
mov
aad
shll
lret
sbb
inc
call
pop
fstl
test
xchg
scas
push
mov
mov
mov
popa
lock
imul
mov
or
or
test
pusha
sub
jmp
and
into
jmp
mov
and
fnstcw
push
popa
sbb
add
push
fsubrs
mov
jae
cs
addr16
mov
imul
xlat
pop
inc
cwtl
ljmp
and
and
push
sub
sbb
loope
lret
push
daa
divb
jo
mov
push
shlb
popf
orb
add
and
in
cmpsl
scas
hlt
jle
sub
das
loope
xlat
das
sbb
lods
mov
mov
dec
pop
lea
sbb
push
dec
addr16
bound
cmpsb
icebp
insl
cmp
aam
push
xchg
sbb
mov
leave
pop
test
lahf
jmp
imul
mov
repz
mov
push
adc
mov
lock
or
jge
push
mov
pop
adc
popf
fwait
jl
outsl
test
and
movsl
fidivl
cmp
inc
fcomp
ret
jno
jg
shlb
or
xor
push
in
push
mov
fwait
jno
stc
fdivrl
xlat
jmp
out
inc
xchg
sub
pusha
stos
mov
inc
xchg
mov
fadd
jbe
fsubrs
aad
add
lret
or
out
aad
mov
roll
dec
lcall
das
jno
shlb
fstpl
cs
cmp
cmp
int
movl
dec
inc
sub
xchg
outsb
int3
xchg
aam
pop
adc
jg
or
jb
sbb
aam
out
adc
lds
pop
movsb
adcl
pusha
sahf
mov
nop
mov
inc
pop
mov
mov
push
aam
shll
ret
cld
cmp
lods
mov
dec
dec
lods
iret
mov
fidivs
pop
cmp
jae
bound
popa
xchg
jmp
int
lret
adc
add
sti
jge
test
icebp
jns
cmp
int3
pop
movb
rclb
mov
pop
lret
les
dec
in
loope
adc
repz
add
cld
jne
mov
ja
hlt
mov
nop
sahf
js
add
xchg
stc
mov
push
dec
shlb
in
xchg
out
inc
std
repnz
push
rcr
xlat
pusha
cmp
loope
repz
test
adc
jbe
cld
mov
mov
sub
in
jae
mov
push
out
insl
jp
movsl
xlat
jle
nop
mov
pusha
fistpll
jno
push
push
xchg
inc
loope
lret
pop
sti
in
mov
inc
or
out
xchg
push
dec
sub
push
cmp
scas
loopne
ja
int
cmp
jno
push
pushf
ds
xor
mov
out
add
mov
incl
sar
mov
rol
push
or
in
js
in
fisttps
hlt
out
rcl
loope
inc
aaa
push
cmp
add
cmp
sbbb
mov
lahf
xlat
cs
js
sbb
int
xchg
xchg
jns
das
cwtl
xor
and
test
or
fxch
pop
pop
jp
sbb
xor
js
pushf
xchg
or
adc
enter
cwtl
pslld
sti
pop
sub
rcr
in
xor
fldcw
jns
xchg
and
push
sbb
mov
add
jae
xor
not
sbb
sbb
neg
fs
enter
adc
mov
lods
pop
lahf
shlb
lds
xchg
incb
mov
mov
movsb
js
mov
jl
daa
push
das
push
mov
gs
mov
loopne
bound
imul
push
leave
xchg
cmp
push
call
cmpl
push
int3
pusha
repz
jne
and
test
outsl
clc
leave
jmp
iret
inc
mov
movsl
cltd
loop
xchg
pop
push
rclb
xchg
dec
int
shrl
clc
push
dec
add
adc
hlt
fstpl
into
mov
mov
mov
push
out
dec
xchg
daa
mov
and
pop
gs
popa
ja
cmp
push
movsb
xor
dec
movsb
shll
out
rcl
dec
dec
hlt
cmp
mov
add
rcll
pop
push
incl
shl
fdivrs
icebp
dec
jge
inc
divb
fldenv
sbb
mov
push
mov
ja
jge
addr16
aad
or
in
leave
mov
cmpl
mov
sbb
inc
lret
cmpsl
mov
sub
xchg
enter
push
ds
addr16
pop
test
sti
xchg
insb
jecxz
ror
clc
sbb
dec
cwtl
mov
arpl
xchg
xchg
stos
adc
sub
xor
hlt
cmp
xchg
fwait
imul
and
cld
xchg
sbb
je
loop
shrb
pop
mov
mov
jbe
mov
xor
ljmp
lea
ror
in
in
push
dec
mov
xor
jle
mov
addl
and
push
sbb
jmp
pop
dec
roll
inc
jne
hlt
lods
jbe
add
dec
mov
add
mov
hlt
in
movsl
fisubrs
or
pop
mov
imul
stc
jecxz
lea
pop
cmp
xchg
pop
sub
out
mov
repz
and
gs
pop
mov
sti
pop
insb
jno
rol
rorb
adc
xchg
andl
pop
test
xor
in
jecxz
pop
sub
je
xor
mov
mov
push
out
dec
aas
cmp
mov
or
fnstenv
xlat
idivl
rclb
fimuls
movsb
shll
jg
jle
jmp
mov
aas
and
pop
addb
mov
pop
addr16
mov
lret
push
xchg
cmc
ret
mov
push
ds
cmp
push
lods
popf
inc
pop
xor
mov
jno
add
fs
pop
mov
sub
adc
andl
cmpsb
inc
xor
push
push
push
dec
call
or
lods
pop
cmp
loop
inc
lret
mov
inc
das
or
into
sbb
mov
imul
dec
lods
push
cltd
repnz
jmp
ljmp
jo
iret
dec
and
cmpsb
cmp
pop
outsb
adc
testb
add
sbb
sbb
cli
xchg
out
or
mov
in
inc
add
add
push
shrl
sahf
into
dec
cld
je
cmp
and
xchg
in
push
pop
test
push
jae
mov
cmpsb
aaa
mov
lahf
insl
cmp
jge
out
or
mov
adc
std
or
cmc
inc
sub
roll
cmp
mull
es
out
imul
in
int
jns
mov
out
cmp
push
push
out
mov
mov
or
mov
jne
test
sub
sbb
add
int
push
jne
movsb
or
sub
mov
xchg
pop
push
sbb
sbb
test
test
faddp
dec
jmp
pop
sub
jnp
stos
mov
cmp
or
nop
pop
imull
xchg
stos
clc
mov
or
or
add
out
jbe
add
sub
jmp
jmp
dec
jne
sub
jns
xor
lcall
or
pop
mov
fcompl
popl
rorb
cwtl
mov
sbb
xor
or
movsl
ret
bound
aas
cmp
sbb
mov
and
xchg
jge
jne
adc
incl
dec
xchg
fwait
lock
sub
mov
sbb
out
and
dec
shrl
lds
mov
inc
incb
loop
mov
idivl
movsl
mov
cltd
aaa
repnz
add
pop
mov
push
fistl
das
and
insl
xchg
mov
xlat
stos
xlat
fwait
pushf
mov
dec
mov
aaa
sar
fisubs
mov
xchg
dec
outsb
mov
enter
mov
aam
xor
pop
xchg
insb
adc
xor
test
inc
xor
jno
ja
rcrl
lods
dec
or
mov
fiaddl
inc
aad
test
xchg
loopne
cwtl
pushf
and
jecxz
inc
inc
fistl
inc
xor
mov
jo
pop
mov
or
shrb
ljmp
fsubp
mov
and
call
ss
ss
cs
mov
jo
pushf
sbb
out
adc
dec
aad
pushf
in
andb
lods
pop
out
sarb
mov
adc
rcrl
icebp
sbb
dec
xor
fstps
dec
xchg
sub
hlt
std
js
ja
bnd
add
jle
enter
loopne
xchg
in
or
sbb
xchg
imull
xchg
mov
test
mov
mov
fwait
pusha
cmp
addb
lcall
sub
dec
gs
mov
or
push
jbe
mov
pop
add
int3
push
cmpb
shrb
fs
xorl
jmp
jecxz
dec
jmpw
leave
sub
insb
js
mov
sbb
adc
push
mov
stos
push
ss
out
sbb
adc
lea
sub
mov
push
cmp
outsb
pop
jl
test
add
pop
insb
mov
lcall
mov
dec
sbb
sub
mov
xlat
int
cmp
xchg
aas
inc
imul
out
mov
lahf
mov
sbb
add
addr16
sbb
push
push
push
jge
lcall
push
in
loope
jbe
dec
decb
sbbb
fldt
cmpsl
jae
mov
popf
adc
jne
popf
jne
jae
xchg
mov
pop
mov
test
clc
out
rcrl
aaa
dec
mov
sub
sub
inc
dec
jb
push
mov
pusha
and
popa
rol
adc
arpl
xor
test
xchg
sub
fucomp
add
add
mov
cmpsb
pop
push
arpl
repz
lock
stos
shrl
test
stos
jnp
mov
mov
mov
movsl
sub
dec
mov
inc
test
sarl
add
cmpsl
stos
jae
jecxz
test
fcom
insb
sahf
dec
inc
inc
sahf
test
push
enter
jo
in
dec
jp
outsl
test
push
mov
xor
out
and
fs
adc
mov
mov
pop
inc
pop
sbbl
lods
mov
or
cmp
lret
cli
ljmp
push
outsl
out
mov
inc
sub
jns
rclb
dec
and
or
pop
adc
mov
cwtl
mov
add
inc
mov
push
cwtl
xlat
or
mov
xchg
dec
gs
lods
xchg
sub
push
scas
out
jge
aaa
add
ljmp
mov
mov
enter
ficoms
sahf
dec
daa
sub
jmp
insl
leave
adc
fidivrs
out
in
xorb
mov
fs
shll
inc
adc
push
mov
orl
adc
int
ficoms
pop
aam
xlat
mov
sbb
lea
int3
in
cld
enter
in
orb
loopne
mov
xchg
stc
pop
pusha
sti
in
add
jg
dec
adc
fxch
pop
or
pop
mov
pop
xchg
sbb
jl
add
sti
decb
mov
test
pop
push
mov
xchg
inc
sbb
fldcw
jno
insl
pop
aam
lods
lea
call
addr16
bound
rol
and
add
scas
sbb
push
test
or
movsb
movsb
xchg
sti
ja
out
lss
xchg
movsb
jecxz
add
aad
jge
into
stos
mov
sahf
ds
sbb
loopne
push
dec
orl
dec
fcompl
add
sbbb
dec
cmp
push
test
dec
push
push
ds
mov
or
arpl
stos
mov
jl
cmp
in
icebp
add
rcll
out
mov
mov
xor
into
and
sub
cmp
rdmsr
orb
mov
in
jns
ror
fs
xchg
and
xorl
inc
dec
mov
imulb
and
push
or
ja
neg
lret
nop
insb
jmp
adc
mov
adc
pop
fdivr
or
jp
lret
mov
icebp
aas
fadds
mov
movsb
repnz
add
mov
pop
insb
jg
cmp
inc
in
les
lret
cwtl
jl
mov
inc
jae,pt
mov
shrb
dec
xchg
sub
mov
jecxz
sub
lock
or
push
or
adc
insb
jg
xor
jge
dec
or
sar
iret
test
or
hlt
mov
push
push
sub
pop
ljmp
aas
jnp
cmp
push
repnz
pusha
pusha
fs
inc
mov
mov
cmp
push
push
push
test
arpl
or
cmp
stc
add
popa
shrl
xchg
mov
xorl
pop
lret
pop
pop
sbb
lods
jb
cs
daa
out
push
out
cmp
inc
scas
sbb
cmpsl
lds
cmp
or
mov
sub
outsl
hlt
imul
leave
out
mov
and
cli
test
addr16
mov
push
xor
mov
mov
gs
clc
data16
push
inc
xchg
xchg
dec
cmpsb
mov
and
stc
lahf
lea
push
out
repz
dec
popf
adc
lds
dec
daa
and
inc
shll
inc
insb
maskmovq
negl
and
popa
in
jb
rcl
aam
enter
imul
shlb
loopne
push
movsb
filds
bound
lret
sarb
aaa
rcll
ds
cmp
insb
fstps
inc
mov
jo
shrb
lods
xchg
mov
fsubrs
jp
add
cli
mov
out
cmp
sahf
es
enter
aad
cmc
loopne
test
call
sbb
sub
repz
nop
aam
cli
repnz
sarl
shrl
push
dec
jmp
fs
popf
cwtl
add
or
mov
cmp
cmp
mov
or
jb
cmp
stos
ret
sbb
shrl
and
test
pop
sbb
fwait
lods
fsubr
push
mov
xor
add
out
aam
arpl
pop
xor
fidivrs
scas
dec
cld
xor
mov
in
sub
sub
das
sub
push
pop
movsl
xor
sub
add
mov
mov
push
leave
and
mov
stos
addr16
mov
repz
pop
fisttpll
mov
movsb
push
pop
sbb
std
stc
push
enter
xchg
pop
leave
aam
test
test
popf
ret
sub
push
iret
or
leave
inc
dec
xchg
ficompl
xchg
sub
sbb
or
adc
push
cs
dec
xchg
cmp
ljmp
clc
cmp
inc
repnz
stos
xchg
fnstsw
mov
add
sahf
mov
push
or
jl
test
jg
add
xchg
comiss
lahf
ret
mov
fsubrs
js
mov
jl
mov
or
lret
xor
jo
cmpsl
lds
inc
clc
xchg
ljmp
movsb
push
shrl
int3
insb
loopne
and
sti
mov
fisttpll
jno
fdivrs
cltd
out
lock
lods
int
sub
mov
sub
enter
push
push
sti
or
sbb
mov
sahf
adc
mov
into
repz
stos
mov
sbb
sbb
shl
lret
rorl
sbb
lods
sub
and
pusha
xchg
push
push
fmulp
jg
xor
add
fcomp
ret
pop
stos
test
push
push
sub
lret
es
cmpsl
in
xchg
push
es
push
inc
rcrl
dec
cmp
mov
gs
mov
and
scas
xchg
jnp
xor
pop
xchg
mov
fwait
dec
adc
xor
shr
pusha
push
fisttps
sbb
fisttpl
dec
inc
aas
jle
cmp
mov
pusha
push
clc
inc
leave
pop
int3
in
fisubrs
sub
jae
mov
add
das
ret
fsubrl
data16
mov
mov
adc
and
sarb
nop
lcall
incb
bound
mov
dec
pop
shll
sbb
mov
jg
lcall
lods
stos
mov
mov
popa
sub
sets
xchg
loopne
loop
into
inc
rolb
out
pop
mov
orb
mov
insl
movsb
hlt
scas
xor
aaa
inc
xchg
inc
mov
add
imul
xchg
mov
sarl
push
jge
xlat
inc
inc
push
out
cmp
push
int
in
dec
loopne
add
or
fcmovnb
xchg
xor
cmp
cmp
push
pop
dec
adc
adc
pop
cmp
add
imul
into
and
xor
mov
pop
lcall
sbb
push
dec
int3
mov
test
dec
adc
lret
stc
mov
cmc
pop
lret
cmc
stos
rcrl
ja
out
mov
movsb
es
ror
scas
push
jmp
loopne
lea
push
pop
dec
neg
daa
out
xchg
add
sbb
sbb
sub
int3
push
inc
into
aad
in
out
movsb
aad
adc
rcrl
subl
dec
std
mov
xchg
adcb
std
mov
xor
movsl
lods
xor
rorl
cli
loop
inc
jb
push
xor
adc
fucomi
or
int
jne
mov
ret
mov
mov
data16
pop
and
repz
adc
ja
adc
ret
or
sbb
aas
jo
pop
xor
mov
add
dec
loope
jp
sub
mov
mov
and
in
nop
inc
push
fnstsw
stos
lret
mov
or
fdivr
pop
addr16
in
dec
and
mov
cli
push
cmp
dec
mov
xchg
sub
inc
push
scas
call
cli
inc
jl
mov
cs
icebp
inc
imul
and
push
fmulp
test
std
mov
dec
cmp
sub
flds
adc
xchg
pop
jnp
pop
nop
fwait
leave
push
loope
sbb
mov
inc
imul
mov
daa
and
cmc
sbb
jae
call
push
cmp
lahf
imul
add
mov
sub
xlat
sub
xchg
pop
push
loopne
std
mov
dec
pop
push
inc
lods
xor
ja
cmp
repz
cmp
stc
imul
inc
test
push
mov
addb
push
test
in
jne
ret
ljmp
jno
inc
jg
push
sub
test
mov
sub
int3
jmp
lahf
test
addr16
mov
sbb
es
add
ljmp
dec
shl
sbb
sbb
clc
dec
xor
push
sub
std
fs
cmp
push
ret
shlb
loop
lret
mov
fs
idivl
mov
add
inc
cmc
mov
fstl
imul
sarl
push
into
lahf
push
xchg
rorb
cmpl
pop
les
mov
mov
test
in
inc
imul
pop
aad
shl
rolb
imul
add
and
inc
pop
loopne
and
jbe
dec
loopne
ja
iret
mov
dec
or
fsubrs
add
je
mov
cmp
inc
outsl
or
push
cltd
inc
mov
mov
ja
xor
add
aad
loopne
pushf
cwtl
lods
cli
xor
inc
nop
cltd
inc
int
and
jmp
jg
and
inc
adc
cli
dec
push
inc
subl
add
xor
mov
fcomps
dec
sbb
daa
pop
pop
inc
pop
xor
push
xor
loopne
repnz
jp
mov
nop
mov
test
mov
out
sub
pop
std
movsl
jge
inc
sbb
add
pop
inc
push
or
test
js
sub
inc
test
add
dec
imul
mov
xor
cs
int
pusha
mov
out
outsl
jmp
cwtl
inc
xor
mulb
fistl
fcoms
push
jmp
mov
push
mov
cmp
inc
xor
and
popa
into
sub
call
sub
jmp
int3
mov
xor
fisubs
lret
call
fs
cmp
mov
ja
int
jmp
ljmp
pop
jg
add
jns
xchg
dec
pop
in
mov
imul
int
mov
movsb
jmp
cs
pop
pop
add
sub
aad
and
orl
mov
sarb
push
pop
test
repnz
jmp
lahf
lcall
out
or
cmpsb
dec
adc
mov
lcall
mov
mov
shll
test
xchg
and
jne
out
xlat
jge
push
xchg
inc
sub
mov
out
xchg
jmp
jbe
or
in
add
or
xor
sbb
xchg
xor
add
mov
insb
and
ret
lods
jno
lahf
pop
xor
add
or
ffree
es
mov
add
lods
bound
rclb
mov
loopne
imul
mov
js
add
jle
scas
xchg
and
jge
mov
mov
adc
mov
fst
scas
lret
push
icebp
mulb
insl
add
out
lcall
lret
cmpsl
insb
dec
inc
arpl
sbb
std
scas
add
fsubrp
dec
mov
xor
mov
or
pop
mov
inc
push
dec
ss
xchg
stos
mov
mov
mov
iret
cmp
int
test
sarl
xchg
data16
add
nop
mov
sbb
xchg
adc
fimuls
xor
pop
sti
repz
or
loopne
or
inc
popa
and
push
dec
cs
fdivrs
cld
sub
es
fadds
insb
xor
mov
in
mov
aam
hlt
inc
add
push
xlat
pop
lods
mov
sbb
imul
dec
push
into
adc
xor
sti
test
nop
pop
jo
jb
int3
inc
cld
push
daa
lods
fimull
fldt
loop
aaa
test
xor
xchg
jecxz
xchg
cmp
xchg
sub
movsb
pop
dec
mov
popa
mov
scas
loope
orl
mov
sub
lds
push
add
jb
jmp
xchg
int
inc
xor
push
arpl
add
push
rolb
stos
xlat
sub
lea
leave
test
call
inc
mov
fisubrl
mov
out
add
movb
stc
int
pop
mov
or
mov
stos
and
ljmp
jns
mov
js
ret
jbe
ret
jo
je
and
mov
sbb
js
jo
daa
stos
scas
pop
jae
pop
pop
int3
scas
cmp
xchg
sbb
gs
rcr
mul
xchg
or
xor
jecxz
cmpsb
ljmp
notl
push
sbb
incb
sti
add
xor
bound
and
fistpl
pop
sti
mov
popf
ljmp
xchg
out
lock
lds
pop
adc
push
mov
mov
sub
pop
popa
sub
mov
les
sbb
shll
inc
je
sub
mov
cli
imul
fwait
mov
out
fwait
xchg
jb
jmp
xchg
in
pusha
dec
in
xlat
pop
xchg
lock
cmp
and
jp
pop
pusha
adc
aam
hlt
sbb
jmp
dec
dec
icebp
xchg
fld
or
mov
hlt
dec
ljmp
fsubr
repz
jb
out
fdivrs
sub
int
xor
mov
repz
call
cmpsl
add
js
ljmp
fwait
xchg
hlt
xor
jno
inc
cmp
xor
sbb
out
popf
sub
movsb
loope
sbb
rclb
into
or
mov
cmp
in
insb
div
dec
mov
sarl
push
cmp
sbb
and
stc
cltd
jmp
loopne
jecxz
pop
repz
aas
inc
pop
daa
ja
hlt
xor
pushf
scas
test
pop
rcr
fdiv
sub
repz
test
xchg
inc
ret
test
pop
pop
aam
jecxz
repz
pop
ret
fisubrs
call
ja
mov
sbb
xchg
cmc
das
cmp
dec
xchg
aad
jno
addr16
shrl
lcall
shrb
sar
jp
adcl
pop
jl
scas
adcb
cmp
add
or
andb
aam
inc
nop
push
mov
shl
or
lret
xor
mov
out
pop
hlt
mov
mov
pop
jl
mov
shll
call
popa
enter
call
insb
add
jbe
mov
mov
in
sbb
xor
mov
sub
daa
shrl
ja
inc
flds
das
lods
pop
in
cmpsb
sbb
roll
add
arpl
dec
movsb
mov
aaa
sbb
xor
add
call
lds
push
cmc
mov
aad
sub
jle
addl
push
mov
dec
scas
repnz
sub
xor
hlt
pop
mov
inc
ret
sub
jle
hlt
pop
mov
in
xor
inc
lcall
rclb
enter
int
or
pop
jo
mov
sahf
sbb
lret
inc
imul
inc
jl
mov
mov
mov
sahf
mov
lds
jne
aaa
outsl
pushf
das
inc
cmp
lock
jl
out
cmpsb
sbb
xchg
mov
or
xor
or
jbe
insl
ret
into
pop
int3
add
repnz
je
push
mov
test
mov
cmpsb
sti
ds
negl
loopne
or
push
add
lret
and
jl
lret
pop
sbb
xor
jns
mov
popf
stos
inc
adc
push
mov
iret
jg
add
inc
imul
call
pop
ror
mov
dec
and
fdivrs
or
stos
cli
pop
out
cli
mov
or
inc
out
outsl
push
sbb
ret
fiaddl
and
in
pop
inc
sbb
xor
or
xor
jg
js
jne
aad
jl
xchg
sub
adc
in
mov
jbe
stc
rclb
cmp
inc
lods
or
sub
push
shll
loop
mov
xchg
test
in
rolb
xchg
lret
xchg
add
cld
push
jge
shrl
xor
pop
dec
ja
stos
stos
negb
sub
mov
cmp
les
test
aas
fsubrs
jno
test
sub
addr16
mov
aad
push
pop
repnz
add
shll
daa
in
je
sbb
je
mov
in
sub
cs
cmp
fldcw
xor
jnp
jns
sbb
cmp
js
nop
fldt
or
shl
enter
je
out
aas
mov
and
fnstenv
fninit
sbbl
push
ljmp
push
dec
or
shl
ror
aad
ffree
js
pop
xchg
gs
arpl
xorl
in
bound
std
mov
pushf
mov
xchg
inc
cmp
repz
les
sbb
cmpsb
out
jecxz
loopne
hlt
or
add
cmpsb
scas
aas
mov
aas
cmc
dec
mov
cmp
push
nop
int3
sbb
mov
stos
pop
call
inc
mov
minps
scas
and
sar
ljmp
shl
mov
lea
adc
jp
pop
adc
sub
lock
cltd
imul
mov
or
ds
pop
mov
bound
stos
jmp
stos
pop
adc
mov
ja
pop
popa
fcomp
mov
xor
cwtl
and
fwait
mov
adc
inc
ss
mov
push
lods
adc
subl
leavew
clc
outsl
pop
int3
inc
push
ds
js
cmc
mov
lock
xor
and
jno
pop
loope
lds
mov
mulb
lcall
or
or
rcll
out
jbe
cmp
cli
mov
lds
pop
js
and
mov
inc
arpl
xor
mov
movsl
rcll
inc
leave
pop
or
mov
or
jecxz
push
leave
test
ffreep
sbb
insl
pushf
jno
jp
pushf
in
xchg
sahf
dec
pop
cmc
aaa
sub
mov
in
sub
test
test
rorb
stos
sub
lret
mov
cmpsl
in
pop
lret
jl
stos
je
scas
adc
rcrl
jno
mov
and
push
fisubrs
mov
inc
push
fcmove
pop
inc
fnop
jae
cld
rcrl
shrb
popa
mov
std
push
adc
out
lea
shl
decb
out
das
dec
imul
add
push
mov
and
sub
adc
fdivrp
push
cwtl
stc
xchg
push
adc
daa
repnz
sub
cwtl
pop
into
push
ret
adc
arpl
sti
pop
or
loopne
xchg
rolb
xchg
or
pop
mov
xchg
adc
repz
dec
loope
or
ja
movsb
sub
lcall
cwtl
fsub
imul
pop
mov
adc
fcmovbe
xor
repz
jns
jo
dec
or
mov
push
jmp
rcl
popf
xchg
dec
movnti
lods
add
cmp
insb
sub
sub
sarl
aad
cmpsw
in
xchg
loopne
push
xchg
movsl
inc
in
js
imul
outsb
cmpsl
xchg
andl
lods
xchg
sarl
in
pop
rorb
leave
cmp
frstor
mov
sarb
sub
xor
jo
pop
ret
arpl
cwtl
in
pop
sub
or
add
mov
movsl
cs
sbb
jnp
mov
shr
push
rcrb
roll
fildll
cmpsl
pop
pop
jno
push
xchg
push
jbe
lret
mov
lods
inc
dec
cmp
and
arpl
lcall
call
adc
lahf
sar
pop
dec
xor
lcall
inc
inc
mov
mov
loop
cmp
hlt
adc
mov
pop
sub
jnp
xor
ja
dec
xchg
mov
fildl
cmp
sbb
mov
mov
icebp
mov
cli
adc
xorb
pop
add
mov
add
xlat
fcomps
shrb
jne
bound
jbe
pop
into
fsincos
fstpt
or
push
dec
lret
jae
repnz
jbe
popf
inc
push
ret
jmp
fwait
and
xlat
and
movsb
ret
jmp
idivb
addb
loop
lds
bnd
inc
mov
cltd
pop
les
fcmovbe
mov
add
mov
jl
aad
and
ljmp
lcall
jmp
sbb
pop
jle
xchg
lret
test
aad
add
lret
pop
inc
push
sbb
mov
in
stc
fsubl
stos
pusha
hlt
and
push
mov
cli
push
xor
js
stc
idiv
insb
jae
or
test
push
lcall
adcb
lods
fdivs
fs
jecxz
xchg
mov
inc
lds
push
xor
or
test
mov
mov
iret
sub
jle
inc
lret
push
in
lods
pop
sub
cmc
sbb
sub
sub
pop
sbb
pop
cs
inc
push
out
sarl
inc
jmp
fbstp
adc
and
mov
sub
repnz
xchg
push
mov
push
mov
ret
pop
fs
icebp
fwait
jbe
inc
dec
mov
cmp
dec
hlt
cltd
dec
stos
push
jnp
imul
jb
inc
and
mov
push
mov
jbe
fsubrp
cmpsb
loopne
mov
loop
aad
int
xchg
mulb
fwait
mov
ss
jo
test
test
in
xchg
sbb
push
out
mov
stos
xchg
cmp
in
xchg
or
outsl
xlat
in
push
stos
xor
fistpl
or
ja
outsl
cmpsb
das
cmovle
fmuls
out
or
repz
pop
push
mov
pop
and
gs
ficompl
jecxz
fwait
pop
xchg
adc
cmp
and
jns
mov
lods
xor
adc
subb
sti
test
jge
sub
bound
mov
ror
out
fisubl
dec
hlt
ret
and
mov
or
sbb
rep
mov
inc
int
xchg
cmc
mov
fstps
fisttpl
jae
push
push
cmp
jle
dec
push
and
test
outsl
jns
sbb
rorl
js
sub
add
xchg
cmpsl
jl
or
ss
mov
dec
sbb
adc
push
jmp
out
pop
lock
xchg
cmp
add
insb
push
sahf
mov
fstps
sbb
xchg
cmp
mov
add
out
inc
or
sbb
push
xchg
rcrl
test
or
aad
xchg
push
inc
adc
out
cmp
push
mov
xchg
xchg
mov
sahf
push
mov
je
dec
sub
jnp
test
or
mov
pop
xor
pop
adc
loopne
sub
repz
mov
push
and
inc
stos
lret
add
cmp
xchg
bound
pop
sbb
fistps
sbb
out
jnp
xor
mov
rcrb
add
lcall
lret
rolb
int
jmp
inc
xchg
or
adc
xor
es
popa
outsl
jae
test
out
xor
push
xor
sub
pushf
or
cmp
in
daa
inc
inc
icebp
out
adc
iret
pop
sbb
notb
jge
sub
inc
xchg
mov
stos
push
sub
clc
jo
mov
push
or
fdivs
popf
pop
add
out
adc
jl
mov
lret
jbe
and
jecxz
jg
std
addr16
std
or
dec
mov
cmp
out
add
add
jp
fwait
cwtl
daa
shll
mov
push
out
jecxz
push
or
jae
enter
mov
test
lret
dec
sahf
mov
adc
fdivrl
pop
fldcw
clc
loop
test
lea
sbbl
enter
sbb
inc
fcomps
push
sbb
scas
xchg
and
cmp
je
ret
loop
aad
das
pop
jnp
dec
lock
imul
mov
xlat
jb
daa
mov
std
or
imul
sbb
cmp
rclb
jae
add
or
push
ret
xchg
mov
push
mov
int3
iret
stos
xor
adc
inc
lret
sbb
daa
leave
push
ja
insb
insl
sub
insb
imul
popf
xlat
xor
idiv
push
mov
dec
adc
sub
stc
test
mov
outsb
adc
int3
pop
push
pop
cmp
or
sbbl
push
pop
popf
mov
mov
xchg
add
push
int3
push
inc
cmp
and
sub
cmp
repz
pushw
push
xchg
rcr
bound
fsubrs
mov
pusha
or
fmul
jo
shrb
inc
mov
scas
push
push
gs
std
in
jbe
in
push
idivl
push
rcll
insb
and
jno
fisubrs
fisubrl
jg
jne
int3
mov
pop
aad
mov
fadd
and
sbb
les
jb
jae
outsl
out
stos
mov
in
es
mov
dec
cs
into
sub
cltd
movsl
mov
push
xor
inc
dec
sahf
xor
or
xor
bnd
inc
pop
cwtl
cmp
add
icebp
pop
insb
pushf
push
dec
dec
js
add
filds
xor
fwait
pop
hlt
jne
xchg
xor
jnp
pusha
sbb
or
adc
outsb
adc
andb
jno
push
xchg
push
inc
mov
inc
push
push
sub
jecxz
sub
repz
shlb
test
dec
in
add
scas
popf
push
fmuls
sbb
jp
push
xlat
mov
xor
dec
add
in
leave
jb
xor
data16
loop,pt
push
test
lods
sub
pop
dec
xchg
in
pop
fdivs
divb
add
fs
pop
add
sub
movsl
imul
mov
xchg
mov
mov
out
add
mov
cmp
cmp
fists
or
cmpsl
lods
add
fistpll
insb
mov
flds
dec
mov
xchg
xor
cmp
add
push
ret
es
stc
loopne
sahf
aam
outsb
push
inc
sbb
inc
inc
jb
push
in
movsb
lods
dec
dec
lods
sbb
xor
mov
jg
sbb
add
xchg
and
fnsave
andb
sub
clc
jl
pop
jmp
outsl
push
pop
test
ds
mov
pop
pop
inc
push
int3
testl
repnz
roll
or
inc
dec
inc
push
adc
mov
pop
push
xchg
cmp
scas
sub
add
sub
push
ror
int3
dec
outsl
or
lds
jbe
xor
sarb
out
fs
clc
cmc
insl
jno
mov
fdiv
subl
push
dec
sahf
sub
or
cli
adc
add
cmpsb
mov
push
aad
in
cli
jmp
or
mov
jb
ficompl
inc
sbb
fdivl
cltd
cli
push
int3
mov
xchg
out
jge
scas
decb
mov
cld
addb
mov
clc
cmc
xor
fistl
push
pushf
inc
cmp
arpl
push
xor
nop
push
pop
jmp
fxch
cmp
sub
push
mov
pop
stc
jg
mov
insb
das
or
jle
in
push
fndisi(8087
sbb
mov
bnd
enter
pop
movsb
cmpsb
pop
leave
ljmp
movsb
fidivrl
lea
test
sbb
and
lcall
mov
cld
ret
push
int
add
push
scas
pop
inc
cmc
jns
xchg
repnz
cmc
and
xor
ss
lret
incl
mov
addl
inc
les
out
mov
std
push
test
xchg
call
jmp
cli
nop
sub
adc
xor
cltd
movsb
add
fdivs
push
cs
out
xor
std
dec
pop
inc
xchg
sbb
cmp
in
insl
outsb
lret
sti
stos
xor
mov
and
and
mov
stc
jae
rcrl
ret
xlat
insl
pop
dec
push
imul
push
sub
mov
fmul
xor
mov
sarl
jbe
xchg
cli
cmp
push
testb
movsl
sub
stos
xchg
idivl
inc
mov
cmc
push
cli
sbb
fldl
nop
testl
iret
inc
dec
inc
add
dec
push
lods
cmp
xchg
adc
lods
mov
or
clc
or
dec
jp
movsb
sbb
pushf
adc
cmp
dec
lret
xor
ja
pop
jno
add
lret
sub
sahf
cs
call
pop
sub
mov
movsb
xchg
xchg
and
jnp
jmp
pusha
aad
aaa
lret
jecxz
pop
cmp
mov
mov
cwtl
cmc
mov
mov
jae
cs
jmp
leave
and
pusha
test
mov
inc
inc
mov
jp
int
jb
decb
aam
scas
push
push
enter
or
jbe
cli
int3
in
lret
aaa
faddp
push
add
mov
in
jns
inc
in
dec
jp
movsb
clc
push
mov
xor
mov
jne
push
data16
cmp
jle
in
test
cmp
jecxz
and
sub
bound
ret
cmp
xor
je,pn
cwtl
movsb
dec
das
lds
pop
and
loop
mov
pop
mov
in
jmp
adc
stos
jb
jmp
push
iret
xor
movb
outsb
sti
call
jg
cmp
mov
shl
cltd
add
stc
push
xor
adc
test
or
dec
and
clc
xchg
int
inc
cmp
mov
lcall
outsb
cmp
mov
addb
sbb
lret
fists
mov
inc
dec
xchg
lods
mov
mov
mov
inc
jge
lret
cmp
dec
aad
lods
sub
adc
mov
sbb
das
insb
mov
mov
sbb
mov
pop
xorb
andl
or
push
cmpsl
cmp
insl
insl
xchg
aad
jmp
dec
loopne
pop
mov
test
sbb
loop
test
fucomi
mov
into
in
and
mov
pop
add
int3
movsl
hlt
out
cwtl
jo
outsb
adcb
ss
dec
mov
mov
jo
lahf
insb
mov
repz
jl
jmp
ljmp
pusha
scas
ret
add
in
push
lcall
add
sbb
ret
hlt
test
dec
jp
add
xchg
add
addr16
rcrb
xor
movsb
mov
andb
ljmp
out
outsl
fildl
sbbl
in
dec
lock
loopne
outsl
mov
ret
test
fistpl
adc
leave
fmuls
fdivrs
ja
jnp
pop
scas
sub
pop
jns
pushf
dec
das
adcb
sti
daa
cmpsl
xchg
push
or
or
into
int
popl
xchg
andb
iret
leave
je
push
nop
or
mov
imul
dec
push
adc
fsubs
push
arpl
dec
pop
ror
xor
cld
shl
sub
xchg
jge
or
ljmp
pop
addr16
dec
in
test
mov
jbe
and
sub
ja
mov
jp
or
xchg
loope
or
cmc
es
cmpsl
ret
mov
dec
jnp
ljmp
dec
push
push
movl
jo
and
push
ss
es
aas
pop
add
pop
pop
notb
and
fs
dec
cld
inc
out
mov
fdivrp
std
cltd
insb
inc
jle
add
daa
adc
cltd
sbb
ficomps
divl
xchg
jmp
sub
inc
mov
in
xor
jne
adc
jnp
inc
mov
add
jae
push
in
adc
data16
cmp
loope
movsl
pusha
scas
mov
pop
or
dec
insl
mov
push
xchg
lods
int
pop
cmp
pop
sbb
inc
out
jle
mov
pop
mov
xchg
ss
ret
push
fdivrs
sub
int3
cmp
cmp
rorb
lds
add
or
shrb
dec
mov
pop
mov
adc
push
lret
adc
mov
xor
in
pop
loopne
xor
pusha
loope
test
je
or
es
push
mov
nop
lcall
enter
loope
insl
arpl
rcl
lods
ret
movsl
lock
in
je
fiadds
imul
pop
std
mov
pushf
js
arpl
jne
add
imul
mov
ljmp
fimuls
andb
roll
adc
nop
dec
or
mov
out
daa
frstor
sbb
cmp
out
ja
stos
fwait
int
fndisi(8087
adc
inc
scas
jns
add
adc
add
adc
test
add
sbb
push
nop
scas
jno
pop
or
clc
fisubrl
dec
repnz
mov
cwtl
cmp
sbb
dec
das
leave
daa
or
xor
inc
mov
push
inc
adc
popa
xchg
mov
sub
adc
jae
lahf
or
inc
adc
xchg
in
out
repz
jmp
dec
imul
xchg
lods
icebp
decl
add
gs
mov
inc
in
inc
mov
or
inc
mov
mov
pop
or
clc
loope
aaa
pop
vpshufd
in
mov
jno
lock
mov
mov
push
mov
or
inc
xor
mov
and
adc
int3
dec
or
cmp
adc
jmp
imul
loope
jp
jae
sub
mov
jnp
xor
int3
dec
adc
jecxz
push
movsb
gs
out
adc
lahf
push
lahf
fisubrl
xchg
loope
fistpll
mov
outsl
adc
fwait
pop
cwtl
pop
call
test
out
and
sahf
push
jecxz
pop
and
int
in
and
mov
cmp
repnz
dec
movsb
rcrb
call
cmp
popa
roll
sbb
add
dec
dec
cs
imul
cmpsl
dec
clc
pushf
into
icebp
es
or
les
ljmp
jnp
loop
bound
sbb
test
mov
xor
repz
sbbl
mov
mov
push
ficoml
inc
out
sbb
ret
imul
fcmovnbe
sbb
mov
rcrl
popf
xor
ret
outsb
cmpsl
adc
mov
in
fyl2xp1
mov
lock
aas
das
mov
dec
sub
addb
jp
dec
xor
dec
sbbl
and
cmp
pop
cmpsl
mov
ljmp
xchg
orb
lahf
aam
enter
lcall
adc
add
jge
out
pop
mov
push
int3
push
cmp
push
mov
inc
sti
int3
dec
or
in
push
loopne
hlt
inc
and
push
repz
jp
jecxz
mov
lods
adc
push
test
sbb
lret
int3
dec
adc
add
jo
test
xlat
aaa
xchg
jo
and
movsl
repz
in
sub
out
dec
outsl
fwait
xchg
pop
dec
insb
sbb
push
jne
es
sbb
cmp
pop
mov
mov
pop
sbb
mov
push
dec
fbstp
into
mov
dec
fwait
jne
fisubrl
or
dec
aam
push
popa
loop
cltd
bnd
int
stos
push
shll
pop
addr16
in
jb
or
xor
pusha
xor
sub
loopne
das
inc
inc
jmp
adc
push
jl
icebp
and
sbb
cmp
sub
add
push
mov
fcoms
out
mov
fstps
jo
push
inc
and
loope
mov
in
jns
out
out
out
dec
mov
cs
or
in
clc
xchg
push
pop
in
loope
sahf
fucom
xchg
leave
add
pop
add
xor
pop
xbegin
inc
mov
out
sti
xchg
loopne
sar
xchg
adc
push
pop
mulb
mov
and
lsl
in
push
cmp
loopne
inc
sub
clc
nop
pop
clc
sub
pop
xor
lret
mov
lahf
xlat
lret
fcmovnu
adc
cld
cmp
mov
and
sub
dec
xchg
sbb
cmp
insb
mov
cltd
lods
mov
in
psubd
adc
add
add
mov
rolb
sbb
cltd
xchg
movsb
dec
pop
int
rol
xor
fdivrs
cmp
in
mov
popa
lods
dec
inc
xlat
lret
insb
out
mov
mov
rcr
and
xchg
pop
test
pop
popf
pop
outsb
aad
dec
pop
add
shr
jb
and
hlt
or
addr16
shl
lcall
pop
bnd
xchg
fwait
mov
adc
ret
fisttpll
inc
jg
sub
cs
adcb
inc
sub
shll
bound
ljmp
push
and
push
push
imul
cmp
movb
adc
mov
stc
pop
test
and
rcll
sub
mov
sub
cmc
in
mov
push
ds
inc
rcrl
mov
mov
xor
xchg
and
push
and
cmp
stos
loopne
sti
xchg
xchg
jecxz
out
mov
fwait
and
mov
fimull
sbb
filds
xchg
rorl
lods
sahf
cmp
jb
lcall
sub
aad
xor
xlat
mov
jns
imul
in
es
cmp
pop
test
add
outsb
in
jmp
fistpll
mov
outsl
jg
je
negb
mov
dec
dec
clc
sarb
popl
pop
outsb
into
shlb
test
lea
cld
out
iret
ffreep
and
aaa
sbb
jp
xchg
cmp
aam
jnp
in
mov
lcall
scas
ja
adc
xlat
fdivrl
add
scas
jbe
mov
aad
test
or
sbb
dec
xor
clc
ja
and
insl
mov
movsl
jge
xchg
pop
iret
in
jno
movsl
sub
lcall
in
pop
push
jno
push
mov
adc
lods
push
lret
lret
add
dec
into
adc
push
lods
inc
push
or
cmp
add
pop
and
pop
push
mov
push
pop
adc
cld
aam
xor
into
pusha
nop
shr
orb
mov
pop
test
or
cltd
cmpl
pop
aas
stos
jecxz
inc
mov
out
or
mov
add
push
lahf
mov
decb
cmpl
in
test
mov
stc
sbb
je
sub
test
mov
addr16
xchg
in
xchg
iret
xchg
lret
insb
lds
inc
popf
dec
pop
nop
adc
cmc
out
sub
jge
loop
and
jne
jae
cmp
dec
fsubrp
ss
xchg
xchg
decb
lret
sti
fbstp
inc
sub
out
mov
mov
sti
das
mov
or
sar
push
ret
sub
mov
push
ss
iret
mov
pop
fcomi
repz
sbb
cmp
xor
fisttpl
mov
mov
fmul
or
cmp
jo
pop
pop
push
inc
mull
test
or
jp
mov
adc
push
data16
xor
aaa
outsb
or
mov
and
push
xlat
pop
bound
iret
aad
popf
gs
inc
pop
xor
adc
jbe
std
daa
mov
movsl
sti
add
sub
stos
adc
sti
aam
stos
mov
scas
sbb
roll
imul
jle
push
outsl
or
cli
f2xm1
subl
push
jecxz
adc
imulb
push
fildl
cmp
ss
xor
mov
inc
dec
xor
and
divps
sti
sbb
sbb
adc
xchg
sub
fnstcw
cmp
mov
jb
mov
mov
popf
xchg
lea
and
fcomp
xchg
jnp
movb
flds
adc
sub
adc
dec
and
mov
shll
enter
push
aam
hlt
sub
inc
adc
push
stos
and
jg
sub
xchg
ret
out
sti
adc
jns
fbld
sbb
xchg
fdivl
or
loope
and
cmp
jnp
xchg
test
fists
mov
add
insb
in
js
loopne
enter
shll
outsl
mov
cltd
ror
rclb
pop
pop
sahf
pusha
scas
xor
in
add
lds
loope
repnz
lock
xor
jl
xchg
inc
ficoml
das
and
lea
dec
mov
cltd
aas
lea
rol
cmc
sub
sbb
test
pop
lret
push
and
mov
mov
pop
dec
pop
fsubl
xor
push
push
jne
punpckldq
dec
je
adc
es
setl
repz
cmp
sub
hlt
adc
out
or
push
mov
nop
das
aam
pop
xchg
mov
adc
xchg
movsl
mov
les
test
pusha
fisubs
cwtl
add
cmp
cld
call
out
sub
addr16
int
insb
dec
inc
jmp
jge
inc
or
pop
xchg
lcall
pusha
test
push
loop
push
mov
rorl
std
bound
ficoms
or
fcmovnbe
mov
out
pop
mov
and
shl
ret
out
cmp
leave
movsb
test
cld
adc
sarl
aad
jae
loopne
cld
fnstsw
repnz
push
lcall
arpl
xor
pop
shrb
xorb
mov
pusha
mov
cmpsl
jg
sbb
addb
lahf
pop
andb
jbe
test
and
pop
lcallw
pop
or
mov
insl
into
add
sub
sub
test
nop
daa
cmp
cmp
dec
outsl
dec
cld
push
cmp
adc
in
push
lods
mov
hlt
cmp
jle
xchg
push
dec
loop
aam
adc
insl
lcall
dec
cmp
aaa
add
mov
ljmp
xchg
pop
in
cmp
lods
cmp
cmp
lock
mov
in
es
pop
mov
test
add
roll
push
cmp
mov
fcoml
aam
push
add
pop
data16
lret
or
sbb
cmp
mov
xlat
mov
lods
mov
call
cmp
int
or
ret
repnz
xor
leave
sub
arpl
push
add
cmpsb
xchg
testb
lds
dec
add
cli
mov
xchg
out
ljmp
cmp
jle
hlt
and
iret
jecxz
inc
and
adc
fcomps
jb
sub
inc
dec
cmc
cwtl
in
insb
lret
lods
or
test
or
repnz
adc
or
cmp
popf
repnz
imul
je
and
dec
andl
test
or
mov
data16
jns
hlt
ds
jno
stos
pop
mov
in
or
pop
dec
push
lahf
mov
cli
sti
or
xchg
pop
aad
adc
int3
inc
xorl
sbbl
mov
in
mov
jmp
cmp
mov
mov
sbb
adcb
arpl
jmp
or
icebp
std
repnz
sub
pop
ret
in
push
insl
inc
inc
xchg
mov
sahf
shr
or
or
pop
ljmp
fs
stos
repnz
add
lods
jmp
xchg
insb
push
out
fmuls
in
arpl
xchg
orb
loop
mov
pop
mov
ss
dec
pop
add
mov
mov
cmp
and
insl
out
repnz
fs
mov
clc
or
enter
das
or
mov
jecxz
jbe
or
mov
dec
sbb
pop
mov
mov
dec
arpl
mov
ds
fwait
jle
cmpsl
xorl
mov
jmp
push
xchg
push
dec
mov
mov
test
inc
rcll
es
aas
xor
jne
mov
in
repnz
add
mov
inc
out
push
sarb
push
pop
jge
xchg
cmp
mov
sti
xchg
xchg
cmp
cld
lret
dec
dec
mov
fldpi
popa
dec
xchg
jnp
jae
mov
les
mov
jg
in
jecxz
and
sbb
push
loope
jno
mov
mov
nop
xchg
rorb
test
mov
or
dec
int3
shlb
xlat
lahf
mov
add
inc
aas
sub
push
push
cs
ror
imul
rcl
xor
push
xor
in
ja,pt
jno
es
test
fnstsw
add
mov
mov
movsl
sbb
sbb
pop
mov
lahf
jl
icebp
sbb
divb
mov
xor
mov
je
test
add
das
xchg
jo
mov
stos
out
jne
adc
addr16
jp
mov
dec
xor
mov
je
push
push
jmp
push
subb
stos
cmc
push
mov
ret
clc
popl
inc
sbb
xchg
jg
mov
insl
cmpsl
jmp
push
gs
movlps
sbb
rcll
mov
push
pushl
adc
movsl
jns
idiv
cmp
mov
xchg
jnp
xor
sbb
aad
mov
adc
push
mov
inc
or
enter
cmpl
lret
mov
pop
lods
sbb
jae
mov
xor
lahf
jb
out
adc
test
faddl
adc
mov
dec
sub
mov
in
sub
aam
ds
in
mov
or
rcr
mov
jno
into
pop
in
cmc
or
push
mov
push
mov
and
sub
dec
pop
dec
test
inc
dec
sub
inc
insb
icebp
mov
sti
xchg
or
ret
jno
add
popa
push
xchg
in
mov
aas
test
rolb
mov
andb
mov
lcall
xchg
test
push
je
sbb
repnz
mov
jne
popa
dec
fidivrl
popa
jns
rorl
add
dec
in
leave
popa
jmp
xor
aad
mov
fsub
cli
adc
and
mov
ret
or
cs
mov
dec
add
adc
ss
adcb
adc
sbb
add
push
pop
sbb
out
mov
or
daa
dec
xchg
dec
xchg
cmp
arpl
bound
adc
pop
inc
jae
int3
int3
out
scas
mov
lahf
outsb
insl
out
push
mov
mov
cli
push
test
add
and
add
mov
cmp
mov
xor
ds
add
ds
stos
ljmp
sub
addr16
add
jl
aas
cs
jbe
cmp
fwait
in
add
insl
jg
leave
jb
lahf
sub
inc
xchg
lret
sub
outsl
mov
and
ret
xchg
xchg
push
push
jle
push
movsb
adc
fbld
add
xchg
arpl
aaa
sub
lret
xchg
shrb
pop
imul
mov
add
int
dec
fdivl
mov
hlt
adc
jnp
aas
ret
jae
or
adc
sbb
push
out
repnz
fbld
cmp
stc
je
fidivrl
jno
rcr
aam
push
pop
test
add
dec
jb
xorb
mov
imul
or
ljmp
push
inc
imul
dec
pop
cs
xchg
mov
push
cmp
shrb
fildll
pop
pop
lea
arpl
fwait
in
pop
mov
out
xchg
lret
inc
cmp
bound
outsb
sahf
lcall
das
inc
push
cli
sub
sbb
int
jb
aas
imul
mov
sub
cmp
div
ja
scas
sbb
arpl
adc
negl
push
mov
jno
xor
pop
push
sub
cmp
filds
popf
imul
sbb
lret
push
repnz
xchg
and
sbb
cmpsl
sbb
cmp
outsl
cmp
cwtl
jg
mov
sbb
flds
lret
inc
lret
clc
popf
pop
clc
cmp
out
out
mov
sbbl
push
idivb
imul
sti
mov
mov
inc
ljmp
lcall
sahf
xor
xchg
xchg
cmpsb
dec
gs
jno
pop
sub
pop
scas
inc
ljmp
ljmp
rorl
pop
stos
cmpsl
loopne
sub
test
sbb
cmc
arpl
neg
or
push
mov
addr16
xchg
imulb
or
dec
cmpsl
daa
call
add
outsl
xlat
fstl
hlt
cmpsb
sub
mov
fisttpl
and
cmp
imul
outsl
mov
jl
mov
pop
sbb
imul
dec
int
inc
sbb
dec
dec
pop
add
pop
arpl
or
mov
lret
lock
and
dec
adc
call
xor
mov
mov
hlt
lock
mov
and
out
push
dec
imul
or
jno
je
in
call
xor
in
jg
es
out
jge
add
adc
leave
sbb
or
pop
and
aad
lret
fiadds
cli
sbb
loop
loope
lret
lcall
xchg
cld
repz
out
adc
aad
sub
dec
fdivl
or
aad
sub
xchg
push
mov
loop
cmpsb
xchg
pop
or
lods
aaa
adc
fnsaves
ss
lret
cmp
lock
pop
lea
xchg
test
push
jnp
pop
enter
and
ret
and
in
jno
mov
ficoms
lcall
push
pop
nop
sbb
mov
cs
shll
push
int
add
pcmpgtw
inc
jb
stos
outsb
add
ss
mov
sbb
into
mov
pop
cmp
in
cmp
call
imul
ja
mov
pop
jg
add
xchg
arpl
mov
lea
add
test
dec
fcompl
jg
pop
jbe
push
cmpb
mov
lds
push
repz
sub
add
dec
xchg
sbb
mov
mov
ds
sbb
icebp
loopne
jne
inc
call
lods
movsb
outsl
leave
loope
stos
lret
test
and
out
pop
inc
imul
push
sbb
inc
sbb
mov
pop
dec
xchg
fld1
das
xor
inc
add
mov
mov
cmp
jecxz
inc
xchg
mov
push
fcoms
cmp
xchg
sbb
dec
fstpt
enter
shll
lret
dec
xor
dec
xchg
jae
inc
lods
xorb
mov
mov
insb
pusha
mov
pop
add
in
xchg
sarb
cmpsl
inc
add
xor
stos
daa
xchg
pop
or
nop
mov
jo
mov
rolb
jbe
xchg
pop
das
and
lods
xorl
stos
popf
inc
and
cmp
or
por
lcall
popf
ja
cmpsb
ss
or
adc
ja
sub
das
jl
pop
lds
insl
dec
in
test
xchg
push
lahf
stc
popf
iret
icebp
pushf
cmp
add
ficoml
nop
dec
popf
mov
imul
andl
cltd
cmpxchg
sar
ljmp
mov
aas
mov
rorl
mov
scas
xor
stos
or
push
fwait
addl
dec
out
dec
addb
outsl
lea
add
xchg
lahf
faddp
sahf
add
jp
lret
rcrl
into
ret
inc
xor
dec
push
mov
or
daa
mov
pop
cli
sahf
jbe
rcrb
and
sub
movsb
lds
shlb
adc
in
cmpsl
xchg
in
jge
inc
or
jns
xor
jnp
mov
push
fs
push
sbb
lret
in
loopne
xor
repnz
jns
loop
jp
sbb
into
mov
jns
push
sub
ja
jge
enter
outsl
or
stos
adc
movsb
and
cmp
or
lds
sub
jge
push
cltd
sub
cmp
jle
in
mov
add
inc
or
fdivrl
insb
arpl
mov
adcb
out
arpl
inc
aas
jle
inc
cmp
inc
jno
int3
mov
mov
mov
xor
and
mov
aas
ret
mov
lods
xor
lock
xor
cmc
push
popf
and
dec
data16
test
or
inc
or
inc
int3
push
frstor
das
adc
call
inc
cld
mov
int
mov
into
inc
adc
xor
out
out
inc
ja
loop
adc
je
sub
vmovupd
jnp
mov
sahf
mov
leave
das
lret
inc
or
loopne
ja
loope
div
mov
push
xchg
inc
pop
inc
sub
inc
popf
pop
jnp
pop
out
rorb
xor
pop
pop
arpl
int3
imul
dec
xchg
xchg
cmpsb
sti
xchg
int
mov
sub
xchg
call
les
push
push
push
aad
mov
lcall
int
cmp
mov
js
leave
jmp
js
pop
mov
in
int
in
test
or
loope
mov
inc
add
xchg
pusha
testb
jmp
ja
mov
int3
push
mov
push
jne
lret
sbb
pop
loopne
cmc
lret
sub
iret
iret
mov
lret
ja
in
lret
cwtl
jmp
jno
pop
push
sbb
call
dec
sar
jl
out
sahf
jge
test
pop
cld
pop
ss
xchg
push
or
out
addr16
adc
testl
inc
ret
clc
bound
add
ret
stos
jbe
rorl
ror
in
xchg
repnz
dec
repz
popa
and
outsb
loope
iret
call
and
ret
loopne,pn
shll
pop
jecxz
sbb
inc
cwtl
add
lods
xchg
push
clc
iret
scas
mov
cmp
pusha
jl
inc
cwtl
out
insb
push
push
nop
idivb
jge
addl
lock
cwtl
mov
jb
inc
or
aad
cmp
movsb
xchg
sub
fwait
inc
inc
or
cwtl
ja
and
pop
inc
int3
xchg
pop
or
xchg
jge
xor
cmp
iret
lret
mov
das
push
in
test
cmc
icebp
lret
repz
xlat
jbe
pop
xchg
es
fcomi
scas
inc
pusha
loope
arpl
and
icebp
sti
adc
jno
test
pop
inc
popa
push
leave
dec
cmp
ja,pt
jle
popl
dec
test
mov
popf
rorb
mov
sti
lcall
std
loopne
out
das
inc
xor
or
lret
sub
fists
in
addr16
clc
jne
scas
mov
cmc
inc
sahf
mov
out
jg
sub
lret
in
loopne
add
mov
pop
stc
fsubs
xchg
insl
inc
inc
and
push
ss
cmpsl
lods
mov
sub
pop
dec
lret
jnp
cs
and
xor
push
xor
js
push
dec
push
adc
dec
adc
mov
lcall
test
mov
inc
cmpl
loop
fcoms
jge
shl
adc
add
cmpsb
cmp
sbb
movsl
pushf
jg
cmp
xchg
inc
push
dec
cli
fcmovb
out
mov
clc
pop
jbe
pop
sbb
mov
mov
outsb
push
in
push
lds
cmpsl
ret
mov
jnp
jecxz
jns
jo
pushf
lds
dec
add
pop
andl
daa
inc
push
pushf
sbb
and
push
subb
inc
xchg
adc
mov
jmp
jo
or
pop
xor
or
es
add
push
inc
mov
xor
adc
aam
cwtl
stos
into
sub
cltd
iret
jne
adc
into
incb
stos
xchg
orl
dec
mov
mov
gs
shlb
or
sub
loopne
cmp
jbe
mov
add
xchg
push
in
sbb
jmp
cmpsl
push
das
mov
inc
dec
fisttps
mov
dec
inc
jne
call
and
repz
icebp
leave
or
mov
push
jns
mov
cmp
push
mov
out
lahf
das
push
add
and
aad
and
aad
mov
pop
lret
rcrb
scas
mov
dec
push
shlb
cmp
mov
into
pop
fcomps
cmp
testl
jg
pop
cld
out
add
adc
sub
arpl
movsl
shl
lret
outsb
ss
pop
aas
push
sbb
mov
adc
xor
je
div
jp
std
imul
lds
sbb
lods
idiv
xchg
std
cmpsb
lahf
pop
sbb
add
mov
push
stos
gs
inc
xor
jbe
lock
lds
jne
or
jecxz
jp
jge
out
jnp
pop
bnd
push
imul
lods
push
movsb
push
outsl
add
mov
sti
rolb
loope
enter
out
in
mov
jbe
inc
imul
xchg
ss
mov
xor
jb
enter
in
loop
test
insl
fadds
loop
add
cmpsb
lea
out
pop
and
inc
dec
mov
cmp
jmp
movsl
pop
mov
mov
repnz
xchg
jns
dec
adc
cltd
movsl
mov
test
add
test
mov
jno
daa
pop
pop
in
inc
jg
adcl
cs
out
inc
dec
pop
cmp
icebp
inc
inc
and
cmp
mulb
fstl
adc
adc
fmull
pop
or
out
and
or
or
jl
fwait
mov
pop
imul
pop
dec
adc
jae
in
cwtl
fs
xchg
ss
push
mov
and
cmpsl
jmp
lock
xor
in
shrb
mov
mov
aaa
ret
pop
inc
orl
inc
mov
out
scas
movsb
adc
insl
xchg
shll
xor
imul
das
cld
mov
and
xlat
and
fstl
push
mov
jne
rcll
out
ljmp
mov
popa
test
aam
ds
repz
sbb
pop
subl
xchg
mov
sbb
inc
aam
sub
fistpll
pop
fwait
or
mov
std
mov
sbb
jmp
xor
mov
pop
mov
xchg
out
sbb
cmp
daa
pop
add
push
mov
fldln2
mov
dec
dec
into
fstl
fs
scas
pop
dec
enter
sbb
aam
xchg
adc
xor
ficoms
push
xchg
ret
mov
sub
flds
push
sub
fistps
jl
add
adc
lret
outsb
outsb
cmpsl
cmp
std
xlat
add
pusha
add
rclb
cmp
adc
cs
jle
mov
pop
inc
rcll
or
repz
insb
mov
lahf
sarb
jmp
xchg
aam
cmc
sbb
shll
jno
pop
mov
jnp
and
out
pop
outsl
ljmp
dec
std
sti
jmp
ljmp
aam
push
les
jg
rcrb
int
insb
adc
add
sub
inc
sbb
mov
les
jle
dec
xor
jae
std
gs
fnsave
xchg
outsb
jbe
mov
leave
push
mov
out
icebp
lock
xor
aad
inc
cmp
andb
cmp
bound
loope
int
push
popa
imul
xchg
lods
lret
loope
jae
cmpsb
push
test
test
xorb
lds
sbb
jb
sarl
or
aas
stos
cwtl
cs
pop
scas
out
inc
sub
inc
cmp
lret
or
adc
out
dec
or
xor
dec
ret
lret
mov
jmp
fbstp
xor
out
mov
lds
les
pusha
xchg
adc
das
sbb
clc
push
mov
mov
push
inc
mov
fdivrl
mov
cwtl
mov
and
add
shlb
adcl
xorb
das
cs
iret
or
xchg
test
and
pop
adc
stc
cmp
cld
fs
or
inc
mov
stc
mov
and
pop
sub
out
bound
mov
fs
mov
loopne
inc
cmp
lret
push
scas
dec
add
cmp
nop
aam
inc
xchg
insl
stc
cmpsb
lods
fwait
cmp
sbb
sbb
test
xchg
mov
or
pop
or
rcr
mov
cwtl
pop
add
inc
or
mov
push
rcrb
sbbl
xchg
lahf
into
push
stos
push
out
mov
test
xchg
je
sub
out
sahf
or
mov
pop
mov
popa
add
mov
push
sbbb
es
cmpl
test
xchg
inc
push
dec
dec
leave
cmpb
jle
lock
loope
test
push
insb
repz
or
sahf
out
or
stc
dec
xor
mov
sub
add
jae
cmp
enter
clc
dec
jg
xchg
in
or
sub
mov
fs
mov
outsb
push
cmc
cltd
mov
das
mov
adc
sbb
fstps
mov
mov
jg
xor
inc
xlat
out
mov
jo
adc
clc
cwtl
out
push
pop
iret
std
jge
mov
lahf
cwtl
movsl
adc
imul
add
push
and
ror
insb
pop
jns
inc
les
cmp
add
push
jne
sbb
push
rorl
mov
out
aam
lret
cmpsl
mov
jp
call
repnz
movsb
xor
inc
lcall
sahf
sahf
pop
sbb
or
inc
sub
push
xchg
mov
dec
aam
scas
mov
pop
es
cmp
cmp
add
jp
jp
fbld
outsb
xchg
insl
dec
pop
shr
notl
sti
adc
jne
dec
dec
test
jl
sub
mov
mov
cld
mov
loope
fs
dec
or
repz
jns
gs
push
ljmp
cmpb
out
shlb
stos
xchg
in
repnz
cmc
loope
insb
pop
outsb
add
out
pop
jge
jo
mov
je
add
test
mov
inc
test
sarb
inc
xchg
loope
jno
pop
push
jg
add
pop
cmp
inc
out
jle
push
nop
jl
gs
lret
inc
inc
cmpsl
add
outsl
dec
xor
jp
data16
in
js
fldl
dec
sbb
push
bound
sti
mulb
inc
test
cmp
adc
or
xchg
lea
rolb
out
adc
outsb
mov
jecxz
mov
or
sahf
sub
dec
repz
js
push
popa
jae
shl
ds
shrl
test
and
test
sub
mov
js
popf
in
mov
xchg
xchg
out
jmp
adc
sub
icebp
out
cmpsb
mov
fdivrs
xor
push
add
sub
mov
xlat
mov
andl
push
mov
arpl
fwait
testb
arpl
push
jmp
loope
pop
movsl
lods
add
cmp
aaa
xchg
stos
loopne
mov
inc
mov
js
add
pushw
add
lea
add
mov
cmp
push
icebp
jno
loopne
sub
jae
orl
dec
mov
sarl
fdivrs
movb
and
push
mov
cs
pop
xchg
pop
and
insb
dec
js
or
dec
cmp
sbbl
push
popa
loope
lods
stos
pusha
inc
sti
mov
rcrb
or
out
in
adc
add
dec
dec
xchg
pop
ficompl
fcmove
out
mov
lea
mov
sbb
add
inc
icebp
test
mov
addr16
lods
push
inc
jmp
jo
das
js
orb
xchg
es
inc
daa
hlt
add
leave
pop
idivb
leave
fisubrl
jns
push
popa
or
movsl
sti
movsb
daa
sbb
xchg
jg
push
cltd
call
sub
pop
cmpsl
adc
cmp
xor
fmull
pop
dec
push
leave
push
sub
jae
lock
inc
jp
jmp
daa
lret
push
int3
xchg
xchg
pop
add
rorb
pop
test
mov
sub
and
pop
sub
jl
pushf
jle
clc
loop
pop
xor
inc
xchg
and
pop
adcb
xchg
popf
je
js
pop
popf
mov
int
pusha
lods
mov
fdivrs
scas
push
push
fwait
xorl
ljmp
ja
xor
mov
inc
test
mov
out
sti
shlb
sbb
sbb
shl
cmp
pop
popa
shl
hlt
mov
in
sub
stos
mov
sbb
movsl
sub
mov
lea
mov
mov
ror
xchg
xlat
movsl
pusha
ljmp
andb
sub
repz
ds
inc
outsb
scas
fisttpl
inc
mov
xchg
push
in
xchg
fcoml
idivb
jle
mov
jmp
sahf
iret
push
dec
lcall
mov
idivl
jmp
sub
fs
dec
mov
jbe
aam
inc
std
lahf
aaa
enter
shlb
iret
mov
repnz
sub
lret
inc
ljmp
jmp
dec
cmp
fwait
aam
daa
addr16
jns
not
pusha
push
das
cmp
repnz
stos
and
xrelease
cld
xor
nop
aam
sahf
xchg
mov
dec
mov
inc
pop
ja
ds
jb
inc
in
xchg
dec
daa
fistpll
jle
mov
test
xor
lods
cmpsb
xchg
movsb
test
adcl
rcrb
dec
adc
cli
addb
sbb
je
cmp
cltd
aad
mov
xchg
cmp
arpl
jb
filds
and
roll
addr16
enter
xor
in
lods
sbb
or
les
xor
mov
shrb
xchg
arpl
add
push
mov
sub
xor
push
or
adc
dec
xchg
mov
xchg
stos
mov
mov
adc
cmp
pop
jne
inc
adc
inc
repz
sub
daa
mov
enter
ja
ret
popa
push
pop
fsubrl
mov
inc
cmp
inc
jnp
ds
aaa
idiv
ja
les
stos
pop
bound
push
inc
je
adc
or
push
aas
sub
mov
fnstcw
ficoms
outsl
push
dec
dec
or
sbbb
xor
xchg
jecxz
xchg
dec
jb
jmp
xor
dec
test
xchg
jge
push
push
jnp
mov
jb
leave
push
aad
int3
icebp
mov
sbb
sbb
push
sub
popa
jl
jge
push
jmp
push
fisttpll
nop
cmp
cmp
mov
pop
mov
mov
lds
mov
xchg
mov
mov
add
push
push
pushf
jae
div
dec
repz
clc
inc
and
or
mov
add
xchg
xor
cmc
pop
push
jbe
ljmp
rol
popa
divb
les
pop
jg
xchg
push
sbb
pop
mov
lcall
dec
cs
sbb
adc
mov
push
or
sahf
mov
insb
call
add
mov
dec
test
popa
xor
pop
jnp
sbb
stos
jmp
inc
add
movsb
cmp
test
xchg
or
stos
adc
sti
in
pop
aad
xor
xchg
vpminub
inc
cli
add
cmp
cmc
and
jb
push
sti
push
mov
mov
pop
push
int
loop
mov
loope
add
add
pusha
ljmp
mov
pop
xor
adc
into
movsb
xchg
inc
popf
xor
pop
gs
negl
mov
lret
dec
rorb
fwait
push
repz
or
cltd
dec
jae
push
dec
or
popa
in
lret
outsl
inc
rcrb
movsb
cmc
xchg
in
stos
adc
jle
add
sbb
adc
outsl
inc
sub
int3
dec
mov
inc
insb
sub
into
ss
sub
leave
ja
sbb
in
das
test
call
pop
mov
push
fisttpl
mov
insb
sbb
cli
dec
out
pop
enter
xor
adc
adc
imul
lahf
hlt
dec
aaa
xor
jo
xor
repz
out
jo
cmpsb
sti
movsl
adc
mov
adc
mov
aas
pavgb
clc
mov
jbe
mov
decl
mov
lea
fwait
mov
xchg
jno
jmp
sbb
pop
pop
icebp
outsl
bound
pop
inc
jne
pop
mov
pop
aaa
fidivs
mov
arpl
mov
jmp
in
push
popf
arpl
push
jge
mov
popf
mov
out
xchg
push
dec
push
jns
xchg
push
pop
fucomip
and
scas
sbb
jl
arpl
inc
rolb
jp
cwtl
cli
std
push
or
dec
mov
inc
pop
jmp
and
sti
push
gs
lahf
clc
icebp
mov
dec
negb
jbe
pop
fcoms
sarl
pop
mov
flds
rolb
xchg
inc
add
inc
fwait
pop
push
sbb
ja
push
mov
mov
push
mov
aad
repnz
mov
mov
jle
and
fadds
repnz
pop
test
push
jbe
pop
cmpsl
into
add
sbb
mov
dec
test
sbb
mov
push
and
rorl
repnz
inc
fs
daa
stc
jmp
sbb
lcall
cmc
out
movsb
arpl
mov
out
lock
and
fbstp
jbe
inc
das
nop
push
add
pop
aam
shll
push
lods
add
fwait
jae
mov
lcall
and
add
sub
andl
lret
and
enter
jo
pop
pushf
and
mov
popa
lret
fnstsw
out
movsb
in
or
or
mov
in
aas
out
fisttps
or
fisttpl
stc
sub
and
add
in
cmp
lds
mov
in
push
imul
rep
fnstenv
sbb
stos
add
bound
xor
adcl
popf
cmp
add
pop
mov
push
pop
aaa
test
push
mov
call
lret
testb
xchg
fdivs
mov
push
mov
jmp
dec
imull
ret
or
mov
test
lds
decb
xor
rclb
pop
mov
imul
and
ja
push
inc
outsb
jge
mov
add
push
mov
and
nop
ja
inc
add
mov
adcb
test
push
xchg
or
jae
mov
mov
jg
mov
cld
cmpsb
bnd
sbb
add
jge
xchg
xchg
xor
dec
dec
pop
dec
out
out
push
mov
jns
sahf
dec
dec
jo
cmp
xchg
scas
jp
cmc
push
or
ret
cmpl
sar
sbb
arpl
mov
addb
xchg
imul
xor
xchg
or
push
sub
mov
mov
xchg
pop
jbe
mov
sub
add
push
sub
mov
dec
jno
sbb
pop
push
pushf
pusha
adc
inc
pop
test
gs
cmpsl
jp
xchg
std
loopne
movsb
out
gs
jle
mov
push
icebp
sbb
in
add
and
fisubrs
jnp
pop
mov
adc
insb
cmpsb
dec
pop
iret
pusha
mov
test
inc
jp
jns
pop
jecxz
repz
xor
xchg
lods
jmp
mov
mov
add
xor
shll
ror
cltd
xor
adc
and
inc
mov
push
cmp
push
sub
ss
push
sbb
mov
mov
adc
mov
sub
xlat
or
sub
test
in
lock
std
fdivs
sub
aam
mov
in
adcb
scas
adc
inc
imul
pop
stc
dec
mov
jle
adcb
add
mov
xor
push
sbb
scas
outsl
sub
jmp
or
xor
lods
mov
jge
inc
lcall
leave
dec
insb
and
mov
xchg
jnp
fistl
out
add
xchg
xor
or
addr16
fcomps
mov
pop
xor
lret
and
mov
lods
pop
stos
xchg
jnp
adc
adc
dec
ljmp
or
mov
inc
add
iret
hlt
orb
loope
push
or
or
lock
movsb
test
fsts
pop
cmpsb
or
int3
imul
xlat
jge
jno
sub
jo
mov
lods
add
inc
inc
add
xchg
mov
xchg
add
cld
stos
xlat
out
arpl
and
lahf
mov
dec
ljmp
or
mov
push
jb
enter
movsb
ficompl
mov
or
adc
lods
mov
jmp
mull
xor
call
lods
cmp
mov
cmp
es
sbb
mov
jns
jbe
mov
dec
jmp
mov
mov
in
lods
dec
sbb
fcompl
or
mov
mov
jb
dec
dec
push
xchg
aad
call
lock
push
negl
xor
ja
ja,pn
in
dec
test
cmpsb
out
icebp
dec
dec
andnps
mov
mov
into
mov
cmp
dec
inc
rolb
fisubrl
enter
aaa
mov
out
lret
scas
pushf
jb
cmp
aas
dec
out
mov
cs
jl
mov
lods
push
push
sbb
outsb
mov
sbb
ja
mov
aam
popf
movsb
ljmp
test
dec
sbb
pop
mov
cvtps2pd
iretw
mov
ret
push
or
mov
addr16
pop
inc
sahf
sahf
gs
push
xchg
out
adcl
aas
or
inc
and
xchg
dec
xchg
imul
xchg
push
ret
test
xor
cltd
fmulp
push
aam
lds
xor
outsl
mov
scas
fstp
and
mov
add
mov
cmp
mov
test
fmull
pop
ret
loopne
xchg
mov
cmp
mov
test
push
imulb
mov
outsl
inc
lret
rcl
xor
subb
and
outsl
hlt
outsb
mov
mov
mov
push
xor
scas
imul
imull
xor
mov
mov
adc
out
dec
mov
ds
and
ficoml
and
fsubr
dec
stos
inc
int3
dec
mov
push
imul
mov
and
mov
stos
mov
out
negl
lret
lahf
out
add
xchg
fcoms
rorb
loop
das
into
inc
add
testb
pusha
aaa
arpl
insb
fadd
cs
xchg
je
xchg
pop
shr
sbb
cltd
add
or
cmp
mov
addr16
subb
rolb
mov
ret
out
loop
sahf
or
mov
loopne
jns
pop
sbbb
adc
pop
cltd
or
pop
push
fiaddl
sti
xlat
pop
int
mov
xchg
pop
sbb
sbb
repnz
or
pusha
lea
mov
inc
mov
cs
stc
stc
pop
xor
sub
mov
out
fidivl
enter
jge
sahf
leave
andb
mov
add
outsb
dec
roll
sbb
ljmp
stos
jecxz
fcomip
cld
push
cwtl
cmp
mov
fucomip
and
jo
inc
xchg
flds
xchg
mov
fbstp
sub
mov
adc
sbb
lcall
cmp
pop
lcall
and
ret
scas
mov
mov
jl
dec
aaa
adc
jp
cmpsb
imul
or
shl
ljmp
mov
jae
leave
data16
cmp
int3
lods
test
jno
pusha
insb
sbb
sub
pop
ds
out
ja
test
je
es
cs
mov
mov
iret
into
rcrb
lret
and
pop
imul
cli
gs
rcl
pop
repnz
jnp
test
sahf
je
daa
in
sub
daa
jb
ljmp
or
pop
mov
call
test
xor
cmp
sub
sub
pusha
mov
mov
mov
push
cs
popa
mov
sub
es
cmp
add
cmp
imul
and
mov
mov
cld
les
data16
jge
shlb
lret
adc
sbb
mov
hlt
add
scas
and
pop
dec
mov
pusha
lods
lcall
jle
cli
fmull
cmc
mov
shrl
mov
push
cld
or
xchg
outsb
pusha
sbb
xchg
je
loop
aas
mov
and
enter
stos
adc
ja
jns
lods
and
dec
mov
or
call
fdivl
sbb
pop
xchg
sub
xor
in
and
adc
cli
mov
in
xchg
adc
popa
add
xchg
mov
dec
jo
shrb
sarl
or
inc
gs
xor
in
mov
mov
cmc
les
das
and
scas
pop
shrb
xlat
mov
add
mov
ficoml
adcl
ljmp
adc
out
mov
out
xchg
jno
movsb
mov
dec
call
jno
dec
adc
or
adc
dec
fimull
imul
ljmp
adc
cmp
cs
push
pop
loop
push
stos
imul
adc
mov
sub
jns
mov
adc
and
fmul
add
into
add
adc
gs
or
push
gs
jnp
mov
addr16
fldl
push
pop
inc
and
mov
lock
es
sub
mov
push
in
mov
call
pop
pusha
test
cmpsb
fwait
pop
sub
push
inc
push
rcr
out
jbe
loope
pop
mov
cltd
jle
in
jb
loop
jnp
cmp
shlb
hlt
imul
js
scas
push
lods
repz
add
mov
and
test
cmpsl
jmp
movsl
lahf
add
mov
call
shlb
aaa
mov
dec
jmp
xchg
cmp
sbb
and
or
shlb
adc
mov
rcr
add
fldl
push
cli
mov
mov
sbb
adc
rolb
or
xlat
dec
fs
push
fisttpl
popf
sbb
mov
push
cs
cmp
leave
cmp
add
jl
outsl
in
mov
push
into
mov
push
sub
outsb
hlt
cmpsb
stos
scas
testb
push
xor
movsb
xchg
xor
adc
dec
lods
arpl
iret
mov
push
and
or
jl
test
outsl
pushf
fs
or
xlat
aam
sub
fsubs
push
xor
rcrl
mov
inc
mov
jg
inc
sbb
xor
incl
jne
cmp
jae
sti
or
lods
test
nop
scas
mov
cmp
out
dec
das
mov
sub
mov
cmp
lds
gs
xor
imul
call
sbb
repz
stos
mov
add
jle
orb
popf
arpl
cmc
sbb
scas
aad
cmp
incl
and
mov
test
jbe
int3
dec
out
push
dec
iret
xchg
andl
or
roll
gs
adc
das
jmp
sbb
insb
insl
in
jle
mov
std
pop
jnp
out
xor
insl
push
inc
and
cmpsl
out
pop
add
pop
je
test
pop
adc
stos
or
fcmovnbe
sbb
push
ja
and
push
and
daa
scas
jno
mov
push
cmc
and
mov
clc
lock
stos
sbb
jle
mov
jne
lcall
mov
xor
out
pop
arpl
xchg
inc
jnp
sbb
pop
inc
xlat
jnp
jmp
pop
cmpsb
js
or
in
js
inc
inc
int3
jne
jmp
int3
xor
pop
stos
mov
iret
push
pop
insb
mov
hlt
adc
lods
mov
clc
mov
in
cs
push
pop
xchg
pop
mov
or
popf
xlat
shrl
rorb
xchg
xor
stos
dec
ret
inc
or
xchg
das
sub
imull
sub
repz
in
add
out
mov
cwtl
out
cli
add
mov
je
xchg
aas
in
mov
dec
rcrb
push
jmp
xor
mov
mov
stos
movsl
fidivrs
push
inc
das
mov
repnz
maxps
adc
xor
popa
inc
sbb
stc
inc
add
cmp
and
lods
mov
mov
mov
fiaddl
cmp
fwait
xor
shrl
aas
jns
hlt
jmp
nop
cmp
shlb
fbld
loope
add
xor
add
pop
adc
or
xor
mov
inc
dec
and
sub
jnp
xchg
pop
jge
add
xor
jmp
dec
gs
fs
sbb
ret
imul
loope
in
pop
or
lea
fwait
jmp
std
out
cmp
les
dec
jno
idiv
pusha
lods
ss
out
jp
inc
cmc
xor
data16
loop
jmp
and
js
add
stos
shlb
cmp
fyl2xp1
cmp
insl
add
pop
iret
add
inc
scas
cltd
jnp
in
mov
mov
sbb
and
and
rcrl
insl
in
jmp
sub
cld
pop
loop
push
xlat
push
fwait
dec
test
es
cmp
inc
xor
jge
push
andl
inc
xor
jns
daa
stos
push
dec
xor
cmp
xor
movsl
mov
nop
repnz
divl
push
mov
jo
es
mov
jns
pop
inc
jle
adc
jns
testl
rol
daa
cmp
mov
xchg
fildll
push
lret
or
pop
dec
cmc
push
mov
or
xchg
sbb
pop
jp
pop
call
test
jns
mov
xchg
cmp
push
adc
in
jb
stos
jecxz
mov
cmc
pop
in
dec
inc
jl
rcrl
repnz
fstpl
hlt
ret
pop
push
lret
stos
lret
movsl
imul
js
inc
pop
pop
xorl
loope
adc
mov
jge
mov
loopne
int3
gs
push
mov
jl
xchg
lahf
add
or
pop
stos
fiaddl
jne
mov
xchg
xor
aas
mov
repz
test
imul
xor
popa
and
pop
adc
aas
fwait
and
pop
xchg
jnp
adc
scas
mov
mov
or
stc
dec
xchg
lret
mov
add
mov
das
inc
in
sbb
xor
enter
leave
cmp
dec
sub
pop
ljmp
movl
call
mov
mov
rcrl
pop
mov
ds
or
out
les
pop
sarl
xchg
jmp
notb
les
ret
test
vunpcklps
or
sub
lods
test
or
nop
pop
adcl
int3
stos
inc
movsl
pop
mov
push
xchg
bound
gs
push
in
and
jecxz
cmp
adc
negb
mov
push
into
fwait
gs
mov
scas
jg
dec
das
mov
lahf
outsb
mov
ja
pop
jbe
sbb
pushf
sbb
inc
movsl
jo
sarl
adc
ffree
int
stc
pop
cmp
les
lret
mov
mov
xchg
cltd
out
test
xorl
and
push
insw
cld
es
or
std
pop
enter
fstps
adcb
rol
inc
pop
and
adc
mov
push
and
jne
xchg
repz
mov
xor
sti
mov
mov
fdiv
aam
lret
cltd
int
and
cwtl
mov
pop
ret
push
cmpsb
xlat
push
and
adc
imul
dec
push
stos
cmp
mov
push
push
inc
or
inc
adc
adc
or
inc
xchg
add
pop
sub
push
jle
inc
iret
mov
into
jns
stos
outsb
sti
and
int3
sbb
aaa
clc
lret
divb
or
repz
ds
data16
jge
sub
neg
mov
jge
cmpsb
fisubrl
pop
rolb
xchg
std
daa
push
pop
arpl
and
out
aaa
lock
incb
mov
cs
xchg
mov
mov
lods
int3
jge
mov
outsb
rcll
fst
dec
xchg
mov
stos
ret
xchg
dec
fsts
in
testl
sti
mov
mov
dec
mov
leave
les
sbb
xchg
pop
test
ret
inc
lods
mov
adc
dec
mov
push
sahf
es
das
inc
mov
xor
rolb
popf
xcrypt-ctr
cmpsl
cltd
push
jl
push
inc
dec
bnd
ja
xchg
enter
pop
push
or
xor
iret
push
popf
scas
outsl
loopne
int3
and
mov
adc
ja
or
mov
adc
xchg
jmp
sti
push
mov
xchg
cmp
adc
dec
sbb
sahf
repz
repnz
fisttpll
lea
adcb
mov
js
ret
stc
arpl
and
fdivrs
test
adc
dec
lret
adc
sbb
pop
mov
iret
movsb
mov
ljmp
arpl
ret
lret
cmp
adc
mov
pop
cmp
xchg
inc
jecxz
push
mov
jno
push
mov
popl
repnz
jno
arpl
cmpsb
adc
xchg
mov
mov
ror
jge
jge
popa
rolb
push
fstl
out
mov
xchg
daa
mov
mov
mov
and
xor
push
cmp
pop
lahf
into
movsl
dec
lahf
jmp
dec
xlat
jae
stos
mov
sub
xchg
js
mov
in
aas
inc
popf
cmp
maxps
rcll
add
and
inc
sbb
push
call
mov
inc
jae
cltd
push
mov
lock
push
rcll
movsl
adc
inc
movsb
icebp
outsb
pop
push
push
gs
stos
cmpsb
cwtl
iret
adc
dec
adc
dec
and
push
xlat
xchg
decb
jmp
call
sub
stos
xorl
in
clc
int
xor
lds
cmp
xor
movsb
add
sti
mov
push
add
xchg
dec
jbe
scas
inc
dec
leave
imul
arpl
imul
outsb
mov
mov
loope
jns
xchg
outsb
xor
frstor
jp
movsb
mov
sbb
sahf
inc
popa
dec
dec
mov
mov
xor
rcl
rcl
mov
bnd
or
pop
ds
push
adc
and
xor
mov
and
in
testl
je
dec
or
stc
enter
testl
filds
or
xor
les
pop
sub
pop
push
fidivrs
pop
loope
add
addr16
pop
mov
mov
pop
clc
pop
xchg
sub
aad
push
mov
stos
test
mov
mov
mov
lret
xor
mov
lds
ljmp
dec
xchg
int3
or
and
dec
shlb
mov
insb
pop
fstl
jg
inc
xchg
jae
sub
leave
jo
icebp
adc
lcall
adc
test
or
cwtl
fldenv
and
add
add
cmc
jne
dec
sub
xor
mov
xor
jnp
xor
fistpl
ss
cmp
and
mov
mov
out
dec
das
dec
inc
jns
jno
das
mov
jmp
inc
cmpsb
sahf
mov
sbb
das
scas
scas
stos
div
aad
icebp
sbb
add
xor
sub
jae
imulb
add
mov
adc
fwait
mov
mov
lea
cmpsl
test
divl
test
or
inc
out
movsb
fs
fwait
push
popf
insb
xorl
lcall
xorb
std
sbb
cmpsl
sbb
pop
imul
push
or
sub
dec
xchg
sbbb
jmp
push
pop
rcrb
ja
aam
and
dec
xchg
lds
mov
in
mov
and
lds
mov
fnsave
pop
or
ds
lret
xacquire
mov
adc
in
cli
shr
sbb
hlt
cmovs
and
push
jecxz
aas
lds
aam
outsb
or
lret
pushf
sbb
push
popl
sbb
sbb
lahf
sbb
clc
cs
fcomps
adc
mov
movsb
loope
inc
or
inc
fcomps
mov
test
cmp
inc
xchg
testb
lods
add
out
adc
mov
jb
pop
xchg
add
xchg
mov
int
insb
outsb
inc
jl
insl
push
or
int3
lret
adc
gs
dec
sub
mov
jno
js
push
sub
cmpl
outsl
mov
sub
movsl
mov
es
fsubrl
sub
shrb
sbb
mov
push
jno
push
xchg
pop
insb
add
hlt
push
mov
jno
jb
mov
aam
int3
inc
roll
pop
mov
mov
mov
inc
mov
dec
cmp
test
rcrl
loope
sbb
add
dec
pop
cmp
sahf
adc
dec
xchg
push
jle
es
jecxz
data16
or
inc
in
aas
lcall
daa
je
jmp
int
dec
lahf
cld
cli
mov
adc
add
imul
lret
imul
insl
nop
mov
jae
fidivl
adc
mov
adc
dec
jge
pop
mov
stc
sub
cmpsb
push
cmp
xchg
out
inc
jmp
ret
xchg
lret
xchg
push
std
in
add
nop
pop
dec
mov
sarb
scas
ffree
stc
jecxz
pop
push
mov
cmc
mov
mov
xchg
xchg
cmp
pop
fidivl
push
ficomps
xor
mov
add
icebp
fcmovbe
or
mov
movsb
jecxz
shl
lahf
xor
fisttpl
add
push
ljmp
xchg
pop
cmp
push
lret
fdivp
mov
clc
cmp
pop
std
push
push
xchg
int3
push
mov
loop
mov
leave
mov
xor
and
fstps
outsb
jno
xorl
rcl
mov
jb
sbb
lcall
pop
lret
aam
fcmovb
or
fstpt
inc
or
xor
xor
lods
cmp
mov
fs
cmp
movsl
out
mov
sub
insb
push
imul
lods
mov
lea
inc
test
shll
mov
sbb
mov
sub
xor
mov
sub
lds
test
cmp
xor
push
leave
test
enter
paddd
lds
inc
jb
pop
das
add
mov
pop
scas
jl
jnp
mov
jmp
xchg
cwtl
test
lret
cmpsb
mov
mov
xchg
out
mov
sbb
repnz
add
dec
scas
xchg
daa
and
cld
lods
pop
push
mov
jle
lea
mov
cmp
and
cwtl
rorl
add
cmp
sub
dec
out
cld
pop
sbb
cld
pop
jno
pop
or
orb
mov
xor
cwtl
shll
jle
push
mov
imul
imul
enter
in
and
cmp
xchg
into
push
daa
lods
pushf
scas
jle
div
push
js
movsl
int
mov
stos
xor
pop
push
and
inc
adc
xor
sub
mov
addr16
cmp
loopne
in
mov
xchg
jo
dec
mov
pop
fsub
jbe
in
and
btc
dec
arpl
inc
add
dec
int
fwait
mov
dec
lds
dec
sbb
jo
mov
ret
mov
enter
ljmp
je
dec
fwait
int3
xchg
arpl
mov
xchg
popa
insl
lock
xchg
inc
xchg
mulps
or
out
xor
xchg
mov
xor
fcompl
cmpsl
adc
cmp
mov
stc
push
xchg
mov
fiadds
xor
cmpsl
fnstsw
popf
cld
dec
cmp
jg
inc
std
push
push
sub
dec
pushf
bound
mov
lret
push
insl
push
jno
xlat
ljmp
iret
movsb
pop
mov
stos
out
xor
sub
mov
mov
leave
xor
or
dec
mulb
addr16
or
gs
sbb
test
add
xor
lods
dec
jnp
lahf
cli
divl
in
icebp
rol
inc
pop
pop
pop
shld
dec
sbb
lods
inc
mov
shr
out
mov
cmpl
mov
dec
xchg
cmp
xchg
out
push
dec
xor
jnp
mov
xor
add
mov
stc
push
lcall
sub
sbb
fwait
icebp
loop
das
pop
xor
int
cmp
insl
jmp
popf
mov
cmpsb
mov
inc
mov
mov
pop
bound
lahf
lods
xor
dec
inc
into
lods
cs
mov
mov
test
mov
adc
inc
testl
xchg
dec
pop
adc
stc
aad
test
fdivl
dec
xchg
dec
mov
orb
xchg
divb
add
jae
inc
cs
cli
imul
xchg
or
rclb
dec
adc
addr16
aad
lods
cwtl
je
dec
mov
repz
test
mov
flds
or
dec
data16
push
cld
cmp
mov
pop
add
cmpsb
out
ds
inc
scas
push
or
insl
ljmp
mov
mov
cwtl
adc
jmp
add
scas
pop
sub
mov
pushf
out
xchg
xchg
xchg
es
cmpsl
loopne
in
xchg
ret
data16
lcall
sub
js
icebp
lea
xor
lock
lods
adc
jb
sbb
xor
adc
sub
lcall
aaa
test
stos
add
cmc
or
mov
and
adc
and
bnd
dec
pop
add
repnz
and
jnp
xchg
movsb
jl
les
cmp
arpl
out
add
sbb
push
inc
push
xor
pop
add
ret
pushl
jno
adc
popf
les
adc
and
dec
in
mov
aad
sub
mov
loopne
xchg
idivl
xchg
adc
fwait
pop
decl
out
mov
pop
xor
fdivrl
lret
jno
pop
xor
je
inc
cmc
pop
das
fmul
insl
sub
xlat
sbb
adcl
sub
xor
and
push
mov
shll
nop
fsubr
jp
jg
or
push
fimull
or
jns
push
inc
push
add
dec
pop
and
mov
int
iretw
ja
push
push
cmp
or
sbb
int3
xchg
xor
hlt
fmuls
push
nop
int
shlb
mov
xchg
sub
lock
jno
repz
lahf
subb
repz
sbb
mov
xlat
loopne
xchg
xchg
inc
xor
jmp
clc
pop
xlat
sub
sub
mov
fidivl
xchg
test
push
cmp
popf
mov
outsb
mov
mov
add
shlb
std
cmp
sub
pop
mov
mov
xchg
adc
scas
jmp
push
pop
scas
adc
test
in
addl
mov
or
adc
jl
mov
out
sbb
mov
jecxz
jmp
jle
sbb
sbb
es
inc
adc
inc
mov
mov
xor
mov
or
imul
lods
je
mov
aam
pop
popf
arpl
pop
inc
and
in
lcall
sbbl
cltd
push
movsb
call
and
jb
dec
aad
mov
mov
add
push
pop
cwtl
stos
adc
push
fisubs
and
or
mov
in
and
outsb
cmp
outsl
mov
insb
das
outsb
rolb
adc
pop
cmpsl
xchg
int
insl
aad
ss
rclb
es
inc
mov
inc
sarl
in
aaa
jge
imul
xchg
cmpsb
push
aam
pop
fisubrs
mov
aad
xor
pop
adcl
insl
and
loop
adc
orl
or
shrb
xchg
push
and
or
sarl
test
and
pop
push
fisttpl
push
int3
stos
dec
rcrb
jne
pusha
sub
adc
xchg
call
pop
or
in
cwtl
mov
adc
pushf
js
dec
jle
ja
mov
inc
aam
movsb
mov
shll
inc
push
mov
cwtl
dec
lcall
inc
addr16
in
ret
or
jo
dec
lcall
mov
mov
add
fwait
inc
out
xor
xchg
inc
mov
sub
in
cmp
hlt
jb
cmpsl
fidivs
xlat
jnp
xor
ds
pop
sub
mulb
insb
jne
xor
popa
shr
pushf
test
inc
push
cs
repz
imul
push
add
cmp
aam
out
shrb
lods
pop
push
lods
loopne
dec
sbb
loopne
sub
mov
loop
pop
jecxz
cmp
mov
fs
inc
repz
stc
cli
push
insl
in
sub
icebp
sbb
push
loopne
and
lret
insb
add
xor
mov
fsts
lahf
pop
pop
xor
jb
or
nop
cmpsl
pop
in
adc
mov
insl
adc
mov
xchg
sbb
sub
pop
sbb
dec
or
adc
fsts
add
xchg
sbb
in
xchg
pop
addr16
outsb
inc
pop
or
pushf
pop
mov
sbb
pushl
push
lea
dec
outsb
adc
lods
adc
sub
pop
jge
adc
or
jge
cwtl
mov
push
lods
aaa
lock
imul
pop
das
pop
xor
xchg
jb
je
jecxz
cmpsl
shll
jae
pusha
mov
mov
js
rcrb
cmc
mov
imul
or
test
pushf
les
dec
lods
fucomp
daa
mov
jns
lods
add
jecxz
adc
or
xor
loope
stos
shrl
cmpl
lock
jmp
scas
push
dec
or
adc
pop
mov
xor
int3
outsl
push
add
insl
loopne
js
sub
sub
add
cmp
add
in
mov
mov
add
sti
push
inc
mov
leave
out
ror
test
xlat
cmp
mov
xor
add
fcmovnu
add
cld
dec
adc
xlat
out
xor
scas
sub
jnp
sarl
xlat
popf
dec
xor
mov
pmulhuw
nop
iret
sub
rorl
dec
pop
imul
jnp
lea
and
sarl
inc
in
bound
aaa
mov
fsts
mov
lcall
out
iret
test
enter
sbb
lea
xchg
adc
jl
xor
int
dec
rol
ljmp
cmpl
xlat
push
jae
pop
push
shl
cmc
rcrl
subb
push
cmc
adc
call
jmp
inc
and
add
add
xor
sub
sbb
lea
fmuls
bound
mov
cmp
negb
negb
jno
out
lods
out
push
fucomip
movsl
sbb
dec
hlt
movsl
repnz
insb
jns
adc
sub
mov
cwtl
sbb
add
push
dec
in
stc
inc
call
je
jno
lahf
insl
pop
inc
mov
outsl
mov
repnz
fsubs
pop
push
mov
ret
shl
push
or
dec
ss
imul
push
or
mov
decw
mov
mov
xchg
xchg
aas
fsubrl
dec
jno
jecxz
pop
add
pop
xlat
int
adc
mov
sub
sbb
inc
jne
xchg
ljmp
test
xlat
lods
and
fwait
jmp
inc
pop
sbb
les
fistpll
rorb
out
push
and
adc
or
lods
rcll
cmp
mov
jle
shrb
scas
sbb
fs
int
sub
lahf
xchg
imul
sti
iret
mov
les
push
arpl
mov
fsubl
nop
sbb
xor
push
sbb
add
xor
lds
rsqrtps
fbstp
push
les
jp
jb
mov
pop
jp
arpl
loope
fwait
sbb
mov
hlt
mov
inc
push
jns
xchg
out
sbb
add
or
add
es
stos
jae
adc
or
aad
in
mov
add
stos
adc
xchg
inc
cmp
fst
push
pop
sub
popa
popf
mov
lcall
cli
pop
or
pop
pop
dec
mov
push
sahf
jnp
ds
xchg
adc
add
leave
push
test
pusha
push
or
aas
xchg
inc
mov
out
xor
lret
lock
jns
pop
dec
mov
testb
dec
dec
mov
sarb
mov
add
rcrb
out
aas
out
mov
sub
scas
jmp
cmp
dec
adc
arpl
js
sub
pop
mov
mov
xchg
popa
lret
mov
xchg
mov
inc
push
cmc
lods
int3
cmpsb
mov
sub
dec
lahf
or
cli
fiadds
mov
call
mov
popa
mov
xchg
mov
cmp
mov
jo
or
cmp
cmp
leave
pop
bound
dec
pop
xchg
xor
shll
cmp
cld
rcr
fildl
sbb
push
mov
jae
fisubs
dec
pop
mov
pop
sub
mov
dec
sbb
push
or
lcall
jno
dec
test
add
mov
out
sbb
leave
adc
icebp
stos
ror
push
test
ss
mov
fsub
and
pop
rcl
ror
cmp
fnstcw
movsb
jns
daa
shl
test
mov
stc
mov
mov
jecxz
aad
enter
sub
sub
jge
cmp
icebp
rcl
loope
add
sbb
pop
pop
cltd
in
add
fnsave
movsb
lcall
sti
sub
sub
daa
pop
push
es
in
shlb
fwait
loop
sarb
fisttps
sbb
dec
mov
sbb
or
dec
or
jb
inc
clc
pusha
adcl
cs
xor
jp
and
add
out
jno
scas
popf
mov
sbb
xchg
out
inc
daa
je
test
mov
fidivs
mov
push
gs
mov
std
scas
mov
pop
sub
add
jo
cld
inc
or
adc
movl
rcrb
jecxz,pt
sub
xor
jae
sub
jmp
int3
out
and
or
dec
sahf
adc
xchg
int
nop
dec
mov
push
leave
imulb
or
frstor
rcll
popf
dec
mov
jnp
clc
xchg
fwait
jl
xlat
idiv
cmp
pop
jecxz
loopew
das
jge
xchg
xchg
daa
stos
fwait
add
sbb
xor
xor
cmp
jg
jno
imul
sbb
imul
jmp
jge
cmp
dec
pop
sub
test
cltd
push
push
popl
xchg
mov
or
mov
pop
jmp
adc
loopne
and
hlt
mov
aas
in
push
sbb
mov
aaa
add
push
pop
cmp
mov
push
in
mov
gs
lcall
cmpsb
scas
int
pop
adc
mov
xor
int
mov
jle
movsb
test
cmp
and
jnp
mov
inc
gs
fs
or
in
mov
in
je
ja
cmp
jo
xor
test
lock
in
int
push
pop
pop
out
jmp
cmc
mov
sbb
jg
je
ret
pusha
inc
rolb
sbb
iret
sti
sbb
cmpb
icebp
sbb
push
insl
add
sub
inc
js
enter
push
pop
or
test
ret
mov
jnp
stc
push
rcrl
bound
je
jp
ss
cs
adc
aam
sbb
and
test
push
xlat
in
insb
push
pop
add
ds
dec
xchg
xchg
mov
aam
add
sbb
push
push
jbe
cmp
pop
loope
in
dec
jmp
test
aam
popf
ljmp
sti
mov
mov
add
in
test
dec
dec
insl
sub
push
adc
imul
outsb
push
jp
popa
add
hlt
test
fistl
je
pop
pop
lock
sub
add
in
mov
pushf
xor
jl
out
pop
push
dec
in
push
jmp
sbb
xchg
mov
inc
popa
hlt
jne
mov
outsl
mov
push
cmp
push
cmp
test
cld
lods
inc
repnz
fs
outsb
scas
fidivrl
push
xchg
xlat
push
gs
mov
inc
jp
inc
cmp
enter
or
lea
xor
sahf
loopne
enter
cli
inc
mov
pop
pusha
jl
loope
ss
sub
pusha
pop
cld
sbb
mov
mov
movsl
xchg
dec
nop
add
mov
mov
sti
std
xchg
cmp
and
test
jae
mov
lods
js
add
mov
add
repz
push
test
inc
pop
ds
insl
or
stc
cmp
js
pop
xchg
cs
mov
push
adc
int
flds
jb
mov
sub
lods
cmp
mov
lock
mov
fcmovnbe
aaa
mov
jge
call
mov
jno
mov
mov
sbb
loop
sar
arpl
outsb
jno
pop
in
push
inc
imul
pop
ds
and
xchg
adc
sub
outsb
xlat
mov
dec
xchg
lret
loopne
and
leave
movsl
mov
fdivl
test
jge
in
mull
into
xlat
fwait
xchg
js
fdiv
inc
stc
ud0
jbe
repz
int3
in
push
leave
jge
sbb
sbb
push
push
add
and
push
imul
sbb
jo
dec
lods
and
in
or
mov
leave
or
xor
insb
dec
cs
xchg
aad
lret
mov
jne
mov
mov
pop
idivb
movsb
dec
mov
xor
fldenv
or
push
je
mov
subb
loopne
gs
lea
loope
in
cmpsl
in
mov
inc
mov
sub
sbb
cmp
adc
cmp
sbb
lret
in
push
xchg
ljmp
mov
add
or
mov
aas
mov
mov
mov
inc
inc
push
rep
pop
mov
jmp
jmp
push
scas
fbld
mov
mull
aaa
loop
sbb
ss
aad
push
hlt
in
dec
daa
and
mov
jmp
popa
ret
jae
mov
pop
sub
dec
decl
scas
gs
mov
daa
jnp
sub
jnp
xor
pop
inc
mov
daa
dec
arpl
xor
xor
je
mov
mov
push
ljmp
dec
pop
inc
rcrl
dec
out
andl
mov
jle
loope
add
sbb
rcll
loopne
jbe
xor
test
jo
pop
cwtl
mov
lea
sbb
pop
inc
arpl
sbb
mov
and
mov
inc
scas
movsl
insb
add
mov
pushf
aas
ja
inc
cmc
pop
adc
xchg
cwtl
mov
add
mov
loopne
xchg
jo
mov
out
jl
or
jae
je
cmp
dec
pop
pop
leave
out
mov
aaa
jbe
inc
in
or
ud2
mov
jle
imul
out
jae
push
out
dec
pop
pop
test
jle
sahf
jno
push
and
out
xor
pop
scas
lret
mov
push
push
dec
ljmp
or
or
loope
aaa
lods
movsb
pop
out
xchg
movsl
bound
das
cs
pop
push
mov
pop
stc
jbe
jle
mov
sub
push
sbb
pop
in
jne
mov
mov
das
inc
add
mov
jmp
popf
test
shlb
addl
out
sbb
negb
dec
notl
inc
pcmpeqw
xchg
adc
sub
mov
inc
jle
pop
daa
mov
std
mov
push
jl
and
xchg
repnz
jg
out
sbb
dec
aad
lahf
subb
fsubrp
aas
ss
xchg
jns
sbbb
movsl
mov
loop
xor
in
mov
lock
dec
xor
pop
mov
pop
nop
cmpsl
and
sub
rolb
xor
into
mov
ret
push
sbb
insb
fstps
sbb
out
imul
jecxz
enter
scas
insb
out
xlat
pop
jno
sbb
icebp
mov
inc
xor
daa
nop
mov
xor
test
inc
xchg
jno
pop
ds
outsl
cmpb
scas
xorb
cmpsb
addr16
pop
pop
sti
jne
jb
clc
push
decl
xor
test
dec
xor
loope
mov
cmp
fdivl
pop
mov
fmull
mov
pop
jo
add
xor
lds
out
cwtl
sbb
add
xor
mov
cmp
rolb
stos
in
repnz
mov
inc
push
movsl
ds
inc
lea
enter
dec
pushf
inc
pop
or
inc
incb
lods
ss
xor
mov
cmpsl
sub
scas
or
jnp
cmpsb
xchg
dec
sub
popa
arpl
cmpsb
adc
push
cmpsl
jno
and
add
mov
lea
xchg
fisttpll
or
push
aaa
jge
sbb
daa
cli
or
out
sub
sti
jp
add
aas
push
xor
test
push
xor
lret
xorb
mov
cmc
mov
dec
mov
aad
mov
xchg
mov
es
ja
cmp
aam
test
mov
inc
jne
loope
cmp
outsb
xor
fisubrs
and
fists
imul
in
dec
jns
pop
push
mov
push
mov
cltd
xchg
xor
sti
rorl
jmp
push
cltd
cmp
jo
aas
dec
xor
adc
push
mov
cmp
out
stos
mov
sti
mov
loope
fadd
loopne
bound
cmp
and
lods
bound
stos
js
pop
pop
fiadds
ret
jg
and
cmp
lret
js
in
pop
xchg
mov
xlat
subl
lock
pop
and
jg
and
push
pushf
add
hlt
cltd
aad
loop
push
xchg
shll
xor
cmpb
xor
iret
scas
call
xchg
or
enter
push
and
jae
adc
adc
add
cmp
dec
mov
pop
enter
mov
nop
adc
xchg
push
in
xchg
cltd
jnp
rorl
pop
cmp
push
mov
jbe
inc
repz
in
jns
repnz
mov
mov
rolb
fldt
orb
sub
pop
mov
inc
jecxz
cli
jo
sbb
fstl
lret
pusha
jnp
loope
loopne
imul
mov
sahf
or
adc
sti
loope
sbb
ljmp
or
dec
cmp
cltd
dec
and
orb
pop
lods
data16
out
push
loop
aas
xchg
adcb
pusha
fcmovb
or
cli
shrb
aas
loope
popa
shl
ret
call
inc
sbb
cmp
sub
cmp
sbb
mov
sbb
lods
xchg
xchg
inc
ss
jnp
fstl
movsb
fsubrl
filds
jno
loop
mov
push
aam
cmpsb
fdivp
inc
maxps
adc
cmp
jle
jns
cld
jnp
dec
jno
in
fstpl
rorb
iret
or
jle
jmp
cwtl
and
fdivs
mull
loope
aas
inc
int
test
rol
arpl
aaa
add
jle
div
fsubp
mov
or
jae
xor
jmp
inc
cmpsl
lods
rcrl
xchg
dec
adc
or
outsb
cmc
call
xchg
mov
pop
sbb
lods
dec
lahf
test
test
sbb
mov
inc
mov
inc
imul
addr16
push
aas
pop
mov
mov
nop
xor
insl
push
pop
cwtl
pop
cltd
fidivrl
repnz
lock
cwtl
imul
mov
aad
or
xor
pop
fmuls
divl
mov
inc
lea
sbb
enter
pop
mov
lods
pop
lret
cli
dec
pop
pop
dec
loope
negb
je
jb
fwait
push
mov
shrl
xchg
mov
pop
gs
test
add
js
lcall
push
sarb
jg
repz
fcmovb
adc
in
cmpsl
adc
inc
push
jb
jnp
icebp
and
jo
inc
xchg
ja
test
out
mov
mov
enter
mov
into
cmp
lea
inc
popf
cld
cwtl
or
jbe
xor
mov
jo
aaa
pop
mov
sub
lods
xlat
mov
or
dec
xchg
mov
or
out
push
fsin
fiadds
and
jne
sbb
jmp
cli
xchg
pop
jne
popf
pop
cmpsl
mov
dec
mov
les
cmp
idivb
mov
xchg
jno
int
mov
fbld
icebp
mov
test
jge
add
xlat
mov
pop
repz
movsb
xchg
add
and
int3
dec
lock
mov
push
push
ret
sbb
call
movaps
add
sub
xchg
dec
outsl
inc
inc
cmp
inc
cmp
adc
add
cmp
sbb
stos
mov
outsl
shll
push
jp
jle
sub
inc
scas
ret
sbb
leave
idivb
adc
out
aad
repz
test
jle
frstor
mov
das
cmpb
or
inc
ja
mov
adc
loopne
cmpsb
mov
xchg
jns
and
aad
sbbb
jmp
push
loope
int
fisttpl
dec
push
cltd
lret
mov
push
jo
sub
sub
rcl
mov
xor
dec
je
bnd
int
shl
inc
cli
cmc
mov
adc
incb
mov
push
lcall
xor
xor
pop
cmp
pop
sbb
or
mov
lcall
cmp
lcall
les
fstpl
pop
pop
jnp
cmp
jbe
daa
push
dec
pusha
add
mov
adc
ficomps
out
into
mov
jae
out
fdivs
jae
stos
sub
xor
dec
mov
ret
insl
xor
cmp
or
cmp
div
test
add
ja
insl
jmp
jnp
out
daa
cmp
sbb
popf
aas
push
loopne
xor
repnz
sbb
jl
adc
dec
scas
mov
adc
test
push
test
adc
dec
dec
cmp
cmpsl
jb
jno
sti
or
mov
stos
clc
jge
jb
and
push
mov
inc
xlat
dec
add
scas
mov
lock
inc
mov
bound
xor
jbe
mov
mov
push
pushf
mov
es
sbb
test
jne
rorl
lods
sub
dec
xchg
gs
xchg
xchg
aaa
rcrl
ffreep
or
es
je
pusha
daa
mov
cmp
jnp
and
mov
aad
repz
pop
roll
loope
cmpsb
sbb
es
mov
shll
push
incl
cmp
enter
mov
lahf
lahf
cmp
ss
das
movups
sub
and
adc
and
bound
test
int3
xchg
push
mov
mov
es
add
add
daa
jp
mov
xorl
idivl
pop
test
push
or
push
sbb
aaa
and
sti
popf
xor
sub
pop
inc
and
and
add
loope
xchg
or
pop
jns
mov
jb
into
xor
mov
dec
jo
loop
mov
out
inc
sahf
lcall
fidivs
jp
jno
aaa
xlat
push
cmp
jns
fisttpll
pop
in
mov
sub
fistl
imul
and
scas
adc
jg
xchg
stc
cltd
aam
shll
dec
push
popa
fcmovbe
jmp
out
mov
shrb
es
fmulp
ss
fucompp
pop
xor
fwait
stos
pop
cltd
jne
fsts
repnz
cwtl
rorl
testl
mov
xchg
mov
cmp
jne
dec
mov
rcl
outsb
roll
cmc
add
in
in
movsl
cmp
sbb
xor
fildll
arpl
lea
xor
sbb
leave
mov
mov
movzbl
xchg
insl
lahf
xchg
sbb
mov
mov
xlat
add
mov
sub
inc
enter
jp
mov
clc
jl
dec
loope
add
lods
xor
dec
push
stos
adc
jg
or
icebp
push
lods
inc
pop
pushf
xchg
jo
push
in
test
xchg
movsb
pop
xor
sbb
jg
sbb
lds
cmp
pop
movsl
pop
imul
rcrb
xor
add
je
cmpsl
iret
stc
mov
xor
icebp
out
mov
into
shrb
lods
mov
ret
or
cmp
add
jae
das
std
test
jo
mov
or
cmp
pop
or
or
fs
jg
push
loop
mov
mov
mov
movsl
push
imul
or
stos
ficoms
mov
mov
test
pop
outsb
sub
out
mov
imul
out
ret
and
nop
inc
dec
mov
lldt
loopne
sub
je
pop
js
mov
push
dec
cmp
arpl
push
pushf
lock
or
cs
ret
mov
xor
mov
imulb
xlat
mov
outsb
jle
in
and
cmp
jns
add
lcall
stos
jno
pop
push
adc
mov
sub
push
push
xchg
jne
cmc
mov
and
aad
pop
pop
push
dec
enter
popa
lcall
lods
movsl
iret
in
jmp
mov
bound
repnz
inc
test
movhps
xor
jno
lock
inc
addr16
incb
notb
test
adc
out
adc
pop
test
adc
xor
cltd
in
insl
nop
jae
or
sub
xlat
fsts
flds
jge
adc
xchg
clc
popa
es
pop
clc
pop
or
rcll
test
adc
adcb
or
sbb
mov
pushf
rorl
sbb
fsubs
mov
cmc
test
outsl
mov
ret
or
adc
mov
lcall
es
rcrb
cwtl
mov
subl
sbb
mov
xchg
out
add
nopl
ret
pusha
mov
mov
out
hlt
int3
inc
bound
dec
xchg
xchg
sbb
orl
inc
movsb
xorb
pushf
pusha
out
lea
or
mov
or
icebp
and
mov
leave
les
out
gs
push
and
fwait
icebp
mov
mov
pop
repz
mov
pop
push
ds
imulb
mov
les
test
fdivs
fisubl
pop
clc
imull
das
jg
push
sbb
add
sbb
mov
push
shlb
insl
push
jo
or
jmp
cwtl
and
fs
cmc
xchg
pop
push
add
xchg
mov
dec
and
xchg
pop
inc
int
push
fwait
xchg
dec
mov
add
mov
scas
test
mov
ja
out
icebp
cmp
lea
std
jp
lock
int3
cld
mov
adc
mov
pop
movsb
sub
push
loope
pop
in
leave
in
and
lock
ljmp
mov
sub
nop
popa
and
jae
neg
imul
jno
push
mov
leave
or
cs
pop
xor
arpl
sbb
aad
lea
std
shl
cmp
test
jge
mov
and
test
fmul
or
inc
scas
stc
jp
out
inc
inc
jo
loope
dec
adc
repz
jno
cmc
rcl
adc
jb
xchg
add
mov
int3
adc
inc
fistl
xor
aam
mov
fstl
inc
mov
sbb
jle
inc
or
nop
out
mov
pop
mov
sbb
or
in
jns
jecxz
jne
mov
cltd
fcmovne
inc
ljmp
mov
push
aas
mov
xor
scas
loop
fildl
sbbl
mov
scas
add
add
pop
test
int3
push
sti
cltd
or
mov
out
push
push
cmp
sbb
dec
sbb
xchg
and
ret
fsubs
movsl
sbb
pushf
cld
cmpsb
dec
xor
xchg
sub
mov
add
dec
rclb
ds
mov
mov
sub
in
push
push
xor
adc
lret
and
fs
loope
xor
jno
dec
cmp
ds
sub
shrb
pop
enter
lret
pop
add
rcr
int
sbb
mov
mov
pop
ret
ret
pop
popa
std
mov
xor
pop
xchg
ret
lret
cltd
push
jno
xor
xchg
mov
mov
xor
push
ljmp
outsl
enter
adc
mov
or
mov
xchg
nop
pop
jb
mov
inc
fadds
test
mov
push
mov
fucom
mov
or
jmp
adcb
lret
mov
enter
fwait
outsl
mov
bswap
shlb
inc
and
sub
js
inc
sbb
aas
das
add
mov
scas
insb
push
jecxz
jg
pop
jl
mov
lret
mov
mov
push
dec
sahf
and
shrb
mov
xor
lcall
lods
pop
arpl
shlb
mov
adc
inc
ret
inc
xchg
jb
adc
jbe
loopne
xor
add
jp
mov
or
sahf
adc
repnz
or
mov
push
aaa
gs
cmp
addb
sarb
and
sub
ds
add
xchg
dec
icebp
sub
stos
iret
stos
push
or
or
mov
adc
dec
out
cmpl
outsl
inc
pop
cmp
imul
sbb
dec
pop
cmpsb
and
xchg
and
lcall
gs
inc
xor
and
std
jne
cwtl
jmp
std
jge
sbb
in
xchg
push
xchg
popf
xor
add
push
sahf
popa
in
rcl
fs
inc
and
push
divb
jl
sbb
andb
sub
movsl
ret
dec
rcll
adc
loope
cmp
xor
pop
mov
nop/reserved
push
ficoms
cmpsb
mov
mov
push
sbb
movsb
cwtl
clc
fcmovbe
imul
aas
fwait
add
xchg
sbb
lret
ret
adc
xor
call
popf
test
sbb
popa
dec
cmpb
jae
rcll
js
mov
adc
jns
push
xchg
out
sub
dec
inc
shlb
repz
dec
hlt
jg
pop
inc
inc
lods
xorb
gs
push
xchg
sbb
jne
icebp
sbb
pusha
je
imul
jns
lret
jg
nop
xchg
add
adc
insl
in
add
insb
inc
push
sbb
insb
mov
imul
sahf
mov
div
int
dec
sub
jns
or
xchg
je
aam
inc
sub
xor
jp
push
dec
push
mov
loop
addr16
mov
lods
subl
jl
mov
mov
fstl
fistpl
out
xchg
imul
sub
repz
mov
stc
adc
in
pop
or
stc
adc
push
adc
push
xor
push
add
xchg
test
testl
lods
das
outsb
loop
cmp
test
in
cmp
mov
dec
sti
cltd
push
jle
lea
arpl
divb
adc
jb
fldl
out
imul
xor
test
mov
and
pop
or
adc
or
ds
fcomps
sbb
mov
cltd
add
ljmp
nop
ret
dec
sub
lds
ds
dec
je
orl
add
movsb
pop
pusha
sbb
cmp
and
sbb
cmpb
scas
movsl
dec
mov
adc
jmp
jmp
sub
xor
xchg
xchg
add
das
inc
add
jge
iret
pushl
fnstenv
lret
divb
pop
movsb
fmul
jo
sub
sub
lret
lahf
outsl
lds
fcmovbe
mov
mov
xorb
inc
push
adc
loopne
jne
pop
xchg
sub
fists
jecxz
mov
add
fnstsw
mov
je
sti
cmp
adc
sub
dec
pop
sub
pop
lcall
icebp
mov
stc
arpl
jb
jmp
cwtl
loopne
stc
mov
insl
dec
jle
cld
sbb
xor
mov
outsb
movsb
orb
lods
cmp
adc
mov
mov
clc
jp
arpl
mov
inc
mov
and
jge
push
push
pop
mov
mov
lock
fdivs
sub
pop
loop
xor
cld
mov
cwtl
cmp
fdivl
push
cs
adc
xor
sbb
cli
sbb
pusha
jp
addl
mov
mov
jbe
jl
push
jmp
sahf
xchg
sbb
sbbb
jg
jo
mov
daa
lods
lods
sub
push
movsl
in
mov
std
aad
sbb
aam
imul
test
rcr
pop
sarl
pop
mov
outsb
fldl
mov
mov
iret
mov
ss
xchg
cwtl
aas
and
repnz
sub
fidivs
out
mov
jp
mov
adc
cmp
and
insl
xor
ds
cmp
add
ret
in
nop
int
sub
ret
mov
or
xor
sub
add
or
call
fildll
mov
clc
test
int3
pop
pushl
movsb
xor
std
pop
jo
sbb
lds
addr16
repnz
out
jno
add
or
inc
sub
mov
lret
test
lods
add
adc
or
negl
mov
jne
roll
cmpsb
mov
mov
xchg
into
ljmp
testb
cwtl
repz
xlat
cmp
std
xchg
mov
test
mov
and
mov
leave
insb
icebp
nop
xor
in
xchg
shll
test
mov
adc
xor
jne
popa
cmp
cs
mov
dec
fcmove
loop
sbb
inc
bound
arpl
imul
xchg
test
fucom
mov
aaa
enter
test
mov
in
sbb
adcb
and
pusha
gs
cmp
sub
xchg
mov
cmp
lret
mov
in
bound
rcll
xchg
cwtl
xchg
cmp
jp
dec
or
addl
mov
gs
xchg
gs
pop
bound
inc
adc
xor
mov
pop
in
data16
mov
pop
or
cld
or
sahf
xor
xor
push
adc
sbb
mov
iret
icebp
xor
out
dec
mov
orb
or
xor
orl
insb
mov
int3
lods
repz
iret
mov
mov
aam
aad
stos
enter
xchg
icebp
mov
pop
out
mov
inc
movsb
xor
xor
loopne
add
in
stos
icebp
sbbb
mov
in
aaa
jge
cltd
jno
dec
mov
inc
daa
movsb
addr16
pop
in
imul
loope
sbb
lret
sub
cmpsl
dec
lahf
addr16
stos
or
into
out
rcr
push
shlb
push
movsl
dec
mov
out
or
movq
adc
dec
pop
aad
add
sbb
loope
in
xor
inc
pop
add
or
out
sbb
pop
mov
pop
cmp
push
push
jo
nop
das
mov
lods
pop
push
jno
jns
movsb
aas
inc
push
popa
pop
sub
jb
xchg
mov
dec
cwtl
jecxz
or
aaa
push
fsubl
shrl
stc
mov
push
fwait
cmp
jae
cs
push
repnz
dec
mov
cmpsb
pop
sub
inc
add
jns
jmp
and
adc
mov
push
ret
xchg
push
fisubl
adc
int
fsubl
pop
xlat
mov
into
mov
jge
adc
lock
adc
nop
inc
dec
mov
sbb
ret
movsb
pop
sbb
daa
cltd
mov
or
mov
test
sti
je
daa
les
add
or
jge
movsl
lahf
push
in
gs
mov
in
mov
cld
jo
shrl
cmp
jg
or
jecxz
mov
cwtl
das
adc
adc
add
cli
xchg
sbb
int
int
mov
lcall
and
mov
sti
inc
cmp
jecxz
frstor
sbb
mov
jbe
add
test
jnp
xchg
cmp
repnz
and
or
sub
push
jl
leave
movsb
sbb
lea
xor
std
or
push
lds
loop
xchg
sti
movsl
pop
adc
dec
in
sub
outsl
sub
mov
outsl
ror
add
inc
push
test
sbb
leave
fcoml
push
bound
push
or
jl
leave
sub
lret
xchg
add
mulb
jno
mov
test
out
sarl
adc
movb
rcrb
pop
cwtl
sbb
xchg
cmp
es
xchg
push
pop
shl
mov
repnz
adc
pop
fnstsw
sbb
ss
xchg
fcomip
pop
icebp
test
movsb
loop
add
fsubs
cmp
in
andb
dec
xchg
movsl
mov
fimull
add
adc
mov
xchg
or
out
mov
cmpsl
mov
stos
xchg
adc
rol
mov
push
sub
adc
jae
push
mov
mov
pop
add
and
jmp
outsb
dec
data16
add
inc
sub
inc
mov
mov
imul
mov
vpsubusw
pop
xchg
push
jne
fimuls
jnp
mov
sbb
adc
popf
xchg
mov
stos
ficoms
or
push
or
negl
in
xchg
clc
repnz
hlt
dec
sbb
adc
and
mov
stc
popf
pop
int3
sub
jnp
daa
lds
lods
jl
cltd
mov
icebp
mov
scas
push
mov
int
in
push
test
sub
fwait
push
das
rolb
fwait
mov
mov
adc
and
mov
mov
sbb
scas
int3
cwtl
jg
lahf
dec
pop
mov
das
mov
fildl
or
in
call
rolb
dec
adc
lcall
loopne
std
lods
notb
mov
push
adc
inc
dec
dec
jge
xor
std
in
aam
xor
pushf
dec
lods
out
sbb
jo
scas
pop
out
imul
mov
lahf
cmpsl
pop
int
js
mov
fimuls
jmp
lret
mov
mov
stc
jb
cmp
and
fs
xchg
mov
cmpsb
adc
push
mov
clc
mov
mov
inc
push
movsb
shrl
sbb
jns
mov
mov
jl
jb
jmp
mov
mov
or
js
mov
mov
cmp
pusha
jbe
scas
add
inc
jne
mov
jo
mov
test
inc
xchg
mov
xchg
mov
out
jb
mov
clc
sub
insb
add
sbb
leave
mov
mov
xchg
subb
repz
testl
push
fisttps
xchg
mov
cmpsl
xchg
mov
mov
test
insb
mov
sbb
std
sti
arpl
mov
rcrb
sbb
arpl
xor
sub
scas
or
pop
mov
hlt
dec
cmp
fwait
addr16
pop
loope
ds
pop
dec
cmc
sahf
mov
sub
mov
mov
cmp
ret
cmp
jl
push
mov
sbb
inc
mov
mov
xor
les
scas
or
ret
sbb
dec
push
cmpl
repnz
inc
cmp
test
cmp
cmp
push
push
cmp
std
vpmaxub
ret
inc
mov
in
aad
outsb
cli
cmpb
push
scas
push
ja
pusha
test
or
inc
subl
callw
int
pop
jecxz
and
in
cli
mov
inc
sub
pop
or
pop
inc
adc
jb
ss
scas
cltd
push
push
sub
fcompl
xor
gs
fs
mov
and
fisubs
stos
in
inc
loopne
cltd
std
insl
jecxz
in
and
rcrb
popa
mov
mov
lea
stos
test
es
mov
push
push
mov
std
or
adc
movsb
loopne
jecxz
add
cwtl
jg
mov
pop
inc
sub
mov
aaa
into
arpl
pusha
mov
in
xor
and
not
jns
mov
pop
shrb
mov
sti
add
xor
dec
test
push
fisubl
sahf
lods
mov
push
sbb
add
or
test
add
xchg
inc
push
sbb
and
adc
pop
lods
push
and
int3
cli
mov
js
and
xchg
fs
mov
in
or
sbb
fs
mov
sbb
sbb
sbb
je
jns
add
adc
outsb
pop
aad
int3
js
or
cmp
jmp
jl
mov
bndstx
aas
clc
sub
adc
add
add
leave
ret
out
or
nop
mov
push
stc
jne
lahf
push
movsb
in
jp
subl
shr
or
into
pop
data16
mov
popf
das
pushf
xchg
xchg
stc
test
pop
sbb
out
jb
sbb
cld
jp
cmpsl
in
jno
dec
pop
push
and
leave
addr16
mov
mov
push
xor
push
rorl
fwait
dec
scas
jmp
addr16
es
movsl
xor
pop
xlat
sub
orl
xlat
into
cmpl
jge
xor
fstl
pand
cmpsb
das
mov
inc
cltd
inc
sbb
jnp
xchg
subb
ja
adc
negb
pop
addl
or
movsb
xchg
test
daa
xor
mov
lock
xchg
cmp
lret
push
shl
mov
inc
inc
sti
jne
push
rcll
jo
daa
not
mov
mov
add
repnz
sbb
aam
test
lcall
movsb
add
lock
pop
push
call
jmp
rorl
jns
out
shrl
pop
inc
icebp
inc
stos
outsl
imul
mov
negb
mov
cmp
out
pop
loop
je
iret
sbb
stc
mov
in
and
pop
adc
push
lcall
call
aam
inc
or
js
add
int
jecxz
mov
xor
and
and
xor
jg
xlat
jg
repnz
test
cmp
imul
or
mov
scas
mov
int
push
dec
or
lock
rcr
pusha
lds
or
scas
loop
mov
popf
gs
sbb
addr16
jns
sbb
ja
jnp
pop
mov
addr16
push
cmpsb
out
movsb
dec
insl
cmp
sarl
fsincos
mov
aam
mov
popa
shlb
push
int3
shlb
or
push
push
mov
jle
movsl
sahf
jnp
cmc
mov
push
pop
pop
popf
js
adc
add
scas
sbb
cs
nop
sub
xchg
into
ss
xchg
nop
das
or
cmp
out
xchg
repnz
xchg
das
xchg
movd
in
mov
movsb
mov
jno
and
or
in
mov
sbb
dec
push
pop
cmp
mov
and
lea
insl
movsb
or
repz
hlt
inc
and
push
and
dec
int
xchg
call
and
lock
push
and
cmp
addr16
cs
mov
push
jns
pop
mov
daa
imul
cli
popf
push
push
mov
lcall
nop
mov
add
shll
pop
icebp
pop
sub
scas
sbb
xor
mov
mov
jbe
cltd
sbb
mov
mov
push
mov
aas
jb
in
or
fstpl
hlt
dec
cld
mov
push
mov
addr16
xlat
lea
lods
movsl
xor
call
popa
push
int
xor
dec
cmpsl
clc
fbld
add
in
sub
xchg
sbb
pop
repz
mov
xor
mov
repz
in
lea
lcall
adc
inc
fidivs
sub
xor
ds
out
push
loope
jmp
popa
mov
xchg
lret
imul
pop
push
mov
test
in
enter
ret
pop
dec
aaa
jecxz
push
jae
addl
mov
push
cmp
insb
mov
scas
xchg
xchg
xchg
inc
lret
inc
push
jb
mov
loopne
cmc
dec
mov
add
xchg
lret
adc
stc
sub
jl
and
and
cli
incb
in
jbe
addr16
pop
mov
adc
out
cmp
arpl
outsl
addl
testl
adc
sbb
mov
cmpsb
scas
aas
jo
out
jle
jo
jns
inc
in
idivb
add
adc
inc
pop
movsl
pop
pusha
es
lods
xchg
mov
jae
je
push
and
xchg
lock
mov
xor
push
mov
sub
rolb
mov
cld
test
enter
sub
mov
push
jns
dec
iret
dec
incb
minps
adc
cmp
pop
jo
push
push
sbbl
repnz
sub
push
jno
and
iret
xlat
mov
cmp
lret
adc
xchg
push
out
fiadds
scas
sarl
mov
lahf
cmp
fistpll
call
into
push
xorb
jae
push
stos
lret
in
fstpl
dec
jge
test
mov
jecxz
or
add
pop
ljmp
push
xchg
mov
adc
daa
push
mov
ret
jg
loope
mov
ss
sahf
pop
xchg
jno
clc
adc
pop
xor
cmp
cmp
cmp
pushf
lret
jg
sbb
xchg
and
jb
push
in
pusha
test
mov
adc
mov
and
loope
stc
dec
dec
and
add
pop
outsb
out
push
add
add
lods
xchg
repz
into
xchg
lods
push
pop
enter
divb
mov
pop
xor
or
mov
push
inc
lahf
or
cli
jl
das
cmp
inc
fcoml
insl
std
lcall
lods
inc
push
add
mov
sub
mov
leave
loope
inc
test
mov
inc
call
mov
ljmp
fcompl
push
jno
pop
mov
adc
fisttpll
loopne
inc
popl
les
cmp
mov
cld
dec
pop
pop
or
outsb
mov
ret
call
mov
xor
pushf
mov
cwtl
shll
mov
mov
xchg
mov
add
test
pop
movsl
dec
cmp
les
pop
add
testl
push
popf
xchg
notrack
sbb
push
or
jnp
mov
ret
mov
pop
xor
lock
loope
mov
testb
or
int3
xchg
es
loopne
dec
cmc
jno
and
addb
mov
mov
into
xor
mov
xchg
xor
and
cmp
push
addr16
call
xchg
shlb
and
stos
fwait
mov
lret
orb
and
mov
dec
xchg
sbb
dec
sbb
or
sbb
mov
push
push
gs
daa
jmp
rolb
lret
jge
lock
mov
xchg
dec
xchg
test
addb
mov
mov
fadds
popf
repz
fs
rorl
adc
aas
xor
jecxz
add
xchg
fwait
jg
cmp
scas
mov
sub
mov
dec
mov
cmpsb
pop
repnz
mov
scas
and
xchg
jo
jecxz
loopne
gs
jo
jno
sub
mov
mov
inc
adc
mov
negb
pop
and
lea
sbb
push
cmc
cli
out
inc
mov
lret
mov
shl
fisubrl
xchg
sbb
das
sti
ljmp
fimull
fisubs
sub
sbbb
aam
es
sub
ficomps
out
or
test
es
adc
mov
and
inc
jp
adc
mov
faddp
xchg
addb
ljmp
aam
out
xor
mov
outsl
sub
or
or
ds
mov
and
pop
pop
pop
and
sub
lahf
jecxz
or
and
das
cmp
stc
jnp
pushf
dec
pushf
adc
out
insb
jns
jb
push
mov
and
subb
mov
adc
push
dec
dec
fdivrp
jp
adc
clc
adc
push
fistps
mov
adc
stc
push
cmp
std
xchg
into
mov
dec
outsb
mov
icebp
icebp
dec
lret
out
fsub
sub
push
mov
aam
das
aam
js
inc
xchg
ret
xlat
cmp
fsubrl
xor
jp
push
xchg
xchg
push
aad
sbbb
add
xchg
and
test
out
mov
inc
repz
sbb
sbb
push
pop
pusha
jne
in
pop
mov
std
and
lcall
ret
fisttpll
aad
mov
movsl
mov
arpl
cli
push
xlat
aas
lret
sti
dec
orl
xchg
xor
inc
sbb
or
cmc
orb
or
movsb
ljmp
mov
adc
je
das
inc
call
sub
inc
loope
mov
das
push
add
dec
out
lea
popf
xor
adc
pusha
pop
push
mul
sbb
call
mov
xor
mov
jg
rorl
aaa
imul
dec
jno
subl
test
mov
out
out
and
loopne
add
jns
cmp
movsl
clc
jmp
cld
add
adc
xor
pop
ljmp
arpl
pusha
sbb
mov
sbb
push
pop
and
js
xlat
sbb
push
fs
aad
lret
push
dec
out
mov
stc
clc
sbb
arpl
mov
cld
pop
testl
out
pop
ljmp
and
fiadds
in
insb
in
hlt
aaa
dec
jmp
jecxz
loope
add
xchg
out
cli
imul
jge
repnz
cmp
pop
and
in
fwait
nop
popf
jle
cmp
mov
fcmovnb
aad
push
ja
pop
frstor
cmp
add
sbbl
scas
jne
xor
xchg
mov
cmpsb
mov
mov
rolb
and
add
push
inc
scas
and
call
popa
fiaddl
cs
mov
mov
mov
and
jge
inc
mov
popa
jp
les
xchg
popa
subl
push
jmp
mov
xor
cs
lcall
pop
mov
imul
orl
out
std
pop
out
and
shl
inc
dec
icebp
jb
push
dec
pop
cld
test
sbb
mov
enter
push
pusha
loope
clc
stos
leave
dec
insb
xor
fwait
push
or
jae
cmp
sbb
adc
push
data16
adc
xor
xchg
push
xchg
popf
adc
or
add
cltd
jecxz
adc
mov
hlt
ret
cmp
or
inc
mov
adc
lahf
sbb
jne
mov
pusha
in
lea
pusha
or
push
sti
testb
ret
mov
ljmp
mov
enter
inc
out
xchg
dec
in
fwait
jne
xorb
adc
dec
sub
rcll
fisubl
dec
or
sub
data16
jae
xchg
leave
movsl
ds
xchg
outsb
pop
mov
shlb
scas
out
cmp
and
aas
xchg
test
cwtl
sbb
push
or
dec
and
aam
out
cmpsl
ds
and
add
loopne
test
cmp
xchg
pop
loop
das
aam
push
arpl
aam
mov
rcrb
xchg
lock
imul
fldenv
dec
xchg
mov
adc
pmulhuw
ret
jmp
jmp
xor
xchg
lods
cmpsl
dec
addr16
jp
lcall
xchg
pop
sti
cmp
xchg
pop
lahf
pop
or
out
cmpsb
fwait
jge
jnp
pop
sbb
insb
mov
out
mov
in
mov
or
xor
loop
mov
in
inc
pop
dec
pop
ret
jnp
scas
jb
xchg
call
jge
ret
add
cmp
rol
es
in
icebp
ret
sub
lds
xchg
stos
out
cmp
std
stc
pop
stos
int3
daa
in
pop
cs
lods
add
cmpsb
cmc
fiaddl
out
xchg
mov
pop
push
xchg
mov
cmp
dec
mov
dec
insb
ja
es
dec
or
pop
jne
mov
ds
mov
pop
cmpsl
std
std
pop
sbb
arpl
xor
and
fs
adc
cs
jmp
inc
test
adc
dec
push
in
stos
or
fstpt
nop
mov
or
xor
les
or
xchg
and
jge
push
in
xor
mov
data16
jle
cmp
sbb
popa
fwait
je
test
mov
fidivrl
adc
sarb
ficompl
mov
adc
xchg
sbbb
in
sbb
xor
lcall
imul
arpl
fimuls
mov
rolb
je
addr16
mov
clc
and
push
decb
sahf
adc
xor
or
and
popf
shrb
jbe
cmp
and
mov
movsl
jecxz
push
jns
std
mov
nopl
pop
sbb
fstl
shl
mov
loop
lock
cwtl
pushf
mov
sbbb
add
cmc
arpl
pushf
ja
add
movsl
dec
sti
incb
adc
dec
hlt
andl
test
aad
test
dec
sbb
cli
testl
fwait
into
dec
xchg
jae
sbb
xchg
or
into
pop
fstps
dec
aad
rcr
sahf
add
ret
sub
sub
xchg
fsubl
test
aad
and
cli
xchg
mov
adc
jbe
ret
fadd
or
cmp
push
mov
mov
inc
imul
nop
jae
add
or
add
inc
pop
add
negl
sbbb
movsb
addr16
dec
sub
inc
sti
sbb
mov
mov
in
sub
sbbb
data16
xchg
pop
int3
or
mov
inc
push
das
add
mov
sbb
xor
jle
mov
cli
les
insb
sub
mov
out
or
xchg
mov
lahf
fdivs
mov
lds
jmp
stc
lret
lods
loopne
sub
push
cmpsl
push
add
arpl
xor
adc
xor
pop
or
sub
jnp
stc
and
dec
mov
add
sbb
frstor
mov
ja
fabs
aam
bound
pop
pushf
stc
push
jbe
inc
rcrb
and
add
in
jo
movsl
scas
sub
std
push
call
cs
adc
jno
test
sub
cmpsb
popa
outsl
dec
data16
mov
ret
xchg
loopne
mov
pop
mov
and
and
ja
xchg
es
push
rolb
hlt
ss
loopne
ljmp
mov
test
cmp
and
aad
rolb
out
adc
jns
ja
out
lds
je
lods
xchg
lea
mov
mov
jae
ja
int3
shll
es
fwait
movsb
push
outsb
fs
push
out
cmp
cltd
testl
iret
xchg
mov
sbb
mov
sub
aad
inc
ds
out
jecxz
std
xor
xor
stc
fsts
sub
and
push
push
repnz
xlat
out
xchg
addr16
out
adc
mov
mov
ret
imul
dec
sub
cmc
clc
ret
xor
test
hlt
xlat
xor
imul
fisubs
push
dec
jecxz
jns
pop
out
sbb
jbe
testb
and
pusha
mov
mov
scas
repz
push
push
outsb
les
push
out
dec
mov
test
xchg
cli
and
add
mov
lods
fisttps
loop
jp
push
shrb
and
cmpsl
sub
mov
std
push
aam
jb
call
push
loope
lcall
push
into
push
stos
aaa
enter
mov
rcrb
adc
sbb
mov
clc
xor
rcrb
call
mov
cs
mov
mov
cmp
push
andb
jae
mov
cwtl
cmpsb
js
loope
test
test
sbb
lods
pop
imul
out
cwtl
popf
push
insb
js
and
mov
cmpsl
dec
sbb
cmc
bound
fsubp
out
ljmp
mov
cmpsl
mov
scas
mov
lods
scas
in
test
into
xor
ror
leave
push
mov
and
cli
jecxz
push
into
mov
mov
lret
or
in
push
pop
out
push
xchg
xor
mov
pop
adc
out
xor
aas
rcrb
pop
inc
out
dec
ret
xorl
iret
adc
sbb
jge
addr16
push
ja
jae
or
insb
orl
push
mov
push
jl
dec
data16
test
add
pop
add
insb
add
push
in
sbb
ds
xchg
xchg
data16
jae
pop
push
ss
decb
ss
call
and
sub
fidivrl
push
insl
scas
dec
cs
andb
push
mov
lds
xor
dec
jbe
hlt
cmp
fsub
sub
adc
das
aam
jle
mov
mov
mov
stc
and
fcmove
pusha
cmp
xor
test
jne
movsl
jge
dec
mov
mov
mov
pop
and
jae
pop
idivl
cmp
sbb
mov
inc
rcrl
and
mov
mov
les
and
jns
clc
mov
negl
mov
xor
daa
cmp
jle
mov
test
sbb
jge
mov
push
push
pop
lret
xor
push
mov
mov
sbbb
cltd
jnp
stc
mov
cmp
mov
js
mov
lret
pop
mov
cmpsl
in
cmpsl
sbb
lcall
loopne
stc
mov
inc
sarb
adc
frstor
mov
jne
ret
sub
fbld
jmp
jne
jne
mov
sti
pop
orl
mov
add
movsb
jnp
ficompl
stos
inc
add
sub
sahf
push
cmp
insb
pop
cs
mov
insl
lcall
clc
aam
call
xor
xchg
loope
fcmovnu
add
and
je
pop
and
mov
fdivr
test
sti
sbb
add
shrl
outsb
mov
jecxz
cli
jne
lods
cmp
loopne
sbb
add
shl
inc
xchg
adc
push
sub
rclb
push
insb
insl
inc
test
pusha
mov
inc
push
fdivp
jo
inc
and
jbe
pusha
inc
in
lds
xchg
pop
push
xor
shll
sub
cmp
sub
sbb
dec
mov
ror
pop
loop
mov
adcl
sbb
push
xchg
pop
and
les
std
dec
jl
insl
jmp
insb
stc
push
addr16
test
xor
mov
push
sbb
stos
cmp
aaa
sub
jae
push
pop
loopne
adc
dec
les
xchg
pop
or
lods
fs
sub
fldt
xchg
or
pop
cmp
test
loop
mov
rorb
cmpsl
or
ficoml
lcall
pop
jnp
lods
mov
xor
hlt
mov
stos
fistps
mov
mov
js
lea
lea
pushf
lret
in
inc
or
cmc
add
push
imul
mov
sub
mov
bound
fstpt
xor
jg
xchg
fidivrs
xchg
mov
fists
lcall
insb
out
pop
cld
pop
mov
ss
xchg
addb
imul
mov
sbb
iret
movsl
or
arpl
adc
cmp
and
xor
inc
lcall
or
nop
das
enter
cmpsl
test
pop
sub
insl
dec
mov
pop
xorb
cmpl
and
rolb
or
cmp
out
mov
shrb
push
cmpl
std
add
lret
fwait
jl
fwait
dec
data16
mov
xor
sub
dec
dec
jns
fsubrs
je
mov
iret
push
inc
fdivs
mov
pushf
popf
inc
or
xchg
push
cmc
jmp
sbb
xor
add
jg
mov
stc
and
push
cmp
testl
mov
test
outsb
dec
aam
test
test
jns
pop
xchg
cmpsl
xchg
scas
jno
push
and
mov
mov
fidivrs
sbb
je
jns
adc
inc
sti
mov
dec
mov
sub
inc
mov
push
ret
mov
out
js
daa
jle
jns
and
inc
cli
adc
sub
fsub
repnz
into
shrl
fstpt
out
call
or
sub
pop
mov
jp
jp
pop
adc
nop
in
mov
push
arpl
or
dec
pop
mov
jp
adc
jb
or
sub
enter
fldt
dec
daa
mov
sbb
repnz
mov
das
mov
insb
mov
scas
push
fcomp
fwait
jbe
mov
arpl
std
push
inc
mov
aaa
push
pop
add
in
pushf
jecxz
mov
add
cmp
fsubr
mov
lcall
outsl
and
adc
in
loope
and
xor
cli
aas
mov
aas
loop
adc
push
sarl
incl
pop
inc
hlt
flds
add
dec
gs
mov
pusha
jp
cmp
push
repz
fdivrl
lea
shl
pop
push
and
sub
fnstenv
dec
xor
xchg
lods
adc
jb
sbb
xor
enter
test
sub
cli
js
jns
loopne
xor
pop
cli
push
mov
insb
cltd
jne
pop
dec
mov
repnz
rolb
push
push
jbe
inc
xchg
mov
mov
add
addr16
mov
sub
repnz
fsubs
xor
xor
cmpsl
pop
jle
cmpsb
pop
sub
lea
cltd
inc
insl
std
imul
push
outsb
mov
push
sub
xor
jne
adc
push
daa
mov
les
pop
xchg
jmp
lock
or
shll
sbb
adc
ret
lcall
je
mov
jb
call
xor
mov
cli
mov
in
or
cmpsl
sbb
cmp
clc
sahf
jg
add
and
pushf
xor
rclb
xor
pop
aam
das
cwtl
imul
movsl
mov
jnp
pop
cld
adc
icebp
mov
mov
mov
xchg
mov
jmp
mov
test
and
dec
lods
push
xorb
sub
test
or
shl
mov
adc
push
inc
cmp
daa
lods
mov
in
nop
dec
pushf
inc
cltd
loopne
in
fwait
xor
movsb
and
sub
test
sbb
lcall
aad
addb
lds
movsb
sti
or
inc
push
xor
add
add
stos
mov
scas
inc
and
or
lods
pop
jnp
add
dec
fiaddl
sarb
mov
sub
pop
xlat
pop
push
add
mov
mov
pop
into
sbb
mov
dec
cmp
js
je
xchg
pop
jnp
sub
in
mov
push
add
lock
cmp
lods
outsb
cmp
xchg
ret
cld
and
cs
push
imul
jne
pop
movsl
and
adcl
xchg
and
ljmp
rcl
or
int
fwait
or
lahf
push
jae
xchg
repnz
fisttpll
jmp
loop
mov
outsl
loope
dec
in
push
clc
aam
scas
cmp
or
or
xlat
xor
test
mov
aaa
lcall
xor
dec
aam
sbb
popf
inc
les
icebp
jae
inc
outsl
pushf
adc
mov
push
mov
mov
push
imul
xchg
mov
imul
mov
inc
andb
insb
pusha
stos
pop
fs
jne
js
jge
jmp
shlb
mov
xchg
mov
int3
xchg
mov
push
cmpsb
insl
pop
add
ret
hlt
push
mov
or
and
out
jge
sub
out
lahf
mov
pop
call
sub
ss
or
add
dec
repnz
sbb
scas
or
xor
loope
mov
ret
mov
xor
adc
test
mov
bound
lahf
push
xor
jo
and
jle
or
xchg
rcll
xchg
bound
fisttpll
push
movsb
push
subl
push
insb
roll
dec
xchg
mov
cmpsb
and
js
seta
mov
xchg
lahf
lods
xchg
inc
dec
lods
fs
add
mov
pushf
subl
iret
repnz
dec
es
inc
sar
aaa
les
mov
fdivr
push
aad
pop
cmp
lods
cmp
cld
and
hlt
jno
adc
addr16
inc
dec
sub
mov
mov
jb
pop
dec
shl
dec
xchg
sub
mov
cmpl
int
and
xchg
shlb
mov
aaa
xchg
jno
divl
inc
pop
mov
inc
insl
clc
test
push
dec
loope
adc
xchg
cltd
es
xchg
ret
mov
loope
push
jg
inc
movsb
push
pop
fstpt
sbb
and
in
outsb
stos
lret
or
cmpsl
push
push
cmpsb
scas
movsb
xchg
mov
or
push
aam
ret
dec
xchg
xchg
in
mov
ret
aaa
push
mov
addl
mov
jne
shll
push
js
cmpsl
out
leave
stos
inc
jae
call
pusha
mov
fninit
jne
ja
mov
adc
mov
outsl
addb
lcall
iret
jmp
test
into
pop
mov
fsubs
movsb
xchg
push
inc
js
mov
cli
cwtl
movsb
cmc
aas
inc
pushf
add
test
cwtl
mov
push
push
fisubl
fadd
push
popa
pop
mov
ffreep
inc
ja
xchg
rcrb
jae
jns
rol
stc
xor
movsl
sbb
dec
cmpsl
ret
orb
lods
or
mov
idivb
inc
cwtl
ja
pop
jl
popa
data16
clc
mov
ja,pn
fisttpl
mov
loopne
mov
adc
das
shrl
cmp
bound
push
xchg
fldcw
cmpsl
std
pushf
cmp
insb
add
mov
push
xor
ds
jmp
inc
sbb
xchg
mov
xor
imul
jmp
sbb
cwtl
aaa
fbstp
imul
test
mov
test
xorb
mov
pop
push
popf
mov
cmp
and
mov
in
pop
sub
scas
mov
les
pop
mov
mov
jnp
sbb
and
imul
pop
inc
sub
stc
test
mov
popa
and
mov
shrl
ret
jnp
dec
cmovp
add
ljmp
enter
or
sbb
sbb
daa
sbb
add
sub
add
xor
dec
push
iret
testl
pop
out
mov
sbb
test
jecxz
and
daa
rcrl
mov
jns
ljmp
aad
mov
mov
sarl
adc
sbb
leave
ficomps
insl
stos
out
and
scas
andb
push
pop
ss
and
mov
sub
mov
cld
mov
imul
lahf
out
test
mov
xlat
xchg
and
jle
lea
mov
inc
addps
cmp
xor
push
mov
enter
insl
insb
adc
out
das
das
xlat
imul
pop
es
mov
es
inc
push
shlb
decl
push
add
aas
adc
je
or
ficomps
mov
adc
sub
aaa
fsts
popa
lret
fisttpll
pop
ret
test
mov
push
lahf
in
ret
data16
int
out
pop
cmpsl
xor
stos
fildll
xchg
sub
ret
ljmp
and
and
out
repnz
cltd
cmp
mov
mov
cli
mov
cli
sub
mov
test
movsl
cmp
push
or
push
test
mov
dec
cmpsl
mov
pop
jg
icebp
clc
adc
jmp
jl
dec
or
sub
and
out
pop
pop
mov
xchg
dec
inc
cmp
push
jge
cmp
ds
outsl
xor
and
mov
jle
inc
sti
dec
cmpl
dec
add
cmpsb
xor
clc
stos
push
rcll
xor
pushf
mov
gs
pop
push
mov
lret
jp
movsb
inc
jae
pusha
dec
int
inc
daa
jne
test
mov
div
dec
sahf
aam
cmp
xor
sbb
adcl
xchg
pop
shrl
or
leave
test
andb
xchg
dec
sub
fmull
xor
outsl
fcmovne
insb
notb
jno
mov
mov
push
dec
jb
mov
or
push
adc
out
fucomp
inc
sub
adc
xorl
push
jo
mov
inc
cmp
fstps
inc
hlt
push
jl
out
or
ds
fidivl
dec
jae
xchg
mov
pop
mov
ficompl
jb
into
idivb
lods
int3
pop
jo
arpl
cmp
push
rcr
pop
xor
aam
push
adc
jl
pop
repnz
or
jns
cmp
jp
seto
mov
push
sbb
mov
imul
dec
and
adc
int
insl
xchg
mov
add
clc
test
dec
pop
pop
sub
or
imul
xor
mov
bnd
cltd
insl
and
je
adc
pop
out
lods
cs
enter
inc
loopne
cmc
es
ret
jbe
pushf
push
cli
int3
add
imul
pop
rol
pop
int3
aad
mov
jns
insb
push
sarl
and
pop
xchg
mov
test
add
les
cmp
pusha
dec
repz
inc
addr16
cltd
lea
push
add
stos
pop
and
xor
mov
daa
mov
sub
clc
or
sub
roll
in
xor
out
shlb
das
lret
dec
nop
and
dec
imulb
fsubrl
shll
push
mov
xor
xor
jo
inc
decb
bound
dec
pop
insl
fnstsw
jne
fwait
aam
push
in
mov
jle
dec
push
lcall
outsl
lahf
inc
popl
pusha
pop
mov
imul
mov
into
data16
inc
bound
and
xchg
ret
push
ja
lea
add
fadd
test
test
or
mov
fistl
imul
mov
aas
sub
sub
movsb
fld1
daa
imul
in
jmp
xchg
adc
adc
cld
inc
inc
adc
dec
xor
out
sbb
or
xchg
add
pusha
adc
adc
add
jns
adc
pop
fsubr
test
cmp
sub
icebp
xor
mov
jp
push
stos
inc
push
sub
arpl
push
inc
mov
subl
jle
repz
xchg
ds
pop
rolb
jecxz
add
mov
imul
and
jp
xchg
leave
mov
call
push
lods
or
mov
dec
loopne
mov
inc
inc
movsb
cmc
mov
cs
xchg
lods
and
cmp
shll
aas
mov
or
or
out
push
xchg
in
adc
mov
adc
fwait
push
mov
cmpsb
orb
insb
dec
divl
push
call
mov
or
inc
push
sub
push
call
cmp
popa
inc
and
ds
push
dec
outsb
and
mov
xchg
ret
jecxz
cmp
lea
int3
divb
lock
shrl
stos
add
icebp
dec
adc
movb
cmc
sbb
lcall
xchg
rolb
cmpsb
cmp
dec
sahf
mov
mov
mov
rorb
fisubl
inc
cmp
dec
outsl
pop
iret
data16
xchg
jb
std
mov
repnz
add
jno
lea
jg
pop
xchg
xor
aam
mov
jle
mov
call
test
adc
frstor
shll
cs
xchg
cmp
xor
mov
mov
std
outsl
pop
push
jb
or
xchg
js
out
xchg
add
xor
bswap
or
cmp
xorl
push
dec
fsubrl
pop
add
add
lods
push
aaa
pop
cmc
cwtl
callw
in
push
sub
xchg
cli
std
sahf
sti
sbb
cmp
in
in
xor
jmp
shrl
xchg
sub
ja
addr16
jmp
sahf
mov
gs
xchg
adc
mov
mov
xchg
pop
es
push
mov
movsl
xchg
mov
fnstcw
pop
ds
xchg
fistps
sub
lds
cld
ljmp
add
incb
mov
mulb
push
jne
push
xor
sub
enter
into
scas
mov
xlat
inc
mov
aam
lret
cmp
jns
sub
hlt
mov
xchg
call
jns
fs
jle
dec
push
add
xchg
jb
jg
sti
int
pop
das
pushf
scas
iret
ljmp
inc
fmull
fwait
ljmp
sbb
repnz
cmc
fs
jge
lahf
mov
jle
xlat
movsl
adc
mul
sub
mov
ja
das
imul
cs
push
in
jo
frstor
adc
add
inc
inc
jle
ds
repz
dec
xchg
mov
outsl
inc
das
jecxz
mov
inc
mov
jno
std
jno
dec
mov
mov
and
dec
fistpl
and
rcl
lea
cmp
or
in
repnz
notl
push
imul
fsubp
insb
stos
and
loope
cmpsb
daa
jp
mov
jg
test
cmp
push
pavgw
xlat
popa
testl
push
fsubrp
sub
pop
push
call
mov
push
out
or
adc
das
mov
lods
xchg
or
pop
imul
dec
testb
pop
out
mov
inc
incl
aad
enter
aas
lock
or
in
xchg
push
and
xor
mov
subl
adc
insb
daa
adc
xor
jae
jge
cmpsl
xor
sahf
ret
push
mov
add
xlat
inc
test
bnd
mov
mov
bnd
mov
loopne
mov
jno
stos
inc
push
shr
pop
or
outsl
jno
jmp
and
jae
inc
jle
jnp
repnz
push
mov
hlt
push
mov
xchg
nop
push
das
aad
sbb
bound
cwtl
mov
add
sub
pop
and
sbb
out
jle
mov
movsb
cs
jge
mov
mov
xor
cmpb
mulb
dec
and
test
outsl
mov
out
add
pop
aas
pop
mov
cmp
xchg
sub
cmpsl
jg
dec
hlt
pushf
pop
mov
mov
ud2
inc
jle
shr
sbbl
nop
push
cwtl
sahf
jp,pt
fdivrl
inc
out
lock
pop
mov
push
jbe
loopne
jb
sbb
cmp
rorl
mov
dec
dec
lcall
jns
leave
ret
call
pop
ret
cmc
pop
cmp
cwtl
adc
lahf
and
mov
dec
dec
shlb
pop
subl
outsl
test
mov
mov
inc
cwtl
push
repz
aaa
fistpll
scas
test
sahf
jl
es
lods
add
in
push
popa
aam
pop
sub
ret
inc
add
into
xchg
test
arpl
or
test
add
std
cmp
mov
xchg
popf
test
test
fwait
cmp
shll
inc
mov
stos
xor
dec
insb
clc
test
xchg
mov
lods
leave
shlb
insb
dec
out
insb
imul
in
mov
jno
lret
or
test
addr16
mov
movsb
les
sub
data16
jns
adc
fucomp
dec
pop
dec
sub
rorl
pushf
stc
pop
into
std
aaa
and
xor
leave
lret
ffreep
push
mov
aam
test
adc
sbb
out
pop
mov
adc
xor
dec
jno
add
mov
andl
int3
xchg
cmc
aaa
fidivrs
movl
addb
icebp
jne
and
xlat
leave
ret
and
les
and
es
push
mov
mov
lcall
hlt
daa
or
push
pop
cmp
rcrb
xor
pop
imul
jne
or
xchg
inc
jae
ficompl
sub
xchg
push
clc
call
mov
push
jbe
mov
pop
fldenv
stos
insb
xor
xor
sub
mov
and
adc
std
xchg
fnstcw
in
stos
push
loopne
mov
fwait
xlat
or
pop
bound
test
clc
pushf
jl
clts
stc
jg
add
or
xchg
mov
in
cmpsb
mov
xchg
push
xor
xchg
push
iret
pop
xor
out
loop
push
mov
test
xchg
repnz
inc
ljmp
idivb
cwtl
or
cltd
mov
or
adc
and
xchg
lock
sub
out
rorb
adc
push
popa
jae
push
fidivs
sbbl
dec
nop
xchg
xlat
adcb
sahf
hlt
or
imul
bound
out
mov
aaa
loope
movsb
adc
push
dec
xchg
popa
sbb
xchg
aam
adc
insl
cmp
in
pop
jge
xchg
je
push
add
fs
mov
mov
stos
jmp
cmpsl
test
push
cmpsb
jl
cltd
rclb
iret
add
xchg
pop
test
dec
pop
jmp
pop
jecxz
jmp
ret
inc
mov
push
xor
xor
jns
adc
ja
bound
mov
sbb
sahf
popa
pop
pop
adc
dec
ljmp
imul
mov
xchg
lret
xchg
lret
fldenv
lock
adc
mov
cli
je
cld
fstpt
loope
std
cmp
mov
push
push
lock
inc
fwait
mov
mov
mov
sbb
xchg
andb
cli
out
lock
cli
je
loop
or
inc
das
push
cmpsl
mov
sbb
sub
or
sub
aad
ja
nop
fcomps
fsts
bound
inc
xchg
dec
mov
in
sbbb
inc
test
sub
stos
and
jnp
loopne
inc
xchg
jmp
imulb
lahf
and
mov
sbb
jae
sbb
jl
push
ror
mov
or
xchg
push
and
lret
aad
or
dec
les
mov
loopne
dec
stc
enter
jae
push
cmpsb
ret
cmp
ret
xchg
fldenv
pop
test
mov
rcr
shlb
mov
outsb
xchg
lods
jl
jecxz
add
cs
fstpt
int3
aas
std
xor
pop
std
lock
cmp
inc
loopne
pop
or
mov
loope
sahf
jne
mov
test
dec
imul
push
xchg
inc
push
pop
lds
ja
rcr
cltd
sti
shlb
scas
jl
adc
mov
cli
and
jmp
je
es
popf
imul
sarl
aad
push
or
sarb
pop
inc
int3
pop
out
xor
in
stos
mov
pop
ja
and
mov
and
mull
dec
jecxz
cmc
inc
adc
xchg
push
lock
cld
adc
scas
rcr
xor
inc
push
fdivrp
push
orl
aam
xor
xor
jl
loope
fcoms
and
loope
mov
push
pop
mov
fcmove
es
mov
push
jns
cmc
pop
push
rdmsr
aam
sub
push
out
cmp
cld
adc
pop
xlat
rclb
add
scas
mov
push
in
add
jb
inc
aaa
xor
jns
sbb
notl
xor
aad
adc
cmp
mov
xchg
jmp
add
inc
jnp
aaa
imul
sub
add
inc
fsubl
cmp
pop
jecxz
nop
or
loopne
jns
ljmp
gs
fcomp
xor
dec
cmpl
dec
inc
aad
decb
mov
dec
cld
or
or
xlat
and
mov
fnsave
ds
push
lret
pop
fbld
fstpt
hlt
je
ljmp
pop
pop
xchg
fidivl
xor
inc
repnz
pop
mov
aam
lret
fcmovb
adc
push
cmp
sub
outsl
fcomps
jp
ret
ss
clc
cs
cld
outsb
bound
dec
lea
pop
inc
mov
push
sbb
shlb
orb
xchg
lret
dec
pop
and
roll
cmpsb
test
add
ficoms
stos
dec
out
fcomps
loopne
jb
clc
icebp
sbb
out
icebp
inc
and
and
jns
push
mov
pop
stos
lahf
inc
jo
inc
jge
and
sbb
test
jl
mov
sub
pop
mov
lcall
cmc
jg
mov
mull
je
jmp
cld
pop
inc
add
jmp
cmpsl
cmp
pop
push
test
daa
pop
fbld
xor
sub
or
ds
das
dec
stc
insb
ret
sbb
rorl
popf
leave
jb
jnp
jb
lock
pop
mov
dec
movsb
lods
push
dec
stc
negl
add
js
mov
cmp
sub
push
mov
in
flds
and
icebp
inc
push
ja
pop
jns
push
leave
dec
mov
mov
ss
push
loopne
hlt
cs
sbb
addl
call
cmp
xchg
rcrl
cmpb
shrb
pop
fst
mov
stos
stos
xchg
dec
cli
and
adc
mov
push
ret
add
mov
movsl
jae
shr
mov
mov
inc
out
push
and
push
mov
call
push
inc
sti
fucom
adc
jnp
pusha
sarb
aaa
and
stos
pop
sub
sbb
sub
addr16
sbb
lahf
lret
xchg
or
mov
daa
sub
fcmovbe
dec
scas
stos
pop
xchg
fsubrl
mov
pushf
ljmp
lcall
out
add
js
push
xor
mov
into
add
add
xchg
movsl
loope
and
aad
notl
enter
pop
xchg
adc
call
xchg
or
add
adc
sub
data16
sbb
testl
mov
push
sub
xor
jle
pop
xor
pop
xchg
pop
lcall
loopne
shl
arpl
outsb
loop
out
cwtl
sub
out
fsts
inc
dec
dec
push
call
cs
ret
call
sar
xchg
mov
mov
jl
fcmovne
xchg
cld
lea
xchg
mov
out
sti
rdmsr
pop
sub
enter
aad
out
into
pushf
das
clc
cwtl
inc
stos
bound
push
mov
pop
daa
out
pop
inc
popa
cmp
mov
js
pusha
jno
adcb
push
outsb
xor
xchg
repz
sub
ja
movsl
pop
pop
add
inc
mov
movsl
lret
es
pusha
popa
test
xchg
push
adc
dec
data16
fists
js
mov
dec
push
push
shll
and
int
lret
or
in
jbe
xor
mov
addr16
insl
or
push
add
dec
mov
mov
mov
xor
fsubr
dec
mov
sbb
inc
inc
lods
jl
mov
pop
aas
jmp
jl
bound
mov
cmp
sub
test
lret
movsl
cmp
push
pop
fs
fcoml
mov
xlat
pop
xchg
scas
mov
and
jae
test
mov
pushf
rcll
sbb
mov
jg
xchg
cld
mov
pop
imul
mov
insb
inc
pop
pop
movsl
push
xor
lods
sahf
jns
loope
icebp
push
js
imul
cmpsl
in
test
fs
sub
mov
in
adc
fs
std
jp
clc
cltd
stc
sbb
mov
rorl
cli
insb
rcr
mov
movsb
fldcw
jne
cmp
push
xchg
in
push
cmp
adc
clc
xor
push
xlat
lds
inc
in
cmp
mov
loopne
sub
mov
out
aaa
das
push
jmp
popa
jecxz
push
test
out
dec
xor
sub
and
cmp
jne
cmp
cld
fcoml
add
push
inc
or
into
fcmovnbe
shrb
sbb
ss
inc
sub
xor
xlat
imul
mov
inc
push
jle
jns
enter
stc
scas
mov
inc
or
lods
rcl
repz
mov
dec
mov
dec
lret
lea
outsb
int3
adc
push
sbb
jns
pop
mov
mov
xor
in
test
popf
in
mov
dec
icebp
ljmp
xchg
fistl
pushf
jmp
xchg
pop
jle
fisttps
out
pop
mov
loope
shrl
ss
jp
enter
aam
stc
lock
push
sbb
inc
mov
cld
xchg
shll
mov
rol
push
mov
pop
dec
ja
lock
jecxz
ja
das
aam
push
pop
push
jp
or
call
stos
cmp
mov
mov
repnz
mov
mov
hlt
int
xchg
pop
push
std
pop
jecxz
mov
bound
outsb
sub
sbb
mov
popa
mov
sub
or
push
movsb
inc
pop
cltd
sub
out
inc
sbb
fs
sbb
xor
inc
das
addr16
jno
push
addb
jg
inc
jne
adc
fisubrs
ljmp
jl
loop
icebp
das
mov
inc
shrl
ficoml
ret
xor
cld
movsb
inc
lahf
jecxz
sbb
xor
mov
loope
xchg
ljmp
xchg
xor
aaa
xchg
repnz
push
add
mov
xor
imul
scas
popf
gs
in
mov
ja
aaa
test
dec
and
out
xor
insb
jp
sbb
stos
add
push
into
mov
outsb
mov
and
inc
xchg
lret
push
mov
aas
iret
loope
icebp
test
dec
ret
in
cmp
cmp
push
push
imul
or
xchg
testl
je
mov
xor
xchg
cmp
dec
dec
adc
adc
es
xchg
mov
mov
dec
mov
bound
mov
add
fwait
pop
jge
cmpsl
in
std
push
pop
pop
mov
xor
and
movsb
mov
es
test
cli
sarb
mov
pop
insl
cwtl
push
mov
or
mov
sbb
dec
clc
out
mov
sub
in
mov
roll
dec
daa
sbb
pop
mov
icebp
mov
loopne
xchg
shl
mov
lods
pop
jno
pop
outsl
jl
ret
fstl
aam
imull
call
out
mov
outsb
or
mov
add
notb
fldenv
and
in
cmpsb
jge
daa
hlt
add
loop
or
inc
xorb
mov
andl
les
les
or
pop
cmpsb
jecxz
testl
mov
push
into
mov
jnp
pop
sbb
aas
xchg
sbb
fsubrs
rcrl
idiv
insl
push
mov
xchg
out
xchg
cs
mov
push
and
jno
mov
fs
cmp
icebp
xchg
pop
push
aaa
lret
out
adc
add
andb
int
ss
jl
add
and
mov
push
pop
jmp
xorb
and
aas
sub
mov
repz
dec
mov
jge
and
jne
rcl
push
push
jno
icebp
test
hlt
std
xchg
jns
aas
mov
test
shll
lock
pop
rorl
xchg
xchg
rclb
idivb
aaa
stos
dec
push
pop
add
push
mov
xchg
xchg
pop
mov
inc
or
cld
bound
push
mov
dec
outsb
or
stos
insb
pop
push
push
dec
cmp
outsb
or
lods
enter
xor
pop
inc
aad
xor
cwtl
jg
cmp
es
ja
sub
mov
jecxz
xor
loop
dec
sub
sub
scas
cmp
inc
iret
in
test
in
xor
repz
mov
and
mov
test
or
dec
fisttps
repnz
out
mov
xchg
imul
je
fsubp
ret
inc
in
dec
mov
cmpsb
jno
lcall
sub
adc
sti
aas
aas
fdivrl
jns
mov
mov
push
in
mov
dec
pushf
dec
xchg
inc
aaa
inc
gs
pop
mov
lcall
std
pop
das
add
dec
add
out
jnp
mov
mov
fidivs
bound
mov
jnp
dec
loope
mov
cmp
pop
es
sbb
adc
mov
pop
scas
cmp
sbb
ja
add
and
lahf
and
xor
adc
ret
mov
jnp
cmp
mov
out
pop
mov
jno
mov
jns
adc
loopne
sub
adc
mov
mov
push
sti
lods
lods
sub
mov
mov
mov
jmp
cmp
sbb
push
jns
jnp
adc
xor
mov
push
xor
rcll
push
out
test
and
jae
sbb
dec
xorl
js
or
mov
mov
add
push
fcmovnbe
mov
jl
aam
adc
loopne
fdivl
test
sti
xor
cs
inc
fisubl
add
and
push
fisttpll
cmpsb
shlb
xor
test
in
cwtl
push
mov
pop
jb
pop
cmp
sbbb
in
pop
inc
andb
xchg
push
adc
fcoms
mov
mov
add
insl
test
mov
xchg
cmp
mov
movsb
popa
cld
imul
fs
loopne
je
adc
push
cmp
adc
out
or
push
sbb
mov
arpl
mov
add
inc
xor
cmpsb
clc
mov
roll
or
cltd
adc
mov
insl
lods
xlat
hlt
fdivrs
popa
xchg
xchg
mov
mov
push
xor
and
sub
or
jnp
out
outsb
sti
xchg
pop
lahf
pop
dec
ljmp
outsb
sub
cmpsl
mov
xchg
stc
pop
movsl
mov
hlt
or
jnp
pop
pop
and
and
rcrl
test
sub
inc
rclb
adc
cmp
and
xor
push
jle
add
inc
loop
push
sarb
sahf
jne
or
rcll
rcll
mov
push
fbstp
icebp
xchg
shr
push
mov
jl
dec
adc
mov
jnp
shlb
fcompl
jle
push
sub
cmpb
lods
mov
mov
cmp
pop
jo
mov
imul
mov
mov
cltd
dec
shlb
jg
add
add
sahf
sub
mov
call
pusha
out
and
mov
xor
add
or
addr16
int
jo
push
mov
dec
in
push
jp
sub
push
out
pop
mov
lahf
fwait
cld
jl
int
jno
push
add
inc
paddb
jno
in
jns
push
shl
push
mov
add
push
dec
pushf
in
push
push
sub
sub
iret
repz
or
push
jnp
in
fdivrl
xchg
xor
jge
stos
mov
stos
mov
mov
adc
rolb
dec
mov
out
push
sub
mov
mov
inc
data16
gs
mov
aam
mov
lds
imul
mov
aam
push
push
adc
push
fs
sahf
mov
or
int
sbb
and
stos
outsl
push
mov
and
leave
mov
pop
mov
lret
lds
add
mov
imul
ds
fldl
cwtl
sub
nop
jl
adc
imul
iret
dec
push
or
outsb
ret
aas
or
insl
imul
rolb
inc
inc
xchg
xchg
nop
lods
mov
add
out
jge
aas
in
out
and
push
or
push
cwtl
lods
pop
les
das
inc
hlt
ss
jp
inc
inc
je
fnstcw
in
stos
jne
xchg
dec
and
fcmovu
iret
pop
outsl
cmp
pop
xchg
loopne
push
xorl
push
cmpsb
lods
imul
add
mov
cmpsl
gs
adc
fisttpll
jo
jl
or
hlt
imul
jbe
xlat
cmp
lock
xorl
xor
inc
cltd
das
sbb
call
mov
push
in
inc
dec
push
cld
cmc
mov
mov
je
sahf
push
add
adc
or
cltd
sbbl
loopne
cli
sub
cmp
movsb
aas
and
imul
stc
inc
subl
stos
int3
sub
cmp
ja
dec
je
js
pop
or
xchg
xor
push
hlt
mov
xchg
sbb
add
movsl
dec
mov
inc
movsb
pop
adc
fcmove
mov
cmp
dec
addr16
cwtl
adc
mov
add
and
ds
push
pushf
gs
adc
xor
pop
jge
bound
das
hlt
xor
lods
pushf
int3
sbb
cltd
mov
mov
fdivp
mov
adc
xchg
out
jg
mov
shrb
lock
fidivrs
xor
lcall
mov
das
popa
pop
mov
iret
enter
jae
xchg
cmp
cwtl
addl
and
shlb
sbbb
out
push
pop
imul
sub
push
ljmp
dec
push
loopne
mov
sahf
push
mov
dec
dec
pop
aam
dec
into
xorb
pushf
or
adc
xor
pusha
fs
sub
jecxz
or
fprem1
je
and
lea
jmp
shlb
hlt
pushf
or
add
icebp
mov
xchg
jae
jg
pop
cmp
mov
int3
stos
and
mov
xor
adc
hlt
cmp
stc
xlat
jns
jg
das
sub
mov
or
std
mov
jp
inc
int3
and
negb
loop
mov
aad
inc
das
adc
fiadds
roll
or
or
push
fldenv
imull
xor
clc
xchg
push
dec
mov
neg
cmp
mov
mov
and
loop
mov
mov
sub
mov
and
rorb
pusha
sahf
roll
xor
cmp
jae
adc
sbb
push
jecxz
cmp
frstor
out
jp
lcall
inc
push
pop
cmc
jg
xor
jnp
dec
jg
push
rcrb
repz
mov
test
ret
rcll
pop
mov
jae
lret
ljmp
xor
sbb
fsts
push
stc
or
lahf
shlb
mov
inc
je
xor
popa
sub
jne
push
mov
mov
lret
mov
add
cmp
adc
sbb
inc
pop
cwtl
xchg
sbb
popl
jle
ret
icebp
test
jns
in
mov
movsb
jg
mov
in
insl
repnz
stos
adc
and
mov
jp
lret
and
mov
dec
rorb
jnp
adc
cmp
jbe
fmuls
sub
aam
sub
push
sub
jno
adc
cwtl
adc
xchg
pop
mov
cltd
pusha
sbb
xchg
mov
pop
clc
cmpsl
imul
pop
and
cld
mov
inc
repnz
lods
mov
push
ljmp
call
rclb
sub
fcmovbe
add
into
repz
mov
bound
push
icebp
cmp
mov
inc
mov
sbb
enter
add
cli
sub
and
mov
rclb
mov
adc
push
cmp
pop
stc
xor
push
sahf
xchg
sbb
cmp
push
test
movsb
lcall
and
mov
stos
push
fstpl
sahf
dec
mov
call
pop
cmp
cmp
call
cltd
loopne
add
out
mov
lock
out
or
sub
jecxz
fisttps
shr
popf
and
in
rcr
xchg
cmp
lret
xchg
xor
lcall
xchg
rclb
sahf
pop
jne
loopne
sbb
jl
shll
loopne
js
test
mov
outsb
loop
popf
and
cld
ljmp
mov
jbe
or
inc
mov
and
sub
in
gs
mov
push
lea
cwtl
mov
jb
clc
lea
xchg
xor
xor
scas
add
jb
ljmp
sub
hlt
mov
jno
jne
aas
sub
sbb
mov
jne
jmp
popa
dec
lods
out
pop
push
inc
sti
jnp
les
mov
daa
jo
dec
mov
popa
pop
call
mov
test
in
sub
imul
outsl
test
mov
dec
cmp
push
movsl
std
and
xor
movsl
and
xchg
jp
pusha
pop
lret
jg
sub
fcoml
dec
ret
movsl
stos
shll
mov
push
push
sub
xchg
test
sub
push
and
cmp
cmp
notb
push
cmpsl
jecxz
sub
and
sti
cmp
pop
fbld
mov
sub
mov
gs
stos
fnstenv
xchg
scas
cwtl
sti
mov
sbb
leave
sub
mov
and
pop
rorb
mov
adc
inc
xchg
push
arpl
insb
dec
ss
mov
xchg
test
shr
and
test
cmp
iret
gs
mov
jne
inc
iret
sub
or
ret
ret
and
in
movsl
bound
inc
movsb
lea
mov
sbb
inc
xchg
rorl
sbb
call
orb
mov
fcoms
sbb
jo
xchg
mov
xor
out
test
adc
jg
jp
in
test
dec
repz
ret
xor
insl
dec
bound
orl
dec
shl
push
sbb
lods
add
pusha
ljmp
and
xor
rcr
pop
mov
dec
cmp
pop
incb
pop
shr
dec
xchg
cmp
jb
aas
fmul
je
stos
stos
mov
mov
popa
test
sti
pop
push
mov
test
add
lret
xor
xor
cmp
imul
out
movsl
repz
ja
pop
jecxz
push
mov
into
int3
dec
stc
dec
sub
lods
rcrl
inc
sub
xor
or
sbb
or
outsl
addr16
xchg
push
cmp
inc
int
icebp
pushf
repz
add
and
stos
cmpsb
adc
cmp
lods
sub
xchg
imul
out
mov
insl
cmp
xchg
push
mov
adc
push
fs
mov
outsb
pop
xor
outsl
imul
cmp
dec
push
push
lcall
lock
out
push
into
mov
xor
fs
sbb
popf
push
test
pop
test
std
sbb
push
adc
xchg
orl
push
pop
pop
test
sbb
adc
xchg
and
sub
xor
das
or
dec
inc
pop
cmp
cmpsb
arpl
jecxz
mov
add
out
push
jg
sub
jae
sub
fdivl
xor
push
insb
jg
jno
add
icebp
pop
add
dec
lods
xor
and
mov
leave
mov
add
and
das
test
xchg
sarl
dec
dec
and
cmpsb
pop
divb
cmp
push
rorl
popf
les
cmpsl
inc
inc
cmp
stc
mov
out
das
mov
mov
aas
ror
push
into
call
add
dec
jecxz
jl
sbb
push
fwait
test
es
mov
dec
mov
mov
test
aad
xorl
in
pop
and
add
fstps
push
pop
test
push
jae
dec
mov
jp
lods
jmp
jne
push
movsb
mov
cwtl
popa
jnp
aam
mov
out
sub
push
iret
xor
loopne
insb
adc
leave
jo
call
dec
pop
mov
in
or
jg
inc
out
push
jge
addr16
int3
sub
mov
cmp
scas
push
fs
sbb
push
fs
mov
rolb
mov
mov
dec
test
cwtl
push
enter
out
pop
cwtl
mov
ret
and
bound
or
adc
xor
sub
sbb
sub
aad
mov
arpl
adc
sbb
out
pop
ret
jmp
cmp
cmp
sarb
fnsetpm(287
aad
int
cmc
fldl
adc
scas
mov
jl
into
into
mov
daa
mov
cmpl
cmc
and
aam
repnz
cmp
cld
stos
pop
cmp
mov
xchg
ret
sbb
sbb
push
popl
sbb
movsl
jecxz
iret
addr16
mov
mov
add
outsl
adc
rcrb
dec
ret
jecxz
dec
push
adc
imul
repz
mov
inc
sub
mov
aas
mov
inc
loope
and
xchg
dec
imul
mov
int3
ret
pop
out
sub
aam
push
xor
jmp
jecxz
mov
sub
mov
test
cwtl
pop
je
or
loope
xchg
cmp
and
mov
mov
mov
inc
jae
dec
andl
lahf
int3
sti
jbe
inc
mov
mov
notb
jge
aas
loopne
cmp
ret
pop
and
inc
inc
jp
sbb
dec
sub
or
cmc
scas
xlat
scas
lock
push
and
push
imul
xor
sti
mov
lock
outsb
loop
out
out
icebp
push
popa
push
dec
je
aas
and
es
xor
pop
int3
out
jbe
sbb
cmc
cmpb
push
push
out
sar
fmull
mov
pop
inc
mov
nop
std
mov
mov
push
iret
xchg
and
test
jbe
lcall
fistpll
outsl
jnp
xchg
cmpl
push
iret
add
sbb
pop
fwait
mov
cmp
je
jae
mov
fcoml
shll
cmp
lea
push
adc
rolb
and
shlb
test
fistl
in
jl
mov
jns
add
es
mov
jns
adcl
inc
inc
and
lock
ja
sbb
jecxz
jl
popa
out
pop
nop
mov
cmc
or
and
jne
jne
jle
fistpll
jge
int3
int
mov
outsb
xchg
mov
sub
mov
jbe
add
aad
adc
or
adc
fiadds
xchg
sti
jne
push
jb
shlb
pop
dec
test
mov
push
add
lea
fbstp
out
popf
loope
mov
mov
pop
mov
adc
test
jno
xchg
inc
repz
push
mov
cmc
push
fisubl
ljmp
mov
int
xchg
adc
out
dec
ficompl
fdivl
inc
jnp
popa
mov
cmc
sub
cmp
mov
js
inc
pushf
and
mulb
and
push
sbb
push
into
mov
mov
ds
movsb
out
and
xor
push
and
adc
imul
xchg
out
int
adc
in
ds
popf
incb
lds
mov
add
cmp
lcall
push
outsl
in
xor
cmp
dec
test
out
inc
mov
std
lret
mov
cmpsl
add
jno
xchg
out
fcoms
mov
sbb
add
cmpb
das
sti
add
orb
lock
xor
lds
push
scas
push
ss
mov
adc
ret
push
orl
push
sub
dec
mov
shlb
subb
movsb
pop
daa
shlb
out
aam
mov
dec
in
les
ret
addl
insb
dec
sar
pop
fmull
adc
push
pop
mov
cmp
mov
mov
stc
sub
xor
cltd
mov
adc
add
jbe
adc
mov
pop
mov
xor
cld
or
leave
cmp
stos
sbb
pop
adc
jnp
stos
cmpsb
aam
movsl
mov
mov
fdivs
loopne
xchg
sbb
aas
or
push
sbb
sti
or
fcmovu
rcl
push
aas
fs
pushf
mov
adc
data16
fadds
and
in
push
jnp
scas
xchg
les
les
out
cmp
inc
aas
and
and
pop
inc
push
sub
dec
int3
jnp
pop
sbb
push
add
icebp
das
stos
mov
jp,pt
je
bound
cs
push
dec
cmp
mov
adc
and
loop
sarb
sbb
in
xchg
inc
dec
outsb
lea
repz
js
xor
iret
mov
into
or
mov
inc
xchg
push
push
mov
push
arpl
int
cmp
into
in
test
into
add
push
dec
push
daa
stc
dec
xchg
loopne
dec
mov
mov
jg
out
jmp
mov
sub
cmp
add
xchg
pop
push
inc
int
gs
cli
leave
int3
lods
sbb
xor
inc
cmp
adc
jl
xor
lcall
mov
cmpsb
xor
inc
xor
out
insl
cmpsb
mov
jns
and
xchg
adc
andl
sbb
add
and
pop
mov
imul
data16
mov
pop
dec
xchg
jmp
in
fnstcw
or
cmp
test
into
and
or
push
lret
int
test
or
jecxz
in
sub
loopne
mov
xlat
xor
rcr
fbld
mov
sti
add
sbb
in
std
js
jbe
outsl
in
xor
imul
dec
xchg
pop
leave
xor
popa
lcall
popf
sarl
sbb
add
pop
pop
les
out
mov
dec
out
sub
xchg
inc
and
adc
arpl
xor
jb
mov
mov
mov
jle
out
repz
jb
add
inc
push
rcr
sub
out
xchg
lret
jmp
rclb
add
ja
ss
inc
mov
xlat
out
mov
shll
mov
push
outsb
bound
inc
mov
pop
cmc
repnz
add
and
mov
iret
push
cmpl
mov
enter
mov
mov
fstl
cmp
lret
inc
mov
mov
cltd
movsl
lock
adcb
jecxz
sar
add
test
jno
inc
jnp
lea
inc
inc
shr
mov
dec
fld
xchg
fsubrl
push
cltd
les
stc
sub
jecxz
jbe
ss
add
adc
push
sbb
lods
faddl
xchg
jb
repz
xor
mov
sbbl
push
insl
xchg
xor
xchg
fnclex
iret
sub
or
pusha
or
xchg
push
or
icebp
lods
sub
pushl
dec
dec
lcall
xor
and
fdivp
divb
fst
movsb
mov
jge
xchg
pop
ljmp
loopne
push
test
icebp
dec
jle
jl
adc
loop
call
adc
mov
pop
insl
cli
mov
lea
push
mov
imul
or
pop
faddl
mov
insb
xorb
xstore-rng
cmpsl
shrl
xchg
call
xchg
fidivl
jb
lea
aad
mov
fwait
pop
add
push
pop
out
lock
mov
mov
rcrb
jp
mov
mov
jae
mov
fsts
hlt
ss
push
push
inc
lahf
jno
dec
enter
movsl
js
mov
dec
xor
xor
leave
jecxz
mov
mov
mov
ds
mov
movl
mov
int
xchg
and
popf
mov
jecxz
aam
or
push
loopne
xor
iret
pop
enter
cmp
mov
js
jmp
xchg
call
sti
jbe
pop
aas
xchg
fwait
xor
shlb
decb
xchg
xchg
idivl
xchg
xor
inc
lds
fistps
xchg
ljmp
aas
xchg
stc
dec
hlt
or
mov
cmpsb
fcoml
adc
iret
leave
mov
dec
adc
bound
js
imul
lock
add
push
adc
jnp
gs
icebp
xor
stc
pop
test
xchg
xor
push
lret
into
jp
ffreep
in
push
mov
mov
ret
ret
push
imul
fisubrl
xchg
cmp
jo
aaa
mov
out
ljmp
outsb
aam
xlat
xchg
and
pop
jp
int
cmc
and
inc
xlat
shll
jl
imul
idivl
dec
inc
or
jb
cwtl
push
lret
xor
or
rclb
mov
mov
dec
lret
xor
loope
push
adc
jnp
stos
push
cltd
jmp
test
cmp
push
test
cs
loope
call
push
bnd
sub
ljmp
and
mov
in
stos
dec
sahf
fsts
out
cmp
test
jg
aad
mov
test
or
scas
xor
push
sub
jb
adc
push
dec
mov
psubq
mov
or
mov
pop
fiadds
or
lcall
aas
mov
cmpsb
xor
jle,pn
pop
adc
in
sub
enter
out
stos
jo
push
pop
xchg
add
xchg
gs
ret
push
int
aas
js
int
movsb
and
add
jns
mov
loope
xchg
out
scas
adc
mov
inc
pop
add
push
shl
mov
dec
dec
dec
popf
sbb
movsb
js
imull
push
call
cmpsb
mov
sti
xchg
sub
ret
enter
cmp
repnz
int3
inc
sbb
or
pop
cwtl
xchg
js
dec
test
inc
cmp
lods
aas
outsb
lahf
mov
sbb
mov
in
imul
xlat
xchg
out
xorb
lods
inc
out
outsb
out
aas
inc
mov
lret
gs
pop
shlb
in
adc
daa
inc
adc
add
mov
movsb
mov
pop
clc
ljmp
cmp
xchg
jl
mov
sti
cmc
cwtl
inc
out
insl
jp
and
xchg
lods
dec
or
adc
and
hlt
ret
mov
clc
and
test
lret
mov
xor
out
addr16
iret
inc
int
aad
dec
insb
add
inc
scas
lret
sbb
stos
xchg
ret
sbb
add
and
mov
cmp
sbb
data16
mov
lcall
in
leave
outsl
push
cmpsb
push
xor
out
jmp
repz
imul
inc
jno
mov
sbbb
sbb
inc
je
lods
mov
ret
dec
adc
shll
outsl
jo
push
jae
clc
test
test
mov
xchg
add
pop
pop
xchg
sub
out
ss
jne
jne
mov
adc
ss
xor
add
dec
xor
dec
das
adc
xchg
mov
call
int
pop
push
jmp
and
cmpsb
pop
daa
mov
rol
aam
sub
sbb
jbe
xchg
test
clc
xlat
jle
dec
pop
ficoml
stos
jns
mov
mov
lcall
adc
inc
mov
call
movsl
je
xor
ret
das
fdivl
inc
xchg
loope
jg
fmul
call
mov
mov
dec
out
in
mov
push
pop
dec
ret
sbb
lock
repnz
pop
sahf
xor
mov
xor
adc
add
xor
lea
inc
jbe
fstps
mov
mov
cmp
cmc
cmp
adc
subb
lahf
jne
cmp
imul
jg
push
test
nop
or
lea
pusha
lea
mov
enter
lret
lods
add
movsl
and
xchg
add
cmp
mov
fisubrl
outsb
lods
imul
fnsave
and
adc
pop
lock
fisubs
mov
xchg
mov
jb
pop
in
cld
call
inc
std
ss
pop
pop
jg
add
push
fwait
push
push
pop
aad
inc
js
loope
test
dec
adc
mov
mov
dec
hlt
scas
ret
and
and
sahf
adc
ss
jns
call
andl
mov
jecxz
add
rol
mov
pop
xchg
xor
push
test
faddp
cld
lea
in
outsl
mov
push
adc
test
cltd
cmpsb
xor
sti
call
je
mov
rcrb
mov
inc
scas
int
pushf
fldl
or
call
jecxz
xchg
adc
popf
or
std
fistpll
lahf
pusha
ret
shll
ret
fwait
push
pop
std
rcll
nop
jl
pop
mov
mov
lock
lret
popf
jle
outsl
mov
inc
mov
lods
inc
inc
outsb
cmpsb
subl
insb
jl
lret
jge
cmp
push
lcall
jecxz
into
xor
jmp
rclb
lret
js
nop
mov
dec
adc
arpl
xchg
movsl
pusha
leave
xor
icebp
mov
cmp
popa
loopne
imul
enter
inc
loop
jne
lock
push
daa
jmp
mov
inc
mov
sub
cmp
out
mov
dec
push
mov
or
insl
xor
mov
mov
mov
push
xor
stos
pop
out
add
pop
sar
mov
ss
push
cmp
mov
inc
pop
fs
js
sub
xor
cmp
adc
cmpsb
mov
mov
rorb
dec
repz
cmp
jle
in
mov
mov
dec
cmp
push
xchg
bound
push
ss
imul
pop
je
inc
sub
pop
fisubrs
cmp
push
jbe
jo
pushf
and
and
xchg
imul
pop
pushf
repnz
outsb
cs
jno
out
pop
or
pop
cmp
inc
mov
xchg
add
sbb
push
xor
call
push
cmp
in
add
xchg
or
cmp
rorb
jmp
lret
mov
xchg
or
icebp
push
xorb
sti
sbb
sbb
cmpb
sbb
and
daa
or
lret
rolb
mov
cmp
mov
push
imul
dec
jecxz
sbb
pop
rorl
mov
pop
rcll
das
cmp
sub
jb
movsl
xchg
sbbb
incb
mov
addr16
das
push
in
mov
adc
jecxz
loope
out
gs
ret
fs
loop
aam
mov
or
je
adc
lods
loopne
out
sahf
insb
xchg
add
mov
pop
in
aaa
push
sub
or
aaa
aad
dec
adc
fidivrl
insl
push
mov
dec
and
shlb
dec
jge
mov
xor
sub
jle
pop
lret
cmp
leave
or
fstl
repnz
daa
or
cmp
das
sub
das
sbb
fisttpl
inc
jp
dec
repz
addb
or
insb
jl
lds
es
lret
sbb
sub
pop
jnp
xchg
fs
mov
xchg
leave
stos
xchg
fisubs
int3
outsb
sbb
inc
sub
pushf
fadds
fcmove
inc
mov
mov
xor
push
xor
lods
sti
cwtl
data16
call
pop
aas
aaa
or
sbb
scas
mov
aaa
sbb
jo
adc
dec
add
cld
cmc
ret
lcall
je
xlat
adc
pop
adc
into
jb
pop
fcomps
adc
mov
aad
orl
dec
xor
cmp
insb
mov
jmp
sbb
or
popa
popf
inc
fistl
cwtl
fisubs
xor
lahf
rcrl
js
xor
adc
cmp
hlt
test
ja
stos
push
std
mov
or
mov
cmp
lds
push
cmp
xchg
test
jae
loope
movl
inc
shrb
fwait
stc
sar
jo
repz
xchg
movsl
dec
jge
or
cmp
lea
loop
popf
lods
xchg
xor
lcall
in
jb
scas
cmc
pop
pop
hlt
mov
xchg
imul
cmp
mov
and
inc
test
ljmp
mov
jl
lock
lret
es
fsubp
mov
lock
insl
dec
popf
insl
jbe
sub
mov
xor
sub
ljmp
bound
ret
push
dec
mov
jg
mov
das
les
movsb
mov
mov
pop
xchg
test
ss
imul
repnz
jp
xor
jg
jo
jnp
std
pusha
lds
sbb
adcb
cmpsl
or
add
or
enter
and
add
mov
pop
dec
or
ss
subl
leave
sbb
lods
cmp
mov
lds
mov
sbb
pop
mov
les
jbe
inc
movsl
loop
pusha
dec
sti
cmpsb
pop
imul
aaa
repz
xchg
int
push
sub
dec
test
out
icebp
enter
sbb
push
lcall
mov
mov
sub
cwtl
lret
les
jbe
sub
dec
mov
mov
cmp
mov
divl
dec
add
out
dec
imull
sub
cmp
shlb
mov
stc
sub
pop
mov
stos
and
jl
or
pushf
out
out
mov
adc
mov
or
or
std
add
imul
push
ss
out
pop
insb
dec
pop
mov
mov
out
icebp
fisubl
jo
xor
lret
bound
cmp
and
popa
lret
or
adc
clc
pop
movsb
iret
ja
jo
movsl
adc
xor
fsubrs
dec
ret
xlat
pop
xchg
adc
ss
cld
dec
ja
out
icebp
jmp
jg
mov
mov
scas
test
push
xchg
or
inc
mov
sti
in
jle
push
imul
pushf
and
repz
orb
xor
cld
push
or
movsb
mov
lods
pop
push
sbb
hlt
pop
mov
push
push
fdivs
push
inc
stos
lock
je
popa
add
adc
cmc
and
push
mov
addr16
dec
in
xlat
pusha
or
adc
add
pop
jg,pt
push
gs
in
mov
and
std
or
mov
sub
jne
dec
sub
cmpsl
mov
mov
les
and
cld
test
dec
add
xor
or
cmp
movsl
sti
jg
movhps
jg
or
out
xchg
cli
ret
shrl
lods
sbb
daa
mov
hlt
in
fisubl
gs
mov
dec
push
test
mov
les
stos
outsb
mov
sbb
popf
lcall
add
mov
pushf
mov
daa
call
jno
rcr
ljmp
inc
push
test
orb
cld
fstpl
and
cmc
push
out
pop
or
pop
push
hlt
mov
mov
bound
insb
sti
rcrb
and
pop
dec
mov
pushf
jge
sub
xchg
rcl
inc
dec
xchg
int
out
stos
stc
mov
dec
bound
jo
bound
or
shrl
dec
jge
xchg
sbb
in
add
dec
or
ljmp
lods
mov
inc
mov
loopne
lods
loopne
test
ljmp
dec
push
es
jo
and
jno
mov
ficoms
cld
imul
cli
sub
shrl
stos
cmpsl
or
sti
lods
sbb
dec
adc
sub
inc
ja
lods
out
decb
push
mov
adc
lahf
sbb
shll
flds
sbb
push
push
ret
mov
push
xchg
pop
sub
out
call
cmp
xor
dec
sbb
cs
cmp
mov
cmpsl
adc
ret
push
stc
bound
xchg
neg
jb
rclb
lods
dec
push
call
out
hlt
cmp
out
xor
adc
adc
inc
icebp
xor
and
xchg
add
jp
adc
sub
ja
in
jae
xor
in
pop
pop
or
int
xchg
mov
add
xor
mov
outsl
jb
jb
jo
lods
sub
enter
sahf
push
sbb
clc
xchg
cmpsl
mov
and
xchg
pushf
imul
cmp
inc
call
adc
mov
test
or
lret
aad
xchg
jnp
xchg
movsb
jae
cs
aas
inc
setno
loopne
xor
out
leave
mov
cmp
dec
fisubl
mov
mov
mov
cmp
mov
andb
loopne
jle
lds
xlat
mov
pop
pop
ds
mov
ss
dec
sbb
out
repnz
scas
mov
cmp
inc
mov
push
push
lods
jg
push
ss
orl
lret
jmp
jmp
popf
mov
xchg
xchg
insl
xor
pushf
push
push
cld
fldenv
test
jo
mov
mov
cmp
adc
sub
ret
sbb
imul
fidivrl
jle
mov
push
rorl
lret
mov
cmc
frstor
shlb
inc
loope
sti
mov
jge
xchg
mov
xchg
and
popf
mov
sar
js
and
sub
dec
sbbl
pushf
adc
test
sbb
pop
adc
fnsetpm(287
adc
inc
push
dec
add
popa
pop
pop
in
out
pop
lds
insl
pop
push
or
pop
aas
lret
repz
and
mov
movsl
inc
aam
arpl
mov
pop
icebp
jg
push
sbb
shll
shrl
pusha
loope
mov
leave
mov
loop
inc
xor
and
mov
stos
mov
movsb
call
adc
cmp
fmulp
pop
in
rorl
inc
sbb
cmpsb
xchg
mov
leave
push
loop
jecxz
std
notb
pop
notl
and
mov
cmp
pushf
pushf
xchg
jns
fdivp
pop
imul
addl
call
jge
pop
mov
mov
sbb
scas
mov
fistpl
sarb
stc
adc
or
js
xor
movq
push
push
cmpb
ret
sub
out
and
insl
cmp
popa
jb
cld
xor
add
xchg
add
xlat
mov
decl
add
and
stc
popf
jle
jns
daa
pop
mov
and
es
adc
popf
ss
or
or
sarl
test
add
and
leave
cmp
and
nop
xlat
imul
mov
in
inc
pop
or
std
push
cmc
add
dec
push
adc
das
and
or
mov
mov
cmp
or
arpl
lret
stos
add
dec
cli
popa
pop
bound
pop
mov
inc
pop
fwait
icebp
rcrb
add
jl
jmp
mov
insl
xchg
cmpsb
outsb
mov
jmp
lock
jp
sub
rorl
sub
fwait
mov
pop
loop
sub
adc
add
xchg
push
dec
imulb
xor
stc
fsts
test
jmp
mov
das
mov
mov
bound
jp
fisttpll
mov
pop
push
sqrtps
call
aas
dec
std
out
clc
out
fidivrs
and
fmuls
insb
jmp
lret
shlb
test
xor
aam
lods
stos
ret
in
fcmovnu
cmpsb
aaa
pop
lods
hlt
test
out
xlat
xchg
adc
dec
dec
data16
lods
les
shll
mov
aam
lcall
ret
xlat
lret
xchg
test
inc
je
mov
outsl
rorl
sbb
dec
mov
jle
hlt
xchg
stos
das
sub
sub
ljmp
mov
cmp
and
and
lcall
jge
sbb
scas
and
or
adc
push
packsswb
mov
mov
call
cs
push
xchg
xchg
out
les
jnp
xchg
lahf
mov
insl
inc
ljmp
mov
sbb
lods
js
push
iret
mov
adc
ds
mov
jae
mov
pop
jp
jns
daa
inc
movsb
out
dec
imul
and
cmp
xchg
sub
loope
xchg
inc
mov
jl
mov
ljmp
shlb
popa
shll
iret
out
lea
movb
sahf
scas
jo
add
mov
out
fsubs
loopne
dec
lcall
int3
int
mov
clc
les
aad
mov
or
mov
xor
enter
inc
sub
lock
inc
push
sub
jge
pop
dec
cs
adc
sub
cltd
in
cmp
dec
fnstenv
mov
daa
dec
jp
lds
stos
adc
fcomps
push
mov
pushf
xor
jmp
xchg
push
xchg
xor
pusha
es
lcall
or
mov
stc
fisttpl
sub
sahf
sti
adc
movb
sub
and
cli
jmp
mov
incb
adc
mov
or
pusha
cmc
sbb
int
xchg
mov
cli
sub
scas
push
stos
dec
outsl
aaa
push
loop
add
push
iret
stos
in
imul
cmp
mov
mov
push
test
nop
mov
add
pop
xchg
ret
lret
mov
sbb
testb
xchg
jb
inc
clc
sbb
and
jmp
nop
push
jge
xchg
sub
and
push
mov
inc
pop
incb
iret
mov
test
push
aad
js
mov
dec
in
and
movsb
and
adc
loope
scas
sub
frstor
cmpsl
mov
or
dec
cmp
jle
mov
jnp
xchg
loope
sub
mov
sub
sti
or
addr16
std
add
mov
push
ret
test
xchg
push
and
fwait
push
and
mov
add
mov
xchg
lock
inc
xchg
lret
add
shlb
loopne
and
and
lahf
inc
pushf
adc
push
mov
cmpsb
cmp
sbb
int3
lret
leave
cmp
xor
jb
cmc
shrl
push
cmp
or
mov
adcl
out
and
cltd
mov
je
cli
jecxz
mov
mov
loopne
xchg
inc
aaa
je
arpl
sbb
xor
test
rorb
flds
push
sahf
fcomip
xchg
add
sahf
adc
jae
jo
jnp
cmc
inc
ds
lock
push
mov
dec
dec
cmp
imul
lods
push
fwait
jl
jne
nop
push
pop
fnstsw
lds
mov
outsb
xlat
enter
jl
jmp
or
add
cmp
icebp
dec
mov
mov
sub
jg
in
jb
mov
jecxz
js
inc
shlb
arpl
cltd
sub
jecxz
imul
xor
addb
sub
or
jo
mov
or
subb
testb
xchg
cmpsl
xchg
cmp
cmp
into
or
jb
xchg
inc
cmpsl
subl
in
repz
jle
jne
xchg
out
in
and
je
lret
jnp
or
fimull
repnz
mov
inc
xor
jge
fstps
cs
inc
ret
add
lret
mov
cmp
mov
in
push
add
iret
int
xchg
or
push
jno,pt
popa
push
aam
or
pop
js
xchg
mov
icebp
fadd
scas
shll
xchg
xor
jmp
ret
scas
js
ret
inc
je
cmpsl
ss
adc
bound
cmp
or
je
mov
pop
aad
imul
jp
cmp
mov
div
jae
ljmp
or
popf
mov
pop
subb
rorl
ljmp
arpl
cld
jle
mov
xchg
xchg
push
xlat
pushf
mov
ret
xchg
push
push
imul
arpl
push
push
xchg
push
mov
push
rolb
mov
dec
sbb
add
rcl
adcl
sbb
in
adc
pop
push
dec
sti
movsb
dec
mov
pop
cmp
popf
adc
imul
sar
xor
inc
sub
faddl
and
out
lods
mov
fstpl
fwait
aad
int3
repz
movb
or
loopne
xor
sbb
xor
mov
or
int
inc
mov
cld
dec
leave
mov
jbe
xor
icebp
popl
outsl
jb
stos
fsubs
test
lahf
outsb
cwtl
add
leave
jge
scas
pusha
add
insl
xchg
test
sbb
icebp
sbb
mov
movsb
push
daa
mov
aas
lods
or
enter
and
push
sahf
push
fwait
rcrl
jp,pn
push
mov
fadd
sahf
pop
xchg
pusha
add
push
pmulhw
in
jno
pop
mov
sti
adc
mov
jle
mov
and
pushf
jge
aaa
add
mov
or
popf
xchg
daa
xchg
mov
jle
push
adc
sbb
xchg
pop
jg
jge
xchg
repnz
hlt
inc
mov
cmp
fldcw
push
out
outsb
adc
popa
sub
clc
leave
mov
mov
push
adc
fs
ret
aaa
and
repnz
aad
test
sbb
cli
inc
xor
pop
jno
pop
push
cmp
mov
xor
scas
dec
mov
pusha
ret
fcoml
insl
push
jl
cmpl
mov
repnz
mov
jle
in
cld
dec
inc
dec
js
outsl
bound
push
dec
push
mov
lcall
data16
mov
int3
cmp
arpl
fists
and
stos
movsb
xor
xchg
jbe
jg
add
pop
in
sub
and
push
and
jo
dec
ss
loopne
jmp
adc
cmc
pop
lret
pop
daa
cmp
mov
add
scas
push
ljmp
cli
imul
repz
ja
jmp
xchg
adc
xor
movsl
jecxz
jno
jle
and
sti
int
stos
lods
and
aas
mov
or
stc
fadds
xor
mov
adc
push
xchg
cltd
dec
inc
sub
pop
lods
daa
out
sahf
adc
dec
xchg
sub
adc
or
pop
andl
sbb
jae
mov
bound
icebp
aaa
fdivs
lcall
push
cwtl
rcrb
hlt
mov
xor
aaa
xchg
sub
nop
sti
int
es
dec
dec
jo
sub
push
mov
stos
push
inc
mov
inc
insl
call
dec
fwait
in
fnstcw
into
fdivrl
jns
pop
imul
leave
xor
adc
jge
jno
pop
addr16
cltd
push
inc
hlt
insb
add
pop
ja
imul
xchg
jae
sub
mov
xchg
dec
sbb
sbb
xchg
sub
pop
inc
mov
fmul
xchg
dec
addr16
loop
in
subb
adc
and
sbb
rcrb
outsl
lods
mov
mov
lcall
dec
mov
shll
sbb
ljmp
push
add
addr16
jo
adc
pushf
mov
lods
imul
aad
sub
out
sbb
fildl
inc
insl
jmp
into
jmp
enter
or
adc
shll
out
jae
and
out
enter
sbb
xchg
repz
idivl
xor
sti
lods
jmp
les
lods
pop
fldl
loopne
lea
jno
out
jb
imulb
jns
gs
or
cmp
inc
jbe
inc
mov
push
rcrb
fbld
and
pop
cmpsb
dec
xchg
or
pop
pop
int3
xor
pop
mov
dec
cmp
inc
sub
in
flds
sbb
jbe
je
push
lock
sub
cmc
subl
and
jmp
ja
cmp
pop
pushf
add
or
xor
jp
out
push
xor
fmul
xchg
ficomps
cmp
pop
pushf
call
hlt
ss
dec
insl
jmp
fistl
sbb
movsl
sti
mov
dec
xchg
test
jg
ss
xchg
lods
mov
adc
jg
out
daa
add
xchg
dec
icebp
jno
xor
lds
add
jmp
adc
into
in
ja
push
dec
or
xor
push
mov
inc
inc
inc
xchg
and
sbb
imul
lret
icebp
repz
imul
notl
or
dec
and
ss
je
push
loop
push
loopne
je
stc
addl
push
cltd
lea
cwtl
scas
pop
sti
jg
cs
sbb
jmp
inc
add
into
push
outsl
push
jmp
xlat
mov
sahf
xchg
insb
aad
add
cwtl
aad
mov
cmc
fidivs
repz
mov
jae
lret
dec
outsb
and
xlat
in
shl
mov
lock
loope
push
cmp
stos
push
movsl
xor
lea
imul
divb
roll
dec
daa
mov
and
das
or
mov
mov
jne
in
fs
xchg
mov
arpl
nop
jge
sub
pop
mov
out
loopne
sahf
fdivp
rol
push
mov
out
orl
mov
or
in
leave
fidivl
dec
dec
into
mov
stos
xor
std
dec
push
pop
sub
sbb
out
sbb
sbb
xchg
popa
popa
and
xchg
mov
out
mov
jecxz
jae
sub
mov
sbb
pop
jge
repnz
inc
fs
lahf
imul
mov
in
sbb
or
test
cmpsl
pop
and
aaa
lods
sbb
xor
jp
push
cwtl
aam
arpl
data16
rorb
and
mov
push
and
clc
divb
lahf
test
jg
aad
push
lcall
test
pop
mov
sub
pop
jmp
mov
loop
dec
rcl
in
pop
in
mov
pop
sbb
stos
inc
dec
adc
jg
mov
mov
sbb
dec
adc
mov
adc
js
inc
shll
popf
sub
cmpsb
sbb
cltd
push
xorl
in
dec
add
out
popa
mov
orl
push
mov
std
shl
xchg
mov
in
xchg
lds
add
lcall
mov
imul
jnp
gs
sbb
xor
aam
out
cs
mov
clc
dec
add
xor
mov
icebp
loopne
loop
cmpb
mov
push
fisttpl
inc
ja
push
hlt
sub
mov
mov
mov
or
adc
pop
sti
aas
lret
sti
adc
jecxz
call
push
cmp
cwtl
stos
fstpl
mov
int3
xor
lds
or
mov
int
pop
pushf
int
pop
lea
inc
and
in
inc
push
imul
mov
or
jg
push
fidivl
xchg
sbb
enter
inc
outsb
push
cmp
mov
arpl
mov
sbb
sbb
lret
sub
sbbb
pop
cld
sub
mov
and
adc
sahf
cwtl
daa
pop
fisubl
nop
pop
sbb
xchg
in
xchg
insb
out
cmc
loopne
dec
sahf
mov
inc
dec
iret
out
mov
and
jle
add
lods
push
pop
mov
mov
sbb
sbb
outsl
mov
jle
fstl
ds
repz
in
shlb
icebp
mov
push
adc
fdivs
xor
or
lea
ds
data16
dec
mov
adc
xor
pop
xor
push
into
xor
or
jg
jp
loopne
ss
push
orb
cmpsb
pop
push
cmp
in
aam
cmpl
lock
pop
or
je
repnz
mov
movsb
jge
imul
cmpsl
xor
imul
xor
mov
out
push
jl
dec
jp
or
adc
add
addr16
mov
or
in
test
aas
daa
sbb
ds
outsl
stos
mov
roll
sub
es
fcomps
test
jb
cmc
mov
inc
and
jp
stc
adc
dec
std
clc
push
push
inc
adc
hlt
push
adc
jno
scas
xchg
push
mov
jno
pop
mov
pop
stos
pop
or
sub
cmp
pop
aaa
nop
lods
or
push
cmpsb
or
jp
outsl
mov
mov
clc
stos
imul
jecxz
pusha
ja
pop
bound
adc
push
out
cmp
lcall
push
in
stos
dec
jge
pop
fcompl
cmp
cmc
inc
mov
or
popl
add
xchg
ds
gs
pop
xor
and
xor
scas
add
pop
js
sub
enter
out
ret
jbe
cmp
adcb
loope
cmp
int
data16
je
stos
mov
push
repz
push
or
into
ja
dec
sarl
int3
sbb
cmp
push
movsl
adc
or
xlat
mov
jmp
jl
inc
add
push
or
cmp
shll
fidivl
call
test
imul
inc
push
pop
sbbb
daa
or
jns
movsb
sbb
cmp
push
mov
lods
rcl
sub
dec
sub
push
jbe
jno
mov
idivb
inc
sub
lahf
cmp
inc
add
fists
insb
mov
popf
xchg
divb
add
ret
ret
shrb
orl
mov
jmp
mov
sbb
out
das
out
dec
xor
into
mov
popf
into
jg
dec
mov
dec
xor
inc
pop
jl
xchg
cld
lock
adc
and
push
fwait
popf
xlat
mov
sbb
mov
test
rolb
add
pop
mov
movsb
clc
sti
mov
push
stos
ret
mov
roll
xchg
push
stos
fs
inc
mov
inc
nop
push
shrl
jo
loopne
inc
mov
sub
jbe
enter
mov
adc
pop
shlb
adc
stos
imulb
lods
pop
lret
and
push
jbe
data16
and
inc
push
negb
cmp
xchg
add
sub
aaa
or
add
pusha
sbb
mov
lods
out
lcall
mov
stos
xor
fs
add
ret
adc
jp
inc
lock
push
push
sub
stos
fcomip
mov
mov
push
push
scas
loopne
lret
push
ds
adc
jl
cmp
popa
sbb
leave
adc
push
in
xchg
cmp
push
je
fisubl
inc
fstps
mov
pop
mov
or
lods
test
test
or
jns
xor
sub
cs
and
fs
imul
mov
jae
jg
loop
xchg
jle
jb
adc
fdivrl
int
popf
adc
out
and
adc
xlat
jge
pop
fbstp
repnz
jns
enter
negl
movb
push
lret
lds
sbbb
pop
ljmp
jb
int3
lea
xor
out
xchg
mov
pop
adc
lods
pushf
in
test
call
ret
stos
ds
push
mov
lds
pop
imul
fstpl
out
iret
lods
movsb
popf
mov
push
or
cwtl
in
aad
pusha
and
jno
fsubrp
or
add
xchg
leave
stos
xchg
dec
into
cltd
cld
mov
shlb
mov
test
call
add
push
mov
push
pusha
in
imul
jae
xchg
mov
adc
cld
dec
push
adc
inc
xchg
inc
and
cmp
mov
xchg
fwait
rol
cld
jbe
sub
adc
jmp
ja
rorb
aaa
push
movsb
cli
mov
jnp
sub
xor
push
pop
and
test
jge
pushf
aaa
int
jae
dec
movsb
lods
lahf
mov
sbb
cltd
cld
add
mov
aaa
cmp
clc
idivb
mov
push
dec
shlb
mov
lods
mov
fwait
bound
outsb
mov
xchg
jno
jg
negb
inc
aam
cmp
sbb
inc
jns
pop
popf
xor
ret
sbb
jbe
enter
data16
cmp
inc
lock
cmp
in
jnp
jbe
scas
adcl
ret
gs
adc
movsl
lahf
pop
push
cli
testb
cmp
xor
jp
mov
add
js
or
xchg
add
repz
or
xchg
hlt
insb
icebp
addr16
orl
aam
pop
rcrl
sarb
dec
xor
xchg
mov
out
jmp
out
inc
gs
or
cld
pop
add
mov
and
dec
xchg
out
mov
sub
mov
icebp
push
je
rcrl
shlb
sahf
mov
data16
mov
fisttpll
pop
ljmp
lods
jbe
leave
fwait
cmpsb
cmp
push
outsb
inc
out
out
out
nop
loopne
xor
inc
push
mov
and
shrb
inc
sub
cmp
fs
aam
sub
fmul
mov
add
pop
push
mov
and
test
adcb
imul
call
sbb
insb
push
pop
arpl
rolb
in
decb
mov
mov
insl
sbb
inc
inc
jbe
dec
fsubrl
enterw
into
cmp
lds
dec
sub
insb
sub
subl
mov
mov
adc
arpl
adc
mov
stc
data16
push
mov
pop
das
scas
jb
aam
fiaddl
pop
pop
add
sub
jne
into
mov
out
dec
dec
mov
dec
sti
daa
addr16
lcall
add
bound
dec
adc
call
jp
lahf
ds
xorl
ret
cmc
arpl
and
mov
xor
pop
cwtl
inc
leave
les
mov
cmpsl
jbe
mov
cmp
aas
orl
pushf
mulb
jbe
fnstcw
inc
sbb
push
push
lea
cmpsl
clc
fldl
cmp
adc
test
mov
lcall
mov
rcl
loopne
movsb
rcrl
fnstsw
mov
cli
lea
xor
pop
add
test
adc
fucomi
aad
inc
faddl
add
add
dec
call
fidivrs
mov
xlat
inc
cltd
push
sub
js
sub
mov
repnz
inc
loop
adc
aaa
sarl
jmp
popa
sti
push
aad
xchg
xchg
ljmp
je
push
lret
stc
dec
xor
pop
xchg
pop
fisubl
xor
aas
shlb
cmc
std
inc
test
lcall
gs
xor
jb
push
imull
pop
jmp
xor
pop
push
gs
add
jmp
out
adc
jle
ret
in
scas
mov
pop
ds
add
bound
idivb
xlat
xchg
lods
xchg
inc
shrb
push
push
gs
push
stc
sbb
inc
aam
sub
ds
lcall
movsl
imul
add
lret
lret
and
mov
ljmp
scas
xchg
add
roll
fldt
lahf
xor
pop
sub
and
xlat
sbb
ljmp
mov
lock
and
aad
ficoms
into
mov
jo
push
or
or
and
fnstsw
ds
mov
mov
mov
push
dec
fidivrs
repnz
push
xchg
mov
mov
stos
mov
and
mov
xor
sar
fwait
mov
jmp
or
add
ss
mov
push
clc
inc
aad
bound
in
dec
mov
hlt
mov
adc
push
jns
lahf
rcrb
or
cmp
push
or
jp
hlt
hlt
mov
add
mov
stos
cmc
or
xor
dec
das
aam
in
lods
or
or
into
aas
xchg
fisttpll
iret
rcrb
scas
adc
sub
inc
push
stc
test
out
sahf
aad
or
orl
das
js
andb
aaa
testl
add
add
cltd
das
jmp
mov
filds
in
sbb
adcl
loop
or
ficoml
and
xor
icebp
in
rcr
adc
mov
ret
std
bnd
jl
cmp
cmp
jp
shlb
mov
push
jnp
outsb
sub
test
mov
dec
dec
add
mov
mov
cmp
js
push
int3
aad
out
ja
stc
mov
add
xorl
pop
ljmp
jl
pop
in
xchg
xor
mov
out
movsl
pop
mov
sub
or
pop
cmpsl
mov
sub
adc
imul
push
lods
pop
bound
jne,pn
push
mov
push
adc
mov
sub
fmul
xor
mov
xor
adc
ret
mov
cmp
jae
jbe
inc
push
ss
and
push
cmpsl
dec
cmpsb
jns
lods
adc
mov
ret
pop
adc
and
hlt
fscale
mov
jp
sbb
pop
test
imul
lcall
das
push
je
sti
mov
sub
icebp
mov
dec
xchg
cmp
int
xorl
test
daa
jle
stos
cmp
lods
xor
pusha
loopne
xchg
cmc
sbb
sarb
pop
push
xchg
jno
and
mulb
aaa
jae
mov
fwait
pop
adc
xor
outsb
xchg
aam
xchg
push
push
push
dec
test
fisttps
mov
inc
ret
sbb
inc
lea
mov
test
gs
sahf
push
xchg
xlat
sub
gs
ljmp
stos
outsl
fwait
sbb
andl
sub
pop
pop
daa
sub
xchg
mov
cmp
push
adc
xchg
addb
ret
addr16
pop
popa
rol
and
std
xor
fst
sbb
mov
add
mov
outsb
sub
xor
mov
and
adc
mov
aas
mov
out
popf
aaa
cmp
xchg
insl
loop
insl
adc
aad
insb
adc
sbb
dec
repz
add
pop
pop
pop
out
mov
loope
repz
das
js
adc
mov
cmpsb
pushf
mov
orl
bound
push
int
sub
and
fiaddl
jae
mov
insb
fdivl
inc
jmp
movb
dec
and
xor
enter
fmulp
cld
adc
mov
mov
dec
and
and
aad
loope
push
aas
lret
mov
add
sbb
sbb
aam
pop
fdivrs
jns
sarb
faddl
sbb
movsb
sub
rolb
outsl
inc
mov
lea
mov
pop
loopne
fcmove
ljmp
add
jmp
or
movl
jp
xchg
push
int3
sbb
leave
push
mov
test
push
sub
cld
movsb
in
mov
adc
stos
jmp
insb
repnz
leave
add
in
xchg
adc
movsl
inc
xor
xchg
sahf
int3
test
inc
lea
cmp
dec
jmp
lods
pop
in
fbld
and
out
stc
int3
pop
cmpsb
sbb
and
mov
stos
pop
enter
sub
int3
bound
loope
inc
cmc
sahf
sbb
mov
mov
cmp
inc
testb
mov
push
pop
jge
jns
dec
lds
scas
loop
cmpsb
cltd
lret
push
or
push
push
notb
mov
xchg
lret
popa
repz
inc
and
cltd
int
loopne
and
popf
neg
incb
test
loop
fwait
xchg
pop
popa
out
cmc
or
insb
jne
movsl
sbb
adc
push
xor
xchg
fcompl
ret
lods
stos
cmc
mov
xchg
pusha
mov
cmp
fwait
ret
mov
push
sub
pop
in
test
pop
iret
and
call
mov
pop
test
hlt
push
or
fnstenv
enter
lods
rol
test
pop
inc
subb
fs
xchg
cli
sub
in
sub
popa
pop
inc
sub
ret
lret
cmp
jb
pop
filds
fstpl
lcall
rcrb
xchg
cmpsb
out
or
movsb
push
xor
xor
rep
or
in
aas
mov
adcb
jns
add
adc
rcrl
xor
jnp
push
xchg
pop
lea
dec
iret
outsl
aas
push
push
mov
cmp
js
in
arpl
xchg
out
fdivp
cmpsl
cmp
icebp
mov
cld
dec
mov
loopne
movsl
pop
mov
sub
pop
mov
inc
push
subb
adcb
sbb
ja
mov
clc
out
mov
pop
inc
sbb
stos
xor
and
push
mov
sbb
cmp
jno
daa
je
rcrl
out
sbb
xor
sbb
or
cwtl
dec
add
jg
jmp
xlat
movaps
push
pop
sbb
imul
test
mov
fdivl
daa
mov
das
inc
cld
movsl
and
inc
adc
outsb
dec
jmp
pop
lahf
pop
adc
jbe
pusha
mov
push
pop
cmp
dec
cmp
dec
std
dec
adc
adc
int
js
in
lock
and
add
mov
pop
aas
add
pop
sub
std
sbb
orl
jnp
int3
add
in
mov
inc
adc
sub
andl
push
mov
cmp
popa
es
pop
add
es
adc
stos
fsubrp
cmc
in
pop
jmp
mov
inc
mov
testb
xchg
repnz
mov
mov
lea
loope
cld
pusha
les
dec
test
fnstsw
dec
enter
je
aad
nop
jecxz
loopne
das
sub
or
or
inc
ret
call
pop
fwait
xor
outsb
cmp
sub
pop
mov
mov
jmp
sub
xchg
pop
adc
cmc
sub
inc
mov
or
and
push
push
das
insb
outsl
lea
xor
fcomps
test
mov
lods
add
push
mov
ret
mov
leave
adc
cmp
aam
mov
push
mov
and
adc
inc
fcoms
call
andl
push
sub
and
test
int3
test
lock
fcomps
hlt
add
xor
xchg
cmpsb
add
ljmp
lea
push
dec
xchg
and
popf
inc
push
push
add
ss
loope
int3
jl
mov
mov
sub
mov
lock
xlat
es
or
cmpb
orl
xchg
cmp
cmp
pop
mov
pop
jecxz
mov
ds
jb
pop
push
jae
mov
sub
dec
repz
xor
lret
cld
fucomip
movsb
sbb
push
fucomip
push
dec
dec
leave
mov
or
mov
mov
or
ljmp
mov
mov
cltd
pop
cwtl
add
dec
js
pop
fwait
push
scas
daa
das
inc
mov
nop
mov
stos
movsl
ja
mov
dec
sbb
add
loope
mov
xor
xor
inc
add
xchg
loope
inc
mov
pop
insl
mov
daa
inc
iret
iret
out
mov
and
addb
mov
adc
stc
js
fwait
xchg
add
out
cmc
pusha
jl
jecxz
dec
pop
push
int3
fdivrs
sub
call
mov
dec
call
repnz
push
in
sbb
inc
mov
push
pop
pop
xor
add
adc
pop
decl
sbb
rcr
inc
sbbl
fnstcw
xchg
int
divl
inc
jnp
cmc
in
loope
lods
stos
fwait
push
es
call
adc
sbb
idivb
shr
pop
lahf
push
xchg
mov
in
stos
sbb
inc
cmpsl
mov
out
popf
test
test
adc
pop
or
lret
fisubl
adc
stos
jge
ss
test
divb
pop
sub
shrb
jle
ljmp
dec
lret
inc
dec
sub
fidivl
and
sub
mov
push
sub
testb
dec
stos
adc
pop
mov
sbb
xchg
xlat
sbb
leave
push
cmpb
pop
sub
jmp
xor
int3
imul
sub
or
sahf
lock
lcall
cwtl
popf
jbe
cmp
sub
into
xlat
aam
jbe
mov
sbb
aas
data16
into
cmpb
shll
sarl
aad
mov
sub
popf
ficomps
sub
stos
mov
fnstcw
push
cmpsl
daa
js
imul
movsb
addr16
cmp
popa
jne
pusha
or
xchg
and
xor
cmpsl
rcll
icebp
xchg
cmp
fs
call
outsl
test
mov
dec
lods
idiv
cmp
and
scas
mov
movsl
push
aas
xor
fs
sahf
xchg
mov
dec
push
cmp
xor
rcll
test
push
pop
jnp
sbb
mov
loop
add
cmp
mov
mov
mov
int
push
xchg
iret
jge
mov
ds
mov
pop
add
mov
pop
rcrl
outsb
cmp
mov
mov
or
lods
into
pop
sub
mov
dec
sub
shrl
je
adc
mov
lods
out
out
cmp
sub
ret
adc
jns
jge
mov
push
jbe
ljmp
int
cwtl
lcall
das
cmp
push
loope
lods
imul
xchg
or
ja
decb
es
sbb
loope
xor
jne
inc
mov
push
out
and
in
jp
inc
jne
outsl
lods
mov
and
mov
xchg
xchg
pop
xor
dec
enter
sbb
loop
sbb
or
rclb
inc
mov
sbb
push
out
mov
adc
shll
sub
or
ja
adc
sub
dec
push
xor
push
addr16
jo
test
pushl
sub
fadd
into
jmp
xchg
jecxz
pushf
jl
test
lock
dec
dec
inc
stos
imul
push
insl
addb
mov
push
or
cli
sub
add
jecxz
xchg
bound
outsl
jae
aam
mov
add
std
xchg
ds
jns
add
pop
mov
test
int
andb
movsl
mov
inc
dec
fbstp
mov
outsb
dec
sbb
pcmpeqb
cwtl
sub
pop
das
fs
dec
lcall
repnz
mov
sar
jo
mov
inc
in
insl
nop
jno
sub
movsl
adc
movsb
pop
adc
cwtl
test
xchg
dec
jo
movsb
inc
adc
cmpsl
xor
and
push
add
sbb
adc
inc
or
dec
mov
add
in
and
mov
sub
das
inc
dec
pop
add
rolb
iret
pop
sbb
lods
jbe
cli
rorl
pop
mov
or
test
sbb
add
stc
daa
mov
or
outsl
cltd
dec
mov
xchg
test
adc
gs
mov
adc
orl
jmp
mov
and
out
mov
or
rolb
jnp
insb
push
andl
jecxz
sbb
rclb
imul
data16
push
mov
sahf
cwtl
mov
cmp
and
sbb
inc
cmpsl
lcall
iret
xchg
idiv
adc
adc
fsubrs
xor
nop
mov
push
mov
sbbb
jmp
fwait
mov
dec
std
iret
pop
repz
cmpsl
push
movsb
fwait
push
ror
call
sbb
fbstp
and
pop
jg
mov
lret
insl
xor
scas
es
mov
pop
push
or
mov
call
je
cmpsb
aad
mov
lret
sbb
mov
in
and
pop
xor
jbe
cmc
popfw
out
test
sub
int
mov
xor
push
frstor
xor
jle
adc
xchg
mov
xor
dec
dec
add
fiaddl
insl
adc
adc
in
imul
inc
xchg
fidivs
addr16
pop
rcll
cmpsl
push
mov
imul
outsb
mov
mov
out
xchg
sub
add
pop
test
add
or
jmp
and
push
push
xor
sti
mov
jge
xchg
ficomps
push
adc
adc
loopne
add
lcall
pop
repz
xchg
shlb
dec
push
sbb
jecxz
popf
push
mov
jle
int
or
leave
movsl
pop
mov
and
xor
scas
jb
dec
mov
dec
out
xchg
stos
sbb
jb
out
test
pop
pop
pop
cs
gs
adc
addl
push
stc
sbb
mov
aam
cmc
add
mov
rcrb
mov
push
xlat
je
out
jae
idiv
daa
pop
mov
mov
mov
fdivl
orl
mov
cmp
mov
adc
outsb
fistpl
add
mov
cmc
movsl
enter
arpl
fstl
aaa
xchg
nop
push
test
test
scas
sub
enter
mov
dec
insb
jae
jg
test
lods
cmpsb
jo
aam
repz
out
das
sbb
bound
mov
divb
xor
sub
subb
push
jo
popf
stos
jb
adc
sub
jge
pop
in
imul
cltd
dec
pop
mov
outsl
leave
cmp
dec
lea
popf
inc
xor
aad
rclb
mov
cmp
arpl
pop
js
out
push
je
jns
sbb
and
testb
adc
add
insl
addr16
js
sub
fcmovb
adc
jae
add
repnz
add
dec
pop
cmc
incb
mov
cmp
test
lret
pop
adc
ja
mov
call
adc
into
ds
and
fldl
sub
jp
cmc
ss
pop
cmp
pushl
roll
xchg
into
pop
mov
adc
xlat
jb
out
push
fdivl
add
test
aas
push
push
rcll
repnz
add
jmpw
je
icebp
cs
push
dec
pop
lcall
sub
test
insl
je
jne
es
or
int
sbb
fildll
inc
dec
adc
mov
push
xchg
lock
cwtl
xor
sub
sti
cmp
xor
mov
xlat
cli
insl
pop
insl
jge
nop
je
into
fdivrl
scas
int3
out
push
enter
jne
jg
pop
adc
call
repnz
or
inc
out
movsb
push
mov
xchg
stos
sbb
and
pop
fcoms
mov
mov
jo
ret
mov
es
les
xchg
fs
inc
mov
in
or
cmpsb
xchg
dec
sub
flds
add
cmp
mov
hlt
mov
unpcklps
mov
sub
cmpsb
jae
xchg
push
jmp
shlb
mov
cmp
aaa
cs
cmp
add
add
bound
dec
adc
add
adcb
sbb
test
orl
dec
push
test
add
stos
clts
fimuls
push
or
fsubr
mov
adc
cmp
mov
adc
lcall
lcall
testb
adc
bound
stos
loopne
scas
cmp
addr16
sti
loope
push
in
xchg
cmp
fnstsw
xchg
addr16
cwtl
shl
sbb
mov
out
shrl
push
stc
mov
inc
jne
push
imul
jecxz
xor
aas
pop
or
ljmp
sbbl
stos
push
adc
lret
and
add
fcoml
fsubs
in
loop
in
test
iret
cmp
jbe
insb
aad
mov
sub
test
sbb
je
sbb
fwait
and
push
inc
addb
cmpsl
pop
cmp
jno
jle
das
gs
sbb
mov
mov
std
xchg
add
mov
cmp
xchg
pushl
cmp
mov
leave
hlt
and
push
insb
cmpsl
and
je
iret
push
and
sub
js
xor
mov
dec
jl
test
pushf
fsubl
mov
mov
leave
lock
xor
orl
lret
xor
add
sub
test
dec
sub
in
xchg
lock
out
lds
push
mov
jnp
out
or
pop
scas
push
shlb
inc
rorb
mov
gs
push
jo
xchg
pop
cmp
sub
stos
fisttpl
loop
pop
ficomps
push
push
ja
sbb
pop
adc
mov
adcb
push
lahf
sbb
add
adcl
iret
js
rolb
jl
jne
mov
pop
xchg
movsb
add
clc
es
testb
popf
mov
xchg
dec
lret
cmp
mov
pop
cmpsl
xchg
negl
pop
add
cmp
sahf
pop
xchg
shrb
fwait
shlb
clc
pop
inc
or
mov
daa
ficoml
mov
icebp
xor
icebp
fwait
sbb
jp
inc
notb
lods
fsub
mov
out
aam
aas
cmc
in
xchg
js
mov
jae
dec
pop
add
push
mov
jge
mov
ret
dec
and
push
cmovge
mov
movb
rorb
mov
test
mov
and
mov
dec
cld
nop
mov
pop
mov
or
and
push
or
push
jg
scas
adc
repz
adc
push
dec
sbb
add
das
push
or
repz
das
lods
mov
mov
cli
cs
shrl
imul
pop
push
ljmp
insl
dec
jo
cmp
mov
add
fucomp
sbbb
std
mov
and
call
ficomps
and
loope
xchg
add
and
sub
call
sub
in
and
mov
mov
inc
dec
push
adc
aam
mov
insl
inc
stc
xor
loope
fld
aaa
or
mov
cli
xchg
xchg
movsl
xchg
xor
cli
pop
in
stos
packssdw
iret
cmp
adc
stos
jo
pop
dec
mov
ret
xchg
gs
sbb
sbb
divb
mov
movsl
sti
out
in
and
pop
sub
cwtl
sub
push
leave
fs
pusha
jg
loope
mov
or
xchg
mov
lea
subb
push
dec
es
push
mov
pop
sbb
adc
pop
adc
lcall
push
shll
mov
sub
fsub
xchg
aad
es
mov
mov
lea
mov
pop
or
stc
ja
fcomps
mov
movsb
out
cli
mov
xor
orb
lcall
xor
das
xorb
mov
cmp
std
push
aad
dec
imul
addl
je
adc
fistpl
test
xor
cmp
cmp
dec
ret
sub
add
cmp
or
pop
xor
sbb
fwait
ret
loop
movsl
incl
push
stos
mov
fs
popa
fadds
fucompp
aam
ret
adc
jle
lret
insl
fmuls
pop
lcall
into
fwait
scas
add
cmpsl
bound
pop
movsb
lcall
imul
out
lds
cmp
insb
sub
jle
outsl
ljmp
xor
pop
fucomp
cld
mov
adc
test
cmpsb
outsl
push
push
mov
cmpsl
cs
inc
loop
xchg
test
sbb
push
arpl
xor
push
ljmp
cld
or
jl
dec
and
adc
pop
cmp
inc
adc
push
shrl
mov
ret
push
mov
ret
xchg
movsl
fnstenv
and
sub
xlat
pop
leave
scas
dec
dec
jge
dec
cmpsb
insb
fwait
cmpsl
ss
call
in
movsb
clc
jns
lea
std
inc
mov
das
cmp
cltd
jl
add
in
imul
cld
and
lea
fldcw
in
roll
pop
sti
mov
imul
bound
cs
outsl
sub
jg
addr16
out
insl
or
xor
inc
scas
lds
jecxz
nop
pop
cmpb
xchg
xor
incl
loop
push
mov
adcl
push
inc
aaa
xchg
sbb
sub
ljmp
test
mov
int3
add
xor
xchg
cli
imull
jp
jb
cmc
call
mov
xchg
int
lods
out
add
repz
cltd
pop
push
test
push
jp
out
adc
jnp
xor
cmp
cs
scas
jnp
rep
push
imul
imul
sbbb
ja
pop
jns
out
push
inc
inc
in
scas
shll
flds
and
mov
in
fldt
imull
fs
cmp
jnp
adc
mov
rcll
clc
shlb
pop
int
xor
xorb
in
adc
add
mov
dec
icebp
lods
xor
pop
push
leave
int3
mov
mov
sbb
cmp
mov
jl
mov
call
popf
rorl
add
xor
decb
aas
leave
push
xchg
mov
and
jg
aaa
push
mov
popa
dec
dec
cwtl
sti
sbb
add
xlat
je
sub
add
mov
dec
fisubs
push
mov
cmp
cmpsb
ss
pop
xor
andb
cltd
cwtl
xchg
mov
enter
inc
jge
pushf
in
inc
sbb
mov
push
adc
jp
jb
popf
add
aaa
fwait
enter
sub
ja
cmp
test
mov
loopne
add
movsb
lret
stos
mov
enter
push
mov
mov
movsb
add
sbb
fisubl
or
sub
ljmp
sar
imul
pop
fstpt
xchg
pop
sbb
addr16
rorb
sub
mov
jmp
inc
fcomps
imul
or
sub
push
cmp
test
shrl
jo
jge
xchg
add
mov
adc
iret
xor
stos
ds
addl
es
data16
push
loope
mov
sbbl
mov
jb
das
leave
pop
sarl
cmp
cmp
xor
out
xchg
test
clc
xchg
push
lahf
or
cld
sbb
xchg
inc
inc
dec
lods
mov
pop
cmp
push
js
icebp
enter
mov
and
fwait
adc
dec
fsubl
and
ljmp
sbb
imul
push
sarl
lret
loopnew
fisubrl
loopne
clc
sub
jnp
mov
inc
call
rcr
jle
lods
push
out
das
mov
lds
sub
dec
cs
mov
mov
aam
and
dec
mov
jns
sti
aaa
fnsave
fld
mov
in
adc
lea
xchg
stos
jns
out
sub
loopne
mov
cmp
pop
outsb
jns
cld
lahf
outsb
cltd
imul
pop
pop
cwtl
sti
fiaddl
and
or
jle
in
mov
push
pop
push
sub
fdivl
in
or
add
leave
rcll
test
imulb
add
clc
cltd
mov
aam
inc
aam
stos
mov
cmp
mov
adc
push
out
aaa
jl
jnp
movsb
inc
dec
int
mov
adc
pop
call
mov
add
xchg
or
cmp
or
xchg
aam
aad
daa
ja
sti
mov
cli
jb
outsb
pop
and
pop
or
dec
sub
cmp
dec
in
push
mov
sbb
lock
mov
fsubr
cli
stos
dec
mov
shll
push
les
lods
pop
incb
pop
clc
lds
outsl
push
call
stos
push
xchg
mov
cmp
push
and
cmp
sub
fwait
fwait
pop
stos
sub
fdivrs
sbbb
mov
pop
mov
jbe
movl
sarb
dec
adcl
jge
cmp
add
xor
mov
jge
jge
mov
xchg
mov
jae
mov
in
sub
int
mov
int3
sbb
lcall
je
loop
dec
scas
cmp
popf
inc
push
test
ljmp
lea
push
or
popa
jecxz
mov
pop
flds
jmp
inc
push
loope
cmpb
ja
fstp
out
push
hlt
loop
xlat
add
inc
aaa
in
nop
popa
sahf
jns
pop
pop
mov
pop
sbb
xchg
mov
mov
mov
icebp
sbb
loope
sub
lcall
outsb
call
mov
outsb
dec
hlt
dec
inc
push
sub
enter
push
xorb
jl
std
jb
stos
ljmp
mov
in
ja
into
ljmp
in
sbb
cmpsl
cmp
inc
hlt
mov
mov
or
scas
inc
mov
xchg
movsb
cmp
cli
or
fistpll
mov
fidivs
sahf
loopne
cmp
mov
inc
ljmp
pop
mov
movsl
pusha
jb
iret
dec
adcb
std
sub
sub
sbb
mov
mov
fdivr
into
cmp
out
cs
push
lret
ds
aaa
sbb
add
out
ret
jno
imul
xchg
test
pusha
xor
xorb
dec
xchg
sti
pop
xorb
push
mov
fisttpl
mov
xchg
mov
adc
push
cmp
xor
mov
aad
xor
xchg
ret
adc
daa
jb
push
popf
js
xchg
lcall
add
and
adc
test
inc
inc
sub
dec
xor
inc
mov
rcrb
sbb
test
aam
stos
mov
adc
jno
pusha
test
leave
movsl
adc
mov
cmp
add
dec
push
test
test
sub
jg
sahf
or
lret
and
movsb
sub
dec
or
pop
stc
push
dec
arpl
out
inc
inc
add
mov
roll
mov
cmp
sahf
stos
add
mov
inc
sub
in
jg
icebp
ja
out
jecxz
stos
out
xor
fs
inc
mov
lahf
enter
and
or
sub
sbb
pop
xchg
jnp
xor
sub
jge
inc
cli
xchg
mov
repz
data16
cld
cmpsb
jne
and
mov
repz
sbb
adc
outsl
cli
mov
add
jecxz
push
jae
adcl
adc
call
fcomi
sub
mov
push
sbbb
ljmp
arpl
addr16
test
push
cmp
xchg
fwait
xchg
mov
sbb
inc
sub
and
cmpsl
insb
pop
ret
mov
icebp
mov
popa
pop
jne
jae
lods
jns
imul
cwtl
icebp
sarb
in
faddl
lret
dec
pop
ret
inc
dec
jnp
jb
inc
or
bnd
in
xchg
mov
xor
cld
pop
sub
std
lods
push
shlb
and
push
add
cwtl
or
push
ds
out
push
out
loop
mov
ljmp
lods
cwtl
repnz
stos
movsb
cmp
or
stos
in
sbb
jg
pop
push
das
inc
sbb
jns,pt
cli
cmpsl
jl
fwait
adc
clc
clc
cmc
mov
push
jae
add
decb
sub
push
rolb
jb
xor
into
std
std
icebp
les
pusha
ret
inc
arpl
jp
mov
js
and
mov
inc
in
mov
sbb
shrl
jmp
imul
push
pop
inc
jmp
add
xor
aaa
std
inc
mov
aaa
or
mov
fadds
test
mov
or
les
insl
mov
mov
arpl
je
xchg
aaa
divb
fs
out
cmc
cmp
test
out
clc
inc
dec
cs
sbb
sbb
mov
dec
shlb
xorl
aaa
js
repz
mov
mov
jle
je
pushf
pop
ja
aad
sub
sar
loop
sub
mov
push
jae
sub
std
movl
push
shrb
cmpsb
nop
jecxz
inc
mov
inc
addr16
flds
cmp
pop
scas
int
jle
aad
mov
repz
mov
cmpb
adc
mov
inc
push
es
mov
mov
out
loopne
lds
jae
test
aad
jge
es
mov
mov
or
xchg
cld
jb
in
push
fiadds
xor
addb
jg
cmp
fstp
subb
xor
mov
push
divl
stos
scas
ljmp
std
cld
mov
push
jg
xchg
jmp
or
lret
sub
push
cmp
sub
jge
inc
in
inc
pop
jp
fisubrs
sbb
imul
mov
push
jbe
adc
sbb
mov
cmp
andb
std
xor
negb
pop
push
mov
sbb
loope
fmull
cmp
mov
repnz
add
xchg
bound
pop
vsubpd
in
fildl
sti
sub
cld
inc
std
pop
pop
popa
jne
pop
adc
xlat
movsl
sub
iret
lods
mov
jno
mov
int3
sbb
jg
jle
jo
mov
gs
ja
and
sbb
sbb
mov
pop
dec
add
jg
out
jecxz
stc
add
jle
movsl
adc
xor
mov
aam
sti
and
ficomps
fs
mov
xchg
lock
or
add
into
or
lods
imul
lods
add
arpl
insb
inc
xchg
mov
sub
stos
push
dec
jno
pusha
lea
inc
je
push
les
jle
sub
mov
push
sub
xchg
aam
shl
gs
clc
out
push
loop
mov
sub
enter
scas
push
sbb
test
xor
ffreep
lods
or
leave
idiv
and
roll
mov
inc
test
stc
mov
or
xchg
sti
popa
fiadds
loope
jns
leave
out
dec
scas
add
add
sub
lods
pop
push
xchg
mov
inc
arpl
out
mov
insl
pop
pop
lret
push
int3
xor
xor
mov
dec
cmp
push
xchg
push
fmull
xor
adc
imul
cmp
adc
mov
into
add
or
or
test
xor
cmp
fdivl
test
lcall
xchg
insl
jae
adc
lret
pop
or
sahf
push
sbb
push
mov
mov
nop
orb
pop
dec
pop
jle
test
test
mov
les
cmpsb
mov
scas
mov
repz
sub
stc
mov
test
test
out
xchg
mov
xchg
jbe
cwtl
popf
or
dec
jmp
xor
pop
push
and
sbb
int3
push
lahf
mov
mov
ljmp
imull
test
fdivs
jle
je
jb
pop
flds
mov
clc
ja
inc
pusha
insb
ret
sbb
push
movsb
bound
shlb
jo
ret
push
mov
mov
movsb
mov
xor
cmp
ret
flds
out
cmc
jo
xlat
push
pop
shrb
dec
mov
insb
stos
jmp
call
xor
imul
xlat
sub
jb
pop
or
es
mov
out
dec
shll
lahf
mov
imul
sarl
xchg
inc
xchg
push
adc
dec
jg
push
xlat
pushf
pop
or
icebp
lcall
sub
push
dec
mov
cld
aas
scas
and
sbbb
outsb
rcl
xchg
adcb
fdivs
test
mov
jmp
pop
sysenter
je
rcr
scas
negb
mov
arpl
pop
shrb
cmp
mov
mov
sbb
xlat
jmp
xchg
sbb
xchg
sub
inc
iret
test
mov
faddp
sbbb
leave
lcall
xor
out
mov
inc
out
rcr
inc
ds
and
dec
mov
lock
repz
mov
lret
stos
imul
test
pop
pop
xor
stos
add
ljmp
dec
stos
or
clc
out
or
js
pop
fists
incb
and
fcmove
insl
sub
lret
adcl
sbb
nop
push
or
movsb
pop
cmpsb
cwtl
icebp
mov
inc
adc
cmc
push
sub
jmp
sarb
push
in
jne
popf
fnstenv
dec
fwait
pop
imul
ja
inc
idivl
push
push
clc
pop
push
repnz
loopne
in
or
loop,pn
repnz
inc
mov
mov
leave
push
das
mov
dec
lret
daa
mov
rorl
insb
pop
or
push
cmp
into
cmp
dec
test
xor
sarb
dec
jecxz
sar
rorl
or
add
popf
and
xchg
popa
mov
mov
cmc
jge
mov
test
popa
lock
pop
dec
mov
push
pusha
mov
inc
push
fsubl
sbb
cld
ljmp
sub
scas
push
loop
movsl
in
arpl
mov
mov
dec
ljmp
push
pop
pandn
or
test
rorl
and
scas
mov
adc
lret
jge
xlat
add
ret
sbb
out
rcrb
xchg
repnz
lods
pop
lds
mov
xchg
out
xor
fistps
psubq
push
xchg
idivl
rorl
sbb
ret
icebp
cltd
adc
inc
aam
mov
stos
mov
jg
mov
mov
xor
push
push
repz
pushf
mov
mov
and
pop
arpl
push
data16
daa
cmpsl
xor
jmp
pop
mov
sbb
pop
lret
test
mov
xchg
arpl
xchg
adc
int
mov
jp
pop
jne
cmc
cli
fsubl
add
sub
pusha
fisubrs
dec
jbe
inc
leave
xchg
or
dec
xor
pop
sarb
ret
pushw
fimuls
xchg
inc
shrl
and
nop
mov
and
xchg
pop
inc
movsb
les
fidivrs
mov
fs
dec
sbb
iret
pop
sbb
cltd
pushf
mov
das
xchg
int3
mov
and
push
adc
push
incb
cli
fs
fcompl
inc
dec
mov
hlt
jae
mov
dec
mov
pusha
lahf
aam
mov
push
add
adc
cmp
push
roll
sti
xlat
mov
cmp
sbb
fstl
pop
and
mov
sti
stos
mov
lds
mov
clc
cmp
sbb
mov
xchg
cli
inc
gs
add
xchg
dec
stos
mov
xchg
imul
adc
push
es
mov
and
sub
cltd
addb
xchg
add
or
shrb
xor
xchg
ftst
or
cmp
lock
mov
lock
sbbl
in
divl
push
imul
in
je
cmp
aaa
shl
xor
xlat
addr16
mov
int
ss
and
push
pop
push
push
and
lahf
aad
repnz
mov
outsl
dec
cmpsl
aaa
loope
cmp
xorl
push
cmc
dec
add
loopne
mov
not
mov
js
cmpsl
jbe
pop
mov
andb
out
inc
into
cmpsb
mov
add
fsubp
pop
mov
subb
or
pop
popf
add
mov
add
repz
push
push
push
shrl
xor
and
dec
out
inc
and
jge
mull
push
loop
pop
shlb
sub
imul
push
loope
add
mov
rorb
ret
mov
lcall
test
sbb
pop
cmp
xchg
xlat
test
adc
cmpps
cmp
jns
sub
jge
inc
imul
loop
add
mov
pmulhw
inc
aaa
orb
test
xor
sarl
ljmp
xor
les
and
jns
cmpsb
fcmovbe
mov
add
dec
ss
icebp
or
in
mov
push
aam
mov
sarl
roll
xchg
cmp
shlb
dec
sbb
mov
addr16
cmp
ds
push
inc
das
or
sub
xor
or
in
jae
push
mov
xor
stc
leave
xchg
dec
sub
loopne
mov
fs
popf
sbb
fldl
inc
leave
repnz
je
out
es
and
cmp
clc
adc
es
pop
xor
jno
adc
pop
xchg
and
or
out
dec
aam
popf
pop
jl
and
mov
pop
xor
aaa
sub
mov
xor
test
xchg
mov
push
sbb
imul
xchg
mov
pop
adcb
mov
cmc
inc
push
push
adc
sbb
in
js
cmp
or
mov
push
dec
pop
pop
cmpsb
bound
data16
idivb
lret
and
xchg
xor
inc
sub
mov
scas
std
sbb
adc
sbb
dec
mov
fidivrs
or
mov
out
pusha
pop
into
dec
dec
shlb
mov
adc
cmp
ret
mov
lock
rcll
mov
cmp
into
xor
or
call
pusha
pop
mov
and
pushf
stos
bound
or
sbb
into
xchg
dec
mov
movsb
dec
add
pop
lock
pop
push
adc
jg
mov
or
jg
jmp
xchg
adc
push
imul
mov
add
sub
orl
push
mov
div
iret
lock
sbb
out
pushf
inc
xor
sahf
add
dec
imulb
cwtl
icebp
les
xchg
scas
add
rol
addr16
sbb
xor
lahf
scas
xlat
cmc
push
fidivs
cmpsl
int3
pop
push
lret
out
jns
inc
pop
jp
pop
fs
and
sub
mov
out
insl
lock
inc
pop
stc
ja
sub
pop
mov
test
cld
sbbl
lahf
test
xlat
lock
adc
dec
popa
sbb
nop
aas
add
test
popf
or
push
push
mov
rcrl
in
sub
outsl
andb
jns
ds
push
jmp
dec
outsl
sub
push
add
sbb
xchg
add
mov
add
inc
mov
xor
sub
xorb
sbb
cltd
jo
mov
out
fnstsw
loope
dec
fs
xlat
pop
popf
or
cmpl
mov
ret
aas
xor
pop
cmp
jo
mov
out
mov
push
lods
jp
pop
xchg
jne
sbb
cli
sbb
push
arpl
repnz
mov
fnstsw
jp
push
sti
shlb
call
ja
and
mov
movsb
mov
add
sub
loop
add
dec
movsl
jb
xor
mov
adc
cs
lods
pop
sbb
xor
std
out
filds
aad
mov
push
mov
mov
mov
inc
and
push
loope
add
lea
outsb
scas
jns
pop
cmpsb
sub
pop
mov
lret
arpl
lahf
shlb
ret
mov
test
jae
jmp
jmp
cmc
mov
mov
shlb
scas
mov
das
jb
cmove
je
pop
imul
mov
outsb
mov
mov
dec
fdivr
mov
loopne
mov
arpl
dec
into
jp
arpl
push
mov
popa
cmp
xchg
scas
mov
mov
cmp
adc
cmp
dec
push
sbb
xor
mov
adc
subb
mov
mov
mov
add
dec
mov
inc
icebp
into
mov
or
ret
shll
jo
or
cld
loop
stc
aas
add
outsb
xor
pop
or
push
cmpsl
xor
jnp
mov
sub
inc
inc
push
out
lahf
pop
test
cmpsb
or
add
jle
repnz
adc
shll
pop
dec
arpl
jns
jge
enter
test
add
lret
inc
int3
dec
mov
into
push
dec
mov
cmp
ljmp
xchg
adc
lods
xchg
xor
sub
sub
cli
lods
mov
imull
cmp
jae
pop
xchg
sbb
fsin
cs
mov
add
dec
mov
lretw
inc
std
les
enter
test
or
pop
xor
stos
push
daa
es
leave
out
xchg
mov
jl
lods
call
stos
pop
lahf
fadds
push
inc
cmp
notb
mov
xchg
scas
lea
dec
dec
mov
jne
jnp
inc
mov
idivl
adc
and
scas
cmp
cmc
loope
sar
mov
add
mov
mov
stos
fnstcw
push
sbb
pusha
mov
test
sub
jge
ficompl
scas
xchg
xor
mov
jecxz
popl
inc
dec
add
arpl
adc
cld
call
jnp
mov
cmpsb
das
sub
lods
dec
jmp
dec
xlat
shll
mov
add
in
inc
enter
es
out
cmp
mov
repz
hlt
xchg
cmpsb
and
cmp
insl
cmp
or
sbb
cmovns
inc
out
lods
fisubs
popf
cmp
mov
sub
xchg
adc
ss
push
aam
pop
mov
dec
inc
push
pusha
pop
push
mov
test
stos
jae
pushl
ja
dec
data16
pusha
mov
and
cmp
xchg
arpl
fnsave
push
aas
or
movsb
aaa
cmpsl
std
mov
jle
or
pop
pop
je
add
push
in
add
push
mulb
pop
and
pop
xchg
dec
shrb
leave
or
ror
mov
mov
push
or
fnop
fmull
xchg
jp
imulb
jno
push
cltd
lods
inc
add
outsl
mov
ret
xchg
shr
cmp
push
pop
shr
mov
cmp
insb
sbb
dec
sub
testb
mov
push
lahf
xchg
out
test
cmp
push
fbstp
cmpsl
cmp
jmp
pop
jge
popf
addr16
mov
out
add
pop
fwait
loope
cmpsb
repz
test
loope
jmp
je
int3
sarl
in
sub
pop
or
outsb
movsb
inc
and
cmpsl
mov
hlt
imul
cwtl
bound
filds
stc
sub
mov
add
out
stc
daa
mov
frstor
fidivrs
jno
dec
cmp
inc
dec
xchg
pop
pop
or
cmp
push
mov
stc
pop
pop
mov
push
and
push
loop
mov
movb
adc
mov
add
stos
cli
xorb
inc
xor
ja
push
dec
repz
push
mov
cmp
mov
jne
jg
sub
lahf
loopne
mov
dec
repnz
movsl
adc
gs
jns
insb
jb
or
sarl
gs
in
jmp
arpl
xchg
dec
dec
or
loop
jnp
add
fstpt
gs
dec
cmpsb
and
hlt
pop
adc
fdivr
adc
xor
cs
pop
xor
sub
cmc
hlt
cs
push
or
jl
arpl
cmpsb
mov
shl
rcll
nop
or
ja
outsb
std
fmull
fcomps
iret
fnop
cmp
fidivl
or
bound
int
rcrl
cmp
out
cmp
jg
jmp
jo
repnz
and
adc
xchg
loop
or
shll
lret
mov
ss
movsl
inc
test
repz
and
rcrl
mov
pop
stos
inc
test
pop
fidivl
xor
fstpt
outsl
sbb
cwtl
movsl
mov
iret
jl
mov
cwtl
out
inc
pop
in
orb
and
sar
aaa
cltd
pop
icebp
sar
xchg
pop
shlb
jae,pn
mov
ret
pop
cmp
mov
mov
xor
mov
pusha
sbb
lock
popf
setb
inc
insb
pop
xor
es
int3
mov
cmp
pop
subb
pop
pop
xchg
pop
fmull
aad
push
jle
mov
fmull
mov
cltd
xor
xchg
inc
inc
inc
ss
pop
jle
xor
js
or
mov
cmp
ss
sub
xchg
mov
push
jp
jne
popa
mov
lret
sbb
loopne
mov
lret
cmp
popa
inc
je
push
add
fldcw
or
mov
mov
mov
cli
xlat
loope
jns
xor
jo
mov
lods
faddl
test
inc
xchg
aam
cld
ja
enter
stos
int3
push
lret
mov
lock
cmp
push
add
ss
lods
fimuls
mov
or
adc
push
jmp
not
fs
sub
ss
inc
das
fildl
mov
dec
jge
add
sub
cmp
movsb
movsl
jae
inc
pop
shrl
leave
sub
jne
mov
jge
lea
add
mov
mov
outsb
notl
adc
push
ret
or
test
dec
push
lds
add
push
sbb
sub
sub
stos
mov
sbb
and
test
pextrw
push
pop
jg
xchg
pusha
push
mov
and
push
ret
mov
jp
xor
icebp
or
mov
mov
pushf
cmpsl
xor
lret
pop
subb
or
dec
fs
outsb
push
lods
inc
xchg
popa
sub
stc
mov
xchg
mov
cmpsl
xor
gs
xor
sub
dec
mov
idivl
inc
or
jp
gs
sbb
dec
sub
repz
and
pop
outsl
mov
mov
dec
in
imul
ss
xchg
cmp
mov
cld
mov
push
push
and
outsl
sbb
sahf
cmp
lea
jle
adc
sbb
insl
and
lock
stc
pop
nop
inc
mov
sbb
aaa
in
and
movsb
mov
pop
dec
cmpsl
mov
pop
popf
mov
lahf
xor
mov
jo
cmp
adc
nop
inc
add
and
jbe
into
gs
sub
jae
sahf
push
and
movsb
out
sub
inc
mov
xchg
ss
pop
insl
xchg
dec
jbe
adc
cmc
int3
cwtl
sub
aad
jge
adc
add
addb
scas
xor
call
test
fstp
insl
lret
aam
sub
xorl
into
das
xchg
repnz
shll
sahf
clc
sub
pop
outsl
cwtl
xchg
ja
push
mov
mov
in
push
leave
mov
out
jnp
push
cmpb
push
stc
cld
push
testb
fists
outsl
mov
fcoml
mov
test
sub
add
popa
pusha
lea
arpl
in
pop
cmp
mov
inc
push
sub
cli
push
sub
cmpsl
movsl
jae
push
jnp
decl
shll
popa
rcrb
std
stos
inc
js
xor
inc
mov
mov
es
mov
pop
andb
mov
fnstsw
mov
mov
in
mov
sbb
push
into
popa
clc
lahf
aad
js
push
sbb
mov
sbb
mov
or
ret
or
popl
pop
sahf
fstpl
fistl
imul
push
notb
fs
rol
fimuls
sbb
add
pop
sbb
icebp
add
sbb
movsl
jg
pop
cwtl
mov
ds
lahf
cs
fwait
mov
popa
enter
shl
pop
imul
mov
inc
into
test
mov
in
mov
and
fiadds
sub
pop
lock
lock
fwait
imul
sti
leave
cs
mov
pop
mov
mov
neg
loope
rorl
aad
out
inc
test
aam
sbb
xchg
outsl
ljmp
outsl
repz
inc
sub
xorl
ds
inc
xor
aam
lods
add
pop
cmp
jbe
sbb
jmp
scas
gs
add
test
stc
cmp
inc
das
cmp
sti
push
push
mov
jg
shl
aaa
jbe
fists
and
dec
adcl
mov
icebp
ret
mov
stc
adc
dec
adc
outsl
jecxz
icebp
mov
shlb
push
ret
rolb
pusha
into
adc
push
and
in
cmc
push
lds
push
dec
sbb
mov
into
push
stc
sub
dec
cmp
push
add
out
mov
mov
mov
in
dec
push
xor
mov
adc
bsr
fnstsw
aam
je
adc
icebp
mov
adc
jmp
pop
add
dec
push
std
movsb
push
sub
and
adc
outsl
cmp
shrl
out
or
in
mov
ljmp
xor
xchg
xchg
adc
in
mulb
jb
test
cld
out
mov
mov
mov
pop
mov
add
cmc
add
sar
xor
sub
jns
notb
mov
ss
imul
mov
popa
cld
cmp
idivb
jae
jp
cmp
mov
lods
xlat
pop
js
dec
cltd
adc
sbbl
mov
outsb
push
xchg
mov
imul
dec
test
ret
dec
lahf
into
jl
bound
xor
jno
aas
fcompl
lcall
add
sbb
ret
data16
push
dec
or
loope
ljmp
mov
std
in
int3
pop
scas
or
push
arpl
hlt
addr16
mov
xchg
pop
push
inc
cs
test
shll
xchg
rcrl
push
sbb
mov
sbb
repz
lret
push
lock
hlt
in
jns
add
je
orb
aaa
xchg
ja
sbb
mov
imul
mov
fidivs
cmc
mov
in
cmpsl
les
dec
xor
popa
jle
mov
ret
bound
out
adc
mov
mull
cmp
shll
hlt
icebp
stos
mov
cmp
push
sbb
jl
mov
ja
inc
cmovge
xchg
push
xor
lret
mov
insb
mov
jl
shlb
lds
or
or
add
sub
jl
mov
aam
sub
or
rcrb
test
cmp
push
lahf
mov
std
or
and
fldt
shll
push
sub
pop
inc
sar
test
leave
icebp
ret
sub
jo
out
pop
lret
movsl
rcl
pop
pop
fwait
sbb
ds
xchg
mov
and
int
or
std
push
inc
sub
cmp
inc
out
leave
in
out
jge
or
jns
mov
mov
mov
lretw
addr16
sub
hlt
aaa
and
mov
loop
pop
cld
push
rcrl
iret
xchg
xor
push
dec
jecxz
pop
xor
mov
jb
movsb
mov
insl
adc
inc
mov
call
test
pop
loope
sbb
aam
gs
fildll
imul
imul
rcll
or
cmpsb
adc
push
xchg
sub
icebp
cwtl
xchg
cli
call
jns
in
dec
daa
cmp
lret
leave
fwait
movsl
decl
xchg
jo
clc
cmp
mov
mov
inc
xchg
bnd
dec
and
mov
xor
shl
cmpsl
hlt
fisttpl
cmp
mov
repnz
xor
jbe
or
idiv
sarb
mov
mov
lahf
insl
lock
jnp
int3
sbb
fcomps
aam
arpl
adc
xor
leave
cmp
dec
dec
pop
xchg
loope
sbb
ret
decl
inc
mov
mov
mov
in
das
xor
dec
and
xchg
aam
and
stc
imul
addr16
gs
shrl
and
inc
pop
inc
adc
mov
mov
rcrb
into
cmp
aaa
xor
inc
pop
jne
shrb
push
lods
lcall
cmp
mov
daa
add
in
dec
mov
lock
sti
lret
pop
push
or
out
push
mov
sbb
outsl
rcll
ret
pop
ja
daa
or
pop
or
cmp
jno
or
inc
add
lcall
jbe
dec
and
jl
lret
test
push
in
mov
pop
popa
xchg
notl
dec
mov
icebp
xchg
fs
testl
ds
cmp
jno
jae
mov
jecxz
jmp
inc
arpl
fwait
xchg
sbb
mov
adc
cmpsb
pop
les
and
fmull
inc
mov
and
fisttpll
add
sti
int
xchg
inc
in
cmp
xor
mov
movsl
mov
call
insb
into
xchg
std
addr16
adc
pop
push
pop
sbb
pop
incl
rorl
iret
and
push
and
sbb
or
lcall
cld
mov
icebp
jmp
xor
in
pop
and
fnstsw
inc
push
sub
jbe
or
xchg
push
leave
enter
push
mov
iret
push
test
sub
cmp
arpl
fbld
sar
cwtl
jne
aas
mov
mov
test
pop
adc
enter
jp
pop
callw
imul
inc
cltd
mov
jns
icebp
add
push
mov
mov
sbb
mov
int3
inc
mov
out
pop
jnp
and
flds
jne
sbb
mov
ret
mov
pop
mul
lds
sbb
inc
jnp
mov
mov
adc
rol
popa
push
push
xchg
inc
cmp
stos
mov
pop
mov
je
jnp
jbe
mov
lods
add
stc
loope
pop
loope
cwtl
fbstp
shlb
test
pop
adc
cmp
cmp
dec
jno
or
xchg
xchg
lods
dec
call
push
out
rorb
jae
stc
in
rcll
in
or
dec
add
iret
mov
pop
jbe
pop
pop
jecxz
addl
sbb
out
cs
leave
cmc
dec
gs
imul
push
jno
test
mov
push
inc
adc
mov
es
pop
sbb
add
fwait
rcrb
movsl
mov
mov
adc
cmc
shll
fimuls
loop
mov
lret
jo
lret
loopne
je
xchg
jae
cmp
push
ds
jmp
pop
jne
pop
jl
sub
cld
sbb
lods
frstor
dec
rep
call
popf
or
jle
imul
fbstp
pop
lea
arpl
sbb
inc
add
push
mov
and
das
aad
xchg
aas
cld
data16
xchg
sahf
mov
mov
call
cwtl
jl
jle
repz
mov
cs
mov
and
shr
aam
add
push
loop
popf
pop
xor
je
mov
pop
sbb
stc
mov
push
cmpsb
cmp
jp
or
jne
std
ja
jp,pt
movsb
jae
fidivrl
mov
hlt
push
adc
push
movsl
pusha
push
sbb
insl
scas
mov
outsb
xorb
int
imul
xchg
adc
sbb
xor
imul
jp
data16
mov
mov
test
fsubl
cwtl
xor
mov
arpl
sbb
test
in
lahf
call
das
subl
mov
pusha
js
and
dec
mov
clc
pop
cmp
pop
ss
pop
idivb
add
jge
ret
mov
jmp
in
inc
xlat
repz
subb
aad
hlt
add
lret
fists
dec
into
push
loopne
mov
inc
mov
and
dec
push
mov
icebp
stc
sti
ret
mov
insl
lea
mov
std
jae
pop
sub
lds
adc
mov
stos
inc
daa
movsb
dec
or
adc
and
stc
pop
sbb
hlt
jl
add
xor
movsl
aas
adc
aad
push
adc
push
out
push
adc
pushf
or
pushf
xlat
ds
in
bound
sub
xor
test
stos
mov
pop
push
pop
push
cmovp
scas
ret
js
pop
add
iret
jno
jne
add
lods
pop
ds
adc
mov
xchg
aas
mov
mov
iret
lret
lods
add
pop
movsl
or
jmp
pop
std
nop
icebp
or
in
mov
push
jmp
fisttpl
pop
jns
fs
sub
popf
ret
fsubrl
dec
pop
gs
xchg
cmp
pop
lods
push
ljmp
add
adc
push
jbe
out
pop
inc
sub
cmpsl
mov
sub
or
push
pop
out
push
pop
hlt
push
mov
sbb
lcall
or
mov
jp
lcall
mov
outsb
andb
add
popf
scas
cmpb
clc
push
adc
adc
addb
or
add
cld
sub
ljmp
lods
mov
js
adc
mov
ss
test
and
cmpsb
outsb
fnstsw
cld
push
xchg
cmp
shrb
adc
xchg
rep
fiadds
or
xor
mov
and
inc
sbb
inc
and
ret
mov
push
push
lahf
sbb
je
addr16
ds
mov
sub
pop
pushf
jns
xor
xchg
adc
inc
jne
fadds
imul
jmp
aad
xor
scas
popa
fisttpll
in
les
mov
lret
inc
je
and
mov
and
in
mov
movsb
jno
je
ljmp
mov
pop
sub
mov
or
and
mov
out
xchg
cli
popf
or
xchg
adc
dec
gs
out
jnp
xchg
cmp
adc
jl
cmp
ret
inc
faddl
jg
jecxz
jae
xor
push
js
bound
test
cmpsb
cs
test
sub
das
iret
pop
jno
pop
test
and
std
loope
push
pop
pop
lock
js
cmp
sub
xchg
outsl
scas
mov
ljmp
cmp
adc
in
fwait
enter
dec
rolb
fidivl
test
mov
gs
pop
popf
pop
pop
and
inc
add
gs
push
sbb
mov
xor
adc
icebp
xchg
or
or
push
sub
mov
stos
je
sub
xor
push
jae
hlt
xor
lcall
and
pop
out
mov
mov
in
mov
inc
xor
in
inc
xchg
mov
lods
xor
sub
test
sub
ret
cmp
push
pop
in
jo
enter
lods
hlt
xchg
push
add
lock
enter
push
out
sbb
sarl
add
fldenv
movsb
mov
je
mov
inc
div
mov
repz
mov
mov
les
inc
std
dec
dec
jo
jge
pop
jo
push
jmp
sarb
pop
les
out
cmp
jmp
enter
mov
mov
or
testb
ficompl
push
or
fcompl
sub
pop
shlb
mov
xchg
les
dec
lock
push
dec
scas
outsl
xchg
dec
or
xor
and
xchg
sub
cmp
movsl
and
xchg
mov
nop
imul
jns
sti
adc
fmulp
int3
sbb
imul
cmp
ds
mov
push
stos
mov
gs
shrl
scas
push
aam
jnp
adc
imul
sbb
arpl
ret
aaa
test
in
idiv
iret
lds
cmp
nop
pop
dec
testb
shll
jp
pop
push
arpl
and
inc
sahf
aas
mov
cwtl
enter
in
or
cwtl
mov
ficomps
arpl
stos
fcmove
cmpsl
mov
xchg
jb
dec
int
enter
cld
pop
inc
enter
xchg
mov
dec
pop
push
jo
call
in
in
shll
add
ja
pop
in
js
and
sub
jge
jae
add
fcoms
pop
nop
inc
pop
mov
push
xchg
mov
inc
outsl
dec
mov
stos
or
scas
mov
adcl
or
adc
out
loopne
cld
jge
push
ds
popf
inc
addr16
cld
xchg
sbb
xchg
xorl
dec
pop
fwait
xchg
and
lcall
out
subl
mov
shlb
dec
les
xchg
popf
sbb
subb
jecxz
cli
int3
xor
jne
push
loop
jns
lock
mov
jmp
ror
pop
mov
mov
in
inc
mov
dec
xchg
aaa
int
gs
insl
jp
mov
add
test
ret
and
jne
cmpsb
jp
jae
in
jmp
inc
bound
jns
enter
or
xchg
jne
jae
aam
cmp
inc
mov
mov
cmpsl
cmp
add
dec
shlb
lods
leave
mov
mov
jnp
mov
test
or
out
and
orl
mov
les
xchg
inc
dec
sub
daa
lret
adc
fs
popa
adc
dec
into
dec
inc
adc
int3
dec
mov
pushf
rolb
cmp
pop
mov
ret
in
push
cmp
lods
adc
add
or
xor
movsl
rolb
or
shl
hlt
enter
out
or
lds
dec
sub
enter
push
sahf
sbb
test
jge
push
lret
mov
push
mov
test
push
jo
inc
mov
mov
mov
popa
cmpsb
xor
mov
mov
dec
mov
enter
pop
idivb
aas
lret
jge
xor
les
lods
sbb
and
xor
out
cltd
push
xchg
mov
fisubrs
adc
dec
gs
mov
popf
xchg
ficoml
and
cld
inc
in
fmuls
lods
cmc
insl
dec
pop
enter
int
cld
sahf
lret
icebp
dec
xor
iret
xchg
mov
dec
mov
push
sbb
inc
ss
fsubs
jp
sbb
inc
or
rclb
and
inc
mov
xchg
push
pop
mov
jecxz
cltd
add
bnd
sub
adc
orl
push
aad
add
cltd
jge
dec
sbb
data16
insl
pop
add
repz
call
or
inc
mov
loope
data16
lahf
inc
into
and
adc
xor
pushf
pop
js
xor
leave
adc
bound
leave
sbb
push
dec
das
mov
int
clc
leave
in
push
and
arpl
push
negl
add
sarl
adc
in
jae
mov
push
arpl
sbb
pop
sub
sbb
jae
mov
arpl
out
xor
pop
enter
pop
pop
bound
ljmp
jbe
cmpsl
pop
mov
mov
cmc
cmp
movsb
in
push
mov
scas
cmc
iret
out
lods
push
subl
jmp
inc
xchg
mov
mov
lret
xchg
jno
pop
stc
cmp
push
clc
add
sub
dec
fildl
dec
test
jo
fsubl
adc
add
lret
cwtl
jg
xchg
pop
xchg
push
mov
call
aad
jns
cmc
jl
lods
jbe
arpl
insl
push
rolb
jge
add
push
xchg
lods
lea
jns
sub
mov
jp
loope
fsub
data16
cld
test
mov
movsb
jmp
jg
mov
lods
out
ret
jge
mov
add
jmp
or
aas
and
dec
dec
sahf
imull
and
imul
lret
flds
or
mov
push
sub
ja
inc
aas
cmp
fnsave
orl
stos
adc
pop
add
xor
aas
adc
sub
or
sarl
fisubl
addr16
pusha
je
sbb
xchg
add
pop
in
dec
es
bound
sbb
mov
stc
mov
mov
push
leave
cmp
mov
hlt
test
mov
mov
mov
add
nop
adc
loope
mov
imul
xor
mov
test
das
out
xchg
cli
ret
sub
xchg
mov
xor
pop
adc
xchg
sub
jnp
popf
jnp
inc
ljmp
pop
sbb
loop
sbb
push
inc
mov
xchg
pop
cmp
in
mov
mov
xor
scas
mov
out
lds
sbb
sbb
cwtl
inc
idivl
mov
sbb
or
fisubrs
test
dec
out
xor
lds
sub
enter
lods
xor
mov
cmp
mov
sbb
fwait
outsb
push
xchg
xchg
subl
inc
nop
add
enter
lret
mov
mov
inc
lock
in
jg
dec
outsb
mov
cmpsb
nop
cltd
and
xchg
xor
sbb
ljmp
pop
imul
faddp
cwtl
push
lods
jbe
pop
iret
sub
pop
pop
call
jbe
and
dec
add
inc
push
sbbb
pop
out
jne
notl
push
add
and
pushf
and
dec
lcall
push
shl
test
cmp
int
jne
dec
jae
das
fbld
prefetcht1
cmpsb
sahf
fistpl
dec
sbb
xchg
add
pop
jno
sub
or
sub
jo
stc
test
stos
add
push
xorl
dec
jg
mov
jb
jmp
icebp
mov
and
add
clc
fsubrl
pop
das
sbb
pop
xchg
adc
ds
jle
test
insb
scas
stos
rcl
and
push
mov
xchg
push
cltd
and
jle
hlt
loop
lcall
subl
sub
insb
pop
lods
and
lcall
cmp
negb
jbe
sub
cmpsb
pop
repnz
mov
xchg
popf
hlt
jns
mov
push
insl
mov
enter
inc
inc
jne
xchg
je
cmc
inc
xchg
push
pop
cmp
mov
lods
inc
aam
and
inc
gs
addr16
icebp
sbb
xchg
repz
push
pusha
cmc
mov
fs
jg
jnp
pushf
push
gs
cld
push
mov
xchg
or
xchg
pop
lds
outsl
ds
or
test
xchg
clc
cmp
pop
jmp
divl
orl
enter
cld
and
int3
test
mov
mov
jo
adc
fs
scas
jne
bnd
xchg
cmp
mov
and
xor
pusha
or
or
in
dec
aas
popa
xchg
cmpb
data16
mov
xor
movsl
addl
imul
pop
mov
test
lcall
push
cmp
repnz
paddsb
and
popf
aam
cmpsb
inc
add
sahf
into
outsl
push
ja
pop
sbb
mov
out
inc
pop
or
inc
push
loopne
adc
out
bound
subb
fwait
xchg
push
pop
pusha
cs
cmp
add
addr16
push
out
sbb
std
fimuls
ret
std
cltd
inc
jl
nop
xchg
adc
add
jbe
out
lds
fwait
adc
and
faddl
pop
lods
jns
and
pop
arpl
inc
dec
dec
xor
fsub
nop
outsl
loopne
fcmovb
push
and
aad
in
fiaddl
test
cs
aas
test
sub
jb
out
scas
jae
adc
das
push
aad
daa
jo
sbb
add
xchg
mov
es
hlt
mov
sbb
push
push
and
push
je
pop
mov
mov
mov
roll
dec
js
jg
xchg
sbb
test
lods
inc
inc
xor
and
sbb
push
popa
gs
int3
inc
in
jo
enter
jns,pn
pop
mov
mov
mov
movsl
pop
aas
xchg
add
jmp
mov
imul
sub
test
gs
cmc
lahf
int
lret
addr16
dec
call
movl
jp
mov
in
arpl
ja
jge
out
jns
gs
andb
mov
and
xchg
adc
mov
sub
in
xchg
dec
mov
mov
popa
shlb
pop
popf
int
add
stos
cli
mov
mov
fldcw
pop
aad
in
push
cwtl
inc
mulb
or
push
push
in
in
pop
pop
dec
xchg
push
daa
xchg
and
sbb
adc
jbe
test
mov
insl
mov
stos
in
sbb
out
xchg
imul
push
out
inc
mov
stc
loop
jae
rclb
nop
push
push
xchg
push
add
sub
cmp
add
xor
or
mov
adc
cltd
shrb
cmp
ffree
and
in
inc
mov
lcall
inc
xchg
out
xchg
push
adc
or
std
lahf
xor
inc
and
cli
in
adc
stc
mov
and
fs
push
xor
mov
out
mov
jns
jp
cmp
mov
jp
mov
das
dec
pushf
sub
lcall
adc
cmp
mov
sub
fidivl
pushf
icebp
mov
imul
inc
dec
dec
scas
push
lds
repz
nop
inc
mov
andb
shld
or
pusha
imul
scas
sbb
ja
cmc
mov
test
jmp
sub
insl
ret
aam
ss
and
sbbb
out
push
fdivp
pop
pop
push
les
fistl
loope
loop
jno
and
inc
sub
mov
addb
cmp
jp
aaa
push
loopne
in
repnz
push
dec
pop
rorb
in
faddp
knotw
push
mov
cmp
xor
xchg
pop
test
xor
out
push
adc
cmp
jmp
mov
dec
mov
sub
pop
js
sahf
sbb
jl
inc
int3
adc
add
cltd
scas
out
push
mov
and
mov
mov
inc
push
shll
xchg
repz
test
add
and
mov
in
pop
mov
dec
sarb
jo
daa
popa
mov
push
insl
jmp
mov
jecxz
imul
lcall
addl
push
loope
test
imul
filds
adc
push
xchg
cmp
jns
das
std
shl
cld
daa
mov
ret
mov
clc
out
aam
mov
add
out
dec
xlat
lcall
or
add
add
clc
test
lock
pushf
jb
pop
int3
or
outsb
movsl
icebp
stos
adc
jle
lret
and
adc
add
jle
fidivrl
pop
xor
pushf
cmp
mov
call
and
lcall
sub
xlat
xchg
and
or
add
mov
lret
cltd
jmp
leave
repz
icebp
cmp
and
rolb
adc
push
popa
inc
aas
sub
repnz
je
cmp
bound
add
push
dec
push
in
cli
mov
lods
stos
in
push
ret
ss
push
repz
je
mov
sub
repnz
loop
imul
dec
sbb
rcll
enter
insl
scas
sub
outsl
adc
pop
inc
pushf
mov
jbe
mov
jbe
pop
lds
fdivl
btl
iret
nop
xor
adc
pop
push
push
push
addr16
push
sbb
sti
mov
int
push
pop
cld
jl
jp
bound
mov
imul
sub
sub
hlt
dec
dec
jb
js
mov
js
cmp
fstpt
js
push
sbb
std
dec
xchg
xor
out
in
movsb
adc
popa
outsl
push
daa
xchg
or
mov
out
and
xor
lock
mov
dec
fstps
clc
jns
xchg
and
mov
sub
data16
mov
bound
test
lea
pop
push
data16
ficompl
mov
insl
mov
sub
out
pusha
dec
popa
decb
mov
add
pop
or
push
mov
inc
mov
loope
mull
xacquire
or
jle
into
lods
push
ret
sub
mov
xor
scas
sub
mov
hlt
mov
ss
aaa
mov
push
movsb
shlb
push
aaa
inc
ficoms
sub
bound
movsb
or
dec
aas
xchg
jnp
ss
mov
inc
dec
cmp
pusha
fsubs
add
xchg
cmp
inc
dec
dec
test
pop
inc
jno
push
sbb
cld
repnz
push
loop
pop
inc
inc
mov
js
xlat
cmp
loopne
mov
addr16
int3
xchg
aas
jbe
jnp
cmpsb
je
sub
or
jl
xor
mov
nop
xchg
cmp
jbe
xorl
jbe
ss
pushf
sbb
mov
push
cmp
aas
sub
inc
cmp
sub
or
dec
pop
pop
nop
fistpl
dec
dec
sub
jno
icebp
jnp
mov
dec
mov
cmp
fwait
cld
lods
xor
nop
daa
xlat
leave
xor
sbb
adc
xchg
jno
pop
fisubrl
insb
enter
adc
inc
mov
lods
insl
ret
int
jmp
inc
aam
aam
or
and
movsb
cwtl
xchg
das
jnp
inc
push
subb
ret
sub
loopne
sbb
and
loop
shl
ror
mov
push
fldcw
push
and
aam
xor
inc
inc
dec
cmpsl
xchg
push
xor
push
jl
pop
enter
fucom
mov
stc
inc
cs
cs
fwait
ret
mov
mov
cmpsb
cmpsb
in
jg
and
sbb
sbb
adc
adc
js
pop
outsb
test
xchg
insl
nop
mov
lods
aad
stos
push
add
jb
add
add
push
add
push
icebp
cmp
pop
sbb
lods
xchg
add
dec
adc
mov
arpl
cmpsb
mov
jl
std
xchg
dec
inc
cwtl
lret
pop
adcb
xchg
data16
pop
pop
xchg
not
mov
xor
sarl
divb
mov
cmpsl
fsubs
pushl
mov
push
dec
push
or
aam
cmp
jne
dec
dec
sub
loop
sub
push
sbb
jp
rolb
pop
mov
inc
aas
stos
cmc
pushf
movsb
repz
and
fnsave
pop
andb
jp
push
fimuls
adc
cmp
lods
sub
jo
inc
dec
les
scas
push
stos
push
insb
stc
lahf
and
dec
push
or
mov
dec
sub
dec
lock
ljmp
jnp
push
lods
out
sahf
jb
adc
icebp
adc
xor
pop
dec
push
jo
rorl
ds
nop
xchg
jo
paddsw
sbb
add
dec
into
movsl
pusha
xchg
inc
js
adc
sub
mov
jns
out
cmp
and
pop
out
into
jle
adc
and
adc
xlat
movb
cmpsl
outsl
in
cwtl
popa
dec
in
xor
out
mov
sahf
mov
jmp
cmpsl
dec
and
add
inc
jge
je
bound
mov
aaa
push
aad
out
mov
stos
test
xchg
mov
into
push
daa
fs
loop
in
cltd
or
loopne
xor
ret
jae
es
cmp
inc
xchg
xor
xchg
aaa
ja
orl
mov
pop
ljmp
jnp
mull
pop
rcll
and
xchg
xor
mov
js
test
xor
add
fucomi
pop
mov
cmpsb
cmp
sahf
inc
sbb
dec
xlat
sub
mov
inc
adc
push
insb
push
in
and
xor
jb
cmp
fidivl
mov
popa
rorl
cltd
pusha
test
mov
js
or
es
push
cmp
aam
mov
mov
push
or
jbe
sarl
push
xchg
add
dec
rorl
aad
mov
sbb
or
add
stos
es
dec
in
in
daa
xchg
sti
data16
xchg
pop
aas
pop
setl
adc
sub
push
sbb
and
pop
add
jo
cwtl
lds
mov
dec
js
testl
mov
pop
pop
fdivr
cmpb
test
mov
fucomip
pop
adc
shlb
fsts
hlt
aam
nop
cltd
jnp
fcmove
gs
mov
sbb
xchg
test
cmp
adc
pop
mov
sub
or
fisubrl
clc
lret
int3
enter
and
int
in
enter
fiadds
icebp
fidivs
mov
cmpsl
bound
mov
sbb
sbb
andb
sti
addr16
aam
in
jle
sti
test
imul
fadd
subl
lea
cmp
aam
js
daa
or
mov
or
pop
sbb
pop
jno
cwtl
daa
pusha
popa
push
cmpsl
idivl
sbb
jbe
adc
pushf
lret
mov
out
mov
outsl
lds
jnp
testb
push
jge
fistps
push
loope
into
cmp
les
or
or
insb
sbb
mov
mov
adc
fwait
push
inc
xchg
rorl
ja
sub
mov
ljmp
addr16
insb
jp
aaa
loope
out
cmc
stc
mov
cmp
insb
ret
mov
and
pop
pop
loopne
push
insl
and
xor
add
repnz
and
sbb
push
imul
xchg
sahf
mov
adc
sub
ds
and
sbb
test
push
loope
jno
xor
cmp
pusha
out
ds
xlat
mov
andb
cmp
xor
data16
cmp
je
or
dec
out
ljmp
xor
mov
mov
mov
sbbb
movsl
mov
fwait
pop
jg
mov
iret
out
mov
cmp
sti
jno
dec
popf
into
or
aad
int
les
sti
cmp
mov
push
nop
icebp
or
in
aam
sub
int3
sub
adc
imul
push
and
nop
jmp
pop
lock
dec
sub
popf
dec
lcall
sbb
pop
enter
jecxz
sbb
jg
sbb
mov
mov
adcl
das
imul
push
int3
test
xor
repnz
stos
sub
dec
into
or
adc
dec
xorl
sub
fistpl
push
inc
mov
nop
ret
shrl
sbb
mov
and
stos
aaa
sbb
rcpps
sbb
sub
das
xchg
dec
pop
nop
cld
mov
push
rorb
xor
mov
cmpsl
and
rolb
iret
test
inc
mov
testb
or
mov
cmp
insb
xchg
sub
cmp
mov
enter
fs
inc
sub
dec
or
jle
xchg
movsl
fdivrl
sahf
jl
jne
xchg
lods
xchg
mov
cmp
icebp
mov
push
pop
jp
jg
adc
fdivrs
push
aas
jmp
push
jns
dec
push
loopne
loopne
fwait
aam
sbb
aaa
or
dec
xchg
push
les
sbb
scas
cmp
js
movsl
push
sub
add
fistpl
aas
push
dec
in
mov
fistpll
inc
mov
adc
out
xchg
sahf
jmp
xlat
rorb
lock
dec
arpl
lods
stc
xchg
hlt
test
fists
jne
aaa
test
aad
ljmp
add
push
mov
fnstcw
xor
movsl
call
fiadds
fsubrs
cld
dec
cmpsb
stc
adcl
clc
xlat
and
adc
jno
nop
pop
xchg
movsb
and
push
shr
movsl
mov
outsl
xchg
push
sub
sub
loopne
push
popf
push
lock
pop
push
shr
lcall
or
push
loopne
or
sbb
mov
jbe
lea
mov
test
mov
pusha
push
out
adcl
mov
ret
bound
push
js
leave
mov
dec
aad
jne
ficompl
sub
lahf
movb
xchg
jl
cmc
decl
and
push
pop
jmp
das
pop
sbb
aad
imul
mov
push
sub
adc
lock
ret
leave
divl
rcrb
int
or
fcompl
btr
push
mov
popf
mov
xor
adc
push
xchg
push
test
daa
xchg
and
bound
jne
sub
adc
fcomps
dec
bound
sbb
push
mov
mov
pop
lcall
js
xor
or
xor
jl
cmp
pop
ja
xchg
dec
loop
xchg
shll
cmp
pop
pop
xor
sub
pop
cmpsl
sar
push
or
jg
test
stos
jge
xchg
es
pushw
pop
hlt
adc
mov
hlt
outsl
mov
mov
or
jg
inc
js
sub
leave
mov
subl
cmp
call
lret
inc
lds
mov
inc
xchg
cwtl
push
lods
xor
cmp
and
daa
cmp
inc
jl
popa
inc
nop
sbb
dec
pop
shll
push
cwtl
add
fiadds
xchg
inc
mov
clc
mov
jmp
jmp
fwait
xor
and
mov
leave
jns
push
addr16
es
jbe
push
push
cmp
and
inc
repz
adc
push
mov
lods
lret
in
cmp
pop
or
sub
mov
sbb
insb
xchg
pop
xorl
lret
push
push
out
neg
sub
arpl
aas
shrb
xlat
fs
mov
xchg
fimuls
xchg
scas
inc
dec
cmp
fsubl
xor
ficomps
sbb
cwtl
stos
int3
or
add
daa
jle
and
dec
mov
push
adc
fmull
mov
xchg
mov
aam
inc
xchg
int3
mov
or
mov
sub
ljmp
std
fld
pop
pusha
dec
lret
dec
insl
cmp
cltd
scas
fwait
test
sub
jmp
adc
jl
movsl
jmp
mov
nop
sbb
dec
add
hlt
sbb
add
pushf
or
lcall
icebp
xchg
sbb
loopne
mov
sbb
jo
jno
sbb
mov
add
sbb
jnp
xchg
cmc
insb
xor
cwtl
mov
cmc
ljmp
rorl
add
pop
adc
lods
out
pop
fistpll
xchg
loop
dec
xor
test
loop
ss
js
jmp
int
dec
xor
stos
mov
mov
in
pop
and
sbb
sub
call
gs
clc
outsl
sbb
out
pushf
lea
arpl
and
cmp
rorb
sbb
add
je
xchg
leave
jp
cmpsl
sahf
iret
cld
xor
ret
inc
lret
xchg
es
cwtl
enter
outsb
ss
mov
cld
adc
jmp
test
jmp
push
flds
jge
filds
sub
repz
movsl
addr16
or
xor
push
cmp
lea
pop
push
mov
fldt
or
shr
mov
adc
mov
je
push
in
push
mov
sbb
xchg
adc
cs
cmp
call
mov
cmp
cmp
sbb
popa
es
and
loop
push
jp
jae
sahf
je
in
cmc
push
pop
out
mov
movsb
sub
adc
sub
mov
cld
popa
cmp
jmp
rcrl
scas
sbb
pushf
rcr
out
xchg
cmp
xchg
and
or
push
data16
sub
imul
jge
pop
mov
sub
sti
fidivl
pop
loop
push
or
sub
fwait
dec
mov
xor
or
cmp
mov
sbb
lds
imul
mov
jge
sbb
cmp
bound
inc
adc
hlt
and
adc
add
cmp
xlat
mov
int
fmuls
mov
ds
adc
xor
sub
jl
push
inc
enter
popf
push
repnz
jle
addr16
add
sbb
jbe
hlt
dec
lea
jp
rcrb
sbb
and
rorl
mov
aas
xor
in
and
jle
adc
and
bsr
pop
jbe
pop
test
and
in
sub
mov
loope
mulb
imul
cwtl
lea
push
inc
inc
cmp
js
pop
ficomps
pop
stc
pusha
iret
nop
or
mov
push
push
lahf
add
insl
loope
es
lea
add
xchg
jp
icebp
pusha
call
push
cld
cmp
jmp
xor
loope
fisubs
je
push
jmp
idivl
scas
pusha
insb
fstpt
or
inc
xorb
mov
popf
cmc
in
test
xchg
fistpll
rclb
int3
fisubl
mov
xchg
daa
in
lock
sbb
cld
or
call
mov
das
jge
fiadds
mov
out
cs
test
lock
popa
mov
mov
aad
push
dec
loop
sub
je
mov
insl
xchg
adc
inc
mov
cmpsl
xor
inc
push
pop
ss
sbb
xor
inc
lcall
cmpsl
sbb
mov
and
jne
lea
out
bound
inc
aas
repnz
sub
pop
and
cmp
insl
clc
bound
aad
or
dec
sub
sbb
outsl
mov
cmp
inc
arpl
jo
ss
or
mov
mov
jns
cmc
push
cmc
int
mov
mov
cmp
sahf
push
test
push
xor
adc
inc
xchg
mov
repnz
inc
push
call
cmp
push
in
adc
push
sbbl
es
pop
push
push
adc
push
repnz
mov
inc
sahf
and
pop
push
fistl
mov
mov
std
js
add
lret
mov
sub
pop
les
mov
pusha
mov
in
movsb
xchg
push
test
or
xchg
jbe
or
test
pop
enter
das
jl
nop
sub
xchg
inc
add
paddw
loope
out
es
add
mov
ret
cmc
xchg
fwait
orb
sub
push
pop
repnz
popa
imul
roll
enter
and
lcall
data16
adc
sahf
imul
lret
mov
add
xor
aaa
sub
cwtl
in
loop
lock
fwait
mov
das
dec
scas
mov
push
dec
push
iret
imull
cltd
std
rolb
xchg
test
push
mov
add
aad
rcll
bound
xor
jnp
mov
adc
push
cmp
in
jmp
cli
push
mov
mov
cmp
mov
scas
pop
outsb
push
loop
adc
dec
hlt
inc
mov
sbb
push
repz
lcall
lahf
addr16
lret
push
fucomp
ret
leave
movsl
pop
xor
push
xor
dec
mov
push
das
gs
subb
sti
push
addr16
notl
repz
jg
sti
addb
mov
add
pushf
into
lds
orl
outsl
jecxz
iret
sbb
mov
add
scas
dec
stos
inc
arpl
pop
in
int
scas
ret
push
test
dec
cli
push
fsubrl
in
out
xor
xchg
into
sahf
pop
xchg
cmp
les
dec
sahf
je
push
add
sub
inc
test
jp
repz
dec
jl,pn
add
xchg
xlat
jo
xor
rorb
pop
hlt
mov
xchg
pop
bound
or
adc
rorl
aas
or
dec
outsl
iret
mov
cmpb
xchg
inc
dec
jmp
jno
cmp
stos
xchg
enter
sbb
push
xor
and
inc
adc
adc
adc
cmp
mov
arpl
scas
mov
jae
mov
push
push
dec
testl
repz
cltd
in
aam
mov
scas
sub
adc
popa
fdiv
add
cli
in
mov
add
jb
cltd
aaa
mov
jle
sbb
cli
ljmp
xor
pop
rcl
les
out
fwait
pop
in
stos
mov
insl
pop
cmpsl
mov
imul
cmc
adc
ja
sti
inc
mov
mov
sub
js
and
icebp
in
mov
xor
mov
pop
mov
pop
push
loope
outsb
dec
cmpsl
and
sbb
dec
clc
aaa
scas
pop
xlat
fs
in
dec
xchg
insl
icebp
std
loopne
in
or
xchg
dec
sbb
mov
sbbb
insb
xlat
ret
out
lods
cmpsl
sahf
mov
mov
shll
sbb
jge
cmpsb
sbb
cmp
int
xchg
imul
push
imul
ss
pop
mov
xchg
nop
mov
cmp
lock
push
stc
add
adc
mov
insb
out
and
cltd
push
lods
cli
cmpsl
std
ljmp
test
lods
add
xor
mov
xor
mov
xchg
push
decb
pushf
push
mov
out
in
pop
adcb
cmp
pop
jns,pt
push
out
push
test
dec
aas
or
mov
cmp
sti
sbb
mov
push
adc
sbbl
repz
test
inc
or
in
out
sub
ja
outsb
lea
push
adc
push
jecxz
jae
outsb
bound
mov
xor
fld
adc
xor
fcmove
inc
mov
insl
pop
pusha
pusha
mov
outsb
dec
jae
int
aaa
sub
push
popf
mov
push
sub
mov
icebp
mov
inc
or
sar
nop
inc
sbb
loopne
lods
jns
xchg
inc
gs
xchg
mov
xor
lods
sbb
je
pop
sub
mov
in
and
popa
sbb
scas
push
xchg
inc
fnstenv
and
push
xchg
mov
loop
cmp
negl
mov
xchg
in
addr16
out
out
fwait
push
add
xor
les
cmp
loope
xchg
ret
in
push
int3
jmp
ret
jecxz
out
mov
sbb
inc
mov
mov
add
shll
rcl
loope
stc
cmp
fmuls
add
es
sub
pusha
lea
lods
cmp
xlat
call
sub
xor
or
js
xchg
loope
das
fwait
mov
dec
mov
nop
aam
mov
loope
jecxz
mov
pop
ss
mov
mov
clc
outsl
jg
push
or
inc
sub
or
ret
lock
mov
repnz
movsb
in
sub
out
push
sbb
fdivs
aad
out
mov
jle
clc
leave
or
pop
in
xchg
push
roll
cmc
xchg
aam
and
or
or
or
jae
push
xorl
ret
mov
mov
lea
xchg
add
mov
movl
cmp
in
lds
jp
or
jo
in
jge
nop
lock
out
mov
lock
in
ss
and
or
dec
out
push
outsb
mov
outsl
es
movsl
hlt
push
stos
and
lea
insl
into
movl
aas
cltd
aaa
dec
dec
add
lods
mov
mov
repnz
movsl
sub
inc
out
int3
pop
mov
outsb
movsb
lods
push
pop
or
xor
mov
mov
sub
cs
dec
mov
mov
out
in
adc
pop
mov
addb
jecxz
js
push
mov
enter
ret
mov
sub
insb
insb
cmp
fisttpll
loopne
xchg
roll
pop
data16
aam
std
test
pop
xchg
hlt
push
xor
inc
push
das
filds
dec
incl
mov
rcr
mov
mov
xchg
push
ret
add
ss
pop
je
cld
sbb
adc
in
js
cmp
inc
in
jle
stc
xor
daa
mov
xor
adc
cmpl
cmp
fiaddl
push
sub
cmpsb
push
sbb
xchg
movsl
and
fnsave
pushf
jmp
lock
dec
loopne
push
fcoms
and
sbb
sbb
lods
pop
mov
pop
mov
out
ja
cmpsb
mov
rorb
mov
mov
xlat
in
mov
aam
xchg
ds
jle
test
jno
clc
pop
cmp
cwtl
push
jge
xor
out
aas
rcl
dec
movsl
xor
cwtl
dec
adc
push
push
xlat
cld
fiaddl
dec
inc
out
push
jns
add
insb
mov
insl
push
out
add
mov
repz
push
out
xchg
pop
mov
fsubrs
cmc
aad
push
or
sbb
dec
sbb
lahf
mov
cmpsl
cli
mov
add
dec
inc
aaa
das
pop
push
push
mov
dec
loop
mov
dec
and
lea
mov
pop
sti
jns
mov
jns
pop
mov
xchg
jecxz
fs
jecxz
jbe
cmc
dec
arpl
jae
int
mov
andb
mov
data16
cmp
pop
out
cmp
decb
mov
in
or
out
mov
fdivl
aaa
test
popf
push
insl
add
and
mov
testb
or
and
sbb
iret
add
icebp
dec
xor
inc
fwait
push
dec
mov
stos
pop
cmp
daa
mov
dec
xchg
int3
sbbb
xchg
pop
xchg
cli
mov
loop
addr16
shrb
pop
xorb
test
dec
mov
nopl
sub
or
jo
push
movsb
je
dec
jnp
jb
enter
int
inc
loopne
mov
hlt
je
sbb
jmp
pop
mov
pop
jno
cs
lods
scas
vshufps
push
ss
jb
sahf
lcall
je
cmpsl
clc
ret
insb
jge
rcl
xor
jbe
arpl
out
mov
enter
and
test
ret
repnz
lcall
mov
adc
daa
xchg
movsb
in
pop
xorl
mov
push
ljmp
jns
xor
or
xchg
mov
mov
jnp
das
rorl
or
and
and
add
fucomip
dec
ja
lret
sarl
fmul
mov
rcrb
mov
xchg
fidivl
xchg
xor
jg
sbb
xor
cmp
ffree
jno
fsubrp
push
xchg
mov
cmp
repz
aam
daa
in
push
inc
in
or
mov
xor
mov
mov
test
aaa
lea
xchg
sbb
jno
das
inc
inc
xchg
pop
lods
rcl
cmp
cmpsb
sbb
arpl
mov
inc
dec
xlat
xor
xor
ds
les
inc
test
cld
mov
lret
dec
push
xchg
cwtl
adcb
cmp
fstl
cli
nop
cwtl
ljmp
mov
dec
out
lret
fsubr
jle
pop
sbb
fldl
sbb
mov
fldcw
sti
in
rclb
jmp
scas
cmp
push
in
sub
adc
out
fcoml
rcrl
add
inc
std
outsb
clc
lcall
dec
int
or
and
mov
inc
cs
imul
push
cmp
xchg
sub
fsubrs
fisttpll
push
imull
cmp
out
mov
scas
dec
add
push
aam
push
add
xchg
and
add
mov
adc
in
pop
xchg
rolb
adc
jae
xchg
pop
pusha
loope
cld
cli
fisubs
inc
pop
popa
or
icebp
adc
lock
mov
pusha
incl
add
mov
sub
cmpsl
popa
xchg
ljmp
xchg
push
inc
test
int3
pop
and
shl
inc
push
fstpt
jp
aaa
jmp
movsl
fstpl
ljmp
jns
int3
push
es
mov
sub
bound
sub
xchg
out
and
and
mov
aas
sbb
lcall
cmpsb
add
lds
push
adc
add
orb
jl
cltd
xchg
mov
sub
mov
push
in
dec
push
xchg
sbb
jne
imul
mov
jne
push
shll
testb
in
jge
xor
xor
push
cwtl
loopne
leave
lds
add
shll
pushf
xor
add
dec
lahf
and
rclb
add
popf
jo
cmpsb
xchg
gs
pushf
iret
jge
lods
adc
xchg
push
add
push
es
stc
icebp
decb
xor
mov
sub
andl
popa
ja
and
dec
jge
push
mov
jnp
cld
movsl
and
mov
mov
pop
lret
nop
stos
push
loope
dec
stos
jecxz
cli
sbb
adc
aaa
lods
adc
jno
xchg
pop
mov
lret
lods
inc
dec
xlat
in
dec
out
pop
cmp
pop
adc
sldt
cld
adc
add
icebp
jmp
stos
or
in
pushf
mov
and
xchg
push
or
aaa
push
mov
sbb
mov
mov
add
jo
lret
pop
sbb
or
fiaddl
test
inc
jle
or
mov
outsl
inc
divb
bound
stos
scas
and
push
pop
cmp
lret
mov
subb
out
sub
ror
pop
out
cld
fsubrl
cmc
pop
sub
and
xchg
mov
daa
movsl
gs
or
test
dec
dec
pop
push
jle
cmc
lock
pushf
pop
sub
push
test
pop
push
popl
lods
into
pop
arpl
movsl
push
mov
mov
xchg
jge
into
jne
push
and
int
push
es
xor
push
fwait
cmp
xor
fimuls
cli
adc
xchg
cmc
cmp
movsb
gs
pop
sub
lret
sub
push
or
push
jbe
pop
push
jp
lock
sbb
mov
xor
jl
dec
jmp
inc
mov
push
ss
add
out
sti
xlat
mov
in
ljmp
lcall
fldenv
ljmp
or
cmpb
sub
cltd
cltd
sbb
cmp
cmp
lret
out
xchg
subl
push
sub
cmc
andb
sub
adc
dec
sub
in
sti
and
mov
push
scas
xor
push
xor
popa
jno
add
test
shr
aaa
xchg
xchg
xor
mov
movsl
push
into
stos
out
cmp
push
cltd
imul
mov
insl
dec
cli
pop
push
cmpsl
sarl
cmp
inc
in
and
mov
and
imul
daa
mov
push
inc
ficoml
fistps
dec
xor
nop
ret
lods
fcomps
bound
idiv
sub
pop
into
sub
jns
push
or
mov
xor
addr16
and
jmp
sub
int
dec
mov
push
mov
in
jg
add
insb
cld
cltd
mov
mov
xchg
cmc
shl
pop
sub
mov
jp
mov
add
dec
mov
jnp
incl
mov
loop
adc
xor
add
cmp
test
adc
inc
adc
sub
dec
das
sbb
outsl
cmc
pushf
mov
rcrl
pop
ret
aas
into
jno
sub
mov
addb
test
mov
adc
imul
cmp
fwait
xchg
out
mov
mov
jo
inc
lahf
push
mov
mov
push
mov
pusha
mov
push
push
inc
jg
idivl
mov
push
mov
fcoml
js
dec
imul
in
mov
inc
sbb
dec
pop
nop
shlb
sub
stos
std
xchg
jecxz
roll
jno
stc
xchg
test
in
pop
xchg
pusha
addb
adcl
fisubs
lds
lods
push
jmp
les
js
pop
dec
cmp
fcompl
push
pop
lret
mov
lcall
jns
adc
mov
xchg
dec
mul
cs
mov
lea
lret
xlat
add
rcrb
data16
pop
fwait
cli
jnp
push
testb
lods
inc
movsb
icebp
movsb
or
mov
jnp
sub
pop
fwait
stc
cmpsb
aam
jbe
scas
jae
pop
xorb
ja
pop
pop
sbb
pop
or
fsubrp
aas
pop
loopne
push
insb
shlb
push
jae
mov
cld
insb
out
nop
mov
pushf
jb
inc
mov
loop
xlat
mov
dec
jb
pop
popf
clc
push
jl
jp
rcrl
cmpb
jbe
andl
gs
loope
inc
cwtl
jp
mov
int3
mov
rolb
cli
sbb
fsts
jge
mov
lds
mov
pop
scas
cmc
loope
inc
cltd
cld
push
jp
xlat
dec
cmp
sub
add
sub
pop
in
pusha
dec
out
and
ss
mov
inc
loope
cmpsl
xchg
and
loopne
sub
or
push
fs
push
pushf
pop
mov
aad
jbe
cmp
jne
cs
shrl
clc
xchg
inc
pop
fistps
cmp
inc
xor
add
adc
cmc
and
nop
stc
mov
lods
in
call
and
lds
push
xchg
lock
dec
pop
cmpsl
or
dec
sub
popa
shll
mov
sub
ret
jbe
test
mov
scas
adc
lret
lods
imul
sub
dec
mov
aaa
filds
adc
mov
daa
sbb
fcoms
xor
mov
outsl
and
out
xor
aaa
cmc
sbb
test
lods
xchg
lock
sub
lret
loop
or
popf
in
fcoml
shrl
mov
filds
inc
cli
add
adc
rdtsc
jne
inc
sahf
push
stos
jmp
jae
sbb
push
in
lea
cmp
aad
das
xchg
movsb
fs
jecxz,pn
add
lahf
mov
ja
sbb
mov
bswap
repz
cli
and
xor
mov
dec
lods
lock
repz
xchg
repz
xor
sbb
pushf
mov
das
xor
mov
lock
mov
push
stos
sahf
cmpsl
adc
mov
imul
jne
faddp
idivl
loopne
jb
mov
call
cmc
mov
cmp
or
jle
add
daa
popf
loopne
xchg
inc
add
or
int3
jne
das
lods
xorl
aam
inc
push
sub
adc
shll
mov
mov
pusha
insl
push
insl
lods
xchg
dec
shll
shrl
sub
mov
xor
lods
daa
mov
or
inc
cmp
lret
and
fsubs
lds
addr16
cwtl
inc
in
rcrl
cmp
pop
in
pop
cmpsb
inc
xchg
sub
das
jp
dec
iret
add
div
filds
mov
scas
push
imul
arpl
jb
push
jl
mov
clc
sbb
int3
push
pop
mov
insb
or
movsl
pop
lahf
add
test
jl
stos
stc
lret
nop
add
xchg
cltd
bnd
push
out
pop
cmp
add
aam
arpl
stos
sub
push
jmp
jg
mov
mov
pop
push
and
push
shrl
inc
loopne
jno
xor
out
add
int
cltd
sub
imul
bound
in
jae
xor
es
cmp
fidivs
repnz
pop
sbb
aaa
and
lahf
or
dec
cmp
hlt
inc
push
mov
test
loope
mov
xor
jmp
stos
das
xchg
fsubrp
pop
inc
or
bound
cmp
arpl
int3
or
jnp
inc
addr16
pop
fidivrs
stc
imul
xchg
sar
outsl
dec
nop
push
xor
sbb
insl
sti
push
lds
les
fnsave
add
aad
push
dec
mov
cmpb
cmp
sbb
xchg
jecxz
hlt
xor
inc
mov
shl
test
sbb
test
jno
cld
aad
fbld
xchg
mov
inc
fisubrl
roll
loop
cmp
lret
adc
movsl
mov
int3
mov
movsl
jo
push
xor
mov
aas
movsb
cwtl
mov
lock
sub
mov
mov
sahf
mov
call
divb
jp
test
loop
mov
popl
sub
loopne
and
sbb
popf
add
sub
idiv
out
addr16
out
pop
lds
add
sub
pop
mov
push
bound
fdivrl
loopne
dec
xorl
xchg
data16
clc
and
out
fsub
sarl
push
ljmp
push
mov
outsl
outsl
push
pop
cmpl
push
std
clc
loop
mov
sbb
je
ret
jg
rcrb
push
pop
sub
jne
sub
mov
stos
je
cltd
aaa
ds
adc
js
inc
rorl
enter
xchg
xor
aam
daa
lcall
jmp
cltd
jg
pop
popf
xor
sti
dec
les
jl
shl
and
outsb
pop
ja
loop
mov
add
pop
mov
fsubrl
xchg
mov
aad
mov
dec
lods
rcll
in
popf
dec
mov
int3
repnz
sub
xor
xchg
jnp
adcb
and
sahf
test
sub
jle
inc
pusha
adc
gs
ror
pop
enter
outsl
fistps
in
aaa
les
in
sbb
lcall
xor
inc
mov
ud0
iret
push
popf
cmp
cld
mov
inc
or
ljmp
gs
mov
sbbl
std
and
xlat
in
xlat
movsb
mov
pop
lret
cmp
mov
add
xchg
adc
and
outsb
das
cmp
das
dec
rclb
cltd
mov
les
cld
mov
cmp
and
rcrl
adc
cmp
lods
outsb
jp
mov
out
dec
xor
cmp
mov
mov
push
pop
bound
daa
adc
jb
sub
xchg
jle
rcrb
push
pusha
out
adc
repz
fwait
stos
xchg
mov
test
xor
xchg
add
aaa
ja
subb
mov
pop
cld
push
pop
jl
fcoms
stos
pop
jmp
add
dec
scas
ja
or
popa
mov
push
fdivrl
dec
cmc
ds
stc
rclb
sub
lods
cmp
sbb
sub
imul
adc
mov
and
push
ljmp
sbb
jecxz
pop
mov
cmpsb
orl
mov
ss
mov
in
jmp
ljmp
js
push
xchg
into
lock
jmp
sarl
in
pop
mov
pop
ljmp
mov
fadds
in
stos
shl
lret
leave
sbb
or
inc
dec
das
jae
or
int
scas
out
aam
int
scas
cmp
insl
repnz
std
jl
cli
xchg
stc
out
shl
hlt
or
push
mov
push
dec
jne
mov
adc
loope
cwtl
mov
dec
cmp
es
cmp
add
stc
bound
ljmp
and
adc
adcl
pop
mov
dec
fidivl
lods
andl
push
lock
mov
fisttps
pop
xor
test
out
mov
or
fiadds
inc
dec
adc
clc
jae
bound
jge
pop
jo
mov
pmaxsw
push
test
mov
mov
or
cwtl
cmp
lahf
test
pop
stc
stos
cmp
inc
dec
shl
out
add
inc
mov
dec
jmp
fwait
leave
and
bound
inc
jge
push
push
mov
xlat
imul
movsb
fnstenv
sahf
mov
push
movsb
cld
aaa
xchg
aaa
jnp
inc
ss
movsb
adc
mov
lret
bound
dec
mov
inc
ret
test
mov
and
pushf
rcrl
xor
xchg
cli
sub
lods
cmp
sahf
add
cmp
pop
jecxz
das
and
inc
push
cwtl
testl
data16
pushf
nop
in
stos
lret
es
cmpsb
and
std
fadds
loop
int
and
xor
ljmp
into
jae
test
or
fwait
lods
pop
cmp
sub
stc
lds
jo
jecxz
daa
mov
dec
insl
add
mov
push
xor
por
mov
jno
dec
inc
mov
fistpll
fimuls
mov
push
scas
xchg
add
dec
inc
out
push
or
in
movb
mov
imul
shll
dec
mov
fidivl
pusha
aaa
pop
nop
movl
xchg
and
cmp
push
addl
stos
pushl
into
stos
xchg
pop
arpl
adc
push
movsb
sbb
adc
clc
inc
sub
out
std
je
roll
shl
enter
sub
test
sbb
xchg
stos
lea
stos
cmpsl
mov
xchg
sub
push
xchg
in
out
sub
and
push
push
add
push
cmp
ret
js
or
dec
mov
movsl
out
mov
cmpxchg
dec
test
sub
testb
push
call
jne
cs
lds
mov
cmp
cli
pop
push
pusha
add
rorb
enter
int
outsl
dec
pop
jle
pop
lds
jg
inc
lds
cmc
or
pop
mov
dec
mov
out
pop
mov
push
fidivl
inc
push
cmp
ja
push
add
add
jg
test
aaa
pusha
push
mov
jne
push
xchg
push
lods
adc
not
xchg
data16
inc
ret
pop
jbe
mov
mov
jp
sahf
sbb
jnp
fmuls
mov
cli
add
pop
cld
sbb
mov
jne
mov
dec
in
mov
lcall
mov
push
jno
mov
pop
les
loope
inc
int
daa
cmp
clc
jne
cltd
std
dec
push
loop
mov
hlt
pushf
push
cmp
mov
pop
outsl
or
mov
ja
xchg
mov
dec
ljmp
mov
fnstenv
insb
icebp
xor
xlat
into
dec
mov
xor
into
mov
push
or
xchg
rorl
aas
leave
iret
cmp
xorb
movl
pop
ja
decl
movsb
aaa
sarb
arpl
int
fadd
loope
pop
popf
cmp
mov
adc
pop
xchg
decl
ljmp
daa
mov
push
fdivl
popa
fstl
stos
xchg
cltd
arpl
push
out
jle
adc
and
stc
pop
leave
xchg
push
es
jp
inc
pushf
rcrb
jns
hlt
sti
in
mov
xchg
mov
repz
stc
lcall
inc
imul
imul
mov
mov
cmc
fadds
inc
test
addr16
jnp
in
out
shll
xor
jo
mov
sub
pushf
stos
popa
in
shll
add
shll
mull
enter
pop
enter
mov
rolb
adc
push
adc
lods
insb
js
lea
push
fildll
pop
cmp
xchg
repnz
lret
mov
cli
push
enter
pop
pop
add
and
inc
je
or
cld
int
mov
out
xor
rcll
pop
push
cli
xchg
cmp
lret
jle
clc
cmp
jp
xor
cmp
and
mov
adc
inc
mov
aaa
lcall
movsb
clc
out
out
inc
push
mov
sbb
rcrl
jno
push
ja
rolb
in
jmp
dec
dec
dec
inc
cwtd
xchg
adcb
subb
mov
es
movsw
jnp
dec
and
jns
ljmp
scas
sti
mov
add
add
mov
incl
clc
jne
ror
mov
sbb
sub
decb
scas
adc
mov
mov
mov
or
sti
mov
pop
mov
rorl
aaa
adc
rol
loop
scas
pop
sub
fs
xor
stos
push
mov
sub
adc
in
cmp
jns
jbe
mov
shrb
sub
pushf
leave
test
adc
lds
and
pop
or
imul
shrl
push
test
dec
jb
sbb
mov
jge
stos
adc
nop
aas
nop
jo
arpl
repz
cmc
mov
cmpsb
pop
adc
sub
push
fildl
mov
or
mov
ljmp
aas
ljmp
pop
adc
sbb
jo
lret
and
pushl
dec
ret
and
push
push
xchg
and
pop
push
cmp
or
sbb
fdivrs
xchg
daa
mov
lret
push
dec
notb
subb
xor
inc
stc
rclb
dec
ret
rcrb
cmp
jne
ja
mov
cmc
fiaddl
stos
rol
aaa
fdivs
xor
out
pusha
xchg
mov
dec
test
jno
and
mov
pop
shll
ja
xchg
aaa
enter
adc
mov
pop
scas
loop
icebp
and
pop
out
stos
mov
adc
adc
js
jecxz
jns
mov
pop
inc
jno
mov
jecxz
stos
orl
jmp
mov
std
icebp
jp
xor
adc
push
stos
mov
sbb
xor
adc
dec
out
stos
cmp
inc
add
repnz
test
inc
sbb
ficoms
stos
mov
pop
xor
pop
pop
out
sub
movsl
mov
repz
xchg
xchg
sub
or
push
imul
dec
bound
push
cmp
pop
dec
jnp
inc
mov
leave
push
or
push
hlt
xor
dec
jno
mov
mov
or
xchg
hlt
sbb
sbb
jle
jle
inc
xor
dec
sub
sti
dec
dec
out
xchg
adc
pushl
fmuls
test
jle
mov
imull
mov
arpl
jg
fsubl
xchg
xchg
arpl
xor
push
out
push
xchg
fadds
les
adcb
adcb
add
jp
in
sbb
sbb
jnp,pt
cltd
add
test
xchg
icebp
inc
jmp
dec
scas
out
mov
or
mov
jp
sub
mov
and
lret
das
push
add
xchg
pushf
jl
and
in
adc
cmp
mov
adc
inc
pop
call
loope
das
xor
das
sub
jl
cmp
and
add
cmpsb
xor
xor
push
add
add
jge
lret
xchg
divb
push
ss
mov
cmp
aam
clc
mov
lods
je
negl
adc
jg
mov
aad
push
cmp
and
and
adc
insb
stos
divb
fmuls
in
inc
cltd
mov
pop
fidivs
jle
loopne
clc
xorl
mov
mov
inc
fwait
jb
mov
sbb
mov
sahf
aaa
pop
stos
int3
lret
cmpsb
sub
jg
ja
rorl
jb
leave
pop
orb
mov
cmp
popa
sahf
jecxz
adc
sti
and
jecxz
lret
les
mov
fdivs
cmpsb
mov
loopne
ds
dec
insb
pop
fsin
push
xchg
sahf
and
fwait
sti
push
rorl
aam
adc
inc
stc
fstpl
in
adc
fistl
retw
fs
mov
and
lret
sti
int3
dec
xor
inc
lret
and
fnstcw
adc
xor
lods
in
sbb
mov
sub
xor
cmpsl
add
imul
into
out
sbb
inc
inc
mov
push
mov
jge
xor
or
cmp
into
ljmp
mov
jo
add
sbb
imul
shl
mov
mov
push
jmp
jb
insl
jno
push
test
inc
iret
pop
shl
or
xchg
mov
arpl
sahf
cld
insb
sub
fdivs
sub
mov
pop
mov
mov
hlt
xchg
subb
xlat
in
into
lds
jmp
dec
adc
mov
inc
xor
jae
sti
out
push
dec
cmp
in
add
jo
mov
outsl
xor
daa
push
mov
es
pop
cmp
push
jae
mov
cli
push
xor
clc
in
hlt
sub
mov
sub
and
push
ss
xchg
dec
data16
les
lds
pop
cmpsl
insb
mov
push
jno
sahf
cmpsl
aad
testb
xchg
repnz
ret
fisubrl
push
xor
jle
call
incl
or
ret
jno
inc
sbb
in
int
repz
push
cli
fildl
imul
cmc
nop
fcomps
xchg
adc
inc
inc
call
aaa
fwait
popa
and
pop
aam
into
leave
jle
mov
jmp
jle
inc
jne
add
add
std
movsb
rorb
lcall
push
mov
cmp
mov
roll
int
push
das
or
push
jno
cmp
mov
pusha
outsb
into
aam
iret
cli
les
dec
jp
xchg
ret
movsl
cli
jmp
add
xor
mov
hlt
ljmp
sbb
push
mov
popf
leave
loopne
test
test
ret
pop
outsl
push
iret
or
mov
push
lods
mov
rcll
mov
clc
scas
pop
popa
xchg
pop
sbb
fistl
jns
movsb
movb
sahf
mov
and
cld
cmpsb
jecxz
cmp
and
daa
addr16
push
adc
push
mov
pop
mov
mov
mulb
test
cmp
rcr
xchg
adc
xor
fsubs
rol
push
jmp
push
mov
lods
insl
shl
popa
xchg
xchg
aaa
outsl
cmp
or
divb
jle
iret
xor
add
push
sbb
push
out
into
pop
lret
sbb
inc
aaa
jge
imul
mov
loopne
aam
mov
scas
adc
scas
adcl
xor
test
int
add
fs
mov
and
or
jecxz
xor
cmp
sbb
mov
std
aaa
mov
rorl
jne
pop
jge
jo
mov
insb
inc
xchg
pop
mov
out
lods
test
les
push
push
stos
jbe
lcall
inc
sbb
call
ja
xchg
xor
mov
in
add
pop
std
test
mov
sub
in
add
es
aam
mov
xchg
cwtl
inc
lods
inc
pop
mov
stc
out
pop
xchg
mov
jp
adcl
xor
xchg
push
mov
int
xchg
xchg
hlt
or
jecxz
fnstsw
lret
cmc
loope
movsb
stos
xchg
dec
push
nop
or
aam
aad
push
xchg
jle
mov
out
inc
lods
xor
mov
repz
in
sub
gs
adc
dec
pusha
xor
lret
push
xor
insb
lret
and
repz
hlt
sbb
lock
test
push
adc
ja
ret
mov
xchg
fistps
mov
lret
jbe
push
aaa
cmc
es
ret
into
pop
add
or
cmp
jnp
arpl
stos
dec
test
in
sub
or
sbb
xor
in
in
aad
punpckhwd
adc
xchg
push
inc
mov
ret
push
sarb
sub
adc
mov
pop
xchg
sbb
test
insl
xchg
dec
fsubr
jmp
clc
mov
and
lock
ss
mov
mov
inc
pop
mov
lret
dec
and
jg
xor
fildll
filds
test
imul
xchg
loopne
cld
mov
mov
mov
push
frstor
lea
push
inc
loop
add
fistpl
pop
rorb
addl
mov
stos
jbe
xor
push
dec
imul
mov
in
daa
in
rcrb
cli
aam
mov
mov
enter
clc
test
lea
xor
jnp
mov
dec
es
mov
pop
cld
fdivs
je
xchg
iret
movsl
out
dec
popa
dec
sahf
cmpsl
pop
ret
adc
mov
pop
xchg
push
mov
test
mov
scas
insl
dec
mov
psubd
sub
pmaxsw
cmp
ss
into
fiadds
nop
add
rcrl
pop
add
testl
cmpsb
xor
into
lock
push
jo
sbb
mov
cmpsb
add
push
fisubrs
insl
test
adc
mov
notl
dec
jno
ds
je
lods
dec
outsb
jo
outsl
es
cli
ret
jg
mov
sub
jmp
mov
pop
scas
frstor
inc
push
mov
inc
inc
inc
mov
mov
mov
cmp
push
cwtl
addr16
nopl
inc
jb
jae
xchg
xor
rcl
mov
jle
cmp
aas
add
or
mov
notl
jecxz
adc
test
inc
xchg
rcrb
add
mov
test
jns
xor
lods
mov
aad
mov
in
movsb
cmpsb
lods
cmp
jbe
test
pop
mov
mov
inc
fdivrl
out
sub
cmc
push
push
mov
pop
add
lahf
mov
in
or
scas
xchg
aaa
lea
or
push
out
xchg
jg
push
ror
xchg
cld
dec
mov
les
lods
jmp
lcall
loope
push
xor
mov
sub
xchg
push
stos
sbb
aad
leave
add
sbb
add
fwait
jecxz
in
pop
jnp
test
and
add
mov
out
mov
lods
push
push
and
add
and
pop
into
adc
dec
repnz
xor
jp
aaa
adc
jp
lock
xrelease
add
cld
fidivl
and
or
inc
int3
shrb
adc
addb
mulb
aad
mov
pop
inc
mov
fwait
mov
push
and
inc
loope
in
xchg
int
lcall
daa
sbb
push
add
push
out
popf
xchg
mov
pop
xchg
in
addb
cmp
cli
dec
insb
adc
gs
dec
outsb
movsb
dec
and
adc
sub
mov
xchg
fdivrs
mov
daa
fwait
enter
pushl
pop
iret
andps
fisubl
loop
jle
lahf
cmp
mov
jl
and
jno
xchg
rorb
xchg
aaa
aad
addl
data16
pop
loop
ljmp
and
andl
lcall
jp
jno
push
mov
loopne
and
xchg
jne
fnsave
ljmp
popf
jns
mov
xchg
call
cwtl
daa
xor
jl
jbe
es
ficoml
cmp
test
push
loope
add
fildl
int
push
int3
sub
pop
add
xchg
aas
push
ljmp
popa
popa
fstpl
mov
ja
outsl
push
sub
int
cld
mov
ret
dec
out
test
cmp
or
cbtw
xchg
cmc
int3
sub
or
push
adc
pop
clc
ljmp
and
xchg
ret
pop
push
adc
pop
loope
inc
push
mov
add
repnz
in
mov
push
or
fdiv
fisubl
jl
subb
lods
mov
in
cmp
arpl
cld
test
adc
pop
adc
dec
xchg
test
out
sbb
push
lock
and
sbb
xor
cs
push
lods
jle
sub
mov
xlat
push
inc
mov
jne
inc
fistpll
jns
mov
leave
push
std
mov
cli
jae
js
loop
fs
mov
arpl
xchg
or
push
testb
lret
xor
adc
xchg
sub
lret
mov
sbb
xorl
mov
push
mov
ja
gs
push
dec
mov
and
sbb
adc
stc
cmp
pop
pop
sbb
insb
addr16
movsb
mov
ds
fmuls
mov
jo
ss
stos
xchg
cmpsl
push
inc
jmp
icebp
ret
cwtl
add
add
subl
shrl
cmp
push
cltd
sbb
rclb
lret
xchg
cmp
adcb
nop
loope
mov
xchg
pop
sbb
jbe
mov
test
xchg
ds
rcl
push
inc
stc
lret
subb
adc
push
hlt
addr16
sbb
sub
fistl
popa
mov
xchg
jge
popf
ds
arpl
jo
or
dec
adc
pop
les
sub
xlat
cmp
mov
mov
push
out
int
pop
sahf
jae
xor
nop
cmp
or
jb
pop
mov
add
mov
arpl
sub
jecxz
adc
fstps
rolb
int
adc
mov
xchg
cmp
ss
or
xor
inc
push
enter
inc
jmp
pop
pop
into
cltd
in
mov
xor
add
sbb
sbb
pop
roll
fsubr
xchg
adc
cmpsb
mov
enter
jnp
bound
or
pop
adc
adcb
pop
cmp
aaa
mov
movsl
jno
add
fisttpll
mov
frstor
les
shrb
dec
pop
sti
inc
sbb
jae
lods
fcmovu
cmc
fstps
popf
sub
push
push
fsubr
negb
mov
mull
inc
lret
sahf
test
xor
or
adc
mov
stos
insb
insb
sbb
dec
mov
idivb
or
div
cltd
aam
jp
lods
cmc
jns
dec
mov
push
loope
xor
jmp
mov
jno
repz
inc
cmp
mov
jg
inc
cmp
mov
pop
std
inc
or
mov
push
push
fwait
mov
addr16
pusha
mov
icebp
jmp
out
xchg
scas
pop
jle
jg
and
sub
or
mov
fdivrs
xor
mov
sbb
pushf
sub
out
sub
outsl
add
mov
aad
and
int
jl
mov
addb
cli
sbb
bound
add
xchg
addr16
cmc
cwtl
call
jno
ljmp
loop
fstp
es
ret
cli
loope
cmp
dec
xchg
imul
jnp
adc
cmc
adc
sub
sub
pop
jmp
jmp
movsb
enter
jno
mov
push
fs
fdivrs
rorb
sar
jp
enter
aad
sti
in
inc
mov
push
cmp
pop
aad
pop
adc
enter
cmpsl
mov
in
push
cmc
xor
loopne
and
sub
addr16
mov
jbe
dec
ss
cmp
sbbb
js
jbe
in
insb
add
cmp
jne
shl
push
fadds
out
mov
pop
add
mov
leave
popf
repnz
mulb
imul
jnp
jle
cmp
mov
daa
inc
and
lods
adc
insl
in
mov
ds
aaa
ds
jl
or
xchg
hlt
shl
repz
add
pop
xchg
mov
and
fs
inc
je
clc
push
inc
push
mov
mov
mov
pop
clc
ror
xchg
test
fimull
icebp
dec
rclb
sarb
mov
adc
xchg
mov
inc
mov
shrl
in
cmp
movsl
in
or
scas
movsl
mov
andb
adc
adc
pop
cwtl
mov
stos
lds
scas
jp
and
fisubl
ljmp
cmp
in
test
jno
sub
lock
or
shlb
das
or
mov
pop
cmpsl
roll
daa
mov
pop
xor
mov
dec
lods
aas
notl
dec
inc
les
cmpsl
mov
pop
lret
cld
out
pop
fcomps
jge
push
int
imul
adc
adc
lcall
jb
ss
mov
mov
sbb
mov
jno
fsubrs
sub
sub
testl
cmc
sbb
ret
stos
dec
arpl
dec
je
mov
cmpsl
dec
mulb
mov
movsb
push
sub
add
sub
xchg
mov
or
xlat
clc
addr16
xor
cmp
pop
dec
push
loop
pop
jmp
in
xor
mov
mov
dec
inc
jns
fdivr
lcall
or
dec
inc
nopl
out
xchg
in
mov
cs
repnz
add
xchg
dec
xlat
dec
mov
and
psrlw
pop
push
and
testl
dec
xchg
add
mov
mov
jno
ja
pop
aam
in
jl
je
push
gs
fbld
into
and
in
mov
mov
out
xchg
lcall
test
aaa
mov
jne
fwait
stos
repnz
andb
mov
xor
aam
fcoms
testl
gs
ret
xchg
sub
into
daa
pop
xchg
fldenv
jb
push
fisttpl
ss
mov
movsb
outsb
imul
shrl
and
cld
movsl
nop
xchg
push
lock
pop
insb
push
stc
and
imul
sti
daa
sbbl
rorb
sbb
push
daa
shll
mov
add
incb
testb
jns
inc
push
mov
ret
es
cmp
push
ret
mov
add
fwait
sub
sub
xchg
add
dec
xor
pop
inc
pop
push
mov
mov
adc
push
xlat
aam
mov
and
push
push
xchg
loop
cmp
or
aad
pop
dec
jbe
std
pop
xor
pop
mov
xor
mov
sub
mov
bound
mov
xor
sar
cmpsb
xchg
aas
jns
outsl
sub
insb
xor
movsb
mov
xor
push
mov
in
repnz
sub
outsb
jbe
sub
pushf
jno
push
inc
xchg
and
add
inc
inc
inc
mov
dec
or
lret
pop
sub
test
stos
xchg
adc
mov
pop
xor
icebp
or
add
nop
xchg
mov
in
xchg
sbb
jp
push
fldenv
les
in
pop
or
and
ss
stc
fistl
aad
mov
sbb
mov
cmp
insb
add
gs
scas
add
aas
mov
sbb
cmc
aaa
iret
fsubs
pop
inc
or
int3
mov
push
jle
stc
clc
or
out
rcll
adc
xchg
pop
into
into
mov
loop
pusha
xchg
inc
call
add
inc
mov
aad
xor
and
dec
push
in
out
inc
push
test
push
mov
and
out
push
mov
mov
insb
and
mov
pop
adc
stc
outsb
dec
jae
xor
jmp
cmp
outsb
or
jge
and
xchg
in
aam
or
sbb
stos
pushf
popf
add
sbb
push
mov
sbb
or
cmovbe
pushf
test
cli
pop
lret
fisubrs
mov
fiaddl
in
out
bound
xor
mov
js
xchg
cmp
inc
or
in
popa
push
inc
dec
mov
jne
and
enter
insl
ds
jecxz
pop
push
and
pop
scas
pop
xlat
sbb
pop
cmpsl
xchg
ds
jecxz
cmpsl
adc
and
dec
das
cmp
negl
rcr
sub
jge
std
nopl
cmp
dec
movsl
in
jb
int
rcl
push
mov
cmp
and
cmp
scas
jns
xchg
aas
inc
clc
repz
test
jle
add
sahf
add
loop
andb
add
dec
test
and
sub
push
nop
loopne
sbb
shlb
add
inc
cmp
gs
cld
fldl
popa
cmp
idivb
pop
call
imul
sahf
mov
insb
push
sub
fmuls
cmc
mov
enter
xor
cltd
mov
aas
dec
pop
mov
or
int
in
out
ret
ret
add
pop
ret
cmp
idivl
addr16
rolb
xchg
icebp
pushf
fmull
fistpl
das
aad
mov
or
ret
add
xchg
jne
lret
or
xorb
push
pop
data16
sti
sbb
inc
push
sub
rol
mov
fwait
mov
xchg
fwait
push
lret
inc
lock
loop
shll
or
icebp
mov
lret
dec
push
popf
mov
filds
jno
pop
adc
adc
jns
sbb
iret
xor
popa
arpl
lret
sbb
dec
adcb
fidivrl
cmp
jnp
cwtl
cltd
pushf
in
orl
mov
shl
mov
and
les
push
pop
lods
in
dec
in
outsl
jae
inc
jle
mov
dec
push
out
test
mov
mov
call
pop
jo
dec
adc
mov
cmp
or
dec
cmc
or
and
pop
ljmp
sub
lods
jp
ja
cmp
ljmp
lds
bound
jmp
aam
xchg
es
cmp
push
orb
mov
cli
mov
mov
jns
mov
leave
xor
adc
rcll
lods
jae
scas
jmp
sub
jmp
sbb
inc
ljmp
xlat
ljmp
pop
hlt
insb
js
adc
stos
mov
adc
pop
loopne
or
pop
mov
push
add
mov
jb
loopne
and
adc
mov
shl
loope
mov
popa
sbb
fs
negb
cmp
push
ss
rcrb
inc
lds
mov
mov
into
mov
lds
jg
inc
push
mov
je
ja
addl
xor
or
shrb
fwait
add
cld
inc
sub
dec
inc
lock
cwtl
sbb
int
cmp
mov
mov
out
insb
mov
dec
insb
pushf
sbb
push
lret
mov
ja
test
and
jp
cld
push
sbb
notl
jnp
fidivrs
aam
dec
mov
fadd
xlat
jge,pn
xor
or
aad
jmp
daa
andl
int3
mov
stos
mov
stos
imulb
shll
push
push
or
lock
sub
jb
jmp
ljmp
adc
push
adc
loopne
mov
xor
aad
adc
cltd
loopne
data16
mov
xor
and
mov
gs
mov
or
pop
dec
push
mov
mov
shlb
mov
int
xchg
sti
int
pushl
mov
movsb
fsts
push
in
mov
or
adc
push
leave
add
xor
xor
shrl
xchg
add
fildll
inc
lds
pop
jnp
lods
push
mov
jl
sub
xchg
loopne
cmp
dec
scas
mov
fistpl
and
mov
ljmp
cmp
mov
cmpsb
out
shll
out
lods
inc
insl
nop
mov
sahf
add
cmp
leave
sub
lods
cld
pop
dec
mov
pop
xchg
pop
adc
cmpsl
sbb
mov
jns
or
outsl
loopne
mov
xchg
lret
pop
and
jae
xchg
xor
icebp
dec
lock
test
dec
jecxz
jl
dec
sbb
je
pop
incb
dec
fcmovnbe
mov
xchg
adc
js
pop
aam
insl
adc
scas
popa
sub
pop
xchg
cs
mov
and
mov
or
or
mov
dec
into
adc
je
loopne
leave
mov
std
sbb
xchg
push
sti
loopne
add
rclb
outsb
adc
inc
outsl
mov
lret
sar
movsb
sub
jae
inc
enter
mov
popf
sub
outsl
jge
sbb
cmp
jno
xchg
rcrb
jp
push
out
mov
je
sbb
or
inc
xor
lods
jns
xor
add
jle
push
jo
push
cmp
sub
adc
push
inc
ret
rolb
jl
push
dec
fs
out
pop
cltd
cmpsb
fdivr
push
fs
mov
pop
arpl
add
push
cmp
push
dec
lock
sub
into
je
int3
cmp
mov
ja
lcall
lret
and
out
push
stos
insl
loop
xchg
push
mov
dec
sbb
jnp
imul
insb
stos
pushf
cmp
xchg
shlb
daa
sub
xchg
imul
cmp
cmp
inc
cli
or
lahf
lcall
fsubl
mov
jne
push
std
push
dec
sahf
icebp
push
outsb
cli
sub
dec
cmp
loopne
popa
repz
pop
or
xchg
jp
cmc
xchg
stc
out
sbb
jecxz
pop
mov
rcrb
xor
lods
xor
jno
xor
sub
popf
xor
bound
arpl
or
mov
fdivrs
mov
in
pop
or
sarb
xchg
mov
lock
jecxz
mov
xchg
sbbb
rcrl
push
jno
cmp
jmp
cltd
cmp
iret
push
cltd
mov
ja
es
pop
shll
push
cmp
push
adc
jecxz
fisubrs
ret
jne
sti
rol
inc
and
cmp
mov
adc
xchg
cmc
sbb
out
cmp
das
jae
push
cmp
jle
adc
test
mov
repnz
mov
jbe
push
cs
pushf
and
mov
inc
sarl
sbb
mov
xchg
in
loop
or
dec
into
loopne
loop
pop
or
aam
int
ljmp
cmp
inc
xchg
dec
dec
xlat
jl
repz
imul
test
push
repz
fs
or
mov
pop
out
xor
push
xchg
test
imul
adc
mov
mov
mov
mov
ret
push
sub
mov
jle
adc
xchg
rorb
movsl
pop
into
sub
lock
rcll
push
adc
idivl
jmp
int
jmp
sub
xor
lea
add
push
ja
push
scas
push
and
sub
dec
add
xchg
jl
in
scas
push
and
mov
and
test
push
mov
gs
add
subl
xchg
inc
mov
hlt
sti
ret
mov
daa
imul
adc
out
mov
add
xchg
inc
xchg
psubsw
jge
mov
daa
sub
mov
je
outsb
add
rclb
dec
cld
add
testl
xchg
and
pop
nop
cmpsb
add
adc
adc
mov
push
mov
test
push
push
cmp
bswap
mov
xchg
cmp
mov
cmp
or
arpl
pop
insb
pop
mov
leave
jg
mov
inc
xchg
pop
mov
xchg
shrl
iret
in
in
mov
and
lds
test
popa
cmpsb
and
pop
jnp
dec
movsl
into
cld
sbb
out
mov
insb
pop
or
mov
shr
pop
insl
xchg
int
jge
add
add
cmp
std
call
in
mov
inc
xchg
push
ret
dec
cmpsb
lret
cmp
jg
aas
cmp
add
adc
out
pop
sub
xorl
mov
aaa
cmpb
std
inc
pop
les
out
jp
and
inc
and
pop
push
rcll
mov
into
cmp
or
mov
mov
adc
out
and
hlt
and
jl
inc
sarl
loop
mulb
loope
pop
xor
mov
iret
mov
jns
fimuls
lcall
and
std
add
fnstsw
pop
jae
test
es
mov
push
call
xor
cmpsl
pop
sub
int
imul
cld
jp
lods
sbb
ja
cltd
pop
xor
jle
sbb
jp
push
icebp
mov
mov
cld
ret
pop
lods
in
aad
fldt
jg
cli
xchg
adc
int
dec
xorl
ret
or
mov
inc
sub
push
adc
adc
pop
mov
mov
mov
jmp
out
cmp
pop
xchg
mov
push
out
push
into
add
or
mov
jb
and
or
xchg
test
outsb
ja
scas
push
clc
or
push
mov
sub
out
sahf
xchg
loop,pn
arpl
ret
test
stos
jae
movsb
out
add
orl
sahf
in
fcmovnb
pop
or
jb
sti
daa
ret
cmc
scas
out
sbb
adcb
dec
inc
in
aaa
mov
rcl
sub
sbb
sub
shr
roll
fadd
not
mov
lea
sub
cmp
lock
mov
dec
xchg
mov
clc
mov
mov
test
outsl
mov
mov
dec
push
sbb
jno
xor
outsl
mov
jle
and
cmc
mov
jbe,pt
popf
cmpsb
jle
out
leave
dec
stc
int
mov
jnp
mov
jbe
sbb
scas
dec
out
dec
out
lret
or
dec
mov
xchg
fdivrl
pop
inc
ljmp
data16
sub
fs
cltd
lock
push
dec
je
push
fildl
ret
inc
or
pop
dec
je
xor
sbb
loopne
push
jmp
out
stos
mov
jle
movsl
js
mov
or
popa
sbb
cmpsb
sub
dec
mov
xor
jno
jge
imul
fbstp
dec
sbb
mov
or
ret
ljmp
mov
mov
cmc
jge
mov
mov
outsl
jne
mov
insl
pop
jno
mov
or
jnp
inc
out
lret
ret
pusha
in
pop
pop
sbb
xchg
hlt
jp
lods
rcl
aas
and
push
dec
mov
mov
mov
pop
and
mov
test
sub
lock
shrl
insb
in
jle
pop
xchg
jmp
sti
stc
jl
inc
push
push
stc
aad
jb
test
add
orl
pminub
xchg
int
dec
aam
popa
test
push
imul
fcomp
js
cld
jl
scas
add
popf
repnz
mov
push
fnstsw
aam
cmc
mov
xor
data16
daa
mov
test
lret
mov
pop
test
lds
sahf
stos
cmp
ficoml
xchg
jno
test
jnp
insl
scas
clc
push
mov
push
inc
push
xchg
enter
leave
gs
sub
inc
jle
incl
cmc
mov
cwtl
popa
sti
mov
pop
lea
cmp
cmpsl
stos
adc
loope
js
fcoml
push
add
fisttpl
xchg
adc
dec
hlt
jmp
jg
sbb
mov
popf
jb
orb
inc
xchg
cmpsl
ret
out
push
into
ficomps
fwait
sbb
xchg
daa
and
xchg
dec
sti
sti
push
pop
mov
jmp
movsl
inc
ja
mov
cwtl
nop
mov
mov
sbb
bound
leave
xor
cmpsl
in
add
out
mov
lahf
shl
jecxz
xchg
mov
sub
or
test
fldenv
mov
mov
push
cmc
movsb
jge
mov
cmpsl
test
push
test
dec
ss
sbb
pop
inc
cwtl
sbb
dec
dec
lea
xor
popa
test
adc
sbb
lds
cmp
scas
adc
addr16
xchg
test
pop
cwtl
fwait
sbb
out
mov
sub
inc
lock
push
outsb
inc
shrl
fildl
and
call
push
add
adc
lock
push
or
pop
imulb
and
cmp
adc
xchg
jg
jb
or
outsb
dec
pop
xchg
add
push
fiaddl
rcrb
mov
scas
aaa
cmpsb
push
loope
xchg
es
cmp
stc
mov
xchg
cmp
sub
test
mov
sub
push
aad
xchg
cmpsl
dec
sbb
andb
push
cwtl
jecxz
sub
push
pushf
or
roll
mov
dec
lock
loop
or
ds
fdiv
dec
lret
aad
jmp
sbb
jo
aaa
inc
pop
stos
xor
adc
int
cmp
sbb
scas
int
ja
pop
sub
dec
cmp
or
xor
rclb
pop
jne
dec
pop
les
movsl
mov
adc
add
and
xchg
sbb
scas
leave
sbb
movsb
xchg
into
mov
sub
pop
fiaddl
cmp
icebp
sub
or
pop
mov
ficompl
fadds
add
xchg
nop
push
shl
scas
sub
test
jl
cmp
add
jge
xchg
cmc
pop
lds
int3
clc
leave
mov
mov
lods
shrl
cmpsb
test
dec
int
aas
push
add
xchg
loopne
lea
ret
inc
std
adc
sbb
mov
les
xchg
xlat
cli
sub
mov
push
test
pop
scas
jae
pop
std
dec
sar
orb
aam
and
loopne
inc
aam
test
cmp
adc
das
fs
or
push
inc
fnstenv
andl
push
stos
psllq
inc
sub
sbb
in
rclb
enter
and
inc
loopne
shlb
push
xchg
add
stc
lcall
lock
push
hlt
mov
push
or
enter
sub
mov
les
xchg
push
jl
stos
sbb
popa
xlat
sahf
addr16
add
or
xchg
mov
dec
inc
sbb
cmc
psadbw
pushl
daa
or
data16
test
sbb
cmpsl
imul
xchg
or
bound
fmuls
mov
or
scas
lods
out
mov
fisubrl
rcl
sub
sub
cmp
cwtl
push
and
mov
xchg
mov
jl
push
popf
cmp
xor
sbb
mov
xor
push
mov
sub
outsl
xor
mov
adc
xchg
sbb
or
jle
mov
out
mov
dec
loop
repnz
xor
jno
pop
and
sub
or
mov
enter
xor
adc
roll
test
fdivs
xchg
loopne
in
and
out
out
hlt
add
lock
mov
push
nop
mov
mov
hlt
out
repz
push
jns
shll
cltd
cmc
or
mov
sbb
push
clc
aas
adc
ror
dec
cmpsl
mov
xor
push
fninit
jl
dec
insb
push
xlat
lcall
xor
dec
sbb
mov
cwtl
les
outsl
inc
dec
cmpsb
lahf
jo
adc
mov
sbb
leave
xchg
addb
mov
fsubl
adc
mov
jb
pop
xor
js
mov
scas
lods
xor
push
fimuls
jne
sbb
xchg
fcoml
adc
gs
leave
out
or
inc
cmp
pop
cmp
xor
mov
pop
pop
sbb
lret
bound
je
aaa
test
mov
insb
jo
and
pop
sub
pop
aam
xor
js
jae
nop
popf
icebp
pop
lods
rclb
scas
orl
xchg
mov
mov
jmp
jo
fwait
sub
lods
and
or
cmp
cmp
cmpxchg
xlat
adc
push
das
mov
xchg
xor
rcrl
dec
cmp
xor
pusha
insb
dec
sub
or
jle
sbb
push
push
fisttpl
mov
jle
jae
xchg
mov
imul
fnsave
fisubrl
bound
ljmp
jns
loope
and
pop
shlb
out
mov
in
int3
pushl
test
iret
sbb
xchg
daa
aad
and
int3
sub
mov
and
sub
mov
xchg
test
push
subb
rorb
sbb
jae
jmp
push
dec
ja
sbb
test
cmp
int
loop
imul
into
clc
lret
in
sbb
push
pop
lret
outsl
and
out
bound
pop
rcll
negl
scas
push
xchg
mov
jno
add
xchg
cmp
ds
stos
bound
sub
push
push
adc
adc
dec
xchg
xchg
pop
data16
xor
mov
js
and
push
in
jno
icebp
mov
in
adc
push
je,pn
jg
hlt
mov
mov
mov
mov
adc
mov
mov
movl
mov
in
out
aad
mov
or
adc
jge,pn
stos
push
dec
or
adc
aaa
mov
in
shl
add
fstpl
roll
ret
mov
stos
outsb
sbbl
in
xlat
sbb
push
push
push
jno
sbb
sarb
cmp
lock
jl
sub
push
arpl
xchg
pop
pop
mov
adcb
dec
cmc
push
bound
jmp
mov
sub
loopne
mov
pushf
push
pop
loopne
jge
cmpl
pop
rorb
sahf
push
cmpsb
out
aaa
pop
js
sub
mov
adc
mov
pop
pop
orb
sub
push
gs
int3
push
lcall
push
out
sbb
lds
xor
lods
xor
mov
fnstcw
insb
shll
adc
inc
iret
lret
cltd
jo
nop
fistps
sbb
les
mov
mov
or
lret
xchg
iret
rcll
xchg
repz
sbb
les
test
leave
sahf
int
xor
leave
into
push
stos
cmp
sahf
dec
and
imul
pop
insb
test
cmc
fsubrl
scas
gs
outsb
mov
cmc
ljmp
ss
sbb
fnstenv
dec
incl
aaa
add
movsl
movsbl
fnsave
int3
ror
into
cs
push
loopne
xchg
addr16
pushf
ret
js
ficoms
mov
xor
ljmp
movsl
pop
xchg
lods
fnstcw
push
mov
push
dec
pop
mov
lock
testb
cwtl
pop
pusha
xorb
mov
rcr
and
imul
or
lods
ds
jecxz
xor
cld
jo
mov
subl
les
rol
movsb
movsl
adc
push
aas
loope,pn
xchg
js
add
cmp
das
and
lock
outsl
mov
xchg
cmpsb
js
pop
in
pusha
aaa
xchg
push
xchg
ficompl
jp
mov
add
mov
jno
outsl
enter
aaa
push
testb
loope
xchg
test
sub
pop
sbb
mov
mov
andl
pop
fildll
or
lock
push
cmp
xchg
xchg
or
mov
je
push
mov
push
lcall
adc
xchg
cld
jl
in
imul
pop
push
jg
hlt
mov
mov
push
shrl
imul
pop
aaa
inc
fwait
mov
push
mov
add
xchg
ret
rcll
pop
ficomps
cmp
scas
and
das
dec
mov
bound
xor
mov
sbb
or
adc
call
inc
loop,pn
dec
test
bound
push
xchg
clc
cli
repz
popf
fcoms
and
push
mov
cltd
push
fsubp
in
mov
mov
fwait
test
mov
adc
sbb
pop
add
add
xchg
pop
and
sbb
leave
data16
negl
xor
adc
test
into
sbb
xchg
xchg
scas
mov
pop
out
cli
movsb
push
ds
mov
jl
xor
shlb
aas
dec
mov
mov
jne
xchg
dec
adc
and
push
ljmp
push
mov
outsb
and
mov
sti
sarl
adc
loopne
sbb
jae
bound
shlb
jge
add
test
sub
mov
add
add
das
ss
es
cmp
xor
xchg
pop
aad
push
push
jne
stc
sbbl
iret
out
xor
xlat
nop
call
fcoml
ficoms
cmpsl
pop
js
pop
ljmp
sub
lock
mov
out
pop
xchg
mov
shrl
fwait
push
iret
and
jb
imul
stos
in
sub
pushl
cmc
add
jne
in
mov
fistpll
int
add
adc
inc
mov
inc
inc
cmp
lods
int3
cmpsb
nop
out
cmpsl
aas
adcb
iret
or
mov
nop
mov
adc
je
pop
push
mov
add
sub
and
dec
ja
pop
hlt
jb
jb
push
mov
out
popf
out
add
das
scas
mov
xchg
mov
mov
cld
mov
loope
cmpsb
jbe
mov
push
mov
in
push
lcall
mov
pushf
loope
shll
and
cld
xor
mov
add
push
adc
dec
movsl
test
sbbb
icebp
loopne
mov
pushf
jl
pop
mov
or
mov
rcl
xchg
in
xchg
fcmove
mov
sbb
iret
push
sbb
mov
mov
or
xchg
push
fisubrl
inc
ja
nop
jmp
lret
and
pop
and
inc
add
mov
sub
xor
lcall
push
mov
lock
lds
inc
cli
loop
xlat
adc
dec
movsl
lcall
or
sbb
xchg
ljmp
and
imul
fistps
lret
in
xchg
test
sub
mov
pop
cmp
fwait
xchg
or
push
aaa
pop
push
push
in
cmp
bound
mulb
push
mov
xchg
xchg
push
lods
push
je
out
loope
stos
test
mov
sti
push
pusha
fs
sub
jl
repz
jmp
xor
and
mov
xor
popf
add
hlt
jmp
or
pop
mov
cmc
jb
and
loope
out
clc
or
jns
cmp
mov
pushf
lret
test
stos
and
out
pop
fld
xchg
sbb
push
mov
out
dec
sarb
ror
jge
stc
sub
fnstsw
rclb
js
imul
into
mov
xchg
pop
cwtl
xchg
stc
pushf
cmc
mov
imul
mov
mov
inc
in
les
sbb
movsl
and
mov
out
inc
cld
mov
add
js
int
sarl
in
push
dec
lods
or
cmp
dec
push
sti
xor
push
and
or
push
cmpl
test
mov
shlb
ja
scas
or
scas
jp
dec
cwtl
or
push
sbb
adc
repnz
dec
dec
dec
mov
sti
fistpll
insb
mov
cmp
out
lds
subl
or
sub
clc
fcomps
xchg
or
shl
cmp
push
dec
push
mov
fdivl
es
inc
cltd
fdivl
aad
cli
adc
xor
dec
push
sbb
cmc
mov
add
stos
pop
sbb
pop
sbb
xor
aaa
xor
xor
in
dec
int3
jno
xchg
leave
xchg
jbe
adcl
int3
cwtl
and
ljmp
inc
mov
out
xor
icebp
dec
adc
stos
aad
dec
bound
jmp
or
scas
adc
movsb
adc
or
repnz
mov
lea
add
dec
sbb
cli
bound
enter
adc
pop
xchg
dec
outsl
cmc
mov
loopne
mov
punpckhbw
pop
fcmovnu
out
gs
xchg
xchg
ljmp
sub
dec
xor
cmp
ss
js
aaa
and
dec
dec
cmpsb
cmp
out
int3
and
fidivrs
dec
fs
ds
leave
cwtl
pop
test
inc
std
inc
add
fwait
and
outsl
or
lock
push
xor
sub
pop
push
seto
push
push
xchg
push
cmp
jbe
outsb
inc
cmp
sub
mull
das
sbb
and
lea
scas
aaa
ret
pop
bound
fwait
xor
pushf
fstpt
push
bound
push
jbe
test
mov
xlat
jns
add
or
shr
stos
lcall
test
sub
sub
fimuls
ss
movsb
nop
shrb
aam
orb
fsubrs
xor
dec
cwtl
je
mov
sbbl
xor
mov
and
loop
mov
adc
punpcklwd
push
mov
outsb
lods
shlb
mov
push
mov
sbb
test
leave
xor
mov
adc
xor
inc
mov
mov
sahf
mov
std
lods
xor
and
pop
testb
cpuid
push
jl
scas
mov
pop
push
scas
fwait
out
push
mov
call
and
adc
jno
repnz
enter
je
pop
sahf
adc
addr16
int3
mov
inc
jl
sub
cmpsl
negl
dec
push
sbb
dec
andb
jecxz
ja
mov
mov
in
xchg
das
jge
cld
jge
add
ret
out
xchg
les
arpl
scas
lods
nopl
sub
fidivrs
mov
add
mov
xlat
push
xchg
dec
cmp
pusha
adc
std
push
sbb
push
enter
in
mov
lcall
add
cmp
les
sarl
scas
jp
and
mov
add
cmp
mov
ret
jne
jg
fscale
ret
pushf
sub
jp
dec
movsl
inc
add
inc
sub
mov
sbb
dec
outsl
imul
adc
dec
shrb
jne
aam
lret
mov
xchg
pusha
in
fistpll
inc
inc
daa
mov
mov
push
push
lret
scas
mov
idivl
hlt
pop
pop
mov
sbb
ret
test
xor
jmp
sti
jg
mov
mov
jnp
orb
ljmp
or
pop
loop
and
aad
cwtl
push
push
mov
add
xchg
xor
push
dec
rorl
pop
push
cmp
pop
xchg
xchg
outsb
out
lahf
scas
xor
inc
sub
xchg
or
test
ret
adc
xchg
test
cmp
inc
pop
ud0
xchg
push
xchg
xchg
out
and
aas
test
int
and
xchg
inc
leave
or
xchg
sub
loope
push
outsl
adc
mov
dec
sub
mov
adc
jmp
xchg
push
jg
sub
and
pop
out
and
inc
jp
ret
notl
lea
sbb
outsl
or
cmp
add
mov
xor
nop
inc
jbe
adc
sub
aaa
pop
sahf
jecxz
movsb
loope
lahf
out
push
push
enter
fst
sbb
stos
scas
mov
cs
jl
push
into
adc
pusha
test
jnp
fiadds
push
icebp
fsubrp
out
jne
dec
outsl
and
cld
ja
xchg
divl
jecxz
jmp
push
mov
dec
iret
add
ficompl
dec
loope
mov
push
imulb
sbb
sbb
call
pushf
inc
xor
mov
xchg
cmp
jp
testl
dec
cmp
mov
fisubrl
mov
push
mov
shl
jnp
pop
push
or
xor
insl
jp
mov
scas
adc
sti
dec
icebp
pop
push
in
pop
ret
mov
jne
and
jnp
std
gs
dec
xchg
jge
mov
mov
and
push
xchg
mov
loop
sbb
mov
pop
sbb
fbstp
or
loope
fldcw
outsb
push
xchg
fsubrs
cmp
xor
sarb
jns
mov
push
inc
pop
push
mov
test
push
stos
dec
mov
pop
call
lock
mov
stc
leave
cmp
shll
fmuls
pop
pop
idiv
sub
adc
jl
stc
loop
adc
stc
mov
xor
jbe
loop
pop
cld
addr16
mov
bnd
and
ja
fstl
out
dec
dec
cmp
sub
ja
mov
pusha
int3
movsl
dec
stos
js
pop
xor
repnz
cmp
fistpl
sbb
and
arpl
pop
iret
out
imul
mov
ljmp
in
cmp
adc
in
adc
fdivl
rcrl
mov
sbb
sub
xchg
rcl
pop
and
mov
add
loopne
incl
jb
mov
repnz
add
icebp
sbb
jae
imul
cmp
sub
xor
dec
int
pop
je
lret
inc
aam
mov
cmc
fs
jb
inc
add
pop
imul
mov
mov
fists
jge
xorb
xor
adc
in
int
adc
decl
movsl
cwtl
out
adc
xor
icebp
cli
sbb
out
cmpsb
out
sarl
jae,pt
sbb
popf
push
push
sbb
adc
inc
mov
or
loopne
adc
dec
outsl
fscale
inc
mov
mov
adc
push
sahf
stos
insl
xchg
pop
icebp
jge
pusha
lock
lock
fldcw
fists
sub
clc
test
jg
xchg
sbb
cmp
mov
mov
mov
js
ds
mov
out
cmp
sub
lock
add
mov
arpl
pushl
clc
mov
gs
int
arpl
and
stc
or
mov
les
das
test
dec
inc
sbb
test
push
je
stc
lea
xor
rorb
add
mov
jecxz
in
fwait
loop
mulb
test
add
xchg
mov
int3
ss
push
jmp
cmp
das
test
sbb
jl
mov
and
daa
jnp
mov
xchg
sarb
in
lahf
jo
sub
movsb
inc
mov
fsubl
jl
imulb
mov
mov
sbb
ret
leave
int
jmp
lret
fs
mov
idivb
xchg
or
jbe
lock
scas
pop
xchg
and
add
sbb
mov
dec
pop
push
js
inc
inc
ret
imul
scas
cmp
mov
sub
mov
adc
add
out
lods
lcall
jns
cmp
ficoml
pop
fnclex
xchg
xor
sbb
push
and
mov
adc
sub
or
mov
hlt
daa
or
mov
lea
mov
cmp
mov
jl
out
pop
mov
insb
and
or
jns
ss
dec
hlt
stos
out
xchg
lds
lods
cmpsb
xchg
sub
or
dec
lret
mov
jo
adc
hlt
xor
stc
sti
push
ss
pop
ss
call
xor
cli
imul
adc
subl
scas
sub
sti
sub
repz
push
and
test
push
cld
and
loope
test
mov
cs
pusha
adc
pop
imul
repz
repz
inc
jae
dec
push
xor
icebp
inc
dec
xchg
push
push
mov
cmp
sahf
outsb
push
push
and
add
sbb
sbb
and
loope
mov
jge
cltd
sub
push
mov
movsb
loopne
jb
pop
insl
jns
push
mov
cld
mov
mov
sub
sbb
sub
es
fsubs
test
scas
jae
or
and
or
or
repnz
scas
in
xlat
push
fcmovnbe
clc
in
aad
aaa
fildl
or
arpl
outsb
add
add
jnp
dec
outsl
inc
xchg
sbb
nop
out
insb
jecxz
adcb
add
out
dec
inc
sub
cltd
or
adc
push
mov
fsts
push
sub
push
push
push
jno
ficoml
adc
in
mov
lret
add
mov
cmp
mov
movsb
ficompl
xor
sub
adc
mov
and
mov
push
add
outsb
cwtl
mov
pop
mov
or
cmpsb
aaa
xchg
rolb
jecxz
je
fisubrl
sahf
and
and
divb
mov
pop
or
xchg
mov
dec
ja
xchg
fldenv
push
mov
mov
subb
in
mov
sub
xchg
sbb
inc
ret
js
decb
sub
pop
push
sub
nop
jnp
fs
jne
cmp
xchg
adc
mov
adc
xchg
sarb
out
push
in
fbld
cwtl
cmp
jnp
les
movsb
and
dec
pop
mov
js
into
pusha
insb
lds
inc
xlat
push
and
lock
jae
add
add
clc
test
xchg
mov
inc
mov
aas
push
cmp
bound
lock
jns
jmp
stos
mov
bound
jle
xchg
pushf
loopne
push
xchg
test
push
lret
pop
push
je
pop
mov
jecxz
cld
add
jno
je
jns
js
push
pop
jno
sbb
push
dec
rcrb
lock
mov
lcall
into
fldln2
lea
inc
data16
out
mov
sub
scas
cltd
and
mov
xchg
sub
adc
or
cmp
and
insl
sbb
enter
inc
sbb
movb
es
or
inc
mov
lods
inc
add
shll
add
data16
loop
xchg
pushf
test
mov
inc
and
add
adc
xchg
adc
data16
mov
popf
aaa
fwait
movsb
cmp
mov
aaa
mov
cmp
stc
cmc
clc
mov
das
pop
add
jno
cwtl
cmpsl
pop
or
out
inc
call
lds
sub
test
lahf
xchg
fcmovnu
pop
aam
mov
out
mov
adc
mov
mov
mov
push
addb
dec
or
dec
lock
std
aam
pop
cmp
push
stos
lea
or
jmp
std
fsubrp
sub
mov
insl
mov
fidivrs
xor
jge
dec
or
cmp
lcall
xor
mov
inc
neg
pop
sub
sub
stos
sub
call
pop
and
popa
and
or
pushf
cli
mov
sub
rorb
sbb
mov
int
xchg
aaa
subb
jecxz
pop
lods
jecxz
mov
loope
push
mov
mov
sbb
scas
lcall
les
xchg
mov
call
push
cli
add
dec
pusha
ss
lret
ficoml
fists
call
test
mov
mov
mov
mov
jbe
jp
ret
push
test
movsl
ret
sarl
gs
xchg
fpatan
xchg
arpl
scas
lock
cli
adc
subl
cmp
enter
inc
cmp
aam
adc
test
cmp
or
push
mov
pop
aas
icebp
gs
cmpsb
test
push
cmp
fsubrs
das
xor
cmp
adc
mov
repz
mov
mov
enter
mov
mov
add
pop
inc
fistpl
adc
stos
xchg
scas
or
in
mov
lea
pop
mov
dec
adc
js
out
pop
push
push
cmpsb
pop
insl
loopne
inc
data16
sub
pop
scas
jns
push
jns
in
sbb
subb
in
cld
sub
cmc
ret
pusha
pusha
mov
jge
arpl
sbb
cmpl
xor
or
xor
jb
jmp
xchg
cs
in
xchg
dec
jnp
dec
mov
jb
push
sub
cmp
mov
enter
fstl
adc
cmc
fwait
inc
add
mov
add
jno
jle
lds
sbb
and
xorb
imul
rcrb
xchg
nop
cmp
mov
mov
push
pop
adc
adc
push
mov
xor
in
jmp
xchg
jmp
sub
cld
mov
fsubrl
lret
scas
mov
mov
mov
pop
mov
sbb
jb
jmp
push
sub
rcl
mov
xor
nop
cs
inc
mov
sub
xchg
data16
repz
jnp
shlb
pop
stos
jmp
jne
add
push
aaa
and
adc
lods
lock
push
or
inc
mov
mov
push
cltd
adc
movsl
stos
test
ret
lret
dec
and
out
scas
cmpsl
dec
mov
int
jo
jl
cmp
dec
jecxz
xchg
lret
rep
fdivrs
cs
bsr
or
les
mov
es
cmpl
push
es
sbb
jno
inc
sub
xchg
andl
decb
inc
inc
ret
or
or
xorb
xchg
xor
fstpt
and
adc
or
cmp
in
sbb
rcrb
lcall
mov
imul
pop
xchg
push
andl
test
icebp
ljmp
sahf
and
push
mov
mov
outsb
pop
lods
les
dec
mov
lods
mov
lcall
inc
les
jne
rcrb
repz
cmp
dec
inc
xor
mov
decl
push
mov
loop
sbb
adc
lock
push
aam
xchg
adc
cltd
sbb
jns
std
mov
rclb
notl
fnstsw
lea
mov
cmpsb
orb
sahf
fisttps
in
mov
sahf
pop
inc
adc
test
scas
bnd
faddl
stos
inc
inc
fistpl
push
leave
fldenv
sbb
scas
pop
aad
push
lods
jnp
and
mov
dec
pop
lock
call
enter
mov
addb
jg
nop
mov
sub
ljmp
nop
jne
xchg
push
mov
mov
xor
movsb
jns
inc
pusha
dec
mov
arpl
sub
push
pop
xchg
lret
mov
loopne
fadds
xor
adc
movsl
lea
rcrl
pop
push
add
mov
call
jno
lret
hlt
jmp
loopne
push
inc
inc
imul
xor
and
ja
jge
jnp
pop
ljmp
sti
insb
mov
js
adc
lahf
sbb
fidivrs
fcoms
arpl
ja
iret
jle
fcmovne
mov
adc
jg
xchg
pop
adc
fcoms
xchg
jbe
push
sti
cli
xor
sbb
mov
jmp
push
xor
push
or
sbb
jg
or
sbb
xor
cmp
pop
lret
iret
outsl
xchg
and
shl
cltd
int3
pop
test
js
dec
das
and
jns
mov
jno
pop
lock
mov
loop
sub
faddl
or
into
call
lret
jecxz
inc
push
mov
sub
sbb
jno
xabort
and
out
add
repz
mov
ljmp
inc
insl
pop
mov
test
fnstcw
iret
mov
nop
iret
jge
rcrb
je
js
pushf
rolb
mov
inc
out
mov
out
jne
cwtl
hlt
fwait
dec
je
icebp
or
pop
add
push
scas
push
test
sbb
add
and
adc
xor
notl
add
std
test
ret
lret
pop
lret
roll
pop
jae
adc
negb
jge
xchg
dec
outsl
and
std
xchg
cmp
sbb
jp
adc
push
add
imul
and
shlb
scas
pop
sub
jg
pop
push
rep
int3
mov
add
sbb
xchg
xor
jge
aam
jne
mov
cmp
shll
clc
and
das
add
mov
xchg
pop
into
push
icebp
inc
das
xchg
lods
jl
add
mov
mov
js
out
cli
icebp
orl
shl
xchg
scas
out
or
mov
hlt
shll
inc
sub
fwait
add
ficoms
incl
popa
mov
repnz
sub
cmp
mov
addr16
je
enter
jmp
sub
repz
mov
test
outsl
mov
cmp
push
shr
add
lret
mov
daa
and
jecxz
cltd
and
int3
inc
cmp
mov
mov
out
push
daa
les
movb
addl
call
fdivrs
test
push
aas
sub
cmp
inc
mov
rcll
pop
cmp
jle
push
xchg
sbbb
iret
inc
and
into
loopne
pop
add
scas
sbb
jno
xor
ja
adc
fsts
leave
mov
dec
inc
push
call
sub
dec
mov
idivl
into
jecxz
aad
hlt
pusha
adc
in
dec
jae
push
or
push
js
sub
mov
xchg
mov
out
adc
addb
fwait
in
cmp
das
lret
jo
cwtl
rcrl
mov
xor
cltd
add
jne
jns
sub
sub
jo
and
out
mov
bound
mov
lods
push
inc
jnp
test
in
inc
lods
add
and
jns
rorl
sbb
int3
aas
jno
sbb
inc
outsb
add
lcall
test
fwait
push
pop
iret
test
mov
insl
mov
xor
jae
cmp
test
fs
adc
cmpsb
cli
daa
fidivs
mov
stc
mov
fisttpll
and
adc
xor
add
shlb
shlb
divl
outsb
gs
cltd
adc
insl
bswap
jno
pusha
pop
sarl
mov
mov
and
mov
cld
adc
mov
inc
es
out
mov
or
scas
inc
xchg
mov
adcl
sub
pop
scas
sub
jp
jp
inc
pop
add
pusha
in
xchg
stos
gs
pop
dec
loope
adcl
inc
call
mov
cmp
ljmp
push
or
mov
rcl
in
in
xchg
jmp
mull
rep
mov
sbb
pop
stos
std
loope
and
cmp
insl
xchg
aas
sbb
jne
inc
clc
cmovne
fwait
dec
xor
fstpt
jmp
into
es
dec
mov
std
ficomps
xchg
xchg
std
stos
and
mov
xor
sub
push
sub
mov
pop
xchg
xchg
cltd
ljmp
outsl
jl
pop
pop
clc
mov
mov
push
mov
scas
popf
add
insl
roll
hlt
mov
sub
add
lods
popf
enter
mov
rolb
or
push
inc
mov
or
sub
popa
push
mov
lods
mov
jns
shlb
fbld
sbb
jle
fs
mov
in
xlat
clc
dec
jns
sbb
ret
cmp
lods
add
fsubs
cwtl
cmc
lcall
stc
mov
pushf
push
loop
push
mov
inc
and
lods
push
add
sahf
outsb
sti
pop
sbb
movsb
outsb
mov
stc
es
push
scas
test
sti
xchg
sub
xchg
push
lret
push
add
adc
jb
inc
jne
cld
fldl
jb
int3
pop
pop
push
push
dec
xchg
sub
cmp
and
inc
mov
xor
cwtl
ljmp
mov
aas
mov
mov
pushf
std
in
cmp
dec
mov
xor
and
jo
mov
cmpsb
xchg
test
sbb
cmp
int3
popf
add
sub
scas
inc
and
mov
psubq
ss
add
sbb
icebp
inc
mov
mov
sbb
ret
adc
xchg
es
cmpsl
out
outsl
adc
popf
xchg
jbe
fisttps
les
idivl
add
mov
or
mov
lea
popf
enter
cmpsb
mov
push
enter
les
cmp
jge
fiaddl
push
push
xchg
fs
addr16
mov
pushf
stos
adc
cmc
sbb
or
cmp
sar
jge
and
dec
or
cmp
jp
mov
cmp
call
test
cmc
subb
ret
xchg
or
repz
and
sahf
pop
dec
icebp
mov
mov
dec
cwtl
and
test
arpl
addr16
jbe
dec
jnp
fstl
daa
adc
cltd
xchg
outsb
rcll
pop
mov
xchg
cmp
lret
je
imul
jp
cmp
add
pop
xchg
xchg
mov
scas
mov
mov
mov
int
xor
dec
mov
xor
aad
and
mov
sub
mov
icebp
ret
adc
mov
mov
mov
jp
mov
stos
or
xchg
aaa
cmp
mov
sbb
push
test
outsl
pop
imul
sbb
lcall
mov
lea
rolb
lcall
add
rorb
sbb
mov
cmpb
add
mov
adc
xchg
repz
jecxz
adc
mov
cli
xor
adc
xchg
fldt
jp
out
pop
and
jne
pop
pop
mov
pop
pop
mov
xchg
pushf
xchg
jmp
test
mov
pop
push
and
in
or
push
loope
pop
add
cmp
stos
stos
in
cmp
cmpsb
cmpb
movsl
add
mov
adc
mov
scas
test
mov
mulb
leave
xchg
pop
push
sbb
mov
decb
dec
pop
pop
add
mov
or
dec
dec
dec
mov
decl
fsubp
mov
xchg
jo
push
or
cmpsb
icebp
xor
sub
push
inc
pop
push
dec
mov
mov
or
push
int
stc
test
cmp
jno
aaa
mov
pop
inc
idiv
aas
lea
sub
add
std
xor
icebp
mov
mov
pusha
popf
or
mov
adc
inc
aam
push
fistpll
sbb
or
cmpsb
dec
add
sub
in
or
pop
jne
and
cmp
jl
jo
shl
xchg
insb
mov
xor
pop
sbb
call
loope
xor
dec
or
sbb
mov
fdivl
fs
scas
push
sub
and
rclb
add
pop
xchg
movsl
aad
outsb
andl
pop
sbb
inc
iret
mov
movsl
pop
push
dec
lods
mov
dec
lock
ret
pop
adc
sbb
xor
fistps
mov
int
or
fnsave
std
push
js
out
pushf
rclb
sbb
test
popa
sbb
dec
xor
and
cmp
jg
loopne
outsb
or
push
fisubrs
jae
cmp
jae
and
push
cmp
aam
add
sub
imul
loopne
xchg
and
sahf
jo
cld
sbb
jne
in
vcvtps2dq
les
xor
xor
xor
pop
mov
std
icebp
lods
cwtl
xchg
push
out
lea
fists
test
mov
in
jb
pop
decl
cli
mov
mov
lret
mov
aaa
pop
lret
popa
pop
into
mov
xor
popf
pop
xorl
push
or
lahf
inc
test
stos
mov
jo
loope
in
sti
repnz
loopne
mov
inc
xchg
mov
sub
cltd
push
leave
and
push
inc
pop
adc
std
les
call
and
out
movsb
xor
aad
fiaddl
cltd
cmp
mov
imul
adc
pop
cmp
scas
xchg
xchg
mov
insb
jl
and
rorl
nop
sbb
mov
insl
push
xchg
sbb
dec
sarl
adc
outsl
loopne
mov
filds
pop
ret
movsl
jae
sub
push
adc
in
mov
out
hlt
test
jp
notb
ret
ja
sub
fistpll
mov
jno
and
orl
jle
pop
xor
adc
push
test
dec
clc
jmp
sbb
push
sti
pop
insb
fisubs
test
xchg
iret
clc
adc
xor
xchg
nop
sbb
xchg
out
or
jmp
leave
xchg
add
mov
int3
push
sti
test
je
mov
and
xor
add
imul
adc
test
lods
scas
mov
int3
pop
jo
in
popf
and
push
mov
jns
cmp
xchg
popf
pusha
iret
call
notl
cmp
pop
jnp
aaa
fnstcw
test
out
arpl
or
in
out
push
push
jbe
dec
mov
and
leave
jg
mov
dec
xor
dec
and
leave
sbb
sbb
sar
add
jmp
aas
shll
movsb
out
movsl
adc
aas
pop
gs
mov
hlt
mov
push
add
in
jge
data16
jno
mov
mov
icebp
inc
dec
loopne
pop
jl
cmp
mov
sahf
xchg
in
or
mov
push
movsb
mov
hlt
ret
pop
ret
or
in
notl
cmp
repnz
ja
into
ret
mov
ret
mov
lods
cmpsl
addl
notl
pop
mov
mov
mov
push
mov
xor
push
popa
test
adcb
jo
pop
scas
out
xor
and
scas
cld
cli
xchg
sbb
mov
mov
movsl
into
mov
std
sbb
jno
sub
dec
in
in
sti
inc
mov
add
je
cltd
sub
mov
out
cmc
mov
cmp
and
lahf
or
add
mov
in
xchg
mov
adc
xchg
jno
inc
in
or
cmp
dec
push
cmc
cmc
xchg
in
daa
adc
daa
in
jb
mov
int
in
mov
adc
ss
xor
cmp
call
jo
add
pop
mov
add
lret
leave
sbb
dec
xor
addr16
aad
stos
out
sahf
push
xchg
les
adc
mov
pushf
pop
int3
es
push
adc
cwtl
inc
scas
ffreep
aas
enter
mov
push
repz
test
xchg
mov
outsl
add
xor
aas
aas
in
inc
mov
fs
jmp
inc
cld
pop
sti
and
pop
mov
out
call
and
shlb
das
inc
fisttpl
and
in
mov
daa
xchg
mov
push
enter
xlat
pusha
out
mov
lret
in
jecxz
pushf
fistpll
fwait
jae
hlt
mov
add
iret
movsb
leave
test
or
xor
jns,pt
cmp
in
or
xor
fstpt
adc
mov
inc
sub
fs
testl
pushf
decl
sub
enter
dec
jp
inc
jmp
insb
mov
test
enter
or
xor
xchg
clc
mov
xchg
stos
xchg
js
std
push
mov
push
aad
std
pop
adc
imul
fucomp
int
pop
pop
or
lock
mov
mov
in
lwpins
dec
xchg
daa
pop
sbb
push
xchg
shlb
push
add
ret
push
mov
test
lds
cmp
xor
push
dec
call
addl
mov
ret
xor
jp
int
dec
movsb
pop
aaa
or
in
sub
movsb
test
push
fldt
xor
imul
jl,pt
push
and
aas
addr16
push
mov
xchg
orb
inc
cmp
cmp
push
mov
lods
inc
mov
jecxz
dec
stos
insb
aam
mov
mov
into
cltd
out
insl
iret
mov
in
sbb
jae
fisubl
lcall
scas
cmp
cmp
orl
or
push
aad
dec
or
xchg
add
adc
xor
mov
mov
sub
sbb
pop
stos
mov
pop
std
adc
aad
iret
adc
xchg
movsl
mov
psrlq
jmp
test
jno
int3
shl
loope
ljmp
push
jns
cmp
in
repnz
or
ret
ja
movsb
add
sbb
lea
clc
mov
mov
add
jmp
in
lods
inc
jae
popf
xlat
sbb
popf
outsb
mov
and
dec
pop
ror
mov
dec
std
sarb
call
pop
adc
xlat
leave
adc
or
cmp
lcall
outsl
push
lods
int
in
inc
ja
test
sub
bound
mov
loop
aad
lock
or
sbb
mov
scas
mov
xchg
call
out
dec
sysexit
aas
and
mov
inc
or
xchg
lahf
push
jns
inc
mov
sbb
loope
subb
mov
pop
mov
xor
push
xor
xchg
and
pushf
fcmove
mov
adc
sub
mov
or
gs
sahf
orl
mov
xchg
cmpsl
fdiv
pop
sub
add
xor
mov
imulb
ds
mov
js
push
and
cmpsb
ret
lods
ret
imul
enter
xor
or
cld
adc
cmpsl
fdivl
xchg
pop
push
imul
scas
xorb
movsl
js
mov
mov
xor
enter
jns
fmul
int3
xchg
jp
outsl
decb
add
inc
fucom
aas
sbb
inc
jl
add
dec
inc
testb
push
scas
jp
mov
clc
adc
je
cmp
in
clc
xchg
inc
ret
lock
fldenv
or
pop
mov
dec
add
cld
mov
es
jle
es
std
jl
testb
cmpsl
lock
call
mov
test
adc
dec
xchg
push
into
rcrb
push
mov
jno
mov
fadd
and
xchg
xor
mov
lds
push
or
movsb
push
jle
cli
test
data16
jle
xchg
or
fisubs
loope
rorl
xchg
loop
dec
mov
sbb
movsb
ljmp
lcall
jbe
jle
pop
or
ret
shl
stos
jle
cwtl
jbe
inc
sbb
pop
imulb
push
and
lds
hlt
sbb
mov
adc
mov
lcall
leave
in
jbe
sub
and
std
sbb
outsl
cmp
mov
sub
repnz
pop
cmp
insb
test
dec
shll
fldenv
mov
shrl
add
push
xor
dec
dec
test
xchg
inc
inc
in
hlt
cmp
das
mov
push
pop
mov
pop
and
popf
pop
or
inc
fisubrl
and
add
aaa
imul
adc
aas
stos
mov
aaa
mov
jle
int3
xor
jo
adc
popf
jo
es
or
mov
or
enter
mov
push
pop
pop
cmp
pop
add
insl
mov
push
stc
and
movsb
inc
sub
adc
inc
inc
inc
leave
js
loope
test
loop
adc
inc
imul
subb
js
ret
shl
negl
lds
pushf
out
cmc
push
maxps
or
pop
pop
icebp
mov
push
stos
mov
pop
and
ret
idivb
push
imul
push
std
push
out
or
popa
or
dec
aad
pop
test
sbb
shrb
fistpll
nop
sbb
in
lds
loop
dec
dec
xchg
jmp
fiadds
cmp
scas
mov
stc
and
xor
mov
outsl
nop
cli
mov
jno
nop
jp
sub
cmp
popf
cmpsb
and
xchg
jmp
in
cmp
mov
jmp
popa
popa
inc
xchg
sti
in
jg
mulb
mov
jp
mov
aad
pop
popa
add
sub
mov
mov
pop
xlat
xchg
punpcklbw
int
std
loopne
sub
mov
jb
aam
dec
adc
sbb
jmp
lock
add
cmpsb
jg
into
mov
das
and
xchg
dec
sub
inc
push
sbb
lods
imul
stos
push
aam
inc
mov
push
mov
ds
mov
push
dec
movaps
in
cmp
ret
lret
iret
rclb
mov
mov
inc
mov
and
mov
test
scas
jb
push
dec
decl
mov
add
lahf
dec
mov
js
mov
mov
ss
imul
ja
pusha
dec
inc
in
push
or
js
lods
out
adc
jmp
je
adc
into
mov
mov
insb
xchg
xchg
sti
not
into
or
cmpsb
adc
test
and
xchg
sub
pop
xchg
pop
lods
pop
popa
cmpsl
loope
aaa
nop
rcrl
pop
mov
push
into
enter
push
inc
addr16
sub
push
xor
popf
insb
js
lret
movl
daa
out
loop
adc
es
rclb
jns
aad
pop
dec
pop
xchg
inc
mov
test
and
int3
clc
xchg
inc
into
push
punpcklbw
aad
mov
ja
inc
xor
push
add
aam
scas
and
les
sbb
fwait
bound
mov
mov
repnz
xor
aad
jns
add
add
mov
mov
lods
cmp
nop
adc
sub
gs
imul
mov
and
adc
fs
movsl
subl
xorb
dec
jnp
cmc
leave
punpckhdq
into
pusha
iret
pop
cmpsl
pop
cmc
inc
xchg
jno
insb
std
inc
call
xchg
sbb
addb
add
lahf
sbb
aad
es
aad
sbb
insl
and
in
fildl
nop
idivb
push
or
mov
add
adc
jge
mov
es
repz
add
mov
xor
cmpsb
into
das
adc
push
add
pop
jo
cmc
sarb
test
dec
clc
imul
jge
dec
sti
xor
in
pop
cmp
mov
fcoms
pusha
in
je
insb
sarb
in
jo
mov
fimuls
push
mov
test
mov
leave
pusha
shr
cmp
xor
xchg
aad
frndint
das
cli
ret
fcompl
sub
cmp
mov
mov
out
and
xor
sahf
scas
inc
dec
aad
popa
and
and
mov
xor
or
out
test
cmp
xchg
jo
fistpl
push
aas
mov
xlat
mov
outsb
lahf
pop
mov
mov
or
push
push
repz
xchg
xor
pop
mov
stos
and
mov
sub
std
ficoms
cltd
imul
sub
pushf
mov
sarl
mov
sarl
mov
imul
mov
pop
add
dec
popa
pop
in
jl
fsubrp
pop
es
gs
push
lods
jmp
jae
add
jb
pop
jge
jmp
out
mov
incl
mov
adc
rolb
sub
popf
out
pushf
adc
mov
cwtl
inc
pop
mov
mov
rclb
inc
aad
outsb
mov
nop
sub
ret
jo
in
ss
add
in
insl
popf
pop
ljmp
mov
daa
sbb
out
mov
mov
es
or
js
test
xor
stos
pop
xchg
pop
addb
dec
xchg
rol
rol
andb
xchg
xchg
push
shrb
lock
cmp
iret
insl
cmpsl
mov
sub
out
icebp
mov
xchg
cmp
inc
mov
cmp
dec
mov
js
sub
in
es
jae
xor
push
popl
or
leave
push
ja
jo
mov
movzbl
mov
cmp
mov
out
imul
pop
cmpsl
pop
and
sbb
dec
imul
fmuls
out
pushf
outsl
sti
fidivrs
or
push
push
shll
pop
lahf
adc
mov
clc
xor
pop
jb
std
in
lods
out
ljmp
repz
ja
mov
push
out
aaa
or
addr16
adc
adc
stos
sub
daa
dec
jge
into
cmc
cmp
add
pop
and
inc
xorb
fndisi(8087
pop
test
or
jg
test
jle
in
notb
mov
dec
fsub
arpl
pop
mov
das
xorl
push
lret
xchg
adc
dec
jnp
cld
jbe
adc
lods
shlb
clc
jno
jp
call
cmp
adc
lods
jno
fsubrs
or
xor
cmp
mov
push
iret
addr16
psubusb
loopne
es
fdiv
lds
xor
lret
sub
imul
in
mov
int
mov
jl
xor
dec
mov
cld
xor
add
mov
fdivl
aad
adc
push
sub
pop
sbbl
dec
push
incl
pop
cmp
lret
ljmp
lret
sbb
jns
push
adc
mov
or
adc
cmpl
lds
ljmp
shr
stos
out
cmp
add
fidivrs
dec
add
jb
cmp
sahf
mov
aas
incb
aaa
lret
test
movsl
in
shl
adc
loope
movsl
outsl
loopne
and
sbb
out
out
test
hlt
mov
jno
mov
data16
stc
adc
ljmp
loope
in
mov
inc
push
shl
mov
mov
divl
rorl
mov
mov
test
lret
mov
mov
sti
repz
movsl
dec
pushl
jl
fstpt
jae
aaa
pop
jge
jmp
pop
add
mov
or
test
add
mov
sub
push
jo
sub
rorb
sbb
inc
mov
andl
pop
mov
adc
and
imull
out
and
leave
test
mov
rolb
mov
mov
lea
nop
int
test
enter
ret
pop
xorl
daa
jg
mov
push
inc
hlt
mov
das
arpl
pop
pop
cs
add
aam
and
jmp
scas
push
fldt
mov
movsl
push
repnz
and
or
mov
or
xchg
fwait
stc
sbb
ret
daa
push
xorb
hlt
or
cmp
sbb
dec
loop
mov
sub
push
pop
out
mov
adc
sbb
xchg
stos
sub
pop
leave
adcl
js
mov
pusha
lcall
cli
fistl
test
ja
jae
dec
cmpsb
je
imul
fmull
mov
bound
sbb
add
daa
subl
js
fdivrl
sarb
xor
bound
push
inc
in
cmp
adc
mov
adc
scas
in
repnz
jg
xlat
shll
cld
insb
mov
movsl
cmp
pop
push
sbb
aas
insb
fdivs
xchg
aaa
insl
aaa
divl
out
push
inc
cltd
xchg
jle
in
cwtl
lret
inc
cltd
std
cmp
sbb
cld
dec
dec
pop
cmpsb
sbb
aaa
xchg
add
mov
pop
andl
sbb
mov
and
lret
mov
fldcw
leave
fidivl
and
push
pop
sub
sub
test
jmp
in
jne
andb
in
pop
mov
es
push
sbb
mov
inc
and
push
fimuls
and
int3
add
push
add
mov
jge
pop
xlat
pop
jbe
pop
data16
fbld
or
and
jp
or
mov
in
mov
mov
or
sbb
dec
outsb
push
pop
lds
rcr
pop
push
leave
jp
and
or
xlat
inc
xlat
sbb
inc
mov
in
dec
push
pusha
in
mov
mov
fwait
cltd
movsb
scas
daa
iret
jbe
inc
xchg
pop
push
mov
jo
rclb
cmp
inc
and
jo
call
aam
fiadds
mov
push
je
inc
mov
adc
push
and
test
mov
jo
sbb
jmp
sbb
mov
and
stc
and
imul
nop
sti
mov
lahf
cmc
push
ficoms
ljmp
cmpsl
sbb
and
xchg
mov
cmpsl
jo
sbb
inc
out
inc
xchg
xor
jmp
pop
adc
out
jo
mov
fiadds
in
ficompl
pop
dec
leave
lods
lock
mov
jae
rclb
cmp
fdivrl
test
jl
leave
add
loopne
sbb
int
push
out
sbb
test
shrb
jge
add
and
sti
dec
shll
adc
test
stc
pop
out
pop
inc
insb
mov
and
outsb
fldenv
dec
pop
push
scas
xor
in
insb
pop
inc
das
xor
popa
enter
inc
gs
jne
pop
or
mov
jg
lahf
adc
lods
pop
nop
ss
inc
jae
sub
pop
xchg
jbe
shr
adc
fimull
xchg
adc
mov
aam
rclb
data16
sbb
add
pop
adc
iret
movsb
nop
cltd
lds
pop
mov
jnp
pop
je
idivl
mov
fstps
imul
mov
adc
cli
es
xchg
mov
shll
push
pop
and
call
adc
js
and
and
jmp
loop
mov
xor
clc
lds
dec
nop
ret
pop
mov
out
lock
outsl
pop
arpl
jne
lret
loope
sti
mov
mov
shlb
and
and
adc
mov
fs
jle
pop
dec
outsb
sahf
imul
test
mov
dec
addb
ja
mov
ret
cwtl
stos
jb
jle
mov
outsl
repz
movsl
xchg
mov
icebp
in
dec
les
das
mov
xchg
out
mov
mov
add
iret
fidivs
and
sbb
pop
xor
jmp
add
add
push
lock
mov
mov
adc
xchg
xlat
xor
dec
adc
adc
inc
push
xlat
mov
xchg
adc
cmp
aam
jnp
out
and
sub
sbb
leave
imul
mov
push
lret
sub
cmp
pop
repz
push
mov
in
push
cmp
aad
push
cmpsl
ss
adc
dec
push
repnz
adc
ret
pop
sbb
inc
xchg
call
fsubl
jo
imul
les
pushl
dec
scas
test
sbb
adc
fdivrs
or
inc
cmpb
data16
mov
rcr
loop
pop
inc
stos
push
sbb
cmpsl
xor
rclb
mov
sbbl
mov
push
ficoms
or
sbb
adcb
ljmp
mov
push
and
fcompl
mov
rcll
lcall
jbe
aaa
add
pop
adcb
leave
subb
fsubs
gs
in
mov
fstl
xchg
in
enter
pop
push
in
pop
pop
popa
es
xor
cwtl
aam
push
mov
and
mov
test
adc
sub
or
sti
stos
rclb
push
mov
mov
dec
in
mov
sbb
enter
add
or
jb
aam
mov
cmp
dec
pushf
mov
out
fidivrl
jmp
xchg
or
out
in
mov
iret
nop
cs
and
pop
outsl
out
mov
xchg
or
repnz
pop
and
les
jnp
and
fwait
cmp
add
sbb
fiaddl
push
xlat
mov
and
inc
movsb
bound
frstor
mov
pop
jl
imul
in
push
xchg
dec
sub
cmp
mov
test
xstore-rng
cmpsl
inc
aam
adc
ficoml
notb
pop
repz
ja
cmc
lcall
mov
or
fwait
into
or
mov
push
cmp
movsb
cld
sti
roll
adc
jnp
mov
pop
jecxz
pop
mov
ret
dec
das
aaa
arpl
and
inc
rol
adc
fadds
out
xor
leave
cs
and
mov
loop
faddl
push
shrb
or
pushf
popa
adc
pop
clc
test
lods
shll
outsb
sbb
dec
clc
inc
or
xlat
cs
sti
xor
cmp
jne
lcall
add
pop
cmpsl
cmc
dec
add
psubb
add
dec
insl
xor
jle
jg
fstl
fistpll
in
cmpsb
es
jmp
cmc
inc
fildll
mov
fdivrs
lods
ss
addr16
xor
xchg
lret
jno
sub
lcall
out
dec
pop
inc
mov
adc
je
sub
shrb
and
mov
movsl
out
iret
xor
aas
loopne
lcall
push
and
push
mov
sbb
jmp
outsb
mov
out
jle
fld
stos
mov
dec
xchg
pusha
dec
adc
mov
lods
mov
xchg
int3
outsl
test
mov
inc
clc
jg
xor
sbb
in
jb
mov
nop
mov
ljmp
add
jne
fcoms
sub
adc
mov
arpl
mov
dec
mov
inc
mov
inc
xchg
cmpsl
out
leave
jmp
pop
pop
imul
sarl
jne
adc
test
das
mov
add
xor
bnd
adc
mov
jmp
pusha
bound
pushl
fsub
hlt
call
push
scas
lods
into
jl
fimull
sub
xor
incb
cmpsl
iret
inc
push
in
pop
std
mov
mov
lret
cmpsb
mov
das
fs
mov
mov
push
popa
push
loope
pop
sub
lock
inc
push
push
cmp
in
ror
out
mov
mov
fs
fs
sahf
dec
cmpl
adcb
mov
fiadds
fstpt
mov
mov
test
mov
insb
jle
imul
add
insl
call
stos
push
rcll
mov
sub
mov
cmp
or
ljmp
pusha
jae
out
out
and
cmp
xchg
ds
cmp
sahf
xchg
aad
ds
loope
xor
cmp
mov
xchg
inc
nop
push
jb
mov
jno
pop
mov
sbb
fdivrl
in
mov
std
cltd
push
adc
sub
push
lds
jmp
xchg
push
sbb
pop
shll
or
les
and
in
push
test
pop
shlb
mov
fsts
or
mov
popa
push
push
xchg
shlb
ljmp
ljmp
lea
fmuls
xchg
push
insl
imul
pop
subb
shrb
mov
or
mov
dec
mov
and
popa
mov
sti
inc
dec
enter
and
lahf
pop
ret
lds
std
add
shll
mov
jmp
xchg
loopne
cld
dec
cmp
pushf
mov
fisubl
ljmp
dec
out
xlat
adc
repnz
scas
jns
mov
xor
jnp
addb
inc
mov
lcall
and
stos
xor
xchg
cmpsl
mov
mov
nop
nop
xor
dec
cwtl
stos
mov
aam
mov
sbb
icebp
pop
pop
popa
roll
iret
lods
jb
in
cmp
outsb
pop
mov
out
test
roll
xor
repz
jg
sub
das
outsb
clc
jbe
add
dec
and
popf
jae
out
sub
and
icebp
mov
pop
mov
cmp
add
outsb
cmp
ret
pop
cmpsb
pop
push
inc
cwtl
out
sub
out
sub
xchg
cmpsb
cmc
dec
mov
push
lods
mov
jo
jno
movsb
dec
jl
mov
cmp
xchg
fldenv
pop
aaa
test
mov
push
adc
aad
xor
ss
xchg
cwtl
xchg
je
ss
aam
test
outsl
jo
addb
push
mov
test
jno
outsl
pop
cmp
aad
mov
movl
int3
push
sub
inc
dec
out
mov
mov
xchg
and
dec
cltd
shll
dec
dec
movsb
cs
insb
sub
push
or
movsb
out
mov
ljmp
jmp
popf
pop
add
lds
mov
lock
sahf
loope
and
jb
pushf
sbb
xor
leave
add
adc
dec
cmpsl
inc
lock
jle
dec
mov
sbb
gs
rep
je
cmp
sahf
fmul
pop
mov
cltd
lods
mov
and
add
xchg
and
adc
fnstenv
add
add
js
xor
cltd
shlb
shlb
or
adc
push
sbb
adc
testl
xor
mov
popf
sbb
lcall
xor
add
xchg
popf
into
and
push
ret
out
jecxz
pop
clc
mov
mov
fdivl
lods
ljmp
mov
es
into
lods
pop
inc
mov
xchg
mov
push
inc
stos
fimuls
test
stos
je
loopne
lock
popa
inc
cmc
cmp
int
scas
jb
inc
jge,pt
repz
rol
inc
jle
adc
xlat
icebp
in
enter
pushf
cmp
out
lahf
xor
add
adc
sbb
or
insl
into
rorb
pop
push
fisubrs
push
mov
bound
dec
mov
loope
dec
ljmp
cmp
fsts
pop
push
stos
dec
je
jns
ja
cwtl
das
mov
leave
pop
or
fucomi
mov
das
sbb
push
xor
sbb
cwtl
and
in
mov
nop
xorb
sub
sub
lret
fdivs
cmpsl
movb
divl
xchg
jecxz
or
out
testb
dec
sarl
fdivs
shlb
adc
cld
xchg
std
mov
adc
inc
dec
add
adc
push
and
addr16
adc
mov
jbe
ja
push
into
sbb
imull
test
test
pushf
inc
dec
loop
and
pop
sbb
mov
pop
insb
xor
icebp
pop
mov
or
pop
sub
fwait
jl
cmp
mov
cli
repz
xchg
icebp
or
or
sarb
test
or
sbbb
xor
fwait
add
icebp
shll
mov
cmp
mov
xlat
outsb
daa
lock
adc
jmp
sub
mov
mov
or
lcall
dec
cmp
test
pop
or
lods
xchg
add
or
js
xchg
out
dec
movsb
inc
call
inc
or
jb
sub
add
or
iret
or
dec
mov
ret
ds
sub
xchg
aad
call
test
out
push
adc
add
push
das
js
cmp
je
and
ret
mul
adc
jnp
pop
sub
push
sub
cmpsl
insl
pop
and
jnp
xor
xor
sti
pop
sti
xchg
jnp
xchg
adc
push
push
out
cmp
sub
push
cmp
out
les
add
add
mov
pop
mov
into
cltd
ret
cmp
cmpb
jb
popf
cmp
pushf
mov
add
in
xlat
lret
cmp
outsb
outsb
cmp
cmp
cmp
scas
push
bound
out
pop
paddsw
das
test
lcall
and
jl
add
xor
fldcw
sub
mov
fwait
cli
push
pushf
mov
adc
std
lahf
fldenv
mov
bswap
sbb
push
gs
and
daa
outsl
fs
dec
mov
and
sbb
test
mov
mov
inc
adc
pushl
icebp
and
fsubrs
frstor
int
mov
xchg
pop
lret
mov
stc
inc
bound
sub
stos
ret
mov
repz
leave
cmp
gs
or
xchg
sub
adc
push
sbb
xorl
rorb
jnp
scas
cld
xchg
sbb
repnz
add
sbbl
mov
lock
push
or
cmp
clc
lret
test
lret
aaa
push
sbb
mov
rorl
enter
mov
cli
and
out
pop
cmpsb
das
ljmp
sub
mov
repnz
stos
icebp
fs
enter
mov
mov
cmpsl
mov
adc
push
fstpt
dec
fldt
adc
fucomp
dec
mov
int3
cmpsl
imul
or
enter
int
mov
inc
mov
mov
scas
and
add
ret
lret
xchg
dec
in
or
ja
aas
mov
sub
xchg
pop
sbb
int
cmp
in
popa
aad
xor
out
xchg
stos
mov
fcompl
xor
ret
fstps
adc
popa
xchg
add
mov
stos
sbb
push
xor
addr16
adcl
js
aas
dec
ja
sarb
lds
push
push
cmpsl
mov
dec
push
ljmp
sub
mov
and
mulb
xchg
push
rcrl
push
in
pop
sbb
push
or
xor
lods
sub
pop
sub
lods
cmp
xchg
pop
insb
out
jp
sub
dec
dec
jge
fcoms
add
inc
orl
pop
pushf
mov
inc
hlt
xchg
cmpsb
add
jp
stos
insl
test
cmpb
ret
push
xor
idivb
repnz
xchg
into
sbb
dec
mov
test
aaa
mov
push
push
jo
cmpsb
sub
cmp
jl
addr16
mov
jmp
cmp
mov
aas
mov
mov
push
pop
cmc
inc
fsub
repnz
sub
call
dec
pushf
xor
and
jo
inc
sti
stc
pop
jp
sti
cltd
xchg
and
xchg
or
mov
xchg
loop
lods
mov
hlt
out
xor
shll
cli
push
mov
adc
jge
stc
clc
sbb
and
sub
daa
adc
push
imul
add
sub
or
add
pop
stc
insb
lcall
repz
cmc
and
push
stc
adc
and
push
fadd
movsb
icebp
adc
xchg
add
ds
push
pop
jmp
lret
mov
sub
sti
inc
mov
add
test
cmp
pop
push
dec
ja
je
and
jbe
sub
jne
jle
addb
outsl
mov
fidivrl
cmp
xchg
nop
jp
pop
xchg
push
in
stos
testl
in
dec
and
mov
ja
jmp
andl
xor
jp
test
inc
xor
sbbl
popf
xor
jl
mov
jecxz
gs
jg
add
sub
es
es
pop
xchg
addr16
jb
adc
push
add
xchg
adc
insl
sbb
mov
pop
sub
das
or
jmp
xorl
push
cltd
scas
pop
mov
adc
pop
jge
xchg
jb
adc
stc
inc
testl
mov
cmp
sarl
lock
dec
xor
movsl
push
cwtl
mov
hlt
test
popf
inc
cmp
sbb
cmp
icebp
jle
loop
inc
leave
push
movsb
pop
movsl
setp
xlat
xor
das
lcall
sbb
xchg
mov
mul
addr16
lret
popa
imul
cwtl
iret
inc
pop
add
xor
fadds
je
sarb
pushf
jbe
add
icebp
adc
shlb
fstp
ret
mov
out
mov
loopne
adc
cs
testb
das
out
sbb
mov
loope
aaa
push
inc
mov
mov
or
sub
test
xchg
in
mov
cltd
outsl
jae
cltd
pop
imul
xor
push
into
ret
stc
push
mov
adc
jae
or
rcl
aad
mov
mov
push
out
inc
xor
xchg
in
or
mov
adc
add
xchg
jmp
stc
imul
lahf
cli
jo
or
cmp
adc
and
adc
xchg
ja
mov
mov
sahf
testl
xor
addr16
dec
push
mov
ret
lcall
scas
push
jbe
cmpsl
lahf
stos
fs
icebp
scas
in
cmp
cmp
jmp
xchg
shll
ss
dec
and
push
cmp
call
push
pop
adc
cli
inc
scas
push
mov
pop
sbb
mov
rorl
popa
nop
or
inc
fisubrs
testb
pop
xchg
outsb
push
xor
aaa
scas
jns
push
movsl
cwtl
scas
mov
cwtl
clc
insl
mov
fldcw
in
les
dec
pushf
outsl
seta
ja
mov
jne
cli
int
fmuls
pusha
adc
push
inc
and
insl
push
sbb
loope
and
mov
arpl
stos
add
repz
fsubp
sahf
into
add
inc
ds
aas
in
outsb
jae
mov
and
flds
dec
push
movsl
dec
clc
mov
rorl
xor
mov
fnstenv
dec
xor
add
nop
dec
movsl
insl
repnz
xchg
pop
cmc
inc
add
xor
add
mov
cmc
lea
int
inc
dec
pushf
divb
nop
ds
divb
stc
adc
popf
jo
outsb
test
sub
mov
and
pop
sub
lock
mov
shrb
xor
das
jp
cmp
xor
in
addr16
pusha
sbb
mov
mov
ljmp
rep
jae
or
pop
cmp
shl
and
aas
push
or
sti
inc
sub
sub
jecxz
aad
movsl
cwtl
add
mov
in
leave
adc
shrb
add
bound
add
fldt
cltd
add
adc
xchg
mov
rcr
mov
cwtl
cmp
fwait
push
sbb
aaa
fdivrl
mov
jp
sub
popa
push
adc
loop
fisubl
sahf
xor
adc
leave
pop
push
incb
test
in
and
aad
ja
leave
cmc
leave
das
ret
adc
jmp
mov
add
pop
push
dec
push
imul
and
inc
and
ret
xor
xor
not
push
jecxz
cmpsl
ret
sub
hlt
cmp
xor
xor
stos
cmp
mov
cmp
ror
xchg
xor
clc
jle
rclb
jnp
sti
cs
fbstp
jnp
mov
jecxz
jmp
lret
neg
mov
sub
daa
lods
jle
jno
sbb
es
dec
sub
movsl
xorl
jo
inc
sti
push
mov
movsb
int
xchg
sub
or
ja
ficompl
addr16
ljmp
jmp
dec
scas
mov
and
roll
icebp
adc
mov
out
or
sahf
and
movsb
or
mov
popa
xor
mov
xchg
mov
inc
dec
sub
scas
push
mov
jo
push
fs
mov
sub
or
pushf
fnstenv
sub
rcl
jg
adc
sbb
pop
push
fwait
pop
mov
hlt
pop
pop
cwtl
sub
in
and
sahf
xor
aas
adc
aaa
jmp
testb
or
cli
or
adcb
add
ret
ds
sub
incb
stos
adc
out
pop
fxch
stos
in
or
pushf
cli
mov
sub
mov
xchg
dec
dec
inc
add
dec
clc
decl
push
pop
mov
and
loopne
or
sbb
xor
mov
and
addr16
pop
mov
push
adc
sti
sti
jge
sub
add
xchg
xorl
sbb
aad
sub
mov
jecxz
pop
int3
xor
test
mov
adc
test
inc
shrl
dec
rorb
mov
popf
jae
push
mov
dec
cs
sub
lret
sarb
adc
mov
mov
addl
cmpl
ret
or
dec
lahf
pop
sahf
jge
jae
jb
sti
int3
xchg
jb
pop
pop
push
aam
push
push
mov
addr16
sub
pushf
lret
sub
clc
comiss
sti
dec
imul
arpl
inc
daa
dec
inc
gs
or
xchg
lcall
popa
sti
or
dec
out
dec
js
and
pop
xchg
jo
cmc
jle
cwtl
cmpsb
add
push
aaa
loop
jae
xor
je
sub
jl
mov
pop
pushf
pop
sbb
dec
mov
mov
jae
push
data16
mov
into
sub
fmuls
lock
dec
add
mov
push
add
ljmp
xchg
das
ss
mov
pop
sub
add
nop
data16
push
aad
in
sbb
fisttpll
xchg
nop
repnz
push
iret
loop
jae
movsb
test
adc
es
sbb
insl
loopne
popa
mov
push
ja
icebp
in
inc
pop
xchg
pop
outsl
dec
cmp
std
pop
adc
ret
das
adc
lahf
test
add
aad
repz
aad
jo
and
pusha
js
out
mov
scas
dec
pushf
insb
js
les
pop
stos
in
and
dec
sbb
movsl
and
adc
jns
lock
test
outsl
loopne
fisubrs
jmp
cli
test
cmp
test
je
push
incl
xchg
adc
mov
in
cmp
sbb
adc
inc
gs
popf
call
mov
inc
popa
leave
in
push
int
inc
cwtl
xor
add
in
push
aam
xor
nop
cmp
enter
sub
mov
imul
xchg
aam
jp
aad
pop
hlt
icebp
ret
pop
outsb
lds
cmp
enter
mov
aaa
fwait
and
cli
loopne
pop
mov
mov
mov
mov
flds
sbb
or
mov
fwait
add
mov
lret
sub
out
inc
dec
xor
sbb
aaa
jmp
jns
and
sub
or
pop
test
mov
adc
mov
test
and
xor
stc
xchg
sahf
aaa
cmp
xchg
mov
sub
mov
incl
jg
add
dec
fstps
push
iret
leave
aad
push
xor
jb
push
sbb
outsl
repz
sbb
jnp
into
or
dec
sub
insb
insb
int
lret
mul
icebp
adc
mov
mov
aaa
mov
out
outsw
lahf
fisubl
inc
cli
leave
inc
and
fidivs
mov
mov
jge
jb
cs
fiaddl
cmc
lahf
shlb
sub
int
and
dec
mov
mov
push
xor
mov
pop
fidivrs
test
pusha
in
mov
lods
pop
dec
mov
xor
lret
mov
pop
sub
jl
scas
repz
cmpsb
stos
xchg
dec
inc
mov
xchg
pop
sbb
inc
scas
lahf
mov
es
vmread
xor
cmpsl
jno
sti
pop
dec
daa
push
roll
and
dec
sub
push
adc
pop
mov
or
loope
test
sbb
push
nop
dec
movsb
les
adc
inc
lock
adc
mov
adc
dec
enter
mov
cmpl
cld
and
fwait
mov
rorl
pusha
sub
push
movsb
stos
mov
cmp
sbb
dec
or
aam
or
stos
cmpb
push
fnstenv
ja
cmp
enter
ds
clc
in
add
push
testb
rcll
lds
jmp
call
out
pushf
push
jmp
dec
xor
clc
lea
or
test
orb
jae
pushw
xchg
orb
mov
cmp
pop
in
insl
lret
adc
loop
out
or
mov
into
shlb
mov
xchg
ficomps
es
outsl
aad
push
push
adcb
loop
cmp
stos
js
sbb
and
popa
push
sbb
ret
jo
mov
mov
pop
ss
xor
stos
add
loopne
xchg
pop
or
sbb
ret
out
xor
test
ret
mov
pop
movsb
jne
sub
ljmp
rol
insl
addr16
jl
sahf
sub
sbb
roll
int3
jno
inc
add
jae
sbb
out
andb
js
mov
pusha
cwtl
js
sbb
cvttps2pi
test
or
cmpsl
test
xor
inc
icebp
sbbl
test
mov
sub
push
jo
mov
sti
mov
jl
nop
inc
ljmp
scas
ss
xchg
stos
movsl
fcoml
movups
mov
xor
cs
and
es
cmpsb
loopne
mov
aam
test
fwait
scas
sbb
pop
pop
push
xor
in
and
and
add
adc
pop
comiss
adc
mov
aad
imul
lret
add
jecxz
sbb
call
data16
pop
and
nop
mov
cmpl
mov
xchg
movsl
adc
inc
lret
inc
mov
loopne
and
addr16
mov
fdivl
mov
and
stos
roll
cmp
cmp
xchg
test
scas
pop
scas
inc
sbb
gs
cmpsb
jns
sbb
pop
aam
lahf
add
pop
lea
jae
repz
shll
fisttpll
das
fdivl
dec
call
xchg
inc
jle
in
mov
pop
rorb
scas
popa
lret
jae
in
jl
hlt
dec
outsb
mul
mov
iret
out
xchg
in
aaa
lret
inc
mov
jno
rcrb
aad
mov
ret
add
aaa
outsb
cltd
gs
lret
jno
das
dec
cmp
mov
cmc
sbbl
jnp
adc
ret
push
sbb
pop
lcall
dec
sbb
jl
cmp
lds
or
push
dec
mov
xor
mov
pop
jne
cmp
cld
shlb
pop
push
bound
enter
pop
lods
cvtps2pi
dec
imul
push
jne
mov
into
adc
nop
cmpb
repnz
cmp
jle
jbe
or
sbb
xchg
lret
insl
fcompl
pop
das
test
movsw
nop
or
inc
fisubrl
call
lea
sub
add
jl
icebp
adc
sbb
ror
or
add
jns
into
test
je
jge
mov
jns
xchg
mov
xor
adc
cmc
enter
clc
fs
dec
jmp
iret
testl
pop
adc
xchg
sub
popf
icebp
adc
jns
add
mov
mov
adc
or
push
jbe
mov
adc
push
nop
sahf
add
or
sbb
adcl
subb
outsl
mov
mov
dec
push
inc
aas
mov
out
mov
xor
mov
add
push
jo
mov
je
addr16
insl
xchg
cmpsb
mov
rclb
or
lock
add
icebp
and
mov
add
loopne
call
inc
jno
add
push
mov
icebp
jge
or
xor
jmp
aad
and
gs
out
pop
and
bound
popa
dec
xor
push
xor
and
lahf
adc
pop
cmp
in
es
sub
in
outsl
loopne
push
lcall
shlb
pop
jmp
add
sbb
jnp
jp
push
fs
andl
xor
inc
data16
cmc
jg
lea
addb
divl
out
mov
sbb
dec
mov
mov
add
mov
test
sub
push
andl
and
jmp
into
mov
stc
cmp
sub
mov
int3
lea
mov
pop
xor
sub
or
dec
iret
push
sbb
addr16
pop
loop
mov
repz
mov
dec
fiadds
ds
adc
sbb
cmp
jns
cmp
xor
jmp
pop
cltd
xchg
jecxz
mov
xchg
sahf
sbb
xor
mov
dec
insl
dec
or
loopne
scas
cltd
xchg
clc
sbb
movq
test
and
add
scas
das
push
push
add
inc
jecxz
es
les
imul
jb
adc
ret
inc
ljmp
jae
andl
ficomps
push
mov
jne
or
mov
aam
add
fsts
jae
dec
sub
shl
xor
or
aas
push
imul
repnz
xchg
call
je
push
cmpsb
or
adc
imull
inc
pushf
leave
and
out
movsl
shlb
push
mov
dec
mov
cld
cmc
loop
pusha
xlat
testl
nop
stos
repnz
ljmp
inc
sti
lods
pop
xor
fldt
dec
movsl
sub
in
clc
insl
popl
lret
addb
jle
mov
out
push
cmp
fsubp
mov
lea
out
ficoml
add
inc
divb
and
jl
rclb
sbb
cmc
stos
hlt
pop
shlb
xchg
adc
test
inc
jne
push
or
jmp
mov
push
dec
jmp
icebp
mov
lock
dec
sub
in
push
pop
out
or
test
mov
or
imul
out
incl
pop
add
mov
mov
or
test
sbbb
dec
test
add
in
jnp
ds
sbb
out
pminsw
out
cltd
sbb
adcl
aam
lcall
pop
movsb
aaa
loop
les
mov
sub
dec
loope
push
sub
test
es
int
jae
inc
push
out
sbb
sahf
mov
xchg
dec
in
push
sub
out
sbb
push
push
mov
push
mov
ret
inc
addl
push
jp
jnp
imul
push
outsl
jmp
testl
sub
xchg
adc
and
add
scas
pop
add
daa
insl
repnz
lock
xchg
sub
loope
sbb
in
xchg
in
or
cmp
shl
lahf
xchg
cmp
xor
loopne
cltd
notl
sub
push
add
fmuls
aam
push
sbb
das
mov
hlt
icebp
scas
jle
or
adc
pop
jmp
in
cs
mov
jecxz
incb
xchg
sub
cwtl
fxam
incl
sub
gs
mov
or
rolb
out
pop
cmp
adc
pop
stos
arpl
cmpsl
inc
mov
in
in
lret
push
testb
cld
lds
sbb
cmp
xchg
test
fwait
xchg
divl
xchg
sub
add
xchg
pusha
inc
xor
or
push
jmp
dec
movsl
jb
cmp
outsl
mov
push
xor
ss
cmovle
inc
repz
and
loopne
mov
inc
xor
mov
bsf
enter
popf
aas
mov
push
inc
pop
test
and
leave
sti
loopne
shrb
cwtl
xor
mov
cwtl
xchg
xchg
xchg
and
sti
in
pusha
out
mov
add
jno
dec
gs
lret
dec
xor
notl
hlt
mov
jg
pop
mov
out
insb
out
ljmp
mov
jle
mov
in
cmp
push
sbb
dec
inc
push
xor
cmp
add
imul
jmp
xchg
mov
pop
xchg
push
in
cmpsb
sub
shrb
js
dec
insl
or
addr16
jle
dec
and
fstpt
mov
fimuls
xchg
sbb
add
mov
and
ffreep
mov
inc
cmpsl
fwait
mov
sub
pop
inc
stos
int
mov
add
cvtps2pd
cmp
cmp
std
fwait
mov
inc
and
pop
stos
dec
lahf
out
pop
mov
inc
out
adc
and
arpl
lock
mov
jmp
hlt
lret
inc
insb
dec
es
bound
mov
lahf
scas
ss
mov
and
cmp
pusha
xor
dec
adc
data16
sbb
xor
mov
sahf
shr
imul
sub
in
jno
or
out
fs
arpl
lahf
iret
fst
adc
sbb
cmp
loope
jnp
idivb
jmp
insb
inc
scas
mov
int
push
addl
dec
or
mov
or
mov
add
loope
scas
xlat
test
test
rcrl
fs
ret
decb
xchg
cmc
sbb
aam
jb
mov
sbb
mov
lds
sub
or
inc
adc
xchg
and
xor
push
fldl
xchg
out
xchg
adc
jmp
and
adc
fnsave
cmp
les
icebp
je
aad
add
scas
sub
mov
les
les
daa
mov
mov
dec
push
adc
or
push
call
pop
daa
loope
les
aam
lea
cmp
jge
push
gs
sub
or
sti
jp
int3
xor
mov
fiadds
and
mov
int
pop
and
ljmp
adc
ret
subl
mov
test
sub
test
addb
dec
test
ret
push
pop
iret
mov
aam
testl
inc
and
sbb
inc
pop
fldt
mov
imul
out
pop
mov
cmp
dec
push
into
add
out
pop
mov
iret
das
std
stos
jno
sub
xchg
outsb
add
shll
sbb
jmp
or
pop
repz
out
clc
ds
pop
xchg
addl
jge
xchg
or
fucom
cmc
dec
push
jp
in
insb
pop
inc
scas
pop
jns
mov
out
xchg
mov
outsl
xor
lret
iret
push
push
lahf
cmc
xlat
test
pushf
fstpl
adc
rcrb
and
in
sub
call
mov
and
bound
iret
ja
adc
jb
int
stos
divps
dec
in
inc
ds
push
mov
adcb
pop
push
popa
movsb
adc
cmpsl
in
nop
mov
sub
or
fimull
fistpll
negl
push
xor
addl
loopew
orb
icebp
mov
jae
jge
mov
push
cwtl
mov
test
ljmp
xchg
loopne
test
pop
jg
add
sub
jg
or
and
xchg
movsl
push
and
mov
lock
out
adc
mov
xlat
sbb
mov
movsb
lahf
rolb
sub
mov
scas
sub
push
sub
pop
and
fwait
mov
shlb
mov
mov
je
cmpsb
scas
mov
repnz
adc
mov
aas
icebp
fcomps
adc
cmpsb
sarb
movsb
xor
cmp
addr16
das
cmp
push
mov
mov
or
sahf
sbb
es
lods
loopne
scas
cmp
inc
ja
aam
push
inc
std
mov
or
or
js
dec
push
rcrb
jp
cli
mov
pop
jbe
insl
push
adc
imul
dec
sub
xlat
out
jns
pop
mov
stos
mov
dec
ds
mov
inc
mov
in
pop
xchg
xchg
jno
repz
les
jo
sbb
ret
jmp
clc
cmp
push
outsl
aaa
pop
xor
mov
ret
jmp
or
or
dec
mov
jp
popf
addb
or
push
pop
mov
mov
inc
sbb
inc
inc
or
add
jne
cwtl
adc
or
dec
dec
xor
out
push
les
adcl
cs
and
stc
cmp
idivl
adc
movsl
cwtl
add
int
xor
xchg
mov
iret
sub
test
jbe
push
jns
js
push
xor
jge
jmp
mov
jns
nop
mov
cli
lds
ds
mov
ud0
sub
push
mov
outsb
je
cltd
cwtl
xchg
mov
jb
out
popf
testb
xor
xor
xchg
adc
sub
fidivrl
das
jmp
sahf
push
rolb
xchg
cmp
mov
gs
adc
jecxz
sub
js
sub
ret
pcmpgtw
addr16
sub
inc
xor
push
mov
xlat
sti
push
mov
jb
mov
and
movsb
sbb
rorb
push
push
cs
rcl
std
scas
sbb
notb
lcall
and
popf
cltd
add
or
or
icebp
sub
jae
dec
movsb
dec
js
or
neg
push
es
lock
pushf
mov
mov
mov
lods
or
add
fists
cmp
out
jmp
inc
add
sub
push
and
jns
dec
mov
cmp
arpl
mov
popf
fistpll
pushf
pop
cltd
dec
and
and
outsb
pusha
xor
rcll
cltd
int
sub
insl
mov
mov
popa
sub
push
loop
adc
xor
adc
js
xor
xchg
inc
cmp
mov
dec
mov
scas
scas
je
and
pop
loop
fimull
jno
notb
repz
or
ja
mov
out
idivl
ret
fsubp
fstpl
inc
sub
push
nop
dec
mov
jp
jl
fidivrl
nop
cmp
sbb
jb
mov
jo
and
daa
in
fwait
jp
mov
pop
inc
push
xchg
jno
dec
mov
mov
dec
mov
stos
sub
int3
mov
pop
scas
cmp
add
scas
and
mov
decb
inc
push
xchg
cld
loopne
and
popf
out
or
aaa
or
orb
dec
shrb
sbb
insl
enter
inc
push
loopne
push
ja
sti
xor
int
jb
ljmp
andl
push
adc
ret
jnp
push
inc
add
jecxz
data16
int
std
outsl
repnz
mov
loope
imul
stc
shll
xor
ljmp
cmpsl
cmp
xor
jecxz
lret
pop
ds
pushf
pop
mov
aas
jo
mov
jno
pop
mov
adc
inc
mov
push
loopne,pn
std
dec
cmp
cmp
lods
aam
imul
cld
sub
sub
cmp
sbb
imul
pop
neg
pop
mov
sub
add
mov
arpl
sti
js
jbe
inc
dec
cmp
mov
xchg
mov
push
xchg
enter
mul
or
sub
mov
bound
jmp
ror
or
jmp
or
stos
inc
sbb
mov
cld
fnstcw
dec
mov
cli
xchg
or
mov
push
xor
xor
testl
ljmp
mov
sub
xchg
xchg
mov
and
loop
hlt
cmp
dec
push
inc
push
dec
ret
or
push
inc
scas
mov
sti
pushf
xchg
imul
xlat
nop
jmp
mov
scas
mov
stos
xor
ljmp
fst
int3
inc
adc
push
inc
sub
pop
jge
sbb
in
mov
filds
in
jge
pop
and
xchg
xchg
fisubs
cld
aas
jo
repz
add
test
inc
adc
cmp
fs
imul
mov
jle
test
push
sbb
es
dec
hlt
xor
add
and
pop
mulb
push
test
mov
mov
ljmp
xor
dec
imul
jge
or
hlt
mov
ret
repz
pop
fwait
mov
insl
dec
das
pop
in
dec
ret
notl
push
das
cmp
mov
sarl
jle
frstor
inc
lahf
or
lods
mov
sub
push
add
into
clc
xlat
push
dec
pop
clc
sahf
jbe
ret
lret
mov
xchg
dec
add
outsb
lock
push
lods
sbb
and
jmp
push
ret
test
aad
aaa
sub
in
fsts
cmp
mov
into
daa
dec
lods
movsl
adc
cmp
push
stos
xchg
jae
sti
cld
test
cwtl
lcall
inc
sbb
call
in
movsb
pushf
into
inc
enter
push
mov
mov
nop
data16
sub
push
mov
dec
push
loope
fsubl
js
adc
loopne
cwtl
mov
mov
or
lret
in
cmp
mov
dec
loop
sub
add
insl
push
sub
out
lcall
out
movsb
adc
test
sbb
ss
jb
lods
ja
and
push
stos
mov
mov
adc
subb
dec
jno
inc
das
sub
sbb
lods
adc
stos
jge
aas
jp
xor
cmp
inc
mov
sbb
test
movsb
inc
dec
outsb
cmp
inc
cmc
cmpsl
xor
pop
inc
aam
lcall
adc
cmp
sub
mov
gs
xchg
decb
test
pop
add
jbe
push
cmp
clc
loop
shlb
mov
fistpll
xchg
or
rcll
out
adc
call
xchg
push
mov
les
pop
xchg
out
add
adc
mov
add
pop
cwtl
aaa
mov
and
jl
stc
xchg
outsl
cmp
push
and
in
xchg
movb
pop
add
aad
es
stos
dec
rcr
lcall
inc
adc
xor
xchg
xchg
push
xchg
inc
outsb
lcall
cmp
subl
icebp
xlat
ret
lds
rorb
mov
sub
lods
jl
add
data16
ror
fsubrs
sub
insb
jp
jp
dec
sti
jecxz
gs
scas
shlb
mov
mov
fdivrp
and
in
cwtl
sub
or
das
or
notl
pop
pop
fld
jmp
jo
sub
pop
insb
add
out
sbb
leave
add
mov
lock
dec
bound
sub
adc
es
mov
mov
jge
or
rorl
dec
mov
jecxz
mov
dec
xchg
mov
inc
xor
mov
jo
mov
jg
or
outsb
inc
and
test
inc
mov
clc
sarb
dec
pop
ljmp
nop
pushf
pop
movsl
dec
scas
scas
fdivrl
call
and
mov
bound
orl
mov
fstpl
jae
clc
mov
and
jecxz
xchg
adc
incb
xor
push
or
std
inc
pop
cli
faddl
mov
outsb
and
mov
dec
fldenv
jo
push
lock
popa
hlt
nop
insl
push
push
rcr
add
pushf
gs
les
mov
xor
xor
and
lock
es
or
cmp
leave
aad
outsl
push
jbe
sub
js
mov
push
mov
imul
negl
sub
pop
into
gs
out
dec
inc
divl
cmp
test
lcall
cvttps2pi
and
shr
repz
add
or
imul
loope
cmp
fcomps
icebp
or
ror
es
xor
in
scas
jle
cltd
test
cmpsl
mov
mov
sub
sub
xor
movsl
orb
sbb
rcl
add
mov
and
mov
dec
jmp
xor
sarb
jnp
jp
push
sub
cli
adc
xor
mov
push
stos
xor
push
xlat
test
inc
dec
push
iret
clc
xchg
xchg
sbb
cs
jno
imul
adc
or
cmpsl
jb
out
mov
pop
pop
xchg
aam
lcall
adc
mov
jp
cmp
inc
push
inc
push
mov
cmp
jge
int3
pop
mov
repz
xor
xor
in
rcrb
fwait
inc
add
jmp
mov
lock
loope
daa
stc
jne
cmc
in
xorb
out
movsl
lods
addb
xchg
jns
pop
sbb
out
pop
hlt
call
jg
or
mov
mov
add
xor
add
movsb
cmpsl
faddp
pushf
xor
lods
and
and
xlat
lods
sbb
mov
inc
ss
mov
xor
inc
xlat
int3
repz
sbb
nop
lcall
xchg
inc
dec
leave
cli
mov
jbe
movsl
or
pushw
mov
mov
adc
xchg
hlt
sub
lret
jae
sub
test
inc
iret
mov
stos
dec
sbb
pop
test
inc
and
push
in
add
xorb
shrb
dec
or
push
cmp
mov
or
nop
lock
dec
mov
xorl
mov
mov
xchg
mov
mov
add
jno
pop
fidivl
loopne
xchg
cwtl
les
pop
or
fld
and
jg
xchg
pop
dec
push
pop
mov
cmp
cmc
and
add
or
jb
push
movsl
mov
jle
rcrb
xchg
mov
cmp
addr16
test
jecxz
insb
mov
sti
jno
mov
imul
push
fldl
jbe
inc
shrb
fwait
incb
pushf
cmpsl
js
lret
mov
jecxz
in
pop
add
das
push
and
fldenv
mov
and
dec
add
lcall
mov
out
pop
or
push
insb
xor
mov
test
jg
ss
insl
adc
fisttps
cwtl
cwtl
insl
movsb
ds
arpl
scas
popa
mov
in
mov
ljmp
insl
movsb
in
jle
sti
jge
mov
shll
stos
fadds
daa
or
lock
mov
nop
or
pushf
psrad
int
push
sub
test
xchg
bound
bound
movsl
sbb
or
clc
push
pushf
inc
and
rclb
push
sbb
or
jno
cs
xor
cltd
mov
cmp
mov
lods
test
imulb
jl
or
push
jae
dec
push
push
sbb
mov
add
outsl
rol
xchg
inc
jg
cmp
aas
or
ljmp
repz
fmuls
ja
mov
dec
jnp
shrb
pop
fbstp
ja
stc
jecxz
xchg
and
jecxz
adc
inc
pop
pop
mov
out
jne
mov
xchg
ss
fistl
ret
mov
dec
lahf
ljmp
dec
xchg
icebp
aam
sbb
mov
inc
jae
xlat
mov
int3
ljmp
into
cltd
pushf
push
mov
xor
jle
adc
call
shl
cmp
jg
pop
sub
fsubs
push
mov
or
pop
mov
and
mov
fidivrs
add
or
sbb
inc
sub
rdmsr
movsb
xchg
xor
fildll
test
jl
outsl
pop
in
inc
fidivrs
test
in
out
arpl
icebp
lcall
dec
fwait
add
cs
aam
add
lret
xlat
jl
xchg
push
jecxz
cltd
mov
stos
dec
fwait
hlt
mov
repnz
jns
mov
mov
ja
fisubs
or
repnz
dec
push
scas
mov
lahf
push
xor
leave
add
dec
jge
jl
jb
test
mov
lods
mov
xchg
fisubrl
sbb
mov
std
sub
les
adc
xchg
test
or
rcrl
fisttpl
leave
pushf
sbb
outsb
int3
out
sahf
inc
cmp
jle
adc
xor
daa
mov
out
out
jb
ljmp
pop
jp
xor
pop
into
cmp
ljmp
cmp
in
adc
push
scas
lret
sbbb
inc
mov
jl
jge
inc
mov
gs
jno
push
pop
loope
inc
mov
inc
sahf
ljmp
dec
scas
cmp
xchg
mov
hlt
les
and
pop
cld
aas
shll
hlt
gs
adc
scas
dec
test
pop
aam
pop
mov
faddl
pop
aad
test
in
jp
dec
mov
push
jns
ss
dec
and
loop
push
sbb
in
aam
sarb
adcb
sub
lds
xchg
jg
paddb
aad
xor
add
xor
mov
imul
in
inc
call
ret
mov
cli
cli
cmova
inc
dec
mov
adc
jmp
cli
mov
test
push
sbb
adc
push
popa
mov
mov
dec
int3
jecxz
popa
jp
out
dec
stc
sub
dec
movb
dec
sbb
setne
push
stc
push
xor
movsb
fdiv
cs
and
xor
insl
rolb
cmc
or
inc
and
popa
jns
add
cli
cmp
test
mov
cmc
dec
movsl
or
cmc
and
in
xchg
mov
push
cmp
and
pop
int
jmp
xlat
aad
jp
inc
scas
cmp
xor
sbb
cmp
movsb
adc
xchg
jne
cmp
inc
push
fsubl
enter
subl
movsb
jecxz
movsl
ds
adc
inc
xchg
push
andl
std
and
and
inc
pop
push
out
jmp
ud0
cwtl
mov
loop
repz
cmp
fisubrs
out
addr16
andl
sbb
imul
flds
adc
or
inc
or
repnz
loop
jmp
aaa
andb
sahf
or
jno
add
loope
sub
cmp
fsubl
and
stos
fmull
jecxz
mov
mov
xchg
negl
movsb
jg
fcoml
push
es
test
clc
sarb
xor
or
mov
rcrb
mov
adc
repz
out
clc
cmp
shll
leave
scas
jo
shr
xor
push
dec
arpl
push
inc
sbb
or
out
call
cmpsl
dec
cmpsl
leave
sti
jae
lea
mov
pop
enter
cli
leave
xchg
in
into
pop
lret
arpl
sbb
divl
sub
pop
ljmp
mov
lds
xlat
xor
sbb
or
sbb
rcll
jmp
scas
jge
leave
scas
lcall
dec
stos
mov
leave
sub
cmp
scas
addr16
sbb
jns
cmp
mov
in
mov
stos
cmp
ja
mov
xchg
ret
mov
idivb
pop
cmp
mov
push
fiadds
inc
xor
aad
cmp
inc
xlat
ds
imul
call
jg
aaa
aad
aas
cwtl
test
addb
outsl
sbb
mov
xchg
cmpsl
mov
stos
enter
cmp
sahf
loop
in
inc
shll
pusha
cld
outsl
add
pop
jmp
test
dec
cli
mov
dec
stos
hlt
lcall
and
fcoms
pusha
xchg
cmpl
outsb
inc
sbb
jbe
adc
int
adc
lahf
scas
mov
imulb
cmp
in
mov
jae
xchg
dec
mov
icebp
out
aas
sbb
gs
out
mov
and
pop
bound
es
cmp
add
sahf
ret
mov
mov
movsl
outsb
movsb
mov
mov
dec
pop
lock
mov
je
out
ja
jecxz
and
sbb
fdivs
lock
lds
outsb
out
adc
leave
and
pop
jb
mov
in
jbe
pop
inc
out
xor
sub
mov
adc
fstpt
dec
jo
aaa
mov
repnz
sub
les
das
idivb
and
and
push
dec
rcrl
adc
jl
sub
cmp
test
hlt
or
mov
fwait
lock
scas
ret
sbb
adc
test
nop
imul
rorb
adc
jle
lret
sub
and
pop
dec
xlat
pop
sbb
and
mov
jae
lods
and
adc
stos
jns
movsl
cli
nop
xchg
rcl
outsl
jne
mov
loop
lahf
pusha
inc
cmpsb
imul
aad
sub
mov
and
and
cld
js
lahf
out
jb
adc
add
aam
jbe
mov
je
loop
mov
aad
scas
arpl
pop
sub
outsl
xchg
jb
icebp
sub
fs
aaa
adc
pop
and
fsts
adc
inc
ljmp
cmpb
jg
jno
and
adc
xor
mov
loopne
shlb
push
fsts
mov
or
pop
jecxz
loope
jns
fnstsw
clc
and
lods
sarb
pop
jge
data16
pop
mov
pushf
xchg
jge
add
mov
push
jle
arpl
mov
push
inc
jns
xchg
mov
jge
cwtl
shlb
xor
xor
andb
fs
test
add
sub
aad
pop
push
outsb
adc
xchg
unpcklps
mov
imul
inc
ja
pop
dec
push
sub
inc
inc
jecxz
rcll
xor
xlat
mov
test
adc
repnz
jecxz
sarb
jnp
mov
add
mov
push
pop
das
in
push
aam
or
dec
loope
and
sbb
lods
mov
mov
and
pusha
lock
jns
mov
icebp
ret
lods
and
pop
sub
sub
jbe
xor
dec
mov
sub
mov
enter
iretw
dec
xchg
or
push
xchg
lds
mov
mov
stos
pusha
dec
jg
add
ja
addb
adc
stc
clc
xchg
mov
mov
push
loope
pop
jecxz
dec
ljmp
call
mov
mul
sub
roll
jno
mov
jne
mov
aam
hlt
pop
js
push
add
xchg
imul
fadds
cmp
pushf
or
pop
das
xor
scas
mov
and
sbb
jno
fs
jle
cwtl
inc
addr16
mov
insl
lods
push
xor
sbb
subb
out
leave
lods
pop
jmp
testl
cmc
jbe
bound
xchg
cmp
push
fcomp
shrl
ljmp
inc
cmp
dec
cmp
inc
clc
jne
push
xchg
pop
mov
xor
popa
imull
jle
nop
shrl
push
pushw
mov
inc
stos
cmp
movsb
in
iret
in
mov
sub
paddsb
lods
mov
outsb
add
ds
push
dec
mov
xor
xchg
lret
aas
aad
cmpsl
movsl
mov
dec
mov
frstor
sub
xchg
or
rolb
add
adc
dec
sub
sub
jae
jg
sub
xor
in
pcmpeqd
iret
pushf
fldl
aas
sub
sar
dec
push
mov
sbb
dec
xor
aam
ret
jecxz
push
push
lcall
jle
mov
hlt
and
sar
stos
ljmp
and
adc
jns
fisubrl
popf
mov
xlat
adc
jns
fisubs
arpl
ficoms
mov
mov
dec
or
dec
rcr
stos
jo
loopne
lods
xchg
add
sbb
adc
popf
mov
sbb
lret
xchg
push
test
cmpsb
add
test
jecxz
cwtl
mulb
xchg
lret
jle
mov
sub
xor
outsl
or
sbb
mov
js
mov
test
mov
int
and
mov
sbb
push
lret
inc
push
ret
mov
lret
sub
xchg
les
sub
jle
cltd
in
ja
cmp
outsl
icebp
enter
push
sbb
mov
push
scas
and
or
xlat
hlt
ds
inc
sahf
jecxz
pop
pop
and
push
scas
cmpl
rorl
fcmovnu
aam
add
aam
dec
iret
pop
hlt
xor
mov
cld
stos
mov
mov
loope
mov
repnz
jmp
dec
jge
popf
sub
push
pop
xchg
mov
insb
pop
add
and
loope
adc
push
jg
jg
pop
movsl
clc
sbb
imull
test
xorl
fwait
mov
adc
adc
mov
dec
rorb
test
dec
xchg
and
cmpsl
stos
or
fistpll
mov
push
and
mov
loope
cld
lods
les
lock
cmp
stc
pop
add
jne
lods
cwtl
push
in
iret
std
push
jae
scas
adc
xchg
icebp
push
adc
add
cmp
or
cmp
insl
push
repz
lock
fadd
dec
mov
dec
pushf
cmp
insl
loope
inc
xorb
lods
fcmovnb
jb
mov
jbe
jge
mov
adc
mov
inc
mov
mov
dec
dec
andl
loopne
jnp
fistpl
addr16
or
pusha
inc
outsb
pushf
xor
cmp
mov
in
xor
mov
sub
pop
or
jns
hlt
jno
mov
aad
push
insl
jp
pop
or
inc
leave
call
sarl
out
xchg
ud1
or
push
adc
mov
mov
aad
pop
mov
jbe
shl
in
or
lcall
add
jo
adc
xor
insb
lods
jecxz
sub
ret
push
out
sahf
mov
xor
fcmovnu
cmp
xor
adc
adc
loope
xchg
push
adc
adc
cmp
xor
insl
mov
fisubs
pop
jae
mov
add
dec
leave
add
movsl
pusha
test
hlt
sub
push
cmp
into
xchg
mov
imull
icebp
mov
push
jo
xor
cwtl
dec
jbe
test
cltd
les
cli
data16
sub
sarb
xor
adc
inc
adc
clc
rclb
pop
xor
jo
pusha
orl
jns
outsl
gs
aaa
mov
mov
cmp
lret
sbb
cmp
xchg
xor
inc
mov
jp
je
stos
push
jo
sub
gs
ss
insl
popl
cmpsl
cmc
outsb
inc
clc
iret
rcrb
imul
repnz
adc
loope
jae
mov
cltd
dec
rcll
int3
mov
fsubr
enterw
out
sub
push
in
aas
icebp
dec
sub
mov
push
sbb
mov
adc
fnsave
es
sbb
push
jmp
jne
cs
out
jns
mov
aas
ret
cmc
adc
cmp
sub
jns
pop
sbb
add
stc
cmpsb
clc
ds
mov
leave
mov
aaa
sti
mov
and
movsl
daa
loop
xor
jg
sbb
cmc
lcall
mov
cld
mov
test
pop
cmp
push
arpl
es
testl
jg
jge
iret
xlat
push
lret
push
cli
jb
mov
es
in
outsb
mov
mov
orb
stos
test
mov
mov
mov
rorb
nop
xchg
push
mov
clc
fwait
mov
pop
and
cs
jns
rorl
or
fnstsw
xchg
push
in
int
dec
fnstsw
jle
je
jl
hlt
mov
hlt
push
push
aaa
dec
mov
loopne
js
js
outsb
mov
hlt
scas
dec
inc
bound
mov
lret
mov
xor
adc
cmpsb
imul
iret
lahf
add
cmp
or
cmp
iret
jmp
mov
pop
mov
inc
aam
das
fstpt
cmp
and
xor
jno
pop
mov
fwait
orb
fstpt
clc
les
sub
ret
inc
cmpsb
sub
push
add
jbe
call
clc
push
xchg
mov
mov
enter
leave
call
xchg
mov
mov
mov
data16
movsl
pushf
jne
cmp
xchg
mov
sbb
add
xchg
into
mov
addr16
mov
jge
pop
inc
imul
lcall
add
dec
mov
push
push
popf
repnz
mov
xchg
mov
xchg
mov
sbb
sub
icebp
aad
fucomi
cltd
mov
mov
adc
push
push
cmc
xchg
mov
les
fisubs
push
push
mov
dec
mov
pop
mov
sbb
inc
rcl
std
mov
arpl
sahf
ds
enter
out
mov
jo
adc
or
in
cmp
sbb
mov
aad
sub
call
sub
dec
loopne
ret
jmp
cs
push
andb
jae
std
sti
or
push
pop
test
pop
lahf
pop
stos
push
mov
outsb
subb
pop
jns
pusha
pop
or
movsb
and
inc
je
push
or
mov
xchg
adc
test
and
jbe
mov
pop
sahf
cmp
jb
dec
mov
sti
xchg
add
aaa
sar
sbb
int3
dec
add
bound
lret
enter
cmp
dec
and
rcll
xor
stc
icebp
lods
insb
or
pop
mov
fwait
cmp
cmpsb
lods
shll
lret
rol
sbb
xor
shrl
or
dec
std
addr16
cmp
lods
mov
xlat
in
pusha
iret
rcll
jl
cmp
cmc
pop
inc
fs
aad
repz
fimull
nop
cli
pop
pop
mov
divl
xchg
shlb
repz
dec
pop
pop
mov
adc
les
xor
adc
vminps
pop
iret
add
imul
divb
lods
push
movsb
xchg
roll
in
xor
icebp
push
push
mov
or
mov
test
mov
pop
jg
xor
fs
cmp
xchg
clc
inc
push
jb
mov
int3
and
cmpsl
sbb
pop
int
dec
jno
xchg
cmp
mov
lcall
jns
jl
inc
mov
rolb
mov
cmpsb
xor
mov
xchg
sbb
mov
aaa
xor
jp
ss
movsl
test
and
cli
mov
cli
iret
hlt
cld
and
push
or
inc
mov
aas
xchg
imul
lea
adc
js
pop
push
fndisi(8087
mov
sub
sbb
fildll
or
aad
jp
mov
neg
adc
xchg
dec
lods
test
push
fcmovnbe
mov
mov
divb
fwait
js
sbb
orl
pop
fwait
sbb
sbb
sti
aam
shr
inc
ja
add
push
jb
shrd
xchg
lcall
dec
ret
cmp
mov
pop
stos
sti
div
and
dec
imul
push
movsl
push
add
repnz
lock
mov
mov
pusha
aaa
enter
sarb
shll
dec
addb
jbe
cmpsl
inc
and
jg
ja
dec
hlt
fisubl
adc
push
test
es
insb
fs
dec
scas
sub
mov
in
cs
sub
mov
xor
gs
test
push
and
adc
out
pop
add
dec
xor
xchg
subl
dec
xchg
push
lods
loopne
jae
xchg
pushf
lea
outsl
data16
inc
call
or
sub
xchg
jb
jg
and
int3
or
flds
roll
adc
mov
xor
fwait
mov
mov
sbb
sbb
add
push
aam
cmp
lds
add
push
sbb
insb
fnstenv
xchg
out
out
aad
pushf
mov
xchg
mov
scas
cmc
cmp
pop
aad
mov
pop
insl
push
jae
in
dec
sub
add
add
mov
mov
sub
dec
cmp
cmp
inc
push
mov
jno
sub
adc
push
cltd
pop
std
jns
pop
aas
movsl
dec
out
cmp
jmp
xchg
in
add
fwait
jae
cmp
jnp
and
xor
add
int3
inc
mov
sahf
test
mov
xor
mov
scas
mov
out
dec
mov
loope
addr16
inc
out
xchg
lods
sub
mov
loop
lret
xchg
loope
aaa
lcall
arpl
cmp
push
fs
xchg
pusha
idiv
and
filds
mov
cmp
mov
in
pop
mov
mov
nop
fsubl
jecxz
cmp
cwtl
inc
out
pop
mov
ja
in
dec
test
or
add
stos
sar
cmp
xchg
mov
icebp
jl
mov
das
push
cmpsl
lds
nop
xor
push
adc
mov
mov
cmp
icebp
jbe
aad
mov
inc
pop
mov
sahf
insb
sub
out
push
scas
or
or
test
jo
aad
call
nop
aas
sbb
lret
fcmovbe
jbe
daa
adc
xor
iret
test
fucomp
fisubs
xor
and
mov
rcl
adc
scas
ljmp
and
pop
inc
sbb
rol
int
test
add
sbb
sbb
jmp
lock
cmpsb
ret
pop
xchg
sbb
xchg
dec
mov
sbb
mov
adc
or
lahf
cmpsb
shlb
xor
push
pop
cli
and
dec
xchg
jge
fildll
scas
dec
mov
sub
hlt
lods
inc
or
and
fmuls
enter
stos
jno
push
in
xchg
aam
shlb
add
data16
xor
or
adc
push
imul
movsl
push
js
pop
mov
sub
sbb
and
push
dec
mov
pop
push
mov
popf
mov
xor
lret
jge
mov
dec
mov
sub
lcall
fscale
or
push
jecxz
xor
jns
mov
jno
icebp
or
data16
aas
sub
push
cltd
xlat
push
sub
lea
xor
fucomi
inc
rcrb
xchg
int3
nop
xchg
inc
loop
aas
les
mov
mov
ficoml
push
popa
add
mov
pop
pop
out
sub
stos
push
and
es
mov
imul
xchg
sbb
frstor
ret
sub
icebp
and
aaa
dec
push
dec
fcomps
int3
insl
push
fistpll
lcall
mov
stos
pop
fs
and
jno
sbb
jg
adc
pop
sub
test
cmpsb
add
in
fs
shl
lcall
js
pusha
or
and
aas
mov
ret
inc
je
sahf
cmp
inc
cli
decb
repnz
or
mov
stos
add
push
adc
inc
sbb
sub
pop
push
jno
aad
add
or
inc
dec
cmp
mov
xchg
cld
lea
adc
push
sub
mov
push
rolb
push
aad
push
xchg
test
ds
mov
fisttps
popf
das
daa
add
hlt
ja
pop
push
sub
sub
lret
flds
cmp
pop
sbb
lcall
mov
sub
sbb
xorl
mov
ss
stos
push
mov
repz
dec
cmp
cmp
sub
sahf
cli
int
cmp
lods
fimull
test
pop
dec
mov
pop
push
push
shlb
dec
cltd
lea
push
shl
mov
dec
and
aas
aas
je
mov
out
jp
sub
inc
cmp
add
cwtl
add
xchg
lcall
movsl
sbb
out
int
gs
push
inc
cmp
mov
nop
jbe
adc
cwtl
cmpb
sbb
cmp
mov
dec
mov
inc
and
mov
or
mov
lock
sahf
xor
sbb
test
dec
dec
loop
xor
jne
push
pop
lret
fcomip
jbe
nop
mov
lods
stos
pop
nop
ret
movsb
cmp
jp
mov
pop
hlt
adc
jmp
iret
cltd
or
aam
push
mov
inc
dec
lahf
into
jb
aaa
loope
std
dec
scas
or
dec
sbb
adc
jmp
lods
cmp
hlt
jb
push
out
jg
test
xchg
fwait
test
sub
loopne
fldt
inc
lret
pop
arpl
and
cmp
add
xchg
push
mov
leave
orb
mov
mov
jl
add
mov
mov
mov
gs
xor
les
mov
das
lcall
ljmp
movsl
cs
mul
fistpll
jo
ds
test
mov
idiv
pushf
je
and
sbb
hlt
sbb
repz
mov
lods
dec
cmp
push
int
jecxz
and
fildll
pop
sub
sub
and
loopne
int3
sbb
std
or
fnstsw
ljmp
sub
fwait
xchg
into
cli
sbb
clc
insl
cmpsl
clc
xchg
call
sbb
aam
push
mov
stos
mov
in
lods
add
mov
int
cli
cmp
or
xchg
fisubl
add
outsl
dec
repnz
shr
daa
ret
lea
ja
cmpsl
call
lds
push
inc
jl
inc
rclb
jno
mov
mov
fdivl
mov
aam
cmp
mov
subb
fdivl
bound
lret
push
add
cltd
cmp
jecxz
fisubs
test
inc
aas
stos
and
inc
adc
dec
imul
data16
or
push
or
out
ret
pop
cli
xor
sbb
ffree
jne
and
int3
dec
mov
insb
mov
dec
dec
add
mov
inc
dec
xor
scas
jmp
inc
fwait
lds
int3
sbb
repz
mov
fdivrp
mov
sahf
in
cli
fwait
out
cmp
aas
cmp
arpl
sub
inc
leave
hlt
mov
nop
movsb
sub
push
dec
imulb
xor
mov
or
adc
shll
js
sub
mov
jge
popa
cs
jg
and
xchg
test
stos
xor
leave
arpl
mov
and
push
add
sub
fmuls
dec
mov
mov
jg
nop
sbb
dec
add
xor
xor
xchg
imul
sub
pop
pop
shlb
pop
repnz
sbb
mov
or
mov
add
fistpl
sar
loop
sbb
mov
jecxz
lret
jnp
xchg
cltd
cmp
jecxz
xlat
mull
repz
add
les
xchg
and
dec
add
repnz
jbe
outsl
pop
push
mov
mov
push
imul
stos
dec
add
mov
dec
ss
iret
dec
cmc
or
adc
sub
mov
dec
sbb
es
rorb
xor
movsl
add
or
subl
aaa
push
push
adc
fcomip
pop
push
adc
loopne
dec
sbb
jbe
outsb
lds
shlb
nop
lods
sbb
pushf
into
or
mov
xor
xchg
cltd
jmp
dec
mov
inc
pop
mov
add
xchg
fsubrs
dec
cmp
mov
push
test
push
add
aas
push
xchg
test
cld
sub
and
roll
pop
aam
sub
xchg
int3
mov
fdivrs
cmc
and
cmp
xor
test
cmp
mov
mov
xchg
scas
mov
mov
aam
xchg
push
mov
stc
inc
ret
fisttpl
aad
cmp
outsb
xor
and
or
es
adc
decl
sub
and
push
dec
and
inc
in
popa
cmp
ja
stos
dec
pop
push
fstp
cs
pop
test
adc
or
shrl
test
clc
loop
sti
sti
inc
pop
or
inc
fdivrl
test
movsl
pop
pusha
shlb
and
movsb
xchg
mov
adc
out
dec
adc
fisttpll
jle
mov
sub
mov
jo
pop
lock
pop
sub
pop
sahf
push
iret
pushf
xor
int
jb
adcb
lods
dec
fwait
insl
sub
subl
fistl
and
sarl
pop
lcall
add
mov
cmp
push
loopne
movsl
xchg
adc
and
enter
out
stos
ret
arpl
rorb
or
cmp
ss
pop
jb
adc
push
push
sbb
push
cmp
cmpsb
ret
lods
jmp
adc
mov
rcrl
in
and
scas
mov
push
mov
mov
xor
cmp
jns
jo
and
sbb
sbb
mov
jns
add
pop
xor
jnp
mov
dec
insb
add
jle
fmull
movsl
xor
add
mov
sub
sbb
fisubl
imul
pop
dec
pushf
pop
xor
xor
pop
jecxz
sub
into
sub
mov
arpl
jge
dec
fcoms
pop
xchg
ljmp
xchg
leave
rolb
mov
mov
ljmp
jns
aaa
mov
in
sti
xchg
pop
add
fcmove
iret
test
mov
fistpl
push
pop
out
mov
sti
gs
cs
jg
xor
inc
cmpsl
mov
fiaddl
aad
sbb
rclb
lods
pusha
cmp
sarb
pop
aad
push
mov
in
into
xor
mov
rcrb
cmpsl
gs
and
cltd
mov
xchg
pop
mov
adc
and
in
fnstsw
xchg
pop
pop
mov
sub
shl
loopne
out
out
stos
xchg
or
mov
mov
xor
aam
jg
push
mov
movsl
push
jo
testl
loope
ficompl
add
xchg
xor
sahf
jg
pop
jno
lods
mov
test
std
test
add
mov
mov
imul
push
stos
jp
add
mov
shrb
and
and
gs
aam
mov
sub
jnp
nop
ret
adc
outsb
adc
and
mov
jecxz
jmp
aam
mov
or
cld
mov
pusha
js
and
jnp
or
leave
sub
mov
js
push
cmp
hlt
scas
jp
jge
push
fnstsw
call
hlt
inc
stos
xchg
fdiv
mov
fcomi
cmpsl
les
lea
pop
movsb
loope
xchg
fbld
adc
outsb
or
add
adc
insl
mov
push
ds
dec
xchg
add
lret
xchg
movsb
outsl
and
or
mov
test
mov
test
ret
mov
lods
inc
sub
cmc
push
add
stos
sub
dec
movsb
or
mov
pop
aam
push
call
ret
imulb
das
jbe,pn
push
push
or
das
dec
rcrb
fildl
aad
popf
sub
es
loopne
lods
jp
repz
lahf
or
or
lods
repnz
jge
pushf
adc
xchg
ds
push
dec
xorl
sbb
scas
addr16
push
xchg
inc
ss
xchg
iret
and
das
shr
shll
arpl
cmpsb
test
js
aaa
clc
push
mov
add
sub
aad
out
or
addl
fmuls
out
data16
in
lret
sbb
cs
arpl
or
mov
mov
cmpsb
nop
pop
dec
add
lcall
mov
mov
scas
xchg
add
cs
xchg
test
imul
les
dec
in
sub
pop
pushf
iret
clc
mov
sub
fldt
inc
jl
ds
or
seta
xlat
xor
mov
xchg
adc
ja
sarl
out
sti
faddl
cmpsl
cmc
and
sbb
jle
pop
test
daa
dec
rol
call
nop
sbb
jmp
fnclex
test
loope
scas
in
dec
adc
adc
cmpsb
popf
enter
aam
out
cltd
and
and
pop
pop
int
adc
push
imul
or
xor
cmp
cmpb
cld
or
lds
in
push
push
mov
pop
ljmp
je
std
orl
stos
cmp
jb
pop
leave
push
test
rcrb
sbb
adc
sbb
xchg
pop
jl
call
shll
pop
cmp
pusha
lcall
fnstcw
mov
push
jne
dec
popa
push
fsts
mov
arpl
scas
aas
adc
jmp
jecxz
aam
test
cmp
jae
push
xor
and
pop
mov
pusha
xchg
xchg
xchg
push
jg
pop
ds
in
pop
stos
pop
mov
push
cltd
xor
adc
sbb
sahf
jg
cmpsl
loop
loop
pop
xchg
movsl
jecxz
movsb
stc
dec
es
xor
rol
mov
mov
mov
xor
mov
nop
pushf
stos
fnstsw
lea
pop
daa
sub
push
sub
clc
jecxz
fs
xor
sub
popf
outsl
mov
pop
sub
call
and
mov
add
sbb
lret
es
push
ss
dec
bound
aam
inc
lahf
add
inc
push
push
push
xorl
and
leave
adc
out
or
clc
aas
fistpl
mov
push
or
decb
pop
jecxz
hlt
pushf
add
cld
shrb
ljmp
jns
jle
aaa
jmp
inc
xchg
popa
xchg
mull
or
scas
stc
inc
xchg
popa
and
js
test
dec
fsts
test
mov
mov
sub
dec
push
stc
mov
dec
sbbb
mov
mov
cmp
cld
or
pop
push
loopne
push
bound
dec
aad
dec
pusha
dec
cmc
or
xchg
into
lcall
jl
fisubrs
aas
daa
aaa
mov
loope
into
push
fisubrs
add
imul
jmp
or
cmp
int3
dec
push
int3
inc
push
xchg
test
cmpsl
pop
push
std
pop
sub
faddl
ja
icebp
push
cltd
push
mov
pop
cmp
pop
movsb
movsl
or
mov
jo
cmp
fisttps
pop
jbe
mov
inc
adc
jge
mov
daa
jl
cmpb
push
xchg
fiadds
push
imul
xchg
fbld
repz
dec
ficomps
push
xor
pop
sub
xor
clc
out
push
dec
jne
add
fidivs
inc
adc
sahf
loop
shrl
inc
data16
lock
lds
iret
mov
sahf
ja
jo
js
or
cmp
stos
nop
lods
push
js
or
test
pop
mov
andl
cmc
dec
inc
and
and
popa
test
mov
jle
aam
xor
imul
cld
mov
inc
lock
or
test
cmp
xacquire
adc
out
mov
cld
sbb
mov
pop
and
mov
into
insl
out
setge
sahf
push
pop
leave
cmp
test
popf
mov
mov
xchg
adc
mov
pop
pop
jno
loope
pop
cmc
push
or
mov
insb
adc
incb
jp
out
adc
jmp
insl
mov
cld
xor
lret
mov
jns
mov
adc
mov
ret
aam
data16
push
pop
pop
lea
clc
or
test
mov
jle
cwtl
sti
imul
mov
xor
dec
xchg
lds
sqrtps
aam
pop
mov
ret
cmp
sbb
or
and
mov
mov
mov
push
add
cmp
adc
pop
cmpsl
push
xchg
das
jmp
mov
imul
fcomps
cmc
out
pop
data16
cmp
cmp
int
lods
mov
icebp
sbb
add
mov
nop
mov
out
sub
mov
in
out
jo
decb
mov
jns
push
div
mov
jecxz
jg
pop
lods
test
xchg
pop
lahf
cmp
enter
adc
scas
sahf
sahf
iret
pop
das
lret
testl
mov
fnsave
xor
mov
pop
fildl
add
xor
popa
jbe
inc
add
jmp
dec
jp
adc
and
divb
sub
les
outsb
jmp
out
popa
add
pop
adc
sbb
dec
idivb
test
xchg
pop
xchg
repnz
push
adc
push
repz
and
lock
cmp
xchg
jno
addl
mov
loope
ds
lds
call
cltd
out
pop
and
movsb
fistps
inc
data16
xor
and
xlat
dec
pop
xchg
xchg
aad
int
mov
hlt
mov
mov
push
mov
ret
adc
add
ret
out
lret
mov
sarb
sti
cmp
add
add
mov
stc
fdivrl
outsl
loop
push
dec
xor
xchg
or
popf
inc
jg
cmp
mov
mov
cmp
outsl
xchg
orb
popa
mov
mov
in
ds
nop
mov
mov
mov
sbb
adc
fucomp
jmp
inc
fisttpll
cmc
fs
imul
aaa
stos
mov
push
repz
popa
loope
imul
test
mov
push
jo
repz
sub
aam
push
in
loopne
pop
insb
dec
push
in
xchg
js
adc
jle
mov
jl
ljmp
mov
test
pop
jge
cli
hlt
mov
movsb
and
cmp
stos
dec
aaa
dec
aaa
mov
and
loope
leave
pop
dec
push
mov
pop
pop
vpmacsww
sahf
cmp
jno
aad
mov
aam
or
dec
out
test
pushf
into
or
push
jno
imul
mov
push
loopne
dec
sahf
incl
inc
inc
daa
cltd
or
mov
ret
jb
xchg
imulb
imul
ficoml
push
ret
add
mov
cld
popf
repnz
call
pop
xchg
nop
sub
mov
mov
les
jge
lret
xchg
pop
movsl
or
call
fadd
std
adc
jle
lret
repnz
test
and
mov
insl
pop
mov
movsb
and
int
mov
stos
fsubrs
gs
out
and
ficoml
roll
fistps
jns
cmpsl
lds
sbb
adc
pop
pop
and
bound
test
and
adc
mov
inc
loop
into
pushf
inc
pushf
les
or
push
test
push
in
mov
fwait
push
lret
push
fwait
ja
pop
push
std
aam
testb
shll
and
jmp
scas
mov
dec
mov
inc
add
ss
xor
xor
pop
or
outsb
movsb
mov
filds
add
imul
out
inc
inc
sbbl
scas
push
cwtl
sbb
pop
jae
shll
pop
sbb
jne
dec
fdivs
pop
jmp
repnz
repz
dec
mov
loope
or
push
adc
dec
movsbl
repnz
imul
mov
dec
fmuls
fwait
inc
pop
xor
and
sbb
rclb
mov
loope
xchg
out
lcall
pop
sub
test
push
jns
mov
sbb
movb
out
movsl
sbb
pusha
xchg
and
jmp
jno
or
in
push
test
adc
mov
aaa
mov
pop
add
out
inc
lods
push
setnp
mov
add
inc
insl
cld
add
mov
push
mov
push
out
ret
insb
nop
call
jbe
jmp
xchg
mov
push
mov
dec
aaa
loop
and
jno
xor
call
les
fsubl
jae
dec
mov
inc
leave
clc
mov
out
in
ret
sbb
in
lods
xchg
jae
hlt
dec
push
aad
leave
jno
or
push
icebp
addl
repz
popf
jbe
jae
in
dec
stos
arpl
gs
sbb
push
cmpsl
repnz
out
push
ljmp
icebp
pop
mov
pop
pop
scas
test
cmp
lahf
xchg
mov
mov
jecxz
cs
or
sbb
lret
jne
and
xor
and
mov
out
xchg
hlt
dec
pop
lods
lcall
rcll
mov
aam
pop
shrl
mov
xor
cmc
adc
adc
or
lcall
out
cmp
cld
outsl
cmp
and
imul
mov
loope
sbb
jge
psrld
out
and
outsl
add
adc
xchg
jmp
aas
ss
fsubrs
mov
pop
jge
adc
loop
dec
lahf
lcall
push
mov
mov
mov
sub
mov
pop
es
jb
cwtl
into
bound
jl
cmpsl
shrl
adc
jbe
in
xor
addb
not
xchg
icebp
daa
enter
shll
sbb
ds
stos
jle
sub
shlb
lcall
jbe
into
pop
inc
mov
cld
mov
add
cmpsl
inc
cmp
push
xor
ss
sub
adc
xlat
push
mov
cmp
notb
push
aaa
pusha
push
mov
sahf
xor
aaa
or
cmp
pop
jae
mov
xchg
js
sbb
insb
enter
push
sbb
sbb
sub
or
pop
pop
jb
or
and
movb
loopne
xor
repnz
pop
repnz
xchg
into
and
jne
addr16
cmp
shlb
jle
mov
adc
jno
sbb
lcall
lahf
mov
inc
or
cmp
pop
and
cmovs
mov
aad
add
or
outsb
dec
stos
inc
stc
dec
mov
ret
aam
push
or
mov
inc
jb
or
lea
popaw
imul
mov
ret
popa
dec
mov
aad
pop
clc
shlb
inc
lods
or
cmp
fsubrl
out
enter
sub
lret
addr16
aad
mov
lahf
cli
sahf
aas
lret
sbb
sbb
lds
es
xor
xchg
in
out
add
fiaddl
frstor
ljmp
fldcw
cmpb
lock
lds
and
adc
inc
in
or
sub
push
cs
test
push
std
ret
fwait
aas
xchg
push
adc
ret
outsb
xchg
add
mov
sbb
loope
rcrb
xor
loopne
sbb
dec
sub
mov
orl
cmp
jmp
mov
cmp
add
mov
movl
inc
jp
rorb
inc
jno
std
mov
aaa
push
jo
jmp
push
int
shlb
cld
f2xm1
push
loope
sub
mov
xor
movsl
inc
addr16
mov
fists
sbb
mov
ja
fidivs
lds
jo
pushf
into
and
loopne
mov
sub
and
in
inc
das
xor
mov
cmp
mov
push
push
lds
clc
add
out
scas
or
sbb
jp
dec
or
das
push
xor
mov
inc
in
shll
sub
lret
cmpsb
cltd
pop
movsl
adc
lock
ss
enter
stos
pusha
in
xor
lods
sub
lock
push
mov
lea
fistps
outsl
push
push
arpl
jb
pop
jb
aad
jmp
jne
sar
adc
jne
inc
adc
jge
sub
xchg
dec
xlat
lock
outsl
test
add
or
jmp
ja
adc
icebp
insb
pop
test
sbb
add
adc
cmp
add
mov
gs
jge
push
sub
scas
adc
sbb
out
jmp
cmp
mov
cmc
cltd
mov
sbbb
cli
inc
push
fmul
adc
js
mov
or
jmp
testb
pop
xchg
pop
sbb
jno
jl
mov
test
inc
add
out
fildll
or
cmp
int
pop
or
adc
xor
lds
add
mov
outsl
xor
inc
imul
int
mov
js
ret
xor
cmp
pop
adc
ret
mov
rclb
and
ror
sbb
dec
xor
insl
push
lcall
inc
xor
mov
inc
movsb
xchg
loop
dec
xchg
or
lods
popf
pop
sbb
xchg
push
ds
bound
aas
sub
lea
icebp
daa
jp
sub
das
jge
jno
cmc
movsl
mov
dec
fdivp
movsl
test
ds
mov
orb
push
in
dec
add
mov
stc
push
addr16
ss
xor
push
divb
mov
push
and
in
mov
fsubs
mov
icebp
cli
mov
addl
test
sub
sub
pop
and
sbb
jle
ret
daa
test
out
cmp
cwtl
mov
sbb
into
cmp
pushf
fs
sbb
jb
pop
mov
lock
rcrb
rdmsr
lock
pop
rcrb
lahf
inc
dec
mov
sbbb
fs
pop
cmp
ljmp
mov
cwtl
test
xor
pop
addr16
jle
jns
roll
add
and
jno
jg
mov
xor
sub
inc
mov
xchg
call
in
inc
mov
test
aas
sbb
cwtl
or
pop
fdivrp
in
dec
jae
mov
addr16
mov
jae
xor
and
pop
xchg
fcomps
jp
mov
push
sub
jb
adc
jns
popf
sub
cmp
mov
fsts
clc
jle
fwait
mov
int3
dec
adc
popf
mov
test
mov
lcall
mov
dec
jge
push
fsubr
pop
push
mov
adc
cmp
sub
gs
jle
dec
adc
cmp
cmp
inc
sub
add
fsubs
and
fwait
adc
pop
fadd
inc
popf
jmp
push
pop
sahf
add
xor
and
inc
cmp
mov
fbstp
fs
cmp
pop
sub
dec
mov
imul
push
stos
test
shll
or
aad
xor
and
enter
mov
cwtl
int3
fbld
arpl
in
and
std
adc
insb
lret
stos
sub
mov
push
xor
xchg
std
jno
rcr
push
std
xor
stc
mov
jne
cmpsl
decb
je
in
ds
movsb
push
enter
xor
loop
xchg
xchg
movsl
mov
aas
gs
incb
fisttpll
arpl
xor
cs
push
add
lcall
es
lock
pop
and
inc
ljmp
out
cmp
lret
int3
bound
sti
shlb
mov
sbb
clc
xchg
adc
or
push
mov
ljmp
inc
cmpsl
fcompl
mov
cmp
push
push
push
stc
xchg
and
push
imul
sbb
cmp
adc
fnstsw
mov
add
pop
sarb
fnsave
imul
cmp
add
outsb
inc
insb
add
clc
sub
cmp
jns
ss
dec
lea
jns
pop
ja
lea
adc
scas
test
loope
sub
clc
neg
scas
sbb
rcrb
ljmp
mov
cmp
mov
in
xchg
add
adc
out
ja
movq
mov
push
add
inc
xor
pop
mov
xor
femms
jo
mov
jne
cli
push
jne
push
lahf
out
xor
imul
pusha
fnstcw
cmpsb
xchg
mov
push
and
lods
dec
dec
fisttps
and
adc
scas
dec
or
cltd
cwtl
fnstcw
jns
outsb
cmp
lods
cmpsb
rcrb
fisubs
cld
iret
scas
shrl
fs
loop
mov
lods
test
pusha
push
mov
sbb
stos
and
in
fnstcw
test
jg
jnp
adcl
and
div
mov
sahf
xorb
les
sub
out
inc
jp
pop
jne
mov
and
dec
repz
mov
xlat
pop
xor
stc
cmp
and
mov
cmp
push
in
xchg
cmpsb
sbb
push
movsb
insw
movsl
scas
in
adc
push
leave
loop
jo
mov
and
xchg
pushf
push
pop
mov
mov
mov
and
lahf
arpl
mov
in
subps
mov
push
push
cmp
loope
imul
cli
mov
stc
fildl
cmpsb
loop
shll
pushf
mov
aad
mov
pop
and
in
sub
pop
stos
fs
in
sub
or
loopne
in
inc
fs
mov
ret
cld
jge
jmp
sahf
gs
push
cmc
mov
sarb
leave
or
filds
fwait
popa
imull
cmpsl
dec
sub
gs
mov
out
mov
fsubrl
mov
pop
add
das
jge
loope
xor
push
movsb
ljmp
sti
or
xor
and
pop
pop
popa
stos
into
sub
into
cltd
or
rclb
pop
jnp
jne
mov
push
stc
pop
cmp
mov
inc
inc
int3
es
std
out
mov
and
jp
and
or
xchg
andb
gs
cmp
scas
imul
shrb
and
lds
pusha
cli
out
lock
lret
sti
das
xchg
sbb
cmp
jbe
test
hlt
inc
scas
dec
in
xchg
push
pop
push
out
push
sbb
in
mov
fs
es
test
lods
jns
dec
and
imul
mov
cmc
xorb
adc
and
mov
mov
xchg
sbb
ret
scas
or
and
pushf
xor
rolb
jbe
pop
push
fisubl
aam
mov
cmc
js
mov
outsb
fimuls
in
jns
and
lock
fsubrl
or
rcr
inc
jecxz
push
xchg
imul
xor
xlat
lods
nop
push
fbld
mov
inc
insb
outsl
pop
jbe
xchg
lahf
cmp
gs
xchg
out
add
ret
dec
enter
wrmsr
cmp
xchg
iret
addr16
mov
movsb
je
inc
mov
jg
loopne
adc
cmp
loope
jno
xor
loope
xchg
mov
ret
push
mov
int3
jne
je
sahf
sbb
mov
test
iret
clc
jbe
inc
repnz
or
fildl
inc
icebp
sbb
or
push
ja
cltd
lahf
int3
inc
jmp
int
mov
dec
mov
xor
sub
in
push
fwait
mov
enter
sub
bound
pushf
sbb
xchg
push
iret
leave
push
mov
push
je
shl
xchg
sbb
mov
test
pop
adc
test
stos
cld
jge
enter
outsl
addl
roll
sti
xchg
imul
arpl
and
mov
lock
or
pop
sub
bound
jmp
mov
insl
insl
icebp
mov
xchg
dec
mov
pop
dec
xor
push
aad
ljmp
ljmp
pop
out
inc
movsb
out
pop
fs
pop
jnp
test
cmp
dec
push
mov
xchg
jnp
repz
outsb
rcrl
push
xchg
icebp
mov
lock
cld
aam
nop
mov
test
addr16
shlb
sbb
sbb
fsts
xor
xchg
push
fdivs
out
bound
add
mov
nop
xorb
adc
and
test
lret
insl
xchg
movsb
inc
xor
repz
inc
out
test
or
add
mov
lods
add
pop
dec
into
nop
arpl
inc
add
fcoms
jbe
jno
mov
je
add
sti
lsl
rcrl
pop
add
out
imul
test
xor
cmp
jg
jmp
hlt
xchg
pop
movsb
js
pop
dec
sti
rdtsc
inc
jecxz
mull
imulb
js
pusha
in
je
and
or
xchg
ds
mov
mov
mov
icebp
push
notb
gs
hlt
push
mov
mov
push
pop
out
push
push
pop
call
xchg
sbb
test
cmp
pusha
or
ljmp
enter
inc
xchg
enter
hlt
ss
cmpsl
mov
jmp
pop
mov
int3
jb
add
cli
or
data16
jmp
push
pop
inc
push
sub
sub
fstpl
and
pusha
jg
ss
mov
pop
bound
cwtl
xchg
pop
xchg
ja
cmp
jecxz
mov
rorb
lcall
popf
push
fsubrs
ja
add
cwtl
ss
lcall
cmp
pop
lds
sbb
xchg
pop
xchg
popf
cmc
sub
test
push
jg
ja
fwait
mov
mov
ds
xor
lods
mov
cmp
dec
mov
mov
push
sbb
xor
addl
les
mov
fists
xchg
call
mov
inc
out
pop
loop
ds
lods
mov
cmp
cmp
mov
int3
vmptrst
push
negl
pusha
mov
out
xor
enter
cmp
jp
int3
mov
or
std
sbb
jns
push
dec
mov
jbe
pop
sub
sub
mov
das
js
in
pop
and
inc
rclb
dec
ss
adc
enter
mov
hlt
out
in
sbb
dec
movsl
mov
or
push
fldt
pop
lea
and
push
jecxz
std
pop
and
iret
cmp
loope
xchg
jno
popa
push
mov
mov
test
mov
fnstsw
repnz
das
push
sahf
stc
ja
flds
push
xor
push
fdiv
pop
ret
fs
mov
mov
cs
movsl
mov
or
movsb
inc
and
in
mov
or
je
shll
cmp
sbb
pop
js
fstl
jo
aaa
push
or
inc
call
pavgb
push
mov
adc
push
int3
mov
jmp
loopne
imul
popa
cld
and
in
repz
loopne
pushf
sbb
cmp
mov
andb
cli
jg
stos
xor
xor
add
push
leave
scas
mov
iret
lock
mov
pop
add
neg
jb
dec
cmp
xchg
das
pushl
inc
push
rcll
test
mov
mov
aam
out
arpl
scas
faddp
push
cli
fdivl
push
sbb
mov
mov
mov
andl
movsl
pop
in
call
mov
or
add
add
test
cld
shl
push
in
sbb
inc
mov
lods
sbb
jp
ds
jo
add
movsl
rorb
inc
popf
inc
insl
inc
sbb
jmp
inc
inc
ds
and
fisubs
push
std
xor
pop
or
jb
imul
insl
push
mov
mov
sahf
mov
arpl
sub
shrb
fmuls
fnsave
in
cmp
push
mov
leave
xorb
pop
ljmp
xchg
or
daa
insb
adc
xor
mov
xchg
cmpsl
aaa
cmpsl
inc
push
sbb
sbb
jae
xor
dec
cltd
into
pop
loope
stos
outsl
inc
mov
adc
ret
jp
bound
pop
adc
call
jp
out
in
jp
jno
or
xor
ljmp
cmp
mov
inc
sbb
inc
mov
lds
repnz
sub
loopne
pop
jb
xor
test
pop
loopne
mov
mov
rcl
ret
movsb
jecxz
repnz
in
popf
pushf
sbb
test
mov
or
jns
and
repnz
mov
cwtl
jg
dec
jp
xchg
xor
fwait
inc
add
jg
daa
mov
movsl
xor
cmp
icebp
out
adc
divb
or
fmuls
rorb
cltd
and
push
stos
aam
test
bound
pop
movsl
adc
mov
mov
sbb
and
cmpsl
mov
aaa
out
nop
mov
sbb
xlat
mov
mov
push
out
outsl
pop
stc
rcr
aas
dec
push
adc
add
cmpsl
dec
movsb
int
mov
in
idivb
icebp
jb
or
xchg
es
imul
jg
clc
sbb
mov
jle
push
or
cli
negb
mov
or
js
std
pop
push
inc
inc
aaa
push
and
aas
add
jns
lret
adc
jmp
inc
repz
push
jl
and
out
dec
sub
lahf
adc
outsl
mov
cmpsl
xor
les
jmp
dec
push
aad
out
pop
mov
mov
fld
add
stos
fwait
aas
xchg
pusha
add
cmp
shlb
arpl
or
loopne
fisttpl
add
popf
outsl
shlb
ljmp
out
add
fdivrs
ss
inc
pop
mov
or
stos
and
cmpb
inc
insb
mov
shrb
pop
out
xchg
mov
cmp
mov
mov
inc
into
addb
jae
addb
in
xchg
jo
sub
call
imul
arpl
mov
or
and
dec
inc
aad
mov
scas
test
repnz
imul
es
fwait
sbb
out
scas
sub
ss
lret
adc
ja
ljmp
repnz
add
sub
call
jmp
outsl
add
mov
dec
xor
and
add
dec
jmp
insb
and
divl
mov
sbb
loope
jb
pushf
mov
jecxz
pop
jno
addr16
mov
or
jbe
add
mov
cmp
adc
inc
js
pop
xchg
int
fdivp
pop
jne
jmp
mov
or
adc
jp
roll
inc
adc
and
sub
xor
es
add
mov
lahf
xorb
imul
fs
mov
jne
cmpsb
mov
fildl
add
inc
jno
insl
sti
into
sti
test
add
je
sub
xchg
sbb
sbb
sahf
inc
or
mov
xor
dec
mov
test
mov
fcoml
sti
mov
shl
mov
dec
lds
or
testl
enter
push
rcr
mov
push
leave
dec
cmp
fdivl
mov
xchg
sbb
sub
das
lods
mov
push
push
lret
mov
xchg
jnp
test
stos
leave
aas
or
sbb
mov
daa
gs
imul
xchg
mov
das
lods
inc
orb
int
jo
hlt
jnp
adc
mov
sbb
arpl
inc
dec
jne
test
fsubrs
push
scas
jmp
pop
push
push
mov
insl
clc
sbb
and
pop
and
imul
call
or
je
imul
push
inc
fsubr
sub
dec
inc
xchg
mov
mov
push
nop
hlt
imul
cli
test
xlat
shlb
or
lret
pop
sub
icebp
lods
fisttpll
xchg
cmp
adc
pop
lods
pop
mov
add
lret
fmull
xchg
push
sub
jl
xlat
stc
inc
out
cmpsb
sti
std
dec
pop
and
xchg
jge
pop
and
inc
mov
xlat
js
pop
and
or
fcomps
jg
push
rorl
cld
ret
movsl
imul
pop
std
and
in
mov
aaa
xor
mov
popf
add
pop
cmc
xor
aas
mov
and
push
mov
cli
mov
sbb
dec
cltd
push
or
jl
xchg
lock
push
out
inc
int
and
add
outsb
lret
pop
xchg
dec
lock
cmp
lahf
iret
inc
stc
fld
repnz
test
inc
mov
fs
loopne
inc
sbb
cld
dec
inc
test
popf
inc
jnp
sub
push
adc
lods
jge
pushf
shrb
xor
mov
push
insb
into
and
call
enter
cmp
xor
lcall
mov
and
mov
jno
mov
pop
xchg
lods
adc
adc
xorb
repnz
inc
movsl
and
pop
nop
rorl
dec
aaa
out
fisubs
xchg
fwait
andl
and
jle
add
push
cwtl
jo
inc
mov
jl
adc
inc
add
or
inc
cmpsb
dec
roll
or
pushl
stc
out
in
adc
jge
add
loope
mov
out
out
xorb
lds
insb
push
and
and
divl
sahf
clc
popf
cmp
inc
mov
adc
outsb
into
fwait
leave
dec
xor
pop
outsl
and
mov
hlt
push
mov
fsubrl
divps
test
movsl
popf
imul
lret
inc
sbb
inc
test
adc
inc
shr
and
ja
imul
sahf
fnsave
into
cld
xchg
pop
stc
dec
stos
insl
aam
xor
test
mov
push
xchg
loope
cmp
aas
or
test
vshufps
rcrb
fisttpl
loop
push
mov
cmp
fldt
jecxz
pop
rcrb
cmpl
out
push
pop
mov
sub
cmp
mov
push
push
pop
pop
inc
jmp
add
out
push
in
or
subb
es
push
xor
bound
imul
sbb
imul
jnp
jl
add
xchg
sbb
data16
fldl
cwtl
dec
push
lret
test
mov
in
bound
lds
fdiv
mov
dec
lods
xor
xchg
std
sarb
adc
mov
inc
repz
bound
movsl
lds
cmp
or
jae
flds
xchg
loope
push
xor
mov
push
aam
lahf
das
dec
mov
adc
sbb
and
cmp
or
movsl
subb
lds
add
popf
mov
sbb
xchg
push
xchg
es
call
cwtl
rolb
insb
sub
inc
mov
add
jmp
jne
sahf
es
rclb
lret
mov
psrlq
rcl
lahf
hlt
sbb
or
lods
call
aam
jl
movsl
pushf
cmc
push
jno
sub
pop
mov
rol
sub
mov
arpl
in
into
scas
lock
lret
in
leave
test
rorl
jmp
jge
sarl
pop
fidivl
mov
notl
push
pusha
mov
push
jae
mov
enter
mov
sbb
sbb
fsubrs
lock
jae
mov
xchg
add
adc
fsubr
fmul
jle
sbb
push
mov
xor
aad
ret
test
jbe
mov
stc
ret
cltd
ljmp
xor
sub
or
adc
sub
rorb
in
and
movsl
mov
xchg
fdivl
sbb
shl
mov
ss
aaa
cmp
or
bound
dec
movsb
fisttpl
orb
jnp
xor
lock
jl
dec
loopne
mov
mov
xchg
in
rorl
sbb
dec
imul
jge
scas
sbb
push
int
dec
ss
mov
lret
push
inc
ret
fisubrs
xor
gs
xor
je
ja
pop
lock
push
jp
adc
xlat
filds
mov
mov
push
aad
icebp
sti
jo
adc
push
lock
jne
pop
jg
lret
and
push
outsb
sahf
jne
push
pop
popf
fucomp
push
jg
loop
jp
mov
mov
mov
dec
leave
lahf
mov
hlt
or
insb
and
scas
push
dec
xchg
push
jp
sbb
fisubl
out
or
lahf
test
jg
shlb
adc
mov
mov
mov
gs
mov
popf
sti
dec
jp
icebp
fisubrl
cmpsl
cmpxchg
cld
cmp
cmp
mov
and
leave
in
pop
aad
lds
adc
push
movsb
jbe
jmp
or
adc
cmp
test
das
lahf
cwtl
adc
mov
and
jmp
cli
mov
jge
addr16
ficompl
pushf
test
enter
mov
pop
cmpb
mov
mov
or
xabort
inc
mov
xlat
push
xor
nop
inc
and
and
mov
test
test
mov
add
sub
repz
cs
je
xor
add
jne
dec
adc
push
sub
repnz
adc
arpl
mov
pusha
mov
cmpsb
andl
popa
sub
negb
notb
scas
cmpsl
xchg
out
scas
fsubs
ret
pop
out
mov
jl
dec
jmp
repnz
shll
aad
out
shll
stos
push
pop
dec
testl
cld
jecxz
int3
scas
movsl
cmp
roll
arpl
or
lcall
cld
sub
shrb
incb
cwtl
fs
cmpsl
mov
xlat
mov
inc
pop
or
adc
cmpsb
sbb
repz
xchg
inc
and
andb
into
xchg
xchg
in
xchg
into
ret
lahf
fs
movb
leave
mov
pop
rcrb
popf
inc
outsl
mov
jno
daa
jae
sub
inc
enter
scas
test
inc
shll
imul
out
xor
stc
mov
sbb
into
pusha
jmp
push
inc
sub
sub
jg
fdivl
test
xchg
push
xchg
cmp
xor
jo
pop
je
pop
imul
push
lcall
sbb
ss
mov
aad
rclb
into
xchg
pop
pusha
sub
roll
mov
inc
testb
jnp
xor
js
mov
push
aam
das
xor
fwait
in
ja
cld
scas
fisubrs
add
inc
jb
add
add
in
pop
insl
pop
jl
loope
pop
arpl
pusha
addr16
mov
aas
mov
nop
jb
loopne
add
and
aas
cmp
mov
fistpll
std
push
shrb
shll
test
dec
gs
aad
xchg
ficomps
outsl
dec
lods
and
adc
push
in
cmp
out
jg
es
stos
mov
mov
jle
lcall
pop
lret
pushf
arpl
jge
or
push
mov
cmp
and
stos
loop
xlat
or
sti
adc
mov
lds
gs
fcoml
addr16
mov
mov
ds
mov
cltd
xchg
negl
push
xchg
fs
push
hlt
sub
xchg
mov
push
in
rclb
mov
adc
xor
ljmp
adc
jecxz
fs
cld
ret
sub
test
mov
aas
ja
out
jno
jl
mov
les
movsl
insl
or
sbb
or
adc
mov
dec
ja
push
adc
pop
push
push
int3
and
vpshufhw
and
into
sbb
int
lea
fldcw
movsl
sub
orb
les
fstps
mov
out
mov
or
mov
sub
bound
dec
fbld
push
mov
pushf
cmpl
jg
mov
mov
fisubs
notl
out
mov
frstor
hlt
loope
adc
adc
pop
xchg
fstpl
inc
or
pop
adc
cmc
out
jno
mov
in
inc
mov
mov
sub
jb
cli
xor
je
sub
and
sbb
jns
jle
ds
int3
scas
mov
pop
mov
sbbl
adc
div
jg
or
push
pop
pushf
out
fucomi
pop
lret
movsl
push
push
fcompl
ds
push
mov
or
jb
enter
or
sbb
jp
sub
test
and
stc
cltd
aad
into
or
add
addl
negb
jno
adc
pop
fiadds
sbb
sbb
call
std
or
out
sub
test
lret
jb
push
imul
lods
aas
cmp
mov
pop
je
rol
mov
push
mov
mov
push
jnp
xchg
inc
add
and
jb
ffree
pop
fnsave
mov
clc
dec
cmpsl
enter
mov
dec
pop
test
pop
push
xchg
pop
pop
ljmp
add
pop
pushf
subl
push
stos
mov
cltd
dec
je
ret
ret
xchg
sub
sbb
mov
es
dec
jmp
js
cmp
dec
lds
jne
xchg
sbb
ret
aas
roll
jmp
popa
outsl
sti
inc
add
lret
pop
push
push
inc
fimuls
fadd
lea
in
push
xor
jmp
inc
add
mov
outsl
ja
adc
cmc
leave
jb
cli
arpl
or
out
fdivs
imul
and
mov
inc
mov
insl
test
cmp
sar
out
and
shll
daa
hlt
lea
stos
rolb
xchg
sub
xchg
mov
sbb
sub
dec
push
bound
stc
adc
cmp
imul
pop
xchg
push
xchg
divb
mov
pop
xchg
scas
outsb
aad
or
add
mov
fsubl
mov
cmp
pop
into
std
inc
fcoml
push
add
popf
je
fwait
pop
push
or
mov
mov
mov
popa
mov
insl
mov
mov
jle
ret
lds
sahf
popf
sbb
ja
stc
push
jno
mov
xchg
roll
call
sahf
lods
fisttpll
mov
pop
fwait
rcr
and
lock
cltd
dec
sarl
lea
imul
stos
add
xchg
and
xor
jecxz
and
cmpsl
dec
adc
jmp
int
pop
in
jle
jmp
push
mov
mov
sub
rol
adc
jecxz
aaa
ficompl
rcll
inc
pop
push
and
add
mov
mov
out
jae
mov
adc
cmpsl
pop
loope
xor
fsubrl
in
das
pop
sub
fcoml
and
or
and
mov
xchg
and
test
pusha
sbb
clc
xchg
out
mov
scas
negl
pusha
hlt
mov
inc
pop
mov
push
popf
xchg
inc
insl
cmp
mov
cld
push
jmp
adc
gs
and
popfw
ja
lock
xor
mov
iret
mov
xor
jnp
insl
popa
adc
in
jmp
or
rorl
or
add
ficoml
ljmp
imul
imul
xchg
or
lods
jecxz
sub
int3
fistl
inc
int
mov
dec
add
aad
lock
pop
add
mov
xor
sub
dec
dec
ss
test
mov
push
jnp
icebp
popa
xchg
ljmp
fistpll
lahf
inc
sbb
push
rcr
mov
inc
in
add
mov
adc
lcall
mov
xor
das
stos
push
dec
lea
pop
push
icebp
call
je
fsub
nop
add
lods
int3
push
cmp
dec
and
adcb
std
and
pusha
mov
ret
cs
adc
jnp
loopne
inc
daa
add
mov
inc
push
lock
daa
ljmp
fbstp
xchg
push
pop
jle
fdivp
loope
or
insl
mull
sbb
sbb
loop
or
sub
sub
cld
adc
in
inc
or
add
add
mov
mov
xor
mov
mov
xchg
adc
std
std
cs
in
and
lret
data16
adc
imul
mov
jg
out
pusha
mov
or
iret
icebp
repnz
add
shlb
call
xchg
nop
aad
nop
push
shl
push
inc
xor
pop
pop
movsl
sar
call
scas
push
sahf
dec
inc
xchg
xchg
cmp
pop
and
push
xchg
addb
mov
pop
dec
dec
int
pop
pop
push
inc
scas
push
sbb
bound
ss
test
cld
mov
sbb
dec
xchg
and
test
cs
dec
cmp
pop
punpckhbw
jns
xchg
ficompl
lods
sbb
sub
sbb
inc
mov
sub
std
out
insl
stos
ljmp
adc
cmp
jo
cmc
dec
outsl
loope
clc
dec
mov
cltd
movsl
lods
pusha
xchg
jmp
adc
and
enter
mov
pop
xchg
out
cwtl
or
jb
lahf
pop
popa
jg
mov
push
mov
fdivs
lahf
mov
push
ljmp
and
xchg
mov
lock
cs
push
fcmovbe
or
clc
hlt
sub
push
push
hlt
mov
je
rorl
jno
out
sbb
cwtl
mov
fildll
mov
lahf
xchg
push
ja
jge
or
pop
lea
inc
orb
rorl
xor
inc
jo
mov
mov
dec
cmp
ljmpw
xchg
xor
jge
pop
bound
pop
cs
rol
out
bound
mov
cmp
rolb
mov
aam
jbe
cmpps
ljmp
sti
pushf
les
in
movzwl
rcr
bound
mov
sub
stos
cld
ret
outsl
and
push
pop
xor
lret
push
lock
inc
sub
das
aam
cmc
cmp
dec
push
fs
cwtl
add
insl
xchg
pop
aaa
into
loopne
fsub
into
jle
scas
push
scas
mov
dec
dec
inc
cmc
and
rcl
and
pop
rcrb
aad
xchg
gs
sub
sti
mov
inc
sbb
push
clc
jg
call
push
out
jl
mov
cmc
xor
fstps
jno
inc
sub
push
stos
pop
sbbl
cltd
inc
negl
cmpsl
ja
repz
mov
inc
loop
pxor
test
gs
sub
pop
adc
mov
xor
repz
hlt
push
and
pop
hlt
add
imul
int3
daa
mov
ss
lcall
int
repz
cli
inc
js
jge
shlb
and
dec
repz
push
jns
xor
push
or
inc
cmp
and
pusha
dec
xchg
arpl
cltd
pop
jnp
sbb
and
xchg
les
scas
out
pop
fcoml
sbbl
dec
adc
sbb
and
movsw
xchg
faddl
mov
loopne
test
xchg
jne
xlat
pop
dec
mov
int3
jo
in
lcall
bound
dec
test
push
je
jge
jecxz
mov
inc
inc
sbb
and
mov
cltd
fnstenv
fdivrp
das
jl
mov
loope
sub
popa
cmp
mov
inc
add
mov
rcrl
ja
xchg
test
outsb
push
cmovp
mov
dec
pop
sti
clc
test
xor
xchg
test
mov
cmp
inc
ret
pop
inc
jo
xor
xchg
xchg
mov
rcrl
mov
loope
mov
cmc
imul
push
jo
cmp
pushl
sti
mov
adc
or
sbb
ret
repnz
xchg
leave
or
jnp
sti
mov
inc
xchg
neg
pop
or
jg
fnsave
in
fdivl
mov
testl
fdivr
and
xchg
sbb
lret
sub
inc
and
pop
in
jp
popf
dec
jns
insb
jb
jg
push
push
repnz
scas
repnz
xlat
dec
outsb
xchg
inc
push
dec
ss
dec
mov
dec
lret
and
and
repnz
xor
fcomip
setb
cs
mov
out
xchg
fdivr
or
aas
adcb
out
in
ss
mov
lret
sub
mov
ss
shl
push
sbb
push
mov
ficomps
xchg
aam
shll
inc
pop
fldenv
mov
lret
push
ret
xchg
mov
out
push
sbbl
jb
test
jnp
cwtl
push
lcall
cmc
dec
pop
push
cld
xchg
xchg
jne
mov
ljmp
mov
loop
jae
leave
sbb
addb
pop
andl
jnp
mov
mov
repz
arpl
sub
andb
je
xchg
mov
negl
adc
pop
xor
dec
das
daa
sbb
pop
or
xor
push
rcrl
inc
adc
cmp
push
call
push
adc
push
outsl
lcall
mov
ret
je
pushf
sbb
int
jp
inc
inc
scas
push
pusha
addr16
push
push
xchg
int
and
std
add
aaa
ss
mov
inc
inc
jo
test
push
and
lds
and
xchg
fnsave
and
mov
jmp
push
icebp
outsl
cmp
int
cmp
pop
mov
call
pop
and
stos
test
ret
inc
or
sbb
mov
mov
or
xchg
xor
xchg
xchg
fadd
mov
sbb
loope
and
add
sub
out
dec
mov
imul
xchg
and
and
shlb
inc
mov
js
icebp
sbb
dec
pop
imul
inc
jbe
call
aam
es
mov
xor
imul
loopne
addb
test
cld
sub
fsubrl
or
test
fdivrl
cwtl
call
ret
pop
mov
aad
lock
cwtl
mov
subb
sbb
add
inc
cmp
push
jno
mov
sahf
jnp
jnp
scas
jge
jne
mov
ret
in
mov
hlt
push
xorl
add
fchs
or
jg
xor
mov
movsb
sbb
or
out
mov
mov
sub
push
fwait
mov
jb
fldt
adc
cmp
mov
mov
imul
push
pop
pop
mov
loop
sub
push
jno
cli
mov
mov
and
cmc
dec
aas
in
lock
insb
shlb
pop
sub
ret
icebp
fisttpll
pop
jmp
dec
push
jo
cld
dec
lds
cltd
or
lods
arpl
js
fnstsw
or
std
arpl
pop
mov
dec
inc
xchg
inc
and
lret
push
lods
jge
in
sub
aaa
hlt
lds
xchg
bound
incl
sbbb
push
rol
sbb
sbb
fdivrs
dec
and
call
adc
xchg
stos
repz
test
fistps
inc
test
out
xchg
xor
pop
enter
inc
int3
mov
xchg
roll
mov
jp
fdivl
out
jno
jge
jl
rcrl
mov
stos
inc
push
arpl
fcmovnb
das
es
cltd
mov
test
imul
xor
data16
test
and
aaa
cltd
cmpsb
mov
inc
int3
out
sub
dec
incl
jge
inc
rep
push
inc
data16
sub
mov
pop
xchg
xor
in
or
sti
jl
ss
stos
push
lcall
insb
xchg
iret
bound
lret
test
xor
cmp
pcmpgtb
sbb
mov
jnp
cld
mov
jge
xor
jo
xor
push
notl
mov
sub
or
es
testb
popa
das
dec
inc
mov
rcrl
inc
nop
jne
int
out
shl
jb
xor
add
ss
fistps
arpl
adc
shr
or
mov
popf
lods
xchg
test
dec
cs
mov
leave
jne
pmaxsw
ljmp
pop
out
cmp
js
loop
push
aas
cmpb
cli
sub
or
mov
xor
leave
mov
enter
jge
in
enter
mov
mov
insb
pop
jg
pusha
jmp
pusha
jae
jb
add
lret
inc
loope
addl
jae
in
inc
cmc
ja
and
sbbb
rcrb
mov
mov
xor
cmpsb
mov
cld
sbb
outsb
and
mov
daa
out
push
dec
rolb
jno
cmpsl
lock
inc
xchg
test
mov
push
outsl
enter
pop
pop
sahf
pop
adc
add
les
mov
mov
repz
adc
rorl
mov
mov
das
xor
jno
ljmp
js
push
daa
push
out
xchg
mov
jl
scas
outsb
rcll
rclb
cmp
add
inc
rcrb
add
push
pop
stos
in
push
cltd
push
dec
cmp
push
shl
jmp
and
dec
push
cmp
in
sbb
sub
ds
in
pop
cli
xlat
js
xchg
jne
shr
xchg
cmpsl
enter
lcall
adcl
shrb
mov
int3
imul
mov
sub
enter
lret
sub
adc
mov
les
ret
fnstenv
cmp
jge
sbb
dec
or
into
mov
outsb
pop
aas
mov
imul
add
xchg
lcall
push
ficomps
in
fstpl
insl
sub
add
addb
scas
xchg
jge
pop
pop
mov
pusha
adcl
gs
ja
rcll
ja
popa
pop
lret
sub
loopne
lods
jg
xor
dec
es
jnp
movsl
push
dec
cli
jae
addr16
xor
inc
scas
out
insl
pop
and
pop
pop
cwtl
insl
jno
fldcw
daa
pusha
sbb
cmp
add
enter
orb
mov
jmp
pop
imul
movsl
mov
jp
test
or
fisubs
xor
lods
stc
insl
mov
jo
dec
or
fs
cmc
cmp
scas
stos
mov
lock
rclb
lahf
push
ja
dec
or
sub
stos
dec
stos
cmp
movq
mov
enter
inc
mov
pop
mov
pusha
mov
sub
sub
mov
xchg
js
mov
ret
add
xor
xor
test
adc
mov
rorb
mov
test
push
scas
fxch
adcb
push
mov
lret
aaa
xor
stc
aad
jmp
jl
cmp
ljmp
mov
cld
aaa
and
jmp
sub
cmp
push
loope
movsb
push
dec
mov
adc
jg
and
negb
andl
push
xorl
mov
cmpsb
pop
mov
lret
sbb
lods
lods
push
push
sub
push
lahf
inc
push
sbb
lds
loope
scas
call
es
jmp
pop
iret
gs
dec
sub
add
clc
jae,pt
jbe,pt
xchg
sub
movsb
sub
std
mov
ficomps
push
repnz
xchg
testl
mov
push
sbb
into
movsb
mov
or
js
popf
test
sbb
mov
pop
outsb
inc
jge
mov
mov
pop
in
addl
adc
ja
pop
lods
cmp
jge
into
negb
je
outsb
add
stos
dec
mov
orl
pop
sbb
xchg
lahf
sbb
popl
pop
dec
and
xor
loopne
ret
insb
sub
sub
stos
cmp
push
ja
push
or
insl
adc
data16
push
lock
add
mov
xchg
jb
jmp
or
jmp
stos
cmp
scas
jnp
dec
out
repz
insb
movsl
sub
idiv
and
addr16
add
dec
test
mov
loop
add
sti
pushl
loopne
and
jo
mov
fldl
fisubs
sub
xor
xor
dec
push
add
cltd
test
int3
pop
orb
cmpb
mov
xor
pop
mov
dec
xor
mov
mov
ret
stos
scas
cmp
or
jmp
aaa
xor
repz
stos
pop
cmp
cmp
jle
lods
int
mulb
xlat
jne
dec
sbb
inc
pop
pop
and
sbb
push
mov
pop
and
or
inc
cmpsl
lea
push
lods
pop
inc
xchg
jnp
pop
movsl
jp
lea
xchg
mov
ret
sub
out
test
add
stos
lods
andl
dec
mov
or
arpl
xchg
mov
imul
mov
jecxz
test
mov
pop
loop
out
jno
and
imul
pusha
inc
lcall
push
mov
mov
sub
lahf
inc
dec
outsb
jecxz
andb
sub
sbb
fcmovbe
adc
outsl
cld
push
icebp
arpl
pop
ret
push
xchg
out
scas
and
aam
dec
pop
pop
mov
fs
jbe
pushf
lods
sub
dec
out
mov
outsb
add
and
sbb
inc
scas
fcompl
scas
push
jbe
cli
ds
inc
fmulp
xor
addb
and
mov
mov
or
jmp
dec
xchg
mov
jns
push
sub
jge
sarl
stos
mov
push
jmp
je
divl
unpcklps
pusha
outsl
lret
jb
cli
fildl
mov
xor
mov
out
repz
sbb
rcr
cwtl
mov
xor
lds
stos
lock
popf
mov
add
mov
call
or
insl
jge
and
cmp
sbb
clc
xor
bnd
out
mov
dec
ja
leave
sub
stos
repnz
test
ret
or
aad
repnz
cmp
pop
push
mov
lods
add
push
loope
mov
les
divb
in
out
cmp
jnp
mov
mov
test
std
push
call
push
mov
push
dec
jnp
lret
push
shrb
addr16
out
mov
repnz
outsb
sub
pop
cmpsl
xchg
dec
ss
mov
sub
dec
xchg
outsb
das
cmp
sbb
gs
ljmp
sbb
pop
or
cs
xchg
fst
inc
push
inc
pusha
cmp
jge
scas
xor
imul
and
scas
mov
push
or
push
ljmp
fidivs
dec
bound
pop
fstl
in
jno
out
mov
out
pop
call
ljmp
cli
rorl
or
sub
mov
push
xor
paddd
sbb
add
xor
mov
dec
xor
xor
jle
push
into
cs
repz
lock
enter
bound
outsl
test
inc
negb
aad
ja
rep
ja
or
icebp
cmp
push
sbb
sbb
sub
adc
and
out
ja
scas
fcmovu
lea
xchg
adc
sbb
push
sub
xor
inc
fisttpll
jne
jno
add
adc
into
mov
pop
push
mov
gs
rcrl
sub
shll
or
adc
in
out
insl
xchg
les
sub
jecxz
jg
ja
jg
mov
and
push
push
jae
sbb
add
push
in
cmp
mov
pop
adc
pop
jno
pop
imul
push
js
adcb
mov
les
mov
xchg
cmpsb
adcl
lea
sbb
mov
jge
repnz
dec
aam
cs
jmp
mov
push
insb
inc
mov
or
fcmovnb
or
mov
add
adc
sub
pop
popa
pop
movsb
testb
insb
fiaddl
repnz
and
sbb
mov
dec
sti
inc
mov
cmc
js
js
dec
xlat
xor
das
adc
adc
mov
pop
rorl
lcall
into
testb
enter
int3
xchg
xlat
addl
sub
gs
dec
cld
subps
push
add
sub
sub
cli
inc
add
idivb
je
mov
mov
push
out
ret
push
jae
pop
sbb
or
cmp
push
ljmp
jns
ja
jmp
aaa
popa
out
mov
jns
loope
xchg
fcompl
out
mov
loope
cmp
inc
dec
loopne
je
pop
xor
into
es
sub
cli
cltd
xor
dec
insb
fistpl
in
xor
pop
pop
imul
pusha
add
std
mov
cs
xchg
stos
movsl
sbb
push
jp
sub
fidivrs
fstl
mov
push
pop
mov
jo
popf
xor
mov
or
dec
mov
xor
and
and
xor
mov
xlat
popf
clc
cmc
jmp
cli
les
push
jb
sbb
dec
sbb
mov
std
or
pop
cwtl
es
sbb
sub
and
push
out
rol
jno
dec
stos
out
in
inc
push
xchg
repz
lock
shl
mov
and
int3
test
push
inc
xchg
fldl
mov
sbb
mov
pop
je
pushf
enter
scas
and
cmp
and
dec
push
adc
cs
scas
inc
xchg
int3
popa
in
sub
xchg
add
in
arpl
scas
xchg
loope
add
inc
je
ss
stos
fistl
and
lahf
sbb
lret
mov
imul
adc
pop
scas
mov
jle
pushf
sbb
je
xchg
leave
pop
jmp
jnp
call
sbb
shlb
dec
gs
ret
in
add
int3
outsb
test
cmpsb
sub
loope
adc
cmp
mull
push
clc
fnstsw
and
jmp
push
in
mov
rclb
sbbl
out
jo
push
nop
out
and
dec
push
idivl
rcll
pop
cld
sbb
jecxz
xchg
add
pop
orl
aas
and
or
dec
pop
mov
in
xor
cmp
fdivr
movsb
shlb
adc
rorb
push
les
out
les
dec
cmc
or
inc
std
setle
lcall
imul
xor
mov
sahf
dec
jl
enter
jecxz
xchg
push
popf
bound
dec
mov
sbb
mov
cmp
in
mov
sar
push
push
jb
sbb
mov
pop
pop
and
ja
out
daa
xor
sbb
dec
stc
mov
sub
lock
and
jge
bound
addr16
jg
sarb
lods
pop
dec
clc
or
fbld
aam
stos
out
jno
mov
outsl
iret
dec
leave
jp,pn
jge
inc
fdivr
adc
lret
popa
outsl
lcall
out
add
inc
les
es
sbb
mov
cmp
pop
clc
test
cld
xlat
mov
add
pop
mov
pop
imul
sub
movsb
das
insl
jb
sti
pop
dec
or
aas
cmp
das
call
jge
inc
mov
add
into
adc
jp
or
sti
mov
outsb
mov
pop
test
shlb
iret
jle
mov
jne
push
aad
sbb
push
fdivrl
in
adc
xchg
inc
hlt
jo
dec
scas
popf
imul
cmp
gs
push
stos
push
clc
dec
out
push
popa
dec
call
cmc
xchg
lret
pop
push
push
add
aad
mov
sbb
sub
aad
aam
lahf
insb
sub
or
sub
aad
ret
out
outsb
out
loope
std
js
and
insl
cmp
sub
xor
pop
sbb
sub
movsb
push
fmul
cld
xchg
cld
mov
pop
mov
test
mov
bound
mov
idiv
enter
pop
mov
mov
cld
inc
inc
xor
daa
addr16
andl
xchg
mov
lods
ret
inc
jno
pop
icebp
add
jp
clc
push
and
jle
jp
or
cltd
es
das
pop
ret
addl
sbbl
dec
add
sub
ja
movsb
mov
mov
add
xchg
adc
in
push
andb
fdivs
sbb
xchg
aaa
test
je
test
mov
mov
sarl
xor
push
cmp
or
mov
fcomps
mov
push
cli
sbb
inc
loope
add
add
mov
mov
xchg
aaa
mov
sbb
cmpsb
scas
pop
addr16
loop
arpl
push
jbe
inc
out
frstor
stos
mov
xchg
pop
orl
in
mov
push
lcall
int3
inc
inc
cmp
int
xor
lock
and
lret
and
jg
sbb
lret
fucomi
ljmp
scas
sub
xchg
mov
sbb
and
mov
mov
or
add
into
fimull
inc
mov
lret
std
xor
bound
jne
inc
gs
insl
xchg
dec
adc
mov
mov
push
pop
jge
adc
sub
xchg
test
inc
mov
sbb
cltd
push
fsubl
pushf
stc
add
add
xor
lea
cld
lret
movsb
stc
inc
sbb
ja
popf
movsl
push
mov
cmp
fistpll
pop
and
jb
ss
pop
sbb
push
fbstp
and
mov
pop
cmpsb
inc
adc
lea
lods
mov
cmp
out
lret
add
sbb
leave
jge
inc
out
add
fwait
loopne
pop
lahf
pusha
in
shlb
pusha
aad
mov
sbb
pop
jge
mov
jne
ret
push
mov
pop
fwait
jmp
lret
mov
xchg
sub
ljmp
orl
lods
aam
sub
icebp
sub
jno
icebp
mov
nop
and
ret
pop
mov
cmp
push
xor
cmp
gs
jecxz
in
in
dec
pusha
test
rcr
push
pop
push
jae
repz
test
fistpll
ret
or
cmp
movsl
jge
adc
xchg
sbb
adc
xor
stos
cwtl
aam
notb
inc
fsubrp
dec
pop
mov
sahf
xlat
add
xorl
adcb
jecxz
aad
and
je
jnp
pop
shrl
push
add
or
aaa
add
mov
push
push
mov
jmp
std
add
mov
iret
sub
adc
jo
out
imul
jae
adc
aam
push
jbe
cwtl
repz
scas
cli
jns
mov
shll
or
int3
fimull
in
mov
dec
repz
shll
and
push
ss
and
push
cmc
adc
test
push
jp
clc
add
cltd
fisubl
push
xchg
subb
test
hlt
gs
ja
xor
lret
or
jae
xor
jb
push
call
repnz
fmuls
xor
cwtl
testb
sub
jp
fimull
pop
int
pop
dec
add
dec
pop
rcrl
pushf
sbb
rorl
sub
push
mov
stc
mov
cli
mov
fsubrl
mov
addr16
lret
addb
mov
pop
adc
jmp
inc
add
mov
push
inc
jo
aad
insl
push
cld
pop
mov
sarl
push
mov
cli
mov
push
mov
ret
xchg
shrl
push
mov
std
sub
rclb
sbb
incl
aaa
add
jmp
leave
jmp
mov
jns
dec
cmpsb
addr16
and
imul
jg
jl
sahf
dec
pop
popf
ret
fs
inc
inc
cmp
pop
test
cmp
adc
push
inc
mov
arpl
ss
sahf
dec
addl
je
mov
pop
mov
frstor
sahf
push
and
out
js
xor
xor
in
xchg
sub
push
sahf
push
out
out
mov
or
test
lods
ja
mov
scas
rorb
sub
dec
das
inc
outsl
icebp
and
mov
cmpsl
jne
add
in
sbb
mov
fstl
out
mov
adc
pop
cmc
dec
xlat
sbb
arpl
in
sbb
jp
lds
jae
cmp
sarb
and
insb
dec
fnstsw
sub
and
mov
lret
cmpsb
pop
and
cmpb
pop
dec
mov
shll
incl
faddp
bound
jno
xor
lea
mov
test
pop
or
aad
popa
fidivs
dec
xor
inc
sub
fstl
in
fstl
test
fsubrl
clc
imul
cmp
xchg
mov
cld
call
sti
pop
mov
bound
push
xor
pop
xor
call
frstor
hlt
inc
out
jl
out
push
repnz
fisubs
mov
ss
adcl
frstor
es
jg
daa
inc
add
cli
pop
mov
cs
pop
cmc
and
andl
fimull
sub
outsb
dec
fsubrl
outsb
or
or
ret
jp
leave
xor
mov
das
and
xchg
sub
clc
xchg
add
repz
test
jnp
dec
test
mov
iret
je
aam
int
mov
jecxz
dec
out
fnsave
xor
ja
in
pop
in
es
push
shl
xchg
shll
aaa
dec
add
mov
xchg
in
push
repz
cmp
mov
cmp
inc
daa
and
jo
mov
xor
in
movsl
jne
and
loopne
addr16
mov
sti
pop
mov
adc
cmp
inc
into
mov
or
mov
test
leave
popa
lea
out
or
or
imul
sbb
adc
imul
loope
mov
scas
jo
or
ja
rol
je
pop
mov
add
addr16
mov
sub
xor
lret
pop
clc
jmp
mov
and
mov
mov
aad
in
xchg
cmc
inc
pop
jnp
pop
lds
push
ret
in
or
imul
shlb
call
lock
nop
lods
or
mov
sub
jae
outsl
jb
pop
sub
xchg
in
repnz
arpl
addr16
cmp
outsb
xchg
add
loopne
and
clc
fmul
adc
pop
fwait
dec
scas
aaa
popa
sbb
je
movsl
cmpl
pop
cld
xor
pop
fbld
pop
fcoms
mov
hlt
je
mov
inc
dec
jo
loopne
xchg
andb
outsb
sarl
rcll
fdivrl
jo
sbb
pop
outsl
xchg
imul
push
push
and
sub
call
jmp
add
in
pop
in
mov
sbb
mov
cmp
xchg
test
dec
inc
lcall
mov
xlat
cld
outsb
mov
inc
lret
stos
jns
push
sbb
mov
push
add
pop
dec
outsb
jp
ret
inc
pop
add
gs
xchg
icebp
add
pop
test
adc
mov
xchg
in
mov
dec
js
lahf
sub
cmp
gs
imul
push
or
dec
jbe
test
aaa
pop
xor
cmp
mov
cmp
push
leave
repz
les
popf
inc
mov
jbe
popa
decb
and
lock
orb
daa
and
push
fists
mov
pusha
in
push
dec
pop
xor
rcrl
nop
imul
aad
popf
push
loop
sahf
data16
jmp
lcall
mov
xchg
jg
mov
mov
roll
pop
jge
or
popf
xlat
adc
jecxz
mov
pop
mov
imul
out
cmpsb
popa
dec
sbb
fisttps
xchg
cmpsl
test
mov
in
movsb
mov
mov
inc
sbbb
or
aad
rcll
aad
inc
pop
out
pop
ljmp
movsl
mov
ja
adc
xor
pusha
add
stos
movsb
sbb
adc
mov
push
xchg
outsb
ljmp
inc
inc
and
xlat
inc
xor
pop
inc
push
mov
jne
cmp
push
jnp
popf
jge
cmc
loope
mov
scas
sbb
push
and
stos
pusha
sbb
sbb
jbe
mov
sub
push
jo
xchg
aam
insb
and
ret
rol
mov
dec
inc
sub
adc
jns
mov
jg
cmpb
mov
das
mov
jge
lret
shrb
test
mov
ficoml
lcall
mov
inc
fcoml
in
aas
jmp
mov
dec
fildl
push
scas
jecxz
insb
and
or
or
fcomps
cmp
jmp
push
mov
fimuls
sbb
pop
scas
sub
xchg
inc
inc
scas
push
cld
and
inc
loope
call
dec
dec
cmp
addr16
pop
test
cmpsb
push
sbb
jno
loopne
gs
stc
dec
cmp
mov
mov
sbb
dec
loopne
cli
lods
inc
clc
sub
enter
or
inc
xor
test
ret
hlt
in
in
or
add
cmp
or
sbb
cwtl
stc
dec
inc
clc
lret
into
lds
loope
ja
in
std
mov
insl
out
adc
test
inc
and
les
jnp
inc
push
bound
shrb
insb
lock
xchg
adc
mov
lock
sub
add
test
lahf
mov
popa
push
fisttpll
mov
adc
clc
dec
cs
fldt
add
mov
push
dec
sahf
movsb
mov
outsb
imul
lcall
daa
mov
xchg
push
fildl
sbb
out
adc
sti
pop
jne
jmp
hlt
je
hlt
push
out
dec
push
and
cmp
in
jae
ror
and
jge
int
adc
movsb
adc
fistps
icebp
mov
and
outsb
lcall
cwtl
push
cwtl
rcrl
in
pop
adc
setge
jne
and
cmpl
fbld
ret
movsb
fcompl
mov
movsb
cmc
dec
mov
repz
fidivrs
push
pusha
test
and
xor
lcall
xchg
cli
jnp
sbbb
jp
movl
lcall
dec
and
and
ret
repnz
pop
rcll
xchg
int
sub
leave
inc
inc
xor
pop
addr16
xchg
rcrb
mov
mov
shrb
test
outsb
mov
stos
out
movsl
push
lahf
rorl
rcrb
add
js
movsb
sbb
dec
rcrl
add
mov
daa
mov
mov
in
lock
je
es
push
ret
rorl
in
or
fists
or
and
out
add
imul
dec
jl
xchg
xchg
loop
jge
jge
movsb
adc
push
sub
mov
lcall
pop
arpl
or
fwait
sbb
mov
orb
ja
inc
jae
inc
cmc
ret
jo
mov
xchg
pop
cltd
mov
or
test
cmp
ret
mov
imull
mov
dec
imul
dec
mov
sbb
mov
mov
lock
insb
and
inc
xorl
aam
xor
pop
xor
cmp
scas
cli
sahf
out
push
adcl
hlt
mov
xchg
testb
cmp
repz
mov
outsb
movsl
xchg
jnp
xchg
mov
or
into
or
leave
int3
mov
mov
push
aas
push
sti
pop
mov
clc
lahf
loopne
cmp
push
xchg
inc
mov
stos
fcoml
mov
dec
push
enter
loope
popf
inc
je
xchg
xchg
xor
dec
insl
ret
pusha
int3
cli
mov
inc
pop
jp
inc
scas
push
repz
cmpsl
mov
mov
movsb
popf
sub
jge
in
push
shlb
imul
jl
pop
inc
cmp
test
mov
ss
or
es
jb
ficompl
push
push
jb
sub
push
pop
jp
inc
mov
call
aaa
sbbb
mov
insb
idivl
fsubs
xchg
cltd
fcoms
inc
mov
jmp
jp
or
lahf
repnz
nop
sbb
nop
arpl
stos
xchg
jg
and
loopne
movsl
or
pushf
mov
cmpsb
xchg
mov
inc
ja
cmpsb
adc
daa
inc
cmc
pop
fistpll
mov
ss
imul
push
insb
loop
fs
sbb
movsl
xor
test
lods
inc
mov
fmuls
mov
mov
jmp
stc
ljmp
pop
push
ljmp
mov
outsl
mov
xor
dec
std
or
sbbb
clc
popf
sbb
call
orl
pop
nop
lahf
outsl
dec
jae
or
add
cmp
lods
cmpsb
lret
dec
inc
movsb
mov
or
cltd
sbb
call
in
xchg
rclb
and
cmpsb
mov
dec
mov
xor
push
mov
mov
adc
lret
les
fs
mov
sbb
call
pop
fstl
pusha
pop
outsb
sub
in
rclb
jl
aad
mov
jo
push
pop
push
adc
jns
les
mov
push
or
adc
pop
lods
cs
aas
or
mov
stos
mov
mov
nop
jns
mov
cmc
xor
mov
or
int
mov
cmp
xor
push
mov
pop
mov
inc
movsl
xlat
lahf
inc
insb
lods
sbb
inc
or
and
jp
jecxz
mov
pushf
push
and
xchg
adc
call
jp
mov
push
pusha
jl
mov
cwtl
pop
aad
lcall
out
sarb
inc
and
pushf
test
or
mov
insb
cmc
sub
xor
jb
jmp
mov
stos
sbb
lds
in
shll
mov
xor
into
inc
xor
outsb
es
ret
cmp
xchg
sub
fdivs
std
pop
xchg
inc
pop
popf
cli
cmp
lods
mov
cld
and
lcall
xchg
aas
pop
imul
xchg
inc
cmpsb
lsl
imul
xchg
fstpt
adc
daa
xchg
outsl
mov
adc
cmp
inc
jb
xor
lcall
repz
add
inc
dec
or
jno
outsl
dec
fst
nop
mov
inc
sar
add
filds
dec
add
icebp
incl
cwtl
adc
mov
xchg
aaa
and
xchg
sub
sbb
sahf
stos
outsb
lahf
sbb
push
ret
cltd
int
ds
cmpb
fwait
leave
or
out
jb
mov
addr16
dec
push
rorb
adc
nop
push
pop
loop
out
stos
cmp
push
test
enter
sbb
js
ja
imul
xor
inc
fs
lock
dec
inc
lret
insl
sbb
test
adc
xor
jns
jo
pop
ljmp
cmpsb
lret
rorl
adc
movsb
stos
out
lods
push
jmp
adc
jg
mov
stos
imul
pop
pop
or
inc
xchg
cmp
jmp
fprem
sbb
mov
aaa
iret
xor
xchg
lock
imul
pop
jno
fildll
xchg
in
mov
negl
pop
push
and
fsubs
out
bound
mov
sti
ja
jmp
push
lods
mov
mov
mov
push
fidivs
dec
clc
adc
ja
push
shl
mov
sub
mov
add
push
pop
push
pop
test
sarb
aam
dec
dec
pop
clc
pop
in
push
iret
xchg
mov
les
adc
insb
mov
cmpsb
aas
adc
mov
add
jo
addb
mov
push
popa
cs
aam
enter
cmp
pop
jbe
shrb
scas
pop
push
inc
and
jmp
xor
jecxz
mov
inc
iret
xchg
sub
mov
out
add
scas
mov
adc
add
xor
imul
and
jp
add
xchg
and
inc
add
int
out
mov
rcrb
jne
scas
pop
xchg
imul
xor
das
je
stos
cmp
add
sub
test
jne
mov
push
push
push
movsl
add
mov
push
mov
sbb
ret
add
mov
in
sti
std
lahf
popa
adc
xor
sbbb
and
fadd
cmp
pop
fimuls
xor
fidivrs
sub
cmpsl
aaa
or
fmulp
imul
mov
and
mov
adc
pop
movsl
pop
aad
inc
mov
je
ss
divb
cli
nop
ja
icebp
sub
nop
daa
lods
aaa
mov
inc
add
mov
fidivrs
stos
sub
stos
test
ljmp
in
sub
outsl
mov
gs
in
aaa
fwait
or
jne
sbb
in
ljmp
js
out
adc
pushf
cmpsb
sti
inc
mov
ret
jge
mov
jmp
mov
inc
and
mov
pop
xchg
adc
stos
mov
xor
mov
add
int
shlb
pop
out
jbe
loope
icebp
push
fidivrs
sub
xor
add
lahf
sub
mov
mov
test
cvtps2pi
cmpsl
xchg
xor
scas
pop
or
ficoml
enter
and
push
sub
nop
mov
daa
jge
clc
inc
mov
mov
push
mov
gs
mov
mov
dec
loop
ja
adc
or
in
movsl
adcb
fistl
sarb
or
sahf
jnp
cmp
pushf
cmp
inc
cwtl
sti
pusha
out
rolb
cmp
into
jns
stos
test
lahf
fisttpll
jg
sbb
cmp
out
aas
jno
leave
inc
cmpsb
dec
cltd
in
cmp
stos
push
andb
inc
adc
mov
loope
xor
scas
fwait
outsl
mov
aad
ret
mov
cmp
and
mov
inc
push
aas
cltd
jne
sahf
sbb
icebp
sub
sbb
cli
push
add
repnz
adc
ret
push
mov
mov
lods
pop
mov
xor
xchg
jp
test
xlat
repz
call
out
mov
mov
lea
jecxz
jb
push
and
cmp
ret
jae
adc
addr16
inc
nop
dec
xor
lods
inc
shl
iret
insb
mov
add
jp
pop
jecxz
adc
push
xor
jbe
push
or
clc
in
mov
js
dec
mov
or
aad
je
pop
jge
call
mov
add
mov
mov
mov
int
inc
mov
pop
roll
adc
mov
xchg
cmp
mov
pop
into
ja
push
repz
test
sbb
repnz
ja
cmc
jbe
dec
pop
in
and
lds
pushf
mov
jo
push
popa
cmp
in
in
shl
mov
pop
ret
mov
cmp
push
cs
insl
mov
std
dec
or
sbb
pop
ljmpw
sahf
and
cmpsb
inc
cld
or
jo
mov
imul
leave
jecxz
adc
mov
hlt
das
rclb
adc
out
ja
inc
push
in
cmpsl
loopne
sub
fwait
jb
scas
cmpsl
mov
std
cmp
mov
arpl
adc
call
inc
or
adc
push
imulb
enter
mov
lcall
outsb
sub
push
push
clc
mov
cmp
test
push
xor
jecxz
pop
lods
or
loopne
cmpsl
push
adc
cmpl
out
xchg
sub
xor
sub
xor
jmp
inc
into
sbb
mov
xor
sahf
out
cmp
cmpsb
jbe
sbb
push
das
jns
mov
loop
fs
popf
add
xchg
inc
pusha
dec
cmpsl
cmp
les
lods
fcomps
rcr
fists
push
or
int
ret
sub
pop
dec
pop
aam
jne
mov
das
nop
push
mov
js
subb
shlb
push
xchg
arpl
and
mov
fcmovne
fisubs
push
fistpl
aas
or
fisttps
xchg
loopne
add
cli
outsb
stos
iret
jmp
mov
bnd
mov
sbb
lret
clc
mov
stc
xor
loop
mov
mov
test
insb
lahf
fidivrs
shl
cmc
out
sti
jns
sti
sarl
inc
lret
or
push
cmpsb
jle
mov
sti
xchg
mov
ja
repz
xor
jae
out
ret
jne
pop
popf
add
xor
dec
sbb
pop
sbbl
add
push
sbb
neg
mov
mov
sub
fnstsw
inc
test
or
push
jg
rorl
cli
adc
push
cld
jmp
sub
or
pop
xchg
push
and
insl
fstl
jp
xlat
imul
xchg
pop
out
cli
cmp
xor
dec
test
xor
test
pop
rcrb
xor
or
imul
xchg
adc
out
cmp
add
leave
sub
xchg
shl
add
hlt
jp
clc
pop
cmp
mov
shlb
call
push
stos
shrl
pop
in
xchg
clc
aaa
jle
cltd
sub
sbb
or
std
lcall
sbb
xchg
repnz
mov
inc
roll
xor
cli
notb
push
cmp
lret
pop
mov
jne
jb
xchg
sahf
in
sahf
xchg
pop
sahf
popa
or
dec
adc
push
or
aam
adc
loopne
add
mov
int
lret
insb
fsubrl
sbb
sbb
mov
and
daa
and
pop
addr16
sbb
sbb
aaa
outsb
adc
and
ret
dec
pop
xor
mov
jne
stos
mov
repnz
sub
adc
dec
out
leave
les
mov
pop
xor
aam
dec
xchg
sti
rcrb
mov
ret
or
aas
push
daa
xchg
xor
das
jecxz
inc
jbe
mov
push
popa
lods
xchg
sub
test
cmp
jle
mov
and
lods
insl
lds
mov
outsl
push
repnz
repz
push
xchg
pop
movsl
data16
cmp
popf
cmc
inc
pop
psllw
scas
stc
in
stos
mov
in
pushf
inc
mov
xchg
call
jae
stos
jo
push
das
xor
pusha
jne
or
sbb
sbb
scas
dec
das
mov
loopne
out
pop
mov
ret
test
out
push
loopne
jno
test
pop
xchg
loope
mov
mov
and
iret
daa
rcrb
mov
lds
jno
jge
leave
push
pop
mov
es
cwtl
push
outsl
cmp
jl
jno
lock
cwtl
insl
es
jns
std
and
lcall
arpl
int
sbb
or
clflush
out
or
dec
cltd
aas
dec
lods
jl
pop
das
idivb
dec
std
jb
mov
xchg
call
repnz
ret
and
push
outsl
aaa
std
arpl
shrl
mov
roll
sbb
fs
lretw
stos
test
sbb
loopne
push
clc
sub
cltd
popf
loopne
call
lret
lret
dec
lcall
clc
or
mov
mov
jae
pop
mov
jae
dec
add
sbb
cmp
ds
add
mov
divb
mov
imul
jnp
lahf
popf
add
cmp
mov
xlat
mov
popf
jo
stos
shrb
rorl
jne
in
jnp
xor
es
adc
test
jge
leave
insl
push
aas
jmp
cvtpi2ps
ja
xchg
adc
xchg
xchg
add
add
jno
xchg
jp
aam
sbb
stc
and
xor
sub
fwait
outsb
jmp
push
inc
mov
sub
mov
jno
sub
push
and
xlat
inc
jno
mov
cld
inc
mov
popa
fwait
cmp
pop
fwait
repz
or
and
div
imul
mov
dec
cmpsb
test
mov
mov
pop
jno
pop
jmp
fsubr
mov
and
movl
adc
xorb
add
aaa
sbb
mov
sbb
fldenv
repz
out
loop
pop
push
mov
add
cmpsl
fisubrs
daa
enter
int3
cmc
shr
jne
sub
lods
jnp
hlt
sbb
sbb
loop
jnp
scas
inc
popf
jp
aaa
ret
push
pop
mov
mov
dec
shrl
imul
outsb
stc
insb
arpl
sbb
adc
mov
add
jg
cmpsl
mov
pop
rcrl
xor
hlt
fmull
cmp
int3
inc
lock
push
adc
sbb
push
fstps
test
and
pop
or
imul
cli
outsb
mov
int
mov
push
lcall
and
aad
jo
test
sbb
in
jmp
int3
mov
gs
fisttpll
fstpt
push
sub
in
stos
popa
push
cmp
mov
stos
rep
jp
rclb
imul
je
mov
cwtl
repz
in
jns
and
pop
cwtl
mov
sbb
call
cmp
pop
arpl
addl
add
negb
mov
adc
cld
or
out
xchg
pop
push
jecxz
adc
lods
xchg
imul
fisttpll
sub
push
sub
sub
sub
sbbl
cmp
dec
pop
lds
shr
pop
out
jecxz
add
imul
in
outsl
xchg
shll
jp
add
ds
pop
cmp
and
insl
or
mov
mov
mov
jno
xchg
xor
jne
insl
or
dec
inc
and
and
int3
lock
adc
push
out
sbb
stos
movsl
insl
out
stc
stos
push
dec
mov
pop
fsubrp
mov
mov
shl
mov
mov
daa
push
in
xor
lods
push
mov
ret
gs
jbe
sbb
aam
repz
sbb
lahf
jbe
cld
stc
loop
push
gs
adc
loope
pop
shll
daa
notl
cmp
out
sub
test
fmuls
sub
ljmp
and
xor
or
int
jecxz
xor
inc
daa
das
addr16
out
shlb
cltd
xor
jno
adc
outsl
jp
sub
lock
add
jmp
cmp
imulb
pop
pop
dec
sub
xchg
push
push
or
jecxz
decl
and
xor
add
xor
std
test
add
mov
adc
aam
inc
sbb
rcrl
inc
add
das
mov
insl
or
sbb
sub
divb
sti
or
cs
jecxz
pop
pop
xchg
cmp
sub
js
loope
lahf
and
cmp
fwait
jp
sbb
pop
cmp
jb
push
stos
into
in
or
mov
shl
cwtl
jmp
push
test
adc
lods
fisubrs
push
xchg
pop
or
and
jo
push
jae
sub
popa
roll
data16
mov
in
lret
movsb
push
push
pop
outsb
gs
rorb
daa
push
into
bound
jns
lds
cmp
jbe
rcl
pop
mov
adcl
pop
adc
mov
pop
xor
cmp
jne
imul
xchg
shll
jb
mov
xchg
dec
fiadds
mov
inc
repnz
mov
aam
add
pop
cltd
mov
or
scas
imul
lea
dec
stos
inc
test
push
add
leave
jbe
dec
lods
in
pop
push
push
jae
pop
int3
cmpsb
sub
pop
dec
mov
xor
sub
mov
jge
mov
inc
ds
decb
cmpl
arpl
dec
rcrb
pushf
cmp
mov
ret
push
mov
popf
sarl
inc
test
enter
xlat
into
iret
out
es
das
xchg
repz
push
pop
into
out
sarl
shl
push
loopne
das
push
pop
jb
sub
mov
fdivrs
jnp
ljmp
xor
test
jmp
pop
pushf
or
lods
enter
mov
mov
sbb
in
add
jmp
jno
cmp
dec
adc
lret
xchg
inc
xchg
add
inc
mov
or
sbb
sub
insb
add
out
orl
xor
stos
les
inc
rorb
fstpl
lea
pop
and
std
or
mov
es
xchg
jb
stos
jmp
mov
cs
sub
pop
cld
cltd
xchg
daa
loope
ficompl
jmp
repz
out
orb
icebp
ret
andb
cld
push
imul
or
sbb
mov
test
loop
test
ds
fwait
out
call
or
push
js
sbb
cmp
and
out
add
pop
push
addr16
adc
add
sub
jmp
shl
dec
dec
aas
add
outsb
fistps
testl
clc
pop
ds
outsb
fsub
and
mov
ret
or
push
push
sbb
rcll
pop
sbb
cmp
das
repnz
cmpsb
or
lock
sbb
cmpsl
xchg
jmp
ret
mov
aaa
int
dec
andl
push
test
sbb
sahf
scas
xor
adc
dec
rcll
xor
jns
les
fdivr
fcomp
mov
mov
jbe
sub
mov
ja
fxtract
pop
test
fimull
xor
rcrb
mov
inc
int3
xlat
std
loop
dec
cli
push
call
push
or
push
je
fimuls
jmp
and
jae
aas
int
stc
call
pop
data16
pop
iret
mov
leave
xchg
dec
jp
fsubs
or
push
imul
scas
insl
pop
adc
inc
call
inc
gs
mov
pusha
adc
and
das
or
nop
test
adc
cwtl
xor
outsb
lods
scas
lods
and
xchg
xchg
repz
insb
cld
nop
mov
sub
repz
xorl
jmp
and
jp
mov
inc
adc
jle
sbb
enter
hlt
sub
sbb
dec
dec
aad
inc
imul
into
dec
jno
imul
add
out
fiadds
imull
mov
je
ss
xchg
in
mov
inc
movups
fsubs
stos
xchg
mov
sarb
jl
fnsave
ds
mov
jbe
inc
into
rcrl
jbe
or
bound
ja
pop
push
lahf
inc
cmpsl
push
pop
in
jmp
cmp
or
mov
repz
jns
lcall
fidivrs
adc
and
dec
xor
ret
pop
sub
and
push
and
xor
push
leave
xchg
fildl
mov
jl
add
cmc
mov
mov
jge
test
punpckhwd
out
int
xchg
test
leave
push
sub
movsl
rcll
sbb
sahf
cmp
movsl
cmp
movsb
mov
cmp
outsb
inc
int
cltd
pushf
pop
cli
mov
pop
into
cmpsb
lock
cmp
lret
mov
cmpsb
fs
push
ret
xor
call
jecxz
adcb
jg
mov
dec
mov
mov
jno
mov
push
inc
mov
mov
inc
inc
mov
cmp
xchg
xchg
fsubrl
xor
mov
push
cltd
fs
aas
loopne
lods
inc
add
adc
addr16
outsb
push
xor
sub
add
and
in
sbb
ja
and
enter
in
cs
and
pushf
sti
bound
daa
xor
push
sbbb
aam
cli
xchg
iret
popa
add
ss
iret
ret
mov
mov
pop
mull
outsb
cmp
fnstsw
mov
and
cmp
xor
lock
mov
xor
stc
sub
nop
and
lea
mov
iret
nop
arpl
pop
sub
leave
pop
nop
and
sub
fwait
movsl
dec
jl
sub
faddl
fstpt
sti
bound
push
adc
add
icebp
mov
push
mov
andb
movsb
std
arpl
add
sub
pop
sbb
popf
sub
popa
test
fistpll
xchg
in
aaa
cld
jp
repnz
jo
cltd
mov
outsb
mov
stos
or
cmpsb
mov
ja
pop
sbb
cmpsb
jnp
mov
pushf
add
sbbb
add
jno
dec
jle
jbe
or
hlt
ds
or
sbb
scas
rcll
add
mov
outsl
xlat
dec
mov
into
das
fdivs
adc
pop
or
aam
inc
repz
dec
and
sub
cmp
repnz
and
lods
jmp
mov
fiaddl
in
jg
repz
mov
add
mov
xor
push
int3
inc
and
sarl
fs
cmp
test
repnz
add
outsb
mov
cmpsb
mov
adc
and
add
out
rcrl
adcb
dec
push
sub
loop
bound
add
imul
sahf
int3
addl
add
push
cld
push
cli
filds
fildl
mov
rcl
xor
dec
sahf
outsl
pop
std
inc
lods
rolb
push
mov
jmp
fisttpll
xchg
push
sbb
jle
jl
mov
or
mov
and
pop
out
rcr
daa
push
xchg
mov
and
jne
sbb
movl
push
sub
and
iret
loop
ret
sub
mov
push
pop
fadds
xchg
fcomip
jecxz
pop
push
and
or
lods
xor
jnp
jae
cwtl
jle
xchg
or
stos
sub
dec
inc
push
mov
jg
leave
or
xchg
addr16
cwtl
xchg
sbb
test
sbb
xor
aas
xchg
push
sub
popf
cmp
inc
xchg
dec
xor
cmpb
sbbl
orl
and
fcom
pop
lods
sub
xchg
test
leave
cmpsl
xor
imul
mov
outsb
fstpt
bswap
sub
lret
aad
enter
dec
jno
rorl
and
leave
mov
mov
daa
xchg
inc
popf
out
mov
jp
pop
js
clc
xor
mov
sarl
jle
mov
xchg
cmp
mov
sahf
test
add
push
pop
pop
psllw
xchg
sub
lods
or
scas
je
xor
xchg
fisttps
xchg
and
loope
jge
sub
or
dec
rcl
adc
negb
test
jnp
jmp
data16
mov
jnp
xchg
mov
popa
push
jg
jmp
enter
and
push
cwtl
cmpsb
dec
mov
xor
and
imul
scas
lret
push
out
mov
xchg
int
mov
dec
mov
adc
stos
jae
push
test
lahf
and
push
mov
sub
inc
loope
clc
sub
mov
jb
lds
hlt
std
sbb
dec
scas
add
imul
xchg
lret
bswap
lds
test
jmp
xchg
imulb
out
jne
in
adc
or
mov
fadd
dec
mov
inc
pop
or
int3
xor
mov
pop
sub
sahf
mov
cmp
add
cmpsb
ret
lods
pop
push
enter
call
sbb
int
sbb
push
negb
sbb
cmpsl
int3
popa
mov
inc
decl
mull
cmp
cmpsl
in
jnp
sahf
stc
in
mov
stos
inc
mov
mov
add
lea
mov
push
shr
sbb
cwtl
movsb
mov
loop
lods
sbb
fnsave
mov
xchg
mov
pusha
in
pop
sbb
lahf
js
cmp
fcmove
outsb
stos
ss
mov
outsl
xor
sub
sbb
pop
jmp
dec
seta
or
push
lea
lock
xor
cmp
sub
add
ljmp
loope
lods
mul
stos
sub
xchg
sub
push
jge
pushf
and
aas
inc
call
jb
jge
leave
jg
stos
gs
sbb
push
sub
pushf
loop
jmp
mov
idiv
dec
scas
lret
dec
mov
mov
mov
xor
push
imul
push
fmuls
arpl
psubusw
loope
cltd
roll
fucom
fwait
dec
movsb
loop
dec
cli
arpl
outsl
adc
pushf
push
xor
fstpl
pop
stc
pushf
sub
add
pop
jb
pop
xchg
cmp
mov
jge
orb
push
xchg
out
cmp
shl
adc
mov
nop
push
incb
add
int3
push
adc
or
sbb
cwtl
and
ja
push
int
lock
jns
pop
cmp
imul
andb
push
push
inc
push
ss
aas
imul
pop
hlt
mov
pop
lahf
push
mov
data16
adcb
xchg
xorl
fldt
iret
and
cmp
mov
push
jnp
sbb
ret
push
push
stos
sbb
add
shll
cmpsb
insb
and
dec
enter
dec
jp
inc
sti
int3
cmp
jae
mov
mov
mov
cli
dec
subl
cmp
push
inc
dec
rcrb
aam
sub
ret
lds
sbb
pushf
fs
lds
addl
cmp
add
or
inc
and
pop
je
mov
imul
pop
add
lret
add
repnz
push
adc
subl
push
scas
out
jmp
neg
cmpsb
pop
xchg
fidivs
fnsave
inc
inc
pop
imul
xchg
mov
push
aaa
pop
jbe
ds
jecxz
cmp
test
jnp
dec
aaa
ds
push
push
out
push
cld
cli
in
lret
es
sbb
rcrb
fbld
sub
ja
insl
out
loopne
cmpsl
inc
mov
in
push
fstpl
jno
jo
pop
and
scas
xor
push
inc
enter
test
je
push
in
rorl
cli
in
mov
inc
mov
test
fistpl
xchg
shrl
cmpsb
mov
mov
xchg
test
sbb
mov
inc
ljmp
jno
and
mov
mov
mov
xchg
fnstcw
jo
xchg
inc
xchg
out
push
cmp
add
cmp
ret
jne
test
mulb
sub
loop
inc
stos
or
sub
bound
lds
das
fisubs
movsl
fadds
andl
rcll
adc
sub
pop
mov
insb
int
xchg
sub
sub
xchg
xor
or
add
cmp
adc
dec
sti
push
cmp
mov
insl
incl
repz
mov
loope
xchg
mov
sbb
xchg
dec
jl
fwait
mov
xchg
push
fldenv
rolb
clc
xchg
out
leave
jno
mov
inc
in
mov
icebp
jp
ja
nop
dec
andl
cld
cmpsb
cmpsl
pop
movsl
mov
jecxz
cltd
jnp
jp
pop
lahf
fsubp
jo
mov
or
mov
push
in
enter
or
adc
mov
add
and
cmp
aaa
ljmp
push
add
sub
daa
test
xlat
add
xor
sub
or
movsl
and
sbb
and
or
sbb
push
aad
mov
rol
stc
sub
mov
jo
pop
lcall
loop
in
jge
lcall
push
dec
mov
jecxz
mov
cltd
insb
enter
ret
out
ja
ds
inc
cld
test
xchg
insb
aad
outsb
or
sarl
shlb
mov
mov
outsb
xchg
movsl
stos
stos
movsb
ficoms
jbe
inc
cmc
adc
add
cmp
shlb
sahf
jne
mov
sahf
mov
pop
or
int3
push
call
jecxz
aad
pop
mov
repz
or
sub
addr16
jnp
les
jnp
pop
sub
mov
popa
push
or
xchg
iret
stos
fwait
dec
or
mov
mov
ret
jmp
inc
push
xchg
sbb
cli
jg
sub
loop
daa
ret
addr16
pop
stc
or
das
mov
jnp
push
loope
xor
mov
mov
push
in
mov
mov
mov
frstor
inc
data16
jle
and
inc
mov
lods
scas
ret
repz
fucom
inc
xchg
jmp
das
cmp
stc
pop
rcr
icebp
ja
gs
loop
mov
sbbb
fs
ficompl
jge
mov
mov
jmp
arpl
test
test
out
mov
push
sbb
jo
lock
aaa
mov
lahf
popf
push
jg
loop
jb
adc
test
sub
leave
mov
mov
adc
ljmp
sbb
xor
loopne
inc
and
add
rcrb
inc
jo
lret
sub
or
addb
or
fs
mov
gs
outsl
roll
jae
popa
fisttpll
stos
rcll
les
out
mov
jmp
cwtl
cmp
adc
adc
dec
imul
sub
fsubs
call
inc
dec
add
sub
clc
daa
outsl
shlb
das
xor
call
pop
mulb
xor
sahf
adc
enter
icebp
xlat
insl
das
xlat
jp
mov
or
xchg
jmp
das
std
flds
fcmove
sub
cmpsl
sub
ljmp
es
lock
subl
mov
aaa
dec
cmp
shrl
std
sbb
cwtl
lret
adc
dec
cmpsl
mov
inc
and
cmp
xchg
mov
test
test
pop
push
js
pop
mov
mov
cltd
sahf
pop
push
sbb
or
mov
sti
jne
outsb
cmp
test
mov
movsl
js
push
jecxz
sub
mov
movsl
add
inc
pop
scas
jo
or
jnp
enter
aas
shlb
je
test
mov
sub
movsb
lods
repz
lds
jnp
imul
loope
stos
pop
aam
fs
add
dec
or
jp
aad
sub
adc
mov
and
cmp
push
push
xchg
xor
jo
gs
or
xchg
adc
xor
leave
xor
out
mov
inc
mov
inc
dec
in
sti
adc
mov
ret
adc
imul
or
pop
popa
xor
rolb
repnz
xlat
inc
inc
fstl
repz
int
jg
push
data16
adc
addl
or
dec
and
jg
lea
in
lret
adc
in
idiv
sub
jnp
pop
adc
arpl
xchg
xor
mov
hlt
sub
push
xor
enter
dec
mov
jmp
pop
out
gs
inc
jmp
test
lret
es
pop
mov
mov
xor
pop
lcall
push
or
add
in
mov
cmp
stc
push
sub
loopne
xor
and
jle
adc
fadds
sahf
mov
push
cli
je
jmp
pop
add
mov
shll
pop
mov
push
cltd
cmp
push
adc
test
dec
mov
xor
jb
cli
ffreep
arpl
cli
cs
sbb
lea
sarl
fiaddl
sbb
adc
jg
es
mov
cmpl
test
sbb
aas
in
and
sbbb
loope
jmp
lods
push
push
and
cmp
xor
inc
adcl
clc
flds
or
adc
jne
sbb
popa
lret
out
mov
rorb
imul
xchg
sbb
out
lods
sbb
mov
cmp
cmp
sbb
push
test
aad
and
jg
add
sbb
or
xor
mov
dec
faddp
cmp
jl
add
or
ret
loope
rcr
sbb
push
enter
cmpsl
out
mov
pusha
std
icebp
das
push
mov
add
jge
inc
test
adc
dec
push
jne
jmp
sbb
test
aaa
in
fldcw
pop
dec
sub
sbb
mov
sbb
mov
cmp
ret
mov
lcall
pop
mov
push
pop
es
ret
adc
cmc
mov
out
sub
pop
xchg
fsubrs
xchg
nop
push
lret
rorl
and
das
push
fbld
ret
je
sbb
mov
or
aas
mov
adc
mov
clc
or
popf
cmp
movsl
xor
xor
stc
shl
test
pop
rol
rcll
mov
sub
ret
fiadds
sahf
mov
jecxz
in
jb
jbe
shl
inc
mov
adc
data16
leave
das
das
repnz
aas
sti
lcall
das
mov
sub
sahf
mov
xor
dec
repz
je
jmp
cmp
xchg
test
inc
jns
stos
xchg
inc
inc
xchg
movsb
mov
mov
dec
pop
jbe
loopne
cld
jno
mov
test
ret
test
lods
movsl
dec
mov
pop
lahf
xor
ds
jecxz
jecxz
cmpsl
mov
pop
add
inc
adc
and
cmp
push
add
or
cmp
sti
mov
xchg
enter
add
lds
sbb
add
xor
sub
lods
pop
aas
add
int3
cmp
out
and
out
test
js
add
xchg
xchg
js
mov
push
push
iret
dec
inc
repz
sbb
cmpsl
gs
fwait
and
inc
cmpsl
xchg
and
xor
xor
loope
ficompl
mov
mov
test
mov
shll
xlat
shlb
jle
add
outsl
xchg
cld
loope
jns
call
jmp
shl
int3
call
pusha
mov
jbe
mov
test
sbb
cmpsl
lret
and
shlb
dec
test
fs
ljmp
jle
xor
mov
add
and
mov
repnz
xor
stc
xorb
mov
or
rorl
nop
mov
jo
jle
jecxz
dec
repz
std
test
or
jecxz
xorl
shr
sbb
mov
lret
cmp
addl
mov
pop
add
mov
ret
je
scas
rorb
dec
int
mov
lret
fwait
shrb
mov
inc
xchg
das
mov
inc
sub
mov
or
outsl
ret
pop
xor
xor
movswl
in
sahf
shll
out
mov
lods
mov
mov
dec
clc
imul
jg
or
out
pop
mov
fs
inc
mov
out
and
xchg
push
es
add
pushf
test
cmpsl
xchg
sbb
lret
adc
pop
gs
or
sub
add
jbe
sbb
pop
enter
jne
jno
fwait
out
mov
lahf
xchg
cmp
push
imul
inc
xchg
pop
jns
jns
fmuls
sub
inc
loop
iret
mov
repz
xchg
adc
insl
rcrb
ret
les
cmc
sbbl
jnp
scas
push
cmp
jmp
xchg
and
stos
jmp
movsl
mov
xlat
push
xchg
mov
jge
stc
adc
jns
xor
lret
lods
mov
push
xchg
icebp
jecxz
sbb
sub
push
pushf
and
cmp
push
push
mov
dec
scas
leave
fidivs
in
pop
call
xchg
mov
xchg
xchg
sbbb
ret
ret
mov
cwtl
leave
sub
push
jae
dec
outsb
mov
adc
mov
fcomps
mov
mov
sar
lcall
cmpsb
push
mov
rclb
adc
cmp
lcall
pushf
cmp
jbe
sbb
sub
fs
imul
scas
les
scas
jg
fidivs
repnz
sbb
andb
scas
ljmp
out
aas
arpl
outsb
fstpt
fnstsw
iret
mov
jns
mov
jg
xchg
lock
cs
mov
ja
push
jo
leave
enter
leave
loope
addl
in
and
inc
mov
inc
in
cmc
mov
clc
cmp
shlb
adc
push
jle
mov
xor
sub
out
cmc
pop
xchg
movsb
mov
xor
retw
gs
stos
jbe
testb
xor
setae
sbb
out
stc
sub
loopne
pop
lea
sbb
cmpps
andb
xor
mov
mov
daa
clc
mov
xor
aad
test
xchg
gs
pop
cmp
inc
pop
lahf
or
popf
inc
or
hlt
pop
test
pop
repz
inc
mov
enter
sbb
fldcw
push
jbe
push
add
dec
sub
fiaddl
in
insb
cltd
test
lds
js
cmpl
mov
lea
push
pusha
loope
push
fs
dec
lock
adc
push
mov
inc
daa
jb
mov
jp
push
xchg
pop
stos
xor
repnz
icebp
repz
insb
fisttpl
pop
lahf
lret
pop
cmp
dec
push
data16
fwait
ret
push
out
jg
mov
xchg
mov
popf
testb
sub
in
push
and
pop
xchg
je
pop
lods
push
call
test
dec
sbb
xor
pop
outsb
ljmp
mov
cld
or
clc
jp
test
data16
dec
test
movsl
pop
insl
ret
aas
loopne
faddl
outsb
stos
add
add
loop
sub
inc
dec
ret
mov
mov
imul
aad
je
lods
xchg
sbbl
inc
scas
sbb
mov
inc
clc
xchg
mov
test
js
mov
out
test
sub
insb
or
cmp
cmp
shll
popa
test
mov
xchg
addl
cld
add
outsb
in
jge
mov
push
dec
push
mov
repz
jecxz
imul
xor
fidivl
jno
pop
aaa
fdivr
int3
or
leave
sarl
cmp
or
pushf
adc
imul
dec
sub
xchg
and
js
jns
or
inc
adc
dec
psubusw
lahf
loope
loope
inc
in
xchg
fidivrl
lods
out
push
cmp
cmp
xor
inc
or
movsl
mov
pop
ja
cmp
lds
ljmp
lds
sub
movsl
inc
sbb
fsubrs
dec
push
push
test
sahf
dec
mov
mov
xchg
pop
pop
inc
and
pop
inc
mov
cmp
fwait
sbb
or
jne
xchg
loope
mov
mov
xchg
repnz
inc
inc
inc
pop
ret
sub
adc
clc
jnp
rcrl
dec
daa
cwtl
ret
dec
rep
bound
sbb
je
and
rolb
ds
out
rclb
aad
mov
mov
mov
scas
loopne
lock
dec
stos
pop
sub
adc
mov
repnz
lock
sarl
jno
inc
lods
push
ret
and
pop
das
loop
roll
std
rorb
jne
sbb
fidivrs
outsb
scas
or
jno
add
into
mov
ficoms
mov
cltd
mov
fisttpll
and
loope
inc
fcoms
jg
loopne
mov
es
mov
cmp
inc
inc
pop
pop
cltd
cmp
enter
je
fldt
add
add
fiadds
rcrl
pop
xchg
pop
mov
sub
loope
rcr
daa
loope
mov
aam
call
or
inc
jge
push
mov
divl
shrl
popf
sbb
subb
or
mov
pop
ljmp
pop
pop
subb
pop
sub
loop
adc
mov
aaa
shrb
int3
inc
dec
jno
in
mov
mov
jnp
inc
xchg
sbb
mov
mov
js
adc
mov
sub
push
ret
movsb
lret
hlt
cmp
jo
out
mov
mov
pop
icebp
cli
jo
add
movb
lds
mov
mull
cs
ret
pop
fisttpl
jnp
adc
dec
lds
cmp
int
add
push
and
push
jge
cld
xchg
dec
xor
fdivrl
lock
stc
aas
adc
aas
insl
std
xor
lcall
sbb
aad
addr16
ficoms
inc
xchg
push
xchg
repz
inc
and
in
xor
arpl
scas
xchg
ret
sbbb
pop
push
sahf
je
jge
das
stos
and
pop
sbb
or
dec
call
push
sti
add
es
imul
adc
imul
int3
lahf
insb
add
fwait
mov
pop
push
mov
out
cli
neg
push
sub
xor
bound
dec
sub
movsl
add
sub
cltd
push
fcomps
lea
test
cmp
sbb
shl
mov
push
outsb
aad
pop
les
test
out
test
xchg
hlt
rol
mov
jbe
leave
inc
cmp
daa
movsb
sbb
leave
xchg
or
ljmp
push
pop
mov
mov
or
add
pop
je
imul
lcall
or
jns
push
cs
pop
and
or
sbb
xchg
pushf
mov
aas
sbb
push
shrl
jo
inc
cmpsl
mov
xor
mov
cmp
cwtl
sub
mov
add
mov
or
adc
pop
mov
out
cltd
sub
adc
enter
jb
int3
iret
ljmp
test
fistps
ficompl
xor
and
cmp
fstpl
mov
rol
adc
xor
out
pushf
stos
add
push
jle
add
xchg
inc
in
ljmp
rorl
loop
push
and
pop
inc
stos
push
jle
mov
jp
push
and
dec
dec
pop
mov
cmpsb
ljmp
sub
mov
call
mov
fdivp
jne
sub
sub
mov
push
mov
ret
mov
xchg
mov
add
pop
or
xchg
dec
mov
sub
fidivl
jbe
jo
push
clc
insl
xchg
jp
das
stos
xchg
arpl
stos
mov
es
dec
insl
sbb
xor
je
lods
jo
pop
insl
ds
ret
insl
and
stos
call
das
push
int
jmp
mov
pop
xor
or
ds
mov
test
xorl
push
xlat
vdivss
dec
lods
mov
imul
mov
push
js
and
cwtl
pop
mov
mov
jno
int
stos
out
pop
jge
adc
insl
xchg
push
sarb
loope
mov
loop
dec
jecxz
mov
xor
daa
adc
dec
cmpsl
xchg
enter
mov
jl
sbb
pop
lret
fwait
pop
cs
insb
cld
adc
insb
or
bnd
or
pop
cld
out
sahf
ss
or
mov
push
cmc
cmpsl
movsl
mov
popf
ss
and
stc
add
mov
pop
lret
in
mov
sti
push
aad
pop
dec
push
outsb
pop
addb
push
shll
sub
mov
xchg
jge
in
sub
jbe
push
in
jbe
sub
mov
pop
leave
in
mov
ss
adc
div
xlat
mov
dec
decl
lea
mov
xchg
fsubrl
inc
add
mov
out
push
jne
subb
popa
es
mov
pop
mov
addr16
scas
rclb
lods
or
xor
nop
fcmovnbe
lods
xchg
incl
cmp
test
cwtl
out
dec
fcoms
aam
mov
mov
inc
ss
fs
test
ror
loop
sbb
scas
dec
mov
mov
jecxz
roll
add
out
pop
jg
mov
mov
push
or
das
and
and
jmp
pop
repz
fidivrs
test
stos
inc
adc
filds
ret
xchg
test
sbb
mov
push
mov
sub
fcmovnb
inc
jge
jl
pop
testl
repnz
fnstcw
rorl
mov
ret
lods
push
cmova
cmp
out
cmpsl
jle
nop
push
xor
fstpl
ss
jno
or
fstl
dec
dec
sbb
pop
add
or
sub
mov
inc
daa
jp
mov
add
test
ljmp
sbb
xchg
decb
lret
pop
les
jb
test
mov
in
lods
inc
cmp
mov
lret
sahf
pop
leave
mov
push
test
fmull
andb
xchg
mov
sbb
pop
enter
push
repnz
aas
aad
or
sbb
cmp
cmp
cmp
mov
mov
outsl
repnz
imul
dec
repnz
inc
frstor
iret
rolb
fisubrl
pop
nop
inc
jae
xor
rcrb
push
push
bound
mov
mov
pop
push
push
not
int3
push
fdivl
and
cli
push
dec
adc
pop
test
dec
dec
add
add
jmp
leave
sub
mov
and
ss
xor
inc
push
cmp
mov
ljmp
shrl
dec
ud0
rcrb
repz
stos
pop
add
dec
out
and
stos
sbb
xchg
mov
cli
xchg
sbb
or
lahf
arpl
cmp
push
gs
stos
xlat
mov
repz
js
or
mov
xchg
cmp
jl
dec
pop
pop
fnstsw
popf
mov
outsb
sub
xor
shl
ljmp
arpl
enter
sbb
xchg
or
ljmp
repnz
push
add
jno
nop
inc
jge
movsb
rolb
lret
fdiv
nop
sti
jbe
stos
fcmovu
jnp
mov
das
cli
cmp
mov
mov
and
jo
ror
icebp
dec
xchg
je
sub
cld
or
adc
jmp
fldt
pop
dec
mov
pminsw
xchg
rol
js
fldenv
imul
outsl
lods
fisubrs
or
jp
xlat
pop
pop
clc
push
pop
sbb
cmpsb
adc
out
and
push
pop
ljmp
jnp
adc
adc
test
adc
test
lea
inc
scas
in
inc
push
and
xchg
pop
xor
nop
pop
or
out
dec
add
or
icebp
outsl
pushf
mov
dec
or
inc
jae
dec
and
sahf
push
test
sub
dec
test
mov
jmp
cmp
and
stc
fidivl
das
push
imull
imul
pop
and
add
or
dec
sahf
adc
incl
insl
rorl
mov
inc
mov
cmp
mov
push
jecxz
xlat
jnp
cmp
push
in
lret
in
add
sub
je
test
push
mov
push
mov
jge
mov
mov
push
jne
xchg
adc
mov
imul
mov
pop
jae
inc
sbb
jne
loope
sbb
loop
repz
scas
test
icebp
stos
or
add
fsubrs
add
push
clc
call
out
mov
jno
fs
cmc
push
mov
inc
jns
mov
into
pop
adc
cmc
inc
adc
leave
inc
pop
jbe
mov
mov
inc
mov
xchg
pop
insl
inc
mov
xor
pushf
xor
jp
roll
add
shlb
mov
and
cmp
test
xor
sbb
jne
scas
mov
cmpsb
cmp
adc
leave
jge
or
lods
mov
in
movsb
aas
push
and
mov
push
jmp
out
loopne
test
lock
dec
mov
popf
mov
imul
ja
jne
jge
rclb
mov
aad
push
pop
outsl
add
xchg
adc
out
cmp
not
push
mov
add
fadds
call
adc
push
fistps
repnz
in
mov
pusha
sbbb
adc
cmp
outsb
push
into
sbb
cmpb
adc
xchg
jp
dec
cli
or
cmp
inc
loope
in
repz
inc
jno
ror
lock
test
sub
sti
testl
or
ret
push
cmc
dec
push
addr16
mov
movsl
pop
xor
lods
cwtl
dec
mov
imul
jnp
mov
inc
insl
jno
mov
adc
or
mov
repz
mov
mov
inc
jl
sub
test
imul
int3
sub
lods
push
addl
jb
adc
leave
xor
call
test
dec
mov
adc
and
mov
aas
mov
rcll
sub
lret
and
rorl
xor
test
insb
hlt
arpl
pop
jno
jb
adc
xor
in
mov
xchg
xchg
neg
push
sahf
pop
dec
mov
fnstenv
and
xor
shll
scas
mov
cmc
mov
add
das
push
jle
sarb
fstpt
cld
sbb
notl
imul
adc
jns
sub
jp
pop
bound
popf
ss
out
shll
dec
or
mov
fsub
push
mov
mov
pop
loopne
rcll
xor
ss
movsl
mov
jbe
jecxz
imul
sub
inc
stc
jo
xlat
push
lds
pop
adc
and
sahf
dec
pop
loope
push
mov
dec
and
insb
push
popa
adc
cmc
iret
mov
mov
movsl
jl
aas
movsb
test
and
fidivrs
outsb
push
aad
xchg
jns
mov
mov
cmp
in
gs
mov
and
leave
call
dec
shl
ja
mov
test
push
call
pop
test
pop
cmp
xchg
stos
jmp
mov
jge
loope
aas
insb
stos
movsl
push
mov
inc
shlb
pop
cmc
scas
iret
and
fwait
and
cmpsl
cmc
push
stos
mov
in
jnp
lea
inc
icebp
cmc
push
mov
push
ret
dec
fldenv
mov
cs
pop
pop
aam
out
loope
sbb
cs
jl
sbb
jo
inc
dec
mov
and
sub
sbb
sub
lret
jmp
pop
xchg
loope
jp
jp
lret
aad
rclb
pusha
add
testl
stc
add
mov
xchg
and
or
xchg
sbb
inc
outsl
fidivs
adc
xchg
mov
push
mov
adc
mov
dec
lret
xchg
cli
fisttpl
fbld
and
fists
mov
mov
jb
xor
aas
sub
and
add
das
fcompl
pop
stos
jp
gs
xorl
and
sbb
ljmp
pop
mov
lret
or
test
xchg
cmp
outsl
fstl
xchg
jle
mov
xchg
pop
pop
xor
fwait
lret
push
cltd
dec
push
dec
lcall
sahf
jbe
mov
insl
in
mov
mov
xor
sub
dec
pop
sbb
enter
rorl
mov
push
cli
jg
femms
mov
and
out
mov
cwtl
and
and
inc
adc
mov
xchg
and
fdivl
or
ret
cwtl
and
mov
ljmp
loopne
mov
xchg
loop
lods
lods
pop
cmp
out
sub
pushf
inc
sahf
imul
sbb
popa
add
fistl
fidivl
adc
dec
dec
xor
enter
push
mov
cmp
call
or
fistpl
aaa
test
cltd
loopne
adc
fwait
out
in
mov
pop
movsl
dec
mov
inc
mov
cmovne
xchg
lret
xchg
into
inc
xchg
ret
insb
icebp
dec
cs
std
jae
enter
mov
push
in
add
mov
push
inc
push
jne
je
sbb
andl
aas
push
imul
scas
mov
or
xor
ja
xchg
mov
hlt
or
sub
cmc
pmulhw
rcll
js
js
sub
mov
ljmp
std
dec
inc
sti
jns
pop
pop
cmp
xchg
push
pop
pop
lret
leave
idivl
sbb
shr
mov
cmp
jl
xchg
pop
sahf
pop
imul
and
pop
mov
test
cmc
add
inc
imul
xor
push
inc
bound
inc
xor
ret
clc
or
push
and
les
and
in
jnp
dec
inc
mov
popa
xor
mov
fcoml
jmp
pop
test
in
push
or
je
ret
outsl
packuswb
iret
dec
data16
pop
mov
repz
xchg
sub
stos
sbb
and
adc
mov
div
inc
fldcw
push
push
data16
addb
push
push
ficoms
xor
or
pop
out
sbb
mov
das
add
pushf
mov
cmpsb
stos
popa
cmpsl
xchg
int
hlt
lock
xor
cwtl
add
cmp
cmp
popa
out
push
mov
call
mov
lods
icebp
lea
stos
inc
cmpsl
sub
outsb
inc
mov
sub
in
incl
inc
lret
jmp
push
xchg
sbb
push
mov
add
mov
pop
sub
push
xchg
repz
pop
faddl
xor
insl
test
xchg
pop
outsl
mov
in
nop
adc
nop
adc
mov
popl
add
outsl
jmp
int
jnp
insl
lcall
pop
sbb
dec
outsb
mov
test
sub
inc
dec
dec
inc
cmp
pusha
rolb
decb
cltd
mov
pop
in
and
repnz
jge
mov
gs
add
nop
stos
jl
dec
das
pop
imulb
imul
pop
stos
cmp
lods
mov
aas
aad
in
insl
jne
jmp
dec
das
jae
in
push
mov
cmp
jb
push
jnp
jge
sti
mov
mov
mov
sub
fmul
pop
jnp
lcall
loope
mov
into
add
jae
scas
jl
sub
enter
inc
adc
push
dec
push
cmc
jle
pushf
enter
or
sub
push
xchg
xor
xchg
into
into
push
inc
out
aad
call
jns
pop
pop
dec
jb
stos
xchg
adc
sti
jns
pop
add
bound
test
sub
pop
mov
xchg
jge
jne
jp
add
sahf
sbb
sahf
sbb
pop
popw
dec
fisubrs
jo
lea
jnp
jbe
jge
mov
lods
add
movsb
push
xchg
mov
pop
push
lods
test
xor
mov
cmp
test
ja
addr16
fildll
pop
dec
ss
mov
xchg
push
aad
mov
and
scas
push
cmpsb
add
xor
out
cwtl
sbb
fwait
adc
ret
and
mov
cmpsl
test
jnp
mov
jae
jle
pop
pushl
add
test
pushf
rolb
int3
add
xchg
and
push
add
out
fldcw
call
testb
fisubrs
cwtl
sbb
nop
fs
fildl
mov
dec
mov
cmpsl
jmp
xchg
in
dec
push
mov
sub
adc
mov
addr16
or
add
cmp
sbb
daa
fwait
sub
add
je
loopne
or
mov
mov
fwait
out
sub
or
jecxz
fcoms
stos
movsb
add
jmp
push
scas
in
adc
ljmp
adc
inc
arpl
rol
or
insb
xchg
ja
xchg
push
dec
fisubrs
adc
xchg
je
ss
fucomp
cs
push
mov
push
enter
fisttpll
aaa
movsl
popa
es
loop
aad
lods
scas
xor
arpl
outsl
inc
negb
adc
lret
or
in
fwait
test
mov
cli
or
out
filds
mov
inc
push
scas
xor
mov
enter
addr16
cmpsl
or
xor
fs
mov
adc
out
cmc
insb
jns
sar
ljmp
inc
pop
imul
jbe
cmp
xlat
cmpl
shlb
imul
mov
prefetch
or
bound
add
xlat
fldt
neg
add
ficoms
aam
outsl
add
ljmp
adcl
loopne
sbb
sbb
arpl
out
fcomp
mov
push
outsb
xor
and
int
outsb
mov
jnp
inc
push
push
test
cmp
popf
pop
push
imul
je
cltd
xchg
and
mov
std
stc
enter
jle
dec
jp
xchg
mov
out
gs
adc
jb
jne
enter
xor
mov
mov
adc
test
stos
and
mov
sbb
movsl
jne
fptan
inc
push
add
pop
mov
adc
mov
push
xlat
in
out
xchg
xorb
aaa
mov
aas
inc
dec
sahf
mov
fildll
movsb
lea
pushf
shll
ss
inc
mov
rcll
mov
fimull
mov
jmp
fs
ljmp
outsb
xor
inc
adc
push
jbe
inc
cld
mov
dec
dec
mov
or
sbb
repnz
mov
fidivrl
and
popa
mov
leave
pop
mov
fdivr
mov
gs
scas
cltd
movsl
loop
and
jb
push
pop
cmp
out
stos
in
call
sbb
jmp
cmp
rep
or
mov
jecxz,pt
dec
mov
outsb
mov
stos
jne
ja
fdivl
jnp
sub
lods
iret
inc
std
xchg
mov
jb
sub
loop
ret
pop
outsl
addl
or
xchg
jecxz
call
push
xchg
jne
jmp
add
xlat
xor
adc
aas
sbb
idivb
je
xchg
push
test
cmp
and
dec
movsb
fwait
call
and
jle
jmp
adc
std
popa
data16
push
std
mov
jmp
icebp
aaa
ss
sahf
mov
movsb
mov
cmp
sub
push
outsl
inc
sbb
imull
lret
add
cmpsl
xchg
inc
lock
xchg
xor
pop
sbb
addr16
xchg
out
jne
pushf
jp
sub
mov
rcrb
dec
add
jg
enter
and
dec
cld
ds
push
add
inc
mov
loopne
push
jmp
sbb
push
imul
push
inc
or
push
aaa
xlat
fdiv
inc
js
sahf
pop
imul
sbb
pop
push
ret
jg
stos
or
mov
xor
sbb
adc
mov
aaa
nop
sbb
xchg
push
add
aam
mov
mov
mov
sbb
loop
sub
pusha
mov
jne
loopne
sub
ljmp
push
outsb
jns
insb
add
stos
lock
inc
cmc
pop
test
inc
fldenv
dec
rcll
sbb
nop
cmpsl
in
mov
ljmp
cmp
jmp
xchg
pop
cmovs
and
stc
outsl
add
andl
pop
mov
cli
and
sbb
pusha
dec
lahf
sub
adc
xor
testl
sub
divb
scas
adc
pop
cmp
sub
add
sub
pop
cmp
jle
push
jb
or
mov
hlt
xor
mov
nop
das
pop
je
mov
pop
in
insl
iret
mov
add
leave
sbb
pop
lock
iret
jg
ffree
cmp
lods
lods
inc
xlat
out
add
add
jb
ja
push
inc
jl
insl
inc
mov
mov
jno
mov
data16
and
js
and
test
mov
xor
fcmovnb
int3
in
addl
cld
xchg
xor
and
xchg
fdivr
jo
add
dec
pop
andl
pop
int
jae
xchg
mov
push
test
cwtl
cld
mov
mov
xor
pmaxub
add
or
mov
adc
leave
repz
pop
stos
repz
pop
cmc
insb
imul
and
outsb
mov
and
repnz
movsl
je
push
push
sbb
cmp
mov
stc
mov
jl
pop
test
mov
insl
adcb
in
push
fidivl
imul
pop
cmp
rcr
push
aam
mov
cmp
arpl
or
fidivrl
cs
aad
sbb
imulb
dec
push
dec
or
fwait
inc
push
mov
mov
jp
and
mov
fsubrs
cmp
sub
jne
sbb
cmpsb
push
lock
push
cmp
sbb
cmp
orb
dec
adc
xchg
jg
dec
lods
mov
push
inc
and
aad
aaa
jg
and
sbb
dec
pop
stos
mov
inc
mov
push
push
xorl
ret
jae
mov
jecxz
or
push
mov
cmp
and
inc
jmp
shll
shl
loope
popa
mov
push
adc
pop
cmp
and
fisttpl
cmpsl
xor
test
ror
push
push
jo
push
movsb
xor
testb
daa
stc
jl
jo
push
mov
and
repz
loop
xor
hlt
or
repnz
mov
mov
jl
aas
fsubrl
jmp
aas
fildll
mov
cmpsb
xor
jge
mov
ret
xchg
sub
iret
push
arpl
or
cmp
js
pushf
fnstenv
xchg
pop
sahf
sub
data16
addr16
js
lea
dec
push
and
mov
stc
les
xor
inc
nop
out
dec
lds
std
add
mov
sti
push
mov
adc
movsb
out
loope
movl
test
js
daa
push
jnp
jae
jmp
adc
in
lock
lods
xor
fcoml
ljmp
inc
jl
cs
xor
adc
fwait
adc
repnz
ja
adcb
push
dec
or
adc
xorb
test
mov
dec
dec
fwait
add
jecxz
nop
pop
inc
aas
or
lock
jno
ds
test
push
sarb
dec
push
pop
cmp
xor
dec
shlb
sbb
mov
aaa
cmp
outsl
fdiv
push
scas
subb
jns
or
cmp
xchg
ljmp
push
call
aaa
push
js
das
nop
in
test
gs
or
cld
ret
movsb
popf
sti
scas
movsb
stos
imul
mov
pop
jp
mov
jnp
mov
mov
rcr
aad
adc
insb
jl
out
push
and
call
gs
imull
loopne
dec
adc
cmc
pop
pop
cmpsb
and
sbb
push
cmpsl
cli
sbb
or
dec
popa
int3
push
shrl
leave
xor
bound
mov
sbb
out
scas
test
adcl
hlt
jg
outsb
stc
inc
sti
shrl
stc
mov
shll
loopne
lods
mov
lock
idiv
push
pop
sarl
fbstp
add
pop
pop
popf
mov
stos
insb
cmp
xchg
lock
fcoml
xchg
and
mov
les
jns
sub
insb
not
pop
inc
lahf
add
cmp
lret
add
in
icebp
adc
sahf
xchg
add
out
leave
stos
into
mov
jae
stos
int
shlb
push
add
jnp
fldenv
sahf
jno
nop
movsb
or
cmpxchg
sub
lods
in
cmp
push
test
jmp
or
pop
repnz
insb
shl
cmpsb
or
iret
jmp
insb
daa
or
int3
dec
nop
int
cmp
aaa
aad
pusha
mov
out
bound
jp
jl
testl
xchg
dec
dec
ret
lcall
repnz
aaa
lods
dec
mov
jl
add
outsb
addr16
cmc
jecxz
loope
and
inc
hlt
xchg
cmpsl
fdivrl
enter
mov
jg
mov
xchg
or
mov
mov
jo
mov
fsubrl
adc
stc
xchg
mov
sub
sbb
insl
dec
imul
lret
pop
jo
and
sub
inc
pop
scas
push
pop
sub
cmp
add
andb
add
jb
ja
and
out
aad
cmpsl
mov
push
xchg
sub
sub
mov
mov
sbb
insb
shrl
push
mov
or
cmpsl
mov
sbb
mov
nop
cmp
mov
pushw
std
call
filds
popf
fsubrs
and
shrb
mov
mov
sbb
or
add
jns
mov
repnz
fbstp
mov
mov
xchg
fdivrs
sub
pop
mov
repz
xchg
pop
cld
jns
ljmp
lcall
sti
shll
inc
add
xchg
dec
xchg
leave
sahf
mov
shrb
push
mov
xor
and
sahf
push
imul
in
and
xlat
cmpsb
xor
insl
add
jae
xor
xor
pusha
jne
jbe
add
cmp
mov
jecxz
in
das
push
std
inc
mov
xchg
ja
adc
sbb
cs
int
dec
out
shl
lods
mov
int3
xchg
dec
pop
adc
sbb
or
push
push
btc
pushl
push
nop
push
mov
repz
xor
dec
hlt
lret
mov
jbe
lahf
stc
arpl
das
addr16
pop
mov
in
mov
jnp
pusha
mov
pusha
cmp
cwtl
jbe
sbb
into
pop
cmpsl
sbb
in
xlat
jne
inc
inc
negb
mov
add
or
xchg
movsl
aas
cmpsl
stc
lods
loope
push
cmpsb
cwtl
std
daa
mov
or
dec
push
movsl
xchg
push
pop
dec
inc
outsb
jne
int3
xor
dec
mov
xor
aad
sub
in
mov
mov
pop
pushf
jb
ss
stos
dec
push
es
cmp
mov
cmpsl
dec
out
xor
ja
push
push
xchg
test
lret
jge
adc
xor
pop
add
push
pop
sub
xchg
std
and
stos
shll
pop
pusha
xchg
lret
fadds
inc
jmp
rclb
xor
fwait
or
or
loopne
adc
mov
mov
das
clc
mov
add
push
icebp
mov
and
sar
lahf
bound
movsb
adc
test
adc
dec
notb
mov
orl
mov
enter
insb
sbb
cmp
pop
test
cmp
inc
push
mov
jns
insb
fimuls
fsubrs
xor
jmp
pop
aad
insl
add
xor
fs
mov
ljmp
in
ja
mov
into
dec
insl
mov
inc
stos
test
add
jno
mov
or
dec
push
mov
or
sbb
data16
lea
and
dec
xor
jp
shl
mov
push
add
aas
or
add
add
stos
bound
xchg
mov
xor
xor
aam
push
inc
and
shlb
rolb
fisubrl
stc
push
ficoms
lcall
dec
js
daa
mov
adc
jl
push
and
ret
icebp
enter
or
aas
lcall
sub
pop
inc
cwtl
sub
test
setnp
out
adc
out
mov
xor
adc
add
xchg
aas
inc
xor
loopne
shlb
jge
lea
mov
pop
out
mov
test
sbb
xor
cmp
mov
xchg
aas
inc
das
mov
dec
popa
push
in
rcrb
mov
aas
int3
movsb
in
mov
lock
int3
test
or
fwait
inc
xchg
pop
insw
enter
nop
and
sub
lahf
pop
push
mov
jmp
loope
dec
pop
xor
pop
aad
pop
sbb
cmpsl
into
lods
test
dec
sub
pop
dec
mov
pop
inc
jg
mov
and
inc
stos
scas
jp
sti
jnp
leave
xchg
repz
fisubs
lret
add
out
in
pop
js
xor
inc
xor
and
sub
fcompl
mov
cwtl
testl
mov
ja
sti
pusha
inc
stos
popa
and
cs
shlb
adc
cmp
mov
dec
aaa
jge
xchg
jns
jnp
shlb
fs
jno
push
push
mov
jbe
mov
inc
lahf
bsr
nop
je
fbld
mov
sub
or
pop
out
and
dec
addb
loope
sub
adc
std
imul
ror
loope
sub
insb
xor
sbbb
pop
push
popa
scas
je
push
or
xchg
jb
cmp
imul
add
or
pusha
mov
loop
add
and
and
xchg
bound
ds
lds
jp
mov
je
lahf
cmpsl
pushf
xchg
pop
in
icebp
add
xor
push
xorb
or
sub
js
cmc
inc
xchg
dec
in
jbe
in
jecxz
ffreep
push
or
clc
fadds
sbb
in
and
cmp
xlat
out
clc
out
sub
jg
mov
sbb
jge
shrl
and
mov
jno
lea
jp
cmp
lcall
add
xchg
push
adc
lock
sbb
popaw
or
sbb
lcall
outsb
sub
mov
insb
hlt
sub
sbb
dec
gs
dec
ljmp
mov
jge
ss
dec
imulb
jb
xchg
cwtl
mov
lds
rcrb
dec
mov
sti
out
add
xchg
test
pop
inc
aam
das
loop
mov
cmp
adc
loopne
shlb
pop
outsl
mov
mov
cmp
and
int
cmpl
cli
loope
fidivrs
rorb
push
in
cmp
mov
sbb
xchg
adc
and
mov
adc
dec
jp
pop
sahf
mov
std
dec
pop
aam
xor
add
ficoml
cmpsb
xchg
xor
mov
mov
dec
push
iret
push
and
sahf
add
in
xchg
pop
add
jecxz
mov
test
inc
fstl
inc
xrelease
cmc
pop
xchg
add
mov
lret
xchg
push
pop
xchg
sub
sbb
out
push
loope
loope
sti
inc
loop
enter
or
bound
pop
pushf
loope
xchg
mov
push
xor
nop
sub
out
cmpsb
sahf
mov
int
push
outsl
pop
cwtl
popf
jle
out
inc
mov
dec
mov
fdivr
mov
lds
sbb
sti
jge
mov
aad
stos
fbstp
subb
fisubrs
ds
pop
int
sbb
xchg
push
sub
cmp
xor
inc
test
pop
cmp
push
jmp
mov
rol
sbb
dec
out
mov
stos
stos
jnp
loopne
loop
insb
push
cmp
lods
jmp
mov
inc
mov
fdivl
faddl
push
push
sar
inc
xor
push
imul
aaa
aas
jle
add
imul
std
lea
xchg
ret
stc
lret
push
movsl
loope
out
je
test
mov
sbb
dec
add
or
cli
fwait
rorb
inc
xor
cmp
idivb
fs
cmp
shrb
rcl
fstps
das
pop
push
xor
xor
jnp
enter
out
adc
mov
push
dec
push
jle
addb
or
and
jle
ret
add
dec
mov
data16
inc
sbb
not
fsubrl
inc
or
fs
cltd
jbe
out
punpcklbw
dec
pop
pop
orl
jp
cwtl
pop
cmp
in
aam
cmp
sbb
pop
repz
lahf
mov
mov
pop
call
subb
jmp
inc
sbb
jbe
jge
push
xor
rcr
iret
push
cmp
xor
fildl
mov
out
sbb
and
dec
jno
jp
roll
dec
daa
push
xchg
mov
sbb
loop
test
fnsave
addr16
mov
jmp
sbb
data16
jmp
adc
loope
paddsb
fstl
xchg
dec
cltd
cmp
test
push
inc
fcomip
insb
mov
dec
mov
jae
std
mov
nop
lods
movsb
test
or
pop
dec
and
xorb
lea
loope
push
in
pop
cli
dec
sbb
push
and
push
xor
nop
dec
mov
in
sbb
je
inc
push
testb
popa
mov
mov
sbbl
test
push
adcl
arpl
dec
inc
faddl
sub
cltd
aad
and
sbb
pop
cmc
mov
imulb
call
shl
mov
mov
add
inc
scas
int
jae
xchg
jne
or
xchg
icebp
std
fisttps
enter
mov
sbb
push
sbb
mov
pop
xchg
out
cmc
jb
ljmp
fucomi
mov
test
jne
mov
mov
sahf
mov
mov
inc
imul
dec
movsb
mov
adc
imul
push
sarb
rclb
ds
mov
mov
lods
jge
pop
test
cld
hlt
xchg
and
enter
test
outsl
pop
dec
pop
enter
aas
pushf
inc
pop
inc
in
xor
dec
jg
aad
mov
loop
pop
cmpl
sbb
inc
rorl
xchg
shll
jge
aaa
out
fisubrl
xor
stos
cmc
jbe
jo
iret
mov
ds
pop
cld
lds
xor
xor
js,pt
ss
outsb
rolb
xchg
jo
mov
jno
sub
xchg
cs
cmp
mov
out
inc
add
les
in
dec
push
gs
inc
popa
push
push
fs
into
fiaddl
ret
fdivl
loope
aad
sub
jo
add
ljmp
test
js
sbb
xchg
dec
xchg
adc
and
mov
pop
push
mov
mov
aas
loopne
mov
mov
jae
cmpxchg8b
jno
icebp
ds
sbb
jmp
jecxz
test
mov
cmp
jbe
pop
push
and
and
stos
divb
cld
xchg
fcmovnb
pusha
xchg
inc
imul
loopne
and
cld
and
mov
mov
cmp
and
movsb
mov
mov
sbb
imul
add
fdivrs
push
addb
pop
or
js
xor
add
sub
lret
sbb
je
add
scas
pop
mov
cwtl
push
clc
inc
sub
fnsave
pop
arpl
jl
or
sub
inc
push
movsb
scas
inc
xchg
icebp
mov
dec
xor
adc
cmp
stos
gs
lock
mov
out
pop
mov
cs
jp
push
sub
pop
mov
mov
sub
and
test
test
in
js
sbb
sti
cmp
push
bound
loopne
sub
je
ja
leave
test
or
loopne
inc
add
xor
xor
mov
loop
and
fisubl
movsl
xor
test
repnz
scas
jmp
test
add
dec
mov
addr16
cmp
aas
cltd
lods
test
and
fsubrs
mov
idivl
sbb
jge
mov
cmpsb
add
std
fcomps
neg
lret
popa
ljmp
mov
add
test
fadds
and
jnp
aad
add
jnp
push
dec
push
stc
shl
mov
outsb
outsl
imul
push
mov
and
out
mov
mov
add
xchg
xchg
lea
lods
insb
aam
push
mov
inc
adc
stos
mov
imul
insl
aad
pop
rorb
test
sub
imul
inc
or
inc
clc
movsl
mov
gs
test
test
out
mov
cmp
es
bound
inc
imull
aaa
pop
jno
repz
test
cli
icebp
divb
xor
movl
sbb
or
add
xlat
inc
ret
cmp
mov
testb
inc
movsl
xor
jae
shl
pop
rorb
xchg
xor
nop
sbb
inc
fxch
inc
loop
adc
mov
es
xor
xor
shll
inc
test
xchg
pop
iret
or
sub
test
dec
push
imul
adc
sub
lds
or
or
and
out
adc
cmpb
dec
int3
lcall
comiss
cmp
jg
dec
cmpsl
out
jbe
sub
xchg
lods
mov
inc
insb
outsl
popf
shl
not
dec
cmp
insb
insl
mov
jnp
shl
pushf
aad
xor
pop
ret
pop
std
sub
jge
mov
mov
cpuid
add
and
stc
out
aas
add
icebp
insb
ficoml
ficompl
pushl
mov
inc
mov
mov
sub
stos
lret
out
xchg
pop
repnz
movsl
out
cmp
xor
dec
cmp
fbstp
jle
fisttps
jp
aaa
daa
outsl
popf
jne
test
lea
sub
fwait
int
js
adc
rcrl
iret
cmc
push
std
jo
sub
insb
add
repz
aad
imul
sti
daa
rol
cmp
mov
mov
fists
stc
lods
mov
xor
and
push
adc
stc
shrb
sub
sub
sbb
jge
mov
push
enter
je
pop
and
mov
push
notl
pop
icebp
or
into
lret
jns
adc
dec
jmp
lods
sbb
mov
cmp
push
out
sahf
cs
mov
cli
ss
pop
xor
inc
pop
cmp
inc
mov
loopne
rol
inc
adc
adc
pop
in
and
ret
sub
rorl
jecxz
fs
and
xor
push
lret
scas
inc
daa
jbe
add
sti
mov
mov
shr
push
popf
mov
pop
std
nop
xchg
ss
loop
scas
testb
pop
adcb
subb
xor
mov
stos
rcrl
jbe
dec
leave
or
xchg
and
test
jmp
cmp
mov
jbe
mov
mov
js
je
cld
mov
rcll
in
mov
xchg
mov
stos
sbb
shll
jl
mov
jno
mov
or
enter
bound
xchg
cmc
nop
dec
or
adc
jmp
repz
loop
outsb
repnz
mov
jne
mov
popl
pusha
rep
or
in
fidivrs
imul
xchg
mov
call
int
pop
bound
test
arpl
jl
mov
jno
inc
shll
pop
or
cmp
jl
adc
js
cmp
leave
mov
or
mov
inc
cmp
xor
push
fidivrl
jo
or
push
mov
out
push
add
inc
xchg
aad
pop
push
pop
dec
dec
in
mov
pushf
lock
or
cs
dec
xor
aas
inc
jns
aam
outsl
adc
cmc
push
mov
xchg
test
std
leave
stc
jg
sbb
push
mov
dec
push
fiaddl
fdiv
inc
stos
fs
bound
sbb
sti
es
cs
and
xorl
es
or
jle
sbb
xor
jle
daa
les
mov
or
mov
sarl
mov
push
jp
mov
fadds
imul
in
push
xor
flds
nop
push
mov
lret
imul
fildll
or
and
cld
jle
scas
inc
and
jbe
xchg
or
and
stc
sub
arpl
jecxz
cli
lods
push
imul
mov
insl
ds
sub
xchg
push
mov
psadbw
push
mov
data16
ret
movsl
call
popf
fbstp
sbbl
ss
cli
loopne
push
lcall
icebp
mov
mov
fmul
fcmovne
aad
cltd
ret
push
cltd
pop
pop
aam
pop
jne
ds
fsub
add
addl
push
sbb
mov
lret
sbb
pop
cmp
inc
cwtl
cmp
cmpsb
sbb
xchg
test
pusha
aas
mov
mov
outsb
add
sahf
cs
ret
fildll
dec
loopne
hlt
cmp
shl
dec
adc
int3
jae
decb
sub
push
cltd
pop
xchg
mov
pop
rcrb
shll
dec
scas
mov
arpl
push
xchg
and
and
inc
and
jg
mov
dec
and
mov
xor
push
pop
mov
cmp
mov
sar
mov
lcall
mov
in
jp
dec
popf
jae
repnz
jle
jecxz
outsl
cmp
or
fdivr
and
sub
add
mov
cld
jne
shll
xchg
mov
sub
adc
mov
lahf
enter
gs
cmp
cmp
dec
push
jbe
push
into
notl
scas
icebp
dec
test
repnz
xchg
ret
adc
int
mov
fs
movsl
aas
dec
repnz
stc
lcall
push
push
jne
push
out
push
push
mov
sub
mov
sbb
in
fwait
add
adc
mov
ret
rcrl
push
jae
mov
mov
popf
in
push
ja
inc
jns
fbld
inc
mov
ror
addr16
adc
push
enter
cld
movsb
add
mov
shlb
mov
js
fs
mov
pushf
in
out
inc
mov
pop
insb
movl
cmp
outsl
xor
pop
mov
jo
and
pop
mov
or
mov
dec
xor
inc
push
add
jge
fisubs
dec
sbb
and
mov
shr
dec
out
test
sub
adc
mov
fwait
ret
lret
mov
lahf
dec
fisttpll
mov
sbb
js
sub
pop
in
jecxz
loopne
add
mov
jl
imul
or
ret
xchg
cmc
push
lcall
call
ds
cmp
and
rorb
shll
nop
rcl
cwtl
jge
leave
xchg
pop
outsl
ret
cmp
adc
aam
or
pop
or
mov
sub
inc
subl
pop
or
roll
cmp
rol
pop
arpl
pop
in
mov
xlat
popf
mov
fstpt
in
cmp
lahf
enter
push
pop
and
es
mov
mov
jg
add
dec
lods
or
aam
fadds
jno
dec
add
sbb
xor
push
sub
push
mov
sbb
mov
xchg
xchg
out
clc
mov
cmp
add
mov
xchg
mov
das
xor
outsb
xchg
sbb
add
fmuls
xor
mov
and
mov
testl
rolb
mov
cmp
movsl
inc
cld
adc
js
loopne
mov
jl
pop
mov
hlt
fcos
stos
mov
js
adc
imull
leave
fwait
test
iret
scas
mov
iret
repz
adc
rcrl
int3
and
in
and
into
jmp
pusha
insl
je
xchg
pop
scas
fdivrs
add
sub
outsb
xorl
and
mov
aas
xor
xchg
aam
mov
push
fidivs
stos
rcrb
dec
fisubl
pop
data16
repz
ja
aaa
dec
popa
mov
cmp
push
or
lcall
pop
lods
push
xor
sub
lods
jl
std
add
mov
adc
andb
sbb
xor
mov
push
dec
adc
rcrl
mov
arpl
fisubs
cmp
mov
add
pushf
adc
dec
mov
adc
sbb
mov
fwait
cmpsl
xlat
push
sbb
add
sbb
in
mov
insb
nop
movsb
and
adc
popa
call
fnstcw
cmpsb
dec
divl
negb
cld
xchg
in
mov
pop
fldt
mov
sar
test
mov
xor
adc
iret
lds
sarb
inc
imul
and
mov
bound
xchg
fmuls
or
jle
pop
shll
push
push
cmpsl
xor
sti
cld
cmpb
sbb
push
xor
push
out
jp
addr16
xorb
adc
lahf
setl
sub
xor
lcall
jge
out
jmp
push
out
mov
pop
outsb
in
and
mov
xor
jg
into
xchg
loop
inc
adc
lret
sbb
and
jle
popa
adc
cld
rcrl
in
std
push
js
call
out
mov
jae
decb
add
push
push
inc
push
out
pop
aad
jnp
loope
adc
add
jle
iret
cmp
mov
iret
adc
mov
stc
cmp
add
pop
jp
sub
xor
leave
xchg
mov
loope
test
ret
outsb
cli
pusha
repz
rcrb
jg
mov
sub
jp
or
ret
rcrb
xchg
in
xchg
fisubl
add
xor
push
cmp
jne
mov
test
dec
mov
mov
adc
add
and
or
fimull
es
fstpt
daa
pop
mov
sbb
mov
xchg
cmc
movsb
pop
mov
rorl
inc
xchg
mov
dec
fisubrs
or
sti
fwait
jbe
divb
xchg
jecxz
mov
pop
xchg
aas
and
mov
add
jp
nop
xor
mov
ficomps
outsl
fidivrs
ds
pop
ret
and
push
repz
lcall
stos
cli
push
dec
dec
push
into
int3
xchg
or
leave
sub
mov
push
xchg
aad
pop
fucomip
lahf
test
out
es
cli
testl
lock
test
leave
inc
push
fs
push
and
sti
dec
sub
loope
sbb
sbb
push
insb
daa
ds
std
mov
mov
jmp
clc
daa
mov
sub
lock
lds
fidivrl
sahf
sbb
mov
xchg
mov
cld
imul
mov
test
sub
sub
es
cs
lcall
in
xchg
inc
sub
test
adc
mov
sbb
in
aam
out
repz
stc
and
sbb
dec
imul
xchg
aaa
jo
imul
cmp
out
push
push
push
into
fldenv
nop
add
icebp
mov
inc
dec
insl
popa
ss
ret
mov
xchg
incl
ret
mov
movsb
push
insl
in
push
or
mov
and
xchg
add
decb
shr
fistpll
arpl
mov
iret
imul
xchg
add
test
sub
inc
sub
scas
push
sti
mov
pushf
sbb
mov
movsb
lcall
repnz
fmull
jle
imul
lods
daa
sub
aas
pop
or
pop
in
out
sub
push
int
adc
fbstp
dec
aaa
mov
cmp
pop
cs
mov
or
jle
inc
cmp
sti
je
xchg
push
or
push
enter
sti
in
xchg
leave
mov
out
outsb
call
dec
pop
js
push
cmpl
adc
loopne
or
clc
incb
jge
imul
sub
add
fidivl
je
sub
and
aaa
or
icebp
sub
sbb
and
fsub
sub
inc
rcrl
test
cmp
loopne
iret
jbe
xchg
roll
xor
and
popa
call
mov
icebp
mov
pop
rcrl
mov
or
push
lods
mov
mov
lods
loop
sbb
lahf
mov
ss
sbb
adc
jne
mov
adc
das
sahf
shll
and
xor
mov
fildl
or
mov
imul
cmc
shll
push
jge
ss
sub
lds
js
jns
repz
in
push
es
loop
push
push
mov
je
or
pop
adc
iret
nop
mov
push
sbb
jl
lahf
xchg
out
dec
das
lock
call
sub
push
push
jecxz
mov
cmp
or
pop
mov
ret
push
int3
loop
mov
xor
add
test
sub
and
or
dec
push
ja
mov
push
cmpsl
xchg
xchg
push
mov
repnz
lcall
fwait
sahf
sahf
push
call
mov
adc
sti
int3
stos
dec
pop
punpckhbw
dec
movl
int3
out
sbb
or
addr16
and
sbb
das
cli
jle
test
xchg
pusha
mov
mov
fstpl
jo
test
mov
stos
jecxz
pop
jge
shl
mov
jo
and
stc
fwait
jmp
bound
sbb
lret
jl
lds
scas
fists
inc
mov
into
cmp
cmp
movb
jbe
xorl
pop
cmp
xor
mov
scas
mov
scas
fistpll
adc
dec
xor
dec
adc
leave
scas
mov
xchg
xor
lahf
jl
repnz
ljmp
inc
xchg
into
ret
jne
or
fldt
or
xchg
int
xor
test
jp
ficompl
sbb
mov
test
sbb
js
shrl
fsub
jae
cmp
pusha
jno
sub
lea
popf
jnp
push
dec
pop
xor
mov
inc
cmp
push
inc
insl
mov
mov
jl
daa
lods
loopne
add
mov
cmpsl
popa
mov
push
or
add
add
pushf
mov
out
adcb
js
add
jno
mov
popf
into
push
mov
lods
pop
inc
out
pop
xchg
je
mov
and
push
adc
stos
das
pop
jecxz
mov
lds
ja
cmp
orb
stos
xor
sbb
cmp
add
std
push
dec
js
imull
mov
jnp
push
into
sbbl
or
clc
mov
out
lahf
cmpsl
repz
aad
lcall
das
enter
inc
or
and
loopne
sahf
jo
or
pop
sbb
in
mov
inc
dec
popf
ss
neg
sbb
lret
pop
and
cmp
xor
iret
loope
cli
push
sub
ljmp
sahf
lret
jmp
lahf
mov
out
jno
mov
test
sub
push
cmp
push
jp
xchg
jl
in
dec
pop
loope
es
imul
mov
sbb
out
das
inc
orb
out
xorl
adc
inc
xchg
arpl
cs
loopne
push
mov
cld
arpl
push
pop
out
bound
mov
dec
scas
pop
push
mov
and
xchg
dec
mov
jnp
icebp
loop
insl
add
push
stos
or
cmp
adc
loope
xchg
sub
pop
inc
lahf
adcl
popf
insb
jns
sub
out
call
cmp
xchg
jbe
jl
xchg
fsubrs
pop
ret
push
in
test
popf
rcll
insl
outsl
clc
imul
pop
and
inc
pop
xchg
lods
orb
cmp
pop
push
sarb
push
xchg
xchg
xchg
jae
fnsave
xor
stc
stos
movsl
repnz
mov
or
aas
mov
mov
lods
loopne
adc
fmull
aaa
mov
jno
xor
xor
das
push
sbb
arpl
mov
ljmp
clc
mov
push
dec
and
inc
xchg
imull
mov
enter
test
pop
aaa
ret
lods
aaa
hlt
repz
hlt
shl
popf
mov
popf
popf
test
pop
adc
scas
pushf
mov
adc
xchg
divb
mulb
mov
fcomi
sti
xor
adc
push
fsin
shll
stc
rol
scas
test
mov
lods
sub
bound
or
pusha
bound
pop
insb
cmp
push
nop
or
cmc
mov
ds
cmpsb
jae
insb
xor
negl
lock
dec
loop
dec
fisubrs
inc
addr16
addr16
pop
add
roll
mov
mov
jne
add
and
and
jp
pop
jp
into
cmp
lds
es
or
and
pop
adc
gs
sbb
test
push
mov
out
jnp
gs
cmpsl
les
shr
mov
in
cs
je
icebp
scas
int
jns
xor
pop
dec
loopne
push
mov
and
jae
stos
mov
xchg
jns
outsb
sub
addr16
rolb
loopne
mov
idivl
sub
or
cli
push
rol
imul
and
xor
jecxz
jge
jge
cmp
add
stos
mov
outsb
mov
adc
in
inc
call
sti
sub
sbb
sbb
and
jg
repz
push
je
fdivs
addr16
imul
cmp
ret
movsl
mov
jo
jo
sub
insl
xchg
dec
sub
mov
or
sub
add
mov
inc
add
push
sub
xor
or
ljmp
mov
push
rclb
mov
push
leave
mov
out
pop
stc
mov
mov
hlt
andb
lret
jle
test
adc
stos
fwait
add
dec
adc
lock
and
pop
xor
loop
or
dec
call
js
mov
xchg
xor
cmpsb
mov
push
lret
add
jbe
sbb
aad
and
xlat
inc
sbbb
mov
enter
and
fidivs
fistl
adc
ret
inc
lods
cltd
inc
dec
leave
push
arpl
dec
xor
add
xchg
inc
xor
xchg
mov
inc
sti
pop
and
sub
xchg
das
loopne
mov
mov
orl
insb
fidivl
cmc
dec
push
jnp
sbb
cmc
dec
adc
sbb
pusha
sbb
or
sub
and
adcl
hlt
mov
jle
in
xchg
add
jnp
or
in
bound
xorl
and
cmp
inc
test
dec
test
fsubl
shlb
fcom
repnz
lret
insl
pop
mov
mov
insb
cmp
sahf
stos
ret
mov
imul
xchg
iret
rclb
cmpl
jp
cmp
mov
pushf
pop
out
and
inc
xorb
outsl
or
ss
mov
or
jmp
cmp
fcmovnb
dec
sbb
or
lods
leave
in
pusha
aaa
adc
push
das
loop
push
stos
mov
mov
jg
jae
mov
inc
inc
data16
bound
loope
mov
mov
mov
cltd
inc
pushf
jbe
imul
hlt
and
leave
popa
fwait
outsb
inc
dec
adc
aaa
pop
loope
mov
arpl
enter
test
push
adc
push
cmp
outsl
pop
test
jmp
sub
add
xor
andb
mov
sbb
and
xchg
je
gs
test
inc
dec
test
fildl
bnd
das
popf
pop
and
in
in
push
push
push
ljmp
pmulhw
repnz
js
mov
jp
mov
mov
xor
push
notl
inc
into
fmuls
je
enter
jns
jnp
jae
lods
clc
in
inc
in
movsb
andl
adc
das
mov
pop
cltd
lock
xchg
bound
jne
es
int
shl
sbb
push
imul
and
inc
dec
push
dec
push
shrl
je
shrl
dec
xchg
rcrl
xor
inc
test
mov
ss
add
xchg
xchg
xchg
cmp
pusha
pop
loop
push
lock
jne
and
lret
sub
inc
jmp
sahf
test
cli
inc
or
xor
dec
adc
sub
push
xor
in
inc
push
dec
iret
shll
aam
cmp
lahf
shrd
mov
mov
shlb
ds
cld
insl
test
inc
pop
test
jbe
inc
push
subl
xor
xchg
adc
cmp
sub
sbb
push
mov
ficoms
in
xchg
cmpsb
bound
xor
jl
jecxz
mov
pop
cmpl
adc
lret
aas
insb
mov
popf
in
out
mov
testl
ds
jb
std
or
loop
stos
adc
adcl
mov
xor
sbb
filds
es
push
xchg
aas
fbld
rcr
shrl
pop
loopne
xor
int3
fistpll
gs
adc
outsl
loopne
mov
mov
push
mov
push
add
jb
cmp
pop
pop
out
or
mov
sbb
push
imul
and
or
je
frstor
xor
adc
mov
push
mov
mov
insb
mov
nop
pop
jl
pushf
cmpsl
bound
imul
pop
add
jns
xchg
sub
jl
std
mov
xor
ret
sub
jae
pop
or
lods
sti
out
mov
push
xchg
inc
sti
fldt
jge
adc
repz
pop
cwtl
jnp
push
cmp
ss
or
loop
out
fwait
in
mov
push
daa
or
ljmp
inc
divl
outsl
jb
or
or
in
scas
rcr
mov
adc
sub
xor
icebp
pop
into
pop
sahf
mov
adc
aaa
cltd
data16
xchg
int
mov
push
mov
pusha
sub
imul
and
fcoms
inc
push
ret
gs
lcall
mov
pop
rorl
adc
stos
mov
push
inc
jne
add
ficomps
in
or
jmp
lock
xor
sub
ljmp
dec
das
cltd
lret
sbb
das
cmp
mov
mov
dec
mov
mov
xor
jp
cmp
lret
dec
in
loop
cmpsl
mov
mov
cmp
fadd
cmpsl
jmp
fcmove
frstor
out
jg
sub
aad
ret
and
pop
and
cmpps
fidivs
out
xor
insl
fnstenv
aaa
testb
in
lret
and
adcb
sub
dec
jnp
mov
xchg
sub
cs
mov
add
cwtl
dec
sbb
pop
insl
push
aad
call
mov
xorb
push
in
jne
and
jae
xor
jl
mov
cmc
add
xor
xorl
std
mov
sbb
or
lods
mov
sbbl
xchg
xchg
lahf
daa
nop
test
stc
stos
out
cmpsb
mov
mov
aam
insl
mov
cmpsl
gs
or
fldenv
xchg
frstor
xlat
stos
add
jle
imul
arpl
cwtl
addr16
xor
dec
in
lods
rorl
jg
and
test
jo
pop
mov
pop
in
insl
mov
adc
je
push
loopne
xchg
sbb
out
loop
aas
jmp
mov
jl
push
xchg
sub
ret
in
pop
jno
add
mov
inc
jecxz
ret
jl
loop
adc
nop
sbb
mov
inc
pop
dec
push
mov
jge
aaa
or
xlat
push
scas
xor
sahf
mov
fidivrs
xor
test
fnstenv
xchg
clc
cmp
pusha
xor
ss
inc
cmp
push
cmp
push
roll
cmpsl
xor
mov
mov
jmp
je
mov
mov
je
pop
bound
inc
sbb
mov
push
pop
dec
leave
mov
and
xchg
or
push
lahf
cmp
cmpsb
push
push
pop
int3
jo
adc
fsubrs
pop
mov
jae
sub
mov
push
xchg
ror
int3
rcrb
xchg
rolb
popf
pop
and
mov
dec
out
dec
pop
jb
mov
jns
inc
stos
jb
repz
stos
dec
rorb
cmc
pop
sbbl
mov
filds
add
sbb
test
insl
imul
sub
push
clc
add
fcompl
ret
push
ljmp
lods
test
test
out
insl
dec
push
xchg
sbb
orl
fcmovnu
orl
mov
push
pop
pop
dec
test
stc
or
pop
sub
xor
and
in
out
push
inc
icebp
adc
mov
pop
jecxz
movsl
push
add
push
add
cli
orb
lds
sarb
push
dec
jmp
adc
adc
fsubl
js
xchg
inc
repz
in
ficoms
push
fwait
xor
push
lods
jo
cmp
xor
jbe
repz
xchg
int3
mov
lahf
dec
hlt
in
xor
xor
dec
cltd
mov
ficompl
cmp
adc
mov
cmp
lret
test
lock
shlb
cmp
loopne
addr16
add
or
cs
fs
sbb
sub
fldenv
sti
mov
aad
stc
push
enter
stc
push
cmpsl
dec
push
test
xchg
sbb
lock
leave
cwtl
sbb
maskmovq
or
mov
jmp
and
rolb
enter
push
and
cmp
dec
das
test
shll
inc
scas
js
xor
push
addr16
adc
xor
push
scas
ljmp
sbb
jae
cmpsb
xchg
xor
add
imul
lods
jbe
in
push
cmp
pop
or
icebp
cli
dec
mov
stos
sbb
in
dec
push
mov
cmpsb
int
mov
sub
mov
xlat
pop
call
and
sbb
add
jl
imul
jg
das
insl
sub
or
popa
mov
mov
out
pop
outsb
fs
movsl
std
mov
lods
lea
push
test
pop
push
jmp
lock
mov
les
into
dec
mov
push
dec
cltd
aas
xchg
sub
pop
in
in
ret
adc
in
fmuls
sarb
outsl
mov
mov
test
outsb
mov
sbb
xor
sbb
ret
adc
sarb
jbe
jb
mov
lea
pop
insb
dec
inc
cmp
fdivp
out
adc
jle
jmp
pusha
lods
stc
call
and
sti
or
out
in
xor
ljmp
mov
pop
ret
cltd
adc
jle
xor
test
mov
push
sarl
inc
xchg
sbb
out
bound
xchg
dec
lcall
and
jbe
lcall
sub
call
push
add
mov
pop
xchg
mov
adc
pop
data16
mov
xchg
inc
lods
lods
out
dec
shr
mov
clc
push
int3
push
addr16
jle
mov
mov
scas
lods
jbe
or
imul
and
adc
ss
mov
testb
sub
test
fisubs
mov
pop
aad
pop
push
mov
adc
testb
fildll
xrelease
ja
pop
pop
mov
mov
scas
sub
push
push
pop
xor
mov
les
aaa
and
mov
sub
and
jnp
add
pusha
cmp
cmp
sub
mov
or
push
outsb
iret
imul
adc
lret
iret
and
cwtl
dec
push
jne
out
stos
mov
out
jo
mov
arpl
mov
insb
cmp
ss
and
bnd
push
out
stc
fistpl
idivb
mov
movb
sbb
xor
mul
inc
lahf
sbb
dec
popa
inc
outsb
mov
cmp
hlt
jecxz
mov
jne
xor
pop
or
aaa
sbb
adcb
out
idivl
xchg
inc
jmp
mov
adc
adc
xchg
pop
lret
pop
cmpb
movsb
jg
mov
pop
mov
test
mov
lret
mov
sbb
cli
and
les
ss
loop
jne
popa
inc
shlb
jmp
dec
stc
push
xor
ds
push
or
sub
cs
sub
addr16
ja
xchg
mov
or
or
int
imul
cmpsb
push
sbb
jbe
dec
mov
mov
jecxz
push
lret
test
leave
and
mov
pop
mov
lea
popf
into
cltd
or
add
inc
adc
jae
mov
dec
out
cmc
pop
sbb
jae
mov
aaa
shl
dec
faddl
pop
pop
out
or
dec
addr16
aad
push
inc
or
xlat
into
add
pushf
out
jno
xchg
mov
mov
mov
fwait
imul
sbb
jp
lods
daa
stc
lds
mov
popa
rorb
loopne
jne
std
ljmp
inc
movsb
sti
mov
push
sbb
push
insb
movsl
jbe
sar
test
roll
roll
add
fwait
clc
mov
into
jecxz
cmpsl
mov
rcrl
pop
sub
xor
mov
mov
add
push
push
xor
xchg
les
loop
mov
mov
mov
std
nop
cmp
inc
call
repz
data16
push
iret
mov
cmp
jns
sbb
push
dec
dec
dec
and
dec
jo
repz
icebp
inc
mov
in
shrb
daa
mov
mov
fcmovnu
lret
mov
faddl
test
mov
inc
mov
lret
loope
sub
arpl
mov
out
clc
mov
lret
nop
jbe
pop
dec
out
ret
leave
adc
insb
lods
into
bound
xchg
xor
js
inc
or
rcr
je
addr16
cmp
loop
push
mov
shrl
mov
fsubp
jp
int3
scas
push
cwtl
push
mov
sti
stos
xchg
shll
or
aam
incl
push
cmpsl
shrb
pop
cmp
mov
pop
rorb
pop
mov
inc
inc
outsl
pop
mov
jb
dec
cmpsb
std
jp
mov
test
jmp
or
push
les
fst
jbe
aas
and
adc
jg
xchg
out
mov
sarb
out
push
in
mov
add
adcb
jbe
repz
test
shlb
mov
and
pop
push
xchg
pop
call
add
cmpsl
in
mov
in
jbe
shlb
and
pushf
call
or
ss
cs
enter
fnstenv
lret
fisttpll
lock
out
lret
mov
test
popa
xchg
clc
jo
mov
push
cmp
and
test
int3
dec
gs
mov
xchg
fwait
or
pop
aad
and
leave
pop
add
mov
dec
xchg
xor
xor
sbb
mov
mov
out
dec
add
repz
arpl
dec
xor
jle
cld
std
xchg
mov
test
std
ja
into
cs
ret
movsl
mov
hlt
psrlw
popf
or
std
jle
insb
lods
inc
lock
lock
stos
inc
popf
test
fsubr
lods
cmpsb
int3
xchg
fdivl
mov
xor
scas
xor
sbb
or
sub
xchg
fldl
in
in
push
ds
push
mov
mov
scas
js
cmp
adc
sub
add
ficoms
jmp
pop
cld
add
pop
pop
dec
fsub
clc
divb
add
sub
repz
sub
cmp
dec
not
fsts
xchg
inc
icebp
pop
repz
mov
shrb
mov
dec
sarb
sbb
or
jge
cmc
cltd
or
sbb
ret
popl
subb
js
pop
mov
mov
mov
or
mov
test
pushf
jp
gs
mov
sub
cmpsb
imul
push
or
mov
pushf
aad
test
inc
ss
mov
mov
aaa
movsb
stc
pop
stos
addr16
movb
cmp
sub
cmpsl
or
mov
int3
mov
or
pop
and
outsl
mov
adc
dec
imul
xchg
call
cwtl
inc
jg
scas
repnz
loope
push
imul
mov
sbb
cld
dec
pushf
pop
loope
mov
sahf
cli
or
jl
test
idivl
jp
mov
mov
ss
out
outsl
sbb
dec
inc
jg
xchg
xchg
sbb
setne
gs
and
lahf
fstpt
mov
inc
push
into
outsb
push
test
adc
data16
jmp
xlat
cmp
mov
idivl
data16
stos
je
mov
arpl
movsl
cmpsl
rcrb
mov
cmp
scas
movsl
mov
mov
mov
cli
push
jno
xor
movsl
lock
aas
xchg
or
cmpsl
sbb
les
cmp
loope
xor
shl
lods
mov
int3
add
fistpl
push
xchg
lcall
out
fsubs
add
lods
aad
out
movzwl
inc
movsl
in
les
mov
out
mov
dec
mov
loope
ss
mov
in
dec
scas
sub
stc
xchg
or
lods
xchg
loopnew
cmp
mov
andb
dec
or
fists
subb
fisubrl
into
jge
stos
and
jecxz
cli
fsubrl
lret
ja
outsl
mov
add
iret
test
bound
cmp
stos
ret
push
ja
xchg
mov
fbld
hlt
ret
push
jg
lods
jp
sub
scas
test
out
pop
dec
out
nop
into
arpl
repz
cltd
push
or
adc
mov
ficoms
sbbl
sar
fdiv
dec
mov
insb
or
loop
rclb
inc
es
xchg
pop
pop
adc
mov
add
lahf
in
sbb
sub
inc
sub
push
and
xor
fwait
add
cmp
ret
sub
inc
in
jnp
loop
inc
pop
incb
xchg
addl
jb
push
dec
ja
mov
sbb
lods
sbb
or
lock
pop
js
in
or
pushl
fwait
cli
hlt
fs
test
aam
sti
sub
mov
pop
dec
push
fwait
inc
xlat
imul
fmull
jmp
ds
shr
pop
cmp
and
icebp
pop
sub
sbb
imul
stos
fcoms
in
mov
inc
icebp
jle
rcrl
imul
pop
jmp
sbb
sti
cwtl
scas
cmc
sbb
daa
aas
subl
je
jne
loop
cwtl
jl
ss
test
stos
jno
aas
pop
mov
daa
push
cmp
xlat
inc
aaa
int3
jmp
das
xchg
pop
ficomps
sahf
inc
mul
adc
xchg
push
cs
mov
sub
jb
in
fsubrs
add
xchg
push
xchg
and
popa
sub
fisubrs
icebp
mov
jbe
pmulhw
jb
pushf
inc
frstor
mov
daa
mov
xor
fcmovnb
fcmove
fbld
test
inc
shll
xor
daa
dec
pop
and
mov
push
outsl
and
in
xlat
fmulp
or
loope
sbb
loope
mov
adc
jmp
inc
loop
jnp
xchg
iret
cwtl
mov
pusha
int3
fxch
mov
popa
xchg
shll
and
insb
push
cld
jns
stos
fcompl
cmp
adc
std
icebp
xor
dec
cwtl
sub
test
sub
sbb
lea
add
push
mov
shll
outsl
imul
cli
mov
inc
les
pop
jno
clc
in
pop
pushf
stos
hlt
xchg
mov
dec
push
jbe
mov
pop
jae
cmp
lds
mov
outsl
aam
imull
stc
and
push
repz
mov
ja
sub
call
fdiv
add
push
fidivl
les
leave
movsb
comiss
or
shl
mov
popa
jecxz
mov
adc
mov
movsb
push
mov
inc
cld
or
int
dec
lret
ds
xor
cmp
push
cmp
cli
jnp
inc
mov
and
jne
mov
push
adc
push
mov
aad
mov
cld
inc
in
lret
call
test
jns
inc
jae
push
jecxz
inc
popf
jbe
mov
mov
xorb
ljmp
jb
out
test
js
and
mov
ret
xchg
push
arpl
shr
xor
jge,pt
out
cmp
std
test
lods
mov
xchg
mov
inc
int3
hlt
inc
les
stos
pusha
aaa
cmc
sbb
test
jno
dec
cmpsl
sub
loope
outsb
loop
loope
stos
xor
cmp
mov
movsb
push
adc
lods
loopne
jne
mov
ljmp
ret
fs
insb
dec
xorl
icebp
es
repz
iret
repnz
pop
lods
es
pop
fldl
pop
mov
filds
outsl
int3
clc
xchg
xchg
rcrl
push
icebp
sbb
pand
mov
sbb
es
rcl
fnstsw
mov
and
xchg
adc
and
sbb
call
arpl
cmp
int
ficompl
sub
clc
inc
ja
jno
outsb
sbb
flds
pop
out
lods
jbe
test
leave
imul
and
sti
dec
daa
cmpb
hlt
push
xlat
loope
pushf
stos
mov
adc
sbb
xchg
xor
cmp
pop
adc
and
into
xchg
loopne
bound
les
jb
xchg
loop
fsubp
and
add
jno
mov
push
sbb
das
cmp
loope
jecxz
fsub
mov
call
mov
xchg
rcl
or
cmc
scas
sbbb
fs
leave
mov
jb
in
inc
out
sahf
ret
jp
cltd
in
xor
inc
cmpsb
movsb
jecxz
or
mov
subb
pop
xchg
sbbb
pop
xchg
ret
push
arpl
psllw
insl
add
push
cs
sarl
cmpsb
insb
icebp
inc
cld
dec
jle
fildl
inc
insb
fdivrs
mov
xchg
cmp
pushf
cmp
rcrb
xchg
sub
pusha
sbb
std
mov
dec
clc
pop
insl
push
fstp
test
sbb
pop
dec
out
loope
push
jecxz
jmp
test
ret
sahf
pop
sub
jp
add
mov
inc
popf
and
ret
adc
adc
shlb
inc
sti
pusha
sub
push
jmp
out
outsl
adc
imul
gs
out
adc
test
jno
das
fistpl
pop
stos
or
mov
subl
pop
ljmp
mov
mov
daa
cmpsl
mov
enter
outsl
pusha
jae
lods
adc
lods
test
jne
fcoms
cmp
cmp
roll
cmp
jecxz
xor
inc
out
testl
jecxz
daa
cmp
dec
and
inc
sbb
addr16
and
xlat
xor
data16
shl
mov
test
ret
push
push
dec
sub
int3
pop
lahf
and
stos
jecxz
lahf
mov
lea
sti
jb
test
sub
inc
dec
int3
pop
addl
pop
adc
push
insl
enter
fwait
adc
cli
push
sub
test
stc
fcoml
xchg
jnp
inc
push
out
repnz
int
ja
jbe
mov
shrb
mov
mov
jae
and
cli
jno
ja
pop
xchg
movsb
loopne
pop
or
rcr
sbb
jbe
pop
orl
movsl
repz
popl
add
and
xor
jle
mov
loope
fcoms
jl
and
mov
movl
jmp
out
push
adc
jecxz
sbb
clc
mov
test
pop
and
mov
inc
adc
sub
stos
test
mov
mov
xorl
or
iret
mov
push
cld
jg
lods
sbb
movsb
fistps
repnz
es
xor
xchg
mov
lds
aad
mov
jp
lods
mull
inc
rcrl
xchg
adc
inc
xor
and
jnp
hlt
xor
sub
inc
mov
pop
mov
repnz
add
popf
push
inc
adc
dec
rorb
push
pop
daa
cmpsb
mov
mov
adc
mov
jle
rorb
jle
xchg
or
mov
jp
in
inc
iret
jne
shlb
xchg
lds
push
dec
cmpsb
jmp
sbb
aad
in
and
les
pop
lahf
movsb
lahf
insb
jnp
aas
add
jmp
loopne
sub
test
lcall
jae
mov
pop
push
imul
popa
mov
in
inc
daa
lods
in
mov
xchg
cltd
mov
test
lret
pop
dec
sub
popf
pushl
pusha
out
inc
sbb
xor
xchg
mov
jg
fidivs
cmpsl
cmp
popl
sbb
test
adc
mov
dec
adc
jecxz
xchg
orl
outsl
mov
stos
std
cmpsb
xor
dec
andb
out
shlb
xchg
test
test
push
popa
push
mov
repnz
mov
outsl
test
xor
data16
hlt
cmpb
push
or
fdivl
nop
or
jp
jnp
daa
cmc
mov
andl
inc
xchg
mov
mov
dec
fdivrp
aas
out
pop
lds
push
cmp
mov
cmp
shll
jge
shrl
add
inc
movsb
pop
movsb
or
mov
and
sahf
lcall
scas
or
mov
fiadds
pop
into
or
js
fsubs
dec
cli
add
fldenv
shr
add
pop
push
enter
cli
add
inc
fdivs
inc
aam
add
sub
and
jno
jbe
das
fidivl
sbb
mov
dec
pop
mov
adc
add
mov
xchg
pushf
xchg
in
lret
jno
out
inc
adc
push
cmp
jb
mov
inc
cmpb
sub
cld
xchg
ljmp
mov
ret
xor
gs
push
cmp
pop
push
mov
das
sub
sub
stos
xchg
mov
xchg
and
and
push
pushf
mov
sbb
push
cmp
mov
add
push
and
sbb
xchg
xchg
pop
rorb
fcomps
sbb
vcvtsi2sdl
lock
xor
mov
or
addr16
pop
jnp
push
sub
push
in
cwtl
pop
cmp
push
into
fsub
xorl
pop
ja
jle
fwait
mov
addl
test
ja
mov
es
mul
jno
icebp
adc
mov
loope
jno
add
lsl
fists
call
je
mov
add
mov
xchg
in
fs
xlat
imul
xor
je
cmp
and
sbb
inc
cmp
push
adc
arpl
push
push
lcall
nop
mov
sub
mov
fstps
pop
aam
add
xchg
pop
test
loop
cli
test
filds
mov
pusha
rcll
xchg
or
xor
popf
jae
mov
pop
dec
mov
ds
cli
push
fmuls
jbe
imul
or
push
jo
cmp
fidivrs
adc
popa
or
and
shrb
shrl
das
push
in
out
mov
push
bound
pop
mov
adc
xchg
fst
mov
aad
repnz
imul
or
cmp
jo
jge
mov
push
add
out
call
add
mov
sub
int
inc
jbe
mov
test
jmp
outsl
in
shlb
and
in
gs
pop
jl
sarl
daa
call
mov
or
hlt
cli
mov
fs
push
inc
addl
add
pop
outsl
pop
aad
decl
scas
xor
cmp
jns
insl
xor
pop
insb
outsl
pop
in
gs
adc
mov
sub
pushf
rcrl
xchg
add
sbb
push
cmp
cs
or
int
daa
movsb
jbe
add
mov
jae
mov
aaa
mov
test
aad
fisttpll
xor
stc
fwait
xchg
sub
push
lahf
mov
dec
jne
mov
movsl
jmp
push
cld
inc
outsl
sub
xor
imul
jge
mov
pop
add
fwait
shll
mov
ljmp
icebp
mov
jo
or
iret
test
ss
and
cmpsl
pop
jae
negl
js
mov
cmp
inc
andb
hlt
js
cld
pop
adc
push
push
fists
nop
jo
xchg
in
or
inc
xlat
mov
bound
popf
les
sub
into
psubb
sbb
jg
cmp
xor
xchg
jmp
mov
pop
lea
popf
mov
insl
scas
sbb
jnp
xor
filds
adc
jmp
inc
int
sahf
push
xchg
sub
pop
or
jae
xor
adc
sub
push
push
jbe
loope
sub
aad
mov
cwtl
jns
notl
in
jmp
push
insb
or
dec
cmc
loope
stos
imul
sub
pop
ret
cltd
inc
inc
cmpsb
nop
pushf
lock
je
jmp
and
mov
faddl
divl
adc
push
mov
or
mov
inc
int3
mov
cmp
xchg
loope
in
mov
mov
dec
push
mov
int
dec
pushf
jl
sub
push
cli
push
rol
xor
jmp
mov
xor
stos
arpl
cwtl
inc
add
lret
pop
inc
testl
cmpsl
mov
lock
mov
cmp
ret
sbb
and
and
movsl
cwtl
or
out
in
push
push
aaa
inc
and
data16
or
and
lret
add
insl
jnp
testl
enter
sar
mov
push
dec
pop
or
je
xor
lahf
lcall
or
test
xchg
jns
jmp
jl
lcall
outsb
stc
cwtl
cmc
repnz
and
pop
or
inc
outsb
rcll
mov
inc
pop
in
xchg
sti
movsb
pop
or
cmp
xor
jno
mov
inc
push
inc
lea
bound
test
repz
xchg
aam
dec
xchg
fwait
cmp
xor
xchg
mov
push
mov
and
inc
and
fsts
jae
adc
std
fcmovnbe
mov
mul
xchg
mov
gs
xchg
aas
xor
or
lret
test
cmp
sub
push
adc
xor
enter
mov
in
mov
leave
add
cmc
incl
xor
int
xchg
sub
inc
mov
test
or
xor
jecxz
add
insb
shr
xchg
adc
jecxz
loop
xor
pop
push
addb
and
xchg
jno
xor
subb
xchg
cld
nop
imul
add
loopne
jmp
test
xchg
bound
aad
adc
nop
or
loope
add
lret
push
add
mov
es
sarl
sbb
push
inc
inc
pushf
shlb
fdiv
loope
push
lcall
xchg
xor
inc
push
outsb
pop
push
shll
xchg
test
mov
add
fildll
adc
sbb
or
rcll
push
mov
es
sarb
lods
sub
add
scas
pop
sarl
into
inc
addr16
sub
nop
pop
scas
sahf
cmpsb
mov
in
ret
cld
movsl
leave
imul
cltd
sub
pop
mov
loopne
jecxz
inc
dec
xorl
test
ds
fmulp
mov
sbb
push
cli
leave
scas
adc
fidivrl
ljmp
sbb
lea
fmulp
inc
inc
out
xchg
add
lods
pushf
ds
add
mov
fadd
jb
dec
inc
jns
and
aam
dec
mov
jp
mov
js
roll
outsb
ds
mov
xor
rcr
or
leave
movsb
notb
popf
jns
dec
stos
clc
cmpsb
outsl
loopne
nop
cmp
fstpl
mov
pop
arpl
std
ja
inc
outsb
es
jmp
lret
mov
loop
shlb
call
mov
pop
mov
loopne
dec
loop
test
mov
sbb
sub
pop
pop
xchg
mov
xor
divb
shr
sbb
stc
fadds
out
sbb
xor
mov
and
lock
push
out
insb
and
or
xchg
jmp
jecxz
mov
inc
add
jmp
push
jge
jbe
add
std
xor
add
cmp
xor
adc
adc
ja
sub
adc
and
mov
decb
les
es
xchg
sub
pop
ja
es
xchg
pusha
add
leave
out
add
xor
and
in
fistpll
jne
xchg
inc
fists
dec
into
cmc
fcoml
or
add
push
hlt
dec
dec
jne
push
xchg
or
cwtl
js
pop
cltd
push
int3
pusha
jle
push
mov
adc
xchg
add
jae
pop
dec
xchg
jnp
sti
adc
xor
out
jmp
pop
into
test
xchg
push
push
or
push
lahf
daa
mov
xchg
aad
dec
push
js
mov
xchg
lods
test
jb
push
pop
popa
add
out
sbb
test
addr16
mov
fimuls
enter
das
push
add
nopl
sbb
xor
mov
xchg
jno
fsts
pop
lock
outsl
or
ret
and
rolb
mov
addr16
mov
mov
iret
int
pop
sbb
addb
outsl
lods
or
leave
leave
les
mov
adc
aad
push
xorb
inc
xorb
add
lret
mov
fnsave
stos
inc
imul
mov
mov
in
sbb
repnz
gs
inc
jns
jb
out
loopne
andb
xchg
hlt
sbb
jne
or
push
add
mov
test
mov
jbe
cmp
lock
pop
jns
xchg
dec
loopne
xchg
inc
bnd
xorb
icebp
push
xchg
fadd
mov
lahf
mov
int
adc
dec
mov
or
sbb
mov
cmp
nop
rcrl
das
dec
cs
inc
mov
in
in
xor
aam
cltd
ss
in
sub
dec
cmpsb
aam
sub
cltd
ljmp
dec
sar
lock
or
xchg
xchg
fwait
gs
aad
push
aas
or
cld
dec
or
lea
nop
inc
sub
push
sub
sarl
mov
mov
push
and
xchg
pop
pop
out
bound
xor
and
mov
lcall
into
xor
into
sbb
lret
pushf
inc
xchg
and
call
fsubrp
les
test
sahf
lods
adc
lahf
lods
cmpsl
das
imul
cs
fs
aas
adc
push
shlb
sbb
loopne
dec
inc
lahf
sub
mov
dec
sbbb
movsl
scas
inc
fs
out
call
fisubs
movsl
ljmp
repnz
rorl
dec
xchg
lods
xchg
cmp
jae
addl
xor
lcall
test
mov
sbb
cmp
cmpsl
nop
sub
fstpl
add
cmp
test
sbb
jae
mov
cli
mov
insb
cmp
pop
pop
sbb
pop
outsb
mov
movsb
xchg
cmp
xchg
add
lcall
test
mov
pop
and
pop
inc
xchg
or
push
push
cmp
inc
imul
dec
mov
test
pusha
gs
in
insl
loopne
adc
mov
adc
adc
mov
clc
or
add
inc
mov
xchg
inc
mov
cmc
cmpsb
adc
out
ja
dec
incl
pop
jp
sarb
dec
jne
jge
jae
cltd
es
sahf
lahf
mov
mov
fisubs
mov
fst
pop
cmp
jnp
orl
sbb
test
imul
daa
sub
xchg
or
decl
in
push
mov
cmpsb
jnp
fiaddl
daa
inc
jno
push
xor
pusha
xlat
and
daa
iret
inc
cwtl
mov
pusha
ja
orb
xchg
fstl
sbb
sahf
int3
aaa
js
sbb
ret
jge
loopne
pop
stos
cmpb
sub
push
dec
mov
dec
jp
xchg
inc
push
jl
test
inc
mov
xor
sbb
dec
inc
jne
insl
cmp
insl
insl
int
arpl
in
incb
pop
pop
dec
pop
add
lahf
popf
ret
rcll
lcall
pop
std
cmc
xor
cmp
sahf
ja
inc
decl
dec
nop
fs
mov
sub
inc
pop
add
jae
push
push
xor
bound
mov
cmp
stc
stos
and
dec
inc
dec
pop
mov
jl
fmull
xchg
cmp
in
push
pusha
loop
cmpsb
xchg
insl
mov
jae
jmp
push
int3
jl
nopl
fstpt
aaa
or
pop
ficoms
jle
sbb
jl
mov
fcmove
fiadds
addr16
add
loop
push
lock
xchg
in
mov
cli
dec
sub
xchg
adc
mov
pop
dec
ds
jmp
stc
int
lods
xchg
pushf
sub
mov
jne
imul
bound
cltd
insb
aam
fists
and
das
push
scas
sbb
cmp
xor
in
jle
mov
adc
pop
dec
or
insl
push
out
mov
fnstsw
inc
ds
xchg
outsl
cltd
inc
loopne
insb
ja
jo
xchg
adcb
ficoml
int3
ret
dec
fdivl
cmp
pop
imul
and
nop
lret
inc
inc
add
jns
sti
xchg
push
mov
hlt
pop
cmp
dec
repnz
lret
adc
ret
cmp
or
mov
pop
movsl
jb
lea
int3
xorl
mov
add
or
mov
cmpsl
mov
cmpsb
cmc
fdivl
inc
aam
movsb
jb
jg
push
mov
jae
lods
or
mov
add
cmp
fsubrp
mov
or
xchg
adc
scas
mov
adc
pop
sub
cld
les
movsl
mov
fisubs
add
add
cmp
pop
and
push
xchg
popa
ljmp
or
outsb
or
ljmp
gs
in
pop
out
sbb
js
stc
icebp
loope
jmp
jbe
loop
pop
fcmove
ds
mov
sbb
ss
jle
sub
push
cmpsl
xchg
loope
roll
mov
in
lods
shll
lret
jle
mov
stc
stc
arpl
jp
or
es
pop
adc
or
xchg
mov
neg
rolb
std
pusha
pop
das
stos
scas
cwtl
sub
lods
lds
pop
popf
ret
das
add
cmp
incl
inc
fstpl
movsl
adc
lcall
inc
outsl
repnz
xor
xchg
hlt
enter
ret
mov
and
and
clc
incb
repnz
ret
mov
int
mov
cmp
mov
push
imul
shll
cld
xchg
andb
je
incl
or
lea
outsl
xchg
scas
mov
fsubrl
cld
xchg
jae
cli
jae
mov
mov
adc
add
xchg
repnz
jl
pop
int
lods
clc
xlat
cvtpi2ps
cmpsb
jecxz
jae
bound
pop
movsb
insl
push
ret
add
and
cmp
and
pop
push
loope
ss
lcall
sbb
lds
xlat
outsb
sysexit
pop
lret
aad
or
in
lahf
xchg
add
out
xchg
xchg
add
xchg
pop
xchg
pop
mov
cli
lcall
ljmp
mov
inc
jnp
pop
xor
jb
es
xor
jne
mov
out
dec
sbb
pop
inc
mov
shll
xlat
xor
sub
cmp
in
jae
fistpl
jo
scas
add
jbe
push
adc
out
nop
rcrl
lds
rolb
stos
pop
shrb
lahf
test
mov
dec
sub
add
push
mov
fcmovnu
dec
imul
sbb
clc
mov
imul
mov
repz
lea
ret
iret
xchg
or
es
add
divb
lock
nop
clc
pop
call
fisubrl
lock
and
ret
inc
or
in
in
popf
fists
add
test
mov
xchg
fildll
mulb
cmp
out
test
sub
pop
and
sbb
xor
jns
jb
in
or
andl
test
mov
jl
push
adc
int
adc
push
fucomi
push
add
sub
les
push
mov
cmp
dec
push
ja
and
aam
scas
ds
inc
dec
cs
sub
mov
aad
icebp
mov
ljmp
push
imul
add
lret
jbe
xchg
dec
imul
xlat
fidivs
test
arpl
clc
call
mov
or
icebp
rol
mov
jae
js
imul
mov
lahf
jo
mov
or
outsb
mov
js
je
or
jno
mov
loope
popa
sti
and
add
sbb
ss
int3
stc
hlt
add
loope
xchg
test
sub
gs
dec
cld
sub
inc
cs
sub
das
and
lret
mov
stc
sti
cmpsb
inc
rol
sub
mov
mov
scas
call
aam
jbe
outsb
jae
or
mov
cltd
jae
addr16
fs
jno
lds
mov
ret
ss
mov
mov
scas
nop
in
enter
into
jb
fs
push
es
push
xchg
push
stc
mov
and
in
shlb
cmp
and
sub
mov
mov
cmp
push
subb
pop
mov
in
lds
push
xlat
movl
dec
out
in
dec
dec
adc
pop
aam
cld
repz
fnstcw
xlat
sbb
sahf
mov
test
mov
add
xor
or
stc
iret
add
adc
stc
fidivrl
fisubrs
fstpl
jle
lds
mov
ud0
push
sahf
cmpsb
sub
push
int3
notb
das
xchg
mov
inc
hlt
cli
out
mov
les
mov
cmp
fdivrs
add
sarb
inc
aam
and
cmp
fidivrs
mov
or
aam
and
cltd
fcmovbe
clc
add
adc
and
daa
push
jnp
or
mov
dec
arpl
or
sub
xchg
adc
imul
stc
movsl
cmp
inc
mov
insb
outsb
dec
sbb
shl
insb
add
sbb
adc
loop
dec
movsl
or
fsubs
mov
scas
push
inc
push
mull
das
das
pop
add
add
mov
add
pcmpeqb
jbe
pop
loope
push
aam
imul
adc
cmp
push
pop
in
push
negl
jnp
push
call
popa
mov
mov
ljmp
jle
rolb
pop
adc
out
inc
jo
xchg
in
xchg
jmp
popf
scas
cmp
dec
push
idivb
gs
loopne
testb
and
mov
jae
enter
xor
fnstcw
mov
rcrl
es
in
shll
jb
mull
jnp
xor
push
bound
mov
adc
adc
inc
fnstenv
sbb
sbb
repnz
mov
mov
clc
hlt
loope
call
rcl
mov
stos
jne
cld
jecxz
mov
sbb
imul
loop
jne
aaa
jmp
push
push
paddw
push
mov
pop
sub
xchg
inc
push
jno
scas
add
out
mov
inc
mov
xorb
gs
push
inc
insb
cs
ljmp
dec
data16
push
mov
inc
dec
mov
test
loop
push
cmp
cmp
mov
and
out
out
xchg
andb
call
lods
push
andb
js
jp
pop
jno
xchg
cli
dec
fildl
nop
loope
and
fucom
jb
xchg
sbb
pop
faddl
inc
xchg
in
hlt
mov
ret
mov
pop
hlt
dec
js
insb
sub
rcll
out
je
rorl
lret
adc
jmp
jne
or
dec
rolb
xor
xchg
push
cwtl
adc
inc
inc
scas
lahf
jno
xchg
je
or
sub
mov
dec
xor
adc
lds
xor
fs
mov
bnd
fiadds
aam
or
mov
mov
dec
xor
xchg
xor
mov
rcr
daa
pop
cmp
sbb
fwait
push
insl
jnp
insl
pop
scas
xor
jecxz
jae
insl
mov
sub
icebp
add
ljmp
inc
sub
stos
leave
xor
shr
cmc
push
lds
jle
test
cmp
addr16
xor
xlat
arpl
outsb
push
popf
sub
dec
int
das
dec
scas
int
adc
mov
enter
cmp
sub
dec
shrl
sarb
sbb
pop
sub
and
movl
rorl
lret
aaa
ja
and
cmp
push
out
rorl
leave
mov
not
xor
push
mov
gs
movsb
xor
mov
lahf
movsl
sbb
and
test
inc
inc
sub
jb
jns
jb
sub
inc
std
jge
add
arpl
jp
call
mov
int3
sarl
inc
sti
push
mov
mov
adc
adc
fisttpl
lret
jae
scas
aad
rorl
call
ret
lea
fmul
jae
sub
xor
cli
addr16
jl
or
movsl
sbb
inc
call
sbb
or
nop
out
xchg
and
orb
shll
xorb
add
mov
and
xlat
or
dec
enter
pop
stos
dec
shrb
inc
jmp
sub
push
dec
sub
mov
push
insb
les
or
sbb
aas
iret
adc
ja
es
pop
pop
dec
pusha
aas
dec
push
dec
pop
lods
or
push
push
sub
sbb
mov
hlt
sbb
pop
xor
adc
mov
mov
iret
inc
xchg
out
dec
es
pop
adc
negl
sbb
out
inc
add
mov
out
mov
int
push
mov
jge
popl
das
cltd
jg
cli
mov
or
and
jae
pushf
mov
negl
xlat
or
xchg
jge
sbb
lret
cmp
mov
stos
ljmp
je
dec
mov
iret
jmp
cs
pushf
pop
push
cld
adc
inc
test
mov
sbb
out
xchg
sar
fsubrp
adc
inc
gs
push
test
and
add
iret
sbb
addb
jmp
cmp
ss
pusha
loop
fidivrs
add
pop
push
jecxz
out
int3
test
push
xchg
mov
or
int3
cmpsl
cwtl
cmp
inc
jecxz
loope
xchg
dec
mov
sub
and
sub
sbb
push
sub
jge
subb
out
adc
push
shrb
add
jmp
sbb
ljmp
fistps
cmp
mov
sub
xchg
inc
rorb
dec
pop
sbb
sbb
or
gs
mov
and
pop
push
in
adc
lret
cmp
push
sbb
jno
iret
mov
xor
sti
sahf
mull
into
add
ds
mov
ret
mov
outsl
scas
inc
ds
mov
mov
int3
out
gs
repnz
in
clc
fadds
in
fnstsw
jmp
loopne
outsl
dec
orl
fldt
cmpsl
sub
iret
stos
push
jnp
mov
mov
cmp
pop
dec
inc
push
and
push
cli
out
add
sbb
push
push
inc
popf
jp
in
mov
jo
ss
out
lret
bound
aaa
insl
add
arpl
and
pop
leave
and
inc
mov
loopne
mov
andl
inc
and
cmp
ret
sti
mov
push
repnz
js
jg
icebp
inc
add
mov
bound
or
outsb
out
fisttpl
add
and
cmc
ret
mov
and
push
ficoms
mov
cs
xor
mov
imul
lahf
adc
dec
jae
mov
or
pop
inc
cli
xor
mov
pop
mov
push
sub
jmp
daa
sbb
cmp
rcrb
fcomip
out
enter
add
xor
mov
lahf
out
movups
sub
mov
push
shrb
xor
aaa
jbe
in
mov
fbstp
inc
sbb
inc
int
add
xchg
xchg
test
in
mov
sub
xor
push
pop
inc
add
scas
pop
mov
int
mov
push
pop
or
fwait
sbb
addb
lods
inc
scas
fldl
fsubrl
addr16
pop
mov
dec
dec
xor
sub
or
or
sbb
push
and
popa
pushf
mov
or
pop
or
ds
sub
push
bound
pusha
push
daa
sti
xchg
fisubl
ret
adc
pop
jbe
pushf
push
mull
mov
sbb
inc
xchg
outsl
xchg
mov
in
stos
popf
and
cmp
jecxz
movsl
xchg
mov
std
cmp
loopne
sbb
imul
fucom
fldenv
pminsw
lea
jae
ficoms
add
push
test
add
shl
imulb
mov
mov
fwait
mov
pusha
leave
mov
and
add
pop
inc
je
and
cmp
mov
mov
movsb
repz
push
loop
scas
leave
bound
ret
loope
lahf
adc
orl
lock
and
or
outsl
add
jo
mov
movsl
lahf
out
lahf
xor
aam
dec
icebp
push
inc
jo
sbb
icebp
xor
xor
lds
int3
mov
add
jge
ret
cmpsb
and
mov
adc
or
loop
cmpsl
push
mov
mov
div
scas
push
and
cmp
jbe
fildl
xor
popf
lods
xor
sbb
sbb
pop
adc
cwtl
mov
rclb
and
push
jnp
imul
popf
lock
jmp
movsb
adc
push
imul
sbb
pop
cmp
ds
nop
push
repnz
mov
iret
inc
mov
jnp
push
pop
daa
and
mov
push
aad
mov
in
sarl
push
aad
outsb
mov
sbb
dec
js
shl
push
sahf
push
movsb
inc
push
fsubs
jnp
mov
sbb
rorb
in
xchg
mov
ret
xchg
push
cli
test
shll
push
filds
jecxz
adc
loope
mov
jmp
or
push
cmp
mov
sub
cmp
mov
sti
mov
enter
lock
adc
pop
xchg
in
sub
cmp
jge
xchg
out
mov
ret
cmc
lods
adc
nop
adc
inc
stos
out
dec
aad
xchg
shlb
xor
mov
in
cmp
ret
clc
xchg
in
pop
jnp
rcll
and
mov
leave
out
push
push
sbb
addb
sahf
and
shlb
je
mov
fnsave
mov
rcl
sub
xor
aam
sbbl
outsl
jb
or
dec
stos
sub
sub
out
jge
fcmovnbe
xor
std
loop,pt
stos
dec
out
loop
add
mov
adc
mov
lcall
dec
inc
pop
ret
sbb
mov
mov
pop
shr
nop
aaa
jo
mov
dec
imul
sbb
jecxz
sub
xor
jne
push
push
sbb
inc
mov
jl
pop
jl
nop
cld
stc
xlat
and
jmp
jo
mov
fsub
inc
rorb
add
xchg
int
out
inc
push
mov
out
cmp
stos
roll
sbb
repz
mov
arpl
popf
lock
jns
mov
dec
ljmp
xchg
add
hlt
es
fwait
js
dec
imul
xchg
add
push
mov
stos
movsb
je
cmp
cltd
in
push
or
movsb
fucomi
mov
andb
aas
addb
xlat
mov
cmc
dec
mov
xchg
sub
mov
and
maskmovq
imull
fwait
mov
adc
push
mov
sbb
insb
and
jb
mov
add
xor
clc
xor
movsb
stos
jecxz
scas
lret
loope
ds
xchg
mov
dec
mov
insl
cmc
add
sub
daa
das
mov
stos
push
sbb
mov
stos
inc
outsl
std
xchg
jno
iret
mov
sbb
in
hlt
jp
scas
sub
cli
roll
xchg
leave
inc
adc
xchg
cmp
push
jo
mov
movsb
push
jg
jnp
cmp
xchg
push
mov
dec
cmp
pop
loope
test
outsl
out
in
mov
sub
sbb
rcrl
fstpl
add
sbb
adc
icebp
cmp
push
push
pusha
test
das
pusha
jb
cld
cld
iret
xchg
adc
insl
jb
xchg
testl
and
iret
push
push
sbb
sub
xchg
mov
mov
xchg
mov
outsl
orl
pop
cmp
aad
jb
mov
fisubs
cmpb
rorb
xchg
sbb
aad
es
inc
xor
enter
pop
ficoms
sub
adc
jp
sbb
dec
push
pushf
xlat
sbb
imul
jnp
in
test
xor
add
shlb
cmp
mov
xlat
outsb
fnsave
arpl
in
je
and
lock
aas
mov
sbb
fidivl
popa
mov
aaa
fyl2x
adc
out
inc
shrd
ds
or
jle
xor
mov
cmp
xor
loope
jecxz
ret
orb
mov
pushf
jmp
ret
pop
cmp
sub
mov
sbb
enter
popf
daa
inc
fs
loopne
xor
adc
and
xor
jg
xor
mov
cwtl
aad
mov
in
push
push
sbb
pusha
nop
cwtl
pushf
dec
outsl
mov
jbe
sub
mov
sbb
ret
imul
jne
scas
cld
push
aas
push
and
sahf
loop
stos
cltd
sub
into
insl
cld
and
sarl
cmp
stos
pop
int
push
out
mov
push
sub
fdivrp
fsubs
pop
orl
push
pop
pop
xchg
mov
dec
jae
into
xchg
lea
repz
fsubrl
test
fimull
mov
or
cmp
mov
lock
loop
jp
dec
loop
std
or
sub
xchg
lcall
imul
leave
cltd
mov
in
shll
fsubrl
cli
mov
adc
and
repnz
lods
push
pushf
aam
jmp
pop
daa
insb
inc
inc
loop
mov
out
jmp
inc
and
inc
dec
xchg
jge
inc
xor
pushf
iret
sti
push
sbb
cmp
inc
mov
pop
call
pop
repz
and
hlt
fisubl
loope
imul
xchg
inc
or
push
sti
iret
sbb
mov
cmp
mov
and
fcmovbe
dec
pop
sub
push
jno
pop
cld
jo
cld
int3
scas
stos
sub
repnz
cmp
and
nop
jp
data16
sarl
fidivrs
cmp
lods
xchg
jg
pop
testb
mov
jmp
aad
xlat
add
out
push
sbb
incb
pop
dec
scas
fs
inc
int
mov
jb
cmpsl
mov
jmp
in
test
mov
stos
in
and
outsb
cmp
aas
fidivrs
into
ss
mov
mov
jne
inc
int
xchg
dec
sarl
ljmp
std
aaa
cmc
jle
xchg
xchg
repnz
mov
cli
sahf
stc
and
or
test
push
add
and
movb
jmp
fwait
int
dec
arpl
into
add
and
lds
add
mov
sub
push
icebp
fsubrl
pop
ret
and
hlt
jnp
sbb
pusha
stc
dec
xchg
decl
loop
imul
jmp
pusha
jbe
xor
dec
add
outsb
scas
mov
mov
jge
inc
pop
or
popf
lahf
mov
fwait
or
leave
jno
mov
sbb
or
lods
or
stos
mov
icebp
sub
pop
outsb
in
ret
and
das
pop
sar
notb
pop
mov
sahf
sbb
aaa
scas
das
mov
cs
mov
mov
int
push
mov
inc
stc
jae
xchg
ffree
iret
jmp
jmp
lods
mov
in
shll
mov
dec
mov
sbb
or
xor
test
cmp
push
loopne
adcb
dec
jg
and
outsl
inc
nop
xor
ret
inc
mov
jnp
xchg
imull
insl
sysexit
mov
fcomp
shlb
and
jecxz
adc
push
in
fbld
mov
mov
inc
push
clc
lcall
adc
mov
lcall
push
xchg
popa
popf
inc
aaa
lods
sbb
ret
test
and
lcall
xchg
jle
imul
sahf
dec
push
push
lods
mov
icebp
push
cmpsb
ficomps
ds
push
mov
mov
and
lea
cmpsl
shl
movsb
enter
ss
xor
insl
or
sbb
scas
pop
popf
leave
dec
pop
jno
movsb
sbb
imul
cli
and
dec
loope
mov
jmp
pop
cmpl
lea
lods
push
mov
jne
mov
fldenv
stos
cltd
push
movsb
mov
addr16
cmp
cltd
scas
mov
jnp
emms
iret
fidivs
lea
inc
andl
inc
push
jnp
add
sahf
imul
mov
lahf
movsl
and
test
jge
adc
test
mov
jb
mov
and
mov
loope
lret
pushf
xchg
aas
bound
push
pop
shr
sbb
fidivrl
insb
pop
hlt
lods
mov
jno
in
ljmp
xchg
cmpsl
and
unpcklps
and
call
shr
mov
adcl
nop
lahf
mov
xlat
lahf
dec
pop
pusha
or
mov
lret
insl
cmpsb
xchg
jns
xchg
imul
fucompp
ja
mov
leave
sub
or
mov
das
xor
inc
xchg
rcll
aam
xor
inc
pop
mov
pusha
adc
mov
mov
add
push
dec
or
xchg
xor
inc
or
xchg
mov
push
mov
mov
rorl
jbe
icebp
imul
sahf
adc
in
test
loope
sarl
addb
arpl
insl
out
jmp
inc
mov
mov
dec
jmp
cmp
mov
mov
movsb
lret
push
dec
mov
gs
enter
or
lods
adc
ret
jg
pop
cli
repnz
and
sub
inc
jnp
or
rorb
xchg
or
pop
pop
jbe
sub
inc
push
mov
mov
aad
ss
jl
loopne
pop
pop
xchg
fstl
out
mov
aad
les
jecxz
rcl
sbb
jg
in
in
pushf
cwtl
add
jp
jne
hlt
sub
shll
scas
push
or
push
mov
cmpsl
test
push
mov
mov
inc
mov
bound
or
pusha
and
pop
imul
mov
pop
ss
fwait
mov
dec
push
ret
rorl
inc
loope
sbb
hlt
push
cmpsl
fimull
sbb
mov
loope
mov
je
jbe
mov
jle
pusha
aas
mov
enter
inc
adc
int3
inc
rolb
and
out
push
and
je
and
sbb
data16
insl
add
fimuls
xor
test
mov
xorb
or
testl
pop
or
cmpsl
icebp
mov
or
push
xchg
xchg
ret
icebp
xchg
xchg
fnstsw
out
pop
imul
sbb
test
mov
iret
iret
je
mov
mov
imul
pop
and
fadds
mov
adc
ret
fistps
nop
xor
xor
lds
lret
adc
cwtl
in
mov
sbb
dec
fists
push
sub
sub
adc
jg
rorb
dec
pusha
add
pop
dec
xor
push
out
and
cmp
xchg
push
dec
cmp
jg
adc
jle
jmp
jbe
popa
adc
enter
adc
push
sub
cmp
fildl
jmp
inc
loope
jl
subl
pop
mov
loope
inc
ret
aad
sti
test
repz
int3
add
iret
ret
pop
pop
std
clc
sti
add
sub
sub
push
mov
stos
sub
add
jne
mov
ds
cld
cmp
std
push
inc
imul
mov
pusha
sub
arpl
add
xchg
dec
and
xchg
and
xor
sbb
mov
movsl
or
inc
aad
ret
bound
sub
xchg
int3
pop
jg
sub
in
enter
cmp
and
jle
enter
pushf
gs
pushf
pop
je
cmp
aam
fldl
es
fsubrl
fistpl
out
sar
mov
popf
aas
mov
push
jo
adc
cmc
in
ljmp
je
jp
sub
or
dec
test
mov
inc
enter
lock
inc
shrb
jnp
inc
push
push
es
sbb
mov
iret
add
dec
mov
push
shll
pop
push
gs
fwait
sbb
int
and
xor
fimuls
push
inc
mov
dec
mov
roll
movsl
stos
and
test
in
popa
or
cltd
dec
and
lds
mov
ds
or
fsts
ja
xor
dec
sbb
movsb
inc
ja
mov
mov
incb
fs
imul
sbb
xchg
ss
adc
aam
sub
testb
sub
push
lods
xchg
pop
mov
xchg
push
ss
loope
cli
arpl
aaa
sahf
jne
mov
push
addr16
sub
jmp
loopne
sbb
add
sub
jmp
ret
aad
call
mov
pushf
mov
mov
mov
cmc
push
sub
xchg
in
lods
fisttps
int3
mov
into
xchg
jb
push
add
sarl
jg
cli
and
mov
pop
pop
mov
sti
cmp
lds
sbbb
test
or
lock
adc
xchg
das
and
sub
inc
scas
mov
pop
xor
xor
lock
stos
mov
lret
dec
xor
popf
pop
push
insl
mov
pop
cmpsb
inc
stos
lock
aad
rcrb
jle
scas
xchg
mov
lret
sub
mov
pop
mov
fldcw
mov
int3
std
sub
sbb
andl
cmp
lret
and
shll
mov
repnz
arpl
xor
mov
mov
add
inc
mov
mov
mov
dec
mov
insb
stc
shl
scas
cmpl
mov
cmpsb
mov
insl
mov
push
pop
push
mov
stc
ja
insl
fstl
mov
jge
cmova
outsl
inc
sbb
mov
adc
sub
inc
and
lods
ja
sbb
ja
adc
cmp
stos
inc
arpl
jnp
loope
dec
adc
js
insb
push
call
cmp
in
out
cld
inc
xlat
es
dec
cmp
cmpsb
ret
imul
adc
lods
cmp
pop
fidivs
jnp
fs
mov
jns
or
jmp
pop
iret
mov
mov
test
jo
std
scas
mov
cltd
mov
lahf
cmp
fldl
fsin
bound
inc
test
out
and
lds
jne
push
roll
fwait
mov
adc
sti
mov
orb
sub
mov
ficoms
xchg
dec
flds
push
faddl
push
xchg
xor
push
cli
pop
or
sbb
sub
pop
adc
mov
xor
xchg
and
jne
jecxz
pop
jbe
dec
pop
xchg
add
cmp
ret
dec
mov
push
push
mov
mov
inc
scas
and
lea
pop
cs
cltd
ss
push
pop
cmc
jge
pop
mov
push
out
repz
pop
lods
das
inc
in
cwtl
mov
hlt
xchg
int3
or
cmp
cmp
jno
daa
sub
pop
movsl
inc
cmp
and
out
test
daa
dec
in
push
scas
sbb
cmp
out
leave
ds
pop
adc
inc
int
adc
popf
out
inc
shll
inc
xchg
sub
scas
pop
push
xor
xor
cmp
push
or
arpl
loopne
push
adc
icebp
cmpsb
lods
adc
push
mov
xor
adc
mov
mov
pop
xchg
mov
cld
fidivrs
xchg
stos
mov
shrb
push
xchg
jge
mov
pushf
clc
dec
ret
imul
push
das
insl
sbbb
cmp
test
or
std
js
ljmp
sti
mov
mov
xor
or
in
mov
jns
push
mov
loop
or
mov
pop
imul
cmp
lock
mov
pop
flds
les
in
mov
inc
cmp
sub
mov
cli
jnp
cld
inc
mov
mov
js
mov
mov
js
jo
popa
xlat
stos
add
mov
shrl
xadd
addr16
inc
or
mov
andl
lds
mov
mov
push
adc
call
jmp
cmp
out
aas
jns
aas
xchg
push
out
dec
adc
mov
mov
adc
jbe
push
mov
lcall
xchg
rol
mov
mov
loop
push
dec
loopne
hlt
jo
pop
or
push
outsb
jp
int3
insb
cwtl
daa
rolb
cltd
orl
lods
scas
pop
dec
pop
jg
lea
mov
adc
out
pushf
aad
push
and
push
add
jecxz
sub
cmc
mov
popf
js
aad
ret
lods
jge
add
jae
sbb
adc
sbb
in
add
sbb
lcall
sti
inc
loop
mov
ret
jno
sarb
mov
push
lods
cmp
mov
sti
sbb
int
lahf
mov
cmp
sar
xchg
ret
cltd
and
xchg
popf
ss
mov
fdivs
movb
frstor
insb
inc
pushf
mov
mov
sbb
jl
cs
dec
testl
std
js
jle
loope
test
fcmovne
jp
std
insb
add
insb
movl
xor
and
fmuls
xchg
in
sbb
repnz
cltd
inc
hlt
stos
xor
xor
mov
mov
add
mov
icebp
xor
out
pop
xchg
sub
push
inc
lret
add
inc
repz
outsb
jmp
cld
jmp
dec
das
out
push
jp
popl
mov
test
or
dec
push
xchg
xchg
sub
push
lods
ss
pop
add
or
rcl
mov
in
mov
bound
mov
lods
inc
add
pop
push
sbb
or
out
loope
jbe
jnp
adc
cld
xchg
push
cmp
inc
add
mov
outsb
rcrb
inc
xchg
mov
add
lret
pop
mov
push
or
pop
cmp
mov
loopne
cmpsl
cmpsl
jp
movsb
and
hlt
mov
test
int
rorb
out
mov
push
jp
mov
mov
test
cmp
sahf
or
mov
and
sbb
pmovmskb
sub
shrb
test
movsl
nop
pop
sub
lods
out
sti
enter
dec
add
fidivl
pop
stos
push
push
add
jmp
sbbl
jb
pop
sbb
pop
xor
cli
cli
add
jle
inc
mov
adc
pop
mov
je
fmull
xorb
xor
dec
mov
adc
xor
mov
jle
jo
adc
lds
loopne
mov
shr
hlt
jno
adc
lods
mov
cli
xchg
dec
pop
pop
and
push
sub
ror
jmp
xchg
sub
addb
mov
xchg
mov
and
mov
cmp
jae
xor
scas
sub
push
cld
cmp
push
hlt
or
enter
and
cmc
setp
int3
imul
sarb
mov
test
mov
cmc
dec
das
sti
addl
cmp
push
test
dec
test
inc
inc
jne
test
mov
push
xchg
dec
fsub
bound
jl
mov
ja
mov
andb
mov
sub
mov
pop
and
push
and
push
pushf
or
add
mov
stos
cwtl
xor
imul
les
pop
insl
test
xor
lds
ss
sahf
pop
inc
cmp
call
push
dec
sbb
push
scas
push
sub
jae
insl
lock
aas
mov
scas
sarb
pop
fldl
or
mov
jne
adc
xor
imul
inc
push
sbb
sahf
inc
lret
aaa
ret
mov
pop
mov
or
das
jg
out
and
mov
sbb
fcomps
mov
movsb
loope
push
iret
iret
dec
xchg
shll
jbe
adc
test
pop
ljmp
xor
add
jle
lock
stc
insb
xor
cmpb
cld
jb
xchg
ja
jne
arpl
pop
lcall
loopne
cmp
sub
push
fisttpll
pop
cmpsl
rol
mulb
cwtl
bswap
or
jo
dec
mov
arpl
shrl
aas
xor
or
cltd
mov
loopew
divb
fnsave
dec
pop
scas
ljmp
dec
jl
sub
sbb
pusha
cs
fs
pop
mov
pop
cmpsb
cmpsl
inc
das
mov
xor
xor
push
push
and
xchg
sbb
xor
jno
mov
and
cli
fsubs
sub
push
loopne
cmp
inc
cli
mov
rclb
sbb
fists
incb
and
mov
insl
jecxz
sahf
popf
inc
inc
cld
outsl
call
mov
push
jno
pop
push
mov
ljmp
and
fs
inc
sbb
push
cmp
inc
mul
out
inc
lods
adc
aas
insb
xchg
xchg
aad
stc
or
lcall
negb
push
scas
mov
in
movsl
and
mov
stos
int3
mov
daa
lahf
lods
and
cmp
adc
outsl
push
xchg
decl
test
inc
std
cs
inc
ja
add
xlat
loope
mov
push
dec
cs
aaa
insb
xlat
int3
pop
sub
mov
push
test
push
or
mov
jmp
cmp
ret
pop
add
add
cwtl
pop
push
and
cwtl
xchg
dec
push
jle
cld
in
or
jg
dec
adc
into
scas
cli
fstpt
ljmp
adc
and
sub
sub
stos
pop
lods
add
ljmp
dec
rclb
test
pop
into
or
clc
fidivrl
popa
jecxz
rolb
scas
sbb
pusha
sub
jo
mov
mov
and
add
cmp
and
in
into
das
add
pushf
dec
xchg
ss
jge
nop
lds
jae
xor
xor
cmp
shlb
in
push
ret
fcomps
lods
xchg
insb
lret
adc
adc
and
addr16
aam
xchg
cli
scas
push
cmp
popf
jo
sub
cltd
shl
sub
negb
loope
andb
int3
mov
insl
jecxz
aam
jno
xchg
jb
mov
cmpsb
or
enter
sti
cwtl
clc
adc
push
sbb
xchg
mov
push
pop
dec
dec
sub
mov
ficoms
mov
mov
or
out
neg
jl
imul
mov
cmc
sub
mov
fdiv
push
lods
sti
push
out
push
addr16
iret
push
data16
cltd
mov
dec
push
cwtl
push
xchg
sbb
xchg
lret
xor
ss
int3
inc
push
shlb
ja
mov
lret
xor
iret
mov
xchg
jns
stc
mov
xchg
pop
xor
sub
out
cmpb
cmc
mov
daa
xchg
fsubrs
xchg
adc
jg
popf
imul
sub
mov
popf
cwtl
add
jae
ss
mov
xchg
add
shlb
mov
push
add
imul
sub
jge
nop
lods
inc
scas
fstl
pop
xchg
lcall
or
dec
jns
sahf
or
test
popf
stos
sbb
and
push
push
jp
add
mov
mov
outsb
shrl
loope
jge
sub
pop
icebp
imul
push
sub
mov
jge
push
fucomi
test
fwait
clc
aam
jp
lock
scas
out
cmp
addr16
psllw
push
mov
ss
ret
add
sub
jnp
lret
nop
jnp
sub
movsb
push
dec
adc
ljmp
lea
call
mov
adc
ja
xor
pop
clc
mov
loop
mov
enter
fisttpl
test
jle
lods
rcll
push
inc
inc
add
in
fucom
and
das
inc
pop
push
icebp
mov
lods
xor
js
mov
clc
loope
icebp
jae
pop
inc
repnz
iret
popf
dec
out
push
sbb
cmpsb
out
jge
imul
popa
ja
cmp
out
or
mov
jecxz
xchg
mov
fst
jecxz
js
and
aad
shll
in
or
jno
ret
push
cmpsb
icebp
xchg
in
cmp
mov
adc
stos
lcall
xchg
dec
bound
jbe
sub
rclw
mov
nop
pusha
pop
xor
andl
lret
dec
std
outsb
dec
or
mov
ret
xor
mov
push
fwait
pushl
sub
dec
sub
jp
xor
sub
pop
idiv
or
ds
sub
add
pop
or
out
cmpsl
fs
sbb
jle
push
xchg
push
les
push
xchg
pop
xchg
gs
js
cmpsl
test
cmp
lcall
cld
sub
ljmp
and
push
lret
adc
lcall
pop
out
and
mov
xor
and
scas
mov
call
ljmp
mov
out
or
lret
leave
leave
push
out
enter
xor
pop
mov
fs
jae
adc
fcomi
mov
cmp
add
mov
cwtl
mov
cmp
lcall
mov
xor
mov
les
xchg
xchg
lock
push
mov
shlb
addb
cli
push
enter
aad
into
add
mov
add
js
adc
pop
fists
dec
pop
ret
adc
es
test
pop
dec
aad
push
push
sahf
xchg
movl
cli
and
mov
cmp
rcl
stos
pop
mov
or
adc
int
inc
mov
jbe
fcomip
aas
jnp
test
gs
mov
adc
shrl
inc
lea
adc
adc
pop
jg
jmp
cmc
jno
adc
jne
fwait
xchg
jmp
mov
dec
imul
lods
push
or
insl
mov
call
imul
push
jp
or
pop
sar
sbb
je
in
test
cmc
cwtl
rolb
lcall
mov
addr16
jp
cmp
aam
dec
cmp
cmp
bound
jecxz
js
mov
inc
loopne
mov
and
dec
fldcw
test
jp
mov
incl
adc
xchg
jns
hlt
insl
shlb
mov
aam
mov
dec
sub
bound
hlt
cmp
jle
je
cltd
clc
mov
ucomiss
inc
rclb
and
movsl
std
lcall
into
scas
push
jbe
mov
lods
sub
adc
repnz
loop
mov
adc
jae
xor
mov
outsl
add
inc
outsl
into
mov
mov
mov
mov
pop
scas
and
xor
sub
enter
je
test
dec
int3
mov
cmp
fsubrs
and
sub
shlb
lock
pop
mov
stc
gs
je
inc
pop
shlb
sbb
adc
rorb
mov
daa
push
xchg
loopne
push
mov
pop
insb
and
test
jo
cmc
in
fwait
push
roll
jae
mov
fs
jl
mov
sahf
mov
sti
xor
inc
sub
dec
push
mov
jbe
add
pop
adc
mov
pop
mov
into
repnz
mov
pusha
xor
adc
fldcw
sub
adc
push
jns
xchg
lret
or
mov
lret
xchg
out
jecxz
dec
loope
or
fs
fimull
std
addr16
xchg
xchg
push
push
mov
xor
mov
pusha
lcall
test
add
sbb
mov
pop
mov
mov
data16
cmp
sbb
cmp
and
lret
pop
pop
arpl
xchg
pop
dec
out
test
jmp
pushf
xor
cmp
dec
jmp
fs
jbe
add
adc
das
push
lret
shlb
lcall
sarl
mov
dec
jl
outsb
push
pop
inc
mov
cmpsb
cmp
xchg
fcomi
fcmovb
jns
mov
sub
sbb
mov
dec
mov
outsb
mov
enter
xchg
inc
hlt
les
pop
inc
aas
cmpsl
nop
pop
stos
or
dec
std
add
fstps
stc
mov
inc
xor
aam
stc
mov
incb
pop
xchg
movzwl
in
jecxz
sbb
push
pop
pushl
cli
or
xchg
cmp
add
std
movsb
cmp
jge
arpl
add
rclb
sbb
sarl
dec
sub
imul
or
pusha
into
push
mov
nop
in
and
and
inc
scas
aad
dec
in
leave
mov
pop
dec
movsb
cmp
hlt
push
cmp
stos
aas
or
dec
movsb
mov
push
fsubl
lods
jae
shl
das
les
sbb
outsl
mov
fdivrp
scas
inc
adc
cmpsl
rcr
jae
mov
iret
push
mov
add
pop
lods
or
int3
rclb
ljmp
mov
stos
fbstp
pop
inc
les
push
push
mov
push
call
mov
jl
aam
cmp
test
std
int
mov
test
rorb
add
or
rcrl
cltd
sub
dec
cmp
jne
and
aas
push
std
or
mov
shrb
ret
mov
jle
in
fisubrs
cmpsb
adc
aam
jmp
aaa
pop
push
sbb
add
daa
cwtl
push
and
sbb
mov
dec
bound
sbb
cmp
dec
sbb
test
je
stc
call
add
dec
mov
push
repz
sbb
aad
and
mov
enter
out
dec
mov
mov
in
rcl
stos
repnz
jge
jp
rclb
outsl
pop
out
pop
jne
call
pop
pop
mov
jne
push
inc
lcall
ja
lods
pop
xor
mov
test
mov
repnz
ret
out
out
dec
mov
outsl
or
dec
je
pop
daa
lea
stos
pop
xchg
jne
mov
push
cld
ja
adc
sbb
mov
jecxz
pushf
jge
xchg
sub
lret
pop
out
and
repnz
or
mov
sarl
stos
out
ja
sti
js
inc
dec
jo
ljmp
pop
int3
pop
add
orb
fistpl
imul
jle
call
lea
dec
push
pop
jle
lret
cmp
lods
inc
xchg
dec
pop
out
std
pop
nop
aas
jb
mov
test
mov
loopne
or
and
adc
or
ja
mov
flds
cmp
aad
mov
in
js
add
enter
pop
movsb
xor
fdivrl
push
aad
xchg
pop
cs
mov
ret
ds
test
add
push
push
adc
sarb
outsb
cmpsb
insl
addb
xchg
into
push
jp
jbe
inc
hlt
aas
pop
inc
test
scas
mov
pushw
in
adc
sahf
cmpsb
pushf
lods
lahf
imul
mov
pop
js
mov
das
outsb
jecxz
test
rcl
add
arpl
repz
movsb
insl
adc
pop
dec
dec
not
testb
mov
cld
cmc
mov
push
push
fldt
stos
imull
adc
sti
push
shll
fisubs
and
or
outsl
out
and
pusha
mov
orb
mov
and
jbe
mov
add
xchg
sub
mov
fcmovb
loop
in
inc
sahf
mov
xlat
mov
xchg
jae
jo
push
mov
mov
push
js
shr
imul
ljmp
mov
cmpsl
push
adc
xchg
rol
push
rcl
jb
inc
sub
push
enter
repnz
inc
mov
mov
adc
mov
addr16
sbb
test
adc
inc
mov
mov
stos
test
je
jbe
aas
cld
fildl
push
pop
mov
insb
sbb
test
xlat
cmp
inc
jmp
jp
xor
ja
or
mov
lret
fs
jno
pop
insb
push
or
mov
loopne
mov
es
test
mov
in
pop
daa
loopne
push
js
iret
dec
mov
gs
cmpsl
inc
popf
adc
pop
xchg
pop
dec
outsb
sub
repz
push
add
movsl
loop
mov
repz
jge
jg
ret
sbb
popf
jmp
das
xchg
fwait
mov
lea
inc
sarl
mov
movhps
xor
mov
xchg
xchg
into
ja
sbb
dec
jno
stos
mov
sub
loope
add
invd
test
inc
or
cmpsb
in
xchg
pop
sub
cwtl
test
jae
hlt
sbb
dec
mov
push
ss
cmp
idiv
cmc
dec
rclb
jl
mov
stc
mov
ret
pop
cmpsb
sub
or
add
jnp
xor
lea
jbe
xchg
movsl
mov
ficompl
jbe
sub
cmpsb
mov
stos
xchg
loop
fsubr
rolb
xchg
push
inc
sub
sub
andl
ret
mov
cmc
clc
lods
adc
or
cmpsb
mov
push
jecxz
loope
cli
add
clc
outsl
in
mov
hlt
or
movups
sbb
jl
shl
lret
aas
maxps
fcomps
lds
sti
outsl
push
mov
ljmp
and
mov
dec
push
aaa
imul
lock
shl
ss
popf
xor
rcrb
scas
pop
call
je
push
pop
loop
push
rclb
dec
es
fisubs
scas
loopne
push
divl
xor
sub
mov
jle
sbb
pop
lahf
in
roll
stc
fldl
xchg
mov
pop
jae
fnstcw
sub
test
cmp
rcrl
inc
sbb
lahf
rolb
lods
fdivrl
or
cmp
scas
shl
test
repz
jmp
jo
pop
out
arpl
push
imul
and
sbb
call
mov
adc
inc
add
notw
jae
lock
lods
stos
push
mov
frstor
push
daa
push
loop
push
movsb
pop
stc
iret
mov
aas
xchg
lret
pop
mov
inc
and
scas
sub
mov
cmp
cmp
in
jo
outsb
cmp
movsl
iret
in
push
sbbb
jno
mov
inc
testb
ret
js
mov
rcrb
push
push
jmp
pop
ja
int
out
add
cmc
fldenv
mov
jle
pop
shlb
and
rol
lods
popf
inc
or
and
cld
pop
mov
fwait
and
scas
test
jb
rorb
nop
jmp
stos
inc
stc
and
fstl
and
add
iret
in
inc
push
pslld
pusha
sub
pop
inc
dec
cmpsl
or
mov
push
add
cmpsb
push
cmp
cmp
add
sbb
push
les
xchg
xchg
outsl
xchg
shrb
fs
fnstcw
lcall
stc
enter
mov
mov
push
dec
orl
inc
mov
sbb
and
hlt
adc
mov
xchg
xchg
std
gs
pop
or
clc
pop
sbb
mov
push
xchg
pop
int3
cmp
jp
push
movsl
xrelease
xchg
xchg
sahf
loope
and
scas
or
inc
adc
leave
mov
push
or
xchg
xor
add
loope
iret
imul
jno
lods
out
mov
adc
xchg
out
lock
es
outsb
push
loopne
mov
xor
movsw
mov
call
jno
mov
mov
sbb
aad
jb
pop
mov
sub
mov
mov
mov
jecxz
adc
stos
mov
xor
or
ret
sub
sub
jne
or
cltd
mov
mov
dec
lock
add
test
jno
push
shr
sub
or
ja
test
in
jecxz
iret
stc
jb
mov
sub
int
dec
lock
outsb
in
or
sahf
xchg
roll
mov
mov
mov
push
add
jmp
push
xchg
test
or
mov
sbb
sbb
test
iret
movsl
pushf
lea
adc
or
jge
hlt
roll
lahf
mov
sahf
aad
in
sbb
sti
dec
push
mov
insb
lods
jge
ret
push
sbb
daa
mov
pushf
cmp
mov
adc
mov
popa
leave
push
and
out
imul
iret
sahf
fadd
andb
test
cmp
cmp
fdivs
push
cltd
inc
xlat
jg
mov
js
fs
or
xlat
lock
sahf
lahf
cwtl
push
jp
pop
dec
out
loopne
std
aam
lahf
mov
add
push
cmp
clc
sbbb
call
int3
pop
jo
pop
pop
fnstenv
bound
maskmovq
notl
addl
and
xchg
sbbb
pop
jp
mov
and
pop
and
ljmp
jnp
pop
lcall
sbb
sbbl
loop
ss
cmc
or
dec
nop
sub
inc
sbb
mov
cmp
in
ret
xor
mov
ss
ljmp
xor
adcl
xlat
movb
pop
ljmp
insb
xchg
adc
lcall
mov
in
test
mov
je
push
cmp
jnp
es
pop
cmpsb
pop
loop
insb
sbbb
sbbl
jge
dec
stc
pop
mov
popf
jmp
out
sbb
add
sbb
push
pop
pop
inc
mov
lods
cld
fs
scas
pusha
pop
in
jno
lahf
test
inc
enter
sti
nop
out
scas
adc
insl
shll
push
push
addr16
movsb
xchg
jg
outsb
icebp
mov
or
inc
add
cltd
cwtl
inc
adc
pop
jb
sub
out
cmc
and
pop
sbb
movsl
xchg
push
cwtl
cs
dec
inc
xor
add
adc
sbb
stc
scas
out
lods
inc
hlt
imul
xor
mov
roll
jge
add
cs
popf
gs
push
or
sub
or
cmp
cmp
xor
sub
scas
std
out
cltd
repz
pop
jne
mov
xlat
add
mov
inc
sarb
jnp
adc
int
lock
in
mov
pop
push
mov
xchg
mov
push
test
repnz
cli
mov
mov
jl
lock
xchg
or
cmp
add
jnp
addr16
mov
mov
jge
cli
xchg
aam
iret
stc
scas
mov
cli
dec
cmc
pop
push
cmp
mov
testb
adc
movsb
imul
mov
into
loope
insb
cmp
jl
jnp
negl
ds
orl
pop
pop
jge
dec
mov
shll
jo
test
jg
iret
scas
lods
pop
dec
xchg
mov
xor
repz
add
mov
cmp
sbb
cmp
call
lcall
ds
sub
push
mov
inc
sti
mov
mov
jnp
mov
andl
scas
add
cmp
sub
or
lahf
mov
jnp
lret
pop
xlat
dec
mov
xchg
dec
fcoms
sarb
test
xor
insb
mov
bound
or
jnp
sbb
lds
sahf
push
cld
test
in
ljmp
dec
test
scas
mov
and
in
pusha
inc
pop
sbb
sub
xchg
inc
mov
ljmp
xor
es
mov
pop
ret
test
popf
mov
scas
fidivs
test
fists
adc
fs
sbb
xchg
jnp
pop
insl
jle
hlt
pop
pop
rcrb
cmp
push
insl
pushf
shrl
xchg
lret
fbld
push
decb
leave
test
and
lock
xchg
push
out
daa
lcall
lea
imul
push
xor
ljmp
daa
xor
sbb
cltd
fdivrs
and
out
sarl
test
das
cld
jmp
daa
icebp
fimull
jbe
addr16
rorb
lds
and
rorl
jb
popa
or
in
and
cmpsb
cltd
cli
mov
cmpsl
or
lods
insl
inc
mov
xchg
dec
dec
xor
gs
aas
inc
cmp
lret
and
scas
fmull
enter
inc
pop
lods
push
jge
push
xchg
sub
mov
cmp
cld
add
xchg
cmpsb
outsb
dec
ds
lret
dec
mov
cmc
imul
mov
cltd
and
dec
decl
sbb
setne
cmp
lret
mov
imul
adc
out
xchg
inc
xchg
jbe
divl
adc
adc
je
jge
icebp
xorb
cs
mov
hlt
pop
cwtl
les
mov
nop
xlat
pop
mov
in
mov
mov
mov
xchg
fsub
xchg
or
daa
and
xor
adc
arpl
dec
std
sarb
inc
sub
scas
mov
cmp
jne
push
sbb
cmc
cwtl
cmp
lcall
in
sub
sub
fcmovu
movsb
dec
adc
xor
jecxz
add
in
lods
mov
in
test
pop
mov
mov
xchg
pop
xchg
xchg
ret
outsb
pop
mov
xchg
inc
pop
mov
das
pop
repz
push
and
imul
in
testl
push
push
popa
xor
jo
jnp
sub
leave
loope
jp
jle
sub
sbb
fimuls
ljmp
lods
mov
int3
jno
push
inc
cmp
sub
movsb
push
jp
mov
hlt
cmp
cld
fsubs
sbb
pushf
test
add
push
or
jl
dec
int
popa
pop
push
mov
lods
inc
aaa
out
dec
scas
inc
addb
cmp
push
jb
xor
pop
inc
ret
in
popf
or
sub
imul
or
in
les
stos
pop
push
and
icebp
fcoms
and
addl
adc
imul
and
push
fiadds
and
jl
push
push
sbb
out
testb
dec
pop
dec
lds
xchg
in
cmpsl
cmpsb
pop
xchg
mov
pop
loop
xor
adc
add
sbb
ljmp
fisttps
sub
addr16
pop
popf
sub
mov
mov
inc
sub
ret
sub
outsl
mov
xchg
stos
adc
inc
in
and
ss
rcrl
mov
mov
xchg
sbb
lods
mov
pcmpeqb
enter
xor
and
sub
push
pop
sub
mov
daa
dec
mov
daa
sub
fidivl
pop
xchg
xlat
cmp
mov
and
scas
pop
rorb
xor
fimull
inc
cmp
out
sbb
std
or
loop
push
mov
mov
adc
pop
subl
mov
fcomps
stos
out
or
adc
stc
mov
sbb
pushf
ljmp
jle
mov
mov
aad
shrb
icebp
in
aam
and
imul
daa
mov
nop
and
aaa
sahf
or
cmp
xor
es
rcrb
push
inc
aas
aad
cmc
xchg
mov
mov
push
pop
push
pop
out
in
sub
cmp
add
cmpsb
mov
sub
jmp
orl
mov
imul
and
push
out
jbe
fcmovb
adc
push
jg
mov
shl
aas
enter
outsl
stos
or
js
cmpsb
test
push
and
mov
mov
xor
push
mov
xor
mov
out
ja
or
and
cmp
hlt
arpl
test
add
add
inc
into
ffreep
ljmp
cmpl
dec
add
sahf
cltd
fistps
sti
mov
push
int
inc
loopne
cmp
add
xor
fcom
movsb
pop
nop
aas
repnz
pop
mov
dec
add
push
push
sahf
dec
jnp
mov
subb
jmp
pop
sti
and
push
dec
jl
js
imull
adc
je
call
cltd
stos
out
cltd
outsb
xor
inc
mov
lahf
jl
cmpsl
inc
fistps
cltd
lods
ljmp
push
or
dec
stc
js
cmp
int
stos
push
mov
repnz
loop
fldl
sbb
xchg
jnp
scas
inc
shlb
dec
call
and
out
mov
stc
out
out
push
sahf
sub
push
fldt
cwtl
ret
mov
pop
or
xor
imul
nop
loop
jl
xorb
xor
and
call
shl
lea
pop
pop
inc
mov
xchg
movb
ret
adc
insl
addr16
mov
adc
mov
aad
xor
pusha
arpl
jb
adc
xchg
ds
data16
into
push
sub
fsubp
lcall
call
and
je
loopne
jl
bound
push
jns
and
pop
adcl
add
pop
std
xchg
outsl
test
mov
jg
xor
cld
cmovbe
inc
push
push
ret
xchg
subl
pop
addr16
cmp
push
push
rol
xchg
fistps
lea
ss
pop
dec
sbb
aas
cmp
push
movsl
icebp
cmpsb
std
sub
mov
cmc
insb
push
fidivrl
les
pop
lret
pop
mov
lcall
orl
das
dec
repnz
ds
push
ret
int
or
ljmp
call
mov
addb
lahf
adc
sub
shll
lret
pusha
pop
test
pop
pop
lret
push
repnz
dec
mov
mov
mov
and
fisttps
mov
push
push
aaa
mov
mov
xchg
mov
test
xlat
pop
and
cli
xor
pushf
add
clc
adc
hlt
ret
iret
testb
pushl
addr16
or
dec
xor
adc
rolb
clc
jo
call
out
shll
mov
ljmp
cmpsb
adc
pop
ljmp
dec
ja
sub
mov
mov
test
dec
les
xacquire
xchg
in
cltd
dec
fsubrs
std
das
or
push
adc
push
sbb
push
cmp
dec
pop
dec
lods
inc
rcrl
push
sub
outsb
insl
repnz
mov
xor
xor
out
adc
cmpsb
lret
movsb
sahf
adc
lret
and
and
in
or
mov
fidivrs
stos
fwait
addr16
lea
jb
cli
aas
outsl
aas
sahf
aad
dec
sub
lcall
sub
insl
std
dec
adc
push
mov
mov
divb
add
mov
movsb
xor
pushf
insl
test
jl
stc
sbb
add
test
push
outsl
dec
ds
idivl
cwtl
sbb
ret
jnp
loopne
test
in
add
fcomip
jns
ss
or
push
or
pop
sub
fld
jge
in
mov
pop
mov
fcoms
push
push
sbb
mov
fmul
dec
pop
adcb
push
imul
mov
mov
mov
ss
ljmp
lods
imul
and
jecxz
std
push
shl
xlat
imul
mov
xchg
cli
mov
mov
scas
cmp
call
fistpll
pusha
pushf
into
pop
ljmp
mulb
sub
cmp
ja
sbb
es
aas
xor
and
push
out
sub
xor
push
adc
faddl
xchg
jb
add
loope
adc
jo
insl
sti
cmp
pop
cmp
mov
lock
xlat
push
mov
pop
iret
push
ficomps
es
gs
sbb
fwait
inc
push
xor
ret
and
aad
inc
rol
loop
xor
mov
pusha
sarl
ret
add
outsl
mov
cli
jp
push
gs
sbb
inc
xor
pusha
push
movsb
mov
jo
ficoml
add
icebp
dec
mov
addr16
push
iret
mov
inc
lahf
inc
stos
inc
ss
in
xchg
mov
xorl
sub
and
out
push
arpl
call
cmp
rcrb
cmpsb
sub
add
out
nop
and
std
mov
sbb
ja
js
pop
mov
in
xor
mov
push
cld
loope
aam
stos
mov
insb
jns
mov
int3
or
push
movsb
inc
leave
std
jge
inc
gs
loopne
cmp
add
push
mov
sub
pushf
int3
movsl
shrb
shl
push
imul
mov
add
cmp
and
lea
jb
jb
je
sbb
inc
mov
fs
cmp
popf
push
orps
push
imul
xchg
jmp
adc
jb
jbe
push
mov
out
leave
repz
pusha
test
ss
lods
pop
inc
hlt
or
fcoms
mov
or
dec
daa
filds
pop
push
or
or
imul
jbe
jecxz
adc
xchg
push
pop
ret
in
inc
mov
lods
and
test
dec
stos
mov
bound
aad
push
mulb
mov
pop
xchg
xor
xlat
mov
fwait
inc
test
ja
adc
dec
jns
fcoml
push
mov
mov
rcll
inc
sbb
lahf
adc
dec
and
ds
mov
add
test
mov
jecxz
lret
lret
push
xlat
dec
pop
fcoml
dec
mov
jg
cltd
cmp
cli
mov
hlt
adc
and
xchg
mov
loope
int3
lret
div
push
int
xor
pop
pushf
sub
movsb
hlt
dec
cmovae
repz
in
stc
imulb
rolb
fstpt
sbb
pushl
jle
stc
add
imull
dec
in
cmp
and
push
xchg
xlat
cmp
add
es
cmp
jge
jl
xor
sbb
jle
sbbl
repz
emms
cmp
aas
add
rolb
es
inc
dec
xor
push
mov
aam
jmp
into
mov
aaa
mov
rcll
push
mov
sbb
add
mov
mov
jns
mov
addb
and
pop
lret
add
push
sub
and
je
test
loop
sbb
xlat
sub
or
fcmovnbe
fld
pusha
daa
mov
hlt
dec
lret
add
lods
sub
test
dec
pop
mov
dec
pop
jl
stc
lret
mov
sbb
shl
les
test
adc
enter
nop
mov
xlat
push
ficoml
fists
cld
push
lcall
adc
pop
push
bound
sbb
imul
xor
mov
pop
in
xor
jno
arpl
mov
jnp
jno
das
es
and
inc
std
shlb
outsb
daa
cmp
shll
inc
xor
loop
out
in
push
push
add
jg
lock
insl
pop
aad
out
jae
iret
dec
arpl
fsubl
and
jns
imul
xchg
jnp
xchg
sbb
pop
sbb
fdivl
pop
mov
aas
aad
lahf
in
sub
fsubrp
movsl
roll
leave
sbb
push
cld
insl
repz
ljmp
xchg
mov
lahf
jl
push
aas
mov
push
xchg
lcall
inc
jb
push
xchg
adc
dec
fcomps
cwtl
add
nop
std
and
mov
mov
sub
movsb
push
scas
adc
or
test
adc
shrl
in
or
out
les
push
scas
dec
das
pop
jge
dec
push
cmp
scas
subl
and
repz
mov
fsubs
lret
shrl
pop
fimuls
xor
adc
sbb
xchg
or
sub
mov
data16
rcrb
sub
mov
int3
inc
adc
wbinvd
inc
dec
mov
fisubl
adc
rol
jno
push
stos
clc
repnz
subb
iret
pop
push
cmpsl
je
loopne
scas
sarb
pusha
mov
cmp
ja
push
flds
lahf
inc
mov
mov
pop
test
inc
mov
lcall
ljmp
jne
scas
loopne
ret
cmp
cmc
jl
jbe
jmp
sub
lea
pop
cmp
jecxz
add
ret
xor
scas
add
out
popa
mov
push
mov
or
clc
mov
or
arpl
xor
cmp
add
xchg
daa
das
in
ss
dec
test
cmp
sbb
out
xlat
frstor
dec
rorl
sub
lea
add
mov
gs
pop
jb
xchg
xor
adc
push
jo
jo
and
cwtl
jg
jge
and
movsb
cmp
call
call
and
push
out
push
lcall
rorb
xlat
push
outsl
insb
or
and
add
lods
dec
std
cmp
mov
jae
jo
jge
xor
cwtl
stos
sub
push
dec
js
imulb
aaa
cld
shl
mov
push
mov
arpl
cmp
jno
xor
add
lret
inc
adc
push
push
test
popa
inc
fmuls
fists
inc
push
xchg
aas
inc
out
xchg
xchg
fcomp
push
jns
mov
jns
mov
shr
push
sar
enter
jl
mov
js
test
cmp
fidivrl
popf
cmp
ljmp
and
fucom
adc
inc
lds
xchg
add
addr16
mov
jo
mov
repz
mov
test
adc
iret
in
xchg
xor
xlat
andl
adc
out
rcrb
lock
xchg
push
push
cmp
shll
icebp
orb
pop
push
sbb
sub
mov
fs
cmp
sbb
repnz
sbb
jbe
inc
stos
sub
and
and
mov
aad
or
adcb
sub
inc
in
aaa
inc
push
movsl
ss
movsb
in
lods
jmp
in
addr16
adcl
js
push
aam
and
lcall
scas
dec
mov
arpl
hlt
repz
push
loop
out
pusha
pusha
mov
loope
adc
loopne
or
jo
and
or
mov
imul
mov
sbb
hlt
bnd
sub
push
adc
out
mov
inc
loopne
mov
jge
jge
lods
stos
inc
hlt
adc
mov
rorb
sbb
sarb
clc
ljmp
push
mov
xor
jmp
lea
lret
mov
pop
loop
ficompl
pop
arpl
xchg
out
inc
fnstenv
xchg
mov
clc
cmp
aaa
push
call
jnp
xor
fmuls
cmp
inc
jp
push
jnp
mov
sbb
insl
lret
cwtl
xor
mov
ss
mov
or
ror
sbb
inc
or
xchg
mov
jns
cmp
lock
mov
push
dec
adc
mov
cs
inc
mov
ljmp
adc
pop
inc
xchg
mov
cwtl
sbb
jp
aaa
push
fs
add
push
add
aad
mov
in
dec
pusha
addr16
repz
xor
pop
or
test
sub
mov
dec
sub
mov
call
lock
in
sbb
cwtl
adc
jns
pusha
stos
fdivr
cmp
sbb
fwait
lea
adcl
and
jmp
add
cs
sbb
movsl
cmp
fistps
mov
jg
stos
fldcw
imul
push
adc
test
push
xor
sahf
dec
xchg
rcrb
add
scas
xchg
cmp
sbb
jl
mull
xlat
mov
stos
fwait
out
add
mov
jbe
adc
jns
scas
les
sub
xchg
adc
xorb
outsl
out
addb
arpl
and
xor
outsb
and
or
gs
sub
fisubrl
std
test
subb
mov
jmp
pushf
aam
jno
dec
mov
popf
daa
call
xchg
add
pop
mov
cmc
mov
cmpl
dec
vcmpss
negl
push
stos
aad
add
adc
inc
rolb
push
sub
cmpl
lret
mov
jbe
mov
adc
xor
pop
out
js
fnstsw
mov
icebp
cli
mov
mov
sbb
out
add
mov
xchg
fs
mov
ja
in
adc
out
jo
scas
jp
cltd
out
xchg
and
jecxz
pop
adcb
push
inc
out
or
rorl
rol
fisubrs
push
cmp
out
subl
sbb
aam
negl
sbb
loop
sub
int3
jne
inc
sbb
pop
shlb
push
subl
mov
jg
push
jae
jbe
mov
jnp
push
in
lock
aam
fcmovbe
cli
js
xlat
movb
push
popa
daa
es
mov
sub
dec
dec
je
movsb
sbb
sahf
out
leave
add
das
lods
cmp
inc
xlat
sahf
sub
fnstenv
aad
pop
mov
cmp
std
pop
xor
rcrb
subl
xor
flds
jle
jl
jg
jne
sahf
fldenv
ret
jmp
enter
lret
jae
test
and
jl
mov
ret
push
lahf
popa
test
sarl
test
cs
dec
push
xchg
push
cmc
jb
xchg
dec
pusha
push
loop
ljmp
in
jge
ljmp
xchg
and
std
jb
pop
push
add
add
shrb
sbbb
fistl
pop
jbe
or
cmp
das
push
mov
lret
ds
xchg
in
hlt
les
pop
dec
repz
cli
jb
jo,pn
or
dec
add
shrl
jp
aad
adc
movsl
push
scas
stos
jg
pop
pusha
inc
pop
jo
pop
addr16
cmp
or
fs
push
mov
sbb
jns
data16
dec
push
push
jle
leave
test
hlt
mov
scas
shl
stos
mov
mov
xchg
int3
sahf
clc
in
sahf
mov
mov
mov
xor
das
add
add
adc
filds
mov
xchg
pop
add
sti
pop
insl
push
stos
fists
and
lods
int3
out
out
aad
cli
push
or
xor
xchg
fldl2e
sbb
xor
call
stos
jae
mov
clc
fmuls
sub
rolb
xchg
xor
gs
mov
test
sub
xor
mov
jl
testb
push
inc
adc
int3
jp
call
aaa
lahf
ds
rclb
out
mov
fwait
dec
out
movsl
lds
mov
aam
push
rcrb
or
pushf
mov
ret
movsl
jae
adcb
in
aaa
scas
jo
cmpsl
arpl
mov
out
out
jp
sti
and
ret
inc
and
jae
inc
addr16
cltd
sub
frstor
int3
adc
xor
and
sub
pminsw
and
jg
mov
mov
loop
jecxz
pop
shrb
jbe
test
adc
rcrb
dec
aaa
xchg
daa
fsubrs
bnd
in
xor
or
test
cmp
and
outsb
xchg
mov
pop
dec
pop
rcll
and
jmp
loope
pop
je
push
dec
data16
adc
push
adc
sbb
fnstcw
adc
and
jb
ja
jecxz
mov
push
cmpsl
jecxz
mov
cmp
xchg
and
add
pop
mov
fcmovb
mov
sbb
movsb
iret
pop
push
xchg
push
or
inc
into
rol
sbb
clc
fidivs
icebp
push
adc
leave
add
jg
sbb
xchg
mov
or
out
mov
mov
pop
cmpsb
stos
ret
fistpll
jbe
push
add
add
push
jge
ja
mov
mov
sub
ds
scas
outsl
xor
test
stos
fnstenv
xchg
cmp
pop
dec
xor
jecxz
out
pushf
cs
xor
into
sub
loope
and
outsl
push
je
mov
cmp
jo
jno
pushf
imul
push
sbb
pop
bound
and
arpl
inc
cli
pushaw
mov
cmpl
mov
outsb
lcall
push
inc
flds
dec
inc
fwait
test
push
inc
mov
or
and
and
mov
daa
xabort
call
test
lcallw
fdivl
cmp
pop
out
fsubl
dec
and
lahf
test
jnp
xchg
popa
mov
out
scas
pushf
cli
mov
movsb
or
popa
add
jnp
adc
imul
das
lahf
push
out
and
adc
lret
jbe
popf
fldl
push
adc
inc
and
loopne
pop
frstor
scas
push
out
mov
mov
cmp
mov
mulb
mov
addl
mov
mov
rorb
xchg
cmp
pop
adc
shll
xchg
lahf
jne
cmp
lods
int
jae
outsl
add
std
or
cmc
clc
inc
loop
adcl
push
insl
add
push
xchg
xchg
imul
cwtl
push
cli
xchg
mov
in
ds
scas
test
sti
or
lcall
add
mov
pop
adc
xchg
sbb
and
lods
ljmp
bnd
xor
test
subb
xor
push
jb
sbb
add
add
push
sbb
sbb
and
das
outsl
dec
xor
inc
aam
push
jg
das
insl
cli
lea
movsb
inc
inc
mov
pop
push
clc
adc
jg
jecxz
jne
cld
mov
rclb
sub
push
mov
mov
hlt
mov
pop
fisubs
push
outsb
adc
pop
shrl
xchg
int3
repz
lcall
fcom
aaa
in
mov
dec
ret
mov
adc
sub
arpl
add
mov
jge
in
jb
push
sbb
mov
test
fbstp
push
xchg
sbb
jnp
or
daa
pushf
shl
aam
into
mov
les
lcall
inc
rol
loopne
addr16
dec
jle
insb
push
add
shrl
popf
adc
mov
and
mov
cltd
cltd
mov
xchg
test
xchg
jno
fdivs
mov
cmpsl
dec
in
inc
flds
push
gs
and
push
idivl
push
in
push
outsl
enter
test
test
jns
call
stos
out
mov
dec
cltd
orl
ljmp
data16
or
jns
dec
cli
fimull
cmp
rorl
out
add
mov
inc
sbb
xor
xchg
sbb
cs
xchg
push
sub
orl
xor
mov
sub
mov
fstps
addr16
popl
into
mov
jnp
loop
jl
ja
mov
jecxz
and
pushw
mov
add
aad
mov
dec
daa
mov
adc
xor
jle
pop
dec
icebp
jle
jp
in
hlt
mov
adc
mov
hlt
roll
dec
and
pop
nop
add
lods
mov
xchg
fpatan
fdivrs
mov
jmp
test
movsb
push
sub
ljmp
mov
pop
mov
mov
and
pop
lret
adc
test
mov
cmp
add
stos
mov
lret
cs
inc
or
push
data16
push
pop
or
stc
sub
mov
movsb
out
dec
mov
adc
movsl
inc
or
test
push
or
xchg
cld
pop
fcmovne
jb
xchg
int
je
imul
and
adc
cltd
jnp
xor
jno
call
push
rcrl
sbb
sbb
pop
mov
lcall
xchg
out
jl
mov
mov
mov
push
int
call
xchg
cmp
cmp
in
incl
push
or
and
fisubs
push
js
sub
int3
movsb
daa
cs
ror
mov
dec
inc
mov
divl
imul
xchg
shlb
loop
mov
xor
mov
test
push
inc
std
lahf
add
jle
add
add
rep
int
cmpsb
lea
iret
xchg
test
jnp
loop
sub
adc
stos
into
insb
adc
dec
push
mov
adc
cmp
rcll
lahf
pop
mov
xchg
xor
push
push
mov
adc
pop
mov
lea
dec
in
sbb
fstpt
outsb
and
scas
ss
pusha
mov
imull
fcompl
sub
loop
sbbb
sbb
test
popf
js
dec
fs
xchg
jnp
or
daa
push
add
mov
cld
cwtl
jecxz
jp
loope
jo
lahf
hlt
push
add
icebp
xchg
inc
mov
dec
movsb
mov
mov
and
cmpl
test
inc
popa
addl
jmp
add
push
pop
mov
loope
mov
bound
mov
jne
adc
adc
rcr
loop
push
js
pushf
xchg
xor
rol
xchg
dec
rcll
pushf
insl
jns
shrb
mov
rorl
adc
jnp
inc
push
outsl
orb
add
dec
dec
mov
cmp
cmp
and
or
repz
lock
in
in
sub
jnp
push
dec
cli
cmpsl
cmp
inc
hlt
cltd
sbb
mov
xchg
xchg
push
xchg
and
add
mov
pop
lods
and
lds
jb
mov
cmp
jns
mov
mov
pop
bound
jns
xor
mov
xor
stos
jbe
jge
fiaddl
jmp
inc
in
daa
cmp
dec
addr16
or
enter
cwtl
mov
call
adc
mov
push
mov
push
cli
shll
push
rcr
imul
add
sub
fnsave
adc
outsl
jo
imul
nop
stos
popf
dec
lds
xchg
inc
stc
out
mov
lret
mov
pushf
loopne
sub
jbe
addw
push
popa
rcl
mov
popa
cmc
clc
stc
roll
aad
add
cmp
adc
cmp
xchg
xchg
fdivrs
add
cld
inc
call
push
jmp
dec
loop
inc
or
jnp
xchg
push
int
repnz
into
nop
mov
adc
ljmp
sti
roll
inc
push
aam
pop
loop
es
cld
rorl
dec
es
std
pusha
stos
mov
pop
aas
cwtl
cmc
xchg
xchg
pop
push
sahf
xchg
xchg
sub
xchg
insb
cltd
imul
jecxz
sbb
rcrb
loope
xchg
add
cmp
outsl
filds
lock
sbb
mov
mov
push
cmp
xor
dec
jbe
ja
mov
imulb
data16
push
mov
pop
out
sub
mov
pop
fcmovb
xchg
xchg
adc
loop
add
mov
xchg
aad
lret
out
int
fs
fadds
push
pop
mov
push
pop
mov
std
mov
pop
es
js
sub
inc
out
cmp
outsb
dec
test
xchg
mov
loopne
xchg
xchg
scas
pop
inc
sub
test
or
je
cmp
push
fimull
add
data16
fsubrp
xorl
sub
push
fcomps
hlt
aam
or
pop
dec
push
inc
mov
push
xchg
add
insl
or
pop
aaa
push
dec
mov
mov
and
or
jb
aad
hlt
ja
push
push
sub
inc
je
pop
mov
mov
dec
mov
fildl
leave
jb
inc
add
aas
jecxz
dec
sbb
clc
xor
dec
sub
jp
sahf
inc
or
cmpsb
pusha
lcall
cld
cmp
mov
adc
sahf
cs
push
jne
test
mov
dec
stc
mov
ror
icebp
cmp
dec
mov
fldcw
ret
sbb
dec
test
cmp
jle
push
sbb
mov
fucomi
aam
mov
pop
pop
imul
sub
pop
das
mov
push
adc
push
jne
mov
stos
inc
mov
scas
mov
sbb
popf
xor
push
sub
test
cmp
imul
cltd
shr
in
add
mov
outsl
in
pop
sti
stc
test
add
cltd
push
add
shlb
push
mov
adc
add
lds
inc
mov
push
jbe
pop
mov
adc
jb
mov
ror
mov
lret
jno
fucomp
cmp
gs
js
icebp
aad
mov
cmp
aam
mov
cs
add
enter
push
jle
cmpb
popa
cmp
jg
hlt
out
or
sub
mov
mov
fildl
arpl
jne
pushf
pop
inc
idivl
add
leave
fdivrl
pop
sti
popf
lret
mov
lods
sub
sub
xchg
push
mov
scas
fsts
or
mov
push
mov
pop
fistpl
mov
pop
ds
gs
push
addb
in
xchg
sti
adc
test
jecxz
or
insl
mov
pop
repz
out
adc
je
push
mov
pop
call
repz
stc
xchg
pop
add
mov
leave
jmp
mov
rclb
xchg
filds
fwait
push
das
hlt
in
imul
cmpsl
or
and
nop
xchg
stos
or
mov
aam
ret
das
js
dec
gs
psubusw
adc
mov
fucomp
scas
mov
out
push
fcoms
in
lea
add
fisubs
ret
xor
in
ljmp
sbb
jns
xchg
inc
cmp
jae
test
int3
jno
xchg
mov
and
mov
inc
test
inc
mov
fscale
lcall
out
insl
dec
mov
jmp
mov
mov
in
arpl
arpl
rolb
cmp
inc
push
flds
cmc
push
sbb
xor
jmp
or
sbb
mov
rcrb
xor
repz
mov
mov
enter
push
xchg
push
jns
cmp
addr16
test
push
xchg
jmp
adc
daa
stc
xor
or
icebp
dec
push
sbb
sbb
addr16
pusha
stc
cmp
xchg
dec
sbb
dec
adc
ss
adc
fsubl
js
xchg
or
int3
cmp
test
mov
cmp
xchg
movsb
cmp
push
cmpsl
pushf
and
outsl
mov
fcmovnb
rclb
fnsave
xchg
fwait
pop
push
mov
movsb
js
jnp
mov
mov
mov
je
sbb
pop
sahf
adc
xchg
out
std
pop
add
add
jb
lcall
mov
mov
test
ss
aaa
ret
xchg
pusha
mov
push
jno
in
jae
add
pop
hlt
xchg
in
out
call
test
push
xchg
hlt
adc
out
dec
pusha
rorb
xchg
in
inc
or
fdivl
scas
cmp
jg
clc
insl
jbe
pusha
loope
aas
mov
sub
xor
pop
push
pop
mov
ljmp
pop
in
jp
mov
adc
push
dec
jmp
and
push
jecxz
pop
movsb
jle
jl
arpl
loope
and
ja
shll
mov
pop
dec
ljmp
out
and
sarl
jnp
or
aad
mov
pop
inc
add
movsb
imull
test
pop
into
or
dec
fnstsw
stos
loopne
adc
dec
pushf
lods
sub
push
aaa
cmc
xor
fadds
pop
in
jno
pop
shlb
outsb
pop
add
hlt
or
pop
mov
xor
in
mov
loopne
cmp
std
xchg
mov
jecxz
aad
sub
push
call
fisubrl
adcb
mov
adc
pusha
jg
mov
repnz
dec
js
xor
adc
and
daa
and
pop
popf
ljmp
cs
imul
in
pop
stos
popf
fucomi
mov
inc
fs
lds
rcr
mov
mov
jl
or
mov
addr16
ss
in
cwtl
add
lods
add
jmp
stos
mov
js
jg
pushf
frstor
xlat
insl
fdivr
gs
xor
or
std
mull
enter
dec
int3
nop
mov
popa
inc
vunpcklps
push
pop
mov
data16
imull
imul
popf
mov
enter
or
mov
dec
iret
incb
mov
lods
mov
pop
into
or
pop
fdivs
scas
mov
inc
jae
jmp
addr16
shrb
mov
sub
mov
sub
mov
test
ret
add
mov
outsl
cmp
mov
idivb
jns
lcall
sahf
jne
or
lea
loope
add
pop
pop
in
jno
iret
sub
mov
push
dec
insb
cmp
mov
pop
xchg
jno
lea
out
mov
hlt
fdivrs
jnp
out
andl
push
pop
sub
pop
jnp
xchg
test
sbb
aad
addr16
clc
rorb
push
add
aas
aaa
push
icebp
or
out
or
jno
dec
inc
ficoms
dec
cwtl
adc
fs
push
push
cmc
rcr
int3
jne
push
fdivr
daa
movl
dec
mov
jno
mov
call
insl
jg
into
mov
pop
add
xchg
cmp
mov
je
fstpt
out
adc
out
adc
pop
jge
mov
mov
fisttpl
adcl
ljmp
or
das
pusha
push
lods
and
jl
or
or
lods
lock
lret
mov
inc
mov
imul
adc
loopne
mov
sub
add
push
xor
out
leave
fs
xchg
mov
pop
dec
outsl
mov
es
hlt
out
into
sbb
stos
xor
mov
orb
mov
lret
mov
jns
inc
add
lds
in
cmp
sbb
or
pop
aaa
pop
push
mov
sbb
adc
ja
fisubs
jns
mov
or
aam
insb
inc
ds
mov
mov
cmp
mov
imull
mov
fs
and
and
xchg
xlat
idivb
insl
pop
add
lds
mov
push
push
or
decl
jge
mov
inc
ja
bound
inc
add
dec
dec
test
addl
lock
pusha
out
movsl
pop
enter
xorb
dec
add
pop
dec
les
decb
loopne
mov
sub
fwait
xor
out
and
iret
insl
loop
mov
scas
lret
sub
and
push
mov
mov
jo
cmp
adcl
lds
jb
jae
bound
jle
xchg
add
xor
cmpsl
mov
movsl
fs
outsl
xchg
sahf
adc
xor
jmp
xor
xchg
imul
jmp
inc
pop
push
mov
push
xlat
mov
lods
sub
out
or
bound
fs
mov
arpl
mov
inc
nop
xchg
out
mov
jo
sub
mov
mov
adc
xor
shrl
mov
mov
sub
sbb
or
sub
mov
js
cmp
mov
outsb
pushf
xor
rep
pop
cmp
fistpll
cwtl
hlt
mov
sub
cltd
sbbl
or
rcl
sub
addb
cld
shlb
push
or
repz
out
inc
rorb
inc
pop
adc
sarb
cmp
leave
pop
andb
adc
fcmovb
adc
or
in
dec
pop
in
ret
jo
sarl
mov
das
or
push
ja
fimuls
adc
aas
and
iret
stos
movsw
addr16
enter
mov
lock
shrl
cld
jg,pn
adc
es
testl
xchg
xlat
mov
jo
or
push
push
add
pop
xchg
adc
dec
sub
cmp
insb
jo
js
scas
add
dec
aam
and
add
fwait
aad
stc
mov
pop
shrl
in
je
push
cmpsl
pop
stos
xchg
adc
and
inc
pop
in
push
xchg
dec
jmp
call
aas
iret
sbbb
adc
call
xor
std
sbb
int
dec
or
insl
addr16
insb
add
add
cmp
pop
jnp
in
push
aad
inc
pop
and
adc
subl
mov
aas
mov
dec
mov
sub
lret
scas
testl
or
adc
aas
push
mov
and
cltd
aas
rcll
cltd
stos
sub
cmpsl
jl
sbb
xchg
mov
outsb
test
pop
lret
fwait
push
jmp
in
cmp
jb
fmuls
pop
cwtl
into
jmp
outsb
int
std
inc
int3
or
pop
push
mov
cwtl
aad
push
cmp
jge
or
jle
mov
jp
xorb
jno
cmp
mov
in
xchg
inc
movsb
pop
mov
pop
mull
adcb
lret
xchg
stc
jnp
aad
mov
pop
clc
adc
icebp
out
scas
mov
mov
dec
in
insb
sti
xor
push
sub
push
jns
fbstp
xor
xchg
dec
adc
pop
shlb
nop
sbb
fsubrp
or
sti
test
mov
cmpsb
mov
xlat
cwtl
adc
int
hlt
and
test
pushf
loopne
popa
dec
mov
or
inc
mov
cli
in
push
pop
push
mov
jno
inc
fcom
shrl
cld
or
fistpll
lahf
mov
das
pop
movaps
out
shll
call
dec
clc
add
cmp
dec
jmp
jp
dec
frndint
xchg
daa
push
jns
add
stos
xchg
outsl
xchg
aam
imul
bound
cltd
xor
xchg
lcall
hlt
cmpsl
add
pop
dec
aam
jbe
dec
jmp
and
lret
pop
dec
int3
stos
pop
addr16
xchg
les
pop
fmull
mov
fisttps
dec
xchg
fldcw
push
shrb
push
lcall
ret
push
cmp
ss
jbe
and
cmp
int
inc
daa
aas
int
mov
rol
push
stos
jg
pop
sub
popf
sbb
sbb
icebp
sub
jmp
fistps
ret
fdivrl
mov
orb
out
push
rorb
and
mov
insl
inc
fisttps
mov
pop
movsb
loopne
fmull
jno
mov
jmp
lods
cmp
ret
push
insl
jns
fcomps
clc
addr16
repnz
cmp
icebp
add
cmc
mov
cltd
int
test
lahf
movsb
push
rcr
or
xlat
mov
add
mov
cmc
ja,pn
nop
cltd
addr16
cli
push
jl
xchg
outsl
mov
adc
int
sbb
dec
and
iret
aaa
inc
sbb
or
fwait
push
jbe
mov
mov
sub
cmp
pop
shl
pop
shll
aas
pop
push
mov
mov
pop
pop
stos
push
mov
xor
push
add
push
push
push
rcrb
and
loopne
inc
ja
sbbl
xlat
and
mov
push
popf
aam
jle
sub
or
dec
add
jbe
xor
cmp
sbb
lods
ret
imul
push
lock
iret
test
movsb
sub
and
inc
outsb
lds
mov
add
jg
cmpl
lods
cld
xchg
add
push
in
jns
inc
mov
rcrb
cld
cmc
cmpsb
pushf
scas
xchg
daa
leave
mov
mov
lahf
xlat
aam
dec
xchg
and
jns
adc
pop
inc
lret
pavgb
xor
xor
rclb
insb
scas
outsl
mov
push
jg
aaa
rcl
lea
lea
and
pushaw
xlat
pop
fcoms
or
in
repnz
shl
sub
inc
outsb
push
arpl
clc
adc
sub
data16
filds
push
out
mov
mov
xor
inc
cwtl
fisubrs
lock
inc
mov
push
into
loop
and
test
xchg
push
pop
sub
lea
popf
fidivrl
inc
xchg
mov
sbb
jno
int3
pushf
dec
mov
sti
cmpsl
xchg
stc
fistl
or
shl
add
aam
ret
in
sub
cmpsl
cmpsl
jns
pop
daa
stc
hlt
ja
sbbl
adc
mov
lret
jo
sbb
or
cs
and
fimull
mov
or
jge
in
pop
lea
xchg
clc
xchg
sbb
pop
pop
add
ljmp
ss
outsb
push
jl
mov
sub
cmc
inc
lahf
cmpsb
fnsave
or
adc
vmptrst
daa
sub
loope
in
jbe
cs
adc
xlat
mov
cmpsl
rcrb
fidivrl
ret
xchg
imul
aas
mov
push
inc
lcall
les
cmp
fwait
sub
lcall
mov
xchg
xor
pop
jmp
jmp
mov
out
mov
mov
les
dec
inc
mov
mov
insl
dec
or
xor
mov
and
or
roll
fs
dec
mov
cmpsb
push
cmc
popf
mov
push
push
xchg
fmuls
xchg
adc
std
popf
xchg
sub
adc
cmpsl
iret
push
out
test
adc
cli
lahf
and
adc
lret
lods
imul
push
jns
jns
outsl
sub
mov
ret
mov
sbb
outsl
mov
jp
mov
test
stc
mov
sti
in
addr16
sti
sub
mov
fiaddl
sbb
in
adc
fwait
xor
xchg
fisubrs
jp
fsin
stos
stos
enter
push
pop
cmp
lahf
out
xorb
daa
inc
daa
fsubr
jnp
xchg
jge
mov
icebp
pop
pop
test
in
mov
push
dec
sub
fdivrs
int3
leave
cltd
adc
and
pusha
in
imul
and
xchg
jns
and
test
out
aam
in
aas
daa
rclb
clc
cmp
cmpsl
ret
xorl
ljmp
scas
ret
bndldx
cmc
mov
inc
mov
xchg
xchg
hlt
testl
mov
les
or
push
daa
rorb
jns
dec
sbbl
movsb
jne
icebp
sbb
sarl
out
sets
scas
iret
xchg
fisttpl
xor
pop
dec
jno
pushf
cmp
lods
mov
push
scas
cltd
mov
dec
and
test
aam
mov
lret
inc
nop
sbb
xor
fldenv
mov
andl
stos
sbb
pop
dec
imul
in
sbb
push
or
and
pop
mov
test
inc
mov
test
int3
aam
dec
fwait
dec
sar
nop
lcall
ret
mov
jmp
jbe
or
or
xchg
push
pop
or
xchg
cld
lcall
dec
push
sahf
pop
mov
test
divl
jle
int3
pop
mov
shll
sub
movsl
adc
pop
subl
pusha
or
mov
xchg
ss
push
call
lds
pop
jo
sub
pop
iret
cld
and
xchg
push
xchg
in
aas
inc
test
fnstenv
data16
cmp
addl
lock
orb
ds
leave
out
imul
bound
aam
mov
inc
inc
loopne
ret
inc
movsl
gs
mov
das
scas
popa
xor
sarl
enter
aad
scas
pop
inc
adc
jne
data16
jl
iret
mov
outsl
pop
arpl
lret
fsubs
cmp
xchg
or
inc
mov
repnz
test
decb
xor
pop
mov
and
es
fdivp
jno
xchg
cli
jbe
outsl
push
test
xchg
push
rcr
pop
sub
xchg
jg
sahf
add
sar
cli
std
pop
daa
sbb
push
popf
aad
in
jo
and
stc
pop
push
xchg
out
into
adc
add
push
adc
gs
adc
pop
jae
sub
xchg
cli
je
and
mov
jecxz
into
mov
subb
mov
xor
cmp
jle
out
add
clc
pop
xor
cmp
add
push
enter
and
xor
add
xor
mov
or
outsb
xor
lret
jle
mov
rcl
lcall
or
cmp
pop
xor
shr
xlat
mov
or
loope
test
fiadds
xor
out
xchg
test
test
inc
xor
test
insl
or
sub
mov
cmc
pop
std
mov
ret
jle
adc
push
mov
dec
cmp
jmp
nop
lret
and
cmp
mov
cmp
pop
adc
jp
out
add
adc
mov
dec
shl
lret
or
push
inc
movsb
mov
pushf
dec
jp
movsl
aam
loop
xlat
dec
cli
mov
sbb
mov
testb
mov
and
stos
adc
mov
jge
cwtl
outsl
nop
scas
inc
inc
mov
xchg
pop
scas
mov
and
idivl
pop
dec
stos
in
push
pop
add
xchg
ja
mov
sbb
mov
push
add
mov
nop
aas
mov
push
pop
mov
xor
cld
xchg
sbb
fisubrs
adc
and
ficomps
or
jmp
daa
sbb
dec
inc
ja
mov
cwtl
scas
lock
adc
and
bound
xchg
xor
lock
movsb
xor
push
aaa
inc
sub
jp
stos
pop
adcb
cltd
and
rcrb
pop
cwtl
dec
xchg
push
test
ss
sbb
mov
mov
mov
lahf
xchg
mov
rcll
xor
sbb
loop
ja
cmc
push
sbb
or
test
cwtl
cmp
bnd
mov
aam
inc
and
mov
mov
daa
cmp
cmp
scas
pop
lea
adc
in
ret
pop
pop
jno
aas
jg
ljmp
and
outsl
out
and
mov
adc
repz
mov
mov
dec
call
movsb
ss
aas
out
add
xor
pusha
sti
cld
cmp
pop
in
sub
movsl
loopne
rcl
mov
pushf
cmp
push
out
mov
jl
push
sbb
push
push
imul
lcall
out
push
pop
ds
rcll
mov
movsl
jp
jmp
shll
loope
hlt
dec
fbstp
or
aas
mov
xor
insb
pop
clc
fcoms
xchg
mov
xor
pusha
sub
push
xor
xchg
jo
mov
ss
sub
dec
ds
jmp
test
fisttpll
bound
mov
popl
in
adc
push
xor
cmp
outsl
push
addr16
loop
jmp
cmc
fidivrs
bound
push
repnz
lahf
pop
pushl
push
or
icebp
add
mov
popa
lret
clc
push
mov
cwtl
inc
enter
and
cmp
outsl
cmc
out
cmp
repnz
fildll
pushf
pushf
sbb
rcrb
lahf
out
ljmp
pop
fiadds
xorl
mov
mov
nop
cwtl
pop
hlt
in
push
movsl
xor
or
ljmp
and
jecxz
jo
stos
pop
mov
aad
cmpsl
ret
or
ja
pop
xchg
push
and
sub
jne
pop
outsl
fnstcw
mov
or
xor
outsb
loop
out
lcall
dec
popa
push
jno
mov
mov
lret
cwtl
xor
fcmovbe
push
cs
inc
and
cmp
or
mov
insl
dec
leave
xchg
mov
insb
adc
dec
shrl
add
repz
pop
lods
lods
lret
cs
leave
cmp
das
gs
mov
insl
movsb
test
pop
fnstenv
movsl
sub
inc
sarl
mov
out
pushf
arpl
mov
sub
push
dec
jne
push
aad
mov
add
mov
fwait
addps
mov
test
jo
and
pop
addr16
cmp
xchg
push
mov
call
push
insl
mov
jmp
cltd
inc
in
lods
ret
push
fcmovnbe
xor
push
ljmp
xchg
mov
push
mov
jno
adc
ljmp
jne
adc
pop
rorb
in
pop
adc
pop
fildll
int
or
lret
jp
imul
stc
inc
pop
test
outsb
push
jne
aaa
sub
scas
mov
xlat
insl
xchg
cli
xor
and
add
or
dec
test
das
push
add
lods
stc
jno
cmp
pusha
push
in
test
lret
cld
mov
push
mov
in
or
xchg
mov
negl
jbe
adc
jb
cmpsl
pop
in
lods
clc
mov
loope
clc
mov
test
push
subl
xchg
jb
pop
fildl
insb
pop
cltd
aas
daa
sti
push
fs
ja
test
adc
bound
xchg
mov
xchg
adc
mov
cmpsb
mov
jbe
mov
lahf
mov
frstor
lock
sarl
push
mov
jb
mov
sti
jl
insl
adc
push
xchg
divl
cmp
mov
stc
imul
mov
sbb
mov
popf
lock
jb
push
mov
and
sbb
cmpsl
add
mov
in
loop
mov
mov
and
leave
dec
scas
daa
mov
in
add
scas
mov
out
push
xchg
jl
test
sub
insl
mov
jl
sub
sbb
pop
addr16
mov
mov
lods
jns
sub
jl
push
repnz
pop
adc
fimull
in
sbb
hlt
out
dec
push
pushw
push
sbb
adc
jecxz
insb
adc
lcall
call
pop
jo
enter
mov
popf
ret
outsl
ss
dec
stos
inc
sbb
push
push
dec
rcr
test
xor
mov
scas
cmp
fucomip
cwtl
and
mov
out
mov
fisttpll
push
shlb
dec
push
mov
add
loopne
aad
nop
adc
stc
xor
loopne
sbb
dec
xor
jne
or
sahf
cwtl
add
lds
cmp
jge
or
repnz
pop
call
stos
cmp
add
and
adc
xchg
repnz
and
xor
lds
dec
sti
int3
jb
inc
cli
repnz
rcl
mov
stos
sar
jno
jbe
pop
ficomps
push
daa
mov
xchg
in
jo,pn
idiv
xchg
mov
rep
pushf
mov
mov
in
xor
rorb
add
enter
mov
loop
add
aad
test
iret
add
out
mov
inc
fidivrl
mov
xchg
cli
daa
mov
std
sub
into
addb
mull
aas
pop
out
mov
das
pop
mov
loope
pushf
adc
imul
call
mov
add
mov
ds
sub
rolb
mov
aad
mov
ss
int3
mov
gs
cmpsb
sub
mov
jo
mov
mov
mov
jne
mov
cmp
jecxz
fsubrl
popa
add
in
scas
ss
imul
push
rclb
mov
lock
sbb
dec
cli
popa
shll
jg
adcb
cmpsb
lcall
pop
sub
xchg
mov
cmp
inc
out
dec
jle
sbb
sbb
pop
dec
mov
mov
jp
lods
cmc
shlb
mov
pop
cmp
stos
jnp
dec
loop
sbb
jbe
lock
cmc
or
add
pop
loope
fs
add
pop
sub
loope
mov
rcll
jne
aaa
sbb
mov
push
div
sbb
imul
cwtl
popf
sahf
jmp
inc
cltd
fiaddl
test
inc
lret
pmulhuw
cmpsl
or
adc
hlt
mov
std
sbb
cmp
mov
pop
mov
xchg
cmp
movsb
inc
cs
mov
scas
mov
lcall
hlt
pop
cmp
lods
ret
lods
jb
or
sbb
sub
xor
testl
test
fwait
int3
cld
and
inc
sti
gs
xchg
cs
or
insb
jg
pop
push
xor
mov
insl
lds
lods
mov
mov
ficompl
push
xchg
pop
rorb
aaa
xor
outsl
or
mov
adc
jae
push
push
and
mov
mov
sub
mov
mov
inc
and
lahf
jg
aas
lahf
outsb
add
add
mov
push
std
mov
in
mov
cmp
sub
lahf
scas
lret
pop
pop
push
mov
test
lret
adc
into
ficomps
adc
xor
cmp
jl
push
add
mov
xor
loop
jno
push
sbb
cmp
lea
or
xchg
not
inc
mov
dec
in
and
or
dec
fdivp
inc
fcoml
mov
std
loope
sub
mov
dec
ja
mov
stos
push
ret
outsl
push
inc
gs
or
dec
inc
and
ffreep
fsubs
test
out
mov
sub
and
das
add
add
rcrb
push
cmp
and
subl
and
repnz
insl
loope
push
les
into
mov
ror
test
lret
inc
fmull
sub
adc
xor
testb
stos
mov
stos
dec
inc
aam
xor
mov
and
jg
repnz
in
cmp
sahf
outsb
sbb
cs
lcall
ja
xor
inc
add
pushf
insb
fucom
call
adc
lret
and
dec
push
lods
jbe
jg
inc
xor
inc
xchg
sbb
xchg
xchg
stc
bound
push
sub
repz
jmp
mov
xchg
push
push
cld
sti
or
adc
xor
lcall
leave
sbb
xchg
or
les
mov
clc
fidivrl
je
out
test
rcrb
cmp
inc
pusha
fwait
jne
dec
aam
pop
es
call
cmp
mov
inc
out
mov
cmc
mov
or
mov
xor
in
cmp
mov
addl
cwtl
movsl
ret
push
mov
mov
or
int3
shlb
imul
inc
mov
xor
jae
scas
lea
repnz
mov
jae
add
add
out
out
cwtl
xchg
pusha
popa
sahf
mov
pop
arpl
in
je
mov
mov
push
insl
mov
addr16
out
adc
insb
shlb
stos
in
mov
cmp
add
fsubrl
das
nop
push
fsubrp
mov
stc
lds
pop
dec
int3
ss
cmp
cwtl
jp
xchg
notl
mov
add
adc
and
sbb
mov
sbbl
rol
in
jle
test
inc
pop
cmc
and
sub
mov
nopl
mov
and
ljmp
int
movl
sub
inc
popa
jmp
orl
cmc
leave
in
cmp
ja
jnp
push
mov
pop
and
enter
xor
mov
fcompp
or
cmp
rorb
out
test
lock
loop
inc
push
or
inc
xor
imul
mov
add
jmp
push
pop
pop
inc
aas
sbb
int
shlb
lods
loopne
imul
cwtd
lods
cmpsb
pop
loope
xlat
inc
cld
fsubrs
jne
je
cmp
repz
add
lret
dec
cmp
into
or
scas
js
and
mov
clc
popl
dec
fimull
mov
lods
mov
int
dec
cmpsl
mov
inc
hlt
nop
call
pop
inc
mov
shrl
jno
loopne
test
aam
dec
repnz
ja
and
movsl
sbb
cmp
pop
jne
loop
dec
push
pushf
mov
cmc
sbb
push
enter
sbb
fnstcw
in
inc
push
cmp
insb
ret
mov
cmc
xor
sbb
lcall
dec
fprem1
outsb
lds
inc
ds
lea
pop
dec
jns
xor
sbb
sbb
cli
or
cmpsb
fdivl
and
lcall
xor
pop
mov
fsubrs
shl
and
dec
fs
call
push
mov
pushf
in
enter
pusha
mov
fnstsw
and
jl
out
and
fwait
mov
dec
js
push
lret
and
cli
ljmp
inc
cmc
inc
addl
int
adcl
xor
xor
fs
sbb
xor
test
push
clc
and
add
daa
jl
xor
pop
mov
push
jmp
shll
leave
rcll
push
jbe
or
rorb
adc
repnz
inc
int3
addr16
imul
stc
sbb
inc
gs
addl
and
pop
imul
push
fwait
enter
push
lods
sbb
adc
mov
or
mov
movb
adc
mov
adc
jb
arpl
mov
jmp
push
arpl
out
out
pop
lcall
and
xchg
jae
push
cmp
in
sahf
mov
imul
divps
hlt
test
aas
repz
or
sahf
sahf
push
popf
fsubs
push
mov
jns
cltd
mov
cli
rcrl
shll
jle
jge
xor
inc
lea
push
ret
clc
inc
sbb
xchg
lds
shlb
and
clc
sbb
and
and
dec
shl
js
jmp
in
outsl
cmpsb
jmp
rol
int3
rcll
or
ficoml
aad
push
push
fadd
lahf
xchg
xchg
mov
lahf
xchg
push
dec
dec
lods
inc
or
sbb
sahf
inc
push
and
dec
xchg
adcb
push
out
scas
sbb
es
adc
cmp
in
sub
and
pop
lods
jae
subb
adc
stc
call
dec
mov
shll
icebp
gs
adc
popa
movsb
adc
mov
enter
test
and
ds
pop
xchg
aad
imul
fistpll
imul
mov
mov
cmp
inc
fstl
lds
mov
pushf
test
xchg
and
mov
jno
dec
pop
push
cmp
arpl
icebp
mov
inc
out
mov
aam
adc
pop
mov
add
roll
xor
mov
xchg
or
jb
ljmp
pop
jb
add
nop
sub
jns
add
jecxz
pop
test
cmp
fdivs
aad
clc
pop
push
cli
fsubrp
jae
cmp
jno
jne
fsubl
mov
cmc
mov
in
test
mov
inc
outsl
cmpsb
cmp
loope
pop
mov
mov
pop
push
push
in
fmulp
jne,pt
xor
inc
sub
loop
mov
xchg
je
adc
xor
lcall
stos
mov
mov
xchg
test
test
adc
arpl
lret
push
push
jmp
add
in
sbb
mov
pop
push
ret
aam
cmc
insl
in
and
icebp
sub
flds
fdivrp
inc
out
lcall
je
pop
mov
sar
sahf
testb
xor
add
mov
sbb
xor
sti
gs
outsl
pop
das
xchg
mov
aad
clc
testl
aam
jae
sub
xchg
xor
sub
xor
cmp
pop
popf
repnz
iret
rcll
xor
xor
pop
ljmp
pop
xor
mov
test
imul
mov
xor
fs
adc
stc
inc
mov
divb
bzhi
int
xchg
pop
adc
sub
and
in
inc
mov
lds
sub
cmp
dec
test
cmpsb
cmpsl
arpl
add
mov
mov
push
adcl
pusha
mov
roll
xor
sub
pcmpgtw
or
mov
call
xchg
sbb
stc
xor
hlt
pop
push
lds
mov
mov
jbe
mov
mov
dec
pop
lcall
xchg
push
clc
cmp
or
out
nop
xchg
xchg
imul
fdivr
cld
mov
stos
push
cmp
xor
inc
loopne
mov
push
fmull
lahf
or
adc
repnz
mov
cltd
dec
mov
into
xchg
or
test
or
push
aaa
push
js
push
inc
test
negb
ljmp
test
dec
xchg
push
inc
loopne
mov
daa
mov
je
sub
inc
and
lcall
mov
aad
inc
nop
jmp
inc
lea
sub
hlt
pushl
cmpsb
cltd
addr16
adc
dec
bound
dec
cltd
test
push
scas
cs
rclb
cmc
mov
test
jle
jecxz
mov
adc
xchg
iret
bound
mov
push
mov
sbb
add
push
roll
in
add
jl
dec
inc
into
arpl
cmp
adc
add
jge
call
in
add
ret
cltd
jbe
mov
rolb
popf
daa
xor
inc
sbb
cwtl
outsl
test
sbb
rorl
jge
mov
fsubs
scas
xor
xor
and
sub
jnp
mov
nop
add
mov
pushf
xlat
inc
fmulp
push
mov
dec
loope,pn
cmp
cmp
jnp
int
test
stos
jecxz
push
xor
filds
adc
pop
leave
xchg
mov
ss
cs
mov
adc
xlat
cld
push
negl
or
xor
and
repz
cltd
add
sub
fcmovu
and
lds
outsb
adc
dec
push
ja
sub
mov
dec
cmp
mov
pop
insl
call
push
pop
in
inc
jne
addr16
movsl
jns
aas
insl
pop
xchg
cld
fcompl
fldcw
xor
out
out
cli
shl
push
sub
push
pop
sub
mov
fucomip
fbld
jne
and
mov
pop
mov
mov
enter
adc
jle
dec
pop
mov
imulb
les
into
imul
cmp
dec
or
test
rolb
lahf
aas
jp
arpl
xor
fdivrs
jp
out
negb
jno
sub
mov
add
out
rcrb
aam
nop
inc
repz
nop
call
fwait
aam
pop
mov
xchg
dec
sbb
fisubl
inc
push
lock
sub
mov
pusha
std
add
mov
jbe
test
push
cmp
mov
in
pop
ss
pop
dec
fildll
cmc
pop
xchg
rcl
sub
mov
mov
xlat
mov
loop
push
repnz
jecxz
jge
push
ss
repz
push
push
sahf
leave
xor
or
mov
ret
arpl
fcoml
dec
pop
repz
inc
jno
ss
lret
push
cmp
sub
loopne
pop
int3
adc
inc
icebp
shrb
sbb
imul
mov
ja
and
fisubs
xchg
sahf
mov
push
inc
fldt
push
lea
sbb
pop
negl
shlb
loope
repz
push
dec
and
push
push
mov
pop
in
sbb
sub
mov
push
fisttps
and
fs
ffree
lds
and
divb
xlat
sub
xchg
in
inc
shll
or
sub
or
fldcw
jne
jecxz
movsl
add
stc
jle
xor
std
add
imul
mov
in
and
push
sti
inc
fisubrl
adc
aas
aaa
xchg
lods
stos
xchg
sar
jmp
inc
adc
mov
mov
outsl
in
vcvtps2dq
fcoms
lock
sbbl
mov
mov
shl
jp
aad
push
add
pop
and
mov
out
jmp
inc
sub
mov
mov
xor
sub
lea
xor
mov
inc
movsb
or
inc
std
mov
mov
mov
sub
add
clc
push
xor
adc
sahf
mov
cmc
mov
mov
pop
shll
loopne
addr16
mov
fwait
add
out
mov
pusha
cwtl
add
inc
pop
test
scas
lock
xchg
mov
sar
adc
push
and
test
pop
sbb
sbb
xorl
ret
rcll
mov
popa
aam
cmpsb
mov
test
les
mov
add
ret
mov
dec
mov
out
mov
push
call
mov
inc
mov
add
dec
xchg
shrl
or
out
cmp
and
iret
xchg
les
adc
xchg
mov
in
cld
outsl
outsb
f2xm1
jne
or
cmpsb
xchg
mov
xchg
xor
mov
push
jecxz
iret
mov
push
dec
mov
clc
mov
mov
ss
cmpsb
pop
xor
sub
or
push
adc
sbb
insl
das
cwtl
fs
add
lret
sub
sahf
cmp
fiadds
push
lods
movsl
sub
movsb
or
pop
mov
pop
das
dec
push
jp
dec
adc
jg
sub
mov
jns
shl
or
jne
xchg
pop
push
lret
mov
mov
mov
xchg
out
mov
mov
outsb
or
addr16
xor
fwait
pop
in
pop
jmp
and
test
mov
inc
or
push
pop
adc
xor
add
cmp
clc
in
int3
pop
sbb
cmp
pop
jne
shlb
jmp
lds
or
rorl
arpl
idivb
pop
mov
xchg
mov
insb
inc
lcall
jl
loopne
inc
stos
xor
inc
in
sbb
rorl
mov
inc
cmpsb
push
jp
lahf
nop
lcall
out
dec
add
inc
js
sti
pop
dec
fiaddl
or
mov
stc
aad
hlt
or
notb
test
add
or
and
sbb
inc
arpl
adc
mov
iret
and
stos
subl
rolb
sub
stos
les
xchg
lret
add
mov
rolb
fisubrl
test
and
pop
mov
frstor
jns
ss
out
or
pop
and
jo
in
lea
mov
push
je
mov
lods
and
popa
xchg
push
lock
pop
orb
mov
pusha
clc
decb
ds
das
xchg
mov
xchg
imul
and
popf
pushf
inc
cmp
jle
popl
insl
and
fstpt
add
stos
adc
in
ljmp
enter
orb
dec
cld
out
lret
test
clc
add
cli
sub
pop
inc
ret
dec
push
sub
rorl
jbe
and
dec
lcall
cmp
sub
lods
sub
push
movsb
pop
cmp
rcrb
aam
std
cmp
dec
mov
push
cmp
xor
leave
cmp
fistpl
in
icebp
push
nop
lock
jne
mov
dec
dec
pop
scas
mov
into
jge
jnp
cwtl
mov
cmp
repnz
xor
and
adc
push
inc
data16
cltd
arpl
mov
stos
pop
xchg
xchg
out
loopne
popa
iret
xchg
push
dec
adc
or
xchg
push
popfw
mov
or
cmp
int3
filds
sbb
inc
imul
dec
std
popa
jge
fimuls
push
push
xchg
sbb
add
popf
cmp
push
cmp
cmpsb
pop
filds
mov
mov
sub
and
movsl
cwtl
pushf
out
test
adc
or
rcrb
shlb
cmp
pusha
jmp
add
stos
xor
mov
fs
mov
push
cmp
mov
cmp
mov
pop
push
call
push
fisttpll
xchg
adc
push
push
xor
ja
and
lods
sbbl
inc
inc
std
xor
sbb
inc
jle
jae
test
push
dec
rsm
push
ret
sbb
and
or
out
and
lods
push
arpl
push
pushf
xchg
lret
mov
xor
lods
xor
aad
pop
dec
jnp
cmp
adc
aad
pusha
xor
mov
jecxz
cmp
mov
mov
and
test
je
in
scas
hlt
addr16
xchg
and
or
xchg
lret
xchg
jbe
push
pop
sarb
jno
fcmovnu
fistpl
cli
aas
pop
inc
push
aas
fisubrl
stc
dec
push
adc
push
or
insl
mov
enter
or
into
insb
and
xor
mov
cmp
call
imul
lods
sbb
sub
fadd
sahf
push
cmp
jae
mov
push
ja
nop
mov
outsl
out
adcl
inc
test
push
enter
ret
ja
pop
call
test
enter
push
sbb
jb
jg
sbb
cmpb
test
jl
mov
mov
jb
lret
adc
mov
xchg
add
push
rcll
int3
stc
cmc
xchg
jo
push
leave
ss
mov
test
pop
push
js
or
and
rol
sbb
jno
jbe
dec
mov
mov
das
sub
dec
cld
mov
jnp
pushf
fsts
adc
aaa
or
movsb
push
test
rolb
and
ss
jne
mov
cmpsl
sbb
and
and
insb
mov
pop
mulb
mov
sbb
shll
in
sbb
pop
xchg
xor
jg
shl
insb
push
shrb
and
cmp
pop
aam
bnd
mov
add
data16
mov
xchg
adc
mov
inc
or
cmp
mov
mov
mov
jge
jbe
sub
repz
mov
jmp
pop
fstl
push
rcll
addl
sahf
nop
mov
mov
int
sub
xchg
xor
push
push
mov
mov
or
shl
call
out
dec
push
lds
loopne
pop
adc
mov
cmp
xchg
xor
cmc
push
jo
and
mov
pop
mov
in
and
pop
dec
and
and
add
or
repnz
mov
lea
fidivs
inc
mov
popa
rclb
and
inc
imul
jnp
xchg
pop
push
idivb
and
int3
mov
in
movsl
push
mov
mov
je
outsb
nop
fstpt
xchg
pop
mov
cmpsl
nop
pop
sbb
xchg
sub
jb
sbbb
in
push
hlt
sub
mov
jmp
outsl
mov
inc
fcmovnbe
xor
stos
sub
cmpsl
icebp
jmp
and
pop
test
std
seta
sbb
sarb
push
sub
inc
add
movl
xchg
jp
iret
enter
or
lods
aas
addr16
inc
or
lcall
jge
xor
aam
jns
mov
in
fistl
push
pop
cmc
punpcklbw
es
mov
sbb
sbb
fnsave
aas
into
sbb
out
xor
mov
cmp
dec
daa
xor
push
add
mov
and
and
jnp
in
imul
mov
pop
andl
inc
in
pop
rcrb
mov
inc
arpl
mov
imull
cmp
lret
in
stos
mov
adc
mov
call
clc
push
xchg
sbb
call
popa
jae
mov
mov
vunpckhps
mov
out
icebp
xchg
data16
scas
mov
sarl
aam
pop
mov
sbb
ret
sub
call
push
inc
movsb
pop
rcr
loope
lahf
fisubrl
ret
adc
mov
ljmp
fs
mov
and
xlat
mov
pop
insb
and
fdivrs
stos
das
push
xchg
imul
pmullw
cltd
inc
out
xor
sahf
inc
cli
outsb
jno
mov
push
aad
pop
dec
ja
inc
mov
in
mov
js
lea
shll
enter
mov
jbe
enter
and
scas
mov
pop
mov
cmp
inc
pop
ss
nop
aad
sbb
mov
mov
enter
cli
pop
or
and
imull
add
or
adc
lret
mov
int
mov
fs
mov
and
cmp
dec
sbb
jl
mov
and
test
sti
out
push
inc
ret
mov
jbe
pop
push
imul
or
push
scas
xor
xor
push
pusha
or
jmp
das
cmp
pop
sbb
out
push
sbb
xor
xor
aas
mov
jle
fbstp
pop
pop
push
repnz
push
mull
cmpsl
xchg
lds
jmp
jl
aam
addr16
pop
add
mov
stos
or
inc
cmp
mov
add
mov
rorb
adc
adc
push
das
cmpsb
or
notb
fwait
cmp
mov
nop
arpl
popf
js
lret
aam
cmp
pop
mov
adc
mov
mov
js
cmc
idivb
fs
in
std
and
ficomps
jb
cmp
inc
sarl
int
and
xchg
add
outsl
test
push
pop
adc
adc
mov
jnp
jae
leave
adc
push
mov
dec
adc
dec
mov
pop
push
das
jecxz
psubd
lahf
sbb
adc
push
jo
pop
data16
jp
repnz
icebp
mov
add
xlat
rol
fucomip
mov
cli
sahf
stc
inc
rcll
cmp
in
inc
fsubs
movsl
pop
fldenv
clc
nop
dec
int3
dec
pusha
dec
and
cmp
out
jle
shrb
pushf
pop
and
dec
pushf
or
jl
ret
das
stos
and
mov
js,pt
hlt
and
inc
testl
sbb
notb
cmp
add
push
mov
cmpsl
jne,pt
adc
pop
mov
sub
imul
pop
inc
sub
out
jb
cmp
idivb
mov
mov
and
xor
xchg
shlb
lds
pushf
sub
adc
mov
loopne
sbb
std
dec
mov
stc
ljmp
pop
test
xlat
push
mov
popa
xchg
add
scas
xchg
in
or
push
xchg
xor
ljmp
cwtl
or
cwtl
jmp
ds
jge
xchg
and
xchg
sub
insl
mov
xor
add
inc
adc
pop
lock
scas
push
push
cmp
outsb
stos
cli
movsl
sub
mov
and
std
mov
push
dec
dec
adc
sub
aad
inc
push
int
and
enter
dec
mull
sbb
pusha
jge
sub
mov
test
and
and
pop
sub
mov
cltd
jecxz
and
sbb
lock
leave
mov
icebp
inc
jbe
push
das
push
or
lret
daa
out
out
dec
mov
ficompl
popf
idivl
or
mov
shll
dec
adcb
stc
dec
out
push
out
and
pusha
in
mov
das
jl
fs
fldenv
push
push
lea
inc
cmpsl
or
nop
push
sbb
sbb
jne
and
ret
mov
mov
loope
mov
loopne
mov
dec
ds
mov
sbbl
scas
clc
pop
stos
jno
or
sub
xor
sbb
sbb
add
push
sbb
mov
push
les
mov
stos
xchg
aaa
stos
xchg
in
ret
clc
scas
push
jle
pop
mov
mov
adc
push
dec
add
loope
adc
mov
enter
notb
repnz
jbe
fimuls
push
pop
cmpsl
punpcklwd
stos
sti
jge
dec
and
jecxz
dec
sbb
ds
mov
cld
cs
movsl
into
out
dec
push
cli
and
test
loope
jmp
into
hlt
and
dec
adc
xchg
dec
int3
fisubl
dec
in
inc
fstl
arpl
sti
jnp
cmpsl
movl
jecxz
adc
leave
dec
push
adc
adc
xchg
clc
push
pop
jnp
call
imul
pop
cmp
jge,pn
out
rclb
dec
jecxz
loope
stos
sti
and
mov
push
popa
repnz
mov
sub
rol
mov
add
jb
vmovntps
aaa
and
push
pop
jp
jno
mov
xchg
clc
mov
mov
sub
inc
movsl
out
ljmp
dec
outsb
fsts
fisubrs
popa
cwtl
xor
stc
lcall
aas
in
xor
pop
aas
sbb
je
sahf
mov
shlb
loop
lods
out
imul
mov
leave
insl
sbb
sbb
jge
into
out
sahf
pop
stc
icebp
in
out
loopne
inc
dec
push
adc
mov
jbe
sbb
sarb
or
inc
push
rcl
add
popa
add
and
push
sub
jg
mov
leave
and
xor
cs
inc
add
insb
cmpsb
cli
les
xchg
adc
sbb
jle
push
or
pop
ljmp
es
dec
fwait
or
and
in
or
es
in
sbb
add
push
ss
mov
fisubl
leave
enter
adc
jg
cmp
call
jmp
adc
movsb
dec
testb
outsl
das
pop
pop
add
push
xchg
xor
jg
out
in
iret
adc
push
pextrw
mov
jne
aam
add
sarb
test
push
dec
ljmp
xor
sub
nop
jmp
mov
or
push
push
adc
cli
loope
push
pop
das
inc
or
mov
pop
popf
stos
mov
hlt
xor
adc
ja
push
rorb
lock
imul
and
mov
cmp
add
scas
dec
std
sbb
jns
out
adc
xor
push
loope
or
push
int3
inc
in
fdivrl
mov
jb
int3
repnz
shr
pop
push
mov
or
arpl
mov
out
out
push
jle
sub
lcall
arpl
shrb
icebp
cmp
icebp
lods
lods
aas
icebp
mov
sub
adc
and
pop
ret
sahf
mov
inc
jge
test
add
inc
or
adc
inc
fldl
sub
imul
cltd
stc
sbb
ds
cmc
xor
cltd
fnstenv
jb
lret
jo
std
mov
push
sbb
stos
in
into
dec
mov
cmp
mov
cmpsl
mov
dec
xor
aad
mov
or
nop
enter
iret
or
iret
pop
mov
addb
clc
and
mov
lahf
scas
mov
xchg
mov
test
xchg
faddp
leave
in
jb
cmp
jae
jp
cmp
cmc
sub
mov
inc
dec
jo
insl
xchg
test
jg
mov
lahf
decb
in
cs
sahf
mov
lods
mov
fistl
jb
pop
daa
fimuls
inc
push
lock
mov
push
mov
cli
xchg
mov
negl
mov
sbb
jnp
lret
push
mov
push
adc
addr16
shl
add
or
hlt
pop
sahf
jge
scas
test
cld
aas
out
pusha
xchg
iret
inc
fimuls
cmpsb
sbbl
sbb
shrb
scas
cmp
mov
mov
mov
aaa
xchg
adc
fldcw
mov
push
dec
shll
mov
xor
ret
sti
movsb
int
sbb
pop
addl
push
push
add
loopne
fs
add
push
xchg
inc
movsb
cmp
gs
jp
movzwl
xor
aad
mov
push
push
adc
or
stos
ljmp
inc
sub
cmpsl
mov
fldt
and
loop
pushf
cmovp
xor
and
mov
jmp
push
aam
repz
jecxz
xorl
jne
call
mov
in
mov
fdivrl
aas
inc
push
pop
cltd
ja
subl
fidivs
add
popa
enter
int
or
dec
addr16
lea
inc
out
xchg
movsb
lds
scas
pop
sbb
popa
mov
and
pop
or
nop
sarb
test
dec
add
out
scas
lahf
jne
and
xor
ret
fisttpll
popf
sub
orl
dec
fdiv
and
adc
fmull
lahf
fidivl
push
jne
cmc
aam
jnp
jmp
xor
cmpsb
mov
xor
cwtl
jo
add
mov
lods
fprem
cwtl
xlat
pop
xor
insb
push
ds
icebp
mov
mov
jg
les
mov
int
xor
sbb
je
cmp
jns
ficomps
xor
fists
cmp
iret
jo
jne
cmpsl
enter
imul
out
movsb
shlb
movsb
lcall
jae
imul
cmp
xor
out
xor
mov
dec
xorl
in
mov
add
ja
int3
ret
mov
lea
xor
popf
test
cli
or
mov
add
fwait
sub
mov
adc
sbb
jge
repz
cmpsl
hlt
test
mov
cli
movsb
jne
adcl
ljmp
shrb
dec
pushf
repnz
ret
fsubrp
dec
add
push
and
pop
rcl
xchg
push
pop
push
sahf
ja
lret
sahf
in
stc
adc
mulb
cs
add
loope
fsub
jg
movsbl
arpl
cmp
pop
or
mov
sbb
fs
fwait
or
test
lret
addb
lea
mov
leave
cltd
inc
mov
and
movq
sahf
xchg
pop
push
mov
cmp
adc
cwtl
xchg
scas
ficomps
mov
mov
add
loope
pop
clc
cmpsl
mov
cmp
cmp
mov
mov
pushf
bound
mov
inc
in
popa
insb
fildl
cmp
rol
mov
mov
dec
xlat
lea
ret
insl
or
xchg
in
scas
je
mov
aas
bswap
dec
jmp
out
in
jae
popa
fsubs
jl
movsl
loope
xchg
std
mov
mov
int3
pop
xlat
aam
aas
jne
test
mov
repnz
shll
shrl
inc
bound
cmp
cwtl
and
or
les
aaa
fwait
jg
enter
pop
lahf
das
jbe
push
repz
dec
cmp
setno
repz
mov
mov
sub
mov
pop
clc
sbb
cmp
decb
in
daa
in
mov
jns
jecxz
mov
popa
inc
and
hlt
push
jo
jg
pop
rorb
out
aad
xchg
stos
test
shlb
lods
fisubs
push
ret
fdiv
pop
push
sti
cmp
js
mov
sub
rorb
cld
xor
lods
mov
sub
js
out
cmp
mov
andl
addb
push
std
cld
test
mov
push
inc
jg
mov
orl
inc
pop
xchg
cmpsl
adc
data16
cmp
in
pop
mov
pushf
and
lea
movsl
mov
loop
sti
cmpsb
and
imul
xor
mov
xor
cmp
rol
adc
scas
stc
lcall
enter
mov
fwait
stc
push
out
lods
pop
outsl
sti
negl
test
jno
stos
in
mov
add
jne
xchg
in
mov
push
fs
je
mov
lcall
insb
adc
or
mov
aas
inc
dec
test
fbld
lods
sub
or
cmp
xor
xchg
andb
pop
jmp
lret
mov
adc
mov
outsl
lcall
out
adc
push
xor
xlat
call
fdivrl
stos
lods
mov
push
sarl
cmp
cmp
shl
sarl
and
ja
mov
jnp
push
push
mov
add
stos
es
inc
mov
fdivrl
outsb
sbb
mov
bound
pop
std
push
jb
xor
insl
cltd
mov
cmp
mov
cmp
jne
sub
cs
loop
and
iret
cltd
sbb
in
outsb
xchg
bswap
and
or
add
frstor
mov
std
sbb
xor
jns
mov
and
in
mov
jbe
sbb
push
push
mov
in
push
scas
in
decl
movsb
mov
paddusw
int
cltd
mov
xorl
xchg
inc
sub
inc
gs
mov
out
ja
lock
mov
jl
cmp
push
push
pop
xor
pop
push
subl
push
movl
push
pop
and
inc
shll
cmc
cmpsl
push
hlt
push
arpl
leave
call
rcll
mov
rorl
mov
rcrl
mov
adc
push
sbb
sub
mov
xor
sahf
iret
sbb
mov
sub
jns
repnz
je
stc
cld
loopne
dec
cmpl
test
jmp
adc
adc
es
add
daa
adc
mov
add
sub
xchg
aaa
and
clc
push
psubw
cmc
cmc
and
fildll
lret
es
sub
mov
push
and
adc
daa
int3
jo
shl
push
sbb
cld
pop
sbb
push
int
add
push
cmp
sub
sbb
sub
lahf
mov
ja
test
sub
mov
mov
sbb
loop
sbb
cmp
inc
mov
ja
jp
push
jle
mov
and
addr16
sbb
lret
je
xchg
adc
inc
fmull
xchg
lds
xchg
rclb
call
xchg
mov
sbb
sub
mov
pop
es
stos
xchg
mov
pop
rcrl
xchg
dec
xlat
adc
push
popf
fcomi
adc
dec
fcompl
mov
xchg
out
scas
push
stos
lods
int3
pop
or
mov
push
out
stc
pop
inc
cmp
inc
lea
insb
cwtl
inc
inc
mov
pop
jg
mov
frstor
and
das
xchg
out
adc
cwtl
and
mov
outsb
jmp
scas
cmp
mov
dec
sub
jl
jo
gs
nop
cmpw
call
xor
jo
or
xor
pop
inc
cmp
pop
xchg
cmp
mov
int
test
sub
imul
pop
les
outsl
xchg
orb
adc
jae
sub
add
cli
lds
sbb
xor
repz
shl
lods
push
push
imul
sbb
adc
enter
sahf
pop
sbb
mov
sub
mov
cmc
stos
in
pop
pop
add
cmpb
cli
push
sbb
cmpsl
sbb
and
xor
fdivrs
or
mov
inc
test
or
push
dec
daa
mov
flds
push
das
lds
push
sub
jo
addr16
mov
adc
popf
xor
add
in
out
sbb
or
outsb
add
std
jecxz
dec
dec
xchg
cwtl
cmp
xor
in
push
pop
in
out
ffreep
sub
mov
sbb
popa
mov
in
xorl
gs
shrb
sub
dec
add
mov
xchg
sub
aam
xor
mov
fs
push
cmp
mov
fcmovne
jl
cmpsb
inc
cmpsl
dec
mov
adc
insl
sub
mov
insl
push
xor
inc
lahf
pushf
mov
movsl
cwtl
leave
adc
cs
pop
std
in
xchg
xlat
mov
mov
sub
std
push
or
scas
loop
out
inc
inc
mov
xor
out
inc
dec
sub
xchg
adc
inc
movsl
lret
or
mov
sbb
sub
icebp
lret
out
cmp
xchg
out
and
jg
xchg
imul
sub
mov
xchg
cmp
imul
xchg
in
or
dec
outsb
jg
ss
dec
lcall
inc
sub
movsb
sub
mov
and
roll
inc
into
sbb
sbb
xchg
push
imul
add
push
arpl
iret
push
movsl
orb
nop
daa
and
mov
into
pushl
pop
jb
cs
cmpl
test
inc
shl
mov
divb
mov
in
add
lret
in
sbb
dec
int
rolb
mov
cmpsl
addr16
mov
js
xchg
and
shlb
ss
cwtl
sbb
add
inc
xor
xor
je
sbb
into
push
cmp
outsb
insb
cli
lods
sub
or
or
popf
addr16
std
sub
cwtd
popf
das
data16
adc
roll
adc
or
dec
add
cmp
adc
outsb
pop
shl
cltd
das
mov
xchg
sub
mov
jg
xchg
fwait
mov
xor
add
dec
dec
lahf
mov
add
ja
xchg
xor
adc
clc
ret
incb
dec
aad
lahf
cwtl
les
push
andl
dec
mulb
add
cmp
add
cmp
clgi
repz
push
aam
mov
mov
xchg
push
push
out
das
and
aad
cmp
mov
pop
pop
xchg
sti
repnz
sbb
mov
insb
sahf
pop
inc
jae
cs
add
xor
or
xchg
cli
enter
loop
mov
mov
xchg
xchg
mov
int3
cmp
mov
addr16
inc
mov
mov
mov
mov
adc
inc
add
push
jbe
push
mov
or
fwait
push
aas
fsubrl
xor
mov
insb
adcb
fidivs
sub
mov
mov
lds
les
push
push
xor
jns
cmp
jl
inc
testl
push
push
sahf
cmp
xlat
pop
insl
scas
out
sarb
inc
fwait
sbb
aas
sub
mov
pop
pop
jnp
test
xor
adc
xor
mov
mov
idivb
ret
dec
dec
popf
fdivl
lds
icebp
jbe
lds
in
aas
ja
cs
stc
sbb
add
push
outsb
fwait
ror
pop
movsl
pop
inc
insb
push
cmp
rorb
cltd
testl
mov
mov
lret
cmp
push
cli
mov
lods
mov
sub
dec
in
add
dec
push
jbe
movsl
push
push
shr
mov
mov
sarb
dec
iret
cwtl
push
xor
popa
jp
fmuls
fadd
inc
push
ss
push
sbb
aam
jge
push
jge
lods
pusha
fsubs
jmp
out
push
cmp
inc
push
pop
dec
mov
or
in
jne
out
das
fidivl
mov
jge
pop
pop
test
jle
loop
pop
lret
jne
cwtl
scas
fiadds
mov
pop
inc
in
in
push
imul
push
fildl
dec
or
adc
cld
hlt
imul
stos
fld1
leave
clc
or
push
jnp
mov
pop
leave
lret
lea
dec
les
ljmp
mov
sbb
mov
adc
cmc
pop
xlat
pop
test
dec
and
or
lahf
push
sbb
inc
test
movhps
inc
testl
pop
cli
mov
fwait
sti
jbe
inc
outsb
pop
call
fistps
ret
ficoml
push
lock
push
cs
sub
imull
push
arpl
cmp
shlb
dec
sti
out
inc
orb
adc
mov
movsl
test
fwait
xor
scas
jecxz
mov
pop
add
fisubrs
jge
cmp
dec
test
scas
repz
pop
jbe
fistl
mov
inc
lods
idivb
mov
adc
dec
and
mov
push
test
mov
int
andl
addr16
adc
xchg
sbb
ljmp
outsl
xchg
and
xor
jo
inc
aas
mov
scas
add
mov
jle
out
sbb
xchg
fisttps
jno
shlb
mov
xchg
loop
testl
mov
pop
int
add
stos
cmc
and
mov
fwait
adc
sbb
pop
push
cmp
pop
roll
out
pop
push
pop
lahf
pop
and
xor
cmp
pop
xchg
fdivrs
pmuludq
or
cmc
fsubr
mov
in
xchg
out
out
mov
les
sbbl
mov
shll
divl
in
arpl
push
pop
adc
push
or
xlat
add
mov
pop
popf
xchg
dec
out
dec
mov
inc
push
imul
and
inc
and
stos
mov
mov
fdivs
mov
loopne
pop
add
enter
int
mov
loop
int3
je
sbb
lret
xchg
inc
jecxz
cs
mov
cltd
lds
mov
andb
addr16
xchg
pop
xchg
adc
pop
lea
les
out
or
add
jmp
imull
xorb
inc
pop
push
fs
inc
jg
fdivs
pushf
outsb
aas
icebp
add
push
iret
in
mov
out
mov
pop
jge
lds
xchg
xor
jp
inc
xlat
mov
pop
mov
pop
aad
push
imul
lret
adcl
dec
lds
fisubrl
out
lea
jg
jle
mov
mov
mov
adc
mov
pop
lods
and
jge
fdivrp
in
in
cs
pushf
mov
or
and
fidivrl
imul
fldt
outsb
xor
lea
orl
xchg
jp
pop
xor
pop
or
jle
rclb
stc
sbb
jne
int3
in
pop
and
int3
sub
mov
pop
add
mov
adc
mov
test
in
fs
fcomps
lods
or
mov
cmpsl
jo
ficoml
pop
push
call
sub
stc
fsubrl
and
test
aaa
push
dec
xchg
insb
pop
cwtl
cmp
mov
les
mov
mov
andps
jns
scas
into
mov
mov
sbb
cs
dec
inc
cmpsl
sbb
out
xchg
jns
mov
xchg
xor
or
ss
pop
add
xchg
push
push
adc
jns
mov
xor
loopne
mov
pop
mov
out
aaa
mov
fcomip
js
dec
cltd
or
test
in
cltd
mov
sbb
call
cmpsb
outsl
js
insl
and
mov
imul
fisubrs
inc
mov
mov
sti
out
cltd
jg
out
xor
push
adcl
cmp
pop
cltd
test
lahf
sbb
or
pop
shl
pop
mov
cs
mov
inc
pop
cmp
mov
and
loop
loopne
xchg
out
pop
ja
push
pop
jb
lods
or
jno
lret
ja
ss
dec
add
jno
mov
pop
js
fs
xor
xor
popf
nop
sbb
mov
pop
lret
int3
movsl
fcom
jne
push
xlat
push
xor
mov
jne
xchg
adc
sbb
not
mov
loopne
adc
lods
in
add
sti
std
mov
adc
mov
js
lcall
cmp
loopne
sub
push
aas
dec
fistpl
std
into
and
and
xchg
pop
xchg
ret
inc
and
adc
dec
xchg
pop
test
sub
add
stos
sbb
xchg
test
movsl
ljmp
and
inc
jnp
inc
ss
scas
cltd
mov
add
lods
xor
es
jecxz
gs
pop
scas
in
mov
add
rorl
test
adc
pop
rol
push
sbb
dec
je
jg
mov
xor
jp
jbe
icebp
cwtl
mov
cltd
pop
adc
push
jb
test
xor
sub
adc
xor
ja
xor
jg
dec
scas
sbbl
imul
dec
mull
xchg
adc
mov
sbb
je
jae
jo
inc
xlat
scas
push
stc
jae
daa
and
enter
fmuls
add
outsl
inc
sub
fnsave
adc
das
mov
mov
or
jl
or
mov
jecxz
call
jp
mov
cmpsl
in
sub
cmp
xchg
bound
nopl
jl
jb
dec
cmpsb
or
cli
add
mov
dec
lahf
test
fs
pop
mov
push
sub
sub
sbb
pop
in
stc
dec
ds
xchg
cmp
in
lret
rorb
sbb
dec
sahf
ret
sub
fdivrs
shrb
in
mov
repz
dec
je
push
xchg
inc
movsb
test
out
hlt
fcomip
decb
jo
xchg
aad
and
decl
sarl
pop
loope
xorl
insb
jge
push
outsl
fisttpll
mov
push
xor
mov
es
ret
aam
mov
sbb
testb
xchg
out
imul
leave
mov
xchg
daa
push
adc
hlt
mov
and
sub
push
sahf
cmp
lods
and
dec
ficoms
and
ret
push
pop
cmp
sbb
mov
mov
pushf
add
mov
mov
stos
fnsave
add
adcb
out
mov
lret
js
mov
jne
and
mov
icebp
pop
cmc
sub
jbe
aas
mov
sub
ds
or
push
jns
addr16
inc
aaa
xor
sbb
in
movl
fisubs
ret
mov
stos
fistl
test
fcom
sub
test
das
sub
adc
cs
repz
mov
ror
imul
add
dec
jecxz
mov
repz
out
jnp
daa
adc
mov
pushf
xchg
ret
popf
enter
scas
inc
mov
pop
sub
stc
sti
pushf
jns,pt
mov
inc
mov
mov
push
lcall
lahf
xor
inc
nop
lcall
jecxz
lcall
xor
and
xchg
inc
add
mov
in
mov
cmpsb
and
add
xchg
lcall
jl
mov
adc
test
xchg
dec
mov
xchg
cltd
jp
int
mov
lea
fs
stos
jmp
xlat
call
fwait
out
push
outsl
mov
and
int
test
stc
dec
jge
mov
inc
mov
mov
mov
pop
or
push
push
addr16
jp
xor
clc
imul
insb
mov
ret
call
push
or
fadds
pop
popa
push
fdivl
shrb
call
mov
icebp
adc
sbb
jnp
pop
cmp
add
js
jne
lods
test
fs
sub
imul
dec
mov
cmp
xchg
inc
loopne
mov
xchg
xchg
adc
jp
out
xchg
out
popl
aad
mov
inc
into
pusha
insl
pusha
and
sbb
sub
jcxz
out
cmpsl
dec
mov
in
popa
cmp
shrl
adcb
sti
xor
fwait
pop
leave
ljmp
mov
adc
cmpsl
or
aam
aaa
aas
test
fisubl
cltd
or
stc
push
mov
mov
and
lods
loop
dec
xor
arpl
test
in
shrb
cmp
fldenv
fistl
cmp
mov
cwtl
add
jl
in
sti
cmpsb
inc
add
lds
movsb
jp
adc
movsl
xor
cmpsb
sbb
scas
jl
and
mov
mov
fbstp
out
outsb
jge
aad
and
es
xchg
sub
or
pop
leave
es
xchg
mov
push
xchg
push
add
inc
mov
in
fisttpl
shrb
movb
idivl
xor
sbb
lock
sti
mov
imul
pushf
test
rcll
xor
pop
cmp
dec
lret
pop
pop
jge
mov
mov
xchg
ljmp
mov
je
inc
jl
imul
and
fstpl
jl
loop
fucomip
pop
or
mov
shll
inc
add
mov
push
mov
and
fdivl
mov
dec
imul
mov
or
push
lret
aas
add
lds
inc
inc
dec
fiaddl
lcall
push
dec
lcall
cmpsl
add
cmpsb
jle
mov
pop
fisubl
out
mov
mov
xchg
push
push
iret
pop
call
fisubrl
push
fsubrl
xor
pop
pusha
hlt
gs
and
shl
mov
sarb
in
dec
cmpsb
pop
incl
sbb
and
pop
or
inc
test
fimuls
sarl
cmp
and
jae
sub
test
push
pop
lret
pushf
push
jecxz
jbe
adc
data16
and
inc
dec
jnp
dec
push
jae
sbb
xlat
cwtl
mov
movl
adc
jne
mov
adc
xor
sahf
sbb
movsl
pusha
xchg
add
xchg
inc
cmp
mov
aas
shll
insb
mov
or
jg
jle
sbbb
sbb
popf
pop
lods
adc
jb
lahf
xchg
cmpsl
mov
or
lods
sahf
lcall
stos
insl
mov
mov
sbb
lods
cli
pop
jbe
add
pop
adc
inc
insb
ret
mov
arpl
push
and
jecxz
pushf
inc
pop
sti
ficomps
push
leave
sbb
mov
fwait
js
das
lods
push
std
or
cmc
inc
out
test
push
in
sub
and
cwtl
jmp
jge
fidivrl
jg
mov
add
pop
pusha
repz
das
cmp
xchg
mov
faddl
jnp
mulb
pminub
cwtl
mov
inc
loop
xchg
push
fisubrs
mov
ret
jmp
pop
fwait
push
cmp
jae
mov
cmp
mov
and
out
ret
aaa
xor
lret
cld
lock
mov
xor
mov
adc
and
sub
outsl
nop
sbb
arpl
jp
fcompl
call
inc
mov
fs
xchg
dec
loopne
enter
shl
inc
mov
ljmp
and
pop
mov
pusha
inc
addr16
int3
repz
cmp
test
int3
inc
shll
jmp
negb
mov
adc
mov
and
stos
clc
xor
jp
cmpsb
push
mov
rorl
jno
jno
dec
sbb
mov
and
adc
test
mov
sbb
leave
decl
jecxz
xchg
mov
jo
das
outsb
mov
add
dec
xor
or
pusha
jg
mov
xchg
sar
sbb
ja
dec
dec
xor
lods
aaa
pop
pop
jae
dec
adc
mov
adc
xchg
mov
cmp
fnstcw
pop
ds
leave
call
fnsave
pushf
mov
daa
add
test
in
ljmp
mov
cs
mov
xchg
and
xchg
mov
xor
mov
inc
stos
cmpsl
cmpsl
mov
stc
and
dec
loop
sub
aaa
cmpsb
cld
bound
stos
imul
jmp
popa
push
repnz
xchg
and
ret
mov
popf
mov
shll
jbe
imul
in
adc
out
mov
bnd
mov
sahf
cmp
in
lods
mov
mov
dec
dec
cmpsl
in
sub
cmpsb
add
addb
repnz
sarb
mov
rcrl
push
sbb
dec
adc
jmp
push
add
inc
jo
leave
mov
sub
cld
mov
aad
icebp
push
xlat
mov
sub
mov
lahf
lahf
sbb
aad
stos
out
cmp
mov
xchg
fistps
scas
sub
sti
jns,pn
cmp
mov
fldcw
add
das
outsb
into
aas
mov
or
xchg
jl
stos
daa
mov
pop
ret
aaa
pop
dec
mov
push
test
ljmp
das
data16
dec
inc
scas
shrl
pop
xchg
out
mov
jo
and
and
mov
add
mov
ret
mov
mov
shrb
jb
cmp
hlt
sbb
cmp
inc
popa
repnz
pop
aas
push
sahf
rclb
fwait
add
repnz
dec
cmp
adc
or
mov
cmpsl
jecxz
ljmp
sub
sahf
lahf
lret
movl
push
in
repz
test
incl
cmp
adc
pushf
dec
inc
cwtl
repnz
push
inc
mov
addb
inc
mov
aam
ds
rclb
ffree
repnz
arpl
repz
fmuls
inc
fcmovnb
jecxz
mov
sub
push
pop
cmp
mov
in
ficomps
in
lods
setno
push
test
mov
nop
jle
xor
fadds
out
lds
mov
out
cmp
jbe
dec
out
sti
pop
mov
push
xchg
xor
adc
or
cmp
mov
inc
adc
inc
inc
mov
jmp
cmp
lods
xchg
cmp
scas
push
mov
mov
mov
imul
hlt
clc
cmp
gs
jns
and
inc
imul
lahf
lods
push
xchg
out
jno
sbb
mov
adc
lcall
ljmp
xchg
push
pusha
je
rcrl
cmp
imul
mov
cmpsb
xchg
jge
push
stc
cld
adc
jne
cmp
xchg
and
or
int
out
xchg
sub
mulb
rclb
push
mov
bound
dec
rcrb
cmp
addr16
xchg
out
push
push
lahf
xchg
ss
scas
cwtl
shll
data16
pop
jne
inc
ret
bswap
pop
dec
je
push
mov
pop
call
test
loop
pop
add
xlat
sub
neg
fnstsw
xchg
pop
sbb
xchg
mov
int
pop
fistps
cmp
gs
lcall
push
shll
aaa
xchg
xor
lret
mov
and
or
inc
sub
pop
add
aaa
sub
jle
xor
ss
pop
dec
and
adc
outsb
nop
sbb
xor
xor
add
dec
shl
sar
repnz
mov
dec
jecxz
jmp
pop
outsl
out
rolb
ljmp
andl
ret
shrb
add
out
xor
or
lock
lock
xor
repnz
movsl
outsl
jle
push
mov
xchg
xor
push
inc
test
insl
pop
and
das
and
xor
lods
dec
pop
shlb
pop
int
mov
push
dec
xchg
pop
pusha
jle
push
shrb
mov
loop
pop
dec
sarb
cld
mov
mov
add
ljmp
fdivrs
repnz
out
and
fcomip
in
xor
adc
mov
aam
mov
inc
aam
xchg
out
adc
sub
shlb
push
push
nop
xor
shlb
test
rcll
test
adcl
loopne
pop
cmp
pop
scas
aaa
scas
push
js
test
cmp
lahf
xor
jae
mov
sbb
xor
inc
sub
pop
sbb
mov
popf
sbb
ja
lret
subb
mov
xchg
icebp
movsb
jmp
inc
fs
sub
mov
mov
adcl
cmc
sbb
xchg
jmp
sub
jl
cld
and
mov
aam
and
data16
mov
pop
pushf
mov
xchg
cmpsb
xor
cmpb
sahf
xchg
lcall
lcall
or
frstor
ss
mov
sub
dec
pop
fsubrs
mov
scas
cmc
or
jmp
negb
push
out
xchg
ret
sbb
std
pop
jecxz
lret
clc
mov
cmp
dec
pop
sub
in
adc
rolb
xchg
and
out
inc
call
std
mov
pusha
ljmp
mov
xchg
outsb
sub
je
fadds
jae
xchg
arpl
rol
mov
sub
sub
ss
les
lahf
sub
data16
lcall
and
sbb
adc
cmp
push
mov
rcrb
inc
cmp
sub
mov
outsb
out
pusha
repnz
jmp
mov
mov
inc
pop
into
cmpsl
int
jne
fisubs
scas
adc
xchg
jg
and
int3
push
add
jbe
mov
xor
popf
lret
sti
ficomps
aaa
sub
push
mov
jo,pn
or
mov
mov
imul
insb
cmp
cmpsb
xchg
xor
leave
sub
jne
rcl
repz
cmp
lds
and
and
dec
dec
mov
inc
scas
mov
or
fs
stos
test
or
adc
add
lret
inc
cs
xor
mov
or
adc
push
sub
fidivs
scas
and
sub
jae
jge
pop
push
jecxz
and
lret
cmp
xchg
clc
scas
adc
dec
mov
cltd
cmp
loop
cmp
fstpl
push
sub
cmp
leave
sbb
dec
loope
icebp
adc
lret
cmpsl
xchg
cltd
or
pop
mov
xchg
and
mov
in
addr16
push
sbb
mov
add
mov
push
mov
xor
stos
or
cld
aam
xchg
mov
insl
xchg
jnp
adc
iret
inc
les
push
pop
push
orl
lea
test
insb
push
pop
push
inc
bound
hlt
or
and
or
sar
cmpsb
dec
call
enter
imul
in
loopne
pop
mov
in
fcmovnu
sub
repnz
outsb
pop
rorb
ret
nop
jmp
pop
fisubs
jo
fisubl
movsl
xchg
or
adc
ss
pushf
movsl
arpl
je
wbinvd
jmp
sbb
jecxz,pt
jb
sub
rcrl
sbb
popf
push
leave
push
adc
lock
xor
clc
pop
mov
xchg
in
movsl
das
sub
test
jbe
frstor
jge
xchg
popf
ljmp
xchg
dec
mov
das
sbb
addb
ficoms
pop
dec
in
xchg
push
pop
push
ret
mov
or
inc
fsubrl
or
xlat
cmp
push
sub
mov
loop
add
sbb
mov
mov
cmp
sahf
cmc
mov
adc
outsl
movsl
out
adc
xchg
lret
shr
xor
add
fucomp
inc
incl
ljmp
stos
or
mov
out
cmc
out
add
mov
mov
jp
jbe
mov
jns
push
aam
je
and
popf
add
sbb
dec
mov
mov
popf
and
push
xchg
adcl
or
xchg
cmp
cmp
mov
and
adc
hlt
sbb
pop
ret
sbb
dec
fistpl
inc
xor
inc
inc
pop
lods
adc
pop
fld
insl
in
leave
mov
es
out
and
popa
sbb
andl
fimuls
sub
insb
lcall
fmull
or
ret
lret
xchg
pmaddwd
stos
repnz
or
repz
pop
les
mov
adc
xor
push
test
das
sub
in
xor
inc
inc
or
nop
movsl
add
fidivs
out
adc
loop
cmpsb
mov
push
out
mov
out
cwtl
in
sbb
xor
adc
mov
push
xor
hlt
dec
inc
rol
mov
push
mull
inc
in
lods
or
mulb
mov
add
mov
daa
std
data16
icebp
jb
imulb
ljmp
and
jns
dec
repnz
int
mov
mov
or
popa
scas
dec
scas
jg
stos
js
inc
cmpl
lock
repnz
stos
jae
xchg
jo
push
sbb
push
std
pop
lcall
cmp
add
mov
std
sti
add
lods
enter
and
push
arpl
mov
shll
or
dec
aaa
fistl
sti
and
fidivrl
push
or
dec
jl
and
insl
xor
or
mov
std
fidivrs
je
jl
pop
pop
xchg
inc
jns
dec
lret
lcall
dec
jg
jb
stc
add
jle
jecxz
fstps
push
dec
pushl
xchg
inc
mov
nop
shr
test
outsb
ljmp
cmc
pop
daa
xchg
pushf
call
cs
leave
lea
cmp
mov
imul
xor
fidivl
push
jl
cmpsb
inc
arpl
shlb
adc
insb
mov
sarl
fwait
jne
add
aas
inc
rcrb
xchg
push
and
mov
lock
cs
lea
outsb
mov
dec
fdivr
push
and
jae
mov
mov
ret
adc
cs
jecxz
mov
dec
movsb
mov
int3
aaa
pop
out
repz
ljmp
push
bound
cli
std
xchg
adc
imul
push
sub
add
or
push
push
mov
mov
mov
ja
cwtl
sbb
xor
mov
rorb
jmp
cmp
jnp
jo
imul
fst
mov
mov
je
ficompl
adc
xchg
push
test
out
or
mov
int3
test
push
sub
mov
jne
mov
mov
push
pop
test
or
call
stc
push
jle
push
fnsetpm(287
mov
xor
inc
jecxz
or
hlt
hlt
pop
jno
ja
cmpsb
shr
cli
xchg
out
and
pop
inc
into
cmp
pop
push
sbb
xlat
fwait
idivb
xorl
dec
in
jno
lods
aas
test
mov
sahf
jnp
inc
fcoml
das
repnz
or
nop
xchg
lds
mov
or
inc
data16
xchg
pop
or
arpl
mov
jle
lret
add
mov
mov
scas
sub
outsb
loop
imul
cwtl
pop
mov
imul
push
mov
pop
xchg
jle
fwait
sub
xor
call
xor
lcall
lahf
repz
add
call
push
and
or
mov
pop
lods
add
addr16
or
and
into
out
fistpl
xor
inc
loope
xor
and
icebp
nop
shr
pushf
cmp
pop
lret
lods
out
cltd
lahf
lods
jmp
push
mov
jo
sbbb
add
mov
sbb
mov
es
adc
mov
fsubp
jge
mov
mov
xchg
es
inc
ss
xchg
pop
push
das
push
fsubrs
jmp
and
jb
clc
sub
sbbb
mov
fcomp
imul
orl
push
jbe
test
mov
test
dec
jbe
jle
ret
cltd
aas
stos
push
outsb
add
inc
cmp
mov
cltd
lret
xchg
jg
je
movsl
rcr
movsl
cmp
dec
lahf
movsl
push
jmp
shrb
adc
addr16
xor
jl
data16
add
mov
movsl
inc
call
aaa
rcrb
and
sub
push
add
inc
lret
in
add
jmp
or
dec
adc
jecxz
cmpsl
outsb
cli
cmp
cmpsb
insb
rcr
or
inc
test
loopne
pop
xchg
xor
bound
xlat
lods
outsb
or
into
sbb
xor
cmp
icebp
push
pusha
jo
xor
xor
cs
mov
xchg
or
xchg
push
pop
in
outsb
inc
add
fstps
sub
in
pop
jne
pop
cmc
enter
cli
dec
sub
sub
cmp
adc
sahf
imul
xchg
in
xchg
jg
loope
mov
imul
cmp
mov
repz
cwtl
sahf
cmc
mov
and
lret
xchg
jae
js
stc
pop
sbb
push
sub
repnz
shr
js
xor
mov
jo
std
and
push
lahf
push
pop
xchg
sbb
xor
rclb
ljmp
mov
scas
cmc
or
dec
add
repz
adc
rol
and
mov
mov
sahf
inc
int
jg
ret
int3
jae
popf
xlat
push
mov
fs
pop
xor
lahf
jae
push
jp
sbb
icebp
jb
inc
fadds
clc
incb
les
pop
or
cmpsb
xor
or
scas
ret
out
push
push
sbb
mov
sysenter
je
shld
jae
pop
enter
jecxz
addr16
inc
xor
or
dec
in
lret
stc
addr16
xor
ds
sbb
std
nop
push
cmp
mov
lahf
xlat
push
and
loop
mov
out
xor
dec
jne
addr16
jp
cmc
fdivp
xor
inc
loope
in
pop
sub
call
mov
sub
ja
insl
jge
xchg
mov
or
scas
pop
xor
pop
cwtl
fmuls
call
scas
insb
mov
subl
and
pop
fwait
cs
mov
out
xor
rcrl
push
dec
mov
cli
loop
push
jp
sub
jg
jecxz
lret
jnp
out
sub
fcoml
mov
pusha
mov
dec
std
lret
push
xchg
pop
lahf
addr16
pop
imulb
xchg
sbb
popf
js
sub
xlat
xchg
cmpsb
sub
aaa
js
jmp
nop
and
fisubrs
jo
mov
int3
adc
mov
ret
rclb
push
cmp
rcr
push
sbb
mov
dec
mov
push
mov
out
mov
and
add
or
imul
mov
daa
hlt
xchg
stc
mov
push
xor
sbb
mov
mov
cmpsb
adc
xchg
adc
pop
xor
mull
xchg
sub
fldt
push
cli
cld
and
dec
scas
or
mov
iret
outsl
xor
dec
shrb
mov
mov
mov
xchg
scas
push
imul
data16
push
xchg
pusha
dec
andb
loope,pt
lock
push
xor
fwait
outsb
cmc
lahf
scas
scas
cli
pslld
xor
xchg
jecxz
rcll
push
cmp
adc
cs
xor
popa
xchg
sub
add
mov
enter
daa
and
divb
repnz
dec
cmc
arpl
imul
cmp
jecxz
dec
jp
fldt
aam
inc
mov
sub
sbb
sahf
jmp
xor
sti
ds
xchg
mov
jns
scas
xor
or
lret
xchg
jb
adcb
aaa
xchg
pop
mov
subb
inc
lods
das
xchg
xor
fdivp
loopne
gs
popf
js
sbb
cmpsl
loopne
mov
push
cmpsl
jns
ja
inc
hlt
out
inc
dec
aam
je
mov
mov
in
xchg
das
dec
mov
sub
scas
push
fsubs
inc
arpl
retw
push
inc
iret
in
xchg
outsl
insl
sub
cmp
flds
and
les
pop
and
adc
xchg
and
nop
dec
add
pop
sub
jne
jns
pop
push
push
imul
jnp
sub
lcall
inc
ds
cmp
int3
cwtl
pop
push
push
loopne
and
lods
sbb
scas
mov
sahf
call
lods
mov
adc
pop
adc
add
xchg
cmp
xor
js
std
adc
push
xchg
mov
push
mov
mov
push
incl
jecxz
imul
sub
lahf
imul
outsb
mov
std
aaa
call
shl
mov
push
add
adc
push
scas
roll
cli
addr16
push
push
dec
jb
test
adc
jl
hlt
adc
int
icebp
adc
fistpl
loop
pop
mov
jecxz
int
jbe
stc
cltd
inc
mov
fistps
mov
gs
adc
ficompl
daa
pop
imul
decl
jbe
cmpsl
mov
je
movsl
cmp
push
mov
and
test
int3
test
das
mov
push
test
mov
push
out
xchg
scas
pushf
and
sub
xor
xor
inc
jmp
fwait
jl
mov
shll
xor
and
jno
pop
adc
ret
sub
testl
cmp
cmp
test
inc
pusha
es
test
cmpsl
sub
pop
das
in
test
sub
inc
jae
test
faddl
insb
int
xchg
adc
mov
in
addb
sub
mov
or
aad
aad
insb
and
ret
int
lds
xor
lds
int
adc
in
inc
jae
sbb
out
lea
cmpsb
cltd
cld
jbe
shll
out
adc
cmpsl
adc
push
pop
inc
xchg
sub
cmpsl
lahf
ret
push
cmp
jbe
popf
pop
push
mov
enter
pop
adc
loope
xlat
cmpl
push
data16
dec
jge
xchg
dec
inc
rorl
clc
dec
movsb
mov
cli
dec
dec
mov
mov
adc
mov
aas
mov
jl
jae
jne
repnz
inc
loop
cmp
cwtl
sar
rcr
std
or
push
pop
test
cwtl
stc
stc
sbb
inc
imul
imul
mov
mov
dec
add
dec
lds
xchg
xchg
scas
int
in
icebp
cmpsl
pop
iret
out
push
push
daa
fidivrl
jae
loopne
mov
and
sbb
mov
jle
xorl
jle
mov
sub
dec
cmp
cltd
das
aam
ljmp
cld
ds
test
orl
bnd
sub
sbb
sbb
shll
jne
push
mov
enter
push
push
and
xchg
mov
lahf
lods
and
sub
das
jmp
or
or
ss
in
cwtl
jge
pusha
push
xchg
ljmp
jmp
icebp
scas
and
cmc
lock
and
enter
xor
add
aam
scas
mov
push
data16
mov
jmp
xchg
out
movsb
in
mov
mov
mov
incb
xchg
stos
pop
xchg
in
dec
mov
iret
inc
pop
mov
mov
push
int
add
loopne
or
inc
ljmp
jnp
mov
or
xchg
adc
testl
mov
stos
mov
xlat
xchg
aam
xlat
clc
imul
or
dec
mov
es
out
sarb
popf
test
lahf
jl
aas
cltd
pop
pop
repnz
outsb
pushf
std
mov
add
mov
subb
dec
call
fabs
out
pop
out
js
rcll
movsl
or
js
das
js
std
dec
jp
xor
rclb
outsl
push
std
sti
and
adc
jp
pop
in
popa
mov
xchg
and
sbbl
test
push
cmp
mov
aam
mov
dec
aam
xchg
xor
aad
lods
test
out
bound
dec
rclb
out
test
ficoms
js
aad
adc
and
pop
xor
repz
adcb
inc
and
and
xchg
sub
pop
dec
xchg
push
data16
push
addr16
aam
cwtl
inc
loop
ret
adc
push
cmpsb
mov
add
test
and
rcll
xchg
stos
sbb
cmp
ret
add
lahf
mov
stos
sbb
adc
lret
lret
iret
das
sti
dec
sbb
mov
repz
cmp
das
dec
sub
sbb
pop
cmpsb
jge
or
cmpsb
lahf
pop
pop
mov
cs
out
sbb
adc
idivb
lea
adc
jle
es
push
cmp
in
sbb
imul
lea
loop
xchg
loopne
sbb
test
lods
and
repnz
mov
pusha
cltd
jno
jbe
sub
sub
and
clc
lock
pushf
stos
xchg
and
mov
cmpsb
lods
jbe
in
insl
pop
add
ljmp
adc
stos
xchg
xchg
pop
mov
adc
dec
pop
popf
jp
inc
sti
dec
inc
mov
push
mov
pop
test
cmp
shrl
cltd
in
sbb
pop
xchg
les
mov
pop
cmp
cmp
lock
nop
pop
jmp
rcrb
dec
test
cli
push
xchg
pop
outsl
sahf
repz
leave
lds
mov
mov
icebp
sub
push
and
test
insb
or
push
mov
push
jmp
fwait
dec
mov
add
and
xchg
mov
dec
leave
mov
jl
sahf
pop
xchg
sub
xchg
int3
pop
jl
xchg
sub
dec
es
jbe
enter
cmpsb
lock
sbb
mulb
sbb
ja
and
test
ss
push
lods
jns
cmpsl
ds
femms
mov
enter
mov
roll
push
cwtl
bound
fcmovbe
sbb
loopne
leave
movsb
imul
cld
or
xchg
mov
dec
fidivrl
mov
mov
jnp
mov
jnp
ja
je
pop
mov
cli
repnz
inc
jle
mov
sbb
dec
xor
scas
mov
lret
movb
lock
test
mov
jne
and
push
in
inc
inc
push
sysexit
fsubrs
xor
test
inc
repz
icebp
and
cmp
popf
lahf
pop
jb
sbb
push
xor
mov
push
in
repnz
ds
mov
lods
push
scas
xchg
int
popa
jne
in
push
gs
or
inc
jb
out
negb
push
pusha
xor
or
adcb
movb
cmpsl
in
out
sbb
jbe
fisttps
mov
xor
pop
daa
sub
and
xchg
inc
or
int
mov
aas
std
repnz
int3
mov
ss
mov
std
dec
loop
repz
aaa
jp
inc
xorb
mov
xchg
and
aaa
imul
les
dec
xchg
ja
orl
pop
cs
xchg
je
jle
pop
pop
cmc
push
fidivl
jmp
dec
sbb
and
mov
xor
xlat
aas
int
add
shll
sar
hlt
fs
stos
mov
or
hlt
ljmp
mov
sbb
insl
mov
pop
lods
dec
xor
sbb
test
mov
push
mov
mov
lods
or
test
pushf
or
mov
xor
sbb
cs
loopne
inc
and
and
test
inc
cmp
pop
dec
push
pop
movsb
push
mov
or
data16
xor
mov
jg
sbb
ret
mov
mov
testl
bound
mov
mov
int
mov
scas
mov
movups
rcrb
mov
clc
xchg
adc
addr16
scas
repnz
lods
xchg
fists
mov
mov
dec
push
sbb
xor
stos
inc
xor
mov
add
cmp
mov
mov
sub
popf
int
stos
ljmp
ficoml
push
push
jne
push
aam
filds
lds
gs
stos
popa
sbbb
psrlw
dec
add
fsubrs
jo
aas
and
inc
sbbb
jecxz
inc
mov
or
pushf
and
loop
fdivs
cmp
or
sbb
add
fmull
jne
loop
icebp
mov
or
insb
mov
out
call
icebp
ds
lret
pop
xor
jb
movsl
test
inc
xabort
addr16
fcoms
bound
je
out
mov
mov
or
mov
icebp
test
ss
test
stos
adc
fcmovnb
fimuls
repz
lds
and
sub
insl
in
jnp
aam
jmp
hlt
ljmp
ds
sbb
jl
in
ficompl
xchg
hlt
or
aam
daa
and
dec
les
clc
test
pop
and
mov
arpl
cltd
aaa
jno
das
fisttps
popa
push
lahf
pop
sbb
out
or
xor
and
daa
fcmovb
test
call
mov
lret
and
jae
sbb
in
popf
jno
jecxz
sbb
test
pop
sar
xsha1
cmpsb
into
fisttps
nop
mov
or
loope
std
cld
mov
xlat
adc
dec
pop
dec
in
mov
stc
mov
push
xor
dec
adc
sub
sahf
mov
out
mov
pop
jg
out
gs
rcll
push
sti
jb
in
mov
fisttpl
inc
or
dec
lcall
mov
xchg
outsl
or
xor
jnp
pop
cltd
popf
test
stc
fisubl
mov
cs
int3
xchg
add
push
idivb
mov
sbb
fwait
pop
cli
xchg
mov
dec
andb
xchg
in
insl
aad
push
test
loopne
or
clc
and
and
adc
mov
push
stos
stos
push
out
mov
mov
dec
sub
roll
mov
popf
jl
and
mov
inc
cli
sub
jbe
arpl
pop
sub
jmp
xor
cld
xor
in
ja
js
cmp
ljmp
sub
out
hlt
xor
xchg
pusha
sahf
cmpsl
fistps
inc
sbb
adcl
lret
cli
cmp
jp
mov
or
roll
icebp
aas
cmp
pop
fdivl
adc
stc
fmuls
lods
imul
mov
roll
mov
aam
jmp
mov
mov
push
mov
adc
sbb
dec
std
cmc
js
loopne
addr16
sbb
clc
sahf
out
push
pusha
push
fstpt
mov
filds
or
fucomp
mov
adc
sub
cltd
cmp
pushf
in
pop
pop
stos
mov
les
clc
pop
fdivrs
lahf
and
dec
push
mov
mov
mov
sbb
into
or
adc
aas
mov
cmp
ret
movsl
sbb
imulb
lock
jge
les
xchg
inc
jl
dec
mov
and
or
repz
fmul
sti
mov
or
lret
adc
ljmp
dec
hlt
lods
push
in
xor
hlt
fcmovnu
ljmp
pop
iret
xor
das
mov
inc
jb
xlat
mov
je
outsb
pop
pop
push
loope
call
clc
mov
mov
roll
inc
cmpsl
lods
mov
scas
pop
jge
mov
push
roll
push
int3
mov
data16
push
pop
out
mov
inc
pop
fmul
out
insl
sub
jl
addr16
call
pushf
or
lret
mov
data16
mov
push
stos
pop
out
cld
repnz
mov
lcall
or
pop
repnz
lcall
add
cwtl
mov
xor
shll
and
sbb
push
lcall
pushf
enter
lcall
inc
mov
popf
arpl
gs
sbb
movsl
inc
inc
mov
mov
cltd
mov
icebp
pop
jl
dec
mov
mov
xor
lahf
lret
xchg
je
je
xchg
xlat
mov
inc
inc
cmc
jb
rcl
xlat
mov
jne
insl
dec
mov
inc
mov
or
aad
add
sub
push
pop
adc
sub
aaa
xor
pop
jp
xor
adc
xor
mov
sub
jb
in
mov
sub
add
push
push
inc
pop
les
repz
mov
cwtl
mov
cwtl
dec
test
cwtl
mov
mov
cmc
jle
sahf
jae
fdivs
rcll
cmpb
bound
cmp
mov
mov
fisubl
repnz
push
xorb
mov
sub
xchg
mov
push
xchg
mov
dec
push
and
enter
pop
inc
loopnew
loop
jl
stos
insl
fdivs
arpl
mov
mov
fcoml
cld
sbb
xchg
inc
jb
mov
jno
test
cmpsl
shl
popa
out
cmc
clc
cmp
cmp
adc
and
and
xor
scas
imull
jae
stc
je
mov
ret
lret
xor
xchg
mov
ja
jbe
das
pusha
data16
lea
or
das
out
sub
test
xchg
adc
sub
jns
mov
cmpsl
ds
filds
popf
mov
and
adc
mov
out
das
lret
mov
jp
jle
jecxz
iret
sub
adc
lea
sbbb
sub
cmp
adc
stos
jno
xor
dec
sti
sub
lock
pop
gs
js
sub
clc
jbe
ljmp
shlb
jae
ljmp
jl
mov
mov
cmp
cmpsb
pop
dec
into
xchg
pop
out
sbb
dec
js
jnp
xchg
popf
or
sbb
repnz
outsl
fs
mov
stc
xor
sbb
hlt
out
pop
daa
stc
jge
mov
out
movsb
pop
push
and
outsl
loopne
int3
xchg
mov
enter
dec
daa
jp
stos
mov
dec
dec
mov
dec
xchg
pop
lds
movsb
and
and
addr16
xor
cmp
jns
and
pop
cli
mov
xchg
sahf
or
or
fsubrp
cmp
jae
mov
xchg
or
loop
negl
xchg
cmp
mov
idiv
sbb
pop
addr16
and
stos
sti
add
sub
mov
cmc
dec
or
jp
pop
xchg
out
lods
jecxz
mov
or
mov
lods
jecxz
enter
sub
repz
mov
lock
sub
fdivs
imul
xor
pop
sub
movsl
xor
sbb
pop
loop
mov
fnstenv
pop
int
pop
pop
xchg
xlat
popa
inc
pusha
aaa
push
mov
sbb
js
shll
int3
sub
push
mov
dec
push
stos
cmp
aam
pop
rcl
pcmpgtw
fwait
int3
xchg
xchg
xchg
lret
arpl
mov
push
ret
std
sub
jb
xorb
lret
xor
insb
adc
sti
cmp
shlb
insl
imul
xchg
or
outsb
aaa
pop
add
fimuls
es
outsl
in
dec
inc
jl
cmp
xor
dec
adc
ret
jp
outsl
lods
mov
adc
cld
nop
lods
addr16
fwait
and
push
and
lret
add
mov
xor
js
xchg
daa
aaa
dec
cltd
jl
std
rol
and
mov
in
inc
and
cli
pop
enter
fisubrl
push
outsl
stc
adc
sub
nop
pop
jp
jecxz
decb
push
jp
cmp
fldcw
adc
ficomps
cmpxchg
or
xchg
or
movl
inc
std
loopne
adc
adc
sbb
pop
jmp
inc
in
jnp
add
sub
js
mov
ficoms
xchg
lret
mov
cld
adc
lds
fidivl
xchg
add
xchg
xor
insl
mov
adc
xchg
test
mov
movsb
cmp
inc
adc
popa
mov
lcall
adc
mov
and
dec
inc
push
popa
movsl
imul
test
out
xor
xchg
push
scas
jns
sbb
cmp
xor
rcrl
push
dec
sub
xchg
psubusb
filds
enter
orb
pushf
dec
fdiv
sub
push
dec
aaa
imull
pop
ja
xchg
jns
adcb
bndstx
xor
pop
mov
add
pop
into
es
xchg
lcall
bound
test
iret
xchg
mov
mov
and
mov
out
scas
mov
js
dec
mov
push
xchg
into
fiaddl
push
int3
mov
scas
sub
xor
xchg
pop
shlb
adc
dec
and
ret
xchg
mov
bound
dec
and
imul
mov
xor
jge
push
inc
jno
and
mov
dec
lcall
call
mov
not
cmp
cld
dec
fldenv
jmp
push
test
dec
scas
es
test
xor
pusha
movb
dec
sub
cmpl
and
xchg
stc
stc
lds
insb
mov
sbb
cmp
mov
aam
call
icebp
pop
stc
inc
stos
loope
jp
das
add
xor
sti
xchg
mov
mov
jg
and
sbb
cld
jge
loopne
sub
inc
js
lret
and
push
jns
pop
cli
push
fwait
push
inc
ljmp
fcmovnbe
jbe
xchg
lods
out
icebp
lock
leave
scas
pop
or
lods
rcrl
lds
sbb
lods
aas
aaa
dec
in
clc
mull
dec
jne
mov
out
push
hlt
sub
xor
push
pop
call
xorb
xchg
mov
and
mov
jbe
mov
lcall
mov
mov
cltd
idivl
xchg
xchg
pop
ljmp
pusha
ljmp
jno
fildl
out
rolb
cmp
icebp
shl
std
sub
out
mov
xlat
xor
aas
pop
jae
sub
push
stc
scas
inc
daa
jmp
int
fidivs
cs
xor
outsl
repnz
shrb
outsb
movsb
out
pinsrw
iret
cmp
movsb
mov
cmp
inc
pop
mov
sub
sbb
adcl
cli
inc
sbb
cmpsb
clc
arpl
fidivrs
jg
into
sahf
push
jmp
mov
daa
and
pop
aad
outsl
xchg
out
shrb
test
int3
pop
popf
xor
jns
repz
shrl
push
shrl
sub
loope
lods
add
xor
jne
addb
mov
inc
jae
cwtl
sub
enter
cld
adcl
xchg
push
je
jle
lahf
pop
or
jge
add
gs
ret
xorb
test
mov
ljmp
adc
push
pop
mov
pop
mov
and
cmp
mov
aas
push
adc
xor
adc
adc
pushf
aas
fs
push
jmp
ljmp
sub
sub
popf
xchg
inc
adc
sarb
adc
mov
mov
xchg
xlat
loop
jns
push
and
jg
cmc
cmp
shl
dec
xchg
push
es
and
and
pop
dec
lods
xor
fbld
aas
mov
sub
cmp
jmp
push
adc
outsl
sbb
push
stos
fmul
mov
negb
xchg
push
sbb
xor
lods
and
jb
cmp
and
jg
push
fstl
push
inc
movsl
clc
xor
enter
scas
ret
dec
inc
pop
or
fstl
sub
dec
cmp
shrl
sti
sub
aad
mov
xchg
das
jecxz
lds
outsl
andb
cltd
sti
andl
xchg
iret
pop
jle
imul
sbb
jns
mov
inc
test
dec
addr16
mov
xchg
xchg
push
repz
dec
or
fimull
pop
repz
scas
fisttpl
inc
sbb
jmp
sub
rorl
xor
arpl
es
lea
stos
inc
xchg
and
movsb
daa
ds
out
cmp
inc
les
fisubrl
call
subl
pop
jns
iret
dec
cmc
imul
lret
pop
outsl
xor
movsb
fbld
sub
sbbl
pop
xchg
in
imul
lcall
xchg
push
xadd
inc
loopne
adc
mov
aaa
scas
lods
fimull
push
jle
daa
jae
dec
dec
inc
pop
jge
nop
dec
je
fmull
cmpsb
gs
xor
addr16
nop
lods
cwtl
push
sub
clc
mov
popf
lods
add
mov
test
sub
sarl
jbe
pusha
js
xchg
dec
jb
int
call
mov
xor
mov
mov
add
mov
mov
adc
sbb
dec
cmc
mov
out
divb
in
or
dec
xor
add
jmp
fsubrl
lahf
add
testb
out
stos
xor
cmp
cs
xor
xchg
ret
sub
sti
mov
xchg
xchg
lods
mov
aam
adc
sti
imul
movsb
sub
jne
sahf
je
pusha
cmp
imul
xchg
repz
jno
dec
mov
jbe
cltd
or
jle
push
cli
or
pop
scas
mov
push
dec
je
imul
lds
adc
dec
lea
fcomps
sbb
outsl
in
call
jge
in
jnp
mov
and
adcb
fwait
push
or
or
pop
inc
int3
cmp
stos
mov
and
fwait
int
and
sub
mov
cmp
jbe
jo
mov
mov
xor
fisttpll
jge
cld
dec
inc
cmp
stos
imul
xchg
lret
mov
pusha
rol
mov
cmp
mov
into
dec
std
mov
sbb
pushf
jb
in
pop
mov
push
jp
lea
cltd
mov
addr16
or
dec
jo
insb
out
fisttps
dec
adc
push
push
outsl
lds
mov
shlb
pusha
mov
jl
std
andl
add
loope
push
bnd
das
cmp
push
aad
xor
outsb
mov
fsubl
daa
out
and
cli
mov
sbb
dec
xchg
dec
inc
pushf
es
push
jbe
xchg
lcall
jo
jle
cmp
insb
mov
pop
or
jno
push
push
cmp
sbb
adc
xchg
sub
xor
mov
sub
add
xorl
lcall
jmp
mov
fstl
pop
in
lahf
sti
mov
and
subl
in
rclb
mov
andb
xor
xorl
pop
pop
imul
out
cmp
mov
sbb
dec
hlt
lret
or
in
and
ljmp
testl
sbb
mov
outsb
in
mov
lods
adc
fwait
inc
jne
push
cli
lret
out
jp
or
ret
add
dec
aas
shl
in
xor
pop
sarl
fwait
ss
rorb
sbb
fwait
lock
out
fwait
daa
rcrb
mov
test
ret
mov
lahf
sbb
mov
out
daa
cmp
xorb
es
fcompl
push
cld
xchg
xchg
and
sbb
pop
jle
or
out
cmp
or
repnz
sub
push
mov
popa
mov
out
mov
repz
xor
inc
mov
cmp
lahf
pop
roll
push
xchg
cmp
sbb
fisubrl
shl
in
enter
jb
imul
in
dec
std
dec
lcall
xlat
loopne
aad
and
lods
pop
pusha
xchg
shrl
cltd
iret
adc
test
pop
lods
adc
sub
push
dec
add
push
pop
hlt
repz
mov
inc
ret
push
or
imul
push
fwait
sbb
or
stos
mov
lret
push
mov
push
inc
pop
sahf
sub
xchg
ljmp
dec
cltd
fildll
es
inc
stos
nop
inc
cmp
xchg
xchg
dec
mov
add
and
xor
stc
xchg
aad
cwtl
pop
or
subl
enter
cmp
shl
out
popf
dec
or
pop
mov
sub
movsb
pop
fidivs
shrl
lret
sub
cmc
sub
cld
adc
dec
fidivrs
data16
jne
mov
cs
fs
push
lds
cmp
arpl
orb
xor
add
and
jno
loopne
das
ja
repz
sub
dec
lock
dec
scas
and
jae
xor
mov
test
jae
xor
out
xchg
pop
bound
mov
add
add
lods
scas
xchg
clc
push
add
ret
movsb
ficoms
test
mov
mov
lahf
xchg
pop
shr
cwtl
sbb
push
xchg
movsl
inc
pushf
and
push
mov
insb
test
cmp
xor
xchg
loopne
jno
pop
mov
imul
jo
mov
call
cmp
frstor
lahf
iret
xchg
es
out
mov
sti
fdivrp
fsubrl
repz
stos
mov
dec
outsl
jns
xchg
jl
andl
jmp
sub
pop
rcll
lret
or
add
fstpl
pop
mov
jle
divps
mov
xchg
pop
mov
stc
js
sbb
mov
imul
ja
xor
mov
xchg
test
mov
mov
sbb
pop
lret
jecxz
fnstsw
rcr
adcb
xchg
loopne
pop
ljmp
outsb
sbb
jbe
xchg
cmp
jmp
xor
bound
sub
test
push
ja
std
pushf
add
pop
aad
jnp
gs
dec
push
push
jns
fstl
lret
in
xchg
shrb
int
fidivrl
cmp
ljmp
mov
cmp
or
out
test
dec
push
xor
popf
out
lcall
sub
clc
mov
sahf
lods
sbb
fdivrs
leave
imul
faddl
push
pop
popf
icebp
rcr
or
incl
out
mov
jns
jnp
jp
movsl
rorl
lds
repz
jg
or
out
mov
add
call
mov
sbb
jne
rorl
inc
fiaddl
push
and
inc
je
inc
lea
faddp
pop
cltd
jbe
xchg
in
jle
stos
push
add
test
in
mov
xor
mov
fisubrl
jge
maxps
das
sub
add
and
pop
xchg
addl
bnd
dec
ffree
bound
incl
test
dec
lcall
inc
out
lretw
and
bound
bound
sub
push
sub
imul
les
xchg
jns
push
xchg
cmp
dec
adc
jp
mov
or
inc
repnz
loop
pop
fstl
in
push
loopne
sbb
flds
push
movsb
sahf
cmp
add
sub
pushf
or
daa
push
or
dec
and
pavgw
loopne
sub
negl
jg
js
movsb
lret
push
loopne
push
pop
sbb
subl
mov
push
cltd
insl
and
fninit
mov
pop
push
push
adc
testl
inc
aam
jmp
popa
jo
into
dec
fisttps
push
lods
pop
pushf
popf
insb
fists
dec
shl
inc
lods
cmp
push
inc
push
xor
dec
jb
adc
inc
inc
cmp
testl
fcmovnb
in
lret
sti
lret
movb
push
xchg
arpl
sub
jl
fstpt
mov
cmc
test
push
insl
push
clc
enter
sahf
dec
pop
jle
loopne
outsl
jg
adc
dec
or
inc
push
stos
test
push
fldl
lds
or
nop
push
mov
mov
das
cs
cwtl
aas
jnp
fnstsw
adc
push
test
insl
data16
push
ljmp
inc
sub
mov
dec
push
jp
int3
jl
fcomps
pop
cmp
in
mov
das
lods
arpl
std
ljmp
cmp
cmpsl
out
mov
mov
stos
lds
jbe
cmc
mov
xor
fstpt
or
mov
shl
xchg
lods
scas
sub
scas
mov
sbb
dec
div
push
mov
lods
xor
add
dec
js
dec
clc
xlat
fildll
ret
repz
lea
cwtl
enter
int3
shlb
repz
fucom
subb
jecxz
pop
push
or
jae
test
aas
cmp
adc
jecxz
inc
pop
je
dec
fcoms
jnp
out
inc
dec
sub
sbb
in
pop
or
jmp
mov
pop
xor
leave
xor
mov
push
pop
sbb
lret
sbb
popf
pop
and
fcoms
mov
add
cmp
addl
sbb
sbbl
lea
and
loop
faddp
dec
mov
fbstp
filds
pop
into
pop
jae
mov
pop
lea
arpl
cmpsb
gs
jnp
mov
jbe
lds
ja
jo
repnz
push
cmpsb
icebp
test
pop
inc
dec
sub
cmpsl
add
nop
mov
mov
cwtl
in
aas
or
iret
mov
add
push
jmp
push
aam
jbe
mov
rcll
dec
das
arpl
pop
jbe
fs
adc
push
mov
lods
pop
lea
jbe
lret
mov
repz
mov
sub
add
icebp
js
and
sbb
int3
push
cltd
rclb
stc
aas
mov
inc
shrl
xchg
xor
stos
fimuls
xchg
lods
jne
loop
pop
andb
out
inc
adc
and
lods
sub
mov
loop
movsb
iret
fcmovnbe
and
mov
cmp
xor
inc
out
jmp
mov
jg
xchg
ret
cmp
cltd
ret
mov
jecxz
rorl
daa
test
test
sbb
pop
cmp
aas
mov
movsb
mov
lods
adc
in
enter
cmc
das
jnp
repnz
or
jl
add
lods
outsb
and
jge
fsubrs
dec
xor
mov
jbe
jbe
lea
and
hlt
setb
ja
ja
insl
mov
inc
inc
mov
jnp
sub
negl
fisubrs
sbb
outsb
jb
push
shrl
adc
mov
lea
jmp
xchg
mov
and
cwtl
adc
jno
pusha
fildll
jo
jnp
adc
cltd
jmp
outsb
or
push
popf
xor
js
in
lret
adc
jne
popf
sbb
sub
xchg
mov
xchg
ret
sarl
aaa
sbb
push
setge
xchg
imul
pop
xchg
test
shrb
push
add
lds
aam
stc
pop
ret
inc
lahf
in
imul
xlat
cld
jecxz
mov
push
fadds
xor
jnp
push
pop
mov
negl
movsl
icebp
dec
sub
iret
jbe
cmc
stos
pop
xor
imul
push
les
cwtl
popf
rcll
and
in
cmc
es
xlat
sub
cs
or
fisubrl
mov
and
andl
lock
int3
in
xchg
call
inc
sarl
jbe
inc
lret
in
ret
icebp
out
xchg
sbb
in
xchg
pop
int
push
cmp
jns
mov
scas
sub
push
inc
add
fisttps
fsubrl
insb
aam
mov
xchg
movsl
pop
into
cmp
mov
xchg
test
jae
xchg
lea
in
mov
js
or
movsl
push
movsl
shl
aad
cmpsb
or
fisttps
sub
jb
dec
lret
stc
mov
call
shll
jo
lret
incb
out
sub
inc
adc
push
mov
cltd
imul
cwtl
inc
pop
addr16
mov
cmp
dec
rorl
mov
sbbb
loope
or
into
sub
cli
out
fcoml
push
mov
stos
mov
mov
push
and
insl
loopne
mov
enter
mov
jne
mov
jp
xchg
cmp
mov
aad
and
sbb
cmp
cli
arpl
jns
sub
jnp
add
mov
and
shrb
jb
sti
stos
inc
cmp
imul
les
jl
enter
pusha
xchg
fildl
xchg
xor
and
pop
push
es
mov
shlb
cli
xor
sti
repz
mov
pop
test
in
sbb
add
call
mov
fsts
jbe
popa
and
ret
mov
jbe
xchg
inc
sub
dec
mov
jmp
adc
fs
test
iret
push
stc
xchg
inc
loopne
shrb
mov
push
loopne
lcall
pop
loopne
popf
dec
pop
negl
shll
sar
xor
mov
mov
insl
mov
sbb
lea
imul
loope
mov
icebp
sar
jno
enter
dec
sarl
cmp
testl
jecxz
or
andb
loope
or
jmp
sahf
sub
dec
test
xor
dec
xchg
xchg
rcrl
dec
sbb
dec
addl
in
push
or
inc
sub
jmp
cmpsb
adc
cmc
add
sahf
cmp
sbb
sub
pop
inc
sti
mov
mov
xchg
mov
xchg
scas
add
les
outsl
lods
int
mov
dec
sub
pop
repnz
dec
jnp
mov
mov
xor
fwait
jb
sbb
gs
outsb
and
pop
mov
jg
fwait
adc
sbb
addr16
push
mov
xor
cmp
fisubrl
imul
push
shll
and
add
add
cmpsb
and
andb
inc
popa
inc
int3
lock
faddl
movsb
lea
setns
popf
dec
jbe
dec
loop
and
xchg
sarl
jo
mov
dec
cmp
inc
cmpsl
insl
jns
adc
shr
scas
sub
pop
xchg
outsl
jbe
push
mov
and
xor
dec
pop
push
xchg
movsl
pushf
or
and
xchg
pop
and
xchg
dec
clc
inc
lods
hlt
push
les
scas
jmp
insb
add
ss
mov
lcall
pop
mov
xchg
dec
das
cli
mov
test
mov
pop
out
lret
xchg
dec
out
fnstcw
pop
sub
ljmp
dec
popf
stos
ret
push
lret
pop
and
sub
jle
filds
cmc
outsl
pushf
push
cmpsl
popf
shll
sub
fucomip
int
ret
shrb
cltd
xchg
aad
and
jmp
push
bound
jbe
cltd
out
cld
in
pop
out
aaa
movsl
jmp
push
cmp
push
enter
push
aaa
jg
aas
push
mov
adc
es
repnz
fimuls
data16
shl
int3
pop
cld
fmulp
test
cmp
imul
in
out
lods
xchg
push
or
push
or
orl
or
mov
jb
test
adc
rolb
out
shl
push
add
xchg
mov
cmp
xchg
test
add
cmp
arpl
add
xchg
mov
xor
pop
pop
jg
rclb
in
push
jg
jo
push
adc
xchg
cmpsl
push
jp
dec
rcrl
lea
mov
fsubs
lods
adc
jle
aas
xchg
adc
ret
cs
lock
out
aas
mov
sbb
insb
adc
je
jle
leave
inc
mov
jb
cmc
xor
adc
jno
cmpsb
xchg
inc
das
fisubs
mov
push
mov
jns
in
pop
pop
in
hlt
js
fucomp
fsubrl
xlat
in
sahf
xchg
mov
mov
jge
xor
icebp
xlat
sbb
mov
shlb
inc
xor
sbb
and
lret
sbbb
xchg
dec
adc
pop
cmp
adc
push
dec
push
stos
xchg
xor
push
pop
mov
adc
xor
pusha
mov
dec
je
xor
inc
mov
cwtl
mov
jae
xor
lods
addr16
into
dec
scas
es
inc
and
cmpsb
xor
mov
icebp
inc
popf
add
mov
push
rcll
cmc
jp
push
dec
inc
cld
jnp
ds
jns
dec
stos
push
test
sahf
sbb
daa
sbb
sahf
pop
ficompl
outsb
pusha
push
pop
mov
jl
test
subps
das
jl
cltd
jbe
ja
je
and
sub
add
insl
divl
dec
idiv
add
and
ret
mov
or
xchg
sahf
jp
out
sbb
es
or
mov
cltd
dec
adc
lahf
movsl
xchg
fcmovnu
push
xor
imul
jecxz
sub
test
dec
add
in
lds
add
dec
es
insb
mov
add
hlt
dec
sub
js
dec
sbb
dec
add
aad
adc
or
mov
push
scas
sar
jbe
aad
frstor
test
pop
outsl
fistpl
rcrb
lcall
ss
mov
imul
addr16
rolb
push
jo
mov
push
xchg
and
scas
loope
mov
adc
push
aam
test
loope
stos
mov
mov
jl
mov
inc
cmp
pop
dec
repnz
ja
lea
xlat
cmp
loopne
jns
mov
stc
shl
ljmp
rcl
lret
jbe
shll
push
jne
aas
out
test
out
mov
sbb
jg
popf
inc
addr16
pop
shl
icebp
push
adc
cmp
sbb
inc
push
fwait
xor
push
jge
mov
xor
mov
pop
jg
lds
and
sub
mov
jmp
push
mov
inc
fnstsw
pop
addb
sub
sbb
imul
rcrb
add
fsubrp
mov
mov
sub
mov
inc
mov
movsl
andl
sub
jno
aaa
push
push
loope
dec
outsl
icebp
cwtl
adcb
fidivl
push
dec
push
or
mov
jge
std
iret
push
movsb
lods
xor
stos
into
and
stc
add
popa
xchg
out
jmp
out
out
aas
mov
adc
xchg
push
pop
mov
mov
test
imul
jbe
mov
mov
cmp
xor
popf
push
cmc
xchg
mov
testb
movsb
imull
xlat
sbb
cmp
push
sub
icebp
and
and
outsl
ficompl
jae
repz
sahf
jge
pop
sbb
xlat
jmp
xor
in
iret
shrl
stos
jns
sahf
inc
je
pop
push
das
push
dec
and
insl
int3
imul
mov
and
sbb
leave
pop
int
add
xor
sbb
mov
ret
cs
in
mov
xchg
push
imul
push
xchg
out
leave
gs
pop
in
dec
into
sub
pop
pop
push
outsb
xor
insb
xchg
xchg
sbb
loope
stos
into
push
fdivr
shlb
shll
repz
xor
movsl
jl
loope
ljmp
scas
and
lock
cmpsb
in
aam
test
or
or
jno
sub
insl
jne
xchg
push
ss
in
cmp
cmpsl
add
xor
outsb
cld
adc
and
mov
xchg
mov
add
mov
pop
sbb
cmp
xchg
cmp
push
fcomi
push
xchg
les
adc
push
pop
mov
or
mov
cmpsb
xor
push
data16
enter
arpl
cmc
mov
int3
faddp
jne
pop
imul
cmp
add
divl
inc
mov
xor
shl
xchg
add
movsl
leave
push
jns
daa
sub
xchg
imul
pop
repz
sbb
loope
mov
pop
jecxz
mov
jmp
push
jp
fidivrs
fsubp
outsl
add
xor
addr16
shll
push
sbb
cmpsl
push
inc
out
mov
mov
pop
fistpll
inc
mov
dec
pop
leave
fcmove
int3
add
inc
xlat
adc
dec
pop
clc
pop
mov
mov
inc
and
roll
add
dec
cmp
sbb
stc
pop
dec
or
sbb
int3
push
pop
fst
popf
jge
push
stc
jbe
or
cltd
and
push
das
pop
fisubs
lods
sub
push
test
pop
and
insl
sub
in
lret
add
cmp
xchg
and
out
sahf
fwait
sub
adc
jecxz
loope
rcrl
mov
stos
sub
call
push
jl
mov
or
pop
or
jns
mov
stos
push
jno
bound
sbb
addb
jb
mov
xchg
dec
jmp
cld
pop
jp
rcll
stos
jno
lahf
adc
add
adc
mov
outsb
xchg
adc
mov
sti
cltd
push
test
xchg
xchg
loopne
repnz
js
and
jmp
xchg
loope
ljmp
xchg
pushf
imul
shrl
pop
xor
jl
adc
dec
jmp
mov
push
lods
scas
test
xchg
push
into
lcall
ljmp
xor
lcall
mov
dec
jae
mov
xchg
in
xor
insb
pop
fsub
dec
jae
jns
shlb
mov
pushf
pop
imul
push
sbb
mov
daa
push
mov
xlat
xchg
pop
and
sti
dec
sahf
in
in
out
and
mov
ret
jb
add
out
sarb
repnz
mov
cmpsl
adcb
mov
sub
aam
sub
popa
mov
sti
mov
fnstcw
fdiv
ja
ss
sahf
stos
mov
mov
mov
mov
scas
sahf
jb
mov
stos
cld
and
iret
or
fwait
les
add
mov
imul
ja
sbb
sbb
or
mov
xlat
cs
jno
idivb
sbb
cmp
andb
pusha
inc
mov
push
mov
test
adc
sub
icebp
mov
xor
sub
cltd
push
push
mov
or
dec
xchg
stos
loop
ja
mov
adc
mov
jl
dec
dec
out
sub
inc
pushf
ja
xor
movl
cmp
push
and
cmp
xor
cmp
repnz
andl
pusha
xor
mov
shlb
cwtl
mov
data16
pop
adc
js
push
clc
dec
mov
test
stos
stos
dec
clc
fisttps
repnz
mov
imul
testl
int
mov
lea
or
insl
int
xchg
add
imul
sahf
jo
xchg
mov
leave
mov
jne
jp
scas
sbb
pushf
test
mov
inc
push
cs
pop
mov
or
sbb
xchg
popa
cmp
sbb
cmpsl
add
stc
jp
pop
push
xchg
xchg
scas
mov
push
subb
push
mov
cmp
pop
dec
daa
xor
fidivs
notb
or
das
cmp
jecxz
jecxz
std
js
lea
stc
aam
lret
xchg
shll
stos
fwait
push
scas
jae
dec
das
push
sbb
or
pop
sbb
imul
cld
dec
sbb
pusha
in
mov
add
mov
cld
xor
xchg
inc
pop
leave
gs
push
icebp
push
popa
xor
adc
push
subl
inc
mov
adc
les
adc
add
cmp
jl
mov
dec
jne
js
mov
test
lcall
sub
fcom
pop
and
mov
sbb
loope
nop
pop
iret
mul
pop
ja
repnz
call
xchg
jp
pop
les
jge
inc
sbb
dec
outsl
testb
xchg
cmpl
mov
xor
arpl
mov
cmp
jp
out
add
gs
js
test
fwait
mov
cmp
jnp
xchg
loop
push
sbb
data16
test
adc
mov
or
mov
fincstp
enter
nop
cltd
dec
add
je
aas
sub
push
cmp
adc
push
test
mov
xor
out
pop
jg
push
mov
bound
xchg
mul
inc
inc
push
std
sbb
mov
push
fcompl
mov
fsubrp
mov
lods
add
lret
leave
cmc
mov
int3
pusha
xlat
out
cs
pop
mov
ret
pop
mov
jb
movsl
jno
fucom
add
push
jge
movsl
dec
push
icebp
sub
adc
sar
push
inc
pop
sub
adc
rorl
movsw
dec
out
bound
sahf
out
movsb
fnstsw
outsb
adc
xchg
sti
mov
shlb
cli
addr16
ja
leave
jmp
rcl
mov
cs
adc
sbb
sbb
add
repnz
sub
fisubrl
cld
dec
pop
jae
push
ljmp
es
int
mov
jbe
std
rorb
mov
or
xchg
out
or
push
xchg
lods
lods
mov
ret
testl
popf
jp,pt
add
pop
bound
mov
push
sbb
pop
push
fsubrl
sti
rcrl
pop
rorl
les
add
sub
or
xlat
xchg
test
stos
sub
push
inc
jne
push
out
xor
pushf
fimull
cmpsl
dec
arpl
scas
sbb
inc
leave
mov
fsubl
rclb
dec
popa
inc
sub
call
dec
out
xchg
xchg
insl
and
push
inc
daa
lcall
pop
jmp
xchg
pop
or
sub
mov
dec
loope
pop
ja
sbb
addr16
popf
insb
enter
xchg
mov
fdivrp
adc
mov
or
imul
insb
out
push
inc
inc
out
es
hlt
jmp
xor
and
xor
sarl
xorl
xchg
ficoms
call
jbe
xor
sarb
gs
cmp
jmp
jp
repnz
test
je
daa
mov
frstor
mov
mov
push
jne
or
jge
add
jae
or
mov
std
dec
mov
push
ret
inc
cmp
xor
dec
ds
pop
add
lret
jmp
lock
data16
xor
add
out
or
xor
xchg
jmp
pop
subb
fcmovb
push
imul
xor
add
sarb
cld
or
lods
insb
in
ss
jmp
cmp
push
mov
in
in
or
cmp
pop
jbe
loope
cmpsb
xchg
jg
popa
hlt
jno
xor
jns
jne
push
mov
pop
sti
aaa
roll
inc
lods
pusha
or
cmc
frstor
xchg
sbb
testb
clc
dec
inc
add
jge
cld
xor
sub
nop
jg
xchg
cmpsl
sbb
cltd
mov
ja
jge
dec
mov
push
cmp
cwtl
int3
into
popa
mov
adc
call
das
xchg
mov
mov
popa
les
xlat
outsl
adc
push
jo
call
mov
sub
lcall
sub
cmp
je
sub
js
xor
mov
sbb
mov
cmp
add
push
rolb
adc
dec
aaa
lods
cmp
sarb
mov
int3
lock
outsb
gs
int
xor
imulb
sbb
repnz
sub
out
mov
lds
movsl
into
pop
xor
push
xchg
jle
shll
hlt
pop
mov
cmp
inc
sub
insb
and
adc
loope
push
inc
fnstcw
dec
clc
rcr
lret
insb
mov
dec
adc
pop
mov
sbb
sbb
mov
fcoms
movsb
test
in
xchg
push
pop
mov
cld
xor
pusha
lock
in
fldenv
cmpsl
stos
jle
shll
sbb
cmp
mov
sub
pusha
add
inc
fs
mov
push
rorb
pop
mov
lcall
cmc
adc
sub
and
push
push
int
pop
lahf
dec
nop
xor
addr16
testl
sbb
stos
es
push
cs
add
and
rol
jle
push
mov
pop
mov
jge
rcr
gs
add
add
cmp
imulb
push
not
xchg
jge
inc
and
add
mov
mov
stos
in
jl
bound
dec
repnz
jecxz
xchg
xchg
mov
insb
cmp
es
dec
jle
mov
cmp
into
pop
xor
add
mov
xor
inc
mov
or
push
out
push
sbb
pop
mov
jo
mov
scas
and
sub
pop
push
dec
jge
fisubrs
fiadds
sbb
fimull
rcl
sar
pop
add
stc
call
lods
mov
dec
dec
lock
dec
xchg
mov
adc
sub
gs
mov
fdivl
or
or
fidivrs
insl
sub
movsb
xchg
pop
stos
inc
inc
mov
push
lods
insl
cmp
lods
xchg
cwtl
stos
movsb
lods
mov
push
mov
xor
inc
mov
orl
xchg
adc
daa
lods
pop
mov
mov
inc
jmp
xor
mov
sbb
stos
xchg
enter
shll
jg
je
loopne
das
and
or
addl
xor
loopne
push
and
mov
mov
dec
push
push
lock
sub
sbb
push
ret
insb
inc
mov
icebp
inc
aaa
xlat
xchg
test
cmp
pop
adc
cmpsb
aam
push
jecxz
xor
lahf
lret
jecxz
movsl
out
jmp
fwait
nop
adc
adc
jne
mov
adc
fsubs
lcall
test
mov
pop
aad
jns
idivl
lahf
imul
inc
into
imul
ret
leave
adc
jmp
test
sbb
dec
xorl
and
xchg
mov
mov
push
add
xor
cli
push
push
xchg
push
cmp
sbb
xor
sbb
sub
pop
icebp
out
pop
cwtl
in
adc
movsb
add
add
ret
loope
fisttps
clc
inc
sub
mov
inc
shr
xlat
clc
mov
mov
insl
cmp
or
dec
sti
movsb
pop
xor
test
dec
sub
adc
mov
mov
shll
xor
in
lret
jmp
shrl
push
test
hlt
xchg
pop
repz
popf
mov
inc
cmp
xchg
std
lods
aas
lds
cmp
dec
push
mov
clc
xor
dec
int
subb
imul
lret
cmp
xor
cld
in
mov
jbe
push
bound
leave
mov
mov
push
jl
cmpsl
mov
fsts
mov
push
movsl
pslld
mov
xor
push
sub
xor
pop
cld
sub
adc
add
cltd
pop
ret
push
xor
pop
leave
mov
add
repnz
mov
cmp
cs
cld
mov
cmp
xchg
stc
ret
pop
xor
push
movsb
mov
mov
fsub
pushf
dec
lea
sarb
sub
fimuls
rcll
inc
jb
push
sbb
push
test
into
sub
cmp
pop
out
mov
xchg
in
push
add
xchg
icebp
movups
aaa
sub
das
sub
jmp
cmp
sbbb
jle
add
movq
mov
sub
mov
stos
dec
imul
inc
sbb
fdivrl
dec
mov
jo
icebp
mov
pop
dec
mov
in
xchg
outsb
ljmp
std
xor
ja
leave
imul
and
dec
mov
rclb
scas
sub
xor
cs
mov
add
js
gs
xor
test
scas
fstl
enter
sahf
imul
mov
xchg
mov
enter
pop
nop
xchg
jle
mov
pop
push
stc
jo
jecxz
xor
jl
add
sarb
ja
add
jns
xchg
adc
inc
jo
cmpsl
inc
mov
mov
stc
adc
idivl
and
dec
in
outsl
jb
shrb
xor
push
pop
out
je
inc
jmp
cmp
push
jge
sbb
out
lods
pop
xlat
das
lds
inc
out
fcom
jg
das
test
stos
mov
mov
cmpb
cld
test
push
push
inc
cmpsb
stos
xchg
in
sbb
dec
dec
jne
dec
lds
scas
adc
jl
adc
testl
adc
or
pmaxsw
xor
fsubr
out
lea
sub
and
insl
gs
or
mov
push
pop
popf
std
and
or
mov
pop
insb
or
jg
aaa
mov
dec
cmp
cmp
inc
aad
push
add
inc
jbe
xchg
pand
dec
nop
add
adc
xor
in
jbe
mov
pavgb
mov
sbb
xor
xchg
push
dec
movsb
inc
call
jge
insb
cld
inc
mov
in
fiadds
push
inc
push
add
sahf
ds
mov
mov
outsl
stos
fcompl
loop
sub
push
cmpsb
jp
bound
or
cmp
inc
testl
inc
inc
lcall
loopne
loop
loopne
cs
mov
jne
jg
fstpl
adc
imull
insb
leave
dec
cwtl
push
mov
cs
mov
pop
jns
rorl
pushf
xor
dec
jo
and
iret
and
loopne
aaa
les
ljmp
mov
adc
lods
adc
jmp
dec
out
mulb
xlat
jmp
test
ja
dec
inc
cmp
and
jmp
push
dec
or
push
jecxz
lock
ret
add
lahf
cs
sahf
add
scas
vcvttsd2si
mov
shufps
mov
ds
rorb
mov
lahf
lahf
or
insl
mov
jl
xor
cli
inc
lock
sub
outsl
jbe
adc
cmp
cs
inc
outsb
test
gs
repnz
adc
nop
adc
enter
jg
and
fwait
pushf
mov
push
or
out
insb
test
loopne
pop
jb
cltd
cld
push
cmp
insl
jnp
inc
pop
stos
in
aad
sbb
repz
out
fisubrl
and
add
add
pop
sahf
sbb
mov
mov
xor
xchg
mov
push
push
cmpsl
fsubs
jne
and
push
pop
pop
lcall
pop
xchg
mov
out
jne
or
jne
sub
cmpsl
or
test
sub
fs
and
out
fnstsw
xchg
pop
push
cmpl
cld
xor
push
cltd
mov
mov
mov
test
push
mov
call
sti
nop
sbb
push
test
or
jmp
scas
in
ret
aad
ds
inc
lret
sub
jmp
mov
test
cld
and
cltd
and
push
and
jnp
pushf
dec
stos
mov
hlt
dec
ret
adc
xchg
inc
mov
jne
cmpsb
sbb
popa
push
cmp
add
sbb
dec
repz
jbe
jnp
and
dec
rol
dec
stos
dec
inc
and
push
mov
or
xor
cmp
test
adc
push
mov
stos
adc
xor
loop
movsl
jmp
or
int
aaa
lcall
pusha
movb
or
dec
decl
mov
mov
adc
in
adc
push
dec
mov
jno
mov
xorl
cmc
ja
mov
xchg
add
pop
rcrb
fmuls
outsb
pop
aas
sbb
xor
outsl
cmpsb
lret
lcall
lock
adc
orb
repnz
cmc
fldcw
nop
push
pop
or
aas
stos
dec
pop
test
out
cmp
lea
mov
test
push
push
test
mov
mov
sub
cld
pop
cld
stos
test
nop
jbe
js
inc
cli
mov
sbb
ret
movsl
xchg
push
jb
sub
mov
inc
push
cmp
jnp
push
or
int3
xchg
hlt
jle
dec
push
pusha
aam
pop
mov
and
enter
add
inc
xchg
inc
jmp
bound
or
push
jb
adcb
cmp
ror
pop
xchg
push
stos
adc
xchg
nop
sahf
xor
jnp
enter
jbe
or
imul
mov
daa
in
push
and
clc
sbb
and
out
mov
dec
jmp
les
inc
leave
sub
jb
cmc
mov
lahf
xor
call
sbb
sarb
jmp
inc
flds
aad
loop
push
aaa
pop
xor
idivl
rolb
and
mov
sbb
sub
fs
jb
in
dec
sub
ja
clc
jl
lea
sbb
lret
mov
das
push
sbb
push
inc
stc
cmp
iret
dec
or
pop
aaa
les
cmpb
pop
enter
pop
addb
or
mov
and
jne
pop
outsb
fwait
mov
bound
inc
fisttpll
fwait
cli
in
push
imul
mov
jb
ret
cmc
push
jne
pop
adc
mov
mov
sbb
aad
jns
and
xchg
lcall
inc
push
xchg
hlt
fdiv
ret
and
jmp
out
add
test
xchg
push
mov
sub
leave
loopne
movb
mov
xlat
sbb
add
jb
push
add
loope
in
inc
insl
xlat
inc
imul
dec
pop
fstps
and
mov
bound
cwtl
jmp
int3
or
in
pusha
dec
and
and
into
mov
sti
es
jge
into
in
in
push
fldl
push
fldt
shr
and
stos
ja
pop
mov
push
fldcw
rcrb
test
lds
js
test
pusha
pop
and
in
dec
mov
popf
or
mov
sti
mov
pusha
sbb
lret
test
pop
push
and
jb
sbb
jge
xor
cltd
xor
inc
cmp
insb
mov
mov
std
xchg
jbe
xor
out
cwtl
and
ja
xchg
cmpsl
cmp
cmp
je
or
dec
sub
inc
es
cmp
and
and
mov
out
adc
nop
pop
xor
int
stos
insb
ret
in
push
in
and
in
jmp
aad
cmp
dec
and
mov
scas
or
inc
or
imulb
mov
jno
lahf
cmc
lds
imul
inc
clc
mov
xchg
mov
jl
lock
xor
test
shll
dec
pushf
rcl
test
mov
xlat
fdivl
fmuls
outsb
scas
aam
cltd
sbb
mov
cmp
enter
std
mov
mov
adc
adc
pop
inc
popf
add
mov
adc
sahf
jecxz
lret
sub
fcomp
and
daa
jne
inc
mov
aas
dec
sub
sahf
xor
mov
jns
pusha
stos
cmp
stos
xchg
frstor
aam
push
fiadds
push
pop
out
pop
shlb
into
xor
sbb
movsl
pop
inc
ds
mov
push
jp
inc
dec
out
loope
adc
jb
adc
mov
mov
repz
das
call
push
push
cmp
jecxz
fxch
in
paddq
decl
jb
in
out
jmp
inc
mov
fcomp
pop
jnp
and
jecxz
cmp
mov
fadds
add
movsb
mov
pop
sbb
pop
ret
inc
sbb
shll
push
pop
xchg
mov
add
inc
xchg
xchg
add
das
mov
dec
aaa
fstpt
xchg
add
cmp
cmp
mov
test
shr
lds
movsb
je
scas
nop
stc
sub
pop
mov
inc
sub
mov
aad
lock
out
scas
mov
lret
cld
xchg
sbb
xchg
arpl
leave
sub
dec
xor
pop
xchg
pop
sub
inc
icebp
outsl
add
mov
fsubrl
mov
cmpsl
or
jbe
out
add
mov
jmp
out
xchg
push
or
jmp
outsb
aam
jecxz
cmpsb
es
pop
sahf
inc
pop
popf
scas
cmp
imul
xchg
je
movl
xchg
loopne
mov
mov
ret
movsl
adc
popa
inc
mov
insb
lea
mov
shrl
cmp
scas
insb
inc
xchg
jl
lret
arpl
imul
lea
test
les
sbb
mov
mov
dec
sbbl
aas
and
sub
dec
pop
jmp
movsb
xorl
sbb
push
test
push
popa
arpl
cld
insl
add
dec
lcall
mov
gs
dec
clc
rcrb
popa
ss
cltd
cmp
and
add
fisubl
les
mov
in
enter
out
addr16
mov
push
push
push
mov
inc
imul
loop
mov
ljmp
stos
cltd
loopne,pt
es
int
stos
and
mov
in
and
jl
or
addr16
ret
sti
mov
push
addr16
cmp
mov
int
es
xchg
ffree
in
jo
inc
xchg
xlat
fwait
cltd
loop
xor
repnz
cmp
cmp
sahf
push
sub
sbb
inc
inc
inc
xchg
aam
inc
push
icebp
or
jmp
ret
mov
xor
roll
aam
pop
sbb
fadds
fcmove
in
mov
daa
mov
ret
add
inc
adc
jp
dec
repnz
sarl
sbb
and
jl
cs
ret
jge
outsb
push
pop
int3
outsl
mov
int
stos
mov
jp
and
out
lock
popf
lret
sub
cmpsl
in
movb
xchg
shll
lods
fstpl
jmp
mov
adc
arpl
xchg
rclb
imul
add
insb
xchg
adc
dec
mov
imulb
or
mov
xor
daa
jmp
in
push
xchg
adc
push
lds
arpl
and
fbstp
cmp
outsb
aas
and
xor
leave
js
cmc
inc
stos
mov
lcall
mull
push
lea
sbb
push
mov
div
rorb
jl
ret
pop
arpl
mov
or
or
mov
sbb
fmull
xor
pop
stos
push
sub
enter
stos
xchg
xchg
loopne
sarl
fiaddl
pop
mov
jae
mov
fcoml
add
out
outsl
div
gs
iret
into
out
sbb
pop
mov
ss
and
sahf
insl
jle
mov
int3
cs
dec
gs
xor
inc
addr16
push
mov
sarb
jmp
hlt
xor
movsb
lods
push
cmpsb
add
rcll
add
ljmp
outsb
stos
cmp
xor
ret
ret
push
xor
inc
add
mov
fwait
push
test
add
jb
jns
xor
ja
inc
pop
stos
mov
jne
inc
imull
cld
jb
cmp
int3
inc
xlat
jge
sub
mov
das
pop
ds
cwtl
mov
inc
jno
pushf
xor
xor
inc
xchg
cmp
rcrb
sbb
iret
int
push
out
ds
fwait
mov
inc
dec
push
and
jl
and
shl
ljmp
cmp
rorb
inc
inc
jnp
imul
icebp
cmp
out
not
scas
aaa
mov
imul
stc
push
bnd
fcomps
sbb
sub
push
dec
test
aad
mov
lret
lcall
push
dec
daa
xchg
push
mov
pushl
xor
ljmp
cwtl
mov
push
inc
cmp
ud2
repz
or
push
adc
fmulp
testb
xchg
daa
jb
test
push
jmp
pop
popf
insb
mov
fdivl
lods
lahf
adc
das
dec
add
adc
cltd
cmc
sub
jne
or
push
xor
movsl
xchg
inc
popf
mov
dec
leave
mov
and
inc
xchg
js
push
cld
popf
leave
subb
add
jno
jno
sahf
push
scas
and
mov
xchg
push
xor
xor
push
mov
addr16
popa
sub
cwtl
ror
mov
pop
and
enter
popf
cltd
clc
cmp
and
shr
pop
adc
cmp
and
add
fsubrl
dec
xor
sub
sub
inc
xor
push
or
ja
cwtl
ret
andl
int
popa
jecxz
cs
push
leave
outsb
stc
or
fisttps
cmp
mov
jl
divb
out
stos
xchg
xlat
sti
mov
stos
xchg
sub
daa
sbb
repz
inc
sub
dec
lahf
add
les
dec
dec
pop
insb
mov
inc
xlat
mov
shlb
in
jge
dec
jecxz
lea
out
and
add
popf
jge
adc
mov
sahf
jg
xorl
lods
aaa
sbb
xchg
insb
inc
inc
data16
mov
test
inc
icebp
lods
clc
nop
xor
and
ja
fisttpll
repnz
push
fidivl
in
sub
je
push
sbbl
out
mov
inc
mov
pop
fsubl
sbb
or
inc
jl
aaa
lods
outsb
loope
add
inc
stc
nop
cmp
xor
in
lods
add
xchg
cli
insl
pop
sub
shrb
dec
pop
repz
mov
push
cmc
mov
jmp
mov
sbb
pop
xchg
pop
rorb
inc
mov
dec
aas
xor
sub
bound
out
pop
jae
dec
jge
sbb
xor
inc
mov
dec
pop
cmp
andb
aaa
xchg
or
sub
popf
pop
xor
ljmp
adc
jecxz
outsl
mov
inc
leave
sub
bound
mov
inc
loop
in
mov
aam
mov
mov
jnp
mov
pusha
rorl
mov
out
dec
pop
fs
lods
dec
pop
xor
inc
push
sub
pop
popa
rep
jmp
jne
xor
xchg
inc
cs
and
xor
stos
enter
mov
xor
jp
jg
and
movsl
jnp
mov
subl
call
int3
sbb
push
push
int
mov
fiadds
test
pusha
sarb
jb
test
push
and
jp
mov
rolb
and
int3
pop
into
inc
daa
ss
sbb
mov
mov
push
call
push
jns
and
jle
imul
adc
mov
mov
pushl
gs
daa
dec
ret
movsl
fistpll
imul
push
pop
jmp
mov
cmp
jge
push
icebp
ficoml
pop
sbb
xchg
jge
fisttps
jns
pop
ds
add
ss
or
insb
dec
push
jecxz
inc
inc
rcrb
cmp
or
pop
mov
dec
aaa
gs
jo
jo
cvtpi2ps
mov
fwait
sub
adcl
push
mov
inc
ret
or
sahf
lea
cmpb
movsl
fnstsw
aaa
incb
adc
repnz
dec
cmp
hlt
mov
and
pop
and
gs
out
mov
xchg
inc
int3
shlb
jmp
adc
xor
lret
in
push
push
es
fistps
inc
sbb
push
std
out
push
lock
mov
jle
lods
mov
adc
mov
scas
mov
push
cmp
loopne
subb
mov
addr16
cmc
pop
pop
mov
movsl
imul
push
dec
and
or
mov
lea
lcall
arpl
pop
int3
mov
call
ds
popf
sub
stc
cmp
ret
or
push
jnp
xorb
xor
mov
push
cwtl
sbb
inc
rcll
in
in
adc
fldenv
stos
imul
adc
jmp
push
test
adc
fwait
imul
aam
mov
in
ret
ret
das
outsb
xor
adc
mov
mov
cmc
sarl
or
ror
stos
dec
sahf
bound
xlat
cmp
fcoml
out
pop
imul
mov
inc
mov
dec
popa
loopne
test
cmpsb
leave
xor
movsb
push
adc
es
cmp
loope
or
subl
xor
fs
jne
push
pop
movsb
test
push
stos
or
xchg
addr16
mov
data16
sub
jg
imul
imul
pop
lea
xchg
into
pushf
push
mov
mov
shl
jmp
sti
xchg
mov
rcl
stc
jecxz
mov
cmp
push
mov
push
dec
or
mov
pop
dec
xchg
mov
popa
add
cmc
sub
cmp
xchg
je
add
nop
xchg
push
imul
xor
imul
mov
in
pop
lock
lret
inc
sub
pusha
mov
pushf
xor
aas
ret
add
inc
mov
scas
shrb
mov
cmp
add
mov
inc
jnp
hlt
lea
push
push
loope
cli
icebp
lret
js
negl
cmp
test
fnstenv
sub
aad
lcall
mov
filds
xor
and
insb
lahf
mov
loope
xchg
adc
hlt
xchg
jg
inc
sub
jns
inc
dec
in
jo
out
add
mov
xchg
idivb
mov
out
ret
je
mov
loopne
icebp
sbb
pushf
addr16
movsl
jp
ret
pop
insl
mov
popf
ret
js
gs
repnz
mov
pop
jae
orl
add
xchg
jge
mov
bnd
dec
xchg
stos
and
or
insb
inc
dec
or
push
ret
xor
mov
mov
in
pushf
xchg
setg
sub
imul
jle
and
mov
sub
add
push
cmp
in
enter
jne
popf
in
pop
adc
pop
int3
mov
in
xchg
rcll
rolb
xor
jge
aad
push
pop
dec
push
xchg
add
sub
bnd
test
loop
lret
test
loope
movsb
cmp
and
les
sub
bound
jp
in
das
data16
sbb
push
test
inc
jg
repz
repnz
pop
in
xor
into
dec
incl
sbb
mov
add
out
rcl
push
je
or
sbb
out
dec
inc
or
and
push
aas
fcmovu
iret
inc
dec
jae
lret
cmp
std
inc
frstor
fsubl
or
aam
mov
pop
and
push
insb
jl
mov
add
pop
mov
fcmovu
fisubs
inc
jmp
in
ror
insl
inc
xchg
xchg
loopne
adc
inc
dec
push
stos
push
lods
xchg
cmp
xor
shlb
punpckhbw
jge
fdivp
ja
jp
test
stos
filds
std
cmc
inc
cmc
xor
mov
jp
cli
inc
adc
pop
aad
cli
insl
mov
jle
rorl
pop
lock
sahf
add
add
xchg
popa
outsl
xor
mov
cmp
ds
add
dec
ds
cmpsb
inc
js
mov
mov
jae
out
je
movsl
push
adc
cmp
dec
dec
ret
mov
dec
pop
jo
jp
int3
shlb
mov
jbe
cmp
push
dec
push
mov
add
test
sub
mov
push
xchg
movl
daa
lea
inc
cmp
fwait
aad
rcrb
dec
xchg
ja
out
dec
roll
sub
sbb
cmp
jecxz
push
mov
cmc
pop
pusha
or
dec
out
jae
or
cmpsb
ret
shl
mov
lods
loop
pop
push
fmull
repz
push
adcl
inc
pop
cmc
cmp
fistl
adc
cli
inc
loopne
mov
enter
in
mov
push
pop
lea
xchg
lcall
sbb
outsl
mov
pop
lahf
or
inc
pop
divl
in
or
stos
xchg
outsb
or
int3
and
aaa
cld
test
lea
inc
or
aad
sbbb
stos
adc
mov
in
and
pop
mov
add
fmul
xchg
dec
clc
std
cmpsl
inc
addr16
repz
xchg
subb
adc
out
jb
adc
rcrl
inc
pop
rcrl
lcall
pop
push
mov
pushl
insb
movsl
mov
dec
iret
cmp
mov
xchg
xor
or
scas
and
inc
add
gs
cmp
rol
mov
out
jo
and
ss
mov
addb
nop
fsubrs
push
dec
rol
arpl
ret
scas
fninit
xchg
xor
or
test
mov
fmull
orl
sub
ss
push
mov
adc
or
bound
cmp
mov
or
cmp
pop
insl
idivb
pushf
ja
inc
cltd
mov
sahf
mov
push
and
xchg
movsb
mov
cmpsl
fnstsw
mov
push
hlt
rcll
pushf
xchg
mov
in
sbb
repz
lea
push
cmp
imul
repz
push
shll
bound
xchg
or
xor
jg
and
les
arpl
or
jmp
sbb
mov
orl
mov
xchg
out
push
and
lret
push
add
popa
popa
shll
repz
setbe
decl
fcoml
add
popf
cld
cmp
stos
adc
xor
lods
jno
movsb
inc
mov
pop
cmp
fnstsw
sub
pop
repnz
or
dec
pop
aas
sbb
mov
rol
aad
mov
test
push
aad
in
scas
imul
jo
bound
clc
int3
jae
or
pop
adcb
inc
jecxz
subl
out
outsb
daa
xor
pop
mov
ss
dec
jb
push
sti
loopne
dec
aas
mov
aad
mov
inc
sbb
in
xorl
and
fs
dec
stos
adc
mov
push
aad
sub
hlt
fcmovnbe
out
pop
sub
xchg
pop
rcr
lret
jmp
shrl
inc
imul
subl
jae
mov
int3
lock
scas
cmpsb
clc
enter
addr16
xchg
inc
mov
out
jmp
stc
add
ficoml
add
repz
sbb
mov
xor
sub
xchg
rorl
imul
push
mov
fisubrl
in
insl
mov
scas
enter
pop
pop
out
jg,pn
fwait
das
ljmp
fwait
leave
and
loope
or
lock
adc
andb
and
adc
and
xor
jmp
xchg
hlt
out
or
jmp
aam
jmp
lcall
out
pop
xor
stos
jne
fidivl
adc
out
pop
xor
xchg
dec
jb
outsb
mov
mov
sbb
fs
add
jnp
stc
loopne
cmpsb
outsl
mov
pop
push
mov
inc
test
rclb
hlt
inc
aas
xorl
jno
xor
or
pop
sti
add
outsl
je
pop
roll
jb
int
xchg
mov
fldl
test
pusha
aas
xor
cltd
pop
insb
aas
enter
ds
cmc
xlat
xchg
andl
arpl
loope
icebp
jns
gs
ja
push
lds
sub
fwait
ret
int3
jle
popa
and
push
mov
cmp
sbb
xor
into
scas
test
or
push
dec
popa
push
hlt
pop
sub
ret
rcll
into
loope
push
shl
or
sbb
stos
jl
xchg
ljmp
fisubl
popa
pop
mov
cmp
jle
enter
xchg
sbb
fidivl
popa
mov
stc
loope
aam
int3
jmp
lea
sub
xlat
mov
orb
mov
dec
je
arpl
inc
adc
xchg
loope
sub
sti
mov
cmp
enter
in
std
cld
mov
aas
pusha
inc
stc
dec
repnz
adcb
hlt
xor
or
xor
and
add
test
fidivs
test
clc
lahf
pop
push
add
lret
cmp
add
xor
sahf
jbe
push
ror
jo
outsl
xor
or
popf
sub
xor
mulps
cmp
rcl
sti
imul
shrl
sub
sub
fnsave
mov
mov
sbb
mov
lahf
xor
call
push
enter
adc
jns
les
inc
pop
popa
scas
adc
das
fistpl
in
data16
jae
add
mov
shlb
sbb
out
inc
mov
das
inc
mov
lcall
sbb
and
jmp
push
dec
xchg
pop
jae
dec
cmp
inc
daa
add
mov
mov
push
and
cmp
add
dec
outsb
aaa
cmp
cmc
cmpsb
repnz
ficomps
in
test
ret
imul
jmp
xlat
popf
pop
xchg
mov
sub
push
mov
jnp
cmpsl
jo
fwait
cwtl
inc
loopne
int3
add
mov
cmp
mov
xchg
rcl
or
dec
movsb
mov
pop
sub
fsubl
mov
add
or
mov
lea
jmp
inc
cmp
jl
arpl
cmpsl
jbe
mov
ss
lcall
mov
xchg
add
xchg
popf
pop
into
mov
pusha
test
lret
scas
dec
scas
ret
ret
sahf
adc
mov
sahf
imulb
add
push
pusha
in
push
mov
mov
cmp
and
mov
test
sbb
stc
mov
lock
cmp
rcll
fcmove
and
xchg
ret
ret
aaa
mov
mov
call
push
ljmp
xchg
push
in
lahf
jae
mov
ret
outsl
insb
loop
push
scas
cli
call
lea
test
sub
mov
imul
dec
cmp
aam
test
mov
cmp
mov
pop
ss
mov
cltd
inc
mov
xchg
adc
in
cwtl
cmp
pop
push
ret
js
jns
hlt
ret
inc
mov
mov
loopne
pop
push
call
addr16
xor
add
das
in
in
mov
and
sub
shll
mov
sbb
sti
cmpsb
js
sbb
jecxz
sbb
sbb
lcall
sbb
das
push
sub
inc
xchg
dec
movsl
daa
pop
push
fsts
std
enter
jns
xchg
bswap
shll
ja
xor
jge
call
imul
cld
xor
cmpsl
pop
or
enter
sbb
or
pop
mov
cmp
or
in
add
popf
mov
cmpsb
inc
or
int3
nop
adc
mov
pop
repz
push
aad
outsl
mov
arpl
lret
push
add
cmp
jecxz
mov
xchg
inc
outsl
mov
out
addr16
js
add
scas
insb
adc
shlb
jmp
xchg
add
sahf
jnp,pt
inc
repnz
inc
or
outsb
pop
and
out
jne
popa
or
negl
rorl
fildll
in
js
mov
je
jno
js
int3
pop
xor
mov
cli
cmp
sbb
pusha
or
cmp
mov
jno
xor
das
xchg
inc
loope
xlat
aam
out
dec
push
sub
push
adc
and
inc
outsl
add
adc
cmpsl
fdivrs
int3
outsl
scas
ja
jl
mov
ret
loop
ljmp
adc
push
movsb
mov
or
xchg
test
push
or
xor
mov
dec
adc
jbe
mov
sbb
fcmovb
movsb
and
loop
mov
xor
add
mov
dec
inc
aaa
aad
mov
mov
ret
and
rorl
cmc
ss
add
add
xor
inc
cld
xlat
pop
arpl
mov
ljmpw
xchg
mov
jns
movsb
movsl
sbb
mov
pop
mov
push
adc
mov
xchg
inc
adc
push
inc
mov
and
ffree
in
sbb
jns
sahf
dec
sbb
dec
xchg
das
int3
or
inc
imul
adcb
or
sbb
ljmp
lret
das
xor
pop
or
cs
pop
lahf
les
out
loop
or
add
and
clc
jmp
in
mov
pop
push
fimuls
adc
rcrb
xchg
ss
sub
ret
sbb
cmp
loop
jl
je
jecxz
mov
mov
movsl
dec
test
gs
dec
bound
dec
aaa
mov
dec
stos
fwait
roll
shl
mov
push
and
push
mov
inc
sarb
mov
xchg
push
lods
lea
mov
sub
push
xchg
jb
pop
jo
lcall
popw
cmpsb
lock
rcrb
fisubrl
imul
orl
adc
mov
popf
add
jecxz
lret
lcall
dec
sbb
lods
dec
xor
and
outsb
push
mov
xor
popa
ljmp
int
test
leave
cs
sub
cwtl
lcall
sbb
adc
mov
shlb
mov
mov
cmp
popf
jae
xlat
les
in
mov
jp
sub
xchg
or
sub
fsubrs
aam
lret
iret
pop
adc
xchg
or
inc
xchg
bnd
popa
mov
repnz
pop
ljmp
in
or
mov
cld
addr16
mov
sub
loopne
test
push
jl
pop
inc
out
cwtd
pushf
test
pop
or
jl
mov
push
shll
cli
dec
pop
imull
mov
xor
mov
push
enter
push
mov
or
stos
push
aas
pop
mov
xchg
and
jmp
out
enter
mov
pop
mov
addr16
in
or
addr16
fdivr
mov
sub
inc
jo
mov
pusha
in
movsl
sub
sbb
out
mov
cmp
addb
stos
xchg
lods
sub
aad
inc
push
cltd
add
mov
fdivs
cmp
outsl
aam
and
xchg
cvtps2pd
call
repz
pop
sub
jl
mov
add
cmc
lret
scas
pop
ficomps
sub
cmp
mov
shrl
icebp
aad
addl
sbb
enter
js
fistl
adc
dec
outsb
mov
pushf
adc
loopne
xor
lahf
iret
inc
repnz
inc
stos
or
xchg
mov
outsl
jne
or
fidivl
or
leave
lds
xor
insl
call
scas
in
pop
jle
in
cmp
mov
aas
mov
lret
pop
mov
xchg
or
xchg
outsb
adc
nop
or
lret
popl
pop
lods
and
into
adc
adc
cmp
sub
and
call
or
jbe
repnz
daa
inc
loope
das
cld
sub
inc
mov
or
mov
in
ljmp
lea
xchg
inc
icebp
push
inc
or
orb
mov
sub
pushf
shlb
or
adc
std
insb
push
fs
jb
cmc
pop
push
pop
sub
xor
xchg
and
in
lds
or
test
sar
or
js
sahf
sbb
imul
aad
aas
notl
fnsave
cmpb
lea
repnz
imul
push
lcall
aam
push
add
dec
repnz
dec
sub
inc
add
mov
out
dec
adcb
clc
cmc
pop
dec
lock
imul
sbb
or
add
das
cmpsl
in
sbb
in
push
outsl
dec
push
nopl
mov
stos
and
div
iret
push
jl
mov
and
pop
ljmp
add
xchg
push
or
stos
int
loope
stos
aam
mov
mov
mov
loopne
mov
sarl
inc
mov
icebp
pop
popa
and
jae
ret
hlt
add
je
std
dec
mov
mov
les
call
cli
sub
movsb
mov
lock
mov
push
out
in
test
dec
fldenv
dec
pop
gs
cmp
out
sbb
adc
adc
xor
mov
push
test
sarb
ret
xchg
push
push
push
pop
testb
jl
jbe
pop
repnz
and
insl
cmp
icebp
mov
dec
mov
xor
cmc
loop
mov
jns
addr16
pop
lods
cs
scas
daa
or
aaa
pop
cli
mov
and
inc
dec
rorb
jmp
pop
pop
mov
inc
jg
test
jnp
mov
mov
cmp
sbb
add
sbbb
mov
mov
inc
xchg
das
es
insl
inc
xor
ss
jae
jb
jmp
pop
ja
jnp
add
vlddqu
ljmp
xor
adc
arpl
add
push
or
aad
and
inc
ret
xchg
mov
pop
aam
push
or
les
mov
rcrb
scas
iret
enter
in
mov
inc
in
add
outsl
not
rcll
sub
out
push
icebp
sbbl
xorb
xor
add
xor
and
mov
dec
sar
and
pop
test
adc
out
mov
dec
xor
jg
xchg
loopne
mov
mov
mov
dec
mov
cmpsl
scas
loope
ret
pop
mov
pop
jno
nop
mov
sti
inc
sub
fcmovne
pop
mov
decb
call
insb
fdiv
cmpsb
and
add
out
scas
xlat
std
rorl
lods
enter
sub
cmp
sbb
imul
mov
push
pop
lock
adc
mov
jp
dec
jb
jns
jmp
inc
lret
cmp
stos
stos
in
arpl
cmp
jmp
enter
ffree
sub
pop
fcompl
dec
sub
mov
daa
repnz
mov
stos
std
out
cmp
push
add
sub
loope
movsl
mov
or
out
pop
cmp
es
push
in
mov
loop
xchg
xchg
getsec
dec
mov
add
push
jecxz
push
outsl
add
pop
lods
lcall
xchg
adc
popf
loope
popa
out
paddsb
cmp
xor
adc
and
loopne
je
cwtl
and
mov
dec
sbbb
and
push
nop
dec
inc
add
adc
clc
rolb
xchg
out
pop
hlt
fcmovne
inc
lret
out
negb
add
movsl
cmp
or
cld
xchg
xchg
mov
cwtl
fmull
mov
adc
int3
cmp
stos
dec
and
sub
lds
popl
into
add
add
xchg
lcall
mov
sbb
or
imul
mov
icebp
ss
aam
ja
sub
cmc
out
sbb
test
loopne
jae
out
test
mov
fucomi
jb
hlt
fsub
jg
pop
or
ljmp
loope
mov
cld
push
xor
rorl
and
shll
cmc
and
and
ds
pop
or
push
lock
mov
or
mov
add
in
xchg
popa
push
mov
outsb
cs
and
lret
inc
cmp
test
imul
out
jne
mov
pop
mov
inc
dec
pop
xlat
mov
and
syscall
icebp
push
lahf
es
jmp
addr16
cmc
sahf
sbb
iret
mov
leave
cmp
ret
popf
or
ja
mov
mov
movsl
lea
and
sbb
xor
data16
mov
cmp
xchg
iret
mov
stos
cmp
jne
aas
clc
adc
or
aas
xlat
pop
or
test
test
adc
hlt
ret
test
sub
jge
dec
and
loope
mov
dec
loop
and
int
je
movsb
add
jmp
and
adc
ss
mov
sub
jg
jne
lods
xchg
dec
aad
adc
dec
cld
test
mov
in
mov
lret
lcall
pop
inc
and
test
or
fistl
fmul
mov
out
sbb
imul
cwtl
sbb
and
pop
xlat
mov
int
xchg
cld
arpl
cmpsl
xchg
push
mull
iret
and
push
mov
ffreep
push
roll
push
bound
jge
aam
mov
lds
add
imul
aam
cmp
pop
mov
gs
xchg
xchg
je
xchg
aad
insb
popa
jne
add
ljmp
xchg
mov
jle
add
repz
xor
sbb
or
out
das
mov
xchg
cs
cmp
jp
jns
outsl
fcomps
mov
test
arpl
push
int3
shll
jne
sub
data16
int3
fisubs
ret
push
mov
cmp
inc
xchg
pop
inc
xchg
aas
es
std
add
pusha
in
lret
add
divl
rcll
fchs
mov
insb
jne
mov
push
adc
and
das
mov
xor
xchg
repnz
jmp
std
loop
test
out
sub
sbb
push
loope
inc
or
xchg
cli
ret
dec
mov
insb
lcall
dec
cmp
fbstp
call
adc
movsl
push
popa
imul
xchg
daa
rcrl
lret
scas
mov
and
cltd
stos
fstpt
pushf
mov
add
sbb
dec
in
and
cltd
aad
sub
mov
mov
into
pop
push
mov
xor
lods
js
xor
cmpsl
mov
icebp
into
fldenv
div
fiadds
loope
push
pushf
xchg
add
pop
mov
jmp
ret
push
iret
pushf
push
inc
test
stc
jg
subb
mov
in
insb
sbb
sbb
mov
loop
test
fistpl
xchg
nop
pop
test
xor
adc
cmp
sbb
push
xchg
pop
xchg
loop
pop
pop
mov
sub
vpcmpgtw
movsl
mov
lock
out
into
ljmp
mov
scas
push
movsl
adc
call
iret
pusha
adc
mov
in
pop
dec
xor
xchg
cld
test
in
in
push
and
adc
mov
fs
mov
and
pushf
mov
ret
nop
loope
arpl
loopne
popf
push
pop
pop
mov
dec
adc
add
lds
fwait
scas
xor
jle
pop
cld
and
sub
mov
or
adc
adc
pop
mov
mov
sub
xchg
in
jbe
adc
sar
mov
daa
inc
cmp
xlat
adc
push
leave
sub
jnp
fcoms
aas
rorl
and
mov
push
jle
inc
xchg
das
fwait
jmp
dec
add
jg
xchg
jo
or
push
lret
lret
leave
ljmp
inc
shrb
lods
push
data16
jne
or
mov
sbb
dec
addl
or
test
lret
dec
push
xor
fidivrl
cli
into
fisubl
cmp
lret
xchg
leave
xchg
int
pop
leave
fldenv
in
or
mov
cmp
pop
push
mov
dec
imul
cmc
and
out
jmp
in
jne
and
imul
push
fildll
xor
inc
addr16
mov
mov
fbld
dec
push
lea
imul
mov
or
or
addr16
cmpsl
rcrb
test
aam
aam
dec
dec
ljmp
xor
xchg
ror
bound
inc
movsb
ja
fistpl
xchg
test
jecxz
jecxz
hlt
test
das
sub
xor
stc
ss
xchg
inc
and
addr16
dec
xor
insb
push
andl
sub
pop
or
push
mov
jne
jl
in
pushf
lods
or
xlat
or
sti
xchg
jns
shlb
mov
sbb
adc
inc
pusha
cs
dec
pop
test
sub
fwait
gs
mov
scas
jmp
data16
arpl
adc
pop
fsts
jg
mov
push
adc
fnstcw
cmpsl
aad
sbb
loop
aaa
into
imul
cmc
lods
stos
test
orl
xchg
clc
mov
xor
jmp
rolb
je
aam
imul
mov
cmp
xor
or
xchg
push
ds
inc
xlat
aas
or
test
out
scas
fisubrs
lods
cmp
inc
and
les
and
pop
pop
fisubl
or
fwait
xchg
pusha
fldl
cmc
call
jae
ret
shll
scas
int3
and
adc
std
mov
mov
xchg
std
cmpsb
in
mov
jecxz
cltd
xchg
xchg
inc
inc
push
jno
iret
js
jne
add
xor
lahf
mov
sub
push
pop
jp
xchg
cwtl
ret
xor
xor
fisubs
push
dec
pop
xor
ljmp
pop
insb
and
mov
imul
lret
xchg
mov
sbb
leave
jo
shlb
aam
lods
lea
decl
cmpsl
pop
add
mov
sub
ljmp
in
out
dec
inc
inc
add
fwait
lock
sbb
int
pop
dec
jnp
repnz
sub
loopne
mov
pusha
fwait
adcl
les
dec
sub
lahf
push
cmp
xchg
ljmp
sbb
sbbb
lods
ficoml
cmp
push
mov
adc
mov
test
test
adc
push
pop
inc
mov
mov
mov
push
push
popl
push
sbb
lret
xchg
xchg
filds
dec
nop
decl
orb
add
xorb
jecxz
fisttpl
lret
pop
shlb
call
pop
xchg
dec
dec
jp,pt
int3
mov
xlat
add
inc
rolb
lret
adc
int3
push
cmpsb
pop
rclb
fsub
into
jae
pop
mov
mov
cmp
outsl
fcomps
lcall
pop
sub
into
mov
mov
dec
lds
out
loop
out
sub
test
lahf
ret
jle
or
push
rcll
pop
cld
sub
inc
cmp
imul
fwait
aad
fdivl
cmpsl
dec
aam
into
jmp
mov
pop
sub
add
sbb
xchg
sbb
call
iret
mov
fldt
jo
xchg
sbb
cmp
fmul
inc
mov
cmc
in
mov
movsl
inc
sub
push
mov
mov
mov
lea
test
jbe
adc
ljmp
and
mov
scas
pop
jle
loopne
ss
js
out
popa
adc
dec
rclb
sbb
push
std
lret
add
aas
idivb
dec
jnp
mov
lods
jp
push
leave
jge
leave
lock
repz
ret
andb
jns
call
mov
jge
push
daa
jge
sub
xchg
ljmp
sbbb
aaa
push
loop
pushf
jns
or
stc
push
int
cmp
dec
mov
jns
insb
mov
insl
cmp
sub
fs
xchg
push
inc
repz
pop
mov
xorb
mull
call
lret
mov
lods
xchg
mov
push
mov
popa
sbb
adcl
or
mov
mov
mov
outsl
clc
mov
mov
int3
in
scas
jno
cmp
xchg
idivb
or
rcrb
outsb
cmc
rolb
xchg
xchg
pop
add
fildl
add
adc
enter
sahf
arpl
mov
cmp
pop
fisttps
mov
add
mov
ja
fnsave
adc
in
jp
lahf
cltd
pop
sbb
jns
xor
xchg
fists
xchg
aad
dec
xor
mov
mov
jne
mov
fadds
dec
sub
out
lret
loopne
mov
loopne
jae
rcrl
inc
rcll
fcomps
jnp
ljmp
lret
test
and
xchg
repz
and
insb
jl
aas
repnz
inc
mov
les
mov
push
cmp
add
push
sbb
xor
fimuls
stos
in
and
pop
dec
into
xchg
call
aam
pop
dec
adc
jle
bound
add
inc
and
inc
inc
cmp
mov
cmp
bound
cmpl
rorb
jb
gs
bound
mov
ret
shlb
mov
mov
or
add
push
leave
leave
xchg
push
xlat
jle
call
push
pop
adc
pop
cli
popf
jnp
cwtl
xchg
add
mov
lds
mov
js
lock
and
jmp
fistps
push
addr16
pop
inc
xor
mov
mov
test
test
or
sub
pop
js
xor
mov
sbb
mov
imul
cmp
loopne
push
and
inc
cs
pusha
add
or
shl
in
and
mov
das
and
pop
insw
and
ficomps
pop
imul
push
pop
outsb
rcr
jno
lods
in
xor
stc
lea
into
cld
pop
iret
shrb
or
inc
loopne
roll
xchg
lea
stc
jne
insb
dec
loop
fimuls
andl
ss
out
xor
mov
neg
jle
add
mov
andb
cmp
test
and
and
sbb
pop
rcrb
xchg
mov
cmp
mov
or
aas
adc
cmp
push
inc
xchg
inc
std
and
mov
clc
lcall
inc
scas
xchg
mov
sub
and
cli
pushf
and
jg
mov
cmp
xchg
insb
jo
adc
sub
push
pop
fnsave
lahf
je
lea
cmp
cmc
dec
cwtl
daa
add
aam
push
aad
arpl
and
sub
scas
fwait
cmp
popl
push
fs
rcrb
add
jno
std
pop
dec
sbb
pusha
shl
ret
test
popf
repnz
insb
adc
mov
inc
sbb
ret
clc
push
cmc
imul
adc
pop
add
and
jbe
rcr
and
fs
dec
xchg
inc
mov
addr16
popf
std
jno
lds
pop
jecxz
add
loope
aad
xor
pusha
rcr
cmc
dec
cmc
mov
scas
or
pop
cwtl
stc
add
and
add
pusha
sub
sub
out
mov
out
lds
lret
inc
les
mov
and
xor
add
loope
out
enter
or
sub
lods
lock
push
mov
sbb
imul
fsubl
shrl
or
ret
add
ss
lock
out
jmp
pop
andl
jns
sub
in
leave
jp
leave
or
les
mov
add
movsb
stos
in
sti
pop
test
bound
push
sub
stos
out
jle
inc
iret
fcoml
mov
dec
ja
filds
mov
or
sbb
repz
sbb
mov
mov
pop
adc
sbb
js
scas
dec
mov
add
pop
xchg
seto
and
jb
jl
bound
fadds
lock
daa
lds
faddp
push
mov
jae
stos
ljmp
rorb
sti
in
fidivl
insb
pop
jno
and
bound
popa
xchg
mov
mov
adc
sub
and
idivb
inc
in
sub
das
nop
loope
adc
lock
jecxz
and
pusha
xlat
xor
jg
in
repnz
stos
out
scas
sub
sub
shlb
out
mov
ljmp
pop
mov
sbb
jmp
rcll
xor
loopne
cltd
std
push
lea
lahf
insb
mov
aas
adc
inc
mov
push
insb
or
repz
cmp
adc
and
mov
mov
je
loopne
add
jg
testb
pop
and
adc
push
ret
and
inc
adc
and
or
cmp
sbb
addl
mov
daa
xchg
inc
mov
mov
xchg
add
movsb
jae
ljmp
xchg
or
fistpl
fwait
cmp
jp
testb
sub
cmpsl
inc
xchg
jle
dec
pushf
icebp
add
dec
loop
pop
int3
sbb
xchg
lock
into
sub
mov
xchg
xorl
mov
mov
scas
inc
repnz
pop
pop
mov
xchg
mov
call
popl
nop
dec
mov
lods
sbb
xor
jecxz
inc
push
lods
pop
fdivrl
fidivrl
in
add
out
das
mov
or
ljmp
pop
call
pop
es
imul
sub
push
mov
clc
in
fisttpll
pop
adc
popf
cmpl
in
rol
mov
leave
push
push
xchg
jns
int3
in
dec
cmpsb
or
pop
xorl
loopne
dec
loop
fwait
jb
pop
xchg
jb
sub
mov
lcall
xor
test
jns
pop
sub
outsb
mov
cli
decb
dec
clc
lods
xchg
lret
je
sysret
mov
sub
add
push
icebp
mov
xor
push
inc
adc
es
cltd
std
cmp
scas
movsb
popa
xchg
mov
mov
fucomi
dec
fstpl
aaa
jns
mov
and
adc
push
or
adc
xor
jmp
and
jae
xchg
fs
das
daa
in
inc
mov
lock
or
pop
sti
imul
xor
push
dec
test
add
and
xor
movsb
or
cmp
lret
loope
leavew
dec
mov
inc
sbb
adc
imul
push
rolb
ljmp
mov
testl
and
loop
adc
sub
loopne
jne
push
dec
movsb
push
sbb
and
dec
adcb
inc
daa
mov
cmp
stos
fxch
inc
shrb
rcl
aad
iret
and
into
pop
or
in
loope
or
inc
fld
and
jne
adc
shlb
ret
mov
pop
adc
fwait
dec
jbe
dec
xchg
and
aas
inc
gs
scas
shr
fs
or
nop
mov
inc
stos
mov
popa
jo
inc
nop
sbb
dec
xchg
ja
and
mov
push
out
xchg
mov
xor
add
inc
pop
ds
jle
jmp
rcrl
cmp
adc
xor
stos
or
sahf
imul
mov
sub
sbb
fucomip
out
jmp
jae
jb
mov
popl
pusha
inc
jg
repnz
or
addl
aam
int3
ja
and
sub
xchg
movsb
push
iret
mov
add
mov
stos
mov
push
sbb
outsb
mov
daa
shrb
inc
adc
das
sub
mov
loopne
stc
hlt
and
loope
pop
mov
sbb
lods
shr
inc
or
pusha
add
andb
adc
loop
jg
lret
call
ret
xor
fildll
push
scas
jae
in
fisttps
xchg
cs
stos
lcall
push
je
jb
ja
loope
sbb
ss
rcll
hlt
notb
in
mov
inc
scas
sar
pop
mov
sbb
jo
dec
xor
jg
or
fists
sbb
mov
repnz
les
xchg
aad
syscall
mov
add
into
lret
sub
out
subl
enter
xor
loop
xor
ja
adc
insl
ljmp
cli
mov
mov
xchg
mov
jae
pop
popf
fcomi
lods
scas
out
aaa
mov
ret
jnp
out
xchg
sbb
ljmp
xchg
stos
mov
mov
or
roll
into
xchg
push
mov
push
xchg
sub
jae
lock
xchg
xlat
xchg
push
sub
and
out
push
cmp
pop
sbb
mov
dec
das
jmp
add
inc
xor
mov
lods
pushf
cld
or
rorb
fists
test
loope
sub
loopne
and
mov
in
shr
and
inc
inc
cmp
imul
sub
or
stos
xor
jl
lret
sub
jg
sub
push
push
jb
and
dec
and
lods
pop
mov
pop
adc
sahf
nop
leave
xchg
mov
and
jecxz
int
cld
inc
inc
push
in
jne
sub
mov
mov
xor
incb
add
stc
aam
pop
jg
fstpt
jne
loopne
dec
mov
es
push
pop
mov
vmread
push
jae
inc
lock
ljmp
hlt
jecxz
cs
aaa
push
lods
addb
mov
fs
mov
inc
out
cmc
jne
mov
pusha
mov
not
cmp
mov
in
inc
bound
cmc
inc
fmuls
xorb
pop
jo
fldl
xchg
push
or
add
mov
add
push
pop
mov
mov
aaa
push
pop
movsb
mov
mov
cmp
sbb
jne
adc
dec
repnz
pusha
xchg
adc
jl
pop
xchg
lret
dec
xchg
jp
or
cs
repz
clc
add
std
sbb
pop
xor
mov
pop
cmp
jmp
lret
xor
xor
xchg
repnz
pushf
xchg
sbb
xchg
int3
subb
mov
mov
in
adc
add
repnz
mov
and
mov
jg
lahf
jns
xchg
jb
daa
jecxz
into
out
mov
lods
and
stc
xchg
sub
push
popa
adc
leave
js
pop
loopne
mov
outsb
jo
cmp
mov
dec
jecxz
mov
cvttps2pi
inc
mov
or
negb
inc
rcl
inc
push
xchg
test
push
xor
mov
sub
in
mov
cmc
xchg
fstpl
aas
in
mov
dec
adc
xchg
pusha
movsl
sub
or
mov
cltd
enter
scas
insb
in
jp
mov
les
jg,pn
xchg
add
into
and
notl
stos
xchg
xlat
jp
cmc
dec
cs
loop
out
sbb
cmp
shl
sbb
std
mov
jno
mov
fistl
pushf
test
push
cmp
lock
dec
js
push
xor
mov
sti
arpl
jle
push
js
std
mov
wrmsr
insb
cld
adc
sub
adc
sbb
cmc
add
pop
lahf
enter
sbb
xor
mov
add
rcl
jb
mov
outsl
arpl
add
ljmp
dec
fs
jne
call
insl
jmp
ret
sbb
pop
dec
incl
in
adc
xchg
jb
scas
daa
and
mov
xor
push
push
push
sub
adc
das
pop
mov
sarl
stc
pop
pop
into
cltd
aad
js
mov
lods
mov
push
adc
jo
int3
sub
lods
ret
push
push
filds
ds
lret
inc
negb
dec
fiadds
lcall
jns
scas
add
pop
nop
or
lret
lret
lret
sarl
cmpsl
pop
ljmp
dec
filds
lods
adc
leave
sbb
cmp
push
adc
ds
mov
adc
push
push
pop
loopne
cli
fldl
xor
push
inc
xchg
std
inc
test
testb
imul
fcmovnu
cmc
jle
jecxz
jo
jne
lahf
push
push
xchg
ljmp
pop
hlt
sbbl
and
in
cltd
mov
loope
mov
scas
imul
test
in
add
jbe
sti
enter
mov
rorl
mov
cmp
inc
jle
test
dec
repz
movsl
outsl
mov
ffreep
inc
adc
js
ret
cwtl
out
xchg
cmc
imul
xor
cmpsl
mov
dec
in
mov
in
movsl
insl
call
cmp
cltd
dec
mov
in
dec
cmpsb
xchg
push
mov
sub
or
fwait
or
hlt
xchg
mov
push
and
push
mov
xor
add
loope
and
cmp
les
out
xor
mov
inc
ja
and
xchg
rcr
push
enter
icebp
cmp
cmp
mov
xor
out
dec
rclb
mov
mov
outsl
jmp
arpl
pushf
and
nop
cmpl
adc
aam
mov
stos
fs
mov
jb
dec
rorl
into
cmp
mov
xor
push
mov
mov
fstpl
xchg
or
and
pop
cwtl
mov
aad
mov
inc
inc
scas
sub
popf
add
mov
arpl
inc
adc
jle
jle
xchg
mov
adc
jo
jb
dec
sahf
sub
ja
test
mov
les
cmp
enter
jae
cmp
mov
mov
aaa
std
or
in
repz
pop
dec
daa
xchg
mov
jmp
push
icebp
dec
jns
mov
mov
dec
pop
push
jae
movsb
sti
pusha
mov
outsb
cmp
xchg
pushl
in
sub
lods
ljmp
cmc
or
addr16
fsubr
aas
push
or
imul
imul
dec
sub
and
lret
sbb
mov
outsl
push
icebp
cmp
cmpsb
jb
jg
pop
mov
loope
pop
dec
icebp
sbb
popf
or
jnp
imul
cmpsb
aad
adc
jbe
mov
mov
enter
cltd
and
pop
arpl
xchg
lds
or
ljmp
fwait
add
mov
pop
sub
cmpsl
outsb
mov
add
dec
loopne
cs
mov
sarl
ficoml
xchg
or
mov
loop
sbb
test
jmp
pop
ja
mov
shr
lods
call
xchg
add
cwtl
push
popa
scas
mov
sbb
mov
jns
push
adc
sahf
add
rolb
imul
add
dec
not
pop
mov
std
inc
pushl
test
icebp
mov
xchg
mov
stc
mov
add
push
pop
inc
cmpsb
cmc
pushf
shlb
mov
mov
jae
sub
and
and
sbb
cmpsl
jbe
and
lock
mov
arpl
adc
fisttpll
sbb
pop
adc
push
pop
pop
xchg
xor
xchg
sbb
pop
bound
icebp
adc
cmp
pop
xchg
jnp
cmpsl
insl
ret
movsb
xchg
push
dec
lret
sub
mov
mov
popf
add
addr16
mov
cmpsl
mov
lods
pop
jns
push
movb
xchg
rolb
jmp
mov
test
stos
int3
loopne
fs
jmp
adc
imul
sub
out
sbbl
adc
add
inc
mov
cmp
in
fisubrs
nop
arpl
dec
xor
jo
js
mov
js
inc
mov
movsl
dec
gs
inc
dec
push
out
clc
or
movsb
push
push
in
push
cmp
jl
push
mov
xchg
les
and
call
stc
fcomip
lods
mov
int
mov
out
or
pushf
push
push
or
andb
push
shr
sbb
ds
jno
cmpsb
mov
mov
rol
data16
pop
lea
stc
pop
xchg
call
popf
ret
nop
mov
aas
push
jmp
dec
in
or
ret
or
inc
adc
bound
loop
push
testl
in
and
stos
mov
xor
sub
pop
mov
lea
inc
jecxz
iret
imul
add
scas
pop
out
imul
scas
shrb
icebp
orl
sbb
ret
jb
or
and
adc
in
sub
insl
int
push
lods
xchg
movsb
pop
xlat
jo
repnz
sub
dec
adc
cltd
jle
jp
lods
pop
sarl
aam
out
pop
sub
out
testl
gs
cmp
shl
inc
and
rcl
imul
call
adc
pop
jo
sbb
loopne
push
fsubrs
inc
cmp
push
mov
out
inc
sbb
loope
ret
fistl
aad
mov
mov
insb
lods
sbb
mov
inc
fisttpl
push
inc
cli
int
push
hlt
imul
sbb
cmp
jmp
add
mov
and
out
dec
je
in
cwtl
stos
shl
and
test
xor
inc
in
inc
rcrb
jb
push
or
loop
xchg
xor
out
aaa
je
add
jl
push
xor
shlb
adc
mov
cmpsb
jns
adc
xor
add
xlat
mov
sbb
enter
insb
cmpsb
repnz
dec
testw
stos
jmp
ret
sbb
inc
jmp
imul
xor
movsl
insb
fldt
mov
or
jno
xchg
mov
xchg
jge
insb
icebp
cmp
xchg
ret
popa
add
imul
mov
popf
orl
jne
fnstenv
sub
incb
aam
push
imul
insl
je
jg
cmp
icebp
outsb
mov
in
pop
xchg
dec
std
cmp
shlb
pushf
fsubr
imul
aad
fiaddl
cmc
xor
or
push
incb
jge
in
int
movsl
sbb
pusha
push
and
sbb
lahf
push
icebp
xor
aaa
popf
jg
in
sub
jecxz
mov
mov
mov
mov
xlat
sub
int3
jle
push
cmp
ret
mov
pop
nop
adc
and
cmp
les
aad
imul
add
in
cwtl
push
mov
outsl
xchg
decl
pop
fimuls
jecxz
mov
nop
ret
xorb
stos
jns
xchg
adc
mulb
ss
jno
fsubrs
loop
ljmp
sub
aam
mov
jecxz
push
adc
lret
mov
xchg
cmc
push
outsb
xor
mov
data16
or
dec
mov
jl
xchg
ret
sub
es
xlat
add
outsb
cmp
pop
outsl
int3
cmp
repz
and
adc
cwtl
push
into
sbb
daa
adc
lods
loope
adc
stos
pop
fstpl
imul
scas
or
fwait
cmp
test
adc
cmp
inc
sub
jp
mov
cmc
fs
jbe
dec
pop
movsl
adcb
loop
loop
add
push
cltd
cmp
icebp
push
mov
fbld
and
cltd
movsl
negl
xchg
aad
in
dec
jmp
xchg
jo
loopne
mov
push
mull
cmpsb
xor
in
mov
jb
jo
adc
in
sbb
out
lds
xchg
adc
ljmp
cmp
add
mov
out
fidivs
test
in
nop
push
hlt
cltd
js
push
jo
ds
jo
mov
jbe
mov
test
addr16
sub
cmpl
arpl
pop
xchg
outsb
sbb
test
xor
cmc
jns
stc
mov
cmp
xor
mov
inc
push
fdivrl
cmp
cli
ja
dec
ds
dec
in
mov
cmp
testb
cmpsb
das
mov
fucomi
rcrl
rorl
js
loopne
jnp
stc
pop
mov
mov
jmp
cmp
iret
add
push
adc
cmp
or
loopne
mov
shr
es
mov
std
nop
sbb
lahf
nop
nop
out
mov
call
js
jo
sbb
lods
cwtl
mov
lret
aad
push
cmp
or
push
es
cmp
mov
xor
and
jmp
push
dec
xor
out
pusha
mov
popf
jle
loopne
mov
fldenv
mov
push
xchg
invd
mov
aam
and
in
sar
mov
cmpsb
repnz
in
xchg
mov
mov
add
pop
sarl
subb
dec
jo
nop
mov
jecxz
pop
cmove
sub
sbb
xor
aam
pextrw
mov
add
test
push
pop
lea
pop
or
and
imul
mov
movsl
jge
jno
jg
out
imul
and
cmp
mov
inc
mov
dec
out
stc
arpl
test
sbb
and
sub
clc
std
pop
aas
stos
mov
sbb
outsl
stos
and
mov
in
or
dec
insb
icebp
gs
mov
cmp
push
scas
ds
inc
das
fwait
adc
test
mov
pop
lret
sub
icebp
mov
aad
or
iret
mov
and
int3
jns
mov
sbb
mov
in
leave
je
cmp
or
daa
lods
jae
movsb
aaa
push
std
loopne
add
push
xor
gs
icebp
mov
cmpsl
and
aaa
add
mov
jnp
push
fldl
cli
fs
add
mov
pop
mov
scas
jg
inc
cld
sbb
test
imul
inc
mov
dec
sbb
add
push
push
jne
pop
fstps
cmp
or
dec
ss
cmp
aaa
pop
xchg
or
jg
lret
fdivl
push
adc
mov
insl
pop
ds
mov
mov
test
xor
xor
push
jns
jne
adc
sbb
mov
repnz
jge
mov
inc
lock
outsb
int3
xor
inc
pop
ljmp
pop
into
jmp
sub
outsb
sub
js
ljmp
loope
dec
scas
sbb
dec
fistl
jmp
dec
movsl
add
sti
movsl
lahf
sbb
leave
xchg
sti
jns
mov
stc
test
adc
fxch
repz
icebp
dec
or
aas
test
lcall
pop
adc
pushf
cmpb
hlt
stos
cmpsb
and
ret
xchg
jl
mov
arpl
mov
rorl
loop
mov
inc
out
xchg
aaa
add
and
imul
rcll
in
dec
mov
fisubrl
xchg
gs
movntps
icebp
out
xor
push
cmc
mov
aad
jnp
mov
shlb
fildll
jnp
inc
dec
cmp
sbb
sbb
and
pop
inc
int3
inc
mov
jb
mov
test
aaa
popa
xchg
cli
cmp
or
and
outsb
fnop
repnz
insl
es
or
sti
jecxz
pop
mov
dec
js
ss
cmp
imul
and
add
data16
es
testb
jne
xlat
mov
jle
fisubrl
in
outsl
adc
sub
daa
btrl
stos
adc
xchg
fneni(8087
test
fstpt
popa
add
dec
stos
push
pop
mov
pop
test
lods
mov
mov
sbb
sbb
push
or
in
xor
jns
adc
or
dec
sub
stos
rcrb
mov
mov
push
jmp
imul
daa
jae
sub
repz
test
jno
cmc
jge
sahf
or
xchg
jns
cltd
fsts
loope
movsl
jbe
inc
dec
pop
mov
test
mov
repz
adc
out
es
sbb
push
dec
or
adc
dec
test
out
push
sub
adc
iret
cmp
dec
fmull
mov
lods
fisttpll
adc
adc
mov
push
xor
cmp
push
stc
lods
lock
mov
shr
sub
ds
call
sub
pop
outsb
push
pop
add
mov
stos
and
enter
les
icebp
dec
test
or
ss
jb
mov
pop
loopne
nop
pop
into
mov
sbb
xlat
movsb
fidivrs
or
push
sbb
sbb
mov
push
jo
sti
sub
sub
icebp
jae
sbb
mov
cmp
cmp
aas
fisttps
mov
ss
out
jle
rorl
adc
xor
or
sbb
lods
xchg
inc
imul
sahf
sbb
xor
ret
insb
mov
jnp
cmpsb
cmp
lcall
jl
sbb
or
rep
lcall
test
jno
jecxz
in
xchg
xchg
sbb
inc
adc
inc
or
fstps
sarl
jns
int3
mov
jecxz
push
jge
jbe
das
xchg
fadds
fisubrs
sarl
fsubs
mov
test
mov
andl
out
cmp
mov
call
xchg
add
mov
scas
mov
dec
lret
mov
pop
out
mov
aam
and
cmp
add
ret
js
es
mov
push
or
push
fcompl
xorl
ret
into
jmp
je
lods
outsb
cwtl
das
cmp
fcoms
cmp
sbbl
sahf
stos
inc
add
sub
cmpsb
jne
test
add
popf
xlat
jp
sti
add
inc
and
aad
xor
in
mov
scas
fimull
push
enter
pop
or
jo
outsb
cli
mov
fimuls
outsl
insl
cmp
adc
lahf
add
test
inc
in
mov
stos
jne
mov
cmp
aaa
adc
int3
add
jecxz
std
aaa
adc
or
rclb
or
iret
dec
pop
adc
mov
fdivrl
sbbl
and
in
mov
fistps
dec
imul
repnz
pop
xor
cmp
push
insl
sbb
fsubs
test
cmc
dec
xchg
xor
inc
clc
add
test
cli
adc
mov
mov
fildl
mov
mov
test
inc
lods
nop
cmp
or
iret
sti
fimuls
pop
pop
addr16
gs
fldl
incb
mov
dec
out
push
mov
mov
push
cmpsb
and
push
adc
jp
push
rcrl
fwait
mov
lret
rclb
and
mov
adc
push
mov
pop
ljmp
push
xor
fldl
cmpsb
add
fadds
mov
lahf
push
lods
sbb
push
adc
sub
mov
in
loop
dec
lahf
movl
ret
test
pop
sub
dec
adc
cmp
push
adc
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
sub
call
in
and
pushf
movsl
push
jno
mov
pop
pop
movzwl
add
add
push
call
or
add
addl
jle
sub
mov
pop
pop
add
pushl
jmp
loope
hlt
sbb
fidivrs
or
mov
and
inc
push
nop
mov
out
inc
das
outsb
sbb
or
cmpsw
push
std
repnz
sar
lahf
in
mov
idivb
iret
or
stc
inc
mov
push
movzwl
popl
xor
push
and
pop
sub
call
add
push
dec
dec
outsl
jl
pop
mov
es
mov
push
push
pop
pop
pop
add
jle
jmp
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
cmp
jne
mov
outsb
pop
movsb
fs
add
adc
fwait
lret
dec
bound
imul
cmpsl
xchg
rorl
aam
or
movsb
fs
imul
pop
cltd
gs
fs
lods
out
cmp
xlat
push
cmpsl
loope
imul
sub
cwtl
push
je
dec
inc
in
pushf
mov
add
xor
mov
pop
loope
pop
loope
cltd
mov
gs
push
add
ljmp
fsubrp
dec
fs
js
pop
imul
out
jbe
imul
mov
addl
loop
dec
cmp
fcoms
movsb
fs
test
lods
sarl
jge
and
cmc
aaa
push
and
and
jns
or
jns
rclb
sti
push
aaa
std
or
inc
cmpsl
xchg
pop
push
xchg
or
arpl
sti
loop
jl
pop
out
testb
pop
into
jmp
pop
adc
xchg
sti
xchg
xor
leave
insb
push
xchg
rolb
sahf
pop
lret
stc
hlt
ret
pop
sti
or
je
bound
pop
sti
sbb
cmp
addr16
lahf
xchg
push
pusha
lret
sbb
icebp
push
and
loop
pop
jp
inc
sub
cmp
adc
rcrl
push
shlb
jno
push
mov
pusha
bound
test
push
mul
xchg
and
mov
sahf
mov
shlb
xor
loop
push
icebp
loop
pop
bound
pop
pop
sti
loop
xchg
test
and
jno
mov
sbb
loop
sahf
pop
in
mov
sti
loop
pop
add
test
leave
sub
dec
cmp
nop
push
lock
xor
mov
sub
leave
mov
daa
loope
mov
sub
mov
repz
inc
ja
ljmp
daa
loope
push
stos
xor
repz
daa
adc
add
cwtl
cmp
cmp
jge
xorb
out
dec
xor
test
mov
xor
xchg
dec
xor
push
pop
cmp
adc
outsl
adc
out
test
loope
ss
ret
mov
addl
cmpsl
push
inc
loop
shlb
add
enter
loope
pop
ja
test
popa
xor
mov
push
ret
insb
outsb
jbe
iret
imul
pop
jnp
idivl
ret
and
ror
repnz
lods
mov
mov
je
lods
inc
fs
test
mov
lahf
stos
enter
insb
mov
mov
leave
repnz
mov
fisubl
insb
mov
mov
insb
mov
ss
mov
inc
mov
rcll
push
addr16
imul
mov
mov
inc
mov
sahf
inc
cmc
fsubrs
fwait
mov
aam
adc
mov
pop
jg
lcall
mov
cmp
push
pop
inc
lds
jmp
ret
inc
mov
ret
pop
ret
inc
mov
inc
pop
mov
mov
inc
mov
scas
xor
insb
mov
inc
mov
pop
orl
xchg
dec
mov
insl
xor
lret
cmp
movl
insb
mov
inc
sub
sbb
jl
lock
repz
mov
dec
mov
push
mov
lret
jne
cmp
punpckhwd
cmp
mov
add
xchg
mov
mov
insb
mov
inc
mov
add
loopne,pt
roll
push
cmp
imul
sub
test
inc
pop
mov
mov
inc
mov
icebp
leave
mov
dec
ret
inc
mov
ret
cmp
mov
add
neg
ds
cmp
int
jns
les
mov
cmp
xor
or
jo
and
push
ret
rol
jge
into
mov
inc
xor
mov
inc
lea
inc
mov
ret
insb
mov
leave
bswap
cmc
leave
sub
scas
pusha
xchg
ret
sub
xor
cmp
movsb
push
fdivrl
mov
lock
cmp
ss
ret
push
fdivrl
mov
push
dec
das
push
stc
xor
jns
inc
pop
out
leave
leave
ss
enter
sub
cmp
cmc
fdivrs
dec
xor
mov
mov
inc
pop
out
leave
leave
ss
enter
sub
cmp
or
adc
inc
mov
mov
leave
leave
ss
enter
sub
cmp
or
rcrl
adcb
mov
cli
add
cmp
icebp
ficompl
mov
mov
dec
das
push
stc
xor
jns
inc
pop
out
leave
leave
ss
and
insb
mov
aas
mov
push
xor
rcrl
adcb
mov
inc
pop
xor
push
leave
pushf
adc
dec
pop
into
fnstcw
mov
ss
hlt
push
ror
jmp
push
dec
pop
into
fldcw
insl
mov
enter
in
je
inc
mov
mov
lods
mov
rolb
mov
inc
mov
rcrb
fsubl
imul
aas
jge
cmp
imul
add
imul
inc
or
xchg
inc
mov
or
popa
xchg
lock
xor
insb
mov
or
sbb
push
or
ret
inc
mov
dec
jge
jp
or
ja
add
or
or
push
ret
xchg
imul
mov
cld
ss
cmp
mov
xchg
add
test
sahf
dec
cmc
fdivs
lock
adc
imull
fsubl
test
jo
movsl
rclb
mov
fdivs
repnz
inc
mov
mov
inc
mov
mov
inc
mov
mov
inc
mov
mov
push
les
mov
mov
inc
mov
mov
inc
mov
mov
inc
mov
mov
inc
mov
mov
inc
mov
mov
outsl
out
daa
js
gs
sbb
mov
js
xor
mov
out
inc
es
or
push
push
test
lods
xchg
or
aad
dec
push
ret
sar
mov
dec
xor
mov
shll
aad
mov
ds
repz
xor
inc
mov
xor
subb
mov
push
aaa
sahf
std
sbb
pop
lret
sbb
sbb
cmc
cmp
and
pop
rolb
loopne
aam
aam
cld
sbb
ljmp
fcomps
arpl
pop
mov
adc
outsb
xor
arpl
mov
iret
add
add
sub
push
in
jbe
call
outsb
lahf
jmp
lahf
mov
roll
xor
inc
sbbb
fs
mov
adc
out
sub
clc
stc
into
bound
inc
faddl
mov
cmpsb
hlt
inc
cmp
lahf
arpl
push
add
mov
nop
sbb
xchg
shl
repz
jl
add
lods
push
ret
xor
fnstcw
imul
pop
lcall
insb
xor
aad
pop
and
mov
sub
mov
gs
sti
ret
mov
std
jns
adc
lods
cmp
dec
xor
mov
or
shl
add
pop
insl
or
xchg
sarb
adc
lcall
pushf
cmp
jge
test
out
out
clc
ds
pop
data16
daa
jl
mov
jno
cmp
es
push
sti
outsb
sub
ljmp
add
gs
push
ds
notb
std
cmp
nop
in
movsb
scas
inc
push
fildl
pusha
pop
fcmovnb
or
inc
lds
sub
cmp
sahf
std
cld
xorl
xchg
lea
dec
and
jb
mov
inc
xchg
pop
xor
repz
ret
aas
insb
xor
xor
test
or
xchg
lret
adc
inc
xchg
xchg
push
ds
xor
hlt
sub
sar
push
adc
adc
ja
xchg
xchg
fcmovb
xor
in
and
or
cmc
and
mov
pushf
lea
sub
pop
add
insb
icebp
lds
xor
mov
sub
fistpll
gs
and
cs
pop
jg
out
mov
lret
cld
jge
ds
rol
sub
adc
and
fiaddl
aad
fsub
outsl
test
push
movsb
aad
cmp
shlb
inc
and
add
add
add
mov
add
mov
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
mov
add
mov
add
mov
add
adc
or
adc
adc
adc
push
lea
add
adc
sub
adc
aaa
lea
add
adc
inc
lea
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
adc
add
add
leave
lea
add
add
add
lea
add
add
add
add
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
add
xor
add
add
push
add
and
add
add
call
add
adc
add
add
sub
add
add
xor
add
add
or
test
add
add
and
add
add
or
test
add
add
add
add
add
add
push
add
xor
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
or
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
cwtl
imul
sbbl
nop
nop
nop
and
add
add
mov
mov
cmp
insb
fs
cmp
shll
subl
popl
scas
scas
scas
add
leave
sar
cmpl
jge
pop
aaa
int
push
out
push
dec
dec
and
dec
je
ret
and
inc
imul
jno
jno
in
fdivrp
in
fmul
jmp
aam
call
ret
mov
xchg
mov
mov
mov
ret
jo
mov
mov
xchg
xchg
xchg
or
in
sar
out
fst
in
fxch
ljmp
call
ret
sub
loop
jecxz
lods
pop
jge
jge
loopne
icebp
jecxz
out
jmp
enter
ret
jmp
sarb
jmp
jae
mov
xchg
add
fcomp
hlt
jmp
out
out
loopne
jmp
rol
jmp
sarb
push
in
jmp
jge
fcmovnb
lods
call
mov
popa
popf
xchg
mov
add
add
fcmovu
push
in
in
repz
sar
call
iret
mov
call
mov
inc
movsl
ja
jecxz
mov
shll
addr16
jbe
fcmovnu
in
jmp
jmp
jmp
int
in
mov
jmp
mov
in
frstor
fnstcw
push
inc
mov
push
or
push
push
ror
into
hlt
stc
hlt
icebp
push
icebp
in
push
in
in
jmp
int3
mov
jmp
enter
xchg
ljmp
mov
je
mov
push
jmp
scas
sahf
push
popf
pushf
fwait
push
loop
fsub
div
in
cld
imul
jmp
jmp
enter
ret
scas
jmp
lret
jecxz
xchg
fidivrl
pushf
call
mov
cli
cwtl
jp
mov
jecxz
jecxz
int
int3
jecxz
clc
ffree
mov
fcmovnb
test
call
mov
cltd
call
scas
xchg
ljmp
mov
add
call
movsb
mov
xchg
lds
lahf
shll
inc
fwait
jl
mov
jg
add
add
push
je
lret
movsb
test
inc
mov
test
mov
push
lahf
mov
jmp
add
repnz
add
add
add
add
add
pop
add
rolb
add
add
add
add
add
pop
add
incb
add
decl
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
push
dec
sbb
sub
pop
push
push
push
push
inc
cmp
stos
shll
push
loopne
pop
mov
aaa
push
outsl
popl
pop
push
push
adc
sub
outsl
mov
dec
mov
pop
sub
sbb
mov
filds
call
lods
dec
incl
xor
push
aas
aas
aas
add
arpl
jnp
jns
push
sbb
pop
add
add
add
add
add
inc
daa
test
xor
fdivs
push
fcmove
xchg
cmp
sbb
dec
dec
push
test
jle
sti
loopne
fidivl
cmp
push
add
movups
add
add
cmp
pop
cmc
cmc
cmc
call
ror
inc
mov
insl
mov
sbb
aaa
pop
pop
pop
add
outsl
add
sbb
test
scas
pop
mov
or
add
add
add
mov
in
dec
cmpsb
inc
ljmp
and
add
add
add
add
and
and
mov
in
in
call
int
ret
ret
mov
cld
jae
push
xor
pop
add
lret
lds
adc
mov
jg
add
inc
adc
in
in
in
sarl
shrl
or
add
add
jg
jg
push
push
push
jnp
hlt
hlt
fcom
sar
out
fst
jmp
int3
jmp
aam
fmul
mov
mov
popaw
cmpsb
and
and
cltd
mov
fstpt
xchg
add
add
hlt
rclb
rep
jmp
ret
ret
scas
dec
dec
dec
add
popl
sbb
sbb
call
ror
out
fst
in
fcmovne
in
fcmove
ljmp
fcmovne
mov
mov
imul
iret
jecxz
mov
rclb
cld
repnz
imul
popf
fistpll
inc
pop
pop
pop
add
lcall
sar
lock
out
in
fmul
in
fcmove
jmp
leave
jmp
jmp
iret
mov
dec
mov
mov
inc
lods
pop
mov
out
aad
fdivrl
hlt
add
add
add
pop
pop
xor
call
loope
loop
iret
out
loope
out
in
in
fcmove
jmp
enter
ljmp
call
int
call
ret
jmp
stos
in
xlat
mov
cli
idivl
pushl
add
add
aas
aas
add
xchg
xchg
mov
rcl
int
repnz
push
loope
out
loopne
out
fst
in
fcmove
jmp
ljmp
ljmp
jmp
iret
mov
cld
sti
mov
fistpll
fwait
sub
daa
sbb
add
add
icebp
icebp
fcmovu
in
aad
repnz
push
jecxz
out
loope
out
jmp
lret
jmp
aam
jmp
sarb
jmp
sarb
cld
cld
sar
lret
jo
shlb
test
lock
dec
dec
andl
lahf
add
add
add
and
or
call
into
push
jmp
icebp
in
push
loope
out
ljmp
jmp
rol
call
sarl
jmp
lret
out
out
push
out
lods
out
fistl
fadd
mov
fcmovnb
mov
sarl
xchg
in
push
dec
inc
jge
and
adc
add
add
dec
dec
outsb
icebp
icebp
icebp
call
rcl
ljmp
push
out
push
in
push
loop
out
fst
ljmp
call
sarl
jmp
iret
mov
fmulp
scas
sti
clc
mov
push
loop
call
lods
push
call
mov
mov
loope
mov
fcmovb
lods
call
mov
sub
inc
xor
add
add
add
add
add
iret
iret
jmp
rcl
into
push
in
out
hlt
jmp
push
call
fdivr
icebp
jecxz
in
fcmove
jmp
rol
jmp
sarl
jmp
into
mov
jmp
lret
call
idivb
call
mov
cmp
sahf
pusha
faddp
scas
jmp
lret
jecxz
mov
ffreep
stos
dec
mov
hlt
mov
frstor
add
add
jg
jg
addr16
out
out
dec
int
out
call
call
push
ljmp
icebp
in
ljmp
jmp
sarb
jmp
int
jmp
int3
mov
fadd
scas
clc
out
scas
jmp
int3
test
mov
mov
push
fsubl
dec
lods
mov
loop
scas
jmp
scas
jmp
lds
aam
andl
add
add
add
add
adc
sub
loopne
neg
fstp
call
rcl
clc
icebp
in
push
out
jmp
push
jmp
push
call
out
ret
rol
jmp
iret
mov
jmp
int3
mov
jmp
leave
mov
loop
movsl
std
divb
ljmp
lods
ffree
lahf
call
mov
incl
mov
test
jmp
mov
add
add
pop
add
out
dec
enter
out
ljmp
lock
imul
call
push
jmp
xlat
jmp
rol
jmp
iret
mov
jmp
lret
mov
jmp
leave
mov
fcmovnb
lods
push
loopne
jmp
rcll
mov
ja
faddp
lods
dec
mov
jmp
test
ljmp
xchg
xchg
addb
add
rcl
shl
call
rcl
stc
cmc
icebp
clc
repz
push
repnz
push
out
ljmp
ljmp
in
mov
jmp
int3
mov
jmp
mov
ffreep
mov
fld
mov
jmp
inc
and
lret
mov
fnstcw
ja
in
int
fnstenv
pushl
jae
leave
ror
leave
sbb
add
add
add
add
aas
aas
add
cmp
pop
mov
repnz
cli
div
stc
hlt
lock
clc
repnz
push
lock
cmc
out
call
in
jmp
into
mov
jmp
lret
loopne
mov
faddp
scas
fdivrs
fwait
std
icebp
movsl
std
rep
mov
nop
je
call
mov
fstpt
test
aam
mov
lret
negl
push
pop
pop
pop
add
push
push
sub
hlt
lock
stc
stc
cmc
repnz
clc
repz
icebp
in
push
out
ljmp
fst
jmp
int3
mov
jmp
mov
ffreep
mov
fadd
lods
jmp
into
xchg
stc
jecxz
push
fisttps
jmp
xchg
call
mov
lahf
fdivrs
fwait
call
mov
ljmp
push
rorl
add
add
scas
test
in
in
icebp
in
jmp
div
in
push
out
call
jmp
lret
loopne
mov
ffreep
mov
faddp
scas
fadd
stos
fdivrs
fwait
call
mov
call
mov
mov
call
mov
call
mov
call
mov
inc
mov
inc
mov
mov
mov
xchg
xchg
mov
fcom
jecxz
out
repz
out
jmp
jmp
leave
mov
ffreep
mov
ffree
scas
fadd
lods
fstpt
cmpsb
fnstcw
fdivrs
sahf
call
mov
call
mov
call
mov
call
scas
nop
cltd
je
roll
add
add
add
mov
shl
out
fld
scas
cmc
ffree
mov
fadd
lods
fcmovnb
stos
fidivrl
movsb
call
mov
lahf
call
mov
call
mov
call
mov
call
scas
nop
call
lods
pushl
pusha
cmp
cmp
add
add
jp
push
dec
subl
mov
fdivrs
call
mov
call
mov
call
mov
call
scas
xchg
call
lods
dec
test
test
mov
mov
push
cmp
mov
push
push
daa
push
inc
xor
mov
xlat
mov
pushf
call
mov
call
scas
xchg
dec
lods
mov
into
test
dec
movsl
test
mov
push
xor
insl
push
sbb
es
mov
stos
mov
mov
dec
lods
dec
test
dec
movsb
test
rcrb
movsb
push
ds
arpl
inc
sub
pop
aas
cltd
lods
mov
movsl
xchg
enter
xchg
push
sub
addl
sub
jae
sub
lahf
lahf
lahf
add
lea
lock
add
add
add
incl
cld
pop
filds
pop
incl
add
incl
add
incb
add
cld
add
cld
add
aas
clc
add
aas
clc
add
jg
add
pop
lock
pop
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
pop
addb
pop
loopne
add
clc
add
paddd
add
incl
add
cld
add
incl
jg
inc
push
ljmp
add
add
add
add
add
add
and
add
add
andb
add
pop
pop
add
sub
push
cmp
pop
pop
pop
push
cmpb
cmp
inc
sub
mov
movsl
dec
in
xchg
aas
stc
mov
fiaddl
adc
pop
pop
pop
or
add
add
add
add
or
mov
leave
outsb
in
lock
lock
in
into
jo
in
popa
fnstsw
push
push
and
addl
pop
sbb
sbb
and
push
push
stos
xchg
dec
mov
adc
inc
add
xchg
mov
lret
jnp
sti
filds
out
iret
jae
shrl
cld
test
add
add
dec
dec
dec
add
push
push
adc
sbb
addr16
add
add
cmp
sbb
pop
xchg
daa
movsl
stos
mov
iret
aam
push
out
call
fisttps
mov
sbb
inc
add
push
add
stc
fldl
shrl
inc
fwait
jge
lret
add
add
adc
add
add
cmp
add
and
dec
mov
mov
ret
ret
ret
jmp
outsl
imul
clts
outsl
outsl
outsl
add
add
add
sbb
aas
mov
mov
pop
in
int
in
into
jo
mul
in
xchg
outsb
fs
xchg
or
add
or
outsl
add
int
pop
sti
fisttps
dec
mov
inc
sti
cmp
adc
add
inc
add
add
jg
jg
add
add
test
test
hlt
hlt
hlt
loope
loop
mov
stos
cld
insb
arpl
pop
cmp
add
pop
ja
ja
add
add
daa
daa
daa
add
jle
ss
mov
insl
pushl
mov
adc
add
inc
add
add
add
cmp
push
sub
cld
out
in
imul
cmpsb
inc
jmp
or
cmp
add
xor
add
sbb
jg
pop
pop
pop
add
inc
inc
je
lock
repz
leave
call
leave
mov
inc
mov
mov
test
adc
xor
dec
dec
dec
add
add
je
jle
inc
in
shlb
lea
mov
xor
inc
cmp
pi2fd
add
add
add
add
inc
cmp
xchg
idiv
jmp
fnstenv
ljmp
and
add
and
add
add
sub
sub
xchg
xchg
xchg
add
add
ret
call
in
in
ror
sar
leave
fmulp
ret
enter
ret
mov
pushf
icebp
popa
pop
pop
sahf
or
lock
xchg
mov
xor
fadd
xchg
sub
add
add
pop
pop
pop
add
mov
mov
fnstenv
dec
repnz
or
add
add
add
add
add
add
pop
pop
pop
add
add
add
or
pop
pop
pop
xchg
stc
stc
stc
out
out
out
dec
lret
lock
jmp
int
jmp
aad
fmulp
sar
mov
inc
mov
popf
negb
push
xchg
adc
adc
and
and
mul
icebp
les
dec
test
imul
add
add
add
sti
out
or
cld
hlt
lods
call
mov
pushl
add
pop
aaa
aaa
aaa
add
arpl
pop
pop
pop
add
aam
out
repz
fdivrp
leave
in
fst
in
fcmovne
in
fcmovne
jmp
lret
enter
lret
mov
dec
mov
stos
ljmp
push
dec
xchg
adc
mov
cltd
in
jle
ret
cmc
loopne
mov
add
repz
repnz
sti
cli
repnz
jmp
mov
push
clc
movsl
inc
add
add
jnp
jnp
clc
clc
clc
jmp
lret
leave
out
in
fst
out
in
fcmovne
in
fcmove
in
fcmove
ljmp
jmp
rol
fmul
mov
dec
mov
stos
cmpsb
cltd
nop
jmp
repz
test
dec
dec
cmpsl
push
movsb
add
add
cld
icebp
mov
cld
divl
jmp
mov
pop
int3
clc
repnz
das
das
das
add
out
clc
out
out
out
fcmovnu
lret
out
out
in
in
fcmovne
in
fcmovne
in
fxch
ljmp
jmp
rol
jecxz
mov
aad
mov
int
scas
inc
mov
fxch
sahf
out
mov
iret
cmpsb
inc
hlt
cmpsb
xchg
pop
dec
sti
divb
jmp
mov
xchg
imul
add
add
add
pushf
pushf
pushf
lret
repz
jmp
jmp
int3
leave
out
loope
out
loopne
out
in
out
in
fcmove
jmp
lret
fmul
jmp
jmp
aam
jmp
rol
jmp
into
mov
call
shll
imul
scas
fdivs
mov
sti
stc
mov
jmp
ret
fstpt
leave
sbb
add
add
aaa
aaa
add
xor
repnz
lock
aad
loopne
int
lock
out
loope
out
out
in
fmul
in
fcmove
in
fxch
jmp
ljmp
ljmp
ljmp
out
mov
xlat
ret
mov
loope
test
imul
stos
cld
cld
mov
jecxz
pop
scas
xchg
inc
movsb
rol
add
add
add
or
push
mov
mov
cmc
cmc
cmc
jmp
in
dec
mov
icebp
jecxz
out
loopne
out
loope
out
in
fmul
in
fcmovne
jmp
leave
ljmp
ljmp
ljmp
jmp
rol
jmp
sarb
fcmovb
scas
push
in
mov
cld
cld
sar
cmc
mov
out
pusha
fidivrs
inc
xchg
push
push
push
pop
inc
inc
inc
add
add
add
or
add
cmc
cmc
cmc
in
in
in
dec
into
iret
jmp
fcmovnbe
push
in
lock
push
loop
out
loope
out
out
in
fcmove
ljmp
ljmp
ljmp
jmp
rol
jmp
sarl
fcmovnb
mov
jmp
mov
cld
sti
mov
loope
pop
call
mov
mov
popl
insb
or
dec
dec
add
add
add
jnp
or
int
ljmp
int3
leave
hlt
jmp
icebp
in
icebp
jecxz
out
loopne
out
loopne
out
jmp
lret
xlat
ljmp
jmp
rol
jmp
rol
call
sarb
out
mov
clc
repz
cld
cld
int
fistpll
sarl
dec
mov
jge
xor
sub
add
add
add
add
je
je
div
idiv
jecxz
jecxz
int3
int3
int3
jmp
out
push
out
repnz
push
jecxz
icebp
loop
push
loope
in
fst
jmp
enter
call
aam
jmp
sarb
call
sarb
jmp
iret
mov
in
scas
cld
cli
mov
push
out
fcmovnb
mov
fadd
mov
fadd
scas
call
mov
movsl
cwtl
mov
xor
sub
add
adc
inc
add
add
add
dec
add
sbb
aas
in
in
jmp
jmp
fdivrp
int
push
ljmp
repz
icebp
in
push
in
icebp
jecxz
out
loopne
out
fst
ljmp
jmp
aam
call
sarb
jmp
iret
mov
out
mov
fcmovb
mov
cmc
in
mov
cld
sti
sar
shlb
repnz
fstpt
fs
mov
mov
loope
mov
fadd
scas
xlat
mov
movsb
inc
mov
sti
mov
lret
and
push
pop
pop
pop
add
add
add
or
jnp
icebp
icebp
in
in
mov
loopne
hlt
jmp
hlt
ljmp
repnz
icebp
in
lock
out
loope
in
fcmovne
jmp
aam
jmp
rol
out
mov
out
mov
out
mov
loop
mov
stos
cld
clc
mov
fsubrs
jp
out
loop
dec
mov
mov
ffreep
mov
in
mov
jecxz
mov
loopne
mov
fcmovnb
stos
mov
fwait
inc
mov
cld
test
mov
push
push
push
add
add
add
and
add
xor
pop
ljmp
call
xlat
fdivr
iret
int3
lret
out
out
cmc
in
in
hlt
ljmp
repz
push
in
icebp
in
push
loop
ljmp
jmp
rol
out
mov
jmp
iret
mov
jmp
into
mov
in
mov
out
loopne
std
cli
mov
call
test
call
mov
hlt
in
mov
iret
scas
pop
inc
sahf
push
sarb
mov
in
mov
jecxz
mov
loop
mov
ffreep
lods
fidivrl
xchg
clc
mov
insl
jecxz
addr16
mov
add
add
add
add
test
repnz
loopne
loopne
out
call
call
push
jmp
push
ljmp
repnz
repnz
out
loope
jmp
aam
jmp
rol
jmp
sarl
jmp
into
mov
out
mov
jmp
int3
mov
fcmovb
test
cli
icebp
mov
cld
cli
mov
inc
fwait
inc
inc
test
loopne
mov
ljmp
mov
lods
jmp
enter
enter
enter
lods
faddp
test
mov
insl
fsubrs
xor
add
add
daa
daa
add
inc
inc
js
lock
jmp
iret
iret
ror
int
clc
icebp
in
imul
call
cmc
in
in
repz
repnz
icebp
in
out
loopne
jmp
rol
out
mov
in
mov
in
mov
in
mov
in
mov
ffree
mov
out
movsl
cld
divb
mov
lea
dec
mov
fld
cmpsl
mul
fwait
mov
jnp
dec
mov
loopne
lods
jecxz
scas
loop
lods
loop
lods
dec
scas
mov
scas
mov
cwtl
jns
mov
addr16
pop
pop
pop
lret
lret
lret
in
out
out
out
call
xlat
xlat
inc
ret
ret
push
out
jmp
div
ljmp
in
in
hlt
jmp
hlt
ljmp
repnz
in
fmul
jmp
rol
out
sar
sarl
in
mov
jmp
lret
mov
jmp
lret
mov
loope
mov
fadd
test
imul
cmpsb
std
divl
ljmp
mov
fnstcw
scas
jmp
leave
xchg
jmp
push
and
test
fs
fdivrs
stos
jmp
les
cli
mov
data16
mov
popa
leave
cwtl
mov
adc
adc
bound
xchg
hlt
hlt
hlt
jmp
loopne
call
rcl
aam
sar
clc
repz
push
icebp
in
div
jmp
imul
jmp
push
in
in
repz
repnz
jmp
rol
out
sar
iret
mov
in
mov
jmp
lret
jecxz
mov
loop
mov
ffree
scas
loopne
mov
clc
lock
xchg
fs
xchg
push
jnp
faddp
scas
ffreep
scas
call
mov
ja
scas
xchg
dec
call
pop
mov
mov
fnstcw
loop
mov
mov
lods
aam
rolb
ja
ja
sbb
sbb
xlat
xlat
xlat
repnz
out
fcomp
fdivr
mov
repnz
clc
repz
clc
repnz
div
in
imul
ljmp
in
in
hlt
jmp
repz
fdivrp
out
out
sar
iret
mov
in
mov
loope
mov
loop
mov
loop
mov
loopne
mov
xlat
mov
popf
cld
repnz
inc
lods
js
jne
sbb
sbbb
into
mov
ffree
lods
xlat
mov
xchg
jmp
shll
xchg
inc
popf
jbe
xchg
jo
lcall
leave
cmpsb
sbbl
outsl
fs
add
add
push
push
jl
lock
loopne
loopne
leave
lret
aad
stc
cmc
repnz
stc
hlt
icebp
clc
repnz
clc
repnz
push
icebp
jmp
imul
jmp
hlt
in
in
repz
out
ret
iret
mov
jmp
into
mov
loope
mov
loop
mov
loopne
mov
loopne
mov
ffree
scas
call
mov
sahf
cli
lock
jge
xor
pop
cmp
call
mov
cmpsb
fnstcw
jbe
in
int
loop
pop
call
test
cmp
mov
mov
call
insl
push
xchg
ljmp
add
or
add
sub
dec
xlat
xlat
xlat
in
rcl
sar
mov
hlt
icebp
cli
div
stc
hlt
icebp
clc
repz
clc
repz
push
icebp
in
push
out
ljmp
in
in
repz
in
mov
in
mov
jmp
lret
loop
mov
loope
mov
faddp
mov
ffree
scas
call
mov
cwtl
std
out
mov
pushl
nop
pop
lcall
scas
cwtl
call
mov
jl
in
iret
je
repnz
jmp
mov
imul
xchg
popa
repnz
jns
iret
fwait
js
shlb
add
addl
or
jp
jp
aad
clc
cli
div
cli
div
stc
cmc
repnz
stc
hlt
lock
clc
repz
div
in
div
jmp
cmc
out
jmp
hlt
jmp
lock
in
mov
jecxz
mov
loope
mov
loopne
mov
ffreep
mov
ffree
scas
mov
cwtl
sti
ljmp
std
repnz
std
lock
cld
in
popf
movsl
mov
jns
cmp
iret
mov
aam
sahf
mov
mov
shll
cwtl
aam
cwtl
std
cmpsb
test
sahf
jp
mov
in
in
in
add
add
add
jnp
sysret
add
add
test
in
ljmp
div
stc
hlt
icebp
stc
hlt
lock
clc
repz
push
icebp
in
push
out
ljmp
in
out
lock
jmp
into
mov
loope
mov
loope
mov
loopne
mov
ffreep
mov
ffreep
mov
fadd
lods
out
xchg
cli
loop
cld
jmp
nop
sti
loop
push
fisttpl
jmp
leave
xchg
call
mov
call
mov
fidivrl
sahf
call
mov
fdivs
cltd
mov
jne
mov
mov
add
add
add
dec
inc
ror
lret
aad
in
in
out
ljmp
stc
cmc
icebp
clc
repz
push
icebp
in
push
lock
imul
jmp
icebp
out
jmp
int
jmp
lret
loope
mov
loopne
mov
faddp
mov
ffreep
mov
faddp
scas
fadd
stos
fdivrs
nop
ljmp
call
mov
lcall
mov
lahf
fdivrs
sahf
call
mov
call
mov
xlat
mov
call
mov
cld
lcall
mov
push
add
mov
mov
jmp
out
lock
out
jmp
clc
repz
div
in
imul
ljmp
jmp
mov
loope
mov
faddp
mov
ffreep
mov
faddp
scas
fadd
lods
fadd
stos
fstpt
movsb
call
mov
mov
fnstcw
mov
fdivrs
pushf
aad
cltd
call
mov
call
mov
shll
insb
fcoml
pop
aas
movsl
mov
scas
push
movsb
movsb
movsb
push
jno
outsb
dec
scas
stos
test
loopne
out
fsubrp
icebp
jmp
div
icebp
in
cmc
out
jmp
loop
mov
ffreep
mov
ffreep
mov
faddp
mov
fadd
lods
fadd
stos
fcmovnb
test
fnstcw
fdivrs
mov
xlat
mov
pushf
mov
aam
xchg
aam
xchg
aam
xchg
shrb
xchg
nop
imul
imul
test
test
pusha
pop
pop
cmp
ror
fsubp
fstp
ljmp
jmp
faddp
mov
ffreep
mov
faddp
mov
fadd
lods
fadd
stos
fcmovnb
stos
fnstcw
movsl
fidivrl
xlat
mov
mov
aad
fwait
call
mov
call
mov
call
mov
shll
call
lods
mov
mov
arpl
lods
jbe
cmp
imul
jns
jae
iret
lret
loop
xlat
jmp
mov
faddp
mov
fadd
scas
fcmovnb
lods
fcmovnb
stos
fidivrl
cmpsb
fnstcw
call
mov
lahf
call
mov
call
mov
aad
cltd
call
mov
call
scas
xchg
call
scas
xchg
shrb
mov
pusha
cmp
stos
mov
add
bound
push
pusha
pop
pop
push
mov
mov
aad
cmpsl
icebp
ffree
scas
fnstcw
cmpsb
fnstcw
mov
sahf
aam
pushf
aam
lcall
mov
shrb
nop
dec
stos
mov
int
mov
into
test
xchg
imul
pop
cmp
fcmovnu
fildl
xchg
sub
pop
dec
cmp
sahf
cmpsb
mov
into
mov
in
fidivrl
mov
call
mov
pushf
shll
cwtl
call
mov
shrb
nop
dec
stos
mov
int3
cmpsl
mov
int
xchg
mov
push
jle
xor
jnp
xor
sahf
xchg
nop
add
add
test
es
cmp
gs
dec
lcall
xchg
out
mov
popf
call
mov
shll
xchg
dec
lods
xchg
shrb
dec
cmpsb
xchg
int3
movsl
test
mov
ds
push
xor
lock
add
add
add
aaa
xor
push
imul
mov
pushf
test
aam
fwait
cli
shlb
xchg
dec
lods
dec
stos
mov
int3
cmpsb
xchg
lret
movsb
test
lret
mov
push
das
mov
cmpsl
mov
add
aas
cmp
sbb
dec
xor
addr16
test
xchg
jbe
int
test
cmpsb
xchg
lret
dec
mov
jne
jl
xor
gs
inc
pop
out
out
out
add
add
add
push
or
pop
adc
push
cmp
jbe
pop
inc
test
andb
movsl
xchg
lret
inc
mov
dec
je
sub
lret
adc
add
add
arpl
sbb
and
sbb
pushf
nop
push
inc
mov
dec
sub
addr16
dec
dec
pop
pop
pop
add
sbb
push
pusha
ds
insb
inc
daa
xchg
pop
inc
xor
xlat
aad
or
add
add
ret
int3
enter
loope
push
clc
pop
add
inc
sldt
sti
orb
add
incl
add
add
clc
add
pop
add
push
push
add
sldt
push
add
add
add
jmp
add
add
add
inc
add
sldt
inc
add
cmpb
add
addb
cmp
add
cmp
add
add
add
incl
add
add
add
incb
add
add
add
incb
add
add
add
cld
add
add
jg
add
add
add
pop
add
clc
add
add
pop
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
pop
add
loopne
add
add
add
clc
add
add
aas
add
incb
add
add
add
addb
add
add
lock
add
add
cld
add
add
add
incl
add
incl
add
inc
add
incl
add
clc
add
incl
add
incb
add
add
incl
jmp
ud0
add
clc
ud0
add
lcall
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lcall
cmpsb
xchg
insb
add
lea
mov
jge
mov
jbe
shrb
outsl
add
movsl
ja
lret
add
mov
push
add
jge
out
shll
mov
test
add
movsb
sahf
add
stos
cwtl
add
mov
add
mov
addb
mov
test
shrb
add
scas
xchg
add
mov
add
mov
xchg
add
mov
add
mov
add
mov
add
mov
lahf
add
mov
cmpsl
add
mov
movsl
add
lea
loope
mov
jecxz
xchg
add
iret
xchg
add
lret
out
xchg
add
loop
add
ret
fcmovnb
test
add
ret
scas
add
ret
mov
ffree
mov
loopne
movsb
add
frstor
add
mov
jecxz
mov
loopne
mov
jecxz
mov
jecxz
mov
add
int
add
iret
mov
add
sarb
add
in
add
les
ror
roll
ror
add
rcl
add
fcmovu
add
fcmovu
add
rol
add
aam
add
rol
add
aad
add
aad
add
xlat
enter
enter
lret
fcmovne
add
fmul
add
fcmovnbe
add
add
fstp
add
hlt
lds
out
loopne
add
loope
add
loope
add
jecxz
add
out
add
call
in
hlt
ljmp
imul
jmp
add
hlt
icebp
add
or
add
or
add
add
add
add
add
adc
add
add
push
add
add
add
add
push
cmp
add
add
add
add
dec
pop
pop
pop
push
inc
xor
add
sbb
bound
push
dec
dec
nopl
add
add
dec
popa
bound
push
inc
inc
dec
adc
sub
add
sbb
addr16
push
inc
inc
or
or
add
dec
gs
inc
cmp
adc
add
imul
add
or
add
push
xor
sub
add
add
cmp
sub
and
add
and
and
sbb
add
pop
push
sti
add
pushl
add
icebp
mov
add
daa
add
loopne
add
rolb
add
add
add
add
add
add
add
pop
add
cld
sldt
decl
add
incl
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
sbb
inc
and
xchg
nop
je
add
test
add
mov
add
dec
add
cwtl
inc
add
adcb
mov
stos
nop
outsb
add
lea
test
nop
jne
stos
xchg
jl
mov
jbe
mov
jnp
mov
jge
mov
mov
dec
add
cmpsb
inc
add
movsl
dec
add
lods
dec
add
lods
push
add
lods
push
add
scas
pop
add
mov
add
mov
add
mov
add
mov
pop
add
mov
pusha
add
pushf
jl
shlb
push
add
mov
add
mov
pop
add
ret
jecxz
popa
add
les
loopne
insb
add
leave
push
add
int
add
lret
jo
in
into
jae
call
enter
sarl
out
aad
add
popf
addl
mov
addb
fwait
addb
popf
lea
mov
fwait
cwtl
add
mov
mov
test
mov
xchg
add
test
fwait
add
movsb
mov
add
test
add
mov
add
movsb
test
ret
add
cmpsb
mov
int3
stos
mov
shrb
add
mov
add
mov
add
mov
add
mov
mov
ret
add
scas
xchg
add
mov
add
mov
fwait
add
mov
xchg
add
mov
lcall
mov
popf
add
mov
add
mov
test
shll
add
mov
scas
add
mov
mov
add
mov
mov
add
mov
mov
iret
mov
test
mov
xchg
add
les
add
int
add
int3
test
in
xlat
mov
ljmp
add
fisttps
add
into
xchg
add
rcll
loop
fwait
add
fcompl
add
loope
add
loopne
add
jecxz
add
loope
add
in
add
loop
add
jmp
mov
add
shrl
fcmovb
lods
add
ret
ffree
scas
add
leave
scas
add
ret
rol
mov
fcmovb
mov
faddp
mov
fcmovnb
mov
rol
mov
add
int3
mov
add
lods
add
shrb
add
fisubrs
add
mov
loopne
mov
jecxz
mov
in
mov
loope
mov
in
mov
jecxz
mov
add
int
add
into
mov
add
sarb
add
loopne
add
out
add
out
mov
add
out
scas
add
icebp
movsl
add
rep
add
rep
add
out
add
divb
add
idivb
add
sti
mov
add
mov
add
int
add
into
ret
int
add
ror
add
ror
add
rcl
add
rcl
add
aad
add
aad
add
fcmovu
add
add
fstp
add
rol
add
aam
add
rol
add
aam
add
lds
ljmp
add
fmul
add
fcmove
add
fcmove
add
fcmove
add
fmul
add
fst
add
fst
add
add
cld
roll
cmc
leave
add
loopne
add
loope
add
loop
add
loop
add
loope
add
jecxz
add
in
add
out
add
loope
add
out
add
out
add
call
call
add
call
loope
hlt
jmp
add
in
out
hlt
out
call
add
repnz
add
icebp
icebp
add
repnz
hlt
hlt
add
hlt
icebp
pop
xor
add
add
xchg
push
sbb
push
push
add
add
add
and
add
dec
jnp
add
add
pop
and
add
add
sbb
add
hlt
lret
jno
add
add
mov
shl
movsl
lahf
jno
add
sub
add
shlb
add
hlt
into
xlat
mov
sbb
add
int
out
fcmovu
mov
jae
cmp
lock
fsub
jecxz
fcmovu
fidivrl
les
add
in
in
out
fcmovu
mov
xchg
daa
dec
shl
in
out
jecxz
fcmovu
fidivrl
in
sub
dec
add
int
in
in
in
out
fcmovu
mov
sarl
dec
ljmp
fidivrl
pushf
xor
xchg
je
add
add
add
lock
div
in
in
mov
scas
stos
les
subb
scas
scas
pushf
sbb
add
push
hlt
leave
repnz
div
cmc
in
fcmovnu
mov
mov
mov
mov
push
pop
lods
cmpsl
cmpsl
push
insl
add
add
ror
sti
cli
cli
div
in
xlat
mov
mov
mov
cmpsb
ret
pushf
subb
je
arpl
add
push
lock
idiv
in
in
mov
mov
mov
xchg
stos
mov
push
pushf
cmp
add
add
iret
iret
sti
cli
cli
div
out
mov
mov
lar
cmp
add
add
add
sti
cli
cli
cli
jecxz
mov
lea
pusha
jge
pop
inc
add
add
add
add
cli
cli
cli
mul
mov
mov
xchg
insb
insb
sbb
leave
repnz
cli
cli
cli
jecxz
mov
insb
imul
inc
add
add
aam
cli
ljmp
xchg
xchg
jne
insb
addr16
dec
add
lret
mov
jne
imul
add
jbe
jne
jne
imul
dec
gs
imul
add
add
imul
add
inc
push
push
adc
aas
adc
add
decb
jmp
ud0
mov
incl
into
aas
incl
data16
incb
add
cld
add
jg
add
clc
add
jg
add
pop
lock
add
add
add
add
add
add
add
add
add
pop
rolb
pavgb
add
lock
pop
cld
add
pop
incl
add
cld
add
incl
inc
push
ljmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
pop
cmp
add
sbb
jge
and
jnp
aaa
add
data16
jnp
add
jo
add
jne
add
xorb
mov
add
mov
add
xchg
cmp
fsubrs
dec
add
xchg
inc
add
pop
add
nop
pop
add
fwait
pop
add
mov
cwtl
pusha
add
cwtl
imul
mov
jae
lods
nop
jne
stos
cwtl
jae
movsl
xchg
jp
stos
xchg
jl
mov
jl
mov
lcall
mov
mov
jle
les
add
mov
dec
add
test
add
stos
dec
add
mov
add
stos
push
add
movsb
pop
add
scas
pop
add
lods
push
add
mov
add
mov
add
mov
add
mov
push
add
mov
data16
lods
fs
test
pusha
add
mov
imul
les
js
lret
mov
add
rcrl
ret
ffreep
jl
in
pusha
add
insb
add
lret
in
into
jb
loopne
jl
out
jnp
in
shlb
jmp
jl
lock
aam
add
cwtl
add
xchg
addl
scas
fwait
xchg
test
cltd
mov
stos
fwait
mov
mov
test
test
xchg
add
mov
mov
lods
mov
cwtl
add
cmpsl
xchg
add
test
pushf
add
mov
add
stos
add
mov
add
mov
addl
lret
add
cmpsl
mov
stos
mov
into
stos
mov
shrb
add
mov
add
mov
add
mov
test
mov
mov
leave
lods
xchg
add
scas
nop
add
mov
add
mov
add
mov
add
mov
add
mov
lcall
mov
sahf
add
mov
add
mov
add
mov
stos
add
mov
stos
add
mov
mov
add
mov
mov
int
mov
faddp
nop
add
lret
fwait
add
lret
out
mov
jmp
fimull
add
fiadds
add
fisttps
add
rcll
add
ficoml
add
fcompl
add
loope
add
loope
add
out
add
jmp
cltd
add
in
add
jmp
add
shlb
stos
add
shrl
add
sarl
ffree
mov
mov
aam
mov
add
leave
mov
add
lds
jecxz
stos
add
mov
loop
mov
in
mov
add
sarl
add
loope
add
loopne
add
in
add
ljmp
hlt
in
add
jmp
add
icebp
movsb
add
icebp
stos
add
loop
add
in
mov
cld
out
mov
cli
hlt
mov
stc
idivb
add
ret
ret
add
mov
add
int3
lret
add
enter
int
add
iret
int
ror
add
ror
add
aam
add
xlat
aad
xlat
xlat
fadds
fcmovnu
fildl
out
roll
aam
add
lret
add
enter
int3
add
fcmovnbe
add
fst
add
add
sti
ret
cmc
lret
add
loopne
add
loope
add
loope
add
in
add
call
jecxz
ljmp
add
jmp
add
jmp
add
out
jmp
add
repnz
add
repnz
hlt
icebp
add
clc
testl
add
das
cmp
or
add
add
push
push
push
dec
cmp
add
addb
add
outsb
sahf
mov
arpl
add
inc
push
stos
stos
inc
add
add
mov
add
add
add
add
xor
push
stos
cmpsb
data16
add
movsb
mov
add
add
cltd
jae
add
add
add
outsb
inc
push
or
add
pushf
scas
dec
xor
add
cld
fcmovnu
mov
add
add
add
sbb
add
add
mov
cmp
add
fnstsw
add
add
into
dec
sldt
add
enter
cmp
add
add
cld
fucomi
jmp
mov
jb
add
add
add
rcll
jge
add
add
cld
hlt
loopne
jmp
fnstsw
add
add
roll
outsl
push
jmp
jmp
out
mov
lret
xor
inc
push
hlt
cld
jecxz
out
jmp
jmp
call
xchg
pushf
cmpsb
xor
add
add
je
neg
out
out
out
jmp
jmp
call
mov
xlat
int3
inc
dec
cld
cld
jecxz
repnz
out
jmp
jmp
out
call
ret
xlat
push
dec
addb
add
out
out
out
out
jmp
call
out
call
in
xlat
dec
ds
add
outsl
cld
mul
ljmp
jmp
out
out
mov
mov
inc
insb
add
add
add
cld
jecxz
repz
repnz
out
jmp
out
out
out
out
mov
push
ds
xchg
xchg
xchg
bound
add
hlt
fcomi
repnz
out
jmp
out
out
out
mov
in
iret
cmp
mov
hlt
div
clc
repnz
icebp
jmp
call
mov
shr
inc
aad
inc
mov
mov
pop
add
hlt
mov
repnz
icebp
jmp
out
out
mov
mov
aad
push
leave
xor
mov
xchg
add
add
add
add
mul
fdivrp
clc
clc
clc
repnz
out
out
out
mov
lret
xor
cmp
xchg
mov
mov
sub
add
add
add
hlt
mov
clc
repnz
out
out
mov
rol
xlat
cmp
inc
mov
rol
rol
sub
add
add
add
neg
fdivrp
cli
clc
clc
clc
clc
repnz
out
out
mov
rol
leave
adc
mov
rol
rorb
add
jecxz
cli
cli
cli
stc
clc
clc
clc
repnz
out
mov
rol
int
cmp
sbb
pop
xchg
rol
ja
add
add
add
hlt
fninit
cli
cli
sti
stc
stc
clc
clc
clc
bnd
mov
rcl
push
push
sub
mov
mov
add
add
jecxz
jecxz
cli
cld
sti
sti
stc
stc
clc
clc
repz
rcrb
mov
pop
or
sub
add
add
cld
hlt
fninit
cld
sti
sti
sti
sti
stc
stc
clc
clc
bnd
rol
mov
add
or
xchg
adcl
xor
imul
add
add
jecxz
jne
std
std
sti
sti
sti
stc
stc
clc
clc
repnz
shlb
push
test
inc
inc
and
sub
add
add
add
add
std
std
std
std
sti
sti
sti
stc
clc
cli
repnz
mov
xchg
movsl
int
ror
mov
add
xchg
mov
popa
jb
jne
std
std
std
sti
sti
sti
stc
stc
clc
repnz
les
movsb
lods
mov
mov
sub
add
jecxz
idiv
std
sti
sti
sti
cli
clc
repz
les
push
fwait
mov
mov
sub
add
div
cli
cli
cli
cli
clc
clc
ffree
les
cwtl
xchg
mov
mov
jbe
pop
mov
cli
clc
mov
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
xchg
xchg
xchg
mov
test
sub
add
mov
lds
cwtl
cwtl
cwtl
xchg
xchg
mov
test
pusha
add
in
mov
mov
cwtl
xchg
xchg
mov
mov
sub
jae
insb
cwtl
mov
mov
mov
sub
add
add
xchg
cwtl
mov
mov
sub
sub
add
bound
xchg
xchg
mov
jns
js
sub
add
imul
sub
gs
js
sub
sub
add
add
jns
dec
and
pop
add
pop
and
sub
add
add
incl
add
cld
aas
add
inc
pop
add
sti
sarb
add
incl
lock
add
cld
jg
lock
add
clc
pop
and
add
clc
pop
jecxz
incl
add
lock
sar
add
loopne
jno
incl
add
loopne
adc
incl
add
rolb
cmp
add
rolb
xchg
add
incl
add
incl
add
incl
add
pop
incl
add
add
add
incl
add
add
add
incl
add
add
add
aas
add
cld
add
add
sldt
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
rolb
add
pop
add
rolb
add
sldt
rolb
add
sldt
rolb
add
pop
add
loopne
add
add
add
lock
add
aas
add
clc
add
add
jg
add
add
add
jg
add
addb
add
add
jmp
add
add
add
clc
add
add
add
incl
add
incl
add
jmp
add
incl
add
clc
add
incl
add
incb
pop
incl
add
inc
ud0
add
push
ud0
add
cld
pop
incl
add
aas
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
pop
add
add
add
add
add
add
mov
or
add
add
mov
mov
push
mov
clc
clc
mov
mov
mov
add
mov
add
add
xchg
add
sti
add
pushl
add
icebp
mov
add
daa
add
loopne
add
rolb
add
add
add
add
add
add
add
pop
add
cld
sldt
decl
add
incl
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
mov
add
add
add
add
jo
call
add
add
addb
push
jo
add
add
add
mov
or
add
mov
add
add
add
xchg
or
add
add
add
add
clc
mov
call
add
or
vpmacssdd
add
add
mov
add
add
add
mov
add
add
mov
add
add
jg
mov
add
add
mov
add
add
clc
clc
clc
clc
mov
mov
clc
decl
mov
jo
clc
clc
mov
jle
mov
decl
jbe
xchg
decl
mov
push
add
mov
clc
clc
mov
mov
add
decl
mov
out
mov
add
ud0
clc
mov
call
add
mov
decl
mov
add
add
mov
add
add
add
or
xchg
add
add
add
mov
js
add
loopne
add
js
jle
add
add
add
add
decb
jmp
ud0
mov
incl
into
aas
incl
data16
incb
add
cld
add
jg
add
clc
add
jg
add
pop
lock
add
add
add
add
add
add
add
add
add
pop
rolb
pavgb
add
lock
pop
cld
add
pop
incl
add
cld
add
incl
inc
push
ljmp
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
or
add
add
ja
mov
rolb
mov
add
outsb
mov
xchg
add
add
add
add
add
decl
call
mov
add
psubb
or
add
call
add
add
add
add
jo
or
add
clc
mov
add
add
add
decl
jo
mov
add
clc
mov
clc
out
add
mov
jle
add
add
add
add
mov
or
mov
mov
call
add
mov
clc
clc
mov
mov
add
add
add
add
clc
mov
mov
add
add
add
clc
mov
mov
mov
or
decl
mov
xchg
add
add
clc
mov
mov
add
add
mov
mov
call
xchg
add
add
clc
mov
mov
mov
jg
mov
mov
mov
mov
mov
mov
clc
clc
decl
mov
call
mov
add
or
clc
clc
clc
mov
mov
enter
call
clc
clc
mov
mov
mov
add
clc
decl
mov
call
add
clc
mov
decl
clc
call
call
add
add
clc
clc
mov
divl
jle
js
loopne
add
or
mov
mov
add
add
clc
mov
mov
mov
add
add
or
clc
clc
clc
mov
mov
jo
add
add
add
clc
clc
mov
mov
mov
ja
add
add
add
add
mov
js
ja
or
mov
xchg
add
add
add
add
mov
js
xchg
add
mov
js
xchg
addb
add
add
js
call
xchg
add
add
xchg
enter
add
or
xchg
add
in
ja
add
add
add
add
addb
xchg
add
incl
add
cld
aas
add
inc
pop
add
sti
sarb
add
incl
lock
add
cld
jg
lock
add
clc
pop
and
add
clc
pop
jecxz
incl
add
lock
sar
add
loopne
jno
incl
add
loopne
adc
incl
add
rolb
cmp
add
rolb
xchg
add
incl
add
incl
add
incl
add
pop
incl
add
add
add
incl
add
add
add
incl
add
add
add
aas
add
cld
add
add
sldt
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
rolb
add
pop
add
rolb
add
sldt
rolb
add
sldt
rolb
add
pop
add
loopne
add
add
add
lock
add
aas
add
clc
add
add
jg
add
add
add
jg
add
addb
add
add
jmp
add
add
add
clc
add
add
add
incl
add
incl
add
jmp
add
incl
add
clc
add
incl
add
incb
pop
incl
add
inc
ud0
add
push
ud0
add
cld
pop
incl
add
aas
incl
add
incl
add
incl
add
incl
add
incl
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
roll
sub
and
add
add
lahf
adc
add
ficoms
lcall
dec
jbe
sub
add
jg
push
fstl
test
addb
fstpt
repnz
xor
jecxz
test
lods
and
sti
jo
loopne
mov
popf
sbb
andb
mov
shlb
jge
int3
jns
or
pop
mov
sub
sbb
mov
pusha
in
xor
fcom
jecxz
cmp
mov
and
pop
fcmovb
imul
movsl
adc
mov
int
or
ret
sbb
xchg
sahf
call
je
pop
mov
outsb
add
push
and
cmpsl
cmp
lock
mov
in
lahf
ret
ficoms
mov
add
or
out
sarb
push
in
aas
and
lods
jb
andl
loop
xor
jns
mov
imul
std
mov
aad
test
jb
imul
fimuls
inc
in
sbb
jno
aam
add
xchg
sbb
loopne
cs
aam
std
push
and
xchg
mov
fildl
inc
movsb
jb
dec
mov
cmp
dec
adc
jmp
outsb
sub
xor
dec
mov
jae
mov
lds
ss
nop
orl
movsb
lods
mov
jp
daa
push
mov
push
stos
adc
add
insb
xchg
cs
jp
pop
bound
sub
and
pop
push
xchg
mov
movsl
lea
cmp
cmp
xchg
in
int3
int3
cmc
into
mov
or
sub
in
cmp
dec
jle
and
jle
pop
ljmp
jbe
xchg
subb
add
or
sbb
adc
stos
mov
ljmp
dec
xchg
sbb
dec
xchg
and
mov
outsl
leave
dec
dec
pop
add
lea
mov
repnz
shrl
mov
adc
mov
xor
adc
call
sbb
fidivrs
mov
xor
lcall
imul
call
cmpsb
std
ljmp
ficoml
loop,pn
push
out
lods
cmp
rorb
adcb
jbe
push
das
inc
hlt
dec
out
shlb
adc
in
imul
mov
pop
mov
int3
mov
push
icebp
dec
jmp
imul
or
pop
lcall
leave
pushf
and
repnz
lock
push
mov
mov
stos
arpl
cld
xchg
nop
in
pushf
aas
and
cmpsl
jmp
jae
enter
out
sarb
icebp
scas
xchg
push
hlt
ja
pop
sub
fistpl
mov
pop
out
push
add
cld
mov
imul
xchg
fcos
jp
lock
outsl
ss
sbb
push
mov
dec
gs
pusha
adc
push
add
test
into
push
cs
imul
or
out
bound
int3
scas
xor
jp
mov
lods
shrl
orl
mov
mov
add
jne
or
push
xchg
dec
std
push
scas
imul
sbbl
bound
sbb
add
xlat
rclb
in
aaa
daa
mov
mov
lods
call
or
cwtl
dec
mov
subl
int3
lds
jecxz
pop
sub
pushf
stos
out
prefetch
in
lds
notl
fwait
cmp
xchg
pop
daa
test
pushf
jg
in
movsl
sub
inc
sbbb
cmc
movsl
test
add
negb
and
add
pop
jno
mov
int
xchg
subb
ss
sub
jge
fwait
or
xlat
add
sbb
adc
add
mov
jns
dec
sub
iret
add
cmp
xchg
cmp
sub
cmp
and
scas
fiaddl
mov
in
xchg
mov
pop
repnz
pop
push
adc
insl
pop
xchg
lods
imul
cli
jne
jae
ret
jecxz
push
inc
add
cmp
xchg
inc
sbb
fbstp
into
cs
adc
mov
inc
bound
rorb
or
roll
in
dec
add
push
shl
push
stos
push
xchg
rcll
mov
add
jl
cmpsl
out
out
cltd
in
adc
lea
or
adc
push
jo
fcmovnbe
dec
js
sub
in
repnz
cwtl
push
bound
aam
inc
loop
data16
gs
sbb
daa
or
insb
fdivrl
xor
lcall
cmp
push
jb
div
bnd
aaa
cmc
outsb
cmpsl
aaa
hlt
pusha
cmp
fsubs
sti
test
addr16
arpl
test
in
lahf
and
js
mov
cmp
jmp
aam
jge,pt
push
adc
mov
pop
xlat
iret
fisubl
push
mov
pop
aad
std
or
jp
fimuls
in
sbb
outsb
cmpsb
xor
inc
std
icebp
inc
outsb
test
pop
lret
sahf
pop
cmp
mov
insl
aas
mov
out
inc
negl
adc
stc
pop
jae
nop
and
inc
icebp
jb
push
ja
and
ja
mov
dec
pop
jns
and
je
insl
push
dec
lock
pop
mov
mov
aaa
jl
hlt
or
jns
push
aam
cmp
je
loopne
xor
jge
jb
jg
mov
mov
cli
testb
jle
xor
lahf
popa
enter
or
add
int3
xchg
jno
clc
cmp
shll
stos
fwait
lods
mov
sub
cmp
shlb
pop
push
out
mov
loope
mov
push
sti
cmc
int3
es
testb
clc
leave
inc
pushf
adc
pop
mov
mov
inc
xchg
imull
sbb
jl
pop
test
or
pop
pop
orl
push
out
xchg
add
jns
lret
pop
dec
jp
in
inc
inc
cmp
xlat
call
aaa
pop
mov
popa
lahf
lahf
fistpll
std
outsb
push
in
scas
add
imul
push
add
scas
sahf
jle
push
stc
mov
in
pop
imul
adc
mov
sub
lods
push
pop
mov
addr16
push
mov
and
cs
sub
test
dec
sbb
out
cmp
repz
mov
push
cmpsl
cmp
in
pusha
sarl
and
inc
jecxz
xor
push
shll
stc
sub
fisubs
xorb
dec
loope
or
aad
test
data16
test
pop
cmp
lea
lahf
mov
xchg
testb
and
out
inc
sub
in
daa
int3
lcall
mov
cmpsl
mov
out
in
mov
xor
xchg
inc
movsl
popa
inc
clc
mov
mov
pop
int3
pop
push
xor
roll
mov
jb
ljmp
repz
int
mov
push
push
pop
xchg
shl
push
or
xor
adc
lds
dec
adc
lea
xor
dec
push
nop
adc
sbb
pushl
mov
adc
pop
cmp
call
sbb
add
dec
mov
xchg
ds
movsb
fwait
add
lds
push
xchg
sahf
aas
icebp
adc
adc
sbb
mov
inc
into
mov
sub
jg
push
je
pop
xchg
jo
and
jbe
jg
add
loopne
cmp
xchg
cmp
lret
push
lock
jg
popa
out
xor
mov
adc
jecxz
inc
test
cmp
lcall
jge
addr16
fadd
and
mov
inc
adc
daa
dec
popa
mov
cli
rcl
gs
pop
pop
mov
dec
lods
adc
xor
arpl
mov
jmp
xchg
pushf
or
scas
sbb
pop
jbe
aad
and
enter
sti
insl
sbb
xor
and
cmpsb
popf
jb
jle
cs
jle
insl
adc
sub
test
repz
nop
sbbb
mov
add
dec
inc
jle
imul
mov
lahf
rolb
dec
xorb
loop
inc
push
lret
fiadds
mov
lods
jne
mov
fwait
push
subl
out
clc
fbld
out
imul
das
and
jo
mov
negb
adc
xchg
xchg
cmp
lahf
cmp
loopne
out
or
out
loope
or
xor
jne
test
lock
dec
cmpsl
push
mov
sbb
xchg
push
cli
jb
dec
aaa
dec
push
mov
shl
sahf
jmp
xchg
clc
add
sarb
rcll
sub
das
pop
cmp
pop
pop
scas
sub
xor
push
or
cltd
mov
je
mov
jmp
pop
inc
repz
nop
xchg
imul
out
pop
stos
mov
shrb
stc
jo
cmc
jb
cwtl
je
mov
mov
aaa
add
pop
mov
mov
xchg
pop
out
dec
fsubrl
and
mov
adc
cs
mov
mov
mov
jmp
arpl
stc
mov
repnz
pop
jecxz
push
std
stc
mov
ret
sub
fmul
lock
xchg
rcrl
shrl
loopne
mulb
sbb
lea
mov
fst
dec
mov
ret
aad
push
jp
cmp
add
loopne
jg
mov
push
shlb
add
push
mov
cs
scas
cmp
in
dec
xor
inc
mov
ret
insb
cli
pop
push
shrl
notl
push
pop
sbb
inc
nop
lret
adc
subl
push
push
sub
and
adc
sbb
mov
pop
mov
scas
push
outsb
sub
mov
pop
nop
movsl
sete
pushf
add
imul
xor
pop
outsb
push
xor
je
outsl
enter
out
xor
out
mov
xor
jle
pop
xchg
mov
mov
sti
int3
mov
adc
out
jmp
add
dec
fisubs
pushf
cld
adc
add
pushf
sub
fdivs
sbb
xchg
in
pop
in
imul
mov
inc
dec
inc
mov
aaa
mov
insl
push
lret
jno
enter
outsb
cmpsl
idivb
lock
inc
pop
or
cmp
push
pop
jo
jmp
pop
loopne
movsb
lods
int
lds
xchg
mov
dec
mov
xchg
sbb
movsl
push
inc
lock
std
divl
pop
lret
inc
add
insb
cld
insb
push
stos
stc
sbb
mov
enter
mov
xchg
mov
orl
lret
adc
cmpsl
xor
stos
push
or
pop
rcll
fdivrs
sahf
ret
cmp
test
jb
imul
loop
jns
fs
rorb
gs
test
iret
cmpsb
lods
movsl
mov
iret
pop
sahf
adc
into
jno
les
mov
shr
inc
fisttps
and
dec
push
sbb
ljmp
push
fsubrl
ret
test
in
iret
and
jo
pusha
inc
fldt
inc
loop
scas
inc
test
movsb
fisttpl
jmp
shlb
fs
add
imul
lahf
outsb
pop
popf
push
dec
pop
pop
test
pop
lods
lods
mov
mov
dec
lcall
jl
push
fs
jle
add
movsl
xor
xchg
cs
dec
dec
mov
pop
xchg
mov
subb
or
hlt
pop
xchg
pop
mov
lret
hlt
lcall
and
hlt
fwait
loope
leave
aam
mull
push
pop
stos
push
push
add
pop
xor
mov
mov
aaa
leave
or
and
arpl
mov
movsl
push
pop
xchg
outsb
push
cmpsb
jb
mov
add
andb
lcall
ljmp
in
mov
or
sbb
sbb
sub
rcrb
cmpl
repz
and
inc
fs
sbb
call
into
out
jp
jno
mov
xor
mov
sub
inc
jmp
fidivs
lret
mov
repz
popf
leave
mov
stc
imulb
push
mov
cmpsb
ljmp
xchg
pop
add
repz
sbb
push
cmpb
cmp
ss
xchg
repnz
jg
dec
jge
stos
test
movsl
sbb
loope
and
jmp
xchg
adc
push
mov
mov
ja
jne
add
or
push
mov
and
out
jo
lods
pop
popf
jecxz
test
mov
jp
lock
rol
jbe
push
imul
scas
jbe
and
fidivs
test
cmc
fcoml
sahf
pop
daa
fisttps
fisttps
dec
fsubs
lods
mov
jl
lret
xchg
divb
movsl
push
test
loope
sub
popa
push
xor
scas
lock
adc
add
lock
scas
inc
pop
repnz
cmp
add
push
sub
repnz
test
pcmpgtw
cld
stos
fcmovnbe
sub
insl
rcrb
jp
rorl
nop
movsb
out
jb
lret
arpl
mov
cmp
push
jbe
dec
hlt
aas
pushf
aad
cmpsl
push
sbb
iret
jmp
inc
fucomi
xor
and
sub
and
int3
xchg
stos
dec
lea
sbb
shll
and
jne
arpl
xchg
jp
std
ret
xchg
cmp
push
sub
xor
fisubs
adc
cld
fldt
popf
push
test
fdivrs
push
jle
enter
fnsave
mov
ret
rcll
push
lds
cld
lds
mov
jecxz
or
push
xchg
stos
inc
inc
mov
xchg
and
cmp
unpckhps
add
mov
push
xchg
pop
sub
movsb
and
push
sbb
aad
sbb
arpl
mov
leave
and
mov
hlt
mov
sti
enter
lret
dec
lcall
icebp
jle
cs
fs
test
rorl
fwait
leave
das
test
fnstenv
movsl
sub
out
mov
icebp
loopne
ljmp
pop
push
dec
inc
mov
push
inc
xor
cli
jmp
lea
mov
lods
out
sbb
ds
adc
test
lods
leave
mov
and
fwait
xchg
div
pop
mov
push
jl
sub
out
mov
popa
xchg
inc
sbbb
in
xor
ret
push
dec
jne
movsl
push
gs
adc
xor
push
mov
push
imul
int
addr16
dec
add
push
push
adcb
push
xor
adc
or
aad
mov
stos
jo
sbb
hlt
adc
mov
push
pushf
xchg
cmpsb
inc
add
push
clc
mov
imul
and
and
aad
cld
lcall
popa
jge
dec
mov
pop
cld
mov
shlb
xor
add
add
sub
mov
or
mov
add
js
fsubl
aas
push
ds
hlt
push
aaa
jbe
xor
fs
jo
cmp
mov
mov
es
out
sub
mov
jp
mov
loope
xchg
shll
cmp
inc
xchg
sub
pop
jb
dec
gs
call
jg
jb
cmp
xchg
lret
sbb
repnz
daa
call
cmp
ret
push
les
ret
bnd
cwtl
sub
push
inc
push
dec
fdivl
mov
pop
inc
sub
lret
mov
or
mov
ret
dec
push
pop
sub
dec
inc
aas
xchg
leave
sbb
es
sub
shl
push
add
inc
inc
mov
int
sbb
iret
sub
mov
data16
into
gs
outsb
movsl
loop
cmpsb
adcb
dec
test
outsl
sahf
je
sar
iret
mov
sbb
pop
jmp
out
int3
lcall
in
lret
je
daa
aad
into
clc
dec
fdivr
cmp
push
mov
addr16
enter
scas
push
push
adc
inc
cmp
dec
push
inc
into
push
into
fimull
jns
jle
inc
jle
daa
or
adc
sub
lcall
xchg
push
push
mov
push
cmp
pop
hlt
mov
js
jnp
adc
mov
sti
push
gs
call
or
bound
cmpsl
xor
sbb
cli
fwait
xor
xor
mov
xor
and
pandn
mov
sub
jbe
jo
arpl
clc
in
ja
dec
test
adc
mov
mov
cltd
repnz
fdivl
jmp
add
out
daa
or
pop
aas
mov
cmp
inc
test
and
lods
sub
cmpsl
add
inc
ja
add
andb
adc
jnp
iret
xor
loop
sbb
pop
sbb
frstor
mov
clc
dec
mov
sbb
test
mov
mov
sub
incl
pop
std
cli
push
xchg
adc
and
and
mov
fs
cmp
mov
pop
repz
push
sahf
jge
mov
mov
test
int
mov
mov
jns
mov
mov
jno
movsb
in
mov
xorb
lds
data16
outsb
enter
adc
ret
jno
mov
jo
pop
and
mov
pop
test
sub
outsb
pop
mov
scas
adc
and
jl
loopne
rorb
sbb
mov
jae
add
and
pop
jmp
xchg
jle
loope
mov
push
adc
pop
mov
fsubrs
jnp
cs
jmp
sti
call
js
mov
cmc
sbb
mov
inc
pop
nop
jnp
sub
ljmp
dec
pop
and
dec
sbb
add
lock
fcmovnbe
and
nop
into
jns
pusha
xor
cld
or
sub
outsl
mov
repnz
dec
loopne
rcll
inc
test
inc
mov
or
lds
movsl
adc
mov
nopl
cli
jl
xchg
or
mov
lods
ja
arpl
shrb
adc
scas
or
mov
pushf
sahf
fldenv
je
cmp
mov
adc
cs
scas
dec
jmp
aad
pop
les
dec
out
jnp
or
leave
xchg
arpl
dec
fwait
sbb
cwtl
fnstcw
push
jbe
mov
shll
fimuls
repnz
pop
popf
fsubl
cmp
cmp
pusha
push
and
loope
jmp
sub
pop
and
pop
in
jmp
test
inc
ds
test
out
movsl
sbb
or
faddp
adc
or
adc
push
test
pop
pusha
loop
cmpsl
add
fnstcw
cmp
fistpl
adc
mov
and
mov
test
shrb
cltd
loopne
xlat
jbe
ret
fadd
mov
jg
fmull
cmpsl
cmp
jl
push
sbbb
mov
out
push
rorl
dec
and
lods
push
and
fnstcw
jbe
mov
nop
mov
dec
das
leave
pop
in
inc
xchg
and
fisttps
test
pusha
or
xchg
incl
pop
pusha
push
arpl
in
call
out
fcoml
sahf
es
in
sarb
adc
popa
shlb
inc
add
sbb
xchg
adc
stos
jg
add
mov
sbb
test
fs
jo
xchg
or
imul
dec
cmp
stc
into
lret
stos
lds
mov
in
jle
xor
mov
mov
sub
and
mov
xchg
sbb
pop
cld
mov
push
inc
hlt
shlb
sahf
ret
clc
pop
inc
repnz
sti
or
and
ds
test
ljmp
jecxz
mov
pop
cmp
js
insl
jmp
std
test
fisttpll
dec
or
outsb
dec
stc
jb
aas
push
cmc
jns
pop
repz
out
mov
sbb
or
fdivl
in
jbe
les
sbbb
ja
call
ja,pt
xor
jl
xor
mov
dec
int3
mov
test
sub
adc
pushf
enter
or
push
cmpsl
loop
mov
in
push
aam
push
sbb
push
sub
mov
jmp
jg
or
test
sub
pop
lret
mov
pusha
cwtl
and
subb
adc
iret
cld
data16
fdivrp
sub
les
lahf
and
out
lret
xchg
lods
lcall
add
or
ror
sbb
mov
into
fs
test
mov
fucomp
into
cltd
dec
push
insb
cs
mov
adc
mov
inc
insl
shrb
jle
lods
call
and
push
rorb
lret
std
test
shll
add
cmp
data16
aam
pop
cmp
sub
add
aam
push
nop
dec
jp
aas
clc
packssdw
repnz
cmp
mov
sbb
xchg
or
lahf
xor
and
sti
test
adc
add
insl
dec
cmp
mov
loop
jo
jno
push
or
or
clc
scas
mov
movsl
outsl
jns
fs
xchg
adcb
mov
xor
cmp
cmp
pushf
ret
test
lcall
mov
pop
imul
and
sti
inc
sbb
adc
push
jne
fsubr
pop
daa
repz
xor
cmp
xor
pop
js
gs
push
xor
xor
out
pop
xor
mov
cmp
stos
out
jl
in
jnp
jbe
mov
mov
inc
mov
and
inc
jae
mov
js
push
add
push
push
fstps
jbe
jbe
into
or
sub
mov
repnz
or
jl
fs
pop
mov
mov
in
sarl
test
inc
bound
adc
fsub
push
repz
fucomp
mov
orl
rorl
dec
aaa
lods
sub
xchg
and
gs
inc
push
xchg
inc
sahf
popf
call
mov
dec
jg
dec
lds
addl
push
sub
lock
mov
adc
inc
inc
sub
jns
mov
mov
push
scas
xor
loopne
jbe
in
mov
imul
pusha
add
push
jp
scas
test
loopne
jmp
xchg
add
cmp
clc
dec
jmp
pop
sub
ret
jns
int3
sub
out
pusha
mov
lods
sub
jg
fwait
repz
push
cmp
jecxz
sti
aad
xchg
mov
loope
cmp
add
dec
inc
add
andb
cwtl
lahf
sub
adc
xor
repz
les
mov
sub
xchg
les
push
gs
rcll
loope
mov
inc
xor
jno
in
cmp
in
or
jb
lods
ja
call
inc
push
push
scas
lcall
xlat
jle
xchg
int
iret
pop
pop
cmpsl
push
addl
in
push
std
dec
gs
int3
xchg
test
das
rcll
sbb
test
lods
clc
jecxz
sahf
cmp
cmpb
roll
cmp
jno
incb
inc
pop
cld
roll
sbb
enter
pop
lret
rcrb
int
gs
imul
jge
sub
dec
dec
mov
cmc
or
sbb
mov
call
ret
aad
cs
int
movsb
xchg
push
lcall
xlat
lea
fdiv
pusha
push
add
cmpl
xchg
sbb
loopne
jb
xlat
fs
or
stos
cmp
inc
xchg
imul
inc
clc
ficomps
dec
xor
fbstp
mov
je
rolb
loop
pushf
mov
icebp
mov
sub
xor
arpl
dec
jle
inc
int3
mov
dec
xor
pushf
leave
cmc
push
icebp
xchg
es
enter
adc
leave
fadds
add
imul
ret
mov
leave
ret
lret
dec
or
xor
idivb
dec
out
xchg
mov
jnp
aas
sub
pop
adc
jbe
rcrb
and
nop
inc
mull
inc
rclb
sti
add
lret
test
aam
les
add
cmp
push
push
iret
lds
jnp
and
inc
out
mov
test
xor
aas
fdivl
out
xchg
add
sbb
out
aas
int
into
lds
pop
fbld
cmpsb
loope
sarl
in
sbb
jle
iret
ds
fisttpl
into
jg
sahf
outsb
outsl
jno
insb
mov
dec
mov
or
pop
pusha
inc
jb
test
adc
daa
decb
sahf
mov
enter
and
add
shll
add
and
adc
mov
xor
adc
xlat
mov
mov
out
or
notl
testl
mov
insb
mov
xchg
ret
mov
push
dec
sub
cmp
jno
mov
push
mov
adc
xchg
mov
push
sub
push
stos
push
push
enter
out
xchg
in
lret
stc
insl
ret
pop
or
push
sbb
aam
push
dec
in
fcompl
dec
pop
xchg
ret
xchg
repnz
stos
lds
in
inc
mov
and
mov
aam
int3
adc
sub
push
lcall
xor
les
data16
push
sbb
mov
pop
adcl
cmp
int
insl
mov
add
cmp
push
push
mov
popf
or
mov
dec
lret
jp
xor
es
dec
push
inc
pop
xor
jne
cmp
cmpsb
repnz
int
inc
sub
mov
jg
rcrb
out
or
xchg
imul
shrl
dec
adc
jo
in
fld
arpl
fsubl
fwait
sarl
inc
fs
cli
pusha
jle
mov
push
mov
lcall
xchg
cltd
xlat
inc
lea
and
xchg
and
push
rcrb
sti
and
dec
lret
outsb
ljmp
sub
push
mov
jnp
pushf
lea
jmp
ret
add
out
dec
add
adc
scas
inc
or
ds
mull
and
aam
jl
mov
lret
loop
inc
jp
fistpll
cli
cmp
inc
mov
mov
xchg
xchg
mov
cmpsb
test
mov
hlt
lds
mov
xor
xor
mov
mov
add
push
xor
jecxz
dec
pop
mov
aam
pop
inc
xchg
in
test
fwait
out
jg
cmp
sti
sub
push
je
cs
fs
and
pop
xchg
xchg
push
push
jmp
push
jmpw
les
pop
adc
mov
mov
and
pop
mov
dec
imul
enter
or
or
add
scas
iret
mov
push
push
rcrl
xchg
inc
lret
xchg
test
iret
xchg
mov
or
les
rcrl
mov
sub
or
imul
dec
int3
pushf
pop
sub
movsl
int3
imul
mov
popf
or
and
pop
xlat
jle
js
in
icebp
ficomps
cmc
cmp
fiaddl
test
push
xor
sarl
psubusw
cmp
add
push
adc
mov
xchg
mov
test
ret
inc
icebp
icebp
into
popf
inc
sar
fbld
push
sti
pushw
and
js
inc
or
ret
call
stc
add
pop
lock
lahf
js
je
insb
or
pop
insb
dec
adc
mov
xchg
inc
cmp
insl
adc
sub
mull
mov
cmp
daa
fsubrl
clc
aaa
clc
adc
jp
mov
int3
test
je
pop
jmp
adc
fs
or
sub
mov
push
xchg
aas
test
sub
popf
cmp
clc
rcl
push
jmp
mov
or
scas
sub
mov
sbb
int
push
pop
inc
inc
hlt
adc
sti
in
jne
dec
cmc
xchg
mov
icebp
hlt
and
xor
add
inc
in
lea
xor
hlt
gs
pop
xor
mov
rorl
scas
out
scas
mov
mov
jne
push
push
loope
fisttpll
sbb
jg
bound
cld
xchg
fistl
xor
dec
pop
fisubrs
xor
add
outsb
add
lret
nop
int
pop
jns
jmp
push
or
lods
cld
and
dec
pop
ret
dec
or
sub
jo
aad
stc
and
xor
xchg
adc
dec
ret
sub
fdivrp
jns
fnsave
lret
jle
add
nopl
cmp
idivb
rolb
subb
call
daa
dec
in
jge
push
out
jecxz
or
cld
out
out
mov
sbb
sarl
or
mov
shrl
push
shlb
out
std
movsl
sbb
push
mov
ds
adc
mov
sbb
lea
ret
push
adc
gs
cmp
bound
mov
and
pop
mov
inc
push
test
ret
or
xchg
lret
dec
mov
mov
sbb
cli
inc
test
mov
cltd
aas
mov
sub
scas
out
hlt
fnsave
adc
aad
dec
jge
mov
xchg
inc
dec
clc
dec
push
lret
jge
stc
add
stc
cs
jbe
cmpsl
pusha
mov
adc
add
xchg
fs
pusha
lock
test
pop
arpl
mov
inc
pushf
xor
mov
adc
jge
insl
xchg
movsl
std
xchg
jno
jecxz
pop
movsb
jo
add
lret
sbb
test
dec
mov
imul
jmp
sub
cmpsb
lahf
cld
out
jae
xchg
nop
sbb
or
push
aad
jmp
pop
fisttpll
repnz
outsl
pop
mov
flds
jle
mov
pop
popf
jmp
pop
ret
mov
test
xor
adc
push
pop
fstl
xor
mov
adc
test
call
pop
popf
xor
cltd
dec
sub
jp
pop
rcrb
hlt
adc
sub
repz
pop
push
cmp
or
sbb
mov
out
cwtl
inc
es
mov
mov
mov
dec
pop
out
cltd
push
lea
lock
imul
bnd
insl
jl
aad
out
lods
xchg
xchg
sub
mov
jbe
xchg
imul
pop
sbb
sbb
xor
jmp
cmp
sbb
jbe
ss
adc
hlt
inc
pop
xchg
jnp
test
inc
sub
dec
push
mov
hlt
repnz
push
fcoml
push
inc
test
inc
stos
fisttpl
sub
push
dec
mov
jne
adcb
nop
in
pop
inc
sub
cmp
add
push
loop
inc
and
ret
push
ret
sbb
arpl
insb
icebp
fs
in
lock
ret
std
enter
lock
cli
pop
push
imul
pushf
aam
push
les
mov
jmp
sbb
std
fstl
xor
fadds
popf
mov
mov
jmp
jg
sub
sbb
test
xchg
mov
inc
insb
pushfw
jg
test
pop
sbb
mov
jae
or
or
lods
push
ret
xchg
fildll
icebp
clc
repnz
dec
out
xchg
cmp
and
arpl
xor
shll
stos
out
xlat
mov
pop
lret
stc
out
xchg
add
inc
shlb
aam
out
push
mov
mov
add
xor
adc
mov
mov
rcrb
jecxz
push
rorl
pop
xor
sub
lods
pop
inc
lea
mov
cli
pop
add
and
xor
adc
dec
out
push
adc
or
adc
jge
mov
xchg
cmp
lock
mov
push
ljmp
or
mov
inc
rol
pusha
mov
dec
std
dec
cld
jae
sub
stos
or
jge
int
mov
aam
cmp
adc
add
ss
aas
stos
jl
in
stos
cld
pushl
jmp
mov
mov
xchg
outsb
xchg
or
test
sub
xchg
push
adc
loopne
cmp
pop
inc
into
cld
push
jp
mov
leave
xchg
pop
xor
sbb
sbb
xor
push
fs
xor
cmp
cmpsl
imul
aas
pop
popa
adcb
outsb
xadd
sub
and
cmp
pusha
das
stos
fiadds
add
pop
jae
sbb
mov
out
cmpsb
es
mov
sbb
shrb
fdivs
pop
std
inc
mov
sbb
and
mov
rcrl
xchg
jbe
push
and
test
scas
adc
ss
sti
xor
repz
out
movsl
jge
mull
add
xlat
das
pcmpgtd
imul
ret
mov
pop
aas
inc
push
popa
movsl
fs
mov
les
roll
dec
es
idiv
sub
jmp
adc
sub
cli
pop
inc
pop
mov
cs
sub
mov
mov
cld
imul
jnp
push
decb
xchg
mov
xchg
ss
pop
filds
pop
lods
dec
add
jmp
mov
outsb
mov
xor
repz
and
dec
dec
xchg
mov
idivl
or
sub
in
frstor
adc
xchg
popf
sti
gs
adc
xor
jbe
subb
hlt
sub
movsb
push
push
push
xchg
pmuludq
cwtl
and
mov
fwait
idiv
cwtl
mov
movsl
mov
inc
push
push
adc
pop
mov
lret
sbb
or
mov
cmc
lahf
fbstp
sbb
mov
filds
fcmovnu
sub
std
mov
push
cwtl
dec
push
pushf
sbb
xor
mov
pop
mov
pusha
clc
adc
add
mov
out
loop
mov
bound
mov
rcrl
fadds
pop
aas
and
test
dec
fsubrs
sbb
push
repnz
hlt
popa
fadd
inc
mov
xchg
cs
xor
adc
out
mov
icebp
mov
out
mov
xor
add
leave
xchg
inc
cmc
bound
les
mov
xchg
pop
incb
mov
pop
cmp
fidivrs
or
mov
aas
ja
repnz
push
add
xchg
movsb
stos
popa
gs
xor
push
outsb
mov
fcompl
lock
cmp
ffree
pop
es
jbe
cmp
mov
dec
das
js
cmp
fdivrl
mov
aaa
lock
push
orl
imull
adc
and
outsb
ret
aam
xchg
rclb
insl
adc
mov
lret
push
nop
int
ljmp
jle
pop
scas
call
aaa
and
call
ret
jg
push
jl
push
xchg
outsb
into
mov
in
jnp
or
sar
fsubs
push
mov
dec
jbe
cmpsb
xlat
mov
mov
notb
aas
xchg
repz
imul
adc
inc
xor
jo
dec
and
inc
roll
lea
adc
and
aaa
test
lret
pusha
notb
pop
pop
sbb
scas
jns
out
fwait
pop
mov
std
xchg
add
dec
xor
in
cmc
pop
xorl
fisttps
sub
jp
fwait
repnz
popa
xorb
sbb
xchg
mov
sbb
mov
scas
push
mov
jp
sbb
scas
jecxz
sbb
push
mov
sbb
lcall
adc
lret
clc
pop
std
lahf
mov
std
into
sbb
xchg
orl
pop
xor
or
mov
ss
mov
pop
mov
inc
int3
imul
shl
sbb
mov
dec
stos
mov
inc
cltd
jecxz
cmp
sti
add
cld
stos
mov
ja
dec
push
insb
in
jmp
shrb
aam
imul
addr16
sbb
arpl
push
cmp
dec
cmp
jnp
jg
fisubrl
jl
insb
int3
mov
sbb
sbb
sbb
mov
mov
pop
jne
and
xchg
movsb
cmp
xchg
push
shl
aad
stos
popf
xchg
mov
orl
dec
mov
movsl
xor
and
xchg
add
dec
add
stos
push
stc
in
jo
mov
clc
pop
aaa
push
in
push
mov
push
mov
xor
in
jge
push
scas
or
cmp
mov
out
imul
or
inc
cwtl
xor
inc
xchg
fmull
mov
stc
lret
lock
xor
rcr
or
cmp
and
ror
and
ret
out
aam
pop
add
in
shl
cmp
mov
adc
inc
pop
sbb
iret
scas
inc
std
xchg
in
int
in
mov
test
clc
dec
pop
push
int3
push
and
mov
int3
lret
mov
jmp
fisubs
xchg
push
std
pushf
and
rclb
aas
mov
test
or
mov
in
sub
inc
mov
cwtl
repz
lahf
insb
xchg
fisubs
stos
inc
fistpll
out
xchg
cli
pop
lods
cmpsb
lods
jg
or
ret
test
pop
cmc
std
addr16
jnp
addl
data16
stos
dec
push
ljmp
add
inc
inc
pop
sbb
sub
sahf
and
inc
inc
mov
jae
mov
xchg
push
popa
mov
dec
dec
mov
sti
and
inc
inc
sbb
mov
shlb
mov
lds
sub
mov
add
sbb
add
dec
cmpsl
xor
bound
int
imul
sub
inc
mov
dec
jg
dec
jl
mov
jae
rcrl
dec
stos
pop
push
mov
dec
and
int3
test
jne
loop
repnz
sbb
loop
inc
ja
xor
popa
test
add
pop
les
sbb
das
fisttpl
faddl
xor
ja
jb
out
lret
push
cmp
xor
cmp
mov
xchg
pop
out
xchg
pop
fmull
lahf
out
sti
inc
fstpl
push
inc
movsb
pusha
std
xor
js
sub
je
and
pusha
or
movsb
jae
in
fadd
inc
mov
xor
leave
push
pop
jo
inc
imul
icebp
ror
int3
add
cmp
scas
ret
jmp
insl
js
jns
ss
lcall
adc
xor
mov
in
adcb
sub
push
loop
popf
pop
and
mov
mov
mov
mov
push
loope
or
cmc
cmp
push
jmp
shlb
inc
xchg
sub
call
outsb
out
insl
aam
lods
imul
xor
xlat
mov
inc
fadds
cli
js
ret
stos
and
mov
mov
repz
push
or
mov
je
lods
xchg
addr16
or
sub
mov
push
xorb
cmpb
jp
pushf
mulb
add
pop
loope
shrl
mov
enter
inc
xchg
sub
dec
xor
out
xchg
push
cmpsl
adc
popf
mov
mov
int3
call
mov
push
mov
frstor
xchg
popa
mov
jbe
outsb
sbb
nop
pop
ret
jge
and
popf
push
cmc
flds
in
ret
mov
lahf
push
ret
nop
jns
mov
or
push
xchg
jmp
mov
outsb
pop
idivb
sbb
or
xchg
pop
sbb
pop
and
cmp
add
fs
jecxz
daa
aas
addr16
sub
pushf
lods
lock
jb
xchg
les
lds
add
fstpl
add
mov
cmc
inc
loop
sahf
jl
lds
in
pop
fwait
das
repz
ss
hlt
mov
enter
in
arpl
mov
std
test
inc
test
in
movsl
inc
push
test
dec
aad
movsl
mov
jl
lret
daa
lds
dec
ss
jp
mov
and
out
sub
aad
test
mov
scas
sbb
popa
add
sub
fisubs
mov
lea
add
addl
mov
push
mov
mov
pop
pop
sahf
stos
aaa
je
ror
add
lret
mov
jb
inc
decb
xor
sub
test
mov
adc
rclb
pop
fwait
jg
dec
dec
xor
adc
stc
rorb
sbbb
jmp
inc
add
jp
pop
mov
or
xchg
or
test
lret
jae
push
jns
push
add
jae
or
movsb
push
jae
sub
int3
leave
sbb
test
enter
js
mov
xor
push
jmp
lock
addr16
stc
pop
mov
adc
fisubrs
enter
mov
sub
rolb
clc
out
jp
sti
jmp
fldcw
lods
fcoms
in
dec
dec
sahf
out
push
push
adc
inc
out
xchg
jp
jge
fisubrs
pop
sbb
or
cwtl
push
sub
test
dec
lods
and
mov
mov
push
add
sbb
mov
inc
sbb
jbe
mov
sub
and
sbb
stos
and
mov
popf
loopne
and
sbb
cmp
push
stos
lock
repnz
jne
jp
icebp
stos
mov
pop
push
jecxz
shl
push
and
or
mov
cld
jp
movsl
lods
and
or
test
movsb
mov
mov
outsb
fistps
sub
sbb
dec
pop
ja
sar
xor
mov
bound
mov
cmp
xchg
nop
push
dec
dec
and
pop
divl
or
mov
xchg
sbb
mov
dec
xor
insb
jno
test
popf
push
stc
rclb
pop
or
add
nop
int
xlat
and
mov
sbb
mov
xchg
inc
add
je
xchg
aad
lret
cmp
jo
or
xor
xor
pop
ss
xchg
cmp
dec
andl
bound
adc
lret
sti
cld
iret
out
sahf
daa
scas
inc
ficoml
leave
addb
inc
mov
ffreep
out
sbb
jmp
xor
or
mov
push
movsb
fisubrl
cld
shl
or
dec
in
mov
mov
cmp
mov
mov
sub
pop
inc
and
out
hlt
les
push
sbb
out
cmp
xor
jno
sbb
scas
jmp
push
rcr
test
or
cli
rclb
push
push
ljmp
je
and
imul
fnsave
lahf
in
add
or
pop
sbb
pushf
popf
movsl
rcrl
and
ss
mov
movb
mov
int3
adc
pop
adc
adc
or
cld
fisttpl
clc
jl
movsb
xchg
add
dec
movsl
ss
je
sbb
push
outsl
pusha
xchg
mov
fwait
sbb
mov
test
mov
jmp
es
sub
fcoml
cmp
lret
mov
sti
sub
outsl
push
lret
adc
loopne
inc
or
insl
repnz
test
fs
out
jmp
and
xchg
enter
jae
idivl
adc
repz
lock
cltd
mov
dec
lcall
or
xchg
dec
sarb
xor
pop
test
dec
pop
es
jp
push
xchg
scas
lods
push
jge
dec
sub
cmp
xchg
or
pop
outsl
pushf
adcl
test
fisubrl
mov
pop
pop
lret
and
insb
jecxz
xchg
push
pop
fst
adc
lret
pop
adcl
sbb
loopne
ret
push
filds
jle
cmp
xor
daa
cmpl
fistpll
and
sahf
xor
inc
inc
repnz
mov
pop
pop
scas
push
mov
pop
loopne
push
sub
xor
rcrl
or
loop
aam
aam
pop
or
or
pop
cmp
sub
cmp
pop
xor
imul
mov
jbe
push
add
mov
insl
pusha
imul
inc
stos
roll
xor
inc
mov
loop
nop
aaa
dec
inc
cli
loop
sbb
mov
iret
push
pop
pop
jnp
sarb
inc
mov
xchg
movsl
xchg
in
xchg
dec
and
iret
mov
pusha
int3
cmp
pop
sbb
jbe
paddb
or
xchg
xor
rcll
jl
mov
out
or
fisubrl
cmp
xor
ljmp
mov
ss
das
push
shlb
add
mull
mov
pop
inc
cld
fisttpl
cmp
cmp
insb
mov
fdivr
mov
jne
push
cmp
push
jmp
dec
packuswb
fwait
rcl
mov
cmpb
dec
rclb
enter
jp
inc
pushl
mov
gs
inc
sbb
xor
cs
mov
pop
add
adc
mov
mov
sub
xor
xchg
pop
mov
mov
xchg
test
push
add
adc
xor
xor
lods
test
in
bound
xor
jnp
mov
adc
ljmp
stos
insl
cmp
popf
sbb
test
mov
movsb
into
sbb
sbb
dec
add
data16
or
out
jmp
mov
pop
out
outsb
sbb
sub
sub
push
add
decb
mov
loop
xor
or
in
or
mov
in
loope
stc
xor
int3
test
lcall
and
clc
push
mov
mov
rclb
cmp
int3
int
inc
shl
lret
cmpsl
mov
movsl
mov
and
mov
dec
and
shrl
cmp
jns
push
test
cli
mov
fildl
inc
aad
ret
dec
pop
icebp
xchg
loop
push
jmp
dec
cmp
xchg
push
pop
je
push
gs
cmpsl
and
mov
xchg
inc
imul
cltd
sub
fsts
or
rolb
into
outsl
lcall
mov
mov
out
call
dec
adc
and
jl
add
test
push
mov
fstps
xor
fldl
sti
mov
xchg
mov
andb
jne
mov
popf
sbbl
popa
loop
shrl
and
cmp
call
push
inc
cmp
cmpl
movsl
scas
push
xchg
xchg
jb
pushf
pop
in
lret
or
nop
dec
and
fisubrs
sbbl
push
std
ret
push
pop
lds
hlt
cmp
aaa
mov
dec
outsb
mov
testb
inc
enter
add
jbe
nop
and
cmp
popa
outsl
xor
mov
xchg
cli
fnsave
and
pop
out
push
push
or
xor
add
sbb
mov
cmpsb
sbb
ret
sbb
imul
pushf
jle
push
sbb
xchg
inc
maxps
pop
repz
mov
adcl
pop
out
push
clc
or
add
incl
adc
outsl
lea
add
pop
imul
or
cmp
adc
int3
sub
sub
xchg
jp
scas
push
mov
in
fcompl
les
or
mov
xchg
loope
lret
andl
ret
adc
and
push
mov
movl
aad
rcrb
sub
inc
jnp
pop
negb
xchg
cmpsl
rclb
adc
jmp
cmp
mov
ja
prefetch
jnp
xor
test
inc
ret
ljmp
xlat
mov
fldcw
insl
cmpsb
mov
dec
js
ja
outsl
in
push
pop
xchg
cmp
arpl
outsl
push
enter
hlt
int
repz
cmpsb
push
push
sub
dec
sub
mov
mov
mov
and
xor
push
fisubrs
stos
or
dec
add
iret
jl
pushf
jb
and
cld
in
push
nop
lahf
add
bound
mov
or
push
sbb
or
sub
push
cmp
dec
jle
scas
cmc
sub
mov
out
pop
cli
pop
adc
movsb
inc
fwait
push
ret
sub
or
push
lcall
pop
ret
jnp
stc
insb
mov
in
xor
fldt
xchg
push
push
xor
push
rorb
popf
sub
out
mov
ret
daa
repz
sub
dec
dec
mov
pusha
sbb
cmpsl
add
ficompl
or
mov
lea
bound
mov
jnp
fsubr
ret
inc
icebp
mov
mov
xor
inc
loope
aaa
push
sbb
aam
dec
mov
jg
outsb
sub
mov
hlt
xchg
je
inc
pop
mov
jb
dec
pop
add
inc
jne
fst
or
adc
cmp
sub
scas
mov
pop
loope
jmp
jbe
inc
dec
insb
lods
inc
adc
pop
xchg
mov
adc
sub
mov
popa
xor
cmp
aas
add
pusha
fimull
ret
sub
add
sbb
lret
dec
ret
cwtl
xor
fdiv
ret
loopne
sub
pop
clc
mov
fcoms
dec
mov
daa
lcall
xchg
lret
lods
aam
inc
int3
fcmove
scas
cmpsb
xchg
shl
mov
pushf
pop
data16
sbb
imulb
fs
sbb
stos
scas
cwtl
mov
mov
jae
imul
or
push
adc
std
out
add
clc
fadds
scas
inc
ss
js
push
jbe
mov
jp
pusha
cmp
ljmp
jmp
lahf
fs
ret
in
test
and
jo
pop
sub
popf
sahf
push
cmc
adc
jg
push
sbb
push
in
arpl
dec
cmc
ss
hlt
cmpsl
jns
dec
xchg
mov
enter
mov
pop
ja
ljmp
xor
sbb
xchg
jp
xor
in
cltd
cs
out
jmp
mov
and
int
das
aam
bound
pop
mov
push
scas
mov
xchg
xchg
and
dec
adc
je
push
out
push
aam
lcall
cmp
lds
jl
jmp
shrl
cli
dec
and
xchg
inc
shlb
cmp
out
adc
pop
rcl
mov
cmp
xorb
jp
divb
inc
sbb
jl
jno
xor
and
push
pop
icebp
mov
jle
gs
push
icebp
movsb
pop
xchg
je
in
cld
int3
or
add
mov
out
xchg
mov
jecxz
mov
scas
mov
inc
xor
mov
mov
jb
xchg
inc
push
mov
arpl
jae
xor
xlat
mov
rorb
in
and
call
xchg
cltd
cmpsl
jb
and
scas
xchg
dec
add
xor
dec
leave
scas
out
icebp
sbb
inc
cli
jg
test
push
jno
lods
ret
ljmp
lret
push
in
or
mov
adc
and
das
pop
or
in
xor
xor
xchg
scas
dec
and
mov
test
sahf
aas
cltd
xor
icebp
push
inc
inc
nop
xor
loope
js
cltd
aad
es
es
push
xor
jecxz
inc
xchg
arpl
aad
ret
stos
ret
dec
push
xchg
in
loope
mov
cmp
pop
outsl
outsb
dec
mov
push
or
add
mov
push
out
mov
ss
push
insl
stos
imul
cmp
lcall
mov
repnz
stc
data16
insb
lds
jbe
push
stc
cmc
fwait
jnp
hlt
add
mov
lret
jecxz
and
lds
cmp
add
push
scas
mov
addr16
or
lea
xchg
adc
dec
mov
push
aaa
jb
lcall
inc
pop
call
pop
adc
or
das
lods
sub
mov
or
jb
int
fdivs
repz
ret
cmp
cwtl
xor
pop
nop
shll
xchg
push
xor
inc
xchg
adc
movsl
in
in
mov
sub
pop
sbb
push
xorb
jmp
enter
dec
push
lret
loop
xor
js
mov
jp
jnp
pop
cmc
int
addr16
cwtl
jae
push
pop
sub
push
and
lret
sbb
sub
jle
lods
cwtl
adc
addr16
sbb
xchg
push
pop
xchg
inc
jecxz
sub
out
inc
ja
movsb
jge
mov
data16
mov
jp
repz
ljmp
xchg
push
outsl
sub
mov
mov
in
adc
push
xorl
cwtl
and
cmpsb
sub
push
popl
lods
mov
cmpb
jl
jle
or
daa
ds
inc
out
out
add
repnz
dec
push
dec
dec
dec
mov
xor
cwtl
cmp
lock
sahf
xor
enter
pop
adc
movsb
repnz
subb
nop
push
cmp
arpl
jge
xlat
scas
mov
repz
cltd
jecxz
fmulp
add
clc
pop
or
mov
xchg
push
lea
divb
add
inc
mov
dec
arpl
or
cmpsl
icebp
data16
pusha
inc
stos
jecxz
sbbb
mov
into
inc
or
cmp
or
dec
and
mov
loope
mov
mov
pop
pusha
pop
pop
popf
leave
pop
lret
inc
jbe
push
jg
cmp
xlat
mov
aam
fimull
mov
mov
xchg
aad
pop
das
or
pop
push
jb
mov
in
inc
cmpsl
jo
popa
jbe
jle
add
leave
mov
test
xor
jns
movsl
jo
insb
adc
mov
mov
and
adc
cmp
or
js
pop
orl
clc
sub
jbe
fcomps
mov
addr16
xor
loope
test
push
mov
ljmp
lods
jnp
scas
mov
rorb
xorb
sub
shrb
pop
xchg
iret
repnz
test
push
out
int
add
add
jo
ret
cmp
mov
cmpsb
das
mov
sub
fwait
xchg
mov
xor
mov
mov
int3
loop
or
lods
fdivl
outsb
rcll
sbb
mov
adc
xor
outsl
push
pop
sbb
push
jl
ret
ret
xor
xchg
repnz
inc
or
push
cmp
dec
aad
xchg
pop
add
mov
out
mov
test
push
pop
dec
mov
pop
in
insl
aaa
repnz
inc
add
push
repz
cmp
mov
rolb
push
sarl
pusha
sahf
pop
pop
ret
lea
push
rorb
lods
stc
sbb
fs
movsb
stos
xlat
push
mov
aam
aad
sbb
mov
jne
in
cmp
xchg
daa
sti
mov
xor
inc
imul
insl
hlt
loop
movsl
gs
push
or
jns
outsb
in
add
fidivrs
jmp
push
dec
mov
pop
call
xchg
xor
flds
int
lahf
mov
icebp
je
inc
fisubrs
fimuls
mov
enter
dec
jns
ds
dec
les
mov
pop
sahf
outsl
cs
into
xchg
push
jge
cmp
nop
lds
push
pushf
ss
mov
ja
jno
adc
insb
mov
out
lahf
enter
mov
mov
ffreep
rcll
out
xchg
cli
push
or
push
aam
mov
pop
mov
cmp
or
jl
rcrb
imul
in
mov
out
push
das
push
dec
into
fisubrl
add
mov
pop
fidivrs
sbb
subb
ljmp
pop
lods
fdivl
ret
cmpl
aaa
andb
xor
add
js
push
mov
cli
dec
or
mov
add
scas
loopne
ret
cmp
cmpb
push
or
push
rol
push
shll
mov
xchg
fstl
or
fidivs
out
cmpsl
dec
stc
and
imul
icebp
jle
ja
push
fiadds
imul
cmc
loope
bound
pop
push
idivl
das
push
sub
and
or
jl
fnstsw
jb
in
push
jno
push
loope
pop
mov
loope
es
push
xor
movsl
jle
ss
push
imul
mov
add
adc
and
inc
gs
and
xchg
leave
dec
inc
sbb
xchg
sbb
jmp
lret
jnp
sub
add
inc
pop
pop
imul
ret
dec
pop
mov
into
data16
jl
stos
imul
xchg
inc
lahf
out
push
loopne
rcrl
ds
aad
or
and
mov
inc
fstl
popa
aam
jb
iret
mov
xor
push
cwtl
sahf
jo
sbb
add
scas
mov
lahf
shll
dec
fwait
in
jb
iret
mov
or
jmp
cmpsb
repnz
dec
adc
sbb
lds
aad
xor
jbe
out
nop
test
mov
fdivl
adc
push
clc
mov
add
add
fwait
pusha
jg
xchg
sub
std
int3
imul
in
inc
or
ret
imul
cmp
outsl
bswap
mov
mull
xor
mov
jnp
jle
testl
cmp
sbb
ljmp
cmc
mov
test
cmp
push
mov
xchg
mov
int3
mov
jno
repz
in
jl
dec
pop
stos
inc
add
aas
cmp
sarl
loopne,pt
lret
ljmp
pop
vmovupd
ret
ds
shrl
outsl
ljmp
data16
mov
dec
add
cmp
and
out
cmc
lods
sub
lcall
adc
push
in
popf
adc
sub
jle
cmp
test
popf
push
pusha
pop
icebp
es
mov
int3
idivl
cmp
ret
hlt
shll
mov
subb
jmp
xorl
inc
sbb
repz
leave
and
mov
mov
mov
insl
push
out
push
sbbb
mov
mov
push
jb
fwait
andb
jle
decl
xchg
arpl
sbb
test
std
push
xor
cwtl
adc
leave
enter
es
insl
cmp
jle,pt
addl
in
adc
adc
push
outsl
cltd
ret
sub
adc
cmpsb
xchg
pop
pushf
pop
popf
ss
jg
lea
and
jae
sub
lds
pop
and
stos
or
pusha
jle
jae
push
and
mov
mov
mov
adc
lods
aaa
shrb
or
and
jno
jnp
ljmp
clc
jbe
sahf
sti
xchg
mov
insl
jl
out
xchg
inc
mov
or
mov
jae
rcrl
in
lea
fistpll
loop
mov
xchg
mov
shrb
add
jmp
mov
cmp
mov
cmpsl
mov
and
loopne
pop
mov
inc
pusha
popa
aaa
jle
and
sti
pop
imul
leave
fcomp
cmp
mov
mov
out
nop
gs
testl
and
ficoms
jns
add
test
in
jae
lcall
cld
addr16
mov
mov
sub
sub
in
xor
int
jg
dec
lods
jb
xlat
mov
cmp
mov
adc
pop
loope
stc
push
lret
insl
shr
pop
and
or
aaa
out
stos
aam
arpl
loope
pushf
sbb
mov
mov
lahf
ret
pop
push
sarl
jl
jo
inc
push
ftst
mov
js
cmp
imul
dec
mov
enter
adc
mov
dec
pop
mov
pusha
jecxz
pop
and
add
out
nop
sbb
inc
and
iret
ja
std
cmc
in
inc
js
lock
ljmp
jb
outsl
jnp
and
repz
lret
mov
mov
movsl
push
leave
outsb
test
lcall
dec
push
cmpsb
sarb
sub
dec
scas
jns
mov
arpl
adc
aaa
dec
sub
jne
xor
outsl
fwait
stos
out
mov
jo
add
fcmovne
aad
inc
dec
in
cltd
mov
or
or
adc
arpl
and
cmp
les
pop
sub
cld
cmc
push
cltd
xor
cmp
loope
pop
adc
or
xchg
xor
cwtl
test
shll
pop
testb
add
inc
and
or
push
cmp
push
jge
sub
div
roll
xchg
cmpb
mov
std
mov
mov
inc
mov
cmc
insb
or
push
xor
in
leave
push
adc
mov
adc
xor
adcb
fwait
mov
push
lret
not
shll
lcall
jnp
lahf
mov
fs
or
mov
xor
rcll
rorl
rcrb
xlat
loope
into
idiv
mov
packuswb
dec
stc
fs
xchg
xchg
xor
fists
jg
inc
lahf
ret
cltd
je
in
mov
mov
ftst
push
loopne
fidivrs
inc
aaa
fstpt
adc
mov
adc
shll
insl
mov
fsubrp
pusha
clc
inc
rolb
sub
in
mov
outsl
sbb
dec
mov
insb
hlt
pop
xchg
shrl
sub
dec
clc
test
sti
ret
push
lret
pusha
xchg
push
pop
popa
mov
jo
loopne
rclb
inc
mov
mov
cmc
cli
loopne
aaa
outsb
and
sub
imul
xchg
push
push
loopne
outsb
pop
divl
into
and
mov
pop
mov
and
in
mov
pop
mov
inc
adcb
mov
jnp
jnp
mov
sti
mov
out
or
pushf
fistpl
fs
cmp
data16
push
sbb
ret
vxorps
cwtl
imul
pop
inc
lods
arpl
dec
sbb
mov
je,pt
out
mov
clc
inc
sbb
jp
fwait
inc
adc
insl
pop
sub
dec
inc
inc
push
push
cmp
popa
or
pop
mov
inc
mov
and
adc
adc
bound
clts
test
or
enter
andl
cmp
mov
xor
adc
push
fwait
mov
ljmp
insl
movsl
add
add
xor
push
or
cmp
mov
add
imul
out
movsb
ds
add
je
das
enter
mov
push
subl
lret
daa
cmp
rcl
cld
inc
and
out
or
fidivrs
sbb
sub
add
bound
pop
in
or
xor
push
add
add
sub
repnz
int3
or
mov
pop
mov
pusha
ljmp
dec
jp
sub
rorl
shlb
lret
mov
inc
cmpsl
fsubrs
mov
jnp
daa
clc
xchg
popa
mov
adc
push
fcmovnu
mov
es
pop
mov
roll
push
and
jne
enter
xchg
lods
imul
aam
fs
or
and
adc
testl
in
cmc
xchg
xor
dec
cmp
sub
stc
loopne
out
sub
sbb
inc
or
xchg
shlb
icebp
jle
imul
pop
mov
fisubrl
stos
scas
dec
mov
popa
pop
mov
adc
mov
sbb
addr16
je
aam
jo
shll
aad
jl
movl
repnz
push
cli
enterw
aad
jge
lods
int
pusha
mov
mov
mov
xor
call
jo
xchg
add
or
loope
mov
and
adc
mov
arpl
movsl
push
fdiv
pushf
cmp
pop
pusha
mov
outsl
xchg
cwtl
test
rolb
pop
imul
ret
inc
mov
imul
inc
sub
stos
test
cld
jbe
jl
add
cmp
pop
or
cmpsl
adc
inc
ljmp
pop
jecxz
lret
lock
fs
leave
mov
jne
add
mov
out
dec
xchg
cwtl
jne
leave
and
pop
lds
push
test
iret
mov
outsb
ffreep
aas
mov
fcmovnb
sbb
sbb
sti
jmp
nop
mov
dec
dec
xchg
ret
push
jle
lods
insb
leave
pop
test
loopne
aad
mov
mov
push
sub
push
push
sbb
and
and
aam
pop
or
iret
sahf
outsb
jae
imulb
xor
pop
bound
push
aas
shlb
fiadds
sbbb
sub
daa
dec
lods
push
jno
in
inc
cmp
dec
mov
adc
xor
adc
int
pop
div
outsb
add
das
pop
adc
loop
lods
cmp
cmpsb
or
sbb
push
jp
and
or
add
xor
ret
popf
add
push
mov
mov
mov
fildll
incb
xchg
mov
xlat
testb
lds
sbb
cmc
imul
cmc
sbb
aas
jnp
mov
pop
sub
ret
insb
add
roll
je
cmp
subb
int3
or
adc
lods
mov
test
in
pop
insb
xchg
jbe
sub
push
adc
int
xchg
pop
jecxz
pop
rorl
sub
sahf
mov
fiadds
je
sub
pop
scas
or
rcrb
icebp
test
das
iret
out
movsl
lds
xlat
mov
stc
shr
out
out
adc
sbb
leave
stc
or
or
dec
cmp
mov
imul
inc
aas
add
ljmp
rcrb
stos
dec
in
test
gs
cmp
test
mov
rclb
gs
shl
nop
add
xorl
inc
cmp
pop
jl
in
push
sti
roll
dec
jbe
add
inc
pop
or
pop
fmulp
lock
mov
dec
test
sub
roll
jno
neg
imul
and
lret
sub
outsl
and
sbb
hlt
int3
jge
adc
je
in
or
cmpsb
add
mov
stos
fdivrp
cli
mov
push
pop
jae
lret
xor
adc
cmp
cltd
and
jne
mov
pop
ret
es
lcall
loopne
and
aas
pusha
push
xchg
pop
aad
push
sahf
imul
popa
push
jl
inc
in
stc
leave
mov
lock
in
fimuls
sub
iret
xor
das
int
mov
mov
loop
addl
dec
in
inc
push
mov
mov
out
and
insb
and
test
addr16
jmp
ja
subb
or
enter
cmp
push
test
sbb
lds
jmp
rorb
cmpsl
sahf
dec
xor
cmc
push
and
xor
adc
popf
enter
jp
test
cmp
mov
push
shr
jns
int3
ds
or
arpl
es
sub
repz
pop
adc
jbe
addr16
subl
in
aaa
sahf
shlb
mov
cli
mov
imul
out
ret
push
add
or
cmp
rcrl
ljmp
cmp
std
arpl
icebp
mov
daa
sub
lock
push
enter
ficoms
mov
nop
jge
xor
xchg
inc
add
xchg
xchg
in
orl
fs
jnp
mov
sbbl
pusha
push
push
mov
push
pop
sbb
pop
aam
das
add
or
adc
mov
leave
stos
icebp
add
xchg
mov
sbb
cmp
int
cwtl
arpl
xor
lret
dec
cmp
je
sbbb
mov
lods
xor
nop
mov
dec
lcall
jg
sub
mov
frstor
mov
mov
pop
gs
repz
xor
inc
fsub
stos
and
xor
loop
ljmp
sar
xchg
lock
lds
push
push
cmp
call
loope
stc
stc
push
fwait
int
daa
adc
repz
xor
pop
sub
daa
lea
jb
pop
xchg
nop
push
pop
adc
xor
dec
mov
iret
gs
add
mov
jbe
sbbl
adc
xchg
test
das
sbb
mov
sti
jno
pusha
dec
repz
stos
cmp
fs
push
out
js
cwtl
mov
sub
dec
imul
cmp
iret
imul
pop
mov
in
popa
aas
mov
mov
movl
cli
enter
insl
testb
pop
cmp
adc
jmp
loop
mov
imul
out
mov
hlt
out
mov
cmpsb
movsl
in
push
add
cmp
jno
jp
sub
adc
or
imul
or
aad
sar
ljmp
fmulp
mov
adc
xor
loopne
xor
sbb
add
or
jb
add
fistpll
inc
cmpsb
cmpsl
mov
daa
cmpsl
pop
lret
or
or
and
jnp
push
xchg
stos
mov
or
jecxz
adc
mov
outsl
loopne
out
aad
pusha
loop
xchg
idiv
xbegin
fstpl
pop
repnz
push
push
test
fiadds
add
add
stc
mov
dec
pop
xchg
ret
int
mov
mov
push
xchg
sbb
xor
insb
push
cmpsl
sub
mov
mov
rclb
ret
inc
imul
push
lahf
or
jb
les
sbb
sub
mov
or
lods
sub
fldl
rcrb
sbb
dec
gs
call
aad
stos
mov
scas
test
clc
mov
ror
loopne
add
mov
in
sub
stos
rclb
cmp
adc
xchg
xor
dec
push
imulb
inc
lret
ds
lock
sbb
fisttps
inc
cmp
mov
adc
adc
xlat
add
test
pop
nop
or
add
es
int3
sbb
push
nop
lret
div
sahf
push
or
aaa
add
jl
push
or
enter
or
add
imul
movsl
add
cmp
pop
ds
inc
xor
and
sub
inc
sbb
inc
sbb
mov
jl
mov
jo
jbe
xor
outsb
dec
sub
inc
ss
bound
push
mov
out
inc
call
xchg
push
inc
fwait
and
in
lea
cwtl
out
sub
sbb
insb
jl
pop
xor
mov
divl
push
xchg
xchg
test
dec
cmpsb
xlat
sti
dec
pxor
outsl
or
pop
adc
add
and
popa
jmp
pop
pop
in
xlat
lods
or
jo
ja
cwtl
repz
outsb
sbb
pushf
lea
out
pop
sbb
xor
jae
pop
fadds
jmp
imulb
jb
loop
cmp
fnsave
push
jns
pushf
or
pop
xchg
aad
fs
push
movsl
cwtl
cmp
or
jb
sub
fisubs
or
insb
pop
icebp
mov
in
negb
inc
aam
add
call
enter
loopne
ja
jge
cmp
test
push
cmpsl
push
pop
div
dec
js
mov
ss
mov
mov
add
push
add
xchg
ret
in
xor
jge
fwait
mov
outsl
cmp
scas
push
std
in
ret
lods
push
push
add
cli
mov
push
leave
fimull
out
mov
cmpsl
mov
mov
mov
mov
push
sub
push
dec
rolb
test
mov
ja
popf
sahf
decb
mov
fnsave
sub
scas
aam
jle
mov
pop
adcb
lods
and
movsb
stos
aaa
daa
test
scas
mov
aaa
test
jecxz
push
pop
test
insb
xchg
call
mov
subl
enter
jge
pusha
xchg
in
sbb
lcall
pop
repz
add
push
cli
mov
cmc
mov
jmp
mov
push
fildl
inc
test
sbb
push
jge
cwtl
fcmovbe
in
pop
push
jne
mov
fcompl
mov
in
cmp
imul
push
inc
movl
movsl
ja
jp
xchg
cli
add
hlt
pop
je
test
loopne
fwait
fst
push
ljmp
adc
hlt
rorb
sahf
sbb
jecxz
cltd
mov
mov
lret
push
push
push
mov
xchg
sbb
iret
fcoms
and
jnp
pushf
jl
mov
sbb
mov
xchg
cld
into
out
in
add
cmpl
pop
ja
mov
lret
cltd
push
cmpb
enter
clc
les
jne
push
and
das
add
or
popa
xor
jae
mov
ret
mov
notb
scas
es
call
cmp
mov
jp
cmp
xchg
mov
cs
push
loopne
cs
imul
or
icebp
in
add
mov
mov
test
jae
and
imul
xchg
cmpsb
add
jne
and
in
cmp
iret
call
testb
pop
cld
xor
push
and
repnz
imul
dec
rcr
jns
nop
notb
insb
sbb
jl
xchg
or
faddp
repz
or
mov
cmpb
push
pop
xchg
sbb
enter
cwtl
add
stos
pop
mov
or
cwtl
or
subb
mov
mov
mov
sub
test
jb
mov
jmp
repz
mov
pop
xor
outsl
pop
hlt
lahf
sbb
int3
scas
popa
jge
call
xchg
adc
dec
test
loopne
flds
pushf
cmpl
sub
into
cld
ret
jo
xor
xchg
into
imul
sub
dec
test
mov
fcomps
jle
test
sub
mov
push
mov
dec
xchg
push
mov
jae
negb
xchg
xor
xor
pop
or
repz
cmp
in
xchg
int
pop
arpl
pop
pop
cmp
pop
shrb
sbb
xchg
mov
fldl
mov
lahf
mov
push
lds
mov
mov
cmp
mov
hlt
mov
ja
bound
pop
in
cli
mov
ds
inc
jae
and
mov
lcall
lods
push
jns
int3
inc
add
xor
jle
mov
cld
and
stos
stos
cmpsl
jo
insb
inc
xchg
cld
inc
push
loope
clc
jmp
mov
fildl
pop
movsl
mov
in
cmp
test
add
aas
add
les
jle
outsb
movsb
jbe
out
movsb
mov
icebp
sub
pop
lcall
xchg
mov
mov
ja
add
push
cmp
adc
shrb
pusha
or
repz
adc
pop
push
fidivs
pop
int
call
jmp
jl
xchg
dec
lahf
sub
mov
push
push
jle
enter
or
repnz
dec
sahf
cmp
popf
push
fwait
lea
insl
daa
test
mov
xlat
jbe
push
or
ss
add
adc
movsb
lcall
into
fs
inc
sbb
cmc
lea
fmull
cmc
fdivs
subl
testl
mov
lock
mov
pushf
idivl
xor
outsb
hlt
decb
les
inc
mov
push
popa
mov
test
pop
mov
shlb
ret
fistps
ds
add
jnp
mov
sub
dec
pop
mov
rep
insl
or
in
cmpsl
pop
jg
jno
test
sub
in
mov
lock
shll
gs
xor
xor
mov
mov
lret
je
cmp
cmp
jo
js
mov
pop
and
inc
push
mov
xor
adcb
pushf
aas
dec
adc
push
push
shr
rcr
and
out
outsl
mov
int3
mov
adc
cmovge
inc
jbe
fwait
mov
dec
ss
sbb
popf
scas
sub
aam
sub
sbbl
jmp
in
jbe
jp
js
and
je
cltd
pop
inc
das
fsubrl
stos
jmp
mov
int3
in
adcb
mov
in
popf
clc
pop
pop
mov
les
xchg
insb
fnstcw
mov
and
ffreep
inc
jg
dec
or
jb
stos
xchg
es
sbb
and
push
jmp
in
dec
frstor
addr16
xchg
mov
aas
bound
and
cli
jae
lock
cwtl
cld
movsb
xchg
negl
fistps
std
cld
fcoms
jns
xchg
scas
dec
testb
flds
and
jg
mov
inc
mov
xchg
lret
ret
mov
cmp
movl
mov
rcll
jmp
jae
fwait
mov
dec
jns
and
inc
xor
xor
lret
popf
rclb
and
push
push
inc
mov
or
cli
cltd
xor
push
insl
xchg
cmpsb
xor
inc
xor
xor
mov
and
cmpsl
pop
jl
fdivrl
loop
pushf
adc
adc
adc
rorb
xor
sub
jb,pn
pop
mov
lret
leave
pmaddwd
js
out
jns
in
movsb
pop
mov
out
adcl
rorb
cmpsb
mov
adc
push
push
into
mov
out
stos
pop
sbb
push
push
je
je
and
scas
and
stos
pop
cmc
inc
pusha
test
int
in
xor
push
push
xor
xchg
mov
jmp
cmp
xchg
jnp
sub
shll
mov
mov
jmp
cmc
mov
sbb
aam
int
mov
mov
fidivrl
insb
int3
ljmp
jns
out
mov
jae
push
or
mov
pusha
mov
and
pushf
fs
stc
push
insb
test
sub
loope
add
mov
jbe
xchg
cli
mov
jl
xchg
jns
daa
enter
mov
rcrl
pushf
mov
mov
and
push
clc
cmp
xchg
enter
popa
mov
mov
push
adc
int3
adc
mov
lcall
sbb
and
xchg
orl
mov
stos
push
xor
fistl
imul
lods
mov
pop
mov
push
out
icebp
pushf
aam
ds
in
adc
fadds
lea
sbb
movsb
xchg
loop
cmp
fimull
je
push
stos
js
push
push
stos
shl
add
adc
mov
test
push
mov
jne
jno
test
repz
lock
add
and
out
cmp
lods
inc
movsb
pop
and
shll
add
sti
repnz
mov
icebp
and
sbb
pop
repz
cmpsl
and
les
loopne
pop
shll
and
or
je
das
push
into
or
test
shl
outsb
imulb
cmp
rcl
xchg
fs
cmp
out
push
jg
aaa
jecxz
ret
sub
pop
dec
insb
icebp
or
or
in
mov
roll
test
aad
fildll
fimull
repnz
into
repz
dec
dec
rcll
test
pop
fbld
bound
pop
jecxz
cmp
and
clc
hlt
xor
sbb
mov
sub
jg
loopne
idivl
cmp
or
cmc
pop
sub
test
sbb
lds
xchg
out
clc
fsub
xchg
xlat
cmp
aam
adc
add
std
clc
add
jae
xchg
stc
rcrb
notl
dec
sarb
pop
pusha
dec
or
mov
push
mov
enter
es
add
mov
xor
fidivl
pop
and
mov
clc
scas
pop
lcall
loop
jns
dec
or
sub
ljmp
sub
in
ja
test
enter
cwtl
dec
mov
pop
add
xor
sub
jg
das
inc
lock
lea
xor
jnp
xor
xchg
fwait
dec
decb
fimuls
lret
ss
xchg
cltd
repnz
jl
push
insl
xor
mov
dec
es
sub
xchg
inc
mov
add
int3
push
mov
jge
mov
cld
adc
mov
stc
pop
loop
in
and
inc
pop
xchg
bound
push
stos
lds
mov
add
loope
jo
sbb
jg
or
push
scas
sub
mov
pop
xchg
sbb
dec
in
insl
je
mov
lret
adc
pop
sbb
mov
mov
sub
mov
bound
push
mov
out
pop
inc
cmp
add
loopne
mov
jo
cmpsb
sub
jge
dec
and
cmpsl
sub
sub
push
rol
movb
dec
or
xchg
mov
dec
push
xor
adc
dec
lcall
nop
jg
arpl
or
or
std
jno
pop
push
rorb
push
aam
xchg
gs
jo
in
sub
xchg
add
mov
jnp
jle
push
in
mov
hlt
cmp
jo
fbld
lods
sub
jecxz
dec
subl
aas
in
mov
negb
jne
lahf
cmpsb
insl
cli
push
adc
jae
and
dec
les
ds
aas
loope
adc
sbb
push
inc
push
outsl
cmc
aas
pinsrw
movsb
daa
loopne
aaa
sub
mov
xor
aad
inc
repnz
call
inc
iret
hlt
loop
adc
mov
xor
jno
mov
xchg
fdivl
inc
std
sbb
inc
lds
loopne
fsubs
xchg
xchg
jecxz
mov
cmpsl
mov
enter
lcall
push
add
adc
add
imul
push
push
push
mov
sub
sbb
cmp
dec
jno
sbb
adc
xlat
xlat
mov
and
movsl
testl
dec
sbb
rcrl
cwtl
in
mov
stc
ss
add
pop
loopne
jb
out
push
xorl
add
or
imul
inc
pop
pusha
lods
int3
xchg
cs
pop
cltd
fstps
adc
arpl
xchg
pushf
loopne
mov
dec
xchg
inc
mov
pop
out
cmp
mov
and
scas
nop
cld
or
fcomp
test
cmp
jbe
jbe
je
stos
mov
xchg
mov
or
cmpsl
dec
loop
sbb
aad
mov
push
pusha
ds
lahf
adc
stc
arpl
inc
sbb
xchg
cltd
mov
je
sarl
loopne
mov
sbbl
push
test
stc
daa
push
push
imul
cs
std
enter
out
cmpsb
mov
test
or
adc
adc
cld
into
inc
je
sbb
fadds
cmp
and
push
pop
pop
loop
jae
push
adc
cmpsl
push
out
or
std
adc
imul
enter
xchg
cld
add
sub
aad
cmpsl
out
fincstp
jmp
ljmp
popa
je
jo
sub
fcompl
mov
sub
or
push
jnp
call
outsl
pop
icebp
xchg
cmp
std
pop
mov
je
sbb
add
sub
das
test
and
mov
out
mov
pop
cltd
fcom
in
cmp
inc
fldenv
xchg
fbstp
out
cmpsb
or
push
aaa
cmp
ja
dec
cmpsl
mov
sar
sub
nop
or
sub
adc
cli
add
fcmovnu
outsl
or
mov
pop
scas
out
or
lret
cli
roll
cs
or
mov
push
dec
mov
jecxz
je
in
aaa
cmpsl
cmpsb
mov
pushf
dec
ds
or
cmp
inc
fildl
add
push
jno
mov
pop
xchg
aad
pop
aas
mov
push
notl
and
push
pop
addr16
testb
push
mov
or
out
sub
sti
jns
lea
ja
gs
pop
rolb
clc
sub
adc
gs
cmpsb
jae
lock
add
sub
hlt
push
add
dec
fdivs
push
fucom
jns
jmp
mov
aaa
xchg
mov
jl
leave
xchg
jmp
fistl
and
sub
sarb
dec
rolb
insl
ljmp
mov
shrb
sbb
sbb
or
dec
out
mov
mov
outsl
ljmp
xor
push
sbb
jle
pop
lock
add
aad
in
ljmp
xor
cwtl
or
test
pop
out
pop
aam
addr16
mov
aas
pop
cmc
das
cmp
pop
jno
stos
dec
cmpsl
lahf
stc
xlat
pop
jle
xchg
cmp
pop
out
scas
mov
ss
mov
pop
es
int3
stos
aaa
dec
cli
adc
pop
into
jno
mov
aad
stos
dec
popa
mov
rcl
adc
cmp
sub
jns
xchg
cld
ja
iret
mov
cmpsb
adc
pop
lds
sbb
jp
insl
sub
fwait
ret
test
mov
mov
fcomip
xor
testb
ss
popa
xchg
jp
sti
test
cmp
xchg
stos
jo
mov
mov
mov
fs
cmp
and
inc
std
jle
cwtl
sub
adcl
lret
jge
rcl
jle
ja
ret
fmuls
adc
jns
fadd
jnp
xchg
loopne
jg
hlt
push
jno
pop
add
mov
jo
add
push
jecxz
stos
outsl
cmpb
adc
mov
loopne
mov
adc
call
jle
jp
inc
sbb
mov
inc
push
adc
mulb
cmp
out
iret
fsubrs
push
movaps
nop
test
out
and
dec
dec
lcall
jp
lods
insb
imul
push
clc
cs
jne
das
add
negl
ss
dec
pop
pop
icebp
das
inc
or
add
repnz
loop
mov
and
xlat
movsl
gs
jne
cs
fcoms
inc
in
cltd
insl
pop
jg
mov
leave
outsl
decb
lahf
fisubrs
idiv
movsl
xorl
push
arpl
shll
adc
loop
adc
pushf
mov
xchg
mov
hlt
push
je
outsb
or
and
or
dec
sbb
shlb
cltd
jbe
mov
cmp
enter
sbb
dec
cmp
bound
xchg
pop
xchg
and
ds
jnp
cmp
pop
mov
jmp
cs
mov
in
push
dec
sub
loop
sbb
inc
mov
inc
pusha
or
pushl
std
pop
call
outsl
dec
mov
movsw
push
cld
cmp
loopne
lods
in
daa
or
gs
xor
ret
mov
sub
dec
sti
stos
jbe
inc
cmp
arpl
xlat
loop
rcl
outsl
cmp
jbe
test
mov
dec
sub
pop
repz
insl
mov
and
push
dec
xchg
xor
pop
fdivl
mov
xchg
cmp
cmp
popf
mov
loop
nop
adc
xor
jge
jmp
scas
decb
test
push
bound
cli
repz
lcall
jmp
loop
pop
jle
pop
pop
cld
pop
push
testb
stos
stos
rcrb
jmp
dec
scas
lret
js
ret
ja
pop
mov
je
jg
add
dec
in
push
and
pop
mov
daa
aas
sar
popf
mov
js
outsb
rcr
mov
jo
mov
xor
xor
iret
push
insb
jge
bound
jo
mov
push
jb
scas
mov
lock
ds
test
xchg
xor
xchg
stc
cmpsb
mov
and
jmp
push
mov
hlt
mulb
sub
addr16
xor
push
aam
ss
sahf
sbb
loop
adc
dec
pop
sub
call
int3
loope
daa
pop
mov
cmp
mov
dec
sbb
or
mov
adc
popf
inc
sub
dec
jecxz
fstps
jnp
add
sarb
cli
or
les
ret
lea
mov
inc
push
xchg
fdivrs
and
xor
insl
push
nop
mull
leave
dec
cmp
fwait
push
fs
int3
fiaddl
mov
es
push
cs
lahf
std
loope
xchg
xor
adc
dec
pop
sub
inc
aad
repz
add
pop
sub
or
dec
and
sbb
iret
mov
pusha
icebp
jl
sarl
pop
roll
pop
mov
dec
in
loopne
leave
add
hlt
jbe
fistps
sbb
fwait
xchg
jo
notb
mov
iret
sbb
test
outsb
mov
cmp
jns
cmpsl
fisubrs
dec
cmp
adc
stos
adc
xor
ficoms
fs
mov
out
fnstsw
arpl
mov
les
mov
pop
lock
jno
xor
in
push
shrl
jo
mov
scas
inc
inc
sbb
iret
cmp
pop
mov
or
rcl
mov
js
xchg
mov
ljmp
lock
scas
and
jl
mov
decb
ret
rcrl
insl
add
rcll
inc
push
dec
popf
lret
stos
push
aaa
addb
scas
pop
jg
mulb
push
inc
xchg
jae
xchg
out
fldcw
enter
jae
test
add
iret
cmp
mov
xchg
xor
xchg
divb
inc
ljmp
pop
jecxz
cmp
daa
repz
in
ffree
shll
cmp
icebp
sbb
outsb
pusha
mov
sbb
insl
int
fs
fldcw
addr16
jge
gs
lods
lods
ret
xchg
xchg
loop
xlat
xchg
loopne
xchg
outsl
shll
ret
pop
cld
jmp
pop
add
dec
jnp
jo
ret
scas
loope
aaa
add
jmp
xor
jecxz
xor
or
push
sub
mov
add
inc
sub
push
mov
inc
cmp
push
rclb
dec
mov
sbb
mov
jmp
imul
lea
out
cltd
ss
outsb
xchg
pop
pop
cltd
aaa
aaa
loop
sbb
sbb
and
rorl
mov
jae
lret
sbb
cmp
fsub
dec
int
sahf
jo
mov
and
or
and
ficomps
dec
sub
mov
movsb
jae
xchg
std
lock
fstps
fistpll
push
sbb
mov
xchg
jns
rolb
dec
xchg
push
mov
xchg
jae
stc
nop
or
inc
mov
xchg
aam
dec
iret
lods
push
inc
jp
out
lcall
out
push
or
fwait
or
or
imul
jp
loop
int3
test
stos
mov
sbb
jp
outsl
pop
inc
mov
xchg
sbb
filds
push
push
jnp
dec
pusha
jno
mov
mov
shlb
stos
jmp
mov
stos
pop
mov
mov
popf
cmp
mov
add
neg
mov
insb
movsl
out
out
shlb
jmp
jae
fldcw
or
frstor
daa
push
adc
loop
mov
dec
or
push
movsl
movsb
dec
les
repnz
pop
mov
cmp
or
dec
lods
cwtl
jl
pop
xor
repz
rcrl
push
psrlq
pop
mov
push
andb
sbb
lahf
shrl
inc
pop
jmp
cltd
dec
cwtl
push
fbstp
sub
loop
lds
int3
jmp
adc
xor
in
or
add
mov
mov
pop
mov
out
add
roll
add
rol
fdiv
iret
inc
push
push
test
aam
sbb
mov
mov
jb
xchg
mov
cmpsl
push
push
loopw,pt
ret
iret
mov
cs
or
out
add
test
mov
add
jmp
les
cmp
rcrb
test
stc
jb
add
movl
leave
aam
or
fwait
push
xchg
int
pop
add
repz
push
frstor
sti
inc
lock
jecxz
icebp
sbb
pop
or
repz
sbb
sbb
mov
adc
jbe
loop
dec
mov
in
pop
es
pop
pop
xchg
push
stc
push
adc
sbb
pop
mov
jbe
adc
pop
inc
jae
jge
iret
xlat
pop
out
ja
leave
jg
js
enter
push
pushf
mov
mov
shrl
lret
push
push
add
out
push
mov
fldt
nop
orb
out
push
push
repnz
stc
and
cmc
push
push
repnz
gs
mov
lcall
or
repz
lods
sbb
data16
rep
fists
cwtl
mov
std
aas
ljmp
and
int3
shl
arpl
adc
lret
mov
insb
push
xor
test
xlat
or
enter
inc
je
or
outsl
test
inc
pop
repnz
lds
jge
adc
inc
loopne
enter
and
xchg
inc
mov
dec
sub
inc
cmc
movsl
out
and
loopne
jne
xchg
es
prefetchw
or
pop
cld
adc
insl
mov
sub
sub
mov
add
jns
xchg
sbb
xor
call
push
popl
clc
lcall
mov
out
les
daa
adc
jg
frstor
movb
aas
pop
loope
cmp
arpl
mov
popa
ror
push
jmp
frstor
stos
or
jle
jle
jnp
jge
push
pop
adcb
rcl
fsubl
cmp
bound
xchg
and
xlat
dec
cmp
repz
jne
repz
jbe
and
and
fsubs
leave
ret
pop
cmpsl
pop
xor
sbb
or
adc
dec
ja
sahf
scas
pop
js
push
add
aaa
xor
xor
fwait
insb
mov
aaa
sub
dec
mov
pop
std
out
pop
loope
mov
sub
mov
es
lahf
mov
cld
push
test
cmp
aas
cli
fcmovnu
mov
fs
inc
in
xchg
cmpsb
mov
std
andl
aaa
mov
icebp
push
add
push
test
and
mov
mov
mov
xor
inc
or
xor
arpl
aaa
add
and
stos
out
jl
xchg
xor
ds
mov
mov
shrl
jb
adc
loope
sahf
pop
push
sahf
iret
cltd
aad
cmp
test
addl
mov
xchg
dec
push
jp
rcrb
enter
mul
das
aas
mov
test
cmp
outsl
add
int3
xor
leave
enter
ret
int
cltd
outsl
or
pop
int
sbb
dec
push
cmp
pop
pop
cld
and
lods
fnstenv
mov
mov
mov
aam
sub
cmp
cmpsb
and
repnz
cmp
test
lcall
and
rcrl
in
sbb
mov
sbb
cmp
inc
jecxz
sti
pop
cs
bound
cmpsb
orb
cmc
add
or
adc
sbb
push
sub
mov
jo
cli
xor
insl
mov
mov
jne
shrb
mov
xchg
out
add
call
xlat
cmp
inc
inc
adc
dec
int
imul
mov
sub
aam
das
adc
les
mov
jnp
fwait
push
pop
out
loop
mov
mov
fs
aam
pushf
jns
mov
sbb
jl
fildl
push
xor
loop
addb
pushf
cmpsb
outsb
fnstsw
enter
lahf
lcall
das
stos
jle
fbstp
movsb
popf
mov
in
sbb
ds
stos
popa
pop
pop
in
dec
loopne
xor
data16
mov
inc
jo
xorb
hlt
sub
cmp
inc
xor
jb
out
mov
sbb
jg,pt
inc
fs
data16
xor
inc
and
jp
int3
cs
testl
lret
push
je
clc
pop
loop
push
out
jns
adc
mov
pusha
jecxz
sbb
xor
sub
xor
ds
addl
inc
adc
scas
jns
outsb
daa
xlat
fisttpl
jnp
fdivrp
je
call
pop
xor
int
imul
loope
xchg
pop
xchg
mov
gs
jg
jne
cmp
pop
sub
ror
adc
popa
mov
push
dec
popa
aaa
mov
pop
shlb
xor
jge
sub
mov
dec
cmpsb
sub
in
mov
flds
out
xchg
lods
lahf
mov
test
imul
lcall
lret
push
mov
nop
or
dec
daa
daa
mov
es
imul
add
test
mov
or
dec
aad
scas
lds
or
je
sahf
pop
xor
push
mov
push
cmp
pusha
cmp
arpl
icebp
pop
inc
in
adc
jnp
mov
mov
xchg
inc
addr16
mov
dec
fistpl
jge
mov
sub
or
jo
fdivr
loope
ret
je
in
nop
das
adc
dec
ds
fisubs
test
leave
sub
jg
ret
mov
into
inc
jae
push
scas
inc
bound
push
insb
out
loope
mov
sub
and
cmp
jnp
xchg
push
pop
sbb
fnstsw
rcl
push
or
inc
sbb
pop
imul
popa
jl,pt
outsl
jmp
outsl
test
jmp
fisubrl
dec
rcl
mov
stos
loopne
into
jmp
fildl
lcall
repz
xor
cmp
jne
mov
add
jg
outsl
clc
ss
mov
mov
fisubrs
outsb
lret
push
loope
dec
in
jne
sbb
pop
out
push
and
lret
aam
jp
outsb
adc
jg
es
adc
sbb
lods
fwait
gs
bound
mov
fs
cltd
ficoms
pop
ds
lret
pop
mov
js
sarl
test
cld
pop
fwait
add
push
jno
aam
adc
lods
jge
mov
ret
push
jno
js
sub
stc
dec
orl
adc
or
call
fadds
and
mov
pop
or
inc
inc
mov
pop
and
out
ret
in
mov
popf
iret
fbstp
lds
aam
movsl
jno
notb
fwait
sbb
lods
push
imul
xor
fcomps
fisubrs
out
inc
pop
mov
mov
lock
sbb
ds
or
jnp
fwait
push
mov
arpl
lods
sarl
out
adc
add
pop
aad
adc
pusha
icebp
adc
pop
mov
test
aad
cmp
insb
jl
dec
in
sub
or
pop
inc
jecxz
dec
add
xchg
push
jae
cmp
loope
sbb
adc
stos
sub
ficoms
jmp
sbb
arpl
in
jg
push
pop
sub
inc
cmpsl
lock
nop
add
and
icebp
xchg
xor
cmp
or
xchg
hlt
inc
xchg
aam
in
les
mov
sbb
lahf
mov
push
shrb
cmpsb
lret
or
movsb
pop
aad
ret
sub
outsl
jno
out
outsb
iret
add
in
pop
cmp
xor
es
addr16
or
pop
imul
or
addr16
aad
adc
std
movd
jp
in
adc
mov
or
dec
cmp
mov
lock
push
arpl
adc
repz
jne
xchg
sbb
inc
pop
es
dec
ljmp
cmp
nop
dec
add
pop
out
scas
push
lahf
inc
mov
xor
pop
out
sub
push
fstps
lds
sbb
cltd
les
mov
cmp
call
dec
repnz
push
xor
jno
aas
xchg
push
lahf
lds
add
or
cmp
push
add
fstps
sub
jmp
and
lret
insb
add
cmp
jno
sbb
xchg
dec
pop
popf
sahf
xchg
dec
mov
rclb
push
dec
int
cmp
icebp
mov
inc
add
lods
mov
xchg
je
xchg
fnsave
test
sti
aas
and
outsl
xchg
pusha
sub
int
mov
aas
cmp
cmp
sbb
in
or
lcall
inc
jne
sbb
sbb
cli
loop
mov
enter
jnp
jns
xor
clc
or
je
xchg
outsb
cmp
popf
adc
xor
jbe
subl
pop
leave
arpl
xchg
cmp
and
push
push
jbe
sbb
sbb
add
mov
pusha
xlat
sbb
xlat
rclb
and
call
insb
or
fcomps
xchg
sarl
out
pop
mov
push
add
out
aad
inc
leave
rorb
lcall
orb
pop
xchg
pusha
ret
aad
call
sbb
roll
es
popa
js
sbb
push
fmull
arpl
cltd
movsb
lcall
insb
xchg
stc
enter
lock
sahf
movsl
mov
mov
aad
out
insb
or
shlb
xchg
dec
call
gs
push
adc
sbb
aad
or
dec
lock
sbb
rclb
push
push
gs
push
cmpsl
mov
jecxz
cs
sbb
into
inc
in
in
ret
mov
rol
daa
mov
das
fisttpl
mov
mov
rclb
lret
sti
enter
in
pop
in
mov
push
push
cmp
mov
popf
push
jg
mov
xchg
cli
and
adc
adc
mov
lahf
in
inc
push
pop
repz
dec
push
rolb
mov
shrb
out
add
lock
nopl
mov
cmp
scas
inc
pop
mov
xchg
out
std
std
mov
xor
inc
pushf
mov
cmp
popa
movsl
and
xchg
and
pop
xlat
filds
mov
pop
xlat
inc
push
cltd
cld
xor
xor
jae
notl
pop
add
inc
push
cmpsl
and
pushf
in
pusha
lods
pop
in
rolb
pushf
push
aas
imul
sbb
mov
adc
and
lock
jb
dec
xchg
js
aaa
rorl
int
mov
mov
ljmp
add
sbb
fcompl
mov
mov
add
rorb
sbb
cmp
outsb
mov
in
jle
jnp
sub
sub
add
jno,pn
addl
mov
push
dec
and
mov
pusha
mov
jno
pop
ss
enter
lods
inc
xchg
fldcw
js
stc
lods
jge
je
pop
in
mov
pushf
push
adc
ret
inc
push
pop
sub
and
cmp
xor
sub
mov
mov
or
sub
mov
rorb
ret
outsb
lock
icebp
nop
cmp
add
sarl
xorb
or
cmp
or
mov
or
dec
gs
ljmp
push
inc
jmp
xchg
xor
push
cli
icebp
jno
mov
xlat
jo
xchg
rcrb
les
vpmadcsswd
outsb
jge
aas
cs
cmp
cwtl
sbb
push
sub
aas
mov
pop
add
inc
mov
std
leave
pop
stos
subl
mov
js
lret
dec
cmc
lret
iret
mov
repz
ljmp
jb
jne
sbb
test
adc
cmp
xor
xor
lds
jno
pop
pop
pop
xchg
enter
ja
imul
sub
and
js
jno
lea
inc
xchg
outsb
and
ret
xchg
jle
aas
int3
and
fdivrl
mov
mov
roll
ret
push
and
and
pop
jbe
jnp
and
cs
movsb
fisttpll
gs
mov
aad
outsb
in
jmp
inc
adc
or
jl
add
dec
rcrl
cmp
cmp
insb
pop
es
iret
sub
leave
mov
cli
loopne
inc
dec
jle
jmp
inc
jp
addr16
in
lahf
mov
push
icebp
icebp
outsb
jnp
hlt
sbb
rorb
adc
cmp
bound
sbb
out
cmp
xchg
sub
lock
xor
or
andb
mov
mov
xor
xor
cmp
cmp
and
inc
int
stc
pop
js
add
nop
in
fldl2t
aam
xor
cwtl
imul
jno
add
mov
mov
fst
cmp
xor
andl
test
inc
cli
jl
mov
jmp
nop
pop
iret
jl
andb
add
loop
cmp
fistps
lock
std
jns
insb
xor
add
cli
push
xchg
mov
imul
mov
cli
add
mov
mov
fwait
shll
push
adc
push
orl
and
xchg
lcall
inc
inc
cwtl
out
fdivs
jg
sbb
ja
gs
gs
jae
push
or
xchg
push
push
xor
daa
fcmovnu
test
mov
lcall
jae
shr
mov
push
enter
pop
movsl
add
pop
sbb
je
test
jae
ljmp
iret
or
and
xchg
pop
inc
je
daa
or
mov
cmp
pop
push
stos
xchg
pop
push
stos
xchg
js
pop
mov
sbb
mov
icebp
aad
and
mov
dec
dec
sub
dec
fsubs
test
push
xchg
jl
cld
xor
or
lcall
adc
jae
push
dec
fdiv
push
pushl
adc
push
dec
jmp
popa
xor
movsl
adc
in
test
mov
pop
icebp
enter
pop
mov
rcr
or
out
add
mov
ds
push
in
inc
in
adc
and
jmp
or
jb
xchg
xorb
test
push
jno
adc
add
xchg
out
and
stc
arpl
std
sbb
stos
inc
cmpsb
cmp
cs
lret
fwait
xor
insb
inc
lea
push
cmp
out
inc
xchg
or
icebp
xchg
mov
inc
jp
das
mov
in
clc
and
outsl
fldenv
in
aas
loop
pusha
sub
cmc
mov
lret
movsb
sti
cmp
sbb
push
sub
add
mov
lods
ja
in
test
ja
jg
xchg
iret
je
inc
nop
inc
ret
repz
ja
sti
xor
push
mov
pusha
rorb
mov
lea
sti
cmovne
mov
rorb
pop
ss
sbbl
xor
add
clc
hlt
mov
nop
push
push
add
jbe
and
cli
movsl
inc
cmp
sbb
cli
or
xor
and
mov
jne
outsb
jle
add
clc
aad
inc
pushf
push
out
and
sbb
test
jmp
inc
dec
adc
bound
pop
mov
xchg
lock
enter
es
fs
js
repnz
mov
repz
jno
daa
cmc
scas
ds
jnp
lcall
cltd
test
in
cli
cltd
cld
aaa
cmpsl
sub
mov
fisttpll
pop
addb
es
mov
sub
cmp
xchg
addl
push
push
ss
loop
out
mov
inc
out
mul
push
cmp
popf
add
inc
adcl
sahf
lock
pop
clc
push
test
ds
xchg
jo
push
add
in
add
test
lret
mov
sarb
cltd
lret
loop
cli
cmp
mov
mov
pusha
lock
push
push
out
sbb
in
lock
jge
bound
xor
xchg
push
push
push
mov
stos
rorl
insb
notb
mov
adc
outsb
lods
popa
les
inc
jbe
cmpsb
daa
jb
enter
push
icebp
test
push
lret
int3
add
pop
cs
xchg
out
dec
mov
push
dec
div
xchg
dec
inc
xor
bound
fisubl
mov
pop
pop
int3
sbb
inc
mov
enter
dec
or
jmp
test
fisubl
icebp
leave
mov
fwait
icebp
enter
scas
outsl
incb
add
sbb
pop
loope
cmpsb
xor
adc
add
mov
mov
mov
add
sbb
and
lret
jo
or
or
pusha
mov
xchg
sbbb
inc
clc
inc
mov
js
sub
cmp
std
mov
popa
in
mov
push
arpl
or
add
insl
cwtl
push
cmp
sbb
clc
inc
and
jae
push
jp
cltd
xchg
or
lahf
push
in
mov
sbb
iret
jae
mov
adc
sbb
dec
cmp
sub
and
xchg
xchg
sub
imul
add
mov
sub
dec
ljmp
ja
xor
inc
stc
mov
jns
mov
fsubp
cld
mov
sub
sub
das
sub
push
in
test
test
shl
adc
jmp
mov
push
ret
sbb
or
sbb
decb
mov
cmp
mov
mov
lret
lret
sub
inc
adc
push
clc
dec
dec
dec
push
push
gs
xchg
xchg
mov
push
pop
je
mov
xchg
addr16
sub
adc
frstor
pop
outsb
int3
push
cmp
pushf
inc
mov
dec
and
inc
mov
test
mov
int3
jg
xchg
test
leave
movsl
fwait
je
jmp
lcall
mov
in
outsb
inc
flds
fdivrp
clc
dec
jno
push
add
lea
jg
pop
or
xchg
imul
cwtl
sub
sub
jb
sarl
xchg
mov
xchg
and
pop
enter
jmp
xor
outsl
into
out
int
inc
shll
dec
mov
icebp
stos
mov
adc
shll
jp
mov
aad
je
push
xor
sti
push
push
clc
loop
aam
xchg
push
push
std
mov
stc
mov
repz
mov
js
jb
lds
lods
sahf
mov
lahf
pop
adc
int3
addr16
test
and
pop
sub
dec
shl
imul
popa
icebp
xor
cmp
je
adc
lods
insb
es
pop
mov
ljmp
cli
add
dec
mov
xchg
pop
adcb
lods
notl
cwtl
lcall
xor
stos
sarl
movsl
imul
dec
loop
add
out
loope
sbb
mov
ret
rorl
lret
inc
mov
dec
inc
jl
imul
loop
and
rclb
pop
ja
movsb
movsl
xor
cmpsl
popf
insl
imul
xlat
addr16
sbb
repnz
cmc
aam
push
call
jecxz
adc
sbb
fcmovb
and
cltd
repz
mov
jmp
jl
test
test
adc
in
and
test
jle
fisttpl
mov
mov
shr
stos
push
and
data16
out
out
fists
or
mov
inc
jne
add
dec
jns
ja
aam
sbb
ljmp
and
cld
call
mov
xchg
es
clc
int3
mov
dec
jbe
imul
pop
addr16
xchg
mov
das
pushf
or
dec
mov
loopne
inc
mov
pop
or
xorb
push
outsb
int
icebp
fmul
pushf
out
cmp
loopne
lea
shr
repnz
cmp
push
sti
xchg
cmp
mov
outsb
and
push
pop
insl
cmp
sbb
jmp
mov
shr
and
pop
cmp
imul
xchg
jb
lcall
jo
int3
jnp
mov
sti
push
andl
imul
xor
lret
inc
mov
or
out
rolb
movsl
paddsb
jg
fisubs
mov
mov
xor
jno
jl
sub
mov
or
push
addr16
xchg
dec
loopne
mov
divb
xchg
mov
fs
and
cwtl
clc
push
stos
fisttpll
cmp
xchg
cmc
stos
mov
xchg
add
call
mov
inc
and
inc
and
adcl
inc
mov
jge
add
fldt
in
les
mov
sahf
nop
xchg
jp
push
gs
popf
push
in
pop
cmp
jne
test
fnstcw
fs
jp
loope
imul
mov
imul
or
es
subl
inc
jg
sub
pop
pop
pop
mov
shrl
jno
inc
inc
jno
stos
pop
hlt
pusha
inc
sub
push
ficoms
sti
pop
cmp
add
sbb
xchg
and
inc
and
mov
js
out
xor
xchg
mov
mov
in
mov
insb
cs
cli
mov
inc
mov
jnp
cld
or
jg
imul
push
sbb
movsl
fdivrl
push
cmp
rcrl
pop
ret
xchg
jnp
lcall
sub
and
xchg
and
xchg
xchg
ja
xchg
or
cmpsl
popf
js
imul
pop
stc
sub
in
movsb
push
sbb
dec
dec
lods
mov
je
mov
stos
sbbl
clc
inc
xor
rcrb
in
iret
inc
lret
fisttps
mov
xchg
jo
add
or
push
mov
repz
enter
lcall
outsl
movsb
or
lods
dec
test
in
je
mov
icebp
xchg
pop
push
cmp
lret
inc
dec
daa
adc
xor
and
pop
cwtl
xor
sbb
mov
cmp
cmp
add
arpl
mov
out
stc
mov
fidivrl
roll
xchg
xor
sbb
mov
push
insl
jmp
pop
inc
jae
ss
sahf
cwtl
mov
cmp
das
sbb
cmp
lahf
pusha
leave
xor
jl
add
dec
mov
fcompl
test
or
out
into
xchg
mov
add
mov
inc
test
and
daa
push
sti
xchg
call
inc
iret
mov
push
into
imul
imul
call
inc
jnp
push
stos
insb
jns
fiadds
fdivrp
subl
sarb
push
imul
pop
mov
pop
dec
xlat
lea
mov
xchg
icebp
mov
ja
sub
inc
adc
lahf
sub
fdivrs
in
scas
ss
or
or
lods
mov
mov
push
mov
orb
push
sti
dec
jb
lea
dec
divl
push
and
add
les
popa
dec
dec
sarb
mov
in
jp
cltd
idivb
btsl
pushf
ljmp
lahf
nop
popf
subb
xchg
shrl
pop
fistps
ja
stos
jecxz
xor
sahf
xor
xlat
mov
aad
jge
in
inc
sarl
repnz
xchg
jge
cltd
jl
pop
aam
sbb
cltd
cmp
push
inc
sbb
mov
pop
fwait
nop
in
mov
dec
nop
push
shll
leave
clc
imul
mov
dec
or
jg
sub
call
push
mov
mov
pop
mov
xchg
imul
fs
jle
out
das
mov
sahf
sbb
idivl
sub
fcmovb
mov
ljmp
xlat
dec
ror
test
ljmp
dec
aam
jbe
jns
inc
int3
inc
stos
jne
cld
push
test
mov
fcomp
mov
dec
pop
mov
xchg
in
cmp
outsl
mov
popa
es
negl
mov
iret
iret
movsl
fcoml
cmp
push
fs
ds
fmul
sahf
lds
mov
bound
scas
xchg
add
addb
sti
shrl
sub
and
adc
dec
popf
movsb
mov
pop
pop
cltd
xchg
aas
imul
add
lods
data16
pandn
inc
dec
push
jnp
cmpl
push
into
jmp
data16
xchg
or
adcb
xor
inc
fstpl
pop
ss
icebp
or
in
leave
je
sbb
cmpsb
mov
sub
ljmp
jmp
fimuls
mov
ljmp
jecxz
add
cltd
sub
and
push
test
je
lods
hlt
fucomi
fucompp
stc
dec
pop
sub
js
das
jp
jp
cmp
lcall
loope
cmpb
dec
jne
sarl
and
mov
in
sub
adcb
lret
dec
sbb
xchg
push
sbb
sbb
sub
rorb
lds
aas
pop
dec
ret
bnd
mov
dec
or
test
sbb
mov
mov
push
iret
sub
mov
into
and
cltd
xchg
mov
fiadds
mov
push
out
aad
hlt
lahf
imul
fsubr
call
pop
call
or
in
sti
add
and
jmpw
out
jb
jo
subl
fdivl
fcomps
jp
icebp
ljmp
pop
jns
ret
jl
lret
fstpt
fmull
jl
rolb
js
test
ret
lods
lds
push
shll
add
sbb
xor
xor
push
test
mov
stos
outsl
cltd
in
or
mov
roll
fdivrs
fbstp
mov
shrb
repnz
push
lods
pmaxub
xchg
shl
sbb
mov
jg
add
inc
push
pop
nop
or
mov
cmp
push
rolb
gs
sti
mov
nop
in
cmpb
rclb
mov
scas
int3
push
sti
test
jge
mov
sub
xor
xlat
stc
jns
dec
or
mov
pop
mov
ret
inc
and
popf
add
sbb
inc
or
dec
push
inc
cmp
xlat
pusha
outsb
or
and
fwait
sub
push
xchg
test
jne
jecxz
adc
sbb
pop
pusha
imul
xchg
stos
add
push
xor
repz
push
mov
mov
jb
movsb
test
push
popa
loope
dec
ds
and
out
fiaddl
inc
cwtl
push
xor
adc
or
cmp
and
sahf
jmp
shlb
out
and
xor
pop
push
ds
repnz
sub
mov
testb
roll
cmp
or
dec
push
add
mov
add
std
jns
hlt
shr
cs
jmp
xchg
cmp
and
lret
xchg
outsb
xchg
cmp
dec
fs
outsb
movsb
dec
inc
loopne
pop
mov
aam
hlt
fmul
lods
jns
xor
xchg
shll
negb
in
enter
outsl
jno
cld
fistpll
imul
xor
fdiv
aad
xchg
shll
sbb
cmp
test
xchg
negl
mov
inc
xlat
inc
xchg
insl
jae
pusha
sub
adc
mov
mov
movsb
cmp
jg
or
ds
nop
sub
aaa
sahf
mov
hlt
mov
or
xlat
imul
pushf
out
test
dec
aas
js
jbe
mov
or
xor
ret
mov
push
inc
pushf
push
das
mov
lds
idivb
scas
add
loope
aaa
dec
rolb
push
xor
mov
jg
sub
cmp
lret
daa
pusha
or
popa
orb
inc
ja
mov
push
sarb
pushf
cld
mov
mov
es
inc
je
jnp
aam
movsb
shlb
fimull
stc
movsl
subb
push
ja
cmp
jns
stos
xlat
mov
push
cmp
pop
add
rorl
mov
pop
sbb
test
inc
fs
test
dec
push
test
movsb
dec
ret
jae
adc
cltd
push
xor
in
mov
sahf
cmp
stc
add
je
fs
sub
sbb
mov
cld
adc
mov
and
pop
fldenv
and
test
movl
mov
mov
xchg
jo
push
lock
sub
aam
push
daa
pop
mov
xchg
les
rcl
lcall
repz
outsl
add
lret
call
dec
test
xchg
cli
xor
and
int3
std
adc
cmp
out
lcall
loop,pt
mov
loope
test
and
mov
pop
js
in
add
add
jno
ret
repz
xchg
mov
in
or
pop
jno
dec
and
mov
test
vmovaps
loop
xor
pop
mov
and
scas
mov
ror
incl
call
inc
sub
hlt
arpl
push
push
mov
fs
aaa
lds
xor
flds
cld
mov
xchg
in
push
add
ljmp
inc
xor
mov
mov
mov
pushf
cmp
sbb
rcrb
rcrl
ljmp
mov
js
rcrl
das
in
vmwrite
cmp
sbb
call
inc
lods
dec
mov
jae
cmpsb
jne
into
inc
xchg
ret
stos
add
dec
inc
xor
or
shrl
addr16
fsts
cmp
mov
daa
pusha
push
sub
arpl
sub
jmp
sub
les
or
xor
jge
inc
cmpsl
cmp
hlt
dec
push
dec
aam
xchg
popf
call
pop
sbbb
cmp
and
push
out
lock
stos
fwait
cmp
es
jp
mov
jno
mov
into
push
pop
or
inc
adc
push
dec
or
ja
pop
push
mov
adc
divl
and
loope
icebp
push
push
adc
cs
xchg
testb
mov
push
js
int3
jle
sahf
dec
popf
push
xor
sub
push
mov
mov
push
sahf
negb
or
outsl
adc
loop
sub
paddq
je
sahf
pushf
dec
lret
lahf
cmpsl
fildl
negl
push
xchg
lods
imul
jo
cmp
and
jns
cmp
mov
jno
xchg
data16
out
lds
xchg
xchg
jg
dec
clc
pop
ds
andb
out
pop
mov
aaa
out
bound
int
pop
pop
lds
outsl
lods
adc
lret
cltd
outsl
gs
mov
lahf
fcoms
mov
dec
fs
push
sbb
lds
sbb
lock
rcrl
je
in
idiv
push
xor
and
add
mov
adc
loop
fisubl
mov
jno
mov
inc
lds
in
mov
jo
push
mov
pop
cltd
andb
ss
sub
and
sub
xchg
iret
sub
inc
jne
negl
xchg
sub
cmp
lret
push
add
push
jle
adc
mov
mov
push
out
imul
imul
xchg
xchg
ret
pop
dec
ss
rcrb
mov
dec
mov
sub
or
sub
cld
xchg
or
lods
mov
dec
arpl
aad
lds
cmp
inc
dec
xchg
sub
sub
sbb
shlb
cli
int3
sbb
push
bound
mov
and
dec
out
test
fcompl
lret
out
xchg
mov
sbb
hlt
cmpl
and
je
mov
iret
sbb
jbe
inc
and
dec
pop
mov
movsb
das
test
iret
jno
cmc
mov
cld
out
cvtdq2ps
push
push
inc
xchg
xchg
mov
or
out
lea
sub
cmpsl
outsb
xor
sub
mov
inc
and
xchg
mov
dec
cmp
jnp
push
push
imul
inc
imul
mov
icebp
pop
push
mov
adc
xchg
popa
addl
insl
call
and
bound
cltd
mov
sub
or
pop
mov
mov
dec
ret
leave
in
insb
ret
push
js
mov
sbb
fistpll
sub
lds
pop
add
and
clc
lea
mov
cmpsb
js
ficomps
xchg
gs
sbb
addl
mov
test
pop
jne
mov
sub
inc
stos
mov
add
xchg
jbe
bound
mov
inc
adc
pop
divb
dec
imul
fsts
shr
pop
cltd
and
fsts
cltd
insb
mov
shl
mov
loope
mov
inc
std
js
jno
fs
sub
sti
je
stos
mov
ret
jmp
test
mov
dec
jp
mov
enter
cmpb
dec
mov
fcomps
sub
out
rorb
cmp
mov
mov
bound
or
fwait
in
jno
out
daa
enter
mov
add
test
mov
mov
movsl
cmc
jg
lods
xor
push
push
and
mov
popf
std
lock
ljmp
inc
push
iret
adc
es
push
cmp
sub
js
in
push
or
insl
stc
insl
cmpsl
and
movsb
cmp
js
mov
loope
imul
xor
scas
sbb
pop
out
outsl
mov
push
xor
jp
push
mov
cmpsb
outsb
mov
pop
pop
orl
pop
sbb
fwait
lcall
mov
test
icebp
mov
mov
sahf
lods
mov
jecxz
dec
jg
int
fistpll
pop
movsl
jne
hlt
rclb
out
sub
push
outsb
push
arpl
lods
out
mov
into
jp
sbb
loope
sahf
popa
xchg
sahf
idiv
lods
jg
fwait
xchg
rcl
int3
dec
adc
add
mov
insl
daa
movsb
fistps
xchg
dec
clc
fdivrs
mov
push
fcmovnb
orl
push
inc
inc
ja
xor
add
stos
lods
ficompl
cmc
jg
adc
ret
int3
xchg
shlb
incb
movsl
loop
negb
jge
test
in
dec
push
leave
xchg
xchg
outsb
js
aaa
sbb
jmp
mov
inc
nop
in
lock
lods
mov
fildl
fidivrs
stc
andb
push
into
stc
push
add
mov
xor
ss
hlt
inc
jle
repz
adc
movsb
test
adc
sub
add
sbb
clc
jge
xlat
sbb
inc
push
outsb
cmc
mov
inc
mov
and
xchg
and
mov
flds
sbb
repnz
mov
addr16
pop
leave
xor
pop
sub
lods
insb
pusha
scas
xchg
or
mov
movsl
pop
movsl
push
lret
outsl
mov
dec
aam
jo
cmp
mov
int
js
jbe
jl
lret
out
and
jae
inc
pop
add
movsb
mov
cli
call
sahf
mov
xlat
sbb
imulb
aam
nop
push
or
inc
cmp
sub
popa
push
roll
arpl
jg
and
push
shl
bound
pop
sub
inc
loopne
sti
sbb
shl
loope
dec
popf
into
cmp
sub
pop
xchg
pop
add
xchg
cmp
jns
cltd
mov
in
sbb
pop
xor
repnz
out
repnz
stos
xchg
sbb
rcrl
mov
cld
xor
popa
ror
push
inc
jl
sub
mov
insb
sbb
and
arpl
jle
push
ds
lea
ret
call
imul
mov
push
inc
xchg
add
test
jg
je
inc
mov
cmpsb
dec
adcl
adc
arpl
or
add
mov
cmp
lret
test
jmp
into
data16
aas
mov
sbb
sub
sbb
fistpll
dec
jge
add
cwtl
jle
sbb
mov
scas
cld
jne
insb
mov
mov
cmp
inc
jo
xchg
test
mov
movsb
lahf
movl
pop
std
out
clc
jnp
mov
arpl
adc
mov
mov
add
and
xor
mov
call
mov
clc
movsl
in
out
aad
dec
xchg
pop
push
jle
sub
pop
imul
jb
lahf
mov
mov
aaa
popf
mov
shrl
fildll
dec
ret
in
mov
mov
xchg
cmp
pop
xchg
push
ss
popa
cmp
test
out
sbb
jmp
unpcklps
mov
add
push
push
dec
cmp
cltd
out
dec
in
ds
popa
jnp
gs
fidivl
jb
xlat
fs
lds
xchg
pop
xor
jne
push
das
fwait
mov
or
jbe
pop
or
enter
pop
ret
fdivs
xor
stos
aaa
int3
outsl
xor
cmp
dec
inc
mov
imul
fstps
bound
mov
xchg
insb
addr16
jae
test
mov
add
fldl
iret
xor
idiv
mov
imul
pop
loope
nop
jge
push
inc
mov
or
and
jnp
call
cld
and
dec
les
push
js
repz
add
aad
sarb
jge
xor
lcall
add
cmp
or
sti
inc
and
mov
ret
push
and
dec
xchg
push
inc
notl
xchg
rcrb
jp
dec
pop
push
jg
mov
xchg
cmp
push
mov
fsubrp
or
aas
pop
movsl
insb
jle
stos
repnz
aam
mov
and
adc
cmp
arpl
ret
mov
jp
push
mov
xor
cmc
and
mov
je
inc
js
jl
mov
sbb
mov
mov
pop
test
insl
movsl
xchg
pop
adc
les
or
mov
in
dec
pusha
shll
push
pop
loopne
cmp
aas
imul
pop
xchg
sub
mov
sub
inc
loop
mov
test
sbb
mov
sti
add
pop
cmpsl
leave
jno
call
pop
pop
cmp
fwait
cs
pop
add
push
js
scas
add
ljmp
lock
adc
insb
outsl
cmpsb
fldenv
rorl
add
mov
add
lret
xor
aaa
and
add
int
mov
fst
push
add
inc
fnstenv
adc
sti
xchg
jp
mov
push
js
lea
test
push
inc
repz
or
sbb
and
inc
subl
js
xchg
inc
mov
jnp
inc
push
pop
cs
mov
inc
sub
adc
enter
mov
mov
bound
lret
int3
es
jmp
repz
pop
fistl
mov
pop
ja
loope
push
sub
dec
inc
mov
popf
xlat
xor
cltd
mov
test
pushf
movsl
xchg
aas
mov
cmp
pop
dec
std
es
es
sti
fcmovbe
xchg
leave
jle
mov
xchg
pop
mov
nop
pop
or
mov
or
iret
dec
insb
jo
inc
adc
mov
pop
sub
or
adc
or
xchg
cmc
and
sbb
mov
mov
arpl
fiaddl
xor
fnop
xor
jno
in
cmp
mov
inc
or
fidivs
int3
pusha
mov
aad
pop
or
mov
lcall
xchg
mov
js
daa
xchg
adc
and
mov
sub
stos
add
dec
adc
lods
jle
stos
int
sbb
sub
adc
mov
inc
jae
out
mov
xor
stc
lcall
inc
xor
inc
add
pop
scas
add
icebp
movsl
test
mov
outsl
pop
and
add
inc
loope
or
cmp
add
xlat
push
lea
pop
cmp
jg
lods
cwtl
sub
push
cmpl
mov
jbe
frstor
or
mov
and
rorl
xchg
cmc
outsl
ficompl
xchg
inc
outsl
xlat
adc
lahf
xchg
in
push
fs
mov
ret
call
popf
test
push
addr16
idivb
iret
mov
rol
imul
test
mov
mov
ja
pop
rcrl
lods
adc
aas
lods
idiv
xchg
test
fs
into
inc
test
subb
mov
inc
insb
jge
cltd
ret
or
into
pusha
test
sarl
in
xchg
push
das
adcb
mov
sbb
cmp
fsub
mov
outsb
sub
and
cmpl
push
or
mov
cmc
es
inc
iret
lcall
jle
cmc
loope
mov
fstpt
sarl
sub
dec
lea
rolb
in
pop
ljmp
xor
mov
pop
jns
testb
test
mov
mov
es
fdivp
movsb
xor
sub
pop
aad
lret
cwtl
jnp
adc
push
add
fwait
stos
movsl
stos
sqrtps
or
mov
aas
jnp
cmp
test
adc
jge
xchg
call
and
sti
pop
aam
xor
ss
xchg
cmp
loopne
repz
push
push
or
pusha
std
and
xor
loopne
out
and
cmp
jno
cmp
ret
or
lret
push
gs
push
lret
xchg
pop
xchg
mov
imull
rorb
rorl
test
jmp
clc
and
xchg
imul
sub
loope
ds
dec
lods
xor
mov
out
or
aaa
inc
adc
imul
mov
sub
hlt
xor
pop
pop
sub
lret
push
out
add
pop
push
cwtl
sti
jecxz
adc
les
inc
out
pop
xor
pusha
dec
jbe
sbb
pop
sbb
jb
sbb
xchg
jbe
xor
inc
in
and
push
mov
das
dec
inc
mov
rcrl
xchg
jbe
call
inc
fsubr
inc
fcoml
or
cmp
sbb
add
cld
fcoml
les
jnp
pushf
test
mov
mov
aam
in
stc
lret
in
mov
and
in
lods
iret
mov
fcompl
dec
inc
roll
rdmsr
jb
fmuls
sti
pop
out
movsl
nop
pop
mov
lahf
sbb
lods
pop
test
jne
aas
and
sbb
int3
leave
dec
nop
adc
sti
xchg
inc
in
enter
jbe
out
cmpsl
lea
popf
mov
inc
jae
in
sahf
and
icebp
inc
test
adc
inc
fwait
popa
adc
paddsw
jl
cmpsb
test
iret
adc
inc
fwait
adc
popf
or
mov
call
fidivrl
leave
mov
push
sub
jne
fildll
add
loope
in
mov
fxtract
test
or
icebp
inc
popf
inc
or
imul
icebp
pop
mov
xchg
xor
or
iret
jne
ljmp
sub
lock
push
mov
pushf
imul
icebp
rcl
push
and
push
test
cmp
in
aam
sub
xor
adc
jl
das
inc
inc
insl
subl
xchg
xchg
mov
gs
test
xchg
rcll
in
popf
fidivs
xchg
mov
push
insl
inc
dec
sub
mov
in
fisttps
es
rclb
stos
xor
pop
leave
jg
jge
aam
sub
icebp
dec
and
das
aad
adc
dec
adc
addb
notl
out
das
cwtl
push
ljmp
mov
insl
addb
clc
pop
and
lods
lds
dec
push
and
aaa
push
jge
ret
add
jle
loopne
loope
dec
xchg
mov
outsl
shrl
in
daa
pop
jl
insl
cs
into
pop
rcll
jae
mov
hlt
jo
jo
sub
iret
or
mov
mov
add
call
pop
dec
test
mov
cmp
das
js
out
and
dec
push
inc
lret
mov
dec
bound
sub
pusha
pop
xchg
mov
les
inc
mov
mov
jl
ffree
je
dec
movsb
lds
ljmp
xor
jno
inc
adc
inc
test
pop
dec
cld
fmull
je
testl
loop
add
and
jns
notb
aaa
sub
mov
fucomp
dec
cmp
insl
jmp
inc
mov
lock
imul
add
aad
aam
aad
fs
push
adc
neg
cmp
mov
mov
test
adc
jo
pushf
shlb
imul
jns
or
stc
and
icebp
xor
pop
or
divb
loopne
xchg
inc
loop
mov
hlt
mov
cmp
cs
ret
mov
mov
xor
adc
add
rcl
stos
pop
dec
sti
and
mulb
out
mov
test
mov
in
xor
cmp
repz
mov
pop
mov
sbb
sub
outsl
dec
pop
fs
pop
pop
pop
xchg
adc
loop
dec
dec
mov
adc
xchg
ja
or
mov
js
cmp
xor
xor
rorb
imul
pop
xor
xchg
cmp
xorl
sub
test
xor
sbb
adc
je
jno
inc
das
stos
mov
daa
out
jge
stc
shrb
pop
push
hlt
mov
dec
push
iret
lret
xor
mov
mov
loop
outsl
aaa
add
mov
adc
inc
adc
lcall
insl
and
jle
mov
inc
add
lahf
mov
int3
inc
sbb
fwait
ja
sub
xor
add
movb
rcl
xor
inc
pushf
dec
adc
in
ss
fiaddl
loope
sysret
aas
add
push
mov
cmp
and
xchg
imul
xchg
jp
add
lods
cmp
pop
nop
data16
movq
push
sbb
test
cld
fidivrl
imul
push
mov
mov
or
inc
cli
jecxz
xor
pop
stc
add
jmp
and
les
fimuls
xchg
mov
xchg
pop
jp
mov
rcll
leave
adc
adc
sub
cmp
adc
mov
mov
jp
jp
add
ja
dec
sbb
fildl
cmp
insb
mov
add
mov
fdivs
xchg
stc
lret
sahf
lcall
mov
mov
cmp
icebp
pop
or
movsb
fs
sbb
sbb
pushf
mov
lcall
xchg
sti
push
lcall
ljmp
or
adc
push
ret
xchg
imul
pop
cmp
jno
popa
jae
aaa
fwait
push
mov
shll
fstp
lahf
and
in
iret
enter
sarl
adc
cmpsb
arpl
cwtl
dec
cmp
arpl
sub
sub
fnstenv
movsl
fs
stos
and
lahf
mov
insl
pop
aam
aad
mov
outsl
call
aaa
sbbl
jecxz
iret
ja
adc
pop
call
ss
push
jae
iret
in
in
xorb
jae
xor
fstps
test
sbb
stos
loop
fwait
out
pop
mov
test
mov
fstpt
enter
lret
push
sbb
jl
int
cmp
push
jns
pop
adc
sub
jae
jle
and
pop
insb
jp
add
mov
xchg
and
cmp
add
popf
mov
inc
sbb
jl
mov
dec
sbb
es
ficomps
ss
and
hlt
cmpsb
popl
repnz
add
xor
mov
cmpsl
xor
sbb
jmp
push
adc
mov
gs
incb
lds
adc
rcll
aam
mov
icebp
lea
popw
mov
rorb
sub
lret
xor
or
popa
or
clc
outsl
inc
dec
mov
jae
dec
xchg
or
fisttpl
mov
inc
pop
adc
add
cmp
jno
cmc
int
cmpsl
mov
jle
or
sti
cli
push
lret
fwait
popa
xchg
gs
aam
js
push
or
and
shll
inc
out
out
test
mov
movsl
push
pop
movsl
dec
adc
xlat
stos
mov
iret
adc
fs
popa
sbb
ja
jns
shll
aas
sahf
pusha
sarb
sbb
pop
xlat
mov
call
xlat
mov
push
js
aad
push
fidivs
mov
lock
or
shl
sbb
stos
not
xor
jge
imul
movsl
fnstsw
imul
mov
pop
clc
lock
lods
mov
mov
ja
mov
roll
fldenv
add
xchg
push
out
ja
ljmp
dec
in
mov
divl
mov
or
pop
xchg
das
fcompl
pop
inc
and
pop
test
pop
pop
mov
cltd
jne
mov
out
xor
xor
loopne
cmp
xchg
pop
dec
sahf
cmpsb
icebp
cmc
call
shlb
out
jns
inc
adc
jmp
testb
mov
js
add
adc
pop
mov
push
adc
add
inc
add
je
or
or
pusha
je
das
sub
xchg
mov
lret
add
mov
inc
dec
xlat
fistl
push
mov
jge
pop
sbb
int3
jp
push
stos
add
push
mov
ljmp
les
test
mov
pop
sub
push
mov
jg
bsr
push
stos
test
cwtl
push
push
or
out
xlat
fistpll
sti
jne
lea
fyl2xp1
push
shrb
and
sbb
mov
das
les
xchg
scas
inc
mov
mov
outsb
ret
push
ret
out
dec
push
inc
stos
clc
adc
sub
inc
sub
divb
xchg
push
mov
arpl
inc
mov
mov
lcall
adc
test
shrl
mov
jp
pushf
in
push
in
dec
jle
jb
lahf
xor
mov
insl
aam
xchg
mov
stos
sbb
pusha
or
push
movsl
sub
inc
ret
cs
ljmp
jno
lret
dec
js
pop
jle
push
add
and
pop
jge
subb
and
mov
xchg
jne
cmp
and
dec
mov
imul
es
xor
xor
aam
int3
stc
ljmp
sahf
dec
fisttpll
mov
dec
test
pop
xor
add
aad
mov
push
fxch
mov
iret
push
sub
pushf
xchg
imul
push
out
xchg
cmp
test
adc
jl
mov
test
inc
cmpsb
push
aas
cmpsb
out
adc
xor
in
cmpsb
rol
lahf
and
or
cmpsl
scas
cmc
mov
lcall
ret
out
push
pushf
mov
leave
cmpsb
sub
imul
push
mov
jne
dec
or
jl
nop
cmp
popa
lods
adcl
ficomps
mov
jp
dec
mov
cvtps2pd
cmc
les
imul
pop
mov
or
js
dec
je
xor
add
movsb
aaa
ret
popf
dec
fs
rcrl
push
inc
inc
push
stos
mov
xor
sbb
mov
popa
mov
pop
mov
mov
js
cli
pop
in
icebp
subl
scas
ljmp
inc
mov
mov
lret
out
inc
mov
mov
and
inc
xor
mov
pop
mov
std
loope
ss
jns
sbb
js
js
mov
mov
xchg
adc
aas
in
cmp
sbb
xchg
pusha
jl
test
adc
inc
dec
xor
jg
fists
std
pop
aad
or
das
inc
imul
stc
adc
pop
sti
ret
jecxz
push
stos
aam
insb
sbb
inc
sub
xor
fnstenv
sar
aaa
pop
jg
or
ja
int3
sbb
loopne
cltd
or
rclb
mov
cmp
scas
sub
pop
dec
scas
pop
sub
faddp
pop
ja
xchg
add
sub
sbb
mov
in
pop
out
xchg
and
dec
xchg
nop
mov
xor
cmp
ret
sbb
sub
aas
cmp
fdivl
push
inc
xor
movsb
into
mov
rcrl
imul
fwait
jo
dec
insl
sbb
dec
scas
lret
notb
and
les
aaa
imulb
cld
mov
dec
je
leave
ret
jg
out
push
loopne
fnsetpm(287
scas
and
mov
cmp
and
pusha
push
xor
inc
xchg
push
adc
pushf
mov
or
js
or
rcrb
in
stc
ljmp
inc
sarl
popa
mov
sahf
xor
stos
push
cmpsl
cmp
xorl
addr16
imulb
jb
sbb
push
rclb
jg
mov
lahf
gs
jno
mov
jmp
or
mov
and
xchg
jb
push
movl
scas
push
xor
mov
insb
js
sub
enter
jns
cmp
scas
and
mov
in
cmp
pop
scas
ds
or
lods
push
mov
pop
and
sbb
xchg
push
in
cmp
and
mov
out
cmpl
cld
jo
mov
or
pusha
cmp
push
call
add
cmpsl
lds
jp
mov
adc
lahf
cmpsl
in
adc
inc
pop
cmpsl
cmp
shl
popa
rcrb
sbb
xchg
jae
adc
gs
pusha
add
lds
inc
mov
outsl
xor
inc
les
mov
cmp
arpl
lds
or
dec
sbb
rorl
test
jb
repnz
mov
push
mov
inc
cmc
rcr
arpl
movl
fisubl
dec
shrb
icebp
mov
add
int3
outsb
jb
push
out
std
push
push
push
mov
fstpl
or
repz
push
dec
or
cmpl
call
mov
movsl
cltd
imul
dec
inc
and
pop
push
movsb
xchg
inc
sub
pusha
sbb
frstor
push
ret
cltd
jo
cmp
dec
popa
imul
hlt
orb
nop
lahf
cmp
int
add
mov
sbb
scas
outsl
imul
jae
inc
mov
pushaw
jo
roll
sahf
mov
aad
xchg
fcmovb
push
jecxz
lret
mov
loop
dec
sub
in
flds
scas
sbb
in
lret
and
clc
adc
mov
sbb
jmp
call
iret
pop
ficoml
jg
popa
xor
sbb
push
test
shl
xor
xchg
or
mov
jbe
sbb
sub
push
add
fistl
movsb
mov
sub
sub
sub
pop
sub
mov
call
iret
ficomps
rcrb
je
clc
or
pop
outsb
add
mov
pop
mov
inc
mov
cmpsb
pusha
pop
xor
out
aas
bound
xor
jp
push
mov
or
aas
add
or
or
int3
imul
mov
lcall
or
addr16
jecxz
mov
mov
add
fmull
cmpsb
inc
pop
test
mov
mov
or
out
ljmp
cmp
and
cmp
ret
or
cmpsb
add
repz
pop
xchg
jns
jecxz
fildl
arpl
xor
out
mov
mov
popa
xorb
xor
rep
nop
scas
xlat
mov
daa
fisubrl
insb
sub
jns
hlt
pushf
pop
enter
mov
cmpsl
mov
mov
jl
ss
or
push
jb
jo
mov
pop
inc
dec
adc
push
push
mov
dec
bound
xor
out
outsb
shlb
pop
mov
xchg
insl
and
aam
sub
inc
notb
gs
aad
addb
test
pop
in
ret
sub
adc
into
and
cmpsb
and
adc
je
out
and
gs
adc
icebp
sub
ljmp
xlat
cmpsl
mov
xchg
out
popa
dec
lea
sbb
aas
sub
jg
dec
out
add
je
mov
mov
insb
push
addr16
xchg
cmpsl
inc
mov
push
mov
pop
fidivrs
pop
or
push
pusha
leave
sahf
fists
or
push
mov
adc
mov
mov
mov
testl
sbb
sbb
out
mov
add
cmc
leave
sub
aas
xchg
add
hlt
sbb
adc
mov
dec
pop
das
enter
adc
cmp
hlt
in
or
cmp
xor
call
inc
pop
jbe
adc
add
sub
adc
dec
adc
add
pop
ss
shrb
js
mov
dec
push
dec
cld
or
jmp
and
mov
mov
pop
fcomi
dec
mov
mov
mov
shrb
cmpsb
add
gs
lret
jecxz
dec
inc
lret
shll
pop
push
xchg
addb
js
jo
sub
outsb
les
lahf
mov
xchg
rcll
xor
iret
xor
jnp
jo
shl
sbb
pusha
ds
in
mov
rorb
pusha
cs
jp
adc
aaa
lea
test
insb
leave
sbb
sub
negb
dec
or
push
sti
and
or
xor
es
pop
pushf
into
enter
mulb
fldt
xchg
mov
jle
or
inc
aaa
in
xchg
fadd
sub
dec
stos
lret
xor
xor
add
or
stc
adc
xchg
sahf
sahf
sbb
xchg
adc
leave
test
fadds
cltd
push
dec
lcall
nop
rorl
xor
inc
adc
mov
push
es
jp
mov
ljmp
fdivl
fnstsw
je
imul
mov
loopne
addr16
inc
mov
sbb
cld
pop
lahf
insl
inc
pop
or
addr16
cmpsb
sbb
mov
scas
mov
mov
inc
sbb
popa
xor
fcom
jmp
sahf
dec
push
mov
pop
pop
clc
mov
mov
sub
pop
dec
sbb
test
and
sub
push
sti
fmuls
fisttpll
rcrb
dec
sbb
frstor
and
jo
sar
outsb
lods
ljmp
lods
sbb
mov
mov
dec
pushf
ss
roll
mov
or
adc
std
jl
call
cltd
stos
popa
decb
in
xchg
or
dec
mov
cmp
sbbb
mov
enter
fdiv
pop
data16
mov
mov
jmp
mov
ss
push
add
inc
fwait
cmp
lcall
or
mov
mov
jl
loope
test
or
testb
push
scas
gs
and
je
cmp
ret
lret
lret
mov
pop
fldenv
jg
enter
aas
int
cmp
repnz
iret
mov
adc
shll
dec
add
je
xchg
shll
and
sbb
mov
stos
hlt
daa
cmp
cmp
mov
mov
lret
mov
or
stos
lret
cmp
mov
sti
sub
loope
mov
mov
cmp
addl
outsl
loope
and
xor
inc
in
mov
ret
sub
xchg
fs
xor
jecxz
or
pop
ret
scas
dec
aaa
sti
shrl
icebp
pop
into
mov
movsb
ja
sbb
or
xor
out
mov
xor
mov
int3
jge
mov
dec
test
mov
gs
imul
sbb
dec
or
mov
ja
imul
out
aaa
dec
getsec
jo
fidivl
dec
jbe
mov
hlt
in
dec
xor
fisubrs
ret
insb
cmp
and
push
stc
ljmp
xchg
sbb
add
or
fisubl
jecxz
lds
mov
push
dec
pusha
xchg
mov
imul
dec
xchg
popf
pop
inc
pcmpeqd
cmp
push
push
jns,pn
and
push
xor
or
mov
leave
andb
stc
mov
std
loope
pop
mov
jp
inc
sbb
lods
push
mov
dec
xor
inc
lcall
mov
jl
aaa
push
fisttpl
dec
inc
aaa
js
bound
jbe
cmp
xor
pop
call
insl
cmp
push
push
test
dec
call
cmp
inc
test
pop
gs
mov
dec
xchg
mov
mov
sub
loope
ret
dec
add
jo
push
push
iret
cs
filds
inc
or
inc
shlb
mov
cmp
mov
push
jne
popa
cs
popf
pop
adc
add
int
dec
scas
std
cld
test
xor
ret
repz
mov
js
aas
scas
stos
movsl
xchg
sbb
enter
ret
xlat
aam
insb
ret
mov
xchg
sub
xchg
mov
dec
and
movsb
popa
or
enter
xchg
addr16
shrb
pusha
mov
sub
xchg
xor
cwtl
stos
push
jl
cmpsb
ror
and
dec
aas
test
adc
add
mov
outsb
sub
and
xchg
pop
rorb
add
aas
or
addl
jg
lahf
mov
dec
push
push
pop
push
daa
fimull
sbb
pop
ret
outsl
mov
std
pop
sub
adc
or
inc
mov
mov
adc
out
lds
inc
shlb
push
cmpsl
mov
or
aam
push
sub
bound
adc
in
movsl
jl
xor
push
test
lds
sub
pop
imul
movsb
pop
fsubr
clc
push
out
jg
aam
add
outsl
or
push
sub
cmp
out
hlt
push
adc
je
leave
cltd
and
fisttpl
shll
lds
xor
rcr
imul
insb
mov
insl
in
xchg
jae
xor
cmpsb
push
and
push
daa
test
out
mov
aam
inc
pop
aam
and
pop
shl
sahf
push
cmp
enter
repz
daa
insl
lea
insb
push
xchg
out
pop
fisttpl
das
jnp
es
mov
jmp
xchg
sub
add
in
mov
xchg
sbb
adc
scas
pop
pop
and
mov
xlat
into
pushf
stc
xor
adc
leave
js
js
cwtl
ljmp
and
dec
cmc
into
aaa
fists
xor
adc
call
dec
inc
bound
jae
lfs
push
jb
mov
push
shrb
mov
jg
pop
xchg
and
cs
scas
into
pop
sbb
aam
mov
aad
aas
repz
mov
mov
cwtl
cmp
cmpsl
xorb
loopne
out
stos
sbb
add
mov
mov
enter
ret
das
mov
cmpb
aaa
loop
ljmp
out
cwtl
negb
jbe
sbb
push
lret
lretw
cmp
insb
js
bnd
inc
or
sbb
mov
mulb
inc
xchg
mov
cld
sub
xchg
int3
inc
lds
dec
cwtl
adc
xor
sahf
ds
sbb
mov
test
scas
das
cmp
adc
jg
jle
out
test
add
adc
push
xchg
inc
mov
mov
stos
sbb
mov
jl
push
frstor
aas
orl
jle
push
aad
mov
push
xlat
movl
imul
jmp
ret
push
mov
data16
cld
sub
add
cltd
sub
add
ss
popa
add
cmp
sub
subb
mov
jmp
les
cwtl
lret
int
pop
add
inc
mov
es
dec
or
mov
sub
jns
imul
js
es
dec
push
xor
pop
jo
sbb
adc
pop
sub
icebp
test
mov
adc
aad
test
xor
dec
sar
enter
cmpsb
mov
unpckhps
and
cwtl
mov
jno
adcl
pop
mov
sub
fildll
add
cltd
cld
pop
clc
scas
ljmp
jno
mov
adc
in
or
push
subl
xor
xlat
inc
push
mov
add
loope
jecxz
cmpsl
gs
std
add
mov
or
xchg
imul
adc
loop
iret
mov
repz
lods
jp
add
aas
add
ss
into
xor
in
or
cmp
sti
loopne
loopne
loopne
call
mov
fs
push
lret
int3
or
adc
mov
subb
in
les
in
stos
push
pop
fistpll
jmp
scas
xchg
ss
mov
mov
sbb
mov
sarl
int
mov
xor
dec
fcom
mov
ds
mov
push
iret
jns
adc
sbb
aaa
pop
ret
iret
add
clc
mov
push
dec
arpl
mov
insw
inc
mov
xchg
sahf
pusha
mov
jle
ret
jo
mov
insl
mov
sub
inc
xchg
leave
lods
repz
dec
fwait
add
sbb
add
popf
pop
dec
lcall
pusha
dec
outsl
sub
xchg
daa
popa
mov
jo
loop
inc
out
cmpsl
push
outsb
xor
pop
push
shrb
cmp
cmp
xor
sub
iret
in
out
not
repz
mov
mov
mov
dec
pop
int
outsb
inc
in
pop
add
in
rorb
fs
movsl
adc
inc
push
push
add
jecxz
ret
rolb
roll
mov
jne
dec
mov
sub
test
mov
mov
in
mov
adc
push
in
jb
cmp
in
fwait
adc
gs
les
out
or
mov
adc
sar
fwait
inc
in
sbb
mov
lret
and
inc
std
mov
mov
or
andl
pop
sbb
aam
out
dec
mov
or
pop
xor
pusha
clc
jle
xchg
aam
icebp
lods
pop
dec
xchg
and
lods
sub
and
outsb
cmp
and
sub
pop
sub
fwait
dec
dec
out
into
push
jecxz
adc
out
clc
jmp
dec
mov
test
lea
mov
sti
aam
cmp
loope
data16
test
test
push
fwait
in
fisubrl
pusha
push
mov
ds
rcrl
cltd
and
sbb
js
add
orl
push
repnz
jns
add
jns
dec
test
xchg
mov
xchg
out
or
jae
adc
imul
and
xor
insl
arpl
sahf
push
in
cmp
jae
jae
inc
fcmovne
hlt
lcall
xlat
and
inc
sahf
jge
sbb
imul
gs
xor
je
subb
adc
dec
in
jg
push
and
mov
loop
fistpll
pop
sbb
push
insb
lock
jne
outsb
dec
insl
pop
movsb
fdivp
jp
mov
mov
lods
ja
cmp
add
pop
sar
test
dec
fsubr
test
cmpsb
cmp
int3
shll
mov
rorl
mov
test
das
divb
cld
insb
mov
mov
fwait
jg
pop
adc
and
push
jg
sub
lret
aas
fistl
outsl
cli
mov
xchg
push
add
push
pop
cmp
es
sub
or
mov
out
movsb
or
inc
ss
pop
mov
lods
in
test
cs
inc
or
ret
push
dec
daa
push
dec
xor
push
inc
test
jg
rorl
roll
imul
mov
cli
data16
lea
lahf
cld
dec
lret
add
fadds
in
out
mov
mov
add
imul
push
add
mov
repz
out
dec
fsubrp
js
pushl
mov
mov
sbb
add
not
xlat
scas
adcl
inc
enter
jge
daa
addr16
and
sbb
pop
ret
xchg
dec
mov
into
pop
mov
xchg
mov
and
xchg
add
aad
sti
mov
add
and
xchg
in
lret
sbbb
idivl
imul
enter
adc
out
ret
outsl
movsb
adc
stos
cmp
cmpsb
scas
mov
in
or
add
jmp
xchg
fdivrs
adc
mov
gs
pop
xchg
cmpsb
push
and
fucomp
cmpsl
aas
cmpsb
mov
xchg
arpl
pop
out
movsb
fisubs
add
pop
mov
mov
jne
cmp
dec
jp
mov
data16
les
lods
pop
push
gs
inc
mov
mov
mov
cld
call
xchg
jb
dec
add
fmull
stc
mov
xchg
dec
stos
scas
popf
sbb
and
fstl
push
iret
fistpll
lcall
dec
jg
mov
mov
xor
inc
sbb
add
add
push
les
mov
movsl
popf
fldt
adc
shlb
cmpb
loope
push
cmp
imull
popf
pop
xchg
call
jno
fcomps
in
mov
jg
je
scas
adc
push
aad
mov
iret
or
inc
cmp
lds
bound
xor
pop
fisubrl
mov
push
divb
sub
xor
xor
pop
loopne
enter
xchg
into
loope
negb
jnp
xorb
cmpsb
ret
lods
lods
andb
hlt
pop
lods
stos
popf
xchg
lds
or
or
test
addr16
push
sbb
mov
out
xor
rcr
jae
sub
cmp
fstpl
pop
mov
in
jecxz
hlt
jmp
or
and
mov
push
sub
sti
pop
or
dec
add
loop
roll
addl
cmp
fsubp
mov
mov
mov
adc
data16
xchg
jl
jmp
int
or
scas
out
out
mov
sahf
fidivrl
pop
int3
stos
data16
fildl
jbe
lods
subl
pop
pop
out
or
inc
jecxz
and
mov
stc
jns
or
mov
dec
scas
es
pop
arpl
mov
lods
jp
dec
cmc
mov
aaa
mov
hlt
and
test
stos
cwtl
shlb
lret
cmp
outsb
fimuls
xchg
fisubs
jmp
lock
sub
push
lahf
clc
or
aas
push
sahf
mov
repz
fistpl
clc
aaa
push
ffreep
jp
pop
cmp
je
xchg
sbb
nop
scas
cltd
sub
movsb
inc
and
cld
sub
popl
pop
mov
mov
es
movb
mov
cmp
pushf
inc
add
daa
mov
mov
push
push
cmpsl
cmp
test
icebp
les
test
xchg
push
aam
lret
out
and
push
fwait
sub
outsb
aaa
cmp
sub
std
dec
sbb
sub
out
mov
jnp
dec
pusha
jmp
mov
shlb
jmp
mov
jl
popf
sub
pop
sbb
movsb
jae
fbstp
mov
adc
pusha
jecxz
mov
into
xchg
lret
test
ljmp
mov
push
adc
xchg
ljmp
push
jg
cmp
jmp
sbb
fstpt
inc
insl
ds
in
sbb
fdivrs
fs
push
jp
inc
das
cbtw
and
jmp
ljmp
fistpll
das
inc
or
adcb
adc
je
insl
cmp
xor
xor
xchg
pop
stos
mov
lret
or
shll
xor
or
daa
adc
push
push
sbb
push
xor
cmpl
lret
mov
cmpsl
gs
pop
repz
int3
dec
in
xor
pushf
ret
dec
xor
cmp
cmp
cmp
pop
push
lahf
scas
cmpsl
outsl
mov
mov
fs
dec
adc
aaa
cmp
inc
jle
ret
daa
pop
iret
cmp
sub
test
stc
out
push
jg
or
mov
aaa
test
inc
cli
fs
ljmp
push
rcrb
jg
inc
add
pop
xchg
int3
enter
sub
fcoml
jg
add
adc
pop
and
lds
lock
in
mov
mov
jmp
xlat
bound
imulb
dec
jnp
iret
or
cmc
dec
jl
pop
xchg
push
cmp
in
mov
pusha
add
sbb
cmp
cmc
push
ss
inc
mov
and
daa
sub
xchg
pop
mov
call
lcall
sbb
inc
jnp
lret
call
out
mov
inc
rorl
inc
inc
and
popf
dec
xchg
in
ja
xor
cmp
popf
ret
stos
xor
out
xor
lahf
std
fcom
fldenv
pop
loopne
pop
jecxz
mov
adc
push
in
dec
inc
out
push
mov
pop
in
pop
mov
stos
lret
test
movsl
mov
mov
mov
enter
or
pop
pop
fs
mov
xchg
xor
jmp
sbb
inc
mov
jp
fdivrl
push
xorl
xchg
push
and
xor
mov
jmp
cmpsb
je
jns
lds
je
inc
lock
sbb
rcr
aas
and
lds
fwait
cmp
nop
lock
test
lahf
pop
push
bound
mov
xor
test
mov
rcl
pop
sbb
xor
ret
add
outsb
jl
dec
jns
and
jmp
sti
pop
call
call
add
subl
xchg
jp
sbb
jne
ja
mov
pop
or
cs
loopne
ljmp
mov
adc
mov
and
adcl
push
xor
das
aas
xor
fstp
lahf
jne
cmp
jg
clc
test
outsb
pop
dec
pusha
xor
repz
pop
bound
and
bound
nop
loope
push
or
popl
lods
outsl
cmpsl
rolb
dec
int
into
insb
jg
imul
push
dec
push
daa
call
mov
sub
add
call
jae
lea
jmp
es
lret
jns
out
stc
div
mov
push
push
pop
loopne
jge
adc
mov
push
fisubrs
popf
sbb
cmp
xchg
daa
lret
pop
loopne
xchg
pop
or
repnz
cmpsl
or
cs
pushf
xlat
push
dec
mov
pushf
in
test
mov
push
fsubrl
mov
push
cs
flds
fcompl
vmovmskps
pop
cmpb
sbb
addr16
test
std
sahf
push
jnp
in
or
sub
cmpb
shll
inc
pop
add
sbb
lahf
mov
or
sbb
decb
mov
movsb
add
insb
and
adc
push
out
jge
push
inc
mov
std
adc
and
imul
mov
pop
and
jle
movsl
les
idivb
dec
sub
sub
test
xchg
jle
cli
aas
ficompl
test
sub
stc
psubusb
icebp
add
cli
cmp
push
cmp
loope
dec
or
frstor
mov
js
push
movsl
lret
bound
mov
xlat
into
pop
imull
leave
pop
push
nop
fbstp
nop
lahf
inc
les
xchg
mov
outsb
push
cs
addr16
add
out
cld
cmpsb
mov
fdivrp
sarl
sahf
xor
sub
and
nop
sub
jmp
nop
lods
jge
pop
cmp
mov
pop
ja
sbb
dec
mov
pop
cmp
ret
and
mov
jnp
or
mov
dec
scas
pop
aam
pop
scas
sbb
xor
iret
adc
lcall
add
loopne
sbb
ss
pop
push
call
sbb
cld
fcompl
cwtl
mov
inc
xchg
int3
ret
loopne
ljmp
mov
movsb
outsb
nop
mov
sbb
bound
pop
add
push
mov
and
fwait
daa
or
movsb
rclb
xor
cmp
adc
or
fwait
sbb
mov
lds
decb
movsl
cld
ljmp
popa
pop
paddd
fisubs
or
aaa
jae
jns
and
xchg
inc
add
sahf
xchg
jle
jecxz
insb
pop
pop
dec
pop
mov
pop
push
test
leave
in
jge
push
sbb
in
push
shll
cwtl
adc
in
loop
enter
js
jno
adc
pop
or
imul
mov
cmp
mov
cmp
frstor
sbb
inc
popa
inc
mov
out
stos
les
movsl
cld
arpl
push
ds
cmp
adc
mov
pop
jae
ss
lret
popw
ss
in
fstpt
cld
outsl
pop
push
sbb
imul
test
outsb
jb
in
movsl
add
iretw
aas
pop
int3
mov
add
xor
mov
out
stos
loop
jns
in
sarb
dec
int
loope
mov
xchg
dec
or
mov
sbb
adc
negb
lock
xor
or
inc
enter
pusha
dec
adc
cmp
sbb
sub
sbb
mov
jne
cltd
stos
mov
xchg
jmp
add
jnp
mov
out
add
mov
jns
add
mov
push
pop
mov
imul
sub
adc
jecxz
ror
xor
loop
cld
les
cmp
aam
fisubrl
sbb
cwtl
or
pop
sbb
jae
adc
test
ret
cld
dec
vcmppd
mov
jle
ret
out
inc
arpl
insl
sti
outsl
sahf
jne
jl
pusha
dec
mov
mov
ret
std
cmp
xchg
xor
scas
insb
or
jns
lea
ss
sbb
push
and
rolb
cmc
cmpsb
or
mov
pop
xchg
jno
xor
inc
add
inc
popa
popa
mov
out
cmpsl
push
xor
clc
sbb
jnp
mov
inc
fimuls
into
dec
iret
movl
test
sbb
xchg
roll
xor
or
in
fsubrl
popa
rorb
test
shr
sbb
push
cmpsl
push
jnp
gs
and
mov
movsl
aaa
movsl
xor
insl
add
mov
xchg
mov
mov
pop
xlat
mov
shll
jo
fists
pop
ds
inc
int3
mov
outsl
inc
sbb
fiadds
cmpsb
push
add
jns
in
cmpsl
movsb
dec
icebp
dec
jle
idivl
scas
fst
data16
fsts
push
gs
xchg
scas
adc
xchg
insb
imul
add
mov
xor
pop
xor
movhps
adc
mov
nop
mov
jl
push
xchg
js
push
cmpsl
scas
stos
mov
xchg
xchg
rcr
cwtl
mov
in
inc
xor
repnz
xor
cmp
loop
in
xchg
push
sub
cld
mov
lcall
incb
inc
sub
jg
ljmp
inc
push
adc
mov
dec
jb
jp
lret
mov
inc
and
setne
or
mov
hlt
and
push
inc
cmp
ljmp
cmp
mov
push
lret
leave
or
cli
pushf
xchg
ss
sahf
lret
mov
int
imull
push
test
push
xor
pop
fsubrs
mov
mov
out
ss
or
dec
pop
xor
jne
jl
push
les
mov
pushf
filds
adc
pop
push
pop
gs
dec
hlt
inc
or
movsb
testb
test
jecxz
ljmp
enter
repz
clc
xor
nop
add
push
aad
jle
lods
cs
jb
xor
scas
scas
ret
inc
rcrb
into
xchg
outsb
jecxz
in
pop
mov
or
push
cwtl
xor
nop
call
andb
pop
pop
outsl
mov
mov
push
fsubrp
mov
pop
mov
jno
in
arpl
or
mov
test
addr16
pop
int3
xchg
call
lcall
ficompl
pushl
mov
pop
sbbl
push
xchg
jno
test
push
jne
dec
popf
fists
stc
loopne
sub
sub
and
pop
pop
jl
ret
daa
lcall
dec
push
sub
cmp
xchg
out
pop
jo
mov
call
push
rorb
cmp
jo
pop
scas
jae
adc
mov
cmp
sub
mov
fadds
push
imul
das
sub
xchg
sbb
pop
xchg
pop
or
cli
popf
setns
dec
adc
lret
aam
out
repnz
movsl
js
lds
fldenv
call
fisttps
jle
test
mov
mov
inc
test
inc
test
pushf
jl
cmp
repz
and
sub
mov
and
in
mov
mov
in
cmp
lahf
popa
xchg
xor
decb
jb
or
push
in
sub
pop
adc
push
dec
int
sbb
das
jo
dec
jae
push
les
adc
mov
out
and
and
orb
pop
mov
xchg
lods
cld
jle
mov
adc
push
fdivl
adc
mov
xor
rorl
fsubrs
mov
lods
ficomps
xchg
in
imul
mov
mov
mov
std
mov
mov
fwait
test
clc
popf
xlat
repnz
cmp
mov
ficoms
xlat
sbb
add
insb
testb
test
aad
in
es
dec
out
ret
and
mov
mov
cmp
mov
sarl
ljmp
in
shll
cmpsb
in
pushf
mov
sbb
push
sahf
ret
pop
add
insb
pusha
dec
ret
dec
add
js
cmp
adc
adc
add
lahf
js
sbb
push
arpl
dec
enter
test
jbe
xor
sbb
rorb
dec
out
leave
rcl
cmp
mov
sub
repz
enter
mov
stos
loop
xor
testb
lret
jg
inc
cld
pop
and
mov
push
adc
adc
adc
push
clc
roll
rcll
fs
icebp
pop
jo
out
je
push
fldenv
fisttpl
mov
clc
push
popf
stos
add
out
outsb
xchg
adc
rolb
lret
mov
cmp
jmp
shr
ds
mov
cmp
lea
mov
int3
es
dec
into
lret
sbb
pop
out
and
jno
popl
push
mov
lret
and
adc
leave
rolb
mov
test
cwtl
mov
xor
daa
mov
lods
cmp
sbb
sub
push
aaa
fwait
in
add
add
mov
scas
mov
shll
stos
dec
mov
std
aaa
loope
nop
xchg
or
push
repz
dec
cwtl
mulb
sahf
pop
cld
mov
dec
push
adc
pop
cmpsb
mov
jb
cwtl
loop
aam
in
push
pusha
pop
loope
cmp
and
pop
cmpsb
in
aas
adc
sbb
call
or
mov
fidivs
mov
mov
loope
call
lahf
xchg
fs
out
repz
sub
repnz
xchg
lea
push
cwtl
sbb
adc
int
loop
jmp
inc
mov
data16
in
dec
sbb
sbb
rolb
xlat
icebp
outsl
push
cmpsl
leave
mov
mov
inc
fadds
in
es
sbb
adc
leave
cmp
xor
pop
sub
xor
xchg
sbb
ds
ficompl
dec
pop
sbb
fsubrs
hlt
mov
jne
test
ret
iret
mov
aam
jp
fdivrl
fisubrl
sbb
scas
add
mov
jg
icebp
cld
mov
out
jae
out
lret
clc
pop
fwait
lods
dec
sub
mov
maskmovq
dec
and
dec
les
jnp
shlb
cmp
fdivrs
sub
test
in
jo
ret
and
outsl
xchg
jb
cmp
stos
loope
fists
fcompl
lock
std
shrl
jne
cmp
scas
sarb
aad
jmp
mov
in
xchg
in
out
dec
scas
dec
loopne
rorl
jg
inc
aad
mov
mov
push
and
bound
pop
fwait
cli
pop
mov
lret
lret
add
pushf
inc
xchg
xor
mov
pusha
imul
test
shrl
push
cmp
xchg
out
ja
push
aas
outsb
cmc
dec
mov
dec
shrb
aaa
rolb
mov
lret
inc
nop
sbb
ret
scas
mov
cmpsl
adc
cmp
int
cmp
sbb
out
jecxz
pop
add
add
call
and
inc
ret
jp,pn
dec
das
mov
or
xchg
adc
movsb
and
inc
bnd
loope
cmp
dec
aas
push
adc
jmp
sbb
lods
inc
push
int
cmp
inc
inc
clc
mov
imul
das
in
out
ret
mov
dec
sbb
jmp
sahf
jno
das
or
jle
xor
mov
mov
scas
out
mov
pop
mov
add
ljmp
jno
sahf
mov
fildll
mov
jge
sahf
or
mov
vinsertf128
cwtl
sub
dec
imul
jae
out
cltd
inc
jge
lahf
xchg
sbb
adc
xchg
add
xor
adc
mov
sbb
adc
adc
loopne
xor
fs
mov
outsb
sbb
mov
stc
ljmp
ret
test
std
xchg
mov
cld
dec
out
adc
ret
jnp
inc
or
loope
dec
fadds
push
jle
sbb
xchg
ret
mov
stc
mov
pop
divl
bound
rcrl
xchg
lds
pop
lret
or
pop
std
pop
daa
push
push
mov
or
sub
test
addr16
ds
push
sarl
gs
jmp
sarl
inc
bswap
jae
in
bound
mov
mov
sbb
xchg
pop
mov
out
xor
je
xor
dec
ds
jae
mov
fldl
dec
pop
rolb
aad
mov
push
out
inc
xchg
add
dec
xchg
je
in
jecxz
adc
movsb
pop
add
sbb
sbb
cld
pusha
xchg
rorl
jle
mov
gs
adc
pusha
int3
or
scas
cmpsb
mov
dec
xor
clc
sbb
push
xchg
into
pusha
bound
push
adc
xchg
add
fisttpll
lds
test
xchg
mov
mov
mov
lcall
in
mov
sbb
jae
into
iret
test
inc
sub
cmp
ficoms
pushf
inc
jecxz
mov
outsb
or
xor
xlat
dec
jle
lret
movsb
dec
xor
adcb
repz
and
pop
add
insb
sub
in
test
and
enter
int
imul
fstl
lahf
jno
pop
mov
adc
sbb
cli
mov
pop
out
lcall
dec
add
pop
shlb
sahf
add
hlt
aam
nop
shlb
pop
jo
das
cmp
jmp
lock
insb
dec
xchg
mov
loopne
clc
inc
popf
call
cli
sahf
pop
jae
mov
cmp
adc
add
ret
gs
pop
gs
xchg
adc
push
xor
xrelease
push
test
push
push
add
sub
ds
pop
in
neg
jno
and
pop
mov
mov
cli
mov
push
adc
lods
push
jmp
lock
loope
push
push
lcall
jecxz
dec
in
or
sub
pop
aas
sbb
leave
pop
pop
or
mov
xor
jmp
loope
lds
xor
jg
fcmovu
ret
push
dec
mov
sub
xor
cli
inc
daa
lods
negl
subl
dec
call
movb
push
mov
sub
sbb
push
push
jle
add
jb
mov
imul
into
clc
sub
in
mov
insl
sbb
jno
pushf
sti
or
pop
pop
add
test
pop
test
xor
nop
xchg
adc
out
sbb
dec
shr
pushf
adc
popf
rcrb
out
movsl
ja
xchg
jge
cmc
xchg
sub
pop
mov
cli
push
mov
xlat
adc
in
jle
push
add
jecxz
push
insl
jg
movsb
jmp
pusha
imul
jl
add
scas
bswap
or
int3
xor
push
add
push
repnz
lea
mov
ss
xchg
mov
inc
aas
out
and
sub
loope
or
mov
mov
ficoml
call
add
sub
sbb
shlb
and
in
xchg
and
lret
jl
mov
arpl
mov
into
mov
ror
outsb
leave
or
repnz
outsb
mov
xor
or
push
test
mov
cwtl
dec
addr16
adc
dec
jmp
mov
lods
xchg
push
pop
push
mov
insl
ss
in
xor
jnp
jl
mov
pop
imul
jmp
lret
lods
and
and
fdiv
fstp
in
push
fimuls
pushf
mov
pop
dec
scas
cmp
add
fwait
mov
push
sub
test
cmp
mov
test
pop
popf
mov
iret
insb
sti
adcl
pop
daa
test
xchg
stos
lock
aad
pop
sbb
mov
das
adc
adc
push
lea
inc
jae
sbb
out
push
popf
cmpsb
pop
mov
mov
lret
adc
popf
cld
jbe
jo
stc
leave
dec
jg
cwtl
mov
xchg
xor
mov
aam
sbb
mov
fiadds
test
aad
cmc
sbb
pop
mov
inc
pop
pop
lret
and
test
lds
das
mov
dec
ret
add
or
clc
pop
fwait
sbb
or
add
mov
push
jecxz
jbe
test
nop
inc
jecxz
mov
dec
inc
sub
std
fdivs
enter
push
adc
insb
aaa
into
push
add
or
push
pop
jle
jmp
push
stos
insb
pop
push
push
xlat
sbb
xchg
dec
jp
cmp
sub
xor
fsts
lahf
test
lods
dec
jns
mov
jl
lret
movb
loope
addl
fldl
pop
dec
sti
push
sti
fimuls
cli
mov
js
cs
loopne
sahf
dec
pop
mov
inc
inc
add
dec
pop
xchg
int
and
cld
cmp
jg
fwait
data16
jne
into
scas
mov
sbb
and
jnp
and
or
pop
scas
outsl
jle
xor
ds
lret
sbb
dec
mov
repnz
ljmp
cmp
imul
mov
mov
pop
pop
push
fadd
push
pop
jnp
lds
jg
fidivl
cmp
jge
ret
mov
xchg
add
mov
cs
xchg
fstps
push
mov
testl
and
mov
dec
insb
xchg
cmp
mov
lds
outsb
fwait
jns
ss
push
addr16
push
daa
mov
cmp
adc
cmpsb
pop
mov
test
xchg
iret
mov
xor
dec
mov
xor
in
push
mov
dec
mov
dec
enter
xor
cmc
push
dec
imul
and
movsl
fcompl
mov
outsl
cmp
popa
fdivrs
mov
adc
lcall
jecxz
mov
gs
sub
lds
pop
popf
out
xor
jae
inc
sar
lods
fisubl
leave
mov
inc
js
ficoml
dec
in
shlb
jge
xchg
lods
push
xchg
cmp
or
les
jne
ret
jns
xor
dec
pusha
gs
sub
fs
cwtl
test
push
or
hlt
cmp
xchg
pop
daa
es
pop
push
xor
in
outsb
out
loopne
xchg
push
popf
inc
jmp
es
shrb
out
sahf
fwait
xor
xor
xchg
ds
dec
pusha
sarb
jp
fucomp
mov
and
xor
inc
clc
xchg
mov
push
insl
je
mov
rorl
pop
mov
fnclex
cmp
mov
adc
xchg
rolb
test
dec
lar
jns
call
adc
pop
dec
adcl
push
mov
call
jp
into
imul
pop
jb
push
push
xor
sub
adc
insb
lea
repnz
nopl
mov
cld
sub
add
jb
fdivp
and
sbb
es
cmp
mov
cmpsl
inc
sub
add
or
repz
push
pop
pop
jle
sbb
popf
outsb
adc
mov
inc
mov
es
pushf
jg
xchg
mov
hlt
or
and
dec
cmc
and
cltd
push
xchg
lds
mov
shlb
push
xlat
lods
es
aas
jne
out
into
es
inc
xchg
mov
inc
adc
mov
cmp
test
das
inc
and
lcall
shrb
bound
and
mov
insb
cmp
fidivrl
jge
mov
fucomp
test
lds
inc
sub
pop
or
in
jo
mov
adc
std
sarb
dec
int
sbb
sti
int
push
fisubl
js
iret
push
lahf
or
lret
lds
jne
mov
or
add
rorb
scas
daa
cmpsb
outsl
je
mov
sbb
rcll
jp
mov
or
imul
aaa
mov
push
pushf
out
lods
push
divb
push
adc
fmull
cmp
xor
call
dec
or
sub
fmul
lods
test
cmp
loop
aad
push
inc
mov
stos
adc
mov
jo
insl
ret
mov
inc
lods
adc
int
and
xchg
jecxz
lcall
jmp
stc
insl
cmc
cmp
idivl
sbb
fsubrl
or
pop
int3
pop
push
lods
insl
push
sbbl
sti
inc
pusha
xchg
lock
push
in
mov
lock
mov
es
mov
adc
push
dec
ds
stos
lock
rcll
push
mov
inc
sarb
sbb
aam
shll
pop
stc
fisubrl
fstpt
push
xchg
call
in
jno
xchg
mov
pop
das
sbb
dec
xchg
inc
es
dec
sub
lods
inc
cs
sub
adc
cmpsl
lcall
dec
xchg
jb
repnz
adc
add
inc
sbb
in
inc
or
cs
jmp
pop
jle
int
xchg
in
loope
incb
jecxz
imul
xchg
xor
mov
sub
cld
out
sub
add
jmp
insl
mov
dec
ret
test
inc
loop
movl
mov
addr16
test
sub
mov
mov
xchg
cmp
xchg
repnz
and
pop
testl
jp
test
std
stos
pop
out
lods
jle
and
bound
push
popf
movsl
mov
je
fwait
add
outsl
xor
mov
sbbl
jecxz
es
out
jae
mov
add
add
imul
xor
push
sub
ret
test
fiaddl
leave
mov
stos
inc
xchg
xlat
fwait
std
sub
xchg
aad
iret
stc
jne
jmp
xlat
inc
mov
inc
incl
std
add
xor
das
pop
add
dec
and
aam
lods
sbb
enter
dec
xchg
leave
cmp
and
lret
pop
test
add
sub
lcall
dec
in
inc
and
ds
mov
pop
fiadds
lahf
sub
stos
inc
mov
add
test
cmp
stos
push
jmp
fs
xor
dec
pop
arpl
and
push
mov
xchg
cmp
insb
mov
test
cmc
dec
xchg
mov
mov
sahf
jge
dec
es
std
xchg
jecxz
sti
jbe
cmp
movsb
ljmp
pop
aad
es
jg
xchg
push
lahf
sarl
rolb
data16
inc
inc
xchg
fadds
dec
mov
add
icebp
movb
popa
dec
xlat
mov
xchg
jns
sub
cmp
dec
jae
mov
or
push
ds
and
dec
dec
jmp
add
cmp
pushf
push
js
rcl
xor
repz
dec
repnz
lock
mov
inc
xor
xchg
sub
int3
jo
fnstenv
push
mov
in
das
js
jns
das
jb
mov
clc
xchg
mov
scas
dec
xchg
shl
lret
mov
cmpsb
aaa
push
subl
or
nop
dec
mov
mov
push
call
mov
jg
dec
pop
or
and
loop
adc
push
stc
xchg
xchg
lcall
or
or
xchg
push
and
xchg
mov
shlb
leave
bound
jo
aad
popa
iret
sti
dec
and
fdivs
arpl
mov
sub
jns
in
add
pop
loop
and
xor
cld
xlat
mov
aas
adc
jg
cmp
cltd
mov
enter
or
cmpl
pop
adc
addr16
push
push
mov
jne
js
clc
xchg
shll
sbb
cld
sbb
pusha
in
xchg
cmp
fnstcw
hlt
cmpsl
test
inc
cmpsb
shr
xchg
jns
and
adc
movsb
and
test
movsb
cmc
mov
sahf
xchg
dec
inc
je
dec
addr16
dec
mov
push
pusha
out
mov
add
int
loop
inc
fmull
xchg
mov
jge
cld
mov
and
loopne
or
sahf
adc
sub
ret
hlt
outsl
and
inc
mov
out
push
push
xor
and
xchg
and
inc
test
fdivrp
inc
addr16
scas
movsl
jbe
dec
mov
stc
sahf
add
cmp
outsb
sub
or
bound
gs
or
out
pop
divl
jl
outsb
sbb
cli
gs
and
adc
jle
hlt
ss
mov
jno
add
pushf
and
aas
incl
mov
jle
sbb
pop
imul
xor
jle
ret
pop
test
xchg
and
jne
sub
stos
add
mov
out
adc
cwtl
xchg
lods
fldenv
ficomps
fimull
push
add
out
js
test
js
mov
in
adc
std
stos
jle
mov
pop
push
mov
mov
adc
cld
les
xor
dec
jmp
fdiv
add
lods
ds
mov
aam
lods
popa
lock
stos
rolb
in
push
arpl
test
or
jle
pop
adc
mov
scas
and
jbe
or
in
shl
int
adc
xor
cmp
xchg
aad
dec
dec
mov
fdivrs
cmc
mov
push
fisubrs
inc
add
outsb
faddl
aad
dec
stc
xor
test
jns
inc
outsl
jb
icebp
or
sub
xchg
adc
fbld
push
in
lcall
inc
aas
mov
cltd
push
push
in
mov
add
out
dec
cmp
daa
mov
lods
xchg
inc
push
sub
cwtl
mulb
outsb
pushf
mov
cmp
fiadds
mov
mov
mov
or
fldl
xchg
cwtl
ret
lds
cmpsl
loop
jg
or
les
dec
inc
jo
mov
lcall
inc
test
jecxz
add
insl
jecxz
cs
push
mov
mov
scas
xor
hlt
or
roll
lcall
iret
fiadds
imulb
aad
mov
fisubrl
push
outsb
jle
push
aad
imul
or
les
lret
arpl
lcall
int3
sti
push
xor
cmpsl
pop
rcrb
sub
sbb
insl
int
and
popa
lds
sbb
sarb
loop
je
sub
mov
loope
xor
mov
push
fbstp
fsubp
call
pop
xchg
mov
push
jno
mov
xor
popa
stos
inc
ret
jb
xchg
adc
mov
out
sbb
push
movl
jle
aaa
loopne
popa
jo
aaa
outsl
or
pop
mov
iret
fdivrs
sub
stos
cmpsb
pop
sbb
xchg
or
arpl
es
pop
insb
lret
dec
lds
sub
jp
pop
scas
lcall
icebp
mov
xor
frstor
pop
adc
stos
iret
outsl
jge
std
call
fimull
aas
adc
push
mov
mov
jge
ds
out
mov
addr16
and
add
add
xorb
idivb
ds
ficomps
jmp
mov
ds
xor
ljmp
push
xlat
pushf
mov
and
xchg
loop
and
pop
sub
aaa
shrl
sub
push
jmp
inc
movsb
jp
movsl
gs
dec
xchg
pop
sub
mov
repnz
sar
adc
cmp
cld
dec
loopne
inc
cmpsb
in
xchg
stc
pusha
push
cltd
sarb
push
ficompl
push
cli
mov
xor
push
in
pop
imul
sub
push
rcll
inc
cmc
insl
leave
into
inc
lock
ja
int
sti
leave
out
es
sub
jecxz
xchg
pop
jge
data16
iret
sub
adc
sub
or
das
push
mov
jb
rclb
stc
inc
pop
rcll
xchg
fbld
dec
add
push
js
and
pop
and
mov
neg
mov
sbb
push
mov
dec
mov
adc
aad
mov
test
adc
push
lds
pop
inc
xor
mov
cmc
mov
sbb
insb
je
or
sbb
xor
cs
push
pop
loope
loopne
jmp
push
aaa
out
adc
mov
xor
xchg
icebp
cmc
inc
adc
out
sahf
mov
xchg
pop
and
cld
arpl
xor
sub
arpl
mov
xor
cmp
sbb
out
loop
xor
mov
xchg
aam
cmp
mov
lods
shrl
jnp
or
test
xor
sub
xchg
lret
in
lods
fwait
or
hlt
pop
sub
add
xor
mov
inc
and
ret
push
mov
push
rorb
dec
int3
aas
stos
pop
jecxz
inc
pop
or
mov
push
int
inc
cwtl
dec
pop
pop
or
lret
add
and
nop
clc
xchg
je
rolb
mov
insb
loopw
sub
sub
mov
imul
add
inc
xorb
mov
out
jae
add
mov
fs
fiaddl
sub
mov
icebp
ljmp
test
add
aad
in
sub
mov
aaa
mov
mov
or
mov
iret
subl
push
pop
or
mov
cmp
jne
add
add
cmp
adc
mov
stc
lea
xor
inc
ljmp
mov
mov
sub
or
lahf
pushf
and
mov
sub
sub
push
xor
icebp
pop
jle
loop
gs
adc
mov
cmp
add
aam
push
adc
mov
jns
pusha
or
inc
shll
adc
xor
std
dec
sbb
mov
fld
push
xchg
icebp
shrl
inc
mov
sub
out
into
sti
loopne
out
leave
orl
lea
push
test
je
xchg
std
pop
cwtl
cmp
in
push
sub
mov
xor
cmpsb
cmp
jae
leave
pop
movsb
dec
test
imul
and
andl
or
loop
inc
xchg
lcall
cmpsb
movsb
inc
fcompl
clc
mov
add
scas
hlt
cwtl
push
stos
popa
jbe
jno
insb
loopne
lods
mov
fcos
dec
xchg
decl
sub
or
jl
enter
add
in
arpl
das
mov
pop
mov
cmp
push
out
aaa
lock
pop
rcll
push
das
push
inc
push
fs
enter
adc
add
adc
popf
popa
pusha
and
test
dec
iret
push
mov
fnstenv
mov
xchg
mov
test
mov
mov
aad
dec
stos
scas
dec
in
inc
xchg
daa
icebp
in
fisubrs
adc
in
push
bound
mov
aaa
push
cld
insl
insl
loop
in
and
push
inc
dec
stc
or
aam
leave
push
test
xor
fsubrs
and
push
adc
sti
test
push
sub
andb
or
subb
lods
mul
mov
lock
in
jns
scas
or
je
cmp
push
adc
sbb
lea
int
pop
push
mov
adc
cmpsb
mov
outsl
es
cmp
iret
jnp
insl
mov
fildll
mov
adc
mov
insb
push
pop
add
push
jp
loope
test
loopne
lret
dec
jo
push
popa
or
pop
gs
mov
repnz
gs
fcompl
mov
pop
faddp
dec
gs
ror
or
adc
sbb
adc
sub
xchg
movsl
lcall
ja
or
jne
scas
or
loop
push
mov
cs
cld
in
push
mov
lret
xchg
aad
idiv
scas
test
xlat
xor
insl
cld
push
mov
sbb
out
xorb
call
in
sub
add
mov
mov
psrad
or
arpl
inc
xchg
les
out
mov
inc
aam
leave
adc
das
adc
fwait
addr16
fdiv
ret
add
and
sahf
xor
sub
or
xorb
adc
leave
mov
in
mov
mov
es
insl
push
mov
push
mov
sub
adc
pushf
lock
push
inc
add
std
push
bound
fyl2xp1
jnp
cmc
sub
fsubs
mov
insb
movsl
test
xchg
jle
test
in
ds
jne
sbb
sbb
arpl
and
mov
loop
mov
imul
in
movsl
pushf
jg
sbb
dec
sub
lcall
daa
aam
shll
pop
mov
test
xchg
fdivp
out
or
jbe
cmpsl
les
stos
into
and
mov
fwait
and
or
push
movsl
test
mov
sahf
push
xor
mov
cmp
jnp
mov
repnz
cmpsl
je
mov
cmp
jbe
cwtl
and
stos
xlat
fucomip
fs
aad
fildll
pop
push
xchg
sbb
test
push
cmc
mov
dec
sub
dec
inc
pop
cmpsb
cmp
jae
xor
in
icebp
cmpsb
xchg
sar
and
adc
mov
imul
push
rcrb
in
movsl
fwait
sarb
jp
iret
mov
lods
sub
insl
popf
xlat
xchg
pusha
hlt
sbb
inc
addl
dec
cmp
cmpsl
shr
cmp
shll
movups
pop
les
xchg
rcrl
push
inc
in
stc
mov
frstor
arpl
popa
xchg
jae
xchg
push
aam
push
mov
mov
jl
shrb
gs
scas
pushl
idivb
mull
stos
mov
scas
cwtl
popa
jmp
das
aaa
lock
imul
adc
fmul
jo
xchg
ja
pop
rcrl
mov
popf
or
in
gs
icebp
push
xor
cmc
push
fbld
daa
pop
cmp
or
aam
sbb
sahf
in
sti
mov
xlat
fists
stc
push
aaa
xchg
rcr
loope
push
mov
push
mov
ljmp
loope
notl
out
mov
xor
mov
clc
push
xor
stc
xchg
mov
shrb
mov
test
jecxz
adc
jno
mov
in
jne
mov
sarb
pop
mov
inc
lds
das
jns
stos
addr16
ljmp
inc
dec
test
shll
jmp
xor
add
mov
addr16
pop
adc
push
out
xchg
sub
insb
mov
fwait
mov
fsubrp
sti
movsb
jns
jnp
pop
xor
jnp
push
or
pop
xor
push
sarb
mov
mov
test
adc
movsl
scas
jp
sbb
test
insb
es
dec
jge
xlat
cmpsb
adc
inc
imul
fisttps
gs
cmpb
xor
call
cld
out
sub
stos
imul
inc
mov
enter
or
pop
cwtl
push
andl
jg
xchg
mov
jae
add
pushf
lock
dec
pop
nop
or
js
ficoms
std
dec
bound
push
cs
xlat
shl
das
mov
int
push
mov
ljmp
xor
pushl
cld
and
fstl
subl
scas
stos
xor
mov
cmp
xchg
cmc
shrb
idivl
xor
stc
jp
sub
das
frstor
lea
push
movl
mov
lret
push
out
or
mov
sbb
sbb
cmp
or
popf
mov
idivl
xor
lods
mov
sbb
loop
xchg
dec
ret
xchg
lret
loopne
lahf
aad
push
add
ss
fs
sti
adc
inc
out
jmp
xchg
push
orl
push
mov
sub
push
test
push
xchg
jl
icebp
sbb
xor
outsl
scas
imul
xlat
icebp
bound
mov
push
mov
mov
stos
jno
jl
sahf
das
push
xchg
fimuls
adc
fs
or
sub
nop
push
scas
pop
or
and
loop
out
push
leave
mov
fsub
shll
dec
mov
fdivl
and
xchg
shr
mov
iret
pop
mov
jb
mov
aad
sub
push
cli
scas
mov
lret
fimull
add
pop
push
pop
imul
mov
nop
enterw
outsl
jle
ret
mov
pop
int
aaa
mov
jae
xchg
lret
mov
jb
sub
sbb
adc
mov
jnp
fcoms
lods
inc
pop
mov
rcrb
mov
jbe
or
in
and
dec
jo
inc
mov
mov
cmc
repz
fnstsw
jae
dec
popf
jg
xor
movsb
ret
loopne
xor
ret
mov
scas
loopne
sub
pop
mov
xchg
fisubrl
jo
fsubrl
popa
out
xchg
xor
mov
testb
jae
cmp
or
ljmp
sbb
push
xchg
gs
jns
insb
push
push
nop
rcrl
loopne
push
push
outsb
int3
push
inc
cltd
scas
cmp
pop
addr16
cmp
dec
and
in
pop
jo
inc
sub
popa
js
test
mov
mov
add
data16
add
sarl
pop
add
outsl
mov
xchg
push
in
aaa
mov
sbb
and
addb
hlt
mov
dec
lods
push
and
in
cli
dec
syscall
fisttpl
or
jbe
ficomps
outsl
out
cmp
in
cli
cmpsb
jp
mov
xchg
das
inc
mov
cmp
pop
aad
clc
mov
sub
and
sub
push
xchg
sti
inc
jns
jg
out
mov
mov
aas
dec
je
mov
inc
imul
mov
outsb
jg
ljmp
fnsave
mov
jnp
sbb
mov
cmp
repz
fisttps
add
fbld
and
sbb
lret
in
bound
xor
addb
mov
enter
movsb
das
and
pop
cmp
push
repnz
add
push
xchg
fwait
das
lock
adc
inc
call
scas
add
mov
int
adc
or
ret
adc
aaa
popf
and
mov
stc
stos
jecxz
pop
sub
mov
jl
in
outsb
pop
mov
mov
negb
sbb
scas
mov
mov
add
xlat
pop
or
sahf
push
clc
cmp
pop
popf
push
inc
fcom
fiadds
mov
jle
je
cmp
lret
daa
cmp
and
mov
push
sbb
inc
andl
in
lds
xor
inc
shl
inc
cmpsl
stos
mov
lahf
test
lahf
mov
fucomip
scas
jl
aas
fimull
call
jns
mov
ret
incl
inc
in
cmp
mov
inc
movsl
add
jo
int3
jne
cmp
shlb
and
test
dec
pop
adc
xchg
lods
push
or
sbb
sbb
push
mov
jbe
data16
dec
arpl
mov
cmc
mov
cmp
push
push
out
jne
test
iret
loop
imul
pop
sub
cwtl
pop
jae
bnd
push
subb
arpl
fsubr
mov
das
incl
gs
lret
jno
xchg
adc
cmc
aaa
jl
sbb
jp
testb
aad
notb
inc
xor
out
sub
mov
cmpsl
pop
or
sub
add
adc
push
les
adc
test
hlt
jge
daa
ljmp
lahf
fmull
mov
fwait
or
pop
adc
fists
into
jb
adc
pop
and
cmpsb
adc
adc
add
mov
ficomps
mov
jle
inc
mov
pop
mov
repnz
jno
and
cmpsb
fildll
pop
mov
shlb
ss
jecxz
scas
sahf
adc
mov
notl
xor
pop
mov
rclb
popa
xchg
aas
out
adc
dec
fimuls
push
pop
and
pop
sarb
push
addl
add
lahf
movsb
daa
add
pop
movsb
mov
adc
jno
daa
into
xor
mov
sbb
xor
lret
pop
subb
cmp
xor
ja
xor
xchg
sub
jl
bound
lods
repnz
pop
or
jne
jge
popf
arpl
jbe
es
jp
sbb
lahf
es
cmpsl
test
pop
dec
jg
fistpll
mov
ds
por
adc
test
mov
pop
fstl
mov
and
pop
jnp
flds
mov
sub
les
es
std
sahf
dec
jmp
cmp
adc
fidivrs
sub
mov
cltd
mov
xor
insb
cmp
mov
aam
es
mov
lret
arpl
pop
pop
dec
mov
popa
pusha
addb
xchg
mov
or
inc
push
pop
cmp
mov
insl
xor
push
mov
mov
out
mov
cmpsl
mov
js
lahf
cwtl
sub
lret
popa
loopne
dec
iret
adc
fisttpl
dec
cmp
in
leave
jmp
or
loop
aaa
ljmp
lcall
xchg
push
and
mov
cltd
xchg
mov
xor
jmp
test
scas
xor
push
in
mov
sub
fidivl
loope
push
in
xchg
in
sub
adc
vminss
arpl
test
sub
jecxz
jmp
adc
xchg
fwait
sub
cmp
jmp
ret
out
push
or
lcall
movsl
push
lods
outsb
mov
mov
xchg
mov
je
fs
dec
lea
jmp
mov
jbe
loopne
scas
adc
add
stos
mov
aaa
dec
jns
mov
test
stos
dec
arpl
jl
adc
cltd
sub
inc
out
xor
pop
cwtl
fstl
dec
sbb
and
mov
imul
lods
jns
into
fs
mov
sub
sahf
mov
push
in
insl
popf
popf
ljmp
push
sbb
call
ss
aas
sbbl
sub
pusha
hlt
xor
and
jmp
aad
sub
jo
aas
mov
mov
stos
mov
ds
xchg
aas
and
movsl
or
lock
inc
bound
pop
ja
inc
add
incb
cwtl
nop
xlat
imul
mov
jp
test
and
outsb
jno
jge
shll
lret
add
inc
mov
pop
pop
dec
test
or
pop
add
sahf
ljmp
in
and
fwait
xor
xchg
sbb
insl
xor
cmp
and
push
lods
mov
jne
imul
lret
or
push
imul
pushf
push
inc
pusha
cmp
mov
scas
mov
push
test
mov
lret
addl
cmpsl
xor
xchg
push
pop
fdivs
mov
push
popf
inc
or
orl
iret
pop
xor
gs
cld
loope
lods
enter
cmp
xchg
pushf
nop
push
fimull
lods
aaa
out
aas
pop
adc
add
nop
outsl
iret
and
mov
gs
pop
adc
fisubrs
mov
fmuls
lods
imul
sbb
sahf
add
movsb
add
ffree
fidivl
push
fs
jecxz
out
adc
fisubrs
xor
jns
mov
int
ljmp
pop
sub
sti
cmc
fidivs
push
xlat
cli
adc
push
je
cmpsl
mov
sbb
mov
idiv
jno
pop
dec
mov
idivl
pop
mov
out
sub
stc
or
addl
inc
sub
dec
popf
fwait
in
aas
int
xchg
jp
fisttpll
sbb
xlat
loop
mov
ds
mov
sub
popa
jecxz
mov
mov
jns
push
add
imul
je
push
cmpsl
outsl
shlb
xchg
dec
imul
or
lock
test
stos
ss
adcl
icebp
inc
mov
jne
loopne
aad
shrb
int3
mov
xchg
fmul
sub
push
jnp
in
push
jmp
and
or
jo
lods
fldt
fdivrl
mov
popa
push
ds
push
mov
lock
cmpsl
dec
fsubp
adc
dec
mov
cmp
call
fwait
cmpsb
mov
adcl
pop
add
pop
in
sbb
lods
scas
mov
in
xor
and
mov
push
sahf
pop
cld
push
dec
stos
adc
scas
mov
push
movsl
mov
inc
insl
fs
cmpsb
or
push
sub
mov
ds
lret
or
push
fiaddl
cmp
out
test
or
sbb
adc
cmp
pop
scas
xchg
xlat
pop
ljmp
xor
ds
mov
mov
cmp
dec
pop
sbb
or
inc
fistps
aam
adc
cmp
or
push
cld
adc
push
adc
cmp
cmp
adc
cmp
dec
lods
push
pop
movsl
dec
fmull
fs
mov
iret
dec
cmp
and
mov
lahf
aas
call
mov
cmp
std
xor
outsb
xor
jmp
jp
sbb
jb
mov
inc
inc
cmpl
add
jns
adc
pop
gs
or
lea
es
sub
rcl
stc
std
ss
sub
jp
jge
mov
add
lret
and
fs
in
add
cmp
and
dec
inc
addr16
mov
stos
in
sub
or
cmpsl
rcrb
inc
add
push
out
jns
nop
inc
xor
js
shrb
mov
insb
leave
int
add
inc
hlt
and
popf
push
mov
mov
or
dec
jnp
rcrb
jns
cmc
jae
sub
outsb
rol
pop
shlb
into
loop
push
cld
aam
push
sbb
fs
xchg
lds
sub
sbb
mov
add
cmpsl
xchg
imul
add
inc
es
ljmp
jg
bound
jmp
lret
sbb
fidivrs
push
movsl
mov
lods
pop
xchg
jbe
pop
outsl
mov
xchg
sti
shl
es
xor
sbb
icebp
sti
xor
or
cmp
add
mov
and
insb
imul
das
fldenv
and
in
xor
pop
scas
jae
and
sbb
jns
lea
int
xor
dec
in
das
lret
sbb
xchg
movsb
stos
hlt
scas
mov
pop
jb
rorl
js
ror
push
enter
outsl
add
popa
pand
stos
pop
add
push
icebp
add
aaa
idiv
test
in
and
fistpl
fdivrs
cmpsl
lods
ret
test
mov
rorb
hlt
and
ss
scas
or
push
mov
xchg
pop
bound
jno
insb
mov
mov
push
xchg
mov
fldenv
lahf
or
inc
rep
out
mov
out
cmp
popa
test
cli
and
je
dec
mov
lret
sub
hlt
xchg
xlat
loopne
shlb
mov
stos
inc
dec
mov
pop
sti
dec
inc
or
nopl
jecxz
lcall
shr
cmp
mov
add
mov
add
pop
dec
mov
fdivrl
sub
out
cmc
adc
xchg
cs
mov
fs
cmpb
lcall
adc
cmpsl
mov
mov
fldcw
mov
or
aam
incl
adc
mov
cmp
xchg
push
cmp
sub
push
xlat
dec
fimuls
sub
shrl
fisttpll
pop
jecxz
ficoms
in
cmp
adc
xchg
push
cmp
movsl
pop
sub
clc
xor
push
loopne
loopne
inc
rorb
pop
inc
pop
xlat
and
or
mov
adc
bnd
jo
aad
dec
push
ret
in
or
adc
mov
push
adc
ret
popa
inc
lea
mov
lcall
cld
dec
jo
pop
iret
test
ret
hlt
pop
sbb
sub
aad
pop
adc
adc
ficoms
test
lock
popf
daa
inc
add
push
ret
xor
mov
imul
adc
lahf
xchg
mov
jmp
insb
add
imul
stos
mov
cli
jb
mov
fsubl
out
add
mov
test
fsts
out
push
add
sbb
pop
hlt
jge
lcall
and
es
xor
mov
aam
daa
movsl
jge
inc
jl
pop
pop
jno
xchg
cld
mov
lock
and
mov
cld
addr16
xor
insb
add
loop
push
add
jmp
or
cmp
mov
dec
xor
pop
inc
jno
add
test
add
outsb
pop
in
inc
fisubrs
negl
aad
dec
data16
inc
in
out
sub
in
int
ss
push
push
push
adc
lea
pop
push
xchg
bound
pop
lock
jge
ficoml
add
orb
lea
sub
sbb
imull
xorb
sbb
iret
das
or
inc
movsb
aad
mov
cmp
arpl
adc
call
dec
out
fwait
ret
dec
cmp
aaa
mov
adc
ret
dec
sahf
je
out
add
fsubrs
fnstenv
sub
mov
cltd
xlat
mov
cli
sub
je
mov
lea
and
inc
ret
jo
pop
and
xor
out
test
mov
sub
add
popa
ret
mov
and
out
pop
jne
mov
ret
jmp
std
outsb
stc
and
into
stos
mov
dec
mov
sahf
xchg
push
xchg
cmp
aaa
pop
adc
ljmp
nop
call
cmp
cli
push
or
loope
arpl
push
fsub
out
sbb
repnz
jg
push
js
and
es
jp
imul
mov
jno
in
xchg
out
movsl
notl
add
repnz
cmp
nop
and
mov
lock
fbld
lods
pop
fstpl
stc
and
pop
int3
scas
push
lea
mov
push
xor
push
xchg
pushf
dec
add
xchg
ja
sbbb
sarl
insb
out
sbb
test
in
mov
and
out
lahf
hlt
lods
xor
iret
sar
jge
and
sti
mov
bound
jnp
mov
es
ret
and
mov
push
lcall
outsb
push
lds
sbb
pop
cmc
adc
and
outsb
aam
rclb
mov
jb
sti
inc
jbe
in
inc
or
dec
jb
dec
dec
js
add
or
outsl
fistps
jae
mov
mov
movsl
or
jecxz
add
sahf
xchg
sbb
aas
mov
sarb
call
in
repnz
aas
or
sub
jb
mov
inc
repz
add
subl
icebp
and
lahf
xor
ds
and
dec
xchg
dec
in
bound
or
mov
xchg
adc
fnop
mov
fnsave
rcll
call
jnp
xchg
adc
hlt
adc
pcmpgtd
into
push
rcrb
repz
cmp
inc
xchg
daa
in
es
pop
xchg
or
loop
stc
jb
ljmp
push
lods
xor
inc
sbb
dec
mov
jp
add
jecxz
mov
sub
or
nop
pop
add
sahf
jl
test
dec
rolb
outsl
adc
pop
scas
xchg
out
mov
push
lret
das
std
mov
cmovno
es
or
imul
fmuls
mov
push
popf
sub
mov
cmp
int
data16
mov
lcall
jecxz,pt
nop
jmp
outsl
dec
out
mov
push
mov
xor
pusha
add
jne
xor
xchg
cltd
shrd
mov
xorb
jae
xchg
mov
dec
ss
mov
out
mov
mov
adcb
push
mov
dec
faddl
jecxz
lret
shrb
pop
and
loope
mov
mov
xchg
lahf
mov
push
mov
mov
mov
movsl
mov
dec
ja
push
push
lods
push
mov
push
or
dec
mov
mov
js
mov
shr
mov
int
push
shufps
mov
hlt
sub
out
mov
mov
dec
daa
dec
cwtl
push
inc
xor
pop
imul
fcmovnu
daa
sbb
mov
lahf
int3
add
adc
fmull
jbe
inc
pop
scas
aas
mov
insl
xor
fildl
mov
idivl
hlt
js
cmp
scas
add
orl
repz
mov
lock
test
inc
lcall
pop
and
mov
stos
mov
push
cmp
jbe
hlt
mov
sti
std
clc
aas
aad
jg
into
jno
mov
lods
cltd
mov
push
push
add
cmp
mov
add
add
sub
push
test
sbb
adcl
cmpsl
in
scas
nop
out
imul
mov
ss
sub
xchg
mov
xchg
sbb
jp,pt
push
mov
fnstsw
mov
push
rsm
sahf
push
pop
or
shl
pop
fldl
jno
lods
addr16
mov
ret
mov
imul
xchg
inc
clc
mov
cmp
adc
mov
mov
sahf
aas
jno
out
adc
std
xchg
push
clc
enter
pop
dec
add
leave
push
dec
jl
out
loope
mov
adc
inc
jl
cwtl
bound
push
iret
shufps
in
shlb
jecxz
mov
sub
xchg
ffreep
jae
shl
ja
push
push
jmp
negb
outsl
sbb
ret
test
icebp
jmp
ja
mov
sub
dec
and
push
pop
fucom
xor
sete
mov
pusha
dec
addr16
add
enter
subl
ds
mov
mov
arpl
cmpsl
pop
adc
push
mov
mov
mov
loop
fisttpl
inc
inc
xchg
push
dec
cltd
jp
and
movl
lidtl
inc
sbb
xchg
frstor
pop
push
mov
lcall
jbe
push
stos
cli
mov
adc
xchg
push
xor
ljmp
lret
sub
push
inc
pop
push
add
push
jnp
jg
mov
into
adc
movb
lcall
pusha
xchg
add
jge
dec
push
mov
or
add
pop
mov
add
push
pop
mov
jg
xor
dec
rorl
xchg
jns
in
dec
adc
xchg
cmpsl
inc
sbb
xchg
mov
xchg
xchg
leave
pushf
pushf
cwtl
cwtl
js
xor
and
and
or
jg
ja
mov
adc
loope
jb
outsb
inc
roll
mov
mov
int
push
push
mov
shlb
sbb
sahf
enter
cmc
loop
jnp
test
in
mov
xchg
fsubrp
sbb
mov
or
jo
jne
or
shl
or
push
fistpl
sub
jns
ss
in
or
add
sbb
push
je
mov
clc
lcall
std
sbbb
or
cmp
adc
sub
mov
xchg
dec
dec
dec
test
inc
cmp
ret
sbbb
cmpsb
ljmp
stos
gs
mul
mov
or
add
sbb
rolb
or
pop
jmp
repz
stos
mov
push
call
adc
mov
iret
push
cmpsb
cmp
aam
in
ret
jbe
ljmp
mov
daa
inc
mov
mov
in
scas
ffreep
pusha
push
pop
inc
fs
mov
cmp
je
js
or
lahf
mov
xchg
xchg
movhps
sub
adc
add
popa
stos
dec
ss
xor
sbb
push
int
aad
shlb
outsl
cmp
xchg
jge
sbb
ret
ja
mov
jmp
mov
adc
sub
sbb
jns
lret
scas
xor
jnp
stos
pop
and
push
adc
sbb
imul
jo
mov
out
inc
addr16
data16
iret
adc
aas
es
pushl
sarl
mov
lcall
sub
inc
movsl
or
pop
and
cld
pop
shrb
insl
lds
out
fsubs
fnstsw
jns
mov
jl
cmp
mov
icebp
mov
dec
out
and
loopne
in
shr
and
insb
jbe
fs
ds
push
fdivl
push
cmp
push
and
scas
bound
jle
or
xchg
lods
mov
stc
jmp
fsubrl
out
mov
push
inc
in
andb
aad
sub
mov
or
jmp
sbb
sarl
lods
mov
dec
addr16
cmp
test
insb
sti
dec
lcall
daa
pop
ret
add
mov
jo,pt
repnz
fadd
mov
int3
clc
cmp
mov
cmp
ljmp
rorb
sbb
dec
into
sub
into
subl
jmp
mov
sti
xchg
nop
lahf
xor
push
cmp
mov
and
sbb
js
ss
das
jbe
pop
mov
repz
pop
and
aaa
std
int3
dec
mov
jae
xor
adc
jns
pop
scas
scas
mov
ret
jmp
iret
clc
jbe
popl
cwtl
inc
and
dec
faddl
or
jno
rcl
jle
divb
popf
lret
push
mov
mov
in
mov
cmpl
loop
xor
cmp
cs
fstpl
pop
lahf
fwait
arpl
mov
xorb
mov
jecxz
mov
scas
or
rol
cld
push
gs
and
xor
scas
out
or
sar
pusha
fisubrl
sarb
mov
fstps
cmp
sti
add
ficoms
das
pop
sub
add
pop
insb
cli
mov
sti
sahf
test
arpl
pushw
push
mov
xor
xor
xchg
lret
ret
in
mov
mov
movsl
popf
jae
inc
push
imulb
inc
adc
xor
xchg
jne
xchg
push
int3
orb
repz
xorb
stos
jge
out
mov
mov
cs
jecxz
xor
jp
fnstsw
ficoml
pusha
ljmp
ret
stc
push
ret
enter
out
mov
aad
cmp
push
mov
popf
iret
mov
je
nop
mov
dec
fcoml
gs
stc
xchg
fldenv
jb
aam
jbe
fcoms
mov
adc
aam
addr16
in
in
mov
xchg
push
lcall
loope
mov
push
or
subb
rclb
pop
negl
add
dec
jmp
outsl
mov
rolb
xor
and
lahf
adc
dec
dec
sub
push
shll
pop
aas
dec
testl
into
push
mov
js
aaa
xchg
jge
in
cs
cwtl
dec
rclb
js
adc
add
popf
mov
popa
jecxz
test
movsl
hlt
push
add
xor
lods
sub
mov
scas
in
xchg
iret
sub
jg
lods
div
test
fisubrl
dec
ljmp
jns
sbb
popa
cmp
addr16
imul
into
aad
fisubrs
push
cltd
pushf
push
mov
repz
imulb
aas
insb
aaa
mov
inc
test
cwtl
stc
inc
and
push
jmp
shll
sub
or
push
xchg
push
sbb
mov
pop
and
cmp
outsb
loop
xchg
les
cli
mov
fadds
divl
push
loope
movsb
cmp
insl
es
int3
data16
xchg
dec
sbb
lcall
in
mov
lods
nop
dec
sub
mov
hlt
loope
in
and
icebp
pushf
xor
sbb
popa
lock
out
cli
mov
push
xchg
fdivrs
xor
cmpsb
fdivs
addl
sahf
loopne
cmp
sahf
inc
mov
fstp
mov
mov
punpckhdq
int
out
xorl
insb
and
aaa
js
sbb
mov
and
mov
dec
dec
mov
insb
addr16
aas
enter
rcll
arpl
sub
fisubs
dec
test
imul
mov
push
jbe
xchg
test
or
push
enter
mov
push
fs
and
sub
test
mov
adc
push
push
dec
mov
insb
xchg
mov
rcrl
mov
and
loopne
cmp
sbb
sarb
clc
lods
or
or
push
test
xorl
lahf
push
out
outsb
mov
push
jbe
and
push
bound
adc
ret
in
out
test
mov
xchg
adc
add
es
outsl
mov
sub
mov
dec
popa
fld
mov
push
and
jne
shl
into
dec
sub
mov
mov
xchg
dec
mov
testl
fcmovne
mov
add
outsl
dec
shrl
and
arpl
jae
rol
sub
mov
cmp
ficoml
push
test
cli
push
inc
cmp
in
add
insl
jle
mov
xor
jnp
outsl
sahf
mov
ror
jae
fidivrl
mov
aam
ficompl
popf
inc
add
stos
mov
scas
cmp
ficoms
cmp
inc
or
push
nop
dec
lahf
and
or
add
sbb
cwtl
pop
push
or
jg
mov
jns
sbb
addr16
test
ja
and
mov
daa
mov
mov
adc
sub
lea
mov
cltd
xchg
pop
dec
rclb
repnz
sbb
inc
cmp
xor
jecxz
cmp
xchg
fs
add
pop
pop
mov
enter
pop
loopne
add
sbb
fs
mov
pusha
push
pop
dec
mov
aad
adc
out
lds
lods
pop
clc
inc
loopne
mov
push
inc
push
jg
jp
lods
in
stos
and
daa
in
jp
cwtl
out
xchg
iret
jnp
push
mov
inc
out
hlt
jne
or
push
ljmp
mov
jb
in
jge
jmp
mov
testb
addr16
push
hlt
xchg
push
int3
push
xor
movsl
inc
mov
roll
les
cmpsl
and
fisubrs
mov
push
cmpsb
adc
add
sub
mov
sti
jl
cmp
or
fadds
pop
cmp
ret
sbb
hlt
movsl
mov
inc
jecxz
iret
xchg
test
dec
scas
fldpi
stos
and
push
and
jno
pop
aad
cmp
es
scas
adc
push
mov
lret
mov
lret
xchg
ret
jge
xchg
jp
in
mov
push
push
ret
push
inc
mov
cmp
xor
loopne
sbb
bndstx
addr16
repz
jle
je
pushf
adc
sahf
hlt
dec
test
jbe
nop
mov
add
movsb
in
jae
and
fsub
cs
mov
push
and
dec
mov
movl
push
xchg
mov
add
loope
and
out
jo
dec
das
les
rol
sub
out
inc
in
lret
add
std
mov
lods
sub
xchg
insl
rcr
dec
cmpsl
add
add
iret
movsb
mov
lret
xor
and
sbb
adc
aaa
arpl
pushf
test
daa
out
jge
cmp
outsb
clc
sbb
dec
shr
jnp
movsl
ret
filds
ja
mov
cmp
push
adc
xchg
adc
lahf
mov
adc
aam
jge
sub
popf
inc
jbe
and
mov
lret
and
sub
and
es
mov
aas
popa
fs
mov
cld
ljmp
xchg
push
mov
lods
repnz
dec
loop
fdivrs
mov
pop
xchg
movsl
sub
push
pop
add
stc
fisubs
mov
push
into
inc
mov
les
xchg
sub
outsl
pop
sub
jg
dec
in
out
cmp
std
pop
mov
inc
sarl
test
jge
sbb
push
xchg
cmp
push
and
adc
mov
aas
mov
int3
lret
lods
mov
ret
xchg
cmp
iret
adcb
xor
and
iret
inc
andl
jnp
pusha
mov
push
lock
shll
scas
or
xor
push
mov
lret
scas
jge
xor
push
imul
push
mov
sub
push
or
and
arpl
add
jp
lods
popa
sbb
xchg
cwtl
dec
adc
jecxz
stc
je
mov
mov
cld
fs
andl
bound
popf
xchg
popa
and
or
fcoms
in
in
lods
mov
fbld
cmp
icebp
add
jmp
mov
push
mov
push
pushf
sbb
sbb
push
push
movsb
movsl
je
test
or
outsb
jecxz
mov
or
xchg
lea
dec
inc
arpl
xchg
sti
aas
mov
or
daa
cmp
push
aam
sti
stc
or
or
jl
aaa
rcr
rcll
xor
iret
push
mov
decl
aaa
lds
lds
popf
dec
xchg
gs
lods
stos
mov
cmp
insb
inc
fs
or
mov
add
ja
and
push
lea
pop
idiv
or
lea
add
sub
xchg
dec
out
sbb
je
out
jmp
pop
cmp
or
xor
cmc
jo
cmp
inc
repz
fnstenv
dec
sub
jmp
stc
out
add
sub
les
mov
adc
xchg
repz
jecxz
sbb
gs
aad
mov
rorb
es
out
sbb
add
xlat
sub
dec
es
sub
jp
push
lret
lock
or
add
lahf
stc
popf
call
pop
add
jno
mov
sub
shrb
cwtl
sbb
cmpsl
jo
xchg
inc
cld
shrb
mov
push
or
lods
sbb
repnz
mov
sbb
pop
push
mov
outsl
mov
jne
ja
inc
mov
jb
mov
push
mov
inc
or
jg
popa
sbb
fiadds
outsb
mov
push
mov
mov
out
ror
aad
push
dec
aas
mov
cs
xor
rclb
iret
das
mov
ja
jns
push
pop
cmp
or
mov
jnp
mov
lahf
mov
jp
addr16
insb
jbe
outsl
push
push
pushf
pop
ja
aam
sbb
push
sub
inc
ja
add
movsl
sbb
pop
cmpb
push
push
lret
sti
cmp
shrl
lock
jecxz
lret
pop
out
mov
xchg
mov
add
mov
pop
dec
sub
testl
lret
jae
testb
pop
loop
lcall
and
loop
icebp
lods
xor
scas
btsl
inc
ds
lahf
mov
mov
pop
das
pop
scas
fistl
jne
pop
lret
and
mov
movsb
jl
or
repnz
dec
xor
sub
aaa
push
cmpsb
dec
repz
mov
lret
dec
js
inc
popa
adc
or
sbb
jp
dec
or
jne
ds
movsl
ja
popw
or
pop
jle
punpcklbw
mov
jne
jae
sahf
mov
sbb
in
and
pop
sub
ret
cs
sbb
adc
es
out
add
leave
sbb
push
dec
orb
in
ret
push
inc
fnstsw
pop
inc
pop
inc
xor
mov
ds
xor
cmpl
ja
out
fucomip
xor
and
js
dec
test
repnz
mov
cmc
cmp
imul
test
and
aaa
or
out
sahf
lods
adc
xchg
int
sbb
lret
sub
mov
add
and
sti
repz
mov
out
aas
lahf
popf
adc
aam
roll
cmp
lcall
pop
xchg
jge
stc
jp
addb
pop
adc
mov
outsb
int3
hlt
rorb
scas
jp
inc
pop
sbb
int3
and
stos
int
lds
adc
inc
mov
movsb
fidivs
lea
lret
cmp
mov
cmp
stos
leave
jp
jbe
dec
add
xchg
push
shrb
push
sub
mov
mov
jecxz
jnp
mov
push
popa
pop
mov
shlb
gs
and
adc
mov
clc
dec
loope
ret
xor
orb
out
mov
sub
xor
cld
aaa
xchg
push
lea
sub
fcom
lods
adc
aaa
and
shrl
leave
dec
and
pop
sbb
je
je
pushf
daa
add
addr16
xchg
cmpsl
push
ret
jne
adc
push
jo
pop
mov
or
js
mov
xor
xchg
or
addb
hlt
lret
pop
push
mov
mov
or
xor
xchg
mov
test
out
rorb
cmp
push
jb
mov
shrl
mov
fstpt
pop
into
push
cli
scas
add
fcomps
ret
int
sbb
pushl
jbe
lret
inc
xor
jno
rolb
push
and
sbb
loop
rcrl
notb
popf
push
xor
xor
adc
add
pusha
adc
loop
insb
cmp
hlt
xchg
mov
lcall
mov
push
ja
add
movsl
lock
sahf
outsl
mov
push
clc
sbb
rclb
xchg
mov
outsb
sbbb
dec
in
jae
scas
pop
insl
aaa
jle
inc
in
ja
pop
stos
xchg
lea
adc
dec
fstl
sbb
jns
mul
mov
xchg
das
xor
fadd
pushf
shll
cmc
lock
stos
pop
jecxz
je
movsb
inc
scas
inc
jnp
pop
loopne
mov
inc
and
ja
je
jbe
inc
std
mov
inc
xchg
bound
or
loopne
sub
cmp
lea
xorl
dec
pop
fists
nop
mov
and
aad
je
in
repnz
imul
mov
adc
cmpsl
aaa
and
or
rsm
pop
fstl
lds
xor
shlb
xchg
ja
bound
adc
jbe
cmpsl
nop
rorl
stc
rorb
xchg
clc
aas
jmp
ja
mov
mov
clc
pushf
adc
xchg
test
xchg
mov
add
jmp
sub
push
xchg
adc
je
cld
cli
lret
insb
das
pushf
cmpsl
and
sub
jae
cld
lods
dec
mov
pushf
jo
popl
filds
popf
cld
fldt
xchg
mov
dec
imul
pop
hlt
or
sahf
mov
and
sub
pushf
in
dec
aas
adc
cmp
cmp
cmp
push
mov
xchg
mov
mov
repnz
jo
sti
add
rol
inc
cli
adc
xchg
ss
jecxz
pop
xchg
push
loope
push
mov
xor
fstps
cmpsb
shrb
cmp
popa
orb
pop
dec
out
mov
cli
popa
mov
sub
cmp
mov
sbb
push
xchg
add
xchg
xchg
leave
sub
fldcw
das
inc
pusha
push
sub
mov
mov
movsl
jle
test
data16
adc
and
xchg
push
fdivs
adcb
mov
insb
insb
cli
ss
jb
push
mov
fstps
arpl
movsl
cld
cwtl
rcrb
nop
xchg
insb
testl
xor
inc
add
push
sbb
and
rorb
xor
sub
dec
adc
mov
test
pop
scas
or
pushf
mov
iret
adc
mov
mov
inc
dec
sub
outsb
fwait
mov
adc
lahf
xchg
and
sbb
pushf
push
sub
push
sbb
aam
mov
jle
inc
lds
pop
xchg
sub
hlt
xor
mov
pop
inc
ss
cs
fcmovb
mov
lret
mov
push
ret
repz
jb
lahf
mov
push
dec
pop
out
movsl
cli
and
xor
inc
mov
jle
jg
jg
sbb
mov
xor
mov
iret
sub
mov
push
pop
cld
dec
test
mov
mov
inc
test
rcl
or
iret
inc
fldcw
stc
xchg
mov
jg
enter
push
or
adc
push
stos
xchg
movzwl
js
mov
sub
das
xor
or
and
outsl
dec
lock
and
sub
call
in
push
fisubrl
fidivl
xchg
mov
xchg
popf
and
out
ficoms
arpl
dec
andb
pop
in
sti
in
aaa
mov
dec
in
or
adc
daa
xchg
lock
add
stos
jne
lahf
fcmove
jl
pop
adc
fistpl
dec
mov
mov
and
cmp
xchg
xchg
adc
pop
xchg
pusha
cli
shrb
iret
and
aam
and
cs
out
ret
fmuls
xchg
pop
cltd
sbb
rcrb
mov
inc
fsubrp
pop
jns
aam
mov
mov
pop
mov
adc
xchg
jp
mov
pop
or
sbb
movsl
insl
ljmp
test
enter
xchg
sbb
xlat
xchg
inc
jl
sbb
push
movsl
aam
mov
add
arpl
jge
inc
sbb
js
addr16
push
mov
xor
xor
mov
push
jmp
inc
push
daa
fidivs
sahf
inc
jmp
add
sbb
jle
push
inc
push
enter
and
addr16
pop
lret
push
jo
sbb
std
inc
xchg
fiaddl
cltd
push
xor
or
sub
mov
sahf
test
dec
ss
sbb
sbb
pop
or
pop
repnz
xchg
insl
rclb
mov
pop
inc
mov
cld
int3
popa
mov
sarb
test
inc
or
shll
call
push
mov
adc
lahf
addb
fsubrs
fcomp
fadds
and
mov
es
cmpsb
xor
inc
jg
aaa
in
fiaddl
data16
cwtl
pop
sub
in
jmp
jle
repnz
int
push
lea
sbb
add
movsb
insb
mov
cmp
aaa
push
xor
in
adc
add
xchg
divb
jns
data16
xor
mov
xor
inc
dec
mov
fnsave
xchg
out
pusha
sub
lret
roll
int
iret
addr16
push
inc
pop
jnp
pop
cmpsl
notl
or
outsb
xchg
push
data16
loop
leave
inc
sub
std
mov
dec
movsl
stc
mov
mov
sbb
jbe,pt
xor
nop
ds
hlt
ds
jge
adcl
aad
bound
and
rcrb
push
arpl
pushf
test
outsb
adc
jb
mov
mov
xchg
pop
aad
pop
push
pop
sbb
adc
add
popa
sbb
std
das
pushf
ret
mov
sbb
nop
and
cmp
push
mov
sbb
push
les
ljmp
cmp
ficoml
mov
xor
jb
test
and
and
mov
xor
mov
mov
add
fdivs
sbb
jge
sahf
cs
push
decl
lahf
or
dec
bound
xor
dec
pop
shr
ljmp
cwtl
cmp
mov
sar
cmpsl
jb
jp
outsb
xchg
icebp
push
push
mov
xorl
mov
stos
mov
mov
cmp
lea
mov
xchg
or
js
lahf
lea
sbb
or
jnp
fcoml
rcr
in
sub
ja
dec
sbb
hlt
mov
sbb
jle
pop
repnz
stos
fbstp
and
cmp
fstpl
jl
pop
les
mov
add
std
adc
mov
int3
push
mov
pop
cli
test
xchg
test
xchg
sub
jnp
lock
popa
fdivrl
mov
add
inc
hlt
or
imul
cs
dec
loop
fiadds
js
pop
jl
adc
sub
clc
into
rclb
outsl
and
aas
stc
push
push
pop
loop
pop
xor
lea
xor
daa
popa
pushf
leave
out
pop
pushf
sarb
xchg
rolb
rolb
pushf
hlt
xchg
test
movd
hlt
ljmp
cmpsl
or
pop
inc
mov
add
rcr
fsubr
lret
testb
test
mov
dec
mov
stos
icebp
stos
push
fstp
push
in
cmp
jle
push
mov
mov
fstps
loope
adc
loope
insl
xor
mov
je
cmc
andb
add
nop
jecxz
pop
mov
push
out
das
push
push
stc
push
cwtl
mov
test
jge
push
pop
or
sub
add
ret
dec
and
lret
xor
aam
lret
ret
xor
cld
xchg
fcomi
jle
int
sub
sub
data16
js
mov
sub
dec
jge
push
clc
lcall
loopne
stos
add
cmp
adc
mov
lods
push
jo
or
push
mov
mov
xchg
inc
pusha
iret
mov
jp
in
and
test
inc
jp
ficompl
dec
xchg
mov
icebp
icebp
cmp
loop
dec
subl
pop
xchg
push
cwtl
sbb
adc
rol
or
lea
add
dec
mov
mov
in
sbb
ret
sbb
inc
fisttpll
data16
mov
lret
mov
outsl
or
enter
cmp
lcall
xor
movsl
pop
repz
call
pop
stos
icebp
push
ret
lcall
add
cmp
push
lds
clc
les
push
adc
xor
cmp
cmc
sahf
sub
push
ss
dec
sub
popa
dec
jmp
ret
fidivrs
lahf
pop
cs
les
mov
pop
pop
push
inc
and
aas
lret
fstps
stos
sbb
movsl
dec
scas
xlat
dec
inc
jmp
mov
aad
mov
in
push
enter
lds
push
and
adc
ret
cmpsb
cmp
adc
cmp
mov
call
sub
das
dec
fisttpll
xchg
inc
xor
sub
in
lea
jecxz
pop
dec
inc
push
hlt
sub
mov
xor
sbb
xor
adc
and
cld
jp
xchg
push
testb
insb
lahf
push
pop
inc
jae
insl
cld
xor
mov
mov
cmp
iret
or
cmp
jns
and
test
adc
cmc
adc
rcrl
push
testl
xor
in
ja
in
js
stos
cltd
call
stos
pop
idiv
loopne
insb
pop
pop
mov
jle
fdivrs
push
repnz
lret
aam
add
aaa
pop
outsl
cmp
in
cld
rcl
sbb
adc
mov
test
add
push
push
dec
fisttpll
or
push
call
daa
in
xor
mov
sarl
adcb
dec
jne
iret
jmp
pop
jae
arpl
frstor
rsm
cld
pushf
cli
addr16
mov
sub
nop
fdiv
cli
mov
in
jmp
cmp
xor
xor
jb
pop
xchg
cltd
lahf
shr
push
lcall
nopl
fdivrl
jecxz
jmp
push
sbb
aam
sub
push
mov
lret
inc
nop
sbb
add
scas
aaa
ja
pop
mov
in
cmp
int3
xchg
mov
mov
shrb
repnz
jnp
popa
pop
out
cmp
icebp
xlat
lods
fcom
mov
fcomps
xchg
jno
call
lods
adc
and
pop
jp
and
jmp
mov
ss
test
repz
mov
pop
inc
or
cltd
lea
adc
int3
fdivs
xor
scas
jnp
leave
insb
cmpb
insl
xlat
mov
sti
jl
js
mov
sub
mov
jge
into
dec
sbb
lret
xchg
xor
push
and
and
pop
ja
and
mov
pushf
sbb
mov
jnp
inc
dec
loope
cmp
adc
mov
and
add
mov
sarl
dec
addr16
jmp
in
popf
mov
sbb
dec
xor
rcrb
insl
nop
shld
xor
out
mov
sar
push
sbb
push
and
aam
and
call
dec
sub
mov
push
enter
test
jg
dec
repz
sub
scas
adc
mov
popa
pop
add
mov
xor
loope
xchg
push
mov
jl
leave
push
dec
dec
jp
in
push
test
sub
jl,pt
add
mov
cmp
imul
sbb
adc
dec
pop
push
adc
mov
jb
cmp
xchg
loope
fucomp
imul
enter
call
cmp
mov
imul
loope
pusha
lds
sbb
mov
sub
in
mov
ss
push
lret
test
cs
mov
dec
mov
das
cmp
ret
ret
xchg
lahf
enter
scas
test
cmp
sbbb
mov
adc
add
fiaddl
sahf
adc
pop
xor
xchg
ja
xchg
add
xchg
adc
xor
es
mov
jg,pn
pop
daa
or
icebp
xor
sbb
adc
das
inc
ret
xor
xor
push
enter
lods
lahf
mov
imul
cmp
pop
mov
dec
es
cld
fidivrl
pop
or
scas
sbb
xor
rolb
repz
xchg
dec
sti
jl
mov
sub
pusha
fwait
push
jecxz
mov
inc
lahf
imul
and
cmp
popa
push
movsb
dec
subb
mov
adc
loop
and
or
lods
lret
cmp
jnp
scas
cmpsl
out
mov
sub
lods
mov
imul
cmp
pop
mov
inc
mov
bound
repnz
enter
lods
jns
ss
in
mov
or
jle
shrb
stc
test
outsl
sbb
out
pushw
jbe
loopne
and
pop
xor
cmp
jnp
jmp
or
and
xchg
ret
lret
sub
add
pop
popf
cltd
dec
adc
pop
jg
imul
jecxz
mov
outsb
adcb
inc
push
cmp
loopne
mov
lret
pop
inc
std
pop
cwtl
loop
mov
push
or
pop
cmc
push
enter
aam
ja
push
inc
mov
xchg
call
addb
fcom
jo
mov
shll
lds
les
lahf
jp
sub
fmull
xchg
cmp
cmp
pop
loopne
dec
lds
push
sub
mov
mov
xor
stos
jno
dec
call
lock
inc
clc
mov
ja
mov
add
and
jmp
cwtl
sub
hlt
jle
push
dec
jmp
stos
jge
in
jp
lret
pushf
in
jl
imul
adc
decb
test
in
xor
cmp
dec
subb
adcb
int3
imul
cmp
push
xor
jge
mov
xchg
lea
in
jno
dec
lds
scas
nop
in
push
jecxz
mov
jg
push
mov
sbb
movsl
jo
lret
inc
adc
inc
xor
sbb
or
and
lods
dec
dec
stos
sbb
imul
pop
subb
notl
xchg
out
mov
jno
push
dec
loopne
outsb
adc
orb
cwtl
ret
pop
aad
sub
faddl
in
push
aaa
mov
cwtl
sbb
sahf
lret
push
lock
mov
xchg
sub
sbb
lcall
cmpsl
fildll
cmp
dec
mov
out
loop
int3
pop
or
dec
mov
mov
push
mov
imul
shll
pop
and
lahf
and
mov
xchg
pusha
xor
push
popf
jbe
push
push
sub
inc
scas
cmpsb
dec
outsb
inc
je
push
imul
popa
lea
mov
dec
add
stos
insl
inc
push
inc
lods
in
adc
pop
lret
or
mov
push
ret
push
clc
outsl
adc
mov
jmp
rolb
inc
sub
cli
push
cmpsl
inc
shll
fisubs
push
dec
rcrl
jmp
imul
mull
aas
push
adc
je
leave
or
iret
fwait
sbb
mov
mov
outsb
dec
bound
nop
adc
mov
scas
inc
ljmp
or
outsl
jo
mov
mov
jmp
mov
add
mov
sbb
ret
cmpsb
sbb
inc
adc
push
shlb
xchg
pop
aad
popa
mov
loop
pushf
mov
cmp
inc
pop
sub
mov
and
jae
push
adc
punpckhdq
mov
adc
mov
lret
popa
cmc
adc
xchg
push
jg
adc
mov
jp
ljmp
lret
nop
jge
push
test
rolb
mov
jne
in
mov
xchg
xchg
addr16
cmp
arpl
loop
xlat
aas
pushf
leave
addr16
cmc
xor
mov
mov
rorb
int3
dec
insl
push
rcl
sti
mov
mov
mov
int3
outsl
es
test
sub
fiadds
int3
testl
mov
ds
out
fnstenv
mov
loope
push
sbb
incb
push
and
adc
and
enter
jge
jns
in
adc
std
shrl
xor
mov
inc
aam
and
int3
sub
mov
adc
pop
dec
cmpsb
push
adc
jl
out
adc
sub
cmpsb
push
and
cli
xchg
pop
cmp
outsl
addr16
and
sub
sub
cli
ja
cmp
mov
shll
jl
orb
cmp
imul
negb
and
sbbl
xchg
popa
jne
or
fcomi
daa
decl
inc
jg
popf
and
icebp
mov
pushf
lahf
xor
fistps
add
pusha
or
xor
test
fiadds
or
mov
xchg
mov
popa
rclb
mov
jmp
adc
xor
jg
xor
jl
jecxz
int
and
lret
push
insb
fninit
call
sbb
or
movsb
outsb
pop
push
xchg
mov
mov
imul
inc
and
shlb
inc
xor
inc
lret
enter
xchg
lret
mov
stos
or
jo
ficomps
push
pop
mov
ds
and
xlat
xchg
stos
and
scas
leave
movsb
xor
pop
pop
bound
lods
sahf
cmp
stos
xchg
push
add
add
sbb
xor
pop
movsl
xor
fdivs
sbb
dec
cmp
cmc
lret
fmuls
cmp
in
lods
adc
loop
mov
jb
insl
add
dec
xchg
jecxz
fistl
and
pop
mov
aad
pop
out
std
ret
jns
adc
insl
div
enter
out
shrb
nop
mov
ret
jle
mov
xchg
sub
arpl
dec
hlt
xchg
xor
int3
push
popa
dec
add
cli
hlt
jbe
cmp
cld
xchg
or
cwtl
jae
or
lret
xor
dec
sub
or
pop
xor
out
xchg
repnz
lcall
mov
fildl
cmp
sbb
sbb
icebp
mov
or
mov
fstl
or
cmp
inc
pop
mov
adc
lods
cmp
mov
jno
dec
fmull
dec
push
xor
mov
mov
adc
pop
ljmp
nop
xchg
push
call
lret
orl
scas
xchg
push
and
adc
mov
pop
negl
sbb
xor
sahf
sbb
lods
jg
lods
inc
push
or
dec
lock
sbb
cmp
sbb
or
ds
xchg
adc
inc
sub
leave
mov
dec
test
fsubs
ds
ret
add
xchg
push
test
sub
sub
fisubrl
pusha
imul
testl
or
xchg
push
adc
jg
cmp
in
push
je
orl
mov
stos
add
sub
lods
xchg
mov
fistps
jns
hlt
adc
cwtl
stos
pop
and
push
rorb
cmp
mov
mov
xchg
movsl
out
aas
inc
ds
fsubrs
xor
jno
xchg
popa
pop
imul
push
nop
loop
into
sbb
clc
mov
inc
inc
inc
mov
mov
add
jbe
mov
stos
push
arpl
fdiv
adc
int
jle
ficomps
js
sbb
inc
adc
dec
cmp
inc
or
nop
in
fimuls
push
mov
xchg
scas
ss
ficompl
sahf
mov
or
push
cltd
inc
push
mov
and
jge
jns
push
ret
jl
mov
and
enter
mov
das
nop
ret
hlt
sbb
inc
jp
inc
inc
ss
pop
push
ret
mov
rclb
insb
popa
mov
push
push
pushf
shrl
sbb
popa
fdivrs
and
ja
enter
jg
lds
pop
out
in
and
shlb
or
mov
pop
in
aam
aam
mov
push
out
fidivrl
push
faddl
shl
in
addl
and
in
in
iret
dec
out
ss
ror
cmc
cmc
and
inc
add
or
sbb
mov
or
dec
les
movsb
stc
insb
inc
and
mov
lcall
sbb
add
popf
sahf
xadd
cmc
sbb
push
roll
jne
sub
out
sbb
pop
cmp
negb
push
es
sub
mov
stos
repnz
mov
jbe
jbe
jnp
mov
arpl
push
lea
out
fs
daa
xchg
pop
sti
or
or
and
add
int3
movaps
sbb
sub
pop
mov
add
je
loope
jg
imul
enter
lcall
orl
mov
jmp
in
cmpsb
mov
cmpsl
movsb
nop
cli
pop
adc
fisubs
pop
inc
jbe
repz
jne
in
movl
xchg
lds
cmp
adc
xchg
daa
stos
adc
aaa
xchg
divb
xlat
addr16
aad
scas
enter
push
cs
mov
mull
lods
stos
test
out
fnstenv
test
jbe
fst
xchg
xchg
sbb
dec
cmp
xchg
add
inc
in
jno
aas
jns
inc
pop
dec
cmp
push
fwait
dec
lock
outsl
jns
pop
stos
inc
dec
push
sub
lret
mov
outsl
push
ss
or
sahf
roll
test
lock
aaa
sbb
je
enter
mov
add
stos
pop
out
mov
jne
xchg
sub
rcrb
adc
bound
das
jecxz
xor
cld
xor
xor
pop
jge
xor
nop
dec
loope
jl
fildl
cmp
out
jg
xchg
xchg
stc
out
pop
inc
pop
jbe
pusha
into
mov
aam
cmp
lock
jle
pop
push
mov
fnstenv
jno
psubb
jno
in
pop
jge
cltd
mov
or
lret
lcall
lcall
in
in
sub
mov
orl
pop
push
mov
pop
xchg
pop
sbb
xor
push
addl
add
repz
lahf
into
vpmulhuw
lock
mov
rclb
push
dec
xchg
sub
cmp
mov
and
cwtl
in
cmpsl
xor
rol
subb
rcr
add
mov
ds
mov
push
xchg
pop
repz
loope
or
dec
mov
jecxz
ja
mov
pop
mov
push
ud0
pop
nop
fidivs
dec
outsl
mov
repnz
out
addss
test
mov
nop
stos
jecxz
mov
cld
push
jecxz
mov
mov
imul
push
stc
pop
pop
or
fstpl
pop
mulb
rolb
pop
xchg
lds
lods
fisttpl
cmp
xchg
lahf
and
xchg
je
adc
mov
xor
inc
mov
mov
adc
jno
sti
cld
test
js
xchg
xchg
and
jmp
xchg
pop
popa
push
sahf
cmovbe
sbb
inc
insl
out
pop
xor
inc
fwait
insl
bound
cmpsb
xor
int3
cmpl
xlat
inc
xor
adc
cmp
ds
mov
mov
ja
inc
adc
pop
loopne
loope
lret
insl
push
sub
xchg
shr
into
fisubrs
xchg
and
add
out
ret
jo
out
dec
xchg
rorb
push
cmp
sar
cs
popa
in
and
mov
int3
dec
pop
pop
cmp
mul
loopne
add
shl
or
mov
mov
xor
pop
in
adc
adc
pop
and
xchg
xchg
decl
test
jns
js
mov
adc
push
aaa
dec
inc
mov
push
xchg
adc
pop
and
sbb
bound
mov
fst
mov
in
iret
add
lahf
pop
daa
pop
pop
and
or
mov
dec
xor
iret
sbb
mov
mov
scas
popa
orb
fildll
addl
ficoms
scas
mov
movsb
lods
mov
jbe
sub
and
addr16
jl
and
sub
insb
repnz
testb
in
sub
push
mov
icebp
cwtl
pusha
enter
jo
add
dec
mov
adc
push
inc
jns
nop
fwait
inc
cmpsl
inc
jns
js
insb
enter
pop
push
sub
cmp
sbb
xchg
in
add
mov
popa
fs
cmpl
xor
mov
imul
jbe
mov
or
pop
fs
xchg
add
sbb
cltd
inc
mov
cwtl
push
jo
add
pop
mov
in
jb
in
or
sbb
pop
xchg
stc
jno
sbb
int
and
dec
mov
cmp
test
push
or
ret
pop
lret
sub
push
pop
mov
pop
adc
fadds
mov
pop
pop
aas
pop
idiv
jg
mov
fcoml
mov
mov
jp
movsb
lahf
xchg
movsl
aad
jno
adc
je
imul
dec
and
iret
inc
xchg
jecxz
add
data16
inc
imul
mov
pusha
outsl
nop
pop
mov
jp
push
mov
xchg
negl
cwtl
je
pop
test
cvtdq2ps
adc
mov
int3
mov
cmp
sub
inc
das
inc
jb
scas
add
aad
pusha
xor
mov
adc
loopne
loopne
clc
dec
lahf
mov
into
xor
or
fsubl
lock
inc
push
inc
push
sbb
sahf
cmp
push
fistl
pusha
fdivl
dec
cld
xchg
repz
testl
jbe
outsl
dec
aas
mov
iret
and
ret
xchg
mov
fldt
pop
lea
and
loopne
adc
or
pop
fs
inc
push
pop
xor
and
xchg
mov
int
in
sub
ljmp
sub
fistpll
pop
mov
movsl
xchg
xchg
cmp
pop
outsl
sbb
push
cmp
rclb
icebp
sti
pop
js
fisttpl
and
pop
sub
inc
pop
jmp
sub
lret
adc
sub
pop
push
pop
push
or
mov
stos
push
xchg
addr16
bound
jns
movsb
arpl
shlb
daa
jbe
ret
cmp
negb
retw
vmaxpd
shlb
ficompl
out
repz
ljmp
dec
les
lods
jb
xor
mov
xchg
les
js
lret
ret
rep
les
insb
in
lcall
movsb
jb
cmp
push
daa
xchg
or
or
dec
jno
loopne
jo
call
nop
pop
cld
bound
xor
push
ret
xor
jge
roll
adc
lods
fcmove
xor
jae
sbb
push
mov
call
or
mov
inc
cmc
inc
pop
sbb
loop
sbb
sbb
popa
pop
jns
rcl
jno
add
pop
sub
popf
imul
adc
ret
xchg
lret
scas
adc
cmp
sbb
mov
cmp
pop
dec
iret
cmp
xchg
jo
mov
mov
imul
adc
mov
aas
stos
pop
add
mov
imul
es
stos
push
xchg
orl
cmpsb
push
sbb
test
pop
mov
add
add
mov
jne
loop
jbe
or
dec
leave
xor
push
add
pusha
insb
shlb
jmp
out
fsubrs
mov
cltd
pop
popa
sub
outsl
push
test
dec
lcall
aas
clc
pop
inc
enter
and
adc
mov
iret
cmpl
in
ret
jp
test
adc
imul
ret
xor
sbb
out
or
outsb
js
mov
insb
xchg
mov
pop
outsl
mov
jmp
push
sarl
stos
ljmp
call
movsb
jnp
addr16
repz
pushf
jno
ret
pop
add
sti
test
add
and
mov
pop
adc
lret
adc
dec
push
pop
sub
into
lret
push
xor
sbb
cmp
test
int
arpl
ret
cmpsb
shlb
push
xchg
fwait
pop
scas
fcmovnb
in
jmp
lret
and
loop
jns
gs
jbe
test
push
dec
pop
nop
gs
adc
addl
stos
mov
fld
fisubs
jno
hlt
pop
ds
push
daa
sbb
cmc
data16
std
mov
pop
cmp
xchg
add
jp
inc
movzbl
nop
dec
lds
push
xchg
push
nop
mov
lret
and
pushf
pop
push
hlt
in
xchg
out
rcrl
and
pop
mov
jbe
lcall
sub
pop
in
mov
and
jmp
mov
fimuls
and
arpl
jmp
mov
and
pusha
dec
inc
fists
pop
jae
cmp
or
xchg
or
pusha
shll
es
in
ret
xchg
mov
les
add
hlt
xchg
in
js
jbe
add
loop
outsl
gs
mov
fadds
sub
stos
out
dec
sbb
or
iret
pop
filds
pop
or
cltd
xchg
shr
jb
inc
fwait
jnp
imul
xor
push
cmc
jl
stos
cmp
sub
adc
data16
or
jo
ret
push
les
in
cltd
mov
sub
or
sahf
testl
lret
pop
xor
subb
xchg
jle
frstor
into
sbb
out
gs
imul
lret
loope
pop
loopne
enter
lcall
pushf
cmp
insb
out
iret
fdiv
xor
push
cltd
mov
stos
inc
and
inc
cwtl
push
add
push
fsubrl
add
and
push
inc
test
xor
int
adc
mov
notl
mov
out
mov
loop
dec
cmp
stos
mov
fistl
jne
loope
int3
imul
jne
das
iret
int
sbb
lea
push
in
cli
lods
xchg
adc
push
sub
mov
outsl
flds
lds
dec
lods
loope
out
nop
lock
cmpsb
inc
push
sub
mov
push
shlb
rcll
sub
add
leave
inc
cmc
imul
mov
mov
sbb
mov
xchg
test
jle
enter
xor
xor
rol
lods
popa
sahf
ficoms
or
xor
stos
mov
rorb
sarl
or
into
ljmp
imul
nop
iret
jno
mov
stos
frstor
gs
mov
adc
inc
jecxz
mov
vmread
jne
sbb
dec
repz
orb
lods
xchg
add
push
aam
jge
ret
inc
in
repnz
cli
xchg
imul
xchg
pop
pop
cltd
orl
add
in
xchg
lods
lret
mov
in
fcompl
pop
je
int
adc
nop
sbb
xor
mov
pop
or
inc
fildl
mov
pop
insb
mov
sbb
nop
xor
cli
add
sub
pop
push
std
jl
push
inc
in
scas
popa
sbb
or
dec
test
dec
sub
sub
and
mov
cmp
imul
cmp
dec
pop
imul
mov
mov
cmpsl
and
jecxz
inc
cmp
cmp
cmpsl
sbb
jo
xor
fucomp
stc
inc
es
xor
ret
rolb
push
push
push
lahf
cmp
cmp
sub
leave
xchg
or
xchg
cli
movsl
mov
adc
pop
or
push
xchg
lea
sub
daa
cs
cli
jg
xor
jg
stos
out
pop
stos
lock
and
sahf
push
rclb
imul
dec
mov
pop
and
sbb
sub
add
cwtl
ljmp
ret
mov
xchg
stos
dec
movsl
pop
sub
xchg
cltd
testl
mov
or
push
mov
cmpsl
mov
xor
loopne
orb
dec
dec
cli
lds
inc
sub
lea
mov
mov
jmp
icebp
xchg
xchg
xchg
push
xchg
fwait
loop
pop
cmp
fstpl
adc
lea
cmp
pop
ljmp
cmp
mov
push
xor
scas
scas
ds
cmpsl
sub
pop
int
cmp
into
xchg
jle
and
and
pop
rol
adc
out
je
xchg
xchg
push
xor
aas
imul
int3
aad
push
adc
jl
and
push
ret
stc
aam
inc
lahf
mov
mov
cmp
pop
popa
cmpl
roll
pop
xchg
dec
push
cmp
lock
xor
and
adc
loop
mov
jb
adc
out
shll
dec
sbb
inc
out
or
inc
mov
jg
pop
js
pop
cwtl
dec
dec
cmpsl
jmp
jb
daa
mov
sbb
filds
aas
jg
icebp
xchg
fimuls
cmp
push
jbe
movsl
mov
andb
sahf
or
pop
pop
gs
int3
ret
xchg
adc
testb
arpl
push
jg
cld
adc
cmpsb
jno
mov
fildll
shlb
push
daa
in
sub
out
pushl
ss
ficomps
imul
mov
xchg
dec
sbb
xor
xor
in
sub
cmc
inc
xor
mov
cs
insl
cwtl
stos
fbld
pop
and
pop
fwait
lock
scas
cli
loopne
add
xchg
in
subl
cmp
mov
xchg
stos
xchg
dec
and
dec
cmp
pop
mov
mov
scas
add
inc
jae
test
mov
xor
popf
inc
jns
cmc
icebp
in
out
pusha
test
mul
divl
fildll
and
into
into
clc
lahf
adc
mov
shl
xor
aad
fldenv
add
daa
mov
fstpl
dec
and
jb
repz
jo
mov
xor
adc
mov
insl
push
inc
dec
jns
fcomip
mov
lods
addb
push
dec
or
and
insl
ret
mov
sbb
gs
xchg
and
mov
movsb
or
fcmovnu
mov
xor
repnz
fimull
fs
aas
nop
insl
and
xor
rclb
out
and
and
std
and
sbb
int
xchg
push
push
mov
xor
lock
jle
arpl
pop
subl
ret
mov
in
dec
out
jmp
aad
mov
hlt
mov
fcompl
aas
clc
pushf
filds
and
in
fcomp
repz
inc
insb
pushf
mov
outsb
daa
fnstcw
movsb
sti
popf
pop
mov
xor
imul
into
outsl
sbbl
repnz
dec
mov
mov
inc
xor
dec
and
mov
call
push
fcmovnb
cmp
ljmp
shll
test
lds
rdmsr
push
mov
jb
mov
mov
sub
xor
and
add
dec
mov
add
mov
push
jbe
aam
int3
ds
sub
shll
fstps
js
pop
iret
sub
adc
lahf
mov
addr16
iret
pushf
pop
mov
mov
jb
das
and
mov
mov
and
movsl
add
push
out
les
mov
xchg
adc
jns
pop
or
loope
sbb
push
stc
mov
xchg
icebp
inc
mov
sub
out
fidivrl
int3
jo
cmp
les
inc
lds
lods
out
nop
ja
out
sub
daa
ljmp
repz
mov
fcmovbe
push
ficoms
in
mov
call
push
and
aaa
mov
movsl
insb
and
in
pushf
sahf
cmc
pop
mov
push
mov
push
decl
jmp
cmp
mov
cld
add
adc
or
lcall
mov
push
sbb
jne
or
xchg
ljmp
cli
sar
movsb
xchg
xchg
mov
dec
cmpsb
test
mov
jle
mov
addr16
jmp
adc
repnz
mov
loop
sbb
mov
cli
aad
cmpsb
scas
add
dec
xchg
clc
lds
sbb
dec
ljmp
shrb
repz
popf
fs
pop
lods
frstor
sbb
nop
outsl
mov
leave
stos
mov
mov
icebp
pop
jns
test
sub
shl
test
aaa
xor
test
dec
inc
lea
aas
cmp
in
mov
push
jp
push
ja
repnz
stos
pop
xorl
bswap
test
lret
ss
add
fstpt
add
adc
mov
add
jecxz
xor
shr
inc
jb
nopl
jnp
dec
jmp
scas
mov
sbb
pop
out
out
jmp
arpl
out
mov
stos
pop
cltd
aas
mov
mov
loope
rdtsc
xor
test
and
es
cmp
lea
push
fsubrp
inc
jb
movsl
popa
dec
sbb
dec
push
test
inc
jmp
enter
pushf
imul
dec
mov
into
inc
mov
adc
sbb
mov
push
fbstp
xchg
and
aad
loope
pop
push
dec
enter
push
xchg
xchg
adc
push
and
jns
dec
aaa
mov
mov
inc
rol
inc
pop
xchg
imul
or
mov
cmc
leave
xchg
push
sti
and
aaa
mov
lock
fidivs
push
test
fildl
jle
dec
leave
dec
dec
jmp
fsubrl
or
repnz
test
sbb
imul
jl
add
or
pop
xchg
dec
push
inc
sahf
pop
or
ret
mov
lahf
jo
jp
pop
xor
dec
lea
test
icebp
sub
push
sbb
repnz
pop
out
xlat
push
cld
arpl
jnp
ret
loope
inc
push
mov
xchg
jecxz
sbb
inc
mov
cmpsl
cmp
push
fildll
mov
sbb
adc
fs
push
jmp
and
inc
stc
shrb
enter
frstor
xchg
sti
dec
lods
mov
test
decb
iret
sbb
outsl
pop
pop
mov
or
shrl
push
adc
in
mov
fmull
pop
scas
es
fisttps
in
roll
xchg
je,pn
lret
imul
testl
jle
dec
fmull
cmp
mov
ljmp
fisttpl
add
jno
cmpsb
sub
aas
daa
cmp
pop
sub
and
mov
repnz
sbb
imul
ret
sbb
sbb
fistpl
push
push
fucom
test
jae
sub
cld
push
xor
add
push
push
ficompl
and
imul
cmc
dec
or
pop
lea
sub
arpl
mov
in
out
repnz
ret
mov
int
dec
cmpsb
divb
leave
aaa
lret
icebp
push
shrb
cmp
push
sub
dec
test
sub
or
fstpt
xlat
push
xchg
sbb
outsb
out
shll
sti
and
sbb
into
mov
xchg
or
mov
jns
sub
mov
mov
pusha
iret
sub
cmp
mov
adc
jmp
addr16
pop
cmp
add
jb
int3
jb
push
sbbl
dec
fwait
aad
sub
xchg
dec
fcomp
mov
push
push
jge
lods
xor
inc
jmp
pop
or
fwait
lods
pop
jl
aaa
push
mov
dec
shll
xchg
stc
jns,pt
rolb
lds
inc
pop
mov
jae
mov
mov
andb
push
pushf
or
xor
in
mov
stos
push
clc
pushf
cmpsl
mov
inc
pop
jmp
add
jb
out
bound
nop
push
cmp
or
aad
ljmp
jne
mov
mov
sub
fs
push
dec
ret
fucomi
cmp
xor
adc
insb
adc
out
out
hlt
fnstenv
push
mov
push
dec
incb
imul
repz
repnz
mov
pop
in
inc
sub
mov
mov
mov
inc
movsb
mov
adc
adc
push
mov
mov
jno
mov
das
lods
int
jnp
pushf
jl
adcb
fwait
add
or
xchg
out
sbb
repnz
and
sahf
mov
xchg
adcl
cmp
push
cmp
fildll
cld
mov
hlt
xchg
cwtl
and
in
inc
rcrl
dec
sub
mov
movsl
lcall
inc
jle,pn
cmp
or
or
mov
jne
nop
sub
sbb
push
insb
test
call
jae
push
daa
pop
inc
xor
into
xchg
pop
mov
sbb
std
ss
or
arpl
aad
and
jmp
dec
sub
mov
orl
loopne
add
cli
and
jecxz
cli
sbb
pop
test
jb
iret
out
pop
xchg
in
push
fstl
insb
sbbl
mov
inc
push
push
stos
inc
mov
sub
mov
cs
inc
dec
adc
adc
mov
sub
mov
mov
int3
xchg
lret
cmp
adc
jmp
pop
inc
jb
cs
add
cmp
inc
enter
xor
adc
decl
mov
shrl
mov
icebp
je
stos
pop
mov
xor
pop
jbe
out
adc
xchg
and
add
gs
or
adc
sti
ja
mov
xchg
jp
es
addr16
out
mov
xchg
scas
and
pop
imul
jno
push
pop
icebp
adc
je
ror
mov
mov
lcall
bound
enter
dec
inc
cmpsl
pop
jl
dec
add
arpl
and
sbb
fmul
ja
push
cmp
ja
xor
adc
inc
adc
xor
cmp
shrl
mov
jl
lret
inc
xlat
adc
mov
notl
fstps
pxor
jae
lahf
xor
xchg
push
mov
js
jae
add
in
stos
enter
jbe
nop
xor
sub
cmpsb
inc
mov
stos
mov
mulb
mov
xor
sub
pop
cmp
movsl
push
movsl
scas
dec
int3
jecxz
in
mov
popa
cmpsb
fs
outsl
xchg
adc
add
jb
or
jbe
std
pop
pop
fisttpl
cli
int
movsl
lea
inc
lahf
cmc
sbb
adc
into
mov
in
jnp
lcall
mov
je
cmp
dec
out
xor
inc
xor
cmp
inc
icebp
enter
xchg
ret
int
rcrl
xchg
mov
mov
mov
push
rcrb
js
les
sub
imul
sbb
and
es
ja
pop
cli
repnz
pop
fwait
lret
fisubs
sahf
or
or
dec
lret
push
push
xchg
pop
sub
push
pop
fisttpll
shll
cmp
mov
mov
imul
shlb
into
popf
lods
mov
sbb
push
clc
andb
xorb
and
bound
into
outsb
mov
push
jns
jmp
jnp
xchg
pop
fsubs
fwait
adc
clc
gs
bound
and
out
popf
rorb
scas
xchg
divl
data16
pusha
xchg
nop
fbstp
shlb
js
cmp
mov
js
fmuls
lret
and
repnz
cmp
xor
push
addr16
out
js
stc
adc
xor
dec
mov
mov
pop
pop
insl
jmp
popa
mov
and
xchg
mov
jl
fsub
and
mov
mov
scas
dec
jb
lods
mov
ljmp
xlat
in
scas
mov
ret
fnstcw
sub
dec
das
mov
sub
mov
clc
insb
loope
add
pushf
pop
pop
push
cli
mov
inc
aas
iret
popa
cmp
pop
cmc
rcrl
loop
and
out
test
test
in
repz
scas
sub
insb
fs
sbb
jns
test
fisubrl
sbb
insb
in
or
cmpsl
daa
mov
push
dec
out
adc
aaa
inc
into
into
sub
test
cmpb
sti
dec
outsb
jl
push
mov
pop
push
fidivl
or
jb
iret
xchg
fsubrl
cwtl
cmp
fistps
fildll
and
or
add
add
sub
insb
into
jo
jmp
test
xchg
imul
scas
add
mov
sbb
ret
sbb
pop
inc
shlb
adc
shr
scas
imulb
ss
cmp
dec
mulb
pop
cs
cmp
dec
mov
fdivl
cltd
mov
aaa
fcmove
lods
xchg
mov
icebp
in
movsl
rcrl
sub
sbb
jp
dec
xorb
xchg
mov
inc
adc
inc
mov
jns
jbe
adc
pop
out
mov
pop
dec
rol
leave
lea
mov
add
fsubrp
lods
dec
dec
cld
push
and
mov
insb
xchg
in
xchg
inc
ja
scas
je
xchg
and
sbb
dec
inc
insb
push
pop
xchg
ja
sbb
cmp
in
add
inc
push
sub
movsl
fsubs
and
push
or
lods
push
cmp
jne
jmp
mov
pop
pop
shlb
xchg
xor
add
rcrl
popa
pop
test
aas
bound
xor
loopne
jmp
inc
out
ljmp
mov
sti
and
sub
sbb
pushf
fsubl
loopne
loopne
sbb
mov
call
mov
mov
mov
pop
fbstp
and
mov
or
sub
fbstp
add
mov
xchg
xchg
mov
and
sub
push
ret
dec
pop
hlt
mov
pop
sbb
cs
xor
xchg
inc
sbb
mov
or
movsl
inc
movsb
fisubrs
ret
repnz
pop
push
fs
sarl
or
das
in
push
push
sbb
ror
push
fnsave
mov
dec
in
in
mov
or
scas
scas
or
push
pop
cwtl
push
mov
and
mov
and
sbb
rcr
stos
call
fstpt
or
lahf
lods
inc
shrb
pop
xchg
stos
ljmp
out
nop
sahf
rcl
sub
jbe
xor
jne
push
xchg
push
enter
push
dec
push
xchg
add
mov
add
or
cld
loop
mov
xchg
pushf
stc
jae
sbb
xchg
call
mov
pop
ds
arpl
add
fiaddl
adc
test
mov
xor
sbb
mov
shlb
sub
push
sub
cmp
sub
addb
sub
enter
mov
pushf
jae
mov
gs
push
add
dec
out
stos
pusha
add
jp
lcall
out
fcmovbe
sub
mov
fwait
sti
add
add
jbe
rcr
xor
adc
das
cmp
outsl
push
out
mov
xchg
dec
cmc
pusha
sbb
loopne
jle
mov
ret
xor
xchg
sbb
movsb
out
mov
xchg
push
xchg
imul
int
cmp
imul
clc
xchg
fistpll
cmp
lret
cmpsb
mov
mov
and
sbb
or
pop
mov
xchg
dec
pop
and
pop
cmp
xlat
cmpsb
jns,pt
aas
xorb
or
imul
pop
push
xor
ds
in
xchg
and
das
adcl
cmp
iret
dec
xchg
adc
cs
mov
adc
pop
ficomps
daa
ret
out
imul
sbb
mov
xchg
mov
fndisi(8087
inc
xlat
push
popl
inc
outsl
dec
cmpsb
cs
sub
add
js
call
mov
mov
jg
pop
push
je
stos
pushf
sub
into
out
push
in
xor
test
ds
ss
int3
sti
mov
mov
dec
je
lock
adc
sub
cmp
int
ds
xor
cltd
test
pushfw
cwtl
pop
ret
jl
testb
xor
mov
mov
loope
add
adc
test
adc
clc
xchg
or
aad
rolb
pop
testl
mov
sub
loope
jge
adc
mov
insl
call
push
jg
push
fsincos
rorb
lods
scas
cmc
xor
pop
js
ja
cld
push
js
mov
push
js
adc
and
movsb
push
dec
xchg
xchg
add
sub
cmpsl
xchg
mov
xchg
jo
pop
out
aaa
mov
out
test
pop
adc
cli
mov
int
adc
jmp
pop
xor
bound
xlat
clc
push
pop
aad
xchg
into
outsb
pop
repz
fildll
inc
xor
dec
jns
mov
mov
xchg
loope
cmp
out
leave
xchg
xor
pop
icebp
movsb
ret
outsb
or
int
mov
data16
pop
fldt
xor
idivl
adc
cmp
inc
or
or
test
mov
mov
mov
dec
push
into
xor
dec
out
lds
cs
mov
ja
dec
xchg
push
arpl
xchg
and
call
pop
sbb
xchg
push
xor
roll
outsl
imul
ljmp
jmp
les
xchg
push
and
pop
stos
aam
cltd
and
dec
call
adc
test
mov
in
mov
repz
imul
mov
mov
out
neg
fildll
jge
pop
add
xor
outsl
imul
xchg
pop
mov
aas
in
xchg
pop
inc
inc
cmp
xchg
test
aam
sbb
popa
mov
and
lret
jmp
lods
std
xchg
mov
sub
push
in
xor
mov
lods
push
xchg
fsubs
cmp
fs
jbe
cmp
mov
xchg
cmovae
cwtl
loop
cmpsb
mov
mov
ja
jne
cmp
cld
movsb
mov
jo
movb
loop
mov
sub
mov
xchg
push
inc
stos
sbb
push
lods
and
jg
stos
test
scas
jecxz
xor
jp
in
mov
insb
push
leave
repnz
movups
int3
sub
cmp
push
adc
push
inc
and
add
iret
mov
rclb
lahf
scas
mov
mov
xor
outsb
out
mov
shll
add
cmp
movsl
jno
dec
adc
int3
xchg
push
out
cmpsb
rcrb
xchg
shlb
xor
adc
cmp
jecxz
or
cmp
add
cmc
dec
popf
mov
rcr
xor
out
add
fcompl
leave
push
mov
mov
adc
mov
sti
xchg
insb
cmp
or
cmpsl
scas
scas
cmp
insb
es
pushf
es
push
jmp
inc
loopne
sbb
mov
lods
xor
out
mov
pop
lret
shr
mov
pop
add
jle
aaa
scas
ret
fwait
mov
inc
rcll
lcall
dec
mov
cli
and
mov
js
lret
ss
imul
fimull
jle
addr16
pusha
and
mov
mov
popa
sub
je
into
lcall
addl
bound
mov
mov
xor
cmp
call
jmp
pop
add
add
les
push
push
lock
push
push
fs
push
dec
xchg
jp
cmp
aas
pop
pop
int3
push
in
sbb
es
push
scas
cld
repnz
and
jg
dec
mov
jns
outsl
inc
jecxz
ret
xlat
pop
lret
pop
imul
jo
mov
lret
addb
or
xor
push
sbb
pop
dec
mov
cli
dec
repnz
cld
pushf
sti
jb
mov
xchg
aam
mov
xchg
jmp
movsb
mov
mov
pop
cmpsl
in
mov
xor
fldenv
pushf
out
sar
lds
fidivl
jno
jmp
frstor
adc
pop
gs
mov
in
test
movsb
cld
or
ss
fwait
sbb
pop
push
bound
jmp
push
push
adc
add
js
mov
std
jae
or
rorl
into
pop
jne
imul
pop
xchg
repnz
aas
outsl
add
push
inc
mov
push
mov
jnp
ljmp
into
and
orl
ljmp
decl
js
loop
clc
scas
lods
in
rcl
inc
pop
int
rorb
imul
mov
push
repnz
cmp
xchg
ja
push
out
inc
in
mov
shl
scas
outsb
and
testl
fmuls
mov
shl
or
int3
xor
dec
std
test
add
adc
hlt
mov
lods
xchg
inc
test
xor
ss
inc
push
mov
push
adc
adc
sbb
jnp
mull
les
jmp
outsl
adcb
cli
jecxz
or
adc
cmpsl
xchg
lods
sti
lret
pop
andl
push
jo
fdivrp
imul
mov
repz
movsl
popf
sahf
loope
inc
fistpl
sahf
xor
mov
mov
mov
and
mov
push
dec
and
out
mov
fidivrs
or
push
cmp
pusha
mov
lret
inc
dec
divl
sbb
repz
int
pop
ficoms
fildl
adc
int
scas
loopne
repz
jle
imul
cltd
xchg
adc
loop
push
jae
mov
fsubrl
mov
cmp
mov
sub
push
sub
icebp
xor
push
in
mov
lods
cmpl
jne
lea
or
add
cmpb
xchg
js
and
lea
outsb
xor
sbb
mov
das
scas
lods
aad
cmp
stos
jns
lret
lcall
fdivrs
jle
leave
jecxz
jb
xchg
push
cmp
iret
xchg
mov
xorl
imul
push
push
mov
ja
stos
or
mov
mov
rcrb
ret
scas
xchg
in
outsl
fs
fnstsw
enter
inc
jnp
lea
subl
orl
add
push
mov
insl
out
and
inc
xchg
push
hlt
stos
cwtl
lcall
xchg
mov
mov
test
cmp
hlt
mov
pushf
sbb
imul
xchg
xchg
sub
add
cld
pop
adc
cmp
scas
lret
sub
or
push
into
in
imul
loopne
fisttpl
ja
stos
test
gs
sub
lods
subl
lret
push
mov
std
push
xor
push
pop
or
xor
mov
loopne
xor
mov
adc
cmc
rcl
cmpsb
dec
jp
cmp
inc
sti
out
mov
dec
cmp
mov
dec
mov
loope
outsl
bswap
sahf
cwtl
lahf
sub
jge
inc
sub
insl
fdivl
add
aas
lea
xor
or
aas
in
mov
test
cmp
push
ret
test
loop
xchg
std
pop
jmp
ret
dec
inc
popf
pop
xor
fs
scas
mov
mull
jp
pusha
mov
jmp
inc
dec
dec
sub
jne
inc
mov
inc
jp
mov
pop
pop
inc
lods
out
out
jne
jp
cmp
cs
popa
mov
jns
mov
dec
add
lods
xchg
pop
mov
inc
imul
push
jno
push
sbbl
mov
iret
hlt
loop
add
xchg
cmp
add
in
push
in
jp
rsqrtps
loopne
inc
js
inc
dec
pusha
sbb
xchg
std
insl
popf
sbb
or
adc
out
adc
jb
push
andb
ja
popl
xchg
test
pop
je
sbb
dec
arpl
sbb
pop
pop
aam
je
mov
mov
fdivrs
adc
out
inc
pop
jno
std
outsl
xor
stos
dec
js
pop
js
xlat
int3
ds
bnd
cmpsb
xor
xor
loopne
xchg
push
stos
add
xor
test
scas
pusha
jno
cmp
pop
add
lcall
sub
incb
mov
jne
cltd
jbe
cmpb
sub
mov
lret
test
loope
das
lahf
pusha
lds
rclb
in
insb
subl
xor
adc
mov
in
jne
sbb
xchg
jp
popf
insl
jnp
and
in
dec
sub
ret
cmp
insl
jbe
pusha
add
mov
jae
push
xchg
pop
fmulp
mov
mov
pop
adc
pop
insb
ror
out
scas
jb
std
pop
lcall
push
addb
mov
sbb
mov
cmp
rorb
mov
jne
pushl
pop
dec
xchg
jg
fcoms
xor
mov
cmp
test
in
aaa
sub
or
xorl
dec
js
sbb
outsb
imul
push
mov
mov
push
mov
push
mov
adc
and
or
push
dec
outsl
inc
adc
mov
int
pop
pop
daa
pop
shl
sahf
cmpsl
push
or
mov
ljmp
jno,pt
outsb
int
cs
mov
ja
adc
int3
add
jmp
rcll
adc
sub
and
dec
icebp
mov
shll
inc
xor
ja
dec
iret
ret
in
jae
or
jg
cmc
or
gs
mov
lahf
jbe
insb
mov
cli
xor
movsl
fwait
cs
add
pop
push
test
int
shll
push
add
jmp
out
push
outsb
or
cmpsl
dec
es
pop
data16
sub
adc
nop
addr16
ds
jnp
mov
loope
fs
xor
psadbw
or
into
test
sbb
mov
popf
inc
aad
push
sub
dec
lock
fistpll
mov
mov
lret
test
xor
mov
jle
lock
push
mov
push
mov
pop
or
dec
sahf
dec
mov
pop
inc
xor
mov
xchg
cwtl
icebp
inc
test
dec
xorl
in
ljmp
aas
add
clc
clc
and
out
or
mov
notb
shl
jno
mov
bound
insl
xchg
adc
mov
mov
jne
mov
push
xor
cltd
fadd
push
sub
lock
and
or
ret
jns
pop
mov
mov
or
test
dec
xchg
aam
pop
xchg
cmpsb
xor
test
popl
pop
lahf
adc
dec
and
loope
mov
jl
repnz
std
push
orb
lret
jmp
sub
lahf
pushl
mov
lahf
dec
or
sahf
aam
lock
leave
sbb
xor
push
ljmp
xchg
movsb
sub
stos
cmp
push
add
dec
xchg
xor
test
mov
bound
arpl
and
dec
scas
jge
mov
add
aad
ja
and
and
mov
hlt
clc
xchg
mov
push
enter
cli
mov
and
fisttpl
mov
pop
jg
or
mov
addb
fsubl
dec
ljmp
dec
sub
mov
push
mov
add
iret
xor
pusha
loop
mov
mov
ret
adc
data16
lods
jo
push
or
loop
iret
sub
leave
push
in
movb
pop
and
cmp
pop
rclb
mov
add
mov
call
cmp
or
mov
jle
aam
dec
call
into
out
push
in
test
mov
push
add
lods
sahf
rorl
shrb
dec
out
jno
lods
or
sarb
jae
sub
jno
xchg
aad
outsb
sahf
lock
daa
xor
jno
pop
push
in
cmpsl
jae
lahf
xor
imul
mov
xchg
fisubs
test
fwait
inc
jnp
imul
push
jae
or
xor
gs
and
or
adc
pop
stos
ja
cmp
aaa
shrl
call
cmp
cmp
sbb
cmp
or
test
bnd
test
roll
in
repnz
sbb
aas
sbb
and
shll
dec
xchg
or
shll
ffreep
inc
push
pop
lods
call
lds
mov
gs
adc
mov
movsb
sbb
cs
mov
push
mov
push
pop
out
arpl
sub
movsb
inc
iret
xor
xchg
rcrb
test
in
loopne
rclb
rcrl
out
push
loopne
imul
movsl
sub
or
sub
mov
ret
popa
mov
mov
sbb
stos
add
mov
mov
insl
leave
inc
daa
jle
das
adc
call
mov
stos
xchg
inc
dec
xor
or
ds
movsb
lcall
pop
sub
and
in
sbb
insl
mov
inc
mov
pop
stos
add
and
test
shr
mov
lds
adc
push
push
jns
out
mov
repnz
push
mov
jno
mov
call
scas
ds
push
pop
test
push
mov
out
mov
cmpsl
adc
shll
pop
aad
stos
pop
push
inc
addl
pop
movl
popf
addr16
adc
dec
imul
mov
fdivr
gs
ljmp
cmc
cmp
lret
cmp
lcall
stos
cmpsb
or
or
lahf
dec
mov
pop
inc
jp
sub
xchg
lods
sbb
movsb
clc
shll
rorb
inc
xchg
cmp
int3
pop
inc
jl
outsb
in
xchg
jmp
add
idivb
or
ljmp
jb
pop
ja
pop
jo
mov
jmp
in
rcrl
inc
mov
repz
shrl
nop
pop
mov
jb
pop
mov
and
shrb
in
test
insb
arpl
out
hlt
aad
jbe
pop
cmp
insb
lret
outsl
xor
jno
cs
jnp
jnp
test
sbb
stos
adc
xor
or
pop
pop
jno
mov
ss
sub
nop
mov
les
subl
xor
loopne
add
sub
in
cltd
in
pop
fcompl
push
or
or
test
sub
xor
or
popf
rorl
pop
insb
fnstenv
pop
call
sahf
out
popf
dec
ret
sub
push
add
int3
fidivl
in
lret
test
pop
pop
cwtl
inc
mov
pop
repnz
fstl
mov
arpl
jns
sub
stos
ljmp
add
push
mov
xchg
dec
cmpsl
add
test
loopne
jl
xor
aaa
inc
inc
fstpl
lret
stos
push
jmp
fbstp
jle
mov
mov
pop
lock
jbe
out
imul
mov
insl
mov
mov
and
and
cmp
sbb
lods
xchg
inc
in
pop
mov
loopne
scas
jg
xchg
push
rcll
out
push
test
stos
rcll
jo
pop
movl
inc
pop
pop
xlat
mov
std
adc
jecxz
inc
mov
and
addl
pop
sbb
pop
test
push
xchg
in
xchg
fistpl
out
dec
cltd
in
test
adc
pop
addr16
sub
dec
scas
pop
xor
lea
insb
jp
xchg
cmp
aaa
pop
test
adc
cld
mov
inc
icebp
cmp
jge
sub
pop
repnz
fwait
jp
sahf
pop
jl
icebp
into
cli
lods
out
js
push
xchg
pop
jnp
push
sbb
push
inc
mov
xchg
jmp
push
divl
scas
mov
xor
add
int3
leave
stc
insl
cmpb
jb
push
cli
movsl
inc
or
dec
push
dec
sbb
mov
loop
popf
in
sub
sub
inc
adc
xorb
popf
sub
adc
jge
arpl
pop
dec
hlt
movsl
out
dec
mov
mov
pop
lcall
push
rolb
movl
das
ret
cmc
ret
pop
loop
cmc
add
ret
mov
sbb
and
stos
cld
pop
sub
push
popf
popf
push
pop
jo
or
pusha
fldcw
push
xchg
daa
sbbl
push
out
out
insb
push
adcb
decl
and
clc
add
jns
stos
sub
mov
push
lds
inc
gs
rcll
pop
nop
xor
add
mulb
cmc
in
ljmp
clc
sahf
jb
adc
mov
or
aad
repz
mov
stc
jo
mov
dec
push
test
and
mov
xchg
jl
mov
or
flds
ja
lock
sbbl
xlat
lods
cmp
adc
jns
js
mov
jge
clc
or
sub
out
xchg
sbb
xchg
mov
sub
add
aam
jbe
lods
inc
mov
imul
jg
adc
inc
cmpsb
pushf
mov
mov
sahf
je
sahf
into
xchg
daa
icebp
into
cli
push
sar
jmp
in
mov
fcomip
pop
xchg
mov
fwait
aas
xor
lock
jnp
cltd
xlat
inc
mov
jnp
or
push
mov
mov
xor
imul
mov
movsb
inc
pusha
pushf
sbb
jbe
fs
jb
repnz
xor
add
mov
push
adc
cmpsb
xchg
adc
push
je
push
xchg
add
lods
mov
loop
les
mov
lahf
xor
mov
add
mov
subb
repnz
lds
jmp
stos
ret
mov
cmp
pop
fisttpl
mov
in
mov
dec
iret
inc
mov
popf
ljmp
mov
nop
lret
ds
call
cli
mov
jle
data16
and
arpl
mov
jae
andl
subb
lcall
into
sub
sahf
push
fnsaves
ds
jae
sub
popf
jge
cmp
jne
aas
push
movsb
in
repz
cltd
iret
fidivs
inc
outsb
dec
test
xor
mov
push
int3
mov
mov
outsb
add
lock
icebp
leave
or
sub
xor
pop
ljmp
xchg
nop
xchg
jl
scas
adc
lret
int3
inc
mov
or
pop
je
insl
dec
cmp
mov
fisttps
jnp
shl
shrb
cmp
fisubl
pop
setge
sbb
loopne
int3
lcall
pop
lret
cli
daa
rcr
add
pop
cld
nop
inc
pop
outsl
xchg
inc
and
pop
xchg
xchg
cmp
in
add
ret
leave
test
aas
lcall
cmpsb
stos
std
push
fdivrl
stc
je
jmp
lea
inc
push
add
aas
lock
pop
add
push
mov
mov
jne
xchg
pop
icebp
stc
xlat
add
cwtl
daa
jo
bound
in
dec
mov
jle
pop
jae
lds
and
or
push
clc
cmp
jns
sub
cmpb
adc
ja
movsl
push
jno
inc
insl
or
ljmp
fldl
jmp
and
mov
and
lcall
clc
lret
cmp
push
push
nop
ret
fldcw
sbb
mov
loop
outsb
inc
jb
iret
sti
cmp
sub
out
mov
mov
mov
push
and
in
add
sbb
fldl
popf
cmp
out
lods
js
pop
pop
in
mov
mov
mov
dec
adc
je
scas
sbb
push
add
out
or
mov
mov
aas
repz
jae
push
stc
push
ja
jmp
push
aad
mov
enter
push
std
fldcw
gs
push
fs
xchg
push
sbb
mov
push
push
aas
insl
fsubrl
aas
inc
jns
iret
jle
jg
stos
out
insl
ljmp
subl
adcl
jl
addl
loope
sbb
lods
shrb
ret
inc
cmp
gs
inc
xor
into
call
imul
repnz
and
mov
jmp
pop
push
cmp
push
cli
rorl
add
pop
stos
xlat
jae
cmc
push
adc
and
fcomi
popa
mov
xor
jge
sub
repz
pop
mov
xchg
mov
sbb
in
pop
lahf
pop
stc
cmp
xchg
mov
pop
adcl
cmc
repnz
dec
inc
dec
pop
mov
inc
sub
outsl
rcr
fdiv
mov
mov
jne
daa
pop
dec
ret
add
mov
inc
dec
shll
scas
sub
in
jbe
xchg
inc
imul
dec
lea
cwtl
xor
pop
dec
aam
sbb
in
dec
loop
stos
cmp
lds
inc
inc
mov
mov
pop
inc
int
adc
sub
fnstcw
int
jmp
mov
rorb
lea
pushf
xchg
inc
mov
fidivrs
push
aaa
jbe
sub
pop
jno
icebp
loop
popa
fscale
dec
in
mov
aaa
cmp
mov
ss
push
sub
push
jmp
jge
repnz
movsb
in
push
loopne
lcall
adc
pop
cltd
clc
les
or
mov
xchg
in
pop
mov
dec
int
mov
movsl
scas
inc
jae
xor
jecxz
adc
fsubr
jle
shl
repnz
icebp
inc
xchg
mov
std
daa
mov
popa
popf
jno
cmpsb
std
rolb
lea
mov
dec
jecxz
mov
and
sub
or
js
cli
in
inc
pop
loop
aad
imul
push
ja
inc
mov
cld
and
into
repz
pop
scas
jo
add
push
mov
or
jnp
mov
andl
jne
jb
ret
push
sbb
fmull
cmp
mov
mov
in
or
push
or
add
mov
gs
lea
dec
lret
adc
inc
jle
sbb
mov
outsb
push
stos
cmpsl
loope
lock
inc
and
xor
inc
adc
push
cmp
mov
cld
sub
sub
inc
ds
rclb
cs
jl
pop
push
add
and
mov
ljmp
mov
mov
jbe
insb
sahf
push
aaa
in
mov
gs
gs
aad
rcrl
movsl
test
adc
pop
mov
cwtl
sbb
inc
mov
mov
subl
xor
aas
out
inc
test
stc
icebp
adc
mov
jge
dec
add
jle
or
mov
and
ret
push
sbb
inc
imul
dec
adc
mov
sub
rolb
dec
adc
std
sub
adc
xor
clc
pop
call
dec
or
fcmovne
fs
into
loopne
clc
push
inc
or
xor
fldt
add
mov
xchg
sbb
pop
lcall
out
xchg
adc
je
adc
stos
add
ret
fadds
mov
mov
das
cmpsl
dec
dec
add
pop
mov
xchg
xchg
mov
fists
pushf
gs
sbb
sti
mov
jmp
or
inc
dec
shll
push
xor
fiaddl
inc
popl
subb
out
cmp
icebp
aas
scas
in
push
lods
mov
inc
out
mov
mov
repz
inc
cmpsb
loope
out
push
pop
sbbl
xor
push
xor
xor
push
lds
sbb
mov
mov
sbb
push
lahf
mov
cmp
popf
test
sbb
lea
xchg
mov
mov
int3
in
cld
sbb
pop
jns
imul
ljmp
cmp
loope
add
add
jmp
jne
scas
pusha
sbb
clc
notl
dec
outsl
push
ss
icebp
cltd
mov
adc
je
xchg
pop
pop
les
xorl
arpl
add
into
push
arpl
pop
js
and
cmc
inc
xchg
dec
popa
cmp
lret
inc
and
push
leave
dec
fldt
mov
mov
mov
mov
push
rcll
or
cwtl
cmp
jle
sahf
or
cs
loope
cmpsb
jmp
les
out
cmpsb
cli
or
orl
fs
int3
jl
rol
insl
cltd
jne
ret
cld
frstor
loopne
adc
push
insb
ficoml
mov
lods
mov
sbb
int
jle
mov
adc
cs
in
sbbb
xchg
cld
repnz
in
sub
cmp
jae
adc
push
pop
arpl
mov
mov
mov
pop
jo
push
sub
mov
pop
insb
stc
data16
fwait
dec
test
xchg
daa
push
dec
fisttpll
inc
mov
mov
cmp
cld
mov
fcompl
out
mov
ja,pn
mov
push
and
and
adc
ds
push
test
aam
and
fwait
xor
cmp
fnstcw
call
xlat
pop
mov
imul
cs
pop
jne
or
mov
ror
add
in
mov
and
mov
outsb
adc
sbb
jecxz
inc
andb
adc
dec
fbstp
fwait
das
jge
mov
nop
mov
jno
push
outsl
jne
jg
adc
push
int
and
mov
adc
or
push
sbb
xchg
pop
pop
push
mov
add
mov
sub
emms
jmp
jmp
sahf
inc
adc
fidivrl
btr
xor
cld
enter
ljmp
int3
push
push
nop
add
mov
xor
shl
in
inc
inc
fs
outsb
and
mov
in
sbb
push
cli
movsb
out
repnz
or
and
cmpsb
add
out
push
push
stos
sub
clc
je
das
out
into
adc
mov
cltd
mov
mov
das
fld
push
in
js
sub
in
inc
add
or
xchg
push
ret
ret
jnp,pn
xor
aas
adc
mov
pop
sub
dec
loope
test
fdivrl
adc
add
or
dec
ljmp
les
sub
or
fbld
jecxz
fsub
sub
stos
mov
popf
xor
inc
jge
dec
out
mov
sub
push
pop
std
mov
aam
iret
xlat
bound
inc
or
jge
jnp
mov
jle
mov
jnp
das
scas
daa
xor
out
xchg
inc
in
jnp
add
loope
sbb
in
inc
dec
out
mov
cmpsl
xchg
lret
push
xchg
jae
inc
outsl
pop
pop
mov
stos
push
mov
int
int3
cmc
jmp
fdivrs
inc
in
mov
adc
iret
ret
xor
sub
rcrl
fstl
xchg
sbb
mov
and
adc
pushf
lea
dec
add
jb
fstp
cmp
jl
cs
push
inc
and
mov
lret
pop
loopne
pop
sub
std
add
push
and
enter
mov
mov
cmp
mov
sub
bound
mov
je
fmulp
sub
push
sahf
dec
sbb
and
add
sub
in
add
sub
mov
fstps
inc
repz
cmp
mov
negl
out
das
lret
std
popf
jg
aas
test
movsl
movsb
aas
fucom
shll
daa
hlt
scas
xor
shll
fnstsw
sub
and
mov
lods
add
push
xor
add
sbb
repz
lret
xchg
stos
lock
mov
loope
add
jl
fwait
lret
fsubrl
inc
fiadds
mov
stc
mov
pop
xor
int3
shrb
sbb
dec
cmpsb
popa
jb,pt
pusha
and
test
in
hlt
jl
sbb
icebp
and
cwtl
sub
adc
loop
dec
mov
in
sub
lahf
add
fs
hlt
dec
insl
pop
mov
inc
dec
or
ffreep
dec
fisubs
inc
jno
jns
lds
mov
fmul
mov
fstpt
pop
adc
leave
out
div
loope
mov
insl
rcll
rcll
mov
adc
sub
push
orl
mov
mov
divl
into
or
inc
dec
pusha
lcall
out
aam
jb
add
dec
incl
cmp
sub
xlat
shrl
mov
mov
dec
bound
rclb
pop
inc
stc
lds
pop
pop
push
jmp
adc
test
ds
xor
add
cmp
lret
in
add
mov
in
outsl
in
lds
out
mov
inc
test
lods
in
jl
sbb
jge
mov
repz
jl
dec
repz
ret
fcmovne
int
push
sub
mov
in
mov
and
dec
popa
shl
shl
push
sub
leave
jae
call
pop
sarl
push
push
xor
jne
addr16
lds
shl
push
sub
out
pop
arpl
cmpsb
mov
mov
lcall
in
cmp
mov
mov
adc
xor
push
inc
test
shrb
push
lods
xlat
leave
pop
mov
mov
lahf
movsl
mov
xor
push
push
loop
jns
int3
int3
sbb
push
rorl
and
imul
adc
ret
mov
add
dec
mov
cmp
sbb
arpl
pop
inc
enter
ret
inc
or
mov
loopne
jle
mov
in
ds
sahf
ret
dec
dec
mov
xor
mov
test
shll
xor
lds
mov
mov
lods
or
cld
sub
lret
push
cs
pop
hlt
mov
push
cli
rolb
clc
mov
aad
stos
fs
aam
pop
dec
ret
and
lret
outsb
push
shlb
enter
jae
addl
test
scas
and
daa
lock
sahf
inc
pop
or
test
pop
testb
xor
shl
pushf
aad
loop
jnp
mov
pop
sti
arpl
sub
dec
in
int
mov
lea
jns
push
lret
inc
sub
and
sub
sub
cmp
ds
sbb
xor
int3
or
jge
dec
ss
inc
fldt
fstpl
inc
dec
in
cwtl
movsl
adc
cmpb
xor
jbe
cmpsl
mov
push
es
paddusw
adc
out
cmp
sub
aam
xchg
push
ficoml
mov
ds
pop
stos
movsb
outsl
lock
and
lcall
dec
in
test
xchg
pop
lcall
pop
push
sbb
mov
cli
cltd
push
adc
les
rcrl
mov
sarb
cs
inc
push
xor
push
popa
pop
imul
imul
pop
sub
xorl
jl
adc
roll
hlt
insb
xchg
insl
jb
faddl
jae
fists
push
mov
outsl
xlat
loope
push
or
les
test
loope
push
loopne
pop
popf
xchg
sub
sbb
fld
xchg
xchg
sub
jge
or
mov
lcall
pop
in
add
mov
icebp
jmp
xchg
dec
ss
pop
arpl
mov
loop
daa
cmpsb
movsb
cmpsb
daa
sbb
dec
sub
push
lods
adc
ss
outsl
ja
xor
int
shlb
pop
ror
add
sub
enter
sub
stos
inc
jo
std
call
cmc
lods
xor
imul
stc
jmp
adc
inc
cltd
push
mov
es
call
sbb
lods
setne
out
xor
movsb
push
inc
xchg
dec
andl
lds
sbb
das
insl
int3
andl
push
push
adc
gs
dec
scas
inc
imul
mov
jecxz
les
pop
out
hlt
lods
or
add
lcall
repnz
push
rolb
mov
adc
movsl
pop
push
ret
sar
call
inc
repz
jne
jno
cld
add
sbbb
fisttps
sbb
pop
and
jl
mov
add
sub
fs
test
cld
es
xchg
fs
mov
dec
cwtl
in
xchg
shl
test
dec
adc
dec
and
bnd
sbb
mov
in
stc
xchg
mov
sub
and
scas
push
push
leave
aad
aam
push
mov
push
or
cmpsl
clflush
jns
lock
int
pop
push
jno
add
scas
or
pop
fcmovne
je
stc
cmp
data16
xchg
xor
loope
enter
int3
adc
popf
jmp
out
ljmp
cs
inc
sbb
repz
add
mov
fcompl
inc
dec
push
dec
cmp
ds
je
cmp
scas
test
mov
mov
hlt
adc
mov
repz
pop
inc
and
add
test
lcall
lahf
js
fisttpll
or
mov
jns
aam
dec
and
jecxz
dec
and
push
mov
cmpsb
mov
ljmp
mov
int3
adc
xchg
out
inc
pop
roll
pop
or
fidivrl
enter
dec
adc
push
pop
or
adc
rorl
filds
aas
add
lods
pop
xor
mov
in
xor
ss
loop
add
add
mov
sub
jae
into
inc
xor
mov
jbe
sub
add
or
cmpsb
test
cld
push
mov
insb
adc
fidivrl
dec
pop
push
xchg
outsl
or
sbb
jg
and
cmp
mov
xor
ja
xchg
out
mov
inc
cmp
mov
aaa
fwait
pop
jp
sahf
mov
jge
or
mov
xchg
jbe
das
lahf
daa
into
out
mov
dec
mov
xchg
jp
stos
js
in
stc
mov
push
xor
roll
add
mov
mov
dec
mov
leave
cmpsb
fs
js
sub
mov
push
sahf
fsin
pop
cwtl
lods
xchg
or
push
clc
xlat
pop
jno
es
cmpl
fisubrs
pop
test
cmp
mov
sbb
and
cmp
sub
addr16
das
rcr
idiv
ds
clc
dec
dec
notb
in
fcmove
pop
cmc
cmp
shlb
mov
outsl
cmc
rcr
jmp
mov
xchg
inc
movb
push
jle
pop
dec
and
mov
shl
mov
dec
xor
fadd
pop
outsl
ret
jae
jp
jbe
fucomip
pop
adcb
ret
mov
aam
mov
xchg
call
xchg
gs
sahf
dec
sarb
scas
and
xor
mov
mov
cmpsb
adc
dec
cmc
adc
divl
cmp
and
and
and
cmpsb
jle
cli
loop
jp
dec
les
push
inc
sahf
add
cwtl
sbb
fwait
xchg
es
inc
jbe
in
inc
scas
lods
mov
test
ds
cwtl
adc
iret
xor
xchg
pop
mov
mov
shlb
stc
and
outsl
lods
rdmsr
cltd
lcall
or
pop
xor
sub
jns
and
push
mov
popf
inc
pusha
mov
enter
ljmp
dec
insl
add
inc
icebp
push
jecxz
dec
and
lret
arpl
sbbb
or
cs
sub
lods
push
hlt
mov
pop
mov
out
out
mov
xorl
imul
fidivrs
sub
stc
add
ljmp
jo
inc
es
dec
pop
mov
xchg
push
loopne
and
popf
sub
sub
loop
insl
mov
jecxz
pop
fwait
xchg
or
rol
cmpsl
dec
add
jne
mov
sub
jo
popf
cmpsl
pushf
push
add
mov
cwtl
fcompl
movsl
and
mov
mov
rcr
push
pop
aaa
js
cmp
sbb
fcmovne
loope
in
and
jle
xchg
inc
lods
push
mov
in
push
mov
inc
push
inc
sahf
movaps
push
mov
cmp
pusha
and
loop
fbstp
ss
adc
cmp
or
add
js
xor
lock
ds
leave
push
jns
aas
lock
mov
adc
mov
lods
dec
cld
or
jecxz
out
bound
push
mov
das
into
sbb
mov
and
in
dec
pop
push
jmp
cmp
sub
push
cmpsl
and
mov
popf
call
xor
add
sbb
je
arpl
leave
fcompl
pop
push
mov
adc
mov
out
loop
jo
mov
fidivl
mov
add
sub
ret
add
stos
push
out
loopne
and
jb
dec
jmp
std
jae
add
std
stc
mov
hlt
fstl
pop
in
test
dec
ja
hlt
push
into
adc
lret
int
in
push
scas
call
mov
push
xor
inc
cmpsb
ljmp
movb
or
mov
sahf
int3
push
leave
sub
sub
cmp
or
inc
in
xchg
scas
ja
pop
mov
ds
insl
sub
dec
dec
test
in
pop
pop
cmc
int3
mov
daa
outsl
xor
pusha
inc
add
test
inc
nop
push
mov
arpl
mov
sarb
js
mull
loop
pop
mov
lret
or
pop
jmp
cmpsb
mov
cmp
jmp
js
pop
mov
out
inc
jmp
jp
sub
dec
arpl
push
or
popa
in
movb
pop
xor
or
inc
pop
xchg
jecxz
lods
pusha
ljmp
xchg
mov
jecxz
cmpsb
xchg
int
andb
lret
xchg
push
hlt
jp
pop
andb
enter
ja
fs
jnp
test
push
repz
sub
mov
push
loope
mov
lods
pusha
mov
jmp
mov
mov
dec
fwait
gs
xor
xchg
push
sysexit
xor
adc
dec
sub
and
test
mov
adc
mov
dec
pop
andb
incl
adc
lret
sarl
fidivrl
shlb
out
lret
cmp
mov
jae
cwtl
jo
push
mov
in
into
sub
sub
ficoml
mov
xchg
xor
ss
xchg
mov
or
mov
push
add
mov
lds
arpl
pop
xor
adc
or
fs
adc
dec
stos
sub
imul
iret
aad
ficomps
rol
ret
bound
mov
dec
fcmovnb
lds
scas
lods
dec
mov
jecxz
inc
popf
sbb
pop
std
xchg
shlb
push
out
jns
inc
xchg
ret
rcr
jns
xor
mov
push
sarb
inc
outsl
jb
mov
dec
cmc
and
pop
imul
mov
inc
lock
fldcw
mov
mov
out
mov
inc
adc
mov
jne
into
jg
jl
lahf
mov
xlat
adc
fimuls
or
cmp
xchg
add
std
cmp
mov
shrb
xlat
es
sub
push
cld
push
mov
loop
decl
pop
dec
jmp
pop
cmp
mov
inc
inc
aaa
jo
mov
daa
push
cmp
xchg
int
jg
inc
jmp
adc
mov
stos
or
adc
mov
imul
pop
dec
xchg
ret
test
push
pop
test
and
mov
sub
sbb
popa
xchg
inc
cltd
and
lock
les
movsb
jecxz
pop
push
fistpl
xchg
sbb
enter
xchg
mov
in
fdiv
stc
incl
cmpsl
rcrl
adc
rclb
push
adc
fdivrs
out
es
jo
lods
jo
cmpsb
sub
insb
and
or
xor
push
mov
inc
aad
mov
cmp
pop
clc
fldcw
and
sbb
sub
repz
pusha
stos
mov
addr16
xor
in
stos
lock
push
lret
or
sarl
cmp
in
mov
xor
shlb
test
enter
aam
testl
pop
addb
sahf
cmpsb
pop
inc
repz
js
cs
test
adc
push
and
mov
and
sbb
negb
cs
std
dec
hlt
pop
adc
pop
jle
call
xchg
cmp
aam
test
dec
add
outsl
arpl
addb
push
xchg
das
push
push
stc
stos
cmp
ds
or
push
lds
dec
rcr
es
jns
jge
nop
xchg
fldenv
push
sti
xchg
or
out
ljmp
sarl
cli
scas
fcmovne
call
insl
aas
xor
push
sub
push
adc
stos
jp
push
icebp
ss
enter
dec
pop
sub
cmpsb
ss
out
xor
in
sub
dec
cmp
inc
pushf
clc
inc
aaa
nop
dec
mov
xor
int3
adc
sbb
insb
sub
ds
mov
jg
std
into
dec
xor
lret
outsl
push
or
and
or
pusha
outsb
jg
mov
mov
cld
int
xor
fistps
sbb
add
or
stos
and
lock
dec
imul
ljmp
cmc
xor
sbb
jp
cmp
pushf
out
inc
mov
push
scas
jecxz
stos
sub
mov
movsb
xlat
jg
outsl
out
pusha
cltd
cmpsl
fnstenv
ljmp
or
dec
add
loope
cmp
cmpsl
cs
push
jns
movsb
je
cmpsl
xchg
out
cmp
xorl
add
xor
mov
fiadds
mov
mov
dec
repnz
mov
cmpsb
mov
jg
dec
lock
and
cld
dec
mov
js
cmpsb
lock
shl
ljmp
mov
stos
push
clc
out
mov
xchg
sbb
insl
adc
push
add
cmp
push
sti
mov
sbb
out
mov
imul
mov
lret
inc
lock
imulb
sbb
pop
lahf
out
add
jne
or
into
adc
insb
sbb
mov
mov
pop
jge
pop
mov
xchg
or
mov
mov
and
andl
adc
dec
std
or
jno
mov
jno
bound
add
cmc
fsub
aad
das
sahf
lods
or
and
repnz
xchg
jp
add
mov
int3
xchg
int3
nop
aaa
dec
movsl
adc
stc
cmp
dec
neg
dec
mov
shll
or
push
cwtl
cmc
lret
sti
and
sahf
cli
repnz
mov
repnz
cmp
fsubl
jge
pop
sbb
mov
sub
cmp
jmp
bound
jge
icebp
stc
sub
int3
ds
dec
cltd
pop
sub
fadds
fcoms
leave
push
mov
outsl
push
fcom
push
out
lds
adc
fsubrp
sbb
jp
mov
pop
cmpsb
stos
clc
pop
mov
fidivrs
movb
push
shrl
fcmove
sbbb
cmp
movsl
clc
jp
sub
mov
mov
ljmp
outsb
stos
les
leave
imul
mov
es
fcomps
dec
lods
add
jmp
rclb
lret
sub
and
pop
lds
in
out
mov
hlt
sub
pop
clc
int
mov
rcll
gs
add
test
sbb
fiadds
ret
lods
ret
lret
sub
hlt
mov
scas
repz
sbb
jg
mov
jge
cld
or
or
daa
loopne
xor
mov
sarb
fisubrs
jmp
add
push
iret
pop
and
cmp
popf
adc
and
sbb
rolb
shll
dec
push
sbb
pop
in
push
iret
lcall
js
decl
ret
dec
mov
addl
lret
dec
or
imul
cmp
cmp
std
cwtl
pop
xchg
fs
adc
jnp
push
jns
int
in
rcll
pop
aas
push
cmp
cmp
enter
movl
test
cltd
mov
cmp
sbb
inc
dec
mov
imul
xchg
xor
ret
clc
fldenv
in
sbb
and
lea
push
int
mov
repnz
shrb
arpl
xchg
or
into
stc
icebp
jmp
add
mov
push
pop
pusha
cmpsb
loop
adc
add
dec
and
mov
adc
mov
sbb
stos
fildl
ret
adc
cmp
fiaddl
mov
aas
movswl
or
pop
push
xchg
mov
movsb
add
mov
enter
cwtl
sbb
dec
stc
dec
push
xchg
cmp
push
stos
lret
insl
out
iret
lcall
divl
lret
bound
repz
push
or
mov
jle
fdiv
arpl
inc
cmp
loop
mov
loope
lea
or
bound
pop
inc
mov
scas
jecxz
into
das
popf
popa
lock
cmpl
fistpll
mov
sub
fnstenv
sahf
mov
flds
test
mov
imull
call
xor
adc
mov
push
xor
movsl
push
je
mov
aam
inc
movsb
or
ret
int
adc
outsl
mov
xchg
js
repnz
les
push
movsb
adc
ds
mov
sti
add
notb
sbb
dec
xchg
push
dec
shlb
pop
lahf
xchg
push
cmpl
cs
mov
lea
inc
subb
xchg
cmp
push
cs
sbb
sub
es
pop
mov
and
mov
cs
dec
jmp
mov
fstl
shlb
adc
not
cmc
sub
sbb
or
mov
push
mov
cltd
cmp
pop
push
jmp
test
in
or
dec
stos
in
ds
mov
loopne
ret
mov
aam
js
mov
in
out
sub
mov
popa
js
or
sbb
jbe
inc
lahf
mov
push
pmuludq
push
pop
jle
push
add
and
or
cltd
and
lods
ljmp
push
add
add
fsubrs
xchg
jle
pop
insb
xor
dec
enter
icebp
sub
out
icebp
decb
mov
adc
pop
repz
dec
je
mov
out
xchg
push
mov
jl
push
sahf
jge
add
addr16
push
daa
shrb
jp
test
jae
lret
adc
adcl
adc
jb
mov
test
pop
clc
xchg
jmp
push
or
jb
add
xchg
or
cmp
shl
pop
scas
cmp
sub
cld
mov
shll
pop
in
mov
pop
adc
daa
or
cmp
test
mov
or
test
and
stos
sub
mov
popa
adc
scas
mov
adc
loop
and
divl
inc
or
mov
push
sbb
and
or
mov
jge
dec
cmp
int
cmp
int
ds
add
shrl
inc
add
out
pop
cs
or
push
jge
push
pop
dec
inc
sbb
rclb
ret
test
insl
ret
movsl
mov
fsts
mov
aas
cld
jo
xor
sub
add
mov
aaa
push
jecxz
push
sbb
pushl
push
sub
negb
or
cmp
imul
loop
das
and
adc
in
leave
inc
pop
xchg
arpl
mov
leave
imul
push
fs
sbb
lock
test
mov
xchg
into
inc
dec
mov
mov
fxch
and
xchg
dec
dec
sbbb
inc
ret
pop
push
lock
cltd
movsl
jle
jns
arpl
xor
xchg
adc
insl
push
dec
in
sub
pushf
out
sub
push
xlat
pusha
push
pop
bound
insb
fstl
incl
cmpsb
mov
fidivl
xchg
test
mov
andl
test
cmp
gs
aad
insb
mov
and
push
xchg
xchg
inc
jns
jbe
inc
insl
sbb
jne
cmpl
jp
inc
mov
mov
jns
inc
fs
call
push
and
mov
push
jg
lahf
xchg
xchg
mov
push
lret
inc
xor
pop
sbb
cmp
inc
cltd
push
mov
mov
lds
pop
jmp
aam
lahf
fisubrs
sub
fadd
bound
mov
sbb
xchg
or
jmp
rclb
sbb
repz
jmp
xchg
gs
xchg
fsts
adc
mov
es
mov
addr16
into
fnstcw
xchg
sbb
andb
into
xor
cmp
or
mov
add
jmp
jae
and
xchg
xchg
lret
cld
and
cld
test
sbb
jecxz
and
stos
fcmovnb
and
psubd
pop
ret
push
jae
cli
out
stc
add
ja
xor
xor
insb
cmp
in
sbb
mov
pop
inc
repz
cmp
xor
push
xchg
sub
daa
call
xlat
inc
inc
sub
push
popa
add
stos
sarb
mov
jo
mov
movsl
mov
in
jbe
fwait
mov
rcrl
sub
add
xchg
push
sahf
out
push
adc
gs
xchg
jb
or
pop
dec
sub
test
cmp
mov
dec
addps
xor
jmp
sbb
fistps
cmc
xchg
lds
lea
push
mov
and
test
inc
xchg
mov
adc
xchg
sub
push
cmp
loop
push
movsl
test
jbe
jo
sub
mov
inc
pop
mov
std
mov
out
shl
push
xchg
push
fildll
pop
sub
repnz
sarl
jecxz
mov
xchg
filds
dec
inc
test
jns
cld
xor
mov
insl
cmp
adc
inc
stos
xchg
xor
jbe
push
mov
mov
and
call
xchg
mov
push
jo
rcrb
cmp
js
add
fcompl
iret
cli
jmp
mov
and
add
ljmp
jbe
jno
daa
sbbb
pop
mov
push
xchg
xchg
push
mov
pop
pushf
je
sbb
mov
xchg
test
testb
scas
fs
mov
sbb
mov
outsb
orl
jle
fsubrs
adc
notl
xchg
sub
sahf
jp
in
cltd
mov
add
in
roll
xor
fidivs
aad
sub
mov
hlt
push
add
cmc
bound
inc
xor
mov
xor
imul
push
mov
cld
pop
scas
es
or
cmpsb
and
jp
or
mov
adc
imul
in
test
lahf
lds
loop
fdivs
out
mov
inc
ret
jae
repnz
fs
fwait
daa
mov
stos
or
sub
popf
daa
sbb
mov
mov
arpl
in
ret
movsb
pop
les
push
sbb
mov
lods
inc
imul
addr16
xor
fstps
pop
pop
rcrb
add
faddl
push
rcrl
dec
fisttpll
mov
outsl
out
aas
jmp
outsl
xor
imul
aad
movsb
adc
cli
push
pop
ja
enter
imul
ljmp
icebp
adc
push
xchg
add
inc
mov
mov
ds
jae
adc
pop
mov
sub
mov
cmc
dec
jns
fwait
outsb
or
jno
dec
fbstp
xor
and
test
jne
fcmovnbe
dec
mov
sbb
adc
dec
repnz
mov
or
mov
inc
orl
and
sub
xor
xchg
cmp
xchg
xor
and
and
push
scas
mov
jg
je
sbb
aad
cmc
xor
xor
dec
add
aam
push
jnp
add
orl
cli
cli
data16
fldt
mov
jge
out
mov
shlb
pop
sub
das
stos
xchg
addr16
lret
cmp
jo
insb
jbe
cs
push
movsb
adc
xchg
out
cmc
dec
jbe
dec
mov
mov
sub
gs
loopne
icebp
xchg
fisttps
mov
fwait
lods
and
nop
pop
jnp
jle
divl
adc
mov
mov
add
cmp
mov
daa
jl
jp
jae
dec
jmp
lret
cwtl
rorl
adc
nop
push
lods
jbe
adc
or
push
adc
jb
mov
cmpsl
jb
insb
daa
sub
pop
lahf
call
mov
xchg
ss
mov
jl
mov
jb
mov
sar
lock
divl
imul
mov
in
lock
sub
xor
mov
dec
ret
std
fdivrs
sub
jp
cmp
sub
inc
and
cld
stos
mov
push
mov
sbb
into
cwtl
ret
notb
sbb
rolb
add
int3
jmp
lea
es
js
bound
push
insl
into
movsb
add
jbe
xor
bswap
scas
adcb
cmc
push
mov
ss
mov
xchg
adc
mov
lods
xchg
inc
mov
or
mov
add
popa
sbb
sub
es
sub
mov
in
add
enter
rorl
retw
cmp
mov
repz
iret
in
mov
sbb
xchg
fildll
movsb
enter
xchg
lods
inc
jle
aaa
cltd
and
and
aaa
mov
pop
enter
xchg
or
push
loopne
lock
adcl
or
in
dec
sbb
jmp
xchg
and
push
std
push
mov
xor
lods
sbb
mov
xchg
xor
shrl
add
add
ljmp
xor
out
xor
addr16
test
out
mov
adc
inc
leave
pop
insb
popf
xchg
cltd
aad
xor
jbe
ljmp
cmp
mov
psrad
jl
js
cltd
add
ljmp
cli
sti
xor
cmp
sbb
pop
push
and
in
pop
or
sti
sub
xor
insb
icebp
popa
jecxz
rcl
dec
stos
add
in
cmp
jbe
dec
out
int3
adc
inc
fbstp
push
int
add
jne
add
cmp
mov
sub
sub
int3
jns
jbe
add
repz
aaa
je
xchg
xor
lahf
pop
in
mov
pop
xchg
xor
xor
roll
loope
mov
sub
fcomip
jmp
jbe
xchg
jp
sarb
add
pop
repz
or
xchg
or
and
push
subb
xor
xor
fsts
xor
imul
push
cmpsb
dec
and
pop
icebp
jne
jbe
xlat
rclb
xor
add
mov
cmpsb
es
imul
aad
repnz
adc
pusha
push
dec
adc
mov
sbb
pop
ds
sbb
adc
js
mov
fwait
or
cmp
imul
xchg
mov
jae
bswap
fistpll
adc
call
and
leave
fistps
pop
push
xchg
add
rcll
bound
out
push
into
cmpsb
aad
loope
rclb
cwtl
mulb
mov
mov
add
sub
sbb
adc
cwtl
mov
nop
xor
or
add
or
add
xchg
sub
cmp
xchg
adc
adc
add
xor
js
je
clc
sub
iret
lods
adc
scas
sbb
jae
lock
and
sub
dec
icebp
lea
dec
leave
mov
sbb
notl
mov
movsb
cmp
and
pop
or
push
clc
test
adc
sub
xor
xchg
iret
outsl
insl
mov
dec
fsubs
mov
das
dec
cmc
ljmp
and
js
subb
in
lret
and
ret
outsb
lods
xchg
ret
in
xchg
iret
das
fs
ret
ds
inc
push
add
add
push
aad
les
sub
repz
jbe
or
sbb
flds
into
mov
mov
mov
push
fdivrs
adc
mov
or
jle
inc
inc
jno
bnd
and
mov
test
pop
push
push
pop
xor
add
stos
leave
popa
jl
adc
loopne
pop
jl
mov
fstl
fildl
and
ret
jge
in
std
push
imulb
jle
stc
std
clc
test
int
rolb
mov
cmp
adc
int
loop
dec
mov
outsb
mov
sbb
in
popa
lret
stos
shlb
jno
sub
out
xor
fisttpll
daa
cs
shll
cs
mov
bound
fdivp
dec
in
jg
movl
fnstcw
data16
push
sbb
aaa
xor
xchg
ss
inc
dec
test
les
arpl
mov
push
stos
add
adc
and
aam
adc
ds
mov
aas
xlat
or
int3
cmp
jnp
cmp
rcll
fwait
mov
mov
adc
scas
int3
ret
xchg
test
mov
push
add
xor
leave
xchg
push
mulb
dec
dec
insl
adc
incl
out
mov
push
jb
es
loop
lea
repnz
mov
data16
rolb
adc
mov
jge
repnz
in
jo
or
movsb
add
dec
out
lahf
pop
data16
pop
mov
mov
xchg
ret
jo
lcall
into
call
add
adc
cmp
pop
test
movsl
outsb
jbe
aaa
or
fists
xor
lret
jno
cmp
call
outsb
adc
adc
jle
data16
jecxz
inc
fcom
mov
mov
popf
jmp
push
outsb
iret
mov
mov
daa
fsubrs
xor
xchg
mov
mulb
ss
sub
rolb
adc
call
pushf
int
lcall
lods
pop
mov
test
cli
lock
data16
ret
push
add
lods
push
mov
cmp
jg
push
mov
pop
cmp
mov
pop
lds
ja
stos
ficomps
imulb
test
call
push
stc
dec
xor
mov
jle
outsb
cmp
rorl
xchg
pushf
adc
push
and
mov
and
mov
jge
scas
and
cmp
scas
push
outsl
inc
shr
fadds
jp
cs
pop
out
es
pop
pusha
mov
pop
jmp
das
filds
xor
xchg
or
and
sbb
repnz
clc
sbb
sti
call
aas
jb
push
repz
ss
inc
inc
pop
and
sub
push
gs
cmc
lcall
lcall
adc
pop
lret
ja
xor
xorb
inc
jmp
leave
stos
addb
pop
push
or
aam
scas
dec
adc
mov
add
loopne
xchg
mov
adcb
jp
incb
adc
fwait
out
fnstcw
into
mov
lret
movsb
pop
std
mov
cmc
cmp
add
lock
adc
mov
push
negl
lods
jns
insb
add
push
std
mov
lods
imul
int3
sbb
bound
push
cmp
cmp
xlat
cs
mov
in
mov
cmpsl
mov
push
xchg
cmp
jbe
jbe
mov
repnz
xchg
sub
push
test
or
scas
jmp
xor
and
jne
repnz
xchg
add
in
push
std
rolb
jbe
test
cmpsl
dec
mov
cli
xchg
xchg
sub
in
hlt
sarl
pop
or
lods
popa
xor
cld
lods
xchg
jb
test
fstpl
ficompl
repnz
xchg
and
fiaddl
and
fmull
and
mov
xacquire
ret
ja
ret
enter
stos
jmp
xchg
adc
push
jns
xchg
popf
es
je
jl
loopne
loopne
lea
pushf
cmp
popf
fwait
sub
mov
sub
popf
scas
inc
out
out
ljmp
dec
pop
xor
and
imul
sbb
push
or
mov
lods
jle
cmp
sbb
cmpsl
mov
mov
add
and
mov
hlt
cmp
insb
pop
sbb
pushf
insl
inc
inc
hlt
aam
lahf
ret
sbb
mov
mov
cmp
mov
aam
lcall
sbb
aaa
pop
fdivrs
adc
sub
sbb
xor
scas
in
test
outsb
jg
adc
sub
pop
mov
pop
lods
xchg
adc
pop
arpl
outsb
push
out
test
clc
out
cmp
or
mov
or
sti
daa
out
and
cmpsb
jl
ja
jmp
lret
mov
and
iret
sar
int3
iret
mov
lods
xor
xor
mov
or
idiv
xchg
jecxz
std
das
out
mov
sti
gs
sbb
add
pop
add
imul
iret
xlat
mov
pop
data16
and
mov
je
jp
add
cs
stc
xchg
xor
rcrb
and
outsb
into
sbb
adc
ljmp
pop
into
and
clc
insl
mov
xchg
inc
and
nop
adc
in
pop
daa
xchg
lock
ja
dec
gs
movsb
loope
dec
add
addr16
mov
dec
das
inc
fwait
pop
sarb
lret
jl
or
int3
mov
iret
outsl
leave
aas
jae
out
rorl
push
cmp
mov
aaa
inc
stos
jecxz
inc
or
movsl
cmc
lock
sbb
or
and
xchg
inc
mov
mov
lcall
jecxz
addl
outsb
shl
mov
ja
sbb
adc
dec
sahf
sbb
cmp
xchg
lods
pop
sahf
fdivrl
test
outsl
outsl
cmp
or
mov
das
mov
insb
test
dec
sub
loopne
fldenv
repz
inc
jl
add
and
jecxz
mov
mov
lods
loop
and
pop
add
adc
frstor
jb
popa
add
ljmp
ja
rolb
dec
into
cld
jno
cmp
lret
stos
out
test
lret
xor
out
jb
movsl
mov
int
push
or
ds
mov
insb
loope
sbb
loope
cmpsl
int3
mov
test
lock
sbb
jb
sarl
je
pusha
cld
aas
ljmp
insb
ja
fwait
sub
mov
rorl
mov
sub
xchg
or
push
mov
xchg
shrl
cmpsl
sub
fldcw
shl
test
pop
sbb
fsub
jmp
and
dec
sub
popf
adc
sub
xor
dec
fisttps
jbe
push
and
cmp
and
mov
jns
rcrb
pop
movsb
inc
mov
xchg
mov
call
dec
xor
insb
jle
mov
xchg
jge
cmp
sbb
and
push
fdivrs
dec
or
scas
mov
cmp
mov
rorl
xor
jbe
mov
repz
ret
stc
addr16
rcrb
orl
jbe
scas
sti
out
add
in
in
sbb
push
dec
movsl
xchg
and
cmpsb
mov
add
jp
mov
xchg
fst
sarl
loope
std
jge
inc
test
pop
inc
sub
sbb
lahf
push
mov
xchg
popa
ret
popa
mov
les
or
call
cmpsl
adc
mov
xchg
scas
sbb
and
mov
mov
or
mov
les
cmpsl
clc
imul
popf
daa
add
pop
decl
dec
enter
lock
test
and
pop
inc
and
repnz
sub
out
push
test
popa
pop
lcall
sbbb
imul
ret
rorb
test
adc
das
outsb
dec
sub
jno
rcll
and
loopne
pusha
and
inc
dec
stos
dec
pushf
mov
mov
les
adc
pop
div
xor
xor
adc
jbe
push
pop
in
movsb
xchg
mov
mov
scas
mov
cmp
insb
dec
mov
jmp
jmp
mov
sbb
imul
fs
or
or
lds
aaa
jge
cmpl
jbe
sbb
shl
inc
sti
sahf
push
jne
dec
int
loope
pop
in
ja
xor
dec
arpl
lods
negl
leave
push
xor
lock
leave
cmpsl
dec
stc
mov
movb
cmp
or
mov
push
shll
clc
pop
pushf
or
fs
pusha
mov
lret
shl
jge
mov
jbe
adc
mov
cwtl
add
mov
or
repnz
jp
xchg
js
lret
inc
adc
cmpsl
jne
inc
insb
in
or
pop
insl
mov
iret
mov
jecxz
jns
arpl
xlat
sub
stc
int3
mov
mov
bound
mov
pop
test
sub
and
pop
gs
mov
test
cmp
jo
icebp
mov
imul
test
negb
leave
stos
mov
mov
mov
or
push
cmpsb
push
cmp
mov
inc
lret
pop
xchg
xchg
sbb
mov
sub
sbb
sub
add
pop
inc
cmc
sub
and
or
das
sbb
push
cmp
sbb
cwtl
lods
bound
dec
push
testl
inc
mov
in
pop
lds
pop
jno
sbb
mov
flds
iret
mov
sbbb
fmuls
dec
cmp
mov
outsl
fs
push
sub
or
push
cmp
adc
outsl
xchg
daa
jae
mov
lods
cmc
cmp
mov
push
in
fiadds
xor
out
shlb
ret
push
pop
xchg
lea
and
xchg
sahf
cmpsb
mov
test
adc
inc
mov
xchg
lock
xchg
sub
push
cld
jp
jp
ds
push
mov
ljmp
cld
outsb
jge
das
jb
cmc
je
cmp
mov
mov
push
adc
bound
mov
mov
push
es
xchg
enter
mov
addb
loope
mov
pop
std
jae
mov
mov
sub
leave
bound
rcll
bound
mov
fimuls
push
es
adcl
scas
pop
insb
mov
sbb
dec
idivb
imul
stc
imul
and
fistl
mov
test
addr16
jmp
cld
cmpl
lret
add
vpunpckhbw
adc
stc
lods
fwait
add
inc
call
pop
push
sbb
sub
test
in
lods
jb
dec
repnz
and
sbb
xchg
in
outsb
cltd
jg
adc
and
pop
out
enter
sbb
cmp
popf
mov
jg
ret
frstor
cmpsl
frstor
add
xor
xchg
jecxz
cmp
stc
cmc
or
inc
stc
mov
pop
dec
xlat
push
push
inc
or
out
ja
inc
hlt
js
outsb
xlat
imul
test
stos
push
icebp
aaa
sti
sbb
test
jnp
push
loop
mov
pop
xor
mov
jnp
sub
sub
add
test
inc
ds
hlt
shrl
mov
out
ljmp
icebp
or
add
or
sub
mov
aaa
dec
push
testb
pop
pusha
pusha
cwtl
xor
nop
lahf
or
sbb
mov
or
jmp
push
push
gs
jae
data16
xchg
mov
enter
add
ret
inc
shl
fildll
das
cli
jne
shrb
hlt
mov
shlb
test
push
jnp
ret
inc
loope
es
rclb
ja
sbb
stos
jns
mov
mov
add
cmc
push
imul
cmc
mov
divl
cmpb
aam
push
add
fdivr
repz
in
jl
fistl
sbb
pop
mov
or
mov
and
push
or
pushl
adc
lock
or
jns
cmp
sbb
xchg
in
or
fnsave
addr16
enter
loop
cmpsl
lods
shll
cli
add
push
pop
sti
push
mov
pushf
shlb
pop
jns
mov
adc
mov
jb
into
fdivr
dec
call
push
or
cwtl
inc
test
sarl
fsubrs
cmp
or
mov
and
xor
test
clc
test
dec
push
add
inc
or
add
xchg
dec
mov
stos
mov
dec
int
mov
das
cmp
dec
lahf
das
popa
ret
pop
sahf
inc
loop
push
push
xor
jp
jecxz
daa
jne
lods
dec
adc
scas
or
dec
lcall
std
sbb
cmpsb
cli
aam
and
scas
insb
sub
lods
out
sub
xor
or
idivb
jge
imul
xchg
arpl
mov
or
loope
rolb
lahf
movsb
add
addl
mov
xchg
loope
shlb
je
xor
stos
push
lock
test
dec
fs
sti
mov
repnz
fs
orl
jbe,pt
push
test
iret
or
sbb
nop
int3
gs
shll
sbb
push
jg
movsb
mov
pushw
int3
cli
enter
std
cmp
ss
add
xchg
ret
outsl
test
loope
jbe
cmp
in
je
cmc
aaa
push
push
pop
rcl
xchg
les
fdivrs
push
xchg
les
popa
cwtl
lcall
jne
movsl
adc
cmp
in
and
sti
out
dec
aaa
jmp
cltd
aad
lods
repz
xchg
ss
jmp
out
inc
inc
sub
cmp
fs
dec
mov
outsl
popa
in
xchg
insl
addr16
or
in
loop
hlt
cltd
pop
ret
fstl
jle
add
ds
sub
jp
pop
icebp
imul
ret
ret
xlat
hlt
xchg
shll
push
adcb
inc
jnp
int3
pop
cmp
js
fimuls
insb
in
mov
add
inc
push
sbb
movsl
push
aad
je
mov
xchg
nop
push
aas
aas
lds
imul
popf
popl
jp
inc
add
xchg
sub
test
std
jb
rorl
add
test
in
and
cmp
sar
imul
jnp
fcomi
or
xor
addr16
aad
dec
and
pop
int3
push
pop
dec
xchg
popf
sbb
push
dec
inc
pushf
xchg
ss
xlat
add
pop
inc
pop
aas
test
pop
jg
or
jmp
and
fucomp
in
push
shlb
mov
add
pusha
movsl
test
into
rcrb
int
ret
xor
sub
test
xor
outsb
clc
mov
and
adc
push
mov
arpl
mov
hlt
scas
adc
add
mov
arpl
test
mov
test
cmc
mov
jmp
xchg
pop
int
push
nop
or
cmp
xorl
shlb
frstor
mov
fwait
cli
sbb
inc
adc
add
loop
lret
std
outsb
cmc
bound
inc
jbe
lock
in
jg
mov
sbb
mov
mov
inc
sbb
jne
ljmp
lahf
stos
mov
popa
stos
lea
pushf
cld
jo
stc
dec
out
stc
lcall
orl
or
sub
mov
dec
les
cmp
and
nop
movsl
push
jae
ljmp
inc
or
dec
fistpll
data16
mov
nop
out
xor
lods
orb
push
ret
rol
pop
imul
mov
rcll
es
imul
out
lcall
stc
stos
xchg
bound
lahf
insl
and
shrb
sbb
push
imul
fwait
or
adc
cld
repnz
notl
add
xchg
mov
jnp
sub
jle
xor
xor
mov
adc
test
inc
push
neg
or
rcll
add
outsb
add
loope
xchg
mov
loope
adc
xchg
imul
lods
cmp
scas
mov
lret
daa
adc
bound
hlt
push
or
je
js
jb
jb
sub
xchg
jle
out
mov
sahf
sbb
and
cmpsb
fnstenv
jne
sbb
push
mov
dec
xchg
xorb
or
sub
dec
std
dec
daa
iret
and
stos
adc
into
aad
pop
dec
add
sub
dec
ficoms
dec
and
or
jns
ret
leave
aaa
xchg
mov
pop
dec
push
adc
sbb
lods
imul
mov
lock
sarl
xor
push
outsl
mov
sub
jno
repz
mov
stos
cmpsl
push
fucomi
dec
test
push
inc
cltd
out
pop
pop
lds
gs
std
pop
add
mov
in
cmpsl
sbb
stos
loopne
sub
sbb
push
cs
sbb
insl
movsb
jle
iret
aaa
adc
jle
or
std
cmp
std
pop
and
addr16
pop
pop
scas
cwtl
push
or
pushf
xchg
jge
cmp
out
fs
daa
fucomi
int3
mov
adc
scas
xlat
mov
loop
push
adc
dec
push
mov
lock
mov
pop
adc
movsl
aad
pop
pushf
mov
imul
divb
bound
add
fistpl
test
inc
sub
pop
add
xor
mov
icebp
dec
mov
xchg
push
lock
push
ret
mov
xchg
pop
arpl
arpl
call
mov
pavgb
clc
sti
sub
push
adc
xor
fisubrl
addr16
call
movsb
lock
add
mov
mov
call
pop
ror
sub
jno
cmp
cmp
nop
inc
adc
lds
lea
push
adc
and
inc
sbb
jmp
inc
mov
jo
xchg
pop
sbb
aas
fwait
in
daa
mov
cmpsb
xchg
xchg
fsubl
lcall
fdivrl
stc
dec
sbb
cmp
xor
cmpsl
scas
and
inc
insl
dec
add
imul
rol
into
out
and
push
jl
xor
dec
sbb
movsl
xchg
xchg
fs
pop
loopne
or
or
or
or
cld
pop
dec
mov
sub
fadds
cltd
std
cld
aad
ficomps
pop
test
xchg
insb
xchg
pop
shrl
clc
mov
ret
dec
test
addb
pushf
lea
outsl
cmc
cmp
cmpsb
add
and
inc
cmpl
ffree
fistps
and
icebp
dec
aaa
and
outsl
rorl
and
jecxz
dec
ljmp
das
mov
imul
popa
jmpw
cmp
cmp
and
dec
imulb
fstpl
test
push
xlat
es
cld
pop
and
fst
lods
sarb
enter
bound
hlt
aas
cs
aam
inc
test
or
xlat
maxps
inc
sarl
pop
inc
lock
mov
mov
imul
into
aaa
xchg
mov
push
push
sub
mov
mov
sahf
mov
mov
jl
sub
xchg
pop
mov
fidivl
shlb
sub
push
xchg
loopne
enter
jle
data16
adc
fstps
ja
fstps
lcall
sub
cld
movsl
imul
lods
adc
sub
xor
fdiv
jo
aad
mov
cltd
pmaxub
push
sti
mov
xor
sub
lods
aad
dec
ret
mov
xchg
loope
imul
pop
lahf
sub
xor
aam
add
xchg
xchg
or
aad
dec
and
pushf
pop
add
fidivrl
aas
cld
pop
popf
sahf
sarb
inc
mov
mov
jns
mov
lret
and
xorl
and
add
cmp
adc
in
xor
mov
mov
mov
mov
push
imul
cmp
adcl
ljmp
pop
fcoml
inc
cmp
sti
push
sarb
cmp
movsb
and
scas
push
mov
mov
sti
sub
jp
mov
mov
fsubrs
and
lahf
sti
adc
aam
lock
and
lret
mov
cmpsl
ficompl
pop
fsubrs
out
insb
add
push
add
repnz
mov
ret
aad
jmp
stc
mov
out
movsb
fisttps
lahf
xor
mov
jno
int
lret
dec
ds
inc
dec
xchg
test
cli
sahf
cmpsb
mov
ljmp
andl
orb
mov
mov
and
jne
sub
or
mov
hlt
int
iret
dec
cmpb
je
mov
pop
push
dec
ljmp
mov
push
addr16
sub
pop
and
insl
jno
rcrl
cmpl
and
lods
sub
xchg
pop
arpl
into
push
sbb
lret
pop
push
xchg
insl
push
mov
es
aas
daa
jo
movsl
incb
movsw
and
lds
xor
xor
cmp
sahf
fwait
cmp
xchg
inc
daa
mov
sbb
mov
adc
fwait
lret
xchg
pop
into
xor
add
iret
nop
lcall
add
xchg
xlat
inc
out
insb
pop
fldenv
lret
jl
jb
fidivrl
sub
clc
cmp
data16
cwtl
pop
scas
out
dec
sbb
sub
and
jp
out
push
aam
inc
notb
test
shlb
into
and
mov
pop
scas
popf
or
push
push
pop
leave
mov
cmp
dec
stc
sti
imul
test
push
fimuls
dec
mov
div
in
lcall
imul
cld
lahf
shlb
fmull
dec
sub
push
mov
adc
cmc
inc
call
insl
xchg
ds
push
les
mov
in
stos
xor
push
mov
push
push
or
flds
lea
add
adc
pop
aam
mov
pushf
mov
ds
repnz
dec
popf
adc
cmpl
fstl
aad
mov
loop
movsb
mov
adcb
shll
out
je
dec
roll
inc
pusha
jg
mov
mov
cmp
cmc
and
mov
push
mov
jmp
out
xchg
hlt
adc
gs
loopne
test
or
mov
test
lds
fiaddl
ror
cmp
xor
fnstcw
xchg
adc
aam
sbb
out
lahf
mov
add
sbb
inc
fistl
pop
mov
scas
mov
test
xchg
jge
pmaddwd
test
pusha
sarl
int
push
pop
adc
push
repnz
xchg
dec
sub
notb
mov
pusha
ss
and
jmp
or
mov
jge
adc
inc
push
mov
cmp
sbb
out
xchg
cmp
or
jl
movsb
and
lods
addb
and
cmpsl
pop
dec
outsl
pop
and
xchg
ret
and
push
pusha
xor
scas
cmp
fistpl
xchg
or
popf
hlt
dec
jecxz
jecxz
ret
les
pop
fwait
push
js
push
lods
pusha
mov
in
mov
xchg
push
mov
mov
mov
and
mov
sbb
push
nop
inc
rep
mov
rorb
fadd
lahf
add
mov
xor
mov
lods
xor
jno
dec
sbb
add
mov
negb
xchg
cmpsl
popa
xchg
clc
out
jecxz
sub
mov
xor
popf
or
test
cmp
cmp
scas
into
leave
cmp
xorb
mov
sbb
pop
clc
sbb
xchg
fdivrp
pop
mov
mov
aam
imul
rcl
jns
inc
out
mov
push
in
lods
out
loop
insl
xchg
imul
xchg
dec
int3
leave
adc
inc
pop
outsw
lds
pop
negb
inc
xchg
sti
and
les
pop
push
mov
je
loope
lds
pop
mov
stos
enter
gs
cld
jns
xchg
fdivrl
jge
push
mov
adc
xchg
fstps
mov
icebp
loopne
test
and
pop
xchg
mov
mov
sub
jmp
or
aas
fcomps
imul
shll
pop
push
cmp
sub
inc
roll
cmp
push
mov
adc
push
lds
lret
dec
in
mov
add
dec
daa
lahf
hlt
es
add
mov
orb
je
adc
notl
push
cmpsl
add
subl
mov
jns
mov
aas
aad
loop
movhlps
push
pop
jb
orb
pop
adc
mov
xchg
jb
fwait
pop
mov
or
inc
cmp
and
sub
push
ljmp
mov
sub
test
push
scas
fsubl
xchg
js
pop
dec
inc
bound
clc
in
xchg
test
jae
inc
mov
sub
xchg
push
imul
add
repz
js
fs
loope
pop
inc
std
mov
cmp
repz
fcompp
xchg
cmc
push
in
jg
imul
test
adc
divw
and
out
outsl
jno
std
push
jno
punpcklbw
xor
lret
dec
sub
rol
pop
or
pop
jbe
ljmp
popf
xor
inc
mov
jg
xchg
icebp
jge
mov
das
jnp,pt
or
xchg
jbe
lods
mov
jno
daa
cld
sub
cs
outsb
in
lahf
scas
push
mul
lcall
dec
aas
pop
rolb
test
cmpsb
sahf
xor
pop
hlt
cld
outsl
jo
in
lds
daa
xchg
roll
scas
in
movsl
jbe
jp
jae
sbb
cmp
mov
push
lcall
lret
mov
jp
dec
dec
mov
xor
mov
addl
dec
leave
loopne
mov
mov
rcrb
in
mov
xchg
int3
sbbb
and
mov
and
pushf
jl
lret
sbb
push
clc
mov
lods
inc
outsl
add
mov
sub
xchg
movsb
outsb
insl
mov
jg
push
xchg
repnz
jp
fstps
jne
xor
inc
rolb
shlb
mov
push
or
jb
movsl
test
cmpsl
xor
sahf
sti
inc
jnp
mov
ss
test
das
mov
int
and
inc
adc
arpl
push
mov
inc
jge
icebp
imul
inc
mov
cld
in
pop
int
ja
jmp
mov
jnp
decl
inc
call
arpl
ss
xor
add
mov
mov
xchg
push
ja
sbb
mov
mov
jge
and
loope
push
xchg
stos
cmp
add
adc
pop
fldl
into
inc
or
incb
push
outsl
out
shll
lahf
sbb
ljmp
adc
pushf
jnp
cli
pop
xchg
rclb
cmpsl
xchg
pop
outsb
add
jbe
enter
push
jle
out
mov
lea
repnz
xor
jecxz
dec
lods
aad
gs
lds
loope
xchg
push
or
pop
xchg
jno
enter
push
ss
and
loop
icebp
mov
dec
ficompl
stc
lods
pusha
adc
cmp
xor
sbb
pop
xlat
test
call
add
mov
addl
daa
push
dec
pop
xchg
inc
inc
jl
int
pop
imul
xadd
pop
pop
pusha
fidivs
mov
and
adc
cmpsl
arpl
jmp
and
in
loop
ret
inc
or
mov
mov
popa
mov
mov
cmp
sarl
lcall
loope
mov
add
addr16
jg
jmp
pop
movsl
iret
arpl
popa
out
mov
les
dec
xchg
lods
dec
sub
xchg
aaa
popa
inc
fimull
jno
imul
dec
mov
adc
xchg
movb
dec
dec
push
xchg
or
inc
mov
pop
push
xchg
sahf
pop
jns
and
jae
outsb
push
dec
sub
fisubrl
orl
out
dec
pop
add
sbb
shr
and
jecxz
and
or
mov
in
cmp
jl
mov
xchg
andb
pop
clc
inc
subl
xchg
cs
sbb
cwtl
int3
popa
cld
jnp
push
frstor
pushf
out
xor
sbb
cwtl
lds
mov
add
jns
push
and
fcomps
sub
push
mov
push
sbb
cmp
xorl
push
jmp
lahf
push
inc
rolb
cmp
mov
or
icebp
popa
pushf
out
push
out
cmp
dec
insl
dec
dec
jns
inc
cmpsb
push
movl
add
into
aam
lds
test
pop
pop
xchg
call
mov
adc
in
and
mov
dec
adc
push
ja
fidivrl
lock
xor
sub
fs
out
fnclex
jo
xchg
push
lock
mov
jecxz
sbb
inc
dec
jo
cmp
cli
adc
jecxz
pop
mul
add
iret
xor
movsl
test
add
or
sub
or
addl
dec
inc
xor
addr16
xchg
push
and
loop
mov
pop
popl
arpl
dec
shll
in
xchg
sub
lret
out
mov
cwtl
int3
adc
pop
jns
sti
push
cmp
xchg
push
pushf
dec
jo
xor
cltd
push
fnop
loope
cmpsb
sbb
xor
loope
or
sbb
sub
icebp
sub
xchg
mov
xchg
adc
mov
xchg
mov
js
dec
jle
adc
mov
cmp
sarl
adc
hlt
sbb
adc
dec
call
rorl
fcomp
lea
xchg
mov
xor
loope
popa
xchg
dec
lahf
aad
in
push
shl
in
sub
mov
adcb
fs
call
dec
dec
test
cmpsb
rorb
pop
leave
push
add
dec
cmp
mov
outsb
pop
dec
ret
jge
test
mov
mov
add
pusha
push
fwait
pop
cmp
sbb
and
mov
xlat
pop
test
xor
test
dec
jl
lret
add
mov
mov
cmp
mov
add
stos
out
cmpsb
mov
inc
lret
mov
mov
hlt
or
push
dec
mov
lret
xor
add
and
pop
xlat
pop
js
ja
mov
mov
push
cmp
jno
loop
mov
and
jno
icebp
inc
shrl
pop
pop
or
in
das
cld
mov
pop
mulb
call
jmp
mov
je
jns
enter
jae
loopne
mov
pop
das
dec
mov
xchg
sahf
lcall
notl
jl
adc
jnp
movsb
jle
lods
or
adc
scas
mov
xchg
cwtl
sti
sarb
mov
imul
sub
pop
jmp
mov
dec
push
flds
shll
test
das
fdivr
js
repz
jg
or
popf
dec
sub
xchg
sub
fidivrs
stc
out
test
mov
test
cltd
push
outsl
test
daa
sub
inc
add
in
mov
mov
outsl
inc
mov
scas
adc
data16
out
std
xorl
inc
add
mov
xlat
jp
bound
and
les
mov
dec
jmp
xchg
cwtl
dec
dec
cmp
adcl
jae
xor
and
or
xor
pop
pop
inc
add
shufps
adc
aas
mov
test
inc
xchg
addr16
adc
push
dec
sub
enter
out
arpl
inc
jge
divb
fcmovnbe
cmpl
shrb
pop
outsl
or
jno
and
test
popa
mov
and
adc
setle
or
or
ret
sub
or
mov
fchs
lea
ret
cmpsb
imul
xchg
jbe
cld
fucom
xchg
push
sbb
movsb
aas
adc
push
sbb
lahf
ror
andl
sub
into
ret
xchg
adc
out
ja
dec
adc
idivb
out
mov
pushf
pop
xor
popf
xchg
mov
ret
xchg
pushf
xor
mov
rcr
movsb
dec
popf
aam
in
mov
push
pop
dec
inc
popa
xor
shrb
aas
sbb
pop
je
jle
dec
ret
mov
sbb
lret
insb
int3
in
sbb
and
push
popa
clc
and
sarl
cmpsl
jo
fcomp
pop
stc
fdivrs
mov
push
xor
mov
movsb
xchg
adc
mov
mov
fwait
cmc
push
jbe
add
in
mov
xor
cmc
movb
jmp
add
mov
inc
inc
mov
jle
std
pop
data16
xlat
scas
xor
xchg
fwait
adc
jns
mov
repz
xor
sahf
outsb
fimuls
in
mov
arpl
add
fs
pushf
mov
mov
fisttpl
or
pop
adc
pop
aam
loopne
adc
test
dec
xchg
outsb
xor
test
pop
xor
add
jns
cmp
cmp
stc
xor
clc
scas
xchg
fwait
ss
mov
xchg
push
dec
ja
push
ret
add
sub
xor
or
xchg
add
xchg
in
mov
mov
jmp
pop
orl
les
shrb
or
sbb
lea
push
push
or
inc
das
pop
popf
imul
fwait
sarb
push
xchg
loope
testl
jle
pop
adc
sub
adc
mov
test
movl
cmpsb
adc
jne
stos
lret
push
ds
cld
xor
inc
call
sbb
mov
into
cwtl
cld
or
ss
mov
ror
pop
inc
xlat
dec
insl
pop
jp
xor
lahf
mov
pop
lret
ror
mov
jmp
lods
jmp
loopne
jno
jno
scas
sti
push
dec
mov
cmp
fnstsw
xchg
mov
rclb
hlt
adc
test
push
stc
xor
or
jno
cmp
ds
lock
insb
gs
cmp
enter
mov
or
mov
xor
test
mov
inc
testb
bound
and
adc
add
ja
mov
xchg
xor
sahf
into
shl
mov
mov
imul
je
dec
mov
mov
push
mov
in
outsl
jge
cltd
aam
xchg
in
or
jns
jne
and
cmpsl
sti
pop
pusha
jmp
push
mov
adc
mov
cli
xchg
mov
popf
lods
fdivrl
push
push
loop
pop
lret
mov
push
loop
hlt
cmp
ret
mov
outsb
cmp
adc
xlat
jo
xor
or
popf
lods
inc
mov
or
lods
aad
nop
js
rolb
mov
icebp
jae
inc
cmp
enter
add
insb
ja
inc
jns
xchg
jmp
cld
adc
testl
and
sbb
cmp
subl
mov
xchg
inc
adc
scas
fidivs
adc
arpl
in
mov
sub
bound
repz
or
outsb
jae
mov
leave
fsubrl
mov
std
xor
sahf
test
dec
ljmp
cmpl
xorl
mov
call
ja
ss
inc
lahf
mov
push
loopne
pop
in
leave
cmp
imul
dec
dec
outsl
jl
cmp
addl
pop
pop
sahf
jge
lea
cli
icebp
leave
fsubs
inc
ss
xor
mov
and
out
test
cmc
inc
mov
mov
mov
out
xor
cwtl
pop
push
arpl
pop
pop
in
cmp
enter
add
mov
andb
cwtl
enter
mov
pushf
push
cs
mov
imul
pop
inc
aam
mov
out
pop
mov
xchg
fisttpll
icebp
mov
mov
pushf
inc
mov
xchg
test
test
xor
testl
mov
fxch
add
cltd
test
pushf
xor
pop
lcall
pop
ljmp
adc
xchg
mov
dec
cmp
xchg
push
jle
jmp
sar
push
push
mov
inc
repnz
mov
leave
sbb
fidivl
adc
xor
mov
push
jnp
fsubr
pop
mov
scas
pop
fsub
faddp
sti
sti
stos
mov
add
dec
pop
les
mov
fisubs
insl
mov
cli
xchg
inc
jae
jle
jo
pop
cmp
inc
pop
sub
fwait
mov
addr16
mov
fsubrp
and
mov
cmp
or
pop
push
xor
jmp
in
push
xchg
push
test
push
dec
or
mov
mov
pop
shlb
pop
xchg
cli
cmp
xor
push
cmp
cld
add
push
adc
movsl
pop
int3
mov
movsl
sarb
popl
inc
jmp
xlat
pusha
iret
jge
and
mov
cmp
dec
xor
xchg
arpl
mov
test
pop
pop
mov
inc
add
xrelease
iret
cmp
or
adc
cltd
out
or
xchg
lods
jle
clc
js
push
shrl
or
js
out
shr
xchg
inc
mov
and
xor
pop
iret
sarb
sub
cmp
daa
test
flds
add
outsl
fnsave
nop
pop
jg
xchg
jge
pop
sub
ds
xlat
cwtl
ret
xchg
sahf
inc
cmpsb
or
inc
into
mov
xchg
jecxz
adc
xor
add
pop
cli
bound
into
cmp
imul
pop
pop
xchg
jo
jmp
mov
cs
pop
jl
add
in
jge
fscale
test
out
pop
push
jb
pop
push
into
das
fstps
inc
xchg
xor
and
setnp
pop
nop
or
jecxz
jo
mov
fs
movsl
iret
lret
in
jge
or
adc
imul
xchg
lcallw
ds
mov
push
clc
insl
imul
add
nop
mov
add
or
ja
ljmp
fwait
mov
pop
pop
adc
jp
xlat
or
out
adc
adc
dec
roll
cmc
dec
repz
ljmp
in
leavew
mov
repz
iret
mov
sub
fistpll
xchg
in
sub
push
jno
nop
push
pop
pop
pop
iret
sub
inc
cmpsl
jl
mov
jl
inc
mov
aam
fldenv
mov
xchg
lret
mov
or
sub
jne
test
mov
sub
xor
dec
pop
aas
aad
sbb
xchg
lock
xor
out
or
into
fmulp
pop
pop
xchg
test
adc
xchg
xor
repnz
cmpsb
pop
mov
clc
dec
xchg
or
xchg
dec
pop
adcl
mov
pop
or
mov
add
fisubrs
cmpsb
mov
or
adc
pop
mov
out
mov
lea
and
jno
sahf
fidivrs
popf
jge
xor
pop
adc
adc
pop
add
pop
sahf
lret
ljmp
inc
mov
ret
or
fs
bound
inc
or
and
xor
mov
add
ds
sub
in
dec
pop
and
ljmp
jge
sbbb
pop
fcmove
pop
cmp
xchg
in
mov
rcll
sub
xchg
minps
or
fdivp
test
cwtl
loope
test
sub
sbb
and
inc
dec
jnp
je
sbb
xchg
jae
sbbb
sti
jbe
adc
and
ret
adc
pop
mov
push
cli
call
outsl
rcll
push
mov
repnz
test
add
mov
mov
fisttps
or
mov
dec
idivb
mov
adc
push
leave
adcb
mov
inc
fiaddl
mov
xlat
enter
shrb
jbe
pop
and
mov
je
test
jl
mov
push
mov
int
cli
jo
and
cwtl
cmpsb
ljmp
jae
je
mov
daa
add
xchg
lock
insl
cmp
lcall
jne
cmpsl
loop
mov
int3
lock
test
fs
cs
sub
jbe
aam
xchg
mov
je
fnsave
push
out
and
pop
pop
dec
cmp
xchg
pusha
fucomp
fidivrs
dec
inc
ss
repz
lds
inc
mov
xchg
dec
dec
lds
das
fwait
lock
popf
fnstsw
inc
mov
divb
loop
or
cmp
xor
call
cmpl
test
dec
das
or
adc
enter
add
nop
lahf
push
fcoml
sbb
fbld
or
jp
pop
push
fmull
cmpsb
jle
mov
sbb
xchg
aas
daa
ret
rolb
outsb
fldcw
mov
movl
in
cmc
pop
push
lock
das
clc
test
and
int3
popa
cmc
lcall
popa
lds
fcoml
sbb
mov
inc
jg
arpl
loopne
dec
mulb
dec
call
inc
xor
ret
cli
mov
aaa
pop
and
pop
or
repnz
daa
mov
pop
movsl
sbb
dec
scas
aam
jmp
adcl
pop
mov
add
jecxz
test
sbb
dec
xchg
cmp
aaa
andb
jae
inc
in
pop
js
lods
push
lea
fcmovb
mov
xor
jl
mov
mov
pop
fmulp
scas
add
adc
icebp
xchg
int3
enter
les
mov
xor
ja
cmc
push
inc
test
mov
fidivrs
cmp
addb
adc
pop
js
lods
adc
adc
int3
sub
push
pop
inc
scas
jp
or
test
aas
inc
xor
popf
pushf
loope
push
add
ja
sub
sahf
or
int3
cmp
jne
cmpsl
imul
data16
push
jns
push
arpl
fldenv
mov
outsb
jmp
adc
lcall
je
filds
dec
xor
pop
xchg
in
rolb
das
aam
inc
js
adc
aas
repnz
mov
pop
scas
repnz
and
lcall
in
and
lcall
xchg
push
insl
mov
ret
fstp
ljmp
pop
inc
xchg
and
aad
cmp
jle
dec
and
icebp
inc
cmp
addb
xor
inc
inc
ret
jge
aas
mov
shrb
mov
pop
scas
fstl
testl
jge
cmc
mov
out
das
js
push
sbb
out
pushf
add
lods
mov
push
xchg
dec
test
lock
das
jne
aas
ja
lea
mov
xchg
into
xor
push
ja
fstp
cwtl
jo
fisubs
aad
mov
push
jbe
je
ja
xchg
and
incl
inc
insb
in
es
jmp
inc
or
and
xor
sub
lock
lds
ds
cmp
add
lods
movsl
mov
enter
ja
ret
sub
lods
sub
nop
xor
adc
pushf
cmpb
jb
jb
lahf
mov
movsl
in
dec
mov
test
inc
or
loop
dec
leave
pop
cmpl
push
sbb
dec
lret
std
and
add
adc
jmp
cmp
insl
shrl
imul
hlt
int
xchg
jae,pt
stos
or
loopne
cmp
push
in
xor
xlat
adcl
push
jmp
aas
cmpsb
in
xor
fidivl
int
inc
adc
fwait
mov
push
cmp
mov
jg
iret
mov
xchg
cmp
out
cwtl
cld
dec
jl
shll
cs
addr16
sti
cwtl
mov
pop
xor
leave
or
mov
lcall
js
cmp
bound
std
xor
inc
sub
sub
fldl
out
jb
cmpsb
pop
jns
icebp
push
mov
inc
dec
mov
xchg
gs
rorl
movsb
stos
xor
add
push
mov
dec
adc
jge
xor
cmc
xchg
add
fwait
data16
pop
sbb
mov
mov
lea
fsubl
xor
inc
jg
subl
push
fwait
mov
mov
mov
xor
shrb
sub
pop
add
add
jne
adc
and
pop
aas
xchg
sbb
cmp
ret
pop
cmp
cmp
out
fwait
sub
ror
sti
loope
std
test
pop
inc
test
ds
imul
push
adc
cmp
mov
fdivr
rcrl
sub
lcall
bndldx
xor
aad
imull
inc
fucom
mov
push
inc
jmp
pop
movsl
cmp
cmp
clc
cmp
sbb
sub
cmpsb
outsb
lock
mov
daa
sbb
xchg
push
and
mov
es
aad
xor
lds
mov
xchg
loopne
push
pusha
jmp
loopne
mov
and
repz
aam
aam
shr
pop
lcall
jb
addb
scas
xor
jne
sbb
roll
aaa
andl
jmp
aam
mov
lret
aam
xor
daa
inc
xor
sbbl
ja
outsl
jg
ret
popf
xor
mov
cmp
cmp
dec
mov
jge
ds
pop
decb
scas
pop
jecxz
cmp
and
mull
xchg
sbb
sbb
movsb
add
mov
je
fcmovu
scas
jb
xchg
mov
pop
xor
stos
add
and
pop
inc
lret
rcrb
aam
je
xchg
insl
in
sti
lods
lret
jb
enter
dec
pusha
cmc
adc
cmpsb
or
pop
pop
stc
ror
push
sti
jbe
jno
daa
lret
xor
pop
fcoml
dec
sub
mov
sbb
fidivrl
mov
fidivrl
leave
into
push
lret
cmpsl
in
sub
movsl
dec
stos
dec
and
mov
mov
movsw
cmp
push
loop
lods
sarl
mov
xchg
aad
adc
jmp
ljmp
mov
pop
xchg
cltd
jle
add
adc
fcmovnb
pop
lret
mov
aad
ret
imul
orb
ss
cwtl
es
pop
shrb
stos
aam
fwait
dec
nop
mov
push
stos
dec
popf
lods
xor
lds
mov
and
push
fwait
cmp
iret
paddq
adc
faddl
xchg
in
push
cmp
jmp
push
xchg
xchg
dec
out
aaa
mov
insl
pop
mov
hlt
lret
lods
test
stos
ficoml
add
fwait
ss
and
inc
ljmpw
mov
imul
jae
or
sub
es
mov
cmp
xchg
lock
mov
push
and
ja
sbb
mov
loope
outsb
jbe
subl
mov
dec
sub
jae
mov
ret
mov
sahf
mov
scas
ja
jp
mov
and
fidivs
nop
mov
or
bound
bound
push
es
xchg
std
ret
or
mov
sahf
mov
xor
ja
repz
fbstp
insl
test
in
pop
jno
cmp
out
and
mov
lret
add
dec
fisubrs
xor
fwait
ret
fisubrl
icebp
fsubr
cmp
fwait
xchg
mov
cmpsb
inc
inc
dec
ret
ljmp
bound
in
mov
mov
push
mov
fisubl
cmpsl
inc
test
fdivrs
push
mov
in
shlb
xor
daa
mov
sbb
ss
dec
leave
and
imul
fs
out
mov
rorl
pop
aam
lret
lret
push
pop
pop
loop
push
mov
or
sub
jo
imul
aam
jb
or
add
loop
adc
fisubrs
xor
test
inc
cmp
stos
inc
stos
xchg
and
sbb
leave
or
sbb
push
repnz
mov
adc
lret
jae
test
fdivrl
xchg
mov
mov
and
aad
sbb
xchg
mov
dec
ja
jmp
lea
mov
in
das
rclb
xchg
xchg
and
xchg
rolb
xor
mov
xor
std
out
pop
inc
jle
xchg
adc
xchg
sbb
sub
movb
mov
aaa
fwait
or
push
int
popl
fsubrp
sub
inc
lock
adc
mov
xchg
mov
push
shll
imul
mov
cmpsl
add
mov
push
in
push
and
pop
sti
in
sti
movb
int
mov
cltd
lcall
push
and
xchg
popf
and
mov
cmpsb
daa
add
pop
cmp
movsb
iret
cmc
xchg
pop
mov
cmpsl
jl
pop
outsl
in
cmp
push
hlt
inc
mov
mov
hlt
in
add
jns
mov
xchg
mov
cmp
arpl
stos
lods
cmp
mov
cmc
cmp
jne
aad
inc
loop
call
cmp
mov
in
pop
xorb
iret
adc
push
dec
cli
sbb
pusha
cld
loopne
xchg
cmpsl
fsin
lret
js
outsl
iret
adc
sbb
inc
sub
pop
xchg
ljmp
or
mov
lods
das
pop
add
inc
aad
nop
ret
sbb
ss
mov
xchg
or
pop
enter
clc
mov
stc
xchg
push
push
les
xchg
add
mov
push
scas
imul
mull
dec
adc
call
mov
pop
dec
imul
insl
fsts
pop
pop
pusha
cmp
outsl
pop
dec
pop
mov
inc
inc
push
or
fadds
xor
mov
movl
aam
cli
pop
sbb
into
mov
mov
jecxz
ffreep
pop
mov
cltd
add
fsubl
insb
cltd
pop
push
mov
shll
stos
inc
test
mov
or
daa
lods
gs
pop
pop
xchg
lahf
mov
mov
ja
mov
add
mov
mov
pop
dec
push
out
lcall
lret
adc
das
sbb
push
lock
imul
div
xchg
mov
out
int3
inc
sub
xchg
mov
lods
shr
cmpsb
or
adc
add
inc
and
push
dec
mov
mov
or
lods
imul
mov
cltd
dec
xchg
roll
ficompl
aam
dec
xchg
sbb
mov
lret
in
lcall
pop
mov
xor
push
in
popf
sti
adc
adc
out
orl
jns
cli
icebp
xchg
sub
cmc
shrl
jno
in
insb
decl
jl
in
xchg
jns
stc
push
pushf
cmpsl
movsl
fisttps
xor
add
das
test
bound
incl
rcrl
mov
and
in
or
hlt
subl
jnp
pop
into
insb
dec
jno
xlat
leave
ljmp
xchg
pop
mov
dec
into
cmp
sbb
mov
aaa
sbb
into
mov
loope
dec
push
arpl
jb
mov
lret
adc
or
jp
add
aad
sub
adc
inc
lods
sbb
add
mov
push
enter
xchg
pop
cltd
shl
ss
sbb
add
test
mov
stos
or
pop
adc
loope
sub
sbb
dec
inc
imul
jle
mov
fstps
push
inc
sub
popf
pushl
cltd
stc
push
out
frstor
repnz
sub
sbb
jle
lret
repz
xchg
or
adc
cltd
mov
mov
jns
inc
push
lds
lea
addr16
or
popf
mov
jle
pop
and
jle
dec
movl
stos
cmc
adc
daa
test
push
hlt
cmc
mov
mov
fsubrs
addl
shll
int
and
mov
ret
ds
fwait
jmp
cmpsb
lock
xor
sbb
mov
jg
pop
lods
sub
sbb
aam
iret
sub
jbe
ljmp
inc
sub
sbbl
loopne
iret
in
pop
mov
movsl
mov
cmpsb
out
call
es
leave
dec
insb
mov
les
cmc
push
pop
stos
jge
add
mov
xchg
pop
in
mov
push
test
push
aaa
xchg
outsl
leave
jg
rorl
popa
cmp
jae
lock
cld
mov
pop
aam
mov
sub
fdivrs
clc
sub
mov
pop
mov
inc
addl
adc
and
sbb
xor
insb
lods
mov
data16
mov
and
in
outsl
or
jp
pusha
push
xor
adc
outsl
and
shrl
pop
jmp
lcall
sub
cmp
outsl
or
lods
out
mov
and
insb
outsb
loop
cmpsl
mov
iret
dec
roll
into
test
jp
mov
divl
ret
cmp
test
inc
push
xchg
pop
sub
pop
fistpll
into
mov
sbb
xchg
fistpll
mov
lcall
add
arpl
fcom
dec
pop
andl
mov
xlat
or
pushf
gs
ffree
cmc
cmpsb
add
shrl
add
std
mov
jne
out
andl
mov
xchg
lods
cwtl
shll
dec
aad
lret
test
sarb
mov
loop
mov
xchg
popa
xor
mov
or
sti
icebp
inc
rcll
insb
xor
mov
aas
inc
adc
lret
idivl
fwait
cmp
push
test
or
ss
xchg
testb
dec
lcall
mov
sub
or
loop
pop
or
sbb
mov
cwtl
and
jno
sbb
inc
dec
jp
push
div
popf
jno
push
sub
jno
mov
xchg
cs
mov
mov
out
es
arpl
imul
shll
mov
push
push
in
aad
jge
fcmovne
mov
lcall
aaa
clc
lds
push
notb
daa
aam
cmp
sbb
pop
jns
inc
jne
out
outsb
pop
jmp
mov
or
rclb
pop
mov
imull
stos
add
enter
mov
sbb
mov
push
cmp
movsl
popa
idiv
outsl
jmp
xlat
sbb
fucomp
movsb
sbb
out
sub
xchg
or
aaa
insl
nop
faddl
repnz
mov
outsl
in
mov
pop
mov
sbb
push
scas
xchg
cmpsb
xchg
and
adc
ret
sahf
ficomps
dec
add
adc
xchg
loopne
mov
cltd
xchg
lret
hlt
xor
out
push
or
fwait
out
xor
pop
pop
jle
mov
arpl
incl
int3
into
loopne
sub
pop
jecxz
add
mov
ljmp
sbb
stos
mov
push
shl
sub
add
adcl
sub
add
lcall
sbb
jbe
xchg
dec
push
in
pop
stos
xlat
test
cwtl
repz
adc
arpl
adc
dec
mov
sub
lcall
or
rorl
pop
mov
shrl
lcall
cmp
cmp
testl
xchg
scas
loopne
aaa
mov
xabort
xchg
sbb
int
mov
ret
mov
pushf
dec
cmpsb
test
in
movsl
pop
repz
xchg
jo
and
out
mov
mov
lock
in
mov
icebp
out
adcb
or
in
cli
push
sub
inc
pop
adc
int
jecxz
or
or
push
add
sti
pop
dec
test
repnz
test
sub
jle
movl
add
addr16
sub
sub
add
dec
cltd
sbb
and
cmp
sbb
jge
push
or
push
rcrl
rolb
sub
stc
dec
stos
repz
jl
or
sti
push
push
jge
fmuls
inc
stos
lcall
imul
out
loopne
push
adcb
addr16
xor
lcall
bound
adc
push
and
cmpsl
loope
imul
inc
or
push
pushl
mov
sarb
mov
mov
mov
jmp
add
out
add
out
mov
add
jae
outsb
call
cmpsb
adc
push
test
inc
push
push
push
push
jge
and
xchg
insb
inc
and
clc
cld
cmp
pop
out
add
inc
pop
mov
nop
aad
xor
lods
sub
scas
mov
cs
in
jmp
mov
jp
int3
fisttpl
inc
jecxz
test
xorl
push
push
pop
and
and
in
fldl
pop
cs
sub
mov
inc
xchg
mov
push
lods
loope
loop
push
mulb
repnz
rcr
loope
mov
ret
lea
data16
and
repnz
in
xchg
out
adc
mov
loopne
std
mov
sub
add
mov
xchg
mov
xchg
sbbb
test
int
sub
jne
leave
jae
mov
int3
shrl
cld
in
popa
mov
ret
outsb
js
mov
sub
cmp
mov
vmovd
jle
dec
repz
mov
popa
rolw
xchg
push
int3
scas
jmp
repnz
xor
scas
sub
xor
mov
rorl
fdivl
or
xchg
aam
dec
cmpsl
imul
rolb
into
xchg
mov
lret
test
adc
mov
mov
xadd
sub
and
cmc
cmp
lahf
cld
pop
push
adc
or
xchg
leave
add
stc
outsl
je
das
jno
les
dec
push
test
in
idivb
shlb
xchg
cmova
push
or
nop
nop
jnp
lods
inc
lret
dec
in
mov
loope
jns
leave
cmpl
mov
xchg
mov
add
xchg
xchg
add
pop
in
mov
sub
xchg
mov
std
cli
mov
sbb
sub
jnp
aam
insb
cmc
ret
xchg
sub
sub
adc
dec
mov
mov
sbb
ficompl
nop
notb
out
mov
jb
and
clc
xchg
popf
inc
scas
cld
fwait
addr16
test
xchg
inc
mov
popa
int
xchg
fmull
push
daa
or
jge
jp
and
adc
pop
xchg
fstl
outsb
jns
adc
fcomps
popa
jns
sbb
aas
jle
dec
aad
pop
inc
sbb
push
stos
ljmp
xchg
add
pop
sbb
adc
cs
mov
lds
sti
lods
stos
cmp
cmpsb
lret
in
inc
mov
and
nop
and
cmpsb
fimull
pop
add
mov
out
lahf
adc
cmpsb
pop
mov
aas
repz
hlt
push
xor
lret
out
mov
pusha
add
insb
xlat
pop
dec
or
sbb
pop
cltd
out
iret
xchg
sub
in
bound
sti
nop
push
add
push
sub
orl
imul
aaa
sbb
gs
adc
ret
pushf
jp
arpl
scas
fildll
pusha
mov
stos
pushfw
lods
loopne
lds
add
inc
scas
jecxz
push
dec
sub
stos
insb
scas
scas
rcrl
addr16
sbb
mov
and
pop
sub
push
pop
jbe
push
es
dec
jl
shll
jecxz
dec
adc
pop
sbb
imul
xor
pop
imul
cmp
dec
add
push
sub
add
js
xchg
imul
and
inc
cmpsl
xor
shlb
xchg
or
xchg
mov
xchg
insb
pop
pusha
xor
xor
out
push
jne
clc
sub
push
and
cli
sbb
out
sub
int3
out
test
inc
xor
lods
scas
inc
fstpt
out
or
sbb
mov
lods
sarb
push
push
sub
push
add
rcrb
cmp
or
xchg
in
sbb
and
das
sbb
mov
sub
imul
add
ret
cmp
inc
fidivrl
hlt
jbe
stos
call
dec
sbb
and
movsl
inc
push
mov
ss
ja
aas
push
leave
and
repnz
out
repnz
sbb
mov
ljmp
pop
dec
pop
push
mov
push
lahf
aaa
and
scas
and
jp
xor
movsl
xchg
mov
jg
fimuls
xchg
xchg
xchg
aam
popa
mov
enter
repz
cmc
mov
push
xor
sub
sbb
inc
fs
fsqrt
adc
stos
lock
mov
pushf
or
pop
fnstcw
loop
les
daa
in
adc
fisttpl
daa
adc
js
stc
daa
popf
jecxz
mov
ja
and
sbb
xchg
popf
popf
ljmp
mov
ud1
push
mov
cwtl
cmp
xchg
test
adc
lods
fnsave
sbb
repnz
int
push
inc
int
jecxz
ret
ja
popa
and
notb
xor
and
and
cmpb
cmp
dec
cld
repnz
icebp
leave
addr16
cwtl
cmc
mov
add
aas
push
pop
sti
popa
push
push
gs
jnp
lea
loope
icebp
repnz
pusha
sbb
frstor
hlt
enter
inc
or
or
lahf
test
repnz
xor
adc
inc
stc
cmp
addr16
jns
mov
and
lahf
lods
sbb
scas
add
ja
fstpl
xor
or
sub
stc
xlat
cltd
push
jl
pop
push
pop
sbb
add
jno
scas
clc
sub
push
lcall
ja
dec
adc
inc
jle
pusha
jbe
mov
cmp
mov
sbb
fiaddl
shl
popa
jb
outsw
andb
outsb
sub
jmp
pop
mov
jl
mov
mov
mov
popl
sbb
fsubr
xlat
and
cs
test
xchg
popa
and
mov
push
push
add
in
pusha
mov
cmc
jmp
stos
adc
out
push
in
stos
xchg
aad
iret
push
cmp
lods
mov
mov
mov
push
add
cmpsb
test
jecxz
stos
test
inc
int
das
jmp
fdivl
icebp
addr16
jle
pop
insl
sub
jns
sbb
insb
flds
xchg
pop
pushf
ljmp
xchg
xchg
push
xchg
pop
shrl
das
cmpsl
xor
cmpsl
jbe
cmp
gs
adc
insl
add
mov
or
test
mov
push
add
cmpsl
push
cltd
jae
sub
push
insb
rolb
rclb
fnsave
mov
jbe
mov
add
ja
push
loope
inc
xchg
lea
mov
ja
data16
mov
pushf
iret
jne
sub
push
test
pop
adc
adc
std
mov
pop
loopne
daa
std
or
jo
rolb
cmp
test
add
add
lret
add
adc
std
and
xor
jnp
xor
xor
ljmp
cmc
repnz
aaa
adc
daa
mov
call
sbb
pop
jmp
dec
je
cmp
lock
mov
sub
scas
enter
cmpsl
lahf
inc
out
test
xor
fsub
mov
out
popf
or
mov
outsb
test
push
push
stc
cs
lar
aas
push
mulb
push
jecxz
mov
sub
add
mov
mov
dec
jmp
scas
out
xchg
fiadds
ss
test
jns
sbb
mov
int3
mov
int3
inc
cmc
xor
cmp
iret
scas
mov
cmp
jg
xor
jg
cmpb
lahf
push
jb
ja
std
mov
and
jge
cs
push
jecxz
hlt
adc
cmc
sbb
pop
scas
xlat
inc
adc
aas
aas
push
das
dec
sbb
sbb
mov
pop
mov
ss
sbb
cld
xchg
sbbl
jne
inc
pop
pop
cld
repnz
cmp
push
mov
push
loopne
xor
xor
and
in
mov
sub
shlb
pusha
mov
push
insl
dec
xchg
jo
dec
cwtl
add
sarl
xor
sbb
pop
xchg
push
sti
sbb
loope
gs
add
hlt
int3
and
or
popa
jb
xchg
ss
popa
arpl
aas
idivl
gs
clc
push
push
ret
aas
pushf
jb
push
push
rcll
lret
daa
mov
jl
aad
shrl
test
dec
out
insb
iret
cmp
fsubrl
out
mov
dec
jbe
add
lods
mov
dec
ss
std
stos
sbb
and
nop
mov
and
fwait
sbb
dec
pop
cltd
or
jnp
mov
dec
adc
mov
adc
or
inc
jno
cmc
fisttpl
scas
clc
les
adc
movsb
dec
and
inc
imul
jmp
icebp
aas
roll
dec
nop
movsb
xor
add
arpl
push
je
and
std
adc
push
xchg
cmp
ja
pusha
sbb
ja
mov
pusha
sub
jns
mov
aam
int
jg
hlt
leave
movsl
imul
dec
cmpsb
xor
jb
cmp
sub
jl
daa
mov
cwtl
lds
in
lock
adc
xchg
adc
cmpsb
inc
or
das
pop
imul
xor
dec
arpl
sub
pushf
pop
sbb
mov
add
out
ja
in
icebp
aad
add
pop
jg
outsb
xlat
or
add
sahf
mov
push
cltd
fidivrl
sub
flds
and
shll
outsb
out
push
shll
pop
sub
pop
dec
push
add
mov
sbb
int3
fs
jbe
sbb
mov
dec
div
add
mov
mov
xor
pop
cmp
jle
cmc
jmp
jne
rcll
dec
pop
enter
inc
leave
adc
mov
xor
lret
sbb
js
xor
jnp
sbb
jae
or
pop
loop
pusha
mov
dec
mov
scas
push
add
push
xchg
mov
cmc
pop
xor
fs
mov
loop
mov
xchg
loop
je
push
jns
mov
ret
into
icebp
jle
xor
adc
out
cmpl
adc
fs
ds
jecxz
in
mov
aas
mov
cmpsb
xchg
rep
push
loopne
push
cs
push
push
push
mov
xor
call
pop
jle
cmp
sti
mov
rcl
adc
mov
lahf
push
jg
cmp
dec
gs
outsl
jno
ljmp
jge
sti
inc
dec
mov
jb
dec
leave
sbb
mov
mov
loop
ds
xchg
or
std
xchg
inc
push
jnp
jb
adc
mov
cltd
mov
movsb
sbb
dec
ret
addr16
imul
mov
mov
pushf
xchg
movsl
mov
fnstsw
xor
repnz
les
sti
xchg
loop
mov
xchg
shll
mov
inc
insb
sbb
pop
jge
sbb
xchg
ret
dec
jge
add
adc
mov
and
js
adc
rorl
or
lret
sub
imul
jo
or
daa
je
sbb
loope
movsl
xlat
mov
pop
pop
imul
in
ret
test
mov
in
cmp
mov
sub
sbb
sub
in
repnz
dec
orl
mov
addr16
jae
mov
outsl
xchg
test
cmp
push
jp
jg
sar
mov
hlt
dec
in
loop
mov
out
bsf
lahf
rclb
insl
lret
test
jle
cmp
and
push
push
jns
fwait
pop
cmp
mov
mov
push
dec
pop
push
cmp
popf
push
sub
insb
adcb
mulb
loopne
sahf
mov
dec
out
ret
jbe
xor
popl
sahf
add
adc
or
outsb
insb
incl
cmp
jge,pn
add
xor
lds
into
mov
mov
roll
inc
repz
cmc
imul
jmp
mov
test
mov
in
lcall
push
xor
jno
jbe
mov
lret
scas
int
pop
gs
push
push
xchg
in
mov
add
cmp
mov
fidivl
jbe
mov
push
iret
push
xor
es
aas
ficoms
and
pop
jae
pop
push
push
push
jg
ficomps
dec
mov
shl
repnz
add
daa
add
jecxz
test
inc
xchg
mov
cmc
and
dec
or
pop
dec
mov
push
inc
enter
das
mov
adc
or
iret
andb
and
jmp
jge
xchg
stos
xchg
mov
mov
xorb
pop
push
cmp
int3
jmp
out
ret
jne
mov
fdivl
push
add
dec
sub
rcrl
nop
jge
cmp
stc
xlat
dec
push
rcll
pop
dec
fnstenv
push
jbe
lea
push
mov
mov
cmp
cli
pop
inc
cmp
test
adcb
jmp
hlt
scas
inc
fisubrl
mov
shlb
rclb
lea
inc
xchg
mov
xor
and
xor
jbe
pop
loop
inc
pop
movups
stos
lret
insl
xchg
pop
lea
mov
or
popf
lret
push
sbb
cli
in
iret
das
js
scas
aaa
fmull
add
cltd
xchg
inc
cmp
daa
daa
fs
or
jle
inc
mov
or
dec
in
jo
cld
mov
aad
jbe
aaa
icebp
es
inc
jle
add
lret
int3
add
int3
loopne
jle
and
jo
jl
sbb
push
dec
in
add
jp
mov
dec
aas
bnd
inc
faddl
jmp
out
mov
xor
out
ftst
aam
sub
call
adc
addr16
dec
mov
ret
nop
out
add
inc
jmp
push
out
aad
xchg
pusha
jmp
out
push
mov
sbb
push
sub
lods
stc
pusha
mov
int3
sbb
jge
hlt
add
sbb
rcr
test
or
test
jno
in
lea
sbbb
scas
xchg
xchg
xchg
inc
push
push
or
jnp
push
xor
and
sbb
push
mov
data16
cmpb
repz
stc
or
gs
jle
adc
test
xchg
lods
push
ljmp
cld
addb
cmp
and
arpl
bound
cld
push
mov
nop
mov
add
adc
daa
mov
adc
jge
jp
imul
or
jg
add
sahf
ljmp
mov
ljmp
es
jmp
mov
cmp
addr16
ja
jecxz
aas
sarl
pop
push
xor
sahf
mov
and
mov
sbb
mov
imul
outsb
stc
cld
cs
jmp
push
xchg
sahf
roll
push
xchg
inc
scas
test
mov
mov
mov
js
cmp
push
rorl
xchg
sub
add
jle
mov
nop
int3
push
hlt
arpl
inc
in
xor
clc
pop
mov
jmp
imul
or
imul
loop
jnp
mov
inc
xor
cmp
inc
mov
sub
jae
stos
adc
stos
imul
mov
adc
jp
cmpb
stos
dec
push
cmp
dec
add
leave
gs
pop
ljmp
add
cmp
lods
sub
popf
testb
xchg
mov
sbb
dec
fs
sti
xor
xchg
in
xor
add
push
jmp
mov
sbbb
mov
lcall
jmp
imul
or
adc
sbb
adc
xchg
xchg
inc
test
das
sahf
ffree
mov
stos
out
imul
sub
mov
xor
outsl
sub
pusha
in
rcrl
push
mov
xchg
mov
or
push
orl
xchg
xchg
jnp
sbb
inc
pop
xchg
ljmp
push
stos
sti
test
outsl
and
lods
fisttpl
dec
pop
xor
orl
test
fcomi
push
cmpsb
inc
fdivs
pop
pop
add
ret
xchg
mov
xchg
and
mov
add
mov
sub
je
in
cltd
mov
inc
adc
repz
movsb
loop
add
pusha
xlat
xor
xor
pop
out
inc
in
es
scas
add
adc
mov
aam
or
adc
inc
push
add
adc
sbb
or
loopne
test
pop
shll
push
add
lret
push
adc
mov
into
data16
add
mov
push
faddl
or
lds
movsl
ficomps
cmp
cmpsl
xchg
cld
cmp
cwtl
insb
dec
dec
mov
rcrl
in
lds
cmp
lcall
sar
ss
push
jns
xchg
negb
cmp
mov
inc
and
aas
out
cmp
int
pop
fidivl
jae
inc
pop
pop
pop
mov
or
xor
jne
add
rolb
push
sub
adc
loopne
repnz
repnz
sub
cmp
inc
sbb
and
jae
sub
dec
jns
dec
sti
xchg
mov
cltd
cmp
push
sub
int
test
push
push
addb
std
pop
pop
pop
not
int
fcomps
mov
roll
lcall
ud1
xchg
call
jnp
aam
sbbb
rolb
repnz
pop
pop
adc
rol
out
push
mov
jmp
mov
mov
shlb
add
fmull
in
sbb
push
xchg
repz
push
movsb
stc
sbb
test
mov
repz
cmp
or
push
divl
fsubr
jo
dec
mov
andb
push
mov
into
loopne
add
jae
and
jbe
mov
push
insl
movsl
les
adc
bound
lret
jl
mov
mov
rorb
adc
out
pusha
pop
popa
jecxz
aam
lds
mov
mov
cmp
leave
in
fisttpll
mov
jp
or
fcmove
xlat
push
sbb
cmp
add
xor
push
aaa
cs
lods
lods
cmpsl
ret
shrb
inc
adc
rorb
pop
lcall
lods
popf
sub
mulb
and
push
adc
push
cmp
pop
and
shr
inc
dec
imul
ret
jo
push
fsubl
shlb
sbb
fcoms
dec
jle
jnp
scas
arpl
cmp
pop
cmp
fcoms
jle
sbb
fistl
and
in
in
adc
sti
adc
into
mov
lods
push
lret
test
aad
mov
lret
nop
cmovno
mov
in
dec
lods
mov
sbb
fcomip
leave
add
mov
insl
mov
add
daa
lcall
mov
ja
mov
add
adc
aad
aaa
inc
jge
or
inc
lods
sbb
xor
pop
leave
add
pop
xchg
outsb
into
push
xlat
arpl
gs
xchg
movsl
popf
je
xchg
sbb
lds
lods
pop
or
popf
dec
pop
shll
mov
xor
cli
mov
mov
add
movsb
and
into
and
test
adcb
push
adc
imul
xchg
mov
mov
lea
out
movsl
les
icebp
mov
in
fsubr
sub
les
bound
cmp
out
cs
adc
flds
inc
push
mov
add
popa
jne
fidivs
stc
mov
xchg
dec
stos
test
fwait
insb
js
pusha
inc
pop
lods
and
jmp
adc
pusha
jmp
stos
jge
lret
jnp
out
pop
jo
xchg
test
push
dec
cmc
int
and
push
pusha
mov
pushl
add
pop
fldl
lahf
shrl
add
sub
jecxz
jbe
les
push
aas
fistl
ret
push
cltd
cmp
cmc
inc
lods
mov
adc
inc
mov
fcompl
leave
inc
ret
sbb
mov
push
cwtl
adc
and
xchg
xchg
loopne
fdivrs
loopne
rolb
cmp
push
push
mov
xchg
stc
push
cltd
jecxz
mov
leave
xchg
jne
xchg
push
inc
adc
pop
sahf
and
sti
out
call
xor
adc
out
sti
mov
sarl
xor
jo
push
xor
mov
outsb
fstp
cmpsb
pop
into
xchg
cmpsl
mov
out
push
xchg
daa
mov
ds
or
jno
inc
pushf
pop
jp
add
add
pop
jmp
cmp
cwtl
sbb
andb
dec
ljmp
mov
test
lret
mov
mov
inc
jmp
pop
and
out
xor
cmpsl
stos
outsb
mov
mov
sub
mov
daa
xor
sub
fists
jb
pop
cmp
out
xorl
out
or
jo
and
jp
ret
mov
scas
push
test
xchg
add
shlb
mov
mov
mov
push
mov
popa
mov
xchg
jae
aad
orb
mov
imul
xchg
mov
call
dec
aam
sarb
aad
jne
test
jg
movsb
outsb
mov
jae
aaa
call
jecxz
jmp
push
xchg
test
shrb
nop
jmp
roll
add
ljmp
xchg
pop
cmp
ljmp
and
push
cltd
cs
ds
inc
mov
pop
pop
in
sub
xchg
mov
lods
movsb
mov
cwtl
popf
cltd
ret
sbb
in
push
jne
mov
push
gs
cmp
jno
mov
sahf
ja
mov
data16
scas
push
das
sbb
jo
push
push
mov
loope
imul
lret
xorl
mov
push
mov
inc
imull
mov
inc
clc
nop
adcl
add
loop
mov
out
iret
adc
xchg
cmp
lds
sbb
ret
mov
mov
cs
mov
out
inc
sarl
and
cmp
aaa
push
notb
movsb
mov
popa
insl
mov
in
jno
pop
mov
addr16
arpl
fstpt
popl
lret
jne
or
sti
mov
je
push
dec
shrl
fsubrl
push
push
out
mov
push
pop
addb
add
xorl
jecxz
mulb
push
test
xchg
les
xchg
loope
movsb
or
xchg
inc
sub
push
testb
push
sub
push
ds
lods
dec
shrl
jbe
jg
cs
mov
je
dec
das
ret
push
ret
jmp
xor
addr16
lock
jmp
mov
cmc
mov
cmpsl
jo
adc
xor
sbb
sar
push
lret
dec
push
lcall
in
sub
cmpsl
jns
jb
jmp
add
xchg
xorl
add
inc
sarb
js
int
inc
js
adc
lcall
xchg
shrb
fildl
rcrb
or
outsl
inc
lcall
jo
call
dec
scas
data16
sub
dec
mov
jae
jo
in
cmc
inc
mov
mov
sub
stc
cmc
jae
cwtl
pop
aas
push
mov
lods
test
inc
mov
cmpsl
inc
mov
lods
mov
daa
or
int
xor
xor
movsl
adc
fwait
or
mov
jp
and
push
std
leave
mov
rcrb
and
daa
in
push
cmp
dec
cmp
fists
cmp
jge
cmp
aad
jge
push
sbb
jo
loopne
cmpsl
lock
cld
jae
pop
mov
mov
imul
out
adc
cmp
push
in
jbe
ljmp
sarl
std
jno
adc
sbb
push
or
repnz
pop
pop
mov
dec
je
or
mov
aad
add
iret
jae
adc
inc
xlat
iret
adc
jbe
mov
mov
call
xchg
aaa
or
in
fnstcw
xlat
push
ljmp
inc
lea
cli
sti
mov
push
dec
lret
jno
sbb
cmp
push
xchg
lcall
push
std
subl
dec
dec
pushf
orl
xchg
outsl
mov
and
popa
jg
popa
mov
subb
cli
pop
imul
in
add
nop
xchg
sbb
ljmp
loope
jo
push
cmp
fisubrl
jne
push
insl
pop
insl
pop
gs
ja
mov
fwait
pop
push
pop
adc
and
mov
test
popf
mov
xchg
ja
clc
mov
xor
cmp
js
pop
rcll
in
add
cmpsl
ja
cmpsl
lret
in
jo
shl
mov
test
push
jno
mov
repnz
sbb
inc
and
sub
pop
mov
jge
add
or
stc
jns
and
mov
lahf
cli
cmc
adc
pop
jecxz
mov
pushf
test
enter
cltd
jle
repnz
jecxz
movb
push
pop
mov
pop
sbb
dec
cwtl
jle
out
mov
xchg
push
lock
and
mov
rcr
jo
pop
mov
and
inc
pop
outsl
mov
xor
inc
xor
adc
cmp
pushf
sbbl
push
adc
push
fistl
push
inc
enter
mov
das
insl
pop
enter
aas
int
cmp
cmpsb
test
lods
stc
mov
negl
fwait
pop
js
shll
imull
rolb
dec
mov
mov
sbb
inc
je
mov
pop
ljmp
int3
mull
inc
stc
lock
cmp
es
mov
cmp
push
sub
dec
aas
aas
and
xor
loopne
jle
out
out
gs
out
dec
push
add
je
mov
sahf
sti
pop
jp
sbb
ficompl
ss
mov
inc
or
xor
inc
or
xchg
push
jae
sbb
leave
dec
sahf
mov
and
sub
or
ljmp
testl
out
es
xchg
fs
das
dec
sbb
arpl
scas
or
push
repz
lret
movsl
inc
cwtl
jl
je
and
fs
push
xlat
rclb
push
invd
iret
jl
outsl
cltd
es
xchg
xchg
pop
nop
adc
lahf
ficoml
repz
je
decl
inc
xor
mov
sbb
jae
call
mov
and
js
mov
jns
fadds
adc
fistps
mov
fcomps
shll
bound
pop
loope
mov
pop
lods
in
aaa
fucomp
lea
outsb
daa
movsl
shr
fdiv
sub
xchg
jns
dec
mov
fdivr
xchg
arpl
push
jecxz
lock
push
dec
jne
sbb
hlt
daa
insb
insb
lods
lcall
xchg
dec
lods
mov
pop
movsl
data16
dec
out
xchg
out
aas
fs
ficomps
gs
nop
mov
stos
pusha
pushf
test
outsl
lret
fcoml
xor
xchg
enter
and
mov
out
xor
push
or
mov
mov
out
adc
dec
dec
add
rolb
js
imul
cmc
jge
add
lods
loope
std
ljmp
gs
hlt
repz
outsl
repz
dec
into
lea
push
pusha
adc
test
mov
scas
mov
pusha
mov
or
in
popa
adc
xor
addr16
sub
jns
mov
je
xchg
hlt
cmpb
mov
jmp
or
jl
cmp
out
fimuls
iret
add
dec
cld
pusha
fstpl
add
xor
sar
mov
mov
lahf
fwait
shll
jg
and
out
xchg
push
and
jp
xchg
cmpl
pushl
out
and
mov
xchg
dec
mov
stos
xchg
mov
xor
sarb
or
jne
sub
test
notb
mov
push
xor
mov
sbb
lahf
aaa
mov
lret
push
push
repnz
test
gs
loope
or
out
xor
je
xor
push
jecxz
cli
lock
data16
jno
dec
jg
sbb
or
mov
insl
lahf
repnz
aas
push
mov
movsl
rcrb
test
pop
mov
popa
sbb
mov
pushf
fstl
popa
gs
and
fisubrl
pop
hlt
fwait
pop
adc
adc
fwait
stc
jmp
int3
or
dec
cmp
nop
sbb
inc
xchg
shlb
inc
mov
rolb
lods
paddsb
mov
xchg
mov
add
popa
rolb
pop
call
pop
cmp
test
adc
mov
mov
jecxz
mov
fwait
hlt
test
cmpsb
shlb
insb
adc
xchg
sub
test
push
pop
mov
inc
xchg
mov
xchg
or
mov
xlat
int
std
addb
inc
mov
sbb
ja
fdivrs
fsubl
daa
pop
inc
push
mov
loop
repnz
jle
add
or
lret
or
pop
stos
or
lock
mov
enter
lock
pushf
repz
xchg
push
inc
ret
sti
sub
ja
pop
push
leave
jnp
mov
mov
dec
adc
ljmp
mov
jns
and
cld
sbb
sbb
test
scas
push
lcall
rclb
repnz
adc
mov
fidivrs
and
shlb
scas
adc
push
mov
lahf
or
and
pop
subl
mov
xchg
fisttpl
or
lcall
ja
sarl
sbb
adc
jnp
sub
mov
mov
mov
push
mov
scas
lret
sbb
pop
pop
mov
mov
mov
pop
pop
mov
sarb
jno
or
movsb
mov
repz
push
jns
aad
push
and
cmp
into
or
add
sti
insb
mov
outsb
clc
inc
push
jbe
xchg
xor
insl
jp
add
mov
in
sarb
sahf
push
nop
cwtl
repnz
pushf
or
lcall
lea
mov
cmc
in
repnz
imul
mov
int
sub
lret
loopne
mov
cltd
shl
sub
iret
nop
fimull
hlt
or
out
stc
inc
outsb
inc
sbb
xchg
xchg
lahf
lret
inc
push
jne
jecxz
jge
shl
dec
std
inc
mov
sbbb
pop
das
jnp
enter
addr16
sbb
nop
das
mov
xchg
in
mov
xadd
sbb
or
adc
push
cld
sbb
fld
les
jp
loope
cld
and
pop
cmc
sub
cs
xchg
dec
jae
and
sbb
xchg
jo
or
fwait
movsb
xchg
or
mov
in
cld
cmp
push
popf
add
dec
test
and
stos
inc
ja
inc
xchg
loop
add
pop
repnz
mov
sbb
sbb
test
ljmp
mov
sub
jnp
mov
decl
cli
jae
mov
leave
cmp
daa
pop
sub
shll
inc
inc
dec
movsl
inc
aad
xchg
jg
test
out
imul
scas
xchg
ffreep
mov
jle
adc
and
inc
insb
add
xchg
addr16
and
popa
inc
mov
mov
xchg
push
inc
sbb
mov
xor
mov
insl
push
in
arpl
rcrl
lock
shll
mov
jns
data16
aad
insl
ficoml
adc
adcb
std
pop
sbb
and
mov
add
cmp
xchg
sbb
or
scas
pop
lahf
add
mov
mov
xor
push
xorl
fldcw
aaa
outsb
dec
add
mov
loopne
mov
aas
int
sbb
push
arpl
aaa
sub
subl
inc
sbb
jo
mov
mov
aad
ret
cmc
cmp
adc
push
xor
mov
jl
imul
cmpsb
repnz
rcll
pop
pop
inc
pop
push
sub
ja
pop
aam
cmp
mov
inc
cmp
cmpsb
inc
dec
lret
frstor
jmp
cmpl
icebp
sar
aam
loope
jecxz
hlt
and
push
inc
mov
ss
leave
mov
inc
push
dec
xor
dec
scas
mov
daa
cmpsb
cs
ret
mov
ljmp
cmp
adc
pop
push
gs
pop
jecxz
mov
lock
mov
clc
clc
jnp
jno
cmp
cmp
push
icebp
mov
xor
and
cwtl
cmp
movl
andb
xchg
xor
mov
xchg
out
cmp
cmc
negl
icebp
mov
cmp
mov
xor
mov
mov
pop
popa
mov
outsb
loope
and
xlat
push
jmp
mov
and
fadds
test
test
adc
mov
mov
add
mov
inc
mov
mov
outsl
stc
pop
sub
inc
inc
shrb
ficompl
loopne
inc
xor
mov
xchg
adc
cmp
pop
daa
sub
sub
orl
daa
mov
mov
outsb
cmp
and
mov
iret
sbbl
mov
ljmp
daa
or
lcall
shrb
sahf
jg
sahf
push
ljmp
imull
push
push
xchg
rcrl
movsl
cmp
stc
orb
popf
lret
cmpsb
into
rclb
push
adc
xchg
out
mov
mov
mov
jmp
fwait
cmp
call
sbb
or
daa
insb
xchg
out
std
movsb
adc
add
fisubl
fcmovu
inc
xchg
push
sbb
sbb
cli
adc
outsl
fmuls
push
cmpsl
add
add
xchg
pushf
test
je
int
aam
inc
sahf
ja
sbb
xor
and
pop
adc
sub
sbb
es
andl
or
or
hlt
sbbb
stos
cmpsl
pop
xor
mov
and
cmp
fldenv
and
adc
sbb
std
mov
test
xchg
dec
sbbb
pop
in
fucomp
je
mov
pop
jne
xchg
mov
or
outsl
mov
sarl
lea
mov
lcall
xchg
xchg
and
push
cmp
add
cmp
cmp
push
cmp
jnp
movsl
mov
ret
pop
mov
mov
cmp
and
gs
fisttps
cs
inc
inc
dec
js
mov
cmp
sub
mull
jecxz
loope
or
xor
push
pusha
jecxz
idiv
cwtl
in
int
outsb
xor
add
mov
test
aad
xor
fidivl
loopne
in
andb
popa
inc
mov
out
dec
mov
jg
aad
subb
movsb
addr16
sub
sub
push
mov
push
int3
mov
out
or
mov
sub
add
popa
push
mov
pop
mov
push
insl
push
push
xchg
mov
push
dec
cmpsb
out
inc
and
cmp
mov
std
xchg
lret
inc
cs
lret
hlt
lret
scas
gs
push
xor
ss
pop
hlt
cmp
dec
aaa
add
sarl
dec
cmpsl
sub
pop
mov
scas
stos
cltd
dec
shlb
loope
test
fidivl
and
mov
sub
out
inc
addb
push
sbb
mov
push
push
cmp
dec
push
imul
push
sarl
xor
es
push
sbb
mov
push
xor
xlat
sti
and
lods
xor
push
cli
adc
nop
enter
dec
push
gs
cmp
xchg
push
insl
mov
cmpsb
pop
imul
mov
sbb
pop
fwait
in
insb
mov
adc
adc
mov
mov
in
dec
xchg
cmpb
adc
xchg
inc
cmp
pop
sbb
add
push
inc
hlt
or
push
xchg
mov
insb
adcb
push
gs
sbb
fcompl
add
xchg
sub
sahf
and
pushf
jns
ds
lods
sub
and
adc
in
popf
cwtl
ret
mov
test
test
je
push
scas
hlt
jnp
out
mov
sub
xor
or
lock
push
in
mov
nop
lock
ds
aam
or
xor
xchg
dec
jno
aam
int3
jno
and
clc
add
add
and
out
sbb
inc
out
arpl
sub
popa
and
xchg
push
mov
mov
lods
sbb
sub
stc
adc
jl
xchg
lahf
jns
call
scas
sbb
sub
push
jp
pop
cmpsl
bound
lret
mov
aam
inc
in
mov
adc
shlb
mov
add
cmp
enter
dec
pop
add
fdivrs
adc
out
sbb
stc
arpl
lea
data16
dec
into
popf
cmp
cmp
cmp
ljmp
xchg
xor
rorb
subl
in
ret
rol
cli
dec
cmp
add
ja
fldt
out
push
jp
dec
mov
mov
int3
mov
incb
stos
jnp
pushf
icebp
out
pushw
push
lea
dec
lods
sti
scas
out
aaa
pop
cmpsb
cmc
jp
fisttps
mov
push
push
push
inc
insl
push
clc
out
sub
insl
nop
sub
call
sbb
cmp
leave
xchg
test
and
jne
cmpsl
inc
addr16
adc
pop
ficomps
in
mov
data16
jns
or
repnz
add
xor
test
cmpsl
push
aad
lret
add
adc
sbbl
test
es
pop
adc
push
adc
xchg
test
out
aad
in
xchg
lcall
cmp
sub
bound
xor
add
sahf
std
jmp
xor
sahf
outsb
pushf
loop
pusha
imulb
psraw
int3
cmp
sub
or
jbe
push
cmpsb
repz
in
xor
jb
mov
mov
inc
sbb
call
test
jo
jl
pop
ja
and
jns
mov
lock
pusha
xchg
icebp
out
outsl
fbld
xor
inc
mov
pop
subb
pop
push
outsb
add
mov
mov
mov
das
jge
ret
jo
pop
add
pop
jl
push
lods
pop
and
in
push
dec
pop
cmp
mov
pop
push
es
rcl
push
mov
jnp
cmp
xor
dec
pop
stc
pop
inc
out
out
xor
repz
mov
xor
int
icebp
push
pop
push
or
push
ljmp
add
subb
nop
xchg
jns
mov
fwait
adc
jp
or
jae
push
std
hlt
es
mov
ljmp
fldl
ljmp
or
mov
lret
mov
mov
pusha
repz
mov
pop
cmp
call
fnsave
inc
sti
mov
cmp
loopne
nop
sub
movsb
pop
fbld
mov
dec
push
ljmp
jns
jle
lock
adc
jb
dec
es
or
sub
hlt
in
sahf
mov
and
loope
xchg
inc
pop
xor
cmpsb
xorb
jecxz
sbb
sbb
divl
jge
jmp
sub
mov
inc
stos
lret
inc
scas
mov
sub
ds
jmp
mov
rcl
sbb
mov
mov
ret
add
cmp
repnz
repz
and
mov
pop
adc
dec
lret
out
fcmovnb
cli
cmpl
inc
inc
jnp
and
insb
shll
std
jp
pushf
sbb
cmp
lods
je
dec
sbb
xchg
push
cmpl
xor
lds
push
hlt
shlb
lods
xchg
adc
mov
dec
mov
xor
dec
and
sub
add
push
dec
xor
ret
jg
mov
aas
fdivrs
pop
pushf
out
jmp
cmp
inc
scas
jo
xchg
xlat
mov
push
jg
pop
loope
test
add
vphaddbd
pop
enter
xor
sbb
jne
xor
imulb
jle
mov
out
xchg
out
out
xchg
jns
fmuls
test
daa
push
mov
shrl
push
test
pop
sbb
pop
push
gs
in
pop
and
push
sub
enter
test
mov
faddl
ret
push
mov
jo
neg
mov
mov
sbb
out
stos
xchg
cld
andb
fildll
jo
sbbl
mov
in
mov
ljmp
call
cli
arpl
cltd
shlb
enter
sbb
or
xchg
loope
cld
inc
dec
mov
mov
sub
sbb
lea
mov
mul
lea
cli
stos
lgs
cmp
and
scas
shrb
jbe
dec
inc
ljmp
sub
add
in
dec
or
aas
xlat
pop
push
add
inc
pop
sbb
sbb
int
nopl
testb
push
neg
imul
sub
test
cmp
shlb
rclb
push
jge
sub
mov
cltd
rolb
jp
push
mov
jnp
adc
std
push
xor
je
ret
lock
mov
test
mov
shl
xchg
out
lcall
mov
jecxz
and
jecxz
cmp
mov
mov
or
fwait
dec
inc
fldenv
pop
dec
or
std
mov
xor
mov
dec
pop
mov
in
and
mov
adc
out
pusha
jp
jge
popf
out
cwtl
xchg
sub
das
stc
pop
mov
fcompl
mov
aas
and
dec
jns
pop
inc
movsb
idivl
mov
mov
das
jmp
orb
fiadds
fld
lock
and
sbb
add
mov
out
aas
ljmp
dec
insl
push
cld
mov
or
and
xor
je
adc
out
dec
pop
in
dec
mov
dec
add
xor
test
add
inc
dec
fstl
insl
in
out
jecxz
imul
mov
std
cmc
cltd
push
xlat
jge
lret
loope
cmp
mov
sbb
testl
fldenv
into
aam
mov
pop
jnp
inc
stc
out
mov
sub
adc
into
imul
mov
lock
ds
lcall
andl
xchg
aad
adc
push
stc
cwtl
repnz
jo
popa
in
sarl
mov
popa
shr
adc
mov
aam
icebp
push
dec
or
inc
sbb
mov
nop
xchg
ja
jmp
xchg
xchg
test
nop
movsl
push
dec
sub
mov
lret
outsb
outsb
add
sbb
imul
and
adc
pop
andl
mov
and
mov
cmp
fists
and
xor
repz
jg
sar
xchg
xchg
iret
jp
push
jno
mov
insl
cmp
shl
ds
paddusb
aad
xchg
call
cmpsl
dec
imul
movsb
cmp
or
or
dec
mov
in
insl
out
mov
data16
push
call
jmp
je
outsl
aad
dec
push
sub
inc
jae
stos
mov
shl
fbstp
clc
xchg
mov
stc
push
mov
insl
lret
fidivs
mov
nop
and
lahf
pop
push
scas
cltd
pop
loop
mov
and
jbe
lcall
bound
pop
das
popa
les
add
sub
xor
jg
xor
ss
test
fdivl
in
xchg
sub
push
inc
in
loope
dec
test
push
fst
into
mov
dec
mov
dec
scas
mov
outsb
outsl
inc
cmp
inc
and
rcrb
lahf
or
pop
sbb
sub
xchg
mov
sahf
lahf
and
ret
and
or
movsl
roll
int
ljmp
cld
rcrl
or
cmp
sbb
xor
pop
outsl
ret
mov
cmp
mov
push
incl
ret
lods
pusha
inc
adc
inc
pop
test
lods
and
mov
aam
mov
imul
lea
ja
out
sbb
mov
xor
sbb
int3
cld
out
mov
jge
stos
pushf
lods
cmp
fs
call
push
cmp
inc
cmpsb
push
fidivrs
sti
jns,pn
sahf
mov
je
insb
in
mov
frstor
sbb
cmp
sbb
mov
xchg
daa
cld
and
mov
push
mov
push
pop
jbe
fiaddl
cmp
test
and
notb
into
js
xor
dec
mov
icebp
int
jbe
in
and
cmp
dec
xchg
lahf
subl
or
sbb
in
or
test
rcll
in
xchg
filds
jo
ficompl
mov
jecxz
pop
sbb
incb
pop
xlat
adc
jno
xchg
xchg
xlat
test
lcall
mov
movsl
dec
mov
cmpsb
dec
mov
bound
adc
xchg
xor
ficoml
dec
sub
popl
inc
lods
in
xor
test
in
inc
jbe
add
xor
and
pop
addl
inc
mov
adc
bswap
inc
xor
out
adc
xchg
mov
dec
inc
addr16
mov
roll
lret
lahf
mov
lock
sbb
mov
xchg
jle
cwtl
fisttps
lahf
jmp
cli
ja
sbb
test
push
sbb
sub
fldt
or
loope
jecxz
sub
les
mov
or
leave
rorl
fiaddl
scas
push
ja
icebp
and
jno
popf
and
mov
negl
and
outsb
or
xor
insl
stos
and
std
in
mov
mov
dec
pop
nop
ds
xorb
mov
aaa
and
inc
loop
sub
dec
test
push
pusha
outsl
loop
fidivrs
xchg
loope
adc
cmpsb
les
out
je
pop
mov
inc
mov
ds
push
sbb
adcl
int3
pusha
mov
sahf
pop
scas
imul
adc
jb
push
lret
pop
getsec
inc
and
dec
push
mov
bound
add
fs
jmp
gs
lock
or
and
sub
ljmp
out
fsts
mov
arpl
pop
dec
ljmp
aad
xor
adc
jmp
pop
cld
cltd
leave
icebp
fs
fisubs
ret
popf
push
ljmp
fcoms
push
pop
sub
shll
movsl
addr16
push
push
pop
test
jl
repz
lcall
push
jae
dec
cwtl
mov
cltd
mov
xchg
rorl
fstps
sbb
sub
out
or
fidivrl
dec
pop
mov
int3
loope
and
aaa
je
push
fldl
iret
add
jle
scas
mov
jb
in
loope
cld
mov
add
push
addb
push
lahf
push
cmp
out
dec
jecxz
mov
push
daa
inc
push
jnp
imul
cmc
dec
or
lock
pushf
xor
mov
lret
dec
pop
jae
pop
xlat
jns
fs
mov
pop
ffreep
lods
mov
repnz
sbb
xchg
mov
bound
fisttpl
push
aad
mov
jae
fadds
mov
xchg
in
lock
leave
mov
inc
scas
sti
movsl
xchg
lret
sar
or
outsb
cs
and
cmc
push
mov
imul
pushf
xor
fistpl
jnp
pop
call
and
int
and
repnz
cmp
sbb
pop
movsb
mov
out
in
mov
push
push
jbe
and
sbb
cmp
out
sbbb
pop
sub
hlt
mov
mov
ret
push
mov
lds
leave
mov
bound
xchg
lret
and
cmp
int3
imul
and
push
jl
mov
mov
pop
lods
jg
movsb
loop
into
jg
sub
repnz
pop
enter
xchg
aas
add
idivb
loopne
sbb
add
jecxz
loope
adc
movsl
mov
xchg
and
cmpsl
ljmp
test
push
cltd
stc
popf
ljmp
xchg
gs
ror
aad
addr16
mov
sbb
xlat
int
pop
add
mov
bound
cmp
mov
mov
pop
js
rcrl
ja
pop
lea
outsb
out
hlt
pushf
loopne
xlat
loopne
adc
cmpsl
jno
in
xor
sub
mov
addr16
lods
cwtl
push
or
out
es
fldl
pop
lcall
jno
jl
idivl
mov
lcall
dec
sahf
cmp
fmuls
push
paddq
iret
and
pop
movsl
and
cli
into
jno
jno
jle
fadds
into
fnsave
pop
insb
push
mov
adc
in
rcrl
pop
push
jle
movsl
mov
lcall
movsb
lret
lods
ret
clc
pop
fstps
sarb
dec
in
cmpsb
mov
dec
dec
hlt
mov
inc
and
test
mov
mov
orl
loop
jbe
daa
adc
add
pop
pop
lea
lret
arpl
sbb
in
iret
xchg
and
push
loopne
rorl
sti
icebp
test
dec
stc
jne
mov
mov
fwait
es
loopne
jg
push
push
out
mov
pusha
ds
xchg
aaa
adc
push
xor
jns
xor
xor
ret
adc
fnstenv
pop
lds
cltd
test
push
loop
cwtl
int3
int
and
cmp
shl
stos
movsb
mov
mov
insb
jb
std
adc
test
lret
call
add
mov
mov
std
aaa
inc
pop
sahf
jns
in
mov
xchg
imul
fstl
inc
sbb
push
movsb
cmp
adc
add
cmp
stos
cmp
sbb
les
stos
and
dec
outsl
shl
sub
inc
stos
sti
jl
aad
jnp
pop
ja
hlt
push
adc
inc
in
rcr
mov
or
add
int3
push
icebp
testl
inc
leave
push
test
out
add
mov
shlb
ss
std
adc
fisubrl
addr16
cmp
xchg
sub
icebp
rorl
add
sahf
ss
aaa
fsubrs
xlat
or
mov
inc
and
sub
adc
in
cmpsl
filds
sbb
fists
mov
mov
push
arpl
xchg
mov
out
adc
add
mov
cmp
shrb
subb
jmp
aas
or
cmp
jne
scas
mov
push
mov
mul
push
xchg
lret
int
adc
xlat
neg
push
repnz
pop
xchg
pop
xchg
stc
pop
int3
lds
jnp
dec
pop
lcall
xor
nop
or
lds
xor
and
push
add
add
je
and
cld
and
rclb
ja
xchg
movsl
jnp
lcall
pop
cltd
iret
aaa
push
add
jnp
lret
and
or
sbb
xor
out
mov
outsb
mov
and
mov
inc
xchg
sub
mov
jl
test
out
lret
sarl
shll
inc
orl
call
pop
fmul
jne
scas
sbb
or
pop
mov
jecxz
xorl
cs
mov
sarb
inc
or
fnstenv
dec
jg
mov
loopne
imul
loope
in
fsubrl
mov
dec
arpl
jae
jne
cmp
test
pop
xchg
pop
dec
or
pop
jge
mov
out
xor
lods
insb
divl
cmc
mov
xchg
xchg
stos
xor
mov
out
push
aaa
sub
sub
iret
pusha
or
mov
mov
gs
das
or
orl
push
ss
out
cld
data16
faddl
data16
mov
fisttps
pop
rclb
mov
cltd
sahf
int3
cmpsb
imulb
xchg
fsubr
leave
call
add
notl
cmp
mov
mov
inc
add
adc
pushl
fwait
jecxz
mov
mulb
addl
mov
out
cmp
imul
fmul
sub
cmp
imul
pop
xor
sub
ljmp
cmp
pop
push
out
fwait
leave
lods
add
lret
mov
push
cld
mov
pop
addl
mov
insl
jnp
inc
xor
fdivs
shl
inc
shl
mov
xchg
adc
add
and
inc
mov
leave
cmp
push
add
xor
ds
mov
cltd
clc
mov
aam
rcrb
mov
shlb
cmpsl
adc
pop
inc
xchg
insl
test
mov
repz
mov
push
ljmp
in
cltd
inc
xlat
dec
out
and
les
cli
sub
and
and
aaa
cli
in
add
add
sbb
dec
jbe
push
sub
stos
pushf
fcmovu
pop
inc
mov
cmpl
xor
or
daa
xor
into
adc
flds
sahf
test
or
inc
shrb
lods
ds
jo
testl
stos
sub
jge
mov
fcompl
push
push
jp
out
in
or
jg
das
pop
jns
arpl
inc
cli
mov
mov
mov
div
mov
fs
push
aam
jbe
fucomi
loope
mov
enter
mov
lahf
xchg
mov
mov
loope
lods
pop
push
mov
insl
cmc
jo
subb
jns
stos
out
movsb
mov
ja
add
in
iret
mov
inc
dec
js
mov
xorl
mull
cwtl
sbb
fidivs
push
stc
mov
inc
mov
dec
dec
loope
loop
adc
adc
sbb
sbb
xor
scas
icebp
sbb
inc
push
in
outsb
bound
dec
add
xchg
dec
enter
xchg
xor
pop
sub
aad
popf
jecxz
lret
mov
or
sbb
cmp
sub
nop
cld
or
faddl
lahf
fwait
repnz
cmpsl
push
adc
daa
pop
mov
fwait
xor
pop
enter
fcoml
in
sbb
mov
leave
rclb
popf
mov
movb
pop
inc
push
mov
mov
iret
mov
mov
int
dec
stc
mov
mov
and
ja
mov
inc
mov
repnz
push
sbb
arpl
sub
cwtl
ja
fwait
mov
es
jecxz
ds
lods
or
push
notb
lds
jl
lods
out
cmp
cmp
sbb
fldt
mov
and
cmc
cli
ss
or
daa
or
popf
sub
mov
jae
xor
push
jmp
pop
aad
mov
adc
ret
in
scas
sahf
xor
or
or
js
loop
cmpsl
dec
jnp
sahf
xor
push
push
inc
les
or
dec
pop
and
mov
dec
and
sbb
mov
sub
xchg
jmp
xchg
test
cmp
les
loope
push
push
push
int3
aas
mov
or
cmc
loop
lahf
mov
les
add
and
sbb
sahf
lcall
fidivrs
dec
fsubs
sarl
jge
push
in
inc
sub
js
scas
xchg
sbb
scas
mov
xor
ret
jl
jmp
call
mov
mov
rolb
mov
loop
leave
in
inc
cmp
jnp
fbstp
xor
icebp
into
xchg
jne
xlat
jmp
int
sub
push
cmpsb
mov
mov
jl
std
adc
nop
test
push
imul
or
pop
adc
xchg
imul
pop
mov
push
xor
out
mov
mov
insb
sub
cltd
mov
push
cmpl
call
sbb
int
es
mov
dec
loop
and
jmp
roll
xchg
hlt
ret
push
sbb
cmpsl
mov
dec
inc
inc
push
mov
je
fs
aas
repnz
nop
inc
test
clc
mov
pop
into
cltd
inc
data16
mov
out
sub
testb
jg
or
stos
push
daa
adc
cmp
pusha
loope
pop
mov
jg
inc
mov
mov
and
lret
fbld
pushf
outsb
aaa
add
cli
and
add
mov
push
ss
insb
in
movsb
out
cmp
fistpll
cmp
hlt
mov
mov
mov
mov
inc
cs
add
lock
adc
ret
sub
pushf
mov
and
cmp
inc
push
adc
stos
adc
imul
or
mov
mov
jnp
sbb
icebp
mov
fiaddl
test
lret
xchg
int3
test
pop
cmp
fwait
cwtl
cmp
inc
mov
sub
push
ds
mov
ds
test
push
xchg
mov
test
loop
je
push
dec
es
cwtl
mov
in
xchg
insl
add
lret
dec
inc
xlat
push
mov
shll
lock
repz
rolb
pusha
cs
sbb
sbb
xchg
pop
sbb
das
stc
xchg
jecxz
imul
adc
in
xchg
shlb
cwtl
xchg
inc
sub
int
xor
inc
mov
mov
push
shr
and
push
xchg
jne
cmpsl
push
cmp
add
push
mov
cwtl
xchg
jle
shll
ja
dec
pop
mov
pusha
loop
mov
cmp
sarb
dec
mov
cvtpi2ps
pop
lods
test
in
xor
push
es
shrb
imul
imulb
bound
jbe
inc
adc
jge
mov
rcrl
inc
out
aaa
mov
jl
out
inc
ja
rcrb
insl
sub
dec
push
mov
mov
or
popa
mov
sti
lcall
mov
inc
mov
sub
cmp
push
inc
cmp
dec
pop
add
mov
in
cwtl
outsb
or
jbe
jg
and
push
sub
cwtl
push
cltd
pop
fisttpl
movsl
jle
mov
adc
cmc
sub
sub
lock
jle
rcrb
imul
dec
xor
pop
jno
or
int
mov
jl
xor
mov
mov
scas
int3
pop
hlt
and
add
jnp
xchg
jbe
sub
or
or
xchg
scas
jmp
fmulp
xor
mov
repnz
cltd
adc
dec
jne
scas
push
sbb
xor
dec
and
xchg
bound
mov
mov
dec
inc
mov
aaa
and
and
mov
xchg
xor
mov
sub
call
jns
sub
xchg
mov
jmp
xor
sbb
es
rcll
lock
sub
loop
mov
mov
mov
pushl
mov
cmp
push
sub
iret
jae
sub
push
push
jnp
or
cmc
mov
or
es
mov
inc
ljmp
sti
adc
ret
in
adc
bound
paddw
imul
lret
inc
xor
aam
sub
mov
xor
xchg
leave
jg
ja
fucomp
icebp
mov
mov
loope
pusha
xchg
cmp
adc
mov
mov
pushf
sub
push
pop
adc
jmp
das
cli
test
inc
push
stos
sar
jmp
sub
cmpl
in
push
stc
pop
cmc
fwait
pop
sub
sbb
pusha
jl
addb
shll
addb
xchg
sub
dec
cmp
adc
cmp
inc
xchg
or
mov
cltd
dec
leave
xor
fstl
adc
or
dec
adc
test
mov
pop
std
in
cltd
pop
loop
cltd
pop
cmp
xchg
lret
orb
fisubl
enter
or
lret
dec
mov
dec
mov
sbb
jae
jg
test
sub
jmp
xchg
das
outsb
cmp
inc
adc
jle
jmp
les
out
cltd
mov
sbb
in
outsb
mov
pop
cmp
mov
or
jns
call
sbb
push
inc
sbb
sbbb
in
jmp
mov
icebp
ror
lea
roll
jbe
xchg
push
and
adc
xor
dec
mov
shll
fisttpl
je
xchg
dec
xor
add
xchg
sti
stc
popf
bound
pop
in
scas
mul
test
int3
out
insb
mov
jns
adc
outsl
outsb
cmp
cmp
adc
jg
repnz
mov
sbb
add
add
mov
mov
jg
mov
cli
mov
and
lea
shlb
mov
scas
sub
and
jne
dec
mov
enter
mov
mov
xchg
bound
cwtl
stos
ljmp
xchg
gs
ret
inc
mov
add
mov
push
test
xor
or
shll
pop
jns
mov
push
adc
pop
das
dec
out
pop
mov
out
and
sub
add
xchg
int3
pushf
jb
cld
dec
mov
pop
xor
jo
rorb
mov
pop
popa
popa
rcrb
push
adc
dec
adc
in
mov
jp
inc
ret
xlat
push
pop
ret
faddl
mov
push
cmp
aas
cmpsb
xor
faddp
jmp
loop
mov
pop
lods
stos
push
in
pushf
dec
push
or
orb
xor
shll
xor
inc
cmpsb
or
jl
repnz
xor
sub
ret
cmpsb
mov
scas
lods
xchg
inc
loopne
cmp
xor
repz
subb
sub
mov
sub
and
sub
fcoms
xor
ljmp
daa
push
and
fxch
xchg
push
into
insl
in
adc
jle
sbb
sub
push
negl
rorb
adc
add
jge
call
sub
xchg
mov
int
inc
mov
int3
lods
loope
test
je
test
sbb
outsb
jb
and
les
xchg
insl
mov
lods
push
push
push
xor
mov
push
fs
push
lds
jnp
fnsave
add
insl
mov
insl
movb
mov
push
sbb
jae
sbb
inc
sub
mov
adc
xor
sub
pop
cmp
outsb
movsb
sub
mov
ljmp
pop
inc
ret
push
xchg
and
push
add
push
lret
mov
mov
scas
add
popa
fists
scas
loopne
push
and
jae
adc
out
mov
mov
js
mov
push
icebp
rol
inc
pop
icebp
dec
ljmp
imul
out
push
jge
ret
daa
popa
jne
cmp
in
mov
jp
or
pop
sub
jno
jb
mov
cltd
outsb
mov
aaa
sub
mov
mov
adc
sub
dec
push
inc
pop
pop
fimull
cmp
pusha
neg
cltd
in
mov
inc
aas
leave
jecxz
adc
aam
gs
repz
dec
cmp
or
push
imul
mov
insb
loopne
xchg
sahf
push
xchg
ret
jl
cwtl
xor
or
adc
lea
movntq
out
mov
ss
jns
pop
pop
mov
push
test
shrb
mov
test
dec
repnz
push
adc
cmpsl
pop
sbb
js
les
sbb
mov
inc
and
mov
mov
adc
and
fistps
data16
scas
enter
subb
jmp
cmp
lea
inc
clc
xor
cltd
xchg
dec
clc
or
outsl
inc
or
jno
and
es
inc
mov
lret
dec
jb
cmp
sub
dec
in
or
stos
addr16
mov
jmp
loope
filds
sub
pop
pop
popa
ja
jo
arpl
sbb
cmp
jecxz
sub
adc
pop
call
jne
lret
js
mov
andl
in
mov
adcl
adc
xchg
dec
and
inc
push
xchg
loope
lret
push
lock
push
in
pushf
repz
and
add
push
xchg
repnz
lcall
inc
enter
lret
mov
mov
ret
nop
mov
push
push
sahf
ror
cli
sbb
adc
pop
cs
mov
int
xor
inc
inc
push
jp
push
sahf
fimull
lcall
or
test
mov
js
push
out
hlt
xor
adcb
jb
cmp
rolb
sub
cmp
inc
sahf
xchg
and
xor
push
iret
lret
xor
fsubl
test
sbb
in
inc
mov
dec
mov
mov
push
sub
bound
in
lea
cmp
call
mov
stos
ljmp
mov
int
dec
dec
ja
mov
insl
push
fwait
fs
mov
addr16
dec
ds
ljmp
mov
add
out
dec
xor
xchg
cmp
je
adc
fs
push
mov
jmp
icebp
pop
test
out
das
stos
jnp
mov
lret
dec
ja
das
adcb
sub
mov
jge
push
enter
mov
fnstenv
les
loope
and
and
fidivrl
adc
dec
in
xchg
shr
repz
push
out
add
sahf
jnp
sub
mov
push
xchg
jb
push
movsb
icebp
lods
in
pmaddwd
mov
push
int3
dec
pushf
fimull
push
repnz
mov
and
dec
mov
ds
gs
rcll
icebp
jmp
arpl
fsubrs
cli
fadds
loopne
rcll
repz
push
or
imul
push
inc
xchg
dec
insl
jae
jo
push
inc
les
call
inc
aam
out
ficoms
mov
cltd
cmp
sub
push
pop
iret
cmp
js
xor
shll
movsl
mov
cwtl
cwtl
les
add
xchg
jg
inc
les
enter
clc
xor
xor
dec
pop
sub
cltd
jno
lret
nop
jl
jge
add
aam
push
aaa
in
pop
xchg
add
repz
movl
dec
sub
mov
daa
xchg
sbb
aaa
aas
scas
mov
inc
jno
mov
pusha
jmp
std
sti
jae
xchg
imul
sbb
inc
pushf
jecxz
adc
lcall
and
push
out
stos
scas
and
cmp
in
pop
xchg
sbb
decb
out
jle
pop
mov
lock
insb
push
je
xchg
popa
repz
out
mov
or
fstpt
pop
cld
cmp
mov
mov
insl
and
mov
movsl
xchg
out
pop
mov
fisttps
outsl
sbb
add
cmp
hlt
sub
daa
xchg
push
jbe
loope
pushf
ret
cmp
pop
jecxz
push
loopne
xchg
sbb
fcomi
xor
or
addr16
and
loopne
mov
dec
inc
dec
fwait
out
mov
add
arpl
pusha
pop
mov
or
mov
fcomps
leave
out
fldl
pop
popf
pop
push
rcll
orl
out
xor
lock
push
jle
fiadds
add
jo
ret
mov
xor
pop
inc
push
cld
popa
and
je
sub
sti
sbb
hlt
push
jecxz
iret
mov
pusha
dec
clc
sub
cmpsl
in
addb
in
or
adc
pusha
xorb
mov
sti
lcall
xchg
cli
insb
or
test
fistl
pop
mov
cmpsb
sarb
push
daa
push
mov
pop
sub
xchg
cwtl
and
ss
pusha
push
iret
mov
and
fdivp
std
jmp
add
sbb
cmp
jle
out
inc
cli
pushf
imul
adc
aam
mov
mov
or
or
mov
mov
sub
xchg
mov
stos
or
pop
pop
push
mov
aaa
mov
cli
or
add
mov
repz
add
dec
mov
jle
mov
addl
shrl
cmpsb
mov
std
sub
clc
in
out
les
push
inc
or
sahf
or
push
sub
push
push
popf
push
test
adc
aas
pushl
xor
mov
lret
push
loop
xchg
mov
dec
jecxz
sbb
into
mov
add
popf
jmp
ss
hlt
std
cmp
xor
aad
sarl
add
insb
popa
pop
into
frstor
pop
inc
into
jle
push
mov
in
and
sahf
xchg
scas
push
aad
and
inc
aam
adc
pop
das
popf
data16
or
lcall
add
add
imul
add
adc
dec
daa
int3
and
xchg
mov
push
psrlw
dec
and
xorb
mov
mov
cltd
and
mov
xchg
mov
or
sub
cltd
cmp
mov
mov
inc
xor
shrb
shl
aaa
out
iret
jbe
decb
xchg
scas
nop
out
sbb
mov
insb
sub
mov
and
aam
mov
sbb
pushf
xor
adc
fldcw
rcrl
adc
loope
jge
mov
cmp
xchg
pop
scas
in
int
addl
or
clc
inc
scas
outsl
mov
lds
ljmp
aaa
movsb
push
pop
icebp
cmp
dec
push
je
les
outsb
xchg
xchg
addr16
leave
cmp
xor
dec
lods
sub
inc
cmp
test
popa
sarb
add
je
nop
outsl
scas
es
dec
jle
mov
clc
or
jns
gs
jge
jp
add
jns
maskmovq
imull
mov
enter
pop
push
data16
iret
fwait
xchg
xchg
inc
xchg
ss
xchg
pop
lahf
or
add
lret
frstor
jno
sbb
fs
in
lret
dec
int3
cmp
adc
add
mov
fcmovnu
fwait
sub
fsubrl
add
adc
mov
pop
mov
mov
xchg
stos
cmp
pop
mov
inc
loope
and
lret
push
pop
mov
cmp
out
enter
jge
ror
imul
xchg
call
sbb
cmp
mov
enter
mov
adc
test
in
add
cld
bound
popa
xchg
lock
jbe
dec
mov
jbe
popf
lret
sahf
stc
sub
out
adc
pusha
je
pop
pusha
hlt
fsubl
and
jmp
push
rcrw
pushf
sbb
mov
fnstsw
xlat
loop
aad
loope
mov
or
mov
pop
inc
mov
dec
out
jae
nop
rorl
out
pushf
fs
js
add
sbbb
jle
sbb
int3
jmp
xchg
xor
or
popl
btc
loop
and
and
and
mov
sub
sub
sbb
ss
sbb
addl
mov
xchg
mov
movsl
je
sub
daa
leave
push
jns
mov
dec
dec
adc
mov
mov
jo
insl
in
shll
cmpsb
push
jns
pop
addr16
sbb
push
dec
pop
mov
or
dec
or
in
mov
out
dec
mov
cmc
xchg
jns
icebp
inc
in
jg
and
jne
ja
ljmp
xor
sarb
xchg
add
adcl
shlb
mov
inc
inc
xor
orb
daa
mov
mov
movsb
pop
jg
mov
lods
mov
push
push
dec
neg
movsb
popf
gs
xchg
jp
adcl
dec
out
into
ret
sahf
jne
rcr
test
clc
inc
inc
insl
jmp
cld
or
and
enter
jo
xchg
das
xor
sub
inc
xor
xchg
adc
pushf
andb
cli
mov
inc
mov
testl
call
or
repnz
ds
popa
mov
inc
test
xchg
scas
sarl
les
jg
inc
inc
aaa
and
or
jns
cmpsl
cmp
fdivrl
pop
mov
cs
cmc
push
mov
xchg
arpl
das
mov
mov
or
nop
sub
pop
sbb
inc
mov
fwait
lret
or
jl
and
sub
mov
jmp
or
jle
mov
pop
xchg
mov
and
dec
xorps
pop
add
inc
push
push
sub
movsl
aas
sub
rolb
pop
test
jle
imul
test
cmc
dec
push
nop
rcrb
jl
mov
pop
add
enter
adc
sub
rclb
stc
push
cwtl
movsl
sbb
shll
int
movsl
lret
dec
push
aas
xor
aas
lds
or
dec
lods
fstpt
fstl
bswap
scas
fs
iret
xor
fs
sbb
add
add
sub
icebp
out
cmpb
imul
cld
jns
repnz
fidivl
mov
xor
iret
sti
add
negb
mov
imul
push
cmp
pop
mov
mov
sub
insl
out
stos
or
orl
popf
lahf
pop
cmpsl
pop
in
push
push
cmc
sub
ja
push
rcrb
cltd
adc
addr16
test
sbb
js
mov
mov
adc
inc
mov
push
mov
pop
bound
rolb
ljmp
jno
rcrl
call
cs
nop
iret
outsl
dec
nop
das
mov
pmaxub
sub
cmpsl
mov
xorl
dec
into
lods
stos
xorl
cmp
ja
in
outsb
mov
lcall
fldcw
test
out
pop
inc
scas
mov
icebp
jns
jo
xchg
dec
xchg
fdivrl
xor
insb
jl
jecxz
dec
lods
dec
xor
push
xchg
and
cltd
lock
xchg
aad
je
cmp
dec
cmpsb
sbb
aaa
imul
lds
add
sbb
test
scas
leave
mov
mov
lahf
jge
mov
xor
mov
mov
pushf
es
adc
lahf
fimuls
mov
out
inc
push
add
adc
jmp
add
out
enter
arpl
inc
mov
adcl
push
aad
rorb
movsl
dec
fbstp
inc
push
adc
hlt
std
fwait
xor
icebp
sub
cld
stos
stos
mov
xorb
mov
push
cmp
xchg
pop
popf
test
dec
mov
and
scas
decl
scas
out
pushf
jne
push
pop
cmp
xor
mov
mov
xlat
xor
mov
decb
xor
ja
cltd
or
cmp
push
mov
jnp
mov
push
cmc
lahf
xchg
sub
sub
stos
ret
cltd
or
mov
cmp
stos
adc
pop
loop
fcomps
cli
fadds
inc
adc
pop
gs
push
lods
icebp
cmpsb
gs
cld
push
inc
dec
pop
dec
xor
or
mov
test
jl
iret
imul
xor
or
pop
cmc
movlhps
stc
cli
rcll
fisttpll
rcrl
cmpsb
push
cmp
mov
les
lods
dec
bswap
mov
inc
call
or
sbb
ret
or
pop
xchg
mov
cmp
and
push
aad
cmp
gs
clc
push
cli
mov
push
aam
push
xor
sysexit
mov
dec
mov
fstl
sub
mov
xor
dec
loopne
cmpsl
push
mov
inc
xlat
rclb
sub
hlt
imul
add
lcall
cmp
adc
add
sub
lcall
popa
lret
inc
dec
push
pop
and
push
sub
leave
repnz
xchg
jo
pop
fadds
adc
xlat
fsubs
into
xor
mov
pop
adc
adc
loope
pop
push
adc
sarb
dec
lods
bound
pop
lods
mov
adc
fidivs
sbb
dec
iret
lock
cs
idivl
icebp
xchg
push
scas
enter
sbb
icebp
cmp
mov
lock
insl
xchg
aaa
shl
inc
rcrl
je
add
cli
xor
stos
out
inc
and
test
or
mov
ss
mov
xchg
movsl
mov
mov
loope
out
mov
and
stc
je
and
or
fisttpl
out
pop
jge
push
or
mov
push
loop
jb
shrb
ss
mov
pop
fisttps
loop
movsl
mov
imul
pop
adc
jne
call
aad
aas
and
pop
cli
test
pop
sub
push
mov
in
pushf
and
push
or
xchg
out
dec
pop
jb
aad
sub
mov
pop
adc
cmp
or
sarb
xchg
mov
add
lahf
cmc
aas
mov
aaa
gs
stos
sub
inc
test
sahf
out
fidivs
loop
pop
ret
xchg
mulb
icebp
out
je
data16
stos
pop
jbe
je
sbb
in
push
push
push
loope
mov
lcall
fstpt
push
scas
xchg
lea
mov
es
dec
imul
mov
popf
data16
out
and
mov
mov
ljmp
movsl
add
jl
xchg
inc
sbb
dec
rorl
xchg
add
jmp
adc
loop
test
dec
push
sarb
xor
add
mov
jp
mov
cmp
stc
dec
daa
aad
addr16
mov
leave
mov
add
xor
pop
movsl
sarl
sub
sbb
jne
pop
or
pop
int3
sahf
dec
pushf
rorl
insl
repnz
sub
jge
les
pop
jo
test
std
jbe
jp
jmp
pop
pop
out
fnstsw
outsb
cmp
iret
inc
arpl
dec
psubq
in
cmc
ds
gs
icebp
push
inc
inc
adc
fistps
jnp
movsb
loopne
push
and
mov
mov
inc
add
or
nop
cmp
or
mov
xchg
stc
sar
testl
mov
in
sarl
cmp
ljmp
movsb
dec
jae
and
add
leave
xorb
divl
mov
movsb
jne
loopne
stos
in
mov
in
xor
pop
fsubrl
inc
fistpl
pop
movsb
outsl
inc
popf
idivl
sub
fs
imul
cmpsl
push
pop
fistpl
push
call
adc
pop
mov
into
push
mov
sub
adc
arpl
stos
jb
daa
call
neg
cld
aam
fsubrp
push
sub
aam
xchg
push
nop
shll
mov
es
jo
fcomps
cltd
mov
xchg
jae
cli
out
cmp
and
push
mov
cwtl
add
cmpsb
in
icebp
or
popf
push
out
pusha
into
imul
inc
mov
ljmp
icebp
push
cmp
push
push
fwait
sub
repz
in
cld
mov
sti
sbb
jae
mov
pop
lock
and
mov
into
cmp
add
lahf
sbb
push
or
out
pop
cmp
sahf
jb
outsb
test
add
out
std
subl
adc
lahf
sbb
sti
test
bound
xchg
push
mov
enter
movsb
mov
jmp
into
inc
lds
cmp
repnz
push
mov
push
add
int3
sti
mov
sahf
decl
mov
mov
call
xor
lret
adc
dec
daa
sub
pop
or
xchg
outsl
add
adc
push
sub
inc
mov
xor
loope
jecxz
leave
lods
movsb
xor
sbb
or
lods
scas
mov
push
xchg
stos
fisttpl
stos
push
repz
mov
fdivrl
aas
loope
sub
stos
in
aam
ret
inc
in
subb
fdivrs
xchg
negb
shl
aad
mov
ds
xchg
xchg
subps
jb
push
xor
jae
add
sbb
pop
cmp
popa
testb
cmp
test
xchg
cmp
xor
sbb
jle
aam
xor
into
arpl
stos
push
testb
mov
xchg
fcoml
lods
xlat
sub
and
dec
daa
clc
stos
cs
sub
mov
add
sub
sbb
popa
call
jo
cmp
cmpsb
cmp
sub
mov
cmp
cld
adc
sub
xchg
push
loopne
insb
popf
neg
into
ret
and
inc
or
insl
xchg
rorl
pusha
fsubrs
mov
jge,pt
or
movsb
sub
stc
js
shr
ljmp
add
test
mov
cmp
pop
jb
mov
mulb
mov
mov
daa
ret
fisubrs
jmp
imul
loope
in
pushf
add
cmp
es
xor
out
in
gs
push
mov
cmpsl
or
shlb
sahf
dec
sbb
lcall
or
dec
call
pop
inc
repz
fs
lgs
in
pushfw
js
sbb
push
test
xchg
xor
sbb
lcall
rorb
adc
jne
idivl
pop
lods
mov
out
mov
or
and
adc
xchg
mov
or
addr16
cli
dec
and
xchg
int
sub
sahf
lret
add
jb
xchg
xor
push
ss
pop
cmp
cmpsb
lods
and
xor
ja
out
movsl
fldenv
inc
icebp
fisubrs
outsl
xlat
and
jg
mov
cmp
outsl
lea
in
cmp
imul
outsb
loopne
dec
xor
mov
push
stos
mov
fistpl
pop
push
dec
inc
lea
xchg
mov
rcrb
test
lret
jbe
movsl
adc
insl
das
push
or
test
push
mov
in
mov
push
pop
or
ja
fadds
loop
jle
aas
add
mov
mov
inc
adc
repnz
insb
cmp
xor
or
aas
add
sti
push
je
pop
pop
pcmpgtw
and
out
xor
push
cmp
xchg
inc
sbb
ljmp
daa
mov
sahf
mov
fcompl
out
xchg
out
jl
jne
mov
popf
adc
dec
inc
insl
sahf
rcrb
dec
jg
push
or
mov
adc
inc
xor
fistpll
bound
leave
add
pop
rorl
shl
enter
int3
xchg
mov
fistps
jbe
xchg
mov
inc
outsl
push
in
cwtl
or
sbb
inc
pop
pop
lods
or
sti
in
rcrb
cltd
sbb
int
movsb
mov
stc
and
ss
jo
mov
data16
pop
push
push
fs
sub
sub
jbe
lcall
fsubs
jns
pop
dec
js
inc
aaa
cmp
cltd
xchg
xchg
sbb
mov
jno
add
lock
gs
lahf
pushf
mov
mov
js
mov
in
xor
xor
je
arpl
xchg
sub
cld
ret
xor
adc
cmpsl
popa
inc
cltd
add
dec
cs
cmpb
or
push
ss
std
sub
xchg
sbb
add
mov
xchg
ficompl
insb
xor
dec
ret
jle
push
fs
icebp
sbb
bound
inc
scas
lock
jae
xchg
sahf
into
movsl
xor
es
shlb
mov
push
jp
add
add
push
leave
pop
sbb
jmp
es
inc
data16
lret
ret
pop
cmc
and
and
aas
xchg
sbb
cltd
mov
frstor
shll
jg
aas
imul
dec
lea
pusha
sbb
inc
mov
jne
out
sub
xor
or
into
xor
xor
mov
into
mov
insb
xor
inc
push
pop
cmp
adc
xor
aad
pusha
add
mov
fildl
jae
mov
add
movsb
nop
push
movsb
add
std
cmpsb
adc
xchg
dec
and
imul
movsb
push
lahf
aas
pop
mov
mov
rorl
inc
add
mul
repnz
cs
and
loope
or
mov
shl
mov
and
xor
stos
sub
cli
out
loope
pop
mov
inc
add
cmpsb
xchg
lret
or
and
test
out
pop
mov
and
movsb
cmp
shrb
mov
adc
adc
cmpsb
aaa
insl
mov
add
insb
notl
inc
sub
lea
xchg
dec
push
lods
lret
sbbl
pop
push
stc
dec
cld
pop
fistpll
sti
add
xor
pop
sub
or
xor
jmp
cmpsl
out
push
je
inc
lds
mov
jle
aam
jecxz
es
lret
jl
jmp
mov
or
into
push
push
mov
sahf
jns
insl
nop
fistl
inc
mov
gs
ret
insb
xchg
shll
or
lods
insb
jp
shrb
jl
cmpsb
fs
and
rcrl
bound
mov
xor
push
pop
jno
jae
xchg
jno
pop
insl
arpl
pop
xchg
push
lds
xor
xchg
mov
bound
mov
push
insl
cmp
or
xchg
lods
cli
adc
inc
lock
cmp
xor
dec
dec
or
xchg
push
sub
sbb
push
xchg
jne
add
fildll
test
dec
mov
hlt
mov
xchg
shll
out
cmp
push
push
sbb
lahf
push
push
pop
pop
jg
cmpsb
xor
xchg
xor
fld
sahf
mov
sbb
je
pop
xor
xchg
aaa
in
cmp
xchg
add
lahf
mov
out
pop
pusha
bound
ja
adc
cmpsl
adc
sbb
rcrl
xor
inc
insl
pop
fwait
in
ss
mov
xor
leave
dec
mov
and
popa
pop
adc
dec
loopne
add
sbb
rcll
xchg
scas
aam
int
fcomip
cmc
pop
loop
push
aas
pop
cmp
sub
lea
sub
pop
jo
pop
push
lods
ds
inc
adc
dec
jb
js
xor
daa
fmull
lea
jbe
mov
add
lods
test
mov
movsb
les
les
clc
or
inc
inc
inc
push
or
inc
mov
out
pop
int3
or
jno
pop
cli
aaa
movsl
mov
filds
add
hlt
jno
stos
call
xchg
xorl
pop
testl
inc
mov
sub
mov
sbbl
xlat
mov
pop
sub
insb
fprem1
cs
icebp
cmp
out
mov
mov
pop
mov
dec
push
mov
cmp
cmp
xchg
fwait
sbb
stc
xor
adc
push
jmp
fistl
test
mov
xchg
dec
das
push
pusha
cltd
mov
rol
aas
hlt
je
pusha
jecxz
cmp
pop
cmp
jae
insl
roll
shl
pop
xor
inc
mov
shlb
mov
push
cmp
fisubl
cli
xchg
push
movsb
icebp
xor
push
jnp
sub
adc
add
cli
adc
data16
fwait
adc
xor
push
xchg
sub
loopne
outsl
test
in
les
fsubrs
cmp
les
add
lea
jecxz
testb
cmc
call
add
jl
std
into
call
dec
lahf
mov
popa
inc
in
in
aas
in
in
mulb
int
in
push
add
stos
pop
xchg
sub
outsb
scas
ds
pop
in
xchg
fnstsw
imul
xchg
test
or
shrb
es
jmp
sbb
cltd
jae
jle
jmp
adc
pop
sbb
cmp
aaa
push
aam
ja
in
adc
pop
sub
lds
push
addr16
add
jns
mov
insl
shlb
icebp
or
pop
push
cmp
in
lea
hlt
jbe
pop
data16
add
xchg
mov
mov
xchg
xchg
mov
out
idiv
rcl
movsl
mov
xlat
or
jne
adc
xorl
std
pop
or
popa
imul
push
scas
orl
jl
cwtl
cmpsb
out
roll
fists
loop
sbb
and
push
iret
xor
mov
cmp
inc
xchg
int
or
lock
or
inc
loope
mov
push
out
mov
sbb
mov
outsb
hlt
mov
jge
fwait
dec
mov
ljmp
into
pop
cmp
push
dec
int
and
or
or
xchg
cmp
rcrl
add
sahf
cmp
cmp
pop
repnz
pusha
int
cwtl
push
jmp
jp
fisttpll
mov
idivb
fisubs
inc
paddsb
js
and
iret
movl
sub
pop
in
ret
jbe
cmpsl
pop
xchg
push
repnz
pop
js
popf
fnstcw
int
sbb
sub
push
or
mov
or
in
add
jge
repnz
pop
xor
gs
mov
cmpb
inc
es
pop
xchg
fcmove
adc
xchg
mov
rcll
xchg
shll
and
jg
mov
cltd
mov
sbb
xor
addl
cs
and
and
cltd
outsl
mov
xor
out
xor
into
popf
movsb
push
cld
xor
loop
js
and
shll
lods
jns
icebp
ficoms
cld
inc
lret
cmc
clc
jo
into
jns
fs
mov
loop
xchg
sub
cmpb
out
lahf
push
xchg
mov
push
insb
push
clc
xchg
mov
es
ror
in
aam
jne
jg
add
xor
dec
sbb
fwait
dec
addr16
mov
test
clc
jne
ret
insb
cli
push
xor
or
testl
sar
push
push
inc
lcall
jecxz
bnd
insl
stos
sbb
pop
xor
xchg
test
sub
sbb
gs
mov
add
das
mov
icebp
gs
add
push
faddl
xlat
lods
ss
fistl
jnp
inc
jae
mov
imul
pop
pop
loop
inc
out
or
test
orl
dec
hlt
xchg
je
loope
mov
push
push
add
popa
das
es
jecxz
test
lret
jl
mov
icebp
in
mov
and
mov
lods
out
jb
fists
mov
push
sti
gs
add
leave
int
fidivrs
sti
scas
fcomps
enter
test
push
sarl
mov
or
cld
mov
icebp
sti
xor
aad
sahf
xor
mov
sbb
or
orb
mov
nop
xchg
pop
lock
jg
xchg
and
andl
cmpsb
aaa
xor
test
xor
add
call
pop
xchg
pop
jecxz
cli
and
mov
mov
movl
in
fstpl
add
scas
cli
push
imul
add
insl
idivb
insb
sbb
inc
sbb
insb
and
dec
mov
mov
mov
fs
leave
pop
stc
jecxz
clc
cld
je
mov
jns
lret
int
ja
mov
push
dec
sub
shl
xor
hlt
hlt
sahf
subb
sub
push
in
das
add
adc
pxor
repz
sub
mov
addr16
push
repnz
ljmp
mov
pop
add
xor
pop
lret
jbe
mov
in
push
jp
fwait
inc
mov
jbe
cli
aaa
inc
sbb
mov
inc
frstor
pmulhw
push
call
stc
std
cmp
mov
mov
and
and
inc
inc
outsl
push
rcl
fidivrs
push
dec
cltd
pop
sbb
mov
es
dec
push
sbb
push
aaa
xor
idivb
fldt
shr
stc
add
insl
shrb
es
cmp
and
mov
cmp
clc
aas
pop
mov
sbb
xchg
fs
inc
pop
push
jle
pop
stos
add
aaa
bound
xchg
gs
cmp
mov
lahf
imulb
in
pop
xchg
cmpsl
movsb
fwait
rcrb
xchg
shll
or
addr16
andb
inc
sarw
lods
jp
adc
shrl
xchg
dec
adc
ss
pushf
sti
in
mov
std
mov
ret
pop
mov
adc
cmpsl
pusha
js
jo
mov
sub
jg
jmp
ret
sbb
mov
add
pushf
mov
xchg
lods
stc
cmpsl
xsavec
jp
push
mov
add
and
cld
push
les
in
jns
and
pop
ds
dec
fwait
pushf
jp
div
ljmp
adc
es
mov
xchg
js
and
inc
out
jb
fsqrt
scas
or
push
xchg
hlt
sbb
push
dec
sub
negb
adc
stc
repz
mov
cmp
aam
push
int3
cmc
or
mov
rol
sbbb
push
ss
addb
jle
sbb
div
repnz
addr16
es
shl
or
pop
cs
cld
or
bound
pop
ja
jnp
inc
bound
push
pop
push
mov
sub
daa
sub
stos
pushf
je
lods
imul
out
add
icebp
stos
pop
push
jmp
imull
outsb
addl
jae
hlt
xor
aaa
or
int
and
imul
daa
clc
mov
dec
pop
xchg
les
cmp
pop
mov
cmp
xchg
lods
std
adc
jno
les
fisubrs
mov
and
rcll
pop
add
lock
mov
data16
cmp
outsl
push
jl
enter
shl
or
inc
dec
xchg
xbegin
mov
mov
adc
sbb
mov
subl
mov
jne
aas
in
mov
mov
popf
shll
xor
dec
jle
jb
dec
or
sarl
push
or
sbb
push
push
dec
pop
shll
iret
pushf
mov
mov
dec
insl
pushf
cmp
mov
mov
inc
add
icebp
xor
imul
mov
lock
in
mov
loopne
add
pop
push
mov
cld
adc
add
add
cmp
es
outsl
repz
inc
xor
push
jl
xchg
loop
loopne
imull
lods
cmp
xor
adc
sub
xchg
inc
popa
loope
sbb
lods
insb
and
fidivrl
push
shll
inc
mov
popa
mov
and
cmpsb
cmc
jle
push
jbe
fmul
cmp
dec
xor
mov
push
xor
mov
and
loope
bound
mov
pop
lea
mov
loopne
pop
cmp
ror
punpckldq
cld
in
jg
rcr
dec
jmp
pop
ficoml
push
sbb
bound
adc
in
mov
std
sbb
mov
or
mov
mov
xor
xor
leave
das
add
or
push
jmp
ficompl
ss
lret
ds
int3
xchg
xlat
mov
or
pop
dec
bound
fcmovbe
loopne
scas
cld
pop
test
inc
icebp
adc
sub
loopne
xor
pusha
mov
mov
pop
jmp
shrl
mov
addl
push
imul
aaa
test
loop
imul
mov
mov
xor
fwait
int3
dec
jge
sub
jge
lds
cmp
pop
fsubrs
sub
insb
gs
and
mov
dec
fmull
or
std
insl
xchg
and
mov
and
ret
adc
push
in
cmpl
jo
mov
pusha
mov
aad
repnz
mov
cmp
int3
subb
shrl
addl
dec
sub
push
sbb
push
jl
bound
pop
mov
or
jmp
mov
xor
in
xor
push
les
mov
xchg
test
mov
rcll
jmp
pop
mov
leave
int
hlt
pusha
out
jp
push
xchg
scas
or
int3
pop
push
loopne
sbb
inc
bound
cmp
xchg
adc
in
fs
cmp
fbstp
call
fcompl
cmpsb
push
jge
das
adc
jl
shr
lock
mov
sbb
mov
push
sub
and
jne
and
mov
in
repz
xor
mov
cli
mov
movsl
aas
and
lods
cmpl
mov
jecxz
sbb
push
lea
mov
repz
fcoml
xchg
and
or
jne
or
mov
push
mov
mov
js
push
mov
or
stc
cmp
lds
movsl
imul
call
lahf
mov
fildll
pop
test
jg
mov
loopne
mov
ja
cmc
int
and
mov
xor
lods
xchg
dec
and
ret
rcrb
dec
sbb
push
out
inc
in
mov
push
cmpsl
movb
sbb
mov
xchg
lret
mov
enter
pop
or
popf
or
or
cmp
outsb
rol
ret
cld
rcrl
loope
push
test
outsb
dec
in
lret
xor
in
pop
xchg
jbe
push
cli
enter
in
notl
cmp
inc
cmp
lcall
test
mov
fwait
jg
add
inc
stos
lcall
sub
sbb
jae
aad
cmpsb
dec
mov
imul
cld
pop
push
scas
loope
push
dec
lea
pop
mov
fists
lret
outsl
jp
mov
repz
mov
shl
mov
push
imul
ljmp
push
adcl
rcr
rol
scas
push
or
out
add
rcll
fwait
movsb
in
and
pop
sbb
xchg
mov
add
cmp
test
frstor
frstor
or
mov
jl
lods
inc
pop
into
lock
fbstp
outsb
leave
xchg
shr
xchg
scas
clc
test
std
inc
mov
and
inc
loopne
ja
pop
clc
or
lea
inc
test
pusha
dec
icebp
xchg
mov
stos
dec
cmp
pop
xchg
std
imul
cltd
add
out
call
mov
clc
rolb
test
popf
pop
jg
push
fs
sub
lret
outsb
push
jp
push
mov
sbb
pusha
out
xor
adc
popa
xorb
shll
dec
cmpsb
xchg
add
cmpsl
fsub
into
jmp
xor
scas
jno
lret
mov
cmp
out
cmpsb
adc
mov
into
or
jne
push
xor
adc
pop
mov
add
outsl
fidivl
jmp
dec
mov
mov
push
in
dec
cs
sbb
ljmp
jmp
aaa
sti
sbb
leave
mov
cmp
add
stos
pop
fsts
push
aaa
nop
test
mov
inc
movsl
clc
das
mov
add
push
and
sub
sbb
mov
cmp
pop
bound
mov
sbb
jno
pop
or
nop
sbb
test
xchg
sbb
cmp
and
scas
pusha
pop
inc
mov
jnp
xor
insb
imul
maskmovq
or
les
es
jae
lock
pop
lods
rcl
pop
fs
sti
cmp
and
xchg
jo
add
pop
mov
add
sbb
fwait
icebp
hlt
mov
pop
shll
scas
in
and
rol
pop
in
decb
push
subl
aaa
jmp
hlt
inc
lods
sbb
jo
lret
add
sub
jmp
push
sbbb
jmp
mov
imul
inc
push
mov
cltd
xorb
test
rcl
adc
xor
cmp
inc
pushf
shl
in
adc
aad
and
jmp
gs
in
pop
xlat
add
jg
data16
fldenv
jo
test
icebp
pop
int
nop
or
movsl
jb
push
test
xor
inc
pushw
into
sbb
scas
jbe
pop
mov
out
add
jmp
push
outsl
jmp
mov
mov
cmpb
stc
int
or
rol
push
cmp
xlat
cmp
dec
int
and
mov
fsubrs
mov
and
jo
das
sub
pop
sbb
jnp
push
sbb
push
fisubrl
shlb
mov
lret
out
jge
mov
test
ret
or
push
mov
bound
outsb
sub
mov
lea
ror
inc
rorb
xor
jp
data16
xor
push
xchg
pop
mov
fldt
pushf
xchg
or
in
jo
mov
push
stos
jl
mov
push
add
sub
bound
push
scas
repz
rorl
ss
push
push
push
ja
lret
pusha
fcom
shll
mov
push
lea
sub
cld
xchg
shl
or
mov
mov
shlb
jno
mov
jp
jmp
cmp
pushf
imul
sahf
sbb
push
mov
mov
push
xorb
mov
aas
add
xchg
in
nop
jecxz
jge
xor
js
jecxz
or
adc
xchg
idiv
int
loop
and
ja
in
dec
sub
out
popa
or
test
je
sti
ja
fdivr
cwtl
imul
in
inc
inc
out
mov
jge
adc
fisubrl
es
movsb
and
and
fisttps
pop
and
inc
ficoms
xchg
push
adc
cmp
sub
shl
adc
mov
enter
popf
iret
arpl
outsl
test
cld
cwtl
sub
mov
mov
jne
mov
mov
mov
sub
daa
outsb
outsb
insl
std
fdivs
pminub
xchg
mul
add
ss
add
cld
mov
repz
jb
pop
in
and
mov
aaa
mov
xchg
xchg
mov
aaa
pop
cmp
sub
std
inc
pop
shll
sti
scas
das
addr16
mov
mov
push
mov
loopne
das
sti
adc
mov
popf
orl
add
xchg
and
stos
popf
inc
xchg
jmp
sahf
leave
and
hlt
pop
push
or
mov
out
ret
xchg
adcl
test
push
xor
mov
out
in
sub
sub
or
mov
cmp
sbb
sbb
cmp
out
lds
dec
adc
cmc
jl
cmp
aaa
cwtl
loopne
lock
dec
enter
push
ja
push
sti
add
mov
mov
clc
lcall
es
inc
rcrb
cwtl
inc
mov
and
out
out
pop
xor
add
js
subb
sahf
mov
xchg
push
into
and
rcr
insl
out
jnp
dec
cld
push
iret
pop
dec
imul
xor
sbb
loopne
loopne
aaa
xorl
dec
cltd
pushf
pushf
lcall
sub
test
push
jecxz
dec
pop
imul
fmull
lea
iret
ljmp
inc
out
sub
xchg
cmc
add
jnp
imul
inc
and
sbb
lock
call
es
dec
lods
into
mov
jp
mov
inc
shl
cwtl
inc
xchg
jge
and
xor
jmp
fnstcw
imul
out
cmpsl
or
push
jg
and
repnz
leave
sarb
mov
lcall
xchg
push
jo
outsb
ja
lret
test
cs
jb
fmull
mov
sarl
push
insb
push
stos
push
and
gs
lahf
cmp
mov
sbb
in
shrb
mov
outsl
cmp
cmp
pop
jo
adc
adc
sub
cmp
dec
and
dec
es
enter
fxch
cmp
push
outsb
scas
repz
and
jl
push
ret
test
push
mov
insl
adc
popf
in
sub
inc
pop
cltd
sbb
dec
push
in
pop
push
insl
xchg
movsl
sarl
cmc
icebp
sbb
ja
jno
jle
xchg
test
jecxz
test
cltd
scas
mov
jns
pop
addb
mov
in
imul
jno
pop
inc
push
rorl
jl
mov
in
rcll
cltd
jg
clc
daa
lods
push
and
jmp
sahf
dec
negb
mov
cmpsb
cmc
neg
add
mov
stos
int
loopne
xchg
mov
inc
xchg
les
inc
pop
dec
xchg
adc
faddl
dec
and
xor
mov
lret
sahf
outsl
jne
xor
cmc
adc
mov
data16
xchg
jmp
jecxz
dec
xlat
out
sub
push
adc
sbb
mov
xor
int3
mov
add
jg
mov
rcrb
adc
mov
cli
mov
pushf
adc
mov
push
sub
sbb
cmpsl
mov
mov
das
jnp
xchg
out
lahf
add
int3
lret
outsl
adc
jge
push
jno
cmp
mov
mov
mov
mov
outsl
adc
push
push
sti
popf
mov
xchg
enter
sbb
jle
arpl
fcoms
test
gs
ret
jbe
inc
jmp
inc
fcmovnu
mull
pop
lret
pusha
cmp
js
in
rcrb
imul
sbb
dec
sbb
sbb
mov
jnp
sahf
out
insl
xchg
scas
movsl
adc
add
rcll
cmp
jmp
push
orb
ja
daa
fld
lea
xchg
mov
inc
inc
je
or
iret
push
inc
sbb
push
clc
insl
es
mov
mov
dec
mov
mov
stos
pop
pop
add
mov
fs
popf
inc
dec
out
ret
mov
call
je
mov
dec
inc
loopne
cmp
loopne
xor
jo
fnstenv
mov
mov
cmpsl
shll
je
and
push
xchg
mov
mov
add
jmp
dec
test
call
out
lahf
outsl
daa
xor
push
push
fsubs
out
sub
pop
bound
das
popa
push
inc
ret
lock
mov
test
nop
sub
pop
hlt
inc
test
in
push
daa
js
mov
cmc
mov
in
jo
movsb
push
and
cmpb
or
icebp
nop
cmp
outsb
out
test
int3
shrb
pop
mov
in
cld
sti
mov
pop
adc
cmp
adc
inc
or
mov
bound
mov
pop
mov
gs
outsb
loope
lret
test
add
lods
xchg
jecxz
subb
xor
dec
fstpt
cmp
sahf
inc
push
test
lods
and
arpl
dec
adc
push
pop
mov
pop
push
pop
mov
shl
xor
fs
imul
fcompp
inc
sbb
push
jmp
dec
scas
lahf
push
in
outsl
adc
cmp
pop
adc
je
cmp
icebp
xchg
scas
mov
imul
popl
mov
dec
xor
pop
fs
push
pushf
jecxz
cmp
push
test
xlat
test
mov
loopne
out
mov
sub
mov
push
adc
dec
gs
sti
pop
or
add
mov
sub
insl
ficoms
inc
mov
sub
popa
pop
aas
mov
push
mov
movsl
adc
cltd
loopne
adc
sub
subb
test
test
xor
inc
dec
ljmp
sahf
mov
js
test
lret
push
mov
adc
leave
pop
sub
rol
ret
push
and
xchg
outsl
cmpl
scas
stos
xchg
mov
int
pusha
mov
fs
and
cmpsb
cltd
jmp
xor
jnp
call
add
sub
jne
jl
mov
xchg
lea
or
je
jle
stc
movsb
nop
mov
in
mov
outsb
mov
insb
jb
in
mov
add
fwait
shl
ror
in
cmp
out
jnp
mov
loop
xchg
mov
test
adc
aas
movb
cs
pop
fs
xchg
jge
lahf
mov
mov
shr
pop
dec
inc
mov
cmpsl
sbb
pop
rcrl
lahf
and
cli
outsl
mov
ss
pop
fsubl
inc
out
push
js
or
push
sub
cmp
repnz
inc
cmpb
or
leave
cmp
adc
pop
fnstenv
clc
int3
cmc
dec
sub
lcall
lods
mov
jbe
adc
jbe
xchg
addl
adc
popa
jge
jbe
xchg
or
ja
fisubs
and
lods
lods
iret
sbb
push
push
or
and
das
inc
cmp
push
xor
movsl
fcmovb
insl
in
xor
in
scas
adc
xor
leave
xchg
sub
mov
xor
ret
rclb
xor
jmp
cltd
hlt
xchg
pop
sbb
popf
xchg
fxch
sti
in
xor
xor
imul
mov
lahf
adc
push
xchg
rcrb
sub
mov
mov
xchg
in
fcomip
lds
lcall
mov
test
jbe
jge
add
add
insb
sub
and
cs
repz
lds
xor
add
mov
lock
aad
in
jmp
pop
shrl
push
je
pop
mov
jae
leave
adc
syscall
or
xchg
mov
push
jbe
sahf
data16
mov
dec
les
ds
fnstsw
and
push
pop
test
mov
sub
sub
shrl
sbb
ror
jge
je
mov
cmp
sub
cli
cmp
mov
in
cmpsb
rolb
ret
lcall
std
dec
or
dec
or
fs
jl
and
scas
add
mov
lcall
mov
cld
sbb
test
jnp
adc
scas
adc
mov
jp
push
shl
sbb
out
jae
fnstenv
mov
aam
pop
pop
lret
push
cmpsb
test
xchg
dec
sti
jge
xchg
and
mov
push
jecxz
and
testl
imul
add
sbb
or
adc
lock
mov
rol
xor
xchg
outsl
sti
sub
scas
aas
xor
repz
out
or
filds
push
repz
mov
sub
js
fs
jmp
sbb
cltd
mov
inc
daa
xchg
aam
addr16
leave
loopne
xchg
outsl
mov
adc
aas
inc
imul
cmpsb
mov
lea
std
loop
movsl
das
adc
loopne
jae
push
int
push
mov
dec
nop
jb
mov
sbb
aad
sar
fistpll
outsl
and
or
add
push
aas
mov
je
fsubrs
jg
jnp
iret
gs
pop
inc
popf
cld
push
and
cmp
xor
inc
enter
adc
aaa
lds
or
lahf
pop
in
jb
jecxz
inc
pop
notl
inc
and
data16
cmpsb
xor
mov
shlb
imul
dec
pop
sbb
mov
inc
int
mov
decb
nop
push
bound
aas
pop
sub
cmp
lods
lcall
pop
push
stos
jns
jno
inc
cmp
push
jge
lahf
xorb
stos
push
cmp
test
inc
mov
jo
inc
pop
jl
ds
mov
out
jns
test
shlb
mov
scas
inc
popf
inc
scas
inc
sub
in
mov
in
stos
lds
adc
mov
jb
pop
movl
cmpsb
jno
lods
mov
pop
orl
push
inc
pop
sub
or
mov
jnp
pop
inc
lds
jns
jbe
popf
add
jmp
pop
jmp
std
inc
stc
bound
mov
cs
cmp
addr16
loop
push
jae
das
movl
aas
jmp
push
repz
dec
sbbl
cmp
push
das
enter
inc
push
sar
mov
cmpsb
jbe
sub
push
gs
lahf
cmp
or
push
imul
adc
loopne
xchg
clc
ss
push
subb
sbb
push
jb
popa
xor
ret
cltd
mov
and
cs
daa
fisttpl
push
sahf
repz
loope
mov
loop
fsubl
xlat
int3
aaa
shrb
add
jmp
fs
push
stc
pop
push
sbb
stos
dec
inc
and
lock
xor
push
xchg
lods
andl
push
int3
repnz
cld
imul
pop
lret
loopne
sbb
gs
adc
mov
jmp
sahf
xor
mov
pop
rcrl
sub
lods
mov
jns
mov
fadd
sbb
sub
add
fisubrl
js
mov
inc
lahf
jg
test
or
sub
cmp
pushf
mov
xlat
stc
sub
jg
pop
sbb
in
lods
cwtl
xor
push
imul
nop
scas
push
stos
and
clc
in
and
aas
test
lcall
sahf
testb
fcmove
push
addb
xor
mov
lret
loop
pop
call
inc
loopne
pop
out
std
jno
mov
mov
dec
sahf
scas
out
or
and
and
das
push
push
les
add
jnp
fdivr
inc
pop
ja
in
mov
add
inc
or
aas
movsl
std
sub
divb
or
dec
stc
and
mov
in
sub
jo
mov
inc
pop
mov
pop
rolb
subb
fadd
ljmp
cs
mov
sub
rcl
xor
xchg
push
pop
jnp
outsl
jle
jg
sbb
mov
push
sbb
ret
pop
xchg
jbe
test
and
clc
andb
sub
ret
ja
adc
notb
sahf
jnp
and
loope
push
shll
lods
inc
mov
stos
inc
xchg
movsl
push
inc
mov
pop
sbb
nop
out
mov
loope
imul
jbe
pop
sbb
ret
pop
test
lods
push
and
movsb
imulb
push
int
add
repnz
sbb
cmp
dec
mov
pop
test
sub
mov
pop
jl
add
add
fadds
mov
mov
mov
pusha
jno
jl
lcall
shll
inc
dec
jp
test
and
fists
mov
mov
pop
mov
mov
xchg
gs
dec
mov
lcall
jle
repnz
nop
mov
mov
cmp
ljmp
push
mov
push
dec
sub
lock
test
aas
imul
sbb
xchg
mov
ja
shll
in
loope
aas
cmp
push
shlb
or
jmp
data16
cmp
fstpt
adc
adc
mov
sbb
add
xchg
sar
ds
xchg
and
push
test
lods
test
scas
and
xorb
add
inc
adc
in
frstor
cmp
ret
inc
push
stos
push
push
jae
sub
mov
fiaddl
fldl
fwait
mov
leave
cmp
mov
pop
cmc
jae
dec
jg
mov
je
test
fwait
pop
aam
pop
das
ljmp
jg
in
xor
stos
js
and
jge
inc
es
cltd
mov
push
ja
dec
mov
cmpl
xchg
sub
xchg
idivl
adc
fnsave
and
mov
inc
xchg
je
inc
pusha
xchg
aam
mov
je
add
loope
and
inc
aas
repnz
clc
bound
mov
mov
insb
stc
pop
jge
outsl
xorl
mov
pop
adc
imul
or
add
push
push
sti
lahf
lea
cmp
push
shlb
cmp
adc
xchg
xchg
inc
loopne
ja
aaa
fsts
xor
popa
adc
jecxz
nop
loop
xchg
or
mov
mov
in
aas
out
in
dec
fcoml
pusha
push
push
sbb
and
hlt
daa
aad
hlt
sbb
sub
arpl
nop
inc
push
mov
sahf
inc
push
ja
cmpsb
arpl
mov
stos
loope
xor
orl
xor
mov
arpl
cmp
and
rorl
xor
xchg
imull
outsl
pop
dec
call
cmp
jo,pn
imul
gs
outsl
jmp
pushf
mov
cmp
cmp
sbb
loop
hlt
stos
testl
std
lcall
fst
xor
imul
push
cltd
test
lock
pop
mov
mov
out
popa
and
jg
mov
aad
and
mov
mov
cld
adc
xchg
mov
and
cmp
hlt
push
xor
ret
gs
stos
or
and
inc
jno
lds
imul
into
imul
mov
loop
jle
mov
ret
inc
int
into
dec
repz
xorb
inc
xor
mov
movsl
loope
aaa
xchg
jno
xchg
pop
ret
inc
push
pop
addl
dec
addr16
sbb
lcall
mov
pop
sbb
aas
fistps
mov
lds
adc
aas
lahf
sbb
xchg
stc
int
xor
aas
out
adc
jle
dec
lock
sbb
fsubrl
and
stos
out
sub
and
or
or
faddl
cmp
jmp
int3
lret
outsl
aad
dec
mov
mov
nop
sbb
and
pop
loop,pt
cli
jnp
cmp
ss
shll
mov
inc
div
jb
cmpsb
loope
mov
xchg
pusha
shl
and
repz
ret
cltd
fldenv
push
call
dec
aad
out
lcall
test
mov
icebp
cs
cmc
dec
sub
test
mov
pop
dec
nop
popa
nop
dec
xchg
into
dec
mov
push
cld
in
rclb
movsl
lret
les
cli
nop
add
mov
dec
xchg
sub
add
lods
flds
and
pop
outsb
dec
cmp
or
movl
test
xchg
imul
pushf
inc
pop
adc
into
sahf
sub
out
dec
sub
fwait
jecxz
sub
mov
movsl
scas
mov
dec
mov
or
xor
xchg
add
dec
sub
mov
rcr
stc
bound
push
jp
xor
in
shlb
rep
imul
and
daa
movb
loop
sbb
dec
jnp
mov
das
jle
or
xor
ret
or
adc
loop
or
or
stos
sarl
movsb
add
mov
gs
decl
fs
shr
sbb
out
lret
cwtl
push
mov
shrb
daa
xor
int
lock
pop
sti
int
add
xor
pop
movl
cs
jb
mov
xlat
jne
xchg
imul
leave
addr16
test
cli
jp
mov
orl
shll
gs
jge
mov
mov
sti
inc
jnp
mov
in
cmc
int
cmp
mov
push
rorb
outsb
outsb
or
ljmp
push
dec
stos
jno
xchg
push
dec
mov
pop
or
test
scas
or
test
scas
cltd
push
lret
aam
pop
jl
sub
popa
fistpl
push
sub
xchg
rcrl
out
aam
je
mov
dec
xchg
jg
sahf
add
outsl
mov
and
adc
jnp
idiv
aas
sahf
and
pop
pushf
dec
jp
daa
into
cltd
sbb
lods
inc
cwtl
lcall
jns
subl
fidivl
xchg
push
mov
add
push
jns
xchg
in
and
stc
jnp
gs
and
push
imul
jp
fdiv
movsl
arpl
jge
scas
xor
sbb
sbb
out
jb
cmp
repz
sub
dec
add
movl
push
xor
rol
dec
jb
sbb
stos
adc
pop
pusha
push
imul
mov
inc
dec
mov
movsl
idivb
mov
xchg
aam
jecxz
and
or
dec
pop
dec
inc
xchg
or
and
mov
mov
jmp
repz
cmp
daa
adc
and
shr
sub
lahf
out
mov
cmpsl
jns
add
push
xor
in
ret
shl
inc
test
je
pushaw
xorb
imul
lahf
fstps
and
adc
mov
dec
sbb
mov
sbb
sub
mov
or
enter
aam
stc
out
push
mov
icebp
lods
fsubp
xor
adc
in
mov
outsb
pop
in
ret
ljmp
mov
cmp
mov
dec
mov
out
xor
out
cmp
push
mov
movsb
rcr
xor
xor
lea
push
ficompl
call
mov
lcall
lods
popf
loop
inc
pop
mov
mov
scas
mov
mov
jge
inc
jl
inc
movsl
cld
adc
or
push
adc
outsl
dec
loope
out
test
loope
add
cmpsb
cmovge
push
outsl
dec
inc
loope
pushf
movsl
fwait
testb
bound
stc
shlb
andb
pop
roll
mov
mov
push
in
iret
les
pop
sti
mov
push
jnp
adc
scas
lret
imul
loopne
xor
inc
scas
fmull
es
or
out
ja
sub
les
sub
out
addr16
mov
fcomi
add
pop
testl
iret
xor
jmp
les
pop
xor
out
mov
and
shll
jae
sub
fistl
mov
divl
icebp
insl
aaa
movsb
lahf
xor
les
cs
cld
cwtl
pop
shll
jmp
push
adc
movsb
push
inc
inc
enter
xchg
fwait
mov
cmpsb
xorl
fisubrl
stos
pop
xchg
fnstsw
push
dec
call
ret
mov
cmp
cmp
sub
mov
lea
outsb
bnd
sti
jp
leave
mov
call
dec
mov
outsl
test
inc
jle
stc
enter
inc
pop
jecxz
hlt
sub
stos
loopne
clc
mov
and
or
dec
jge
out
and
push
out
inc
fldt
xchg
sbb
aad
mov
jecxz
leave
orb
sub
sbb
cld
xchg
leave
ror
popa
aam
hlt
dec
mov
fidivrl
sbb
mov
adc
cmpb
push
nop
mov
loope
inc
mov
fucomp
adc
xor
mov
call
ret
jge
rcll
arpl
dec
mov
shl
dec
fistpll
dec
movsb
icebp
pushf
arpl
xchg
xchg
push
mov
sub
sbb
testb
jnp
sub
clc
mov
mov
sub
es
and
pop
stos
sub
loope
scas
mov
daa
push
dec
xor
xchg
outsl
out
and
xchg
fcoms
dec
mov
cltd
jno
in
xor
xchg
ljmp
adc
aaa
xchg
jge
xor
outsb
jno
scas
push
test
inc
lods
sbb
adc
push
cs
add
fwait
movsb
mov
add
push
pop
mov
mov
shrl
enter
out
mov
sahf
mov
mov
lcall
cmp
jbe
pop
data16
mov
mov
cmpsb
push
into
gs
pop
lret
adc
cmp
les
xchg
dec
cmpsl
rcll
xchg
mov
mov
dec
dec
stos
loopne
iret
and
jb
ret
std
adc
lret
dec
add
filds
ret
sbb
dec
shll
jno
int
mov
cs
xlat
jne
inc
lea
jecxz
fnstsw
add
jge
notb
sub
lcall
mov
and
jp
cmp
out
cmp
lcall
dec
aam
xlat
sub
dec
push
loopne
cmp
lds
push
loop
lret
sbb
cli
jecxz
in
sub
enter
adc
aam
mov
mov
int
push
sbb
lds
jg
test
arpl
dec
aas
adc
dec
lcall
faddl
xor
hlt
fsubrs
pop
sahf
rcr
int3
sbbl
test
add
sti
int
test
and
test
test
movsb
pop
ja
mov
fisttps
jo
lcall
rcll
xor
mov
cmp
scas
imul
xchg
hlt
push
adc
sub
cmp
aaa
or
xor
in
sbb
out
std
movsl
push
fistl
dec
cmp
aaa
mov
xchg
jae
push
into
sbb
push
mov
loope
add
loope
mov
shl
imul
mov
icebp
jo
push
testl
ds
or
pusha
mov
jae
and
mov
shll
cmp
or
rolb
iret
pop
test
shll
dec
int3
xchg
out
sub
jmp
popf
mov
lods
mov
imul
movsb
es
sbb
repnz
pop
cmp
jae
in
sbb
shl
lods
pop
mov
out
xor
xchg
fcmovnu
mov
xor
sbb
mov
dec
push
fstpl
push
sbb
das
mov
or
loop
pop
cmc
mov
dec
sbb
xchg
pusha
dec
sahf
imul
jne
lods
cmpsl
cmp
xor
mov
mov
xor
icebp
int3
inc
dec
mov
test
int
stos
cmp
mov
pop
cmpsl
aad
jne
xor
je
add
jp
mov
mov
or
dec
out
ficoml
mov
xor
sbb
adc
dec
pop
pusha
in
fst
jns
pushl
mov
es
andl
nop
or
dec
popa
or
fdivr
adc
sub
xor
imull
lcall
xor
fmull
or
inc
loop
pop
sbb
xchg
sbb
mov
out
imul
movsb
mov
mov
pop
dec
adc
std
jmp
xchg
aam
and
or
mov
push
sub
in
dec
jns
test
out
popa
lock
mov
loop
mov
ret
cmpl
xchg
out
fsts
std
out
push
pop
rcrb
mov
mov
or
xor
inc
outsb
pop
bound
mov
ret
jne
in
testb
xchg
call
cmpxchg
iret
or
ljmp
xor
std
jnp
stos
mov
imul
enter
xor
pop
jle,pt
bound
push
pop
mov
lods
pop
mov
imul
test
loop
xchg
ds
mov
mov
dec
outsb
mov
sbbl
je
repnz
jl
xor
push
mov
or
cwtl
or
adcl
test
int
xchg
in
ficompl
js
sbb
in
cld
subb
inc
add
push
lcall
popa
test
mov
shlb
sub
xor
mov
shll
cwtl
pop
les
jecxz
lret
int3
xor
pushf
push
dec
xchg
sbbl
jg
lods
sbb
incb
repnz
movl
xchg
mov
loop
insb
pop
xor
pop
dec
pop
inc
adc
clc
mov
xchg
mov
lds
loop
movsb
in
mov
sbb
ret
cmpsb
cmp
popf
rcll
xchg
or
adc
pop
loop
adc
arpl
cld
xchg
in
daa
sub
jno
mov
test
pop
jb
sbbb
mov
xchg
push
xor
mov
mov
stos
pop
mov
stc
test
push
pop
js
jg
arpl
pushf
aad
std
mov
popf
push
xchg
cmpsb
xchg
bound
clc
xlat
inc
sbbb
or
pop
mov
adc
mov
out
jnp
test
pushf
movsb
gs
cmp
gs
popl
xchg
cmp
aas
mov
lret
sbb
mov
test
lea
fldenv
roll
jne
mov
stos
out
sbb
rcrl
or
movsb
addr16
xor
dec
sbb
xor
or
mov
call
sahf
aam
jl
xor
sbb
sub
inc
aam
out
aad
int
sub
shlb
insl
push
mov
dec
scas
pop
bound
lods
es
mov
sub
mov
ret
mov
out
in
int
shl
jb
fdivrl
add
mov
or
test
repz
push
data16
push
imul
xchg
les
iret
push
shl
cmpsl
lret
and
jmp
push
orb
ja
mov
cmp
lcall
jg
bound
mov
or
cmp
mov
jne
leave
mov
dec
or
xor
hlt
scas
leave
repnz
lahf
push
lcall
and
mov
jp
test
cld
int3
pop
sbb
rorl
mov
push
mov
icebp
adc
nop
and
adc
ret
movzbl
jo
mov
xchg
movsb
cmpsl
out
shrb
add
je
and
xor
jne
push
je
daa
ja
insb
sbb
dec
rolb
jp
xor
pop
add
adc
jnp
xchg
test
ss
sbb
sub
xor
xchg
sbb
mov
push
xorb
inc
sahf
aam
jle
cmp
arpl
in
sub
jmp
adc
leave
jl
push
mov
adc
repnz
xor
inc
xchg
mov
frstor
es
iret
add
push
push
inc
jnp
pop
pop
or
outsl
sbb
add
push
scas
insl
test
lret
mulb
cmp
dec
in
nopl
fdivrp
mov
leave
jne
mov
scas
sbb
cmp
push
into
pop
mov
and
cs
xchg
ret
push
wbinvd
jne
ljmp
push
jl
clc
fcmovnu
loopne
fwait
icebp
insb
pop
jl
pop
ffreep
aaa
xchg
jnp
fdivrs
ja
sub
bound
or
jecxz
cld
mov
into
imul
sarb
insl
jae
mov
push
repnz
cld
call
xor
pop
jle
mov
and
cltd
push
hlt
xor
push
arpl
and
jg
in
lea
cltd
dec
pop
sub
inc
jmp
rolb
add
lods
call
popa
inc
call
jl
cwtl
test
jge
jb
test
dec
imul
test
inc
mov
lcall
xchg
push
ja
roll
icebp
rcl
loopne
cli
sub
cmp
aas
pop
or
mov
push
jne
mov
or
popa
jae,pt
int3
movb
and
pop
xchg
ret
jle
jecxz
insb
ret
arpl
ss
sub
int
out
loopne
xchg
and
mov
jmp
and
dec
mov
and
or
ror
xorl
push
cmpsb
shrl
jp
mov
jns
xchg
lret
jo
mov
out
and
xchg
add
push
stc
iret
imul
outsl
testl
mov
push
push
adc
pop
insb
shrl
rcrb
cltd
mov
fiaddl
stc
dec
jne
inc
jl
pop
xchg
push
pop
xorl
scas
xorb
popa
xchg
nop
js
pop
adc
test
fmuls
fidivl
pusha
dec
push
cmpsl
clc
pop
insl
and
ret
push
cld
adc
les
push
push
movsb
xchg
das
and
push
mov
cld
mov
mov
sub
ljmp
cs
mov
mov
nop
fstpt
repz
sbb
stc
mov
js
inc
mov
icebp
popa
push
pop
xor
fs
add
xchg
jnp
inc
rorb
jnp
pop
xchg
dec
stc
mov
dec
adc
add
add
xchg
jns
call
xchg
clc
xadd
ljmp
cmp
mov
jbe
cmpsl
jae
adc
stos
repnz
xchg
repz
enter
test
fisttpl
daa
das
cmp
enter
mov
or
test
sbb
fisttpl
pop
fstl
sbb
adc
out
pop
lret
stc
scas
inc
mov
icebp
inc
jp
dec
fwait
ret
jbe
or
divb
stc
rorb
or
in
sub
lret
loop
or
scas
lock
mov
xor
xchg
jge
stos
mov
int3
push
ja
dec
mov
sarl
jae
xlat
jb
push
shlb
outsb
lds
dec
and
lcall
and
adc
loopne
cwtl
test
and
insl
dec
adc
call
test
push
addl
mov
push
inc
and
mov
aaa
nop
cmpsl
test
mov
addr16
scas
pop
dec
pop
push
lret
push
pop
cli
lods
mov
aas
push
inc
je
fwait
or
int3
mov
test
stc
adc
adc
xchg
push
pop
pop
adc
out
adc
jbe
ljmp
pusha
pop
xchg
dec
cmp
int
mov
push
push
ret
mov
sbb
adc
sti
movsb
jmp
js
repz
test
pop
rcrl
std
mov
add
arpl
sbbb
scas
xchg
lods
mov
push
mov
insl
mov
jle
inc
inc
add
jae
jmp
in
test
sbb
xor
cbtw
andb
call
movsl
cltd
data16
ret
clc
repnz
into
push
scas
in
mov
jle
pop
mov
ret
push
dec
jmp
cli
or
mov
or
dec
dec
jg
jnp
imul
xchg
addr16
int
mov
aas
stos
ljmp
into
push
imul
test
pop
push
mov
adc
aam
loope
xchg
cmp
movsb
aam
dec
dec
fdivrl
push
jmp
push
test
jmp
shlb
sbb
xchg
lret
jns
imul
xlat
repnz
lahf
pop
pop
aas
int
cmp
xchg
sub
arpl
scas
je
inc
xchg
call
xchg
das
jb
icebp
roll
add
jb
sbb
push
pop
shrl
outsb
pop
sub
sbb
les
adc
sub
inc
jbe
addr16
sbb
pop
push
add
int3
bound
mov
xchg
pop
stos
or
add
add
andb
mov
mov
sub
inc
je
xchg
mov
sbb
add
fbstp
sub
imul
mov
cmp
out
push
in
jns
dec
cmp
jb
mov
lret
les
arpl
ss
push
arpl
inc
out
xor
sbb
jo
mov
mov
sbb
cmp
push
ffree
lea
into
arpl
cwtl
jmp
scas
loop
repnz
testb
mov
iret
lret
daa
sub
adc
and
dec
std
lods
mov
lods
aaa
xor
jecxz
cmp
pop
aam
or
mov
fmul
xchg
nop
xor
jbe
iret
jbe
aad
xchg
fcomi
sub
mov
adc
push
cltd
pop
iret
xor
mov
inc
mov
adc
stos
mov
push
test
mov
into
cmc
push
jp
xchg
xchg
mov
pusha
inc
mov
inc
lahf
push
addr16
pop
xchg
sti
cmpsl
faddp
stc
mov
ljmp
js
jl
mov
idivl
imul
dec
fcoms
ss
xchg
mov
sbb
lea
pusha
insl
fcmovbe
pop
insl
xchg
ret
les
xor
mov
xchg
mov
cmp
cmp
lret
mov
sbb
xor
push
imul
mov
loope
sbb
ja
test
push
ds
bound
or
pop
test
addr16
out
pop
ffree
pop
fidivrl
push
shll
ljmp
je
jp
mov
sahf
mov
addr16
fcmovb
push
sub
xchg
test
inc
pop
mov
adc
cwtl
xor
sbb
ret
mov
rcrl
mov
je
or
jmp
xchg
ljmp
cld
lret
or
jecxz
stos
js
outsb
add
sub
mov
mov
and
mov
jg
dec
dec
cmpsl
and
fdivrl
mov
inc
shr
inc
inc
ret
pop
add
sbb
sub
faddp
daa
out
in
int3
out
ret
in
dec
xor
int3
add
test
pop
xorl
mov
std
mov
ret
jae
cmp
jl
pop
pop
cmp
sub
pop
xrelease
cmp
fwait
fs
push
mov
push
sbb
lret
test
cld
jmp
sbb
vaddps
movsb
fildll
mov
mov
rcrl
dec
sarb
push
add
popf
negl
outsb
dec
test
add
xchg
pop
xchg
adc
repnz
leave
movsb
movsl
loope
or
or
mov
nop
sub
cmp
repnz
xchg
xor
call
iret
sbb
stos
pop
mov
mov
dec
inc
cmp
lds
jbe
sbb
pop
jae
mov
jb
pop
adc
lahf
inc
xchg
sahf
push
or
cmpsl
or
das
xchg
int
fldt
sbb
pop
ljmp
add
inc
push
dec
je
cmpsb
push
cmp
mov
dec
add
cltd
loop
insb
dec
lods
mov
mov
sahf
sbb
xchg
das
or
jp
sbb
cmc
les
xchg
cld
lret
mov
or
xchg
mov
mov
or
inc
and
loopne
mov
lock
cwtl
cmp
jbe
insl
pushf
dec
dec
inc
cmp
or
mov
push
cmp
das
shl
sub
test
mov
test
cmp
jno
inc
insb
xchg
inc
push
fists
ja
adc
inc
mov
cmp
mov
cmp
sbb
std
fistl
dec
shll
jp
xchg
cmpsb
fdivrs
repnz
or
test
push
xor
je
inc
push
push
fldcw
xchg
je
iret
in
push
jp
repnz
stc
stos
lcall
mov
and
adc
xor
out
neg
or
or
pop
push
push
fstpl
jmp
ljmp
repnz
push
inc
aad
loop
push
sbb
jno
and
dec
xchg
dec
inc
out
cs
idivl
and
and
xchg
imul
aas
repz
nop
insl
scas
dec
mov
sub
insl
add
fidivs
mov
or
in
std
enter
insl
in
test
enter
mov
lea
jne
js
stos
stos
and
inc
sub
cmpsb
xor
lahf
cwtl
mov
cmc
lea
mov
iret
stos
js
test
shl
jns
loopne
sti
enter
adc
data16
xchg
sahf
mov
pop
xchg
outsb
inc
fs
in
fs
xchg
into
orl
sbb
lret
filds
movsl
sub
pop
mov
pop
sbb
push
ret
and
test
push
stos
mov
push
sub
arpl
sub
nop
dec
adc
ret
call
int
stos
test
push
ljmp
mov
inc
pop
movsb
and
mov
and
jl
inc
inc
les
mov
fsub
pop
xchg
jb
mov
mov
push
rcll
icebp
mov
notb
mov
pop
mov
arpl
dec
stos
mov
stos
xchg
or
sahf
xor
or
cmpsb
mov
aad
pop
and
addl
mov
jg
lret
inc
cwtl
dec
fsts
ljmpw
xchg
push
dec
push
in
loopne
adc
mov
aam
xor
dec
fmulp
daa
jns
lcall
in
fcomp
mov
nop
inc
inc
iret
add
mov
js
cmp
xor
rcl
mov
daa
mov
push
xacquire
push
cwtl
sub
push
pop
cmp
jge
push
inc
enter
or
test
aas
jo
and
outsl
or
add
cld
loopne
adc
and
pop
mov
mov
mov
das
push
stc
cltd
pushf
push
pop
popa
pushf
pop
push
shlb
hlt
mov
mov
shr
inc
lcall
pop
aaa
xchg
stos
sub
out
inc
sub
pop
dec
add
push
jb
mov
inc
sti
insb
push
ret
add
xor
and
xchg
stos
ljmp
jne
icebp
lret
lret
imul
mov
and
adc
ja
adc
fwait
in
mov
mov
mov
test
jo
fsubl
mov
jno
andl
test
xchg
inc
inc
push
aad
cld
mov
leave
jmp
sub
int3
clc
cmp
in
ss
div
int3
repnz
pusha
mov
adc
push
clc
cmp
jle
xchg
int
push
and
sysret
dec
jmp
aad
mov
cmp
jle
lea
lahf
insl
sub
loop
sbb
in
cwtl
add
push
outsl
lea
rorl
and
dec
out
xchg
subb
jp
gs
sti
mov
and
loopne
je
sbb
add
inc
pop
pop
int3
inc
scas
loope
pop
dec
rolb
mov
add
js
mov
push
pushf
mov
xor
bound
mov
div
mov
roll
push
test
adc
enter
cmp
out
pop
arpl
repnz
push
jo
jge
enter
scas
sbb
orb
pop
pop
jne
mov
push
adcl
mov
sbbb
jmp
adc
lock
mov
insb
push
outsl
je
mov
repz
mov
jecxz
in
adc
push
mov
jnp
inc
or
testb
or
ljmp
cs
out
addr16
mov
fidivrs
hlt
lret
cmpsb
icebp
iret
or
jo
sbb
adc
jmp
aad
cld
mov
lahf
add
jge
lods
xchg
jp
xorb
xchg
mov
inc
pop
dec
pop
mov
jl
inc
movsb
dec
std
stos
add
call
adc
xchg
push
or
mov
bnd
xchg
pop
iret
testl
inc
jo
add
ljmp
fistpll
aas
push
mov
clc
outsl
pop
loopne
ror
cmp
xchg
jg
mov
push
data16
push
aas
andb
push
loope
cmpsb
add
cmp
popf
mov
xlat
jmp
mov
fistps
loop
jmp
or
xor
mov
adc
fdivl
pop
pop
ss
mov
sub
rcr
push
xchg
add
sub
and
xor
lods
bndstx
xchg
mov
lret
faddl
push
sub
xchg
hlt
push
xchg
pop
pop
mov
je
das
out
popf
sub
imul
jnp
sub
scas
test
and
jno
push
addr16
dec
mov
or
sbb
sbb
and
into
rolb
loopne
clc
pop
cmp
push
mov
add
cli
mov
sbb
imul
movsl
movsl
sarb
inc
out
lods
push
sbb
addr16
andb
pop
inc
push
adc
xchg
out
negb
mov
inc
push
mov
insl
mov
jno
out
aam
scas
pusha
cltd
cmp
nop
out
or
popa
in
xor
roll
jb
js
inc
js
xchg
das
xchg
adc
inc
mov
int3
jbe
or
xor
mov
mov
pop
sbbl
test
fwait
mov
sub
dec
dec
or
iret
pop
mov
fisubrs
out
dec
sti
in
repnz
add
in
xchg
mov
jo
xlat
dec
lods
test
sub
insb
fstpt
addb
push
sahf
jno
jl
fnsave
mov
sub
ret
adc
sahf
sarl
addr16
stc
lcall
notb
xchg
jnp
jp
pop
pop
sub
testb
jo
mov
mov
mov
or
or
jge
aad
jg
dec
rol
repnz
ret
scas
jne
fisubl
test
jge
iret
push
leave
mov
pop
inc
xor
es
fidivrs
dec
xchg
mov
jno
push
dec
sar
in
inc
adc
xor
adc
sub
arpl
dec
sub
cmp
pop
add
xchg
xor
sbb
fwait
jo
add
sbb
loop
jmp
push
push
mov
leave
push
enter
adc
or
fneni(8087
mov
filds
fists
scas
stos
aas
fwait
cwtl
push
xchg
push
jp
aad
fildll
lcall
mov
xchg
adc
js
in
inc
lds
dec
inc
add
in
ljmp
mov
cmp
jle
mov
cmp
gs
mov
loope
popf
xor
mov
fidivrl
scas
xor
imul
fdiv
jbe
push
movsb
xorl
jp
mov
adc
push
lcall
and
or
adc
iret
pop
lds
nop
js
dec
paddsw
mov
out
pop
shrb
mov
mov
jmp
xchg
inc
mov
xchg
movsb
scas
mov
xorl
sbb
lret
dec
mov
or
call
add
lahf
shrl
jns
push
ds
test
int3
lods
jno
jmp
jmp
aaa
jne
lock
adc
aad
adc
test
push
pop
outsl
and
pop
or
enter
enter
and
nop
mov
mov
hlt
xchg
lds
xor
xchg
icebp
movsl
sub
cmp
dec
xor
or
push
sahf
scas
inc
pop
pop
repz
jecxz
bound
sbb
and
dec
rorl
jmp
aaa
or
jne
inc
insb
popa
pop
in
addl
jmp
adcb
inc
fwait
insb
sbb
cmp
js
sti
xchg
inc
sub
call
dec
out
pop
incb
test
daa
callw
lds
daa
fadds
cmp
popa
push
and
pop
jl
jnp
push
repz
int3
lea
jmp
aas
xchg
pop
mov
mov
out
call
sbb
dec
sti
pop
mov
shr
adc
fldenv
or
xor
cmp
nop
or
dec
stos
pop
mov
push
pop
push
lods
xor
jns
dec
or
inc
ret
mov
insb
arpl
cmp
enter
jae
or
in
cmpsb
ljmp
imul
int
pop
jecxz
jno
jecxz
mov
lcall
mov
test
xchg
cld
cltd
xchg
push
imul
xor
add
std
das
lret
movsl
and
stc
pusha
pop
shlb
stos
hlt
pop
addr16
adc
cmc
test
and
xlat
popa
jb
fwait
sar
leave
cmpsl
lds
pop
fdivrs
cmp
add
mov
mov
std
popf
add
stc
in
aad
ljmp
ret
test
jbe
pop
xorl
std
jl
or
dec
add
sbb
sbb
insl
mov
sbb
and
jne
xor
sub
ljmp
orb
pop
push
jns
js
fwait
pop
out
loope
sbb
cmp
lods
cmpsl
imulb
cmpsb
cmp
mov
int
pusha
xor
dec
and
lods
test
loop
std
loop
mov
std
popf
loopne
pop
mov
mov
mov
and
lret
sub
js
stos
push
add
sbb
sub
fisubl
mov
adc
insb
xlat
or
notb
popa
movsl
mov
pop
sub
push
lods
add
mov
adc
lret
xlat
out
sbb
mov
out
mov
mov
inc
movsb
add
leave
xor
imul
sub
mov
dec
imul
sbb
xchg
aaa
or
jecxz
fcomi
cwtl
dec
stc
mull
pop
mov
push
pushf
pop
xchg
into
mov
imul
mov
test
sti
mov
xchg
sub
sbb
movsl
in
xor
scas
xchg
push
aam
sbb
xchg
dec
dec
cmp
mov
pop
test
movsb
pop
and
imul
leave
leave
and
pushf
pop
loope
add
aam
movsl
lock
in
test
pop
popf
and
fidivs
jno
enter
int3
cmc
das
icebp
pop
andl
popa
je
test
xchg
add
fs
jb
shlb
pop
xchg
push
mov
jp
cmpsl
add
je
push
sub
push
loopne
shll
jle
push
push
inc
iret
push
ret
dec
ret
mov
cmpsl
outsl
iret
popa
lcall
into
mov
icebp
pop
xor
fdivr
dec
lock
roll
mov
mov
inc
push
mov
cmp
mov
lods
addr16
or
ret
mov
jnp
xor
stos
jbe
int
loope
lret
pop
les
aas
sbb
aam
or
add
mov
lock
mov
int3
and
adcb
dec
push
mov
in
xchg
adc
mov
outsb
daa
sbb
sub
lock
inc
add
fdivr
fnsave
scas
mov
ljmp
jecxz
movd
in
mov
mov
sti
int3
mov
inc
out
jbe
ret
fdiv
popa
cmp
call
call
xchg
sbb
mov
dec
fcmovbe
pop
cmp
subl
out
add
jmp
xor
in
sbb
loop
clc
push
in
jns
lods
daa
and
xor
adc
sub
out
sub
or
jns
nop
dec
mov
cmp
push
icebp
mov
aas
dec
xor
xchg
adc
sbb
ss
mov
push
sbb
pop
lret
xchg
andl
mov
scas
xorl
call
add
repz
jecxz
mov
inc
pushf
xorb
out
dec
jae
sub
xchg
dec
bound
repnz
cmpsl
cmpsl
mov
imul
lock
clc
mov
add
sub
sub
pop
mov
cs
mov
cmp
cmc
shlb
cmp
mov
mov
idiv
dec
push
mov
add
dec
push
lcall
les
aas
dec
jmp
aad
movsb
mul
les
dec
pop
pushf
jecxz
mov
mov
jmp
mov
popf
mov
push
xchg
xor
sahf
loope
push
adc
out
aad
jle
shll
loop
in
mov
xchg
stos
jecxz
xor
test
adc
movsb
in
xlat
sahf
push
gs
dec
xchg
mov
pop
cwtl
push
and
dec
dec
mov
ja
cwtl
insb
fsubrs
xor
sbb
imul
fadds
cmp
out
movsl
sub
push
es
inc
in
das
add
dec
jg
cmp
push
adc
push
push
mov
jbe
lds
xchg
leave
fstps
insb
ss
scas
xor
mov
pop
out
pusha
sbb
in
adc
dec
jne
cld
pop
sub
dec
cmp
into
test
out
lds
aam
jo
cmp
jge
in
subb
mov
mov
test
int
jo
mov
push
push
rolb
adc
and
lock
mov
push
push
stos
aad
or
sbb
loop
das
dec
xchg
adc
xchg
iret
imul
loop
std
mov
loop
and
nop
dec
test
jo
scas
push
idivl
xor
lods
cmp
inc
mov
test
les
gs
je
and
cs
sbb
cwtl
aaa
or
or
hlt
rcrl
cltd
or
sbb
neg
jae
dec
and
and
mov
out
cltd
pop
mov
inc
dec
sbb
xchg
or
mov
jne
sub
pop
fadd
sti
inc
lods
addb
cwtl
dec
lcall
shl
dec
filds
jo
addl
mov
aad
mov
andl
sbb
idivb
mov
daa
cmp
scas
and
ds
sahf
je
xchg
mov
xor
mov
gs
inc
loop
push
cmc
push
xchg
cltd
imul
push
push
out
sub
push
xchg
pop
fs
sbb
mov
mov
cli
mov
test
mov
outsb
sub
cmpsb
xlat
into
outsb
push
cltd
mov
fmull
sahf
mov
aad
hlt
adc
daa
je
push
into
xchg
xchg
jne
cmp
xchg
jl
lock
into
dec
cmp
fs
pop
inc
mov
cwtl
xor
jmp
sete
pop
jnp
fstps
jp
fwait
fs
sbb
std
xchg
cmpsb
add
sbb
xchg
add
movsb
in
negl
loop
xchg
or
arpl
pushf
pop
xchg
out
scas
mov
faddp
xor
out
push
cltd
fs
push
test
mov
pop
xchg
pop
adc
jle
or
aaa
das
xchg
dec
addb
test
lods
scas
or
jecxz
mov
sbb
inc
adc
rorl
int
imul
cs
or
icebp
mov
ror
xor
xchg
mov
xor
jno
and
ret
mov
stos
scas
stos
xor
push
xor
jp
sub
fsubl
dec
fcomps
mov
xchg
pop
imul
inc
push
sbb
hlt
aad
insb
xor
sbb
mov
das
cmp
push
loop
movsl
mov
ret
xor
call
xor
sbb
or
mov
or
mov
sarl
dec
enter
fisttps
inc
xor
lret
push
js
adc
mov
outsl
dec
mov
in
xchg
enter
or
mov
xchg
in
cmp
aaa
and
mov
adc
xchg
test
lods
pop
incb
xor
sbbb
frstpm(287
es
fs
mov
jns
cmp
gs
lret
pop
mov
leave
je
jae
xor
aam
cmp
push
adc
lret
scas
je
mov
pop
hlt
ja
jmp
lock
and
jle
gs
repz
cmpsl
pop
sarb
mov
andl
int
lcall
xor
loop
adc
stos
fs
arpl
test
ljmp
xor
pop
sar
hlt
jb
adc
imul
mov
js
lea
je
pusha
jge
fs
mov
arpl
jl
mov
mov
pop
mov
icebp
or
sub
xor
cwtl
shll
in
jge
and
js
repz
and
or
sbb
repz
sub
ja
ret
adc
sbb
mov
mov
add
add
clc
out
xor
in
lock
test
inc
xchg
daa
testb
je
push
enter
jne
test
dec
cltd
adc
mov
mov
repz
or
xchg
fwait
enter
xchg
rcrl
ficoml
pop
push
in
ds
scas
sbbb
sbb
jle
insl
dec
les
lods
mov
sbb
sti
add
jle
cmp
push
out
rolb
dec
mov
jns
stos
js
sbb
dec
pop
imul
jae
pushf
xchg
push
loopne
sub
in
out
inc
ljmp
leave
dec
pop
ret
add
xor
int
mov
jne
add
out
aaa
pop
cmp
les
push
loope
or
cmp
out
xor
xchg
jae
les
jno
in
sahf
ret
int
sub
mov
push
dec
orb
sub
pop
sub
sarl
dec
imul
sub
adc
repz
out
shrb
mov
call
jns
mov
push
mov
in
sbb
mov
adc
push
cld
push
call
pop
addb
aaa
xchg
shlw
rol
inc
sbb
test
repnz
and
cmp
push
movsl
dec
jg
xchg
jle
xchg
mov
mov
sbbb
xchg
or
and
sbb
push
pop
inc
jle
mov
sub
mov
jp
mov
test
xchg
subb
scas
cwtl
pop
or
std
fisttps
mov
pop
data16
xchg
lret
dec
xchg
sub
arpl
mov
std
xchg
xchg
sbb
cmc
lds
out
jnp
popa
aas
or
adc
sub
push
mov
gs
inc
mov
pop
fidivs
aad
sub
jg
xor
pop
mov
mov
divb
sub
push
and
and
jg
inc
cmp
clc
stc
pmullw
call
push
sub
xchg
cmp
mov
hlt
ja
mov
cli
inc
inc
inc
jle
pop
jne
mov
mov
fmuls
in
fdivl
inc
shrb
cmc
mov
pop
jge
loopne
sbb
incb
leave
jge
jbe
sub
jge
imul
mov
dec
mov
mov
fisttpll
mov
in
xchg
mov
out
or
mov
or
rorl
incb
cmp
mov
imul
sbb
ss
sub
cli
ret
adc
jne
jnp
lret
add
nop
dec
pushf
iret
int3
fmull
int
adc
mov
cmc
aaa
lods
fcmovnu
adc
addr16
cmp
cmp
cltd
js
adc
cli
loop
in
mov
mov
dec
testb
mov
sub
inc
pop
in
icebp
xchg
js
stos
rcrl
xlat
fildll
inc
mov
pop
adc
hlt
inc
clc
iret
enter
mov
pop
cmp
pop
sub
xchg
out
pushf
lcall
jbe
push
idivl
mov
cmp
pop
push
mov
lret
sbbl
push
push
cld
sbb
xor
ljmp
sub
adc
cmp
mov
xchg
mov
or
xorb
enter
js
lods
in
es
sbb
push
fimuls
lods
and
mov
push
in
sub
jae
add
mov
pop
sbb
loopne
out
daa
and
push
jl
out
pop
push
cmpb
popf
ss
sub
imul
mov
dec
jge
lahf
sub
push
push
mov
mov
rcrl
push
and
repz
sti
ficomps
inc
es
shll
es
push
clc
sub
and
pop
mov
ficompl
jbe
sub
mov
jl
pop
aad
mov
cs
xchg
loope
mov
les
stos
int
scas
addb
pop
mov
out
dec
adc
push
out
xchg
idivb
inc
inc
xlat
rcll
lret
jecxz
inc
push
pushf
repnz
or
roll
inc
mov
aam
xor
sbb
or
fs
mov
mov
add
call
mov
mov
sbb
or
push
dec
push
inc
inc
xor
add
mov
sbb
add
les
rolb
mov
xchg
scas
adc
inc
scas
insb
test
xor
ret
test
mov
xor
push
cmp
jmp
jo
js
ja
shlb
faddl
out
stos
je
cmp
jl
push
dec
call
add
adc
xor
jmp
add
push
sbb
daa
imul
inc
fidivrl
jecxz
cmpsb
cmp
in
inc
popa
decl
lcall
fsubs
sub
push
lock
lock
adc
loope
xchg
jg
adc
enter
and
xor
add
fisubrl
addl
dec
repz
or
push
lods
sbb
or
xorl
pop
sub
pop
and
nop
test
mov
sub
es
sub
inc
or
pop
out
mov
push
xchg
push
xchg
dec
and
mov
int
nop
loope
daa
in
cltd
mov
aaa
adc
fisubrl
or
cltd
xchg
mov
push
loop
pop
pop
lods
xlat
jb
out
jb
inc
rorl
xor
mov
or
into
invd
pop
out
pushf
movsb
addr16
test
inc
dec
stos
push
or
lods
push
sbb
mov
outsl
inc
cltd
js
mov
pop
jmp
mov
clc
pusha
in
lock
ret
adc
lods
dec
out
test
cmp
cmpsl
icebp
sbb
mov
push
add
sub
cmp
sbb
cli
cmovle
jo
scas
mov
cmp
xchg
jmp
shlb
cs
cs
bound
aad
dec
into
mov
pop
cmp
sbbb
cltd
into
cmp
xor
mov
jbe
add
sub
mov
movsb
xchg
rorb
add
pcmpeqb
or
not
scas
push
sti
push
sub
lret
je
lret
dec
shll
leave
lahf
mov
push
mov
insb
jle
fwait
test
popa
pop
jnp
push
mov
lea
gs
mov
int
outsl
cmp
xor
jg
cwtl
or
dec
imul
xchg
pop
push
fidivrs
pop
ffree
in
pop
push
jmp
jp
enter
xchg
ljmp
push
jne
int3
mov
xchg
rorl
out
pop
ljmp
out
pop
push
inc
xchg
cmp
sarb
jb
adc
jae
jmp
adc
outsl
pusha
xchg
jnp
dec
ljmp
cwtl
rol
pushf
xlat
into
dec
dec
dec
push
or
dec
mov
adc
pusha
jns
sub
sub
rcrl
ror
cmp
or
xor
mov
adc
mov
fs
inc
hlt
jns
cmp
and
sbb
in
into
dec
inc
pop
jmp
idivb
and
jnp
mov
lret
mov
rcll
mov
lds
ret
mov
pop
fdivl
xchg
adc
repz
iret
push
mov
test
and
mov
lahf
jnp
repz
or
cwtl
pop
test
mov
outsb
stos
test
data16
push
fldcw
or
xchg
js
pop
cmp
cltd
cmp
push
sub
sub
mov
ret
leave
sti
call
stos
nop
jo
push
adc
sub
cmpsl
in
jp
dec
popw
scas
xchg
sahf
xor
sbb
pushf
scas
jns
fisubrl
adc
int
mov
rcrb
push
sub
fimull
out
cmp
mov
lahf
add
push
clc
ja
xor
or
push
fwait
sub
jp
or
mov
xchg
xor
int3
stc
sbb
shlb
cmpsb
or
ffree
sbb
imul
xor
testl
scas
jge
rclb
std
and
and
fwait
sbb
xchg
mov
pushf
aad
push
inc
imulb
adc
or
sbb
test
dec
popa
push
xor
dec
sti
shrb
iret
and
or
adc
fstl
mov
clc
pop
ret
imul
jle
cmp
fwait
ret
aas
out
ljmp
in
cmc
xchg
add
mov
ljmpw
rorl
xlat
push
lods
pop
out
or
xchg
lock
mov
mov
push
popf
psadbw
lret
inc
in
push
sahf
mov
das
out
stc
mov
jno
jmp
inc
lds
shlb
jnp
clc
xchg
loope
adc
or
mov
mov
test
xor
push
nop
rorl
jb
jmp
lea
mov
addr16
insl
add
call
cmpsb
movsl
cmp
cmp
xor
pop
dec
push
leave
int
xorl
dec
lcall
sbb
shrl
call
daa
cmc
leave
rcl
mov
lcall
mov
int
pop
add
mov
loop
jmp
dec
rclb
cli
shlb
pop
dec
mov
movsb
dec
jo
pop
xchg
push
fcomps
mov
pop
and
adc
and
cmc
out
int3
inc
cli
mov
jae
inc
jecxz
sbb
fsubr
bound
imul
sub
ficoml
inc
cld
adc
adc
add
jns
mov
loopne
xchg
movsb
sub
lds
lea
jge
comiss
push
jp
inc
xchg
jo
lds
push
xchg
mov
or
cmp
cmc
inc
roll
out
pop
gs
push
orl
testl
xor
loope
call
pop
and
subl
and
rcl
and
xchg
pop
jle
sbb
add
fwait
sub
imul
sub
mov
add
mov
nop
sub
jb
out
or
mov
sbb
ja
sbb
bound
xchg
adc
cmp
push
clc
sub
pushf
fcoms
ljmp
fists
lret
arpl
add
in
lods
fwait
aaa
popa
jo
mov
aad
sbb
xchg
lds
push
nop
cmpsl
mov
dec
sbb
push
jge
dec
adc
aad
out
mov
adc
lcall
hlt
int
mov
mov
test
cltd
push
add
leave
pop
mov
int3
adc
nop
adc
sbb
sub
and
sub
enter
push
and
xor
mov
push
ljmp
ficompl
or
call
pop
jnp
mov
jo
fucomi
xor
pop
mov
mov
cmp
jns
xor
xlat
gs
cli
lretw
mov
pmaxub
push
daa
daa
mov
inc
jne
in
loopne
sbb
dec
add
fdivl
les
or
dec
push
pop
aad
mov
xor
cmpsl
shlb
jl
imulb
cwtl
sbbb
push
jge
mov
mov
inc
mov
mov
in
dec
hlt
gs
subb
xchg
shl
mov
pop
pop
push
test
jl
mov
xchg
aam
cwtl
arpl
cmp
and
pop
movswl
cmpl
pop
jo
jae
aad
cmp
out
inc
push
outsl
cs
pop
stos
mov
arpl
int3
lret
je
mov
add
ljmp
mov
adc
insb
and
out
pop
stos
lods
aas
mov
mov
lock
mov
and
dec
js
push
repz
lds
or
es
adc
lea
stos
aam
push
lcall
jmp
cmp
jg
cmpsb
insb
lds
pop
aad
sbb
fnstcw
stos
les
testb
sub
jbe
adc
fisubl
cmpsl
mov
iret
test
lcall
xchg
enter
dec
ss
inc
js
jecxz
repnz
sbb
cld
stos
cmpsl
scas
xor
push
adc
jne
outsl
mov
dec
mov
repz
fisubs
fstp
fsubl
sbb
xor
int
lret
push
das
stos
sbb
stos
and
stos
imul
jle
or
xor
sbb
xchg
fwait
loopne
ret
daa
jle
je
lahf
inc
jle
cmp
xor
stos
xor
ret
loope
mov
add
sti
es
pop
add
lahf
jmp
ja
mov
out
xchg
push
fwait
lods
aad
mov
sbb
js
jne
and
sahf
inc
xor
pop
add
mov
push
aas
bound
adc
test
imul
popa
adc
shlb
std
inc
mov
mov
sbbb
or
repz
and
push
lods
sub
add
or
jecxz
jl
dec
outsb
jle
mov
xlat
fcmovnu
push
jno
imull
push
xchg
in
sub
push
decl
les
dec
aam
mov
cmp
pop
adcl
xor
repnz
fs
xor
ret
xchg
lock
clc
push
add
movsl
xchg
sti
ss
xlat
stc
inc
insl
push
xor
rcll
fcoml
imul
sahf
test
clc
cmp
in
mov
xor
cld
adc
cmc
or
hlt
inc
pop
add
jle
adc
loope
lods
iret
pop
push
fs
ret
inc
sub
xchg
lods
xor
jmp
xor
pop
test
cltd
sarb
and
cltd
dec
dec
dec
sub
jne
in
rcl
mov
mov
dec
jp
and
xchg
cmpsb
pushf
lods
movsb
jp
xor
ja
lds
xchg
push
dec
pop
xchg
pop
xchg
shr
jg
lods
xchg
inc
cmp
mov
xchg
jg
repnz
mov
fidivrs
add
dec
inc
sbb
out
ret
ja
rsm
and
out
inc
aas
push
imul
aad
subb
sbb
push
imul
push
push
jnp
add
insb
lcall
add
xchg
aam
out
mov
shl
roll
pop
jle
ficompl
mov
out
pop
sbb
mov
mov
fs
inc
or
sbb
out
add
mov
jl
leave
fisubl
sbb
mov
push
test
xchg
outsb
push
mov
lods
add
jl
mov
cmpl
stos
in
sbb
lock
sbb
mov
inc
cmc
repz
sbb
mov
pop
and
mov
mov
pusha
dec
pop
sti
cmp
cs
lock
bound
jae
loopne
xchg
xlat
pop
fnstenv
push
in
dec
push
adc
add
adc
and
or
adc
ljmp
js
mov
jle
scas
jl
dec
cmp
or
ficomps
in
mov
mov
sbb
sbb
dec
push
mov
ret
push
add
test
mov
adc
bound
shll
cmpsl
xor
jmp
mov
scas
test
sbbb
pusha
push
jb
xchg
lret
push
js
jecxz
mov
cltd
mov
lods
xor
push
sub
cmp
and
adc
jecxz
push
add
and
dec
scas
fdivrl
iret
rolb
loop
pop
cmp
cmc
cmc
fwait
xor
adc
shl
fistpl
push
test
inc
imul
gs
imul
sbb
ljmp
cmp
das
and
or
cwtl
stos
leave
lcall
outsl
rcrl
ret
aad
fisttps
inc
cmp
xchg
mov
mov
dec
scas
repnz
repnz
mov
and
cmp
xor
dec
inc
jns
and
xlat
inc
das
mov
or
cmp
pusha
dec
push
adc
lret
push
mov
mov
es
mov
dec
xlat
test
negb
sub
insl
incb
push
es
lret
stc
inc
mov
int
cwtl
aam
scas
push
daa
outsl
xchg
inc
mov
fsubl
shr
in
dec
xchg
adc
and
rclb
shrb
mov
lods
movl
mov
adc
jo
lcall
push
cmp
inc
fldenv
int3
call
inc
pop
rclb
push
xor
push
pop
leave
mov
loop
xor
dec
insb
cmpsl
or
fsubrl
fstl
icebp
loope
ljmp
int
fs
loope
lea
aas
and
paddw
xor
repnz
test
int
inc
outsb
loope
jmp
fmull
aad
xor
mov
ja
stos
ror
ficomps
fistpl
sbb
mov
ljmp
inc
cmp
sub
jp
and
pcmpgtd
cmp
pop
mov
call
lahf
fcoml
and
inc
jp
fcomps
sub
mov
fwait
mov
inc
mov
pusha
icebp
pushf
es
call
pop
in
out
nop
in
mov
aad
sub
cld
sub
ds
mov
add
and
xchg
imul
repz
idivb
popf
je
sub
daa
push
mov
ss
mov
jbe
push
mov
pop
xchg
stos
mov
cmc
das
fisttpl
out
dec
mov
add
adc
out
inc
in
jnp
xchg
push
int3
pop
ficompl
nop
clts
cmp
jb
icebp
mov
sub
pushf
sbb
push
fdivs
pop
fwait
inc
sub
pusha
push
iret
jns
dec
dec
int3
sti
xor
sahf
stos
int
insl
mov
and
movsb
cmpsb
inc
jno
cmpsl
xchg
jmp
popf
jp
arpl
push
cmp
or
xchg
push
ss
testl
cmp
fiadds
cmp
mov
add
pusha
mov
and
add
inc
push
sub
bound
add
orl
push
sbb
andb
imul
jmp
sbb
add
aaa
std
rcr
pop
cmc
sub
mov
xor
sub
or
pusha
es
int3
mov
lods
pop
stos
lds
push
lret
out
mov
or
jno
add
sub
push
pop
dec
adc
lods
pop
test
movsb
shll
lret
mov
je
adc
ja
js
mov
xchg
pop
cli
sbb
xchg
dec
enter
in
jp
dec
pop
dec
inc
adc
repz
mov
imul
adc
mov
repz
dec
stos
push
jecxz
jbe
shll
lock
cwtl
icebp
test
add
test
test
fdivl
mov
jecxz
or
push
dec
sub
into
mov
dec
lret
mov
xor
sbb
add
outsl
mov
test
adc
xchg
or
in
xchg
je
pusha
cmp
add
mov
push
mov
nop
fcoms
je
jecxz
add
push
stos
push
mov
add
pop
lahf
testl
push
cs
mov
mov
add
inc
fidivl
sub
cmpl
or
dec
scas
push
mov
pop
jp
dec
or
mov
pop
add
ret
inc
in
ljmp
push
xchg
jp
inc
movsl
pop
pushf
test
cs
imul
mov
test
sub
adc
sub
push
enter
xor
mov
mov
jecxz
and
sti
lds
rol
daa
pop
rolb
adc
out
xor
cmp
cmp
cmp
xor
dec
outsb
sub
lcall
push
lock
lahf
jge
jbe
adc
inc
repz
int3
pop
sti
mov
dec
xlat
push
jno
in
sbb
xchg
enter
dec
test
mov
insl
ja
pop
jno
mov
stc
push
sbb
adc
mov
inc
xchg
outsb
sbb
aaa
cmpsl
inc
cmpsb
imul
cmp
lcall
push
dec
mov
lahf
push
stos
push
sar
in
xor
jecxz
fdivrs
outsl
rorl
add
cmp
and
pushf
movsb
push
icebp
filds
and
aas
ds
addr16
mov
jmp
adc
pop
xchg
cltd
inc
dec
sbb
add
notb
mov
dec
inc
das
xchg
fstp
add
mov
scas
xchg
test
aam
lret
inc
xor
adc
scas
jecxz
sbb
inc
pop
in
xlat
cmpsl
pop
cltd
xlat
out
lret
adc
ror
push
imul
and
dec
cwtl
in
fidivrs
mov
cltd
xor
jge
pop
es
and
jb
repnz
mov
lods
jle
inc
pop
in
lea
and
jnp
mov
xchg
adc
mov
ret
ja
fdivl
pop
push
ljmp
insb
xor
xchg
adc
xor
mov
dec
inc
xchg
inc
rcrb
fiadds
out
repnz
lret
push
add
in
pushf
mov
insl
cmp
sub
mov
lods
mov
loop
ljmp
cmp
clc
aam
xorl
mov
test
adc
add
icebp
xor
pop
dec
ret
pop
adc
ret
adc
lds
push
xchg
jns
xor
popf
mov
sarl
cmp
sbb
out
sbb
in
sub
dec
rorb
sbb
aaa
imul
sbb
xchg
out
mov
clc
lods
leave
lret
pop
enter
sbb
jmp
stc
out
dec
in
popf
rcrl
mov
ss
pop
jmp
fimuls
jns
loope
in
and
lock
mov
in
xlat
inc
fiaddl
xchg
ljmp
push
outsl
and
push
data16
hlt
mov
decb
dec
jle
adc
push
aas
and
sbb
in
pop
jno
jne
popf
imul
loop
cmpb
in
add
fstl
jge
push
cmpsl
pop
fnstcw
xchg
dec
xchg
popf
push
mov
out
out
pushf
in
sbb
add
cmpsl
or
adc
and
in
sbb
push
mov
rorl
scas
clc
push
popa
xchg
aad
jnp
test
adc
arpl
int
popa
mov
inc
lahf
int
int3
popf
ja
cwtl
jg
add
das
mov
je
into
int3
out
sub
mov
mov
fisttps
scas
or
fisubrs
pop
inc
add
sub
dec
and
mulb
and
imul
xor
push
inc
sub
iret
push
pop
mov
or
sub
stos
adc
jp
shll
or
jne
fdivl
aad
es
pop
lret
fistl
flds
adc
jecxz
fimull
addr16
mov
insb
dec
xchg
addl
mov
or
stc
sub
fs
xchg
lods
push
add
ds
cmp
pop
shlb
lahf
cmp
mov
and
mov
hlt
mov
and
jno
pop
and
sub
icebp
sbb
xor
sarb
mov
mov
mov
test
jnp
into
jae
cmp
mov
sub
cmpsl
and
pushf
sub
add
int3
mov
inc
movsl
pop
add
leave
jmp
pop
inc
mov
and
or
and
daa
test
cmp
lret
cmc
push
loop
sub
sbb
mov
add
nop
sub
out
fmul
add
jge
adc
loopne
je
xchg
push
cli
push
push
test
rcrl
xchg
cmp
pop
aas
lods
aad
fdivs
fwait
lea
pop
push
mov
icebp
jecxz,pn
cld
dec
inc
pusha
jecxz
and
aam
sbb
mov
mov
addr16
mov
adc
fwait
jne
push
je
mov
xchg
rcr
xor
faddp
inc
sub
je
pop
xchg
cmp
dec
jp
loopne
sbb
andb
lret
arpl
pop
push
lahf
loopne
into
or
jnp
and
mov
push
cwtl
and
sub
cmp
insl
psllq
rcll
xor
into
adc
imul
les
out
jo
sub
jno
pandn
test
sbb
mov
out
lods
imul
xchg
lcall
add
dec
faddl
lahf
int
xorl
cmp
cwtl
lods
lock
in
lods
push
fwait
sub
mov
fildll
dec
adc
in
into
jns
sub
pop
sbb
repnz
mov
insb
and
mov
cmp
jecxz
notb
aad
scas
cmpsb
inc
mov
dec
xchg
pop
ljmpw
sbb
out
adc
cltd
dec
adc
insl
xor
push
adc
movsl
dec
aad
stos
pusha
fwait
icebp
repnz
mov
mov
ds
xchg
outsb
xchg
xchg
mov
std
test
sub
mov
notb
fisubrs
sbb
pop
and
push
arpl
add
cwtl
out
add
jae
fistl
cvtdq2ps
push
ret
stos
xchg
pop
sub
xor
mov
adc
and
pushf
je
jecxz
xchg
sbb
ret
xlat
aam
pop
data16
mov
cmp
icebp
adc
ja
in
xor
jno
sub
dec
and
cmp
pusha
dec
inc
push
or
pop
roll
cmp
leave
fwait
jge
out
fistl
xchg
push
test
pusha
push
cmp
sbb
cmpsl
clc
repnz
jno
test
pop
jecxz
xchg
in
bound
data16
les
shrb
jne
dec
movsl
aas
sbb
popf
pop
stos
out
add
pop
xchg
mov
fisubl
mov
sub
adcl
adc
adc
in
fidivs
dec
inc
fsts
movsb
xchg
mov
push
xchg
lock
pop
insb
xor
mov
btr
rcl
arpl
aad
mov
sub
test
ss
out
minps
jl
xor
xchg
adc
mov
push
mov
mov
mov
and
jb
sub
mov
mov
sub
mov
aad
lds
add
sbb
sub
xchg
inc
in
and
mov
movsl
enter
sub
sbb
stc
or
add
das
leave
jmp
ja
pop
sbb
fsubs
mov
mov
add
std
adc
outsb
cli
addr16
adc
mov
imul
movsb
sbb
cmp
test
fistpll
or
jo
cwtl
sub
lds
sub
scas
xor
push
mov
nop
and
mov
xchg
daa
adc
out
mov
imul
push
push
adc
or
jnp
sub
test
dec
jmp
fldln2
fnstsw
mov
ja
in
fbld
adc
iret
mov
sahf
leave
movsl
fistpl
add
mov
dec
cwtl
hlt
sahf
mov
lods
into
adc
adc
sub
mov
arpl
icebp
jle
and
xchg
ret
aad
xor
cmp
jb
int3
add
sahf
imul
lods
into
lds
adc
js
adc
adc
cld
inc
mov
jae
pop
xor
insb
mov
push
cs
insl
scas
push
cmpsl
lods
test
cmp
mov
jbe
and
aad
xchg
arpl
xchg
imul
movsb
arpl
pop
cmpsb
ss
neg
jo
mov
test
repnz
icebp
sarl
in
push
xlat
mov
dec
fwait
ljmp
popf
ds
mov
mov
pop
repnz
cmp
test
movd
popl
inc
jae
jo
or
divl
lahf
inc
pop
and
mov
ja
stos
mov
lret
jl
or
sahf
dec
stos
xchg
and
out
js
mov
sbb
pusha
jmp
inc
movsl
out
or
push
xor
stos
jbe
sbb
call
ss
out
xchg
stos
lret
lock
pushl
lds
xor
dec
pop
ja
push
cli
test
add
mov
daa
mov
inc
xor
add
out
adc
or
mov
pop
inc
ficompl
lret
dec
mov
cwtl
jns
pop
mov
mov
sbb
icebp
pushf
ss
xchg
hlt
pop
movsl
out
adc
mov
popa
divl
adc
dec
lods
inc
dec
frstor
mov
inc
dec
mov
mov
cmp
std
in
cwtl
pop
andl
or
iret
push
jb
repnz
shl
mov
xor
arpl
xchg
mov
pop
inc
jp
ss
jb
push
cmp
adc
fs
aas
fcmovb
xor
cmp
stos
add
jg
jns
and
mov
cmovge
mov
aad
movsb
and
lcall
in
incb
pusha
push
sub
repnz
test
outsb
sbbl
push
nop
xchg
jp
add
ficomps
pop
adc
mov
xor
sbb
mov
sub
in
xchg
cmpsb
notl
stc
cld
stos
sub
jge
loopne
sub
nop
xchg
mov
or
iret
mov
bound
scas
je
add
lods
fadd
dec
bound
rcll
nop
in
push
sub
xor
ljmp
rcrb
add
mov
mov
adc
icebp
cld
add
imull
lea
insb
mov
sbb
sbb
cmp
test
aas
leave
gs
adc
mov
sti
ret
jl
mov
push
mov
cltd
jns
cmp
mov
out
sub
lret
cli
ss
add
out
pop
jno
in
mov
repnz
je
mov
pop
lret
test
aaa
lods
or
push
pop
shll
popf
or
lcall
inc
mov
leave
imul
lea
dec
imul
dec
xor
mov
xor
xchg
in
fisttpll
test
movsb
scas
loop
cmp
mov
repz
or
pop
outsb
mov
in
xlat
inc
bound
mov
pop
inc
in
cmp
mov
movsl
pop
pop
hlt
cmp
test
and
loopne
fsubrl
insl
negb
sbb
in
loope
mov
cmp
aas
mov
repz
pop
stc
cmovbe
inc
cmp
or
push
ja
out
cmp
popa
mov
or
inc
scas
mov
push
ds
cwtl
dec
add
mov
inc
fcompl
mov
popf
jb
insb
sub
fidivl
mov
fdivrl
sub
aad
popf
push
out
dec
stos
jl
in
inc
insl
test
mov
test
adc
inc
repz
sahf
call
shll
cwtl
test
xchg
dec
loope
out
or
mov
dec
das
ja
jae
add
mov
insl
xor
test
inc
mov
mov
sub
mov
adc
cmpsb
sub
ret
jmp
cmp
sbb
repnz
les
gs
push
xchg
in
push
sahf
rolb
ss
jmp
add
mov
das
xor
sbb
cmp
cld
icebp
insb
sbb
bound
insb
jmp
dec
std
jle
or
rcll
outsb
fisttps
icebp
nop
pushf
out
aad
and
inc
and
roll
outsb
cmp
ljmp
mov
sbb
roll
out
cmp
push
jbe
stc
jno
cmc
lea
stos
insb
shlb
xchg
repz
out
data16
iret
cltd
sete
cld
pop
out
push
clc
iret
push
mov
xor
clc
mov
add
fwait
add
xchg
pop
loope
and
sub
push
cmp
lahf
addr16
out
test
cli
xchg
mov
jno
push
cmc
cmp
mov
push
popf
or
ret
jno
into
fbstp
fwait
int3
sarl
testb
mov
pop
les
cmp
fsubs
rep
adc
inc
dec
sbb
mov
test
daa
push
testb
scas
in
pop
into
addb
pop
adc
sti
cli
xchg
sbb
cmp
mov
ja
aas
stos
xchg
movsl
stos
mov
or
call
arpl
sbb
ficoms
ss
pushf
fcmovu
cmpsb
cmpsb
sub
out
jmp
add
sub
add
shr
sti
repz
jl
popf
or
lds
sbb
sbb
adc
scas
mov
jns
add
push
rorl
mov
fnstsw
xor
or
ja
push
cmc
inc
mov
ja
cmpsl
jno
cmpsb
mov
cmpsb
mov
or
pop
add
cmp
jae
add
in
loopne
fildl
lock
enter
js
orl
mov
fadd
mov
stos
into
adc
sarb
aaa
add
pop
dec
iret
add
inc
int
insl
in
jne
lret
and
mov
mov
out
divl
xor
pop
in
adc
jnp
pop
xchg
ret
test
or
or
sub
jge
cltd
fs
popf
jl
xchg
fnsave
adc
inc
aam
pop
test
sti
test
aas
flds
cmc
outsb
push
jno
out
ret
enter
mov
imul
adc
cmp
sub
jmp
push
and
test
frstor
lahf
push
in
lret
ficompl
xchg
xchg
pop
in
sbb
xor
stos
xor
sbb
mov
xlat
adc
or
es
jl
cmpb
test
add
lret
lods
shll
add
push
data16
or
shll
xchg
inc
adc
cmpsb
dec
ss
inc
jg
cld
sub
cmp
bnd
xchg
add
add
fisubl
adc
imulb
push
test
jge
cwtl
int
sbb
shll
jnp
xlat
adc
mov
cmp
adc
jns
jo
xor
pop
mov
pop
loope
push
push
jl
insb
jle
pusha
xor
sub
or
cmpl
and
shrl
bnd
repnz
test
stos
aas
cmp
inc
jle
jne
xchg
loope
pop
pop
jb
cmp
pop
ss
or
ljmp
pop
or
xchg
stos
into
inc
or
push
jnp
lea
sti
push
xchg
xchg
adc
push
test
inc
pop
or
sbb
rclb
or
cmp
aaa
ss
push
xor
xchg
pop
sub
dec
push
mov
xchg
rcr
fwait
scas
loopne
in
loope
pop
in
xchg
fmul
das
arpl
cmp
push
jo
mov
mov
mov
scas
mull
add
shll
cli
mov
in
shlb
add
mov
adc
add
push
scas
aad
pop
into
dec
jp
popf
inc
add
fsubp
jmp
jno
sahf
out
in
xchg
xorb
adc
add
imul
or
jae
sbbb
lahf
push
add
icebp
bound
stos
xchg
test
cmp
xor
mov
fs
xor
sub
jp
mov
xchg
inc
pop
xor
mov
jo
push
mov
data16
daa
pop
shrl
iret
scas
sbb
loop
loopne
imull
xor
inc
shlb
rolb
dec
fs
push
imul
hlt
aas
push
sub
test
mulb
sti
loopne
xor
int3
dec
scas
sbb
in
inc
add
adc
incb
pop
pop
jl
sub
rolb
rolb
stc
andb
sbb
stc
sbb
mov
dec
dec
repz
fdivl
imul
imul
xchg
jg
sahf
js,pn
mov
dec
pusha
add
out
scas
fistpll
outsl
add
jae
inc
push
fcomps
fdivrs
push
out
adc
jb
test
leave
out
sbb
ficoml
xchg
ljmp
int
sbb
lds
fbstp
sbb
push
lds
dec
add
inc
adc
shrb
or
daa
xor
dec
imul
cmc
jg
sbb
imul
mov
pop
out
mov
ljmp
adc
bound
arpl
sub
testl
jmp
mov
mov
daa
xor
clc
pop
xlat
xlat
and
cmp
cld
adc
xchg
mov
dec
sbb
pop
pop
pushf
xchg
test
cwtl
or
xchg
lea
inc
sahf
in
repz
mov
sub
int3
mov
cmc
loopne
ret
std
fucomip
xchg
dec
mov
jb
xor
adc
pop
mov
add
sub
or
sahf
pop
push
or
pop
mov
lods
sbb
in
pop
outsl
push
loope
es
xchg
cmpsb
xchg
cwtl
push
test
push
jmp
fs
cltd
aas
and
xor
loope
in
outsb
add
adc
pusha
aas
sbb
repz
popf
incb
inc
ret
or
rolb
pop
fucomp
cmp
int3
std
insl
aas
mov
push
std
stos
mov
cmpsb
pop
sub
ret
or
mov
je
in
mov
dec
loop
adc
ljmp
push
out
rorb
mov
outsb
mov
dec
dec
inc
push
ss
sub
sbb
mov
rol
shll
inc
stc
ljmp
jbe
dec
jg
call
popa
xchg
stos
jnp
jae
fwait
hlt
mov
test
inc
mov
enter
dec
outsb
adc
jl
sti
insb
imulb
lods
jbe
dec
inc
jb
xor
ficomps
push
jge
pop
inc
sar
pop
orl
adcb
popa
push
negl
insb
xor
sbb
enter
dec
out
mov
mov
cld
in
dec
ret
mov
sbb
in
mov
pop
and
cmc
sbb
pop
jp
adc
sti
nop
out
jl
lret
mov
lret
mov
lret
pop
and
cmp
xchg
and
mov
and
int3
lock
add
push
fstp
stos
mov
repnz
pop
inc
xchg
insb
loop
sbb
loop
xor
fmuls
frstpm(287
imul
xor
into
sub
jbe
shll
out
xchg
xor
push
push
stos
cltd
les
rcr
xor
lret
dec
aas
pop
loop
add
enter
je
rol
add
popa
loop
jp
sub
mov
ret
orl
sti
and
push
clc
jmp
jnp
adc
sbb
es
lret
mov
jecxz
lret
fcomps
out
mov
jnp
shll
bound
sub
pop
xchg
push
lds
mov
mov
dec
lea
lods
jp
aam
mov
mov
psubb
outsl
stos
out
aaa
and
in
sub
clc
out
imul
jo
into
ja
fldenv
add
sub
bswap
shlb
ret
pop
dec
in
and
jne
cwtl
shll
sbb
cmp
inc
mov
xchg
dec
fwait
and
lods
sbb
cltd
sahf
inc
xor
dec
in
pop
cmpsb
aaa
ror
outsb
fdivs
sbb
xchg
push
jns
dec
pop
movsl
inc
iret
stos
jns
jnp
addr16
es
lock
adc
popf
hlt
imul
cltd
rolb
dec
scas
inc
push
jae
fisubl
adc
sti
fists
popf
mul
out
inc
jmp
lea
call
testb
out
inc
iret
out
xchg
addl
jns
sysenter
inc
or
fwait
ss
sub
je
loop
lcall
push
rcrl
sbb
std
adc
je
std
cmp
xor
jae
jnp,pn
jle
mov
dec
cmp
sub
mov
adc
mov
bound
push
adc
stos
cmp
addr16
jl
sub
js
cli
insl
std
addb
inc
ss
addr16
rcl
mov
test
or
pop
sahf
scas
insl
repnz
dec
xchg
in
sarb
mov
lret
push
mov
jnp
fildl
pop
xchg
jo
pusha
pop
add
cmp
pop
dec
ficoms
push
shrl
sub
cmp
jecxz
cmp
enter
or
aas
shr
nop
xchg
sub
std
je
adc
mov
lcall
xchg
fmulp
dec
out
cmc
lds
outsl
or
ret
int
lock
mov
pusha
xchg
xchg
cwtl
lods
mov
jb
and
in
ds
mov
dec
push
stos
imul
pushf
shlb
and
pop
xchg
mov
cmp
xchg
sub
gs
fisttpll
push
test
cmp
ffreep
pop
xor
repz
dec
jecxz
dec
cltd
jmp
ja
mov
dec
pop
faddl
pop
cli
xchg
jo
dec
sarb
and
jb
imul
xchg
bound
bnd
lret
inc
dec
adc
xchg
mov
and
xchg
adc
xchg
add
pop
mov
cmp
cmp
push
not
and
sub
push
adc
and
push
add
fwait
and
clc
movsl
jno
cld
sbb
xor
mov
bound
mov
add
push
push
jnp
adcb
insb
hlt
clc
pop
sahf
aas
push
or
adc
push
lret
sti
popf
pop
pop
fsubs
xor
add
jle
cwtl
xchg
mov
gs
mov
ljmp
arpl
xor
insl
sub
xor
jp
pop
dec
lcall
pushf
mov
les
inc
imulb
mov
hlt
sub
shll
testb
roll
jg
push
mov
dec
inc
fcomi
jecxz
arpl
cwtl
pinsrw
sahf
pop
push
int3
mov
or
inc
shrb
shrl
mov
pop
sahf
adc
nop
cltd
mov
cli
das
jbe
out
or
cmp
ret
fistps
sub
sub
popf
adc
lret
sub
pusha
jecxz
cmpsl
movsb
lock
jnp
rcll
jbe
adc
inc
sub
and
ds
subl
fwait
add
jl
sub
adc
mov
mov
sbb
fldcw
jmp
push
cmp
inc
dec
clc
pop
icebp
sbb
jg
lahf
es
xchg
sti
fsubrl
movb
xor
fisubrs
push
lret
jp
adc
inc
cmp
xor
lods
sub
pop
sahf
sub
pop
jns
jmp
movsb
aaa
cwtl
lea
cmp
dec
ret
push
pop
pop
cs
mov
cs
push
es
or
outsl
mov
push
bnd
mov
stos
push
stos
sbb
js
and
push
push
dec
imul
push
ret
cld
inc
mov
cmpsl
call
dec
mov
pop
or
scas
into
xor
rcl
push
lahf
xchg
fcmove
mov
je
mov
mov
lock
mov
stos
stos
icebp
add
std
out
sbb
fcompl
cmpsb
popa
daa
in
fnstenv
xor
cmp
faddp
mov
sbb
pop
loopne
cmp
push
loopne
sbb
arpl
inc
sbb
add
jp
sahf
cmp
dec
pop
out
es
push
movsb
jns
pop
jle
pushf
aad
and
notb
push
jge
mov
dec
into
into
and
shr
push
jg
es
add
dec
dec
sbb
mov
ss
popf
sub
sahf
cmp
out
xor
mov
test
and
adc
add
add
daa
jmp
bound
push
leave
inc
movl
dec
lret
lahf
mov
or
testl
add
ljmp
aaa
jo
mov
data16
mov
pusha
mov
mov
mov
jns
jl
cmp
hlt
cmp
and
jne
cmp
push
lds
sbb
cmc
push
or
mov
sub
test
sbb
stc
jl
and
popa
sahf
xorb
imull
cmpsb
fidivrl
push
mulb
data16
jo
in
int
and
jae
jp
dec
jge
inc
lahf
pop
dec
adc
xor
mov
pop
lcall
mov
hlt
xor
fidivl
es
test
cmp
rorl
into
adc
mov
addr16
loope
push
add
add
push
inc
mov
adc
in
fmuls
jp
negl
lea
mov
mov
aad
add
mov
push
loop
addr16
movsl
insb
xchg
test
mov
seto
in
testb
or
test
push
fwait
gs
add
mov
sbb
sub
mov
jns
add
in
aam
xor
mov
adc
dec
sub
mov
cmp
xchg
mov
sbb
mov
loop
scas
flds
mov
lock
and
xchg
xor
enter
push
shll
pop
mov
popf
rorl
sub
pushf
je
cltd
mov
jno
aad
filds
push
fmull
sahf
xor
mov
sub
testb
not
bound
cltd
loop
or
pop
sbb
lods
es
cmpsl
cltd
insb
jbe
nop
mov
cmp
mov
adc
add
stc
pop
mov
xor
iret
test
push
mov
xor
ss
icebp
push
sti
mov
xchg
orl
scas
loopne
enter
enter
xor
bound
xor
popa
inc
push
in
pop
mov
rcrb
mov
mov
mov
dec
or
mov
inc
cmp
jl
pop
faddl
dec
mov
inc
jb
repnz
push
cmp
mov
pop
jg
aas
adc
pop
xlat
ss
xor
es
stc
test
or
popa
pop
mov
or
loopne
negb
sbb
dec
lods
nop
xor
daa
cmp
dec
mov
aaa
pop
mov
mov
mov
pop
jbe
mov
adc
bound
outsb
add
pop
jnp
mov
std
stc
bnd
mov
in
or
push
inc
test
lods
ds
inc
je
int3
xchg
jbe
in
and
mov
popa
loop
or
rcr
arpl
cmp
iret
pop
lods
push
cmc
push
dec
mov
inc
movsb
xchg
xor
in
aam
cltd
rclb
mov
and
lods
loopne
jle
mov
xchg
cwtl
aam
and
dec
icebp
xor
jmp
daa
mov
dec
negl
xchg
lret
hlt
jb
dec
sbb
jmp
xor
jl
sbb
push
xchg
pop
fisttpll
pop
or
jae
into
jnp
mov
fidivs
pop
pop
xor
popf
scas
xor
push
inc
add
imul
dec
testb
mov
inc
cli
push
sti
adc
stos
outsb
shr
cwtl
imul
xor
pop
mov
fistpl
test
jmp
and
or
and
cmp
jle
push
shl
int3
xor
push
add
repz
mov
cmp
cld
divb
stos
sbb
lds
jno
fisubs
sub
into
mov
fwait
and
and
dec
sub
stos
movsb
dec
cli
cmp
xor
xor
pop
sub
repz
sbb
aas
mov
out
and
cmp
pop
pop
ret
or
xchg
out
lret
jb
out
mov
inc
outsl
inc
flds
in
or
popf
push
sahf
insl
ja
mov
inc
jnp
mov
add
mov
push
ss
or
ds
in
mov
lock
leave
shlb
stos
xchg
aad
jno
cmp
in
subl
adc
loop
stos
cmp
mov
adc
pop
lods
sbb
xchg
scas
lret
inc
popa
ljmp
xor
adc
mov
mov
icebp
add
sbb
fmulp
inc
and
subb
adc
mov
mov
sub
sarl
adc
pop
in
mov
lret
inc
mov
ficomps
repnz
popf
jnp
rcrb
xorl
pop
ret
out
mov
out
and
mov
rorb
adc
repnz
inc
into
pop
insb
and
cmp
repz
or
movsb
loope
fsubrl
sbb
das
es
daa
lcall
fwait
dec
jne
xchg
loopne
or
adc
mov
lock
mov
and
pop
add
inc
dec
repnz
or
idivb
loop
sahf
mov
mov
inc
lahf
or
or
inc
jae
cltd
mov
dec
push
mov
mov
xchg
mov
repnz
push
mov
pop
lock
sub
mov
cltd
push
push
cmpb
dec
inc
ja
add
jle
inc
imul
jo
xchg
aam
std
mov
std
pop
popa
xlat
mov
sub
pop
pop
stc
adcb
ret
sub
inc
loopne
mov
out
cmpsl
aad
iret
sar
and
lods
fistpl
and
sub
cli
pop
out
cmp
arpl
insb
pushl
jnp
push
es
testl
inc
outsb
lods
xor
sub
sbb
cmpsl
fwait
jbe
inc
lahf
aas
mov
mov
dec
sbb
push
pop
adc
jge
loope
jmp
in
jne
xor
pop
lock
push
pop
mov
adc
insl
sbbb
sbb
out
popf
repz
test
and
xchg
loope
ret
mov
add
xor
enter
push
fisubs
or
jmp
or
int
jnp
int3
pop
cmp
pop
xchg
fldl
lea
popf
push
jae
xor
fnstenv
pop
push
push
fsubl
add
fs
sarl
dec
sbb
mov
add
dec
jb
cwtl
frstor
mov
push
xchg
add
and
mov
iret
cltd
jmp
pop
hlt
and
lds
fcmovnbe
out
pop
pop
dec
and
xchg
aaa
adc
and
test
loop
dec
sbb
push
mov
mov
add
ret
movsb
hlt
pop
pop
mov
cmp
or
in
xor
add
push
pop
and
lret
push
imul
aas
sti
jecxz
xchg
sahf
std
jl
sbb
pop
push
je
out
test
sub
lcall
lods
gs
lcall
lahf
out
pop
xchg
xor
rcll
in
in
xor
push
sar
xchg
int
lret
je
mov
adc
mov
add
lock
cmpb
aam
stos
lret
test
iret
inc
or
pop
out
inc
aam
in
and
xchg
jmp
lods
add
jbe
jae
jecxz
pop
push
inc
mov
push
adcl
sbb
sbb
jnp
add
lahf
loopne
faddl
shll
mov
in
xchg
sbb
gs
scas
aam
mov
stc
pop
inc
push
cmpsl
loopne
int3
pop
pop
dec
xor
insl
fwait
xchg
scas
fisubrl
int
or
out
fisttpll
fcmovnbe
mulb
xor
insl
mov
fadd
push
in
inc
push
mov
stos
arpl
push
cmp
inc
sub
pop
xchg
cmp
iret
push
ds
arpl
sbbb
jae
and
je
ljmp
pop
xor
xor
jno
sub
fstl
jge
jmp
and
scas
lock
jbe
lret
sbb
les
std
cltd
cmc
sub
es
dec
xchg
pop
push
add
push
push
aas
xor
push
add
int
lret
jmp
gs
stos
adc
pusha
shrl
adc
icebp
fwait
and
adc
and
out
mov
xor
mov
xchg
pop
xlat
xchg
lods
inc
arpl
clc
xchg
xchg
imul
arpl
loopne
scas
ja
push
lcall
dec
sti
daa
lret
dec
shlb
enter
dec
lret
incl
mov
jo
cmp
and
push
ret
rorl
movsl
fldenv
sarl
out
jne
cld
rcr
push
jp
mov
inc
js
inc
aam
fdivl
loope
sbb
jle
add
sbb
push
fidivs
cmp
leave
out
out
lock
push
outsb
push
push
jne
stos
jb
gs
pop
imul
pop
jg
jns
fs
adc
inc
mov
daa
cmp
mov
mov
cmp
enter
in
jp
addr16
or
fldenv
pop
xor
mov
pop
push
scas
sub
mov
and
in
ja
enter
pop
jg,pt
sbb
or
sbb
jmp
fsubs
pop
mov
testl
and
scas
add
loopne
or
xchg
out
loope
xchg
pusha
aaa
add
cld
fistpl
inc
xchg
mov
sbb
es
nop
test
or
jno
inc
mov
iret
js
decl
dec
dec
in
test
inc
add
cmc
add
or
jmp
aam
push
pop
fadds
enter
test
cltd
lret
repnz
mov
and
int
movsb
jg
lret
or
mov
es
mov
fdivrl
add
movsb
jns
stos
mov
or
movsb
insl
in
lods
loope
xor
inc
cmp
mov
mov
jae
repz
lret
push
cmp
in
push
push
cmpsl
stc
xchg
clc
mov
arpl
xchg
mov
jno
push
sub
movsl
movsb
subl
in
and
and
mov
jne
fs
lcall
call
add
nop
fdivs
fxch
pusha
adc
or
js
cld
dec
aam
lea
cmp
hlt
cwtl
cmpsl
xchg
sub
das
sbb
sbb
cltd
push
add
jne
xchg
jge
cmpsb
clc
xor
cmpsb
scas
mov
cmp
push
cli
pushf
and
push
inc
das
call
loop
shl
jno
roll
push
ret
mov
loope
test
mov
xchg
push
and
mov
scas
pop
sub
dec
nop
push
jl
sahf
xchg
dec
out
add
inc
mov
mov
inc
mov
outsl
cld
jp
pop
in
jg
pop
push
ds
repnz
pushf
or
movsl
ret
insl
inc
lea
push
jne
cmp
cmpsb
roll
push
pop
xor
inc
pusha
stos
hlt
aad
ds
xlat
jle
enter
ret
cmpsl
jb
shlb
pusha
cmp
test
or
jge
rorl
negl
cmpsl
push
fdiv
insl
adc
mov
or
sub
out
ret
mov
or
out
adc
cs
popa
iret
sbb
fistps
jno
sarl
add
mov
add
jb
adc
inc
repz
pop
push
pop
and
adc
jecxz
cmp
pop
in
sub
lods
sub
adc
jbe
enter
in
pop
mov
movb
jne
aaa
dec
add
jmp
cwtl
xor
cmpsb
push
fnstsw
ljmp
jbe
shlb
push
call
add
mov
cli
nop
lret
jae
mov
push
dec
add
adc
cmpsb
sarb
aaa
sbb
rol
dec
xor
inc
gs
testb
imul
imul
jae
arpl
mov
xor
rcll
add
fisttps
pop
jecxz
sahf
dec
sbb
test
push
mov
lret
cmpsb
or
jge
push
mov
dec
and
arpl
cmp
into
push
pop
enter
rcrl
popa
xor
mov
sbb
iret
push
cmp
lods
nop
fstps
bnd
std
jmp
push
cmp
add
daa
or
lea
xor
mov
sti
fcmovnb
fldl
cwtl
fisttpll
pop
sub
icebp
pop
popa
stc
out
incl
xor
dec
pop
scas
push
fcoml
scas
ret
movsl
push
jl
mov
dec
loope
scas
add
lods
jp
popa
mov
or
iret
mov
cmp
or
or
pcmpgtw
mov
cmp
xlat
nop
or
out
aam
xor
jae
and
inc
push
fistpl
add
lods
dec
jno
bound
repnz
jo
adc
fisubs
jns
sub
dec
or
nop
repz
push
rorl
xor
inc
sbb
adcl
mov
sbb
test
jb
jge
inc
cmpsb
or
pop
xchg
mov
sbb
lret
out
clc
push
jne
adc
mov
pop
rorb
mov
enter
xchg
mov
pushf
cmp
cmp
sub
mov
fcompl
add
add
je
in
inc
pop
aaa
adc
push
fldt
jecxz
dec
out
jnp
call
lods
outsl
mov
jne
outsb
imul
das
xchg
lods
cmp
insl
and
out
jl
add
sti
pop
dec
xorl
loop
xchg
jo
js
jbe
ljmp
lahf
ja
push
or
jnp
mov
movsl
push
ljmp
aas
insl
xchg
xchg
mov
loop
hlt
insb
cmp
jmp
inc
std
outsl
xchg
cmp
xor
jecxz
xor
subb
std
cmovg
ja
pop
call
inc
fmull
pop
xchg
xor
movsl
xchg
jle
sahf
fwait
inc
movsb
out
sbb
sub
pop
repz
loope
jl
mov
ret
test
mov
aam
mov
mov
in
pop
push
aam
cmc
mov
mov
xchg
adc
jg
scas
mov
xchg
iret
pushl
jne
adc
mov
mov
fadd
lds
mov
das
mov
sbb
shlb
inc
mov
fstp
pop
iret
imul
jge
arpl
push
test
xor
fimull
sub
push
addb
xor
rorl
sub
sbb
jp
divl
imul
mov
xchg
movsl
insb
mov
jp
inc
outsb
loop
bound
inc
jg
jo
mov
call
cmpsb
jmp
cmc
inc
sub
adc
jmp
adc
lcall
push
mov
roll
dec
aas
es
std
call
jecxz
inc
xchg
mov
mov
fstl
addr16
fdivs
mov
aad
jo
outsl
and
jp
fcmove
jle
cmpb
pusha
lret
pop
cwtl
out
cmp
jmp
jl
inc
adc
dec
push
std
leave
push
jge
jae,pn
jbe
cmc
jno
xchg
mov
cmp
lds
xlat
pushf
hlt
ficoms
xor
lods
dec
rclb
jne
xor
cmp
incb
cli
and
insl
pushf
in
mov
jbe
ss
hlt
mov
cli
pusha
push
dec
leave
outsl
ljmp
jl
add
push
cmpsb
in
clc
scas
ljmp
dec
das
bound
pop
pushf
fisttpll
sti
shrl
cmc
fidivrl
sbb
cmp
adc
popa
dec
arpl
scas
inc
fwait
mov
push
sti
loope
pusha
xor
and
dec
cmp
dec
repnz
mov
imul
add
lahf
insb
mov
mov
jo
dec
rcr
xor
rcrl
lods
push
sbb
adc
xorb
dec
repnz
push
sbb
xchg
jge
jecxz
mov
bound
pushf
jmp
fcomp
mov
push
popa
cmp
fstps
inc
dec
aaa
out
xchg
pushf
cmp
add
push
pop
lds
hlt
imul
shr
dec
arpl
and
in
xor
mov
push
ret
das
push
adc
movb
cmp
in
lcall
cmp
push
add
es
nop
inc
jbe
imul
ja
and
frstor
outsl
mov
cmpsl
adc
dec
xorl
out
mov
and
aaa
cld
in
push
hlt
xorb
push
mov
jmp
push
repnz
cmp
jne
cmp
mov
leave
ss
push
sub
adc
dec
jo
mov
dec
or
mov
mov
fwait
push
fnstenv
mov
inc
mov
call
push
or
lahf
cmp
dec
mov
add
cmpsl
mov
fidivrl
cltd
popa
mov
pop
ret
inc
add
dec
mov
rolb
cmova
pop
push
iret
out
push
cmpsl
mov
mov
mov
add
lret
imul
test
outsb
ljmp
sub
scas
stos
ds
mov
test
jle
jns
xor
repz
xchg
push
movsb
mov
inc
loope
sbb
out
or
xchg
inc
aaa
stos
push
xchg
test
pop
xor
sbb
push
sub
iret
nop
aam
push
jae
insl
out
rcr
sub
mov
daa
sub
sbb
inc
imul
.byte
.byte
sahf
.byte
