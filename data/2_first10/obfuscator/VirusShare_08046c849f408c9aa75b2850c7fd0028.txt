out
cmp
xor
xor
and
mov
or
mov
mov
sarl
inc
cmp
mov
leave
rcr
mov
push
loope
sbb
xchg
iret
sbb
sub
sub
unpckhps
mov
out
add
and
dec
sbb
dec
push
in
in
nop
dec
ljmp
jns
mov
aas
adc
das
fistpl
dec
xchg
aaa
aaa
stc
pop
in
xor
js
jle
pop
pop
imul
and
dec
push
negl
pop
dec
or
je
add
enter
into
loop
add
mov
push
lea
xor
cmpsl
or
fs
and
inc
sbb
cmpsl
jp
mov
push
jge
mov
jns
scas
out
in
xchg
fs
stos
sbb
mov
adc
pop
enter
add
sub
icebp
mov
mov
pop
and
sarb
and
mov
jecxz
aam
pop
lock
out
inc
inc
push
ljmp
jne
dec
xor
mov
dec
clc
sbb
inc
jns
int
shr
push
xchg
gs
bound
dec
cltd
mov
lods
pusha
cs
lcall
call
xor
lods
pop
imul
dec
mov
cs
add
jl
ljmp
mov
iret
add
mov
enter
add
sbb
fbstp
cmpsl
fstps
out
lods
mov
xchg
jge
add
mov
inc
pop
pop
lea
xchg
loop
adc
mov
es
dec
fcmove
call
sbb
mov
push
lock
dec
pop
or
inc
rolb
fisubrs
out
pop
mov
inc
cltd
mov
leave
and
icebp
pop
cwtl
in
cltd
jo
inc
and
out
sbb
pop
inc
int3
mov
lret
movsl
mov
dec
arpl
mov
ret
inc
and
loopne
add
sbb
dec
gs
in
add
mov
je
je
xchg
andl
xor
aaa
dec
out
sub
sbb
test
mov
loopne
loopne
or
mov
lds
clc
mov
push
jmp
loopne
int3
adcb
cli
repz
out
popa
jno
jo
mov
cmc
js
mov
out
push
fs
inc
jb
mov
les
mov
out
adc
pop
xchg
or
sbb
add
jno
out
fwait
dec
faddl
cli
sbb
aad
and
mov
ljmp
inc
xchg
mov
push
shll
mov
cli
or
cmp
rcl
loopne
add
int
push
aaa
mov
sti
mov
leave
rclb
pop
cmp
stos
test
mov
mov
mov
or
mov
mov
push
cmpsl
push
andl
xor
std
and
mov
popa
mov
xchg
inc
adc
insb
dec
inc
cmp
sbb
adc
mov
cmp
sarb
fisttpll
loop
rcll
adc
jmp
push
or
test
mov
push
mov
or
loop
loop
jmp
mov
es
pop
movsl
shrb
gs
xchg
es
jns
idiv
push
sbb
clc
jmp
icebp
sbbl
add
loopne
mov
insb
jmp
push
aas
jmp
cltd
fwait
cli
push
test
in
lds
mov
cld
ret
cmp
popf
adc
loopne
inc
xor
xor
and
mov
sbb
cs
sub
jmp
lahf
scas
repnz
add
dec
jp
pusha
add
popa
xchg
cmp
xchg
enter
jb
pop
xchg
popf
xchg
in
pop
xor
rolb
xchg
mov
or
popf
xor
jne,pn
mov
sbb
xchg
xor
dec
xor
aam
or
dec
xchg
xchg
or
sbb
std
sub
test
data16
mov
clc
xchg
xor
add
mov
fisubs
addr16
lahf
gs
fidivrs
pop
mov
dec
das
pop
inc
popf
and
adcb
outsl
inc
fistps
popa
andl
into
sub
jmp
movsb
shlb
cmc
jmp
addb
add
xor
push
mov
adc
push
cmp
sbb
and
leave
movsl
inc
jp
xor
mov
rcll
dec
dec
stc
gs
aad
adc
aaa
gs
into
repnz
jae
xchg
sub
fs
lds
mov
sti
mov
mov
inc
cmpsb
ficoml
mov
aad
jne
lods
dec
sbb
mov
jb
stos
clc
pop
loop
bound
push
mov
push
movsl
mov
inc
aad
jo
or
mov
and
leave
inc
je
aas
xlat
cmp
aad
rolb
inc
jb
rclb
and
sahf
shrl
inc
mov
xor
mov
sub
cmp
push
xchg
pusha
push
sbb
jne
push
cmp
popl
mov
sbb
outsb
out
repnz
xchg
adc
mov
mov
cld
adc
add
pop
pop
lods
xchg
xor
clc
sbb
in
fnsave
loopne
push
sbb
mov
mov
js
pop
xlat
push
adc
fcomps
ret
push
jae
iret
nop
dec
jl
sbb
push
mov
mov
jno
jge
inc
fdivrs
out
cmp
and
mov
mov
inc
xchg
lods
or
notl
dec
fwait
int3
aaa
iret
mov
andl
scas
or
jmp
sahf
dec
jecxz
push
popa
or
inc
pop
mov
imul
add
lret
lods
movsl
push
jp
stos
dec
hlt
cmp
roll
xchg
ds
fisubrs
out
jecxz
jle
lea
imul
inc
aad
mov
push
mov
cmp
add
sub
mov
hlt
inc
out
sub
leave
add
pop
mov
jmp
mov
push
or
nop
dec
jae
cmpsl
xor
out
jecxz
xor
test
ljmp
push
lea
addr16
adc
mov
int
cli
mul
jns
pop
sbb
fwait
mov
les
aaa
repz
inc
fildll
cmp
rcll
mov
sahf
lcall
add
repnz
shlb
test
cmp
out
loop
pop
dec
push
push
clc
pushf
stos
ja
push
push
fwait
ja
inc
or
outsb
cmp
repz
adc
enter
out
dec
mov
xchg
stc
scas
xchg
cmp
sti
dec
je
mov
cmc
mov
add
push
enter
insb
xchg
repnz
out
pop
ret
aad
push
sbb
pusha
jae
sub
inc
mov
pop
sub
lods
arpl
xchg
movsb
push
add
ja
aam
movb
xor
pusha
mov
xchg
out
jmp
mov
pop
cwtl
pop
dec
dec
sti
inc
pop
pop
clc
lock
je
lret
dec
filds
scas
cmp
aaa
and
adc
std
lock
dec
rorl
lret
push
cli
fsubl
lahf
mov
xchg
fldl
inc
xor
adc
cmp
les
xor
cmp
sti
repz
push
mov
jecxz
sbb
outsl
js
test
push
adc
stos
ljmp
pushf
push
add
aas
sub
imul
xchg
xor
sub
push
scas
sub
push
or
push
sahf
stos
cmp
mov
dec
dec
mov
xor
mov
pop
lock
xchg
cli
addr16
dec
movsb
decb
repnz
push
sub
aaa
out
aad
mov
hlt
mov
je
adc
inc
or
xor
addr16
and
insb
xor
dec
std
inc
rcl
jge
and
dec
mov
cwtl
popf
push
add
ja
shl
stc
push
and
or
and
es
jb
mov
lds
cmpsb
add
adc
mov
or
or
lock
sub
xor
add
pop
adc
cwtl
movsb
cmp
push
mov
pop
nop
in
adc
adc
xor
and
xchg
int
pop
dec
push
data16
sbb
cmp
push
std
xor
xor
mov
repz
test
jp
daa
inc
neg
lret
cmpl
add
jns
or
into
adc
mov
aas
insb
incb
xchg
sti
es
nop
sbbb
sbb
or
jmp
cltd
sub
outsl
cmpsb
cld
sub
sbb
mov
cltd
xor
les
insl
scas
es
lds
test
pop
andl
pop
jecxz
hlt
cmpsl
mov
xchg
mov
jp
xchg
rcrl
and
xor
mov
jge
loop
ss
rclb
movl
mov
lods
jmp
pop
dec
cmp
ret
icebp
ljmp
sub
movb
fisttpl
or
add
and
popa
aas
pop
add
lods
out
shrb
push
mov
fcmovbe
xchg
icebp
sbb
xchg
pop
pushf
out
dec
lods
stos
sub
push
sub
sub
dec
test
mov
dec
repz
in
mov
ljmp
je
pop
jnp
push
scas
shrl
shll
cmp
lds
mov
or
fisubl
xor
mov
sbb
xchg
and
jle
mov
sbb
fcmovnb
inc
cmp
test
into
push
js
insl
mov
data16
and
mov
xchg
mov
jg
shlb
cmpsb
xchg
test
mov
leave
push
jbe
aad
xor
test
testb
jne
push
sbb
int
add
das
into
test
sub
imul
xchg
add
inc
andb
jno
fstpt
fwait
sbbl
stos
test
add
cli
mov
push
xchg
pop
stos
fwait
push
test
fcoms
jbe
into
loop
iret
lock
fs
inc
ja
inc
cs
add
int3
xchg
mov
imul
lret
cmp
imul
pop
mov
cmc
push
dec
pop
cmc
mov
mov
daa
in
in
jg
loop
scas
mov
fisubrl
dec
mov
je
std
stos
arpl
push
add
pusha
ss
sub
sar
dec
loope
mov
insl
leave
ja
xchg
out
scas
movsl
repz
lcall
push
ret
not
std
or
cmp
sub
mov
mov
ljmp
pop
xlat
push
stos
pop
mov
jle
stos
push
inc
and
and
insl
outsl
loope
jle
or
pop
mov
bound
cmp
nop
std
add
popl
xchg
xor
shll
dec
ljmp
int
in
iret
jl
jmp
imul
push
popl
sbb
scas
adc
and
and
and
dec
and
fsubl
mov
or
mov
in
cmpsl
out
jo
xor
xor
jae
adc
xchg
stos
out
push
nop
or
push
stc
cs
xor
xchg
loope
push
rorb
xor
cmp
mov
js
cmpsb
roll
scas
scas
dec
adc
xchg
popa
rcrb
imul
sub
mov
mov
and
pushf
in
add
lahf
lods
jb
outsl
xchg
pop
call
inc
mov
int3
jae
push
inc
mov
mov
xchg
push
outsb
movsb
and
or
lods
pop
pop
add
pop
or
dec
mov
daa
test
aad
pop
pop
aaa
sbb
mov
inc
ficompl
push
push
push
mov
or
or
dec
sub
test
icebp
loop
in
mov
adc
movsb
mov
into
and
mov
stos
push
sub
add
movsb
jae
xor
fcomps
xchg
lds
ficoms
cmc
add
movsl
mov
icebp
fimull
xchg
or
scas
ja
inc
push
popa
lds
rorb
push
stos
das
xor
xchg
adc
mov
movsl
scas
in
loope
es
jne
xrelease
push
mov
push
mov
pop
fbstp
mov
in
sti
adc
lds
jb
fisubl
adcl
jg
mov
jns
movsl
push
fadds
mov
push
jg
add
ds
je
lock
pop
divl
jecxz
ja
sub
xchg
add
icebp
cltd
xor
jne
pcmpgtb
leave
in
add
das
nop
jl
xor
addr16
bound
imul
imul
xor
push
xchg
nop
movsb
mov
mov
and
and
test
cmp
clc
push
xchg
mov
and
rcrl
adc
aaa
mov
js
jne
pop
jge
and
scas
or
pop
std
mov
fwait
scas
mov
xor
pop
rcr
push
sbb
js
lret
inc
sti
test
mov
sbb
pop
mov
pusha
inc
and
scas
pop
out
adcl
add
es
xchg
jno
mov
cmp
aam
test
les
imulb
mov
jne
lea
shr
and
fstp
push
mov
xor
lods
lret
mov
pop
daa
xchg
sub
add
mov
aas
mov
jecxz
leave
push
add
mov
repnz
enter
insb
pop
in
pop
inc
test
ss
sbb
inc
bound
or
cli
sbb
push
mov
xor
mov
pushf
aad
fmuls
pop
jno
mov
insl
add
and
rolb
dec
pop
aad
outsl
movl
ljmp
dec
je
add
scas
arpl
divb
dec
les
mov
mov
jnp
sbb
sahf
mov
test
pusha
cmp
jbe
dec
sbb
xchg
lmsw
fistl
and
adc
xor
adc
lcall
movsb
pop
fwait
loop
xchg
push
mov
jecxz
test
mov
es
jb
lcall
dec
jne
enter
jns
hlt
jle
push
daa
pop
cmp
out
mov
repnz
in
mov
push
sub
imul
out
loop
jo
add
gs
mov
xor
and
or
into
jmp
ret
test
pop
add
xor
insb
dec
cmp
xor
cs
das
js
pop
test
jg
negb
in
and
lcall
leave
pop
mov
test
or
and
test
lcall
inc
dec
dec
fsubs
mov
in
in
daa
gs
ss
int
int
xchg
or
divl
call
repz
cmp
pop
dec
jp
in
jbe
xor
sub
out
push
cwtl
outsb
mov
idiv
rclb
push
inc
loopne
cmp
push
into
pop
nop
cltd
mov
dec
sahf
cmp
subl
jmp
lret
cmp
mov
sbb
shl
or
cmp
bound
and
jmp
nop
or
es
gs
pop
cmp
xor
mov
pushf
loope
scas
push
out
mov
out
xchg
not
adc
jae
push
inc
repz
loope
jnp
jl
dec
jmp
testb
cli
pop
pushf
stos
in
dec
fcoml
pop
out
popf
ja
jl
push
in
fidivrs
add
nop
push
cmp
and
ja
lahf
push
popl
dec
popa
insb
mov
add
dec
cmp
test
test
adc
inc
mov
ds
in
lcall
sub
scas
stos
cmp
cmp
cmovp
lock
test
sub
fstl
sub
icebp
enter
sbb
xorb
sbb
cmpsl
pop
cmp
and
addr16
lcall
inc
stos
fistl
cs
push
fisubrs
xchg
roll
xor
add
fbstp
lcall
rolb
sub
jge
stos
cmc
pushl
mov
bound
test
test
xor
gs
pop
sbb
por
js
pusha
adc
jmp
dec
bound
mov
insb
mov
or
or
sub
mov
cld
mov
dec
xor
push
gs
dec
or
inc
test
xchg
mov
loop
sub
mov
out
stos
clc
in
push
inc
push
out
test
daa
shlb
lahf
and
lods
push
mov
sub
mov
fisttpll
nop
rcl
movsb
pop
cld
stos
outsb
push
ss
xchg
xchg
add
fadd
test
xchg
pop
pop
popf
sahf
pop
push
enter
push
and
jl
xor
out
sub
gs
out
sbb
lea
shrl
mov
popa
fsubrl
popf
sub
sub
stos
jg
mov
js,pt
xchg
jmp
jmp
inc
nop
nop
adc
push
mov
mov
imul
loopne
loope
popf
xchg
inc
xor
jno
xor
push
or
in
sub
cwtl
dec
bound
dec
insb
sub
lods
mov
std
cmp
data16
mov
stos
movsl
dec
ss
adc
sub
js
push
cmp
inc
lea
ret
sti
fsubrl
xchg
pop
sbb
jl
xchg
sub
cltd
pop
scas
mov
sub
mov
xor
dec
cmp
dec
rcl
cltd
in
push
rolb
lods
movsl
push
enter
pop
cwtl
popf
pushf
mov
xchg
mov
lock
push
imul
shlb
xchg
std
push
je
xlat
movsl
insb
or
cmpsb
and
inc
xor
andb
inc
mov
push
cmpsb
popf
mov
or
testl
lret
fists
shl
mov
pop
cmp
pop
inc
push
jmp
jp
xchg
pop
fcmovnu
daa
or
add
lock
xor
js
sarl
push
sti
imul
sub
mov
out
pop
loop
xchg
shr
jp
fnstcw
jg
rorb
jmp
cmpsb
insl
popa
cld
rcrl
xchg
dec
lahf
jl
and
mov
push
fwait
loopne
stos
mov
mov
arpl
or
sub
pop
xor
pop
xchg
add
xchg
pop
mov
sub
bound
aam
out
fwait
pop
adc
sub
add
mov
dec
add
push
add
clc
insl
or
fcomps
xor
jle
inc
pop
lods
sub
push
dec
out
pop
cltd
xchg
je
out
loopne
xchg
lret
and
sbb
nop
cmp
lods
mov
pop
fsts
sbb
fmuls
cld
jb
pushf
mov
shl
mov
loopne
outsl
loopne
insb
mov
and
jno
cs
xchg
mov
mov
test
sbb
lcall
xor
lea
aam
or
xchg
pop
test
xchg
pop
push
ja
in
out
movsl
sbb
les
pop
call
repz
in
fwait
push
mov
push
jbe
fists
fldcw
imul
fstps
outsb
pop
and
mov
bound
repnz
cmp
adc
fisttps
mov
inc
out
inc
push
sub
sub
xchg
add
xchg
outsl
repnz
pop
cmpsl
ljmp
push
out
adc
ret
push
icebp
push
jmp
mov
mov
xchg
pop
xor
nop
pushf
decb
pop
inc
dec
adc
and
pusha
clc
or
mov
je
test
push
push
push
xchg
mov
push
lea
adcb
cmpsb
fwait
out
or
mov
sbb
sub
dec
lahf
adc
mov
ret
stos
not
lods
sbb
jo
fbstp
fmuls
notb
rcr
stos
arpl
aas
es
jl
mov
rcll
and
fisttps
cwtl
pop
mov
or
cld
repz
sbb
push
cwtl
adc
in
lcall
adc
inc
das
arpl
ds
rolb
lds
stc
dec
pop
adc
les
ret
push
dec
pop
imul
adc
out
imul
adc
setbe
movsb
addb
popa
push
mov
loope
push
add
andb
inc
push
dec
inc
jg
xor
les
xchg
sbb
fldl
mov
dec
stos
fimull
test
imul
hlt
mov
mov
xlat
xchg
je
cli
cmpb
fisubl
or
loopne
mov
cmp
dec
pushf
cmp
cltd
mov
adc
aas
push
jge
mov
lods
pop
faddp
dec
mov
xor
xchg
mov
pusha
jnp
mov
es
xor
out
mov
mov
out
pop
les
push
out
xor
dec
aam
fsts
ret
jnp
shrb
jecxz
jno
adc
adc
je
imul
push
push
push
and
mov
xchg
push
in
ficoml
pop
inc
adc
lcall
gs
pop
clc
mov
aad
loop
pop
push
mov
mov
dec
add
and
lods
sbb
icebp
add
jmp
sbb
addb
pop
and
mov
pop
cmp
mov
push
shr
dec
xchg
lods
lahf
pop
jb
cmpsb
sbb
pop
outsb
and
pop
loopne
test
xchg
xor
xor
push
cmp
mov
pop
mov
lcall
pushf
clc
xchg
sbb
je
pop
jl
jo
pushf
jle
push
adc
jecxz
xor
pop
incb
adc
and
pop
cmc
rcll
xchg
sti
mov
pop
dec
mov
xchg
cmpsl
ljmp
xchg
lret
mov
jb
jmp
inc
sub
and
rdtsc
or
or
sbb
dec
mov
sahf
adcl
xchg
data16
add
xor
push
adc
aaa
scas
cmp
xor
inc
xor
xchg
jns
call
mov
cmc
testl
xchg
mov
mov
xchg
arpl
pusha
cmpl
dec
push
add
and
stc
push
sub
xchg
dec
cmpsb
or
add
leavew
mov
sbb
and
pop
or
test
out
aaa
cmpsl
je
lea
popf
push
mov
std
xchg
jge
nop
mov
ljmp
push
scas
mov
out
test
mov
push
popa
aaa
daa
sbb
shl
push
jge
jne
jb
mov
xchg
jge
cld
or
daa
and
or
add
pop
outsb
loope
lods
push
clc
mov
les
pop
divl
fisubs
sub
and
sti
mov
jecxz
stc
xchg
ja
mov
stos
mov
in
adc
mov
arpl
lock
bound
xchg
pop
outsl
out
roll
filds
stos
insb
aas
ret
mov
inc
mov
mov
scas
push
hlt
outsb
mov
jl
test
les
mov
ret
je
or
xchg
push
mov
push
sbb
scas
mov
arpl
fstl
cwtl
mov
std
jle
jnp
in
sbb
imul
pop
insb
inc
ss
roll
ds
sbbl
jo
mov
and
aad
pusha
dec
xchg
mov
xchg
cli
imul
mov
pop
scas
loope
in
mov
into
das
xchg
sub
pusha
and
push
mov
sub
lcall
ficomps
sub
xchg
aaa
movsl
out
jp
xchg
or
xchg
mov
loop
ret
sub
jb
push
shlb
xchg
jmp
dec
movsb
fs
mov
adc
loopne
outsl
hlt
loopne
arpl
jp
mov
mov
cs
mov
jne
pop
mov
push
dec
pop
das
pop
jmp
pop
xor
push
cmp
jne
push
mov
xchg
pextrw
scas
push
dec
lret
mov
jns
std
cmp
fcomip
adc
popl
sub
je
jmp
xor
dec
pop
jns
test
mov
fwait
xchg
stos
cmpsb
test
shrb
or
into
sbb
and
cmpsl
scas
enter
out
adc
add
pusha
out
fistps
xor
aad
xchg
mov
rclb
loope
mov
dec
push
or
dec
xor
test
andl
lret
cli
pxor
mov
push
inc
pop
icebp
jae
test
jb
cmp
scas
add
scas
out
sbb
in
xor
xchg
popa
dec
cltd
add
sbb
push
mov
das
mov
ret
getsec
add
ret
inc
pop
mov
mov
pusha
scas
lcall
not
xor
inc
xchg
mov
ja
push
out
jne
std
cwtl
sti
mov
pop
mov
or
lret
js
and
jb
pop
xchg
xchg
dec
mov
icebp
aam
daa
add
inc
sbb
in
inc
add
andb
insb
enter
pop
push
mov
aad
dec
lea
cmovg
add
dec
insb
dec
and
popa
xchg
fadds
inc
enter
orb
pusha
inc
pop
daa
outsb
inc
dec
scas
add
popf
orb
fsts
mov
idivl
mov
sub
push
cmp
push
hlt
int
jne
in
adcl
mov
push
sbbb
mov
sbb
jge
inc
sub
cli
repnz
movlps
les
jae
mov
out
dec
cli
in
mov
cmpsb
pusha
mov
aam
pusha
cmpsb
pop
push
aaa
add
inc
pop
xchg
out
fsubrs
int3
xor
cwtl
leave
sub
mov
xchg
notl
jb
mov
mov
mov
mov
insb
or
inc
mulb
xor
cmpsl
inc
hlt
lcall
subb
or
call
add
roll
lret
fisubl
in
aam
xchg
daa
push
lods
cmpsb
in
int
int3
and
push
and
mov
rorl
add
mov
shr
push
xor
or
loope
lea
mov
inc
in
cwtl
push
movsl
sub
sub
add
mov
push
jne
mov
pop
jo
repz
inc
and
inc
adc
call
add
popa
dec
movb
stos
mov
lock
mov
sub
pop
jl
pop
or
popl
jle
orb
jo
mov
xchg
dec
cltd
push
aam
data16
mov
aaa
or
jb
sub
dec
movsl
jecxz
cmpsb
out
jp
rol
cwtl
scas
xor
push
data16
jmp
enter
pushf
call
xor
outsl
daa
inc
xor
shrl
pushf
push
scas
std
ret
mov
mov
fdivr
xchg
inc
cmp
in
jge
or
mov
popf
sbb
xchg
jmp
lods
pop
jnp
mov
mov
ds
jne
cs
add
and
hlt
mov
les
pop
fnsave
stc
movl
aam
sbb
push
sbbl
imul
fsubs
stos
and
or
xor
int3
test
xor
in
add
mov
cmp
pop
adc
addr16
test
lods
sbb
sarb
lahf
jge
xchg
rol
movsb
inc
push
push
inc
xor
mov
cmp
fidivrl
push
mov
mov
adc
std
sahf
dec
xchg
add
dec
jmp
cmp
clc
push
add
fcoms
adcl
cmpsl
aad
mov
xorb
push
adc
adc
cmp
cli
sahf
aam
sbb
sbb
or
cmpsl
test
aaa
lods
scas
mov
push
scas
pop
dec
sbb
mov
cmp
xor
jge
push
cmp
mov
adc
imul
mov
pushl
and
push
std
pop
mov
xor
adc
sub
into
jae
mov
rol
dec
aam
out
rorb
test
xchg
hlt
leave
movsl
ret
addr16
shl
pop
dec
mov
inc
int
pop
inc
sub
xchg
sarl
add
mov
add
sbb
repz
inc
jecxz
mov
add
mov
cmpsl
jb
mov
dec
repz
aas
arpl
stos
nop
adc
xchg
and
pop
js
loopne
mov
cs
cmp
jg
dec
pop
or
xchg
lock
mov
sbb
es
int3
mov
jae
jmp
fwait
push
shll
je
cmp
lcall
mov
push
loope
pop
add
xor
rcll
or
or
outsb
jp
dec
add
mov
es
test
ret
sub
shr
cmc
imul
pushf
orl
fstl
mov
jae
and
repz
jae
sbbl
popf
rcll
movsb
test
mov
cmpsb
es
dec
xor
mov
xchg
xchg
push
mov
pop
xchg
stc
push
xor
jno
cmpsb
aad
dec
xor
and
pop
cmc
inc
sarl
mov
mov
lret
sbb
daa
pop
stc
out
mov
mov
test
popf
cmc
or
and
ja
cmc
pop
pop
cmp
cmp
repz
xchg
mov
and
insb
mov
xchg
loope
sahf
push
in
pop
fcoml
mov
sbb
and
mov
xor
stos
fsubp
sbb
mov
inc
push
jae
dec
lea
in
out
xchg
mov
test
ja
sbb
and
dec
sahf
test
lods
lret
sbb
push
mov
jne
jbe
mov
jmp
enter
outsl
or
shll
loopne
mov
push
inc
dec
lret
sbb
movsb
clc
mov
scas
ret
dec
pop
sub
leave
cmp
js
and
hlt
std
jae
filds
add
cmp
jle
bound
fs
lcall
scas
stos
scas
insl
arpl
adc
mov
mov
mov
hlt
adc
aas
std
inc
inc
mov
rcr
out
xor
das
ficomps
sub
dec
loope
mov
test
loope
pusha
and
lods
out
cmc
mov
call
sbb
add
in
ret
flds
and
xchg
pop
cmp
scas
out
std
cmp
add
mov
jns
and
popa
cmp
sub
loopne
data16
xor
loopne
adc
in
fldt
ljmp
arpl
sbb
jbe
and
out
or
pop
jne
lock
cs
adc
aad
int
jmp
sahf
or
sub
push
sub
jl
scas
xchg
clc
jl
push
test
jge,pn
in
ja
popl
out
dec
pmaxsw
or
mov
jnp
dec
mov
pop
mov
xchg
add
jp
mov
out
sub
pop
mov
in
mov
idivb
add
mov
xchg
lahf
loopne
lret
movsb
cltd
popa
adc
in
xchg
mov
lret
mov
pop
mov
pushl
int
xchg
mov
cmp
ror
cld
scas
nop
fadds
push
movsl
cmp
and
jne
mov
xchg
divl
and
mov
sub
popf
mov
das
sahf
dec
aaa
fdivp
lock
pushf
jbe
shll
in
sbb
pop
sub
ret
out
add
negb
mov
pop
mov
sbb
jb
mov
orb
sbb
lret
out
clc
sbbl
mov
rcl
aad
push
and
ffreep
inc
cmp
ljmp
outsb
sub
aas
mov
stos
and
add
or
test
dec
inc
adc
sub
push
scas
dec
arpl
mov
out
inc
or
add
mov
sub
popf
fists
scas
lret
popa
ja
sti
out
mull
and
jb
pop
pop
adc
xchg
sub
mov
inc
jae
fimull
loope
mov
add
popf
shlb
push
mov
lret
cmp
mov
ljmp
and
jbe
aas
or
pop
ds
popa
es
cmp
inc
push
mov
sarl
mov
inc
notl
test
lahf
leave
aad
in
adc
push
dec
cmp
push
jo
popa
push
and
mov
dec
sbb
dec
loopne
jbe
mov
repz
mov
push
ret
bound
xchg
call
mov
add
ss
dec
je
add
mov
shll
shrl
xchg
ret
clc
stos
mov
int
pavgw
es
and
mov
imul
push
into
mov
cltd
jb
imul
cs
sbb
dec
arpl
jp
pusha
push
add
in
xchg
rcrb
ret
add
shlb
fsubr
icebp
add
inc
into
inc
std
jge
cli
add
in
cmp
xchg
dec
push
pop
pop
pop
and
test
lds
xor
sbb
jp
adc
mov
jne
xchg
dec
popf
gs
out
mov
jbe
addr16
or
lock
stc
sub
jp
lds
inc
ds
hlt
stos
xor
clc
mov
jo
in
jg
sbb
je
test
dec
add
xchg
addl
mov
flds
out
xor
sbb
adc
mov
lcall
add
ljmp
jns
jecxz
jle
dec
movsb
es
negb
add
push
imul
pop
in
add
sbb
stc
sahf
mov
inc
shr
into
pushf
adc
xor
dec
pop
aaa
je
pop
into
jno
mov
cmp
sbb
and
lock
xor
push
push
ret
negb
pop
xchg
and
adc
mov
dec
pusha
mov
inc
and
mov
shll
loope
cvtpi2ps
in
pop
mov
scas
loope
xor
bnd
mulb
dec
mov
xchg
xor
loopne
and
xchg
add
arpl
and
pop
imul
lods
add
xor
dec
out
and
or
sub
subb
mov
popf
lods
push
xchg
aaa
sub
add
test
pusha
pop
loopne
or
pop
push
jnp
and
fstpt
iret
xchg
inc
outsb
andb
sub
pop
in
into
cmp
fistl
jae
or
int
or
lahf
les
sub
add
icebp
mov
jne
push
in
push
leave
imul
roll
adc
push
push
sarl
js
and
adc
push
push
mov
or
inc
jbe
std
mov
push
dec
jo
and
xlat
inc
sbb
stos
sahf
cli
adc
jle
in
jns
xchg
pop
mov
test
test
xlat
std
cmp
lods
insl
imul
cmc
adc
pop
mov
imul
jns
mov
dec
in
ss
mov
outsl
mov
subl
shlb
mov
xor
pusha
andl
test
and
fisubl
and
or
xor
mov
sub
lahf
mov
hlt
lahf
out
call
push
inc
cmp
mov
aaa
dec
push
adc
fwait
push
out
mov
mov
add
inc
test
movsl
push
and
mov
xchg
xor
je
repnz
outsb
cli
sub
ret
test
or
sub
out
iret
nop
shll
push
repz
scas
cli
punpcklbw
sub
inc
and
cltd
cmc
fsubrs
gs
int3
push
popf
mov
mov
adc
xlat
outsl
into
inc
mov
jo
cmp
mov
inc
jno
add
push
cli
xchg
cmp
ds
pop
rorl
fcompl
adc
xchg
jae
xchg
sbb
inc
inc
pop
cmp
adc
sbb
or
scas
or
enter
ret
pop
sbb
mov
sbb
popa
push
mov
daa
and
mov
rolb
es
in
shlb
jg
insl
push
leave
add
inc
lods
sub
cmpsl
pop
cmp
dec
inc
and
mov
es
fcmove
clc
call
cmp
repnz
pop
cwtl
jne
sub
mov
mov
adc
mov
dec
test
pusha
lods
jns
dec
cmc
push
cmpsl
xorl
xor
into
push
adc
out
xchg
dec
push
int3
dec
mov
inc
mov
arpl
sub
pop
cmpsl
dec
mov
pop
inc
test
xor
mov
and
addl
imul
mov
stos
push
sbb
and
mov
mov
add
sbb
push
js
cltd
push
jle
mov
and
bound
js
mov
xchg
mov
mov
mov
fistps
mov
inc
jp
jae
inc
test
fbstp
cmp
jg
mov
pop
dec
fsubrl
fdivr
pop
fldcw
rcr
lock
pop
adc
sbb
inc
cmp
and
testw
jnp
arpl
xor
pop
mov
dec
cltd
sbb
mov
adc
push
jp
insb
pop
iret
lret
call
inc
insl
movsl
mov
loope
mov
push
int3
out
push
jb
test
mov
cs
pushf
mov
test
in
fstps
adc
add
out
mov
adc
fbld
rcr
stc
mov
push
into
push
mov
data16
int
aas
jle
dec
jg
sbb
add
or
lahf
mov
jns
dec
movsl
jnp
repz
jecxz
push
inc
mov
daa
bound
dec
ljmp
je
aam
jle
pushf
outsl
sub
sarb
lret
dec
arpl
pop
stos
sbb
shll
mov
loop
arpl
roll
stos
outsb
inc
repnz
nop
cmp
jecxz
cmp
dec
in
push
mov
and
imul
mov
mov
jg
sarl
adc
fldenv
movsl
pop
mov
jmp
cwtl
cwtl
cmp
add
pop
mov
add
jnp
sti
out
cs
lret
mov
cli
ret
add
ja
das
lds
jns
fisttps
mov
mov
add
insl
test
loop
pop
sbb
test
in
hlt
sbb
pop
fmul
xchg
lret
push
or
out
jle
ret
scas
sub
in
test
jns
jl
sbb
mov
jmp
mov
scas
outsl
pop
pop
pushf
push
xchg
test
xlat
xor
inc
dec
sub
jae
pop
arpl
lret
xchg
sub
sti
xchg
fwait
adcb
sbb
ds
lock
push
jnp
push
lret
cmp
mov
add
sbb
dec
sbb
xchg
cli
scas
mov
call
psubusb
jns
or
jge
pop
xor
jle,pt
in
xor
push
xorl
jns
scas
imul
xchg
aaa
xchg
sahf
inc
or
pop
add
mov
lcall
and
inc
xor
loopne
or
stc
and
loopne
aas
pop
lcall
daa
add
ret
sbbb
cmp
add
ret
aad
mov
xor
jle
push
and
jl
push
inc
shrl
mov
sub
and
xor
sub
or
int3
cli
mov
call
and
jb
les
sub
stc
push
jno
in
mov
dec
push
push
adc
dec
int
std
push
fldt
call
into
mov
stos
push
aad
movsb
push
cs
shll
arpl
mov
jmp
cmp
test
pop
mov
cmp
cli
inc
movsl
shlb
addb
clc
out
nop
add
cwtl
push
cld
subl
mov
sub
rcrb
dec
mov
mov
sarl
cmp
ret
cld
pop
jae
jae
aaa
push
push
and
leave
xchg
addr16
jmp
in
pop
add
clc
addr16
test
push
es
sti
xchg
sub
stos
outsb
sub
sub
add
xor
mov
xlat
mov
sub
jne
and
push
jp
push
mov
inc
mov
mov
imul
loope
xorl
outsb
mov
lcall
sbb
mov
sbb
sub
mov
sbb
ljmp
xorl
leave
dec
popa
cmc
test
pop
xchg
into
outsl
pop
movsl
ret
jbe
xchg
sub
mov
or
sub
sbb
mov
dec
sbb
pop
mov
enter
cmp
cwtl
adc
dec
or
cmpsl
adcl
push
movsb
popf
scas
pop
sub
adc
xlat
repnz
arpl
hlt
mov
xchg
pushf
xchg
and
scas
lock
test
dec
xor
add
add
scas
fadd
sub
and
adc
ja
notb
xor
inc
lods
xor
ds
inc
push
sbb
lods
aaa
testl
mov
and
cmc
dec
jg
cmpsb
into
pop
cmp
jne
stos
dec
popa
out
rcl
inc
rcrb
inc
inc
pop
push
xchg
sub
xchg
sbb
dec
mov
xor
aaa
arpl
cmp
test
lret
in
pop
sub
testl
shl
jecxz
movl
xlat
mov
scas
fdivp
ret
jmp
sub
outsb
stos
push
rolb
mov
mov
fdivrl
add
dec
leave
jl
test
add
mov
cld
cmp
sub
fcom
cltd
lods
and
popf
imul
dec
xorb
adc
mov
cmpsl
cwtl
jp
sub
mov
incb
sub
clc
jno
inc
pop
jge
std
xchg
scas
in
pop
fs
enter
frstor
adc
divl
push
adc
sub
pop
sub
movsl
repz
sarb
mov
test
add
sub
lods
xor
leave
jo
mov
mov
xor
dec
mov
dec
into
lods
movsl
add
pop
inc
mov
jecxz
lret
repz
lcall
mov
sbb
fld1
rcrb
cmp
test
out
jl
daa
sarb
shrl
xchg
mov
mov
push
jmp
mov
das
iret
out
orl
push
mov
xchg
jo
lahf
pop
and
cmp
dec
and
call
fsub
dec
xor
pop
or
outsb
adc
sahf
dec
cmp
leave
mov
sbbb
and
cmp
push
mov
mov
into
nop
mov
xchg
mov
add
stc
sahf
movsb
pop
cmp
outsl
rcrl
test
rep
mov
rcrl
cmp
jnp
xchg
xchg
movsb
sti
xor
mov
shrb
xchg
and
aas
add
in
loop
orl
enter
or
mov
mov
jg
inc
push
cli
clc
inc
xchg
jo
cltd
int3
daa
push
sub
xor
popa
aad
imul
insl
mov
pop
sarb
dec
dec
pop
mov
lea
test
push
loop
je
ljmp
mov
dec
cmp
xchg
push
jle
xchg
pop
and
xlat
add
loopne
jns
inc
add
add
xchg
add
imul
jno
and
inc
xchg
xor
cs
or
arpl
loopne
push
inc
cmp
adc
cmp
jbe
sub
cmp
fdivr
and
and
xchg
enter
xchg
daa
pop
gs
jp
mull
mov
adc
orl
xchg
xor
add
stos
repnz
movsl
dec
mov
adc
aas
lods
repnz
rorl
outsl
dec
add
lock
xchg
lahf
inc
clc
sub
gs
pop
inc
mov
mov
ja
dec
xchg
add
mov
and
fwait
cltd
mov
sbb
insb
ret
xor
test
insb
xor
inc
mov
ret
mov
fcomi
fidivs
testb
sub
pop
push
mov
lock
jns
cmpsl
in
dec
mov
cltd
stos
xorb
inc
in
inc
push
sbb
xor
xchg
fcomps
dec
insl
test
or
push
jo
adc
js
add
out
into
call
scas
mov
adc
inc
push
push
sub
inc
push
lea
or
fsubrs
in
mov
pop
daa
inc
and
sahf
jo
hlt
xchg
sub
xchg
push
in
inc
iret
rcll
jb
outsb
jae
sbb
mov
stc
xchg
or
iret
sub
ss
add
jg
dec
or
push
fistps
pop
imul
pslld
cmp
mov
jle
and
les
push
es
sub
sbb
xor
push
jp
pop
push
jae
mov
cmp
cltd
jns
mov
ds
fnstcw
and
stc
dec
jns
fnstsw
sub
push
inc
in
mov
call
insb
inc
cli
pop
mov
ret
cmc
popa
fsubs
sub
rclb
dec
call
fbld
in
or
inc
or
mov
xchg
cli
icebp
mov
jo
clc
dec
frstor
sub
testl
call
inc
mov
xchg
loop
push
lret
pop
sbb
int
cmp
cmp
testb
jo
sub
pop
adc
jne
fs
push
cwtl
das
mov
mov
xlat
loopne
push
adc
mov
fcomps
insb
aam
daa
ljmp
sub
pop
ds
lret
mov
add
cld
aam
or
jnp
pop
add
push
shrl
popl
lea
sbb
std
mov
sub
ds
cmp
mov
in
jge
jne
adc
push
push
mov
vpunpcklqdq
or
pop
push
mov
rclb
lock
stos
adc
inc
pop
stos
inc
xor
xchg
std
push
xchg
mov
jno
mov
in
pop
pop
ficomps
pop
pop
js
lea
add
xchg
sub
xchg
adc
cmpsl
gs
add
jmp
push
repnz
jo
add
push
mov
inc
dec
test
sbb
dec
cmp
mov
mov
sub
sbb
push
mov
and
push
pop
or
in
scas
sbb
rcrl
outsl
frstor
jne
mov
inc
or
push
add
lods
dec
mov
adc
cmp
filds
cmc
int3
cmc
xchg
mov
jne
or
cmc
aam
pop
and
pop
pusha
and
inc
fimull
sub
mov
popf
std
adc
mov
notb
es
jp
rolb
cmp
adc
push
fldcw
xchg
mov
push
loop
mov
cmp
les
pop
push
cmpsl
sub
push
mov
xchg
out
and
xchg
sub
mov
pop
dec
mov
sbb
adc
push
rclb
add
cmp
pop
mov
sub
cmp
xchg
cltd
xor
cmp
fs
aas
mov
xlat
outsl
jae
dec
adc
xor
mov
jl
unpckhps
out
das
cmp
mov
in
cmp
push
push
in
cld
xchg
bound
gs
dec
hlt
sub
test
lods
pop
jbe,pt
xchg
popa
imul
jl
movsb
xchg
jae
enter
push
loope
jmp
ficoms
frstor
adc
sbb
fucomip
and
call
test
outsl
inc
mov
dec
xchg
insb
fs
mov
jp
mov
data16
mov
xor
les
sarl
aas
clc
dec
xor
sar
fs
je
push
mov
xchg
xor
rcl
std
loop
cs
cli
adc
insl
dec
cmpsl
fidivl
sbb
mov
cmpsl
aam
jp,pn
ret
repnz
mov
addl
xor
mov
test
fcomps
std
inc
inc
subl
loope
mov
sub
cli
adc
std
mov
decb
xor
mov
rolb
inc
pop
outsl
loope
xchg
fistpll
stos
je
fdivl
inc
stos
imul
mov
jl
outsb
repnz
mov
test
push
mov
int
inc
rcll
cwtl
jnp
movsl
sbb
insb
daa
cmp
enter
mov
pop
push
adc
xchg
sub
gs
les
test
ljmp
xchg
or
and
call
mov
pop
cwtl
push
into
xchg
xchg
clc
adc
xchg
lods
mov
dec
fs
and
mov
out
test
dec
pshufw
push
xor
stos
notl
js
dec
js
aam
ficomps
stos
push
pusha
cmp
shrb
inc
cli
sub
mov
aas
xchg
and
fnstcw
decl
xchg
inc
je
cld
pop
jg
adc
jp
and
or
xchg
mov
in
xchg
out
lahf
jo
sub
inc
lcall
scas
push
inc
ljmp
mov
pop
cmp
pop
cli
sbbb
cmp
mov
jmp
jo
pushf
pop
dec
adc
mov
sbb
mov
or
adc
xchg
jae
push
and
dec
repnz
push
push
inc
movsb
shl
cmp
push
out
fxtract
mov
fisubrs
repz
int3
data16
in
dec
or
jno
or
lods
ja
xor
or
jecxz
unpckhps
daa
xor
mov
adc
jg
mov
loop
xchg
insb
mov
push
pop
lea
and
fiadds
lods
and
sub
bound
call
lock
sub
xchg
xchg
xchg
inc
sub
xlat
jle
int3
lea
in
xchg
and
or
mov
push
sbb
iret
push
fstps
fwait
ss
test
sarb
mov
cmp
pop
repz
push
imul
xor
sbb
inc
loop
mov
dec
stos
hlt
or
leave
adcl
or
flds
mov
push
aas
fimuls
fwait
add
enter
jno
pop
add
mov
xor
ret
xchg
mov
movsb
or
popf
dec
cmpsl
push
inc
pop
mov
cmpsb
jl
int
inc
shll
test
rolb
push
loop
or
bound
out
shlb
je
dec
add
and
mov
lahf
pop
leave
mov
out
lahf
ret
sbb
cmp
ret
rclb
lret
out
dec
mov
pop
xchg
out
pop
in
inc
ss
or
mov
mov
fimull
xchg
ret
mov
adc
and
sar
stc
mov
inc
loope
xor
jge
fistpll
shlb
mov
enter
push
fstp
les
jo
dec
push
cmp
xlat
sti
xor
inc
jmp
imul
push
aam
add
xchg
stc
jbe
mov
js
movsb
push
mov
andl
mov
cwtl
sub
sub
stos
js
in
inc
xor
xchg
mov
sti
inc
jge
movsb
aam
pusha
xchg
inc
add
adc
xchg
dec
push
movsl
int3
sbb
xchg
mov
mov
or
loop
sti
mov
xchg
dec
lret
subl
pushf
fsts
mov
mov
sbb
sbb
scas
pop
movntps
fidivs
nop
adc
jae
xor
push
aad
popa
push
jns
mov
sbb
test
mov
stc
mov
mov
mov
mov
lea
push
int
icebp
lods
movsl
scas
lods
hlt
ret
scas
cmp
jecxz
and
fstpl
outsb
test
and
pop
mov
dec
dec
xor
mov
rcll
stc
or
jp
add
data16
pop
mov
stos
cmp
outsl
in
jmp
out
push
sarb
cmp
dec
mov
mov
inc
jne
mov
cwtl
popa
orl
mov
inc
repnz
out
push
icebp
cmp
dec
repnz
xchg
js
lahf
cmp
js
call
rcl
das
jb
hlt
aaa
pop
inc
pop
sbb
imul
pop
or
add
neg
push
mov
or
sub
xor
iret
lea
and
inc
pop
rorb
push
cmp
xor
push
orb
std
xor
adc
xchg
and
les
or
add
addb
dec
mov
ret
enter
cmp
or
xor
push
scas
jge
mov
dec
mov
popa
fdivrs
cwtl
sub
icebp
pop
cs
in
lock
add
lahf
int3
out
lods
cmp
enter
pop
fwait
or
xor
cmp
sub
popa
fwait
mov
cld
mov
mov
jnp
jne
aam
ffreep
in
fisttpll
mov
sti
push
add
cmp
scas
leave
data16
in
xor
jmp
js
das
cli
mov
pop
pop
push
add
into
fisubrs
ss
add
mov
ja
jle
mov
mov
bound
pop
xchg
xchg
addr16
call
outsl
add
jo
arpl
xchg
movsl
mov
rclb
jge
stos
mov
pop
faddl
push
xchg
ja
imul
notl
inc
addr16
mov
stc
push
cmpsl
xchg
mov
sub
sbb
pop
sti
inc
leave
cwtl
mov
jecxz
divl
stos
aam
icebp
dec
mov
insl
nop
sub
push
ljmp
or
lahf
or
sbb
push
mov
xchg
sub
cwtl
fistl
inc
pop
jmp
sbbb
add
dec
pop
movsl
mov
bound
fdivr
push
cli
imull
aad
mov
dec
and
mov
or
pop
pusha
hlt
ret
stos
sbb
xlat
fistpll
les
sar
push
movsb
xchg
xor
push
xchg
pop
aaa
push
sub
scas
test
mov
movb
add
jmp
mov
add
lea
jmp
popa
and
adc
cmp
mov
inc
gs
jnp
sub
loopne
inc
test
inc
hlt
std
cmp
push
jmp
cs
or
cld
rcr
faddl
rorl
sbb
ret
jg
inc
adc
rclb
push
int
mov
mov
inc
shrl
scas
loope
dec
stos
inc
mov
jno
mov
pop
lret
xchg
sarb
repnz
mov
sbbb
daa
dec
push
icebp
fidivs
call
dec
jmp
push
push
sub
stc
daa
nop
out
ljmp
addr16
jno
in
addr16
icebp
out
stc
orl
stos
lods
sub
clc
dec
fwait
lret
data16
fadds
je
and
sub
lret
add
imul
mov
sti
outsb
sub
xchg
mov
sub
xor
ja
xlat
mov
adc
std
push
imul
mov
lds
out
jl
lcall
mov
jl
push
ret
movb
mov
out
push
jecxz
sub
stc
and
dec
jg
cmpsb
pop
and
sbb
mov
adc
test
sub
fcompl
xchg
xchg
pop
daa
push
leave
arpl
jmp
cmp
jbe
shll
rcll
int
dec
jp
pop
xor
jl
sbb
or
ljmp
ljmp
add
xchg
mov
push
adc
or
idivb
jp
arpl
in
dec
mov
lret
or
jmp
fcomp
fs
std
addr16
dec
or
lcall
stc
xlat
ret
jbe
test
call
jb
orb
outsb
or
sub
imul
cmpsb
adc
and
int3
push
repz
sbb
in
rcrb
cld
pop
sbb
stos
out
js
sbb
mov
aam
lds
fwait
cmpsb
mov
leave
or
pop
and
daa
xor
and
test
dec
sub
mul
xorb
icebp
movsl
dec
stos
mov
push
xchg
addr16
cmp
aam
xchg
cmpsl
out
and
or
or
pusha
pusha
in
scas
pop
xor
aad
mov
jae
jmp
sub
fists
mov
sarb
lahf
or
dec
inc
nop
pop
lea
pop
xchg
pop
mov
sub
inc
pushf
lods
inc
xor
xchg
lahf
in
in
mov
sbb
test
insl
scas
testl
lods
into
repnz
and
jns
fs
test
out
popf
cld
xlat
jge
mov
push
or
aas
lcall
or
and
outsl
loop
pop
inc
dec
or
cs
stos
xchg
sub
xor
les
sub
push
test
dec
jge
adc
push
pop
xor
cltd
sub
jb
inc
mov
ja
sbb
mov
jnp
push
loopne
jns
jnp
idivl
adc
aad
out
dec
mov
jne
sarb
cwtl
pop
xchg
mov
adc
xor
dec
or
jge
or
in
mov
or
call
jo
push
push
scas
into
imul
xchg
fmul
mov
or
xlat
shl
rcrb
idiv
std
and
inc
cmpsl
int
lock
inc
pop
je
into
inc
push
stc
xor
jmp
jnp
xchg
iret
popf
in
ljmp
enter
loop
xchg
xchg
and
push
out
aas
pop
sbb
lods
mov
test
and
and
cmpsl
es
mov
sub
cli
xor
or
xchg
push
loopne
mov
cmpsl
xchg
ja
inc
outsl
xchg
cmp
xor
pop
hlt
inc
mov
sbb
fsubrp
int
lods
popa
mov
mov
mov
push
stos
adc
rolb
icebp
pop
jne
or
and
out
out
jno
fildl
xchg
dec
stc
rcl
cmp
loope
fsub
sub
cmp
leave
mov
shr
xchg
loope
ja
mov
popf
add
loope
ret
xchg
cmp
fxch
and
cmc
test
inc
jbe
cmc
call
cmpsl
inc
mov
fistpll
sbb
idiv
outsb
sbbl
pop
aas
or
cmpsb
imul
out
lret
pop
mov
stos
dec
dec
and
stc
shlb
imull
fsubr
add
test
sub
pop
push
fistpl
adc
add
popa
xor
rolb
add
inc
in
and
mov
jmp
jnp
popa
mov
bnd
jge
add
xchg
int
xchg
lea
jnp
fcoml
in
sbb
mov
out
sbb
and
inc
iret
lods
mov
in
js
imul
jmp
inc
fsts
test
shrb
mov
mov
sti
dec
fadds
in
aad
lods
push
jmp
pop
out
je
lcall
mov
in
nop
popf
dec
or
push
or
mov
aaa
test
or
or
or
shl
or
xor
sbb
cwtl
xchg
sbb
jmp
popa
and
stos
xor
outsl
mov
mov
jbe
adc
mov
das
jp
dec
loopne
inc
jbe
popa
jns
in
dec
mov
add
ja
mov
jmp
lcall
jp
xchg
dec
pushf
dec
cs
leave
icebp
push
roll
repnz
mov
sbb
mov
add
outsl
imul
xchg
loop
fisubl
cld
loop
fcoms
fsts
rorl
icebp
orb
push
dec
mov
dec
xchg
pop
dec
push
jmp
push
sti
sub
xchg
mov
sub
jns
dec
mov
test
mov
adc
insb
or
mov
jo
cwtl
dec
fldcw
push
xchg
int3
lods
dec
add
addr16
jae
int3
xchg
mov
test
or
movsl
push
cmp
jmp
inc
sarb
insb
adc
ret
dec
cmp
push
sbb
dec
aas
call
filds
xchg
shll
xchg
push
dec
jb
loopne
mov
leave
mov
aam
fsubrl
pushf
push
iret
test
add
push
jae
push
cmp
mov
test
mov
lahf
stos
jmp
mov
mov
leave
test
ret
xchg
xchg
push
int
sub
lcall
inc
mov
aas
in
xorl
daa
inc
outsb
notl
sub
push
imul
mov
jnp
pop
lea
sbb
repnz
test
mov
sub
repnz
shr
add
in
pop
cwtl
punpckhwd
lret
add
cmp
ret
lock
lods
jge
sub
mov
mov
out
test
shlb
sbb
xlat
lret
lods
les
and
fstp
xor
jno
iret
fistps
inc
iret
scas
pushl
addr16
shll
sub
pop
arpl
movsl
mov
movsl
cmp
jmp
and
in
sub
les
inc
out
sarb
mov
mov
pop
or
mov
test
mov
jb
movsl
loopne
stc
pop
push
in
sbb
mov
loope
dec
lods
jecxz
sub
sub
inc
js
and
mov
fldcw
cmc
jns
or
xor
dec
xchg
sbb
sbb
vaesimc
out
std
jb
mov
leave
xor
sub
pop
and
mov
lret
push
out
pop
mov
dec
filds
xchg
into
push
mov
push
add
pop
mov
cltd
icebp
int3
xchg
pop
push
push
fistl
pop
stos
fstpt
sarb
push
cli
dec
fiaddl
ljmp
cmp
stos
rcrl
ljmp
movsl
adc
add
loop
push
lret
jnp
sub
inc
ljmp
push
hlt
and
dec
sub
adc
jp
orl
fdivr
mov
nop
sub
arpl
jecxz
jnp
mov
insl
jmp
sarl
addr16
testl
xor
push
hlt
scas
daa
lcall
out
in
xor
fs
test
push
lret
lcall
out
mov
or
cmpsl
jl
mov
out
pop
push
xor
rorl
jo
in
pop
add
dec
std
jp
mov
push
add
or
xorb
push
mov
repnz
in
hlt
and
aaa
dec
sbb
push
adc
stc
mov
or
add
mov
mov
cmpsl
cltd
or
sbb
cli
test
mov
sbbl
icebp
mov
jbe
mov
lds
adcb
in
popf
call
push
mov
adc
dec
loop
cwtl
mov
push
scas
lock
adc
or
das
push
lods
mov
int
mov
aam
xor
sbb
cmp
popa
bound
mov
repnz
aaa
ret
movmskps
into
pop
popa
mov
mov
lds
xchg
test
cmp
rcrl
inc
test
in
push
je
pop
sub
lcall
fwait
out
movsl
xchg
jb
add
sbb
rcll
jo
and
cltd
inc
lahf
sub
or
rclb
and
mov
out
mov
or
push
sti
adc
int
ffreep
stos
xchg
movsl
push
fisttps
push
push
jle
lods
outsb
push
dec
les
xchg
adc
sub
xchg
adc
std
push
stos
out
xchg
out
mov
mov
lcall
pushf
jne
ror
mov
test
cmp
in
icebp
sub
or
add
add
popa
lahf
idiv
xchg
pop
push
gs
xchg
incl
mov
pop
adc
ret
mov
fldl
push
mov
lods
fs
xchg
or
mov
or
call
cmp
xor
ja
incl
ficoml
sar
nop
dec
and
sub
sbb
dec
les
sbb
cmpsl
ja
sarl
sub
xorb
push
cmp
xor
xchg
pop
test
xor
adc
daa
xchg
ret
daa
iret
and
and
pop
mov
push
arpl
pop
aam
jo
std
jecxz
aaa
jnp
push
jecxz
adc
push
mov
add
mov
test
sub
inc
dec
iret
addr16
cmp
mov
bound
es
push
movsb
push
scas
jno
sub
out
rol
sub
sbb
xor
ljmp
pop
jp
clc
push
adc
push
and
pop
push
push
insb
or
inc
xchg
int
jbe
lock
xor
mov
out
mov
pop
repz
lock
sahf
mov
xchg
imul
aaa
pop
mov
pop
inc
xor
push
popf
adc
subl
dec
les
push
pop
jp
aas
mov
fnsave
cmpl
xor
push
idivl
lods
cld
lds
mov
xchg
popa
shr
and
loop
mov
fs
in
mov
xor
or
shll
cmp
xorl
cld
daa
fcoml
or
pop
loopne
imul
lret
push
mov
inc
add
insl
aam
mov
or
jecxz
sbb
sbb
pop
jnp
arpl
cli
push
fcmovb
mov
hlt
fidivrl
sub
sub
add
jp
push
loope
mov
mov
sub
sbb
xlat
push
lods
mov
je
sub
jl
mov
adc
pop
js,pt
push
mov
in
adc
lock
imul
repz
fwait
add
fwait
sbb
test
adc
hlt
cli
inc
jle
ja
into
sub
je
mov
mov
cwtl
jge
sub
or
mov
inc
mov
cmpb
stos
adcb
jp
mov
repnz
push
stc
jbe
sbb
dec
repnz
push
mov
cmpsl
xlat
daa
push
rcr
lods
pop
or
loope
scas
mov
mov
xor
jae
add
cli
mov
mov
les
sbb
inc
sub
mov
xchg
pop
ret
inc
jnp
sub
pop
in
sbb
ja
imul
lret
lock
shll
int3
sub
xlat
inc
pop
adc
imul
movsl
idivb
jge
push
push
lcall
gs
fists
jnp
adc
mov
adc
imul
sub
ss
subb
jmp
mov
push
outsb
cltd
ds
fwait
xchg
lea
xchg
cli
imul
outsl
push
clc
mov
xchg
adc
adc
fcoml
and
cmp
js
cmpsb
dec
xchg
in
imulb
in
ret
in
add
dec
xor
pop
push
cmp
and
cld
jp
nop
lret
mov
mov
inc
cld
mov
push
jecxz
push
std
add
jge
dec
ljmp
adc
sub
fidivl
mov
scas
cmp
pop
sub
pushf
pop
jb
and
jp
testb
mov
pop
lods
shlb
hlt
ret
jle
andl
pop
mov
push
lret
or
pop
cwtl
cmpsl
jecxz
lods
cmp
pop
jge
xor
pop
out
inc
das
inc
repnz
or
sahf
jb
mov
movsl
mov
pushf
ret
push
adc
popf
push
loopne
imulb
out
adc
push
adc
hlt
sub
or
and
push
xchg
mov
or
nop
and
mov
mov
dec
cmc
arpl
addr16
mov
aad
sti
cmp
xchg
addr16
sarb
mov
dec
shrl
pop
lea
movl
mov
loop
push
insb
add
jbe
cmp
imul
int3
inc
dec
lods
or
sarb
inc
mov
cltd
shlb
xor
mov
ret
cmc
xorb
xor
jle
jmp
xchg
call
add
push
testb
jns
insb
lea
dec
mov
in
scas
mov
les
dec
adc
movsb
mov
fistpl
add
push
lret
lock
clc
test
push
mov
adc
sub
sahf
lods
xor
push
jnp
leave
lds
xlat
cmp
xchg
mov
js
add
push
ljmp
in
jo
imul
jo
pusha
cmp
mov
jmp
out
test
dec
fmulp
fwait
push
mov
imul
nop
sbb
fs
in
jl
dec
cwtl
xchg
fdivl
dec
and
jp
in
xor
and
mov
mov
in
pop
rcrb
xchg
jbe
dec
in
mov
cmp
lahf
dec
sahf
sbb
dec
add
dec
dec
adc
dec
dec
xor
vcvttss2si
sbb
mov
jg
mov
add
out
push
jp
jo
pop
jl
sbb
xchg
mov
cmp
std
mov
popf
insb
orb
in
add
pop
pushf
sbb
in
lea
inc
and
fs
in
add
ret
and
inc
push
mov
push
pop
mov
xchg
test
in
lds
cwtl
or
mov
gs
subb
pop
inc
imul
ljmp
mov
sub
and
mov
xor
insl
dec
xchg
pop
int3
aas
sub
fisubrl
cmc
jbe
jae
jb
mov
fcoml
cli
or
adc
pop
adc
call
cmp
fwait
mov
xor
pop
pusha
das
and
push
std
andl
je
mov
mov
push
add
stos
gs
scas
sbb
cmpsb
sbb
fldenv
mov
sub
xor
jle
rorb
call
stos
mov
pop
dec
and
out
pop
xchg
xchg
and
sti
outsl
push
enter
push
inc
xor
pop
rolb
fisttpl
sub
xchg
dec
and
out
test
inc
fsubrs
cwtl
mov
push
cli
imul
xchg
lock
jns
pop
cmpb
xchg
mov
test
add
test
cwtl
pusha
jmp
mov
repz
jno
rcr
pusha
out
pop
aam
adc
mov
adc
mov
pop
negl
gs
mov
push
cmp
fldcw
sub
in
int3
adcl
scas
push
ljmp
xor
mov
xor
imul
mov
cmc
ljmp
pop
loop
mov
lods
cs
pop
dec
in
hlt
lods
mov
imul
cld
jl
insb
mov
sub
imul
leave
loopne
pop
lods
sub
cmp
ficoml
push
pop
inc
loope
sbb
mov
shrb
dec
lret
mov
in
cmpsl
fwait
sbb
mov
and
sub
pop
stos
pop
into
mov
sbb
cmp
mov
inc
adc
movsl
movsb
int3
adc
and
mov
call
hlt
fstps
add
xor
adc
imul
leave
leave
dec
std
out
cli
stos
and
ljmp
or
jb
adc
sub
jle
pop
jbe
adc
mov
mov
xchg
inc
aad
pusha
pop
sbb
push
mov
jle
push
sub
xor
fistpl
pop
hlt
test
inc
shrl
sahf
ja
sarl
pop
insb
cmp
stc
cmpsb
add
adc
xchg
push
lahf
dec
jmp
mov
lret
sbb
cmpsb
lcall
add
cmp
mov
int3
mov
test
popf
push
ljmp
sbbl
xchg
fmul
sub
insl
mov
repnz
ljmp
push
lods
jg
jle
pop
sbb
inc
pop
sub
in
mov
cmp
mov
push
xchg
mov
sbb
cmp
jo
xchg
stos
push
dec
jp
sbb
in
outsb
cmpsl
shl
mov
inc
push
lds
movsb
gs
pop
and
sbb
xor
adc
ja
jne
xlat
pop
andl
out
mov
mov
adc
cmpsb
sti
mov
ljmp
cmpsb
mov
mov
leave
inc
lret
lahf
fdivr
outsl
jecxz
jns
cmp
mov
arpl
lods
adc
pxor
dec
lahf
push
fstp
add
push
stos
xor
pop
lcallw
jno
movsb
mov
jns
xor
ss
xchg
ds
mov
aas
push
rorb
aam
dec
push
and
dec
or
mov
pop
mov
mov
sub
mov
ja
in
xchg
sbb
mov
sbb
sub
dec
cli
and
and
pop
fdivrl
enter
mov
fwait
addb
inc
jo
ret
push
fs
insb
or
mov
aam
inc
mov
in
xor
xchg
fildl
push
fisubrs
sub
push
fadds
cmp
push
rolb
cwtl
dec
mov
jmp
dec
add
and
fidivl
jne
adc
pop
mov
stc
fsubrp
xor
test
mov
xchg
das
fimuls
inc
outsb
cmpsl
aaa
lods
inc
int3
xchg
leave
decl
push
xorb
cmp
mov
cwtl
test
imul
andb
ds
ret
test
dec
xchg
das
adc
mov
hlt
lds
in
mov
call
int
rcl
dec
jae
mov
and
sbb
adc
sar
sub
dec
ds
adc
das
or
ja
test
xor
aas
cld
xchg
add
sub
adc
lods
push
xor
cmp
movsb
es
ret
pop
or
ror
and
and
xchg
scas
push
lock
movsl
jae
add
sti
or
dec
inc
ss
out
popf
loope
fcompl
out
jb
push
sbb
pop
test
out
jp
in
and
fstpl
in
mov
pop
cmpsb
add
pop
adc
ja
mov
stc
xor
js
clc
inc
push
mov
imul
jg
mov
insb
mov
or
fldenv
lret
in
ja
cmp
adc
jl
mov
fiadds
mov
pushf
jne
inc
cmove
inc
inc
cmp
outsl
out
mov
aad
repz
xor
xchg
push
shll
cli
pop
aad
out
pop
lret
ss
sbb
in
int3
jle
jp
or
add
aas
add
out
mov
mov
mov
sub
and
lcall
ficoml
jns
sarb
xchg
es
pop
pop
lds
xchg
loopne
ret
push
fstl
hlt
testb
movsb
rcrb
or
loope
xor
dec
mov
mov
pop
repnz
sub
mov
jns
sbb
nop
pop
mov
inc
jecxz
rcrl
dec
sub
movsl
bswap
rclb
cltd
iret
xchg
nop
cmp
inc
mov
sub
push
dec
orl
sub
push
lock
fstps
cmp
clc
ret
jno
lcall
mov
pusha
notb
or
out
xchg
and
out
idiv
iret
cmp
xor
cmp
adc
cmp
sbb
mov
mov
aam
adc
push
lahf
test
mov
nop
nop
xchg
cli
mov
arpl
mov
pop
mov
xor
xchg
push
jecxz
std
cmpl
dec
fwait
adc
xchg
pop
loopne
inc
gs
ljmp
outsb
sub
and
push
push
jl
xor
cmc
mov
mov
or
mov
pop
sbb
cld
adc
pop
xchg
jge
and
repz
rcrl
inc
mov
ret
mov
push
neg
imul
bound
or
push
xor
jae
mov
adc
mov
pop
scas
and
jp
sahf
mov
imul
adc
rol
fisubs
and
pop
adc
jns
outsb
es
das
jns
mull
and
aam
mov
xchg
cwtl
fcmove
loop
mov
cmp
lds
movsb
or
daa
or
pop
push
add
dec
mov
xor
adc
sub
sub
mov
cld
shrb
xor
adc
rcll
fnstenv
push
jge
andl
data16
adc
outsl
mov
adc
daa
mov
pop
rcrl
or
dec
jecxz
add
dec
pop
xor
xchg
das
lret
movsl
sbb
test
aad
jecxz
jne
cmp
out
ja
or
sbb
ficomps
dec
lret
add
call
rol
fldcw
repz
mov
push
orb
xor
xorb
popl
mov
mulb
mov
daa
xchg
inc
jno
lea
xlat
inc
mov
cmp
mov
push
iret
orb
movsb
cmp
xor
imul
jecxz
mov
jno
inc
push
popa
inc
sbb
fs
pop
das
adc
jno
mov
mov
clc
sub
add
or
stc
mov
pusha
das
add
adc
mov
push
cld
or
movsl
pop
shlb
lcall
movsb
cs
ljmp
dec
bound
push
pusha
scas
roll
xlat
jmp
xor
pop
pop
pop
mov
xor
std
sbbl
nop
push
xor
sub
iret
rolb
pop
cmp
dec
ret
sub
adc
ds
pop
loopne
rolb
xchg
int
in
imul
aam
pop
cmp
push
mov
jl
add
jl
ljmp
outsb
jns
mov
in
jg
je
test
inc
hlt
stos
pop
pop
int
int
cwtl
xor
adc
and
aam
push
mov
mov
pop
imul
retw
rorb
cmp
inc
pop
and
fmul
pop
sbb
loop
mov
inc
jo
stc
aas
jnp
sub
or
mov
pop
inc
andb
lcall
adcb
movd
enter
sbb
sbb
push
jl
jne
push
or
or
mov
js
fmulp
add
and
pop
cmp
stos
stos
pop
xor
xchg
sbb
inc
push
stc
movb
imul
pop
push
or
push
mov
cwtl
ja
mov
std
stos
xchg
sbb
rolb
bound
icebp
ds
test
les
sar
mov
fisttpl
nop
in
jmp
repnz
fimull
sub
movsb
jl
xchg
imul
mov
leave
and
ret
sbb
cmp
shl
and
adcl
mov
outsl
mov
mov
jae
and
xor
inc
stc
push
fldt
xor
les
jmp
leave
cmpsl
push
je
dec
sub
arpl
pusha
test
or
cmpsl
nop
and
sti
int
xor
shrl
mov
inc
adc
xchg
repz
int3
dec
ret
mov
push
or
pop
mov
mov
lret
or
adc
pop
out
or
out
scas
test
pop
jno
sub
mov
inc
sbb
pop
xchg
adc
sti
push
adc
dec
roll
mov
lret
xchg
push
pop
and
jo
pop
test
nop
cmp
pusha
imul
pop
insb
or
push
push
xor
movsl
add
sahf
or
rcll
pop
inc
in
push
mov
xchg
jae
call
mov
inc
xchg
fidivrl
inc
jns
cmp
lea
test
sub
cmpsb
mov
mull
repnz
fsubrl
pop
mov
sarb
inc
pop
shrl
add
shlb
testl
pop
testl
pop
fiadds
mov
aas
jns
lods
scas
pop
adc
mov
mov
fstl
out
in
decl
and
sub
arpl
mov
bnd
repnz
aam
mov
mov
push
mov
enter
mov
ret
cwtl
adc
test
in
add
test
int3
int
lea
repz
pop
and
lds
and
mov
dec
in
adc
dec
jmp
fdivp
xor
cmpsb
dec
sbb
xchg
lock
inc
xor
decb
not
call
aaa
lock
leave
mov
mov
into
iret
movsb
fdivs
aaa
in
int3
inc
fisubrl
fimull
adc
inc
test
jp
dec
mulb
xchg
sub
call
fs
jae
movsb
xor
test
lret
pushf
jno
test
sub
pop
mov
vmaxps
xor
sbb
adc
sub
fstl
pop
mov
insl
and
push
sub
inc
test
or
scas
roll
mov
rorb
ficoml
mov
jne
mov
out
lret
lret
or
fwait
adc
cmpsl
push
mov
repz
adc
cmp
or
pusha
scas
mov
fidivrl
inc
cld
xchg
adc
jmp
add
jno
inc
xor
test
enter
mov
cmp
cmpsb
aas
sahf
popa
push
xor
sbb
das
repnz
out
mov
mov
and
inc
popa
movsb
lea
enter
out
inc
int
adc
enter
inc
loopne
cmp
int
add
pop
mov
fwait
cs
sub
xchg
int3
fcompl
rcl
sbb
std
ljmp
xchg
lds
jmp
in
dec
movsl
stos
shlb
cmp
sub
mov
lock
xchg
enter
ret
push
mov
loopne
push
xchg
push
push
jae
pusha
sbb
data16
and
adc
pop
lret
fisubrs
xchg
in
pop
adcb
add
mov
push
rolb
cmp
addr16
insl
into
xor
cs
je
xchg
mov
imul
pop
mov
adc
xchg
xchg
sub
pop
adcl
lods
xchg
or
cmp
push
add
in
repz
lcall
mov
popf
aam
push
sti
mov
mov
dec
inc
dec
xor
push
fisttpl
mov
lcall
rcll
clc
movsb
inc
dec
cmp
jb
mov
mov
push
xlat
fsubr
fs
int
jg
out
sub
cmc
inc
das
rorl
repz
lock
insb
sub
out
pop
or
popa
mov
popf
xchg
push
pusha
inc
add
mov
add
xchg
ret
mov
lcall
pop
out
push
jbe
mov
popl
or
pusha
insb
xorl
lds
mov
push
adc
adc
inc
out
es
adc
stc
cld
inc
imulb
lcall
pusha
gs
arpl
out
sti
push
std
outsb
cli
data16
mov
mov
xor
movb
jmp
addb
imul
sbb
imul
dec
stc
rcll
gs
mov
adc
xchg
adc
push
push
xor
jns
mov
fwait
and
adc
lcall
push
sti
popf
loope
adcb
mov
adc
jp
outsl
jg
xor
pop
mov
jmp
popa
out
mov
mov
mov
std
mov
fdivl
mov
out
inc
jecxz
sub
stc
lahf
shlb
dec
sahf
stos
dec
mov
imulb
data16
fcompp
mov
rclb
in
sbb
or
inc
jecxz
aam
mov
jecxz
mov
pusha
inc
adc
mov
or
xabort
dec
xchg
test
cli
jae
addr16
dec
jg
outsb
pop
sbb
cmp
lock
jg
xchg
arpl
scas
pop
int3
scas
ds
sarb
test
bound
adc
mov
or
sub
cmpsl
xor
insl
push
xor
jo
dec
mov
push
out
inc
scas
push
mov
insl
xchg
cmpsl
xor
pop
xchg
jae
sbb
push
adc
arpl
jbe
roll
jp,pn
jb
ljmp
adc
mov
add
cld
je
xchg
dec
fldl
add
push
in
dec
out
push
pop
in
adc
sub
xchg
imul
inc
sub
dec
gs
jns
insb
jp
mov
sbb
sbb
push
orb
decb
aas
mov
cli
push
mov
cmp
sbb
and
add
inc
lahf
mov
insb
xchg
push
xorl
into
xchg
ret
and
cwtl
push
pusha
or
push
and
mov
hlt
cmpsb
cmp
in
xor
or
shrl
xor
nop
and
es
les
popf
and
sub
pop
mov
jle
cmpsb
lret
push
lock
je
jmp
xchg
push
cmp
ljmp
ret
dec
cltd
lcall
jbe
repz
add
loope
test
cmp
xchg
iret
add
out
and
sarb
adc
push
mov
cmp
leave
movsl
push
xchg
enter
test
dec
jp
mov
pushf
mov
and
popf
ss
mov
xor
xor
sahf
cmc
sub
pop
fidivrs
mov
cli
dec
movsl
and
mov
or
leave
inc
adc
lea
cmp
data16
xor
mov
xchg
sarl
sub
add
call
sub
pusha
ja
in
int
mov
mov
cs
insl
aas
sbb
or
int3
aam
adc
jle
cwtl
repnz
addb
movsb
mov
xlat
jecxz
dec
sub
inc
push
daa
pop
test
sti
or
mull
idivb
mov
sub
inc
pop
mov
cmc
test
dec
push
rcrb
jg
pop
mov
cmp
add
xchg
popf
add
daa
push
mov
xchg
shl
add
loope
mov
jmp
mov
inc
repz
out
rol
xchg
jno
push
mov
pop
mov
cwtl
or
add
inc
adc
inc
push
mov
int
adc
mov
jne
fldl
adc
mov
int3
in
or
shl
inc
cs
sub
mov
or
stc
mov
add
push
push
call
sbb
pusha
ret
jb
sbbl
loope
jns
mov
ret
test
testb
mov
add
pop
std
xchg
rorl
js
loop
push
enter
jb
stos
clc
fildl
inc
push
push
sbb
fisubs
or
pop
push
ljmp
ret
das
aam
iret
push
and
mov
cmc
mov
mov
imul
sbb
dec
cltd
adc
mov
push
les
mov
aas
imul
andb
pop
in
and
mov
push
cmpb
mov
and
cmpsl
jo
push
ja
cmp
aaa
adc
pop
movsl
popa
sbb
fsubrl
mov
mov
sub
adc
bound
and
xor
jns,pn
scas
pusha
clc
adc
lds
into
or
fisubs
pusha
test
test
jl
rcll
dec
pop
ret
cltd
sub
pushf
mov
callw
xchg
xlat
imul
dec
leave
adc
mov
mov
filds
cmp
adc
lods
xchg
sub
ret
scas
dec
aaa
ret
push
xlat
push
scas
loope
push
xchg
orb
fs
mov
adc
lods
push
into
cli
fistps
sub
jns
mov
cmpsl
jnp
loop
or
loope
mov
ficoms
dec
adc
addr16
jae
sbb
xor
jmp
mov
jo
push
movsl
push
mov
jl
in
ficomps
stc
inc
shll
cmp
fnsave
jecxz
or
or
out
jmp
mov
into
cmp
fwait
push
daa
fisubl
cmp
mov
or
into
mov
out
sub
out
adcb
cmp
adcl
xor
sub
pusha
xchg
mov
xor
adc
dec
mov
aad
ss
das
rorl
jge
andb
lret
dec
xor
dec
inc
insl
test
xor
outsl
loope
xchg
jo
mov
jns
mov
dec
movsb
and
popa
pop
lods
mov
ficoms
lods
push
shl
mov
out
orl
xchg
jl
popf
scas
adc
lahf
or
shr
out
cs
push
bound
inc
mov
fistl
das
sarb
sbb
jno
pop
or
mov
orl
push
addr16
insl
mov
lret
andl
xor
insb
jg
daa
test
sbb
dec
stc
in
push
lea
insl
or
test
sub
adc
loopne
in
sbb
inc
repnz
imul
gs
push
push
xor
jne
daa
ljmp
cmp
inc
mov
aaa
add
xchg
cwtl
or
or
es
lret
jae
into
mov
data16
cmpsl
cmp
adc
mov
hlt
mov
cmp
adc
pop
in
loope
mov
sub
mov
cmc
outsl
aam
mov
push
and
cmc
pop
sbb
test
add
stos
and
jo
out
push
inc
int3
dec
les
je
push
mov
scas
inc
xor
xchg
lret
jp
dec
pop
xlat
dec
sub
lcall
test
xor
sub
or
push
add
lds
xchg
iret
scas
push
mov
sbb
dec
rclb
xchg
push
in
or
push
inc
cli
mov
mov
pop
jns
mov
ss
mov
pop
adc
push
lret
cmp
dec
dec
dec
jle
dec
ds
and
rolb
insb
xchg
pop
and
xor
movl
add
and
enter
and
pop
sub
push
mov
mov
mov
pop
dec
jb
add
fucom
push
push
mov
daa
mov
mov
fldl
push
pop
fdivs
test
cmc
cmp
push
dec
ror
mov
dec
xchg
pop
rcrb
sub
stc
sub
pop
repz
notb
jb
cmp
pop
test
inc
cmpsb
mov
or
ljmp
or
sub
daa
mov
dec
jg
cld
sbb
inc
and
xchg
cmp
mov
pop
fs
mov
xlat
mov
rclb
sbb
dec
das
addb
and
pop
fimull
repz
adc
or
popa
data16
rorb
xchg
sbb
pop
push
ljmp
push
scas
cmpsb
orl
jno
rcll
mov
inc
jbe
add
xchg
addr16
nop
addr16
loope
mov
push
mov
inc
iret
pop
stos
mov
or
pop
push
xor
push
popf
and
adc
cmp
mov
mov
dec
sub
adc
in
popf
std
aam
mov
aas
push
sar
cmp
ljmp
ret
icebp
test
mov
push
data16
loope
jle
cld
test
xor
dec
call
push
pop
pop
xchg
pop
shl
and
movsb
in
dec
jg
jp
xlat
xchg
ret
mov
push
jge
inc
dec
xor
sub
mov
inc
in
add
aas
xchg
orb
xchg
push
out
andb
or
int
mov
push
xor
mov
sbb
fsubrl
frstor
jle
add
fnstcw
popa
mov
sarl
es
xchg
cmc
dec
sarb
pinsrw
mov
cli
xchg
addr16
aad
movsl
push
mov
cmp
pop
or
xchg
shl
mov
mov
test
out
in
cld
out
add
je
dec
cmp
sub
sub
or
adc
inc
lret
xchg
decl
fwait
inc
jg
add
pop
and
scas
inc
inc
imul
cmp
add
xlat
rcll
sbb
mov
aaa
mov
fildll
scas
jmp
adc
add
jae
push
loope
insb
mov
sub
sub
jmp
jo
adc
pop
or
or
ffreep
xor
mov
xchg
and
lret
xchg
xchg
fdivl
lds
cld
sub
push
and
jge
pop
loope
stc
cmc
inc
push
pop
and
mov
xor
das
fisttps
call
out
jbe
push
aaa
popa
test
and
cmp
loope
out
jp
sub
and
add
imul
push
mov
enter
push
nop
push
dec
or
inc
sbb
pop
lock
cmp
stc
cmp
sbb
ljmp
clc
mov
out
loop
or
lock
xchg
lret
push
out
push
mov
push
fildll
mov
xlat
jl
mov
and
int
lock
rcrb
inc
mov
mov
jae
lea
aam
mov
ret
sub
mulb
cwtl
xchg
fdiv
dec
and
or
sbb
aam
dec
or
shrl
pushf
jl
cmpsb
or
pop
popf
mov
out
add
ret
pusha
cmp
cmp
push
aam
jae
sahf
inc
mov
std
xchg
xor
push
or
pop
outsl
mov
inc
mov
shl
mov
ffree
mov
jecxz
aad
mov
outsl
cmp
rcrl
loopne
popf
dec
repnz
or
jecxz
push
mov
insl
dec
dec
lcall
out
mov
insl
or
pop
sbb
jo
gs
inc
out
pop
or
insl
cmc
sub
push
fsubrs
sub
in
add
mov
pop
sub
jb
loop
shlb
jae
xchg
dec
xchg
fnstcw
cmp
addr16
lock
addr16
inc
push
mov
mov
or
sub
icebp
jle
xchg
mov
aas
xchg
adc
jo
outsb
dec
fwait
outsb
pop
cld
jb
imul
mov
es
pop
cmpsb
push
mov
repnz
sub
xlat
xchg
fs
inc
je
sarl
xor
sub
xchg
sbb
sarb
cmpl
inc
xor
mov
out
in
push
push
pop
dec
popl
vminps
xchg
jne
in
das
notb
push
sub
xchg
nop
sbb
push
jecxz
imul
pop
out
xchg
pop
fldt
adc
mov
or
lret
cld
mov
jne
stos
addr16
dec
outsb
roll
xchg
sbb
dec
or
or
sahf
in
lret
pop
xchg
xchg
fisubrl
andl
push
test
or
adc
mov
adc
shl
xchg
jmp
pop
rorl
test
pop
icebp
fnsave
and
jge
inc
rol
xchg
mov
jae
rcrl
xchg
sbb
pop
mov
jp
mov
cmp
xchg
shrl
decb
loopne
dec
adc
cmc
stos
jnp
imul
mov
push
fcmovu
push
adc
out
inc
mov
in
aaa
cmp
ret
xor
std
cmp
int
lret
add
hlt
movsl
sarl
xchg
sbbb
mov
push
sbb
sub
bound
lods
xchg
fdivl
mov
outsb
dec
adc
cmp
pop
std
and
in
popf
pop
mov
out
adc
or
jae
pop
mov
add
dec
xchg
pop
scas
push
pop
sub
push
xchg
testl
or
or
stc
faddl
jmp
lret
add
inc
sbb
test
addr16
scas
pop
lods
nop
movb
call
jge
ss
enter
pop
mov
rorb
in
cmp
aam
mov
gs
aas
repz
xor
filds
jp
in
out
in
sub
imull
dec
xor
push
jnp
jo
sarl
dec
loopne
ja
xchg
jns
cmp
testl
dec
test
lods
xor
lods
movsb
lods
push
fidivl
sbb
inc
adc
mov
loopne
call
jg
test
mov
or
in
pop
jno
out
cltd
es
popf
cmp
mov
mov
clc
fcmove
leave
ret
iret
xchg
andl
xor
xchg
sbb
jp
inc
inc
sbb
mov
into
fs
push
push
loop
les
mov
bound
aaa
dec
cwtl
xchg
shr
jnp
arpl
xchg
popf
into
hlt
cmpsl
sub
vmaxsd
popf
dec
inc
fcmovnb
xchg
sbb
cltd
jl
jnp
sbb
push
inc
cmpsl
xchg
push
xor
or
cwtl
ret
nop
notb
js
mov
adc
stos
jle
les
mov
xlat
cmp
leave
inc
dec
add
xchg
push
lret
mov
dec
pusha
inc
mov
lahf
mov
les
adc
leave
shrl
mov
mov
sub
loop
out
cmpsl
sbb
pusha
dec
idivl
mov
stc
int
ja,pn
ljmp
repnz
rorb
loope
lcall
outsl
xchg
data16
xchg
addl
or
adc
dec
es
sahf
test
enter
fs
inc
add
dec
inc
push
pop
pop
leave
cmp
jl
cmp
test
mov
and
clc
shrb
push
decb
das
shl
js
xor
adc
inc
mov
inc
pop
sub
jle
icebp
mov
inc
xor
or
mov
gs
int3
popf
xor
cmpsl
mov
push
stc
adc
and
cmpsb
push
aas
add
sub
jle
inc
jl
push
sti
clc
pop
nop
bound
lock
mov
dec
inc
leave
ret
in
repz
fistpl
pop
push
adc
imul
arpl
popf
cmp
inc
in
xchg
sbb
cmp
mov
mov
xlat
xor
pop
and
jb
dec
add
pop
mov
cmpb
push
mov
cmp
xor
cmp
jno
loope
ds
cld
mov
and
sahf
subb
es
dec
jmp
cli
pop
cmp
in
sahf
cmp
mov
mov
cli
inc
psrlw
test
add
pop
int
jecxz
dec
pop
lock
xor
inc
das
mov
dec
and
enter
imul
inc
mov
test
out
push
gs
xor
loop
lret
pop
mov
mov
inc
popa
lods
in
adc
fsubrl
jge
nop
das
outsl
out
pop
movsb
mov
mov
xchg
push
push
lds
inc
push
and
stos
xor
scas
arpl
testl
int3
enter
xchg
sub
stos
mov
lahf
test
and
pop
add
dec
jo
pushf
sub
mov
or
mov
and
and
outsb
ror
cmpb
push
js
and
pop
mov
sub
adc
add
clc
mov
sbb
aaa
cmp
imul
lock
in
cmp
pop
mov
push
cwtl
sbb
int
mov
add
and
cmp
mov
sub
andl
jg
dec
jp
pop
mov
jns
pop
xor
fstl
leave
pushf
in
sbb
ljmp
les
fldl
lods
rcrl
mov
rcrb
adc
ffreep
insl
hlt
cld
jo
inc
scas
xor
jp
fsubl
push
rol
mov
mov
and
out
push
pop
pop
jge
dec
out
xor
pop
outsb
mov
sub
inc
lret
popf
jne
jo
jge
aaa
insl
add
out
andb
repnz
addr16
insb
cmp
aam
loope
lods
push
sahf
test
cmpsb
inc
mov
sbb
shrb
pop
rcrb
push
add
push
lahf
and
pop
stos
mov
fimull
addb
inc
rolb
inc
sbb
xchg
out
inc
xchg
negb
mov
mov
jnp
cmc
push
push
mov
cwtl
mov
into
and
add
xor
jmp
or
jno
ret
daa
mov
aaa
pop
in
xor
jns
aad
push
mov
push
dec
lods
push
push
pusha
data16
inc
out
iret
or
xchg
push
pop
jno
clc
in
push
inc
out
das
push
xchg
js
mov
cwtl
pop
inc
stc
mov
inc
aas
lcall
lock
aas
jle
test
cmp
mov
xor
jno
int3
shrl
clc
mov
aaa
cmc
jg
add
adc
test
mov
xor
sbb
jmp
ljmp
lods
pusha
mov
xchg
add
mov
xor
hlt
mov
pop
stos
pop
lods
lock
rcll
rcl
dec
xor
in
shlb
pop
push
add
sbb
mov
lods
mov
sbb
js
popf
in
cs
js
test
pop
lds
lock
test
dec
shlb
xor
sbb
mov
loop
mov
jp
and
push
xchg
nop
iret
pop
lds
fldenv
xchg
mov
mov
int3
into
outsb
cmp
mov
andb
adc
push
jecxz
ja
and
adc
ror
decl
ret
add
into
ja
dec
cld
and
pop
imul
mov
push
inc
cmp
ss
push
iret
ret
popa
mov
sbb
push
add
and
les
and
xchg
add
add
xor
xor
fstpt
leave
inc
push
out
pop
pop
fsts
push
js
push
jns
jp
dec
pushf
adc
daa
push
imul
cmpsl
lret
or
xchg
call
xor
and
push
dec
stc
repz
pop
pop
rclb
cmp
mov
lods
jnp
test
shlb
jnp
test
jl
aaa
dec
sbb
shrb
rcr
loope
imul
movsl
fdivrl
int
jns
or
in
popf
push
push
sarl
lahf
or
xchg
repnz
js
out
inc
xchg
mull
idivl
shll
scas
pop
or
cmp
mov
sub
push
cmpb
call
ret
xor
imulb
sub
das
push
test
jp
pop
incb
in
push
dec
cltd
xchg
pop
fidivl
leave
cmpsl
mov
in
dec
lds
or
push
daa
bound
push
hlt
aaa
jmp
insl
call
pop
mov
scas
and
sbb
inc
aam
adc
pop
and
sbb
sub
call
in
mov
push
mov
cmp
stc
mov
and
push
rcl
dec
push
cs
mov
sub
jp
stos
cmp
stos
push
lock
scas
in
adc
imul
loope
pop
mov
cmp
out
cmpsl
pop
outsb
mov
xor
pop
scas
push
mov
stc
mov
add
dec
ret
leave
fildll
xchg
and
enter
xchg
mov
mov
dec
in
mov
jne
cmp
xchg
dec
jbe
in
mov
pop
jno
std
add
cmpsl
inc
rcrl
push
jge
lock
sbb
sub
enter
xchg
mov
cltd
jle
stos
jo
and
inc
jecxz
push
cmp
daa
rcll
xchg
sahf
push
mov
cmp
push
dec
inc
ret
ffree
outsl
cmp
int
push
nop
insl
mov
pop
dec
loope
fildl
or
pop
push
popa
negb
lahf
mov
cs
xor
into
and
mov
push
dec
and
sbb
push
cltd
mov
popf
pop
or
mov
popa
decb
in
push
lcall
dec
or
lcall
enter
popf
lods
or
jl
pop
sub
fstl
inc
pop
adc
sbb
lret
mov
int3
push
mov
lods
inc
addr16
mov
inc
int3
xor
pop
sub
in
push
jg
aam
scas
out
adc
sub
pusha
out
outsl
sbb
adc
int
push
mov
dec
inc
lds
jbe
mov
mov
iret
sub
or
jns
push
xchg
add
add
mov
cmc
sub
xor
jl
idiv
std
sbb
loop
sbb
stos
mov
dec
adc
movsl
mov
addr16
add
and
dec
mov
loope
call
imul
movsb
add
mov
adc
cmpsl
push
inc
hlt
test
int3
in
dec
das
xchg
mov
into
mov
scas
mov
aas
pop
cmpsb
inc
sbb
cmp
sub
cli
aam
fwait
push
add
and
addl
outsl
push
and
movsb
adc
jbe
inc
inc
xor
lret
jp
push
fadd
inc
cld
sub
mov
inc
mov
in
and
loopne
out
mov
fisttpl
mov
jnp
xor
or
adc
loop
or
sub
dec
shlb
imul
aad
pop
test
stos
dec
xchg
into
jmp
inc
cmpsb
cmpsb
pop
or
cltd
xor
adc
imul
push
sbb
mov
mov
into
pop
xor
sub
aas
mov
stc
pop
dec
pusha
fistpl
inc
inc
push
cmpsl
jmp
xor
and
jo
fdivrl
fs
xchg
outsl
fwait
outsl
cmpsb
je
ret
test
jns
xorl
cli
popf
iret
into
adc
or
xchg
je
sbb
or
movsl
scas
sbb
in
les
into
cmpsb
xor
dec
xchg
cmpsl
push
cltd
xor
jp
and
push
scas
add
xor
adc
xlat
nop
and
out
or
inc
aam
push
or
movsl
scas
add
push
sub
pop
cs
push
add
adc
jb
fnstsw
cwtl
test
rolb
add
sub
mov
idivb
ljmp
cmc
xchg
xor
push
aam
mov
in
mov
xor
incb
cmp
pushw
test
fnstenv
aas
mov
push
out
push
mov
sub
out
cmp
and
cmp
out
mov
xchg
or
pusha
cmp
or
movsb
outsb
jno
sahf
mov
dec
fnsave
js
clc
and
push
repnz
int3
insb
and
xor
xor
lahf
test
push
dec
adc
stos
xchg
gs
in
mov
aas
loop
xchg
insl
lret
loop
mov
mov
das
out
adc
cld
pusha
push
xchg
sbb
push
mov
pop
jno
cmp
jo
mov
xor
push
or
push
cmp
test
jae
test
and
pop
push
out
mov
imul
xor
ja
pop
sub
jp
cmpsb
shrb
fs
mov
cmp
or
or
cmp
sahf
or
ja
loope
loop
xchg
les
inc
dec
insl
ja
mov
aam
cmpb
mov
sub
inc
push
jle
mov
imul
loop
js
adc
test
bnd
test
fidivrs
mov
jno
enter
cltd
and
imul
sbb
hlt
pop
dec
loope
sub
les
xchg
scas
gs
sub
fdivl
or
movsl
sarl
loopne
adc
sbb
mov
lcall
inc
cwtl
mov
std
push
shll
pop
lcall
lock
in
dec
lock
mov
push
and
dec
mov
test
call
sbbb
sub
shlb
inc
pop
stos
push
mov
or
xlat
mov
fadds
les
or
xor
movsb
jns
aaa
test
test
mov
xchg
add
in
lret
sahf
pop
cmc
lods
mov
les
aas
popf
popa
dec
inc
rcrb
daa
jecxz
ficoms
sub
pusha
cmp
stc
imul
inc
pop
xor
adc
xchg
cwtl
jb
add
sti
cli
xchg
lret
or
xor
mov
popf
mov
inc
test
test
push
aam
insl
outsb
lods
sbb
cmp
hlt
jle
cld
movsl
pop
or
iret
cmp
cs
ficoml
repz
in
dec
int
pop
push
inc
iret
sub
push
mov
popa
cmp
out
mov
cld
fsubl
nop
pop
mov
adc
push
ret
and
aam
mov
or
pop
es
in
popf
popf
ja
rorl
fwait
sub
adc
sub
je
stc
push
scas
ds
adc
dec
jecxz
lea
mov
popa
movsb
sub
rorl
jae
je
hlt
cltd
das
pop
loope
cmp
sbb
sbb
mov
gs
jecxz
icebp
xchg
movsb
es
scas
and
out
int3
and
add
enter
imul
xchg
out
inc
icebp
pop
push
out
inc
xchg
dec
hlt
sbb
push
rcrb
arpl
scas
pop
or
mov
mov
shrl
mov
push
rcrb
pushf
mov
nop
sbb
adc
inc
in
dec
mov
inc
inc
sbb
stos
mov
sbbb
and
sub
xchg
out
dec
sbb
and
and
add
jg
xchg
ss
test
add
cmpsb
mov
xchg
outsl
ret
insb
sbb
sti
pop
sarb
popf
jmp
cmpsb
outsl
sub
cmp
lret
fidivs
fdivl
and
aam
inc
fcompl
loopne
adc
fs
cmpsl
in
sbb
or
sbb
or
cmp
fisttpl
xlat
mov
mov
mov
out
inc
cli
mov
lods
sub
mov
or
mov
push
adc
push
fiaddl
ret
or
xor
or
fmuls
fwait
iret
xchg
xchg
xchg
ss
xchg
jmp
cmp
lock
ja
fucomp
sbb
mov
add
ret
jle
push
notl
sahf
fdivr
inc
mov
fwait
lock
xchg
hlt
xchg
insb
cs
jg
lcall
adc
inc
pop
stos
mov
subb
fs
out
enter
push
jle
loope
mov
fisttpll
bnd
push
ljmp
xor
sbb
mov
push
data16
or
aad
and
xchg
loop
xchg
mov
aas
or
rorb
cmp
mov
pop
sub
movsw
pop
clc
out
push
shll
mov
push
add
movlps
pop
rorb
mov
sub
inc
sub
lahf
xor
fisttpll
mov
popa
lcall
int
lods
sbb
mov
testl
enter
and
or
adc
ret
lret
mov
xor
cmpsl
lret
or
fs
pop
or
je
int3
shrb
movsb
out
adc
mov
mov
add
dec
gs
sbb
mov
test
jge
and
pop
int3
in
pop
mov
ljmp
pop
aam
sarl
pop
pop
sub
jg
aad
xchg
and
lret
mov
inc
mov
cltd
mov
popf
push
les
test
roll
dec
mov
icebp
mov
imulb
adc
add
insl
push
cld
xor
lret
mov
ret
add
xchg
rorb
mov
mov
sahf
into
insb
shll
xor
cmp
addr16
repnz
scas
lahf
or
stos
lret
xor
inc
dec
out
mov
cmpb
jge
imul
pop
xor
push
roll
or
insb
mov
and
and
and
sbb
pop
out
cmp
sbb
sbb
pop
adc
sub
das
xchg
icebp
add
or
sub
in
adc
dec
fists
cld
xchg
call
sbb
out
pop
pop
or
sub
mov
add
mov
int
sbb
mov
fmuls
jp
or
mov
push
je
cmp
sub
pop
sbbb
or
add
jns
aaa
fcmovu
imul
push
repz
jns
jmp
inc
fdecstp
ja
bnd
popa
fists
xchg
rcrb
subl
mov
scas
scas
sti
sbb
push
push
push
xchg
xor
mov
jo
add
mov
aaa
notl
popf
push
sbb
insb
daa
outsb
popl
mov
int3
xchg
cmp
fucomi
jns
faddl
repz
rorb
mov
ljmp
jp
call
mov
mov
je
dec
push
outsb
xlat
lret
iret
pop
xchg
xor
leave
gs
sbb
testb
pushf
lcall
or
stc
fisubrl
ljmp
sub
dec
inc
pop
nop
pop
rcrb
sbb
jle
mov
mov
test
mov
cs
out
pop
addb
es
add
push
and
push
push
push
xchg
test
aaa
push
add
in
pop
dec
lock
mov
jns
xchg
mov
cmpl
and
insb
sti
jmp
jmp
dec
mov
or
sub
mov
add
jne
iret
fldt
xor
cmpsl
rcrb
cwtl
dec
pop
repnz
xchg
add
push
out
stos
cld
sbb
test
fucom
sarl
push
aam
lds
inc
push
mov
movsl
mov
nop
push
ja
mov
test
fiaddl
popa
rolb
scas
xorl
test
call
sti
outsl
and
popf
pop
fisttpll
jae
clc
data16
mov
mov
scas
dec
cli
pop
rol
rcl
packsswb
mov
adc
gs
vlddqu
outsb
imul
dec
pop
mov
arpl
pop
dec
mov
sub
mov
bound
pop
pop
or
xor
rcr
pushf
sub
ss
ja
into
pop
fwait
enter
push
inc
lock
push
scas
xor
jge
jg
enter
adc
sub
cli
pushf
addb
and
addr16
arpl
pop
jecxz
adc
push
cltd
xchg
dec
adc
hlt
pushf
jg
aam
jo
cmp
xchg
std
jae
push
add
fwait
enter
xchg
xchg
pusha
daa
xchg
std
xlat
and
jbe
scas
out
cld
lret
adc
push
add
bound
mov
mov
in
xchg
sti
cli
scas
xor
push
es
and
or
mov
xor
mov
sahf
lahf
mov
xor
std
cmpb
add
mov
imul
les
sub
push
loop
and
insb
xchg
sub
loopne
ret
dec
xchg
movsb
jecxz
sbb
lcall
lcall
stos
je
xlat
stos
repz
adc
adc
add
rorb
ja
scas
cmpsl
xor
loopne
inc
les
cmp
mov
lea
pop
test
xor
xchg
aaa
add
sti
lods
ds
cltd
lahf
das
inc
dec
pop
hlt
cmp
pop
aam
iret
or
imul
movsl
mov
xor
inc
movsb
rorl
cmp
ss
adc
stc
hlt
pop
cmp
cli
in
push
mull
and
mov
adc
cmp
push
mov
sbb
inc
adc
xchg
jl
fcoms
sub
cmp
decl
mov
mov
nop
jecxz
call
into
add
sub
dec
lcallw
xor
pop
cmpsb
sub
sbb
add
xor
jns
loop
insl
sub
pop
and
inc
mov
sub
inc
outsb
lods
cmp
cmp
outsb
das
ljmp
shll
pop
ret
es
and
cmp
enter
in
pop
rclb
nop
mov
test
pushf
fldcw
sub
mov
int
sub
jnp
out
mov
shll
testl
push
xlat
mov
xor
scas
fcmovu
mov
push
dec
dec
ds
data16
mov
loop
out
lret
pop
enter
jne
rcl
and
dec
cmp
jno
std
and
loop
fdivrl
ljmp
loop
sahf
outsb
dec
aad
dec
mov
je
imul
lods
ftst
cmpsb
aas
push
push
inc
cmp
mov
or
sub
mov
std
test
jo
mov
mov
or
jno
pop
int
xchg
cmc
aaa
lods
jo
jmp
dec
inc
or
fisttpll
jae
imul
cmp
mov
lcall
and
inc
push
pop
fwait
rcl
frstor
sbb
fmul
fs
inc
jno
dec
cld
jne
faddl
aas
sarl
xlat
mov
add
jo
shrl
es
loop
cld
cmc
stc
ret
pop
test
sub
mov
dec
repz
sti
inc
inc
jle
hlt
xor
sbb
dec
mov
xor
das
stos
sbb
ret
xchg
mov
test
call
popa
mov
aaa
sub
ds
cmp
std
pop
sub
and
pushf
push
out
fwait
inc
xchg
xor
add
test
inc
sub
lds
lret
out
pushf
sbb
shll
nop
sub
sbb
test
pop
mov
lds
shll
out
and
sbb
adc
ret
orb
xor
inc
or
cmpb
xor
pop
mov
mov
cmp
xor
sahf
mov
xor
pop
dec
jg
ja
loop
add
jmp
adc
and
xor
jle
or
aam
push
movsl
fistps
push
mov
or
mov
xchg
pop
jl,pt
cmp
inc
push
cmp
ret
subb
fisubrl
push
cmp
xor
ljmp
addb
aas
pop
sti
inc
inc
icebp
sti
les
ret
fwait
loopne
nop
into
cmp
sbb
mov
mov
call
xchg
out
pop
sbb
mov
jmp
clc
lcall
lods
ljmp
pop
sbb
and
rolb
dec
in
adc
mov
sub
mov
cmp
cmp
cltd
mov
mov
dec
popa
dec
dec
jmp
inc
xchg
adc
mov
and
xchg
cli
loop
or
icebp
xchg
mov
mov
fistl
sub
sub
xor
pushf
outsb
sbb
outsl
bound
adc
mov
aam
test
jp
jle
stos
movb
xchg
fcoml
lret
pop
cld
xor
sbb
sbb
mov
lret
dec
call
mov
mul
ljmp
loop
adc
xlat
sbb
ret
push
adc
xchg
sbb
jmp
ljmp
testl
int3
adc
pop
xchg
popf
es
mov
push
xchg
inc
pop
sub
adc
fldt
mov
in
call
into
aad
inc
les
popa
jbe
popa
push
xchg
mov
sub
pushf
xchg
psubusb
mov
dec
mov
inc
insb
dec
xchg
iret
notl
push
mov
dec
rclb
xchg
fmull
orb
or
push
pop
lret
jb
cld
xchg
push
stc
or
enter
jle
out
jge
repz
sub
loopne
mov
sub
out
mov
frstor
mov
push
mov
pop
fcomip
loope
divl
jnp
ljmp
int
push
sbb
popf
fs
add
leave
out
ret
sub
imulb
push
lods
cmp
ljmp
and
sahf
mov
cmp
jp
mov
loope
orb
xor
push
xor
clc
sti
repnz
jl
mov
js
fsubl
mov
in
lret
lods
data16
cmp
adc
dec
push
mov
xor
enter
dec
jo
cmp
mov
or
push
jo
inc
aaa
mov
mov
mov
mov
mov
int
and
mov
dec
mov
inc
lods
rolb
xchg
and
loopne
pop
bound
jne
push
repnz
sub
rclb
xor
lock
xchg
pusha
subl
iret
fwait
add
fdivs
subl
repz
cmp
push
leave
adc
out
xchg
xlat
pop
in
pop
aam
rolb
push
cmp
stos
push
adc
sub
inc
sbb
sti
add
add
or
fcomps
loop
arpl
rolb
cmp
fs
sub
jg
xchg
mov
mov
xorb
add
mov
jecxz
xadd
push
xor
cltd
xchg
push
jle
lret
xchg
andb
mov
andl
xor
pop
rdpmc
sub
in
scas
stos
fwait
inc
add
out
andb
mov
push
aam
xchg
sbb
imul
sub
xchg
aas
pop
inc
outsl
push
ss
or
or
inc
test
dec
stc
cwtl
jg
stos
arpl
push
decl
dec
fimuls
add
enter
add
pop
xchg
stos
stos
inc
test
inc
lahf
mov
mov
xchg
scas
mov
pushf
loopne
sub
fdivs
xchg
mov
jge
pop
jae
inc
push
fistps
imul
test
dec
in
imul
sub
mov
mov
push
xor
cmp
add
adc
gs
test
aas
sub
loope
push
jmp
mov
inc
stc
dec
mov
stc
int
xor
cli
cld
shl
sahf
hlt
pop
push
leave
mov
orb
or
in
mov
cltd
xlat
and
mov
mov
stos
jbe
and
addr16
lods
jae
lea
cmp
arpl
je
es
jg
mov
int3
ljmp
lock
pop
cli
test
pop
mov
subb
roll
jmp
dec
rcll
pop
cmpsb
and
sub
mov
xor
ret
lock
lds
imul
inc
dec
mov
movsl
jge
jg
lret
in
add
mov
jb
stos
or
jns
lcall
mov
ret
std
sbb
sbb
aam
jl
fmull
and
mov
mov
or
imulb
add
rol
jmp
in
pop
aad
or
and
es
out
or
or
jmp
stc
loope
adc
push
arpl
fwait
int
aas
outsb
inc
in
xchg
sub
sbbb
pusha
adc
cmp
xchg
jp
cmp
mov
enter
xor
jmp
in
test
mov
mov
cmp
pop
jo
jae
rorl
mov
jne
push
jg
sbb
sub
xlat
call
or
lock
mov
mov
add
ror
in
ljmp
aaa
js
bound
mov
xor
pop
sbb
mov
xchg
xor
pop
lahf
mov
test
sahf
shll
or
in
lea
and
or
mov
mov
push
xchg
je
fwait
sub
leave
mov
push
rclb
scas
int3
stc
icebp
adc
call
xchg
lret
mov
add
mov
jno
push
add
aam
icebp
pop
xchg
jmp
lea
into
xlat
aas
xchg
mov
pop
sbb
ret
cmc
cmpsb
int
or
movsl
or
inc
aaa
jno
mov
lods
adc
outsl
testb
jne
sbb
lods
rcll
cmp
add
and
xchg
loope
mov
int
shrb
sub
negb
andl
mov
inc
icebp
xchg
arpl
insl
bound
fiaddl
int3
pop
push
or
add
push
add
sub
shl
sub
lret
xchg
push
pop
fsubl
ret
cwtl
cmp
xor
push
je
sub
pop
gs
jmp
adc
stos
movsl
dec
lcall
cmp
fidivs
push
stc
mov
xchg
pop
push
and
xor
mov
rcrb
outsl
fwait
mov
ljmpw
mov
out
mov
adc
test
mov
aad
psubb
aad
sub
xchg
push
inc
addb
rcll
subl
repz
cmpb
data16
cmp
inc
mov
ja
sti
stos
mov
pop
adc
or
jno
mov
clc
cld
add
and
stos
jb
push
adc
rclb
divl
repz
push
ret
or
push
test
mov
sbb
cmp
ss
loopne
inc
mov
enter
gs
sub
rcll
xchg
xchg
dec
adc
jmp
push
xchg
gs
addr16
mov
xchg
insb
xor
pop
mov
adc
cmp
fsub
cmp
xlat
jmp
imul
and
cmpsl
inc
mov
test
jp
testl
push
xchg
xor
stos
dec
popf
xor
hlt
stc
mov
lret
pop
lcall
mov
test
insl
lock
ret
xchg
mov
xor
xchg
ret
pop
ret
sbb
sub
add
sub
das
inc
call
lcall
jnp
inc
xchg
cli
xchg
daa
movsl
cmpsl
stos
shrl
push
cmpsl
repz
mov
loop
add
arpl
adc
into
add
mov
xchg
jl
loope
fsubrs
adc
ljmp
jo
xchg
push
fidivl
mov
popa
pop
aaa
or
rcrl
mov
pop
mov
jg
jg
outsl
bound
sbb
in
adc
xchg
scas
aad
je
mov
pop
clc
or
shlb
inc
sti
and
imul
incb
pusha
imul
mov
outsb
pop
jl
xchg
fcmovu
shlb
mov
jle
xchg
mov
das
ret
mov
sahf
pop
jbe
loopne
add
xor
adc
sub
pop
and
mov
add
lahf
ds
fiaddl
popa
sub
lea
push
int
mov
xor
inc
cmp
pusha
push
adc
in
rclb
in
cmpsl
inc
xchg
mov
test
jle
ja
dec
aam
lahf
pop
dec
std
push
and
insl
mov
mov
and
mov
jns
int
mov
and
out
lds
mov
popf
xor
popa
add
and
cmc
out
mov
cmpsl
sbb
pop
xor
sarl
pop
cmpb
xchg
mov
mov
shlb
aad
xor
test
and
or
jb
mov
fdiv
cmp
jns
or
push
ror
mov
aas
roll
or
nop
mov
add
inc
or
inc
cmp
bound
lock
mov
lret
ds
xor
adc
fwait
xor
cmp
neg
imul
inc
dec
test
enter
fmuls
jg
icebp
pop
or
fcoml
sub
xchg
mov
fdivr
sbb
xchg
adc
test
add
push
je
sub
mov
fcomp
push
adc
mov
or
lods
push
pop
push
daa
push
rorb
cmp
mov
test
sbb
mov
aas
inc
sbb
mov
mov
mov
xchg
mov
loope
push
into
push
pop
xor
inc
les
fisubl
mov
xchg
mov
push
out
icebp
lds
mov
sub
pusha
je
and
sub
dec
cld
xlat
into
sarb
xor
push
inc
movsl
mov
jne
push
mov
pop
add
insb
mov
xor
jne
adc
xchg
adcb
dec
mov
or
jne
arpl
and
adc
lds
loopne
test
sarl
fiadds
repz
ljmp
shll
and
cwtl
cmc
mov
lock
add
imul
sub
shlb
daa
fst
mov
movsb
movsb
sub
xchg
mov
mov
and
jns
int
imul
sub
xor
sbb
or
add
stos
mov
fisttpl
pop
push
xchg
fdivrl
inc
xchg
enter
pop
sbb
cmc
and
pop
jnp
addr16
loope
jo
pop
push
pop
pop
rclb
dec
or
shlb
cmp
sarb
xor
std
pop
push
aad
stos
add
inc
inc
pop
add
xor
sahf
jnp
jmp
mov
mov
cltd
sub
mov
std
stc
lret
testl
movsl
std
pop
gs
subb
out
xchg
mov
dec
add
shl
das
cmp
ja
or
cwtl
sbb
sub
mov
js
add
or
add
movsb
inc
les
or
sbb
movsb
movsb
in
js
aas
xor
pop
jmp
insb
add
jge
lods
sub
bound
popa
mov
dec
bound
and
dec
adc
mov
into
imul
call
jo
cmpsb
jge
addl
xchg
sub
lret
pop
scas
or
sub
mov
aas
sti
out
les
dec
adc
adc
int
xchg
aas
les
rorb
dec
xor
pop
movsb
inc
bound
push
push
int3
xchg
or
imul
movsb
sbb
add
ljmp
rcll
add
fstps
push
cwtl
mov
stc
cmp
pop
adc
int
es
fistps
ss
pop
add
notl
inc
jp
int
xchg
xchg
pop
out
and
mov
popa
push
dec
push
into
xor
dec
in
mov
sbb
jb
repnz
xor
aad
add
mov
add
out
jno
cmp
mov
cmpb
inc
das
adc
scas
cmpb
ret
inc
and
or
and
push
xor
xchg
mov
inc
adc
sbb
lock
out
int3
lret
mov
dec
sub
xorl
clc
mov
mov
fnstsw
dec
aam
push
bound
xor
stos
push
add
adc
outsb
sti
ret
data16
inc
lcall
pop
jge
mov
fdivrl
xlat
mov
xchg
cwtl
push
push
fucom
push
sub
test
inc
inc
fdivrl
dec
fiaddl
cld
xor
aam
jecxz
dec
loop
dec
ljmp
add
pop
push
loopne
test
sahf
inc
nop
adc
jge
in
cmp
push
sti
push
loope
xor
xor
aam
aaa
imul
mov
push
dec
push
sbb
mov
out
ret
movl
and
dec
add
jp
lahf
in
xchg
std
and
sub
jmp
test
outsb
mov
lock
mov
popf
sbb
push
bound
dec
jbe
push
and
leave
push
nop
xchg
xchg
pop
cmpsl
lret
pusha
ficomps
roll
das
xor
mov
data16
adc
stc
popa
push
repnz
repz
pop
pop
cmpsb
in
push
dec
jl
mov
pop
shl
sub
mov
cmc
subb
insb
add
inc
push
dec
sub
dec
or
pushf
in
fmuls
pop
push
mov
adc
push
lds
cmp
jge
popf
lea
cmp
mov
decl
dec
sti
dec
jge
sbb
jg
rcrb
mov
ss
nop
lds
ret
xlat
mov
mov
jle
dec
dec
loopne
mov
pop
add
mov
push
inc
into
arpl
out
jne
ret
push
mov
adc
ljmp
popf
ficoml
icebp
add
push
adc
ret
in
push
push
ljmp
cltd
xchg
sbb
or
outsb
or
jnp
sti
fidivs
je
lcall
jbe
push
pop
push
ret
sbb
repnz
mov
popf
add
inc
subb
sbb
daa
imul
lds
mov
repnz
xchg
das
dec
fisubrs
sub
jge
push
outsb
imul
int3
mov
fimuls
cmp
inc
mov
push
push
sub
ss
call
das
clc
xchg
imul
xchg
and
adc
mov
ljmp
out
cltd
dec
pop
pop
jg
and
inc
mov
roll
jns
cwtl
jecxz
xchg
not
jne
insl
add
negw
sub
mov
inc
lods
test
mov
cli
cmp
xchg
lods
mov
cltd
lods
cmp
fwait
inc
icebp
ljmp
stos
push
push
adc
push
jno
mov
pop
icebp
fnstcw
sbb
dec
pop
xchg
cmpl
push
in
cwtl
adc
js
sti
cmp
sub
push
sub
into
daa
test
ss
leave
mov
sub
lods
dec
xchg
fs
cmp
cmp
stos
mov
fld1
shrb
test
mov
pushf
in
faddl
sbb
dec
push
clc
sahf
fs
adc
sbb
test
push
add
and
dec
cmp
lods
or
nop
daa
push
or
cmpsb
push
inc
adc
das
repnz
mov
insl
gs
xor
fdivs
lahf
push
sti
inc
inc
scas
jno
mov
xchg
mov
cli
inc
jle
rcrb
sbb
out
pop
sub
xor
dec
outsb
les
fsubp
jns
div
jecxz
fisubrl
fiaddl
jmp
dec
es
pop
and
lock
pop
inc
xchg
lahf
loopne
cmp
mov
cmc
jle
je
xchg
mov
and
dec
sar
and
push
inc
push
fsubr
fnsave
cmp
lret
mov
xor
pop
testb
jbe
lcall
sub
adc
sub
lahf
sbb
mov
push
jb
push
push
sahf
into
add
scas
push
imull
and
dec
lods
pop
adc
xchg
faddp
popf
xor
jl
sub
flds
cmpsl
mov
pop
lcall
iret
cmp
dec
jb
gs
ljmp
insb
xchg
dec
jg
jle
pusha
inc
jno
add
call
psrlw
jnp
push
push
into
mov
adc
lret
and
cmpsb
out
aam
inc
fwait
aad
pop
mov
pop
push
sub
push
and
cmp
inc
fistps
mov
sub
lea
mov
mov
stc
inc
or
movsl
mov
lret
push
push
mov
push
and
frstor
dec
jecxz
ja
pushf
xor
outsl
repnz
xlat
xor
xchg
int3
and
out
cli
sbb
nop
pop
push
mov
adc
jge
mov
adc
xor
popa
je
stc
movsl
sub
pop
dec
fs
ljmp
mov
jl
pop
mov
in
mov
jge
add
sub
lahf
pusha
mov
add
cltd
jnp
pop
mov
inc
cwtl
stos
shrl
dec
loopne
dec
or
push
outsb
xor
push
repz
mov
mov
out
cmpsl
sub
jne
push
insb
dec
lret
xor
pop
xor
inc
adc
jmp
imul
or
sub
add
ja
das
sub
or
lcall
fsubs
aaa
insb
popf
jo
xchg
mov
leave
xlat
stos
mov
pop
fs
xchg
jno
repz
mov
push
fisubs
in
popa
dec
nop
sub
and
dec
arpl
ss
test
lret
push
xor
dec
stos
inc
dec
sub
jp
shll
mov
roll
subb
stos
scas
outsb
arpl
icebp
push
xchg
cltd
ja
mov
les
mov
push
fisttps
icebp
pop
xchg
and
imul
cmp
and
mov
mov
xchg
imul
jl
mov
cbtw
or
cmpsb
jp
cmp
loope
filds
sahf
pop
sub
cmp
cmp
inc
and
dec
in
insb
out
sub
lcall
out
and
inc
out
lea
ret
cmp
mov
push
adc
jb
call
mov
test
xchg
les
sub
lea
and
mov
bnd
cmpsb
repz
push
imul
repz
pop
and
scas
mov
inc
cmc
adc
mov
sarl
push
in
fs
pop
add
mov
aas
movsb
mov
sbb
scas
movsl
js
fwait
std
mov
fisubrs
stc
divb
xor
addr16
jmp
pop
enter
dec
xchg
sub
popf
push
pop
mov
mov
jo
xchg
xor
xor
pop
cmp
mov
push
and
mov
mov
mov
jb
fnsave
rorb
or
jl
test
adc
shrd
push
xor
jecxz
std
lock
push
aam
lds
mov
xor
aaa
fucomp
pushf
mov
scas
cmp
cltd
xchg
fnstsw
dec
cmpw
mov
dec
add
out
cli
std
sub
lods
insl
mov
cmp
dec
push
mov
fs
mov
loope
icebp
or
test
push
jp
adc
shl
sub
inc
bound
sub
dec
inc
mov
cmpsl
fsubs
jp
pop
cmp
mov
fdivrl
push
es
in
xor
mov
cmp
pop
mov
repz
out
rorb
cmpsb
pop
ret
in
pop
lret
in
test
gs
xor
ret
jmp
adc
sbb
sub
add
or
mov
push
mov
xor
xorl
imul
xor
out
or
inc
mov
enter
insb
sarl
fstpt
xchg
add
in
shlb
sahf
sbb
bndldx
mov
xchg
pushf
sub
cmp
sbb
xor
negb
lret
repnz
xor
xor
pop
repz
clc
int
lcall
std
in
adc
xor
adc
inc
jne
rclb
lcall
adc
movq
pop
dec
outsl
or
scas
aam
jge
imul
fcoms
mov
mov
imul
lahf
int
addr16
andb
das
sbb
scas
lret
cmp
and
sbb
pop
outsl
sbb
dec
and
push
pop
call
pop
push
inc
xchg
stc
add
add
dec
dec
imul
cmp
fstpl
jmp
mov
fmull
call
stc
cmp
pop
add
push
leave
dec
xchg
in
sarl
gs
es
cld
dec
cmp
outsb
pop
stos
sub
and
loop
cli
das
mov
pop
mov
cmp
push
ds
xorl
lcall
popf
jl
insl
inc
adc
mov
push
and
cmp
mov
push
roll
rorb
stos
push
out
rorl
jle
aad
sub
je
push
xchg
sbb
mov
mov
push
fisubs
push
add
pop
dec
ss
shlb
es
mov
sarl
pop
push
inc
clc
cwtl
xchg
pop
es
dec
inc
jmp
xor
les
or
add
push
ficoms
push
jg
in
xchg
nop
jno
dec
pop
lods
sub
scas
jne
inc
cmp
xor
lcall
jl
ds
sbb
arpl
cltd
mov
mov
push
cmp
addb
lahf
inc
add
xor
inc
xchg
fistpl
add
mov
sbb
lret
aam
dec
ljmp
sbb
pop
jnp
sub
mov
mov
or
loop
repnz
test
into
mov
clc
cmpsl
aaa
test
call
cmpsb
jno
xor
sub
push
out
push
fdiv
daa
rorb
pop
cmp
dec
scas
icebp
out
xchg
cmp
dec
filds
xor
cli
fwait
aam
lret
adc
icebp
aad
pop
and
int3
and
ljmp
int3
adc
push
ljmp
mov
cmp
in
jmp
lods
out
xor
dec
outsl
fdivrs
loop
in
or
sub
jne
or
test
or
sub
pop
add
popf
mov
rcll
push
cltd
es
lcall
mov
arpl
push
xor
and
add
adcb
arpl
jmp
fidivl
je
cmp
sbb
pop
icebp
dec
std
rcr
jg
repnz
rclb
jns
jo
sub
xor
pop
xchg
pop
jo
jns
nop
imulb
push
repnz
and
pop
leave
pushf
mov
and
cmp
or
pop
and
push
ja,pt
adc
cmp
enter
lea
jns
and
loopne
and
inc
mov
inc
cmpsl
push
int3
adc
test
pop
pop
xchg
adc
inc
push
hlt
adc
repnz
insb
sahf
lcall
ds
int3
shll
cmp
loopne
dec
aad
mov
sbb
mov
mov
jmp
jno
mov
inc
data16
mov
gs
inc
cmp
test
add
loope
and
imul
xchg
shlb
jmp
cmp
push
maxps
push
stc
xor
pop
in
nop
or
lods
outsl
sub
and
outsl
pop
push
or
imul
adc
sahf
lods
fidivs
pop
mul
adc
xlat
loopne
icebp
aam
in
push
push
negb
leave
inc
mov
out
jmp
js
fdivs
movsb
inc
iret
outsb
sub
pop
cmp
ret
aaa
imulb
inc
inc
cmp
std
loopne
push
xchg
mov
push
mov
push
push
hlt
loopne
int
push
cltd
loope
ret
gs
out
sub
adc
or
stos
cmpb
int3
mov
inc
imul
jle
sbb
test
sarb
add
mov
xor
push
or
dec
mov
jge
test
int3
arpl
fldl
mov
mov
sub
idiv
cmp
imul
mov
dec
push
mov
pop
mov
test
loop
push
pop
lods
push
insl
popf
mov
jecxz
cmp
adc
xchg
scas
pusha
pop
call
cmp
stos
dec
xor
imul
or
add
movsl
idiv
xor
mov
mov
push
pushf
cmp
mov
or
push
repz
lret
cmpsb
jnp
mov
imul
imul
mov
sarb
popa
cmp
dec
je
shll
pop
sub
sbb
jl
inc
mov
inc
mov
pop
ljmp
push
push
sahf
test
sub
pushf
pop
or
mov
scas
in
mov
fidivrs
aas
les
dec
mov
arpl
mov
push
cmp
jne
mov
call
in
ds
sbb
cltd
lret
or
mov
jb
adc
mov
adc
insb
inc
cli
push
cmp
or
ds
in
cmp
adc
movsl
and
jl
dec
outsb
pusha
pusha
out
push
out
dec
ss
push
imul
rclb
out
mov
ljmp
call
fildll
fdivrp
mov
jmp
and
popf
mov
jb
adc
into
insl
mov
mov
jae
push
xchg
test
cmpsl
jmp
add
mov
mov
jecxz
sub
cmpb
jnp
jno
add
arpl
out
mov
daa
dec
xchg
sahf
adc
mov
testl
mov
and
cmpl
mov
add
push
mov
and
daa
jg
jbe
cmp
pop
push
jb
adc
push
ret
push
cmpsb
push
sbb
jp
sub
cs
push
in
sub
mov
xchg
cli
inc
scas
mov
rorl
loope
jno
cmp
hlt
or
loop
test
and
test
loopne
mov
push
fsubrp
inc
or
cwtl
andl
je
cmp
add
cmp
xor
in
mov
xchg
add
and
sbb
push
sbb
scas
pushf
cwtl
ja
test
aaa
jle
add
lds
cmp
dec
std
mov
mov
arpl
sahf
movsb
enter
loopne
jns
xchg
ljmp
loopne
fdivrs
and
mov
push
mov
test
ficoml
mov
insb
xchg
cmp
cmpsb
in
mov
xor
mulb
mov
rcll
out
int
mov
lret
sbb
add
popa
aaa
sub
out
lock
jno
lock
push
sub
lahf
add
icebp
mov
mov
push
les
scas
adc
icebp
notl
fs
in
xor
lcall
iret
mov
dec
fwait
push
jnp
iret
sbb
mov
inc
sbb
fsubl
daa
outsb
sub
data16
sbb
or
into
sbbl
mov
int3
enter
fcompl
lret
mov
jno
jne
adc
inc
out
fcoml
dec
jmp
stos
xchg
mov
bound
pop
lret
ret
popa
mov
sbb
cmp
popa
jae
sti
adc
lea
insl
gs
aam
cmp
es
mov
mov
or
or
fs
or
pop
andb
cmpsl
test
mov
fdivrl
cmp
push
stos
push
in
push
inc
jb
cmp
inc
mov
pop
add
dec
or
xchg
aaa
sahf
mov
or
stc
mov
or
sub
inc
out
hlt
mov
icebp
pop
pop
loope
lods
and
ss
sbb
mov
xor
sarb
inc
sbb
lock
dec
push
push
lret
lret
cmp
mov
lret
aas
cli
push
and
pop
adc
mov
loop
push
cmp
inc
jmp
pop
aam
jmp
push
cltd
loope
cmp
jbe
cmp
mov
and
mov
ret
aas
movsl
sub
mov
push
jecxz
out
xchg
and
sti
test
and
mov
in
pop
pop
popa
aad
xorb
push
sar
mov
aad
addr16
insl
jl
aam
xchg
in
les
xor
pop
or
vpsrld
push
jg
popf
mov
test
in
stos
adc
push
fwait
xchg
lods
mov
push
stos
int3
enter
sbb
push
mov
fyl2xp1
cmp
adc
add
ja
jg
shlb
adc
cmpsl
or
jl
dec
jo
sub
xor
into
aaa
xor
cmp
jge
cmpsl
xchg
push
xor
push
sub
ds
inc
inc
lods
into
jmp
aaa
sbb
mov
cmp
push
add
sbb
mov
push
or
stos
and
jb
sbb
xor
sbb
mov
inc
clc
shll
divb
test
mov
les
inc
push
ret
fsubl
dec
lcall
addl
mov
jp
xchg
pop
sbb
push
xchg
loope
test
adc
xchg
sub
dec
lods
fmulp
sti
mov
lret
loope
inc
dec
shl
inc
xor
test
pop
inc
movb
aaa
mov
es
pop
arpl
movsb
sbb
hlt
je
adcl
mov
sti
xchg
scas
pop
adc
imul
push
mov
xchg
pop
cmpsl
mov
jns
stos
add
xor
pop
pop
jge
pop
mov
sbb
das
test
jne
and
pop
pop
jecxz
mov
mov
inc
pop
sub
push
fs
sti
mov
or
movsb
cmp
lret
xor
ret
push
push
mov
inc
pop
data16
addr16
pop
xor
dec
xchg
cltd
jge
cmpsl
repnz
pop
hlt
bound
or
mov
push
outsb
sub
mov
push
xchg
shlb
xor
push
mov
mov
test
sub
loope
ds
int3
pop
mov
movsb
mov
popa
sub
xchg
inc
inc
cmp
add
xorl
sub
repnz
mov
imul
push
xor
stos
scas
dec
lods
mov
fisubs
ret
or
aad
mov
repz
xchg
xchg
pop
sub
adc
sub
int3
inc
dec
inc
std
cmp
scas
into
lret
into
aaa
adc
sub
inc
pop
add
inc
mov
mov
adc
aaa
sbb
push
jg
or
ret
push
and
xchg
mov
scas
dec
adc
mov
jp
fidivl
imul
push
inc
mov
mov
arpl
popf
test
popf
cmp
adc
pop
dec
imul
loope
adc
lahf
jge
jmp
lds
inc
popa
sbb
hlt
xchg
add
adc
jno
or
xchg
fstpt
shlb
lcall
or
jbe
hlt
sbbl
dec
lcall
mov
push
in
out
ror
and
loopne
dec
repnz
out
mov
jbe
ljmp
mov
rorb
repnz
dec
and
xor
xchg
jo
adc
mov
aam
sbb
in
or
das
push
cld
mov
fstpt
and
ret
cli
jle
jmp
or
mov
aad
clc
aam
pop
cmp
sbb
lods
xorb
pop
push
push
lcall
push
hlt
mov
cs
js
dec
mov
les
loope
sub
push
mov
bound
sub
lds
lods
inc
dec
xchg
in
inc
cs
and
ret
popf
adc
push
ret
subl
jo
imul
xchg
sbb
pop
push
jmp
aas
lods
subb
pop
cmp
adc
leave
repz
sub
imul
xor
push
push
push
dec
push
xchg
inc
and
stc
pop
fistps
js
xor
lea
push
lcall
outsb
mov
or
bnd
int
in
outsl
or
fstps
popl
mov
mov
xchg
and
roll
dec
and
aas
xorl
xor
imul
out
cmp
sub
pop
in
sbb
adc
mov
add
dec
sub
xchg
sub
pop
fcompl
subb
stos
mov
mov
push
aad
dec
jp
cli
jmp
cmp
sub
push
gs
or
inc
push
pop
cmp
inc
mov
pop
enter
icebp
mov
mov
mov
pop
mov
mov
xor
loopne
cld
incl
stos
xchg
jnp
inc
in
mov
mov
xlat
cmp
rcrl
sbb
popa
pop
xlat
xchg
cmc
xchg
push
sub
cmpsb
fsts
adc
mov
fistl
dec
jb
stos
aad
xor
pop
mov
pop
test
loope
sub
jae
inc
les
int
mov
sbb
and
lods
and
jp
mov
fisubrl
lock
out
adc
xor
fistps
lahf
scas
scas
out
jg
mov
sahf
sti
ss
mov
movl
lcall
aaa
mov
and
scas
pop
pop
mov
or
dec
test
and
hlt
jg
pop
push
insl
and
mov
lahf
lods
cmp
cmp
cmp
outsb
push
in
lcall
add
dec
jg
std
imul
shr
sbb
fcmovnbe
in
shrl
out
adc
popf
clc
pop
push
mov
pop
mov
data16
cmp
cmp
cmp
sbb
ljmp
push
icebp
mov
inc
cltd
pop
cmp
sub
sbb
xchg
xor
lods
scas
ret
enter
test
popa
js
sub
or
add
jle
cmp
jne
into
push
fpatan
pushf
insb
js
mov
iret
divl
add
inc
xchg
cmp
int3
nop
dec
inc
mov
mov
iret
int3
ja
cmc
mov
jg
insb
les
xchg
xchg
in
lds
test
cmp
ljmp
loopne
arpl
sahf
sbb
push
mov
call
in
sahf
xchg
les
fsubrl
inc
jge
out
and
in
js
pop
dec
ret
xor
iret
outsl
jp
frstor
pop
mov
out
lahf
fcoms
mov
inc
dec
scas
cmp
pop
inc
aas
xchg
and
callw
dec
pop
ja
jg
add
repz
sub
cmpl
inc
outsb
adc
insb
lea
and
pop
xchg
or
outsl
and
mov
enter
sub
jge
dec
cmc
cmp
mov
filds
jp
adc
mov
push
pop
shlb
mov
and
decl
imul
mov
add
or
xor
xor
mov
in
es
pop
das
shll
push
adc
push
aaa
pop
in
or
ja,pt
push
cld
jb
out
mov
adc
aaa
je
addb
mov
cmp
cmp
outsl
cmp
inc
xchg
out
mov
test
inc
jmp
add
push
insl
sti
adcb
test
mov
inc
add
je
xor
arpl
out
lahf
ds
jo
and
repz
in
andl
jne
dec
loope
les
xchg
cmc
stc
icebp
sbb
add
xor
jns
lret
inc
and
or
push
in
xor
mov
stos
mov
sar
xor
sti
enter
pop
pop
je
mov
test
mov
cltd
lods
addr16
push
add
sub
cmpsb
mov
cmpsl
push
into
rolb
jae
ret
mov
mov
int
push
daa
dec
cmpsb
push
test
rcl
aas
jb
cwtl
pop
mov
jp
insl
cmp
divb
mov
fistpl
jae
cli
mov
std
std
lods
jns
adc
mov
pop
push
fimull
xchg
out
jbe
rcll
xchg
mov
loope
mov
bound
lods
sub
hlt
mov
stos
mov
pusha
dec
xor
mov
pusha
icebp
test
sbb
xlat
pop
test
sbb
cmp
out
clc
xlat
pop
jno,pt
xchg
outsl
gs
inc
jb
inc
pop
dec
js
xchg
and
sub
rcll
hlt
out
and
jae
aaa
ret
cmp
decl
adc
out
pop
jmp
adc
es
sub
addr16
mov
ret
sbb
add
lock
in
enter
in
cmovo
mov
lret
ret
rcll
xor
nop
movsl
push
xor
xchg
add
pop
add
cltd
or
cwtl
pop
inc
lods
bound
int
iret
push
scas
cld
lds
clc
into
ljmp
mov
popa
in
cwtl
pusha
lea
xlat
jbe
xorb
mov
nop
imulb
insb
lcall
hlt
jle
mov
and
iret
xchg
iret
push
sahf
cmp
push
cmp
addl
dec
mov
push
sub
out
xchg
push
mov
push
daa
stc
pop
mov
cmpsl
add
loop
mov
xchg
sbb
insl
mov
sbb
sub
sub
xchg
loope
addb
repz
sbb
fdivr
jle
filds
xor
mov
aad
cwtl
dec
jnp
xor
push
adc
icebp
sbb
aam
or
pop
mov
sub
in
add
repnz
pusha
jecxz
dec
subb
push
sub
sub
ret
sub
dec
rcrl
aam
add
addr16
inc
idiv
mov
jp
sbb
js
and
pop
sti
sahf
lds
fsubrs
aad
cmc
pop
stos
fucom
push
push
inc
cli
les
popa
bound
xlat
loop
dec
adc
and
adc
push
add
scas
fmul
lret
mov
ret
je
xchg
push
lcall
inc
in
jle
jno
adc
les
push
xchg
imul
adc
outsb
mov
sbb
cmc
out
bound
fnop
sbb
mov
adc
mov
dec
sbb
jp
push
and
cmp
insb
andl
ret
repnz
loop
dec
jl
es
jmp
mov
data16
pusha
cmc
cmpsl
pop
jmp
adcb
sub
sbb
popf
mov
or
inc
xor
gs
mov
mov
pop
sbb
or
cmc
cmpl
xchg
jmp
mov
je
mov
scas
outsl
xor
rorb
and
cmp
cwtl
xlat
adc
cmp
mov
push
daa
add
les
int3
or
into
cli
stos
test
arpl
sti
sub
adc
add
add
loopne
xor
dec
xor
adc
sbb
dec
push
dec
popf
add
sbb
and
xchg
mov
imul
clc
lret
xor
iret
ret
sbb
scas
ficompl
mov
mov
mov
xchg
in
mov
std
test
push
cmpsl
adc
data16
loopne
aam
js
mov
stc
call
imul
in
cld
aas
enter
loopne
pop
xor
and
loop
cmp
mov
adc
sti
fwait
and
or
jecxz
pop
leave
das
and
mov
test
iret
out
out
mov
addr16
jp
scas
iret
cmp
jge,pt
repz
jo
mov
in
in
pop
cs
xlat
dec
mov
push
rorb
popa
mov
add
bnd
lock
jge
popa
das
incb
ds
aam
adc
xchg
enter
push
jge
add
fdivrl
push
loop
jmp
lret
in
lds
in
dec
add
lods
cmp
test
dec
lahf
int3
incl
mov
pop
mov
cmp
mov
stos
and
jbe
pusha
fwait
dec
inc
xchg
inc
mov
aad
inc
pop
mov
xchg
pop
mov
sarb
clc
dec
push
fstpt
cmc
pop
das
dec
shl
js
pop
ljmp
push
cmc
cmp
std
lret
cmp
or
pop
xor
cli
pop
push
mov
sahf
dec
cmp
mov
call
adc
cmpsb
rolb
cmp
lods
push
and
mov
sub
fnsave
stos
imulb
inc
scas
gs
fidivs
and
inc
sbbb
sub
shrl
inc
je
inc
xchg
testl
push
enter
jnp
sahf
mov
shll
mov
mov
sub
cmpsb
pop
int
hlt
setne
into
adc
inc
jl
pop
daa
jae
ret
out
xchg
stc
jo
pushf
out
or
imulb
fs
jae
fsubr
xacquire
mov
pop
gs
in
out
mov
jge
mov
push
shrb
ljmp
scas
roll
mov
enter
mov
jo
and
insl
ds
test
lahf
ss
jecxz
divl
and
int
sub
fisttpll
roll
jl
and
inc
bnd
fs
add
mov
push
adc
cmp
test
and
jne
fdivr
and
pop
hlt
fsub
pushf
push
adc
in
and
mov
mov
call
cltd
aaa
lds
cltd
dec
jmp
mov
xchg
sahf
ss
mov
ret
xchg
push
stc
arpl
ret
adc
push
sbb
das
aad
imul
dec
sti
cmpsb
cmp
ds
adc
mov
xor
adc
adc
pop
sbb
flds
aaa
cltd
add
and
jg
xor
pop
xchg
scas
mov
sub
and
sti
sahf
dec
sbb
sarb
sub
addr16
int3
test
xor
push
icebp
jnp
ljmp
push
jmp
push
adc
pop
mov
movsb
lods
adc
imul
mov
fcmovnu
fdivl
cmp
mov
push
and
xchg
aaa
adc
cmpsb
fcoms
cmp
js
rorl
cld
xor
aaa
dec
jnp
and
lret
xor
cmp
fwait
add
dec
ss
sti
mov
xor
out
mov
lods
rcr
leave
pop
stos
xorb
fisttps
sub
ljmp
pop
pop
ja
lds
push
stos
arpl
inc
cmp
jl
or
aam
fcoms
add
mov
fimuls
pop
rcl
xor
mov
scas
stos
sbb
inc
push
sub
adc
pop
aas
mov
loop
inc
push
mov
imul
cmp
xor
lret
aas
movsb
mov
push
or
cmp
fcomip
divl
inc
ja
pop
inc
inc
push
lds
sbb
mull
out
stc
fcompl
scas
and
stc
jg
lret
mov
pop
xor
fwait
and
mov
popa
push
mov
cmpsb
fucomip
cmp
and
inc
mov
mov
cmp
xchg
scas
fmul
popa
pop
add
mov
aam
gs
pop
adc
dec
push
leave
jge
lahf
in
push
jge
les
or
or
xchg
fs
mov
insl
pop
xchg
xor
std
and
pop
mov
jb
outsl
sahf
dec
inc
fidivrl
scas
or
dec
pop
in
loop
popf
mov
pop
imul
pop
xchg
in
lds
or
xchg
dec
add
fildl
pop
cmpsb
push
mov
xlat
outsb
mov
or
cli
loope
jae
add
and
cmp
xlat
fs
dec
xor
xchg
xchg
mov
cmp
mov
js
loope
mov
xadd
or
ljmp
dec
inc
mov
gs
addb
pop
or
pop
mov
lcall
call
cmpsb
sbb
adc
pop
inc
push
mov
bound
int3
push
fistpll
and
add
mov
icebp
ljmp
jbe
and
cmp
lret
push
or
lea
jne
inc
cld
pushf
js
loopne
push
mov
sbb
xchg
sbb
mov
jl
dec
pop
add
test
fwait
hlt
mov
push
jmp
dec
out
pop
xchg
mov
fcoms
out
inc
mov
push
imul
add
or
leave
movsl
idivl
loope
push
add
cmp
gs
add
fnsave
inc
call
pop
imul
add
mov
enter
cmp
repz
addb
lods
xor
and
inc
jmp
jle
scas
movsb
inc
cmp
pop
mov
or
or
and
mov
in
jl
in
mov
das
shlb
insb
js
mov
sbb
out
push
add
and
sbb
and
nop
scas
fstpl
jne
out
push
aam
popa
lret
mov
push
jns
ss
ljmp
mov
inc
rolb
lods
cmp
ucomiss
shl
push
lret
push
ret
div
pop
notb
push
sub
dec
iret
jl
jl
in
pop
sub
lods
inc
imull
mov
or
leave
xchg
ss
lahf
xor
mov
jp
addb
ljmp
cli
test
mov
jge
movsl
jnp
addr16
loopne
loope
push
mov
shll
mov
jb
scas
nop
mov
sub
xor
sarb
mov
sti
ret
jg
rcrb
xlat
iret
mov
sbb
cwtl
out
popf
nop
fldenv
aad
or
pop
push
ret
dec
lock
aaa
xchg
dec
lods
arpl
dec
cmp
outsb
push
mov
stc
jl
cmp
dec
cmp
xlat
jne
shlb
xchg
xor
je
loope
pusha
adc
sbb
lahf
mov
mov
pop
inc
jne
lahf
sarl
out
or
pop
xorb
add
adc
xchg
jns
pop
je
adc
dec
pop
and
gs
dec
aad
mov
js
jge
push
jmp
insb
adc
mov
fidivrl
push
cs
stos
lock
xor
lret
pop
sub
xchg
push
dec
ret
push
icebp
xchg
out
adc
add
nop
lret
or
xorb
addl
insb
fs
pop
cmp
push
imul
adc
testl
fs
jno
dec
rcl
in
adcl
adc
and
in
ret
inc
mov
fistpll
lock
mov
movsl
int3
xchg
sub
cltd
fildl
inc
out
dec
inc
xchg
mov
cmpsl
cmc
out
mov
inc
aam
jb
loope
pushf
lea
imul
aad
hlt
jmp
mov
or
bound
inc
or
jl
push
jo
sbb
and
jle
repnz
imul
lret
fdivl
inc
jb
pop
call
push
bound
or
sbb
add
pop
in
or
ret
or
out
mov
hlt
insl
push
sub
or
jp
leave
jbe
lds
xchg
in
shlb
fldcw
shlb
js
lea
sbb
movsb
cmp
sbb
ja
movsl
or
jo
insb
dec
xchg
mov
scas
inc
push
inc
inc
es
add
and
and
es
stos
ficoms
lods
ljmp
mov
flds
adc
jbe
jo
cld
aaa
pop
xor
dec
mov
jecxz
or
addr16
daa
jp
sub
rclb
xor
std
test
fcmovnb
jmp
out
mov
in
mov
sub
mov
rorl
push
mov
lret
xor
std
xor
negl
das
in
movsb
dec
sarb
mov
jle
push
jmp
mov
mov
mov
call
mov
pop
xchg
fists
mov
iret
sti
enter
mov
gs
xor
or
xchg
rcrb
cwtl
leave
adc
jne
adc
and
test
sub
dec
stos
ds
sub
sub
cmp
push
push
jne
loope
and
mov
add
sti
push
iret
test
add
lock
gs
xlat
mov
cltd
aas
push
es
xchg
cmp
cmp
das
mov
cmp
xor
aam
mov
movsl
mov
adc
pop
inc
jmp
and
aaa
aaa
mov
mov
mov
leave
adc
lds
imul
mov
mov
pusha
pop
mov
mov
adc
lret
mov
mov
loop
shl
ret
repz
add
and
ret
in
sti
add
dec
jecxz
jecxz
loop
test
cmp
sub
sahf
push
test
push
jns
and
mov
sub
mov
cmp
sub
xchg
add
cmp
add
xchg
aas
inc
popf
inc
pop
push
sahf
scas
xchg
ret
mov
test
push
fdivr
cmp
pop
mov
xchg
clc
repnz
imul
push
pop
leave
fwait
xchg
mov
xchg
xor
sub
pushf
out
movsl
jg
sub
fcmovne
daa
jg
pushf
or
mov
gs
sub
adc
push
xlat
leave
push
ficoms
sbb
insl
outsb
int
into
mov
cmp
add
pop
out
ret
adc
sar
mov
adc
arpl
adc
jnp
fwait
les
aas
sbb
mov
lret
push
add
inc
stos
je
pusha
pop
inc
mov
push
sbb
adc
mov
dec
mov
mov
inc
pop
mov
shlb
cmp
gs
push
repnz
out
icebp
sbb
sti
cmp
rorl
push
popf
fidivs
fsubrl
bound
mov
dec
mov
mov
jo
lods
mov
mov
dec
cli
jbe
or
sub
adc
aad
push
and
inc
orl
repnz
mov
aaa
cmpsb
int3
lds
clc
pop
push
aaa
repnz
push
adc
mov
cli
xor
stos
aam
mov
add
push
pop
mov
lds
and
jg
pop
or
push
mov
sub
fcomi
fstps
lret
mov
shl
pop
dec
enter
adcl
mov
loop
inc
fisubrl
cmp
adc
je
adc
pushf
das
lret
push
jmp
leave
hlt
test
scas
ljmp
xor
xlat
hlt
divl
mov
jecxz
fimuls
add
std
mov
dec
rcl
jle
daa
sbb
mul
pop
push
inc
fs
mov
cmp
test
sub
inc
and
push
nop
push
mulb
jnp
into
push
sub
aam
ja
pusha
bound
mov
mov
stos
sbb
push
icebp
adc
mov
xchg
push
mov
dec
push
add
call
in
icebp
adc
dec
sbb
jbe
and
frstor
mov
jns
jl
or
xor
mov
lret
dec
out
icebp
test
data16
sbb
jg
repnz
xor
mov
pop
pop
inc
add
jns
xchg
in
pop
pop
jb
addr16
dec
insl
stos
inc
ss
es
scas
rorl
repnz
enter
dec
inc
push
jbe
jecxz
sub
dec
rorl
adc
mov
fwait
mov
xchg
outsl
cli
loope
test
mov
sub
cmp
mov
mov
mov
call
sti
je
jg
pop
add
sub
inc
pop
adc
loop
pop
test
test
pop
imul
sub
lahf
sub
push
ret
sbb
cmp
xchg
mov
lret
adc
lahf
shlb
aad
mov
repnz
js
repz
aad
nop
and
mov
aaa
sbbl
aas
sub
push
mov
dec
pop
bound
mov
mov
cmp
jnp
fmul
mov
mov
dec
add
mov
pop
lds
in
mov
pop
add
shrb
cs
mov
out
mov
jp
scas
icebp
daa
jle
daa
lahf
stos
out
out
aas
jmp
cmpsb
repz
rorl
jmp
shlb
notb
aas
lret
and
dec
sub
mov
xchg
pushf
mov
loop,pn
mov
rcrl
lret
jp
ret
or
rolb
ja
ja
push
xchg
movsb
xchg
insb
adc
das
nop
loope
mov
mov
sbb
mov
xchg
jnp
sarl
jb
fwait
jl
and
cmc
fnstsw
test
mov
add
mov
mov
leave
add
lea
mov
lcall
leave
sbb
popa
or
imul
inc
shrb
aad
jmp
test
push
out
mov
movb
inc
fsubrl
fsts
or
cmc
sbb
shrb
daa
add
add
xchg
inc
test
lds
call
dec
movsb
pop
sbb
mov
sub
add
mov
loopne
adc
jecxz
push
xchg
stos
loope
mov
or
jecxz
sbb
hlt
mov
popf
test
cmp
div
gs
xchg
push
adc
push
add
push
xor
xor
cwtl
pop
push
mov
inc
inc
or
stos
fs
fiadds
shll
int
clc
cmp
lahf
pop
jb
aam
mov
shrb
pop
fnstcw
out
xchg
and
aad
cs
imull
outsb
mov
or
fdivrl
inc
fmul
or
rorl
add
bound
data16
xor
push
pop
sbb
push
sbb
jl
xchg
aam
test
stc
in
add
inc
das
or
push
add
adc
popf
jns
jle
mov
mov
inc
mov
jae
inc
popf
inc
rcll
das
and
andb
cmpsb
add
pushf
and
cmc
push
leave
sbb
inc
rol
fwait
or
add
test
mov
bnd
push
jl
lods
and
xlat
push
add
dec
sarl
cltd
jne
cmp
push
stos
pop
cmp
mov
sbb
cwtl
popf
push
lret
fisubrl
stc
lea
jno
jo
cwtd
jne
adc
dec
jno
sbb
dec
subl
pop
je
or
mov
add
imul
mov
into
jnp
add
loop
jp
mov
adc
adcl
sub
xchg
sub
mov
fistpl
mov
enter
jo
fld
aam
imul
call
lret
and
xchg
std
mov
pop
mov
stos
sub
push
add
pop
pusha
fdivrs
inc
or
xchg
adc
adc
negb
jmp
mov
or
mov
data16
lds
test
jmp
lea
in
mov
mov
xchg
mov
sub
popa
scas
es
inc
sbb
cmp
inc
dec
pop
std
lea
lock
enter
mov
mov
and
push
scas
dec
jb
pop
xchg
adc
cmp
loop
fs
mov
out
nop
jg
xorb
lock
pop
mov
rcll
xor
jmp
mov
xchg
xchg
pop
push
dec
jbe
repz
xchg
sahf
and
daa
hlt
xchg
xlat
mov
in
push
stos
pop
popf
mov
xchg
addr16
xchg
int3
fwait
pop
jmp
sti
jnp
in
push
rorl
xchg
ljmp
jmp
sbb
xchg
inc
pop
cmc
dec
xor
and
dec
cs
cld
push
pop
inc
clc
idivl
xchg
shrl
xchg
or
xchg
fs
adc
cmp
pop
aaa
nop
loop
push
test
ret
fsts
add
cmp
push
lcall
jge
xlat
arpl
mov
fs
cmp
push
clc
shlb
mov
sub
push
sti
fistpll
cmpb
push
stc
ret
rcrb
jecxz
arpl
in
xor
cmp
xchg
sub
or
jle
push
push
sub
movsb
sbb
sub
js
pop
mov
pop
push
or
out
inc
xor
test
mov
fs
mov
push
aad
mov
mov
popf
and
imul
pop
insb
push
popa
sub
jb
jle
hlt
repnz
xor
sbb
insl
mov
jl
popf
leave
insl
arpl
jnp
ja
bound
das
adc
je
or
pop
lahf
cld
xor
std
int
addl
jle
cmp
insl
and
jge
imul
xchg
mov
dec
aaa
jo
cltd
sti
inc
pop
adc
orl
jg
std
lret
cmc
aas
or
fwait
test
aam
aaa
cmp
mov
stos
cmp
xchg
in
scas
mov
sub
mov
cmpsw
push
ret
sbb
sub
loopne
iret
das
shlb
sbb
test
inc
psubw
inc
mov
fdivs
mov
adc
ret
out
sub
les
jb
or
ja
sub
out
and
lahf
push
addr16
ja
jae
cwtl
aam
ljmp
sbb
push
mov
ja
imul
inc
or
call
popf
sbb
cwtl
jmp
and
insb
push
cmp
pushf
sbbb
push
add
jl
cmc
ret
movsb
mov
shll
leave
insl
mov
push
dec
xchg
lods
repz
aad
mov
and
xorl
aam
mov
jg
aas
cmc
pop
mov
shrl
jae
sbb
in
jno
lret
insl
mov
out
loopne
pop
dec
push
adc
and
add
xor
call
lock
cld
lea
dec
in
iret
nop
dec
cmp
xor
in
xchg
pop
xor
add
rolb
aas
add
inc
scas
idivb
in
data16
push
fldenv
xlat
inc
out
pop
cmp
ficoml
add
andb
lahf
out
test
jb
lods
fildl
xor
mov
in
adc
in
ja
push
dec
mov
or
fnsave
dec
test
inc
dec
mov
push
push
mov
jecxz
fimull
rolb
fwait
inc
cmp
jg
dec
mov
dec
pop
test
mov
int
add
jne
ret
jg
fdivrl
push
mov
jmp
pop
pushf
and
pushl
cwtl
rcl
push
add
orb
ss
lcall
sbb
aaa
int3
pusha
and
mov
or
test
leave
scas
fbstp
inc
addl
dec
mov
mov
aas
fnstcw
jp
cmpl
mov
xchg
push
scas
repz
or
push
mov
imul
cwtl
repnz
jg
outsb
sarb
sub
iret
adc
adc
adc
xor
sbb
mov
or
xlat
pusha
fcomip
inc
scas
pop
mov
dec
ja
mov
fisubs
sub
orb
pop
cltd
iret
rolb
xchg
cmp
sahf
pop
pop
in
out
xor
inc
pop
es
lcall
lods
jmp
stos
xor
aam
add
les
pop
mov
repnz
push
insl
aam
mov
lcall
mov
repz
mov
push
test
ljmp
pop
repnz
fisubrs
mov
hlt
and
das
test
ds
dec
xlat
lahf
jmp
mov
faddl
dec
mov
and
jle
outsl
pop
pushf
add
ret
add
jno
sarb
ljmp
cltd
sti
push
jp
dec
and
cmp
inc
fwait
setp
negl
mov
push
fldt
xor
cmc
fwait
notb
cld
loopne
in
cld
jle
ret
mov
aam
inc
call
push
mov
xor
fwait
push
or
adc
inc
into
fildl
mov
popa
sbb
aaa
lcall
push
mov
fstl
jnp
int3
inc
pop
mov
cs
stos
test
int
xchg
dec
mov
aaa
xor
lret
mov
loop
jbe
lcall
push
push
bnd
xor
ffree
push
push
scas
mov
cs
mov
ret
jle
cmpsb
outsb
sahf
cmp
and
ret
adc
rorb
aas
andl
stos
jge
jecxz
mov
shrl
je
mov
and
loopne
push
and
adc
mov
test
cwtl
bound
pushf
fcoml
mov
dec
pusha
mov
dec
push
push
fstpl
push
dec
jne
xor
sbb
enter
ja
stos
jg
and
fiaddl
mov
pop
jmp
inc
je
sahf
xchg
addr16
jns
xor
dec
fidivrl
pushf
xchg
fistpll
icebp
jecxz
push
jge
int3
cmpsl
push
dec
adc
inc
ljmp
fnstcw
dec
popa
rcrl
scas
rorl
inc
add
or
pop
mov
sbb
cli
jle
adc
sbb
nop
or
ret
fld
mov
pop
sub
xor
push
ljmp
ja
outsl
mov
test
mov
stos
mov
inc
movsb
adc
ljmp
jmp
popa
lahf
jge
cmp
fstl
or
jmp
sbb
out
popf
into
in
leave
jp
cld
jp
out
or
dec
data16
and
ljmp
jb
mov
in
or
jg
outsl
jo
sbb
inc
enter
add
andl
xchg
insl
inc
bnd
cmovo
repnz
sub
outsb
cmp
push
jge
jge
scas
pop
hlt
pop
xor
rcrl
cmp
repz
out
push
jns
sub
mov
pop
lret
cwtl
push
xchg
dec
cmpsl
loopne
stc
mov
pushf
jmp
imull
mov
inc
ret
insb
and
push
ja
pushf
sub
dec
dec
cltd
test
add
xchg
inc
mov
repnz
sbb
mov
lcall
in
adc
jns
ret
and
mov
pop
shlb
adc
xchg
cmp
cmp
dec
dec
and
sbb
add
inc
adc
mov
rcrl
repnz
add
adcb
jecxz
adc
xor
mov
inc
jns
inc
pop
dec
dec
add
xlat
jnp
sti
mov
xchg
aad
xor
mov
jmp
cmpb
push
mov
or
xorb
xor
and
xor
dec
repnz
arpl
popf
adc
mov
xchg
pop
mov
div
test
cmp
pop
sub
js
ljmp
divb
ds
lahf
inc
aam
mov
in
sub
xor
mov
or
and
add
dec
popa
movsb
ss
or
mov
push
fs
pusha
pop
sahf
test
ja
mov
sbb
pop
or
add
and
movsb
mov
fstpt
fwait
jp
fsubrl
gs
and
cmp
stos
icebp
and
add
cwtl
xor
test
aaa
sub
ds
jp
push
rcr
or
cmp
push
mov
movl
lods
je
daa
xor
push
notb
pop
nop
pop
sub
add
popa
outsl
fstl
dec
imul
xchg
cmp
gs
rorl
cltd
pop
push
xchg
inc
iret
pop
xchg
dec
imul
in
aad
dec
mov
fs
sub
btr
push
mov
es
add
iret
clc
cltd
mov
mov
xchg
dec
mov
inc
popf
pushf
mov
lods
movsl
push
repnz
pop
nop
loopne
das
test
cmp
test
outsb
dec
icebp
push
cwtl
jle
gs
testb
fiadds
mov
int3
cwtl
out
mov
jno
dec
fs
in
pop
xor
mov
mov
pop
cmp
fldenv
cmp
jl
add
cmp
mov
push
pop
repz
ljmp
inc
or
ja
fcom
add
cmp
inc
jne
ret
adc
cmpl
repnz
xchg
hlt
pop
mov
lds
pop
adc
out
iret
inc
int
add
rcr
es
clc
dec
nop
comiss
add
mov
lret
movsb
xchg
sbb
inc
sbb
lods
das
shl
pop
cmpsb
sarb
sbb
hlt
mov
adc
xchg
out
fwait
or
pushf
jp
pop
push
mov
push
xchg
mov
mov
add
clc
dec
adc
pop
test
or
sbb
filds
inc
dec
mov
pop
add
dec
adc
dec
dec
mov
rclb
pop
cmp
repnz
cli
adc
stc
or
les
lock
mov
ret
jge
sub
push
sub
pop
js
gs
aam
loope
loopne
popa
and
enter
cmp
out
inc
mov
test
mov
sub
mov
or
shrl
dec
jbe
les
add
sahf
pushl
mov
repnz
ja
in
es
cmp
jle
stos
icebp
shr
sarb
mov
in
mov
out
add
sbb
cmp
pusha
fldcw
scas
insl
pop
nop
nop
pop
shll
fcompl
mov
pop
clc
div
pop
leave
mov
stos
sub
test
pop
xchg
ret
and
sti
cmpsb
sbb
daa
mov
push
fdiv
adc
in
ja
xchg
outsl
inc
xchg
frstor
mov
jne
lea
addr16
scas
in
inc
pop
or
mov
les
pop
dec
sbb
clc
cmp
mov
jg
xor
mov
or
dec
xlat
mov
push
fisttpl
sbb
shrb
icebp
cmp
inc
mov
lcall
dec
dec
jns
xor
hlt
jl
cli
cmp
movsl
or
lcall
inc
mov
shrl
repnz
inc
jmp
loopne
xor
in
dec
leave
sbb
lds
push
jp
or
addl
mov
add
inc
sub
pushf
lret
aam
pop
jmp
test
scas
bnd
sub
mov
test
aad
fistl
fcompl
dec
lods
mov
add
push
subb
stc
negb
lcall
data16
pop
fcomi
lret
or
ret
ret
inc
pop
filds
fdiv
push
and
imul
mov
test
mov
adc
scas
filds
in
stos
cltd
sbb
in
jg
adc
mov
jne
daa
das
arpl
subb
xor
mov
das
repz
add
insb
add
clc
mov
mov
icebp
movsl
shrl
int3
mov
fcmovne
repnz
fucomip
filds
lahf
in
jg
out
xchg
ss
xchg
clc
pop
xchg
les
sbb
mov
sub
push
adc
movsb
dec
xchg
jae
push
aaa
stc
test
pop
aam
sub
push
bnd
push
dec
cmpsl
js
stc
jnp
mov
sbb
and
cmp
and
mov
les
faddl
sbb
enter
mov
xor
out
mov
lods
pop
invd
mov
iret
in
ret
cmpl
inc
xlat
push
cltd
shlb
lods
outsb
out
mov
fcmovb
jg
mov
cmpsl
lods
insb
inc
sub
out
imul
inc
mov
fisttpll
jg
das
xor
fnstcw
mov
sbb
adc
das
or
int
cmp
out
sbb
insl
mov
js,pn
xchg
mov
movsl
xchg
fdivs
shlb
or
cltd
adc
jns
and
push
fwait
inc
adc
nop
subl
aam
fwait
or
push
in
cmc
or
cmp
fld
out
mov
inc
hlt
and
imulb
pusha
lret
xchg
mov
jo
ja
add
push
or
mov
mov
cmp
adc
stos
icebp
outsl
mov
sbb
es
add
pop
pop
mov
pop
in
dec
lock
cmpsl
pop
push
mov
adc
add
sbb
sti
dec
clc
fxch
enter
ret
ja
mov
adcb
shlb
mov
xor
in
xor
mov
push
ret
clc
xor
in
mov
inc
jo
notl
shlb
mov
loope
xor
sar
mov
jg
jo
cmp
jbe
movsb
addl
sbb
lods
popf
jmp
jge
mov
inc
popa
add
cmp
sbb
stos
cltd
sub
imulb
aam
repz
popf
push
cs
in
fcompl
add
add
and
and
imul
lahf
nop
inc
mov
in
in
mov
push
nop
fistl
lds
jecxz
int
xchg
ljmp
xlat
sub
or
or
fmull
push
and
mov
mov
pop
jnp
movsb
adc
pop
es
cld
rol
inc
loopnew
ret
pop
lock
pop
int3
mov
or
pop
mov
test
dec
xor
push
shrl
sbb
ds
test
insb
cmp
js
mov
dec
enter
shl
xchg
popf
leave
cltd
js
xor
mov
test
jnp
hlt
adc
mov
sub
scas
lret
inc
fcomps
inc
jae
leave
or
mov
mov
push
popl
jg
lahf
mov
sub
push
pop
movsl
subl
fwait
inc
jnp
mov
sub
cwtl
out
mov
clc
push
lahf
dec
jp
sbb
test
jns
push
ficoms
mov
mov
mov
or
adc
adc
mov
push
test
push
imul
inc
jae
cmp
mov
lahf
scas
lea
aaa
jecxz
js
pusha
dec
std
adc
mov
and
test
xchg
inc
enter
add
xchg
mov
notl
stos
insl
fistpll
sub
inc
jno
cmc
jmp
xchg
fisttpll
in
mov
sub
sub
jnp
push
stos
fadds
dec
xchg
inc
ja
jecxz
sub
mov
je
xor
sbb
or
cltd
rol
xor
or
push
sbb
xor
call
sub
push
fldcw
mov
int
xor
int
cli
or
jecxz
lods
test
test
dec
push
mov
outsb
nop
loopew
mov
je
fnstenv
fstps
daa
cmp
jo
repz
inc
sbb
addb
mov
das
and
out
in
movsl
stc
pop
scas
popa
sahf
push
dec
xchg
fimull
mov
jns
xchg
cmpsl
and
or
in
push
inc
xor
push
mov
inc
inc
mov
mov
enter
pop
add
and
leave
je
mov
outsb
and
rcrb
xor
xchg
xchg
outsl
jmp
rorb
mov
pmulhuw
sahf
jl
out
call
mov
inc
jl
jl
sahf
dec
lds
out
pop
call
add
mov
jg
fsubrs
cmpsl
jo
push
mov
pop
mov
idivb
sbb
sbb
arpl
push
jge
dec
xor
lret
rcrb
jge
mov
and
in
ja
sahf
aas
or
xor
fnsave
mov
mov
cli
mov
adc
adc
sbb
insb
fcmovbe
jo
cmpsl
xchg
testb
pop
in
lahf
or
cmpsb
and
xchg
sub
stos
or
pop
dec
test
stos
mov
in
pop
or
sub
mov
addb
sub
je
sbb
cmp
int3
add
test
popw
mov
xor
mov
pushf
adc
imul
xor
pop
mov
aam
stos
push
addr16
cld
sub
jnp
sub
mov
sti
ds
mov
sub
sahf
adc
fildll
bound
jb
jnp
inc
cmp
pop
and
mov
or
push
or
out
aaa
pop
dec
ja
lret
fsubs
jbe
jbe
rclb
jb
lret
out
cli
push
movsl
mov
popf
repnz
add
push
sbb
fcmove
outsb
call
dec
repnz
insl
dec
jecxz
cmp
out
ljmp
insl
sbb
dec
popf
xor
mov
dec
lds
lret
repz
ffreep
insb
or
sbb
adc
cltd
push
in
cmpb
push
ds
insl
adcb
dec
mov
aam
adc
pop
add
insl
push
dec
add
lods
mov
jmp
sub
fwait
mov
mov
cmp
pusha
aam
ja
or
fsubrp
into
adc
cmpsb
notl
aam
cmpsb
int3
push
sbb
push
gs
and
mov
aad
mov
pop
sarl
add
out
popa
lahf
lahf
adc
mov
mov
xor
xlat
out
cmp
loope
ds
pop
pop
xor
out
nop
pop
clc
decl
lods
or
adcb
jl
sub
inc
or
lret
mov
push
sbb
jne
andb
mov
xor
add
mov
xor
jae
ljmp
clc
jne
mov
pop
mov
adc
adc
adc
stos
mov
dec
sub
jns
popf
or
shlb
lcall
int3
call
mov
add
cmp
or
repz
ret
ds
dec
sub
mov
xchg
jbe
imul
cmc
jns
ja
ja
out
hlt
sahf
inc
mov
mov
mov
lds
push
pop
jb
stos
push
aas
push
ja
mov
cmp
stc
cwtl
or
push
inc
and
sbb
push
and
mov
and
mov
mov
loope
decl
adc
push
adc
fnstsw
add
pusha
xchg
jo
xchg
push
dec
cmp
mov
out
xchg
and
fldenv
push
dec
mov
sti
frstor
lods
sub
test
imul
mov
iret
push
mov
pop
adc
pop
cld
gs
inc
test
outsl
or
shlb
jmp
xchg
pop
lds
mov
addb
stos
mov
xor
nop
js
jp
mov
sub
out
dec
jge
add
xor
lcall
cmp
imul
stc
test
cmp
cmp
ljmp
pop
hlt
jp
cltd
inc
inc
lock
adc
cmpl
mov
loope
pop
or
shll
and
and
mov
call
jb
pop
xor
sbb
loop
and
push
leave
clc
test
mov
jg
ja
adc
push
dec
dec
inc
aad
in
mov
inc
sbb
out
les
mov
add
or
test
cmp
mov
and
jns
mov
mov
and
dec
ret
repz
xor
aaa
aas
sbb
ss
add
lock
xchg
xor
out
add
fistps
in
inc
add
imul
ret
jne
or
das
sub
adc
xchg
jns
addr16
outsl
mov
xor
fst
in
imul
xchg
mov
fsubs
cmp
lret
int
mov
frstor
jg
fsubrs
mov
mov
and
cmpsb
or
cmp
jnp
sti
and
jb
inc
pop
icebp
adc
int3
enter
mov
lea
popf
cltd
arpl
mov
xchg
dec
es
incl
sahf
and
cmp
ds
xchg
cmp
mov
dec
popf
dec
std
into
and
outsb
push
lcall
jns
testl
lcall
and
and
sub
cli
adcl
xor
outsb
mov
jp
jno
enter
aaa
mov
insb
xor
add
testb
lret
sub
repnz
data16
cmpsb
out
ret
xlat
lret
xor
repz
pop
sbb
mov
call
jle
inc
arpl
cmpsl
mov
clc
jo
inc
jnp
jmp
jb
xchg
mov
sbb
inc
sbbl
mov
jo
push
jl
adc
inc
das
lret
enter
ljmp
mov
dec
in
fcomip
sub
jp
inc
movsl
mov
adc
sub
popl
jae
dec
inc
xchg
mov
negl
mov
xor
xchg
mov
pushf
and
push
sbb
xor
mov
xlat
pop
dec
and
inc
mov
dec
enter
data16
fs
sahf
jbe
push
cmc
fbld
push
sahf
ret
js
sti
cli
lods
mov
jnp
adc
in
or
lea
call
pop
dec
mov
cmpsb
jecxz
shlb
shlb
mov
punpckhbw
sbb
lock
inc
adc
pop
sti
xchg
xchg
push
xchg
out
fstp
flds
popa
dec
scas
test
outsl
mov
notb
and
inc
inc
cmp
inc
in
stc
addr16
loop
push
test
mov
mov
rcrb
loopne
into
out
fnstenv
clc
adc
mov
fstpl
push
jle
cmp
int
ret
out
aas
sbb
dec
jo
inc
cmp
jge
insb
dec
add
adc
aam
mov
sbb
or
sbb
lcall
xor
mov
dec
or
stos
fimull
add
jo
jo
cmpsl
mov
jge
push
inc
fcmovnb
stc
mov
lea
push
lret
lret
sbb
lds
mov
mov
out
lret
scas
test
sub
aas
xlat
adc
mov
or
in
int3
frstor
sbb
movsb
mov
inc
add
push
jo
pop
fstl
mov
mov
in
aas
test
pop
mov
test
push
nop
push
jnp
xchg
adc
es
fs
cwtl
mull
xchg
mov
or
daa
out
je
stos
push
adc
cltd
ja
mov
pop
loopne
cmc
imul
sbbb
in
scas
ljmp
dec
sub
sub
mov
push
imul
pop
lock
ret
aaa
cmp
cltd
shl
jg
add
or
and
push
jo
or
xor
jne
xor
sbb
dec
jbe
lds
xchg
cmpl
pop
push
and
rcrl
ret
or
inc
dec
dec
xchg
or
pop
ss
push
dec
ror
rcpps
pop
mov
inc
pop
ret
xor
sub
mulb
in
jne
ret
shrl
call
sub
shl
cld
movsb
movsl
out
push
js
push
jns
mov
jl
adc
adc
fisubl
std
push
std
cmpsb
add
jecxz
int3
push
repz
sbb
aaa
pop
lock
dec
dec
test
mov
jae
imul
data16
sub
lods
sub
cmp
imull
mov
and
enter
push
test
mov
mov
cmpsl
push
xchg
dec
arpl
repz
rcrl
mov
mov
jbe
clc
mov
push
cltd
xchg
cld
addr16
ret
lret
xor
ficomps
mov
cwtl
imul
or
add
loop
jecxz
add
push
inc
aaa
loop
call
mov
push
inc
add
sbb
add
add
rorb
mov
leave
jmp
and
pop
add
inc
pushf
stc
add
jb
sbb
or
lods
or
jns
cmp
inc
cmpsb
push
incl
sbbb
int3
imul
nop
or
insb
aam
xchg
mov
into
jno
xor
shlb
pop
mov
mov
or
ret
pusha
adc
in
cmp
push
in
and
fwait
mov
shr
cwtl
in
and
lods
mov
cmp
and
dec
je
in
xchg
dec
adc
sahf
cmp
mov
and
pop
mov
repz
imul
shrl
aaa
and
fnstenv
cmp
ss
out
mov
xor
inc
scas
outsb
sub
ret
mov
outsl
iret
test
mov
mov
add
or
cmc
push
jno
mov
dec
nop
mov
mov
cs
mov
push
or
pop
insl
cli
fisttpll
stos
sub
aaa
fs
xor
cmp
push
xor
or
or
mov
mov
clc
decb
or
stc
sbb
add
data16
add
enter
fucom
lods
cmpsl
jb
and
lret
outsb
adc
movsb
cmpsb
xorb
cwtl
mov
stos
mov
sbb
les
jg
hlt
and
out
das
fnstcw
xchg
sub
rorl
int
sub
gs
jg
adc
cltd
jmp
out
loopne
xor
ds
or
sbb
push
mov
cmc
cs
sti
cltd
stos
lret
xchg
xor
pop
out
lret
fs
aam
push
mov
ss
mov
cli
xchg
ss
mov
add
das
mov
push
std
or
aaa
push
mov
add
test
cmp
pop
nop
add
inc
fdivl
add
rorl
outsl
add
das
dec
out
mov
loope
fsubrs
mov
sbb
pop
inc
jp
pop
and
int3
js
stc
push
int
sub
mov
inc
movsb
dec
negb
scas
jecxz
mov
pushf
inc
jbe
jbe
mov
sbb
orl
add
imul
lods
and
dec
and
xchg
mov
sub
add
xchg
or
loop
xchg
and
jae
push
and
pop
cs
fisubl
ret
fimuls
jge
jno
movsb
js
mov
or
sbb
mov
rcll
sub
inc
pop
rorb
lods
ss
mov
add
dec
rcl
jg
nop
and
mov
mov
hlt
add
andb
sub
test
daa
pop
fildl
ret
hlt
int3
jne
dec
lret
mov
js
out
cmp
loop
sub
test
test
xchg
sbb
outsb
sbb
inc
loop
jecxz
outsb
lret
jg
iret
test
and
test
pusha
jae
leave
add
shrl
lret
jo
sbb
or
cwtl
cmp
cmp
aas
notb
pop
jmp
pop
fstpl
cmp
mov
lock
ret
sbb
jno
mov
mov
ret
xor
add
lea
std
sbb
insb
add
mov
xor
adc
add
jne
roll
xchg
mov
dec
jne
stc
mov
fcmovnu
jbe
jp
dec
stos
mov
mov
inc
cmp
xchg
ret
xchg
xchg
lea
insb
cmp
call
mov
incb
cmp
and
adc
lea
sbb
cli
xchg
fldcw
sbb
mov
fists
shll
lock
sahf
push
push
fidivs
or
mov
leave
mov
out
int
mov
fwait
sub
scas
cmpsl
adc
inc
clc
inc
sbb
xchg
pop
add
push
cs
xchg
or
iret
cmp
jl
cmpsb
sbb
sub
xchg
sbb
xchg
add
arpl
pop
mov
or
in
hlt
enter
outsb
jge
les
cmp
mov
aad
cmpsb
pop
jbe
jmp
jbe
jnp
lahf
bound
cmp
push
loope
mov
fs
ret
jns
js
push
mov
jo
stos
xchg
jle
in
jno
xchg
sub
inc
aaa
test
clc
movsb
push
mov
leave
add
xor
xchg
sub
xor
insb
mov
jle
int3
packsswb
sbb
and
xor
cwtl
sti
adc
fisubs
cmpsl
jl
dec
popf
ret
add
fists
int
sbb
out
iret
das
dec
data16
xchg
aad
inc
bound
movsl
dec
andl
pop
sub
mov
popa
mov
xor
push
scas
add
mov
xor
sbb
and
jp
clc
repz
paddb
jecxz
xchg
loopne
adc
jae
sbb
push
pop
je
fwait
mov
mov
mov
aad
andb
adc
dec
inc
mov
sbb
out
loope
in
xchg
loopne
xlat
das
outsl
cmpl
testl
xor
div
xchg
and
xor
pop
aad
or
imul
xchg
ss
call
decb
test
cmc
mov
clc
xor
in
cmp
inc
mov
mov
mov
jge
jecxz
fcompl
jne
jl
ds
sbb
lret
jg
xor
stc
je,pn
rolb
testb
xchg
jp
fwait
xor
aad
movsl
push
pusha
stos
or
lahf
leave
imul
rolb
xor
aas
mov
ret
mov
pusha
cmp
test
adc
xchg
or
xchg
push
stos
mov
sbb
cmpsb
movsl
in
lods
out
push
push
test
inc
adc
sbb
add
stos
addr16
sub
cmp
cmpsl
testb
mov
jecxz
lods
push
ljmp
in
mov
jmp
pop
mov
loop
or
mov
mov
aas
cmp
push
cmp
and
std
jp
xlat
jo
jo
lret
or
aas
in
add
mov
push
in
mov
rclb
stos
ja
mov
xor
out
sarb
test
mov
push
nop
inc
jo
clc
mov
sub
jbe
scas
fucomp
inc
xor
jbe
lock
inc
pop
cmp
inc
mov
loope
jae
imul
fs
jns
aaa
leave
inc
add
jo
imul
add
mov
mov
lret
lods
movsb
int
iret
cs
fcomip
cmp
jmp
sub
xchg
mov
mov
cmp
dec
jl
in
inc
inc
mov
shrl
aaa
add
outsb
in
jo
add
sbb
popa
adc
addr16
sub
jge
xor
imul
jp
ret
dec
loope
fmull
lfs
jg
xchg
mov
leave
lahf
faddl
cmp
cmp
mov
mov
cmp
lock
mov
pushf
inc
cmp
cwtl
mov
sub
jns
jg
repz
adcb
mov
pop
dec
jns
or
mov
in
cltd
loop
aas
dec
adc
incl
in
aad
popa
xorl
inc
pop
and
jecxz
call
imul
ret
push
or
sub
inc
push
and
mov
cmp
mov
sub
xchg
sub
arpl
addr16
dec
orb
imul
and
lods
push
mov
mov
mov
ret
test
leave
add
jmp
cld
sahf
adc
mov
sub
add
mov
add
inc
jmp
cwtl
pop
add
mov
ds
sub
mov
lahf
pusha
mov
daa
dec
mov
xchg
xlat
pop
les
lods
xor
jo
enter
ljmp
data16
outsb
dec
movsl
sub
pushf
call
enter
stos
xor
out
rorb
inc
cwtl
and
out
test
mov
pop
mov
jo
imul
pushf
and
scas
adc
push
push
sbb
add
inc
ret
ljmp
jle
in
inc
push
adc
sahf
xor
sub
imull
aad
xchg
scas
and
cmpsl
cld
imul
lods
daa
mov
ret
mov
daa
adc
sub
int3
nop
test
cmpl
std
push
nop
adc
pushf
es
jnp
ja
pop
cwtl
cwtl
test
lods
jb
iret
les
cmp
int
loope
movsb
bound
repz
push
push
in
push
sbb
push
sub
and
and
movsl
pop
push
pusha
mov
jecxz
jno
fisubs
les
aad
mov
aam
mov
xchg
bound
std
jne
dec
insb
stc
mov
xchg
test
call
ljmp
cmpl
rcr
pop
or
mov
push
movsl
jnp
je
mov
cmpsb
add
repnz
mov
mov
jbe
push
cltd
js
xchg
mov
ljmp
jle
pop
xchg
gs
inc
jg
pop
sti
mov
addr16
push
and
mov
test
rorl
sbb
ss
push
add
adc
sub
xchg
or
scas
in
sahf
fwait
into
mov
dec
mov
sti
aam
in
test
cmp
push
mov
ljmp
dec
lods
xchg
arpl
or
ds
pop
les
cmp
and
in
scas
mov
xor
clc
test
popf
movsl
mov
xchg
lods
outsb
sbb
insb
lret
sub
out
add
xor
or
incb
xchg
mov
in
sbb
fstp
outsl
je
mov
and
loopne
push
and
int
fidivs
pop
sub
jns
ret
jecxz
jno
adc
adc
scas
dec
loop
xchg
mov
pop
out
test
mov
mov
sbb
push
pop
js
call
gs
test
push
inc
in
out
imul
mov
fbstp
mov
inc
cli
and
mov
popa
aad
mov
pop
stos
lret
add
mov
xchg
adc
jne
jmp
repz
adc
sarb
and
xorb
out
inc
bound
test
scas
cmpsb
sbb
dec
jb
jns
mov
out
shll
sbb
cmpsl
loope
adc
cmc
div
add
ficompl
out
pop
out
mov
cld
xor
iret
inc
jp
adc
sbb
pop
ja
mov
inc
xor
repnz
inc
lds
int3
stc
and
add
movsb
ficoms
fsubrs
mov
mov
cmpsb
mov
jp
sbb
movsb
sahf
sub
imul
jecxz
ss
imul
inc
mov
dec
inc
or
das
fwait
shll
cli
mov
push
xchg
mov
and
cmp
mov
ds
xchg
in
or
mov
leave
fstpt
mov
scas
sbb
push
or
fnsave
cltd
sbb
aad
stos
mov
stos
ret
lods
mov
lcall
iret
mov
mov
mov
and
jecxz
mov
movsl
sbb
das
cs
or
dec
test
pushf
cmpsl
fisubl
shrl
jns
sub
leave
push
jb
pop
cmc
or
or
adcb
push
in
ss
xchg
lods
push
hlt
sub
sub
dec
push
xchg
push
or
sub
aaa
and
mov
fsubrs
or
in
mov
add
xor
mov
mov
fwait
xchg
cltd
xchg
or
xchg
cmp
xor
stc
or
xchg
hlt
loope
test
leave
test
cwtl
or
jbe
mov
mov
dec
lds
in
push
test
lods
cs
test
xchg
add
push
add
lods
jp
into
mov
shr
xchg
xor
add
adc
cmp
repnz
pop
aas
jle
sub
sahf
jl
cli
jne
jb
in
stc
enter
out
xor
call
push
push
js
sbb
mov
inc
dec
std
push
int
fadds
stc
xor
xchg
rcrb
inc
cmp
add
adc
shll
outsl
inc
jg
push
in
xor
fwait
mov
cli
in
dec
leave
dec
test
add
mov
divl
cmc
loopne
xor
int3
in
dec
cmp
sub
lcall
mov
pmullw
test
push
mov
xor
jb
xchg
pop
lcall
bound
pop
add
jno
aas
add
sbb
mov
mov
scas
sub
fs
jge
adc
pop
subl
mov
sbb
stos
sbb
inc
jl
mov
out
aad
cmpsl
ret
xchg
and
jns
outsl
jecxz
mov
add
inc
lods
popf
jo
xlat
nop
xchg
and
lea
or
insl
loop
mov
fwait
insb
dec
loopne,pt
add
sub
pop
aad
dec
push
lods
das
dec
cli
jbe
pop
pop
mov
add
daa
cmpsb
jp
sbb
sysenter
cmc
inc
into
shrb
setns
imul
movsl
xchg
stos
pop
lock
aam
lret
movsl
repz
mov
outsb
inc
or
cmp
or
push
push
test
mov
xchg
fwait
cli
rcrl
adc
jb
std
xor
pop
inc
inc
sbb
shr
dec
cmp
jecxz
mov
mov
dec
push
stos
int
cwtl
mov
adc
xchg
inc
mov
mov
fs
in
mov
int3
iret
lods
sarl
cmp
push
jnp
fldl
inc
stc
aam
dec
ljmp
mov
enter
fstps
push
xlat
inc
sti
js
mov
lcall
mov
les
in
daa
sbb
sub
add
fcompl
gs
inc
in
sbb
mov
fistps
ja
jecxz
pop
pop
dec
cmpsl
jg
add
addr16
testl
mov
and
cmpsl
mov
clc
xor
call
stos
adc
xchg
or
lret
adc
or
jns
adc
lea
ljmp
pop
daa
fsubrl
inc
fiaddl
loope
shlb
dec
scas
jae
rolb
aad
subb
xor
loope
aaa
add
icebp
or
adcb
sahf
sub
inc
or
dec
jbe
pop
add
push
repnz
push
mov
fisttps
push
shll
in
xchg
shll
inc
push
sahf
ss
rcrb
jmp
sti
aaa
sub
negb
lcall
outsb
push
insb
shll
jae
mov
sbb
fimull
and
dec
nop
or
xchg
in
cmp
inc
dec
cmp
push
ret
sbb
and
fbstp
mov
es
sub
xor
insl
push
leave
idiv
in
imul
adc
push
leave
and
fwait
cmp
fcmovnbe
fisttps
cmpsl
jmp
jb
xlat
daa
xlat
or
cmpsl
outsb
jecxz
sub
rclb
idiv
add
pushf
xor
sub
jae
push
cs
push
mov
stos
in
pop
or
cmp
jbe
push
jb
xchg
inc
lds
xor
cmp
aas
jl
out
xor
jge
dec
ret
addb
int
icebp
in
mov
sub
arpl
pop
cwtl
push
sti
inc
ret
cmp
mov
add
push
jno
push
lret
mov
and
add
mov
adc
aas
in
add
adc
lods
adcb
lret
dec
ss
xor
bound
loop
sbb
daa
sbb
shlb
pop
lods
or
mov
mov
mov
xchg
or
and
insb
cmp
mov
add
scas
lock
fdivrs
mov
test
cld
adc
inc
sbb
mov
dec
inc
push
mov
dec
cltd
incb
loope
jne
inc
and
fnstcw
or
insl
mov
fcoms
pop
lahf
stos
jns
xchg
cltd
mov
cmp
xor
iret
les
popa
icebp
data16
imul
ret
adc
dec
jl
jmp
adc
outsl
call
xchg
xor
je
je
imul
lret
jb
jns
jge
sub
insb
cmpsb
jle
cmovg
jb
pop
es
out
les
pop
pop
and
bound
stc
negl
jno
push
ret
rolb
add
dec
cmp
ficomps
aam
xor
xchg
daa
cld
pop
mov
mul
notb
xor
push
sbb
dec
dec
cmpsb
pop
jmp
and
or
lret
jne
inc
stos
rclb
lock
jns
loop
ljmp
imul
pop
das
and
or
mov
inc
adc
or
push
add
mov
mov
arpl
scas
adc
addr16
sbb
mov
mov
mov
or
sub
sub
movb
fstps
rcrb
lods
cmp
mov
adc
out
mov
rcr
mov
clc
aas
fildll
sub
add
mov
sbb
adc
xchg
xor
or
push
ja
out
inc
enter
call
or
jmp
cmpsl
js
push
mov
pop
jmp
fiaddl
dec
in
mov
imul
jo
clc
cli
lahf
adc
out
shl
clc
out
imul
mov
sbb
lods
and
dec
pop
fs
gs
pop
jmp
sbb
in
sub
add
movsl
mov
pop
jno
jmp
fiaddl
or
ret
bound
shr
pop
mov
and
dec
sbbl
fimull
inc
jp
cwtl
inc
and
nop
cmp
or
cld
movsl
loope
jno
dec
jae
jl
shlb
mov
xor
imul
test
lret
lds
and
inc
cmp
enter
add
fidivs
xor
cmc
fists
fwait
inc
insl
or
pop
adc
rorl
adc
pusha
mov
push
mov
sbb
gs
and
lock
xchg
jb
test
inc
mov
lret
cmp
inc
push
mov
filds
in
jp
push
dec
pop
jns
fisttpl
pusha
push
aas
in
xchg
add
imul
rcll
iret
xor
std
and
jns
inc
or
xor
inc
ret
dec
xor
inc
aam
push
inc
mov
out
test
insb
lods
adc
adc
popa
sar
xchg
inc
inc
int
add
stos
xor
xor
stos
fists
ret
mov
repz
mov
nop
xor
xchg
cli
sbb
push
ss
jae
aas
jle
adc
out
mov
pop
pop
outsb
fadd
mov
jb
addl
xor
aas
js
push
das
push
.byte
.byte
inc
sub
mov
add
push
push
call
dec
lea
xor
mov
call
sub
lea
cmp
lea
cmp
jne
adc
out
push
addr16
add
sub
call
and
nop
nop
nop
push
lea
and
xor
xor
ret
push
mov
sub
push
call
lea
lea
lea
cmp
lea
lea
call
sub
and
sub
call
lea
xor
mov
movl
sub
not
and
inc
call
lea
lea
add
je
call
mov
push
call
cmp
lea
add
mov
dec
lea
sub
and
mov
push
call
add
and
not
pop
call
inc
cmp
jne
lea
and
xor
xor
lea
push
push
push
push
call
call
lea
sub
xor
cmp
push
call
mov
call
lea
mov
and
xor
mov
and
push
call
and
cmp
mov
call
sub
cmp
xor
mov
add
lea
cmp
mov
and
cmp
sub
cmp
push
call
mov
push
nop
add
lea
cmp
pop
call
mov
push
lea
add
xor
sub
add
pop
call
lea
add
cmp
call
pusha
mov
lea
xor
sub
sub
sub
or
xor
add
xor
xor
sub
xor
cmp
dec
push
call
lea
lea
add
and
lea
mov
add
xor
cmp
rdtsc
sub
lea
cmp
and
sub
mov
cmp
and
lea
lea
lea
and
cmp
sub
popa
cmp
jne
call
and
rdtsc
add
mov
add
dec
xor
insl
daa
iret
xor
and
test
sahf
into
xchg
fwait
lds
aam
repz
mov
test
mov
and
ja
cmp
adc
mov
pop
sar
pop
inc
inc
aad
mov
mov
outsl
mov
in
jle
pop
fisubs
in
addr16
insl
outsb
nop
adc
inc
stos
pop
mov
cmc
sahf
jg
mov
stos
inc
or
or
mov
mov
mov
popf
nop
xchg
cwtl
jnp
jle
fs
xchg
dec
stos
stos
cmp
pop
mov
pop
cmp
mov
jae
jp
imul
enter
call
clc
sbb
icebp
jge
fcomp
xchg
and
cli
sahf
loopne
jb
add
xor
add
or
in
out
data16
sub
push
xchg
jae
mov
mov
inc
add
jae
orb
out
mov
add
cwtl
imul
sbb
mov
out
and
mov
das
xor
xor
xchg
cmp
mov
je
adc
int
adc
mov
les
mov
mov
add
cltd
inc
test
pop
pusha
popa
insl
aam
arpl
andl
mov
xchg
xor
jge
jg
addl
je
push
les
imul
lcall
je
lods
in
loop
mov
mov
mov
and
jl
fwait
mov
mov
adc
ret
sub
inc
cltd
faddl
in
daa
lods
xchg
pop
sub
scas
out
in
out
arpl
out
test
mov
or
or
cli
sti
jne
push
jp
jne
or
in
je
sub
hlt
or
in
adc
aam
inc
inc
dec
out
lea
sbb
stc
jns
out
int3
xorb
out
and
mov
push
shrb
mov
and
cmovnp
adc
ret
xor
xor
add
push
daa
inc
movsb
cld
add
cltd
je
sub
fs
out
lahf
push
xchg
out
jge
mov
inc
scas
sti
imul
sahf
sbb
add
hlt
mov
push
test
nop
sti
xchg
les
or
cwtl
cltd
lock
popf
scas
lahf
mov
movsl
icebp
pop
cmp
cmpsl
stos
lods
sub
mov
mov
mov
jo
jne
mov
dec
aaa
jmp
dec
adc
shl
sbb
xor
ljmp
lret
fsubr
push
outsl
pop
sbb
stos
popf
sbb
and
fidivrl
sbb
mov
mov
jne
lds
cmc
js
ljmp
inc
add
add
inc
or
add
adc
scas
dec
or
xchg
movsb
inc
push
pop
and
es
sub
sbb
mov
cmp
test
xchg
ds
jns
imul
fldenv
rcll
xchg
cmpsb
mov
pop
push
addr16
mov
jp
popa
bound
out
out
js
push
imul
shrb
fs
daa
imul
orl
adc
popf
into
sbb
iret
adc
xchg
push
lds
mov
mov
movsl
lahf
pusha
cltd
jp
jno
jg
mov
or
jns
outsb
xor
pop
or
mov
inc
das
jae
int
iret
mov
or
or
and
fildll
or
xor
push
ret
sub
cmp
cmp
and
mov
jp
sti
mov
jne
or
add
or
lock
out
fcmovnbe
adc
sbb
and
repnz
adc
rclb
fldt
jmp
movsl
mov
loop
ds
jns
jnp
leave
pop
pop
adc
lods
sub
push
push
jmp
push
push
push
fsubrl
sbb
mov
in
cmp
jle
jno
adc
mov
pushf
jg
or
test
adc
and
sbb
fcmovb
rcrl
into
fstl
insb
stos
push
push
cmpsb
pop
nop
jl
sub
ret
in
scas
inc
and
dec
or
pop
in
cld
mov
ret
sub
pusha
sub
nop
fwait
nop
ret
add
add
inc
int
add
leave
pop
pop
add
lea
sub
lea
inc
push
call
add
sub
nop
xor
and
sub
lea
xor
lea
add
and
lea
lea
add
cmp
push
pop
mov
ret
lea
sub
lea
cmp
neg
mov
sub
or
lea
push
push
call
lea
sub
cmp
lea
cmp
lea
mov
xor
xor
add
lea
and
mov
mov
mov
push
pop
mov
ret
add
sub
lea
and
and
and
xor
mov
inc
xor
not
neg
cmp
jne
ret
xor
mov
not
neg
xor
inc
cmp
jne
ret
and
add
neg
or
xor
mov
inc
cmp
je
xor
not
neg
cmp
jne
ret
neg
lea
and
cmp
lea
lea
add
xor
cs
add
and
add
and
add
and
add
and
add
and
add
and
add
add
and
add
and
add
and
add
and
add
inc
add
es
add
inc
add
inc
add
es
add
es
add
inc
add
es
add
es
add
inc
add
inc
add
inc
add
es
add
es
add
inc
add
and
loopne
inc
add
and
enter
shlb
inc
add
and
mov
inc
add
and
aam
inc
add
and
jp
inc
add
inc
add
and
inc
add
add
add
add
add
add
add
add
and
add
add
pop
and
add
add
out
and
add
add
add
bound
add
es
jl
add
jo
add
mov
add
imul
gs
xor
cs
insb
add
imul
insb
add
jbe
jo
xor
cs
insb
add
jne
gs
xor
fs
insb
add
in
and
add
and
add
and
add
and
add
and
add
add
cmp
add
dec
and
add
add
insb
and
add
add
nop
and
add
add
add
and
add
and
add
and
add
and
add
and
add
add
cmp
add
dec
and
add
add
insb
and
add
add
nop
and
add
add
add
add
jo
outsb
fs
outsb
jne
add
add
fs
imul
add
jne
insb
push
arpl
add
outsb
fs
imul
inc
add
add
je
outsb
jne
add
inc
gs
gs
popa
addr16
outsl
jae
add
dec
outsb
jbe
insb
imul
je
add
add
inc
push
jo
jb
add
add
dec
outsl
popa
fs
jne
jae
jb
add
add
jae
push
jne
je
gs
popa
add
add
jb
outsb
push
outsl
inc
insb
imul
add
je
popa
jb
je
outsl
jae
add
push
jb
arpl
outsl
jo
jo
outsb
jne
js
add
add
pop
and
add
add
jl
add
mov
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
ds
add
push
and
add
dec
and
add
add
push
add
jl
add
mov
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
ds
add
push
and
add
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
insl
jo
jb
inc
imul
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
imul
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
jb
arpl
fs
jae
add
add
inc
gs
jb
arpl
jae
gs
jo
add
add
je
imul
je
add
add
je
gs
imul
dec
outsl
popa
fs
imul
add
add
push
gs
jb
push
inc
add
add
insl
popa
jo
imul
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
jb
popa
je
add
add
insb
jae
jb
insl
jo
add
add
insb
jae
jb
outsb
inc
add
xchg
and
add
mov
and
add
add
add
xchg
and
add
mov
and
add
add
add
add
inc
jb
popa
je
inc
jb
jae
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
outsb
imul
add
inc
gs
gs
dec
bound
arpl
add
inc
gs
gs
arpl
popa
jo
add
add
je
gs
inc
outsl
insb
outsl
jb
add
add
jo
add
andb
add
add
mov
add
shlb
add
add
loop
add
lock
add
adc
add
and
add
add
add
pop
add
jo
add
andb
add
add
mov
add
shlb
add
add
loop
add
lock
add
adc
add
and
add
add
add
add
push
gs
jb
popa
je
dec
gs
js
add
add
addr16
gs
gs
dec
gs
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
add
addr16
outsb
jne
dec
gs
add
add
addr16
outsb
jne
dec
gs
js
add
add
addr16
outsb
jne
push
popa
insb
jne
inc
add
add
addr16
insb
jne
push
add
push
gs
gs
gs
arpl
imul
addr16
outsl
popa
fs
gs
add
add
addr16
jo
outsb
dec
gs
add
add
addr16
jne
jb
dec
outsb
outsw
dec
gs
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
