push
call
ret
ret
sub
xchg
xor
mov
jmp
xchg
pop
or
cmc
sbb
pop
iret
push
aaa
dec
adc
lcall
int
pop
dec
xor
push
mov
xor
xor
rclb
adc
test
inc
out
out
adc
aas
insb
jge
adc
subl
cmp
mov
sub
ja
mov
lods
ret
jno
dec
call
dec
and
nop
outsl
stos
sub
lret
push
mov
lret
imul
cwtl
clc
loop
dec
jle
pop
int
in
add
inc
rclb
mov
mov
and
pushf
fldl
cmp
push
shll
movsb
icebp
out
mov
push
jns
clc
inc
pop
xor
adc
inc
and
mov
jbe
push
adc
pop
leave
jb
insb
pop
and
int
push
pandn
adc
push
loop
adc
push
rcrb
mov
dec
push
ficompl
orb
scas
sbbb
sbb
inc
popf
sub
or
push
mov
mov
mov
jmp
push
loop
mov
std
jo
gs
leave
insb
push
jg
test
cwtl
xor
sub
sub
dec
jbe
test
shll
add
rcrb
jg
mov
mov
pop
lret
mov
test
sbb
mov
lds
shlb
push
mov
xor
aad
push
sub
aad
mov
inc
pop
sbb
jl
lahf
cld
ret
and
jo
push
cmp
fstpt
inc
adc
std
arpl
test
pop
aad
sbb
mov
iret
mov
repnz
fmul
shll
mov
and
push
sar
inc
or
popf
pop
jecxz,pn
push
fcoml
push
xor
aas
jnp
into
cwtl
dec
je
xchg
les
push
test
movsl
roll
movsl
daa
jne
rep
pop
cmp
xor
shl
adc
lcall
ljmp
jo
arpl
fcomip
js
push
mov
leave
aas
push
js
pusha
mov
mov
fdivrs
lcall
js
dec
or
sub
and
jp
dec
repz
xor
ljmp
jge
sub
mov
rorb
mov
adc
lods
inc
mov
rorl
adc
mov
pop
lahf
mov
xchg
ja
cmp
inc
scas
push
or
sub
test
sub
or
cmp
js
sahf
fstl
iret
ficompl
xor
fisubl
icebp
or
and
ret
fistpl
adc
cli
sarb
mov
xor
ja
mov
incl
xchg
arpl
sub
dec
jns
lahf
fbstp
mov
iret
add
in
sbb
push
pushf
pop
sbb
jo
push
sub
pop
cmp
xlat
xor
sub
adc
clc
aas
add
jge
das
mov
gs
inc
incl
pusha
fwait
pop
rorl
ret
mov
xchg
fwait
mov
sub
stos
lea
mov
cmc
add
xor
jno
mov
and
sbb
pop
xchg
pop
sarb
adc
lcall
inc
out
push
mov
lock
test
testb
sbb
push
test
nop
pop
pusha
mov
or
js
xor
cld
aad
int3
push
push
jne
imul
pushf
lret
fnstcw
rcll
cltd
in
mov
xor
or
cmc
rcrl
pop
mov
iret
adc
pop
data16
xchg
rorl
lahf
push
mov
ljmp
cltd
push
mov
lock
push
sub
iret
mov
stos
xor
cmp
mov
dec
icebp
movaps
push
or
div
fstpt
inc
xlat
mov
adc
popf
mov
jl
adc
test
mov
inc
xchg
push
loop
inc
cmp
cli
ficoms
inc
or
lods
in
xor
xchg
stos
mov
mov
sti
jnp
jg
sub
out
int
inc
jle
orl
push
fldl
mov
or
in
and
jno
mov
pop
mov
xchg
sbb
shll
out
mov
jecxz
lcall
push
dec
cmpsb
or
scas
out
mov
rcrb
or
lds
pop
arpl
rcll
add
push
push
push
ret
incb
test
mov
mov
cmp
adc
cmpsb
and
mov
std
sub
enter
inc
shlb
int
mov
xlat
stc
or
jecxz
mov
sbb
cltd
out
leave
inc
sbb
ss
mov
in
mov
andl
out
wbinvd
mov
jp
lods
and
repz
in
add
pop
incb
adc
mov
inc
les
out
gs
mov
aaa
mov
adc
mov
ret
hlt
cmp
insb
mov
shlb
cmp
imul
lock
mov
xchg
cmp
aam
scas
push
sub
imul
sahf
or
into
mov
popf
xchg
cwtl
imul
xchg
shrb
lret
jmp
ret
xor
sub
mov
mov
mov
mov
ss
lods
jmp
push
iret
stc
rcrl
es
fstpl
stos
sub
cwtl
int3
popf
jecxz
add
push
push
xchg
inc
mov
js
stc
sbb
push
sahf
ret
mov
movsb
xor
and
rcrb
in
cli
xchg
lock
lods
arpl
in
inc
push
repz
cmp
cmp
nop
test
mov
jle
mov
mov
lahf
fwait
adc
lret
or
ret
and
in
push
fs
mov
mov
jle
rolb
or
rcrl
jecxz
mov
sbb
add
fnstcw
mov
mull
mov
inc
and
mov
push
pop
mov
in
push
pop
mov
and
lds
fcom
pop
xlat
sahf
adc
push
push
dec
fs
and
pop
jecxz
idiv
insl
or
xor
xchg
out
popa
inc
stos
outsl
mov
pop
aas
sbb
sub
mov
cmp
sbb
daa
mov
imulb
mov
ror
push
xchg
or
test
cli
loopne
xchg
addr16
cmp
popf
adc
jp
testb
mov
arpl
pop
sahf
aaa
xor
aad
mov
xchg
sub
mov
pop
jmp
loope
xchg
movsl
push
jmp
jge
jae
mov
leave
out
push
sti
out
mov
xor
out
sbb
cwtl
xchg
dec
movsl
jb
fbld
mov
pop
addr16
mov
and
mov
pop
cld
hlt
test
jge
pushf
dec
call
cmp
cmp
or
cmpsl
inc
jo
je
lret
mov
xor
push
inc
in
mov
daa
pusha
fisubrl
mov
rcl
xchg
lods
aaa
loopne
pop
mov
sahf
push
inc
adc
and
scas
cwtl
nop
sub
cmpsl
sbb
rep
mov
sti
add
ret
jmp
aam
mov
sbb
jnp
enter
popf
mov
push
in
test
aaa
xor
popa
imul
dec
pushf
rolb
push
pushl
shll
out
stos
ret
pop
out
mov
shlb
je
mov
and
xor
jo
push
xchg
pop
dec
add
dec
and
mov
pop
insb
push
xor
movsl
lds
sub
int
fidivrl
adcb
mov
notl
inc
arpl
adc
sub
or
sub
mov
ja
pop
inc
test
mov
stc
out
jbe
xor
or
mov
mov
lds
mov
fsubs
pop
popa
or
sub
mov
repz
push
adc
pushf
inc
or
jecxz
cmp
mov
test
dec
and
push
popf
mov
in
push
arpl
es
and
in
mov
cmp
inc
lahf
int
lods
push
cmc
int
fsub
or
jmp
test
jle
jp
packsswb
jecxz
adc
pop
pop
fsubrs
jmp
imul
xchg
jne
or
les
mov
mov
js
mov
or
sbb
xor
and
cwtl
rclb
jb
sub
and
arpl
test
lock
mov
out
pop
mov
imul
scas
dec
mov
and
push
sbb
jp
mov
shll
inc
add
gs
inc
xorb
adc
imul
or
sbb
iret
out
out
repnz
outsl
outsl
xchg
sbb
loop
push
fstl
xchg
ret
cmp
nop
mov
jne
mov
xor
push
dec
sbb
aaa
mov
lods
mov
rorl
add
addr16
cmp
xchg
fdivrl
xor
pop
adc
jmp
or
scas
adc
inc
hlt
and
inc
data16
pop
cmp
fsubrs
insb
data16
jp
shrl
lahf
call
js
inc
xchg
loopne
or
pop
ret
nop
sbb
insl
into
mov
cltd
sbb
fdivl
popa
push
add
je
cmpsl
push
iret
add
pop
mov
in
pop
xor
pop
and
dec
and
test
jnp
lret
jmp
jl
push
sub
nop
inc
es
xor
lcall
jne
sarb
in
int3
xor
lahf
mov
loop
jg
cmpsl
pop
pop
popa
cmp
test
mov
cld
xchg
xchg
scas
pop
inc
pop
lret
pop
inc
pop
mov
arpl
cmp
inc
cltd
mov
sahf
scas
arpl
xchg
scas
dec
enter
add
inc
mov
mov
and
leave
and
push
xchg
xchg
fwait
jbe
jecxz
out
pop
enter
out
xchg
push
lcall
jmp
jecxz
stc
jge
mov
mov
lods
in
loopne
popf
movsb
daa
adc
and
cmpsb
mov
mov
inc
ss
jnp
mov
notl
pushf
dec
out
push
add
addr16
and
ss
sub
enter
sahf
mov
lock
xchg
jnp
insl
shrl
cmp
inc
mov
insb
cmp
fwait
mov
mov
mov
jns
sbb
jl
in
or
or
mov
xor
cmc
mov
xchg
aam
shrb
adc
rcr
jl
push
frstor
mov
ljmp
rcrl
xor
fs
loop
jbe
outsl
adc
out
sbb
ror
ja
mov
dec
pop
push
jns
outsl
data16
jge
add
and
out
xchg
xchg
ficoml
loop
scas
mov
push
in
fldl
dec
fisubl
sub
scas
test
lcall
mov
pop
orb
mov
push
inc
dec
mov
ljmp
pusha
adc
push
fcomi
inc
sbb
nop
push
subl
subb
pop
dec
dec
pop
nop
pushf
ljmp
or
and
adc
cmp
mov
xchg
mov
fdivs
fs
aaa
push
pop
and
daa
int
test
push
stos
jns
mov
xchg
ret
push
add
lock
dec
push
sbb
and
loope
xchg
adc
lods
fwait
shl
push
and
dec
mov
and
hlt
outsl
pop
shll
cmp
inc
not
stc
mov
add
das
xchg
jg
jo
and
jmp
pusha
ficoml
fsubp
stos
orb
xchg
fisttpll
push
mov
inc
and
lock
pop
aaa
int
adc
adc
sbb
shrb
sub
add
mov
mov
cmpsb
adc
sbb
xchg
cmp
add
addr16
imul
js
fisttpl
addr16
push
sub
fldenv
and
fcomi
and
and
ljmp
add
or
xchg
or
jae
xchg
int
loopne
and
jns
xchg
and
cld
hlt
hlt
dec
int
arpl
insb
or
adc
jne
or
push
sub
mov
add
adc
in
flds
ud0
sub
mov
and
outsl
clc
sub
mov
dec
imul
xor
popa
popa
subl
shll
aas
pop
mov
or
test
lret
dec
mov
repz
rclb
jg
adc
je
aad
jl
mov
cli
sbb
test
lods
mov
mov
hlt
sub
xchg
or
outsl
jae
dec
int
push
shll
sbb
push
clc
clc
xchg
movsb
add
mov
adc
cmpb
push
lds
fildl
push
mov
in
add
cwtl
movsb
push
pusha
dec
rol
xchg
aad
fs
scas
jne
jp
jb
push
outsl
or
push
jo
mov
jae
int3
jne
adc
nop
mov
sarb
xor
aas
xor
lcall
fwait
lcall
lcall
fildl
cmpps
sbb
xchg
out
test
mov
test
and
or
sbb
push
icebp
aam
pop
xchg
add
test
jno
fsubs
xchg
inc
push
add
mov
cmp
les
mov
mov
or
mov
aad
loopne
mov
cmc
cmp
xchg
add
mov
in
cwtl
nop
movsb
cwtl
adc
std
pop
movsb
cli
imul
push
mov
adc
or
in
out
sbb
push
iret
lea
jbe
and
xchg
js
mov
mov
and
sbb
pop
push
xor
inc
sub
mov
mov
sub
jge
add
cmpsb
les
lretw
lds
sbb
lods
call
lds
dec
push
xor
aam
and
push
enter
in
testl
push
bound
xlat
dec
sarl
cwtl
inc
xor
ss
pop
pop
push
or
and
fucomi
jmp
inc
pop
sbb
rorl
pop
xchg
daa
sub
int3
je
sahf
adc
or
xor
roll
andnps
aad
bound
js
addb
movsb
mov
loop
ja
add
imul
fisttpll
paddb
inc
adc
inc
and
push
pop
dec
arpl
cmc
test
mov
out
dec
push
push
adc
cld
mov
pop
ror
pop
je
or
mov
sub
lods
mov
mov
or
xor
das
outsb
mov
imul
jb
repnz
movsl
out
xchg
add
inc
dec
clc
fcmove
loop
push
mov
cli
mov
dec
mov
dec
int
and
in
add
adc
rcrl
fildll
push
in
cwtl
or
mov
or
aad
and
call
jp
mov
push
mov
mov
mov
in
add
rcrb
shll
mov
test
fsubs
cmpsb
xchg
sbb
fists
xchg
jecxz
cmp
in
and
test
sbb
or
outsb
mov
add
pop
push
aam
stc
xor
fnstenv
loopne
lock
icebp
movsl
pushf
iret
mov
pop
lcall
push
jecxz
lcall
mov
dec
xor
lds
adc
jns
push
movsl
out
push
pop
ja
jg
popa
and
data16
sbb
loope
pop
mov
cltd
aas
push
sti
dec
and
fldenv
int3
jae
fnstenv
mov
out
mov
xchg
test
xchg
sbb
repz
cltd
popf
sub
xor
sbb
jbe
xlat
inc
dec
fcompl
insl
inc
addr16
mov
into
fbld
fisubrl
cmp
add
and
xlat
xchg
or
or
outsb
scas
lock
push
lock
sbb
loopne
ret
jecxz
ljmp
mov
insb
pusha
jle
enter
icebp
pop
test
bound
imul
and
and
cmp
popa
lds
xchg
fsubrs
int
je
mov
repz
jg
mov
icebp
xchg
cmpb
push
or
jb
mov
js
push
lock
and
xchg
jmp
jp
jge
les
add
shlb
jae
outsb
jl
leave
push
jbe
mov
outsl
repnz
jle
pop
inc
aam
push
xchg
xor
and
fwait
xchg
arpl
stc
enter
sub
mov
mov
in
lret
jmp
out
lahf
mov
imul
das
adcl
lahf
mov
jns
pop
xor
push
add
mov
lret
xor
jg
js
sti
mov
mov
mov
cmp
mov
mov
loope
lods
cmp
popf
cmp
jp
pop
add
lds
push
popf
sub
push
loopne
ret
loope
cmp
and
ret
mov
xor
movsl
jne
xchg
mov
clc
sub
cmp
or
outsl
imul
xor
lock
xchg
mov
jg
jp
mov
leave
pop
pop
pushf
pop
js
fdivs
fcmovnbe
fstps
jg
inc
lret
lods
cmp
arpl
scas
orb
ret
push
mov
out
xor
idiv
das
jae
stc
sahf
movsl
mov
inc
push
shrb
and
andb
add
mov
dec
adc
bound
in
jno
adc
xor
repz
lods
in
imul
jge
out
adc
push
incw
or
mov
es
leave
dec
scas
loopne
cmp
int
clc
adc
push
cs
xor
fmulp
fs
jle
fwait
push
cwtl
daa
out
pop
test
xlat
pop
jp
add
popa
sbb
dec
jb
aas
daa
outsb
jge
std
add
insb
push
fisttps
scas
rcrb
lret
xor
jmp
cmc
jecxz
sbb
leave
mov
popa
fcmove
js
rorb
push
cmc
xchg
idivb
out
xchg
and
aaa
xor
add
imul
mov
leave
adc
lea
aas
sub
movb
fwait
aaa
mov
pop
adc
cpuid
gs
scas
mov
mov
mov
inc
js
push
lcall
dec
mov
das
xchg
sahf
add
xlat
add
lea
push
mov
push
jns
cvtdq2ps
rclb
adc
jl
xchg
jae
pop
dec
dec
adc
dec
pop
or
jmp
into
movl
mov
lret
out
leave
insl
scas
cwtl
outsl
out
stc
ds
movsb
cmpsb
sbb
sbb
movsb
cmp
cmp
filds
cmpsl
int3
mov
mov
xor
loope
xor
xor
nopl
sbb
icebp
daa
in
shrb
mov
out
ret
sbb
inc
mov
push
sbb
fcmovb
stc
cmp
shll
fmuls
in
xchg
inc
into
and
in
lea
std
adc
imul
inc
xor
int3
fisubs
loope
mov
test
enter
xchg
adcl
jmp
jno
iret
icebp
lods
gs
mov
mov
aaa
jp
fbstp
pop
outsl
sub
js
adc
iret
lea
xlat
jecxz
or
lcall
fisubs
sub
mov
push
lods
pop
adc
dec
out
add
push
out
testl
filds
inc
mov
enter
dec
ja
xchg
push
xchg
cli
dec
outsl
out
or
pusha
jmp
xor
sbb
cwtl
mov
xchg
mov
orl
lods
cmp
mov
mov
and
mov
add
jns
adc
cmp
inc
gs
shr
stc
or
popa
xchg
cmpsb
mov
pop
and
movsb
sahf
scas
xchg
jno
or
outsb
jl
xor
imul
cltd
add
add
pop
mov
and
arpl
faddl
push
mov
jmp
adc
imul
shll
jg
popa
fs
test
out
leave
lock
cmp
je
mov
inc
and
out
pop
sbb
xchg
dec
addr16
xchg
cld
inc
in
js
movsl
stos
adc
add
dec
xchg
sub
jo
test
fs
push
jb
xor
ljmp
cltd
aad
mov
aaa
cli
push
cs
data16
fisubrs
jae
lahf
int
inc
push
cld
mov
mov
jge
pushf
int
inc
fs
aaa
dec
jmp
push
aaa
pop
and
test
push
int
test
aas
loop
test
sub
push
jns
repnz
fdivs
push
push
inc
xchg
pop
outsl
shll
fildll
lods
out
or
fidivrl
lods
aas
shll
jge
xor
add
sti
enter
dec
out
mov
xor
push
out
movsb
movaps
mov
ds
pop
jge
icebp
mov
push
cmp
fistps
leave
sub
xchg
cwtl
xor
leave
dec
push
or
mov
insl
sahf
inc
jno
push
jmp
dec
fs
pop
int
and
mov
test
mov
inc
ficoml
mov
fldcw
stos
sti
jno
xor
dec
daa
outsl
and
js
roll
orl
fwait
cmpsl
cmp
xor
movsb
push
jmp
cmp
cmp
add
jecxz
test
xchg
mov
rcrl
or
xchg
fnstsw
push
and
mov
mov
fstpt
outsl
and
aas
add
add
sub
push
jo
in
mov
aam
stos
jo
movsl
lret
dec
push
jbe
adc
push
push
and
xchg
lds
adc
popf
incl
sub
sub
adc
jns
adc
push
push
loope
pop
mov
mov
add
jecxz
hlt
xchg
dec
pop
nop
jns
mov
inc
or
cwtl
jno
movsb
dec
push
mov
fistpl
mov
mov
mov
repnz
add
roll
sub
enter
cmp
mov
lods
loope
mov
mov
dec
cwtl
pop
outsl
repz
lods
inc
in
dec
inc
dec
xchg
sti
adc
mov
sub
out
in
add
movsb
xchg
imull
mov
xchg
xchg
daa
or
push
in
hlt
std
xchg
or
cltd
jae
fs
fcoms
push
arpl
add
cmpsb
and
fwait
mov
fcoml
into
testl
and
jp
cld
add
enter
lock
call
push
xor
inc
aam
insb
mov
ljmp
sbb
inc
aad
mov
cli
jmp
cmc
cmpsb
push
lahf
mov
movsb
push
dec
dec
or
nop
mov
jnp
or
ja
shll
jp
push
cmc
adc
and
outsb
imul
rorb
lret
inc
mov
cmpsl
add
out
mov
and
mov
sub
add
jmp
arpl
dec
test
mov
scas
sbb
dec
cmpsl
pusha
jo
mov
fdivs
mov
and
mov
fstps
int3
and
lds
inc
popl
insl
imul
test
sub
mov
scas
xchg
aad
fldlg2
mov
pop
leave
or
jge
jb
fbstp
fdivr
sub
push
sub
jl
mov
int3
aam
je
bnd
call
test
test
test
stos
mov
aam
mov
pop
fisubl
dec
sbb
sti
sub
jno
jg
imul
lods
adc
xchg
popa
in
stos
cltd
xchg
xchg
cmp
jno
leave
xchg
xor
mov
dec
pop
shll
pusha
adc
lods
and
out
mov
push
shl
subb
dec
dec
jecxz
sub
xchg
sub
xlat
fisubs
loopne
loop
ss
cwtl
je
mov
pop
nop
jnp
into
mov
ljmp
jae
out
idivl
stos
push
cld
and
negb
xchg
test
cmc
cmp
sbb
mov
call
mov
mov
sti
shrb
rcrl
es
inc
adc
ja
dec
jbe
pusha
negb
push
inc
lret
sbb
pop
rclb
push
dec
cmc
out
ljmp
fscale
or
lea
outsb
daa
cmc
out
cld
das
lret
enter
jnp
das
adc
les
cmp
dec
aad
gs
cli
ret
xor
test
or
xor
js
sbb
imul
out
pushf
jge
cmp
xor
lret
mov
push
sub
out
mov
addr16
mulb
rclb
xchg
inc
stos
test
inc
sarb
cmp
add
shr
pop
add
negb
test
and
das
lock
add
fcoms
lret
aam
pop
iret
adc
and
cmp
add
sub
movsl
test
aaa
repnz
sarb
add
jbe
repnz
loop
sahf
xor
jmp
test
test
cltd
stos
nop
add
mov
out
add
push
dec
xchg
cmp
pop
xor
mov
push
imul
adc
xchg
stos
fdivr
clc
push
lahf
bound
lock
add
sub
mov
jg
test
jmp
push
inc
sub
pop
cmp
add
cld
adc
jo
idivb
bound
xor
popf
jl
adcl
push
push
push
mov
cmp
xor
lods
jns
or
jo
dec
xchg
aaa
cmpb
mov
dec
insb
lret
jmp
ds
xchg
fwait
pop
xor
dec
sub
cli
xor
bnd
or
xor
sbb
arpl
fidivrs
cld
outsl
fucomip
push
movsl
std
movb
adc
ljmp
fsubrs
sbb
in
sbb
lret
xor
cld
dec
pop
mov
out
imul
xlat
add
test
xchg
incb
data16
adc
pusha
loopne
xor
sub
scas
mov
pop
pop
outsb
sahf
fs
push
fildll
xor
jg
xor
mov
jns
jnp
daa
dec
add
push
adc
adc
add
and
rcll
cmp
ja
jle
xor
dec
mov
ret
je
loop
mov
mov
inc
dec
pop
sub
in
lcall
or
pop
or
mov
psllw
jmp
ret
mov
push
lea
rorb
inc
and
sbb
sbb
leave
xchg
xchg
cmp
call
cs
xchg
int3
push
in
inc
sahf
icebp
les
sub
aas
shrb
scas
sbb
stc
es
cmp
lea
fistpl
mov
repz
rol
cmpsb
xor
add
pop
xchg
jo
jnp
mov
stc
pop
pop
imul
lahf
mov
popa
imulb
dec
inc
or
mov
lret
insb
inc
fstpt
ds
and
hlt
stos
push
mov
testl
mov
bound
and
push
mov
lret
loope
mov
bound
pusha
jmp
or
cmp
shl
mov
sub
and
gs
xchg
ror
fistl
ficompl
jecxz
aaa
xchg
cmp
mov
divl
pop
outsb
mov
push
into
shl
or
movsl
not
push
sub
std
adc
mov
or
hlt
sbb
dec
sti
mov
xchg
test
iret
mov
jbe
je
adc
xchg
dec
pop
int
cld
or
aas
xchg
mov
lahf
stos
mov
repz
bound
or
aad
xchg
test
mov
mov
mov
push
addr16
cmp
hlt
inc
sbb
loope
fsubr
pop
ds
pop
and
inc
mov
call
xchg
decl
shl
cmp
nop
insb
negb
or
aaa
cmpsl
std
xchg
repz
addr16
pop
lret
mov
sbb
aad
mov
push
out
popf
dec
xlat
add
loopne
sbb
cmpsb
and
fbstp
xchg
jg
mov
std
xor
dec
out
xor
or
mov
fsubr
push
insl
add
xchg
or
add
insb
cmp
mov
fwait
and
ss
pop
shrb
push
mov
mov
and
es
enter
mov
push
mov
jle
or
test
cld
clc
popl
pop
xchg
subl
ret
je
mov
sub
push
sbb
add
mov
rcrl
pop
aas
icebp
mov
dec
repz
cmp
xor
sbb
sbb
rcl
dec
or
pusha
clc
push
mov
and
mov
add
test
push
push
sbb
cli
jne
ret
push
jmp
sub
cmp
xor
push
xor
loopne
stc
adc
test
lds
xor
inc
daa
mov
cmovno
incl
inc
mov
mov
inc
mulb
and
insb
inc
inc
or
jns
adc
xchg
jp
aam
xor
cmp
xor
insb
or
outsl
testl
cmp
ss
and
push
testl
inc
aaa
jns
in
lods
xor
xor
repnz
pop
in
mov
data16
leave
cmp
mov
pusha
push
xor
inc
popf
and
dec
pop
push
cwtl
add
mov
and
rcll
add
bound
mov
cmc
dec
sbb
pop
inc
or
es
aas
or
mov
arpl
rclb
sub
and
shlb
jae
inc
aad
stc
sbb
sbb
out
pusha
mov
pop
sub
aam
jge
cli
ret
vpmullw
xor
out
xlat
xchg
cmp
leave
dec
es
mov
clc
shlb
lea
jle
add
pop
lds
leave
mov
out
mov
xchg
pop
mov
test
fdivl
stc
lret
xchg
cmc
in
push
lea
xor
dec
enter
xor
cld
adc
sub
xchg
mov
popa
and
and
mov
outsb
cmp
and
nop
pop
add
or
dec
push
and
loop
xchg
xchg
pop
push
pusha
dec
addl
and
int3
aaa
xchg
cwtl
lods
cmp
mov
call
outsb
stos
or
mov
add
cli
cwtl
xchg
ds
jmp
cmp
popf
insb
mov
and
lock
imul
hlt
pop
fstpl
mov
pop
in
dec
shl
pop
mov
mov
in
mov
lahf
xchg
fdivrs
ss
xchg
mov
xchg
inc
orl
ja
pop
insl
xchg
sub
shrb
into
popf
lret
push
scas
sbb
sub
iret
les
xchg
pop
pusha
sub
jnp
adc
cmp
stos
scas
pushf
bound
push
add
in
mov
sbb
jecxz
sub
jb
lods
subb
out
imulb
mov
insb
fadds
pop
adc
aad
in
dec
imul
fldl
imul
ficoms
mov
dec
insl
lret
and
cmc
cmp
pop
xchg
sbb
je
pop
jecxz
shlb
in
xchg
cmpsl
mov
orl
subl
and
sbb
es
sub
xchg
mov
xchg
inc
mov
sub
and
adc
jmp
aad
mov
pop
call
mov
pusha
mov
jns
dec
mov
leave
mov
pop
push
adc
cmpsl
fsts
aad
mov
and
mov
or
and
addr16
loope
pop
scas
enter
fbstp
js
jo
xor
and
sbb
sub
cld
clc
push
mov
data16
and
and
repz
add
enter
mov
icebp
mov
mov
rclb
std
cmp
push
and
shlb
pusha
dec
add
ret
lods
movsb
sub
inc
pop
dec
enter
insb
notl
out
add
out
mov
das
push
aam
xor
xchg
das
testb
jg
insl
loope
fwait
rclb
test
int
mov
mov
inc
cmpsl
flds
adc
fwait
or
xor
and
sarl
dec
jmpw
insb
mov
lahf
xor
jecxz,pt
sub
cmp
sub
sti
sub
out
push
adc
es
sbb
mov
sbb
nop
mov
jbe
popf
call
cmc
jne
or
lea
mov
jnp
xchg
dec
stos
xchg
and
insb
sti
arpl
cli
jle
jno
das
pop
mov
imul
sbb
ljmp
mov
add
sbb
push
and
xor
test
jg
je
lods
mul
lret
sbb
das
push
xchg
scas
gs
inc
enter
sti
leave
call
xor
ffreep
inc
jg
jmp
pop
mov
shl
sbb
aad
aad
jecxz
inc
call
insl
lods
cmp
and
cmp
mov
adc
js
scas
ja
xchg
add
or
lcall
loop
push
push
jmp
dec
dec
push
popf
xchg
xor
adc
sahf
jne
arpl
in
loop
outsb
jne
add
ds
hlt
cmp
popa
loopne
int
pop
enter
xor
jb
sbb
fcoms
lret
cmp
mov
mov
dec
xchg
test
jmp
sbb
adc
pop
xchg
push
jae
outsb
ja
std
cltd
adc
imul
dec
hlt
jns
decl
pusha
cs
cwtl
push
lret
pop
pop
xchg
call
scas
in
nop
fstp
out
loope
and
ja
jo
es
addr16
aam
pop
adc
lock
cmpsl
loope
sbb
mov
ret
call
xchg
dec
daa
lret
aaa
mov
out
call
or
mov
mov
add
cmpsl
push
loopne
xchg
sti
sti
pop
out
xorl
enter
push
insl
pop
jno
popf
pop
imul
cwtl
cld
cld
push
test
sbb
add
adc
insl
imul
xchg
jb
push
jg
adc
xor
out
mov
in
mov
aas
sahf
mull
or
sti
add
or
mov
inc
lds
add
loope
ss
mov
loopne
add
dec
cmp
stc
mov
sbb
mov
fidivrl
jae
mov
add
sbb
add
and
jb
sub
sarb
je
int
xor
pop
add
xchg
ljmp
shrl
push
into
mov
inc
stos
imul
popa
rcr
lea
xchg
dec
pop
shrl
sub
aam
mov
mov
lahf
pop
je
lds
adcb
mov
stc
xlat
add
or
pop
movsb
push
pop
mov
aaa
jo
sahf
mov
out
or
andb
test
and
fwait
pop
popa
xchg
stos
mov
aad
leave
outsl
stc
add
inc
push
pop
in
clc
mov
pusha
rclb
mov
and
add
mov
call
add
pusha
jle
cmp
lret
xchg
xor
pop
shll
xchg
int3
ljmp
cmp
xor
cmp
mov
jbe
mov
xorb
ret
int3
cmp
loop
ror
sbb
sbb
je
stos
jmp
xchg
shlb
jnp
insl
adc
push
cld
dec
xor
cvtps2pi
jl
sbb
and
pop
aam
ljmp
call
or
les
mov
or
mul
xchg
in
mov
mov
gs
mov
fcoml
fistpl
lea
cmp
push
sbb
xor
mov
jb
call
mov
jbe
in
add
iret
xchg
ret
idiv
mov
imul
pop
xchg
pop
xor
in
into
jle
lret
push
sti
into
insb
jmp
popa
lds
shrl
lret
xor
jl
xor
rcr
adc
leave
pop
fsubr
enter
and
mov
cmp
push
xor
aaa
out
cmp
xchg
mov
in
js
stos
sbb
push
inc
and
dec
or
sarb
inc
fwait
leave
imul
gs
jae
xchg
or
jl
xchg
daa
dec
jb
push
pop
add
dec
dec
jns
pop
adc
jl
loopne
sbb
out
sbbb
push
je
xor
in
fwait
mov
ret
insl
xchg
cmp
flds
adc
inc
pop
in
cli
or
icebp
and
sbb
pop
mov
fistpll
push
das
ret
pop
dec
mov
jns
lcall
out
mov
das
inc
scas
mov
push
mov
sti
mov
in
movsl
test
mov
dec
push
mov
dec
int
iret
cmpsb
xor
xchg
pop
orl
pushf
mov
es
jno
adcl
lock
int3
ret
test
inc
lds
lret
inc
icebp
adc
sbb
xor
xchg
into
insb
inc
fs
mov
dec
dec
cmp
pop
dec
inc
das
push
mov
xlat
loop
test
stos
call
out
out
shl
mov
sarb
es
pop
sbb
sbb
sub
dec
add
int
sbb
mov
sub
das
mov
push
fldt
ljmp
out
pushf
lea
inc
push
mov
hlt
cld
std
and
cwtl
js
lds
out
lea
pop
fisubrl
pop
push
inc
sarb
sbb
daa
cli
push
test
aam
es
mov
inc
push
or
mov
adc
add
rcl
or
push
dec
push
mov
add
lods
rcrb
or
lea
xchg
pop
jecxz
adc
sti
aam
xchg
dec
in
pop
sbb
sbb
jge
aad
dec
pop
ret
mov
subl
punpcklwd
lock
aad
jne
adc
sbb
jno
jle
adc
cmp
or
insl
push
inc
aas
pushf
pushf
out
cmp
xchg
out
xor
int
enter
adc
ret
mov
test
sahf
lds
or
jmp
out
movsb
mov
out
pop
mov
pop
jp
outsl
mov
pop
mov
xlat
and
js
outsl
push
rorb
mov
sub
sub
pop
jle
lret
orb
test
int3
ret
mov
mov
into
and
or
fiaddl
lods
jmp
or
out
cld
ds
popa
xchg
fnstenv
cmpsl
dec
insl
jo
xchg
mov
lods
imul
adc
push
out
xchg
jnp
stos
dec
inc
mov
loope
push
pop
adc
popa
pop
scas
lods
pop
shlb
jp
fildll
lea
xchg
movl
out
xchg
js
loop
xlat
xchg
add
and
rcl
mov
ljmp
mov
mov
pop
adc
cmpsl
sub
or
inc
int
js
bound
and
mov
sub
dec
in
lret
cmp
and
push
sbb
push
mov
jne
mov
enter
loopne
std
jne
adc
mov
mov
xor
jo
push
ss
jb
es
stc
cmp
stos
mov
aam
dec
pop
mov
mov
mov
or
sbb
popa
aad
jge
mov
dec
jge
inc
stc
and
enter
cmp
enter
mov
dec
sub
xchg
ljmp
inc
jo
mov
in
pop
loope
js
mov
mov
sub
xchg
xchg
nop
call
or
loopne
dec
mov
adc
int
int
mov
out
and
in
ss
movsb
and
cmp
popf
js
dec
sbb
and
stc
or
fidivl
pusha
aad
cmp
push
pop
fldcw
js
and
xor
dec
nop
or
pushf
inc
mov
xlat
fstps
iret
jge
js
lahf
ja
shll
cmp
dec
mov
shlb
mov
rcrb
daa
jne
push
xchg
push
mov
dec
add
mov
js
jmp
push
push
mov
jne
jnp
dec
ljmp
mov
add
adc
xchg
test
or
mov
xchg
sbb
rcr
sub
les
xor
std
pop
pusha
mov
sub
cmp
sahf
and
add
cli
loope
call
push
inc
insl
mov
in
outsb
mov
notl
xchg
cmpsl
dec
xor
and
or
fists
outsb
icebp
in
cmp
dec
leave
cmpsb
mov
xorl
mov
int3
dec
cwtl
stos
dec
push
movsb
dec
pop
push
out
mov
testl
xor
lahf
int
jnp
xchg
mov
daa
pop
insb
gs
adcl
jo
fstps
pop
push
lret
lcall
sarb
ss
sub
imul
cld
inc
add
jb
mov
add
sub
sbb
in
mov
sub
daa
inc
outsb
push
push
addr16
aas
mov
scas
mov
fidivrs
stos
pop
mov
orl
mov
fsubl
int
and
mov
mov
stos
insl
push
push
xor
mov
push
sti
sarb
cmpb
jp
jecxz
mov
das
jae
lock
mov
sti
jge,pt
pop
cmp
sbb
xchg
xlat
mov
xchg
xchg
jnp
aaa
fsts
and
out
ffreep
dec
xor
pop
addb
mov
push
cmp
dec
jae
faddl
xor
and
hlt
xchg
clc
adc
pop
insb
pop
orl
arpl
jmp
repz
mov
shlb
movsb
cmc
shrb
iret
xor
push
mov
jmp
cmp
aas
je
aaa
test
mov
mov
das
inc
or
push
xchg
addr16
mov
mov
sub
jp
icebp
aaa
mov
jge
das
lods
adc
in
xlat
xor
inc
mov
xchg
stos
sub
push
push
xchg
data16
cld
sbb
mov
xchg
rolb
sub
sbb
sbb
shl
scas
lahf
stos
rorb
stos
sbb
push
mov
jnp
in
pop
push
adc
aam
push
std
jmp
mov
pop
pop
mov
lcall
outsb
inc
dec
mov
mov
cld
jmp
pop
push
in
cmp
lret
cmp
xchg
fs
or
incb
mov
jbe
negb
repz
inc
adc
divb
cmpsl
jns
faddp
push
stos
pop
insl
arpl
stos
sbb
popf
push
xchg
inc
sub
les
dec
lcall
lahf
mov
dec
add
push
inc
loopne
mov
mov
adcl
cmc
mov
jns
pop
pop
pop
cmp
andb
je
jns
roll
imul
mov
mov
jne
push
xchg
lret
mov
xor
and
pop
jnp
pop
jl
leave
dec
ljmp
hlt
inc
sub
ss
fnstenv
sub
imul
xor
jno
cltd
adc
out
mov
cmpl
jecxz
add
daa
cmpsb
mov
xor
leave
ret
lret
jge
pop
mov
cmp
add
pop
cwtl
mov
out
leave
and
stos
sub
sub
in
inc
lahf
inc
outsl
xchg
mov
pop
push
fsubp
in
jl
ds
stos
andb
xorb
xor
lock
jl
push
mov
filds
xchg
or
pushf
push
shrl
xlat
add
sub
pop
fcomp
mov
rorl
xor
xlat
je
dec
int
addr16
mov
cltd
outsb
mov
add
fdivrs
push
fnstsw
and
pop
pop
pop
push
fs
nop
test
or
push
lods
xlat
jecxz
outsl
out
cltd
mov
or
mov
cmp
inc
mov
add
stos
or
push
pop
call
aam
jne
mov
mov
xor
jne
in
push
jns
adc
out
scas
xchg
adcl
cmpsl
pop
stos
cmpsb
push
xchg
xor
aaa
inc
adc
jbe
xor
or
sar
popf
adcb
push
jp
or
out
pop
push
repnz
aas
cmpsb
aad
sti
les
in
sbb
dec
mov
push
dec
mov
testl
cltd
shll
push
mov
sbb
jge
rclb
adc
dec
test
nop
cli
xor
movsb
cmp
les
sbb
xchg
mov
mov
loop
in
pop
mov
add
subb
adcb
pop
lea
push
mov
pop
das
repnz
sbb
hlt
mov
xor
mov
sahf
adc
and
adc
aam
push
jo
xlat
mov
aas
sbb
push
add
jmp
mov
and
jae
mov
dec
mov
lods
decb
push
push
jbe
test
pop
xchg
xchg
lock
or
ja
pop
mov
and
or
mov
cmp
shl
pusha
or
jp
ror
add
mov
sbb
mov
inc
xchg
outsl
es
dec
lods
int3
xchg
adc
popf
jno
pop
pop
pop
mov
adc
jecxz
cmpsl
or
xchg
out
lahf
imul
xchg
ror
adc
dec
pop
aaa
add
push
aam
pushf
lahf
insb
push
imul
mov
lcall
out
pop
or
xchg
das
out
push
pop
cmp
gs
addl
fs
fistl
dec
dec
jl
and
lea
push
xor
mov
call
dec
out
loope
ret
call
xchg
jmp
push
pop
lods
jno
cmp
mov
cld
int3
gs
push
jo
mov
cltd
mov
push
xchg
leave
gs
and
dec
lds
mov
sub
or
pop
mov
jle
mov
adc
iret
lahf
push
jp
xor
jno
xchg
xor
xor
outsb
repz
imul
repnz
cmc
out
xchg
ss
addl
outsb
bound
in
pop
pop
push
push
cmp
das
jae
shrl
xlat
push
inc
adc
mov
mov
dec
mov
pop
in
pop
pushf
jbe
sub
and
jno
xchg
test
repnz
xchg
jl
icebp
insl
cmp
shl
jge
mov
xor
notb
xchg
subl
popa
adc
bswap
lret
jg
out
fbld
mov
lds
sbb
sbb
mov
or
sbb
subl
jmp
cmp
push
rcrb
lcall
and
mov
mov
clc
lock
test
mov
lds
xor
xor
cli
add
call
and
in
imul
fbstp
jmp
mov
test
mov
cwtl
iret
pop
in
setnp
sbb
cmpsb
sbb
movsb
xchg
xchg
push
push
cmpsb
dec
test
addl
repnz
scas
sub
jae
push
and
mov
mov
inc
pop
add
arpl
pop
or
bound
inc
cmc
lret
xor
push
comiss
cmp
dec
mov
dec
fcoml
outsb
incl
filds
inc
or
enter
cld
or
mov
sub
fisttps
mov
dec
popf
test
ss
inc
bnd
jb
lods
test
and
out
cld
dec
dec
loope
pusha
sub
cmp
iret
inc
arpl
das
rcrl
sub
sbb
jne
popa
test
add
into
mov
xor
xchg
popa
jp
xchg
aas
mov
sbb
test
cmp
xchg
push
xchg
test
pop
scas
in
sbb
sti
test
in
mull
adc
xorb
ja
pushf
jne
mov
push
pop
imul
repnz
add
cmp
push
mov
add
xorps
xchg
or
aas
jae
test
mov
mov
or
fldcw
in
jmp
xor
insb
mov
call
jecxz
test
lret
popf
or
popa
and
push
dec
orb
dec
dec
shlb
pop
and
lock
or
or
mov
lods
jl
xor
xchg
outsl
or
notl
xchg
sbb
movups
xchg
add
cs
test
push
imul
dec
or
xor
dec
ljmp
mov
popa
push
push
popf
imul
mov
xchg
fwait
sbb
test
jne
inc
adc
gs
pop
mov
jns
lea
lret
mov
inc
ds
push
adc
lret
fstl
jbe
outsl
jle
jmp
gs
int
sbb
cmpb
cld
adc
std
jbe
dec
mov
push
ds
xor
pushf
push
std
mov
pop
jmp
scas
repnz
adc
jmp
gs
sub
movsb
xchg
dec
pop
adc
hlt
mov
adc
adc
aaa
mov
div
movsb
in
gs
cmp
pop
insl
popf
pop
in
or
sbb
lret
lret
xchg
lret
pop
fs
jmp
cmp
pop
xor
cmp
lea
aas
in
add
orl
arpl
xchg
es
push
scas
cmp
arpl
jne
xor
movsbl
add
push
push
adc
lods
add
jg
cmpsl
sti
cmp
jge
int
movsw
adc
std
xor
adc
and
xchg
loop
aad
push
xor
test
mov
xchg
stc
cmpsl
jo
shlb
addr16
xlat
sub
ljmp
pushf
or
xchg
cli
jmp
cltd
rcr
mov
lahf
jp
je
in
loope
jg
adc
aas
cmp
in
cwtl
in
lret
jns
xchg
add
push
lea
jle
loop
add
jb
mov
das
pextrw
sbb
add
sub
fildl
push
jle
cmp
dec
popf
push
clc
adc
sbb
sbb
push
mov
sbb
stos
lock
arpl
je
pop
in
xchg
clc
aam
adc
mov
insl
pop
ja
pop
or
push
or
scas
jecxz
idiv
pop
arpl
inc
mov
sbb
daa
test
and
sarb
popf
dec
sbb
mull
push
cwtl
mov
daa
cltd
push
addr16
adc
xlat
aad
iret
pop
icebp
cwtl
adc
sbb
cmp
movsb
popa
cmp
pop
data16
jno
call
or
enter
pop
test
clc
insb
xchg
gs
adc
adc
inc
push
push
cmpb
das
std
pop
pusha
pop
xchg
pushf
fbld
jb
xchg
xchg
or
pop
rcll
das
jne
and
xor
in
loope
and
push
xor
mov
push
loope
into
int3
lcall
sub
fs
sub
push
pop
lret
adc
int
or
test
pusha
pop
ds
enter
push
popa
or
push
jmp
xor
pusha
sub
sub
out
mov
push
mov
and
cmp
repz
loope
dec
aas
data16
clc
or
in
out
adc
jnp
mov
ja
adc
hlt
ficompl
or
int3
outsl
add
mov
aaa
pop
adcl
inc
adc
add
pop
test
sarb
rorb
push
into
mov
ret
push
into
gs
adc
adcb
inc
pop
jbe
mov
pop
xchg
sub
mov
xchg
nop
ss
cld
loope
incb
shrl
imul
rcrb
test
scas
sbb
jns
movsl
push
adc
xchg
xchg
lock
addb
ret
dec
ret
pop
xchg
pop
mov
fisubl
push
in
mov
dec
add
subl
sub
xlat
or
out
out
jne
cmpsl
popf
or
push
jb
inc
mov
test
jle
scas
stos
fstpt
repz
or
inc
int
add
sub
pop
push
iret
cmp
jp
int
daa
in
jmp
xor
push
scas
cmp
cli
xor
xchg
lcall
pop
andb
lret
jno
mov
ja
cmp
mov
pop
add
int
adc
mov
dec
sarl
mov
pop
xor
fnsave
mov
sub
xchg
fdivp
aam
push
lock
pop
fisubrl
push
cmp
fs
jne
hlt
cld
call
dec
jae
out
dec
testl
dec
decb
popl
or
mov
jg
out
repz
fninit
or
or
mov
jecxz
sbb
addr16
sub
jae
ss
and
pushf
add
cmc
adcb
enter
clc
pop
push
loopne
jmp
push
fcomip
inc
test
into
sahf
and
mov
mov
push
xor
jmp
xchg
mov
sbb
cld
jmp
pop
fwait
sbb
cmp
in
push
mov
jae,pn
xchg
and
push
in
jle
stos
fdivp
je
ja
xor
xchg
mov
inc
xchg
push
jp
clc
cmp
sub
xor
ja
inc
fwait
xchg
and
fsubrs
push
cmp
mov
mov
xor
cltd
push
sbb
stos
rorl
add
pushl
sbb
inc
stos
int3
inc
aam
inc
add
xchg
push
stos
xchg
not
rclb
icebp
in
ja
in
int
out
or
mov
fsubrl
aam
sarb
movsb
xchg
push
lret
cli
aas
lods
sahf
popa
dec
inc
bound
call
xchg
outsb
aam
into
arpl
fcmovnb
into
test
and
sbb
sub
stos
hlt
push
sub
test
mov
pop
push
lahf
xchg
outsb
jno
ss
orb
mov
notb
or
or
xor
into
mov
ror
cmpsb
test
xchg
int
insb
pop
rorl
subl
addl
fcmovne
add
jecxz
pop
es
sbb
pop
mov
jns
les
loopne
mov
mov
repz
mov
notb
xchg
jp
xchg
inc
adc
mov
lea
stc
add
outsl
or
and
or
loopne
push
jb
fcompl
jno
int
or
sti
xchg
add
jbe
insb
lods
mov
les
jnp
add
test
ja
insl
aam
sub
movsl
cmp
dec
add
inc
shrl
rcrb
pop
jg
xchg
call
je
das
sar
mov
sbb
sti
xchg
xchg
je
ret
xchg
and
mov
jl
mov
mov
inc
push
andl
pop
out
add
lret
cmp
pop
sbb
mov
cwtl
xchg
mov
or
jo
xor
ja
ret
lahf
pop
inc
clc
in
sbb
jns
add
mov
mov
shlb
cmpsl
call
aam
mov
xchg
xchg
push
mov
jl
lahf
bound
mov
mov
jno
xor
inc
xchg
mov
inc
xor
mov
int
and
pushf
ds
inc
sar
xlat
sbb
inc
lock
mov
cli
push
insb
xchg
mov
and
test
inc
sub
out
cmp
stos
shll
xchg
mov
pop
inc
xor
lods
adc
scas
jle
insl
pop
addr16
dec
rcrb
mov
xchg
add
inc
jmp
lret
ficoms
or
push
push
mov
mov
sub
and
stos
lods
xchg
mov
mov
xor
inc
cltd
cmp
cld
pop
mov
or
cmp
pop
or
rol
xchg
fistl
and
nop
fwait
sahf
push
mov
ljmp
xchg
fstl
and
adc
rorl
lcall
sbb
popf
aam
mov
btc
pop
pushf
jle
hlt
push
jnp
cmp
pushf
mov
pop
cwtl
jl
jle
adc
cs
ja
jb
mov
in
or
std
sub
shll
cmp
iret
mov
scas
mov
mov
test
imul
repz
stos
js
jmp
hlt
test
or
jmp
jbe
mov
outsb
cmp
xchg
or
stos
add
xor
punpckldq
cmpsb
out
add
fdivs
mov
and
adc
jno
adc
fwait
push
js
mov
pushf
inc
jge
inc
mov
mov
fcomi
loopne
jne
push
mov
hlt
fsubrs
fldt
push
mov
and
loope
inc
stos
inc
lret
fisubrl
outsb
inc
inc
mov
out
ss
or
stos
addr16
gs
daa
ja
xchg
xchg
in
fistpll
and
push
jno
dec
xchg
repz
and
and
xchg
daa
mov
mov
mov
lods
sub
inc
rcl
dec
movsl
jnp
cmp
cmpsl
dec
jle
inc
das
xlat
fists
andb
es
xor
or
mov
fincstp
stos
mov
xchg
rorl
leave
enter
mov
add
out
scas
and
clc
shll
icebp
add
out
push
sti
scas
notb
mulb
jge
push
mov
es
leave
jecxz
jno
jmp
jbe
decb
pop
dec
or
mov
sbb
orb
call
mov
outsb
gs
in
dec
dec
xor
add
dec
cmp
mov
add
call
jbe
or
stc
push
push
sub
dec
jbe
lret
pop
js
in
jmp
sti
add
daa
out
arpl
int3
cmp
adc
push
shrl
rcll
pushf
lret
enter
adc
fisubrs
pop
or
adc
sti
mov
stos
adc
xor
dec
mov
lods
sti
jg
sbb
js
or
pop
jl
pop
movsl
je
sub
and
lret
leave
mov
fldcw
lock
iret
mov
xor
push
push
aaa
sbb
mov
sar
stos
sub
inc
sub
gs
into
pop
and
jp
mov
cltd
or
adc
cltd
mov
ficompl
pushf
repnz
repz
in
fcoms
adc
bound
lahf
and
addb
xor
mov
lret
rorb
mov
fmul
push
pop
nop
or
mov
cmp
pop
jne
fsubr
mov
adc
xchg
dec
and
pop
pop
gs
loop
in
and
sbb
mov
lret
pop
dec
pusha
cmp
inc
aad
xor
ljmp
dec
push
pop
sub
sti
sub
inc
xchg
mov
mov
gs
push
out
adc
pop
mov
and
cmp
rcll
sub
test
in
mov
sbb
push
pop
dec
arpl
fnstenv
jno
dec
mov
adc
cli
loop
inc
or
ret
aad
decl
add
ja
jno
mov
clc
je
pop
lock
xor
jecxz
or
fdivs
mov
gs
hlt
xchg
jg
push
jns
jo
roll
imul
int3
lods
mov
cli
out
pop
cli
out
jg
adc
xor
gs
inc
cmp
cld
test
in
and
vpunpckhqdq
mov
pop
call
push
addb
pop
push
aaa
jno
out
add
push
rolb
and
mov
xor
out
push
push
cltd
and
mov
mov
movsb
mov
adc
xchg
inc
jns
mov
xchg
jp
push
popa
fisubs
stos
scas
mov
push
loop
push
daa
arpl
pop
sbb
push
dec
jo
pop
adc
sar
pop
mov
inc
test
jo
ja
fwait
and
test
push
outsl
mov
jle
lret
xchg
sti
loop
cmc
in
mov
push
sti
pop
popa
cmovs
mov
mov
bound
or
xlat
insl
rcl
aad
dec
mov
push
pop
inc
mov
rol
sbb
ds
lahf
and
mov
jmp
fldl2e
mov
popf
or
lods
sbb
outsb
inc
mov
stos
add
adc
jne
push
mov
jle
je
jl
cmp
pop
dec
aam
push
repz
xor
aaa
scas
push
roll
and
dec
loopne
or
xor
inc
sub
icebp
dec
lcall
ljmp
xor
dec
bnd
repnz
xchg
mov
push
adc
push
scas
and
xchg
dec
fcmovne
add
in
or
mov
pop
dec
lret
xchg
jae
addr16
lods
inc
pop
les
pushf
mov
sti
mov
ds
or
test
dec
push
cmp
or
stc
cld
jmp
push
mov
sub
lods
js
pop
and
sarl
mov
add
lahf
xchg
and
ret
add
cmp
mov
jbe
mov
and
dec
fwait
dec
push
pop
mov
addr16
xor
cmc
iret
inc
jl
sbb
fnstcw
jl
jg
mov
lock
fisttpl
aad
mov
push
ljmp
lds
dec
cmp
xchg
mov
push
rorl
sbbl
das
jo
or
das
bound
daa
leave
dec
mov
inc
sub
fcmovb
scas
xor
scas
pop
cli
push
in
mov
mov
mov
mov
xchg
inc
xchg
rolb
xor
sti
xchg
mov
lahf
ja
inc
pop
dec
mov
incb
or
mov
mov
outsb
adcb
mov
fsubr
out
ficoms
lods
movsl
mov
rcrl
xchg
add
xchg
xor
adc
stc
jae
sub
jmp
jmp
adc
sub
mov
sti
pop
popf
fwait
sahf
mov
scas
rol
notl
testb
pusha
out
or
aas
pop
mov
mov
inc
pop
push
arpl
lcall
ffreep
mov
cmp
or
push
xor
icebp
mov
scas
jmp
into
and
mov
data16
or
pop
je,pt
pop
xchg
and
jge
sbb
add
or
pop
sub
fdivs
iret
add
je
push
cmp
pop
testl
xor
mov
iret
fcompl
ret
push
mov
hlt
or
ror
cmp
cmp
inc
cwtl
popa
mov
and
es
dec
fcom
and
dec
sbbl
push
push
es
pushw
xchg
lret
imul
leave
ja
mov
mov
lcall
cmp
inc
daa
into
fidivrl
addb
jmp
push
cmp
lods
int3
cli
sub
scas
test
xchg
out
hlt
fdivs
rolb
mov
sti
mov
stos
lods
popf
mov
sbb
movsl
in
addr16
push
test
inc
in
push
xchg
push
into
sbbb
sbb
out
mov
lods
rorb
push
and
jnp
push
pop
arpl
push
test
test
icebp
jmp
mov
pop
and
xlat
xor
les
stos
jl
and
jo
push
insl
or
cmp
lret
das
out
cli
ffree
leave
stc
push
xchg
push
stc
ja
sbb
mov
clc
inc
sub
add
and
setne
and
sti
adc
dec
sbb
fdivs
push
scas
inc
imul
sbb
movsb
imul
add
mov
mov
lret
push
gs
or
outsl
andb
je
or
sarb
or
subb
test
das
lahf
push
outsl
sti
rcrb
shrb
insl
in
sub
cmp
ss
inc
imul
shll
imul
mov
fwait
std
xor
xor
das
xlat
pop
ljmp
fdivrp
icebp
rclb
push
pop
enter
or
mov
lret
negl
pushf
filds
adc
idivb
pop
lret
push
inc
adc
sbb
jp
mov
jae
sbb
pop
sbb
inc
cld
int3
bound
orb
sbb
call
arpl
mov
into
mov
stc
mov
inc
fldl
dec
xor
scas
sbb
int3
daa
enter
out
cmpsl
cwtl
cmp
jecxz
lea
xchg
out
or
stc
and
pop
movsl
int3
add
push
ret
shrl
test
out
xor
jecxz
loope
lahf
movsl
inc
mov
pop
add
jle
loop
lret
mov
xchg
lea
fidivrl
imul
or
lcall
xchg
jnp
xchg
cmpsb
or
xor
adc
inc
aaa
pop
mov
pop
cmp
xchg
imul
lock
mov
movsl
cmc
jl
cli
sbb
test
sbb
or
repz
cwtl
jno
inc
andps
add
cmp
ja
lahf
push
bnd
rclb
xchg
cmp
mov
xchg
cmp
in
and
cmpsl
xor
jecxz
movsl
inc
data16
std
in
adc
dec
inc
cmp
mov
mov
add
loope
mov
adc
scas
outsb
dec
ljmp
and
and
xor
pop
test
sub
adc
sbb
shlb
or
xchg
mov
shrb
repz
dec
jle
xor
movsb
inc
mov
movsb
test
je
ja
mov
mov
xor
mov
mov
std
xchg
pop
pushf
adc
xchg
pop
movsl
stc
pop
outsb
mov
xchg
sub
mov
xchg
test
cmp
stos
shrb
into
add
jmp
clc
mov
and
loopne
es
clc
jge
cwtl
xor
lods
push
jns
lock
cli
sbbb
andb
leave
sub
cmp
push
jge
lods
or
int3
push
lahf
mov
xlat
sbbl
mov
pop
mov
daa
test
out
mov
loope
xchg
adc
outsb
aas
add
fld
adc
lcall
xchg
aas
int3
and
cmp
leave
adc
lret
cltd
pop
fcompl
push
mov
out
les
pop
or
push
dec
xor
imul
jecxz
and
inc
je
adc
lcall
pop
mov
jno
lock
mov
outsl
xchg
mov
enter
sbbb
stos
pop
lahf
add
jle
repnz
jne
fstps
jg
or
add
push
mov
mov
jg
into
mov
inc
bound
aaa
into
movsb
dec
jecxz
cmp
jno
call
mov
and
sub
pop
stos
sub
cltd
fwait
lods
lret
pop
push
mov
fisttps
imul
mov
inc
out
fs
mov
or
call
dec
dec
or
out
aad
ljmpw
xchg
push
mov
out
out
jg
lcall
imul
add
pop
mov
hlt
cmp
fwait
test
cmp
in
adc
sahf
cmp
in
push
sbb
cmpsl
and
lcall
mov
and
mov
clc
sub
shll
mov
dec
or
cmp
fwait
push
icebp
test
cli
jbe
hlt
mov
sbbb
jbe
xchg
or
mov
mov
mov
and
sti
fmull
mov
jb
push
aaa
xor
imul
inc
dec
push
xchg
cs
xor
mov
popf
add
stos
loop
jge
pop
jnp
push
or
outsl
jns
cwtl
in
sahf
cmp
mov
jbe
fsub
adc
xorl
rorb
cmp
rcrl
loop
shlb
mov
mov
push
ud2
jecxz
aam
and
sub
and
add
pop
inc
xor
test
mov
mov
hlt
add
mov
mov
test
xchg
adc
add
pop
jo
inc
int3
dec
add
cmp
add
xchg
std
and
fsubs
xchg
ja
sub
xor
in
sub
sub
cmpxchg
lret
cmpsl
push
sbb
add
notb
inc
add
mov
call
ret
jno
jl
jae
mov
mov
insb
hlt
rol
decl
inc
or
cmpsl
lahf
scas
fcomip
xor
popf
dec
pop
iret
lcall
mov
je
fs
jns
jle
xchg
mov
cli
ja
xor
sub
sbb
insl
mov
leave
sub
xor
popf
ds
mov
fsub
mov
in
jbe
ds
xchg
inc
and
inc
sub
shrb
fs
pop
leave
in
popa
cmp
icebp
dec
push
rcrb
or
mov
xchg
push
mov
cmp
pop
sub
in
clc
sub
push
mov
pusha
lret
nop
lahf
push
cld
cmp
or
or
pop
sub
loope
push
push
jo
sahf
push
arpl
dec
inc
mov
mov
jb
hlt
push
ja
sbbb
movsl
rcr
sbb
into
vfrczpd
push
add
sbb
jnp
and
cld
orl
mov
enter
int
addr16
jge
cmp
std
test
insl
ret
fcoms
mov
xlat
fidivl
mov
xor
gs
popa
pop
jo
sti
add
add
fdivrl
in
shr
jne
push
in
ss
mov
popa
jns
xchg
loopne
xorl
cltd
or
fidivrs
hlt
cmp
mov
sub
xor
pop
test
clc
stc
scas
test
jae
lods
js
orl
daa
in
xchg
lods
in
sub
ret
pop
mov
mov
add
fldt
or
fldcw
adcl
push
sti
lods
and
sub
sahf
push
jo
and
adc
fsubs
push
adc
fldt
xchg
mov
adc
sub
adc
cmp
pop
out
mov
dec
shr
shrd
dec
mov
xchg
mov
pop
daa
mov
aas
add
movsb
adc
adc
in
arpl
out
mov
lret
cmp
pop
call
ljmp
ljmp
inc
sahf
mov
ja
adc
daa
add
sub
xor
add
loope
dec
hlt
sub
cmp
bound
xorb
roll
and
sti
jb
jb
vpminsw
rcrl
cmc
das
pop
inc
push
call
pop
xchg
mov
sub
filds
aaa
mov
mov
sub
mov
lea
ficoml
xor
fisttpll
data16
pop
xchg
rorb
js
ret
lahf
mov
repnz
les
inc
subl
pop
mov
js
ss
pop
or
icebp
jmp
xchg
and
jmp
and
outsl
std
or
lret
popa
test
mov
or
adc
cmp
jae
adc
pop
mov
mov
inc
jb
and
mov
pop
dec
mov
or
aad
xor
sub
mov
in
lds
push
fcmovb
and
xchg
ficompl
jl
inc
cltd
sarb
lods
stc
sub
xchg
sub
push
xchg
add
dec
cwtl
cmpl
mov
add
mov
jnp
mov
mov
pop
fstps
add
lret
lret
jge
mov
dec
in
and
mov
inc
mov
sti
in
adc
add
into
push
es
stc
or
pushf
addr16
das
outsl
sub
pop
jo
push
mov
jg
xchg
mov
mov
jnp
insb
test
dec
xchg
push
aad
aam
sub
adc
cmpsb
xchg
mov
mov
ret
lds
fcompl
out
sub
dec
cld
enter
sub
mov
push
daa
mov
dec
icebp
cli
mov
scas
lret
jae
sbb
imul
cli
shrb
lea
loope
adc
addl
insl
dec
xchg
or
dec
lds
jp
jecxz
dec
cmpsl
leave
push
jmp
ljmp
cmc
cli
push
leave
add
add
pushf
dec
pop
pop
xchg
or
jecxz
mov
pop
testl
rep
mov
sbb
fcoml
jmp
popa
pop
scas
add
lret
xchg
push
lcall
cmpsl
push
test
xor
sbb
mov
and
push
xor
or
addb
ja
in
mov
adc
mov
sub
lahf
mov
stos
xchg
iret
mov
pop
mov
mov
fidivrl
inc
push
std
mov
inc
lret
push
mov
jo
stos
cmp
fsubrs
adc
daa
jp
inc
adc
adc
loopne
icebp
mov
js
push
mov
andb
mov
fdivs
jp
push
jecxz
movsb
inc
xor
js,pn
mov
filds
xlat
xchg
imul
cmp
out
jne
push
test
or
xlat
mov
sub
jo
popf
cmpsl
inc
cwtl
xor
jmp
fbld
pop
iret
pop
js
nop
xlat
and
clc
cmpsb
push
mov
leave
cs
adcb
xchg
mov
jo
jl
sti
fidivrs
jmp
mov
in
xchg
out
ja,pn
sub
jmp
mov
popa
repnz
mov
bnd
inc
iret
adc
cmpsl
lods
pop
jbe
je
neg
push
mov
and
adcl
xor
inc
adc
movsl
mov
dec
mov
sbb
incb
test
data16
adc
pop
subl
sub
rcr
out
mov
add
inc
lods
aas
xor
clc
sub
push
into
sub
fs
xchg
out
sbb
ja
stc
fldcw
sbb
les
add
jae
lea
mov
daa
or
mov
mov
cmp
xchg
inc
sub
push
stos
int3
mov
xchg
and
xchg
xchg
pusha
pop
adc
sbb
push
repz
pop
out
mov
scas
xchg
sub
push
mov
or
lock
ficoml
cmp
jg
pusha
or
fstpl
cmc
cmp
add
jbe
jae
xlat
test
push
cmpsb
mov
lds
out
test
mov
mov
and
pop
jecxz
add
test
insl
data16
push
add
add
sti
adc
dec
mov
dec
gs
pop
dec
xlat
jl
mov
movsl
pop
rcrl
ja
xchg
cs
dec
sahf
cmpsb
fsts
repz
or
xchg
mov
lahf
repz
enter
dec
js
rorl
stos
dec
in
fwait
mov
mov
ret
sub
jne
dec
mov
in
cmpsl
pushf
sub
sbb
mov
xchg
sub
cmpsl
push
and
mov
cmp
jbe
cli
xorl
cltd
push
repnz
cli
xor
imul
stc
sub
mov
sub
jns
mov
adc
push
and
xchg
repnz
aaa
mov
push
in
mov
and
push
lods
add
xchg
in
mov
imul
push
rorl
adc
inc
mov
inc
sub
jl
fs
xchg
pop
mov
sub
loope
cmp
mov
push
push
int
std
dec
mov
fcmovnb
test
cmp
dec
pop
mov
xor
adc
fstl
cmp
xchg
rcll
sarl
pop
xchg
push
sub
or
adc
stos
push
loope
aam
inc
push
in
push
les
adc
xchg
cmp
jae
fisttps
pop
in
ret
or
in
mov
clc
and
jae
aad
xlat
shrb
adc
loopne
in
mov
mov
movsl
pop
mov
jnp
pop
stos
jns
ja
mov
stc
call
cmp
mov
in
sbb
lods
stos
jmp
js
cli
or
pop
mov
pushf
lcall
je
insl
add
test
sbb
in
mov
cmp
mov
pusha
mov
cli
movsb
xchg
pop
fs
popf
lahf
pop
pop
or
mov
lahf
push
xor
ret
or
push
scas
pop
dec
dec
test
mov
or
inc
test
loopne
enter
fdivl
mov
cmp
pop
fs
fcomi
push
cmp
cmpsl
mov
mov
cmpsb
fisubs
sbb
xor
aam
mov
ss
jbe
aam
push
lret
in
and
jb
stos
imull
or
les
lea
int
test
mov
cli
mov
andl
jecxz
push
push
adc
pop
call
fnstsw
sbb
push
cmpsb
fwait
rcl
jg
mov
dec
js
or
rcll
pop
inc
lock
pop
mov
adc
pop
lock
lea
push
xchg
scas
shl
jp
imul
pop
ret
mov
mov
rcl
das
push
xchg
cmp
std
jb
sbb
test
sub
ja
pushf
mov
aaa
addr16
mov
insb
and
outsb
hlt
testb
cld
and
cli
push
sub
adc
mov
into
or
lret
dec
jb
imul
mov
and
imul
pop
cmpsb
out
outsl
sub
adc
insb
popa
ret
stos
adc
mov
sub
pop
rorl
mov
and
cmp
pop
xchg
sbb
hlt
mov
mov
mov
dec
inc
mov
movlps
xor
cmpb
push
and
call
leave
stc
test
mov
mov
or
push
fmull
pop
and
pop
or
fidivrs
dec
cli
das
mov
mov
inc
sti
aad
lea
out
xor
xchg
jae
or
roll
sub
adc
orb
sbb
test
scas
clc
sahf
and
pop
popa
rcrb
add
xor
in
dec
ja
idivb
stc
in
adcb
aas
mov
in
pop
add
mov
test
sub
in
mov
daa
lock
sbb
mov
fdivrs
out
push
addr16
int
cld
xchg
add
or
jae
scas
inc
test
scas
shlb
xchg
jo
stos
neg
pushf
call
mov
xor
loopne
or
xchg
movl
cmpsb
sarb
adc
push
xor
xor
xchg
push
sahf
popf
inc
jle
cmp
xchg
lea
addr16
pop
mov
inc
out
xchg
mov
shr
inc
xchg
movb
lret
push
fcmovnb
sbb
pop
ja
movsl
add
test
outsb
mov
add
lret
lret
or
pop
int
push
mov
or
xchg
jp
xchg
pop
aas
cld
cmp
dec
dec
add
rcl
mov
xchg
dec
add
popa
std
addr16
sub
lcall
arpl
mov
add
clc
add
dec
xor
add
outsb
pop
inc
ds
xor
sbb
mov
ret
sbb
mov
push
iret
jnp
cmp
push
adc
cmp
mov
pop
movsl
shrl
pop
cs
or
push
shlb
xor
xlat
into
mov
pop
push
cwtl
jno
add
out
lds
dec
in
es
test
andl
jle
sbb
jmp
sub
xchg
cmp
adc
bnd
jnp
push
cmpsb
dec
jb
cltd
mov
mov
sarl
inc
xchg
mov
jb
dec
cmpsl
test
fdivrl
int3
or
or
add
fs
loope
dec
push
xchg
mov
bound
filds
mov
sub
xchg
adc
jo
push
repnz
xchg
mov
pop
mov
les
imulb
cltd
xchg
iret
in
or
cmpsb
in
jno
push
jb
ret
jp
push
pop
mov
movsb
dec
jo
int
jne
push
xor
mov
adcb
xchg
cmp
mov
sub
pminsw
cmp
xchg
inc
push
pop
out
lods
push
out
sbb
or
cld
pop
ds
dec
jle
push
rcr
ds
jnp
or
inc
jne
ficompl
ficompl
add
dec
out
and
jmp
xchg
clc
stos
jmp
dec
fs
test
lds
xchg
dec
lods
int
shlb
cld
pusha
jp
cmp
insl
enter
mov
pop
xor
scas
or
test
xlat
mov
je
mov
scas
mov
push
outsb
sub
lahf
lahf
push
inc
mov
jno
cwtl
push
test
mov
fwait
shr
imul
lret
mov
ja
mov
cli
or
xlat
shlb
mov
push
push
jge
stos
inc
and
mov
outsl
pop
aaa
sarl
and
popf
jmp
pop
addr16
popa
inc
push
mov
xchg
cmp
repz
test
popf
mov
ja
addr16
xchg
lea
out
mov
adc
xchg
shl
pop
iret
sahf
lods
dec
push
or
xorl
mov
jbe
clc
outsl
inc
xlat
jnp
cmp
in
ret
dec
xchg
push
adc
dec
mov
loope
fwait
push
popf
adc
dec
rcl
mov
pop
rep
aas
and
loop
out
mov
lds
wbinvd
xorl
testl
rol
push
jle
es
imul
fcomp
enter
jecxz
or
sub
js
arpl
xorb
mov
adc
add
mov
aad
add
test
pop
mov
inc
dec
push
inc
popa
and
sbbl
xor
jnp
push
xor
rcl
lcall
pop
jle
rcr
mov
ljmp
imul
add
mov
sub
jp
push
inc
es
aaa
mov
xor
mov
mov
into
pop
jp
mov
cmp
scas
sub
cmpsb
add
mov
sbb
xchg
pop
xor
add
stos
mov
dec
push
pop
ljmp
loop
ds
mov
xchg
inc
or
add
mov
sub
sub
add
iret
push
mov
outsl
orl
pop
shlb
jg
popa
inc
scas
add
gs
push
cmp
pop
jl
movsl
adc
cmc
jmp
push
sub
xchg
add
or
negl
lea
or
into
lods
push
out
jmp
cld
xor
xor
pop
add
cwtl
std
pusha
inc
bsf
and
cmp
push
sbb
into
sub
jl
cmp
fwait
jne
or
mov
xor
cltd
fists
lcall
cmp
out
rep
in
and
xchg
mov
or
sub
cli
addl
pop
int
push
sub
or
jl
pop
int3
outsl
xchg
push
inc
or
pusha
arpl
jo
mov
jecxz
inc
cmpb
enter
or
push
leave
fwait
or
adc
bnd
push
aas
scas
rclb
mov
jp
jb
iret
cwtl
xchg
sbb
lret
out
jb
xchg
mov
out
xchg
push
pop
cmc
push
nop
jg
pop
push
dec
jne
xorb
inc
or
lds
into
mov
repz
adc
pop
insb
or
xchg
mov
sub
adc
fcoml
icebp
mov
lret
scas
cmp
bound
push
fldl
mov
inc
push
mov
xor
and
scas
cwtl
and
fiadds
sbb
mov
loope
mov
jg
pop
push
pop
mov
cmp
lds
and
iret
push
mov
lcall
mov
aad
in
mov
orb
cmp
les
sub
out
and
mov
push
rolb
loop
lods
shl
push
inc
fsts
mov
rorb
cmp
adc
mov
out
xor
pop
int
popf
aas
stos
mov
stos
ja
mov
stos
test
pop
adc
mov
push
dec
sbb
jle
lret
pop
aaa
push
cmp
das
dec
hlt
dec
xchg
xor
in
cmp
inc
push
xchg
ret
fdivrs
pop
xchg
addr16
cmpsb
and
iret
std
pop
add
lret
scas
mov
pop
or
adc
dec
jg
dec
or
jle
adc
lods
fwait
push
sbb
shl
fsts
test
inc
xor
push
add
arpl
cmpsb
or
xchg
sbb
outsl
in
insl
dec
inc
jnp
das
mov
adc
repz
lock
cmp
mov
stc
lock
mov
ficoms
add
xorl
adc
cld
inc
pop
sbbl
popf
in
mov
or
xchg
cwtl
sbb
les
mov
adc
mov
cmpl
cmpps
and
mov
cmp
xchg
cltd
or
adc
add
sub
mov
test
xchg
sbb
sti
xor
inc
lods
mull
imul
insl
ljmp
or
jg
shrl
sbb
adc
rorb
jno
add
jae
mov
mov
in
ds
mov
mov
addr16
cmp
adc
popf
dec
pop
push
dec
push
pop
push
divb
subb
or
or
push
jmp
pop
add
sbb
or
dec
add
movsb
xor
sub
enter
dec
fiadds
xlat
lcall
std
fcomp
pop
fmull
pop
jae
pop
push
insl
or
add
out
pop
mov
in
fisubrl
jmp
in
shll
add
arpl
data16
stc
movsl
mov
mov
mov
add
fistps
arpl
dec
leave
mov
xor
add
call
xchg
dec
and
cmpsl
call
je
push
add
fcom
cwtl
imul
and
adc
mov
cmp
push
xchg
leave
orb
sbb
movsb
out
xor
or
rolb
aam
sub
or
int
push
cmpsl
adc
xchg
jb
testb
sub
or
rep
jg
xor
adc
push
mov
mov
cmc
dec
fstpl
inc
inc
mov
adcb
pop
test
in
scas
ja
push
addr16
out
and
mov
test
pop
mov
inc
mov
adc
es
mov
cli
mov
jnp
loopne
add
ficomps
icebp
aas
cli
rcrb
xchg
pop
out
lret
adc
push
scas
jb
mov
sbb
inc
push
outsl
out
pop
stc
jnp
dec
mov
xchg
pop
jl
xor
or
sahf
repz
fs
iret
inc
enter
test
and
out
rcrl
pop
add
mov
add
inc
mov
xor
arpl
and
outsl
nop
bound
xchg
stos
int3
sahf
cmc
push
movl
sub
sbb
jl
aad
dec
and
in
sbb
in
mov
jo
xor
jo
lcall
push
cmp
push
push
mov
mov
aam
adc
mov
dec
pop
rolb
std
xlat
out
jle
push
cmp
pop
or
mov
movsl
lret
xor
in
push
repnz
stc
jns
cmp
cmp
add
mov
or
xor
outsb
pushfw
cmpsl
insl
loopne
and
rol
js
sub
addl
leave
out
andl
sub
cmp
or
push
rcrb
jae
push
mov
enter
pop
mov
jle
lret
movsl
bound
pusha
xchg
cmp
add
dec
or
inc
popa
lret
dec
push
push
addr16
pop
inc
into
rolb
or
xor
rcr
nop
lret
fcmovnu
rcll
icebp
jecxz
mov
lock
inc
sbb
aad
pop
adc
clc
or
jne
add
js
cmc
sbb
std
imul
mov
jne
bound
imul
rcrl
fs
push
pop
faddl
inc
cmp
inc
mov
pop
cwtl
cmc
mov
orl
test
int3
in
mov
jg
into
or
iret
in
popf
pushl
xor
mov
pop
mov
inc
mov
test
push
out
fistpll
call
stos
jns
push
mov
and
leave
xchg
cmp
pop
lcall
out
mov
adc
mov
adc
cwtl
dec
out
or
data16
loope
jbe
int3
mov
sbbl
scas
push
and
fistpll
sbbb
sti
sarb
nop
push
or
push
loop
jo
pop
shlb
cmp
mov
loopne
leave
pop
icebp
iret
test
test
es
aad
repz
push
mov
gs
stos
sbb
xor
pop
pop
loop
or
sbb
ja
inc
lcall
lahf
jmp
add
test
int3
pop
mov
mov
cmp
add
pop
xorb
out
hlt
es
lods
loopne
sub
call
mov
jns
out
aas
lcall
jnp
rorl
dec
stc
inc
data16
sti
test
nop
mov
or
mulb
mov
fdivs
mov
aas
mov
jecxz
inc
das
mov
jnp
or
xchg
in
cmp
mov
jb
imul
fdivrs
push
fldt
mov
and
add
inc
xchg
inc
mov
jns
je
insl
lds
cmp
pop
jbe
push
pushf
or
shr
mov
out
fcmovnb
std
xchg
std
repz
sbb
pop
ja
cs
dec
mov
xchg
and
dec
mov
lret
movsl
sbbb
in
stos
adc
push
sub
scas
inc
xlat
mov
inc
stos
adc
push
mov
fildl
sbb
xchg
pushf
mov
mov
inc
mov
lahf
xlat
fdiv
stos
jge
movsb
scas
adc
sarl
dec
pop
add
cmp
lcall
add
imul
mov
add
cmp
push
pop
dec
das
idivl
fadd
loop
rorl
pushf
pusha
cld
rcrl
fs
shll
sbb
or
mov
out
mov
mov
xor
add
nop
movl
shrb
gs
adc
mov
stc
pop
in
fimull
adc
add
mov
std
dec
test
int3
sahf
jb
int3
out
xchg
or
daa
daa
mov
aad
sbb
dec
sbb
iret
repnz
ret
or
push
das
jg
cmpsb
lods
mov
sahf
repz
xchg
lods
and
fldenv
inc
das
sub
imul
sbbb
inc
and
in
dec
shll
popf
pop
mov
sbb
hlt
push
mov
jecxz
or
inc
in
mulb
ffree
push
and
leave
mov
cmp
shrl
aam
in
dec
stos
add
sahf
sbb
dec
mov
push
pop
push
sub
dec
pop
mov
jne
dec
mov
jae
push
jb
arpl
or
xlat
pop
decl
int3
xchg
fistps
and
push
pop
inc
jbe
das
cli
mov
aam
add
int3
ret
pop
lcall
enter
cli
mov
cld
pop
into
stc
cmpsb
inc
loop
and
ljmp
std
jne
cmp
jle
std
ja
cmpsb
dec
mov
and
rcrb
fnstsw
addr16
cmp
negb
ret
push
mov
enter
mov
pop
bound
xchg
repnz
dec
pop
jmp
in
movsl
mov
dec
pop
or
sub
lods
and
sbb
lods
leave
loope
repnz
fwait
pop
sbb
mov
pop
rclb
mov
jl
fxch
mov
push
enter
or
lock
mov
dec
lret
push
out
iret
aas
shrb
sbb
adc
fwait
jge
cwtl
daa
jo
stos
shrl
mov
or
movsb
push
orl
fstpt
rclb
ljmp
push
xor
cmp
cmp
test
adc
lcall
cmc
sub
into
pusha
mov
cltd
ja
sub
enter
loop
mov
jmp
mov
icebp
shr
ret
fcompl
push
adc
and
mov
es
fistpl
xor
adc
jl
inc
mov
fdiv
push
add
add
jmp
icebp
fldl
movsb
ret
dec
leave
jae
sbb
adc
inc
pusha
and
mov
dec
xor
cmp
pop
jae
xor
fldenv
or
mov
mov
xchg
adc
mov
mov
mov
lret
mov
push
lea
pushf
pop
push
push
rorl
mov
int3
insb
or
daa
clc
sbbl
dec
push
rcll
or
bound
stos
cwtl
lea
or
scas
movsb
pop
sub
fcoms
cli
mov
xchg
sub
xchg
mov
cmpsb
sbb
nop
ficoms
call
push
movsb
xor
push
inc
popf
aad
dec
cmpsb
mov
test
mov
push
inc
ds
ds
mov
das
into
bound
jle
fsubrl
and
and
ds
int
lea
or
xor
mov
push
lahf
pop
jb
xchg
pop
jg
xor
adc
adc
push
jl
lods
or
and
ja
call
xor
adc
pop
test
push
ss
xchg
fnstenv
and
stos
push
mov
inc
clc
lock
or
outsl
rcll
pop
or
imul
gs
or
inc
cmp
cmp
xchg
dec
lea
rolb
scas
and
cmp
mov
movb
xchg
sub
lock
mov
std
pop
push
addb
daa
fidivl
es
in
shll
inc
jl
xchg
stc
test
adc
push
rorb
or
sbb
das
cmpsl
outsl
fdivrp
mov
out
mov
dec
les
dec
xchg
sbb
enter
xchg
mov
stc
in
jo
bound
sbb
mov
add
adc
dec
sbbl
and
out
outsl
mov
out
aad
sub
sbb
sub
and
push
decl
jl
adc
imul
cmp
xchg
outsl
or
out
mov
push
jae
int3
inc
movsl
out
mov
adc
pop
shlb
jno
cltd
ficomps
scas
cmpsb
dec
dec
mov
jo
shlb
dec
xchg
mov
and
mov
mov
leave
pop
hlt
test
test
in
cmc
dec
std
mov
pushl
cld
xor
aaa
lea
mov
sub
jp
push
or
and
rcr
add
push
mov
popf
daa
lods
push
xor
ucomiss
inc
mov
jmp
cmp
hlt
stos
aas
lahf
sbb
popa
or
fmul
enter
sub
or
pop
and
xor
out
and
ret
add
cmpsl
or
xchg
stos
adc
push
or
mov
bound
sub
jo
sbb
lods
mov
lret
fcomip
cmp
push
cmp
inc
aaa
ret
out
mov
xchg
pop
lcall
pop
fdivrs
xorl
jnp
rcrb
outsb
test
repz
cmpb
aad
imul
loope
lcall
inc
out
lea
aam
or
inc
orl
push
shlb
xchg
ret
fcompl
xchg
inc
push
rolb
xor
mov
mov
cmpl
bound
pop
loope
pop
jmp
xchg
ja
frstor
nop
flds
in
inc
pop
fisubl
in
or
aaa
inc
and
jge
jecxz
cwtl
cmp
pusha
jbe
adc
mov
adc
call
aaa
ret
test
repz
push
scas
add
push
adc
mov
adc
movsl
pusha
lret
popa
or
and
adc
xchg
jno
fsubs
sub
or
xor
shlb
cmp
stos
sbb
ret
test
push
push
in
mov
jns
pushf
out
dec
sbb
dec
mov
lods
mov
dec
scas
ret
mov
mov
in
mov
jl
ret
leave
push
xor
std
inc
pop
and
sub
inc
cmpsl
int3
pop
xchg
ljmp
pop
stos
pop
rorb
cwtl
jbe
sti
cltd
xchg
push
ljmp
iret
pop
mull
iret
roll
pop
pop
ljmp
inc
loopew
leave
das
or
out
fstps
fbstp
adcb
outsb
inc
push
lcall
imul
pop
or
or
lea
push
inc
daa
or
add
outsl
lds
loopne
and
gs
prefetcht2
jmp
in
mov
push
push
xor
loopne
pop
jb
outsb
mov
lock
mov
pop
jmp
add
mov
push
nop
sub
jmp
adc
sub
outsb
xor
jge
xchg
and
pop
push
inc
mov
xchg
cltd
mov
push
xchg
sbb
xor
pop
dec
xor
shrb
mov
shr
lret
mov
repnz
mov
push
rorl
cli
mov
pop
js
sub
call
add
xor
fstpt
cwtl
rcrl
stos
or
clc
rcll
mov
sbb
xchg
out
jmp
lods
add
inc
nop
or
lods
bound
movsl
xchg
testb
movsb
scas
xchg
and
out
and
jge
mov
testb
pusha
das
xlat
pop
mov
es
push
mov
sbb
mov
mov
sbb
or
dec
cmp
ss
fsubr
xchg
enter
lret
lods
pop
push
movsb
lret
jmp
adcl
cmp
bound
test
and
ficoml
pop
and
xor
lret
inc
lods
dec
sub
sbb
cmp
data16
test
pop
lea
pop
pop
push
mov
idiv
xor
mov
popa
aad
dec
scas
and
push
mov
or
xor
mov
cld
dec
std
sub
jo
and
mov
sbb
cwtl
ss
sub
xchg
shlb
outsl
jmp
std
or
mov
dec
mov
push
cmp
xchg
int3
incl
jecxz
adc
xchg
sbb
push
scas
das
or
and
mov
lods
test
mov
mov
push
push
add
aad
ret
inc
fwait
cs
lret
jg
inc
mov
mov
movsl
lret
cwtl
jns
sub
jl
aam
fs
repz
cmp
mov
pop
aas
pop
push
in
pop
ror
fwait
lret
popa
inc
inc
popa
lods
es
mov
mov
add
dec
jl
lods
xchg
add
dec
aad
pop
loope
cmc
adc
mov
lcall
ja
das
push
mov
jl
nop
inc
sub
cwtl
inc
andl
gs
ljmp
xchg
popf
pop
test
out
les
adc
push
xor
xor
adc
adc
cld
shlb
rcll
inc
cmpsl
aas
in
roll
out
and
cmp
in
cs
scas
pop
enter
fldcw
jg
and
pop
rcrl
mov
mov
and
xor
loopne
fildll
fimull
jne
or
clc
adc
movsl
cmp
notb
pushf
bound
sbb
lods
push
ss
push
arpl
fs
add
sub
mov
std
imul
mov
jb
in
pop
sub
repz
mov
popf
jns
add
addr16
mov
fiadds
jb
pop
movsl
aaa
dec
cltd
int
cmpb
pop
popa
hlt
loopne
cmp
stc
movsb
mov
popf
or
and
call
ret
enter
cmp
icebp
jb
dec
xchg
push
sub
xorb
vpunpckldq
mov
xor
pop
cltd
in
std
pop
test
lea
mov
or
mov
pop
mov
sbb
icebp
add
mov
popa
push
popa
andb
fidivl
shl
fwait
dec
jge
out
add
sub
into
sbb
inc
arpl
cld
xor
jae
push
xlat
dec
mov
cli
jecxz
cmp
jmp
in
lock
cmpsb
dec
dec
test
xchg
xor
push
out
es
pop
push
xlat
push
outsl
sahf
push
adc
jg
dec
mov
fcoml
pop
arpl
test
loop
push
outsl
dec
pusha
shll
cmp
out
cwtl
test
imulb
loope
lret
mov
nop
loop
pop
pop
push
ret
push
rcrb
and
in
in
sub
pop
mov
jmp
mov
sbbb
sbb
pusha
inc
bound
fcmovnbe
stc
jnp
adc
push
jmp
xchg
sbb
lods
imul
inc
sbb
dec
mov
xchg
ja
pop
mov
shrl
mov
loope
lcall
and
fists
mov
inc
movb
stos
add
jp
insl
and
mov
dec
mov
xchg
shll
jbe
jbe
jno
ds
fadd
pop
jbe
pop
into
gs
and
mov
lahf
cmp
sub
mov
mov
mulps
loopne
mov
roll
jge
mov
pop
sbb
sbbb
pop
leave
fs
repnz
jmp
dec
aaa
and
in
in
and
sub
ljmp
xchg
in
sbb
aaa
ss
push
push
in
les
leave
and
jo
je
cmc
adc
dec
dec
xchg
xchg
pop
jbe
lea
adc
out
dec
rolb
jl
lods
jmp
or
cwtl
push
dec
popf
mov
adc
add
popa
sbb
adc
pop
cmp
imul
push
or
scas
sbb
sub
call
test
movsl
xor
out
jmp
lods
jne
cmp
xchg
inc
add
push
in
bnd
out
cmp
adc
mov
dec
ret
jecxz
mov
bnd
sbb
and
push
pop
cmp
jmp
dec
daa
loop
nop
call
popa
adc
lods
fs
pop
rorl
stos
gs
xlat
sbb
jp
sbb
and
lcall
cmp
xchg
subl
pop
add
fsubl
daa
les
mov
xchg
popf
cmp
pop
mov
bound
push
loop
jno
mov
cmpl
cmpsb
and
les
adc
cmc
mov
popf
jmp
aaa
sti
mov
or
inc
xchg
xchg
pop
std
jl
pop
loope
fwait
or
push
or
jns
mov
sbb
sub
lret
inc
mov
adc
xlat
pop
out
inc
push
mov
aas
or
and
hlt
or
xor
inc
insl
or
in
inc
push
push
or
fwait
xchg
pop
jno
stos
mov
xchg
mov
imul
imul
mov
jno
xchg
fisubrs
mov
and
cmpsb
push
add
das
cli
mov
push
xor
popf
or
mov
lods
xor
call
add
pop
sbb
or
push
push
cmp
and
out
lret
dec
inc
xor
inc
rorl
in
mov
jmp
ja
dec
lea
jno
pop
sub
aad
dec
fisttps
dec
rcrb
sub
sub
jne
push
stos
inc
pop
xchg
invd
sbb
fnstenvs
mov
int
sbb
dec
mov
shr
insl
mov
dec
es
hlt
inc
mov
add
fucomp
pushf
inc
lods
mov
das
inc
cmp
mov
pop
mov
xchg
popf
cmp
xchg
inc
xchg
lcall
aad
inc
xor
sahf
pop
sbb
xor
push
xchg
out
jp
pop
sbb
xchg
xorl
mov
adc
mov
sbb
inc
adc
or
push
sbb
fistps
cmp
xchg
mov
cmp
rorb
mov
sbb
in
cltd
mov
xchg
int3
xor
in
pop
rorb
xchg
fwait
mov
mov
mov
pop
adc
mov
ds
mov
out
mov
mov
or
dec
js
cli
std
leave
mov
nop
and
mov
bound
test
mov
insb
arpl
inc
dec
fs
aam
test
push
lds
fwait
ja
adc
test
icebp
mov
icebp
in
dec
mov
out
fcomps
pusha
sbb
lahf
adc
adc
add
test
adc
in
cmpsl
and
fdivs
inc
lds
sub
xor
fistps
xor
subb
mov
mov
mov
inc
repz
push
fidivs
scas
add
inc
das
and
add
jge
xchg
inc
xchg
pop
add
fsubs
popa
and
add
dec
push
mov
adc
cmp
negl
add
xlat
sub
test
insl
loope
insl
mov
ljmp
mul
in
mov
jns
mov
ljmp
lds
mov
nop
rol
push
xor
inc
add
push
dec
les
add
push
data16
mov
push
cmp
pop
js,pt
movsb
test
xor
sbb
sub
pusha
or
jns
popa
out
jmp
stc
jne
leave
push
add
out
pushf
inc
mov
outsb
pop
dec
or
in
inc
mov
pop
ljmp
cmp
ja
xchg
mov
xor
mov
repz
int3
xchg
xor
jp
sub
cwtl
fidivrl
mov
rclb
ss
sahf
cs
adc
daa
mov
scas
mov
xchg
mov
roll
mov
xor
aas
cmp
and
scas
and
add
lods
cmp
adc
jl
movsb
call
repz
xor
inc
daa
inc
mov
aad
loopne
add
inc
andb
xor
push
stc
fcmovb
mov
sub
es
inc
out
adc
movsl
stos
push
mov
adc
inc
inc
lods
inc
adc
in
xchg
pop
sbb
icebp
scas
daa
repz
pop
adc
inc
pop
and
pop
scas
add
sub
ret
imul
jb
pushf
scas
out
and
into
lret
fdivl
enter
clc
cmc
or
push
lahf
mov
ja
mov
popa
loope
insb
pop
rclb
fsubl
add
inc
inc
es
hlt
jl
sbb
outsl
push
sub
mov
sub
sbb
popf
pop
into
mov
and
push
ljmp
sbb
movsl
and
push
in
sub
mov
inc
insb
daa
aaa
adc
sbb
test
xchg
test
aad
or
xchg
adc
add
add
push
cmp
adc
popf
mov
hlt
mov
mov
jmp
add
in
add
mov
leave
mov
daa
cmp
repnz
xchg
in
fst
dec
dec
mov
xlat
jp
pop
mov
cli
popa
sub
mov
cmpsb
sbb
icebp
mov
jne
mov
lock
out
shrl
xorb
shlb
enter
test
add
test
mov
jge
shlb
hlt
adc
dec
out
in
fldenvs
std
stc
dec
xor
clc
inc
pop
iret
dec
orl
mov
cwtl
ljmp
packuswb
incl
cmpsb
mov
hlt
inc
imul
inc
repz
ljmp
out
jle
nop
or
or
push
in
stc
sub
out
mov
xor
fisttpll
fwait
cmp
fwait
jnp
and
imul
mov
out
mov
push
jge,pt
xor
sbb
mov
stc
gs
mov
shrd
jge
cmc
push
add
icebp
sbb
adcb
pop
sub
test
loope
in
inc
cmp
jns
shrl
stc
mov
pop
sbb
inc
stc
test
das
sar
and
dec
cmp
fildl
or
imul
out
lock
mov
test
sub
push
loopne
pop
lods
nop
jmp
das
inc
out
test
and
cmpb
inc
out
or
sbb
cmpl
stos
pop
jl
aas
test
scas
and
in
push
mov
leave
adc
mov
cmpsb
push
inc
dec
cmp
outsb
xor
inc
inc
and
inc
mov
sbb
mov
ficoms
daa
loop
ficompl
push
xchg
mov
add
imul
subb
mov
jno
cli
decl
shl
sbb
into
cmp
daa
xchg
sub
or
rolb
mov
xchg
xor
enter
sub
das
mov
lahf
add
movsb
or
mov
out
mov
push
or
add
mov
push
arpl
and
adc
mov
push
and
inc
sbb
and
pushf
popf
cld
xor
fucomip
sbb
outsl
xchg
mov
jbe
push
push
aas
add
jge
and
leave
add
jl
push
or
add
fldt
and
and
mov
adc
aas
sub
mov
push
into
adc
push
jg
inc
sbb
sub
push
mov
xchg
jnp
push
xlat
ss
sub
outsl
addb
add
push
out
test
inc
int
and
or
mov
js
loop
xor
push
ret
out
dec
enter
pop
inc
jg
or
andl
das
popa
movsl
jne
das
loope
inc
jno
dec
js
repz
push
mov
cs
push
jns
fistpll
dec
and
jb
enter
imul
sbb
pop
push
xchg
cmp
pop
cwtl
xor
mov
jle
sbb
adc
push
sbb
lret
outsb
mov
push
lods
out
add
mov
std
adc
cmp
incl
out
stc
lret
mov
fstpt
notl
das
pop
ja
mov
nop
sub
add
ret
fs
cmp
mov
mov
mov
push
add
push
or
mov
mov
add
or
test
ss
lcall
cmp
fisttpll
mov
mov
mov
inc
jns
mov
ret
adcb
adc
xchg
cmpsb
sbb
sti
adc
mov
out
mov
imul
popa
test
lcall
out
xor
adc
scas
ret
imul
cmp
mov
leave
mov
test
cs
es
sahf
add
adc
je
jb
ret
sbb
shrb
adc
adc
mov
imul
inc
mov
mov
iret
addr16
xor
outsl
jg
je
mov
cmpsb
and
dec
jl
adc
std
sahf
sub
jno
popa
xchg
ret
mov
xor
jmp
sbb
jle
iret
xchg
or
jae
dec
push
in
call
pushf
insl
fwait
enter
xor
ret
add
sbb
ja
and
mov
arpl
int
add
xor
into
mov
repnz
lahf
gs
xchg
adc
sub
stc
push
stc
outsl
test
push
in
repz
cltd
cli
dec
testl
in
ret
mov
dec
outsl
xor
out
jb
jge
addr16
leave
repz
adc
add
cmpb
jb
cwtl
daa
in
outsl
sti
jl
ljmp
lds
test
adc
pop
aam
jg
ja
push
xlat
sbb
cmp
and
iret
ret
popa
push
fsts
pop
xchg
sbb
cmpsl
call
sub
xor
aad
cld
imul
push
mov
sahf
mov
movsl
out
jo
push
pop
fidivl
xor
movsb
icebp
lcall
imul
mov
fstps
mov
and
sbb
mov
adc
mov
pop
fimuls
test
jg
outsl
lock
xchg
xchg
sub
mov
std
mov
push
cmc
lret
in
ret
or
pop
fstl
xchg
push
mov
clc
ss
stc
out
add
and
mov
sbb
xchg
cmc
fistpll
push
and
pextrw
dec
loopne
shrb
mov
xor
cmpsl
insl
push
nop
std
into
xor
jmp
sbb
jnp
push
fs
stos
lret
dec
cmpsl
arpl
xchg
rcl
jg
adc
pop
lahf
adc
jle
fsubs
cmpsl
pusha
add
sub
mov
mov
sub
pop
repnz
add
rcrb
inc
or
fsubs
cmpsl
std
lret
jmp
and
mov
mov
sub
mov
pop
cmc
push
subb
mov
mov
cmp
lret
stc
cmpsl
arpl
ja
mov
ljmp
push
leave
push
ret
scas
ror
inc
out
sub
dec
sbb
xlat
lcall
mov
arpl
testl
xor
pop
jecxz
push
mov
divb
orb
shrb
jne
and
and
dec
ret
in
xor
pop
leave
aaa
dec
std
add
sbb
es
jb
and
push
lcall
and
gs
mov
inc
les
push
in
push
ljmp
push
in
sbb
add
shll
jns
push
imul
jo
lods
push
ljmp
mov
push
fcmovnb
cmp
push
xchg
addb
sub
fcmove
andl
jle
push
add
cmpsb
inc
fcoml
adc
mov
push
add
movsb
in
aad
cld
inc
out
aaa
push
int3
sbb
out
inc
or
sub
dec
dec
js
inc
ja
inc
insl
sbb
inc
bsr
sbb
sbb
mov
adc
adc
sahf
dec
mov
test
push
mov
adc
cmp
clc
cmp
or
or
scas
shlb
rolb
sbb
in
add
and
jno
xchg
mov
bound
je
cmpsb
fimuls
cli
stos
mov
call
negl
jp
xor
mov
scas
clc
mov
es
mov
sub
loope
or
test
in
jle
cmpsb
outsl
xchg
fsubs
movsl
subb
and
add
pop
aaa
xchg
mov
hlt
mov
pop
push
fbstp
or
scas
js
test
pusha
adc
and
sub
add
cmp
es
add
movsb
movsb
pop
dec
or
and
xor
push
dec
ja
sti
loopne
mov
lret
mov
cmp
jo
inc
dec
xor
mov
push
cld
in
xchg
sub
mov
je
in
enter
in
xlat
push
add
test
scas
out
push
inc
lret
cmpsb
out
sbb
iret
pushl
stc
xor
cmp
xchg
popf
rorb
fisubs
dec
xchg
into
pop
cmp
in
pop
push
push
xchg
repz
dec
rcrl
mov
into
sti
aaa
inc
mov
mov
loope
jo
fdivr
fildl
mov
gs
jmp
sub
out
pop
jno
sbb
scas
dec
out
daa
dec
sahf
cmpsb
and
jns
jg
push
sub
jnp
fistl
lcall
push
push
fisttpll
movsb
pop
pop
notb
adc
call
dec
inc
dec
sbb
push
mov
add
dec
sbb
test
enter
pushl
xlat
shlb
mov
arpl
mov
mov
das
in
xor
xorb
pop
scas
mov
lcall
inc
sub
or
push
add
xor
xchg
add
movsl
xor
jnp
mov
fisubrs
cwtl
jmp
mov
into
lds
xchg
or
in
mov
sbb
dec
lods
shrl
dec
andb
lods
inc
dec
xor
stos
in
cmpsb
ficompl
out
bound
shl
inc
ror
xchg
movsl
sbb
sub
and
jne
jl
or
stos
dec
sub
mov
jb
push
test
dec
aam
ljmp
repnz
fsubs
leave
aad
push
test
pop
gs
mov
xor
xlat
pop
outsb
es
fsub
pusha
mull
loopne
in
inc
loop
jns
mov
shrb
cli
inc
lret
mov
jg
xchg
lods
into
mov
pop
in
jg
cmp
iret
mov
scas
add
pop
outsb
daa
sub
pop
iret
das
add
test
emms
sbb
ds
int3
stos
add
push
push
das
repnz
out
out
lret
adc
xchg
xor
lret
adcb
sub
xor
jns
pop
mov
mov
cli
and
popa
cmc
movsb
sti
loop
and
xchg
xchg
mov
fcoml
adc
jne
add
pop
div
fsts
int
mov
cli
push
push
ret
cmpsb
lea
dec
ret
xor
shrb
faddp
sbb
leave
push
mov
xor
cmp
dec
sbb
shrl
jl
jae
fmul
sbbb
sbbl
pushf
int
add
lock
or
dec
lods
hlt
nop
nopl
ja
shlb
push
dec
sar
mov
and
dec
mov
and
sbb
cltd
jne
and
or
add
vlddqu
adc
and
pop
or
sub
in
xor
mov
xor
mov
pusha
push
jbe
cwtl
test
jmp
iret
mov
mov
jnp
jne
adc
xorl
push
cld
insl
daa
pop
je
dec
push
out
cltd
repz
rcrb
xchg
jl
mov
push
jbe
xor
lcall
inc
jle
call
jp
jecxz
pop
and
sbb
dec
mov
push
mov
cmp
jecxz
push
xchg
or
xchg
push
mov
iret
fadds
mov
push
daa
fimull
jle
or
mov
popa
cmpsb
in
mov
sub
mov
push
and
in
sub
mov
dec
push
test
and
sub
mov
jnp
jbe
shlb
hlt
pop
dec
aas
inc
push
xchg
leave
or
in
sub
repnz
sub
cmpsl
jge
sti
sub
cmp
movsb
sahf
je
cmp
sbb
mov
in
fdiv
pop
dec
and
hlt
jo
out
add
scas
leave
mov
xor
adc
cmc
and
jns
jne
insb
mov
movsb
ficoms
stos
cwtl
mov
pop
push
out
mov
rorl
pop
dec
cmp
out
pop
adc
and
andl
dec
cmp
adc
aas
and
ficomps
fdivrl
xor
or
ljmp
loop
sbb
mov
adc
xchg
loop
jb
xchg
cmp
movsl
imul
clc
mov
inc
add
aaa
add
pop
push
mov
sbb
push
test
add
cmp
dec
push
jle,pn
insb
push
pop
cmp
and
mov
xor
add
cmp
shr
inc
push
js
inc
inc
jnp
out
pop
xchg
or
pusha
shlb
or
mov
outsb
mov
jge
movsb
xor
xor
cmp
or
push
lock
inc
inc
lods
jno
hlt
sbb
out
call
gs
xchg
fsts
sbb
jns
inc
rcrl
and
adc
ja
pop
sub
out
add
xchg
jl
cmp
repz
pop
lret
arpl
insb
mov
cwtl
mov
dec
aam
push
and
fcoml
mov
push
pusha
ss
push
adc
jns
lods
jae
push
in
xchg
das
pushf
cmp
int
pushf
ret
mov
adc
in
divl
push
jns
mov
sub
push
jnp
adc
jp
xor
cmpsl
outsb
outsl
or
sub
rcr
add
sahf
inc
sbb
scas
std
out
mov
sbb
xchg
es
xchg
dec
sbb
pop
sub
or
add
scas
loope
push
fistl
ficomps
push
dec
aaa
stos
test
jle
out
ss
mov
add
lds
sahf
aad
cld
daa
gs
push
add
add
inc
imul
or
arpl
sbb
or
pop
jae
add
push
enter
filds
xchg
nop
fstps
sbb
and
pop
xor
cmc
dec
bound
mov
fwait
loop
leave
jne
iret
lret
xchg
push
dec
sti
fldcw
jecxz
es
or
fisubrs
jecxz
sbb
inc
cmp
mov
cmpsl
jl
adc
jae
shl
aad
pop
mov
pop
push
jns
fcoml
add
adc
jle
or
lahf
repz
les
push
xchg
pop
mov
int
push
lds
leave
mov
ss
mov
pop
es
aad
pop
imul
mov
popf
jo
and
jb
pop
int3
scas
jns
jle
dec
loopne
fs
fs
and
sahf
int3
in
mov
add
inc
xlat
mov
aas
jge
pop
sub
scas
xchg
adc
aas
mov
lret
mov
pop
jb
pop
xor
fnstsw
pop
jae
or
sahf
insl
idivl
mov
lock
andb
sub
out
jae
mov
insl
frstor
cmp
dec
inc
das
in
sub
xorb
shl
jns
adc
xchg
push
inc
mov
ds
lcall
adc
adc
icebp
jmp
scas
mov
outsl
lock
cmpsb
adc
mov
and
sub
dec
cmp
cmp
rclb
outsl
pop
adc
imul
and
std
addr16
xchg
add
cmp
lret
out
push
inc
ja,pn
mov
xor
jecxz
lret
clc
das
or
lds
sub
mov
jecxz
outsl
pop
popa
cmp
out
mov
mov
pop
or
call
stos
lret
mov
xchg
les
mov
mov
xchg
pop
inc
sbb
xor
data16
aam
sbb
insb
in
push
cmp
repnz
mov
outsl
popa
or
sbb
mov
dec
adc
sbb
sub
push
inc
cmp
jnp
push
fcomps
cmp
or
mov
shll
dec
xchg
cwtl
cmp
mov
lcall
push
sub
fwait
pop
mov
enter
orb
mov
or
xchg
test
fsubl
adc
jno
fldcw
sub
nop
repz
jmp
cmp
js
pop
adc
gs
iret
xchg
test
ljmp
out
sbb
jbe
add
lods
adc
pop
mov
cmp
mov
into
stos
mov
pop
add
test
sub
test
sahf
icebp
pop
out
mov
push
sub
pop
mov
sub
addr16
add
xor
pop
rolb
pushf
xlat
cmp
getsec
push
jg
xor
daa
int3
jno
cld
or
das
in
adc
icebp
addr16
fabs
mov
xchg
mov
loopne
jbe
loopne
push
sbb
mov
aas
adc
fiaddl
and
or
mul
dec
pushf
and
out
add
out
imul
push
adc
in
jge
je
jb
adc
pop
outsb
ss
mov
mov
mov
popa
inc
pusha
stos
in
rcll
pop
mov
jecxz
movsl
and
add
mov
stos
pop
inc
mov
mov
inc
fdiv
xchg
ss
xor
jle
orl
loope
add
add
cmpsb
mov
popa
pusha
scas
sbb
out
stos
adc
inc
jle
pop
fstl
push
call
outsb
roll
mov
fcoms
xor
and
cld
inc
mov
mov
sahf
mov
xchg
adc
inc
lahf
mov
in
push
jns
test
add
in
xchg
mov
and
fwait
or
pop
xor
out
mov
das
jns
ficoml
cmc
dec
jge
jo
adc
xor
aaa
iret
arpl
pop
in
adc
repnz
jmp
inc
push
dec
add
and
xchg
xor
mov
imul
mov
inc
mov
popf
outsb
sahf
dec
sbb
mov
fs
idivb
mov
fs
mov
mov
andb
xchg
cli
inc
lahf
rcrl
xchg
rorl
add
aaa
cmc
jne
out
dec
scas
outsl
sub
aas
lods
mov
inc
lcall
inc
cmp
shlb
aam
or
add
loop
ret
jecxz
xor
stos
mov
movsb
cwtl
cwtl
add
stc
jg
test
in
fcoms
dec
sbbl
xor
aam
clc
sbb
sarb
mov
jle
adc
rolb
outsl
and
call
les
sbb
adc
mov
stos
repnz
adc
inc
jmp
std
push
lret
les
pop
popa
or
mov
cmp
push
add
jns
std
int3
jecxz
xor
jg
cs
jae
add
filds
mov
pop
ret
icebp
mov
jne
into
mov
cmp
mov
pop
aaa
or
ficoml
test
adc
jl
daa
nop
ds
cld
lods
pop
or
ret
xor
aad
jns
add
out
out
aas
lahf
arpl
adc
rorl
js
add
dec
mov
arpl
int
clc
mov
xchg
lret
lret
inc
pop
mov
jb
movsl
cld
mov
cwtl
ret
ret
sbb
pop
add
inc
repnz
fdivrl
outsl
mov
dec
push
jo
enter
fld
push
adc
jno
push
and
outsb
xor
sahf
sahf
cmpsl
cs
sub
imul
pushf
xchg
jno
sbb
inc
add
pusha
push
aad
xor
ror
cmp
gs
push
xchg
or
dec
cmpsl
test
inc
inc
dec
cli
stos
mov
sbb
test
leave
sti
test
mov
fwait
xor
fnstcw
mov
rclb
rolb
jb
dec
jb
outsl
leave
je
in
cwtl
xchg
das
rorb
mov
pusha
sub
sub
dec
cmc
clc
push
fisttps
xchg
pop
jg
mov
out
mov
aaa
inc
ret
pusha
or
push
add
mov
inc
and
sbb
adc
and
lods
inc
add
mov
lahf
test
aad
aad
add
fs
adc
nop
imul
fsts
jp
dec
pop
add
gs
pop
inc
or
mov
jecxz
loope
data16
jecxz
ret
repz
cltd
in
and
push
insl
push
rolb
call
out
mov
fnstcw
mov
js
inc
pushf
push
push
jae
xchg
adc
sti
lcall
mov
push
mov
push
int3
lcall
inc
and
cmp
inc
loopne
push
pop
aam
adc
jne
xchg
insb
jbe
fidivl
xchg
out
enter
dec
es
sub
fldenv
int3
sub
mov
in
mov
push
cs
scas
xchg
inc
xor
leave
aaa
icebp
xor
sub
add
mov
cltd
icebp
fisubrl
sub
movsb
shll
pop
add
lahf
push
adc
in
cmp
adc
insl
aaa
pop
in
mov
jbe
mov
roll
daa
xchg
jne
fistpl
pusha
mov
xor
add
popa
out
xchg
ret
adc
xlat
xchg
mov
lock
inc
mov
sub
adc
sub
mov
mov
fmuls
add
repnz
pop
pop
xchg
sub
imul
dec
inc
gs
jmp
push
sub
ljmp
jnp
roll
inc
sbb
fadds
loopne
dec
pop
sub
add
xor
mov
test
xchg
aaa
jne
pusha
out
pop
and
and
cmp
sbb
xchg
push
test
pop
xor
pop
inc
in
xchg
loope
push
jle
lcall
je
cwtl
mov
mov
cmpsl
ret
inc
cld
adc
xchg
hlt
xchg
push
aad
sbb
lds
xchg
jae
lret
xor
and
cmc
daa
dec
inc
pop
ljmp
dec
ficompl
mulb
mov
jp
pushf
lods
cld
stc
add
xor
hlt
mov
mov
vandps
cmp
add
cmpsl
js
out
sti
in
hlt
lods
imul
mul
sarb
nop
xor
mov
int
aas
jno
stc
cmp
mov
sbbb
or
cmc
jmp
inc
mov
hlt
fisubl
mov
call
data16
mov
push
pop
push
out
sbb
push
push
into
xor
decb
mov
mov
cmp
add
jbe
cmp
int
ja
insb
dec
xor
aad
sub
add
lret
stos
pop
sbb
cmp
mov
nop
loop
inc
iret
andl
int
pop
aam
jne
xchg
dec
enter
rorl
es
push
or
xorl
ljmp
test
push
into
lea
gs
cmpsl
inc
mov
mov
mov
ret
or
les
pop
adc
xchg
in
push
mov
lret
dec
and
jno
cmc
adc
pop
mov
loop
rcll
push
xlat
arpl
ja
cld
out
adc
xor
pop
cmpsl
in
or
sbb
call
lahf
nop
xchg
std
test
fs
inc
and
imul
or
mov
mov
lds
cmpsl
push
cmp
jne
push
lret
and
int
xchg
jnp
cmp
mov
in
jmp
icebp
mov
add
push
scas
adc
cmpsl
sbbb
mov
mov
inc
aas
ror
movl
fwait
icebp
aas
sub
and
mov
xor
cmp
aad
mov
sbb
or
jg
push
out
sbb
stos
pop
adc
xor
or
jnp
pop
int
push
mov
pop
ret
in
mov
pop
mov
inc
and
xchg
xchg
fildll
call
leave
pop
in
jl
sbb
test
outsb
pop
lds
adc
xor
inc
adc
xchg
leave
mov
sbb
xchg
mov
mov
mov
je
sub
mov
adc
xlat
in
popf
pop
sbb
dec
sbb
fidivrl
jno
add
adc
cmc
add
or
jne
sbb
frstor
or
insb
jae
js
mov
stos
dec
ret
xchg
sub
ljmp
ret
outsb
loop
or
lds
fwait
out
dec
fistps
mov
add
mov
or
xchg
push
xchg
pop
mov
mov
sub
rcrl
sub
jo
push
push
push
andb
sbb
and
pop
mov
mov
jne
emms
adc
pusha
jle
rcl
dec
mov
imul
fsubp
data16
in
out
cld
cmp
fbld
sub
cmc
shlb
jno
arpl
in
mov
into
sub
das
mov
shrb
lods
popa
fildl
adc
or
addr16
or
daa
or
test
xchg
popf
or
sub
xorb
stos
aaa
int
cmp
mov
test
in
add
mov
sbb
xchg
popa
int3
shlb
in
push
mov
mov
mov
xor
dec
add
or
push
xchg
ret
inc
mov
pop
ds
cmpsb
jmp
add
adc
mov
cld
lods
jg
push
lds
arpl
popf
stos
jp
sub
push
xor
xchg
push
sbb
adc
jmp
push
fsubl
or
add
inc
mov
stc
mov
dec
sbb
popa
aad
push
je
orl
xor
lret
push
aad
shrl
scas
dec
pop
fwait
ret
mov
sbb
fldt
lock
cmp
lret
repz
lea
adc
jb
add
adc
sti
ret
mov
dec
lret
mov
mov
and
push
aas
outsb
frstor
outsb
xor
into
imul
xor
popa
jae
cwtl
call
push
ret
jecxz
bound
xchg
inc
jmp
testl
cwtl
push
push
int
cld
pop
jmp
leave
iret
ljmp
push
mov
inc
push
je
mov
cli
stc
sub
jecxz
cmpl
or
adc
xor
and
dec
pop
into
hlt
xor
fdivl
cmpl
fimuls
and
pop
cmp
jns
or
sub
push
jl
inc
and
ljmp
jle
cwtl
sub
sbb
push
iret
in
mov
cmp
aas
push
pop
fcmovnb
xchg
stos
les
cmpsl
out
sarl
into
mov
jp
xchg
aad
lahf
fs
lcall
lods
mov
mov
mov
and
mov
sbbl
mov
jnp
or
das
data16
inc
lock
insb
jge
popf
jecxz
fldt
xor
flds
cmp
rcl
jecxz
and
dec
xchg
scas
or
pop
push
test
and
test
mov
mov
hlt
sub
jnp
cmp
mov
popf
lods
imul
dec
data16
sbb
cwtl
andl
jmp
add
mov
nop
push
sub
imull
fsubs
mov
pop
cs
dec
pushf
or
call
aaa
dec
and
cmp
mov
mov
mov
pop
jecxz
popf
mov
sub
push
imul
inc
jmp
adc
fs
out
filds
cmp
std
push
int
or
movsl
pop
or
ds
divb
ja
sbb
iret
xor
negb
or
xchg
mov
jne
adc
xchg
pop
sbb
movsl
pushl
lods
iret
nop
add
lock
dec
jno
bound
or
xchg
and
push
je
pop
jle
inc
andl
adc
sbb
jmp
sti
shlb
sbb
adc
arpl
addr16
inc
mov
inc
in
call
lcall
gs
add
sbb
push
cld
pop
dec
push
out
out
lret
pop
add
orb
xchg
cmp
int
jp
sbb
push
lret
data16
add
dec
xor
fwait
mov
xor
pop
mov
sub
cmp
aas
int
loop
scas
loopne
jp
rorb
dec
leave
lock
pop
jnp
lahf
mov
mov
adc
and
stos
push
cmc
xchg
mov
aas
test
insb
insl
xor
stc
cmp
adc
cmp
or
outsb
insb
push
cmp
repnz
daa
movsl
sbb
aad
pop
dec
mov
mov
insl
bound
imul
inc
sub
or
mov
sbb
pop
xor
xlat
cmc
jecxz
push
cmp
fstps
in
push
test
scas
mov
mov
pop
adc
leave
imul
jb
stos
and
out
mov
cmp
aas
xor
shl
adc
mov
and
in
lods
andl
dec
xchg
outsb
push
sub
stos
mov
dec
rclb
xor
in
jp
or
xchg
inc
std
imul
fdivs
cmp
dec
dec
imull
cmc
je
aam
or
stos
in
add
or
push
andl
cwtl
lcall
jnp
xchg
cmp
dec
lret
ja
stos
out
inc
inc
add
or
test
push
lahf
sub
pop
sub
xchg
in
lahf
into
shll
sub
das
mov
aas
xchg
fidivrs
cli
inc
jecxz
push
cmp
or
movsb
jge
push
push
mov
or
inc
cmp
pop
mov
pop
loope
sub
loop
jo
addr16
add
daa
imul
mov
xchg
mov
rcrl
inc
call
out
sub
adc
pushf
inc
cmpsb
lock
in
pop
xor
and
inc
adc
add
jg
test
xor
fisubrl
scas
push
sti
inc
fbld
pop
mov
add
or
scas
rorl
jmp
pop
bound
or
jecxz
sub
addb
inc
testl
xchg
jp
mov
out
call
lods
and
add
dec
xchg
xchg
test
mov
or
cld
jno
jle
fiadds
subl
dec
mov
sub
mov
cli
xor
adc
pop
aam
or
fdivr
xor
mov
cmp
loope
fsubrp
lods
fsubrl
xor
jp
push
je
dec
in
add
cmovb
mov
mov
and
test
mov
ret
mov
popa
or
test
lret
shll
ljmp
sub
mov
dec
jnp
int
pop
call
pop
mul
inc
push
mov
jl
xor
negb
rcrl
gs
dec
sbb
daa
inc
inc
mov
mov
push
pop
sti
jmp
dec
aas
adc
mov
enter
out
xor
inc
rcrl
jmp
out
cltd
xchg
xchg
add
xchg
jnp
push
fnstcw
pop
in
jl
mov
arpl
adc
stos
mov
sub
jg
xor
out
insl
xor
test
xchg
in
das
add
mov
leave
xchg
pop
xor
shl
push
mov
xlat
loop
fisttpll
lea
dec
mov
test
js
in
xor
rclb
jb
pop
cld
call
inc
repz
not
roll
inc
mov
lock
sbb
in
aaa
xchg
lahf
scas
dec
inc
nop
sahf
cwtl
pop
cmp
push
adc
cltd
daa
repz
pop
ja
inc
push
push
push
iret
jnp
add
insb
sub
insl
ljmp
fwait
mov
xchg
jmp
sub
mov
jl
mov
mov
insb
mov
jae
or
aas
jnp
mov
loope
push
mov
sahf
dec
sahf
mov
xchg
xor
mov
dec
iret
movsl
mov
dec
dec
pop
lea
imulb
mov
mov
addb
jge
std
fnstenv
mov
mov
fisubl
xchg
mov
pop
shrb
sbb
mov
inc
mov
xchg
dec
push
mov
lds
xchg
push
lcall
rcl
or
or
cmp
xlat
adc
mov
xchg
xchg
push
cltd
add
loope
and
xchg
cs
iret
pushf
insl
outsb
insl
scas
add
pop
dec
lahf
rcll
rcrl
pop
outsb
dec
js
sbb
sub
je
add
ds
outsb
jnp
cmp
fwait
ret
test
sub
adc
pop
add
sbb
or
xcrypt-cbc
cmpsl
xlat
xorl
lods
mov
scas
leave
fisubs
ljmp
into
sbb
scas
mov
add
sahf
mov
push
inc
loope
or
push
gs
call
subb
fcompl
sub
mov
push
pop
xor
xor
push
outsb
push
cmpsl
fisttpll
mov
shlb
sub
hlt
sbbl
loope
inc
das
push
stc
int
inc
adc
dec
cmc
sub
jge
push
push
or
add
dec
mov
sbb
inc
sti
pushf
es
cmp
fcompl
xchg
dec
sbb
ret
cs
mov
aam
pop
inc
sub
mov
pop
lods
xlat
and
cmp
aaa
adcb
daa
aam
lret
and
fstp
ds
notl
pop
xchg
sbbb
out
data16
cmpsb
pop
pusha
mov
jmp
ror
jbe
mov
adc
repnz
push
push
mov
xor
fldcw
addr16
cmp
scas
dec
es
movsl
dec
xchg
dec
sub
ret
fldcw
call
mov
out
inc
lods
call
lds
sbb
sub
iret
dec
jmp
fucomp
outsl
adc
mov
mov
sbb
outsb
std
pop
adc
xchg
or
push
xchg
pushf
pop
test
ds
popa
in
lods
jge
in
pop
or
push
cwtl
sbb
dec
popf
pop
pop
inc
and
je
ja
fcompl
add
cli
fcoml
cli
jmp
xor
insl
enter
sbb
mov
imulb
orl
cmp
jl
cmp
rcrb
addb
xchg
dec
popa
sbb
stos
incl
movsl
xor
and
cltd
movsb
jno
mov
mov
cmp
cmc
je
out
jp
inc
push
or
addr16
xor
add
fisttpll
cltd
push
xchg
jno
cmp
icebp
push
dec
into
mov
sub
dec
leave
lahf
std
arpl
insb
roll
fadd
jmp
cmc
push
mov
int
daa
pop
sub
xchg
pslld
lret
stos
hlt
negb
insb
jle
cmp
pop
adc
lods
ret
sbb
or
mov
sbb
adc
mov
leave
inc
inc
dec
aam
or
jno
fidivrs
inc
cmpsb
adc
aaa
lods
cmpsl
and
push
xchg
popf
adc
xor
arpl
loopne
test
and
pop
adc
add
pusha
pop
outsl
stc
les
jle
clc
cmp
jbe
das
dec
es
out
addr16
dec
sub
lods
mov
push
xor
and
inc
ljmp
ss
cmp
xchg
jecxz
mov
sbb
xor
outsl
bound
jge
or
xchg
fildll
in
mov
inc
inc
sbb
mov
leave
mov
int3
pop
fwait
adc
cmp
insl
dec
mov
push
js
sub
xchg
sbb
or
ret
cmc
stos
int
xchg
dec
push
mov
ss
push
sbb
sbb
in
es
ja
cwtl
push
addb
cltd
pop
loopne
in
pop
lock
push
shr
cmpsl
pop
sub
and
and
mov
mov
movsb
lea
pop
jge
inc
das
inc
jmp
arpl
lcall
xchg
xchg
std
outsb
insb
addr16
or
add
aam
or
out
gs
lret
xchg
push
rcrb
sbb
jne
fsubrl
mov
or
inc
pop
and
in
sub
xor
mov
and
lret
cmc
mov
test
int
sahf
gs
icebp
mov
sub
arpl
in
cmp
daa
sbb
add
out
nop
jge
inc
mov
jg
sbb
lcall
mov
lret
insl
ret
ss
arpl
pop
stos
add
jle
xor
mov
sbb
outsb
lcall
push
test
jmp
mov
and
roll
shll
lds
mov
mov
or
mov
or
sub
aam
cmp
js
ja
iret
mov
inc
and
xchg
pop
dec
leave
mov
icebp
jne
add
sub
mov
cwtl
gs
mov
std
push
aaa
pop
daa
jns
pop
mov
jnp
iret
into
ja
scas
sbb
mov
fstpt
cmp
fmulp
xchg
roll
cmp
ljmp
in
cli
push
mov
jnp
jmp
and
mov
hlt
arpl
pop
aaa
nopl
jo
xchg
fsubl
push
mov
xchg
aas
aaa
and
rcrb
pop
xor
out
add
mov
out
lds
cmc
push
lock
adc
sar
xlat
push
out
shlb
mov
cld
popf
ret
sub
add
inc
pop
and
mov
adc
and
sbb
in
inc
stos
out
mov
mov
stos
inc
add
repz
lahf
popf
dec
repz
les
xchg
adc
cmpsl
hlt
sti
test
pop
bound
inc
pop
push
and
lret
insl
ds
sub
pop
cmp
sub
int3
add
inc
notb
sbb
outsb
nop
and
idivl
dec
jnp
adc
imul
and
pop
sbb
lds
lea
js
ja
loop
inc
mov
pop
inc
out
jo
dec
push
inc
dec
and
repnz
sbb
xor
out
scas
punpcklbw
ret
je
adc
jg
mov
in
and
adc
outsb
mov
inc
mov
dec
gs
stc
insl
and
push
iret
in
mov
cmp
jnp
jne
push
push
mov
cmp
popf
bound
adc
and
test
mov
ficompl
loopne
cmp
call
cmpl
inc
mov
fistpl
cmp
hlt
ret
pop
fstpl
popa
xchg
push
cmp
jge
aam
push
popa
mov
repnz
mov
icebp
push
in
cli
pop
stos
push
jb
pavgw
mov
mov
jp
cmpsl
xor
pushl
and
daa
dec
stos
jo
fcoml
xlat
pop
lahf
jae
addr16
je
jo
inc
aas
fmull
sti
jmp
push
mov
loop
sub
fldenv
cmpb
xchg
sub
icebp
mov
ficoml
fmull
push
outsb
out
movsl
inc
mov
cmp
sti
fstp
mov
push
cmpsl
loop
movsb
jbe
rol
xchg
lret
and
sbb
dec
sub
pop
mov
sar
mov
xlat
bnd
mov
mov
mov
orb
and
sbb
ds
xor
mov
sti
pop
jg
jge
lds
popa
in
pop
ret
outsb
mov
nop
jno
jb
sbb
mov
leave
push
out
push
arpl
push
push
cwtl
add
mov
out
cli
sahf
test
mov
mov
inc
shl
in
adc
lock
aaa
push
sub
hlt
or
pop
sahf
xlat
leave
add
in
fimuls
and
dec
stos
mov
iret
std
xchg
xchg
mov
repz
imul
popa
ret
faddl
mov
cmp
mov
popa
mov
subl
cwtl
imul
imul
jge
or
aam
jns
mov
push
sti
lds
pop
mov
mov
test
fcoms
ffree
cmpsl
daa
mov
cmp
or
push
cmp
dec
cli
dec
xor
scas
pusha
xchg
leave
stos
loop
mov
mov
out
sbb
pop
push
dec
inc
arpl
js
fbld
mov
sub
xor
push
mov
mov
jmp
lcall
cmp
iret
adc
add
test
mov
mov
sbb
pop
stc
shr
jmp
enter
mov
pop
ljmp
mov
insb
push
fcomps
clc
insl
cltd
dec
add
cwtl
out
lcall
cmpsb
mov
mov
sbb
dec
into
shrl
fisttps
in
adc
cmpsl
icebp
js
sub
sbb
mov
orl
adc
sahf
sbb
mov
ret
pop
les
mov
frstor
rorl
push
stc
icebp
scas
out
jb
cli
lods
adc
dec
mov
add
push
movsl
inc
nop
stc
rclb
pop
pop
and
push
lret
into
rorl
pushf
ficomps
iret
dec
enter
mov
fildl
fistl
fwait
aad
and
xchg
pop
mov
pop
xchg
xchg
dec
imul
mov
dec
mov
mov
push
or
int3
imulb
dec
xor
mov
pop
movsl
jbe
jge
out
mov
in
adc
mov
push
lock
dec
xor
cmpsb
and
cs
push
pop
repnz
fisttps
mov
mov
mov
insl
and
insb
nop
pushf
lret
sbb
or
add
inc
in
dec
outsl
and
pop
mov
pop
mov
cmpsl
fwait
pop
sbb
pop
adc
add
aam
out
dec
shr
xchg
dec
push
push
cli
inc
setns
dec
add
jb
sub
mov
bnd
xchg
in
push
cs
xchg
pusha
mov
insl
or
add
shll
add
jle
leave
outsl
jno
cmp
pop
test
lahf
andl
pop
mulb
popf
imul
and
out
dec
pop
pop
fadd
jmp
cmc
mul
lret
and
in
out
jmp
add
adc
mov
in
jmp
add
lods
rcll
ret
push
xchg
fldcw
fildl
pop
scas
xor
ret
cmp
ljmp
mov
shlb
sbb
mov
cwtl
cmp
sbb
push
mov
mov
test
into
testl
push
pop
sbb
aaa
mov
ret
push
je
dec
or
in
js
out
out
loope
hlt
in
inc
sbb
fs
cmp
lea
cmpsl
ljmp
popf
xchg
outsb
add
mov
xchg
sub
mov
fistpll
cmpsb
ret
enter
ret
push
pop
or
pop
and
mov
jle
cltd
ret
pop
lods
lock
mov
out
lods
and
std
push
pusha
xor
into
cmp
mov
test
push
pop
aas
cmpsl
xchg
in
ljmp
lds
push
mov
push
adc
push
data16
daa
sub
mov
loopne
aas
aas
adc
xor
xor
or
in
hlt
je
ja
insb
xor
fs
movsb
aam
and
cmpsb
orl
xlat
add
insl
xlat
aas
mov
ret
movsb
movsb
lcall
push
xchg
int
test
mov
test
ret
rcrb
cmp
jno
jae
jno
push
pop
push
inc
cmc
xchg
addb
cmc
pop
sbb
inc
out
cltd
push
pop
rorl
xor
ljmp
in
daa
incb
test
jno
push
jg
outsb
inc
ja
push
aam
gs
dec
imul
shl
aaa
scas
sbb
mov
ds
push
mov
mov
adc
add
xchg
stc
filds
daa
scas
push
fwait
jae
pop
lea
inc
aas
cmpsb
sbb
adc
lcall
mov
cwtl
fsubrl
sub
jno
push
insl
daa
xor
push
mov
ljmp
aad
cli
pop
int3
mov
cld
sti
add
jns
sbb
jge
pop
test
aas
daa
and
xchg
mov
ret
pop
aad
dec
fmull
dec
call
adc
rorl
cmp
inc
frstor
mov
or
movsb
into
faddl
sbb
mov
xor
scas
loop
xor
pop
nop
aam
mov
sub
mov
ds
xchg
fldcw
jnp,pt
lret
insb
pop
data16
test
ss
arpl
mov
cmc
dec
ja
dec
outsl
je
pop
sbb
int
adc
mov
cmpsl
pop
pop
mov
ret
mov
fcoml
sub
xchg
pop
sahf
sub
push
xchg
or
push
shrl
xchg
loope
sbb
inc
adc
pop
cltd
adc
lods
inc
lds
lods
adc
out
sarb
or
inc
mov
aas
xlat
jmp
sti
push
push
test
xchg
pop
mov
hlt
testl
in
aas
lret
add
xlat
add
test
call
and
imulb
popf
imul
and
addb
jns
in
add
add
and
sbb
fbld
xchg
pusha
jb
adc
and
imul
in
jge
add
hlt
adc
mov
pop
mov
xor
std
out
loop
fsts
icebp
shlb
cmp
es
pop
push
xor
movsb
lods
push
dec
pop
neg
lret
xor
mov
mov
push
inc
sbb
mov
mov
lcall
or
aaa
test
shr
roll
mov
filds
shll
push
movsl
ficomps
pop
push
lahf
sbb
int3
loopne
cmp
ss
pop
jmp
fldenv
xor
cmp
inc
movsb
xlat
dec
das
mov
or
outsl
stos
push
add
mov
test
jns
gs
pop
lods
pop
hlt
and
sub
mov
xchg
out
xor
fcompl
ljmp
and
in
mov
sbb
loope
cmp
cmpsl
iret
push
mov
test
xchg
pusha
xor
subb
pop
loop
aas
push
inc
sub
cmp
negl
xor
sub
xchg
fistpll
dec
push
dec
cmp
pop
test
inc
xchg
push
loop
inc
sbb
bound
xor
insl
xor
pop
fnstcw
test
pop
push
test
js
fmuls
sbb
or
and
adc
cwtl
dec
and
adc
inc
sbbb
jnp
xchg
cld
das
push
arpl
jnp
mov
std
movsl
mov
mov
pop
sub
dec
mov
dec
dec
dec
and
mov
or
ror
sbb
sub
insb
push
cmp
int
xchg
lock
adc
popf
enter
xchg
xor
js
inc
popa
addr16
cmp
adc
push
xchg
pop
sbb
push
bound
gs
jb
adc
and
fnsave
add
iret
sbb
inc
lock
jl
mov
cmpsb
cmc
xchg
or
rclb
sub
xchg
jmp
xor
push
stc
lret
inc
push
pop
andb
push
inc
imul
mov
push
scas
dec
pushf
sbb
push
jae
scas
cmp
movsl
mov
sub
or
jmp
mov
mov
dec
nop
inc
sarb
call
sub
out
stos
or
stc
pmaddwd
cmc
jns
sbb
iret
popa
push
push
test
sbb
pop
fiaddl
les
cmpl
aas
cli
xchg
andb
lret
iret
movsl
and
jns
ficoms
mov
dec
popf
outsb
push
dec
mov
cltd
mov
ja
push
loop
lret
xor
jb
fildl
or
in
adc
cwtl
lods
cmp
jle
lods
push
sahf
adc
scas
or
cld
xor
fdivrs
pop
jne
mov
iret
andb
push
dec
sub
dec
jb
jl
subl
dec
mov
jmp
outsl
adc
lock
jecxz
jno
and
or
inc
inc
mov
and
rcrl
jp
or
mov
add
mov
mov
lds
lock
int3
push
and
jge
adc
out
inc
cli
cld
inc
lea
pop
cwtl
fs
dec
ret
out
pushf
mov
dec
lahf
and
xchg
sbb
pop
in
jecxz
int
jge
das
or
data16
mov
in
add
push
mov
cmovae
mul
mov
add
out
in
mov
test
stos
cli
mov
ficompl
mov
sbb
jmp
lea
sub
fadds
mov
lock
idivl
adc
add
xor
hlt
and
adc
dec
and
ss
rcl
mov
sub
and
fmul
mov
mov
mov
std
mov
mov
xor
mov
add
fcomip
pop
mov
addr16
jecxz
clc
mov
xchg
mov
lds
jno
test
add
je
mov
cli
xchg
mov
mov
ret
stos
mov
sti
jbe
outsl
mov
mov
xor
shll
xor
loope
je,pn
cmpsb
mov
inc
ljmp
xor
scas
sub
fldl
mov
mov
rorl
and
sbb
jbe
sbb
jae
idivl
xor
mov
cwtl
stos
movsb
or
scas
outsl
out
xor
es
cwtl
fidivrl
out
mov
ret
mov
iret
sub
or
outsb
pop
lret
xchg
push
decl
leave
sub
imul
pop
stc
rcrb
test
fsubs
in
dec
xor
sub
jp
ds
ds
mov
je
xor
cmp
pop
out
sahf
push
outsb
les
ret
movsl
push
aas
push
movsb
pop
into
mov
das
clc
movsb
pop
insl
pop
imul
and
mov
push
cld
ss
mov
push
out
enter
sbb
sarl
shrl
jl
popa
lds
or
movsl
pushf
mov
or
fiadds
sbb
aaa
aam
sahf
push
push
cmp
movsb
dec
or
daa
xorl
nop
int
jo
sub
in
imul
cmc
jo
push
sbb
outsb
mov
arpl
and
inc
pop
xchg
xchg
testl
fs
xchg
dec
sbb
pop
lret
loop
and
jmp
imul
dec
pusha
inc
xchg
into
hlt
fnstcw
jne
pop
mov
xchg
lds
loop
mov
mov
test
inc
xchg
push
insl
jl
aad
popf
cmp
and
dec
jne
out
ret
pusha
sbbb
mov
nop
mov
mov
dec
pop
mov
xchg
loop
inc
or
test
out
mov
inc
lret
dec
sub
decl
jb
xor
jo
push
enter
and
jl
xchg
call
mov
mov
dec
jb
sub
dec
movsb
mov
orb
bound
push
addr16
or
loop
adc
add
xor
cmp
jmp
push
push
dec
sub
push
cmpsb
mov
sbb
adc
std
int3
push
pop
aam
cld
or
bound
lret
and
push
or
cs
arpl
addb
pusha
out
xchg
jne
jle
repnz
loop
insb
test
int
or
or
repz
and
pusha
fidivrl
pop
mov
mov
sub
bound
xchg
addr16
insl
and
sarb
xchg
pop
pusha
push
loopne
jge
xor
pushf
jbe
inc
mov
sub
les
cmp
inc
pop
rorb
xchg
les
das
mov
push
cwtl
dec
dec
rcrl
loopne
dec
loope
repnz
mov
bound
out
aam
add
jns
pop
test
notl
mov
outsl
enter
cmpsb
rolb
in
jg
pop
nop
loopne
sarb
inc
xor
aas
inc
sub
mov
enter
fnstcw
push
sbb
call
sub
add
inc
cmp
push
push
sbb
loope
or
sub
or
mov
addr16
mov
mov
jns
xor
loope
call
inc
inc
cli
inc
enter
sbb
in
mov
jo
and
outsb
aas
mov
mov
add
enter
jbe
adc
mov
push
and
cwtl
dec
clc
jns
in
cmp
and
mov
cmp
in
and
fsub
adc
outsl
lods
xor
push
lcall
clc
add
clc
negb
mov
mov
mov
push
stos
mov
and
insl
fcomp
fdivl
sar
arpl
mov
mov
pop
rcll
in
addr16
and
push
dec
jmp
pop
repz
add
out
mov
add
loope
add
pop
sub
cmpsl
add
hlt
pop
mov
mov
repz
insl
xchg
lods
jl
dec
fsts
and
out
and
inc
invd
movsb
or
test
std
sbb
and
mov
pushw
cmpsb
xor
in
aas
jle
push
popa
fbstp
les
dec
sub
push
loop
sbb
roll
data16
std
cltd
push
jbe
int3
adc
xchg
lock
jmp
and
push
loopne
es
mov
cltd
andl
sub
aaa
adc
xchg
ds
sub
or
dec
dec
test
push
or
jmp
adc
mov
das
jnp
lock
mov
les
aam
in
test
adc
mov
xchg
adc
mov
cwtl
in
fwait
hlt
popa
call
jae
movsb
aas
int
leave
jmp
dec
test
push
adc
cmp
cmp
push
out
das
dec
test
fmull
fwait
mov
mov
leave
addb
fcoms
mov
scas
push
fstps
cmpb
les
xor
xor
dec
xchg
inc
loope
jp
xchg
mov
inc
jns
test
outsb
dec
sub
sbbl
mov
and
or
loope
cmpsl
mov
jae
push
inc
rcr
ficomps
cmpsb
repnz
fisttpl
lret
in
sub
mov
scas
bound
iret
mov
outsl
lods
imul
and
jae
cmp
pop
lret
push
icebp
xchg
je
dec
pop
dec
je
adc
jecxz
dec
ds
sbb
sub
bound
clc
jne
sbb
sub
adc
outsb
adc
loop
cltd
lods
imul
or
dec
sbbb
icebp
je
dec
inc
fisubrs
or
loope
dec
std
das
iret
fsubrl
jl
insl
in
adc
addr16
std
xchg
arpl
dec
daa
call
inc
xchg
stos
mov
aam
dec
in
adc
xor
jle
loope
gs
xchg
inc
je
jg
stc
ss
cmp
shl
mov
push
out
pop
in
leave
add
daa
add
cwtl
xchg
push
clc
jg
xor
clc
int
jae
inc
jmp
sub
testb
in
mov
imulb
mov
pusha
int3
dec
add
movsb
lcall
call
insb
cmpsb
stos
xor
inc
mov
cmpsl
loope,pn
cs
push
sbb
cwtl
aad
and
cli
xchg
call
dec
inc
and
add
js
sbb
xor
xor
inc
inc
imul
out
mov
imulb
hlt
mov
mov
loope
adc
inc
xchg
xchg
stc
or
and
adc
pop
mov
lods
jnp
repz
or
dec
push
add
stos
insb
cmp
nop
or
xchg
aas
es
daa
addb
cwtl
xor
test
call
push
xchg
and
or
push
push
sub
sbb
xchg
and
xchg
out
call
xor
in
cmp
cmp
inc
fidivl
mov
xchg
lret
ret
inc
jne
add
mov
jecxz
pop
cmpsl
clc
jle
push
and
jle
mov
sbb
outsl
push
pop
js
sub
pusha
loop
lds
loopne
sbb
hlt
or
popa
and
out
loope
and
mov
inc
mov
in
mov
out
jnp,pt
pop
cmp
mov
push
ds
lea
xor
pop
inc
loope
leave
pushf
div
in
inc
decl
aam
imul
loope
test
jmp
out
dec
or
push
cmp
ffreep
insb
pop
xor
js
add
inc
or
call
jne
jbe
sub
adc
and
outsb
rclb
xchg
rcr
or
inc
mov
movsb
push
and
js
mov
pop
or
ret
jb
adc
and
add
scas
cli
dec
adc
push
and
js
cmc
sub
mov
mov
xor
dec
lock
and
jp
push
jle
mov
jbe
cmpsb
adc
mov
pop
idivb
pop
nop
das
in
cmp
push
stc
sbb
xchg
lock
pabsw
jl
fisttps
outsb
roll
push
imulb
dec
pop
push
pusha
pop
pop
and
xchg
incl
mov
lret
icebp
dec
and
mov
adc
jmp
ja
dec
lret
pop
gs
cmp
aaa
fisttpl
ror
lcall
lea
push
xor
ret
mov
shlb
add
jle
repnz
mov
out
cld
ja
pop
in
out
push
sub
test
scas
pop
shll
add
cmp
adc
and
push
sbb
adc
mov
inc
or
lret
in
scas
mov
sub
pop
mov
cmp
lcall
push
jae
or
ja
jl
fsubrl
mov
fidivs
push
cmp
jns
int3
fucom
xor
aaa
test
lret
and
push
adc
jl
addb
and
lock
sub
rcll
out
stc
mov
xchg
lcall
and
xchg
mov
sbb
xor
test
add
jb
lret
pop
push
sub
popa
or
add
je
sbb
shlb
inc
fs
mov
pushf
cld
sub
mov
pop
cli
sbb
adc
jg
aaa
sbb
push
pop
jmp
jno
daa
jno
aaa
mov
mov
xor
leave
sbb
pop
cmp
test
decl
outsb
pop
andb
jo
push
ljmp
or
pushl
sbb
outsl
push
inc
arpl
fiaddl
mov
fnsave
cmpsl
xchg
adc
lret
cmp
mov
adc
sbb
dec
repnz
cmp
iret
xor
pusha
pusha
cwtl
nop
inc
inc
inc
aad
and
out
mov
and
mov
dec
fdivl
mov
pushf
or
dec
inc
shrl
sbb
and
ss
icebp
out
notl
andl
jge
ljmp
adc
dec
scas
mov
hlt
inc
add
out
and
ds
mov
outsl
cwtl
into
aas
inc
or
xchg
test
cmpl
mov
cmp
sub
pushf
in
xor
aaa
fs
inc
pop
and
jno
dec
loop
aaa
mov
aas
xor
stos
dec
pop
push
push
pop
jne
repnz
lret
and
and
pop
cmpsb
xor
jg
pop
movsb
sbb
xchg
fs
push
test
and
andb
in
loopne
jb
orl
jg
jns
std
pop
aas
arpl
xor
mov
inc
sahf
xchg
adc
sbb
fisubrl
addr16
cmp
mov
sub
dec
test
inc
mov
data16
jns
xchg
pop
test
movsl
arpl
xchg
hlt
ret
js
cmp
and
ja
std
call
js
dec
mov
dec
jmp
add
rcrl
adc
mov
add
pop
xchg
or
out
dec
and
jmp
and
int
aam
sahf
sub
shll
xchg
out
pop
lds
shll
jge
mov
lea
pop
aam
mov
or
ss
fcoms
mov
sarl
mov
xor
pop
or
scas
loope
xchg
int
test
stc
and
daa
sub
jnp
add
xor
pusha
inc
mov
leave
call
cwtl
dec
cltd
and
stos
fiadds
sub
ficoms
loop
scas
and
aas
sbb
or
and
popa
mov
adc
test
mov
mov
dec
jp
movsb
xor
sbb
icebp
scas
adc
or
inc
ret
jns
and
fwait
mov
jmp
mov
icebp
mov
sub
es
mov
cmc
je
outsb
inc
ret
icebp
add
and
push
les
cmp
or
lret
mov
push
push
jle
arpl
push
fisubl
sbb
icebp
jns
jb
inc
inc
sub
mov
inc
mov
dec
pop
pop
int3
clc
ret
not
mov
push
in
jge
or
xchg
inc
push
cmp
push
xchg
jl
push
inc
pop
sbb
repz
dec
fldl
orb
jae
mov
push
lods
jmp
js
out
icebp
pop
mov
test
mov
pop
add
mov
jp
and
mov
fs
scas
mov
mov
aaa
fcom
or
and
pop
ds
movsb
jecxz
xor
add
std
je
add
jns
and
mov
push
cltd
addr16
inc
addb
add
xor
jecxz
lods
lret
imul
movsb
lea
sbb
mov
push
popf
push
lret
inc
addr16
or
jp
pushf
das
push
mov
dec
add
out
and
sbb
outsl
lds
popa
insl
rcll
fwait
je
mov
out
icebp
or
cmp
pop
sbb
sbb
ret
dec
aas
imul
std
lods
loop
jge
leave
push
out
jo
mov
add
int
sub
ljmp
cmpsl
adc
out
jns
test
pop
mov
inc
inc
bound
mov
jbe
lret
sub
cld
mov
das
mov
sbb
pusha
adcb
dec
or
test
or
lahf
push
insb
sbb
filds
mov
mov
movsl
in
add
jne
or
or
sbb
pop
inc
mov
dec
or
sbb
arpl
or
xor
flds
cmp
popf
idivl
mov
shl
lods
in
outsb
mov
std
inc
xor
xor
jae
inc
out
inc
and
iret
mov
hlt
lea
mov
add
popf
dec
dec
sub
inc
mov
std
outsl
lds
int
stos
pop
add
cmc
add
jnp
sbb
insb
pop
and
lcall
insb
lret
out
dec
movsl
push
in
out
int
in
inc
das
sbbb
cmp
cmp
or
in
mov
jb
inc
sti
mov
into
jp
enter
sti
ja
stos
jb
sbb
adc
mov
push
cwtl
sub
pop
in
inc
sub
xchg
push
lret
adc
add
sbb
stos
or
and
je
fwait
xor
xchg
xchg
clc
cmp
mov
cli
loope
inc
cli
leave
jbe
jb
adc
jb
aaa
das
test
imul
je
mov
pop
mov
lret
mov
rorl
sbb
dec
pop
in
stos
sar
test
adc
popf
mov
adc
xor
push
xchg
mov
popa
fnstenv
sub
cmp
or
cmp
aaa
jae
fidivs
dec
sahf
ss
bnd
pop
lods
in
sbb
bnd
bound
inc
fsubs
jmp
push
aas
repz
push
xor
and
fisubrs
xchg
sub
fs
ret
bound
xchg
lcall
mov
mov
push
jns
cmp
outsb
xor
into
cmp
and
icebp
cmpsb
mov
sbb
incb
out
in
insb
stos
or
mov
and
fsubrp
dec
nop
mov
ss
int3
xor
mov
fcmovbe
pushf
and
mov
dec
pop
jnp
test
push
sub
ficoml
daa
and
call
enter
and
mov
lahf
jne
cmpsl
adc
loopne
mov
add
ret
xlat
cltd
xlat
in
pushf
test
add
out
fisttpl
jecxz
mov
aam
add
jo
sub
push
xchg
pop
sbb
test
inc
out
loopne
jae
mov
shl
arpl
and
sti
xchg
push
ret
xor
out
cmc
and
addb
lret
int3
add
or
inc
daa
ljmp
sbb
ljmp
sub
fsubl
dec
sub
insl
inc
call
adc
push
andl
and
adc
inc
popf
dec
xchg
in
shlb
and
cmpsb
bound
lret
nop
add
addr16
and
push
aaa
cmp
inc
cwtl
jno
dec
iret
xlat
push
ds
repnz
cmpsl
popf
mov
mov
add
test
rorl
dec
pop
iret
jb
jns
push
out
pop
cltd
in
es
dec
lds
jg
insl
iret
outsl
and
lret
push
mov
popa
js
mov
jp
sub
fsts
inc
leave
in
mov
cmp
add
dec
or
add
lret
pusha
test
sbb
cmp
jge
mov
mov
xchg
adc
jo
outsb
mov
sub
gs
sub
sub
mov
push
and
pop
sub
arpl
xor
test
inc
push
adc
mov
or
and
xchg
jle
push
mov
fldenv
daa
sub
sbb
sub
ss
jns
imulb
inc
pop
pop
out
adcb
lcall
sbb
adc
jmp
xorb
scas
pop
or
or
in
jmp
out
mov
shlb
loope
ret
mov
xor
fildll
sarl
inc
sub
pusha
loopne
cmp
addr16
xor
and
sbb
das
cmp
out
cmp
inc
and
xor
pop
or
push
inc
enter
inc
xchg
inc
mov
jno
push
addr16
hlt
rcl
xlat
stos
sub
jl
adc
mov
pop
jg
mov
pop
pushf
jne
push
cmpsb
scas
mov
cmp
dec
sbb
pop
add
ss
push
add
pop
rcr
in
sbb
jmp
les
and
pusha
test
cmp
cmp
jmp
xor
in
outsl
xchg
ss
repnz
pushf
xor
sti
fistpll
in
cli
push
insl
movsb
mov
pop
mov
stos
ds
int
rclb
mov
popf
cmp
pop
clc
mov
jae
mov
jg
inc
pop
cmp
push
ficoms
sbb
call
cmpsl
js
insb
aaa
lea
into
push
xor
adc
lret
mov
or
and
jp
sub
les
jb
es
sub
test
fdivr
push
mul
mov
aad
cmc
jg
popf
cmc
mov
popa
jge
mov
or
imul
pop
in
and
xor
rcll
out
add
testb
lret
ret
lods
in
mov
xchg
mov
mov
and
and
fs
loopne
push
xor
cli
sbb
outsb
jmp
sbb
push
lcall
enter
es
pop
lcall
xchg
adc
xorl
lret
fsubs
lret
int
out
add
pop
std
cmp
add
xchg
xchg
cmp
dec
scas
sbb
add
mov
jmp
pop
fbstp
test
shrb
push
les
cltd
ret
adc
imul
jbe
jbe
dec
jbe
test
xor
xchg
mov
aam
mov
test
addb
inc
or
mov
push
out
int
in
inc
push
xorb
xor
dec
lea
sbb
adc
jge
lcall
stos
xchg
xchg
fcompl
outsb
in
and
out
mov
pushf
sbb
mov
push
dec
test
fadd
subb
sub
xor
data16
or
pop
sbb
in
or
cmp
std
outsl
pause
xor
mov
add
sub
mov
dec
adc
clc
push
das
dec
add
xchg
lret
sbb
mov
imul
xlat
inc
mov
push
mov
push
aas
aas
and
add
push
push
lahf
fwait
xchg
imul
mov
cmp
jb
fisubl
jno
enter
xchg
inc
sub
and
xchg
mov
add
js
add
cmc
xchg
jns
pop
jg
mov
xlat
xor
ja
bound
cmp
xchg
pop
xlat
pop
pushf
push
xor
js
gs
sbb
jmp
popf
insl
ret
pop
jno
xchg
push
scas
mov
out
dec
decb
jle
mov
xchg
adc
or
pop
push
shrl
pop
icebp
mov
leave
push
jae
ja
je
in
stc
jge
dec
or
movsb
xorb
inc
dec
mov
dec
sbb
inc
cmp
mov
das
shrl
scas
lods
inc
pop
sub
dec
scas
dec
xor
fcoml
cli
xor
inc
test
jbe
cmpsl
or
lret
sbb
or
push
insl
dec
or
in
jo
imul
add
xor
adc
and
dec
pop
in
or
jle
fs
mov
pop
mov
scas
inc
adc
les
stc
push
negb
pop
add
mov
jo
push
lcall
dec
lret
popa
lcall
loop
mov
mov
popf
mov
or
jl
push
push
mov
out
ror
ja
ljmp
rcl
daa
lea
mov
cmpsb
push
cmp
sub
fsub
rcll
bound
faddp
fsubrl
notl
add
push
pusha
and
les
adc
shl
adc
in
fsubr
scas
loope
das
std
insl
mov
lcall
dec
inc
inc
cmp
xchg
rcrl
mov
cmp
sbb
xlat
jmp
lods
add
test
mov
or
dec
clc
test
jnp
in
fcmove
imul
cmp
cmp
cmp
xor
cld
push
jg
xchg
sub
jns
inc
or
push
adc
loop
push
adcb
push
sub
push
inc
push
cwtl
mov
dec
movsl
ja
pop
mov
lret
loopne
lods
or
adc
mov
mov
or
loopne
push
sbb
iret
xchg
add
and
stos
jecxz
inc
cli
or
aas
or
pop
mov
jge
jg
lcall
lret
sbb
andb
cmp
ljmp
mov
lods
cmp
imul
jle
adc
les
pop
in
mov
sbb
push
inc
loopw
inc
mov
das
fldt
pop
and
dec
je
lahf
jl
mov
fucom
ror
mov
xchg
sbb
xor
jmp
cmp
cli
movsl
stos
leave
daa
add
cltd
mov
inc
daa
sbb
xchg
xchg
clc
out
lcall
arpl
icebp
and
mov
xchg
sti
mov
dec
loope
mov
and
xor
pushf
mov
call
and
mov
add
add
decl
pop
sahf
jnp
and
in
xor
xchg
mov
mov
shll
lods
push
xchg
dec
pop
pop
insl
and
cmp
insb
js
sub
cmpsb
dec
mov
sub
imul
fs
sub
mov
int
test
rorl
push
lea
imul
or
xor
cmc
dec
mov
sarb
xchg
out
inc
stos
push
shrb
xor
add
or
cmp
dec
enter
add
mov
add
das
sbb
mov
test
pop
xor
or
insl
xor
inc
iret
clc
xchg
lock
pop
loop
pop
js
inc
push
stc
icebp
mov
xchg
adc
jns
hlt
mov
push
xor
or
xor
inc
imul
daa
adc
and
into
sbb
ror
sbb
cmpl
repnz
out
bound
insb
mov
adc
pop
ret
iret
cmpsb
fildll
stc
push
movsl
xor
dec
push
xor
add
inc
xlat
andb
mov
fcoms
pop
add
movsl
fadds
rolb
scas
out
aad
sub
mov
repnz
jne
ja
iret
fiaddl
out
mov
das
mov
pop
jo
pop
and
enter
pop
jno
pop
or
in
gs
in
sub
push
xor
sub
into
add
push
add
out
scas
jb
jg
xchg
jbe
in
pop
dec
fnsave
dec
js
out
outsl
arpl
sbb
divl
push
mov
jb
or
ficoml
repz
inc
mov
pop
push
mov
push
in
pop
jae
leave
inc
fdivs
test
icebp
xchg
mov
cwtl
dec
xchg
movsl
add
popf
std
xchg
std
add
cmpsl
pop
stos
jb
scas
or
bswap
scas
add
popa
adc
mov
mov
fs
jg
lea
outsl
aad
dec
mov
push
xchg
nop
xchg
mov
sti
fmuls
repnz
jle
mov
push
sahf
xchg
mov
jbe
int
jo
dec
icebp
pop
nop
mov
subl
inc
enter
adc
test
pop
data16
lock
iret
lret
cmpsb
fisubrs
stos
in
push
pusha
push
mov
and
jae
inc
aaa
pop
pop
fistl
or
mov
jb,pn
test
sahf
jno
outsb
icebp
jno
movb
cmp
jns
fcomip
cwtl
sbb
or
dec
sub
push
pop
mov
sbb
movsl
imul
test
int3
sbb
jb
add
stos
fidivrs
addr16
std
mov
add
mov
mov
lea
sarb
lcall
movsl
adc
rolb
es
and
punpcklbw
ret
test
inc
ljmp
jo
ja
add
push
rolb
iret
sub
xchg
stc
dec
int3
lds
adc
aam
jo
lea
stos
push
pop
add
mov
test
ficoms
mov
xchg
sbb
sbb
movsb
mov
cmpsl
push
lea
and
xor
popf
jmp
pushl
into
xchg
movl
xor
lock
dec
dec
push
lcall
pop
xor
lahf
test
cmp
mov
sbb
and
adc
jge
cmpsb
adc
xchg
inc
andb
je
jg
ret
pop
xor
push
nop
loope
xor
out
loopne
insb
pop
inc
fdiv
dec
data16
in
inc
ret
xchg
sub
cmp
xor
out
pop
mov
add
mov
aaa
repnz
jns
lret
sbb
dec
dec
rcrb
adc
scas
stos
out
cmp
mov
fdivs
mov
push
or
or
fwait
sbb
xchg
ficompl
insb
cmpl
jg
inc
sahf
aam
nop
aam
fisubrs
mov
aas
jmp
jl
pop
fnsave
ljmp
adc
fisttpl
mov
scas
out
test
push
imul
sub
stc
mov
cli
testl
ret
lods
inc
jecxz
mov
xor
addl
jmp
cmc
cmp
sub
sbb
outsl
xchg
pop
mov
sub
mov
inc
es
sub
mov
push
push
jns
test
ret
or
xor
xlat
shlb
pop
mov
loopne,pt
and
pop
pop
inc
mov
inc
mov
in
cmp
push
outsl
aaa
aaa
inc
jp
push
outsl
std
aad
pop
movsb
inc
mov
mov
jge
push
scas
aam
add
sahf
cmpl
jl
pop
les
hlt
or
shlb
xor
lcall
pop
sbb
clc
icebp
das
dec
xor
in
call
or
and
fiadds
mov
scas
loope
lds
hlt
xlat
in
cmpsb
push
insb
hlt
out
in
sbb
sub
push
jp
and
jo
sbb
rorb
cmp
sub
push
gs
shrb
push
mov
and
sbb
stos
fsubrl
repz
jecxz
mov
loope
jl
pop
pop
jmp
mov
sub
sub
rol
cmpl
dec
or
inc
rcr
ret
into
jmp
in
cmp
ds
pop
add
cmp
and
and
or
mov
mov
xor
fimuls
pop
loop
mov
js
bound
int
jmp
sbb
mov
cwtl
inc
sbb
jne
mov
loopne
sub
adc
mov
jns
xchg
sbb
cltd
inc
xchg
out
cmpb
xor
jbe
xor
in
add
ss
or
aaa
push
pushf
inc
jge
cld
subl
roll
adc
push
adc
pop
test
push
cwtl
dec
movsb
add
scas
xchg
and
dec
int
add
adcb
sub
jle
xor
pop
mov
ljmp
icebp
and
ret
dec
mov
into
ljmp
mov
cmp
adc
add
cmpsl
pusha
and
adc
xor
sbbb
cs
lods
push
adc
cmp
pusha
das
jle
and
dec
cli
jmp
ja
cwtl
rcl
or
xor
aaa
aas
stos
fisubrs
dec
sbb
cmp
outsb
cld
push
jns
imul
sub
imul
or
xchg
jge
adc
xor
in
mov
cli
sub
outsl
imul
dec
loope
inc
mov
push
fistpl
pop
mov
negb
sbb
cmpl
sbb
xchg
movups
and
push
loopne
or
xor
dec
fsubrs
ja
es
add
mov
enter
popa
rcrl
les
mov
pop
lods
in
rcrb
push
lcall
dec
inc
inc
cmp
mov
inc
arpl
mov
fmuls
and
sahf
mov
out
mov
js
scas
mov
sbb
cmc
xchg
je
iret
stos
fcomps
insb
sub
mov
js
daa
mov
out
test
je
push
inc
fs
cmp
out
inc
xor
mov
pop
jge
sub
inc
mov
mov
push
jns
dec
sbb
imul
pop
fbld
jl
and
clc
mov
sahf
repnz
mov
mov
add
aaa
mov
xchg
mov
xchg
ret
roll
jmp
arpl
cmp
mov
sbb
mov
repnz
insb
jle
xor
ret
mov
jmp
mov
js
imul
jl
inc
lds
lahf
push
aas
out
inc
adc
lods
mov
into
stc
pop
add
mov
and
or
pop
xchg
inc
adc
xor
dec
mov
sub
loopne
out
ja,pt
fnstenv
xor
rorb
movsb
push
mov
inc
imul
sti
inc
cmp
inc
pop
push
or
lock
push
subl
dec
add
inc
es
xchg
fldt
pop
pop
jmp
ret
cmpsb
iret
imul
hlt
pop
pop
mov
mov
out
cmpsb
mov
jno
popa
lods
xor
test
jo
mov
sub
xchg
or
push
inc
add
or
scas
jbe
add
mov
in
frstor
shll
mov
xor
lahf
mov
mov
add
scas
pop
pop
push
inc
cltd
ja
mov
cli
sub
fwait
adc
inc
jl
inc
lods
and
dec
out
or
cmp
mov
nop
repnz
mov
mov
int
jg
cltd
fcompl
dec
test
addr16
or
xor
push
idivl
sub
ret
out
fisubs
lods
or
movsb
inc
xor
mov
xor
mov
sub
insl
fcoms
shrb
jb
cmpsl
ljmp
enter
das
dec
add
xor
mov
iret
dec
icebp
pop
xchg
and
inc
test
stos
sti
ret
adc
mov
mov
mov
loope
popf
add
mov
push
xor
popf
idivl
fnstenv
mov
in
loopne
push
sbb
or
and
xchg
cmpsb
call
sub
mov
cs
jmp
dec
gs
and
mov
aam
jp
pop
or
jbe
aam
scas
cmp
int3
adc
xor
sub
xchg
adc
push
inc
popf
ficoml
pop
mov
into
jns
lods
push
dec
add
and
inc
in
push
push
fbld
push
xchg
enter
xchg
icebp
cmp
inc
mov
dec
jns
and
pusha
insl
ret
mov
mov
or
jg
test
emms
int
xchg
sbb
add
mov
ljmp
adc
cmp
mov
stos
mov
push
test
sbb
xchg
enter
xor
je
hlt
cld
inc
data16
test
pop
push
jns
cli
js
icebp
sub
repz
dec
and
cmp
cmp
dec
adc
push
xor
mov
adc
push
imul
pop
lret
fldl
aas
stos
out
rorb
fnstenv
lahf
loop
in
data16
dec
jge
je
push
lods
clc
dec
inc
sti
hlt
outsl
push
jmp
inc
dec
icebp
outsb
out
xchg
push
fstps
mull
lock
inc
push
xor
fucomi
filds
add
ss
sbb
dec
fwait
mov
push
adc
mov
mov
pop
in
mov
sbb
dec
pusha
xor
out
xor
mov
mov
mov
lods
test
push
dec
mov
imul
scas
jmp
out
inc
cmp
ficomps
adc
mov
leave
sbb
mov
lret
cli
sti
mov
mov
xchg
mov
leave
mov
xor
push
lahf
jmp
shrl
pop
cld
inc
adc
leave
and
sbb
in
inc
or
and
shrl
mov
sub
popf
shlb
out
push
negl
lds
mov
shlb
pushf
jns
mov
ljmp
mov
out
pop
jns
sbb
js
dec
jne
inc
push
add
icebp
xor
inc
jmp
xor
mov
ljmp
cmpsb
stc
jae
jecxz
mov
mov
lock
ds
mov
dec
inc
ror
and
hlt
out
roll
mov
or
push
xlat
test
pop
ss
mov
daa
test
sbb
addr16
stos
push
push
cmp
dec
mov
push
dec
ss
add
cld
cmp
repnz
decb
std
mov
dec
shrb
sub
dec
dec
dec
daa
mov
push
mov
push
lret
lcall
popf
cld
dec
andb
sub
sbb
fld
cmp
mov
data16
aaa
repz
add
pusha
test
gs
ja
out
outsl
inc
or
jle
push
mov
and
imul
cwtl
xchg
les
mov
aas
dec
outsl
pop
repz
add
arpl
xor
sbb
xchg
stc
mov
or
mov
adc
js
mov
stos
inc
pusha
cmove
insb
repz
iret
stc
dec
mov
in
cmp
aad
test
inc
out
dec
leave
inc
dec
rcll
movsl
daa
test
rclb
lret
cmpsb
ljmp
pop
movsl
int3
cld
cwtl
add
loopne
push
sub
push
dec
out
pop
jbe
xchg
mov
out
and
push
push
popf
add
ficoms
dec
and
idivb
out
or
push
xor
inc
bound
sub
cmp
lcall
add
sub
mov
sbb
mov
clc
mov
or
sbb
jmp
pop
dec
sti
mov
dec
in
mov
cmp
push
outsl
mov
sbb
nop
repnz
push
jae
mov
or
sarb
test
xor
ret
lods
cmp
cs
dec
std
sbb
pusha
test
in
xor
or
dec
mov
jle
ret
test
mov
push
aas
mov
out
cmp
faddl
stos
in
jb
mov
xchg
sub
jp
mov
mov
jle
mov
outsb
push
adc
pop
xor
xor
sub
sti
adc
lock
insb
repnz
mov
inc
jae
scas
xchg
repnz
setbe
add
or
xor
addr16
adc
mov
cmp
in
sub
or
dec
push
sbb
sbb
xor
jmp
scas
adc
rcr
into
xchg
mov
jne
das
in
jbe
jp
sbb
das
pop
xchg
adc
mov
cmp
mov
lcall
cmp
mov
xor
and
xorl
cmc
inc
mov
or
out
xlat
pop
in
and
sub
mov
mov
pop
les
xchg
add
addl
arpl
xor
push
add
mov
xchg
repz
in
in
popa
in
mov
dec
daa
enter
mov
xor
das
adc
int
fcoms
fstl
scas
xchg
neg
icebp
sub
lret
push
aam
push
fwait
insb
jno
movsb
icebp
mov
popf
sti
xchg
mov
xor
mov
out
sub
and
aas
dec
push
data16
loop
xchg
jle
jmp
pop
popf
pop
inc
xor
testb
mov
add
dec
push
iret
pusha
testl
jg
pop
filds
dec
sbb
enter
aad
mov
lods
adc
icebp
outsb
cmp
push
mov
out
leave
pop
mov
xchg
jge
cld
icebp
lods
in
int3
jns
ror
or
les
nop
add
mov
fcoms
aam
adc
pop
lock
lods
inc
nop
dec
inc
xor
add
mov
mov
cmp
out
cmp
add
out
fmul
push
adc
aaa
dec
pop
pop
montmul
cmpsb
inc
lahf
sbb
sub
add
mov
jge
stc
mov
mov
or
sti
sbb
pop
ret
cmp
add
jg
negb
lea
push
and
jp
jne
jb
scas
cld
sbb
xchg
cli
adc
das
mov
sahf
cmp
and
add
xor
push
sarb
xor
lea
and
inc
xlat
jae
cmp
cltd
fwait
aam
mov
sbb
stos
dec
xor
rolb
insb
clc
sub
inc
cmp
pop
push
mov
mov
push
scas
je
adc
arpl
lea
test
adc
mov
stos
adc
icebp
psrld
in
test
adc
xor
jne
insl
jg
cmp
pop
lock
or
daa
lds
xor
shl
aad
stos
popl
jp
or
xchg
xlat
inc
test
repnz
call
cmpsl
pop
sbb
gs
fadd
mov
xlat
add
enter
ss
mov
add
mov
dec
enter
scas
jp
mov
data16
in
sti
fiadds
add
xchg
fsubrp
mov
dec
inc
add
fwait
imull
out
xor
xor
jge
mov
out
hlt
mov
scas
pop
test
sbb
outsb
shr
sub
loop
jecxz
popa
adc
mov
mulb
fwait
inc
ret
cwtl
push
outsl
sub
and
ds
pop
test
dec
adc
loopne
dec
mov
nop
sbb
das
das
xor
clc
sub
psubq
fcmovnu
fistl
cmp
inc
cmpsb
jg
dec
add
sub
popf
fs
fstl
cmp
hlt
das
sbb
xchg
lcall
push
lds
push
cmp
mov
es
std
push
mov
sbb
outsb
sbb
pop
jne
xor
mov
hlt
sbb
mov
lea
fbld
cmp
mov
adc
and
and
mov
testl
inc
jg
leave
mov
cmp
aaa
jge
fisubrs
adcb
cltd
dec
sub
cmp
xchg
daa
stc
or
jne
fsub
in
add
mov
jbe
sbb
push
cli
sahf
test
cwtl
inc
out
call
xlat
lds
jo
sub
mov
jmp
testl
js
sub
ficoml
shll
lea
inc
adc
adc
leave
mov
jno
test
in
daa
and
test
inc
push
rcrb
data16
xchg
loope
in
imul
pop
mov
icebp
mov
rolb
jge
fidivl
xor
mov
xor
test
add
mov
rorl
movsb
xchg
xor
and
push
imul
loopne
xchg
inc
xlat
or
jns
push
lcall
pop
dec
lock
lret
arpl
lods
dec
sbb
in
lret
clc
jmp
mov
inc
rcl
fnsave
call
dec
imul
call
out
xchg
sahf
cli
out
push
sbb
scas
mov
clc
dec
loopne
sub
pop
lods
cs
xchg
xchg
ljmp
clc
clc
es
push
inc
and
inc
repz
mov
mov
cmp
lds
scas
icebp
lret
sti
jno
loop
push
jne
mov
dec
or
pop
mov
mov
inc
push
imulb
andb
inc
inc
mov
cltd
mov
mov
add
adc
in
push
jecxz
xchg
stc
repnz
mov
cltd
inc
lods
fbld
pop
jne
mov
fdivs
mov
or
lea
or
or
cltd
imul
arpl
test
jmp
mov
mov
adc
and
cld
pop
or
xor
repz
mov
dec
aaa
sub
mov
xor
int
xor
in
cmp
test
lahf
clc
xchg
enter
pusha
orl
lahf
cwtl
lcall
movsl
imulb
xor
dec
ret
or
adc
or
cwtl
sbb
movsl
test
cmp
inc
in
stos
sti
mov
inc
aaa
enter
scas
push
jp
mov
in
sub
sub
jnp
jmp
inc
mov
test
aad
outsb
push
in
sbb
int3
fwait
adc
mov
adc
dec
or
lods
add
fisubrs
stos
loope
loop
shrl
or
popa
sbb
xchg
xorb
lcall
cmpsb
mov
cmpb
testb
dec
cmc
push
ds
jecxz
jmp
and
fstp
pop
loop
adc
xor
mov
push
out
fistps
into
xchg
lret
push
mov
or
cmp
subb
mov
ret
pop
aaa
inc
aaa
pop
ret
and
test
loopne
jge
adc
addr16
xchg
mov
fidivrl
push
ret
fiadds
add
cmp
jge
jl
xchg
movsb
sub
stc
add
inc
mov
sti
sbb
pop
jl
iret
popa
je
loopne
outsl
and
or
mov
jo,pn
stos
mov
ja
adc
or
jmp
inc
sbb
icebp
mov
outsl
insl
js
add
sbb
xor
mov
fwait
mov
pusha
push
loopne
adc
cmp
call
out
adc
out
add
xor
mov
push
dec
mov
fstps
sbb
cmp
addl
push
fs
jmp
pop
loop
jmp
and
bswap
pushf
cmc
int
es
icebp
jns
or
push
xorb
fsubrs
mov
mov
mov
jmp
mov
jb
cltd
mov
jg
cli
add
loop
adc
jbe
cmp
pop
in
scas
iret
xor
or
test
push
in
loopne
adc
push
dec
loope
and
int
imul
rcl
lea
fwait
loope
jecxz
imul
pop
cmpsl
push
mov
pop
xchg
pop
sti
sbb
jp
imul
pusha
mov
cmp
out
cld
mov
std
nop
jb
lcall
push
sub
ret
lea
in
lds
jmp
fs
jecxz
xchg
cmp
mov
pop
cs
jno
sub
daa
insl
ds
pop
insl
or
and
jnp
pop
push
fs
aad
push
sub
in
xchg
cmp
xor
sti
insb
stos
lods
gs
mov
inc
or
cmp
push
loopne
movsl
ds
xchg
cmp
ja
icebp
pop
getsec
mov
and
adc
bound
adc
adc
xor
xchg
or
in
adc
or
mov
or
xor
mov
cmpsl
fcoms
inc
rcrb
mov
ja
hlt
test
fadd
pop
jle
xor
push
push
xor
mov
inc
repnz
add
jl
mov
stc
adc
mov
sub
imul
xor
sub
xor
or
sbb
insb
in
mov
dec
cmp
sbb
sub
and
mov
pop
dec
add
test
rorb
enter
sub
pop
addb
iret
mov
inc
popf
mov
cmp
xchg
and
and
or
popf
fs
mov
sar
nop
mov
jg
fdivr
jbe
rcll
pop
inc
es
imul
sbb
ljmp
mov
xchg
je,pn
push
movsl
jl
inc
enter
pop
pop
mov
mov
idiv
aaa
shl
popf
jg
fmul
dec
sbb
mov
dec
stos
inc
pop
iret
nop
adc
jne
lods
test
gs
or
enter
movsl
sbbl
movsl
or
pop
scas
mov
iret
cwtl
adc
fsubrs
cs
xchg
push
mov
shr
outsl
clc
jbe
sbbl
push
out
gs
adcb
rol
insb
loopne
clc
fsubrl
cmc
hlt
aaa
btc
movsb
cs
loopne
in
dec
pop
xchg
ds
push
mov
adcl
adc
mov
icebp
popa
mov
loope
add
fisubs
sbb
sbb
push
loop
mov
push
xchg
lds
mov
hlt
ret
inc
push
je
test
pop
push
add
jg
push
cli
cmpsl
mov
minps
and
inc
mul
icebp
inc
or
pop
faddp
mov
pop
and
mov
lret
sahf
out
pop
cmpsb
es
cmp
xor
xchg
rcrl
mov
mov
sub
movsl
add
out
sub
add
lahf
mov
and
lods
xor
cmp
fidivs
mov
data16
jmp
mov
repnz
push
push
fmuls
loope
cli
jbe
lods
or
jge
jecxz
aam
sub
movb
mov
pop
arpl
mov
scas
in
dec
pop
fcompl
mov
ret
pop
mov
mov
cmp
jmp
rclb
sbb
push
fadd
push
jg
pop
xchg
bound
mov
add
out
cmp
mov
imull
add
xchg
pop
push
mov
xchg
clc
js
loope
aad
gs
push
and
push
repz
pop
mov
jecxz
push
mov
test
pop
es
repz
gs
outsb
loope
jb
sbb
jmp
popf
cs
addr16
je
ss
mov
push
and
in
fnstsw
daa
cltd
ljmp
int
push
add
imul
or
out
xchg
push
sbb
je
je
subb
push
out
jmp
mulb
dec
adcb
leave
in
push
mov
xor
push
icebp
or
out
lods
xchg
mov
or
aaa
sbb
int
mov
jg
dec
mov
iret
popf
call
mov
adc
sbb
xor
fnstenv
inc
mov
sbb
mov
xchg
into
imul
scas
sub
mov
pop
movsl
aam
pop
xchg
dec
dec
aad
pop
xor
pop
sbb
xor
es
jnp
cmp
xchg
lock
test
fs
loope
dec
push
pop
pop
fldt
clc
repz
inc
mov
iret
leave
sti
cmc
addb
icebp
mov
cli
sahf
dec
mov
movsb
lods
and
xchg
mov
in
xchg
pop
sbb
arpl
mov
stos
mov
dec
mov
xchg
adc
xlat
jge
dec
and
das
mov
add
mov
inc
aam
sbb
aaa
mov
xchg
iret
loopne
pop
ret
stos
repnz
loop
insl
cmp
jp
popa
iret
dec
xchg
bound
inc
imul
dec
int
sbb
fstl
mov
negl
nop
cmpsb
into
leave
cli
or
stc
mov
repnz
adc
push
lods
test
sub
add
mov
out
sbb
in
lret
sub
out
fstp
cmp
stos
stos
divb
xor
mov
test
jne
and
lcall
enter
mov
ja
push
jle
lock
pop
push
enter
stc
lock
test
or
pop
aad
lods
icebp
jge
repnz
lret
add
push
xchg
aam
jmp
js
cwtl
pop
data16
daa
icebp
std
xchg
icebp
dec
mov
ja
jae
into
adc
dec
mov
push
out
mov
dec
xor
mov
movsl
into
adc
loop
int
clc
fs
stos
test
mov
sbb
xor
pop
inc
scas
xorb
jmp
cld
jl
jnp
test
jnp
ja
fpatan
ja
mov
sbb
inc
cmc
aad
cwtl
add
repz
or
pop
pop
add
push
sahf
mov
push
sub
lods
data16
mov
test
mov
fsubrp
jg
aam
mov
cmpsl
daa
dec
push
loope
in
mov
cld
jbe
call
pop
xlat
lods
repz
sub
xchg
mov
insb
push
mov
jp
dec
mov
loop
cmp
jae
xchg
es
flds
repz
in
pop
bound
lret
lret
cmp
fsubrl
xor
cmp
xchg
setns
push
sub
adc
ja
mov
mov
add
push
in
sub
out
not
mov
repz
xchg
xchg
in
xlat
ret
subb
sub
insl
aam
sbb
xor
popa
sub
ja
lock
xchg
jp
dec
cmp
cmc
add
pop
ja
shll
loope
mov
dec
mov
inc
inc
lock
xchg
push
jecxz
mov
mov
dec
jne
push
fistps
out
mov
sbb
cmp
dec
repz
js
dec
rcl
and
inc
xor
pop
shrb
mov
push
add
es
adc
push
dec
mov
cvtdq2ps
inc
dec
fsubrs
mov
and
ret
lcall
movb
stos
push
and
push
lock
scas
mov
push
std
mov
sbb
adc
mov
jge
xor
aam
push
fisttps
mov
rorl
dec
and
mov
mov
mov
lcall
fisttpl
inc
in
push
or
mov
cmp
xlat
add
inc
sar
pop
andl
mov
mov
jae
add
stos
inc
aaa
jle
jmp
mov
jle
xchg
lcall
mov
pop
jecxz
jg
cmp
mov
addl
mov
out
push
dec
ja
add
pop
rorl
push
mov
mov
pusha
jno
xchg
xor
imul
and
subl
xor
push
out
push
xorb
test
pop
mov
sub
mov
cli
out
fwait
stc
push
mov
push
ljmp
stc
or
push
mov
jge
in
xchg
jno
push
scas
outsl
ret
ds
rorl
shl
inc
fidivrs
das
fsub
aam
xchg
cmp
push
test
sub
das
and
ds
dec
and
mov
sbb
inc
stc
pop
jmp
sbb
sub
push
push
jns
mov
jmp
mov
sbb
push
in
jnp
pop
sbb
cmp
pop
xor
repnz
data16
cpuid
fnsave
sbb
sahf
fdivp
dec
adc
iret
xor
cmp
lds
jg
into
mov
ljmp
movsl
mov
jns
cmp
scas
add
and
and
sub
inc
sub
sub
push
dec
and
inc
add
call
or
dec
sub
jmp
xchg
sub
sbbb
out
or
leave
mov
sub
ss
mov
cmp
test
sbb
into
ljmp
xlat
sti
xor
inc
adc
in
mov
cmp
negl
jb
sbb
lods
mov
or
lcall
dec
cs
test
mov
cmpsl
mov
mov
or
jb
dec
and
add
out
mov
insb
movsl
test
in
jp
lret
orb
rcrl
punpckhdq
pop
jo
stos
jl
push
push
add
mov
fucom
mov
mov
xchg
stos
cmp
insb
or
mov
jp
clc
xor
dec
push
pop
arpl
scas
bound
push
push
cmp
sub
jbe
push
hlt
sbb
pusha
jp
addr16
pop
pop
mov
test
cwtl
pop
mov
sub
pop
pop
ljmp
and
out
xor
fistl
pusha
mov
and
mov
sbb
cmc
xor
std
out
iret
out
or
or
popa
push
sub
adc
push
sbb
sbb
or
sbb
ja
insl
xor
fmul
inc
fdivl
jg
mov
outsb
jb
lea
fiaddl
push
fs
push
fwait
xor
pop
jmp
mov
jbe
into
ds
xor
dec
mov
ja
std
and
lock
or
pop
sub
test
push
sbb
jns
or
and
cmp
or
out
pop
rcrl
movsl
mov
add
adc
mov
mov
push
enter
xor
add
cmp
out
imull
adc
pop
mov
and
testl
stos
cmpsb
jp
stc
adc
call
hlt
lcall
pop
adc
add
xchg
pop
cs
mov
inc
popa
fnstsw
lods
daa
sub
push
test
push
or
jns
sub
aaa
inc
jmp
or
in
fs
je
jl
movsb
pop
xchg
inc
call
loop
cmpb
xor
mov
push
dec
lods
dec
test
sahf
jno
cli
add
mov
test
test
pushf
addr16
jno
faddl
idivb
insb
aaa
dec
add
test
lods
and
pop
je
repz
or
jmp
mov
lret
in
aas
xchg
movsl
cmp
mov
cltd
shll
lods
fs
mov
mov
and
insb
cmpsb
lret
fs
in
cmp
insl
mov
inc
bound
test
sub
adc
jge
popa
xor
sub
or
xchg
lds
shll
xchg
add
das
pop
bound
js
inc
push
mov
mov
push
clc
push
shrb
cmpsl
test
jg
sub
call
mov
dec
dec
mov
bound
mov
out
outsl
mov
inc
in
xor
adc
arpl
sbb
dec
fwait
bound
inc
and
xor
push
movsl
sarl
loopne
push
mov
icebp
lret
adc
adc
fstl
pop
and
arpl
add
cmp
or
rclb
ljmp
aad
pop
hlt
adc
dec
lods
adc
push
test
cmp
jae
movsl
or
inc
mov
inc
lods
cwtl
add
js
xchg
adcb
fs
gs
pop
mov
pop
les
das
sar
cltd
imul
sub
push
pushf
mov
aaa
xor
jge
xchg
dec
pop
lcall
aam
dec
rorl
stc
sub
ret
jae
ja
mov
sub
pop
data16
xchg
sub
inc
pop
push
dec
aad
xlat
bnd
mov
stc
adc
jns
das
fucomi
inc
xor
jmp
sub
aaa
ljmp
xchg
inc
imul
cmp
hlt
cmpsb
inc
and
inc
xor
lods
pop
add
negl
call
mov
inc
push
lcall
mov
xorl
mov
jae
cmc
mov
or
cmp
aad
lods
jge
test
jbe
out
pop
repnz
das
ret
jge
xor
out
pop
jg
jo
add
rcr
sbb
repnz
sub
pop
mov
shlb
push
jl
jmp
aam
pushl
inc
ror
and
xchg
mov
pop
cmpb
outsb
aaa
and
clc
cmpsl
aam
rorb
push
and
jnp
leave
fdivr
cmp
popf
addr16
and
orl
or
mov
dec
xor
repnz
cmpsl
jno
xor
push
adc
cmpxchg
sub
aas
outsl
pop
xchg
incb
xchg
inc
mov
cmp
movsb
test
xlat
or
mov
dec
cmpsl
outsl
xor
add
ret
popa
sub
mov
lret
mov
lods
not
jbe
aas
mov
and
mov
xor
fldt
jne
pop
testb
mov
cmp
nop
std
adc
aas
test
outsl
int3
arpl
and
fimuls
aad
add
add
push
pop
fwait
js
out
jns
or
negb
movsb
dec
cmp
add
cltd
push
test
push
jae
sti
std
divl
addr16
in
xor
sbb
push
cs
mov
je
mov
iret
insl
mov
pop
dec
mov
pop
loop
fs
ds
fxtract
mov
and
fstp
call
mov
or
lea
xor
dec
inc
scas
xchg
es
pop
xor
jecxz
insl
scas
and
rorl
ficoms
lods
push
das
xlat
mov
cmp
lds
sbb
jne
push
je
loopne
xchg
iret
outsl
pop
movsl
add
pop
or
or
push
sub
jmp
je
outsl
lea
dec
push
cmp
pushl
xchg
inc
dec
lds
in
movsl
pop
les
pop
mov
adc
lahf
and
push
popf
imul
sub
mov
arpl
popa
es
pushf
addr16
push
xchg
add
and
out
adc
pushf
es
or
dec
cmc
flds
mov
push
add
pop
xchg
call
jge,pt
cmp
add
fldenv
cld
cmp
dec
popf
inc
sub
fdiv
stc
call
and
xor
rcrl
out
out
xchg
push
lret
mov
mov
sbb
xor
icebp
push
mov
sub
mov
pop
pushl
dec
mov
les
cld
lock
fwait
les
jne
mov
in
mov
aad
push
scas
or
mov
sbb
xchg
negb
push
iret
popf
test
in
xchg
pop
xchg
fnstsw
jo
sbb
push
aad
es
aad
imul
push
pop
ljmp
test
jecxz
in
das
or
jp
add
jnp
pop
xchg
loope
inc
sbb
or
gs
cmp
jb
xchg
movsl
ret
nop
fninit
int
pushf
and
cmpsl
sarl
mov
in
dec
jo
xchg
adc
and
mov
movzwl
sbbb
dec
jl
stos
into
les
mov
cmp
push
sbb
xor
adc
imul
xor
mov
jae
adc
in
mov
scas
dec
sbb
lret
mov
or
push
loop
cmp
xchg
das
imul
dec
pusha
pop
push
add
dec
xor
daa
inc
cli
repz
mov
scas
lods
fbstp
lret
lret
add
test
sub
xchg
sub
jbe
in
push
shrl
dec
and
shrb
or
push
xor
cmp
decl
mov
inc
loop
fidivrs
fsub
or
in
cli
xchg
out
pop
mov
orb
add
sub
dec
lods
and
mov
add
bound
fisttpll
push
jns
test
jae
push
pop
jno
mov
fwait
out
push
mov
xor
sub
test
insb
push
mov
dec
subl
out
imul
rorl
adc
sahf
pop
push
dec
outsb
insl
mov
lock
rcrb
arpl
add
in
or
push
and
and
cmp
pop
fdivr
addr16
outsb
push
lods
cwtl
or
jnp
les
ret
inc
or
ret
cmc
adc
cwtl
sub
xor
stc
push
pop
push
cs
and
pop
movsb
dec
mov
cwtl
xor
rorb
imul
cwtl
mov
ds
xor
jbe
mov
iret
in
add
hlt
lcall
lret
repnz
iret
dec
jp
add
fwait
push
repz
xor
jb
or
fwait
shr
pop
pop
mov
filds
ret
xchg
adc
lcall
jne
imul
aad
stc
aam
jae
insl
arpl
cmp
adc
into
push
sbb
ljmp
mov
jne,pn
pop
repnz
add
jo
insb
cs
stc
int
xchg
sbb
call
pop
dec
pop
dec
xor
in
les
jbe
out
jno
mov
shlb
les
xchg
arpl
pop
loop
popa
push
add
jge
fimull
cmc
pop
add
cmp
lret
push
cltd
add
cmp
pop
popf
push
xor
lcall
inc
data16
dec
mov
clc
cmp
test
stos
adc
mov
jnp
dec
mov
clc
cmp
push
inc
push
fildll
adc
lret
add
push
jg
jnp
adc
test
mov
xchg
insl
and
xor
test
mov
ret
mov
jge
fsubrl
or
imul
pop
jno
mov
push
shlb
nop
xor
sub
sub
jl
cmp
push
pop
xchg
out
les
mov
outsb
inc
enter
push
add
mov
push
shlb
cmpsb
cmpsb
adc
or
aad
clc
mov
rorl
cmc
test
movsb
add
cmp
adc
lcall
cmp
jo
fnstcw
fwait
jge
ljmp
nop
lods
and
aas
mov
jmp
sbb
je
push
cmpb
stc
idivb
daa
testb
adc
fwait
or
rorb
mov
insl
test
je
imul
mov
cs
xchg
fisttpll
or
test
das
ljmp
adc
ja
test
dec
fsubl
jge
cmp
call
mov
add
lret
jnp
mov
mull
fisubrs
inc
fistpl
mov
std
mov
in
std
in
lret
dec
fildll
dec
jmp
add
xchg
add
aad
test
test
test
xor
pushf
clc
jne
in
mov
pop
push
push
nop
pop
adc
or
xchg
adc
xchg
aam
movsb
pop
outsl
test
mov
mov
and
add
push
cmp
push
inc
test
divl
int
clc
bound
push
insl
das
mov
jmp
pop
push
cld
xlat
xor
push
iret
mov
adc
outsb
mov
test
scas
je
mov
adc
aam
pop
lahf
and
roll
mov
mov
jno
cmpsl
rclb
sbb
arpl
aas
inc
and
or
jnp
test
jecxz
or
push
xchg
int
mov
pop
scas
pop
daa
pop
mov
jne
xor
dec
sub
fidivrl
mov
mov
and
mov
push
repz
jmp
xchg
iret
jo
sub
ljmp
cli
pop
lock
sbb
arpl
xchg
or
dec
leave
std
test
jmp
loop
and
jbe
addr16
movsb
shl
push
jne
outsl
mov
in
icebp
fscale
pop
dec
bound
jo
sti
loop
daa
push
dec
mov
push
mov
push
jp
scas
add
jge
jne
inc
loopne
sbb
inc
push
popf
xchg
jo
xchg
cmp
test
push
inc
loopne
cmpsl
cmp
test
dec
push
stc
push
test
sbb
fcoms
mov
data16
inc
add
inc
adc
out
jno
inc
or
movsl
sahf
mov
fnsave
jb
shrb
xchg
jno
icebp
fcmovnu
ljmp
loopne
es
xor
insb
repnz
xchg
cmp
inc
andl
pop
sbbl
jns
dec
mov
rcrb
mov
loope
pop
mov
addl
inc
mov
lahf
xor
push
movsb
lods
push
stos
stc
dec
adcb
xor
push
mov
dec
pop
mov
repnz
adc
notb
loop
jge
pop
cwtl
pop
push
sbb
adc
cmp
pop
loopne
or
jae
arpl
pop
push
jl
cld
mov
inc
pop
test
jnp
mov
imul
inc
lods
add
pop
xchg
pushf
insl
sbb
xchg
mov
xchg
adc
sbb
push
in
push
jb
rclb
mov
mov
dec
sahf
push
stc
pusha
jb
pop
and
cld
sub
add
cmp
iret
and
mov
loopne
ss
stc
pop
cmp
cmp
jno
xchg
mov
and
lea
xchg
dec
cmp
and
cmp
outsb
adcb
bound
shrb
data16
pushf
test
mov
cmc
inc
ljmp
adc
idivb
stos
adc
mov
push
mov
sti
jge
imul
fimuls
cmp
sti
into
cld
lcall
out
ja
mov
mov
cmp
cmp
jg
xchg
adc
pop
jl
gs
jo
push
sti
lret
enter
mov
xor
and
subl
sahf
pop
xchg
xor
inc
clc
mov
xor
fsubs
lahf
push
push
aad
cmpl
push
test
out
popf
adc
mov
cmp
xchg
sar
pop
add
mov
cwtl
fucom
push
mov
dec
pop
jnp
adc
push
jns
dec
mov
cmpsb
push
test
fcoml
pop
mov
sbb
aad
pop
ljmp
or
jmp
lods
int3
cmpsl
jp
and
data16
movsl
cmc
mov
push
daa
sub
push
pop
loope
icebp
push
xchg
sbb
push
push
xchg
xlat
mov
inc
jbe
push
push
sub
add
test
adcb
fcomps
cltd
jne
jge
imul
xchg
sub
jg
clc
cwtl
into
push
idiv
sbb
adc
jmp
clc
test
push
jg
adc
dec
ljmp
sar
jg
jecxz
inc
aam
call
test
loope
mov
xchg
pop
xchg
enter
movsl
lahf
jne
mov
xchg
xchg
sub
adc
fdivl
cmpb
lods
mov
cmp
and
jge
push
push
hlt
push
adcb
push
push
jmp
addr16
out
xor
pushw
adc
outsl
dec
push
or
imul
je
sub
pop
add
inc
out
scas
pop
jo
lock
loopne
movsb
in
int
mov
mov
mov
push
aaa
jns
jns
and
xchg
sub
into
jecxz
ljmp
and
mov
mov
push
jnp
mov
sbb
add
add
insb
lods
pusha
pop
xor
sub
insl
icebp
jge
fucom
jnp
jp
sahf
stos
sub
test
mov
movntq
shll
sti
mov
dec
lds
sti
popa
mov
insb
adc
in
jle
adcb
xor
pop
sub
cmp
cmp
lods
aam
shrl
into
das
mov
mov
xchg
shlb
clc
jno
out
mov
mov
adc
nop
pop
cmc
mov
fcmovnb
jae
je
xor
ljmp
and
xor
aad
bound
out
jl
xor
outsb
xchg
imul
jb
ror
mov
test
jae
dec
xor
cltd
lret
sti
cmpsl
pop
ror
xchg
jecxz
dec
test
leave
push
iret
fs
sarb
iret
ljmp
xchg
mov
pop
mov
cmpl
scas
cli
xchg
pop
dec
xchg
add
xor
xor
jbe
add
adc
adc
in
in
push
insl
xorl
pop
mov
test
mov
pop
mov
sti
cmp
mov
and
loopne
aas
mov
mov
insb
xchg
arpl
call
jae
xchg
mov
lods
fisubs
xorl
push
cmp
pop
push
xor
mulb
mov
inc
bound
or
mov
add
mov
cld
lock
xchg
xorb
fcomip
pop
fwait
ret
dec
or
pop
popf
inc
xchg
push
sbbb
cmpsb
sbbl
sahf
shlb
dec
push
jne
enter
and
push
push
dec
aaa
leave
mov
repnz
xlat
mov
cmpsb
rep
mov
and
idivl
push
nop
lret
pop
adc
pop
sub
mov
or
mov
or
cwtl
btr
sub
hlt
jb
xor
adc
push
mov
shlb
cs
xor
dec
pop
repz
fsubs
test
fwait
inc
lea
stos
cwtl
dec
and
call
aaa
std
xor
repnz
mov
pop
push
xchg
cmp
mov
lret
cmp
es
pop
pop
mov
sbb
out
mov
repz
mov
lds
dec
fwait
mov
cmpsb
dec
bnd
or
or
aas
fstps
jnp
add
jmp
sbb
int
setne
adc
ficomps
mov
push
repz
inc
or
jle
inc
add
mov
add
das
or
ss
push
dec
mov
pop
mov
mov
insl
movsl
xchg
mov
stos
mov
dec
cwtl
stos
ret
push
lret
and
adcb
or
insb
add
mov
pop
mov
push
insl
ret
cmp
mov
cmpsb
lret
pop
rcll
mov
rorb
mov
fbld
ret
jb
and
popa
nop
lcall
pop
mov
and
push
jge
sbb
cmp
or
iret
cmpsl
mov
jns
xchg
cwtl
inc
jmp
jmp
outsb
pop
out
lods
mov
das
notb
into
jl
fdivrs
mov
mov
inc
stos
addr16
fnstsw
imul
adc
push
pop
add
mov
insl
mov
sbb
mov
jl
fsubl
xchg
lahf
dec
sbb
pop
xor
loop
add
lret
stos
mov
out
roll
push
jno
sub
fdivrl
sub
add
xchg
jae
mov
shrb
popa
dec
dec
xchg
jne
dec
push
outsb
push
xor
cmp
in
jne
jp
cld
mov
fs
and
dec
pop
and
lods
jp
mov
lahf
imul
jae
and
enter
inc
mov
dec
jbe
mov
cld
jg
fmull
mov
stos
sbb
mov
fcompl
push
pop
push
xchg
inc
xchg
sarb
shlb
xchg
in
shl
stos
pusha
dec
aad
push
leave
cwtl
cmovae
shlb
jns
jne
dec
stos
push
sub
push
adc
hlt
ja
scas
lock
sbb
sub
adc
mov
test
scas
int
add
jge
call
xchg
insl
and
mov
push
sbb
or
add
pop
lcall
out
and
jne
cmp
int
cmp
lods
out
cmc
mov
popf
in
pusha
fadds
imul
into
rcrb
cmp
sub
enter
jne
pop
adc
push
out
bound
in
mov
stos
sbb
pushf
stos
xchg
out
xchg
sbb
push
cmp
and
xor
fisubrl
sub
mov
xchg
aad
bound
aas
ds
jns
test
in
cld
stos
aaa
sahf
adc
out
push
repz
add
xchg
cmc
sahf
xchg
mov
fists
mov
loope
xchg
iret
add
mull
sbb
into
iret
into
jno
jb
jp
fldcw
jle
cmp
xchg
jg
nop
jbe
movsb
cmpsl
out
sub
pop
out
in
popf
mov
mov
adc
inc
cmpsl
imul
xlat
mov
sbb
push
adc
mov
adc
sbb
and
rorl
cmp
outsb
push
sbb
hlt
bound
rcl
pop
push
cmpsl
enter
loop
cli
lret
fiadds
mov
jns
iret
mov
and
cmp
adc
shlb
addr16
mov
les
dec
lods
inc
int3
gs
or
xor
pop
dec
xor
sbb
jp
mov
or
push
xchg
in
mov
std
stos
in
lods
xor
xor
mov
xor
fdivs
and
cwtl
sbb
pop
jbe
es
insb
push
gs
and
loopne
xchg
sub
sahf
lret
test
mov
movsb
mov
aaa
sahf
mov
cmp
lahf
dec
lds
mov
aaa
push
bound
lret
mov
mov
and
pop
dec
cltd
cld
push
test
pop
loope
mov
cmp
mov
xor
mov
aad
and
sbb
lods
jecxz
mov
cltd
ficoml
jle
subb
incl
shlb
std
xor
rcr
sub
aas
mov
enter
jp
aaa
into
scas
aaa
push
stos
dec
cmp
inc
loop
mov
repz
mov
icebp
dec
dec
lret
push
repnz
lock
jmp
loopne
pop
sti
int
hlt
aam
cmp
push
jge
fstps
jmp
cmp
cmp
je
in
rorl
cld
mov
aaa
and
push
mov
leave
pop
outsl
rolb
xchg
out
fcomps
push
imul
sub
adc
bnd
add
cmpsb
mov
cmpsb
and
jl
jno
lahf
lcall
pop
push
jbe
cmp
mulb
pushf
cli
push
enter
and
cmpsb
fs
or
inc
testl
sbb
pop
add
lret
stc
mov
jne
out
jle
mov
pop
push
xchg
ja
lcall
sbb
mov
into
adc
in
rcrl
xchg
cmp
jbe,pn
and
xchg
push
inc
dec
mov
dec
inc
xchg
js
notb
inc
mov
lret
jmp
and
xchg
adc
sahf
xchg
jl
xchg
ja
bound
pop
or
and
in
inc
icebp
mov
pop
fcmove
jp
ret
test
data16
outsl
push
and
and
imul
movsb
inc
jns
int
sbb
ficompl
cmpsl
push
aas
jnp
fidivl
dec
enter
and
add
cmpsb
inc
push
jl
push
mov
jns
lahf
aad
cli
pop
icebp
mov
mov
cli
insb
enter
mov
or
jne
mov
xchg
inc
push
mov
add
push
data16
xor
mov
xor
iret
push
idivb
add
sub
shl
xchg
mov
jne
dec
cmpsl
nop
mov
fisttps
jne
insl
jmp
scas
xor
xor
push
mov
or
pop
gs
fs
xchg
mov
adc
push
adc
cld
pusha
shlb
mov
xor
ret
loop
and
xorb
js
scas
push
lods
xchg
scas
lea
pushf
in
lret
dec
shrl
out
fistpl
rorb
jmp
xchg
sub
jecxz
and
out
sub
es
mov
jae
inc
out
dec
cmpsl
add
mov
xor
mov
cmp
sahf
inc
pushf
cmp
lods
mov
cmpsl
jl
jns
es
jno
and
add
cmp
pop
jns
adc
jb
mov
mov
int3
pop
dec
pop
mov
mov
mov
mov
add
out
inc
insb
jge
shlb
dec
cmpsl
push
xchg
enter
sub
mov
xchg
push
cmp
lea
xchg
into
add
scas
loope
mov
arpl
pop
dec
dec
xlat
shrl
cmp
push
jb
aam
mov
lock
mov
imul
movsl
push
or
pop
imul
shll
mov
sbb
xor
out
std
jge
jo
jmp
pop
mov
es
fistl
ss
mov
icebp
push
cmp
add
cmpsl
mov
sahf
jb
sbb
pop
adc
shl
das
push
push
out
jnp
clc
inc
push
jg
mov
ljmp
fistps
push
lock
xchg
sub
jg
fdivrs
stc
adc
pop
sahf
dec
inc
rcll
arpl
xor
ret
and
dec
jno
or
test
inc
in
imul
pop
sub
push
filds
sbb
ror
cmpsb
jb
inc
jg
inc
insb
out
xor
aaa
cmc
or
push
repnz
frstor
aam
ror
into
jno
xchg
repnz
and
push
push
push
jmp
adc
test
mov
mov
into
push
fistpl
dec
cmc
imul
mov
shll
imul
addr16
cmc
call
or
repz
pusha
addb
lahf
int3
sahf
inc
je
out
xlat
and
addr16
jmp
sbb
orl
push
lock
ds
push
jg
adc
movsl
sub
sub
mov
in
cmc
mov
call
pop
vpcomuq
in
pop
lea
xor
sub
lret
jle
cwtl
mov
jb
addb
out
cwtl
sub
mov
je
rcl
mov
mov
mov
call
or
or
adc
fnstenv
dec
cmp
out
dec
mov
rclb
test
aad
fcompl
mov
imul
sub
shll
jg
movsb
jecxz
lods
in
inc
imul
jecxz
orl
mov
shrb
push
cltd
leave
adc
jnp
push
addr16
dec
or
mov
sarl
lds
adc
insb
adc
fmuls
mov
add
fs
sbb
movsb
popa
adc
lds
int3
cli
cmp
mov
jb
orl
or
arpl
push
inc
adc
push
dec
inc
in
adc
adc
ds
sub
adc
stos
pusha
mov
sbb
xor
lock
repnz
sbb
lock
into
pusha
mov
mov
out
sbb
mov
cld
aad
mov
mov
insl
xor
ljmp
xor
add
cmp
leave
sbbl
dec
add
cwtl
xor
mov
or
es
jl
cmp
pop
mov
xchg
mov
repz
sbb
sbb
inc
push
repz
call
pop
ljmp
dec
xchg
mov
in
mov
xchg
pop
subl
pop
mov
test
pop
pop
cmp
mov
in
sub
bound
or
mov
push
jo
fildl
aam
jmp
repnz
dec
outsl
and
std
cs
enter
or
adc
sub
fs
dec
adc
sub
pushf
cmp
mov
rorb
jecxz
xchg
xchg
push
push
mov
mov
mov
ds
and
loopne
xchg
mov
in
inc
movl
subb
sub
scas
pop
xlat
sbb
cmc
mulb
xor
test
insb
xlat
mov
ds
cld
shlb
add
in
adc
xor
mov
popa
push
and
or
insb
jg
sbbb
xor
in
mov
aam
cmc
push
int
das
lcall
jnp
ret
loope
outsb
cmovle
xchg
pop
jbe
fiadds
mov
into
xor
shll
mov
ret
test
mov
out
mov
mov
into
data16
out
sti
jbe
lret
adc
in
mov
sbbl
leave
mov
push
loope
pop
inc
ja
inc
mov
push
pop
daa
test
cmp
std
ljmp
fmuls
shrl
movsl
ljmp
xor
push
pushf
movb
testb
xchg
shr
les
movsb
mov
push
push
pop
out
and
xchg
imul
and
mov
or
jno
fstpl
xchg
aam
xchg
add
mov
push
push
or
pop
cwtl
es
pop
sub
inc
xor
pop
xchg
jmp
stos
dec
roll
cld
pop
push
cmpsl
lret
shll
jecxz
jecxz
inc
pop
dec
sbb
fadd
fstp
sub
inc
lret
lahf
add
mov
clc
dec
xchg
mov
sbb
pop
ds
adc
xor
jmp
inc
mov
add
repz
fcomps
sbb
add
sub
mov
out
stos
in
shl
mov
jns
inc
jmp
jecxz
scas
add
ja
dec
pop
shll
mov
cmp
jnp
shl
pop
repz
ds
mov
scas
push
dec
ljmp
or
mov
cmc
cli
sbb
in
mov
jg
mov
inc
sbb
hlt
push
mov
push
movsl
push
or
mov
cwtl
outsb
jmp
aas
push
xorl
outsb
cmp
inc
and
cmp
cmp
mov
sbb
fwait
aam
push
inc
push
cs
icebp
loope
addr16
pop
loopne
fdivrp
jne
sbb
cwtl
repz
inc
fwait
jbe
mov
mov
ljmp
lds
gs
xchg
lahf
and
push
ja
push
push
stos
cltd
fisubs
inc
arpl
add
leave
jne
notb
mov
mov
jno
or
loope
imull
test
mov
sub
jo
es
add
fs
shll
mov
sub
int3
into
pop
jo
pop
add
sbb
inc
xor
inc
lea
lret
push
movsb
add
and
in
leave
add
icebp
push
jecxz
lds
lea
jns
shl
loop
movsl
rcrl
sti
ret
xor
imul
lahf
stc
jge
imul
dec
mov
mov
xor
or
cmp
mov
mov
int3
xchg
add
dec
fwait
mov
orps
sahf
xor
xorps
std
and
fs
jae
cmp
ret
out
adc
mov
push
push
int3
xchg
sbb
hlt
sbb
pusha
mov
lods
pop
pop
or
adc
jne
push
enter
nop
sbb
push
addr16
jp
lods
lret
mov
jno
xchg
add
pushl
or
cmp
int
out
jge
xchg
mov
xchg
mov
fdiv
jmp
push
xor
les
jne
out
add
mov
pop
test
and
or
aaa
inc
mov
mov
ret
arpl
sbb
ret
ja
rcl
sub
sub
add
outsb
lret
dec
jmp
jno
xchg
cmpl
mov
lret
out
mov
testl
inc
rorb
sub
dec
sahf
stos
and
inc
in
jnp
mov
scas
mov
mov
cmpsb
xor
jno
sub
out
inc
add
or
xchg
subl
xchg
jg
jl
add
inc
dec
pushf
add
mov
in
mov
pop
xadd
imul
out
pop
aad
shll
push
xlat
nop
xchg
shll
jmp
shlb
fdivr
cmp
pop
popa
bswap
xchg
pop
fs
ja
mov
ljmp
xchg
lock
mov
enter
push
add
inc
pop
jbe
aaa
jmp
and
mov
gs
push
sarb
mov
mov
pop
lds
inc
cld
daa
lcall
pop
sbb
aaa
push
movsb
shlb
lock
call
lods
jp
outsl
pop
cwtl
adc
int3
fsub
mov
mov
ret
aas
cld
out
in
test
ja
mov
repnz
in
mov
xor
rorl
fsubs
xchg
mov
and
inc
loopne
inc
xor
add
call
aad
mov
cmp
push
out
cmp
adc
fsubrs
hlt
add
fisubl
mov
xchg
sub
cmp
sbb
and
sub
gs
pop
rcrb
inc
adc
mov
push
sbb
addr16
adc
gs
imul
dec
das
cmpsb
clc
fmull
jl
fidivs
adc
fisubl
mov
bnd
dec
inc
mov
insb
adc
sbb
sti
ljmp
stc
int3
std
ja
sub
in
pop
jp
lretw
pop
outsb
add
jb
js
mov
pop
test
sti
test
push
fistps
and
inc
sbb
mov
xchg
in
mov
les
fcoml
inc
inc
xchg
push
nop
push
xor
inc
notb
jae
daa
push
sti
ja
stos
mov
lahf
xorb
sbb
call
rep
xchg
mov
fistpll
or
insb
sti
data16
push
sub
sbbl
aaa
mulb
subb
push
jno
out
pop
sub
mov
mov
and
fidivrs
mov
cmp
testb
nop
add
lods
es
out
cwtl
pop
sahf
pop
xlat
test
orb
inc
pop
sti
out
loopne
jl
or
loop
and
adc
out
xor
movsl
adc
push
mov
cmpsl
stos
xchg
aaa
sub
pop
cs
ret
das
mov
std
cmp
mov
aas
rclb
mov
jns
movsl
sbb
jl
mov
andl
fildl
pop
push
cmp
scas
mov
mov
lock
and
dec
sbb
mov
xchg
jmp
and
adc
fs
push
mov
call
mov
inc
pushf
cs
inc
mov
mov
cmpsb
pop
sarl
push
push
cmpsl
sub
std
pop
fisubl
imul
pop
xchg
lods
pushf
push
addr16
cmp
test
sbb
push
sbb
xchg
jl
jae
subb
rorl
add
pop
push
mov
xorb
push
leave
out
cmpsb
out
or
cmp
jnp
pop
adc
pop
scas
xorl
dec
pop
push
add
icebp
or
pusha
push
mov
and
insl
aad
push
out
xor
jo
dec
cmpsl
negb
stos
mov
lahf
mov
cmp
adc
push
insl
pop
pop
and
scas
popf
push
js,pn
sbb
xchg
mov
movsl
out
sub
and
sub
mov
cwtl
mov
mov
sbb
or
jecxz
jp
rol
cmpsl
insl
mov
nop
pop
add
cmp
push
out
and
mov
xchg
adc
test
mov
mov
aas
loope
sub
aas
sub
push
add
xchg
arpl
push
pop
insb
popf
cmp
jge
repnz
nop
xor
xor
orb
pusha
shl
sub
lds
outsb
fisubrs
adc
call
push
mov
stc
adc
sub
lahf
into
mov
je
sbb
sbb
arpl
xchg
int
jle
aaa
jbe
pushf
xchg
pop
ja
lahf
add
sbb
sbb
add
out
sahf
movsl
xor
repz
movsl
imulb
js
imul
mov
xchg
lcall
iret
mov
mov
jecxz
inc
int3
push
sub
xor
mov
jle
nop
mov
and
hlt
in
sub
pop
push
add
cli
jno
imul
and
les
loop
cli
dec
out
cmp
pop
ja
mov
or
push
sbb
and
aas
fildl
sbbb
jne
out
jo
xor
mov
jmp
adc
lds
mov
mov
jmp
xor
add
popf
add
push
in
mov
dec
inc
shr
loopne
jg
dec
cwtl
andb
jmp
daa
mov
sbb
and
push
or
and
add
aad
hlt
inc
test
and
lds
jno
stos
xchg
dec
pop
aam
push
leave
cmp
xor
ret
and
pop
xchg
sub
dec
mov
sbb
lods
fcompl
mov
pop
jmp
mov
and
repnz
add
inc
inc
jecxz
and
insb
sub
dec
xchg
lcall
loope
mov
sti
lea
cmpsl
sahf
int3
dec
add
std
adc
cmpsb
lock
jne
pop
xchg
xchg
adc
pop
popf
fcoml
jb
sub
jns
mov
or
lds
or
movsl
lret
mov
lret
arpl
nop
arpl
push
fnstenv
repnz
adc
cwtl
sbb
lock
or
mov
out
js
push
cld
add
dec
enter
lcall
rcr
repz
mov
shlb
aaa
push
testl
push
testl
out
mov
imull
dec
mov
cmp
or
jle
int
call
imul
das
jmp
es
movsl
push
sahf
stos
lret
out
iret
out
or
loope
out
stos
sahf
lcall
adc
nop
pop
es
out
mov
shrl
sub
or
rcl
pusha
xor
clc
cmp
jle
pop
test
mov
add
inc
test
push
iretw
leave
test
faddl
int
mov
aad
mov
or
mov
ljmp
pop
jno
lock
scas
test
fimull
test
push
xor
enter
dec
cmp
add
mov
jno
dec
ss
lcall
hlt
iret
mov
add
negl
xor
cmp
xchg
pop
clc
imull
pop
xchg
push
mov
mov
les
push
inc
inc
leave
pop
lods
mov
push
dec
xchg
and
inc
inc
sub
dec
jne
aad
mov
fsubr
repz
shrl
jo
sbb
fwait
push
scas
pop
pop
or
push
push
test
gs
sbb
test
int3
sahf
cltd
popa
lods
int
stos
and
mov
mov
mov
xor
sti
sub
mov
jne
mov
adc
jbe
mov
xor
sbb
jg
cmp
repnz
mov
jl
ret
imul
stc
hlt
jbe
fs
leave
cmp
test
iret
orl
das
or
jmp
push
das
movsl
lock
inc
test
rcrb
jle
lret
pop
sbb
inc
imul
cmpl
mov
aaa
testb
mov
cli
filds
aaa
out
xlat
jmp
inc
out
inc
jge
scas
enter
ds
insb
inc
xchg
mov
and
cmpsl
mov
fs
roll
mov
aas
and
ret
inc
inc
sub
stos
push
out
shlb
cmpsb
insb
push
sub
xchg
xchg
addr16
adc
roll
pop
fnstsw
lock
jg
test
lahf
ffree
arpl
pushw
and
or
mov
lds
in
cmpb
test
pop
jmp
jecxz
gs
xchg
mov
xchg
imul
cmp
aas
mov
add
mov
push
ja
cmpsl
mov
dec
in
inc
xor
jbe
sti
int
mov
pusha
es
test
inc
mov
xchg
lods
pop
fstps
cmpsl
push
out
xchg
dec
icebp
mov
shrb
xor
daa
xchg
addb
shr
in
mov
adc
scas
sub
mov
iret
incl
iret
push
mov
fstpt
fnstsw
adc
ja
mov
lea
shll
push
cltd
adcb
cs
loop
jbe
data16
sahf
js
int
shll
pop
dec
xor
scas
sub
cmp
pop
mov
aam
mov
test
inc
inc
cltd
jnp
dec
sub
jmp
inc
xor
mov
xlat
mov
push
add
dec
push
mov
or
into
dec
jmp
dec
das
dec
sub
mov
cwtl
pop
movsb
jno
or
add
outsb
and
stos
imul
and
dec
nop
push
inc
mov
in
adc
mov
mov
fcomi
mov
or
fwait
push
mov
fnstcw
in
mov
adc
movsb
nop
fstpt
int
pop
sbb
xchg
push
xor
xchg
pop
addr16
lret
out
cmp
ret
mov
xchg
and
mov
stos
enter
test
in
je
mov
loope
subb
mov
add
lahf
or
xor
ljmp
jge
into
push
xchg
sbb
jl
rcrl
mov
jg
inc
mov
mov
popf
mov
dec
inc
inc
mov
xor
aas
or
lahf
push
mov
es
ljmp
push
mov
aam
and
lret
adc
imul
jnp
out
sbb
cmp
loopne
sub
xor
or
in
dec
sahf
inc
jle
std
mov
sarb
repz
ret
xor
dec
mov
xor
jp
aas
rcrb
test
and
push
xorb
jno
pop
or
jmp
or
movb
imull
data16
push
cmc
mov
mov
je
push
xor
cmp
adc
jmp
inc
jae
xchg
loopne
dec
dec
movsl
mov
shrb
xchg
sub
xor
outsb
or
in
out
mov
prefetch
fisubs
scas
mov
mov
xchg
nop
sub
xchg
push
adc
clc
cmpsl
pop
sahf
mov
add
loopne
fs
sbbb
ret
add
push
or
stos
dec
data16
in
add
adc
lea
fstl
xchg
pusha
aas
xchg
pop
test
pop
aam
xchg
add
pop
daa
adc
inc
push
daa
mov
xchg
jg
sbb
aam
cmp
mov
dec
fmul
fdivrs
dec
mov
push
cmpl
push
push
gs
xchg
and
pop
mov
inc
je
inc
cmp
and
inc
fisubl
push
sub
mov
sti
jl
imul
movsl
fistps
sbb
les
stos
sbb
imull
adc
mov
xor
loope
ficoml
inc
loopne
lret
mov
pop
shll
add
mov
jl
push
inc
icebp
in
andl
sti
inc
pusha
jmp
ficomps
push
pop
aas
xchg
xchg
sub
push
lods
xchg
mov
push
push
lea
xchg
and
xchg
pop
pop
in
cmc
aad
xor
or
sbb
inc
loope
addl
xlat
pop
sbb
scas
push
sbb
cmp
xor
xor
xchg
popa
rcll
jo
cmp
bound
xchg
jbe
mov
lret
sbb
loopne
aad
pop
mov
and
push
cld
pusha
cwtl
sahf
cmpb
inc
dec
shl
enter
inc
inc
clc
lret
orl
sub
adc
mov
add
les
js
out
adc
pusha
pop
clc
mov
xor
sbb
out
stc
or
mov
sbb
ss
repz
inc
pop
shr
add
jg
test
cmovge
pushf
hlt
outsb
add
sbb
clc
cmp
mov
sahf
sbb
inc
jmp
js
pop
jmp
xor
scas
jo
pop
sub
movsb
js
aaa
movl
adc
js
arpl
cmp
push
xor
loope
test
lods
movsb
repnz
mov
add
sahf
jmp
andl
movsl
pop
mov
sbb
clc
adc
call
lret
dec
mov
clc
fstl
inc
shrl
in
pop
inc
and
pop
inc
bound
shl
out
mov
mov
icebp
cmpsl
fsts
int3
inc
push
movsl
rolb
dec
inc
inc
loope
xchg
es
xchg
mov
icebp
andb
cmp
xor
aam
xchg
push
adc
imulb
mov
push
xlat
stc
cli
addl
fistl
pusha
rcl
push
data16
xchg
sti
sub
xchg
inc
fisubl
ljmp
aam
pop
stos
lock
lods
push
jnp
jns
dec
cmpsb
jae
lods
sub
or
xorb
jp
adc
mov
xor
jnp
add
inc
shlb
mov
xchg
movsl
inc
mov
sbb
test
mov
in
jo
pop
mov
mov
shlb
rol
dec
mov
cmp
std
cmc
mov
sbb
outsl
std
out
or
cli
fidivrl
lods
jnp
les
andb
xchg
push
in
hlt
push
ret
lcall
pop
movsl
dec
jg
pop
mov
mov
mov
push
insb
pop
clc
xor
cmpsl
jnp
andl
mov
dec
call
out
fldl
pop
or
push
les
into
in
in
mov
hlt
popf
add
dec
scas
add
sbb
sbb
outsb
sarl
mov
fdivrl
sbb
xor
cmp
mov
in
or
xorb
and
into
sbb
push
pop
bound
cwtl
into
clc
push
pop
cmp
add
sub
pop
xor
ja
lcall
sbb
dec
lahf
or
inc
xchg
andb
dec
add
inc
cmp
aaa
cmc
aam
inc
cmpb
xchg
lahf
dec
mov
mov
or
insl
cmp
rorl
push
aad
add
filds
mov
mov
js
dec
mov
popf
push
mov
mov
fnsave
xlat
inc
mov
in
sahf
inc
rcl
pop
or
push
dec
repz
cmp
mov
jl
js
imul
fstpl
stc
mov
test
cmp
and
xor
inc
sub
data16
popa
rcrb
jecxz
adc
push
ja
mov
shr
sub
pusha
jg
in
sbb
loope
and
jno
and
adc
inc
shrl
jno
mov
push
lods
loope
xchg
and
cmp
inc
inc
push
dec
testb
ja
fldl
aas
xchg
ljmp
push
add
xlat
sub
mov
fnstenv
dec
fsts
imul
shr
and
pop
push
sub
add
dec
aas
jb
neg
pop
jbe
push
aas
cwtl
sahf
ja
int3
sbb
aas
jp
enter
fisttps
cmp
push
sbb
xor
dec
adc
cmp
pop
jb
cmc
add
les
mov
dec
roll
jae
call
inc
movsb
lea
test
ficompl
bound
mov
push
and
mov
in
sub
mov
pop
sbb
dec
or
jmp
sbb
sub
adc
shrb
xor
or
or
jbe
imul
out
inc
fs
cmp
dec
cmp
dec
add
negl
out
sbb
std
dec
rorb
js
mov
mov
fwait
sarb
jne
aad
and
xchg
dec
push
inc
int3
xlat
scas
sub
mov
inc
mov
je
xchg
mov
push
nop
xrelease
rcll
daa
iret
pop
aas
sbb
mov
lods
jnp
push
dec
loope
sahf
adc
inc
gs
into
sub
pop
mov
add
mov
adc
mov
push
sbb
aaa
and
xchg
rolb
lea
xchg
clts
loopne,pn
aad
mov
ret
rcr
leave
dec
xchg
push
andb
jnp
movsb
cmp
dec
ja
in
jne
imul
push
sarb
push
cmp
popa
xchg
in
fwait
pop
lret
not
mov
outsl
xor
mov
int3
dec
hlt
inc
pcmpgtd
mov
pop
jno
stc
xorb
int
sub
out
pop
xchg
loope
inc
adcb
mov
outsl
jecxz
pop
mov
push
rclb
fstpt
and
dec
mov
test
ja
or
out
adc
movsl
fwait
insb
call
push
addr16
xchg
mov
cmpsb
pop
daa
xor
sahf
push
push
and
push
cltd
pop
and
shlb
insb
add
fiaddl
or
test
dec
lock
mov
dec
or
cmp
lock
out
push
insl
and
popf
sub
addr16
cli
jnp
mov
mov
lea
xchg
stos
xchg
sbb
mov
aas
inc
push
mov
imull
movsl
int3
sub
sbb
adc
jg
and
cld
push
or
xchg
stos
roll
mov
xor
mov
push
mov
insl
ss
leave
cmp
ds
add
roll
adc
fiadds
sub
test
scas
or
cmp
lret
xor
clc
in
xchg
mov
daa
cli
ljmp
loope
in
sbb
bound
test
lcall
dec
inc
adc
loop
in
fwait
jae
jg
sti
ret
pop
sbb
pushl
xor
arpl
push
sbb
add
inc
dec
xchg
xlat
pop
nop
outsb
mov
jbe
pcmpgtw
jo
lret
xor
stos
into
ljmp
jmp
or
cwtl
ja
outsb
sarl
dec
jle
inc
arpl
push
shll
dec
jecxz
lret
jp
nop
cmp
sub
cmp
cmpsl
leave
or
jnp
sbb
adc
scas
jmp
cmpl
aaa
lcall
or
adc
sub
or
or
xorl
mov
data16
cmp
inc
in
outsb
or
fwait
xchg
xchg
stos
mov
jno
dec
mov
mov
lea
andb
pushf
fadds
or
sub
sub
test
outsb
jle
icebp
mov
enter
lcall
push
out
loopne
push
addb
sub
push
daa
mov
loop
sarl
jno
sub
inc
mov
pop
or
mov
out
mov
add
mov
or
adc
mov
xor
or
aas
inc
test
aam
pop
mov
fs
mov
mov
cmpsb
or
jge
fwait
and
call
lahf
cmpsb
and
adc
mov
or
inc
sbb
fisttpl
or
dec
cmc
rorl
mov
ret
and
enter
push
shll
test
inc
arpl
push
mov
lock
shll
in
loope
lds
xchg
arpl
fs
outsl
pop
pop
adc
sub
xlat
ret
jmp
insl
add
jmp
jp
mov
inc
cmp
dec
pop
cmpsb
push
or
xor
pop
sub
adc
mov
xor
mov
dec
mov
dec
int
jne
add
cmp
pop
jp
test
dec
icebp
idivl
outsl
pop
fstl
dec
mov
call
stc
iret
mov
repz
cmc
ffree
pusha
rcrb
out
mov
aam
fidivrl
or
out
and
into
inc
push
jp
fs
cmpsl
mov
push
jno
xchg
sub
test
mov
mov
insb
xchg
aam
mov
dec
imul
dec
sbb
lret
or
loopne
cltd
sub
mov
and
clc
movsl
and
repz
add
dec
imul
pop
sbb
imul
jle
pop
cmpsb
push
aam
sahf
stc
or
cmc
inc
cmp
fcoms
aam
fnsave
mov
addr16
mov
test
sbb
shll
test
xchg
lods
jne
jnp
dec
repnz
mov
and
or
xchg
fcoml
mov
push
shll
inc
mov
fists
insb
mov
adc
int
and
outsl
jmp
mov
sub
mov
or
mov
imul
push
daa
sub
xchg
xchg
imul
pop
pop
out
mov
or
push
mov
cmp
sub
push
je
ss
pop
or
mov
mov
enter
stos
inc
stos
jge
cmp
push
lock
jo
push
sahf
hlt
cmpsl
dec
jmp
mov
icebp
push
mov
fisttpll
daa
pop
sub
lret
jge
pop
mov
or
add
iret
add
mov
aam
push
popf
outsl
sub
push
pusha
dec
lock
decl
imul
ja
add
jo
ljmp
push
mov
adc
inc
fistps
fldenv
mov
fwait
sub
jecxz
fidivl
mov
sub
fisubrs
jle
mov
cmpsl
push
or
or
cld
rcrl
jns
mov
mov
negl
lds
icebp
das
lret
out
jb
aas
push
stc
lods
cwtl
jbe
lds
roll
and
cs
das
add
pop
sbb
push
std
mov
scas
movsb
mov
sbbb
mov
dec
jo
jecxz
repz
imulb
out
inc
add
jl
pop
xor
add
sbb
sbb
and
add
ljmp
adc
sub
test
sahf
sbbl
fmul
notb
sub
mov
mov
push
stos
cmp
adc
rcr
mov
fidivrs
icebp
cltd
lds
sub
push
push
pop
movsb
pop
sbb
aaa
sub
inc
xor
imul
pop
movsb
imulb
cmpsl
lret
data16
aaa
scas
pop
stc
ffree
push
aad
sbb
sbb
stos
mov
xchg
cmp
cltd
rclb
mov
or
aaa
out
add
mov
popa
mov
test
repz
or
xchg
xchg
loop
loopne
inc
pop
sbb
xchg
ds
cmp
mov
imul
cmp
jg
mov
out
out
shll
or
test
scas
shl
fsubrs
or
xor
enter
xor
rorb
or
insb
pop
in
mov
and
mov
les
push
fsub
pushf
popl
or
mov
xchg
pushf
cmpsb
cmp
dec
xor
js
xlat
movsl
ds
sarb
mov
inc
push
mulb
or
sbb
out
add
fs
leave
push
fcmovnb
lea
roll
clc
jnp
movsl
out
fnstsw
sub
jns
mov
rcrl
icebp
add
fwait
ret
into
ds
jl
fwait
jmp
aad
cld
dec
stc
adc
dec
imul
mov
idivb
xchg
jp
pop
into
enter
mov
sub
pop
pop
dec
jl
xchg
ss
mov
lcall
popf
scas
daa
mov
repnz
sbb
cmpsb
mov
sbb
mov
outsb
ret
les
jmp
xchg
lock
sub
pop
push
or
add
fdivp
pop
into
and
jmp
pop
dec
rorb
repnz
out
xor
cmp
cmovnp
insl
sub
int3
call
and
sub
imul
xchg
test
fidivrs
pushf
cmp
lcall
jae
in
lods
inc
xchg
lods
pop
push
jecxz
or
lcall
pop
ss
cmp
cmp
loope
jg
sub
mov
push
add
and
lods
adc
mov
or
in
arpl
call
mov
push
int3
js
in
mov
pop
fistpll
dec
xor
add
rol
cli
cmp
sub
mov
sahf
or
outsl
pop
incb
pop
xorl
xchg
inc
sub
test
cmp
and
add
adc
shlb
out
repnz
ret
js
mov
jne
mov
jg
cmp
addl
mov
push
sub
and
mov
test
mov
shlb
nop
jecxz
mov
mov
push
aam
mov
js
dec
fcomip
dec
ss
pop
int3
into
out
mov
in
xchg
pop
jb
fdivs
inc
sub
jl
call
or
pop
push
cmp
jle
in
jl
or
and
push
jg
lods
dec
shll
ds
sbb
or
data16
out
pop
push
jnp
inc
cmp
sti
int3
loop
cmc
test
pop
lret
scas
dec
and
push
cmp
jg
movsb
mov
mov
dec
add
jmp
jl
and
cltd
inc
fucomi
stos
push
sbb
scas
cmp
or
and
jnp
jmp
push
dec
mov
pushf
or
sbb
je
mov
sub
popa
das
fisubl
mov
pop
and
jbe
bound
out
pop
pop
cmp
fisttpl
das
mov
sbb
testl
adc
repnz
mov
rolb
mov
cld
mov
cmpsl
push
push
mov
mov
les
dec
jne
in
out
cmpsb
sbb
imul
loop
cwtl
ficomps
cmp
cmp
adcb
mov
icebp
xchg
call
push
fdivrs
fiaddl
fdivrs
ds
popa
pop
out
outsl
xchg
mov
rep
out
push
int
mov
mov
sub
mov
out
cmp
sbb
lea
xlat
dec
in
and
inc
adc
icebp
test
inc
jns
push
add
xor
pop
and
mov
test
mov
cld
mov
inc
call
cmpsl
pop
mov
mov
dec
int
jmp
aad
mov
adc
in
jae
cmp
sub
mov
fs
inc
test
push
mov
and
loopne
mov
sbb
xchg
mov
nop
outsb
cmp
cltd
lds
insl
push
lcall
scas
jp
cwtl
mov
dec
pop
sub
and
bswap
cmpsl
mov
inc
imul
ljmp
push
idivl
fxam
cli
or
mov
data16
xlat
jp
mov
mov
adc
std
cmp
int
mov
jnp
cld
jns
mov
cmova
or
stc
enter
mov
lock
adc
clc
scas
jae
lret
mov
inc
dec
sbb
movsb
sbb
and
sub
js
es
call
push
sub
push
cwtl
mov
and
ljmp
hlt
jae
inc
jmp
xor
mov
clc
notb
leave
fistpll
xchg
mov
sub
adc
inc
mov
imul
aaa
cltd
gs
fbstp
fadds
inc
jno
push
pop
sti
mov
addr16
ljmp
dec
mov
in
pop
pop
jns
clc
es
push
sbb
loop
testb
pop
mov
push
mov
out
mov
cmpsb
test
add
mov
pop
imul
pop
insl
loopne
add
out
cli
scas
jb
jmp
sub
jmp
push
repnz
mov
dec
push
or
jne
aam
jle
in
pop
xlat
imul
and
adc
lahf
xchg
pop
pushf
movsb
pop
dec
mov
ret
data16
mov
mov
cli
outsb
add
ret
sub
sti
inc
xchg
fisubrl
push
add
sbb
nopl
movb
mov
adc
ror
int3
jne
test
rcr
scas
mov
cltd
cwtl
inc
add
mov
xchg
ja
sub
mov
fsubr
cwtl
jle
sarb
and
push
testb
sub
cmc
cmpsb
sahf
pop
loopne
sub
cmp
xchg
and
aas
dec
push
inc
ss
fldln2
mov
test
jne
xchg
addr16
rorl
pop
adc
std
mov
stos
dec
jns
fbstp
or
subl
cmc
or
adc
push
lea
stos
ja
push
and
sarl
adc
cltd
test
xor
jle
fisttpl
inc
mov
add
push
or
test
pop
into
or
hlt
push
push
cmp
lea
divl
and
push
mov
fwait
xchg
dec
jmp
sbb
dec
hlt
or
push
sbb
sahf
cmpsl
add
inc
popa
add
loope
adc
je
sahf
adc
aad
inc
pop
sahf
hlt
sbb
les
cmp
xor
pusha
lods
into
lret
fstl
push
fidivs
rol
push
xchg
int
xor
mov
or
xchg
mov
outsb
lea
stos
jp
and
fnstenv
and
mov
jecxz
shl
jge
xor
xlat
mov
shlb
fldenv
pop
pop
mov
ret
scas
and
inc
xchg
jle
push
sub
aaa
dec
in
pusha
or
daa
add
jb
cs
int3
push
jbe
movsl
lcall
and
push
arpl
enter
push
inc
pop
lret
inc
adcl
movsb
sub
ja
jmp
dec
cmc
arpl
mov
bound
xchg
jge
xchg
inc
fs
push
push
dec
or
pop
lea
std
xor
fidivrl
push
push
outsl
dec
sbb
pop
int
je
fldt
hlt
sti
mov
je
cwtl
mov
in
jb
popa
pop
and
sbb
stc
inc
cmpsb
adc
pop
mov
cwtl
repz
fiadds
push
and
cld
aas
stc
mov
sahf
lcall
movsl
pop
pop
jg
xchg
inc
ret
cltd
mov
pop
jecxz
mov
cli
pcmpgtd
jnp
out
out
add
add
sbb
mov
pop
flds
stc
test
lods
orb
stos
je
es
cmp
mov
in
daa
jg
or
cld
xor
ret
popa
call
les
jns
jge
shll
out
pop
imul
mov
sarb
push
aaa
dec
nop
ss
inc
das
sbb
test
cmp
cli
loopne
cmpsl
js
decl
xor
cmp
dec
mov
add
pop
dec
adc
mov
iret
cmp
jb
bound
hlt
lret
int3
inc
push
out
dec
jl
andl
xor
mov
cmc
cmp
dec
iret
xlat
jp
xchg
scas
jecxz
test
adc
add
inc
inc
adc
push
inc
push
rcl
push
mov
in
sbb
pushf
and
mov
scas
xchg
inc
jo
push
mov
rcll
sub
hlt
and
push
loopne
je
roll
comiss
gs
and
push
lods
cmp
push
lcall
sbb
push
andl
mov
fisttps
insb
hlt
into
js
dec
ret
loop
inc
push
movsb
jns
dec
push
inc
mov
lods
idivl
cmp
pushf
cwtl
rcrb
cmp
popa
pop
xchg
sub
dec
test
add
das
mov
imul
jo
push
stos
pop
xchg
std
stc
into
mov
sub
popf
fwait
ret
movsb
jns
cli
cmp
fmull
js
pop
ljmp
int
and
mov
mov
cmc
aaa
imul
loop
pop
cld
lods
xor
shlb
repnz
mov
mov
cmp
andl
test
loope
out
adc
lods
push
cli
xchg
adc
addb
aaa
fnstcw
repnz
add
add
xor
pop
dec
jno
into
pop
push
aaa
jae
mov
add
mov
jne
orb
sub
cmp
addr16
xchg
pop
push
lahf
push
push
fidivrl
andl
pop
or
adc
adc
aad
sbb
orl
dec
insb
dec
jb
dec
sub
jbe
daa
push
in
pop
adc
in
mov
scas
pop
adc
fnstenv
add
xchg
out
fcmovbe
mov
mov
in
sub
add
sub
popa
inc
pop
push
jne
jle
andb
loopne
add
in
into
clc
pop
cmp
out
pushf
cmpsl
repnz
popf
rorl
cmc
mov
shll
cmp
push
cmpsl
test
scas
dec
fists
sub
xor
scas
sti
sub
dec
enter
mov
xchg
lcall
sub
mov
imul
dec
xorb
roll
jg
dec
fcmovnb
lret
imul
leave
cmpsb
mov
dec
subb
xchg
xchg
or
das
ret
fsubrs
std
add
movsb
dec
hlt
ret
cltd
push
xor
insb
cmp
and
mov
push
mov
test
sub
je
push
push
pop
int
push
xor
mov
nop
out
mov
cmp
sub
andl
int
add
test
test
push
loope
mov
push
xor
lods
fs
sub
fstpt
enter
or
sbb
clc
and
fdivrs
sbb
iret
mov
mov
pusha
out
mov
and
ret
push
jno
push
test
cmp
fadd
fimull
add
mov
mov
mov
jle
int
std
jno
loop,pt
dec
out
or
jge
nop
fistps
movsb
and
add
jg
jl
add
loope
mov
fldenv
stc
cs
mov
popa
jl
inc
adc
add
lods
pop
cmpsb
jb
stos
test
push
jl
jae
out
xor
mov
adc
shll
jae
xorl
sbb
pop
and
inc
jb
in
push
imul
repz
sarb
lret
data16
xchg
lret
cld
or
push
jns
xchg
movsl
dec
xchg
xlat
faddp
fiaddl
int3
bound
push
mov
stos
jb
cmp
iret
sub
aas
dec
inc
sbb
sub
add
pop
and
fisubl
push
outsb
mov
stos
xor
jns
or
add
mov
sbbb
mov
sbb
adc
pop
xchg
jle
clc
push
sti
je
stc
dec
and
nop
mov
adcl
mov
push
es
popa
loopne
xchg
pop
mov
dec
addr16
imul
cmpsl
cmp
jno
in
daa
cmpsb
fldenv
cmp
jecxz
pop
push
fstpl
aaa
add
inc
inc
inc
inc
testb
test
lods
add
outsl
cmp
pop
in
sub
adc
push
xchg
push
cli
dec
or
cmp
aas
dec
repz
push
sahf
int3
sbb
xchg
sbb
roll
je
test
cmp
inc
add
popa
mov
mov
cltd
mov
add
loope
ja
leave
mov
mov
arpl
dec
add
and
push
adc
push
out
and
lods
jnp
ljmp
cmpsl
pushf
nop
pop
mov
stos
scas
cltd
frstor
inc
cmp
rclb
loope
xchg
add
xor
pop
and
xor
sbb
xor
push
in
in
add
jne
cmpsl
popa
mov
mov
mov
and
out
cmpsb
mov
insb
dec
mov
push
mov
dec
iret
faddl
cmp
inc
inc
add
and
fs
xor
test
icebp
mov
cld
pop
movq
sahf
fwait
jbe
sub
xchg
mov
jne
or
sbb
mov
loopne
mov
xchg
cmp
test
fnsave
jmp
int
sti
xchg
sbb
add
sub
jns
mov
jb
imul
mov
les
mov
xor
or
mov
and
dec
shll
lds
js
pop
push
or
fs
xchg
dec
loop
dec
adc
daa
lea
mov
mov
addr16
push
and
cli
cmpsb
mov
lcall
mov
in
out
jo
lret
fstl
out
inc
pop
clc
sbb
divl
popf
popf
inc
cmp
jns
mov
add
fisttpl
clc
push
and
jp
addr16
mov
testb
dec
mov
out
mov
sub
lcall
fildl
xchg
cld
cli
fnsave
aam
aad
mov
push
mov
insl
pop
inc
out
and
iret
js
push
mov
jnp
sub
push
rorl
sbb
cwtl
fsubrl
nop
push
rolb
jle
aaa
mov
das
adc
out
dec
sbb
loopne
test
orb
addl
in
lcall
sbb
rorb
or
cmp
mov
test
pop
fidivl
jmp
jb
int3
outsb
cmpsb
mov
inc
repnz
sti
nop
push
dec
ss
and
mov
or
push
or
push
xchg
dec
test
xor
outsb
int3
pop
sub
das
push
push
into
xchg
in
inc
in
xchg
inc
sub
mov
push
jb
add
cmp
clc
push
cs
or
xchg
shl
xor
mov
and
aad
sbbl
sub
push
cmp
idivb
imul
mov
jae
add
cmpsl
sub
and
sbb
fs
mov
push
jbe
dec
pushw
push
mul
sbb
xchg
insl
cmpsl
mov
enter
fiadds
lcall
rcrl
mov
mov
jno
fisttpll
push
cmp
mov
shrb
jecxz
or
mov
sbb
mov
and
or
inc
dec
movsb
and
jmp
loopne
xchg
mov
add
adc
insb
fwait
gs
mov
pop
pop
lahf
and
dec
rorl
loop
call
jo
inc
leave
adc
leave
mov
iret
hlt
xchg
cmpsb
loop
clc
mov
icebp
mov
outsl
push
jge
push
bound
mov
mov
cmpsl
popf
or
pop
mov
sub
fimull
arpl
ret
adc
inc
outsl
xor
ret
iret
in
jmp
test
bound
push
pusha
xchg
jae
icebp
dec
jbe
sub
mov
xchg
xchg
shlb
sti
sti
divb
shrb
imul
push
jmp
cmc
mov
jg
dec
mov
xor
rol
cli
mov
cmpsb
mov
adc
lock
push
jb,pn
mov
imul
cmp
stos
js
loopne
pop
push
pop
pop
and
and
das
aaa
sub
cmpsl
and
imul
divl
push
xchg
ljmp
fiaddl
inc
fidivrs
popa
mov
shrl
mov
fistps
js
mov
xchg
mov
das
sub
aam
filds
mov
mov
xchg
insl
mov
sbb
repnz
pop
shll
push
xor
sbb
inc
push
lock
add
hlt
push
fldcw
test
adc
sub
shll
cli
cmp
dec
rcll
dec
xor
sub
and
dec
es
fs
dec
stos
flds
and
insb
cmp
adc
in
adc
push
fistpll
add
push
push
push
pop
filds
sbb
and
xchg
xchg
loop
dec
rorb
lcall
cmp
xor
dec
fmuls
in
gs
xlat
dec
getsec
js
jl
dec
sub
adc
sub
push
les
mov
divl
and
aam
and
xchg
outsl
fisubrs
jne
shll
lods
jae
data16
xchg
push
mov
psubusb
int
mov
aam
inc
je
iret
stc
jge
aad
xchg
and
mov
popf
sahf
sbb
lods
stc
lret
in
xor
imul
hlt
push
jge
adcb
mov
loope
rcl
inc
test
lret
mov
cmc
and
push
cmpsb
outsl
gs
mov
mov
push
sbb
rcll
mov
jg
scas
icebp
int3
stos
mov
ljmp
stos
lds
rolb
lea
jb
negb
lret
div
jb
iret
adc
sbb
add
scas
adc
mov
and
call
jo
pop
stos
cmpb
xchg
es
cli
push
xchg
ja
loope
cmpl
xchg
jecxz
js
or
jnp
int
lret
rcrb
xor
aaa
xlat
dec
loop
xchg
cmp
fcoml
jmp
or
lods
xchg
and
dec
aaa
fistpl
or
ljmp
push
lret
inc
dec
cli
pop
out
sbb
or
pop
sbb
push
pusha
xor
or
int
mov
adc
testb
frstor
mov
pop
mov
xchg
aad
and
std
push
shrb
in
add
rcrl
add
fsts
ret
mov
jle
cli
rcrb
iret
mov
stc
and
test
cmp
pop
fcomps
sub
inc
js
xor
mov
sbb
mov
add
mov
out
sub
orl
in
jle
test
insl
pop
sub
xchg
fistpll
fsts
sahf
pop
fisttpll
mov
sbb
je
push
pop
push
out
inc
mov
and
testb
mov
outsb
jbe
xor
mov
scas
or
pop
mov
mov
cmpb
ds
mov
fwait
sbb
jnp
mov
mov
pushf
mov
adc
cli
int
mov
cmp
sbbb
xchg
sbb
cmp
sbb
sbb
shr
repnz
add
outsb
iret
icebp
sbb
dec
test
leave
je
push
jecxz
jle
jns
jne
js
in
test
mov
out
aas
and
lret
arpl
mov
xlat
adc
xlat
cwtl
dec
pop
xor
fdivrl
mov
insb
jnp
inc
fists
sbb
push
mov
mov
mov
test
mov
decl
pop
daa
int
repz
aam
adc
push
dec
lret
cli
hlt
andb
gs
jge
adc
jp
jne
lds
insb
cltd
xchg
mov
ja
or
arpl
fstpt
or
and
outsb
or
mov
ss
xchg
andl
sbb
xor
lahf
xchg
scas
push
lods
fisubrl
nop
xchg
leave
xor
inc
movsb
clc
cmpsb
mov
arpl
aas
xor
jmp
pop
mov
xchg
mov
jns
addr16
pop
mov
and
jns
fs
fs
adc
fsubrl
sbb
push
in
mull
out
in
lods
xchg
mov
pop
mov
in
stc
mov
scas
push
mov
shrb
add
mov
mov
pop
dec
rolb
out
pop
inc
cmp
adc
and
cmp
xrelease
xor
sbb
notb
cmp
leave
push
mov
dec
idivl
inc
fcoml
std
cmp
sub
push
push
lods
pop
pop
cmp
add
add
fsubrp
and
fdivl
push
sub
fdivl
subb
dec
ja
shll
xchg
mov
daa
mov
adc
sub
aas
mov
pusha
lds
lahf
xor
mov
outsb
sbb
out
push
add
sbb
pusha
add
lret
mov
ss
test
xchg
leave
jmp
adc
or
repz
sbb
xor
stos
xchg
push
imul
sub
iret
movsb
or
popf
vpunpcklwd
outsb
scas
pop
jmp
sbb
inc
xor
scas
pop
popa
pop
dec
xchg
push
jle
and
bswap
sub
and
popa
addr16
test
pop
xchg
mov
fs
int
inc
mov
inc
jno
pop
jae
cmp
jp
pop
repnz
cmp
lods
repz
inc
push
and
fbstp
xchg
cmpsb
xor
repnz
and
lahf
jle
xlat
mov
cmpsl
es
sub
mov
mov
scas
int3
jnp
icebp
lret
movsl
add
leave
mov
jne
mov
pop
test
mov
xchg
loopne
test
ss
ffreep
or
adc
push
jae
std
and
stc
cmp
jne
push
push
enter
in
fistps
pop
cmp
scas
fimuls
idiv
push
lea
iret
mov
insl
adc
dec
lahf
test
inc
inc
push
and
sti
mov
lock
cwtl
push
sbbl
out
outsb
jae
push
lret
jl
sti
mov
mov
push
notl
leave
cmpsl
inc
cmp
mov
scas
pop
dec
or
dec
dec
add
inc
in
addr16
mov
ss
shrl
scas
sub
pop
lahf
frstor
xchg
add
sbb
mov
push
mov
push
lahf
iret
test
xor
xlat
sub
fs
pop
fildl
sub
sahf
ljmp
add
cmpsb
in
xchg
jo
test
fistpl
push
xlat
dec
push
insl
mov
iret
dec
shll
and
sub
stc
cmp
push
pop
add
push
imul
rorl
mov
mov
push
sti
mov
sub
int3
and
sbb
add
push
fnstenv
aad
ds
loopne
xor
push
or
jnp
inc
cld
push
repz
mulb
mov
cmp
int
addr16
jb
add
cmc
add
jp
mov
cmp
and
add
mov
jno
icebp
inc
dec
jmp
stc
fadds
in
cld
jmp
add
cmp
mov
ss
push
stc
repz
xchg
ljmp
mov
out
cmpsb
cmovae
xchg
or
mov
pop
das
movhps
das
mov
add
pushf
pop
jae
lock
adc
scas
aaa
jbe
jno
arpl
xor
fcmovnu
mov
out
pop
cmc
cmpsl
sub
mov
pop
es
icebp
sbb
add
roll
inc
inc
dec
testl
xor
adc
or
cmpsl
dec
cmp
shl
adcb
mov
setns
lds
lret
int3
inc
fwait
lahf
xor
lods
adc
xchg
mov
fmuls
inc
mov
in
js
int
roll
sub
cmpsb
sbb
or
pop
pushf
lods
sbb
ja
mov
mov
jg
fwait
aad
mov
mov
pop
xchg
test
std
cmpsl
cmpsb
or
push
jg
cmpsl
mov
fwait
push
cmp
sbb
mov
cmp
adc
bound
xlat
fldl
xlat
sbb
test
stos
into
push
inc
dec
js
mov
je
nop
movsl
mov
bound
test
cld
or
xchg
test
pop
test
aas
push
push
cmpsb
and
mov
mov
lahf
jl
cmp
push
mov
sahf
fstps
jecxz
cmp
lcall
add
sub
xor
sahf
mov
inc
aaa
addb
stc
push
icebp
sarl
mov
xor
push
dec
xchg
jns
or
ret
fiadds
push
xor
gs
jge
mov
data16
xchg
or
push
jne
cwtl
mov
push
jo
pop
pop
pushf
test
movsl
cmp
mov
test
or
sub
fwait
jns
mov
mov
lahf
sbb
stos
addr16
inc
xchg
out
jg
push
and
leave
out
cmc
out
cltd
add
jp
in
push
shr
fidivrl
int3
inc
lods
cmp
into
shll
push
push
test
lahf
bound
in
mov
iret
jnp
cmpb
cld
pop
movsb
jns
ret
mov
les
cmc
xlat
lret
cs
pusha
inc
inc
push
mov
shrb
insb
sahf
in
mov
or
out
jbe
jne
in
dec
mov
cmp
push
imul
fistl
inc
lds
insb
pop
jb
loop
mov
pop
ret
ds
ret
or
sub
fadds
mov
das
pop
jae
mov
pop
daa
mov
mov
pop
mov
sbb
nop
sub
jecxz
push
pop
lahf
arpl
std
push
mov
fwait
inc
les
push
pushf
push
mulb
xor
es
adc
ljmp
dec
lock
loopne
inc
fcmovnbe
into
cmp
lock
mov
fadd
jbe
or
or
jno
imulb
or
pop
cmpsl
test
popf
aaa
pop
pop
and
sbb
push
add
lret
and
into
stos
leave
popa
int
fwait
mov
faddl
lahf
outsb
cmp
ds
or
ljmp
mov
pushf
inc
push
js
jno
xlat
shlb
lret
iret
aaa
mov
jle
xor
dec
ja
sub
pop
stc
xchg
sbb
loopne
cld
mov
pop
mov
fsubrl
inc
dec
dec
ret
daa
add
adc
xlat
push
adc
jg
mov
popf
stos
insl
in
mov
cmc
jmp
lods
jb
iret
sbb
push
fdivrs
or
fnsave
add
cmp
in
xorl
out
pop
jnp
push
xor
xchg
mov
mov
hlt
adc
fwait
stos
data16
rclb
adc
in
xor
loop
or
add
int3
cld
sbb
sbb
adc
repz
movsb
cmp
in
xor
push
pop
movsb
je
mov
xor
gs
stos
and
pop
lahf
push
push
mov
jg
data16
or
push
mov
hlt
and
popl
pop
xchg
pop
push
push
rorb
mov
sbb
xchg
fcmovnbe
sbb
jl
jle
or
in
movsl
rcl
inc
daa
xchg
cmp
enter
fsts
jo
lds
add
inc
cs
testb
push
stos
shrb
sbb
pop
adc
push
cmp
jmp
and
iret
ljmp
jno
mov
fbstp
aam
imulb
mov
push
push
ret
fwait
and
mov
inc
or
adc
fdivp
dec
lods
dec
sbb
int
inc
shlb
mov
xchg
out
lods
popf
push
inc
dec
push
int
fdivrp
and
xchg
push
pop
addr16
sarb
out
iret
cltd
arpl
in
sbb
shll
shr
pushf
iret
xchg
dec
gs
mov
mov
jge
repz
aaa
mov
mov
jno
dec
leave
fisubs
jle
pop
sub
mov
cli
in
or
stc
jmp
jl
int3
jae
cmpsl
les
xchg
xchg
int3
push
xchg
dec
pop
adc
arpl
mov
cmpsl
xchg
ds
jmp
mov
les
aas
mov
mov
ljmp
stos
push
adc
xchg
lcall
jg
ss
push
jno
jo
jne
or
shlb
roll
mov
or
xor
mov
jno
mov
jne
clc
daa
sub
gs
mov
stos
pop
or
sbb
push
push
lret
sbb
arpl
icebp
or
push
add
inc
notl
pop
push
and
fstl
jnp
add
aaa
sub
inc
sbb
aam
cmp
out
mov
ret
xor
nop
xchg
scas
jecxz
fadds
cmpsb
leave
mov
pop
das
pop
sbb
movsb
out
sahf
rcl
mov
out
ret
fnstenv
fsqrt
mov
adc
aad
or
mov
add
in
adc
rcrb
sbbb
and
aas
push
jg
ss
jns
cmp
sbb
mov
and
cld
xlat
lahf
cmpsl
dec
int3
lret
sub
enter
jae
ret
cmc
lds
jne
fisubs
dec
jae
bound
hlt
call
sarl
sbb
out
cli
xchg
push
cld
inc
int
push
cmp
pop
das
xchg
out
mov
mov
sub
int3
jg
arpl
daa
sub
aam
in
push
arpl
dec
es
bound
add
mov
sub
out
cmp
and
sbb
push
and
icebp
lcall
test
dec
js
inc
incb
out
clc
scas
inc
adc
lods
lcall
cmpsl
dec
bswap
insb
jns
mov
cltd
or
call
cmpsl
xchg
push
inc
sahf
inc
cmc
cltd
mov
daa
test
leavew
push
mov
loopne
in
and
xor
pop
mov
push
movsb
in
adc
and
jb
sarl
and
je
mov
hlt
mov
cmp
xor
lock
arpl
adc
movsb
nop
xor
lcall
das
into
mov
xor
jo
in
sub
lods
pop
cmc
xchg
sbb
jp
cmp
popa
in
aad
jns
aam
mov
sbb
arpl
std
pop
xchg
sbb
pushw
pushf
aam
in
repnz
ficomps
and
divl
fcmovb
sbb
insl
adc
push
rcrl
xorl
call
rcll
cmpsl
mov
or
pop
frstor
outsb
cmp
lahf
repz
dec
pcmpeqw
pop
sahf
stos
inc
inc
scas
stos
ret
lcall
xorl
data16
pop
jg
lods
out
roll
movb
mov
mov
test
mov
dec
notl
jge
lods
scas
outsl
pusha
shll
push
adc
mov
adc
mov
jns
sbb
jnp
jge
jecxz
enter
sub
or
inc
push
lods
cmpsb
stc
pop
mov
jle
js
fcmovne
mov
cltd
inc
mov
lahf
push
sbb
or
lea
mov
add
aad
rsm
loope
mov
push
cmp
lds
and
or
jne
jecxz
cmp
out
arpl
xor
inc
popf
jmp
xchg
pusha
lods
lods
das
movsl
push
ret
pop
xlat
and
cltd
and
pop
inc
and
mov
aas
outsl
lret
inc
out
pushl
enter
add
inc
inc
dec
jge
mov
imul
mov
sbb
jne
adc
imul
sub
mov
js
stos
pop
test
iret
icebp
arpl
ja
aad
insb
xlat
xor
push
clc
fcmovnbe
add
jg
rorb
mov
mov
ja
lcall
xor
and
je
stc
xor
repnz
rcrl
test
data16
xor
movb
sub
push
mov
jp
dec
outsl
jo
cltd
jne
or
jnp
fst
mov
or
pop
push
or
out
and
jge
pop
scas
and
push
cmp
adc
jp
add
fldt
push
in
inc
adc
pop
xor
imul
or
jmp
and
sbb
mov
xchg
mov
xlat
inc
cmpsl
test
xchg
shl
mov
or
fwait
cmp
insb
decb
cld
in
call
movsb
cmp
gs
lahf
pushf
jp
imulb
push
cli
and
cmp
mov
ret
cltd
sarb
imul
mov
rcrl
push
shll
mov
daa
jl
int3
in
ror
hlt
gs
mov
adc
fwait
add
dec
push
mov
jnp
inc
sub
clc
push
or
mov
dec
dec
rorb
and
int
mov
dec
xchg
xorl
sti
mov
sar
inc
nop
cltd
sarl
mov
dec
fsin
xor
mov
xchg
xor
inc
sbb
fsubrs
push
out
sahf
arpl
cmpsl
out
out
mov
test
pop
lea
loope
cmp
cmp
cmp
add
sub
cld
xchg
sahf
jnp
popl
in
dec
icebp
test
and
ljmp
add
sbb
and
sbb
test
pushf
stos
mov
or
mov
aaa
leave
into
add
out
cmp
cmp
clc
xchg
ficomps
jno
shrl
test
mov
enter
xor
add
icebp
or
arpl
nop
sti
jmp
dec
and
or
mov
aad
rcll
xor
cmp
daa
lea
call
jle
das
pop
sbbb
mov
adc
sub
xchg
and
push
fnsetpm(287
addl
dec
add
and
xchg
scas
dec
push
mov
or
subl
pusha
shll
cs
leave
or
jecxz
stos
sub
adc
jle
or
push
mov
or
ficoml
mov
addl
insb
mov
xchg
test
decl
lret
outsb
mov
ret
xor
mov
cmp
cmp
arpl
fucomip
stc
add
adc
mov
in
push
ret
incb
mov
mov
inc
xchg
push
pusha
movsl
push
mov
sahf
das
inc
outsb
jg
xor
lahf
sub
jb
inc
cmp
mov
xrelease
push
pop
pop
testl
std
adc
scas
mov
xchg
mov
loope
mov
iret
loope
push
lret
fsubrl
sub
mov
adc
cmp
insb
sar
jmp
js
daa
test
cs
loop
outsl
cmp
mov
in
rclb
in
ja
iret
push
mov
fisubrs
mov
fldcw
sub
ljmp
aad
mov
scas
aaa
mov
dec
jmp
pop
xor
cltd
jno
sbb
mov
adc
scas
xchg
adc
test
adc
xlat
add
pushf
pop
xor
push
out
imul
mov
mov
lods
cmp
aas
push
mov
xchg
push
pop
ret
incl
cmp
idivb
sbb
jae
sbb
popa
into
ljmp
call
jge
jmp
stos
inc
push
mov
or
jmp
jb
pushf
cmpsb
das
dec
ret
addb
xchg
out
xsha256
cmpsb
push
add
cld
pop
repnz
pop
add
xlat
cmp
sub
aad
out
les
popa
sbb
push
jns
sbb
push
xchg
mov
xchg
add
pop
xchg
enter
shl
rcr
adc
ja
ret
pop
lret
outsb
mov
lcall
pushf
fmull
pop
imul
xor
test
ficoml
and
mov
outsb
addb
inc
mov
jnp
shr
aam
cld
stos
addl
jnp
jmp
cmp
je
mov
xlat
push
jp
push
leave
shlb
test
xchg
xchg
xchg
scas
in
sbb
dec
icebp
icebp
sbb
mov
mov
out
out
mov
push
mov
adc
gs
out
adc
cmpsl
lds
aam
les
imul
out
nop
dec
out
jns
lock
out
cmp
xchg
mov
lea
jl
dec
mov
or
popa
stc
jbe
jae
iret
mov
loopne
mov
mov
sar
dec
cmp
mov
cmpsl
cld
imul
push
jns
mov
aas
jmp
mul
dec
mov
insl
adc
mov
xchg
push
mov
out
mov
sar
xor
divl
or
cltd
aaa
mov
cmp
add
out
movsl
adcl
dec
cmp
gs
jae
call
call
imul
or
mov
inc
stos
cwtl
imul
adc
jmp
jmp
mov
dec
pop
jo
add
sbb
push
fidivs
and
jne
and
xor
or
sbb
push
sbb
into
push
jno
lret
mov
dec
mov
test
add
xor
mov
xor
fucomi
into
xor
cmp
mov
in
fistpll
jp
fcoml
outsl
adc
lods
aad
bound
lahf
sub
ss
arpl
xor
repz
fsubrs
cmp
and
clc
mov
xchg
decb
jle
xchg
dec
shlb
jb
xchg
sbb
add
movsb
jnp
mov
inc
out
out
push
sub
popa
out
lods
lods
std
jge
jle
repnz
dec
mov
add
stos
dec
out
aas
xor
inc
in
adc
add
mov
xorb
push
daa
sub
stc
lods
rorb
xor
iret
xchg
dec
adc
leave
mov
and
or
stc
xor
pop
cmpsl
xlat
push
or
fcomps
addr16
cmp
insb
xor
push
jne
or
sbb
cltd
test
cs
stos
shlb
sub
mov
pop
repnz
xlat
faddl
sbb
push
and
mov
pop
mov
movsb
sbb
fnstsw
nop
ds
sbb
loopne
shlb
cmp
sti
add
ss
adc
out
std
in
pop
mov
xchg
call
mov
xchg
mov
adc
jbe
dec
mov
in
cltd
pop
sub
push
mov
fwait
inc
add
out
dec
xchg
mov
mov
std
scas
bound
ds
mov
std
addr16
xchg
sbb
int3
iret
cmp
mov
pushf
adc
xchg
fxch
sub
push
ja
imul
daa
jl
dec
ljmp
mov
out
mov
cld
mov
mov
dec
arpl
jg
or
jo
testb
imul
xchg
xor
outsb
adc
jp
enter
test
xchg
ret
stc
add
adc
ja
int3
leave
pusha
mov
mov
pop
lods
jno
mov
push
sub
and
mov
das
in
aaa
xchg
or
lret
mov
fwait
xor
mov
add
mov
xor
lret
das
rcrb
imul
xchg
cld
cmp
outsb
mov
addl
pop
push
stos
rorl
adc
test
xchg
mov
scas
bound
lea
incl
sbb
jne
mov
xchg
fwait
insl
movsl
ja
jbe
xor
or
adc
mov
in
xor
or
es
mov
sbb
sub
jae
fistl
xor
in
sub
rcll
sahf
fs
push
or
jno
sbb
mov
push
add
out
inc
clc
pop
mov
sbb
and
cwtl
aaa
out
xchg
clc
call
daa
mov
test
stos
call
mov
out
fsub
stos
pop
inc
cmp
cwtl
add
je
cmp
mov
adc
clc
stos
out
shll
and
adc
insl
stc
popf
test
sub
mov
mov
inc
push
cmpsb
mul
sub
push
adc
sti
into
nop
jb
cmc
leave
jno
ljmp
and
rolb
add
rolb
bound
dec
lods
xchg
pop
mov
dec
pop
iret
sti
iret
pop
lret
xchg
and
inc
xlat
pop
pop
inc
push
add
addr16
enter
addr16
jno
and
or
push
xchg
cmp
mov
jne
pop
cltd
cltd
or
fistpll
sahf
xchg
pop
mov
jo
cli
lock
in
cltd
loope
jle
mov
mov
lods
fwait
sub
push
clc
inc
iret
lret
test
mov
repz
ud2
pop
lcall
mov
cld
in
fimuls
test
daa
add
pop
int3
inc
orb
out
pop
andb
push
arpl
xchg
pusha
sub
add
xlat
jmp
ljmp
ret
out
xchg
ljmp
mov
popf
pop
pop
cs
pop
sub
add
loop
cmp
push
add
sub
and
mov
pop
mov
lods
in
or
xor
lcall
lds
gs
mov
mov
pop
adc
out
rcrb
test
fwait
bound
mov
add
imul
pop
ret
jl
mov
rcl
push
jl
and
or
jno
xchg
push
cwtl
mov
fstpl
push
pop
dec
sub
jo
movsb
icebp
call
jg
adc
pop
dec
push
push
and
rorl
dec
jnp
enter
scas
and
jno
sub
out
pop
and
lea
xchg
ds
inc
jbe
es
cmpsb
pop
sbb
push
test
add
movsb
inc
xor
loopne
pop
enter
lods
fmul
sahf
cmp
iret
leave
pop
test
xlat
popf
push
pop
loop
popa
push
shrl
inc
call
cli
mov
shll
scas
call
rcl
aas
push
lods
lcall
imull
xor
test
std
in
mov
insl
cltd
pop
pop
rclb
adc
mov
loopne
pop
inc
fldt
fidivrs
icebp
iret
ss
adc
fwait
mov
sub
push
or
jl
testb
popa
and
fstpt
out
mov
and
push
or
adc
cmpsl
insl
cwtl
sbb
inc
out
fwait
pop
ja
out
add
enter
adc
rorb
pop
lods
jns
loope
push
popa
pushf
xchg
xchg
sbb
cmpsb
hlt
fsubrs
test
add
xchg
or
rcrl
stos
je
adc
call
dec
lods
les
inc
jl
inc
pusha
pusha
adc
or
div
inc
or
adc
mov
sub
dec
ret
jmp
lock
pop
dec
hlt
sbb
pop
lret
and
stos
or
xchg
jecxz
pop
cmc
adc
and
xchg
jae
jne
cs
and
rcll
popa
test
outsl
cli
daa
xchg
mov
icebp
add
mov
xor
add
sub
xchg
xlat
popl
or
xor
pop
xor
into
push
push
test
push
outsl
xor
sub
push
sub
scas
nop
in
dec
sbb
int3
into
data16
test
push
jecxz
sbb
xor
inc
ficoml
mov
pusha
mov
lock
and
adc
push
lds
movsb
jle
pusha
loop
movsb
movsb
push
inc
jmp
add
pop
insb
test
pop
test
subl
stos
stc
adc
mov
inc
push
mov
mov
mov
insb
push
out
ja
test
cli
aad
icebp
add
add
jge
cmp
sub
mov
mov
add
xchg
shrb
mov
adcl
sbb
mov
ja
and
mov
jns
jbe
mov
sbb
mov
loop
push
cwtl
adc
jge
in
push
int3
lock
iret
sarb
mov
std
jp
mov
inc
push
movsl
outsl
push
xor
cmp
lds
or
push
orb
mov
mov
xchg
cli
cmc
sbb
sbb
push
bnd
jmp
push
das
insb
sarl
sahf
xor
les
pop
cltd
mov
mov
cmp
hlt
or
pop
in
push
daa
xchg
lods
sub
mov
push
and
adc
pop
push
repnz
sub
cmp
std
inc
data16
push
xor
and
nop
mov
add
inc
ss
pushf
cmc
loopne
xchg
sbb
sbb
or
hlt
idivl
test
pop
xchg
adc
pop
dec
add
addr16
in
mov
and
mov
cmp
sub
ss
mov
add
aam
outsl
in
mov
fmull
cmc
es
stc
fsub
mov
rcrb
ljmp
cs
sbb
jg
inc
sub
jae
and
pop
les
fidivl
add
xor
jne
cwtl
push
adc
ret
cmp
and
jmp
push
mov
inc
scas
xchg
dec
and
push
shlb
js
mov
mov
xchg
je
sub
in
mov
adc
fstpt
pusha
ret
ficompl
addr16
lods
jecxz
pop
fidivrl
fsubrl
scas
bound
mov
push
insl
jae
notb
sbb
push
inc
fwait
andb
ljmp
sbb
sub
pop
pop
in
add
jne
sti
sbb
jb
in
cld
dec
fldcw
call
and
push
inc
mov
lret
fistpll
out
js
push
hlt
cmp
sub
nop
mov
and
pop
inc
and
mov
lock
jnp
or
jmp
xchg
test
jge
cwtl
sar
ret
rcrl
mov
ds
mov
in
mov
mov
and
negl
xor
push
fwait
les
adc
jae
outsb
insb
daa
and
jns
in
push
testb
add
xor
mov
lds
pop
pop
cli
out
mov
push
popf
fnstcw
xlat
insb
xchg
insb
mov
dec
sbb
lret
jle
cmp
in
sbb
jecxz
cwtl
aaa
and
mov
sub
divb
push
es
jecxz
mov
test
in
sbb
pop
out
fcmovnb
xor
insl
loop
push
cli
cmp
sbb
outsl
insb
cmp
sub
in
push
in
push
out
enter
sarb
push
sub
add
dec
add
push
es
sbb
inc
jo
movsb
adc
mov
imul
push
push
jns
mov
repnz
mov
jb
inc
push
fwait
bound
fbstp
ja
inc
mov
sahf
jno
std
xor
jbe
inc
cmp
mov
push
pop
adc
xchg
jmp
dec
adc
divl
frstor
dec
dec
rcrl
enter
or
into
adc
ds
fs
imul
jne
push
mov
inc
js
sub
ljmp
fwait
sbb
lahf
mov
test
nop
shll
cmp
pusha
xchg
jne
sbb
push
sti
inc
outsl
ret
sub
mov
stos
push
or
push
inc
xchg
nop
movsl
outsl
adc
mov
imul
add
jo
lea
insb
aas
push
push
arpl
in
xchg
mov
push
loop
jae
je
add
repnz
lret
adc
and
sbb
inc
add
int3
dec
es
sub
xchg
addr16
in
mov
jne
popf
loope
in
out
lret
xor
dec
ja
dec
inc
cs
cmp
cmp
std
push
sub
dec
pushf
fs
xor
dec
mov
inc
test
push
imul
hlt
int3
mov
mov
or
mov
cld
push
xor
push
jecxz
push
incl
mov
mov
push
fwait
sbb
sahf
adc
mov
xor
mov
jae
int
inc
fdivp
std
dec
jo
cbtw
ret
xor
fcmovnu
les
sub
pop
popf
xor
pop
adc
mov
aam
and
sub
ret
popa
adc
mov
icebp
loopne
mov
sbb
push
imul
fisubl
lret
fmull
mov
sub
or
mov
icebp
lods
int3
mov
or
and
ret
jae
divl
or
int3
or
ficomps
lsl
sbb
testb
jp
bound
or
js
mov
add
xchg
lods
popf
inc
push
jne
popa
push
stc
jno
std
sbb
pop
push
fdiv
fisttps
std
leave
sub
mov
lds
dec
into
adc
jne
in
mov
push
xor
or
aaa
aam
mov
icebp
aas
xor
aaa
out
int3
daa
popl
pop
or
fxch
dec
mov
jbe
push
pop
jne
rolb
jae
xlat
sub
cmp
es
mov
mov
daa
jmp
dec
xor
mov
dec
mov
jmp
das
sbb
in
adc
jbe
fstp
cmp
and
sbbl
inc
cmp
stos
xorb
and
adc
mov
sub
or
sub
loopne
sarb
jge
add
cmp
pushf
pop
rcll
lahf
mov
jle
icebp
and
push
in
or
mov
sahf
movsb
xlat
psrad
pop
int
sbb
lret
test
es
jecxz
ret
fsubrp
mov
lcall
loopne
in
xor
lret
imul
fildl
stos
cmpsl
lcall
jl
aas
fsubr
sbb
xchg
aam
mov
mov
pop
andb
jbe
sarb
pop
adc
inc
fidivl
xor
mov
cltd
hlt
inc
out
sub
xchg
dec
das
jno
popw
inc
test
repnz
negl
popa
adc
sbb
into
sub
fadds
aad
fmull
sti
push
mov
adc
inc
ret
lods
cmpl
dec
icebp
inc
lret
dec
je
stc
cmp
mov
dec
cld
ret
test
lahf
cs
sbb
jno
fnstenv
and
inc
add
addl
or
shr
add
data16
cmpb
movsl
or
push
fstpl
aad
mov
es
adc
push
ret
lret
xor
clc
push
jmp
xor
or
pushf
xlat
popa
stos
out
repz
jnp
xchg
lcall
fnstsw
or
adc
sbb
mov
mov
jo
cmp
int
dec
push
inc
xor
test
call
pop
adc
jge
cmp
jle
lea
into
sub
pop
add
sbb
test
mov
test
jb
adc
ds
cmp
fimull
rcr
push
cmp
and
mov
das
mov
mov
into
mov
fbld
cli
jecxz
imul
cmp
sub
and
lret
or
test
mov
push
dec
divl
jmp
mov
lea
shr
adcl
push
mov
shlb
push
push
jmp
sub
rcrl
sbb
fchs
pop
xchg
push
jle
in
les
loopne,pn
mov
push
push
stos
aad
pop
fmull
or
mov
repnz
ret
mov
popa
es
mov
mov
push
mov
cmc
mov
sub
bound
lea
dec
lds
das
push
push
push
sti
add
pop
rorb
add
fsubrl
jge
ret
insb
add
pop
ss
xor
mov
jmp
adc
dec
inc
push
lret
pop
flds
pop
or
xchg
mov
adc
push
pop
imul
pop
shrl
push
popf
mov
sub
cmp
negl
and
sti
push
sbb
in
pusha
shrl
xchg
movsl
and
xchg
int3
add
sahf
cwtl
adc
popa
pop
xchg
jle
in
pop
jns
cld
cmp
fwait
push
test
mov
fsubs
je
push
cmp
cltd
aaa
inc
jnp
popa
add
aam
xchg
scas
ret
lods
cmpsl
cmc
test
loopne
mov
jg
push
lahf
dec
aam
xor
push
mov
inc
inc
add
mov
mov
mov
xchg
or
and
data16
mov
sbb
loopne
or
push
add
pop
jecxz
or
popa
sub
xchg
or
mov
add
dec
dec
shrl
jmp
dec
mov
xchg
repz
cli
out
dec
stos
jge
mov
je
andl
fs
inc
leave
xor
lods
stc
inc
mov
mov
xchg
rorl
fwait
sti
out
sahf
imul
lret
push
outsb
lds
notl
je
mov
xchg
jbe
insb
inc
lods
ds
sub
test
xchg
ja
nop
push
push
and
das
mov
aam
jae
sub
or
add
scas
fidivrl
jecxz
dec
movsl
loopne
add
cli
add
pop
fldcw
inc
cmp
scas
out
xor
cwtl
std
shll
sub
cmp
fidivrl
pusha
jb
les
mov
subl
inc
sub
inc
add
inc
clc
rcrb
push
pop
imul
ret
jmp
xlat
jg
jns
jmp
jmp
cmc
scas
popa
imul
add
jge
insb
xor
rcl
outsl
fwait
idivb
xor
pop
mov
sub
add
sub
push
and
cmpl
mov
out
jns
out
inc
adc
jb
rclb
push
dec
inc
push
popf
or
xchg
jno
xchg
push
ficoms
mov
adcl
sub
adc
cwtl
and
andb
sub
shlb
jae
push
nop
cltd
out
sbb
repnz
stos
popf
cmovo
daa
jno
mov
add
jle
mov
fs
insl
mov
xor
in
add
dec
adc
fists
add
call
stos
sbb
add
cmpsl
leave
inc
cmpsb
inc
out
xchg
xchg
push
jl
adc
add
enter
dec
sub
inc
sub
subb
xor
and
aas
mov
mulb
cmc
sbb
std
enter
lahf
adc
mov
filds
jl
scas
movsb
sub
sarb
data16
movsb
dec
insl
xchg
test
ret
inc
lea
int
jbe
aad
mov
xor
push
push
orb
mov
xor
scas
sbb
inc
mov
jbe
stc
inc
add
in
mov
pop
mov
xchg
insb
dec
incb
jge
sbb
rcll
std
push
fs
push
add
lahf
push
sbb
and
aaa
in
inc
in
orl
jl
mov
movsb
in
jnp
mov
adc
cltd
xor
movb
rorl
jmp
out
sbb
mov
inc
xchg
sbb
ss
xchg
adc
adc
call
mov
aaa
aam
adc
lcall
lret
popa
in
not
aad
push
mov
rorb
int3
mov
dec
mov
call
hlt
inc
dec
addb
pop
dec
out
cmp
xchg
ficoml
bound
xchg
adc
inc
adc
cwtl
push
adc
aaa
adc
pop
xlat
mov
jb
leave
imul
lock
loopne
jne
inc
pop
xor
inc
jle
push
or
push
sbb
fiaddl
cltd
lcall
mov
sbb
sub
std
leave
mov
dec
sbbl
add
adc
clc
inc
add
test
popf
cld
pop
dec
notb
fdivrl
inc
mov
jle
mov
pop
add
adc
je
push
in
sub
adc
in
sarl
cli
dec
stos
mov
push
sub
in
fsubs
scas
enter
lahf
orl
popa
sbb
ret
mov
xchg
iret
push
mov
mov
push
je
push
xchg
mov
cmp
js
adc
or
out
fmull
mov
rolb
shl
std
sbb
mov
push
sub
dec
xchg
cmp
pop
push
cld
push
loopne
cs
nop
push
xchg
pop
es
sub
shl
push
jl
add
cmp
popf
lcall
aam
addr16
push
ret
mov
and
pop
pop
pop
into
sub
lods
nop
jle
cmp
and
repnz
fistl
mov
adc
pop
mov
scas
leave
xchg
jg
movsl
rclb
arpl
xchg
mov
jl
push
outsl
push
mov
push
int3
out
xor
xor
adc
pop
jo
xrelease
scas
and
add
popf
loope
pusha
pop
add
pop
mov
ja
push
cmp
jmp
push
imul
fsubs
fcoms
ror
push
shrb
out
out
jmp
popa
sbb
lcall
sti
leave
test
cltd
push
cwtl
dec
lock
xchg
clc
loop
mov
xlat
jne
movsl
mov
mov
or
xchg
xchg
sbb
int
mov
mov
mov
dec
stos
popf
jnp
test
in
mov
cmp
inc
aad
cmp
add
cmpsb
add
mov
je
scas
mov
jb
sbb
sub
xchg
int
imul
loop
mov
das
mov
mov
imul
scas
ret
repnz
jg
jns
outsl
sub
mov
fs
and
shlb
andl
mov
sbb
jle
int3
imul
in
jmp
mov
inc
aaa
lods
test
ret
addl
mov
sub
inc
aas
std
cmpsb
or
sub
test
and
push
leave
fsubl
jg
jl
sub
sub
insl
or
clc
add
sbb
shl
xor
sbbl
jnp
enter
pushf
xor
add
mov
push
sub
test
pop
xchg
lahf
in
cmpl
sbb
mov
movb
ljmp
xor
or
nop
fsubl
pop
mov
pop
mov
pop
push
push
jo
jae
stc
in
aad
std
sti
sbb
fstl
mov
jle
push
dec
inc
and
adc
xor
cmp
mov
ljmp
cwtl
clc
sbb
jno
push
mov
js
cmp
cwtl
dec
jp
add
lcall
aam
rcr
inc
nop
dec
sbb
jle
cmp
and
add
push
mov
fldt
add
fdivrs
aas
js
scas
stos
xchg
push
mov
sub
mov
lcall
sahf
mov
aas
sbb
mov
daa
push
mov
stc
int3
push
jg
adc
add
cmp
sub
lock
dec
call
jnp
dec
int
mov
addr16
test
jmp
jecxz
mov
mov
push
subb
leave
stc
push
inc
xor
ss
jg
notb
jmp
lea
dec
sbb
jmp
xchg
and
inc
xor
int
and
pop
addr16
mov
out
lret
jecxz
arpl
out
jecxz
nop
stos
xor
clc
dec
fadd
mov
cmpsb
stc
movsb
ret
mov
out
add
fmul
push
outsl
frstor
dec
mov
mov
add
sarb
int3
call
leave
or
inc
push
insb
adc
mov
pop
cltd
cli
sti
cli
jo
cmp
mov
mul
xor
aam
dec
mov
cmp
int3
push
inc
ret
xor
mov
jg
es
ds
cld
je
push
das
lahf
xchg
jb
mov
out
mov
loope
dec
ja
call
sub
inc
pop
cmp
jb
or
fdivs
add
mull
mov
jmp
push
jb
add
add
mov
mov
inc
ds
addr16
or
mov
lods
mov
inc
xor
addl
push
repz
cmp
rcll
add
jmp
in
xor
cmp
xchg
sub
leave
mov
shll
or
iret
xchg
scas
sub
or
int3
xor
xor
negb
add
in
adc
je
jne
js
inc
inc
xchg
cmpsb
and
or
pop
sbb
lods
jl
jae
addr16
sti
aaa
sbbb
mov
xor
xchg
jle
test
mov
test
stc
cvtps2pd
or
loop
out
shl
jnp
popa
shld
iret
pop
jo
push
dec
mov
jno
cmc
inc
inc
notb
inc
rorb
lret
repnz
or
hlt
xor
fucomip
jl
in
neg
lahf
dec
in
cmpsl
lds
leave
xchg
push
or
mov
adc
aam
cmpsl
xchg
movsl
in
mov
mov
xor
inc
adc
aad
lods
ret
insb
xchg
stos
mov
divl
fists
or
fcom
push
jno
jp
pop
push
shr
and
pop
sbb
loope
je
test
sub
stc
je
pop
dec
xacquire
inc
and
sub
pop
or
lret
inc
jns
cmc
sahf
and
out
jb
cmp
aad
inc
pop
mov
popf
in
sub
jle
test
adc
xor
insb
adc
daa
nop
push
outsb
fwait
pop
push
add
jne
stc
xchg
arpl
fidivrl
pop
test
movsb
mov
mov
movsb
inc
mov
movsb
or
daa
es
idiv
in
and
adc
and
cmp
add
sbb
gs
popf
outsb
imul
jl
aas
sti
movsl
ret
nop
in
scas
add
in
jle
sbb
jmp
pusha
sub
imul
popf
xor
or
sti
dec
xchg
ror
mov
lock
fsub
and
es
mov
mov
shrl
push
mov
bnd
jp
jmp
fcmovu
push
orb
jbe
mov
shll
inc
mov
xor
add
shl
mov
cmp
pop
shl
scas
push
dec
mov
or
cmp
call
ret
jns
xchg
movsb
mov
mov
push
pop
mov
sbb
push
sti
inc
cmp
inc
push
popf
adc
js
dec
call
sbb
add
add
outsb
inc
adc
cwtl
aad
cmp
cmc
data16
mov
mov
dec
out
sub
mov
xor
xchg
lahf
and
mov
inc
filds
pop
pop
jmp
fstpl
jecxz
cli
aam
sub
movsl
js
jnp
sub
push
repnz
mov
into
or
aaa
jl
push
cs
adc
sub
xor
push
into
fcmovnu
adcl
sbb
aad
in
adc
and
test
lock
add
xchg
cmp
xchg
adcl
stos
addr16
clc
in
cmp
jne
cli
add
in
jmp
in
jae
fucomp
push
dec
mov
popf
lds
shrl
dec
sub
add
call
mov
and
ret
dec
cld
pop
daa
in
out
stos
call
xchg
scas
xchg
adc
nop
iret
shrb
or
movsl
scas
pop
and
outsl
pop
xor
mov
call
notb
lods
inc
testl
xchg
mov
stos
cmpsl
fiaddl
outsl
call
cmp
jne
or
cmp
movsl
inc
in
call
shl
fs
push
insl
pop
sub
jle
push
repnz
das
shlb
pop
cmp
xor
shll
jno
aaa
xchg
push
mov
mov
sub
add
jo
imul
mov
gs
pushf
loopne
dec
scas
fdivrp
ficoml
pop
scas
pusha
push
jo
or
cmp
xchg
or
and
xchg
test
stc
push
pop
dec
data16
pop
gs
sub
imulb
jnp
cmp
cmpsb
and
inc
mov
pop
jecxz
stc
push
leave
and
mov
bound
inc
jo
cs
ja
add
cwtl
fsubp
out
pop
push
aaa
add
fnstcw
imul
push
sbb
push
out
fistl
inc
jno
mov
push
stc
xor
jnp
sub
data16
test
add
inc
cmp
or
adc
movsb
or
cmp
cli
ss
jmp
adcl
push
lods
cli
test
inc
xor
sub
test
ret
or
leave
das
lods
loop
mov
cltd
fbstp
push
out
sub
arpl
out
push
hlt
nop
test
in
mov
push
xchg
scas
hlt
and
pushl
pusha
push
xchg
mov
repnz
mov
cs
daa
inc
out
outsb
cmpsb
int
daa
int
mov
xchg
xor
xchg
pushf
insb
movsl
push
popf
mov
sbb
out
push
lds
mov
and
and
sub
pop
cmp
and
cld
jmp
fisubrl
rcrb
fisttpll
mov
in
ja
push
mov
mov
pop
orl
aaa
push
sbb
int3
cwtl
pop
dec
mov
jb
lahf
lock
ret
mov
sbb
aaa
dec
into
jb
out
xchg
xlat
hlt
dec
shrd
imul
mov
or
mov
push
sub
push
xor
in
xchg
mov
dec
std
loop
sub
pop
inc
mov
adc
push
dec
ret
push
outsb
jne
xor
lods
test
dec
ljmp
mov
sub
lahf
std
jle
lret
mov
cmp
movsb
inc
xchg
add
stos
xchg
xchg
jae
adc
jg
les
insb
sbb
test
jp
mov
jmp
popa
out
push
jmp
shrb
lret
in
mov
mov
inc
jb
nop
xor
lock
cs
movsl
imul
sub
insb
loop
fisttpll
cmpsb
imul
pop
das
dec
inc
push
mov
repnz
add
inc
jae
out
clc
or
lods
sbb
and
push
dec
push
popf
nop
or
popa
push
push
mov
pop
int3
pop
cmc
sub
sahf
mov
iret
sarb
stos
fs
lods
add
test
jp
dec
loop
aam
clc
call
sub
sti
xchg
in
adc
movsb
cmp
mov
in
mov
or
dec
jle
lahf
sub
push
adc
mov
mov
xchg
inc
lret
loope
mov
inc
imul
xor
popa
push
push
mov
nop
adc
sbb
xor
dec
aam
lock
std
outsb
mov
mov
adc
adc
jp
push
rcrb
addl
sub
cmp
ja
jbe
cmp
aas
pop
daa
iret
lock
out
pop
mov
aam
jbe
dec
jmp
push
mov
inc
mov
in
stc
scas
push
xchg
aam
mov
insb
mov
rcr
test
shrb
outsb
scas
inc
in
pushf
cmpsl
push
pop
imul
mov
es
or
jle
push
aam
vmwrite
cli
test
jb,pt
and
pop
rcll
popa
inc
imul
inc
dec
rcll
push
mov
pop
fisubs
fbstp
into
mov
nop
dec
push
sbb
jecxz
or
aam
push
sub
mov
fnstenv
dec
aas
or
das
loope
lret
jle
int3
repnz
stos
dec
xchg
test
add
out
test
daa
cli
or
dec
icebp
das
jmp
lret
test
call
mov
insb
jo
push
cmp
clc
mov
lahf
in
cli
inc
sub
jb
cmp
mov
roll
popf
push
enter
rcll
cli
and
xorb
nop
dec
out
add
dec
inc
scas
lcall
mov
pop
leave
das
or
push
scas
mov
xor
sahf
mov
mov
imul
data16
or
xor
mov
xor
mov
cmpsl
sbb
outsb
mov
jno
inc
lock
and
and
pop
mov
int3
into
add
test
and
pop
cli
lcall
ficompl
adc
cwtl
dec
jp
sti
add
mov
loope
mov
cltd
addb
iret
inc
jne
dec
dec
loopne
lods
out
imul
repz
sbb
cs
jb
mov
ljmp
cltd
ficompl
and
cli
bound
adc
testb
imul
xchg
xchg
aad
sbb
stc
lock
push
jp
jb
and
sub
sarb
cmc
leave
dec
pop
add
dec
push
pop
nop
nop
lret
jmp
lret
cmp
in
ss
jmp
jl
mov
ret
out
inc
xor
shl
xchg
into
jne
mov
mov
push
push
xor
aas
mov
inc
ja
add
jmp
loopne
xor
xor
out
cwtl
daa
cmp
push
cmp
outsl
mov
notl
mov
enter
mov
movsb
sarl
cwtl
push
jge
les
xchg
xor
sub
insb
in
movsb
sbb
filds
add
and
push
push
std
decl
push
mov
xor
or
insl
in
adc
cmp
cmp
add
icebp
or
arpl
out
sub
fldcw
push
sbb
xlat
ja
xchg
jecxz
mov
xchg
or
sub
and
sub
jp
sbb
popf
mov
cmp
aaa
add
jecxz
stos
notb
cmp
decb
add
jg
xchg
sub
push
mov
loop
loope
sahf
fcmovu
or
sarl
int
adc
and
test
push
fmull
pop
add
enter
out
add
or
adc
loopne
sbb
pop
jb
sbb
cmc
dec
pop
bound
mov
arpl
je
adc
sbb
ds
js
es
xor
pop
mov
repz
add
dec
xchg
gs
adc
jae
mov
nop
add
outsl
mov
repz
mov
icebp
mov
repz
scas
adc
stos
pusha
cld
test
out
insl
repnz
cmp
cmp
push
repz
cmp
aam
cld
inc
test
in
mov
test
pop
sub
cli
adc
xchg
icebp
xor
or
lock
orl
aaa
test
mov
fwait
mov
mov
mov
test
pusha
push
mov
call
pop
jmp
mov
push
gs
stos
je
les
sbb
pushf
stos
push
sbb
xlat
dec
cmp
xchg
mov
push
xlat
fcmove
mov
sub
jb
and
xor
cmpsb
lods
add
push
aam
cmpsl
sub
jb
jp
mov
push
das
add
repz
pop
xchg
sbb
out
jmp
mov
mov
xor
sbb
mov
add
cld
cmp
dec
sub
cmc
jns
ljmp
decl
dec
fildl
sub
cmpsl
and
cmp
mov
pushf
push
inc
jnp
inc
daa
lds
scas
push
cmp
loop
cmp
mov
mov
loopne
das
jmp
je
jno
and
je
mov
mov
fpatan
std
insb
in
cmp
orl
nop
lcall
dec
push
test
test
mov
mov
mov
push
adc
bound
cmp
mov
push
mov
adc
xor
inc
inc
jns
pop
dec
out
hlt
jg
pop
sahf
fnstsw
push
adc
mov
stos
jp
xchg
fwait
popa
mov
add
sbb
shrb
mov
cmpl
movsl
mov
sbb
test
or
xchg
xor
sti
les
data16
jns
bound
pushf
sti
xchg
push
mov
cs
mov
out
xor
pop
jge
shlb
xchg
ss
and
xor
lods
mov
xchg
out
fwait
aas
push
mov
cmpsb
jb
imul
jmp
xchg
jl
mov
jmp
iret
add
pop
add
decb
cli
push
scas
sub
dec
or
scas
imul
dec
adc
inc
dec
dec
and
xor
call
lods
dec
ljmp
mov
mov
mov
push
push
jne,pt
hlt
mov
jmp
mov
adc
add
xor
rorl
sarl
movsl
std
sub
loope
mov
ret
and
add
cmp
cmpsl
dec
mov
movb
enter
subl
push
outsb
ret
stos
cmc
add
and
sub
outsb
hlt
push
jne
or
cmpl
inc
inc
push
clc
pop
dec
scas
in
lcall
lds
fstl
mov
aas
insb
pop
ret
jmp
inc
pop
mov
dec
aam
xchg
out
xor
jae
mov
mov
sti
jg
insb
mov
and
adc
pop
stos
pop
sub
mov
imul
xorb
push
int
sbb
and
mov
int
sti
push
push
sub
mov
ss
repz
push
cmp
enter
dec
cmp
and
jo
shlb
lods
mov
loop
inc
in
and
sbb
shlb
pop
int
mov
stos
addr16
or
mov
bound
int3
sub
pop
lcall
cmp
xor
xor
sbb
xchg
add
rcll
daa
jns
dec
or
adc
lea
mov
lret
mov
adc
inc
push
rcll
and
out
outsb
mov
cmp
test
mov
xor
std
test
mov
mov
rcrb
or
mov
rcrb
xor
adc
subl
sub
push
idivb
mov
mov
rclb
pop
jmp
rol
sbb
sub
lock
sub
or
and
sbb
mov
push
jnp
lahf
push
mov
sti
ret
lods
movsb
or
adc
xor
dec
xchg
and
ja
or
sahf
sub
pop
mov
cltd
aas
es
stc
lock
push
ljmp
iret
and
in
scas
lahf
pop
in
push
jnp
mov
ret
dec
pop
pusha
sub
jae
mov
les
inc
dec
xchg
add
rcr
adc
pop
xor
call
pusha
pushf
inc
fisttps
push
and
sub
xor
mov
pop
call
stos
fdiv
enter
mov
andb
or
mov
dec
scas
lcall
cmpsl
fsubrl
dec
imul
mov
inc
popf
addb
jbe
add
cmpb
test
pop
push
add
sbb
lret
mov
or
jbe
fs
gs
or
loopne
lods
and
xor
les
scas
xor
fld
jne
sub
adc
fidivrs
stos
pusha
push
lods
lcall
mov
dec
cmp
imul
sbb
adc
cmp
fistps
pop
cs
imul
movsb
dec
out
pop
and
cmp
mov
inc
xlat
test
push
jg
movsb
mov
out
mov
lcall
cmpsl
daa
mov
dec
mov
cmc
cmp
ds
xor
push
xchg
insb
add
xchg
and
cwtl
and
testl
mov
cmp
and
jge
sub
mov
sub
fwait
js
outsl
sbb
add
mov
jno
out
xchg
outsl
mov
mov
xor
das
sbb
mov
inc
lea
and
cmp
inc
int3
shll
add
test
addr16
sub
jle
adc
std
adc
jb
mov
lret
out
push
xchg
dec
mov
jno
stos
loope
test
push
sub
fs
sub
xor
out
cmc
or
in
sbb
ror
out
push
lret
pop
ror
dec
ja
fsubr
add
jmp
ss
fadds
lods
andl
mov
xor
cmc
jmp
jmp
mov
pop
xor
pushf
cli
xor
sub
popa
and
inc
rol
jno
pop
push
out
or
call
gs
out
sarl
or
pop
xor
in
ret
out
cmp
mov
pop
test
call
imul
xchg
sbb
add
int3
imul
xchg
testb
push
inc
fcompl
out
jae
fdivp
mov
loop
jl
or
mov
pop
sub
push
aas
inc
pusha
or
xor
xchg
mov
pop
stos
xor
data16
test
das
jnp
push
pop
and
inc
jl
xchg
and
loope
cli
adc
adc
pop
out
lret
ljmp
xor
pushf
push
mov
cld
aad
cmp
sub
in
jbe
mov
inc
ficoml
mov
mov
sub
jb
push
add
xchg
insw
mov
mov
fcomip
adc
mov
rolb
sarl
xchg
mov
push
lret
daa
aas
inc
xchg
sbb
dec
das
xor
test
int3
imul
sbb
mov
hlt
fldenv
sbb
in
movsl
and
push
int
idiv
push
and
xlat
ja
iret
das
mov
push
push
sbb
imul
outsb
andl
dec
or
jbe
mov
loopne
sti
lcall
xabort
dec
sbb
jp
cmp
and
adc
fstpl
mov
sub
imul
and
and
in
or
inc
or
push
or
iret
lret
aad
cmp
cwtl
or
popf
mov
out
repnz
sarb
sub
lods
add
inc
lods
jmp
sbb
jns
nop
xchg
push
sbb
cmc
xor
inc
pop
ds
xor
xchg
fcmovnb
loop
inc
pusha
enter
data16
adc
xchg
inc
mov
jne
std
mov
cmp
in
mov
mov
test
mov
out
test
mov
int3
es
xor
push
add
insl
sub
sbb
sbb
mov
jb
in
pusha
icebp
repz
and
mov
adc
xchg
jge
jns
adc
lcall
jg
fsubr
mov
mov
sti
jb
xlat
mov
pop
and
xchg
fidivrs
push
xlat
jo
and
dec
je
xor
lcall
rorb
jp
push
or
loopne
cs
je
cmp
inc
je
icebp
adc
ret
or
xchg
and
mov
sbb
popa
push
pop
movsb
in
mov
repz
sub
or
cld
dec
mov
cmp
dec
dec
mov
lods
sbb
dec
xor
mov
xchg
mov
ds
mov
mov
xchg
les
inc
out
push
jmp
aas
les
popf
mov
popa
fistps
sub
pushf
sbb
mov
adc
mov
cmp
dec
xchg
add
into
mov
or
jb
movsb
push
cltd
shlb
mov
call
rcrb
xchg
cmpsl
or
mov
testb
je
and
jmp
inc
mov
sahf
shlb
jge
subl
dec
add
jmp
jae
repnz
mov
adc
jl
mov
push
sets
add
xchg
and
sbb
sub
bnd
je
fcoml
cld
mov
pop
mov
cmp
jge
call
popa
dec
dec
cli
xchg
test
in
dec
int
out
dec
xchg
pop
push
sti
mov
fsubrl
xlat
push
jmp
jle
notb
in
popf
jle
push
sti
int3
sbb
and
ss
nop
mov
xchg
shrb
sub
sbb
xchg
mov
push
add
in
cmp
clc
cmp
mov
push
xchg
jle
repnz
notb
dec
lahf
test
jbe
repnz
jae
mov
data16
out
push
movsl
shr
lcall
lahf
jmp
ljmp
xchg
adc
xor
out
adc
fdivrp
xor
shll
jp
in
sub
gs
je
jnp
hlt
rorl
push
pop
scas
mov
lock
mov
cmp
add
bound
adc
mov
mov
jbe
jecxz
mov
xchg
in
test
sbb
mov
pushf
icebp
mov
push
shrl
movsb
out
lret
xchg
push
addl
cli
adc
lahf
pop
fwait
push
sub
jnp
fstpl
cmp
je
add
ljmp
dec
xor
xchg
mov
loope
push
jle
loop
pop
out
movsb
insb
movsb
nop
jne
inc
add
inc
dec
add
cmp
sti
push
xchg
cld
pusha
xor
insl
mov
adc
loopne
sti
mov
push
lea
mov
leave
mov
inc
fdivl
jecxz
ss
adc
cmp
add
test
push
bound
mov
xchg
or
pop
in
lahf
mov
and
sub
loopne
pop
movsb
shlb
xchg
dec
pop
f2xm1
in
pusha
cs
fmuls
pop
movsl
icebp
sub
lret
in
int3
ss
sub
mov
sbb
push
lcall
dec
xor
adc
mov
cmpsl
jo
jp
pusha
push
cwtl
imul
sahf
pop
push
ja
push
test
or
pop
or
dec
pop
stos
pop
mov
jae
in
xorb
mov
xchg
inc
xor
rclb
inc
in
lret
and
dec
div
mov
aad
inc
push
fnsave
and
ja
in
cltd
ss
sub
es
ficoms
sahf
scas
xor
fcmovb
or
mov
sub
sti
shlb
push
loop
sub
aas
sub
popf
cmc
pop
loopne
rcll
stc
jno
mov
jo
pop
int3
mov
rorb
aas
and
pop
and
push
push
dec
xchg
out
xlat
xchg
adc
pushf
pop
inc
cmc
sub
dec
sub
mov
repz
dec
pop
mov
insb
imulb
popa
xchg
add
adc
out
inc
pop
call
and
in
push
pop
pushl
insl
pop
jnp
scas
and
inc
aaa
test
icebp
cmp
stos
xor
jo
add
xlat
xorb
or
lahf
ret
adcl
imull
in
sbb
add
mov
and
fcomp
es
pop
push
fcompl
mov
ds
insb
mov
inc
das
dec
jnp
and
lods
sbb
inc
add
sub
or
outsl
adc
pop
or
sub
mov
test
scas
ljmp
cmpsl
ret
xchg
lahf
outsb
adc
insl
fwait
or
mov
pop
and
cmp
arpl
lds
mov
lds
jb
ja
and
ljmp
push
mov
mov
aad
and
insb
xlat
sbb
movsb
fwait
mov
rcl
inc
mov
loop
jle
test
cltd
and
xchg
bound
js
cmp
cli
in
mov
sub
daa
insl
jecxz
jle
scas
popa
add
cmp
and
testb
pop
mov
mov
test
gs
mov
push
test
push
das
add
dec
pop
xor
pop
adc
call
jge
sbb
fstpt
lods
pop
pop
ret
xor
test
insl
stos
cltd
lods
pop
sub
nop
je
repnz
movsb
shll
lahf
or
enter
in
mov
dec
test
jmp
cmp
shlb
jae
stc
pop
pop
mov
inc
inc
daa
sub
out
leave
cmpsl
dec
mov
mov
add
data16
test
mov
iret
xchg
or
or
rorb
adcb
ret
loopne
lock
les
sahf
xchg
mov
cmp
je
or
xchg
jmp
in
ds
aaa
inc
and
test
inc
push
jp
fs
andl
sbb
mov
test
testl
pusha
pop
push
xor
cmp
rolb
int
xor
mov
lock
and
and
jne
xor
fists
xchg
imul
jge
pop
leave
lds
push
or
pusha
mov
jne
cmp
outsl
and
adc
fnsave
addb
movsl
std
mov
lret
inc
imul
rcll
sbb
rolb
icebp
xchg
sbb
lahf
mov
dec
push
loope
movsb
aaa
xor
pop
imul
sub
stos
movsb
xor
mov
xor
sbbb
cmp
ret
lret
jmp
mov
test
xchg
push
jl
cmp
push
in
outsb
add
stc
addb
push
rolb
push
insb
test
std
mov
add
jnp
rolb
daa
add
ror
dec
cli
lret
in
cld
lods
rcr
stos
popf
test
mov
sbb
pop
jle
popa
jns
push
bound
cmpsl
inc
iret
lahf
jae
inc
mov
xchg
pop
xchg
push
mov
xlat
xor
jnp
arpl
push
shrb
in
sub
push
out
xchg
add
daa
mov
dec
xchg
les
jge
sub
sbb
cmp
adc
jae
xor
sbb
insl
fisubrl
xchg
out
or
stos
decl
out
out
fwait
mov
add
pop
cmp
ja
out
in
mov
in
mov
ret
push
ds
pop
jmp
aaa
mov
inc
in
jge
and
loop
rol
loope
roll
ss
bound
and
mov
shrb
push
cmp
je
ret
adc
push
push
test
sbb
lret
sbbb
or
dec
push
xchg
sbb
jne
lock
int
jno
and
lcall
xchg
adc
ds
lock
decl
je
sbb
jl
cmpsb
cld
imul
in
xlat
mov
cmp
mov
dec
repz
xor
test
mov
dec
lahf
cmp
or
or
jmp
cli
or
sub
adc
adc
test
cwtl
mov
inc
sub
lcall
cld
mulb
fucom
inc
xchg
loop
int3
push
loopne
int
pop
andl
inc
sbb
sub
mov
push
test
clc
loopne
add
jl
jg
ficoms
mov
fdivl
mov
pop
inc
xor
pop
stos
pop
inc
push
iret
mov
jnp
cmpsb
add
push
mov
mov
outsb
pushf
leave
xor
xor
xchg
add
ret
loop
pop
mov
sub
dec
dec
ret
push
pop
shlb
insb
orb
inc
push
dec
popa
loopne
xor
test
pusha
fisubrl
add
rorb
test
lds
enter
cwtl
mov
out
andb
bound
call
lret
lods
into
ja
cmc
cmp
adcl
adc
fs
movsb
fdivrl
dec
add
vpunpcklbw
mov
pop
xor
stc
jp
cmp
out
insl
out
scas
out
xchg
bound
mov
lret
jnp
add
lds
icebp
cmpsl
out
cmp
mov
sahf
sbb
add
ja
jecxz
ds
pop
sub
mov
iret
and
in
call
es
sub
shrl
and
adc
and
fbstp
jmp
pop
pop
xchg
lahf
cwtl
mov
loope
and
cmpsb
add
es
imul
fidivrl
sub
xor
lret
clc
iret
mov
dec
imul
idivl
sbb
call
cmp
movsl
stc
lret
dec
nop
push
in
std
inc
sub
fdiv
aas
adc
or
rorb
cmp
aaa
adc
dec
test
mov
mov
fldenv
push
cld
imul
inc
mov
cmpsw
test
popf
scas
loop
popf
das
mov
add
in
test
pop
sub
sti
adc
cmpsl
adc
icebp
aas
hlt
pop
inc
inc
sub
ret
dec
nop
rcrb
imul
mov
adc
dec
cs
mov
rcrl
out
shrb
and
adc
cld
push
jmp
mov
add
cltd
into
mov
pusha
daa
in
stc
idivb
nop
jae
mov
and
jo
cmpsl
jne
outsl
lea
lods
out
cmpsl
int
adc
jnp
mov
jbe
push
cmp
xor
lret
add
cmpsl
xchg
je
lods
ds
lods
push
jle
cmpsl
pop
push
adc
rcrb
imul
add
add
sub
jns
mov
inc
or
es
mov
sbb
add
mov
pop
pop
sbb
sub
dec
subl
sahf
iret
ljmp
sbbb
and
and
pushf
inc
mov
dec
loopne
fninit
xor
fwait
or
mov
imul
sbb
lods
sbb
out
jae
jbe
jmp
lcall
inc
xchg
int
xor
pop
addr16
jp
pushw
pop
les
rol
jge
mov
jg
test
push
xchg
jnp
aam
add
bound
pop
jmp
jno
arpl
add
xor
rol
xchg
add
mov
rcrb
imul
fidivrl
mov
inc
ja
sub
ljmp
jno
xchg
xor
pop
dec
imul
in
aas
pop
cld
es
rorb
mov
xor
adcl
jmp
rcrb
mov
insb
jmp
mov
scas
sub
mov
ljmp
insb
jle
jmpw
repz
adc
mov
and
sub
xor
mov
cld
xorl
scas
inc
outsl
or
es
ret
movntps
push
xchg
push
push
jne
out
sarb
loop
fdivrl
cmpsl
shr
std
shl
push
fsubr
sub
jg
push
dec
pop
mov
mov
out
addr16
jnp
jne
sub
repnz
cmp
outsl
sub
test
cwtl
cmp
lods
and
iret
dec
loope
dec
push
mov
mov
pop
loope
hlt
cld
add
andb
bnd
outsb
ja
insb
repz
fnsave
lods
sbb
xor
aam
shrl
lcall
cmp
fiadds
arpl
cld
xor
or
aam
lds
pusha
jns
outsl
adc
dec
mov
pop
repnz
sub
xchg
pop
std
stos
int
mov
jp
push
aad
xchg
push
xchg
cmp
jae
rorb
jecxz
jecxz
push
add
dec
pop
dec
mov
sbb
inc
aam
insb
sbb
imul
test
lods
dec
fnsave
sbb
sub
xor
adc
mov
or
cmp
cmc
loopne
push
in
shlb
in
shll
push
mov
xchg
jp
jecxz
cmp
cld
insb
inc
lret
xor
jne
xchg
loope
in
imul
cmp
xor
xchg
mov
mov
cmpsb
sub
and
outsb
enter
nop
mov
sti
mov
cmpsl
mov
in
mov
xor
push
fcmovbe
loopne
pop
cmp
lds
aam
rcrl
push
loop
mov
or
lock
push
push
rol
pushf
adc
loope
add
lcall
add
jno
call
movsl
or
jp
and
loop
inc
or
pop
shlb
mov
xchg
mov
inc
clc
xchg
ja
not
fs
int3
jne
ret
mov
arpl
fisubrs
xor
add
and
pusha
sbb
cwtl
fstpt
xchg
inc
mov
push
push
inc
pop
jmp
pop
rcll
fs
xchg
leave
mov
xchg
mov
push
push
mov
sbb
and
push
imul
pop
sbb
cmpsb
pop
sbb
ja
aam
sub
insl
mov
cmp
mov
inc
scas
aaa
je
add
mov
test
outsl
inc
mov
pop
cmpsb
stc
aad
cmpsb
in
pop
or
jnp
outsl
dec
cmpsb
adc
sbb
cltd
sub
popf
fcompl
movsl
pushf
out
cli
push
aas
mov
popf
aas
dec
inc
clc
xlat
pop
das
sbb
inc
xor
imulb
mov
aam
mov
push
xor
inc
jle
leave
add
stc
lret
lret
push
mov
xchg
or
sbb
sarl
inc
fstps
add
push
out
ds
pop
dec
mov
cmp
sbb
add
mov
adc
adc
pop
stos
cwtl
mov
rcr
push
sbb
xorb
cmc
aad
or
fcoml
iret
addr16
sub
or
les
jnp
clc
and
jb
adc
dec
nop
aaa
jmp
into
jno
les
aas
xlat
fucomip
repnz
fdivrl
ja
stos
xchg
xlat
imul
xor
daa
or
lock
jecxz
mov
fldl
ljmp
sbb
sub
adc
aad
mov
insb
dec
mov
popa
hlt
jns
andl
jge
add
dec
lods
jno
bnd
arpl
jmp
mov
add
lea
sbb
je
xor
xor
xchg
push
in
pop
std
jnp
orb
loop
jmp
gs
add
jae
xchg
mov
int3
mov
dec
xchg
xor
cmpsb
lods
stos
mov
add
sub
cmp
lods
push
inc
push
xchg
add
aad
jmp
shll
cmpsl
data16
pop
dec
scas
lods
lret
or
fiaddl
std
push
cmpsb
daa
dec
std
fs
xlat
jg
or
mov
scas
mov
sub
jl
dec
lret
cmp
push
das
pop
lea
mulb
lret
sbb
orb
add
imul
jbe
pushf
enter
outsb
imul
scas
movsb
es
sbbb
mov
mov
fcoml
mov
shrb
add
lret
or
aas
outsl
mov
aam
call
add
nop
insl
jne
sub
je
inc
das
jl
cmp
mov
and
mov
cmpsb
cmp
sahf
fcmovnu
mov
xchg
mov
push
inc
addb
mov
in
lret
out
addr16
xchg
jmp
mov
pop
lods
out
cmpsl
inc
nop
sub
cwtl
mov
fnstsw
mov
and
dec
mov
pop
pop
cmp
xchg
lcall
roll
ljmp
mov
pop
in
jge
outsb
xchg
inc
lret
cmp
add
rol
repz
add
pushf
or
pop
sbb
xchg
fs
mov
xorb
orl
int3
sub
popa
cmpb
std
push
cwtl
iret
rcrb
dec
popa
and
xchg
mov
pop
mov
popf
rcrb
fdivs
ljmp
mov
and
xlat
incb
cld
sbb
push
xor
inc
xchg
pushf
lret
mov
pop
scas
or
call
ror
addl
mov
cli
lcall
iret
cmp
adcl
add
inc
loopne
shr
dec
arpl
subb
cmp
or
pop
insl
push
jmp
loope
jae
je
mov
inc
andl
push
or
xor
jmp
push
dec
or
iret
push
xorl
pop
jl
mov
iret
xchg
mov
xchg
jmp
xor
in
cmp
sbb
mov
out
mov
pop
jp
ret
inc
js
push
adc
rorl
imul
out
sbb
jno
rcll
addr16
mov
lock
negl
je
mov
push
pop
test
es
fs
cmp
mul
inc
enter
jns
push
and
outsb
jno
das
fwait
das
fisttpl
mov
xchg
in
inc
pusha
test
lock
in
jp
aad
pop
mov
iret
jmp
push
cwtl
and
daa
jne
push
fs
mov
out
test
mov
pop
data16
ret
scas
mov
outsl
xchg
dec
rcll
loop
lcall
out
inc
out
fstpt
enter
or
out
or
cs
loope
mov
sub
shl
clc
inc
les
subb
ds
xchg
sub
cli
cmp
push
jo
aam
ja
mov
neg
xorb
mov
add
xchg
popa
add
lods
xor
fldt
lock
sbb
ret
sbb
in
dec
inc
and
mov
xor
ljmp
jne
cmpsl
mov
movsl
and
ds
out
sbb
push
insb
mov
fcmovne
addr16
lock
call
sar
repz
dec
into
sbb
fsubrl
push
sarb
imul
outsb
out
cmp
sahf
fnsave
pop
xchg
push
outsb
add
fwait
lcall
and
mov
dec
cmp
sbb
aas
jne
mov
jo
pushf
fsubrs
sarl
add
pop
jp
xor
push
pop
mov
cmpsb
and
xchg
jl
dec
clc
orb
mov
push
jae
test
mov
scas
andb
mov
sub
ljmp
xor
jo
fdivs
rcll
sub
rcl
mov
lret
stc
mov
lods
shlb
adc
fcmovbe
imul
or
xor
dec
mov
shlb
mov
mov
dec
repz
popa
jecxz
aaa
mov
stos
adc
in
fstl
dec
dec
dec
lret
and
loope,pt
adc
addr16
jmp
sbbl
xchg
rolb
or
in
xchg
add
fistps
pop
stos
cpuid
mov
into
hlt
jae
sbb
mov
mov
mov
clc
sub
jp
mov
xor
js
in
adcb
lahf
fcomip
mov
mov
cmp
push
inc
aaa
arpl
mov
xor
sub
clc
ja
xchg
not
enter
cmp
gs
xchg
aad
cmpsb
xor
js
fbld
jns
lret
and
outsl
jo
sarb
icebp
add
mov
addr16
in
adc
pop
sbb
adc
pop
push
mov
adc
ficoml
mov
xor
sbb
jecxz
scas
fadd
xor
dec
push
inc
lock
adc
sub
push
and
mov
jne
out
lret
mov
stos
push
bound
dec
fistpl
cli
shl
mov
das
or
xor
xor
jmp
cltd
and
sbb
rcrl
pop
push
inc
dec
jge
fs
xchg
loop
mov
xchg
sbb
push
in
fcompl
orb
jns
loopne
jno
aad
jp
ret
push
lret
repnz
add
or
inc
xchg
add
lcall
jmp
insb
sbb
dec
adc
ret
xor
mov
cs
cmp
lds
xor
sbbb
aaa
mov
pop
pop
leave
push
stos
adc
push
stos
into
cwtl
mov
arpl
xor
pop
clc
pop
js
xchg
adc
jb
and
dec
inc
push
je
movsb
mov
pushf
mov
xor
mov
sbb
mov
scas
adc
inc
jge
cmpl
es
filds
pop
cmp
sbb
movsb
loop
xchg
orl
sbbb
or
xor
roll
gs
out
int
fs
pop
test
and
mov
test
aaa
jae
mov
jp
je
enter
push
pop
adc
cwtl
xor
sti
push
mov
push
jne
jnp
push
repz
xor
pop
inc
mov
cli
fisttpl
je
xor
cld
lahf
mov
outsl
mov
cwtl
or
pop
cmp
xchg
fs
aad
neg
xor
popa
je
sbb
xlat
ds
xchg
lea
sbb
jp
and
xchg
addr16
xor
ror
xchg
dec
xchg
cli
pop
out
add
mov
fs
rcr
jno
adc
lret
or
lahf
insb
pop
and
push
movsl
decb
sbb
mov
jp
mov
enter
ljmp
pop
aas
cmp
pop
loopne
negl
pop
add
pop
adc
pushf
xchg
mov
push
lret
call
insl
adc
add
ss
xchg
and
sbb
and
fcompl
dec
es
push
mov
push
push
inc
mov
pusha
aaa
aaa
out
loop
out
aas
lods
dec
mov
aam
inc
cmp
jns
adc
jno
addr16
out
test
aad
mov
xor
call
mov
addr16
xchg
insl
ss
dec
fistpll
pop
adc
shlb
ds
sub
notb
mov
test
push
sbb
mov
ds
cmpsb
or
mov
and
inc
lret
repnz
xor
addr16
inc
out
xchg
push
mov
cmp
push
pop
loopne
push
cmp
aas
iret
test
push
sbb
repz
xchg
jns
jmp
mov
sahf
jns
popf
add
and
emms
and
ret
pushf
fstpt
test
dec
outsb
jmp
mov
cli
sub
cltd
pop
sbb
sbb
sbb
jecxz
inc
and
cmp
in
out
daa
push
pop
mov
and
mov
jae
addb
dec
mov
push
cmp
fstp
pusha
sub
ja
sub
mov
pop
psubsw
mov
sub
adc
pop
sbb
inc
push
hlt
xchg
iret
push
shr
out
bound
xor
xor
loopne
cld
mov
lret
js
movsb
mov
lock
int
add
movsb
mov
mov
pop
mov
push
addr16
mov
xchg
mov
test
mov
mov
lods
xorb
mov
mov
adc
xor
xlat
pusha
jmp
into
xchg
jmp
ja
mov
xor
shl
mov
out
daa
lahf
iret
dec
sub
test
mov
adc
inc
mov
hlt
sbb
lret
dec
inc
push
je
pop
jl
repz
rcll
pusha
loop
sti
insb
pop
mov
xor
sbb
pop
fwait
sub
dec
xor
dec
out
adc
push
bound
js
popf
cmp
or
mov
out
push
push
sub
pop
and
pop
jle
xchg
mov
leave
pushf
cwtl
in
or
arpl
int
out
lret
lods
xchg
sbb
and
sbb
icebp
repnz
add
out
scas
xchg
repz
mov
call
xchg
xor
dec
mov
mov
jnp
ret
add
sub
fisubl
aas
pushw
dec
popa
pusha
push
and
adc
push
stos
cmp
aam
push
ja
pop
dec
testl
popa
loope
push
push
es
mov
xchg
add
add
aaa
loop
fmuls
sti
mov
jns
ficoml
xor
mov
jno
xor
dec
mov
mov
push
aad
pop
adc
sti
arpl
cmpsl
jo
dec
decb
out
aaa
fs
int
xchg
or
add
jnp
mov
or
popa
movsb
insb
adc
fwait
arpl
mov
and
repz
sbb
or
mov
cld
adc
pop
sahf
cwtl
rol
xchg
push
jmp
mov
aaa
add
cmpsb
cmp
clc
jp
and
xchg
test
pushw
jp
xor
mov
push
js
sbbl
into
mov
mov
loope
aaa
mov
xchg
inc
push
jecxz
pop
mov
sbb
push
jae
cmp
clc
fwait
lods
cmc
xchg
mov
fldcw
mov
jp,pt
in
inc
xor
jne
mov
sub
test
inc
jecxz
test
pushf
stos
loop
xchg
stos
je
divl
pop
cmpb
mov
add
inc
or
add
outsb
pop
lcall
ljmp
or
repnz
bound
dec
scas
or
test
cmpsl
mov
imul
imul
adc
mov
lret
push
and
int
sub
stos
mov
cltd
cld
inc
iret
push
out
jecxz
xor
jnp
repz
es
xor
cli
cmp
shll
cld
pop
adc
cli
sarb
dec
sub
push
loopne
fiadds
js
test
pop
cli
and
mov
jge
xchg
mov
or
popa
add
pop
mov
xchg
xchg
arpl
pop
jno
inc
stc
xlat
je
in
popa
inc
and
add
mov
adc
lret
insb
and
out
mov
stos
xor
xchg
insl
mov
xlat
mov
mov
psubw
imul
js
out
sbb
fcmove
mov
inc
inc
addr16
popf
mov
adc
cmp
les
mov
push
mov
out
push
enter
outsl
mov
cmp
mov
mov
dec
andl
push
pand
push
inc
dec
aam
outsb
add
push
aas
test
jmp
imul
dec
shl
nop
sub
in
ror
inc
testl
push
ret
sub
cmpsb
inc
jle
and
shl
fs
repnz
aaa
in
repz
movsw
push
sarl
call
jg
rcr
adc
in
fwait
add
or
pop
add
mov
out
and
test
mov
or
aad
fildl
test
fs
mov
and
repz
repz
and
jb
faddp
push
into
call
cmp
inc
leave
or
cltd
das
cwtl
out
out
inc
ret
shl
dec
dec
lock
cmovl
fstpt
mov
cs
cmp
and
jle
push
xchg
insl
movsl
mov
test
lea
or
test
fs
imull
arpl
loope
jl
out
pop
and
or
push
test
bound
or
int
xor
and
stos
hlt
incl
sbb
and
dec
push
ficompl
enter
sbb
jae
shrl
mov
cmp
je
lret
enter
aaa
mov
hlt
nop
imul
mov
push
lret
push
mov
inc
sbb
add
cmpsl
mov
mov
shlb
gs
jne
pop
jbe
push
sub
or
iret
lret
xchg
add
mov
nop
add
dec
sahf
test
dec
in
xor
add
outsb
mov
test
mov
outsb
or
pop
jge
out
pop
add
shll
pop
mov
mov
lcall
sbb
sahf
lods
or
in
add
xchg
push
in
sub
shrb
sub
mov
sbb
testl
loop
mov
dec
scas
lods
mov
jp
xor
and
sbbl
hlt
out
ja
ss
insb
cmp
dec
and
lock
or
jecxz
lahf
mov
xchg
pop
hlt
jno
shrb
imul
sti
mov
mov
insl
fiadds
ja
sahf
cli
lret
cmp
jbe
cmp
cwtl
lea
cld
mov
lret
add
pop
in
and
popa
fsubrl
stos
jbe
lret
lret
xchg
rep
shll
lcall
push
je
pop
out
rcrl
test
or
ret
pop
jns
cmp
pop
cwtl
out
jp
lock
xchg
arpl
arpl
ljmp
scas
mov
sahf
lea
in
imul
pop
xor
outsb
lret
mov
icebp
cmpsb
push
ficoms
jne
out
cmp
sub
test
repz
cltd
mov
lcall
sbb
orl
cmpsl
shl
mov
mov
sub
xchg
inc
inc
std
push
jne
push
cmp
out
and
scas
xchg
fcmovb
jo
jecxz
and
xchg
rcrb
jge
aad
xchg
jnp
repz
shr
xchg
or
mov
fisubrl
sbb
push
pop
cwtl
scas
cmc
jnp
sub
dec
fsubl
test
sbb
aas
out
xchg
gs
loopne
insl
jmp
xlat
cmp
jb
imul
or
sbb
aam
in
sbb
adc
jne
push
jecxz
mov
xchg
imul
in
arpl
xchg
movsl
pop
mov
or
cld
cmp
mov
sbb
xchg
imul
sub
dec
cs
inc
dec
inc
mov
icebp
jno
pop
mov
ret
jns
rcrb
push
pop
imul
inc
sti
adc
mov
mov
cli
and
mov
daa
jmp
pusha
lods
cwtl
movw
mov
cmc
outsb
les
jo
inc
xchg
or
jb
cmp
dec
pop
add
les
ret
rcll
cmp
mov
sbb
lock
cli
repnz
lock
jo
rcll
stos
mov
inc
ja
add
jmp
lret
xor
test
sub
jg
mov
mov
mov
xchg
aas
push
pop
push
icebp
dec
dec
xor
jb
mov
push
adc
das
add
loopne
pop
int
push
mov
pop
lcall
xor
out
jp
push
mov
roll
into
or
cmp
movsl
lahf
lret
lcall
add
push
ret
aam
lods
xorl
fbstp
sbb
cmp
xchg
lods
and
dec
mov
out
ficompl
and
test
sub
sti
lret
icebp
inc
dec
dec
sbb
mov
dec
push
cmp
dec
test
test
push
les
iret
mov
stos
sti
cmpsb
bound
jp
in
adc
leave
call
popf
test
mov
lret
add
cmp
push
movnti
push
mov
ljmp
cmpsb
pop
and
cmp
sbb
sub
cs
or
or
sbb
lods
out
xchg
jns
jecxz
lea
dec
loope
cmp
xlat
out
enter
xor
ljmp
dec
xchg
jns
mov
and
jne
mov
push
es
repnz
sbb
cmp
leave
mov
sbb
lods
sub
in
xor
xchg
lret
and
andl
ss
iret
adc
inc
dec
hlt
movsb
inc
mov
dec
imulb
xchg
xchg
scas
insl
fimuls
and
cmp
aaa
pop
inc
pop
mov
adc
iret
cmp
loop
sbb
jbe
mov
inc
sarl
sarb
dec
bound
dec
pushf
popa
mov
push
jmp
mov
and
dec
pop
inc
mov
les
sbb
push
lcall
xchg
xchg
xchg
sbb
rolb
pusha
inc
mov
lods
movsb
mov
dec
sahf
in
test
xor
xchg
enter
sub
cld
in
les
test
aad
cmpsb
arpl
sbb
push
ds
mov
cmp
inc
fcomps
pop
cwtl
push
jo
shr
jno
decb
xchg
incb
push
mov
call
xchg
fldenv
mov
fdiv
or
and
sub
cmc
lret
mov
inc
das
nop
jmp
lret
mov
insb
xchg
daa
pop
pop
in
fsubrs
fildl
mov
jp
imul
mov
xchg
daa
or
pop
out
lret
xor
sbb
or
pusha
test
arpl
stc
es
push
or
add
mov
pop
cltd
stos
cmp
outsb
mov
aad
mov
cmp
mov
mov
mov
sub
adc
jo
fcmovu
fisttps
ret
jecxz
dec
lods
shrl
mov
mov
scas
pop
int
sub
dec
pop
or
jno
adc
sti
mov
inc
mov
imul
jbe
inc
lret
or
mov
aam
mov
adc
inc
jle
xchg
out
insb
pop
rclb
jbe
mov
out
pop
add
pop
push
push
outsl
cwtl
test
scas
and
mov
sbb
cmp
leave
fs
mov
sub
inc
fimull
gs
addl
ss
out
jb
mov
add
cmpsb
jne
pop
jo
lcall
in
in
xchg
es
rorb
inc
or
fwait
cmp
lahf
ret
xchg
jp
jge
pop
pop
shll
jb
mov
cmp
and
insl
sbb
std
movsl
adc
jge
lods
mov
sub
push
imul
insb
fwait
mov
les
repz
ror
leave
out
pop
idivb
mov
ds
lds
mov
inc
dec
fisubrl
jmp
add
scas
cmpb
inc
std
in
xchg
leave
add
lea
jo
js
pop
push
cli
fsub
inc
stos
les
cld
mov
sbb
mov
rcrl
je
and
ja
aaa
ret
cmpsb
adc
movsb
sbb
dec
sub
mov
test
jbe
ljmp
and
out
ljmp
and
dec
pop
push
ds
test
adc
mov
fcomip
pop
xchg
mov
cmp
mov
loopne
pop
cld
pop
ja
cmp
outsl
jbe
pop
lahf
sbb
sahf
and
scas
sbb
dec
shl
data16
cld
jge
fnclex
sub
pop
xor
inc
fcoml
in
popl
das
in
cmp
imul
xchg
jo
cltd
int3
xor
lods
fwait
test
data16
xchg
inc
pop
idivl
adc
pop
cmpsb
jne
fisttps
dec
ljmp
jle
or
xor
dec
cmpsl
xor
jae
sub
jp
mov
cmpsl
outsb
inc
inc
test
lret
push
dec
aaa
push
or
aam
sbb
test
or
fnstcw
adc
and
inc
or
pop
add
nop
sbb
sbb
daa
push
jb
pop
sbb
xchg
jge
jmp
jp
xorb
adc
push
je
sar
pusha
xchg
inc
mov
sub
mov
or
or
loope
enter
and
push
xchg
mov
ret
mov
inc
test
pop
xchg
insl
mov
dec
xchg
jb
popf
or
inc
add
and
push
pop
sub
and
clc
xor
jecxz
inc
sub
pop
leave
push
xchg
pop
enter
push
test
jmp
in
andnps
bt
inc
dec
test
jns
sub
jle
sub
inc
loopne
ror
push
mov
out
dec
add
les
dec
lea
fstps
fucom
mov
sub
pop
mov
negl
ror
popf
or
aaa
add
cltd
nop
jge
push
jb
into
sbb
cld
sub
xor
cmp
jnp
fwait
popa
cmp
push
jecxz
in
test
xchg
add
movsb
mov
xor
or
fnstsw
fisubrs
push
pop
mov
xchg
push
stc
cmpsl
sbb
fstpl
out
movsb
loop
sub
mov
push
push
mov
inc
loope
lods
dec
add
jecxz
test
loop
and
out
push
addr16
nop
dec
cmpsl
scas
in
cmc
icebp
repnz
jae
xchg
jge
scas
iret
dec
movsl
xor
fsubl
aas
testl
mov
sbb
imul
outsl
mov
cli
scas
jg
xor
and
or
xor
out
inc
xchg
insb
sub
xlat
sub
or
sub
mov
xchg
cmc
repnz
js
lds
add
rorb
mov
faddl
pop
add
mov
or
mov
scas
push
xchg
sbb
pop
push
xlat
js
mov
in
out
rcll
lock
fbld
rcr
xor
adc
pop
ljmp
scas
aad
fbstp
mov
out
pop
or
pop
jge
cmp
jno
adc
es
jnp
xchg
fmulp
lods
sbb
mov
mov
ss
hlt
sbb
mov
xor
sub
ss
in
push
bound
mov
xchg
dec
sti
shrb
mov
jg
and
or
adc
sub
ret
stc
rorl
and
xchg
out
adc
push
ret
push
fwait
ja
insl
mov
loope
sub
das
test
je
cmp
pop
mov
adc
adc
popf
sub
shl
pop
imul
or
call
stos
push
aad
sub
fwait
dec
adc
xchg
add
mov
andb
daa
and
push
or
addr16
jle
lods
repnz
sub
out
jecxz
lcall
mov
rcll
scas
push
dec
ret
repnz
add
fisubl
adc
push
dec
mov
sbb
imul
mov
jne
das
stos
out
stc
into
xchg
rcll
adc
flds
adcl
leave
mov
in
out
vpackuswb
cli
xor
xchg
cltd
cld
jl
push
push
loopne
jns
leave
xor
add
mov
dec
mov
cli
icebp
mov
push
inc
rcrb
xor
lret
pop
dec
pushf
rcll
adc
xchg
pop
popa
xchg
addl
mov
push
mov
and
mov
popa
mov
push
hlt
mov
push
add
cwtl
clc
in
loop
jl
bound
in
repnz
pusha
clc
adc
insl
push
mov
inc
push
rorl
rolb
jle
dec
dec
roll
dec
ja
jmp
addr16
inc
sbb
int3
inc
xchg
ljmp
mov
jnp
add
dec
jns
cmp
scas
xchg
fwait
jnp
mov
ljmp
inc
fcoms
inc
xchg
adc
dec
adc
test
scas
mov
subl
shlb
adcl
fistl
fisttps
jp
imul
add
mov
xchg
add
roll
pop
dec
sbb
mov
ja
adc
cmp
cmp
inc
stos
mov
data16
pop
xlat
add
jge
jl
and
stos
pop
test
ss
test
cwtl
leave
jae
cli
es
and
mov
loop
mov
xchg
aaa
or
jg
popa
shlb
xchg
sbb
jne
leave
repnz
xor
rclb
fsubs
sub
cli
popf
outsl
pop
into
xor
addb
in
stos
fisubrs
adc
and
leave
inc
push
xchg
jnp
in
push
ljmp
aaa
add
lret
stc
mov
sbb
lcall
inc
rcrb
jp
loop
push
das
xchg
dec
ja
iret
out
add
jmp
jo
mov
in
test
sub
leave
xor
stos
xchg
pop
fsubrs
loope,pt
push
add
xor
aam
lock
outsl
aam
jne
popa
sbb
mov
pushf
mov
lods
jg
push
or
sbb
ja
imul
xor
mov
arpl
popf
das
push
jnp
mov
inc
test
jmp
lcall
sbb
xor
movsb
push
mov
sbb
mov
cmp
aaa
test
push
adc
push
pop
dec
and
ds
push
cmp
pop
pushf
jecxz
sbb
sub
jle
test
fsubrs
incb
xor
incl
sti
add
nop
mov
daa
pop
les
push
ficompl
leave
sbb
dec
sub
xchg
sti
pop
lcall
stos
or
add
test
xor
push
lret
pop
mov
in
xchg
inc
jp
shlb
jge
outsl
dec
jp
jnp
mov
fwait
stos
push
cmc
or
aaa
jl
rorl
nop
cmp
mov
cmp
negl
mov
xchg
clc
inc
mov
loop
decb
push
adc
add
adc
jl
inc
pusha
inc
lsl
or
dec
dec
cmp
cmp
push
int
loopne
inc
sar
jmp
xchg
pusha
dec
mov
or
fnstsw
sub
test
cmpsl
out
in
gs
stc
scas
ret
add
adc
push
jmp
xchg
sub
inc
add
and
call
repnz
mov
pusha
xchg
adc
pushf
and
or
jl
pop
sbb
das
jle
or
and
mov
or
test
xchg
push
fwait
cmc
cld
pop
pop
cltd
movl
xchg
fildl
iret
repz
call
inc
daa
mov
and
push
add
jo
pop
repnz
sbb
push
adc
adcl
subl
jl
jo
clc
pop
sub
jne
dec
jmp
ret
add
test
or
cmp
rorb
and
outsl
and
orb
mov
les
mov
daa
xor
insb
andl
pop
fwait
outsb
jno
sub
mov
lcall
lods
and
dec
adc
dec
orb
add
insb
popa
xor
mov
and
add
test
aas
jo
cmp
xor
jge
adc
bnd
int
iret
pushf
inc
cmp
subb
sub
xchg
lret
pusha
xor
clc
mov
or
in
cs
imull
aaa
test
add
xchg
xchg
pushf
nop
lahf
stc
int
mov
lcall
mov
repz
or
shlb
or
add
scas
ficoms
stc
adc
rorl
mov
sti
popf
fs
faddp
cmp
push
mov
test
mov
lahf
ss
cmc
xchg
shl
jle
shlb
movsl
dec
addl
movsb
test
mov
add
mov
ret
xor
out
push
es
out
iret
jne
aas
or
mov
push
jle
xchg
mov
pop
loopne
lahf
lret
movsb
out
pop
push
cmpsb
pop
add
adc
ret
in
js
cmpsl
and
pop
push
pop
fsub
mov
je
dec
push
pop
lods
mov
dec
repz
mov
mov
cmp
add
aas
pop
jle
dec
cli
fsub
lods
mov
jp
rclb
fidivs
add
jl
pop
mov
shll
int3
lods
xor
lret
mov
scas
test
push
imul
jno
in
cmp
addl
or
sahf
ret
inc
push
ja
clc
gs
outsl
insb
xchg
mov
sahf
insb
stos
stos
xchg
cwtl
and
and
mov
mov
in
rorl
xchg
sbb
repz
push
inc
dec
xchg
push
xchg
cltd
fdivl
sub
mov
lods
js
mov
nop
jge
mov
mov
pop
addb
stc
and
dec
rcl
test
daa
divl
filds
and
dec
mov
mov
adc
stos
loopne
ja
rclb
cwtl
xchg
add
mov
and
lahf
cmc
xor
push
fwait
insb
mov
out
xchg
or
mov
rcrl
xorl
aam
mov
sarl
sar
xchg
pop
mov
jno
shrl
push
sub
addr16
inc
ret
sbb
sbb
push
pop
mov
mov
addr16
xchg
xor
add
es
filds
aam
insb
out
in
sbb
gs
pop
xchg
aas
sub
or
mov
jl
enter
aas
mov
fmuls
xchg
scas
jmp
and
sbb
push
mov
xchg
nop
push
sub
cmc
sub
test
inc
fistl
dec
roll
push
mov
xchg
adc
aas
jmp
sbbb
push
cs
jg
sbb
xchg
or
roll
jno
popf
push
xor
push
mov
sbb
leave
int
imul
or
bound
fcoms
xor
mov
stos
or
lods
push
les
sbb
in
push
mov
mov
push
inc
fs
push
enter
cmp
stc
jo
inc
in
xchg
xlat
out
std
push
je
int
fsubrl
repnz
fisubrs
and
test
scas
and
inc
pop
sarl
sbb
mov
lods
inc
outsl
mov
pop
sahf
aas
sub
ret
mov
fs
or
jne
data16
mov
jno
mov
and
and
jp
scas
bound
or
call
cmp
dec
cmp
pop
bound
sub
mov
xor
dec
mov
xchg
mov
insl
sbb
ja
dec
jbe
sbb
adc
xor
aad
sub
jmp
sbb
xor
fs
mov
sbb
fldcw
clc
pop
lods
into
je
test
xchg
outsb
cltd
and
mov
hlt
aad
pusha
dec
jp,pn
popa
add
jg
clc
scas
xchg
lea
inc
test
mov
lcall
iret
inc
dec
pop
add
popf
jo
stos
lds
mov
jb
or
push
cmp
jae
push
pop
arpl
xchg
jo
xchg
daa
mov
cmc
rorl
xor
in
xor
ljmp
mov
pop
inc
mov
cmc
fwait
test
ret
jecxz
leave
sub
ret
xchg
je
arpl
mov
xchg
out
sahf
add
in
push
repnz
add
ffree
add
pusha
int
mov
push
xchg
cmp
mov
push
dec
mov
lcall
aad
mov
flds
jg
movsb
sub
icebp
je
jl
jnp
pusha
add
loop
jg
cmpsb
cmp
and
cmp
mov
jp
pop
pushf
scas
cltd
sub
mov
stos
dec
push
ja
ds
jns
dec
jg
lea
test
fstl
mov
jp
pop
test
fiadds
arpl
out
and
jmp
sub
xchg
mov
lock
rcl
aad
and
cmp
cwtl
sahf
clc
cmp
cmp
mov
mov
fildll
sbb
and
sbb
xchg
and
add
clc
mov
push
lds
in
dec
pop
cmp
shrl
loopne
jnp
push
mov
aam
and
push
out
addr16
inc
lea
sub
cmpl
fsubp
pop
in
cwtl
push
movsl
mov
mov
sbb
mov
and
in
xchg
stos
sub
add
es
add
outsl
mov
mov
pop
jp
icebp
clc
fsubl
lock
xor
xchg
sbb
xor
std
adc
xor
mov
dec
mov
mov
fmul
mov
jno
and
adc
push
fs
inc
ja
push
jae
inc
add
sub
cmp
inc
test
add
cmp
add
cmpsl
inc
cmp
imul
jno
sbb
mov
into
loop
pop
in
into
adc
dec
or
jl
mov
adc
mov
dec
add
mov
arpl
cld
outsl
or
aad
data16
mov
insb
inc
push
jo
mov
imul
pop
xor
in
mov
dec
and
mov
bound
or
jg
in
test
mov
pop
iret
in
sbb
outsl
sbb
nop
cmp
mov
pop
and
jb
jmp
mov
add
mov
das
or
jno
push
popf
inc
ficomps
and
jbe
push
imul
add
test
or
nop
outsl
push
and
xchg
sub
mov
imul
testl
ja
test
sbb
in
push
add
add
inc
mov
jl
adc
xchg
sbb
pop
xor
hlt
adc
cli
and
jns
pop
pop
fwait
lea
xchg
insl
aam
dec
inc
xlat
cmpb
addr16
jns
std
into
lret
in
fsubs
mov
lret
pop
jno
xor
lock
loopne
cmp
inc
js
int3
in
xchg
addl
jmp
aad
mov
pop
sub
lret
jno
ja
xchg
sbb
subps
xor
inc
ret
out
inc
xchg
push
mov
or
xchg
rcll
repnz
fwait
pop
pop
les
add
aaa
pop
cwtl
ljmp
test
mov
xorb
iret
jns
push
mov
adc
cltd
lret
cmp
pop
sub
fldl
popf
sbb
je
jge
mov
add
inc
shl
or
mov
cltd
sbb
mov
sub
sub
cmp
into
arpl
and
mov
rcrl
add
xchg
mov
scas
pop
ja
je
pop
aam
ja
push
dec
fdivl
add
jge
sub
outsb
dec
push
stc
andl
shll
sub
fs
movsl
mov
push
sbbb
ds
cmc
clc
ret
test
lods
imull
dec
add
insb
pop
and
inc
in
cmp
das
sub
cmp
nop
shr
movsl
jo
mov
jae
insb
in
push
or
or
pop
loopne
incb
dec
add
or
fisttps
mov
mov
xorb
mov
addr16
push
add
jge
pop
imul
push
movl
dec
dec
and
or
movsl
jl
mov
mov
inc
xchg
inc
je
sti
adc
out
or
push
inc
mov
sbb
loopne
out
mov
or
ljmp
inc
mov
gs
push
in
pop
mov
adc
fs
or
cmpb
test
adc
mov
cmp
dec
sub
loope
adc
or
popf
sbb
in
in
inc
jns
xchg
outsb
dec
xor
jp
pop
push
sub
js
push
xchg
pusha
and
lds
add
sub
arpl
sar
pop
insl
xchg
or
xor
cmp
jno
test
aad
xor
cli
xor
xor
cmp
cs
into
std
jg
cwtl
pushf
pop
sbb
and
inc
subl
ret
mov
inc
pop
loopne
test
dec
call
adc
nop
rclb
adc
stos
or
insb
mov
fisttps
inc
cmpsl
adc
addr16
dec
out
insb
jo
inc
lret
imul
cmp
adc
push
xchg
dec
aaa
jmp
mov
mov
jl
sarl
cli
rolb
xor
inc
mov
cmp
mov
sub
adc
clc
dec
fs
xor
push
mov
cld
mov
mulb
outsb
mov
outsl
jmp
pop
stos
sub
jae
add
sub
mov
and
lds
adc
sub
bound
imul
aaa
loope
add
out
xor
jg
cltd
inc
push
dec
adc
inc
add
nop
jle
fiadds
pop
lods
or
mov
mov
xchg
sub
pushf
jb
loope
and
shlb
jo
outsb
iret
in
sub
mov
and
mov
movsl
outsl
cld
fisubrl
addb
insl
hlt
mov
dec
and
in
movsl
movsl
movl
js
xchg
sbb
and
cmp
stc
xchg
fwait
or
and
in
pusha
xor
dec
mov
in
jo
sarb
or
insl
pop
imul
mov
inc
ljmp
mov
fimuls
daa
xor
ljmp
inc
push
jb
call
sub
dec
pop
xor
call
xchg
lcall
pop
out
pop
xchg
adc
aaa
and
fcmove
jnp,pt
adc
int3
and
add
cs
insl
fwait
add
stc
add
ret
mov
sbb
push
fidivrs
fsubrl
pop
sbb
dec
sub
jbe
dec
jo
lahf
jecxz
adc
flds
mov
push
push
inc
stos
cmp
out
jecxz
cmpsb
jle
fidivrl
scas
xor
jle
or
sub
ljmp
xchg
insl
pushf
clc
lods
pop
xchg
notl
add
shll
ret
imul
xor
insl
jge
lods
cmovnp
add
and
jmp
pop
cmp
ret
add
int3
aam
mov
aaa
xchg
mov
mov
inc
push
call
jge
lret
popa
mov
or
or
les
lea
shl
dec
mov
rcll
es
sbb
dec
cltd
outsl
je
xor
out
sub
cmp
mov
mov
clc
mov
mov
adc
loope
sub
jnp
lcall
jb
push
xlat
test
adc
sbb
inc
shl
xor
es
call
mov
sti
enter
and
pop
outsl
out
mov
sbb
in
xlat
nop
mov
cmp
aas
clc
add
je
xchg
cmp
dec
mov
cmpsb
pushf
scas
test
xchg
sbb
mov
iret
xor
cmp
outsb
pushf
pop
das
fs
testb
clc
jae
ss
mov
scas
inc
xor
test
fbstp
cmpsl
mov
xchg
outsb
jo
mov
lret
push
jle
js
pop
add
mov
push
pop
dec
popa
aaa
test
cmp
scas
or
out
rol
nop
push
sti
inc
xchg
xor
cmpsl
pushf
cmpsl
arpl
mov
fs
adc
test
jl
ret
cli
popa
pusha
into
push
cli
pop
xchg
mov
ds
lcall
mov
lods
pushf
stc
xchg
das
ss
sub
add
and
insb
in
mov
repnz
push
ret
int
xchg
dec
xor
lods
mov
ss
and
enter
sbb
test
add
into
add
mov
add
jae
faddl
pop
push
and
inc
and
inc
shll
xor
cmc
leave
push
insl
mov
push
add
pop
dec
xchg
ss
mov
push
push
mov
xchg
into
pop
push
pop
insl
push
xchg
dec
dec
push
mov
and
movsl
mov
adc
ret
sti
xchg
add
lcall
pop
pop
in
dec
fwait
inc
mov
stos
xor
mov
jp
jg
daa
test
data16
insl
ja
mov
inc
jbe
pop
mov
popa
xor
icebp
mov
icebp
sub
cmpsb
sbb
imul
bnd
inc
int3
pop
sbb
test
in
xor
sbb
xor
fstps
xchg
sbb
call
adc
mov
les
mov
sbb
xlat
popa
loopne
mov
js
bound
fdivl
dec
sbbb
fidivl
pop
pop
cli
cltd
imul
inc
cltd
dec
loopne
outsl
fbstp
js
fwait
iret
stos
int3
jae
jae
xor
call
push
inc
clc
push
adc
ficomps
imul
out
dec
mov
inc
js
jb
sub
mov
cld
lea
popf
mov
dec
enter
cmp
cmp
mov
mov
loope
push
jge
adc
mov
xchg
adc
xor
xchg
sbb
or
stc
scas
sbb
scas
into
cmpsb
push
call
je
movsl
push
jo
and
mov
pushf
lcall
sub
add
fsubr
dec
pop
push
cld
shlb
pushf
jnp
jg
sar
adc
aad
frstor
gs
push
cmpsb
lds
xor
rcrl
or
jecxz
mov
inc
xlat
jle
mov
dec
ret
lahf
mov
xchg
xor
rcrb
fisttps
insl
pop
add
cmc
push
pop
ja
pusha
mov
and
push
push
lea
mov
mov
pop
or
adc
cli
test
iret
dec
test
xorl
or
pop
and
mov
aas
into
mov
adc
pop
inc
in
and
adc
mov
mov
nop
pop
lret
xor
sbb
xchg
in
adc
movsb
push
dec
xorl
in
pop
cmp
in
jbe
not
lock
mov
shll
xor
sarb
icebp
mov
cltd
adc
mov
rcrb
jae
sti
mulb
mov
test
aam
jbe
pop
add
add
push
fcomps
rcll
xchg
repnz
cwtl
sbb
cmc
push
daa
mov
imul
and
out
push
shll
lcall
mov
push
mov
inc
mov
jns
push
sub
cmc
and
call
adc
arpl
or
cmpsl
inc
aam
xor
sbb
test
int
lods
andl
push
jl
in
loopne
das
cld
es
dec
jl
out
push
sbb
pop
divps
mulb
stos
mov
hlt
movsb
loopne
jno
lea
rorl
ret
loop
mov
xor
and
xchg
lahf
out
insl
mov
notb
movlps
pushf
add
xchg
mov
dec
and
into
fbld
jne
pop
add
sahf
dec
aaa
stos
push
ljmp
icebp
jb
enter
jg
lods
add
pop
lods
aas
adc
pop
cmp
cwtl
aaa
pop
int
mov
sub
fmuls
mov
mov
roll
sub
lds
loopne
aad
aas
enter
jnp
sbb
push
mov
or
jae
cmp
dec
mov
add
and
jmp
push
xchg
mov
das
loope
les
orl
cmp
mov
jge
aaa
cwtl
idivb
pop
push
test
inc
fwait
jl
mov
adc
pushf
sub
push
or
ffreep
std
loope
xchg
orb
cmp
test
jb
adc
cltd
sub
cmp
adc
xor
xchg
aas
outsl
and
mov
out
addb
sub
movsb
jne
sub
out
cmp
jno
test
mov
ss
inc
aaa
and
sub
fsubrs
pop
add
lcall
fucom
cmp
push
push
in
stos
pop
mov
fldenv
pop
sbb
mov
icebp
pushfw
test
jg
pop
mov
cmc
dec
cli
mov
ret
sub
mov
std
add
cmpsl
mov
pop
pop
leave
dec
sbb
push
das
loop
call
in
loop
push
adc
and
or
jae
das
cli
pop
jecxz
popa
ljmp
in
aaa
fisubrs
push
sub
pop
ficompl
cmp
out
fistl
leave
mov
mov
jo
stos
enter
rsm
sub
dec
fnsave
push
adc
es
cmc
xchg
lock
lret
enter
rorb
sub
movlps
and
xchg
sbb
out
mov
inc
pop
inc
push
mov
rolb
dec
leave
cmc
mov
mov
jne
and
cvtpi2ps
rcrb
mov
mov
sub
ss
xor
mull
cmp
push
aaa
sub
push
aaa
jns
ja
adc
movsb
add
sbb
dec
lods
jb
xor
aas
fisubrs
and
add
insb
imul
lock
test
fcmove
and
enter
xchg
pop
mov
ss
add
icebp
pop
sbb
cld
xchg
xchg
jnp
dec
idivl
mov
pop
pop
xor
in
jp
xchg
idiv
xor
notb
xchg
or
rclb
dec
ljmp
mov
cltd
gs
leave
mov
jo
xor
in
push
pusha
movsb
cmpsl
or
es
lock
scas
sbb
push
fcoml
lds
outsb
subl
sub
inc
and
bound
xchg
sbb
mov
and
ret
cwtl
sti
arpl
fmuls
insb
pop
ret
pop
loop
and
cmp
jge
cmp
mov
jbe
jecxz
xchg
leave
loop
xchg
movsl
sbb
pop
das
pop
xchg
call
xor
stc
mov
sti
rcrl
out
push
int3
js
xor
push
into
mov
lret
cli
into
and
adc
sbb
or
sub
cmovge
jp
add
sub
cmp
ret
sub
xorb
mov
loopne
lods
and
dec
stos
jl
mov
out
loop
fstp
in
sti
adc
lret
shrb
and
mov
insb
add
xchg
mov
dec
iret
loop
insl
adc
adc
in
mov
int
dec
lods
rcll
add
mov
mov
fisttpll
mov
pushf
jne
mov
and
sbb
jg
push
push
lods
outsl
ret
push
sbb
shlb
adc
das
xor
push
push
jl
aam
cmp
xor
ss
xchg
push
push
sbb
jp
add
outsl
cmp
insb
sti
inc
push
push
inc
mov
mov
mov
inc
cld
dec
in
push
push
into
xchg
push
iret
inc
xor
repz
movsl
push
and
sub
andl
lds
cltd
push
addr16
cmp
push
adc
popa
rolb
add
js
pop
aad
jp
ds
ret
dec
mov
loop
fnstcw
lods
mov
test
jl
push
mov
enter
fs
imull
les
adc
pop
daa
push
rcr
mov
sar
or
in
mov
mov
jbe
mov
or
or
orl
out
cmp
add
in
adc
dec
ret
and
adc
fsubl
in
mov
mov
adc
mov
iret
sbb
out
add
out
xor
negl
or
cvtpi2ps
jo
cltd
sub
add
xor
jo
mov
sbb
stc
pop
mov
imul
push
add
mov
insb
mov
sarb
imul
mov
sar
cmp
fsubrl
filds
jl
lahf
filds
mul
cmc
hlt
pop
popl
mov
jae
lods
push
outsl
mov
ret
int3
mov
xchg
imul
sarl
mov
lret
mov
cmpsb
pop
gs
shrb
dec
cmp
lea
mov
test
fmull
adc
fbstp
cmp
push
add
mov
lret
scas
inc
push
push
popf
les
push
add
pop
push
add
add
daa
cmpsl
das
inc
fistpl
cmpsl
xchg
outsl
adc
jp
xor
movsb
mov
mov
mov
or
push
mov
test
ficompl
or
ss
lods
ret
mov
addr16
imul
orl
and
jmp
pop
das
int3
jl
dec
stos
jg
std
add
mov
mov
add
xchg
jmp
addr16
xor
pushf
pop
clc
aam
rolb
cltd
cmpsl
enter
inc
or
scas
orl
cltd
cld
fcompl
lods
sarl
aaa
pop
data16
cmpsl
mov
jbe
sub
lea
clc
push
pushf
nop
push
pop
mov
lahf
add
jne
ja
pop
clc
dec
int3
cmp
movsl
push
rcrb
fnstcw
mov
xchg
out
cmp
cmc
or
cmc
aad
loopne
dec
stos
jne
enter
sbb
ret
dec
push
xchg
sti
add
inc
adc
pop
lds
or
enter
pop
and
rorb
push
lds
dec
and
cmp
notb
cmp
arpl
xor
addl
jns
dec
and
mov
cltd
out
cltd
jl
jecxz
test
test
jg
inc
fisubl
std
fbstp
and
inc
cmpsb
xchg
inc
push
push
fs
stc
xchg
and
jno
push
mov
das
pusha
pop
add
ficompl
ret
icebp
mov
mov
adc
adc
out
and
insb
ret
sarb
inc
or
icebp
lods
out
loope
push
xchg
add
outsl
mov
sub
jae
sub
leave
imul
pop
out
cld
scas
fistl
xchg
pop
push
mul
ret
mov
dec
addb
push
in
jne
lods
pop
inc
xor
xchg
fwait
sbb
popa
mov
push
shl
mov
push
cmc
addr16
stc
int3
ror
jmp
sub
mov
in
stos
nop
jnp
cmp
adc
popa
loopne
push
sbb
inc
add
cmp
inc
mov
cmp
mov
js
sbb
test
out
push
xchg
outsl
btrl
fisttpll
je
pushf
mov
sbb
xor
aam
in
ret
pop
mov
mov
xchg
add
mov
test
sbb
adc
js
adc
or
js
aaa
push
xchg
mov
stc
aas
cld
push
sub
test
push
push
push
outsb
pop
sbb
repnz
jle
stos
jmp
sub
cmp
or
adc
das
cmpsl
jp
xor
pop
out
les
xchg
sbb
xor
aam
push
pop
cmp
push
in
pop
pusha
fsubr
sahf
inc
in
mov
aad
clc
in
aam
push
push
leave
jecxz
leave
dec
hlt
add
dec
jnp
dec
lret
sbb
xchg
jecxz
and
es
and
aad
push
adc
iret
sahf
inc
push
sahf
sub
jmp
out
jp
outsl
and
sub
jmp
je
stos
cmp
sub
out
stos
jnp
pop
inc
adc
add
dec
clc
pop
mov
in
loope
mov
cltd
pop
sbb
lret
jp
and
hlt
stos
add
aaa
dec
insl
cli
fsubs
xor
stc
aad
mov
pop
pop
mov
push
mov
xchg
in
and
sbb
adc
fwait
ss
dec
mov
data16
stos
fs
sbb
xor
xchg
mov
fcmovnu
jae
aam
lahf
out
adc
jl
mull
and
ljmp
sub
dec
jle
aad
xchg
lods
clc
arpl
mov
popa
ss
lds
enter
shlb
gs
sarb
dec
push
add
or
bound
scas
aad
sub
dec
xor
mov
repnz
add
jno
and
sahf
icebp
mov
cld
test
insl
inc
pop
cmpb
roll
stos
mov
lcall
vrsqrtps
adc
add
mov
icebp
mov
push
adc
or
pop
push
add
fsubs
arpl
das
cmp
sub
rcr
xchg
push
stc
pop
sbb
ljmp
les
fucomp
cmp
pop
or
aaa
das
mov
xor
xlat
addb
mov
incl
loopne
lock
and
rclb
add
jecxz
jne
les
cld
inc
push
cmpsl
sub
mov
mov
xchg
pushf
mov
adc
mov
pop
jb
aad
push
ja
mov
dec
xor
and
fstl
or
push
adcb
rcll
pop
xchg
jnp
arpl
and
dec
push
aad
jecxz
and
or
lea
rclb
flds
insb
gs
cmp
in
inc
push
mov
xchg
inc
and
popf
and
jmp
mov
int
pop
lods
sbb
jg
jnp
inc
stc
fldln2
fldcw
enter
iret
add
mov
aaa
in
xlat
mov
test
cld
push
mov
int
imul
jb
mov
and
jne
push
popa
aam
in
cld
in
cmc
cmp
mov
push
push
xchg
xchg
sub
in
jns
stos
data16
push
push
push
test
mov
xchg
mov
arpl
xchg
pop
insb
lahf
push
shl
adc
fwait
jmp
pop
or
mov
jb
add
mov
setno
mov
jns
jl
pop
aam
sub
and
cmp
adc
idivb
bound
dec
ss
cmp
sub
lahf
enter
xchg
in
push
ss
mov
push
movsl
lret
and
jl
bound
out
cld
cmpsl
icebp
xor
stos
ds
add
call
sub
jo
js
or
ja
sub
add
gs
mov
hlt
insl
cmpsb
mov
sub
loopne
xchg
cltd
push
loop
ret
sub
add
rcrb
sub
cmc
sbb
inc
in
push
shl
loop
rcll
pop
stos
mov
pop
mov
dec
jmp
xor
ficomps
mov
add
in
pop
mov
xor
jle
and
push
jno
adc
mov
inc
mov
out
outsb
sarb
out
pop
mov
push
inc
out
int3
add
pop
mov
inc
subb
mul
pop
je
pop
loop
ficoms
jle,pt
inc
jno
pop
xchg
stos
adc
xchg
cmpsb
mov
and
int3
xor
out
dec
insl
mov
add
cmc
arpl
les
sti
cmp
pop
inc
sbb
out
dec
sbb
hlt
out
fsub
inc
push
mov
sahf
cmp
cmp
mov
fists
addb
sub
mov
mov
mov
les
pop
jmp
sbb
mov
dec
dec
dec
ret
fsts
cmp
idivl
pop
sub
in
int3
mov
sub
sbb
sti
int
jae
jno
mov
stos
or
xchg
scas
jmp
sub
push
mov
in
movsb
xchg
out
or
insb
push
ss
or
in
pop
imul
adc
mov
jmp
es
int
mov
pop
imul
lea
dec
rorb
js
es
sbb
jae
xchg
mov
fcoms
jns
shrb
pushf
adc
xchg
insb
push
and
test
mov
arpl
or
mov
aad
stos
mov
cmp
popa
jmp
clc
push
cmc
fnstsw
call
inc
sbb
ss
sub
stc
aad
xor
mov
adc
hlt
rcll
dec
jmp
pop
xchg
mov
mov
mov
movsl
inc
jmp
pop
leave
addr16
jae
push
xchg
aam
fstp
cwtl
fisubl
or
js
scas
dec
imul
movsl
mov
aad
out
mov
icebp
pop
shr
pop
mov
rcr
out
xchg
xor
sbb
mov
and
call
gs
scas
xlat
movaps
sub
mov
add
movsl
add
xor
push
fsubs
dec
lds
in
in
iret
cmpsb
iret
fstl
mov
in
mov
mov
pusha
call
insl
cld
pop
jb
sub
repz
pop
fisubrl
push
outsb
in
insl
xlat
sub
jns
lock
and
mov
pop
clc
jnp
push
dec
lcall
jnp
jb
inc
loopne
gs
lret
mov
pop
dec
andb
mov
pop
inc
fdivs
js
dec
or
sbb
pop
adc
jno
mov
pop
xchg
outsl
xor
cwtl
dec
lahf
test
addr16
jl
adc
movsb
popf
jno
test
sbb
fldl
in
dec
push
jnp
pop
cmpsl
xor
cmpsl
das
or
push
or
and
fstps
pop
mov
xlat
les
out
lods
stc
adc
fs
jl
add
ja
push
cltd
test
mov
xchg
mov
push
adc
ss
or
or
mov
mov
ret
mov
ljmp
sbb
xchg
and
sub
lea
and
pusha
aas
sub
aad
insb
xor
add
adc
cmp
lret
sub
stos
ficoms
cmp
inc
ret
and
push
mov
rorl
and
mov
cwtl
add
orl
in
lahf
mov
ss
sub
pusha
or
imulb
mov
ss
sbb
or
rcll
lret
arpl
mov
ret
imul
fucomi
mov
adc
push
mov
pop
pop
aas
xchg
lods
daa
bound
sti
jae
jle
pop
scas
inc
fsubrp
xchg
cmpsb
mov
dec
mov
daa
mov
ret
lods
or
enter
cld
test
jmp
std
jmp
lea
push
sahf
cmc
adc
mov
mov
dec
outsb
cmpl
mov
sub
mov
shrl
mov
mov
push
cltd
mov
ja
or
outsb
lcall
adc
inc
sub
stos
and
jmp
xchg
pop
rol
insb
movsb
lds
xor
cmp
xchg
in
add
sbb
mov
insb
pop
add
subl
pop
popa
mov
jp
mov
cmp
jecxz
fistl
enter
loope
frstor
add
imul
sbb
arpl
pop
les
xchg
sbb
rolb
sbb
fisubl
stos
inc
insb
popf
sub
mov
sbb
ja
pop
enter
and
sub
mov
sub
nop
out
stos
push
add
pop
inc
in
fisubrl
in
lds
mov
lret
mov
fdivrl
clc
iret
cmc
jmp
call
ss
movsb
xor
jae
sbb
and
rclb
ret
fcomip
subl
jne
fucom
inc
jl
inc
adc
fmull
cli
adc
pop
dec
cs
dec
sti
jge
orl
cmp
adc
je
icebp
jmp
jmp
arpl
push
cmp
ss
sbb
bound
iret
sbb
nop
jns
mov
mov
popf
call
pop
imul
inc
push
cmp
jle
xor
cmp
dec
xchg
test
add
xlat
mov
xor
lods
pop
stos
fwait
mov
sub
sub
cwtl
sub
dec
stc
popf
add
mov
add
add
cli
rep
push
sub
cs
fsubrl
jecxz
pop
and
dec
or
mov
xor
push
ss
lock
jecxz
or
icebp
bound
sbb
push
pop
aam
clc
sahf
mov
xchg
xchg
jo
jns
pop
fisubrl
stos
mov
out
dec
popf
test
xor
scas
std
dec
fsts
ss
xor
cmpsl
dec
adc
mov
pop
sar
pop
jae
jo
lods
xchg
lea
aas
mov
pop
loopne
in
xchg
bnd
mov
daa
mov
pop
dec
std
mov
clc
cwtl
out
jmp
sub
or
mov
add
shl
mov
push
icebp
push
push
cld
pop
xor
daa
mov
xor
sub
mov
jge
dec
mov
add
fnstcw
out
fwait
outsb
shlb
cmp
rep
adc
add
mov
inc
sbb
xchg
pop
xchg
leave
pop
mov
sti
jnp
in
lret
jne
pop
jl
xchg
fisubrl
xor
lods
push
les
jo
inc
xorb
push
test
or
push
cmp
and
pop
repz
fcmovb
mov
add
push
jnp
push
xchg
jge
sub
add
xchg
mov
lret
dec
out
jae
dec
add
cli
push
pop
cltd
pop
push
lahf
lock
rcll
imul
out
jns
int
ficoms
test
lea
mov
rcrb
rcrb
daa
mov
gs
cmpsl
pop
mov
out
sti
inc
scas
fisubs
mov
jle
scas
xor
and
mov
ret
sub
js
rcr
jp
xchg
cmpsb
fstps
push
mov
cli
add
jnp
mov
inc
sub
and
enter
or
push
push
daa
pop
push
xchg
adc
pop
pop
aaa
mov
add
xchg
xchg
pop
mov
add
sysret
ljmp
aaa
and
push
adc
jl
lcall
lea
les
lods
push
pop
cmp
jno
xor
mov
jle
mov
jp
push
arpl
orl
jbe
sub
clc
imul
mov
inc
xchg
cli
xchg
pop
mov
icebp
out
mov
and
data16
enter
and
ds
mov
je
inc
pop
pop
dec
xor
push
jmp
rorl
mov
mov
mov
and
gs
popf
xchg
pop
pop
dec
inc
rcrl
push
xchg
mov
fisubrs
add
xchg
ret
jo
dec
sub
repnz
daa
fdiv
mov
mov
jno
lea
sub
jecxz
ljmp
popf
mov
push
int
dec
leave
adc
mov
cmpsl
cld
push
and
inc
cmpsb
frstor
push
rcrb
ret
xchg
or
cmp
mov
test
add
shlb
mov
inc
repnz
dec
xchg
iret
scas
pop
xor
sub
mov
inc
pop
or
mov
test
nop
jns
test
decl
pop
and
xchg
cmp
cmc
mov
sbb
xor
pop
mov
cli
push
out
or
pusha
fcom
cmp
stos
dec
jmp
gs
sbb
shrl
loope
jmp
loop
fcomps
rcr
dec
mov
testl
mov
lcall
mov
cmpsl
sbb
shrl
testb
mov
jle
rclb
mov
ret
jmp
and
mov
mov
inc
jp
cmpsl
stos
jns
stos
mov
fisubl
repnz
jnp
aam
mov
aam
jb
arpl
jge
mov
inc
cmp
add
test
and
xchg
push
dec
rcll
push
mov
sbb
sahf
ds
mov
sub
mov
aad
out
lods
mov
cld
gs
mov
jnp
sbb
xchg
xchg
out
stc
addr16
cltd
shlb
xchg
push
test
cmpsl
and
mov
sbb
lret
clc
mov
xchg
pop
cld
mov
ds
ret
popf
push
mov
mov
sub
mov
movsb
test
inc
add
pop
movsb
xor
popf
testl
test
jno
cmpl
sbb
lahf
lea
adc
mov
cmpb
mov
adc
cmpsl
leave
xlat
inc
xor
adcl
aam
pop
mov
jmp
cmpsl
clc
xor
add
lahf
xchg
out
cmpl
push
pop
push
ds
inc
cmp
stos
andb
aam
adc
jmp
dec
jl
fwait
jne
js
fdivs
mov
scas
in
and
cmc
je
enter
pusha
ja
jb
adcl
push
mov
inc
jge
mov
cmpsl
test
sub
cwtl
ret
bound
hlt
add
test
xchg
data16
push
and
icebp
xor
pop
pop
shl
rol
sub
jg
push
js
jle
in
cltd
shll
into
test
xlat
cmpsl
js
xchg
sahf
imul
dec
jg
or
or
xchg
jbe
fprem1
mov
push
jg
xor
xchg
iret
fwait
inc
add
push
adc
insl
add
jo
adc
jl
mov
and
xor
mov
lock
inc
jmp
hlt
inc
mov
pusha
pop
cmp
xor
sbb
test
pushf
es
jbe
cwtl
gs
sti
lock
dec
jmp
mov
xor
and
mov
popf
test
xchg
or
movsl
hlt
gs
dec
pop
stc
pop
pop
push
add
lahf
cmpsl
sahf
mov
std
ficoml
mov
roll
jne
inc
lcall
mov
add
adc
popf
mov
dec
inc
xor
sbbb
sbb
jge
push
stos
dec
mov
xor
fsubr
fcmovnu
push
inc
stc
arpl
inc
pushl
push
cmp
int
jne
jno
je
bnd
mov
add
push
jb
scas
add
xor
lods
enter
mov
xor
push
addr16
out
jo
popf
fldcw
fstpt
pop
pop
lahf
pop
ret
push
lret
pushf
mov
insl
sti
shrl
sbb
push
or
and
push
outsb
cmpsl
or
pusha
adc
cmpb
cmc
inc
stc
jno
mov
jmp
orl
je
cs
pop
out
sub
sub
xor
and
ret
pop
mov
push
xchg
mov
int3
data16
mov
in
xchg
lock
and
xlat
fucomi
and
cmc
sub
jle
and
fwait
mov
pop
mov
cmpsb
push
es
bound
add
inc
pop
and
dec
mov
and
loope
lea
xor
test
jmpw
aad
cld
int
addb
inc
inc
in
repz
cmp
je
lods
push
adc
xchg
push
call
inc
out
lcall
and
or
xchg
stos
jbe
subl
fadds
or
loope
ljmp
jo
pop
adc
daa
jg
leave
stos
in
lock
fidivs
jbe
xor
cmpsl
lods
sahf
sub
adc
xchg
mov
mov
pop
repz
insb
adc
int
lret
push
or
fstl
cmp
add
pusha
mov
mov
hlt
adc
cltd
push
mov
fdivrp
push
push
or
jmp
xor
dec
out
and
pop
jg
jg
mov
xor
gs
jbe
daa
jmp
cld
aad
outsl
inc
adc
and
jge
mov
mov
push
stc
and
inc
or
xor
push
scas
mov
mov
ret
loopne
inc
push
subb
mov
sub
xchg
xchg
add
sub
xor
mov
mov
jg
pop
cmp
xchg
xor
pushaw
lock
mov
shl
pop
xor
inc
fwait
pop
adc
loop
loop
lock
idiv
jb
inc
int3
or
pusha
pushf
cmp
fildl
aaa
sub
loope
repnz
test
xor
xor
das
in
and
xor
cmp
mov
mov
rcl
xor
xchg
loopne
jl
dec
jb
xchg
add
lods
xchg
xor
mov
jae
pop
cmp
ds
push
stos
test
add
cwtl
outsb
aam
jl
mov
jge
or
jae
mov
jb
inc
xchg
inc
cmp
mov
adc
dec
pop
jae
outsb
pushw
mov
lods
icebp
addr16
sbb
pop
stos
je
and
int3
jns
dec
dec
mov
sub
insl
and
out
and
add
cmp
out
aas
jle
pop
in
enter
ret
xchg
lcall
cs
ficoml
jmp
mov
stos
dec
mov
adc
pusha
rcr
pop
icebp
dec
xorl
cltd
scas
call
mov
pop
push
push
add
adc
shl
dec
stos
xor
pop
xor
mov
ret
mov
ret
xor
movsb
filds
icebp
lcall
and
pop
cmp
gs
xor
sbb
jp
mov
dec
je
jns
call
cmp
addr16
mov
call
xor
pop
es
ficoml
dec
cli
and
mov
jnp
sub
daa
or
cmp
mov
popf
lcall
mov
lods
pop
push
arpl
inc
add
in
push
aas
xor
sub
sub
mov
xchg
rolb
xor
scas
and
leave
pop
mov
std
inc
daa
mov
jmp
mov
movsb
sbb
cld
test
mov
push
andb
das
jb
fnstcw
rolb
cwtl
es
add
daa
in
cmp
enter
xchg
jge
sbb
xor
sub
sub
jb
mov
pop
adc
insl
gs
or
xor
cmp
xchg
inc
ss
roll
mov
subl
fbstp
inc
leave
or
subb
dec
arpl
push
mov
ret
loope
cmp
xchg
std
test
call
push
fcompl
mov
mov
andb
sarl
popf
call
pushf
inc
mov
or
push
shlb
lods
jp
push
xor
mov
mov
mov
lret
jns
clc
lret
mov
add
sahf
pop
movsl
flds
add
pandn
ffree
call
shll
pop
pop
movb
outsl
pop
negb
sti
jbe
cld
jae
pop
jno
lods
push
cmp
xchg
sbb
fnstcw
and
imul
repnz
and
cmp
out
insl
repz
push
test
je
mov
divb
pop
pop
stos
pop
xchg
out
bound
mov
out
add
leave
adc
mov
arpl
mov
das
rcrl
or
jb
popa
mov
jne
cmp
mov
dec
fiaddl
enter
filds
out
inc
xlat
stos
lret
sbb
rcr
xchg
in
adc
fnsave
aas
dec
dec
xchg
cmp
sub
ret
mov
jbe
icebp
sti
adc
cmp
daa
stos
xchg
popa
std
into
push
loop,pn
bound
decb
mov
fdivrs
shlb
push
xchg
nop
add
bnd
cmp
dec
push
xchg
adc
rcr
lds
dec
push
aad
pop
dec
or
xor
lret
les
popa
mov
pop
lods
pop
or
xchg
ret
sbb
jle
jmp
jp
jecxz
scas
dec
add
iret
data16
jge
leave
inc
add
pop
movsb
sbb
out
xchg
int
fnstcw
mov
movsb
insb
adc
jnp
xlat
lods
xchg
inc
adc
adc
in
xchg
jbe
jbe
mov
mov
pusha
jae
cmp
into
sbb
dec
xchg
xchg
inc
push
sti
subb
test
out
adc
mov
inc
xor
repz
mov
cmp
or
dec
push
xor
xor
or
cmp
push
lret
idivl
out
inc
clc
bound
xchg
aaa
adc
fidivrl
pusha
pop
bound
adc
adc
mov
ja
sbb
mov
movl
adc
popa
loope
push
inc
imul
loop
sub
and
inc
jb
jle
cmp
call
movsb
pop
outsb
dec
mov
int3
mov
pop
dec
out
mov
or
cmc
aam
jbe
and
sar
ljmp
inc
punpckhbw
repz
and
std
sets
push
ficomps
ret
aam
and
jnp
mov
mov
xor
mov
ljmp
jno
in
dec
es
das
jbe
shr
dec
leave
incb
jecxz
push
push
pop
enter
mov
outsb
psadbw
sbb
loop
fnstenv
dec
test
fisubrl
ss
stos
xor
outsb
sub
dec
popa
mov
mov
pop
call
xchg
imul
outsb
stc
insl
fcmovu
push
add
scas
movsl
push
insl
push
fucom
stc
sbb
and
bound
sub
std
aad
xchg
jg
push
lcall
add
jb
popa
xchg
jg
and
adcb
sbb
xchg
lret
mov
addb
std
jmp
push
mulb
jne
dec
or
inc
lods
add
jns
xchg
bound
sbb
dec
arpl
add
jge
movb
mov
movsb
repz
sbb
xchg
jl
in
dec
sbb
pop
jae
jns
xchg
pop
dec
mov
dec
loopne
mov
addl
in
xchg
gs
movsl
ret
test
dec
xchg
mov
icebp
inc
inc
bound
mov
dec
call
mov
jb
aam
test
mov
movsb
cld
push
scas
cwtl
bnd
xchg
mov
xor
pop
dec
hlt
jg
mov
inc
lods
int3
or
and
shrb
cmovp
lods
inc
int3
add
pop
in
cmc
xorl
sub
call
test
popa
in
or
mov
adc
cli
mov
mov
jge
out
xor
js
ret
ret
dec
and
pop
popf
sub
mov
sub
mov
dec
lcall
pushf
ret
lahf
and
xor
subl
xor
cmp
push
cmp
xor
push
sub
push
inc
mov
rolb
scas
testl
add
dec
jno
or
mov
jecxz
lret
dec
cmp
cltd
mov
jge
dec
loopne
jle
or
icebp
mov
repz
je
jae
cmp
or
pusha
shll
pop
ljmp
sub
aam
xorl
fstpt
lods
in
popf
mov
ror
sub
inc
packsswb
or
lret
mov
mov
jb
insl
xchg
cmp
pop
jae
ret
nop
rcrb
aas
jmp
cmp
mov
mov
cli
into
cmpsb
push
mov
adc
aam
xchg
daa
mov
pop
scas
lcall
shll
shl
aas
imul
insb
popa
mov
into
jbe
xor
inc
scas
call
pop
lret
mov
sub
repnz
out
std
mov
loope
scas
out
je
cmc
sarb
das
cmp
lcall
pushf
fildl
cld
jle
ljmp
pop
cmpsl
push
subl
nop
push
fnstsw
adc
fstps
lock
or
sbb
addl
sbb
push
lock
mov
lahf
imul
popw
jae
mov
inc
mov
je
ret
jl
stos
sbb
fisubl
rcll
mov
psubq
xchg
stos
pop
lahf
xchg
sbb
mov
orb
mov
cs
add
sbb
lock
mov
add
mov
jge
enter
push
cmc
hlt
sbb
cwtl
jno
xchg
xchg
fbstp
jg
sub
mov
adc
test
jb
add
ljmp
jl
arpl
aas
fiaddl
jl
jne
mov
or
dec
mov
push
add
orl
jnp
lods
clc
out
adc
sub
gs
mov
loop
push
pop
stos
jo
cmpsl
mov
movsb
sahf
pop
add
insl
das
mov
and
data16
cs
jns
ds
iret
rcr
xchg
pushf
loop
push
rclb
add
fwait
push
mov
nop
lods
aad
sub
xchg
dec
xor
dec
push
test
out
test
dec
or
xchg
pop
mov
cmp
sbbl
loop
test
bound
fwait
sbb
xor
inc
sti
xchg
and
cmpsb
jo
push
sub
sub
sub
mov
push
sbb
mov
fdivrp
je
push
test
add
lods
sbb
jno
rolb
hlt
lahf
cmp
movsb
fstpl
xchg
lock
sti
sub
stos
bound
sbb
sub
sub
das
add
das
mov
sub
add
add
dec
xchg
xor
inc
shl
dec
pop
adc
mov
shrb
add
out
cmc
test
sti
mov
pop
mov
inc
mov
inc
lods
and
stc
cmp
je
sti
ret
xlat
pushf
ds
jl
pop
test
or
cwtl
push
dec
ljmp
bound
aad
pop
inc
dec
jnp
repz
sub
sbb
test
int3
mov
and
cwtl
xor
mov
fbstp
js
arpl
pop
sbb
sub
pop
add
mov
mov
aad
fisubrs
ror
addr16
nop
ja
ret
add
repz
clc
scas
mov
jno
inc
mull
repnz
cmp
push
lds
iret
mov
jbe
repnz
aam
dec
mov
cmp
xchg
in
jbe
testb
or
lock
jno
leave
jns
fxch
icebp
xchg
dec
pop
ud1
xor
cmpsb
push
push
les
inc
dec
pop
cmpsl
jns
out
gs
lock
rcll
xchg
sub
jbe
cmpsl
and
xchg
lahf
lods
and
and
inc
xchg
stos
xchg
pop
cmp
aaa
jl
cmc
int3
xor
xchg
js
or
fwait
add
sti
repz
in
pop
add
inc
xchg
shlb
mov
inc
popl
lds
test
mov
mov
inc
clc
or
add
enter
and
sub
es
xor
push
cmp
cmpsb
roll
sahf
fldt
addr16
sbbb
mov
lock
cmp
mov
adc
add
test
fcomi
jecxz
xchg
adc
adc
or
clc
rorb
xor
int
lds
dec
ret
mov
ror
test
adc
xchg
sahf
aaa
rcrl
adc
push
les
jo
fstl
cwtl
mov
das
pop
adc
lods
sbb
insb
and
pop
inc
jbe
jnp
insl
cwtl
dec
push
cmp
dec
mov
sbb
adc
push
cmp
imul
jp
sub
dec
cmp
loop
outsb
mov
repnz
inc
jbe
lret
or
cmp
fsubrp
loope
mov
push
out
not
addr16
sub
iret
adc
cmp
das
push
shl
pop
mov
in
add
mov
addr16
jnp
xor
dec
addl
ja
pop
mov
mov
sbb
or
mov
mov
xor
push
fstpl
cwtl
xor
leave
aaa
jp
imul
mov
mov
xlat
push
add
pusha
fisubs
push
aam
out
sbb
sbb
lcall
fwait
adc
jle
aas
loop
int3
adc
lret
enter
outsl
bndstx
sahf
nop
inc
scas
mov
in
push
mov
aam
fsubrs
inc
mov
mov
cwtl
pop
cld
pop
mov
repz
loopne
loope
movb
hlt
or
cwtl
xchg
sti
sub
mov
xor
add
add
das
dec
mov
xchg
stos
or
cmp
loope
mov
insl
sbbl
and
sbbb
jbe
dec
jno
mov
into
nop
dec
inc
data16
mov
pop
ret
cmp
aaa
push
mov
ret
sub
adc
subl
add
or
and
inc
pop
arpl
jns
aam
je,pn
pextrw
outsb
xchg
clc
ljmp
adcb
aas
push
cmpb
leave
ds
cmp
out
lock
jnp
sbb
jb
fmull
fmul
fwait
mov
sbbl
xchg
xor
lret
pop
cmc
out
mov
icebp
lcall
rorl
inc
pop
add
fldt
ljmp
xor
add
sbb
pop
mov
outsb
ror
or
jbe
test
dec
stc
sbb
xchg
insl
mov
pop
mov
add
clc
loopne
jnp
dec
push
lea
clc
jmp
scas
push
mov
sub
jg
mov
add
iret
das
shrl
mov
dec
add
mov
jo
fisttps
cli
ret
ds
outsb
mov
mov
addr16
and
cwtl
and
xchg
adc
sbb
lahf
pop
mov
loope
std
xchg
js
pop
inc
dec
xchg
aas
pushf
inc
push
jbe
pop
cmp
out
sbb
enter
loopne
into
and
mov
sahf
dec
xchg
into
sahf
mov
jnp
jp
clc
cmp
fadd
les
and
mov
or
adc
jp
sbb
dec
jmp
in
jmp
addb
mov
lock
push
mov
dec
mov
sti
testl
xor
push
aaa
lret
xchg
das
das
pop
rolb
sub
rorl
hlt
sub
or
or
adc
jae
fadds
in
jae
fsubr
fcmovne
dec
xchg
mov
add
cli
push
std
jecxz
push
fsub
xorb
push
xor
fmull
pop
das
push
inc
int3
inc
push
mov
mov
stos
cwtl
mov
iret
ds
cld
and
in
inc
mov
jl
jno
fwait
lea
imul
fisttpl
into
cs
roll
mov
mov
jbe
xchg
movsb
sub
fsubr
aas
xchg
jne
jns
les
clc
pop
fcomip
pushf
sahf
mov
and
sti
jno
mov
pop
fxch
and
pop
sub
mov
dec
jno
rcll
cmpl
gs
rep
cli
jae
insl
or
jno
xorb
push
clc
dec
popa
mov
loope,pt
dec
jbe
cmp
rcr
ret
mov
out
fstp
dec
nop
rcll
mov
outsb
add
jmp
scas
mov
out
mov
pop
adc
sbb
mov
mov
lret
and
cwtl
and
test
jno
add
pop
daa
shrl
dec
dec
fprem1
mov
sbb
lret
mov
fnstsw
sub
shrb
inc
cli
lock
addr16
iret
popa
sbb
xlat
add
jns
fldenv
mov
ljmp
jne
rol
test
add
jo
scas
das
push
aad
push
out
aad
jecxz
push
hlt
inc
add
loop
sti
xchg
pop
das
mov
fnstsw
imul
inc
jns
pmulhw
sbb
mov
sub
mov
mov
add
sti
or
out
xor
dec
popf
mov
and
sti
dec
add
or
aam
mov
insb
ret
cmp
pop
gs
adc
jle
inc
cmp
mov
jp
mov
sub
mov
sub
inc
ljmp
mov
fsubrl
add
sub
sub
frstor
mov
xlat
sub
outsl
or
fildl
es
dec
loop
jl
inc
push
xor
jb
and
pusha
xorl
mov
xchg
add
push
sbb
mov
cmp
add
jle
xorl
test
mov
xchg
inc
dec
mov
dec
insl
jl
sub
xor
adc
lods
bound
or
xchg
jle
sbb
cmp
cmpsl
fcmovnbe
lret
stos
imul
mov
lret
scas
xchg
ret
lret
loop
mov
loope
jmp
cmp
gs
sub
add
and
out
cmpsl
inc
repz
sahf
jg
gs
pop
add
stos
ljmp
xchg
repnz
pop
mov
xchg
fidivrl
jle
ljmp
pop
sti
and
pop
push
adc
xor
lcall
mov
mov
inc
adc
pop
pop
add
sub
popf
les
test
daa
jmp
and
sub
lea
scas
mov
aam
mov
aas
scas
mov
mov
xchg
iret
or
xor
ds
fwait
imul
xchg
pop
insl
pusha
sti
jno
xor
mov
lods
push
and
leave
pop
jg
pushf
push
mov
jnp
cmpsb
shl
or
push
repnz
in
mov
dec
fidivs
loop
loop
lcall
xchg
jbe
cmpsb
movsb
cmpps
test
scas
mov
cli
inc
add
mov
call
xchg
int3
pop
cwtl
mov
mov
push
shl
adc
out
sub
and
inc
mov
mov
mov
clc
inc
test
jne
lods
lcall
call
iret
push
sub
or
addr16
or
jb
pop
into
push
sub
divl
inc
push
dec
xor
mov
shr
inc
mov
mov
ss
mov
mov
fcmovu
push
or
lds
fs
bound
cmp
mov
ret
mov
loop
or
adc
xor
xchg
je
jmp
stc
xchg
ret
mov
ss
cmp
xorl
test
pop
push
negl
data16
outsb
sbb
mov
adc
rorl
les
xor
movsb
stc
outsb
test
xlat
sbb
ss
mov
adc
dec
mov
loopne
xchg
and
in
mov
aaa
shld
fisttpl
xor
lcall
bound
mov
pop
dec
in
daa
sub
jae
ret
xor
mov
enter
scas
push
cmp
xchg
pop
and
jns
jo
mov
cltd
ror
add
pop
addb
lret
cltd
cmp
cmpb
lcall
cmc
xchg
scas
ret
push
arpl
jo
inc
shll
mov
add
mov
pusha
pushf
imul
dec
pop
sub
int3
add
imull
or
sahf
daa
inc
push
fnstenv
jbe
inc
pusha
fimull
add
jp
mov
mov
bound
inc
xor
or
incl
sbb
scas
or
add
xchg
add
test
es
sbb
cmp
jnp
add
mov
fstpl
mov
dec
jmp
cwtl
popf
jb
mov
and
daa
fldt
cltd
in
adc
mov
fnstcw
push
and
inc
mov
repnz
mov
add
outsb
inc
mov
lret
cmp
xchg
stos
ljmp
stc
push
and
mov
mov
inc
mov
cld
mov
and
sub
stos
mov
fildll
enter
cmpsl
pusha
pop
jge
negb
xorl
inc
dec
and
incl
sub
emms
xor
sbb
cld
jae
push
out
clc
cmp
int
push
lcall
jmp
dec
sub
jmp
jnp
jecxz
mov
jb
xor
data16
pop
xchg
mov
add
pushf
nop
add
fstpt
add
notl
enter
sbb
or
inc
and
push
xlat
add
xchg
add
cli
dec
icebp
outsb
nop
push
int
jp
cmp
cmc
xchg
sahf
sub
or
lds
pop
rclb
jmp
hlt
jmp
sub
int3
iret
aas
or
pop
inc
dec
mov
fldl
fildl
incl
push
pop
xlat
jp
lods
pushf
sub
dec
fisttps
sarl
enter
pop
push
mov
shlb
out
or
les
shlb
adc
pop
mov
out
xor
cmp
push
sbb
xor
xchg
add
inc
and
cmpsl
int
add
push
ror
mov
popf
aam
fldt
pop
movsl
cwtl
cmc
sarl
xchg
xchg
push
xor
cmp
pop
cli
push
test
outsl
int3
das
test
subl
xlat
out
cld
push
push
int
fwait
sub
mov
aaa
xchg
subb
sub
lods
jb
xchg
or
jno
xchg
sub
sbb
push
push
or
and
mov
addl
jl
jnp
aas
int3
and
sub
or
jne
inc
insl
mov
cs
cmp
sub
xor
mov
popa
in
cwtl
mov
inc
fidivrl
lret
jmp
xor
sbb
fwait
sbb
pop
aas
call
push
add
mov
sti
fnsaves
pop
jns
xchg
adc
inc
and
and
stos
sub
and
jg
mov
stos
jmp
arpl
mov
sahf
sbb
sub
mov
aad
adc
mov
or
fs
pop
push
movsl
fs
jo
in
xchg
mov
mov
adc
push
dec
cwtl
rcl
mov
icebp
repz
lock
push
ss
cmp
xchg
push
movsb
mov
sub
mov
adc
gs
test
es
gs
ds
jb
inc
clc
pop
inc
xlat
add
xchg
push
jl
cmp
add
repz
jmp
jno
ret
je
loop
out
popf
cmp
adc
cmc
mov
shl
jo
xchg
mov
xchg
mov
mov
mov
mov
push
shll
push
dec
outsb
mov
icebp
and
not
hlt
add
out
insl
aas
adc
dec
sbb
divb
shrl
div
les
push
cmp
repnz
scas
out
nop
cwtl
pop
bound
sbb
adc
icebp
mov
xchg
aaa
xchg
mov
push
lret
push
lea
add
aas
mov
mov
outsb
loopne
lcall
cs
and
test
or
outsl
mov
mov
bound
fisubrs
repz
inc
cs
jnp
xchg
das
push
xchg
push
insl
movsb
xchg
dec
inc
lret
ficompl
inc
jp
jae
sub
pop
add
pop
aad
xchg
mov
insl
cwtl
insb
fs
cmp
cmpsb
pop
cld
add
xorb
mov
mov
pop
inc
adc
pop
mov
cmp
or
out
dec
sbbb
loop
cltd
outsb
pop
aaa
movsb
cli
iret
push
lods
pop
call
lret
mov
test
lock
or
and
push
add
sub
repnz
dec
ja
rcrb
mov
xor
popf
jae
pop
xchg
imul
sti
rcl
rcr
add
mov
pop
mov
fs
int3
lock
dec
push
aam
xlat
add
scas
sub
popa
sub
aam
or
mov
insb
jl
enter
sub
mov
mov
inc
jg
call
or
lret
aam
add
dec
jmp
mov
xchg
mov
stos
cmp
mov
dec
call
rol
xor
test
or
cltd
inc
sub
adc
mov
mov
cwtl
inc
mov
cmc
add
mov
movsl
and
lea
movsl
in
cli
enter
xchg
insl
out
lcall
je
add
loop
jmp
add
movsb
and
lcall
lods
xchg
arpl
dec
enter
daa
sub
into
jg
and
push
scas
ret
pop
shl
and
mov
mov
mov
outsl
pop
push
es
sub
in
cmp
movsl
adc
adc
or
pop
pop
and
mov
repz
lds
fstp
rclb
or
dec
cmp
add
pop
xor
insb
rorl
int
sbb
pop
push
mov
scas
je
mov
cld
je
cmc
aad
mov
jmp
rcl
jns
stc
inc
mov
punpckhwd
inc
aad
vcvttsd2si
push
inc
pop
pusha
add
or
cmp
bswap
and
or
sbb
sbb
xor
inc
dec
jp
outsl
pop
mov
stos
push
scas
xor
push
pusha
jns
in
or
push
xchg
push
cwtl
ljmp
mov
or
dec
sbb
ret
xchg
sub
push
aad
xchg
stc
jb
loop
das
ret
loop
xor
in
mov
inc
mov
mov
lods
push
aam
in
dec
aad
xor
mov
xchg
inc
and
mov
jl
push
sbb
cmp
ficomps
dec
jno
shlb
ret
scas
or
les
jae
std
pop
mov
xchg
xor
hlt
icebp
mov
adc
mov
or
aaa
mov
test
aam
loop
test
push
xor
loop
jb
outsl
leave
mov
dec
push
out
and
ja
add
les
loope
cmp
sub
cltd
aaa
ret
mov
sbb
mov
lods
aas
outsl
pop
pop
sahf
xlat
inc
repz
jbe
mov
inc
jg
mov
xchg
push
add
sbb
lods
lret
fiaddl
mov
loop
repz
mov
insl
das
xor
fstps
in
popf
pusha
loope
jmp
out
mov
sub
cld
inc
repz
sarl
inc
stc
popf
bts
inc
xor
fisubs
out
inc
mov
rclb
mov
fs
and
sti
imull
mov
mov
jp
ret
rcrl
xchg
xlat
jno
fisttps
test
addb
hlt
push
adc
add
mov
xchg
dec
jae
ljmp
mov
jg
add
aam
fs
and
adc
out
adc
stos
pop
icebp
shlb
mov
test
repnz
mov
into
pop
mov
cmp
pop
push
lods
inc
cmovns
arpl
clc
jecxz
shll
fldl
mov
movsb
das
ja
push
aas
out
std
repz
lret
inc
adc
rorb
and
mov
cld
jl,pt
jg
cmp
jg
sub
out
sbbb
negl
adc
lods
loopne
scas
test
mov
sub
pop
adc
sub
push
fldcw
in
mov
mov
and
ficompl
inc
mov
aam
cmpsb
test
inc
nop
sbb
ret
or
mov
jae
xchg
imul
adc
mov
cmp
mov
or
jge
push
and
xchg
and
and
divb
cli
and
movsl
stos
push
es
stos
xchg
int
enter
popa
outsl
out
sahf
setne
fs
scas
push
dec
aad
pusha
loop
pop
js
divps
sub
push
xchg
pop
insb
out
ljmp
xchg
ljmp
pop
xor
cmc
aam
test
ss
faddl
daa
sub
jle
es
lock
mov
les
rcll
and
fadds
or
xchg
cmpsb
les
pop
cmc
sar
jg
or
ss
cmp
xchg
test
xlat
push
cltd
aam
mov
sub
adc
icebp
jnp
pop
loop
stos
and
ja
sbb
sub
push
loope
sub
cmpsl
sbb
iret
repnz
lahf
cmpsb
sub
mov
mov
jp
pusha
aad
aam
fs
je
sub
add
in
lret
dec
ret
aas
push
cmp
xchg
push
outsb
pop
aaa
cmp
dec
lret
fnstsw
sub
jnp
fs
jo
push
sbb
movl
in
out
xor
jae
repnz
dec
jo
xor
jbe
or
lods
pop
test
inc
push
xchg
in
add
jno
lahf
mov
push
hlt
movb
sub
in
mov
adc
data16
bound
insb
mov
xlat
ret
cmpsb
repz
push
adc
ret
and
pop
popf
loop
iret
cli
sti
xchg
rcr
loopne
repz
adc
shlb
jmp
rep
out
xchg
add
xchg
inc
and
faddp
out
cs
test
sub
push
imul
rcll
and
loopne
fsqrt
add
scas
iret
xchg
or
add
and
xchg
insl
mov
and
pop
nop
push
pusha
mov
lret
jecxz
push
sub
jbe
pop
insl
sbb
xor
popf
push
fdivs
data16
and
jb
sbb
adc
mov
stc
push
insl
pop
adc
mov
inc
jg
in
xchg
mov
mov
imul
dec
mov
pop
cmc
cmp
loope
jo
in
aam
mov
dec
ss
cmp
mov
sbb
or
mov
sub
jl
lds
lods
mov
pop
shrb
add
xchg
das
mov
fsubl
cmp
out
jl
addr16
shll
stos
loop
inc
imul
lods
js
fs
add
int3
sub
sbb
cli
clc
pop
push
mov
insl
and
outsl
jg
dec
aad
mov
mov
decb
ret
mov
outsl
mov
and
mov
pminsw
js
ficompl
mov
mov
ror
fidivrl
adc
nop
push
shll
pop
jg
inc
pop
mov
mov
jp
arpl
clc
adc
and
sarl
arpl
sbb
and
push
gs
fwait
stos
int
movsb
fbstp
pop
scas
cld
rol
out
xchg
dec
aad
pusha
xchg
gs
pop
addl
sub
loope
and
out
jne
mov
ffree
out
pop
test
and
test
push
rclb
aad
aaa
test
bound
fimull
iret
add
jbe
add
lea
xchg
mov
inc
jnp
inc
movsb
stos
mov
push
adc
fs
loopne
fcompl
mov
jp
sahf
lea
mov
loope
adc
and
mov
jp
aam
das
push
rcl
dec
lret
popf
clc
ds
jae
jb,pt
adc
test
ljmp
fs
mov
repnz
movsl
test
sub
aad
add
add
lahf
out
pop
push
jns
pop
adc
clc
jbe
mov
loope
mov
movsl
shlb
pushw
inc
scas
std
ss
mov
xor
in
iret
push
repnz
ds
idivb
mov
push
icebp
add
xor
je
cmc
adc
ljmp
scas
cmp
test
mov
mov
cld
es
cs
stos
push
lcall
push
ror
xchg
pop
test
ret
fsubs
pusha
lods
cmp
cli
pop
subl
loope
lods
lret
and
xor
pop
xor
sub
loopne
sub
mov
ret
xchg
adc
scas
fsubrp
sbb
sub
mov
add
insb
fs
stc
and
cmpsl
push
xor
dec
mov
jmp
inc
dec
cmp
mov
daa
das
pop
in
cmp
xlat
mov
cmpsb
insb
aas
stos
jle
stos
iret
in
js
push
jecxz
mov
jnp
nop
enter
imul
inc
or
cmpsb
shrl
and
mov
push
mov
or
fwait
nop
push
dec
cmp
inc
shr
cld
cs
jl
sub
adc
pop
sbb
jb
fnstenv
cmc
cmpsb
jne
mov
push
nop
mov
xor
lret
sbb
mov
insl
cmpsb
mov
adc
ds
mov
mov
daa
xchg
mov
stc
nop
xor
sbb
lea
shlb
or
mov
cli
push
or
add
std
data16
sbb
icebp
andb
pop
out
lock
add
cmc
out
fs
add
mov
xor
je
dec
pop
cs
fdivl
shlb
jno
jo
cmp
in
in
pop
xchg
call
and
aam
cwtl
cmp
pop
adcl
sbb
insl
mov
adc
test
aas
xchg
into
leave
sub
sahf
test
mov
mov
ret
test
stos
adc
imul
daa
and
jle
cmp
or
mov
sti
xchg
jl
inc
leave
mov
cmp
shr
bswap
push
roll
add
fmuls
push
mov
sbb
mov
je
roll
jne
fnstenv
jle
and
pop
lea
hlt
pop
push
sbb
fcmovb
cmpsb
push
in
repz
loop
mov
and
jl
jne
leave
arpl
test
lods
adc
push
iret
cltd
fcomps
fidivrl
lcall
xchg
mov
lret
imul
pop
xor
arpl
cmpsb
mov
fnstenv
insb
fimull
sahf
xchg
mov
jecxz
es
adc
es
lock
and
enter
dec
loop
dec
mov
adc
sahf
or
jecxz
sub
test
and
faddl
ret
mov
push
dec
mov
lea
dec
js
dec
xor
sti
fidivrl
xor
call
ja
mov
cwtl
dec
cmp
adc
movb
loope
ljmp
inc
lea
das
or
int
mov
xor
int3
dec
iret
cli
mov
jmp
test
jns
fs
movsb
aad
into
sti
inc
cmp
xchg
inc
loopne
pop
lea
sub
nop
pop
adc
nop
xchg
testl
lock
push
mov
in
xor
pop
jno
lods
lahf
cmp
pop
xchg
imull
imul
mov
adc
cltd
jge
jns
mov
repz
jne
cmp
shll
cmpsb
bound
imulb
xchg
ds
sbb
push
add
adc
jp
fsubrl
push
adc
psrad
cmp
push
jae
mov
in
jno
movsb
popa
inc
sub
outsb
jbe
aad
jae
xor
xlat
test
sbb
icebp
jecxz
jns
popa
pop
mov
mov
cmp
les
fsts
leave
test
jecxz
or
outsl
je
popf
cmp
lret
out
lahf
sub
jnp
in
in
nop
add
aad
bound
and
cmp
mov
mov
les
inc
xor
push
es
pop
mov
mov
cmpsl
pop
xor
fwait
stos
inc
mov
mov
mov
mov
loop
mov
outsb
cmovbe
mov
adc
repz
mov
lea
sti
sbbb
mov
stos
outsl
sbb
push
rcr
imull
xlat
xlat
mov
insb
add
add
dec
flds
cmpb
test
push
mov
or
push
negl
push
ficomps
sbbl
push
fdivr
jns
js
sahf
jecxz
enter
inc
imul
cli
xor
jb
les
jnp
pop
data16
aad
stos
jmp
shrl
rclb
ret
clc
sbb
ljmp
and
ja
or
sbb
or
mov
xor
and
xchg
mov
fists
sub
xchg
dec
adc
mov
das
inc
sub
inc
cmp
mov
sbbb
inc
inc
fucomip
out
adc
int3
mov
in
xor
and
cmc
sahf
sub
and
inc
adc
push
push
or
dec
pop
cld
icebp
cmp
std
stos
adc
xlat
sbb
movsl
cmp
nop
mov
imul
or
sub
mov
xchg
push
es
push
test
cmp
outsl
test
sbb
les
dec
sub
push
dec
mov
mov
pop
lret
sub
es
sub
pop
sub
mov
stc
ljmp
cli
add
xchg
cltd
in
insb
dec
mov
data16
mov
fs
mov
les
push
mov
jp
mov
adc
adcb
shrl
jae
aaa
and
sarl
inc
les
jbe
daa
movsl
ljmp
adc
xchg
cmp
lock
lcall
cwtl
push
push
push
ret
cmpsb
jbe
mov
jmp
mov
mov
lahf
adc
mov
test
sub
loop
mov
or
mov
int
pop
mov
loopne
push
xchg
add
xor
push
scas
sbb
out
notl
pop
push
cmp
mov
fildl
mov
repz
insl
mov
ja
leave
negl
jg
pushf
ret
in
dec
rep
incb
ljmp
in
ljmp
pusha
call
lea
cmp
jge
jne
dec
in
iret
adc
add
out
mov
xor
stos
push
mov
out
cmp
movsl
xor
pop
call
dec
ljmp
jne
shrb
push
sbb
arpl
movl
adc
adc
or
es
orb
lahf
inc
lret
cmp
scas
inc
jmp
das
out
sub
mov
xor
xor
les
pop
aaa
cmp
fistpl
out
outsb
dec
push
sahf
rolb
mov
test
lahf
popf
enter
mov
in
or
fsubs
ret
psraw
js
mov
cmp
xchg
push
je
ret
sub
mov
scas
jno
outsb
test
inc
lock
into
insl
shr
and
push
mov
xlat
mov
scas
cli
mov
add
xchg
cltd
into
ret
adcl
in
stos
hlt
pop
rorl
js
in
xlat
dec
ja
pusha
hlt
fiadds
adc
cwtl
sbb
pop
mov
sbb
repz
insl
into
push
xorl
cmp
push
sub
jb
mov
jle
icebp
adc
xchg
sbb
jle
jnp
fmuls
cltd
and
jmp
lods
add
insl
pop
mov
or
xchg
push
and
sbb
fnstcw
mov
and
mov
pop
cmp
adc
pop
mov
mov
pop
or
and
mov
lods
adc
xchg
jno
arpl
mov
mov
or
xchg
inc
cmp
mov
mov
fistpll
or
lds
je
lcall
sub
lods
ds
outsl
lods
inc
cmp
lcall
push
orb
stos
es
push
or
mov
rcrl
pop
or
pop
sti
in
jp
mov
inc
ljmp
mov
xchg
fsubrl
stos
and
mov
lds
icebp
adc
sub
mov
mov
sub
mov
fnsave
pop
pop
ss
mov
jns
popf
ds
dec
mov
pusha
pusha
adc
push
inc
and
pop
iret
push
test
je
xchg
sbb
sahf
jae
in
dec
push
mov
sub
pop
xchg
cli
pop
jae
dec
fs
das
push
xchg
xor
push
mov
pushf
out
nop
mov
mov
jbe
push
dec
jb
mov
enter
clc
into
dec
shll
daa
xchg
lock
fldl
rcll
sbb
in
test
call
mov
loop
fcmove
pop
push
mov
loop
stos
mov
add
mov
or
push
repnz
insb
insl
cmp
shl
mov
test
and
int
pop
call
mov
imul
sbb
or
test
into
cli
mov
addr16
jp
pop
and
push
mov
lahf
lret
lods
mov
mov
aaa
sbb
loope
mov
aad
jne
mov
mov
pop
out
ret
inc
sub
int
cmp
pop
add
lock
out
mov
cmp
pop
xor
push
out
dec
call
loop
add
xchg
in
sbb
test
ljmp
xchg
negb
std
out
jl
cs
cli
xchg
xor
or
rcr
inc
pop
sbb
mov
pusha
shlb
xchg
es
clc
inc
ds
inc
adc
lret
rclb
push
lea
and
pop
mov
lods
sub
add
mov
mov
or
sti
xchg
js
dec
xor
inc
data16
xlat
das
cmp
outsl
fnstenvs
sub
cli
add
cs
and
sti
pop
mov
mov
into
movsb
shlb
sub
sbb
adc
mov
inc
mov
jns
cmpsb
push
sub
mov
mov
inc
adc
and
out
mov
push
loop
jnp
jb
sbb
xor
pusha
loop
jns
cmp
inc
cmp
leave
andb
jp
clc
inc
cmp
aaa
and
xor
and
insl
fistps
sbb
adc
push
clc
mov
push
pop
and
inc
in
xor
jge
jmp
nop
pop
jo
leave
inc
mov
mov
shrl
sub
mov
jmp
push
xor
aas
or
lret
cmp
cmp
hlt
enter
sub
xchg
push
xor
dec
xor
sbb
addl
sub
lret
mull
jg
xlat
sub
cmp
mov
xchg
icebp
jb
cmp
cmpsb
dec
xchg
ds
repz
push
popa
lret
shll
sete
repz
or
cld
or
movb
shlb
cmp
xchg
std
or
sarl
test
jecxz
adc
mov
rolb
jno
pop
xchg
jbe
jp
add
lar
cmc
mov
sbb
je
inc
xor
mov
or
mov
jno
lcall
cltd
push
out
outsl
hlt
push
mov
sbb
mov
jg
bound
inc
dec
aad
and
adc
sti
push
imul
push
clc
arpl
pop
outsl
icebp
loop
cld
mov
test
mov
mov
sbb
pop
andb
xchg
or
sbb
xchg
mov
jb
pop
mov
icebp
or
hlt
cmc
xorl
shr
jl
inc
jge
jae
mov
mov
js
pop
push
fidivrl
or
mov
mov
dec
pop
mov
in
sti
fcompl
lcall
push
fdivl
pop
jno
xor
popf
inc
test
mov
push
push
xchg
pop
mov
stos
gs
outsb
push
adc
xor
mov
stos
cwtl
inc
jno
xor
testl
into
mov
loop
lds
out
cmp
insl
push
add
sbb
aam
mov
xchg
mov
rol
pop
adc
jl
pop
incb
bound
sbb
stos
inc
dec
es
mov
sub
dec
jns
push
orl
push
jg
dec
out
out
mov
dec
inc
add
xor
push
adc
stos
rorb
mov
mov
or
jl
xchg
jmp
add
xchg
jmp
sub
sbb
sub
je
cmc
dec
jbe
mov
jnp
movsb
movsb
push
leave
jge
les
mov
lds
pop
icebp
neg
and
xchg
dec
pop
pop
jge
mov
lret
jno
jns
ja
int
scas
adc
pop
rcrl
pop
pusha
out
jb
xchg
hlt
jp
fwait
cld
pop
cli
sbb
cmp
ret
lea
pop
cmpl
sbb
push
mov
or
loop
or
add
mov
cs
mov
mov
bound
out
aaa
aam
jbe
stos
add
push
and
pusha
aaa
loope
test
mov
in
outsl
jecxz
cmp
in
cmpsl
stos
xor
mov
idivb
jno
mov
mov
push
sbb
fucomip
push
or
adc
insl
mov
mov
cmpsb
pop
mov
and
mov
sbb
sub
psrlq
in
or
shll
out
add
cmp
cmc
sbb
and
adc
aaa
pop
cmp
pop
push
xor
fs
int3
loope
push
adc
popa
jb
mov
jae
fistpll
ljmp
clc
in
dec
in
aas
mov
mov
pushf
icebp
jno
xor
imul
mov
mov
lea
push
lods
mov
cmpsl
mov
and
and
xor
in
mov
jb
xor
jnp
xchg
mov
jns
pop
orl
vphaddubw
inc
lea
push
sti
push
fst
and
dec
dec
in
cmp
xchg
not
mov
cmp
out
test
test
fimuls
lock
pop
or
cmp
pusha
cmp
lcall
or
fadd
and
or
or
jae
mov
dec
cli
dec
outsl
faddl
xchg
pop
dec
and
xor
aaa
mov
out
add
pop
pusha
pop
jge
cmp
jmp
sbb
cmp
filds
in
jbe
jg
loop
cmp
push
js
mov
lock
out
dec
mov
sub
xchg
jle
fwait
gs
int3
xchg
adc
jle
dec
dec
or
pop
jle
into
stos
pop
pop
sbbb
lret
adc
pop
gs
stos
addr16
cltd
push
jl
or
dec
xor
into
mov
add
push
test
sbb
popf
ja
dec
inc
adc
ss
inc
mov
mov
jno
imul
aam
outsb
mov
int
lods
loop
inc
lret
push
xchg
mov
cmc
test
mov
mov
in
test
push
sub
push
fs
mov
dec
imul
add
push
ljmp
jae
xor
xchg
jle
shl
lds
lods
sub
cltd
jne
shl
adc
rolb
stos
outsb
add
inc
and
xchg
sti
jbe
idiv
clc
fidivrl
adc
cmpsl
lods
add
sbb
push
jnp
lcall
aad
mov
mov
ret
adc
lds
and
les
inc
mov
sbb
insl
sbb
mov
pop
enter
adc
mov
mov
mov
or
cld
xor
pusha
mov
push
xchg
lcall
add
fwait
sbb
pop
pop
or
in
pop
jnp
int
mul
leave
sbb
add
call
or
shl
jmp
out
int3
cmp
fwait
sbb
or
jle
mov
das
lret
inc
lds
mov
sbb
fmull
xlat
test
shll
or
jge
jle
in
cs
mov
sub
xchg
neg
out
add
jge
pop
lods
mov
and
xor
dec
cwtl
cld
notl
inc
mov
add
shlb
fmull
sbb
popa
fdivp
cmpsl
leave
push
mov
mov
cli
pushf
xchg
repnz
mov
mov
outsb
cli
imul
mov
cmp
add
mov
test
jge
xchg
loope
test
jae
jle
push
pop
fwait
mov
fucomp
or
addl
fcmove
pop
jbe
dec
in
xor
push
push
aad
push
cmp
push
aas
movsb
pop
stos
fs
push
push
adc
xor
xor
mov
mov
call
add
ror
xor
rep
inc
jle
in
lret
shrl
push
pop
mov
push
ficomps
test
sub
test
xor
ss
or
fsts
and
adc
insl
aad
int
lahf
sbb
push
popf
mov
cmp
jbe
mov
fadds
xor
pop
dec
pop
bound
mov
adc
outsl
sarb
das
jno
sub
insb
xchg
js
or
mov
xor
iret
mov
leave
test
ficompl
lods
out
test
mov
test
mov
sbb
dec
inc
or
test
sti
cmpsl
inc
imul
rcrl
push
add
iret
lahf
sub
mov
cmp
ljmp
incl
lret
adc
lea
leave
fistps
jae
mov
cltd
cmpb
les
dec
dec
nop
dec
insb
jg
loopne
mov
push
js
xor
aas
push
out
sti
mov
jmp
mov
pop
xor
ror
lea
dec
ja
xchg
pop
jmp
push
mov
nop
jns
add
in
jmp
es
inc
mov
imul
js
and
sbb
stc
subl
mov
es
xchg
jle
aad
adc
or
sub
xchg
and
into
pop
lods
stos
arpl
js
mov
fdivp
cs
lahf
mov
or
lods
testb
adc
loop
jp
jmp
inc
sbb
xor
mov
push
sub
jl
dec
sbb
int
and
js
jnp
ror
mov
jg
jae
shr
mov
add
pop
xor
pop
pop
into
hlt
stos
pop
xchg
push
fwait
add
sub
imul
mov
jl
mov
bound
in
xor
mov
cld
iret
jl
cwtl
push
or
mov
adc
aas
inc
push
sarl
mov
push
fs
xor
pop
orl
into
push
adc
imul
clc
xchg
cmp
shrl
xchg
push
push
pusha
movsb
push
mov
push
mov
and
pop
ds
mov
xor
sti
fdiv
idivb
cli
and
mov
sbbb
ss
adc
jno
fsubrs
dec
test
push
xchg
mov
pop
mov
aas
andb
mov
xor
xchg
jmp
shlb
shr
stos
notl
pop
notl
loope
stc
mov
in
jg
lea
sbb
push
lods
filds
cmp
and
sbb
mov
and
pop
ficoms
mov
outsb
mov
aas
cmp
mov
cmp
test
movsl
scas
cmp
out
in
insl
inc
and
xchg
pop
imul
popf
out
aas
xor
dec
ret
pop
lret
sbb
inc
pop
fsubr
inc
mov
jne
lret
loopne
mov
fisubs
xor
rorl
ja
call
test
lds
push
cli
xchg
int3
sbb
xor
das
mov
add
insb
pop
lcall
setl
sub
cmpsl
ss
in
ret
int
add
imull
adc
icebp
fadds
or
adc
in
xchg
sub
cld
mov
in
xor
add
cli
xchg
lret
cld
cmp
or
xchg
jg,pn
and
out
ret
dec
nop
jmp
int3
out
cmpsb
outsb
add
je
addr16
sbb
pushf
push
sub
rcrl
xor
mov
xchg
mov
jle
cmp
aad
mov
mov
aam
pop
jo
filds
jg
inc
out
mov
jnp
cmp
push
push
mov
ss
pushf
sbb
or
xor
inc
shll
icebp
in
aad
xchg
push
sbb
cmp
aaa
or
imul
pop
in
inc
gs
iret
das
jo
lcall
movsb
ja
push
pop
in
mov
add
dec
repz
std
cmp
icebp
lret
sbb
out
pop
stos
ja
mov
cli
or
push
mov
or
inc
inc
jp
dec
dec
out
addr16
cmpl
call
ret
clc
pusha
dec
and
lds
xor
dec
imul
sbb
sbb
imul
and
mov
scas
test
fwait
outsb
sub
push
add
jb
xlat
pop
xchg
adc
jb
repz
push
pusha
call
cmpsl
and
xor
sub
mov
pop
clc
enter
outsl
mov
cltd
inc
and
push
cmp
jge
push
adc
fbld
cwtl
iret
std
push
and
and
jp
xor
jl
adc
dec
sub
enter
sahf
mov
je
mov
in
add
insb
push
xlat
leave
mov
inc
dec
jp,pt
mov
pusha
out
pop
cwtl
cmp
sbb
and
cltd
lods
sbb
test
inc
jnp
imul
xchg
loop
dec
mov
mov
mov
mov
mov
lret
add
inc
out
in
out
adc
movb
adc
adc
cmc
mov
xchg
inc
popf
filds
jg
adc
dec
inc
test
fsubs
aas
adc
jp
popa
out
cmp
test
pop
pop
adc
cwtl
or
nop
pop
mov
adc
cmpsl
xchg
movsl
rclb
fwait
add
insb
push
jl
push
inc
mov
xchg
xor
mov
jle
rol
sub
mov
sub
ljmp
out
das
mov
jne
loopne
aam
cltd
cmpsb
test
mov
outsl
mov
sub
inc
rorl
cmp
mov
adc
fstl
loop
lea
out
pop
push
mov
sbb
cs
sbb
xchg
fs
ret
aad
pop
push
sbb
lock
addr16
in
jb
mov
jns
loope
or
arpl
pop
fs
mov
cltd
pop
imul
inc
jno
xchg
push
pop
loopne
xchg
test
test
xchg
scas
out
scas
roll
gs
pop
sub
lds
loope
sbb
divb
cmp
cli
insl
aas
hlt
add
xor
fiadds
pop
into
lahf
outsl
movsb
mov
ficoms
bound
adc
out
adc
mov
fs
add
insb
sub
mov
iret
shr
push
push
cwtl
popa
mov
adc
adc
lea
fcomip
insl
mov
mov
add
rorb
leave
sub
or
test
lret
push
adc
fisttps
insb
push
cmpsb
and
rolb
sbb
or
mov
pop
mov
and
adc
lods
pop
inc
repnz
xor
adc
dec
fidivrl
stos
idivl
mov
aad
fstps
jl
xor
push
in
pusha
adc
cltd
inc
adc
cmc
insb
shll
repz
stos
das
iret
xor
xor
ficoms
xchg
mov
mov
or
inc
test
aaa
test
jl
mov
jno
pop
sahf
dec
les
fdivrs
cmp
pop
in
mov
sub
out
jl
xlat
or
int3
fldt
lahf
cmc
adc
movsl
orb
dec
shrl
dec
test
or
imul
loop
mov
sbb
push
out
adcl
popa
inc
xchg
fldl
aad
mov
call
test
jo
pop
imul
push
mov
and
repnz
dec
or
mov
jmp
mov
pushf
cmc
push
push
jo
xor
incb
adc
sub
pop
and
mov
jmp
popf
inc
xor
scas
sub
movsb
mov
sub
inc
mov
cmp
cli
fimull
ret
fsubl
pop
mov
mov
sub
lds
aas
mov
adc
repz
push
mov
mov
das
xorl
ja
fcomip
xchg
in
mov
add
add
pop
mov
out
outsl
loopne
push
push
mov
fisttpl
inc
es
pop
xor
clc
out
mov
cld
inc
sub
ror
xchg
mov
aam
ja
sbb
cmp
and
cmc
push
or
xor
mov
roll
leave
mov
push
lahf
aas
mov
and
xchg
add
mov
xlat
pop
add
das
loope
pop
cmpsb
and
sbb
jmp
mov
or
fiaddl
dec
mov
daa
xor
cmp
inc
jle
and
pushf
movsl
dec
mov
test
lcall
outsb
push
stos
mull
test
out
cltd
in
ret
out
dec
sub
inc
and
ret
lret
cmpsl
and
out
sti
dec
adc
mov
sub
mov
outsb
mov
mov
fmulp
jnp
fildll
xor
fdivl
mov
sbb
sub
cld
imul
push
das
inc
mov
and
lock
push
inc
aam
sbb
iret
stc
push
push
pop
idivl
dec
call
pop
scas
jnp
jo
jg
inc
xor
mov
and
inc
dec
xchg
ss
and
mov
inc
lds
sahf
jle
mov
mov
sub
and
pop
int
lds
mov
inc
mov
fdivp
jne
push
xchg
xor
and
xchg
mov
adc
outsl
mov
push
sahf
sbb
or
cli
push
mov
xchg
fldcw
pusha
sub
jmp
rol
sub
add
cltd
sbb
push
cmp
fnsave
pop
fistpll
repnz
fildl
je
clc
clc
in
into
into
enter
aam
rclb
daa
jns
in
xchg
pop
jle
pop
fiaddl
push
sbb
dec
mov
push
jecxz
pop
push
inc
mov
adc
add
and
xchg
xor
dec
jno
repnz
or
push
lea
lds
nop
jb
inc
in
cmp
add
test
inc
fcoms
and
xor
lock
push
inc
fsubs
fdivrl
push
xor
or
mov
sub
js
pop
sbb
daa
lret
mov
enter
xorb
andl
fwait
das
xor
mov
mov
in
mov
mov
mov
cmp
and
pop
mov
cmc
add
mov
dec
test
sub
lock
dec
cmp
cmpsl
aaa
dec
test
push
das
pop
in
mov
cmp
adc
lds
push
in
inc
cld
scas
mov
cli
or
push
add
popf
fld
enter
es
test
es
mov
out
cmpsb
jg
sbb
adc
sbb
prefetch
push
add
ds
dec
push
pushf
insb
lahf
xlat
xchg
or
hlt
mov
pop
ret
out
xchg
cmp
push
cmp
push
nop
fiadds
fistps
and
or
xor
shl
or
ja
or
ss
cmpsb
mov
daa
mov
lods
repz
sub
ja
out
iret
or
lcall
adc
fcomps
xlat
test
sub
call
out
jge
lods
pop
js
push
xchg
and
iret
sbb
xchg
mov
fwait
test
sub
and
fisubl
iret
test
imul
pop
inc
inc
into
and
fdivrl
pop
mov
lea
imul
pop
lock
or
in
mov
faddl
adc
add
push
mov
aad
pop
fwait
mov
pop
add
lods
jae
push
pop
lea
sbb
dec
imul
or
push
orl
jo
je
incb
mov
stos
jbe
xchg
jle
xchg
pop
int
test
sbb
and
jb
sahf
test
pusha
fidivrs
mov
movsl
mov
push
cmc
sub
fildll
xchg
sbb
mov
pop
push
xchg
popf
and
stos
jo
popa
cmp
lea
pop
imul
dec
mov
xlat
into
sub
addr16
adc
pushf
push
push
lahf
arpl
sub
sbb
pop
shlb
aas
loop
js
pusha
lods
cmp
cmp
notb
lods
test
jle
cmp
test
call
mov
shl
mov
addb
cld
jno
sbb
inc
xchg
pushl
and
addb
xchg
jmp
inc
es
inc
fidivs
adc
jecxz
push
mov
or
and
aam
scas
repnz
xchg
scas
fisubrs
push
cmp
mov
in
into
cmpsb
cmc
clc
ja
out
ja
les
mov
pop
inc
and
ja
jae
add
imull
sbb
ds
pop
dec
pop
stc
dec
pop
and
mov
sbb
cmp
mov
push
call
scas
cwtl
pop
and
xchg
movsb
pop
xorl
or
cltd
shl
push
dec
push
mov
cmp
and
lods
cmp
test
inc
lahf
popa
dec
int
rcrl
inc
push
shrb
jmp
dec
fucomp
mov
dec
xlat
popf
push
rcrb
xchg
dec
jmp
fbld
jo
sub
in
pop
aad
jl
test
loope
out
and
xor
dec
push
bswap
loopne
xlat
inc
daa
xchg
lock
xor
pop
fidivl
adc
jl
and
leave
jp
push
push
push
shrb
loopne
stos
jg
push
xchg
mov
push
sbb
mov
aam
insl
xor
mov
pusha
cmpb
repnz
xchg
insl
les
movsl
mov
movntps
mov
fidivrl
mov
test
dec
jecxz
mull
call
mov
notl
mov
cwtl
inc
outsl
mov
xchg
mov
push
pop
dec
lret
mov
xor
mov
test
rorb
or
mov
out
enter
add
xor
xchg
int3
ss
or
test
jae
dec
mov
ss
scas
int3
fmull
rolb
test
movsl
ja
shrl
or
mov
insb
hlt
adc
arpl
mov
xchg
pop
inc
xor
test
sbb
lcall
lret
jns
mov
mov
cmpsl
int
cltd
and
sbb
test
addr16
xor
and
clc
mov
loop
mov
das
sti
pop
mov
cwtl
in
adc
inc
jae
loope
into
jo
repz
adc
cwtl
jge
dec
mov
out
xlat
cmpsl
stos
aaa
xchg
push
popa
fmulp
mov
mov
sbb
aaa
jb
test
push
mov
push
xor
dec
mov
sub
push
pop
arpl
cmc
adc
sbb
xor
int3
pop
imul
or
jb
scas
fwait
out
je
jno
mov
jmp
mov
jbe
push
adc
lea
les
ret
bound
imul
xchg
fnsave
negb
in
xor
xchg
xchg
pop
sub
outsl
into
push
mov
jbe
xchg
cli
adc
sbb
xor
fcomps
es
cmp
in
iret
jmp
flds
add
adc
xchg
mov
ljmp
mov
and
inc
repz
inc
dec
aad
in
ficoml
push
xchg
dec
stos
jp
push
cwtl
jae
bnd
popa
repnz
xor
call
jmp
inc
js
mov
push
out
inc
push
jb
cs
pslld
push
sub
outsl
inc
jbe
hlt
fwait
inc
push
jmp
pop
or
inc
sbb
loop
loop
push
mull
mov
jmp
cmp
and
jae
adc
xor
mov
cmpsl
arpl
fstl
pop
cmpsl
shll
insl
mov
dec
jmp
pop
call
sub
and
imul
mov
dec
cmp
mulb
lds
jnp
ret
mov
stos
pop
lea
pop
inc
call
xor
inc
jae
cwtl
xlat
into
mov
push
arpl
mov
popa
fxch
adcl
imulw
jge
inc
sbb
jl
xor
mov
mov
jecxz
mov
mov
mov
stos
xorl
mov
jmp
pop
imul
push
mov
add
outsl
push
out
cmp
in
mov
int
out
aad
daa
fiadds
or
cmp
fyl2xp1
in
xlat
xor
ja
lods
jo
adcl
adc
pop
inc
pop
sbb
std
add
sbb
xor
inc
sbb
mov
cld
push
ds
data16
xor
mov
mov
stc
sbb
adcb
mov
imulb
pushf
jg
sub
insl
sbb
pop
shll
mov
xor
push
test
cltd
test
decl
or
add
jne
xor
inc
daa
jmp
jg
loope
push
cmp
pop
mov
or
loop
jb
outsl
dec
jne
jo
ret
sbb
js
sbb
aad
push
rolb
push
jecxz
xlat
mov
add
xchg
loopne
add
mov
add
lea
jnp
aad
stc
sub
pslld
popf
mov
arpl
pop
out
in
inc
ss
mov
fdivrs
push
cmp
out
movsl
lret
sbb
and
call
rcr
bound
xchg
loopne
sbb
std
push
cmp
mov
sarl
mov
scas
cmp
push
rep
sahf
mov
inc
mov
out
jae
addr16
dec
sub
jg
mov
xor
xor
and
int
ds
cmp
pusha
pop
jl
sbb
inc
xor
sbb
pushf
sbb
mov
in
aaa
xchg
mov
mov
mov
lds
ror
mov
dec
mov
mov
scas
jno
insl
push
sbb
add
sbb
mov
std
fiaddl
push
or
add
fs
pop
in
mov
or
out
test
test
sub
pop
jle
xor
sti
movl
cmp
shlb
pop
mov
add
es
je
sbb
pop
jnp
push
pop
loope
lock
inc
std
jle
dec
es
sbb
sbb
ret
dec
repnz
mov
test
xchg
in
push
and
inc
dec
cwtl
adc
pushf
lock
push
rorb
dec
mov
ljmp
mov
rol
jne
cmpsb
xor
jb
xchg
sub
popa
and
lods
out
jle
lcall
push
pop
inc
sub
xchg
and
add
rdtsc
ret
leave
iret
adc
pop
into
lret
loopne
ds
sub
int3
rcll
in
xchg
enter
push
loopne
mov
dec
jbe
cmp
sbb
push
and
mov
xchg
dec
test
fmul
out
cmp
sub
test
test
out
test
dec
jge
xor
jp
dec
inc
fucom
icebp
mul
lock
push
xor
cmp
ss
call
sub
mov
inc
jl
mov
lock
add
mov
scas
adc
pop
cs
xor
fstpt
sbb
aaa
add
dec
and
ficompl
and
mov
mov
std
jl
cmp
cmp
or
xlat
pop
mov
lcall
add
enter
addb
bound
cs
out
xchg
jbe
pop
adc
sar
jbe
xchg
in
cmp
testl
push
in
mov
or
adc
repz
aad
cli
popf
jg
daa
in
loopne
out
daa
adc
add
cs
in
or
js
jo
and
xchg
mov
mov
addr16
aas
mov
cltd
outsb
jecxz
dec
add
rorb
fidivl
out
pop
mov
and
les
cwtl
pop
pusha
or
imul
push
add
dec
and
jg
mov
rol
fnsave
loop
out
aaa
fidivrl
mov
cmp
in
repz
pop
rorb
lds
pop
test
into
cmp
add
mov
repz
shrl
ljmp
or
addb
mov
dec
mov
ljmp
xorb
inc
icebp
cltd
jle
repz
fcomps
add
jnp
or
subpd
xchg
aad
xchg
icebp
into
mov
lahf
cltd
mov
inc
xlat
push
sub
push
jns
sub
ss
inc
mov
jp
dec
cmp
cmp
xor
bound
lahf
out
push
xor
and
in
inc
pop
jmp
fsincos
movsl
pop
aad
push
lods
jl
das
jmp
or
pop
xorl
push
mov
mov
lret
pop
mov
gs
aam
jg
loopne
sub
lock
enter
std
cmpsb
mov
rolb
cli
cmp
aam
pusha
insb
jp
sahf
mov
imul
int3
subb
add
pop
lret
dec
pop
fsubrp
xor
cs
lcall
mov
nop
xchg
repz
enter
pop
or
cltd
sahf
cmp
in
jl
js
mov
jmp
push
andl
lret
jge
hlt
mov
popf
dec
das
sub
adc
pushf
mov
stc
cli
adc
mov
pop
icebp
dec
mov
aam
movsl
shr
pop
addl
rorb
inc
add
add
enter
ja
pop
cmpsl
mov
sbb
mov
mov
je
aam
mov
mov
roll
lods
aam
xor
xchg
adc
sbb
ret
inc
scas
mov
jmp
cmp
sbb
pop
pushf
pop
addr16
shrl
in
mov
push
icebp
sub
cmp
jg
mov
mov
mov
push
fwait
dec
ret
mov
ljmp
mov
mov
lret
mov
mov
pop
mov
add
or
into
pop
push
lcall
dec
inc
rclb
pop
dec
cli
adc
inc
jecxz
aam
je
sub
mov
cmpsb
dec
int
sub
cmp
mov
jge
jg
sub
or
ret
jge
dec
add
mov
and
dec
and
cmp
cltd
sbb
shr
jne
popa
pop
rcll
mov
imul
cmp
inc
dec
xrelease
add
sbb
icebp
mov
ss
fidivs
cmc
push
out
or
push
clc
xchg
mov
in
stos
stos
icebp
cmp
test
and
jmp
push
decl
loope
mov
fmull
inc
push
xchg
and
push
push
jmp
adc
mov
jge
aas
mov
dec
out
push
or
fsub
lods
xchg
cmp
gs
pop
lcall
jbe
adc
popa
imul
jge
pop
fiadds
rcrb
xchg
pop
ret
xchg
mov
and
cwtl
notb
in
bound
jecxz
xor
cmp
in
jnp
movsl
call
or
xor
es
add
mov
mov
adc
ret
jmp
or
movsl
test
sar
neg
fimull
inc
xchg
mov
cmc
push
cs
lret
adc
sbb
inc
push
out
xchg
rolb
cmp
daa
jmp
aaa
jle
dec
icebp
mov
cmpsl
out
inc
push
rcrb
out
or
movsb
pop
rorl
mov
mov
xor
mov
dec
mov
aas
add
inc
jo
sub
out
add
inc
xor
dec
xor
pushf
push
daa
mov
mov
cs
pop
in
inc
push
push
mov
wrmsr
adc
jnp
dec
iret
in
xlat
xchg
enter
jns
imul
dec
call
push
movsb
nop
inc
lret
push
das
out
mov
std
mov
sub
jp
sti
jge,pn
lea
mov
stos
jne
dec
cmc
mov
push
sbb
insl
xchg
fs
inc
je
repz
inc
fadds
mov
bound
je
sub
int3
mov
dec
or
or
jnp
sub
add
pop
jle
lret
add
loopne
or
das
repnz
xorl
pop
es
jp
int3
stos
loop
lret
add
push
leave
gs
xchg
scas
pop
cmc
mov
pop
and
sbb
xor
psubq
sbb
test
ss
mov
mov
test
lods
inc
jno
popf
loop
jne
or
lods
fistpl
mov
jne
push
popf
push
out
jne
mov
js
faddl
rorl
mov
cld
xchg
dec
mov
sbb
or
addb
notl
in
dec
scas
fildll
imul
sub
lret
dec
fnclex
mull
fs
push
fwait
mov
cmpl
cwtl
mov
cmp
mov
bnd
ret
cld
in
pop
mov
popa
or
jno
scas
add
ds
mov
rcr
xchg
mov
mov
add
in
push
les
movl
push
dec
or
xchg
fs
push
adc
xor
aad
mov
lcall
inc
scas
scas
mov
jns
nop
add
std
outsl
dec
mull
sarl
shll
xchg
cmpsb
adc
insl
or
lods
dec
dec
sub
inc
cltd
repnz
imul
loope
mov
pop
test
imul
add
ss
xor
push
mov
rcr
sbb
jne
jne
add
mov
out
mov
cltd
mov
dec
jo
std
jmp
fdiv
dec
ljmp
sub
les
dec
sbb
stc
sbb
inc
sub
test
or
test
adc
das
pop
dec
sub
or
push
adc
sahf
cs
adc
int
inc
jno
pop
shll
insl
aad
movsb
cmp
scas
lods
adc
or
pop
iret
cmpsl
push
or
rclb
mov
pop
cs
cmp
sar
add
hlt
add
int3
xor
and
outsb
gs
inc
repnz
shl
in
xchg
xor
cltd
xlat
loope
dec
jmp
sub
push
rolb
jmp
mov
mov
xchg
pusha
outsb
outsb
cmp
xor
xchg
jnp
ja
dec
in
pop
ret
fstl
jo
and
xor
int
imul
loop
imul
enter
mov
icebp
scas
pop
cmp
sub
scas
jno
sub
inc
dec
xor
ss
pop
cmp
inc
adc
insl
in
ret
dec
lret
repz
sbb
lock
mov
push
subl
pop
repnz
call
fs
les
jae
fnstenv
dec
jb
imull
movsl
aas
xchg
xlat
daa
jle
fsubl
arpl
jae
lret
adc
dec
testl
push
or
mov
cmp
rorb
daa
mov
fwait
fwait
imul
enter
scas
mov
divb
call
sub
dec
imul
or
adc
ss
push
aam
js
out
outsb
or
sarb
sub
popf
jle
arpl
test
in
push
and
dec
shr
shlb
repz
xchg
mov
pop
push
jne
or
cmp
or
bound
push
daa
lahf
fldenv
movsb
repz
test
enter
lock
test
xchg
ret
add
jne
scas
mov
test
leave
sbb
and
repnz
fisttps
hlt
mov
xor
insl
mov
push
sub
pushf
fwait
sub
mov
in
push
out
or
jg
fcoms
cltd
std
push
sbb
xchg
add
jecxz
push
cmp
sarl
cs
fstpl
inc
stos
iret
mov
mov
ret
mov
mov
fbstp
mov
cmp
or
push
xor
xor
cmpsl
jo
inc
aaa
adc
sub
cli
sahf
and
inc
clc
iret
mov
test
add
cmpsl
cmpsl
call
scas
adc
jb
sahf
and
lock
pushf
jnp
cltd
int
loope
sti
and
or
movsb
loope
fidivrl
pop
adc
cmp
push
jp
movsl
push
scas
pop
dec
adc
hlt
jmp
ja
mov
pop
imul
and
xchg
loop
xlat
hlt
push
jg
bound
aam
mov
or
xchg
jae
sub
cmp
movsl
mov
lcall
push
clc
bound
jb
lods
dec
or
ja
sbb
scas
dec
inc
push
shll
inc
jl
pop
cmp
ja
in
lahf
inc
jp
adc
lds
xchg
test
ffreep
jge
out
adcl
repnz
xchg
movsb
cmp
movsl
pop
or
into
jecxz
fisubrs
add
adc
mov
push
icebp
aaa
push
mov
push
mov
scas
popf
mov
inc
sub
jmp
and
stc
mov
adc
loopne
xor
fnstsw
shrb
adc
push
push
stos
jns
mov
or
addr16
pushf
fbstp
add
lea
fcmovnu
xor
stc
outsl
pop
adc
fs
test
out
xchg
jne
cmc
stos
mov
ljmp
dec
cmp
scas
push
mov
imul
fiadds
fmull
and
mull
add
push
push
cs
push
cmp
inc
stos
sub
dec
xor
ret
movsl
fdivrl
negb
call
jle
dec
out
sbb
sbb
xor
insb
aam
leave
stos
cmpb
cmp
fsubl
lahf
hlt
aas
xchg
xchg
fstpt
mov
lahf
sbb
movsb
mov
aad
mov
out
mov
inc
ja
int
out
mov
das
mov
lret
pusha
dec
imul
fstp
into
push
mov
arpl
pop
ret
adc
mov
pop
into
outsl
add
fcomip
xor
push
test
mov
adc
mov
jae
scas
cwtl
jge
shlb
lcall
or
add
fdivl
lret
jae
int3
les
imul
icebp
movsb
dec
subb
rorl
xor
iret
or
ficoml
test
push
sarl
xchg
dec
scas
insb
pop
push
out
push
cvtps2pd
inc
insb
cmp
fsubrs
push
aad
outsl
or
adcl
mov
bound
out
movsl
mov
fdivrl
mov
lcall
xchg
add
mov
push
mov
loope
mov
ja
out
ss
rorl
insl
loope
pushf
add
or
divl
sub
sbb
mov
cli
dec
jbe
mov
in
test
push
data16
loope
aad
rcrl
dec
rclb
sar
fimull
daa
clc
or
mov
scas
mov
sub
leave
adcb
inc
mov
xchg
ror
jbe
std
or
xchg
sub
or
dec
sub
push
fsubp
popa
push
std
adc
neg
xchg
sub
xor
xchg
xchg
sbb
mov
inc
sbb
mov
repz
sti
outsl
sahf
test
inc
pusha
push
lea
xor
es
mov
sbb
ret
out
cmp
pushl
test
ret
loope
inc
sbb
push
arpl
jle
sahf
sub
popf
mov
jecxz
mov
and
aaa
cmp
add
xor
call
aaa
xchg
xchg
int
dec
cli
ljmp
or
out
das
cmpsb
lcall
arpl
jge
sar
dec
add
mov
adc
sub
leave
sti
test
mov
xchg
loop
and
cmpsl
stc
loope
notb
lea
xchg
pop
mov
xor
xor
cmp
lahf
pop
adc
sub
iret
mov
dec
bound
sti
adc
popf
adc
push
push
cmp
imul
flds
push
test
and
aas
jo
push
cmp
jnp
sti
adc
add
and
push
mov
mov
daa
sub
scas
mov
dec
ja
in
mov
mov
vmaxss
shrl
pop
repnz
adc
aaa
or
iret
jo
xchg
mov
shll
or
fcmovu
movq
jnp
icebp
or
xor
push
mov
inc
sub
xor
jne
lret
stc
push
mov
out
and
into
fcompl
movsb
jge
inc
add
repz
push
popf
xchg
mov
mov
cmp
sbb
test
nop
ret
cltd
aad
mov
std
insl
sbb
push
pop
sub
or
enter
in
cld
pop
sub
rolb
bound
mov
int
outsl
sub
dec
push
rcll
repnz
mov
lea
mov
jb
pop
dec
leave
sub
outsb
not
pop
ss
mov
pop
inc
or
sub
aad
add
shrl
das
cmc
clc
js
add
or
push
xlat
ss
add
cmc
sub
push
cmp
gs
jle
mov
out
mov
sub
xchg
repnz
pop
daa
std
add
cmp
in
mov
scas
popf
lods
sub
std
out
scas
mov
dec
or
pop
xor
cwtl
or
jl
enter
xchg
int
cmpsb
negb
xchg
add
adc
enter
out
ljmp
mov
xor
testb
and
adc
mov
xchg
jmp
inc
mov
sahf
test
fsubl
jbe
dec
fiaddl
pop
fisubrl
ret
lods
jecxz
repnz
shrb
and
lods
mov
adc
negb
pop
mov
adc
fcmovbe
cwtl
imul
pop
adc
lds
mov
aad
sarb
push
inc
adc
pop
arpl
ret
cmp
out
jb
mov
jbe
xor
and
adc
gs
dec
adc
push
aad
bound
dec
lret
pop
scas
fldl
outsl
or
popa
fistpll
mov
push
xchg
dec
in
outsl
dec
out
jl
cmp
sub
jl
negb
xor
inc
mov
sbb
lret
movsl
push
pop
add
or
aaa
jmp
inc
movsb
sub
out
cmpsb
ja
mov
mull
aaa
mov
pop
push
lcall
jle
push
insb
sub
inc
jge
aas
inc
mov
sti
imul
sbb
inc
data16
fidivrs
mov
cwtl
test
flds
mov
shrl
js
mov
mov
mov
insb
dec
pusha
jbe
mov
pop
sti
xchg
dec
mov
outsl
add
adc
inc
sbb
sbb
mov
pusha
and
jne
out
dec
mov
testb
or
xor
test
int3
adc
es
add
sub
sub
fdivl
jecxz
cmp
scas
aaa
sbb
cs
or
xchg
xor
adc
popa
cmp
sub
cs
inc
push
mov
pop
mov
lds
pop
sbb
lahf
cwtl
push
popf
pusha
mov
jno
or
flds
aam
stos
movsb
jle
scas
test
jecxz
in
das
dec
es
pusha
mov
in
jae
cmp
and
xor
sbb
mov
add
inc
mov
int
fbld
xor
inc
cmp
test
sti
xor
popf
addr16
js
dec
sbb
sbb
cli
xchg
cli
jo
aas
mov
jecxz
addb
mov
testb
jnp
dec
mov
mov
sub
or
dec
js
scas
enter
mov
subb
negl
sub
enter
aas
jge
adc
sub
pop
lock
int3
stos
and
pusha
cmp
add
in
push
cmp
mov
xlat
jae
xchg
pop
jne
es
insb
xor
cmp
popf
imul
iret
in
xchg
sub
mov
sub
push
lcall
xlat
cmc
jle
into
fsubs
xchg
mov
or
insb
repnz
flds
outsl
pop
adc
adc
pop
popf
iret
dec
lret
pop
or
popf
notl
pop
popf
pop
stc
cltd
movsl
xor
loopne
mov
popf
or
sub
add
sbb
or
pop
dec
mov
lods
pop
mov
sub
and
mov
dec
fisttpll
cmpb
divl
lods
and
cltd
mov
cs
xchg
imul
jae
pop
sub
fucom
aaa
xchg
aas
scas
insb
arpl
mov
call
imul
addr16
mov
jo
and
rcrb
out
hlt
cld
mov
dec
inc
sbb
cwtl
js
jbe
roll
inc
fadds
ja
fildll
lea
mov
in
add
int3
loopne
out
push
jnp
icebp
scas
push
sub
push
push
mov
mov
push
push
sub
and
nop
dec
sbb
pushf
addr16
int
pushf
xor
cmp
jb
sbb
inc
test
or
pop
dec
fcomip
sbb
mov
pop
xchg
xor
in
lret
repnz
sbb
test
shrb
dec
hlt
and
repnz
pushf
aad
push
pop
or
and
mov
dec
jnp
jge
cmpsb
stos
leave
jno
ror
push
or
add
ja
sub
out
lcall
jnp
xor
inc
inc
jmp
jns
mov
rcl
clc
or
ds
pop
push
cmc
out
sbb
rol
fnstcw
cmp
fisubrs
cmp
dec
ret
or
jecxz
movsb
imul
movsl
xor
test
or
repnz
mov
iret
sub
stc
jecxz,pt
mov
pop
fstps
lock
add
js
xor
mov
dec
xor
test
xor
cmc
jl
jmp
push
cmp
jl
pop
and
lcall
adc
decl
cld
popf
mov
jg
in
inc
in
or
push
rclb
repnz
sahf
scas
pusha
mov
lret
movsl
inc
mov
shlb
fidivs
cmp
sub
imul
jo
adc
addl
or
sbb
xchg
mov
mov
jns
stc
xorb
lods
fdivrl
sbb
jae
dec
pop
loop
adc
mov
and
inc
daa
ficomps
mov
and
sbb
jg
out
call
cmp
xor
nop
add
add
pop
add
push
in
add
aad
inc
inc
jns
addr16
push
and
push
in
and
sub
sub
arpl
test
inc
pop
shlb
jmp
in
jnp
lret
aad
add
in
andl
dec
fwait
cmp
ja
sub
mov
sbb
jo
push
push
dec
shr
in
sub
push
add
push
aaa
fistps
movsbl
bound
sub
mov
pop
inc
lods
cmp
gs
outsb
add
dec
xchg
gs
push
mov
lods
pop
sbb
int
int3
adc
jo
or
jp
or
add
std
or
popa
jno
mov
push
adc
lret
xchg
ljmp
push
or
mov
pop
into
pop
lea
xor
push
mov
mov
loop
aad
xchg
adc
mov
mov
mov
out
ret
pop
arpl
dec
lcall
clc
push
and
pop
popa
mov
and
mov
add
or
lahf
shlb
lret
inc
xor
mov
mov
aam
mov
inc
jg
xchg
clc
push
add
xchg
mov
fsubp
negb
mov
push
push
lret
cmc
or
push
mov
je
lds
mov
push
sbb
stos
mov
fdivs
lds
shrl
bound
fidivs
insb
xlat
push
inc
sbb
pop
cltd
or
ja
iret
dec
pop
fisubs
ficompl
ds
jge
lock
pop
mov
mov
or
or
jmp
lds
mov
pop
popa
or
mov
std
cmpsl
inc
lds
dec
mov
mov
pop
xchg
cvtdq2ps
mov
xor
jae
or
cmp
dec
xchg
mov
add
and
hlt
xchg
push
fnsave
fisttpl
inc
cs
jnp
roll
pushf
cmp
pop
into
dec
xchg
add
lcall
and
gs
subb
loop
fwait
sbb
fnstenv
mov
in
jbe
dec
mov
mov
jae
imul
sub
cmp
inc
imul
xchg
test
dec
jmp
cmp
mov
pop
xchg
pusha
xchg
xchg
adc
insl
jge
clc
test
int3
repz
test
pop
mov
dec
add
mov
aad
push
mov
lods
mov
stos
xchg
outsb
mov
jbe
inc
test
shr
mov
out
cwtl
aaa
test
push
pop
mov
jecxz
cmpb
mov
xor
adc
jno
push
dec
mov
inc
push
or
xchg
and
out
sti
mov
mov
sub
pop
mov
jmp
mov
test
pop
and
mov
cmp
dec
fidivl
ja
adc
xchg
ret
enter
sbb
imul
cmpsl
xor
lods
mov
xchg
push
cmp
mov
and
xor
les
and
das
jmp
xchg
sub
add
mov
jb
fs
cltd
mov
into
loopne
orl
ds
xchg
mov
hlt
or
test
adc
js
xchg
xchg
pop
ficoml
in
test
xchg
sbb
pop
out
call
mov
pop
ja
fmuls
pop
push
fwait
mov
popa
lods
xchg
push
mov
xchg
mov
push
lods
sub
pop
sahf
mov
enter
fdiv
jae
sbb
xchg
stos
inc
fsubl
adcb
cmpsb
nop
or
and
jns
aam
push
mov
std
js
mov
mov
insl
fidivrl
cli
sbb
repnz
jns
popf
jg
add
add
imul
pop
xor
push
ret
arpl
ret
mov
cmpl
mov
push
sub
fwait
mov
mov
lods
int
out
pop
in
cmp
mov
lods
data16
mov
lret
xchg
insb
xchg
dec
loopne
bound
xor
add
pop
cmp
push
js
ret
push
inc
dec
aas
cmp
or
mov
lcall
icebp
mov
dec
repnz
call
push
jns
shrl
or
ret
xchg
push
shlb
imul
push
pop
jge
shlb
mov
dec
jle
mov
push
inc
icebp
aas
dec
adc
xor
rcr
or
inc
in
out
test
std
ss
icebp
addr16
stc
pushf
jecxz
outsl
loopne
sub
xor
cmp
idivb
ljmp
imul
inc
sub
xor
sti
cltd
int3
fstpl
insl
imul
gs
jns
push
lahf
or
or
dec
xchg
and
stc
push
pop
out
cmpsb
cmpsl
cmp
fmuls
inc
call
call
sub
adc
in
sbb
inc
jnp
scas
cmc
loop
mov
adc
push
jb
cmp
aad
fimuls
fimull
aad
stos
pop
test
and
std
mov
arpl
lahf
pop
rcr
inc
inc
mov
cmp
xchg
add
lock
pushl
jnp
push
cmp
lahf
cmp
loop
or
sbb
xchg
out
dec
xchg
lcall
add
pop
add
push
jns
fwait
dec
mov
dec
inc
sbb
mov
stos
mov
mov
pop
push
inc
nop
loopne
rcrl
mov
sub
icebp
push
jbe
popa
fisubrs
aad
mov
xchg
jne
add
sub
dec
lret
out
cmc
mov
cwtl
or
gs
int
testb
ja
jns
unpcklps
test
sbb
popa
imul
push
xor
repnz
cs
and
repnz
xor
rclb
cmp
jg
in
push
cmpsl
rcll
dec
outsl
popa
push
jp
xor
xchg
jae
jo
ret
in
cld
cmp
negl
jno
dec
popl
sti
pop
xor
xor
popa
dec
cmp
adc
xchg
push
das
scas
daa
popf
sti
jnp
xchg
sub
push
shrb
cmpsb
and
es
int3
rolb
mov
xor
pop
adc
add
sbb
clc
xchg
mov
cmp
dec
rol
imul
out
inc
shrb
stc
out
out
fs
pusha
sbb
sbb
fdiv
cmp
mov
and
test
xchg
out
sbb
dec
jbe
aas
cmp
int3
push
imul
adc
and
dec
test
icebp
lcall
jle
cmp
es
out
adc
sub
mov
and
sub
xchg
mov
inc
enter
push
mov
pop
shll
adc
outsb
xchg
arpl
mov
repz
cmpb
xchg
jb
xor
fcmovnu
rcrb
cmc
pop
dec
and
test
lea
jmp
sbb
dec
cli
push
js
cltd
lock
push
fbld
add
adc
or
fmuls
js
mov
scas
xchg
ljmp
mov
xor
cmp
insb
cmc
out
dec
push
or
xlat
ja
outsb
jo
icebp
push
jb
lock
pop
mov
mov
mov
add
daa
mov
icebp
push
js
pop
or
cmpsb
es
test
inc
mov
mov
outsl
ffree
mov
sarb
xchg
fisubrs
xor
dec
dec
out
jns
lock
shrb
lods
push
pop
pop
das
xor
sti
add
push
push
daa
xchg
popa
data16
xor
rolb
lods
dec
push
push
or
test
cbtw
test
push
add
pushf
push
out
aad
jno
push
ljmp
subb
inc
add
scas
inc
jl
rclb
aam
es
jmp
jne
les
mov
sub
xchg
jmp
out
jbe
pusha
mov
jge
call
lret
mov
aaa
inc
lahf
mov
repz
ljmp
xor
std
out
fs
ret
rclb
inc
pop
inc
loop
cmpsb
adc
cmpsb
popw
movb
adc
iret
jp
jbe
das
out
mov
in
push
fidivrs
dec
inc
sbb
xchg
cmp
mov
fistpl
xor
insb
push
inc
adc
jp
outsl
insb
repnz
mov
cmp
lock
call
mov
iret
add
and
push
icebp
roll
mov
aas
and
mov
lds
enter
mov
mov
incb
lret
dec
dec
push
out
lea
xchg
test
xchg
inc
sub
je
inc
add
jb
sub
mov
mov
xchg
pop
fistl
ret
sbb
adc
jae
clc
shl
push
pushf
icebp
loopne
cmp
popf
dec
clc
mov
dec
sti
aas
mov
out
into
or
cmpsl
ja
fdivl
addb
xchg
arpl
clc
mov
inc
pop
mov
faddp
mov
jp
jle
sahf
sbb
repnz
mov
aad
adc
mov
jle
andb
adc
jl
inc
pop
sbb
test
in
mov
mov
mov
pop
jne
test
es
pop
sbb
push
mov
mov
cli
fnstcw
sbb
jbe
test
mov
test
or
add
pop
out
fxch
or
icebp
cmpsb
mov
inc
or
je
xchg
dec
popa
fs
insb
flds
jle
sub
sar
push
xor
ja
es
iret
shrl
orl
test
jbe
pop
mov
mov
jle
adc
inc
sub
xor
push
or
stos
rorl
add
sbb
xor
lock
cltd
into
imul
imul
xlat
icebp
mov
int
aam
outsb
fsts
jg
xchg
std
emms
loope
cwtl
out
jne
mov
sahf
jge
fdivrl
fdivs
mov
cs
pop
addb
adc
xor
jmp
iret
in
or
test
scas
xor
andl
xchg
sti
jg
outsb
ret
les
mov
repz
and
ret
test
aad
inc
jl
lods
mov
pop
add
sub
xor
imul
and
cs
insl
push
pop
aaa
jmp
int3
sti
sbb
int3
roll
mov
int3
jnp
sahf
int
scas
dec
ficoml
fidivl
dec
popa
pop
xchg
aaa
dec
lcall
add
cli
mov
lds
xchg
imul
sub
cli
dec
rcll
pop
les
jbe,pt
cmpsl
and
jle
icebp
imul
cmp
mov
clc
mov
and
add
inc
fs
in
jle
add
and
or
shll
fmuls
cli
push
repz
out
push
sbb
les
repnz
loope
and
xchg
cmp
es
or
fldt
push
sahf
les
xor
cmp
mov
stos
stos
idivb
es
add
push
inc
hlt
mov
inc
fstp
imul
mov
mov
add
aad
fimull
pop
aam
addr16
sti
adc
into
test
mov
add
add
insb
shlb
ds
cs
mov
add
cmp
jne
xchg
es
fcoms
das
sbb
popf
mov
xchg
cmp
pop
lock
in
pop
nop
mov
jnp
jb
sub
nop
dec
fidivrl
das
popf
push
inc
mov
mov
mov
loope
jg
dec
shrb
popa
sbb
fcmove
add
loop
fidivrs
or
mov
cmp
lods
rcr
push
xchg
push
fisubl
jne
movsb
mov
sbb
mov
mov
stos
jge
out
dec
scas
add
nop
mov
mov
mov
test
mov
sub
sub
mov
cmpsb
pop
sbb
xor
popa
cmp
sbb
adc
insb
sub
jno
in
and
int
cmc
insb
cmp
rolb
xchg
fsub
mov
out
imul
mov
leave
jp
in
popf
repnz
jno
jo
dec
add
adc
movsb
inc
cltd
jns
ss
ret
push
fs
jp
sbb
into
pop
pop
xorb
inc
jb
push
ljmp
std
enter
int
cmpsb
stos
mov
adc
out
aad
ret
lods
addr16
mov
dec
mov
adc
mov
in
loope
push
insb
and
jno
ss
jmp
jno
shrl
adc
movsb
mov
ficoms
fistps
jecxz
insl
repnz
jecxz
loop
xor
das
int3
fidivs
jbe
jbe
das
push
jl
push
cli
insl
add
sbb
stos
xchg
adc
push
ljmp
jge
call
mov
in
ss
adcb
js
push
fisttpll
mov
pop
xor
jge
fwait
cmp
test
shlb
add
stc
dec
push
repz
mov
neg
lret
xchg
dec
addl
xchg
pop
insb
pusha
repz
and
sahf
sbbl
dec
sbb
rclb
jo
push
push
jp
or
jnp
cli
bswap
push
cmc
das
das
xchg
mov
stos
jae
mov
lret
sub
mov
xor
shll
adc
call
fstl
adc
pop
sub
push
pop
pop
aaa
lods
daa
xchg
aas
lret
dec
lea
xor
roll
jp
mov
jno
cmp
fwait
arpl
pushf
mov
sub
arpl
mov
cmpsb
mov
pop
xchg
xchg
jle
out
out
ficompl
test
int3
add
je
cmp
shll
inc
add
rep
shrl
orb
lcall
cli
xor
sub
aas
js
pop
lds
fsubrl
mov
movsb
lods
mov
xchg
xor
xchg
dec
pop
jge
rorb
and
insl
andb
xchg
rcll
mov
mov
arpl
scas
mov
push
dec
jbe
xor
adc
das
ss
shlb
xor
and
shr
lock
cmc
push
stos
rcrl
and
dec
add
dec
rcrb
pushl
movsb
call
jo,pn
xchg
cmp
in
lret
rcrb
iret
push
les
mov
lret
jp
pop
cmpl
arpl
cmp
iret
sub
pop
sbb
push
js
mov
int3
push
adc
popa
or
pop
sub
aas
cmp
scas
or
out
mov
aaa
icebp
ss
push
iret
cmpsb
push
mov
adc
mov
and
stos
addr16
out
gs
push
and
repnz
test
aas
jne
ficomps
icebp
fmuls
ds
adc
cmpsl
mov
icebp
mov
adc
fwait
loopne
jne
addl
pmulhw
lret
in
mov
data16
rorb
test
xor
sahf
addr16
negb
jmp
lods
mov
pop
lds
movb
adc
mov
in
sbb
andb
inc
push
push
sbb
idivl
push
and
and
fimull
push
cmp
and
push
out
mov
leave
jno
and
sub
dec
sbb
jbe
aaa
sub
push
movsl
dec
cmc
sbb
lcall
push
iret
jle
leave
or
test
mov
mov
bound
pop
push
add
xor
mov
cs
gs
sub
ljmp
fcomp
hlt
icebp
stos
sbb
inc
mov
push
mov
push
mov
idivl
or
push
nop
js
lret
and
dec
in
cwtl
and
mov
and
push
ret
test
pop
out
mov
fwait
inc
add
jl
mov
mov
mov
jo
mov
inc
xchg
pushf
mov
sub
das
data16
lock
outsb
dec
loope
jmp
mov
push
mov
lds
inc
lea
dec
push
test
inc
jecxz
fs
and
stos
sbb
out
mov
ljmp
mov
mov
jno
mov
mov
mov
jns
cmpsl
rorb
inc
xchg
scas
dec
jecxz
int
dec
nop
clc
jbe
jge
aaa
add
enter
scas
mov
ss
xchg
jg
xchg
out
out
inc
cld
cmp
sbb
shl
inc
fwait
rorb
dec
mov
cmp
mov
dec
dec
dec
insb
lcall
xchg
out
sbbb
push
mov
push
inc
mov
mov
sub
mov
stos
push
test
pop
or
xor
add
js
mulb
inc
test
sahf
add
and
cmp
fistl
cmp
and
into
popf
jle
inc
imul
mov
sbb
fistpll
aam
movsb
inc
cmp
andb
sub
sub
dec
xlat
adc
cs
mov
hlt
mov
mov
das
push
testb
std
std
cli
jmp
adc
icebp
icebp
adc
push
cmp
inc
cltd
cmc
cmp
stc
pop
int3
pop
sub
sub
jecxz
push
insb
jecxz
pop
popa
cmp
add
pop
adc
rorl
dec
mov
and
bts
stos
xchg
lcall
cmpsl
jmp
push
jo
shll
adc
sbb
xor
adc
and
fists
inc
adc
lds
sub
movl
repnz
mov
pop
bswap
push
push
jmp
inc
sub
mov
fnstsw
inc
mov
pop
rolb
mov
mov
jecxz
fldcw
mov
nop
out
cltd
dec
push
lret
out
push
mov
push
adc
roll
lret
and
inc
xor
es
arpl
data16
push
fisubrs
daa
adc
mov
push
mov
pop
pop
lret
pop
lret
nop
sub
clc
hlt
push
and
xlat
or
psubusw
into
mov
pushf
gs
mov
das
rclb
ljmp
enter
js
dec
insb
pop
jns
xor
leave
subb
insb
jmp
mov
ljmp
outsl
ds
iret
shl
pop
pop
cwtl
sub
jg
sbbl
sbb
sahf
jge
scas
inc
aad
enter
inc
or
aam
aaa
incb
shlw
inc
dec
sub
or
mov
stc
icebp
mov
rcrl
ret
in
sub
cwtl
jns
adc
mov
out
pop
and
push
stos
repnz
xchg
pop
mov
lret
push
xchg
sbb
es
jmp
fucomi
scas
cmp
into
add
xchg
faddl
les
xchg
pop
mov
sub
push
ds
cld
add
pop
mov
pop
xchg
imull
shr
or
shll
repnz
rcll
js
je
fnstcw
mov
int3
and
mov
mov
dec
and
xchg
pushf
add
out
or
test
mov
sub
sub
cmp
dec
rcrl
test
dec
push
or
rol
add
subb
mov
pop
mov
aad
sub
inc
decb
popf
dec
pop
mov
jns
mov
jnp
mov
and
jecxz
rorb
out
pop
sub
inc
jnp
insb
xor
mov
mov
sbb
mov
sbb
popl
xchg
les
and
mov
ljmp
lret
addr16
fwait
pop
mov
push
incl
call
enter
std
jb
jg
add
mov
sbb
xor
xchg
movsb
jne
mov
js
push
jle
sbb
lahf
or
insl
push
cmp
test
es
mov
rcr
mov
mov
shl
dec
or
outsl
push
push
xchg
je
enter
fucomp
push
pop
orb
push
addl
add
es
inc
sub
mov
mov
pop
pop
add
popa
cli
gs
ret
lods
inc
pop
outsl
icebp
push
mov
movsb
pop
in
ja
ss
movsl
sbb
in
lock
bound
add
pop
fcoml
push
mov
lods
pop
xchg
test
sbb
push
sbb
sbb
dec
in
repnz
push
lret
mov
lock
inc
mov
jae
cmc
lods
repz
cmp
sbb
xor
or
sub
and
mov
xor
xchg
andb
outsl
cwtl
adc
add
cmpsb
pop
inc
popa
stc
ljmp
adc
inc
daa
aaa
lds
dec
mov
pop
pop
xchg
sub
xlat
push
push
push
lret
pop
dec
jl
out
fwait
das
lahf
xorl
push
out
lcall
sub
filds
jl
lock
cmpsb
push
add
rolb
shlb
mov
movsl
inc
ret
imul
jp
cmp
inc
cmovne
bound
jno
sub
and
mov
sbb
cmp
js
fcoml
pop
sbb
in
dec
popa
pop
jecxz
lock
xchg
mov
cltd
dec
fs
mov
outsb
test
or
sarl
addl
mov
aam
daa
push
inc
pop
jle
sbb
mov
scas
inc
dec
sbb
xor
pop
movsl
or
hlt
cmc
mov
dec
xchg
movsl
push
xor
lret
repnz
jle
xchg
mov
insb
test
movsb
std
push
add
cmc
push
adc
sbb
cmpl
fdivs
loope
adc
or
mov
jbe
call
je
sbb
jb
mov
jmp
mov
cmp
jge
xor
mov
mov
fldt
dec
pop
mov
in
test
lahf
dec
ja
fstl
inc
popf
and
lret
loop
movsl
test
filds
fs
outsb
cmp
imul
jo
or
cmp
hlt
and
inc
ds
xor
js
sub
mov
add
add
pop
les
xchg
ret
call
fnstsw
ret
lret
mov
lods
adc
add
aad
test
mov
sub
inc
stc
sbb
ljmp
icebp
dec
icebp
into
xor
imul
mov
in
mov
dec
lcall
adc
out
pop
lret
cmp
adc
xor
sub
lret
mov
nop
outsb
lods
cmp
jnp
cs
jp
or
imul
popa
xor
inc
icebp
iret
mov
bound
scas
leave
cmp
inc
dec
or
jns
adc
aam
lret
mov
mov
int
add
inc
cmpsl
test
fadds
in
sahf
cmp
lahf
jl
dec
push
mov
pop
ljmp
fidivs
pusha
push
or
cltd
test
lea
gs
sbb
in
inc
lcall
fsubrl
outsl
in
inc
sbb
push
pop
adc
mov
das
and
pusha
shrl
out
out
xchg
shrl
jnp
clc
pop
das
jno
rol
mov
outsb
adc
or
pop
scas
gs
bound
xchg
int3
mov
xchg
adc
cmp
mov
stc
int3
sub
sbb
sub
stc
ss
jnp
rorb
mov
iret
mov
outsb
cmpsb
cmp
push
aam
neg
xchg
xchg
jno
insl
ja
adc
call
xor
enter
std
adcb
mov
repnz
hlt
cmc
add
sarl
test
sub
jne
xchg
add
loopne
pushf
enter
fldenv
insl
sub
xchg
sbb
mov
stos
xor
sub
cmc
es
ret
das
xchg
cmpsb
dec
jns
sub
pop
lcall
sbb
mov
es
push
sbb
daa
scas
xchg
adc
sub
dec
jnp
mov
call
test
adc
imul
fldt
sub
ret
fstpt
mov
jg
js
shlb
pop
add
mov
fcomps
push
or
xor
mov
cmp
sahf
je
mov
push
call
cs
in
dec
mov
jecxz
mov
out
ficompl
ljmp
push
pop
cmc
data16
jmp
pop
dec
sub
push
aas
or
test
cli
loope
je
cwtl
mov
out
pop
mulb
lock
cmp
leave
push
ds
pusha
mov
cltd
xor
pushf
movl
jle
sahf
es
inc
repz
out
out
mov
xchg
sbb
gs
loope
or
mov
mov
mov
pop
push
in
dec
mov
or
leave
dec
mov
popf
or
inc
pop
repnz
loop
pop
rcl
mov
jl
js
adc
iret
adc
out
out
outsb
adc
frstor
aad
sub
sbb
push
out
les
out
mov
jle
stc
push
shl
bound
mov
pushl
loop
mov
dec
cmpb
sbbb
cld
es
xchg
into
add
pop
jo
pop
ljmp
sahf
aam
and
sti
sbb
mov
les
rol
or
and
popa
sub
fwait
data16
insl
xchg
jecxz
mov
push
push
pushf
lock
ds
mov
sbb
in
sahf
xlat
sbb
inc
and
add
inc
lods
xchg
jmp
jl
aaa
mov
push
loopne
js
pop
lahf
sbb
ficoms
or
in
pop
push
sbb
pop
mov
outsb
mov
popa
arpl
and
repz
xor
jge
add
inc
pusha
dec
hlt
xchg
addr16
cmp
movsb
mov
outsb
fwait
or
inc
std
movsl
aaa
xorb
sbb
in
in
mov
jb
mov
push
mov
push
shl
ffree
jl
lret
jbe
cmp
hlt
sbb
jg
mov
ljmp
sub
lods
jmp
mov
leave
or
mov
fs
sub
mov
mov
pop
pop
mov
cmp
push
sub
hlt
movsl
shll
divb
mov
cli
push
pushf
inc
lods
je
data16
sub
adc
sub
lret
pusha
sbb
fnsave
mov
lds
aaa
mov
mov
lcall
lcall
leave
stc
sbb
fidivrs
push
into
test
jle
push
setl
ja
outsb
sbbb
xchg
adc
test
iret
mov
xor
xchg
data16
xchg
sub
and
mov
sub
inc
mov
outsl
or
popa
pop
test
sahf
push
dec
or
sbb
in
cmp
negb
loopne
adc
testb
dec
ret
imul
xchg
push
or
dec
dec
mov
mov
inc
jmp
add
adc
add
scas
scas
hlt
mov
push
fs
leave
pop
pushf
adc
jg
stos
adc
ficoms
lea
adc
cmp
ss
inc
iret
inc
rol
fdivl
sahf
jbe
lock
mov
jecxz
das
divb
mov
test
sub
jne
xchg
xorl
pushf
push
add
xor
mov
and
addr16
dec
andb
sahf
gs
inc
dec
dec
xchg
cmp
loope
es
fistpl
dec
incl
loop
outsb
out
mov
mov
neg
lahf
ljmp
in
add
sub
std
jp
jmp
mov
rcl
adc
jnp
dec
mov
inc
sbb
push
rolb
jb
dec
outsl
pop
ds
mov
cltd
sti
push
add
mov
mov
dec
add
push
clc
hlt
adc
dec
push
jbe
fincstp
pop
fstl
test
jl
pop
shl
mov
jns
imulb
popf
jo
ret
int
mov
xchg
inc
bnd
mov
adc
fldenv
lret
enter
mov
xchg
dec
jmp
xchg
out
pushf
in
mov
fsubs
pop
pusha
call
in
aaa
xchg
jns
mov
ja
mov
imul
push
inc
push
mov
pop
dec
adc
mov
cmp
sbb
push
dec
sub
aam
mov
push
popf
out
jecxz
scas
pop
xlat
cmc
add
add
int3
jae
fdivs
leave
jmp
jae
mov
pop
jnp
xchg
lahf
gs
or
cmp
jb
ret
push
xor
jg
mov
roll
dec
stos
xchg
imul
inc
cs
cmp
sub
sbb
xor
cmp
dec
cld
add
or
sub
notb
repz
mov
js
adc
out
adc
sub
or
xchg
nop
clc
mov
cmp
and
mov
dec
stos
fcomps
sub
jbe
enter
sub
lea
inc
xor
pop
jne
aas
insl
mov
ret
insl
test
inc
mov
bnd
xchg
lret
mov
mov
adc
popf
mov
in
loopne
mov
ret
dec
and
mov
cli
outsb
adc
cmpsb
inc
jae
push
cmp
in
mov
pop
sub
fs
loope
xchg
adc
xchg
inc
negl
xchg
insl
fisttpll
gs
add
inc
in
loopne
data16
aaa
mov
inc
pop
in
leave
andl
sub
into
and
jae
sbbb
adc
sub
pop
pop
xadd
adc
addr16
movswl
insb
addb
dec
aam
out
jae
aam
outsb
mov
xor
inc
adc
pop
adc
fwait
lods
mov
sub
adc
dec
sti
jmp
adc
jmp
mov
inc
mov
add
lea
and
and
out
pop
push
and
add
repnz
in
jbe
outsl
mov
push
inc
xchg
fisubl
sti
dec
test
test
daa
test
and
lcall
hlt
ds
pusha
fnsave
js
dec
lods
int3
jns
cmpsl
negl
fiadds
xchg
aas
xchg
adc
mov
rolb
mov
fisubs
push
cmp
mov
inc
cmpb
arpl
push
insl
adc
xlat
and
push
sub
test
cs
scas
inc
in
xchg
dec
in
cwtl
mov
pusha
iret
scas
dec
push
leave
push
xchg
dec
dec
jge
inc
js
jmp
repnz
xchg
mov
lret
push
pop
fucomp
mov
sub
test
bound
movsb
cmc
ds
aad
xor
in
lret
add
mov
popf
dec
sbb
push
cld
stos
push
ss
pushf
dec
cmp
les
mull
sbb
insb
iret
cmp
loopne
or
and
cmp
in
lahf
not
sub
scas
mov
lahf
pop
outsl
lds
leave
dec
ret
jo
push
sub
imul
xor
bound
shlb
sbb
in
pop
into
push
mov
in
icebp
sub
sub
mov
sub
lret
lcall
and
xor
xor
mov
ja
aam
mov
cli
or
pop
adcb
loope
push
mov
jmp
or
jmp
or
lahf
repnz
jo
mov
fwait
sti
scas
setno
shlb
and
push
lret
ja
and
add
add
imul
pop
add
js
xchg
mov
dec
movsl
fcompl
in
into
inc
hlt
push
repnz
cmc
faddl
mov
shll
dec
pushf
sbb
jp
ret
or
jg
jbe
ret
cmpsb
dec
lcall
imul
and
mov
popf
mov
jmp
jbe
ss
sti
aaa
stos
inc
inc
jnp
movsb
add
mov
cmpsb
add
rorb
mov
pop
and
sbb
pusha
xor
mov
fimull
xlat
pusha
fsubl
test
xor
incb
aas
mov
mov
int
insl
fcoml
ret
fildl
dec
or
cmp
fsubl
lods
jo
dec
or
pop
int
in
fistpll
xor
cmp
inc
sti
stos
loope
push
out
scas
mov
fstl
pop
rcll
bound
outsl
and
mov
lods
add
dec
dec
loope
cmpsb
mov
sbb
incl
mov
sbbl
hlt
out
mov
insl
and
iret
jp
jmp
jne
pop
xchg
movb
mov
mov
mov
inc
jge
sub
in
imul
xchg
subb
inc
mov
pcmpeqb
cld
pop
loopne
mov
mov
sub
or
push
shlb
enter
pusha
sbb
add
lret
adc
add
cltd
inc
movsl
popf
mov
cmp
sbb
or
out
jge
jecxz
enter
loope
sub
jo
int3
int
push
arpl
xorl
add
inc
mov
pop
jmp
adc
test
and
scas
push
dec
fbstp
add
xor
adc
mov
xor
loop
in
mov
rolb
pop
ret
test
and
jb
sbb
inc
xchg
lret
mov
mov
jecxz
popa
aaa
add
lds
pop
repz
call
xor
xor
pushf
gs
sub
inc
cmc
sbb
xchg
daa
push
cmp
dec
jae
data16
push
inc
jo
jp
ffree
mov
mov
and
sbb
lds
imull
dec
stos
hlt
adc
pop
arpl
pop
mov
in
mov
xchg
push
movsl
outsl
mov
out
dec
movsb
pop
aad
cli
adc
mov
jg
int
push
xchg
or
push
xor
fwait
cmp
fimull
std
pop
enter
and
mov
xor
test
inc
jp
lods
leave
pusha
jne
das
xor
adc
enter
dec
xchg
outsb
add
xlat
repz
or
lcall
or
lods
daa
insb
mov
pop
loop
jmp
sub
pop
adc
pop
int3
inc
stos
mov
je
push
cltd
push
lret
lcall
xchg
adc
int
jmp
loopne
jae
nop
dec
cs
ljmp
sbb
les
dec
pop
inc
into
xchg
mov
pop
push
loop
jg
lock
fwait
jno
cmp
fstl
or
fcompl
sbb
mov
pop
add
popf
mov
test
adc
mov
rcl
xchg
test
in
jle
hlt
loopne
push
xchg
jo
hlt
lds
jg
cmpsl
test
xchg
arpl
ficompl
iret
sbb
cmp
jmp
add
cmp
cmp
sbb
mov
test
jo
lret
sub
mov
jns
xor
loopne
inc
vunpcklps
std
mov
fistpl
mov
sarl
xchg
in
inc
or
mov
aad
lock
cmp
cltd
movsl
mov
cmpsb
adc
adc
stos
fdivs
pop
or
xlat
pop
cli
fistpl
cltd
pop
mov
out
dec
int
jnp
lcall
inc
or
and
inc
adc
mov
icebp
inc
inc
push
mov
dec
movsl
repnz
lahf
xor
and
iret
vhaddpd
xchg
pushf
aaa
rol
sbb
xchg
cmp
add
popf
pop
push
jmp
mov
and
aaa
pop
hlt
adc
xchg
inc
lret
pusha
cmp
lods
outsl
jbe
fdivl
icebp
push
sbb
jb
lret
add
in
or
xor
xchg
xchg
mov
add
and
or
mov
push
and
cs
fsts
xchg
mov
and
fldl
sub
mov
push
test
mov
mov
sbb
orb
or
aas
cmpb
dec
scas
loopne
lcall
inc
jb
jmp
imul
iret
inc
jl
int
mov
out
pop
xor
js
mov
xor
fadds
cmp
add
jo
mov
cmp
sbb
loopne
jge
push
inc
cmpsl
shrb
sbb
xor
dec
xor
inc
dec
fs
roll
mov
stos
fsave
pop
iret
pusha
scas
popf
jne
xor
mov
clc
jl
dec
enter
das
dec
fiaddl
scas
jg
pushf
fs
xor
and
sub
xchg
sbb
stos
jge
push
add
cmc
iret
js
es
lds
dec
add
in
sbb
loope
dec
nop
push
pop
and
iret
ret
inc
in
imul
adc
push
or
movsb
in
lock
cmp
push
xchg
cmpsb
add
cld
loope
ficomps
xchg
sub
icebp
adc
inc
bound
mov
cmpsb
sub
aam
lretw
and
lcall
push
add
das
rolb
aad
inc
jb
cmp
cmp
add
stos
push
decl
inc
ja
cmp
add
push
loop
gs
dec
aam
dec
xchg
fdecstp
cwtl
mov
addr16
push
jae
add
dec
insl
popa
jge
push
or
and
data16
lret
or
cmp
loop
mov
xorb
jg
sub
dec
scas
pop
mov
sahf
add
ljmp
sahf
mov
adc
dec
int3
and
int3
jl
or
test
xchg
xchg
push
filds
cld
inc
rcrb
bound
int3
adc
xor
and
outsl
sbb
sbb
in
push
add
and
xor
cmpsl
bound
cmpsb
add
push
push
jecxz
mov
pop
enter
mov
mov
pushf
icebp
and
pop
xchg
sbb
cmpsb
lahf
loopne
subb
cld
test
xor
or
nop
push
and
icebp
sbb
mov
aaa
imul
adc
xchg
and
sarl
scas
dec
add
fnstcw
lods
sub
out
lds
inc
xchg
add
test
cmpsl
imull
stos
sbb
aas
push
sub
inc
jno
push
jbe
pop
das
pop
ds
aas
xchg
int3
outsl
mov
mov
sub
stos
mov
mov
inc
daa
cvtpi2ps
ds
or
popa
insb
xor
mov
pop
in
lods
insl
jo
cmp
test
out
mov
mov
adc
mov
cwtl
movsl
andb
adc
js
or
fwait
int3
and
push
mov
adc
cmp
cmp
ret
mov
int
sbb
fldl
sti
fdivs
inc
mov
xorb
sti
aas
das
fdiv
std
fistpl
and
cmp
hlt
test
push
add
jb
fcmovnbe
inc
xchg
ret
and
xchg
mov
addl
and
push
cld
push
xor
repz
test
jo
inc
push
push
test
add
addb
repz
shlb
and
outsb
dec
fwait
out
lret
scas
mov
adc
outsb
xor
js
cs
stos
adc
shl
pop
pop
mov
cld
sti
mov
popa
mov
or
cmpsl
test
daa
dec
cmc
in
rolb
or
stos
cmpsl
testl
add
xchg
or
ljmp
ret
sarb
cwtl
mov
js
lcall
lods
pop
mov
add
pop
mov
xor
add
mov
fildl
push
dec
add
inc
add
and
fmuls
icebp
cmc
popf
pop
push
loopne
enter
pop
and
mov
xchg
dec
cmpsl
or
addr16
and
popf
xor
xlat
fwait
or
ja
test
push
lret
xchg
mov
mov
test
mov
and
dec
ror
adc
stc
jg
xchg
hlt
push
loop
daa
adc
push
cmp
mov
js
pop
adc
insb
stc
aaa
jns
push
pxor
gs
sbb
cmc
xchg
and
inc
js
xor
or
jnp
test
jbe
push
stc
jnp
and
imul
stc
ljmp
mov
stos
cmpsb
loop
jl
mov
lds
dec
int
sbb
add
cmp
dec
sub
or
jl
mov
jbe
mov
lea
or
jp
imul
push
fisttpll
mov
lret
jnp
mov
adc
call
scas
and
bound
jg
cmp
js
inc
xchg
push
scas
cwtl
xchg
mov
and
icebp
mov
cmpsb
movsl
rcrl
fwait
jns
adc
jmp
insl
ret
test
test
enter
rorl
xor
add
imul
fiadds
dec
aad
cltd
or
movsb
cltd
test
sbb
into
jmp
out
cli
pop
jg
dec
push
test
dec
out
pop
mov
cmc
jo
ss
lahf
xor
or
and
aad
pop
sub
sbb
or
aam
mov
insl
gs
outsb
lods
mov
xchg
test
sbb
cmp
pop
mov
jmp
in
lods
push
orl
iret
pop
scas
mov
adc
push
out
in
adc
inc
cs
jge
inc
jg
fisttps
movsl
into
mov
dec
dec
sbb
fdivl
jns
cmpsb
xchg
lret
jne
mov
xor
mov
mov
in
or
mov
jg
sbb
data16
sbb
repnz
xchg
or
out
pop
push
or
mov
cmpsl
popa
mov
push
mov
pop
sub
cmpsl
scas
notb
stos
cmp
adc
or
sbb
or
loopne
mov
adc
repnz
xchg
int
push
cmc
cmp
sub
xorb
sub
call
daa
cmp
aas
adc
cmp
lahf
sbb
out
pusha
push
pop
testb
into
sbb
push
add
xchg
je
pop
ss
stc
repz
addl
adc
mov
mov
out
adc
jp
and
enter
jns
and
pusha
into
mov
push
out
sbb
popf
sbbb
fdivrl
je
cmpsl
or
mov
sarl
scas
and
push
je
jle
jno
sbb
ja
pusha
xchg
pop
fldl
lea
aad
ret
outsl
and
int
jo
push
jl
adc
mov
pop
pop
cli
cld
pushf
mov
mov
and
repz
xor
stos
xchg
stc
inc
mov
data16
insb
stc
movsl
int3
scas
cli
and
xchg
xchg
mov
mov
mov
push
js
and
adcb
cmp
movsb
dec
adc
jb
call
cld
repz
repz
adc
push
fdivrp
push
cmp
loopne
xchg
inc
or
loop
in
fdivrl
jne
leave
hlt
idivl
repnz
xor
ja
xor
jge
es
and
sarb
xchg
into
sbb
and
mov
xorl
mov
mov
mov
addl
ss
jp
adc
jns
push
push
and
mov
cs
loope
sub
adc
repnz
push
dec
mov
or
sbb
adc
pop
lea
mov
xor
push
push
repnz
insl
push
dec
inc
scas
cltd
jne
stos
outsl
pushf
mov
add
ja
out
ljmp
ds
xor
ja
sbbb
int
iret
pop
cmp
fistpll
add
bound
int3
mov
mov
addr16
dec
push
cmp
push
mov
xor
in
fwait
inc
jne
jmp
dec
decl
jno
jo
js
out
dec
xchg
push
adc
jg
inc
push
int3
jmp
mov
xor
sub
scas
jecxz
lods
sub
int3
jg
pusha
add
jno
in
pop
cmc
or
test
xchg
in
lock
int3
xchg
pop
xor
push
mov
out
cmpsb
or
sahf
lret
dec
popa
loop
mov
aad
xorl
smsw
dec
daa
fprem
cmp
movsb
mov
sti
fnstenv
sbb
cmp
lret
and
xor
out
addl
mov
sbb
test
mov
shlb
inc
cltd
sbb
push
gs
shr
rep
mov
stos
icebp
outsb
imul
sub
inc
test
enter
cld
stos
scas
shlb
inc
stos
pop
inc
inc
xchg
jge
in
mov
dec
ror
mov
test
inc
inc
imulb
mov
or
cmpsb
mov
out
xchg
jmp
repz
scas
sbb
adc
sbb
clc
stos
fisubl
lret
mov
jp
les
jbe
lret
pushf
add
loopne
mov
mov
stc
aas
cmp
stc
push
popw
test
in
mov
aaa
into
jnp
lock
cmp
out
or
dec
jo
xlat
cmpsb
test
scas
push
lret
jbe
push
jnp
mov
xlat
mov
inc
push
int3
clc
out
cld
and
mov
out
mov
xchg
inc
andl
js
pusha
jge
sbb
dec
jle
rcrl
jecxz
addl
xchg
jmp
cli
sbbb
add
inc
cmp
gs
adc
std
daa
xchg
stc
jl
push
push
jg
pop
sbb
xchg
icebp
lret
jl
xchg
adc
or
inc
data16
xchg
dec
cmpsb
cmp
shlb
lods
aas
arpl
push
mov
mov
push
test
repnz
sarl
inc
pinsrw
mov
outsl
xlat
push
test
pop
or
repnz
sbb
js
pop
mov
jle
jns
xchg
jbe
arpl
push
cs
mov
add
loopne
push
ret
xchg
insl
sbb
inc
sub
inc
cmp
dec
mov
inc
cmp
ja
inc
mov
sar
jns
jmp
mov
mov
jecxz
fcomp
outsb
out
cmp
mov
inc
pop
push
and
cmp
iret
stc
push
mov
pop
add
push
push
stos
divl
scas
out
lods
dec
mov
in
rcl
popa
mov
mov
cmc
in
leave
mov
fs
test
sbb
push
das
push
fisttps
pop
notb
jmp
jae
xor
loop
insl
dec
pop
mov
pop
pop
les
lret
std
push
aas
fdecstp
lret
xchg
add
jl
pop
push
inc
dec
push
mov
scas
or
and
and
sub
mov
cmc
cmc
cli
mov
in
inc
jbe
fwait
fs
inc
add
jp
sti
xor
out
push
rcr
push
in
add
or
movb
scas
xchg
shll
xchg
test
push
push
adc
es
mov
pop
ljmp
mov
repnz
jmp
add
cli
outsb
add
push
leave
jle
jae
jp
fs
test
inc
fs
lds
pusha
cmp
or
lahf
add
into
cld
into
aaa
add
lret
jle
inc
cmpsl
loop
insb
mov
sub
das
push
xchg
inc
aad
sbb
imulb
or
or
verw
adc
in
bound
jmp
adc
sti
mov
jge
imul
fidivrl
jb
add
mov
mov
adc
jno
orb
test
pop
mov
add
xchg
cmp
push
fwait
aas
ror
pop
std
pop
jo
in
pop
lcall
outsb
adc
scas
cmpsl
jae
cwtl
push
and
dec
ljmp
out
cmp
cmp
cld
mov
test
repz
test
mov
pop
sbb
scas
pop
push
arpl
xor
dec
mov
pop
out
adc
repz
fcmovnu
push
push
out
xchg
js
mov
jmp
pop
ss
sbb
lret
inc
mov
stos
xorb
into
cmp
mov
cmp
loopne
ds
pusha
xchg
cmp
mov
neg
cmp
or
xchg
scas
mov
andb
mov
enter
enter
test
cld
shrb
pusha
add
aad
lahf
cmp
xchg
push
dec
jno
jge
pop
jns
sbb
mov
pop
dec
fs
mov
sbb
cmpsb
imul
and
adc
mov
mov
frstor
pop
hlt
add
or
or
fsubrl
dec
push
fs
xlat
stc
lret
je
negl
sub
ds
cmpb
cld
mov
xor
loopne
adc
cli
push
lods
stos
hlt
mov
mov
xchg
push
lcall
sub
push
stos
cltd
sub
dec
pop
push
imul
popf
sbbl
xchg
adc
insb
adc
lock
je
cmp
nop
das
gs
adc
movsb
jge
mov
jle
or
push
or
jge
es
push
pop
lds
xor
jnp
out
xor
js
movsb
es
shr
push
xlat
pop
sbb
add
dec
or
lret
int
inc
fldcw
into
insb
imul
imul
push
cld
sub
and
mov
sub
sub
idivb
sbb
ss
pop
sub
or
out
jo
xchg
jecxz
xor
cmp
jge
sub
push
inc
subb
fstps
lods
rcrb
loope
cs
clc
add
ja
mov
mov
stc
shll
cmpsb
shl
outsb
stos
and
sub
inc
jmp
cwtl
inc
in
cs
cmp
and
xchg
aad
and
ret
aam
sbb
inc
stos
push
xchg
ficoms
addr16
int3
jnp
jno
jl
rcll
je
mov
popf
dec
orb
aam
stc
mov
stos
mov
jns
fadds
mov
fcomps
ret
jns
jnp
test
pop
pop
ja
push
or
mov
lret
ret
jmp
shrb
cli
dec
je
mov
pusha
pop
push
addb
adc
aaa
push
hlt
push
push
xor
dec
leave
sti
lea
loop
xor
xor
add
mov
mov
and
adc
pop
and
cmp
jle
je
cmovge
cltd
adc
lret
add
out
lods
mov
daa
shll
dec
cli
mov
test
mov
mov
cmc
ret
push
push
cmpsb
xor
enter
pusha
adc
sub
filds
mov
sbb
repz
add
int3
in
pop
mov
lods
inc
pop
and
cltd
inc
xchg
out
int
rol
xor
push
and
cmp
into
add
in
in
pop
dec
adc
hlt
or
addr16
jns
pushf
cmpsb
aas
pop
outsl
or
push
leave
mov
adc
jmp
push
xor
add
cmp
movsl
movl
cmp
dec
jns
aad
aad
std
or
and
cmp
fpatan
add
and
fdiv
sbbb
lods
shlb
mov
xchg
mov
jmp
enter
adc
frstor
insl
ret
sbb
addr16
jmp
xor
cld
icebp
iret
repz
mov
ds
sbb
and
shll
dec
std
ljmp
pop
pusha
inc
pusha
xchg
xlat
mov
jne
test
and
sub
outsl
add
inc
jns
fimull
test
xchg
sub
mov
and
lcall
add
pop
sub
in
movsl
cmpsl
xchg
pop
cld
icebp
stos
adc
mov
cmp
enter
pop
mov
pop
fisubl
js
cld
movsb
leave
mov
fldenv
rorl
lods
push
stos
xor
das
sub
mov
add
adc
int3
dec
pop
roll
in
add
push
jl
icebp
popf
fsubrs
sub
lods
psubq
push
repz
out
adc
stc
mov
je
cmpsl
sub
inc
notl
je
cmp
push
lea
ficompl
test
fs
insb
loop
aad
mov
xchg
mov
mov
jns
sahf
enter
xchg
mov
scas
jecxz
jno
push
aam
pop
lods
jno
or
or
popf
adc
pop
xor
sub
clc
into
test
cmpsb
repnz
enter
and
sbb
jno
cwtl
cmpsb
sar
fimuls
into
inc
stos
int
dec
dec
cltd
clc
popa
shrl
sub
add
push
push
push
stos
jge
fidivrs
push
cmpsl
into
jecxz
mov
inc
sub
mov
lcall
lods
push
insl
xchg
fistl
out
jmp
or
dec
pop
pop
cmp
out
and
in
inc
das
call
xchg
and
push
sbb
pushf
pop
jle
stc
fadds
cld
and
call
inc
xor
mov
data16
jb
xor
mov
mov
cmpsb
xor
sub
push
adc
sub
pop
faddp
into
jecxz
xchg
outsl
js
lods
cmp
inc
adc
and
repnz
sub
shrb
roll
cwtl
fistl
subb
jge
sti
repnz
add
into
enter
mov
testl
or
sub
cmp
sub
cmpsb
sbb
sub
jbe
xchg
out
das
adc
sbb
jns
cltd
jge
sbb
and
xor
jns
stos
cltd
mov
mov
sbb
int
sbb
sub
ss
pop
add
sub
pusha
and
cwtl
movsl
xor
cmp
repnz
clc
sti
out
sbb
add
xor
push
shll
lea
and
add
mov
xor
xchg
popa
leave
xor
pop
lea
scas
pop
movsl
adc
adc
mov
sbb
mov
fs
es
insl
sbb
jle
aam
test
jg
popf
dec
test
dec
shrb
add
inc
jae
and
lret
gs
lds
or
lcall
pop
or
in
xchg
add
cld
inc
pop
punpcklwd
call
les
cmc
pop
mov
jnp
xor
push
in
add
push
mov
js
ror
jne
adc
andl
push
mov
imul
inc
or
cmc
je
stos
cmp
int3
push
adc
popf
ret
movl
test
adc
sahf
cmp
mov
xchg
sub
hlt
movsl
and
adc
sbb
push
push
mov
in
dec
cmp
incb
jp
add
les
int
fimuls
imul
push
push
sub
cs
aad
adc
ds
mov
adcb
jns
sti
pop
insl
adc
pop
cmp
mov
shrl
mov
incl
mov
leave
xor
mov
jg
cmovle
inc
mov
pop
pop
sbb
and
or
pop
mov
mov
xor
les
xchg
aaa
add
pusha
xor
push
or
std
add
mov
pop
and
mov
fucomp
mov
mov
cli
lods
xchg
scas
jns
fwait
pop
lods
sysenter
jge
nop
pop
push
inc
mov
adc
or
mov
out
jns
jo
mov
push
and
inc
movsb
imul
mov
or
push
or
data16
lds
sub
add
dec
cmpsb
insb
orl
js
sub
ja
add
inc
outsl
shll
call
iret
out
add
push
dec
xchg
jge
sbb
jp
fstps
cltd
xchg
cmp
ror
push
jg
ds
cld
addr16
fwait
js
mov
push
sbb
dec
or
sbb
push
add
xor
inc
or
shl
pop
jecxz
pop
sub
lock
lcall
jl
adc
ljmp
sti
pop
fs
pop
cwtl
lcall
leave
and
repnz
fs
dec
loope
mov
into
fwait
lcall
dec
out
jbe
loopne
jge
or
pop
add
push
jne
ds
es
cmp
ds
jnp
in
pop
imul
scas
mov
jge
aam
test
imul
pop
cli
sub
dec
mov
push
imul
lret
arpl
add
add
sbb
add
scas
jp
or
jl
xchg
jecxz
xor
inc
add
mov
cmpsb
mov
xlat
jbe
jne
lcall
repnz
imul
cmp
repz
insb
orl
inc
pop
mov
fucomip
ljmp
imul
dec
sti
jecxz
sar
ljmp
and
mov
xchg
pop
push
sub
in
dec
xchg
faddl
cmp
cmc
xchg
inc
mov
inc
pop
stos
scas
sub
mov
cld
dec
in
movsl
xchg
dec
rorb
das
mov
mov
pop
inc
lret
or
imul
cmp
es
sub
jge
ljmp
mov
push
cltd
pop
push
int
cmp
ss
sahf
imul
cmpsl
mov
pop
bound
pop
add
pop
and
outsl
pop
sbbl
loope
sbbb
lcall
sahf
dec
adc
and
pop
test
sbb
hlt
xorl
scas
adc
clc
ftst
js
out
je
std
pop
inc
fnstenv
sub
pop
orl
shl
outsb
scas
movsl
mov
mov
mov
addb
call
aaa
sub
adc
sbb
dec
jmp
mov
out
aaa
jl
adc
dec
push
dec
testl
repz
mov
push
mov
add
cmp
inc
aam
push
dec
and
clc
inc
xlat
les
lea
sub
sub
arpl
cmp
mov
mov
movl
cli
imul
shlb
repnz
in
mov
lret
xor
repz
cmpl
fisubl
sub
lahf
jle
insb
cmpsb
out
ret
int3
cmp
adc
mov
pusha
jge
imul
sub
push
and
std
in
fldenv
jmp
inc
ret
in
inc
enter
in
lahf
sub
cmp
lea
fwait
lods
sub
mov
adc
fstl
sub
jbe
dec
fstpt
je
push
pop
and
shrb
mov
push
jb
int3
lock
mov
out
iret
iret
aaa
repz
dec
or
dec
pop
dec
nop
mov
pop
out
lret
sti
cs
and
repnz
mov
aas
mov
inc
pusha
pop
ss
ret
pop
jmp
mov
out
push
jecxz
add
and
shr
sub
loop
adc
insb
jg
push
push
sub
mov
jl
mov
or
mov
sbb
or
test
pop
mov
inc
push
mov
jmp
or
in
mov
dec
adc
in
xchg
in
dec
mov
or
dec
adc
and
mov
in
jmp
inc
push
adc
out
add
push
mov
test
outsb
push
push
xchg
jge
xchg
arpl
add
or
jo
cmc
add
fnstsw
scas
mov
ljmp
jns
cmp
mov
int3
dec
hlt
or
add
and
xor
jg
dec
cs
mov
push
jmp
mov
rorl
adc
std
xchg
leave
out
int3
je
dec
xchg
nop
sahf
xchg
sbb
fucom
add
and
jecxz
stos
cli
sti
inc
cmpb
popa
or
mov
sub
dec
call
aad
jg
je
fs
ds
pop
mov
daa
in
or
sub
repnz
mov
mov
jne
movsb
cmp
push
and
out
je
ret
cs
sbb
xor
pop
andb
mov
xchg
lret
movsb
inc
scas
clc
clc
xchg
jae,pn
arpl
jo
push
mov
pusha
nop
mov
sbb
out
add
ds
mov
pop
sbb
dec
enter
mov
imul
jg
mov
test
imul
jno
aaa
hlt
xor
cmp
call
bound
push
test
mov
call
inc
lock
sbb
lds
jmp
adc
dec
js
data16
jae
clc
repnz
fisttpll
fs
push
hlt
xor
or
xor
in
xchg
xlat
push
rorb
push
mov
rol
or
xchg
sti
jp
fisttpll
jl
xchg
or
jae
mov
sarb
inc
xchg
in
sub
jecxz
jl
fisttpl
in
roll
mov
and
mov
pop
push
ss
adc
sbb
sub
pop
or
cmpb
add
or
repnz
xchg
lahf
xchg
inc
mov
xor
mov
fs
fmull
dec
add
sbb
xchg
cmc
daa
loop
dec
into
push
int
int
lcall
sahf
in
dec
fsub
sbb
push
cmpsl
and
sbb
jbe
jl
leave
outsb
outsb
xchg
pop
ds
movsl
mov
dec
pop
xchg
push
sub
push
mov
cmpsl
cmp
test
and
out
mov
push
mov
or
daa
pop
ret
cmp
lahf
pop
cli
mov
dec
dec
in
xor
cltd
repnz
mov
lods
hlt
mov
mov
push
call
xor
lahf
xor
jo
or
mov
pop
repz
inc
in
int3
cmp
aas
xchg
in
pop
and
ret
outsb
mov
sbb
andb
cmpsl
ret
adc
daa
cmp
hlt
mov
push
adc
loop
mov
or
orl
push
in
mov
aaa
je
test
fwait
and
and
mov
sbb
adc
push
pop
mov
mov
shrb
pop
movsl
xor
xor
cmp
pop
sti
clc
ljmp
pusha
idivl
or
imul
std
mov
mov
stos
mov
ret
int3
cwtl
xor
xchg
imul
adc
mov
sar
inc
push
mov
push
les
mov
insl
pop
xor
fcoml
sbb
mov
push
mov
pop
push
push
sbb
adc
cltd
mov
xchg
add
sub
arpl
lahf
and
enter
sbb
outsl
mov
sbb
sarl
adc
outsb
push
cmp
mov
and
ljmp
mov
addr16
test
cmpsl
stos
aam
adc
pop
sahf
jl
cmpsl
adc
loope
sbb
fists
xor
xor
dec
gs
sub
mov
shrb
out
sbb
cmp
pop
in
inc
add
xchg
mov
ds
in
aas
aad
and
mov
xchg
or
fsubrp
xor
mov
insb
sub
cli
mov
leave
xchg
aad
dec
cmp
add
cmp
mov
or
mulb
and
xchg
leave
xor
xchg
cld
int
outsb
inc
add
mov
add
mov
les
inc
lods
and
jns
scas
adc
aas
inc
mov
cmpsb
push
pop
mov
or
sti
mov
insb
sbb
mov
bound
daa
nop
xor
mov
out
test
sbb
je
xchg
iret
stos
mov
mov
sub
in
xchg
mov
sarb
sbb
sbb
cmp
mov
pop
lahf
lahf
lds
dec
test
mov
mov
rcr
mov
xor
loopne
sbb
stc
or
mov
mov
jecxz
pushl
add
inc
cmp
inc
clc
adc
jge
inc
mov
add
push
pop
pop
adc
cmp
test
pushf
cmp
mov
mov
xchg
mov
int
mov
leave
orb
jl
and
xlat
xlat
mov
cwtl
dec
mov
mov
subl
dec
imul
ja
xchg
inc
add
pop
in
xchg
xor
aaa
lds
cmpsb
add
jno
flds
shlb
cmp
or
mov
sbb
testb
cmp
fs
pop
mov
stos
das
add
movsl
add
add
pop
sub
test
mov
aas
jno
popf
jg
xlat
inc
addr16
sbb
adc
outsl
sub
mov
mov
mov
std
lods
fs
scas
in
and
int
jbe
mov
in
mov
push
inc
dec
shrl
pop
fnstsw
jge
sti
mov
jne
aas
ja
xchg
roll
ja
test
xchg
sbbl
sahf
scas
cmpsl
test
fsubl
xlat
jo
sub
jl
mov
mov
inc
push
lret
xor
loop
in
shrb
xchg
fwait
lds
in
dec
xor
add
repz
mov
shlb
add
cmp
add
sub
jns
cmp
andb
adc
cmp
pop
bound
add
jb
lods
xchg
sbb
adcb
stos
lds
lods
add
push
mov
pop
lahf
push
gs
out
sarl
mov
push
test
pushf
enter
xchg
xchg
lea
cmc
scas
in
call
sbbl
push
xchg
cld
pop
inc
fcmovnbe
xchg
scas
icebp
pop
fbstp
push
pop
jg
sbb
mov
ljmp
add
das
xchg
cmp
insb
dec
sarb
xorb
mov
cmp
push
mov
bound
decl
mov
push
sub
push
lcall
cs
dec
js
imul
inc
and
pop
cmp
lret
mov
sub
xor
jmp
dec
pop
push
fisubrs
push
mov
in
inc
adc
addb
jl
sub
cmp
fildll
sbb
push
mov
add
std
or
and
sarl
dec
cmpsl
rol
pop
xor
rcrb
std
xor
data16
mov
dec
sub
dec
jns
leave
pop
fs
in
call
nop
mov
dec
dec
sbb
inc
pop
scas
pop
sbb
pop
inc
call
xchg
pusha
das
pop
addr16
inc
fwait
mov
scas
nop
mov
out
pop
push
inc
pop
sbb
push
lcall
ret
cwtl
mov
and
adc
in
ret
out
out
cmp
xlat
mov
lods
xor
or
push
adc
pop
and
jle
xor
xchg
arpl
mov
lea
mov
outsb
sarl
push
xchg
mov
popa
push
lock
push
gs
aam
mov
adc
imul
pop
cld
stos
scas
arpl
dec
mov
push
sub
dec
in
mov
and
test
inc
inc
cli
test
mov
lret
ds
or
xchg
add
and
and
cmp
int3
mov
push
out
popf
or
cmp
jae
imulb
shll
sub
jle
bound
or
sbb
jno
xchg
cmp
test
ficompl
into
movsl
nop
call
shlb
cwtl
mov
adc
push
xor
mov
das
push
in
add
jne
mov
rclb
adc
fisttpll
mov
or
lcall
mov
dec
jmp
test
and
js
lds
lods
mov
aam
movsb
cmpsb
mov
adc
mov
aad
popa
and
lds
outsb
push
jle
push
out
fcomps
lret
add
jno
sub
in
jae
sbb
cmp
pop
xorb
or
lret
push
in
or
decb
pop
call
add
bound
xlat
sub
je
jae
push
jb
pop
pop
mov
or
xor
jns
repnz
lcall
adc
xor
adc
inc
inc
mov
dec
ret
sbb
jns
ret
movb
iret
sub
aad
test
pusha
jle
add
pusha
inc
cmp
iret
push
jno
mov
cld
sub
mov
adc
jmp
rcll
aam
rclb
mov
int3
push
aas
nop
pop
jge
xchg
icebp
sbb
xchg
xchg
js
mov
aam
shlb
out
in
in
sbb
cmpsb
and
leave
jno
nop
and
ret
jge
cmp
adc
shr
vshufps
xor
mov
adc
lahf
jb
loop
jns
jno
ror
mov
mov
nop
mov
inc
imul
imul
pop
lcall
mov
cmp
add
lret
dec
cmp
in
ljmp
sbbl
jno
js
in
mov
xor
das
into
pushf
add
xor
sbb
xchg
jo
nop
cmp
xor
stos
lds
and
sbb
ret
sub
xchg
ds
mov
shll
es
cwtl
je
cmp
xchg
and
lret
cs
sbb
dec
xchg
mov
dec
jae
dec
jns
rorl
push
or
fists
xchg
mov
adc
or
pop
mov
rcll
lcall
push
mov
push
mov
cli
push
repz
out
inc
xor
imul
fs
and
inc
xchg
inc
cltd
fs
arpl
pop
add
fs
xchg
and
sarb
add
and
add
test
daa
aas
sbb
pop
iret
push
sbb
aam
fists
pop
aad
mov
mov
xor
dec
in
imul
lods
rclb
jno
xchg
pop
pop
sbb
popf
mov
add
fists
in
dec
jge
jge
idivb
dec
test
hlt
dec
shlb
outsb
imul
and
shll
mov
fmul
cmp
or
add
filds
roll
iret
push
icebp
movsl
push
mov
mov
add
outsl
and
sub
xchg
jecxz
pop
dec
jae
loopne
pop
jb
mov
add
mov
outsb
insl
pop
xchg
push
dec
push
jp
cmc
ss
testl
and
fldl
test
push
push
das
push
xorb
lret
loope
push
jno
fcomps
arpl
jns
mov
filds
popf
xor
jns
lahf
idiv
fcmovne
lcall
push
mov
in
fidivs
arpl
dec
rolb
sub
lds
fwait
or
jnp
and
push
jns
jne
daa
xchg
mov
mov
or
pop
repnz
jns
mov
aas
repnz
mov
daa
sbb
loope
out
fistpll
test
cmp
repz
aaa
xchg
add
imul
add
lods
add
out
mov
jbe
jb
sbb
movsb
inc
jp
fdivrl
jge
test
push
cmp
mov
sub
dec
addr16
loope
ljmp
stos
fwait
xchg
dec
and
jmp
adc
cmp
in
cmp
push
ret
mov
mov
scas
clc
pop
jmp
mov
call
add
icebp
xor
dec
mov
xor
pop
jns
inc
popf
jg
xor
cs
addr16
xchg
and
cmp
hlt
sub
cmc
sbb
dec
movsl
pop
push
adc
imul
cmp
xor
pop
call
mov
in
nop
movsb
inc
jg
and
adc
xor
push
ss
into
push
ss
rcl
imul
ss
and
add
cwtl
pop
test
in
das
pusha
sub
sarl
sahf
mov
sbb
adc
and
jae
js
sbb
fs
xlat
adc
push
mov
repnz
repz
mov
push
pop
popa
and
xchg
sbb
mov
xor
sub
cltd
fimull
dec
inc
aam
mov
ret
movsb
cmp
rol
mov
sub
sub
sub
sti
shlb
jne
dec
push
lret
mov
cmp
adc
mov
stc
dec
xor
ljmp
repnz
pop
jl
ss
jb
or
lret
cmc
int3
mov
jp
addr16
jg
lret
movsb
cs
xchg
out
push
testb
jp
inc
clc
shl
rcrb
ffree
inc
dec
fstl
mov
aam
insl
xchg
push
std
sbb
inc
loope
mov
adc
jg
mov
in
pop
lahf
cmp
pop
pop
test
mov
enter
pop
and
xor
jno
xor
les
inc
mov
jnp
push
mov
mov
xchg
lods
shll
mov
in
xchg
outsl
movsl
xor
jo
sarb
jecxz
xchg
mov
xchg
and
inc
jae
adc
adcl
lcall
test
out
jno
xor
push
and
mov
aad
subl
js
mov
or
add
out
cwtl
sahf
sub
jns
jmp
mov
dec
ret
mov
cmpl
das
arpl
mov
xchg
mov
rorl
aam
dec
dec
push
and
jb
mov
gs
sahf
lahf
push
lahf
sbb
gs
ja
fadds
mov
enter
xchg
ja
mov
nop
icebp
stos
imul
rol
sbb
cli
aam
push
jbe
repnz
mov
and
es
std
sbb
cmp
jge
roll
mov
sbb
and
inc
out
xor
aas
mov
mov
outsb
adc
adc
jl
jmp
sti
ljmp
sahf
les
loop
jle
mov
mov
es
mov
inc
imul
cld
jae,pn
xchg
mov
leave
dec
rcll
cs
into
out
hlt
or
sbb
xchg
jo
push
xor
mov
shll
dec
les
pop
int3
int
mov
call
mov
jno
lea
inc
and
lds
data16
shl
sub
mov
insl
mov
imul
outsb
jne
sti
jae
xor
xor
testl
ffreep
add
ret
repnz
and
cltd
jb
sarl
pop
inc
adc
or
mov
mov
mov
pusha
push
push
test
jo
add
mov
push
or
cmp
les
mov
es
dec
leave
jne
or
push
xor
cwtl
mov
clc
shl
nop
or
xor
or
pop
jg
jno
lods
cmpsb
cli
popf
or
sub
or
pop
icebp
add
or
stos
push
leave
sbb
je
dec
pop
fldt
imulb
sub
roll
push
rcll
insl
fs
mov
sub
fcmovne
test
push
sub
mov
or
nop
repnz
mov
jp
push
popf
aaa
imul
bound
insl
xchg
jns
testl
inc
ljmp
adc
out
ficompl
ja
lcall
inc
ret
data16
cmpsl
je
xor
lods
cltd
fdivrp
and
test
mov
pop
add
cwtl
xchg
jae
out
mov
scas
add
sub
mov
mov
sbb
addr16
mov
sbb
jge
bound
ljmp
sub
out
jnp
ja
cmp
cli
xchg
cltd
inc
mov
repz
ds
movsl
or
jmp
insb
cli
and
adc
xchg
jp
lcall
mov
mov
aas
push
outsl
and
in
mov
cwtl
test
movsb
fwait
mov
scas
fbstp
stc
das
xlat
rcrl
sbb
out
aas
rep
mov
mov
mov
loopne
int
dec
xchg
inc
pop
xor
cmc
xor
ljmp
in
gs
lods
cmpsb
sbb
loope
mov
les
fs
lods
xchg
pop
jmp
xor
dec
lret
arpl
in
mov
lret
sub
and
mov
sub
xor
push
dec
jge
call
jge
lds
mov
imul
xor
mov
or
popf
pusha
insb
dec
dec
out
lahf
push
pop
imul
iret
dec
jecxz
cmp
ja
dec
push
xchg
cmpsb
xlat
in
in
or
add
pop
and
cmp
cltd
mov
jns
push
xor
and
xor
jle
inc
and
ljmp
lea
repnz
xor
jmp
adc
xchg
sbb
jle
mov
mov
cmpsb
mov
call
sbb
add
out
out
jnp
jecxz
or
je
mov
xlat
fwait
mov
add
cmpsb
clc
add
sub
mov
aaa
xor
test
jo
or
je
push
mov
sbb
iret
push
jne
mov
call
push
out
jl
xor
jnp
aad
shl
xchg
cmc
cmp
frstor
ficoml
push
mov
inc
inc
dec
and
mov
adc
mov
adc
ret
xlat
mov
sbb
lea
jecxz
pusha
not
rorl
in
adc
and
mov
faddl
sub
xchg
jge
inc
or
push
into
push
movsb
pop
lret
push
ja
sbb
ja
xchg
stc
sbb
xor
cmp
movsb
mov
popf
add
push
stos
icebp
pop
inc
sbb
inc
movsl
lds
or
pop
and
jno
mov
mov
ja
jp
orb
mov
jmp
pop
mov
inc
jb
mov
fwait
in
insl
lea
dec
add
add
out
fldl
mov
lods
cwtl
add
cli
adc
push
imul
push
mov
out
fistpl
pop
insl
dec
aaa
add
bound
rcll
xchg
fwait
cmp
jbe
mov
cmp
mov
mov
in
orb
mov
jmp
pop
or
jns
lods
enter
in
in
xor
push
jb
adc
stos
jg
ljmp
add
pop
into
cmp
movsb
sahf
test
or
lds
jns
sar
lret
and
aam
add
test
or
sbb
xor
mov
in
mov
std
dec
xor
fwait
sbb
add
mov
jo
ss
and
in
outsl
bound
pop
push
inc
sbb
test
outsl
insl
fadd
or
xchg
sub
fcoml
pop
inc
inc
aad
bound
add
lret
pop
stos
test
cld
imul
hlt
sub
jb
inc
xorb
into
dec
fldz
aad
aad
mov
add
test
jmp
imul
fbstp
icebp
shrb
pop
push
mov
mov
mov
int
std
pop
pop
adc
add
std
cltd
sbb
popf
mov
add
jns
lret
lret
aas
test
adc
jge
inc
add
jne
clc
add
test
lds
popf
push
sbb
sub
pop
fidivrl
push
cmp
ljmp
mov
adc
sar
mov
adc
cmp
mov
mov
daa
sahf
jns
jp
push
inc
sub
shlb
cmp
push
cmpl
popa
inc
mov
cltd
jne
movsl
dec
mov
xlat
popf
mov
push
and
filds
mov
mov
repnz
fcmovbe
cmp
mov
in
mov
jo
in
xchg
orl
add
mov
mov
sbb
mov
jmp
out
clc
or
jecxz
or
js
push
xchg
roll
call
adc
add
xorl
sbb
lret
lahf
adc
adc
rcrb
lcall
xor
and
sahf
mov
testb
and
push
aad
lahf
jno
add
xor
test
jo
mov
add
mov
inc
push
icebp
scas
mov
xlat
clc
gs
loop
pop
into
stc
cmp
subb
movsl
pop
cmp
lods
insb
cmp
fisttpll
fdivrp
stos
ret
inc
cmp
pop
adc
add
cmp
lods
mov
addb
adc
inc
inc
sti
pop
push
jno
xor
pusha
sub
xor
inc
negl
xchg
cmpsb
movb
lahf
push
push
shl
add
or
movsb
mov
add
dec
jmp
ret
add
mov
push
ljmp
add
mov
push
cltd
inc
aaa
ficomps
movsb
pop
mov
xor
inc
int3
mov
mov
aam
bnd
inc
addr16
or
add
movsl
and
jns
sbb
fcomp
fisubl
push
cld
adcb
add
ret
icebp
cmp
mov
pop
repz
jo
or
jne
xchg
cmp
xchg
jnp
lcall
test
or
dec
fadds
sub
lret
mov
testl
and
mov
cmp
mov
push
and
int3
pop
sar
out
lds
sub
lods
xchg
jmp
add
dec
ss
pop
push
push
fadds
out
xlat
mov
lds
arpl
xlat
clc
mov
mov
pop
iret
lret
jo
fldcw
and
test
sub
cli
mov
adc
vpsadbw
xor
dec
add
scas
fisubrs
xchg
mov
into
shlb
push
add
mov
pop
mov
add
pop
push
ljmp
xor
sahf
cmp
aad
dec
lods
jae
mov
dec
jo
pop
hlt
fisubl
ret
in
xchg
xorb
test
rolb
das
and
push
scas
fcmovne
xchg
aam
sbb
mov
movsl
in
pop
repz
popa
or
movsb
int
sbb
or
and
loop
xor
into
mov
mov
dec
pop
adc
inc
pop
mov
mov
xchg
cltd
push
sbb
add
xchg
jmp
jns
xchg
or
dec
push
mov
xor
and
stos
hlt
js
jge
pop
roll
lods
pop
sub
pop
sub
mov
lcall
mov
inc
xchg
testb
inc
push
sbb
dec
or
rcrb
popf
dec
insb
sub
outsb
push
repz
out
pushf
sar
push
mov
js
mov
pop
sbb
sbb
cs
xor
xor
xchg
push
pusha
jmp
add
shrb
inc
xor
rcrb
or
sub
shr
loopne
xor
roll
loopne
sub
adcb
pop
add
or
sub
push
inc
adc
test
icebp
inc
mov
push
loop
mov
movsl
sarl
out
scas
lea
dec
jb
sub
dec
sbb
lds
test
dec
xlat
pop
sub
in
sub
dec
shll
jb
mov
pushf
dec
mov
cmp
lahf
add
jne
bound
sub
push
mov
add
subl
rorb
stc
and
inc
pop
xlat
and
xor
mov
fists
das
outsl
aam
mul
std
scas
ds
jmp
pop
nop
jb
sahf
arpl
mov
jecxz
xchg
pop
sbb
popa
cs
cmp
adc
ficompl
jge
xchg
insb
scas
and
fcom
push
aam
sahf
ss
jno
insb
xchg
pop
or
push
dec
repz
sbb
fimuls
loope
sub
loopne
jnp
or
xchg
jae
jo
lcall
imul
jg
test
ljmp
adc
lds
test
mov
inc
fists
addr16
cmp
sub
xchg
cmp
in
clc
fldcw
cltd
arpl
sub
dec
clc
mov
out
les
mov
mov
sbb
ja
std
jb
push
sti
mov
sbb
test
out
shl
xchg
pushf
pop
mov
cmp
cmp
mov
clc
loopne
inc
mov
xchg
dec
sti
jae
push
cmpsl
enter
movsl
mov
mov
mov
cmc
inc
lock
test
xchg
pop
mov
dec
out
or
fcoml
add
xor
sbb
stos
test
movsl
push
pop
cltd
mov
jg
outsl
pop
sbb
repnz
adc
orb
add
mov
pop
inc
insb
inc
lret
adc
movsb
roll
xlat
jns
pop
push
or
or
inc
inc
jb
jecxz
dec
mov
enter
push
loope
jb
push
push
xchg
fnstsw
push
fiaddl
dec
jp
lret
cmp
test
int
and
aaa
lahf
adc
pop
mov
lahf
je
lea
sub
xchg
cmp
cmp
mov
xchg
dec
mov
ret
push
or
loopne
insb
mov
jecxz
enter
jle
popf
lds
adc
into
push
addr16
data16
add
ret
out
lcall
push
repnz
clc
ja
push
aam
subb
jge
xor
orb
push
les
pushf
lds
jno
cmp
or
aam
jmp
test
outsl
cli
add
aad
push
in
mov
pop
fsubrl
xlat
xor
hlt
into
cmp
or
outsl
lahf
xorb
push
cmp
test
cmp
mov
popf
push
mov
xor
pop
aam
js
outsl
outsb
push
test
pop
push
mov
aam
sbb
mov
add
mov
mov
mov
in
push
imul
jge
rclb
sub
pop
or
mov
addr16
add
clc
mov
push
call
jge
dec
sahf
fistpll
in
data16
sub
cltd
pop
mov
pusha
pop
pop
add
add
loop
lods
out
mov
push
mov
pop
xor
cmp
xor
in
inc
push
mov
shl
out
xorl
fimull
cli
and
inc
pushf
pxor
fdivrs
addr16
push
adcb
pop
aas
fstl
dec
add
popf
mov
sbb
scas
sbb
icebp
pop
mov
inc
enter
shl
sbb
cmp
out
imul
dec
sahf
addb
stos
adc
cmpsl
fucomp
push
mov
ficoml
or
insb
test
pusha
imulb
lea
sbb
push
rcrb
stc
mov
dec
fistl
push
jmp
inc
ja
mov
stos
jecxz
mov
xchg
push
int
movsl
pop
lods
and
jg
mov
lods
or
inc
stos
lock
fs
fisttpl
inc
jecxz
mov
dec
ret
add
insb
pop
dec
and
pop
ljmp
int
stos
incl
aas
dec
ja
dec
imul
sbb
dec
subb
vpsrad
inc
pop
mov
pop
repz
rcll
sahf
in
scas
mov
add
jl
sti
fcomps
sbb
adc
out
fdivrs
and
sub
iret
and
sub
push
stos
dec
mov
pushf
sub
mov
in
jo
jmp
or
pop
jge
jns
jmp
mov
mov
es
fucomp
fs
or
out
jnp
mov
xor
mov
or
nop
fwait
lds
dec
out
fldl
xchg
push
daa
stc
sub
cmc
mov
xchg
ds
jbe
mov
test
inc
ds
sub
mov
pop
int3
adc
sub
inc
loopne
xchg
nop
sub
mov
stc
and
push
and
cld
jb
fwait
xchg
je
popa
leave
dec
fwait
rcrl
and
inc
or
mov
insl
inc
inc
ds
sub
add
jbe
and
out
and
xor
adc
outsl
lods
mov
sbb
or
push
push
cltd
cmpsl
adc
fisttps
cli
jp
xor
xchg
ljmp
jge
sub
mov
cmpsb
aam
sbb
mov
dec
div
sarl
movb
pop
fiadds
mov
or
daa
lock
vmovd
pop
or
jns
and
les
push
arpl
sbb
cmc
xchg
or
xor
mov
popfw
cmp
je
and
ds
ss
loope
or
or
or
mov
enter
int
pushw
mov
cld
add
rorb
mov
insb
adc
xor
xlat
and
mov
cmp
add
movsb
daa
aam
sub
sbb
int
inc
scas
push
sub
bound
cld
adc
cmp
mov
ret
sbb
sbbb
push
imul
repnz
lods
mov
movsb
popf
icebp
adc
adc
cmc
xor
mov
aas
and
xchg
push
js
test
pop
dec
push
and
stos
add
fcmovnu
jnp
xor
dec
jmp
inc
cmp
push
outsb
ds
pop
inc
test
movsb
sub
gs
mov
loopne
shrl
xchg
hlt
movsb
loopne
dec
cld
sbb
imul
or
imul
or
sbb
lahf
jge
xchg
jns
pop
jge
nop
rolb
jnp
mov
push
std
pop
or
or
mov
cmp
add
out
dec
mov
mov
inc
in
add
fcomps
ja
gs
rol
movsl
hlt
daa
mov
fsqrt
mov
pop
addr16
ljmp
and
cmc
cmp
out
shl
pop
mov
jge
adc
xor
xor
psllq
roll
mov
jecxz
xor
aaa
fildl
sub
sub
and
test
pop
pop
pop
mov
jo
cmp
mov
cmp
test
test
cld
repnz
pop
lea
pop
loop
js
pusha
jb
nop
inc
add
xor
and
icebp
jmp
sub
outsl
xchg
mov
pop
add
dec
pop
push
call
mov
std
and
rcrb
add
mov
mov
loop
dec
jo,pn
mov
cmp
rol
dec
push
xlat
in
cmpsl
adc
xor
popf
aaa
fwait
in
daa
push
xchg
pop
sub
add
enter
int3
mov
push
ret
icebp
dec
and
xchg
dec
lret
test
xchg
mov
ss
movsl
push
pushf
mov
popa
in
int3
push
and
jmp
xchg
rcrb
push
xchg
js
pusha
insl
mov
dec
movsl
xor
push
sarb
cwtl
int3
adc
inc
jg
ljmp
fcoml
das
xor
out
inc
push
pop
jcxz
stos
pop
add
inc
test
lret
jno
fildll
or
mov
icebp
and
clc
xlat
bound
lcall
adc
mov
mov
shlb
repnz
ror
add
stc
bound
stc
shl
popf
ljmp
aam
in
inc
call
rorl
fimull
push
mov
cwtl
sbb
push
rcrb
xlat
insl
dec
cmp
fstpl
addr16
loopne
and
xor
scas
push
sahf
in
int3
xchg
clc
jno
loop
jo
loop
addr16
mov
jge
sahf
pop
scas
pop
mov
mov
outsb
dec
subl
aas
pop
fsubp
ss
dec
push
jne
out
sti
aas
jne
cmp
fwait
and
inc
push
scas
fstp
cltd
leave
xchg
into
mov
leave
outsb
imul
mov
ss
jmp
add
adc
mov
pusha
sti
leave
xchg
cmpsb
dec
jg
pop
fmull
or
loop
stc
pop
mov
test
mov
cmp
cmp
lds
or
lret
push
rclb
sbb
jle
jmp
push
pmullw
jne
xchg
cmp
leave
ja
jp
cmc
inc
xchg
jecxz
orl
or
sti
shlb
mov
mov
jae
out
mov
push
cmc
fdivrp
ja
adc
test
pop
lret
hlt
imul
inc
dec
mov
xchg
xchg
les
jns
ljmp
and
outsb
ficoml
cmpsl
aas
xchg
mov
inc
cli
aam
aaa
push
lret
and
in
jmp
push
insl
inc
mov
mov
or
fstps
int
pop
hlt
sub
decb
fcoms
push
lret
xchg
ljmp
ds
sub
arpl
mov
sub
push
cwtl
lahf
xchg
pop
rcrl
xor
shrb
dec
out
inc
fcomi
jecxz
mov
bnd
and
cmp
loopne
jle
ss
sub
js
inc
enter
lods
nop
lea
ret
xor
cmp
pop
rcll
xor
lea
xor
jnp
pop
testl
pop
fs
lods
jmp
in
pop
xchg
in
rorl
xchg
xchg
call
inc
or
das
pop
adc
fldt
movsb
jno
into
mov
sbb
out
inc
mov
in
aas
sbb
in
xor
in
jl
lret
push
add
or
jg
ss
pop
int
mov
enter
xchg
icebp
cli
cmpsl
icebp
repz
stc
or
mov
cmp
les
cmp
jge
sub
xor
mov
mov
sbb
stc
push
push
aas
mov
adc
leave
stos
xor
xor
ds
leave
in
call
in
xchg
and
leave
push
test
int
pop
add
adc
mov
cltd
and
adcl
leave
enter
mov
add
das
xchg
ds
icebp
or
or
cli
addr16
xlat
cmp
pop
sti
dec
es
jp,pt
cmp
stos
jge
jmp
mov
rolb
adc
leave
xor
xlat
in
lret
jecxz
in
fs
push
outsl
mov
and
xor
xor
jnp
repz
jge
inc
aad
arpl
mov
mov
int
out
dec
clc
int
and
rcrb
adc
ss
lock
jmp
addr16
sar
insl
stos
adc
scas
mov
xchg
push
cmp
cltd
push
xchg
bnd
enter
lods
adc
xor
mov
imulb
or
test
push
fwait
xchg
aas
or
pop
cmp
cld
push
inc
aas
jbe
dec
sar
sub
test
inc
and
test
jae
xchg
int
popf
xchg
mov
xchg
iret
cmc
add
sub
mov
push
dec
jmp
nop
dec
repz
sbb
sub
bound
shrb
mov
scas
mov
adcb
imul
div
hlt
push
cmp
hlt
cmp
scas
mov
ficomps
pushf
jb
fimull
sti
sub
in
sub
outsl
sbb
xor
test
or
test
inc
adc
mov
jl
hlt
or
jns
xor
adc
push
lds
add
out
in
repz
jo
int3
int3
stos
push
movsb
mov
rdpmc
xor
push
sarb
mov
addr16
or
pop
cmp
test
cld
les
dec
push
lret
loope
sbb
jo
jl
jl,pt
fmuls
mov
mov
xchg
inc
jl
fimull
imul
add
jecxz
push
dec
adc
mov
gs
rcr
imul
sbb
push
test
sub
loop
add
mov
lea
and
outsl
sub
fwait
das
pusha
fwait
inc
mov
mov
lds
sub
mov
ror
aam
out
std
adc
ret
cmpl
mov
and
push
dec
lods
dec
cmp
or
ja
mov
pop
loopne
inc
sbb
stos
jb
lock
iret
out
not
inc
cmp
addb
loope
mov
int3
test
adc
es
data16
mov
xchg
ljmp
jle
add
jp
imul
adc
cs
out
xchg
aas
jge
adc
pop
pop
jne
test
add
cmp
xor
orl
mov
mov
and
add
push
push
sbb
mov
pop
mov
loope
bound
leave
addr16
jmp
dec
outsb
movsb
xor
lret
lods
sub
xchg
in
push
push
bound
xchg
push
push
push
push
or
ljmp
sub
test
mov
push
and
leave
sbb
mov
xchg
jne
daa
das
sbb
test
fs
sub
cmp
cmp
divl
or
cmpsb
out
jp
push
shr
test
pop
sub
js
or
mov
out
mov
cmp
rolb
lret
mov
adc
imul
and
jbe
inc
scas
add
and
shlb
fcompl
cmp
mov
mov
mov
sahf
lcall
mov
in
ret
dec
out
call
imul
in
scas
xor
in
dec
jnp
int3
insl
and
jne
jo
daa
mov
mov
int
jecxz
rolb
mov
xchg
pop
xchg
mov
mov
test
xchg
push
in
int
rol
addr16
pop
sbb
push
icebp
leave
mov
mov
jnp
dec
pop
rolb
cs
and
mov
pushf
fcoml
push
sbb
dec
inc
lcall
call
sbb
std
inc
lret
or
sbb
and
mov
and
jecxz
mov
add
aas
incb
enter
fstp
jecxz
inc
stos
fs
push
dec
xor
add
cmp
mov
jae
cmpsl
aam
in
cmpxchg
adc
xchg
ret
or
xchg
sti
adc
fxtract
outsb
sub
add
or
mov
int3
fldl
sbb
jecxz
push
cmc
xchg
sahf
lock
inc
cmpsl
jno
and
sub
sbb
out
sub
les
xor
mov
fwait
in
push
inc
add
xor
sbb
mov
pop
push
sbb
add
ljmp
or
mov
sbb
cld
jmp
pop
mov
sbb
or
aad
mov
in
xchg
mov
xchg
add
stos
xor
mov
bound
fidivs
push
sub
xchg
xor
cmpb
pop
test
stos
gs
xor
push
xchg
outsb
xchg
ror
jno
add
xor
sahf
pop
jns
cmp
lock
out
xor
cmp
sbb
arpl
imul
adc
xchg
cmpsl
outsb
inc
js
repnz
data16
repnz
daa
push
popf
add
nop
sbb
and
addl
mov
adc
cmp
xchg
xor
sbb
and
xchg
mov
mov
fidivrl
loopne
dec
ficompl
jmp
mov
and
es
fdivrs
stos
call
mov
fcoml
sub
fnstsw
mov
sbb
cmp
inc
call
aad
repnz
pop
and
cwtl
xchg
in
sbb
int3
dec
xor
fsts
mov
xlat
addl
mov
jb
add
pop
sbb
pusha
xchg
jno
pop
fldenv
mov
adc
mov
adc
push
int3
pop
push
imul
fcomp
mov
int3
fidivl
out
mov
adc
lea
loop
ds
cmpb
or
or
jne
push
or
cli
inc
mov
ds
jecxz
mov
and
bound
mov
push
mov
and
push
push
push
jl
fidivrs
cmp
dec
add
fisttpll
shlb
dec
rcl
sub
mov
lock
daa
sub
mov
inc
xchg
aas
into
imul
mov
dec
roll
dec
lods
add
sub
mov
das
jp
adc
jae
je
pop
push
cmp
ljmp
xchg
cld
andb
dec
mov
shll
pop
jo
mov
sub
call
jp
dec
adcl
std
mov
jmp
inc
or
std
or
pop
sbb
cmp
ret
stos
cmp
push
xchg
dec
ja,pt
aam
jl
jg
jg
inc
mov
or
push
cmpsb
pusha
and
pop
pop
xor
inc
mov
cltd
cmp
cmpsb
and
or
jmp
sahf
xor
pusha
add
cmp
aaa
adc
push
fidivrl
ret
pusha
lock
sub
into
sub
mov
inc
ja
mov
mov
sbb
rolb
inc
or
pop
inc
andb
shl
push
inc
pop
fwait
push
cmp
jae
mov
rolb
cmp
mov
sbb
fldt
shll
pushw
adc
cmp
sub
stos
cs
xchg
mov
push
xlat
xchg
in
fwait
sbb
mov
mov
test
jge
mov
pop
imul
mov
mov
sbb
daa
xor
test
pop
jle
xchg
xchg
lods
jno
addr16
daa
mov
push
jb,pn
adc
enter
enter
jle
mov
adc
push
leave
inc
mov
cltd
lods
dec
add
leave
cmp
sbb
loop
pop
rcll
adc
enter
es
pop
sub
test
addr16
mov
popa
jecxz
push
insb
push
push
push
jp
pop
hlt
das
ljmp
icebp
xor
je
ljmp
push
jbe
mov
lods
jne
mov
xor
inc
dec
xor
xchg
dec
dec
dec
add
jae
fldenv
bswap
cli
inc
fdivp
loope
stc
xchg
xchg
xchg
hlt
inc
xchg
ret
push
iret
mov
and
adc
lret
shll
test
icebp
pop
xlat
xor
lcall
iret
xchg
aas
loop
inc
add
lds
dec
inc
js
ret
sbb
decl
rol
roll
sub
mov
js
mov
and
loop,pt
mov
and
adc
test
lcall
cmpsl
cmc
push
sub
and
jns
mov
ja
jb
adc
test
add
xor
stos
xlat
mov
mov
add
out
sub
dec
repnz
jp
jne
cs
push
les
dec
in
adc
mov
adc
and
jl,pt
dec
jl
repz
insl
jle
insl
lcall
bound
arpl
mov
movsb
mov
mov
lret
cltd
scas
repnz
xlat
jae
out
aaa
sbb
mov
mov
jnp
pop
movsl
int3
push
mov
cmp
sub
and
cmp
mov
mov
pop
popa
jb
loop
test
push
sub
scas
cli
mov
sub
test
mov
loop
or
mov
cli
leave
push
lods
aam
cs
or
push
inc
loope
jecxz
xor
iret
cmp
jae
jne
inc
fadds
jns
ss
jo
push
or
fmull
sub
push
lds
gs
xor
in
and
fiadds
test
xor
shrl
int
in
mov
adcl
inc
mov
movsb
movsl
mov
pushf
inc
or
notl
lret
subl
ret
out
push
sub
lret
cmp
insl
mov
cmp
push
insl
test
mov
xchg
stc
stos
pop
pop
cwtl
inc
mov
jmp
or
fsubrs
test
jl
sbb
arpl
mov
lahf
jns
xor
stc
insl
push
push
data16
xchg
fucomp
fwait
jp
sub
mov
pushf
idivl
jecxz
sub
push
mov
pusha
mov
in
mov
loope
xor
stos
les
or
pop
mov
ret
mov
or
repz
mov
or
xor
orl
arpl
mov
mov
ret
cmpsl
xchg
push
rolb
push
jmp
popa
orb
out
xor
pop
jno
stos
pop
add
fisubs
lods
sub
inc
rcrb
negb
inc
sbb
insb
repnz
cmp
jmp
cwtl
push
xchg
lock
outsl
lahf
jp
add
pusha
add
addb
add
mov
sbb
ja
cltd
sbb
ds
decb
ja
add
mov
inc
mov
aam
jle
and
ja
idiv
ljmp
cmovge
push
hlt
sub
cli
xor
aad
orl
jnp
mov
adc
ret
popl
inc
jmp
push
loopne
insl
into
mov
or
out
sub
mov
inc
mov
xor
sub
xchg
insl
imul
out
xchg
push
add
dec
sbb
jae
or
cmp
aaa
leave
pop
mov
adc
cmp
pop
arpl
cmp
adc
sbb
mov
mov
inc
lahf
sets
inc
mov
popa
mov
enter
fisubs
je
data16
sub
outsb
xchg
leave
jo
inc
xor
incb
test
out
pop
or
sub
adc
aam
call
sbb
addr16
test
xor
clc
lods
in
add
sub
pop
and
and
loope
inc
repnz
shl
push
cld
xchg
cmp
pop
cmp
or
mov
movsl
inc
inc
pop
push
mov
bound
add
out
bound
cli
sarl
mov
ret
test
fsubrl
xlat
out
add
cli
jnp
dec
sarl
call
mov
sub
pop
pushf
lods
mov
mov
adc
inc
int
sbb
pushf
cmc
scas
jnp
xor
push
aas
xor
push
pop
jbe
cs
jg
lea
mov
jns
addb
test
sub
mov
sbb
xorl
testl
lret
dec
xchg
and
xchg
cmpsl
push
and
mov
mov
dec
lock
lods
push
push
popl
jecxz
mov
outsl
or
pop
test
add
jp
es
fdivrs
popf
xor
adc
das
push
cmp
fwait
shrl
popa
and
nop
lret
jnp
mov
cmp
sahf
cmc
fistps
lea
adc
mov
jne
mov
arpl
fwait
or
lock
in
icebp
push
dec
xchg
outsb
enter
push
push
cmc
mov
pop
lea
fwait
cmp
sbb
out
adcb
adc
dec
fists
pop
iret
mov
adc
and
cli
xchg
in
xorl
dec
sub
rol
dec
lock
push
rcrl
lods
mov
js
cmp
add
out
andl
inc
popa
xor
scas
sub
mov
push
push
or
ds
aaa
dec
sbb
dec
add
rcrb
bswap
mov
addb
shlb
adc
ss
xchg
jmp
dec
out
lock
push
jo
jecxz
lret
jle
xlat
fmull
mov
loope
dec
movsl
push
add
fdivrs
xorl
mov
out
shlb
nop
cmp
ja
add
dec
bound
add
roll
stos
imull
mov
mov
sbb
out
mov
pop
stos
mov
jnp
dec
pop
sarl
fidivl
jg
sbb
mov
je
mov
into
rcrl
in
jg
hlt
mov
add
jl
cmc
inc
sub
push
and
and
mov
aaa
leave
and
jp
jmp
push
les
lahf
inc
mov
lcall
sub
jge
push
aad
mov
adc
and
fists
push
adc
push
add
mov
cmp
lea
aam
and
test
bnd
fsubp
sbb
lods
aam
clc
fidivrs
stos
aad
arpl
mov
fadd
sub
mov
scas
sbb
fisttps
mov
ljmp
adc
mov
jg
and
pop
clc
cmp
sti
and
inc
pop
push
mov
add
icebp
jl
mov
mov
and
outsb
dec
or
outsl
jle
push
sbb
mov
js
cltd
cld
xor
imulb
or
adc
xchg
repz
sti
rol
pop
pop
stos
and
rcrb
js
jbe
jl
clc
mov
adc
push
fldcw
mov
mov
jecxz
scas
add
add
mov
test
rcrl
idivb
cld
and
ficoml
in
pop
mov
cmp
inc
mov
shlb
sbb
adc
xchg
mov
lock
pop
out
xor
fimuls
cli
mov
dec
push
std
jnp
sbb
pop
xor
stos
and
xchg
fwait
inc
dec
mov
mov
aaa
mov
ret
cmp
js
in
sub
or
xor
adcb
xor
jg
push
add
lret
mov
fsubr
inc
inc
orb
jl
xchg
cli
push
xlat
bound
mov
mov
ret
jecxz
dec
pop
sbb
add
jns
jae
mov
out
mov
js
mov
mov
lret
xlat
cmp
dec
cmpsb
je
aas
inc
das
es
jo,pt
adc
mov
push
shlb
or
dec
nop
jae
cld
subl
jmp
or
cmpsl
cmp
mov
arpl
inc
iret
jg
xchg
imul
sub
mov
stos
mov
and
sbb
ret
pop
inc
cmpl
fiaddl
dec
mov
imulb
jp
mov
iret
mov
xor
mov
cs
pop
int
xor
lds
arpl
sub
arpl
loope
sahf
inc
jl
jns
imul
mov
pusha
pushf
pop
cli
iret
outsb
cmp
xchg
xchg
ss
add
sbb
xchg
push
push
jecxz
push
data16
xlat
cmp
jecxz
cltd
lods
ret
aaa
popa
aaa
lods
or
ret
xchg
fnstsw
or
sbb
add
aam
enter
les
cmpsl
addr16
repz
add
in
xchg
and
xchg
sbb
jecxz
rcrb
xor
mov
sbb
xor
or
mov
loopne
or
rcrl
int3
les
xlat
loop
rcrl
xor
pop
sar
inc
pop
inc
or
add
lret
sub
cmp
cmp
push
xorb
rol
aaa
xchg
cmp
mov
fsubrs
pop
cwtl
out
mov
pop
jmp
mov
lret
pop
lods
adc
fs
mov
fidivs
jecxz
outsb
mov
fisubrl
sub
loope
lock
mov
lods
les
flds
xchg
xor
lods
andb
push
jbe
out
dec
enter
push
ds
xchg
dec
cwtl
dec
fwait
scas
mov
xchg
adc
or
xchg
fadds
sbb
mov
xchg
push
int
shlb
inc
aad
or
fbld
cmpsl
mov
outsl
mov
fisubs
dec
adc
rorl
sbb
jg
loop
adc
lods
jns
out
insl
adcl
das
testl
fucomip
push
sbb
lods
test
pop
cmp
add
iret
jne
jno
sub
std
clc
and
outsl
cmp
push
fs
pop
aam
xor
mov
and
mov
inc
mov
sbb
push
shl
aaa
pop
je
add
lea
inc
add
xchg
xchg
pop
dec
je
ror
push
push
add
mov
out
roll
test
or
rclb
ret
dec
push
push
loope
add
sbb
cmp
test
push
iret
std
fwait
adc
add
xchg
push
xchg
and
or
adc
sarb
cli
into
and
aam
push
xchg
outsl
cli
cmpsl
in
test
add
cltd
loop
push
mov
cmp
sbbb
lods
xchg
movsb
xchg
inc
mov
pop
mov
xchg
lods
sarb
inc
mov
popa
xlat
sub
out
and
add
sbb
adc
dec
push
in
mov
orb
addr16
call
cmp
ljmp
pop
jle
mov
lcall
daa
test
fs
iret
movsl
inc
dec
jbe
mov
cmp
jge
scas
mov
jno
add
pop
sub
dec
je
aaa
lahf
shll
mov
mov
and
jge
xchg
jmp
sbb
and
int
addr16
std
and
inc
iret
xchg
aaa
ret
shll
in
imul
ficompl
mov
call
out
sub
shll
fmulp
sub
popa
bnd
cli
xchg
sub
cmp
testb
popf
or
sub
faddl
ljmp
das
andb
daa
mov
outsl
bswap
cmpsl
sahf
ljmp
popa
add
notb
sbb
aam
sarl
out
xchg
pop
or
call
les
imul
adc
repz
sbb
mov
faddl
push
ds
push
sarl
addl
addr16
sti
loopne
push
jnp
or
sub
add
das
mov
in
test
adc
sbb
inc
adc
add
cmpsb
loop
pop
mov
push
imul
loope
fstps
cmc
mov
pop
cmp
adc
mov
test
pop
lods
xor
ret
add
mov
xor
add
push
jb
adc
inc
push
push
dec
insb
shlb
pop
aam
movsb
test
inc
dec
xor
int
jmp
mov
and
push
dec
add
xchg
cmp
mov
adc
xchg
rcll
into
loop
pop
dec
call
mov
vpshufd
insl
imul
push
fdivrl
and
mov
jle
cli
ret
sub
mov
mov
or
das
adc
and
aaa
mov
xchg
lcall
cmpsl
out
pop
and
inc
loopne
test
jns
or
das
inc
scas
jbe
cltd
aam
ret
mov
lret
pushf
clc
cmc
shl
jge
xor
fisttpll
xor
xlat
test
add
ror
std
iret
sahf
lods
clc
mov
gs
xor
adc
cmc
mov
push
jmp
pop
and
jbe
out
lcall
sub
xor
ss
sbb
xor
sub
fwait
pop
hlt
hlt
fwait
push
aam
jae
xor
rcll
pushf
pop
incl
mov
jae
jns
sahf
sub
insb
into
lds
xlat
cld
sbb
cmp
cmp
xor
loop
or
popf
sti
outsb
out
data16
sti
imul
imul
inc
sti
js
fldcw
or
je
mov
pushf
in
push
mov
jb
addl
or
popa
mov
push
sub
jbe
cmp
aad
lcall
cmp
pop
mov
cli
xchg
negb
insl
push
sbb
les
or
sub
sbb
mov
adc
test
sahf
lea
fnstcw
lock
adc
out
int
mov
dec
test
rolb
addb
or
xchg
fcmovnbe
js
add
mov
sub
jno
jg
loop
cmc
loop
sbb
testb
nop
daa
xchg
std
out
sub
dec
sarl
lahf
scas
lahf
mov
xchg
mov
add
in
dec
out
jno
jb
ret
jecxz
fstpt
push
sbb
sbb
add
movl
pop
mov
pop
or
push
add
pop
xchg
xor
fs
xlat
das
daa
cli
ja
icebp
arpl
adc
mov
mov
enter
mov
les
scas
pop
test
xchg
pop
push
loopne
inc
pusha
in
xor
aad
mov
pop
mov
mov
dec
inc
stos
adc
movsl
dec
inc
push
mov
cmp
std
fdivl
movsl
push
xor
addb
jl
or
es
mov
mov
add
mov
popa
cld
push
mov
leave
add
test
jo
es
scas
shlb
js
inc
pushw
cmp
aad
mov
lahf
pop
adc
xchg
push
flds
cs
add
sbb
sahf
popa
es
add
dec
jns
into
scas
sub
out
add
fldenv
xchg
aas
pop
call
les
outsl
das
je
jb
jmp
mov
cltd
loopne
mov
aaa
or
push
mov
movsl
aas
pop
push
or
mov
fwait
lods
jmp
lea
push
mov
notb
mov
int
pop
leave
inc
imul
call
cmp
mov
sbb
rclb
aaa
push
insl
pop
mov
es
into
std
insb
mov
mov
mov
or
stos
and
and
mov
stos
push
rorl
and
inc
pop
ss
ss
aas
loopne
adc
cmp
loopne
xchg
mov
call
push
sbb
and
and
and
arpl
mov
inc
dec
shll
lahf
push
and
aas
mov
in
inc
add
loope
shr
bound
shl
xchg
sub
popf
cmp
cmp
int
xchg
xchg
mov
pop
mov
imul
add
adc
in
hlt
pop
out
cltd
mov
das
lds
lock
leave
lret
jo
sbb
pop
cwtl
aas
push
rorb
inc
cmp
sbb
xlat
sub
sub
xchg
ljmp
icebp
inc
add
lea
adc
aaa
dec
flds
insb
shrb
incl
cmp
mov
in
jno
mov
and
xor
addr16
dec
stos
ret
xlat
push
push
mov
ja
repnz
pop
jnp
or
sarl
lret
mov
popf
repnz
xchg
daa
popa
mov
push
sub
icebp
mov
incl
xchg
stos
stos
aam
movsb
pop
ret
repnz
adc
xchg
mov
push
adc
cmc
push
push
adc
imul
je
repnz
sub
fistl
test
mov
pcmpeqw
fistl
mov
dec
xchg
das
xlat
repz
sub
sti
push
cmp
enter
in
dec
cmpsl
insb
sbb
push
leave
aaa
or
idivb
dec
roll
sub
loop
je
test
sbb
and
ficompl
xchg
cmpsl
push
xchg
sbb
add
add
nop
push
jne
mov
sub
push
mov
lahf
dec
push
notb
sub
pop
jp
ret
gs
iret
jge
cmp
push
daa
or
or
push
push
mov
cmc
pop
xchg
adc
mov
sbbl
xchg
cld
pop
adc
sbb
pop
addr16
aaa
cmp
fistps
cltd
out
push
and
ss
fadds
push
jmp
cmp
sub
xor
inc
aas
mov
mov
scas
mov
cmp
mov
cmp
xor
mov
lret
test
dec
sub
mov
adc
push
leave
imul
inc
pop
sbb
cli
push
pop
inc
sbb
xchg
dec
movsl
dec
cwtl
jl
jne
movsl
nop
cmovo
rcrb
inc
inc
fnsave
into
cmp
push
ffreep
bound
int3
dec
xor
jae
aad
pop
xchg
test
outsb
loopne
mov
or
jg
mov
repz
stos
mov
cs
iret
out
movsb
sbb
movl
xor
push
xchg
and
fimuls
inc
mov
insb
fcomps
cmp
adc
jbe
jnp
movl
jg
shr
push
lret
mov
imul
fsts
add
inc
push
and
mov
or
cmp
rolb
xor
fcoml
push
mov
mov
mov
push
fnstsw
xor
mov
cmp
lock
push
test
xchg
push
imul
sbb
fsts
insl
cltd
hlt
push
and
cmc
aad
icebp
mov
ljmp
int
and
iret
jl
ficoml
mov
cmp
xchg
xorl
inc
jmp
jbe
cmp
and
mov
testb
inc
cmp
jb,pn
leave
fdivrl
sub
xor
pop
cmp
sbb
dec
sbb
fldpi
loop
push
pop
xchg
pop
into
std
push
xor
push
subb
cld
iret
mov
stos
jmp
push
add
cmp
xchg
mov
mov
push
push
ja
push
xchg
inc
xchg
subb
jb
call
sbb
movups
dec
and
mulb
sti
std
push
rcrl
fwait
inc
sub
pop
in
popf
inc
jne
cmp
mov
ds
push
packuswb
cmp
in
jle
rolb
adc
addl
sti
adc
inc
add
xchg
lock
xchg
push
mov
cmp
sti
push
je
jne
xor
out
pushf
cmp
sbb
fcoml
pusha
orb
mov
fcmovb
push
daa
xor
adc
and
mov
pop
cmp
leave
push
push
pop
pop
lcall
inc
mov
cmpsl
dec
pop
sbb
dec
mov
lret
hlt
rorl
mov
dec
mov
xor
rclb
iret
mov
fwait
arpl
pop
xor
jno
pop
aad
std
mov
aaa
mov
xor
scas
enter
xchg
cs
idivb
loope
mov
jl
xor
jo
in
pushf
lcall
push
push
push
jmp
cld
inc
insl
repnz
pusha
xchg
daa
inc
clc
mov
data16
cmpsl
inc
jnp
cmp
jl
ret
sbbb
sbb
dec
cmp
shlb
mov
ja
out
sahf
popa
out
mov
icebp
mov
adc
mov
jle
andl
movsb
icebp
sbb
test
xor
test
shlb
jle
in
push
jp
lods
stos
dec
stos
mov
js
jl
mov
fildl
shll
push
adc
mov
mov
in
daa
in
or
push
mov
movsl
xchg
clc
out
pop
and
pusha
sbb
in
outsl
xor
mov
push
add
sbb
stc
inc
fcomps
dec
lcall
push
test
inc
dec
xor
cmp
or
mov
rorl
or
mov
outsb
jg
sbb
loopne
cld
jl
clc
in
mov
dec
movb
pop
in
popa
pop
test
pop
pop
jae
mov
fiaddl
dec
jno
loopne
sub
cmp
jg
test
pop
push
movsb
add
sbb
dec
aas
mov
in
and
sub
cmpsl
adc
adc
adc
jg
jbe
mov
xchg
insb
iret
jnp
xchg
out
stc
mov
sbb
cmp
es
subb
or
pop
sahf
stos
ss
ficoml
pop
inc
pop
adc
dec
jecxz
mov
mov
ret
in
and
sub
adc
scas
lcall
dec
add
adc
or
sub
jnp
into
add
mov
pusha
lea
leave
subb
mov
les
mov
cmp
add
xchg
jnp
in
xchg
mov
xchg
mov
in
mov
je
frstor
cmc
push
cmp
out
or
sbb
insl
or
and
mov
push
pop
sbb
sahf
jo
fisttpl
jns
decl
aad
inc
inc
mov
loop
pop
mov
inc
fnsave
sub
jmp
iret
out
movsl
sub
sbb
sbb
push
push
pushf
cmp
popa
sti
int
sbb
xlat
fs
data16
cmpsl
clc
xchg
add
inc
xchg
cltd
sub
fsts
enter
xchg
in
add
jmp
mov
loopne
pop
xor
ss
lods
push
mov
ja
mov
adc
ret
cmp
mov
cmpsb
clc
mov
sub
adc
jno
daa
je
fyl2x
and
icebp
pop
cmp
add
scas
adc
daa
cld
out
sub
xchg
push
pusha
sub
cltd
sbb
ljmp
clc
out
dec
jbe
jo
adc
dec
push
adc
inc
xor
stos
mov
xchg
xor
dec
sbb
and
push
mov
out
adcl
sub
js
inc
pop
fdivl
add
ljmp
sbb
nop
mov
fwait
jp
cmpsb
rcrb
mull
mov
fisttpl
mov
sub
dec
or
pop
sbb
adc
cli
stos
ret
cmpb
pop
addb
loopne
stc
adc
and
and
sbb
subl
stc
cmp
mov
push
lret
mov
lods
pushf
xchg
iret
cs
sub
mov
shrl
mov
lahf
xchg
xlat
xchg
mov
ret
lods
dec
daa
enter
aam
xor
mov
mov
xchg
lret
popa
fistl
dec
jno
sub
mov
pop
test
adc
aas
movswl
mov
add
xlat
fisubl
sbbl
mov
sub
nop
cld
jnp
add
cld
movsb
das
push
mov
addr16
out
cmp
and
or
dec
jle
inc
mov
adc
adc
je
in
pop
pop
add
loopne
test
pop
lahf
mov
and
cmpsb
out
push
adc
or
mov
jne
idivl
pause
jno
mov
jo
outsl
pop
inc
sub
mov
push
sub
cmp
add
dec
dec
jle
mov
xorl
aaa
add
cmp
leave
dec
in
leave
test
loopne
or
jg
xor
or
stc
jl
test
cmp
hlt
pop
sbb
sub
add
inc
mov
fsubrs
test
mov
dec
call
popl
cli
mov
cmp
dec
jp
in
xchg
fildll
data16
aad
cmc
mov
subb
adc
lods
popf
cmpb
insl
push
mov
lds
xor
mov
inc
notl
mov
jge
sbb
xchg
hlt
jecxz
mov
add
out
jnp
cwtl
fs
cmp
mov
or
cld
cld
xchg
stos
orb
mov
sbb
dec
test
lcall
pop
fisubs
ret
dec
fdivrl
add
mov
cmpsl
add
movsl
jecxz
cmp
mov
dec
dec
mov
test
in
cmp
sub
xchg
or
cltd
hlt
cmp
xchg
stc
mov
fidivrl
fwait
adc
ja
jl
repz
faddp
cltd
dec
mov
aas
adc
subb
xor
mov
adc
dec
xchg
xchg
pushf
aaa
pop
cmp
pop
iret
inc
pop
mov
xchg
pushf
dec
jecxz
adc
push
jne
pop
lret
dec
dec
jecxz
cmp
jbe
jbe
mov
cmp
pop
sbb
scas
xchg
popa
es
adcl
xchg
pop
pop
push
push
enter
icebp
jo
adc
pop
mov
bound
pop
push
cmp
add
mov
aas
test
out
inc
in
aam
cmc
add
and
in
pusha
push
jmp
dec
and
cmp
incl
iret
jns
in
xlat
mov
fidivl
subb
push
cmp
cmc
data16
imul
xchg
aad
daa
jo
inc
lods
push
xor
ret
inc
mov
mov
or
mov
cs
fldenv
dec
xchg
orl
cmpsb
push
push
addb
lret
movsl
push
popa
jbe
fs
add
es
addps
sbb
push
pop
shrb
mov
or
imul
pop
pop
pusha
dec
dec
ljmp
pop
outsb
pop
les
xchg
dec
mov
mov
test
pop
push
push
jns
jg
rcl
sub
nop
cli
cs
mov
insl
mov
sbb
xor
in
mov
sbb
jnp
scas
sarl
cmc
pop
inc
ds
das
jge
jg
and
out
xchg
enter
adc
inc
arpl
es
xchg
pop
mov
sbb
cwtl
jle
mov
daa
sbb
icebp
aaa
pop
xchg
int
lcall
ret
lods
pop
lock
ret
ja
jb
shrb
out
enter
inc
mov
mov
jge
ds
adc
add
adc
push
or
mov
and
das
xchg
xor
mull
ljmp
cmp
mov
add
lcall
cmp
je
loope
mov
mov
shll
imul
mov
jb
push
fcoml
mov
jbe
add
popa
adcb
xchg
popf
xchg
push
ja
cmpsb
push
orb
jecxz
out
add
mov
insb
mov
icebp
dec
mov
sbb
or
dec
add
and
dec
fistpl
jmp
in
popf
xchg
jmp
jl
mov
out
or
in
dec
jbe
addr16
cld
scas
inc
shrd
clc
fbld
sub
mov
push
pop
icebp
push
sbb
fs
push
xor
fildll
inc
les
sub
loope
inc
xchg
jbe
sub
sub
inc
cli
pop
xlat
cmp
popa
repz
int
pop
add
xlat
add
push
pop
rolb
push
divl
sub
in
fs
lods
sbb
test
ljmp
notb
popa
cmp
add
mov
adc
add
js
dec
sub
and
and
pop
dec
fsubrl
dec
cmp
sbb
cld
dec
mov
outsl
js
in
xor
int
shll
sub
push
cld
int3
imul
sti
and
movsb
cmpsb
mov
mov
outsb
aad
lea
stos
xchg
es
add
repz
or
aam
aad
aam
xor
xor
dec
inc
out
in
mov
jne
loope
mov
cmp
and
add
xchg
lods
loopne
sbb
data16
int3
stos
out
push
js
sarb
dec
shl
test
repz
shl
cmp
or
leave
lock
and
jb
xchg
cmpsl
jne
stc
gs
loope
add
das
xor
lods
mov
mov
push
ja
sbb
xor
xor
dec
jne
jmp
sub
and
inc
jle
jo
out
arpl
enter
adc
ljmp
insb
sahf
jecxz
mov
jg
leave
nop
inc
dec
cmp
add
xlat
jp
and
icebp
xor
pop
lea
out
aad
mov
xlat
mov
in
pusha
mov
dec
xor
lahf
adc
pop
test
in
cli
into
add
xchg
cmpsl
aam
push
lods
shlb
lcall
pop
lret
ret
shl
or
leave
mov
xor
or
jmp
or
arpl
mov
xchg
mov
imul
lahf
xor
pop
int3
notb
je
insb
pop
sahf
jp
push
ja
dec
enter
jo
dec
or
fcompl
mov
lcall
nop
cli
and
push
pop
shl
mov
mov
aas
popf
shlb
sub
test
jno
or
scas
push
scas
or
jecxz
adc
adcb
or
mov
in
lea
push
inc
push
push
cli
aaa
mov
out
aas
scas
pop
ror
jg
mov
push
mov
pop
jg
or
push
rorl
int
cltd
mov
out
or
inc
jle
movsl
adc
pop
mov
inc
inc
fdivl
cmpl
aam
pop
mov
and
scas
lahf
dec
fs
push
cmp
fistl
sbb
pop
xor
dec
int3
pop
inc
sub
arpl
dec
xchg
xchg
mov
data16
dec
jns
lret
mov
pop
mov
sahf
add
dec
add
adc
ss
sahf
pop
insl
mov
sarb
popf
shll
ja
imul
out
fidivrs
out
dec
das
fmuls
call
jmp
lds
jmp
rcll
lcall
xchg
add
push
mov
lds
lcall
jbe
xor
mov
jle
lea
or
cli
test
push
ret
and
cbtw
imul
outsl
scas
sbb
shrb
mov
fmul
add
pushf
fbld
sbb
pop
xchg
mov
in
xlat
rcrb
imul
add
xchg
in
or
daa
es
jnp
inc
sbb
lret
pushf
test
arpl
push
or
or
push
sbb
andl
dec
clc
test
push
push
or
inc
xchg
rclb
mov
int
cli
jae
jg
inc
inc
in
aam
jns
jns
or
movsb
add
cmc
popa
mov
test
jl
mov
ds
jno
test
lret
push
xchg
cmp
and
into
mov
xchg
dec
push
subb
mov
jo
lods
loopne
stos
push
fisubrs
dec
mov
testl
loope
and
adc
and
cmp
ss
shl
sub
cs
inc
xlat
jp
das
jb
mov
lea
and
sub
inc
xchg
mov
clc
shrb
inc
or
inc
mov
sti
mov
pop
lods
sbb
outsb
leave
notb
das
je
cltd
ds
inc
dec
loopne
inc
cmc
push
jle
enter
fidivrs
jae
jb
push
aas
jle
or
or
aaa
lock
push
pop
aas
gs
lcall
lock
aad
iret
and
ret
outsl
loop
jl
cmpsb
pushl
inc
jmp
xchg
dec
mov
aad
cmp
pop
js
mov
loopne
adc
xor
insl
cli
sbb
sbb
repz
in
in
fdivrp
cwtl
jbe
ss
sbb
cmp
pop
mov
dec
mov
movhps
xor
add
or
mov
jle
in
adc
jl
dec
iret
hlt
xor
add
xchg
test
ljmp
push
outsb
pusha
pusha
or
std
or
mov
jae
dec
subl
sub
or
idivb
aad
jg
mov
xor
cmp
pop
movsb
jnp
jae
dec
mov
sub
lods
jecxz
stc
mov
and
cmp
aam
jns
cmp
jb
insl
loope
cmpsl
cmpsb
icebp
mov
test
xchg
aam
inc
cmp
mov
je
cld
fninit
xchg
mov
stos
pop
fwait
in
es
in
xchg
in
out
add
out
jmp
out
imul
lods
shll
mov
imul
jmp
push
sub
outsl
cmp
jno
pop
pop
jo
test
scas
les
add
xor
outsl
shlb
aam
jo
ss
scas
mov
or
int
pop
mov
pop
sbb
inc
mov
shrb
loopne
icebp
xchg
push
mov
inc
mov
inc
dec
outsb
push
inc
mov
adc
insl
lods
bound
mov
sbb
cmp
jl
ret
shll
movsl
xor
xor
pop
fdivl
xlat
fcompl
mov
sub
imul
xor
icebp
xchg
nop
pop
jmp
dec
fidivl
mov
add
cmp
cmpsb
cmp
dec
sbb
push
gs
mov
shlb
ret
mov
jmp
popf
jl
mov
mov
or
out
iret
sbb
loope
bound
cmpsb
insb
int
lahf
sti
sti
jg
ss
not
mov
into
cmpsb
cmp
mov
sub
adc
andb
icebp
jno
sub
and
pop
inc
jnp
dec
push
pop
pop
cmc
sub
jmp
ljmp
sub
xlat
push
xchg
pop
mov
mov
js
mov
lret
test
data16
aas
add
dec
add
xchg
inc
lock
jecxz
pop
popa
adc
xor
cmc
imul
adc
pop
clc
xor
mul
jecxz
lret
outsl
aaa
sbb
jns
jmp
cli
dec
adc
adc
mov
cmp
shrl
inc
lret
aas
adc
lods
mov
add
inc
pop
shlb
mov
xchg
stos
mov
out
pop
cs
xor
mov
jb
jbe
cmp
fildll
imul
stos
adcl
imul
pop
int
push
xchg
add
xlat
push
nop
dec
ja
pushf
push
stc
cmc
mulb
lret
mov
inc
test
out
popf
mov
lret
mov
je
jno
addr16
shlb
cmpsl
jmp
lahf
inc
jg
jg
scas
std
xor
xchg
dec
js
gs
push
lea
pop
mov
xchg
push
inc
or
adcb
ret
xchg
mov
jmp
ret
loop
xchg
mov
inc
pop
div
ljmp
mov
es
add
xchg
xor
xchg
xchg
jecxz
stos
push
mov
int3
push
pop
roll
fcmovbe
outsb
mov
sbb
adc
stc
and
daa
mov
outsl
xor
ss
pavgb
repnz
dec
xor
pop
mov
sbb
add
leave
push
push
mov
sbb
iret
roll
mov
add
mov
inc
pop
ljmp
and
in
test
js
push
fs
into
adc
or
mov
push
mov
xor
inc
stos
loopne
insl
pop
sbb
add
pop
xor
mov
add
loopne
pop
cmp
in
dec
sbb
xor
addr16
cmp
or
cmp
hlt
iret
dec
iret
and
fistpl
xor
jo
push
dec
mov
andl
jge
testb
rorb
push
or
inc
mov
loopne
pop
pop
jmp
mov
sahf
mov
dec
cwtl
add
fcoms
stos
adc
sub
and
pushf
aam
push
rcll
mov
push
or
inc
cmp
jo
jbe
out
outsb
fisubrl
ja
pop
xchg
gs
cs
out
scas
pop
jle
mov
jg
jae
mov
dec
je
xor
jle
jbe
mov
ret
sbb
or
pop
int3
push
shll
xor
movsl
shlb
mov
fs
jp
adc
sarl
out
call
aaa
xlat
and
test
mov
dec
into
cmpsb
daa
jne
and
sti
adc
mov
or
jg
xor
repz
fbstp
mov
ret
rorb
les
jmp
cmp
fsubrl
add
mov
jo
jbe
pop
mov
negb
stos
cli
movb
fs
adc
in
and
fldenv
push
inc
bound
loope
xlat
or
int3
das
fdivr
pop
push
jne
loopne
push
adc
xor
push
add
dec
sbbl
repnz
adc
ds
and
je
xchg
sub
push
push
cs
test
mov
pop
daa
jle
xor
jl
fildl
inc
je
sbb
sub
mov
subl
xchg
adc
inc
ret
or
inc
jae
sbb
ljmp
dec
jno
xchg
sbb
addb
setnp
mov
add
lret
rorb
fistpll
add
jmp
ret
popf
fildll
cmp
data16
adc
ds
aas
and
movsl
sbb
push
mov
stos
cmp
out
test
add
outsb
jg
sahf
daa
clc
adc
pop
sub
sub
bound
sub
xchg
inc
cmp
test
dec
cmp
out
movsb
dec
orb
sub
jl
jl
les
mov
ds
push
pop
ja
and
mull
pushf
lock
jne
xchg
dec
les
in
or
cltd
outsb
xor
mov
icebp
cmp
std
adc
dec
or
mov
sbb
xchg
test
xchg
ret
fstpt
out
xor
shlb
es
cli
add
cmpsb
addl
imul
push
mov
inc
lea
xor
out
repnz
movb
leave
js
mov
inc
mov
out
cs
dec
jp
xchg
in
cmp
pop
dec
stc
setb
and
ds
repnz
dec
test
int
nop
adc
fmull
jne
loop
inc
gs
sarb
xchg
in
sbb
lret
mov
push
loopne
fsubrp
fwait
jnp
cmpsb
fstl
pop
orb
mov
fwait
int3
inc
je
pushf
inc
xor
repz
xchg
xorb
cmp
pop
pcmpeqb
cmp
lock
cmc
and
lock
testl
xor
das
int3
sub
jno
add
xchg
or
inc
adc
adc
mov
gs
lret
mov
je
push
ret
shrl
adc
lret
cmp
es
cwtl
fstpl
ljmp
sbb
cmp
jae
jmp
mov
popa
add
jmp
shlb
lods
pop
jecxz
dec
mov
sarb
lret
adc
inc
mov
mov
fisttpl
fidivl
mov
pop
jg
fsubrs
or
add
cmp
mov
icebp
sub
xor
movsl
in
lret
movsl
shrb
aas
xlat
sub
or
xor
jecxz
dec
or
nop
inc
insb
pop
lcall
outsl
mov
xchg
jle
cmpsl
or
lea
rorl
push
mov
xor
lea
pop
aaa
jne
sbbb
xor
arpl
loopne
jo
dec
pop
clc
xor
adc
sub
pop
lret
mov
push
sbb
pop
mov
pop
std
setg
subb
mov
push
pop
rorb
jns
lret
mov
faddp
idivl
movsl
out
or
call
add
sbb
roll
push
pushf
lods
in
es
mov
or
jp
push
jo
inc
jo
mov
jnp
push
in
push
sub
and
mov
mov
cltd
sbb
pushf
outsl
jl
pop
cmc
cwtl
cmp
mov
xor
cld
ljmp
inc
pop
outsl
push
add
cmc
arpl
push
sub
add
jb
ljmp
push
in
or
jb
imul
mov
pusha
cmpsl
leave
inc
into
cld
and
pop
xor
mov
movsl
test
cmc
jb
add
insl
clc
mov
add
data16
xor
jge
setl
dec
mov
and
dec
in
les
adc
pop
nop
push
cmp
fwait
mull
repnz
loope
nop
mov
fs
iret
cmp
mov
xchg
or
aas
test
setno
pushf
pushf
dec
dec
sub
xchg
call
aam
pop
loopne
jae
lods
bnd
pop
popf
jb
insl
mov
push
inc
add
adc
mov
sbb
pop
adc
lock
and
js
loope
ror
or
mov
nop
adc
fcmovnb
nop
lahf
ror
xor
je
movsb
xor
lret
add
and
xchg
push
mov
scas
jge
lods
mov
or
add
sbb
dec
sahf
xchg
cmc
sub
insb
lret
mov
xchg
push
cld
fwait
inc
in
scas
sub
hlt
out
adc
pop
loop
fisttpl
cltd
icebp
and
xchg
mov
sbb
xor
mov
paddsb
sbb
add
iret
dec
inc
std
shl
jg
mov
std
scas
into
jns
and
add
mov
in
pushl
leave
xlat
mov
sub
mov
push
cmpsl
push
jnp
push
les
cmpsl
xchg
je
xchg
repnz
imul
xor
nop
adc
inc
pushf
pop
out
pushf
xor
push
xchg
ret
iret
xchg
ja
jne
cmp
adc
sub
fsubr
inc
add
cmp
das
movsl
cmp
push
xor
dec
jne
daa
mov
mov
push
int
xor
negl
shr
or
mov
popa
scas
les
inc
pop
cli
scas
movl
aas
pushf
and
insb
sbb
cs
xor
push
shll
mov
add
lods
inc
js
packsswb
sti
fidivs
pop
call
fildl
and
subl
inc
adc
jle
cmp
mov
popa
jmp
shll
add
or
add
mov
xchg
xchg
sbbl
ret
jae
leave
insl
xchg
adc
leave
dec
incb
in
xchg
or
sub
daa
push
push
clc
in
sbb
mov
xlat
add
xlat
std
pop
xchg
sub
ss
jb
mov
daa
out
roll
dec
outsl
ds
cwtl
mov
push
int
dec
out
mov
mov
xchg
lock
push
sub
mov
and
gs
cmc
fs
loop
xchg
test
adc
push
pop
shlb
lds
enter
test
loop
mov
in
cwtl
mov
pusha
outsb
out
lahf
cmp
adc
gs
movsl
in
cmpsb
rclb
sahf
push
fmuls
push
add
pop
test
leave
mov
add
sar
cli
loope
int3
and
cmp
inc
push
xor
dec
jae
mov
gs
ficompl
add
stc
and
xchg
aaa
mov
xor
rcr
aas
push
sbbl
xchg
arpl
stc
inc
pop
adcb
xlat
or
push
adc
int3
fsubrl
sbb
adc
jmp
fsubp
loope
add
jge
lret
mov
jbe
fsubrp
mov
inc
lret
mov
stos
ss
out
jb
iret
cmp
cmp
jmp
clc
jo
jne
orb
out
ret
add
mov
in
js
xchg
push
xor
fs
push
sbb
inc
stos
and
aad
fstps
jp
stos
jge
add
push
mov
cwtl
push
movsb
pop
sub
pop
outsl
aad
xchg
int3
faddp
xchg
rcrb
inc
xchg
aas
push
loope
jle
or
imul
scas
mov
cmp
aas
cld
sti
test
xcrypt-ofb
cmpsl
jmp
pop
sti
in
push
imul
loope
or
sahf
add
sub
imul
dec
lea
test
mov
std
adc
jle
xchg
push
push
mov
mov
push
std
cmp
jbe
mov
test
push
add
daa
nopl
aam
inc
dec
or
nop
andl
loop
pop
cltd
xchg
push
shlb
or
sbb
aad
clc
adc
inc
popf
lds
mov
mov
push
push
mov
mov
es
jl
pop
movsb
pop
setge
lods
pop
and
mov
in
mov
mov
cmp
xchg
and
sub
and
pop
pop
sar
sub
stos
mov
es
fldenv
and
pop
push
ja
in
js
xor
jb
add
aam
fadds
cltd
sbb
cwtl
or
cmp
imul
jns
leave
testl
inc
pop
mov
fadds
pop
or
shlb
xor
addr16
inc
scas
rcrb
sti
cli
jae
cmp
jge
jns
mov
jbe
push
xor
push
mov
cmpsb
xchg
mov
or
pusha
repnz
shl
or
mov
push
scas
testb
push
arpl
loop
cli
adc
sbb
jne
std
pop
je
fsubrl
xor
repz
enter
adc
jle
inc
notl
lds
jmp
out
cmpsb
jno
mov
lcall
repz
pop
sub
and
pop
pusha
nop
cmp
inc
jb
adc
xchg
cmp
js
pushf
inc
lods
add
pop
popa
xor
and
out
imul
inc
mov
shlb
imul
pop
out
cmpsb
and
ret
enter
inc
fisttps
cwtl
test
mov
sarb
xchg
jp
clc
iret
or
fbstp
lock
mov
mov
add
dec
imul
add
and
adc
cmp
xor
mov
adcl
mov
in
pop
test
push
shrb
inc
sub
iret
and
inc
scas
in
out
dec
aam
cmp
mov
fwait
loopne
lds
addb
cmp
ja
outsb
push
mov
fcomip
xchg
cltd
scas
sbb
ds
test
scas
aam
ja
dec
cmp
inc
dec
pop
inc
pop
dec
adc
dec
cli
les
mov
sti
ret
xchg
les
push
add
push
xchg
setb
test
mov
sub
sbb
jge
mov
push
mov
add
aas
outsl
in
stos
dec
mov
adc
mov
lods
or
shl
pop
mov
mov
pop
mov
jp
pop
xchg
push
or
test
sub
dec
add
inc
jle
pop
out
test
inc
outsb
push
inc
les
icebp
push
dec
sbb
sub
js
cmpsb
mov
dec
inc
cmp
add
call
mov
pop
push
mov
mov
jecxz
pop
repnz
sub
cmp
and
fldt
xchg
adc
and
aas
jmp
mov
jo
ss
lock
xor
pop
dec
divl
ret
mov
sub
mov
adc
pushf
stc
stos
sub
cli
sti
xor
sbb
pop
clc
jns
push
test
sets
mov
fldcw
push
and
inc
sahf
lahf
pusha
xor
jg
lret
pop
lods
cmp
inc
adc
mov
mov
inc
inc
out
dec
outsl
add
bound
or
inc
xor
mov
pop
aaa
out
xchg
jno
xchg
cmp
xor
dec
xor
les
xlat
cld
push
mov
out
cmpsl
sub
add
repz
push
push
sbb
mov
add
mov
dec
scas
ds
jle
xchg
out
xchg
mov
stos
add
sbb
ds
pushf
stos
cmpps
push
sub
pop
scas
cs
iret
mov
dec
andb
push
sub
adc
jo
or
mov
mov
pop
and
or
movsl
cmp
rclb
xor
mov
hlt
adc
dec
and
push
mov
add
jp
out
mov
insl
pop
dec
jnp
dec
je
test
xchg
push
mov
ds
xchg
add
xchg
cmp
insb
mov
dec
dec
xchg
mov
cmp
jo
and
lods
jae
lds
add
sbbl
adc
or
xchg
popf
inc
xlat
pop
faddl
out
sub
jmp
xor
and
aam
loopne
cmpb
push
sahf
fs
ds
and
pop
std
je
sub
outsl
push
stos
sbb
fnsave
lods
mov
inc
add
add
inc
xchg
cli
or
out
stos
imul
adc
mov
or
add
mov
xchg
push
fwait
xor
jle
fsubl
sbb
xor
push
jle
push
les
outsl
aam
lret
in
out
js
arpl
mov
adc
iret
sub
jg
gs
mov
mov
les
gs
hlt
hlt
push
mov
int3
pop
rcrb
mov
fiaddl
or
lods
stos
mov
fldcw
mov
ret
movsl
cmp
mov
xlat
ljmp
in
sub
or
xchg
adc
loopne
push
jbe
pop
int
lcall
call
xchg
fbld
cld
inc
test
flds
push
mov
cmp
sub
mov
cltd
mov
sti
loop
jo
fists
dec
pop
in
pop
push
test
addr16
sub
aad
lock
inc
ljmp
arpl
ljmp
cmc
loope
mov
inc
data16
cmp
sldt
loop
cmp
mov
push
push
cwtl
fwait
cmc
test
rcrb
push
or
stc
sbb
lods
mov
inc
and
lea
ss
ret
aaa
jl
call
jae
sub
fsubrl
or
pop
push
pushf
inc
faddp
lock
ret
mov
jno,pn
sti
sub
fsts
rcrl
testb
leave
sub
imul
aam
icebp
sbb
fmull
mov
outsl
hlt
out
ret
mov
sub
inc
insb
push
xchg
jb
adc
fsubs
mov
pop
repz
jmp
repz
insl
cmc
hlt
std
div
jae
scas
lds
aad
adc
scas
jnp
xor
mov
divb
pop
mov
ljmp
into
fiaddl
ja
pop
push
or
icebp
cli
mov
stc
jl
cmp
icebp
loopne
mov
jb
test
lahf
mov
xchg
xchg
cmpsl
movsl
stos
fimull
in
out
sub
jne
jecxz
cwtl
add
popa
xchg
jbe
mov
or
add
in
xchg
xor
sub
mov
adc
push
outsl
call
jno
fucomp
inc
push
mov
jo
in
int
push
inc
adc
mov
pop
jl
in
cmp
movb
scas
mov
sub
filds
into
mov
mov
lahf
outsl
js
jmp
cltd
lock
adcl
lcall
jg
les
sbb
fisubs
loopne
and
sbb
and
xor
inc
imul
lds
jae
or
cmp
sub
in
add
and
cmp
and
mov
rcll
imul
jmp
sub
xor
mov
and
and
mov
imul
sarb
and
lea
or
push
or
mov
inc
popf
jl
mov
sub
inc
je
ds
test
daa
rcrl
jl
xor
and
subb
jne
fisttps
lahf
dec
mov
xchg
adc
xor
fmul
in
lds
push
les
mov
or
enter
push
push
pop
add
sub
pop
mov
xchg
mov
mov
int
movsb
into
push
jns
cmc
jbe
mov
inc
dec
scas
dec
and
test
cltd
inc
mov
inc
je
fwait
and
mov
sub
mov
pop
fwait
enter
adc
dec
or
sarb
leave
test
adc
xor
mov
jbe
ljmp
fmuls
pusha
lods
cltd
iret
adc
and
mov
mov
push
je
out
repnz
fcmovne
aam
pop
outsl
cmp
push
jnp
push
jo
push
and
cmpsl
scas
sub
fcmovu
ds
mov
inc
mov
xchg
loopne
inc
jnp
in
mov
jbe
pop
sub
rcrb
cmp
pop
mov
out
pop
inc
into
pop
out
into
sahf
mov
inc
dec
inc
cmp
addr16
xchg
jbe
pop
lret
push
test
pop
mov
arpl
bound
lea
jb
inc
mov
inc
test
sbb
xchg
hlt
push
notl
dec
cmp
xlat
mov
xchg
add
lds
cmpsl
int3
cmc
mov
mov
pop
adc
cmpsb
test
jns
add
mov
add
xor
cmc
mov
decb
ja
nop
inc
mov
pop
aaa
jnp
cmpsb
data16
lea
shrb
cli
xor
rcl
in
test
add
push
idiv
dec
dec
cmp
das
jne
ret
mov
mov
cmp
xchg
inc
dec
rcll
mov
add
fmuls
and
dec
daa
push
and
mov
call
add
ret
shlb
imul
je
pop
sub
orb
cmp
mov
xchg
cld
leave
loop
adc
and
sar
mov
es
cmp
mov
test
and
inc
frstor
in
sahf
or
aad
mov
push
xchg
mov
in
adc
nop
loop
int
xchg
lds
mov
mov
add
push
jno
and
sbb
sbb
mov
mov
jns
fidivrs
dec
scas
mov
or
daa
testl
fisubrl
xchg
adc
loop
mov
gs
pop
insb
mov
mov
jp
js
fdivs
in
decb
mov
xchg
sub
lahf
out
daa
push
shll
mov
jb
push
jge
imul
jmp
test
lea
popf
sub
jb
mov
out
pop
enter
inc
lret
out
mov
fistpl
sbb
enter
mov
jb
sahf
fldenv
out
loope
lock
bound
adc
mov
push
push
fwait
sub
adc
cli
addr16
test
pushf
es
ds
clc
inc
aam
imul
lds
ret
add
nop
push
jp
push
addr16
cmc
rcrl
xchg
cli
inc
push
mov
jecxz
inc
loop
xchg
inc
adc
sbb
pushf
add
mov
cmpl
loope
test
nop
mov
cmp
call
fldenv
dec
les
jmp
jecxz
adc
add
add
pop
pop
lea
cmp
sbbb
jae
xlat
adcl
inc
cmp
xchg
icebp
fcom
sub
into
ds
insb
sub
dec
sub
add
mov
pop
mov
lods
repnz
push
jo
repnz
dec
mov
jo
das
addr16
jns
fisttpl
adc
leave
pop
and
cld
stos
movsb
inc
in
nop
fisubs
sbb
mov
cmp
lcall
push
sbb
mov
or
jle
xchg
out
andl
repnz
lahf
add
and
fstps
mov
add
test
lret
and
pop
jmp
loope
xlat
fisubrs
ret
xor
xchg
into
jl
adc
push
pop
aas
pop
stos
roll
xor
lret
push
jns
and
xchg
std
test
out
pand
add
movsl
pop
data16
sti
xchg
cld
dec
push
jne
push
aaa
xor
lods
xor
add
xchg
mov
call
ljmp
fsubrl
test
ja
cmpsb
pop
and
outsb
sarb
popa
mov
pop
in
inc
test
aaa
loopne
push
data16
outsl
cmp
scas
cmp
aas
xchg
mov
xchg
cmp
mov
repnz
addr16
fidivl
adc
jns
mov
out
pushf
shr
jae
leave
and
fwait
stos
mov
inc
arpl
movsl
inc
or
lods
popa
js
inc
aas
add
cs
dec
sbb
cmp
popa
jbe
test
test
sbb
fwait
leave
lret
fmull
dec
cmp
mov
mov
or
pop
xchg
mov
jg
mov
mov
and
lahf
ret
and
and
icebp
push
mov
gs
push
or
jnp
int
movsb
shrl
je
ret
imul
push
fdivrp
jg
cmp
jge
mov
push
add
mull
mov
pusha
cmp
or
dec
jno
ror
hlt
cmp
or
cs
je
cwtl
xchg
mov
inc
jp
shrl
dec
cli
cmpsl
pushf
xor
pusha
mov
test
inc
stc
nop
out
pop
sub
adc
mov
loopne
add
push
xchg
movsl
mov
les
mov
jecxz
mov
andl
repz
scas
rcrb
mov
inc
enter
inc
sbb
call
xchg
pop
scas
aam
or
imul
out
mov
in
aas
lea
pop
rorb
stos
dec
mov
mov
leave
xor
outsl
jne
cmc
into
mov
xchg
lahf
adc
cltd
imul
sahf
add
bound
lods
insb
add
and
inc
ss
mov
dec
lret
adc
outsb
pop
pop
loope
movq
add
push
in
lds
mov
sub
jbe
or
mov
mov
addr16
andl
rorb
pop
jecxz
cmp
loopne
rcll
pushf
stos
dec
fistl
fs
mov
mov
mov
in
arpl
ja
adc
sti
pop
xor
push
clc
call
jp
test
xor
repnz
ret
pop
scas
cmp
shrl
fisttps
inc
negl
push
movsb
inc
pop
pushf
out
fstpl
imul
loopne
fadd
xor
int3
mov
push
ret
divb
test
xor
mov
js
push
or
sahf
push
cmp
jmp
scas
dec
pop
or
xlat
imul
cmp
rcrb
jb
shr
fs
sbb
scas
cvtpi2ps
add
push
xor
test
inc
and
dec
fnstsw
inc
notb
addl
lods
jle
sarb
leave
aam
adc
jne
jno
daa
pop
idiv
inc
mov
icebp
sub
push
clc
std
add
cld
fs
push
xchg
jnp
push
mov
fisttpl
popa
int
push
lods
test
cmp
or
jno
pop
xor
test
fadd
inc
ljmp
and
ljmp
and
and
push
push
pop
shr
mov
fisttpl
cwtl
scas
sbb
rcll
inc
orl
std
mov
int3
push
push
pop
lock
sub
adc
cmovnp
mov
aaa
pop
in
jg
aas
ret
mov
lods
icebp
imul
sarb
xchg
in
mov
jmp
jnp
pop
test
jbe
lret
int
jg
in
push
pop
imul
cmp
push
sbb
mov
or
sub
add
xchg
mov
inc
jnp
scas
add
mov
leave
xchg
sti
pop
adc
fmuls
push
cld
call
mov
clc
sbb
fwait
mov
sub
mov
and
push
fimuls
test
or
mov
cwtl
lods
xchg
xchg
pop
and
cmpsl
movsl
adc
dec
and
cld
loopne
add
and
std
rolb
or
out
iret
xor
inc
outsb
lea
mov
fadd
dec
or
mov
insb
scas
rcrb
mov
xchg
ficomps
push
xor
out
jne
sti
popf
pushf
lcall
pushf
pop
cmp
mov
lock
and
les
lods
push
jae
fwait
inc
mov
pop
dec
jecxz
shll
dec
mov
loopne
scas
mov
cmc
shlb
xor
adc
mov
stos
in
cs
mov
mov
stc
mov
sbb
xor
int3
dec
inc
or
data16
lds
int3
jg
mov
cmpb
rorb
pop
lahf
sbb
add
lock
mov
stc
pop
cmpsb
mov
aas
nop
aad
xlat
mov
and
insb
fidivl
mov
movsb
ja
pop
repnz
mov
jg
push
test
jb
fwait
out
daa
pop
lock
add
cmc
out
test
push
imul
mov
xor
mov
fmuls
pusha
jne
loop
mov
xchg
int3
xchg
jle
and
cmpl
or
fdivs
ja
inc
and
pushf
int
inc
cli
dec
sti
add
fcomi
stos
and
lock
in
xchg
and
adc
xchg
aam
jnp
cld
xchg
leave
jo
pop
mov
push
mov
pop
stos
pop
mov
inc
and
cld
ds
out
pusha
pop
mov
daa
notl
cwtl
cmc
pop
out
cmc
fidivrl
roll
aaa
out
mov
adc
insb
adc
test
jle
mov
xchg
les
xor
int3
outsl
stc
inc
fwait
sub
lret
xchg
stos
mov
cs
and
jne
xchg
jbe
scas
mov
clc
inc
sub
jmp
adc
sbb
pop
in
pop
mov
fcoml
pop
dec
aam
test
sbb
dec
xchg
icebp
loopne
pushf
jmp
repz
xchg
add
dec
rcrl
fs
rcl
jae
jnp
not
adc
gs
aad
ja
cli
xchg
lds
in
sub
popf
xorb
aad
ret
dec
pop
add
nop
and
js
xchg
ss
sahf
mov
scas
push
pop
insl
sub
out
fdivr
sub
dec
and
test
push
dec
xor
mov
xchg
inc
cmp
inc
iret
sbb
sti
mov
aam
adc
jg
fcomps
aam
xchg
mov
adc
cmp
push
mov
gs
and
imul
mov
mov
in
push
cmp
int
jns
movsb
imul
jecxz
cmp
push
lock
mov
shrb
and
cld
cmp
fstp
sub
xchg
lahf
in
pop
in
mov
jge
dec
loope
aad
sti
mov
sub
adc
ja
les
cmp
mov
jo
ljmp
sub
in
mov
adc
sti
frstor
inc
mov
dec
pop
mov
mov
pop
jbe
adc
sub
hlt
fdivl
scas
sub
pop
loop
bound
ret
enter
testb
xorl
cmp
addl
lret
push
fdivl
jnp
xchg
ljmp
dec
xchg
adc
shl
jne
int3
inc
and
mov
sbb
inc
add
adc
ss
inc
mov
sti
dec
or
mov
xchg
xchg
jne
mov
or
loope
xchg
inc
lds
ret
inc
xlat
mov
xor
jnp
jp
add
push
addl
dec
push
xchg
or
add
push
int3
mov
mov
aam
jmp
and
push
push
sbb
pop
inc
test
cmp
mov
enter
cmp
xchg
dec
mov
push
adc
xchg
icebp
arpl
adc
jnp
push
inc
xor
pop
xchg
add
and
cmpsb
mov
add
pop
add
and
mov
and
jmp
lcall
cmp
inc
inc
scas
js
test
xchg
pop
ret
sub
add
sbb
out
ljmp
stc
les
imul
push
pop
pusha
popf
lret
int3
outsl
movsl
sub
inc
test
and
mov
sbb
push
jg
cmp
addl
mov
mov
mov
push
ret
xor
or
cltd
loopne
shlb
ss
adc
enter
mov
or
mov
into
lods
sub
add
out
stos
mov
inc
call
and
pop
pop
jno
xor
notl
sbb
mov
mov
out
push
rcrb
push
push
cmp
imul
cmp
pop
lods
loope
daa
xchg
ss
int3
sub
clc
xchg
add
mov
xor
lods
dec
or
xchg
mov
and
jno
xchg
cmpl
push
fstl
in
sub
push
inc
and
xor
jge
andl
adc
push
cli
cmpsb
pop
out
push
loope
xchg
sbb
cmp
pop
cmp
and
icebp
je
inc
sub
push
add
stc
mov
cli
cmp
mov
sub
push
test
les
push
imul
xor
xchg
outsl
add
push
lods
dec
and
inc
add
mov
leave
mov
or
mov
pop
jbe
loope
mov
xchg
ja
arpl
loopne
outsl
or
hlt
out
push
lret
lods
pop
cwtl
leave
cmpsl
stos
clc
or
insl
cld
pushf
sub
xor
push
xor
lret
movsb
jno
or
das
xchg
repz
adc
or
jmp
cmpsb
adcb
jnp
sub
dec
insb
pop
push
cwtl
scas
ss
scas
clc
push
add
scas
jb
mov
mov
je
jne
js
or
xchg
mov
push
sar
adc
gs
xchg
int3
ljmp
dec
mov
cltd
aad
lahf
lods
stos
push
sti
pop
lods
lahf
jno
mov
addl
jno
and
pop
sbb
adc
mov
outsl
and
ljmp
xor
cmpsb
in
adc
mov
pop
dec
or
or
inc
mov
or
lahf
andb
inc
call
inc
stos
mov
jecxz
pop
push
jmp
inc
leave
inc
dec
sub
xor
lds
or
or
xchg
cwtl
mov
add
test
int3
ja
jne
ja
dec
out
mov
ficomps
add
jno
push
lock
ret
sbb
mov
inc
cltd
aas
daa
or
ret
or
pop
cmp
inc
aaa
inc
cmp
test
repz
adc
icebp
xor
fdivl
insb
les
push
mov
out
or
int
push
scas
xor
or
mov
xchg
dec
repnz
repnz
xchg
jbe
jno
pop
and
sbb
fisubs
setno
jnp
push
test
inc
cmp
mov
lahf
cmp
lret
fiaddl
sbb
and
fnsave
mov
insl
adc
push
mov
cltd
mov
js
cmp
mov
adc
iret
dec
jge
mov
ror
xlat
dec
push
and
xor
mov
mov
ret
mov
xchg
push
hlt
fdivrp
lock
enter
cmp
loope
mov
add
or
adc
rorb
lods
fsub
xlat
ss
jmp
ja
lods
inc
sub
ss
test
ss
ds
in
mov
push
and
jno
out
pop
sbb
jmp
pusha
outsb
jmp
bswap
icebp
or
jmp
sbb
int3
mov
mov
loop
adc
iret
pushf
xchg
fucomip
cltd
es
cmp
movsl
sub
push
insb
lcall
lahf
out
or
mov
push
inc
dec
shll
das
rcrb
add
call
xorl
rcr
aad
cmp
add
mov
xchg
adc
mov
test
cmp
cmpsb
jb
adc
push
xchg
push
add
push
xorl
je
cmpsl
and
dec
mov
mov
mov
lods
mov
cs
cmp
cmpl
mov
movnti
pop
stos
push
data16
xchg
pop
stos
jo
scas
adc
sbb
xor
lock
mov
jl
xor
jmp
mov
ljmp
push
mov
nop
pop
push
xor
fists
out
in
imul
inc
test
pop
jne
mov
adc
jmp
ja
pusha
dec
jecxz
bound
dec
je
dec
insb
out
rcr
fdivr
shll
fsubp
mov
ret
sbb
inc
adc
outsl
fwait
prefetch
or
loope
pop
or
mov
fcomp
and
pop
popf
add
jns
xor
outsb
xor
xchg
pop
insb
ret
inc
push
cmpsb
hlt
xchg
xor
mov
pop
jl
mov
stc
cmpb
push
pop
and
lds
ret
fwait
mov
push
xor
stos
cmc
out
aaa
test
pop
pusha
xor
add
xlat
sbb
sbb
cmc
push
pop
test
in
leave
jg
push
mov
and
sahf
sub
cltd
aas
dec
push
lret
sbb
loop
mov
adc
cltd
xor
jno
xchg
add
push
insb
shrb
sbbb
inc
repz
pcmpeqw
add
add
ljmpw
cli
js
or
in
sti
cwtl
cmp
ret
mov
mov
add
loop
icebp
loop
xchg
mov
lea
or
mov
int3
aas
and
xor
or
or
pop
push
sbb
add
shlb
xchg
dec
insl
aad
loopne
pop
shlb
xchg
push
fsts
sub
xchg
sti
mov
sbb
lahf
jbe
sub
adc
xchg
inc
push
pusha
loope
iret
out
pushl
loopne
arpl
cltd
adc
jmp
jno
and
popf
nop
mov
std
aam
xor
in
les
mov
cmpsl
cltd
in
xchg
mov
cmc
xchg
mov
lahf
xchg
in
adc
nop
pop
fnstsw
aaa
fcmove
mov
xor
insb
sbb
insl
pop
pop
pop
cmp
pop
mov
sahf
jb
xor
arpl
adc
ds
loopne
adc
jecxz
das
addr16
xchg
dec
out
add
negl
push
dec
pop
add
test
dec
insl
call
sbb
aas
ss
mov
xor
dec
push
mov
cmc
popa
cmp
into
jno
mov
inc
or
jnp
jl
push
in
pop
ret
add
enter
test
and
mov
addr16
insb
push
pop
pop
inc
mov
inc
rclb
xor
sub
cmp
ljmp
int
sahf
outsb
or
push
das
sahf
ret
cmp
lahf
sbb
xlat
pop
pop
ss
adc
clc
fwait
jecxz
jae
in
jno
fdivr
in
pop
lea
test
push
movsl
lret
cwtl
aas
jg
push
mov
jno
or
ljmp
or
mov
pop
mov
jge
sbb
sti
mov
jo
out
adc
adc
lcall
loopne,pn
dec
imul
mov
sub
xchg
xor
lcall
or
jbe,pn
icebp
fwait
test
cmp
push
mov
xchg
or
jl
inc
sub
lods
gs
cmp
insb
adc
add
je
lret
dec
cmp
mov
mov
stc
addb
sbb
iret
scas
in
hlt
dec
fadds
inc
mov
insb
jmp
sti
mov
testb
add
add
dec
push
and
call
ljmp
pop
dec
sti
jle
cs
sbb
repnz
je
push
mov
shlb
nop
and
icebp
aam
mov
jle
inc
hlt
inc
test
fucomip
mov
ret
mov
xchg
dec
imul
lods
std
xchg
mov
jecxz
clc
cmpsl
pop
stos
inc
xor
xor
or
fisubrs
imul
repz
pop
outsl
jl
shl
and
push
insb
inc
add
and
in
pushf
in
jbe
nop
mov
sbb
push
add
dec
lcall
in
xchg
cld
inc
and
dec
mov
mov
in
movsb
mov
ffree
xchg
in
loope
gs
popa
fistl
jno
xchg
or
andb
adc
pop
stos
adc
call
stos
insb
lds
movsl
jb
mov
mov
cs
inc
jmp
inc
add
and
stos
adc
jns
pop
jp
mov
sahf
sahf
and
call
xchg
js
jno
ret
jl
and
pop
pop
movsb
roll
inc
dec
fcmovne
mov
adc
mov
packssdw
fisttpl
sbb
sub
xor
dec
mov
mov
loopne
inc
mov
lahf
test
inc
in
movsl
jle
aaa
push
push
sbb
rcr
jmp
fimuls
int3
sub
cmp
mov
xchg
aad
mov
xchg
rcr
add
in
dec
or
fnstcw
out
shrb
jmp
mov
adc
push
cmp
add
pop
call
stos
leave
sbb
xchg
add
or
mov
jecxz
rcrb
lds
dec
xor
stc
xorl
or
xor
and
fwait
push
test
out
mov
cmp
test
enter
xor
out
jge
sti
adc
mov
jg
pop
and
cmpsl
outsb
int
jmp
mov
push
push
loope
jne
sub
cltd
imul
stos
cmp
jae
add
and
mov
mov
or
sub
pop
pop
mov
sbb
imulb
js
movsl
outsl
int
inc
rolb
shl
dec
xlat
jl
fidivrl
leave
fisubrs
push
ds
data16
push
xchg
je
push
insb
mov
push
shl
enter
cs
push
orl
mov
mov
rclb
rclb
js
and
mov
lret
dec
repz
mov
lret
xlat
inc
dec
enter
pop
mov
mov
lret
das
shlb
lcall
sbb
insb
loop
dec
xor
cld
outsl
pop
xor
stos
mov
sub
xchg
mov
xchg
mov
cmp
scas
mov
mov
sbb
lds
lods
fwait
sub
ljmp
push
cli
jge
in
sahf
or
clc
mov
jno
aas
jmp
cmp
mov
cmp
test
mov
lds
mov
aaa
mov
and
add
jo
xchg
jae
jnp
mov
sbb
fcmovnbe
add
sbb
jecxz
fldenv
shll
test
xchg
js
js
xchg
cmpb
sahf
mov
inc
testb
stos
adc
scas
ja
mov
sub
add
insl
jge
out
repz
and
mov
jmp
mov
cmp
ds
hlt
lds
pop
jne
lret
pushf
insb
stos
xor
xchg
mul
rclb
jge
in
push
sbb
in
idivb
sbbb
idivl
icebp
in
imul
int3
into
loopne
pop
call
out
xor
mov
lea
sbb
loope
xchg
andl
in
pusha
stos
fwait
dec
cli
aas
insl
cmpsb
push
fisubrs
dec
xchg
mov
and
ja
inc
mov
sti
jns
rolb
sub
add
inc
cs
loope
sahf
add
sub
xor
mov
sahf
in
adc
add
or
push
ja
push
je
push
filds
rol
xchg
jg
mov
xchg
mov
push
ss
mov
sbb
loope
into
ret
shll
and
mov
adc
popf
or
ja
mov
pop
xchg
xlat
mov
loopne
out
inc
mov
dec
push
xor
rclb
or
pop
out
jge
adc
or
push
sar
loop
pop
je
mov
popl
xor
inc
dec
pushf
xchg
cmp
and
gs
popf
movsb
xor
rorb
sub
push
mov
jno
push
stc
pop
pop
sbb
pop
inc
popl
inc
imul
rorl
mov
cld
icebp
xlat
test
mov
arpl
mov
or
js
cmp
addl
scas
inc
testb
sub
mov
aaa
or
fidivrl
xchg
xchg
add
into
test
ret
cmc
cmp
ljmp
outsb
mov
pop
gs
pop
and
sti
add
movsl
imul
ja
sbb
adc
mov
lret
pop
mov
add
dec
cltd
ret
ret
lods
jns
jmp
pop
jno
lods
push
stos
mov
lret
jns
pop
pusha
dec
mov
mov
cmp
hlt
frstor
inc
mov
out
jbe
and
mov
out
jle
mov
jg
cmp
jbe
clc
fldenv
in
push
jle
test
or
sbb
dec
xchg
or
mov
push
repnz
je
int
push
pop
cmpsl
repnz
jp
and
lods
dec
add
test
adc
and
in
scas
cmp
push
pop
xchg
cmpsb
mov
pop
sub
pop
mov
popf
movsl
outsb
push
jle
loopne
sbb
loopne
inc
inc
out
sub
movb
cld
push
aam
cmp
lods
pop
adc
int
cmp
fidivs
repz
xchg
movsb
sarl
cwtl
jns
inc
sbb
clc
pusha
xor
dec
sub
jno
sub
scas
pop
fs
aas
jae
dec
pop
dec
dec
xor
mov
jp
daa
sub
mov
cmp
inc
das
in
inc
mov
rcll
int3
jae
or
mov
movsb
mov
test
cmc
repz
mov
sub
cmpsb
push
mov
mov
inc
inc
add
or
sbb
popa
aam
fcoms
mov
imul
int3
push
push
gs
cmp
mov
add
add
pop
xchg
iret
in
jmp
adc
push
fstps
arpl
in
pusha
loope
or
pop
hlt
or
mov
clc
lods
jmp
xor
and
in
xchg
out
in
pushf
and
ds
jp
dec
push
in
sbb
add
mov
jno
stc
pop
push
aaa
dec
sub
lret
sbb
xor
sub
sahf
daa
mov
test
sub
xchg
stos
xchg
enter
push
jp
adc
push
and
sbb
push
hlt
movsb
dec
sti
ss
scas
inc
adc
and
gs
bound
xchg
lret
mov
jnp
dec
scas
sbb
jae
addl
mov
sub
lcall
lret
shr
fsts
sti
add
rorl
xor
loop
lea
std
mov
mov
cmp
clc
repnz
nop
icebp
mov
mov
jle
push
enter
out
inc
push
push
jne
sub
jno
mov
push
outsb
push
mov
iret
inc
dec
xchg
stos
pop
popa
outsl
fnstsw
arpl
xlat
sbb
dec
xchg
invd
dec
shl
aaa
and
or
mov
in
mov
push
lock
dec
iret
out
and
xor
out
and
cmp
cmpsl
rorb
lahf
push
mov
inc
jb
outsb
cmp
dec
mov
insl
and
jge
and
outsl
fsubrs
pop
gs
imul
jb
shl
xchg
or
xlat
sbb
iret
mov
das
stos
fwait
insl
dec
or
scas
pop
dec
pop
and
push
nop
push
cmc
mov
das
xor
rcrl
or
sti
or
jno
cmp
jo
mov
test
das
or
lcall
adc
fbld
in
sbb
pop
mov
or
rcrl
cld
mov
cmp
pop
scas
bound
fwait
push
ja
sub
ds
pop
mov
hlt
xchg
mov
cmpsl
jns
shrl
lock
std
cmp
add
mov
adc
scas
fistpl
pop
loop
push
ss
push
loop
sub
fcmovne
pop
mov
push
test
mov
fs
insb
push
addb
mov
sbb
aaa
js
push
fs
add
loopne
adc
stc
rorb
andb
ss
push
add
mov
xlat
ffreep
nop
mov
out
add
enter
jl
shll
js
mov
std
into
addr16
push
and
mov
push
push
shlb
and
pop
mov
pop
mov
jb
and
mov
dec
xchg
sbbb
incb
movl
comiss
data16
lock
lret
cmpsb
adc
and
push
ret
pop
or
pop
cmpsl
cli
testb
fwait
push
xor
pop
out
scas
sbb
fdivl
adc
fistps
loop
lret
lods
int3
xlat
leave
add
xor
fbld
xchg
pop
test
unpckhps
ljmp
insb
mov
pop
cmpsl
jmp
or
shll
add
aas
pop
mov
js
pop
dec
movsb
ja
add
xchg
mov
push
and
ljmp
mov
mov
bound
push
rcrl
mov
clc
push
fadd
das
int
jo
mov
and
push
pusha
in
negl
loop
outsl
lret
test
movsb
xor
bound
xchg
bound
sub
stos
jno
xorl
jns
mov
outsl
fsub
cmpsl
cmpsl
sbb
mov
arpl
scas
movsb
in
dec
pop
sbbb
sbb
cld
dec
sub
push
mov
pop
mov
mov
xchg
mov
ljmp
cmp
sbb
mov
push
out
imul
sub
dec
jge
orl
out
andb
dec
int
adc
test
jp
or
rorb
sub
xor
sar
add
jno
sbb
push
popf
shrl
dec
dec
jno
inc
pop
and
sbb
cld
int
and
jo
or
mov
ss
out
sbb
int
rcrb
std
mov
jb
jmp
xchg
repnz
rclb
movsl
dec
lret
push
insl
std
gs
notl
orl
cmc
pushw
mov
add
mov
adc
data16
cmp
aad
inc
jb
pushf
insb
add
out
fcompl
in
push
lahf
fimuls
add
jmp
repz
aas
cwtl
pop
xchg
jp
insb
mov
call
cmp
inc
jb
push
cltd
adc
loopne
int3
lods
cltd
mov
clc
and
std
mov
and
mov
sub
xchg
mov
mov
loope
push
add
rcl
fwait
sub
daa
ljmp
fs
mov
sarl
inc
aaa
adc
mov
add
mov
out
psubsb
cmp
push
sbb
mov
imul
sbb
xchg
jnp
push
fbstp
push
adc
pop
rolb
ljmp
jo
push
in
fiaddl
repnz
icebp
push
xor
or
cli
inc
ljmp
cli
fists
push
fdivr
mov
adc
jno
jns
dec
pop
jp
out
or
outsl
pop
loop
xor
and
inc
mov
cwtl
ds
repz
bound
sar
data16
mov
mov
mov
dec
shrl
xchg
mov
xchg
roll
mov
xor
mov
fimull
mov
pop
sbb
clc
add
orb
cld
push
cmpsl
push
cli
sbb
pop
mov
cmp
jle
sbb
insb
ret
mov
fsubrs
popa
ret
sub
movsl
pop
pop
fbstp
add
sub
jmp
enter
mov
sarb
fiaddl
fcmovbe
mov
dec
dec
sub
fistl
push
test
push
add
pop
xchg
mov
or
sub
pushf
push
xchg
push
push
push
push
scas
xor
aaa
fwait
mov
pop
fsubs
test
xlat
sub
lods
aaa
in
negl
aad
nop
mov
mov
les
fs
inc
pop
sub
adc
lea
lret
pop
out
rcrl
jo
popf
mov
aaa
mulb
jl
outsl
push
fisubrl
mov
xchg
pop
xchg
bound
out
out
cmpsb
pusha
sbb
or
or
movsl
cmp
inc
pop
rcrl
out
jne
cmp
cmc
sbb
test
out
add
lods
fisubs
mov
mov
and
push
jle
sub
or
mov
adc
sbb
rorb
and
adc
repnz
pop
inc
bound
sbb
popf
js
sbb
lahf
or
xchg
ret
or
mov
aaa
dec
das
dec
iret
icebp
lahf
aam
lahf
das
insb
xchg
mov
lahf
pop
push
pop
jne
lcall
add
scas
cmpsb
mov
push
or
add
hlt
addl
je
lahf
cmp
rorl
xor
sub
das
xor
ficoml
rorb
rcrl
and
xchg
xchg
loope
cld
xchg
cs
adc
cltd
lds
call
mov
push
imul
outsl
xchg
lret
or
xchg
dec
daa
add
mov
mov
ret
insl
dec
push
je
out
lahf
xor
clc
popa
xor
stos
jecxz
sub
ss
dec
adc
pop
mov
clc
adc
or
repz
cltd
push
xchg
xchg
fmuls
dec
or
cs
xor
pop
lret
into
mov
jge
push
pop
mov
scas
mov
sub
inc
pop
mov
xchg
sbb
sub
cmp
iret
sub
sbb
cld
jge
push
adc
mov
jno
cmpsb
jmp
jg
clc
mov
popf
movsb
and
and
mov
stos
ds
push
je
jl
imull
mov
push
push
or
popf
sahf
dec
add
jmp
mov
popf
repz
jecxz
das
mov
icebp
aaa
push
mov
lock
cli
stos
sbb
xorl
ret
test
cmp
jnp
addr16
lret
dec
jmp
jns
adc
dec
sahf
cmc
mov
pop
lret
fisttpl
cltd
inc
xchg
lods
cmp
mov
rcrb
sbb
test
and
les
push
or
pop
mov
pop
xor
inc
sub
jb
cs
std
xor
jnp
xor
pop
ss
sub
notb
test
mov
add
in
jno
dec
jnp
test
stos
imul
push
cltd
clc
rcll
lods
inc
lock
lret
pushf
sbb
mov
popa
dec
aam
loopne
hlt
cmp
enter
fbstp
xchg
mov
mov
je
bound
jge
pop
vpavgb
jmp
addr16
out
daa
jbe
cltd
into
out
lret
dec
push
sub
dec
xlat
insl
stos
inc
faddl
mov
in
scas
pop
scas
lods
hlt
inc
repz
xorl
dec
mov
dec
and
shl
sub
sub
sti
pushf
imul
adc
adc
mov
es
cld
and
add
push
lock
dec
ljmp
or
movsb
std
shl
mov
mov
cmpsb
fwait
xor
ss
je
push
inc
and
dec
scas
pop
enter
rcrb
xor
sub
sub
sti
shll
sub
sbb
aaa
pop
add
out
lds
xchg
push
into
loope
leave
scas
or
in
or
sahf
int3
push
jmp
movsb
jge
pop
cmpsl
arpl
insl
adc
add
stos
mov
sahf
std
cmp
mov
adc
imul
out
and
clc
jge
push
out
adc
mov
pop
lds
pop
push
dec
mov
mov
xchg
adc
stc
xchg
add
aas
pusha
and
jg
test
adc
repnz
adc
sti
mov
mov
add
push
lret
jns
out
les
subb
adc
shrl
daa
and
mov
mov
fisubl
std
inc
adc
xlat
lock
push
xchg
les
sub
ja
cmp
inc
test
and
pop
clc
icebp
sti
sbbl
inc
and
xchg
cmpsl
gs
mov
jg
addr16
adc
jnp
repz
fs
orb
jno
inc
fildll
adc
leave
push
inc
push
dec
push
leave
nop
push
mov
lea
fwait
push
xchg
ljmp
frstor
insb
notb
jmp
push
cmp
outsb
inc
sbb
cli
sub
or
shrl
iret
les
and
or
xor
lret
jecxz
add
out
push
rorl
repz
jo
or
mov
fcomps
cmpsb
jl
enter
pop
nop
testl
enter
add
jecxz
loopne
jmp
add
std
mov
aam
fwait
imul
fildl
add
mov
jns
stos
xchg
lahf
sbb
pop
rolb
dec
and
inc
repz
fistps
das
pushf
cltd
mov
push
mov
leave
adc
xor
jne
mov
faddp
sbb
push
sbb
dec
leave
mov
add
and
lahf
cld
in
aaa
or
fistpll
jmp
movsb
push
or
sbb
sbb
test
pop
fcomi
sahf
pusha
dec
pop
jbe
rcrl
sub
mov
push
int
sbb
mov
mov
dec
inc
inc
sbb
imul
cld
cmp
fwait
loopne
sbb
mov
mov
sahf
bnd
pop
aam
pop
sbb
add
jl
mov
insl
dec
pop
lods
rolb
pushf
cmp
add
xchg
mov
outsb
iret
cmp
pop
ljmp
jl
push
jae
daa
mov
pop
jno
ds
pop
jae
clc
mov
mov
dec
movsl
cmp
jne
xchg
iret
fstpl
hlt
pop
push
js
adc
add
adc
cmp
cmp
ret
or
push
xlat
cmpl
dec
pop
in
testl
jno
idivb
mov
pop
mov
or
fwait
adc
cmc
dec
mov
clc
push
lods
add
pop
push
push
adcl
popa
pop
mov
push
pop
inc
mov
out
sub
add
mov
cmc
icebp
mov
jl
lcall
mov
xchg
xchg
call
mov
mov
inc
dec
bound
and
xchg
adc
aam
or
rolb
ss
jne
sub
mov
lea
push
dec
stos
cmpb
mov
or
fsubl
xchg
adc
jl
push
inc
rolb
sahf
xchg
mov
std
inc
push
shrb
lret
fisubs
xchg
xchg
mov
lods
mov
in
test
jbe
or
cmp
out
push
aad
mov
sub
xor
push
arpl
outsl
stc
xor
icebp
sub
mov
jl
sub
sub
insb
ja
jo
in
sarl
fmull
push
sub
xlat
mov
daa
std
hlt
nop
pushf
cmp
in
movsl
movsb
mov
mov
fcom
mov
xchg
test
xor
dec
xor
sti
repnz
into
adc
fiaddl
out
cmp
mov
enter
loopne
mov
mov
or
and
shll
jb
lods
bound
pop
clc
pop
xchg
jle
cld
push
cmp
fimull
lcall
mov
mov
rorb
hlt
test
mov
jmp
pop
inc
test
xlat
add
insl
cwtl
push
jl
daa
push
pop
xchg
pop
jns
cmpl
dec
rcpps
jmp
push
cld
mov
mov
mov
roll
scas
cmp
scas
jl
mov
jmp
cltd
mov
call
scas
dec
fmull
hlt
enter
aas
ds
xor
test
xchg
daa
pop
dec
mov
aas
stc
cmp
or
xor
leave
lcall
test
inc
fbld
mov
inc
add
adc
test
jnp
lret
xor
and
push
test
sbb
xchg
dec
lret
out
aam
push
push
xor
hlt
dec
ja
repnz
add
mov
sahf
sbb
jne
push
push
push
dec
outsl
mov
sub
out
cmpsl
in
cmp
pop
scas
clc
add
add
in
and
out
cmpsl
testl
inc
push
push
loope
scas
push
mov
inc
mov
inc
pop
loope
push
loopne
inc
sub
outsb
mov
loope
call
add
lds
dec
cmp
ljmp
arpl
les
jge
loope
pop
inc
enter
pop
jmp
ret
adc
xor
cmpsb
lret
mov
pop
sub
push
mov
dec
sub
xchg
mov
sub
adc
or
iret
repz
or
cmp
out
fwait
pop
shll
pop
sbb
sub
push
xchg
push
or
lahf
int
sbb
mov
mov
mov
dec
push
xor
mov
sub
cmp
lret
push
addr16
gs
mov
data16
jne
inc
or
dec
mov
add
cmc
sub
mov
sub
pop
inc
leave
andb
rep
out
test
add
pop
or
lea
xor
mov
mov
ja
mov
cmp
pop
je
inc
mov
decb
inc
fldl
fs
push
add
out
or
es
leave
pop
adc
and
cmc
icebp
mov
cmpb
out
mov
push
inc
incl
mov
dec
sbb
xchg
pop
sahf
sbb
cmp
pushf
dec
cltd
insl
pop
jnp
lock
xchg
icebp
jo
test
les
push
outsl
out
enter
call
pop
and
cmp
sub
sbb
jmp
mov
sahf
push
je
out
push
popa
add
faddp
scas
mov
mov
sub
add
jno
loope
popa
popa
bound
jp
push
xlat
dec
sti
test
sbb
sub
jns
aaa
push
rolb
push
shl
xchg
orps
mov
adc
dec
push
adc
scas
or
scas
jmp
ljmp
mov
stos
cli
aad
cld
mov
ds
jno
aaa
bound
js
dec
xchg
cmp
bound
jecxz
sbb
in
mov
les
mov
and
mov
adc
cwtl
or
dec
iret
and
nop
aad
xor
orb
mov
test
jb
imul
pop
xor
cli
mov
je
pop
ljmp
add
pushf
outsb
cmp
mov
and
mov
inc
jecxz
aas
lock
fisubs
cmp
xlat
and
scas
and
mov
cltd
fildll
or
and
xchg
mov
lea
mov
imul
xor
adc
repz
xchg
cmc
ret
or
iret
jnp
lods
sub
adc
ret
pop
jne
sub
scas
mov
pop
mov
jb
jne
loopne
mov
adc
sbb
mov
adc
mov
gs
int
xor
sbb
je
sub
in
push
sub
sub
test
pop
pusha
ret
sbbl
shrb
arpl
mov
lds
leave
add
test
inc
icebp
xor
jl
mov
fnstcw
imul
inc
mov
sbb
mov
lea
sbb
and
mov
jp
aad
es
xor
pop
aaa
push
cmpsl
mov
jmp
cmpl
xor
outsb
add
loop
daa
lods
add
push
adc
mov
out
inc
xor
xchg
xchg
test
pop
das
mov
loopne
imul
call
push
sub
push
mov
test
ljmp
daa
jmp
aam
loope
rolb
addr16
mov
pusha
pop
mov
roll
cmc
incb
push
loopne
dec
push
dec
xor
cmp
adc
pop
dec
mov
mov
sbb
xorb
ja
loopne
adcb
xor
aas
js
scas
fisubrl
lret
pusha
xor
sbb
adc
pop
cli
data16
xchg
bound
in
xlat
dec
aam
imul
sbb
sbb
out
mov
inc
push
into
nop
shll
cwtl
dec
sti
jne
inc
out
lods
insb
mov
or
popf
js
loope
inc
mov
jg
dec
mov
mov
cwtl
xor
jb
and
cmp
js
pop
lock
test
or
pop
mov
adc
scas
stos
cld
mov
jge
cli
mov
fidivl
mov
mov
popf
dec
out
bound
sub
dec
or
sub
sub
arpl
push
xchg
jge
je
pop
out
jl
xor
nop
push
call
jb
out
fisubrl
std
hlt
xlat
leave
mov
clc
jg
cs
in
jne
mov
mov
pop
xchg
in
push
sub
ja
push
subl
out
aad
std
loopne
sub
out
cmpsl
cmp
jno
mov
or
xor
pop
inc
enter
adc
inc
lods
out
test
sbb
je
push
cwtl
jmp
mov
popf
jp
sub
pop
scas
sbb
push
sub
in
dec
sahf
fnstcw
fisttpl
xor
jne
inc
jge
dec
sbb
into
inc
ret
test
pop
mov
fdiv
shrl
or
cmp
mov
dec
push
adc
es
lds
inc
sbb
and
cwtl
xchg
or
cmc
push
mov
mov
nop
clc
data16
dec
pop
int3
adc
inc
adc
add
out
fiaddl
rolb
jle
popa
call
mov
xor
pop
xor
lods
fnstcw
js
sub
lea
adc
jmp
push
sbb
sub
push
test
movsl
sahf
jmp
xchg
push
dec
pop
cmp
pushf
or
dec
out
insb
arpl
jle
arpl
and
sbb
out
std
adc
push
pop
mov
stc
popa
mov
xchg
cmp
push
popf
popf
push
pop
lock
inc
sahf
dec
inc
mov
jge
and
sub
into
xor
or
cmp
dec
cmc
pop
xor
in
mov
andnps
daa
adc
mov
mov
xor
repnz
cmp
cltd
pop
in
xchg
pop
ficompl
mov
dec
dec
mov
adc
ret
imul
mov
insl
and
mov
test
or
sub
pusha
xlat
pop
mov
xor
test
cmp
mov
mov
pop
mov
jp
cld
push
and
lock
push
fisttpll
mov
dec
sti
ss
and
mov
cli
jae
inc
ja
fwait
xlat
int3
lock
lahf
mov
roll
or
add
push
bound
shll
or
jns
mov
nop
subl
in
in
imul
movsl
jmp
push
loop
notl
dec
lea
fisubrl
jle
lods
sbb
cmp
inc
roll
mov
gs
shlb
and
not
and
push
xlat
or
loop
adcb
roll
jnp
das
adc
sub
cli
sbb
jg
sub
jmp
adc
mov
cmp
ja
pop
aad
sub
ret
out
mov
sub
mov
inc
es
jecxz
insl
add
outsb
jmp
aas
adc
inc
push
imul
and
inc
and
testl
xchg
xchg
push
xor
out
jb
data16
dec
cltd
and
mov
jl
aad
jl
push
into
jmp
push
xchg
push
push
xchg
mov
arpl
cmp
pop
js
popa
nop
aam
fcmovnu
sbb
xor
xchg
arpl
in
dec
lods
mov
int
aaa
cmpsl
push
xor
pushf
outsl
cmc
mov
mov
ret
jle
and
hlt
jo
cld
pop
push
push
imul
push
jb
dec
lret
sbb
pop
pop
dec
push
cld
pop
push
pop
inc
sti
cwtl
ljmp
std
imul
sub
call
mov
push
scas
xor
pop
push
out
mov
fnsave
cltd
je
es
adc
jb
and
leave
popf
jle
jo
mov
cld
pop
cmpl
sti
jge
frstor
jmp
add
mov
cmp
cmp
into
jns
dec
pop
movsl
sbb
scas
mov
and
out
cli
jp
mov
sub
out
div
mov
adc
inc
xchg
xchg
aaa
cmp
fidivl
adc
pop
faddl
enter
sbb
xor
and
lcall
pop
jg
jns
notb
jae
negl
sbb
daa
push
jns
pop
in
shlb
sbbl
test
ss
ds
jbe
sbb
sbb
mov
sub
fwait
dec
out
jmp
lods
test
cmp
push
mov
xor
in
pop
out
shll
cmc
xchg
rol
movsb
stos
and
fld
or
push
out
rolb
pop
and
xchg
sbb
mov
mov
rclb
sub
ret
repnz
adc
fildll
sahf
mov
or
push
adc
cmp
ljmp
inc
push
xor
stos
xchg
pushl
xchg
je
inc
ret
push
test
ret
push
cmp
pop
push
inc
ss
lock
in
leave
adc
shl
push
popa
subb
cmp
jge
bound
cmpsl
popf
in
mov
lret
pop
pop
sbb
mov
imul
imul
cmp
das
aas
jne
sbb
mov
push
stos
js
fistl
rcrb
dec
sub
push
jbe
jecxz
cmp
into
js
jno
cmp
in
and
shrl
mov
sahf
test
mov
data16
arpl
pop
lods
mov
jne
jbe
fs
or
lret
mov
pop
sbb
mov
mov
test
movsb
pusha
add
leave
add
sar
aam
and
int
jno
xchg
pushf
or
aam
cld
stos
out
pop
cmpsb
cmp
cld
push
inc
movsl
pop
ds
je
insb
and
mov
out
or
mov
add
jecxz
pop
fnstenv
in
mov
sub
movsl
mov
imul
out
or
dec
push
or
adc
push
adc
sbb
fyl2x
rol
dec
xchg
mov
lret
mov
icebp
cmp
sbb
xor
cltd
or
push
leave
fs
mov
mov
js
lea
sti
push
ret
or
mov
mov
insb
mov
inc
imul
jmp
int
shlb
mov
imul
sahf
into
jg
nop
stos
inc
sbb
rcll
clc
xchg
sbb
das
dec
bound
xor
cmpsl
push
cwtl
push
adc
scas
aam
adc
fstpl
sbb
inc
push
dec
out
push
jno
fdivrl
pop
subb
cld
mov
adc
dec
daa
out
fists
and
jl
pop
mov
dec
movsl
push
cmc
test
cmpsb
sbb
je
push
loopne
mov
dec
add
add
jno
bswap
cli
dec
adc
movsb
sub
std
xchg
addr16
imul
sti
ljmp
in
adc
jno
adc
xchg
jl
jecxz
popa
fwait
sbb
stc
cltd
sub
loop
inc
movsl
call
dec
lea
pop
and
mov
add
and
fwait
dec
push
jecxz
inc
push
adc
sti
push
and
jp
fmul
mov
outsb
jb
inc
xchg
pop
fxam
adc
js
cmp
cmc
test
xchg
into
push
jp
cli
lcall
mov
int
xchg
add
leave
into
mov
mov
xor
and
fidivrs
pop
pop
jl
push
loop
and
xlat
jmp
and
jge
push
daa
sbb
fidivs
cmpsl
stos
cltd
les
lret
cmp
adc
pop
icebp
mov
inc
pop
dec
stos
and
push
stos
push
ljmp
andb
and
adcb
mov
adc
adc
mov
iret
push
adc
pushf
dec
cwtl
lret
lcall
xchg
push
inc
inc
add
pop
cmp
add
pusha
dec
adcl
xchg
fwait
pop
adc
cmp
mov
jecxz
les
xchg
dec
dec
pop
cmpsl
pop
test
cmc
mov
push
jno
sub
or
mov
mov
fnsave
xchg
scas
push
repz
outsl
imul
std
dec
test
jmp
push
mov
cmpsb
push
push
in
push
or
lahf
mov
addb
xchg
js
cld
mov
dec
mov
inc
lcall
js
gs
aas
or
xor
push
iret
es
mov
jmp
mov
ljmp
jmp
push
push
lcall
aad
dec
cld
out
xor
adc
fsubrl
xchg
loope
ss
mov
mov
add
dec
mov
mov
push
xchg
clc
icebp
jnp
push
ficomps
test
sbb
fwait
arpl
sti
dec
inc
rcl
lret
dec
stos
sti
roll
sub
flds
pop
or
mov
sbb
and
mov
pushf
in
sbb
mov
adc
int3
adc
aas
cmp
mov
leave
insl
mov
jno
sbb
inc
adc
imul
push
test
in
aad
pop
sub
sub
loope
jno
sbb
xlat
inc
aad
mov
ja
pop
imul
icebp
lret
aas
pop
push
push
push
jo
mov
hlt
jl
mov
test
adc
add
or
fcomip
jnp
divb
lea
popf
or
push
cwtl
jb
sbb
sti
ljmp
push
andb
mov
jg
push
sbbb
test
pushf
xchg
sub
mov
mov
aas
xor
outsl
jno
fadd
ret
and
xchg
dec
imul
pop
fdivrl
dec
bound
and
call
fmuls
fnstcw
xchg
outsl
jle
ljmp
shll
pop
mov
repz
push
mov
pop
nop
aaa
or
mov
xlat
inc
jnp
push
insb
adc
mov
cmc
shr
mov
fldenv
mov
mov
cwtl
lcall
pop
mov
jge
mov
aas
mov
adc
and
inc
push
sub
in
cmp
push
rcrb
adc
jno
push
leave
outsb
les
xor
push
inc
int
lret
pop
mov
ljmp
pop
stos
jo
nop
push
jb
les
ss
mov
mov
sbb
aaa
lock
inc
dec
movsl
cmp
push
pop
out
push
test
clc
inc
xchg
enter
add
mov
js
xor
aas
and
fnstsw
shrb
pop
cmp
cmc
mov
mov
mov
mov
icebp
ljmp
je
inc
add
or
mov
int3
test
cmpl
cmpsb
mov
or
movsb
lock
mov
inc
cmp
mov
into
push
mov
ljmp
ret
xor
aad
and
mov
and
stos
fwait
nop
jae
or
pop
ret
in
add
ljmp
cmp
push
jo
test
test
imul
cli
cmp
xor
dec
push
and
pushf
int3
add
mov
xchg
mov
and
pop
pop
inc
repz
je
mov
adc
test
sbb
add
pop
ss
mov
rclb
dec
das
pop
fs
adc
sahf
push
add
in
sbb
jne
mov
xor
int3
push
pop
outsl
shr
xorb
mov
push
insl
or
cmp
out
lods
lds
and
int
sub
loopne
or
out
jo
and
cmpl
movb
dec
jle
aas
les
pop
mov
inc
imul
push
cmp
push
mov
inc
xor
sbb
add
inc
and
jecxz
jp
sbb
call
and
mov
incb
push
ja
pop
notl
lock
inc
dec
iret
jl
jo
dec
ja
ret
xchg
dec
cmc
dec
fsubl
imul
inc
rcrb
jg
test
aas
xchg
or
or
pusha
add
es
stos
fildl
loopne
inc
jp
arpl
lahf
push
mov
inc
cmp
mov
std
mov
leave
adc
cmp
xor
loope
popf
lds
dec
or
push
xchg
aas
data16
cmpsl
mov
mov
sub
xchg
insl
xchg
pusha
push
xchg
push
scas
adc
cmp
inc
mov
sbb
std
outsb
lods
or
nop
daa
pusha
in
or
inc
mov
aad
adc
dec
xchg
dec
pop
mov
lods
gs
call
jl
dec
dec
sub
popl
lahf
xor
xor
and
xor
ljmp
xor
and
scas
cwtl
repnz
and
jmp
int
popa
cld
repnz
je
adc
lcall
leave
cmc
jl
mov
adc
sbb
push
fadd
repnz
data16
decb
adc
mov
insl
push
sbb
popa
fwait
adc
or
pushf
jmp
inc
icebp
xlat
outsb
sbb
loopne
repz
and
inc
mov
and
mov
mov
sub
add
pop
shll
loope
add
cltd
jmp
bound
push
jge
mov
outsb
add
cmpsb
jbe
inc
loopne
adc
push
xor
mov
push
add
cmp
jno
shlb
repz
lock
jecxz
jg
jmp
mov
leave
xchg
shlb
ja
jo
js
imul
push
das
add
xchg
mov
mov
leave
mov
cmp
mov
lahf
dec
jle
push
mov
daa
scas
xor
jns
into
out
push
and
add
mov
addr16
fwait
inc
inc
cmpsl
rolb
fistpl
lret
cs
movb
xor
pop
cmp
fdivs
sahf
push
repz
mov
mov
pop
lea
rcr
sbb
adc
cmp
add
ret
ds
je
add
adc
pusha
icebp
aas
push
or
xor
mov
sub
popf
ret
lods
mov
pop
das
jp
push
shrl
xchg
aas
cmp
addr16
add
shll
lret
lds
dec
int3
ret
shlb
sbb
mov
icebp
cmp
aad
inc
adc
jnp
inc
xorl
fiadds
inc
jg
dec
cmpl
jmp
or
daa
jo
sarl
repz
pop
cld
mov
add
and
pop
lcall
sbb
sbb
scas
xor
mov
xchg
in
cmp
push
shll
hlt
xor
jmp
dec
psraw
push
mov
call
adc
lcall
mov
lret
jns
xchg
sub
or
in
mov
js
icebp
out
sahf
jnp
pop
mov
into
fldt
or
mov
pop
movsb
add
xlat
xor
mov
cld
and
sbbl
jmp
movsb
leave
add
push
das
cmpsl
cmp
ss
js
pop
push
pusha
sbb
jecxz
loop
mov
cli
jae
and
or
data16
fdivs
push
sub
hlt
and
cmp
pop
mov
lds
sub
aaa
aas
gs
bound
xor
leave
into
in
pop
mov
mov
xchg
loop
or
inc
cmp
mov
div
dec
jl
test
xchg
insl
test
xchg
mov
add
cld
jae
adc
enter
testb
mov
xchg
pusha
xlat
mov
cli
and
les
in
lea
sub
xchg
cmpsb
fdecstp
inc
xor
pop
in
lret
push
push
ja
idivb
je
mov
adc
jecxz
mov
fucomip
das
mov
cmp
je
imul
sbb
dec
push
fldpi
cwtl
or
pushf
and
fstl
cmpl
rorl
jbe
outsb
aas
lcall
loop
mov
insb
cmp
mov
adc
mov
repnz
cmp
sub
mull
xchg
mov
xor
fimull
sbb
sub
pusha
jbe
push
flds
test
mov
xlat
xchg
fildl
fisttpll
and
push
add
and
push
xor
dec
cmp
push
lret
push
add
mov
jg
mov
insl
in
dec
add
sahf
pop
fs
jns
jmp
jl
cwtl
or
lods
movsb
imul
jo
loope
ljmp
pushf
flds
repnz
dec
xchg
lret
cmc
cmp
js
js
add
mov
mov
inc
xor
push
and
mov
mov
push
hlt
lret
xchg
xor
ja
sahf
sub
imul
mov
in
cmp
pop
cmc
lods
test
xorl
outsl
pop
pop
scas
imul
dec
jo
or
jne
xor
ror
xchg
adc
sbb
sbb
ficoml
sub
cld
jns
js
sub
movsl
jnp
jmp
inc
jns
jp
cmpb
sub
push
out
xchg
dec
mov
push
xchg
cmp
lock
inc
scas
mov
ror
mov
and
and
pop
lret
mov
pop
int3
jne
dec
gs
in
push
pop
aas
ret
pop
fdivrl
push
aaa
mov
push
movsl
decl
loop
loopne
push
in
testl
sarb
cmp
jne
sbb
jge
mov
adcb
call
sbb
or
scas
les
std
xor
mov
mov
cmp
adc
sub
mov
pop
daa
inc
rclb
mov
add
mov
push
lret
pusha
push
sbb
insl
adc
inc
pushf
andb
lods
clc
imul
mov
outsb
dec
xorb
jl
js
and
add
cli
add
repz
jo
shrl
out
rorb
out
icebp
jbe
insb
icebp
or
xchg
ret
into
ret
and
jmp
mov
inc
sbb
sbb
cli
lret
filds
scas
mov
push
push
sbbl
leave
sub
mov
in
mov
jl
insl
push
push
dec
aaa
inc
cmpl
jne
sub
pusha
jmp
sub
push
mov
xor
lds
mov
inc
jne
fdivs
cmp
daa
or
stos
stc
outsl
cmp
out
add
xor
and
rcll
mov
aas
sbb
jecxz
ss
pop
cmp
mov
and
test
pop
clc
or
cli
stc
or
aam
push
jp
sub
mov
pop
jmp
loop
adc
mov
push
jns
mov
pop
push
mov
sbb
mov
xor
and
ss
dec
testl
pop
pushw
dec
sarl
pop
decb
fadds
test
ret
cld
dec
dec
test
push
sbb
xchg
std
std
xchg
push
cs
out
inc
sub
xor
out
shll
inc
jno
pusha
inc
inc
xor
mov
jge
mov
cmpb
dec
fisubs
in
call
iret
cmp
or
lock
sub
sub
and
push
xchg
push
pop
ret
sbb
in
lahf
mov
add
mov
int
push
adc
push
sbb
mov
in
sub
pop
jmp
repz
push
sbb
mov
pop
aas
lret
cmc
in
mov
mov
pusha
cwtl
loopne
and
sbb
inc
sub
and
dec
ds
pop
and
jmp
or
mov
mov
inc
inc
sti
push
jae
aad
mov
jb
cmpsl
je
jle
fst
lcall
cmp
pop
dec
inc
clc
sbb
adc
pop
sahf
mov
xlat
pop
sub
xchg
dec
movsb
xchg
mov
outsb
dec
negb
out
mov
xchg
dec
mov
xor
std
jo
xor
mov
call
mov
jmp
jle
repnz
adc
lcall
scas
leave
div
cmp
cmpsl
popf
xlat
loope
aad
xchg
leave
mov
add
jbe
dec
in
sbbb
pop
sbb
int
rol
pop
icebp
ds
cmpsb
into
dec
xor
pop
in
and
inc
les
xchg
mov
orl
roll
insb
jno
adc
pop
movsl
xchg
xchg
inc
jp
ljmp
mov
insb
rcrl
jbe
inc
sbb
inc
dec
xor
cli
push
cld
test
xor
dec
cmpl
gs
push
sub
adc
add
jmp
xor
scas
repz
inc
jl
jns
push
stc
pop
or
dec
int3
inc
daa
mov
sub
mov
adc
sbb
notb
push
sub
inc
in
mov
mov
rcrl
pop
push
incl
or
push
and
iret
pop
sti
jl
in
lret
lcall
aaa
popf
pop
sub
xchg
jno
in
test
ja
popf
pop
add
jp
stos
mov
fwait
add
mov
inc
repz
jnp
cmpsl
pushf
dec
push
fnstsw
cltd
ja
adc
dec
pop
push
pop
lock
cmp
push
scas
fcmovu
adcl
sbb
lret
jnp
mov
lret
push
repnz
iret
pushf
movsb
inc
cmpsl
in
pop
iret
add
lahf
loopne
pop
fdivrl
jle
push
mov
test
arpl
loop
pop
cs
test
repz
es
bound
inc
sub
sub
test
mov
sub
pop
push
mov
movsl
xor
xor
popf
pop
cwtl
dec
xor
xchg
jo
ss
jb
lahf
rcrl
out
mov
or
in
mov
sub
sbb
sti
and
lds
in
ror
leave
sub
jecxz
int
sub
cltd
loop
xchg
ds
and
in
popf
imul
clc
imul
shll
add
jne
cmp
xor
add
xor
pop
add
outsl
add
sahf
pop
and
arpl
jb
insl
jg
dec
mov
add
in
mov
mov
mov
pop
hlt
fiaddl
push
popa
lcall
mull
aaa
jo
pusha
iret
cmp
test
call
adc
pop
sub
fnstcw
lock
adc
xchg
mov
outsl
push
stos
adc
xchg
repz
adcl
mov
lret
mov
xchg
enter
adc
cltd
xchg
sub
loopne
pop
leave
push
xchg
mov
fwait
andb
rcrl
fildll
insl
js
into
xchg
xor
xorl
aaa
loopne
cmp
or
jbe
jnp
test
lods
mov
int3
push
sub
xorb
xchg
fldcw
sbbb
xlat
into
and
pop
in
nop
add
lds
sbb
jge
icebp
repz
xchg
movsb
mov
inc
ja
lret
mov
roll
insb
mov
rcr
mov
lods
mov
neg
popf
lahf
aas
cmpsl
mov
ret
and
add
mov
cmp
std
push
and
rorl
cs
jne
push
or
xchg
mov
inc
sbb
scas
in
cmc
jbe
in
push
ret
jnp
rcr
pusha
jp
mov
dec
cmp
sub
pop
jg
dec
fistps
inc
stos
sahf
out
jno
pop
sti
scas
add
push
add
xchg
sub
xchg
inc
mov
jo
xchg
xlat
mov
lcall
pop
mov
mov
or
cwtl
divb
push
inc
pop
fildl
into
fs
push
ret
jmp
loope
add
xchg
push
das
cmc
in
push
leave
sub
fstpl
pslld
xor
shlb
orl
jae
mov
mov
sub
or
jp
lods
test
fdivrs
xchg
fnstsw
in
jb
pop
outsl
loope
add
out
scas
sbb
mov
ss
xchg
out
pop
rorb
popf
imul
lea
xor
movsl
ret
jns
mov
jecxz
or
mov
int
pop
daa
mov
push
add
idivb
mov
stos
cmpsl
fistl
lahf
in
out
lret
mov
test
repnz
adc
ja
cmp
int
clc
sbb
jo
xchg
mov
add
fwait
push
mov
jecxz
sbb
cwtl
in
sahf
cli
adc
sub
lahf
xor
adc
ret
arpl
cmp
mov
lds
and
clc
xor
cmpl
fdivs
adc
cmp
into
lcall
roll
jmp
fs
js
add
sti
ret
inc
pop
inc
loop
call
mov
push
jo
mov
leave
pop
jmp
cmp
ljmp
pop
jl
jge
add
pop
cmp
shll
lcall
cld
out
bnd
int3
push
pop
lret
fsubrs
xlat
daa
and
xlat
dec
repz
push
arpl
or
leave
test
test
icebp
stos
sbb
sub
push
ss
repz
das
mov
inc
call
sbb
sbbb
rcrb
pop
adc
xor
test
into
negb
lods
mov
mov
mov
dec
fnstenv
sbb
idivl
cmp
sub
pop
push
push
sub
insl
and
or
popf
mov
add
add
inc
push
movnti
mov
pop
pusha
mov
push
jne
add
rcrl
adc
and
jb
data16
jo
inc
call
bound
pop
push
mov
and
shl
loopne
mov
cmp
or
pop
sar
xor
aas
sub
int
jno
jp
lret
sub
push
push
lds
fmuls
jb
or
cmp
jg
xor
fdivrs
xchg
sbb
mov
cmp
ficoml
popa
arpl
or
daa
adc
cmp
addr16
jnp
pop
cmp
jbe
mov
pop
xor
push
lret
out
adc
iret
repz
push
mov
enter
dec
and
xchg
pop
imul
orb
lea
xchg
dec
dec
sub
call
loope
sbb
andl
fidivrs
jae
pop
scas
sbbl
add
or
push
inc
imul
insb
fdivs
add
mov
sbb
scas
add
lret
push
xchg
push
sbb
push
out
sbb
sub
rcl
shll
repz
push
dec
dec
jae
idivl
out
loopne
dec
movsb
je
inc
out
popf
mov
scas
movsb
push
data16
ja
inc
fidivrl
sbb
mov
pop
test
jbe
pop
loope
loopne
repnz
jle
push
xchg
lods
add
cmpsl
divl
mov
pushf
pop
addb
insl
repz
ds
sbb
xor
jmp
pop
cmp
add
or
push
adc
cmp
lods
notl
xchg
xor
jne
mov
jae
js
out
dec
call
movsb
or
mov
lret
cmpsb
std
dec
fcmovne
sbb
enter
lds
mov
pop
sbb
test
jo
cltd
test
mov
cli
cli
push
ja
jmp
rcrl
lret
push
add
adc
in
xchg
xchg
pop
stos
add
gs
mov
push
push
inc
js
repnz
popf
dec
mov
xchg
lods
inc
adc
bound
addr16
pop
cmp
leave
cmp
out
gs
test
es
dec
mov
lcall
mov
popf
into
mov
dec
arpl
and
sub
mov
add
sub
std
ret
leave
push
inc
push
movsb
inc
inc
push
les
mov
cltd
mov
or
inc
shlb
addb
sbb
int
xor
into
decb
roll
rcl
push
stc
cmpsl
xor
mov
inc
xor
mov
rclb
lds
jmp
xor
ss
pop
push
push
mov
fldcw
push
inc
mov
adc
test
xor
mov
push
lret
cmpsb
jge
dec
and
rol
bound
sbb
xchg
mov
jbe
je
fstps
jmp
jle
sbb
popf
pop
jne
inc
jecxz
imul
or
popa
movsb
out
in
push
inc
sub
jle
or
mov
call
testl
sub
or
cmp
rolb
fnsave
xchg
mov
cltd
cmp
int
fdivrl
int
repz
jecxz
stos
ljmp
mov
data16
shr
sbb
iret
stos
dec
xor
adc
pop
subl
sub
adc
or
pushf
cltd
mov
je,pt
dec
in
rorb
loope
mov
mov
xchg
jle
insb
sub
es
call
js
xchg
xchg
jo
cli
adc
jge
pop
mov
iret
cmc
xchg
sub
lret
aas
loope
data16
movsb
inc
sbb
inc
add
mov
sub
jg
pop
sbb
mov
pop
or
mov
cwtl
in
add
jp
adc
or
lahf
xchg
pop
push
mov
jnp,pt
bound
add
pop
dec
jle
pop
mov
xchg
sbb
jnp
int
jecxz
jb
push
mov
ja
or
sub
pop
fdivrl
push
addr16
push
mulb
insl
sbb
and
and
push
xchg
push
out
daa
ss
in
test
lds
or
cmp
daa
gs
data16
sub
xchg
arpl
sub
mov
cltd
lret
shlb
lret
stc
out
sub
pop
aas
mov
subb
arpl
enter
adc
daa
fwait
test
mov
enter
mov
jg
ja
or
mov
shrl
jb
je
sbb
rolb
pop
and
dec
imul
mov
lods
mov
add
cmp
mov
insw
xchg
gs
lcall
outsl
cmp
out
popa
sub
rolb
dec
pop
xchg
ret
imul
repz
push
mov
insb
xchg
push
pop
movsl
les
sub
aam
jg
ret
and
idivl
xor
jnp
jp
jne
sub
pop
jge
adc
dec
cmpsb
xchg
addl
mov
sub
cld
push
xor
jbe
pop
out
arpl
mov
xor
test
sub
jnp
mov
ret
or
int
mov
test
ret
sbb
loop
sbb
mov
and
test
cmp
pop
xor
push
and
jno
sarl
push
sbb
xchg
jno
jno
cmp
lahf
mov
fdivrl
sub
add
dec
sub
pop
sti
das
out
clc
fcoms
cmp
pop
dec
mov
xor
popf
xchg
xchg
test
ljmp
mov
add
aad
cli
in
push
shrb
inc
add
mov
popf
pop
jbe
pop
lock
les
jnp
int3
data16
xchg
mov
add
pop
lcall
mov
aad
out
js
adc
and
aad
cltd
stos
in
cs
xchg
movsl
sbb
dec
je
inc
mov
aas
test
int
pop
add
lea
ret
sub
inc
push
and
test
inc
add
mov
pop
cs
sub
jae
nop
add
push
ret
daa
push
mov
jg
cli
push
mov
fdivr
fisttpll
iret
out
and
sub
cld
jmp
leave
pop
test
test
or
dec
adc
add
sysret
imul
ret
and
movsb
jae
dec
arpl
or
je
into
loop
popf
and
push
aaa
mov
movsb
int3
jno
dec
subb
and
push
mov
xchg
and
lahf
bound
pop
aaa
mov
rorl
mov
lret
popf
adc
xchg
es
pop
cmp
test
mov
or
loop
movb
or
rorb
out
test
aam
mov
or
aaa
lds
or
add
xor
cli
fisubrs
andb
mov
sub
mov
mov
rcl
push
daa
mov
dec
jmp
xchg
pop
xor
sub
pushl
mov
or
push
mov
cmpsb
or
sbb
ja
mov
lods
outsl
sub
jmp
cmpsl
mov
xchg
int3
mov
repnz
lcall
or
add
mov
neg
add
std
enter
fidivl
sahf
jbe
cmp
pop
mov
jmp
stc
lods
pop
push
clc
sub
mov
data16
and
xchg
adcb
mov
cmpsl
insb
jnp
aad
cs
ss
imul
fiaddl
outsl
mov
lock
cmp
pop
inc
pop
jp
cmp
mov
fsub
outsb
mov
inc
test
arpl
sbb
jns
leave
xor
sahf
xor
repnz
mov
lret
jo
mull
lahf
sar
insb
idiv
in
push
mov
adc
mov
and
scas
jns
sub
adcl
dec
in
scas
mov
ss
test
and
inc
mov
test
sbb
jecxz
lret
repz
add
push
scas
das
adc
jno
mov
and
xchg
adc
pop
jecxz
jg
scas
sbbb
es
add
shll
rcll
mov
and
out
adc
fistpl
cmp
mov
push
enter
sbb
sti
data16
xor
pop
stos
pop
or
push
jb
pop
mov
mov
stos
or
push
or
ss
mov
add
xor
pusha
shld
adc
sub
imul
sahf
lods
sbb
outsl
mov
sub
testb
hlt
xor
mov
push
xor
mov
call
xorb
dec
aam
test
ss
xlat
ljmp
pop
cwtl
out
lahf
hlt
mov
push
push
lock
pop
or
jns
add
xchg
call
dec
pop
add
arpl
mov
nop
push
out
pop
add
shrl
lret
or
out
mov
enter
data16
sbb
test
adc
loop
repnz
cmpsl
in
daa
inc
and
add
dec
dec
or
idivb
mov
aas
scas
push
daa
cltd
lahf
ret
mov
mov
pop
dec
adc
jge
ja
ss
fcomps
sbb
sarb
nop
xchg
cld
mov
xchg
mov
in
push
fs
jmp
add
push
push
mov
mov
mov
jns
push
nop
movsl
jecxz
iret
cld
inc
movsb
and
ja
aad
adc
cmpsl
sbb
repnz
mov
and
sub
je
dec
sub
mov
in
xor
mov
cmp
in
fstl
fsub
gs
rorb
pop
jp
or
push
lret
mov
popa
mov
sub
jl
mov
jg
adc
sbb
test
add
fucomi
repnz
and
rorl
andb
push
test
inc
mov
mov
insb
or
mov
add
call
movsl
push
lret
arpl
lcall
mov
push
scas
cmc
rorb
in
scas
in
sub
cltd
das
cs
cmp
and
fistps
add
pop
xchg
pop
mov
push
jmp
xchg
jle
int
add
cmp
push
sbb
mov
ficoml
jl
mov
fimuls
enter
mov
jge
pusha
sub
pop
ret
and
cmp
xchg
dec
lea
pop
xlat
xchg
data16
mov
cs
mov
lods
ja
pushf
mov
ljmp
or
mov
add
jle
std
jns
jo
xchg
enter
inc
cld
out
jnp
mov
pop
lahf
inc
lods
or
or
push
sti
and
pop
dec
ret
es
ss
xchg
arpl
sub
cltd
lds
cltd
sbb
mov
imul
pop
test
cwtl
ret
js
bound
jae
and
out
pop
jbe
cmpsb
sub
pusha
adc
sbb
test
adc
jp
and
or
lods
xchg
lods
adc
push
xchg
ds
push
sbb
divl
dec
cs
or
xor
sti
gs
dec
add
in
lahf
lock
mov
loop
cmpl
cmp
lcall
loop
loopne
mov
cmp
xor
pop
sahf
shll
sahf
ret
fbld
add
stos
or
int3
mov
pop
insl
roll
mov
mov
sbb
or
fisubrl
imul
cmpsb
cmp
test
ret
inc
mov
outsb
arpl
mov
rcrb
sbbb
scas
lret
daa
lcall
stos
loope
movsb
push
aaa
fisubl
cmpsb
dec
push
sahf
fiaddl
mov
insb
push
push
test
test
movsl
pop
and
mov
mov
fwait
push
pushf
mov
push
cmpsl
pop
sub
stos
test
es
test
pop
pushf
push
mov
test
and
mov
out
movl
xchg
nop
sti
lds
jnp
imul
les
or
add
xor
add
test
inc
ret
movsl
sbb
imul
push
lds
sbb
rcr
iret
or
and
adc
lds
mov
sub
push
popf
test
les
in
pop
adc
jg
jmp
test
fbld
inc
inc
and
pop
jecxz
pop
fisttpl
adcb
loopne
test
movl
imul
xor
movsb
rcll
jno
mov
ror
adc
mov
add
pop
leave
sti
mov
cmp
mov
ljmp
ja
mov
notb
call
fnstenv
xor
hlt
cltd
push
or
lahf
andb
jmp
daa
into
loope
jecxz
lods
inc
mov
lret
cmc
pop
decb
push
pop
xchg
sub
mov
ret
inc
mov
push
mov
fnstsw
inc
in
scas
mov
dec
mov
mov
cmpsl
ret
ret
pop
push
mulb
dec
shll
fisubrs
movsb
aas
xor
arpl
push
ja
dec
mov
mov
push
scas
add
cmp
cmpsb
pop
aad
ds
pop
and
popf
push
cmpsl
sub
clc
inc
jbe
inc
mov
xchg
sahf
dec
adc
adc
or
fcompl
imul
xor
mov
jecxz
pushf
ds
adc
into
add
idiv
xor
ret
mov
das
sbb
adc
scas
xchg
dec
test
xor
mov
popf
lods
mov
jge
add
out
pop
loopne
loopne
sbb
jne
andb
mov
js
push
jle
pop
bound
xchg
jne
popa
fsubrl
fidivs
xchg
shrl
xor
test
push
ds
fcomps
xchg
addr16
mov
scas
mov
add
cmp
dec
fbld
call
push
or
inc
scas
addr16
int
fwait
jl
adc
inc
daa
add
lcall
daa
iret
and
test
jne
xchg
push
mov
mov
icebp
inc
in
sub
cltd
add
or
jg
push
leave
lods
xchg
sbb
out
push
mov
inc
and
insl
out
jo
mov
sub
loopne
cmpsl
test
lret
mov
push
out
movsl
inc
das
add
xchg
dec
leave
rclb
cmpsl
ficoms
xchg
cmpsb
inc
sub
nop
mov
loop
stos
shlb
stos
shlb
mov
mov
mov
aam
jb
pop
cmpsb
imul
outsb
enter
test
mov
push
jo
inc
xchg
mov
arpl
mov
push
popf
xchg
dec
aad
pop
pop
hlt
push
xchg
sub
mov
jae
mov
add
push
jno
sbb
sahf
and
lock
fidivs
lcall
dec
push
cmp
push
cmpsb
cmpsb
ficoms
idivl
pop
cmp
sub
jnp
insl
add
pusha
add
test
hlt
cmc
push
in
pop
call
adc
shlb
pop
lret
dec
dec
lret
test
aad
jle
shll
inc
sahf
sub
add
pop
mov
lret
xor
andb
in
mov
cmp
add
out
sub
and
sbb
rcll
loope
in
mov
insb
popf
scas
xchg
mov
sub
clc
ja
mov
call
xlat
mov
sbb
sbb
decb
push
cmp
pop
adcl
das
stc
das
bound
jle
jnp
jmp
xorl
add
adc
jg
lahf
jp
das
jecxz
gs
insl
or
aad
adc
arpl
fmul
pop
rcr
push
incb
or
stos
sbb
andb
push
add
and
lds
adc
inc
mov
outsb
pop
rolb
jns
and
and
dec
xor
pop
xchg
xchg
or
int3
fidivrs
mov
mov
cmc
push
sub
adc
outsb
lahf
call
or
out
int
push
pop
mov
sbb
js
stos
loopne
jne
mov
cmp
std
inc
mov
fstp
incl
mov
mov
js
xlat
cld
pop
and
adc
aam
mov
ret
cmp
mov
xchg
jnp
std
or
jae
cmp
sbb
or
test
xlat
mov
adc
pop
mov
outsl
pop
jne
lock
mov
or
dec
test
add
sti
iret
into
mov
sub
in
jp
idivb
cli
jae
xlat
and
xchg
outsb
ret
or
roll
adc
in
mov
xchg
ds
nop
clc
movsb
inc
and
scas
addr16
inc
rcr
push
xchg
mov
cli
and
xchg
push
js
outsl
cmp
or
and
rolb
mov
mov
aad
pop
mov
rolb
mov
dec
pop
push
pusha
inc
sbb
add
adc
mov
sbb
add
pushl
mov
push
sbb
mov
stc
lahf
push
loope
and
cwtl
lcall
push
roll
push
test
or
sub
xor
leave
int3
movsl
mov
sub
in
rorl
std
in
mov
and
pop
fnstenv
or
push
cmpsl
pop
subb
sub
lahf
inc
je
ss
hlt
push
fwait
test
adc
xor
mov
aam
stc
mov
jle
lods
test
mov
adc
mov
or
mov
push
push
fninit
mov
mov
cmp
mov
int
test
push
sbb
and
pop
ss
push
xor
and
hlt
inc
popa
push
lds
in
push
fcomps
mov
gs
xchg
int
clc
clc
add
mov
mov
cwtl
or
adc
repnz
pop
push
cs
in
cld
js
mov
sbb
out
arpl
pop
loopne
fsubrs
fisubrl
mov
mov
xchg
dec
mov
xchg
mov
mov
rcll
dec
fnstsw
pop
cmp
popa
adc
in
push
cli
cltd
lods
jno
adc
lret
mov
leave
fidivl
xchg
lods
and
rorl
cltd
pop
pop
mov
cs
inc
fldl
pop
andps
inc
outsl
cmp
orl
fldl
add
xchg
enter
sti
push
jne
mov
xlat
into
inc
mov
addb
cmc
push
mov
cmp
lds
jl
rcrl
mov
mov
stos
in
pusha
push
jp
fisubrl
cld
or
add
enter
divb
cmp
cmp
pop
idivb
data16
mov
lahf
outsb
out
push
dec
icebp
cli
aas
rclb
mov
push
mov
mov
testl
stos
cld
mov
sahf
mov
repz
mov
jb
test
pop
cmpsl
dec
arpl
and
cmp
stos
loop
les
fnstcw
setle
fs
gs
sbb
cmpb
jno
push
ja
clc
rolb
inc
sub
mov
out
out
inc
arpl
jecxz
fstps
adc
or
cltd
leave
rcrl
pop
adc
pop
aam
adc
jmp
popa
ss
imul
jne
inc
and
cli
daa
xor
sub
add
xor
lods
mov
mov
pop
sub
or
and
fcoms
sbb
xchg
in
sbb
ds
and
daa
in
fs
int
cld
push
or
loope
adc
xchg
adcb
dec
repz
aad
push
stc
iret
pushf
out
push
int3
out
adc
jg
adc
xchg
loope
and
sahf
insb
and
adc
jne
mov
fwait
cmp
inc
sarb
sbb
push
mov
dec
jp
adc
scas
sub
mov
add
cmp
cmc
xchg
ja
jl
mov
or
xor
lcall
out
lahf
iret
mov
insb
xor
test
add
cmp
push
sub
cmp
clc
xor
lock
ja
jle
and
and
jbe
in
mov
add
out
fistpll
jmp
loop
iret
nop
inc
ljmp
repnz
imulb
pop
aad
jo
mov
push
mov
popa
inc
pop
jge
ret
fdiv
inc
repnz
movsl
sub
xor
add
sub
int3
lcall
out
mov
push
mov
or
out
icebp
adc
mov
add
mov
push
add
inc
int
fidivrs
jne
in
and
jp
pop
int
sub
cmp
popf
lea
cltd
push
adc
and
jns
xchg
js
je
and
shl
mov
pushf
jbe
int3
imul
in
push
jne
aaa
jmp
mov
xchg
out
jmp
lret
xor
data16
sub
fildl
ret
inc
stos
inc
add
push
jmp
dec
stos
shll
outsb
stos
data16
ds
xlat
popa
mov
cmpsl
ljmp
stos
fnsave
pop
nop
subb
fwait
fwait
call
cwtl
out
dec
jle
xor
int3
ret
push
subb
jb
jnp
cmpsb
out
fdivl
lcall
fwait
sarl
gs
dec
jecxz
mov
and
icebp
sbb
xor
jno
sub
and
mov
data16
sub
and
lds
jo
mov
pop
movsb
pop
cmp
add
out
notl
enter
fmull
mov
inc
sbb
aad
xor
dec
comiss
mov
rclb
data16
and
fdivrs
insb
dec
sub
inc
lcall
mov
mov
push
movsb
imul
icebp
inc
sub
adc
mov
mov
ficoml
aad
add
ret
sti
ljmp
test
jge
jecxz
rcrl
popf
mov
cmpsl
mov
fs
roll
inc
pop
dec
fidivl
dec
insl
cmp
pop
outsb
push
popa
mov
fiadds
cld
fs
outsl
jae
je
fmul
lea
loope
dec
mov
shrl
jb
popa
push
mov
sub
jge
cmp
jbe
in
insl
sub
outsl
push
sbbb
fs
mov
ret
mov
test
scas
cwtl
ret
push
pop
sarb
dec
inc
push
movsb
mov
dec
mov
subl
xchg
testl
inc
sbb
cltd
ljmp
xlat
js
ja
mov
popf
or
rcrb
pop
mov
popa
mov
sbb
and
lds
jle
test
mov
lea
cmp
icebp
push
jb
in
pop
push
in
movsl
stc
xchg
sahf
addl
sub
xor
loopne
test
sbb
es
bound
cmpsl
repnz
es
rorb
mov
adc
mov
dec
xchg
and
dec
call
arpl
lock
mov
pop
pop
std
sub
mov
sub
jnp
or
pop
inc
mov
adc
test
push
jecxz
sub
adc
push
sahf
cltd
fbld
mov
dec
sti
add
ss
sarl
rcll
dec
lcall
lret
dec
push
leave
cli
adc
scas
mov
sbb
icebp
adc
push
or
insb
sbb
jo
mov
sbb
push
lods
adc
test
fisubrs
xor
jp
into
jmp
pop
stos
lret
rcrb
mov
jo
cmp
mov
sysenter
sub
or
in
dec
aad
pop
xor
jb
icebp
out
jo
cmp
pushf
imul
sbb
jp
xor
imul
pop
mov
lcall
loop
mov
jae
pop
leave
negl
cli
ja
icebp
adc
jl
mov
cmp
int3
stc
mov
mov
ds
dec
mov
stos
rorl
pop
adc
rcr
clc
cmp
ret
push
push
mov
jmp
mov
hlt
add
jp
mov
insl
cli
jnp
mov
mov
mov
pop
cs
or
daa
movsb
data16
sub
fs
in
cmp
inc
cmpsl
jbe
mov
push
add
ret
js
pop
mov
mov
inc
inc
push
pop
out
xchg
mov
jns
mov
lods
jae
testb
fcoms
inc
pop
push
mov
cld
jnp
ret
jns
add
outsb
xor
mov
lods
adc
in
mov
lds
sub
mov
and
lock
mull
jnp
popl
sbb
lcall
xchg
aaa
or
pop
jp
setb
add
pop
push
jno
sbb
sbb
dec
fidivrs
pop
mov
push
js
cwtl
int
jp
push
inc
rcr
sub
cltd
cmpsl
sbb
sti
pusha
mov
dec
inc
cmpsl
test
fbld
ds
mov
jo
xor
fnstsw
dec
pop
das
xchg
pop
cmp
cld
insl
pop
cld
or
jg
push
push
popa
xor
xchg
call
lods
leave
mov
pop
into
inc
mov
icebp
add
in
lds
mov
sbb
daa
xchg
frstor
or
mov
imul
jbe
mov
xchg
pop
enter
test
add
adc
jns
sub
popf
call
mov
jp
jno
inc
cmp
mov
mov
push
stos
stc
cli
fistpl
xor
mov
xchg
jb
test
jmp
push
and
outsl
mov
xchg
out
push
dec
cmpsb
add
and
add
jae
mov
xchg
push
lret
imul
cmpsb
mov
push
xchg
add
or
mov
popf
jl
daa
ret
mov
mov
sarl
scas
mov
popa
and
repnz
sub
jnp
out
test
in
stos
int
sub
mov
xchg
sbb
jne
dec
dec
jbe
imul
sbb
ror
in
mov
aam
inc
pop
dec
inc
mov
jle
push
adc
call
and
cld
jecxz
shlb
adc
lret
mov
dec
movsl
push
popa
or
mov
pop
mov
adc
outsl
jne
iret
sub
jne
test
push
adc
cmpsb
pop
int
mov
mov
sahf
aam
incl
cmp
sub
sarb
std
inc
xor
xor
and
arpl
pop
loop
fcmovnb
mov
lahf
cmp
aam
dec
test
roll
cmp
cltd
outsb
add
push
nop
cmp
jmp
mov
pop
mov
pop
and
ds
pcmpgtw
jmp
sti
jb
adc
or
or
sar
fcom
and
cwtl
push
mov
daa
or
xchg
or
js
xchg
xchg
xchg
sub
cmp
mov
jne
jae
push
lods
mov
test
repnz
lods
push
pop
aaa
out
add
mov
add
push
pop
cli
xchg
and
sub
loopne
lds
cmp
rcrl
adc
or
jl
shll
xorb
xchg
mov
xchg
js
mov
push
sbb
dec
repz
vpshld
push
cmp
adc
cmp
out
dec
adc
out
cmp
sub
jo
fs
cmp
or
fcomps
xorl
adc
bound
cmp
das
test
stos
jle
int
pop
sbb
loopne
repz
lock
lret
mov
xchg
ficomps
movsl
mov
and
cld
add
clc
lods
add
inc
jne
pop
jne
dec
xor
add
dec
mov
out
or
sbb
bound
and
mov
or
fsts
adc
xchg
or
pushf
and
xor
loope
popf
push
pandn
arpl
in
shlb
add
gs
sbb
lahf
sbb
movsb
jecxz
lea
mov
sbb
push
pop
mov
mov
int3
es
push
fsubl
xchg
ss
nop
sub
fimuls
xor
add
cmp
dec
mov
xor
jp
inc
pop
test
inc
cmpb
jp
js
testb
inc
push
lea
stc
stos
sub
xor
out
mov
add
iret
pop
insl
pop
fcomps
lahf
es
mov
mov
fidivs
repnz
mov
push
fsts
imul
les
inc
dec
cmpsb
push
rorl
and
adc
jecxz
ljmp
test
adc
dec
pop
lea
cli
push
mov
in
test
inc
xlat
mov
adc
repnz
adc
sub
cmp
cmp
wrmsr
jno
je
mov
ljmp
aam
mov
fld
pop
adc
js
sub
xor
nop
xchg
fcoms
xchg
mov
mov
mov
mov
nopl
icebp
frstor
addr16
out
cmp
insl
movsl
inc
inc
dec
dec
mov
and
fildll
xorl
inc
pusha
mov
add
daa
call
ljmp
int
push
ret
adc
add
pop
and
aas
adc
das
bnd
jns
cmp
lds
and
jbe
sub
stc
out
out
sbb
cltd
pop
mov
aaa
mov
cld
mov
jmp
mov
mov
int3
out
iret
pop
pusha
mov
mov
inc
lods
pop
clc
add
daa
cmp
imul
cmp
mov
cmpsl
into
out
cmpsb
outsb
cmpsb
psraw
das
popa
cmp
add
inc
gs
call
xlat
push
adc
rolb
andb
jmp
inc
stos
xchg
push
sub
ret
jb
ja
mov
adc
cmpsl
insb
jno
and
out
jns
lcall
fdivs
cmp
mov
xor
clc
test
jbe
fdivrp
faddl
jmp
in
jbe
bound
aas
js
leave
ss
stos
daa
in
dec
sub
rcl
pop
enter
pop
cmp
mov
cltd
push
and
cwtl
test
mov
mov
cmp
pop
test
add
xchg
test
mov
cmpsb
inc
ret
rorl
or
lret
lods
xchg
sti
xor
mov
arpl
push
mov
jge
mov
add
jns
aaa
jge
in
dec
dec
mov
jbe
jnp
xchg
lds
insb
hlt
xchg
xchg
sarl
insb
jp
and
sbb
and
or
dec
xor
mul
and
jl
jge
aad
push
adc
sub
xor
cmp
in
mov
xlat
gs
pop
fbld
cmpsb
mov
pop
mov
outsb
loope
lods
lds
test
aam
clc
cld
insl
add
in
adc
fsubl
ret
or
icebp
inc
push
icebp
sbb
xor
pop
adc
xchg
pop
mov
or
adcl
lds
cmc
xor
fistl
inc
jo
cltd
cmpb
sbb
adc
mov
mov
stos
or
and
sbb
pop
adc
call
push
jmp
shlb
dec
push
out
pop
cmp
scas
in
xchg
movsb
movsl
iret
out
dec
pop
pusha
and
dec
mov
add
sysret
mov
ja
push
std
scas
ret
ja
dec
sbb
jnp
push
in
xchg
rcr
addr16
jmp
jle
inc
inc
inc
sahf
icebp
jo
inc
dec
adc
xchg
lret
dec
mov
jle
scas
lea
jge
decb
xchg
mov
fs
sarl
dec
outsb
and
cmp
xchg
loope
mov
inc
add
movsb
cmp
jae
xor
pop
xchg
aad
movsb
push
sbb
loopne
rclb
sahf
adc
pop
mov
nop
push
jo
lock
dec
push
xor
fwait
mov
pusha
pop
test
jo
dec
inc
adc
aaa
mov
rolb
ret
pusha
imul
outsl
xchg
push
fs
push
jle
scas
lret
fistl
adc
cmp
ret
xchg
pop
in
inc
repnz
push
les
sbb
adc
dec
std
cs
mov
or
mov
mov
rep
lret
call
stc
jbe
and
sbb
push
pop
inc
int3
xchg
pop
ljmp
push
sarb
daa
lcall
or
popf
cmp
stos
test
loop
xchg
pop
and
add
cli
ds
sarb
or
js
inc
lods
mov
xor
daa
bound
mov
or
adc
enter
out
inc
mov
lret
mov
pop
pushf
movsl
jmp
sbb
xchg
push
cmpsl
jg
inc
mov
adc
adc
xchg
or
dec
sbb
cmpsb
movsb
outsb
insb
jmp
fdivl
xchg
xchg
lret
inc
out
cmp
in
jno
jecxz
test
pop
pop
mov
rcrb
jae
loope
popf
popf
sarb
push
popf
pop
mov
out
xor
es
pop
ds
xlat
pop
mov
mov
pushf
stos
leave
xor
bound
fidivrl
jle
add
pop
es
pop
sub
das
mov
shll
rorl
sub
or
popa
iret
stc
push
push
lret
adc
push
sbb
lods
arpl
mov
jmp
incl
mov
add
and
iret
loopne
xchg
lret
push
pop
xor
jge
pop
loop
das
fwait
mov
shl
or
stos
mov
sub
sarb
sub
adc
pop
fnstsw
mov
cld
js
out
mov
push
adc
mov
int
cmpsl
stc
jl
adc
pushf
jnp
shll
int3
mov
adc
dec
inc
xchg
lock
in
mov
jl
xchg
cmp
cmp
pop
adc
idiv
jb
xor
inc
or
inc
enter
hlt
test
fwait
push
sarb
insb
clc
addr16
mov
jbe
rcrl
shlb
push
xchg
inc
notb
test
add
mov
lret
imul
loopne
xchg
scas
push
stos
dec
or
jle
mov
sbb
and
mov
xchg
jb
mov
repz
inc
stos
jnp
shl
cmp
xchg
outsb
jmp
mov
inc
insl
push
lods
jae
inc
into
mov
lods
mov
ss
inc
mov
or
in
xor
add
ds
cld
je
mov
shlb
mov
lret
cmp
popf
xchg
add
and
inc
and
je
pop
mov
push
inc
in
mov
inc
ficompl
cld
and
mov
mov
xor
xorl
test
cmp
movsl
adc
mov
mov
mov
xchg
std
xor
iret
xor
mov
arpl
ja
es
in
xorb
scas
daa
mov
adc
cltd
xchg
and
mov
pop
mov
sarb
inc
ja
rcl
mov
xlat
push
cmp
push
mov
cmpsw
dec
pop
push
cld
cmp
mov
in
addr16
push
leave
xchg
mov
mov
les
inc
test
out
dec
xchg
clc
icebp
push
popa
movsb
movsb
pop
pop
nop
inc
fprem1
inc
mov
adc
out
arpl
sbb
lock
clc
xchg
sub
jecxz
cltd
es
rolb
or
jecxz
in
inc
rolb
mov
sub
xchg
fisubl
xor
or
push
testl
mov
pop
rorl
dec
repnz
sbb
push
sub
fwait
out
mov
add
in
xchg
in
in
shrl
pop
add
mov
cwtl
inc
imul
jae
mov
cmp
in
mov
cld
jae
aam
out
jmp
dec
into
shll
jecxz
jb
rolb
jns,pt
sub
mov
pop
push
jge
add
hlt
adc
fistl
jne
xchg
sub
aaa
xchg
aaa
xchg
push
pop
jp
xor
insb
jl
pop
mov
xor
xor
sti
stos
test
jns
add
ljmp
sbb
adc
pop
pop
mov
inc
mov
daa
aam
adc
fs
pop
das
dec
adc
das
in
xchg
sti
sti
xor
xchg
movsb
cmp
mov
popf
xchg
mov
fmul
push
out
mov
jecxz
int
iret
adc
fwait
test
lret
mov
enter
arpl
jg
push
out
sbb
sbb
loop
xor
pop
scas
movsl
imulb
mov
negl
cmc
xor
sub
notb
mov
mov
sbb
scas
sti
jg
jo
loopne
loop
add
imull
cwtl
xor
in
es
icebp
sti
lods
in
inc
mov
imul
pusha
inc
sti
lret
gs
fwait
xlat
repnz
ret
scas
rcrb
adc
pushf
or
popa
xor
push
insl
aas
dec
pop
into
or
sahf
in
scas
cli
lea
jle
inc
jmp
popa
cmp
sti
in
out
inc
cmp
and
addl
sub
outsb
mov
repz
push
add
clc
aas
popf
push
pop
cmc
pop
push
addb
add
lret
ret
rcrb
les
adc
sahf
rorb
xor
sbb
enter
popa
das
lods
lahf
xchg
jnp
xor
pop
mov
mov
push
bound
stos
ds
test
test
addr16
cltd
sarb
hlt
mov
dec
scas
test
pusha
pop
xor
mov
push
repnz
test
adc
and
ss
mov
daa
jmp
mov
xchg
lock
jle
clc
mov
sub
cmp
mov
adc
add
or
cmpsl
shrl
mov
pop
stos
add
sbb
push
mov
dec
push
pushf
or
adc
mov
out
dec
loopne
pop
les
sbb
pop
cwtl
cwtl
fwait
mov
imul
xchg
jnp
add
inc
cltd
lcall
leave
mov
mov
arpl
jno
xor
call
xchg
mov
pop
inc
adc
push
repnz
xor
fsubs
or
adc
sbb
hlt
xor
fsubrs
movsl
push
add
xchg
xor
mov
pop
fldcw
outsl
loopne
lret
pop
cmp
in
or
movsb
into
ds
ffreep
rcrl
shll
xchg
push
jnp
mov
pop
pop
xor
int3
aas
loopne
es
add
sub
xor
test
lods
push
mov
imul
inc
cmp
mov
dec
sahf
aad
xor
outsl
cltd
adc
inc
cmp
call
adc
fisubs
add
cmp
inc
jle
mulb
outsl
ljmp
mov
test
push
sub
sub
mov
mov
sbb
sub
je
ds
inc
scas
insl
and
lods
js
clc
xor
jmp
es
jno
cmp
jmp
mov
lds
icebp
and
xor
nop
sub
dec
xlat
test
int
out
lahf
ret
mov
sbb
aaa
adc
cmpsb
sbb
adc
xlat
in
push
jp
stos
rcrb
push
data16
jmp
bound
inc
paddusw
mov
in
int3
call
jmp
pushf
leave
ljmp
sub
bound
jg
popa
outsl
aam
std
add
insl
das
ljmp
inc
fildll
sbb
sarl
sub
pop
add
add
movsb
je
in
sahf
inc
jne
mov
pop
dec
xor
and
add
mov
out
jnp
ret
cld
push
cmp
das
inc
mov
mov
cmp
and
adcb
jl
push
and
xchg
adcb
push
sbb
pop
cltd
lcall
addl
movsl
dec
mov
les
clc
inc
roll
dec
xchg
xor
idivl
je
or
scas
out
inc
jne
pusha
jb
mov
cmp
sahf
push
and
pop
adc
aam
sub
pop
insb
inc
dec
add
rorl
js
add
pop
lret
jns
int
or
cmp
jge
sub
lret
subb
insl
aaa
xor
cmp
sti
push
mov
mov
dec
mov
dec
sar
push
push
test
xchg
jmp
imul
mov
xor
rcrb
nopl
mov
mov
mov
adc
movsl
and
cmc
mov
push
push
jno
xor
jge
add
mov
sbb
test
in
xchg
mov
stos
push
outsb
and
cmp
fs
cs
movsl
pcmpgtw
test
or
jb
sbb
inc
outsb
imul
aaa
mov
imul
icebp
mov
xlat
mov
std
add
movsb
mov
nop
or
aas
cmpsl
jbe
push
dec
cs
push
xchg
or
cld
mov
stc
fistl
sbb
push
dec
mov
mov
or
jo
adc
mov
jle
jp
lds
adc
push
movsb
clc
in
addl
in
dec
mov
sbb
insl
popf
in
hlt
fimull
or
mov
pop
lcall
clc
idivl
cmp
mov
fistpll
or
lods
xchg
or
pop
aas
xchg
mov
lock
push
rcl
rorl
mov
out
sub
mov
shrb
push
mov
jp
imul
push
mov
adc
sub
int3
aam
inc
loope
jbe
das
fisttps
sub
lahf
xor
pop
xor
pop
icebp
gs
sub
cltd
enter
jne
sbb
scas
cs
icebp
lea
ds
aas
push
push
in
adc
push
mov
outsl
xchg
push
cltd
lods
mov
xor
pusha
test
mov
xchg
cwtl
les
mov
jne
or
or
mov
xchg
xchg
rcll
out
cmp
pop
roll
cmp
data16
or
push
add
outsb
xchg
xor
or
pop
popl
in
jle
sti
push
xchg
in
aad
int
mov
fstl
sbb
out
pop
fisttpll
add
in
push
or
jl
fcoms
mov
mov
push
hlt
inc
sub
dec
pop
mov
fcomi
hlt
push
mov
sbb
aas
adc
data16
andl
mov
rolb
xchg
mov
mov
out
inc
mov
inc
jg
push
mov
stos
adc
lahf
out
xchg
pop
sbb
ret
mov
lret
pop
xor
stos
aam
mov
cwtl
fcoms
imul
mov
icebp
dec
out
cld
cmp
stc
insb
mov
in
push
clc
xchg
add
adc
inc
addr16
fisttps
mov
inc
xchg
neg
sbb
in
fnstsw
sbb
mov
lea
or
lret
sbb
fidivrl
stc
sbb
fcompl
xchg
data16
movsl
movsl
dec
add
imul
inc
les
xchg
dec
daa
insb
pop
int3
mov
fsts
mov
mov
dec
shrl
push
rol
imul
cli
xor
or
cs
outsl
ja
int
mov
ret
xor
push
jp
push
aad
daa
insb
mov
lods
fstl
addb
add
or
jmp
mov
aam
xchg
dec
rcrb
push
push
mov
xchg
mov
adc
jae
jp
or
inc
in
jno
jb
jbe
enter
shrl
sub
push
and
sti
lcall
pop
mov
xor
push
rcl
xchg
jnp
mov
lcall
scas
dec
int3
in
jp
push
push
cwtl
nop
xor
mov
lea
jo
add
mov
inc
clc
cwtl
cs
das
cwtl
lods
mov
pop
dec
adc
xor
fdivrs
daa
jmp
jl
aad
and
imul
inc
adc
jae
adc
mov
push
mov
adc
xchg
dec
mov
add
ret
mov
sub
es
fmull
and
mov
xchg
push
sbb
bound
adc
adc
enter
dec
in
mull
lods
das
dec
fiadds
es
cltd
mov
aaa
lock
inc
shll
xor
stc
or
incb
movsl
sahf
xchg
adc
stos
adc
inc
jl
xor
xor
repnz
adc
outsb
loope
xchg
sub
xlat
mov
ret
mov
mov
inc
je
fnsave
popf
ja
push
mov
mov
mov
fimuls
in
mov
into
jbe
push
icebp
pop
jge
adc
mov
or
lods
fcmovnbe
cmp
add
stos
mov
orl
push
popa
mov
stos
psubq
arpl
out
mov
fisttpl
add
jge
fdivl
dec
outsb
pop
jl
out
out
sbb
pushf
mov
sub
dec
push
jae
push
add
push
stos
rcl
xchg
cmp
adc
das
jl
in
out
cmpsl
in
pop
in
insb
adc
sbb
xchg
cmp
lret
push
adc
aas
or
and
or
neg
jno
dec
shl
or
jns
shlb
xor
push
mov
cmp
lcall
jle
and
jno
mov
sahf
ljmpw
mov
movb
fldt
cs
jae
in
and
dec
lret
cmp
pop
outsb
mov
cmp
mov
push
adc
jp
sub
or
fsts
js
movsl
jp
pop
mov
test
dec
fs
das
sbb
mov
jp
fisttpll
add
in
cs
lock
xchg
pop
out
mov
ret
adc
push
jne
push
dec
in
iret
xchg
add
sbb
pop
faddl
stc
data16
test
cmp
sbb
push
jecxz
sbb
rcl
xchg
faddl
call
test
cli
dec
pop
in
testb
fwait
lea
rclb
jae
jecxz
mov
es
lea
loope
dec
ds
mov
loope
jge
movsb
test
push
pop
cmc
dec
push
cld
lret
imul
xchg
shlb
push
dec
in
es
inc
jl
clc
inc
add
mov
push
and
int
and
dec
out
fcmovnb
pop
lahf
cs
pop
pop
jmp
test
fld
pop
gs
test
jno
pop
push
outsb
pop
inc
loope
orb
xor
push
aaa
out
mov
movsl
pop
xor
invd
popf
xor
aam
popa
mov
xchg
or
dec
and
jge
push
dec
mov
outsl
adc
lcall
inc
inc
or
adc
out
push
xchg
lods
or
mov
ret
xchg
outsl
fxch
cmpsl
out
mov
pop
imul
or
or
loope
stos
loope
out
or
lods
imul
ja
notb
mov
bound
mov
mov
and
cmpsl
or
in
lods
fmuls
pop
test
mov
cltd
dec
jl
jmp
push
and
pusha
push
aas
call
and
addl
inc
mov
dec
xchg
sarb
push
adcb
xchg
sti
out
jns
and
int3
push
in
fstpt
jecxz
sbb
lods
xchg
jo
jbe
mov
pusha
jmp
inc
xlat
jl
filds
or
xor
jns
jecxz
pop
stc
and
imul
fidivrl
jle
add
das
fadds
outsl
lods
jp
subl
jns
into
mov
sub
and
imul
pop
pushl
push
fs
inc
andl
std
sub
push
lret
cmpsl
hlt
stc
cmp
adc
bnd
data16
xor
in
lahf
dec
scas
push
out
lods
push
imul
push
test
fstpl
add
cwtl
out
fldcw
jge
fisubrl
xchg
shrb
pop
insb
sbb
stos
push
mov
push
jno
adc
loopnew
adc
sti
loop
rcrb
frstor
sbb
jb
outsl
push
dec
add
sti
in
out
mov
push
lods
mov
repz
fmull
push
sub
fsubs
sbbb
jmp
sbb
jl
lcall
cmc
stc
cmp
xchg
clc
or
mov
mov
movsl
mov
popf
pop
push
jl
sbb
pop
add
inc
call
dec
mov
cwtl
ret
xadd
pushf
adc
ret
push
test
xchg
loop
cld
jae
cmc
sub
jae
fisttps
cmp
mov
jge
xor
inc
inc
dec
jae
cmp
imul
fstl
inc
push
sbbl
shrl
cmp
jne
cmp
mov
bnd
xchg
adc
outsb
mov
test
insb
out
in
insb
add
mov
stos
arpl
add
jb
inc
fildl
fisttpl
mov
rolb
pop
dec
daa
jns
rcll
adc
dec
xchg
sub
repz
lods
ds
aad
xchg
xor
xchg
je
lods
cmp
pop
cmp
xor
xchg
xchg
test
sub
mov
cltd
push
pop
gs
push
lea
hlt
and
mov
cmc
data16
jae
jp
pop
dec
les
ror
ficoms
scas
insb
fadd
or
icebp
push
dec
mov
pop
mov
inc
test
out
leave
out
push
inc
les
mov
mov
push
mov
mov
xchg
lahf
mov
pop
xchg
inc
mov
mov
sub
loop
addr16
in
add
les
repz
mov
fdivp
xchg
xor
fnstsw
xchg
or
lock
aas
scas
ret
cmp
jge
push
xchg
out
add
sub
mov
shrb
adc
call
push
pusha
or
scas
mov
in
jne
bound
jle
mov
mov
push
mov
jns
mov
cs
mov
inc
push
fwait
icebp
mov
or
aas
cmc
mov
out
xchg
dec
sub
pop
fs
jns
imul
repz
popf
rolb
sub
repz
sbb
pop
inc
aas
add
push
xor
test
push
jns
push
lcall
subb
es
dec
jmp
cld
xor
mov
push
cltd
dec
pop
lret
iret
jl
sbb
adc
scas
arpl
mov
mov
mov
adc
mov
jb
pop
xor
sarl
aas
adc
mov
adc
mov
fdivrl
aad
xor
or
mov
sbb
lds
insb
cmpsl
mov
cwtl
jp
adc
aad
shrl
inc
cmp
or
jb
xchg
pop
pop
sbb
jge
xor
push
dec
nop
mov
ret
or
iret
pop
test
and
jne
adc
int
and
pop
arpl
cmp
mov
subb
movsl
xchg
nop
push
add
aad
pop
out
addr16
push
inc
jg
jge
pop
xor
pop
scas
sub
lret
sub
or
into
lahf
pop
lss
imull
push
fcoml
pop
test
into
mov
mov
aam
arpl
inc
fcmovbe
dec
fsubrl
cld
ljmp
mov
sbb
idivl
shl
out
mov
sti
mov
xorl
sarb
arpl
dec
pop
dec
out
jnp
les
xchg
adc
aam
shll
adc
inc
mov
jge
repz
loope
mov
push
fsts
clc
add
cli
jnp
test
leave
int
add
stos
cmp
mov
in
ds
cmpsb
mov
xor
push
jl
xchg
or
rorl
jg
sti
movsl
ljmp
test
jnp
push
add
and
adc
outsl
les
mov
ret
dec
mov
arpl
rorb
mov
inc
adc
jne
jge
pop
jne
sbb
xchg
lds
movsb
or
inc
inc
pop
xlat
mov
pop
xchg
adc
push
dec
mov
mov
mov
imul
sbb
cmp
adc
pop
ds
test
sub
arpl
call
xor
outsb
fs
rcrl
sahf
push
dec
stc
mov
insb
xor
xchg
rcrb
lods
mov
add
xor
jmp
repnz
push
call
xchg
fmul
xor
call
jo
push
mov
outsb
scas
pop
dec
dec
cwtl
or
jo
jno
fprem1
jmp
in
out
out
fwait
pop
arpl
dec
inc
test
fidivl
xor
xlat
jbe
adc
in
clc
pop
mov
pop
out
cmp
out
sahf
sbb
xchg
sub
adc
pop
inc
daa
insl
sbb
cwtl
cmp
push
pop
inc
test
loope
mov
add
daa
and
lea
out
mov
repz
adc
and
xor
iret
cs
or
pop
lods
pop
test
mov
or
xchg
ret
xchg
outsb
aas
stos
pop
sbb
outsb
cmpb
fstpt
inc
push
push
dec
mov
xlat
int
adc
pushf
out
mull
sti
jnp
imul
scas
call
loopne
outsb
mov
repnz
mov
cmp
aaa
jno
lock
add
cmp
stc
xchg
jae
adcl
rcl
cmp
pop
test
cmc
mov
lahf
xchg
out
add
repz
jmp
fs
divb
sbb
inc
sbb
test
loopne
mov
test
add
cmp
sbb
popa
and
fsts
cwtl
cld
addr16
add
in
mov
mov
jg
ljmp
add
stos
in
push
dec
es
imul
mov
bound
jecxz
sbb
in
xchg
xchg
repz
scas
jmp
aaa
mov
outsl
clc
add
jmp
shlb
mov
xchg
push
popa
in
pusha
popa
cs
inc
add
insb
outsl
xchg
pop
pop
out
push
sbb
pop
lret
out
mov
repz
sub
ror
fs
test
push
push
cmpsb
sub
push
int
fldt
pop
ret
fcomip
test
dec
xchg
stc
enter
mov
sahf
inc
sub
pminub
mov
mov
xchg
adc
pop
push
push
add
enter
lret
push
xchg
mov
repz
mov
xor
mov
mov
sbb
mov
in
xchg
scas
sahf
or
loopne
sub
add
or
sbb
mov
gs
popa
sar
fldt
or
imull
mov
frstor
push
cld
push
icebp
fidivs
fdivrs
inc
and
es
fidivrs
push
pop
xor
ret
pop
cwtl
jecxz
mov
sub
cmpsl
add
and
test
stos
cmp
out
testb
bound
pop
or
loopne
shr
fwait
adc
xchg
std
dec
mov
sbb
incl
mov
mov
pop
add
addr16
xchg
clc
mov
jae
lret
jge
clc
cmp
rcl
dec
add
and
into
test
inc
stc
repnz
xchg
cltd
stos
and
adc
push
outsl
mov
ljmp
stos
jbe
decb
cmp
jne
adc
into
orb
mov
rcll
out
sbb
fldcw
flds
int
fwait
xor
xchg
loopne
mov
and
jle
push
in
rclb
pop
jecxz
jecxz
ljmp
ds
mov
mov
or
daa
lcall
sub
xchg
call
push
push
icebp
xchg
int
sahf
stos
inc
je
rcll
arpl
fs
int
pop
ficomps
out
fldcw
fdivl
sbb
loopne
inc
outsl
aas
sbbb
jno
je
xlat
lret
xorl
lret
insb
push
jb
jae
mov
mov
pop
sbb
out
nop
mov
mov
cltd
xor
pop
mov
fsubrs
mov
push
mov
out
and
hlt
ret
cld
sub
call
fstpt
mov
sub
pushf
dec
or
stos
jns
sub
inc
sbb
cs
sub
out
mov
scas
inc
fimull
insb
fldl
and
mov
jo
fwait
xchg
shlb
dec
inc
js
mov
aam
xlat
jecxz
xchg
adc
aam
stc
mov
hlt
jb
mov
jp
xchg
push
sub
imul
fists
xorb
or
movsb
jns
push
xchg
roll
cmpsb
push
adcb
mov
fimuls
inc
cmp
or
jnp
shll
lock
repz
popa
mov
sbb
lock
mov
lret
inc
mov
inc
shl
and
xchg
ja
or
dec
add
sub
out
mov
push
in
mov
into
xchg
add
fists
mov
enter
lock
sti
xchg
stos
pushf
mov
cld
and
scas
jg
mov
call
arpl
jg
xchg
imul
or
inc
or
adc
aas
pop
cmc
daa
xorb
mov
and
mov
inc
sbb
sbb
loop
fisttpl
fwait
cmpl
fbld
sbb
pop
shl
push
outsb
xchg
jecxz
xchg
addr16
push
push
pop
lds
mov
adc
xor
mov
ja
imul
push
mov
xor
divb
adcl
mov
jp,pt
and
sbb
popa
adc
jp
testl
cmp
xchg
jecxz
push
repnz
xchg
sub
aam
xchg
mul
sub
nop
lock
lret
lock
xor
adc
add
rclb
arpl
stos
xchg
loope
hlt
shl
addl
mov
mov
xor
sti
jne
dec
jnp
lahf
adc
mov
inc
mov
scas
movsl
je
cmpsb
out
xchg
and
inc
shll
inc
xchg
mov
int
in
aas
push
sub
and
test
cmpsl
xchg
nop
fisubs
into
adc
rcrl
out
cmpsb
mov
cltd
cs
push
fsubl
sub
sahf
xor
outsb
sahf
ret
scas
and
add
call
fdivp
sbbl
dec
stos
jge
loop
aad
lahf
int3
out
js
cltd
cmp
cmpsl
adc
das
add
pushfw
lret
sub
outsl
cld
pop
mov
hlt
rorb
fwait
pusha
jne
dec
call
jle
test
mov
pop
stos
out
lahf
xchg
pop
fimull
pop
inc
lret
mov
fs
into
cmp
scas
jg
mov
sbb
and
push
hlt
push
inc
cwtl
mov
jns
cmc
outsl
shl
xchg
fstpt
in
nop
fs
pushf
ljmp
sub
lods
jbe
les
mov
dec
fisttpll
enter
mov
mov
fmul
pop
jnp
inc
push
stos
test
or
adc
enter
xor
es
enter
ret
mov
cld
cmpb
fnstcw
sahf
hlt
mov
outsl
adc
fwait
mov
xor
mov
jmp
in
inc
mov
inc
mov
in
jae
sahf
ret
push
fnstsw
ds
xchg
loopne
xchg
jnp
pop
add
adc
push
inc
and
les
pop
dec
jns
fs
xlat
cmp
jb
sbb
hlt
insb
inc
push
out
cwtl
cmpsl
out
and
data16
jbe
cmp
iret
sbbb
test
inc
call
ret
je
cli
mov
inc
sbb
loop
fildl
dec
lret
push
fcomps
lahf
dec
into
lods
es
xor
loope
fsts
mov
stos
mov
push
push
js
or
jge
leave
lcall
pusha
iret
dec
cmovnp
gs
sbb
outsl
imul
or
inc
dec
cmpsb
fdiv
out
push
jns
inc
sarb
fwait
test
scas
mov
mov
cmc
ja
ret
int3
subl
ret
js
cwtl
adcl
mov
sub
mov
lret
mov
das
push
nop
jne
inc
mov
jno
cmp
jmp
jnp
mov
push
inc
fdiv
xchg
rol
mov
inc
adc
or
mov
sub
movsb
inc
mov
cltd
push
mov
lods
or
push
leave
sub
jg
test
ficoml
jecxz
icebp
out
cmp
je
out
iret
cmpsl
mov
daa
or
in
movsl
cmpsb
mov
push
push
ljmp
and
icebp
movsb
mov
imul
inc
jo
mov
test
scas
int3
fidivs
pop
cli
dec
jl
push
or
lock
mov
out
jmp
outsb
sub
cmp
stos
jno
testl
into
mov
mov
lea
cmp
loope
jae
movsl
jb
scas
in
loop
test
xchg
ficomps
imull
mov
fldenv
pushf
jns
fld
ret
inc
push
js
add
test
cmp
cmc
into
nop
aam
ja
into
loopne
cltd
ror
push
sahf
loopne
cmp
shll
insb
clc
insl
roll
int
aam
and
pop
push
adc
or
cwtl
inc
sub
pop
cmc
xchg
dec
sbb
repnz
sbb
sbb
mov
jmp
mov
repz
sbbl
lret
jmp
xchg
call
mov
aas
add
push
pop
push
imul
bound
call
iret
cli
mov
add
mov
int3
jp
into
mov
adcb
bound
xchg
ljmp
push
adc
mov
popa
orl
sub
or
lds
scas
and
sbb
xchg
mov
xor
xchg
dec
loop
stos
cmp
pop
or
clts
hlt
push
mov
mov
push
fucom
icebp
lods
scas
sbb
xor
mov
aad
sti
movsb
adc
jae
je
ret
cmpsl
push
es
lahf
ss
push
loope
insl
das
lahf
add
mov
lock
aaa
mov
mov
adc
andl
pop
mov
jl
jmp
mov
rol
out
push
aam
scas
and
dec
cmp
jg
int
push
sarb
sar
test
sbb
pop
imul
push
shrl
movl
cmpsb
inc
sbb
int3
and
sbb
push
sbb
inc
cmp
jl
xor
dec
add
jnp
push
sbb
pop
jb
pop
lahf
andl
mov
jge
xor
cmp
pop
mov
mov
jae
sbb
lret
mov
jo
push
addl
mov
test
adc
xor
pop
pusha
sti
inc
aas
outsb
int3
mov
adc
loope
pop
inc
enter
mov
mov
cli
or
add
imul
or
movsb
loop
cwtl
pushf
mov
cli
adc
and
lock
hlt
lods
loopew
inc
iret
fs
pop
inc
sbb
jl
loope
cmp
int3
repnz
mov
add
add
mov
out
mov
push
jg
jae
xorl
jae
mov
pop
mov
lods
loopne
mov
aaa
int3
inc
aam
lea
xor
jne
out
mov
outsl
loope
ds
dec
incb
sbb
add
dec
scas
lcall
push
div
cmpsb
mov
mov
cli
pop
push
icebp
lcall
add
cmp
add
aad
dec
add
rcrb
sarl
stos
sub
data16
push
mov
push
pop
and
rclb
pop
sti
mov
jle
stos
mov
in
in
mov
jge
fwait
inc
orl
push
pop
xor
cmp
daa
add
jb
mov
aad
mov
pop
js
cmpsl
fstp
xchg
insl
adc
push
and
int3
call
pop
in
cmp
mov
pop
leave
addl
movsl
negb
pop
int3
loopne
mov
fs
cmp
imul
push
sarl
sysret
mov
inc
arpl
mov
insl
cmp
lods
jae
cmp
jmp
sub
ljmp
or
int3
int
adc
sti
xor
in
mov
rorb
adc
inc
into
test
xor
sub
enter
lea
stc
cmp
filds
add
and
stos
stos
aas
mov
pop
ss
inc
xor
and
and
sbb
int
cmc
xchg
aas
mov
mov
sbb
mov
into
rcll
push
dec
jle
out
pop
std
cs
fs
lret
rcll
or
call
popa
inc
mov
xlat
fildl
mov
adc
sub
add
mov
leave
push
data16
push
fsubrs
aam
mov
and
jo
std
or
cli
lcall
adc
dec
roll
jmp
inc
xor
cld
inc
adc
mov
fcmovne
ror
cmp
notl
push
int3
ds
je
dec
push
jae
scas
xor
add
cltd
and
xor
and
cmp
jae
lods
push
mov
sub
stc
ds
cmpsb
ficompl
pop
jmp
jmp
add
sbb
xor
mov
sbb
or
jne
cmp
mov
fldl
push
inc
lcall
insl
out
pusha
lahf
pop
aad
push
inc
pushf
xchg
cmp
enter
pushl
repnz
dec
test
lcall
in
jno
shlb
into
sub
in
push
sbb
mov
adcb
stos
sbb
mov
mov
dec
mov
fcmovu
daa
dec
jecxz
xor
sub
or
popf
sub
jmp
mov
rcrb
pop
das
lea
test
jge
mov
call
mov
inc
or
adc
lods
xchg
mov
cltd
mov
sbbl
push
mov
mov
sub
pop
cmp
into
lods
adc
xchg
push
and
cmpsl
mov
les
adcl
cmp
push
outsl
fdiv
mov
adc
out
inc
stos
iret
sub
or
je
fs
xlat
or
movl
jbe
dec
shl
xchg
adc
lret
mov
jge
addl
neg
ljmp
lahf
out
mov
inc
jns
push
subl
pop
cwtl
add
cwtl
sbb
call
xchg
gs
leave
fnsave
aas
hlt
call
ret
mov
loopne
jns
sub
pop
popa
mov
xor
push
out
sbb
add
rclb
in
sti
sub
cmp
xchg
mov
popf
jae
xorb
push
xor
and
cmpsl
lcall
test
loop
rcl
std
enter
mov
inc
int
mov
pop
inc
jecxz
dec
pop
insb
adc
leave
add
adc
dec
sbb
adc
pop
xor
inc
or
cld
xor
je
cmp
addr16
leave
push
mov
push
sti
cmp
mov
dec
dec
leave
bound
inc
jecxz
loope
sub
lcall
adc
cmpl
cmp
inc
sub
data16
jbe
and
adc
ret
adc
sbbb
xorl
xor
aam
cmp
ss
or
fcmovnb
mov
push
subb
lret
pop
movsb
cltd
aas
idiv
mov
inc
push
movsl
aaa
in
mov
imul
addb
push
xor
data16
ficompl
fimull
push
cmp
int
fst
inc
mov
jmp
in
mov
inc
and
jo
xchg
fnstenv
fdiv
cmc
je
pusha
xchg
mov
test
mov
push
sahf
push
push
fs
adc
dec
xlat
sub
pop
mov
test
or
mov
jb
test
test
push
out
daa
sbb
pushf
aaa
adc
and
stc
sti
outsl
jno
cwtl
cwtl
and
in
dec
push
test
shlb
add
je
mov
dec
xchg
inc
clc
sub
sbb
mulb
mov
xchg
push
test
add
movsl
roll
jp
aas
adc
sub
ret
pop
inc
inc
pop
adcb
rcrl
add
push
jno
xchg
or
fnstcw
gs
lock
mov
jo
add
push
cmp
adc
fldenv
les
sub
shlb
mov
scas
sahf
mov
inc
fldenvs
mov
arpl
push
fucom
cmp
cltd
jo
push
out
dec
clc
sub
mov
addr16
test
mov
dec
mov
inc
jno
stos
notl
es
inc
lcall
das
cmp
pop
arpl
sbb
cli
lods
mov
lock
mov
icebp
adcb
test
add
cld
rcr
lods
xor
mov
leave
xor
cmp
imul
stc
pop
dec
ss
loope
ss
dec
pop
roll
arpl
je
push
rcrl
xchg
push
fwait
lcall
cmpb
test
ja
sbb
int
sbb
ret
hlt
xchg
je
and
out
lods
lret
mov
rolb
addr16
lcall
push
xchg
cltd
cwtl
idivb
jge
push
mov
xchg
jno
daa
mov
add
push
push
cmp
pushfw
adcb
in
xchg
xor
push
dec
adc
popf
pop
jge
add
arpl
push
movsl
xor
js
jg
call
das
add
and
fildll
xchg
xchg
arpl
jne
roll
mov
push
mov
mov
pop
popa
mov
cmp
dec
mov
lret
push
pop
loopne
rcrl
push
or
pop
ret
ret
push
sub
cwtl
sub
lock
mov
in
outsb
js
mov
mov
lock
mov
addb
jbe
pop
dec
pop
ljmp
outsb
jne
inc
pop
sahf
sub
test
mov
insb
sbb
clc
push
imul
mov
adc
test
xchg
loopne
out
pop
jo
cs
cmp
hlt
xchg
mov
bound
pushf
dec
jnp
mov
push
push
dec
scas
sub
jge
adcb
mov
jbe
jnp
cmp
mov
jmp
and
jp
inc
fildl
fildl
aaa
pop
mov
test
xor
xchg
fs
pop
shrl
dec
mull
dec
mov
xor
js
ds
push
stc
imul
nop
inc
mov
ja
push
lods
hlt
mov
cli
and
pop
aaa
clc
in
rcrb
ljmp
data16
inc
in
add
or
imul
xchg
mov
add
shlb
popa
dec
or
pop
jbe
sti
dec
sub
aaa
pop
out
in
mov
xchg
movsb
mov
dec
pop
in
sarl
mov
fimull
xor
push
clc
jge
xor
jbe
push
icebp
xchg
mov
push
inc
push
imul
lcall
xchg
xor
push
ljmp
push
add
sbb
sub
xor
mov
int3
fs
mov
mov
rol
popf
ja
rcll
and
enter
dec
cltd
sub
loopne
pop
pop
mov
leave
int3
insl
sahf
scas
cmp
push
mov
xchg
or
nop
push
mov
add
ret
sub
sub
out
fisubl
dec
and
xlat
outsl
or
mov
mov
nop
fdivl
bound
mov
jp
cmp
into
cltd
in
sub
xchg
pop
sbb
jbe
cs
add
or
xchg
jo
mov
or
movsb
cltd
xchg
mov
jle
or
or
cmp
aam
push
aaa
push
mov
jg
or
ret
cmp
mov
xchg
jecxz
clc
ficompl
add
out
fs
dec
jp
divl
aad
xchg
sub
inc
sbb
addr16
loopne
jle
add
cwtl
inc
sub
mov
aas
lock
dec
mov
outsl
scas
icebp
sar
sub
call
pop
lds
inc
push
fcoml
in
fwait
out
ljmp
arpl
in
nop
mov
pop
shr
je
cmpsb
mov
sub
push
arpl
sub
and
test
shll
loope
test
jns,pt
push
ret
cmp
iret
sbb
popf
insb
mov
add
es
call
cmc
xor
push
pop
jbe
test
insl
add
repnz
fdivl
xchg
add
xchg
in
into
cmp
aam
or
in
ret
inc
loopne
pop
sub
inc
in
jae
or
pop
sbb
repnz
or
sbb
inc
inc
mov
xor
in
decl
std
and
addl
mov
ret
sarl
dec
jne
lds
jnp
cmp
mov
int
outsb
stos
sub
lea
add
inc
ret
rolb
repz
mov
imul
into
call
inc
std
outsb
xor
mov
xchg
mov
in
aas
push
and
mov
pop
xchg
mov
fstpl
cmpl
andl
popa
in
popa
cmp
popa
js
sub
dec
movsb
dec
fs
xor
sbb
and
jl
int3
imul
stos
inc
shll
push
push
loop
mov
dec
jecxz
jmp
sbb
mov
notb
xor
mov
dec
dec
jecxz
gs
cld
jg
add
inc
movsl
mov
xchg
shll
sbbb
mov
std
out
loop
mov
sub
lret
adc
rorb
mov
leave
in
dec
sahf
lret
jg
pop
idivb
lods
mull
hlt
imul
add
outsl
jl
push
sub
fs
imulb
loopne
sub
stc
or
pop
inc
fistpll
pop
imull
push
jg
hlt
aaa
dec
lahf
loope
mov
mov
mov
cmc
sbb
mov
pushl
and
sbb
mov
std
push
pop
mov
mov
mov
addr16
adc
clc
sub
roll
cltd
enter
imul
out
adc
outsl
dec
inc
dec
test
mov
fistpl
inc
scas
je
cmpsl
adc
cmp
aam
call
stos
pop
xchg
fucomp
outsl
divl
dec
ret
fwait
sbb
xchg
loopne
push
dec
push
adc
cmp
lahf
sub
mov
in
or
arpl
push
cmp
pop
cmc
ret
imul
shl
push
adc
mov
push
or
fimuls
jmp
adc
aas
icebp
xchg
imul
sahf
pop
icebp
dec
pop
xchg
rolb
lret
jo
inc
fwait
jp
js
jbe
in
xchg
stos
shr
inc
pushf
loopne
jle
ds
andb
inc
adc
mov
sbb
sub
xor
xor
jecxz
xorl
mov
imul
mov
bnd
popa
or
mov
jbe
addl
and
adc
imul
push
mov
popf
shrb
and
mov
xor
bound
sub
in
sbb
pop
inc
push
sbb
rep
loope
sti
ret
push
cwtl
mov
clc
mov
inc
arpl
xchg
ret
cmp
lahf
leave
push
ud2
addr16
ror
cmp
inc
notl
mov
mov
sub
pop
cmpsb
mov
jle
clc
push
les
sub
or
loope
test
imul
mov
lret
mov
mov
mov
dec
repnz
xchg
xchg
jmp
jecxz
ljmp
dec
fwait
xchg
inc
or
loopne
mov
add
sbb
inc
test
popl
mov
mov
fs
push
push
mov
or
fimull
jmp
inc
mov
insb
cs
inc
sub
lods
test
xchg
in
cwtl
mov
xchg
out
nop
enter
jbe
ret
in
enter
lock
mov
insl
jmp
les
shl
pop
in
imul
das
loopne
outsl
mov
cltd
mov
movsl
popa
jmp
subl
xchg
shrl
mov
dec
mov
dec
mov
inc
mov
jp
pusha
fbld
cmp
jge
sub
enter
inc
arpl
inc
mov
out
in
loope
cltd
mov
jmp
clc
mov
iret
xchg
pushf
pusha
push
cmp
gs
ljmp
jecxz
fsubrs
mov
adc
insb
xor
adc
adc
enter
arpl
lea
sub
jge
dec
inc
call
xchg
xchg
sbb
daa
or
imul
dec
popa
cmp
inc
sti
mov
fs
mov
fnstcw
lods
stos
inc
or
xchg
push
xchg
push
outsl
xchg
divl
int3
sbb
cli
or
mov
xchg
jge
cld
or
lcall
add
push
cld
test
mov
push
and
lock
jae
and
pop
testl
pop
popa
mov
addl
pop
lret
dec
lods
aam
or
insb
sarl
stos
movsb
data16
and
daa
addr16
sub
adc
pop
push
cmpsb
sub
sub
loop
or
mov
and
pop
bound
push
push
pop
xchg
ret
mov
xor
mov
pop
add
xchg
xchg
xchg
jmp
jge
jo
divb
and
xor
into
iret
repnz
add
popf
scas
popa
cmpsb
pop
jae
stc
icebp
popl
ja
enter
or
scas
pop
pusha
sub
sub
xchg
iret
inc
mov
imul
push
ret
mov
and
int
gs
sbb
xchg
and
out
cmpsb
int
xor
add
or
jae
lds
pop
shrd
int
pop
pop
add
js
jo
mov
daa
sub
dec
lods
mov
lcall
or
aaa
outsl
xchg
mov
dec
je
jb
cmp
es
adc
cmp
test
mov
out
or
and
sbbb
xchg
ljmp
pop
cmc
mov
leave
mov
xor
xor
pop
xor
cmp
jno
mov
xchg
rcrl
cmp
pop
cmpsb
dec
movsb
std
idivb
sub
insb
popa
pushl
sub
jae
jbe
xchg
pop
fdivr
push
movsb
sahf
and
out
or
insb
repnz
rorl
fdivl
push
lds
inc
arpl
test
sbb
push
or
gs
pop
jnp
inc
pop
stos
inc
sub
mov
dec
sub
xlat
ficoms
sub
cmp
mov
lods
add
ja
dec
pop
pop
dec
icebp
dec
dec
mov
mov
lea
cli
aam
cmp
mov
insl
test
clc
xor
loope
stos
add
orl
pop
repnz
int3
mov
daa
fdivrp
gs
push
test
sbb
stos
pusha
dec
repz
sbb
xchg
movsb
adc
push
out
lods
pop
cmp
xor
xor
mov
les
xlat
icebp
out
cmc
mov
shlb
mov
gs
push
inc
push
add
fldt
adcl
ret
fsubr
dec
jg
addl
cld
mov
mov
clc
pop
mov
push
lcall
mov
loop
insb
pop
jecxz
xor
aaa
mov
pop
pop
fcoml
and
xor
cwtl
nop
mov
js
repnz
sbb
jp
sub
push
inc
rcll
out
cs
div
push
jnp
lret
or
cltd
loope
ljmp
mov
enter
jg
xchg
xor
sbb
les
jge
mov
rclb
lahf
sarl
shl
jo
enter
rcll
stos
mul
nop
repnz
jb
pop
xchg
popf
mov
add
mov
jp
mov
js
mov
das
sti
jno
ja
mov
in
and
xchg
mov
into
out
test
sbbl
xchg
sbb
mov
movsl
int
jl
mov
adc
jp
sbb
sbbl
iret
decl
jae
add
mov
cmpsb
cmp
cmp
cmp
xchg
sahf
sbb
outsb
dec
cmp
jecxz
fucom
xor
iret
js
cmp
sbb
push
pop
sbb
fdivs
cld
pop
addb
pusha
ret
sub
fistps
icebp
cmp
pop
iret
jmp
mov
mov
mov
add
add
mov
out
dec
inc
mov
sub
adc
push
push
pop
je
fisubrl
mov
push
cs
fimuls
fwait
enter
repz
cmp
pop
cmpsb
or
xchg
int3
std
mov
jnp
pusha
adc
inc
repz
add
sbb
inc
push
ret
dec
aam
mov
sbb
or
rcll
scas
arpl
ljmp
pusha
popf
push
filds
jno
sahf
pushl
xchg
xchg
mov
jp
lods
inc
pushf
pop
ret
push
mov
jecxz
fldcw
fnstsw
mov
sti
dec
out
scas
pop
imul
and
std
mov
fstps
mov
fistpl
in
imul
pop
add
lret
dec
xor
cmp
push
enter
and
in
xlat
jo
fldenv
inc
scas
push
pop
sahf
or
adc
or
xchg
sbb
pop
jo
outsl
fs
ja
scas
int
push
ss
or
pushf
push
sbb
mov
je
mov
ret
mov
jge
push
sub
bnd
mov
repz
lret
leave
xor
mov
inc
push
inc
and
leave
jbe
sbb
lea
mov
add
popl
rorl
xchg
or
mov
into
shl
imul
adcl
ja
cli
std
xchg
scas
mov
dec
adc
jne
pop
lret
cli
push
mov
es
xchg
pop
pop
adc
push
and
jnp
mov
int
lods
and
loopne
fimuls
inc
sbbl
adc
sub
ja
arpl
add
popa
jns
arpl
and
inc
hlt
push
adc
or
mul
adc
jle
loope
call
pop
xchg
add
pusha
push
mov
jb
mov
cmc
arpl
cwtl
push
rorb
mov
jg
ffreep
push
popa
mov
aad
mov
loop
xchg
or
clts
dec
out
sub
mov
adc
js
push
mov
pushf
mov
fldl
bound
aas
mov
and
or
cmp
ja
rolb
add
adc
jmp
mov
out
rorl
adc
rcrl
add
in
inc
pusha
sti
xor
cld
sbbb
dec
pop
push
test
cmpb
or
and
jne
in
lods
js
inc
or
or
xchg
cwtl
scas
mov
mov
leave
popf
push
sub
xchg
fidivs
aas
and
fwait
cltd
jno
mov
enter
test
cmc
xchg
mov
ret
loopne
sub
ror
loopne
cmpsl
outsl
cmp
cmpsb
sub
lcall
sahf
iret
lahf
cmpsl
xchg
inc
adc
imul
jns
loope
movntq
out
rcll
pop
adc
lret
insb
or
pushf
dec
lds
sub
push
dec
and
frstor
dec
into
fdivrl
cli
ja
sub
inc
and
xlat
dec
mov
jge
lock
add
mov
decb
jp
out
cmp
push
mov
push
dec
jno
fwait
hlt
clc
imul
lret
pop
or
push
fwait
daa
mov
push
iret
wrmsr
mov
stos
sub
mov
and
push
arpl
out
fsubrp
pop
push
or
dec
and
jmp
stos
jmp
adc
mov
jbe
add
je
sbb
call
iret
pusha
js
pop
adc
jg
test
jl
pop
inc
dec
cmp
loopne
fsub
sbb
sbb
mov
js
mov
dec
mov
xor
jp
outsb
mov
scas
aaa
inc
jmp
dec
add
inc
scas
addb
fcoml
adc
pop
rcll
fcoml
insb
fs
xlat
mov
push
dec
cmp
in
jns
xor
mov
lock
mov
pop
push
adc
mov
ss
inc
mov
mov
sub
inc
and
arpl
mov
adc
xchg
sub
and
dec
or
inc
jb
aas
mov
les
lds
and
popf
adc
clc
ret
sbb
hlt
push
inc
jecxz
mov
bound
push
sub
js
sbb
fnsave
lea
insl
rcrl
xlat
push
ficomps
xlat
jo
out
sub
pusha
sub
dec
pusha
mov
push
jo
scas
xchg
iret
ret
lea
adc
dec
push
dec
daa
push
adc
push
push
jno,pn
inc
aaa
pop
outsl
xchg
xor
cs
iret
sub
in
das
out
mov
jae
push
xchg
out
lods
sub
lods
adc
inc
adc
add
iret
insb
aad
rcrl
les
fbstp
rorb
outsl
outsb
push
out
lcall
lahf
aad
sub
xchg
nop
xchg
xorb
cltd
mov
les
popf
sbb
loop
add
pop
cmc
jge
lods
enter
mov
or
loopne
jle
add
nop
push
test
dec
ret
add
nop
dec
sub
adc
out
jne
lds
xchg
movsl
ljmp
imul
sarb
pop
pop
jnp
mov
in
push
outsb
ljmp
lcall
fwait
mov
push
xor
pop
pop
les
mov
aad
xchg
jge
sbb
cmp
hlt
mov
adc
inc
sarb
test
sbb
xor
mov
icebp
andb
loopne
dec
xor
imul
sub
pop
pop
shll
xor
aad
fwait
loopne
cmpsl
jns
push
add
lret
jle
adc
movsl
cmp
rorb
popf
fs
push
leave
sahf
lds
imul
adc
mov
fnstcw
jecxz
ds
mov
mov
inc
or
fisubl
fldcw
rcrl
shr
sub
and
mov
mov
xchg
sub
addps
cmpsb
leave
cs
fsts
jne
adc
std
mov
mov
jbe
dec
xchg
cmp
aam
sahf
in
in
imul
into
sahf
fsubs
jge
in
lret
jne
negb
inc
dec
xorl
jns
mov
dec
roll
inc
vminsd
aas
cmp
outsb
pop
and
mov
xor
sbb
movsl
xchg
fimuls
mov
out
dec
lret
adc
push
aas
or
mov
inc
add
lods
mov
xor
ss
jge
jne
das
xor
dec
arpl
scas
scas
fadd
pop
inc
push
adc
out
les
mov
dec
push
jmp
sub
xor
push
sub
or
sbb
mov
dec
xacquire
aaa
xchg
imul
fldl
adc
fcom
shll
int
hlt
subl
inc
insl
jnp
inc
mov
xchg
xor
add
push
pop
loop
andl
rorl
imul
xchg
sub
and
lret
and
mov
test
je
dec
mov
sti
and
in
pop
and
or
ja
out
mov
mov
cmp
pop
jae
mov
popf
add
cmpb
cmp
insb
cs
outsb
jg
push
cmc
insl
jge
pop
cmp
pop
inc
insb
mov
pop
mov
pop
mov
sub
or
bound
idiv
push
xor
mov
sbbl
imul
pop
xor
mov
hlt
testl
push
adc
push
pusha
popa
push
imul
pop
xlat
dec
mov
pusha
fistpl
jnp
add
ss
mov
mov
adc
or
push
mulb
rorb
dec
in
mov
mov
pushf
fldcw
dec
mov
mov
mov
push
shr
and
push
je
insl
fs
fldl
mov
push
jmp
scas
in
mov
push
aam
push
sbb
lcall
add
sahf
inc
add
sbb
mov
mov
pop
push
mov
lcall
jne
sub
jb
cli
xchg
je
cld
insl
adc
fcmovne
lds
in
cmp
pop
xor
and
sub
outsb
ficoml
mov
movsb
mov
nop
sbb
daa
dec
pop
imul
and
cli
in
aam
insb
jae
scas
mov
mov
mov
insb
shlb
lods
push
nop
adc
lods
pop
das
lahf
inc
lock
stc
sarb
ds
and
pop
out
lcall
add
sbb
mov
push
ljmp
sub
jae
cmp
mov
pop
adc
fisttpl
pop
subb
stos
aas
repnz
push
and
test
mov
repz
pop
push
scas
mov
sbb
gs
or
and
xchg
cmp
aaa
sub
push
daa
and
sub
hlt
mov
xchg
subl
sbb
mov
mov
cmpsb
clc
addr16
xor
dec
cltd
lret
mulb
shr
gs
push
pop
push
xor
cmc
fs
inc
add
out
jmp
or
cmpsb
xor
ljmp
aam
mov
stos
pop
pop
xchg
loop
cli
inc
cld
dec
fisttps
cmpb
jb
sbb
cld
push
pop
aas
push
mov
sar
cmpsl
dec
nop
push
mov
push
sub
mov
ret
pop
sar
jo
adc
inc
mov
push
test
pop
imul
push
lcall
inc
adc
mov
xor
fwait
dec
jmp
dec
inc
ret
xchg
data16
mov
adc
jmp
adc
sbb
out
xchg
pusha
xchg
inc
mov
xor
xlat
stos
add
jg
cmpsl
xchg
ret
loope
mov
add
aaa
pushf
dec
sub
adc
pop
cli
aad
cs
lahf
pusha
fsubl
xchg
arpl
ss
or
cmpl
out
inc
and
push
mov
push
rcrl
xor
sbb
loop
mov
mov
xchg
mov
xchg
jbe
inc
loope
dec
jo
arpl
xor
std
pushf
add
push
repnz
push
fisttpl
outsb
dec
es
mov
loopne
inc
push
ja
mov
arpl
stc
cmp
loopne
and
pop
or
cmp
jp
cmp
ljmp
je
je
dec
testl
js
nop
push
cmp
ljmp
jge
sbb
mov
xor
jns
mov
scas
test
dec
mov
or
xchg
shrb
mov
rcrl
pusha
fildl
out
in
fdivl
loop
mov
shrb
or
scas
mov
popf
xchg
mov
cli
xchg
or
mov
pop
leave
push
movsb
xchg
pop
or
frstor
test
xchg
cld
sub
push
cwtl
push
jbe
add
xor
stos
fsubs
jecxz
fstps
push
pop
mov
js
pop
mov
inc
jle
jns
sub
inc
popf
ss
mov
inc
push
iret
pop
test
mov
jne
xlat
cmp
fstl
mov
mov
dec
push
cmp
inc
dec
adc
stc
pop
lock
jb
rorl
pop
jecxz
inc
xlat
mov
aad
outsl
mov
mov
int
in
icebp
fcmovb
les
jecxz
xor
gs
out
fst
push
mov
jns
cmp
cs
out
js
cmp
mov
in
loopne
dec
mov
sbb
mov
mov
adc
jle
mov
jge
out
movswl
jg
jne
scas
push
xor
push
aam
inc
xchg
daa
xchg
push
mov
mov
xchg
fsubp
push
lahf
or
jp
lods
xor
jns
and
dec
cmp
cmp
pop
popf
pop
xchg
sti
cmpl
mov
dec
cmp
push
mov
lret
add
jb
sbb
add
jo
fidivl
cmp
lcall
dec
out
pop
push
repnz
jg
fcmovbe
or
sub
adc
xchg
in
sub
inc
pop
jne
push
rorb
mov
push
sbb
add
out
mov
mov
sbb
insl
xor
inc
loope
in
arpl
test
lds
mov
lods
ficompl
fcompl
mov
mov
bound
xor
cmp
cmpsb
mov
in
cmpsl
cmpsl
dec
add
inc
and
add
loopne
mov
adc
mov
jg
cld
push
fldt
dec
adc
ret
push
or
leave
into
sahf
xchg
in
std
fwait
ret
dec
xor
add
xor
lahf
push
or
loopne
pop
frstor
roll
icebp
dec
xchg
cmp
popf
cwtl
mov
add
or
dec
in
or
push
pop
sbb
arpl
jp
in
cs
jge
mov
mov
mov
mov
cmpsl
hlt
lahf
add
into
push
xchg
cmp
and
xlat
cmp
dec
daa
sub
pop
dec
vmovddup
pop
or
mov
cmpsb
roll
xchg
sbb
rclb
bound
aad
int3
into
dec
call
loope
loopne
test
mov
std
mov
scas
and
js
fidivrs
bound
lret
xchg
stc
stc
dec
cmp
inc
xchg
cmpsl
aam
int3
sub
mov
push
int
push
lock
sbb
test
jae
cwtl
push
in
call
jnp
lds
fsubrl
repz
frstor
lahf
jecxz
shrl
scas
sbb
dec
sub
test
imul
out
mov
adc
jecxz
and
push
gs
xchg
aaa
pop
fcos
sbb
push
call
sub
scas
rcl
pop
push
xchg
jp
sbb
sub
ljmp
sahf
push
cmp
mov
test
shlb
lret
out
pop
mov
fwait
jmp
fs
lcall
xor
or
testb
movsb
dec
and
add
mov
fwait
and
vorps
pop
inc
or
movsl
xchg
xchg
popa
xor
mov
or
imul
das
repnz
imull
cmp
shr
int3
mov
push
jno
mov
xor
push
imul
sbb
call
outsl
sbb
ss
sub
fmulp
adc
out
push
dec
mov
lahf
push
add
fwait
jne
and
dec
shr
rcll
sub
lds
cmp
mov
daa
pop
push
adc
add
cmp
xchg
add
cmp
jle
sti
push
bound
mov
or
mov
les
mov
mov
aaa
adc
jp
faddl
cld
xchg
ret
jg
xchg
lret
sti
sbb
fsubr
xchg
out
jo
cvtpi2ps
cmp
adc
lods
stos
jge
ret
pop
jno
push
push
jns
inc
mov
xor
in
hlt
rclb
push
lods
hlt
jnp
adc
cli
pusha
fcoms
xchg
cltd
cli
xlat
xchg
or
push
xor
addr16
shrl
add
sbbb
gs
out
pushf
and
popa
test
jp
in
and
jb
xlat
stos
lock
mov
mov
and
fildl
rcrb
xchg
mov
and
lcall
mov
arpl
add
mov
movd
mov
push
mov
xchg
mov
leave
jnp
add
or
mov
add
rolb
adc
mov
stos
pop
outsl
mulb
push
std
cld
and
jl
mov
add
cmp
dec
jecxz
movsl
xchg
es
sub
sub
das
pop
adc
push
jno
mov
xor
dec
mov
std
les
push
xor
cwtl
imul
or
into
and
sbb
mov
hlt
dec
jo
repz
repz
inc
fimull
lds
ss
cltd
addr16
stos
mov
fnsave
or
mov
cs
fsubr
xchg
adcl
ret
inc
push
inc
xchg
cltd
push
xchg
lea
pop
pop
scas
jl
cwtl
aam
jne
hlt
push
adc
pop
fiaddl
cli
je
sbb
add
jne
cltd
cwtl
call
out
mov
in
lret
daa
jne
and
or
lock
shll
jp
lcall
dec
mov
fidivrs
sbb
push
push
fs
out
loopne
int
cwtl
lret
pop
or
xchg
push
mov
je
scas
adc
adc
insb
jmp
decb
sbb
rcrb
mov
ss
mov
and
add
xor
jg
mov
scas
and
push
pop
fistpl
pop
adc
rorl
sbbb
pop
xor
cltd
out
xlat
push
jns
in
not
inc
sbb
mov
jbe
movsb
lahf
jmp
je
or
mov
loop
int
or
pushw
jne
jb
repnz
mov
cmp
sub
mov
cmpl
mov
jmp
ljmp
cmp
xchg
out
jbe
xchg
pop
cmp
jle
or
xorl
ljmp
imul
cwtl
fs
mov
test
arpl
mov
repnz
ret
bound
scas
and
cmp
and
nop
pop
xor
fnstenv
xor
fnsave
data16
shld
jno
ds
adc
popa
int3
into
dec
aas
cmp
sbb
insl
sahf
in
xor
jecxz
sbb
dec
add
and
push
loopne
cmpsb
jnp
rcr
cs
lahf
sbb
in
sub
out
fsubl
lock
jle
fwait
sub
jg
movsl
setg
mov
add
std
ficomps
or
cmpsl
sbbl
icebp
push
test
xchg
and
dec
ja
movsl
lret
scas
sbb
out
xchg
mov
and
mov
jmp
negb
push
dec
jns
pop
insl
xchg
testb
xchg
ficoml
in
mov
adc
push
in
lods
popf
lret
icebp
add
mov
inc
or
lret
xchg
aad
outsb
icebp
cli
cmc
and
push
lods
enter
cs
xchg
and
ret
jns
inc
xorl
inc
iret
push
push
mov
lret
sbb
jecxz
adc
xor
jne
test
repz
out
mov
xor
vandps
cmpsb
and
ljmp
mov
stos
mov
cltd
shl
xchg
lret
sbb
lds
es
inc
aam
push
and
into
mull
out
fmull
loop
mov
andl
or
fmuls
mov
scas
cmp
repnz
div
mov
repnz
xlat
shll
negl
pop
lea
or
ficomps
test
lods
iret
test
mov
imul
lods
shlb
push
xorl
mov
mov
cmpsb
cmc
pop
cmc
std
int
repnz
and
add
and
rorb
loopne
push
addr16
jle
movsb
mov
hlt
decl
or
dec
mov
or
pusha
cmp
xchg
xor
add
push
lahf
dec
pop
stc
inc
outsb
jo
les
or
addr16
loope
mov
out
in
loope
mov
jle
lret
jl
js
sahf
out
js
push
clc
outsl
shrl
repnz
lcall
mov
loop
jmp
enter
or
out
add
xlat
inc
inc
jg
mov
movsl
aam
int
or
mov
test
daa
aaa
pop
lds
mov
push
bswap
adc
mov
xchg
fs
mov
xchg
test
repz
mov
inc
addl
out
and
loop
ss
data16
xchg
xlat
nop
xor
xlat
xchg
jae
movsl
popa
mov
jo
sti
enter
dec
movsb
negb
inc
xor
push
jmp
cmc
mov
push
lret
sbb
mov
in
or
fbstp
fidivl
mov
lds
test
mov
pop
cli
jle
mov
inc
test
aam
movsb
or
mov
sub
aad
fiadds
sbb
push
rcrl
pop
pop
test
adc
mov
pop
and
push
cmp
icebp
pop
test
ja
xor
idivb
adc
popf
enter
mov
push
cld
out
push
jnp
pusha
adc
mov
lcall
add
cwtl
jmp
adc
mov
fsubrl
mov
mov
es
sbb
jp
mov
mov
bnd
dec
gs
mov
or
xor
xorb
repz
push
jae
sbb
stc
imul
mov
sub
mov
cmpsb
loop
dec
dec
cwtl
mov
xchg
xchg
pop
mov
arpl
or
rclb
sahf
fistps
daa
xchg
ss
cmc
cmp
adc
and
daa
mov
in
and
push
mov
lret
out
loopne
xor
roll
push
rcrb
fs
jnp
bound
jl
dec
fmuls
jne
outsl
add
js
cmp
jbe
pop
sub
jg
imul
sbb
add
mov
mov
xchg
movsl
xlat
push
repnz
lods
sti
mov
mov
into
rorl
sti
addb
cmpsl
aaa
pop
fwait
cld
push
and
cld
sub
lahf
sbb
xchg
iret
cmpsl
das
outsb
addb
lock
cwtl
and
or
int3
or
std
xchg
pop
lret
or
scas
or
jmp
xchg
and
in
sbb
xchg
fisubrl
mov
fwait
shrl
idivb
or
iret
out
ret
xchg
push
mov
aad
xlat
addr16
push
div
pop
jae
cmp
outsb
pop
outsb
xchg
sbbb
mov
jle
adc
into
push
ss
pusha
lahf
pop
ds
enter
sbbb
es
call
inc
xchg
pop
shl
mov
rolb
push
pop
into
fcmovnbe
in
scas
sbb
jb
stos
fisubl
pop
mov
jne
loopne
adc
cli
mov
lret
xchg
fxch
jge
mov
mov
aam
in
xor
sub
fisubrs
pop
aad
sub
dec
mov
push
icebp
mov
dec
and
fidivrs
mov
or
jp
sbb
fidivs
std
icebp
fbld
les
push
push
pop
test
addr16
out
hlt
xchg
or
jg
add
mov
dec
jmp
xor
inc
shll
faddl
xchg
imul
pushf
push
mov
mov
rcrl
ds
pop
pop
dec
sahf
call
leave
scas
je
xchg
xchg
inc
mov
scas
fiadds
mov
or
xchg
clc
sub
daa
xchg
xorb
sahf
testb
adc
jp
xor
into
sbb
stc
mov
dec
out
clc
xchg
dec
sub
push
test
jl
ficoms
jmp
mov
popa
std
adc
lods
and
divl
daa
add
push
fnstenv
jg
sub
je
hlt
xchg
out
dec
call
xor
push
addr16
push
movsb
jb
pop
or
pop
adc
into
stos
fs
pusha
dec
sbbl
push
cwtl
or
in
mov
pushl
ret
data16
dec
push
cwtl
sbb
fsubrl
scas
push
add
adc
mov
push
push
pop
ficompl
int
ljmp
icebp
ss
cld
pop
aas
inc
jle
sahf
scas
sahf
cs
negl
mov
adc
inc
inc
mov
rcrb
outsb
fucomi
inc
jbe
test
stos
inc
sub
mov
mov
inc
cmp
scas
adc
cmp
scas
clc
cwtl
xor
push
xor
rcr
js
int3
add
xchg
gs
mov
sub
xchg
pop
sbb
rorl
icebp
xchg
inc
pop
dec
cwtl
loopne
fsubrs
dec
add
int
testb
lods
das
pop
cwtl
mov
mov
aaa
rclb
mov
test
jge
xor
test
into
push
cmp
and
out
pop
aaa
lods
pop
add
inc
sti
int3
stc
enter
add
cmc
jbe
sub
adc
enter
hlt
pushf
mov
xchg
stos
pop
lods
lds
cld
mov
jl
sarl
adcl
cmp
aaa
pop
fsubrs
or
jns
mov
pop
out
cmp
or
mov
adc
mov
add
into
mov
decb
lret
cltd
movsl
push
inc
mov
xorb
push
std
rcrb
mov
add
aad
fnsave
pushf
or
in
nop
sti
int3
stos
movb
xchg
cwtl
and
and
push
sbb
fisubs
sti
ret
jns
mov
mov
gs
sbb
dec
loope
jmp
xor
out
jns
hlt
sbb
notl
bound
xchg
movsl
cmpsb
sarb
int3
leave
movsb
jnp
xor
jnp
lods
sub
adc
out
adc
xchg
fmul
stos
mov
lock
fsubrl
fcmovne
fsubrp
shlb
cmpsb
inc
adc
push
adc
in
mov
and
arpl
fidivrs
rol
pop
jae
outsb
mov
inc
hlt
popa
mov
add
fidivrl
bound
xchg
test
xchg
adc
stos
pop
scas
gs
frstor
sbb
push
sbb
or
pop
sbb
sub
push
out
push
or
dec
ret
or
test
push
sub
mov
xchg
mov
add
mov
mov
iret
sbb
push
mov
test
mov
mov
aaa
sahf
mov
pop
jnp
shlb
push
add
sbb
jnp
add
aam
dec
push
dec
push
ret
gs
push
call
jae
out
xchg
daa
mov
jae
adc
or
mul
jne
cld
bound
jge
outsb
cmc
daa
inc
cs
stc
mov
fldl
aam
call
adc
pop
lds
cmp
inc
push
mov
cmp
dec
jg
sti
add
jae
or
jo
mov
push
pop
dec
insl
pushf
xor
mov
mov
sub
das
in
or
mov
cmpsl
xlat
push
xor
add
adcb
jp
fwait
inc
sti
jo
pop
and
pop
add
or
pop
lods
int
repz
sbb
imul
aas
mov
stc
loop
lahf
cmp
xchg
sti
xor
cmpl
out
or
inc
add
loop
popf
cmp
daa
mov
mov
loop
mov
push
pusha
das
daa
loop
and
mov
fisubrl
roll
adc
rorl
cmp
loopne
aam
out
fisubrl
out
lret
loop
orl
stos
and
cld
xchg
xchg
mov
sub
dec
clc
sbb
pop
xchg
rorl
push
shll
mov
fldenv
jg
ss
ss
nop
icebp
scas
frstor
pop
push
lea
sarl
inc
xchg
movsb
xchg
dec
shlb
iret
lods
cwtl
out
gs
or
in
jns
fsub
sti
mov
in
mov
cmpsl
lds
fidivrl
mov
cmp
sahf
pop
cmp
pusha
lret
sub
negb
push
adc
frstor
btsl
stc
push
lods
pop
pop
sub
push
loop
cmpsl
adc
dec
sub
orl
pop
pop
add
loop
jge
pop
insl
sbb
repz
out
jne
jae
icebp
push
les
or
jmp
dec
jg
dec
xor
xor
push
dec
ds
push
sahf
test
mov
cmp
inc
xchg
dec
sub
aaa
leave
dec
repnz
mov
icebp
les
pop
cmc
sub
fldl
in
cmp
and
dec
or
out
dec
in
dec
sub
adc
inc
sarl
push
movsb
pop
cmp
mov
sub
into
xor
mov
ja
xchg
mov
leave
and
shl
jl
or
sbb
mov
dec
lahf
adc
adc
je
xchg
out
sbb
fcomp
and
or
dec
in
add
js
loope
mov
mov
addr16
cmpsl
fadd
shrl
aam
dec
lea
xor
imul
filds
loop
dec
fisubl
out
outsl
test
lods
inc
xchg
add
jns
sbb
and
push
xlat
popf
xchg
idiv
dec
mov
movsl
je
lds
ja
push
test
outsb
shll
incb
fdivrp
repz
add
shr
pop
arpl
bound
arpl
les
fstpl
insb
arpl
lock
into
pop
into
pop
pop
cmp
rorl
les
sub
sub
xor
mov
push
sub
sub
out
test
or
inc
cltd
lcall
add
lods
aas
pushf
cmp
and
mov
dec
outsb
lahf
in
aad
or
lret
stos
fistpl
dec
push
mov
out
rol
push
cmp
mov
mov
sub
jp
push
loopne
or
xchg
pop
loope
loope
mov
sbb
adc
enter
mov
repz
and
push
pop
jb
sub
mov
adc
rorb
xchg
mov
pop
movsl
dec
imul
inc
and
cltd
xchg
dec
outsb
mov
cmp
or
mov
sti
push
cltd
loope
std
sbbb
mov
fwait
jae
ljmp
dec
jle
or
mov
jb
add
shl
inc
out
imull
jg
and
fneni(8087
xor
mov
fildll
pop
mov
loop
push
pop
fwait
clc
or
cs
in
pop
inc
mov
into
sub
mov
lret
int
pop
and
jecxz
or
add
int3
add
outsl
addr16
push
es
sub
adc
push
mov
sub
inc
xchg
imul
out
adc
pop
mov
fiaddl
movsb
je
repnz
cmp
mov
xorb
outsl
jae
add
sahf
mov
movsb
in
jecxz
stc
jbe
pop
or
push
adc
lds
rcll
fildl
jle
fcmovb
mov
rolb
xchg
push
pop
jge
icebp
push
push
dec
xchg
outsl
push
in
loop
adc
push
dec
pop
cld
mov
cld
jnp
sahf
mov
mov
imul
xor
xchg
in
add
ja
mov
popa
and
jge
cs
icebp
call
pop
jecxz
lods
daa
pop
sbb
imul
add
bound
pop
jne
mov
sbb
add
clc
jne
jle
jl
sub
bound
xchg
cmpsl
test
cmpsb
or
dec
cmp
out
pop
lahf
test
ds
repnz
outsb
movsb
jmp
adc
sbb
cmp
sbb
sub
cmp
icebp
add
stos
ret
cmp
sbb
lahf
bound
mov
cwtl
ret
push
mov
adcb
shll
repnz
pop
cmpl
and
mov
aam
fcomps
out
in
add
test
push
adc
aaa
and
dec
shr
and
pop
dec
xlat
cmp
jle
cmp
in
pop
into
fwait
imul
jl
jp
dec
mov
xor
addr16
jg
orb
lods
ljmp
sub
mov
mov
xchg
sarl
add
popl
lock
mov
shr
xchg
sar
out
xchg
fcmovnbe
scas
hlt
into
stc
andl
jecxz
movsl
push
sbb
jmp
cs
test
cmp
lods
jecxz
mov
pop
fldcw
insb
cmp
fistl
jns
sti
add
pop
and
imul
push
rcrl
aad
in
sbb
cmp
xchg
insl
mov
sbb
ret
arpl
jp
jno
sbb
inc
jge
mov
dec
sub
sub
ss
das
out
out
rcrl
xor
aas
adc
pop
pop
jg
or
mov
mov
and
push
sbb
mov
mov
mov
or
test
loopne
dec
jecxz
add
jno,pn
rcrb
or
fwait
push
hlt
and
mov
dec
mov
clc
jge
mov
push
rep
stos
mov
sub
les
or
xchg
in
adc
xlat
xor
jne
movsl
sub
in
les
adc
mov
in
dec
clc
add
lahf
lock
and
pop
and
mov
stc
and
xor
xchg
mov
jne
jmp
fnsave
cmp
ret
mov
inc
lods
pop
shr
fcoml
mov
cs
xchg
sub
adc
pop
xchg
daa
or
add
int3
jnp
mov
addb
xchg
or
sub
cmpsb
mov
sbb
pop
add
lahf
movsl
repz
clc
dec
mov
pop
cmp
inc
stc
int
xor
outsb
inc
into
and
in
mov
fwait
repnz
inc
popa
and
shll
repz
test
push
push
inc
shrl
cmp
icebp
in
inc
or
cld
in
rcrb
je
cmp
pop
roll
cmpsb
sbb
lcall
or
xchg
loopne
or
es
insl
insl
mov
dec
and
test
mov
test
mov
cwtl
cmp
xchg
dec
adc
xor
xchg
add
inc
repz
jo
test
or
mov
sub
dec
mov
sbb
std
xor
lds
xchg
bound
xor
jbe
les
ja
outsl
push
lret
inc
hlt
pop
pop
adc
jg
push
or
cmp
add
imul
xor
ss
mov
das
add
popa
mov
mov
nop
jmp
push
mov
pop
cmpsl
dec
sub
sti
push
imul
popf
add
rorl
dec
fldcw
sbb
xorl
loope
pop
xchg
jmp
imul
push
xor
rolb
cwtl
mov
shrl
outsb
dec
and
xor
mov
aaa
int3
bnd
out
out
cmp
xor
inc
cli
imul
xor
arpl
or
cld
push
dec
jp
je
mov
ffreep
movb
cmp
adc
fistpll
out
dec
call
push
cmp
dec
push
push
shll
mov
popf
std
cmp
add
jp
cli
aas
aam
lcall
mov
push
and
mov
adc
adc
add
mov
push
sahf
scas
mov
repnz
test
movzwl
jg
int3
sbb
and
stos
popa
xor
sti
sub
test
enter
xor
and
js,pt
mov
push
xor
and
loope
scas
xor
notl
hlt
stos
aam
or
lock
sbb
or
stos
pop
mov
dec
sti
mov
lods
mov
inc
ret
jne
jns
in
in
add
shrl
out
loope
repnz
outsl
popa
add
sti
xchg
out
xor
xchg
stos
push
jo
imul
pushf
jmp
sbb
push
dec
movsb
mov
inc
add
xor
idiv
xlat
insb
mov
shrl
sbb
mov
or
adc
adc
es
pop
test
sbb
mov
imul
cmpsb
sbb
aad
leave
push
fstpt
sbb
stos
pop
xchg
or
add
sbb
clc
and
repz
jg
inc
lahf
or
sub
js
popa
iret
loope
push
js
or
sbb
xor
loopne
push
into
xor
js
clc
inc
cli
andb
add
jb
in
cmp
rorl
and
cmp
insl
shl
std
pop
enter
mov
mov
repnz
int3
sti
pop
mov
dec
icebp
jnp
or
add
out
xchg
test
cmpl
dec
and
cmp
sbb
add
popf
push
jp
hlt
xor
in
mov
sub
push
mov
aas
mov
test
mov
imul
lret
popf
rclb
fmuls
mov
push
xchg
jle
add
in
mov
pop
in
jae
pop
lahf
add
jne
dec
mov
dec
mov
loope
leave
inc
repnz
push
xor
push
loope
pop
sahf
cltd
fisubl
sti
leave
or
movsl
out
mov
in
loopne
rcl
ljmp
mov
pop
adc
daa
ss
push
jne
scas
inc
test
inc
aaa
inc
add
icebp
loope
mov
lahf
test
mov
jecxz
and
or
and
sub
mov
out
lds
jg
adc
sbb
xchg
cmpsb
addr16
xor
add
jb
add
mov
adc
or
jnp
adc
sbb
and
insl
and
in
aas
xor
movsl
and
ljmp
or
ret
test
aas
add
jo
aaa
mov
insl
xor
int
test
mov
arpl
adc
into
inc
jge
cli
test
rcr
xlat
decl
stos
fimuls
inc
movd
cmp
popa
addr16
loopne
dec
inc
mov
pop
push
add
in
xchg
dec
sbb
into
je
test
sub
inc
pop
scas
inc
mov
and
popf
aaa
push
mov
cmp
or
pop
mov
or
and
out
scas
clc
hlt
add
data16
gs
push
mov
es
or
xor
mov
xor
inc
sti
sub
and
and
and
mov
bound
cltd
mov
jp
jle
das
mov
jge
sbb
xchg
out
ja
jecxz
sti
lea
in
add
xchg
cmp
jecxz
add
scas
in
sub
mov
testl
mov
sbb
cmc
add
ret
or
mov
cli
ret
fistps
loope
xchg
xchg
addr16
int3
sar
loopne
mov
jno
test
sub
outsb
ljmp
pop
and
mov
loop
mov
lcall
insl
xchg
mov
pop
jp
add
js
in
cli
jge
subl
push
mov
shlb
push
mov
push
addb
xor
pop
lods
inc
sub
push
leave
pop
jo
cmpsl
adc
mov
dec
push
adcl
mov
xchg
and
scas
mov
mov
pop
fistl
pop
lock
js
pop
cmp
mov
cmp
and
cltd
jbe
mov
leave
das
test
jns
rcrl
dec
imul
imul
out
inc
fdivr
pop
ss
stos
inc
nop
sbb
ljmp
mov
repz
push
sub
or
fs
xor
mov
loop
lahf
push
add
fs
and
cmpsl
mov
ret
divl
adc
add
leave
and
out
inc
bound
dec
mov
in
jp
in
xchg
int3
in
jl
add
xchg
xor
and
outsl
push
test
push
or
push
xor
iret
loop
push
out
insb
or
out
xchg
sub
scas
add
mov
xchg
add
xchg
mov
aad
xor
jno
cmpsl
test
or
xor
pushf
pop
jno
mov
clc
mov
sbb
xchg
inc
shrl
fucomip
xor
lret
cmpsb
push
bound
push
test
adc
mov
adc
insb
test
pop
aam
stc
sbb
mov
add
cmpsl
pop
pop
push
jne
adc
ja
jb
call
dec
stos
or
push
jb
mov
mov
cmp
cld
pop
popf
aaa
ja
scas
xor
pop
sub
icebp
out
mov
movsb
dec
mov
add
stos
faddl
jno
test
outsl
xchg
dec
shll
gs
movsb
test
adc
rolb
pop
mov
and
add
mov
jle
jae
addb
aam
rclb
cmpsl
sub
mov
imul
mov
leave
cmp
or
or
gs
xor
addr16
outsl
fcomp
out
popa
pop
stos
adc
addr16
je
mov
jne
sub
mov
mov
sub
loope
cmpsl
push
add
jp
fucomip
cmc
test
cmp
jp
cltd
sub
mov
mov
js
loop
xlat
lcall
in
cltd
xor
push
and
mov
jmp
movsb
test
sti
test
xchg
xchg
shlb
pushf
push
push
add
lds
fistl
jecxz
lds
pop
jecxz
fidivl
xlat
pop
push
sahf
out
adc
popa
in
xor
push
out
pop
scas
out
rcr
ja
xor
in
iret
or
in
insl
shlb
sbb
pop
mov
out
pop
add
sti
fidivl
hlt
test
push
jg
mov
jle
insb
push
xchg
fbld
ret
inc
in
out
cmp
sbb
loop
iret
cld
arpl
inc
xchg
pusha
cwtl
fs
rorl
adc
jp
je
jg
fidivl
push
add
cmpsb
mov
mov
mov
enter
enter
outsl
xor
sbb
mov
enter
div
rol
push
mov
in
repnz
add
mov
mov
sub
jne
pop
in
pop
jl
scas
call
xor
jo
loop
fwait
cltd
jbe
lods
cmp
sub
xchg
in
call
sub
mov
jns
sbb
loopne
mov
int
and
lahf
pop
and
adc
jb
call
ja
inc
inc
pop
add
cmc
jl
dec
daa
sub
adc
mov
loop
cmpsb
sti
and
mov
imul
mov
cmp
mov
mov
dec
adc
push
inc
xlat
aaa
sbbb
jg
ror
dec
fcompp
ss
jnp
adc
test
test
sub
add
add
inc
cmp
cmc
pop
sub
insb
cld
mov
xor
push
dec
mov
mull
les
sub
je
mov
push
inc
inc
ret
dec
dec
sbb
cli
shl
xchg
or
cs
mov
std
test
movsl
xchg
fmull
push
inc
xor
enter
mov
cmp
inc
icebp
dec
mov
push
int
fcomp
lahf
cld
inc
xchg
arpl
adc
fwait
dec
inc
sbb
mov
lods
sbbl
sub
xor
sub
imul
cmp
push
cmp
ficoms
fdivrl
push
xor
out
add
mov
out
sub
mov
in
adc
jl
adc
in
push
cmp
push
fwait
adc
adc
out
mov
scas
lret
inc
fisttpll
mov
and
pop
xchg
bound
xchg
aad
xchg
xchg
cmp
xchg
daa
in
xchg
loopne
dec
inc
push
aas
iret
jno
fistl
outsl
push
mov
jno
push
imul
data16
push
fisubrl
jbe
mov
cmc
popf
mov
cld
or
xchg
adc
aas
pushf
imul
pop
call
xchg
mov
sub
mov
xchg
xor
adc
jnp
movsl
and
insb
jno
loop
cmove
nop
call
push
push
lret
push
test
pop
mov
mov
into
cmp
in
push
roll
mov
lahf
outsl
int
adc
jno
mov
pusha
lock
mov
repnz
cld
adc
xchg
xchg
pop
mov
addr16
jp
jecxz
adc
or
call
test
jbe
aas
fstpl
sbb
push
xlat
sarl
add
pushl
es
loop
clc
pushf
mov
push
aam
sub
mov
push
mov
pop
ret
fnstcw
cltd
sub
aas
cmp
into
jbe
xchg
fistpll
inc
jmp
sbb
scas
and
setns
ret
cmpb
fidivl
xchg
jp
pop
les
sub
subl
je
jns
jg
imul
loop
push
push
mov
cmp
cltd
xchg
rclb
lahf
call
pop
dec
call
mov
inc
xor
add
push
xor
pushf
dec
sbb
adc
pop
ret
jmp
fimull
addr16
mov
dec
jo
cld
or
stos
xchg
imul
cmp
and
mov
pop
jae
out
cmc
xchg
push
adc
push
nop
adc
push
lcall
mov
ljmp
lods
ret
jne
mov
nop
cld
xor
sbb
mov
xchg
jg
fsubrs
out
mov
idivl
adc
add
jge
cltd
mov
cs
and
push
inc
inc
mov
mov
repz
int
xor
out
repz
call
insl
jae
fs
icebp
push
jp
push
adc
cmp
loopne
out
fcomi
push
cmc
jae
sub
movsl
xlat
cmpsl
fldcw
mov
cmpsl
hlt
imul
arpl
pop
sub
push
xor
xchg
test
leave
dec
xchg
pop
xchg
popf
pop
pop
push
mov
mov
cmp
pop
rcrb
push
ja
pusha
stos
mov
nop
pop
repnz
cmc
lahf
inc
stc
add
js
dec
sub
inc
fistl
subl
gs
pop
sub
mov
cmp
adc
aad
push
xor
mov
ds
and
cwtl
jo
test
mov
push
imul
sub
jb
inc
and
pop
mov
mov
add
mov
add
aaa
call
cmpsb
sahf
sub
or
mov
adc
mov
stos
fninit
gs
jge
mov
or
adc
mov
xchg
mov
flds
xor
inc
mov
dec
sbb
repnz
xor
mov
push
fistpll
in
push
pop
pop
rclb
add
pop
insl
inc
sub
push
sub
jo
dec
jg
and
in
xchg
pop
adc
and
insl
xchg
dec
je
mov
mov
xchg
push
cs
pop
in
xor
loop
fmuls
dec
dec
pop
in
inc
xlat
pop
insl
push
flds
mov
adc
scas
shlb
loopne
and
jle
fcmovnbe
xchg
scas
jmp
jno
dec
ja
ficomps
mov
dec
push
das
icebp
nop
aad
and
stc
lahf
outsb
push
bound
fdivl
call
jnp
push
pop
and
and
mov
in
sub
mov
and
ret
inc
adc
mov
je
mov
sub
xorl
dec
repz
fs
pop
arpl
xchg
cmpsl
idivb
mov
dec
inc
mov
in
jo
pop
cmc
pop
popa
scas
rcll
into
aad
int3
add
out
fists
test
testb
out
mov
aas
mov
jge
mov
mov
std
std
fwait
pop
push
sbb
jbe
jl
xchg
inc
sti
and
jl
pushf
or
sbb
pop
xor
inc
ret
mov
leave
sbb
sub
fldl
aam
ljmp
in
in
std
and
stos
jno
mov
jecxz
add
aas
cmp
inc
push
cmp
cmp
push
xor
cmp
push
loop
stos
daa
arpl
pusha
sbb
mov
stc
adc
lods
cmp
jnp
cld
imul
fcoms
push
sbb
sub
lods
shlb
inc
lahf
inc
push
stc
push
or
cmc
push
fcoml
movl
mov
push
aam
add
dec
js
int
fisubl
pushf
es
mov
cmc
dec
dec
test
inc
stc
sbb
jl
inc
push
cmp
cli
dec
cltd
push
icebp
cmp
pop
mov
xor
add
cmpsl
xchg
shlb
lock
outsl
xchg
shlb
divb
push
inc
ljmp
call
cltd
and
das
scas
cld
loopne
inc
mov
gs
jmp
lock
and
les
and
je
or
mov
scas
mov
dec
fnsave
aam
xorl
pop
dec
aas
aam
xchg
push
or
xchg
orl
sbb
push
lock
pop
pop
mov
xchg
loopne
aas
pop
dec
movsb
cmpl
in
adc
dec
test
sub
inc
cwtl
stc
ret
inc
jno
mov
cmc
loopne
adc
je
notb
xor
repnz
rolb
mov
out
aas
int3
nop
cs
push
jno
scas
xor
xor
clc
fsubl
fcmovb
sbb
scas
movsl
add
movsb
adc
xchg
sbb
cmpsb
push
push
imul
push
fisttps
add
push
xchg
mov
fcmovbe
sub
cld
ds
pop
mov
lahf
jnp
pop
jge
jmp
mov
or
xchg
out
pop
inc
jb
je
add
dec
aad
mov
sub
mov
add
mov
jbe
push
add
dec
mov
movsl
pop
in
mov
sti
xchg
cmpsl
fdiv
jae
add
fdivl
xor
pop
stos
add
loopne
fadds
repz
or
stc
mov
push
adc
adc
movsl
out
bound
cltd
mov
stos
or
stos
cs
sub
mov
clc
loope
sysexit
fdivrl
adc
int3
sar
push
out
dec
test
xchg
lea
jmp
test
xchg
sub
testb
sbb
lahf
into
sbb
jmp
push
inc
cmp
sbb
mov
cltd
pusha
jmp
sbb
lods
pop
push
stos
dec
dec
sbb
and
push
int
test
jno
enter
hlt
and
aas
mov
xchg
adc
popa
mov
popf
icebp
pop
jmp
shl
mov
out
sbb
mov
fnsetpm(287
cmp
popf
fiaddl
cmpsl
pop
inc
inc
cwtl
push
xchg
or
dec
inc
and
insb
lahf
movsb
mov
fisubs
jno
xor
push
xchg
sub
hlt
sbb
sub
addr16
dec
sub
call
mov
push
shrl
add
lods
inc
sbb
inc
jg
xor
stos
jle
icebp
test
into
push
xchg
rclb
sub
and
jno
adc
push
scas
mov
jae
inc
lcall
lods
mov
ret
push
xlat
pop
mov
cmpsb
sub
in
xchg
jecxz
add
insb
dec
mov
add
fsubp
mov
movsl
jne
jmp
test
daa
fdivs
movsb
daa
pop
jg
testb
sbb
lea
in
or
lods
jp
fidivrs
movsb
xchg
mov
je
adc
rclb
inc
popf
jns
fdivl
mov
pop
loope
popf
adc
and
pushf
ror
push
cmpl
out
dec
int3
in
or
pop
xor
inc
cmp
sbb
cmp
shlb
dec
adc
ret
in
dec
sarl
stos
jb
xor
dec
fs
xor
cmp
jg
mov
push
jbe
mov
iret
or
or
xchg
cmpsl
sbb
jp
mov
int
insb
push
data16
add
adc
jp
inc
bound
sbb
pop
jne
push
inc
and
leave
aaa
inc
adc
cld
xchg
aaa
fstpt
test
je
xchg
dec
outsb
icebp
or
daa
jl
fnstsw
push
ljmp
inc
xchg
mov
jb
push
pop
out
lcall
cmc
loope
jns
lahf
jo
jl
add
push
add
mov
out
push
xchg
mov
into
dec
scas
inc
fwait
mov
test
dec
leave
scas
outsb
push
jo
dec
lahf
ficoml
mov
divl
fiaddl
push
sub
call
mov
mov
jns
bound
xchg
sub
js
and
mov
test
push
and
shrl
push
daa
or
and
aam
mov
pop
pop
jno
inc
pop
leave
and
stos
stc
dec
push
out
cmpb
cltd
lret
shlb
mov
mov
imul
jae
repnz
scas
outsb
fs
cltd
mov
daa
jne
xchg
push
sub
sti
sub
int3
pop
daa
lock
dec
cmp
mov
mov
fists
or
inc
test
loop
adc
mov
aad
and
and
sub
adc
lock
je
out
sbb
fistps
mov
es
popa
pop
aad
xchg
push
cmp
xchg
mov
inc
pop
icebp
push
loope
je
mov
mov
push
shlb
mov
or
push
loope
push
pop
imul
or
js
enter
sar
mov
ret
lret
push
xchg
adc
xor
pop
lods
sarb
jnp
rclb
pop
inc
mov
stos
pusha
push
es
mov
ljmp
adc
scas
cld
mov
insb
push
jb
and
add
lock
jge
icebp
icebp
out
rcrl
shl
mov
js
daa
pop
enter
add
xchg
aam
mov
movsl
pop
xor
fs
or
jl
call
out
dec
mov
mov
push
test
lret
leave
mov
in
lcall
loopne
inc
int3
icebp
jl
dec
adc
cli
dec
inc
lds
jle
pushf
pusha
push
fsubrs
jo
dec
add
fsubl
xchg
cmp
mov
call
xor
test
gs
pop
sarb
int
dec
sar
and
dec
add
or
repnz
mov
xor
add
fadd
sti
sar
fcmove
lret
aaa
test
fisubs
push
mov
dec
rolb
inc
imul
aam
lahf
cltd
xlat
or
loope
pop
add
fbstp
iret
mov
xor
dec
mov
push
push
mov
mov
xchg
cmpb
sbb
lret
mov
test
sub
jmp
mov
out
pop
inc
xchg
scas
adc
xor
inc
xchg
lods
enter
mov
cmp
jbe
adc
add
sahf
mov
lock
pop
imul
mov
inc
sarb
or
jb
dec
cmpsb
pop
pop
dec
mov
xchg
sub
iret
add
dec
std
sbb
pusha
aaa
in
lods
push
adc
popa
push
aad
adc
stos
sbb
sub
lods
xchg
or
rcrb
push
mov
mov
xchg
add
cltd
jae
push
mov
mov
pop
lock
xchg
xor
int3
cmp
in
fwait
push
lods
push
sti
lods
and
sub
inc
aam
mov
test
test
dec
cmp
popa
inc
cmp
and
mov
push
or
cmp
xchg
push
arpl
cmp
jnp
and
cmp
scas
adc
cmp
xor
fstpt
aam
mov
inc
xor
fsubrs
sbb
in
jle
jmp
mov
cld
xor
mov
ljmp
mov
pop
icebp
cmc
mov
test
jne
sahf
mov
shl
rcrb
inc
fucom
das
lahf
loopne
dec
outsb
test
ret
dec
pop
outsl
sbb
cmp
fldt
mov
cmp
cwtl
xchg
inc
es
jbe
pop
aad
xchg
xlat
lret
pop
xor
or
pusha
mov
imul
scas
pop
stos
mov
pushf
lock
mov
xchg
mov
addr16
pop
xchg
xchg
pushf
out
xor
cmpsl
dec
sbb
xchg
movsb
cwtl
loope
mov
adc
ficoms
sbb
sbb
mov
sub
jmp
jmp
rolb
pushf
push
aad
idivl
rclb
lahf
xor
dec
movsb
js
cmpsb
jo
push
inc
mov
je
mov
and
inc
pop
add
dec
ds
add
adc
dec
inc
lods
int
inc
pop
aam
or
dec
test
out
mov
rcll
push
gs
sub
xchg
jae
pop
sub
xchg
out
mov
repz
aaa
mov
xlat
add
add
jg
mov
int
xchg
jae
adc
push
add
cmp
xchg
andl
in
lret
sbb
dec
ret
cld
pop
stos
jns
repz
fcompl
enter
sbb
mov
sub
aad
inc
adc
add
push
test
aad
pop
cmpsb
shlb
pop
ja
dec
outsb
mov
and
mov
add
ret
lret
outsl
sbb
xchg
jl
sbb
out
inc
and
mov
pop
addr16
daa
adc
fists
mov
aaa
andb
or
cmp
xchg
leave
cmp
sbb
out
cmp
add
icebp
stc
push
inc
popa
in
divl
mov
adc
in
sti
or
faddl
cwtl
dec
mov
cmp
pushf
jl
inc
pop
xor
es
cmp
ss
fimuls
outsl
ficomps
jg
or
or
addr16
addb
in
icebp
pop
ret
stos
sbb
xor
in
lock
add
and
and
jl
fwait
dec
jge
push
call
push
xchg
ret
pop
arpl
adc
shrl
popf
cwtl
insl
imul
jno
fstpt
xchg
ja
cs
xchg
shlb
jb
testl
and
sub
shrb
push
adc
mov
fs
loop
xchg
xchg
jb
xor
push
pop
or
lods
outsb
scas
aad
jp
mov
pop
and
mov
add
jle
int3
jmp
in
mov
add
shrb
adc
cmp
mov
lret
xlat
mov
push
cmp
stos
call
mov
daa
call
shll
adc
lods
dec
fsubl
imul
cmp
call
in
shll
jns
push
lods
cwtl
lods
shrb
dec
ret
dec
pop
lret
ja
jp
xor
and
add
mov
stos
out
pop
enter
sub
mov
movsl
pop
std
sar
xchg
adc
push
iret
mov
jle
fwait
xchg
jae
in
pushf
jge
cmp
mov
adc
lods
xor
pop
out
sub
xor
push
sub
and
enter
loopne
leave
mov
jl
fxam
test
orl
leave
xchg
in
sbb
mov
sub
idiv
adc
into
inc
xlat
jl
fisubl
pop
adc
bound
into
sub
push
inc
jge
movsb
test
push
mov
test
xor
test
and
sbb
add
push
ljmp
adc
stos
xchg
jl
aad
xchg
sarb
mov
xor
sbb
pop
movsb
adc
data16
mov
imul
mov
insl
dec
mov
sbb
push
cmp
btc
sub
les
outsb
lds
pushf
xchg
inc
clc
fisubl
insl
pop
loope
stos
jge
jp
nop
mov
stos
icebp
mov
pop
cs
jne
jo
je
shlb
xchg
inc
xlat
les
xchg
into
out
mov
ffree
jae
scas
push
cmpsl
and
or
ss
sti
enter
popa
jne
testb
pop
pop
mov
imul
mov
sub
imul
jmp
gs
sub
cmp
int3
lcall
fadds
jb
sbb
ljmp
jg
ret
fmulp
push
outsl
outsl
fcoms
xchg
or
sub
je
push
xchg
and
xchg
push
lods
frstor
mov
and
inc
enter
mov
stc
sub
shrl
js
adcb
ja
sbb
repz
push
cmp
fbld
clc
repnz
out
insl
add
lahf
movb
pop
repnz
jl
clc
fstps
adc
xchg
ljmp
test
mov
in
and
rcll
loope
inc
mov
adc
xor
mov
xor
dec
pop
aas
or
lcall
test
cmp
xor
call
cmp
dec
mov
fwait
scas
sub
pop
jmp
xchg
jnp
jecxz
test
inc
push
or
outsl
sar
leave
push
mov
pushf
icebp
sub
jns
sub
mov
sub
mov
fiadds
add
rolb
lahf
pop
mov
dec
loopne
lret
mov
pop
loopne
popa
call
and
push
add
dec
pop
or
adc
in
test
int
jmp
lret
cmp
fdivl
adcb
sahf
add
push
sbb
cmp
repz
out
test
outsb
nop
out
jb
test
mul
fnstcw
pushf
mov
adc
mov
mov
sub
push
mov
sti
and
jnp
lds
mov
das
aad
lods
and
adc
xchg
test
jne
jns,pn
fisubl
inc
mov
ds
test
sub
nop
jl
leave
adc
iret
jne
cmp
jnp
ds
sub
sub
imulb
mov
mov
fsubl
fidivl
incb
push
test
and
rorb
xchg
cmp
jno
xlat
xchg
sub
mov
inc
pop
cld
xor
mov
popf
adcl
push
sbb
pop
mov
dec
ljmp
adc
repz
mov
pop
or
push
sti
or
lods
lock
jae
rol
paddq
out
andb
icebp
cmp
aam
jp
cmp
popf
jno
cs
leave
mov
mov
mov
inc
dec
sbb
push
int3
sbb
aad
lcall
push
jnp
jno
xchg
rorl
aad
mov
mov
sbb
cli
xor
cmp
bound
lcall
lea
shrl
insb
push
pop
je
fimull
inc
ret
fadd
mov
jg
dec
lea
testl
xorb
mov
push
int3
pop
test
jb
das
cmp
rorb
jne
daa
inc
cld
cli
or
push
inc
ss
nop
loop
mov
dec
stc
cmp
js
mov
imul
cltd
and
int
xor
lcall
test
inc
adc
xchg
sbb
aas
jg
jge
movsb
nop
fcomi
add
or
loopne
jp
js
adc
mov
mov
xchg
xchg
mov
xchg
adc
out
mov
dec
lret
in
fs
lret
into
jnp
xchg
daa
mov
mov
mov
mov
pop
test
jae
pusha
insb
cmpsl
adc
xchg
mov
xor
sbb
sbbl
jle
mov
sti
iret
int3
aaa
jnp
out
add
xor
and
movsl
sti
fidivs
es
int3
aaa
pop
push
fcompp
faddl
adc
xchg
pop
cmp
xchg
outsb
cs
inc
and
mov
and
adc
mov
hlt
ljmp
icebp
movsl
push
mov
and
push
xchg
mov
cmpsl
dec
jg
jg
sub
lock
out
adc
mov
ficoms
inc
add
cmp
mov
clc
cs
sahf
aam
cwtl
xor
or
push
aam
xor
aad
cld
je
mov
pop
data16
popa
jae
or
and
jg
lret
sub
mov
call
jecxz
fstl
ljmp
mov
or
cmp
jns
inc
shll
jmp
roll
ret
call
daa
cwtd
push
dec
cmpsb
push
pop
sti
xorb
stos
mov
loopne
xchg
mov
imul
in
leave
mov
pop
fs
push
out
notl
aaa
shl
fsts
fldl
rolb
xor
shll
lcall
cmc
jp
sub
inc
stos
xchg
in
add
fsubs
in
adc
les
xchg
xchg
pop
push
ljmp
fs
cmpsl
jno
addl
adc
addr16
jae
or
test
movsb
lock
jo
jbe
loope
or
xchg
dec
icebp
fisubrs
pop
sahf
jp
lret
repnz
cs
inc
xchg
mov
stos
mov
shlb
pop
mov
adc
rol
test
xor
ret
xor
out
mov
push
leave
in
mov
out
sub
add
mov
mov
xor
xor
add
insl
push
sbb
lock
dec
adc
push
lahf
ja
ret
hlt
adc
ljmp
mov
xchg
lret
or
mov
jp
outsb
cmp
jecxz
int
idivb
or
xor
sbb
mov
inc
jnp
aad
outsb
movsl
andb
mov
xchg
lock
xchg
adc
fists
popa
lcall
push
or
repz
aaa
sbb
xor
inc
mov
dec
pop
pop
addr16
pop
and
dec
ret
loopne
mov
sub
add
js
or
pop
adcl
stc
sub
fisubs
outsb
mov
je
scas
lock
dec
pushf
jge
popf
popa
pop
lea
in
movsb
sbb
add
lcall
adc
mov
repnz
imul
lods
push
adc
scas
sbb
in
xor
jo
xchg
ss
jo
jnp
sub
cmp
fiadds
es
loope
push
pop
out
scas
lret
cmp
ja
inc
repnz
filds
into
mov
mov
mov
push
bound
rorl
icebp
stos
add
xor
aaa
sbb
jmp
and
lahf
sbb
pushf
inc
push
adc
add
or
movsl
nop
xor
pop
shrl
lahf
les
bound
ret
sbb
sahf
std
push
xor
dec
push
int
leave
cmp
es
dec
pop
outsb
js
aad
hlt
mov
daa
outsb
arpl
stos
stc
inc
jae
adc
dec
mov
fsubrp
jle
cmp
inc
sbb
xchg
add
pusha
repz
ret
mov
jae
and
push
cmpsb
jmp
mov
push
notl
outsl
cld
push
and
pop
addr16
mov
pop
or
xchg
push
and
add
fwait
imul
aam
jbe
in
cwtl
movsl
lcall
std
or
out
and
mov
outsb
outsb
xchg
incl
loope
daa
pushf
push
mov
and
or
cmc
sbb
jnp
in
test
ret
jge
and
or
sbb
add
std
lea
xor
test
rcr
cmp
jb
testl
das
loop
addr16
imul
xchg
dec
popa
fidivrs
mov
pop
push
out
movsl
lods
mov
mov
xchg
cmpl
test
push
lock
dec
cltd
fwait
pusha
push
sub
stos
dec
mov
jns
lods
fistpl
and
mov
sub
dec
push
jp
push
popf
xchg
jg
lds
jo
jle
loope
cmpsl
jne
js
enter
pop
rol
sbb
pop
sub
rolb
call
addr16
mov
jp
mov
adc
jns
add
pop
mov
fildl
mov
addr16
orb
jae
cmp
loope
sub
arpl
jae
out
sbb
inc
ss
sub
adc
xchg
dec
jp
and
sbbl
jae
jbe
add
pop
xor
insl
loopne
sub
xor
sub
mov
mov
and
sbb
xchg
fs
xchg
xor
hlt
iret
andb
scas
mov
std
and
sub
out
jg
adc
rcr
ret
out
imul
push
lods
add
mov
jns
mov
adc
lcall
rorl
ss
cmc
mov
adc
data16
popf
inc
add
fidivl
ds
xor
fs
jae
sub
pop
les
jo
or
add
sub
add
repnz
lock
cli
dec
mov
popf
mov
mov
inc
shlb
ja
adc
jne
test
movsl
mov
mov
add
and
sbb
or
pop
jecxz
roll
push
mov
stos
cmpsl
jp
and
aad
mov
aas
push
lods
cmc
xchg
bound
jmp
hlt
push
add
mov
xor
sar
cs
cs
and
stos
shl
xor
das
sti
xchg
push
dec
or
xor
pop
cmpsl
arpl
jecxz
mov
and
xor
fisubrl
push
pop
bound
ficompl
cmp
loop
or
test
and
andl
call
sti
cmpsb
andl
movsl
jg
xchg
push
rorl
jp
mov
xchg
sti
mov
push
inc
mov
xchg
mov
cmpb
arpl
adc
adc
mov
sbb
xchg
pop
popf
xlat
sti
jecxz
aam
int3
sbb
push
test
inc
andb
jmp
mov
and
scas
bound
mov
jle
dec
mov
sub
jge
inc
adc
cmpsb
cmp
xor
and
inc
repnz
movaps
pop
fadd
pop
das
test
mov
ret
cmc
ja
add
out
add
arpl
jg
push
cmp
enter
xlat
mov
aas
movsb
negb
mov
pop
mov
fisubl
sahf
inc
std
add
or
sti
sbb
das
cwtl
imul
and
adc
or
sarb
js
into
es
xor
popf
xchg
pop
cmp
jp
jge
xchg
sbb
test
shr
lock
test
xchg
jnp
push
nop
fwait
fwait
popa
lods
add
xlat
ljmp
sub
sbb
das
gs
testb
push
adc
add
mov
pushf
lea
xchg
idivb
cmc
cmp
push
add
lds
call
sub
jo
add
mov
sbb
addb
jne
into
or
outsl
sub
test
jl
ret
xor
dec
cltd
shll
aad
mov
stc
jmp
dec
gs
jecxz
in
call
sub
mov
fisttpl
add
jge
mov
in
in
fdivl
mov
xor
xchg
call
jb
in
and
xchg
push
add
orl
fwait
imul
rep
mov
imull
gs
ret
pop
bnd
lcall
repnz
lret
xchg
inc
xchg
pop
stos
popf
sbbl
fcmovne
test
jg
sub
rcr
dec
lea
imul
ret
arpl
sbb
mov
sbb
jl
aas
adc
sub
shll
lock
aam
int3
test
aad
sub
mov
xchg
mov
push
repnz
or
xor
aaa
mov
stos
mov
dec
repnz
fimull
gs
lret
mov
insl
xor
ja
xchg
cmp
dec
pop
lea
inc
jae
pop
and
push
pop
out
cld
sbbl
mov
sbb
pop
negb
push
pop
xchg
push
push
rcrl
adc
jns
call
mov
aam
dec
lret
pop
and
pop
bound
adc
pop
and
sar
sub
xor
mov
and
sub
es
ds
xchg
jno
add
loopne
push
scas
icebp
data16
pop
shl
or
lahf
addps
outsl
lock
scas
movsb
rclb
or
xor
add
das
lcall
stc
mov
out
pushf
jle
arpl
movsb
xchg
mov
popf
sub
arpl
fisubs
mov
mov
fistps
dec
dec
cmp
pcmpgtw
push
dec
jl
push
or
in
add
push
cwtl
test
xchg
lahf
bound
or
popf
mov
push
fucom
scas
call
and
cmc
mov
or
out
jmp
or
mov
push
cmp
jnp
xchg
ljmp
std
repz
pop
imul
jle
sub
mov
es
sahf
push
xchg
mov
int
icebp
xor
ret
lret
cld
shll
inc
hlt
js
repnz
xlat
aad
jecxz
test
bound
repnz
imul
shll
pop
xchg
call
push
repz
jg
lods
jmp
fwait
xchg
mov
cmp
add
lcall
xchg
jmp
pop
or
adc
mov
push
iret
xchg
add
xor
xchg
or
xchg
lcall
sti
add
out
rcr
pop
outsl
pop
lahf
in
lcall
repnz
dec
push
sub
mov
or
sbb
js
mov
mov
iret
and
push
std
inc
add
jmp
fisttpll
push
movsl
lret
cs
nop
ret
mov
pop
cmp
jae
int
xor
pushf
ja
xor
xchg
add
gs
mov
mull
adc
xchg
mov
xchg
cld
fstpt
stos
jns
jbe
stos
stos
stc
jl
xchg
jb
xor
sub
add
scas
lods
xchg
push
cmc
in
xlat
out
jle
fwait
dec
ds
ds
ds
push
insb
mov
add
sbbb
test
xchg
sub
cmpsb
fld
or
mov
add
cltd
cwtl
xor
and
jno
movsl
push
jne
mov
pushf
dec
sarb
dec
fwait
cmp
lods
cmc
and
arpl
pop
pop
lret
shl
fsub
jno
loope
adc
mov
and
fmuls
jmp
add
push
xor
xchg
and
out
clc
popf
dec
aad
cmp
sbb
fadd
gs
mov
mov
fimuls
inc
leave
loope
hlt
in
xor
imul
les
ljmp
daa
addr16
pop
mov
gs
aaa
scas
pop
cmc
xor
ljmp
les
sahf
nop
shlb
mov
fsubrs
sahf
imul
pop
xchg
xchg
lods
daa
mov
mov
jns
in
push
push
subl
clc
push
test
addr16
add
ja
lods
inc
ret
adc
jno
loope
sarl
mov
pop
loopne
leave
aam
lahf
mov
push
jg
jge
sub
xchg
hlt
add
sbb
cmp
or
pop
adc
gs
mov
dec
aas
jo
push
hlt
fs
jecxz
loope
inc
ja
imul
stos
adc
in
ljmp
rclb
xchg
bound
test
and
or
push
pop
jmp
or
stos
shlb
mov
push
inc
mov
and
mov
call
cltd
sbb
enter
lcall
and
pop
dec
dec
inc
xorl
mov
cmp
push
push
pop
sbb
das
pop
lods
test
mov
mov
pop
popa
mov
fstpt
mov
cmp
cli
and
ret
sbb
out
orl
mov
inc
cmp
jno
movsl
push
loop
inc
dec
cmp
imul
repz
outsb
xchg
xchg
sbb
mov
fcmovb
das
test
hlt
fdivs
ds
adc
sub
push
and
xchg
pop
mov
xchg
xchg
sbb
popf
lods
mov
pop
push
pop
rclb
mov
push
movl
add
loop
test
jle
inc
fiaddl
xchg
or
dec
cmp
pop
dec
das
and
movsb
popa
lods
xchg
cmp
cltd
xor
test
or
je
push
aas
ds
or
mov
lock
mov
push
mov
sub
inc
movsl
je
andl
cli
je
add
dec
outsl
and
iret
mov
xchg
mov
inc
mov
dec
lret
enter
fmull
loope
movsl
stos
cmc
dec
pop
pop
cmp
mov
popa
lock
gs
packsswb
cmpsb
and
mov
dec
pop
jmp
pop
dec
les
and
arpl
jge
outsl
in
movsl
xchg
mov
aam
dec
push
jge
es
or
jg
clc
sbb
pop
push
sub
ja
nop
mov
fsubl
jge
adc
enter
cmp
sub
mov
nop
fsubrs
mov
fsts
imul
xorl
cmp
js
or
and
test
stos
adc
iret
add
stos
sub
call
or
mov
dec
inc
sbb
or
push
iret
cmpsl
insb
jo
std
cmp
loope
cmovns
or
bound
iret
call
xchg
idivl
pop
lea
lock
mov
xor
add
decb
push
cmpxchg
loope
pop
int
or
push
push
test
das
or
hlt
fsts
and
jnp
pop
xchg
mov
lcall
shll
sbb
cwtl
push
stos
loopne
icebp
js
push
mov
dec
xor
push
mov
insl
push
sub
mov
scas
inc
sbb
es
aaa
enter
lcall
inc
add
adc
sub
and
sub
lods
outsl
ficompl
iret
mov
push
push
scas
jle
add
inc
mov
xchg
adc
jp
push
addb
pop
cmp
addl
iret
adc
cmp
push
pusha
dec
mov
xor
mov
scas
mov
push
aas
test
or
in
notb
cmc
or
jecxz
cmpl
push
jnp
out
pop
hlt
sbb
mov
ljmp
or
es
or
fdivrp
lret
pop
aas
pusha
fisttps
inc
sbb
mov
add
in
lcall
mov
repz
jns
cmpsb
lcall
jbe
jmp
sub
jbe
xlat
les
mov
repz
add
sbb
cmpsl
and
mov
cmpsl
cmp
mov
cmp
leave
lea
fdivp
cmp
idivb
inc
jnp
xor
push
mov
cmp
and
cmp
cmpsl
pop
loopne
sbb
je
ror
mov
int3
and
lock
sub
lock
mov
sti
mull
xor
mov
jecxz
call
xor
insl
in
sti
iret
jne
push
ljmp
std
sbb
pop
std
mov
push
stos
inc
popf
pop
inc
dec
cmp
sbb
mov
insb
xor
push
mov
test
dec
ficompl
push
dec
mov
dec
xchg
inc
mov
ss
and
in
or
add
jbe
mov
ret
and
subb
sbb
loop
xchg
in
sub
adc
fidivrs
dec
std
pop
loope
sti
insb
pushf
sub
dec
sbb
testl
into
pop
cs
push
insl
jle
pop
xor
inc
xlat
xlat
sub
mov
pushf
fisubs
cmpsl
enter
sub
rclb
sbb
leave
test
fmull
inc
dec
sub
ret
cmc
sub
push
lods
pcmpgtb
sbb
pmaxsw
ja
movsl
sbb
andl
adc
das
pop
fimuls
addr16
fwait
insl
push
mov
popf
push
mov
stos
popa
and
or
lret
pop
mov
cmp
adc
fucomp
out
lret
or
jns
notb
lock
iret
js
push
lahf
jge
or
cmp
sub
jmp
sub
pop
outsl
in
test
cld
jb
arpl
mov
mov
outsb
add
loope
divb
mov
int3
mov
mov
lds
cmp
popa
xchg
xlat
xchg
out
lds
xchg
mov
leave
mov
xchg
ja
mov
sub
pop
cwtl
pusha
mov
add
adc
js
jl
inc
mov
lret
mov
mov
cmp
jae
push
sbb
lahf
rolb
push
and
xlat
outsb
xor
add
aas
iret
repz
and
push
adcl
jl
mov
fs
outsb
or
std
add
cmpsl
je
jno
mov
add
sahf
mov
cmp
fwait
xor
ret
in
jo
push
fs
pop
outsb
lods
outsb
ss
adc
and
das
adcb
push
and
xor
push
lds
xchg
ficomps
xor
adc
dec
fistl
out
lret
xor
push
sbb
pop
dec
out
xchg
popa
mulb
out
xchg
sarl
adc
ret
out
fists
push
out
aas
movsb
jo
push
mov
mov
mov
push
sbb
dec
cs
lret
xchg
jbe
fwait
adc
fldl
cld
adcb
cmp
ret
jns
push
outsb
ljmp
mov
ja
aas
test
sub
and
sti
cld
fidivl
pop
test
cmp
cli
push
pop
and
sbb
js
out
rorb
out
out
adc
jl
sub
pop
ljmp
mov
cmp
inc
fcoms
in
add
out
loope
loop
loopne
std
popf
sub
ds
xchg
sbb
cmp
cli
test
int3
imul
cmp
xchg
sti
repnz
mov
test
push
dec
dec
xchg
pop
test
nop
push
shll
lretw
jnp
pusha
je
mov
popf
and
dec
adc
push
mov
adc
adc
sub
dec
ret
inc
leave
xchg
jl
ja
mov
jge
cmp
pop
pop
dec
lods
jns
mov
mov
addr16
leave
subl
mov
sbb
or
mov
loope
test
inc
dec
loopne
cld
and
rol
movsb
and
pusha
pop
cmp
aam
iret
in
sbb
stos
gs
xchg
inc
mov
push
dec
jecxz
in
xor
jno
push
and
cmp
aad
popa
addr16
stos
sti
xchg
imul
add
cmp
inc
lret
mov
adc
pop
or
movb
or
ficompl
into
loop,pt
cmp
adc
pop
imul
scas
sbb
jp
scas
jne
cmp
int3
dec
dec
cmp
pop
inc
loop
or
pop
insb
push
push
and
or
push
aaa
enter
jg
inc
fimull
pusha
call
adc
cmpsb
dec
int
mov
jb
jne
pop
insb
cmp
xchg
mov
and
ret
pop
inc
daa
push
scas
sbb
adc
cmp
and
adc
cmp
ret
jnp
or
stc
faddl
cmc
test
xor
insl
jb
dec
pushl
addr16
loop
sub
lock
dec
push
xchg
stos
pop
test
pop
fisubrl
out
cwtl
insb
mov
and
sub
in
xor
mov
or
and
test
aas
movsl
and
inc
pop
pop
pop
ret
rcrl
cli
jae
inc
add
add
test
bound
je
jmp
dec
loope
jno
xlat
mov
ret
daa
je
xchg
or
fmulp
mov
mov
stos
adc
inc
xorl
adc
xchg
in
mov
add
sbb
add
lret
movsl
jae
aas
rcrl
outsl
xchg
sar
imull
out
js
xor
mov
mov
mov
ret
mov
sbb
xor
mov
je
add
xor
mov
popf
les
and
jge
mov
fnsave
addr16
jl
jnp
jmp
push
js
divb
and
xchg
jge
mov
js
psubd
out
mov
es
je
orl
sbb
xor
jmp
and
and
xchg
push
mov
xor
inc
and
outsb
fidivl
pop
jno
cmpsl
lods
xor
xchg
cpuid
ret
lcall
insb
iret
rcrl
push
pop
sbbl
mov
dec
cs
add
and
fidivl
sbb
fisttpl
leave
lcall
inc
dec
sub
mov
sbb
mov
pop
add
fisubs
adc
and
in
shrl
or
fcomps
pop
insb
xchg
nop
mov
dec
or
aaa
clc
out
sbb
add
ret
inc
and
outsb
dec
inc
adc
ljmp
push
in
cmp
sub
add
scas
fistpl
out
adcb
inc
hlt
cmp
out
popf
cld
or
xor
fmuls
fucom
xor
cmp
and
push
sbb
pop
jge
xor
dec
or
pop
adc
mov
jge
add
dec
xor
adc
es
push
insb
leave
inc
outsl
sbb
imul
push
mov
dec
add
mov
scas
ja
and
cld
int
repnz
pop
enter
in
add
add
inc
je,pn
fs
lock
jl
lret
add
loopne
das
mov
xchg
push
in
cmp
lods
imul
dec
cmpsl
pop
xchg
xor
imull
movsl
pop
inc
jb
into
push
addr16
push
inc
clc
insb
inc
mov
mov
les
or
testb
mov
mov
adc
int3
and
adc
sub
dec
cmp
xor
inc
mov
test
clc
or
xor
dec
loope
push
push
test
jl
fadds
mov
js
add
test
in
adc
iret
jbe
testb
push
mov
mov
lds
or
lcall
mov
add
xlat
mov
mov
xor
inc
aaa
lds
out
push
adc
cmp
inc
dec
mov
mov
mov
popa
lret
subl
sub
fadds
int
std
inc
cld
ret
or
jbe
push
sarl
xchg
aaa
jns
test
dec
and
add
cmc
jbe
jge
stos
cltd
sbb
push
icebp
push
daa
in
ja
dec
inc
jno
data16
push
pop
cld
std
jmp
movl
xchg
jae
pusha
dec
jge
test
cmp
xor
test
leave
xchg
adc
repnz
inc
icebp
fwait
out
adc
in
add
adc
out
xchg
lods
loopne
inc
add
scas
mov
mov
add
sub
psllq
inc
mov
bound
cmp
and
and
cmp
clc
pop
arpl
add
decb
xchg
mov
mov
outsl
stc
and
pop
xchg
or
xchg
sub
jbe
pop
xchg
push
jo
push
add
stos
pop
test
inc
and
fsubrp
mov
cmp
mov
mov
out
mov
xchg
jl
out
cs
testl
xlat
outsb
insl
call
adc
sti
sub
push
fidivs
stos
inc
xchg
mov
in
add
insl
push
inc
imul
fs
mov
pop
int3
data16
mov
mov
and
push
jmp
movnti
xor
jno
int3
cld
lahf
mov
into
cs
out
mov
pop
pop
insl
push
jns
xor
scas
sub
lea
popf
sbb
or
sbb
test
hlt
xchg
sti
movsb
sub
stos
addr16
mov
in
insb
cmc
fisubl
or
cmp
mov
je
adc
xor
fdivrl
sbb
sbbb
decl
dec
dec
pop
xchg
xorb
loop
cld
lock
sbb
or
jbe
scas
movsb
sbb
inc
orb
pushf
and
es
mov
inc
mov
push
sbb
cmp
cmp
inc
es
aam
mov
cmp
pop
pop
push
aad
into
xor
sarb
xchg
sub
xchg
or
xchg
cmp
in
loopne
inc
popf
pop
pop
ficoms
push
jmp
push
cmp
out
pushf
xor
nop
jno
mov
std
testb
fstpt
adc
sti
or
add
jno
rorb
xor
inc
movsl
enter
adc
pop
scas
cmp
insl
shrl
in
jnp
cmp
daa
lods
cmp
insl
sti
insb
out
sbb
inc
pushf
lods
daa
sbb
rcr
pushf
mov
mov
scas
push
cmp
incb
cmpsb
inc
sarb
mov
incb
aas
mov
mov
xor
dec
mov
xchg
ficoms
dec
mov
stc
adc
outsb
fisubrl
pop
inc
idiv
push
cmpsl
out
xchg
mov
ja
sahf
enter
xchg
sarl
push
pop
call
sub
pop
sbb
shlb
orl
mov
fcoml
dec
adc
pop
mov
pop
pop
or
jbe
pop
push
push
mov
dec
push
ror
stc
out
sub
add
or
lock
xor
in
mov
mov
cmc
add
mov
adc
js
aaa
pop
lock
xor
out
jg
out
lods
xlat
mov
or
ret
xor
push
es
loope
adc
repnz
and
mov
je
sbb
mov
pop
push
inc
iret
js
or
in
fsts
jae
sbb
pop
loope
sub
mov
push
into
push
arpl
add
aad
add
push
test
testb
pusha
rcl
xchg
dec
pop
jb
mov
shr
fs
lods
pop
mull
scas
mov
jge
es
rol
sbb
add
scas
and
stos
lcall
jg
mov
pusha
jbe
sbbb
sub
xchg
pusha
pop
lahf
xchg
lret
pop
xchg
xor
nop
xchg
popa
push
imul
mov
adc
leave
bts
sbb
jne
inc
cld
pushf
nop
and
mulb
movsl
inc
dec
mov
xchg
pop
cltd
mov
sub
insb
and
inc
mov
std
pop
mov
push
dec
xchg
inc
xor
add
aas
push
out
jp
dec
inc
ljmp
hlt
into
mov
fisubs
fildll
fsts
inc
or
or
insl
xchg
jno
fsubr
lcall
sbb
add
arpl
sbbb
mov
jge
fwait
movsl
iret
or
mov
push
push
mov
mov
adc
jecxz
daa
lahf
mov
jae
aas
mov
es
xor
int
pop
je
lcall
in
test
ret
movsb
loope
or
cmp
sub
mov
and
xorl
push
movsb
mov
les
scas
pop
adc
cmp
test
scas
fisubrs
cld
ret
bound
ljmp
js
xchg
xor
jb
fiaddl
mov
push
insb
xchg
cltd
cmp
mov
xchg
in
sbb
shr
rcll
into
jg
in
dec
push
pop
aas
gs
bound
cmpl
inc
jecxz
sahf
sub
inc
sbb
mov
inc
jo
inc
add
scas
pop
sbb
jne
jb
cmp
cmpsb
jecxz
and
sarl
pop
in
fs
add
jne
pushf
jmp
imul
mov
mov
popf
push
add
repnz
fisubrl
mov
pop
cli
jnp
hlt
iret
adc
push
mov
mov
and
out
arpl
cmpsl
sbb
jmp
bound
std
mov
shr
lret
sub
xor
pushw
aas
xchg
mov
out
sbb
test
into
in
or
xchg
dec
cltd
imul
decl
mov
jae
add
pop
scas
pop
pop
push
cmp
addr16
loopne
pop
fs
mov
or
lods
pusha
test
shlb
mov
mov
jle
jbe
int3
xchg
daa
data16
ds
stos
mov
stos
rcrl
push
mov
adc
lods
inc
ja
es
fdivrs
or
mov
inc
xchg
inc
repnz
out
cmp
xchg
cmp
mov
jmp
mov
jno
int
outsl
pop
jge
pushf
sub
push
inc
push
inc
aam
jle
jg
bound
sahf
aas
and
jae
inc
js
cmp
add
test
call
xchg
mov
add
arpl
jnp
jnp
movsb
xlat
fistpll
aad
popa
fninit
and
cli
mov
into
xchg
adc
pop
sbbl
push
test
sub
inc
push
dec
or
push
add
test
pushf
cmpsb
xor
je
mov
pop
out
outsl
insb
jp
xchg
aaa
bound
mov
sbb
movsl
push
xchg
sbb
repz
adc
adcl
icebp
imul
leave
xchg
sub
push
lock
les
sbb
inc
cmpsl
cmp
add
pop
inc
jmp
stos
cmp
mov
pop
mov
push
cli
les
dec
jo
sub
fistps
test
pop
or
push
das
dec
mov
daa
or
or
leave
andb
mov
sti
adc
lret
dec
sbb
push
add
repz
jmp
int
flds
roll
fstps
daa
xchg
inc
mov
jl
lods
lock
push
rcl
pushf
jg
inc
and
xchg
test
mov
dec
imul
mov
pop
lret
aad
test
lret
jg
mov
jecxz
js
sbb
xorb
cmp
inc
pushf
add
out
dec
add
xorl
cmp
add
popf
jp
mov
inc
gs
push
xor
pop
mov
scas
xchg
xchg
fwait
icebp
fistps
add
stos
arpl
adc
pop
enter
push
fs
testb
jecxz,pt
mov
xor
mov
cmp
cmpsl
sti
mov
jns
push
sbb
add
mov
mov
mov
jmp
mov
inc
and
jmp
mov
ljmp
rorb
sub
jae
mov
stc
add
cmp
shll
mov
sub
jb
mov
cld
fnstcw
cmp
mov
rorl
mov
and
stos
mov
mov
xchg
mov
hlt
jle
sub
lods
jo
jg
jnp
jmp
aad
call
xor
pusha
pop
mov
cmp
pop
xor
arpl
sub
test
imulb
inc
int
mov
push
fdivr
adc
mov
repz
movsl
push
pop
jmp
cmpsb
add
cld
jmp
pop
test
mov
push
xor
xor
ja
cmp
bound
cmp
inc
lahf
mov
sbb
cmp
jl
mov
mov
or
inc
shrb
les
sbbl
das
inc
lcall
pop
and
ss
xor
aaa
imul
iret
scas
lds
je
xlat
mov
sub
lds
adc
add
mov
jb
mov
cmp
lcall
imul
cmp
add
sbb
lock
mov
shl
xor
mov
xchg
push
popf
nop
aas
pop
inc
movsb
setg
mov
mov
ja
push
xor
gs
cmp
and
sub
ret
test
mov
arpl
and
mov
call
xchg
xor
inc
movsl
push
icebp
out
test
pop
out
sub
das
imul
cwtl
pushf
daa
push
push
xchg
add
inc
push
push
xor
das
inc
cmc
ffree
xor
shlb
add
xchg
mov
movsl
cmc
ret
test
dec
loope
sbb
cli
bnd
dec
jp
ja
mov
lcall
clc
pop
test
dec
into
mov
or
jmp
jle
fwait
pop
or
dec
lcall
aam
cmpsl
icebp
inc
xor
jle
decb
cld
nop
leave
dec
adc
push
dec
xor
add
les
aad
and
dec
pop
filds
jp
pop
dec
jmp
daa
ss
movmskps
shr
mov
sub
sub
cvtpi2ps
fldenv
sub
jg
or
pop
jp
inc
fdivs
jns
inc
es
or
and
jbe
sub
xchg
inc
out
insb
movsb
xchg
stc
js
shll
add
xchg
daa
icebp
es
xlat
sti
in
mov
les
insl
or
mov
inc
pop
pop
jecxz
xor
jb
rcll
xor
mov
sub
xchg
lods
cmc
and
stos
lret
shll
rol
mov
shrl
negb
add
cmp
xor
jl
jb
les
cltd
pop
lods
xor
xor
and
pushf
fcomi
stos
sub
and
mov
adc
sbb
mov
cmp
orl
fstl
loopne
or
pop
jmp
and
jnp
daa
mov
or
stos
mov
mov
movsb
lahf
lahf
mov
cmp
pop
cltd
in
mov
adc
mov
and
rcl
adcl
int
ret
enter
mov
inc
and
jnp
sbb
xchg
mov
xchg
pusha
sbb
jnp
pop
pop
pusha
mov
jnp
pop
mov
xchg
mov
push
testb
scas
jl
icebp
movsl
clc
sti
cmp
xor
or
call
enter
jl
div
imul
sub
scas
insb
sar
sub
mov
cld
repnz
sub
nop
mov
leave
pop
mov
xchg
aad
dec
pop
xchg
out
pop
cmc
movsb
popf
or
pop
adc
sti
frstor
cmc
enter
dec
lods
sti
aas
iret
jne
mov
scas
cltd
jo
dec
pop
sti
sti
int
mov
subl
jmp
paddw
insl
sarb
popf
mov
cmp
xorl
or
cmpsb
mov
insl
das
test
mov
test
and
mov
daa
dec
outsl
mov
jns
stc
jmp
push
lret
jmp
loop
cmp
xor
push
scas
and
adc
cmc
push
out
lea
push
cwtl
push
js
and
insl
pop
cmc
push
leave
cpuid
pop
mov
fimuls
out
in
xchg
movsl
mov
or
stos
push
mov
nop
adc
and
rcrl
enter
or
sub
xor
mov
inc
add
xchg
xor
orl
jmp
inc
sti
in
sbb
into
out
int3
fadd
sub
cld
stc
sbb
xor
push
sbb
inc
sub
push
imul
sub
sbb
xchg
movsl
xor
fbld
jle
loop
dec
push
and
and
pop
adc
xor
or
lods
imul
add
fdivrl
xchg
out
mov
push
stc
lock
cmp
repz
loop
ss
fnstcw
es
jmp
or
cs
fnstsw
adc
dec
out
adc
sahf
sti
movsb
inc
xor
or
jnp
pop
cld
push
xor
fisubs
pop
cmpl
mov
xor
cmp
xchg
pop
sbb
js
push
not
inc
add
fnstcw
sub
call
fstpl
sbb
mov
cmc
dec
in
rorw
jl
push
lahf
roll
push
mov
ss
lret
adc
jle
sub
repnz
xchg
repnz
lods
enter
js
test
sub
pop
je
cmp
shr
in
mov
add
fwait
call
lahf
pop
inc
add
push
pop
and
push
sbb
jnp
and
pop
add
int3
cmp
push
ds
mov
xor
dec
test
in
mov
fidivrs
xlat
aaa
mov
movsb
dec
shll
sti
xchg
push
bound
je
add
and
unpcklps
lods
xchg
xlat
cmc
dec
sarb
push
daa
test
lea
sbb
dec
xchg
mov
xchg
orb
insb
push
outsb
xchg
mov
cmp
aaa
cs
iret
fwait
sbb
push
fnstsw
aaa
mov
aas
lret
sub
and
xor
sarl
mov
jbe
neg
inc
test
push
pushf
cmp
mov
fmull
repz
mov
sbb
sbb
add
jp
fisubl
mov
jg
inc
mov
sbb
xchg
ljmp
or
mov
ds
mov
jg
das
dec
pop
cld
mov
dec
push
sub
cmp
push
repnz
cmp
jmp
mov
idivb
sub
mov
jae
xchg
push
jno
mov
sbbl
enter
dec
inc
lds
gs
push
nop
mov
mov
push
sbb
js
and
and
ljmp
adc
test
iret
add
loopne
cmpsb
or
daa
mov
mov
aam
cltd
mov
or
inc
jo
jl
lret
popa
xchg
push
mov
jge
jnp
and
mov
lds
xor
cltd
bound
sbb
mov
push
mov
lea
xchg
xor
sub
or
arpl
dec
in
adc
lds
mov
sub
push
popa
stos
mov
repz
inc
in
pop
mov
lock
xchg
push
test
cmpsl
xlat
test
pop
mov
xchg
bound
movsl
and
je
pop
sbb
add
dec
roll
ss
test
add
fcmovnu
push
or
test
xchg
cmpsb
push
fldt
scas
in
push
jmp
outsl
jb
cmp
std
mov
inc
push
sbb
mul
push
pop
pop
or
nop
jmp
mov
movsb
sub
je
fwait
and
addr16
outsl
xlat
rolb
pop
sbb
scas
pop
mov
call
inc
cs
sti
adc
add
sub
dec
jecxz
dec
xor
stos
jns
popf
lods
int3
fisttpll
mov
mov
sub
shlb
xchg
nop
cmc
movsl
int3
push
cld
push
inc
aas
fadds
sub
pop
arpl
push
mov
sbb
pop
and
loop
es
xchg
idivb
and
pop
aas
mov
cmp
das
stos
mov
inc
jmp
or
in
or
mov
lret
push
pop
stos
loop
xor
test
mov
adc
icebp
shld
ss
loope
scas
and
add
sbb
add
pop
cs
pop
pushl
ret
push
jns
aad
add
cltd
out
int3
dec
test
imul
push
mov
mov
push
pop
add
cmp
test
test
jp
jl
and
mov
push
leave
mov
dec
mov
push
dec
and
movsb
dec
cmc
xchg
dec
xchg
dec
push
jle
dec
or
adc
popa
call
je
aaa
addr16
xor
pop
icebp
lret
dec
out
lret
leave
cltd
hlt
push
cmp
sti
cld
pop
stos
shll
pusha
cld
jo
mov
inc
and
sbb
or
sbb
inc
daa
movsb
mov
int3
mov
ficoms
mov
dec
leave
or
cli
jge
outsl
pusha
inc
xchg
aad
and
dec
sahf
into
aaa
add
test
and
add
movsl
xor
xchg
popf
arpl
add
rcrl
adc
aas
mov
addb
sbbb
push
jge
cmc
xchg
sub
int3
mov
sub
aas
cmp
mov
loope
jo
scas
loopne
stc
lea
int
mov
das
xchg
xchg
lcall
cmpsl
fidivs
std
aad
neg
mov
ljmp
push
sbb
out
jnp
ds
imul
pop
sub
or
clc
sub
repnz
push
loop
or
xor
pop
lret
xchg
das
sub
aad
movq
sbb
jmp
cmp
lahf
xor
js
ljmp
and
shll
cwtl
xor
stc
mov
int
fsts
sub
sbb
inc
mov
and
sbb
loop
scas
sahf
pop
lds
lods
lahf
xor
je
daa
push
xor
or
sbb
push
jae
loop
aad
dec
mov
pop
sbb
sub
push
lret
dec
cmp
loop
scas
pop
jbe
lds
imul
mov
jle
pop
and
call
test
int3
inc
xorps
lcall
push
mov
pop
push
and
push
out
outsl
test
ds
and
pop
std
fcompl
pop
loop
popf
cmp
adc
popa
xlat
sbb
xchg
mov
add
pop
sti
sub
fldt
pop
pop
or
push
test
je
xor
roll
lcall
cltd
in
popf
sti
fucom
jne
adc
into
sbb
aaa
xor
add
mov
adc
cmp
push
fs
jnp
int
stos
stc
add
mov
mov
into
mov
push
js
shl
xchg
mov
push
mov
test
sbb
pop
das
push
fwait
jmp
scas
and
nop
aaa
scas
fimull
and
test
mov
movsb
push
push
inc
scas
dec
pop
xchg
icebp
lret
addr16
leave
fwait
pop
sub
mov
fisubl
call
xchg
sbb
fmulp
or
mov
call
pop
mov
jne
or
fwait
pop
jle
lret
andl
inc
mov
subb
fsubrs
imul
sub
scas
pop
dec
out
push
icebp
xchg
jo
mov
fcoml
dec
outsl
sub
pushf
lods
std
insl
mov
test
rclb
bound
sbb
or
fs
xchg
adc
cwtl
and
push
test
movsl
loop
or
js
adc
enter
add
bound
inc
test
adc
sbb
xchg
pop
inc
xchg
mov
mov
fdivrs
aaa
jmp
push
es
mov
imul
les
xchg
in
enter
rcll
nop
cli
push
outsb
mov
mov
shl
lret
fidivl
push
lods
sbb
mov
jg
test
mov
mov
shrb
xchg
jg
mov
inc
add
jns
or
jno
push
and
fmull
jnp
push
dec
dec
jmp
incb
pushf
leave
jp
fs
dec
push
data16
dec
mulb
leave
xchg
imul
je
es
jb
jnp
mov
decb
or
movsb
jb
inc
icebp
addl
jl
into
jns
mov
mov
dec
das
lret
mov
inc
fidivl
adc
xchg
movsl
dec
or
test
inc
outsl
inc
sbb
movsb
push
js
adc
xor
fwait
sar
cmp
adcb
adcb
rorl
jle
pop
jmp
sub
xchg
pop
icebp
push
add
dec
xor
sub
pusha
add
cmp
dec
pop
aad
out
jbe
sub
fimull
xchg
push
es
sub
out
mov
jp
jno
fs
push
fbstp
hlt
sbb
outsb
imul
xchg
mov
or
adc
pop
jno
lahf
or
xchg
push
and
outsl
adc
xchg
add
cwtl
insl
fcompl
jl
adc
fisttpl
mov
cmc
cmp
leave
mov
data16
ss
lret
jle
out
jge
cmpsb
mov
jge
push
enter
test
into
cmp
push
mov
mov
cmp
push
sbb
dec
hlt
jmp
and
mov
push
out
inc
sbb
inc
mov
into
aas
push
mov
fyl2xp1
jno
pop
loope
loope
mov
cld
pop
test
xor
cmp
pop
cwtl
push
xchg
push
xor
loope
pop
cli
mov
nop
mov
dec
enter
imul
mov
mov
xlat
gs
lock
rol
inc
cwtl
addr16
sbb
clc
shlb
push
js
push
aas
xor
cmp
clc
testb
push
sub
leave
pushf
bound
lds
mov
push
jo
inc
bound
jmp
cmpsb
add
addr16
daa
adc
xchg
pusha
jne,pt
cs
divb
jne
inc
nop
xor
xor
pop
in
and
lahf
movsb
les
push
arpl
movsl
sti
or
ljmp
cmp
push
addl
sbb
mulb
decb
mov
pop
repz
xor
mov
xchg
mov
test
aaa
inc
scas
dec
popa
inc
xor
cmp
mov
pop
inc
cwtl
cmc
pop
lret
dec
in
cmc
fldl
xchg
jbe
in
outsl
adc
or
out
mov
insl
shl
add
lods
sti
push
pusha
bound
jp
mov
insb
outsl
sub
add
addr16
cmp
dec
mov
inc
shll
movsl
loopne
and
cld
jmp
repz
jecxz
iret
shrb
lcall
repnz
into
adc
cld
ficompl
out
push
stc
outsb
inc
pop
jae
pop
aaa
fsubl
out
aam
out
ficoml
mov
andl
pop
push
cmp
addr16
inc
and
repnz
lock
jge
jge
mov
xchg
mov
popa
jg
outsl
xor
cmpsb
divb
sti
or
adcl
jbe
divb
out
mov
dec
aas
mov
jnp
push
adc
push
cmpsl
xor
sbb
fistl
repnz
or
fistps
and
test
mov
icebp
dec
idiv
cmp
pop
jmp
stc
or
dec
sub
dec
sahf
js
jbe
add
jae
sti
mov
pop
movsl
into
stos
pusha
pop
sub
cmp
int
xor
aaa
dec
mov
xchg
pop
pand
jno
int3
in
pop
out
subb
jmp
mov
sarl
pushf
hlt
dec
inc
xor
xorl
data16
bound
xor
fwait
lods
loopne
jnp
out
mov
dec
jns
out
scas
sub
rcrb
repnz
jmp
fnstsw
es
xchg
adc
mov
dec
bound
das
test
fs
adc
insb
aaa
sub
rcrb
outsb
mov
aaa
enter
movaps
fisubrs
add
xor
repz
sub
cli
inc
inc
sbb
scas
mov
sar
popa
imul
lcall
pop
pop
pop
into
aad
xchg
xor
test
inc
notb
xor
xor
push
jb
mov
xchg
out
sub
push
or
fdivrs
cwtl
into
push
adc
sti
cli
xchg
in
xchg
out
inc
jmp
jno
dec
hlt
std
fs
rolb
int3
test
clc
mov
mov
pop
xor
mov
mov
inc
dec
jb
lahf
mov
cmpb
test
jbe,pt
xorl
jg
inc
mov
cltd
leave
out
loope
popa
mov
inc
fsubs
or
das
jne
mov
and
push
pushf
jle
mov
rorl
push
jo
lcall
aad
pop
inc
in
and
sub
add
sbb
mov
pop
popa
push
bound
in
mov
data16
call
mov
insl
cmc
movsb
sbb
or
pop
adc
sbb
cli
sti
push
push
cmp
jno
cmp
jl
add
mov
ss
xorb
push
sub
mov
fidivl
lods
mov
jo
inc
jae
mov
dec
in
int
mov
aam
pop
ljmp
sub
sub
inc
sub
loop
insb
dec
mov
push
test
xchg
add
outsl
or
das
push
jp
xchg
push
push
cmp
jge
cmp
lds
add
push
mov
and
xor
xchg
xchg
cmp
sbb
dec
mov
jg
mov
repz
loopne
mov
push
repz
fistpl
xor
out
sbb
leavew
aam
inc
outsb
xchg
out
arpl
fstps
mov
roll
std
jp
imul
mov
icebp
nop
add
push
mov
stos
cltd
cmp
sbb
xchg
dec
fadds
pop
cmp
stos
and
mov
jne
cmp
xor
fldcw
clc
add
mov
xchg
mov
stc
and
lds
sub
enter
xor
cmp
cwtl
xchg
cmp
inc
cmp
dec
jmp
sbb
xchg
sub
adc
push
or
inc
cwtl
jle
and
jge
add
sbb
jmp
in
xor
ljmp
fisubl
mov
repz
aad
pop
sar
or
fwait
sbb
sub
cmc
insb
repz
jmp
imul
ja
sub
loope
pop
adc
mov
cmc
fisttpl
or
or
lods
jge
cmpsl
pop
adc
aaa
sbb
adc
jp
mov
pop
mov
ds
pop
scas
cli
xchg
aas
into
mov
mov
sub
aad
stos
jp
rclb
mov
xchg
movsb
jbe
mov
add
popa
ljmp
xor
call
test
adc
mov
stos
mov
pusha
xor
ss
jg
sbb
vcvtpd2dqx
and
fisttps
mov
jg
jae
pop
xchg
mov
in
pop
arpl
inc
xchg
sub
aad
into
inc
and
imul
adc
out
push
cmp
mov
sbb
into
push
sbb
jg
dec
mov
movsl
std
push
aam
inc
mov
aam
xor
mov
mov
cltd
lds
jae
push
rol
cmpsl
pop
cld
xchg
sbb
scas
dec
popf
cmp
sub
jp
sbb
imul
enter
add
mov
jmp
jl
pusha
xor
mov
jmp
mov
in
xor
and
adc
fdivrs
pushf
and
and
push
leavew
sbb
adc
cmpsl
in
xor
inc
les
cmp
mov
popa
push
nop
out
shlb
jne
xchg
xchg
in
adc
sbb
mov
and
loope
jns
pop
jmp
xchg
push
addb
mov
pop
nop
cmp
jbe
jmp
and
int
xor
mov
call
repnz
rcll
mov
sbb
cmpsb
clc
test
fldl
lock
cld
push
xor
sti
mov
xor
je
mov
inc
int3
les
clc
mov
ss
cwtl
push
push
mov
mov
sbb
in
sahf
repz
movsl
mov
dec
mov
or
mov
shll
insb
rcr
shll
out
xchg
scas
push
lea
pop
and
jmp
or
pusha
aam
aad
sub
xchg
outsb
sub
pop
inc
jne
dec
imul
ret
mov
sbb
popf
add
xor
stos
clc
jl
aam
leave
dec
mov
pop
je
scas
cmp
imul
push
mulb
jbe
scas
dec
lret
cli
shlb
mov
and
lods
jge
inc
lods
jg
inc
dec
movsl
lret
pop
xor
sub
inc
push
insb
cmp
fwait
sbb
loope
push
jge
ret
jae
cmc
enter
daa
jl
adc
movsl
inc
mov
push
repnz
mov
inc
das
pop
xchg
cmp
aam
sbb
jns
out
push
adc
mov
cs
push
iret
out
pop
dec
jnp
mov
cmp
xor
cmp
inc
mov
xchg
shrl
jbe
imul
jb
and
add
std
mov
jecxz
js
loope
cmpsl
inc
gs
jne
mov
xchg
loop
push
aas
push
xor
fmuls
sahf
dec
int
mov
mov
call
adc
iret
add
shlb
out
xor
xchg
jb
loope
ss
addr16
cmp
lret
popa
push
scas
fsubp
dec
addr16
pop
pop
pusha
cmpsl
and
repnz
rorb
outsl
aam
lock
mov
popf
fcomps
pop
sub
add
xchg
sbbl
outsl
cmp
dec
dec
xchg
aaa
dec
jns
leave
test
rclb
mov
jl
inc
cmp
jp
push
inc
sub
and
lea
ds
and
pop
mov
xchg
sub
adc
push
aad
shll
mov
sub
fdivs
mov
leave
aas
dec
mov
hlt
xlat
mov
aas
fdivrs
cmp
mov
sub
xor
fdivs
fidivrl
dec
or
daa
cmp
pop
xor
or
inc
ljmp
push
inc
imul
test
and
add
mov
sarl
sbb
lcall
mov
push
out
test
xlat
iret
cmp
shll
andb
jnp
in
mov
xchg
daa
dec
xorl
mov
jle
lret
mov
sti
xchg
sbb
mov
push
je
movsl
out
jne
add
and
fdiv
ret
das
outsl
imul
sub
loope
cmc
and
push
cmp
fnsave
push
mov
mov
cltd
scas
loopne
pop
mov
cwtl
test
sbb
movsb
scas
or
bound
in
addl
or
ja
mov
in
dec
xor
add
push
fs
cmp
inc
mov
sti
outsb
inc
scas
jle
xlat
mov
in
jnp
jle
je
addr16
and
fwait
in
test
icebp
jne
cmpsb
repnz
int
dec
xlat
lret
pop
mov
cltd
and
push
mov
inc
sub
outsb
popf
ffreep
ret
xchg
jo
fistpl
add
aas
dec
out
mov
fadd
pop
mov
and
fwait
out
push
outsb
outsl
fsts
test
rorb
int
ficoml
add
pop
jle
sub
mov
or
mov
cmp
lods
adc
inc
mov
cmp
mov
dec
sub
scas
jp
pop
or
and
loope
mov
iret
jmp
sbb
cli
dec
cmp
arpl
insl
ret
shrl
test
test
mov
es
adc
and
test
ljmp
ljmp
imul
inc
xchg
push
addl
mov
mov
repnz
aam
scas
or
loopne
aas
mov
fcmovb
sti
pop
sahf
mov
inc
add
fwait
cmp
scas
jno
nop
push
shrb
sarl
je
jle
inc
inc
gs
pop
mov
in
lcall
inc
pop
fisttpl
inc
pop
fldl
mov
mov
idivl
or
iret
mov
sahf
mov
enter
ret
insb
sub
mov
ss
sbb
xor
ds
popa
mov
rolb
xor
sti
loopne
loopne
jb
data16
std
xor
mov
lods
lcall
dec
sub
or
xor
cmp
or
das
ret
inc
pop
cs
push
std
clc
or
cmp
mov
xchg
xchg
mov
sbb
out
in
addr16
dec
test
cmp
xor
and
sbb
jnp
lret
mov
sarl
mov
xor
xchg
out
scas
add
sub
push
and
jbe
ja
and
and
int3
inc
sbb
repnz
sub
mov
mov
push
mov
and
movsl
sub
mov
ja
call
inc
jae
mov
outsl
dec
fidivrl
jecxz
fnstenv
xor
sarb
clc
ljmp
hlt
mov
lock
lahf
mov
xchg
sub
sub
or
lods
pop
shl
cmp
stos
adcb
rcl
icebp
mov
xor
sbb
adc
fs
ss
jle
mov
wrmsr
repnz
iret
int
pop
loopne
push
dec
outsl
scas
xchg
cwtl
in
pop
int3
cltd
in
mov
lcall
jl
lahf
inc
in
xor
cmc
pop
jecxz
pop
mov
mov
test
mov
iret
imul
mov
xor
jne
outsl
test
outsl
jge
js
add
xor
les
xor
leave
jb
in
sub
lds
lret
test
xchg
lcall
mov
push
mov
gs
xor
inc
movntps
sahf
mov
sub
loopne
add
inc
push
xchg
fmull
daa
mov
dec
stos
clc
enter
xchg
rcll
mov
test
push
xchg
adc
sub
xchg
subl
rorb
pop
cld
aam
and
cltd
or
pop
popf
ja
test
cld
adc
lret
lods
into
mov
clc
push
repnz
dec
adcl
mov
in
pop
pop
lret
fdiv
lds
cmp
inc
std
test
fwait
rorb
add
push
out
dec
test
xchg
pop
mov
pop
cmp
shlb
lds
inc
cltd
fstps
xorl
ficoml
loop
cs
jge
mov
loop
add
sbb
mov
jge
inc
push
leave
movsb
nop
nopl
add
mov
and
or
inc
mov
es
sbb
icebp
dec
insb
shl
mov
sahf
or
insl
inc
sub
sbbl
xchg
add
js
pop
ficoms
xchg
das
lods
decl
pop
stos
push
jnp
cmp
jmp
int3
stos
pop
aas
popa
daa
jge
push
popf
adcb
pusha
ret
adc
mov
and
icebp
mov
lcall
xor
loopne
xchg
movsl
out
cmp
shlb
test
mov
xor
mov
and
mov
push
lea
ljmp
pop
lret
xor
lods
sbb
mov
mov
ja
mov
adc
mov
fdivrl
movsl
popf
jl
fcomps
sti
or
dec
sub
jb
mov
push
shl
ja
gs
loopne
mov
movsl
xor
icebp
sub
mov
pusha
mov
enter
mov
jmp
in
sahf
mov
aam
add
lods
repz
inc
push
negl
dec
es
fdivrs
loopne
pop
xor
aas
pop
jmp
cmp
push
adc
xchg
push
in
lret
or
push
jno
scas
jl
iret
lahf
inc
ljmp
mov
add
jno
and
out
int
fnstcw
xor
leave
leave
lods
push
mov
daa
insb
std
imul
cmp
push
movsb
sub
fidivrl
mov
jmp
movsb
xlat
sub
mov
popa
lret
filds
sbb
hlt
add
notb
push
inc
into
pop
lods
sub
aas
jmp
test
lods
and
mov
jmp
jae
stc
test
dec
xchg
jnp
sub
fdivs
sub
push
aam
jns
cmp
jg
pop
fnstcw
add
xchg
setbe
inc
dec
ljmp
cmp
popf
ja
mov
push
adc
rcrb
xor
lcall
jne
inc
cmc
loopne
pop
pop
sub
xorl
sub
push
add
shrl
jne
fcmovbe
sbb
imul
icebp
push
roll
push
shrl
jmp
add
cmc
xlat
jge
jmp
pop
mov
out
jb
xchg
pop
sarb
jae
mov
sbb
adc
add
and
push
loopne
fs
jno
sbb
dec
ret
mov
hlt
cwtl
jbe
mov
imul
mov
out
inc
out
stc
scas
cltd
sub
xchg
pop
fnstenv
rclb
loope
test
loop
jbe
std
ret
loop
jnp
pop
cmpsl
and
data16
pusha
mov
push
cmp
outsb
fwait
inc
je
les
pop
or
dec
mov
lcall
cli
dec
test
xchg
test
xchg
jge
data16
sbb
inc
das
in
sbb
or
lahf
scas
cmp
sub
rclb
mov
mov
insl
js
je
mov
test
pop
out
pop
lcall
std
pop
cmp
ret
cmpsb
into
jns
push
cld
sarb
jp
sbb
call
xchg
in
in
das
pop
sti
les
jle
inc
or
xorb
xchg
icebp
mov
push
xlat
cltd
adc
outsb
mov
mov
stos
testl
popf
xor
push
mov
mov
xchg
add
negl
pop
push
mov
adc
jmp
je
imul
and
out
mov
push
pusha
rcrb
mov
movsb
or
enter
flds
jnp
sbb
jl
cltd
jl
inc
or
jnp
xchg
imulb
test
lahf
rcr
mov
push
scas
mov
adc
cli
dec
sbb
idivl
enter
or
je
adc
xchg
arpl
cli
stos
ss
mov
scas
pop
in
lahf
ljmp
je
jb
pop
sbb
cmp
or
leave
or
xor
xchg
cmp
or
das
stos
pop
movsb
mov
fs
sbb
testl
push
imul
call
inc
push
mov
int3
xor
ds
adc
sub
stos
stos
repnz
jne
mov
lods
insl
dec
aas
in
fiadds
adc
pop
xchg
sub
push
and
lods
aaa
loopne
xor
hlt
fcmovu
test
aas
int
leave
mov
ret
pop
mov
mov
xor
inc
inc
xchg
or
aas
les
pop
cmpsl
js
out
push
push
push
lds
aam
js
mov
mov
out
dec
aaa
aam
ja
cli
aaa
daa
movsl
insl
insl
jmp
dec
jmp
and
push
push
insl
sub
mov
push
mov
sub
cltd
push
push
cmpsb
jmp
ja
aam
xchg
jae
mov
inc
jno
sarb
sbb
jns
inc
ljmp
dec
lds
test
push
xor
test
pop
test
inc
lret
bound
mov
test
lock
jno
mov
je
mov
fcomp
into
push
test
shlb
xchg
inc
ss
xchg
push
sub
aaa
imul
popf
in
shrb
xchg
adc
mov
sub
adc
xchg
mov
push
cld
aas
mov
mov
repz
pushf
jb
shlb
dec
sub
or
les
aaa
add
inc
dec
jbe
and
push
aam
daa
pop
mov
test
out
ffreep
push
add
sbb
lods
lock
mov
pop
adc
rolb
jle
dec
js
iret
fistpl
jmp
outsl
scas
and
ret
pop
pop
push
xor
out
fwait
cmc
leave
scas
dec
aad
push
lods
cmp
dec
sti
sub
or
mov
repnz
xchg
add
xchg
dec
aas
lcall
push
xchg
gs
aad
fdivs
dec
pop
adcb
push
add
mov
xor
loop
xorb
mov
push
xchg
mov
xchg
shr
sub
and
lcall
int
mov
pop
xchg
xor
dec
inc
push
enter
cli
cwtl
lea
sub
dec
push
pop
xor
out
psadbw
sbb
dec
shl
in
xor
pop
sbb
fwait
push
addr16
ret
ljmp
fwait
sar
lods
aam
roll
or
dec
adc
push
xchg
movsb
cltd
add
movsl
rcrb
shl
int3
cmc
inc
jecxz
fiaddl
sarb
loop
xor
jl
inc
push
test
aam
jbe
dec
call
mov
push
xor
xchg
inc
push
sub
call
test
jnp
orl
lcall
mov
test
inc
dec
cmpsl
xchg
jo
fcoml
lahf
sub
push
rorb
stos
cld
movsb
xor
scas
jl
push
inc
cld
jae
orb
mov
mov
sti
mov
jb
cld
push
adc
fisttpll
or
push
add
pop
icebp
and
arpl
xchg
push
test
or
cmc
or
lret
mov
adc
push
cmp
inc
jae
std
insl
dec
ret
pop
adc
icebp
insb
push
aas
test
in
orb
inc
dec
test
sbb
xchg
daa
mov
pop
jns
icebp
pop
jns
stos
data16
mov
xor
inc
jne
jns
out
int
pop
loop
mov
sbb
enter
inc
cmp
inc
cmp
add
fcomp
push
pushf
lahf
scas
cmpsl
mov
jne
test
mov
frstor
stos
and
inc
push
js
push
scas
dec
xchg
outsl
xchg
insb
inc
test
pop
out
popa
ljmp
adc
add
pop
mov
jbe
pop
sbbb
test
adc
push
pop
ss
fmull
les
sahf
push
in
adc
mov
inc
push
add
add
test
jo
jecxz
mov
loopne,pt
fdivrp
les
push
leave
std
jno
xor
and
sbb
jno
out
jae
fldenv
enter
sub
xchg
inc
cltd
loop
xchg
xchg
ja,pt
cld
and
mov
jb
add
inc
nop
or
xor
jge
sbb
mov
filds
andl
aaa
jno
in
xor
mov
adc
cmp
jle
ss
sub
dec
pop
xchg
std
mov
movl
xor
stos
and
test
fucomip
add
rolb
test
jl
rorb
push
xchg
ss
clc
cld
sub
adc
test
dec
aas
fistpl
popf
js
dec
sub
xor
push
jbe,pt
xor
push
cli
or
dec
les
add
dec
xchg
mov
cmpsb
push
cmp
jle
loopne
dec
out
mov
leave
shl
ja
andb
icebp
jmp
or
pop
rcrl
in
std
orb
jno
push
xor
paddusw
sub
cmp
outsl
test
repnz
sbb
lods
mov
out
nop
inc
gs
add
jbe
push
addl
mov
sub
mov
sub
inc
in
in
mov
outsl
sub
mov
jge
xchg
enter
cltd
lret
pop
out
rolb
xchg
sbb
repz
xchg
mov
std
sub
and
push
andps
dec
sbbb
popf
sub
dec
fisubl
aam
jo
fisubl
lea
repz
fs
adc
lahf
mov
and
sahf
cltd
bound
call
mov
popf
outsl
insb
adc
adc
mov
stos
rcrb
testl
xchg
xchg
mov
mov
jne
fisttpll
stc
stos
adc
pop
jo
pop
mov
mov
ret
in
fsubs
and
es
push
loop
inc
pushf
push
jbe
js
jg
inc
cmpsb
cmp
mov
js
mov
mov
cmpsb
cwtl
mov
sub
sub
shll
fs
popf
or
cmc
mov
push
cmpb
mov
inc
jns
push
and
mov
sbb
ja
mov
mov
test
aad
pop
aas
and
cmp
xor
jge
fistpll
pop
adc
inc
adc
mov
mov
pop
cwtl
mov
cmp
xchg
push
jp
lcall
pop
jae
mov
in
cmpsb
xchg
pop
aaa
cmpsb
add
sub
and
cltd
adc
negb
inc
or
mov
cmp
call
adc
xchg
add
sub
outsb
stc
inc
jb
xor
xchg
das
mov
dec
pop
repz
mov
or
jmp
and
ljmp
hlt
fcomps
mov
xchg
jnp
insl
std
pop
xor
jae
and
jp
stc
pop
mov
lock
leave
pop
push
mov
shrb
mov
dec
stc
hlt
outsl
aam
push
mov
cmpsb
mov
jno
dec
jns
in
cwtl
adc
sbb
lds
mov
lods
shlb
imul
test
fisubs
and
daa
mov
mov
sub
mov
loopne
icebp
xor
xor
ljmp
jle
mov
imul
shlb
dec
add
inc
lcall
dec
add
lret
inc
push
arpl
into
mov
mov
pop
or
ds
outsl
xor
call
int3
jl
push
mov
scas
xor
cld
pop
je
dec
ja
jne
jbe
je
push
repz
cli
rdmsr
lock
cli
rcl
mov
testl
add
xchg
outsl
bound
mov
out
sti
test
or
cmp
adc
mov
shll
icebp
lock
popa
mov
fldcw
in
inc
and
stc
sahf
jb
sub
dec
dec
xor
popa
add
fwait
add
push
sub
and
or
push
push
sbb
inc
mov
jmp
add
cmp
loop
fbld
xor
add
incb
mov
dec
push
iret
imull
dec
cmp
cmp
lret
ds
arpl
ja
jb
jns
dec
pop
insl
clc
mov
jg
or
sub
pusha
jg
inc
jne
mov
in
cs
test
orl
cwtl
add
xchg
mov
andb
jg
mov
das
push
sub
push
jb
pop
loop
cmp
inc
add
sub
dec
movsb
jo
sbb
fcomps
xchg
xor
addr16
xorb
insl
inc
push
push
insb
xchg
mov
inc
xor
dec
or
lahf
sahf
into
adc
loope
push
jb
pop
rcrb
pop
mov
sub
xchg
rcrb
es
je
push
add
test
data16
orl
fildll
inc
xchg
popf
shrl
nop
pop
dec
sbb
test
cs
push
sbb
insl
sub
xchg
test
ja
outsl
rclb
sahf
push
xor
mov
and
out
iret
adc
sahf
cwtl
pop
loopne
sbbb
jbe
dec
and
sub
mov
call
mov
insl
dec
shl
in
jecxz
nop
and
pop
inc
lret
dec
in
and
xor
fs
pop
gs
fcomi
addl
jmp
mov
fcmovb
and
dec
lret
dec
xor
xchg
mov
aad
out
lea
or
jns
push
cmp
iret
fwait
outsl
and
adc
jno
adc
sub
xor
outsb
push
pop
fldcw
cmp
mov
jno
mov
inc
filds
aad
out
or
das
movl
int
cld
sarl
xchg
lret
das
shl
das
xchg
ljmp
into
dec
loope
subl
in
lcall
mov
cs
cmp
aas
shlb
rsqrtps
sub
xor
sbb
jecxz
in
dec
mov
push
divl
loopne
pusha
xchg
mov
mov
mov
mov
mov
mov
mov
sub
cmc
aad
subl
add
and
cmp
inc
and
idivb
push
xor
cmpsl
sub
cmpsb
lea
push
mov
push
hlt
or
and
pop
or
enter
call
jle,pn
in
jo
push
xchg
lahf
mov
mov
ja
adc
scas
cmp
push
inc
not
loopne
icebp
in
dec
pop
lahf
mov
or
xor
aaa
jmp
dec
ret
jmp
or
cmp
fxch
cwtl
jmp
add
into
cmp
arpl
sahf
pushf
or
sub
push
pop
fisubrs
push
ret
movsb
push
lock
test
jg
outsb
xchg
sbb
xlat
cmp
in
bound
shlb
or
xchg
je
push
std
mov
orb
and
out
popa
push
or
bound
push
pop
jmp
stos
adc
cs
cmp
mov
repnz
dec
idiv
or
insl
in
imul
popf
arpl
push
test
add
incb
adcb
cmp
ljmp
xor
hlt
clc
in
ja
cmp
lea
dec
loop
sbb
out
out
nop
mov
in
out
clc
mov
clc
repz
sbb
add
mov
push
mov
adc
push
enter
pop
lock
jnp
mov
push
sub
xor
jnp
inc
movl
cltd
jo
mov
jo
xor
and
push
pop
roll
mov
in
cmpsl
sbb
push
lea
sti
in
mov
movsb
xor
fmull
sbb
test
mov
cmp
orb
sbbl
push
cmpsb
call
or
inc
mov
push
js
cmp
mov
inc
stos
mov
clc
iret
aam
xchg
dec
add
pop
stos
sti
cmc
js
jne
jg
aam
test
lahf
clc
lods
mov
pop
push
js
call
inc
sti
pushf
or
sbb
lds
mov
xchg
xor
out
or
test
repz
mov
inc
push
data16
pop
out
pop
sub
sub
jecxz
mov
mov
add
mov
inc
pusha
cld
dec
push
scas
xor
push
pop
push
outsb
jnp
adc
loop
add
bound
mov
jns
jne
xchg
mov
addb
aad
jg
ja
out
adc
lds
fsubp
out
out
pop
outsb
xor
pop
mov
push
mov
jmp
sub
call
mov
inc
sti
pop
xor
jo
shl
ja
mov
outsb
jo
cmpsb
cli
sahf
addr16
iret
and
xor
cmp
cmpsb
pop
sub
inc
aaa
movsl
cmp
mov
shll
xor
xchg
ds
mov
jmp
add
aad
cmc
scas
push
insb
pop
dec
fdivr
lods
shll
hlt
add
addr16
cmp
cmc
mov
fs
cltd
int
dec
gs
scas
sahf
and
sarb
mov
cmp
mov
and
and
rorl
movd
adc
or
and
pop
lcall
and
cmpsb
int3
dec
and
jmp
mov
sbb
xchg
cltd
mov
or
sarl
out
jb
sub
fucom
stc
adc
jno
aam
inc
inc
or
arpl
xchg
push
negl
mov
jl
cld
pop
mov
mov
mov
js
cmp
cmp
scas
pusha
int
mov
test
data16
mov
arpl
push
insb
aas
or
push
icebp
jne
ljmp
add
outsb
imul
push
je
xchg
ret
pop
test
iret
repz
xchg
lret
call
dec
xor
mov
rol
aad
gs
ja
cmp
out
push
dec
mov
roll
mov
popa
mov
stos
fwait
shlb
ds
imul
sbb
xor
jmp
imul
mov
ficomps
in
inc
incb
ja
rol
insb
sbb
pop
outsb
xor
enter
push
inc
data16
inc
sbb
jns
dec
mov
or
or
xchg
mov
pop
js
mov
ja
dec
cs
orb
cwtl
jg
sub
in
lods
pop
nop
roll
daa
in
loope
fidivl
imull
pusha
fldenv
add
pop
mov
fisubrl
mov
jno
jecxz
xchg
insl
mov
ret
cmp
dec
inc
int3
stos
idivb
cmp
mov
add
cs
pop
test
out
push
cmp
negb
fdivr
mov
lods
mov
in
rcr
adc
push
xchg
jns
xchg
xchg
add
mov
idivb
jge
sub
out
mov
sbb
loope
dec
mov
cli
and
push
sbb
jge
adc
out
adc
jbe
cltd
lods
xorl
cmp
in
ret
xchg
and
test
xchg
movsl
lsl
pop
call
cmpl
push
ds
and
mov
xor
nop
fldenv
dec
fdiv
push
sub
pop
mov
pop
aad
lcall
jns
pop
cmp
and
es
int3
cmc
mov
pop
xorb
nop
pop
xchg
lds
dec
cmpsb
lods
lret
dec
mov
and
adc
and
dec
mov
test
and
dec
sub
out
dec
lds
popf
pusha
dec
sbb
sahf
hlt
insl
xor
sub
sbb
or
in
mov
cmp
xchg
ret
int3
cltd
inc
xchg
sti
rcr
das
loop
out
enter
mov
and
inc
push
addr16
pop
cmp
aaa
js
push
push
xor
push
cs
dec
imul
outsl
mov
inc
xor
test
dec
movsl
call
loopne
pop
in
enter
loope
cmp
pop
mov
les
jo
inc
mov
sub
inc
xchg
sbb
mov
fwait
jp
or
ljmp
ret
jno
rorl
outsb
and
jp
hlt
xchg
sbb
or
iret
fdivl
cli
loope
xor
fsubrs
dec
imul
lods
ljmp
sub
mov
lahf
or
in
insl
js
mov
xchg
cmp
dec
xchg
cmp
adc
mov
das
mov
mov
fstpt
test
jno
lods
shlb
fsts
pop
fidivl
dec
jge
xor
fldcw
decl
fcoml
jno
das
push
dec
fsubrs
in
arpl
cmp
lds
cmp
mov
pop
outsb
jnp
dec
cltd
xor
push
cmpl
add
mov
or
hlt
xor
xor
testb
loopne
pop
jns
loopne
lods
push
les
mov
outsl
add
data16
cmp
hlt
and
outsb
sti
jmp
outsl
fstl
pusha
dec
xor
cltd
shrb
out
sar
leave
mov
sbb
and
mov
sti
decl
add
lods
mov
pusha
lcall
jns
inc
sbb
adc
add
movsb
dec
out
sub
pop
into
repnz
dec
sbb
jne
sarb
push
insb
or
repz
outsb
outsb
xchg
push
xchg
and
daa
insb
aam
scas
stc
push
cmpsb
push
mov
push
pushf
popf
mov
sub
mov
adc
or
push
mov
adc
xor
or
push
shll
daa
aaa
arpl
adc
pop
fsubr
or
nop
fucomp
sub
jge
push
addb
ret
cs
add
add
shll
dec
loope
lret
xchg
xor
aam
mov
enter
test
push
cmp
ret
adc
cs
out
cmp
jecxz
pop
inc
insb
adc
pop
xor
lret
cli
scas
push
mov
add
arpl
movsl
cmc
jl
das
add
jns
out
shlb
and
xchg
jo
adc
sub
adc
add
std
jecxz
add
scas
mov
aas
push
testb
jnp
pusha
push
ror
jge
push
inc
loop
filds
pop
out
jp
es
adc
sbb
les
aas
sarb
ret
ret
jge
rcll
jg
sbb
arpl
les
pop
pop
outsl
les
lret
xor
push
dec
mov
jle
mov
es
dec
pop
inc
into
jns
mov
mov
push
jne
add
mov
out
adc
fucomp
mov
pop
inc
in
ja
in
push
pop
inc
or
test
rcrb
push
push
xor
loope
jp
and
std
push
aad
adc
mov
jge
adc
push
cli
sub
mov
pop
dec
mov
stos
sub
in
xlat
mov
lret
iret
jg
lock
loopne
in
fsubrs
fs
adc
cmpsb
push
addr16
cmp
cmp
jle
cs
out
icebp
jb
scas
lahf
sti
jnp
jnp
aas
xchg
stc
add
adc
pop
push
hlt
je
add
xor
xchg
mov
test
bound
sahf
clc
jno
je
cltd
fsubl
stos
push
fdivl
mov
stc
add
pushf
ds
dec
xchg
test
lret
fisubrl
sahf
mov
fisubrl
pop
sub
jae
ljmp
testl
sti
lret
jecxz
push
add
push
xor
mov
mov
xchg
dec
repz
sub
lcall
ss
mov
pushf
stc
or
dec
lock
cmp
stos
lret
xchg
adc
dec
fistl
pop
in
test
sahf
icebp
inc
sub
repz
push
addb
mov
in
jb
int3
lods
out
sbbl
mov
scas
dec
rcr
push
xchg
lahf
pop
jbe
mov
pusha
dec
hlt
mov
lock
xorb
or
lret
leave
popa
pop
fnstcw
sub
daa
rolb
add
mov
aaa
shlb
pushf
sahf
aas
pop
jae
add
f2xm1
cmp
sub
push
mov
dec
push
mov
sub
orb
jb
jg
jae
xor
ds
adc
imul
test
add
sub
and
sbb
pop
lret
cmp
nop
cmp
in
ljmp
sbb
in
data16
jp
push
rclb
sti
push
out
js
adc
std
pop
aam
fisubl
xor
xchg
and
outsl
mov
pop
add
ret
icebp
xchg
dec
adc
iret
adc
loop
ror
xchg
jno
fldcw
fadds
repnz
pop
out
adc
adc
dec
das
andl
mov
sub
mov
adc
or
mov
shr
and
mov
mov
pop
js
jp
popf
jns
sub
and
loop
mov
shrl
cld
icebp
fcmovu
scas
jmp
test
das
inc
cwtl
in
enter
add
and
nop
clc
mov
jle
push
out
iret
cmp
xchg
or
pop
xchg
fistps
fwait
xchg
jnp
adc
mov
inc
jne
xor
loop
data16
sbb
mov
mov
ja
mov
and
aad
cmp
data16
sbbb
xchg
in
sbb
mov
push
push
push
xor
and
dec
loope
dec
fldenv
lret
push
pusha
dec
lret
push
xchg
shl
pushf
aad
shll
push
adc
call
fs
test
cltd
mov
mov
dec
or
es
js
cwtl
arpl
adc
fstps
cmp
adc
adc
push
push
in
fcmovnbe
jl
test
mov
ss
push
fmul
add
add
cmpsl
xorl
dec
mov
repnz
inc
adc
pop
scas
rorl
mov
push
mov
aad
shl
pop
mov
jp
loope
add
sbb
cwtl
adc
lods
or
or
add
dec
add
add
lret
ds
fnstsw
cmc
fisttpll
push
add
mov
nop
pushf
stc
mov
mov
inc
add
out
pop
sbb
ljmp
nop
enter
int
enter
insb
lcall
sahf
sbb
xchg
push
xchg
lock
add
mov
push
pop
dec
inc
es
out
pop
test
mov
mov
add
dec
insl
iret
fdivl
or
xor
mov
push
out
push
sbb
insb
pop
aas
adc
mov
scas
pop
mov
ss
test
add
pop
pop
ret
neg
inc
xchg
repz
xchg
scas
push
cmpsl
test
push
cmp
xlat
addr16
fdivs
ret
push
sbb
addr16
stc
mov
mov
inc
mov
sub
and
push
xor
mov
or
pop
push
pop
icebp
cmp
mov
dec
icebp
mov
and
jne
mov
pop
add
sahf
or
adc
xchg
inc
xchg
mov
int3
sbb
cs
js
call
xchg
lock
or
pop
xor
xorl
sub
dec
push
stos
repz
cmp
add
push
outsb
add
mov
in
sub
or
test
lahf
leave
je
xor
jge
repz
movl
mov
test
repz
and
lcall
xchg
dec
nop
or
xor
sbb
sbb
fstps
mov
dec
fldcw
jbe
mov
xchg
cmp
push
sbb
loope
subb
mov
adcl
cmpsl
add
sub
or
xchg
cmp
sub
push
cmc
imul
mov
xor
mov
in
inc
xchg
jb
imul
add
xor
jo
inc
add
sahf
xchg
das
mov
stos
pop
mov
jbe
mov
sahf
dec
push
test
jnp
xor
mov
dec
icebp
xchg
insl
in
or
jbe
add
dec
xchg
or
dec
cmp
jp
push
hlt
das
loope
int3
or
test
add
aad
mov
aaa
adc
lock
mov
pop
push
sub
setns
iret
lret
popf
outsb
pop
mov
jbe
lret
testb
push
jmp
push
dec
cmp
jnp
cmp
jns
or
add
pop
mov
sub
test
jbe
div
dec
sub
sarb
dec
sahf
pop
xchg
pop
push
cmpb
xor
ret
rorb
psubd
dec
lahf
jbe
add
lret
pop
clc
add
movsb
sub
ja
sub
stos
in
gs
dec
repz
push
sub
test
in
fmuls
std
nop
dec
in
test
push
xchg
fxch
outsb
or
mov
cli
out
leave
push
sahf
shrl
insb
lcall
mov
lret
into
mov
xor
ljmp
iret
sbb
jo
mov
and
push
ret
sub
mov
push
in
loop
test
rclb
mov
daa
xchg
testb
inc
sti
push
mov
or
and
rcrb
ds
cltd
cmp
gs
dec
inc
mov
xchg
insl
add
dec
in
dec
sub
and
mov
cmc
sub
pop
jle
mov
jne
insb
loop
out
push
test
pushf
and
pop
and
into
enter
or
pop
sahf
mov
inc
sub
pusha
mov
mov
mov
mov
ljmp
xchg
pop
push
jmp
stos
sbb
sub
inc
mov
jae
faddl
mov
int
pushf
sbb
push
cmp
inc
sbb
clc
adc
in
test
and
cltd
ljmp
sahf
fwait
push
imul
scas
mov
shlb
stos
xchg
fldcw
sbb
dec
xchg
sub
xor
sbb
mov
pop
xor
incl
jo
int3
xor
jnp
les
xor
cs
jle
ficomps
add
xor
jle
inc
ljmp
cmpsb
outsl
push
add
xchg
clc
jns
mov
adc
lcall
sub
fwait
jge
popa
fcomps
pop
movb
cmc
mov
xor
cs
cmp
call
iret
pop
insl
dec
dec
negl
cmp
int3
and
shrl
addr16
ror
popa
pop
mov
and
jae
ret
and
mov
cltd
stos
inc
jg
bound
mov
push
int3
inc
ret
inc
pop
es
xor
outsl
insl
insl
mov
sti
iret
dec
cwtl
out
insl
insb
mov
dec
pop
filds
sbb
das
jle
arpl
add
cmp
out
dec
lds
test
pop
mov
jl
push
dec
aas
jo
shl
and
int
shrl
cmc
lcall
pop
into
aas
lods
push
sahf
sub
rorb
xchg
into
dec
outsb
cmpsl
mov
mov
nop
and
lcall
aad
push
mov
xchg
mov
jl
movsb
es
xor
stos
ficomps
push
notl
fstl
cli
aas
orb
adc
sbb
daa
cmpsl
add
lods
test
and
rorb
inc
cmpsl
repz
outsb
xchg
test
and
lock
icebp
shlb
sbb
add
adc
in
and
movsb
cmp
ret
sahf
cmp
mov
or
ljmp
jne
pop
leave
mov
test
xchg
fucomip
test
daa
ret
cltd
test
shrb
les
or
push
add
xchg
stos
stc
testl
out
mov
repnz
xchg
popa
pop
aam
push
jg
dec
mov
xchg
inc
pop
dec
mov
pop
mov
leave
shl
jle
mov
sub
adc
stos
dec
sub
push
in
in
js
aad
aaa
test
fdivs
addb
fiaddl
cld
push
or
int
jb
out
adc
cmp
lea
mov
pop
inc
pop
pop
xor
jmp
scas
repnz
mov
movsb
sub
push
jge
jbe
cmp
call
sub
sbb
das
ljmp
push
aas
lahf
daa
int
js
mov
loope,pn
popa
imul
inc
aas
add
inc
xlat
mov
inc
sahf
out
stos
xchg
push
inc
push
fidivs
rcll
push
jmp
dec
mov
mov
push
jns
fld
imul
lock
jns
je
sbb
mov
pop
sub
mov
mov
xchg
fisttpl
inc
sub
add
les
lret
adc
xor
sahf
sub
xor
loop
nop
xchg
add
pop
loopne
jbe
sbb
outsl
or
mov
mov
push
adc
jbe
in
xchg
push
sub
and
fsubrs
mov
out
ret
xchg
out
push
jge
push
dec
jb
mov
repnz
mov
cwtl
jno
xor
inc
movsb
jae
mov
pusha
cli
or
add
xchg
mov
adc
outsb
add
stos
dec
mov
out
imul
out
jp
sbb
dec
cmc
ja
sbb
addr16
clc
test
sarb
add
and
mov
aad
repnz
fstl
jne
add
pop
mov
jecxz
out
adc
inc
pushf
fwait
mov
addb
inc
lahf
imul
push
push
leave
xor
push
lods
cli
js
aad
cmpsl
mov
in
mov
xchg
in
clc
push
mov
or
mov
xor
shlb
xchg
enter
orl
push
popf
sub
push
or
jne
fsts
sbb
adc
aam
jnp
sbb
add
mov
jne
lods
in
xlat
xor
repnz
xor
data16
fnstcw
xchg
fsubs
mov
mov
pop
pop
cmc
push
jle
mov
pop
outsl
repz
jmp
ss
or
dec
adc
xor
aaa
test
cmc
xor
sbb
ret
xor
cmp
test
sbb
cmc
mov
add
pop
add
scas
fwait
mov
adc
movsb
cli
sbb
ss
lret
jae
lods
jge
hlt
jl
in
or
jo
roll
pop
xor
pop
js
shlb
xor
fidivrs
mov
lea
inc
inc
xchg
pop
xor
push
flds
jl
push
shrb
mov
sbb
out
mov
push
jb
jmp
pusha
xor
xchg
mov
xor
inc
out
scas
stc
out
loope
xchg
rcrl
mov
iret
mov
shr
inc
jo
dec
mov
push
cld
arpl
xorl
jl
sar
cwtl
addb
cmp
rcr
push
andl
mov
mov
mov
jp
leave
push
test
adc
add
mov
sub
fadds
incl
lock
mov
lea
pushf
cmp
pop
xchg
int3
fistl
aam
rcr
sbb
mov
mov
cmpsb
xor
xchg
stos
jo
fstpl
mov
or
test
in
push
sub
addb
clc
xlat
dec
into
daa
das
movsb
lock
push
loopne
inc
out
dec
mov
lods
jnp
popa
pop
subl
test
mov
jno
cli
imul
hlt
test
jmp
loop
cmpsb
popf
pop
ds
icebp
and
xor
adc
push
mov
movsl
or
test
mov
sbb
xor
daa
push
mov
push
fists
push
inc
jl
pop
andl
sub
cmp
in
push
adc
or
pop
sarl
xchg
mov
bound
inc
andb
pushl
testb
andl
clc
out
loope
andb
or
insb
out
add
mov
aam
inc
jg
mov
setno
stos
lret
cmp
outsl
div
dec
or
mul
lret
outsb
sar
pop
xchg
jecxz
addb
cmc
enter
inc
inc
js
aas
lret
stos
aas
imul
inc
rcrb
pop
mov
lret
push
jnp
hlt
out
into
out
test
sbb
test
push
aas
sub
cmp
or
mov
sub
test
xor
adc
inc
cmp
fcoml
inc
and
nop
mov
cmp
pop
push
add
or
add
sbbl
arpl
test
lods
cmp
ret
mov
iret
rol
mov
jne
scas
scas
sbb
mov
ret
dec
dec
jo
xchg
sti
ret
enter
int
insl
sub
mov
adc
mov
mov
adc
test
movsl
dec
ret
jg
mov
je
movsl
repnz
lea
jne
loop
lds
add
inc
loope
inc
in
jbe
mov
cmc
repnz
mov
add
fwait
cld
pusha
insb
daa
call
test
sbb
std
lods
jno
cmp
fsubs
out
inc
aam
fmull
out
mov
popf
add
pushf
jp
iret
int
in
jmp
mull
jb
pop
cmp
dec
xchg
lret
lret
dec
into
insb
sbb
jns
adc
pop
dec
imull
mov
cld
call
adc
jecxz
cmc
pop
adc
mov
mov
sbb
popf
ret
adc
lcall
sub
adc
add
adc
repz
xor
xor
clc
clc
push
movsb
push
daa
xor
jge
sbb
add
fldt
pusha
addl
mov
push
adc
mov
inc
ja
inc
pusha
fcmovnbe
jg
cmp
decl
into
test
jno
push
cmpsl
sbb
push
call
test
mov
add
sbb
xchg
jecxz
pop
mov
pop
inc
push
movsb
fcoms
push
add
dec
xchg
sub
aad
movl
cmp
fxch
push
mov
movsb
lcall
in
arpl
inc
sbb
mov
hlt
xchg
hlt
hlt
mov
push
lock
outsl
andl
popl
mov
add
inc
cmp
fdivl
push
movsl
push
push
adc
nop
mov
insl
cmp
mov
xlat
dec
xlat
shrb
test
sbb
dec
mov
mov
leave
fiaddl
mov
jle
out
pslld
xchg
xchg
lret
mov
ret
and
mov
push
inc
adc
xchg
xor
ljmp
xor
sub
in
or
sub
out
jle
jns
lret
stc
cli
inc
fcomps
pushf
jb
test
mov
jne
inc
jecxz
jecxz
dec
roll
mov
cmp
push
pop
jb
shr
pop
or
push
pop
add
mov
cli
nop
adc
mov
aaa
sahf
test
cwtl
arpl
and
pushf
mov
adc
cmpsb
push
mov
roll
mov
not
jo
jae
bound
lret
aam
mov
jne
std
xchg
jmp
fsubrl
outsb
sahf
inc
adcl
adc
mov
inc
push
in
cld
jmp
leave
dec
mov
push
xchg
popf
mov
ljmp
mov
sub
or
xchg
dec
mov
ljmp
jle
test
mov
fwait
jge
mov
mov
scas
or
xor
arpl
sti
fstpt
pop
jp
clc
cwtl
in
call
out
ret
xchg
pop
lret
xchg
lods
xchg
ffree
xchg
mov
rolb
inc
in
mov
das
lret
fs
mov
pusha
cmpsb
sbbl
cld
lret
imul
and
mov
faddp
inc
push
sbb
mov
push
mov
sbb
and
xlat
pusha
sub
mov
icebp
daa
pop
repz
int3
sahf
aas
mov
dec
and
leave
sahf
fwait
xor
mov
dec
pop
dec
es
jle
inc
shrl
inc
pop
in
xor
xchg
cmp
and
in
mov
sbb
hlt
aam
xchg
cmp
sub
jbe,pn
inc
stc
add
inc
push
adc
in
fdivr
sti
mov
pop
notl
pop
mov
cmc
dec
mov
xchg
imul
mov
and
xor
add
jle
negb
roll
lret
adcb
or
cli
hlt
push
xlat
jae
mov
aam
mov
or
dec
call
ljmp
adc
cs
test
or
lret
adc
fstpl
push
jge
sbb
mov
cmp
cmp
fwait
imul
cld
in
sahf
mov
pop
test
lcall
xchg
loopne
movsl
cmp
test
jb
pop
out
sub
jmp
xchg
xor
popf
rcll
pop
mov
stos
jno
popa
jae
out
xor
pusha
sahf
cltd
in
rcrl
add
out
jnp
xchg
adc
cmpsl
lock
push
into
sub
or
dec
movsl
sbb
loope
scas
lds
jp
imul
lods
bnd
and
fistl
pop
mov
cs
lea
cwtl
aad
mov
lret
dec
adc
push
sahf
xchg
imulb
push
add
xor
fisubrs
jmp
add
cmc
inc
hlt
push
add
sub
mov
sti
lea
fisubrl
gs
ja
ja
popl
mov
stc
scas
stc
in
mov
and
xchg
jl
mov
insb
in
jp
popa
mov
pop
pop
xor
dec
cmp
pop
jns
and
push
stc
adc
aaa
pushf
pop
std
xlat
nop
shrb
outsl
lret
inc
imul
push
jne
ret
pushf
inc
adc
pop
test
nop
test
jb
xor
pop
mov
fbld
push
mov
or
mov
cmp
iret
xlat
lret
mov
mov
pushl
repz
adc
or
push
test
scas
mov
clc
mov
ja
jbe
in
aas
xchg
pop
test
adc
mov
aad
dec
je
sti
leave
imul
test
loope
cltd
adc
repnz
lret
sub
popa
push
cmp
lret
inc
jo
pop
popa
pusha
add
subl
sbb
sub
cmc
push
paddsb
sbb
adc
mov
add
push
mov
cs
daa
cmc
mov
push
jge
mov
enter
mov
out
in
or
test
fcoml
xor
rclb
push
and
sarl
pop
orl
adc
xchg
loop
cmp
jae
int
data16
cmpsb
incb
mov
aas
add
xor
inc
dec
and
ficompl
lahf
fnstsw
push
mov
out
cld
bound
shll
les
les
pop
lds
cs
push
mov
pop
dec
in
push
into
sbb
les
mov
push
add
out
fstl
insl
fwait
insl
fdivrl
jo
jecxz
sub
pop
xchg
or
in
or
mov
cmc
push
fcoms
or
jb
test
rorl
out
inc
rcll
repz
add
mov
xchg
das
test
das
inc
dec
pop
mov
pop
push
sbb
sbb
push
jge
aam
cmp
stos
sub
stos
mov
inc
adc
pop
mov
mov
ljmp
adc
mov
jecxz
rorl
ficoms
pop
stos
adc
fildll
pushf
jle
push
cs
xchg
jno
pop
call
test
int3
mov
call
mov
xor
leave
call
call
daa
jge
jge
adc
or
leave
pusha
int3
mov
sahf
sub
sbb
dec
movl
xchg
ljmp
push
push
cmc
in
or
out
aam
jbe
adc
dec
mov
xor
lret
mul
mov
xchg
movsb
jns
pop
xor
mov
movsl
fcoms
je
outsb
dec
divb
int
fnstcw
loop
je
in
loopne
push
scas
mov
in
sub
add
leave
mov
sub
imul
xchg
aam
cmpsl
sbb
jg
scas
lods
ret
cs
pop
flds
sbb
sub
mov
xchg
rcrl
dec
xor
mov
aam
loop
dec
adc
test
jbe
scas
mov
sbb
int3
and
push
adc
sbb
jmp
adc
ret
cltd
cmc
jns
sbb
mov
fdiv
xor
icebp
sti
clc
out
scas
jae
inc
mov
cs
jmp
aas
test
sub
mov
pop
roll
pop
xchg
mov
addr16
bound
xchg
mov
sub
adc
pop
mov
mov
inc
jmp
jne
adc
in
push
cmpsl
cld
fwait
les
out
mov
enter
scas
aas
pop
mov
mov
cmpsb
jge
adc
jl
xor
add
dec
into
sbb
mov
loop
movsb
scas
jle
mov
into
js
fdivr
fwait
ljmp
cmc
mov
pushf
jo
adcb
lret
inc
scas
insb
xchg
iret
icebp
mov
dec
jb
ficomps
and
int
jae
mov
stc
xchg
pop
inc
xchg
mov
in
mov
sub
je
sahf
dec
test
lret
add
adc
and
add
mov
stos
add
cmpsl
lea
roll
cmc
dec
or
inc
fwait
test
or
or
pop
lds
xchg
push
cmp
insb
jecxz
test
lods
jbe
daa
dec
test
cmp
jmp
or
int
pushf
adc
pop
xor
in
xchg
sub
cwtl
cmpsl
stos
cmp
dec
xchg
mov
dec
lds
mov
xchg
sbb
stos
cli
scas
jae
nop
test
push
xchg
xchg
push
xor
flds
jne
push
mov
incl
jae
lods
sub
setne
xchg
dec
adc
mov
push
mov
adc
xchg
pop
jb
adc
lcall
les
mov
int
and
mov
mov
roll
iret
and
dec
and
das
adc
enter
mov
out
lods
shlb
in
dec
mov
in
std
pop
mov
xlat
fcmovu
popa
adc
fs
test
cs
mov
es
clc
cmp
lds
and
imul
xor
xchg
insb
push
shlb
mov
mov
pop
jmp
mov
mov
mov
loopne
dec
pop
jle
add
rorb
out
fsubl
mov
jge
add
and
pop
xchg
test
and
sub
test
popa
push
dec
repz
das
lret
push
insb
xchg
push
shlb
sbbl
ja
fwait
xor
or
mov
sub
insb
sub
fidivrs
cmp
cltd
cli
movsb
out
lock
repnz
adc
adc
into
mov
aas
lods
or
sarb
scas
cmc
into
fldcw
lret
pop
dec
dec
ss
in
int
inc
cmpsb
inc
push
shl
cs
aas
dec
sbb
lret
add
std
or
sbb
fimull
xor
push
mov
iret
sbb
call
pop
lcall
fldcw
adc
bound
sub
stos
mov
rcrl
xchg
mov
popa
fcoml
dec
or
je
add
xchg
repnz
jne
inc
xor
xchg
fldenv
cltd
in
mov
mov
sbb
xor
rcl
or
gs
loope
scas
mov
xor
nop
popa
cwtl
es
fwait
jle
or
mov
mov
sbb
das
inc
dec
jmp
cmp
mov
stos
xor
xor
imul
push
mov
lea
arpl
in
lcall
jnp
ds
stos
sbb
xor
cmp
mov
or
iret
adc
ret
std
mov
lahf
mov
fcomp
or
call
cld
xor
mov
dec
sbb
or
daa
jge
adc
mov
mov
shrb
fs
add
cmpsb
dec
jne
stos
stos
mov
sbb
jmp
ja
das
mov
push
or
jnp
aas
cmc
sub
outsl
icebp
xor
inc
push
sbb
mov
sbb
inc
dec
loopne
dec
fdivrl
pop
stos
xor
lods
es
fisubrl
iret
xor
cld
cmpsl
jecxz
ss
xchg
sub
adc
xor
mov
lock
mov
cs
in
jp
sbb
sub
out
inc
adc
mov
clc
sub
or
es
loop
pop
jo
imul
push
clc
pop
pop
adc
mov
push
xchg
add
lret
sbbl
or
int
sub
mov
mov
cmpsl
xor
push
lds
mov
rep
leave
mov
jnp
xchg
rorl
cmpsb
lods
repz
arpl
loopne
inc
push
sahf
mov
leave
adc
insl
jle
dec
out
mov
enter
inc
fcompl
shrb
adc
mov
popa
rcll
lahf
or
xchg
dec
out
ja
aam
dec
inc
mov
repz
lds
push
movsl
mov
gs
dec
push
mov
scas
xchg
and
sbb
lret
es
adc
sti
ds
dec
dec
movsb
insb
into
outsl
fisttpl
sbb
lods
or
inc
js
out
stc
fs
xor
daa
lods
jmp
iret
push
xor
jne
cmpsb
jg
enter
add
sbb
pop
mov
hlt
icebp
pop
imul
shll
roll
fnstcw
jge
es
daa
scas
jae
xchg
adc
cmpb
lahf
cld
xchg
sub
sbb
pop
lcall
incb
popf
pop
xlat
lret
lcall
loop
cmpsb
lahf
cmpsl
repnz
fwait
mov
sbb
repnz
ja
cmp
lods
pop
mov
fcoml
mov
insb
push
enter
mov
fcompl
add
mov
repnz
xor
push
adc
cmpsb
loop
adc
sub
push
sbb
stos
inc
lock
mov
push
jns
popf
mov
dec
xorb
sub
lods
je
not
lret
mov
push
fsts
and
gs
mov
inc
xchg
shll
les
jge
sbb
pop
push
dec
mov
ret
jl
inc
mov
mov
mov
out
jmp
out
dec
adc
mov
and
fildl
cld
fistpll
push
arpl
aaa
and
mov
pop
lahf
jbe
cli
mov
idivb
jmp
lock
mov
inc
jne
mov
int
scas
int
rorb
es
push
popa
cltd
sub
and
sub
stos
je
fbld
dec
loopne
mov
stos
in
add
xchg
cmc
mov
daa
mov
cld
sahf
loop
mov
arpl
xor
or
push
and
and
cli
or
jge
adc
push
xlat
andb
ds
or
aam
xchg
add
out
jne
sbb
dec
cs
into
shr
mov
or
xchg
sbb
jae
add
and
dec
loope
jmp
test
lret
and
push
dec
lea
shrl
iret
rorb
push
rclb
fwait
inc
mov
jg
jl
and
lret
sub
mov
iret
sub
cli
cld
xchg
out
xlat
sahf
testl
mov
add
and
leave
pop
cli
jge
mov
mov
dec
cld
and
pusha
add
lods
mov
mov
adc
cs
ror
jns
fs
pushf
xchg
rcrl
aad
jmp
ret
aas
fadd
hlt
insb
push
pop
arpl
jp
andb
fistpll
mov
rorb
pop
push
hlt
or
cld
scas
pusha
xchg
cwtl
mov
cld
add
or
mov
repz
inc
xchg
in
bswap
adc
mov
and
repz
pop
mov
xor
jno
cmp
push
mov
pushf
sub
loope
adc
push
sbb
mov
xchg
mov
push
add
push
scas
stos
out
fcmovnu
push
mov
cmp
aaa
test
adc
sbb
sbb
rolb
movsb
imul
les
dec
lods
testl
imulb
divl
fdivs
jns
mov
mul
jmp
add
mov
sti
stc
movsl
lea
xchg
mov
adcl
xor
lret
scas
push
inc
test
inc
repz
cmp
jnp
flds
popf
mov
mov
sbb
mov
xchg
dec
in
es
add
test
popa
xchg
icebp
pop
std
movsl
pop
lahf
aam
adc
xchg
fisttpll
out
shrl
dec
sub
andl
jae
cmp
ret
ret
jae
cli
loop
cli
and
cmp
dec
sbb
cmp
sbb
sub
add
and
or
pop
mov
mov
push
push
jmp
xor
or
idivl
push
xchg
dec
int3
jge
inc
dec
std
test
adc
mov
inc
insb
mov
in
pop
sbb
sub
sti
xchg
xlat
call
add
sqrtps
sub
test
push
int
push
ror
leave
fs
popf
inc
and
cmp
sbb
loope
aaa
inc
push
mov
enter
adc
lahf
sub
add
sti
cmp
xchg
cmpsl
xchg
jmp
fwait
and
jbe
cmp
inc
push
jl
cmp
hlt
pop
add
stc
icebp
dec
test
movsb
or
lret
add
and
inc
xchg
shlb
mov
lds
inc
mov
lret
lock
xchg
jg
movsl
push
cmc
aam
xlat
push
fistpl
outsl
sub
js
pop
mov
add
je
mov
mov
inc
adc
cmpsl
pop
das
push
jg
xchg
je
data16
arpl
cmp
insl
leave
or
loopne
mov
int
push
insl
pop
cmc
sub
dec
das
mov
dec
outsl
fstps
mov
inc
or
fimull
cmc
pop
inc
test
jl
jb
add
pusha
xchg
pop
cmp
jns
dec
jbe
test
fisubrl
test
add
sti
adc
lcall
je
fstl
aam
popa
xor
or
inc
stc
ljmp
sub
add
jp
xchg
nop
add
sub
and
int
fidivrs
mov
insl
sti
scas
gs
cmpsl
push
jecxz
ret
sahf
fldenv
cmp
or
push
sub
mov
adc
mov
scas
iret
rorl
nop
mov
xchg
addb
dec
push
add
nop
xchg
and
data16
xorl
pop
pmaxsw
sarl
mov
xchg
cmp
addr16
pop
add
comiss
lahf
jb
fistps
roll
and
ret
mov
add
out
clc
stos
pop
pop
insb
inc
addr16
add
cmpsb
xor
lret
xor
xchg
gs
fdivl
negl
add
jle
push
dec
mov
pop
and
fwait
data16
rcrb
inc
lcall
pop
test
dec
inc
lods
enter
inc
in
fs
aas
sub
lret
push
aam
enter
je
rol
in
pop
cmp
addr16
xchg
jo
mov
and
add
cmp
mov
nop
jo
add
push
inc
cmp
mov
xor
dec
adc
xchg
test
pop
iret
push
in
ja
inc
sbb
and
es
pop
cwtl
mov
jns
dec
out
inc
push
sbb
popf
into
ret
shl
lcall
mov
cmp
xor
aas
scas
jae
dec
in
scas
dec
pop
popf
pop
cmp
sbb
in
lahf
jp
fsubl
fdivrl
cmp
js
nop
sbb
add
scas
dec
mov
inc
cmp
push
push
cmc
iret
pop
dec
jne
inc
sbb
repz
mov
cmc
cmpsl
or
pushf
inc
mov
cwtl
cmpsb
or
ljmp
jae
ljmp
fwait
dec
sub
dec
mov
rclb
pop
iret
xor
cli
mov
pushf
cmp
add
jae
adc
jge
or
jae
dec
cwtl
or
cwtl
out
add
les
cmp
je
shlb
xorb
push
fmuls
fcomps
in
push
sub
mov
fcompl
clc
popa
lods
ficompl
add
dec
jge
adc
lock
out
push
ja
dec
pusha
sub
jb
xor
icebp
lods
mov
mov
test
das
mov
mov
out
xchg
pop
mov
jle
jmp
out
subb
inc
jecxz
dec
pop
mov
fisubrs
xchg
cmp
or
fnstsw
js
imul
cmc
nop
dec
or
sub
mov
sub
dec
in
cmp
sbb
int
sbb
addr16
sbb
data16
mull
xor
enter
or
leave
pop
cmp
jmp
lods
popf
fmull
jbe
xor
aam
xchg
pusha
pop
jp
push
jl
ficompl
mov
jbe
and
xchg
cmc
mov
lahf
inc
jae
loop
mov
outsl
outsl
pop
mov
inc
in
mov
sbb
mov
imulb
scas
fbld
sbb
cmp
push
or
aas
enter
roll
out
sub
int3
stc
fdiv
call
mov
fiadds
push
fwait
inc
mov
es
loopne
sbb
mov
mov
je
cli
mov
loop
xor
push
add
xchg
mov
xchg
xor
aam
adc
or
mov
add
fisubs
xor
mov
sub
pop
out
mov
movsb
cmp
jmp
cmp
sahf
iret
ja
mov
icebp
jle
sbb
cmp
mov
fsubrs
movq
stos
out
aam
cwtl
inc
push
mov
lock
add
xchg
adc
inc
in
sbb
xor
inc
sbb
test
mull
dec
jbe
movsl
enter
xor
xchg
inc
pop
in
andl
aad
mul
adc
repnz
jnp
cmpsb
dec
icebp
fstl
add
cs
test
dec
loope
or
testl
aam
bnd
or
dec
mov
test
dec
out
pop
rcll
push
and
out
pushf
testb
mov
cmp
test
mov
je
dec
sbb
xlat
jle
int3
push
jl
inc
out
pop
mov
gs
dec
jge
cld
pop
int3
adc
pusha
xchg
aad
pop
outsb
jnp
fs
inc
push
cmp
dec
ljmp
jb
xchg
adc
call
stos
pushf
fdiv
rolb
mov
es
and
lock
push
inc
xor
dec
daa
mov
loope
pop
int
das
out
push
shr
ret
xchg
repz
std
clc
push
lea
lods
xor
testl
inc
cs
mov
test
mov
and
test
jo
in
insl
repnz
cmp
push
push
arpl
fstpt
push
jb
shl
jae
cli
jg
out
out
sarb
bound
sbb
leave
es
lea
std
push
mov
sahf
push
or
lods
adc
mov
cmpsb
inc
mov
cmpsl
xchg
push
call
stc
repnz
repz
fnstcw
and
xor
or
push
jb
dec
out
sub
xchg
add
inc
rcll
add
mov
notl
lret
sbb
call
cmp
aas
adc
adc
jl
cmp
jecxz
dec
cmp
sub
popa
or
loopne
ret
mov
xor
scas
out
add
mov
jne
icebp
cmc
mov
pop
andl
xor
xchg
push
xchg
inc
xchg
loopne
int
test
adc
mov
or
sub
iret
mov
cmc
adc
outsl
std
mov
lcall
mov
addr16
jno
xor
mov
out
test
daa
ror
inc
bound
push
mov
icebp
cmpsb
sbb
push
data16
mov
dec
inc
repz
cmp
les
cmp
mov
jmp
imul
or
repz
rcrl
jecxz
jb
jmp
mov
daa
outsl
jecxz
xchg
nop
rcll
jl
comiss
enter
pusha
push
pop
mov
xor
rcll
data16
push
mov
dec
and
arpl
test
xor
aad
imul
iret
or
mov
pop
insl
es
push
mov
and
cmp
insl
bound
cmovle
mov
leave
out
mov
mov
xor
and
sub
pop
std
dec
mov
hlt
dec
ret
mov
mov
xor
cmp
or
rol
mov
stc
test
rclb
rclb
je,pt
adc
mov
scas
lea
push
push
lret
fisubrs
clc
scas
mov
test
test
push
mov
cmpsl
mov
mov
mov
sbb
mov
jno
dec
jb
rcrl
and
cmc
repnz
push
mov
jb
xchg
icebp
pop
xchg
push
mov
sbb
sbb
popa
jge
xor
cmp
lods
or
test
mov
ss
lcall
ljmp
mov
mov
adcb
sbb
icebp
aad
lock
sbb
mov
loope
dec
stos
sti
out
hlt
aaa
hlt
insb
dec
lret
scas
insb
iret
xor
cmp
jo
test
sbb
lret
jne
ret
repz
push
insl
sarb
lcall
mov
pop
adc
mov
inc
or
pop
mov
xor
jge
pop
pop
adc
pushf
pop
pop
inc
add
sub
jmp
test
cmp
stos
jae
nop
fldcw
jo
adc
insl
xor
loope
test
addr16
sti
mov
dec
or
in
lret
pushf
addr16
adc
jg
ret
sbb
inc
mov
aad
push
push
ja
lret
dec
push
dec
mov
stc
adc
jns
inc
fdivr
add
pop
test
and
aad
cmp
push
cmp
shrb
push
pop
mov
mov
sarb
ljmp
out
push
mov
bound
ljmp
outsb
pop
mov
out
popa
orb
stos
cmpl
int3
je
cmp
in
adc
cmpl
stos
aaa
insl
scas
xchg
adc
adc
lds
mov
jl
subb
rorb
outsl
sahf
adc
jne
fs
pop
jg
sti
push
mul
stos
imul
outsb
jl
bound
cmp
imul
inc
pop
mov
sub
pop
and
xor
mov
ss
sbbl
adc
insb
addr16
push
sbb
scas
dec
mov
repnz
xor
into
js
add
cmp
mov
lds
jge
push
sahf
dec
inc
add
mov
addb
ficomps
push
sbb
jbe
ffree
lea
jp
add
or
scas
push
mov
jmp
cs
ficoml
mov
arpl
outsl
jbe
fstpt
mov
add
cld
rolb
stc
aam
push
ret
mulb
pop
jp
adc
in
mov
lcall
inc
push
push
mov
pop
mov
mov
push
cmpsl
or
loope
cwtl
push
inc
fs
adc
out
cld
xchg
flds
lods
int3
in
aaa
in
pusha
lods
mov
jns
mov
into
imull
and
dec
jg
and
popa
pop
mov
cmp
lret
adc
fcoms
cli
movsb
jne
aas
or
pop
xchg
fldcw
out
jmp
mov
pop
and
hlt
sti
push
dec
sahf
sbb
pop
rorl
repz
dec
xchg
loop
mov
jl
xchg
xchg
in
mov
mov
inc
cmp
out
ds
stos
pop
movsl
sbb
fnstenv
outsb
xchg
sub
or
outsl
jbe
subb
pop
pop
lret
and
and
mov
shlb
cwtl
pushf
xchg
add
pop
mov
js
ss
xchg
mov
imul
notb
cmpsl
test
pop
enter
ss
movsl
fwait
xor
push
and
jb
hlt
push
aaa
stos
pusha
mov
add
notb
shl
pop
sbb
fistpll
int
mov
or
fists
lock
mulb
inc
adc
imul
mov
jge
hlt
stc
adc
popa
xorl
cltd
xchg
mov
mov
sbb
pop
fiaddl
jmp
mov
mov
xor
push
xchg
adc
or
movsl
inc
dec
adc
imul
inc
mov
lods
cmp
jmp
popf
repnz
cmp
fsqrt
jns
lcall
push
or
int3
insl
pop
insl
or
mov
stos
fldln2
xchg
cwtl
into
push
sbb
ret
shl
mov
imul
lcall
loop
je
dec
movsl
icebp
cmpl
stos
push
cmp
lods
std
jge
and
in
xchg
pop
and
mov
dec
pop
das
dec
sbb
cmpsb
out
cmc
pop
cmpsb
xchg
clc
inc
or
into
rcll
jnp
jge
cmp
test
or
jle
jae
push
pop
fucom
in
cmpsb
xchg
xchg
dec
cmp
jge
leave
xchg
in
into
pop
lea
xor
cmpsl
inc
sti
aam
push
les
adc
out
xchg
dec
imul
cld
pop
leave
inc
adcl
ljmp
mov
mov
or
cmp
pop
mov
xchg
hlt
mov
dec
lret
mov
jp
sub
sub
or
cwtl
iret
push
shll
add
jbe
icebp
lcall
xchg
imul
arpl
cld
dec
xchg
sbb
add
outsb
cmp
sahf
xor
and
mov
push
pop
mov
fldcw
sub
xchg
and
mov
sub
cmpsb
jecxz
insl
dec
push
ja
les
or
pop
hlt
push
loopne
scas
aas
push
aad
mov
inc
cmpsl
mov
clc
stos
push
daa
aaa
and
jle
cmpsb
inc
loopne
xlat
sbb
ret
mov
mov
sti
sub
dec
pop
arpl
pop
jo
sub
outsb
sub
scas
mov
negb
ss
loope
mov
mov
test
cmpsb
popf
in
mov
and
xchg
add
icebp
lret
sarb
repnz
stos
lcall
cltd
movsl
iret
stos
adc
or
fisttpl
pop
sub
hlt
and
or
pop
shll
mov
fs
dec
pop
clc
test
or
test
add
jns
dec
sbb
imul
cmpsl
xchg
and
stos
mov
imul
push
aad
les
add
sbb
nop
mov
insb
mov
sbb
push
dec
es
mov
and
lods
jle
add
sbb
xchg
cmp
jo
std
das
pop
pop
push
lahf
fwait
movsb
xchg
insl
std
xlat
pushf
mov
lcall
mov
subb
cmc
gs
xlat
or
cs
jne
or
stc
stc
icebp
jp
xor
loopne
xor
icebp
or
cs
data16
xchg
dec
pusha
aam
lahf
sub
jmp
dec
std
push
popa
adc
mov
xor
sbb
aas
dec
mov
out
adc
pop
scas
xchg
xchg
pushf
inc
sub
es
leave
fwait
mov
test
mov
pop
pop
rorb
mov
and
divb
xor
adc
xor
int3
cmp
cltd
mov
jne
mov
adc
mov
out
test
imul
icebp
je
mov
jns
fiadds
xor
sbb
mov
xchg
loope
cmp
orl
stos
cld
mov
cmp
mov
pop
cmp
push
mov
std
adc
cmc
cld
aaa
mov
add
test
outsl
into
sbbl
pop
call
cmp
add
jno
in
out
sbb
add
mov
popf
dec
in
sub
shl
mov
push
lahf
int3
test
test
jp
pop
int3
lock
adc
mov
hlt
fs
ss
fsubp
xchg
shlb
js
inc
lret
lahf
mov
pop
mov
pop
shll
and
ss
iret
mov
mov
mov
or
sarl
lods
inc
jmp
data16
fs
jb
in
dec
out
sub
call
pop
lock
out
mov
cmpl
xchg
in
add
cwtl
jbe
cmp
mov
or
lcall
cwtl
inc
push
pop
addr16
xchg
mov
pusha
add
mov
mov
outsb
adc
sti
pop
dec
in
dec
jb
sbb
push
test
sarl
xchg
lcall
cmc
in
xlat
test
inc
mov
sahf
cmp
dec
adc
xchg
repz
or
or
loop
pop
mov
jmp
adc
inc
nop
push
mov
mov
cli
mov
push
insb
add
test
movsb
mov
xchg
flds
sbb
jle
in
jnp
pop
int3
push
movsl
xchg
xchg
aas
mov
inc
setae
lcall
negl
push
clc
sbbb
fsubrp
or
fucomi
push
xor
das
jno
aad
inc
call
jae
push
mov
mov
jge
push
jb
inc
pop
inc
ja
mov
rclb
stos
fistl
popa
fsubrs
test
out
dec
test
lock
dec
pop
add
cmp
and
lods
mov
cmpsb
add
cmc
jno
push
fnstenv
fs
mov
mov
mov
adc
loopne
adcb
mov
sub
cmp
inc
pop
push
fsubl
ret
push
addr16
xor
ret
pop
sar
adc
xorl
push
xlat
or
hlt
inc
call
int3
xchg
enter
aas
add
fwait
out
aad
lods
inc
imul
adcl
fisubl
or
dec
jno
adc
or
lcall
push
xchg
fsubl
sub
cmc
jl
push
popf
inc
call
sti
repz
xor
dec
adc
xor
dec
cmp
jne
outsl
ljmp
and
pop
add
call
sbb
mov
out
je
hlt
out
stos
sub
inc
push
dec
and
lcall
xchg
fisttps
flds
leave
adc
test
add
push
iret
mov
xchg
fs
fildl
push
aam
test
sahf
push
inc
shr
es
std
xchg
call
pop
mov
mov
pop
mov
sub
stos
push
data16
xchg
and
stc
cld
and
dec
in
fadd
add
xchg
sti
xor
test
leave
sub
mov
xor
out
imul
jo
cmpsl
add
sub
mov
adc
popf
add
mov
cltd
cmpsb
sub
xor
adc
lahf
lret
mov
xlat
mov
jmp
aaa
inc
nop
mov
das
mov
add
xchg
add
mov
pusha
mov
mov
in
jno
sbb
jg
lods
pop
loopne
xor
enter
cmpsl
adc
les
lahf
les
and
cmp
pop
aaa
arpl
add
inc
mov
fsubl
test
into
and
pop
les
int3
repz
mov
cmpsb
loopne
pushf
push
leave
inc
lods
gs
mov
mov
and
xor
hlt
xor
or
xor
in
popf
in
mov
cld
adcb
xchg
xchg
inc
push
inc
test
pusha
push
jmp
ss
repnz
mov
sysret
rcll
cmp
fcompl
pop
push
add
aas
imulb
in
mov
in
fdiv
and
xchg
into
les
inc
iret
sahf
sbb
xor
clc
arpl
xchg
pop
sti
int
or
lods
stos
mov
orl
mov
xor
enter
nopl
ljmp
ret
fldcw
repz
popf
clc
idivb
out
add
mov
mov
sub
jb
fldt
out
pop
xchg
inc
add
sbb
mov
loope
loope
add
les
lret
mov
pop
insl
xchg
shlb
nop
xor
pop
xchg
ficoml
mov
inc
jb
shrl
sub
mov
lea
push
mov
rorb
es
insb
push
mov
icebp
and
jmp
aaa
enter
inc
dec
fsubrl
cwtl
addb
xor
lretw
xlat
sub
mov
insl
push
jle
adcl
mov
jmp
mov
test
test
loope
mov
test
xchg
add
lods
xor
aad
or
cmp
iret
xchg
push
mov
dec
jns
loope
pop
or
sbb
in
pusha
int3
int3
and
xor
mov
test
fmul
add
xchg
xor
pop
xchg
or
repnz
jmp
push
jns
fstps
adc
enter
mov
cltd
cmpsl
or
pop
popf
mov
or
stos
das
test
mov
in
outsl
jno
mov
jb
xor
shll
inc
mov
lret
dec
or
in
sub
pop
sub
sbbl
push
idivl
lahf
les
add
mov
into
sbb
push
mov
int3
add
inc
stos
shrb
pusha
sbb
out
jecxz
leave
rorb
cltd
pop
stos
adc
cmp
test
jae
mov
pop
push
je
mov
pop
std
js
addr16
lds
mov
outsl
sub
add
popaw
add
mov
xor
hlt
mov
test
mov
repnz
stos
inc
dec
mov
push
pusha
dec
cmovo
icebp
mov
dec
aad
pusha
adcl
xor
orb
mov
enter
out
add
pusha
sarl
pop
or
in
iret
popa
sarl
ljmp
shll
push
pop
sbbl
pusha
loop
mov
lret
sbb
insb
sti
arpl
lea
cmpsb
sub
cmc
inc
dec
sub
push
or
test
cmp
sub
mov
adc
lret
and
leave
and
xchg
xor
inc
cld
andl
xlat
or
stc
mov
stos
and
pop
iret
ret
fmuls
push
fldl
lret
jb
mov
test
ds
mov
mov
push
xchg
pop
ljmp
jl
or
popa
mov
xor
repnz
out
xorb
dec
pop
jmp
ds
and
mov
jmp
lods
mov
dec
pushf
out
mov
popf
cmp
loop
fwait
outsl
adc
jnp
in
dec
test
enter
cmp
dec
ficoml
cmpl
jle
cmc
pushf
mov
mov
adcb
mov
pop
dec
mov
pop
jmp
out
adc
xchg
sbb
dec
jbe
mov
fisttpl
inc
outsl
jp
cmc
cld
leave
xchg
jp
daa
add
into
lret
roll
or
sti
mov
pop
repz
pop
mov
into
dec
xor
mov
sbb
cmp
mov
cmpsl
sbb
sub
pop
sub
adc
fptan
lcall
lret
cmp
adc
clc
ss
and
push
xor
lea
lods
in
test
sbb
jle
inc
popa
insb
ret
mov
mov
arpl
repz
in
push
or
sub
mov
mov
mov
ret
mov
repz
push
push
mov
insl
pop
lods
lods
nop
xor
xchg
lock
xchg
cmp
jb
das
lock
sub
mov
loope
jp
push
xchg
push
inc
rcl
xor
lret
mov
in
xor
lcall
xor
mov
pop
movsl
mov
mov
and
fwait
inc
out
pushf
dec
jge
cmpb
out
jnp
sub
mull
call
fwait
cmp
xchg
mov
and
and
or
jb
lds
lods
cmp
push
aaa
xor
aas
mov
popa
shrb
pusha
dec
rcll
adc
sub
std
lahf
cmp
or
add
ds
stos
add
pop
icebp
sarl
adc
shl
loop
pop
fidivs
pushf
jb
jb
int3
lret
stos
dec
scas
loopne
flds
add
xor
mov
pop
xchg
cmp
sub
and
lds
dec
outsl
inc
cmpsl
call
xchg
test
sub
stos
aaa
mov
xor
inc
cmp
scas
out
jns
and
clc
jge
test
sub
and
sub
or
adc
int
pop
into
rclb
cmp
mov
cmp
pop
cmp
outsb
and
push
and
pcmpgtd
pavgw
push
jne
dec
mov
and
sub
test
sbb
push
mov
enter
mov
loop
and
xor
lret
aas
bound
jns
jle
xchg
xchg
std
jge
xchg
sbb
mov
adc
pop
popf
icebp
aad
xchg
into
push
lock
stos
loop
out
cmp
pop
mov
fmuls
cmpsb
fildll
add
jmp
or
repnz
ljmp
leave
les
mov
push
dec
inc
cmp
daa
daa
mov
xor
xchg
daa
jmp
shll
xor
push
das
daa
out
jb
mov
insl
push
xchg
pop
shl
lret
push
lret
call
mov
gs
jge
push
mov
lret
divb
sub
mov
add
lret
mov
test
aaa
mov
dec
subl
stc
insb
mov
jns
dec
mov
xorl
mov
pop
mov
and
lea
cmp
gs
pop
sub
test
jg
push
jmp
gs
cs
or
push
pop
arpl
divb
out
xchg
out
xchg
into
jne
xchg
pop
lods
mov
and
addr16
mov
insl
or
sub
lods
fbld
lcall
std
inc
dec
jmp
dec
pop
push
jae
call
movsl
loop
adc
repnz
test
add
repz
mov
in
sub
enter
pop
mov
dec
lds
ss
push
bound
scas
dec
xchg
sahf
mov
and
add
jl
xor
sbb
sub
mov
nop
ds
dec
sub
inc
fwait
int3
nop
ja
pop
mov
push
sbb
enter
mov
pop
outsl
xchg
jno
fsub
rcrl
xor
jne
xchg
sarb
hlt
lcall
mov
adc
sub
or
je
test
cmp
xor
out
cli
or
adc
mov
cltd
repnz
enter
sub
adc
mov
mov
adc
fmuls
int3
dec
xor
jb
mov
or
jbe
and
sbb
or
or
dec
mov
leave
jmp
lods
mov
sbbb
and
jne
ja
xor
sub
cmp
xor
sbbb
push
lods
mov
fldt
and
cmpb
je
mov
jmp
xrelease
sbb
ds
xchg
adc
in
inc
inc
es
xchg
dec
mov
test
shlb
inc
mov
jge
jg
or
outsl
ds
in
popa
dec
out
dec
sub
sub
push
in
sbb
bound
andb
adc
dec
fcompl
sub
aam
fisttpl
stc
icebp
fucomip
je
sbb
mov
mov
mov
add
dec
push
rorb
mov
mov
and
fbstp
push
repz
push
jnp
in
jo
fnstcw
popf
fwait
push
stos
cli
inc
and
mov
pushf
xchg
push
mov
mov
testl
xchg
add
fists
xchg
cmp
jp
and
inc
pop
invd
fdivrs
cs
stc
int
jl
enter
fwait
loope
imul
lahf
or
pop
test
and
dec
int3
xchg
into
or
adc
jns
in
xchg
xchg
insl
ss
pop
sbb
cmp
pop
inc
pushf
mov
pop
mov
mov
adc
cmpsb
adc
push
adc
cmp
push
repz
add
pop
leave
je
stos
fwait
dec
ja
sub
sub
mov
add
mov
sbb
or
popa
or
mov
adc
push
test
inc
imulb
inc
jo
cld
xor
inc
or
cltd
mov
hlt
xchg
adc
sub
out
in
mov
or
mov
dec
lods
aaa
mov
ljmp
aad
lret
xlat
and
ljmp
mov
pusha
jns
adc
sub
add
gs
lret
jo
jbe
mov
in
mov
fwait
cmpsl
sbb
jge
lahf
inc
stos
cmp
mov
xchg
nop
jns
sub
out
rcl
sbb
and
fsub
jecxz
add
lock
mov
cmp
xchg
neg
cmp
testb
fdivrl
xchg
push
sti
pop
ss
jne
or
sub
mov
call
xchg
lahf
sbb
lock
and
adc
jbe
pop
fs
filds
jae
fwait
pop
das
cmpsb
aam
lcall
pop
dec
enter
movsl
iret
jns
or
jecxz
sub
adc
sub
negb
xor
int3
popf
test
icebp
ret
data16
dec
ss
jns
jmp
mov
push
leave
mov
xchg
mov
cmp
loope
and
lods
pop
dec
lods
xor
jge
cmp
cs
lods
arpl
sub
out
stos
shlb
mov
pop
js
jle
std
movsb
incb
xchg
dec
inc
xchg
cmp
and
cwtl
testb
lods
gs
jg
xchg
int
ja
insb
aas
pop
adc
out
adc
call
mov
sub
add
sub
mov
adc
fstpt
jg
lods
mull
add
xchg
scas
ret
clc
divb
cmp
push
leave
repz
push
adc
or
ret
aas
js
inc
mov
aas
sub
push
mov
aaa
test
push
and
xchg
mov
call
cmp
pushf
add
or
sub
add
sub
adc
outsl
xor
loope
cmp
shrb
jb
pop
adc
pop
shrb
jno
ror
cmpsl
push
or
lea
into
xchg
shrb
mov
and
xor
pop
pusha
or
sub
cmp
mov
iret
mov
jmp
lret
mov
imul
cmpsl
das
data16
inc
xlat
lea
inc
add
jle
lock
addr16
mov
fwait
je
xchg
or
sub
pop
addb
paddusb
aaa
xchg
ret
cmp
cwtl
call
mov
xchg
clc
mov
ljmp
adc
pop
das
pop
xor
pop
scas
lcall
mov
loop
sub
mov
or
ljmp
push
push
sbb
popa
inc
jno
inc
mov
scas
and
out
mov
sub
sbb
pusha
shlb
popf
in
lea
cmpsl
mov
insb
push
sbb
jle
adc
adc
mov
mov
leave
and
fistl
scas
fsubrs
addl
mov
in
outsb
mov
mov
cmp
mov
aas
es
mov
xor
sbb
mov
les
ficoml
mov
ss
pop
cwtl
mov
mov
push
jb
scas
jns
and
clc
enter
push
mov
mov
sbb
in
cmp
nop/reserved
ljmp
inc
lret
gs
adc
out
pop
jecxz
out
mov
std
jo
das
mov
jecxz
mov
dec
test
nop
enter
pop
inc
inc
fwait
inc
inc
pop
inc
cltd
cmpsb
pop
movsl
test
fs
mov
scas
and
std
push
enter
int3
and
push
pop
adc
fists
stc
stos
cmc
cmc
jae
repz
int3
out
push
adc
dec
fnstcw
and
loopne
fistpl
pop
inc
fbstp
xor
and
jns
movsb
aam
shrd
movb
mov
cmp
cmp
enter
arpl
fs
jecxz
gs
add
and
mov
mov
push
cmp
mov
lret
sub
movsl
cmpsl
mov
and
frstor
pop
adc
jge
pop
sarb
jae
nop
aam
mov
sub
cs
in
cmpsl
jge
xchg
mov
stos
adc
sbb
push
pushf
fimull
xorl
or
clc
mov
sub
ss
test
jb
cmp
push
xor
cli
or
imul
mov
push
dec
fsub
inc
popa
push
in
lods
cs
mov
addr16
neg
pop
mov
movsl
test
gs
sub
add
dec
xchg
mov
loope
in
shrb
inc
movsb
adc
push
dec
pop
out
sbb
inc
adc
sahf
mov
xor
push
repz
outsb
sbb
mov
jg
mov
cwtl
xor
notb
sub
je
push
aad
mov
add
mov
xor
fadds
push
pop
push
cmp
in
pop
loope
sub
and
sbb
push
push
sahf
imul
outsl
or
sub
xchg
cmp
lret
mov
jp
stc
cmpsb
sub
iret
mov
mov
push
addr16
nop
or
dec
jge
xchg
xchg
sbb
dec
add
jmp
cli
push
pop
out
jo
and
out
rcl
xchg
sbb
fcmove
mov
fidivl
test
lret
sbb
pushf
es
out
pushf
aas
in
sub
out
inc
lret
mov
xchg
imul
mov
add
or
js
xchg
in
movsb
jp
mov
out
mov
ret
rolb
and
into
fstps
inc
roll
enter
sahf
mov
scas
or
push
iret
jno
insb
loopne
mov
dec
mov
je
sub
dec
repnz
lea
popa
outsl
jmp
jp
bound
in
movnti
dec
push
loope
or
adc
pop
sub
push
inc
lock
scas
lock
lods
ljmp
jae
daa
jmp
sbb
push
adc
aas
out
stos
les
int
cmp
into
rorb
stc
xlat
mov
push
cmp
fs
mov
sub
mov
flds
jmp
inc
nop
add
pushf
js
push
imul
pop
mov
add
insl
nop
loopne
stc
leave
fwait
test
repz
adc
sbb
pop
mov
clc
pop
les
adc
dec
lods
jcxz
adc
cmp
es
lods
mov
mov
mov
jle
sbb
mov
mov
push
shll
mov
push
repnz
test
pop
cltd
jb
fimull
and
push
stos
pop
pop
aas
mov
pop
xchg
and
ret
into
ljmp
loop
push
mov
sbb
mov
out
jo
sub
fcomi
fldt
daa
mov
leave
and
xor
in
gs
iret
push
jp
fsubs
mov
push
push
cmp
jle
loop
xchg
mov
iret
jb
fmuls
out
add
xchg
ljmp
mov
dec
push
ficompl
out
mov
pop
arpl
push
mov
mov
mov
xchg
add
imul
cmp
sub
and
lret
loopne
fwait
aam
in
out
jmp
jns
dec
jge
push
dec
or
imul
cld
insb
mov
call
cmpsl
popf
pushf
lods
cmp
inc
repz
inc
cmpsb
dec
adc
test
fldcw
test
adc
jns
adc
or
and
sub
mul
ret
ljmp
dec
dec
ljmp
fisubs
xchg
pop
sarb
out
xchg
xor
cmpsb
cmp
dec
inc
xchg
movsl
leave
cltd
mov
jp
repnz
jge
pop
cmp
mov
push
cmp
jmp
sbb
lret
adc
push
mov
test
mov
jae
mov
sub
or
and
sbb
jg
in
fadd
std
cld
scas
lock
popf
jns
sub
ret
mov
mov
div
mov
ret
adc
xchg
pushf
jmp
mov
mov
jnp
and
pop
lock
cmp
cmp
jb
test
jmp
and
mov
dec
fs
sbb
test
sub
sbb
xor
inc
lods
mov
dec
adc
outsb
rolb
xor
call
add
sub
sub
orb
lock
sbb
pop
sub
adcl
in
add
leave
add
fcompl
in
xchg
jbe
clc
mov
push
icebp
emms
dec
pop
repz
mov
mov
lret
mov
inc
movsl
call
clc
pop
inc
inc
mov
jb
clc
in
mov
mov
xlat
or
adc
sub
clc
cmc
xchg
int
mov
stos
xchg
out
icebp
adcb
aad
in
cmp
lods
ljmp
push
push
pop
gs
xlat
pop
dec
das
dec
and
outsb
mov
jl
or
mov
or
and
jp
out
dec
sbb
mov
jmp
std
enter
ljmp
jns
adc
inc
fwait
dec
add
cwtl
out
subb
aaa
sub
aam
push
mov
ret
add
adc
xor
ret
fdivs
loope
icebp
fbld
mov
jnp
adc
outsb
xchg
popf
xchg
into
or
sbb
lds
and
dec
and
xor
imul
mov
push
adc
push
test
mov
mov
out
adc
adcb
jns
pop
fcompl
sub
dec
jle
repnz
pusha
jns
dec
mov
cmp
xchg
push
push
jp
dec
pop
adc
sub
push
fadds
jg
sbb
rcl
xchg
mov
shlb
je
repnz
std
mov
popa
push
xchg
cmp
mulb
aam
test
loop
mov
adc
js
pushf
out
insb
in
lock
jae
scas
mov
out
pop
xor
inc
std
jle
testb
movsl
insl
xchg
mov
daa
sub
mov
daa
adc
aas
sub
xchg
jge
pushf
cmpl
lds
and
sbbb
sarl
cld
shrb
imul
in
dec
divl
adc
call
mov
and
jg
and
inc
mov
fmull
sahf
pop
popf
cmpsl
fdivr
outsb
cltd
in
jmp
push
and
jg
test
int3
inc
dec
fs
inc
lret
loope
and
imulb
push
jge
lods
aaa
sub
dec
pushf
les
sbb
test
sbb
mov
sbb
lret
lret
dec
fidivs
push
inc
and
nop
sbb
or
pop
lds
push
and
nop
sbb
jl
sub
mov
fnstsw
mov
repz
ds
xchg
sub
jns
or
bound
into
jbe
add
repnz
xchg
fldcw
jno
xchg
rcrb
pop
push
rclb
orb
incb
dec
xchg
add
in
jge
cmp
adc
adc
dec
sbb
mov
add
sub
mov
fdiv
mov
adc
push
rol
cwtl
sbb
and
insl
inc
mov
repz
ja
or
sbb
nop
rclb
xor
inc
push
pop
movsb
fists
das
dec
in
push
mul
movsb
or
sub
push
jl
or
xchg
dec
into
movsb
dec
lret
imul
sub
sbb
pop
add
mov
loopne
daa
pop
lods
adc
or
or
sub
test
mov
lods
popf
nop
and
ficompl
aaa
insl
sbb
add
daa
sbb
pop
mov
dec
sub
dec
jb
or
ljmp
movl
cli
clc
arpl
std
cld
or
jns
xor
dec
mov
jno
xor
cwtl
mov
movsb
fisubrs
mov
sbb
lahf
mov
out
pop
stos
jno
xor
or
and
leave
hlt
push
ljmp
xor
pop
call
xor
repz
les
imul
push
and
cld
inc
popf
arpl
sbb
jg
and
inc
adc
repnz
xchg
lcall
adc
pop
sbb
clc
popf
ja
cmp
pop
jmp
cs
mov
jmp
cmpsb
data16
add
in
pushf
clc
icebp
int3
aam
pop
inc
inc
jp
sbb
pop
fiadds
fstp
and
jge
cmp
aaa
out
dec
sysenter
pop
leave
inc
mov
into
pushf
xchg
jo
mov
fs
loop
mov
dec
movsl
dec
popf
pop
jno
cwtl
fnstsw
pop
mov
ja
jne
sahf
das
mov
xor
loope
out
sub
fistl
cmp
roll
data16
mov
in
shll
enter
in
insl
mov
subl
shll
push
fldl
adc
xor
gs
push
dec
or
imul
fsts
adc
add
cs
xchg
mov
inc
clc
add
push
pop
push
leave
in
mov
push
sbb
nop
bound
jp
inc
mov
fstl
xchg
dec
shll
jnp
fdivrl
out
insl
mov
add
outsl
mov
add
jmp
lods
imul
jb
data16
mov
push
movsb
mov
call
mov
sbb
jb
test
sbb
push
out
fistps
pop
mov
adc
pop
mov
dec
flds
sbb
dec
dec
add
sub
nop
shrl
leave
jmp
dec
mov
xchg
jo
pop
pop
mov
and
in
fists
push
ljmp
pop
cs
mov
test
dec
scas
mov
pop
adc
push
repz
cmpl
shll
stos
jb
jo
insb
sahf
add
sbb
xor
in
and
int
xor
jne
pop
pop
jle
xchg
and
imul
xchg
test
pop
ret
xor
lock
dec
cwtl
movsb
push
popa
rclb
mov
cmpsl
out
daa
mov
mov
xor
loop
add
pusha
push
sbb
sub
mov
stc
inc
push
or
push
sbb
lock
adc
pop
cmp
xchg
push
adc
jmp
cmpsl
sbb
stos
xchg
fsubr
add
mov
lret
jg
sti
test
mov
imul
popf
insl
mov
push
loop
mov
aas
dec
pop
lods
in
arpl
jmp
mov
or
sub
dec
inc
adc
jns
or
lock
cmp
sub
adc
inc
push
sbb
out
adc
add
or
daa
in
add
insl
fcomps
ds
xchg
lret
adcl
sub
push
jne
ss
dec
pushf
xchg
sbb
lcall
stos
dec
in
mov
std
cmp
data16
popl
push
sub
xchg
nop
mov
xchg
mov
outsb
or
scas
lds
jg
cmp
xchg
xchg
xor
js
mov
add
fildl
std
popf
jae
mov
dec
add
add
cmpsl
push
js
loopne
push
xorb
cmpsl
sub
insb
push
adcb
and
daa
cmpsl
jle
cmpb
jp
in
push
or
jo
pop
push
sti
xlat
in
inc
bound
pop
dec
fbld
xor
sahf
loop
pusha
lea
cmc
mov
inc
lods
push
cmp
imul
dec
xchg
push
inc
and
push
hlt
or
in
mov
or
enter
pop
out
cs
mov
notl
pop
lods
mov
stos
fs
jg
adc
push
lcall
inc
sahf
jne
adc
cmp
lahf
std
hlt
jmp
cmp
leave
pushf
out
xor
dec
push
out
movsb
xchg
xor
dec
adc
nop
in
rcrl
sub
fimull
in
loope
xor
fnstsw
inc
shr
mov
pop
pusha
mov
sub
cwtl
std
inc
nop
int3
adc
leave
mov
xor
call
pusha
sub
scas
dec
sub
jbe
lret
fnstsw
cmp
push
xor
inc
mov
inc
dec
pop
sub
mov
mov
cmpsb
pop
outsb
int3
xorb
pop
push
add
idivl
arpl
cli
push
push
adc
std
xchg
xchg
inc
inc
shll
adc
cltd
jp
arpl
jno
jecxz
adcl
and
movsl
adc
nop
dec
push
lock
out
les
leave
sub
xor
iret
sbb
ja
popa
inc
ss
sbb
ffree
xor
adc
cmp
daa
mov
jb
fisubrs
lret
jg
mov
pop
outsb
sub
xor
adc
int3
cld
out
fdivr
sub
fcomps
repz
sbbb
inc
cmpsl
dec
roll
rolb
or
in
test
test
xor
xor
mov
fnstcw
and
fnstsw
cld
out
outsb
imul
and
inc
cmp
imull
ds
mov
push
js
xor
stc
or
push
mov
sahf
jg
adc
xchg
push
add
mov
testl
sahf
shlb
jp,pt
push
ljmp
stos
sti
cmp
fisttpl
mov
es
or
mov
sahf
imul
sahf
mov
or
nop
adc
dec
xor
or
xor
lock
enter
mov
cmpsl
jmp
lahf
pop
dec
in
xor
nop
lret
xchg
repz
push
xchg
rorl
push
cmp
adc
repnz
jmp
or
out
das
push
cmc
xchg
inc
pop
outsl
inc
gs
jmp
pop
in
lds
dec
repz
adc
adc
lret
ret
or
outsb
adc
pop
in
pop
cmpsb
sbb
das
adc
xor
pop
mov
lcall
pop
or
inc
dec
call
xlat
dec
es
aaa
xor
js
push
stc
aad
shl
les
testl
push
inc
mov
adc
mov
ret
test
push
mov
jle
mov
xchg
xchg
mov
rclb
dec
pop
mov
push
jl
mov
push
jecxz
stos
outsb
add
addr16
push
stos
out
dec
cld
daa
les
decl
mov
jmp
faddp
dec
add
loope
jmp
xchg
cmp
pop
cltd
pop
mov
push
cs
pminub
mov
repnz
mov
mov
popa
stos
dec
aas
sbb
cmpsb
jmp
add
mov
xor
inc
bnd
cld
add
shl
shl
cmp
or
mov
sbbb
loopne
add
fistpl
ret
adc
mov
dec
jmp
in
dec
movsl
gs
lcall
popf
pop
push
xor
add
mov
add
rcr
push
sub
mov
jne
pop
cli
inc
scas
in
rclb
dec
jge
loop
sbb
xor
jae
xchg
int
xchg
ja
in
push
hlt
jecxz
push
imul
fwait
pusha
jecxz,pt
mov
out
pop
aam
inc
cmp
ffreep
frstor
sbb
out
mov
stos
cmp
jge
cmpsb
fisttpll
aas
mov
out
out
jne
out
pop
movsb
sbb
data16
xor
inc
jecxz
jo
shll
fwait
enter
xor
inc
in
jne
mov
pushf
adc
jge
cli
and
lahf
mov
xor
push
cmpsl
shlb
adc
mov
sbb
cmp
fisttpll
add
out
sarb
xor
xor
sbb
or
les
inc
sub
push
mov
lock
inc
sub
or
add
outsl
aam
sbb
or
or
mov
pushf
mov
cld
pushf
aam
arpl
mov
mov
aad
push
out
dec
dec
clc
movsw
mov
jmp
mov
cmp
cltd
adcl
cmp
sub
xor
rclb
push
jns
inc
and
mov
scas
ja
push
addr16
in
sub
addr16
mov
cmp
je
icebp
xor
and
mov
insl
cwtl
sbbb
shlb
push
shlb
dec
ljmp
xor
movsl
int3
mov
sbb
out
stos
jbe
test
xchg
mov
pop
imul
ds
js
push
mov
and
outsb
pop
and
xchg
jno
adc
mov
mov
lea
lahf
jnp
mov
and
and
adc
push
xchg
xor
jecxz
and
popf
ds
ss
movsb
pop
jb
shl
leave
adc
je
dec
mov
sbb
mov
xor
push
dec
push
xchg
jae
push
or
imul
decl
testb
in
in
dec
aam
mov
leave
or
jl
cld
outsl
xlat
sub
lahf
rolb
add
pushf
fcmovne
in
sub
jl
jnp,pt
xor
pop
cmp
data16
mov
xchg
ljmp
das
mov
mov
xor
mov
sahf
in
lods
iret
insl
or
add
xlat
pop
sub
mull
or
xchg
pop
mov
and
pop
ret
imul
inc
aam
sub
and
jae
sbb
mov
pop
test
adc
cld
mov
sahf
loope
cltd
adc
pop
dec
push
push
sub
mov
ja
or
out
popf
sbbb
pusha
clc
add
fsubrs
inc
sub
fdiv
push
stc
divl
stc
xor
inc
test
sbb
sub
mov
fistl
add
xchg
or
pinsrw
lock
mov
adc
sbb
jl
sub
jae
adc
aad
xchg
shrb
pusha
and
mov
add
mov
pop
into
sbb
xor
mov
xchg
out
lcall
lds
jnp
pop
sub
and
loope
ljmp
pop
mov
lahf
shlb
push
scas
dec
arpl
adc
iret
std
mov
lret
fs
pushf
insb
inc
rol
sbb
lret
addr16
cwtl
mov
adc
mov
xchg
or
les
loope
dec
decb
or
sub
loope
pushf
pushf
or
out
lret
insl
and
inc
lea
mov
popa
or
dec
xor
jmp
std
jg
es
xchg
sbb
and
push
sbb
mulb
mov
mov
push
inc
mov
dec
mov
pop
mov
mov
adc
add
rcrb
hlt
outsl
adc
fdivs
fwait
outsl
daa
repnz
sub
mov
lret
sub
lret
sti
call
sti
and
sub
mov
mov
ss
sbb
push
jecxz
or
sub
sub
and
inc
inc
mov
int
imul
lock
cmp
push
testl
xor
cmpsl
rcll
fsubl
and
notb
xchg
fbld
add
lahf
add
addb
aas
ss
mov
lods
mov
xchg
sub
sahf
push
adc
mov
call
xchg
mov
push
test
fwait
cmp
jno
xor
cmc
data16
jbe
ljmp
imul
aas
repz
iret
sub
int3
aam
sub
sub
icebp
add
add
shlb
cmpsb
adc
lds
pop
daa
pop
aas
stc
pusha
stc
mov
pop
jge
shlb
movsb
shll
ds
int
pop
adc
xor
dec
sub
decl
js
enter
cmc
add
inc
leave
mov
dec
inc
rcrb
ss
jae
negl
jb
mov
pop
sub
dec
cmpsb
iret
mov
fisubrl
push
pop
lds
gs
jnp
movsl
sub
fldt
aas
mov
push
mov
data16
rcll
sahf
pop
cld
movsb
ficomps
lds
enter
or
fildll
ficompl
pop
dec
shl
lock
movsl
test
push
out
fidivrs
pop
andb
inc
out
inc
mov
pop
sbb
cmp
sub
imul
movsb
aaa
jmp
gs
add
stos
lods
mov
mov
pop
xchg
fnsave
dec
jne
insb
xor
test
xor
cld
movq
pop
and
fbld
test
std
test
and
scas
repz
subb
icebp
xorl
psrlq
jo
fidivrl
icebp
cli
or
or
jae
pusha
imul
sti
add
cmpsl
call
ljmp
movsl
sub
nop
adc
cmp
push
dec
cmc
inc
clc
xchg
ret
push
testl
cs
push
out
jl
add
scas
hlt
lock
aaa
enter
inc
cltd
test
jns
into
xor
cmp
pop
loopne
pop
fcom
push
clc
xchg
in
mov
jmp
lcall
cmp
jg
mov
or
and
mov
and
lds
mov
mov
xchg
dec
jg
mov
pop
sbb
stos
loope
leave
js
and
in
ud1
jnp
push
xchg
and
andb
sub
aad
pop
xlat
fxtract
sbb
cmp
or
push
dec
push
test
mov
out
push
push
or
cmp
xchg
xchg
int
sbb
push
push
inc
scas
xchg
ret
dec
daa
hlt
sbb
pop
bound
push
in
lds
mov
aam
int3
hlt
shll
lret
nop
repz
leave
ss
xchg
je
lods
push
cmpsl
sbb
lret
clc
data16
stos
inc
sti
xchg
scas
cwtl
xor
mov
mov
mov
fwait
outsl
mov
divb
lret
sbb
mov
push
mov
cli
xchg
cmp
sub
mov
rorb
andb
dec
std
sub
sub
addl
mov
or
fbstp
mov
mov
jmp
inc
add
or
pushl
cltd
adcb
add
push
jg
ja
xorl
lret
push
push
sbb
lods
into
mov
imul
jl
mov
mov
inc
loop
scas
mov
lahf
jo
cmp
mov
int
test
mov
sbb
fcmove
ret
in
clc
arpl
add
icebp
inc
mov
adc
call
pop
push
mov
repnz
outsl
and
mov
ret
mov
lds
mov
test
inc
in
inc
lahf
mov
lds
or
push
inc
call
cltd
nop
imul
and
mov
in
and
movb
shlb
mov
and
test
and
xchg
loope
cs
mov
push
mov
notb
xor
inc
dec
mov
and
jecxz
or
lret
das
mov
cmp
push
xchg
mov
sbb
and
adc
iret
cmp
push
sub
mov
aad
inc
es
dec
add
sbb
xor
gs
dec
xchg
xchg
imull
push
in
xlat
test
cltd
mov
dec
dec
jecxz
rcrb
push
aas
jmp
mov
mov
insb
out
ret
ss
inc
jb
fsubl
jg
xor
jp
enter
data16
sbb
add
adc
mov
mov
js
pop
out
xor
jle
iret
add
aam
cmp
scas
inc
inc
dec
rcrb
xlat
cmpb
or
mov
pop
cmp
out
mov
mov
pop
int
or
icebp
imul
outsb
ljmp
xor
sbb
sub
adc
pop
add
loope
addl
aad
lret
mov
mov
pxor
adc
stos
or
mov
mov
out
push
into
push
mov
hlt
inc
ss
and
loopne
in
daa
cmpsl
mov
das
push
xchg
les
cs
dec
int
popf
test
orl
push
adc
scas
cli
mov
add
subb
add
mov
push
and
iret
das
and
cmp
push
sbb
inc
xchg
sti
inc
xor
xor
xchg
mov
pop
scas
jge
sub
mov
mov
lret
xor
dec
data16
mov
xchg
shrl
repz
repz
sbb
call
xchg
and
aas
test
sbbb
out
cmp
popa
shrl
jo
xor
adc
mov
jp
pop
ret
dec
call
movsl
jne
push
enter
pop
jp
jmp
popf
sti
xchg
cmp
jno
push
or
xchg
pop
cmpsl
les
jl
cwtl
mov
lret
and
push
or
outsb
pop
fldcw
ret
sub
outsb
out
ljmp
pusha
cwtl
push
xchg
dec
sub
cli
mov
bound
sub
add
fsubr
ret
cmp
push
jnp
cltd
sbbb
jns
loope
divl
adc
dec
movl
in
imulb
orl
jl
popf
cld
lods
fwait
inc
cmp
and
lods
xor
sbbb
dec
dec
popa
push
mov
xor
std
inc
out
outsb
dec
pusha
jae
ss
dec
mov
xor
or
lods
lcall
inc
cld
mov
xchg
stos
cmp
pop
lahf
cmc
add
lcall
add
sub
sub
in
and
push
setns
loope
es
jge
gs
or
movsb
addl
lds
push
mov
dec
rcrl
mov
lcall
adc
das
repz
add
add
pop
inc
rol
adc
mov
mov
push
jle
aaa
std
mov
pop
sbb
push
mov
call
call
call
test
mov
aam
add
aad
jp
andb
and
lret
add
popf
loop
pop
dec
inc
mov
push
fsubp
cmc
sub
mov
add
loop
fs
repz
sbbl
aad
enter
int
daa
mov
rcrl
mov
cmp
inc
push
cmp
jmp
lret
clc
cmp
call
es
stc
cmp
call
and
xlat
clc
addb
sub
xchg
xchg
sarl
aaa
shl
repz
test
out
shlb
loope
and
aam
outsl
cmpb
popf
out
mov
ds
in
aam
mov
ss
xor
xor
xchg
pop
imul
xor
jmp
mov
inc
pop
aaa
mov
xchg
xchg
out
loope
pop
mov
pop
pop
aaa
pop
stos
or
lret
mov
xchg
in
sti
cmpsl
xor
or
jne
mov
add
dec
cmp
sub
js
mov
xchg
out
dec
and
movsl
jne
mov
xchg
lds
addb
ret
incl
imul
xor
in
add
std
scas
add
xchg
std
andb
das
mov
xchg
mov
push
dec
xchg
shll
sbb
inc
xor
out
sarb
lods
push
xchg
sbb
not
mov
inc
add
push
push
adc
mov
mov
pop
mov
outsb
mov
dec
daa
daa
loop
mov
push
inc
xor
sub
pop
inc
fmull
addb
std
cmc
jp
gs
mov
push
fsubrs
test
add
mov
mov
inc
and
imul
add
std
daa
inc
inc
lret
gs
mov
xor
in
shll
push
inc
icebp
xchg
jno
test
lahf
or
mov
dec
fisttpl
adc
mov
js
pusha
hlt
adc
gs
loopne
xchg
popa
shl
shlb
xchg
add
cmp
fs
jns
sub
and
sbb
repnz
in
push
adc
dec
les
fsubp
or
arpl
and
addr16
cmp
popf
push
dec
call
addr16
mov
or
lea
ljmp
mov
inc
ds
xor
es
out
cwtl
jne
xor
mov
shrb
dec
add
xor
test
jbe
adc
bound
xrstors
insl
rolb
push
and
xor
mov
mov
mov
add
push
or
dec
mov
sub
jp
jnp
js
imul
sbb
push
in
aaa
int3
xchg
int3
inc
lds
or
stos
jg
jno
test
mov
fwait
jnp
sbb
popf
addl
jl
shr
push
cmc
cmc
ja
ljmp
push
stc
inc
std
sbb
fidivl
mov
mov
jb
mov
movsl
loope
pop
add
sub
push
sub
repnz
mov
fs
imul
lea
xor
or
xor
sbb
int3
cmpsb
data16
loop
or
pop
pop
movsb
fisubl
adc
mov
daa
ljmp
dec
movsb
not
fmul
lahf
mov
inc
mov
mov
packssdw
jno
fimuls
sbb
jne
dec
mov
data16
in
cltd
aam
cld
add
iret
jb
daa
jns
leave
insl
nop
lahf
popf
xor
adc
xchg
xor
movsb
pop
arpl
cltd
xchg
inc
xchg
mov
cli
sbb
sti
mov
push
mov
mov
fildl
or
xchg
inc
inc
and
jp
pop
push
decl
test
jl
test
loope
xor
insb
lret
ljmp
mov
cli
push
test
jo
and
arpl
loope
mov
dec
mov
scas
cmp
out
sbb
push
mov
push
dec
popa
aad
loopne
sub
aam
sbb
sbb
in
in
xchg
xor
xchg
add
sarl
fstl
cmp
icebp
push
and
mov
cmp
bound
fdivrl
xor
push
xchg
int
sub
fwait
add
or
xor
jge
and
jg
std
sub
mov
cmp
cmpsl
sbb
and
test
or
push
cmp
and
fmuls
imul
test
inc
xchg
and
notb
mov
push
fst
mov
out
mov
enter
loope
dec
xchg
test
xchg
mov
jecxz
jns
hlt
aad
adc
dec
dec
fimull
sbbl
jge
sub
mov
or
mov
in
dec
inc
mov
dec
xor
mov
mov
incb
push
loopne
aaa
jmp
mov
mov
pop
iret
outsl
jo
xor
mov
pop
pop
mov
pop
push
daa
jbe
inc
stos
xchg
xchg
push
jo
lods
sub
lcall
lds
loopne
xchg
xchg
and
cmp
dec
mov
jecxz
popf
test
iret
or
shlb
mov
push
inc
dec
cmp
aad
stos
js
dec
adc
xchg
fstps
in
push
sub
cwtl
dec
and
jmp
stc
mov
in
aas
out
xchg
dec
test
jmp
lods
inc
sarl
inc
inc
push
test
xor
jno
pop
push
lea
lret
sub
data16
mov
add
mov
xchg
fsubrl
mov
inc
icebp
sbb
out
in
inc
mov
insb
sub
js
icebp
push
icebp
sub
or
repnz
adc
cmpsl
sub
ret
xchg
inc
and
stos
sbb
in
jbe
fldt
sbb
push
loopne
xor
jmp
repz
lock
cmp
mov
mov
mov
push
and
andb
ds
sub
mov
mov
jo
fld
inc
mov
test
ror
sti
mov
rorb
addr16
sti
fdivrl
fnsave
jb
adc
push
in
call
adc
jecxz
bound
icebp
cmpsb
cmp
push
add
int
dec
fldt
cmp
pop
cmp
xor
cmp
mov
lock
or
pop
movsb
mov
sbb
and
nop
scas
aaa
mov
cmpsl
push
xchg
lods
adc
xchg
mov
imul
cmp
sub
sahf
icebp
xor
dec
std
xchg
jno
out
push
xchg
and
sub
xchg
pop
and
adc
dec
sarb
mov
decb
stc
cmpsb
js
stos
lahf
ficoml
add
sub
mov
fmuls
or
in
movsl
sub
xor
cmp
push
jne
sub
mov
xchg
cmpsl
aas
jp
add
in
ret
sbb
sbb
sahf
stc
dec
mov
xor
pop
xlat
imul
sub
and
cmp
into
fnstcw
and
pop
adc
loope
outsl
ja
arpl
mov
adc
stos
lea
arpl
mov
loope
jno
les
xchg
into
cmp
jl
stc
fistpl
rorb
int
pop
int
sub
call
dec
and
xchg
stos
add
jne
aas
test
pop
xor
jbe
adc
jnp
scas
inc
push
push
pushf
push
pop
dec
data16
test
push
call
mov
iret
adc
adc
repnz
and
jmp
sub
rcr
sbb
mov
cmp
cmpl
lahf
or
xchg
xor
xor
adc
push
rcr
sbb
cmp
mov
cmp
mov
in
in
adc
mov
scas
int3
orl
repz
add
js
repz
add
daa
aas
pop
mov
dec
icebp
and
pop
in
out
jo
aaa
mov
mov
mov
lcall
repz
dec
xchg
mov
dec
sarl
test
or
pusha
insl
xchg
sub
fmul
push
mov
dec
add
jnp
cwtl
add
mov
fwait
mov
push
xor
out
push
pop
mov
daa
push
sub
leave
sbb
in
and
sti
push
lgs
jb
lods
jo
das
fildll
aas
insb
faddl
fstl
shrb
imul
mov
mov
jbe
pop
pop
xor
std
add
aaa
fucomi
adc
mov
pushf
outsb
cmc
xor
push
aad
fstpt
loope
sbb
mov
scas
xchg
mov
jmp
or
sub
dec
adcb
xchg
push
pop
cli
adc
lcall
addr16
popf
jg
cli
jmp
stos
adc
movl
cltd
jb
aas
out
pop
mov
imul
mov
mov
or
mov
jle
stc
shl
and
mov
out
jmp
push
cmp
aad
and
or
and
shl
lret
in
cmp
xlat
fiaddl
xchg
loop
cltd
cmp
xor
add
out
out
cmp
cli
scas
movsb
xorb
and
clc
mov
add
lods
mov
mov
adc
xchg
push
mov
mov
push
sbb
dec
dec
xor
mov
adc
das
rcll
jne
push
test
or
xor
les
push
sbb
lret
inc
adc
test
mov
dec
imul
add
cmp
adc
add
loop
adc
inc
bound
push
sbb
adc
mov
inc
inc
inc
pop
scas
jle
adc
mov
nop
jle
fucomip
mov
out
add
popa
subl
jo
mov
aaa
inc
xor
fnstsw
lcall
in
push
lret
or
jmp
pop
aaa
clc
pop
push
fistpll
ds
jp
mov
out
nop
lret
aam
cmp
inc
push
ror
lahf
insb
fwait
sbb
enter
cmpsb
jmp
daa
pop
sub
sbb
jnp
pop
xchg
push
sbb
jge
rcrb
test
or
push
fidivrl
cmp
aas
adc
pop
sbb
test
dec
push
mov
push
push
jp
mov
lea
outsl
inc
add
rcll
add
sub
out
lcall
int3
mov
mov
es
sbb
imul
mov
scas
xor
mov
insl
jno
or
cmc
out
lcall
sbb
lahf
inc
pop
negb
cmc
lcall
pushf
jo
cmp
sub
xchg
ja
rcll
push
or
clc
cmpsl
iret
push
pop
imul
sub
inc
jbe
sbb
sbb
cld
in
mov
lcall
repz
lds
roll
roll
ja
push
test
fs
stc
aad
jp
mov
das
cmp
das
ss
mov
mov
addr16
adc
enter
aaa
inc
xor
jns
mov
movsb
add
repnz
jb
jo
jmp
inc
pop
and
adc
add
ret
pop
xor
cmp
js
mov
mov
lea
push
in
icebp
mov
mov
popa
pop
push
cli
mov
push
sbb
adc
mov
js
adc
jae
xor
mov
add
mov
inc
lret
outsl
dec
dec
xor
nop
aas
lahf
frstor
les
cld
push
rolb
addr16
and
push
sub
imul
pop
jle
xor
dec
ds
and
mov
jns
out
clc
xchg
dec
push
xchg
in
in
cs
cltd
jge
inc
adc
xor
adc
jno
jno
jp
stc
repz
out
pop
addl
cwtl
dec
ret
jns
scas
sub
pop
jnp
pop
add
movsb
mov
outsl
push
outsl
xorb
je
addr16
jg
mov
inc
or
gs
repz
inc
mov
mov
ljmp
sbb
stc
ds
int
mov
movsb
fs
push
push
std
rclb
es
cmpb
mov
les
mov
lods
into
in
inc
test
imul
arpl
dec
xor
sbb
add
arpl
push
mov
or
outsl
shl
arpl
cmpsl
sbb
pop
inc
and
xor
xchg
cmp
push
mov
cmpsl
mov
sbb
pop
xchg
je
fs
loopne
sahf
pop
xor
add
push
mov
mov
jge
push
dec
lahf
sub
cmp
ja
sbb
add
fsub
les
lahf
adc
lods
mov
fs
lods
push
mov
adc
add
movsl
bound
xor
and
dec
add
mov
gs
push
cmp
fs
fwait
in
cmp
and
push
insb
push
into
inc
pop
shrb
mov
mov
cmp
out
idivb
mov
sub
and
sar
pushf
sub
imul
fdiv
xchg
xchg
ja
aad
mov
jl
ds
jl
dec
je
ret
sub
outsl
mov
pop
call
rcll
xchg
cmpsb
jne
mov
lock
fstpt
jo
push
fsubrl
mov
in
inc
rcrl
in
ljmp
movsb
or
into
movsl
div
icebp
hlt
sti
xor
dec
ret
push
enter
mov
sbbb
inc
scas
sahf
jne
inc
mov
lret
push
push
icebp
call
sbb
and
mov
adc
jo
xor
cmp
xor
xor
and
add
testb
out
lahf
ret
std
mov
push
std
fsubrs
int3
and
xchg
xor
push
jp
fnsave
into
lds
mov
fs
mov
mov
rcr
sub
insb
fmull
push
icebp
rclb
xchg
outsb
xchg
cmc
call
inc
and
push
idivl
mov
adc
or
and
lds
pop
not
sub
ret
cmp
js
out
lcall
fstl
xchg
stos
lcall
dec
into
sub
pop
lods
test
sbb
fsubr
mov
jne
repnz
or
outsl
adc
add
push
shrb
aas
ja
shlb
ds
xorl
scas
xchg
xor
sarl
mov
sti
test
lcall
pop
cltd
popa
or
adc
cltd
lods
push
mov
mov
cmp
mov
arpl
popl
xchg
fdivr
loope
dec
jae
ljmp
mov
fs
inc
je
cmpsb
sarl
mov
stos
cs
iret
jnp
push
pop
sbb
mov
dec
scas
ds
lret
les
mov
das
mov
shlb
icebp
sub
push
ret
sub
and
push
stos
clc
es
aas
add
sbb
insl
xor
jl
ds
jo
imul
cltd
divl
sbb
mov
scas
mov
arpl
pop
mov
enter
mov
or
and
outsl
push
xor
jmp
notl
scas
dec
pushf
xchg
xchg
adc
mov
mov
push
dec
sbb
cmp
xchg
cwtl
arpl
jp
stos
call
xor
inc
sub
rclb
jbe
xchg
mov
xor
add
in
sbb
and
cmp
xor
loopne
hlt
std
jg
pop
mov
add
pop
rcrl
and
hlt
ficomps
sahf
sbb
mov
adc
cmp
push
loopne
sbb
jne
dec
sbb
movsb
div
aam
dec
lahf
icebp
sbb
out
dec
test
hlt
enter
xlat
mov
ret
lea
aaa
insb
scas
hlt
fidivrs
pop
roll
into
cmpsl
jge
or
add
lea
loop
inc
aaa
ljmp
cwtl
sub
stc
stos
sbb
mov
dec
cmpsl
and
leave
sbb
jns
sbb
cmpsl
jbe
hlt
aam
loop
push
fimull
ret
insl
loopne
test
mov
rclb
sub
ret
loope
xor
je
mov
jge
lret
fistps
or
jmp
mov
scas
fwait
gs
inc
repz
push
xchg
xchg
outsb
sti
cltd
and
mov
bnd
sbb
dec
cmp
add
or
gs
fcoml
or
subl
add
es
or
mov
outsl
cmp
cmp
nop
push
pop
xchg
fisttpl
adc
test
dec
cmp
push
mov
lods
addr16
xchg
fisubrs
jns
fldcw
insb
psllw
cltd
sbb
jl
dec
jb
push
push
add
inc
call
js
fs
negl
pop
jmp
cmp
cmp
pop
push
cmp
mov
jge
xor
cmp
mov
lahf
push
xor
xor
iret
and
adc
or
ljmp
inc
je
jns
dec
lret
jbe
sub
popf
add
leave
pop
jb
in
jp
pop
push
movb
inc
pop
shr
dec
lods
xchg
or
mov
stos
cwtl
lock
dec
shlb
jg
mov
popf
mov
or
fisubs
sti
and
xchg
in
sub
arpl
adc
pusha
mov
mov
pop
dec
mov
mov
je
and
pop
gs
jle
data16
mov
cwtl
hlt
jnp
loope
shll
inc
jno
arpl
xor
in
ljmp
sub
dec
sub
mov
mov
fs
push
std
xor
dec
idiv
sub
das
hlt
scas
test
into
pushf
dec
sub
xchg
cwtl
les
loope
inc
jmp
inc
inc
imul
mov
fs
bound
hlt
jecxz
inc
sub
dec
sub
fisttps
cltd
iret
call
out
mov
mov
xchg
mov
pusha
sbb
and
sbb
add
sahf
jg
ficomps
cmpsb
test
icebp
int
sbb
ja
addr16
cmp
mov
mov
or
ret
add
cmp
inc
add
inc
stos
fistpl
xchg
sbb
loopne
bound
cmc
and
leave
loop
pop
mov
lahf
dec
jg
xor
cwtl
mov
push
aas
fdivs
xchg
adcl
pushf
cmp
mov
scas
ret
fdivr
movsb
dec
test
iret
movsb
scas
sbb
xor
fs
inc
data16
push
or
jp
inc
jge
inc
jl
dec
lcall
rorl
sti
mov
lret
dec
mov
cmpsb
pushf
pop
cmp
jecxz
xchg
fdivrs
push
sub
nop
mov
jne,pn
fidivrs
aas
popf
and
in
sub
in
mov
pop
pop
ret
outsl
shll
cmpsl
out
lcall
add
scas
add
std
aad
inc
mov
add
or
xor
lods
xor
inc
push
xorb
jno
sarl
cld
mov
loopne
jo
dec
daa
mov
ss
clc
shl
adc
cmc
or
pushf
lds
or
ret
std
inc
inc
dec
shlb
lret
mov
arpl
hlt
std
cmpsb
push
test
mov
mov
arpl
jg
es
fsts
sbb
stos
push
stos
and
adc
mov
pushf
add
inc
shlb
in
outsb
ss
adc
mov
mull
adc
fnstsw
mov
aas
sbb
jo
lret
jne
and
cld
loopne
pop
jl
xchg
add
jg
flds
filds
stos
add
cmp
inc
xor
mov
dec
fcmovnb
outsb
jnp
arpl
pushf
punpckldq
sub
cmp
mov
add
or
sub
fmull
or
push
sar
push
lret
cmc
jp
das
xchg
lret
loope
jno
shl
adc
sub
inc
jle
repnz
jge
mov
lods
sbb
push
faddl
add
mov
arpl
lret
sbb
aas
mov
insl
cmpsl
xor
call
cmp
or
leave
popf
pushf
test
mov
in
fidivrl
insb
adc
lods
add
mov
lods
mov
inc
pusha
test
leave
lahf
jp
adc
mov
shrl
mov
pop
shl
dec
lret
mov
sahf
loopne
cmp
mov
jbe
iret
inc
scas
repz
sub
sarb
sbb
lret
jno
cltd
mov
push
in
enter
add
fdivrs
mov
mov
hlt
sbb
sbb
mov
adc
mov
adc
add
insb
sbb
addl
nop
mov
inc
cli
xchg
xor
popf
xchg
ficoms
lret
mov
idiv
ret
lock
adc
paddsb
lock
add
sahf
pushf
or
inc
insl
mov
lret
and
lock
push
dec
pushf
push
jl
inc
add
cmp
mov
fdivs
pushl
fsubp
push
add
fs
addl
div
add
or
stc
push
lock
pushf
ret
and
xchg
dec
adc
push
hlt
cwtl
pop
or
test
daa
out
js
push
inc
xchg
ret
sbb
pop
inc
js
movsb
subl
jecxz
cmp
ljmp
mov
sbb
push
mov
xor
add
jno
and
inc
cmp
in
les
sub
inc
repnz
dec
mov
xlat
test
je
lods
push
push
out
sbb
mov
sub
xchg
faddl
inc
lods
fwait
push
pop
adc
mov
push
pop
or
outsl
icebp
dec
push
and
arpl
test
jae
int3
push
lret
stos
loope
stc
in
sbb
xor
popf
fstl
lret
xor
push
add
lahf
xchg
cmp
mov
mov
pop
aaa
or
notb
scas
shl
fmul
ds
xchg
imul
dec
daa
sub
pop
adc
sub
adc
or
pop
lcall
mov
jns
pop
pusha
sbb
data16
add
xchg
in
push
mov
xchg
jae
adc
icebp
jnp
arpl
pmullw
xchg
mov
adc
mov
stc
push
scas
leave
jbe
mov
sti
xor
jnp
arpl
int
xchg
gs
xchg
xchg
in
mov
lahf
push
pushf
sbb
add
aaa
adc
sbb
insb
aaa
cmp
and
dec
loopne
testb
ds
cmc
cltd
cld
xchg
subl
jnp
inc
fwait
repnz
add
dec
xchg
xor
adc
mov
or
lcall
jbe
test
mov
jge
fldenv
mov
jecxz
pop
cmp
in
adc
mov
cltd
int3
in
push
mov
adc
push
enter
sbb
imul
jo
push
outsb
movsb
mov
stos
dec
push
les
cwtl
dec
mov
dec
addr16
bound
bound
ret
ja
aad
stos
rcll
pxor
sub
xor
sti
push
add
lret
out
inc
leave
and
or
cmc
mov
arpl
test
ja
popf
ljmp
xchg
cmpl
dec
test
push
mov
and
sbb
mov
dec
sub
xchg
mov
jge
mov
mov
dec
jmp
pop
jns
loop
inc
mov
mov
arpl
sbb
addl
sbb
adc
gs
stc
dec
jno
jmp
daa
pop
cmp
aaa
loopne,pt
jno
fwait
into
repnz
out
xchg
mov
leave
lds
sub
sbb
push
cmpsl
xchg
pop
out
lods
add
loope
mov
xchg
cmp
mov
data16
push
test
inc
fdivr
lods
insl
fnstsw
lea
fbstp
xor
xchg
push
lods
fildl
fsubl
mov
sub
inc
sub
or
jl
pop
cmpsl
into
add
ss
jb
xchg
xor
in
mov
jo
cmpsb
inc
inc
push
adc
xchg
jmp
lret
mov
xchg
subb
sbb
ljmp
inc
inc
add
pop
pop
sub
imul
inc
push
inc
cmp
cmp
mov
std
dec
lods
xor
mov
cmp
fistpll
xchg
sub
inc
xchg
add
dec
cmpsl
sahf
jno
aad
dec
inc
lcall
inc
xchg
push
push
sub
cli
shrl
lea
sub
lods
jmp
fs
insl
jo
mov
mov
add
cmc
and
inc
cmp
jmp
push
mov
pusha
das
ljmp
outsl
push
mov
inc
fbld
lea
or
xchg
cmpsb
jmp
cmpsb
iret
std
in
es
arpl
arpl
xor
pop
mov
lahf
inc
mov
sbb
mov
xor
xchg
sbb
mov
in
or
push
outsl
lods
pop
loopne
add
pop
dec
adc
sub
into
aad
ja
andb
stos
subl
fistl
iret
lock
jno,pt
aas
rol
xchg
outsl
in
push
sub
or
mov
insl
xchg
gs
push
imul
in
mov
repnz
dec
push
insb
lds
loopne
and
dec
push
pop
es
push
lods
jns
add
in
lods
mov
dec
sub
mov
mov
xor
test
cld
xchg
insl
hlt
aas
jecxz
push
lds
mov
aaa
loope
in
mov
fs
cmp
pop
cld
repz
sub
stc
in
sub
jmp
or
in
test
hlt
adc
push
shrl
std
adc
invd
adcb
int3
fsub
jge
aaa
das
imul
data16
xchg
xor
fstps
scas
movsl
repnz
jne
stos
add
enter
pushl
jae
xor
int
loope
leave
jecxz
or
stos
cwtl
loopne
cmp
lock
dec
jae
rorb
outsb
test
jns
out
aam
sbb
fisubl
mov
push
sub
popf
shlb
mov
aaa
lea
mov
sbb
fwait
mov
movsl
mov
sub
add
xor
cmpsl
lods
mov
mov
jbe
out
pop
ret
daa
and
add
and
mov
stos
imul
push
add
aaa
rolb
in
int
inc
test
lahf
daa
add
sub
hlt
gs
subb
cmovno
sub
cmpsl
nop
mov
cli
into
lock
xchg
testb
push
xor
adc
jmp
mov
test
push
fldt
xchg
mov
imul
jmp
call
and
in
sbbl
rolb
cltd
faddl
mov
jmp
negl
rcrb
je
add
insl
mov
cld
and
loope
in
push
test
jns
jp
lcall
int
inc
jnp
outsb
enter
rcrb
or
out
fmull
push
mov
push
aaa
mov
add
sbb
sti
adc
pop
dec
sub
pusha
test
xlat
cmp
mov
jo
add
or
popa
cmp
movzwl
or
sarl
xor
fstpl
sub
aad
mov
movsl
imul
ljmp
outsl
push
sub
fistpl
stc
bound
jnp
ljmp
popf
mov
ja
sarb
leave
iret
or
xchg
push
cs
enter
dec
aam
adcl
mov
pop
xchg
addl
adc
sbb
push
and
mov
movsb
loop
incl
pop
push
inc
sub
dec
xor
fwait
jb
stc
cmp
dec
sbb
push
jae
mov
xor
jns
xchg
fnstsw
shrl
ret
mov
inc
fwait
ja
sub
pop
sbb
cltd
lods
pop
loop
pusha
or
repnz
push
cmp
or
rcrb
cmp
cld
jp
pop
jnp
push
cld
pop
outsl
call
inc
lret
mov
or
stc
clc
or
imulb
mov
push
pop
sub
push
fstpl
inc
lahf
pop
mov
inc
mov
lock
nop
inc
leave
adc
imul
fcoml
dec
adc
push
sub
sti
les
inc
jmp
or
ds
mov
lds
negb
je
and
xlat
mov
outsb
out
push
in
ret
cs
frstor
fistpl
insl
add
dec
and
int3
sbb
es
rclb
xor
nop
lds
jp
jns
cs
xchg
test
mov
test
data16
fs
fnsave
popa
adc
xor
sbbl
aas
je
push
cmp
push
cmp
xlat
aad
repz
jg
insl
in
cs
jl
jae
inc
pop
mov
sbb
std
rolb
test
sbb
xchg
into
inc
scas
shll
fs
add
sbb
fcmovnb
inc
movl
stos
ret
out
sub
or
push
aad
scas
bound
mov
inc
aas
push
mov
pop
inc
mov
stos
ret
daa
insb
inc
fwait
inc
andb
fcmovnb
jmp
out
mov
dec
cmp
sub
pushf
and
xor
out
mov
jle
ret
adc
mov
inc
dec
push
or
cmc
iret
and
std
sbb
enter
push
jl
fs
gs
inc
jae
enter
sbb
cwtl
xor
jmp
cmc
mov
stc
pushl
xchg
decb
shlb
sbb
xchg
sbb
int
lods
in
lods
mov
mov
flds
xor
xchg
shl
sarl
pop
jae
std
mov
outsl
cmpb
mov
sub
add
faddl
mov
adc
movsb
stos
cwtl
scas
and
sub
pop
call
mull
add
icebp
subl
dec
jg
inc
rcl
in
sub
mov
loopne,pn
cmpsb
call
ret
repz
pop
adc
sbb
push
xor
lahf
loop
pop
pop
pop
adc
dec
out
and
outsl
fdivs
pop
mov
call
push
lds
in
scas
inc
dec
mov
jmp
jae
addr16
xor
dec
jae
fimull
mov
ficoms
inc
adc
and
jno
push
movsb
pop
pop
sbb
pop
mov
xlat
mov
std
test
adc
div
or
out
mov
cltd
into
and
sar
cmc
xchg
sub
add
inc
cmp
in
sbb
cli
xchg
shlb
sub
aam
mov
test
mov
addr16
mov
cli
rcr
sbb
sub
mov
icebp
xor
adc
sahf
sbb
daa
adc
out
sbb
call
add
lret
les
sti
sbb
xlat
frstor
stc
push
iret
div
sub
cmp
or
test
mov
push
inc
das
pop
pop
fsubl
xor
sbb
fldl
jle
dec
add
ret
mov
pop
mov
inc
mov
push
sti
jge
aam
xor
std
cwtl
aaa
in
add
hlt
hlt
inc
clc
mov
cmp
mov
cld
pop
nop
outsb
jl
in
xchg
movsl
adc
mov
or
lock
mov
mov
sahf
imul
mov
loop
test
sbb
or
push
mov
and
xchg
ljmp
in
pushf
loop
test
mov
rcrb
je
lahf
push
fidivl
stos
pushf
std
icebp
jno
mov
xchg
ljmp
test
push
mov
jne
movsb
sub
sbb
or
mov
sbb
aaa
outsb
pusha
lods
ret
add
or
push
xchg
xorb
add
cmp
lahf
fnstcw
mov
iret
dec
in
pop
cmpsb
in
adc
aam
xchg
add
cmp
loopw
insl
jns
adc
xor
adc
ss
lds
adc
mov
loop
insb
cwtl
xor
sbb
push
rorl
cmp
xchg
mov
xchg
pushf
cmc
mov
xchg
mov
push
bound
jp
jg
fdivrs
pop
xor
jb
xor
fucom
mov
pop
xchg
lahf
add
xor
mov
xor
hlt
dec
adc
or
xchg
scas
rcll
adc
inc
jae
lret
pop
adc
add
cmp
inc
dec
xchg
ret
push
lods
mov
add
stc
xchg
pop
xor
call
jns
repnz
mov
jp
cmp
pmovmskb
jno
mov
mov
jmp
mov
adc
fnstenv
fcmovbe
icebp
movsl
xlat
lret
filds
cli
test
aas
or
cwtl
xchg
jmp
sbb
push
xor
mov
or
outsb
add
inc
sbb
jmp
in
xor
push
out
lods
dec
insb
repnz
or
sub
xchg
test
push
sub
mov
jl
ljmp
int3
push
add
lods
push
xchg
ret
xchg
out
ja
imul
out
inc
push
int
stos
roll
fcoml
jbe
test
jo
or
lea
and
std
add
lret
jne
test
push
jg
out
xchg
out
fdivr
stos
loop
out
push
stos
sbb
or
push
xchg
pusha
cli
and
and
sbb
shll
push
loope
call
xchg
or
inc
mov
outsl
aaa
out
stos
or
rcl
popa
or
xor
iret
jp
icebp
mov
dec
andl
lret
std
jmp
or
mov
mov
jg
pop
imul
mov
in
mov
lret
pop
stos
sbb
push
push
xchg
mov
cmp
ljmp
ja
pop
lock
imul
test
stos
pop
loope
arpl
jg
jle
fdivrs
mov
cmp
aaa
faddp
push
aas
jae
arpl
xorb
daa
repz
add
jno
mov
mov
push
int
or
mov
jge
sbb
pop
mov
mov
int
test
sbb
jne
xor
aam
push
stc
lahf
repz
dec
out
into
jg
mov
xor
movsb
mov
sbb
sbb
inc
cmpsb
hlt
sub
xor
stos
imul
clc
pushf
scas
cmpb
sub
mov
sbb
xor
fs
xchg
xchg
or
push
test
sbb
xchg
xor
aas
mov
aad
mov
add
jle
lock
in
es
out
jge
mov
xchg
mov
into
sbb
pop
inc
mov
pop
popa
sbb
cmp
dec
jae
orb
jne
adc
xor
int
adc
sbb
outsb
cmc
repz
jns
int3
ss
sbb
out
cvtpi2ps
out
jns
push
mov
jp
add
or
fidivl
testb
addr16
in
lods
jne
mov
ss
push
fisttpll
cmp
daa
divl
loopne
shr
pop
rclb
fs
mov
fbld
test
sahf
xor
push
icebp
popf
fwait
lock
cmp
cli
movsb
cmp
cmp
aad
loopne
mov
fisubrs
lcall
movl
push
push
jnp
xor
insb
dec
mov
adc
pop
pop
pop
fcompl
push
dec
std
ljmp
ljmp
push
lahf
or
hlt
add
arpl
popf
sahf
je
inc
adc
push
in
mov
cmp
xor
pop
lods
roll
mov
mov
mov
push
mov
aas
or
outsl
fcompl
jo
insb
in
mov
push
aam
cmp
popf
push
mov
fldcw
mov
adc
mov
push
inc
bswap
xchg
or
xor
xor
sub
rcrl
test
out
mov
addr16
int
xor
jecxz
mov
lods
push
push
mov
add
sarl
out
test
sahf
popa
jmp
pop
iret
mov
jp
jmp
sbb
shrb
popf
ror
mov
xchg
mov
adcl
push
lahf
jnp
int
add
sub
dec
icebp
dec
inc
adc
arpl
in
test
out
addr16
lock
mov
mov
ds
out
xchg
shlb
repnz
stos
pop
xchg
int
cmp
decb
mov
add
loope
insl
addl
pop
mov
out
inc
mov
shl
pop
or
and
dec
add
push
addr16
sbb
jb
adc
adc
jne
jge
pop
roll
pusha
mov
pushf
insb
fstps
inc
xor
mov
and
jp
lahf
pop
jbe
hlt
lcall
xchg
jne
pop
jo
push
jo
repz
xor
inc
ds
sub
mov
or
ds
inc
mov
push
lea
inc
popa
push
mov
jecxz
daa
mov
mov
sub
and
and
in
cmpsl
in
pusha
inc
popf
jmp
sbb
in
xchg
sbb
stos
imul
pop
mov
js
adc
jne
adc
sub
int
or
or
xor
out
dec
push
int3
inc
jge
and
es
cmp
push
jbe
push
inc
mov
stos
js
xchg
aad
out
jmp
xchg
mov
arpl
pop
les
xchg
cmp
ds
push
inc
mov
iret
jp
in
in
mov
loope
ljmp
jmp
stc
jecxz
mov
mov
cmp
dec
and
fdivrs
pop
mov
inc
jns
jnp
lods
sbbb
xor
xchg
inc
in
cmp
stc
aam
sub
sub
jnp
xor
mov
mov
xor
mov
outsl
fdivrl
pop
pop
mov
sub
in
adc
daa
jno
adcb
jno
in
push
mov
add
pop
sub
push
je
shlb
addl
mov
stc
mov
lds
mov
ja
lods
xchg
mov
das
or
jb
pop
sbb
adcb
xchg
cld
ljmp
xor
jnp
cmp
subb
xchg
sub
jns
fs
ret
mov
dec
clc
test
sub
sarb
add
inc
orl
divl
sahf
pushf
mov
cli
aas
cmp
add
xor
xchg
jl
ret
jmp
loop
pop
lahf
jl
pop
ja
adc
fildl
dec
stos
scas
push
fs
movsb
inc
dec
lret
and
xchg
mov
popf
mov
nop
test
push
adc
dec
jecxz
xchg
aas
ss
mov
add
cmc
xor
fdivl
sbbb
xchg
jg
mov
push
dec
insb
in
xor
imull
sub
jge
push
frstor
cmpb
jb
jge
daa
adc
push
mov
push
pop
stos
popw
inc
push
repnz
in
imul
out
xlat
aas
adc
mov
call
add
rorl
mov
cmp
mov
jno
jnp
sbb
cmp
sub
pop
shl
jecxz
xchg
aaa
jne
lret
in
fcmovnbe
xchg
das
repnz
in
cmp
mov
std
mov
shll
push
out
mov
cmp
cmp
lock
mov
repz
xor
adc
dec
adc
cmp
jns
mov
mov
in
mov
push
insl
repnz
dec
rclb
popa
add
mov
mov
xchg
fnstenv
ss
lret
lock
mov
sarl
cmp
aad
sbb
call
popf
mov
cltd
or
pop
leave
xchg
pop
test
xchg
inc
sahf
clc
rcll
jb
sbb
lahf
andb
ss
negb
xor
repnz
add
pusha
mov
cmp
or
aam
out
loop
ret
pop
xchg
nop
mov
pop
adcl
lods
pop
xchg
xchg
adc
aaa
arpl
aam
daa
jle
cmp
mov
je
fisttps
loope
fwait
hlt
out
jp
push
push
mov
cwtl
adc
inc
mov
das
fidivs
fimuls
dec
mov
xchg
es
or
imul
test
popf
sbb
stc
shrb
ret
mov
xor
stc
push
out
mov
repnz
sbb
xlat
clc
icebp
adc
push
inc
xchg
mov
mov
add
sar
stos
xchg
sbb
jb
pop
or
repz
ds
cmpsl
xlat
fs
sahf
jb
fs
adc
push
jb
mov
sbb
pop
add
cmc
filds
jno
lock
pusha
add
popf
pop
ds
adc
mov
and
test
push
lea
mov
or
push
mov
dec
ret
cmp
xor
aas
push
ljmp
dec
ljmp
xchg
iret
in
rcr
add
push
rcll
stos
push
inc
loop
mov
das
pop
fldcw
cmp
les
inc
repnz
adc
sub
mov
fstpt
fstps
std
imul
stos
lret
or
aad
rep
stos
loop
xor
dec
cmpsl
sub
cmpsb
add
sub
dec
or
push
fcom
add
or
xor
mov
popa
dec
mov
adc
ja
jmp
mov
adc
inc
data16
dec
xchg
jno
xor
outsl
mov
push
test
jp
push
and
pop
mov
cli
outsb
ss
fdivs
inc
aas
push
fwait
mov
outsl
test
scas
enter
mov
sbb
jo
inc
fwait
mov
mov
or
mov
fwait
test
aas
pop
jns
popf
dec
lods
inc
pop
je
lds
or
mov
popa
sbb
pusha
faddl
cld
enter
push
mov
mov
cmp
out
or
bound
movl
mov
test
ret
dec
inc
jmp
jnp
inc
inc
mov
movsb
pop
sbb
dec
loope
mov
mov
mov
xchg
int
jp
jae
js
arpl
push
das
mov
jne
ret
fisttps
repnz
aad
mov
pop
fistps
mov
jb
xchg
lea
mov
loope
mov
lret
inc
xor
cmp
xor
and
int
inc
sbb
dec
inc
std
xchg
scas
pusha
xchg
insl
iret
movsb
cltd
inc
addb
cwtl
iret
mov
jecxz
xor
stos
mov
lea
lods
xchg
mov
xorb
jbe
loopne
jo
pop
pop
ret
jno
xchg
in
adc
and
popf
fwait
cltd
clc
imul
out
or
fidivrs
and
jecxz
ja
sbb
test
mov
and
int
out
xchg
add
ja
push
mov
jmp
jno
mov
subb
xchg
aam
jbe
fistps
jecxz
dec
xor
inc
cmp
inc
imul
mov
push
sub
xchg
jp
sub
dec
mov
mov
imul
fcmovb
xor
popf
stos
sub
jbe
jl
aas
or
or
xchg
rcl
sahf
cltd
push
mov
scas
out
test
jl,pt
fidivl
inc
jmp
sarl
jmp
jp
mov
add
xor
dec
popa
aaa
std
jne
ret
push
das
cmp
insb
imul
mov
sbb
mov
push
ljmp
out
cmpsl
inc
pop
es
dec
adc
imul
inc
popf
sbb
dec
pop
jb
mov
dec
shrb
test
cmpsb
mov
xchg
and
fs
jge
dec
cmp
mov
or
jp
aaa
lcall
fisttpl
push
push
jp
rcll
loop
jne
mov
dec
loop
adc
cmp
cmp
inc
aad
dec
mov
mov
daa
jle
mov
adc
fs
or
lcall
call
int
aam
sarl
xchg
imul
in
les
hlt
mov
sub
pop
test
loope
lahf
add
pushf
push
pop
testl
shll
cmpsl
je
push
or
flds
jge
in
cmpsb
clc
adcl
push
mov
inc
adc
jno
fistpl
movsb
subl
mov
lock
push
jge
arpl
dec
lret
push
cltd
jno
lret
jno
add
adc
cmp
arpl
add
fdivs
stos
push
int3
cmpsl
ljmp
cmpsl
mov
movsl
lret
sbb
add
in
movsb
sub
sub
xor
jne
adcb
mov
lret
mov
push
push
mov
sub
mov
push
rcrb
nop
xor
push
xchg
mov
stc
sub
xor
lock
sub
jo
ficompl
retw
sbb
cld
pop
out
les
and
inc
mov
jno
dec
rclb
lock
adc
daa
xor
jnp
jne
fs
jecxz
sahf
movsb
mov
mov
rorb
hlt
dec
mov
and
fimull
lahf
enter
mov
push
test
sbb
inc
jg
roll
and
mov
repz
bound
call
aas
push
loope
mov
cmpsb
push
push
lahf
lock
insb
push
inc
or
fchs
aaa
cli
idivb
adc
jns
mov
push
xchg
pop
stc
ja
pusha
cmp
icebp
jo
pop
scas
or
and
into
flds
sbb
jnp
imul
ret
repz
imul
scas
mov
ss
mov
jl
push
jno
sbb
sbb
jp
out
lcall
cs
enter
mov
mov
shll
shll
shr
test
cwtl
and
cmp
sub
sub
iret
adc
xor
add
addr16
imul
es
mov
int3
mov
arpl
dec
ret
mov
lret
jg
into
mov
mov
lods
jne
in
jle
lcall
pop
stc
addb
mov
jno
add
mov
push
jne
cwtl
or
out
outsl
add
add
add
add
and
add
pusha
add
addb
add
add
add
cmp
add
add
add
or
add
add
add
add
add
add
js
add
add
add
or
add
sub
add
add
add
addb
add
add
lret
jg
in
jo
lock
jae
pushaw
xor
xor
fidivl
arpl
mov
jmp
cmp
sbb
mov
sub
jb
mov
jae
arpl
fs
jg
pop
in
cmpsl
inc
stos
sbb
mov
adc
mov
cwtl
ja
std
lret
cmpsb
adc
cmp
xor
cmpsb
push
lret
pop
and
std
adc
pop
dec
xchg
cmp
push
pop
cmpsb
dec
mov
xor
mov
and
jae
pushf
scas
add
add
int
push
nop
mov
and
dec
xorb
aaa
mov
loop
xlat
adcl
xchg
add
inc
leave
cmp
inc
mov
sub
jg
mov
test
push
mov
and
rcrl
dec
gs
pop
roll
adc
jbe
repnz
push
pop
add
xchg
sub
adc
pusha
dec
and
and
jae
jle
xchg
sub
mov
pop
adcl
addb
les
cld
cltd
adc
cmp
mov
in
loopne
mov
fwait
sti
dec
js
jno
mov
dec
mulb
nop
mov
pop
cmpsl
loopne
lahf
xchg
inc
xor
push
scas
addl
.byte
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
or
call
mov
pop
lods
jne
mov
adc
add
mov
scas
dec
fsub
mov
inc
je
adc
add
movzwl
sub
push
mov
pop
pushl
push
mov
pop
pop
mov
add
push
mov
pop
xor
mov
xor
mov
mov
mov
and
sub
push
push
mov
pop
pop
dec
dec
dec
adc
cmp
jne
mov
jmp
cmp
sub
and
jmp
les
cs
pop
gs
adc
jno
sbb
mov
neg
push
out
push
mov
or
xchg
cmp
push
loop
sbb
xchg
ss
fdivs
in
fldt
push
cmp
fisttpl
cld
shrd
inc
jmp
clc
pop
mov
xchg
or
mov
scas
xchg
addr16
repnz
mov
out
jg
lret
and
int3
hlt
data16
xor
sbb
jmp
shl
in
insl
xchg
jecxz
inc
jecxz
inc
leave
mov
cwtl
and
repz
push
out
sbb
push
lret
mov
push
daa
mov
xchg
pop
clc
je
popa
test
sbb
test
and
push
stos
pop
std
adc
ds
hlt
loopne
mov
movb
push
scas
push
pop
push
pop
lahf
pop
clc
pop
lahf
pop
add
cmc
jge
and
dec
movsl
mov
aas
stos
hlt
push
xchg
mov
cmc
xchg
push
and
int
jg
sbb
sbb
push
loopne
sbb
and
data16
call
loope
pop
add
fimuls
mov
sti
lcall
lahf
mov
sbb
sbb
xlat
fwait
push
add
outsl
push
bound
inc
fistl
pop
pop
xchg
inc
inc
inc
aas
cmp
add
mov
mov
xchg
add
mulb
inc
xor
js
stos
aad
push
adc
loop
ret
outsb
mov
sbb
xchg
mov
mov
add
mov
ja
dec
dec
push
cmpsb
jno
pop
lock
mov
faddl
add
inc
jmp
pop
jae
push
cmp
loop
popa
mov
xor
add
lcall
xchg
lods
add
mov
push
jecxz
mov
lret
shll
lods
loopne
std
pop
push
in
pop
imul
data16
adcb
pop
out
inc
inc
sbb
mov
xor
cwtl
or
insb
inc
rol
pop
insl
cmp
xchg
xor
dec
js
test
or
dec
testl
mov
imul
icebp
gs
jge
xchg
clc
stos
inc
add
push
sahf
adc
out
push
in
add
dec
imul
adc
jae
push
xor
pop
loope
fs
and
pop
push
xor
xchg
and
push
pop
xchg
xlat
cmp
iret
cmc
mov
mov
or
imul
mov
aad
sbb
imul
das
ret
jbe
pop
cmpsb
push
dec
into
ds
push
mov
aam
dec
adc
cmp
mov
sub
arpl
leave
sub
cmpb
xor
jp
loope
push
aad
movsl
xor
stos
cmpb
xor
xor
xor
xor
popf
and
jnp
and
aad
mov
adc
int3
repnz
inc
inc
push
mov
dec
adc
cmp
aad
add
push
leave
xor
and
xor
xor
scas
xor
cmpl
scas
ds
push
imul
popf
cmc
mov
and
ds
sub
int3
mov
inc
mov
push
dec
test
xor
xor
cmp
mov
aad
inc
aas
push
xor
lret
xor
jg
cmp
push
shlb
mov
mov
inc
mov
push
hlt
add
aad
mov
shll
inc
jno
and
idivl
xor
add
lds
cs
adc
push
mov
push
xor
mov
popa
stos
xor
cmc
dec
gs
insl
dec
mov
push
dec
mov
push
xchg
aad
hlt
sub
dec
jnp
les
xor
cmp
mov
aad
inc
jg
ds
xor
xor
xor
leave
mov
pusha
test
sub
jae
test
shlb
mov
aad
mov
adc
mov
aad
mov
aad
dec
adc
dec
mov
cmp
rcll
loop
dec
xor
lds
js
jne
or
jne
cmp
hlt
sub
xchg
pop
dec
adc
cmp
add
iret
jne
cmp
hlt
sub
aaa
jbe
fistps
cli
in
lahf
jae
in
push
leave
inc
sub
rorb
jne
repnz
push
push
std
cmp
popf
dec
lret
xor
xor
sub
rorb
jne
pop
push
sub
xor
xor
sub
rorb
jne
pop
jae
mov
mov
int3
mov
int
mov
popa
sub
aad
mov
fistps
cli
in
lahf
or
sub
scas
ret
aam
pop
mov
scas
xor
xchg
lret
jg
ds
mov
int3
inc
mov
dec
stc
dec
inc
enter
push
stos
cmp
mov
les
dec
je
mov
testl
push
scas
cmp
dec
mov
push
cld
int3
xor
jns
out
xor
adc
xor
mov
aad
sub
sti
pop
or
cs
xor
ds
iret
mov
jge
push
xor
xor
xor
jbe,pt
shlb
mov
jg
sahf
ret
iret
xor
xor
je
push
into
scas
mov
movsl
je
push
xor
mov
xorl
or
inc
dec
lahf
int3
xchg
or
sub
leave
std
clc
add
sarb
daa
ds
cmp
pop
mov
je
pop
aas
leave
xorl
xor
mov
or
push
outsb
dec
or
or
jge
adc
pop
cmp
cli
test
adc
lcall
xchg
xor
xor
xor
xor
xor
xor
xor
cmp
sub
das
fsubr
cmp
xor
cmp
xor
xor
xor
pusha
lods
mov
aad
mov
loop
mov
aad
mov
aad
mov
aad
mov
aad
aas
into
bound
and
test
mov
jle
and
daa
out
push
xor
mov
push
cmpsl
outsl
loope
sub
ljmp
test
mov
fistl
ds
repnz
mov
mov
adc
insb
push
inc
fstps
in
sbb
pop
and
mov
clc
je
xor
jnp
and
enter
push
sub
in
fisubs
push
and
adc
and
push
imul
add
xor
iret
pop
outsl
cmc
les
add
mov
mov
sbb
jb
push
fs
ja
pop
push
cltd
adc
xlat
add
test
scas
xor
test
fs
dec
daa
pop
push
mov
xchg
insl
pushf
xchg
pop
ss
add
shl
pop
xor
sub
mov
call
mov
pop
repnz
mov
and
jge
dec
mov
push
dec
push
shl
popa
imul
stos
ret
adc
popa
cmp
imul
lcall
nop
fnstcw
sahf
out
je
roll
ds
push
das
inc
js
lea
xor
ret
mov
pop
jge
ficomps
jo
aam
mov
xchg
popa
dec
call
push
jno
mov
xor
mov
mov
mov
or
imul
pop
in
jns
pushf
mov
hlt
adc
mov
test
or
nop
les
loope
sbb
call
out
repnz
push
xchg
in
jb
ja
xchg
outsb
push
pop
out
negl
or
fst
push
aaa
out
xchg
orl
fstpl
xor
popf
mov
adc
xor
sub
shrl
add
add
xor
dec
mov
les
mov
sarb
repnz
fs
arpl
push
or
xor
xor
ljmp
xchg
push
out
pop
rclb
leave
pop
ljmp
dec
jge
ds
dec
mov
jp
pop
fstpl
inc
daa
or
inc
out
pop
mov
stc
push
pop
movsb
shrb
xor
pop
xor
pop
lcall
ljmp
int3
push
js
lahf
push
push
push
loopw
mov
pop
or
sub
and
sub
adc
fildl
lods
pop
mov
lret
jnp
jmp
aam
sbb
movsl
popa
lahf
mov
mov
dec
pop
sub
add
add
add
or
add
add
dec
add
dec
add
dec
add
add
sub
add
sub
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
sub
add
sub
add
sub
add
sub
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
sub
add
add
add
sub
add
add
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
and
adc
add
add
call
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
rol
add
add
add
add
add
add
rol
add
add
add
add
or
rol
rolb
int3
add
int3
int3
int3
or
or
rol
rol
int3
add
int3
int3
int3
or
or
rol
int3
rorb
add
rolb
or
or
rol
ror
add
int3
rolb
or
or
rorb
int3
int3
add
int3
rolb
rorb
or
add
int3
int3
add
int3
rolb
add
or
add
int3
rorb
ror
add
int3
add
add
add
rorb
int3
int3
rolb
add
add
int3
rorb
int3
int3
rolb
int3
rolb
add
add
int3
int3
rorb
int3
add
add
add
add
int3
int3
add
int3
int3
int3
rolb
add
add
int3
int3
int3
rolb
or
int3
int3
add
add
add
rolb
add
add
or
rolb
add
or
rolb
int3
int3
rolb
int3
rolb
add
or
rolb
add
rolb
int3
rolb
add
int3
int3
rolb
add
rolb
int3
int3
add
add
int3
add
or
add
add
int3
int3
rolb
int3
int3
rolb
int3
rorb
add
int3
add
int3
add
add
rorb
add
int3
int3
rorb
add
add
rorb
add
int3
int3
rorb
add
int3
int3
ror
int3
rolb
add
add
add
or
int3
int3
int3
int3
int3
rolb
add
add
add
or
int3
int3
int3
ror
or
or
int3
add
or
add
int3
add
or
add
push
ljmp
push
jecxz
stos
push
arpl
stos
push
arpl
sub
ljmp
divb
pusha
pop
sti
loopne
pop
pop
incl
cmp
add
jg
pop
loopne
clc
jg
pop
clc
js
pop
clc
jnp
pop
lock
pavgb
filds
shl
addl
pop
cmp
roll
incl
adc
decl
cmp
lcall
jmp
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
mov
add
cmpb
add
add
lahf
adc
add
ficoms
lcall
dec
jbe
sub
add
jg
push
fstl
test
addb
fstpt
repnz
xor
jecxz
test
lods
and
sti
jo
loopne
mov
popf
sbb
andb
mov
shlb
jge
int3
jns
or
arpl
push
sbb
mov
cmp
not
ret
or
and
or
jnp
adc
or
out
or
sbb
push
addr16
mov
aaa
and
push
in
leave
push
movsl
in
in
mov
popf
mov
cmpsl
pop
mov
testl
and
push
sbb
sti
add
in
pushw
jno
bound
lahf
jb
stos
cmp
adc
test
fstp
push
negl
in
inc
dec
ret
cmc
cli
mov
out
push
ss
push
outsb
popa
iret
shlb
movsl
mov
mov
movsl
cmp
loop
and
insb
adc
mov
jp
sub
mov
scas
sub
xorl
pop
inc
mov
outsb
test
mov
or
jae
rol
orl
out
dec
nop
xor
in
scas
or
mov
daa
in
test
push
xchg
adc
mov
pop
add
jb
sub
push
jmp
into
sarl
mov
pop
outsb
js
pop
pop
aam
mov
loopnew
scas
push
add
call
mov
aam
adc
xorl
pop
jecxz
mov
test
movb
mov
sbb
out
xor
mov
jae
bound
pop
fnsave
addr16
shll
sub
popf
aam
cld
push
push
aas
pop
loopne
xor
imul
leave
lea
lods
fiaddl
mov
fadds
dec
dec
push
pop
push
adc
lret
movsl
enter
cmc
inc
aam
push
jl
push
adc
imul
dec
jl
or
inc
cs
xor
push
xor
mov
pop
nop
add
push
imul
into
and
xchg
fsubs
mov
xor
inc
iret
movsb
int3
and
pop
fbld
mov
dec
es
ret
jecxz
scas
andnps
int
jno
mov
lcall
lret
mov
movsl
jbe
mov
pop
mov
jb
popf
mov
inc
dec
xor
fidivrl
push
loope
addl
sti
fsubl
ljmp
movsl
stc
in
fsubl
arpl
pop
cmp
xchg
push
adc
sbb
sub
jbe
adc
mov
mov
pop
out
decb
dec
pop
dec
scas
push
mov
fs
outsl
add
pop
push
pushw
mov
xorl
rorb
ja
ljmp
gs
cmpsb
gs
lock
adc
push
es
orl
out
cmc
lock
or
insb
jns
sahf
cmp
xchg
mov
mov
xchg
scas
clc
lret
pop
aas
sahf
fwait
xor
test
mov
push
inc
xor
aam
and
inc
iret
incb
fnstcw
outsl
ds
andb
jb
out
mov
cmp
push
lea
or
adc
push
mov
push
lods
mov
inc
repz
sbb
adc
mov
sbb
aas
or
call
cmc
xor
add
cs
xchg
cmpl
xor
lcall
add
pop
repz
sub
pop
pop
addr16
mov
or
sub
cwtl
faddl
mov
dec
not
xlat
mov
adc
sub
cmp
fistl
mov
add
and
xchg
fmull
les
jbe
jl
push
pop
mov
push
xchg
jnp
adc
sbb
adc
mov
ret
sub
inc
jbe
outsb
and
into
push
int
xchg
cwtl
aaa
sub
dec
inc
xlat
sbb
dec
into
icebp
xor
das
test
pop
mov
sub
test
fldl
lods
in
loop
xchg
test
popf
xor
push
dec
jno
jbe
loopne
fst
cmc
pop
mov
lret
adcl
ds
sbb
xchg
and
mov
sub
scas
aas
jle
inc
and
or
repnz
push
mov
loope
incl
outsb
icebp
insb
cmp
mov
sub
loopne
imul
jle
adc
xor
dec
dec
xor
jnp
adcl
aas
jnp
cmp
mov
cmpsb
mov
jmp
sbb
add
xchg
xchg
sbb
loopne
jb
int3
jnp
stos
or
dec
leave
decb
aam
or
lods
inc
mov
mov
xchg
lock
mov
int3
loope
sbb
dec
add
orl
xor
jmp
pusha
dec
mov
mov
int
cmp
push
pusha
lret
fidivl
fidivs
push
cltd
in
ss
adcb
sbb
sarb
mov
jne
xor
or
pop
push
xor
and
dec
or
js
inc
jae
cmp
xchg
jmp
fisubl
fistpl
or
aad
inc
push
mov
test
imul
push
and
xor
pop
mov
sbbl
mov
dec
push
subl
jecxz
mov
sti
push
test
push
mov
loope
ret
leave
push
and
sti
inc
imul
andl
popf
rorl
adc
or
and
and
and
xor
cmpsl
scas
dec
stc
lock
sub
mov
sub
push
in
lret
push
insl
cmp
lret
cli
loop
pop
cmp
cld
jb
xor
test
mov
dec
pop
jae
mov
inc
negl
push
stc
xchg
lcall
push
stc
mov
cld
xor
sbb
clc
cmovno
fwait
test
sbb
push
mov
insb
cmpsl
pusha
aas
ds
cmp
jmp
xorl
mov
inc
je
aas
sub
sub
add
jbe
call
sub
sbb
lods
in
jne
jmp
inc
push
push
test
adc
push
jo
mov
push
sbb
arpl
jb
loope
xchg
push
rcl
adc
add
mov
jb
scas
lahf
mov
xchg
aad
fs
shrl
add
and
push
in
sbb
pop
xchg
mov
ja
into
or
nop
fucomi
andl
rolb
jmp
push
ret
inc
das
and
inc
outsl
dec
iret
sub
in
dec
mov
cli
pusha
pop
sahf
jbe
or
pop
sahf
sar
sarl
js
fnstsw
inc
aas
mov
stc
push
aam
cmc
aas
add
sbb
fadd
testl
dec
mov
or
mov
fnstenv
adc
popa
movsl
cld
cld
fs
inc
inc
adc
sbb
mov
in
xlat
pop
sbb
gs
fidivrl
jae
lahf
adc
call
leave
int
mov
sti
cmp
cwtl
inc
xor
mov
push
and
icebp
mov
cmp
push
lcall
mov
int3
ret
push
push
arpl
into
iret
cmc
xor
and
push
inc
adcb
cmp
pushl
ficompl
push
and
scas
mov
cld
cmpsl
xorl
insb
inc
pop
mov
or
fstpl
mov
lods
in
mov
xlat
xor
cmp
jne
test
pop
mov
ja
add
lods
jecxz
cmp
or
das
addr16
xchg
mov
jecxz
and
sbb
dec
push
jo
insb
call
scas
sbb
sbb
test
out
push
push
movsl
cmp
sub
xor
out
jo
xor
jne
data16
xor
pop
mov
pop
les
sub
fs
adc
jb
mov
xchg
dec
into
cmp
inc
inc
mull
insl
enter
xor
bound
pop
xor
or
push
push
jle
cli
pusha
movsb
and
or
mov
inc
movsl
xor
jno
mov
mov
aad
mov
aam
or
fmulp
popa
cmpsb
add
ret
inc
jb
ret
fisubl
ljmp
icebp
sub
add
js
jns
push
hlt
insl
shr
push
mov
in
sub
fldcw
fmull
test
outsl
shrb
roll
sbb
adc
lcall
pop
or
jge
or
sbb
fmuls
jne
adc
leave
xor
adc
pop
stos
push
insl
lcall
jbe
pop
cmpsb
cmp
out
push
stc
leave
movsl
loop
mov
fwait
mov
push
xor
add
outsl
add
fwait
sub
xor
and
add
fdivrs
ret
out
lret
addr16
inc
aad
and
or
jp
mov
mov
xlat
or
gs
insb
or
cmp
jg
inc
inc
dec
xchg
in
lock
sub
xor
sub
das
xchg
jecxz
enter
add
and
inc
pop
sub
push
add
insl
in
ds
ret
or
dec
or
test
pop
iret
push
fcoml
sub
mov
mov
stc
cld
xchg
push
mov
mov
mov
mov
jne
mov
and
mov
lret
mov
hlt
pop
pop
pop
cmp
pushf
mov
adc
std
xor
pop
pop
les
sbb
mov
test
subb
xchg
arpl
mov
les
jb
jbe
jmp
and
cmp
push
ds
test
cmp
fwait
pop
adc
iret
enter
inc
bound
bound
push
stos
sbb
xor
or
mov
repz
sbb
imul
js
in
repnz
cmp
outsb
mov
adc
xor
add
syscall
cmp
mov
es
cmp
add
xor
and
sub
mov
fs
mov
addl
rolb
out
or
int
mov
repnz
jmp
xchg
sub
mov
push
adc
imul
int3
xchg
loope
and
dec
add
cmp
int3
adc
loopne
addr16
aas
jns
cmp
insb
mov
in
jecxz
dec
jbe
orl
ret
fstpl
jle
xchg
mov
mov
xchg
jbe
vphadduwq
test
dec
xor
lret
scas
inc
and
dec
mov
push
inc
cmp
es
cltd
adc
mov
ja
ljmp
xchg
xor
lret
and
fnstcw
cmp
jl
and
push
loope
stc
push
lea
in
jecxz
outsb
lock
pop
loop
leave
int3
push
push
repz
test
add
sahf
adc
fisttpll
and
and
loope
jge
iret
std
test
and
inc
test
mov
les
xor
fwait
mov
data16
mov
into
shll
inc
and
mov
das
imul
cmp
in
mov
inc
pop
mov
mov
ror
enter
shld
and
in
xlat
dec
and
mov
push
std
jne
sub
and
cwtl
and
and
aad
dec
cmp
xchg
shll
pop
adc
push
mov
jge
mov
incb
out
cs
inc
sub
push
xchg
je
orb
cmc
stc
jb
popf
sbb
sbb
or
pop
cmc
sbb
pop
inc
test
push
inc
enter
pusha
mov
in
dec
lcall
mov
mov
jge
push
inc
mov
mov
ja
hlt
mov
adc
xor
hlt
invlpg
mov
fcomps
es
scas
and
mov
sbb
movsl
mov
shrl
and
jb
in
push
aad
les
xchg
ss
add
xor
cmpsl
js
shlb
and
cmp
xor
mov
push
pushf
mov
gs
rcll
mov
add
int
jnp
ds
xchg
mov
lea
cmp
out
adc
adc
insb
mov
jae
jno
fldl2e
mov
in
xor
repz
sbb
imul
sbb
jmp
pop
xchg
sti
sub
test
icebp
push
inc
int3
sbb
and
and
pop
or
lea
es
mov
sub
bnd
xchg
fs
pusha
add
subb
sbb
fstpl
pop
adc
cmp
enter
cmc
rol
into
xchg
lds
scas
gs
push
int3
fldcw
dec
mov
lahf
shlb
hlt
std
jle
jge
clc
mov
cmc
inc
pusha
inc
lea
das
xor
cmp
cld
xor
jmp
gs
hlt
movsl
pusha
cs
ret
jmp
mov
jb
icebp
mov
das
sarl
inc
cltd
jge
shlb
fs
inc
fldl
stos
mov
ret
cld
sub
pop
pop
cmp
jo
adc
ljmp
pop
dec
loop
mov
cltd
sbb
in
inc
insl
inc
aas
dec
stos
push
sbb
cmpsb
fwait
xor
adc
sbb
sbb
mov
jbe
cmp
xor
mov
rcll
jno
ljmp
je
clc
dec
lea
and
push
push
popa
fmull
cli
imulb
xor
sbb
shlb
repz
mov
rcrb
pop
loopne
mov
jecxz
movsl
fldcw
pop
pop
push
cld
mov
repnz
outsl
and
pop
adc
add
addr16
cmp
mov
daa
lahf
inc
and
jo
lods
addr16
in
movsb
pop
insl
sbb
jae
pop
out
mov
sti
mov
mov
in
xchg
in
sbb
and
inc
push
imull
movsb
mov
mov
jno
cmp
popf
push
imul
cmc
cld
scas
sub
std
push
xlat
jns
inc
mov
xor
xorl
sub
dec
mov
dec
jge
push
loop
cmpsb
stc
xchg
and
xor
test
adc
pop
insb
dec
xor
adc
or
adc
dec
mov
repz
imul
cwtl
dec
lahf
sbb
mov
shll
push
sti
ret
pop
xchg
sub
dec
lods
sti
cmp
lock
mov
into
jae
cmp
push
sub
popa
mov
scas
popa
into
ds
adc
in
cli
adc
xchg
or
outsl
push
call
movsl
sar
out
call
cmpsb
les
bndldx
dec
cmp
sub
js
negb
addl
cmp
and
sti
lahf
xchg
xlat
xchg
and
popa
in
adc
and
daa
jmp
stc
ljmp
mov
xchg
add
mov
inc
fisubrs
push
popa
addl
enter
sbb
lock
stc
test
cltd
push
or
mov
outsb
sbb
mov
cmpsb
and
sbb
movsb
jecxz
mov
adc
dec
hlt
sbb
addl
fwait
and
rorl
dec
xchg
mov
int3
inc
cmpsl
add
mov
stos
and
adc
loopne
mov
pop
xchg
xor
pop
add
xor
fisubs
mov
push
out
int3
cmpsb
ss
nop
inc
scas
inc
jmp
sahf
mov
jl
add
add
ret
jmp
adc
add
rcrl
push
mov
inc
test
adc
imul
jns
dec
add
mov
fisttpl
mov
jle
or
scas
jne
cmpsl
push
test
and
mov
mov
dec
dec
pop
insl
cmp
or
in
lods
scas
pop
lods
and
jmp
mov
scas
push
lea
dec
and
push
mov
clc
mov
push
mov
mov
bound
pop
xchg
xor
clc
xor
bound
jecxz
inc
jnp
dec
in
inc
pop
push
xor
mov
pushf
push
push
lods
sub
cmc
iret
aam
lea
pop
or
rolb
rol
pop
jp
or
add
int
gs
push
dec
inc
sub
or
xchg
dec
jecxz
jmp
mulb
andb
pop
xor
adc
in
lea
mov
cli
fisttps
jg
and
sarb
imul
adc
rcrl
enter
pop
or
mov
mov
aam
in
or
xlat
sti
mov
gs
daa
dec
push
rolb
add
xchg
mov
ljmp
jnp
scas
adc
std
ljmp
or
adc
call
adc
int
cmp
pushf
cmp
loop
push
dec
xchg
es
scas
sub
cmp
imul
xchg
out
cmpsb
sbbb
lods
das
cmp
cli
ret
in
loop
addb
out
fildl
outsl
mov
pusha
mov
inc
mov
or
or
aas
inc
bound
dec
pop
sub
les
jno
jle
cld
inc
sbb
inc
movsl
cwtl
lahf
fdivrs
cmp
push
repz
push
pusha
pop
loopne
pop
clc
out
fisttps
testb
ja
jne
out
loope
xchg
shlb
push
jl
sub
nop
or
lahf
xor
into
pop
mov
stos
sti
jmp
lcall
sub
fmul
xchg
jo
fnstcw
adc
repnz
int
repz
loope
scas
adc
mov
add
nop
or
pop
sub
in
les
and
push
lret
adc
movsb
cmp
repz
jmp
push
pop
sub
xchg
daa
mov
imul
popl
or
fbld
repnz
xor
and
popf
mov
imulb
inc
mov
daa
add
jg
test
jecxz
mov
lahf
mov
xorb
stc
push
mov
push
ret
and
or
mov
leave
dec
rcrb
jecxz
es
jne
xor
divl
dec
hlt
out
lea
and
pop
jmp
and
jl
lea
xchg
mov
lahf
inc
divb
push
test
adc
repnz
lret
out
rolb
arpl
xor
lea
sti
pop
sbb
add
jbe
pop
inc
lods
push
pop
push
xor
mov
in
mov
lcall
xchg
lcall
int3
lods
xor
jl
nop
repnz
mov
push
imul
stos
pop
popa
or
inc
xor
loope
shlb
push
cmc
jae
std
and
mov
das
sarb
insb
mov
xchg
mov
or
jg
inc
sbbb
push
xor
xchg
shl
jb
xchg
popf
adc
xchg
icebp
ret
sub
std
aaa
neg
loopne
movsl
loop
jno
aad
js
mull
rol
ja
sub
mov
mov
jmp
mov
cmp
insb
lods
fdivrs
add
mov
ljmp
xor
cmpsb
insl
mov
ret
out
es
fcomi
pop
cwtl
mov
and
xor
dec
enter
in
fidivs
or
into
jne
sub
lret
int3
sub
add
sbb
pusha
es
js
or
jbe
xchg
pop
mov
xchg
and
fidivs
fsubr
or
int3
adc
sbb
sub
shll
stos
pop
and
xlat
int3
psubusw
fdivs
pop
jno
jl
loop
sbb
loopne
xorb
sbb
sbb
xchg
sti
es
je
ret
sbb
in
repz
and
loop
das
hlt
and
mov
scas
lds
xchg
lds
loopne
and
dec
test
jns
std
sbb
jnp
adc
cli
cwtl
iret
das
sti
addr16
push
jbe
inc
loopne
outsb
js
mov
jno
addr16
fisttpll
cmp
stos
outsb
cli
pop
cmc
in
dec
jmp
push
mov
imul
arpl
ss
test
or
mov
test
pop
inc
push
in
movsb
ffreep
mov
xchg
jb
mov
cld
push
xor
repz
clc
xchg
adc
cmp
faddl
pop
mov
cmp
shll
push
out
or
and
gs
and
pop
iret
jg
movsb
jns
enter
lahf
xor
outsb
leave
rolb
shlb
lcall
pop
std
lcall
cmp
xlat
icebp
loope
lock
sbb
shlb
mov
fisubl
push
pop
inc
aaa
push
mov
add
sarl
push
and
bound
fcomp
je
jge
mov
add
out
sbb
or
pop
push
imul
in
clc
or
sub
cmp
pusha
loopne
sbb
sub
or
repz
enter
call
add
dec
rcll
bound
loopne
push
clc
and
sub
adc
loopne
inc
adc
popa
lea
fistl
icebp
and
out
or
xchg
in
adcb
repz
fdivl
outsb
push
filds
push
pusha
shll
stc
mov
dec
mov
cmp
and
pop
jecxz
loope
jecxz
mov
add
jno
push
pop
push
xchg
pop
inc
adc
xor
add
inc
xor
xchg
or
push
fnsave
jle
cmp
push
bound
stos
sbb
dec
xchg
inc
or
cwtl
rolb
out
mov
mov
inc
cs
out
je
lahf
test
fwait
cmp
loop
add
in
cmpsb
dec
xchg
adc
mov
lock
and
lahf
cmp
test
push
pop
sti
pushf
mov
arpl
rolb
push
dec
scas
push
out
mov
jp
sub
or
xchg
mov
fcomps
xor
sbb
push
adc
sub
mov
or
dec
mov
rolb
pop
inc
lods
movsb
stc
fcmovnb
test
shlb
fs
lock
inc
stc
je
pop
enter
stos
jecxz
sti
adc
pop
hlt
dec
sbb
cmp
inc
cmp
jnp
loopne
jecxz
mov
jae
pop
leave
pop
and
test
inc
push
repnz
add
cli
pop
clc
jecxz
test
gs
fmuls
cmp
iret
add
je
loop
jg
lret
ret
rcl
fldl
outsb
inc
push
out
int
xor
lahf
adc
pop
cmpsl
mov
cmpsl
push
mov
fldt
xchg
cmpsl
clc
fwait
sbb
sub
scas
jp
sbb
rcrl
aas
or
xchg
xor
shll
mov
lods
stos
ljmp
xor
lods
or
sbb
cmp
enter
mov
pop
ret
in
mov
pop
pop
sbb
in
fldenv
rol
sbb
and
xchg
call
mov
add
hlt
in
outsb
cltd
cmp
add
fs
aad
xor
xchg
and
scas
xor
loop
dec
push
xchg
cmc
mov
jmp
and
cvttps2pi
push
push
xchg
jmp
lcall
add
xchg
adc
pusha
cmpsl
lret
rclb
adc
mov
rolb
fs
mov
pop
movsb
add
cmp
cs
mov
and
inc
xchg
pop
loopne
cld
adc
ljmp
in
push
les
jbe
pop
fimuls
in
aaa
mov
xchg
out
jnp
adc
mov
loop
push
push
inc
into
int3
adc
push
test
pop
lods
xor
adc
inc
push
pusha
in
pop
popa
ljmp
jnp
xchg
cmp
jp
xorb
pop
pop
rorb
mov
clc
dec
add
dec
aam
xchg
and
push
xchg
mov
pop
and
int3
ret
lods
xor
mov
stos
in
xchg
in
inc
fists
and
pop
pop
mov
jne
mov
popf
cmp
push
ss
das
daa
sub
or
movsb
mov
sub
add
or
xor
jae
popa
mov
sbb
mov
loop
rcrb
push
imul
arpl
push
rcrl
in
aad
jmp
scas
and
jecxz
pop
and
aaa
stos
adc
leave
push
lret
add
xor
jb
and
xchg
outsb
push
and
das
dec
stos
out
sub
push
push
movsl
testl
mov
xor
push
mov
scas
inc
jg
cmp
mov
jno
xlat
outsl
lods
test
jp
mov
lock
lret
aad
sub
xchg
gs
popf
push
push
push
arpl
xchg
push
popf
js
fisubrl
sbb
pop
adc
test
shrb
cmpsl
cs
mov
fwait
loope
jnp
push
scas
rcrl
rcll
mov
inc
pop
in
shll
pop
pushf
mov
mov
mov
mov
pop
dec
cmc
xchg
adc
adc
fidivrs
lods
cmp
sahf
test
jle
movsl
xchg
dec
mov
push
add
cmpsl
lret
add
data16
int
stos
pushf
in
jg
adc
pop
pop
cmp
mov
xor
inc
cmp
popa
iret
and
hlt
fidivrl
int3
enter
xlat
pop
inc
jae
xor
das
out
sub
ljmp
pop
shll
xor
add
xor
fwait
int
pusha
repnz
mov
cs
mov
and
sbb
xor
adc
sub
pop
and
xchg
dec
and
push
sub
sub
hlt
insl
mov
and
stos
jp
stos
in
das
lahf
cld
js
jne
dec
xchg
xchg
mov
cmc
pop
call
dec
pop
pop
inc
jle
jo
fiadds
sub
adc
mov
pop
mov
imul
lods
hlt
xchg
jl
cmc
addr16
xchg
inc
imulb
xchg
mov
or
and
dec
aas
rcll
lahf
xor
pop
std
push
cmc
cld
mov
cwtl
push
sahf
in
pop
ds
cmp
pop
das
add
int
imul
push
jle
sbb
or
fsubrs
mov
sti
leave
jecxz
fcoml
push
add
adc
icebp
pop
adc
aas
jns
dec
data16
dec
pop
ret
fwait
jns
dec
scas
cmc
test
imul
jecxz
sti
les
call
and
mov
mov
fadd
pop
fldcw
mov
bound
mov
aad
loop
insl
ja
mov
inc
sub
outsl
jecxz
aam
hlt
push
fwait
sbbl
push
dec
pop
or
cmp
jo
pop
sub
imul
cmp
mull
sahf
add
push
enter
jg
outsl
imul
leave
mov
subl
cmp
mov
fldt
sub
and
mulb
jmp
pushf
mov
cmc
fisubrs
sbb
stc
jl
mov
dec
jns
push
addr16
mov
dec
leave
xchg
test
cltd
xor
int
cmpsb
inc
and
call
sub
sarb
aad
mov
push
sub
and
fsubrl
xchg
inc
out
daa
add
mov
jns
sub
fisubrs
dec
test
js
lret
js
sub
test
jge
fsubl
sub
or
fs
jmp
aad
jo
mov
add
mov
jp
xor
popf
dec
ljmp
es
aad
push
mov
inc
jg
aaa
mov
shll
pop
popa
sarl
mov
pop
sub
or
insl
xor
cmp
xor
int
mov
inc
or
stc
add
stc
dec
mov
xor
repz
iret
add
fiadds
inc
jmp
pop
adc
daa
dec
adcb
and
btc
dec
out
cmp
pop
popa
cld
inc
xor
mov
push
fsub
sbb
daa
sbb
pop
mov
xchg
jns
push
sbb
or
mov
cs
stos
xor
into
xor
sbb
sbb
repz
dec
sub
dec
push
jo
test
push
inc
mov
pop
out
popf
adc
mov
mov
jo
lock
sarl
or
rclb
inc
vcvttpd2dq
inc
int3
adc
mov
das
sbb
adc
fstl
cmp
mov
or
pop
inc
mov
cmpsl
test
sbb
subb
gs
out
imul
test
fcomp
in
imul
and
xchg
lds
outsb
cmpsl
dec
sub
jl
ljmp
sub
push
push
jns
inc
xchg
mov
clc
sti
nop
mov
insb
ds
mov
push
cmp
and
dec
hlt
mov
sub
sub
int
adc
mov
fnstcw
sbb
sbbb
jbe
cmp
sbb
idivl
jmp
adc
push
adc
dec
pop
or
sbbb
das
fxch
fists
test
lcall
cli
sbb
negb
and
mov
outsb
in
pop
or
mov
vmovsd
mov
hlt
sti
lret
cmp
aaa
sbb
cmpsl
roll
sub
pop
xchg
test
jne
sarl
daa
test
sbb
arpl
sbb
xor
in
call
ret
push
push
int
mov
sbb
xor
cmpsl
adc
loopne
enter
xchg
or
jae
ss
adc
test
adc
stos
cmp
imul
add
pop
push
out
in
xchg
mov
add
mov
in
mov
jae
xchg
or
ds
repnz
ljmp
and
cli
stos
int3
in
push
jo
iret
sarb
data16
mov
cld
add
scas
mov
push
jecxz
std
push
and
xor
add
and
test
fistl
mov
jnp
dec
daa
mov
pop
jns
loop
nop
xchg
call
mov
or
repnz
imul
leave
insb
xorb
cmp
xor
mov
cli
das
test
in
dec
lret
add
fadds
rol
jbe
sbb
push
data16
rcrl
adc
mov
bound
xor
int3
cli
mov
pusha
jnp
or
fwait
or
imul
pushl
mov
push
or
add
and
imul
inc
xlat
scas
fsubrs
add
leave
sbb
push
inc
imull
sub
popa
stc
xchg
mul
and
lret
mov
push
pusha
sbb
std
loop
out
int3
fsubl
xchg
or
loope
fs
cmp
xor
mov
stc
ljmp
or
mov
sti
sbb
outsb
stos
loop
in
lods
xchg
mov
push
data16
xor
inc
and
inc
push
push
out
ds
sbbl
icebp
fdivrl
sub
or
mov
fidivrs
je
and
rcr
pop
loopne
pop
inc
lods
loop
mov
mov
in
nop
shlb
popa
jnp
or
mov
adc
jp
xor
lahf
mov
xchg
dec
jne
movsb
xchg
push
mov
adc
daa
daa
jno
mov
sahf
mov
mov
stc
or
mov
out
ret
mov
lock
cmpsl
loop
push
inc
in
fdivl
mov
add
imul
iret
cmp
jecxz
pop
and
or
sbb
loop
mul
xchg
ds
xor
jge
sub
insl
sbb
loopne
jle
mov
clc
movsl
into
jmp
or
jnp
sub
dec
andl
insb
sbb
insl
out
test
lcall
pop
orl
hlt
pop
push
jb
rorl
mov
jno
rolb
push
loope
movsl
sub
xchg
into
lods
imul
fistps
mov
divl
xchg
cmpsb
and
add
ljmp
mov
add
cmp
xchg
rclb
rol
cmp
lods
leave
int
dec
sub
fmull
pop
push
out
pusha
shrb
insb
add
xchg
in
mov
dec
aaa
push
pop
loopne
sti
mov
hlt
shlb
andb
jle
popa
pop
arpl
shl
das
sahf
cmp
stc
cmc
pop
js
cmp
cltd
inc
sub
adcl
addb
in
pop
adc
mov
fstl
les
push
aam
jnp
fcmovb
lods
repz
mov
jle
dec
movsl
sbb
pop
push
bnd
sbb
sbb
addb
les
adc
and
adc
shrb
mov
daa
addr16
in
addr16
jg
pop
ja
mov
add
aas
sub
jle
xor
adc
mov
or
mov
fsubr
jno
addr16
adc
and
and
add
les
sbb
jno
out
jg
sbb
movsb
pop
push
popa
mov
and
cmpl
out
aaa
call
pop
adc
xchg
mov
push
cmp
les
fstpl
inc
or
lahf
aaa
jl
test
cmc
pop
fldl
std
daa
inc
or
test
pop
mov
inc
rolb
push
loopne
cmc
sbb
das
comiss
es
sbb
popf
insl
pop
inc
out
inc
das
ficomps
and
jb
pusha
add
cmp
stos
dec
cli
jmp
push
fnstenv
sbb
dec
hlt
out
sub
pop
aad
clc
cmp
xor
fdivl
in
inc
std
add
mov
add
xor
and
and
ret
ss
and
jmp
pop
mov
imul
test
aas
mov
jnp
sbb
or
jns
jae
pop
pop
aam
jmp
jmp
cmp
es
mov
idivl
xchg
cs
sub
mov
xchg
test
lret
jnp
sub
test
shl
add
lahf
popa
pop
addl
jle
ds
mov
fs
cmpsl
adc
sub
cli
imul
daa
cmp
in
or
sub
out
pop
ret
add
xor
push
or
mov
cltd
pop
xchg
cmp
scas
test
pop
fsubrs
add
mov
pop
mov
or
inc
outsl
push
lods
jecxz
mov
or
ds
lcall
jae
cmp
mov
jnp
cmp
cmp
jo
jmp
or
add
aam
jmp
xor
and
out
shlb
xor
shrl
fwait
push
xchg
aad
ret
les
shrl
je
cwtl
pop
mov
lahf
pop
insl
jge
out
dec
ljmp
jo
call
mov
xchg
mov
fcomps
jg
loop
mov
jo
sbb
add
sti
fcmovbe
sti
popf
scas
adc
mov
out
arpl
int
sub
aad
and
pop
int3
jge
sub
sub
pop
xor
xor
dec
std
xchg
or
add
cmp
add
dec
jb
into
xchg
scas
mov
cld
in
fst
sahf
mov
and
cmp
imul
jo
gs
mov
mov
arpl
dec
xchg
and
sbbl
cmp
sbb
push
mov
fcompl
andl
mov
outsb
les
lret
push
out
dec
ficompl
cmc
mov
mov
xchg
rcr
movsb
lock
das
stos
insb
jl
add
lret
inc
rcl
xlat
mov
and
xlat
test
pusha
movsl
scas
dec
xchg
xchg
mov
jge
dec
movsb
or
int3
cmp
mov
xor
mov
mov
mov
fstl
nop
mov
fwait
jle
inc
and
rorl
inc
inc
sub
dec
dec
es
inc
test
mov
cmc
aaa
add
jmp
and
aad
les
jns
nop
lods
pop
js
mov
lcall
inc
sahf
shr
adc
call
mov
js
xor
arpl
mov
cmp
hlt
imull
xchg
pop
mov
mov
sbb
sbb
shlb
lods
push
je
cmp
xchg
movsb
mov
dec
mov
mov
ja
jp
xchg
jl
cmp
mov
mov
pop
outsb
jne
pop
add
adc
mov
lret
mov
fstpl
cmp
xchg
jge
frstor
jb
fs
dec
push
int3
jo
out
mov
xchg
sbb
pop
je
sbb
fldl
add
shll
aad
pop
adc
mov
inc
ret
out
es
int
int3
mov
mov
xchg
inc
cmp
mov
pop
jno
lret
pushf
xchg
daa
imul
xchg
enter
data16
mov
sub
xchg
popa
sub
jge
xor
nop
clc
jp
imul
js
jno
hlt
cmp
xor
sub
add
and
cmc
mov
jns
mov
jge
mov
dec
clc
fneni(8087
pop
jo
xchg
cmp
and
mov
lock
xchg
xlat
dec
inc
jmp
or
sub
and
in
jne
sbb
orb
xchg
mov
out
xchg
push
inc
dec
js
fdivrs
sub
cs
cmp
pop
xchg
fmull
stc
or
dec
out
stos
and
cmc
nop
dec
xor
pop
je
xor
imul
out
data16
dec
mov
lods
loope
loope
inc
jle
add
sub
mov
dec
jge
mov
leave
cmpsl
sbb
push
lret
scas
mov
mov
fildll
pop
cmc
add
ret
rorl
rorb
pop
and
sub
addr16
pop
cmpsl
pop
sub
pushf
ficoms
imul
fcmovnu
int
xchg
pop
aas
sbb
cmp
mov
xchg
mov
mov
popa
sub
sbb
rolb
jb
cli
cmp
xchg
jbe
cmpsb
xor
sub
nop
push
pop
ret
enter
popa
cmpl
fcomps
push
shll
pop
sarl
sub
or
faddp
xor
cli
adc
sbb
mov
rolb
pop
mov
fsubrp
es
mov
inc
push
sti
repnz
dec
in
les
xchg
adc
sbb
lods
test
icebp
shlb
push
and
jge
mov
mov
mov
stos
popa
lret
jmp
or
push
movsl
jle
les
jge
stos
xor
push
cs
ficoms
pop
imul
pop
rcll
mov
xchg
neg
lahf
test
push
jp
mov
iret
arpl
jmp
call
in
xchg
or
mov
aad
sti
loope
inc
adc
mov
movsl
sub
cli
fistps
mov
mov
mov
outsl
jg
inc
mov
fiadds
cmp
cmpsb
cmp
loopew
mov
loopne
gs
xor
rcrb
cs
shll
or
lcall
mov
imul
dec
movsl
rorb
inc
out
hlt
test
arpl
es
int
inc
mov
pop
loope
push
cmp
jne
jae
ror
dec
aad
and
mov
shrl
sub
jbe
fcmovne
mov
notb
aad
xchg
inc
sahf
mov
dec
mov
outsl
lods
mov
push
shll
mov
mov
pcmpgtd
adc
stos
out
cmp
dec
gs
mov
imul
and
mov
bound
aas
mov
mov
jl
xchg
test
rolb
jne
push
adc
rclb
mov
and
les
add
lea
dec
decl
mov
mov
fcompl
shl
out
mov
imul
scas
jae
movsb
in
icebp
adcl
test
cmp
cld
inc
out
bound
ds
ret
aam
xchg
nop
fistl
fcompl
and
shlb
cmp
mov
lods
repz
push
das
out
scas
adc
add
jmp
fs
fstps
daa
movsl
lcall
stos
inc
sbb
stc
add
loopne
divl
mov
mov
incl
cmpsl
fs
lcall
push
jmp
fadd
adc
jle
mov
pop
xchg
data16
hlt
adc
push
sub
enter
stos
cmp
dec
pop
lock
xor
pop
sbb
dec
js
mov
cmc
mov
xchg
js
inc
repz
pop
xchg
ds
mov
mov
cmp
sbb
pop
sti
lea
int
push
mov
cmp
pushf
cmpsb
jp
xor
fs
push
mov
sahf
call
sub
out
pop
mov
pop
mov
lds
adc
pop
cmp
lret
int3
les
sbb
push
xor
std
adc
cmp
pusha
jmp
mov
repz
shll
or
xlat
pop
sub
roll
fistpll
mov
fwait
mov
sbb
xor
mov
jg
inc
pushf
xor
cs
icebp
ljmp
mov
sbb
cmpsl
inc
rcrb
mov
cld
int3
lcall
loope
data16
push
and
aad
sbb
adc
loopne
mov
cmp
mov
vmovapd
push
cwtl
add
fdiv
xchg
push
push
add
xchg
jg
xchg
cli
notl
jg
mov
cmp
std
in
cltd
push
jg
bound
clc
lock
jne
in
push
inc
inc
sbb
scas
inc
adc
push
stos
rcrl
xchg
stos
xchg
jbe
cmpsl
jbe
leave
push
enter
mov
dec
test
fidivl
shl
dec
in
negl
or
andb
aad
inc
fstpt
adc
push
xor
add
daa
cmp
pop
lahf
pop
cmp
mov
pop
sti
std
sahf
scas
dec
cmpsb
pop
mov
dec
out
xchg
push
imul
ss
test
adc
lcall
setge
push
or
jae
jne
mov
outsl
sbb
xor
or
mov
stos
sub
mov
and
stos
outsb
movsl
mov
movsb
outsl
popa
cmp
int3
ds
xchg
sbb
cmpsl
jns
inc
cmp
rcl
movsl
or
xchg
outsl
int
lahf
push
insb
lods
lret
add
les
pop
outsl
pop
or
or
mov
mov
fwait
mov
loopne
fisttpl
mov
enter
out
fimull
xlat
xchg
inc
ficoml
je
aam
cltd
out
mov
test
jae
xchg
jo
repz
fldl
inc
and
loop
and
sbb
jl
jl
mov
mov
xchg
xor
popf
xor
lods
jl
xchg
subl
xor
push
mov
test
sub
sub
jno
in
iret
fdiv
or
inc
insl
push
int3
jnp
imul
pushl
mov
stos
repz
pop
icebp
xlat
pop
mov
cmp
enter
test
xor
enter
mov
das
insb
insl
dec
dec
xor
push
sbb
sbb
inc
leave
push
call
pop
out
sub
repnz
xor
fsubrp
xor
add
daa
fadds
or
pop
shlb
sbb
push
inc
push
add
mov
fcomip
or
and
mov
fidivrl
ljmp
sub
pushf
inc
xlat
mov
jge
popa
jo
adc
cmp
dec
test
gs
cltd
inc
mov
push
subl
dec
fdivrl
lret
push
aam
icebp
lret
aaa
xlat
add
js
dec
push
pop
outsl
and
popa
movsb
pop
and
mov
pop
pop
lcall
push
jmp
push
into
inc
movsb
lcall
aaa
lea
mov
dec
loopne
cmpsb
fwait
sti
xor
inc
in
imul
jl
sub
aaa
in
and
dec
jg
loope
adc
imul
and
jl
ficoms
jecxz
cltd
mov
and
jne
inc
shll
push
lahf
jns
adc
sbb
andl
aaa
add
cmp
cs
jl
js
mov
jno
dec
xchg
cmp
pop
out
into
in
dec
cmp
addr16
fsubs
rol
mov
and
rcrb
pop
icebp
lock
and
or
stos
call
jmp
sub
mov
popl
data16
cmp
addr16
repz
mov
cltd
cmp
cmp
push
ss
lds
jb
xchg
mov
pop
loop
adc
lret
inc
cmp
jle
shll
sbb
out
sti
cmp
mov
and
divb
lret
xchg
insb
inc
pushf
xor
pop
jmp
and
mov
pusha
fwait
outsl
mov
sbb
and
inc
imul
stos
jnp
fwait
dec
sbb
imul
lahf
ljmp
ret
fwait
xchg
push
cmc
iret
jns
push
mov
in
inc
int3
xchg
sarb
pop
jno
or
mov
fdivs
stos
scas
sub
addl
pusha
les
inc
xor
pop
and
dec
mov
inc
stc
fwait
and
sub
movsb
inc
pop
jle
and
mov
mov
jmp
pushf
cmp
es
adc
les
add
mov
push
jnp
xor
pop
fnstsw
test
mov
insl
je
jnp
xchg
dec
lock
movsb
lahf
mov
dec
pop
orl
sbb
inc
fidivl
mov
or
in
adc
adc
cmp
out
divl
and
add
inc
mov
mov
pop
jbe
mov
jl
push
inc
inc
aad
arpl
mov
addb
pop
mov
out
mov
lret
mov
mov
sbb
pushf
jns
fisubrs
stos
jne
outsb
cltd
lods
imul
test
jg
jo
aad
inc
xor
dec
mov
fwait
xlat
pusha
rcrb
fldt
fistpl
mov
aam
mov
cmp
iret
and
sub
mov
rorl
in
and
xchg
jp
in
mov
in
movsl
orl
shll
cld
xor
lcall
test
sahf
push
adc
mov
in
mov
loopne
inc
hlt
cmpsb
ret
mov
sarl
inc
mov
scas
adc
jle
stc
jne
jbe
push
into
icebp
or
mov
mov
out
jo
mov
cli
dec
out
lret
pop
pusha
clc
xor
xchg
sbb
dec
movsl
lahf
out
sub
leave
xchg
in
lea
mov
test
fildl
adc
jne
sbb
iret
movsl
loopne
mov
pop
push
rolb
repz
xor
xchg
aam
dec
ljmp
add
and
ds
mov
add
jl
pop
pop
push
or
mov
daa
sbb
lahf
mov
pop
or
imul
movsl
xor
add
xor
testb
pop
mov
dec
cld
mov
popa
ret
and
pop
in
out
push
push
pusha
jbe
cmp
nop
sti
xor
push
pop
xlat
and
popa
rorb
in
call
adc
mov
mov
sbb
pop
dec
fadd
cmp
shl
test
aad
cmp
je
mov
int
inc
mov
add
sbb
ds
fst
push
iret
mov
dec
leave
aad
movb
pop
in
sub
push
xchg
push
std
movsl
icebp
cmpsb
sar
gs
test
subb
jae
mov
lahf
repz
int
add
inc
icebp
loopne
outsl
adc
mov
add
fchs
call
xor
stos
call
mov
aad
ja
mov
test
cmp
jno
sti
add
xor
mov
movsb
inc
mov
inc
xchg
stos
add
lds
in
jno
and
ret
push
roll
inc
xor
adc
fildll
mov
add
pop
xchg
dec
cmp
add
and
add
cmpsl
mov
inc
sbb
cmp
rcl
dec
inc
xor
int
daa
pop
mov
lea
cmc
lret
or
and
adc
or
roll
iret
xchg
aas
shll
lcall
jmp
scas
xor
push
and
and
pusha
fdivrp
adc
rorb
call
add
adc
mov
or
and
inc
divl
mov
mov
mov
lret
imul
jns
dec
jae
lds
mov
xchg
xchg
arpl
push
fs
int
aaa
mov
lret
mov
data16
add
pop
adc
xor
cmp
test
shrb
fisttps
jl
xor
add
mov
scas
mov
mov
xchg
gs
xchg
inc
lods
sahf
jbe
and
mov
lods
in
mov
jmp
xor
cld
jnp
dec
shll
mov
sbb
movsl
xor
insl
fcompl
and
sub
sbb
sub
int3
push
mov
aas
cltd
or
stos
ljmp
inc
pop
hlt
inc
insb
jno
idivb
push
pcmpeqw
fbstp
roll
cld
sbb
jecxz
jmp
sub
mov
mov
lds
sub
mov
mov
mov
insl
je
jl
dec
xchg
movsb
mov
inc
jno
frstor
lret
movb
inc
pop
addr16
jge
lea
dec
mov
fcompl
cmpsb
pop
jmp
pop
add
mov
mov
xchg
notl
into
adc
or
adc
stos
nop
jmp
sbb
cmpl
pop
jmp
subps
add
and
lret
out
cs
and
ret
mov
jle
int3
or
rorb
add
jmp
pushf
lcall
pop
xor
mov
cmp
mov
inc
outsl
mov
push
lds
popl
lahf
xor
pop
push
jns
mov
or
or
or
mov
pop
pop
cld
subb
in
push
int3
push
xchg
pop
push
into
out
or
negb
pop
xchg
push
mov
xchg
add
ret
inc
pop
cwtl
adc
hlt
cltd
adc
jle
inc
push
jg
outsl
lea
lock
sbb
aaa
test
and
fdivrl
fisttpll
std
out
pop
sbb
test
arpl
test
mov
xlat
inc
cmp
outsb
arpl
js
nop
loopne
pop
insb
es
sbb
dec
pop
popf
xchg
jmp
mov
sbb
xor
lret
add
xchg
cld
cli
sbb
fsubrs
test
stos
inc
mov
pop
cltd
popf
das
xor
inc
sbb
arpl
into
xchg
pop
insl
add
add
dec
test
cwtl
and
sub
lret
std
aaa
sbb
mov
into
rcr
inc
ret
push
repnz
xor
in
leave
imul
dec
dec
sti
push
adc
data16
xor
jge
sbb
ret
push
or
mov
popa
rclb
stc
addb
jecxz
bnd
mov
pop
inc
or
pop
ret
ja
scas
mov
cmp
pop
jbe
sbb
in
arpl
int3
jno
imul
add
xor
out
or
sub
jl
push
xchg
bound
push
inc
rcll
jbe
mov
xchg
jno
dec
lea
out
push
inc
in
pusha
ret
pop
psubsw
shl
xchg
out
pushw
outsb
lret
filds
movsl
addr16
jno
icebp
sub
and
jecxz
jns
dec
push
lea
jge
jmp
call
ds
sti
rcrl
lahf
out
jae
cltd
outsl
xor
aaa
sub
cmpsb
loop
std
addl
push
or
ja
in
sub
sbbb
rcrb
mov
cmp
inc
push
repz
lods
stos
add
dec
into
sub
jne
adc
xor
pop
jno
ss
dec
inc
sbb
sbb
das
push
dec
clc
test
inc
aas
stc
addr16
push
fnsave
stos
mov
mov
out
clc
push
add
jg
bound
dec
cmpsb
or
inc
xor
sub
sbb
fwait
mov
fisubs
mov
jmp
aad
sub
ja
movsb
hlt
sub
out
dec
sbb
mov
add
test
out
push
loop
xacquire
push
in
sbb
mov
fcomp
cs
add
loope
jno
cmpb
push
xchg
mov
add
ret
add
test
and
out
int
inc
sahf
jne
mov
pusha
je
mov
mov
add
call
push
mov
dec
call
mov
and
cmp
push
jne
pop
movsl
push
test
jl
mov
adc
ljmp
mov
pop
and
mov
add
jl
push
into
dec
add
pusha
rorb
push
cli
das
or
xor
popf
mov
je
jmp
sub
mov
clc
dec
xchg
inc
jo
imul
adc
and
xchg
inc
lds
mov
loop
mov
pop
fidivrs
cli
in
cmp
jl
and
loopne
xor
insl
sub
cmc
dec
fs
ja
push
adc
add
mov
xor
lea
dec
aaa
inc
mov
arpl
nop
lea
testb
push
ja
lret
pop
shlb
or
lock
scas
sbb
pop
pushf
mov
aam
rcll
xchg
jg
pusha
out
jge
sbb
inc
xchg
mov
imul
repz
idivl
roll
adc
fisubrs
pop
push
cmp
jle
test
std
xor
stc
iret
adc
loope
cmc
jecxz
das
mov
push
arpl
xchg
repz
js
into
xchg
js
subb
cmp
cmp
sub
and
lcall
movsl
cmpsb
imul
rorl
cltd
cld
sbbl
cmp
pop
jno
jae
rorb
and
outsb
adc
mov
push
mov
mov
cmc
jle
push
imul
sub
es
push
sub
cmp
mov
jae
mov
daa
mov
fisubrs
movsb
lods
pusha
test
mov
lcall
outsb
add
add
push
out
lea
stos
xor
inc
and
test
pop
imul
xchg
dec
lods
push
out
or
jmp
test
xchg
stos
xor
dec
and
push
sahf
fldl
inc
lea
dec
std
frstor
or
cmp
in
pop
sbb
popf
xchg
jl
repz
push
aad
mov
inc
ja
icebp
add
mov
adc
pop
add
popf
cmp
and
pop
jmp
hlt
sub
repnz
jnp
stc
lahf
fs
mov
stos
inc
popf
pop
pushf
mov
sub
xor
adc
cmp
sbb
mov
aad
out
gs
pushf
xor
je
iret
outsb
mov
stc
sub
fucom
pop
shl
pop
dec
fdivrp
jae
mov
or
add
inc
pop
jbe
inc
push
push
add
dec
and
aaa
addr16
mov
push
push
mov
mov
or
shlb
xlat
push
jp
pop
bound
inc
jp
and
filds
aam
mov
out
jne
or
add
jnp
sbb
sti
pusha
cmp
test
mov
lods
mov
or
jae
push
jbe
ret
jne
adc
jg
push
mov
mov
add
loope
sub
xlat
stos
cmpsl
lahf
lds
aad
or
lods
fcoml
add
pop
mov
push
xchg
movsb
xor
stos
mov
jb,pt
stc
xchg
rorb
push
adc
mov
inc
xchg
and
and
bound
nop
rcl
push
xchg
movsb
jno
mov
sbb
pop
iret
sub
es
scas
jecxz
cltd
js
inc
pop
push
mov
or
ret
shrb
add
out
pop
mov
fmul
sub
repz
mov
fwait
shll
lock
jg
int
addr16
test
inc
ret
inc
mov
test
outsb
iret
scas
mov
lods
lods
push
mov
mov
repnz
loopne
sub
sub
insl
popf
push
or
mov
fldenv
jo
fnsave
adc
jns
cmc
enter
xor
stos
or
inc
mov
dec
sub
add
or
sbb
lods
mov
jns
or
in
inc
push
mov
mov
es
pop
xchg
cld
sbb
jae
sbb
push
push
adc
and
mov
aaa
ljmp
sub
mov
cli
aad
fpatan
push
xchg
in
outsl
cs
mov
in
jo
cmpsl
loope
dec
mov
dec
jb
xor
pop
mov
lea
dec
mov
jo
es
dec
sub
leave
push
cwtl
imul
cmp
sbb
sti
mov
in
in
f2xm1
shll
jnp
test
outsl
dec
mov
inc
xorl
sbb
mov
lock
int
xchg
test
rclb
xchg
pop
in
pinsrw
inc
mov
cmp
ret
test
cmp
mov
sub
or
test
dec
pop
mov
fwait
or
movsl
jno
or
movsl
mov
dec
cmpsb
mov
mov
lods
cmp
ret
or
clc
lods
adc
daa
dec
je
daa
sbb
cwtl
xor
orb
fwait
cmp
cmp
lock
mov
push
jbe
dec
mov
jmp
jbe
in
aas
mov
mov
in
movsl
subb
sub
out
popa
push
out
push
push
sbb
mov
pop
or
mov
or
mov
xchg
jo
push
mov
test
adc
mov
jne
int3
pop
push
jae
or
jb
sub
or
jmp
dec
mov
adc
cmp
jno
fs
ds
shlb
into
cmp
fcoms
push
mov
mov
filds
lahf
fwait
sbb
sub
outsb
les
add
scas
lret
cmp
imull
jbe
xor
wrmsr
je
or
scas
mov
addr16
out
fwait
sub
int3
cltd
repz
xchg
and
cs
dec
jg
sub
insb
in
jne
sbb
fcomp
xchg
mov
and
lods
orl
iret
pop
sbb
push
or
into
jmp
iret
push
movsl
in
sub
ds
push
sarl
cmp
xor
outsl
cmp
insl
mov
dec
cs
pop
mov
add
mov
adc
pop
loop
push
out
iret
xlat
out
hlt
je
dec
cmc
mov
clc
outsl
cmp
jp
int
or
out
push
stc
pop
xor
cmpsl
adc
dec
fimuls
dec
mov
nop
and
dec
idivl
shll
mov
pop
xor
push
in
mov
push
pop
js
push
xchg
xor
pop
push
dec
mov
sub
xchg
xchg
ret
and
mov
push
insl
mov
inc
aad
cmp
lahf
inc
mov
mov
jo
pop
mov
xchg
stos
lea
push
dec
xor
add
push
imul
inc
adc
jno,pt
sub
bnd
pop
cmp
sbb
mov
cmc
jnp
lods
imul
clc
xchg
repz
jmp
repnz
mov
add
lea
aam
dec
outsl
rcr
rorl
jp
inc
out
dec
insl
js
aad
jo
jg
fcomip
pop
lahf
mov
daa
cmp
pop
jmp
imul
loope
out
incb
and
js
aam
cwtl
repz
xor
pop
mov
jae
mov
lcall
mov
sti
xlat
in
pop
enter
mov
fisubrs
cmp
jnp
and
cli
aaa
and
cmpsb
mov
pop
xor
inc
sub
mov
roll
test
push
stos
call
insb
sbb
gs
inc
dec
mov
xor
loopne
insl
clc
mov
push
xchg
or
stos
popf
sbb
mov
add
aas
iret
xchg
sbb
or
adc
cli
adc
pop
pop
pusha
mov
js
into
jae
cmp
lret
lock
cmp
out
pushf
pop
in
jne
push
addr16
inc
or
repnz
jae
push
cmp
or
cld
or
das
xor
sbb
xchg
fwait
call
fucomip
or
mov
outsl
gs
inc
call
jb
mov
movsb
sub
mov
mov
lea
inc
pop
arpl
jo
mov
ds
pop
repnz
xchg
test
dec
push
mov
repnz
adc
push
add
test
cli
pop
mov
mov
scas
mov
jb
in
jl
int3
inc
sarl
fisttpll
jle
or
daa
incb
push
arpl
sub
sbb
adc
enter
cmp
xor
inc
aam
push
andb
loopne
cmp
xchg
andl
xchg
in
test
add
in
xchg
sti
cmpsl
pop
roll
cmpb
int
mov
movsb
movups
push
je
sub
data16
sbb
roll
ret
adc
iret
xchg
rcll
scas
push
jnp
cmpsl
adc
cmp
xlat
cmp
xchg
fld
cmp
push
push
testb
push
inc
popa
imul
cmp
sub
push
lahf
inc
adc
jo
rcll
sbb
ja
pop
cltd
test
rorl
ja
xlat
xorl
addr16
jns
loopne
jno
adc
mov
subb
adc
std
test
mov
pop
fmuls
addr16
adc
dec
and
das
and
jno
mov
sti
xchg
and
xchg
add
out
mov
or
stos
push
out
test
adc
fwait
xchg
jae
or
daa
clc
dec
mov
inc
inc
insb
pop
cmp
xchg
sbb
int3
xor
scas
push
ret
into
test
inc
xchg
lret
mov
push
jecxz
sub
lcall
jno
imul
xchg
in
cld
cli
scas
jle
leave
inc
inc
xor
or
xor
pop
dec
pop
xchg
int3
xor
or
shrb
lcall
adc
lods
test
add
cmp
aam
outsb
in
mov
ret
cld
jmp
aaa
ret
stos
test
and
or
push
repz
stos
jp
jbe
inc
cli
push
mov
dec
stos
pushf
outsb
dec
les
test
jb
pop
push
lret
dec
scas
xchg
sub
rolb
das
mov
test
cmp
pop
push
bound
jge
in
pop
or
testb
orb
jns
mov
mov
xchg
cld
dec
shll
jl
loope
push
sbb
push
test
mov
mov
push
in
cli
mov
xchg
ficompl
dec
inc
pop
insl
xlat
stos
mov
add
fwait
icebp
mov
inc
pop
xchg
push
ss
cmpsl
aam
not
rorb
xchg
pop
sbb
and
pop
push
jle
push
mov
xor
or
bound
int3
sub
fldt
mov
ja
mov
sahf
insb
leave
jmp
inc
adcl
inc
mov
in
out
sbb
cmp
dec
in
jne
dec
out
xchg
jmp
imull
sbb
push
sub
adc
mov
xchg
push
loop
mov
adc
mov
cmpsb
inc
cmp
adc
push
jge
xchg
fwait
scas
lcall
adc
mov
mov
int
sbb
ss
js
mov
shrb
mov
ss
leave
sub
inc
sti
dec
loopne
fiaddl
leave
dec
mov
pop
pop
cmp
enter
cmp
repz
mov
lods
mov
inc
scas
outsl
cmp
jge
xlat
mov
cmp
mov
and
push
xchg
jmp
bound
imul
xchg
fcmovb
ficomps
sub
stos
lcall
jge
std
lret
or
xchg
pop
repnz
mov
cmp
cwtl
add
or
pop
ja
sub
inc
or
call
imul
decb
push
dec
sbb
sbb
mov
or
data16
es
push
inc
mov
inc
add
xlat
pop
test
add
push
inc
fdiv
jo
sub
ljmp
and
call
cmpsb
sbb
sbb
pop
hlt
inc
add
mov
int
pop
shrl
jle
test
xchg
testb
dec
dec
xchg
mov
pop
inc
fwait
leave
push
in
les
push
jecxz
fs
xor
aam
cmp
add
xor
pusha
negb
mov
pop
int
icebp
mov
imulb
pushf
movsb
mov
call
pop
jae
fisubrl
test
fcmovnbe
lods
nop
xor
inc
dec
lock
push
jecxz
mov
leave
rolb
xchg
xchg
dec
addr16
mov
ret
push
cltd
stos
jno
and
mov
inc
outsl
pop
mov
pop
lock
cmp
or
sub
sub
jns
mov
pop
sub
dec
daa
sbb
mov
in
jnp
ja
push
les
aaa
popa
add
enter
xchg
pop
es
jnp
repnz
jl
into
xchg
out
mov
xchg
in
iret
sti
stos
mov
xchg
pop
aas
les
repnz
outsb
xchg
sbbl
nop
test
out
subb
cmp
xor
ljmp
lock
sub
sbb
xor
lods
sub
pop
pop
inc
ljmp
out
pop
psubd
push
push
or
cmp
jbe
jmp
mov
pop
int3
xor
mov
jno
push
leave
es
mov
pushf
mov
xchg
arpl
ljmp
scas
add
pop
sub
push
adc
pop
lahf
es
jp
stc
or
lock
fists
mov
shrl
cmp
dec
mov
int3
push
mov
mov
mov
std
and
outsl
sbb
jg
push
mov
fstps
lds
scas
shrb
pop
leave
btr
cs
insl
aam
mov
adc
cmp
aad
mov
mov
popa
sbbl
mov
cmp
and
inc
fimull
dec
xor
in
lcall
lahf
sbbb
popa
pushf
xor
sahf
out
outsb
sbb
test
cltd
jg
mov
cmp
push
call
ficoms
xor
and
popa
movsl
and
imul
inc
lcall
popf
inc
cmc
adc
aaa
jnp
dec
cmpb
add
adc
arpl
jl
imul
xor
int
dec
loopne
inc
cwtl
out
out
test
dec
inc
push
rolb
fwait
mov
fidivs
aad
jmp
hlt
and
adc
fimuls
dec
and
and
and
or
inc
sti
outsl
call
pop
mov
js
sti
in
xchg
rcl
mov
enter
sub
xor
cmpsb
gs
jp
movsl
cmpsl
sbb
les
adc
mov
daa
or
inc
push
adc
or
xor
bsf
stc
adc
pop
pop
dec
xchg
mov
mov
push
bound
aas
test
pop
jno
cmp
pop
cmpsb
mov
push
xchg
test
es
cmp
mov
pop
rolb
cmpsb
flds
mull
sar
push
jge
inc
out
and
jo
bound
adc
or
jo
pop
sbb
cmp
adc
mov
je
jno
pusha
adc
lods
dec
dec
std
xor
sbb
jg
jbe
sub
pop
cli
mov
and
xlat
std
fdivr
int
jbe
fidivrl
out
test
in
push
pop
out
inc
push
dec
jnp
icebp
mov
dec
xchg
fs
cmp
xchg
stos
mov
or
mov
in
push
stc
idivl
push
mov
loope
pop
das
cltd
jne
jb
cmp
and
lcall
std
dec
shlb
xor
fiadds
jg
pop
push
js
mov
ret
dec
inc
push
jno
mov
or
jo
mov
fxch
push
sbb
mov
iret
rorl
in
dec
fbld
add
das
ret
jg
inc
adcb
lock
leave
push
rol
mov
sbb
add
inc
lret
mov
add
mov
or
lea
push
divb
repz
or
or
or
mov
cmp
dec
jp
pop
add
push
icebp
or
mov
mov
mov
add
ret
sbb
jg
shrb
fimull
add
push
fwait
dec
xchg
sti
ljmp
aas
mov
sbb
in
jb
fdivrs
xor
loop
jo
stos
fadds
lret
rol
loopne
xchg
cwtl
fdivp
pushf
dec
icebp
xorb
mov
loop
push
jg
mov
push
je
imul
mov
outsb
out
sub
ss
je
sti
mov
faddl
movsb
pop
or
xchg
or
shlb
jns
sub
push
and
fcoml
lcall
sti
mov
jo
xor
fldenv
sahf
and
dec
sub
gs
xlat
fisubrl
imul
sub
lods
push
cmpsb
in
aam
pushf
rcrb
lock
xlat
xor
out
lods
cli
ljmp
cmp
dec
push
adc
mov
or
iret
mov
test
dec
in
das
jae
cmp
aas
mov
leave
call
pop
jp
pushf
xor
pop
cmpsl
es
into
ds
inc
xchg
adc
ret
bound
push
cmp
inc
and
mov
daa
and
sub
loop
nop
loop
xorb
xchg
pop
into
push
sbb
fistl
jl
pop
lret
inc
or
cld
aaa
cmp
nop
xlat
inc
and
scas
pushf
addr16
loopne
stc
jae
and
lock
ja
jmp
fcmovbe
xor
jne
cmc
loope
mov
mov
jecxz
mov
push
mov
cmp
ret
jbe
loop
cmp
and
stos
inc
mov
adc
jne
fidivs
push
daa
fsubr
jg
mov
mov
pusha
push
mov
int3
addr16
iret
cmp
cmp
lret
pop
add
loopne
mov
fwait
mov
xchg
stc
lret
es
xor
ret
ja,pt
mov
cmp
add
std
aad
inc
stc
das
mov
push
mov
pop
mov
xor
dec
mov
hlt
stc
aas
cld
dec
ja
lret
je
mov
cmp
js
jnp
daa
aam
add
mov
jmp
pop
test
jg
popf
cmpsl
in
sub
sub
ds
das
inc
in
ret
mov
jecxz
in
push
int
lahf
aad
mov
and
xchg
jno
mov
enter
das
xchg
fdivl
mov
into
cmp
cmp
xlat
in
or
fistl
pop
mov
mov
pop
sbb
inc
mov
mov
dec
aam
stos
sbb
pop
std
inc
push
repz
aad
sub
in
adc
xchg
loopne
mov
in
pop
rorl
jg
rcll
pop
cmp
bnd
mov
fcompl
sub
pop
lds
into
in
je
mov
insl
test
int
std
push
hlt
mov
xchg
xchg
dec
mov
outsl
je
aam
test
aad
cs
inc
mov
jg
inc
add
or
in
mov
mov
mov
repnz
cmc
mov
xchg
cmp
nop
in
dec
popf
cmpsb
inc
xor
incb
ret
push
mov
mov
mov
xor
mov
jbe
pop
xchg
xchg
xchg
stos
and
sub
scas
cmp
inc
out
fiadds
fldcw
jne
sub
lods
push
dec
rcrb
sbbl
add
movsl
testb
ret
xchg
aad
pop
aaa
sub
xchg
stos
cmp
add
aas
mov
ffree
data16
lahf
inc
aaa
popa
sub
ret
push
xor
ret
lods
sbb
inc
cltd
pop
jl
rcrl
sub
shrl
cmp
mov
xchg
jo
fwait
lea
pop
int
mov
xchg
add
jmp
or
sbb
ficoms
out
ds
add
ret
push
push
lea
cwtl
movsb
mov
xor
mov
pop
mov
adc
and
xchg
js
push
dec
xor
icebp
mov
dec
shll
add
and
nop
cld
mov
sub
dec
filds
mov
fldcw
fldl
imul
xchg
mov
or
ret
mov
mov
jbe
cwtl
add
pop
push
mov
lea
fcomps
pop
data16
mov
aam
sub
in
repz
inc
mov
push
sti
jecxz
xchg
cs
add
mov
shr
into
cmpsb
sub
loop
ffree
xchg
dec
test
dec
adc
and
xchg
hlt
sub
movsb
lds
ficompl
mov
lea
lods
mov
fldenv
cmp
sub
test
jae
mov
xchg
xchg
jecxz
jge
push
stc
xor
incl
dec
lea
pop
jo
mov
sbb
andl
cmp
pop
rcll
xor
xor
jo
fwait
in
rcrb
hlt
or
and
adcl
pop
bound
or
jl
daa
nop
stos
pop
mov
jge
rcll
test
inc
cmp
jnp
imul
jbe
mov
and
std
cmp
dec
fisttpll
pop
rolb
sbb
out
mov
jae
popa
push
inc
adc
add
inc
xchg
cmpsb
leave
mov
lods
roll
shl
push
pop
lea
rcl
inc
aaa
je
xor
dec
lret
fcompl
lahf
test
int3
inc
pop
sahf
out
mov
xchg
mov
inc
or
lods
dec
pop
nop
sahf
nop
popf
mov
fists
roll
je
adc
cmpb
shlb
dec
lcall
or
sub
xchg
outsb
jnp
js
repz
shlb
or
xchg
insb
mov
daa
push
in
mov
xchg
clc
add
and
sahf
push
movsb
sub
rorl
psubq
jo
test
les
scas
sub
mov
fldt
ds
dec
movsl
mov
add
jae
jae
nop
push
adc
out
cmpsl
pop
adc
clc
rcrb
dec
clc
jmp
lock
inc
ljmp
out
incb
inc
push
iret
fidivs
push
lahf
rcr
mov
out
dec
insb
std
add
lcall
leave
cmp
lea
push
jle
sbb
add
subl
adcl
rol
sbb
lods
fiadds
cvtpi2ps
push
fmul
sbb
and
aam
xor
sub
xchg
out
jp
ss
or
or
call
jno
xchg
xchg
cmc
popa
xor
push
out
push
scas
push
insl
bnd
std
lock
add
or
clc
out
fcmovbe
aad
jno
in
push
test
lret
pop
push
cmp
xor
push
rolb
outsb
inc
mov
das
and
loope
mov
addr16
icebp
rolb
lock
test
js
cmp
jmp
cwtl
je
ss
mov
in
daa
sub
push
test
cwtl
neg
fwait
xorl
xor
add
or
jg
call
dec
cmp
mov
push
push
out
int3
jl
push
popa
mov
daa
es
adc
scas
dec
shll
xchg
cmp
clc
inc
xor
sub
pop
sbb
sbb
ret
mov
and
cmp
xor
lds
pop
les
jns
jbe
mov
adc
mov
mov
xor
dec
test
jg
mov
in
push
jecxz
cwtl
push
inc
push
popf
in
fdivrl
jno
inc
lods
jb
call
pusha
cwtl
mov
push
push
sahf
jbe
lods
test
xchg
and
pop
jmp
lds
test
sbb
xchg
jle
or
mov
jnp
jmp
rcr
pop
xchg
in
call
pop
push
mov
xor
mov
dec
add
jb
dec
ficoml
mov
or
fwait
outsl
fidivrl
sti
imul
pop
xor
xor
cs
out
inc
cmc
ljmp
aaa
ja
aam
leave
mov
insl
inc
je
adc
jb
sub
or
addb
sub
cltd
xchg
pop
stos
imul
repnz
data16
pop
ret
ret
mov
mov
cmp
fiadds
loopne
xchg
dec
imul
lea
xchg
jp
je
xor
mov
test
mov
jecxz
data16
fpatan
sub
js
cld
jo
mov
sbb
andb
daa
mov
mov
pushf
mov
mov
and
in
pop
dec
std
cld
mov
clc
pop
aas
fs
cld
or
or
pop
pop
pop
pop
push
cmpsb
stos
popa
adc
lods
add
mov
adc
scas
pop
imul
scas
int
xchg
sbb
add
mov
add
enter
movsb
sub
sub
fdivr
lret
out
movl
or
inc
adcb
xor
fsub
mov
and
es
movsb
mov
mov
sbb
rorl
jbe
test
int3
jl
out
xchg
fisubs
lahf
lea
cmpsl
cmpb
in
sti
test
rolb
mov
cmp
dec
add
loop
and
cmp
loop
loop
pop
out
ljmp
push
bound
inc
and
pushf
mov
aas
aam
inc
shl
cmp
enter
cmp
shrl
dec
adc
adcl
andnps
or
inc
pop
movsl
ds
cmpsl
je
jmp
iret
mov
fldt
ljmp
in
dec
push
mov
mov
push
movsb
xor
rcr
add
mov
movsb
jp
repz
pusha
cmc
jecxz
fists
nop
and
test
roll
inc
loopne
push
push
fdivs
fsubrl
sub
cwtl
add
push
sbb
push
fcompl
punpckhdq
xchg
sbb
sti
sub
data16
sub
out
repnz
cmp
insl
mov
ja
or
jbe
xor
push
inc
sahf
lret
daa
mov
arpl
jmp
or
pop
sarl
xchg
adc
decb
xchg
or
inc
push
stc
in
iret
shl
in
jno
es
outsl
out
call
int3
and
and
ret
lcall
jns
dec
movsb
lea
mov
pusha
outsb
cltd
mov
rcrb
std
idivb
stos
negb
das
and
cwtl
xchg
push
mov
das
pop
jo
into
test
imul
sbb
xor
dec
or
incb
or
stc
push
push
shlb
pop
aaa
movsb
mov
icebp
and
jo
mov
aas
pextrw
cmpsb
lahf
loop
xchg
jp
lret
cmpsl
and
mov
int
lock
and
jno
push
cmp
out
bound
sahf
dec
out
les
or
shlb
lods
mov
scas
sub
lret
pop
scas
stos
les
jnp
jmp
leave
shrl
or
mov
mov
xchg
inc
dec
inc
sub
mov
and
push
fiadds
aad
daa
pop
mov
mov
xor
add
and
push
sub
mov
xchg
inc
fs
adc
lock
std
inc
jns
ret
mov
xchg
or
xor
and
sub
jo
xchg
adc
insb
mov
add
adcb
cmp
cli
out
cmp
or
lock
ja
mov
xlat
mov
mov
out
dec
pop
adc
stos
cmpsl
fucompp
pop
inc
sub
sbb
test
and
sbb
or
cmpsb
cwtl
dec
mov
cli
mov
fcoms
dec
push
sbb
or
int
movsb
inc
cmp
xor
stos
jb
dec
cmp
adc
data16
push
std
clc
loop
dec
inc
push
cmp
mov
ret
dec
cld
popa
je
jg
mov
fimull
pop
es
es
jle
sub
pop
or
fs
inc
cmp
jmp
push
push
adc
inc
mov
scas
ja
pop
sub
add
mov
dec
mov
test
add
push
aaa
inc
xchg
test
clc
inc
into
mov
jnp
add
push
sub
insl
cmp
xor
jbe
outsl
test
jne
jmp
lds
or
jae
jecxz
fisttps
mov
pusha
or
gs
call
pushw
call
sub
das
add
xor
fldcw
sub
std
push
or
shll
dec
mov
ror
jns
push
push
or
xor
loop
popa
outsb
out
xchg
sbb
mov
jae
enter
xchg
clc
dec
hlt
cmp
push
inc
sbb
dec
cs
push
cmpsl
mov
adc
hlt
cmp
xor
fwait
jb
popf
mov
je
xor
xor
out
out
shll
popf
test
sbb
aas
sarb
test
cmp
sbb
in
jae
sahf
gs
jle
or
je
into
mov
push
jge
jl
jae
lcall
mov
pop
decb
loop
add
inc
mov
push
push
push
pop
mov
sahf
xor
dec
cld
fidivrl
int3
and
adc
or
sarb
inc
sti
jo
aas
xchg
lods
or
xchg
dec
mov
fdivrp
xor
into
fstps
iret
add
lock
dec
test
dec
ljmp
push
ss
arpl
cmp
je
jge
mov
sbb
push
xor
dec
or
push
pinsrw
loopne
add
orb
xchg
lds
jns
inc
jbe
rep
pushl
add
nop
jbe
dec
in
clc
xor
dec
data16
insb
push
repnz
or
jno
xor
movsl
lahf
adc
pop
mov
cmp
outsl
stos
sahf
cmp
jl
mov
sbb
jp
xchg
stos
lcall
bound
inc
and
imul
mov
movsl
cmp
loope
jecxz
ljmp
mov
sbb
leave
push
and
add
loope,pn
pop
sahf
sub
enterw
cmp
cmpsl
push
aas
and
pop
dec
or
int3
test
rolb
mov
sar
add
leave
fs
jle
adc
outsl
or
aas
sti
sub
fcmovnu
or
adc
push
cwtl
adc
icebp
pop
xor
xor
inc
xchg
sbb
xchg
ja
mov
dec
jnp
pop
mov
popa
cmpsl
jmp
jle
ljmp
fsts
add
xchg
xor
push
push
scas
test
movlps
data16
dec
or
mov
mov
pusha
jmp
shll
mov
pushf
or
in
push
faddl
aad
jp
testb
ret
and
leave
arpl
ret
int
xchg
jge
sub
jne
punpckhwd
and
lds
sub
mov
push
in
fildll
idivl
into
movsb
je
negb
xchg
nop
adc
pop
in
mov
xor
out
stc
in
das
mov
aas
fcompl
fnstsw
cmc
lods
sahf
sarl
repz
pop
outsl
sub
mov
jns
lahf
inc
pop
std
dec
inc
pop
mov
cli
rcl
sbb
cmp
pop
movsb
jg
mov
rorl
in
aaa
xchg
inc
mov
arpl
pop
outsl
push
mov
fscale
and
push
cli
mov
jecxz
in
sahf
pop
mov
and
sbb
or
cwtl
lcall
repz
repnz
dec
dec
ljmp
mov
xchg
jmp
jno
inc
rcrb
lret
inc
test
adc
repnz
inc
or
hlt
pop
inc
movsb
inc
insb
xor
mov
cs
fnstcw
lods
inc
adc
arpl
sub
lcall
int
cltd
push
push
mov
stos
adcb
aaa
lea
aaa
cli
int
mov
mov
jbe
sbb
out
cli
add
push
xchg
sub
cmp
movb
icebp
cmp
mov
jo
adc
lods
cmp
push
popa
lret
sbb
push
iret
js
sbb
cs
lock
mov
push
and
shlb
mov
adc
int
call
xor
insl
jge
fwait
and
xchg
xchg
test
inc
stos
pop
push
xchg
daa
sub
daa
dec
mov
mov
aaa
je
mov
aam
xor
jo
jnp
rolb
cmc
in
inc
outsb
hlt
mov
repz
xor
and
shlb
xchg
aad
xor
mov
sub
push
pop
dec
mov
ret
and
popa
inc
js
mov
fisubrs
jnp
xchg
rorl
dec
sbb
movsl
mov
popf
add
jae
jle
or
push
test
sti
std
inc
das
sbb
in
aam
adc
dec
cli
cmp
fsubs
imul
xor
fidivrl
inc
ss
and
dec
jbe
sub
pop
cld
jns
rep
push
xchg
xchg
and
push
nop
aas
subl
fsts
inc
in
ffree
dec
xchg
or
xchg
cmc
call
leave
cs
jb
outsb
gs
cwtl
cmp
and
rcrl
movsb
repnz
cmp
push
adc
pop
push
xor
dec
add
dec
lods
fiaddl
stos
dec
outsl
aas
mov
dec
dec
xor
dec
je
sbb
sbb
sbb
mov
mov
das
mov
or
jge
add
rol
movsb
xor
out
xor
and
rcll
xchg
dec
or
stos
adc
sbb
sti
cltd
push
push
dec
or
jle
les
data16
mov
mov
or
jns
sbb
xlat
dec
or
jmp
jecxz
shrl
stos
and
out
ret
push
sbb
shufps
xchg
or
ret
dec
roll
jno
data16
jno
popf
mov
or
sbb
and
add
cmp
lods
mov
mov
sbbl
out
xchg
rcl
cmp
lds
dec
sbb
and
xchg
hlt
adc
xchg
sbb
jbe
jae
sbb
push
and
addr16
inc
add
xchg
xor
jae
fwait
call
and
add
aad
xlat
mov
add
js
inc
fwait
sub
loop
pushf
jecxz
xor
data16
jl
cmpsb
inc
cwtl
xchg
xor
aad
pop
xchg
repnz
jmp
xchg
add
jl
inc
loop
adc
imul
nop
sbb
imul
mov
push
and
fisttpl
xor
andl
jmp
xorb
dec
popf
jnp
cmp
mov
lock
inc
fsubrs
or
jns
or
mov
push
jae
fdivrs
imul
into
fstps
imul
fsubl
push
int3
jns
imul
cmpsb
lcall
test
insb
cld
sbb
aaa
mov
xor
and
or
pushf
sub
push
inc
std
dec
hlt
pusha
insb
dec
mov
lods
add
ror
dec
cmpsb
inc
add
jmp
xchg
ds
mov
dec
aaa
xchg
add
push
xor
in
inc
push
leave
jecxz
mov
xor
adcb
fstl
xor
xor
jb
push
aam
gs
repnz
hlt
jae
fcomps
cld
sbb
mov
mov
inc
pop
in
push
mov
sbb
mov
scas
mov
lds
aas
xchg
icebp
shll
imul
call
jl
fidivrl
push
jmp
xchg
mov
mov
xor
jg
je
out
pop
ficomps
dec
push
jo
mov
pusha
cwtl
mov
xchg
in
jo
cltd
sbb
daa
jno
xor
adc
pop
fwait
xchg
push
jecxz
sbb
cmp
push
ret
clc
fcoms
cmp
cmp
jg
adc
sbb
adc
std
add
je
popf
test
add
out
xchg
mov
shl
dec
aaa
scas
cli
and
mov
or
data16
fucomp
ja
insl
cmp
pop
xchg
sbb
inc
cli
shlb
mov
cmc
insl
xorb
loope
rolb
push
aas
xor
cltd
cmp
insb
loopne
push
push
xchg
mov
insb
and
fildll
pop
lods
dec
dec
testl
outsb
inc
push
inc
xor
adc
or
sbb
jecxz
int3
xor
push
int3
mov
xorb
dec
jl
cmp
pusha
imul
ss
arpl
push
out
adc
imul
xchg
jno
xchg
and
add
and
lahf
rol
shlb
mov
sub
push
addr16
push
xchg
inc
ljmp
stc
add
or
sbb
ret
test
push
mov
mov
ja
cmp
mov
pop
lret
adc
xchg
push
add
adc
pop
and
pop
out
xor
mov
inc
adc
loop
xchg
xchg
xor
notl
jle
fimull
movsl
adc
jae
or
xorl
jmp
cli
sub
inc
repz
and
fwait
std
inc
fsubl
scas
jno
cli
mov
mov
mov
loop
mov
cltd
ljmp
mov
xor
mov
mov
adc
sbb
mov
addr16
mov
sub
jg
mov
fcomi
and
jp
lods
add
les
movsb
sub
aaa
pusha
dec
push
or
sahf
mov
jmp
mov
loopne
lcall
add
xor
sti
xlat
inc
repz
sbb
test
in
push
jne
jp
lods
dec
or
mov
cmp
aad
and
in
lods
mov
clc
icebp
adc
fistps
dec
andb
aad
fdivr
adc
outsb
mov
mov
stos
sahf
mov
xchg
sarl
pop
add
rcrb
cwtl
and
or
adc
pop
lods
jmp
adc
lock
bound
xchg
mov
mov
pop
cmp
lea
push
or
cmpsl
cmp
jb
and
and
pop
adc
mov
cmpsl
push
in
dec
inc
fmul
jg
rcll
movsb
dec
dec
or
cmp
scas
inc
decb
in
jl
adcl
sbb
sahf
stos
cltd
push
ss
jne
jno
sub
xor
lods
in
mov
mov
sbb
les
sub
mov
push
shll
aad
enter
dec
lahf
mov
fidivs
movsb
fldenv
jae
das
jecxz
jp
inc
in
xchg
jbe
div
icebp
mov
mov
stos
out
mov
push
pop
fcoms
rorb
aaa
movsb
dec
mov
xor
insl
push
fstpt
or
add
jle
inc
fldcw
cwtl
in
pushf
jno
mov
outsb
adc
ds
cs
jecxz
jbe
jbe
pop
sub
push
dec
popl
lods
xor
push
and
ss
pop
insl
std
fisttpl
addr16
mov
jp
bnd
adc
mov
pop
jns
xor
sbb
je
aas
pop
inc
cmp
outsb
push
popf
jle
xor
xlat
fisttps
imulb
or
pop
xor
int3
repz
test
inc
lahf
xor
imul
xchg
sti
test
mov
pop
fisttps
adc
out
add
cmp
popf
or
xor
lcall
xchg
adc
std
insb
lret
out
jmp
rcll
mov
testb
cmpb
ret
js
clc
adc
push
stos
test
cld
pop
pop
aam
push
arpl
jne
lods
fistl
push
jne,pn
rcr
hlt
fwait
inc
or
inc
aas
and
aas
mov
inc
sbb
lock
mov
sbb
add
jmp
xor
cmpsb
adc
dec
rep
dec
lcall
leave
pop
outsb
std
fimull
in
test
dec
jno
mov
outsl
aad
jmp
out
mov
push
or
leave
adcb
fadds
cwtl
adc
cmpsl
cltd
xor
addr16
xchg
shl
aas
pop
jmp
push
adc
lcall
imul
add
shr
or
mov
outsl
cmpsl
hlt
push
ret
sbb
and
aaa
or
aaa
add
mov
notb
std
inc
pop
push
xor
icebp
mov
ss
sub
test
stos
icebp
mov
imul
mov
mov
outsl
lcall
clc
sub
loopne
mov
inc
push
addr16
pop
into
ss
je
pop
xor
testb
mov
add
stos
mov
xchg
ret
xor
scas
imul
sti
out
imulb
sub
sbb
inc
mov
pop
fsubrp
pop
ds
cmp
icebp
jo
xchg
dec
je
out
inc
add
ret
xchg
rcrl
jmp
in
cmp
or
jl
mov
or
and
and
out
clc
int
insb
cmp
stos
pop
call
add
in
andb
push
sbb
fmull
xchg
cwtl
in
xchg
leave
imul
out
ret
ss
shl
das
out
arpl
in
jno
mov
xor
add
inc
incb
in
cmpsb
add
xor
repz
in
shll
adcb
mov
insb
js
adc
sub
orb
aaa
xchg
lcall
in
mov
arpl
dec
fiadds
pop
mov
rcrl
sub
push
push
ljmp
cld
lods
cmpsb
push
insl
mov
sbb
mulb
cmp
int
ja
mov
rcrb
das
lret
mov
sbb
leave
rcl
push
sub
fwait
sbb
pop
in
test
xchg
cmp
mov
cli
out
push
dec
adc
insb
mov
out
mov
pop
sub
out
jl
mov
mov
mov
inc
lahf
enter
sbb
dec
arpl
cwtl
sbb
leave
lahf
shll
outsb
pop
lods
cmc
in
icebp
shlb
xchg
aam
rorb
idivb
adc
nop
in
scas
xchg
mov
lret
lods
imull
dec
cmpsb
or
rolb
decb
in
test
int
std
cltd
or
mov
movsl
jmp
outsb
repnz
hlt
jmp
fcoml
aaa
into
leave
or
insb
jle
daa
push
sub
and
aas
les
loope
pop
sub
adc
sarb
cmp
sub
pop
mov
mov
jae
lds
sub
mov
or
add
shrl
and
jo
fiaddl
sub
inc
sub
aam
mov
leave
mov
cld
addr16
lds
sub
pop
sbb
push
mov
in
push
movsb
inc
adc
pusha
add
inc
sbb
fdivl
adcl
movsb
push
jl
ja
lods
insb
iret
and
xor
push
sub
add
add
xchg
stos
int
pop
test
inc
js
and
and
mov
fs
jns
movzbl
lcall
jns
push
adc
lods
sbb
loopne
xor
jb
inc
mov
ficomps
jmp
cli
aam
in
test
cmp
xor
fiaddl
mov
xor
lcall
in
mov
or
out
xchg
pop
mov
sti
arpl
fwait
jecxz
jmp
out
inc
inc
movaps
mov
bound
inc
mov
pop
mov
test
and
pop
pop
bound
dec
int
jae
lret
in
push
mov
outsl
fwait
lods
into
mov
imul
popf
xchg
mov
sub
fistpl
jmp
mov
cmc
mov
mov
dec
jb
jge
loop
mov
jbe
pop
xor
sbb
adc
push
fadd
insl
jle
ljmp
mov
pop
insb
mov
fadds
sub
jne
stos
js
scas
lahf
jg
mov
inc
xchg
andb
xor
jle
mov
test
jge
sbb
mov
and
sbb
pusha
mov
inc
cli
push
ljmp
inc
loope
movsl
pop
insb
jnp
jae
into
and
mov
out
mov
jns
sub
xchg
in
or
inc
pop
sarb
xor
inc
push
and
xchg
sub
cld
add
into
aaa
push
shll
test
gs
sub
into
jns
xlat
cmp
sahf
lcall
xchg
cli
push
imul
in
les
rcll
aam
outsl
xlat
ret
or
in
mov
dec
hlt
call
je
aam
adc
mov
jle
ljmp
xchg
xor
xchg
sub
test
push
test
push
xor
popf
imul
inc
stos
je
mov
pop
sub
or
iret
or
cwtl
and
jbe
outsl
and
enter
mov
fsts
push
sub
rcll
mov
shlb
addr16
push
adcl
xchg
cmpb
arpl
ficomps
std
addb
jmp
pop
jns
test
cmp
dec
dec
in
push
loopne
int
outsb
sbb
xchg
lds
push
jne
cmp
aaa
stc
cld
aad
rolb
or
fimuls
push
push
aas
mov
sti
cmp
jp
mov
sbb
popl
mov
bound
jnp
ljmp
push
mov
or
mov
cmpl
mov
dec
inc
das
rcr
aad
dec
add
xor
loope
cmpsb
jns
pusha
pusha
rorl
fs
popf
sahf
dec
insb
cmp
mov
loope
and
dec
out
insl
aaa
xchg
shrl
push
out
fadds
pop
jns
xorl
push
jecxz
sub
sub
mov
mov
mov
es
data16
fmull
or
mov
mov
test
mov
and
sub
fmull
in
and
pop
lret
enter
dec
inc
inc
mov
aaa
xchg
cmp
dec
jae
cs
scas
enter
mov
shll
rcrb
test
out
inc
mov
movsb
enter
pop
and
dec
adc
inc
adc
mov
outsb
in
lahf
mov
nop
sub
xchg
pop
fldenv
mov
jb
jg
xchg
pop
js
push
rorb
adc
daa
lret
xchg
std
in
lock
insl
xorl
into
cmc
loopne
mov
cmp
push
mov
stos
dec
cld
dec
or
cmp
pop
mov
pop
fs
dec
shr
enter
mov
mov
mov
inc
jecxz
sbb
mov
call
cld
xor
jecxz
iret
je
cs
and
xchg
sub
adc
xor
sbb
pop
test
sbb
sub
push
mov
inc
in
ret
arpl
pop
out
jg
mov
mov
jmp
sub
cmp
stc
or
pop
cmpsl
push
mov
dec
mov
inc
hlt
jmp
es
leave
push
mov
dec
pop
ficoms
aas
inc
pinsrw
data16
ret
aaa
les
pop
add
sbb
xor
andb
cmp
dec
jg
sbb
pop
imul
test
xor
push
inc
push
inc
pop
cmp
call
xchg
mov
xor
mov
cmp
sahf
dec
push
jno
add
shrl
inc
mov
or
repnz
xchg
in
add
and
int3
push
sahf
jmp
into
es
lods
clc
mov
filds
lods
cmp
fldcw
mov
ror
dec
mov
mov
iret
out
pop
push
mov
inc
adc
and
insl
jecxz
adc
lea
sarl
scas
hlt
fdivrs
pop
and
xchg
mov
and
dec
or
or
lahf
jecxz
mov
xchg
sbb
xchg
fsub
sub
mov
pop
xchg
pcmpgtw
xchg
outsl
int3
push
pop
test
inc
xchg
push
fcomi
pop
stos
lret
test
dec
das
pop
aaa
loope
aad
jp
pop
mov
cld
sbb
shll
dec
cmc
pop
jnp
jb
cmp
test
rcl
pop
aam
mov
dec
ds
pusha
rorb
int3
sbb
call
imul
insb
push
jge
leave
or
cmc
mov
test
setl
test
pop
mov
ja
push
push
mov
or
jne
cmp
jb
or
or
and
pop
cltd
out
sbb
jno
mov
icebp
xor
stos
pop
int
and
mov
subb
mov
in
iret
inc
dec
loopne
cmp
loope
jg
cld
xchg
test
push
sbb
movsl
mov
nop
and
add
sub
or
mov
xor
jns
and
xor
cli
std
adc
cli
mull
jecxz
push
or
add
jbe
dec
fs
xor
int
pop
mov
push
int
sbb
push
adc
or
or
daa
xor
out
aas
mov
mov
data16
lock
mov
mov
xor
aaa
cwtl
xchg
mov
ja
push
xchg
fsubrs
push
aad
xor
imul
loop
adc
test
adc
xchg
std
rcrb
adc
lods
scas
dec
cld
imul
mov
xchg
xor
sub
pop
out
out
cmpsb
and
icebp
sahf
loopne
dec
jg
pop
shll
or
ret
js
xchg
leave
pop
test
shlb
fcomp
sti
xor
adc
push
xor
stc
loopne
lea
or
add
loop
lock
sbbb
adc
or
out
jg
add
lret
out
ljmp
mov
adc
xor
pop
inc
mov
scas
pusha
xchg
ds
dec
pop
inc
fadds
std
jb
fs
sbb
add
out
push
in
cmp
jecxz
jge
adc
ret
sbb
xor
sub
mov
jecxz
mov
popa
or
pop
sbb
imul
scas
sbb
dec
pop
lret
xor
inc
fidivrl
ss
push
jbe
push
fldl
xor
ja
pop
pusha
flds
xchg
jno
mov
inc
lods
dec
pusha
push
jo
push
popa
inc
popa
aad
sbb
call
cmp
push
mov
add
rolb
dec
and
test
xchg
or
xchg
mulb
dec
jb
xchg
cmpsl
mov
aaa
push
daa
push
mov
les
xchg
sbb
xor
dec
cltd
sbb
mov
sub
push
ljmp
outsb
mov
or
sbb
jge
ficoml
mov
lret
add
sub
popa
lahf
pop
out
sub
das
mov
mov
icebp
cli
mov
mov
jp
and
repnz
ljmp
and
xor
popl
aaa
insb
xor
pop
jmp
sbbl
enter
mov
call
pop
mov
fwait
aam
lret
mov
xchg
xlat
lahf
jg
aaa
push
xchg
hlt
pusha
rcrb
sbb
ficompl
pop
inc
in
mov
and
iret
popa
cld
cmp
inc
push
aas
sbb
pop
cltd
adc
dec
push
ss
sub
push
aam
lahf
jno
dec
cmp
jmp
pop
and
loope
lods
in
mov
subb
push
pushf
xor
adc
popf
aaa
out
movsl
inc
lcall
mov
mov
cwtl
push
nop
nop
cmp
pop
arpl
ret
xorb
dec
dec
ja
adc
push
pop
mov
and
or
mov
fnsave
stc
mov
dec
and
arpl
or
ret
xchg
jl
xor
enter
repnz
mov
sbb
shll
lret
cmpsb
push
dec
xlat
nop
je
iret
jge
ljmp
mov
push
mov
int3
sbb
add
iret
dec
dec
lcall
stc
rcl
bound
sahf
inc
lea
cmp
inc
xchg
sbb
lods
inc
push
cmp
xchg
out
mov
sbb
cmp
mov
lods
mov
mov
clc
dec
dec
bound
add
jl
dec
add
lock
sub
lds
adc
xor
jge
lods
int
pop
sbb
push
mov
in
ja
cmp
inc
jns
push
xchg
jmp
push
cvtdq2ps
lahf
popf
dec
pusha
frstor
lret
dec
dec
or
insl
sbb
outsb
aaa
inc
repz
push
dec
xchg
lods
cmp
cli
ret
mov
rcrb
or
aaa
pop
cmc
repz
mov
fstps
sub
push
movsl
leave
cli
cli
jns
mov
das
or
fcoms
sub
sub
das
dec
sub
pop
je
adc
test
adc
pop
mov
inc
sbb
testl
mov
int3
push
mov
icebp
pop
or
addr16
mov
and
dec
fcmovu
jle
jecxz
sub
mov
jb
aad
hlt
bound
loop
xor
int
nop
xchg
stc
xchg
clc
notl
popl
or
xor
jge
adc
dec
add
adc
dec
mov
push
aam
cwtl
push
fsts
or
sbb
faddl
sbb
stos
sbb
cmp
out
dec
orps
adc
aas
ret
repz
inc
push
aad
mov
lret
cmp
movsl
push
stc
sar
mov
adc
cmp
add
daa
adc
movsl
sahf
jg
mov
cmc
mov
mov
pop
call
mov
sbb
add
xorb
pop
mov
aad
call
icebp
loope
icebp
ljmp
jmp
stc
int3
lock
inc
leave
pushf
stos
adc
in
lea
push
ss
mov
pop
mov
imul
jae
lcall
adc
stos
adc
or
mov
divb
daa
mov
xchg
xchg
cld
jmp
push
push
fs
jae
mov
mov
in
pop
das
and
jmp
fdivrs
pop
fucompp
les
sbb
test
ljmp
out
mov
cwtl
cmp
cmc
insl
test
cmc
adc
js
outsl
negl
dec
xor
jns
aas
stc
aam
mov
lret
or
mov
pop
or
divb
pop
ljmp
mov
in
inc
and
and
rcr
push
scas
adc
bound
scas
sub
dec
lea
lahf
aad
add
lret
inc
cwtl
dec
cmpl
pop
adc
hlt
gs
mov
inc
andb
aaa
sbb
push
pop
idivb
jnp
jns
in
insl
ss
sbb
lret
scas
jb
push
xor
mov
lock
pop
push
mov
enter
stos
sbb
xchg
mov
inc
out
js
out
sarl
jne
mov
jae
jle
dec
jmp
pushw
aam
or
pop
adc
imul
cwtl
popf
shr
or
ret
sub
adc
adc
jnp
adc
mov
mov
pop
inc
or
lret
dec
cli
jg
clc
mov
mov
out
adc
mov
popa
xchg
xchg
sbb
leave
arpl
lds
gs
movsl
cmp
adc
es
mov
pop
scas
int3
loopw
xor
sub
jae
mov
fs
jp
pop
inc
and
scas
inc
pop
adc
pop
loope
pop
lods
data16
je
sub
mov
push
cmp
outsb
pop
add
xor
pop
mov
mov
loop
push
pop
pop
dec
loop
xor
mov
negb
cmp
aaa
mov
loop
jbe
cwtl
test
xchg
stos
pop
pop
ja
sbb
ss
repnz
rorl
stos
inc
adc
popa
js
sub
inc
ret
dec
sub
fwait
and
xor
rclb
dec
pop
stos
lret
lret
or
push
mov
hlt
xchg
xchg
les
sahf
loopne
mov
mov
out
inc
imul
mov
inc
sti
outsb
inc
xor
cmpsl
sbb
loope
sarb
shll
cld
jo
sahf
dec
cmc
lret
mov
push
push
inc
pop
sub
cmp
daa
push
push
notb
pusha
arpl
sbb
mov
lea
fs
xor
push
sti
leave
shr
lock
lret
mov
mov
data16
int3
gs
lret
and
add
pop
imul
pop
mov
lcall
into
lock
in
lcall
test
in
aad
je
and
test
push
popa
ss
jge
or
push
cwtl
adc
xchg
stos
in
sahf
mov
push
fbld
mov
add
sahf
sub
mov
pop
cmp
in
mov
xor
out
xor
jno
int3
inc
popf
cltd
cmp
test
test
divb
cmp
pop
rcrl
push
pop
pop
cltd
add
or
test
add
pusha
scas
pop
cld
ror
adc
clc
adc
jns
dec
loop
pop
add
dec
and
popf
xchg
sub
push
dec
and
stos
add
idiv
sbb
cmpsl
adc
jp
dec
in
or
cmp
je
test
incl
jmp
and
pop
lahf
pusha
sub
cli
mov
xchg
xchg
sbb
and
lahf
ljmp
add
into
cs
cmp
icebp
and
shr
jg
fdiv
fcoms
mov
jp
or
add
out
xor
or
push
imul
or
dec
jle
push
xchg
xorl
cmp
clc
divb
rolb
ja
sarl
std
jg
outsb
fcmovne
les
dec
lods
mov
adc
test
int
and
sti
ret
push
push
xorl
xor
lahf
add
cmpl
sbb
rorb
jge
adcb
or
dec
xchg
scas
inc
pusha
pop
stos
or
dec
or
or
pop
add
iret
adc
pop
mov
pop
push
lods
les
nop
mov
loope
mov
mov
inc
sbb
pop
mov
orb
hlt
pop
out
xor
ss
inc
loopne
mov
cmpsl
adc
xchg
mov
mov
popa
fcmovbe
clc
lods
mov
sub
and
rcrb
int3
dec
pop
sbb
adc
jl
pop
jbe
and
lods
rcrl
ss
aaa
mov
mov
or
icebp
insb
ret
addr16
push
inc
dec
sar
int
lods
push
insb
cmp
mov
ret
push
hlt
inc
loop
cmp
jbe
arpl
mov
mov
mov
sbb
mov
add
xchg
int3
icebp
test
cmp
ret
or
das
rolb
roll
mov
movsb
sub
pop
pop
cmp
jb
xchg
or
pop
mov
cmp
ret
adc
jo
loopne
rcll
hlt
iret
lea
sbb
imul
aaa
ret
je
push
xor
mov
jns
sub
outsb
pop
add
ret
into
loop
loopne
push
xor
or
test
test
jb
and
sbb
lahf
je
pop
cmpl
xor
and
mov
ret
jg
mov
xchg
mov
xor
jecxz
xor
xchg
jecxz
jns
repnz
loope
cwtl
or
dec
test
mov
stos
mov
jle
inc
xor
dec
pop
int
scas
push
push
ljmp
dec
mov
cmp
mov
inc
jl
add
mov
xchg
nop
pop
bound
inc
into
xchg
pusha
pop
fwait
pop
loop
pop
cmp
jb
sub
jb
push
or
push
jno
xor
cmp
dec
jle
out
leave
cmp
out
fwait
add
stos
fldt
cmp
sti
testl
lds
push
jbe
add
pop
jns
ljmp
imul
pop
jecxz
pop
fwait
adc
mov
xor
call
adc
xchg
hlt
adcl
je
and
push
clc
lret
fdivp
jp
pop
and
add
sub
notb
int3
les
jg
adc
sub
ljmp
fistl
test
add
mov
or
pop
sbb
inc
fnsave
scas
cmpb
cmp
jno
pop
ds
and
inc
pop
outsb
out
xchg
inc
xchg
pop
xchg
sahf
fmull
dec
mov
mov
lea
fnstsw
sbb
mov
idivb
xchg
push
ds
lock
cs
fs
xchg
call
stc
addr16
push
pushf
fwait
movsb
mov
bound
push
push
mov
inc
ror
out
mov
ret
xchg
jle
fnstsw
and
insl
or
and
sub
cmp
mov
xlat
repz
inc
inc
inc
jle
sbb
push
lock
pop
in
xor
push
sbb
and
pop
js
rolb
sub
mov
lret
mov
test
cwtl
stos
pop
aam
out
and
xor
sbb
sub
insl
cmp
dec
out
sub
into
jge
into
sti
adc
sahf
test
sbb
daa
push
mov
and
mov
lods
xor
pop
cmp
mov
xchg
mov
jg
xor
fidivrl
pop
xor
jecxz
xchg
mov
pop
imul
lock
jg
cmpsl
shrb
xchg
sub
dec
movsb
jge
lret
and
sbb
loopne
pop
inc
mov
in
dec
mov
nop
mov
test
sub
xchg
aad
push
dec
adc
jns
xchg
or
mov
call
jg
mov
mov
xor
pop
les
mov
adc
or
lret
mov
or
fidivrl
add
fstl
rorb
sub
pop
push
clc
mov
mov
cld
out
dec
sbb
xor
push
repz
mov
sub
lret
cmp
popa
testb
loopne
jnp
lock
ss
cltd
mov
cmp
and
push
xchg
into
and
in
subl
repnz
sub
cmpsl
push
scas
cmpsl
stos
mov
push
adc
fisttps
mov
sti
push
mov
jecxz
sub
notb
loope
addb
subb
in
fmuls
clc
pminub
enter
add
ret
xchg
xorb
sbb
pushf
fs
cmc
push
iret
aaa
jle
sub
call
cmp
dec
pushl
jl
push
add
ja
jnp
insb
data16
aad
stc
and
mov
cmp
push
jl
mov
dec
imul
mov
decl
sub
icebp
pop
mov
push
mov
pop
mov
cltd
dec
xchg
movb
add
sub
stc
push
mov
mov
mov
loop
repz
or
cmp
ss
enter
push
iret
mov
in
lea
cmp
lahf
sub
adc
int3
std
sbb
pop
je
lds
mov
loop
jns
int
movsl
xor
rcrl
out
jp
pop
mov
fcoms
jl
mov
adc
sub
jl
out
sub
adc
loopne
push
dec
in
loop
push
lea
icebp
in
dec
jp
cs
xchg
iret
mov
insl
insb
pop
mov
or
jae
jmp
stos
ret
addl
mov
call
cld
xchg
lea
lcall
sbb
cld
adc
xor
popf
mov
sub
cmpsl
cmc
inc
mov
inc
mov
dec
add
scas
sbb
jmp
xor
pop
push
scas
inc
loop,pn
ret
test
pop
in
mov
lret
imul
outsb
shr
cmp
xchg
mov
xor
fwait
icebp
popf
xchg
mov
jne
sbb
push
insb
cli
add
jnp
loop
mov
int
les
mov
xchg
adc
aad
enter
sub
cmc
add
js
jne
cwtl
test
fsub
mov
fs
mulb
lahf
fsubrs
out
cs
or
pushl
out
xor
lret
nop
leave
and
repnz
fbld
and
insl
shll
fwait
cld
mov
cmpsb
xchg
push
out
mov
dec
dec
dec
scas
rorl
inc
xchg
mov
ljmp
mov
xor
scas
pop
xchg
lret
dec
nop
out
sub
arpl
insb
pop
loop
and
int
mov
mov
sub
dec
es
jl
ret
mov
int
add
dec
or
cmp
push
cmp
test
push
lret
mov
add
xor
adc
mov
jmp
ja
lods
loop
cmp
rep
sub
inc
jb
mov
inc
fistps
mov
les
je
imull
adc
loop
fisttpll
call
cmp
loopne
inc
push
test
fwait
add
dec
add
pushf
add
lahf
out
jge
adcb
jno
test
dec
mov
add
aam
test
call
mov
std
add
pusha
pop
lea
out
call
mov
out
daa
inc
imul
rolb
cmp
xchg
jmp
jg
mov
cmp
aam
push
xchg
movsb
jecxz
mov
in
jne
pop
push
jl
bound
mov
dec
pop
shr
jmp
stos
in
mov
xor
mov
xchg
ret
loop
mov
imulb
inc
mov
xchg
inc
and
jmp
imul
hlt
inc
in
mov
inc
frstor
jno
movsl
push
ret
jge
jp
add
fsub
inc
sbb
sub
pop
rcr
and
push
das
movsb
lea
dec
dec
mov
out
jae
imul
pop
rol
xchg
mov
repnz
adc
mov
push
pop
cwtl
add
out
inc
pop
fimuls
dec
ja
cltd
icebp
leave
scas
pop
sbb
or
cmpsb
pusha
add
in
mov
xchg
in
xor
int3
inc
sbb
int
sbb
fs
daa
jle
push
add
imul
push
sub
push
jne
rcr
push
dec
inc
lcall
shll
add
mov
cs
ds
sub
push
push
add
fsub
xchg
cmp
xor
inc
xor
pop
cmp
mov
cmp
sbb
cmp
mov
out
push
or
push
out
adc
sub
lret
ss
mov
movsb
pop
cs
mov
lds
adc
lock
sub
adc
or
movsb
adc
bnd
out
or
mov
push
push
in
into
jmp
dec
das
addr16
call
loopne
rep
add
lret
push
jle
mov
xor
mov
pop
sub
movsb
fiaddl
xlat
ljmp
mov
jp
adc
add
pusha
jmp
and
js
ret
and
push
jp
mov
testb
adc
pop
leave
inc
insb
sub
std
enter
orb
ror
iret
cmpsl
pop
fnstcw
fwait
mov
rolb
movsb
pop
enter
lods
stos
jo
das
rcrb
add
test
add
lds
xchg
mulb
push
cmp
pop
js
push
imul
cmp
sbb
mov
iret
pop
cltd
xchg
cwtl
scas
fisttps
mov
mov
and
and
add
xchg
pop
push
outsl
xlat
sbb
lret
shlb
mov
jb
sahf
ss
or
loopne
pushf
shll
ret
cmp
std
and
in
gs
test
les
dec
push
inc
fsubr
mov
xchg
lock
cmc
addb
push
pop
dec
or
and
jmp
sbb
xlat
pop
and
mov
jge
dec
nop
outsl
adc
xor
jg
mov
cmp
fldt
int3
or
push
mov
pop
call
gs
or
pop
out
iret
mov
mov
jmp
sub
aad
icebp
mov
mov
xchg
jp
jecxz
nop
mov
mov
push
and
jns
adc
stos
mov
jg
jle
inc
fsubrl
data16
cld
mov
cmp
lods
cmp
ret
aad
scas
xlat
mov
enter
nop
adc
in
lock
mov
sbb
mov
icebp
or
xchg
jb
cmp
xlat
fistl
fisubrl
cwtl
push
cmpsl
push
inc
std
add
add
pop
or
ficompl
jmp
inc
push
mov
test
call
push
jns
repnz
in
fcmovne
or
pop
cwtl
pop
push
in
add
cmpsl
in
inc
call
xor
lret
mov
pushf
data16
sbb
nop
cmc
dec
mov
bound
insb
js
jmp
xor
push
and
xchg
outsl
mov
cmp
loopne
or
inc
and
dec
add
push
push
or
arpl
inc
imul
mov
lea
loopne
ljmp
mov
sti
xorl
outsb
outsl
push
mov
ret
iret
je
insl
adc
in
lret
sbb
push
arpl
addr16
shll
fcomps
jmp
add
aaa
outsl
mov
jmp
lock
push
xor
jno
xor
test
lock
mov
lret
inc
insl
in
or
daa
push
mov
xchg
add
out
ja
adc
sbb
dec
lea
clc
ficomps
aam
adc
sub
inc
shlb
shll
dec
push
cltd
test
sbb
or
rclb
mov
lds
xor
push
mov
aam
xor
or
xlat
addb
fsubr
out
repnz
jne
adc
mov
or
mov
in
xchg
repz
jecxz
scas
push
in
daa
lea
call
ret
mov
add
int3
inc
jle
or
loope
pop
and
pusha
mov
jno
adc
mov
inc
mov
bound
cmp
cmpsl
dec
aas
mov
mov
fistl
mov
mov
je
sub
ret
push
mov
mov
out
rcll
inc
xchg
repz
stos
mov
inc
cli
mov
and
mov
testb
cld
lahf
decl
mov
mov
imul
test
sbb
sub
mov
cli
lea
push
push
insb
pop
mov
adc
cltd
insl
push
mov
mov
push
pusha
fadds
stc
dec
daa
mov
or
xor
es
mov
fldl
mov
cmp
jne
push
jmp
mov
loope
jg
add
sbb
ds
inc
jmp
xor
jne
add
xchg
push
or
jl
fmul
pushf
sbb
lahf
mov
out
std
ljmp
jg
sahf
es
enter
mov
fnsave
pop
add
pop
orl
shr
negl
sbb
loopne
add
add
jmp
jno
xor
and
mov
std
jo
inc
arpl
dec
into
scas
inc
mov
lahf
push
les
cmpsl
xchg
in
imul
jb
mov
fst
repnz
mov
or
rcrb
andl
push
std
out
punpckhwd
or
sti
ret
out
test
push
cmp
mov
inc
arpl
cmp
jns
fs
sbb
in
loopne
add
imul
pop
add
loop
or
cmc
push
repnz
fcmovnbe
sbb
sub
xchg
popa
jecxz
into
std
rcl
xor
inc
cld
jnp
je
mov
adcl
push
adc
out
dec
arpl
flds
push
bnd
scas
into
sbb
movsl
insl
mov
sub
lcall
mov
repnz
dec
push
inc
fldt
and
jmp
or
xor
shll
rcrb
pop
dec
mov
sbb
loope
dec
jbe
adc
call
sbb
lcall
mov
inc
gs
stc
jle
sub
out
dec
sbb
push
loope
push
mov
leave
cs
dec
sbb
fisubl
mov
in
dec
mov
cmpsb
sbb
repnz
adc
fyl2x
mov
rcrb
mov
cmc
xor
orl
lds
inc
mov
hlt
jbe
repnz
adc
xchg
add
push
into
int
sub
adc
nop
sbb
xchg
mov
sahf
imul
xchg
mov
dec
aaa
jne
add
pop
test
fmull
insb
fldt
roll
addl
das
ja
es
cmc
data16
out
inc
xor
mov
pcmpgtw
and
pop
xor
sbb
mov
cmc
push
cld
mov
inc
icebp
test
je
sbbl
push
pop
add
xchg
pop
xor
inc
insb
inc
repnz
and
repz
sbb
test
jns
adc
es
sbb
adc
loopne
adc
add
lea
inc
or
jns
sbb
cwtl
ljmp
mov
jae
push
lret
xchg
gs
stc
pop
sub
adc
pop
imul
xor
cmp
enter
push
mov
scas
hlt
cltd
rcr
lock
repnz
push
jp
sbb
sbb
mov
mov
sbb
sub
subb
jecxz
xchg
stos
stos
or
rcrb
mov
push
adc
add
sbb
pop
out
mov
xor
hlt
cmp
jecxz
scas
aaa
jecxz
jle
je
mov
mov
fdivl
push
outsl
pop
nop
hlt
cmp
mov
das
repnz
xchg
sti
or
shr
adc
lock
mov
in
fs
dec
repnz
inc
push
ss
jecxz
int
xor
or
mov
mov
in
lret
in
xchg
mov
push
jbe
jns
ret
js
fnstcw
jno
bswap
dec
push
les
test
out
mov
fcmovb
aad
test
xchg
arpl
aaa
es
ret
mov
adc
adc
jl
add
out
insl
ret
inc
pop
xor
mov
dec
das
xor
cltd
and
push
iret
add
xor
fldenv
dec
pushf
mov
push
ret
push
sahf
ss
mov
fcoms
jg,pt
pop
mov
je
mov
das
push
jecxz
test
sar
jmp
pop
dec
xchg
jg
iret
mov
pop
mov
ror
rolb
sbb
cmp
mov
jl
clc
fdivr
push
les
repnz
daa
dec
bnd
test
or
cmovl
mov
arpl
ss
inc
jno
nop
ljmp
stos
lods
ss
push
in
mov
push
sbb
push
jno
pushf
mov
lds
ret
ss
inc
hlt
enter
or
into
lret
pop
scas
aam
or
mov
or
les
out
and
sbb
xchg
sbbl
out
repz
mov
and
sahf
push
xor
jo
mov
in
cmp
mov
stos
lds
sahf
imul
xchg
mov
aas
call
mov
cli
cmpsl
add
loopne
sarl
jle
rcrb
jg
push
jne
xchg
xor
ja
dec
rorl
loopne
jo
stc
dec
push
imul
sbb
push
or
leave
sbb
and
pop
aaa
repnz
loopne
out
es
cmp
sbb
inc
sarl
aad
out
add
and
das
test
or
leave
cmpsb
pop
aam
mov
mov
mov
push
sub
mov
daa
xor
jnp
mov
jecxz
addl
xchg
sbb
pop
mov
add
push
jnp
inc
les
mov
and
xchg
loop
aas
sarb
pusha
les
xchg
add
xlat
cmp
std
jo
inc
mov
inc
sub
add
push
inc
mov
lock
push
call
shll
testl
add
ds
nop
or
xchg
jg
and
mov
pusha
adc
and
cld
outsb
ficoms
stc
fmul
loope
test
xchg
jnp
lods
pop
sbb
sbb
sbb
mov
jbe
into
test
pop
or
sbb
sbb
lods
stc
rclb
les
inc
push
bnd
insb
mov
pop
std
bound
in
inc
sub
inc
or
dec
jl
push
sub
aam
mov
xchg
mov
sti
push
inc
dec
or
adc
or
std
cwtl
dec
push
mov
notl
loop
jmp
cs
shlb
add
cwtl
rorb
cli
ljmp
push
jns
xlat
jl
rcl
and
sbb
sub
pop
aaa
xchg
xor
ret
mov
lock
das
cld
jge
cmp
jo
pop
mov
stos
and
or
ret
imul
cmp
jl
fwait
mov
popl
outsl
fdivrs
and
pop
ficoms
adc
shlb
mov
sbb
jmp
mov
jb
cmpsl
jns
pusha
mov
incl
jle
add
insl
mov
push
ficoms
xor
dec
fdivs
pop
rorl
sub
xlat
jmp
pop
imul
repz
pop
imul
xor
dec
xor
aad
fdivrl
lcall
dec
test
jno
mov
xchg
rorl
inc
mov
cmp
push
xchg
in
mov
pop
int3
push
xchg
stc
xchg
push
xchg
xlat
ja
sub
xor
in
aad
sarb
jnp
je
mov
jae
mov
pop
rclb
and
loope
adc
pop
sbb
cld
hlt
fisubrs
cmpsl
xchg
inc
aas
outsl
or
adc
cmp
dec
or
leave
cmp
dec
add
xor
mov
adc
fstpt
hlt
push
fisubl
mov
add
cmp
or
push
xchg
call
icebp
mov
stc
iret
test
jbe
dec
ja
sub
mov
clc
cwtl
jbe
es
jge
fcompl
out
dec
dec
inc
xchg
scas
sub
es
cmpb
mov
imul
push
lds
sbb
lret
pop
dec
cmp
mov
and
sbb
int
xlat
mov
mov
jb
adc
out
repz
pop
pop
rcll
xorb
lea
fbld
cmpsb
push
std
aas
mov
add
ret
icebp
mov
jp
jno
inc
jbe
bnd
and
or
mov
lods
xchg
scas
cld
mov
inc
sub
sub
icebp
push
cmpsb
xchg
jmp
lahf
fs
addb
jg
jg
inc
out
fmul
in
jno
addr16
xor
imul
scas
mov
jbe
call
adc
mov
fisubrs
loop
ffree
mov
sub
aaa
mov
clc
movsb
ds
das
cmp
sbb
dec
into
add
mov
mov
imulb
addr16
shll
mov
cli
pop
mov
and
leave
adc
aas
out
dec
xchg
jecxz
movsb
daa
xchg
or
js
adc
cld
mov
mov
popa
lret
in
pop
xchg
insb
pop
sub
addr16
mov
mov
push
inc
dec
cmp
pop
and
data16
xchg
or
push
pusha
scas
mov
in
mov
ljmp
fcmovnu
inc
aad
daa
push
mov
xor
test
cmpsb
inc
or
push
decl
and
push
pushf
pextrw
mov
gs
out
jnp
add
mov
sahf
pop
fnstsw
sbb
mov
jae
jae
pop
jecxz
or
pop
jle
loopne
lods
fcomps
dec
inc
cltd
dec
daa
mov
stos
and
popa
sbb
rcrl
jge
outsl
mov
andb
inc
xchg
sbb
pop
adc
arpl
xor
push
fldl
ss
xchg
sub
add
in
icebp
jb
addb
xchg
jg
ret
sub
jo
cmpsl
pop
add
xor
popf
inc
insb
cli
pop
data16
jno
ret
addr16
mov
adc
out
movsb
shll
or
add
sbb
lock
jns
out
scas
pop
mov
jns
xchg
nop
jbe
addr16
adc
jle,pn
enter
xchg
xchg
test
imul
and
sub
jp
jmp
cmp
inc
idivb
cld
out
fimuls
repz
mov
dec
ret
std
pop
mov
cmp
out
cmp
and
xor
fs
jmp
lea
add
jns
ds
stos
cmp
xchg
clc
pop
or
mov
rclb
xchg
das
lods
loopne
dec
fwait
jnp
mov
jnp
inc
pusha
jl
jno
mov
gs
outsb
add
push
roll
rcl
fstp
popa
adc
pop
or
xorb
push
sbb
fildll
xchg
and
ss
cmpl
and
adc
inc
xchg
in
jbe
and
into
cmp
mov
stos
push
repnz
addr16
aas
xchg
push
and
out
xor
sub
push
and
mulb
mov
sbb
cmc
xor
mov
icebp
push
int3
jle
sub
ss
inc
shrl
aad
push
jno
clc
out
addl
mov
daa
mov
lods
push
test
cmp
pusha
popf
dec
add
mov
mov
nop
popf
and
dec
pop
mov
cld
add
sub
or
dec
inc
xchg
fwait
jg
push
loope
gs
ja
in
inc
pop
fyl2xp1
ds
or
iret
xchg
scas
cli
leave
lahf
pushf
aas
in
xchg
into
mov
add
xor
fmuls
xor
mov
sub
push
xchg
cld
and
in
inc
jo
dec
push
mov
or
std
push
cld
push
out
adcb
sti
dec
jno
mov
jg
mov
sti
mov
fs
xchg
xchg
cmp
lahf
sub
gs
movsb
sub
gs
or
mov
xchg
insb
jle
dec
jg
sti
xchg
sub
cmp
ret
mov
push
or
je
movsb
in
cmp
daa
fsubl
push
sub
mov
sub
add
mov
xchg
push
mov
ret
inc
adc
pop
mov
mov
cs
or
inc
push
pop
sarb
lock
jmp
scas
sub
rcr
sbb
jae
jb
iret
sbb
jl
pusha
mov
push
inc
pop
pop
pop
push
ficomps
jo
fdivrl
pop
dec
sub
cmp
mov
adc
adc
lock
aam
sahf
stos
mov
ljmp
xor
lods
mov
jp
jnp
add
clc
inc
mov
mov
push
dec
pop
in
sub
pcmpgtw
cltd
or
iret
sub
dec
daa
pop
ret
leave
rdtsc
jbe
rcrl
pop
jno
dec
cld
sub
adc
dec
data16
rcr
aas
js
lret
and
push
lods
pusha
pop
dec
jp
pop
out
jle
mov
mov
push
mov
or
xchg
pop
jae
jbe
imul
jl
pop
inc
and
repz
mov
mov
add
or
shll
push
pushf
fstpt
add
mov
test
pop
fistl
imull
add
mov
lods
xchg
mov
xchg
iret
sbbl
push
cmp
ret
inc
dec
in
push
and
pop
push
or
mov
and
jl
mov
ret
pop
hlt
and
mov
stos
push
push
cmp
jl
cltd
ret
es
cld
ljmp
pop
and
cli
push
xlat
cmp
jp
mov
loopne
mov
mov
lea
sbb
cmp
pop
pusha
sbb
dec
and
popa
out
repz
cmp
cmp
pop
in
gs
xchg
mov
loop
outsb
iret
repz
pop
mov
in
xor
fisubrl
inc
xchg
push
das
insb
xchg
cmpl
mov
adc
push
adc
mov
xchg
test
pop
xchg
push
mov
push
xchg
mov
xchg
mov
sbb
jp
insl
iret
dec
jl
mov
lock
cmp
sub
hlt
test
aas
add
arpl
lcall
sbb
push
push
or
lock
aam
push
into
cmp
cmp
sti
xchg
or
mov
cmc
insl
lret
jns
stc
ret
fs
icebp
hlt
enter
int
sti
scas
xor
dec
pop
scas
enter
testb
je
and
fimull
mov
in
popf
jns
jae
enter
sub
add
adc
mov
int3
or
jl
stos
pop
aas
xchg
jl
inc
movsl
shll
mov
mov
nop
std
add
jecxz
jge
sub
ret
mov
out
repnz
rolb
fbld
pushf
mov
insl
enter
pop
out
ret
fidivl
daa
push
int3
addr16
fldt
pop
fstpl
lea
sbb
inc
push
call
jle
adc
adc
xlat
dec
popa
ljmp
lods
sub
repz
push
dec
mov
loop
jo
testb
in
mov
test
inc
cmpsl
inc
cmpsb
out
cmp
mov
and
lret
adc
lcall
adc
mov
adc
scas
popa
insb
or
fsubrs
lds
push
adc
inc
adc
pop
test
xchg
mov
ja
mov
push
notb
data16
push
imul
adcb
je
insb
xor
call
adc
dec
out
jecxz
icebp
out
pop
incb
sub
sub
sbb
rclb
pusha
sbb
ficomps
xor
lea
xor
ja
cwtl
ret
in
mov
jp
lret
xor
testb
into
insl
hlt
jle
push
outsl
xchg
mov
fsubr
fs
cmpsb
or
dec
pop
jns
and
pop
mov
dec
mov
push
adc
sbb
and
adc
sub
loop
sub
lret
mov
test
aaa
insb
and
scas
dec
loope
lds
nop
cmp
imul
test
xchg
mov
push
pop
or
sub
out
mov
push
dec
leave
imul
rol
test
addr16
bound
lods
and
jne
cmpsl
sbb
rcrl
je
arpl
mov
cmp
icebp
mov
stos
dec
insl
das
data16
adc
enter
inc
test
mov
mov
pusha
cmpsl
fwait
mov
in
int3
sub
gs
test
leave
les
ret
pusha
ds
push
cmc
sbb
lcall
jle
jb
push
push
scas
mov
lea
out
jg
mov
mov
cs
pop
push
sub
stc
cmc
int
fadds
popa
mov
flds
mov
push
push
stos
and
sub
mov
pop
cltd
sub
out
call
fs
insb
mov
mov
pop
sub
movsl
push
mov
scas
xlat
stos
movlps
xor
mov
inc
inc
stc
pop
lods
scas
jo
mov
in
ljmp
inc
mov
jge
repz
pop
push
std
dec
in
inc
jns
mov
dec
mov
mov
xchg
call
xchg
mov
fmul
cmpsl
test
icebp
daa
jne
push
testb
das
sub
push
dec
popa
xor
inc
mov
inc
imul
in
cmp
inc
xchg
loop
aaa
scas
jp
push
dec
aam
pop
inc
pusha
outsb
les
subb
xchg
inc
pushf
fidivl
ss
push
hlt
inc
pop
push
xchg
adc
testl
fdivl
add
aas
inc
xchg
std
rcl
sub
cmp
pop
inc
push
adc
mov
mov
push
mov
dec
xchg
lock
les
and
pusha
fdivl
jge
mov
das
inc
add
adc
cltd
mov
dec
loop
jp
adc
movsl
cmpsl
jno
jb
pop
je
fs
and
hlt
mov
arpl
fs
inc
mov
call
negl
mov
cmp
test
nop
jle
jns
test
sub
loopew
cmp
cmp
popa
push
arpl
sbb
and
clc
pop
cmp
adc
arpl
lret
fisttps
mov
lahf
lahf
push
imul
xchg
jae
enter
pop
xor
jns
sub
jp
mov
cmp
and
mov
mov
fmul
gs
mov
out
int
imull
cs
call
test
test
das
frstpm(287
jae
dec
imul
iret
sub
insl
mov
adc
xchg
mov
jmp
cld
out
das
test
inc
out
bt
sub
clc
push
icebp
loope
inc
or
jecxz
out
xchg
stos
fwait
sti
int3
lret
xchg
dec
into
scas
imul
sbb
sahf
push
cmp
sub
cmpsb
fnsave
or
leave
and
std
lcall
pop
dec
stos
outsl
hlt
fbstp
loop
mov
sahf
mov
or
insl
fildl
shll
pop
imul
shlb
sbb
cmpsb
sub
sub
bound
jne
insb
xlat
imul
adc
repz
movl
jo
jb
out
xor
lret
sbb
inc
add
fidivl
cmpsl
insb
stc
lret
cli
mov
in
sti
dec
jae
cmpsl
push
inc
add
pop
imul
test
in
icebp
inc
int3
jo
scas
cmpb
je
test
dec
cs
negl
loopne
icebp
push
xchg
or
outsl
je
mov
mov
mov
dec
mov
lods
stos
sbb
and
xchg
or
popf
mov
in
xchg
loop
idivl
sbb
notb
in
addr16
enter
call
add
push
dec
cli
push
push
sub
or
lret
dec
movsb
xorb
dec
cli
jge
jne
push
mov
dec
add
jb
or
out
inc
lock
mov
ret
mov
leave
push
inc
cmp
fidivrs
and
pop
call
xchg
mov
mov
cmpsb
andb
repnz
loopne
out
mov
cld
or
inc
insl
stc
test
mov
pusha
fwait
inc
sbb
lret
or
cs
sub
and
xor
xlat
mov
movsl
aas
mov
shl
repnz
imul
adc
adc
pushf
xchg
inc
shrl
add
xor
dec
xor
mov
mov
les
add
mov
in
insb
arpl
jecxz
fwait
dec
pop
adc
dec
jae
mov
jp
mov
mov
pushf
xchg
fstl
inc
inc
push
fldenv
je
test
repnz
jne
mov
and
je
lods
xchg
ret
mov
aaa
jae
mov
cltd
mov
xchg
loopne
xchg
repnz
push
scas
mov
mov
addr16
mov
inc
sbb
adc
xchg
les
mov
or
mov
data16
insl
dec
push
jle
mov
inc
hlt
jbe
mov
enter
adcl
icebp
mov
out
imul
push
out
add
cmp
scas
dec
dec
mov
rolb
dec
out
inc
sbb
popa
mov
pop
hlt
dec
jae
data16
and
iret
xchg
test
dec
fildll
test
das
pop
repz
test
lea
mov
xchg
lret
inc
pop
cmp
adc
mov
iret
adc
inc
xchg
dec
jge
aad
scas
adc
cmpsb
sbb
pop
fistps
jne
fiaddl
loope
push
mov
dec
push
push
out
jo
mov
mov
imul
and
mov
add
mov
or
loop
dec
cwtl
bnd
je
jns
push
stc
sahf
sub
sbb
jp
aas
xchg
loope
jl
push
mov
lret
test
sub
inc
and
popf
mov
jg
mov
aam
push
les
mov
rdmsr
fdivl
scas
out
push
ss
cmp
cwtl
insl
jne
jne
cmp
lret
and
jo
mov
js
mov
pop
gs
pop
pop
mov
aam
pop
ljmp
dec
mov
push
push
in
dec
fldz
in
arpl
push
sub
das
push
dec
jge
les
cmp
add
xchg
hlt
inc
mov
add
mov
imul
sub
dec
push
or
sub
jl
add
xor
out
ret
stos
lock
jnp
dec
pop
sbb
icebp
imull
pop
jbe
clc
add
les
sbb
xchg
test
mov
dec
push
sti
push
pop
fwait
dec
es
in
mov
out
pop
loop
sbb
pop
subl
mov
mov
push
ficoms
call
nop
ret
sub
ret
mov
sahf
mov
daa
rcl
xchg
sbb
jbe
fimull
std
stos
jp
add
add
lahf
add
cmpsl
fwait
cwtl
stos
xor
outsb
ljmp
and
leave
outsb
mov
or
pop
dec
stos
mov
add
int3
sub
ret
lcall
clc
dec
jg
fcomps
imul
xchg
rep
xchg
addr16
adc
inc
xchg
cmpsb
pushf
outsl
and
mov
or
pop
sar
rorb
jl
pusha
adc
movsl
mov
insb
loopne
xor
xchg
mov
add
popa
xlat
xchg
negb
jnp
jecxz
or
dec
sbb
cld
or
sub
ret
cmp
xchg
adcl
movsb
xlat
pop
sbb
mov
roll
mov
and
xchg
clc
fimuls
test
cli
inc
xchg
push
mov
pop
test
xor
pmulhw
dec
icebp
popf
mov
leave
inc
ss
pop
mov
mov
bound
add
adc
sbb
xorl
inc
adc
and
add
js
cmp
jmp
cli
leave
dec
or
or
mov
inc
mov
jns
movsb
lods
js
das
test
sarb
mov
mov
ljmp
inc
das
push
push
int
mov
mov
dec
mov
xchg
popf
lock
ret
xchg
sti
icebp
test
sub
pop
imul
leave
orb
mov
cmp
sub
leave
add
mov
flds
lock
sub
ja
and
addb
sbb
xor
fimull
and
addr16
and
xchg
xor
cmp
in
sbb
pop
test
fdivrl
add
xlat
pop
shlb
movsl
push
and
fisttpl
movb
cmpsl
sbb
or
scas
lods
rorl
test
pop
push
sbb
push
movsb
out
out
pop
cltd
pop
fsubrl
mov
or
jo
adc
jnp
punpcklwd
neg
daa
icebp
pusha
dec
and
mov
or
inc
inc
mov
jb
repnz
aaa
bound
inc
lods
xchg
stos
loope
dec
xorl
ret
xchg
lds
je
pop
iret
or
inc
stc
or
scas
dec
ss
sbb
jecxz
sub
mov
out
leave
testb
add
addl
orl
arpl
es
cmp
mov
dec
pusha
dec
lea
inc
daa
fldl
stc
inc
cwtl
push
adc
add
mov
lcall
inc
mov
daa
pop
and
xchg
jle
sub
jnp
xor
xor
xor
subl
mov
pop
cmp
sti
dec
mov
rorb
iret
test
add
xor
into
mov
inc
movsl
mov
gs
sbb
mov
aam
dec
in
sti
mov
pop
mov
or
mov
mov
and
stc
mov
jne
outsl
out
movsl
fsubl
mov
sarl
jge
pop
movsl
fs
sbb
iret
clc
xchg
mov
push
jecxz
scas
addr16
and
mov
dec
jbe
add
mov
rcl
cmp
inc
stc
inc
fwait
cmp
sbb
pop
sbb
mov
sbb
fs
out
pop
push
dec
and
push
sbb
lret
ret
je
dec
jl
sub
lock
mov
push
aaa
push
divb
mov
inc
loop
roll
and
loope
rcl
xor
cmpsl
addb
sbb
mov
lods
dec
dec
shll
or
sub
push
bound
sbb
dec
mov
sub
jo
inc
sub
in
loop
inc
insb
inc
in
mov
out
pop
cltd
fstl
popf
loopne
pop
inc
repz
mov
pop
cmp
sub
ror
enter
out
sub
out
imul
push
rcl
cmpsl
xchg
and
lods
outsl
cld
loopne
or
imul
lds
push
test
jle
gs
cmp
mov
sub
std
lods
xor
or
pop
mov
dec
in
sbb
lret
lock
in
pusha
dec
imul
pop
xchg
mov
adc
gs
out
inc
xchg
or
lcall
ret
and
mov
sbb
dec
inc
bswap
es
cmp
sub
add
fstpt
scas
imull
pop
pop
jge
mov
xor
or
ret
insb
cmp
jmp
mov
insb
sbb
dec
nop
push
mov
inc
into
inc
test
imul
pop
hlt
xorl
in
mov
repnz
mov
inc
std
xchg
rolb
sahf
shl
sub
int3
sbb
fldcw
orl
jmp
fisttpl
cmpsl
push
imul
xchg
pmulhuw
sbb
add
mov
insb
fnstsw
imul
mov
sbb
ret
sub
xor
sbb
and
and
mov
stc
sbb
mov
inc
pop
arpl
ss
or
mov
or
sbb
mov
mov
cwtl
inc
xchg
xor
cvtdq2ps
mov
jmp
out
scas
les
fldl
mov
stos
loope
dec
jne
xor
add
mov
outsl
daa
and
xchg
inc
xchg
test
pop
fsin
cmp
in
ret
stos
dec
sub
clc
test
sub
jnp
fsubrl
outsb
inc
jg
in
frstor
jb
cmp
std
mov
rolb
inc
mov
jecxz
mov
mov
test
xor
fcoms
mov
mov
pop
pusha
sub
or
iret
leave
mov
loope
xchg
adc
icebp
ficomps
in
orb
cmpsb
dec
in
test
cs
mov
call
orps
mov
push
dec
scas
dec
cmp
cmp
outsb
daa
shll
arpl
pusha
mov
jmp
mov
pusha
pop
jnp
fsubrp
and
cmp
es
and
leave
jbe
mov
mov
testl
out
bswap
fucomi
mov
aaa
xorb
push
jmp
in
cld
outsb
mov
test
aas
push
inc
mov
mov
cmc
mov
xchg
mov
pop
ja
inc
lods
cmp
pop
in
fdivr
sbb
pmuludq
mov
andl
push
fidivs
lcall
das
pop
or
xor
mov
jmp
mov
int3
mov
int
ret
clc
push
or
jbe
mov
insb
cmp
xlat
or
sub
pop
dec
xchg
mov
test
hlt
dec
jmp
in
test
and
fisttpll
clc
dec
loop
add
call
sub
sbb
pop
inc
mov
pop
push
ljmp
jo
sub
jl
jb
aam
mov
sbb
lret
sbb
jle
insl
mov
ret
rorl
adc
xor
lahf
stos
adc
dec
pusha
negl
cmpsb
cld
fadds
mov
int
sbb
sbb
dec
jnp
push
cld
incl
jmp
shlb
enter
xor
loopne
mov
or
xchg
lret
fcompl
dec
mov
scas
ficoml
out
jmp
jle
xlat
sbb
cmpsb
sub
xchg
fnsave
outsl
in
mov
sub
jne
and
jge
and
fdivrl
into
or
es
mov
outsb
mov
xchg
push
cld
movsl
lret
test
in
shl
sbb
test
iret
cmp
es
lcall
cmp
add
and
dec
rcl
das
fcoml
jg
push
jmp
dec
jecxz
movsl
jno
sub
and
repnz
andl
mov
pop
mov
pop
and
adc
in
icebp
lret
mov
lea
adc
pop
push
adc
dec
push
test
out
add
push
jmp
push
xchg
add
addr16
or
add
das
push
std
or
and
cmp
stos
mov
sbb
xor
sub
fisubrs
leave
inc
rclb
dec
mov
mov
dec
mov
pushf
fsubr
and
inc
sbb
cld
jmp
shr
or
cs
push
sbb
mov
sahf
xchg
arpl
pop
arpl
pop
fcmovu
shrb
stos
or
jmp
mov
lret
or
movb
mov
fsubp
rcrl
dec
push
inc
mov
inc
shlb
aam
dec
out
jle
inc
inc
pop
adc
mov
addl
daa
and
int
out
cmc
std
out
cmp
ret
jne
push
dec
push
add
jecxz
xchg
pop
jmp
scas
movsb
sbb
add
pop
sarb
mov
and
and
lcall
xchg
pop
pop
les
imul
aad
insl
dec
xor
xchg
scas
pop
push
jae
jg
stos
xor
aam
add
and
cwtl
and
stos
push
jnp
xchg
popa
mov
clc
inc
imulb
xor
jnp
sub
mov
fwait
subb
xchg
xor
jnp
xor
dec
lret
sbb
mov
cli
adc
subl
sub
or
das
xchg
popf
lcall
shll
jl
scas
cld
mov
in
adc
sub
lret
sarb
xchg
inc
movsl
int
sbb
xchg
sub
out
rolb
inc
mov
or
rclb
adc
and
sbb
xchg
das
dec
adc
cmp
ljmp
je
push
icebp
sbb
mov
mov
stos
push
test
xlat
cmp
add
stos
cmc
jmp
inc
fstps
jo
jp
cmp
xor
sub
and
ljmp
in
test
xor
pushf
adc
or
mov
fcompl
add
add
xor
adc
or
ret
fwait
inc
sbb
mov
mov
push
test
test
aad
add
loop
push
lea
dec
ljmp
cwtl
pop
mov
xor
mov
pop
mov
jb
jae
add
push
js
or
adc
inc
in
pop
mov
shrl
ret
mov
ljmp
or
cmp
and
iret
ret
dec
ljmp
lods
xchg
jnp
cmp
jb
add
out
xchg
stos
mov
mov
in
add
ljmp
xor
dec
inc
mov
es
imul
out
mov
lock
push
cmp
mov
push
jno
jge
mov
mov
dec
test
or
fildl
shr
jo
aas
lret
call
bound
scas
and
mov
inc
jbe
std
ret
inc
xchg
cs
push
sub
jb
and
xchg
mov
mov
aaa
xchg
stos
pop
or
adc
cmc
mulb
fmull
jp
pushf
insb
xchg
test
or
cmpl
mov
cwtl
movsl
inc
sbb
fidivl
cmp
test
out
repz
cwtl
dec
mov
out
sbb
pop
pop
and
adc
adc
jb
insb
in
cmp
movsw
jno
ss
or
in
leave
std
outsl
popf
sub
xchg
jno
push
pusha
sub
push
dec
lods
outsb
jecxz
mov
in
cmp
test
dec
sub
popf
push
adcl
lret
pop
test
add
pusha
sti
stos
ss
push
test
outsb
xchg
xchg
ret
fiadds
mov
or
sub
lret
push
push
jno
btc
mov
std
mov
test
pop
or
lcall
sbb
fldcw
mov
ss
movsb
cmpsl
or
cmp
scas
xor
aad
stos
mov
mov
adc
aaa
dec
jno
inc
mov
fcmovb
clc
add
and
xor
ja
mov
adc
test
hlt
fldenv
lock
ja
orl
adc
pushf
hlt
test
stos
sub
loop
mov
mov
loop
mov
pop
pushf
shrw
aaa
inc
icebp
push
cmp
mov
rcrb
add
cmp
jo
nop
sahf
mov
adc
hlt
inc
sub
adc
pop
loop
mov
fiadds
test
stos
iret
or
adc
fbld
sbb
ret
cmc
imul
dec
mov
jo
or
jno
ljmp
mov
xchg
shlb
das
add
inc
push
ljmp
int3
pop
pop
ljmp
pop
nop
out
mov
ljmp
or
or
cmp
mov
xchg
adc
or
mov
das
insb
fists
xor
mov
dec
sub
sarl
jecxz
std
mov
and
das
xor
out
xor
jecxz
push
enter
and
pop
lret
fs
pop
ja
call
sbb
cmp
pop
push
and
lret
lret
xlat
inc
mov
fwait
push
pop
jne
inc
ds
jmp
pop
sbb
push
subb
xor
mov
enter
ja
stos
pop
sub
dec
jo
mov
push
pop
xlat
adc
adc
mov
out
pusha
dec
push
decl
out
stos
lock
mov
sbbl
in
adc
aam
lods
fstpl
add
imul
iret
or
stos
xchg
mov
in
push
bound
sbb
pop
xor
scas
jecxz
test
mov
lea
or
ja
push
sahf
add
fadd
cmp
push
jns
xchg
xor
cmc
lret
inc
test
stos
ljmp
loopne
jmp
decl
int
fld
lds
jno
xor
cld
sbb
mov
adc
adc
or
inc
mov
adc
mov
sub
xchg
jp
mov
push
or
inc
cld
mov
xlat
jg
mov
pop
dec
test
lret
enter
add
scas
outsl
and
inc
repnz
das
test
pop
js
mov
mov
xor
mov
mov
loopne
xchg
pop
cmp
stc
gs
lock
jp
inc
dec
sub
or
jb
out
xchg
mov
mov
icebp
lods
push
mov
iret
dec
jge
or
push
popf
movsb
pushf
test
iret
mov
testb
mov
jno
stos
fadds
das
shl
fwait
lds
hlt
shlb
aas
test
inc
ret
inc
inc
cli
lahf
xchg
lea
scas
inc
aas
lret
shrb
addr16
jns
stos
hlt
in
push
hlt
data16
pop
adc
ficompl
sub
dec
test
pop
ficoms
ss
dec
in
pushf
sbb
shlb
hlt
mov
pop
fildl
inc
inc
inc
dec
stc
push
loope
xorl
mov
int
leave
lahf
mov
mov
loope
arpl
scas
repnz
lods
jbe
push
inc
insl
push
sahf
push
scas
test
fdivrs
popf
pop
iret
xchg
xchg
add
jo
cmpsb
and
inc
jge
and
cmp
push
scas
lods
arpl
xchg
xor
arpl
dec
cltd
lcall
pop
and
movsb
flds
pusha
ja
mov
mov
cmp
lahf
xchg
test
jno
lods
mov
clc
dec
in
inc
inc
inc
fmull
nop
je
and
xor
data16
push
bound
inc
clc
mov
push
test
xchg
pop
insl
xor
out
cmp
aaa
in
psubusw
push
xchg
lret
sub
pop
cmp
dec
scas
cltd
stos
test
rorl
mov
push
in
sub
data16
mov
movsb
sbb
ror
cs
test
adc
inc
enter
and
shlb
mov
movsl
je
cmpsb
add
or
mov
add
xor
insl
jmp
cmpsb
insb
pop
jmp
adc
jmp
xor
es
push
mov
outsb
jle
insl
in
mov
mov
iret
fsubrs
aam
push
sub
enter
inc
pop
cmp
fcomip
inc
enter
movsl
jle
dec
mov
out
hlt
sub
mov
cs
jp
push
testl
jecxz
mov
scas
es
shlb
cmpsb
jbe
gs
cmp
mov
mov
mov
jo
sbb
sbbl
insl
sahf
lods
adc
ret
pop
pop
out
scas
mov
dec
mov
int
xchg
mov
mov
add
rclb
sti
repz
js
fistps
jbe
fsts
cld
sub
scas
jns
or
inc
push
adc
mov
ja
and
mov
pop
push
adc
dec
pop
push
or
or
loop
loopne
lods
int3
movsb
jp
mov
pop
or
cltd
lea
mov
xlat
mov
inc
push
mov
inc
jae
clc
add
xchg
mov
lcall
fmuls
outsb
mov
inc
loop
mov
add
inc
hlt
adc
or
call
dec
mov
push
mov
mov
gs
cs
cmpsb
and
mov
sub
arpl
insl
lahf
push
addb
loop
bound
lock
lock
xchg
dec
pop
sarl
in
test
dec
cmp
call
aad
in
arpl
das
xor
push
push
xor
xchg
lock
out
mov
xchg
adc
xor
and
dec
jne
call
in
pop
add
cmpsb
pop
inc
mov
xor
ja
add
sbb
push
cmp
mov
mov
mov
fsubrp
clc
lods
jg
out
inc
shl
mov
lahf
ss
pusha
mov
cmc
test
mov
adc
xchg
ljmp
and
xchg
pop
xchg
jbe
arpl
lds
xor
mov
ja
stc
xchg
sbb
pushf
rorb
cld
xor
dec
das
lcall
cmp
pop
jg
mov
pop
mov
jge
add
out
fidivs
xchg
push
cmp
xor
cld
xchg
arpl
mov
xchg
cmpsb
adc
pop
fucomp
aad
jecxz
jns
inc
mov
sub
mov
aas
cmp
ss
cmpsl
mov
jp
dec
sahf
stc
imull
fwait
int
xor
loop
jb
imul
xchg
aaa
pushf
jmp
cltd
shr
gs
push
inc
and
xchg
mov
jae
fbld
test
dec
in
je
insb
mov
fdivrs
inc
lahf
mov
dec
leave
xlat
and
insb
and
lcall
jbe
lea
test
imul
js
inc
push
imul
rol
iret
mov
sbb
push
ret
les
jmp
and
aam
lods
ret
fwait
clc
std
sti
cmc
mov
movsb
ljmp
rorb
push
mov
gs
and
int3
mov
fsts
lahf
sarl
xor
push
mov
ja
xor
cmpsb
inc
in
inc
or
adc
push
in
pop
xlat
enter
xor
fadds
sarb
fwait
or
jae
lds
int3
dec
test
fcompl
cmp
mov
or
stos
cmp
add
test
jmp
add
push
decl
movb
sbb
arpl
lock
mov
or
adc
es
pop
insb
lds
repz
arpl
call
mov
adc
imul
std
mov
push
dec
outsl
pop
push
hlt
lock
cli
daa
data16
notb
ds
adc
cmpsb
shlb
filds
cmp
mov
int
int3
stos
int3
xor
xchg
shr
pushf
jo
addr16
mov
bound
aaa
stc
test
lcall
pop
popl
mov
pop
std
icebp
xor
mov
pop
dec
xlat
ret
negl
add
rolb
cwtl
sbb
add
xor
je
and
lds
je
popf
es
dec
cld
and
cmp
xorb
sub
std
mov
pop
cltd
in
lahf
jl
inc
hlt
jbe
out
pushf
jae
addr16
lcall
out
inc
stos
inc
xchg
adc
xchg
test
sbb
cmp
adc
and
andl
mov
inc
mov
pop
mov
adc
xchg
mov
iret
mov
xor
jge
jle
popf
outsl
push
sahf
loopne
movlps
xor
cltd
sub
pushf
add
sbb
arpl
scas
mov
adc
mov
stos
jae
addr16
sub
inc
stc
movsl
int3
push
ljmp
outsb
out
or
and
xchg
fcomps
push
stos
lret
add
mov
jg
sbbl
jge
jo
mov
dec
jb
jl
jno
push
adcb
mov
jmp
xchg
cmp
or
aaa
aam
lock
xor
bound
inc
cld
jmp
jp
cld
add
insb
jne
pusha
or
dec
addl
aas
xchg
out
inc
pop
pmaddwd
call
in
mov
and
inc
stc
or
cmp
mov
add
insb
dec
lret
pushf
xor
shl
cmpsb
gs
in
mov
pop
sub
fimuls
das
xchg
mov
lock
jmp
out
jne
test
int
cmc
pop
ja
add
insl
aam
or
bound
incb
sbb
fidivl
mov
popa
cmp
mov
inc
mov
test
test
mov
xrelease
popl
enter
test
jmp
scas
arpl
inc
xchg
jb
or
pop
and
and
iret
pop
mov
out
aam
add
fstp
stos
repnz
dec
mov
add
xor
sub
jne
in
sub
mov
in
and
jne
loope
push
fsubl
mov
test
mov
cmp
cmpl
inc
in
cmp
movsb
add
dec
pushf
loopne
sbb
outsl
adc
and
pop
push
fdivrs
xchg
inc
xchg
sbb
mov
or
pop
jnp
pop
adc
push
sub
jb
mov
lods
and
mov
mov
inc
pop
add
incb
stos
mov
repz
push
loop
mov
leave
dec
or
cli
or
ret
inc
insl
xlat
lret
mov
cltd
out
mov
ret
outsl
cli
push
pusha
and
test
jge
cltd
mov
cmp
pop
push
xor
fdivrs
dec
xchg
mov
outsb
add
mov
pop
es
push
fisubrs
inc
mov
xchg
pop
jno
rorl
or
sub
lret
cmp
gs
testl
cmc
add
nop
add
push
sahf
or
into
pop
dec
lea
inc
sbbl
xlat
mov
dec
loop
jno
or
scas
pop
xchg
cmc
int
xor
cmpsl
shrb
insb
add
add
cs
mov
xor
and
in
fcoms
fcmovnb
mov
inc
mov
repnz
mov
jne
cmc
xchg
push
add
and
push
add
dec
icebp
xor
lds
sub
imul
sub
sti
imul
xlat
and
jg
xor
mov
pop
insb
adc
xor
xor
pop
xor
and
dec
inc
mov
inc
icebp
imul
or
mov
mov
jno
pop
pop
push
in
gs
pop
xchg
mov
call
inc
dec
ds
and
jle
ja
pop
out
cmp
into
pop
mov
popf
fwait
insl
bound
lret
test
cmp
jnp
mov
stos
add
hlt
cmp
loopne
icebp
cmp
scas
sub
fnstenv
mov
pop
mov
enter
repnz
imul
imul
xchg
jno
popl
fcomps
mov
inc
mov
test
adc
or
ljmp
es
outsb
and
lret
popf
adc
cmc
xchg
icebp
ret
push
inc
mov
outsl
lcall
cmp
lds
in
pop
dec
xchg
orb
xor
lahf
dec
cmp
movsl
sbb
enter
ret
xchg
push
subl
push
xchg
mov
dec
inc
icebp
cmp
push
jg
and
nop
pop
lret
ret
jb
dec
pusha
hlt
or
cmp
cwtl
push
pop
mov
shl
xor
test
arpl
mov
cmp
sub
arpl
movsb
cmp
fldcw
das
mov
fnstsw
cmp
or
in
fsubrl
lahf
dec
adc
rclb
pop
inc
sbb
pop
cmp
ss
jmp
cmc
xor
cmp
cs
xor
dec
pop
xor
adc
inc
in
pop
popa
push
ds
and
cld
sbb
cmp
sbb
add
sbb
cmp
add
pop
aas
outsl
stos
pop
mov
sbb
rcll
cmpb
leave
test
std
jecxz
in
jns
leave
loope
cmp
filds
cmp
stos
loopne
pop
in
jecxz,pt
sahf
stos
ljmp
mov
loop
add
sub
fisubl
fwait
fs
ret
xchg
sub
adc
dec
scas
xchg
mov
pop
mov
and
mul
or
repnz
push
int
std
add
dec
and
inc
mov
fdivrs
lods
mov
push
test
mov
push
dec
fisubl
inc
in
jb
in
inc
dec
jmp
push
notl
lock
in
into
add
sbb
test
xor
rcrl
pop
push
movb
jmp
lcall
loopne
std
iret
jbe
es
xchg
movsl
std
int3
dec
imul
mov
or
xchg
loopne
mov
xor
xor
cltd
rcll
xor
pop
and
sub
movsb
hlt
rolb
scas
lcall
jno
sbb
adcl
hlt
push
xchg
pop
loope
mov
stc
mov
mov
pop
neg
jg
lahf
jmp
push
test
lret
int
popa
mov
dec
test
ficoml
jl
ret
push
adc
sub
repz
add
shlb
push
int3
ljmp
arpl
jl
and
lods
pop
je
mov
fists
add
adc
xor
popa
shlb
dec
cmp
arpl
stos
or
pushf
int3
push
mov
mov
sub
dec
pop
shlb
xchg
pop
je
and
adc
dec
pop
sub
pusha
push
or
jne
xchg
mov
enter
lret
pop
or
imul
cmpsl
mov
fucomp
pop
and
ret
mov
dec
jno
lret
daa
mov
dec
or
inc
les
pop
aam
and
repz
lcall
outsl
push
mov
movsb
mov
pop
sbb
adcl
jge
hlt
sbb
test
add
add
cmpsl
lods
test
in
mov
cmp
cld
or
jl
add
int3
repnz
addr16
xorl
pop
stos
jg
adc
push
daa
clc
mov
popl
lds
fcomip
ret
sbb
add
rorl
mov
dec
mov
dec
add
fdivr
sbb
subl
push
jmp
add
rol
cmp
cmp
fnstcw
dec
push
andl
jbe
ss
pop
mov
jp
xchg
call
or
enter
pop
mov
lea
mov
outsb
jae
fists
jbe
mov
lcall
or
test
lcall
cwtl
dec
push
dec
data16
xor
mov
fwait
xchg
jb
cmp
add
and
in
sub
xorb
cli
jb
xchg
clc
in
hlt
and
hlt
inc
divl
adc
sti
dec
cmp
inc
mul
sub
fisubl
cmp
xor
push
negb
flds
cmpsl
mov
jae
mov
insb
repz
int
cmpsb
push
lcall
inc
movsl
inc
jg
and
int
push
out
push
sub
ret
stos
jo
fwait
dec
jmp
inc
xchg
addr16
mov
in
pop
test
sub
jnp
pop
pop
xor
and
jno
hlt
mov
mov
fwait
nop
into
pop
and
jne
sbb
xchg
clc
rcr
xor
and
inc
out
cmpsb
cli
ljmp
icebp
sti
xorl
ljmp
jmp
sub
add
test
lcall
ss
mov
loope
push
mov
aas
pusha
lcall
in
dec
js
loop
push
jbe,pn
adc
cmp
cmpsb
lcall
popa
jb
sub
arpl
lds
cmp
movsl
xchg
mov
fs
in
dec
testl
mov
xor
pop
dec
mov
shlb
aas
xlat
imul
cmpsb
pop
je
stc
inc
mov
scas
xchg
dec
jb
sub
out
cli
mov
leave
xor
or
lods
mov
mov
jge
push
push
jmp
test
mov
data16
push
insb
jmp
fsubs
cltd
mov
mov
mov
out
and
ficompl
push
outsl
test
pop
lods
arpl
and
call
fs
push
sub
mov
rorb
jg
aaa
xor
int
push
dec
lahf
mov
retw
test
addl
pop
ljmp
ljmp
sub
mov
sbb
push
xlat
dec
dec
insb
int3
jae
cmp
bound
cmp
push
out
arpl
std
js
mov
xor
js
adc
sub
outsl
mov
push
push
jb
cmp
mov
fwait
subl
inc
mov
mov
loopne
xchg
shlb
mov
push
cmpsb
mov
pop
adc
repnz
into
mov
stos
cltd
mov
inc
and
in
jo
call
enter
push
test
repnz
lea
mov
jmp
add
je,pt
repz
push
pop
loop
mov
mov
adc
jae
daa
mov
sbb
mov
out
xor
addl
cmp
push
out
imul
test
mov
outsl
aad
pop
sbb
shl
int3
ds
ja
loop
adc
xchg
push
hlt
jb
mov
lret
pop
je
pusha
sub
pop
ss
pop
out
aam
cmp
jne
pop
inc
mov
mov
or
pop
outsl
stos
shl
or
pushf
out
sarb
mov
or
cmpsb
shrb
and
xchg
jb
mov
jne
mov
ret
or
gs
fdivrl
xchg
loope
inc
lcall
movsl
jne
xchg
movsb
subb
sbb
pusha
push
movsl
adc
mov
nop
out
in
jge
lock
pop
into
cltd
dec
in
or
push
adc
xor
and
lcall
xchg
cmp
insb
xchg
shr
sub
sbb
sbb
imul
fdivl
rclb
and
push
cltd
adc
inc
inc
jno
jae
jnp
mov
stc
pop
xchg
scas
pop
aaa
dec
xor
push
loop
cwtl
lahf
aaa
pushf
aad
daa
lods
adc
lods
lock
cmp
cmpb
mov
pop
addr16
adc
fs
pop
pop
jmp
rcl
or
jmp
mov
sbb
inc
adc
fcompl
inc
push
cmpsb
imul
in
push
pop
mov
xor
pop
mov
dec
xchg
push
jmp
int
mov
xchg
cwtl
inc
dec
add
into
mov
sbb
int3
in
xchg
clc
mov
xorb
pusha
fsubrl
mov
mov
push
cmp
loopne
sub
mov
jmp
xor
mov
adc
lock
jge
and
jnp
clc
ss
mov
jmp
icebp
fidivrl
outsl
ficompl
addr16
lock
mov
loop
sbb
ret
lret
lahf
shrb
pushf
out
imulb
adc
sti
aas
xor
fimull
shll
inc
sbb
sub
push
pop
out
fucomi
pop
repz
aad
lds
jmp
test
push
inc
std
shll
and
sbb
leave
jp
mov
jl
or
add
sbb
ljmp
xchg
push
sbb
xchg
ljmp
push
orb
std
stc
mov
inc
movsb
push
rol
xchg
mov
push
xchg
jo
fs
jmp
addr16
xchg
push
nop
or
jl
pop
loope
sub
aaa
sbb
push
push
add
pop
enter
lcall
pop
xchg
ss
inc
jnp
push
ja
push
lods
sub
icebp
mov
cmp
jns
mov
roll
gs
adc
adc
lret
mov
sub
xchg
sbb
es
jns
inc
xchg
fstpl
aad
in
scas
rcrb
stos
or
adc
jp
movsl
mov
mov
repz
add
movl
mov
cmp
sar
int
stc
dec
pusha
inc
cmp
add
adc
jno
or
out
jmp
lock
loope
xor
test
xor
repz
sbb
mov
pop
popf
ja
adc
lret
xchg
push
jl
push
inc
loope
jle
mov
hlt
mov
jno
mov
dec
or
iret
fldenv
outsl
faddl
frstor
jns
inc
out
test
sti
xchg
adc
inc
xlat
add
ret
pop
ret
xor
mov
lret
mov
cli
xchg
adc
jns
dec
push
negb
xchg
loope
mov
lcall
mov
xchg
cltd
mov
shl
lret
std
stos
lock
aas
xor
pop
pop
adc
or
cmp
pushw
ds
cmpsb
adc
out
push
test
fcmovbe
lahf
dec
mov
loopne
lret
mov
and
hlt
inc
ret
dec
pop
pop
aas
push
fstl
shrb
dec
push
sti
pop
enter
test
imul
pop
mov
scas
mov
mov
enter
int3
ficomps
add
mov
pop
or
sub
xchg
or
or
test
roll
sarl
jp
sbb
pushf
push
push
cmp
mov
test
out
xor
fucomp
push
jb
pop
filds
add
jle
imul
std
xchg
dec
pop
xor
cli
clc
xchg
test
test
cwtl
es
mov
fnstenv
mov
fildll
fisttpll
push
and
ss
push
xchg
imul
addr16
hlt
inc
stc
or
mov
xor
mov
adc
or
pop
pop
xor
mov
inc
arpl
dec
mov
jmp
xor
sbb
xchg
mov
adc
inc
cwtl
sub
xor
and
pop
sbb
cmp
adc
sub
or
cmc
pop
dec
sarb
sub
fdivs
cmc
loope
xchg
adc
stc
xchg
es
mov
roll
ljmp
not
mov
push
push
xor
sbb
or
xor
push
push
and
leave
test
adc
jecxz
hlt
popa
jbe
sbb
dec
jno
mov
push
ja
inc
jp
pushf
stos
insb
je
mov
stc
inc
pop
fyl2xp1
inc
jge
xchg
cmp
inc
jmp
adc
mov
out
jo
ja
fdivrs
jecxz
in
icebp
out
jno
movsb
imul
mov
mov
imul
decb
push
mov
popf
adc
aam
sub
repz
jp
dec
adc
sbb
mov
daa
mov
jl
je
xor
icebp
scas
test
or
mov
sbb
jo
or
pop
mov
aam
mov
aas
push
sub
or
sbb
pop
add
fs
pop
xor
inc
std
ficoms
mov
mov
cmp
lcall
das
ret
push
mov
add
pop
clc
mov
sti
movsb
aaa
scas
idivl
gs
add
and
push
roll
inc
and
filds
cmp
and
adc
into
sub
dec
inc
add
jno
mov
test
fldt
xor
and
nop
push
lret
and
push
jnp
xchg
xchg
push
push
enter
fstpl
mov
dec
push
and
or
mov
push
cmp
or
fs
inc
aaa
fildl
xlat
jmp
leave
xor
ljmp
mov
insb
sbb
icebp
push
outsl
ja
adc
call
jbe
mov
inc
jge
mov
int3
ljmp
mov
sbb
sbb
std
adc
push
xor
cmp
fs
jge
pop
dec
lahf
mov
and
mov
cmp
roll
adc
and
pop
pop
das
inc
ret
rclb
push
sbb
mov
and
add
and
rorl
or
add
dec
sbb
mov
lcall
xchg
cmc
fwait
sbb
outsb
scas
or
mov
out
mov
subb
jb
in
in
and
jge
xor
insl
ljmp
mov
sbb
dec
adc
push
stos
mov
or
aad
pop
mov
pop
sub
fwait
mov
jp
lret
adc
ljmp
int
sub
dec
dec
cld
pop
imul
cmp
mov
fildll
mov
nop
fnsave
lods
lcall
bound
or
cmp
sub
push
fnsetpm(287
fistps
sbb
dec
xchg
mov
jo
or
mov
les
pop
ss
inc
adcl
cmpsb
into
and
push
iret
or
and
stos
push
out
adc
adc
cwtl
addr16
cs
jp
lods
mov
fld
xor
pop
and
aaa
stos
lds
add
movsb
cmp
stos
push
dec
stos
push
xchg
fs
xchg
dec
lea
lds
adc
add
pop
xlat
sbb
pop
xor
jp
sbb
pop
jnp
fsubp
addb
mov
jno
arpl
cld
add
fwait
push
out
pop
in
sahf
out
pop
mov
xor
movsl
xchg
sub
outsl
hlt
sahf
lods
stos
mov
in
jmp
das
cmp
data16
sarb
pop
fildl
mov
jecxz
sub
das
in
jne
mov
xor
fs
mov
sub
bound
in
and
scas
inc
adc
jbe
sbb
outsb
sbb
dec
std
pop
pusha
mov
mov
std
push
and
lcall
mov
jae
loope
jns
sub
sbb
mov
ja
stos
clc
xchg
or
pop
mov
push
inc
ret
xchg
hlt
lret
andb
lret
movsb
jg
mov
mov
call
lods
out
bound
ficompl
sub
shrb
xchg
mov
adc
adc
xor
mov
sbb
add
pop
push
imul
mov
and
inc
scas
lods
xchg
mov
lret
inc
out
outsl
xchg
sub
cmp
dec
add
lods
cld
mov
and
setnp
or
mov
mov
in
xchg
in
dec
inc
gs
fcomps
push
in
fldt
movsb
mov
push
outsl
xor
leave
xor
push
jmp
or
jge
cwtl
and
push
popa
mov
sahf
pop
fildll
ds
ja
repz
dec
lea
add
popa
mov
into
sbb
rcr
in
decb
cmp
insb
dec
shll
xor
mov
push
pushf
mov
outsl
loop
mov
jecxz
pop
mov
addl
test
mov
stos
xor
shlb
add
dec
test
inc
js
test
nop
pushf
aaa
and
das
inc
cmp
aam
mov
lods
lret
add
mov
out
lsl
adc
sti
fbld
dec
pop
jmp
cs
stos
adc
incl
xchg
iret
lret
les
les
outsb
rol
cmpsb
mov
std
les
xchg
adc
sbb
in
mov
or
cmp
jmp
in
sub
icebp
add
cmp
daa
decb
inc
repnz
ret
ja
mov
sahf
mov
jo
dec
sub
push
jb
repnz
add
scas
pop
hlt
inc
jno
ja
or
negb
push
leave
jle
lret
subb
dec
jg
mov
sub
add
add
and
lea
xchg
mov
pop
pop
test
loope
dec
mov
or
push
mov
out
adc
xchg
add
push
jmp
test
push
jbe
insb
and
outsl
dec
mov
push
hlt
movsl
jns
mov
push
xchg
lods
sbb
mov
test
xor
imul
cli
je
int3
push
fdivp
pusha
inc
gs
mov
out
or
leave
int3
mov
mov
dec
or
outsb
test
jae
out
mov
cwtl
xchg
xor
fadds
mov
push
mov
push
sub
or
adc
iret
test
test
mov
adc
cmpsb
push
sbb
and
add
lcall
xchg
lods
xor
repz
ja
scas
stos
xor
add
adc
cmp
mov
pop
mov
or
add
sbbb
subl
mov
inc
pop
jle
test
push
hlt
insl
xor
or
adc
push
pop
sbb
mov
fucomi
mov
aas
pop
ds
or
lahf
icebp
rolb
push
fsubrs
inc
scas
inc
jl
fildll
or
out
mov
or
mov
scas
imul
roll
mov
popa
sbb
hlt
cmp
mov
push
mov
call
xor
xchg
inc
xlat
out
in
dec
cmp
iret
xchg
decl
enter
faddl
outsb
lahf
mov
adc
xorl
iret
and
mov
aam
inc
in
pop
mov
or
lret
shll
iret
jmp
fisubl
jmp
xchg
test
ljmp
lods
pop
xchg
shlb
pop
jmp
adc
mov
push
xor
dec
mov
or
dec
or
pop
imul
and
xor
loope
pop
lods
xor
orb
aam
adc
out
test
push
mov
jecxz
cmpl
lcall
push
jne
push
xchg
clc
rcll
pop
and
xor
xor
in
out
sbb
mov
daa
mov
js
push
sbb
lea
and
pop
fcompl
movsl
add
xor
cmp
xor
sbb
lea
movsl
sbb
mov
xor
xchg
mov
into
sub
or
cmp
fdivrp
add
jnp
arpl
lods
and
dec
xchg
jmp
rcrl
xchg
pop
pushf
scas
inc
mov
adc
ret
pop
outsb
out
and
lea
dec
mov
sbb
xchg
aam
push
stc
sets
cmc
cmp
pushl
dec
mov
cmpsb
push
enter
jl
jns
ret
sub
test
jle
aam
inc
pop
adc
rorl
inc
inc
lcall
mov
cwtl
inc
mov
sbb
add
fs
inc
or
lock
mov
push
sub
push
sbb
pop
jl
shlb
add
or
and
xor
mov
int3
stc
loop
fldcw
adc
mov
sbb
xchg
adc
movsb
push
or
cltd
test
std
or
fisubrs
rclb
push
cli
movsb
xor
dec
sahf
mov
lea
in
add
or
sbb
out
fwait
data16
in
cmp
imul
xchg
das
push
lods
les
outsb
sarl
ja
outsb
cmp
and
nop
sbb
in
std
cmpsb
stc
sbb
popf
mov
imul
fs
sbb
xor
rclb
mov
rcll
and
pushf
popf
mov
dec
mov
daa
add
rol
sub
and
scas
std
pusha
clc
jp
pop
xchg
imulb
jbe
jnp
pop
or
insl
jo
inc
jo
outsb
sbb
popf
sbb
pop
sub
loope
xchg
xlat
mov
jp
mov
in
jne
sub
shrl
mov
shrl
shll
adc
xchg
mov
repz
add
adc
test
rorl
jg
adc
add
push
mov
les
fistpll
xchg
fdivr
xor
das
add
and
dec
aas
pop
mov
test
gs
pop
jecxz
shrb
sbb
jae
or
xchg
inc
sub
iret
ret
sub
sahf
sbb
pop
dec
hlt
icebp
subl
addr16
pop
pop
gs
dec
cld
mov
inc
mov
loop
adcl
cmpsb
adc
xchg
fwait
jp
rcll
fnstenv
fistpl
fwait
mov
mov
mov
stos
fnstenv
xor
jp
push
enter
shrl
lret
or
mov
sbb
jo
xchg
into
adc
xchg
or
daa
add
sbb
jbe
dec
cs
fidivs
ja
sub
mov
dec
xchg
and
or
fs
fdivrl
movsl
andl
jmp
add
orb
push
jl
mov
aam
pusha
jnp
xor
jg
mov
roll
push
negb
push
xor
pop
aam
ljmp
adc
mov
xor
mov
int3
push
push
popf
sub
rcll
mov
mov
ror
pop
xchg
pop
xchg
fisttps
shl
push
outsl
xor
dec
pop
sbb
and
pop
mov
outsl
cmp
push
sti
or
mov
jbe
stc
test
rcr
stc
and
cmp
pop
jns
sbb
and
icebp
popf
aas
mov
push
adc
popf
cli
pop
ljmp
mov
mov
inc
xchg
cmpsl
push
adc
lods
loop
cmp
or
imul
adc
adc
aas
lahf
mov
pop
mov
fwait
push
push
inc
fwait
shll
pop
jb
push
popf
mov
sbb
clc
jge
mov
inc
mov
and
cmp
mov
loope
add
shrb
nop
test
test
test
std
cmpsl
jg
out
daa
push
xchg
das
jle
pushf
nop
sarl
cmpl
adc
ret
sbbl
and
add
sub
fistps
jo
push
mov
push
push
pop
and
stos
cwtl
adc
xchg
cmp
pop
enter
adcl
adc
hlt
aam
jecxz
cmp
mov
mov
dec
cs
cmc
out
xchg
cwtl
push
xor
jb
xchg
out
bound
repnz
xor
jae
pop
cmp
sbb
jo
fimull
jo
pusha
inc
adc
stos
inc
cltd
push
jp
and
xchg
mov
dec
pushf
add
movb
sbb
cld
movsb
sub
repnz
fildl
iret
lods
jo
mov
sub
es
xor
fwait
popa
push
dec
xchg
mov
stos
xchg
gs
pop
push
out
ret
iret
jp
popa
lcall
testl
mov
or
xor
mov
sub
cmp
push
iret
or
pop
hlt
inc
aas
fnsave
dec
sahf
out
outsl
push
jo
sub
ret
mov
fisubrs
popa
movsb
lods
add
fisubrl
sahf
frstor
out
cmp
sub
or
push
pusha
int
or
sbb
cmc
mov
imul
repnz
mov
daa
cmpsb
jg
addr16
sub
push
lods
push
sti
sahf
icebp
popf
hlt
out
dec
filds
dec
jne
mov
loop
push
cmp
cli
cmp
pop
mov
pop
cli
js
das
iret
sub
and
test
cmp
dec
or
xchg
daa
fdivl
in
je
cmp
mov
and
and
pop
outsl
loopne
out
loope
lods
leave
in
ret
xor
pop
mov
lds
push
ja
test
nop
cli
loope
jmp
sbb
ret
cli
add
fsubs
lret
inc
pop
insl
xlat
dec
xchg
int3
repnz
and
pop
iret
dec
mov
jnp
sbb
into
xor
movsl
jecxz
sarb
mov
and
or
fxch
cmpl
inc
lock
inc
and
imul
xchg
lea
nop
out
cli
out
cmpl
fisttpl
cmp
mov
rcrb
outsb
les
xor
push
fldt
mov
arpl
movsb
mov
pop
and
or
cld
int
cwtl
insl
in
pop
repnz
ret
sub
xchg
gs
mov
stc
mov
mov
sbb
fildl
pop
mov
xor
push
cmpsb
adc
jbe
imul
sub
dec
mov
lcall
mov
pop
test
sub
rorl
clc
cmpsl
bound
mov
push
dec
in
cwtl
lods
jl
out
xchg
sti
sahf
mov
and
cltd
mov
push
push
andl
repnz
daa
shl
mov
fidivl
dec
sti
or
cmpb
mov
xchg
sbb
cmpsl
loop
loopne
adc
idivl
and
fsub
adc
mov
mov
aas
addr16
scas
les
jae
setns
mov
push
inc
stc
dec
aaa
cmpl
adc
mov
push
cmpsl
jb
inc
inc
add
xor
ss
jp
adc
cmp
pop
cli
jnp
test
mov
fwait
ja
mov
call
ss
dec
lods
outsl
or
inc
mov
mov
sub
leave
pop
mov
jecxz
jl
int
ficoms
out
inc
adc
sti
loope
lods
and
outsl
lods
aaa
das
jne
popf
sub
sub
xchg
les
xlat
xchg
jge
test
lods
adc
aaa
mov
paddsb
or
xor
cli
inc
dec
cmpsb
out
pop
cmp
fsts
sbb
pop
jge
stc
jno
sub
xchg
gs
mov
mov
jmp
sti
cmp
sbb
xor
call
xlat
popa
hlt
mov
and
jmp
push
sarl
mov
lds
ret
add
in
mov
loopne
push
adc
jno
mov
test
adc
pushf
adc
fcomps
movsl
cmp
lods
mov
popf
lret
repnz
mov
daa
shrl
fwait
outsl
mov
cltd
jmp
push
stos
mov
enter
add
movsb
pop
cmp
rorl
dec
adc
in
popf
xor
imul
push
xchg
call
push
push
insb
movsl
mov
or
in
in
das
aad
cmp
pushf
orb
inc
in
or
sub
mov
mov
mov
cltd
xchg
push
cmp
rol
repz
test
sub
fnstcw
pop
push
dec
mov
xor
ffree
mov
push
sbb
xchg
mov
xchg
cmp
push
sbb
sti
scas
cld
fs
rclb
sbb
mov
ret
and
hlt
je
sub
fwait
in
push
jl
lahf
xchg
test
mov
fldenv
das
adc
lods
xchg
adc
sti
fstl
sub
sbb
dec
and
dec
push
dec
hlt
ja
sti
ret
repnz
aas
push
ss
sti
clc
dec
loopne
test
push
mov
cmp
movsb
and
cmpsb
cli
fnsave
sbb
push
mov
sub
inc
push
adc
adc
pop
addl
push
add
lds
mov
fsubs
mov
sub
stc
je
push
mov
imul
les
pop
xchg
in
popf
mov
in
scas
imul
jo
imul
fldl
or
mov
cmpsb
std
enter
loope
shrb
bound
aas
loopne
and
test
pushl
enter
sar
insb
dec
stos
stc
loop
adc
sbb
loop
push
add
and
push
incl
in
rorl
adc
or
sub
fwait
push
aad
cs
aad
mulb
jno
xor
pushf
dec
jb
aas
xchg
add
lods
dec
fwait
xchg
jmp
push
sub
jp
xchg
add
dec
iret
xchg
dec
daa
mov
insl
addr16
lock
testl
iret
mov
daa
cli
jb
aas
xchg
jae
jg
out
inc
scas
clc
mov
mov
cmp
xchg
pop
lock
cwtl
or
push
out
mov
imul
aad
in
aam
sbb
imul
aam
and
inc
lock
sbb
mov
mov
push
repnz
mov
xchg
dec
xchg
sub
jmp
lcall
testb
popa
andl
arpl
dec
inc
xchg
pop
mov
pop
or
xor
rcrl
push
cmp
add
adc
sub
in
in
aad
std
push
insl
test
rcrb
mull
cmp
sub
shrw
cmp
hlt
into
stos
inc
and
dec
dec
rcrl
aad
iret
xchg
mov
fcompl
lcall
or
cmpsl
mov
cmp
bound
mov
lea
and
sub
pop
adc
adc
add
into
inc
aas
push
sbb
loope
bound
pop
inc
pushf
and
stc
sub
fidivl
xlat
mov
and
mov
mov
mov
ror
pop
dec
pop
div
sbb
out
cmp
and
repnz
sub
xchg
and
sub
shlb
ss
adc
adc
add
enter
jo
arpl
xorb
icebp
pushf
mov
fcmovbe
cmpsb
cwtl
dec
or
repnz
in
jmp
xor
aad
mov
lret
xor
ss
xor
add
push
int
fwait
ret
daa
popf
std
push
insb
int
add
dec
jg
push
mov
lods
or
shlb
sub
out
bound
insb
jl
cmp
jne
ds
nop
push
sbb
jl
dec
adc
inc
or
add
or
add
inc
xchg
sbb
int3
arpl
mov
mov
pusha
xchg
pop
lds
fisttpll
es
out
call
pop
lods
inc
sti
testb
mov
iret
rcll
mov
mov
xor
and
sbb
cwtl
adc
push
in
mov
andb
ds
inc
sti
cmp
je
call
sbb
sbb
insb
mov
inc
pop
jmp
movsb
mov
test
inc
cvtps2pd
je
repz
xor
sbb
stos
xor
cltd
inc
xchg
loopne
aam
or
cmp
xchg
fwait
jns
lahf
fadd
je
jecxz
dec
aad
stc
dec
mov
mov
aam
in
sarb
leave
loop
or
jl
jl
movsb
mov
stos
subb
test
xor
daa
and
dec
and
add
xor
mov
movsb
jmp
xchg
xchg
add
inc
and
testl
movsl
jo
frstor
push
inc
sbb
push
int
dec
and
cmpsb
int3
mov
mov
mov
xor
fbstp
or
mov
add
pop
mov
adc
push
icebp
roll
jno
or
test
add
outsb
cmpb
push
pop
and
lds
test
stos
cmp
pop
sbb
dec
in
inc
jae
dec
lahf
loopne
push
mov
push
fsin
stos
loope
orl
push
out
dec
aaa
xchg
lea
mov
mov
shll
mov
push
push
nop
std
cli
push
and
adc
cmpl
mov
clc
pop
fistpll
pushf
jl
ljmp
ja
cmp
rol
pop
subb
pop
popf
sub
inc
incl
jae
daa
xor
inc
cltd
dec
and
xor
add
pop
imull
cli
mov
pushf
cmpb
lret
fs
loope
jns
dec
mov
inc
add
stos
mov
cmp
out
add
icebp
pop
pop
fcomps
xchg
cmp
pushf
ljmp
pop
test
wrmsr
ds
repnz
int
mov
xchg
aad
je
int3
push
std
sub
and
dec
push
jge
test
cld
cmpsb
incb
aam
sbb
dec
inc
icebp
jg
test
fistpl
insl
cmp
xchg
jge
stos
in
xor
push
inc
std
mov
cmp
shll
movsb
mov
testl
ss
xchg
adc
add
fmull
icebp
cmp
cmc
pop
mov
lods
jp
mov
shlb
fbstp
jecxz
mov
shll
jge
mov
rol
and
inc
nop
sti
sbb
mov
das
cmp
test
popf
xor
lahf
rcl
int3
mov
pop
xor
inc
sub
shll
jmp
xor
mov
sbbl
dec
dec
sahf
aas
fwait
and
jne
inc
repnz
cmp
add
push
pusha
xchg
xor
push
adc
xchg
ret
repnz
dec
into
jnp
adc
pop
lcall
or
cmpsl
mov
dec
sub
les
or
mov
pop
insb
es
ljmp
xchg
push
mov
mov
add
push
inc
xor
push
add
jb
and
ret
out
jnp
cmp
or
or
shlb
mov
lea
and
sahf
mov
hlt
mov
lods
mov
out
xor
cmp
xchg
pop
repnz
mov
gs
fnstenv
sbb
dec
aaa
not
or
lods
arpl
mov
icebp
sub
push
out
mov
dec
jg
inc
lahf
les
lods
aaa
push
ret
or
mov
cmpsl
ss
adc
push
add
lds
xchg
ljmp
pop
jp
aas
mov
add
lcall
ljmp
and
ss
daa
mov
aad
mov
ja
jecxz
add
insl
cmp
xorb
imul
or
sub
cmp
cmp
mov
mov
push
mov
out
cmp
or
int
sub
lcall
pop
inc
hlt
xchg
loope
push
pop
mull
xor
lods
xchg
pop
ds
and
cs
pop
aad
scas
push
jle
movsb
sbb
shrb
dec
sbb
bnd
aad
daa
fxch
prefetch
mov
xchg
aaa
push
dec
jnp
imul
mov
popf
xlat
dec
aas
push
push
dec
rorl
js
lcall
and
mov
fistpll
call
in
inc
mov
xchg
loope
xchg
bound
in
aam
cwtl
sbb
and
sbb
ja
mov
cwtl
jle
xor
outsb
pop
call
ja
and
movsl
dec
lea
popa
mov
or
mov
adc
jecxz
pushf
fldl
jnp
ljmp
or
shlb
inc
push
mov
xor
cmc
sub
cli
in
adc
xchg
cmpl
dec
adc
push
sub
sahf
jg
divb
mov
xor
ret
stos
jl
aas
push
test
adc
scas
nop
mov
out
mov
mov
xchg
adc
sub
xor
cmp
mov
jmp
xchg
inc
xor
xor
loopne
adc
mov
dec
jae
dec
mov
popa
dec
xor
pop
jg
mov
cwtl
dec
pop
inc
mov
pop
push
add
dec
daa
rcl
lds
into
lock
arpl
dec
sub
pop
fmuls
cmp
iret
sub
jge
inc
jmp
mov
movsb
cmp
fcoml
fwait
stos
testb
test
push
pop
out
pop
sub
xchg
insl
stos
cmp
xor
sti
in
and
jle
jo
adc
xchg
lahf
dec
adc
or
fincstp
pop
fsubrl
sub
f2xm1
add
mov
xchg
add
rol
cmpsb
push
jp
aam
and
mov
lret
insb
outsl
call
mov
mov
pop
stc
adc
outsl
lret
adc
lcall
in
mov
sarl
test
dec
adc
inc
ss
into
out
iret
push
aas
jo
fists
inc
aas
xchg
xor
ficoms
mov
mov
sbb
enter
mov
dec
ja
movsb
mov
mov
cli
mov
notl
mov
enter
aad
ja
out
or
jno
or
ljmp
fwait
sti
rol
cmpsl
adc
adc
sti
loopne
jp
sub
push
dec
cli
cmc
inc
insb
xor
pop
and
stos
nop
test
mov
adc
mov
rcll
movsb
jp
negl
push
push
fbstp
insl
out
outsl
adc
mov
mov
lahf
inc
pop
sarb
icebp
mov
fstpl
mov
xchg
add
cld
inc
out
pop
dec
ljmp
in
mov
jle
inc
pop
clc
fldt
mov
cli
mov
roll
mov
sbb
sar
adc
mov
and
jne
cmpb
and
pushf
arpl
mov
xor
iret
fsubrs
je
sub
bound
pop
clc
mov
mov
scas
lret
loop
push
xor
iret
and
dec
jecxz
lods
popa
test
xor
push
sti
ss
pop
fdiv
in
xor
mov
cli
ljmp
xchg
lret
inc
mov
sub
sbb
jmp
pop
in
pop
mov
loop
or
cmp
cwtl
scas
lret
jp
push
dec
xor
sbb
mov
out
adc
cltd
pusha
imul
incl
cwtl
lods
das
aaa
jo
sub
clc
pushf
xchg
xchg
mov
jnp
dec
add
call
xchg
xchg
movsl
push
jl
test
insl
mov
int
push
lcall
push
mov
ljmp
outsb
add
hlt
popa
jl
fs
sub
sbb
xlat
dec
or
inc
inc
push
movb
push
ret
iret
pushf
lret
add
dec
adc
dec
push
push
mov
dec
cmp
mov
push
insb
outsb
out
pushf
xor
pushf
popf
add
and
mov
xchg
and
jp
xor
jns
jg
inc
out
inc
imul
cld
push
cmp
in
jb
or
mov
xor
and
mov
xchg
jmp
sti
rorb
loopne
mov
xchg
jmp
cs
scas
pop
cmpsl
and
sbb
jo
jg
mov
jg
sub
aad
or
gs
mov
pop
cmp
mov
imul
out
stos
xor
mov
es
mov
or
stos
add
inc
inc
jbe
jmp
sub
aas
xchg
jle
mov
aas
mov
dec
and
pop
cmp
les
mov
mov
and
aad
iret
add
mov
mov
cs
mov
mov
cmp
adc
int
xor
scas
push
mov
loopne
pop
iret
dec
das
out
in
dec
bound
bound
mov
inc
pop
movsl
aam
test
rcrl
xchg
pop
cmp
andnps
sub
cltd
pop
adc
inc
hlt
hlt
jmp
sbb
xchg
cmp
enter
bound
or
outsb
dec
add
dec
fbld
decb
lods
cmp
fimull
je
loope
faddl
or
sbb
xchg
sahf
pop
xlat
mov
mov
mov
loop
xor
xor
ja
aaa
test
andb
mov
or
jo
shl
inc
aaa
bound
mov
iret
inc
in
cmpsb
aam
cmp
mov
sbb
or
fwait
xor
mov
and
test
xchg
inc
leave
stc
push
pop
iret
cli
popa
test
fwait
dec
dec
fisubrl
jecxz
fwait
pushf
inc
inc
mov
lea
xor
or
inc
out
jmp
or
pop
sar
enter
mov
scas
pop
fdivr
sub
gs
inc
mov
nop
sbb
sub
sbb
dec
jno
stc
imul
push
stos
push
sbb
setns
clc
loop
outsl
inc
sbb
addr16
and
push
clc
lret
into
mov
add
adc
cli
push
xor
clc
ja
bound
in
aaa
fnstenv
fnsave
in
pusha
test
mov
or
dec
cli
and
les
loope
cld
lods
sub
out
lret
or
or
sahf
cmpl
jbe
daa
jmp
jne
cs
aaa
xlat
ds
mov
ss
iret
mov
rcrl
xchg
das
repnz
jecxz
outsb
iret
stc
sbb
nop
dec
or
xor
sub
por
jno
adc
mov
mov
popl
test
lods
jecxz
ljmp
mov
dec
xor
xchg
shl
es
insl
mov
bound
sbb
std
mov
aam
shl
or
dec
jne
jno
clc
aad
imul
outsb
add
das
mov
lds
imul
xchg
mov
mov
data16
jmp
fs
inc
popf
rcrb
cwtl
insl
mov
or
jecxz
mov
scas
andb
push
out
nop
add
and
icebp
ja
enter
out
mov
xlat
xchg
stos
lcall
imul
xchg
repz
dec
inc
neg
es
test
test
es
lods
pop
jmp
js
adcl
jns
fists
push
xor
stos
int
jo
or
cmp
or
mov
xchg
in
test
in
cmp
movsb
pop
loopne
pop
iret
mov
and
jecxz
mov
addr16
imul
and
push
shr
dec
cwtl
shrl
xor
pop
icebp
les
inc
sbb
popf
or
pop
jmp
sbb
push
mov
out
ja
xchg
push
lds
js
add
mov
inc
stc
dec
int
test
daa
xchg
stos
mov
sub
test
lret
stos
xchg
mov
mov
pop
enter
ljmp
add
jmp
sbb
loope
inc
outsb
lods
push
adc
sub
mov
mov
jnp
mov
jge
and
js
mov
xlat
lret
ja
pusha
lds
mov
in
setnp
cltd
mov
movsb
cmpsl
clc
xor
fiadds
mov
mov
or
xchg
sub
pop
dec
stc
mov
lock
xor
or
dec
cmp
cmp
in
push
push
les
inc
movsb
add
pop
xor
mov
sahf
fdivrs
cwtl
movsl
popf
lock
dec
popf
jne
mov
jmp
mov
cmp
pop
inc
stos
inc
pop
fcmovnb
jmp
adcb
push
pop
cwtl
mov
addl
cmc
out
orw
mov
sbb
scas
push
xor
push
mov
jno
aas
decl
js
pop
cld
pop
cltd
test
test
inc
inc
mov
xlat
cmc
ret
ret
inc
fucomi
popf
fdivs
and
aam
pop
adc
jmp
outsl
sub
pop
lock
ror
int3
cmp
sbb
jg
scas
rcrl
xchg
cmpsl
test
daa
dec
and
ljmp
bound
enter
adc
ljmp
iret
sahf
loopne
and
inc
aam
sbb
xchg
mov
dec
dec
lret
sub
fwait
out
adc
sbb
pop
or
jo
inc
jg
in
adc
pop
movsl
ds
mov
push
add
pop
mov
jno
repz
sahf
pop
mov
mov
add
leave
push
mov
loope
arpl
hlt
adc
or
xchg
push
pusha
stos
mov
andl
lahf
pusha
push
or
mov
inc
pop
sarb
das
pop
jno
cwtl
inc
fcom
es
pop
lods
dec
jge
sbb
mull
jo
push
mov
push
sarl
out
adc
cmp
and
pop
adc
pop
jl
mov
pop
adc
test
test
mov
mov
xor
shlb
pop
jb
adc
into
lret
inc
out
insb
push
in
nop
push
sbb
xchg
int3
hlt
repnz
jmp
push
das
jbe
mov
dec
adc
push
ss
mov
mov
subb
jne
mov
xlat
mov
cli
push
xor
mov
loop
ss
sbb
rcl
stos
jae
sub
xchg
sub
in
cmp
xlat
pop
out
jno
sbb
jp
lcall
cltd
xor
js
fisubl
je
or
fcmovnbe
or
mov
loope
insb
je
loop
cmp
mulb
arpl
dec
ljmp
jo
lahf
test
stc
mov
adc
jmp
jmp
sti
addr16
call
xchg
jecxz
or
adc
icebp
xchg
bound
cmp
call
or
aam
mov
in
dec
mov
insl
aaa
dec
sub
data16
iret
mov
jae
mov
jnp
sbbb
lods
mov
add
test
imul
ss
loope
fistpl
pop
push
jb
adc
mov
add
pop
divb
cmp
inc
out
aaa
jno
push
mov
xor
xchg
add
xor
xchg
push
jno
aam
xchg
jb
dec
data16
fisubrs
or
mov
push
bound
push
dec
in
mov
jle
dec
outsb
iret
rolb
insl
sahf
dec
popa
stc
jo
stos
xlat
adc
cmp
popa
adcb
adc
sbb
je
jmp
xor
rcl
and
mulb
or
data16
mov
jno
das
lds
inc
and
push
cmp
scas
repnz
loop
push
xchg
xlat
xor
xchg
out
and
push
jecxz
insl
dec
out
or
jne
aas
in
nop
ret
push
fldz
pop
out
loopne
mov
out
mov
inc
sub
and
pop
dec
sahf
rorb
test
lods
aam
mov
out
jmp
xor
pop
xor
mov
rcll
cmpsl
xor
sub
scas
aad
nop
pusha
je
sbb
lcall
mov
dec
inc
jmp
add
mov
es
lock
div
cli
mov
out
jl
cmc
out
mov
push
mov
test
jl
enter
fld
mov
add
movsb
popl
sbb
add
or
adc
cmp
lcall
cmp
push
mov
lods
sub
inc
mov
inc
dec
div
inc
mov
mov
dec
cld
adc
mov
jbe
cmc
inc
sub
arpl
pop
mov
lods
mov
ret
xor
pop
lods
stos
xchg
mov
mov
sar
imul
push
fldt
js
xchg
cmp
inc
scas
bound
cmpb
xchg
cmpsb
xor
jno
sbb
cld
xchg
or
mov
into
jle
hlt
mov
repz
sub
add
shlb
hlt
aas
jg
fidivs
jno
jo
mov
popa
ficoml
mov
pop
fcmove
xor
add
push
in
out
add
lcall
addl
sbb
xlat
test
fsubrs
jb
cmc
add
out
pop
sub
add
jge
cmp
ficomps
stos
mov
sbb
iret
test
ja
pop
fcoms
or
rol
fwait
push
and
dec
fldenv
gs
jo
mov
ret
jne
inc
fsubs
jle
js
ja
out
fmull
and
repnz
push
push
jo
mov
imul
ficoms
sub
cmpsb
jnp
lret
out
sahf
icebp
ja
sti
popa
mov
jl
lds
pop
hlt
imul
pop
addr16
stos
leave
movsl
add
outsb
push
mov
mov
aaa
insb
mov
movsb
sbb
jg
xchg
fnstenv
mov
flds
inc
adc
out
add
jmp
mov
xor
or
rolb
lds
mov
sub
cmp
cmp
xor
dec
pushf
xor
adc
sbb
cmp
xor
cmp
sbb
popf
stc
test
jle
fists
push
mov
fcoml
test
or
ss
fwait
cmp
jmp
fs
push
cld
movb
sbb
xchg
xchg
jmp
loopne
adc
shrl
pop
jo
dec
fldl
jne
leave
cld
sbb
aaa
mov
pop
aas
xchg
rcr
fcoms
jmp
push
daa
cli
pop
mov
push
stos
xchg
ficoms
cwtl
insl
jne
test
mov
inc
ror
mov
cmpsl
orb
mov
adc
sbb
ret
popf
inc
dec
jge
movsl
xchg
test
scas
mov
insl
rep
xchg
das
cmp
movsl
pop
and
rolb
das
cwtl
stos
and
dec
in
inc
add
xor
sahf
pop
sbb
ret
sub
pop
insl
inc
push
into
daa
fwait
bound
mov
xor
pop
adc
movsb
psubb
daa
stos
out
imul
and
jns
stos
addb
pop
mov
mov
into
jo
loop
mov
dec
cmpl
pop
stc
push
push
loop
pop
jb
cmp
cmp
mov
test
aad
loopne
fs
sub
adc
cmp
pop
sbb
pop
insb
sbb
lret
test
xchg
jle
pop
int
call
rcrl
es
inc
lret
mov
xchg
loop
lods
sbb
jne
and
sbb
std
out
dec
sti
sub
je
cmp
aad
xchg
inc
dec
add
es
imulb
mov
push
outsb
mov
fnsave
xor
aas
sub
pushf
xchg
andb
jl
mov
sahf
xor
inc
xchg
inc
cmpsl
push
dec
movsb
sub
test
sti
stos
jo
in
aaa
stos
pop
call
das
fisubrs
loopne
mov
sti
inc
call
ret
mov
negw
mov
pop
pop
pop
pop
sbb
mov
shlb
pop
into
jno
nop
outsb
pusha
mov
sbb
or
std
jb
jl
mov
adc
cld
sti
cmp
dec
cmpsb
push
mov
loop
jmp
scas
addb
push
mov
repnz
jge
aas
mov
ds
add
sub
sub
movsb
bound
test
aad
sbb
dec
jg
pop
test
add
pusha
outsl
adcl
jle
cwtl
or
repnz
aaa
adc
push
jecxz
cmp
stc
xchg
push
jp
pop
lret
ret
hlt
sbb
addr16
fldl
push
cmp
mov
adc
xchg
inc
outsl
fadd
sbb
dec
xchg
cmp
pop
ficoml
test
adc
push
mov
mov
int
fstpt
cmp
cmp
jp
mov
cmp
aas
out
lcall
sub
sarl
sbb
jno
xlat
jns
clc
push
ds
arpl
sahf
pop
repz
loopne
pop
test
jmp
mov
loope
notb
dec
fwait
add
leave
in
xor
and
lret
push
pop
push
clc
leave
call
lods
shrl
ja
mov
lea
mov
enter
jns
sub
lret
mov
xlat
aas
push
loope
daa
pop
push
xchg
test
aam
pop
push
or
mov
test
dec
dec
add
popf
cs
icebp
or
pop
dec
xor
cwtl
int3
mov
pop
test
cmc
adc
cmpsl
ret
in
add
add
pop
adc
push
jmp
das
push
ljmp
xor
pop
sub
and
outsb
jns
dec
mov
pop
dec
xor
insl
aas
xor
xor
lock
fs
out
test
pop
loop
lret
dec
jl
movsl
in
cmpl
and
add
dec
add
mov
ljmp
mov
shll
lcall
repz
mov
mov
shr
daa
fwait
aam
rorb
adc
push
or
add
push
adc
push
xchg
movsb
sbb
test
insb
inc
mov
jnp
int3
repnz
cs
rclb
lret
xchg
cs
dec
mov
and
lcall
inc
xchg
xchg
pusha
pop
xchg
xchg
and
test
inc
and
lods
xchg
addr16
or
xchg
hlt
shll
cwtl
fidivrs
shrb
icebp
adc
arpl
popl
scas
push
pop
cmpsl
adc
aam
pusha
cmpsl
jmp
in
dec
into
and
stos
push
and
push
mov
pop
lahf
xor
lahf
stc
aaa
sbb
pop
dec
mov
std
cltd
outsb
repz
mov
jns
ret
shlb
mov
out
cltd
and
xor
decb
add
or
and
out
push
test
faddl
les
ret
xchg
sub
bound
pop
sbb
lods
mov
rclb
mov
inc
call
testl
jl
jp
and
out
fimull
adc
sbb
insl
fcmovnbe
rolb
inc
and
push
and
jb
add
cmp
mov
scas
adc
test
int
loopne
pop
sbb
lds
shll
lcall
out
cli
dec
je
cld
xchg
outsb
jmp
and
in
mov
and
cmpsl
repnz
neg
mov
or
and
inc
fwait
aad
andl
push
cmp
outsl
pop
dec
jge
in
cwtl
mov
pop
mov
jmp
inc
inc
push
pushf
shrb
stos
stos
push
pop
jne
lahf
mov
les
ss
shlb
mov
xchg
aas
cmpsb
cmp
push
aas
cltd
adc
adc
inc
out
pushf
popa
inc
ds
jne
mov
jp
je
and
pop
out
mov
popf
lcall
inc
cmpsl
ret
dec
rorb
mov
scas
call
dec
mov
iret
xchg
outsl
mov
aad
movswl
mov
insl
loopne
mov
lds
enter
dec
in
or
adc
idivl
hlt
and
je
pop
xchg
jg
or
jmp
call
je,pn
or
xchg
inc
pop
sub
push
mov
js
stos
dec
add
mov
scas
xchg
addr16
imul
mov
pop
mov
insl
out
jo
pop
sub
into
inc
inc
xorl
nop
jecxz
aam
sub
cld
stos
jmp
inc
imul
xchg
outsl
inc
pop
mov
adc
dec
inc
lods
sbb
ret
lods
stos
sub
sbb
into
inc
rclb
ret
shll
mov
popf
inc
loope
in
push
roll
popf
int3
mov
and
mov
add
xchg
mov
pusha
push
xchg
loop
arpl
ljmp
add
or
pop
test
mov
xor
iret
mov
enter
lahf
ds
xchg
push
inc
into
pop
dec
xor
xor
jle
and
pop
lret
add
stos
scas
inc
pop
int3
repz
pop
popa
sti
negb
lods
lods
fidivs
fmul
lods
andl
gs
mov
jnp
jg
test
lods
ds
xchg
int3
std
push
xchg
aad
shrl
xor
mov
push
dec
daa
aad
and
shl
jecxz
jge
fwait
insb
jno
ret
fwait
movsb
mov
enter
cmp
addr16
sahf
fimuls
int
push
sbb
inc
mov
leave
scas
xor
out
imul
push
cltd
jp
out
sahf
fwait
jecxz
insl
out
pop
stos
or
iret
fwait
and
imul
push
arpl
pop
hlt
and
sbb
mov
inc
xchg
pusha
dec
adc
mov
into
dec
mov
sub
repnz
cmp
sub
mov
pop
xchg
and
ret
inc
mov
mov
stc
mov
lea
pop
addl
mov
dec
pop
xchg
leave
lcall
aad
add
fbld
pop
sub
stos
and
add
push
inc
xor
mov
mov
mov
int
xchg
cmpsl
out
xchg
xor
movsl
jbe
sbb
adc
xchg
lret
and
mov
idivb
cmpsl
popf
add
shr
test
clc
scas
cmp
and
mov
movsl
mov
scas
cmpb
movsl
rcrl
imul
cmp
pop
ret
out
jp
stc
sbb
jne
icebp
sti
xor
lock
xchg
and
test
scas
sti
into
outsl
sbb
sub
fyl2xp1
fdiv
sbb
adc
mov
push
in
xchg
sbb
adc
cmp
hlt
and
cmpsb
jae
lea
push
clc
lods
in
clc
lret
sti
clc
scas
mov
es
dec
cmpsl
fiaddl
add
mov
sub
cmpsl
lds
insb
fs
push
test
inc
mov
jmp
mov
dec
cmp
gs
lcall
outsl
and
jp
jecxz
gs
mov
stos
push
movsl
xor
and
popa
or
fildll
arpl
mov
add
jecxz
mov
adc
ss
dec
into
jge
mov
in
int
pop
inc
add
adc
jmp
or
cmpsl
cmpsb
jl
pop
mov
rolb
adc
pop
sub
pop
pop
pop
xchg
pop
push
ja
push
icebp
or
add
or
jmp
leave
and
jne
pop
dec
outsb
inc
and
cmc
mov
test
scas
jno
mov
lods
iret
cmc
into
adc
repz
xor
loope
lret
popa
outsb
sarl
mov
icebp
popf
orb
cli
mov
adc
jp
pop
jge
stos
ret
aas
inc
fiadds
xchg
and
sbb
or
loopne
pop
pop
adc
nop
and
in
mov
jecxz
aam
jle
imul
rcl
out
sarl
je
sbb
std
lds
and
fstl
cltd
lret
lds
enter
daa
mov
dec
movsl
jae,pn
xor
pop
ss
xlat
insl
rorb
fmul
out
mov
js
pushf
add
jmp
xchg
xchg
push
and
imul
leave
jbe
cltd
fcomps
jbe
cmpsb
cmp
in
mulb
scas
cs
dec
jge
adc
icebp
jne
shll
xor
ret
jmp
mov
xor
push
adc
sbb
mov
leave
xchg
test
push
xlat
push
scas
adc
cmp
or
insb
stos
push
mov
inc
shlb
xchg
in
lds
jecxz
mov
sbb
in
divl
mov
pop
inc
lcall
and
xor
sub
jecxz
mov
sub
xor
mov
adc
aad
aaa
adc
mov
orb
fsubrp
mov
faddl
push
or
repz
cwtl
ljmp
fiaddl
mov
outsb
xchg
push
inc
movsb
and
and
sar
std
sbb
iret
std
inc
mov
fwait
dec
lock
xchg
lahf
pop
fisubl
stos
repz
mov
test
lods
insl
mov
push
loop
imul
loop
loop
in
pop
lock
inc
stos
test
mov
mov
fimull
cmpsb
lock
cmp
mov
ret
lret
clc
dec
fstps
fs
test
push
cld
roll
push
ja
jp
xchg
push
push
out
cli
sbb
insb
int
mov
mov
pop
mov
jmp
popf
sub
or
mov
dec
xlat
pushf
testb
cmp
test
sub
lret
cltd
adc
cmpsb
xor
dec
jb
gs
pushf
xor
dec
mov
add
lret
std
adc
jge
out
pop
or
or
sub
add
add
pop
fdivrl
ror
flds
insl
fs
cmpsl
jns
sub
insl
scas
jns
jae
fstps
in
out
enter
push
jecxz
push
mov
addb
into
push
push
xchg
mov
jl
add
mov
loopne
and
xor
mov
or
jl
push
xlat
les
sbb
jl
adc
popf
pushl
mov
inc
fadds
fistps
mov
lret
cmc
call
xchg
mov
mov
cwtl
negb
push
mov
push
push
mov
divb
adc
inc
pushf
sahf
inc
cli
fistl
pop
pop
mov
rclb
adc
adc
lea
and
xchg
mov
sbb
sahf
xor
jne
xchg
push
sbb
mov
leave
jno
or
shll
icebp
loopne
pop
stos
sbb
fidivrs
add
les
xor
cmp
arpl
mov
mov
or
pushf
push
dec
ljmp
outsl
jb
push
in
mov
pop
inc
cmp
sbb
add
dec
les
push
cmp
jecxz
das
or
or
stos
xorb
pusha
push
ret
push
iret
mov
or
pusha
lret
pushf
dec
jnp
push
cmp
sub
inc
stos
add
outsl
xor
and
orb
jo
jmp
pop
unpckhps
jb
cwtl
sub
pushf
js
mov
jb
pop
inc
sbb
imul
rclb
push
aam
mov
mov
imul
xchg
or
shll
adc
xor
or
and
jle
xor
jp
lods
iret
sbb
lods
nop
jg
fcmovnu
cmp
push
icebp
pop
sub
out
rcr
test
cmpsb
fdivrs
inc
daa
into
jns
out
mov
loop
jbe
scas
add
xor
sbb
mov
flds
stos
idiv
rcl
fsubrs
mov
sbbb
imul
enter
sbb
mov
jns
inc
imul
iret
adc
jmp
daa
loop
mov
cwtl
and
popf
stc
xor
shrl
das
xor
repnz
sti
loopne
lret
mov
cmpsl
aad
loopne
jecxz
inc
jl
aad
xlat
test
mov
shlb
dec
or
repz
je
push
inc
jmp
lahf
loopne
inc
mov
xchg
push
mov
arpl
cmp
jbe
sbb
ret
mov
pop
mov
ss
std
or
and
call
fs
lret
arpl
stc
adc
int
cmp
mov
dec
inc
inc
cmp
cmc
idivl
mov
inc
and
pop
inc
divl
push
and
jp
sub
loop
cmc
das
lahf
lock
jle
inc
into
stc
imul
inc
cmp
imul
sub
mov
popf
arpl
insl
lret
mov
clc
dec
das
sub
push
xor
xlat
fwait
mov
add
or
sub
adc
fwait
pushf
cmc
gs
xlat
out
lds
add
xor
push
sub
adc
mov
repz
jne
pop
rorl
aas
fcmovu
mov
ja
mov
rorl
cmp
out
jae
mov
test
cmp
inc
stc
fistps
sbb
add
call
and
je
pop
and
pop
bound
pop
dec
add
repz
dec
inc
insl
adc
scas
and
and
pushw
repz
and
xchg
pop
ror
fdivl
cld
cltd
rcr
and
inc
sti
aas
outsb
testl
mov
adc
cltd
and
and
sub
xor
in
pop
dec
add
leave
dec
jmp
arpl
stc
les
dec
inc
int
sub
or
out
inc
repnz
div
jle
dec
or
add
ds
cmp
and
bound
fmuls
jmp
or
pop
push
imul
cmpsb
ret
je
sub
inc
loopne
shrd
and
insb
aad
mov
cld
mov
dec
loopne
sub
jno
fiadds
push
shrl
sub
xchg
fmulp
shrl
dec
push
fsubrs
mov
mov
das
out
pop
inc
dec
jae
xchg
les
int3
int
ret
or
mov
imul
pop
xchg
test
andb
xchg
inc
cld
and
cmp
dec
jns
ret
fimull
jge
out
hlt
jae
dec
in
shll
idivb
outsl
fmuls
adcb
sub
sub
int
jae
sub
xor
dec
inc
test
or
pop
outsb
stos
outsb
push
and
mov
sbb
cs
aad
mov
rcrl
test
cwtl
push
push
add
xor
cmp
inc
mov
sbbl
out
cmpsb
sbb
cld
scas
aad
hlt
sub
mov
adc
cmova
adc
pop
fcoms
dec
mov
mov
orb
dec
cld
sbb
and
and
jle
xor
jecxz
adc
fcmove
lcall
sub
mov
mov
pop
call
cmpsl
and
lahf
inc
or
jo
xchg
daa
fwait
hlt
lods
je
and
xor
popf
loope
push
mov
dec
cmpb
enter
push
push
add
xorb
ret
gs
daa
adc
loop
dec
nop
loope
xor
fld
sub
bound
addl
fildl
lock
imul
adc
jl
add
pop
popa
js
stos
cmp
pushw
jp
xchg
sub
adc
jl
cmp
ret
ficompl
pop
idivb
xlat
iret
int3
je
and
dec
mov
mov
iret
sub
nop
pushf
cmp
fs
je
and
jb
nop
mov
sar
sbb
mov
pop
xor
pop
fcoms
pushf
push
mov
repnz
divb
mov
test
mov
or
cmp
push
movsl
and
sub
repz
aad
das
jne
add
ret
or
dec
sahf
loope
push
stc
lret
dec
sbb
outsl
push
hlt
jno
sqrtps
shll
or
adc
daa
cli
mov
imul
cmp
push
add
decl
push
gs
fs
cli
out
or
mov
std
mov
xor
ret
popa
bound
mov
xor
cmpsb
jmp
orb
cmpsb
aas
cmp
lret
loope
mov
mov
mov
vmwrite
xchg
mov
mov
ficomps
cmpsl
xchg
push
inc
test
aam
mov
add
fidivs
enter
ljmp
call
adc
insb
and
aam
les
test
add
movsl
in
adcl
fsubrp
ss
lods
ret
lods
jle
rcll
mov
push
adc
pop
pop
into
mov
popf
fiaddl
add
imul
int
push
imul
sbb
sarb
and
lcall
jns
add
cs
push
dec
mov
xorl
sbb
xchg
and
fwait
das
aaa
mov
or
jns
in
jle
fldt
mov
loope
push
xor
pop
lods
stos
das
dec
call
ja
or
cmpsl
cmp
pop
ljmp
ds
sahf
fs
dec
cmp
mov
in
lahf
pusha
fwait
hlt
push
andl
dec
sbb
xchg
test
outsb
xchg
and
dec
scas
xor
cmp
pop
mov
pop
negl
arpl
out
cmp
int3
sbb
shl
into
inc
and
cmp
fists
fsubr
add
mov
ljmp
dec
in
inc
movsb
loop
dec
sub
movsb
std
movsl
or
jecxz
ja
and
mov
mov
jg
loopne
insl
movsl
mov
pop
xor
pop
stos
xor
ljmp
test
fsubl
outsb
out
xor
cld
mov
int
mov
in
adc
fs
xchg
into
lods
aad
pop
inc
fcmovbe
xor
loop
iret
adc
sbb
insl
xlat
jno
jp
dec
fiaddl
iret
aad
xchg
nop
add
out
jbe
xor
push
and
out
adc
jecxz
adc
dec
xchg
pop
cwtl
and
cmp
xchg
add
adcb
ds
mov
xchg
std
int3
ljmp
cmp
adc
sahf
xorl
sub
aad
cmp
and
adc
insl
js
mov
or
mov
cmp
sbb
pushf
xchg
dec
pushl
and
rol
imul
leave
loop
add
popa
int3
loopne
ror
ja
pop
fsubr
popa
xchg
dec
in
add
xor
idivb
mov
mov
ret
cli
cli
rcl
sbb
dec
imul
cltd
jg
dec
cmpb
mov
pop
fcomps
or
jbe
sbb
adc
mov
xchg
lcall
ss
adcl
das
addb
cld
mov
push
and
enter
outsl
cwtl
in
jae
pop
lods
lret
out
dec
push
lret
in
aad
mov
sub
nop
or
std
cmp
lods
bswap
movsb
fnstenv
shl
pop
in
pop
cmp
int3
repnz
call
dec
push
xchg
mov
stos
mov
inc
xchg
cmc
mov
fmuls
and
jecxz
call
xchg
scas
xchg
loope
or
pop
inc
iret
sarb
or
xchg
xchg
andl
fiadds
sbb
ss
imul
push
jmp
push
inc
stos
notb
mov
je
jae
jmp
inc
xor
les
imul
shrl
sub
ss
sbbl
scas
adc
mov
add
add
fs
loope
lret
popl
sbb
jl
popf
dec
and
add
jne
fistpl
jge
insl
loopne
or
in
adcl
inc
and
dec
mov
pop
bound
sbbb
fwait
jo
out
in
add
jecxz
div
call
dec
sarb
andb
icebp
adc
lds
jle
loope
dec
shrl
roll
js
nop
out
xchg
nop
add
ss
xchg
movsl
mov
addps
mull
dec
xchg
stos
cmp
push
jp
int
loopne
loope
filds
mov
xlat
sahf
sub
test
gs
mov
jecxz
rcll
xchg
divb
outsb
jb
or
or
lock
ja
aad
jns
imul
rorl
fcoml
inc
and
xor
mov
hlt
ficomps
sbb
mov
jge
addl
sub
xchg
pop
fdiv
leave
mov
mov
pushf
fldl
int
sarb
jo
in
xchg
mov
xchg
cmp
stos
jecxz
je
dec
and
pop
adc
ja
or
imul
lods
inc
sti
ds
cmp
dec
ss
ja
rcl
leave
and
inc
jnp
dec
int
mov
push
incl
adc
data16
roll
pop
mov
std
pusha
cld
sbb
jl
popf
and
sbb
cmc
inc
jg
sbb
sub
sub
jmp
pop
jbe
and
sub
inc
gs
ret
cmp
adc
nop
mov
pop
test
add
pushf
cld
movsl
enter
loopne
jo
clc
shll
sti
sub
ret
push
and
add
test
sti
cli
sbb
es
insb
lods
mov
out
inc
or
sbb
pop
clc
pop
mov
call
pop
ss
push
adcw
push
jno
mov
jnp
lret
push
clc
push
add
xchg
inc
cld
pop
dec
mov
xor
and
jne
lods
and
clc
pop
imulb
xchg
inc
ljmp
mov
mov
adc
xor
out
mov
cwtl
mov
push
xor
lea
mov
popf
stos
xchg
cmp
popa
stc
sub
test
inc
sub
xchg
ret
add
sbb
cli
push
bound
add
inc
cmp
in
jle
addl
sahf
clc
sbb
pop
cmpsb
fisttpll
enter
xchg
ds
ss
mov
mov
fcmove
jmp
push
lods
mov
loope
icebp
xor
lret
popa
fimuls
aaa
das
aaa
add
popf
dec
dec
or
imul
daa
lds
pop
call
mov
popf
out
adc
sbb
into
nop
dec
sub
sahf
mov
lret
cmp
push
add
sub
fmull
aas
adc
rol
ja
mov
ficoml
inc
aaa
cwtl
lods
test
repz
jb
adc
xor
dec
btc
cwtl
cltd
gs
jne
fists
icebp
sub
mov
push
add
xchg
xor
mov
loop
lods
xchg
or
in
jnp
add
out
not
or
xor
xchg
mov
fs
clc
and
add
xchg
jl
shll
jge
mov
fistl
ljmp
dec
in
lret
adc
iret
ss
dec
jg
scas
out
xchg
fdiv
add
jae
pop
in
and
aaa
cltd
pushf
adc
add
mov
int3
xor
mov
ljmp
jecxz
aam
push
iret
and
ss
cld
fldcw
and
sub
fdivs
movsb
icebp
bound
aam
mov
push
xchg
jb
push
jge
ss
mov
mov
out
mov
jecxz
cs
mov
sub
pop
fdivrl
cli
cmp
push
popa
adc
aam
jbe
xor
jb
js
test
and
addr16
xchg
daa
dec
pop
dec
jmp
movups
outsl
rol
lock
dec
push
adc
std
fs
mov
dec
es
sbbl
xor
in
jne
jg
and
sbb
jg
jno
xchg
lret
inc
cmp
shl
xchg
popa
jne
mov
dec
pop
jge
arpl
cmp
adc
jns
addr16
mov
and
fwait
mov
cli
and
lock
out
sbb
icebp
or
push
sti
fdivrl
imul
lahf
push
and
push
inc
out
cmpsw
inc
mov
fildl
pushf
xor
push
push
xor
pushf
push
sub
fs
sub
mov
mov
cmp
mov
push
imul
lock
mov
push
xchg
repz
dec
jl
push
mov
xor
sbb
xchg
gs
jmp
test
into
cmpsb
pop
int
pop
push
addr16
and
pushf
adc
jl
stos
inc
repz
xor
jl
xor
mov
arpl
or
subl
pop
cld
lods
xchg
jle
call
in
negb
lea
ret
xor
cltd
leave
outsl
jne
push
in
inc
push
test
or
jbe
adc
shr
mov
sub
into
xchg
ficomps
add
and
pusha
jle
jbe
aad
and
out
popl
lret
mov
and
jecxz
aas
jns
inc
pop
mov
cmpsl
pushw
mov
shll
jo
mov
xor
and
repnz
adc
ja
js
add
mov
mov
pop
jp
xor
shrl
cmp
test
xchg
dec
fcmovne
and
pop
repnz
iret
mov
sub
jo
xlat
pushf
cmp
fadd
xchg
mov
mov
mov
in
mov
xchg
stos
scas
sub
int
jae
test
xchg
jno
subl
cltd
pop
xchg
loop
negb
dec
jns
mov
movsl
in
les
std
jmp
push
outsl
xor
shll
outsb
push
xor
adc
adc
xchg
subl
sti
push
mov
daa
lahf
sub
adc
xchg
outsl
dec
addr16
mov
iret
shll
add
jmp
xchg
mov
adc
mov
sub
cltd
pop
adc
stos
lcall
testl
mov
fildl
and
push
lcall
mov
add
sub
stos
fidivl
cld
pop
notl
mov
pop
push
fsubrl
mov
xchg
rcr
out
push
sub
xlat
cmc
xor
push
jns
and
xchg
scas
je
scas
imul
pop
out
xchg
or
in
sbb
xlat
out
cmp
dec
push
mov
fcomp
in
dec
aad
cwtl
push
adc
mov
dec
fucomi
adc
push
ds
call
repz
push
sti
insb
cli
imul
add
nop
mov
inc
jnp
cmpsb
mov
sbb
jns
xchg
flds
js
inc
outsb
cs
call
mov
rcl
data16
xor
push
ljmp
push
mov
xchg
pop
ror
push
xorl
pop
inc
pop
pushf
xchg
sub
sub
push
dec
lcall
or
or
mov
daa
dec
adc
dec
or
jb
push
sub
sbb
dec
adc
jns
repnz
lea
mov
cmc
in
cmp
fisttpl
stos
shrb
add
clc
sarl
call
add
or
mov
orb
push
les
pop
mov
push
jns
or
daa
pop
sahf
push
repnz
fcompl
mov
mov
push
inc
xor
mov
pop
cmp
xchg
push
scas
mov
in
sbb
lods
mov
arpl
pop
daa
insb
movsl
gs
sarl
push
ja
xor
aam
xchg
lods
xchg
sti
fcmove
push
rcr
and
push
ret
out
jp
shl
sub
mov
cmp
mov
adc
mov
xchg
sbb
add
loop
inc
push
popf
xchg
dec
mov
clc
cmp
mov
and
jg
ja
push
mov
mov
pop
pop
cmpsb
loope
aad
pop
fwait
xchg
mov
test
stos
push
lret
and
mov
aas
cmp
adc
jae
in
test
push
in
add
xor
stos
mov
jne
sti
dec
fdivr
jge
out
aaa
mov
stc
sbb
cli
adc
jecxz
xor
sub
jo
xchg
in
jnp
mov
cltd
into
inc
out
ret
loopne
test
je
arpl
push
lock
cmc
xchg
xlat
ja
mov
data16
cs
pop
or
dec
das
xchg
xor
jg
jge
xchg
push
dec
cli
sub
sarl
rcrl
cmp
dec
lcall
add
movsl
addr16
pusha
push
pop
fnstcw
or
add
subl
xchg
imul
cli
mov
rcll
rolb
ss
fmuls
addr16
jge
sbbl
sbb
jmp
or
rclb
push
inc
cmp
icebp
es
pop
loope
sbbl
push
mov
out
aaa
sti
mov
movsb
aaa
dec
lahf
dec
push
sub
stos
mov
xor
imul
imul
imul
gs
push
shr
dec
cld
outsb
test
int
ja
xchg
mov
mov
mov
aaa
sbb
shlb
add
loopne
push
movsl
mov
adc
lret
inc
rcr
push
and
jg
jo
std
inc
mov
jnp
fisttpl
lds
adc
sub
push
lret
mov
sub
in
js
rsqrtps
lret
sub
nop
mov
sub
xor
sti
scas
dec
cvtps2pi
mov
jnp
sub
bound
dec
lea
xor
push
outsl
leave
mov
mov
repz
push
add
stc
or
ljmp
pop
adc
mov
das
insb
sbb
cmp
hlt
mov
add
mov
push
pop
cltd
std
in
xchg
pop
mov
mov
mov
pop
stc
inc
sbb
lcall
in
push
mov
fcmovne
into
sbb
jnp
movsb
mov
sbb
int
mov
dec
jmp
int3
hlt
stos
mov
jp
xor
dec
shrl
loop
loop
stc
mov
insb
aam
arpl
mov
les
fidivrl
shl
xchg
adc
pop
jle
popa
jne
push
stos
stc
je
in
or
fwait
jge
sahf
mov
jnp
loop
cmp
pop
cwtl
and
sbb
test
adc
or
xchg
inc
mov
fsubl
lds
lret
ljmp
js
roll
rclb
add
nop
mov
inc
sbb
stc
out
push
push
and
xchg
pop
mov
xor
push
jg
mov
js
adc
sub
loopne
adc
mov
sub
and
subb
in
ljmp
pop
movsb
lods
mov
data16
inc
popa
fwait
dec
inc
aad
and
ret
pop
shrl
movsb
cmc
and
push
stc
xchg
pop
jbe
lock
mov
fwait
push
pusha
lock
out
mov
fisubrl
or
sub
jmp
and
push
test
sbb
sarl
ds
popl
add
inc
ja
sbb
fistps
nop
sbb
popf
outsb
js
out
push
xor
rolb
jne
sbb
pop
mov
bound
add
pop
jge
add
xlat
push
pop
divl
gs
sahf
outsb
aad
insb
xchg
push
mov
and
mov
jne
fnstcw
mov
dec
leave
iret
sub
cmp
into
dec
push
dec
push
fists
sub
insb
sbb
cmp
xchg
mov
sar
out
lret
push
lahf
jns
into
jae
fidivrs
enter
cltd
or
pop
mov
jne
je
loope
dec
cwtl
adc
orb
pop
ret
push
idiv
jmp
ret
mov
jle
sbb
leave
mov
movsl
lods
pop
insb
add
repnz
shl
inc
ret
mov
or
mov
xchg
shl
jmp
icebp
ljmp
sbb
dec
jmp
jo
mov
dec
movsb
ret
inc
xor
xchg
les
ret
popf
repz
shll
cmp
mov
cmpsl
dec
mov
lods
inc
test
xchg
push
cli
fs
test
lods
je
mov
fs
xchg
loop
mov
repz
dec
push
sarl
daa
sbb
adc
movsb
sbb
jmp
push
jnp
cld
xchg
sbb
mov
inc
mov
jne
jns
out
mov
push
std
jb
decb
xor
les
cmpsl
sbb
sub
adc
cld
loopne
or
cmpsl
pop
call
mov
xor
and
push
and
add
xchg
sti
clc
icebp
inc
xor
mov
lcall
das
fsqrt
out
cmpsl
push
push
inc
icebp
int3
aaa
adc
imul
xor
movsb
push
mov
popf
in
pop
shl
xchg
cwtl
push
sbb
jp
js
dec
mov
mov
loope
xor
dec
jecxz
dec
scas
mov
loope
add
ret
push
xor
pop
xor
jp
leave
push
cmp
outsb
aas
push
push
inc
add
cltd
clts
ds
cld
insl
mov
push
int3
inc
ret
mov
pop
loop
adc
mov
mov
xor
rolb
mov
sbb
cmpsb
jge
dec
or
xor
mov
cmp
sub
sub
jbe
mov
arpl
out
cbtw
pop
cmp
adc
lret
jo
divb
xor
dec
lahf
pusha
sub
jb
pop
sti
add
or
or
pop
aas
push
pop
and
sbb
lret
push
mov
popa
add
pop
mov
mov
jbe
cs
in
jl
lea
jbe
int3
sub
icebp
loopne
adc
scas
pop
call
and
ficomps
sbb
inc
pop
push
jb
out
jbe
out
loop
cli
cmp
bound
jl
ljmp
shll
cmc
test
clc
push
iret
and
cwtl
mov
lret
push
push
cmp
xor
push
imul
out
or
mov
sub
add
sbb
jp
pop
ret
in
rcr
mov
xor
cmp
pop
xchg
loopne
add
cltd
cmp
in
xorb
cmp
pop
ss
inc
push
lds
push
mov
stos
jp
leave
cwtl
sahf
xchg
mov
scas
scas
aam
or
jno
mov
push
xlat
leave
jl
jecxz
adcb
xchg
mul
lret
jb
std
pop
cs
or
enter
mov
rclb
pop
call
rclb
push
dec
lea
popa
push
sub
inc
aaa
ret
std
mov
inc
andb
shll
xor
cmpsl
mov
mov
jb
mov
xchg
mov
mov
pop
or
xchg
or
scas
push
es
mov
jl
addl
scas
popf
imul
jl
divb
pop
fldlg2
mov
xor
stos
mov
popf
call
ret
pop
dec
mov
or
mov
and
mov
sub
out
jns
mov
or
jno
das
xchg
in
lea
insl
jbe
mov
pop
lret
leave
mov
or
aas
adc
enter
mov
les
test
xor
lret
sub
jo
repz
jo
xor
sbbl
repz
mov
push
xor
add
fsubrl
shl
jp
sub
jo
lods
mov
dec
movsb
cmp
fiaddl
jbe
dec
mov
sti
pop
push
outsl
sbb
mov
jo
scas
aaa
out
stos
or
lds
sbb
jbe
pop
loop
mov
pop
xor
mov
icebp
cli
sarb
jbe
and
pandn
pop
sbb
pop
xor
test
jne
in
int
repz
lcall
outsl
das
dec
push
add
adc
roll
ret
sarl
pop
sbb
fdivp
imul
lcall
dec
mov
cmp
cmp
stc
mov
fldl
cltd
insl
dec
push
loopne
and
adc
adc
or
fnsave
loope
xchg
mulb
sub
negb
xchg
cmpsl
add
adc
loope
es
add
sub
xor
and
jecxz
xor
fwait
pop
push
or
xor
push
cmp
popa
jmp
iret
dec
imul
inc
mov
mov
and
or
push
or
icebp
push
js
mov
inc
jnp
jns
lretw
xchg
enter
xlat
push
pop
mov
mov
dec
and
dec
push
loope
inc
mov
inc
dec
jmp
aam
xlat
sub
daa
xchg
std
pop
popa
out
pushf
fdivr
in
lods
out
dec
jne
nop
ror
inc
dec
sub
xchg
mov
push
push
sahf
add
or
sub
push
mov
lea
fcmovbe
out
movsl
cmp
adc
and
and
adc
stc
cmp
js
cmpsb
pop
bound
stc
fadd
jge
and
aad
movl
sub
cli
jmp
xchg
dec
daa
bound
pusha
push
push
xchg
fs
call
xchg
je
dec
fwait
mov
arpl
fisubrl
inc
adc
or
pushf
int3
xor
sti
cmp
and
shll
fbld
mov
add
decl
xor
mov
mov
dec
pushf
or
push
mov
in
fdivl
das
cltd
rorl
leave
xchg
mov
xor
jp
sub
lods
xlat
ret
jno
cmc
out
pusha
xorb
xchg
lret
in
dec
inc
add
ds
mov
push
cltd
popf
mov
scas
lods
js
and
mov
es
sarl
lahf
cwtl
jge
inc
sub
xchg
mov
out
inc
jecxz
mov
iret
and
push
popl
inc
adc
lahf
or
push
add
mov
pusha
xchg
pop
out
jmp
call
jp
push
subl
lcall
xchg
mov
stc
mov
leave
xor
inc
jb
in
js
sub
insl
mov
fisubrs
pusha
jmp
popf
jmp
das
pop
adc
int
jle
pop
popa
jmp
xorl
cld
sbb
and
es
add
addr16
or
mov
mov
xchg
insl
lods
fists
lret
pop
out
xor
push
xor
push
movsb
dec
test
mov
popf
mov
jne
fsts
iret
push
adc
adc
or
add
outsb
mov
mov
idiv
pushf
out
cs
les
xchg
xlat
mov
pop
scas
push
mov
sbb
xrelease
cmp
les
sub
inc
sub
push
int3
idivl
cwtl
mov
cmp
inc
sbb
or
lds
mov
iret
sbb
mov
js
stos
hlt
test
xchg
rol
lret
leave
int
addr16
cmp
insl
xchg
push
divl
sbb
mov
cli
and
xor
pop
ss
mov
or
xchg
and
adc
adc
dec
sahf
push
adc
mov
sbb
cli
xchg
ja
fistpll
fcomp
xchg
adcb
les
inc
in
jae
loop,pn
cwtl
xchg
leave
mov
dec
shrb
jecxz
push
lret
mov
gs
lods
push
push
push
insl
pop
mov
mov
cmp
roll
ss
pop
out
cmp
add
not
lret
add
call
out
sbbb
or
adc
push
pop
xorb
dec
negl
ja
add
pop
movsl
data16
sbb
nop
repnz
push
cmp
ret
outsl
nop
pop
out
and
aaa
lock
sub
shll
jbe
inc
mov
hlt
hlt
add
or
push
int
xor
mov
movsb
jmp
fnstcw
imul
mov
and
mov
iret
mov
ljmp
xor
test
movsl
jmp
outsb
cltd
pop
push
sub
or
push
aas
mov
or
int3
cwtl
psrad
cmpsl
imul
cltd
xchg
out
out
or
lcall
mov
pop
movsl
dec
les
shll
mov
jp
cs
inc
pop
sub
cmpsl
cmp
dec
sbb
cmpsb
repnz
mov
mov
xchg
aam
xchg
ds
or
mov
ljmp
add
and
inc
out
sbbl
add
dec
xor
cmp
hlt
xchg
in
hlt
jae
adc
mov
aas
push
mov
stos
out
faddl
cmp
ficoml
sahf
jns
lea
scas
popf
mov
mov
lcall
adc
movsl
inc
rcr
jnp
je
cld
sub
jmp
pop
mov
test
xchg
insb
popa
inc
xor
pop
mov
pop
jmp
outsb
imul
aad
dec
adc
add
push
push
mov
imul
push
nop
mov
dec
out
jl
xor
js
movsl
xor
cmpsl
sbb
jno
fnstcw
pop
das
add
les
mov
mov
push
out
push
dec
sub
mov
sahf
into
jae
movb
subb
adc
dec
xchg
dec
lods
push
rorl
push
mov
sbb
xchg
or
and
dec
js
pop
sub
lods
mov
or
sbb
into
and
sbb
push
xor
ret
jb
sbb
in
mov
sbb
and
mov
dec
cmp
and
sbb
push
mov
dec
adc
outsw
or
bound
and
insb
arpl
dec
rcrb
mov
mov
inc
pop
jle
pop
scas
sbbb
lret
add
jge
mov
andl
and
sahf
xor
push
cmpb
aad
out
adc
add
outsl
sub
addl
addr16
sbb
rclb
mov
mov
loopne
sub
decl
lcall
inc
mov
add
or
adc
scas
push
jle
adc
mov
mov
es
push
xor
std
lods
out
es
aaa
shll
sarl
daa
pop
xchg
xor
and
cwtl
xor
inc
mov
or
negl
ds
add
jns
lods
in
mov
and
repnz
jmp
cmpsb
inc
mov
mov
stos
outsl
icebp
aad
test
jbe
mov
push
movsb
call
lods
jo
andb
mov
arpl
cmp
xchg
pop
loopne
jmp
push
out
inc
jne
sbb
cld
insl
sbb
xchg
push
pop
push
xchg
adc
jno
mov
add
add
cmp
jo
aad
mov
sbb
xchg
inc
jnp
test
mov
or
cltd
mov
insl
inc
mov
and
cmpsl
int3
rorb
jmp
adc
pop
aad
cmp
out
fisttps
nop
std
or
es
enter
test
cwtl
cmp
and
test
mov
push
out
lods
pushl
icebp
loopne
loopne
loop
jl
mov
aad
or
in
xchg
int3
cltd
sub
and
jne
adc
xchg
push
xlat
fisubs
dec
out
or
aas
dec
adc
ss
pop
inc
insl
and
xchg
push
mov
rep
push
repz
mov
mov
dec
cmp
in
xlat
jg
sbb
mov
xchg
or
dec
out
divl
pop
jecxz
iret
imul
pop
clc
mov
lret
xor
jae
push
std
ret
xorl
or
movsb
lock
aas
pop
fdivs
push
sbb
push
cmp
pop
mov
xchg
loop
ss
aaa
int3
scas
repz
jne
js
pop
popa
push
test
adc
mov
pusha
sub
lret
mov
push
adc
dec
mov
sbb
daa
cmpsb
inc
out
imul
push
pop
cld
popa
lods
shr
xor
ret
xchg
aam
mov
fcompl
sbb
adc
sub
std
sbb
leave
data16
and
add
mov
stc
xchg
cmpsl
call
pop
push
jg
cmpsb
sub
insl
mov
mov
xor
sub
and
leave
cmpsb
movsl
gs
fwait
cmpsb
mov
fs
mov
icebp
testb
mov
dec
pop
fstl
jnp
lahf
adc
in
xor
xor
sbb
jbe
das
and
fdivrp
sahf
xor
sub
mov
inc
push
adcb
jp
sub
mov
cmpsl
sbb
addr16
lock
repz
push
xchg
pop
or
negl
arpl
add
and
maskmovq
testl
mov
sbb
loop
test
and
cld
sub
lahf
mov
or
jne
add
sub
sbb
sbb
mov
jmp
inc
inc
pop
lock
jns
push
mov
ja
movsb
roll
daa
and
inc
ret
ljmp
jge
aas
cmp
push
iret
xlat
loop
mov
mov
dec
mov
icebp
sahf
cltd
std
dec
add
arpl
mov
cmp
pop
sbb
fsts
outsl
cmpsw
es
int3
cltd
hlt
and
push
cmp
push
cmp
dec
xchg
in
inc
push
cli
aam
call
push
scas
jp
inc
aad
adc
add
adc
and
mov
jmp
pop
out
sbb
mov
in
push
jg
rorl
mov
jmp
add
xchg
mov
shlb
add
jne
popa
pop
cs
or
sti
xchg
xchg
cltd
mov
cmp
js
sbb
cmp
sbb
imul
pusha
fldl
push
dec
mov
mov
ficomps
mov
rcll
mov
rcrb
push
jae
test
push
sbb
mov
mov
insb
repnz
aaa
xchg
mov
sub
xlat
sbb
mov
std
je
ret
add
enter
xor
dec
lcall
insb
dec
push
push
mov
call
mov
lds
jmp
inc
dec
xor
cmp
test
mov
sbb
pop
iret
jp
stc
cpuid
jmp
jmp
out
mov
xchg
ljmp
xor
push
xchg
arpl
insb
faddl
add
cld
lods
test
push
jno
and
js
mov
or
sub
lock
lock
pop
movsb
je
std
fisttps
pop
hlt
mov
call
ds
jge
sti
push
test
adc
idivb
or
pop
shll
xchg
rcll
fiaddl
imul
adc
push
sub
pop
orb
mov
fwait
aas
mov
mov
das
cmp
ret
sub
jp
inc
sti
push
pusha
mov
jle
out
stos
cmp
ljmp
xchg
lods
stos
jno
aaa
mov
inc
mov
or
mov
ds
xor
jbe
mov
fisttps
pop
sti
mov
xchg
xchg
in
mov
ret
push
loope
mov
lahf
enter
icebp
cwtl
jbe
mov
mov
mov
cli
shll
xorb
cmp
jmp
repnz
lret
icebp
jecxz
mov
push
imul
add
mov
cmpsb
adc
lods
push
xor
adcb
cmpsl
testb
jle
xchg
pop
mov
mov
xor
mov
subb
mov
jo
push
cmpl
mov
cmp
jnp
in
push
mov
adc
or
cltd
dec
test
dec
call
popf
inc
jp
push
mov
imul
xchg
xchg
push
sbb
jmp
or
sub
fidivs
in
mov
movsl
add
insb
lea
in
cmpsb
fwait
roll
sub
or
xchg
test
outsb
in
out
sub
or
xchg
call
jae
mov
adcl
push
popf
or
test
xor
test
adc
addr16
lods
mov
sbb
xlat
push
cmp
iret
mov
inc
pop
lahf
leave
jns
jmp
cmp
push
dec
loopne
pusha
dec
fwait
lds
pop
inc
dec
je
repz
loope
mov
inc
mov
mov
ja
stos
popa
decl
or
mov
cs
mov
lds
pop
icebp
call
mov
inc
mov
push
mov
push
negl
aaa
daa
fcom
jmp
cmp
jns
in
mov
fs
jl
mov
and
sub
xlat
loope
outsb
repz
cmp
aaa
or
int3
out
xlat
push
sub
mov
fs
dec
and
xchg
outsb
ljmp
lret
scas
or
jno
pusha
daa
repz
cmp
loop
or
gs
pop
loop
mov
jo
cltd
rorl
in
or
cmp
add
leave
push
flds
jl
inc
sbb
mov
jne
pop
out
arpl
add
jecxz
cli
and
mov
cltd
push
cmc
jmp
inc
dec
movsl
xchg
mov
cltd
jecxz
cmp
pop
sub
mov
mov
dec
inc
adc
data16
dec
xlat
mov
xor
negb
les
cmpsl
jno
or
subb
jo
loop
dec
int3
mov
jnp
xor
nop
jbe
dec
jmp
fwait
pop
add
out
cmp
and
fdivs
std
sbb
outsb
push
ljmp
sbb
lds
or
aas
dec
push
push
jg
adc
mov
sahf
aam
cmc
in
cmpsb
xchg
stc
adc
sub
dec
cld
addl
add
out
push
scas
inc
out
and
push
int
sarb
cmp
arpl
fistps
inc
loopne
lock
jle
sbb
or
out
inc
pop
push
fdivr
into
movsb
mov
or
mov
push
in
jp
clc
sub
or
and
inc
rclb
mov
in
ss
cmp
bound
pop
movsb
sbb
jb
or
jecxz
rep
dec
lret
pop
cltd
sub
out
mov
in
daa
adcl
push
sub
negb
mov
imull
xor
sub
push
push
mov
repnz
push
jl
add
add
std
bound
mov
je
pop
xchg
sub
jae
dec
cmp
imul
adc
xor
aaa
jo
and
push
scas
and
call
stos
mov
rclb
out
cmp
sbbl
mov
adc
and
mov
rcrl
mov
fldl
lods
push
out
mov
or
jg
sti
in
mov
xor
hlt
jg
mov
out
dec
inc
pop
jl
fmull
xor
dec
or
push
ficoms
ds
pop
std
inc
dec
leave
mov
add
ret
iret
cld
xchg
or
aad
pop
mov
rolb
sbb
jns
psadbw
cmp
sbb
push
or
sub
cmp
add
stc
clc
dec
xor
xchg
cld
sbb
movb
data16
pop
jb
loopne
hlt
adc
loope
out
mov
sub
pop
in
mov
xor
mov
mov
cltd
and
xor
cwtl
or
inc
xchg
or
nopl
push
push
push
push
les
push
call
jecxz
xchg
test
dec
js
or
xor
fistpl
and
nop
imul
lods
repz
mov
mov
into
lret
push
ljmp
hlt
subl
icebp
sbb
xchg
test
adc
mov
ss
pusha
cs
mov
pop
jle
enter
je
xlat
mov
and
fs
xchg
push
mov
xchg
out
sbb
jg
loop
sub
cmp
stc
push
ror
fstl
add
mov
push
stos
loopne
dec
pushf
mov
imul
aam
stos
mov
ficoms
mov
dec
icebp
xchg
rorb
popf
xchg
ret
popa
fwait
or
lea
push
push
adc
fcoml
sbb
enter
dec
mov
pop
test
push
inc
iret
mov
adc
mov
shll
fdivl
mov
roll
and
loopne
andb
mov
jne
sbb
sub
orl
pop
sub
stos
and
sahf
das
loopne
in
lahf
jae
in
hlt
jmp
jbe
fcoml
stc
xor
mov
nop
inc
dec
movsl
cmp
inc
or
cmp
rcrb
fwait
push
dec
sub
mov
cmpsb
dec
and
fs
ret
fsts
sub
dec
jnp
and
fiadds
push
repz
outsb
iret
aam
frstor
and
lds
ljmp
jae
jmp
xor
out
mov
add
mov
push
mov
sbb
cmpsb
xor
jge
fcmovb
mov
or
es
addr16
xor
cmpsb
loop
addr16
adc
pusha
rorb
xchg
and
mov
xchg
sub
ret
push
in
dec
out
out
adc
scas
movsb
and
mov
add
xor
cld
cmpl
sbb
movsl
push
int
call
jle
andb
pop
mov
adc
icebp
inc
rcrb
subl
test
mov
sbb
iret
sahf
sub
rolb
std
or
imul
test
push
sbb
push
subl
and
das
mov
sbb
fcoms
sub
aad
cmp
sahf
mov
lret
fcmove
push
cs
sbb
or
shr
xchg
dec
aas
mov
jb
xchg
mov
aam
and
inc
or
inc
flds
jge
out
cmp
rolb
decl
sti
pop
add
addr16
jae
dec
ja
loop
ds
dec
inc
mov
sahf
xor
loopne
outsl
cmp
dec
push
into
sbb
pop
xor
out
adc
dec
ja
push
orb
jmp
lret
sbb
adc
cmp
mul
addb
xchg
and
fimull
jb
add
mov
ljmp
rcr
cmpsl
int3
in
pop
mov
and
btr
inc
jno
std
in
cmpsl
fcomps
lock
cmp
xchg
into
ja
push
aas
push
pop
sti
sti
mov
add
lret
sti
xchg
pop
sub
sbb
add
das
pop
pop
push
cmp
insb
sti
icebp
push
pop
nop
lods
cli
daa
pop
inc
cmp
mov
jb
or
ja
adc
mov
xor
repnz
dec
sub
aam
loope
test
rcll
cltd
call
push
push
pop
stos
mov
lahf
stc
in
sub
je
dec
cmp
leave
cmpb
push
pusha
push
pop
mulb
jl
es
rcll
mov
push
popa
ret
rorb
dec
sti
mov
jbe
in
sbb
leave
sbb
add
out
mov
dec
rcrl
or
and
xchg
aad
mov
cwtl
negl
or
lds
sar
in
loopne
aas
jne
nop
add
pop
dec
leave
xor
rorl
xorb
stc
clc
dec
xor
add
imul
cltd
pop
ja
mov
and
adc
xchg
daa
xor
fldcw
into
jnp
jge
clc
test
pop
mov
imul
and
jecxz
push
sbb
movsb
out
mov
lds
or
lret
popf
lods
mov
testl
std
js
into
int3
push
shr
pop
mov
movsl
cltd
ret
fldl
add
jns
pusha
and
popa
add
jno
movsl
and
out
imul
insb
cmp
inc
stos
or
fiadds
push
sub
jno
mov
sbb
ds
out
fbld
mov
xchg
negl
inc
mov
mov
mov
pop
andl
pop
pop
out
inc
push
test
dec
aas
addr16
pop
mov
sbb
inc
lret
or
fdivs
cmpsl
pop
les
lcallw
fistpl
cmpl
and
jge
test
outsl
adc
dec
inc
imul
jne
lcall
push
mov
scas
cmpsl
fnsave
pop
cmpsb
cmpsl
pop
cmpb
rcll
aas
dec
lea
ja
jo
add
lret
pop
mov
mov
dec
test
sub
fs
push
andb
xchg
add
cmp
in
xor
lcall
and
lret
cmpsl
call
cmpsb
xchg
inc
lods
inc
cmp
decl
inc
xchg
fisttpll
into
pushf
mov
push
jne
lahf
cmpsb
pcmpeqb
adc
js
aam
jo
xchg
jo
xchg
inc
add
scas
clc
in
cs
out
cmpsb
adc
sbb
ret
adc
add
ja
mov
cli
dec
loopne
adc
inc
jbe
or
fcom
stos
aad
cmpsl
sub
dec
fwait
arpl
aam
pop
insl
inc
sbbl
mov
pop
jl
or
fdivp
xor
lods
pop
pushf
fs
lods
lods
push
mov
or
enter
push
insl
lds
jp
loopne
clc
pop
pop
cld
add
mov
sahf
les
arpl
mov
ficompl
mov
dec
and
dec
mov
daa
adc
inc
sub
sub
aad
xor
in
loop
mov
mov
subl
cli
pushf
outsl
cmp
add
mov
mov
and
mov
lds
jb
mov
mov
icebp
call
mov
idiv
push
push
sbb
outsl
mov
ljmp
pop
repz
jg
call
mov
inc
dec
pop
push
iret
mov
dec
daa
add
push
insb
enter
jl
sbb
jg
mov
mov
sbb
jge
mov
std
jle
push
dec
dec
push
jns
mov
in
out
lock
dec
negb
aad
les
xor
xchg
xchg
mov
inc
jp
jae
inc
jl
enterw
mov
and
adc
push
add
arpl
out
mov
scas
fistps
sub
fmuls
push
mov
push
js
adcl
mov
jge
dec
sub
repz
in
rcrb
sub
xchg
mov
pop
mov
test
sti
pop
clc
insl
cmc
sbb
cmp
xchg
push
cmpsl
inc
fldenv
push
push
fwait
push
daa
push
lea
add
xlat
dec
push
in
adc
jge
add
stc
faddl
pop
lods
jns
cmp
jno
mov
and
push
cmp
and
fisubl
incl
dec
icebp
ret
insl
ljmp
jg
sbbb
cmp
and
test
in
jb
loope
stc
stc
jl
mov
mov
xchg
or
and
fisubs
iret
mov
jae
aas
adc
mov
mull
push
mov
incb
imul
mov
jle
pop
fimuls
mov
add
flds
push
mov
pop
pop
dec
out
mov
adcb
xchg
xchg
and
adc
test
xchg
iret
das
iret
les
jo
mul
or
mov
dec
dec
add
mov
orl
shrb
mov
subb
add
xlat
push
and
jno
pushf
lcall
xor
mov
in
clc
push
roll
jp
jmp
or
cmp
imul
fidivl
and
hlt
mov
std
movsl
scas
lds
daa
repz
cmp
mov
orb
sub
or
xchg
aad
pop
je
mov
push
repnz
pop
popa
or
rcrl
mov
inc
dec
adcl
cmp
pop
xlat
js
rcll
inc
mov
mov
fsubrp
push
adc
daa
je
scas
js
add
push
jo
push
fcompl
lret
jb
sub
push
les
pavgw
out
push
shrl
aad
jbe
int3
stos
or
ficompl
or
sbb
push
addr16
jge
icebp
or
stos
ret
xor
jmp
sbb
sbb
outsb
xchg
test
dec
cmp
enter
push
jmp
gs
pusha
mov
jl
mov
out
jo
popa
or
push
push
cmp
pop
out
jae
jnp
out
test
leave
int
jno
adc
jl
bound
insl
sub
jo
mov
sarl
sub
nop
jp
es
jge
aas
lods
cmp
lret
jbe
mov
popf
movsl
sub
cli
pushf
mov
mov
jmp
popf
test
lret
mov
cmpxchg
test
sub
xor
fbstp
adc
pushf
es
sbb
inc
pushf
mov
cmp
test
cwtl
ljmp
sub
shl
movb
fsubrl
mov
lret
and
sub
lock
test
sbb
sbb
cmp
cli
mov
insl
sbb
lret
or
out
in
stos
dec
mov
push
test
and
insb
xor
ljmp
call
dec
mov
pop
arpl
push
mov
out
xorl
cltd
mov
push
dec
mov
outsb
xor
cmc
sbb
lods
int3
aas
add
fidivrl
sub
mov
mov
xchg
daa
imul
lods
pop
cmc
sbbl
pop
push
lret
push
cs
ds
dec
aam
ds
push
inc
sbb
popf
xlat
xchg
dec
and
mov
adc
sbb
lock
sub
enter
orl
shrl
test
xor
jmp
add
inc
test
xor
mov
dec
nop
loope
aam
hlt
dec
mov
push
adc
sti
sbb
fcoms
inc
cmp
clc
scas
rorl
lea
push
and
jecxz
adc
cmp
test
jne
mov
bnd
cltd
jno
xchg
in
pop
fs
push
cmp
jmp
add
cltd
lock
stos
insl
xor
cwtl
push
mov
cmpsb
lret
sub
scas
lods
pushf
mov
push
lods
pop
xor
jno
jb
push
mov
ret
jnp
rcr
inc
outsl
sub
out
xor
aas
out
cld
mov
mov
movsb
xor
mov
out
rcr
ss
imul
mov
fstpl
imul
arpl
lret
jns
inc
push
les
call
andl
cmp
mov
test
in
xchg
pop
push
and
lds
out
loop
push
jl
fidivl
mov
shlb
andb
mov
das
stos
xchg
pop
mov
cmp
push
jg
adcl
xor
push
std
sahf
sbb
mov
call
sub
inc
sbb
jnp
fnsave
insl
sbb
scas
es
outsb
clc
lods
imul
xchg
clc
fsubrl
daa
clc
pop
sbbl
jnp
roll
jns
pop
sub
cs
xchg
pop
add
daa
cli
xor
jl
push
in
enter
gs
js
mov
xor
sahf
test
xchg
push
test
jnp
data16
mov
repnz
nop
lahf
mov
sbb
mov
sbb
iret
xchg
xor
push
and
pop
mov
pop
xchg
xor
inc
nop
rcrl
outsb
sub
ds
xchg
out
cmpsb
add
aaa
xlat
cmp
pop
mov
subl
in
mov
lret
cmpsb
movsb
sub
sbb
mov
xchg
fwait
pop
aam
sub
mov
adc
mov
jbe
insb
shlb
in
mov
jbe
push
jo
sbb
sbb
mov
mov
pop
popf
pop
push
xchg
mov
inc
es
stc
xchg
xchg
test
adc
loopne
xor
xchg
int3
xor
mov
imul
fimull
inc
loope
pop
inc
fdivrs
cli
into
jae
or
pop
xchg
mov
pop
ret
push
movsl
xor
int3
xchg
in
sub
push
clc
repz
mov
jb
adc
and
and
inc
jmp
inc
jo
sahf
mov
lea
test
cmpsb
in
nop
lcall
lods
mov
icebp
testl
xchg
das
popl
sub
sar
xchg
cmp
lahf
dec
mov
adcb
mov
or
push
roll
mov
sbb
push
sbb
movsb
fisubl
loopne
sahf
aaa
rcl
fistpl
pop
or
scas
push
call
aam
imulb
push
vpsrlw
add
jg
aad
cmp
imul
aad
cmp
and
popf
mov
mov
testl
mov
push
das
cmp
shlb
mov
mov
mov
pop
int
sahf
mov
sar
pop
out
ljmp
jns
sti
sbb
jge
jb
fdivrl
xchg
mov
jmp
lods
repnz
xchg
fnstcw
and
xor
jmp
mov
arpl
notl
xchg
add
jl
movsb
notb
jbe,pn
sub
or
in
cld
popf
push
frstor
pop
and
pop
xor
popa
cmp
je
ss
imull
mov
adc
fwait
aaa
cmp
or
or
stc
icebp
cmpsl
mov
xchg
das
push
movsb
sbb
hlt
cmc
and
xlat
sub
and
mov
mov
adc
int
xchg
fs
pop
ret
xchg
dec
xchg
dec
push
out
fnstsw
xchg
mov
inc
pushaw
jge
enter
lcall
mov
jp
push
mov
les
add
cbtw
fs
push
mov
cmpps
cltd
daa
sahf
imulb
cs
insl
sub
mov
sbb
popa
jo
xor
scas
jg
cwtl
jmp
jmp
fwait
aaa
enter
icebp
jno
adc
scas
fucomi
ja
mov
clc
andl
and
cs
mov
into
sahf
mov
jbe
mov
xor
arpl
jge
dec
rclb
out
xor
mov
lret
add
std
mov
pop
jle
push
ret
add
aam
mov
ja
out
xchg
subps
pop
cld
mov
mov
cmp
jne
jl
mov
mov
cs
hlt
adc
ret
aaa
and
mov
xor
jbe
in
loope
in
scas
addb
mov
push
bound
pushf
into
test
pop
fs
dec
outsl
addr16
pop
loop
dec
sbb
push
xor
mov
xor
call
iret
fstps
in
test
js
test
cli
insb
cmp
adc
test
xchg
insb
add
pop
sbb
movsl
sbb
imul
mov
push
mov
fwait
jno
outsl
out
shl
loope
push
fidivs
push
cli
fidivl
pop
sub
xchg
gs
xchg
pop
push
outsl
jge
shrl
nop
rcr
push
sahf
out
inc
pinsrw
scas
dec
jo
cwtl
and
div
jns
cmpsb
ficoms
test
xchg
fwait
mov
sarb
lcall
xchg
sub
sti
dec
mov
add
imul
jb
mov
pop
cltd
inc
daa
push
shrb
movsl
cmp
dec
inc
sub
pop
movsb
enter
dec
jecxz
adc
iret
jne
push
inc
testl
shll
mov
clc
xchg
pop
mov
dec
inc
test
enter
xchg
inc
outsl
pop
xchg
ja
pushf
jmp
movsb
sub
fistps
xlat
test
aas
bound
cld
loopne
shrb
xor
in
je
pop
pop
test
mov
jb
pusha
add
inc
xchg
xchg
data16
mov
xlat
xor
cmp
das
call
jl
jbe
adc
mov
xor
mov
cmp
aad
loopew
sbb
les
stos
push
pop
int3
mov
xchg
jge
adc
into
das
into
daa
or
iret
adc
push
xor
jle
push
mov
xchg
fwait
or
cmp
adc
or
testl
cmpsb
xchg
imul
repnz
push
lods
inc
stos
jg
sub
jne
xor
xor
xchg
inc
fdivs
gs
mov
jno
or
or
pop
and
inc
add
imul
sub
xor
xlat
lea
fs
pop
jno
imul
xchg
cs
cmp
insl
cld
cmp
arpl
lods
dec
jp
pop
inc
sub
pop
jnp
xchg
fadds
stos
push
lock
adc
and
pop
sti
lods
cmp
pop
sbb
lret
shll
xor
push
imul
out
add
cs
clc
ss
sbb
jle
mov
push
test
insl
in
lcall
pop
outsl
cwtl
pushf
pop
aam
call
repnz
imul
cmp
xchg
popf
stc
shl
mov
out
cmp
push
jge
rclb
push
test
and
cltd
and
xor
xor
xor
insb
shrb
lds
xchg
xchg
mov
or
in
push
mov
popf
xor
cld
add
out
sub
cwtl
push
xchg
mov
mov
outsl
cmp
popw
inc
mov
test
push
flds
aas
les
lods
roll
jne
shrb
jnp
add
push
js
sub
test
adc
verr
xor
add
inc
xchg
mov
mov
pop
sub
add
and
xchg
out
mov
fistl
push
jecxz
data16
dec
popf
rolb
outsl
int3
sub
and
fldcw
ja
mov
dec
lock
sbb
cmp
das
shlb
dec
cmp
icebp
cmpsl
jp
lret
ss
mov
loop
adc
sub
mov
fstpt
mov
xor
arpl
inc
sub
ja
shl
sub
ret
nop
shlb
cmp
xor
movsb
jns
ficoml
stc
fisubl
adcb
aas
jecxz
adc
enter
ficoms
push
pop
cmpsl
mov
and
adc
mov
outsb
popa
cmpsl
pop
mov
jae
xchg
aad
pop
xchg
js
jecxz
push
xor
int
shll
lret
xchg
scas
insl
or
sub
fsub
adc
sbb
dec
int
iret
iret
testb
out
sahf
push
adc
push
jmp
aam
jmp
insb
push
dec
mov
mov
and
push
shll
push
popa
xor
push
push
xchg
sub
pop
and
movsl
fbld
cmp
aaa
sbb
outsl
loopne
int
into
and
add
orb
popa
xor
xrelease
nop
pop
adc
shrl
int3
dec
or
mov
push
roll
idivl
xor
rcr
push
push
push
sti
or
jge
lret
insb
or
out
sbb
subb
cmp
outsl
mov
push
pop
shll
and
out
cmp
dec
scas
xchg
out
rcrb
push
sbb
pop
sub
daa
rdpmc
outsl
jnp
daa
int3
repz
stos
push
xor
dec
stos
cmc
fidivrs
ljmp
or
or
push
lret
ret
aam
in
ret
stos
push
mull
mov
inc
aad
subb
aaa
sbbl
add
test
clc
xor
xor
mov
pop
and
lahf
nop
mov
fists
push
pop
roll
mov
add
dec
lods
cltd
shlb
inc
cmp
push
lea
out
arpl
test
dec
mov
mov
sub
mov
insb
mov
popf
mov
loop
mov
repnz
lds
dec
std
jge
out
rolb
cwtl
mov
je
cmpsb
and
cmpsb
into
insl
daa
cmp
dec
or
sbb
ror
cmc
orl
scas
adc
adcl
jo
add
cmp
loope
mov
fistpll
or
popa
sub
pop
ret
jnp
js
out
and
add
mov
ret
push
fcomi
pop
cmp
fistps
jno
mov
shl
aas
xchg
mov
xchg
sbb
arpl
or
mov
mov
xchg
pop
std
lods
xchg
or
ret
jmp
jg
mov
mov
fdivp
sbb
aaa
fsubrp
adc
sub
jg
and
push
jmp
jg
sbb
pop
sub
nop
dec
pop
adc
or
add
mov
mov
pushl
mov
cmc
movsl
sbbb
ja
cmp
jecxz
adc
and
lret
push
jg
and
mov
cmp
loopne
in
pop
push
add
rorl
pop
les
lea
and
iret
mov
shl
loope
mov
fidivs
pop
xchg
loop
cmp
and
xor
mov
add
mov
adc
add
mov
psubb
nop
int
xchg
dec
pop
notl
insl
adc
aad
lock
loopne
insb
pusha
popa
sub
lods
ljmp
xor
dec
xlat
shll
lret
pop
lock
lret
and
scas
jmp
icebp
sub
jmp
les
into
fwait
repz
or
pop
jnp
adc
mov
je
jns
xchg
adc
adc
mov
sbbb
fbstp
push
lods
or
enter
xor
ljmp
jle
or
add
pop
or
push
popf
or
jns
push
popa
jno
mov
add
movsb
cmpsb
mov
loope
xchg
stos
outsl
and
jns
sub
loop
lret
push
test
and
das
daa
mov
and
pop
xchg
dec
pusha
add
cmp
stos
ret
cmpsl
push
jg
pop
mov
shll
pop
je
test
jo
xchg
adcl
inc
mov
arpl
inc
inc
xchg
pop
inc
mov
and
add
lods
push
and
rorb
int3
cmpb
mov
jmp
int3
cmp
das
pop
leave
jp
out
cmc
popa
mov
repnz
adc
push
in
test
in
test
and
jbe
pusha
pop
adc
lds
push
add
mov
cmp
push
and
inc
in
out
and
in
jge
shlb
sbb
insl
movsb
fcoml
or
arpl
mov
mov
sarl
cmp
fistpll
add
cmp
mov
sbb
dec
mov
dec
popa
daa
push
xchg
ss
ljmp
jecxz
fwait
mov
in
sbb
movl
fistpl
cli
mov
mov
inc
test
stos
das
add
dec
or
xor
sub
mov
mov
jmp
ret
cmp
fwait
popf
nop
inc
dec
pop
lcall
mov
pop
jg
mov
popa
cmp
dec
stos
cmpsb
mov
and
cmpb
test
test
mov
jb
mov
int3
std
cld
lahf
movsl
cmp
cmpsb
jl
int3
scas
xchg
mov
arpl
rep
xor
inc
scas
ljmp
fs
movsb
lods
or
sub
dec
iret
mov
mov
pop
fcmovu
cmp
xchg
mov
jmp
inc
aad
xor
cmp
sbb
inc
or
ficompl
xor
xor
cli
out
dec
or
daa
add
test
jp
cwtl
xchg
mov
mov
adc
in
pusha
dec
loope
mov
nop
and
xchg
xorl
testl
mov
pop
outsb
fisttps
js
add
adc
mov
sti
fnstcw
xor
repnz
rorb
iret
ror
stos
ds
adc
xchg
adc
das
mov
ret
jle
and
lcall
mov
shll
add
inc
rorb
movsb
test
jecxz
repz
shrl
dec
sahf
fcmovbe
sbb
mov
cmp
inc
pusha
adc
xchg
and
jmp
push
lods
adc
inc
cwtl
leave
dec
mov
rcrl
add
out
fisttpl
push
call
sbb
dec
rolb
jb
insb
push
and
push
idivl
cmp
push
and
and
mov
xor
loop
adc
les
inc
inc
sub
enter
fldt
addr16
test
jle
and
inc
or
cwtl
jle
scas
mov
sbb
pop
mov
mov
arpl
xchg
out
jle
std
push
mov
push
xchg
into
cmpb
lret
nop
rcrl
int3
insl
rcll
int
add
cmpb
jle
push
faddl
push
mov
sti
xchg
push
gs
jne
stc
ret
repz
or
adc
arpl
outsb
out
test
mov
inc
add
push
xor
jg
pop
addr16
addb
dec
xlat
dec
stos
push
pusha
imulb
cmpb
xor
aam
mov
std
push
push
push
daa
test
mov
or
mov
les
test
ret
pop
jb
fdivr
cmp
add
inc
ja
pop
jns
js
int3
pop
fldl
mov
dec
adc
data16
xchg
sahf
out
insb
sbb
mov
ret
aas
cmpsl
and
sub
arpl
inc
stos
and
jge
js
cmp
aad
inc
cld
add
sub
scas
push
xor
jb
into
mov
push
movl
pop
test
data16
pop
lcall
imul
mov
dec
mov
and
out
add
and
sbb
sbb
enter
mov
enter
fs
add
push
inc
out
test
test
lret
cmp
mov
pop
mov
jae
ud1
and
xchg
pop
cmpsb
aaa
jns
mov
loopne
dec
and
addr16
mov
lcall
mov
jecxz
arpl
dec
ljmp
pop
outsb
lea
adc
mov
lcall
fcomps
fldt
out
fsubl
add
cmp
frstor
scas
notl
arpl
jp
mov
fnstcw
push
dec
icebp
fcmovnb
jl
ss
xchg
hlt
mov
and
jne
mov
xchg
inc
jnp
sbb
cmp
andl
mov
dec
ja
outsb
xchg
mov
xchg
add
mov
adc
movsb
repz
fs
mov
mov
repz
pop
jl
fs
pop
hlt
mov
mov
pop
jae
movl
jp
push
and
sbb
repnz
cltd
jae
cs
push
rcrl
addl
aaa
or
pop
icebp
push
mov
aaa
scas
stos
pop
sahf
jns
xchg
mov
mov
lcall
icebp
sub
cmpsb
test
lods
adc
sub
xchg
out
pop
insb
xor
scas
sub
jmp
dec
mov
dec
xor
add
push
mov
mov
loopne
test
or
cmp
fs
andb
mov
add
mov
lock
inc
inc
lods
enter
dec
push
rolb
push
sahf
out
aam
sub
int
xchg
xor
inc
fsubr
nop
stos
insb
int3
sti
mov
in
outsb
cmc
or
xchg
fisubrl
jns
cld
push
mov
stos
cmpsb
mov
lret
add
lea
xchg
xchg
jmp
xchg
sti
es
dec
adc
mov
shll
hlt
and
add
dec
stos
or
adc
mov
scas
and
std
cmpsb
cs
dec
mov
xlat
and
pop
arpl
sbb
dec
decb
mov
fidivs
dec
and
or
pop
lock
fs
push
mov
sahf
mov
ret
shrl
addr16
push
xchg
adc
cltd
xor
sub
jno
scas
jecxz
in
jge
and
jo
sbb
dec
popa
in
or
adc
inc
add
mov
or
sbb
fisubrs
mov
out
pop
outsl
inc
or
cli
xor
outsb
xchg
and
les
arpl
push
sahf
adc
in
sub
repnz
jmp
lods
aam
push
fucomi
push
push
jl
jecxz
cmp
push
pop
dec
push
mov
in
lock
inc
jne
iret
sbb
sbb
sbb
cmp
cmpsb
rclb
sahf
cld
adc
add
xchg
aam
cs
ds
idivb
subb
add
pushf
or
and
test
jbe
out
and
and
outsb
leave
jnp
cmpsb
jg
insb
daa
nop
xor
adc
fists
mov
mov
mov
jle
pushf
pop
pop
popf
xchg
das
shll
lock
and
sbb
inc
inc
adc
movsb
lea
fmull
pop
mov
repnz
cmp
lret
or
push
rol
push
sahf
nop
insb
lds
mov
push
fldenv
pop
call
into
sbb
lea
in
jno
push
stos
loop
cmpsb
jg
xchg
data16
lods
or
fs
push
int3
lahf
mov
shll
push
aam
inc
aaa
mov
mov
loopne
repnz
gs
cmpsb
mov
or
stos
inc
inc
leave
mov
testb
mov
xor
dec
in
push
dec
dec
lea
call
sbb
fcomps
or
inc
mov
enter
and
push
dec
les
sbb
ret
dec
pop
cmp
pop
cltd
push
lods
cmp
mov
push
xchg
push
clc
mov
sub
cltd
out
cwtl
insl
test
cmpsl
cmp
cmp
adc
es
jge
cltd
and
sbb
sub
jl
imul
insb
xor
es
fistpl
and
sub
sub
lret
or
andl
add
gs
or
vpunpcklbw
dec
cmc
jnp
push
testl
cmp
cltd
insb
mov
aam
ret
popf
dec
scas
and
mov
cmp
loope
and
addr16
xchg
dec
add
lret
orb
fimull
adc
mov
xchg
clc
mov
mov
cmpl
fisubl
jmp
pop
cli
popf
mov
fisttps
and
pop
ret
push
cmp
jb
adc
add
test
sti
lds
pop
jne
mov
fbstp
hlt
and
or
inc
lret
repnz
add
or
adc
adc
inc
or
dec
outsb
sahf
fldl2e
sub
xor
int3
pushf
in
andl
push
imul
pop
push
mov
xchg
adc
ljmp
inc
cmpsl
rcr
pop
sbb
ja
loopne
add
mov
test
sbb
shrl
mov
iret
mov
push
jg
push
lock
decb
movl
jmp
sti
scas
inc
ffreep
and
or
xor
outsb
mov
mov
jp
adc
in
sarb
hlt
push
cmpsl
jl
int3
call
rcrl
adc
mov
push
out
adc
inc
inc
lret
pop
mov
leave
movsb
xchg
test
dec
xor
push
int3
xchg
mov
xchg
xchg
jnp
lds
mov
or
adc
cmp
or
sub
lock
lods
jle
mov
fnsave
fwait
mov
mov
dec
cs
imul
js
mov
aas
call
mov
jae
push
out
inc
jle
fisttps
lods
test
xor
push
sub
mov
cmp
xor
stc
push
xchg
adc
jmp
dec
iret
popf
mov
cmp
outsb
mov
dec
stc
rcl
and
pushw
pop
and
bswap
cmpsb
xlat
clc
fadd
push
xchg
cmp
rorb
xchg
mov
loopne
cld
mov
ja
xor
mov
pusha
fwait
cmp
into
in
push
ud0
mov
lods
adc
sbb
jl
popf
mov
cmp
cmp
jno
in
out
sub
push
pop
xor
jne
dec
test
lahf
mov
scas
xor
xor
test
mov
cmp
sbb
xchg
cmpsl
xor
jp
mull
jne
jne
push
int3
imul
sub
test
inc
or
xchg
sbb
lret
loopne
push
dec
popa
negl
hlt
int
dec
mov
das
adc
sbb
hlt
mov
fs
xchg
push
or
adc
mov
in
add
pop
in
lcall
ja
in
sbb
out
lock
rclb
icebp
or
repz
adc
xor
hlt
loop
scas
out
pop
or
movsl
bound
pop
mov
adc
dec
int3
and
pop
lods
pusha
push
mov
ret
xor
pop
lds
daa
mov
test
in
addl
xchg
je
mov
xchg
jne
inc
cmp
sbb
pop
push
sbb
fisubrl
push
cmp
and
add
jg
sub
xor
push
dec
xchg
pop
enter
ret
mov
mov
test
push
movsl
inc
jmp
cmp
mov
fidivrs
adc
sbb
pop
sub
in
xchg
notl
fmull
inc
pop
sti
pushf
xorl
xor
jmp
and
inc
or
leave
xor
imul
jb
cmp
push
pop
ret
lods
and
lock
push
loope
in
shll
shl
roll
test
or
loope
push
je
push
arpl
shlb
jp
jmp
mov
cmc
pop
cli
out
scas
fwait
lcall
xchg
jge
jge
shl
mov
cmp
cmp
add
movsl
fdivrl
mov
push
scas
call
adc
loop
data16
ret
testb
adc
rclb
int
and
dec
leave
push
stos
ds
leave
pop
lcall
cmpl
xbegin
das
adc
repnz
pop
jno
adc
xor
bound
lea
xchg
cmp
or
mov
sbb
enter
stos
sbb
sti
and
test
push
pop
inc
ret
pop
jp
cs
popa
ja
mov
add
fwait
inc
outsb
test
and
cmc
popf
jne
cmp
pop
ss
jbe
aam
fdivrp
aam
jge
mov
ror
loopne
jne
pop
add
xchg
sbb
imul
fbstp
or
lds
lret
push
pop
insb
dec
daa
jge
aam
sti
pop
mov
cli
sahf
je
sub
push
lods
addr16
xlat
les
loope
dec
mov
push
scas
pop
testb
sahf
or
lret
cmp
pop
outsl
push
imul
ret
idiv
cmp
push
fiadds
mov
mov
mov
xchg
daa
adc
movsl
push
pop
sub
cmc
push
xchg
add
xor
negl
hlt
and
sbb
or
push
and
enter
push
jb
mov
mov
insb
sbb
fidivs
or
in
inc
lds
sbb
sub
lret
popa
mov
fistps
je
fdivl
sbb
arpl
ret
lock
es
cld
lods
inc
into
mov
jnp
insb
arpl
nop
imul
and
movsb
sarb
sbb
jg
pop
arpl
sbb
clc
scas
hlt
mov
je
lock
dec
dec
xchg
jnp
scas
adc
dec
stos
dec
fnstcw
push
mov
into
and
js
sti
pop
push
dec
push
repnz
sahf
cmc
mov
adc
int
xchg
loop
lods
jmp
fimull
mov
jge
das
pop
mov
sbb
int
mov
je
stc
nop
jno
flds
cwtl
leave
mov
lods
pop
es
test
lock
jle
cs
fidivrl
stos
test
lahf
ror
dec
out
popa
pop
inc
repz
int3
xchg
cmp
mov
je
xchg
cld
xchg
hlt
lret
int
and
mov
loope
rcl
imul
aad
sbb
dec
pop
adc
mov
add
sbb
das
out
lods
sbb
sub
mov
movsb
mov
dec
mov
cmp
loopne
out
xor
lret
sbb
jne
std
fsubl
insl
out
popf
scas
sbb
dec
in
fstps
push
mov
leave
sbb
stos
mov
add
mov
imul
push
sarb
js
push
push
pop
mov
inc
stc
push
xchg
jmp
pushf
in
leave
jmp
and
insb
ja
rolb
pop
jne
es
mov
xchg
roll
std
push
mov
std
push
inc
push
insb
popf
neg
ret
arpl
push
les
loopne
sbb
pop
imul
adc
test
repnz
repz
xchg
icebp
mov
popa
loop
jno
fstps
cmp
mov
cmc
pop
push
fmul
pop
push
daa
cmpsl
pop
repnz
sbb
insl
mov
cmpb
test
lods
mov
sbb
mov
mov
in
test
xor
leave
loopne
ja
addb
aam
mov
pop
daa
lcall
jo
gs
int3
imul
push
xchg
mov
push
and
cmpsb
xchg
add
sbb
and
lds
inc
and
cmp
scas
jb
add
mov
aam
subl
stc
daa
fldl
fwait
dec
sub
cmp
sub
test
mov
add
insb
add
mov
rcrb
fsub
fldl
push
push
outsl
xchg
inc
add
test
insl
jb
mov
inc
mov
inc
mov
jne
dec
or
or
jns
ret
cld
dec
cmp
lods
jp
sub
cmc
push
js
aas
sahf
jns
test
xchg
inc
cmc
lods
dec
xchg
mov
scas
repz
cmc
and
pop
add
and
cwtl
and
pop
sbb
dec
push
jae
adc
test
or
loop
dec
cmc
jmp
mov
jg
xor
sahf
out
in
dec
movl
xor
and
pop
dec
xor
ret
jb
pop
dec
idivl
daa
in
jg
mov
cld
andb
dec
fcoms
pop
and
cmp
movsb
cmp
xchg
fsts
inc
jae
mov
push
xchg
out
test
incb
fwait
addr16
imul
xchg
in
pop
andl
inc
mov
mov
fsubrl
sbb
pop
mov
rcr
inc
in
add
fisttps
fisttpll
sbb
jne
fucomi
stc
xchg
jns
sbb
jmp
inc
fadds
sbb
add
inc
in
pop
mov
mov
mov
and
push
mov
lcall
icebp
dec
inc
ret
adc
jb
cli
ficomps
sub
je
jmp
dec
pop
xchg
dec
or
push
cmp
out
lods
cli
js
pop
mov
xchg
loope
inc
aas
sub
test
outsb
scas
aad
sarl
enter
xchg
fcompl
xor
pop
sbbb
enter
std
push
cmp
jle
sbb
xchg
sbb
dec
xchg
cmp
xor
inc
push
stc
xor
in
mov
jo
xchg
out
ja
and
mov
jge
jmp
outsb
outsl
adc
jmp
pop
cmp
jae
push
sbb
lret
mov
pop
jae
ret
pop
out
xchg
push
and
inc
fnstcw
inc
popf
inc
loop
xchg
push
cmp
cld
mov
arpl
adc
inc
or
aas
and
mov
faddl
sarl
loopne
int
lcall
in
clc
add
mov
mov
pushf
xchg
shlb
pop
rclb
mov
mov
lret
rorl
dec
jbe
cmp
into
ret
jmp
push
scas
jle
jns
xchg
sahf
pop
iret
or
les
aaa
lea
jle
fs
xchg
faddl
push
test
iret
jmp
xor
and
sub
cmpsl
jb
jl
adc
or
adc
sbb
or
out
and
mov
inc
lods
rorb
and
gs
mov
jne
in
mov
mov
mov
repz
jne
jne
inc
insl
addr16
dec
adc
loopne
mov
jo
scas
mov
pop
ret
imul
and
push
or
mov
nop
mov
mov
pop
mov
push
mov
fbstp
fcomip
int3
ret
and
inc
push
mov
xchg
add
cmp
inc
mov
lods
loopne
or
add
lods
dec
pusha
and
mov
mov
pop
lods
in
out
fcoms
lret
repz
aas
aaa
xchg
sbb
movsb
add
stc
xor
lahf
test
dec
cmp
mov
out
xor
subl
test
sbb
push
pop
inc
adc
mov
inc
mov
sti
pop
daa
dec
sub
in
pop
in
pop
mov
dec
pusha
idivl
icebp
add
lds
addr16
jno
mov
lret
ret
cmp
sub
insb
cli
sub
aaa
sbb
mov
je
addr16
mov
int3
adc
addl
xchg
aam
or
xor
jns
sbb
add
adc
mov
lahf
out
mov
mov
into
push
mov
adc
or
mov
and
adc
pop
mov
ss
jp
ja
dec
out
lahf
jl
xchg
leave
in
stos
punpckhbw
cld
inc
push
sti
pop
stos
mov
sahf
mov
fisttpll
inc
pop
inc
cmp
sub
repz
pop
mov
imulb
dec
adc
xchg
mov
outsb
mov
xlat
mov
adc
daa
push
push
and
std
imul
mov
fstpt
lea
mov
jae
pop
mov
cltd
cmpsb
xor
jnp
adc
out
xchg
lret
dec
aas
mov
fnsave
add
xor
mov
ljmp
mov
inc
and
lods
iretw
adc
rcl
xor
jge
mov
rcl
shlb
stos
ret
push
inc
adc
mov
aad
ret
popa
aaa
lods
leave
pop
cmpxchg
scas
aad
pusha
push
cmp
dec
imul
pushf
jnp
testl
in
mov
mov
xchg
out
and
adc
fisttpl
jbe
mov
jb
icebp
dec
xchg
lcall
cli
lods
cwtl
sbb
add
push
test
pusha
in
subb
mov
imul
dec
xchg
jae
inc
cli
pop
mov
test
fidivrl
repz
rcrb
mov
inc
cltd
mov
lock
test
xor
imulb
mov
test
mov
imul
push
nop
add
xchg
jnp
jecxz
ficoml
xchg
divb
mov
adc
add
rcrb
mov
push
mov
add
lock
jno
rcrb
or
adc
sarb
xchg
push
sbb
or
inc
push
gs
lahf
js
iret
inc
test
cmc
lods
xadd
cmp
push
rcrl
int
xchg
inc
imul
sub
scas
xchg
or
add
pop
pop
push
xchg
xor
pop
jge
jg
adc
inc
xchg
hlt
aaa
mov
inc
stc
dec
inc
push
mov
push
push
cli
cli
dec
inc
jb
fidivl
sub
mov
adc
push
ljmp
adc
adc
xchg
add
aas
aam
push
jnp,pt
push
mov
mov
bound
inc
daa
sub
gs
sub
pop
out
imul
push
mov
pop
lret
mov
sub
adc
sub
icebp
inc
idivl
mov
lea
fwait
mov
jp
jae
mov
or
cmp
addps
fisubrl
dec
leave
daa
cld
ss
jge
push
and
adc
imul
fcmovnbe
fmulp
sbb
push
and
and
addb
mov
in
into
clc
popa
iret
add
jbe
pop
loop
add
dec
daa
jbe
sbb
add
cld
ficoml
arpl
add
rcr
fdivrl
sar
cmpsl
icebp
shll
cmp
sub
mov
jbe
fs
jbe
inc
cmpsb
inc
data16
sbb
and
xchg
adcb
and
jne
dec
sbb
lock
mov
pop
cmp
pop
icebp
mov
xor
test
mov
xchg
aam
mov
cmpsl
loope
mov
xchg
outsl
jmp
inc
mov
xor
push
jnp
andl
rorb
inc
aam
pop
adc
call
xchg
mov
dec
int3
lds
aas
outsb
fists
xchg
popa
pop
mov
rcll
or
rorb
popa
push
push
adc
shll
cmp
sbb
mov
xchg
test
push
xor
cli
clc
push
rcrb
lods
push
xor
dec
loopne
lods
push
fimuls
mov
adc
ss
out
dec
pop
add
arpl
add
mov
lods
push
adc
push
clc
pop
mov
out
mov
inc
fnstsw
pop
xchg
xor
ret
imul
pop
push
mov
sub
jmp
stos
add
mov
rcll
dec
sbb
xchg
lea
inc
sti
in
ror
aas
fsubp
pop
test
and
mov
test
mov
add
mov
in
add
adc
orl
cmp
mov
lret
jle
adc
xchg
inc
inc
in
imul
mov
cmp
dec
jnp
push
push
add
insb
fcmove
stos
out
or
shll
cmp
adc
sub
add
test
out
mov
sbb
loop
mov
sub
out
and
pop
and
out
push
sub
adcl
les
xorb
and
pop
xchg
in
fistl
or
lods
icebp
and
xorb
mov
shll
push
mov
enter
aam
sbb
and
pop
cmc
and
jg
lods
push
jbe
inc
mov
pop
jle
addr16
ds
inc
and
mov
fildll
push
sub
xor
andb
ljmp
icebp
loop
sbb
mov
push
arpl
jmp
xlat
fcomps
push
movsb
insb
add
test
or
xchg
dec
mov
mov
not
xor
jmp
test
cwtl
jb
call
insl
ret
jns
fwait
add
inc
and
push
pop
iret
push
lret
icebp
jb
outsb
pop
jae
pushf
xorl
iret
js
pop
xor
cwtl
lcall
sbb
inc
mov
cmp
cltd
or
mov
inc
add
dec
xchg
pop
cmp
xor
stos
sahf
rorl
adc
adc
push
gs
inc
sub
inc
push
mov
shll
shrb
int
stos
add
jb
rcrb
stos
ret
leave
mov
inc
fnstenv
leave
iret
clc
mov
test
rcrl
dec
lahf
push
mov
hlt
repz
cmp
lahf
dec
leave
fbld
xor
xchg
jb
scas
js
mov
inc
sbb
sub
fisubrl
cmpsl
cmp
fisttps
jl
fwait
mov
push
into
pushf
repnz
cmp
fabs
jp
je
ret
ja
rcll
pop
jp
and
out
xor
adc
test
sbb
in
imul
arpl
aad
inc
mov
pusha
add
std
stc
in
dec
fnstcw
pop
pop
fldenv
mov
dec
sti
repz
clc
cmpsl
shl
cltd
push
mov
loope
pop
mov
push
mov
push
or
cmp
mov
push
push
mov
inc
adc
mov
aas
mov
xchg
cmc
mov
ja
sub
inc
push
adc
push
adc
insb
xchg
push
pop
adc
xchg
scas
jmp
jno
mov
repnz
aas
add
add
mov
loop
inc
aas
subl
add
cmp
jb
ret
dec
sub
fdivl
pop
aad
xor
outsl
push
push
push
lea
lret
dec
sub
cmp
loop
dec
xlat
jno
add
push
in
inc
sub
mov
outsb
mov
cmpsl
js
inc
fst
lret
fnstenv
jl
out
xor
outsl
mov
fistps
lret
scas
pop
mov
dec
pop
call
cwtl
push
out
inc
sub
or
imul
mov
jne
xchg
mov
mov
xchg
add
or
fldl
jmp
lret
repnz
push
jle
dec
jo
leave
pop
and
cwtl
aam
lcall
cmp
sub
scas
cmc
sbb
scas
enter
push
inc
sar
and
faddl
outsb
sbb
fists
loopne
push
nop
inc
popa
fadd
cs
rcl
xchg
pop
xchg
inc
hlt
icebp
xor
repnz
mov
push
jle
cmp
or
jne
pop
pop
sub
mov
cmpsl
loopne
mov
pop
fildll
mov
movsl
dec
push
cmp
sub
jg
ror
jmp
xchg
popa
mov
sub
pop
arpl
pop
repz
ret
xchg
jle
dec
leave
push
fisttpl
ret
cmpb
push
aam
xor
push
std
popf
mov
outsl
pusha
shl
mov
sbb
loop
fcoms
insl
stc
pop
cmpsl
jle
in
cmp
pop
test
jecxz
repz
inc
sbb
subb
je
popa
and
sub
movsb
sbb
push
jo
push
and
inc
xchg
imul
cltd
dec
hlt
xor
lods
dec
lock
test
mov
arpl
imul
mov
shll
jae
fimuls
mov
lcall
adc
mov
loope
sbb
fisubrs
inc
fbld
jg
rorb
mov
adc
sarb
xor
mov
or
push
je
cmp
vpsubusb
cmp
test
dec
mov
push
xchg
cli
pop
lods
or
mov
adc
lcall
out
lods
mov
pop
xchg
inc
push
sbb
and
cbtw
fnstcw
arpl
popa
xor
and
push
push
sbb
and
sbb
push
push
sub
in
pop
in
pop
stos
adc
jl
dec
add
stc
sbb
int3
add
mov
arpl
daa
mov
jle
fdivrl
jns
or
xchg
dec
js
jmp
pop
insb
or
mov
pop
sub
fisttpll
sbb
cmp
sbb
sub
push
iret
enter
out
mov
icebp
sbb
dec
inc
and
scas
inc
dec
fs
aas
pop
xchg
insb
dec
loopne
leave
bound
cmpsb
sub
jmp
test
dec
test
hlt
clc
rcll
sub
add
mov
mov
out
imul
lds
pop
das
mov
mov
fisubl
xchg
imul
fcoml
cmpsb
mov
mov
adc
lcall
sbb
pop
xchg
movsl
test
cltd
sub
sub
jl
in
sbbl
mov
sbbb
mov
mov
mov
push
dec
pushf
jns
in
jae
lahf
out
or
ja
dec
lock
fisttps
scas
dec
nop
cltd
mov
mov
inc
fidivrs
dec
and
shr
and
and
add
insl
push
scas
lahf
or
jp
pop
jmp
addr16
lret
dec
xor
dec
and
mov
adc
or
sbb
leave
push
lock
stos
shlb
jae
in
fbld
int3
mov
and
push
lds
jg
xor
int3
repz
cmp
dec
pop
movsb
xor
xor
sub
cltd
rol
sbb
sub
enter
inc
das
das
jno
push
push
fwait
ret
and
sti
sub
dec
call
ret
fcoms
out
jae
and
mov
ret
outsl
xchg
push
inc
pop
decl
dec
mov
inc
out
jmp
pop
orl
cmp
jnp,pn
cmc
in
sbb
sbb
lods
jno
subl
xchg
pop
push
dec
dec
inc
scas
in
mov
imul
fs
mov
outsb
loop
ret
adc
inc
daa
pop
out
mov
or
mov
hlt
test
or
outsb
repnz
icebp
stc
sub
dec
insl
xchg
cmpsl
notl
lahf
xor
arpl
cmp
pop
fcomi
sub
cmpsl
xchg
mov
xchg
aam
inc
jae
jae
jb
int3
jbe
mov
popf
nop
daa
mulb
sub
loop
pusha
mov
in
lds
scas
jo
or
pusha
test
push
sub
negl
clc
add
jle
add
pop
ss
cmp
and
mov
mov
and
aad
ret
iret
lods
xor
pop
sahf
push
gs
and
insl
mov
sbb
dec
adc
or
adc
sub
vpsubsb
mov
jl
cwtl
mov
mov
jbe
stos
pop
xchg
cmp
and
xchg
sarb
cmp
jbe
shrl
stos
insb
mov
sub
ja
jle
stos
dec
insb
mov
and
push
pop
out
mov
mov
sbb
push
cmpsb
clc
subl
cmpl
cmp
jmp
mov
jae
popa
mov
mov
cmc
ror
imul
ds
push
xchg
cmp
cmp
repnz
mov
test
pop
or
aas
xchg
pop
push
mov
sub
pop
pop
clc
jecxz
sub
adc
cmp
repnz
cmp
inc
out
jno
aad
leave
das
idiv
mov
pop
xor
mov
jae
loop
data16
insl
pop
daa
mov
or
mov
add
loop
daa
adc
cmp
stc
xor
std
out
out
adc
test
leave
adc
mov
dec
pop
adc
mov
pop
xor
pop
mull
es
jae
xchg
jae
adc
sbb
fidivl
std
icebp
pop
dec
jle
sti
pushf
xchg
push
lcall
sbb
cmp
clc
and
or
adc
test
sub
jbe
mov
clc
movsl
xchg
movsl
jno
push
hlt
leave
push
call
nop
lahf
das
repz
pop
ja
push
mov
push
das
mov
subb
sub
fdivrs
repz
and
shll
add
pop
in
dec
out
mov
mov
in
adc
xor
fcmovu
and
xchg
mov
popf
cmpsl
pusha
loope
pop
push
xchg
je
les
adc
out
aaa
jmp
clc
not
pop
in
cld
ss
rcll
mov
rcrb
or
out
pop
int3
mov
lock
rcl
xchg
int3
xchg
mov
imul
fs
cmp
jp
jg
mov
adc
and
fs
mov
mov
pop
mov
dec
lock
fcompl
jp
xlat
cmpsb
rcll
into
inc
inc
adc
scas
sbb
data16
ret
push
adc
js
hlt
push
stc
sbb
and
fcompl
lods
scas
inc
mov
stos
adc
rclb
push
add
cmp
push
jb
stos
mov
dec
pop
xchg
pop
mov
xor
lea
dec
or
push
push
mov
inc
fdiv
scas
js
inc
cs
les
sbb
cld
lcall
bound
lods
fists
ficoms
inc
add
jecxz
or
pop
sub
push
push
inc
mov
neg
stc
mov
mov
or
pusha
fcompl
xor
cmp
and
pushf
mov
ror
xchg
std
sbb
dec
aam
xor
test
rcrl
cmp
lret
sub
adc
or
xchg
jnp
mov
adcb
enter
mov
stc
out
loope
mov
or
mov
into
les
pop
int3
mov
out
imul
mov
cmp
bound
jg
inc
xchg
xchg
sbb
cmpsb
fimull
cmp
or
notb
rcl
popf
adc
lods
push
sahf
mov
sbb
adc
popa
push
bound
sub
fwait
adc
lcall
mov
insl
add
enter
repnz
insl
shrb
repnz
mov
adc
ds
sbb
inc
jmp
repnz
divl
in
xor
and
push
cmp
outsb
lahf
fisttpll
and
mov
push
lea
imulb
push
cmp
movsb
arpl
repz
in
out
and
jmp
nop
sub
aam
shlb
xlat
je
cmc
jbe
mov
cli
faddl
adc
in
out
adc
mov
adc
adc
jge
or
or
fcmove
sub
push
jo
push
ss
adc
add
leave
test
fnstcw
pusha
inc
mov
push
fwait
test
push
and
scas
add
mov
data16
xchg
test
mull
test
cmp
dec
movsb
mov
lock
adc
cmpsb
nop
dec
cmp
add
out
cs
inc
push
std
lock
enter
push
xbegin
pop
cmp
daa
into
lods
xor
mov
orb
mov
pop
jno
mov
fisubl
xor
xchg
push
and
lret
in
xchg
cmc
or
ret
shlb
pop
outsb
or
sub
add
xor
lods
stc
lock
pop
adc
pop
lds
sbb
xor
jb
push
add
cmp
jno
add
xor
dec
sbb
dec
lock
inc
mov
repz
mov
adc
mov
adcl
int
loopne
pop
ret
cmpsb
xchg
and
xor
ljmp
pop
hlt
sbb
or
gs
mov
xor
jns
adc
jae
push
fadds
ja
fstpl
mov
ret
xor
fsubs
cmp
adcb
test
imul
push
mov
push
or
dec
pop
aam
mov
mov
pop
sbb
mov
shlb
sbb
xchg
and
cmp
aad
inc
das
insb
mov
xchg
and
and
pop
dec
popf
out
loope
cmpsl
and
fimull
lods
push
shl
idivl
xchg
cmp
and
xchg
jp
std
popa
mov
dec
fnstsw
sbb
jbe
mov
in
scas
mov
jge
pop
cmp
inc
dec
jo
sub
imul
add
add
sbb
ja
int3
inc
xor
fiaddl
jl
cltd
out
cltd
ror
cltd
test
cltd
add
test
xor
push
ss
sub
and
aaa
cmp
dec
out
vucomisd
xchg
stc
xchg
dec
push
cmp
addr16
fs
popa
hlt
xor
rcrl
aaa
jl
outsl
arpl
rorb
pop
pop
mov
loop
test
andb
add
push
sbb
in
lds
jl
jmp
ret
shll
cmc
movsb
je
mov
jbe
jge
test
rclb
sbb
cwtl
sbb
cmp
inc
adcb
scas
sbb
hlt
lahf
xchg
rol
stc
mov
lods
xchg
repnz
jle
fcmovnbe
out
je
and
xchg
cmp
mov
mov
js
loop
fdivl
fwait
jne
mov
fidivs
in
ljmp
inc
js
xlat
and
fs
sbb
int3
inc
sbb
jmp
xchg
test
mov
push
and
lea
hlt
or
rcrl
mov
pop
adcb
adc
xchg
mov
push
mov
cmpsb
xchg
les
shl
add
mov
subl
xchg
inc
pop
cmpsl
popa
ja
pusha
xchg
in
mov
mov
bound
push
icebp
mov
sbb
sub
mov
aaa
sbb
sub
push
dec
mov
rclb
divl
add
in
dec
dec
add
ss
xor
testl
jnp
mov
add
push
scas
mov
xchg
out
push
rclb
and
fwait
mov
pusha
add
jns
jae
cli
fnsave
sub
jle
pop
jmp
xlat
mov
jne
aam
data16
adc
adc
jnp
fstpt
fsubr
dec
ret
mov
mov
or
pop
enter
pop
fmull
sub
xchg
fadds
out
call
and
incb
xor
lret
inc
mov
mov
push
xchg
jl
stc
dec
pop
and
adc
movsb
add
xor
out
scas
cmp
adc
int3
mov
pop
push
xchg
cmp
int
jns
ljmp
xor
push
cli
sub
push
out
pushf
mov
dec
or
and
in
es
push
fldcw
adc
in
fsub
cmpsl
jecxz
popa
xchg
xchg
cmpl
sub
sub
mov
add
mov
repnz
or
js
sub
lock
inc
sub
data16
das
stos
aas
mov
jg
in
aad
gs
shll
fdivrl
dec
imul
clc
dec
lcall
cmp
lret
stos
or
cmp
std
leave
shrd
mov
imul
inc
mov
mov
mulb
jl
inc
mov
rcrb
aam
lahf
push
addb
and
cwtd
scas
cmp
xchg
push
cmp
sub
in
adc
les
mov
push
dec
inc
lods
loop
or
xchg
mov
sbb
or
or
dec
mov
xchg
pop
inc
cmc
pop
in
jg
ljmp
mov
jmp
popa
mov
test
jno
jb,pn
mov
xchg
jecxz
push
outsb
jns
adc
lds
jae
or
inc
sbb
mov
out
es
imul
xchg
sbb
fisttpll
xor
xchg
scas
cld
mov
push
arpl
xchg
out
clflush
scas
mov
jp
mov
xor
aam
jg
pop
xchg
popa
js
or
lods
xlat
mov
mov
mov
cmc
dec
pop
shrb
jp
xor
mov
and
clc
ret
push
push
pop
cmp
mov
xor
jecxz
and
jbe
jmp
xor
jbe
jg
shl
mov
xchg
loopne
sahf
lcall
sbb
cmpsb
icebp
xchg
or
imul
add
mov
idivb
aaa
lock
xchg
xor
mov
clc
jbe
jp
mov
mov
push
ds
loop
mov
inc
xchg
sahf
js
mov
or
mov
pop
mov
dec
jno
test
xor
sbb
add
pop
outsl
daa
xchg
loop
pop
push
cmpsb
push
add
rclb
cli
mov
xor
ret
jge
xor
dec
imull
loopne
sbb
nop
fmuls
fdivs
mov
push
sahf
data16
lldt
pop
lret
sbb
xor
jecxz
inc
add
xchg
rolb
test
xchg
dec
cmp
adc
out
call
test
inc
mov
pop
fbld
inc
mov
mov
adc
aaa
sarl
aam
sbb
push
imul
sbb
fstl
scas
add
mov
jo
lods
shl
sbb
stc
cmpsl
pop
pushf
push
sub
loope
test
rolb
test
mov
sub
or
and
push
push
xchg
add
addl
xor
mov
rcll
pushf
aam
les
mov
aaa
movsl
cmp
xchg
into
in
xchg
je
test
rcll
dec
repnz
cli
fdivl
sbb
in
push
lcall
sbb
fcomps
mov
ficoms
jle
and
jge
mov
sarb
jb
loopne
and
push
imul
and
sub
pop
mov
je
bound
roll
dec
cs
mov
in
insb
adc
jnp
or
aas
sbb
loope
dec
sti
aam
xchg
xor
pushf
mov
mov
insb
adcb
inc
and
gs
ficomps
stos
mov
stos
fimuls
rol
mov
leave
adc
hlt
and
iret
orl
push
cmp
fistpll
mov
loop
xchg
or
ja
andl
xchg
add
jo
fxch
test
push
fnsave
xor
xor
mov
adcl
pushf
push
jae
add
into
cmc
insl
mulb
xorb
sbb
dec
roll
dec
pusha
mov
mull
adc
loopne
dec
add
xor
add
dec
daa
ret
in
int3
scas
pavgw
xchg
pop
dec
adc
adc
incb
push
lock
jmp
add
mov
stos
xchg
mov
hlt
clc
pop
xorb
or
aam
xor
les
lds
sub
cli
les
pop
jmp
and
push
in
test
lcall
aam
push
dec
clc
push
xchg
aam
call
add
shlb
cmpsb
shlb
sbb
lret
push
daa
out
and
add
dec
das
test
dec
mov
int
push
xchg
bnd
stc
subb
jno
insb
sbb
mov
xchg
or
push
pop
xor
subl
mov
std
popf
push
test
arpl
cmp
shrl
cmp
jmp
mov
test
hlt
ror
es
sub
daa
jbe
xchg
ret
aam
lret
and
jb
pusha
imul
cmpsb
dec
fwait
out
xchg
popf
mov
cmpsl
or
cmc
es
and
fcoml
mov
addr16
or
xchg
push
mov
jbe
js
fs
negb
jle
in
repnz
icebp
mov
fidivrs
push
push
and
fldenv
stc
mov
dec
mov
jle
scas
jo
sti
xchg
cmpsb
je
pop
pop
ds
and
mov
cmpsl
add
xchg
xchg
jl
push
mov
fstpt
xlat
fld
jns
push
sub
sub
mulb
into
rol
dec
arpl
adc
fildl
cmc
popf
call
and
cmpsl
insb
lret
mov
and
dec
gs
lea
inc
lret
mov
pushf
mov
mov
or
imul
and
iret
les
test
bound
jnp
mov
and
in
fistps
cmp
lock
cmp
int
pop
mov
addr16
pop
pop
shrb
sub
in
aas
and
xchg
and
inc
int
ss
push
push
fxch
jne
lods
jae
les
add
clc
outsl
mov
and
xor
scas
imul
add
lahf
movsl
xchg
sbb
cmc
pop
lret
cld
lods
loopne
test
fstpl
xchg
lcall
int3
jp
in
jno
lret
rorb
cmpsb
adc
je
out
icebp
inc
xchg
sahf
fiaddl
mov
out
or
mov
nop
andb
jle
lods
imul
jnp
mov
mov
jbe
xchg
pop
add
push
jns
cwtl
and
xchg
fcom
arpl
pop
pop
push
xchg
mov
mov
mov
pop
aas
in
jae
cltd
shrl
ret
adc
fs
and
mov
insl
aaa
add
cmc
ror
popa
inc
jge
push
adc
ljmp
je
sub
cwtl
mov
scas
and
aas
mov
fdivrs
out
sub
ja
push
ljmp
sub
pop
les
out
sti
sub
pop
fcmovne
inc
mov
pop
cmpsb
or
fisttps
and
fbstp
mov
movsb
adc
outsb
ret
sub
inc
mov
leave
add
inc
adc
insl
addb
imul
add
jge
cmp
shrl
imul
das
or
cmc
inc
mov
inc
push
pop
rorb
sub
sbb
js
dec
jbe
jecxz
es
iret
rcr
mov
push
orb
in
mov
push
mov
and
add
cmp
repnz
loope
xchg
mov
cmp
sbb
dec
stos
adc
lahf
outsb
or
sbb
idivb
sub
in
loop
ds
movsl
ja
mov
insl
mov
ss
cmp
jl
jb
ljmp
and
icebp
rclb
arpl
in
mov
mov
xchg
cli
push
lods
call
and
ljmp
pop
test
ffree
cpuid
fcomip
repnz
mul
sub
push
push
loopne
rcll
jae
lock
inc
mov
imul
test
call
daa
add
sub
cmc
cld
scas
push
xor
sbb
sub
test
pop
das
pop
in
pop
sbb
insl
outsb
push
call
in
mov
subps
inc
cmpsl
add
add
adc
out
mov
mov
hlt
bound
ror
cli
adc
mov
js
cmp
pop
adc
les
cmp
mov
mov
mov
out
das
cmpsl
filds
cmp
push
push
pop
or
adc
sub
add
dec
call
mov
adc
cmp
mov
jno
scas
sbb
in
imul
xchg
cmp
cmp
and
pop
dec
lea
adcb
imulb
push
sbb
in
mov
les
fistpl
ja
cmp
adc
inc
sbb
aas
nop
pop
xchg
sub
jg
xchg
push
push
jecxz
pop
cmpl
or
adc
addr16
mov
or
rep
rcr
xorb
add
pop
xor
pop
enter
lret
insl
popa
cltd
andb
arpl
dec
stos
mov
mov
pop
mov
ljmp
push
cmp
xor
int
or
sub
pop
pop
popf
adc
ds
cwtl
push
rcrl
int
pop
push
cmp
cmp
imul
xor
out
mov
push
ss
dec
lcall
push
test
sbb
mov
outsb
shlb
fwait
in
fldt
jle
divb
mov
sbb
mov
add
cmp
test
pop
jge
add
push
into
insl
add
mov
into
cmpsl
loope
add
adc
je
cmpsb
cltd
mov
or
or
xchg
loope
pusha
xor
jg
cmp
cmp
sahf
jb
pop
pusha
push
stc
adc
sahf
aam
cmp
jbe
inc
lahf
jp
fistpll
out
jg
sbb
iret
enter
xorl
dec
popa
dec
sub
mov
aas
mov
inc
jno
ja
divl
jp
fdivl
cmp
pushf
mov
test
adc
pop
repz
jecxz
clc
adc
leave
push
add
mov
push
das
jbe
in
jae
add
hlt
mov
add
rol
pop
mov
mov
cmc
pop
mov
mov
xor
iret
adc
mov
mov
fisttps
xchg
jns
int3
mov
lods
xor
enter
push
xor
cmpsb
mov
sub
mov
fsubrs
fists
mov
xchg
lcall
jle
jae
or
sbb
pop
shlb
pusha
push
imul
fstl
fisttps
or
int3
jne
pop
das
ret
cmp
scas
fsubs
sub
int3
mov
loop
aas
aaa
push
cld
pop
mov
xchg
aas
imulb
add
inc
cmp
aam
fcoml
sbb
clc
out
add
inc
jae
jae
sahf
mov
lods
out
gs
xchg
out
add
pop
pop
cmp
pop
and
push
mov
test
fisubl
out
cli
mov
loope
xchg
jns
das
xchg
stc
xor
sahf
pop
push
stos
jo
xchg
mov
and
mov
jo
jno
xchg
hlt
dec
push
fstpl
into
xchg
mov
mov
xor
repz
aaa
cmp
je
insl
int
or
sbb
lcall
std
jle
pop
mov
jmp
xor
pop
dec
jmp
in
ljmp
lods
fstpt
cltd
fldl
jl
mov
int
or
pushf
stos
xor
pop
jns
insb
inc
dec
pop
mov
mov
lret
sub
shll
dec
aam
insl
add
push
dec
ret
cltd
mov
daa
fwait
jne
lcall
mov
push
test
xor
fs
in
jne
fcoml
sti
dec
es
mov
jp
mov
and
or
mov
sbb
dec
mov
call
outsl
sub
ljmp
lret
call
mov
dec
and
cltd
ja
fsubrl
mov
or
sbb
sub
jp
cmpb
push
add
push
jg
or
and
xor
mov
les
pop
and
xchg
mov
scas
jmp
lcall
inc
and
sbb
ret
jg
xchg
cmp
dec
jg
mov
mov
sub
aam
xor
shr
add
cmp
pop
jnp
add
lcall
test
xor
xchg
mov
out
outsb
xchg
cmp
cs
and
push
imul
add
test
push
cmpsl
and
ret
int3
mov
jg
clc
mov
aad
sbb
das
das
sub
out
mov
clc
movsl
call
test
xor
rorb
xchg
dec
fisubs
cmp
adc
lret
cmpsb
jb
lods
xor
addr16
ds
subb
mov
add
cmc
jl
fs
rcrb
cltd
es
xor
dec
lods
cli
sbb
or
nop
fs
icebp
cld
lods
repz
cwtl
pop
lods
xchg
xchg
xchg
mov
cs
add
sti
push
cmp
cltd
data16
pusha
scas
and
xchg
push
mov
lods
mov
stos
mov
jge
and
xor
lods
loopne
push
dec
push
push
insl
add
lret
pop
sub
sbb
dec
sbb
adc
xchg
jecxz
pop
sub
int
faddl
push
xlat
cmp
test
aas
rcrl
jg
cmp
pop
fidivs
jg
call
pushf
stc
scas
add
sbb
aam
imul
in
leave
or
lcall
jae
les
add
insl
mov
mov
cld
and
ds
shl
out
imul
lds
add
jnp
and
test
je
push
or
pop
xchg
pop
sti
int3
loope
push
push
push
jge
pop
mov
mov
and
negl
and
or
pop
loopne
inc
xchg
pop
and
lock
jp
out
mov
add
or
test
ljmp
insb
out
jl
scas
int3
mov
jmp
roll
loop
push
sbb
dec
scas
sub
inc
add
lods
jg
or
cmp
add
rolb
hlt
in
xchg
sbbb
mov
inc
rclb
mov
js
insb
stc
push
test
js
inc
xchg
jae
stos
clc
push
push
addr16
xchg
adc
xchg
mov
fcmovnb
pop
stos
pop
int3
shlb
mov
jb
and
popf
ret
bound
aaa
and
push
xchg
mov
je
adc
pop
sarl
test
sub
scas
lret
stos
cmpsb
mov
sbb
xor
cmp
out
sub
shlb
and
into
mov
sahf
jnp
loop
in
mov
rorl
je
es
int
push
adc
jnp
jmp
adcb
fsubrs
xor
xchg
outsl
mov
pop
xor
mov
push
mov
xor
stos
mov
cmp
out
testb
adc
push
insb
adc
push
jp
pop
in
sub
hlt
insb
mov
andl
sub
dec
insb
push
sbb
sarl
movsl
xor
lret
popf
mov
pusha
mov
gs
fidivrl
data16
push
ljmp
pop
mov
dec
and
jecxz
push
jae
shll
repz
jmp
xor
sbb
adc
jl
mov
cmpsb
ss
add
jne
sbb
xchg
sbb
out
sub
jns
add
icebp
gs
xchg
jbe
jno
imul
adc
mul
notl
insl
jo
push
adc
and
push
push
outsl
pop
or
mov
mov
xor
add
js
loopne
outsb
subb
fwait
loope
jmp
and
and
lods
fldenv
iret
pop
cmc
push
or
jg
xchg
and
std
stos
or
popa
inc
adc
xchg
and
in
or
lcall
cmp
repz
popaw
push
cmp
sahf
stos
xchg
push
cmp
sub
test
push
sbb
or
push
mov
enter
or
ffreep
jae
push
leave
or
dec
rclb
jb
cs
inc
rcrl
mov
push
xor
rorb
inc
push
adc
shr
jnp
add
jg
aam
mov
lahf
insl
push
xor
pop
xor
enter
push
jae
scas
push
shll
push
shlb
mov
mov
push
scas
fistl
cld
enter
out
and
and
xor
fistpll
leave
cmp
mov
leave
pop
xchg
nop
cmpsl
lock
out
dec
rorl
pop
dec
out
jp
inc
aaa
popf
mov
mov
or
aam
mov
jnp
mov
dec
mov
lock
scas
pusha
addr16
insb
xchg
ffreep
insl
test
adcl
mov
into
lds
xchg
pop
inc
aam
jp
xor
lahf
cli
pop
pop
bound
add
in
sti
xchg
mov
jp
mov
int
pop
cmp
or
lea
mov
cmp
pop
sgdtl
pushf
fsts
inc
cltd
fwait
sbb
arpl
aaa
lahf
mov
iret
pop
jge
pushf
xchg
jle
in
mov
xchg
ljmp
or
mov
aas
shlb
outsb
aas
rcl
and
mov
fwait
xor
insb
push
pop
sahf
mov
jmp
mov
aam
mov
mov
sbb
and
movsl
mov
add
outsb
dec
cmp
and
mov
add
sbb
popf
aas
cmp
and
into
xchg
inc
cmp
dec
cmpsl
outsl
ret
sub
xor
inc
repnz
push
shrb
sbb
jmp
mov
and
xchg
adc
mov
or
into
ss
cld
dec
out
add
cmp
ja
std
mov
and
inc
mov
popa
cmp
mov
xchg
add
push
push
mov
and
or
and
lret
and
jl
jge
mov
les
js
mov
dec
jae
dec
mov
pusha
aam
leave
push
push
dec
xlat
dec
xchg
insl
and
loop
inc
mov
adc
jnp
xor
push
xor
jb
cmp
insb
into
jle
adc
stos
jne
inc
mov
dec
ficompl
into
imull
in
in
test
mov
shrb
and
cmp
pop
in
outsl
inc
or
ljmp
cld
and
int3
dec
aaa
sahf
jb
or
arpl
sub
cmc
loopne
into
sahf
push
rcr
enter
xchg
jg
jbe
mov
jo
xchg
pop
fsts
mov
add
xchg
cli
xchg
ret
in
lods
mov
sub
or
out
iret
add
frstor
pop
sbb
fists
cltd
ss
mov
mov
sub
cs
sbb
mov
or
mov
in
or
and
dec
mov
into
cmp
push
repz
adc
sbb
in
xchg
fstpl
and
lods
mov
cmc
sbb
cmp
ljmp
dec
data16
add
cltd
ljmp
fdivrl
or
add
push
popa
mov
negl
cs
dec
jbe
sub
pop
popa
sub
mov
flds
out
pop
pop
adc
xchg
cmp
push
mov
add
jno
arpl
or
cmpsl
sub
pop
movsl
movsl
enter
push
mov
scas
pop
jecxz
push
pop
fists
daa
sahf
dec
inc
scas
testb
loope
inc
in
adc
cld
in
xchg
nop
int3
pushf
iret
lods
test
sub
movsl
aam
push
or
sahf
push
out
dec
and
bound
mov
cmc
js
inc
rcl
dec
nop
inc
iret
jnp
stc
sti
push
add
inc
dec
in
jno
pop
push
daa
lret
in
pop
pop
adc
notl
imul
xor
inc
jae
ja
sahf
xor
push
or
xchg
inc
repnz
mov
ret
add
fdivs
loopne
in
mov
xchg
sbb
mov
and
lods
add
adc
sahf
lea
imul
jns
scas
testb
call
pop
fcomps
cmp
or
inc
push
in
mov
push
fdivr
out
movq
and
dec
pop
outsl
fbld
cmc
movsb
fs
add
fwait
or
xor
stos
stos
mov
stos
cmpsl
pop
pop
dec
mov
fisttpll
sub
adc
xchg
les
xorb
push
push
call
adc
xor
gs
lcall
rcl
mov
sub
aaa
scas
cmp
lock
out
pusha
inc
dec
dec
or
stos
inc
pushf
push
or
test
jg
cwtl
adc
fiaddl
jae
ret
pop
lods
sar
repz
cmpsb
loope
fdiv
stc
ret
mov
stos
mov
int
test
or
pop
cmp
nop
out
lret
mov
sbbb
pop
pop
cmpsb
popf
scas
cmc
inc
shll
mov
jb
mov
rcl
sbb
clc
sbb
fs
sbb
push
mov
push
iret
fwait
and
pusha
fnstsw
push
xor
int3
sbb
inc
ljmp
dec
loop
js
subl
lods
outsb
fstps
sbb
fldl
jno
mov
push
xchg
in
push
int3
aad
sbb
int3
and
mov
daa
mov
orb
orb
sub
les
xor
rcrl
imul
pop
push
adc
cli
push
in
cltd
xor
out
cmp
xchg
inc
ljmp
jbe
loope
mov
jae
xchg
jo
les
pop
shl
add
daa
jbe
mov
subb
push
xchg
cmp
test
mov
xor
jae
pop
es
adc
pop
sub
in
outsb
imul
popf
dec
dec
test
add
cmp
adc
jecxz
push
dec
push
sti
aad
sub
pop
pop
sub
scas
push
les
pushf
out
add
mov
cli
sarl
pop
out
xchg
and
ja
scas
push
subl
imul
outsb
push
inc
adc
scas
dec
in
cmp
xchg
rorb
inc
add
fidivs
cld
outsb
xchg
push
icebp
adc
adc
orb
adc
dec
lea
cmp
out
xor
push
pop
mov
pop
push
ret
lcall
sbb
push
data16
scas
int
mov
xchg
lock
pop
sub
mov
inc
aad
das
push
cs
mov
mov
arpl
ja
lods
cs
push
sbb
adc
push
add
cmp
test
mov
push
push
lods
pop
mov
sub
daa
loop
inc
xor
xchg
mov
sub
or
sbb
outsb
scas
sub
idivb
aaa
adc
idivb
test
xchg
aas
and
enter
daa
fdivrs
jmp
rorl
repnz
ret
fdivrs
test
aad
mov
xchg
jne
jnp
outsl
inc
mov
les
dec
sub
fwait
loop
inc
mov
andb
sub
mov
call
xor
sub
jo
lret
gs
sub
mov
fstpl
xchg
jbe
stos
inc
in
in
jno
pushf
shll
shlb
insb
sub
lods
jo
jns
lock
jns
jo
and
cs
test
test
pop
lods
cmp
cmc
mov
fbstp
icebp
lock
int3
fdivs
test
fwait
xor
stc
push
lds
idivl
push
add
ss
rolb
loope
sbb
xchg
inc
imul
sbb
lret
lcall
repz
das
adc
mov
sbb
or
insl
push
aaa
jbe
pop
or
lcall
jo
aas
das
pop
test
mov
mov
adc
cmp
add
jecxz
xchg
stos
xorb
repz
fnstcw
mov
push
adc
mov
xchg
xor
pop
mov
add
std
out
push
imul
push
mov
pushf
add
lods
outsb
daa
jmp
ret
push
dec
mov
xchg
rcr
lods
stc
or
mov
mov
dec
add
add
mov
adc
cmp
lret
pop
jecxz
xchg
cmp
lods
pop
enter
inc
add
push
xchg
pop
mov
aas
test
lock
sub
sub
pop
pop
or
or
jae
mov
mov
test
pop
sbb
adc
mov
lock
movsb
fisubrs
and
xchg
pusha
adc
pop
js
pop
repnz
jle
push
sbb
adc
movsl
or
dec
pop
inc
pop
push
push
mov
cli
fcoms
sbb
test
mov
or
aad
dec
jne
addr16
and
pop
mov
mov
mov
pop
cmp
mov
mov
test
inc
mov
leave
dec
out
push
ret
mov
push
loope
mov
push
out
bound
and
rcll
lret
enter
xor
pop
push
jns
xchg
mov
mov
or
adc
lds
pop
inc
pusha
xor
testb
cwtl
or
pop
js
ret
cs
or
lret
dec
in
mov
xor
ss
mov
test
sahf
shlb
push
sbbl
xchg
inc
insb
sub
mov
cmp
nop
mov
pop
xor
inc
mov
ja
test
cwtl
xor
push
ss
stc
cltd
loopne
or
insl
clc
lock
inc
push
inc
data16
jns
mov
inc
and
push
mov
imul
loope
add
xchg
pop
inc
sbb
stc
mov
inc
pusha
icebp
sub
inc
add
push
add
ret
lock
sbb
jmp
aad
int
sar
push
fistpl
int3
test
add
inc
mov
in
xor
cmp
shrl
dec
xor
mov
pushl
push
mov
aas
call
dec
stc
mov
mov
gs
mov
or
out
sbb
and
or
test
fdivrl
mov
cmp
testl
cltd
fs
xor
inc
dec
mov
scas
xchg
jns
int
cld
sbb
mov
cwtl
dec
lock
scas
loopne
int3
les
bound
jge
sub
sarl
cmp
xchg
test
dec
test
or
mov
mov
movsl
sub
push
lods
mov
stos
adc
xchg
insb
ljmp
pop
stos
mov
xchg
pop
mov
nop
popf
insb
hlt
or
mov
mov
sub
pop
nop
xor
mov
aam
mov
add
lock
arpl
jmp
ds
or
adc
lcall
mov
test
int
dec
fwait
sbb
jnp
cmpsl
stos
dec
xchg
mov
xor
or
sub
test
and
sub
call
cmp
jnp
pop
jns,pt
insl
stc
ljmp
fs
nop
xchg
and
lea
das
add
je
cld
iret
test
sbb
rcrl
scas
ret
add
adc
jnp
xor
ret
mov
inc
sub
jge
xlat
adc
cltd
push
ret
and
mov
jmp
add
inc
xchg
test
xor
cwtl
adc
rorb
pop
lods
outsl
arpl
cmp
jae
clc
inc
aaa
mov
lret
adc
stc
gs
add
clc
xor
cmpsb
jp
js
sbb
xor
das
ret
xchg
inc
aaa
nop
js
iret
or
mov
rolb
mov
idivl
lret
adc
mov
movsl
data16
mov
pop
stc
mov
push
sub
rcl
dec
dec
adc
jo
adc
shlb
pusha
addr16
cmp
arpl
gs
ret
mov
in
imul
cld
stos
dec
fxam
dec
cmpsb
fmull
scas
lret
in
and
cmp
pop
fiadds
jmp
nop
push
fs
xor
nop
cmp
into
mov
push
mov
dec
dec
rorl
pop
hlt
mov
mov
or
insb
push
loop
pop
and
rcrl
lcall
idivb
jo
lret
mov
fstps
xor
int3
dec
or
add
mov
js
bound
stc
cltd
loop
push
gs
or
or
aad
xor
test
imul
add
or
adc
popf
pop
mov
sub
in
jge
jmp
mov
xchg
xchg
mov
loopne
frstor
ret
ficoms
adc
jg
jmp
mov
ds
inc
lcall
sbb
andb
filds
add
cltd
cmp
add
lret
mov
jns
mov
jbe
gs
mov
sbb
mov
push
mov
bound
rcll
test
subl
or
dec
push
arpl
sarb
xchg
cmpb
arpl
or
jge
xchg
lock
pop
push
mov
filds
pop
aas
scas
adc
adc
mov
lods
mov
lahf
in
shll
sbb
jl
xor
and
pop
cmovg
jl
lret
ret
push
xchg
cltd
lock
ret
adc
stos
lods
xchg
dec
inc
pop
jg
jbe
add
push
js
xchg
addr16
cmpl
mov
xchg
icebp
push
jp
mov
add
test
mov
negl
mov
fisttpll
shlb
lock
mov
icebp
and
cmp
adc
pop
scas
ret
std
cmp
mov
pop
mov
into
aad
dec
mov
jae
scas
iret
adcl
jp
adc
loope
mov
fucomip
and
mov
lds
dec
jnp
cmp
sbb
enter
mov
inc
or
jmp
dec
shll
ret
pop
pusha
dec
xor
jb
add
add
or
jmp
xor
das
mov
mov
or
mov
dec
xor
in
xorb
test
cmp
dec
xchg
outsl
int
clc
xchg
aaa
or
cmp
ss
fistpll
pop
out
sti
xchg
pusha
dec
jp
sub
mov
mov
sub
insl
test
xchg
loopne
arpl
gs
mov
ljmp
add
or
xor
pop
movsb
movsb
mov
test
mov
cmpl
insb
ds
and
pop
dec
icebp
aaa
imul
ret
cmp
adc
stc
dec
repnz
sbb
xchg
push
repnz
outsb
pop
mov
pop
mulb
lret
sub
pop
lock
ss
cli
fwait
icebp
shl
dec
pop
mul
adc
adc
fs
gs
jne
sbb
fcmovnbe
inc
pop
stos
es
stos
jne
lods
int
inc
adc
test
cld
leave
leave
cwtl
iret
push
pop
dec
fistl
or
mov
adc
adc
dec
push
jbe
sbb
jnp
clc
jge
aad
mov
scas
pop
push
sbb
popa
pop
aaa
negb
and
rclb
xchg
stc
adc
mov
popf
mov
dec
outsl
inc
jmp
shll
xchg
pop
sbb
addr16
lret
rcrl
jge
dec
cli
push
and
jge
sub
jne
pop
shlb
inc
fs
inc
push
or
lahf
and
test
or
xchg
subb
lret
rolb
push
mov
ss
pop
sarb
or
test
arpl
in
mov
inc
push
cs
mov
add
mov
adc
xchg
jmp
pop
jbe
sbb
jns
test
mov
mov
int3
imul
adc
test
or
ret
addr16
jo
cwtl
cli
movsb
mov
loop
or
cpuid
cmc
mov
pop
pop
inc
push
fwait
push
or
add
sbb
mov
and
push
xchg
fs
pop
and
add
cwtl
xchg
out
xchg
stc
adc
scas
cmp
bound
adc
push
shrb
aad
ret
movsb
jle
adc
fiadds
imul
cmp
add
popl
icebp
add
xchg
repnz
jl
sub
sbb
or
std
pusha
outsl
inc
xor
add
lds
mov
nop
jne
repnz
add
jecxz
adc
jo
popa
rorb
mov
ret
and
cltd
pushf
add
arpl
add
test
mov
adc
push
movsl
ds
jmp
icebp
dec
in
push
cmp
sub
fwait
leave
mov
in
cs
and
mov
in
sbb
rorb
daa
sarl
lds
out
daa
lcall
push
mov
filds
inc
into
js
cld
xor
addr16
pop
lret
mov
adc
push
mov
fisttpl
cmp
cmp
xor
and
add
inc
mov
rcrl
js
adc
pop
leave
jne
xor
or
int
push
ljmp
mov
int3
inc
sbb
lcall
lahf
mov
sbb
movsb
dec
pop
outsb
fisttps
in
pop
in
fadds
xorl
vmovapd
aad
sub
ret
pusha
mov
bound
fs
sahf
lods
pusha
pop
jg
sub
dec
jo
test
mov
and
cmpsl
mov
testb
pop
clc
mov
sbb
and
xchg
sbb
decb
sbb
in
loope
jne
test
inc
jnp
xchg
push
jae
push
xlat
gs
fmuls
mov
pop
loopne
push
movsb
jne
sub
push
or
dec
pop
negl
xchg
aad
or
sub
hlt
ret
jle
ja
sbb
and
push
mov
sbb
push
or
mov
lcall
mov
xor
pusha
sub
outsb
mov
dec
fisubrs
push
cmp
adc
mov
stos
cmpsb
into
jmp
push
aaa
inc
cmpsb
fcmovbe
dec
daa
icebp
mov
inc
insb
add
lea
shrb
add
mov
lock
add
inc
mov
fisubl
test
repz
adc
movsb
movsl
dec
scas
mov
popa
pop
add
and
aad
cmc
mov
addr16
imul
pop
pop
and
scas
jmp
pop
lahf
fcompl
jnp
xor
es
cmp
fnstsw
lret
ljmp
cmc
jnp
sbb
fdivrs
das
cmp
in
mov
add
shlb
sbb
lahf
push
pop
daa
or
or
xchg
xchg
subl
pop
lcall
sahf
xchg
add
jmp
and
pop
addb
jl
imul
shrb
mov
jl
out
into
mov
sti
xor
in
sahf
outsb
xchg
pop
add
cmp
jne
jb
aam
or
jns
daa
xlat
push
xor
sub
adc
and
jbe
shlb
or
fstpl
dec
fisubrl
inc
dec
movsb
xchg
test
mov
add
cmp
loop
pop
mov
arpl
push
xor
test
mov
ficompl
fists
cmp
call
mov
int
and
fists
xchg
dec
fmuls
pop
xchg
jbe
notl
aam
rolb
lock
jns
pop
and
bnd
pop
into
dec
sub
jo
or
xlat
adc
cmp
sub
xor
ja
ss
test
pop
std
add
push
push
pop
push
out
jg
pop
add
jecxz
cmp
test
rolb
push
and
popa
xacquire
add
sbb
xor
mov
mov
out
xorl
add
xlat
test
stos
lea
inc
push
in
and
add
xor
leavew
cmp
push
mov
push
fcompl
pop
push
es
xchg
add
movsl
pop
jmp
lea
adc
xchg
dec
jno
push
cltd
xchg
push
push
dec
dec
clc
ss
mov
in
inc
scas
lock
stos
push
andl
aam
or
sahf
push
ret
mov
mov
push
mov
hlt
mov
gs
add
pop
xchg
cli
mov
lods
adc
jns
pop
or
in
aam
add
pusha
xchg
or
dec
add
inc
pushf
aaa
cld
imul
js
add
mov
mov
or
daa
mov
and
jl
pop
lock
stc
movmskps
ss
mov
fisttps
cltd
flds
inc
ficomps
shll
outsl
jo
aaa
movsb
jle
jbe
xor
insb
mov
psadbw
popf
outsb
inc
mov
sub
or
and
pushf
fcoml
stos
pop
dec
sbb
or
icebp
jne
cmp
dec
fwait
and
aad
aam
mov
xor
xor
lock
mov
mov
stos
mov
pop
rorl
sub
jno
adc
jp
pushw
imul
mov
sub
jle
jecxz
cmc
das
into
hlt
pop
jae
ja
fs
mov
fs
adc
loop
adc
lods
fldl
mov
aaa
testl
ret
adc
cmp
lds
pop
outsb
mov
mov
arpl
mov
test
dec
xchg
mov
in
or
int
cmp
push
cmp
subb
test
pusha
stos
lret
sub
arpl
loope
or
into
mov
fs
xchg
xlat
mov
out
sbb
xlat
xorl
add
in
xchg
rorb
arpl
mov
dec
ljmp
mov
ss
sbb
mov
sti
mov
ds
pop
jno
int3
jbe
push
inc
mov
std
jp
push
xchg
mov
fisttpll
inc
mov
loopne
sahf
mov
sbb
dec
aad
sbb
fiadds
arpl
cmp
fimull
add
cmp
inc
mov
mov
in
fs
clc
add
in
imul
mov
lods
sar
mov
rcrl
loopne
cmp
xchg
std
mov
addr16
iret
dec
pusha
adc
mov
pop
and
mov
or
fcoms
iret
xor
jecxz
mov
insl
mov
sbbb
cmpsl
scas
sbb
pushf
insb
fistpll
cmp
lret
outsl
pop
adc
fiadds
test
sub
outsl
xchg
test
mov
jbe,pt
std
subl
xorl
sahf
out
push
mov
dec
push
jb
xchg
shll
xor
out
in
inc
mov
in
clc
repnz
pushf
repz
addb
adc
dec
lcall
out
xchg
xchg
and
inc
cltd
mov
mov
mov
pop
rcll
xchg
bound
jge
dec
add
les
loopne
stos
sub
push
ss
dec
mov
inc
add
push
mov
fs
ret
inc
popf
iret
ret
jl
stc
and
decl
sub
push
add
xchg
sbb
mov
pop
mov
cmpsb
fucomp
ljmp
mov
jae
push
xchg
ss
cmp
into
mov
mov
test
sbb
test
jmp
xor
cmp
fisttpll
std
and
jecxz
adc
push
ss
jno
nop
ja
loop
rorb
push
cwtl
mov
and
test
ret
out
nop
jne
mov
test
outsb
test
push
pop
popl
scas
jmp
sbb
cs
popa
or
mov
ja
pop
jecxz
pop
adc
push
sbb
loopne
xor
xor
lret
mov
sbb
bound
cmpsb
fisubrl
mov
mov
adcl
push
add
mov
sub
imul
pop
push
out
movsl
push
shrb
maskmovq
notl
push
jb
fstps
dec
pop
test
fdivs
pop
movsb
lret
aad
cmpsl
stc
and
and
std
fstpl
pop
lret
mov
and
mov
sub
insb
movsb
lods
mov
or
add
in
adc
sti
dec
xchg
out
in
xchg
pop
aam
inc
enter
icebp
leave
mov
adc
out
inc
lahf
test
sbb
push
pop
lds
jmp
inc
lds
xchg
xor
pop
test
cmpsb
pop
jg
mov
jo
into
sbb
rcll
fbld
and
ret
fildll
cmp
push
mov
add
leave
mov
or
lret
rep
leave
fsub
xor
rcl
and
adc
mov
push
fsubrp
imul
or
mov
cli
faddl
adc
sbb
pop
mov
cmp
mov
ljmp
mov
in
inc
movsl
repz
pusha
mov
jbe
inc
loopne,pn
jl
push
iret
fstpl
fs
or
adcb
notl
lcall
mov
sahf
push
inc
jecxz
fbstp
sub
daa
ret
repnz
fistl
jns
pop
push
stc
adc
mov
pop
mov
cmp
add
je
cltd
rorl
cmp
cmp
mov
sub
pop
ror
mov
mov
imul
cld
imul
cmpsb
dec
std
in
subb
adc
icebp
out
lret
add
imul
sbb
clc
mov
lods
pop
imul
or
aam
std
stos
ficomps
nop
xor
clc
lds
in
mov
lret
mov
jo
xchg
mov
int
orl
imulb
fldcw
mov
pushf
out
test
push
stos
lods
jmp
push
adc
add
push
cmpsl
ret
mov
rcll
addr16
int3
or
rcrb
mov
stos
dec
xlat
data16
dec
mov
pop
insl
xchg
xchg
lret
mov
in
cmp
xchg
lds
xor
les
vmwrite
xchg
aam
mov
mov
icebp
mov
aam
pushf
cmp
call
mov
xchg
pop
add
sub
ret
lods
push
dec
fwait
outsl
cwtl
scas
mov
cmp
bound
or
outsl
or
bound
ljmp
loope,pt
mov
in
hlt
insl
sbb
in
cmp
lods
inc
sbb
scas
mov
and
adc
cmp
lods
xlat
xchg
inc
repz
in
mov
adc
pusha
movsb
shrb
or
aam
ja
in
neg
jbe
stos
out
mov
ja
leave
in
push
pop
xchg
push
mov
push
sub
movsl
sub
jge
and
push
aam
roll
pusha
pop
xor
arpl
dec
scas
out
stc
jne
cmpb
shrb
push
and
int
jge
add
push
das
pop
pusha
lods
jge
pop
loop
jns
sbb
xor
dec
ret
repnz
int
sub
mov
cmp
cmpsl
fadds
or
hlt
in
xchg
mov
aad
pop
dec
mov
std
sub
jge
sarl
fstpt
das
or
fs
or
enter
test
mov
add
movsb
jo
shll
loop
xor
sahf
push
mov
mov
movsl
movsl
dec
mov
fbstp
or
lcall
lret
pushl
mov
ja
pop
push
repnz
scas
test
jne
out
stos
inc
lcall
push
push
stos
inc
push
push
mov
mov
jns
stc
divb
mov
test
fcomi
xchg
inc
xchg
adc
xor
rorl
stos
je
andl
xlat
in
stc
std
repnz
inc
sub
mov
dec
insl
call
xor
ficoms
or
outsl
ret
jle
dec
loop
add
lods
mov
cmp
and
dec
pop
adcb
bound
loop
hlt
mov
insb
push
loope
cmp
dec
out
xchg
xlat
cld
add
push
cmc
shlb
mov
pop
xchg
int
les
push
std
mov
cmpsb
scas
popf
sub
dec
jmp
popa
pop
icebp
add
jmp
outsl
mov
push
gs
pop
jbe
dec
push
addl
inc
mov
out
insb
int
pop
adc
sarl
push
xor
sahf
jmp
cld
fisubl
out
dec
lds
in
pop
push
out
pop
cmc
xchg
rcll
negl
pushf
xchg
out
ficompl
pop
call
xor
push
mov
rcrl
lret
das
or
std
mov
bswap
js
jmp
mov
mulb
outsl
adcb
fwait
push
int3
mov
aam
xor
mov
cltd
jp
outsl
xor
or
cmp
out
adc
imul
nop
mov
and
jge
mov
sub
jo
fidivl
xor
dec
push
mov
push
icebp
pushf
ret
xchg
and
les
insl
mov
bound
dec
aam
sub
test
cmpsl
xlat
sub
int
xor
loope
dec
das
mov
cltd
xchg
pusha
dec
sbb
pop
daa
mov
push
sub
jnp
dec
jnp
mov
hlt
das
mov
adc
xlat
mov
jo
ret
fisubrl
xchg
sbb
or
hlt
pop
icebp
in
sbb
nop
and
push
orb
ss
in
shlb
mov
test
sub
por
jae
add
sub
mov
push
mov
jecxz
add
jle
jg
aam
or
dec
movsb
pop
loope
ja
pop
cld
inc
subl
js
xchg
test
and
in
js
adc
les
clc
iret
sub
pusha
jo
out
and
pop
dec
cmp
sti
popa
mov
xor
sbb
ds
mov
ljmp
jmp
mov
lds
loopne
sbb
xchg
lods
jne
xchg
into
push
xor
and
imul
out
mov
ljmp
rol
inc
add
inc
pop
xchg
and
mov
push
push
cmp
testl
or
nop
cmp
jl
aad
jns
inc
das
inc
mov
sub
sti
in
fldl
scas
clc
pop
add
dec
bound
mov
sub
mov
repnz
ffreep
push
cmp
push
cmpsb
mov
or
xchg
or
cmpsl
in
outsl
mov
aam
adc
add
iret
lds
mov
fisttps
out
aaa
push
and
add
fs
xchg
mov
cld
or
arpl
xor
sbb
test
inc
mov
aam
pop
daa
dec
imul
inc
vsqrtss
loope
stos
sahf
bound
add
fbstp
mov
das
loop
mov
icebp
jno
cltd
xor
lcall
lods
insl
mov
lods
repnz
lret
and
push
pushf
shlb
xor
push
dec
cwtl
pop
xchg
ljmp
pop
fsts
jmp
insb
das
test
sub
mov
fcoml
xchg
add
inc
mov
and
xbegin
arpl
rolb
xor
movl
es
xchg
das
pop
and
into
les
mov
cmpsl
and
mov
rclb
xchg
mov
stos
insb
ret
iret
xchg
cmpsl
mov
pop
or
jae
test
call
push
sbb
in
test
pop
scas
mov
and
dec
xchg
mov
fisubrl
arpl
cmpsb
dec
or
out
mov
and
jbe
jmp
mov
stc
lret
and
rcll
add
adc
xchg
pushf
stos
or
and
jp
roll
lock
lods
pop
sbb
pop
pop
xor
sbb
adc
push
test
jbe
shll
popa
or
popa
dec
fidivs
repnz
jae
add
not
add
out
jae
movsb
arpl
out
ret
movsb
cli
dec
add
push
mov
xor
cmp
cmp
ret
cmp
shr
push
shll
in
push
jbe
cmpsl
adc
mov
outsb
mov
scas
aad
pop
pushw
jae
add
dec
xchg
inc
imul
jns
pop
dec
gs
adc
sbb
xchg
in
push
pop
pop
pop
fbld
pushf
adc
nop
sbb
addr16
ljmp
jle
popa
scas
pop
sub
xor
movsb
push
lods
cltd
add
push
push
dec
and
pop
sub
or
test
push
adc
in
outsb
or
scas
in
pop
mov
jno
sbb
jp
dec
xchg
mov
lock
push
fwait
pop
pusha
jp
pushf
xor
and
jbe
dec
mov
mov
inc
fsts
push
fcmovnb
lock
std
fwait
mov
cld
jno
mov
fldt
dec
xchg
out
lahf
mov
jl
pop
and
xchg
jae
and
outsb
jp
inc
mov
inc
sar
adc
lcall
leave
hlt
scas
sti
mov
jb
in
lahf
insl
inc
and
pop
aam
mov
cmpsl
or
rclb
movsl
xor
cmp
cli
mov
mov
xchg
jns
aad
pop
sub
dec
fimull
iret
jecxz
sahf
adc
push
fs
call
jbe
mov
cmp
shll
inc
cltd
std
mov
inc
repz
ror
push
popf
push
pop
sti
or
pop
cmp
shl
lea
adc
sub
xchg
sbb
push
jns
adc
jbe
sti
loopne
cmpsl
xor
aad
fldcw
arpl
jl
les
push
pop
xlat
pop
dec
pop
jnp
lods
sahf
adc
pushf
stos
iret
insb
push
mov
inc
mov
stos
test
movsb
call
mov
xchg
cs
nop
adc
inc
mov
mov
mov
xchg
push
aam
hlt
sub
mov
mov
dec
mov
xor
xor
je
test
enter
outsb
nop
mov
loopne
popa
loope
cmpsl
pop
cmp
cltd
mov
cld
and
mov
mov
mov
sbb
cmc
sub
mov
mov
mov
cld
pop
test
mov
fs
bswap
jg
xor
sub
add
and
sub
xchg
cmp
imul
inc
adcl
jns
mov
and
adc
dec
jne
pop
rorb
push
movsb
push
lock
popf
adc
scas
cmc
jnp
jg
mov
iret
sbb
dec
test
and
mov
mov
mov
aas
pop
imul
icebp
mov
jb
lcall
out
mov
cmp
adc
push
inc
popa
sub
sahf
mov
push
inc
out
mov
dec
add
xor
mov
xchg
or
es
insl
fnstenv
fldcw
mov
fnstenv
cmpsb
fstpt
pop
out
repz
xor
mov
jp
mov
dec
pop
icebp
and
mov
fisttps
int
ljmp
xor
cli
add
sbbb
lret
rclb
scas
notb
mov
xor
lahf
fdivr
out
xor
out
inc
loope
mov
pop
mov
inc
pushf
test
xchg
xor
cmpl
cmp
xchg
or
inc
xchg
jg
and
push
loope
cmpsl
inc
sar
cmp
lcall
push
ret
mov
mov
lret
push
inc
les
into
inc
adcl
pop
pushf
mull
cmp
aaa
lds
inc
lods
sub
enter
adc
lcall
mov
or
pop
in
inc
arpl
sbb
les
cld
mov
ud0
add
dec
inc
pop
mov
iret
push
cmp
push
bound
pushf
push
lahf
mov
sub
and
mov
mov
lret
test
shr
dec
jmp
push
jge
dec
sbb
mov
pop
cmp
dec
push
jmp
dec
in
push
dec
lret
or
sar
les
out
jmp
pop
push
inc
mov
stos
jp
pop
out
jge
movsb
mov
push
add
sbb
push
jp
inc
mov
push
pop
std
in
and
mov
or
or
xchg
repnz
inc
shl
dec
mov
mov
push
cwtl
je
push
fnstenv
adc
and
lret
mov
in
ljmp
cmp
mov
xor
mov
ret
clc
stos
adc
test
inc
sub
and
xlat
call
jnp
arpl
and
das
pop
add
scas
xor
and
cmp
xor
mov
cli
outsl
aas
cld
sbb
jno
cld
scas
fldcw
sarl
jmp
sbb
dec
movsl
daa
cli
push
mov
add
aad
test
out
dec
popf
mov
pop
sbb
lahf
arpl
in
fimuls
sti
fisubs
aas
cmp
lods
push
jmp
loope
icebp
daa
sub
fimull
ret
push
add
repz
add
adc
cmp
jno
mov
es
clc
js
mov
sbb
cwtl
cmp
cmp
mov
pusha
jb,pt
inc
cmp
add
xlat
std
loopne
add
cli
push
pop
ret
sarb
shlb
stos
das
xor
int3
inc
cld
rorb
gs
push
ja
js
pmulhuw
aaa
sub
js
daa
in
xchg
xlat
sahf
mov
mov
push
mov
mov
mov
mov
aad
insb
stos
and
adc
mov
int3
mov
dec
mov
xchg
and
popf
in
mov
inc
fdivs
fxch
jbe
jle
ljmp
mov
push
lods
dec
lret
jbe
jl
xlat
cmp
sbb
cmp
xchg
mov
jmp
les
mov
out
dec
in
pop
imul
mov
sahf
and
loopne
mov
and
push
xor
sbb
bound
fimuls
fildl
fwait
loop
and
jp
dec
fmull
scas
loop
push
jae
jo
sub
mov
xor
pcmpeqd
mov
and
jl
pop
inc
daa
or
int
lods
movsl
inc
jne
rol
cmpb
sub
out
and
sub
outsb
lods
mov
das
dec
add
jne
test
iret
jmp
fxam
enter
cmc
clc
add
sbb
mov
out
das
jl
push
in
loopne
shll
or
repnz
or
cltd
push
sahf
mul
in
testl
fbld
lret
mov
inc
fbstp
push
mov
adc
jb
leave
ds
jnp
jo
push
xchg
sub
jo
out
sub
mov
xchg
pop
dec
fs
mull
pop
dec
and
add
ja,pn
dec
ja
sub
iret
mov
inc
in
jne
jns
dec
hlt
pop
xchg
jle
or
mov
repnz
push
mov
xchg
test
sahf
sub
dec
icebp
dec
arpl
mov
call
adc
mov
hlt
outsl
jl
out
push
bound
pop
dec
outsb
data16
orl
sub
ljmp
xchg
leave
push
ficomps
imul
mov
adc
lock
lahf
jge
leave
into
dec
inc
xor
push
ud1
mov
leave
cmpsb
jae
arpl
pop
andb
and
and
add
dec
scas
jb
out
sahf
and
sub
std
xor
fwait
loop
fdivrs
inc
inc
jg
cmp
cmp
insb
dec
mov
loopne
add
mov
orl
in
shll
adc
out
mov
pop
scas
push
gs
leave
or
rcrl
repz
aas
lret
push
mov
pop
mov
mov
push
jb
mov
mov
dec
sti
dec
add
sbb
and
inc
jmp
jl
xchg
add
scas
xchg
xchg
mov
mov
add
or
cld
insl
mov
push
xchg
arpl
icebp
mov
mov
sub
xor
leave
nop
out
jno
xor
and
and
inc
mov
mov
adc
jmp
pop
xchg
jmp
jp
cmp
in
iret
mov
fsubl
adc
add
pushf
push
insb
push
pop
jae
insb
lock
jge
add
dec
mov
in
mov
add
sbb
or
adc
inc
or
repnz
mov
add
loop
ret
xchg
mov
ss
cwtl
jge
std
pop
jge
outsl
ficoms
push
sbb
jmp
popa
sub
fdivs
xor
ljmp
je
je
enter
outsl
or
test
dec
push
ret
cmp
mov
loopne
fadd
movsb
sbb
lret
cli
out
xor
fcmovne
xor
in
test
mov
push
sarb
ret
test
or
div
daa
adc
inc
adc
iret
dec
dec
jno
js
dec
dec
and
mov
imul
xor
shrb
xor
clc
cmpsl
cld
lret
jo
inc
or
movsb
fildl
sbb
rorb
cli
inc
iret
out
adc
adc
adc
inc
mov
in
dec
inc
jne
jg
sbb
inc
dec
sar
push
cmp
sbb
dec
pop
cli
and
addb
loop
cmc
xor
cli
or
adc
sbb
cmp
cld
mov
xor
int3
or
dec
aaa
lods
pop
imul
add
sub
xchg
ret
hlt
push
ss
ret
cmp
jb
idivb
fwait
or
clc
rorl
pop
js
mov
ret
cmp
cld
fbld
cmp
test
push
and
test
call
or
add
iret
jecxz
outsb
adc
in
mov
lds
ret
add
sbbl
add
icebp
cmpsl
out
jno
jne
push
xchg
push
pop
cltd
mov
dec
lret
add
and
ret
sub
mov
cmpsb
mov
loopne
loop
dec
test
adc
test
xor
pop
hlt
jecxz
data16
fisttpl
jno
dec
cli
xchg
test
mov
stos
or
or
ljmp
lds
cli
fnsave
stc
out
sub
push
leave
sbb
dec
imul
das
jae
pop
rcl
or
jmp
repnz
mov
adc
fs
cli
sbb
test
ljmp
xchg
sbb
mov
das
fcoms
xchg
mov
inc
mov
movsb
sub
or
dec
icebp
jne
push
inc
mov
jmp
in
out
sbb
dec
mov
lods
adc
sbb
add
sub
cmp
cmp
orb
jg
sarl
cmp
jae
mov
push
adc
jl
pop
add
mov
fwait
lods
jo
pop
and
fisubrs
aam
cs
xchg
jg
sbb
cltd
sbb
dec
inc
outsl
mov
and
xchg
mov
fiaddl
mov
sub
in
jns
inc
cmpsb
cmp
push
and
dec
cmpsl
js
mov
mov
addl
cmp
mov
out
xor
popa
dec
mov
aaa
pusha
xchg
push
popa
mov
inc
shrb
movsl
adc
in
clc
stos
adc
adc
xor
es
out
andps
mov
lea
xor
stos
or
sbb
dec
je
cmp
sub
adc
push
lods
frstor
or
jb
in
xor
adc
daa
mov
inc
out
push
add
or
inc
dec
repz
mov
push
mov
daa
mov
in
jae
mov
mov
mov
out
aas
nop
mov
fidivrs
or
fidivrs
add
pop
pop
dec
movsb
imulb
dec
lret
lods
mov
cwtl
jecxz
fsub
mov
xchg
jbe
inc
cltd
lds
mov
into
jg
inc
xor
inc
sub
xchg
jae
cltd
xchg
dec
cmc
cwtl
adc
js
pop
jmp
push
xlat
rcrb
mov
or
inc
xchg
mov
into
cwtl
les
mov
inc
adc
inc
iret
aas
repnz
sarb
rcll
adc
lea
or
cmp
les
mov
sub
popl
and
inc
out
stos
add
pop
xchg
loop
es
fdiv
sbb
xchg
out
cwtl
mov
das
mov
xlat
movsb
mov
call
jp
mov
ds
mov
lods
xchg
mov
stos
mull
arpl
ret
mov
push
lods
shl
jg
xor
arpl
popa
testl
push
mov
repz
dec
add
rcr
fsubrs
push
test
setb
and
dec
out
adc
lahf
mov
rorb
fists
adc
mov
cmp
out
inc
neg
fcoms
js
pop
call
pop
sub
mov
sbb
xor
out
bound
xchg
sbb
add
dec
adcl
pop
push
and
insb
pop
aaa
and
ret
neg
or
xor
mov
filds
cld
mov
out
mov
push
push
pusha
jle
stos
pop
cmpb
sub
jno
aad
insb
clc
pusha
inc
inc
adc
xchg
mov
xor
mov
and
int3
inc
cltd
sub
loop
adc
add
sahf
push
movsb
cmpsl
cmpsb
enter
add
sbb
mov
and
dec
cmp
dec
mov
dec
xchg
push
or
fwait
out
loope
out
mov
fistps
push
sub
jo
jno
jg
dec
xchg
cmp
enter
mov
jnp
sub
add
adc
mov
arpl
jl
leave
sti
pop
dec
cmc
mov
mov
push
cld
arpl
xchg
xor
aaa
adc
bound
or
xchg
add
pop
lret
rcrl
xchg
mov
inc
fstp
mov
pushf
orl
insb
ret
adc
pop
pop
ret
mov
pop
cmp
and
icebp
ret
divb
or
add
jp
cmp
popf
out
mov
cmp
adc
push
jbe
rclb
mov
add
sti
sbb
mov
xchg
dec
out
add
popf
call
xor
mov
mov
or
lock
cwtl
push
and
xchg
std
js
test
cmp
repnz
xor
mov
xchg
cmp
cli
pop
fcomip
out
ret
push
xchg
or
pop
push
fnstsw
shrl
pop
push
jns
inc
jp
push
pop
rcll
inc
subb
cmp
jmp
rorb
pushf
mov
stos
or
movsb
shrl
imul
dec
mov
push
jmp
and
movsb
xchg
shll
and
cli
xchg
mov
or
mov
je
inc
icebp
sahf
fdivl
adc
es
push
push
mov
jl
or
out
cmp
mov
das
push
mov
nop
push
cltd
xor
cwtl
shlb
add
push
add
lcall
mov
mov
cmpsl
mov
mov
les
push
cmp
dec
in
lret
lods
cli
imul
push
add
std
in
daa
push
adc
mov
add
ds
jge
lock
adc
or
inc
sbb
mov
divl
xlat
add
jl
int
ret
xchg
mov
jg
jmp
adc
popf
jb
cwtl
hlt
clc
imull
dec
jno
push
iret
outsb
sub
push
lock
mov
adc
xlat
outsb
xlat
jnp
mov
in
cmp
mov
mov
clc
inc
stos
into
stos
xor
push
adcl
int3
push
repnz
enter
out
inc
call
lahf
nop
mov
enter
xchg
jo
jnp
cwtl
cli
xchg
mov
mov
sbbb
or
ds
mov
aad
push
shlb
pop
adc
add
test
mov
sub
pop
out
sub
movsl
adc
cli
add
sti
nop
sbb
fwait
jno
xchg
int
mov
xchg
push
add
imul
out
dec
and
sbb
rorl
adc
jae
imul
pushf
nop
push
aam
hlt
insb
xchg
cmp
adc
out
dec
stos
ljmp
dec
pop
adc
xor
push
movsl
xchg
jp
and
ret
push
mov
push
sbb
stos
pop
jg
lock
ficompl
fldl
notb
mov
ds
sub
jae
lcall
adc
ds
les
fwait
mov
inc
xor
jbe
ds
jmp
jl
stc
jae
insb
pop
jnp
dec
pop
or
daa
bnd
fwait
dec
fld
or
in
mov
inc
insl
jle
imul
mov
sbb
pop
frstor
mov
mov
adc
into
fmull
jge
cltd
mov
mov
cltd
pushf
xor
sub
pop
sub
scas
enter
dec
aas
je
adc
mov
and
push
shll
ffreep
cld
mov
mov
sbb
in
sub
pusha
mov
xchg
jb
aaa
push
xchg
ja
mov
push
stos
adc
arpl
cmpsb
test
mov
arpl
push
fmuls
xlat
repnz
in
xorl
jne
stc
or
lods
xor
insb
insb
adc
dec
cli
call
inc
push
push
mov
inc
mov
shlb
icebp
scas
lcall
out
pushl
or
gs
mov
sub
dec
jg
mov
roll
pop
inc
ds
js
adc
mov
sub
pop
mov
jo
cmpsl
xor
xchg
lahf
cmp
dec
xchg
mov
sub
jmp
cmpsb
lcall
rcrb
gs
inc
mov
insl
or
mov
or
add
add
jp
addb
add
pop
ret
xor
sbb
push
aaa
cld
inc
mov
jecxz
loopne
loope
adc
or
xor
mov
movsb
xlat
loopw
jo
adc
adc
jmp
stc
hlt
mov
jle
push
rcrl
arpl
jbe
in
pop
cmp
movsb
jne
mov
clc
cmp
out
jl
jecxz
leave
fcoms
xchg
jo
imul
xor
rcll
aad
rcrl
pushf
mov
push
aaa
inc
and
shrl
mov
sub
pop
jb
pop
loope
mov
nop
inc
inc
cmp
jnp
hlt
push
addr16
outsl
xchg
sbb
mov
adc
mov
outsl
or
push
aas
aam
pop
or
push
dec
fbstp
jecxz
fsubrs
cmp
dec
sub
lret
xchg
push
xchg
inc
ss
fdivrs
fildl
repnz
adcb
mov
mov
push
mov
roll
push
lds
out
mov
sbb
stos
std
lods
nop
les
insb
aam
mov
adc
fsubrs
das
icebp
out
stc
fidivrl
lods
dec
push
or
scas
pop
push
mov
scas
stos
inc
idivl
mov
enter
and
jecxz
xor
push
mov
push
fisubrl
mov
cmp
lea
fwait
pop
fsubs
cld
or
scas
mov
pop
cmp
pop
gs
push
cmp
testl
and
mov
test
mov
sahf
imul
mov
out
xchg
inc
push
add
shrb
rcll
pop
cmp
mov
rolb
fdivr
data16
loope
mov
push
outsl
roll
stos
jl
fisttps
sti
pushw
fwait
ret
pop
scas
lret
jmp
repnz
sbb
xlat
jns
jle
and
sub
sub
aad
cmp
in
or
mov
pop
mov
cmova
adc
sti
jecxz
push
inc
call
sahf
fs
lahf
lret
cmpsb
cmpb
popa
pop
add
aad
xchg
imul
mov
sub
xor
fldt
dec
sub
xchg
stc
ret
dec
pop
out
push
push
jle
arpl
jge
cmpsb
jle
idivb
xor
sbb
mov
push
xor
dec
aam
adc
jb
inc
xchg
sub
cwtl
or
inc
cmp
fdivl
or
cmpb
movsl
je
dec
arpl
sub
fsubs
stos
xchg
push
outsb
add
out
or
add
push
idiv
push
inc
or
das
xchg
rorl
incl
add
dec
pop
fcmovu
adc
jns
rcr
push
inc
insl
rclb
outsb
and
jl
dec
pushf
into
sub
mov
sub
lret
test
into
mov
scas
or
int3
xchg
xor
sbb
push
ljmp
daa
cli
fcmovbe
mov
loop
and
adc
push
rcrb
jl
mov
sbb
push
scas
cwtl
mov
sub
loop
mov
das
daa
in
or
cmp
dec
or
push
pusha
xor
xchg
inc
xchg
nop
xor
out
inc
add
xchg
dec
test
cmc
push
lock
repz
test
and
xor
shl
push
movsb
cmp
pop
cmp
test
mov
push
jge
cmp
sbbl
lea
push
or
outsl
mov
inc
push
out
shll
pop
mov
movsl
ljmp
jmp
jge
push
mov
sbb
adc
aam
xchg
add
clc
pop
or
mov
sub
or
gs
add
mov
mov
push
dec
mov
inc
adc
lret
mov
repnz
mov
call
push
sbb
fsts
jns
imul
in
dec
xchg
xchg
mov
ss
mov
cmp
and
inc
divb
mov
jg
mov
push
xor
stos
stos
lahf
push
dec
test
out
aaa
cmp
add
frstor
mov
lock
add
xor
aas
xor
or
test
cmp
mov
mov
xchg
in
aas
mov
mov
sbb
add
outsl
add
fs
pop
xchg
adc
dec
xchg
stc
xor
leave
xchg
dec
mov
pop
scas
xchg
repnz
enter
sub
or
clc
lret
ds
mov
add
das
or
mov
and
insl
dec
out
xchg
mov
scas
xchg
inc
mov
dec
iret
and
and
fsubr
inc
shl
jns
movb
inc
cmc
lahf
xchg
mov
divb
fdivs
adc
aas
fstps
adc
cs
mov
adc
mov
jmp
mov
mov
cmp
xchg
fimuls
sbb
sub
adc
bound
push
fs
add
lahf
push
or
sub
sbb
pop
ljmp
fisubrl
or
cmp
dec
add
data16
ja
adc
aad
and
test
loope
pop
pop
lock
dec
pop
lock
adcb
or
xor
insb
or
sub
cmp
repz
jmp
into
or
dec
inc
loopne
dec
lock
mov
into
testl
xchg
sbb
das
adc
xchg
mov
mov
inc
in
data16
xchg
fistl
fmull
sub
xchg
jbe
xor
ret
mov
scas
stc
dec
push
repnz
inc
mov
adc
cltd
out
xchg
fstp
pop
subl
adc
push
xchg
mov
cli
sbb
fsubl
out
pop
push
ss
xchg
imul
es
enter
mov
jp
xor
outsl
xchg
mov
fistpll
fstp
call
es
push
movsb
addr16
mull
in
scas
mov
push
pop
movsb
jne
addr16
stc
es
mov
lret
lret
ja
sub
jnp
push
dec
jno
xor
or
dec
adc
push
jne
leave
cmp
adc
mov
lea
jno
and
shl
sbbl
jnp
std
fsubrl
movsl
in
adc
and
sbb
xchg
or
aaa
imul
out
loop
int
cld
add
iret
outsb
xchg
sub
imul
mov
inc
push
mov
or
push
cmp
mov
push
lods
test
jl
arpl
js
or
mov
jb
scas
mov
lods
ror
push
pop
fnstenv
insb
mov
add
fldenv
es
jl
out
mov
mov
fsubrl
inc
decb
popa
shr
xchg
ds
scas
dec
inc
lahf
sub
mov
pop
movsb
cmp
mov
das
mov
jge
mov
xchg
and
cmp
jecxz
rcr
jg
in
stos
cmpl
pop
js
pop
fwait
insb
sbb
hlt
pop
sbb
adc
addr16
popf
fcompl
loop
push
sahf
daa
cs
push
cmp
jecxz
add
inc
sbb
mov
imul
adc
divl
jmp
xor
mull
xchg
das
icebp
cmp
fcmovb
mov
xlat
fiaddl
lods
test
sub
into
xor
notb
xchg
lret
mov
nop
sub
adc
dec
and
cmpsb
push
pop
pusha
fstpl
sbb
add
mov
stos
sarb
lret
cltd
shlb
mov
xor
mov
and
test
dec
insb
add
xor
jbe
in
or
pop
push
xor
add
and
or
shl
dec
jo
mov
pop
int3
lahf
mov
in
cli
std
lock
repnz
dec
and
pop
jecxz
mov
xor
std
loopne
shlb
xchg
push
lds
bound
sub
aad
dec
es
xor
stos
mov
ss
fisttps
fdivr
cmp
mov
jb
jno
std
mov
sub
xchg
mov
cmp
dec
mov
ss
lds
fstl
pop
aam
shlb
mul
cmp
push
lods
adc
or
add
push
mov
jnp
and
jle
jne
lret
sbb
cltd
mov
mov
push
mov
fwait
cmp
mov
or
sti
test
test
mov
and
mov
das
jmp
pop
xor
dec
movsb
mov
scas
pop
imul
xchg
mov
pop
bound
jecxz
pop
int3
mov
inc
das
xchg
pusha
loop
inc
aas
int3
cmc
adc
pop
sar
ljmp
xor
mov
pop
test
push
rcrl
data16
ficoms
push
xchg
push
inc
push
in
cmpsb
cli
stos
mov
xor
sbb
das
add
cmp
imul
mov
cmp
ss
hlt
dec
inc
add
jecxz
cmpsb
pop
imul
or
insb
lahf
lods
ret
mov
jne
cmc
push
push
pop
sbb
shrl
enter
testl
jg
ficoms
mov
and
imulb
out
mov
mov
add
cmp
xor
add
loop
jnp
mov
cmp
imul
mov
sbb
pop
int
lods
xchg
test
in
arpl
cmc
pop
xor
ja
fcmovnbe
into
int
rol
mov
add
jno
push
sbb
and
or
sub
cmc
pop
incb
push
pop
mov
xchg
or
test
test
pop
adc
adc
subb
adc
jl
cmp
mov
dec
getsec
xchg
loopne
loope
sarl
lock
xchg
test
fiadds
pushf
loopne
int
mov
loop
imul
clc
pop
fiaddl
adc
push
dec
pushf
add
test
dec
pusha
mov
in
pop
in
mov
in
or
test
cmp
pop
bound
jle
sub
and
push
imul
std
mov
negb
sbb
add
push
addr16
xor
sbb
jb
movsl
sub
inc
xchg
mov
push
mov
pop
sub
mov
xchg
push
mov
cwtl
and
lods
es
cmp
xchg
into
sub
shlb
pop
and
stos
jns
imul
rcll
data16
fstp
xchg
out
notb
dec
outsl
insb
mov
cwtl
sub
ljmp
push
cmp
push
orl
xor
into
inc
xor
loope
mov
sahf
cmp
outsl
xor
cmc
icebp
fisttpl
or
aam
not
jnp
imul
jmp
adc
push
scas
mov
adc
insl
std
lret
pop
dec
call
push
loope
xchg
jge
mov
in
js
xor
sub
rcrb
or
push
test
mov
sub
dec
mov
ss
and
rep
sbb
cmc
jno
lods
jno
xlat
dec
or
and
push
pop
mov
mov
lock
sub
daa
push
int3
xchg
pop
mov
repz
lock
insl
mov
mov
icebp
lret
mov
fbld
add
cwtl
iret
lret
xlat
ss
loopne
test
test
jg
pop
mov
sti
dec
inc
dec
push
rclb
push
mov
jmp
lock
stos
jecxz
sub
shr
dec
out
clc
cmp
sbb
loopne
add
movl
roll
sub
ds
adc
mov
insl
loopne
mov
and
popf
push
rorl
sti
and
push
adc
pop
pop
mov
add
xchg
fcoms
pop
jp
pushf
in
notb
jle
movsl
shll
nop
out
lds
lret
cmpsl
mov
lcall
gs
lock
mov
jle
mov
sbb
cmp
jno
sub
jns
mov
pop
cmpsb
repz
and
jns
cmp
jecxz
lcall
xor
add
sub
mov
into
bound
rcrb
jb
jl
jecxz
xchg
push
mov
outsb
inc
adc
scas
add
scas
ja
pop
pusha
shl
jmp
dec
sub
mov
loopne
fwait
or
mov
pop
push
imul
cmp
pop
jno
iret
jnp
in
xchg
aas
in
push
sbb
lret
lret
inc
shll
repnz
out
stc
rcl
icebp
int3
std
xchg
sub
pop
outsl
push
mov
add
rol
or
or
and
dec
scas
jo
xchg
or
xchg
inc
ja
loopne
cmp
cmp
ss
inc
push
xor
sbb
fistpll
mov
cwtl
jl
test
cmp
inc
pushf
pop
adc
orl
insl
or
lds
inc
cwtl
or
aad
pop
addl
xchg
xlat
adc
test
js
icebp
adc
cli
adc
clc
cs
in
xor
imul
sbb
jg
enter
loop
cmp
js
inc
push
mov
mov
cmp
pushf
mov
jno
mov
sahf
push
jae
mov
movsl
in
jge
ljmp
neg
or
pop
pop
das
aas
ljmp
jno
sbb
jbe
cmp
les
jae
popa
xorb
mov
es
mov
inc
jp
pop
fwait
setb
mov
mov
sbb
mov
sahf
xchg
sarb
arpl
dec
xor
cmp
sbb
sahf
add
in
fdivs
cli
les
jo
gs
fldenv
daa
test
ret
jge
inc
dec
out
sbb
add
sbb
xor
xchg
test
imul
iret
adc
push
xchg
jno
setae
std
push
jmp
int
mov
mov
or
daa
cmp
addl
stos
fadds
jbe
mov
sub
icebp
aad
mov
mov
in
clc
dec
arpl
lret
pop
pushl
push
push
test
stos
mov
mulb
out
outsb
jp
mov
mov
lock
mov
jg
sbb
in
in
adc
out
sub
popf
or
aad
adc
rclb
aad
inc
insl
fildll
jp
imul
inc
xor
enter
mov
sbb
leave
unpcklps
jle
jo
cmpsb
sbb
pop
loop
xchg
mov
mov
xor
adc
mov
ss
inc
adc
and
cmp
jae
adcb
and
mov
insb
adc
stos
dec
fidivrs
test
test
add
mov
fwait
add
loopne
and
inc
pop
cmp
xor
pop
lret
push
push
sbb
aaa
cmp
aad
es
mov
inc
lock
out
popa
push
dec
in
and
sub
popl
push
addl
insb
aas
mov
stos
inc
dec
sbb
xchg
insl
cmpsb
stc
cs
adc
data16
cwtl
ret
pop
push
mov
cmp
scas
popf
flds
dec
push
pop
test
scas
fwait
inc
imul
ds
dec
jl
mov
pop
faddp
outsb
test
divb
pop
and
test
ror
cs
test
lret
repnz
adcb
cs
je
insl
shlb
js
sub
cmp
test
push
fwait
sbb
push
hlt
rcr
cmp
std
lret
sbb
dec
cmp
jmp
pop
push
and
imul
dec
or
leave
loope
or
and
mulb
call
jae
mov
stc
daa
cmp
mov
gs
in
mov
mov
cltd
fisubs
xchg
lea
das
or
inc
push
lret
fwait
push
movb
sbb
mov
mov
inc
test
cwtl
icebp
mov
jo
push
rcrb
cld
mov
xchg
jecxz
mov
ljmp
les
lcall
or
in
fidivl
adc
test
les
shlb
out
adc
stos
lea
sbb
adc
add
push
mov
in
jne
rol
dec
cs
mov
sbb
hlt
pop
fisttpl
pop
adc
out
jnp
orl
iret
addr16
ljmp
sbb
push
ret
jmp
xchg
movsl
jns
das
dec
aas
outsl
xchg
popf
not
jg
mov
pop
xchg
and
mov
stos
inc
mov
cmpl
inc
add
and
xlat
int
sbb
adc
mov
dec
cmp
rorb
imul
mov
mov
inc
test
inc
in
xor
cmp
push
sbb
out
xchg
inc
sbb
xchg
adc
xor
pop
mov
push
hlt
push
push
sbb
pop
mov
dec
xor
andl
dec
ja
sub
sub
inc
test
shlb
or
mov
jbe
repnz
mov
scas
xchg
sub
orl
fcmovnbe
jmp
insb
fmull
inc
es
popf
frstor
aam
adc
rorl
dec
inc
lret
xchg
push
ljmp
inc
pop
lods
imul
adc
and
loop
xchg
sub
and
clc
in
mov
jle
das
mov
movsb
mov
mov
mov
cwtl
fwait
bound
out
pop
xchg
pop
inc
sub
movsl
jae
pop
subb
scas
inc
addr16
mov
imul
mov
pusha
out
mov
mov
sbb
fs
mov
pop
and
inc
and
pop
icebp
sbb
mov
cmp
nop
xchg
mov
xor
fdivr
rcl
aad
mov
fildll
cmp
les
fistl
sub
loope
cli
pop
cmpsb
ficomps
bound
lcall
sub
push
mov
xchg
cmpsb
pop
pop
pusha
stc
movsl
and
xchg
pop
add
adc
stc
xchg
sub
sbb
add
sub
add
adc
dec
fnstcw
outsl
adc
scas
jns
sbb
movsb
or
fnstsw
inc
and
sti
stos
xor
add
test
in
scas
mov
test
add
sub
out
adc
hlt
pop
imul
mov
cmc
push
data16
and
jno
movsb
push
cmp
push
leave
mov
cmp
mov
add
push
sub
jp
iret
push
mov
xchg
lock
lret
cltd
jl
mov
insl
insl
sub
adc
push
subl
or
imul
frstor
mov
gs
mov
loopne
sarl
leave
mov
repz
dec
dec
stc
testl
pop
daa
cld
pop
mov
mov
shrb
cltd
xor
cmc
xchg
movsb
hlt
bound
ret
fstpt
data16
clc
cmp
dec
and
mov
icebp
test
sbb
data16
push
xchg
enter
rcrl
dec
loop
scas
repnz
add
sti
bound
mov
mov
push
lock
push
outsb
pop
adc
sub
sbb
fmuls
mov
popl
lock
scas
in
pop
sub
mov
pop
xchg
pop
push
or
and
xorb
mov
dec
test
mov
loope
fidivrl
jl
xlat
lret
push
or
push
sub
lds
jnp
pusha
jl
mov
jl
aas
mov
or
pop
mov
sub
adc
jecxz
rorl
sarl
mov
add
loopne
jge
and
or
mov
sti
mov
add
pop
mov
push
jl
stos
xlat
jge
add
sbb
adc
mov
int
mov
lods
jno
push
and
std
push
pop
lahf
mov
mov
jbe
xchg
test
dec
cld
aad
mov
xor
inc
lret
lahf
adc
push
push
jns
enter
xor
loope
pushf
pop
aaa
add
scas
cltd
jge
inc
sbb
adc
inc
push
loope
es
test
inc
ret
xchg
adc
sti
xchg
cmp
sub
mov
out
xchg
insl
cmpsl
inc
mov
outsb
rcrl
mov
mov
pop
lods
test
fstl
dec
sub
sub
std
call
shlb
xchg
sub
xor
sahf
cli
mov
jmp
jp
lret
and
jmp
bound
lcall
push
add
inc
inc
mov
jge
stos
mov
mov
mov
dec
pushf
mov
inc
out
addr16
loope
xchg
adc
pop
aad
pop
pop
or
mov
shlb
dec
xor
mov
pop
or
roll
jno
or
xchg
leave
jmp
popa
jbe
xchg
cli
imulb
pushl
pop
imul
cmpsl
aam
cmp
call
loope
hlt
push
pop
jg
adc
repz
daa
pusha
and
sub
or
mov
sbb
push
mov
xlat
imul
scas
dec
fsubr
iret
mov
rclb
mov
imul
gs
fdiv
jns
mov
sub
nop/reserved
mov
jge
fwait
xchg
fs
in
mov
pushf
inc
popa
inc
aas
jmp
add
lods
das
push
outsl
movsb
push
mov
cmp
cmp
pop
jmp
stos
lds
dec
mov
hlt
mov
mov
pushf
daa
je
ret
mov
shl
cmp
jae
pop
fs
xor
mov
or
and
je
push
mov
jb
pusha
sub
mov
xchg
scas
mov
push
pop
es
pop
sti
sti
test
cltd
enter
dec
fsubl
xor
lcall
es
cmpb
xchg
mov
insb
sbb
sub
dec
inc
ja
pop
and
mov
mov
pop
enter
cld
pop
test
sahf
outsb
and
pop
cmp
sbb
push
loope
mov
aad
cs
adc
mov
push
jge
inc
roll
mov
add
sbb
je
fcoml
cmp
nop
dec
insl
out
pop
fisubl
stos
push
add
xor
dec
add
pop
jg
arpl
xchg
or
sbb
xchg
movsl
fsubs
roll
clc
arpl
adc
mov
mov
xchg
aam
lock
cmp
push
gs
pop
add
repnz
cmp
push
decl
push
pop
push
frstor
mov
xor
mov
ror
cmp
push
xor
popa
mov
xchg
fnstenv
sbb
xchg
std
or
sbb
or
hlt
dec
dec
jl
and
movsl
jo
shll
outsb
mov
sbb
or
adc
inc
xchg
xor
daa
popf
sub
rclb
mov
lods
movsb
mov
add
pop
mov
popf
cld
ja
pushf
outsl
push
inc
scas
cmp
mov
repz
xchg
cmp
leave
inc
cmpsb
jge
test
icebp
jbe
dec
push
lahf
sti
xor
pushf
test
std
mov
push
aad
cmp
push
pop
add
mull
cmpsb
pop
mov
push
push
adc
sub
push
sahf
push
push
mov
popa
pop
pop
leave
mov
lock
sub
ret
pop
cmp
jb
test
cmc
clc
int3
inc
pop
cmpl
push
mov
rclb
rclb
pusha
flds
iret
and
mov
lea
movb
mov
ret
and
jecxz
and
ss
mov
clc
cmp
pop
push
or
push
lods
mov
cmp
in
sub
mov
mov
mov
cwtl
out
sarb
in
pop
inc
xor
cltd
div
mov
or
inc
in
pop
push
rorb
das
ret
dec
ljmp
shrl
in
xchg
xchg
xor
ffree
loop
adc
mov
jne
push
add
clc
mov
loop
and
fisubl
sti
mov
minps
sub
pop
sbb
pop
in
dec
jecxz
test
mov
mov
cmp
adc
mov
cmp
sub
pop
jb
adc
fwait
call
popf
loopne
cmp
jno
mov
or
inc
jmp
nop
cltd
ljmp
lds
xor
fisubs
test
push
xor
int3
popf
out
andl
jmp
push
inc
xchg
or
mov
xor
int3
stc
inc
in
in
cltd
xchg
fistps
inc
adc
xor
in
xchg
inc
sbbl
scas
pop
xorl
mov
mov
mov
sub
fdivrs
xchg
lock
or
push
pop
mov
add
scas
sbb
repz
aaa
sahf
lds
repz
mov
lock
add
pop
scas
push
jno
mov
enter
sbb
or
sub
jno
jne
mov
out
outsl
aas
aam
adc
sub
fwait
mov
sub
pop
push
fstps
test
pop
clc
or
pop
daa
sti
push
scas
sub
in
jp
int
lcall
jmp
xor
out
add
push
cld
cwtl
into
mov
filds
lahf
adc
ja
mov
ljmp
sub
mov
sub
inc
das
xlat
pop
fldenv
inc
sbb
rep
ret
or
sub
xlat
jg
ljmp
aad
push
jno
mov
fsubrs
addr16
pop
shr
jecxz
sub
stos
xchg
sbb
roll
cmpsl
cmp
mov
xchg
ljmp
jbe
push
adc
jge
jae
arpl
repnz
xor
in
inc
aaa
inc
pushf
cwtl
mov
cmp
shll
mov
sbb
aaa
pushf
xchg
ljmp
test
fcomi
cli
mov
hlt
cli
stos
push
sbb
sub
dec
jp
pushf
push
xor
and
xchg
dec
adc
pusha
leave
or
ficompl
and
push
fwait
jne
and
add
enter
subps
int3
push
inc
rorl
mov
push
std
imul
das
mov
mov
jae
push
and
les
inc
jg
addr16
mov
mov
int
ret
nop
push
push
ja
xor
mov
or
xchg
loope
lock
push
jnp
icebp
gs
out
jne
inc
incl
inc
or
and
loop
mov
mov
jp
loop
jae
mov
mov
mov
xchg
test
mov
mov
inc
push
bnd
divl
xchg
jo
dec
bound
mov
cmp
add
xchg
mov
shrl
fldcw
hlt
adc
jnp
sub
imulb
movb
sbb
leave
nop
or
mov
add
int
test
mov
pop
inc
cmp
sbb
sub
enter
mov
xor
inc
and
pop
push
add
xor
adcl
xor
pop
pop
cmp
in
mov
dec
mov
stc
ret
xchg
cmc
jle
sub
add
rorl
xchg
sub
dec
out
pop
fisubl
scas
mov
iret
mov
cmovae
xchg
arpl
and
pushw
das
fcompl
pop
hlt
inc
push
leave
push
fsubs
pop
mov
mov
inc
sbb
adc
ret
push
xchg
cmp
jns
sbb
mov
add
movsl
js
dec
adc
inc
jb
std
and
jae
sub
jae
fs
dec
test
lock
inc
dec
add
addb
push
lahf
roll
rorl
xorl
pop
cmp
push
xorb
imul
enter
jmp
leave
inc
ljmp
icebp
test
mov
das
pop
cld
cmp
mov
icebp
icebp
fcompl
nop
cmp
mov
pop
xorb
mov
sbb
fs
mov
inc
cmpsb
sub
sub
mov
xlat
repnz
ret
in
clc
mov
jae
nop
push
sbb
xchg
adc
int3
sub
pop
xchg
xchg
mov
mov
cmpsl
add
sub
mov
mov
adc
iret
je
dec
xchg
outsl
repz
push
and
lea
xchg
mov
and
jne
sbb
push
and
sub
xlat
and
mov
stc
push
inc
sbb
fdivrp
aad
es
mov
in
sub
sub
xchg
mov
cmp
popf
stos
or
daa
loope
mov
stc
add
cwtl
cld
fcomp
ds
inc
or
pop
add
jb
sar
add
addb
mov
int3
mov
push
insb
aas
and
repnz
subps
and
sub
dec
mov
lock
shll
xor
fincstp
test
fs
add
inc
or
cmp
inc
mov
sbb
xchg
lds
xchg
adc
mov
cltd
push
mov
hlt
in
fisubrs
cmp
jne
push
or
cmp
push
in
and
and
adc
data16
mov
and
cld
orb
push
mov
arpl
call
cmc
add
int
push
jl
icebp
jne
pop
mov
inc
adcl
push
xchg
xchg
xor
cmpsb
sbbb
xor
sub
sub
sahf
pop
xchg
fmuls
inc
mov
pop
add
mov
mov
xchg
sub
sub
das
inc
decb
mov
enter
out
jnp
out
test
scas
lods
jae
inc
mov
nop
rolb
mov
lret
aas
cmp
xchg
addb
les
mov
xor
dec
sbb
mov
pop
repz
and
mov
sub
adc
pushf
adc
push
pop
daa
lods
or
mov
arpl
std
and
gs
mov
jge
jp
rorb
fimuls
call
mov
add
push
mov
daa
and
popa
push
fs
je
and
and
mov
mull
mov
pop
mov
dec
popf
das
sub
pop
sbb
push
xchg
daa
outsl
or
pop
and
jne
xchg
mov
xor
xchg
hlt
mov
xor
add
out
push
repz
out
fstpt
dec
xor
lcall
clc
cwtl
adc
ljmp
in
push
faddl
cmp
add
enter
jo
pop
dec
loope
cltd
cs
cmp
repnz
popa
xlat
in
lahf
mov
outsb
imul
leave
xchg
sub
sbb
cmp
fdecstp
jecxz
arpl
daa
inc
in
pop
lds
rcl
push
sbb
jl
ret
fldenv
jbe
jns
mov
dec
and
inc
xchg
out
inc
jne
mov
dec
dec
mov
sbb
divb
or
rcrl
mov
add
into
popf
sbb
inc
pusha
xchg
cmp
imul
cwtl
sahf
jg
inc
inc
sub
idiv
mov
fwait
cli
add
adc
rcrb
mov
in
cltd
lods
jnp
mov
shl
inc
jl
in
pop
jno
icebp
ror
adc
push
mov
dec
cwtl
sub
loopne
loope
dec
pop
cmpsl
push
pop
ficomps
les
dec
or
arpl
adc
adc
pop
sub
insl
ret
lock
pop
std
cld
popf
sarl
dec
push
mov
in
mov
jge
in
mov
scas
nop
imulb
fwait
ljmp
popf
fs
mov
xchg
rcll
js
loope
push
pop
mov
jns
sahf
xchg
xchg
sti
jge
push
fwait
pop
ret
arpl
xor
mov
or
test
rcll
int
cmpsb
sti
xchg
ss
testb
jbe
popa
jns
sub
adc
inc
lahf
fldenv
das
push
xchg
hlt
add
in
add
mov
cmp
xorl
cmpsb
and
loope
xor
gs
rol
out
mov
jb
xor
pop
out
stos
out
ror
or
loopne
push
mov
pop
loop
and
ret
jg
je
outsb
mov
jg
cmpsb
jo
pop
mov
mov
mov
mov
mov
ljmp
test
inc
adc
mov
imulb
pop
dec
push
push
in
push
xor
mov
push
rolb
and
vmwrite
cmp
cmpl
or
sbb
dec
push
cltd
icebp
mov
jns
ret
mov
clc
mov
push
sbb
or
es
sbb
rorb
jp
das
sahf
xor
sub
es
push
xor
enter
mov
dec
sub
xlat
fdiv
pop
leave
call
fprem1
daa
arpl
sub
ljmp
jecxz
repz
sub
inc
adc
mov
ja
mov
dec
dec
dec
sub
lock
ret
xor
mov
jnp
xor
insb
sub
xor
jp
test
hlt
pop
out
sub
jae
inc
clc
mov
iret
lahf
fsubr
add
or
and
popf
clc
ja
loope
mov
cmp
xchg
add
mov
and
jmp
xor
push
popa
repz
subb
daa
sbb
es
aaa
ror
sbb
jg
ret
fs
xchg
cltd
xor
mov
shlb
cmp
cmp
and
dec
dec
mov
test
not
in
scas
adc
lret
and
sahf
outsl
fldenv
jmp
xor
push
mov
test
ret
negl
cmpl
lret
adc
sub
and
mov
sbb
pusha
into
sahf
pop
sbb
test
rorb
cmpsl
mov
aas
in
and
jnp
cli
fiaddl
test
outsb
xchg
pop
mov
xchg
cli
push
imul
loopne
xor
inc
insb
add
fucom
das
sarl
std
mov
lea
call
pop
lods
rol
into
loop
pop
push
mov
jmp
repz
jae
sbb
mov
popa
xor
ja
lods
dec
mov
jo
js
mov
lods
movsl
pop
xchg
push
push
adc
push
or
push
jae
push
aaa
lock
pop
mov
add
pop
sbb
aam
jbe
addr16
clc
dec
jb
dec
and
sbb
mov
pop
daa
push
cmc
jae
call
loope
jmp
imul
sbb
iret
jge
jb
in
fwait
push
inc
rclb
je
mov
pusha
push
call
pop
sub
testl
sahf
pop
test
cld
adc
sub
ja
test
push
mov
fucomp
fsub
dec
jl
cmc
jge
out
xor
fldt
std
dec
dec
cmpsl
and
fisubrl
xchg
insb
xor
ljmp
int
dec
add
fsub
jle
test
sbb
or
and
lods
dec
scas
popa
or
jg
pop
xor
dec
sti
insl
mov
sbb
pushf
pop
mov
add
adc
jmp
das
pop
and
cmp
cmp
fildll
pop
lods
xchg
add
out
in
push
ret
fwait
or
and
stc
sbb
adc
add
js
rcrl
insl
fsubl
test
enter
sub
pop
jl
xchg
dec
daa
or
xchg
add
cmpsl
stos
call
dec
push
adc
pop
mov
pop
dec
fmull
mov
pop
rcll
jecxz
jne
pop
dec
and
add
xlat
push
cli
mov
xchg
test
xchg
inc
out
sbb
clc
jnp
lds
orb
xlat
push
in
or
out
push
adc
xchg
cmp
cli
inc
sbb
xor
fwait
lds
hlt
lcall
popf
loope
push
push
xchg
adc
scas
scas
lods
fisubs
jmp
mov
jecxz
push
mov
aad
cmp
mov
pop
idivl
loopne
and
aas
lods
nop
cmp
mov
or
outsl
icebp
xchg
into
jbe
inc
mov
and
mov
testl
xor
test
dec
sub
mov
xchg
out
ret
add
sub
mov
div
pop
jmp
lahf
idivl
je
test
lahf
mov
and
jbe
mov
inc
jb
lea
adc
jnp
scas
jno
push
jne
push
rcrb
or
mov
pop
addr16
cs
xchg
jb
sti
push
xor
fisttps
dec
xorl
leave
out
loopne
filds
mov
mov
repnz
pop
and
icebp
jp
shrl
aam
sub
inc
insl
dec
adc
jb
or
mov
fs
inc
mov
mov
test
adc
fsubrl
jbe
fdivs
insl
xor
daa
jb
fsubrl
rorl
xor
mov
or
adc
cli
out
add
cmc
pusha
mov
cmpsb
mov
jmp
cs
xchg
stc
jl
je
pop
loopne
sahf
dec
in
cmp
mov
cs
or
xor
pop
mov
pop
cmp
inc
or
and
adc
test
push
mov
std
adc
mov
jmp
mov
fnstsw
mov
inc
jno
sub
pop
add
out
je
mov
jnp
or
out
mov
es
insb
xor
repnz
roll
jg
stos
xchg
dec
sub
movsb
xchg
js
xchg
bound
xchg
xchg
jo
sbb
loopne
clc
adc
jl
dec
mull
popf
and
xchg
adcl
inc
push
push
push
adc
adc
out
outsb
mov
test
pop
das
dec
sbb
sub
xchg
cmpsb
das
sub
into
sub
dec
mov
lret
lret
enter
push
sti
loopne
and
loop
int3
arpl
mov
mov
loopne
pop
insb
add
lret
fwait
test
and
adc
in
xchg
fcomps
pop
dec
xchg
adc
and
jmp
mov
push
rclb
jae
fnstenv
push
pop
jp
ds
lock
popa
sbb
pusha
lods
in
xor
or
pop
xor
cmpsb
xor
dec
es
mov
dec
mov
xchg
mov
or
xorl
jecxz
fs
xchg
sahf
cld
es
add
xor
ficoml
int3
out
lock
les
enter
in
les
mov
cltd
or
sub
pop
je
cmp
sub
jl
loop
dec
out
clc
fucomi
and
loope
cmp
mov
lret
jae
adc
lds
adc
cwtl
inc
mov
movsb
xor
les
jl
fwait
jae
mov
jne
inc
pop
adc
lods
mov
jmp
inc
es
push
sub
push
outsl
outsl
and
call
test
add
stos
pop
sub
mov
mov
sar
xor
aad
inc
in
les
dec
arpl
lcall
adc
daa
sub
mov
mov
leave
fnstenv
pop
sahf
imul
ljmp
ja
adc
dec
loopne
mov
mov
fcmovnu
pop
lea
test
push
call
popa
jae
outsl
mov
mov
scas
xchg
addb
in
cmc
and
enter
fs
repz
pushf
or
xchg
fst
shll
das
arpl
popf
dec
pusha
jb
das
add
mov
sub
loopne
sub
loopne
hlt
shrl
dec
test
jnp
stos
dec
es
pop
push
sbb
jge
sahf
push
xlat
xor
popa
sbb
xchg
push
loopne
inc
mov
subb
iret
pop
fs
sub
jge
int
test
sbb
testl
pop
in
aas
aaa
loope
jo
into
mov
sbbl
xor
stc
hlt
aam
fwait
push
inc
pop
and
xor
inc
imul
sahf
adc
scas
ja
add
fucomi
fidivrs
movb
je
xchg
push
or
mov
jbe
and
in
add
fisubrs
lcall
clc
sti
test
loopne
cmp
xor
in
ss
dec
mov
push
jmp
push
lock
divl
or
cwtl
fisubl
xchg
out
sub
cmpsl
jns
cli
bound
mov
scas
pop
cmp
xorb
push
add
jg
or
push
adc
jmp
sti
push
xchg
lret
jg
jns
stos
add
popf
aad
and
lret
das
sub
cmp
push
pusha
jge
insl
fxch
pop
dec
jecxz
mov
cmp
je
out
stos
fsts
aad
repz
enter
add
pop
mov
shlb
cmpsb
test
lret
mov
scas
sbbl
mov
sub
popf
icebp
loop
and
push
fwait
adc
scas
in
xor
je
jle
mov
xchg
push
mov
xor
aam
cmp
mov
ja
mov
nop
rolb
sub
pop
pop
dec
mov
jne
pop
popa
lret
adc
inc
jno
test
push
loope
into
fs
sub
push
sub
hlt
cltd
add
mov
adc
out
gs
hlt
or
inc
pop
movsb
fsubs
jmp
pop
call
add
add
mov
push
rcl
lret
inc
adc
push
dec
into
lea
inc
push
adc
mov
xchg
jbe
outsl
jne
xchg
repz
add
cmp
jmp
jae
jl
fnstenv
mov
mov
bound
pop
cmpsb
pop
cmp
inc
cmp
add
inc
dec
dec
lea
insl
push
pushl
and
push
les
subl
adc
add
mov
fidivrs
and
scas
dec
or
mov
stos
out
jl
jno
add
shr
push
out
jle
push
bound
pop
bound
stos
mov
and
push
and
xchg
mov
or
cmc
mov
pop
das
sbb
cltd
dec
mov
or
fdivrs
sbb
mov
dec
cs
add
jne
stos
ret
fnstenv
jno
hlt
sbb
outsb
add
mov
leave
xchg
cld
or
ds
sbb
stc
xor
jecxz
pop
das
jge
sbb
push
insl
cli
jnp
cmp
xor
not
into
push
sbb
inc
push
xor
scas
pop
and
lock
sarl
lock
xchg
inc
add
lahf
outsb
sub
push
xor
mov
and
dec
pop
int3
or
mov
xor
sarb
push
ret
inc
jmp
lret
fwait
dec
pop
adc
and
jecxz
cmp
sub
out
xor
stc
sbb
stc
jnp
add
fwait
jns
cmp
ret
rcrb
dec
mov
lret
push
xchg
mov
and
xchg
lret
pop
xchg
mov
sbb
scas
or
lds
mov
test
mov
sahf
shlb
in
jle
loope
dec
out
out
mov
frstor
xchg
mov
dec
pusha
adc
push
clc
fimull
cmpsb
adc
xchg
sbb
jb
shlb
popf
mov
ret
jecxz
pop
push
ret
lea
inc
inc
dec
out
mov
xchg
inc
test
push
xor
repz
lds
adc
into
sub
xchg
call
sbb
xchg
lock
mov
sbbl
xchg
mov
push
xorb
xchg
adc
and
shll
int3
or
int3
or
jnp
rorb
xor
push
xor
aaa
jg
cld
ret
pop
iret
jmp
and
inc
jl
js
inc
es
enter
lds
push
or
cltd
int3
adc
sbb
imul
adc
bound
aas
jmp
test
sti
add
mov
fmul
std
test
out
mov
outsl
pop
mov
sub
push
push
dec
pop
xchg
mov
jns
jmp
clc
in
fildl
ret
cmp
in
sbbb
push
mov
fs
push
cld
push
test
stos
sub
pop
xor
jle
mov
ja
sbb
in
pop
xchg
lods
sbbl
dec
notl
inc
sub
mov
push
cld
popf
adc
and
arpl
xor
flds
dec
push
lds
and
xor
hlt
shll
cwtl
push
nop
lock
xchg
cmp
shlb
sub
cltd
rorb
fists
test
int
sti
fmuls
or
pop
sbb
lret
lahf
adc
or
and
xchg
ja
jmp
sbb
rcrb
and
leave
dec
sbb
ret
gs
mov
mov
xchg
les
iret
or
push
mov
lods
mov
js
xor
dec
repz
mov
scas
jge
enter
xchg
adc
add
sahf
test
orb
and
jno
jnp
in
jle
mov
imul
cmp
aam
es
and
cmp
pusha
aam
fwait
sarb
xlat
dec
out
or
jp
sub
sbb
sub
sub
jle
pop
mov
enter
mov
pop
outsb
test
jns
dec
fldt
dec
mov
cmovno
mov
or
icebp
adc
loope
mov
loope
mov
out
div
push
lret
test
bound
lcall
sbbl
pop
inc
cmpsb
adc
cmp
loopne
enter
pop
sti
fwait
dec
outsb
xor
xlat
cmp
adcb
xor
pop
and
js
out
jge
sbb
pop
jmp
or
push
or
arpl
fstl
in
stos
or
adc
push
adc
xchg
jmp
add
sub
repz
iret
sub
or
and
sub
mov
sbb
inc
movsl
or
clc
addr16
jns
pop
orb
cmp
xor
fildl
clc
repz
pop
jns
es
pop
pop
pop
jbe
ja
cwtl
rorl
pop
add
mov
test
xor
cmp
or
xor
push
pop
jb
mov
fsubrp
addr16
lahf
sub
aam
jo
push
shll
in
pusha
cld
or
push
xor
in
adc
mov
inc
rol
mov
repz
mov
fadds
lock
xor
cld
scas
std
jge
add
jb
sub
daa
jns
adc
adc
mov
cmp
es
in
mov
loope
in
pop
dec
jg
push
and
les
test
in
pop
lods
adc
leave
mov
push
shl
cld
cwtl
negl
mov
popf
js
add
cs
jp
loopne
pop
jg
mov
sub
cwtl
dec
gs
cs
sbb
mov
stos
fs
pop
cmp
das
xor
mov
hlt
sbb
bound
aam
loop
out
xchg
in
out
sbb
enter
fdivrl
jmp
add
pop
or
shl
ss
daa
inc
subb
or
movsl
fldcw
fisttpl
mov
cmp
enter
mov
shlb
sbb
push
test
outsl
adc
xor
or
mov
xor
cld
add
sub
lcall
adc
jge
sbb
std
xchg
xlat
push
push
lods
daa
pop
pop
xor
adc
mov
push
xor
pop
sbb
cld
cs
in
push
pushf
stc
mov
pop
icebp
jg
push
fldcw
and
nop
or
adc
sbb
jge
mov
repnz
sub
adcl
fldl
push
gs
jle
cmp
adc
fldl
insb
jp
scas
popa
pop
pop
mov
std
loope
jno
mov
mov
mov
or
mov
lds
xchg
jge
rcrb
cmpsb
push
insb
pop
test
mov
rorb
shl
xchg
dec
je
stos
sti
fimull
test
pop
jp
pop
out
orl
aaa
cltd
xchg
xchg
inc
sahf
fisttps
leave
mov
cltd
bound
rol
xchg
fnstenv
lock
sahf
fldl
jmp
jb
xchg
ret
ficoml
stc
rolb
das
inc
and
imul
push
xchg
inc
in
lret
je
jbe
pusha
movsl
pop
or
loopne
push
push
mov
adc
insb
inc
jbe
jnp
pop
push
sbb
or
mov
xor
push
addr16
push
push
leave
shlb
lret
pop
hlt
push
pop
arpl
icebp
and
lea
dec
aaa
jle
xchg
add
bound
rcrl
lods
dec
and
lahf
stos
jg
dec
inc
loopne
pop
and
jl
rclb
mov
icebp
stos
mov
xor
int3
mov
je
mov
out
jmp
iret
adc
jle
dec
test
add
in
sub
das
adc
daa
xchg
and
outsl
pop
push
sub
int
insl
cwtl
xchg
repnz
mov
sub
icebp
je
or
rcrl
lret
enter
xchg
jns
and
shrl
int
out
inc
into
pop
pop
jge
repnz
lcall
push
and
mul
and
and
cmc
out
das
filds
stos
cmp
inc
aas
mov
xor
lods
push
arpl
sarl
or
movsl
pushf
cmp
repnz
lret
sahf
cmpsl
test
iret
push
cmp
icebp
shll
xchg
mov
jge
adc
inc
xchg
push
gs
or
out
xor
arpl
and
adc
daa
arpl
cmpb
into
stc
dec
sarb
sub
xor
cmp
jbe
mov
adc
inc
cld
or
mov
es
pushf
xchg
lea
in
adc
mov
nop
cmc
ss
mov
sti
iret
sahf
mov
in
jp
jp
aam
jns
mov
adc
add
cs
xchg
shlb
daa
rcrl
stos
stos
sub
mov
imul
push
push
dec
in
movsl
pop
inc
pop
push
inc
mov
mov
add
cmp
shl
mov
mov
sub
ficoml
push
jb
or
outsl
stc
jl
ljmp
push
mov
jmp
adc
mov
fwait
cmp
aas
add
add
out
cmpsb
pop
hlt
in
xchg
or
jge
in
test
popf
inc
daa
mov
mov
mov
test
jle
sbb
fisttps
loope
rol
jecxz
pushf
arpl
repnz
add
mov
jecxz
xchg
and
push
clc
sbb
int3
sub
fwait
cmpsl
leave
andl
sbb
hlt
inc
dec
test
lahf
movsl
or
dec
fidivl
sarb
xchg
cmp
loope
cwtl
push
loope
gs
push
pop
mov
js
dec
jmp
shlb
jg
popf
jg
lahf
lcall
aaa
sbb
cmc
sbb
aas
stos
push
xchg
cli
xlat
shl
adc
dec
add
in
imul
addr16
push
or
popf
xchg
xor
mov
jge
jne
jmp
mov
adc
pop
test
leave
sbb
notb
xorb
cmp
or
jo
add
and
inc
adcb
in
ljmp
test
pushf
mov
add
dec
sbb
cmp
shll
insb
enter
rclb
repz
lret
adc
lahf
pop
xchg
adc
mov
sbb
pop
mov
jno
mov
jg
cwtl
pop
mov
jle
outsb
hlt
fdiv
mov
push
sbb
xor
sub
xchg
scas
xor
into
cmpsb
push
out
nop
fcompl
jp
loopne
push
xchg
pop
fistpll
mull
das
into
stos
jno
sbb
inc
in
inc
fbstp
xlat
sub
inc
pop
mov
sbb
imul
mov
out
sub
outsl
dec
repz
aaa
dec
jecxz
add
jno
xchg
mov
cmp
cltd
mov
pop
lret
shrl
push
lret
or
ss
insb
das
xor
mov
imul
nopl
in
sub
add
stos
rcrb
or
pushf
xor
and
pop
inc
dec
shlb
sahf
or
sub
jp
fldenv
push
or
pop
or
out
call
frstor
inc
test
push
mov
sub
test
scas
or
into
mov
jno
jo
adc
lds
cmc
xchg
in
nop
sub
mov
in
scas
out
testb
adc
mov
scas
cmpsb
xchg
sbb
add
dec
jle
pop
jl
js
push
sub
mov
or
gs
dec
popf
popa
mov
add
cli
and
lock
jb
sub
in
daa
adc
mov
adc
push
iret
cmpsb
testl
sarl
sub
lret
mov
and
xchg
xchg
je
pop
inc
in
rcrl
push
mov
ret
jns
xchg
inc
push
sbb
popf
adc
test
pop
or
xor
adc
leave
mov
adc
cmp
fisubs
lock
mov
mov
add
negl
sub
daa
rcll
mov
sub
mov
scas
call
mov
insb
or
or
imul
test
push
aad
clc
sub
xchg
in
loopne
mov
ret
adc
stc
and
jge
sbb
mov
sbb
jae
fsubr
popa
sub
test
call
mov
lcall
cmp
mov
addb
cmpsl
call
cmp
in
out
mov
sahf
or
leave
addr16
sub
popl
mov
daa
and
cltd
mov
cmp
aam
sti
adc
xchg
cmp
les
pop
les
stc
movsb
cmp
jle
incb
sete
cmp
enter
cmp
push
es
pop
or
jnp
inc
xchg
mov
xor
jg
xor
jl
or
test
in
fwait
mov
jns
or
mov
loope
lock
into
ljmp
jmp
jmp
inc
popf
mov
cltd
mull
scas
jno
mov
fistpl
inc
nop
cltd
fcmovbe
cmpsb
jo
enter
leave
jnp
cld
jecxz
pop
inc
inc
mov
lds
rolb
push
mov
mov
pusha
ror
in
xchg
ja
pop
fistl
cmpsb
push
in
jo
or
je
enter
and
pop
mov
daa
fisubrs
jmp
fwait
cmc
and
mov
xchg
insb
jns
shrb
xchg
cltd
sbb
sub
dec
sub
test
notl
mov
mov
pop
into
mov
pop
inc
inc
push
mov
loope
and
ret
call
ret
cmp
adc
aad
cmp
addl
in
mov
std
ret
mov
push
and
mov
insb
in
sbb
jb
repnz
stos
out
inc
mov
gs
aam
sub
fildll
jecxz
add
insb
push
and
sti
icebp
jae
jp
iret
ficoms
pop
xor
mov
stos
data16
dec
rorb
pop
sbb
rclb
dec
loop
inc
pop
movsl
mov
lods
mov
mov
xchg
data16
inc
ss
test
cmc
scas
jbe
mov
dec
and
shll
mov
sub
lods
call
dec
xchg
cwtl
cli
xor
cld
cmp
scas
jnp
adc
imul
and
out
in
adc
jno
je
and
mov
pop
xor
xorb
packsswb
mov
push
mov
sahf
sbb
jmp
scas
bound
int
pop
aaa
or
ficompl
call
xchg
xchg
mov
xor
push
dec
imul
jmp
or
ficomps
xor
mov
inc
or
mov
mov
dec
cwtl
cli
mov
cmp
mov
push
mov
jae
andl
jmp
les
xchg
adc
loopne
or
aam
push
or
adc
cli
mov
fstpt
xchg
push
enter
js
aaa
bound
imul
and
and
dec
addr16
xchg
add
stos
dec
cmp
push
inc
push
xor
xchg
add
addr16
mov
insb
test
or
push
int
jg
lret
and
aas
pop
pop
mov
dec
sbb
push
push
sbb
and
cmp
and
ja
dec
cltd
gs
push
out
loop
cmc
outsb
imul
lret
sbb
adc
sbb
inc
mov
pop
push
repnz
push
xor
push
pop
arpl
scas
iret
loopne
cmp
and
leave
sbb
dec
adc
jnp
lods
out
pop
in
jge
inc
xchg
notb
jl
xchg
cmp
add
test
pop
icebp
cmpsb
out
sub
dec
pop
lcall
scas
movaps
jne
xor
jmp
scas
loopne
adc
aaa
lods
mov
pop
inc
sub
into
cli
xlat
mov
jmp
push
aas
movsl
into
ljmp
cmpsb
xchg
xchg
aas
lret
in
fdivrs
loopne
adc
mov
out
testl
ja
jbe
es
cmp
mov
dec
mov
idivl
mov
pop
xchg
outsb
xchg
mov
pop
clc
mov
pusha
leave
int
arpl
jecxz
fs
mov
ds
inc
movsb
lock
daa
dec
enter
enter
sub
bound
mov
pop
mov
test
or
adc
mov
lcall
pop
cltd
mov
fbld
pushf
dec
nop
dec
mov
and
jle
sti
in
pop
dec
push
lcall
dec
push
nop
inc
adc
mov
lret
rcl
lock
jle
add
mov
scas
fstpl
sahf
je
mov
push
xor
fidivrs
pop
ljmp
mov
bound
sub
mov
or
xchg
push
fsubs
sbb
xchg
push
int3
in
inc
jmp
inc
cmp
xor
inc
jge
popf
jmp
fildll
and
jecxz
sbb
push
orw
mov
dec
jne
and
sti
cld
fwait
push
out
dec
fstl
loope
xchg
out
cmp
in
jb
push
std
lea
outsb
inc
test
mov
push
call
jae
mov
mov
outsb
inc
xor
mov
xchg
adc
xchg
or
sub
out
adcl
mov
out
mov
rclb
negb
sub
and
lock
jle
mov
xor
jmp
dec
and
mov
mov
mov
adc
push
filds
mov
mov
enter
xor
int
inc
adc
pop
lea
cmp
push
aad
repz
aam
jge
mul
cmpsl
mov
lods
rcl
cltd
fcompl
in
xchg
or
cmc
fstpt
jns
pusha
lock
ret
and
rcll
inc
sub
cmp
adcb
ds
mov
mov
stos
cwtl
add
cmpsb
or
fstl
lods
or
cli
pop
lea
aam
xchg
clc
daa
es
mulb
lods
loope
mov
andl
xor
mov
push
cmp
mov
xor
sub
orb
mov
rcll
jmp
mov
xchg
cli
and
pop
iret
and
or
sbb
aad
into
cwtl
fsubrs
in
daa
lock
insb
sub
lock
aad
mov
sbb
sbb
inc
mov
sbb
mov
test
cmp
sub
sub
or
push
in
pop
mov
mov
xchg
je
lea
inc
mov
inc
ja
jo
mov
mov
push
and
add
dec
outsl
xor
or
push
xor
dec
cmp
out
adc
sub
call
or
cmc
orb
or
popf
mov
ds
xchg
in
fs
in
jb
fldenv
mov
mov
inc
lcall
pop
push
fldcw
or
sti
mov
inc
aam
push
outsb
enter
and
out
push
mov
push
repz
adc
push
xchg
cld
ljmp
push
das
cli
push
pop
cmp
xchg
ja
ss
sbb
push
mull
adc
jg
xor
stos
xor
pop
pop
fstl
int
add
jae
cmp
push
fsub
cmp
repz
js
sbb
rorb
mov
repz
out
inc
shlb
dec
jno
or
mov
cmpsl
fldt
cli
in
inc
pop
jo
icebp
xchg
xchg
mov
fnstsw
xchg
sub
push
adc
dec
sub
or
xchg
lea
scas
xor
cmp
aaa
stos
lock
mov
repnz
movsl
adc
scas
adcb
push
lock
xchg
dec
stos
fcmovu
xor
dec
cmpsl
xor
xlat
mov
fsubrp
sub
enter
add
fisubrl
adc
mov
gs
fwait
sti
cmpsl
cld
inc
iret
sub
rclb
notl
xor
fmull
pushf
mov
stos
push
aad
stos
mov
out
xor
sahf
inc
shll
insl
mov
into
push
mov
fidivrs
and
js
xor
jns
adc
scas
das
pop
in
pop
jns
out
leave
fidivrl
adc
stos
mov
jmp
pop
mov
scas
iret
mov
add
mov
push
mov
adc
mov
jle
xchg
dec
and
js
push
mov
test
outsb
cmc
data16
frstor
imul
test
outsl
je
fldenv
dec
push
lods
add
inc
idivl
arpl
fidivrs
cmpb
push
call
cmpl
imul
notl
rol
hlt
fildll
jp
out
fwait
mov
and
int3
mov
ds
pusha
push
push
jl
xor
mov
lret
add
outsb
pop
insb
and
shll
inc
inc
mov
repz
aaa
jp
sarl
push
inc
dec
stc
lds
cmp
add
add
xor
es
mov
xor
shl
out
mov
sbb
xor
fsubrs
xchg
mov
rcrl
aaa
dec
sub
pop
dec
dec
fisubl
es
xor
and
or
xchg
add
cwtl
xlat
ficoml
cmpl
and
fbstp
aam
or
loopne
gs
mov
dec
cmp
cmp
sbb
add
and
aas
xchg
loope
jae
outsb
bound
xchg
jge
mov
mov
loopne
jge
ljmp
sbb
jns
pop
pop
orl
ret
cld
push
test
ljmp
das
fsubrl
push
repz
mov
push
je
sbb
out
xchg
clc
lcall
and
es
fisttpl
xchg
rcll
dec
cmp
fbstp
test
mov
test
pushf
imul
push
adc
divl
jne
mov
iret
aaa
sti
mov
jg
pushf
sub
fs
repnz
sbb
xchg
cli
mov
adc
scas
add
xchg
cmpsl
pusha
xchg
sarb
mov
sub
or
mov
insb
mov
stc
pop
arpl
scas
shrl
std
repnz
xrelease
inc
dec
fbld
jge
inc
pop
insb
loope
insl
lahf
in
dec
ss
push
mov
les
dec
xchg
jp
lret
jae
adc
sub
loopne
aas
mov
lods
mov
jno
dec
fcmove
cmp
inc
fmull
call
jecxz
lret
lahf
jp
mov
mov
sbb
pop
cmp
fildl
sarl
or
jle
sbb
mov
pop
mov
xor
popa
nop
mov
cwtl
lods
mov
daa
leave
rorb
bound
xchg
sub
cmp
test
inc
sub
mov
dec
pop
stos
jg
das
push
mov
or
adc
mov
adc
pop
xchg
jae
stc
push
jp
enter
fs
dec
push
mov
xchg
sub
inc
imul
sbb
push
int3
add
mov
lea
je
mov
leave
adc
push
or
mov
inc
pushf
mov
xchg
into
push
iret
xor
add
outsl
or
fcomi
mov
dec
push
push
mov
pop
test
sahf
and
sub
test
jne
icebp
pop
test
jb
popl
inc
loop
push
sub
pop
cld
std
repz
or
jne
add
jb
outsb
pop
xor
bound
arpl
enter
dec
xchg
jle
cltd
adc
add
sti
iret
cmp
inc
xor
sub
jp
in
add
in
lret
sub
mov
stos
mov
add
inc
pop
push
test
lcall
cmc
dec
dec
and
rcrb
popa
sbb
outsl
and
jle
popf
lods
cmp
jge
mov
or
pop
or
lret
es
dec
aad
fnsave
adc
mov
cmpsb
ljmp
push
repnz
mov
test
cmp
decl
sarl
fbstp
or
pop
inc
mov
xor
mov
pop
lcall
in
add
xchg
test
mov
sub
stos
aaa
inc
movsl
and
loopne
push
push
repz
repz
push
xchg
sbb
jl
les
popf
negb
addl
jge
push
dec
fs
adc
test
cmp
lahf
loop
add
push
xor
stos
mov
pushf
mov
mov
jns
xor
adc
rcr
xchg
cmp
test
xorb
mov
and
xchg
jnp
push
insb
loop
int3
jno
inc
mov
add
popf
lahf
inc
adc
nop
call
mov
data16
jg
das
cmpsb
sbb
imul
cld
bound
cmp
pushf
xor
add
dec
aad
mov
pushf
mov
sub
int
push
inc
xor
filds
js,pn
xor
shl
mov
in
mov
into
pop
push
movsl
rolb
xchg
add
push
push
or
jns
fldt
sti
fsubrl
sarb
push
addr16
adc
sbb
enter
lods
pop
cltd
je
push
inc
mov
and
adc
enter
lahf
sbb
pop
lods
les
data16
jp
pusha
sbb
cmp
aam
stc
or
xor
mov
enter
or
pusha
inc
mov
sbb
mov
scas
add
cmp
lahf
dec
pop
push
mov
stos
push
dec
stc
lret
inc
dec
inc
ss
adcb
aaa
jne
add
push
mov
icebp
insb
cld
sub
imul
jne
push
lea
mov
and
or
ljmp
xor
out
sahf
push
xor
jno
dec
mov
imull
cmp
fbstp
nop
mov
pop
adc
insb
test
mov
mov
push
inc
sub
xchg
cmc
mov
in
inc
out
jno
or
outsb
call
sub
movsb
std
jb
and
fwait
mov
int
sub
jb
out
jbe
scas
movsl
gs
jmp
adc
sbb
mov
out
stos
xor
mov
inc
or
dec
insl
js
repz
sub
aaa
push
inc
push
mov
lret
add
and
aam
mov
pop
hlt
and
pop
push
sahf
pop
movsb
mov
sarl
mov
pop
pop
xor
mov
jl
pop
and
cltd
loope
int3
rorb
push
or
frstor
add
das
bound
repz
or
clc
ret
fistpl
ss
xor
xchg
sbb
add
push
fiadds
aam
cld
and
popa
or
out
dec
xchg
jo
xor
imul
inc
jns
pusha
adc
imul
lret
add
pusha
je
ror
scas
pop
outsb
push
xchg
popw
inc
pop
xor
in
jno
sbb
lret
inc
scas
ret
lods
clc
cli
cltd
std
dec
out
pop
into
fistpll
push
leave
push
popa
pop
inc
jmp
adc
mov
mov
cmc
gs
push
jp
dec
addl
jmp
das
cmp
dec
js
jecxz
inc
ret
mov
mov
and
js
nop
sub
stos
mov
movsl
or
gs
test
push
inc
mov
das
xchg
nop
es
xchg
or
ror
mov
popa
jns
adc
pop
mov
and
data16
inc
dec
jl
fwait
mov
and
or
ror
cmpsb
dec
lods
imul
cmpsl
xlat
divb
int3
loop
addl
dec
ljmp
pushl
inc
pop
into
fsubrs
idivb
xchg
mov
mov
push
das
arpl
push
daa
mov
and
push
cmpsl
inc
jmp
popf
idiv
aad
xchg
mov
and
mov
imul
dec
test
outsb
fsubrs
f2xm1
pop
inc
pushf
sub
pop
xor
jge
out
es
and
inc
add
dec
repnz
mov
sub
mov
jbe
and
mov
loopne
negl
inc
mul
xchg
cmpsb
in
and
push
fldl
mov
pop
ret
pop
xor
jno
stos
subb
repnz
sub
leave
movsb
jl
mov
stc
fisubl
fisubs
or
mov
fwait
iret
sti
mov
aaa
pop
in
das
addr16
lret
roll
add
fwait
inc
jb
hlt
mov
adc
pop
sbb
mov
mov
sub
ja
gs
mov
in
adc
push
pop
ja
xchg
mov
in
mov
push
fmull
out
sahf
imulb
pop
movq
subl
xor
fs
cli
insl
add
dec
jbe
mov
pop
das
lret
pop
xchg
out
xchg
sahf
inc
xor
pop
mov
lcall
outsl
adc
stc
push
je
popf
dec
jno,pn
mov
and
pop
cvtdq2ps
sbb
add
adc
and
ja
jle
fstpt
ror
std
sbb
push
push
jl
scas
mov
push
pop
inc
xchg
int
ja
push
mov
mov
inc
mov
arpl
repz
into
sti
jge
mov
pop
dec
sbb
cmp
repz
repnz
xchg
xchg
jne
jne
add
leave
pop
pop
insb
out
imul
mov
push
out
jge
test
cmp
or
xchg
filds
cmp
mov
or
jmp
mov
adc
int3
jno
sub
add
mov
popf
cmp
pop
bound
sbb
popa
stc
rclb
adc
dec
push
clc
mov
out
imul
jbe
push
and
sub
lret
pop
xchg
pop
inc
cltd
in
enter
mov
xor
lret
push
sub
hlt
jb
pushf
outsb
cmpb
femms
cmpsb
pusha
push
sbb
cmp
fmull
or
inc
fdivl
insl
sub
mov
and
aad
loopne
add
xchg
jo
insb
iret
rclb
popa
jbe
push
enter
test
fidivrl
mov
xor
ret
jae
xor
out
fsubrs
cmp
in
incb
xchg
jle
jmpw
jmp
mov
add
rolb
xor
mov
add
mov
fisubl
mov
hlt
xchg
lret
out
ficomps
inc
mov
call
mov
ljmp
ret
push
mov
mov
xor
hlt
ret
mov
cmc
imul
push
fbld
fisttpll
dec
iret
in
aad
mov
or
sarl
add
xor
je
out
lods
mov
mov
stc
xchg
movsb
push
add
int
push
fcompl
movsb
insl
mov
cmovae
inc
jge
rcll
push
push
repnz
out
aam
cmp
lret
sbb
fwait
hlt
fwait
sti
pop
nop
jl
dec
mov
repz
test
xor
mov
sub
sti
rclb
scas
mov
pushf
cmp
xor
mov
rol
add
mov
out
divl
xlat
movsl
sub
jle
adc
int3
lock
das
dec
fcomi
aas
or
cmp
xchg
mov
sub
jbe
mov
and
cld
push
lea
pop
xchg
pop
cltd
lahf
mov
sbb
rol
xchg
mov
xchg
inc
adc
push
sbbl
imul
push
adc
mov
mov
ret
imul
cli
aaa
push
push
lock
cmp
and
cmp
jae
arpl
dec
pop
je
test
add
jecxz
pop
pop
push
pop
popf
mov
push
sub
out
mov
push
aas
int3
ret
ds
mov
adc
movsl
shl
ret
fistpll
sub
ret
push
cmp
add
adcb
mov
push
cwtl
lods
add
fstpl
lods
je
inc
ficompl
adc
and
xor
xchg
movsb
test
ficompl
xor
mov
and
mov
punpckhwd
jno
xor
aas
mov
lahf
nop
jns
lods
push
cmp
and
inc
testb
xchg
imul
ret
repnz
into
mov
or
sub
adc
mov
fisubrl
jno
pop
push
sahf
fstl
jmp
xor
pop
addr16
mov
shrb
jecxz
insl
notl
out
or
out
repz
daa
and
ss
or
xor
les
stos
ret
out
cmpsb
mov
push
fsubp
push
and
aad
lcall
cmp
pop
dec
push
dec
pop
mov
out
ja
mov
fsubr
leave
icebp
std
mov
daa
add
jno
js
xor
notl
lds
push
xor
sub
repz
or
mov
sub
and
andl
add
jmp
xchg
mov
in
mov
sbb
sbb
leave
ret
cmp
adc
xor
cmp
xor
cmp
shrb
dec
fcoml
ret
iret
push
mov
jo
sub
cmp
imul
sub
cmp
jge
data16
add
and
and
aaa
cmp
out
jmp
inc
scas
sahf
or
and
mov
mov
fimuls
xor
fisubs
sub
in
xor
cmp
lret
mov
sub
or
loopne
push
mov
out
add
or
pop
sub
sub
inc
sub
popf
mov
or
lahf
sarl
ret
pop
fs
jb
cmp
outsl
mov
and
enter
adc
into
ret
push
data16
xchg
add
xor
inc
nop
arpl
pop
mov
data16
cld
cmc
and
xor
int3
xor
test
push
sub
movsl
dec
push
cmc
fcomps
repnz
xor
cs
iret
jns
rol
fisttpll
xchg
xchg
test
subl
jb
lods
and
pop
jno
jne
dec
or
sahf
and
push
push
dec
aad
adc
mov
inc
bound
xorl
mov
pop
fdivrs
adc
xchg
jp
test
nop
stos
mov
out
into
sbb
pusha
loope
xlat
popf
cwtl
movsl
lock
mov
cld
loop
or
and
test
jns
xor
fsubrl
mov
sub
aas
cs
clc
mov
mov
pop
inc
and
rcll
dec
mov
icebp
mov
fwait
inc
xchg
dec
jne
ja
cmp
push
fcmovnu
imul
cmp
inc
pushf
xor
adc
mov
sbb
xchg
ds
ljmp
stos
test
in
pop
lock
inc
mov
xor
mov
push
mov
aaa
mov
push
and
sub
pop
push
call
and
fstpt
jns
mov
arpl
fstcw
data16
push
jge
jne
in
lret
push
add
pop
xor
mov
adc
ret
mov
jle
call
std
push
mov
jns
cmp
jb
outsb
mov
jmp
add
sbb
sbb
leave
rcrl
xor
mov
movb
pop
or
adc
mov
test
imul
enter
sub
cld
adc
adc
jno
xlat
xchg
dec
orb
stc
and
in
jg
ja
scas
test
fwait
nop
cs
lahf
sbb
pop
xchg
icebp
push
adc
pop
and
dec
popa
outsl
in
jno
movsl
cmp
cs
dec
rcll
xor
les
cmpsl
sarb
in
inc
into
sti
cmp
out
fmul
mov
jbe
idivl
popf
pop
fsubl
or
iret
pop
pop
gs
outsb
and
pop
adc
test
outsb
repnz
push
imul
inc
jg
andb
jb
push
fists
in
lret
jl
fnstenv
dec
dec
ret
flds
addr16
dec
cs
jg
inc
aad
lret
daa
mov
iret
cmpsb
sbb
ret
lahf
fstp
out
loop
adc
mov
cmp
dec
push
loopne
and
jb
int3
js
inc
jge
sbb
push
loope
int
adc
add
sbb
pop
jbe
jnp
jne
jmp
dec
ficoml
xchg
adc
in
pushf
xor
mov
mov
add
enterw
inc
xchg
cli
push
inc
jns
lcall
and
mov
nop
nop
enter
shll
roll
shrb
and
jne
add
es
xor
push
movsl
fcompl
or
pushf
out
dec
sbb
iret
pop
mov
mov
fadd
and
fsubs
mov
inc
xlat
pop
pop
iret
cltd
popf
arpl
inc
test
and
jg
adc
loop
add
fwait
jg
or
clc
gs
adc
imul
lods
dec
fsub
insl
rcrb
in
mov
fwait
test
add
js
xchg
das
mov
sub
cmpb
pop
out
and
fdiv
pop
push
mov
xor
js
into
mov
mov
and
jmp
movsb
jmp
dec
jmp
push
jl
mov
push
inc
sarl
inc
mov
pop
mov
mov
adc
or
push
arpl
jae
sbb
arpl
pop
pop
xchg
lds
pop
test
mov
mov
or
mov
or
subl
cltd
mov
inc
pop
sub
scas
cmp
cwtl
jne
adc
lret
and
sbb
mov
insb
mov
scas
xorb
stc
sbb
add
fisttpl
ficoms
shl
pop
push
loopne
stc
cli
pop
mov
push
sub
imul
jle
enter
pop
adc
jge
hlt
mov
int
stc
xor
outsl
gs
in
pusha
movsl
notl
into
pop
and
mov
mov
cmc
ret
outsb
mov
add
outsb
mov
mov
loop
stos
adc
mov
aas
sub
imulb
cmpsl
loop
lock
adc
ljmp
loopne
addr16
mov
ljmp
cld
or
andb
xor
xchg
xchg
test
or
jne
mov
sub
dec
mov
sbb
add
fildll
and
pop
xor
or
push
cmp
cmp
in
pop
inc
divl
jmp
lods
aaa
inc
adc
ljmp
ss
xchg
dec
adc
loope
pop
bound
pop
les
inc
inc
gs
stc
fldcw
cmp
mov
jns
fidivs
dec
pushf
sub
and
nop
pop
jbe
inc
and
jnp
aam
push
xor
stos
inc
aas
push
mov
cmpsb
sbb
bound
test
or
ljmp
xor
adc
jbe
in
push
cmp
mov
xchg
mov
fdivr
and
push
fldl
mov
dec
out
jb
fisttpl
mov
sub
lock
addr16
or
lods
arpl
mov
imul
mov
or
ljmp
cmp
jne
cwtl
pusha
imul
pusha
subl
out
push
mov
jbe
test
in
cmp
pop
push
add
xorl
adc
mov
pop
mov
sub
jnp
push
add
push
rcrl
inc
repz
fistl
xchg
int3
inc
lock
rcll
cld
loopne
cmc
jmp
insl
outsl
xor
or
cmp
dec
rcr
jecxz
pop
jge
dec
shll
gs
popf
jecxz
into
mov
sub
repz
or
stos
adcl
insl
push
iret
dec
cmc
cmp
repnz
sub
lods
mov
inc
push
mov
cmp
aas
mov
stc
fistpll
pusha
sub
outsl
insb
inc
ljmp
insl
cmc
fcoml
cmovnp
jno
lods
rorl
add
pop
cmp
repnz
outsl
mov
mov
jle
mov
mov
push
pop
inc
aam
inc
and
fmuls
ja
imul
int3
fldenv
or
and
sub
dec
into
int3
test
mov
or
hlt
mov
jp
in
ret
int3
int
loopne
pop
mov
xchg
or
adc
mov
pop
push
or
into
and
and
outsb
mov
jmp
rcr
sbb
add
jno
repz
inc
pop
in
out
mov
ror
aad
xlat
ljmp
test
shlb
jp
sub
pusha
mov
pusha
mov
push
jbe
and
out
sub
mov
inc
shr
lds
mov
push
cmpsb
sub
fscale
cmp
mov
xor
subl
push
xchg
data16
sub
dec
push
outsb
sbb
and
adc
lock
adc
stos
add
outsb
frstor
shrb
jl
jp
and
push
adc
or
inc
cmc
mov
movsl
sub
outsl
mov
imul
push
or
into
aaa
pusha
rcrl
pushf
xor
xor
lock
ss
xlat
xor
or
test
sbb
lahf
test
les
iret
out
pop
fs
pop
maskmovq
xchg
dec
fs
cld
aam
daa
inc
cmp
pop
out
mov
cmpsb
call
lret
fistps
lock
dec
leave
add
ret
and
inc
push
mov
sbb
mov
and
stos
aaa
mov
dec
je
pop
mov
mov
out
outsb
jne
ss
mov
cltd
add
jae
cmp
outsb
call
push
xor
aam
jp
pop
lret
ss
sbb
pop
xchg
jne
xchg
jnp
adc
mov
fisttpl
xchg
into
sub
jp
data16
movsb
push
in
ds
out
xchg
xor
movsb
mov
mov
das
call
add
lcall
dec
mov
aas
mov
fs
data16
enter
jle
jg
inc
jns
sub
mov
jl
mov
xchg
iret
in
imul
ret
lret
push
cwtl
ret
fcoml
rcr
xchg
int
dec
dec
or
adc
test
mov
scas
pop
dec
inc
sub
cli
aad
mov
mov
cltd
pop
add
sub
xlat
pop
insb
hlt
in
ror
mov
jnp
pop
fnsave
ds
add
stos
mov
out
and
add
bound
shl
lea
add
icebp
mov
adcb
push
sbb
mov
test
xchg
jp
or
xchg
push
inc
into
add
cld
test
cmp
inc
sarb
push
leave
xchg
mov
stc
and
mov
sbb
pop
test
push
push
cmc
jae
mov
in
sbb
outsl
fucomip
je
pop
push
push
ljmp
mov
inc
insl
out
push
jae
repz
push
lcall
loop
outsl
popf
pop
inc
test
in
mov
jle
imul
sbb
pusha
popf
xor
sbb
dec
push
popf
dec
pop
xor
fbld
sub
fidivrl
mov
adc
mov
ficoms
sub
adc
pop
iret
sub
repnz
scas
minps
and
es
xchg
jae
ds
icebp
sub
jnp
popa
sti
mov
mov
jge
dec
xchg
insl
fs
cmc
xor
std
ret
push
xchg
xor
jl
ficoml
sbb
xor
mov
sbb
test
push
cmp
aaa
sbb
pushf
mov
daa
push
movsl
push
loop
gs
push
fstpl
inc
mov
test
and
cmc
arpl
jne
ficompl
mov
and
xchg
sub
in
cmpsl
sub
mov
js
sub
shlb
movsb
in
sbb
inc
sar
dec
ficoms
mov
push
adc
push
movsl
cmp
test
fisubrs
sub
mov
loopne
mov
mov
enter
aam
ror
push
dec
jns
xchg
add
jo
xchg
sub
xor
arpl
mov
push
mov
test
cmp
mov
push
add
push
cwtl
push
scas
push
fstps
popa
sub
jne
xor
lahf
push
sbb
int3
jne
inc
mov
cs
aas
push
call
jnp
arpl
rclb
adc
lods
inc
stos
fsubl
sub
repz
inc
sub
ficomps
xor
xchg
movsb
add
jg
sub
pop
add
imul
popa
jne
dec
xorl
pushf
scas
and
ds
incl
mov
xchg
push
loope
adc
sub
out
jmp
mov
lea
orb
inc
test
aas
out
ret
rolb
and
pop
push
mov
mov
xor
dec
add
fsubrl
enter
inc
and
movsl
inc
add
or
push
inc
push
inc
pop
xchg
es
out
cltd
fs
mov
clc
shlb
hlt
test
push
and
sbbb
test
dec
sbb
jle
pop
aas
push
jae
aaa
push
add
jnp
fdiv
mov
pop
in
jno
idivl
jle
xorl
mov
ret
push
cltd
cld
shrl
stos
push
mov
cltd
lcall
xor
rolb
cmp
cmc
adc
insb
popa
inc
push
into
movsb
es
call
gs
jl
mov
lock
dec
mov
jo
xor
push
dec
push
ret
and
jnp
adc
or
or
push
push
outsb
cmp
dec
push
mov
ret
or
ljmp
jno
mov
fsubrp
sarl
fisubrs
aaa
dec
or
jge
push
cmp
mov
sbb
and
fldcw
lcall
mov
sub
push
pop
cmpsb
jmp
stos
sahf
test
sub
pop
jo
jle
sub
jno
rcll
lahf
xor
pop
dec
push
xchg
cld
and
push
add
cmp
mov
in
xchg
push
xchg
cld
dec
jnp
jbe
pushf
clc
fmulp
push
jb
push
mov
cmp
inc
inc
retw
out
adc
inc
mov
cmc
mov
jg
lock
nop
inc
mov
sbb
adc
pushf
xchg
rcr
cwtl
mov
dec
lret
loopne
nop
pop
jge
and
sub
dec
xchg
adc
pop
xchg
popf
inc
and
inc
mov
or
and
lea
xchg
mov
bound
lcall
ljmp
dec
cmpsb
mov
arpl
xchg
jmp
xchg
add
lret
lods
mov
stos
inc
add
push
dec
adc
es
mov
mov
fucomip
adc
pop
mov
in
sbb
push
or
or
into
jo
adc
sahf
mov
mov
in
and
out
mov
add
popf
xchg
dec
aaa
cmpsb
in
or
xchg
out
test
jbe
push
adc
sbb
aas
lods
dec
xor
dec
mov
enter
pop
sub
mov
mov
push
push
adc
cltd
mov
xchg
xchg
ja
rcll
lret
ljmp
out
sbb
push
jecxz
xchg
lcall
push
xor
add
cmp
jmp
popa
mov
xchg
movsb
add
pop
xchg
rclb
push
fwait
sub
aas
jecxz
sub
push
mov
jno
or
dec
or
sbb
mov
jne
out
out
push
pop
mov
jg
divb
daa
bound
or
xchg
outsl
pushf
jno
dec
sbb
xor
test
sub
sbb
adc
xchg
fiadds
lods
mov
mov
push
xor
lds
dec
inc
xchg
aaa
leave
dec
jb
or
inc
inc
jmp
jo
pop
add
cmp
jne
add
and
mov
test
stos
daa
pop
in
push
ret
jle
sbb
shrb
pop
xor
mov
sbb
divl
js
incl
or
dec
popf
es
fiadds
fcoml
xchg
inc
and
inc
or
sbb
xchg
jne
loope
add
lret
mov
cld
jp
aam
dec
filds
shrl
mov
mov
mov
jb
or
pop
cmp
rorl
addr16
cmp
mov
arpl
scas
jo
cmp
imul
pop
jbe
pop
mov
lods
xorb
sub
jg
inc
mov
movsb
inc
loop
insl
mov
or
jp
mov
add
int3
push
fldenv
adc
dec
mov
and
lret
pop
cwtl
lods
sub
xchg
cltd
xor
bound
or
xchg
jmp
jmp
and
add
div
push
mov
cmp
and
inc
xchg
mov
adc
xor
mov
adc
dec
fdivrl
outsl
add
xlat
push
les
inc
pop
pop
and
xchg
xor
lcall
nop
imul
mov
or
sbb
notl
ljmp
inc
xor
out
aaa
pop
repz
cmp
dec
arpl
or
lcall
push
std
mov
in
or
mov
pusha
adc
mov
movsl
mov
jecxz
andl
std
add
sbb
lret
jno
cmp
scas
cltd
addr16
ret
in
xchg
je
idivl
xor
imul
inc
mov
dec
fnstenv
fstps
sbb
push
mov
out
mov
jl
sub
pop
mov
pop
loopne
or
xor
mov
ss
jnp
xchg
mov
jge
pop
test
or
mov
shrl
out
push
cli
das
lahf
cmp
dec
adc
mov
sub
aam
xchg
jl
push
shl
cmpsl
mov
loopne
cmpsb
xchg
int3
ret
mov
mov
cmp
add
popa
inc
enter
dec
xchg
sbb
aam
mov
fimuls
fwait
orb
jns
mov
dec
cltd
jno
jl
jb
ret
nop
setns
pop
insl
adc
pop
inc
cmp
pusha
daa
mov
or
sbb
in
ljmp
cmc
pop
jle
xlat
sbb
pop
xlat
mov
cmpl
xor
jmp
xor
imul
pusha
lds
int
push
cli
mov
shl
out
dec
mov
xor
jmp
movsl
shlb
or
sarb
arpl
sbb
cli
in
cmpsb
cwtd
rorb
or
mov
loop
jbe
or
add
push
dec
clc
frstor
adc
mov
fucomp
pop
and
inc
jae
stos
lods
or
push
sbb
sub
repz
inc
mov
sub
and
cs
push
cltd
pop
mov
insb
xor
or
dec
pop
dec
int3
bound
cmp
cmp
das
outsb
stos
pop
push
dec
add
cld
push
lock
inc
imulb
es
arpl
das
jae
cmc
mul
js
and
jecxz
mov
loop
mov
rcll
push
inc
inc
loopne
push
lea
lods
cld
out
push
xchg
jmp
jl
xor
addb
imulb
push
lret
in
fisubs
sub
fdivs
nop
xlat
push
mov
cmpsl
pop
cmp
and
shlb
negl
pop
lcall
mov
jmp
out
xor
cmp
add
out
mov
ljmp
pop
or
fldl
stos
leave
push
jnp
enter
xchg
inc
and
stc
fs
push
lret
ljmp
mov
inc
idivl
push
push
ds
jb
push
fstpt
in
inc
leave
or
dec
sub
movsl
orl
cmp
add
frstor
stos
lcall
dec
outsb
mov
scas
and
cmp
lret
jno
dec
hlt
dec
arpl
bound
dec
pop
sahf
mov
fldenv
cmp
mov
and
in
adc
test
mov
xchg
subl
gs
mov
jmp
mov
and
jns
subb
scas
loopne
pop
dec
lds
mov
push
jge
out
cwtl
add
adc
xor
lcall
xor
movzbl
repnz
mov
sbb
gs
push
mov
sahf
divb
es
clc
ljmp
int
push
fwait
mov
ss
ret
add
push
cmpsb
orl
inc
out
pop
enter
mov
pop
adc
pusha
inc
rcl
mov
test
cmp
sbb
xchg
lret
cmpsl
sbb
fistpl
xor
leave
in
lea
sub
jmp
mov
sbb
xlat
mov
fdivrp
push
push
push
aaa
notl
lods
push
jmp
push
cmp
lret
fmuls
int
stos
add
xor
outsl
in
stos
mov
clc
xor
or
out
fsqrt
jecxz
rolb
aas
push
jae
cmpsl
clc
sbb
iret
test
push
sti
adc
pop
adc
sbb
mov
and
ret
xchg
call
and
cmp
sub
fcompl
push
lods
insb
dec
mov
jp
xorl
lret
inc
ret
inc
push
xchg
dec
add
aad
sarb
xorl
ja
scas
mov
inc
xor
push
mov
mov
sub
inc
shrb
dec
cli
bound
js
mov
pop
nop
xchg
mov
sub
jg
xchg
loop
sub
shrb
xorb
hlt
add
push
xchg
pop
in
dec
stc
in
or
int3
mov
mov
inc
dec
hlt
pop
push
cld
cli
push
mov
sbb
cmp
mov
call
popa
mov
lods
iret
gs
pop
popa
out
xor
pop
mov
seto
jecxz
sahf
rolb
push
lahf
orl
adc
jle
xor
xlat
inc
pop
lock
sbb
mov
mov
xor
pushf
shl
setl
or
xlat
and
loopne
and
mov
iret
insb
jle
fisttpl
mov
mov
into
mov
cmp
add
cwtl
clc
rolb
and
enter
fldcw
mov
push
mov
mov
push
adc
imul
shl
inc
add
loope
xor
pop
jmp
out
sub
sarb
addr16
sbb
cmp
mov
push
xchg
inc
mov
or
arpl
ret
sub
imul
rorb
lods
mov
sbb
shrl
mov
mov
xor
insl
cli
sub
test
lret
pop
and
icebp
push
test
xchg
jae
or
jl
xchg
or
out
pop
cld
dec
jg
push
jno
lahf
pop
mov
cmpsl
in
andl
insl
daa
sbb
enter
jle
sarl
addl
loopne
lret
push
or
xor
test
inc
addr16
in
test
fsubl
pop
cmpsl
jb
cmp
cltd
jns
lock
xor
adc
je
mov
inc
insl
jmp
mov
cmc
lret
out
xchg
insl
push
movsb
xchg
in
inc
lret
clc
jle
dec
loop
pop
pop
mov
imul
lds
xor
out
adc
jl
adc
stos
mov
adc
imul
idivb
jns
pop
push
movsb
addr16
aas
stos
jg
dec
bound
push
out
in
test
lea
jnp
adc
mov
mov
scas
insl
push
mov
sub
dec
test
aad
andb
adc
fcmovnbe
lahf
icebp
inc
or
nop
dec
into
clc
outsb
xchg
or
test
cs
fidivs
scas
out
sahf
mov
sbbl
push
ljmp
fidivs
inc
adc
jmp
mov
lods
into
adc
push
mov
cwtl
and
pop
jne
sbbb
cmpsb
dec
push
and
xor
movsb
into
adcl
jb
fmuls
fldcw
mov
sub
inc
sub
add
xlat
cmp
pusha
jae
stos
adc
mov
pusha
xchg
push
mov
icebp
cwtl
incl
xchg
xchg
test
sar
lret
push
or
sahf
push
add
loop
neg
les
stos
mov
out
ret
decl
add
push
adc
ret
jno
add
lret
cmp
sub
push
pusha
sahf
xor
xchg
xchg
mov
push
fwait
dec
xchg
test
mov
cmp
dec
pop
shlb
aas
lret
lcall
lret
mov
push
add
ret
pop
add
int
scas
jnp
ror
jbe
daa
out
adc
std
jne
pop
jecxz
mov
lcall
insb
pop
rcrb
cld
push
sub
or
sub
dec
lahf
movsl
push
ljmp
and
add
fdivs
iret
shlb
lds
je
dec
xchg
sarl
and
loope
push
mov
hlt
push
faddl
repnz
loope
xchg
cwtl
test
push
jo
dec
adc
sbb
adc
movsb
jmp
cs
rolb
loopne
mov
outsl
insl
jo
push
jge
lock
dec
mov
sbb
lock
rclb
ret
jp
sbb
rcrl
pop
inc
nop
loop
cmpsl
xor
xor
cld
insl
fiaddl
int3
subl
xlat
les
mov
cmp
aad
mov
stc
das
mov
cmp
jno
jge
cmp
cmp
mov
in
mov
or
inc
rclb
xchg
fwait
xchg
scas
fyl2x
icebp
fistpl
jl
mov
mov
push
xchg
mov
mov
pop
inc
fadds
enter
je
sub
cmp
sbb
add
push
or
dec
out
mov
add
push
insb
popa
mov
mov
das
cmp
adc
mov
mov
negb
mov
and
xor
popf
in
jbe
js
mov
cmpsl
jecxz
in
mov
movsb
push
xchg
push
cwtl
ret
outsb
lock
add
fst
mov
rcrl
jb
sbb
add
pop
mov
push
mov
andl
movsb
dec
jp
leave
cmp
xor
push
xlat
mov
andl
cmpsl
cmc
daa
shlb
sti
fisubrl
pop
mov
cmp
pop
inc
jl
inc
xlat
pop
rcrl
adc
mov
xchg
push
add
xchg
call
outsl
call
xchg
popf
popa
bound
insb
push
mov
dec
test
notl
jnp
mov
das
sahf
and
js
push
lea
or
orl
mov
inc
lods
mov
mov
mov
jne
imul
adc
sbb
ja
loope,pn
mov
push
fcoml
mov
pop
push
xchg
inc
mov
mov
sbb
pop
cld
outsl
xor
push
ret
cmp
inc
dec
je
inc
jbe
js
addr16
scas
jo
test
repnz
sub
scas
jae
popa
pop
scas
imul
lock
lret
out
ljmp
dec
scas
adc
fldenv
ret
sbb
jbe
add
jmp
hlt
pushf
cmp
xor
mov
das
aaa
xchg
jns
pop
jl
and
aaa
mov
ret
jns
adc
mov
movb
cmp
jp
mov
xchg
lret
xchg
popa
push
jns,pt
inc
inc
pop
cli
ds
or
pop
dec
jnp
stos
cmpsw
jae
arpl
stos
or
dec
sub
push
dec
fdivs
cmp
test
rorb
test
inc
cld
push
inc
push
push
in
dec
das
insb
add
cmpsb
jae
xchg
pop
movsl
scas
pop
loope
inc
mov
dec
in
push
mov
shrb
dec
mov
int3
mov
clc
cmp
movsl
jl
xchg
inc
pushf
fwait
das
dec
popa
mov
test
ss
subl
mov
adc
dec
clc
shll
and
out
pop
xor
mov
leave
cmc
dec
mov
jbe
or
push
or
imul
stos
xchg
or
add
movsb
jg
mov
stos
rcrl
push
sahf
xchg
sub
sub
push
adc
mov
or
adc
imul
push
rcl
ja
loop
in
imul
rcll
daa
fmul
movsb
mov
push
in
jb
jno
cmpsb
sahf
test
push
jne
fisubl
fsts
out
mov
xchg
test
push
outsb
jb
or
sbb
mov
sbb
packuswb
mov
pop
lods
cwtl
jle
test
pop
sub
arpl
test
dec
xchg
arpl
inc
sbb
je
lea
mov
xchg
push
xor
xor
add
bound
xor
mov
out
insl
aaa
out
test
daa
mov
nop
clc
sbb
bound
mov
mov
icebp
lea
mov
ss
fs
jae
decl
xchg
aaa
mov
test
xor
cmpsb
pusha
and
sahf
lret
mov
ja
dec
push
movsl
mov
iret
jbe
mov
xchg
sbb
in
iret
cld
push
mov
je
lret
cltd
jmp
push
jl
outsb
mov
ds
push
or
sub
and
mov
mov
push
mov
inc
loopne
hlt
xor
xchg
mov
sbb
mov
dec
inc
fldcw
fs
mov
scas
sahf
add
push
cmp
lcall
sub
dec
mov
add
nop
lods
pop
icebp
and
popa
call
add
or
push
shrb
adc
movsb
roll
inc
int
pop
lahf
adc
dec
movsb
xor
and
jge
pusha
or
dec
out
sti
aaa
out
add
dec
pop
sbb
and
sbb
leave
ja
add
fcompl
movsl
mov
ds
sub
mov
aaa
add
push
push
dec
lcall
sbb
imul
xchg
sbb
mov
adc
ss
pop
jmp
in
xchg
mov
gs
cmpsb
pop
or
mov
aam
fisubs
jp
in
movsb
jg
push
push
mov
sbb
data16
mov
mov
xorl
push
adc
cwtl
pop
popa
iret
clc
mov
jge
xchg
repz
dec
mov
mov
add
cmp
js
imul
and
aaa
dec
frstor
mov
adc
pop
fcomps
movsb
dec
push
xor
push
push
mov
add
sti
cmp
add
stos
mov
out
xor
sub
aaa
popa
stc
xchg
popa
aam
nop
outsl
sub
dec
sahf
and
cmp
and
inc
mov
lret
sub
fimull
jb
out
stos
pop
push
frstor
sbb
dec
pop
std
iret
popa
push
mov
cmp
sbb
fnstcw
add
les
mov
popa
jp
mov
inc
sti
sbb
fdivs
push
addr16
xchg
adc
aad
lret
stos
out
fidivl
fidivrs
outsb
lods
addl
loop
mov
cmp
xlat
outsl
jle
cmp
pop
loopne
sub
push
sti
mov
in
sbb
xor
outsl
into
dec
push
cmc
xchg
jecxz
mov
fdivr
pop
inc
in
movsl
adc
fmull
pop
push
mov
pop
pop
out
dec
inc
sbb
jmp
int
pop
mov
and
mov
test
cmp
xchg
cmc
mov
gs
inc
in
pop
sub
pop
mov
xor
lret
std
mov
cwtl
ja
sub
loopne
mull
or
in
sti
xchg
cld
enter
daa
div
jbe
movb
pop
xor
mov
add
test
stos
in
mov
in
mov
outsb
lret
push
jne
inc
imul
sti
push
cmp
push
or
outsb
or
jge
fnsave
pop
dec
test
movsb
mov
and
lcall
hlt
dec
inc
cld
lret
add
divb
mov
lods
arpl
test
sbb
xchg
and
insb
pop
orl
test
ja
xchg
movswl
push
add
lds
adc
pop
in
stos
dec
scas
add
pop
test
inc
xor
xchg
mov
sbb
push
add
xchg
cmp
jmp
ds
call
sub
lods
out
icebp
stos
mov
not
mov
ljmp
out
lret
xchg
je
notb
cld
mov
mov
sahf
jmp
les
cwtl
or
or
and
js
or
dec
test
pop
push
fcmovbe
ja
arpl
loopne
in
cmpb
xchg
sub
popa
cmpb
jmp
xchg
pop
mov
adc
or
gs
mov
mov
fucomp
cmc
sbbb
dec
push
aam
test
xchg
cmp
cmc
std
mov
and
bound
nop
fadd
lret
mov
xor
push
inc
pop
and
sub
pop
insb
mov
xchg
jg
hlt
sub
fdivl
pop
dec
push
add
bound
jb
mov
xchg
add
xor
or
icebp
stos
mov
loopne
popa
adc
add
lea
add
int
xlat
pop
stc
lea
fisttps
pop
push
add
pushf
mov
ds
stos
push
movsl
out
pop
xchg
out
movsl
pushf
sbb
inc
sbb
and
push
insl
test
cltd
pop
shlb
push
xchg
lret
fnstenv
and
fcoml
mov
js
pushf
rcrb
adcb
push
inc
lcall
and
cmc
adc
pop
pop
adc
xchg
mov
or
ds
mov
test
jne
test
rorb
sub
testb
or
and
nop
xchg
mov
mov
push
sbb
xchg
cwtl
inc
loopne
jbe
out
cld
lcall
or
mov
sarb
adc
pop
mov
stc
sub
out
aad
add
sub
xchg
adc
pop
mov
mov
jge
pop
lods
lds
fistl
cmp
pop
sub
pushf
pop
mov
xchg
orl
sahf
mov
cmp
push
call
push
push
ljmp
sahf
lds
aaa
pusha
addr16
clc
lods
pusha
sub
mov
adc
push
push
lea
call
push
push
cmp
adc
inc
push
jp
bound
sbb
jl
ja
cmpsl
mov
es
test
cmc
pop
jecxz
dec
pushf
movsb
xchg
dec
push
xor
aad
aam
push
and
js
push
jge
inc
xor
mov
jmp
aaa
nop
ficomps
cltd
jg
movsl
mov
shl
sbb
dec
and
ljmp
decb
sbb
jbe
jns
cmpsb
in
push
call
out
pop
fs
jns
pop
inc
lods
adc
cmc
xchg
popf
jno
jo
lret
add
mov
cmp
mov
das
dec
push
dec
das
adc
out
je
div
fstl
inc
cmp
repnz
cmp
or
scas
add
mov
mov
ficoml
fdiv
lods
sub
mov
mov
fcmovb
jae
call
jle
sub
movsl
in
in
sbb
movsl
push
sub
xchg
push
loopnew
in
in
dec
ret
and
repnz
mul
mov
pusha
jo
xor
test
mov
sub
jmp
fstpl
fildll
outsl
mov
mov
aas
cmp
int
push
popa
inc
and
mov
sbb
ror
mov
xor
add
sub
sub
notrack
xchg
cmp
add
xchg
out
jle
mov
inc
jb
dec
mov
add
inc
stc
jnp
shl
lcall
stos
and
lret
stc
je
subb
adc
lods
pop
ret
cld
stos
addr16
push
jbe
sti
in
add
cmp
clc
jbe
das
lds
mov
adcl
xchg
xchg
mov
fwait
out
cmc
loopne
push
dec
call
outsl
push
pop
xor
dec
sub
and
je
cmc
xor
in
lock
adc
mov
nop
cld
sub
inc
adc
repz
out
xchg
adc
cltd
xorl
or
lret
sbb
ljmp
fcom
mov
cmc
xchg
xchg
pop
ret
mov
popa
cmp
xor
sub
push
fisttps
add
xchg
dec
pusha
shll
loope
adc
mov
loopne
ret
inc
pop
rcll
push
aas
aad
mov
es
daa
jmp
mov
xchg
rol
dec
sbb
test
clc
xchg
sbb
andb
mov
test
in
cs
pop
fidivl
mov
test
mov
test
arpl
ret
out
pop
insb
and
les
notl
or
sub
xchg
jmp
pushf
dec
imul
mov
jl
xchg
xor
nop
lds
sarb
xlat
cmpsl
cmpsl
xchg
movsl
fstl
cs
out
xor
push
adc
clc
pop
add
cltd
jae
enter
out
add
cld
cmpb
neg
mov
mov
mov
ret
scas
jle
aas
andl
xor
aad
out
pop
jecxz
jne
cmpsl
push
enter
test
test
xor
lret
jecxz
rcrb
cmc
shrl
aas
shll
cmpsl
decl
pop
xchg
or
xor
mov
sbb
ret
xchg
mov
push
cmp
xor
fistl
pop
sbb
subl
or
shlb
mov
jb
repnz
pop
rcl
aam
inc
in
in
push
xchg
sahf
cmpsb
bound
repnz
xchg
test
push
mov
fsub
mov
arpl
sbb
stos
pop
sub
les
and
lret
xchg
iret
dec
stos
call
ja
xchg
cmovae
sbb
or
test
in
loope
mov
fmul
sub
inc
cmp
jp
cmp
inc
sub
adc
std
orb
mov
jmp
loopne
arpl
sub
mov
xor
lret
adc
or
cmpsb
add
mov
dec
xchg
mov
sbb
sub
jbe
out
imul
arpl
mov
sbb
jecxz
in
shlb
dec
jns
faddp
mov
dec
shl
pushf
iret
aad
jns
push
mov
or
rcrb
out
or
jecxz
out
adc
pop
cmp
repnz
inc
int
inc
bound
adc
jae
xchg
lret
mov
fsubrs
rcll
mov
in
adc
leave
rclb
mov
mov
aas
mov
imul
rolb
leave
and
xchg
mov
push
adc
cmc
addr16
and
lcall
subl
adc
lods
loop
xor
lahf
xchg
lahf
aas
imul
imul
mov
sahf
xor
adc
enter
xor
jo
mov
pusha
repnz
int3
loopne
jo
inc
dec
adc
push
push
jecxz
fisubs
xchg
insb
imul
test
arpl
les
push
xchg
dec
sub
jne
dec
xchg
dec
insb
add
mov
outsb
cld
into
insb
mov
lret
aas
ficomps
arpl
cmpsb
mov
cmp
jns
mov
dec
clc
mov
movsb
dec
sahf
je
mov
sbb
repnz
sarb
mov
mov
mov
xor
rcl
cmp
cmp
out
and
pop
or
mov
sbb
jno
adc
push
cmpsl
mov
je
lock
repnz
outsb
icebp
imul
cs
dec
inc
lods
cmpsl
or
outsb
xlat
sbb
sbb
inc
jl
sbbb
push
mov
xlat
in
mov
data16
stos
fst
jae
xchg
mov
cmp
lcall
bound
xchg
xchg
imul
pop
testb
mov
cwtl
imul
push
adc
inc
jo
mov
nop
jp
pop
mov
jge
push
mov
pop
push
inc
mov
loop
mov
inc
mov
ss
sti
loop
jae
sub
xchg
sub
push
out
ficomps
nop
sbb
popf
mov
fsubp
push
sub
add
imul
dec
add
mov
insb
ja
rclb
addr16
xchg
shl
pop
pop
addr16
mov
push
cmp
js
xchg
movsb
adc
mov
fcmovnbe
imul
cmp
aam
cmpb
lods
adc
cmp
repz
in
add
clc
mov
cld
nop
jbe
push
mov
xor
or
insb
pop
mov
fs
iret
mov
vphaddwq
popl
xor
lret
adc
cmpsb
addr16
mov
inc
push
repz
inc
das
out
mov
xorl
pop
mov
cmpb
loop
ret
mov
push
inc
add
pop
imul
stos
dec
andl
loopne
mov
xchg
pushf
lea
andb
pop
pushf
cltd
outsb
jae
aas
adc
jns
inc
jp
gs
andl
adc
or
or
scas
sbb
dec
inc
mov
test
adc
xor
sbb
loope
inc
push
lods
or
lods
lods
repz
pop
push
loop
mov
pusha
dec
sahf
sub
sbb
mov
int3
xchg
mov
push
push
lcall
dec
cmp
cmp
int3
pop
cmp
jecxz
inc
jb
xlat
adc
pop
roll
imul
or
pop
xchg
clc
mov
lret
pushf
repnz
inc
outsb
jo
cmp
mov
leave
fucomip
add
dec
add
push
and
cmp
cmp
push
mov
sbb
or
mov
mov
iret
mov
mov
aas
cmp
mov
jmp
push
xchg
movsl
xor
xor
mov
test
adc
outsb
lret
outsb
aaa
in
into
lea
mov
sbb
mov
or
pop
mov
jbe
sbb
mov
sub
and
icebp
cmpsb
fwait
in
jb
jg
and
lahf
xchg
fsubrl
sub
sbb
out
xchg
outsb
cltd
lret
insb
dec
mov
xchg
dec
jl
mov
xchg
sub
pop
jno
out
in
scas
jnp
jl
sahf
push
and
sbb
dec
push
xchg
lock
sbb
sub
xchg
dec
cmp
ljmp
lods
push
and
and
dec
jg
enter
lahf
popf
push
mov
hlt
adc
pop
movsl
or
pop
imul
out
imul
xchg
clc
aas
push
popa
imul
pop
hlt
out
pop
cmc
sub
lret
mov
lods
or
jl
inc
mov
push
adc
dec
mov
mov
push
sbb
mov
adc
loope
ds
xchg
std
add
jbe
ret
aad
dec
jo
imul
loope
xchg
cli
ret
or
pop
outsl
daa
out
rcll
pop
push
lods
and
adc
adc
cmp
fmul
cltd
jne
sub
sbbl
pop
sub
mov
lret
arpl
mov
inc
movsb
pop
mov
insb
push
repz
std
xor
sbb
icebp
dec
lahf
lret
dec
cmp
aaa
push
mov
mov
adc
lcall
pop
ret
mov
xor
ja
xchg
out
clc
inc
imul
dec
adc
daa
pop
inc
add
addb
js
inc
cld
in
dec
jae
in
in
rol
or
xor
inc
mov
mov
xor
dec
mov
icebp
adc
mov
xor
inc
test
lahf
xchg
fs
in
pusha
dec
jp
xchg
int3
mov
lahf
addr16
in
lock
in
mov
clc
add
xchg
cmpsl
push
in
jne
int
dec
jecxz
test
imul
popf
jb
fisubs
pop
in
inc
dec
aam
jmp
sub
ljmp
xor
ret
sbb
fwait
mov
mov
loope
gs
in
repnz
push
mov
mov
adc
sbb
fmuls
mov
pop
ljmp
cmp
and
sbb
nop
test
mov
stos
sbb
cltd
xchg
mov
cmp
jae
lods
inc
push
bts
inc
cmp
inc
out
loop
dec
push
cli
xchg
sub
adc
xlat
pushl
xor
adc
mov
call
dec
push
mov
add
ret
ss
repz
imul
imul
jbe
fldcw
in
sbb
mov
iret
das
cmpsl
mov
aas
cld
xchg
movsb
scas
js
add
mov
mov
into
daa
mov
les
sub
ret
in
pop
jp
pop
mov
je
xchg
in
imul
daa
mov
mov
dec
jle
xchg
pop
sbb
pop
mov
sub
mov
push
imul
movsb
loop
jmp
cmp
repz
js
and
and
xchg
repnz
fwait
and
out
pop
into
cltd
mov
shrl
push
bnd
pop
cli
xchg
in
pop
xor
mov
pop
lea
mov
inc
pop
flds
lcall
mov
jge
shlb
push
add
mov
xchg
xchg
popa
or
push
daa
test
jp
mov
fsubrl
mov
out
adc
xchg
cmp
into
in
roll
andb
mov
scas
xor
add
add
flds
mov
out
inc
imul
jo
add
dec
sub
orb
mov
push
loopne
add
packssdw
push
adc
fsubrp
outsl
rcrl
dec
cmp
and
mov
xchg
sub
cwtl
mull
fsubrs
pushf
xchg
iret
shlb
rorb
stos
inc
mov
std
out
cmpsb
arpl
sahf
pushf
xchg
cmp
sub
idivl
lods
sbb
add
cli
int3
lds
dec
jl
push
or
lods
inc
cld
mov
lret
sti
movd
push
mov
ret
fucomp
into
and
cmpsl
xchg
sub
addr16
lahf
ljmp
dec
sti
sub
push
push
jmp
dec
pop
lea
emms
and
sub
je,pt
repnz
lds
sub
add
mov
dec
out
das
addr16
jbe
xchg
and
push
js
lret
cmp
sbb
data16
daa
inc
lds
fwait
call
adc
out
jmp
mov
lods
add
sbbb
in
mov
fsubrl
xchg
mov
enter
xchg
xor
or
in
ret
jle
pushf
stos
scas
data16
pop
shrl
inc
jne
cld
adc
js
pushw
jg
rolb
fdivr
inc
inc
shlb
inc
imul
lods
stc
push
cmp
add
jge
push
aas
lret
mov
xchg
sub
pop
idivb
adc
ret
pop
xor
nop
clc
je
jns
inc
pop
shll
pop
arpl
dec
aam
or
orb
sub
dec
mov
adc
in
fs
addr16
and
or
dec
add
loopne
sbb
pop
ja
repz
inc
xor
sbb
cmp
popf
or
aad
add
or
stc
scas
cs
mov
jne
pusha
mov
or
add
inc
scas
push
xchg
xor
das
push
sahf
add
loopne
ja
imull
jo
std
dec
lock
rcr
ret
mov
rclb
sub
cli
and
shr
in
mov
xor
pop
add
cwtl
sub
aam
lret
jbe
addr16
out
lcall
sub
add
lahf
push
sub
mov
mov
pop
in
jb
outsb
pop
movsl
lea
sub
in
nop
add
sbb
dec
sarl
mov
cmpsb
pop
mov
outsl
je
ret
cmp
jg
js
sub
cmp
xchg
dec
xchg
xchg
aas
xchg
push
addr16
mov
test
pop
ljmp
xor
inc
popl
je
popf
jno
add
call
je
mov
sbb
in
testl
ja
clc
jecxz
xor
jecxz
invd
or
jge
inc
pop
les
mov
jb
jmp
inc
adc
sbb
ss
mov
cmp
loop
adc
fnstenv
dec
mov
fstl
xchg
pop
cmp
adc
lods
cwtl
out
rcl
mov
pushf
pop
insl
loop
dec
adc
and
dec
lret
leave
sbbb
inc
std
ljmp
sti
idivl
xor
cmc
mov
lds
iret
sub
fcmovu
jp
ror
and
les
decl
cli
cli
cs
cwtl
and
xor
mov
iret
int
cmc
jno
scas
cwtl
loop
cld
test
xor
xchg
adc
jmp
mov
mov
lds
addr16
or
inc
sahf
sub
push
mov
mov
mov
mov
adc
fidivl
andb
adc
std
lock
test
negb
push
pop
std
rcll
repnz
fidivrs
cmc
push
nop
loop
or
xchg
aad
pushf
pushw
mov
out
rclb
inc
dec
mov
nop
andb
cmpsb
js
std
scas
mov
cmc
lret
std
cmp
add
jge
cli
mov
mov
fcompl
aas
mov
xor
pop
or
or
sub
out
loopne
fsubs
pop
push
mov
iret
jns
int
dec
faddl
out
aaa
pop
and
push
cld
mov
lret
movq
or
cmpsl
xchg
sub
push
mov
ja
push
mov
js
pop
sub
icebp
movl
jge
jmp
lods
imul
add
dec
pop
xchg
dec
ljmp
neg
pop
fldcw
cmpsl
popa
lahf
push
pusha
cli
aad
inc
and
lahf
sarb
lret
out
out
push
and
test
add
je
stc
dec
ret
mov
das
sar
rcrb
rcll
cmp
scas
mov
xor
jecxz
add
cmp
movsb
or
adc
push
pop
xchg
fcmovbe
out
cmp
sbb
test
push
aad
loope
xlat
inc
cltd
sub
loope
add
rclb
lods
mov
inc
pop
push
and
inc
xchg
in
mov
or
rcrb
lock
push
xor
out
push
adc
pop
xchg
sti
fdivp
or
test
dec
leave
ret
int
inc
jo
mov
lahf
mov
loop
repz
clc
cltd
xor
xlat
xchg
sub
repz
push
add
or
xor
adc
dec
jo
mov
fwait
sbb
mov
sub
add
cmp
cli
js
mov
xor
je
xchg
mov
lret
jmp
xor
push
cld
fcompl
cmpsl
mov
xchg
pop
bound
stos
push
ljmp
or
add
sbb
push
push
mov
xlat
outsl
in
fsubrs
int
leave
in
adc
pushf
push
push
scas
call
rorl
gs
cmp
jb
jno
cwtl
ljmp
jne
cmpsl
cmp
inc
lds
sub
mov
repz
and
or
iret
sahf
call
xchg
loope
repz
mov
xchg
xor
ret
rclb
add
or
clc
xlat
or
stos
sub
mov
sbb
push
mov
iret
add
insl
mov
je
ss
xor
sub
sub
jecxz
bound
mov
inc
pop
xor
shlb
repnz
fcoml
int
ljmp
pop
xchg
and
mov
dec
lret
push
jl
flds
jne
sahf
jns
push
dec
cwtl
arpl
xchg
adc
mov
add
inc
adc
mov
push
cmp
xchg
adc
xchg
aaa
aam
sbb
insl
popf
dec
sahf
mov
xor
movsb
cmp
jne
orb
scas
cld
js
jp
xor
or
loopne
mov
jecxz
inc
mov
push
cmp
mov
pop
or
fs
stos
aaa
call
xchg
stos
orl
int
fsubrl
jne
xor
jl
add
adc
add
pop
insb
xlat
out
add
lds
adc
push
jge
lods
pushf
imul
mov
mov
test
in
lods
stc
add
xlat
dec
add
into
cmp
push
cmp
push
add
dec
cmp
xor
into
movsl
mov
xor
pop
jnp
sbb
mov
mov
mov
push
push
jp
dec
xchg
mov
outsl
icebp
pop
ja
cmpsl
xor
pusha
in
sbb
lea
fwait
cmc
push
stos
xor
mov
in
stos
jno
mov
loope
ds
add
mov
shrl
xor
ret
loop
push
or
inc
cmp
popf
add
clc
mov
pop
js
xor
jne
push
cmp
xchg
cmpsl
dec
or
hlt
sbb
ljmp
stos
cltd
std
loope
ljmp
or
sbb
imul
rcll
jp
sub
jmp
daa
or
imul
cs
add
push
mov
test
out
xchg
xor
lahf
imul
stos
out
sbb
in
add
rorb
mov
test
repnz
ror
dec
scas
push
lock
and
fcmove
xor
outsl
add
xor
test
out
daa
dec
test
lock
inc
sub
outsl
xchg
or
mov
sbb
jmp
or
ds
adc
lahf
xor
xchg
bound
pusha
loope
sbb
pop
mov
loope
pop
dec
outsb
fwait
push
or
in
ror
out
push
pop
loopne
es
bound
push
push
loope
inc
mov
pop
or
or
mov
mov
xchg
movl
fnstsw
push
sbb
jnp
test
push
enter
jge
stos
xchg
add
lahf
and
or
pushl
xchg
frstor
cmp
movsl
insl
mov
jb
enter
jecxz
or
mov
cmp
mov
jle
lret
or
dec
mov
stos
lds
cli
adcl
fs
push
and
dec
adc
ret
mov
jae
mov
fsubl
ret
add
fwait
cmp
jbe
mov
dec
std
sbb
in
sub
lods
fadds
mov
sahf
out
jns
or
cmp
push
rorb
gs
xchg
jmp
jg
jecxz
ja
imul
loop
popa
dec
add
and
je
xchg
mov
fsubrs
inc
pop
cli
es
rclb
dec
addr16
pop
or
pop
ds
andl
and
xchg
or
add
push
sub
pop
cmp
push
test
lock
inc
cmp
pop
and
inc
jmp
sub
push
ret
lods
ret
mov
imul
mov
sarl
push
xor
push
push
scas
shrb
shrb
loope
sbb
movsb
arpl
push
repnz
mov
push
or
jno
hlt
cli
and
out
repz
push
je
rol
cmc
pop
shl
sahf
lcall
jl
sub
popf
stc
push
stos
mov
in
jno
in
or
arpl
testl
call
mov
leave
lods
add
cwtl
cmc
scas
fmul
xchg
ds
push
ret
notl
lcall
leave
and
out
ljmp
clc
test
or
lahf
out
mov
pop
mov
js
xchg
les
inc
and
fscale
dec
jo
shrb
gs
cmp
push
jle
xchg
xchg
orb
mov
jne
mull
cwtl
sbb
jnp
xor
xchg
adc
jno
add
adc
adc
cmpsb
mov
xor
rcr
sbb
add
jp
xor
sbb
xchg
mov
stos
in
dec
cli
data16
cmp
cmp
push
add
mov
mov
dec
jp
mov
sbb
icebp
sahf
in
icebp
dec
xlat
je
mov
daa
pushf
add
rorb
psubb
fcom
xchg
cmp
je
ljmp
dec
xor
inc
hlt
and
mov
fwait
push
xor
pop
in
jb
jnp
lods
je
cs
inc
out
sub
jnp
arpl
dec
mov
cli
es
cmp
repz
mov
dec
jo
testl
fdivrs
sbb
lcall
stos
and
sbb
dec
or
pop
stos
pop
mov
in
jb
jl
pop
lahf
lods
xor
stc
xchg
into
mov
stos
sub
xlat
mov
xchg
repnz
sub
jb
je
sub
repnz
out
movsl
jnp
lods
pop
leave
push
nop
and
fnsave
mov
pop
xor
push
out
jno
jp
insb
mov
les
jmp
pop
test
jae
mov
xor
mov
lea
push
cmp
dec
jns
pop
cmpsl
inc
into
scas
loop
adc
jle
aaa
rclb
hlt
sahf
sub
add
iret
lock
lea
je,pt
jmp
mov
push
mov
jmp
in
or
dec
pop
xchg
mov
and
imul
push
xor
and
iret
aaa
movsl
xor
pushf
lods
icebp
and
or
and
rcl
inc
stos
push
leave
mov
ret
cmp
inc
jecxz
sub
add
ret
mov
int
dec
push
mov
add
or
lock
ret
ret
adc
ror
fs
scas
call
cmp
outsb
push
mov
pop
ret
jns
jns
test
cmp
jl
popa
andb
push
loopne
mov
loop
xor
sub
ja
jb
pop
push
or
sbb
sbb
cmp
test
outsb
sub
pop
xchg
movaps
sbb
shrl
or
ljmp
cmp
sbb
or
pop
das
stc
add
add
in
pop
pop
nop
pop
dec
pusha
pop
popf
inc
mov
sbb
pop
lret
lods
inc
lods
movsb
lds
icebp
mov
mov
imul
push
mov
push
in
inc
xchg
lahf
mov
mov
cmpsb
imul
rcl
push
xchg
sub
or
add
test
int3
mov
sub
loope
lea
mov
rcll
int3
jmp
mov
test
adc
je
subb
cmp
jmp
dec
push
movsl
out
ss
jb
jmp
idivl
lahf
or
cmp
repz
incb
fistl
dec
push
in
cmc
in
cmpl
sbb
xor
jae
out
jmp
cmp
inc
dec
pop
dec
adc
fnstcw
int
jl
add
jb
mov
sbb
icebp
sar
mov
jb
into
mov
cmp
cmp
rcrb
pop
push
and
clc
mov
dec
popf
divb
jne
in
fidivrs
adc
push
mov
or
pop
cmpsb
jecxz
push
push
sub
aas
dec
mov
lahf
lea
out
mov
dec
popf
ss
dec
mov
into
jo
xchg
fsub
aas
mov
and
sbb
out
pop
cmc
addr16
cmpl
gs
int
repnz
in
mov
push
pop
lock
lret
cmp
sbb
xor
adc
mov
xchg
or
fmull
mov
bound
or
xlat
psubusb
inc
rolb
imul
int
call
test
push
js
out
je
add
pop
loopne
int
into
lcall
aaa
jbe
add
sub
out
ss
out
mov
call
lret
push
or
pop
pop
xorl
hlt
xor
xor
mov
imul
fmuls
mov
js
and
push
adc
jge
xor
cwtl
arpl
push
sub
call
adc
cmp
inc
cld
or
push
pop
scas
xor
outsl
mov
pusha
out
mov
jle
mull
paddsb
sbb
scas
loope
mov
loop
enter
mov
lret
xchg
dec
adc
loopne
incl
xchg
dec
dec
add
pop
stc
xlat
xor
arpl
and
dec
dec
sbb
xchg
es
stos
adc
loope
adc
cmpb
aad
add
or
mov
mov
outsl
jns
stos
out
xor
xor
sahf
pop
xchg
in
mov
mov
imul
lds
sbb
lret
or
mov
cld
xchg
jno
bound
cmc
dec
push
xchg
lea
aam
icebp
into
arpl
nop
lea
adc
scas
push
cmp
es
in
pop
int
mov
cmp
cmp
fcompl
jmp
jno
push
in
enter
mov
inc
popf
dec
and
cltd
test
ljmp
adc
subl
push
lea
ss
jbe
add
aaa
sub
xchg
push
push
in
sub
xor
stos
xchg
xchg
add
fdivrl
adc
arpl
mov
xor
insl
aas
pop
inc
cmc
mov
mov
imul
dec
and
mov
jne
jbe
cwtl
xor
xor
fldt
fnstsw
imul
cli
sbb
or
mov
mov
adc
sbb
nop
je
call
rclb
mov
out
pop
mov
cwtl
push
sub
aaa
ffreep
fnstcw
aas
jo
frstor
repz
stc
mov
sub
hlt
mov
popf
and
or
pusha
inc
imul
dec
loop
stc
dec
std
int
inc
repnz
testb
test
xchg
repnz
add
sub
std
pop
out
add
fstl
mov
sbb
jg
imull
sbb
repz
xchg
pop
adc
hlt
xor
loope
jl
in
gs
sub
mov
mov
and
push
incl
movsl
rcl
out
add
inc
mov
mov
push
mov
or
inc
in
xor
mov
repz
fwait
es
adc
aad
out
mov
loope
xchg
loope
dec
int3
push
sbb
sub
xchg
ja
mov
inc
pushf
clc
scas
jo
aad
mov
jno
jbe
outsl
dec
sub
adc
in
mov
jbe
mov
or
jecxz
dec
insb
pop
loopne
insl
jnp
sbb
pop
imul
adc
dec
hlt
push
ds
jb
enter
aad
cmp
jnp
add
pop
fdivrl
xor
add
ret
jo
add
ss
add
lret
cmpsb
aas
mov
stc
push
out
adc
jl
cmp
sub
popf
xor
lcall
cmc
xorb
cmp
and
pop
arpl
in
lods
cmp
mov
mov
addr16
rcrl
dec
pushf
in
fxam
mov
test
jno
sti
repz
add
ja
mov
call
jg
add
mov
cmp
dec
push
sub
pusha
xchg
add
outsb
sub
sub
mov
push
lret
or
call
or
cwtl
cs
sti
shrb
sbb
and
inc
call
mov
pusha
movsb
sahf
pop
cmpsb
lret
jmp
loop
jno
mov
sbb
outsb
movsb
pop
add
jae
test
mov
cmp
and
fwait
scas
in
inc
sbb
mov
dec
gs
dec
imul
imul
lea
xchg
xchg
jo
test
jae
jg
sbb
das
cmp
adc
mov
mov
out
lahf
scas
mov
jbe
mov
shl
inc
xor
jge
cwtl
xchg
mov
popf
jno
add
and
ret
je
push
mov
in
popf
ret
push
adc
sub
jge
mov
pop
sbb
mov
or
js
or
outsb
mov
xlat
fistpl
fcoms
xor
out
sub
jnp
daa
jg
dec
add
mov
cmpsb
push
int3
fildll
cld
xor
pop
adc
std
xchg
pop
in
adc
aam
lret
push
and
jne
stos
ds
jp
mov
popf
cmpsb
push
clc
mov
andl
or
jmp
mov
in
mov
ficompl
xor
jb
push
cltd
pop
ja
pop
sahf
cltd
add
push
mov
in
rcr
push
and
pop
outsl
dec
sub
mov
popf
ljmp
inc
rcr
jns
out
rcr
mov
dec
jmp
sti
add
sub
div
hlt
fidivrs
pusha
lea
fisubl
mov
scas
movsb
mov
test
nop
push
aas
notl
fdivrs
std
adc
incl
add
in
xchg
fnsave
mov
inc
fcoms
rcrb
sbb
ret
pushf
arpl
mov
and
les
inc
inc
mov
dec
out
int
sub
aad
dec
push
orb
jbe
inc
movsb
lds
mov
inc
mov
loop
push
mov
inc
add
sub
sub
and
decb
out
test
daa
jmp
or
gs
xor
xchg
loopne
sti
pusha
pop
roll
push
mov
fxch
lea
dec
out
inc
xor
int
dec
sti
inc
add
repnz
jae
pop
rcrl
xor
sbb
jns
push
push
std
imulb
cmp
ja
rolb
mov
pop
push
adc
daa
xchg
pushf
je
dec
xchg
xor
inc
fdivrl
int3
rolb
jnp
jnp
mov
jbe
fistl
lret
sbb
loop
popa
mov
cmc
mov
mov
out
fisubl
pop
mov
popf
xor
xrstors
aam
pushf
call
sub
iret
fisubrl
pshufw
mov
rcr
jae
or
pop
or
xor
sub
ss
gs
mov
out
setnp
loopne
lahf
ljmp
lods
push
movsb
cltd
mov
add
jnp
mov
ds
repnz
mov
shll
push
mov
ret
sub
jo
push
jl
and
jg
sub
std
push
dec
test
dec
icebp
push
movsl
scas
adc
jecxz
adc
fstpt
mov
in
or
mov
xor
jne
sbb
leave
pop
inc
inc
or
push
lret
cmpsb
or
pop
cmp
xor
ret
push
mov
xor
jb
shlb
je
fildll
sahf
push
pop
fstpt
sti
mov
xor
xor
sub
xchg
xchg
jno
inc
les
in
or
test
add
lret
icebp
enter
jno
mov
mov
les
ficompl
xchg
push
scas
das
imul
jl
xchg
add
fmuls
lock
nop
call
mov
sti
wbinvd
xchg
xor
pop
inc
ss
cmp
sti
mov
sarl
nop
xchg
inc
xchg
mov
test
dec
out
add
jnp
cli
icebp
pushf
cli
int
call
xchg
ret
stos
out
aas
mov
cmp
clc
popf
in
or
inc
adc
aad
and
fwait
imul
ja
pop
insb
sub
push
les
int
hlt
aad
push
pop
add
push
adc
aaa
sbb
pop
mov
out
stos
xchg
and
js
jnp
sbb
repz
xor
test
test
pushf
test
pop
call
cmp
call
mov
rcr
adc
fiaddl
xor
insl
out
jnp
mov
xchg
mov
int3
push
sub
ss
imul
mov
jae
in
pop
test
jecxz
lods
dec
pop
fdivs
mov
push
mov
es
mov
in
xlat
and
outsb
daa
in
adc
out
aam
sarl
inc
popa
sub
enter
pop
lods
xlat
lods
flds
xor
lgs
inc
ss
or
mov
test
push
in
or
fldcw
mov
mov
xchg
ja
pop
scas
add
std
cmp
add
adc
add
or
push
in
xlat
mov
mov
leave
sub
out
mov
mov
push
inc
subl
push
or
adc
inc
xlat
cmpsl
add
out
rcrb
cmp
and
pop
in
popf
scas
sub
in
mov
xlat
movsl
lods
xchg
xor
sub
mov
mov
inc
push
xor
add
mov
fmuls
inc
dec
push
xchg
movl
jmp
js
lods
push
and
arpl
jmp
jle
daa
and
adc
gs
fcomp
jmp
in
ja
cmp
idivb
pop
jbe
mov
mov
fidivl
push
jmp
pusha
and
sarb
mov
outsl
add
xor
cld
das
mov
jecxz
scas
jge
sub
add
out
in
dec
mov
repnz
in
xchg
pop
push
inc
inc
lahf
pop
jmp
mov
test
sbb
sbb
adc
adc
add
dec
dec
mov
test
out
sub
pop
fistpl
jg
ss
sbb
daa
pop
push
or
daa
mov
cmpsl
push
cmc
dec
mov
shr
lcall
sub
divb
mov
adc
mov
fst
test
cmp
push
mov
pop
pop
mov
ret
sbb
cmp
dec
mov
pushf
mov
bound
jae
and
xor
sub
decl
inc
insl
mov
mov
jae
outsb
sbb
sub
mov
addr16
out
xchg
orl
pop
hlt
fimuls
jle
out
pop
xchg
in
aas
cmp
mov
dec
arpl
dec
loop
inc
pop
loop
jl
aam
out
and
stos
data16
push
lcall
add
push
cmc
mov
mov
mov
mov
dec
xchg
sbb
inc
rcr
pop
dec
mov
or
add
cltd
jle
fisubs
imul
ret
fbld
ret
add
xorl
test
and
xchg
gs
jmp
stc
jo
lcall
jne
jge
das
or
in
lea
push
loope
inc
mov
add
test
push
add
int
in
mov
lods
pop
sbb
cmp
mov
nop
js
out
pop
or
cmpsb
test
dec
stos
call
mov
js
mov
aas
inc
and
pop
and
or
adc
push
or
int
cli
icebp
pop
outsb
add
mov
mov
lds
mov
lahf
xchg
or
inc
iret
inc
pop
lahf
pop
out
pop
scas
inc
ljmp
add
sbb
leave
cmp
cmpsb
jne
push
push
test
orl
cs
aam
lcall
push
js
sbb
jnp
pop
ljmp
lcall
add
xchg
addr16
into
sub
cmp
test
insb
or
rcll
fstps
cmp
pop
stos
test
adc
jbe
xchg
dec
sub
sub
test
sbb
adcl
xchg
adc
inc
pop
cmc
orps
dec
popf
xor
xchg
mov
mov
shlb
lcall
test
jb
or
add
inc
icebp
sub
shlb
test
ffreep
pop
adc
mov
pop
shll
sbb
push
mov
outsb
pinsrw
testb
jl
test
adc
push
loop
xor
jb
xor
adc
xorl
jp
push
sub
test
cmp
xchg
je
inc
popa
aam
sar
pop
pusha
cmp
icebp
sub
push
out
xor
xor
adc
cli
int3
outsb
cmp
movsl
or
sbb
lahf
leave
and
and
les
test
clc
sbb
ds
out
mov
pusha
ds
aad
mov
pop
outsl
fmull
add
cmp
outsl
cmp
insb
insb
repnz
inc
jg
or
xchg
xor
dec
xchg
fwait
aaa
or
adc
in
cmp
inc
cmp
sub
repnz
rcll
adc
xchg
jno
inc
pop
jl
fs
faddl
dec
mov
mov
sbb
sbb
aad
out
js
and
mov
push
inc
cwtl
push
xchg
negb
push
fstl
shr
and
pop
adc
rcr
outsl
xchg
pop
cmp
xor
pop
enter
sub
clc
mov
jmp
mov
je
dec
js
push
mov
adc
dec
cmpsl
xlat
mov
cltd
dec
mov
das
call
dec
cmc
push
inc
addr16
test
call
or
out
movsl
loop
jg
int3
lcall
pop
fsubp
mov
subl
push
jl
fisttpl
or
out
jecxz
xorb
jbe
push
inc
cwtl
push
clc
std
ljmp
shlb
adc
popa
sbb
lret
es
adc
sahf
test
aas
sub
mov
add
aam
jmp
cld
pop
mov
pop
dec
aam
xor
fistps
mov
add
jg
add
sti
xchg
xor
aad
cmp
test
xchg
sbb
jmp
adc
sbb
div
dec
sahf
wrmsr
sub
dec
shlb
movsl
outsb
je
add
or
jae
out
ret
and
fwait
es
jnp
in
pop
lcall
lret
add
xor
in
lahf
fucom
scas
int3
push
mov
ja
sarl
pop
ss
mov
daa
and
inc
inc
test
mov
rcll
sub
cmp
arpl
outsb
and
xor
addr16
jns
jo
push
stc
test
or
rcr
mov
sbb
or
dec
push
test
ljmp
loopne
stos
push
loopne
sahf
sbbb
mov
xor
in
jg
xor
faddl
popf
sbb
fdivs
dec
adc
jle
movsl
dec
mov
lret
xchg
out
cmp
xor
repnz
inc
push
mov
dec
lds
pusha
adc
xchg
pop
lret
fcomi
in
xchg
jge
xchg
mov
or
ret
fwait
insb
or
sub
dec
dec
out
movsl
cltd
pop
loopne
sbb
sbb
int
ds
add
loope
loopne
sbbb
pop
and
xchg
rclb
sub
dec
push
mov
cmp
inc
fsts
jl
stos
hlt
cmp
mov
fbstp
shlb
pandn
ja
push
pop
sbb
mov
dec
ljmp
lods
or
dec
sbbb
mov
ret
ret
push
mov
push
lods
cmp
popa
cmpsl
inc
jne
xor
bound
ja
pop
sbb
clc
cli
outsb
adc
push
lea
jp
bound
add
mov
lahf
ficompl
stos
in
dec
ja
mov
pop
push
adc
jo
icebp
and
inc
add
shl
rcr
stc
popa
push
repz
or
push
pop
icebp
leave
cltd
dec
notl
out
dec
mov
outsl
lods
adc
dec
lods
mov
xor
xchg
imul
sub
mov
sub
push
xchg
mov
mov
sbb
add
xchg
into
repz
andb
pop
xchg
lods
movsbl
adc
mov
jge
mov
xor
and
test
add
cltd
fs
push
cmp
mov
adcb
adc
lods
or
jne
les
mov
pop
push
add
out
test
pop
add
aam
sub
cld
mov
mov
aam
xchg
cwtl
adc
pop
loopne
pop
dec
cmp
jmp
pushf
stc
jnp
addr16
adc
mov
xor
mov
push
inc
xchg
and
lock
ljmp
dec
mov
loope
jnp
push
jns
rcrb
arpl
cmp
xchg
in
int3
inc
or
xor
sbb
pop
inc
int3
pop
addl
addr16
inc
sub
pop
push
jge
fidivrl
ds
and
mov
sahf
jns
test
mov
xchg
sbb
divl
push
pushf
fsubr
insl
mov
pop
jle
xchg
jp
lock
insb
mov
xchg
inc
sbb
fs
fdivl
add
sbb
push
lods
sbb
and
sub
fmul
inc
or
jg
mov
int
and
dec
lahf
icebp
bound
pop
fmull
jg
sbb
xchg
aad
pop
ja
jns
les
or
iret
and
movsb
popf
push
ret
mov
pusha
mov
sti
dec
xchg
scas
jbe
mov
xchg
pop
xor
lret
mov
jns
inc
lods
enter
fldl
jp
xchg
or
cli
push
js
xchg
pop
sbb
mov
popf
mov
dec
xchg
and
cld
mov
daa
out
data16
mov
clc
stc
add
scas
adc
push
mov
push
mov
and
xchg
jle
sub
push
dec
sub
mov
rol
ja
popa
loope
out
mov
jmp
in
cmp
in
inc
sub
cltd
in
jg
ret
gs
call
push
sbb
inc
out
mov
cmp
dec
jl
imul
adc
pusha
repnz
add
shll
ret
push
imul
push
lods
jae
xchg
mov
jecxz
pop
lcall
lea
add
shr
jns
dec
outsb
mov
mov
shlb
lret
pusha
fistl
pop
mov
sbb
or
xchg
popa
jo
into
sbb
mov
push
cmp
stos
gs
fstpl
adc
sbb
xor
dec
enter
mov
mov
testl
lds
or
test
into
push
xchg
std
outsb
scas
shr
sub
daa
test
loop
push
enter
mov
inc
jmp
push
lcall
dec
sbb
shl
sub
xor
dec
xchg
cmp
sbb
lcall
mov
pop
xchg
daa
lods
pop
ss
jns
pop
cmpb
and
icebp
xchg
sub
cld
jle
jo
lock
lea
test
mov
stc
int3
xor
data16
cmp
dec
rol
sti
out
cmp
lods
movsb
inc
fldt
sti
loop
fldenv
inc
iret
daa
shlb
movl
fmuls
cmpsl
sbb
fiaddl
xadd
mov
vpaddb
pop
popf
mov
dec
sahf
jb
andb
outsl
xchg
push
gs
mov
or
mov
or
push
xor
pop
outsb
call
scas
xchg
adc
clc
es
jns
inc
loope
or
push
pop
xchg
int
xchg
aaa
std
lods
mov
push
mov
push
sbbl
jl
popf
in
add
fs
bound
jp
add
lret
xor
rclb
sbb
xchg
les
mov
mov
clc
mov
and
inc
mov
push
sub
into
jle
ret
mov
or
mov
jge
mov
xlat
call
xlat
dec
mov
aas
jmp
cwtl
cmp
movsb
inc
mov
cmp
imull
cmpsl
mov
sub
mov
aas
jmp
xchg
add
xor
mov
xchg
mov
and
push
jge
out
icebp
sti
nop
arpl
cwtl
mov
lods
lcall
inc
xor
sub
cmpl
das
mov
addl
dec
push
and
hlt
push
iret
lock
fisttpl
outsb
shll
add
push
sbb
hlt
mov
mov
sbb
mov
cmp
cmp
push
lea
out
adc
lahf
je
mov
jg
inc
push
cli
cs
fwait
jnp
add
inc
loopne
jbe
ds
adcl
pushf
loopne
mov
xchg
mov
rorl
test
shlb
jle
je
daa
mov
jbe
or
mov
mov
jne
add
and
fldcw
pop
addr16
xor
hlt
xchg
cmp
or
mov
repnz
gs
jle
fwait
mov
xchg
lea
mov
mov
dec
in
aad
mov
jo
lods
sub
test
stos
inc
adc
or
pop
movsl
fistl
lea
add
jne
test
dec
cmpsl
and
pusha
rcrb
test
mov
dec
jo
sbb
ds
pop
pusha
popf
stc
cmc
and
int3
add
aas
test
jne
mov
adcl
ret
ret
stos
sub
or
ss
xor
into
push
cmp
nop
jbe
mov
dec
fucomi
sbb
adc
fisubl
pop
sahf
in
mov
std
sbbw
sbb
inc
mov
push
sub
or
fistps
test
fidivs
dec
mov
jne
push
xchg
or
icebp
enter
jno
push
jnp
shl
sub
mov
adc
pop
cmp
iret
icebp
mov
adc
pop
dec
mov
pop
jl
sbb
xchg
lods
push
nop
leave
push
sbb
icebp
mov
xchg
stc
js
and
dec
pop
shll
pop
addr16
cmp
int3
popf
adc
shll
into
inc
outsb
cmp
jl
sub
das
push
out
jae
or
inc
into
cmp
aad
lock
mov
sub
leave
enter
jmp
push
ss
mov
ret
xor
insb
dec
mov
insl
aad
and
xchg
push
arpl
stos
sub
adc
mov
inc
adc
mov
or
jnp
push
imul
std
shlb
and
mov
push
sub
push
es
add
cmp
adc
leave
sbb
push
inc
in
insl
xchg
aaa
pusha
jp
roll
dec
jae
xor
fwait
pusha
call
out
add
add
fmulp
and
or
xchg
lods
sti
insl
fstpl
out
popf
push
outsb
adc
es
sub
aas
lods
inc
insl
jg
sub
inc
push
mov
aad
fsubrs
push
or
insb
insb
push
lret
mov
cwtl
stc
or
test
fdivr
pop
add
mov
fisttpll
dec
jp
dec
shl
lahf
push
xor
pop
pop
ds
addb
lock
mov
xor
mov
lret
jge
fmul
fidivrl
aas
dec
dec
and
or
jo
cld
or
bound
shrl
or
cmc
cmpsl
shrl
dec
xchg
leave
shrb
sbb
mov
hlt
or
out
das
test
cmp
dec
aas
mov
jbe
sub
frstor
jo
push
shll
inc
insl
sbb
mov
pop
push
adc
inc
fcmovne
lods
ss
fistpl
daa
push
mov
jl
sub
int
jecxz
fistps
pusha
inc
rcll
fwait
adc
pusha
shrd
jne
sub
ds
sub
mov
mov
hlt
or
test
int
enter
add
jle
mov
daa
loope
fldl
cmc
inc
add
xor
dec
int3
mov
int
int
and
mov
mov
push
jo
std
out
shrb
addb
cltd
mov
ds
jg
jbe
into
mov
add
js
imul
enter
mov
add
push
sub
mov
imul
lods
into
xchg
fwait
mov
ja
shlb
loope
add
push
inc
lret
cmp
pop
popf
aad
loop
sbb
pop
mov
movsl
or
cmp
sub
imul
lods
xor
or
xchg
cld
mov
mov
add
rclb
adc
xchg
dec
aaa
add
inc
dec
shll
std
xlat
push
and
add
pop
mov
xlat
stos
jb
sbb
push
pop
pop
pop
icebp
cwtl
and
popf
int3
cmp
adc
aaa
in
add
nop
inc
cmp
sahf
movb
sti
push
test
push
in
popf
push
xor
in
adc
pop
test
sbb
or
les
xor
ljmp
bnd
ljmp
pop
and
cmpb
dec
mov
faddl
mov
mov
les
mov
dec
jle
or
inc
xchg
or
andl
push
xchg
sub
insb
adc
das
andl
jb
cmp
ljmp
mov
sbb
ds
scas
mov
pop
mov
sub
push
xlat
outsl
jne
dec
daa
enter
or
cmp
insl
mov
outsb
and
pushf
jo
mov
mov
mov
mov
popf
cmp
jo
jle
mov
and
xor
sbb
inc
mov
pop
repnz
nop
and
arpl
sbb
jno
cmc
pop
aad
ret
mov
aas
lods
test
xchg
mov
je
push
xor
pop
or
dec
js
aam
mov
push
dec
inc
xor
cwtl
push
in
jbe
out
addb
push
into
int
daa
les
movb
in
es
aad
sbb
rcr
cmpsl
cmp
sub
inc
xor
mov
sbb
xor
add
push
sbb
out
jo
shl
mov
sbb
inc
mov
adc
les
fsub
inc
ja
mov
mov
or
pop
xchg
and
jle
push
mov
aam
xor
jmp
xor
push
test
inc
push
cmp
sbb
sti
sub
mov
stos
in
mov
stos
inc
add
mull
arpl
push
mov
popa
add
movb
push
repnz
popf
jl
cmp
add
pop
jl
push
add
inc
push
add
loop
loopne
ret
push
ljmp
cmp
mov
divl
jae
jae
inc
in
iret
xchg
xor
inc
dec
jns
dec
in
dec
pop
mov
out
xchg
jae
loope
adc
xor
cmp
fisttps
mov
sahf
and
sbb
loopne
xlat
out
push
pushf
popa
jns
jbe
imul
cmp
mov
mov
jbe
mov
lds
add
mov
pop
cld
sbb
lcall
cwtl
add
mov
adcl
aaa
fiaddl
pusha
push
js
fdivp
jmp
dec
out
add
mov
mov
or
movsb
outsl
test
iret
cld
scas
fiadds
cmp
xor
push
popf
arpl
fcoms
in
mov
xor
mov
and
cmp
mov
ds
shrl
cwtl
push
in
ret
int3
fstpl
push
pop
popa
sbb
je
nop
mov
mov
popf
xchg
sbb
or
repnz
stos
mov
dec
call
lea
mov
out
inc
or
add
jmp
add
loop
inc
fisubrs
pop
push
rcl
xchg
vpaddsw
popf
sahf
inc
mov
loopne
arpl
in
ljmp
cmp
ljmp
xor
fnstcw
inc
add
fdiv
mov
in
sar
sub
push
rorl
cwtl
dec
lea
inc
xchg
cs
push
clc
iret
cmpb
mov
xchg
add
test
or
and
fnsave
and
mov
aas
adc
adc
nop
xchg
cltd
mov
push
rorb
clc
pop
rclb
imul
insl
repnz
sahf
sbb
lret
daa
mov
adc
out
dec
fs
mov
inc
cmovae
testb
or
mov
inc
cmp
into
adc
sbb
outsb
hlt
punpcklwd
cmp
pop
mov
xchg
cmpsl
sbb
lods
clc
xchg
adc
adc
fnstsw
xchg
jmp
pop
fs
fisubl
ljmp
jmp
inc
mov
das
dec
pop
jle
add
hlt
out
popa
shrb
dec
cltd
sbb
sbb
ss
pop
ds
cmp
ss
std
fistl
mov
push
push
aad
addl
les
push
adc
inc
test
xchg
xchg
xlat
jge
sub
jb
aad
jge
push
push
sbb
mov
push
in
sahf
dec
int
lret
sbb
pusha
test
pop
test
push
xor
lods
scas
clc
pop
xchg
loop
aaa
pop
fcmovne
and
cmc
dec
sub
nop
addr16
or
sub
push
clc
test
aad
test
mov
xlat
dec
push
sbb
fbld
sub
icebp
aad
jecxz
pusha
aam
aad
stc
aaa
fcoml
mov
insb
xchg
jge
js
xchg
dec
jl
aad
imul
xchg
jbe
mov
mov
or
es
xchg
pop
adcb
repz
sbb
mov
stc
scas
jne
jae
pop
shrb
stc
sbb
and
jmp
mov
aam
add
scas
out
dec
or
push
mov
loop
cmp
and
lret
fdivrs
add
push
xchg
insl
ljmp
popl
xchg
mov
nop
xchg
dec
jl
shr
pop
jnp
outsl
int3
jp
mov
clc
out
jns
sarb
dec
insb
daa
inc
inc
xchg
test
dec
push
push
je
mov
dec
test
mov
sahf
mov
xor
pop
sub
psubd
adcl
dec
aas
or
sub
and
mov
cmpl
iret
cmc
add
add
in
dec
xor
push
sub
in
ja
les
lds
js
inc
inc
push
sbb
jb
lock
pop
iret
in
lods
inc
data16
mov
je
pop
mov
jae
adc
or
adc
mov
jne
mov
cld
leave
sbb
aam
or
add
jmp
rcrl
add
es
and
fs
addr16
cmp
test
sub
and
inc
push
shlb
sub
data16
xchg
mov
insb
loope
xchg
push
jp
ss
or
outsb
and
cmp
push
loop
adc
ss
pop
mov
pop
or
mov
xor
scas
sbb
cmp
mov
add
jecxz
xchg
sbb
push
lea
enter
arpl
in
inc
inc
aas
or
into
pop
sub
nop
lock
cld
mov
mov
sti
call
outsb
pop
pop
std
fcoml
pushf
outsb
pop
xchg
loop
int
jmp
stc
or
rorl
mov
mov
xor
es
movsl
and
add
lods
pop
ret
aas
jae
sbb
cmp
sbb
lret
dec
fwait
mov
lahf
push
mov
lods
jbe
pop
mov
in
or
jbe
and
aad
ss
ja
outsb
bound
dec
mov
out
mov
xor
fists
pop
aaa
dec
sub
fnstcw
dec
aas
cmpsl
add
and
je
mov
xlat
scas
or
sbbb
mov
int
outsb
push
push
fwait
mov
sub
mov
jp
push
add
ss
cmp
push
dec
push
dec
data16
push
sub
jnp
aad
adc
push
dec
dec
loop
ss
ret
jecxz
bound
sbb
out
dec
stc
xchg
dec
adcb
dec
lret
icebp
lcall
and
iret
pop
clc
push
sbb
xchg
jmp
xchg
and
jp
jge
mov
and
into
ja
pop
loopne
insl
mov
mov
imul
aaa
fdivrs
xor
mov
stos
mov
jb
arpl
jmp
or
es
xchg
shlb
push
fwait
xor
add
lahf
fwait
andb
pop
push
insb
inc
leave
insb
andb
cli
pop
mov
or
sub
gs
mov
push
popa
sbb
jl
and
jge
pop
mov
lret
dec
dec
jge
pop
xorl
aam
jp
testb
fcompl
leave
loop
fucomi
and
scas
cmpsl
mov
mov
pushl
dec
mov
xchg
decb
cmp
outsl
pop
push
jo
sbb
jge
outsl
mov
repnz
rcr
pop
or
adc
cs
in
ljmp
jbe
jecxz
sub
jp
push
xor
dec
cld
and
or
jo
and
xor
mov
ds
xor
adc
sbb
sub
stc
mov
sbb
jl
xchg
jge
or
mov
loop
sti
adc
sub
xor
push
inc
fwait
inc
iret
or
pop
sbb
mov
cmpsb
pop
jge
xchg
pop
decb
push
xchg
push
frstor
xor
js
mov
in
sub
cs
mov
push
call
push
mov
ret
aam
fcmovnbe
xchg
fnstenv
int3
leave
movsl
push
xchg
sbb
shr
adc
data16
push
mov
push
and
idiv
imul
lret
cltd
add
pop
loopne
call
movzwl
mov
adc
mov
jecxz
push
xorb
fstpl
add
gs
inc
int
inc
mulb
nop
adc
shll
ja
inc
add
aaa
pop
mov
mov
bound
cmp
insb
pop
mov
dec
iret
mov
pop
jnp
xchg
add
add
imul
subl
rorl
setp
pop
test
int3
into
add
in
add
outsb
imulb
mov
mov
es
pop
sahf
push
aam
loopne
and
fstpt
subl
and
cmpsb
jl
aaa
imul
std
mov
adcb
icebp
jne
sub
cwtl
call
aam
mov
repz
push
cmpb
rcrl
mov
or
imul
cmp
cmp
mov
and
imul
das
jecxz
and
mov
cld
or
std
js
lods
push
sub
mov
sbb
add
fcomps
push
outsb
outsb
sti
outsb
call
loope
dec
mov
sbb
je
or
negl
inc
pop
js
rcrb
pop
jnp
subl
neg
repz
lahf
push
bound
pop
fiadds
dec
adc
nop
sbb
scas
xchg
out
jae
mov
aad
aaa
cmp
push
jp
ds
xchg
xlat
xchg
popa
rorb
clc
sub
popf
or
xor
testb
aaa
sahf
cwtl
pop
xchg
lahf
pop
mov
std
push
mov
js
lret
arpl
int
mov
lods
or
lock
cmp
and
aaa
mov
ljmp
jno
test
fisubl
pop
into
push
mov
pop
jnp
inc
jae
pop
mov
das
xchg
lret
jnp
push
cmp
out
push
adc
test
aaa
pop
out
jne
dec
mov
loopne
push
flds
jo
mov
ret
lret
cmp
outsl
fnsave
xlat
sub
imul
mov
stos
data16
shll
or
jecxz
add
xchg
cltd
icebp
sbb
sbb
add
dec
popf
xchg
jb
arpl
addb
stos
add
cwtl
notb
mov
and
mov
jp
lods
push
cmp
push
cmp
icebp
or
fwait
in
xchg
pop
imul
shlb
adc
jae
sbbb
out
push
dec
push
in
imulb
sbb
adc
xor
pop
jge
ss
xor
aaa
fidivrl
sub
outsl
inc
mov
sub
cwtl
cld
pop
sub
cmp
xorb
and
mov
test
adc
mov
ficomps
jge
or
dec
repnz
inc
rorl
movsl
adc
inc
push
push
ja
fisubrl
out
daa
sti
pop
cld
mov
fs
icebp
mov
xchg
aad
xlat
cmpsb
mov
dec
cltd
ja
stos
or
fsubr
sub
cmc
pop
cld
in
imul
xchg
and
stos
adc
sub
cwtl
xchg
insl
xchg
push
or
je
nop
daa
push
fistl
rol
cmovs
or
xchg
dec
add
jae
hlt
jo
pop
and
ffree
repnz
mov
jp
out
mov
add
gs
mov
xchg
mov
or
pop
int
jmp
stos
cmp
sub
xor
daa
loope
dec
mov
int
je
add
sbb
pop
sub
inc
daa
cmc
cltd
.byte
