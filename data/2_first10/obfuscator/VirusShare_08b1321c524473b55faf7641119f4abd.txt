add
inc
inc
inc
inc
adc
movsb
ret
and
enter
testl
inc
inc
inc
xor
lret
pop
add
push
add
inc
dec
testl
mov
inc
dec
testl
or
add
mov
xchg
insb
or
add
notl
add
xchg
xor
xchg
add
les
add
add
and
add
mov
push
inc
inc
inc
test
mov
pop
inc
inc
inc
inc
test
mov
movsb
ret
and
enter
xor
les
dec
inc
inc
inc
sub
lret
les
dec
test
inc
xchg
int3
push
push
lret
enter
mov
xor
sub
jmp
add
adc
mov
add
mov
jns
inc
inc
inc
test
inc
inc
inc
inc
adc
movsb
ret
and
enter
inc
inc
inc
inc
lret
cmc
sub
mov
mov
adc
dec
testb
sbb
xor
inc
adc
testb
add
inc
xor
dec
testb
lret
lret
int3
adc
enter
push
cmpl
xor
enter
dec
jo
mov
lret
inc
cmp
lret
adc
push
test
ret
sbb
lret
clc
inc
inc
inc
inc
mov
and
add
mov
fisubs
inc
inc
test
inc
inc
inc
inc
test
inc
inc
inc
inc
test
mov
aam
inc
inc
inc
mov
inc
adc
push
jo
int3
dec
push
nop
add
test
jo
inc
adc
lea
mov
je
pop
add
cmpb
add
inc
inc
inc
push
test
push
test
sub
inc
inc
test
les
adc
or
inc
sub
push
add
test
lret
inc
or
inc
adc
inc
inc
inc
sub
add
test
lret
inc
inc
inc
inc
adc
outsb
inc
inc
inc
sub
push
add
test
lret
inc
outsb
inc
inc
inc
adc
roll
inc
sub
test
push
lret
inc
inc
roll
inc
enter
inc
inc
inc
sub
test
inc
inc
pop
mov
add
cmpsb
jecxz
inc
inc
inc
adc
movsb
ret
and
enter
add
dec
notb
mov
xor
inc
add
notb
mov
xor
lret
jp
dec
xor
add
lret
andb
mov
mov
or
inc
inc
inc
inc
adc
movsb
ret
and
adc
lret
inc
inc
inc
push
enter
js
cmp
sub
dec
inc
inc
inc
lret
les
mov
dec
inc
inc
inc
sub
dec
inc
inc
inc
clc
push
inc
inc
inc
mov
and
xchg
push
int3
aad
dec
inc
inc
inc
lret
nop
test
stos
cmc
lret
lret
inc
inc
inc
or
jo
js
dec
int
inc
inc
inc
enter
xchg
add
lret
inc
inc
inc
sub
lret
inc
inc
inc
inc
subl
push
inc
add
int3
rorl
inc
enter
mov
dec
enter
add
sub
lret
inc
inc
inc
js
cmp
pop
stos
stos
mov
mov
mov
xchg
push
inc
adc
int3
rorl
inc
inc
enter
mov
inc
xor
int3
testl
mov
and
xchg
push
inc
adc
int3
rorl
inc
inc
lret
enter
dec
jo
enter
or
test
mov
dec
lret
inc
inc
mov
js
adc
mov
sub
mov
mov
jle
scas
xor
jg
mov
lods
aaa
mov
xor
scas
mov
mov
mov
cmp
mov
ja
mov
push
mov
inc
inc
inc
mov
std
mov
std
mov
aam
inc
lret
mov
pop
inc
inc
inc
cmp
aam
mov
aaa
js
lret
mov
shlb
ret
mov
jle
push
jp
inc
inc
cmp
cld
aaa
jns
test
insb
lret
mov
jmp
xor
mov
mov
mov
pop
mov
inc
mov
sti
mov
jle
in
out
jmp
inc
in
mov
mov
insb
loopne
js
push
pop
fbstp
mov
stos
mov
mov
std
mov
mov
dec
jmp
pop
cmp
jle
sti
inc
xor
mov
cmp
stos
xchg
jl
aaa
out
mov
scas
mov
cmp
mov
out
mov
mov
out
mov
push
xchg
jl
push
mov
push
push
mov
cmp
mov
push
xchg
jl
push
mov
lret
mov
jmp
add
inc
jmp
jle
mov
inc
lret
mov
fadds
inc
mov
test
inc
repz
mov
cmpb
sti
lret
mov
cld
xchg
mov
fbstp
lret
jmp
ja
jp
ja
loopne
push
mov
inc
ja
cmpsb
mov
mov
aaa
pop
fimuls
lret
jmp
push
jg
pushf
cld
mov
repz
lahf
aaa
jmp
inc
repz
pushl
repz
pusha
fbstp
mov
fisubrs
mov
aaa
pop
cmp
inc
stc
xor
pop
mov
mov
aaa
sti
inc
cmp
loop
or
cmpl
mov
stos
mull
jmp
mov
mov
cmpsb
mov
mov
stos
repz
mov
lret
jmp
mov
ja
insl
push
xor
insb
xchg
mov
mov
js
ds
push
fbstp
mov
mov
aaa
pop
cmp
lret
mov
ret
scas
aad
scas
mov
mov
mov
or
std
xchg
lret
test
mov
add
test
pop
cltd
mov
addl
add
mov
addl
add
faddl
mov
dec
std
xchg
lret
test
mov
add
test
pop
cltd
mov
addl
add
leave
loop
cltd
mov
addl
add
lea
les
sbb
mov
dec
cltd
add
mov
add
jns
pop
xor
sub
add
cltd
mov
add
jge
ret
lea
rorl
add
jns
cltd
mov
inc
dec
test
mov
cwtl
lret
add
jmp
jne
faddl
xor
faddl
mov
sbb
jbe
dec
std
mov
int3
jne
add
jne
dec
lea
mov
mov
jbe
mov
xor
mov
or
jmp
jne
push
jbe
jbe
dec
or
std
roll
cld
xorl
mov
xchg
leave
mov
test
leave
mov
fdivl
enter
add
mov
mov
mov
mov
jne
outsl
fisubs
jbe
jbe
mov
add
sbb
jbe
bound
fisubs
jbe
jbe
cld
addl
mov
inc
dec
lea
mov
push
ret
xor
adc
lea
int
mov
mov
enter
mov
or
cwtl
leave
mov
mov
cwtl
lret
add
int3
orl
loope
or
push
inc
dec
lea
orb
jbe
faddl
insb
or
jmp
mov
jbe
jbe
dec
xchg
add
jne
dec
add
test
test
dec
add
orl
dec
into
lea
jbe
or
dec
into
test
pop
lret
add
addl
or
dec
into
test
fiadds
lea
orl
xor
popf
push
dec
mov
mov
push
dec
mov
mov
ret
add
jo
add
jne
dec
pop
cld
dec
lahf
lea
insb
jmp
cld
test
les
inc
dec
test
stos
dec
lcall
sbb
cmp
fld
mov
push
rcr
notl
pop
ret
push
dec
dec
cmc
pop
cmpsb
inc
sbb
icebp
pop
add
pop
sbb
cs
dec
jb
ds
lret
jl
movsl
lea
sbb
push
or
sti
lods
xlat
add
sbb
or
push
fs
lret
ljmp
repz
cmp
xchg
pop
cwtl
mov
fsubrl
lods
aas
or
leave
test
xlat
dec
testl
int3
and
mov
jp
inc
ss
inc
mov
loopne
divb
loop
pop
gs
and
dec
frstor
push
.byte
.byte
sahf
.byte
push
testl
and
add
add
add
jmp
add
cmp
je
jmp
jmp
inc
inc
push
add
shlb
add
add
mov
adc
add
mov
mov
lahf
leave
mov
add
lret
add
push
push
adcl
add
add
add
push
add
xchg
and
add
add
add
push
push
push
call
lea
mov
sub
xchg
push
lods
mov
lods
mov
lods
mov
lods
mov
lods
push
xor
sub
xor
mov
push
call
ror
pop
dec
jecxz
jmp
push
xor
xor
xor
xor
pop
mov
test
je
mov
xor
mov
inc
loop
pop
loop
add
call
xor
xor
popa
ret
push
mov
pusha
mov
mov
mov
lea
imul
xor
popa
leave
ret
mov
mov
cld
mov
mov
cmpb
add
mov
add
inc
inc
inc
jo
mov
mov
clc
inc
inc
mov
inc
in
xor
int3
mov
dec
int
xor
mov
mov
mov
int3
mov
insb
inc
inc
inc
xor
mov
test
mov
xorb
shrb
xor
scas
mov
mov
inc
cmp
int
xor
shrb
xor
mov
cmp
mov
pop
pop
xorb
call
mov
sub
inc
out
outsb
test
mov
fdivs
mov
xor
fnstenv
pop
mull
sbb
mov
mov
push
mov
push
xor
inc
cwtl
pop
and
xor
sbb
sbb
cmpsb
or
movsl
xlat
inc
adc
cmpsl
insl
jbe
adc
insl
rcl
push
imul
and
and
testl
mov
clc
test
shl
push
mov
mov
repz
lret
ret
cmp
dec
cmp
mov
sub
mov
mull
test
stos
mov
aaa
inc
or
pop
adc
pop
jno
lea
pop
std
lods
and
push
add
lcall
loop
stos
mov
mov
inc
inc
inc
inc
ljmp
out
inc
and
sub
cmp
push
add
fistl
dec
cwtl
aas
lret
je
jae
fs
std
jbe
jmp
cmp
popf
or
in
adc
mov
mov
sti
jo
ret
mov
inc
out
leave
popf
sbb
add
mov
and
std
adc
dec
rorl
pop
rolb
cmc
cmpsl
push
fs
dec
data16
xchg
bound
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
lds
pushf
jmp
jno
sub
nop
dec
les
mov
outsb
cwtl
testb
cs
mov
pusha
inc
es
movb
sub
cmpsb
jge
popf
dec
adc
push
add
push
arpl
xchg
push
inc
clc
pop
scas
out
inc
dec
fincstp
sti
sbb
daa
jo
lret
xchg
mov
xchg
call
dec
pushf
add
push
shl
add
mov
sti
pop
dec
ror
adc
insb
bound
sbb
enter
cltd
jge
sub
pop
and
repz
sbb
pushf
cmc
pop
and
sub
adc
add
sub
inc
mov
jbe
xchg
ret
cmp
or
mov
inc
sub
xchg
push
mov
std
bound
sub
ljmp
xor
cmp
insl
imul
shlb
dec
push
rcl
sub
in
rcrl
mov
addr16
push
in
adc
and
insb
icebp
sbb
loopne
ficomps
push
jecxz
in
lds
mov
pop
or
mov
lods
and
test
push
scas
test
in
fcomi
sub
mov
cmp
pusha
xor
mov
push
inc
pushf
mov
cltd
mov
sbb
mov
in
rcrb
cmp
shrl
mov
ret
and
outsw
out
mov
out
inc
mov
iret
jo
cmpl
pop
mov
push
jb
daa
fs
in
sbb
xor
aas
aas
xor
scas
adc
es
add
stc
mov
loope
inc
fistps
and
xchg
imul
jle
push
loop
popa
push
dec
push
stc
out
push
outsl
xchg
in
push
push
mov
into
loopne
out
dec
lret
jnp
cmp
add
dec
cmc
sbb
push
push
dec
mov
movsb
pop
adc
pop
xchg
cmc
outsb
data16
inc
inc
push
addr16
rcrb
loopne
ljmp
decl
out
pop
iret
push
ret
bnd
dec
jl
outsb
dec
pop
loopne
xor
xchg
daa
jno
loopne
pop
iret
outsb
xor
cmp
mov
subl
shll
mov
cli
hlt
mov
jl
xor
aas
sub
xor
mov
clc
xchg
sub
push
out
das
cmc
cmp
clc
fistpll
leave
lret
pop
cmp
jecxz
stos
stos
addl
mov
mov
outsl
movsb
mov
mov
pop
sti
lods
mov
xor
lret
push
lcall
es
loope
add
ds
lret
out
pop
pop
test
push
mov
andb
inc
inc
mov
mov
test
mov
enter
lock
jnp
pushf
aaa
pop
mov
sub
mov
shr
arpl
cltd
jp
das
jns
ljmp
add
insl
scas
sbb
mov
mov
sub
jmp
mov
cmp
pushf
mov
pop
sub
mov
xchg
sub
jmp
cwtl
cmp
sbb
orb
adc
jg
and
xchg
xchg
sti
xchg
out
sbb
scas
outsb
lods
xchg
cmc
sub
divl
cwtl
cmp
idivb
mov
mov
xchg
sti
mov
pop
cmp
fbstp
sahf
mov
pop
cmc
sub
xchg
mov
mov
es
push
ljmp
das
call
pop
push
das
xchg
fistpl
insl
cmp
sti
xor
jmp
cltd
sub
scas
push
inc
ret
cs
ss
or
not
xchg
lods
jecxz
in
aas
outsl
mov
mov
test
test
pop
sbb
call
mov
xor
jle
cmp
dec
adc
stos
stos
cltd
std
ds
stos
mov
lcall
xor
sbb
fisttps
bound
dec
popf
mov
ss
jmp
add
xor
add
dec
and
outsb
dec
lods
fbstp
andb
outsl
xchg
jle
ja
cmpsl
rcrb
dec
sahf
push
lock
lods
add
cmp
mov
inc
push
and
inc
and
ret
push
xchg
out
and
fstps
aad
fiadds
add
pop
lds
or
loop
pop
jge
xchg
ja
shlb
test
and
pop
jae
push
int3
gs
mov
push
outsl
xor
dec
fisubrs
xor
and
mul
sahf
std
ret
dec
add
push
out
dec
or
inc
cwtl
out
xchg
jmp
and
shl
cmp
insl
dec
add
fdiv
outsb
fildl
add
data16
or
push
test
es
clc
push
and
imul
add
jae
addr16
sahf
and
xchg
shrb
and
fimull
and
ret
fdivs
inc
ret
pusha
cmp
les
pusha
aad
cmp
push
xor
sub
adc
or
jo
rcrb
rorl
fistpl
pop
cwtl
loope
rolb
je
adc
aad
repz
and
xor
cs
nop
or
push
fdivl
pop
repz
mov
inc
push
cwtl
repnz
aad
sub
inc
int3
add
dec
test
push
out
jno
push
mov
sbb
add
mov
lret
fldl
xchg
ffree
lret
fadds
rorl
imul
pusha
out
xor
add
andl
and
mov
xchg
and
or
and
lock
push
mov
neg
jg
cmp
das
test
dec
repnz
and
loope
sbb
mov
lahf
push
add
imul
or
das
andl
int3
fs
mov
or
mov
andb
mov
in
or
cmc
das
outsb
xchg
push
pop
pop
jns
inc
mov
aaa
mov
rcr
jb
xchg
stos
lods
sbb
mov
lds
inc
and
push
cltd
out
inc
pushf
ss
lods
imul
cmp
cmp
jo
mov
cmp
outsl
inc
inc
push
movsl
aad
decl
test
mov
sbb
popa
leave
cli
jmp
js
add
pop
mov
mulb
repnz
sbb
imul
out
out
push
mov
mov
jno
add
push
cmpl
decl
and
or
pop
mov
mov
test
xchg
fmuls
jno
insl
add
adc
xor
jo
jle
adc
stos
out
test
adc
lret
xor
xor
fimuls
push
adc
push
adc
sahf
jg
pop
shll
divb
add
stos
add
mov
dec
es
fcoml
testl
js
cmp
pop
icebp
movsl
sbbl
imulb
push
es
stos
mov
filds
cmp
ss
dec
xchg
imul
and
push
imul
jnp
cmovae
sbb
dec
and
mov
enter
or
and
ds
push
mov
cmp
dec
fwait
cmpl
fdivl
adcb
stos
cmp
add
or
or
pop
xchg
jg
inc
cli
into
out
lret
or
outsl
cs
mov
jnp
cltd
std
das
mov
out
mov
push
sbb
je
mov
mov
mov
jo
in
daa
lock
rorb
and
pop
jnp
push
sti
cli
into
aas
cwtl
adc
xchg
mov
mov
ja
xor
ret
fdivrs
mov
jl
fcomps
or
xor
mov
cmp
add
cmp
mov
push
cmp
js
nop
stos
mov
xor
dec
js
sub
mov
cld
inc
cmp
jo
lcall
jle
cmc
xor
mov
jl
pop
call
fnsave
in
je
enter
jg
pop
mov
mov
or
xlat
ret
mov
jae
jb
test
mov
in
mov
jge
std
repz
pop
mov
or
jne
je
cmpsb
leave
imul
cmp
push
cwtl
or
mov
xlat
stc
cmp
insb
aas
sbb
pop
mov
pushf
jge
inc
inc
or
int
into
js
xor
inc
fwait
das
cmp
xor
js
leave
cli
enter
fidivrl
mov
pop
xchg
das
lea
lahf
or
out
fwait
mov
mov
lock
icebp
push
ja
lahf
lcall
lock
add
lods
int
imul
cmp
xor
mov
pop
insb
jecxz
stc
adcb
cmpsl
xchg
dec
jle
pop
lods
idiv
test
in
int3
sbb
cmp
arpl
xor
mov
mov
aas
lret
ret
xchg
mov
add
mov
sub
into
popa
mov
inc
jecxz
lods
test
ljmp
inc
mov
mov
fldt
imul
testl
loopne
jge
arpl
pop
sti
loop
addr16
mov
jle
fildl
ret
into
xor
mov
cld
aas
into
pop
pushf
divb
loop
cmp
and
imul
cmp
jno
push
out
out
cmp
mov
xor
aam
pop
sbbl
pop
mov
add
fsubrs
cli
and
add
push
mov
insl
xchg
lock
mov
sbbl
lods
sub
mov
push
push
test
popf
fmuls
jle
rorl
out
iret
xchg
hlt
cmpsb
adc
mov
arpl
movsb
xchg
lcall
sbb
das
adc
adc
js
xchg
sub
cld
cwtl
std
jle
xlat
inc
sbb
push
pop
sti
loop
stos
pop
mov
cli
adc
add
sub
sbb
sub
sti
jb
xor
mov
mov
outsb
xchg
or
sub
ficompl
mov
scas
push
ret
mov
movsl
in
sub
lahf
in
idivl
jns
mov
mov
fsubl
mov
cmpsb
mov
xchg
sub
mov
fistpll
out
mov
mov
mov
repz
xor
in
pusha
xor
rcrb
pushf
mov
add
cmp
jo
orl
mov
repnz
push
mov
xchg
sbb
mov
sub
mov
push
mov
js
push
cmp
ret
imul
xlat
jnp
pushl
pop
aad
jmp
jg
xchg
ljmp
adc
push
repz
outsl
lahf
mov
push
cltd
fnstenv
cltd
divb
aad
xchg
in
mov
scas
aad
pop
iret
cmp
movsb
mov
es
scas
mov
jmp
push
pop
movb
sub
pop
sti
xor
jecxz
out
dec
ss
mov
jb
adc
addr16
ret
sub
mov
mov
push
mov
adc
aas
sub
stc
jo
leave
in
adc
jb
frstor
mov
xor
sub
sbb
xchg
cmp
out
jecxz
cmpsl
fucomp
pop
stos
mov
mov
je
ja
mov
lret
out
mov
or
pop
aam
push
lods
add
imul
pop
rcll
in
stc
xchg
sbb
cmpsl
push
rorl
xchg
lret
mov
std
push
jb
cli
in
cvttps2pi
fdivp
adc
gs
pop
lahf
dec
xchg
inc
je
and
bound
repnz
popa
bound
mov
out
mov
sarb
lea
mov
xor
sar
dec
loopne
cmpb
and
and
cmp
dec
insb
test
jmp
dec
mov
xchg
jmp
sbb
jmp
add
les
dec
cmp
jge
mov
lds
test
loopne
mov
dec
pop
xchg
adc
data16
inc
pop
cmpsb
jb
jp
lret
cmp
push
pop
push
dec
arpl
hlt
or
or
xor
lret
adc
bound
cmpsl
jno
pop
xor
mov
stc
xor
jae
rorl
jo
pusha
jo
lods
shll
subb
xchg
filds
or
sub
push
dec
mov
dec
dec
ja
mov
repnz
xor
or
pop
test
scas
inc
push
mov
stc
mov
jbe
xchg
jmp
movsb
jmp
cmp
movsl
aad
add
lock
mov
inc
adc
ds
in
loope
add
fidivrl
mov
cmp
fldl
add
test
sbb
int3
in
shll
leave
gs
clc
xchg
adc
std
push
or
mov
pop
pop
push
mov
insl
and
pop
and
pop
sbb
mov
and
daa
lds
enter
jo
sahf
xchg
pop
ret
inc
sub
push
out
insb
xchg
stos
maxps
repnz
popf
xor
xor
int3
pop
js
aam
addb
cmc
cmpl
cmpsl
daa
pushf
test
lcall
xchg
mov
int
inc
test
sti
add
fistpl
jno
or
lret
jmp
ret
bound
mov
pusha
xchg
popf
fbstp
and
push
out
mov
inc
cmc
sahf
imul
int
add
nop
xchg
ret
testb
push
mov
loopne
mov
orl
jnp
nop
data16
adc
mov
fidivrs
std
dec
test
mov
lret
ljmp
xchg
call
ljmp
dec
loopne
push
jno
js
insb
xor
xchg
mov
mov
sahf
pop
orb
sub
mull
daa
out
jp
lret
or
js
inc
push
push
rcrb
mov
scas
or
cmp
fistpl
insb
mov
or
lods
xchg
and
adc
mov
insl
cli
fwait
loopne
inc
into
xor
sahf
loop
xor
inc
insl
hlt
out
jmp
push
jae
test
imul
xor
or
out
lahf
fdivrl
sbb
mov
adc
dec
insl
xor
xchg
clc
lret
fwait
arpl
mov
pusha
adc
inc
adc
xor
gs
sbb
outsl
adc
or
mov
dec
push
cld
repnz
scas
mov
xchg
mov
add
es
roll
push
ljmp
cwtl
mov
cwtl
pop
fwait
stos
out
das
shl
mov
lret
clc
mov
test
mov
sti
mov
test
out
sti
fcmovu
repz
fcmovnu
dec
xchg
popa
into
cltd
sbb
xchg
xlat
mov
add
or
mov
push
outsl
inc
call
push
jmp
xorl
lea
sbb
cwtl
out
repnz
mov
shlb
mov
push
fildl
pop
adc
cmp
icebp
dec
xchg
outsl
jae
pushf
fwait
sbb
ficoml
int3
push
lods
xor
mov
xor
push
fidivl
cmp
in
out
add
inc
pushf
dec
sbb
jns
std
cwtl
bound
loop
int3
iret
in
pop
or
testl
cmp
pop
in
adc
outsb
dec
hlt
out
jo
insl
mov
ljmp
repnz
insb
mov
test
pop
jecxz
mov
pop
sub
push
mov
mov
popf
outsl
imul
daa
xor
stos
fnstsw
jbe
mov
jae
xlat
lods
repz
cmp
popa
mov
cmc
xor
and
or
shrl
lock
lret
aaa
or
cmp
add
scas
enter
fldenv
fidivs
js
sub
jns
dec
bound
mov
movsl
mov
mov
jbe
cmp
cs
dec
mov
sub
push
jae
pop
adc
cmp
sbb
es
movsb
pop
aad
xor
mov
je
push
sbb
push
add
or
xlat
mov
sbb
add
in
shll
imul
mov
pusha
jmp
cmp
lret
cs
mov
sub
test
mov
jg
mov
test
movsl
mov
scas
mov
add
aam
fsubrl
sub
pushl
and
xchg
mov
andb
orb
int3
out
push
iret
sti
andl
test
cmpsb
xor
sub
cwtl
mov
mov
in
cmpsl
pushf
or
mov
inc
sar
inc
test
jo
push
scas
sahf
or
adc
sbb
mov
adc
fcmovnbe
ret
fwait
cmp
mov
sub
mov
xchg
ss
cwtl
inc
lea
xchg
xchg
or
lret
rclb
pop
push
xchg
cmpsb
mov
push
cld
daa
ret
iret
xlat
cmp
sahf
scas
mov
sbb
cmpsb
cmp
cmp
xchg
xchg
or
push
or
in
imul
imul
push
movl
int3
jle
push
sub
push
mov
pop
js
lods
js
xchg
mov
pusha
inc
pop
pusha
js
pop
sub
mov
in
cltd
jl
scas
dec
cld
pop
jle
rclb
mov
mov
pop
push
sbbb
jmp
repz
jae
dec
lods
insl
popl
adcl
fsts
sub
cmpsl
lods
into
daa
das
sarb
push
jnp
je
mov
inc
sbb
dec
or
jecxz
xor
sub
out
lret
out
imul
aad
lods
or
mov
cmp
cmpsl
sub
fcmove
jge
int
jmp
lret
fwait
dec
leave
js
lahf
jp
shlb
pop
sbb
icebp
dec
adc
enter
and
sbb
and
cld
or
lret
pmaxsw
movsl
ljmp
lds
cmp
out
scas
jmp
mov
mov
push
test
push
pop
fcoml
pop
loope
hlt
fidivs
jecxz
cli
jecxz
push
push
daa
push
sbb
mov
sbb
fisubl
xor
ds
clc
mov
mov
jno
add
gs
in
sbb
pop
out
lods
adc
cld
ret
insl
push
in
mov
roll
dec
push
loope
fcoms
cltd
mov
mov
hlt
ss
sbb
sbb
xor
movsl
cmp
call
mov
out
aas
push
mov
repz
mov
adcb
popa
xor
lds
dec
andb
imull
add
lcall
mov
push
fcoml
sub
xchg
lods
xchg
std
lahf
sub
jle
add
or
mov
add
sub
cmpl
mov
std
xrelease
jo
inc
mov
and
lret
scas
insb
or
xchg
push
or
add
gs
cld
das
out
mov
push
mov
dec
mov
pop
sbb
mov
cli
jle
xor
sahf
jmp
sbb
loope
jo
sbb
xchg
sbb
mov
cmp
stos
cmc
cs
and
pusha
pop
cli
fstpl
insl
cltd
push
mov
movsb
adc
inc
dec
dec
rcrl
xchg
jecxz
outsl
stc
adc
and
daa
int3
mov
daa
jle
inc
scas
mov
test
sbb
fucomip
dec
rolb
mov
cmpsb
repz
add
adcb
mov
push
adc
pusha
fsts
jne,pt
push
sahf
call
pop
subl
mov
jg
adc
fs
sub
cmp
pop
fstps
push
scas
or
push
fsubrl
lock
mov
int
mov
jecxz
dec
push
lret
ret
test
dec
mov
stos
je
mov
fadds
jmp
mov
mov
mov
jb
bound
sub
stos
mov
loopne
adc
stos
mov
cli
sbb
movsl
or
jo
dec
cmp
and
mov
xor
mov
mov
sub
inc
in
jne
rolb
mov
inc
cwtl
push
movsb
push
adc
leave
jl
push
dec
shll
cmp
mov
and
sbb
or
inc
mov
or
mov
mov
mov
jl
sti
xchg
cli
xlat
pop
jae
mov
mov
out
mov
leave
ret
shll
aam
fiaddl
scas
lcall
cmpsb
in
test
cwtl
xor
adc
into
sbb
lea
pop
xchg
mov
lret
or
pop
fs
test
push
xchg
cmp
lods
mov
cmp
add
cs
rcrl
jnp
popl
inc
xor
out
xchg
lods
enter
jge
fdivs
insb
sub
cmp
nop
pop
lcall
out
insl
mov
sarl
pop
and
movsb
add
outsb
into
enter
or
push
mov
mov
and
sbbl
cmp
stos
iret
mov
ds
les
mov
pop
sahf
scas
cmpsb
or
mov
xchg
clc
aaa
xchg
xchg
jbe
into
jg
sbb
or
testl
divb
dec
pushf
psubd
cli
mov
stos
subl
xchg
jno
dec
xor
mov
lods
repnz
fldt
push
clc
imul
mov
idivl
cltd
sbb
dec
sub
lock
xor
pop
mov
mov
push
out
fdivr
dec
adc
mov
arpl
ja
test
stc
ret
cld
sub
add
add
popa
jl
lea
or
xor
mov
sbbl
data16
in
dec
insl
fwait
add
mov
fdivrl
outsl
and
mov
outsl
cmpsl
js
cmp
cmp
aaa
sub
xchg
lret
pop
pop
ja
sbb
fstp
xchg
outsl
call
xchg
jb
mov
add
mov
fwait
nop
push
pop
and
sbb
fscale
andb
cmp
ret
cmp
repz
and
imul
push
in
int3
imul
out
jp
sti
sub
lock
push
sbb
mov
adc
iret
and
sub
pop
push
push
fstl
mov
xor
push
fstp
mov
mov
ja
aaa
data16
pop
aas
pop
sahf
jl
sub
mov
test
fnsave
push
es
xlat
mov
and
pop
sbb
outsl
sub
jmp
in
mov
movsb
adc
mov
fwait
sub
xchg
jmp
loop
fwait
xor
ret
pop
out
adc
lret
xor
pop
mov
sub
ja
ds
xorl
pop
lds
imul
imul
or
jb
dec
js
out
jo
mov
rol
xor
jge
fistps
sbb
jge
xor
jle
cmc
mov
scas
xchg
rorl
jae
mov
adc
popf
shlb
xor
fisubrl
cmpl
mov
and
cmpb
mov
and
push
xor
cli
dec
repz
pop
stos
xchg
fwait
mov
pop
out
std
and
pcmpgtd
lods
out
mov
push
push
je
cmc
cmp
imul
mov
lahf
rep
js
scas
shlb
out
popa
sub
fwait
mov
sbb
mov
mov
daa
and
icebp
shll
cmp
mov
or
test
inc
out
pop
mov
jno
sbb
stc
cs
loope
xchg
mov
jl
test
sub
sbb
mov
and
mov
mov
sbb
xlat
stos
mov
mov
cmpsl
cmpsl
pop
pushaw
ja
sub
les
outsl
clc
inc
mov
addr16
xor
mov
fildll
stos
add
out
shrb
rolb
ja
stos
xor
outsl
or
mov
in
mov
push
cli
push
sbb
in
xchg
mov
push
das
out
mov
mov
iret
aad
jne
mov
mov
or
and
iret
mov
cmp
mov
scas
loope
mov
jl
dec
mov
in
lods
pop
into
int
shl
stos
out
mov
in
cmpsl
xchg
loope
gs
xchg
mov
xchg
add
stos
fstpt
fsubl
mov
xchg
jns
jnp
icebp
inc
mov
imul
xor
jae
ds
jae
adc
pop
daa
aam
stos
mov
fmuls
push
lods
jae
fwait
sbb
xchg
mov
arpl
inc
call
push
lods
stc
mov
movsb
nop
sti
pusha
shlb
in
or
in
or
loope
or
mov
xor
xchg
sub
mov
pop
andb
adc
and
sub
mov
add
sbb
cltd
into
scas
stos
mov
xor
nop
outsl
jp
push
mov
jns
inc
sti
popf
bnd
shlb
mov
stos
cld
cmp
mov
mov
ljmp
shlb
pop
sbb
lods
mov
or
mov
pop
mov
dec
aas
ret
mov
mov
dec
xchg
pop
fiadds
scas
cmp
stos
pop
xor
adc
mov
icebp
imulb
mov
xor
and
pop
into
mov
and
cli
repz
adc
xchg
scas
scas
xchg
int3
push
xchg
movsb
mov
xor
mov
stos
or
xchg
adc
pop
push
xor
dec
mov
add
cmp
and
adc
jmp
pop
or
adc
mov
jp
cwtl
push
das
sar
add
push
push
outsl
push
repz
repnz
mov
mov
push
ss
add
jo
mov
dec
ret
xchg
mov
cli
cmp
mov
cmp
cld
movsb
cwtl
ret
mov
mov
xor
pushf
rcr
cmp
cwtl
xchg
push
xchg
ret
mov
fmul
adc
jle
movsl
sarl
imul
aaa
in
cmp
fildll
xchg
lret
jnp
sub
repz
and
sbbl
mov
fcom
test
mov
mov
xchg
out
mov
or
popf
xor
data16
in
cmc
ds
iret
jle
xlat
mov
aas
mov
sbb
xchg
and
sub
add
mov
cmpsl
fbld
sub
xchg
lea
outsb
pop
pop
ficoml
clc
cmp
push
cmp
stos
es
and
sbb
int
mov
pop
lret
xchg
mov
push
dec
fcmove
push
and
jmp
gs
scas
xchg
sbbl
insb
scas
mov
or
dec
mov
popa
int3
mov
iret
pop
sbb
mov
mov
fwait
fwait
enter
mov
insl
aas
sti
push
leave
mov
sbb
in
aaa
loopne
mov
cmp
sbb
inc
sub
mov
sub
sub
push
jb
roll
testl
and
loopne
inc
add
enter
out
jb
popf
and
ja
cmpsb
jge
lods
mov
mov
jae
push
enter
pop
cmp
xor
pop
xor
cmp
xchg
xor
add
imul
pop
dec
mov
cmp
inc
std
or
pop
fnstsw
jno
loopne
xchg
sbb
movsb
xchg
rcrl
icebp
in
lcall
adc
mov
jmp
xchg
xor
or
leave
or
mov
imul
push
fst
mov
lds
xor
sarb
in
cmp
pop
inc
cmp
dec
pop
jbe
or
cmp
xchg
shrb
iret
cmp
outsl
das
adc
loopne
mov
pop
sub
repnz
lods
into
test
mov
rcr
pop
push
mov
jns
xor
mov
and
lahf
pop
mov
fs
jg
pop
aaa
xchg
pop
dec
ds
daa
testl
sbb
out
cmc
fcmove
push
push
jae
cmp
icebp
popl
in
into
insb
cmp
or
xchg
negl
das
pusha
or
xorb
push
jne
jne
mull
jbe
arpl
push
push
test
fldt
jb
lods
push
push
cltd
or
adc
sub
dec
ret
out
dec
nop
lret
pop
cmpl
rol
out
outsb
aaa
push
push
adc
cmp
xor
xor
jns
loop
inc
xchg
adc
mov
push
fidivl
mull
xor
int
ficompl
cltd
fldt
jb
pop
xor
cmc
push
sbb
jbe
lods
jp
xor
out
mov
mov
adc
mov
iret
adc
cmovs
mov
or
loop
out
mov
pop
push
pusha
pop
int3
push
xorl
pop
push
sti
sub
sub
xchg
inc
movsb
aaa
movntps
pop
pop
loope
xchg
dec
iret
loope
shrl
into
in
sub
xchg
fadds
fidivrl
mov
dec
add
lret
add
jo
divl
rcr
jns
add
push
lahf
mov
push
xchg
icebp
pop
dec
sub
loop
ret
fmulp
mov
ret
and
pop
xchg
fwait
adc
lds
pop
rcrl
lahf
xchg
rorb
das
stos
arpl
mov
cmpsl
notl
sub
cmpsl
popf
mov
fstpl
insb
xchg
push
ret
test
aad
mov
loop
mov
inc
orl
test
fldcw
jae
ret
lahf
out
push
pushf
das
cmp
movsl
repz
or
sar
xchg
mov
mov
sti
mov
out
lahf
xchg
sub
and
mov
add
sub
mov
sub
outsl
js
outsb
and
mov
dec
call
push
inc
ror
mov
or
push
push
sub
or
popa
push
mov
pop
mov
jle
mov
test
xchg
sti
dec
lds
stos
scas
xlat
push
or
sub
mov
cld
imul
push
pusha
mov
lahf
std
sahf
adc
push
or
cmp
ljmp
mov
in
sub
add
sbb
ret
arpl
ficoms
add
xor
or
push
loop
or
or
or
or
shll
lods
js
fadd
xor
sub
xchg
int3
cmp
xchg
xlat
jno
test
imul
stc
inc
jg
and
movsl
dec
mov
popl
xor
mov
push
xchg
aam
cmp
pop
es
mov
and
and
pop
jae
cwtl
in
jae
inc
repnz
lcall
pop
mov
dec
movsl
lret
inc
mov
pop
cmp
push
jns
xor
ss
push
cli
sub
std
mov
lods
cmp
mov
cmp
mov
add
test
lock
mov
lret
repz
mov
in
cmpsl
mov
mov
adcl
cmc
mov
cmp
ss
and
mov
js
popa
sbb
es
pop
pop
jg
daa
xchg
in
das
and
loop
and
dec
adc
aas
xor
sbb
cmp
aas
ja
hlt
xchg
imul
pop
mov
cmp
push
fwait
jno
repz
ficoms
adc
mov
lahf
pop
pushf
cmp
sub
je
test
dec
movsb
arpl
daa
mov
xor
mov
loop
sbb
xorl
mov
add
and
xlat
dec
mov
jnp
sub
mov
jge
mov
xchg
pop
sbb
lret
ljmp
xchg
jbe
inc
pop
js
and
in
scas
xchg
je
rolb
mov
push
int3
arpl
mov
popa
fcmovne
xor
movsl
or
jl
test
and
into
shll
in
pushf
push
mov
cmpsl
dec
sub
inc
or
js
xor
repnz
fwait
hlt
lcall
loop
or
loop
fs
add
test
fwait
imulb
add
jl
hlt
xchg
shll
ret
cmp
dec
pop
mov
loope
fxch
xor
pushf
jmp
pop
sbb
adc
or
in
cmpsb
jecxz
lahf
xchg
lret
aam
shlb
stc
rcrl
std
mov
mov
ficoms
loop
pushf
test
fcmovnbe
cmp
jo
adc
cmc
das
mov
inc
icebp
mov
insb
xchg
movsb
cmpsl
sbb
test
repnz
into
mov
imul
stc
icebp
lea
filds
mov
mov
lea
adc
and
ljmp
pop
fs
test
pop
push
push
sbb
pop
lcall
cli
loopne
jbe
pop
push
movsb
out
or
cwtl
lock
mov
incb
xchg
outsb
lods
fstpl
or
push
push
cmp
fisubs
test
movsb
test
pop
mov
adc
movsb
sahf
nop
jb
pop
cltd
pop
xor
data16
cs
mov
push
out
push
mov
sub
sarl
inc
cmp
shlb
in
xchg
dec
cli
mov
push
or
cmpsb
pop
das
mov
gs
inc
test
and
shr
pop
scas
and
mov
sub
push
neg
in
add
inc
outsl
jno
sbb
fnstcw
aaa
cmp
mov
stos
pop
repz
imull
push
inc
jne
daa
fsubrp
hlt
dec
pop
in
test
xor
push
out
into
ds
mov
or
mov
cli
leave
ja
mov
cltd
aam
test
aad
testl
sbb
sub
xor
jb
inc
jnp,pt
mov
push
ret
xchg
mov
cmp
sub
int3
pop
push
cwtl
dec
iret
lcall
pop
sahf
pop
jne
dec
add
or
pusha
imul
into
pop
cmpsb
push
lods
xchg
shlb
mov
lock
sarb
push
shll
adc
sbb
xor
jae
sti
lahf
push
lcall
loope
iret
ds
shr
adc
xor
pop
mov
fistl
jge
mov
test
xor
enter
jo
xlat
mov
mov
jo
dec
hlt
cmp
dec
repz
ss
mov
jnp
sbb
mov
and
mov
mov
lods
cmp
xor
jne
rclb
push
out
cmovle
aaa
scas
cld
adc
dec
cld
sti
imul
cli
ret
mov
testb
arpl
inc
dec
add
jge
int3
jnp
out
add
cmp
cmp
scas
mov
mov
ret
push
out
sub
pcmpeqb
jl
jnp
push
es
repz
fcmovnb
insb
out
jl
enter
mov
cmp
lahf
in
sti
ds
xchg
dec
mov
or
loop
je
xchg
add
adc
push
dec
pop
push
inc
orl
or
jne
or
aam
fwait
loopne
fstps
popf
ljmp
rcrb
repnz
dec
pushf
xchg
mov
or
mov
divb
or
pop
or
out
stos
leave
sbb
sub
repnz
mov
out
pop
lds
sub
mov
out
imul
sbb
cmp
scas
loope
mov
stos
nop
leave
outsl
xchg
mov
mov
sbb
or
mov
jg
cmp
jg
mov
cmp
sub
sbb
add
sbb
std
mov
test
loope
sub
sub
mov
and
inc
xor
cld
cmpb
lods
fldt
daa
mov
iret
ficoml
in
ret
inc
xor
fsts
test
mov
push
and
les
add
pop
xor
jmp
stos
or
sbb
fisttpl
int3
dec
imul
mov
mov
push
aam
inc
jp
aaa
and
push
sbb
movsb
fnsave
mov
ret
test
jo
aad
inc
cs
das
sbb
imul
dec
mov
sbb
mov
inc
hlt
mov
neg
xchg
popa
push
jnp
and
xor
jae
dec
movsl
bound
add
and
jb
mov
iret
repz
sbb
ret
pop
dec
icebp
aad
int
sahf
push
inc
sbb
int3
lahf
mov
mov
sbb
mov
add
imul
mov
shl
arpl
addl
mov
xor
or
mov
stos
push
pop
sbbb
pop
clc
mov
fcomi
ficompl
sbb
or
out
or
sbb
loop
dec
shll
xor
insl
adc
loope
mov
inc
rcrl
or
fadds
cld
mov
jnp
into
lea
enter
in
jb
jno
cmpsl
push
and
pop
jnp
xchg
movsl
jnp
inc
cmp
sar
fbld
mov
pop
add
dec
mov
mov
xchg
test
sub
mov
xchg
arpl
mov
fxch
out
sub
cmpsl
lcall
gs
fistl
or
xor
fmulp
add
cld
sub
add
or
or
idiv
outsb
mov
adc
push
cmc
negb
aaa
xchg
sbb
je
cmpl
sub
pop
mov
clc
je
xor
shl
mov
sub
mov
addb
std
ja
xor
sarb
test
arpl
inc
pminsw
lods
cltd
xchg
xchg
jns
scas
mov
data16
add
sbb
mov
add
jle
data16
mov
popf
sahf
jae
xchg
ss
dec
pop
xor
xor
dec
mov
jp
addr16
mov
jbe
nop
test
xor
lods
ss
jbe
call
leave
fistpl
fnstenv
cld
into
mov
stc
dec
sbb
addr16
adc
je
scas
inc
jp
aas
js
push
sbb
test
lcall
in
mov
js
popa
test
iret
xlat
mov
push
nop
mov
push
and
mov
les
lods
stc
pop
rcll
cli
movsb
pop
cld
sarl
loop
sub
test
mov
leave
cld
icebp
cmpsl
pop
mov
inc
jne
jae
adc
fbstp
and
mov
sbb
lret
dec
fistps
xor
shll
xchg
xor
dec
out
cmp
jge
dec
add
xchg
ss
fwait
push
adc
psubusw
mov
mov
mov
sahf
lods
pushl
aad
push
adc
mov
and
loop
jecxz
dec
push
jb
pop
repnz
cli
inc
sub
imull
mov
shrb
scas
iret
cmp
cmc
sub
xchg
inc
negl
mov
pop
es
pop
xor
push
push
mov
mov
call
imull
adc
sub
repz
jns
adc
cltd
lcall
ds
in
or
lret
jmp
sbb
or
pop
and
sub
imul
cmpsb
push
ja
pop
sub
arpl
pop
out
outsl
cs
lret
cs
jno
stos
jecxz
add
inc
mov
hlt
hlt
sub
sub
imul
mov
xor
bound
pop
dec
fsubr
ret
mov
sub
cmp
popa
adc
fistps
popf
jno
test
or
adc
fidivrl
sub
dec
scas
sub
adc
repnz
inc
or
bnd
fcomps
sahf
repz
lcall
in
sbb
stc
xchg
loop
sar
pop
popf
ljmp
sahf
fldenv
jb
ss
repnz
or
filds
cmp
leave
cmp
int
stc
stos
ds
or
clc
ja
mov
pushf
xchg
adc
push
fwait
jmp
test
push
or
cmp
sbb
lock
movsw
sbb
divl
xor
lcall
pop
stos
loopne
mov
jp
lcall
cmp
rclb
push
mov
das
test
mov
int3
leave
das
cli
sahf
lcall
mov
hlt
test
testl
inc
inc
xchg
push
loope
adc
xlat
repnz
and
int3
push
stos
icebp
adc
sbb
call
cmp
adc
pop
das
inc
scas
dec
mov
adc
addr16
inc
cmpsb
imul
loope
dec
ficoml
les
shlb
jle
jns
xchg
repz
push
loopne
xlat
scas
fldenv
xlat
xor
pop
push
call
jmp
mov
cltd
and
xlat
xchg
shll
mov
mov
sub
jb
jae
hlt
cmp
push
sub
or
and
or
inc
in
mov
xchg
mov
or
and
mov
xchg
popa
lret
adc
mov
lods
mov
sbb
pop
ja
movsl
mov
sbb
mov
sbb
mov
out
fwait
dec
push
sub
sti
movsl
mov
test
and
and
std
push
xchg
mov
xchg
adc
pop
jb
sbb
mov
test
stos
stc
icebp
cmp
daa
adc
adc
jmp
cld
ss
dec
pop
mov
lcall
lock
lret
or
or
pop
jl
cmc
and
fsts
scas
mov
repz
imul
call
cmp
or
jmp
leave
fnstsw
fs
pop
outsb
xchg
pop
std
adc
cltd
mov
jns
cmpsb
aaa
mov
xchg
mov
daa
xor
or
rclb
bound
jg
xor
xor
pop
xchg
dec
scas
lea
lods
mov
out
pop
mov
mov
pop
insl
xchg
xchg
or
loope
mov
cli
scas
cwtl
cmp
arpl
inc
inc
mov
mov
sub
outsl
dec
cmp
inc
push
mov
mov
in
stos
and
cld
jo
ds
push
pop
cmp
jae
fs
mov
sub
xchg
jge
gs
movsl
xlat
xor
test
arpl
mov
xchg
cld
out
lods
mov
enter
in
icebp
pop
lock
add
xlat
les
sub
jmp
fisubrl
std
sub
lock
sbb
ret
push
jbe
out
in
sbb
clc
mov
sbb
scas
pushf
stos
jno
in
xchg
xchg
rcll
jo
jae
mov
jl
cmp
pop
cmp
sahf
out
in
sbb
lods
std
or
pushf
sub
dec
aaa
jecxz
mov
xchg
popa
leave
out
cwtl
cltd
pop
sub
fldenv
sub
cmp
divl
pop
sub
mov
jp
out
xlat
repnz
ret
add
cmp
mov
dec
ret
sub
rcrb
insb
arpl
jmp
out
std
mov
jae
xchg
sbb
fimuls
ret
cld
repz
pop
xchg
cltd
xchg
jb
fwait
in
inc
in
out
pop
adc
pop
adc
stc
mov
out
sub
or
in
jmp
pop
mov
out
mov
jae
negb
cli
leave
cmp
jp
out
jae
add
fidivrl
mov
scas
popa
ret
bound
mov
inc
cmc
loope
pop
stos
fstp
cmc
dec
pop
mov
or
andl
mov
imul
sahf
shrb
popf
pop
out
pop
int3
mov
and
and
test
or
jle
repnz
mov
imull
push
push
ret
jnp
outsl
shlb
lock
fsts
orb
test
mov
mov
jae
dec
cli
rcll
data16
jp
js
insl
out
xchg
and
fcomi
jno
mov
into
int
add
mov
popa
mov
lea
cmp
imul
icebp
push
loopne
jge
mov
or
fnstcw
dec
loop
xor
cmp
movzbl
adc
xchg
pop
push
rcr
mov
xchg
loopne
sub
imul
mov
shrl
or
ret
mov
sbb
lods
std
jmp
add
fwait
mov
or
dec
pop
sub
jp
aad
shl
pop
hlt
lahf
mov
mov
rcrb
mov
pushf
shlb
xchg
lahf
cmpsb
cmp
sub
ss
lds
sbb
lds
rorb
pop
push
mov
mov
jb
subl
daa
pop
mov
iret
mov
and
rol
mov
jae
aas
pop
xchg
lods
jge
lods
shll
loop
lock
in
mov
adc
xor
les
dec
in
pop
push
int
nop
in
pop
and
mov
xchg
jl
dec
mov
adc
dec
lcall
inc
add
loop
jecxz
inc
dec
push
jmp
and
and
xchg
inc
clc
cmp
mov
sbb
cmc
mov
sub
mov
jne
cmp
leave
loope
mov
test
fidivrl
mov
mov
pop
stos
js
xlat
lcall
mov
jae
cmp
or
mov
cld
fcmove
fisttps
mov
cmpl
inc
jmp
and
add
mov
mov
mov
mov
lret
pop
push
ss
mov
sbb
sbb
add
jne
jns
pop
ss
mov
aam
subb
adc
mov
notl
lods
or
aad
push
jnp
das
jge
add
mov
rclb
xor
mov
in
pop
leave
xchg
mov
jg
rol
je
inc
cs
cmp
push
bnd
cmp
jns
push
cltd
out
inc
pop
or
or
aad
gs
add
clc
pop
dec
lods
outsb
daa
inc
gs
mov
xor
stos
and
add
test
popf
andb
aam
and
mov
clc
mov
mov
adc
jo
fwait
mov
xchg
dec
inc
fcomps
les
sti
pop
call
push
dec
and
daa
aad
hlt
bound
pop
cmp
dec
push
mov
lret
add
insb
in
leave
or
adc
jle
or
inc
mov
dec
bnd
mov
scas
call
adc
lea
jge
fists
test
pop
test
pop
push
bound
int3
sub
jecxz
outsb
test
mov
and
dec
daa
enter
mov
or
repz
inc
js
jl
lea
lcall
stos
std
jg
divb
inc
pop
fstl
scas
and
or
into
shlb
cli
mov
cs
lea
xchg
cmp
xbegin
push
dec
negb
aas
xchg
das
pop
and
sbb
push
jae
daa
rcrb
pop
ret
arpl
sti
inc
fildl
das
idivb
icebp
in
and
cmp
lods
jbe
inc
xor
xchg
adc
jmp
inc
mov
sub
inc
sbb
sbb
adcb
inc
jbe
mov
push
cmp
dec
inc
les
inc
sub
adc
in
movsl
xor
cmpsb
sub
repz
ja
ja
sub
in
inc
jmp
cwtl
mov
lods
ja
sahf
dec
dec
pushf
aaa
pop
pop
lds
in
jbe
sub
mov
adc
pop
mov
add
les
ja
nop
pop
mov
shl
xor
xchg
ss
pop
dec
push
adc
call
or
je
mov
loop
dec
cmp
pop
or
mov
pop
mov
fldl
sti
mov
push
mov
mov
pop
or
fwait
out
leave
movsb
mov
xchg
inc
and
into
in
xchg
or
xlat
mov
es
cmp
inc
pusha
mov
fnstsw
mov
mov
stos
cmp
xlat
xchg
enter
push
test
pop
dec
push
cmp
std
push
mov
mov
pusha
push
data16
stc
mov
mov
aaa
or
out
mov
divl
leave
pop
adc
in
inc
xor
dec
scas
fcmovnbe
das
push
outsb
int3
adc
rol
mov
cmc
lods
or
cmp
sub
mov
pop
pop
imul
ret
in
fdivl
test
add
add
xchg
insb
adcl
icebp
push
sti
mov
shll
jb
push
lret
sub
leave
cld
and
mov
aad
imul
mov
int3
pop
pop
mov
inc
xlat
mov
adc
fidivrs
daa
pop
rorl
or
pop
mov
je
push
cmp
jne
pop
mov
push
cwtl
adcl
xchg
cmc
jecxz
and
fnstsw
dec
in
lahf
push
xor
sub
cmpsb
pop
mov
adc
stos
imul
addr16
cmc
in
incb
mov
out
ja
cmpsl
call
sbb
popa
movsb
mov
mov
je
dec
add
repnz
iret
pop
cld
rol
int3
add
add
push
mov
and
repz
bswap
aad
hlt
cld
push
aam
dec
mov
add
dec
lahf
ss
mov
adc
mov
call
and
xchg
sbb
lcall
cmp
and
mov
inc
pop
adc
pop
add
and
pop
push
adc
cmpsl
int3
push
rcrl
stc
sbb
rclb
mov
xor
sub
mov
pop
scas
sarl
fstpt
into
push
addl
push
dec
or
push
mov
aam
inc
ds
mov
sbb
mov
adcb
mov
push
sarl
shrd
jae
sbb
mov
add
fcmovbe
cmpsb
push
stc
adc
and
mov
ret
out
mov
insb
clc
aas
repz
and
repz
push
scas
mov
add
inc
cli
rcl
fucomi
push
inc
out
cmp
inc
inc
dec
sbb
inc
loope
mov
mov
mov
xor
sar
mov
ret
jnp
sub
fisubl
rorb
mov
dec
xor
cltd
test
loopne
cmp
or
aaa
test
test
cwtl
dec
xor
jl
pop
ljmp
add
and
adc
cmp
xchg
fldt
out
pop
dec
icebp
fidivl
aas
sbb
xchg
and
mov
shll
imul
sbb
outsl
mov
mov
mov
and
xor
out
cli
cvttps2pi
fsubr
mov
mov
mov
arpl
mov
pusha
mov
aas
xchg
push
cmp
lea
mov
daa
cmpsb
ss
cmpsl
jo
mov
xchg
fcoml
fcmovb
stos
mov
fists
fisubrs
xchg
fcomps
or
imul
pop
or
jge
push
subb
mov
ljmp
mov
flds
mov
xchg
add
out
repnz
or
xor
stc
loope
rorb
mov
popa
push
or
dec
in
cmp
push
push
pop
sub
fsts
sub
lods
adc
jo
mov
and
scas
nop
sti
ja
aas
push
push
divl
int
shrl
push
stc
sti
sub
and
stos
jle
sahf
jecxz
xchg
stos
xchg
mov
xor
pop
ja
cmp
push
adc
pop
pop
lock
cs
in
or
rcrl
ja
lods
imul
fwait
dec
imul
aam
popf
addps
push
xor
adc
jo
or
jne
popa
mov
jne
adc
add
push
pushf
adc
cltd
ret
int3
pop
sbb
call
pop
addr16
bound
ss
outsb
in
sub
ljmp
sub
repnz
xor
jo
out
test
mov
pop
jmp
mov
fmulp
jl
push
pop
xor
adc
fldl
rcll
jecxz
mov
mov
mov
jbe
scas
rcll
mov
jmp
sbb
mov
and
mov
and
mov
call
or
out
fwait
adc
test
inc
fistpl
sbb
push
lock
mov
xchg
icebp
push
repz
loope
rcll
loopne
mov
cld
push
bound
lret
dec
push
orl
lea
test
das
adc
stos
push
negb
sti
scas
mov
sarl
jno
orb
sbb
push
push
int
nop
testl
aas
jns
push
mov
leave
popa
and
inc
sbb
pop
mov
or
lahf
ja
and
icebp
mov
ficompl
jmp
pop
jae
mov
fidivrs
or
lods
out
enter
push
idivl
imulb
test
adc
mov
jbe
push
mov
xor
fcom
jmp
ret
cmp
int
mov
fwait
call
ds
shrl
outsb
pop
pushf
xchg
pop
pop
iret
mov
insl
jno
hlt
sbb
daa
cltd
push
and
sbb
jo
dec
mov
cld
pop
inc
dec
mov
stos
sbb
pop
or
mov
lcall
outsl
call
sbb
int3
out
push
repz
jl
sub
sti
loopne
sahf
xchg
aaa
pop
adc
stc
in
push
dec
mov
addr16
daa
faddl
aas
int
daa
sar
xchg
lcall
scas
xchg
aas
fwait
pop
enter
dec
in
mov
add
inc
mov
jmp
pop
add
stc
mov
cmp
arpl
jg
movsl
fdivs
pushf
jnp
jb
nop
xor
test
cs
jle
fisttps
pop
push
mov
mov
hlt
js
loop
je
cmpsb
sub
xchg
jnp
push
clc
sahf
mov
adc
in
xor
xchg
cmp
lock
fcomip
cmp
mov
push
xchg
shll
pop
cmp
sub
xor
xor
in
or
mov
repnz
test
je
jp
push
cli
test
mov
and
je
jle
pusha
pop
jp
cmp
pop
fs
mov
test
fsubrl
xchg
xchg
dec
jne
popf
nop
scas
aas
data16
mov
je
xchg
sbb
lods
push
cmp
xchg
sbb
popa
out
scas
cwtl
dec
jecxz
sub
pop
and
ret
mov
loopne
cli
into
mov
dec
push
and
stc
stos
test
icebp
mov
cmp
xchg
jo
das
add
cwtl
pop
sarl
stos
xchg
ss
movsl
iret
fcompl
mov
dec
lds
lahf
movsb
lahf
gs
and
movsb
repnz
pop
jmp
into
mov
dec
lea
sub
fistps
lock
or
cld
addr16
inc
icebp
in
xor
mov
ljmp
nop
add
negl
inc
cmpsl
fs
popa
adc
loopne
movups
add
push
icebp
jge
data16
sbb
scas
fcoml
imul
pop
sbb
sub
adc
jle
jle
lahf
rorb
xchg
xchg
iret
adc
dec
mov
ja
call
dec
mov
mov
jge
pop
push
xor
cli
mov
mov
in
adc
es
mov
shlb
rcll
pop
outsl
sub
nop
and
fidivs
or
adc
mov
cld
in
mov
push
mov
xlat
push
and
jecxz
loope
mull
fisubl
or
mov
xor
stos
cmc
and
cmc
mov
push
int3
aad
ret
xorl
arpl
jl
push
add
mov
test
repz
dec
popl
pop
int
loop
shlb
push
mov
mov
int3
nop
pop
or
and
shlb
fisubl
and
imull
xchg
cmc
xor
mov
xchg
adc
imul
out
das
xor
clc
cmp
cwtl
xchg
mov
sbb
cmpsb
loopne
adc
flds
in
insl
sahf
mov
in
mov
cli
mov
add
xchg
mov
roll
ja
xor
push
pushf
sbb
in
xchg
xchg
clc
jg
jecxz
sub
push
sbb
cli
jno
mov
rclb
mov
lock
push
xchg
icebp
cmpsb
jne
jno
pop
jecxz
add
cs
pop
test
jnp
or
in
xor
stc
sub
dec
mov
call
jecxz
add
adc
xchg
sbb
jae
addr16
sbb
cmp
mov
or
xor
push
das
fucomip
sarb
and
sbb
icebp
test
shl
jle
push
mov
pop
notb
ret
js
pop
cmp
xchg
mov
mov
inc
sbb
push
cmp
cmc
add
imul
pmaxsw
lea
adc
pop
stos
or
add
push
scas
rol
pop
cld
test
add
cmc
push
dec
xchg
lock
jns
je
xchg
aam
negl
xor
mov
xor
lds
in
mov
adcl
loope
mov
movsb
cli
dec
mov
cmc
test
mov
mov
clc
pop
mov
cwtl
repz
addr16
jecxz
adc
sbb
loopne
dec
pop
mov
out
jg
xchg
bound
mov
jmp
fildll
push
push
cs
pop
ljmp
imulb
push
inc
or
lock
cs
sbb
and
ss
lret
sub
and
sbb
add
pushl
or
movsb
push
mov
lea
inc
int
negl
scas
pop
int
fimull
lret
cmp
outsb
jo
mov
xor
addr16
mov
cmpsl
lods
scas
into
int3
mov
rorl
mov
sub
fnstenv
fidivrs
insb
orl
push
fdivr
fldt
std
jnp
pop
cmp
jns
adc
iret
inc
das
rol
ljmp
mov
sub
aad
dec
adc
sti
lahf
cli
push
out
mov
cmp
scas
sti
shlb
cwtl
mov
lret
rorb
das
std
xchg
push
jae
test
or
inc
push
push
aam
push
outsl
cwtl
or
or
xor
lods
fisubrl
dec
enter
in
jne,pn
cwtl
dec
push
or
mov
cmp
or
loopne
jle
test
jge
hlt
sbbb
lock
pop
not
out
int3
xchg
fcoms
pop
mov
icebp
loopne
shlb
mov
jb
inc
pushf
fcmovbe
adc
fcmovb
or
mov
dec
shll
repz
sub
xchg
xchg
sub
loope
xor
and
adc
cmp
mov
shr
pop
or
subl
lods
pop
call
scas
stos
fdivl
sub
enter
jle
mov
lea
dec
cmp
jo
imul
mov
mov
add
xor
out
adc
fucomi
cmp
mov
aad
daa
adc
adc
inc
jnp
cmpsl
in
cmpsl
or
mov
xchg
push
stos
icebp
es
fs
adcl
sub
js
stc
outsl
loopne
and
mov
icebp
es
sbb
sub
sarl
bound
sub
add
xor
je
dec
jp
inc
fstps
mov
mov
testl
stc
cmp
jns
loope
in
jle
fdivrp
les
scas
rcl
mov
popa
gs
shrb
fimuls
movsl
fstps
insl
dec
lea
jns
lahf
jbe
and
push
pusha
rcll
sub
dec
push
lods
dec
stos
popa
xchg
cmpsb
or
jle
dec
mov
pop
test
xlat
ret
fmuls
arpl
jp
dec
jb
lahf
push
mov
mov
and
fstl
inc
xor
outsb
fcomi
lret
stc
in
call
mov
loopne
xor
mov
in
cltd
ja
aam
mov
dec
out
mov
stc
cwtl
pop
aas
pop
mov
aaa
push
jbe
rcll
clc
inc
into
add
adc
cmp
sub
mov
dec
add
daa
aaa
dec
roll
frstor
test
xor
mov
sub
test
aad
test
add
xchg
mov
xchg
dec
pop
dec
pop
cs
movsb
fmul
daa
pop
sbb
lahf
sahf
mov
xlat
jge
pop
mov
push
call
scas
pusha
test
mov
bnd
pop
or
incb
insl
xor
shlb
fisubrl
add
popa
xchg
test
aad
mov
jnp
insb
jg
add
mov
or
lods
xor
rcll
push
sub
jo
push
lods
fstpl
xchg
leave
test
in
xor
jge
dec
xlat
or
xchg
sub
daa
rorl
fmul
jae
jb
and
jae
test
xorb
sub
aam
pop
das
clc
rorl
cmp
in
in
out
out
jp
jmp
inc
jg
cmp
lea
stos
int3
stos
or
ljmp
dec
bound
nop
mov
mov
leave
cmp
pushf
jns
mov
pop
push
adc
or
dec
jle
mov
pop
iret
ljmp
push
mov
mov
mov
repnz
jno
outsl
into
ja
jo
aas
mov
loopne
sub
icebp
fnstcw
subb
inc
push
pushl
add
divl
xchg
sahf
ss
pop
shll
sub
pop
data16
pop
mov
mov
jno
loop
int
aad
in
insl
pushf
in
xor
xchg
jg
mov
fldcw
pop
adc
xor
mov
or
add
xor
xchg
ja
sub
push
push
jnp
ret
in
jbe
adc
mov
and
inc
pop
arpl
cmc
xor
and
pusha
mov
jg
leave
add
clts
in
mov
or
xcrypt-cbc
cmpsl
xchg
dec
adc
push
in
jnp
movb
lds
sub
popa
and
jecxz
lret
pop
iret
lock
dec
popa
xchg
arpl
mov
cs
pop
icebp
mov
inc
shrl
mov
pop
out
mov
pop
shrl
enter
push
lret
and
mov
push
sbb
pop
imul
xchg
movsb
data16
adcb
fmuls
adc
xor
jae
popa
xlat
or
adc
add
cs
pop
mov
pop
and
enter
cmp
dec
mov
push
pop
xor
sbb
cmpsl
scas
sub
stos
ss
fsubl
mov
imul
jne
pop
jl
call
lea
xor
and
cltd
mov
les
cmpsl
dec
jns
in
fwait
adc
testl
sbb
mov
fadds
jne
jge
nop
cmc
push
jns
sti
mov
cmc
xor
and
mov
ja
sti
repnz
test
sarb
xor
enter
or
or
movsb
mov
jp
push
enter
and
mov
or
clc
or
iret
xorl
pop
mov
xchg
mov
cli
jmp
jl
sub
xor
mov
or
je
cltd
dec
ret
frstor
lds
xchg
cmpb
sub
mov
pop
popf
scas
xor
mov
pop
push
pusha
fstpt
outsb
xchg
sbb
mov
adc
or
out
inc
or
icebp
add
lret
fstpl
sub
scas
adc
std
and
into
sub
mov
and
daa
sub
xchg
cltd
sub
out
xor
test
outsb
mov
lret
sub
sbb
mov
fildll
mov
inc
push
cwtl
dec
jl
cltd
mov
adc
in
jle
push
insl
cwtl
or
xor
xor
out
jae
movsl
mov
adc
cli
pusha
xor
xor
xchg
pop
mov
inc
movsb
cmp
cmpsb
cmpsb
imul
daa
test
mov
or
cs
outsb
dec
ret
loop
in
push
arpl
xor
or
cmp
fdivs
mov
nop
or
cmp
in
dec
div
pop
jae
loopne
fwait
xor
call
dec
imul
aam
sbb
sbb
out
lret
ficoms
add
rclb
mov
jge
rcl
jo
in
mov
sub
and
dec
xlat
add
adc
in
sub
out
fmuls
and
pop
xchg
das
loope
mov
add
or
mov
and
sbb
rcr
mov
and
push
or
dec
and
rclb
in
sahf
bound
push
ret
dec
rclb
out
ret
enter
icebp
stos
push
dec
out
in
pop
mov
out
clc
stc
gs
insb
sarb
sub
test
mov
int
std
and
push
outsl
lods
pusha
enter
addl
aad
pop
push
or
jnp
sub
xor
push
pop
sub
daa
xchg
lods
ja
mov
mov
mov
fcoms
mov
pushf
sbb
ds
filds
push
shlb
popf
mov
jb
xchg
add
fisubrl
xchg
xor
xchg
sub
xchg
xchg
mov
push
mov
sarl
and
insb
push
mov
aas
jne
mov
xchg
xchg
mov
pusha
jnp
call
jge
mov
add
mov
mov
movsb
jl
jne
rolb
into
ret
mov
and
xchg
or
jbe
cmp
sub
pop
fdivrl
mov
push
adc
xor
add
call
add
test
push
jle
xchg
mov
jnp
push
les
sbb
sub
sbb
dec
sbb
add
sbb
push
test
lock
fildll
pop
ds
push
out
into
sbb
mov
lock
loope
sbb
aaa
mov
mov
adc
dec
sahf
cltd
mov
or
arpl
fcmovne
or
lods
cmp
leave
jle
add
fsubr
leave
sbb
jg
cmc
inc
pop
xor
das
mov
push
nop
stos
in
in
jnp
sub
pop
sub
pop
repz
xchg
push
in
mov
outsl
pop
jecxz
xchg
movsl
call
mov
adc
insb
ficoms
lea
jecxz
sbb
pop
scas
sbb
mov
mov
mov
xor
dec
popf
push
aam
adc
cmc
adc
mov
mov
sbb
inc
sbb
cli
jge
push
sbbl
and
pop
adc
jge
xchg
mov
cld
iret
add
scas
inc
inc
push
cmp
sub
rclb
fistl
xor
call
insl
xor
pop
jge
std
push
cmp
dec
sub
fists
jns
cmc
mov
pop
insb
test
aaa
mov
roll
cmp
ss
icebp
sub
mov
adc
out
or
das
xor
mov
loop
ret
push
mov
mov
xchg
int3
pop
jg
addr16
cmp
mov
dec
fistps
sahf
mov
cmp
fldcw
rcrl
ss
mov
adc
mov
adc
addb
out
mov
imul
and
push
push
mov
push
mull
cld
fldl
lock
scas
les
out
aam
fbld
fsub
xchg
adc
xor
lock
sahf
jmp
ds
cmc
xchg
sub
push
jo
and
dec
dec
frstor
sub
scas
cld
pop
gs
jmp
jge
pop
xchg
insb
dec
mov
insl
shr
xor
mov
adcb
mov
jp
in
imul
popf
adc
test
inc
sarb
je
mov
push
enter
adc
cmp
jge
loope
jb
dec
aam
cld
dec
int
mov
add
sub
dec
test
jp
jecxz
ret
add
repz
inc
test
les
cld
popa
ss
jnp
jno
idiv
hlt
movsb
sbb
ds
fucomip
pusha
or
push
pop
push
pop
push
into
adc
aam
cmpsb
xchg
sti
loop
mov
pop
cmp
test
push
cmp
js
aam
dec
mov
decb
push
pop
repnz
out
xchg
xor
xorb
or
mov
out
xchg
fstps
les
pushf
rcrl
push
jecxz
fsubs
jecxz
lods
xchg
cmp
fwait
mov
ficomps
push
je
movd
cs
add
scas
pushf
sub
xchg
sub
add
pop
aaa
jo
cmp
cmp
loop
cmp
lret
orb
sbb
lret
fisttpl
cltd
addr16
popa
lock
roll
adc
je
mov
aam
fbld
js
arpl
fistps
cmp
sub
popf
xor
imul
std
test
jne
mov
fisubrl
adc
and
adc
bound
fildl
hlt
dec
inc
pop
aad
cwtl
xor
aam
aam
loope
test
add
dec
push
sbb
pop
adc
mov
xchg
inc
sub
sbbb
add
stc
fcompl
mov
hlt
push
rcr
push
outsb
je
gs
inc
bound
les
mov
clc
jle
fdivrl
sahf
fsubl
loop
adc
scas
dec
inc
mov
xchg
ret
enter
std
push
push
and
and
push
lods
mov
xor
jno
or
cmp
adc
fsub
in
pop
or
jecxz
lods
pop
push
icebp
lcall
inc
mov
out
insl
jno
int3
lcall
mov
mov
pop
fistpl
outsb
jmp
pushf
push
push
imul
hlt
pushf
in
stos
dec
into
xchg
jle
inc
imul
gs
rolb
adc
jnp
sub
adc
mov
cmp
mov
and
adc
cmc
ja
or
movsl
add
hlt
outsl
mov
and
or
inc
test
xchg
es
pop
xor
lea
pop
pop
stc
mov
pop
jno
hlt
dec
sbb
mov
mov
mov
test
and
jg
lea
movaps
jbe
mov
addr16
mov
je
lods
and
mulb
pop
jo
dec
ja
adc
stos
sti
mov
xchg
adc
bound
mov
pop
and
jnp
js
popa
push
pop
aam
or
jp
xchg
pusha
out
notb
cld
aam
jle
mov
push
fucom
in
jg
mov
or
movsl
rcrb
push
mov
movsb
cmp
xor
imul
push
and
xor
scas
mov
shrb
sbb
jl
sbb
popa
fstpt
jb
out
dec
shrb
pushf
addr16
cmpsl
mov
movsb
mov
xchg
mov
add
dec
into
push
dec
pop
sarb
scas
push
fbld
int3
and
jnp
xor
add
lock
cmpsl
fldl
pop
ds
push
sbb
and
mov
mov
lahf
pop
push
lods
sarb
lret
out
out
repnz
mov
xchg
xor
sti
lock
xor
scas
sar
jp
inc
sub
mov
jns
mov
dec
mov
add
sub
idivb
icebp
push
inc
xor
add
lea
xchg
lea
out
cmovo
mov
push
push
mov
popf
sbb
out
or
ret
mov
or
push
es
inc
add
inc
mov
mov
dec
loop
mov
mov
dec
clc
dec
call
push
dec
adc
inc
imul
pop
or
mov
add
imull
in
push
push
jecxz
pushf
cmp
stos
lahf
xlat
rcr
imul
lea
call
mov
jno
mov
adc
fstp
pop
jle
add
cmp
fwait
ja
xchg
mov
insl
mov
in
sbb
je
cwtl
into
mov
jns
inc
arpl
rorl
gs
or
das
fidivl
xchg
mov
andl
mov
iret
sbb
ss
shrb
pop
pop
cmp
fdivs
cmp
or
js
jecxz
int3
push
adcb
es
fcomi
sub
mov
adc
or
and
les
popa
xor
jnp
sbb
aam
inc
sbb
inc
les
ja
pop
cmp
fdiv
das
jge
mov
lcall
push
or
jnp
scas
dec
imul
push
iret
add
lret
mov
inc
ljmp
inc
cli
add
jecxz
jne
jp
lahf
dec
mov
adc
jno
adc
loope
dec
add
jmp
pop
in
jns
nop
and
mov
dec
mov
pop
cmp
mov
inc
popa
and
scas
stos
jmp
shlb
adc
xlat
pop
dec
addr16
mov
rclb
xor
ja
fwait
push
daa
mov
cmp
rolb
movsl
test
jne
inc
push
and
ljmp
insl
mov
add
repnz
and
shll
outsl
lcall
xchg
cmp
or
addr16
addb
sub
mov
out
push
sarl
or
xchg
jecxz
sbb
lcall
cli
pop
mov
outsb
add
or
loope
inc
outsl
mov
cmpsl
mov
lcall
pop
dec
nop
jmp
add
sarl
fwait
lods
ja
hlt
inc
ret
cmp
mov
test
cwtl
cli
jecxz
sbb
insb
aaa
cli
xchg
xor
sub
in
mov
xor
popa
aas
lock
lahf
fildl
loope
cmc
mov
loop
jmp
xchg
insb
cmpsl
mov
jno
scas
and
cmp
int3
xchg
mov
mov
pop
sahf
xor
popa
sbb
mov
jl
cld
out
cmp
lret
out
lahf
lea
inc
xor
jmp
shlb
movsb
call
xor
jg
nop
call
and
inc
sbb
popa
pushl
stos
scas
fnstcw
aad
cmp
out
aas
gs
ss
jae
jb
mov
fcomps
dec
mov
outsb
enter
adc
nop
adc
lock
mov
sub
lret
inc
sub
ja
jbe
outsl
bound
sahf
dec
xchg
imul
jle
sbbl
das
xchg
stc
out
push
add
scas
pop
and
loope
mov
dec
fwait
mov
rcll
out
xchg
ret
stos
jl
inc
inc
out
std
loope
push
in
pop
push
pop
sbb
push
jle
push
test
sti
xchg
lret
adc
out
lods
lods
mov
repz
pop
and
add
stos
stc
rcl
xchg
fs
test
scas
es
mov
inc
cmp
aam
psubd
inc
inc
insl
cmp
dec
stc
insb
dec
mov
fwait
and
scas
fmuls
jmp
and
stos
pop
lock
leave
sti
stos
insl
add
aam
out
mov
and
cli
sbbl
jge
aam
enter
mov
pop
pusha
sbb
and
and
mov
fdivrs
mov
jp
sbb
xor
shll
cmovae
inc
and
ds
imul
mov
das
mov
xor
in
mov
cmp
inc
ror
pop
adc
mov
test
xchg
addr16
xor
test
aam
inc
insb
call
aad
push
cmp
fwait
xchg
mov
in
cmp
or
out
sbb
mov
stos
sbb
jp
mov
test
mov
cld
in
sbb
mov
scas
cld
xchg
movsb
stc
pusha
add
arpl
mov
mov
adc
fwait
negb
or
cmp
xchg
mov
mov
imul
mov
mov
jbe
sbb
pop
cli
jle
jmp
std
push
mov
gs
adc
movsl
testb
bound
insl
sbb
push
mov
aaa
push
push
pop
xchg
ret
js
shlb
push
sahf
aad
lahf
dec
les
stos
jp
or
mov
das
mov
mov
jae
push
stos
push
sbb
fdivs
or
aaa
cli
ljmp
fmulp
push
and
mov
mov
mov
sbb
add
cmp
jge
stos
jns
sub
pop
cwtl
das
mov
push
jbe
xchg
adc
lea
std
bound
jae
jno
sbb
mov
push
lcall
jmp
fsubp
add
adc
inc
dec
popf
cltd
dec
and
ds
mov
push
mov
dec
cmp
push
icebp
arpl
sahf
push
adcb
xchg
adc
adc
push
cwtl
enter
push
dec
mov
adc
or
lock
std
or
out
pop
sti
sti
pop
add
jp
xchg
mov
jo
movsl
ljmp
jnp
gs
mov
outsl
scas
fcmovbe
push
pop
decl
leave
rolb
nop
imul
mov
jle
dec
mov
ja
sti
fmull
into
mov
cwtl
cmp
vmread
adc
mov
and
xor
fucomp
fldenv
or
sbb
fwait
xor
or
bound
fwait
mov
testb
bound
mov
mov
adc
adc
test
pop
movsl
push
push
test
stc
rcrb
sbb
mov
cmpsl
inc
mov
or
stc
jmp
sub
insb
scas
mov
inc
mov
fists
push
mov
in
sti
mov
call
insl
lcall
insb
adc
pop
stc
aas
mov
cmc
sbb
dec
sahf
les
shll
hlt
stos
mov
iret
and
sti
adc
sbb
inc
sti
mov
aas
in
je
adc
je
mov
icebp
stos
xor
push
xor
inc
ds
in
sbb
clc
push
pusha
cld
sahf
push
roll
pop
mov
mov
dec
jle
xor
insl
jne
pop
outsl
outsl
inc
sub
push
or
sub
push
lods
scas
popf
push
jl
popl
push
outsb
fsubs
lock
insl
xchg
jo
sub
out
jnp
jl
and
jecxz
in
xchg
mov
mov
pop
out
and
imul
fwait
jmp
mov
cli
insl
decb
js
adc
or
loopne
cmpsl
pop
add
das
dec
cli
xchg
sti
pusha
mov
and
jg
stos
outsl
and
sti
pop
je
xchg
ret
jmp
stos
fucom
mov
jle
aam
cli
out
orb
sub
incl
add
mov
cmp
fsts
cmpsb
jns
ljmp
xor
shll
mov
mov
pop
sbb
stc
xor
jg
sub
cltd
xor
mov
test
xor
stos
xchg
fistl
push
mov
jp
inc
fcmove
fcomi
outsb
fbld
jmp
cmpsl
dec
lods
data16
jg
out
pop
or
xchg
sti
loop
fsubrl
pop
cmp
popa
cmpsl
rep
mov
push
cmp
aas
jns
cvttps2pi
insb
stc
mov
push
fistpl
or
mov
lods
addr16
int3
ss
and
daa
dec
cmp
xor
in
cmp
je
scas
lods
or
mov
ds
push
pusha
lret
icebp
xchg
mov
xchg
jbe
jae
movl
imul
fimuls
and
lock
push
test
int3
outsl
push
in
mov
sub
lods
cwtl
fldcw
pop
stc
stc
out
call
xchg
add
out
add
dec
xchg
adc
test
pop
ljmp
dec
movsb
cld
mov
cmp
lock
mov
stc
lahf
stos
xlat
idivb
fisubrs
aam
leave
mov
push
sbb
fsubrl
ret
mov
jg
aas
cmp
push
sarl
push
movq
sarl
out
ret
sub
mov
inc
roll
aad
popa
mov
lea
mov
adc
pop
cmp
mov
sub
jp
xor
jmp
adc
cmp
mov
aam
shrb
call
aaa
and
mov
pushl
repz
subb
mov
inc
stos
adc
jae
cmp
in
push
lcall
out
pushf
and
aaa
and
inc
movsl
nop
jmp
mov
sbb
sbb
jb
sub
xor
pop
mov
incb
mov
in
lcall
adcb
and
or
decl
das
iret
sbb
icebp
mov
leave
dec
imul
and
xchg
roll
stos
dec
mov
loope
pusha
push
std
addr16
xor
pop
sbb
jns
mov
out
mov
jmp
inc
lahf
sbb
jbe
mov
xlat
adc
dec
cli
std
mov
lret
mov
adc
jmp
ret
jg
and
or
xchg
xchg
sbb
aas
sbb
pop
stos
cwtl
cmp
mov
gs
mov
into
fwait
mov
push
ret
mov
arpl
xchg
xchg
test
pop
sahf
ss
or
inc
pop
clc
sbb
mov
and
or
inc
fdiv
dec
lods
repnz
push
xor
xor
mov
cmp
pop
push
mov
js
ret
aaa
notl
and
dec
test
pop
adc
clc
push
adc
xchg
ret
mov
rclb
test
jg
push
jae
pop
cmp
or
jle
pop
push
mov
fildll
iret
ficoml
cli
push
sbb
mov
test
mov
pushf
lret
adc
jg
sti
sbb
xor
mov
push
dec
cli
mov
mov
inc
mov
or
ljmp
jecxz
dec
jo
mov
adc
loopne
and
idiv
mov
and
jb
mov
int
cmp
test
sbb
jbe
sub
or
in
lcall
jbe
lret
sti
fucomp
pop
fcom
lea
mov
pop
dec
int3
out
jmp
mov
sar
repz
call
aad
cmp
icebp
or
pop
fcmovnu
mov
lods
sub
pop
cli
cs
cmp
jmp
mov
cmpsl
xchg
mov
pcmpeqb
push
cmpsl
adc
jle
aas
jmp
lcall
dec
xchg
testl
sti
inc
push
mov
call
in
mov
add
dec
sbb
sbb
shlb
negb
in
pop
mov
xchg
cmp
and
int
and
mov
jmp
lcall
loope
cld
fstpl
push
ja
xchg
and
adc
outsb
jp
fincstp
lds
mov
cmp
stos
lcall
jmp
or
jnp
dec
cmp
inc
out
dec
push
inc
lret
sbb
outsl
clc
fldcw
popf
mov
mov
adc
pop
mov
mov
sub
lret
pop
adc
out
insb
xor
push
jecxz
pop
jb
mov
push
pop
sbb
xor
stc
clc
jle
mov
js
mov
int
mov
mov
lcall
inc
pop
aam
jae
mov
outsb
loope
mov
cmp
stc
cmp
fcomip
push
push
or
scas
dec
test
pop
pushl
mov
cs
cltd
cwtl
push
push
addr16
aam
addr16
and
mov
xor
ret
xchg
scas
negl
shl
in
cmpsb
das
lcall
repnz
fistl
js
mov
cwtl
adc
rclb
imul
call
cmp
sub
sub
nop
cmp
cmp
aam
pushl
sub
lret
mov
out
fldcw
pop
fisubs
stc
jecxz
jne
ds
and
sbb
scas
addr16
test
scas
insl
sbb
fwait
outsb
or
test
jg
mov
xorl
mov
cmp
xchg
dec
and
scas
and
faddl
cltd
adc
cmpl
ss
mov
test
inc
fdivs
sub
add
jecxz
mov
add
add
out
jb
scas
mov
call
rcrl
icebp
sti
lret
adcl
adc
xor
xor
jnp
cmp
add
xlat
call
jbe
sbb
sti
jl
pop
push
sbb
push
xchg
mov
cwtl
xchg
mov
loop
xor
add
das
adcb
xchg
adc
idiv
inc
add
push
sahf
sbb
sbb
in
movsl
mov
sub
nop
cmp
cmp
divl
cli
jo
insl
jmp
mov
cmpsl
xor
ficoml
cmpsl
mov
cltd
cli
movsl
push
xchg
sahf
push
pop
aas
lahf
xor
mov
arpl
ret
push
mov
xchg
pop
dec
repnz
popf
sub
stc
stc
dec
clc
push
out
sbb
mov
jns
fiadds
mov
cmpsb
aas
out
jnp
xchg
jg
in
rcl
aaa
sub
lds
xor
orb
nop
mov
inc
adc
movsb
mov
push
pop
pop
adc
mov
clc
sahf
jae
mov
or
add
out
mov
icebp
mov
incb
iret
insl
cmp
sti
inc
mov
mov
negl
mov
xor
das
cmpsb
rorl
jl
das
movsl
ljmp
arpl
ds
test
stc
cmp
xlat
stos
cmp
call
mov
in
xchg
sar
hlt
ficoms
notb
xor
mov
dec
ljmp
rcll
das
sub
mov
mov
xor
push
or
sti
xor
in
xor
pop
int
xchg
and
xrelease
lock
xchg
jle
push
mov
xor
mov
dec
aaa
decl
pop
int
xor
mov
pop
mov
push
mov
aad
xor
ret
sub
mov
xchg
ljmp
fstpl
dec
inc
dec
push
stc
push
lea
and
pop
pop
pop
xchg
cmp
and
shlb
jmp
pop
sub
mov
imull
fstl
ds
xor
jmp
roll
aam
jmp
sub
sub
cmp
shll
mov
stos
cmpsl
mov
xchg
pop
adc
push
fiadds
sarl
cmpsl
inc
mov
fidivl
lahf
std
rclb
cmp
in
mov
mov
lcall
aas
jmp
cmpxchg
movsb
mov
or
xor
inc
ret
jecxz
fists
push
shll
std
mov
pop
and
adc
xor
lcall
or
fisubs
mov
cmp
in
add
pop
mov
scas
pop
jmp
dec
xor
mov
addr16
ret
pop
mov
dec
sahf
shrb
clc
jbe
jg
aaa
or
adc
inc
xchg
mov
sbbl
mov
rcll
cmp
cmp
mov
ss
test
sub
mov
push
lods
cmp
or
xchg
test
pop
repz
lods
xor
lods
mov
ret
jb
mov
jl
xor
xor
nop
insb
jle
test
arpl
ja
dec
js
mov
insb
push
leave
sub
mov
ja
fmuls
mov
fst
add
xor
mov
push
fcompl
fnsave
jle
xlat
fstl
daa
xor
and
out
lcall
insb
cmc
inc
fwait
je
jno
fcmovu
or
rcrb
lds
fstpl
xor
cs
aam
fptan
jns
xchg
lds
insl
int
repz
sbb
cmpsl
xlat
inc
add
push
mov
mov
cltd
push
or
xchg
push
mov
xchg
mov
cltd
inc
jae
ret
nop
xchg
outsl
dec
aad
xchg
dec
sub
incb
inc
cld
xchg
repz
iret
sbb
or
pop
or
stc
push
divl
pop
ljmp
jmp
or
sub
add
push
fadds
mov
or
sbb
repz
mov
loopne
aas
jmp
lock
pop
jbe
mov
or
movsl
add
and
idivl
and
push
push
out
cld
add
xchg
sbb
mov
scas
push
lods
mov
cmp
test
push
movsl
out
cmpsl
repnz
adc
dec
iret
jecxz
ljmp
add
jae
sbb
mov
dec
lahf
lods
mov
cwtl
lcall
mov
nop
out
insl
and
movsb
sti
pusha
jg
ret
cld
push
ret
mov
jmp
pop
pop
ret
lahf
xchg
mov
pop
jp
in
push
jb
xor
iret
imul
mov
adc
in
loopne
mov
mov
mov
sbb
icebp
cmpsl
dec
out
stc
jb
dec
xchg
stos
and
stos
scas
sub
shr
iret
iret
stos
repz
xchg
mov
cmpsb
cmpsl
cwtl
out
test
fsubrp
lcall
jns
out
inc
jecxz
jnp
repz
add
xchg
sub
and
push
xchg
mov
into
arpl
add
lcall
mov
mov
and
lock
or
pop
stos
out
xor
mov
sbb
lret
adc
outsb
fucom
in
mov
add
out
dec
xchg
jnp
inc
xchg
jge
movsl
mov
nop
in
inc
push
jnp
out
lcall
imul
loope
cltd
cli
pusha
add
ja
mov
aaa
adc
add
jle
ret
dec
arpl
ja
rorb
outsl
or
pop
aaa
mov
push
cs
xchg
es
iret
and
cmp
cmp
pop
and
and
movsb
adc
nop
dec
test
push
mov
ja
enter
mov
xor
jbe
sub
test
shrb
test
outsb
dec
pop
mov
mov
sbb
push
ret
arpl
cmc
adc
and
bnd
adc
clc
imul
nop
add
adc
adc
xchg
movsl
pop
sbbb
ljmp
and
or
notb
mov
sub
and
shlb
sarb
aam
fildl
popa
popa
repz
cwtl
cmpsl
mov
adc
sbbl
cmp
hlt
lods
fdiv
rcll
bound
mov
cmc
sti
clc
ljmp
xorl
scas
das
fildll
jl
pusha
bound
push
out
sbb
mov
ss
fadds
mov
int3
addb
or
movsb
imul
push
jg
pop
cltd
icebp
pop
mov
dec
nop
jecxz
scas
outsw
sub
jo
add
mov
mov
jmp
inc
mov
fdivp
mov
out
mov
or
xchg
aas
movsb
mov
dec
mov
lods
ret
push
fistl
ljmp
shll
add
jge
xor
scas
sub
cmp
insb
inc
jmp
clc
fimull
repz
repnz
xor
mov
xorb
xchg
adc
pop
xor
or
mov
adc
xchg
jns
and
popa
shl
icebp
addb
jbe
pop
in
mov
ljmp
out
insb
and
adcl
pop
lcall
push
pusha
fisubl
and
xchg
and
xchg
or
pusha
or
scas
and
stc
repnz
mov
cmp
mov
add
jmp
pop
mov
into
test
test
stos
pop
addr16
pushl
xor
push
cmp
leave
jg
je
jo
pop
test
dec
sub
rcrl
xchg
test
adc
pop
loope
sub
outsl
or
popf
push
cwtl
movlps
cld
jno
or
mov
push
stos
pop
dec
test
push
dec
outsb
xchg
pop
shrl
jnp
mov
fbld
imul
push
cmp
call
dec
pop
fs
enter
negl
repnz
mov
and
adc
daa
aad
fwait
inc
mov
push
push
fnsave
iret
mov
aaa
push
xchg
cs
dec
inc
je
mov
jmp
stos
dec
les
sti
mov
cmp
sub
mov
ljmp
fstp
rcrb
fisubs
in
sti
adc
cltd
mov
cltd
imul
push
xchg
pop
xchg
jmp
pop
jns
push
sub
inc
dec
scas
adc
lret
test
sub
mov
dec
and
sbb
xchg
pop
sbb
sbb
sbb
pop
xor
fbld
jne
call
or
sbb
mov
cld
xor
adcl
lock
pop
mov
shrl
adc
xor
mov
or
divb
sbb
push
mov
pusha
popf
fnstsw
and
jp
fstpl
jge
lret
cmp
into
jl
cmp
pusha
rcll
xor
jp
push
pop
jns
icebp
cmp
push
push
jnp
dec
imul
cmp
fwait
mov
enter
fsubs
lret
dec
inc
mov
icebp
xor
subl
sub
sbb
sbb
and
xchg
jae
movsl
sti
xor
subb
jno
lock
or
sbb
inc
out
push
stc
addl
xchg
jae
sub
mov
bound
inc
mov
hlt
push
in
cmpb
aam
insb
fidivs
pop
cwtl
lods
xchg
stc
cmp
jp
push
dec
out
sbb
lock
sbb
xchg
sbb
jnp
dec
xchg
jb
lock
push
xchg
insb
shl
stos
test
pop
shl
push
jmp
mov
gs
fiadds
cmp
mov
loope
jecxz
xor
jnp
mov
pop
cmpb
loop
dec
xlat
xchg
xor
dec
cmp
repz
repnz
push
fwait
fs
mov
fwait
xchg
pop
xchg
out
frstor
cmp
outsb
mov
cmp
outsl
adc
ret
cmpsb
sti
stos
jp
sub
int
mov
mov
xchg
fwait
ljmp
dec
fwait
or
or
cwtl
inc
and
cmc
add
cltd
in
clc
loopne
xor
jmp
jnp
call
adc
inc
fcomps
addps
adc
cmp
addl
mov
xor
psllw
push
sub
inc
loop
jbe
inc
out
sbb
and
ljmp
rolb
pop
insl
xchg
push
jno
fsubs
xchg
pop
cmp
ljmp
out
daa
push
je
push
int
in
jmp
sbb
or
and
mov
sti
fbstp
cli
aad
jecxz
mov
sub
cmp
push
loope
fsubrl
fwait
xor
and
jg
dec
repnz
sahf
xor
and
fstpl
inc
add
pop
jg
fidivrs
ss
lret
jns
push
bswap
call
inc
aaa
dec
loope
cltd
aas
popa
xor
movsb
scas
xor
cmc
cmp
jbe
push
imul
fistpll
mov
xor
ret
mov
pushf
xchg
or
mov
fistl
lcall
loopne
pop
cs
sub
aaa
push
push
mov
jl
push
add
mov
mov
and
cwtl
sbb
push
xor
jnp
cld
pop
mov
and
sub
mov
adc
in
and
arpl
pusha
sbb
and
cmp
sub
xchg
push
mov
lods
bound
lods
stc
scas
stos
dec
clc
mov
mov
lcall
xchg
jg
cmp
adc
jge
insl
mov
mov
pop
or
mov
xchg
mov
jbe
loop
add
popf
in
fidivrl
mov
je
xchg
cmp
aas
jns
jecxz
fildl
sahf
dec
pop
aam
cs
or
subl
pop
testl
jl
adc
add
loop
cmp
sbb
xchg
test
fs
test
incl
sbb
cmp
inc
push
fnstcw
mov
jg
lcall
sub
out
outsl
jge
out
xor
cmp
aad
sbb
sbb
lds
xchg
cmp
sub
fisttpl
xchg
arpl
out
jnp
sti
mov
cmp
call
jbe
mov
mov
nop
aaa
sub
fsubrp
or
repz
jnp
cmc
jmp
adc
lock
mov
sbb
xchg
lods
mov
jne
mov
pop
sub
xchg
push
test
jge
mov
call
mov
inc
adc
pop
jge
mulb
in
repz
xchg
and
pop
xor
xchg
cmp
mov
lahf
add
mov
jo
aaa
push
push
xchg
pop
xor
mov
es
repnz
xor
lods
fcmove
push
mov
mov
sbb
or
int3
sub
cmp
imul
mov
rcl
jns
stos
dec
nop
cwtl
out
das
mov
xor
jp
sub
jecxz
cmp
jl
push
std
xor
add
jl
sub
nop
inc
push
outsl
mov
dec
and
add
popf
das
and
pop
pop
clc
pop
stc
cld
mov
cmc
clc
inc
movsl
jae,pt
push
iret
or
adc
dec
ljmp
xor
or
add
xchg
mov
sahf
sbb
push
jge
xchg
test
pop
icebp
repz
pop
fptan
lea
mov
aas
xor
jg
add
popa
jno
inc
xchg
outsb
jbe
mov
fld
ficomps
fnstsw
fbld
enter
out
sub
sarl
stos
xchg
push
mov
in
and
outsl
jmp
sahf
aas
push
mov
jno
xchg
inc
in
data16
adc
loop
fwait
mov
jecxz
in
sub
pop
mov
jae
sub
jb
push
add
xchg
jae
pop
mov
ret
fs
lds
ss
jne
in
dec
mov
jne
out
lcall
mov
cmp
cmp
add
loopne
std
aas
icebp
sub
sbb
xor
cltd
lahf
and
lret
fimuls
popf
negl
aam
xor
scas
repnz
call
nop
cmpsb
mov
xor
add
stc
or
cmc
sahf
lcall
xchg
sub
mov
fldt
jnp
scas
xchg
sub
mov
cmp
rorb
push
scas
xchg
push
aaa
daa
and
into
pop
in
movsb
out
sub
iret
in
loopne
sbb
cmp
stc
stos
or
imul
jo
pop
test
movsb
sub
es
xor
add
scas
add
xor
imul
mov
and
jns
dec
mov
xor
push
call
pop
mov
mov
dec
insb
mov
ja
sbb
xchg
in
xlat
sub
imul
cltd
or
mov
fstpt
loopne
int3
add
sub
stos
div
push
jecxz
pop
mov
mov
cmpb
lds
in
sti
cmp
and
add
hlt
pop
call
shrl
sti
mov
ds
pop
and
popf
mov
dec
mov
xor
push
xchg
int3
sbb
add
ds
addr16
lds
es
push
mov
adc
das
mov
cmp
xchg
mov
jecxz
cmp
dec
adc
mov
add
cmpsb
scas
xor
push
dec
sti
mov
decl
and
outsl
addr16
pop
cwtl
sub
xchg
out
inc
cmpsl
fistpl
mov
shll
inc
lret
aaa
jo
dec
fwait
xor
dec
lock
inc
jbe
cmp
pop
adcl
ror
jge
push
mov
pushf
xchg
inc
out
or
bound
xchg
lods
sub
repz
fcompl
das
sub
cmp
out
ret
xor
movsl
cmp
xchg
cli
imul
mov
ret
sbb
cmc
lods
fsubr
fstl
cs
ret
pop
sbb
cld
or
inc
or
int3
mov
jns
sbb
mov
xor
sbbl
outsl
cmp
lret
test
sbb
scas
enter
mov
dec
mov
sub
andl
std
jnp
jno
movsl
adc
pop
mov
pusha
mov
ljmp
mov
sub
add
in
fsubr
ficomps
cltd
and
sbb
push
sbb
outsb
pop
xor
mov
jb
sbb
cltd
leave
loopew,pn
inc
ret
movsb
imul
mov
push
cmp
xchg
out
add
sbb
and
mov
inc
or
push
push
cmp
push
adc
and
popa
push
xor
sub
outsl
js
ja
add
jmp
ja
lock
add
xchg
and
sbb
loope
mov
mov
push
push
sub
mov
mov
es
sub
sub
and
int
mov
cmp
sti
sub
lcall
test
leave
stos
fwait
aas
dec
mov
aad
adc
adc
outsb
das
dec
pop
xor
mov
jo
lret
sti
repz
xor
cmpsl
sub
xchg
imul
dec
out
pop
jo
pusha
xchg
mov
sub
or
inc
xchg
stc
add
pushf
cvtdq2ps
xchg
dec
push
call
rcrl
movsb
jns
lock
rorb
clc
out
dec
cli
test
sbb
cmp
and
inc
sbb
mov
fwait
loope
dec
xchg
adc
push
push
test
test
or
adc
mov
sbb
ret
cmp
mov
outsl
mov
inc
jp
icebp
jns
aad
mov
in
pop
push
or
jns
icebp
in
push
pusha
sub
mov
xlat
in
or
in
jns
jb
movsl
jle
out
xchg
int
xlat
aas
mov
push
lods
and
faddl
jae
inc
dec
xchg
xor
cmp
out
sbb
scas
mov
stos
mov
jnp
jnp
mov
jecxz
mov
xor
daa
ja
leave
mov
shrl
mov
aad
gs
sbb
xor
jns
xor
and
jae
test
mov
rcrl
popa
movl
xor
aas
imull
jle
inc
jg
clc
push
sarl
xlat
mov
stos
xlat
insl
adc
jp
ficoms
pop
xchg
into
add
pop
xchg
leave
mov
insb
ljmp
imul
cltd
or
sbb
pop
mov
jb
cmp
push
inc
loopne
icebp
pop
pop
mov
cmp
mov
movsl
cltd
icebp
daa
nopl
mov
movsb
mov
inc
in
jo
iret
gs
cltd
jbe
lods
outsl
lcall
test
or
fsubs
lcall
mov
add
mov
xchg
fistl
adc
test
and
jmp
dec
xchg
leave
mov
cli
std
sbbb
add
in
sub
test
cwtl
mov
xchg
mov
pop
fidivl
xchg
jb
cltd
test
dec
loopne
push
repnz
test
stos
lds
stos
cmp
xor
imul
sbbl
inc
mov
and
mov
push
mov
push
or
or
js
jge
xor
orb
ljmp
pop
fwait
das
sub
loopne
lods
pop
lret
sbb
cli
bound
and
push
or
xchg
dec
repnz
push
mov
sahf
outsb
cld
inc
xor
pop
stos
jnp
sbb
in
je
in
bsr
xor
or
mov
mov
mov
iret
mov
mov
pop
ficomps
les
jne
fadds
rcrl
sub
fxch
push
mov
or
mov
loop
test
sub
ljmp
mov
test
pop
add
push
in
shll
pop
xor
fwait
jmp
movlps
jne
sbb
fwait
mov
mov
jmp
test
cltd
jmp
into
sbb
pop
testl
pop
pushf
repnz
outsl
int
jns
mov
inc
inc
call
int3
mov
mov
push
and
mov
cwtl
lods
inc
jmp
add
mov
sub
cltd
cmp
mov
push
int
imul
scas
sub
out
and
jb
add
fnstcw
cmp
sub
or
imul
sti
clc
cmpsb
aad
xchg
stos
movsb
mov
repz
adc
add
scas
and
into
sbb
enter
dec
lods
ja
mov
jge
icebp
fistpl
out
sbb
leave
adc
pop
loopne
xchg
jns
lods
push
and
clc
lahf
leave
push
rorl
xor
push
sahf
sbb
jbe
mov
lock
mov
mov
jns
cwtl
fisttps
aaa
lods
jecxz
cmp
sti
adc
scas
stos
hlt
clc
stc
stos
xlat
sbb
loop
push
and
add
test
shll
add
in
dec
sub
add
cmp
and
mov
cmc
mov
lret
fwait
in
movsl
repz
push
stos
or
adc
pop
repz
lods
mov
jb
out
mov
and
outsb
dec
and
and
stc
out
imul
gs
inc
aam
lahf
xchg
ret
xor
xor
jle
cmp
mov
test
add
mov
lret
xchg
incb
dec
inc
test
cmp
cmpsl
mov
cltd
cmp
push
mov
imul
std
push
in
mov
scas
mov
cld
popf
xchg
adc
out
inc
hlt
adc
es
ss
loopne
lcall
testb
shrb
sbb
sub
push
scas
and
mov
xchg
and
sbbb
aad
repz
outsb
inc
xor
in
pusha
lcall
sub
xchg
ret
roll
js
arpl
cmp
cmp
cmp
push
adc
mov
jecxz
jge
cmpsl
aaa
mov
push
add
mov
push
sbb
ljmp
fcompl
filds
aad
ja
push
test
jecxz
pop
sbb
int
ret
loopne
fsubp
mov
in
aad
arpl
lods
cltd
and
push
iret
sbb
adc
dec
arpl
sahf
aas
cmp
jle
mov
sub
xlat
repz
fistl
repz
push
push
sub
dec
sti
cmp
jg
fwait
stc
lods
lret
stc
stc
pushf
mov
sub
aaa
repz
lahf
and
imull
and
aad
sbb
pop
xchg
mov
mov
sub
mov
add
in
lcall
cmpsl
xor
daa
iret
jns
or
sbb
out
push
add
daa
aad
lret
mov
or
mov
fs
out
or
adcb
in
pop
xchg
xchg
sbb
sarb
mov
stos
xchg
into
adc
mov
ds
sbb
push
nop
dec
mov
jecxz
sub
xchg
scas
js
int
xor
popa
notl
xchg
jl
sbb
pop
imul
cld
sub
xchg
test
test
dec
jmp
stc
in
hlt
rcll
xchg
clc
fdivp
insl
in
xor
sub
push
iret
fstpt
and
pop
stos
mov
aad
inc
mov
das
inc
inc
insl
mov
mov
push
out
mov
in
in
mov
inc
cmp
rcrb
cltd
mov
rol
push
popf
cmpsl
mov
cltd
in
or
add
gs
int3
fwait
mov
int
insb
ljmp
fisubrl
outsb
inc
popf
dec
add
cmp
aas
sbb
sub
or
rorl
cli
pop
ficomps
mov
ret
aam
jno
pop
pop
rorl
add
xor
pop
add
or
pop
shll
andl
or
imulb
jge
push
jecxz
cltd
push
jmp
xchg
or
jle
jmp
push
cs
out
push
sbb
ds
jmp
sahf
pushf
sti
xor
xchg
jno
jno
mov
cltd
call
aas
sub
sub
int
jmp
sub
xchg
adcl
int3
scas
pop
push
push
gs
dec
xchg
cs
xchg
repz
lcall
sahf
mov
jmp
adc
ds
ret
test
call
cmp
outsl
bound
movsb
sub
jnp
negb
jmp
shl
inc
lcall
fdivs
aad
ja
aam
jge
adc
mov
in
cltd
addr16
out
clc
imul
adc
pop
cmp
add
jns
rcll
cli
jb
cwtl
js
pop
xor
int3
inc
push
pop
rclb
mov
add
mov
mov
cmp
jno
iret
sub
popa
into
repz
and
movl
fdivrs
and
jb
ror
push
sub
out
mov
jg
aaa
mov
cs
imul
into
push
int
push
fdivrp
inc
enter
das
cmp
nop
bound
jmp
adcb
movsl
int
or
mov
mov
pop
add
sub
sub
mov
mov
jno
stos
fwait
pop
xchg
adc
in
fucomp
lahf
lcall
add
xchg
mov
add
stos
pop
cmpsl
mov
xchg
mov
mov
shrb
xlat
pop
scas
mov
dec
mov
xchg
repnz
sbb
fdivp
rcrb
ljmp
jns
mov
mov
in
int3
jae
shll
fdivrs
rclb
xor
fwait
cwtl
fmul
je
loope
sbb
jae
mov
and
out
mul
jno
pushf
sbb
mov
outsl
shrl
repz
loope
jnp
scas
leave
cs
pop
add
jo
xor
cmpsb
cmp
cmp
mov
mov
inc
mov
mov
les
fwait
cmpsb
mov
movsb
pop
cmp
int
lock
movsl
stos
pop
repz
adc
push
add
lret
sub
xchg
mov
fdivrp
aam
clc
cli
mov
test
add
cmp
mov
jge
inc
out
mov
xor
dec
insb
mov
je
mov
xchg
xchg
into
cmp
out
fisubl
fninit
shl
pushf
mov
lcall
push
loop
jg
xor
shrb
rcrb
cmp
or
jno
jmp
inc
push
xchg
mov
stos
insl
mov
sub
and
pop
sbb
mov
and
inc
aaa
mov
xchg
or
add
lret
sbb
adc
in
or
sub
lahf
pop
cmp
es
sahf
cli
sbb
test
or
push
push
mov
mov
fdivrl
lahf
sbb
adc
adc
shll
aas
das
imul
dec
push
jmp
int3
les
xchg
into
inc
mov
pop
sarb
dec
int
mov
cli
xlat
test
out
cs
jbe
cs
mov
stos
pop
ljmp
fs
pop
xchg
loop
in
xchg
mov
or
cld
add
out
fs
and
outsl
pop
pop
or
jle
cmpsb
movsl
aaa
not
mov
xchg
cltd
cmpsl
nop
pop
cmp
sbb
sbb
pop
scas
mov
out
loopne
in
add
movsl
addr16
stc
fucomi
cmp
mov
aaa
adc
dec
push
popf
push
fistpll
sub
movsl
clc
mov
imul
xor
aaa
cmp
pop
mov
add
daa
or
dec
pop
xor
icebp
add
lret
adc
add
roll
mov
push
fwait
sub
push
jmp
stos
filds
push
lds
clc
nop
cmp
test
xchg
push
inc
vmovhps
cmp
and
sti
pop
fisttpll
mov
mov
dec
lret
mov
or
pop
xchg
aad
sub
mov
loop
sbb
clc
jmp
aas
std
shl
shll
jmp
inc
fstps
test
mov
push
and
mov
adc
fcoms
inc
add
jb
mov
movsl
fidivrs
or
sahf
mov
lock
jecxz
dec
rorl
dec
jns
cltd
mov
add
fdivl
or
hlt
stos
leave
sbb
dec
mov
cmp
movsl
pop
xor
mov
rdmsr
or
xchg
mov
orl
inc
sub
pop
jl
xor
outsb
mov
sbb
rcrb
mov
sbb
cld
jns
inc
sub
cli
gs
push
lret
xchg
aaa
cmc
xchg
adc
cmpsl
lods
mov
in
mov
cmp
mov
push
mov
dec
jne
mov
repnz
sti
jnp
call
jb
sbb
adc
and
inc
aas
inc
call
fwait
imul
xchg
shrb
pop
pushl
xor
pop
sti
push
sub
std
shrl
int
push
fidivrl
lods
pop
mov
les
rep
jg
cmc
mov
ljmp
std
xchg
incb
adc
xchg
add
inc
xchg
shr
cmp
xor
imul
push
loope
testl
das
fcoml
cltd
data16
xchg
mov
test
or
pop
mov
outsb
mov
sahf
sub
jle
xchg
inc
popl
push
into
push
jecxz
mov
push
xchg
lds
mov
cmpl
out
xor
push
and
sub
shr
xor
mov
sbb
fdivrs
xor
mov
or
testl
lea
add
pushl
xchg
mov
add
jne
fidivl
hlt
jecxz
stc
sti
sub
mov
dec
sti
movsl
mov
lcall
shlb
mov
arpl
addr16
test
out
insl
rcll
out
adc
xor
cmp
loope
and
or
xchg
mov
icebp
sarl
stos
andb
sub
cmpl
leave
movsl
xor
mov
loopne
sub
sbb
mull
shll
ficoms
pop
jmp
sub
testb
push
stos
mov
or
pop
xchg
sarl
pop
fmull
ja
insl
lock
cmp
sbb
aad
movsb
mov
cli
sbb
mov
add
outsb
and
mov
in
hlt
mov
xchg
xor
and
dec
aas
cmpsl
adc
test
or
out
xchg
mov
lret
or
mov
stos
inc
cmp
mov
mov
mov
pop
scas
cwtl
pushl
in
shrl
ficoms
jl
mov
fcomi
pushf
decl
mov
mov
aas
jne
jns
jecxz
fisubrl
idivl
pop
jns
pop
inc
jg
mov
adc
jmp
loop
xor
clc
mov
repnz
xor
xor
cmpsb
test
add
loopne
pushw
ffreep
push
xlat
outsl
es
mov
and
das
mov
sub
lock
test
inc
or
incl
mov
outsl
addr16
mov
xor
push
lock
mov
mov
sarl
mov
loope
pop
dec
mov
fnstsw
pop
int
cmp
mov
cli
fxch
xchg
lahf
jno
dec
and
scas
cwtl
popf
out
pop
pop
or
sub
stc
scas
lret
in
iret
sbb
push
pop
leave
aad
ret
mov
pop
cwtl
jmp
and
add
ljmp
movsl
jle
dec
mov
clc
cmpsl
mov
xor
push
mov
fmul
ja
sub
scas
fisttpl
lahf
out
imul
adc
lods
and
lcall
mov
xchg
jg
mov
cli
outsb
add
mov
loopne
mov
cmp
fsubp
jmp
popf
fsubrs
lods
mov
sub
sbb
cltd
or
jge
mov
adc
xor
fiaddl
mov
pop
jge
addr16
mov
dec
or
clc
ret
in
xchg
mov
loop
stos
add
xor
stc
mov
fwait
xchg
and
push
jmp
and
js
imul
loop
cmp
data16
push
stos
fcomi
or
and
mov
aas
scas
rcr
push
popf
outsl
xor
mov
js
bound
sub
mov
or
adc
icebp
das
into
mov
ret
fstpt
cltd
or
jmp
lods
in
xchg
ret
jno
movsb
cltd
jg
test
push
xor
sub
pop
mov
jmp
scas
lock
pusha
cs
in
xor
mov
setno
xor
scas
lea
aas
xor
pop
inc
push
push
addl
mov
jmp
and
mov
jge
xchg
mov
push
lods
scas
arpl
cmp
dec
ret
push
scas
dec
or
sbb
sub
jnp
hlt
mov
adc
stos
daa
push
in
add
mov
mov
push
jnp
pop
xlat
pop
icebp
cmp
out
or
in
fwait
pop
loope
lahf
js
mov
fsts
fisttpll
jns
xor
jno
stos
xorb
lds
popf
mov
imul
push
jns
dec
setle
pop
cli
mov
outsl
je
mov
mov
dec
push
xor
push
xchg
aas
cmp
and
or
adc
imul
jo,pn
xchg
cmp
sub
cmc
cmp
scas
push
sbb
mov
dec
or
dec
cmp
dec
adc
xor
loopne
pop
jge
negl
sub
jge
inc
or
test
int
mov
int3
jl
adc
insb
stos
mov
and
fstl
and
jg
dec
xchg
je
or
xor
dec
jmp
pushf
out
mov
jne
fnstenv
cmpsl
push
lret
xchg
stc
test
xchg
push
in
cmp
pop
rcl
cwtl
dec
daa
rorb
mov
xlat
fcmovu
orb
mov
sub
push
xor
ds
in
cld
sub
xchg
jmp
aas
leave
mov
in
cmpsl
mov
xlat
fcompp
cmp
out
frstpm(287
xchg
test
dec
mov
cmp
mov
or
mov
mov
cmp
shlb
mov
idiv
inc
adc
test
inc
aaa
xchg
cmpsl
jle
fnstsw
pop
fs
int
mov
stc
ror
push
jl
push
xor
and
xor
adc
data16
aam
xor
testl
fwait
lock
lock
mov
incl
pop
stos
xchg
xor
aaa
orl
int3
sbb
sub
sar
je
jb
xchg
stc
repnz
test
sti
cmp
das
xor
scas
cmp
dec
xchg
ffree
loop
mov
repnz
repnz
mov
fucomip
xor
dec
loop
jo
pop
jmp
sahf
flds
mov
hlt
push
dec
jle
fistpll
or
sub
xchg
clc
pop
inc
scas
dec
mov
pusha
inc
or
mov
pop
dec
sub
sti
pusha
imul
or
jns
push
leave
xchg
sub
cmc
imul
add
mov
pop
mov
mov
frstor
sub
adc
jp
bound
cmp
vpmullw
cmp
push
jb
mov
mov
repnz
cmpsl
inc
mov
fisttpll
aad
push
dec
mov
and
mov
ds
pop
mov
adc
sub
lret
ficoml
ss
pop
lock
mov
sbb
ror
inc
mov
jno
leave
mov
jg
bound
mov
fdivrs
popf
adc
push
xor
and
ret
data16
outsl
cmp
ljmp
stos
clc
scas
mov
in
hlt
mov
push
es
popa
nop
iret
add
fucomp
mov
jge
loope
jp
shr
pop
mov
mov
push
nop
adc
mov
push
iret
dec
adc
xchg
inc
pop
ljmp
jns
fldcw
clc
inc
lcall
mov
push
jmp
xor
mov
sub
jmp
jg
ljmp
sub
fiaddl
ljmp
mov
divb
pop
inc
test
repnz
jne
mov
sub
cmp
jmp
int
xchg
inc
pop
dec
jae
not
mov
mov
test
es
or
mov
mov
and
pop
rcrb
mov
lret
aaa
mov
sti
mov
lods
xchg
cs
mov
cld
pop
mov
arpl
inc
lea
sbb
shlb
pop
sarl
mov
xor
clc
test
out
cltd
call
adc
cmp
pop
and
mov
sbb
rclb
xchg
sbb
jbe
dec
lock
in
jns
ds
test
mov
mov
dec
xchg
cmp
test
mov
mov
cli
cmp
mov
icebp
icebp
icebp
stos
pop
mov
jle
adcl
pop
roll
mov
rcrb
repnz
out
lret
call
push
push
mov
cld
adc
mov
jp
push
scas
mov
mov
sub
lods
xor
sbb
adc
leave
fimuls
cld
adc
test
mov
sbb
fldlg2
ljmp
cmp
pop
int3
lret
mov
push
mov
stos
mov
icebp
pop
mov
cmc
cmp
fs
add
mov
xchg
lret
lock
cmpsl
xchg
xorl
mov
or
arpl
adc
inc
rclb
cmpsl
sti
cltd
pusha
test
js
pushf
fldenv
mov
adc
sahf
mov
sarl
incl
cmp
mov
lods
xchg
cmp
pop
mov
inc
ds
cwtl
shl
aam
and
test
jl
cmp
mov
xchg
pop
jo
mov
pop
ja
lahf
inc
xor
jnp,pn
scas
cmc
xchg
insb
and
negb
sbb
pusha
cmp
scas
jnp
or
std
and
repz
lret
sti
in
mov
testb
xorb
in
mov
pop
inc
inc
cmpsl
jle
xor
xor
pushf
lcall
insl
lds
je
mov
add
test
test
mov
call
daa
jl
out
insl
sub
in
icebp
mov
mov
shlb
out
sub
cmp
cs
ljmp
sub
mov
cmpsl
loopne
xchg
sub
notl
jne
jecxz
add
inc
xlat
addr16
lahf
mov
mov
inc
lods
lahf
popa
xchg
pop
xchg
scas
adcb
or
and
leave
iret
or
adc
andl
les
jmp
push
repnz
stc
push
pop
jne
mov
aad
sub
mov
mov
imul
jl
icebp
and
pop
aaa
dec
js
pop
jecxz
aaa
pop
sti
cmp
pop
aas
sbb
mov
inc
xor
aaa
cmp
mov
cmp
data16
jne
test
cmp
arpl
push
cmp
movl
ljmp
aam
xchg
pop
jp
inc
gs
repnz
fldz
fmul
test
cmp
sbb
mov
repnz
iret
or
aas
xchg
lret
xchg
cltd
movsb
test
pop
mov
mov
out
and
or
adc
push
aaa
clc
mov
lahf
lahf
into
aam
adc
ljmp
and
lods
lea
jle
xlat
mov
inc
addr16
std
fbld
stos
add
lods
jb
mov
mov
outsl
jge
cmp
push
sahf
sub
mov
loope
xchg
or
in
sahf
jp
jnp
scas
outsb
or
mul
mov
cmpsl
cltd
jne
pushf
xchg
inc
mov
es
insl
rcll
cmpsl
mov
out
jns
mov
pusha
mov
nop
jle
add
or
mov
mov
pop
ret
sti
xchg
mov
xchg
xchg
lret
xchg
inc
inc
repz
xchg
and
push
push
xchg
cmp
cs
mov
jae
inc
jbe
stc
inc
test
out
movsl
push
sbb
arpl
cmp
in
mov
jbe
mov
lcall
testb
std
int
jbe
lret
popa
mov
cmp
xor
xlat
pop
pop
push
xor
mov
mov
ds
add
sbb
ljmp
dec
adc
pop
mov
push
mov
xor
xchg
dec
inc
jo
ss
push
jle
push
lret
mov
arpl
push
push
jp
sbbb
cmp
inc
hlt
push
pop
das
jae
cmp
jge
cmp
dec
in
xchg
sti
and
sbb
test
mov
add
lods
cmp
es
mov
cmp
pushf
arpl
cmp
add
movsb
jecxz
jecxz
sbb
mov
push
pop
pop
jl
stos
sbb
adc
mov
call
pop
ss
decl
shl
inc
xorl
cltd
jl
stc
clc
fcomps
data16
or
push
mov
inc
push
subb
inc
out
sub
and
incb
pop
sbb
popl
add
mov
test
fildl
ret
dec
xchg
sbb
add
cwtl
add
push
loope
sbb
shll
dec
adc
shr
sti
ror
xchg
je
loop
or
imul
ret
in
and
cltd
aaa
insl
arpl
sub
or
sub
int3
or
mov
cmp
popf
push
mov
mov
jecxz
mov
lock
fwait
dec
jmp
sub
jo
je
push
ds
mov
pop
in
xor
or
xchg
ljmp
out
popa
in
cld
and
shll
bound
subl
sbb
mov
faddl
xor
popa
clc
insl
lods
push
test
lea
decl
divl
jbe
adcb
and
sarl
adc
pop
mov
leave
stos
subl
dec
pop
sub
xchg
mov
ret
arpl
mov
cmp
subb
popf
xor
xor
push
lretw
data16
dec
loop
movsl
mov
or
mov
push
cmpsl
shlb
or
fnstenv
stos
scas
sarb
out
sbb
int3
jp
ret
jecxz
mov
pop
mov
dec
pop
ss
test
mov
out
mov
in
jp
pop
cld
mov
mov
ja
adcl
bound
cwtl
cmc
cld
pop
pop
jae
pushl
mov
mov
cs
inc
test
xor
hlt
inc
cmp
daa
mov
das
or
addr16
or
lret
jnp
and
stos
aam
addl
mov
jne
fxch
lods
pop
addl
xor
xchg
scas
jb
jp
jae
stos
out
sub
push
hlt
and
and
dec
xchg
xor
cmp
fstl
dec
shlb
mov
pop
mov
jmp
dec
cmp
xchg
imul
sub
cmpsb
cmp
mov
mov
inc
mov
cs
enter
adc
xlat
pusha
and
mov
mov
shll
scas
add
bound
test
fistps
movsl
xchg
pushf
insb
lods
mov
xor
jns
daa
lock
mov
movsl
sbb
out
pop
mov
lfs
outsl
fwait
inc
popf
inc
sbb
outsl
sbb
fwait
cmp
ret
or
xchg
sbb
mov
aad
add
cli
cli
stos
lock
popf
std
das
or
mov
push
call
stos
sub
ret
jno
data16
jbe
cmp
jge
inc
mov
sub
sub
fadds
je
test
js
jecxz
inc
aam
inc
dec
outsl
and
dec
push
sub
cmp
xor
jle
ret
pop
dec
jns
mov
imul
xchg
addr16
lea
inc
repz
out
popf
jge
fcoms
loope
and
push
mov
fstpl
dec
mov
sbb
add
jno
lahf
cmp
cmc
ret
push
sub
pop
sub
out
xor
lds
and
clc
inc
sbb
pop
test
xchg
nop
push
adc
push
and
cmp
jns
push
xor
jg
push
mov
popf
mov
cmc
mov
cwtl
sub
bound
int
insl
imul
out
notl
cmp
dec
add
imul
or
adc
dec
outsl
daa
mov
cltd
shlb
mov
dec
out
pop
cli
movsb
xor
xor
xchg
imul
jns
inc
das
sbb
xor
fnstenv
test
das
mov
or
xchg
cli
and
xchg
repz
jno
aaa
sahf
inc
enter
jns
cmpsl
push
sub
scas
add
stos
rorb
sarl
mov
xchg
in
lcall
dec
out
mov
rclb
insl
adc
imul
cmpsl
pop
shll
sbb
test
gs
and
aaa
sub
xchg
xlat
mov
or
sub
test
mov
mov
fmul
lret
fcmovnbe
push
xchg
mov
mov
jnp
cmp
xchg
movsb
xor
dec
fcmovnu
adc
mov
addr16
cmp
je
mov
lcall
mov
mov
es
stos
repnz
xchg
ja
jae
popf
or
jp
fldt
mov
jne
dec
shr
xor
xchg
or
inc
insb
ss
in
or
dec
cli
jae
cmp
hlt
decl
mov
insl
fs
lds
dec
mov
lcall
or
mov
cmc
loopne
sbb
std
mov
pop
cmp
jecxz
sbb
xchg
xor
and
stos
xchg
insb
or
mov
xchg
jae
mov
loop
xor
mov
xchg
cmp
das
mov
pop
incl
and
loop
xchg
jb
cmc
xchg
loopne
mov
push
cmc
sbb
cld
mov
adcl
xlat
lock
xor
push
mov
scas
idivb
test
mov
nop
push
xor
jp
data16
sub
sbb
into
sub
lcall
pop
mov
mov
cmp
mov
pop
mov
add
xchg
xchg
inc
hlt
dec
inc
push
mov
loop
mov
and
stos
cmp
mov
sub
inc
ret
mov
cmpsb
or
xor
bound
repnz
mov
inc
mov
jmp
lods
stos
sbb
sub
inc
mov
lahf
addr16
cmp
or
sti
mov
repz
push
xchg
test
dec
in
leave
mov
scas
loopne
dec
cs
dec
in
push
add
add
xchg
fldenv
movsl
mov
enter
pop
ja
sbb
mov
jle
icebp
pop
push
add
jo
jecxz
mov
aad
aaa
jp
mov
adc
sbb
mov
movl
jno
stc
inc
mov
pmullw
mov
pop
ja
stos
popl
sbb
ficoms
and
jae
or
fwait
xor
movsb
cltd
fiadds
clc
scas
insb
xor
stos
arpl
addr16
mov
mov
inc
sbbl
mulb
dec
ss
cs
cmp
iret
xor
cmp
mov
add
jo
and
repz
lea
cmpsb
cmpb
sub
mov
pusha
lret
test
jge
ss
scas
ja
mov
stos
outsl
popf
jmp
loopne
mov
lcall
pop
mov
andl
mov
adc
sub
repz
leave
inc
mov
imul
mov
pushf
pop
loop
shll
push
or
mov
inc
inc
cli
mov
jle
sub
sbb
push
cmp
sbb
lcall
inc
pop
adc
lahf
fcmovu
test
sub
scas
sub
das
jae
jge
push
xor
movsb
outsb
mov
and
divb
xlat
push
xchg
out
jnp
dec
mov
mov
push
cli
das
insl
add
aaa
jp
fstps
sub
mov
mov
adc
repz
jns
xchg
inc
fstpt
sub
xor
addr16
xchg
js
mov
sub
pop
arpl
jno
mov
xchg
inc
mov
pop
add
and
push
insl
mov
and
pop
inc
pop
xchg
lret
inc
mov
mov
lahf
mov
push
pop
jg
mov
das
ret
jmp
xchg
inc
into
jbe
lock
mov
in
sub
xor
pop
cmp
fdiv
insl
adc
pop
push
les
loope
xor
sbb
outsb
and
push
daa
xchg
fdiv
lret
popa
mov
pushf
xor
dec
mov
cld
test
xchg
jnp
sub
pop
leave
divl
pop
cltd
mov
iret
clc
inc
xorb
push
out
mov
les
sub
stc
lods
and
out
in
movsl
push
jg
jae
ror
cmove
scas
js
les
mov
vcmpsd
xchg
sarb
addr16
and
xlat
mov
pop
test
sti
xor
repnz
inc
mov
icebp
clc
cmp
xchg
outsl
mov
insl
adc
sub
aam
cmp
inc
dec
jecxz
jns
and
mov
lds
fstpt
ret
ja
dec
sub
xor
jmp
dec
mov
sbb
mov
jle
popf
push
push
inc
mov
sbbl
stos
pop
addb
sahf
mov
mov
popf
orb
cmp
imul
jns
clc
ret
stos
iret
js
push
fstpt
mov
mov
subb
xor
xchg
mov
xor
inc
fcompl
test
mov
sbb
mov
dec
sub
cmp
imul
in
ljmp
inc
sbb
xchg
mov
pop
add
nop
insb
jle
dec
rolb
mov
jp
mov
jle
out
movsb
test
mov
sbb
repz
xor
movsl
mov
and
mov
mov
sbb
mov
xchg
mov
dec
and
xchg
addb
shl
ss
dec
stos
mov
repnz
mov
scas
sbb
imul
test
lcall
je
enter
and
add
cld
repnz
fwait
mov
dec
cmp
jnp
jecxz
cmp
xorl
jmp
dec
mov
mov
adc
xchg
xchg
jnp
pop
ss
mov
dec
xchg
adc
and
inc
push
xor
mov
inc
mov
jle
mov
sbb
cmp
movsb
js
and
push
je
jp
pop
xchg
insl
xor
dec
filds
andb
pop
enter
cmp
insl
cmp
xchg
mov
out
or
pushl
add
cs
inc
mov
xchg
mov
xor
mov
mov
lcall
sbb
or
fdivl
sub
and
repnz
xor
dec
cmpsl
addb
aas
loopne
stos
xor
xchg
mov
sti
cmp
icebp
inc
jg
outsl
pop
and
mov
frstpm(287
lods
clc
mov
mov
lds
cmp
inc
cmp
test
push
and
mov
incb
and
mov
or
cmp
pop
jp
sbb
jne
sub
xchg
movsl
popf
jp
mov
or
mov
les
gs
outsl
and
ss
shlb
mov
xor
mov
jne
sub
push
mov
cld
sbb
add
nop
test
inc
repz
jp
shr
aaa
adc
adc
jnp
mov
iret
mov
mov
jns
mov
xchg
test
xor
aaa
ret
inc
jge
test
aam
cmp
shrb
fsubrs
sub
mov
jnp
movsl
ficomps
outsb
dec
mov
lret
push
adc
les
xor
nop
cmc
aas
lea
dec
push
jle
les
lcall
add
sbb
sub
inc
cmp
inc
push
xor
dec
imul
adcb
mov
xchg
lds
fadds
js
arpl
and
repnz
mov
xchg
aas
mov
dec
sub
and
test
push
inc
mov
xor
out
jnp
popa
xor
xor
lcall
sub
ljmp
je
add
mov
sub
int3
push
int3
sbb
inc
pop
stos
push
leave
mov
push
iret
or
cmp
out
inc
xor
mov
je
cmp
adc
popf
cmp
mov
scas
lret
dec
scas
lods
fistps
adc
pop
repz
inc
nop
xorb
or
out
mov
or
cltd
pop
lahf
ljmp
xor
in
lods
adc
es
or
fldt
pop
inc
fwait
push
cmpsl
mov
repnz
dec
mov
jb
pop
mov
xchg
aaa
pusha
ja
mov
push
push
aam
ror
call
cmp
or
inc
outsl
shll
cld
std
mov
sbb
mov
sbb
lock
sbb
in
cli
call
nop
pop
sahf
cmp
fcomi
insl
and
mov
roll
pop
ljmp
mov
loope,pt
push
test
addr16
xor
jae
mov
stc
xor
inc
push
push
mov
push
sti
ljmp
imull
dec
iret
stc
mov
lock
push
js
sbb
mov
jp
inc
sbb
popa
jae
mov
cmpb
mov
lock
mov
pop
cmpsb
cmpb
out
mov
cmp
stos
aam
mov
pusha
jecxz
sti
les
xchg
in
imul
fcoml
xchg
dec
and
mov
lcall
inc
adc
mov
mov
nop
push
arpl
push
loope
xchg
les
in
pop
jl
lods
pop
adc
jne
push
lcall
mov
popf
xor
pusha
rolb
incb
cmp
push
aam
dec
cmp
divb
rcll
push
lds
mov
cli
lds
dec
dec
clc
sahf
mov
ret
loope
pop
in
popl
lcall
dec
inc
inc
pop
mov
scas
fisubs
jae
add
xchg
xchg
dec
and
jb
rcl
push
nop
lods
mov
jmp
adc
or
push
test
push
mov
jp
inc
test
lock
movsl
lret
jecxz
and
or
pushf
aam
imul
loop
mov
daa
xor
xor
fists
mov
gs
in
jo
xor
dec
mov
sahf
rclb
xchg
test
ljmp
adc
fiaddl
ftst
pop
add
cmp
inc
mov
ds
aad
dec
adc
stc
mov
adc
scas
pop
pop
mov
shr
xchg
scas
lret
imul
sti
nop
and
loope
mov
mov
mov
add
pop
xchg
lret
in
cmp
in
pop
xchg
or
mov
in
cltd
mov
sbb
mov
add
cs
rcr
push
jae
rorl
add
cmp
xlat
dec
pop
sub
cmp
or
out
pop
shlb
loopne
pop
xchg
ja
sahf
test
or
lods
push
cmpsb
mov
pop
cltd
jg
cltd
shrb
mov
mov
sub
insb
test
jns
ja
or
sub
cmp
arpl
xor
push
mov
clc
mov
mov
call
and
lret
mov
lahf
sbb
xlat
mov
jnp
loop
leave
sbb
dec
mov
inc
call
test
insl
pushf
fildl
cmp
jns
lods
push
inc
mov
pop
adc
shrl
jecxz
pop
std
dec
jno
test
push
push
test
aad
and
jle
dec
xor
es
pop
test
cmp
adc
cmpsl
lds
jo,pn
cmp
inc
lcall
ret
repnz
push
xor
mov
dec
mov
std
in
aad
fisubs
dec
pop
mov
sbb
xor
hlt
cmp
popl
or
clc
mov
imul
xchg
movsl
mov
insl
jns
andl
or
mov
lods
sahf
jnp
lret
sbb
les
and
xchg
imul
xorl
stc
mov
xchg
mov
pop
push
hlt
adc
fstenv
mov
xlat
insl
cmp
in
mov
mov
cmpsb
pop
movsl
add
pop
addr16
cmpsl
out
pop
sbb
lahf
push
pop
lods
loop
add
stos
jb
inc
xchg
bound
out
push
enter
pusha
sbb
xor
arpl
adc
int
ds
mov
dec
sahf
insl
hlt
cwtl
or
cli
add
lret
repz
mov
add
not
leave
movsb
sub
push
and
sarb
jge
mov
mov
call
adc
jno
movsl
inc
jb
lret
clc
cwtl
pop
adc
push
inc
data16
xchg
sbb
ret
ss
push
popa
fildll
sub
addr16
and
xchg
test
xchg
cmpb
xor
xchg
nop
int
in
gs
xorl
mov
mov
bnd
mov
push
stos
rolb
aad
loop
cmpsl
adc
lcall
mov
in
push
pushl
push
xchg
movsb
mov
aas
out
leave
mov
push
fldt
imul
test
adc
sub
cmpsb
mov
test
cmpsl
mov
jmp
mov
jge
mov
mov
mov
fdivs
popa
lods
outsl
jp
int
mov
xchg
idivb
sub
stos
push
lock
lods
push
mov
mov
outsl
mov
add
int
cld
xor
and
inc
sbb
push
test
sub
add
push
cltd
das
adc
lcall
mov
mov
ret
inc
mov
test
pop
clc
and
cmpsb
inc
fidivs
ret
xor
and
movsl
pop
jp
adc
popf
mov
jge
or
cmp
jmp
push
xor
mov
mov
fucomp
push
cwtl
mov
xchg
cmp
pop
cmp
ljmp
nop
rol
mov
hlt
jbe
es
sti
test
dec
pop
cs
mov
xchg
scas
pop
mov
sub
stc
or
js
lds
push
fsubrl
aas
cld
xchg
imul
shll
call
dec
out
dec
inc
test
out
or
in
cwtl
inc
inc
add
mov
cmpsl
or
fildl
lock
dec
mov
fdivl
cmp
mov
call
mulb
jecxz
stos
mov
out
adc
add
mov
lret
dec
pop
pop
xor
rorl
jbe
xchg
pop
mov
add
pop
out
lods
outsl
xor
pop
loope
mov
fisubrs
dec
scas
mov
stos
insb
mov
adc
imul
mov
adc
dec
and
fidivs
pop
in
mov
ficoml
mov
jle
jb
or
mov
lret
insb
daa
dec
push
mov
sti
jno
jge
pop
enter
fsubrl
fwait
sub
jecxz
fbstp
pop
sbb
in
cmpsb
aas
js
jmp
es
mov
std
imul
push
cld
xchg
inc
and
std
jnp
jns
mov
mov
xor
test
popa
inc
scas
jg
mov
pop
shrl
adc
mov
mov
jl
or
clc
addr16
imull
rol
sub
test
out
hlt
fistpl
or
inc
repz
mov
xor
lods
push
loop
pop
shrl
xlat
jne
andl
jno
fwait
int
bnd
jns
jae
cld
push
mov
lods
mov
std
mov
jl
out
lahf
xor
push
cs
movsl
sbb
nop
dec
fists
mov
cmpsl
cmc
sbb
and
lcall
dec
cld
jbe
mov
dec
cmp
mov
push
lods
xchg
ds
xchg
test
iret
int3
out
xor
popf
cltd
mov
ljmp
mov
xor
cmp
adc
movsb
nop
sub
cltd
mov
int3
mov
stos
cltd
out
add
scas
std
adc
jl
pop
in
fdivs
dec
dec
cmc
sti
and
stos
sbb
pop
cmp
xlat
add
cmp
and
shrl
sahf
pusha
hlt
lcall
jbe
push
sub
je
dec
int
xor
mov
mov
and
hlt
add
decl
jp
fwait
inc
aaa
fldln2
xchg
loop
xor
pop
xlat
fsub
push
xor
fbstp
fisttpl
jecxz
sti
add
cmp
shll
ret
js
sbb
mov
inc
scas
mov
xchg
inc
push
iret
jmp
jbe
cmp
mov
xchg
outsb
mov
jmp
fimull
lcall
xchg
outsb
push
popa
sahf
push
jp
adc
ror
cmp
in
add
mov
pop
inc
cwtl
shrl
xor
leave
adc
jo
mov
outsb
test
bnd
mov
movsb
xchg
lret
push
ljmp
jecxz
inc
pop
lock
das
addr16
std
stos
sbb
mov
jae
popf
mov
rcll
ja
or
inc
pop
xchg
push
mov
movsb
fisubrl
ja
lret
loopne
mov
dec
dec
outsl
pop
fsubrl
xchg
fadd
push
cli
jle
and
xchg
pop
outsb
sub
shrb
fimull
lcall
jb
pop
inc
out
sbb
mov
sbb
shll
mov
imul
inc
cwtl
adc
mov
mov
cmp
call
sub
cmp
dec
jmp
gs
test
out
jno
mov
dec
aad
and
mov
mov
mov
mov
inc
stc
mov
popf
sub
cs
fucom
cmp
adc
fidivrl
xchg
das
xor
and
lea
xchg
jecxz
dec
jo
popa
add
dec
lret
imul
lret
in
mov
jmp
push
sar
mov
mov
aaa
lret
push
push
test
sub
sub
imul
fimuls
bound
pop
pushf
dec
pop
cmpsb
out
push
or
mov
in
popf
lcall
lret
std
xor
pop
jo
jno
sbb
dec
mov
hlt
adc
jae
cmp
inc
mov
roll
test
mov
push
in
or
cmp
cmpsl
mov
jp
popa
lods
loop
lods
inc
mov
jo
pop
jmp
cmp
lds
imul
imul
pop
pop
mov
pop
xchg
or
fistpll
mov
cmp
push
or
jmp
jge
or
add
adc
aas
not
orl
sbb
ljmp
scas
jmp
pop
dec
clc
xchg
scas
sbb
fadd
xlat
jl
mov
push
test
insl
shlb
jmp
xchg
negl
leave
pop
das
test
filds
fmul
cmp
int
mov
clc
in
jmp
mov
push
ret
inc
lcall
pop
and
rorb
jmp
insb
test
cwtl
mov
stos
sbb
xor
or
mov
mov
or
add
and
mov
testb
sahf
and
adc
in
xchg
fiaddl
jp
pop
lahf
xor
out
scas
dec
bts
mov
rorb
scas
xor
popf
lea
mov
mov
vpand
and
adc
fidivl
lcall
popf
outsl
mov
or
out
inc
jnp
sti
jg
pop
xor
cmpb
clc
cs
mov
arpl
lcall
js
arpl
sbb
mov
cmp
push
jb
scas
lock
jl
mov
xor
imul
std
lods
mov
das
jo
pop
push
lcall
mov
cli
mov
mov
lock
dec
cli
push
leave
in
test
iret
dec
xchg
fdivr
mov
scas
arpl
fcoms
xchg
mov
out
and
sub
fwait
xorl
lock
add
call
ret
pusha
xchg
mov
xchg
xor
push
fscale
cmp
iret
mov
out
and
jno
fisubl
addl
jmp
cmpsl
xor
and
je
rol
cmpsb
rcl
mov
jns
insb
inc
mov
ret
sbb
addb
leave
push
pop
jmp
inc
dec
mov
sbbl
xchg
cmc
mov
and
leave
mov
shll
lcall
xchg
rcr
push
jmp
cmc
and
imul
cmp
mov
mov
subl
ret
mov
jae
cmp
cmp
mov
jmp
mov
imul
test
add
push
push
fidivrs
in
adc
pop
sti
mov
scas
lea
fwait
sbb
dec
loopne
icebp
repnz
push
mov
mov
push
fwait
test
das
add
xchg
lret
dec
popl
pop
outsl
push
jnp
sub
sbb
jge
xor
pop
mov
pop
and
pop
xor
push
mov
fwait
stos
in
sahf
out
xor
leave
addb
in
aad
xor
mov
adc
mov
inc
out
xchg
jmp
mov
mov
or
inc
xchg
mov
inc
imul
aaa
fmulp
rcrb
inc
pushf
lcall
add
xor
out
sahf
cmp
mov
pushf
movsl
mov
cmpsl
lahf
cmc
xor
mov
jns
out
push
mov
or
cmp
mov
sub
ljmp
popf
inc
test
xchg
xor
mov
mov
scas
jmp
xorb
push
dec
imul
pop
push
int
pop
dec
movsb
lret
cmpsb
xchg
dec
lock
fcmovne
stos
xor
stos
fstpl
js
push
dec
ret
jmp
mov
dec
push
jnp
addr16
sub
out
mov
jne
movsl
idivl
mov
or
aaa
iret
jecxz
jge
cmp
lret
or
inc
movsl
icebp
dec
jg
xchg
in
inc
jnp
jp
mov
dec
gs
cmp
std
outsl
repz
jb
fwait
push
mov
push
mov
dec
jns
cmp
frstor
inc
jp
ss
adc
mov
adc
jns
pop
adc
sbb
sahf
lock
testl
aad
ss
pop
shrl
add
mov
mov
xchg
pushf
jb
movsl
inc
xor
jecxz
mov
cmp
in
adc
push
fisttpl
add
lods
out
ss
scas
aas
push
lcall
sbb
jae
data16
add
fbstp
loope
into
push
mov
mov
in
mov
das
inc
xchg
int3
ja
xchg
repnz
xlat
and
adc
test
mov
xchg
jno,pt
jnp
icebp
push
cwtl
outsl
cmpsl
inc
mov
insb
ds
enter
fldcw
cmpsb
cmp
fs
jmp
mov
jno
mov
sub
movsl
cltd
and
push
lcall
mov
sbb
xor
mov
xlat
imul
out
fsubrs
or
sbb
repz
mov
mov
fsubp
out
rcrb
mov
ja
mov
ljmp
fsubrs
xchg
lock
outsl
add
insb
or
inc
dec
loope
addl
pop
xor
mov
sti
mov
jl
xchg
sub
dec
dec
cwtl
inc
jae
iret
outsl
dec
fs
leave
mov
movsl
push
ja
push
fistl
mov
fcompl
shl
jmp
mov
add
enter
xchg
lods
fxch
inc
jbe
lcall
dec
cmp
mov
mov
mov
call
lods
loopne
or
loopne
cmp
pop
cli
xchg
cmp
jle
out
and
mov
shll
or
sarb
inc
inc
push
jg
xchg
pop
xchg
lea
cmp
jnp
fsts
dec
orb
lcall
push
sub
cltd
lea
mov
rcr
ljmp
push
mov
mov
jb
xlat
shll
adc
enter
ja
or
lahf
xchg
xchg
mov
pop
pusha
cli
xchg
pop
xchg
repz
dec
mov
sar
sub
out
push
push
pop
sbb
fld
push
jae
mov
paddsw
stos
and
mov
mov
cmp
clc
inc
pop
lahf
test
and
jl
mov
mov
bnd
out
inc
fnstenv
fmull
adc
mov
cld
xchg
inc
or
imul
pop
mov
xchg
mov
in
repnz
cmp
aam
dec
iret
lods
mov
adc
adc
shll
pop
add
or
rcr
inc
gs
and
sti
mov
mov
and
jno
cltd
and
xchg
or
cmpb
aad
pop
lods
mov
adc
insl
xlat
push
lret
dec
out
cmp
in
imul
push
jbe
lahf
add
pushf
aas
and
push
fcmovnbe
dec
fiadds
mov
jmp
inc
fwait
test
jne
adc
push
jmp
stc
jge
add
mov
ud0
mov
mov
out
lcall
xor
jp
xchg
pop
js
test
inc
mov
in
test
or
loope
mov
push
js
push
push
test
xchg
pop
shrl
cmp
dec
pop
lret
aad
gs
or
sub
dec
aaa
ds
icebp
fcmovnu
jle
sahf
push
dec
int3
cmp
mov
repnz
mov
jp
dec
std
out
mov
leave
and
dec
xchg
cmp
adc
cmc
dec
subb
aaa
inc
mov
push
test
xchg
sarl
sub
pop
ja
fnstcw
jmp
mov
mov
lods
fiadds
xor
xchg
cmc
push
nop
movsb
mov
and
enter
idivb
ja
adc
cmp
mov
push
movsl
std
pop
mov
or
pop
insb
adc
mov
cli
mov
cmp
cmpsb
je
sbb
shl
dec
xchg
mov
mov
fs
inc
pop
test
push
jmp
adc
inc
stos
lods
cmp
cld
add
mov
iret
outsb
movhps
aaa
xor
mov
shlb
add
cwtl
scas
lret
dec
push
ds
adc
std
inc
xlat
pop
stos
xorb
ss
fwait
jno
fnsave
and
mov
add
mov
mov
xchg
cmp
xorl
fucomp
inc
pop
jge
push
dec
mov
rcll
popf
sbb
ret
cmp
mov
pusha
push
lock
push
fiadds
in
test
test
mov
pop
adc
mov
cli
cmp
sub
ljmp
lret
sub
hlt
mov
idiv
orl
push
sub
pop
jl
mov
mov
lcall
andb
bound
inc
or
out
jo
mov
sub
or
jecxz
test
aas
xor
lcall
pop
xlat
or
test
inc
sahf
lret
pop
cmp
ljmp
ljmp
adc
mov
inc
stos
fldl
adc
test
outsl
ficomps
sub
push
rorb
lea
dec
adcl
mov
mov
fdivl
lea
stos
ja
push
ja
enter
lods
fstl
stc
shrd
pop
ret
jno
ds
shlb
arpl
lcall
pop
adc
sbbl
adc
and
int
fs
iret
dec
mov
cmp
cmp
push
lock
jns
xchg
sub
add
mov
pop
outsb
inc
cmp
mov
mov
shl
mov
inc
push
dec
dec
mov
inc
jp
int
cmp
pushf
aas
sub
shlb
sarb
cmp
aam
in
mov
in
add
stos
clc
ret
mov
adc
pop
popf
inc
xor
popa
sbb
cmpl
inc
cmp
mov
mov
pusha
pop
rcr
stos
sub
jns
test
mov
cmp
les
enter
jle
daa
inc
mov
test
aas
mov
cmp
cwtl
add
inc
xor
mov
mov
call
push
dec
sub
loope
mov
or
cmpb
jne
shlb
pop
jecxz
xor
push
aaa
mov
lcall
xor
scas
int3
xchg
repz
shlb
xlat
aas
mov
cwtl
xor
mov
xor
sbb
fistl
sub
add
or
cmc
stc
mov
cld
dec
cltd
or
push
test
jmp
mov
clc
call
and
orb
push
adc
inc
adc
stc
fs
jnp
out
pop
std
lea
xor
popa
mov
and
sbbb
pushf
jno
mov
mull
jg
sbb
arpl
movsl
jmp
dec
jl
inc
sbb
cli
push
jae
fbld
pop
sub
mov
movsb
out
inc
es
mulb
jge
iret
pushf
mov
mov
mov
data16
cmp
ffree
aas
xchg
sbb
cmp
and
dec
je
arpl
jp
push
or
or
adc
and
cmc
sahf
ljmp
mov
loop
icebp
dec
icebp
leave
cmp
loope
fldl2e
icebp
mov
pop
add
jp
mov
es
bound
dec
rol
push
pop
and
test
xchg
xchg
icebp
repnz
jle
sub
mov
out
imul
xchg
stos
repz
xlat
sbb
insl
aas
adc
stos
pop
rcr
xor
lret
cmp
fidivrl
mov
aaa
and
loopne
mov
pop
into
leave
jo
outsl
es
mov
xchg
mov
mov
mov
dec
leave
sbb
xor
hlt
cmp
loope
mov
aam
xchg
aas
and
pop
std
fnstcw
gs
or
fists
xor
imul
hlt
jns
clc
popf
bound
inc
jecxz
imul
mov
mov
pusha
push
stos
inc
cltd
inc
adc
stos
xchg
mov
mov
sub
mov
clc
rcl
jg
mov
and
repz
div
mov
push
cmc
lret
xchg
bound
in
mov
in
iret
imul
jo
cmpsl
push
push
sti
or
sbb
jnp
dec
sbb
outsb
adc
sub
sub
sarb
sti
data16
dec
push
lods
cmp
xlat
add
icebp
ja
jle
adc
add
mov
xor
xor
clc
dec
pusha
mov
sarb
lods
setbe
fmul
jb
sub
lahf
in
mov
jge
mov
xor
dec
mov
lods
sahf
aas
imul
mov
push
lret
pop
int
xchg
dec
ss
nop
sbb
cmp
stos
addr16
mov
std
lea
push
out
cld
add
jne
fcompl
xorl
cli
divb
and
inc
pop
pop
shr
fisubrl
push
mov
clc
or
mov
into
cmp
jae
mov
or
test
sub
mov
ficomps
mov
dec
movsl
sbb
rorl
mov
addl
js
cmc
cmp
push
lcall
or
jo
sahf
xor
mov
daa
adc
mov
xchg
push
xor
por
dec
aam
cld
sub
add
push
mov
or
jmp
sbb
xchg
jnp
sbb
lahf
dec
sub
fmul
mov
stos
sbb
push
add
cmp
push
jecxz
es
inc
aas
inc
out
fistpl
dec
jmp
rol
xor
lock
mov
loope
and
stos
pop
mov
dec
scas
mov
adc
jns
int
addr16
insb
ret
sbb
test
cwtl
xchg
xchg
rcrb
sti
add
sahf
push
icebp
cmp
jb
stos
mull
loop
loopne
xor
mov
in
jmp
in
cmp
sub
and
out
mov
stc
adc
xchg
iret
or
xor
mov
adc
mov
pushf
and
jmp
xor
dec
xchg
ficomps
out
out
add
push
js
xchg
and
sub
jle
insl
dec
mov
out
mov
popa
aad
pop
xor
stos
fs
dec
faddl
cmp
icebp
mov
cmc
in
sbb
inc
into
mov
jmp
shr
pop
inc
jp
mov
fisubrl
icebp
out
mov
out
mull
or
push
pop
dec
aam
data16
jmp
cmpsl
xchg
pop
enter
fistpl
popf
xchg
mov
jp
mov
ffreep
mov
inc
xor
ffree
mov
movsb
and
add
enter
xor
stc
sbb
cli
jnp
mov
loop
movsb
lcall
mov
cmpsb
pushf
test
and
ja
fcompl
daa
sahf
cmp
mov
idivb
mov
mov
mov
mov
dec
push
sbb
pop
shr
lods
and
cmp
lods
mov
je
shlb
adc
inc
sub
mov
mov
clc
jb
mov
sbb
pop
mov
fwait
dec
shlb
movsl
ret
insl
or
dec
jno
ss
cltd
xchg
jl
scas
add
outsl
sbb
xchg
xchg
out
sbb
movsb
aam
negl
dec
je
xchg
jo
rcll
cmp
rorl
dec
push
fistpl
fcomps
cmp
movsl
or
ret
xchg
mov
dec
into
movsl
sbb
cwtl
cld
mov
mov
pop
sbb
popa
lods
iret
cmc
fistpl
mov
dec
and
stos
mov
and
sbb
sbbb
pop
pusha
jb
sbb
mov
into
jno
sbb
push
dec
mov
jns
jg
adc
inc
in
pop
cmpsb
les
out
add
lds
push
inc
mov
lock
pop
dec
pushf
rorb
divl
mov
movsl
mov
call
popf
decl
adcb
sti
fs
mov
push
cmp
rdmsr
popa
imul
jnp
sub
ret
sahf
daa
jno
aaa
bound
das
ljmp
or
xchg
cmp
jecxz
testl
adc
add
push
jae
dec
loope
mov
lahf
xchg
rcl
clc
cltd
inc
push
jb
stos
out
mov
adc
out
mov
pop
sbb
lcall
cwtl
aas
lods
cmp
xchg
outsl
das
decb
xchg
xchg
sbb
jne
les
fisttpl
nop
enter
and
mov
pop
push
mov
jecxz
sub
scas
sub
pushf
loope
sbb
ret
and
mov
inc
mov
negl
xchg
in
dec
cli
bound
cmp
mov
jmp
mov
mov
xchg
lods
ret
cmp
add
inc
lods
mov
outsl
inc
ja
mov
cmc
push
xor
and
sahf
xor
mov
icebp
cmpl
xor
clc
pusha
add
sub
push
cld
and
sbb
pop
cwtl
push
mov
ret
push
stos
sub
jp
jp
lock
cmpsl
jb
jae
cli
pop
leave
dec
push
mov
jae
adcb
mov
xchg
mov
inc
lret
lret
jae
mov
mul
pop
mov
and
sbb
mov
mov
fdivl
es
mov
xchg
pushf
iret
scas
pop
and
add
mov
fistl
aas
ljmp
and
fstpt
std
xchg
cmpl
pmaddwd
xor
mov
and
push
sti
push
hlt
mov
iret
add
dec
mov
or
out
dec
cmp
inc
orb
xor
cmc
jl
inc
ss
jb
in
xor
mov
mov
and
cmp
xor
dec
mov
xor
inc
lret
les
push
movl
and
sub
mov
mov
lcall
fldenv
adc
sub
jmp
in
push
sub
mov
inc
lret
push
imulb
cmp
outsb
mov
arpl
stos
stos
cli
pop
test
push
cmp
popf
in
inc
jns
shl
in
fwait
pop
jnp
xchg
sbb
pop
jecxz
cmp
ret
stos
mov
pop
mov
clc
jb
in
push
inc
inc
rcll
mov
mov
jnp
mov
ljmp
cmp
negb
popa
cmp
sahf
push
jle
fwait
jno
ret
and
push
mov
lcall
in
test
cli
mov
cmpsl
lret
outsb
sahf
decb
jmp
hlt
scas
out
mov
lods
jbe
sub
mov
inc
js
sub
mov
mov
pushf
mov
clc
sub
insb
sti
jb
mov
mov
aam
sub
inc
cmp
cmpb
test
sbb
enter
dec
jp
test
push
lods
loope
jne
out
jp
jno
xchg
ret
stos
scas
jge
iret
add
inc
jno
cmpsl
decl
imul
cwtl
add
xor
xchg
ljmp
sbbb
stos
repnz
lds
daa
cmpsl
push
cmp
mov
jbe
flds
mov
mov
and
lahf
mov
imul
stos
aas
jl
push
imul
push
sub
call
adc
sarb
aaa
test
lret
sub
cmpsl
mov
int
push
add
mov
insb
repz
jle
fwait
mov
test
shll
sub
pop
pop
or
push
cs
push
mov
iret
shlb
xlat
xchg
mov
bound
sbb
dec
sub
adc
and
nop
push
ret
stc
pop
push
fwait
test
mov
popa
dec
insl
jecxz
sub
sbb
pop
ljmp
aas
jecxz
and
cmpsl
or
sarb
pop
jmp
pushf
xchg
push
ss
or
mov
mov
cmp
pop
lea
mov
icebp
repnz
ljmp
cli
push
test
mov
xchg
sarb
popf
out
mov
fstps
dec
ds
or
lock
rcr
mov
mov
lock
enter
shll
cmp
repz
xchg
or
dec
sti
and
fisubrs
mov
jno
cmp
jnp
bound
ljmp
stc
xlat
rorb
mov
lods
inc
mov
fcompl
addr16
inc
insb
fldenv
mov
mov
lods
add
imul
das
sbb
or
test
vpor
xchg
pop
mov
loope
push
movsb
sub
cmp
or
je
jne
mov
mov
loop
test
test
pusha
inc
or
sbb
lahf
jecxz
mov
or
aaa
les
lahf
dec
mov
int
fldenv
lcall
sbb
mov
xor
push
dec
mov
les
push
pop
jl
xchg
pop
mov
popf
push
xlat
mov
scas
idiv
or
nop
jp
dec
adc
data16
std
mov
iret
sub
mov
scas
cmpsl
cwtl
mov
sub
cmpsb
and
movsl
and
dec
xor
add
adc
xchg
mov
lret
imul
pop
mov
mov
dec
add
push
push
mov
outsl
ja
fnstenv
add
arpl
cli
test
pop
movsl
xchg
test
dec
lret
cmc
aas
mov
loope
call
int
arpl
test
push
pop
mov
cmp
scas
mov
imul
jns
cmp
mov
add
xchg
jp
adc
mov
add
jo
jae
xlat
mov
cwtl
jmp
mov
mov
rol
scas
xchg
sub
popf
mov
popf
insb
mov
test
aam
mov
mov
or
clc
popa
sbb
xlat
scas
lods
xchg
fs
mov
cmp
cmp
xlat
cmp
in
jae
mov
or
std
jl
mov
les
cmp
bound
out
pop
sbb
data16
or
mov
movsb
aas
and
dec
shl
test
push
repz
cs
xor
cmc
js
cltd
mull
daa
mov
das
fnstenv
cltd
repz
insl
outsb
rcrl
mov
sbb
push
pushf
or
sub
fstps
out
shlb
rolb
mov
andb
insl
loop
cmp
bsr
mov
cmc
inc
imul
mov
lock
cmpsl
dec
mov
inc
lret
adc
movsl
stc
jmp
in
dec
fnstsw
outsb
fstps
adc
jns
sub
fisttpl
mov
push
mov
inc
push
add
icebp
ss
cli
cmp
mov
jg
mov
pop
mov
adc
repnz
jl
out
faddl
hlt
fistl
cli
xor
es
add
or
inc
mov
mov
addl
movb
xor
int3
les
sti
mov
mov
gs
pop
inc
test
inc
pop
mov
jb
mov
adc
fstpt
das
cltd
xchg
scas
fwait
push
imul
mov
dec
pop
or
jmp
and
push
idivl
mov
stos
xor
push
into
fidivrs
ret
fidivrs
int
in
sbb
repnz
out
sub
and
divb
jae
rorl
das
jge
inc
add
shll
xor
insb
pop
mov
daa
inc
rcll
cmpsb
idivl
sub
js
mov
repnz
ljmp
xchg
add
pop
stc
mov
jns
imul
jle
sub
inc
add
hlt
scas
cmp
fwait
mov
movsl
inc
fcomip
lcall
fists
lods
fnstsw
lcall
fnstsw
cmp
push
pop
mov
in
xor
mov
fdivrp
mov
mov
arpl
add
jnp
pushf
sahf
jbe
sub
data16
pop
push
jl
rol
xor
dec
jae
es
xchg
lret
popa
movsb
and
jo
add
cmp
add
idiv
xchg
or
lock
ret
aad
push
pop
xchg
or
pop
cmc
cmp
xchg
mov
push
aad
test
sahf
rcll
shll
dec
cli
mov
pop
sbb
pop
fldenv
outsl
test
cmp
flds
cmp
hlt
lods
pop
shll
sub
inc
and
lea
adc
and
xchg
mov
fidivrl
jne
jmp
lds
inc
lret
pushf
in
or
sub
xchg
cmp
mov
outsb
outsb
fnstsw
xor
inc
inc
test
push
mov
push
and
in
fldl
pop
jnp
xchg
or
mov
out
adc
sbb
mov
rol
aas
hlt
mov
pop
xchg
dec
sbb
adc
xor
mov
xorb
andl
in
iret
xor
and
das
cmpsl
std
mov
jge
mov
fidivrl
or
hlt
in
xor
fsubrs
sbb
xor
arpl
shl
push
mov
inc
mov
xchg
pop
sub
dec
inc
pop
mov
push
push
cmpsb
sbb
jae
lods
testl
mov
mov
testb
stc
and
dec
repnz
inc
sub
mov
cli
cmpsb
xor
cli
lods
adc
pop
fimuls
addr16
mov
ffreep
lahf
cmp
ljmp
into
mov
stc
outsb
mov
das
cli
cmc
mov
sub
rorl
dec
loop
push
sbb
scas
out
push
xchg
idiv
in
imul
mov
sbb
hlt
mov
sbb
mov
inc
pop
dec
lcall
fsubp
popa
xor
mov
stos
popa
mov
test
clc
jo
fcomps
sbb
xor
push
addb
pop
sbb
rorb
daa
in
xor
shrl
xchg
sbb
mov
pop
loop
xor
xor
xchg
out
sbb
cmp
mov
or
fldenv
mov
je
aas
stos
push
mov
dec
stos
pop
insl
push
cmc
inc
mov
or
scas
cs
jl
adc
cmp
stos
dec
pop
sahf
pop
mov
or
mov
or
xchg
or
clc
mov
jg
scas
pop
sarb
cltd
cmp
addr16
dec
cmp
pop
insb
xor
std
leave
dec
into
lcall
mov
xor
sub
cmp
cld
pop
jl
dec
pop
sub
add
xchg
sbb
ret
fisubs
add
mov
scas
push
cmp
sub
mov
dec
outsl
stos
dec
fldt
das
pop
inc
pop
movsl
out
and
sbb
xchg
mov
ds
lahf
or
stc
cmpsb
jb
dec
mov
dec
mov
xor
lret
jmp
cmp
aam
jb
and
inc
dec
das
cwtl
mov
lock
push
add
or
jle
xchg
mov
js
lret
sbb
loop
lods
std
cmpsl
xchg
out
icebp
xchg
add
jp
sub
popf
loope
mov
lods
fistl
jg
mov
or
pop
lcall
dec
repz
inc
ds
js,pt
ljmp
lods
xor
cmpl
push
sti
mov
aam
nop
mov
out
test
mov
or
lcall
and
push
xchg
std
prefetchw
or
sbbb
pop
iret
or
adc
mov
mov
dec
pusha
imul
jnp
cmpsl
dec
adc
in
xor
pop
aaa
loop
sbb
jg
pop
inc
add
push
in
or
xor
push
dec
bound
sti
mov
xchg
mov
mov
imul
mov
repz
test
loop
jns
cwtl
sti
fsubrl
lods
cld
dec
pop
mov
les
ss
jmp
and
mov
adc
sbb
jl
fsubp
aad
fwait
imul
sbb
lret
popf
and
insb
in
idivb
repz
jae
pop
jne
adc
loopne
cld
lock
cltd
xchg
rcl
mov
ljmp
les
adc
dec
lcall
pop
mov
lods
scas
pusha
scas
fdivrp
rorb
decl
je
mov
insb
cmp
dec
mov
pushf
pop
mov
cmp
fwait
stos
fwait
test
aaa
imul
mov
cmp
jl
jmp
xor
inc
cmp
mov
cli
imull
mov
out
dec
cli
mov
nop
dec
jp
pop
inc
test
xor
rcr
fstp
push
mov
push
push
leave
jl
lods
adc
mov
out
repz
and
mov
idivb
hlt
pop
xor
andl
aad
clc
rclb
arpl
pushf
mov
mov
dec
xor
ret
js
ret
sarb
pop
mov
enter
insb
cmpsb
xor
fidivrl
lahf
js
imul
add
cmp
add
dec
dec
cmp
mov
mov
aas
mov
cld
movsb
cmpsb
mov
jo
das
mov
and
loop
and
mov
jg
mov
push
mov
movsl
les
movsl
sub
cli
ret
bound
hlt
mov
out
add
scas
cmpsl
repnz
scas
jp
adc
mov
sbb
in
sbb
cmp
jmp
sub
mov
ret
ljmp
jae
cwtl
mov
shr
js
dec
mov
cli
stos
fdivrs
add
adc
lea
mov
loop
test
push
and
jbe
cltd
lods
dec
bound
pop
xchg
lahf
add
jmp
outsl
mov
xchg
sbb
pop
int
mov
or
repz
push
rclb
xchg
pushf
sbb
cmp
lcall
lahf
outsb
mov
nop
in
outsb
or
mov
scas
rcll
inc
sets
mov
pop
hlt
and
test
ds
dec
clc
adc
jnp
sbb
dec
push
push
dec
mov
mov
push
enter
push
and
test
pusha
mov
mov
fcompl
in
push
imul
ljmp
and
and
int
inc
hlt
lahf
dec
call
ret
aas
add
push
sbb
les
push
movsl
push
cmp
cmp
lret
pushf
repnz
xchg
lds
mov
mov
stos
call
jge
js
adc
xor
add
inc
packssdw
mov
mov
inc
out
push
jmp
xchg
orl
push
jnp
sbb
or
push
mov
mov
iret
push
xchg
jno
mov
mov
ljmp
pop
out
jno
sbb
inc
imul
pop
out
pop
cmp
ds
sbb
xor
mov
pop
fistpll
daa
fistl
mov
mov
push
frstor
lret
jnp
mov
dec
outsl
iret
lret
mov
stos
push
int
xlat
mov
mov
in
xchg
out
mov
fstl
es
adc
mov
mov
jmp
lahf
scas
xchg
pusha
sub
stos
jl
pop
clc
gs
std
lock
mov
and
iret
sub
fsubrs
jns
or
cmp
jecxz
push
mov
lret
divb
inc
xor
test
stos
pop
push
mov
xchg
or
lds
adc
clc
call
rep
pushf
xor
mov
push
pop
cmp
arpl
leave
xor
cmp
aas
or
movsl
mov
cld
mov
hlt
ficoml
adc
and
xor
mov
add
lods
in
and
and
sub
xlat
mov
test
pop
mov
lcall
jecxz
lods
in
fs
inc
inc
stos
stos
mov
leave
lret
adc
mov
test
push
and
cli
pop
mov
xor
pop
lret
mov
roll
cwtl
jno
mov
add
popf
or
das
push
inc
or
sahf
mov
jno
scas
dec
lods
pop
mov
jmp
jmp
test
jecxz
pop
and
mov
pop
add
mov
adc
subl
xor
daa
push
mov
xchg
ss
repnz
ficomps
push
out
cmpb
sbb
nop
shrb
aaa
repz
mov
lock
fs
pop
adc
push
arpl
lahf
outsl
int3
mov
daa
and
fnstsw
sub
adc
adc
roll
mov
mov
jmp
mov
cltd
or
fiadds
lods
jge
jnp
fldt
xchg
mov
ss
and
lods
push
jle
xchg
jbe
mov
adc
dec
mov
stos
movsl
jl
jp
cmp
pop
icebp
imulb
mov
pushf
and
ds
jnp
jne
ret
loopne
xchg
pop
xchg
cmp
stos
jns
push
jp
or
jmp
ret
push
fdivrs
mov
js
roll
sub
mov
mov
lret
xor
mov
hlt
pop
or
xchg
ds
cmp
scas
repz
cli
stos
lcall
or
shll
dec
iret
jbe
cwtl
fwait
das
mov
push
jno
mov
xchg
movsl
mov
std
pop
jae
push
push
adc
fildll
les
jmp
push
jne
decb
sub
fwait
jp
or
mov
mov
or
dec
insb
test
iret
out
xor
add
jnp
inc
movsb
std
adcl
push
mov
or
rclb
lea
loop
mov
addr16
ret
xlat
lret
mov
cmpsb
fldenv
cli
orl
clc
lea
mov
movsl
js
dec
pop
aas
mov
nop
imul
loop
rolb
cmc
dec
add
xor
jl
or
mov
or
fucomi
jg
jbe
pop
pop
outsb
jns
pop
mov
pop
lcall
mov
sub
movsl
mov
push
mov
test
sub
iret
aad
mov
leave
mov
pop
shll
mov
ja
push
sub
xchg
mov
add
loope
lods
icebp
cs
dec
out
in
std
lahf
or
push
fsts
test
or
js
mov
in
dec
pop
jmp
mov
call
inc
mov
mov
xchg
pop
add
inc
imul
lahf
and
dec
iret
clc
stos
imul
add
mov
jne
test
adc
shll
lret
divl
lock
cmp
arpl
fmull
cmp
xchg
pop
aaa
mov
cmp
popf
outsb
jae
mov
in
or
daa
push
cmp
jae
call
xor
cltd
aaa
mov
jbe
test
pushf
dec
jp
inc
dec
sbb
insl
repz
push
mov
mov
or
sbb
sub
or
pop
imul
mov
push
dec
stos
loope
clc
flds
jno
sub
push
mov
sbb
xor
inc
shrb
lea
fisttpll
sub
mov
cmp
in
xor
popa
adc
and
or
iret
imul
mov
subl
mov
fstpt
xchg
loop
adc
stc
mov
xchg
jae
cmp
jns
mov
sti
push
cli
enter
addr16
outsb
lea
or
push
mov
outsl
repz
sbb
jnp
jo
fidivrs
or
mov
js
aas
jns
and
nop
sbb
xchg
clc
jae
sub
or
and
pop
aam
cmp
mov
xor
repnz
cmp
ljmp
jne
jge
test
inc
fnstsw
fildll
or
adc
lret
popf
xor
jmp
and
pusha
ret
std
testl
hlt
inc
test
cmp
ja
mov
and
test
inc
cmp
cmp
pop
add
cli
xchg
jns
mov
mov
lods
pop
fcompl
sbb
ja
outsl
xchg
ret
xor
fcmovnb
stos
arpl
mov
out
cld
mov
fldcw
lahf
fcmove
jge
xor
mov
enter
jo
mov
sub
aas
sub
in
xor
cmp
add
movsl
ret
mov
pop
mov
sbb
insl
mov
outsb
jg
cmp
add
mov
add
mov
inc
iret
negb
cmp
cmpb
cmp
adc
mov
scas
and
mov
mov
in
insl
aam
jmp
lods
shrb
insl
adc
push
mov
leave
add
lds
fcmovbe
stos
int3
fcoms
and
ret
clc
jg
std
mov
sbb
shl
nop
mov
imul
shrl
loop
mov
adc
lret
lret
pushf
outsl
cmp
and
loop
scas
cli
test
aas
hlt
xchg
adc
sub
cmp
out
mov
int3
stc
adc
xor
or
or
loopne
mov
mov
add
mov
push
sub
sub
inc
or
lock
pop
pop
xchg
push
mov
mov
cltd
scas
bound
jg
daa
mov
mov
inc
sub
into
in
sub
cltd
jb
push
sub
orb
sbb
pop
xchg
scas
cmp
dec
push
xchg
sbb
jo
daa
pusha
mov
sub
ljmp
dec
hlt
push
pop
pop
push
pop
lods
and
lcall
stc
push
jecxz
adc
adc
insb
ja
push
mov
mov
mov
ljmp
jns
out
mov
js
xorb
xor
xchg
mov
test
xchg
cmp
add
cwtl
ret
lret
imul
jle
dec
stos
or
xchg
cmp
insb
or
xchg
xor
test
fwait
mov
inc
inc
das
push
push
repz
fwait
xchg
and
out
orl
jae
xor
shl
nop
xor
push
out
jmp
add
jp
in
sahf
movsb
mov
sbb
cmp
dec
mov
xor
dec
dec
jmp
sub
mov
dec
cmp
dec
jo
sbb
pop
lahf
push
enter
dec
pop
repz
or
adc
dec
sbb
cmp
adc
adc
jo
js
loope
xchg
push
sub
or
hlt
add
adc
insl
dec
popl
outsb
lods
jnp
stos
lret
pop
call
repz
leave
pop
pop
cmp
lods
cli
hlt
scas
inc
out
arpl
xorl
push
jns
ja
add
sti
inc
cli
andb
fwait
push
aas
inc
fcmovbe
lds
leave
shll
adc
lea
add
inc
push
inc
jecxz
movsl
shlb
stc
jne
addb
push
cmc
inc
mov
inc
or
movsl
sti
mov
mov
fucom
mov
nop/reserved
mov
lcall
or
dec
add
int
adc
push
or
jmp
stc
inc
or
sub
xchg
adc
in
jecxz
ret
pusha
cmpb
orb
or
push
inc
add
insb
dec
lods
push
inc
popa
mov
and
mov
or
inc
jmp
push
mov
add
mov
lods
lcallw
js
in
nop
jmp
dec
ds
cmpsl
mov
cli
shl
adc
popf
in
test
shlb
push
sbb
out
push
bswap
stc
popf
cld
fmulp
loopne
sbbb
or
in
cld
fcomps
lea
jb
je
sub
pop
pop
stos
or
push
xor
es
lds
lds
and
enter
jno
jno
mov
test
jl
test
push
mov
push
pop
in
push
xchg
enter
pop
and
into
push
cltd
push
push
dec
xor
mov
jle
sub
push
dec
arpl
mov
xor
shlb
mov
pop
xchg
and
lahf
pop
iret
setge
and
test
fldt
fdiv
jnp
mov
in
std
rolb
stos
adc
sub
mov
sub
pusha
icebp
shl
lret
cmp
inc
sub
sarb
fdivr
xor
insl
xchg
fcompl
pushf
or
popf
jp
push
xor
and
stos
mov
lahf
cmp
sub
movsl
sti
or
sub
les
pop
cltd
cwtl
ja
arpl
scas
js
dec
in
jecxz
fmull
jb
clc
cmp
cld
pop
dec
ljmp
imul
mov
lcall
test
push
pop
pop
loop
jecxz
int3
push
into
cltd
dec
mov
mov
xlat
pop
dec
rolb
cmp
stos
or
ds
dec
cltd
ret
cwtl
stc
jge
nop
push
in
fists
cmc
pusha
not
sti
cmp
out
adc
cld
jne
stos
lcall
or
clc
stc
sbb
js
fmull
jl
daa
notb
scas
xchg
rorl
gs
loopne
or
lods
xlat
in
cmp
test
xor
jnp
lcall
cmp
movl
xchg
mov
cmpsb
ljmp
fbstp
movsl
imull
mov
arpl
jmp
hlt
es
and
ret
xor
add
inc
jg
jb
sbb
incl
sub
imul
int3
mov
mov
fnop
dec
mov
nop
fnstsw
pop
addl
iret
outsl
adc
call
nop
jmp
add
into
inc
lret
mov
jne
rcr
pop
push
xlat
cltd
test
jb
es
fmull
enter
test
jo
jne
jae
dec
outsl
mov
mov
dec
movsl
lret
jo
loop
into
das
mov
sbb
ljmp
push
xor
cmp
mov
jg
ss
xchg
int
cwtl
pushf
lcall
int3
cs
pxor
lods
fs
mov
jnp
sti
mov
and
push
ljmp
jmp
cmpb
mull
sbb
ucomiss
das
mov
add
xor
jns
cmpsb
ret
fwait
loop
arpl
push
lods
mov
lret
popf
clc
adc
jp
or
dec
sahf
gs
xor
inc
push
mov
call
sbb
cmpsb
out
lret
xchg
mov
enter
sub
or
in
mov
and
and
jecxz
imul
enter
xor
testb
repnz
mov
sub
fsubrl
dec
xchg
stos
and
cmc
rcrb
mov
xchg
or
aam
lea
pop
push
mov
push
jg
xor
inc
adc
jle
push
push
in
data16
lahf
mov
cmp
mov
sarb
add
cmp
xor
dec
dec
jo
cmpsb
mov
mov
and
je
scas
rcrb
jge
leave
sub
dec
adc
addr16
push
popf
cwtl
and
mov
pop
or
mov
sub
cmp
mov
call
scas
call
mov
dec
jecxz
sbb
ror
popf
movsl
lods
add
popa
sarb
das
inc
sub
and
dec
dec
in
sar
mov
cmpsl
int3
fninit
pop
filds
shl
sub
lahf
or
loop
mov
fildll
sbb
and
arpl
enter
cmp
cmp
pop
incl
dec
xchg
movsl
xchg
xchg
pushf
aas
aas
jno
push
mov
mov
enter
jmp
lcall
mov
pop
loope
xchg
adcb
stos
push
lahf
inc
push
out
pop
addr16
lahf
mov
ljmp
out
adc
adc
sub
stc
icebp
ret
notl
aad
lahf
testb
repnz
cmp
nop
inc
loopne
inc
sbb
jge
fimull
test
lret
pop
inc
mov
daa
fnstsw
sahf
cmp
cmp
es
incl
imul
out
xchg
jl
loopne
int3
push
cmp
adc
sbb
ss
sbbb
cwtl
in
jnp
iret
call
fildl
gs
scas
leave
pop
shr
fwait
subb
lret
iret
jo
mov
andb
mov
cmpsb
mov
mov
push
outsl
push
push
fsubr
and
mov
inc
call
sti
adc
test
stos
xor
and
jb
push
or
add
xchg
mov
pop
icebp
pop
cmp
push
mov
je
xor
jns
mov
pop
add
enter
jecxz
mov
mov
mov
mov
xchg
subps
cli
xchg
icebp
popf
lcall
pusha
sarb
dec
shlb
aaa
lret
int
cli
xlat
add
dec
insb
out
in
sub
push
jns
jecxz
mov
inc
out
lahf
add
pushf
cwtl
mov
lods
dec
mov
cld
repz
sahf
sbb
and
mov
pop
repz
push
jbe
test
loopne
jecxz
or
lret
or
add
shr
aad
xchg
push
outsb
jp
aas
pop
dec
xchg
and
push
mov
mov
insl
loope
pavgw
inc
xor
xchg
lret
mov
push
add
sbbl
into
fdivrp
shr
jecxz
cltd
inc
fsubrl
xlat
js
sbb
je
push
faddl
je
mov
cltd
inc
fs
repnz
jmp
mov
idivl
mov
mov
mov
shlb
mov
push
fistpl
dec
pop
push
cmp
mov
cmc
std
mov
idiv
cmp
lods
mov
push
xor
shl
jp
mov
clc
loope
aam
xlat
fsubrl
out
adc
fstpt
cmpsb
add
jbe
jmp
nop
andb
mov
sbbl
push
pop
popf
xlat
pop
mov
mov
mov
jmp
sbb
pop
pop
sbb
popa
inc
popf
imul
into
mov
mov
insb
inc
mov
mov
pop
inc
or
ror
insl
pop
sbb
jno
pop
and
xor
outsl
jne
ficompl
mov
ljmp
pop
sub
jne
ret
mov
lods
pop
cmpsl
aas
popf
sti
push
call
xor
mov
insl
pop
lea
lock
sub
js
add
fstpl
adc
aad
in
out
or
mov
or
mov
inc
xor
lods
rclb
orl
cmpsb
mov
pusha
es
jno
dec
jp
lea
xchg
xor
mov
arpl
mov
push
push
jne
int
cld
in
orb
dec
rcrb
out
insl
push
js
adc
cmpsl
inc
mov
pop
popa
pop
inc
mov
mov
mov
xchg
mov
jae
sbb
movl
dec
inc
fldenv
sbb
mov
cmpsl
ret
push
xchg
cli
add
insl
out
mov
pop
xchg
xor
inc
cmp
scas
sub
test
jbe
sbb
popf
xchg
pop
in
in
fdivr
push
xor
je
mov
xor
xchg
mov
mov
cmp
stos
inc
shrl
dec
jae
jmp
jb
fwait
mov
fs
orl
push
cmp
jnp
jge
out
mov
cmp
mov
pop
ljmp
xchg
pop
pusha
mov
icebp
test
inc
imul
mull
push
xor
test
pop
add
push
daa
xor
cmp
push
jmp
push
lods
mov
test
or
pop
dec
in
or
cltd
inc
mov
and
cmp
fwait
and
dec
mov
xor
xchg
dec
loopne
sub
ret
jnp
xchg
popf
add
stos
push
jg
pop
insl
loop
cmp
jle
inc
xlat
sti
mov
testl
lds
fs
jbe
mov
pop
das
mov
out
add
sub
mov
pop
sub
ljmp
mov
push
pop
fistps
stc
xor
sbbl
fisubs
pop
mov
jbe
mull
fstl
adc
adc
leave
call
push
repnz
xor
es
dec
add
mov
addr16
fistpll
push
sub
push
loope
cli
addr16
addr16
push
mov
in
push
push
sub
call
adc
jne
es
test
gs
shl
mov
sbb
sahf
mov
add
js
shr
popf
neg
pop
cmpsl
cmpsl
pop
out
adc
mov
lret
mov
mov
mov
mov
aam
notb
mov
mov
adc
adc
mov
cmp
pushf
push
xchg
xlat
and
pop
mov
int3
lds
or
lods
daa
or
loopne
pop
stc
jno
xor
pop
pop
test
rcrb
sar
adc
dec
in
mov
xchg
or
fisttpl
in
mov
in
int3
xlat
jne
sbb
inc
xchg
push
lcall
mov
addr16
roll
sub
movsl
or
roll
repnz
aad
jbe
cmp
int3
int
xor
push
ret
dec
mov
test
pop
out
loopne
sbb
sub
stos
bound
repnz
daa
out
cmp
push
xchg
mov
cld
cmc
scas
mov
or
sub
lds
push
inc
inc
rorl
aaa
sub
or
adc
push
in
js
and
sub
ficompl
nop
sbb
popa
cmc
mov
xchg
xchg
cmp
sub
sub
adcl
cmp
add
cmp
xor
or
mov
cmp
push
movsl
inc
sbb
adc
mov
mov
cmp
mov
add
fidivrs
nop
es
leave
mov
pop
int
push
sahf
jle
xlat
cs
or
jmp
sbbb
cmp
shrl
int3
dec
inc
dec
sbbb
mull
cwtl
dec
and
loopne
and
call
or
ret
jp
out
or
mulb
push
daa
subl
jg
cmp
mov
ret
stc
sub
cmp
xchg
repz
cs
inc
inc
add
add
mov
push
xchg
inc
fnstenv
mov
movsl
mov
dec
push
pop
mov
scas
sbb
loope
mov
test
sbb
icebp
mov
daa
mov
in
sarb
mov
sub
jb
pop
cmp
lods
push
dec
xor
xor
ljmp
cmp
fcoml
and
mov
push
jns
mov
mov
sbbb
out
mov
xor
fbld
outsl
loope
fisttpll
into
shrl
fsin
data16
test
xchg
cmp
mov
stc
push
mov
lahf
dec
aad
mov
xor
mov
test
mov
std
push
js
bnd
pop
ret
lcall
sub
or
fcomps
popa
daa
out
sub
sbb
add
sbb
lret
add
jmp
bound
sbb
movsb
out
mov
mov
cmpsl
mov
mov
rclb
leave
xchg
enter
mov
nop
jge
xor
xor
inc
adc
cmp
out
add
sbb
pusha
mov
jge
fsubrp
test
jle
pop
vmread
jno
cmp
stos
fsubrs
out
daa
js
aam
adc
pop
and
jae
mov
nop
sti
jl
repnz
jnp
sbb
cld
pop
pop
mov
pop
xchg
sub
cli
sub
pop
test
pop
inc
mov
cmpb
int3
xlat
cmp
mov
leave
xor
sahf
aas
ss
sub
repz
sbb
stc
iret
repz
xorb
pop
xchg
sub
xor
xchg
mov
xchg
or
and
adc
cmp
in
adc
mov
test
test
fldcw
sub
push
pop
sub
xchg
pop
ret
test
xchg
sbb
stos
aam
xchg
mov
or
pop
cwtl
lods
clc
orl
mov
std
cltd
fnstsw
ja
jae
xchg
sbb
std
mov
mov
ret
daa
popf
mov
push
je
iret
cmp
scas
lret
mov
push
arpl
jno
idivb
jle
xchg
mov
or
scas
stos
je
stos
daa
jb
inc
mov
cmp
ficoml
pop
popa
xchg
daa
int3
ss
add
aad
fsts
xor
xlat
push
test
pop
lcall
loopne
mov
xor
mov
xor
rorl
or
xchg
dec
test
add
ljmp
or
hlt
mov
or
push
out
dec
aaa
jge
movsl
sbb
add
stc
pop
test
sti
jnp
mov
leave
insl
inc
mov
pop
emms
iret
pop
mov
jmp
inc
in
fwait
sti
inc
push
mov
xchg
adc
adc
lods
dec
test
roll
jb
push
rolb
sahf
movsl
js
es
aaa
jb
cmp
inc
pop
or
in
push
push
adc
pop
sarl
xor
sti
je
mov
scas
mov
jb
incb
mov
or
jo
cmp
pop
xchg
xchg
pusha
insl
and
loopne
scas
cld
inc
out
mov
leave
andl
popf
les
popf
xor
cmpsb
movzbl
jmp
and
outsl
fcoms
je
mov
or
in
or
add
cmp
pop
ljmp
mul
icebp
mov
fidivrs
aaa
and
mov
mov
sbb
mov
aaa
push
shlb
xor
mov
xor
mov
fistl
or
adc
std
or
push
popf
pop
dec
cmp
cmp
dec
icebp
push
aam
mov
mov
mov
popf
jp
leave
inc
xlat
lahf
xor
jge
sbb
jns
jno
adc
aad
rolb
sti
mov
in
pop
int
pop
mov
outsl
imul
mov
cmp
mov
push
mov
mov
xchg
mov
cs
mov
and
mov
outsb
xlat
sbb
daa
pop
jae
fldcw
adc
cmpl
ljmp
scas
xlat
js
neg
mov
jbe
jmp
out
mov
arpl
leave
fisttpl
fwait
shr
pusha
lret
and
and
cmp
xor
cmpsl
ja
or
xor
xchg
iret
mov
sub
cwtl
pop
mov
stc
enter
imul
jns
pop
mov
push
cmc
mov
inc
rcr
push
cmp
mov
es
in
dec
nop
cmp
mov
or
pusha
mov
lahf
popa
add
pop
jbe
nop
stos
repnz
cmp
push
cmp
mov
loope
inc
stos
pop
out
scas
rcll
popf
popa
mov
subl
insb
jns
cmp
test
or
outsb
aas
bound
rcr
repz
push
cltd
jle
jnp
testl
mov
das
shl
xor
orl
pop
imul
icebp
mov
daa
cmpsl
lods
xchg
mov
cmpsl
lock
les
push
scas
gs
xchg
fbstp
jp
repnz
mov
sub
push
mov
ss
into
dec
addr16
inc
or
mov
aas
cltd
out
and
les
inc
ficoml
jb
fbstp
ja
or
mov
mov
sbb
sbb
cmp
imulb
jnp
lret
dec
push
stos
imul
cmpl
lcall
xor
lret
xchg
popf
int3
mov
aam
sti
in
in
dec
xchg
notl
sub
xchg
addr16
je
xchg
stc
jb
flds
fdivr
mov
xor
sahf
inc
mov
shll
and
add
cmp
cmpl
stos
insl
cmp
xchg
xor
cmpsl
rorl
push
mov
hlt
mov
jg
js
mov
sbb
push
pop
int3
insb
mov
and
mov
jae
mov
sti
jge
push
lcall
cmc
stos
and
xchg
mov
bound
daa
ret
std
xchg
addr16
or
add
lahf
mov
dec
sub
outsl
mov
xlat
dec
iret
lods
popa
lods
stos
pusha
das
stc
test
dec
sbbl
ds
push
pop
add
dec
mov
test
or
cmp
pop
mov
cmpsl
cwtl
push
add
jl
cmc
data16
je
movsb
push
in
cltd
adc
or
sti
xor
flds
scas
aam
lret
es
lcall
sti
mov
cltd
cmp
and
enter
fisubs
push
or
add
and
fldenv
sub
fidivs
mov
aaa
dec
jmp
xchg
mov
or
jmp
mov
xchg
insb
mov
sbb
fisubrl
jmp
int
leave
imul
out
xor
loopne
adc
lods
mov
mov
ss
fsubrs
adc
and
popf
insb
push
dec
jbe
dec
sub
fsave
ja
dec
test
mov
inc
xlat
push
aas
sbb
es
sarb
push
nop
mov
mov
xchg
adc
fists
mov
into
or
or
jg
dec
lods
test
dec
out
xchg
stos
sbb
fcoms
aas
add
vmread
xchg
push
pop
lret
ljmp
mov
cmpl
and
idiv
xor
xor
ds
ljmp
call
fwait
popf
aaa
jle
cmp
push
jno
ret
outsl
int3
cmp
std
add
stos
adc
fimull
jnp
fnstcw
sub
mov
enter
sub
jmp
in
or
mov
fbld
cmp
mov
sbb
add
cmpsb
and
cmp
arpl
js
cmp
lea
pop
inc
imul
scas
push
pop
ljmp
jge
fwait
mov
std
mov
jecxz
xchg
movsl
addb
or
icebp
jle
js
jle
mov
lcall
cltd
out
dec
sbb
fs
mov
loop
mov
rol
fwait
gs
adc
stos
mov
or
into
idivb
jle
pop
xchg
xchg
mov
jns
loop
imul
jle
outsb
lock
fcomi
sarb
loop
or
xchg
out
mov
insb
lods
cmp
jae
inc
cmp
js
loop
sbb
stc
push
loopne
popa
sbb
fnstenv
icebp
aas
leave
adc
mull
pop
orb
sarb
inc
negb
subb
and
insl
cwtl
mov
sbb
icebp
pop
cmp
sbbl
loope
lret
outsb
xchg
push
pusha
in
mov
mov
mov
mov
in
or
add
ret
sbb
popa
jno
adcb
mov
loope
cwtl
pop
mov
jnp
pop
jle
cs
pop
mov
out
add
out
cwtl
dec
mov
fsubs
mov
loop
fdivr
mov
rcll
jge
jnp
loop
shrl
xchg
into
cmp
and
sbbl
jl
sbb
add
fsubl
or
inc
xchg
fisttpl
aaa
test
dec
lods
jae
sbb
retw
xchg
addr16
or
jle
scas
cltd
sbb
fldt
fldcw
xor
aas
xchg
mov
lret
imul
aas
ds
mov
mov
ret
imul
adc
xchg
cmp
sbb
inc
gs
or
loop
lret
insl
push
mov
mov
sbb
mov
jns
movsl
ds
sbb
loop
sub
jne
jecxz
mov
mov
sbb
mov
imulb
cmp
fildl
cmp
inc
out
rorl
pop
pop
adc
sbb
popf
popa
jnp
iret
in
cwtl
aaa
sar
mov
lods
xchg
scas
call
ljmp
lds
or
add
mov
mov
inc
shl
xor
mov
mov
lret
icebp
std
sbb
cli
cmp
inc
test
pop
mov
sbb
ljmp
aaa
out
mov
cmp
cli
mov
mov
cmp
pop
addb
lret
adc
adc
out
cmp
andl
and
jge
or
adc
mov
and
data16
stos
push
test
push
xchg
in
pop
fcmovbe
sbb
add
pop
sbb
mov
fimull
ret
jle
push
mov
dec
clc
scas
mov
mov
pop
fists
xchg
loop
mov
testl
scas
sarl
stos
mov
fxch
pop
mov
cli
cld
or
jnp
pushl
pop
xchg
shrl
les
pop
push
popa
pop
push
pop
movsl
push
imul
mov
push
or
dec
fcomps
xchg
addr16
scas
int3
jns
cmp
sub
xchg
fsubs
inc
jae
test
mov
cmc
lret
repnz
stos
add
mov
add
push
pushf
out
mov
cltd
mov
sub
outsl
roll
test
and
imull
call
jnp
mov
lock
xlat
pop
mov
cmp
pop
xchg
cmpsb
leave
xchg
push
clc
fstl
lea
dec
cwtl
ljmp
mov
cmp
mov
inc
pop
mov
mov
mov
mov
xchg
mov
add
out
rcrl
out
bound
in
inc
cmp
cli
popa
shrl
movsb
mov
cmc
xchg
mov
fistpl
jnp
fbstp
jge
adc
sub
pop
sbb
int
mov
enter
fwait
mov
pop
jno
ds
or
rcl
and
filds
mov
jl
jmp
or
mov
dec
stc
push
scas
cld
adc
pop
xlat
mov
xchg
jmp
jne
cmc
or
dec
adc
shrb
cmp
sbb
jmp
stos
lods
ret
cmp
stos
cmp
cmp
call
cs
scas
test
sub
sub
dec
jp
mov
ja
mov
add
out
out
nop
xchg
cmpsl
cmp
jb
push
mov
pushf
pop
mov
lds
or
jae
add
bound
inc
push
stos
xchg
stc
aad
lret
jne
xchg
out
pop
ja
punpckldq
mov
mov
movsb
popa
fiadds
dec
daa
cmp
pop
imul
xorl
sub
adc
jne
lahf
pop
fsubs
bound
inc
outsl
lea
int
jge
addr16
je
xlat
pextrw
scas
je
jp
xor
cmc
lret
int3
sarl
fcmove
into
xor
repz
pop
enter
push
or
push
mov
mov
adc
movsl
pop
sub
mov
pop
test
or
jae
stos
gs
nop
leave
dec
mov
jo
jmp
cmpsl
cmp
pop
int3
adc
mov
jp
andl
adcl
mov
popf
add
iret
jle
sbb
das
iret
mov
mov
lods
cwtl
jl
ds
mov
scas
ds
cmp
jbe
adc
mov
lret
int3
dec
mov
mov
lods
mov
lcall
pop
rcrl
test
xchg
imul
loop
repnz
arpl
rorl
mov
mov
xor
jns
ret
adc
mov
sbb
int
xchg
sarl
sub
or
cmp
mov
xor
loopne
mov
pop
mov
imul
xchg
pop
add
repnz
mov
or
repnz
jmp
out
int3
cmp
das
add
mov
cmp
lretw
mov
fcomp
mov
test
dec
xor
addl
pop
andb
mov
mov
push
xor
clc
mov
dec
xor
mov
mov
je
cmc
pushf
mov
stos
pop
cld
out
lods
fiaddl
pop
add
out
adc
sub
scas
inc
hlt
dec
mull
lret
add
int
mov
int
cmp
pushl
inc
add
xor
inc
je
rclw
dec
ret
shrb
push
pop
dec
adc
push
test
ret
fwait
icebp
inc
mov
stos
mov
fstpl
cltd
mov
pop
test
sub
loopne
into
pop
fisttps
xor
adc
lods
lea
mov
ss
mov
std
fildl
xor
dec
cmp
test
out
xorb
jo
or
and
xchg
ljmp
jmp
test
fptan
or
out
cltd
jne
mov
into
xchg
not
and
sbb
pop
xchg
xchg
push
lea
ret
lods
xlat
mov
loopne
xchg
jge
addr16
insb
jmp
mov
inc
mov
lock
adc
shlb
pop
pop
or
cmp
cmpsb
arpl
mov
orb
sbb
xor
jnp
jmp
lret
cmp
outsb
mov
inc
shll
es
sbb
lds
ds
mov
sbb
aaa
es
ja
fs
fxch
dec
loopne
or
push
in
pop
jno
mov
cmp
inc
aas
sti
mov
fnstenv
call
dec
adc
push
outsb
loopne
scas
jne
pop
or
lds
dec
lcall
lods
xchg
pop
fdivs
stos
mov
xor
fwait
lods
ficoml
mov
ret
and
popf
ror
sti
popf
mov
and
in
mov
pop
das
mov
mov
xor
aam
jp
cli
lahf
insb
add
mov
cmpsl
xchg
mov
int3
jnp
add
fstl
xor
outsl
dec
lret
mov
cltd
aaa
mov
jecxz
xor
mulb
xor
mov
inc
xchg
scas
dec
shlb
and
enter
jp
inc
hlt
mov
std
int3
inc
iret
xchg
out
stc
iret
sbb
std
out
ds
pop
mov
ds
aad
aad
cld
mov
sbb
xlat
jmp
push
shlb
mov
test
gs
fdivs
pushf
stos
lods
mov
stos
sbb
mov
hlt
enter
pop
and
mov
pusha
sbb
fsubl
in
dec
sub
test
mov
xor
pop
and
mov
jbe
addb
adc
bound
cmp
xlat
addr16
mov
mov
lea
int
sbb
aaa
cmc
stos
cmpsb
sub
imul
inc
sub
inc
mov
adcl
rcl
in
cmp
push
imul
notl
clc
cmpsb
es
and
ret
lds
fmuls
lretw
cli
mov
mov
rolb
add
sbb
aas
lea
xor
and
mov
dec
fsts
inc
cld
shll
xchg
mov
lcall
adc
scas
cmp
das
pop
popf
inc
test
gs
lock
dec
sahf
dec
cmp
pop
imull
std
cmp
or
popf
hlt
stos
push
mov
in
cld
lcall
into
push
and
push
push
mov
sub
pop
nop
les
push
pop
sbb
and
cmp
ss
or
test
mov
ficoml
push
xchg
jae
dec
pop
std
inc
mov
outsb
mov
pop
pop
mov
je
cmpsb
enter
mov
pop
andl
jno
push
cli
mov
js
ja
inc
lret
ror
pop
je
mov
cwtl
sub
out
call
movsb
add
mov
add
mov
inc
dec
xlat
cli
icebp
mov
mov
nop
push
insl
pop
push
lcall
and
sub
cmc
push
dec
or
clc
test
adcl
insb
mov
lcall
mov
pop
mov
sti
in
mov
and
aas
cld
xchg
pop
lods
pusha
dec
lcall
aas
mov
in
push
push
fidivrl
pop
cmp
jg
stos
sub
sbb
sub
aad
aaa
mov
xorl
pusha
xor
and
lods
in
dec
xchg
dec
jg
inc
gs
sbb
mov
cli
iret
lcall
sbb
arpl
push
add
cmpsl
lock
inc
mov
fists
pusha
mov
xor
xorl
mov
arpl
test
cmc
inc
lods
pop
mov
and
cmpsb
ret
les
sbb
testb
adc
pop
daa
xchg
loope
imul
movsl
jg
hlt
push
test
push
cli
fsubr
fsubl
pop
mov
call
sar
or
sahf
test
jge
xor
or
mov
cmp
cli
dec
xchg
loopne
sbb
subb
bound
fisubl
xchg
mov
inc
pusha
cltd
addr16
in
cmp
pop
sbbl
mov
rol
jnp
mov
sti
add
dec
inc
add
inc
xchg
rcr
test
leave
jge
stos
jmp
stos
lds
sbb
rcrl
pop
xchg
sbb
bound
or
int
fst
sbb
mov
sub
xchg
add
mov
or
test
hlt
push
out
insl
dec
insb
std
pop
lcall
xor
xchg
aad
rcl
jno
repnz
stc
xlat
mov
adcl
aad
mov
ds
mov
outsb
xor
pop
mov
push
lods
mov
jnp
test
and
ret
pop
xchg
leave
xchg
aad
es
sbb
sub
xor
pop
dec
shl
cmp
adc
and
sbb
fs
mov
out
js
sbb
imul
cmp
cmp
ds
ljmp
adc
cmp
xchg
and
fidivs
jb
mov
inc
mov
cmpsb
jl
arpl
xchg
inc
mov
enter
jb
push
jle
into
mov
dec
popf
mov
add
sub
ret
sahf
sbb
rclb
daa
lods
sbb
popa
lret
test
mov
xchg
dec
inc
lods
aas
loopne
sub
mov
loopne
mov
jmp
out
stos
push
cmp
pushf
lods
pushf
jp
test
sbb
pop
inc
jnp
cltd
pop
adc
xor
mov
ljmp
pop
sub
mov
xchg
add
jae
out
add
and
pop
mov
push
jp
cmpsb
dec
mov
rcr
insb
iret
xor
and
pop
lret
jge
aam
xchg
cld
mov
xchg
dec
xchg
adc
into
cmp
in
sbb
insl
inc
jnp
shlb
cld
pop
mov
adc
mov
lret
shll
leave
stos
cmpsb
push
popa
xchg
jo
arpl
sub
rorb
idivl
rcl
and
imul
dec
cli
push
inc
fwait
sbb
jecxz
dec
jg
test
sub
or
mov
sub
lcall
fwait
dec
xchg
jmp
mov
fsts
outsl
clc
cmc
dec
int3
cmp
movsl
sbb
scas
negl
daa
addb
jnp
xchg
mov
clc
cmpb
stos
int3
sub
xchg
ja
popa
xchg
xchg
addl
ss
imul
cmp
fchs
ds
mov
add
fidivs
inc
inc
aam
push
mov
js
test
or
mov
cmp
arpl
adc
jns
jbe
xor
lcall
mov
mov
imul
std
push
in
ljmp
mov
imul
mov
loopne
mov
lret
cmp
cs
aam
cmp
mov
pushf
fimuls
lahf
mov
nop
fisubrs
fwait
push
ficoms
xchg
lcall
cmpsb
test
push
pushf
add
jecxz
testb
jnp
pop
call
pop
mov
xchg
push
pushf
call
cmp
mov
xlat
mov
mov
fwait
xor
mov
jnp
rcll
jno
push
sarb
jb
cs
xor
pop
out
cld
mov
out
or
test
dec
adc
cmpsl
push
jle
lret
js
mov
xor
movsl
lea
push
sahf
test
into
pusha
mov
adc
lods
mov
jle
pop
pop
in
lret
jle
call
out
lods
push
and
jns
out
mov
xor
arpl
jmp
jno
inc
mov
mov
iret
std
jg
adc
push
fistpll
mov
mov
nop
sbb
xchg
adc
xchg
pop
mov
or
sub
les
mov
pushf
in
push
push
or
inc
sub
dec
push
bound
dec
mov
and
adc
and
roll
aad
xchg
popf
adc
lcall
pop
dec
in
and
dec
dec
add
in
outsb
fistpl
xorb
cmp
dec
aaa
mov
bound
leave
aad
jg
xor
pop
ljmp
int3
mov
xchg
pusha
adc
fsubrl
adc
dec
fidivl
push
mov
into
imul
in
popf
mov
aad
mov
in
lret
repz
mov
add
xchg
add
nop
loopne
mov
lea
jno
shlb
sub
pop
lret
mov
push
jmp
pop
mov
inc
xchg
std
sub
mov
push
sbb
daa
mov
xchg
es
jnp
lcall
dec
pop
insl
adc
sbb
xchg
js
xor
sbb
std
and
sbb
outsb
mov
cmp
repz
adc
fcom
sbb
mov
pusha
jnp
and
addr16
enter
jg
inc
movsl
lea
sbb
in
inc
mov
push
aaa
xchg
and
xor
sar
or
and
pop
dec
jp
lret
push
loop
aaa
add
aam
das
in
test
add
data16
inc
sub
nop
sti
insb
repnz
mov
add
ds
es
popf
mov
adc
push
cmp
repnz
lahf
cmpl
nop
arpl
push
loope
fcompl
pop
mov
jne
test
leave
sbb
test
int
fsubrs
insb
fistps
sbb
std
daa
in
xchg
dec
push
inc
insl
ficompl
loop
and
aas
jne
adc
mov
sarb
adc
push
add
pop
fstp
mov
ret
lret
and
mov
test
cs
pop
dec
addb
xchg
jle
dec
cld
fistl
cld
jp
add
push
push
mov
call
dec
push
jns
mov
neg
mov
ja
push
orl
xchg
enter
into
lret
mov
imul
mov
mov
pop
push
arpl
jg
jl
jecxz
leave
js
push
sbb
cmp
repnz
lret
push
sbb
jnp
mov
sarl
or
popf
mov
cmp
ret
stos
jnp
aaa
lea
outsl
inc
mov
xchg
movsl
fwait
ds
shll
mov
adc
adcl
adc
xor
andl
icebp
gs
in
add
push
daa
xchg
dec
mov
xor
fcomip
mov
sbb
pop
xchg
repnz
sbbl
mov
clc
in
sub
sub
and
inc
mov
pop
pop
mov
pop
adc
mov
xor
es
mov
lret
inc
xchg
arpl
aas
orb
and
mov
jmp
sub
std
xor
pop
mov
sbb
add
sti
pusha
daa
mov
jp
cmp
push
adc
stos
jmp
cmpsb
outsb
int3
sub
ror
enter
sub
lret
adc
bound
repz
imul
sub
jne
cmp
data16
mov
sub
cmpsl
mov
jno
ds
sbb
stc
out
repz
xor
lret
ret
cmp
cmp
int3
jnp
sub
cmp
mov
mov
jmp
jb
mov
fldt
lea
push
cmpsl
xorb
fidivl
ret
mov
cmp
and
mov
jecxz
sti
xchg
sub
jae
cltd
decl
xchg
out
cmp
loopne
xchg
pop
lock
adc
ss
xor
insl
mov
jno
mov
mov
frstpm(287
pushf
cmp
push
add
loope
mov
in
jp
push
pop
mov
in
inc
pop
out
add
jno
enter
outsl
cs
sbb
jmp
lret
adc
jge
in
notb
lock
or
cmpsl
incl
ret
sub
jns
hlt
mov
addl
cmp
arpl
cmpsb
cmp
fidivl
pop
sub
in
push
shl
push
cs
inc
adc
adc
adc
lods
cwtl
push
jmp
push
ror
imul
cmp
cmp
and
imul
xor
adc
enter
mov
add
dec
in
mov
mov
adcl
mov
dec
fiadds
das
xor
in
lods
loopne
ds
adc
cs
dec
mov
or
and
arpl
movaps
dec
cs
mov
test
mov
dec
loope
xchg
sub
nop
sahf
sbb
mov
cli
mov
jecxz
cwtl
outsb
subb
xor
cmpsl
ficomps
mov
mov
leave
mov
sti
cmp
das
clc
cltd
jmp
js
pop
and
cmpsl
dec
shlb
cli
mov
adc
inc
jo
push
loop
int
frstor
jl
jl
jo
or
aad
dec
mov
iret
mov
lods
lret
ret
fstpl
out
xor
cmp
fldcw
jne
mov
out
sub
or
add
push
mov
scas
je
jle
repnz
dec
mov
ds
scas
cmp
jle
ss
fsub
push
xchg
push
cmc
cmpsl
adc
push
xor
stc
leave
inc
cmp
xor
pop
pop
mov
gs
out
stos
mov
jns
jp
jnp,pn
xchg
test
lods
add
mov
mov
popa
cld
cmp
pop
daa
mov
mov
cmp
push
pop
sbb
xorl
lods
mov
pop
and
adc
push
fldl
adc
add
aad
lock
std
or
decb
sti
stc
adc
mov
push
cmp
rcrl
xchg
add
push
and
jb
or
hlt
cmp
pop
jg
test
ret
movsl
out
mov
clc
adc
test
mov
addr16
cltd
std
xchg
stc
xchg
mov
push
jge
test
sub
aaa
inc
xchg
xor
les
pushw
int
xor
popf
mov
pop
jne
mov
and
or
out
cmp
cmp
fmul
iret
fdiv
xlat
fmuls
fcoms
clc
fcoms
in
and
and
xor
js
wbinvd
dec
into
dec
dec
iret
imul
cltd
orb
sub
test
sbb
xor
imul
inc
jnp
mov
adc
mov
mov
inc
stc
outsb
xchg
xchg
cs
push
stos
mov
shll
imul
scas
stos
icebp
or
outsb
cmp
ret
imul
or
enter
cs
cmpl
mov
aaa
scas
fwait
jp
sbb
push
add
sbb
pop
mov
fidivs
jns
fldenv
sbb
testl
jg
lahf
add
dec
js
add
sub
inc
fsts
into
std
xor
inc
mov
cld
add
inc
inc
push
xor
pop
std
mov
jmp
movsb
inc
inc
fidivrl
inc
inc
inc
inc
inc
adc
test
mov
jge
cmpsb
adc
cmpsb
setno
iret
cmp
bound
add
enter
or
bound
add
sbb
andl
aam
cmp
jbe
pusha
jbe
loope
pop
notb
mov
insl
idivb
fdivs
mov
mov
sbb
inc
fldl
mov
lret
mov
or
xchg
notl
xchg
mov
and
mov
repz
lods
leave
dec
jae
add
dec
push
in
cmp
sbb
or
and
aaa
push
xchg
add
xchg
loop
shr
nop
mov
sub
popf
sub
mov
je
pop
je
inc
fs
mov
adc
xchg
arpl
stos
shl
movsl
fcomip
mov
cmc
fwait
xchg
pushf
sbb
pushf
xchg
rcrb
pushf
nop
xchg
test
scas
jb
sar
dec
xchg
jg
repnz
jmp
clc
addb
adc
subb
add
pushf
test
test
cwtl
sub
test
movsb
test
movsl
sub
sub
test
and
das
aaa
mov
pop
mov
cmp
xorl
xchg
cli
mov
ja
pop
jae
ja
ss
xor
xchg
cwtl
cmp
mov
sub
jne
enter
xchg
aas
les
add
call
sub
adc
pop
sub
sub
lcall
js
mov
push
sub
dec
pop
jnp
jmp
mov
movsb
popf
and
mov
sub
jne
xor
insb
mov
jno
rclb
or
mov
cmp
movb
mov
andl
jge
outsl
mov
stos
jge
sarl
leave
out
stos
or
mov
xchg
dec
aad
push
aam
das
pop
mov
out
adc
daa
sbb
rep
and
jle
push
cltd
pop
fcomps
cmp
repnz
sbb
fidivl
and
push
jmp
loopne
push
inc
stos
add
mov
rcll
stos
add
xchg
sub
lods
setl
add
xor
push
sub
pop
pop
push
lock
sbb
fimull
cmp
lret
xor
test
cltd
mov
imul
mov
pushf
stc
lret
fcmove
fisttpl
sbb
sbb
sub
cmp
jnp
pop
fildl
lods
mov
lods
mov
scas
mov
scas
mov
test
add
aam
mov
push
mov
adc
fcomps
or
xchg
arpl
mov
inc
subb
xchg
outsl
mov
pop
mov
or
sub
jnp
arpl
jp
sbb
outsb
sub
mov
mov
dec
ds
cmp
stos
jle
mov
jns
inc
pop
rclb
mov
xchg
cmp
loopne
mov
out
dec
in
aad
in
lods
in
xlat
mov
bound
add
dec
push
out
je
shrb
mov
adc
lods
nop
add
add
divb
sbb
fnstsw
dec
pop
mov
pop
lods
call
sub
shrl
push
ljmp
inc
imul
ffreep
pop
lahf
sbbb
dec
stos
push
shll
xchg
xchg
xchg
inc
inc
enter
mov
dec
mov
pop
aas
orl
movsb
push
push
cwtl
mov
fisttps
popa
pop
jno
lahf
jnp
adc
mov
ja
mov
mov
xchg
repz
in
icebp
lret
sarl
mov
or
loope
testb
xor
subb
lods
scas
icebp
shll
call
icebp
sbb
sbb
mov
jae
add
pminsw
dec
add
xchg
das
fwait
pushf
pop
push
pop
adc
and
in
imulb
out
ret
in
lods
and
inc
mov
das
xor
lock
xchg
jge
popf
mov
aaa
lds
sub
testb
cmp
cmc
jne
mov
cmpl
faddl
mov
xchg
cli
xchg
mov
jle
lret
inc
test
mov
push
jnp
jb
fiaddl
xchg
add
jns
ja
xchg
pop
test
stos
jp
or
mov
cmp
mov
mov
dec
iret
xor
clc
mov
icebp
cs
test
jae
dec
xchg
cmpl
mov
mov
sbbl
jl
jl
das
or
lret
test
cmpsb
stos
xor
jns
es
xor
pop
xorb
incb
vpshad
mov
pop
outsl
pop
mov
pusha
jp
imul
dec
ljmp
hlt
mov
xor
pushf
and
mov
pop
aas
pop
lods
push
lcall
addl
nop
leave
pop
pop
mov
ficompl
js
hlt
mov
mov
adc
mov
mov
pop
xor
mov
int
orl
cmp
enter
sarl
jecxz
sbb
sti
or
out
xlat
repz
adc
aaa
fsts
aad
jae
add
sbb
clc
ljmp
mov
xor
stos
pop
jl
cli
aaa
mov
imul
xor
jmp
pop
stc
out
das
mov
sbb
repz
jno
out
mov
mov
test
fistpl
scas
cs
mov
fprem1
mov
mov
mov
mov
mov
add
stc
cmpsl
ja
popf
sbb
cmp
pop
push
fistps
xor
xor
cmp
shl
pop
je
dec
mov
sbb
sarl
ds
jmp
shrb
mov
xor
repnz
or
cld
jg
xor
mov
mov
fidivs
mov
jb
or
int
adc
sub
xorb
xor
fsubr
sub
lea
mov
and
jl
std
sub
adc
push
xchg
mov
or
mov
mov
or
dec
push
stos
adc
jbe
mov
xchg
mov
lret
pop
cmp
movsl
test
xorb
mov
stos
imul
adc
jge
iret
mov
xor
mulb
sbb
aaa
js
shlb
sahf
flds
lret
scas
xchg
inc
adc
call
push
aam
leave
mov
xchg
add
add
jp
cmp
cld
mov
sahf
jae
and
sbb
pushf
push
dec
leave
bnd
cmp
in
sbbb
mov
mov
xchg
mov
mov
std
lahf
cmp
stos
ret
popf
jnp
movsb
fwait
mov
push
lret
adc
mov
in
mov
and
sti
into
ror
pop
pop
lcall
jmp
sbb
cltd
lret
or
mov
cmpsl
mov
out
fdivrs
pop
jmp
cmp
insl
ss
pop
mov
aas
cs
sub
or
cmp
cltd
lret
test
jne
lock
cli
mov
sbb
ds
ja
xor
lea
mov
lcall
repz
lret
sub
cs
mov
aas
movsl
xorl
mov
mov
lret
lods
add
mov
adc
in
lds
xor
fndisi(8087
call
dec
mov
mov
rorl
cwtl
add
out
push
mov
lcall
jbe
data16
icebp
push
jno
pop
mov
mov
push
add
and
cmp
pusha
lcall
aad
adc
sbb
femms
or
pop
mov
push
sub
test
jae
fnstsw
nop
div
mov
xor
and
arpl
popf
sbb
repnz
xchg
cmp
addr16
sbb
sbb
insb
in
xchg
sub
push
fcomps
sti
and
xchg
lea
rolb
mov
loope
data16
mov
or
imul
hlt
mov
jo
hlt
pop
mov
pop
mov
je
jae
sub
aad
ret
jns
adc
add
pushf
enter
sub
fisubrl
pop
lahf
jae
fbstp
xor
sub
movsl
mov
pop
outsb
nop
adc
loope
outsb
cmpsb
ret
inc
fucomip
pop
push
dec
enter
mov
enter
enter
fmuls
cld
mov
push
and
icebp
lds
gs
fdivrs
call
in
push
mov
fmulp
sbb
xchg
push
int3
lahf
rcrl
push
sbb
stc
leave
and
xchg
dec
rclb
inc
pop
bound
ljmp
xchg
adc
movsb
jae
xchg
mov
stos
sub
mov
add
cmp
jmp
loop
fsts
daa
xchg
sub
fimuls
loope
repz
cmp
push
sbb
xchg
enter
mov
jge
mov
push
fistps
inc
mov
pop
xchg
sbb
stc
fstpl
push
jl
cld
hlt
mov
cld
das
xchg
movsb
cmpsb
mov
sbbl
cmp
add
std
mov
mov
sbb
and
ljmp
sbb
sub
mov
jne
mov
sub
loopne
icebp
das
outsl
rolb
divl
aaa
icebp
xchg
hlt
test
cmpsb
std
in
fbld
cltd
andb
js
aas
sahf
cs
jmp
aam
sub
cltd
mov
repz
xor
cwtl
sub
bound
bound
jns
mov
movsb
push
jae
hlt
mov
sub
adc
or
lods
aaa
pop
fsubp
mov
jno
dec
adc
mov
lret
mov
mov
popl
inc
add
pop
jmp
mov
cmp
xchg
and
xor
sub
jnp
cltd
xchg
shll
lock
cmp
jecxz
add
popf
dec
push
enter
cmp
sbb
cs
sbb
aaa
repz
mov
orb
mov
mov
cld
jecxz
jcxz
sbb
or
pop
jo
jns
jmp
mov
fsubrs
out
pop
test
outsl
lods
cmp
mov
mov
mov
sbb
mov
dec
leave
xor
jne
iret
daa
in
repnz
sub
fbld
movsb
sub
lcall
adc
cmp
popf
in
mov
or
sub
std
jb
mov
ficomps
jecxz
sbb
sahf
and
cltd
fwait
cmp
add
lcall
aam
cwtl
pop
jp
shll
jmp
test
rcrl
mov
ljmp
imull
sub
fsubs
jno
aaa
lock
xlat
jne
ja
aas
and
jle
mov
jmp
je
jge
sub
sbb
test
adc
mov
in
mov
fsubs
sbb
ret
sub
aad
out
fsubrs
xchg
add
xchg
imul
dec
fnstenv
std
cmp
das
cltd
pushf
ljmp
fnstcw
fwait
add
mov
fwait
iret
and
pop
jns
mov
xchg
pushl
lret
push
pop
fstps
xor
stos
sbb
cld
hlt
cmp
push
test
addr16
pop
sahf
imul
cmp
stos
imul
lahf
imul
mov
clc
jnp
jg
stos
cmp
mov
lods
adc
mov
rolb
and
dec
mov
mov
ja
pop
add
mov
xchg
xchg
mov
add
mov
xlat
popf
xor
lahf
xor
mov
jle
cmp
imul
xor
sti
cmpsb
ljmp
xor
fmull
popf
cli
push
lret
and
fcompl
or
push
sti
test
cli
mov
mov
dec
loop
loopne
mov
mov
clc
cmp
xor
jnp
popa
xor
mov
test
cs
xlat
aad
sti
lds
sub
mov
loope
xchg
es
popa
outsb
push
mov
aas
pushf
cmp
lock
lods
sahf
cltd
arpl
stos
add
and
pop
pop
arpl
out
add
leave
pop
mov
test
mov
cwtl
es
add
sti
sahf
or
mov
mov
xor
add
xor
popa
mov
sbb
mov
lret
push
js
jb
cmc
push
mov
xchg
pop
and
add
daa
push
xor
dec
pop
in
sub
xchg
scas
popa
clc
pop
enter
inc
jo
fisttpll
jecxz
mov
ja
out
adc
xchg
xlat
jbe
xor
ret
sub
ret
es
and
mov
imulb
andb
pushl
pop
push
lea
mov
pop
add
adcb
imul
mov
aaa
repz
xor
imul
pop
ljmp
lahf
mov
js
imul
sbb
xor
jnp
fsub
jmp
mov
loope
push
lds
sbb
mov
lahf
push
jae
inc
sti
push
std
test
lahf
les
sub
add
pop
mov
mov
stos
aaa
stos
adc
test
ret
mov
fs
ljmp
imul
sub
xlat
mov
insb
neg
cs
test
iret
inc
mov
ficomps
fucomp
and
cmpsl
ret
outsb
test
nop
xor
push
add
jmp
cmp
test
rorl
mov
in
icebp
add
push
sbbb
sbb
js
and
xor
daa
mov
stos
fisubrs
jnp
cmc
push
dec
push
je
mulb
pop
mov
sbb
xor
push
fmuls
cld
xchg
jl
jl
mov
adcb
cmp
aaa
adc
and
xor
dec
xor
mov
sbb
negl
mov
imul
mov
ljmp
mov
test
jg
test
pop
and
xor
fwait
pop
jbe
int
rclb
cmp
mov
pop
jnp
shlb
jecxz
ja
jp
or
cmc
cmpsl
add
ret
fistps
setle
mul
dec
mul
repnz
iret
xor
add
jle
and
lcall
sub
xor
xor
mov
xor
pushf
mov
pop
lcall
xor
cmp
ud1
push
pop
pop
das
jns
cmp
or
and
std
mov
mov
xor
decb
cmp
in
mov
cmpb
js
push
ja
add
jo
loop
movb
sub
sub
outsb
stos
daa
inc
xlat
and
fnstenv
sub
push
aaa
xor
inc
add
shll
sti
mov
jbe
pop
in
xchg
call
cli
imul
das
xchg
and
stos
shrb
out
mov
mov
mov
xchg
lock
xor
sbb
aad
bound
fwait
xlat
xor
cmp
mov
bound
inc
bound
movsb
shrb
or
adc
scas
mov
jno
fcomi
push
std
frstor
sub
out
mov
cld
mulb
jb
stos
fldt
mov
cltd
fsubrp
sub
and
mov
pop
push
cltd
push
test
sub
cmp
or
pop
std
lcall
jecxz
shrb
lret
and
addr16
and
jbe
and
rcr
push
jno
stos
jl
mov
fadds
mov
push
in
pop
xor
std
sarl
insl
mov
adc
out
out
lcall
imul
or
xchg
mov
ds
inc
xor
or
sbb
or
mov
dec
pop
xlat
jbe
xchg
jle
xchg
das
and
xchg
mov
mov
cmpsb
fsubrl
and
jg
imul
in
into
lret
enter
mov
sub
inc
or
imul
adc
push
pop
mov
addl
cmp
sbb
push
into
das
sub
scas
stos
ja
sub
fimuls
out
inc
or
cmpsl
xchg
in
add
cwtl
xchg
out
leave
aas
sbb
fidivrs
sub
jno
out
mov
sub
cmp
inc
out
das
adc
ljmp
sub
fistpl
scas
add
cmp
lock
mov
sub
cli
jae
mov
inc
push
jo
mov
add
fimuls
mov
fdivp
cmp
xor
ret
sub
lcall
jl
sub
out
ljmp
push
les
mov
pop
add
dec
mov
pop
add
or
jo
nop
in
cmpsl
jmp
adc
icebp
cmovge
dec
and
addr16
popf
pop
adc
jnp
pop
pop
sub
js
inc
lods
sbb
jp
add
das
push
mov
xchg
add
dec
out
orb
repnz
cmpsb
lcall
div
sar
cs
and
and
ret
pop
mov
jno
push
test
mov
lret
jmp
mov
fisttpl
pop
mov
lahf
pop
es
ror
cmp
sub
movsl
and
pop
and
insl
aaa
and
pop
sbb
aas
mov
lods
andl
nop
sub
jb
dec
ja
fwait
or
lea
mov
xchg
xor
cmc
test
xchg
cmpsl
mov
xlat
sub
outsl
jbe
pop
dec
mov
sbb
pop
xor
mov
loop
pop
sbb
movsb
pop
popf
xchg
dec
nop
loope
or
or
push
rcrb
aas
mov
lcall
xchg
scas
push
insb
jp
lock
outsb
je
adc
xchg
fiaddl
jg
jo
fmul
fistpll
insl
xchg
mov
pop
xchg
xchg
mov
rcrb
fisttps
push
aad
js
push
out
out
mov
mov
cs
add
adc
loop
fwait
xchg
test
stc
mov
hlt
es
pop
lahf
lods
call
mov
cltd
pop
adc
dec
mov
jmp
enter
or
or
shlb
shll
movsl
mov
xchg
and
or
insl
cmp
outsb
idiv
cli
and
popa
insb
xchg
jno
mov
outsl
rcll
dec
sahf
and
movsb
jg
lods
ljmp
cmpsb
sbb
aaa
iret
pop
fnclex
mov
insl
xor
dec
jb
pop
sub
push
sbb
ljmp
adc
jle
xor
stc
lods
imul
stos
jns
adc
and
jne
push
jno
cmp
sbb
fsubp
ljmp
sarl
pushf
nop
xchg
cltd
xor
cmp
jmp
daa
sub
jo
add
aam
cmp
outsb
scas
cmp
adc
and
es
pop
mov
or
jno
sarb
jle
jmp
sub
das
or
jno
mov
test
dec
mov
dec
pushf
sub
mov
xchg
fcoml
mov
cltd
mov
mov
movsl
call
fdivrs
stos
sub
scas
addl
or
pop
inc
outsl
sbb
mov
cmp
jo
and
lret
cs
mov
idivl
inc
andl
jp
pop
push
xor
shll
jle
and
dec
repnz
ud0
xor
sbb
jb
xlat
mov
test
push
xor
sti
xchg
stc
dec
adc
push
xor
dec
loope
and
cmpsb
mov
popa
or
pop
bound
adc
cmp
push
xor
mov
cld
fdivrl
shr
ja
repnz
mov
int
sbb
lcall
inc
xchg
and
xor
cwtl
push
pop
imul
lock
daa
add
dec
ja
in
lock
jns
jecxz
aaa
sbb
bound
mov
cmc
adc
subl
xor
sbb
das
ja
movsl
jae
sarb
stc
adc
pop
push
lret
fcomi
sbb
das
movswl
mov
cli
mov
xchg
adc
xor
std
push
cwtl
cmp
ds
or
popa
repnz
xchg
fbstp
cmp
jb
and
push
bound
pop
adc
xchg
imul
dec
hlt
ljmp
aaa
mov
adcb
dec
mov
das
cmp
jle
pop
xor
fsubr
dec
movb
mov
xor
mov
cwtl
fmuls
ja
sti
jl
call
and
mov
dec
cltd
adc
cmpb
sarb
mov
fadds
jae
pop
fists
pop
mov
pushf
fnstsw
out
xlat
daa
das
mulb
xchg
cmp
in
push
gs
adc
notb
test
mov
cmc
loope
or
fs
ret
sahf
mov
insl
sbb
mov
adc
je
xchg
cmpsl
subl
mov
mov
dec
push
sub
fdivrs
dec
ss
mov
movsl
enter
andl
bound
push
sub
mov
pop
orb
in
loopne
lea
sbb
jno
mov
and
ljmp
repz
cmp
nop
mov
jb
push
outsb
mov
into
jno
or
aam
jge
xorl
jo
cmp
mov
loop
out
xchg
add
lock
js
xor
sub
jo
sub
icebp
cmp
xor
stc
lret
pushf
jno
pushf
push
or
mov
popf
cld
stos
bound
mov
push
xchg
sub
mulb
stc
shrb
neg
cs
adc
sbb
imul
aas
mov
stos
in
movsl
lods
push
cli
jge
repnz
mov
in
pusha
insl
js
out
pop
inc
mov
sar
add
jp
loopne
adc
xchg
bnd
loopne
mov
cmpsl
xor
fwait
sti
ds
jne
cmp
jecxz
imul
mov
loopne
sahf
rol
lods
stc
push
mov
rclb
lahf
sub
mov
mul
sbb
xchg
add
addl
int
add
addr16
mov
test
test
sahf
mov
jg
mov
lahf
add
test
cwtl
out
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
fnstenv
pusha
nop
in
mull
xchg
ss
jb
jge
stc
in
shl
xor
fstpt
sbbl
xchg
shll
xor
sub
in
pop
pop
ljmp
cmc
mov
or
test
movsl
xchg
arpl
add
or
popf
and
mov
insl
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
popf
fiaddl
xor
mov
xor
mov
dec
mov
and
mov
mov
icebp
xor
dec
stc
stc
xor
inc
stc
xor
mov
mov
test
mov
dec
test
mov
outsl
add
sbb
test
mov
dec
xor
mov
pop
mov
cld
inc
xor
xor
xchg
cld
inc
xor
mov
jns
mov
les
xor
xchg
cld
mov
mov
jns
mov
xor
dec
xor
mov
test
xor
inc
xor
mov
mov
mov
xor
test
cmp
cld
mov
stc
xchg
mov
mov
mov
xor
jp
mov
inc
pushf
gs
pop
cmp
fnstenv
cld
mov
jns
xchg
xor
inc
jmp
test
andl
mov
mov
andl
stc
mov
dec
fdivs
mov
das
ja
dec
sub
rolb
push
pop
cwtl
inc
mov
mov
xchg
xorl
jo
mov
roll
cmc
cmp
lds
lea
fimuls
mov
xchg
loop
and
mov
test
aaa
push
cmp
add
jp
sbb
add
testb
testb
testb
add
add
rolb
sbb
inc
