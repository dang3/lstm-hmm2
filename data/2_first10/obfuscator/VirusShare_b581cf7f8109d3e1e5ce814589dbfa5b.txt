add
add
add
add
sbbb
add
pusha
add
addb
add
popf
in
xchg
add
add
add
add
add
add
add
addb
add
popf
in
xchg
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
popf
in
xchg
add
add
add
add
add
nop
add
add
add
add
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
gs
bound
fs
je
je
or
jae
outsl
outsb
cmp
xor
xor
or
arpl
jae
jb
jb
push
je
jb
cmp
or
insl
gs
jo
outsb
jns
push
jb
fs
je
dec
popa
insl
and
gs
xor
and
fs
jb
jo
imul
gs
jb
jo
imul
gs
outsb
fs
arpl
or
jo
outsb
fs
je
jae
gs
bound
or
jae
gs
bound
fs
je
je
or
jns
gs
xor
and
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
or
gs
imul
xor
xor
xor
or
jb
arpl
jae
jb
jb
push
je
jb
cmp
and
jne
insb
imul
imul
and
xor
xor
xor
arpl
xor
or
popa
outsb
addr16
addr16
or
das
ds
gs
outsb
fs
je
jae
gs
bound
or
jo
outsb
fs
arpl
or
jae
insl
bound
sub
cltd
incl
xor
or
pop
xchg
jae
jge
repnz
stos
lret
roll
jecxz
sbb
aad
cmp
inc
adc
testl
jne
jo
in
inc
mov
rol
js
and
out
aaa
xchg
dec
dec
int
int
or
pop
and
in
ret
imul
and
sarb
mov
rcr
inc
leave
and
add
icebp
push
cmc
mov
imul
lret
xor
mov
fs
mov
hlt
or
fcoms
shll
sahf
and
mov
mov
cmp
jno
stos
pop
lea
or
std
jecxz
fucomi
add
clc
data16
pop
push
aas
add
pop
mov
lea
xchg
and
mov
jmp
subl
jb
xchg
std
jb
loopne
jecxz
roll
je
push
pop
dec
jno
aaa
jo
cli
adc
fldenv
mov
stc
sbb
push
popf
inc
add
add
popf
cwtl
clc
inc
mov
lcall
xlat
pop
or
or
ja
pusha
test
push
dec
cs
dec
xor
dec
push
mov
inc
sub
cld
jp
dec
jl
mov
shlb
je
mov
or
push
adc
pop
insb
mov
mov
dec
push
lods
ds
jmp
add
xor
fwait
xor
fcmovbe
push
jnp
xor
test
aam
cmp
xor
test
loope
fidivrl
xchg
mov
dec
les
xor
push
fiadds
shlb
jbe
movsl
push
mov
mov
scas
mov
mov
mov
pusha
std
add
fsubr
mov
pop
or
shll
pop
cmp
jl
xchg
prefetcht0
pop
imul
jbe
int
xlat
nop
push
scas
inc
pop
sub
mov
cs
and
or
xchg
and
aad
cld
stc
and
pop
or
xlat
mov
repz
mov
push
sbb
or
mov
xor
jmp
add
pop
sbb
shlb
test
pushf
popa
aaa
mov
mov
mov
push
push
inc
jecxz
or
je
xor
xchg
or
jbe
leave
add
xchg
ljmp
out
rcrb
or
pop
cmpsl
add
mov
cmpl
insb
das
cwtl
lret
loop
jo
clc
pop
and
cmpsl
fcos
nop
xor
fldcw
loop
vaddsubpd
xor
repz
dec
push
or
push
leave
in
leave
sub
cli
daa
test
xorb
test
mov
mov
test
add
sbb
lock
push
ljmp
jns
sbb
jmp
xor
enter
sbb
fstl
adc
fsubrl
xchg
nop
mov
lcall
inc
jae
sarl
inc
outsl
adc
pop
dec
pop
sqrtps
aas
sbb
in
movsl
mov
add
fistpl
icebp
idivb
push
fisubrs
lock
jecxz
adcl
xorb
mov
fisubl
mov
shll
and
stc
sti
in
jmp
lock
in
sub
jno
cld
and
shlb
add
stc
sahf
push
ja
iret
cmp
iret
ljmp
pop
lods
jp
push
ret
sti
fidivs
js
adc
int3
pop
in
mov
mov
push
test
test
cwtl
cs
testb
sub
in
imulb
ljmp
jae
xor
mov
inc
pusha
hlt
jp
xchg
jne
scas
les
sbb
shrl
jnp
fwait
outsb
bound
push
ja
aam
fisttps
ljmp
mov
arpl
sub
rcrb
pop
and
push
inc
test
int3
insl
fcompl
in
popa
adc
movsl
mov
js
lods
sbb
inc
imulb
xchg
test
xchg
imul
mov
outsl
je
mov
stos
aas
leave
ljmp
adc
lret
adc
mov
mov
loope
jae
movsl
mov
xchg
pop
ss
fnstcw
pop
outsl
pop
loope
fsubrs
ror
mov
xchg
mov
add
and
mov
mov
clc
out
outsl
enter
or
pop
clc
stc
test
mov
and
jmp
mov
mov
out
in
sbb
insb
xchg
lock
and
fldl
arpl
fildl
scas
xchg
push
fwait
test
icebp
pushf
shrb
call
cld
adc
inc
dec
shl
push
inc
cli
xlat
sbb
les
mov
int3
jecxz
sub
push
call
lods
dec
imul
scas
imul
push
bound
insl
addr16
add
test
enter
cmp
cmpsb
fistpl
or
insl
pop
push
mov
data16
data16
sub
test
mov
and
movsl
push
xorl
sub
push
iret
into
lea
pop
sbb
jmp
std
out
fs
inc
cli
sbb
cmpsb
cmpsl
sub
and
mov
mov
das
enter
addr16
je
push
adc
xchg
push
int
cltd
outsl
inc
ficompl
sti
out
sbb
fidivs
xchg
lcall
pop
push
and
add
mov
pusha
loop
push
mov
aam
pop
mov
xchg
lret
pop
sub
insb
outsb
jns
ljmp
out
mov
enter
stos
sub
or
mov
adc
jns
inc
xor
inc
mov
sub
rolb
inc
fnstenv
fwait
mov
jo
cmp
jg
inc
pusha
scas
aad
xchg
in
xlat
imul
repz
xor
int3
xlat
jno
push
xchg
outsl
add
sbb
imul
mov
icebp
mov
add
pop
cmp
sbb
cld
push
push
test
jmp
ficoml
jg
shlb
adc
or
jne
int
push
pop
sbb
lahf
xchg
jne
cld
cmp
dec
add
sti
call
push
addb
cmpsb
jl
xor
pushf
movsb
and
std
pop
lahf
inc
xor
sbb
or
cld
out
add
xlat
lcall
lods
shr
pop
cs
inc
mov
fmul
mov
xchg
bound
and
scas
dec
or
hlt
lock
icebp
rcll
js
jmp
clc
popl
cltd
les
xchg
adcb
sub
into
mov
inc
ror
mov
cmp
out
add
mov
stc
je
xor
les
jecxz
sarb
pop
aas
fstpl
fldt
in
push
fists
cld
addr16
mov
sahf
inc
mov
stc
pop
and
and
xchg
inc
out
or
lods
shlb
sub
dec
add
leave
mov
inc
movsb
pop
cmp
push
push
data16
outsb
mov
pop
outsl
paddb
xchg
dec
push
jg
cltd
sub
push
jnp
and
add
enter
push
dec
mov
gs
setp
pop
dec
and
imulb
pop
je
add
ja
rep
inc
dec
jae
push
out
bound
xlat
sbb
nop
iret
cmp
cmp
cltd
mov
dec
xchg
out
aas
movsl
int
adc
iret
adc
fsubl
iret
add
or
fwait
out
bound
fidivl
sub
cmp
dec
and
loopne
inc
sahf
push
jmp
or
cmpb
lods
pushf
mov
mov
push
out
inc
pop
popa
lock
cmpsb
cld
pop
pop
push
xor
mov
hlt
in
in
into
pop
fdivrl
sbb
or
mov
jb
or
sbb
inc
add
push
jg
scas
add
out
test
pop
add
pop
jmp
xor
mov
fadd
push
dec
pusha
mov
cs
jg
mov
and
mov
bound
xor
jae
imul
xlat
and
ret
scas
in
test
test
test
dec
inc
int
or
ljmp
or
aad
int
push
mov
inc
push
ja
aad
sbb
inc
lods
loopne
insb
xor
add
lret
cmp
inc
jae
fldt
sub
pop
xchg
mov
mov
xor
les
repnz
pop
add
push
inc
and
xchg
fsubl
bound
dec
or
push
xchg
jl
jmp
iret
cmc
mov
push
or
mov
push
popf
stos
xchg
in
pop
adc
push
and
xchg
add
lea
xor
push
lea
repnz
mov
inc
inc
cli
dec
xlat
cmpsb
mov
nop
aaa
cmp
cmc
cmpsl
add
fsubp
xlat
sub
sti
bound
sbb
mov
stc
adc
or
inc
xchg
imul
insl
loopne
fisttps
in
inc
out
mov
out
mov
fcmovbe
mov
sbb
mov
mov
cltd
lods
jne
xchg
xchg
ss
insl
stos
cs
pop
add
fldt
inc
nop
nop
push
jno
fldenv
mov
or
and
ficomps
sbb
imul
or
js
mov
in
cwtl
jbe
movsb
jmp
std
mov
in
or
jecxz
dec
mov
adc
jmp
mov
leave
mov
push
xchg
jae
iret
cwtl
aad
sbb
cmpsb
pop
cwtl
cmp
xor
repz
and
inc
sbb
sub
jl
adc
pop
aad
imul
pushf
lahf
js
sbb
jb
loopne
in
or
xor
cwtl
sbb
enter
cmp
bound
and
popf
sbb
in
mov
xchg
lock
int3
cmp
mov
sbbb
push
mov
stos
subb
mov
xor
push
test
jmp
mov
cmp
call
call
sub
push
mov
outsl
sub
out
hlt
int
cmp
and
and
aam
jecxz
mov
in
sub
nop
xor
push
cs
inc
or
call
hlt
sti
cmp
in
lods
push
int
jb
mov
sbb
add
cmp
xchg
test
or
dec
or
push
push
psubd
popf
jb
dec
int
inc
lock
mov
mov
js
adc
push
xchg
cmc
rcll
xchg
xchg
mov
mov
pop
out
jnp
fnstcw
sub
jp
pushf
movl
jbe
frndint
fildll
imul
pusha
cwtl
xchg
cmp
jnp
jmp
jp
dec
pop
add
popw
lret
lret
mov
cmp
das
nop
add
cmp
sub
mov
cmp
xor
mov
outsb
mov
mov
fidivl
imul
cmp
pop
lea
cwtl
and
inc
fsub
push
push
int3
add
sbbb
pop
sub
fwait
dec
pop
stos
push
scas
ret
into
jmp
insl
cmc
and
push
xor
sub
xchg
daa
jecxz
cwtl
dec
push
aas
gs
xchg
fnstenv
mov
mov
subl
pop
dec
ljmp
pop
mov
and
scas
fwait
cmp
pop
les
push
ds
or
pop
in
push
jecxz
push
stos
xor
jp
push
imul
sub
sub
jge
adc
inc
ficoml
push
jno
call
jl
js
je
aam
rcrb
dec
jle
repnz
xchg
out
loope
jae
adc
popa
lea
add
pop
inc
imul
lret
test
int3
pop
xor
in
andl
orb
insb
scas
sub
add
sti
lods
outsl
xchg
add
sbb
rcrl
mov
stc
pop
push
cmpsl
xchg
or
or
adc
stos
mov
loopne
mov
cmpsb
sahf
rolb
mov
mov
cmp
arpl
mov
cmp
jle
jl
out
ss
cmpsl
daa
negb
or
dec
xchg
dec
in
ret
cmp
enter
fidivrl
dec
push
roll
xor
icebp
xorb
jne
inc
dec
mov
cmp
or
dec
aam
xor
outsb
fldl
fwait
enter
outsb
jb
mov
add
pusha
pop
repnz
mov
add
out
cmpsb
push
fdivrl
jno
fstl
mov
jnp
repnz
or
ja
mov
xchg
push
xchg
xchg
push
test
call
jns
subb
mov
idivl
push
int
cmp
loop
dec
outsl
jnp
ljmp
loope
add
and
sub
fldcw
rcrl
mov
xor
cmp
sub
xchg
xchg
dec
popa
je
jne
cli
cmp
ret
inc
fcoml
in
pop
pop
mov
enter
les
xchg
arpl
fwait
lods
fs
add
mov
jno
sbb
xlat
push
push
test
lahf
mov
gs
or
sbb
ja
subb
mov
imul
mov
push
stos
inc
out
rorl
pop
ss
pop
lahf
lahf
xor
inc
stos
es
dec
push
and
jge
in
sahf
jle
cmp
loope
xchg
push
sbbl
push
daa
inc
and
mov
loopne
lods
jns
sub
pop
loope
sbb
mov
jb
dec
sbb
cmp
fmuls
and
sbb
mov
xor
fcoms
addr16
sub
mov
sbb
mov
mov
cmp
push
test
idivb
cmp
or
dec
mov
jmp
mov
adc
aaa
adc
jo
inc
sbbl
sub
dec
sub
sbb
stc
sbb
adc
xchg
into
insl
lcall
lods
dec
lea
adc
movsb
imul
cmp
mov
push
jbe
lock
mov
mov
mov
movsl
push
test
or
mov
jb
mov
lds
mov
mov
loope
shll
out
add
pop
lds
mov
jo
cmpsb
jmp
mov
mov
outsb
lret
adc
repnz
nop
inc
jle
stos
lods
xor
push
xchg
xor
mov
xor
adc
decb
insl
repz
xchg
pop
sub
cmpsl
sbb
cwtl
add
cmp
xchg
ds
mov
ss
xlat
aam
das
addr16
xchg
les
arpl
push
and
xor
pushl
cmc
fistpl
sti
lds
xchg
dec
add
mov
and
jmp
jl
mov
mov
mov
lds
imull
mov
or
ficoml
adc
push
lret
jns
jle
std
inc
push
dec
pop
mov
sub
push
dec
sub
xchg
mov
mov
mov
sbb
sbb
mov
jne
mov
movsb
lcall
lods
jmp
scas
sbb
cli
mov
ss
nop
cmp
movsl
mov
and
add
push
mov
ljmp
and
jmp
pop
rcl
cmc
lds
adc
mov
pusha
push
stc
aad
cmc
and
dec
xor
in
or
xor
pop
mov
movsb
push
mov
repz
push
lcall
roll
clc
and
cmpsb
push
faddl
inc
xchg
mov
mov
mov
add
sub
push
pop
mov
mov
popf
cmpsl
imul
jle,pt
xchg
leave
xorl
mov
subl
sub
sub
xor
mov
xor
test
mov
add
ds
fcompl
mov
pop
scas
into
fldenv
adc
sbb
ret
ds
add
mov
test
mov
call
and
or
jg
cltd
mov
mov
ret
add
mov
dec
mov
cld
dec
fistpl
cld
in
pop
add
xchg
bound
ror
or
test
gs
andb
jg
add
adc
mov
cmp
pop
sbb
cld
adc
push
shrd
mov
xchg
lret
fdivr
mov
aam
xor
das
lock
cmc
fcoms
jns
es
call
mov
pop
bound
stc
pop
inc
pop
and
sahf
fisubrl
nop
dec
or
mov
out
sbb
ror
mov
leave
inc
sub
pop
stc
enter
outsl
mov
cmp
out
sbb
loopne
repnz
sub
ror
inc
sub
push
or
cmp
rclb
dec
xlat
sub
andb
pop
imul
es
addb
in
pushl
xor
xchg
mov
mov
or
repnz
notb
jo
pop
sbb
pop
and
adc
clc
jb
lret
clc
rcr
std
mov
frstor
mov
push
popa
repz
pop
mov
pop
and
cmp
mov
push
in
dec
dec
inc
repnz
add
lds
jnp
push
dec
push
cmp
xchg
inc
jp
mov
dec
pop
arpl
outsl
add
inc
mov
fxch
daa
jo
aaa
fs
pop
outsb
mov
fneni(8087
jmp
dec
pop
psrlw
test
notl
repz
nop
dec
out
push
rcl
fildl
fisubrs
rol
sbbl
mov
inc
rol
sub
sub
aaa
test
mov
adc
add
push
and
mov
aaa
dec
push
dec
stc
fsubs
fstpl
in
pop
adc
push
xor
push
and
mov
jg
pop
dec
inc
mov
filds
sbb
jp
fsub
mov
add
repz
or
ss
leave
mov
rcll
out
mov
cmp
xchg
xor
movsl
clc
push
mov
or
fucomi
xor
dec
xchg
pop
sbb
orb
aam
in
in
push
shlb
jb
mov
mov
sbb
and
dec
mov
negl
xchg
in
jns
stos
push
inc
adc
inc
and
lahf
push
mov
sbb
jne
call
loopne
mov
test
icebp
test
xchg
scas
insb
out
and
test
sbb
jne
inc
leave
nop
orl
test
int
jne
aam
xor
xorb
dec
dec
es
mov
jno
mov
pop
mov
mov
xchg
dec
sti
rclb
inc
pop
xchg
sahf
fnstcw
adc
shrb
int
mov
inc
enter
xchg
outsb
lods
xlat
andb
jb
outsb
cld
sbb
mov
xchg
imul
and
xchg
fdivl
aas
out
daa
jbe
mov
sbb
insl
mov
adc
xor
mov
in
inc
push
iret
add
cli
stos
call
add
cltd
add
xchg
xchg
loop
test
icebp
out
mov
sub
das
add
xchg
xchg
adc
addl
xchg
adc
dec
pop
gs
fst
sbb
xor
out
push
lds
das
aaa
test
mov
popf
cmp
adc
int3
and
xchg
orl
leave
mov
ficoms
cltd
mov
cs
jmp
xchg
loope
div
jmp
adc
xchg
cltd
dec
jge
ljmp
inc
jmp
arpl
xor
xor
cwtl
jns
scas
dec
fildl
inc
stc
icebp
test
or
lret
inc
xor
jns
movsl
mov
cmpsb
jb
pop
mov
fptan
out
je
data16
cmp
xchg
xor
push
popa
push
mov
mov
outsl
in
push
test
mov
scas
daa
adc
aas
sbb
or
push
ljmp
stc
push
in
cmp
sub
insl
mov
inc
insl
lods
jbe
filds
jne
clc
and
test
cs
mov
inc
push
lret
pop
lock
xchg
mov
push
push
mov
push
pop
gs
xlat
xchg
jg,pt
mov
rorl
mov
or
enter
xchg
mov
out
push
inc
dec
pop
js
cmc
sbbb
test
adc
test
and
loope
push
sub
inc
mov
enter
dec
lret
dec
orb
and
push
push
aad
xchg
push
jmp
shrb
fs
in
add
int3
add
pusha
fcompl
call
jo
fchs
fisttpl
cmpl
ss
jne
test
mov
mov
push
arpl
ret
adc
mov
bound
ds
jbe
cmp
into
icebp
pop
jge
idivl
fiaddl
rcrl
std
mov
data16
insl
inc
mov
aam
dec
shll
push
mov
and
sbb
pop
cmc
call
aaa
scas
lea
xor
rol
mov
pop
mov
int3
mov
popa
cmp
cwtl
enter
xchg
xchg
xchg
lds
adc
out
and
xchg
je
push
cs
or
stc
aas
addb
mov
jo
pop
dec
push
repnz
scas
lods
js
pusha
vmread
jns
enter
mov
jnp
or
xor
xchg
mov
fstpt
les
dec
mov
cmpsb
ja
int3
mov
cmpsb
rorb
sahf
push
cmp
mov
jmp
and
ror
pushl
jo
mov
into
sahf
add
mov
inc
xchg
clc
sub
sbb
cmpsl
into
mov
sahf
inc
orb
les
imul
push
jmp
cmpsl
or
loopne
insb
mov
push
pop
fmulp
pop
repz
push
nop
icebp
icebp
mov
stc
leave
loop
cmpsb
mov
in
or
aad
jb
cmpsl
negl
ss
outsb
loope
add
in
orl
push
xchg
inc
fs
and
sahf
pop
mov
mov
add
cmc
sbb
repnz
add
mov
enter
imul
adcl
mov
xchg
pushf
mov
icebp
js
aaa
ret
adc
cmp
and
sub
rcr
out
jmp
jge
push
scas
out
subl
in
fcmovnb
mov
dec
push
dec
das
add
push
dec
sti
mov
inc
xor
mov
cmp
lahf
lret
icebp
inc
pop
push
xchg
pusha
jle
mov
inc
imulb
mov
int
iret
mov
inc
mov
lock
imul
mov
imul
add
cli
pushf
mov
jmp
jo
sub
inc
lret
xorb
repz
outsl
sbb
lret
mov
pushf
rcr
data16
out
movsb
test
xor
int
dec
xchg
rclb
int3
cmp
pop
mov
jno
test
mov
pop
cli
mov
adc
xchg
and
xor
repnz
subl
mov
ds
cwtl
rorl
arpl
push
mov
inc
xchg
addr16
add
dec
loop
rcrl
inc
mov
lods
cmp
les
pop
in
andl
aaa
inc
aam
mov
sbb
popa
pusha
test
lds
xchg
imul
push
or
inc
stos
or
adcb
mov
test
arpl
mov
adc
insb
lods
pop
push
cmpsl
int3
mov
jl
dec
loope
outsl
dec
sub
mov
or
cmp
mov
mov
jmp
lods
fisubrl
test
push
iret
enter
je
dec
ja
stc
lds
xor
fwait
pop
std
fiaddl
jge
adc
mov
arpl
jecxz
mov
sarb
icebp
xor
mov
mov
jmp
scas
sti
sahf
mov
push
cmp
mov
and
mov
inc
mov
and
popf
cmp
or
iret
push
push
insb
pop
movsb
mov
nop
mov
icebp
testb
dec
cmp
inc
stos
clc
xchg
shrb
and
lods
subl
aam
in
adc
movsl
dec
sbb
or
cmpb
out
sub
dec
cwtl
insb
int3
das
push
shrl
push
add
add
add
lea
fnstsw
cmp
das
push
stos
je
in
cmc
mov
rcl
or
push
fists
jg
sub
mov
cli
leave
mov
push
lahf
mov
sub
sub
xchg
pop
aaa
inc
ret
leave
mov
bound
je
imul
sbb
cltd
iret
sub
outsb
ret
inc
pushf
push
leave
fsubrp
dec
mov
lret
xchg
xor
out
mov
jnp
jl
mov
xchg
dec
and
jno
dec
addb
mov
push
loope
mov
jo
iret
shll
out
enter
jg
es
inc
add
shl
ss
sbb
lcall
es
rorl
adcl
xlat
cmpsl
int
imul
jnp
xchg
in
or
mov
mov
add
test
mov
aad
mov
test
jl
mull
jnp
movsl
pusha
lock
dec
mov
outsl
pushf
xor
jmp
mov
xchg
arpl
add
out
addr16
xor
sub
stos
xor
jbe
loop
lods
dec
loopne
cmp
stos
mov
insl
adc
testb
dec
daa
mov
sbb
in
adc
jmp
lds
lret
mov
push
outsb
xor
test
xor
add
ljmp
cmpsb
pop
inc
enter
aad
or
decl
inc
jmp
sbb
xlat
mov
sbb
mov
push
shlb
mov
cltd
stc
jge
adc
into
mov
lea
adc
mov
jns
ret
mov
or
mov
hlt
nop
or
and
adc
push
mov
cltd
adc
adc
push
mov
mov
cmp
xchg
xchg
push
test
lea
and
lock
cltd
add
call
and
gs
inc
xchg
adc
iret
aad
shrl
or
inc
or
mov
push
push
fldl
lea
adc
lret
les
out
js
loop
jns
mov
arpl
outsb
js
cld
add
dec
mov
ljmp
cmp
xchg
inc
fcmovnb
nop
or
push
daa
inc
fisubl
jbe
mov
adc
pop
jo
mov
cld
pop
xor
adc
cmp
stos
lock
mov
or
dec
sarl
sub
dec
insb
je
mov
call
sbb
jmp
fdiv
cmp
sbb
jl
std
inc
in
test
into
mov
xlat
mov
call
xor
in
stos
jno
dec
xchg
out
xlat
icebp
orb
loope
pop
pop
jnp
clc
sub
sbb
lods
xor
lock
imul
xor
sub
or
mov
fwait
pop
rcll
push
jnp
xor
into
adc
insb
out
push
in
loop
cli
pop
adc
adc
lea
mov
daa
push
dec
lret
xor
pushf
adc
pop
add
sbb
push
cltd
fstps
aas
movsb
sti
mov
pusha
mov
outsl
cld
cmc
pusha
es
push
in
rcll
adc
xor
mov
out
push
lods
xorb
je
xchg
and
add
frstor
sahf
bound
test
stc
inc
xor
cmp
adc
dec
aad
cmp
xor
stc
sahf
ljmp
lahf
cmp
popf
fldt
pop
mov
ss
ror
loop
lea
dec
cmp
shlb
int3
xor
in
xchg
femms
cmpsl
ja
dec
xor
mov
hlt
xchg
iret
rorl
cli
xor
mov
lds
imul
rorb
jmp
cmp
push
rclb
in
lods
jg
inc
out
shll
mov
nop
pushf
push
out
nop
jg
inc
cmp
dec
fwait
mov
rcr
clc
lahf
push
pop
pop
jns
es
jmp
fucomip
push
adc
cmpsl
mov
xchg
inc
mov
aaa
loopne
loopew
test
loopne
xor
adc
cli
push
into
std
shlb
and
out
dec
into
sbb
sub
lea
test
dec
imul
lods
out
or
inc
or
sub
pop
pop
pcmpgtd
arpl
push
cmp
stc
sbb
adc
mov
lods
pop
shlb
loop
fsubr
repnz
clc
mov
mov
dec
mov
adc
inc
bound
call
inc
mov
xchg
xchg
int
lcall
outsb
mov
adc
add
mov
leave
pop
lret
push
gs
cmp
push
push
rcrb
pop
mov
fisubl
addr16
cwtl
cmp
in
lea
ret
test
cwtl
mov
inc
xchg
gs
xor
mov
xchg
lods
fiaddl
jo
jl
shlb
test
pop
and
mov
push
dec
stos
popa
push
push
andl
fwait
dec
scas
inc
jg
lahf
fcmovnb
ja
or
cltd
push
dec
in
adc
xchg
ds
lock
push
jle
mov
mov
sub
adc
sbb
in
push
pop
pop
xchg
aam
incl
nop
and
out
xchg
mov
push
ljmp
clc
sbb
fistpll
mov
jns
fsubr
sub
psubd
fmull
scas
adc
sbb
mov
fstl
push
imul
or
adc
sub
mov
xchg
push
scas
stos
inc
cmc
push
pop
pop
or
jmp
and
icebp
cld
shll
lahf
add
mov
adc
fsubrs
xchg
cld
fldl
cwtl
mulb
mov
in
push
cwtl
xchg
sub
push
mov
jmp
xor
cld
add
mov
into
popa
inc
mov
jo
xor
dec
fidivl
mov
test
in
cmc
ror
sar
in
mov
loopne
cmpb
fldcw
cmp
sbb
xor
mov
sbb
inc
out
fidivrl
mov
and
loop
pushf
adc
bound
out
mov
test
jbe
insb
loopne
sbb
iret
inc
cld
daa
enter
bound
les
mov
cmc
fcoml
or
mov
in
divb
mov
nop
xchg
dec
imull
scas
faddl
push
bound
mov
and
push
leave
jg
shl
adcl
mov
mov
fisttpll
cmp
loopne
pop
aas
xchg
js
inc
loope
push
mov
and
fcoml
js
jge
sub
cmp
in
xor
mov
xchg
mov
xchg
inc
push
rcll
movb
cmp
out
aad
jecxz
inc
mov
out
inc
inc
jae
pop
ss
pop
movd
stos
xchg
scas
add
inc
add
pop
stc
or
mov
jno,pt
mov
fistpl
mov
aad
xchg
mov
cs
in
jge
mov
push
mov
cltd
cmpsl
data16
sahf
rorl
dec
fdivrp
jno
mov
sub
jno
push
mov
dec
fidivrl
lock
lods
pop
fs
pop
js
add
or
arpl
movb
sub
loop
mov
mov
jne
imul
pop
and
mov
jg
lcall
js
push
pushf
push
add
mov
pop
cld
repz
mov
pop
or
cmpsl
xchg
xchg
in
xchg
cmc
sbb
cmpsl
ljmp
ljmp
imul
adc
pop
mov
movsl
cltd
ja
in
and
out
popa
jp
rorl
mov
cmp
push
popa
sub
pusha
push
mov
jbe
add
push
ljmp
aaa
and
shll
adc
sbbb
pop
ud0
lahf
int
add
cld
lret
adc
sub
push
adc
mov
xchg
sarl
ret
lods
mov
and
push
int
orb
xor
jge
shrl
mov
xor
and
out
adc
cs
leave
add
xor
xor
out
les
sub
cmp
push
idivb
jp
imul
pop
orl
mov
test
lcall
aam
leave
mov
mov
xchg
sub
icebp
push
insb
inc
mov
or
loopne
mov
cwtl
lds
dec
leave
mov
iret
push
cld
jmp
test
add
sbb
mov
shlb
mov
into
jbe
shll
inc
mov
lods
mov
xor
dec
sub
fnstsw
popa
xchg
and
jg
cmpsb
sub
pop
jbe
mov
out
push
pop
mov
ficoml
lds
adc
negb
test
fcomps
push
test
stos
ror
sub
lods
scas
mov
sbb
insl
jmp
rcl
dec
lret
cmpsb
lods
les
pop
cld
out
mov
jbe
sbb
cmp
xchg
inc
aas
ret
pop
xchg
jno
cmp
dec
jge
inc
mov
imul
lds
push
mov
push
mov
xchg
push
and
mov
xor
add
mov
push
aas
dec
outsl
push
and
leave
push
cltd
mov
jp
jns
cmp
insb
mov
sub
fdivrp
test
sbb
pop
lds
and
mov
adc
daa
adc
in
test
cmp
or
pop
pop
jns
pop
sub
lods
mov
push
push
push
mov
pop
pop
mov
ljmp
xchg
das
popf
test
jno
push
xchg
inc
mov
inc
mov
imulb
lods
and
stos
xchg
popa
dec
insl
cmp
frstor
inc
das
cwtl
ror
sbb
xor
cld
shrl
test
stos
lock
shrl
push
pop
out
into
or
xchg
sub
mov
cmp
in
incl
clc
cmpsb
out
push
in
xchg
out
adc
mov
cmp
sub
mov
rorl
mov
dec
xchg
in
pop
push
scas
in
jne
sarb
add
repz
movsb
mov
ljmp
pop
lret
and
jg
adc
lods
ds
xlat
ljmp
cltd
ret
jae
xchg
cmpsb
push
ficoms
inc
fisubl
mov
push
or
or
mov
ljmp
sbb
jnp
adc
sub
pop
into
adc
arpl
add
scas
xor
push
out
lds
or
or
enter
les
repnz
mov
popf
dec
mov
mov
cltd
sbb
les
and
ja
pop
lret
jecxz
rclb
sarl
xor
mov
sbb
les
cmc
cmp
dec
je
mov
aaa
pusha
mov
arpl
dec
out
add
and
cltd
jnp
add
subb
and
jns
and
rcrb
and
sbb
out
popf
out
ret
cld
push
jge
loope
jne
shl
dec
aaa
jae
ret
pop
jmp
mov
test
popf
loop
cmp
jns
shlb
mov
sti
mov
mov
cmp
shl
jae
ss
lret
jbe
push
iret
fmuls
xor
mov
push
ss
call
inc
pop
or
mov
movsb
cld
lahf
imul
lea
in
sub
jo
pop
stos
jnp
pop
testl
movsl
addr16
mov
xlat
mov
adc
das
sub
push
sub
xchg
addr16
mov
mov
mov
shrb
scas
stos
out
cmp
jp
jle
daa
out
pop
add
mov
inc
mov
push
data16
in
and
sahf
xor
push
ucomiss
and
out
xchg
mov
jle
jbe
cltd
fnop
arpl
cs
popf
add
mov
push
enter
je
mov
mov
add
negl
mov
cmc
test
repz
sbb
or
cmp
leave
jmp
push
inc
or
and
mov
adc
jmp
jbe
repnz
add
and
dec
mov
mov
pop
push
lahf
dec
mov
popa
mov
mov
cltd
loop
ja
sub
cld
pop
xchg
add
shll
sahf
outsb
cli
adc
mov
xchg
cmp
lahf
mov
cld
rorb
js
fildll
jle
out
jmp
dec
jbe
add
sahf
sub
push
ds
add
mov
call
in
sarl
cltd
loop
repz
xchg
cmpsl
mov
cli
insl
cmp
fwait
jae
movsb
sti
pop
fs
inc
lfs
mov
jno
stos
js
lds
and
aad
or
push
mov
mov
push
rorl
in
jge
lea
outsb
push
push
fs
xor
pop
push
and
mov
dec
movsb
and
fwait
mov
dec
adc
call
pop
hlt
mov
int
arpl
pop
cmp
stc
mov
ret
mov
loopne
pop
xorb
cmp
jo
dec
mov
mov
fs
daa
ljmp
mov
movb
test
movsl
js
or
add
push
sbb
ds
test
sub
sub
in
push
ss
pusha
sahf
push
cmc
lcall
push
imul
sub
test
pop
sti
add
repz
or
dec
pop
adc
inc
push
xchg
imul
mov
cmc
mov
or
xchg
xchg
fucomi
mov
xor
int
dec
addr16
sbb
inc
jne
sub
mov
push
jge
ja
dec
and
mov
cwtl
jae
aad
dec
lret
mov
lcall
rcrb
sbb
loop
imul
or
mov
mov
in
loop
jecxz
push
cmp
test
mov
lcall
test
lods
pop
xor
mov
data16
add
push
stos
ljmp
cmp
test
dec
xchg
cmp
lock
adc
cmpsl
sahf
in
nop
dec
aad
cltd
xor
dec
das
out
outsl
and
push
jns
enter
idiv
jbe
inc
add
sbb
popa
test
iret
rorl
and
sbb
or
xchg
insl
add
inc
mov
jmp
push
cwtl
mov
pop
sub
pop
sub
lahf
jo
pushl
movsl
ret
hlt
cmc
or
repz
mov
xchg
jo
lret
mov
mov
inc
mov
ficoml
mov
and
nop
or
lret
rolb
int3
scas
jnp
xchg
mov
js
mov
dec
clc
jno
cli
jle
pop
jg
loop
xorb
inc
data16
and
loopne
xor
xchg
push
or
movsl
scas
lret
loope
test
out
jo
and
inc
mov
fldt
clc
push
int
jae
jno
cltd
push
hlt
adc
in
lods
mov
lcall
sbb
mov
or
cmp
add
es
inc
outsb
add
add
int3
add
jmp
jl
nop
jl
pop
sahf
add
xor
cwtl
hlt
push
adc
push
adc
lret
jbe
mov
push
adc
xchg
mov
inc
adc
shlb
xchg
mov
mov
mov
or
loope
stos
mov
jno
sub
mov
sbb
mov
rclb
adc
lock
call
addr16
filds
cmpsb
repz
daa
add
out
add
xchg
fistpll
mov
inc
insb
inc
adc
xor
leave
mov
adc
daa
loope
dec
xchg
popf
outsb
cmpsb
sbb
dec
adc
lea
in
push
push
sub
jle
fwait
mov
std
dec
mov
insb
gs
push
add
mov
cmp
sbb
aad
add
sbb
in
mov
sbb
adc
lds
cmp
adc
mov
cmp
dec
movsb
add
xor
daa
ret
lea
and
dec
and
cmpsl
dec
ljmp
sbb
mov
lahf
inc
aaa
movsb
popa
call
inc
fildl
out
jns
jmp
cmpsb
fisubl
cmpsl
in
inc
cmp
mov
enter
jmp
jnp
and
out
mov
jp
out
push
pop
jnp
mov
ret
pop
inc
ret
loop
mov
dec
push
pushl
jae
jge
push
lret
jle
inc
xor
fsub
jbe
or
lds
mov
xchg
xchg
or
jp
sub
int
xor
lcall
nop
fdiv
shl
test
test
sahf
xor
mov
and
sarl
repz
out
stc
or
fs
idiv
push
xor
arpl
xor
lods
fimuls
mov
dec
rorb
scas
or
dec
sbb
movsl
pop
jge
mov
mov
mov
inc
mov
pop
ret
dec
push
scas
bnd
push
and
lcall
in
xor
enter
stc
stc
or
fst
lock
in
add
repnz
scas
ret
popa
xchg
inc
mov
fbstp
fisttps
movsl
xorl
clc
mov
insl
sbb
cmp
mov
fmuls
sub
stos
ret
and
push
sbb
and
mov
jle
mov
cmp
in
sbb
mov
repnz
shll
xor
stos
cli
and
clc
aas
ret
dec
jge
add
scas
gs
dec
out
xchg
cltd
push
ret
cmp
ret
mov
inc
jbe
xchg
popa
cmc
aam
and
pop
ret
lods
mov
aam
xor
add
sub
sti
jae
insl
cmp
push
adc
sahf
sbb
repz
inc
test
aad
mov
mov
js
push
cmp
sub
push
jl
js
xchg
das
push
jg,pn
stos
xor
orl
pop
sbb
mov
aam
adc
cmp
mov
addb
mov
fiaddl
clc
pop
cltd
inc
xchg
jb
loop
and
jne
fidivl
arpl
cmpsl
scas
iret
push
das
inc
cmp
lods
fnstcw
bound
mov
xchg
das
fstps
xor
sub
push
push
movsl
mov
xor
add
in
cld
add
aaa
xor
pop
pop
loop
ret
outsb
mov
mov
mov
and
fs
jmp
mov
mov
cli
stos
cwtl
sbb
inc
or
int3
ss
xor
push
and
outsl
aam
mov
rorb
cli
and
jb
or
fdivrs
xor
cmc
imul
in
fldcw
xchg
fwait
add
pop
popf
aam
gs
push
fadds
add
mov
xchg
push
ja
xor
divl
ror
lret
loopne
xor
imul
loopne
repnz
dec
scas
sbb
or
mov
mov
mov
pop
mov
dec
das
pop
test
insl
fists
ds
fisubrs
mov
scas
rol
mov
xchg
pandn
and
mov
movsl
jl
xchg
and
push
test
insb
add
jae
data16
sbb
imul
jmp
jmp
push
fmull
add
out
push
jp
jmp
pop
push
and
mov
and
adc
sub
in
sbb
sbb
and
loop
imul
sub
xchg
rcrb
cmpb
data16
push
jle
pushf
cli
js
add
xchg
pushf
pop
in
sbb
mov
add
jb
aaa
cld
jns
sbb
or
fisubrl
mov
les
dec
in
dec
jmp
add
jae
cmp
por
test
arpl
pop
xchg
push
jbe,pn
cmp
xor
pop
fsts
push
sbb
push
jecxz
lahf
or
fists
inc
outsb
dec
xchg
mov
jae
stc
push
push
or
in
loopne
mov
cmp
movsl
int
or
jo
xchg
jmp
jnp
call
add
imul
sub
fs
push
fnstcw
insb
sbb
ljmp
cwtl
arpl
jo
jo
mov
je
mov
sub
mov
pop
inc
or
jae
dec
imul
mov
stc
dec
or
push
xor
rcrl
xor
les
sarl
aas
xchg
jmp
add
aad
stos
out
inc
lods
pop
sbb
fidivrs
enter
jnp
cmp
or
nop
rcll
sbb
in
push
sub
ret
push
lods
ret
mov
shl
cld
orl
shlb
lcall
cmp
xlat
rolb
shl
jl
leave
out
ljmp
fwait
inc
jge
inc
pop
mov
repnz
clc
cltd
pop
cmpb
add
repz
and
fstps
mov
and
rcrb
pop
out
shlb
int3
xor
jmp
push
jmp
lcall
lret
sub
pop
add
in
xchg
fwait
adc
push
mov
pop
cmp
cmpsb
test
mov
mov
xchg
add
xor
jp
ffree
scas
pop
outsl
mov
inc
sbb
lds
sbb
stos
pop
mov
dec
or
rolb
test
jg
call
popf
in
leave
adc
xchg
mov
xchg
mov
jp
js
insb
idivl
add
mov
xorb
add
cmc
jecxz
stc
aam
shr
push
leave
adc
cmpsl
and
das
outsb
loopne
inc
xor
aam
add
xor
jb
inc
in
addb
repnz
cmp
dec
xchg
icebp
mov
dec
fld
imull
or
lahf
arpl
test
scas
andl
xchg
daa
jmp
rolb
pop
mov
mov
mov
movsb
xchg
cmp
scas
mov
fsts
jmp
and
int3
fadds
mov
sti
push
pop
cmpsb
mov
clc
test
mov
je
jo
loop
inc
sub
push
jp
out
int
fisubs
push
jno
jbe
dec
dec
sub
outsb
sub
into
pop
ret
jle
mull
xchg
sbb
outsl
rclb
and
clc
push
movsb
repz
std
fcmovne
fdivs
cmp
push
cs
inc
hlt
pop
mov
xor
adc
jle
mov
outsl
push
out
jae
or
push
push
cmp
sub
sbb
std
adc
test
loopne
inc
sbbb
adc
hlt
or
push
cltd
jmp
mov
sbb
mov
sub
fwait
jle
push
std
dec
inc
test
dec
jp
sahf
or
pusha
lods
notb
js
sbb
outsb
imul
das
out
add
fsubl
mov
jmp
xor
push
rclb
aaa
cmp
fmuls
mov
jle
ss
mov
mov
idiv
rorl
pop
dec
and
lds
jo
cmpb
dec
ljmp
nop
mov
sbb
mov
jecxz
jo
adc
movsl
push
mov
pop
push
out
push
loope
psubusw
push
xor
test
in
pop
sub
je
icebp
lock
jg
das
test
mov
push
mov
int
push
les
outsl
cmp
cmp
xchg
mov
inc
sbb
xchg
pop
push
ljmp
mov
mov
into
cltd
das
sbb
ss
mov
daa
orl
push
mov
js
push
sub
push
sysret
mov
fadd
jg
push
xchg
cld
testb
and
cmp
rep
mov
nop
movsb
mov
out
xlat
xlat
pop
inc
sbb
inc
adc
inc
jb
loopne
test
adc
pop
pop
push
jns
cmp
jl
imul
lret
insl
adc
cmpsl
loop
daa
shl
dec
xor
subl
fmull
xchg
cmpsl
hlt
xchg
loop
mov
push
fildll
jmp
call
mov
sub
sub
repnz
test
cmpsb
jl
shl
subl
aam
cmc
inc
add
fcomps
rcll
xlat
inc
xor
sub
syscall
ret
mov
xchg
jle
mov
lock
mov
insb
xor
fwait
xchg
mov
mov
pop
mov
mov
inc
outsb
lahf
sub
inc
push
push
mov
stos
mov
mov
or
jbe
movsl
jp,pn
inc
pop
pop
scas
ljmp
lods
pusha
pop
dec
or
xor
mov
inc
lock
les
into
adc
sub
dec
popf
or
es
xor
imul
shl
pop
or
cmp
roll
inc
xor
push
faddl
and
lcall
add
or
movsb
into
out
sub
add
in
lret
stos
ret
xlat
pop
xor
cmp
aad
jle
fwait
jb
xor
andb
imul
aam
std
mov
sahf
push
lret
inc
xor
test
cwtl
push
dec
jle
inc
imul
or
sarl
dec
xchg
je
out
adc
mov
add
fcoms
call
and
std
and
icebp
cmp
xchg
sarl
ret
shll
mov
notl
cmp
iret
icebp
jle
cmpsb
lahf
sbb
xchg
insb
cltd
shl
sub
or
adc
lss
test
add
adc
mov
adc
clc
xchg
pop
ret
push
cs
dec
lods
mov
fcmovne
sbb
cltd
scas
icebp
fs
roll
adc
mov
and
add
mov
jl
je
dec
lods
mov
mov
in
jmp
pop
add
in
testl
or
cmp
add
or
mov
subl
adc
test
cltd
jnp
jl
test
mov
sub
push
aam
push
das
test
lcall
popf
mov
xchg
push
xor
xor
jo
sbb
lcall
add
dec
fsts
dec
sbb
idivl
push
loope
pop
mov
lds
pop
sbb
test
sub
pop
xchg
mov
sub
pop
test
das
and
lock
popf
lahf
iret
pop
insb
ret
lods
test
jb
popw
ljmp
mov
ja
pop
xor
int3
xchg
das
in
dec
sbb
xchg
addr16
scas
pop
inc
sti
dec
pop
mov
loope
push
mov
test
fidivl
cmp
pop
nop
fidivrl
xor
mov
popf
sbb
add
int3
outsb
mov
mov
or
repnz
pop
add
into
push
repz
shlb
jp
mov
fiadds
or
mov
push
xorl
outsb
jne
enter
push
cmpsb
pop
ja
scas
pop
inc
int
ret
lret
incb
arpl
stos
and
cmp
push
cmp
pop
sgdtl
inc
push
test
shl
mov
stos
cmpsl
push
mov
addl
xchg
add
pop
lods
dec
sub
cmp
pop
mov
cmp
mov
sti
jno
aam
xchg
scas
cmp
jb
fstpt
pop
enter
sbb
insb
xlat
inc
add
test
xor
dec
pop
ret
push
xchg
xor
dec
push
mull
mov
sbb
jae
loopne
add
xchg
jle
enter
xor
pushf
rcrl
and
mov
inc
push
leave
into
sub
test
inc
adc
xlat
mov
sbb
rcrb
xor
sar
daa
xor
inc
adc
and
push
in
cmp
pop
imul
mov
fbld
inc
mov
xchg
das
setne
sub
sub
shlb
xor
in
pop
jmp
mov
mov
fisttps
out
mov
jb
xchg
cltd
pop
adc
inc
cmpsl
test
pop
ds
xchg
inc
sbb
mov
imul
fisttps
shll
dec
jl
dec
inc
roll
rcrb
inc
pop
xchg
pop
insl
jp
sbb
jae
bound
xor
sar
sbb
adc
insl
pop
ret
xor
pop
mull
xchg
lods
cmp
daa
orl
mov
hlt
inc
sbb
stc
repnz
mov
sub
orb
pop
and
or
mov
and
dec
jmp
pusha
xchg
pop
sysexit
adc
dec
mov
xchg
push
cltd
ret
mov
cmpb
es
xchg
subb
jns
test
test
mov
mov
mov
movl
sbb
sti
jo
enter
pop
das
xor
divb
cmpsb
xchg
add
add
jne
sbb
mov
pop
repnz
mov
add
add
sarl
and
mov
push
test
inc
dec
jl
jns
push
mov
cli
js
sahf
sbb
jp
cmp
das
xchg
cmp
dec
out
xchg
xchg
mov
mov
mov
sahf
inc
ret
push
jae
les
movsl
aaa
aas
enter
cmp
outsb
pop
jno
sti
in
adc
lret
cmpl
lret
inc
into
mov
out
addr16
xchg
sub
repz
je
sbb
xchg
test
outsl
push
smsw
imul
sti
arpl
sbb
je
das
fadd
fiadds
in
xchg
std
fnstsw
push
cmp
xchg
mov
stos
gs
addb
mov
xchg
stos
pop
das
push
cmpsl
push
loopne
enter
mov
pop
ljmp
mov
pop
insb
call
mov
shlb
ficoms
sub
cmpsb
repz
les
nop
cli
sub
pop
mov
lret
flds
mov
mov
cmp
fwait
sub
stos
inc
sbb
jns
inc
xor
dec
repz
stc
data16
stos
xlat
jmp
inc
sub
pusha
cs
inc
push
lcall
mov
sarb
mov
add
sti
cmp
xchg
aad
enter
and
push
cmpb
aaa
dec
jno
cmc
cmp
xor
out
cmc
lret
mov
add
mov
pop
mov
cmp
repnz
decl
js
dec
test
pop
jno
push
pop
cltd
andb
testl
stos
cmpl
enter
in
iret
ja
xchg
push
adc
pop
pop
sbb
mov
fwait
mov
aaa
lret
mov
in
popa
inc
daa
ret
cltd
mov
jg
dec
xchg
test
cld
push
dec
loope
enter
jle
mov
icebp
xchg
les
inc
ret
mov
mov
cld
mov
and
sub
stos
and
ss
cmp
sbb
cmp
enter
pop
popa
repz
adc
bound
jo
stc
mov
nop
cmp
ds
scas
imul
push
insb
fbstp
lock
mov
jg
ret
cmpsb
xchg
cmp
mov
lcall
shll
clc
je
sbb
push
test
or
add
add
jno
dec
clc
xchg
dec
lock
dec
stos
fildll
insb
pop
adc
int
imul
add
and
lds
leave
inc
loop
mov
adc
icebp
sub
fucomp
sbb
mov
add
fldt
clc
bnd
loop
sbb
jns
loopne
and
shlb
ficomps
pop
pop
arpl
push
dec
sub
xchg
pushf
std
cmp
jno
dec
inc
scas
outsb
stos
movsl
popa
adcl
mov
jecxz
adc
push
ret
js
imul
push
xor
and
aas
mov
or
mov
sub
inc
mov
cmp
int3
dec
mov
adc
clc
mov
lods
add
fwait
sbb
aam
std
add
sahf
shll
mov
inc
xchg
cltd
cld
jmp
jge
mov
cmp
aaa
and
aad
xorl
jp
insl
out
jae
sbb
rorb
ds
push
das
fnstcw
mov
mov
jmp
jae
add
loopne
in
xchg
pop
iret
lods
repz
xchg
push
adc
ret
mov
das
call
das
popf
mov
pop
addr16
push
pop
inc
jno
inc
adc
hlt
popaw
pop
lcall
push
push
scas
shlb
popa
jb
sbb
sahf
pop
mov
jl
nop
push
das
popf
add
orb
fdivs
mov
xor
push
or
pop
subl
jne
xchg
cmovle
sbb
pushf
mov
jle
push
jo
mov
outsb
mov
loopne
add
cmp
clc
xor
loop
in
pushf
mov
inc
push
jb,pn
fisubl
mov
loopne
lcall
movsb
mov
sbb
aaa
and
xchg
jp
or
or
jl
mov
mov
in
in
cmpsl
sbb
sbb
sub
sub
mov
int3
cmpsb
add
inc
out
push
sub
lret
mov
xchg
cmpsb
dec
or
les
jle
outsb
repz
fisubl
xchg
fnstcw
sti
jle
popa
and
dec
call
inc
das
aam
sub
cmp
outsl
pop
cmc
loope
xchg
stos
inc
xor
fs
mov
jecxz
cmp
popf
call
shll
adc
les
jmp
mov
push
mov
sti
fwait
lret
hlt
mov
inc
rorb
gs
mov
insl
jl
push
cmp
aad
inc
pop
adc
jae
push
sbb
mov
test
jp
out
mov
dec
addr16
cwtl
jmp
cmc
fbstp
xchg
add
outsb
jle
mov
add
out
stos
lods
mov
and
push
xchg
xchg
inc
jns
sbbb
dec
mov
lea
xchg
fisttps
jae
mov
mov
cmp
mov
std
stc
aaa
movsb
inc
adc
stc
dec
stos
jae
and
fwait
mov
push
and
inc
inc
mov
test
xor
lret
loope
or
add
lcall
scas
scas
xchg
and
mov
jb
int3
sub
cs
leave
aas
ret
aam
sub
mov
in
mov
jge
rorl
xchg
pop
push
notrack
rorb
popf
sub
push
mov
stos
stos
lds
lods
adc
xchg
movsl
shlb
sbb
dec
jle
inc
adc
sbb
nop
dec
mov
sbb
dec
insl
jmp
cltd
inc
jbe
xor
fistpll
mov
icebp
xor
mov
inc
add
movsb
cmp
jno
test
ret
pop
clc
aad
xor
and
push
xlat
sub
xchg
ja
push
stc
shrl
mov
sbb
in
inc
iret
xchg
add
jno
cmp
nop
jnp
mov
mov
mov
data16
xchg
and
shlb
test
sbb
arpl
into
rcrb
pop
push
fisubrl
sarb
shl
sbb
pop
push
movsb
add
cmp
ss
cmpsb
les
jo
push
iret
adc
pop
jp
adc
arpl
ret
sti
xchg
daa
sbb
inc
ret
daa
scas
dec
pop
int
xchg
aam
dec
or
test
push
mov
movsb
dec
aas
movsb
arpl
mov
add
push
lret
push
loope
pop
int3
es
ret
lret
in
aaa
outsb
fdivrl
aas
sub
scas
and
lds
mov
xchg
lret
inc
mov
cmp
push
push
imul
loope
std
int3
push
cmp
or
xchg
or
imul
mov
leave
and
jmp
daa
add
into
push
popf
int3
mov
mov
pop
repnz
mov
xchg
sub
mov
sti
jge
cmp
xchg
sub
sub
jge
dec
mov
pop
mov
test
fimull
les
dec
jb
shlb
mov
mov
xchg
push
aad
pop
mov
and
out
fmul
popl
adc
inc
jge
mov
jg
cmp
ds
js
cmp
inc
ret
stos
jg
test
cmp
movsb
popa
or
pop
dec
ljmp
data16
pushf
es
cs
sbb
mov
inc
cmp
xchg
dec
dec
das
pop
xchg
in
dec
leave
iret
das
dec
jb
js
cmp
cld
xchg
mov
mov
add
cmp
pop
loop
js
xchg
jg,pt
xor
dec
int
sub
int
sarl
cmpsl
andl
rol
fwait
jl
dec
jae
daa
or
add
movsb
xchg
mov
cmc
in
xchg
sub
inc
test
out
ror
and
adc
and
fstpl
pop
pop
jae
push
lahf
mov
scas
mov
movsb
iret
pop
aad
js
jne
leave
sbb
clc
or
push
mov
mov
inc
bound
cld
jb
cmp
or
mov
cmp
or
ds
mov
lea
test
cmp
stos
loope
mov
iret
lds
sarb
sbb
loopne
fs
jmp
or
cmp
test
int3
loopne
pushw
imull
adc
mov
out
xchg
adc
mov
enter
in
mov
filds
xchg
dec
and
fisubrl
arpl
inc
into
xlat
push
jmp
push
xor
cmp
popf
mov
mov
leave
push
adc
out
das
int3
add
xor
inc
jle
push
jmp
xor
xor
aas
fsub
aad
add
movsb
mov
fists
iret
lahf
dec
mov
cli
scas
scas
and
mov
inc
in
in
jnp
adcl
pop
push
push
test
dec
cmp
imul
iret
cs
es
movsl
add
dec
push
popf
jl
ret
inc
or
xchg
arpl
jae
pop
inc
int3
xor
jbe
push
jne
add
hlt
and
jmp
mov
cltd
cmp
inc
inc
jo
loop
fcmovnbe
jp
xchg
mov
dec
mov
mov
push
cmp
arpl
mov
fsubp
jle
arpl
aaa
pop
lods
jns
sub
int3
xor
das
rcll
scas
clc
xor
lcall
pop
lahf
arpl
cmc
mov
push
push
insl
sub
pop
xchg
and
push
xchg
imul
sti
call
push
mov
mov
xchg
icebp
fwait
popa
inc
jmp
xorl
ja
stos
arpl
in
jge
sub
popf
pop
mov
sub
sub
xor
cmpsl
andl
push
aas
repz
inc
pop
sbb
add
mov
scas
testl
xchg
movsb
repnz
mov
addr16
jmp
lock
mov
push
jl
inc
mov
sbb
and
xchg
add
push
cmc
mov
inc
leave
push
dec
mov
hlt
shll
scas
lea
and
mov
sbb
lret
sarl
movsl
jo
mov
or
ror
or
shlb
aaa
gs
fnstcw
pop
jbe
push
mov
test
pop
movsb
das
sahf
cmp
out
jns
push
or
add
mov
mov
adc
mov
mov
inc
push
add
sar
cmp
lea
repz
sbb
in
aam
mov
pusha
dec
mov
test
xor
mov
push
cmp
lcall
rdtsc
ss
imulb
iret
cli
insb
shll
rolb
decb
dec
or
adc
stos
inc
lods
cwtl
adc
and
popf
xchg
imul
cmp
jp
push
mov
test
orb
dec
mov
dec
fstpt
lret
aad
pop
enter
leave
jecxz
mov
imul
inc
test
cmpsl
and
jns
jmp
xor
cmpsl
icebp
xorl
fldcw
sub
stc
push
jo
roll
or
shrl
adc
push
lock
nop
and
mov
mov
dec
xor
cld
negl
jns
js
sbb
ret
ss
addb
fiaddl
mov
push
loope
int3
cmpsl
sahf
dec
in
popf
add
jg
jmp
mov
cli
sub
add
pusha
jne
adc
pop
jne
inc
mov
cmpsl
cmp
scas
sbb
mov
in
jne
dec
popa
iret
repz
jo
adc
push
test
cs
enter
jo
into
mov
cmp
push
daa
dec
aad
pusha
push
or
push
and
push
loopne
das
cmp
inc
test
call
xor
mov
xor
lock
cltd
pop
shl
pop
and
aad
nop
cmp
jb
mov
stc
xchg
stc
sti
hlt
cmp
pop
rcrl
fisttps
push
pusha
add
mov
cs
add
pop
ret
adc
lock
xchg
mov
and
inc
cli
xor
sbb
or
inc
scas
bound
xor
test
fdivp
lret
ja
ljmp
cmpsl
xchg
push
mov
clc
pop
adc
xchg
sbb
add
mov
andl
rcll
pop
jnp
push
jb
inc
dec
sbbl
aad
fistps
scas
and
fidivs
and
xor
repz
cmp
jnp
movsl
push
jmp
dec
mov
xlat
loop
adc
adc
lods
xchg
inc
inc
insl
xor
sub
mov
stc
fimuls
mov
std
arpl
loope
leave
adc
xor
jmp
xorl
fcomi
loop
dec
lret
xor
sbb
adc
jo
xchg
sbb
ret
lea
or
inc
mov
xchg
dec
jecxz
adc
xchg
int3
xor
stc
inc
pushf
outsb
jno
shl
jge
inc
or
ficoms
cmp
cmp
xchg
mov
inc
int3
lods
insb
xlat
cltd
sub
mov
jnp
sub
aam
add
shl
lret
dec
dec
adc
push
inc
fistpl
icebp
jg
movsl
adc
mov
pop
loopne
out
inc
fs
iret
jnp
cwtl
loop
rorb
push
jle
outsb
pop
aam
orl
data16
int
xchg
push
or
add
nop
lret
push
lds
push
add
int
add
ret
fcmovu
sbb
jbe
sub
mov
test
pop
adc
fsubl
jmp
adc
xor
std
or
fs
xchg
sbb
or
roll
test
xchg
xorl
andb
outsb
fcoms
cld
mov
bound
dec
repnz
dec
sbb
lods
das
pop
or
shlb
xorl
imul
mov
sbb
in
ret
mov
imul
pushf
jbe
in
pop
xorb
mov
inc
push
and
cwtl
js
xchg
stos
mov
shrl
enter
flds
std
or
aad
push
dec
jmp
adc
xor
jmp
popa
jge
mov
jge
js
js
inc
jl
pop
les
in
stos
xchg
add
push
test
xchg
sub
mov
fisubs
cmp
rclb
ja
cli
add
or
es
sub
xor
ja
in
lods
sub
cmp
pop
fbstp
cmp
int
mov
cmp
mov
aam
adc
jae
add
mov
rorb
sub
sub
xor
mov
jo
into
out
ret
lods
fdivs
fsubs
fnstenv
inc
fimuls
test
cmpsl
adc
mov
mov
push
jmp
iret
fnstenv
add
fcoml
pop
daa
bound
fistpl
test
pop
push
mov
pop
incb
mov
adc
stos
xor
mov
das
dec
mov
into
imull
filds
mov
hlt
xchg
inc
nop
xor
xchg
cmpb
clc
test
and
inc
xor
clc
xchg
scas
loop
aad
cld
push
subb
lods
enter
cmpsl
faddl
pop
xchg
sahf
addr16
popa
lds
cs
in
fs
mov
outsb
push
std
dec
sti
sbb
into
loope
adc
mov
outsb
daa
les
js
push
int
or
fwait
js
jo
sub
mov
jp
dec
divb
and
push
mov
push
ljmp
pop
les
sti
or
sbb
sbb
orb
popf
imul
add
push
jl
jecxz
test
je
cmp
mov
jp
or
rorl
idivl
dec
lds
inc
aas
or
push
in
push
mov
mov
xchg
jne
inc
into
sti
mov
popa
sbbl
add
in
stc
or
xor
push
ficoms
insl
mov
mov
cmp
in
inc
and
scas
stos
push
lahf
ret
lret
mov
inc
outsl
jg
push
ljmp
sbb
pushf
push
push
or
push
cmpsl
cli
cvttps2pi
dec
insb
mov
push
adc
clc
fcoms
xchg
push
sub
mov
out
mov
pop
adc
call
push
ds
jae
pop
test
es
mov
fisubrs
and
xchg
dec
xchg
jb
fimull
dec
dec
and
mov
mov
adc
sbb
scas
cwtl
adc
lret
scas
jg
repnz
add
dec
es
inc
movsb
mov
lahf
daa
mov
pop
inc
rolb
fdivs
sti
inc
pop
add
shrl
aaa
dec
sub
mov
fdivrs
or
repnz
lret
xchg
es
loop
aad
cs
out
cli
es
lds
adc
mov
insb
mov
jnp
test
add
add
cmp
and
xchg
mov
dec
test
or
ds
pushf
sub
cs
call
push
mov
dec
bound
fucom
fnstcw
test
inc
dec
jb
and
fs
hlt
int3
cltd
pop
and
pop
xchg
out
lret
cmp
dec
jmp
popa
cmpsb
rclb
jne
dec
cmpsl
mov
movsb
ret
xchg
fisubs
and
jo
hlt
pop
leave
jle
popa
cmpsb
shr
sbb
outsb
push
fdivl
jge
cmp
xchg
imul
inc
xchg
cmp
or
pop
mov
stos
cmc
and
inc
push
out
loop
mov
xchg
jb
jne
pop
sahf
dec
outsl
repnz
push
push
cmp
orb
xor
pop
sub
out
dec
cld
notl
das
mov
inc
fld
and
adc
mov
push
je
cld
sahf
into
stos
imul
arpl
fcompl
stos
push
jbe
push
dec
sbb
push
sub
pop
cmp
test
imul
push
jo
push
out
cli
inc
xchg
out
lret
mov
aas
sar
xor
and
xor
mov
pusha
dec
adcl
iret
mov
jno
sub
xor
sub
aam
das
mov
iret
jge
cmp
and
clc
es
cli
cmp
push
xchg
cmpsb
js
or
adc
mov
popf
loop
sbb
cmp
dec
xchg
insl
and
sti
mov
dec
mov
mov
cwtl
jnp
inc
inc
js
pop
in
mov
fstl
mov
ljmp
and
mov
bound
stos
fs
mov
je
sub
enter
cltd
lea
aad
in
jnp
xchg
push
in
shr
xchg
nop
imul
loop
aaa
rcrb
dec
iret
int3
or
jle
mov
negl
fwait
hlt
jns
and
sub
aas
hlt
stos
xchg
ss
dec
cs
pop
sub
shl
cltd
ret
jae
ret
pop
add
or
add
stos
add
add
push
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
or
add
xor
add
add
or
add
jo
jb
jae
