adc
pushf
pusha
movb
lea
jmp
call
jle
je
leave
or
or
jnp
test
mov
cmp
mov
or
xor
jg
or
add
dec
mov
pop
xor
pop
inc
lods
push
mov
icebp
lods
int
pop
les
xchg
pop
sarb
inc
xchg
mov
js
sbb
xor
or
jg
push
repnz
xchg
fsubrs
sbb
mov
mov
dec
inc
adc
mov
mov
aaa
push
clc
cmp
test
sbb
dec
int
outsb
cld
mov
sar
or
mov
jo
jb
cmp
sub
movl
mov
call
cmp
or
pushf
lea
jne
bswap
rcl
mov
bt
call
into
fdivs
cmp
cmp
mov
lods
xchg
lret
inc
cmp
mov
sbb
push
sbbl
jl
ljmp
sarb
cmpsb
and
sub
inc
inc
dec
pop
jne
cmp
fidivs
lea
pop
mov
jp
mov
adc
stc
pop
inc
rol
nop
addl
fistpl
in
push
shlb
and
inc
xchg
or
clc
push
xchg
xchg
and
push
add
loope
out
cltd
cmp
dec
jp
inc
jne
gs
cmp
faddl
xchg
loop
test
add
bound
repnz
jge
divb
push
in
pushf
push
cmp
push
xor
inc
mov
mov
xor
and
push
mov
rclb
or
sahf
adc
repnz
and
stc
fwait
lret
dec
decb
in
cmp
pusha
pop
adc
aas
pop
cli
outsl
das
pop
cmp
mov
out
dec
inc
push
shlb
push
lea
call
jmp
cmc
clc
sub
bt
push
cmp
movb
lea
ja
stc
imul
push
pusha
add
pushf
movb
lea
jmp
pushl
popl
mov
pushl
ret
mov
pushf
pusha
pushf
lea
jmp
mov
xchg
pushl
pushf
call
add
cmc
mov
loope
sub
add
mov
gs
mov
and
jmp
or
ss
std
fstl
rolb
jmp
mov
mov
inc
les
test
movsb
sbb
xchg
pop
xchg
lahf
jp
lds
mov
sbb
in
shrb
and
jmp
lods
fiadds
sbb
jae
push
das
mov
lea
jae
pusha
jmp
cmc
cmp
cmp
add
pushf
pushl
jmp
pop
and
cmpsl
pop
orb
cmp
fnstsw
pop
xchg
adc
sbb
xor
ds
pop
int
scas
xor
mov
inc
mov
sbb
push
xor
out
jp
and
xchg
mov
mov
dec
lret
sub
icebp
daa
cld
mov
sub
jl
jp
into
and
push
add
arpl
jg
pop
ljmp
mov
in
cli
int
insl
mov
testb
xlat
adc
les
fsts
shlb
xchg
cmp
jmp
lea
jae
bswap
mov
and
bt
jmp
mov
scas
out
icebp
popf
ljmp
or
divl
ds
ja
and
lods
or
sub
pop
inc
push
push
arpl
arpl
jg
xor
sub
lea
adc
gs
shlb
mov
call
hlt
into
jp
iret
or
loope
ss
pop
dec
gs
in
cltd
shlb
jmp
push
mov
add
popa
jnp
popf
ret
sbb
lods
lcall
dec
push
xchg
out
gs
dec
xor
mov
leave
pop
pop
inc
or
ss
sub
cwtl
xchg
xchg
sbb
shlb
adc
rorb
pusha
loop
add
loope
jge
mov
ret
nop
inc
mov
inc
xor
jp
fidivs
sub
aas
sbb
je
push
mov
cmp
push
inc
insl
mov
jnp
lret
mov
dec
sbbl
mov
out
int
imul
icebp
cmpsl
fldl
sbb
jmp
popf
pop
iret
dec
mov
shlb
pop
pop
push
iret
leave
stc
je
bound
dec
mov
dec
js
and
stc
lock
push
aaa
cltd
sub
aam
popa
or
add
ja
in
mov
stc
push
push
test
jae
lds
sbb
push
scas
cmp
xchg
add
mov
pushl
cmp
pop
sti
std
xor
mov
aad
test
hlt
hlt
xchg
or
adc
pop
outsb
roll
mov
pop
add
ljmp
push
shlb
inc
pusha
pushf
mov
movzbw
call
add
repz
xor
mov
mov
push
sbbl
dec
xor
pop
xor
xor
inc
sahf
rcll
repz
xlat
sbb
xchg
mov
inc
test
in
lods
int
mov
cmpsb
rclb
sub
xor
pop
push
test
and
ret
and
jge
fcompl
adc
lods
outsl
inc
outsb
aaa
or
enter
mov
mov
enter
push
mov
mov
jp
sbb
dec
stos
push
shlb
fmull
xchg
push
add
pusha
call
stc
bt
add
push
movb
cmc
shr
call
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
push
xchg
pop
or
out
es
imul
les
pop
cmc
sub
in
popf
cltd
cs
scas
mov
add
out
aad
neg
cltd
pop
call
mov
leave
test
imull
inc
jmp
aaa
test
jecxz
int3
mov
les
jns
sub
mov
sarl
orl
and
xchg
and
push
inc
dec
mov
inc
test
jg
jb
scas
sbbb
adc
popa
push
shlb
shr
clc
add
lea
jbe
xor
add
shl
mov
add
shr
push
or
add
pusha
mov
dec
sete
lea
add
shl
shl
movl
movsbl
clc
stc
shr
mov
add
pusha
test
cmp
call
jmp
imul
imul
pop
movsb
mov
lods
sbb
outsl
lods
or
and
or
out
mov
test
cmc
mov
mov
xor
mov
fsubl
bound
xchg
int
mov
mov
arpl
cmp
sub
sub
mov
or
repz
and
push
pusha
enter
imul
mov
fisubs
mov
fists
xor
ret
xor
sarb
adc
mov
fimull
cltd
push
push
subb
in
dec
cmpsb
push
cmpsl
testl
sub
adc
mov
popa
jle
sub
aas
loopne
push
sub
ds
jmp
test
cmp
jmp
cmp
sahf
enter
lret
out
pop
lcall
mulps
pusha
pusha
add
pop
cwtl
push
ret
out
mov
ljmp
mov
xor
jo
dec
cmpsb
sub
inc
and
icebp
mov
xchg
add
icebp
sub
pop
or
xor
insl
jp
add
mov
int3
les
push
cmpsl
enter
dec
std
push
push
mov
sub
ds
lea
call
pusha
lea
jae
xchg
dec
push
call
movsb
in
fnsetpm(287
call
es
push
mov
and
jle
test
scas
mov
xor
mov
test
xor
pushl
lcall
inc
xlat
call
xor
les
test
shll
cmc
pop
cmp
arpl
xchg
stc
leave
mov
cmp
test
daa
stc
dec
fldenv
testb
jecxz
and
aad
mov
adc
xor
test
daa
cmp
or
adc
add
mov
xchg
ret
es
loop
dec
adc
jmp
pop
pop
fstps
cltd
adc
mov
ret
aas
jb
mov
je
cli
idivl
aaa
or
push
xor
fmul
cld
mov
jnp
inc
xchg
sbb
sbb
stos
or
mov
sbb
sub
mov
mov
dec
stos
xor
cltd
jne
pop
add
adc
out
shr
aaa
dec
cmp
add
in
shll
into
mov
lods
push
add
int3
addr16
andb
push
movq
enter
imul
vpunpckhwd
jle
adc
test
in
in
mov
leave
mov
dec
sbb
or
mov
sahf
cmc
xchg
ss
and
or
bound
int3
cmp
fisubl
movsb
dec
std
push
in
dec
ficoml
into
fwait
jg
mov
out
dec
movsl
daa
cmp
mov
xchg
movsb
ja
mov
std
pop
mov
lock
xchg
and
scas
call
sbb
adc
xor
out
pop
or
sarb
shr
popa
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
cmpb
pushf
mov
movw
lea
jne
pusha
jmp
lea
jno
push
jmp
shlb
xlat
push
cmp
dec
mov
lahf
insb
sub
les
mov
fldt
pop
push
inc
or
shr
movnti
xor
sbb
aas
movl
pop
cld
inc
sbb
xchg
inc
imull
adc
pushf
pop
dec
jge
mov
xorb
sarb
fs
jmp
jmp
push
movl
pushf
movl
pushf
lea
jmp
movsl
faddl
mov
pop
mov
inc
sbb
dec
dec
arpl
out
stc
jg
loope
insl
test
rorb
adc
pop
pop
push
push
std
scas
das
pop
or
add
lods
and
jb
pop
inc
das
insl
cmp
sub
scas
cwtl
outsb
cli
call
cmp
sub
in
imulb
mov
dec
xchg
dec
ficoml
stc
lods
loop
xor
or
mov
xor
aad
mov
xchg
xchg
pop
xor
push
imul
stc
dec
cmp
lods
test
jb
and
push
out
dec
xlat
push
rorl
fsts
jecxz
cmc
inc
pop
push
xchg
pop
aaa
cld
cmpb
imul
lds
insb
lea
push
sarb
add
add
pushf
mov
cwtl
jmp
mov
pushf
pushl
push
inc
call
xor
jp
jns
aam
lods
stos
pop
je
lahf
call
mov
pshufw
mov
inc
test
jae
test
out
adc
adcl
test
jae
stc
loop
push
lods
push
mov
faddl
mov
imul
cmp
loope
iret
lcall
cld
push
ds
mov
adcb
sarb
stos
stc
bt
add
jmp
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
cmc
pushf
pusha
add
dec
and
jmp
mov
stc
test
jmp
movl
movb
pushf
pushl
popl
pushf
pushl
ret
dec
dec
mov
jle
int
hlt
loope
sub
adc
and
mov
in
mov
out
sahf
popf
mov
inc
mov
add
and
les
pop
outsb
stos
insl
mov
mov
xor
adc
add
out
push
das
sbb
sub
push
and
imul
mov
and
fdivp
inc
in
cmpsb
fimull
iret
je
loope
cli
sub
cmp
les
and
pop
mov
shrl
addb
in
jl
mov
push
inc
dec
pop
cltd
pop
mov
repnz
mov
addr16
movsl
push
pop
inc
mov
mov
mov
out
or
popa
xchg
pop
movsb
fisttps
cmp
adc
lret
add
aaa
stc
cmpsl
popa
jmp
pushf
mov
and
dec
int
jns
sub
rolb
jbe
in
cmc
add
jae
xor
insb
sub
or
ret
fsts
push
in
icebp
xor
push
xor
popf
dec
push
nop
add
call
jg
xchg
idiv
mov
movsbw
aaa
sub
rcr
bswap
push
mov
and
push
dec
movzbw
shld
push
shr
cmc
aad
xor
lea
cwtl
movsbw
pusha
lea
push
pusha
mov
pushf
mov
pushf
pop
movzbw
pushf
mov
pushl
cwtl
cwtl
not
lea
jmp
mov
sub
adc
adc
jg
sub
sarb
loope
adc
icebp
mov
jo
daa
xchg
ret
scas
rcr
lock
xchg
mov
xchg
pusha
in
dec
and
lret
es
arpl
movb
loop
rolb
sub
xchg
jecxz
or
mov
cmp
jae
ss
inc
dec
mov
js
adc
and
lcall
mov
push
test
or
insb
mov
insb
in
addr16
dec
jo
adc
sub
xchg
fisubrl
push
hlt
lds
orb
movb
cmpsb
mov
aam
cs
out
ror
cmp
movsl
sar
rep
stc
mov
lock
jg
mov
pop
mov
fmuls
dec
jmp
in
fisttpll
test
mov
js
movsb
mov
movsl
jne
movsl
out
mov
sbbb
pusha
push
pushf
call
jmp
je
ficoml
bound
insb
mov
jns
rcr
or
mov
xor
push
mov
fsubs
jb
add
mov
nop
push
jg
lret
into
call
cmp
ss
cltd
dec
xchg
inc
mov
mov
or
or
mov
sbb
cmp
xor
stos
jl
in
wrmsr
icebp
push
xchg
jecxz
rolb
inc
js
je
jb
arpl
jae
inc
inc
push
inc
push
dec
xor
cs
insb
add
mov
cmp
add
adc
cmp
add
pusha
pusha
push
pushf
dec
call
fisttps
jne
mov
cs
out
xchg
nop
mov
lea
cld
test
jle
inc
pop
loopne
popa
sbb
push
jno
or
mov
fcomip
inc
in
or
push
iret
jnp
cltd
ret
enter
insl
mov
pop
fsub
popa
lahf
cmp
push
jmp
sarb
ror
sub
mov
cmp
out
std
je
or
jne
in
enter
out
sub
ds
shlb
and
mov
icebp
sub
fisubl
jp
andl
add
and
gs
loop
rolb
cmc
ror
lea
jo
cmc
cmc
add
cmp
shr
jmp
pop
bswap
mov
pop
movzbw
setg
pop
pusha
mov
pushf
not
pop
pop
pushf
pushl
ret
jb
scas
call
fwait
jg
sti
clc
ss
lods
dec
push
mov
cltd
sub
add
adc
cmp
fisubrs
pusha
imul
js
mov
shll
xchg
mov
mov
push
into
fstpl
enter
popa
in
and
cmp
lods
or
in
push
adc
push
sub
fdivl
lret
leave
jae
enter
mov
call
fisttps
pushf
jg
dec
ss
xor
xchg
push
out
leave
pop
lods
int
out
push
rolb
add
test
xchg
btr
shrd
dec
mov
stc
sub
jmp
movl
call
int3
cld
out
in
loop
cmp
dec
mov
repz
jecxz
movzbw
rol
inc
mov
push
and
cmp
call
call
call
hlt
cs
and
or
fs
cli
scas
sub
pop
gs
ss
out
inc
mov
cmpsb
push
cmp
ret
stc
nop
testb
clc
icebp
and
lcall
hlt
lods
mov
shl
nop
stc
movsb
insl
ret
gs
xlat
jecxz
sub
xor
in
adc
clc
cmp
push
loope
ja
or
xchg
ret
in
and
into
mov
xchg
dec
lock
jbe
insl
pop
cs
pop
inc
xchg
andb
test
jno
bsf
mov
outsl
pushl
mov
push
rolb
jg
shr
inc
addl
sbb
jnp
mov
mov
stc
mov
adcb
sub
and
jae
push
adc
cmpb
mov
adc
push
adc
push
pop
leave
sbb
jnp
pushf
popa
xor
dec
jmp
xchg
fistpll
push
rolb
or
inc
and
push
mov
push
jmp
inc
dec
inc
lea
setae
dec
jo
inc
neg
dec
xchg
sbb
mov
inc
call
call
mov
popf
jns
arpl
ds
call
shll
fidivs
and
adc
popl
mov
shrb
sti
repz
push
push
sbb
adc
or
scas
dec
iret
mov
sub
sti
jb
add
in
sahf
or
jne
jnp
mov
aas
push
xor
push
rolb
sub
sbb
add
call
pop
sti
test
mov
in
stos
cmp
dec
test
and
lods
ss
mov
insl
xchg
sbb
call
pop
aas
lahf
imul
pop
fwait
pop
and
xchg
sar
inc
mov
lods
imul
sub
inc
ss
int3
dec
ljmp
mov
xor
or
sub
icebp
adcl
subl
andl
xorb
cld
out
ja
jmp
dec
int
mov
gs
ja
xchg
pop
mov
lods
fldpi
add
or
mov
cld
dec
mov
adc
xor
mov
in
cmc
lea
aam
xchg
fucomp
ficoml
out
lea
jne
jbe,pt
xchg
and
inc
addr16
jmp
rolb
lcall
ret
outsb
popa
sahf
lret
sbb
inc
je
popf
push
sti
shlb
movl
push
pop
pop
cmp
inc
mov
inc
sbb
sbb
call
and
fldt
les
sub
push
mov
adc
data16
mov
shll
lea
es
clc
iret
adc
push
cmp
popa
inc
mov
mov
cmp
mov
call
add
add
out
adc
add
in
add
add
add
mov
adc
add
adcl
rorb
mov
mov
pusha
call
push
push
movl
pusha
push
pushf
call
testb
sbb
jno
pushf
test
bound
dec
lret
add
sahf
loop
lods
cltd
sbb
jo
aaa
xor
pop
mov
or
xadd
adcb
jle
insl
xchg
inc
xchg
aad
lret
inc
adc
popf
xchg
sbb
xchg
push
mov
out
aad
dec
cld
out
cmc
shl
jno
and
out
fnstcw
fwait
cmp
push
adc
pushf
cmp
push
jmp
repnz
sbb
xor
pop
cmpsb
dec
mov
inc
or
and
inc
mov
jmp
test
xchg
call
or
daa
jge
nop
xchg
cld
lods
push
rolb
xor
add
inc
cmp
sbb
mov
jne
mov
adc
mov
inc
fwait
inc
sbb
outsl
mov
dec
pop
cwtl
hlt
mov
lea
mov
xor
sub
pop
sbb
cmpsb
jo
sar
mov
jb
and
sti
pop
mov
icebp
xchg
inc
jecxz
es
cmp
and
jecxz
sub
ds
adc
fcoml
daa
push
rorb
and
test
add
pusha
push
mov
mov
mov
call
pop
pushf
pusha
jmp
in
inc
add
adc
pop
shll
mov
aas
jbe
jp
and
jb
mov
add
mov
test
cmp
or
xlat
sahf
cltd
ds
mov
xor
dec
out
sti
dec
mov
rorl
jle
fisttps
popa
or
xor
push
fstl
rorb
mov
or
jge
jno
jbe
mov
rorb
sub
pusha
jmp
or
mov
pushf
pusha
lea
jne
shld
shl
pushf
mov
cmc
or
jmp
pusha
lea
je
sete
sbb
sub
push
test
sub
bsr
bts
push
not
shr
jmp
shl
pop
enter
into
out
inc
and
fcmovnu
xchg
mov
xor
mov
mov
insb
stc
subb
sti
pop
lock
xchg
jae
out
stos
je
push
push
incl
dec
adc
jae
mov
or
testb
xor
in
sahf
add
roll
jne
push
andb
mov
cmpsl
push
rorb
nop
mov
xchg
dec
sahf
int3
cmp
int
daa
in
popf
aaa
call
mov
pop
mov
dec
cld
jo
fldl
cmpsb
push
cwtl
enter
lds
into
lods
movsl
lahf
ja
sarl
lret
jnp
mov
jp
cs
mov
into
cmp
pop
rcrb
cmp
adc
add
sar
filds
xchg
repz
push
push
enter
push
rorb
pop
cwtl
mov
cmc
shl
sahf
mov
add
pop
mov
scas
dec
mov
mov
xor
inc
je
je
sub
and
fwait
pop
mov
es
rorb
movsb
movzbw
mov
pushf
lea
jmp
lea
je
pusha
pusha
mov
lea
jmp
push
pushl
movl
pushl
mov
movw
push
lea
jmp
rol
lea
stc
mov
shld
setne
and
jmp
pusha
lea
je
call
movw
jmp
clc
test
cmc
shr
movb
call
insb
jnp
popa
push
mov
inc
xchg
inc
fisttpll
sbb
push
mov
sub
sahf
cmpsl
pop
jmp
pop
popf
xor
fwait
in
ret
pop
leave
inc
dec
mov
pop
insl
fisubrs
lock
mov
cmpsl
and
mov
xlat
xlat
cmp
clc
mov
jmp
push
lea
je
call
mov
push
pusha
mov
lea
jmp
mov
push
push
pusha
pushf
pushl
ret
movl
mov
push
lea
jmp
lret
add
mov
mov
nop
sbb
cmp
pop
xchg
push
push
in
enter
mov
loop,pn
stos
int
mov
cld
inc
inc
push
dec
cmpsb
mov
pop
xlat
pop
inc
xchg
ss
loopne,pn
jno
les
dec
ds
clc
test
jo
sahf
add
mov
xchg
adc
xchg
push
pop
cwtl
push
rorb
data16
xor
std
xor
pop
imul
loopne
ss
daa
mov
leave
dec
adc
ret
mov
repz
mov
clc
sahf
adc
cltd
rcrb
aas
mov
xor
imull
cwtl
dec
mov
jg,pn
or
cli
mov
and
mov
jl
shlb
mov
mov
and
neg
cmc
mov
pusha
cmp
mov
mov
bt
test
push
jmp
mov
not
mov
mov
pop
call
add
dec
outsl
arpl
inc
jb
add
dec
adc
add
mov
sub
cmc
iret
daa
mov
lea
jae
bt
jmp
ds
xor
imul
sbb
cmpsb
inc
inc
jge
out
inc
mov
lock
pop
outsl
jb
mov
xor
sbb
and
shl
ljmp
or
mov
inc
scas
movsb
fsub
xchg
stos
lahf
das
nop
cmpsl
pop
xchg
cwtl
movsl
jb
mov
enter
mov
loopne
sub
add
xchg
fadd
pop
int
xchg
add
xchg
mov
iret
imul
sub
mov
push
mov
movzbw
movsbw
mov
movl
call
xchg
ret
adc
add
xchg
adc
add
in
add
add
add
mov
adc
add
adcl
jno
in
xchg
mov
hlt
xchg
push
mov
popf
push
les
rcr
stos
cmp
nop
js
movsb
mov
or
mov
cmp
outsl
jl
sub
negb
in
out
loopne
out
xchg
int3
xchg
push
pushf
dec
leave
cmovae
cmpsl
imul
je
push
add
add
xor
lahf
jbe
repz
push
js
sub
call
andl
xor
and
pop
inc
fwait
sbb
into
mov
lock
adc
and
daa
notl
mov
cs
pop
imul
push
add
mov
xchg
aas
cltd
and
pop
fnsetpm(287
jo
cmp
lahf
aad
sbb
adc
pop
lods
add
adc
enter
inc
sub
xor
xor
cmc
add
loopne
clc
int
aam
aam
out
out
and
mov
jge
int
nop
sbb
pop
inc
jp
loopne
gs
pop
test
push
sbb
xchg
xchg
jmp
lea
jae
inc
not
inc
mov
dec
inc
pusha
jmp
repz
pushf
movl
pushf
pushl
call
push
scas
cmp
loopne
sub
jle
pop
push
ret
and
inc
xchg
jo
mov
shrb
or
jno
ja
adc
push
stos
jg
add
in
in
hlt
loope
sub
insb
mov
in
or
loopne
cmp
int3
add
iret
dec
shl
or
add
jmp
out
lret
adc
and
pop
pop
sbb
cli
sahf
rcrl
mov
movsb
mov
push
rorb
and
call
call
mov
movw
mov
push
push
pushf
mov
pushf
pushl
ret
pushl
mov
pushf
lea
ja
pushf
pushl
popl
pusha
mov
lea
call
adc
push
cmpsb
lcall
mov
aad
fbstp
mov
cmpsl
rorb
mov
cmp
icebp
adc
lock
xchg
movsb
fcmovnbe
lock
sub
out
rorb
add
mov
jge
js
and
pop
lea
clc
fsubrl
fcmovu
xchg
jbe
dec
push
int3
dec
lret
repnz
sarl
data16
xor
xchg
fdivrs
nop
fildll
popf
jmp
jmp
pushl
popl
movb
pushf
mov
pushl
pushl
ret
pusha
bswap
call
not
pushf
pushl
popl
lahf
jmp
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
lea
call
inc
pop
stos
mov
fdivp
sub
adc
cmc
and
adc
in
std
adc
bound
pop
xlat
fldcw
dec
call
and
mov
sarb
in
lds
dec
cmp
or
test
out
fisttps
sahf
sbb
or
ret
mov
adc
jecxz
and
push
mov
rclb
out
call
lret
ss
ja
stc
add
cmc
pusha
cld
test
pushw
popfw
push
pushf
push
call
push
push
movb
movb
movb
lea
jmp
mov
cmp
pushf
jmp
push
pushl
call
test
neg
pushf
clc
xor
call
pusha
call
popf
cpuid
nop
jmp
pushf
call
add
inc
gs
jb
arpl
fs
jae
add
mov
enter
mov
movsbw
movzbw
movzbw
lahf
lea
call
push
pushl
popl
pusha
pusha
pushf
pushl
ret
neg
stc
push
cmc
pushf
rol
stc
mov
stc
call
xchg
jne
sti
aaa
or
call
test
inc
nop
dec
cmp
ret
int3
fstl
or
xorl
movsl
inc
imul
and
outsb
xor
and
and
jnp
fdivl
inc
and
pushf
aam
and
sbb
mov
dec
xchg
test
pop
icebp
push
jmp
jle
sbb
adc
adc
or
enter
xchg
icebp
mov
mov
sarb
xchg
cmp
movl
pushf
movb
lea
jmp
daa
test
imul
inc
popa
lea
fdivl
movsb
mov
and
adc
xorb
xchg
arpl
std
lret
out
pop
ret
popa
cs
imul
lds
jg
rcll
cltd
jecxz
dec
jb
sbb
jle
pop
jl
xchg
aas
pushf
cmp
mov
sbb
loopne
and
pop
test
mov
push
cmp
cmc
sub
mov
cmpsl
fmuls
mov
add
pop
adc
pop
lock
inc
das
jle
jnp
add
sti
call
push
xor
xor
xchg
jbe
sti
rcl
imull
mov
filds
xor
jnp
pop
lcall
insl
roll
or
xor
inc
stc
popf
stc
sub
lock
xor
cmpsb
cs
add
les
movsl
jae
addb
xchg
scas
lds
cmp
xchg
sbb
xor
lds
and
xchg
mov
cmc
push
rclb
dec
cld
jmp
pushf
pushl
pushf
xchg
pushf
dec
pusha
mov
clc
shl
jmp
mov
xlat
out
jmp
cs
scas
lret
pop
xor
ficomps
inc
push
orb
into
adc
jmp
adc
ja
xor
sub
pop
dec
insl
pop
adc
sub
ret
jo
scas
adc
xchg
pop
dec
jg
stc
push
out
and
xlat
mov
adc
cmp
jno
push
pop
mov
cmp
xchg
add
jp
mov
pop
sbb
add
mov
lret
enter
xchg
inc
cmp
mov
test
push
data16
out
mov
cmc
in
push
rclb
cmc
sar
lahf
xchg
jnp
subb
les
mov
cltd
data16
mov
cld
arpl
ds
test
add
js
mov
and
xchg
push
push
test
or
mov
jne
mov
dec
push
sahf
aam
pop
movsb
xchg
push
pop
pop
push
mov
rclb
sbb
add
and
add
sub
call
pop
xlat
les
fnstcw
call
sub
inc
loope
cmpsl
je
cmp
mov
or
jle
lcall
cmp
add
mov
rcrl
ss
push
jno
pop
jge
mov
leave
xor
mov
inc
roll
stos
mov
loopne
jge
adc
inc
cmpsl
test
xor
and
pop
or
mov
mov
push
ljmp
int
inc
cmpb
insl
mov
cld
std
xor
pop
push
xchg
std
mov
je,pn
mov
sub
inc
and
imul
adc
je
pop
insb
daa
sbb
sbb
ljmp
jl
enter
mov
inc
sbb
pop
testl
inc
push
xor
mov
xchg
dec
cmp
push
rclb
lcall
fdivrp
cmp
xor
xor
or
scas
and
sub
lahf
push
call
mov
pop
inc
fs
mov
inc
jl
pusha
aam
jecxz
fdivl
and
cltd
push
imul
sbb
and
mov
and
jecxz
ja
daa
ljmp
out
insl
add
or
xchg
push
and
mov
jae
cmp
jno
and
lea
cs
mov
jp
fcomps
repz
shl
mov
stos
pushl
cwtl
ret
add
xor
ja
cmc
dec
repnz
cmp
mov
insb
inc
in
cmpsl
mov
add
out
xchg
jp
test
pop
int3
mov
movsb
ds
enter
in
stc
sti
sub
pop
call
fcoml
xchg
mov
mov
scas
test
shlb
cmpsl
mov
xchg
mov
xlat
scas
push
adc
mov
cmpb
adc
xchg
sahf
iret
punpckhwd
jne
in
clc
pop
mov
sub
xlat
cmp
sub
clc
mov
int3
fwait
out
aam
das
inc
repnz
push
fdivr
or
jg
sbb
mov
or
fisubrs
mov
cld
or
enter
inc
add
shlb
adc
scas
mov
mov
int
mov
in
ds
add
idivl
cmp
push
rclb
shr
in
jb
mov
sahf
fwait
mov
outsl
popf
fidivl
sti
xor
mov
cmp
cmp
pop
test
inc
and
mov
sub
daa
xor
repnz
mov
xor
jns
mov
out
vmread
push
push
xor
push
in
stos
jl
mov
data16
pop
addl
xchg
out
lret
ljmp
add
xor
pop
mov
jb
das
push
cmp
cmpb
xor
ds
stos
pusha
sub
iret
insl
sub
repz
add
sbb
mov
sbb
pusha
push
add
fldt
addb
push
cld
adc
mov
dec
mov
add
or
dec
fisttps
insl
or
sub
subb
subb
cld
or
or
sub
cltd
jb
shll
loopne
mov
push
fmull
lea
xchg
daa
inc
jnp
jne
push
fmuls
mov
daa
fwait
lret
jl
jne
gs
les
mov
xor
xlat
push
push
pop
lahf
int
ficompl
cwtl
push
sbb
mov
or
push
mov
inc
inc
xchg
sbb
iret
jb
cmpsl
mov
movsl
push
adc
fistps
mov
xchg
and
mov
test
push
rcrb
dec
sub
or
jl
pop
pop
push
xchg
pusha
jle
pop
adc
ds
je
and
popl
pop
sub
rolb
pop
sub
fistl
cs
dec
push
or
sbb
das
lea
jmp
mov
je
loope
push
push
insl
push
out
pop
inc
jmp
sti
in
push
mov
sarb
push
ljmp
in
ss
xor
stc
ss
out
xchg
mov
pop
xchg
adc
cmc
shl
out
push
bound
cmp
push
insl
mov
pop
subl
cli
dec
and
cmp
fmull
mov
or
inc
cmc
pop
test
cmp
repnz
cmpl
sarb
les
flds
ret
xorl
rcrb
push
sub
mov
mov
shr
test
mov
pusha
popa
in
inc
shll
push
push
mov
in
movsl
test
sahf
mov
xchg
loopne
iret
sub
mov
cs
dec
jle
sub
ret
mov
jp
repnz
lret
xor
push
mov
inc
cwtl
clc
sub
sti
std
or
rcrb
pushl
ret
call
pushl
mov
lea
jne
call
pusha
mov
adc
push
pushf
mov
lea
jmp
jmp
pushf
push
pusha
mov
movl
call
rol
cmc
mov
adc
bsr
shl
adc
add
lea
mov
pushf
pusha
mov
not
jmp
push
pushl
jmp
inc
aam
movzbw
mov
pushf
movb
shl
movb
push
mov
mov
lea
je
pushf
pusha
jmp
int3
test
lret
pop
pop
or
xchg
fimull
inc
add
addl
or
fs
pop
xchg
fisubs
pop
ret
sbb
aaa
loope
out
jae
push
test
dec
insl
sahf
adc
pop
push
inc
outsb
pushf
fbstp
movsl
scas
mov
xchg
ret
mov
daa
and
cltd
in
int
sub
mov
cld
and
push
dec
or
dec
fsub
sbbb
push
pop
leave
mov
out
mov
xchg
and
iret
jnp
ljmp
fisubs
add
inc
mov
push
rcrb
lods
movb
clc
stc
call
adc
out
or
adc
jnp
stos
dec
and
xor
dec
out
fisubrs
inc
sub
add
push
sbb
pop
jmp
xchg
clc
fsubp
test
shl
out
leave
lods
mov
daa
add
stos
mov
cmpsb
cmp
adc
fmulp
mov
bound
in
sti
cmp
movsl
addb
outsb
pop
sub
shll
shlb
dec
cmpl
or
sub
out
inc
cs
cmpsl
mov
lock
xchg
call
fiadds
xor
jo
rcrb
sub
push
sub
movb
pushf
pushl
pushf
lea
jmp
mov
pushf
inc
jmp
stos
or
fstpt
adc
pop
adc
mov
mov
hlt
add
sub
outsb
jbe
lea
mov
add
pusha
imul
leave
rorb
cltd
jns
fbstp
pop
sub
cmp
fadds
jae
mov
jb
push
pushw
adc
pop
scas
pusha
mov
movsb
push
in
and
jp,pt
push
scas
loope
sub
mov
fstp
cli
push
rcrb
and
jb
test
cmp
push
lea
ja
adc
sar
add
mov
add
call
xor
dec
ljmp
repz
cmp
and
sbb
or
or
jge
lock
sub
lahf
xchg
adc
enter
test
test
inc
mov
in
mov
mov
jmp
sahf
pop
add
and
inc
xchg
push
rcrb
and
call
pushf
lea
jae
bt
bt
xor
jmp
push
pusha
movl
pushf
jmp
lods
sub
jae
loope
test
xlat
xchg
popa
mov
dec
pop
lret
sbb
in
xor
jl
jb
lods
fcompl
hlt
xchg
subl
add
imul
adcl
sub
popf
imul
mov
js
cld
mov
mov
mov
inc
in
mov
pop
scas
mov
pop
or
pop
out
in
dec
inc
test
sbbb
cmc
mov
testb
cmp
ficomps
adc
push
rcrb
mov
lea
jne
jmp
lea
je
jmp
add
jl
cmp
jp
pushf
pushl
lea
je
clc
jp
pusha
cmp
mov
pusha
pushf
lea
je
cmc
cmp
pushf
pusha
lea
je
pushf
pushl
lea
jmp
ret
mov
jno
push
out
sbbb
frstor
cld
enter
fwait
and
iret
cmp
jo
adc
push
enter
shll
lahf
stc
cld
adc
and
or
xor
push
xchg
fs
cwtl
mov
push
inc
mov
push
add
popf
xchg
sub
subl
and
imul
arpl
loope
cmp
leave
pop
or
sub
mov
adc
outsl
mov
out
sbb
push
cmpsb
jl
jno
mov
shl
testb
je
xchg
add
pop
inc
mov
push
mov
rcrl
push
leave
stos
daa
sbb
push
insb
jae
ja
xchg
dec
mov
sbb
lds
scas
pop
aam
mov
js
mov
push
nop
cmp
repnz
in
movsb
dec
xor
cmp
int
ret
mov
shlb
out
pusha
fcomi
mov
xorl
or
nop
popf
ss
je
jae
add
outsl
and
pushf
icebp
movsb
mov
int
sar
loope
adc
mov
jbe
push
pusha
lret
jo
pusha
add
rcl
xchg
fisttps
lods
jns
add
pop
jae
push
dec
pop
dec
sbb
mov
push
mov
fidivrs
popa
ret
in
push
shlb
add
add
push
add
pusha
push
add
mov
add
add
add
rclb
add
add
movl
call
call
add
dec
outsl
popa
fs
imul
add
stc
xor
dec
not
or
rcl
rcr
sub
rol
pushf
or
rcr
neg
sar
sub
rol
pusha
mov
rcr
ror
dec
add
lea
jge
stos
call
movl
pushf
push
lea
jmp
movb
jmp
inc
movb
adc
lea
pushf
call
pusha
call
arpl
add
idivl
aam
or
pop
cld
push
inc
jge
inc
je,pn
xchg
int3
cld
call
pop
inc
jle
mov
xor
lods
fldl
mov
pop
mov
leave
jp
dec
or
mov
push
shlb
or
fwait
sub
jecxz
lea
xor
mov
fisubrl
fnsave
mov
mov
enter
mov
fsubs
xchg
jb
mov
outsb
pop
jo
fsubrl
fs
jge
push
pushf
pusha
movb
lea
jmp
test
pushf
call
popf
lods
ljmp
inc
jp
jae
popf
fwait
dec
vcomisd
inc
xor
inc
leave
out
adcl
sub
push
mov
cmp
jmp
jg
mov
rorb
jnp
cld
dec
pop
inc
pop
mov
scas
movsb
mov
xchg
mov
pop
dec
adcb
push
addr16
outsl
fisubrl
std
inc
je
fsubrs
push
arpl
push
xchg
jno
scas
ffreep
mov
cmp
int
enter
loope
jmp
rcll
ja
ljmp
and
add
test
pushf
setne
mov
movzbw
lea
call
xchg
lret
xchg
mov
mov
aad
jno
pop
aad
jle
andl
ja
jl
push
dec
iret
icebp
push
inc
mov
fiaddl
xor
enter
fistpll
shlb
and
jne
bts
mov
call
lea
je
bt
cmp
push
pusha
pushf
movb
lea
je
push
lea
jmp
mov
adc
not
inc
ror
mov
pushf
lea
js
mov
pushf
pushf
cmp
pusha
neg
push
xor
call
pusha
mov
pusha
pushl
pushf
mov
lea
call
pusha
jmp
pusha
movl
mov
jmp
sbb
pop
add
ljmp
xchg
inc
scas
pop
sub
das
fstl
jno
xchg
adc
les
mov
jb
add
pop
sub
hlt
and
adc
push
jmp
jmp
cmp
xchg
mov
pop
adc
lret
sbb
jb,pn
pop
mov
pop
pop
loop
mov
adc
pusha
fimuls
out
push
or
lods
hlt
repz
nop
es
in
inc
out
mov
arpl
call
std
push
scas
and
or
cmc
rorb
popf
mov
sbb
pop
pop
in
movsl
push
push
shlb
sbb
add
add
pushf
call
in
aad
lret
cmpsl
jmp
pop
adc
xor
data16
sub
dec
adc
mov
mov
add
orps
dec
mov
mov
add
imul
das
xor
pop
bound
int3
repz
loop
adc
ret
sti
pusha
and
pusha
dec
dec
in
push
fscale
sti
ret
lock
or
scas
out
jb
or
std
lds
fiaddl
scas
cld
aaa
lcall
cld
lcall
mov
cmp
sub
sub
push
rolb
jecxz
mov
mov
pusha
movl
push
mov
pushl
lea
jmp
pushf
movl
call
push
mov
mov
push
movl
pusha
movw
lea
jmp
cmc
jmp
popf
rdtsc
nop
push
pusha
movl
jmp
wbinvd
and
xchg
add
jecxz
or
xchg
loope
or
sub
dec
jb
mov
arpl
xchg
jp
cmc
cmpsb
test
push
loope
ret
scas
orb
sahf
jle
jecxz
adc
outsb
nop
insb
sub
daa
cmovne
push
push
push
cmp
insl
clc
add
ja
hlt
dec
nop
or
pusha
repnz
or
ret
out
scas
addr16
inc
mov
mov
divl
popf
test
in
negb
sbb
add
and
mov
and
jnp
push
shlb
movb
mov
pushl
ret
push
lods
bt
xor
cmc
cmp
pushl
not
jmp
pushl
cmp
pusha
lea
ja
jmp
lea
jb
jmp
lea
je
push
adc
pushf
lea
jmp
jmp
and
or
insb
lock
ljmp
xchg
adc
jnp
inc
adc
jp
mov
and
adc
mov
jo
add
cs
add
fmul
dec
xchg
sbb
cmp
std
mov
adc
mov
dec
push
lret
clc
cmpl
mov
leave
clc
or
notb
xor
jle
pop
mov
mov
int
mov
sbb
hlt
fisttpll
incl
xchg
xor
cmpsl
lret
pusha
lea
call
push
stc
sub
pushf
pusha
movw
lea
jnp
jne
push
lea
call
pushf
mov
pushf
lea
jmp
pushf
pushf
lea
je
clc
push
clc
cmp
movb
call
push
cmc
pushl
cmp
jmp
stc
call
xor
pushl
jmp
call
cmc
xor
pusha
pushf
push
lea
call
call
mov
testb
cmp
dec
xchg
cmp
mov
and
mov
sub
jle
sbb
lret
aas
insb
xor
mov
mov
negl
lret
int3
cmp
das
mov
mov
lea
dec
jbe
dec
adc
sbb
push
shrb
call
sub
pusha
pusha
push
inc
lea
pushf
call
je
pushf
adc
push
lea
jmp
lahf
imul
das
pushf
imul
test
and
scas
bswap
shlb
leave
xchg
lahf
inc
loop
repnz
sbb
enter
ret
lret
add
loopne
sub
gs
subl
xchg
test
sub
gs
les
stc
hlt
mov
out
lret
addb
jl
outsb
inc
pop
pop
jno
bound
mov
jge
inc
std
adc
mov
push
mov
jmp
mov
dec
int
mov
push
inc
clc
ret
cld
or
daa
sbb
mov
das
or
test
call
sub
call
push
or
repz
shlb
and
data16
dec
stos
cwtl
adc
pop
mov
insb
sbb
inc
in
xchg
push
and
fimull
int
stos
cmc
in
xchg
inc
imul
mov
pop
push
mov
and
or
ljmp
jb
stos
in
add
pop
scas
fildll
popa
arpl
lods
adc
shll
sbb
adc
insl
push
fistps
xor
dec
sbb
jl
mov
lock
pop
orl
dec
int
mov
repz
push
iret
cld
loope
or
or
imul
jne
loopne
dec
cmpsl
test
mov
fadd
in
mov
add
fistps
and
xchg
adc
dec
jae
popa
insl
jbe
js
mov
mov
xchg
pop
sub
ss
repz
mov
or
repz
shlb
cmpsl
push
sbb
mov
fsub
mov
cmc
loope
sbb
cmpsb
add
call
mov
stos
dec
fisttps
cmc
rol
gs
push
ds
test
out
in
push
int
mov
fistpl
pop
lcall
pop
aad
pop
add
stc
push
jle
fists
mov
imul
jo
mov
mov
sub
dec
xor
xorl
rolb
add
add
pop
es
loop
in
pushf
lcall
mov
push
and
int3
cli
pop
mov
lret
je
stos
sub
fidivrs
fcmove
out
ret
mov
sbb
mov
adc
dec
or
adc
loop
movsl
xlat
shll
dec
lret
push
inc
mov
or
in
mov
push
xchg
adc
lods
cmpsb
xchg
xchg
sbb
insb
mov
or
in
xchg
cmpsl
jns
mov
xlat
sbb
gs
int
movsl
ljmp
fmul
fbstp
adc
out
fmuls
pop
pushf
pop
sahf
stc
push
shrb
sbb
fwait
or
ds
daa
add
dec
insb
cmp
repnz
cmp
cli
jno
push
incb
ja
hlt
and
out
inc
insl
push
rolb
iret
push
cmp
add
pop
shlb
push
in
fisubs
pushf
stos
mov
jge
mov
xchg
or
rorb
pop
int
mov
xchg
loopne
xchg
cmp
outsb
jg
push
shrb
in
scas
jp
in
dec
fwait
and
jae
test
mov
adcl
pushf
push
mov
cmp
insb
inc
xchg
jo
push
repz
aas
imul
scas
rolb
jne
sti
imul
jae
scas
push
shrb
stc
pusha
pushf
pushl
popl
pushf
cmp
push
movw
pushf
lea
ja
rol
seta
mov
sub
seta
cmp
add
ror
clc
mov
mov
mov
test
mov
clc
repnz
pusha
lea
jne
cwtl
jmp
movb
lea
jb
pushf
pusha
pushl
ret
sub
lret
or
shrb
mov
add
fcmovnbe
movsb
loop
sbb
dec
add
pop
sar
jecxz
mov
or
and
add
dec
pusha
cmpsb
mov
cmc
insl
cmp
fs
add
sub
rcl
loop
shlb
add
xchg
ds
rorl
sub
xchg
push
fs
sahf
mov
sbb
mov
pop
outsb
xorl
pop
mov
aas
dec
movsl
cmpsb
ss
adc
in
sub
push
push
sub
jns
mov
icebp
pop
pushf
ret
shll
mov
xor
into
push
xor
mov
div
push
shrb
mov
xchg
mov
cmp
ret
sbb
sub
xchg
push
mov
push
cmp
fcomi
aas
dec
leave
jbe
xor
xorl
sub
mov
sar
sbb
ret
jg
ja
in
xor
sbb
loopne
pop
sub
int3
push
shrb
fs
addr16
push
gs
and
jne
and
outsb
outsb
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
insb
outsl
popa
and
and
outsl
insl
and
insl
outsl
jb
and
and
jae
popa
jb
and
jne
and
outsl
addr16
insl
add
push
shll
pusha
int3
test
push
and
subl
insb
sbb
repz
xchg
pop
data16
add
fisubs
andb
rcl
pop
lock
test
push
popa
enter
addr16
enter
xchg
scas
push
mov
bound
cmp
jb
sahf
mov
andw
jno
mov
xlat
imul
pop
push
roll
cmp
xchg
add
cmpsb
lods
jb
cltd
sub
cld
sub
sub
push
aas
jmp
add
xor
out
negl
clc
add
test
jne
adc
add
cltd
jns
cmp
mov
inc
push
shrb
movl
pushf
pusha
pushf
jmp
inc
loopne
push
es
or
rorb
repz
sub
and
jnp
add
out
xchg
inc
or
adc
daa
push
push
xor
inc
loopne
jmp
and
cmpsb
hlt
icebp
sahf
insl
pushf
mov
xchg
fs
es
mov
mov
shrb
frstor
dec
popf
js
dec
jb
cmp
mov
popa
dec
dec
cld
mov
mov
mov
sub
enter
aas
dec
xor
je,pt
mov
cld
fimuls
push
shrb
enter
pop
cmc
add
jmp
jmp
movzbw
setg
mov
not
not
setns
jmp
mov
test
pop
fstpt
mov
push
mov
test
xchg
in
fdivr
adc
gs
jecxz
imul
push
lods
sahf
ds
adc
push
shlb
fists
enter
pop
xor
sbb
or
imul
mov
insb
mov
push
flds
ret
cld
fisubrs
mov
add
sub
adc
and
xchg
mov
cmpb
and
cmc
xchg
jmp
rclb
insl
frstpm(287
pop
loope
loopne
xchg
or
popa
imul
jp
cmp
mov
mov
dec
mov
test
sub
in
ja
pop
cwtl
mov
cmp
jo
movsb
mov
dec
and
dec
push
cmp
cwtl
repz
js
ficomps
pop
and
popf
pop
insl
push
sub
or
fists
imull
in
dec
mov
or
push
mov
jae
lds
stos
int3
hlt
jmp
ret
jae
insl
mov
shrl
mov
jae
dec
mov
jae
jecxz
clc
ss
loope
out
sub
popa
nop
insl
sbb
inc
call
adc
or
xchg
arpl
fisubs
jae
xlat
aaa
in
cmp
pop
cmp
ret
adc
mov
jae
fdivs
mov
jae
pop
sbb
in
mov
insl
jge
add
repz
pop
jae
hlt
adc
jno
inc
xchg
jae
lea
mov
rep
pop
mov
mov
sub
imul
mov
jp
outsl
les
xchg
movsl
out
add
jae
movl
pushf
pushl
jmp
and
je
insb
test
mov
test
in
fdiv
and
ret
movsl
mov
cmpsl
add
cmpsb
jne
push
lds
sbb
fisttpll
outsl
cmp
mov
mov
shlb
and
fmul
imul
test
sbb
sbb
mov
rcrl
sbb
frstor
dec
stos
sar
push
mov
das
jo
dec
mov
cmpsl
inc
xor
mov
xor
int
push
js
mov
insl
adc
ficoms
lret
pop
cmp
jbe
pop
sbb
mov
test
dec
jo
jne
call
cmp
ror
inc
mov
fiadds
rcll
inc
std
test
push
and
int3
xlat
adc
and
mov
int3
ja
jge
sbb
push
dec
scas
or
push
in
sbb
inc
je
ds
ljmp
push
out
aam
fcoms
and
jnp
loopne
gs
jecxz
psubq
movsl
cmp
jle
call
sub
call
mov
je
ret
mov
xor
cmpl
dec
int
and
sbb
add
ja
aad
andb
test
std
data16
mov
push
and
cli
mov
pop
xchg
enter
scas
popa
mov
and
ja
jmp
iret
loopne
push
shlb
or
inc
jne
mov
and
or
xor
repz
xchg
mov
js
int
ss
mov
xchg
lods
nop
mov
scas
loopne
lods
pop
adc
cli
inc
roll
mov
dec
stc
das
jnp
cmpsb
dec
sbb
int3
jb
inc
jl
pop
out
clc
faddp
jbe
push
xor
add
xor
pop
popf
push
bound
push
xor
mov
sbb
xchg
orl
movsl
xchg
or
jp
std
sub
shlb
jbe
out
repz
push
and
mov
pop
js
mov
jno
push
cli
inc
sub
jne
sbb
test
cld
dec
or
add
push
xchg
inc
inc
xorl
mov
aam
jnp
lods
fstpl
pusha
pusha
lea
jmp
mov
lds
adc
jl
ss
adc
jmp
and
cmp
or
mov
je
iret
jo
dec
inc
pop
add
mov
scas
outsl
mov
movsb
cmpsb
mov
push
shlb
jl
call
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
xor
in
fistps
ja
jo
xchg
jbe
sarb
or
push
callw
mov
xor
outsl
or
js
inc
sbb
push
hlt
in
jbe
jns
xchg
enter
arpl
int
jmp
push
js
jp
insb
int3
mov
shlb
faddl
stc
shr
call
pop
inc
repnz
lods
or
shrl
pop
test
cmp
das
mov
les
sub
subl
leave
ljmp
scas
and
mov
inc
xor
in
sbb
aas
roll
jae
mov
mov
lods
js
cmpsb
ficomps
push
out
fsubl
xchg
mov
scas
lcall
cmp
and
push
dec
pop
gs
pop
add
jge
mov
arpl
enter
cmp
ss
imul
rcr
sahf
mov
cld
imul
ret
aaa
aas
xlat
add
cmp
daa
pop
and
mov
adc
push
and
mov
pop
sbb
xchg
adc
xchg
pop
enter
sub
movsl
mov
stos
icebp
jb
jo
addr16
ret
ficoms
mov
or
or
test
leave
decl
icebp
bswap
lea
bswap
movzwl
pusha
mov
lea
pusha
lea
pop
mov
push
jmp
call
push
movb
lea
jmp
lea
jg
pusha
movl
pusha
pushl
mov
lea
jmp
jmp
lea
pushl
jmp
jbe
sbb
cmc
shl
popf
mov
push
push
into
fisubrl
test
testl
repnz
fnsave
int
sbbb
mov
inc
std
scas
das
pop
mov
sbb
std
add
xchg
ja
jnp
stc
jecxz
mov
push
xor
ret
push
cmpsb
pop
dec
mov
inc
and
lds
sub
cmp
push
shlb
and
je
pusha
bsr
shld
xor
not
or
mov
sub
bswap
call
outsl
mov
push
inc
add
push
jecxz
push
mov
mov
push
aam
xor
outsb
sub
dec
lret
cld
inc
xchg
inc
decl
int
out
and
aaa
test
jns
sarb
jge
cmpsb
and
cmp
lret
jl
jp
xor
inc
or
inc
and
cmp
cmpsb
jge
push
in
pop
lock
jbe
fists
cmp
sbb
xor
fs
push
mov
sarl
inc
mov
dec
xchg
push
pushf
xchg
int
sub
cmp
add
mov
adc
mov
js
in
rclb
lods
adc
popa
jnp
inc
mov
js
mov
add
jb
es
shrl
push
cmpsl
call
adc
std
lods
insb
cmp
cld
imul
lahf
pop
rcl
mov
cmp
mov
pop
cmp
sahf
mov
imul
int3
pop
inc
outsb
lret
adc
std
inc
dec
iret
cld
imul
adc
cmp
lds
inc
shlb
dec
push
xchg
sub
mov
test
imull
jne
sub
push
cld
xor
cld
push
sbb
outsb
dec
lock
xchg
adc
push
sarb
out
push
add
stc
call
add
add
add
add
add
add
in
add
adc
add
sbb
jo
adc
add
adcl
add
sbb
addb
add
cwtl
int3
decl
add
lea
jb
stc
pushf
cmpb
pusha
lea
jne
jmp
movl
jmp
jmp
cmp
jmp
dec
adc
push
rorb
stos
cli
addr16
mov
icebp
pop
mov
xchg
sahf
mov
shr
int3
cltd
xchg
add
xor
mov
mov
lret
or
mov
sbb
mov
pushf
jl
das
sub
mov
imul
dec
xchg
jg
call
popf
dec
arpl
mov
mov
in
sahf
out
sbb
out
mov
subb
and
dec
cmpsb
daa
cwtl
dec
mov
push
or
mov
shr
mov
mov
mov
mov
push
call
mov
test
push
add
stc
cmp
movw
call
and
in
or
xchg
pop
shlb
pop
pop
xlat
push
daa
jle
xchg
inc
pop
hlt
imul
lcall
pop
je
jp
popf
or
fdivrs
jno
sbb
dec
mov
data16
mov
inc
adc
loop
cmp
mov
sbbl
adc
xor
push
dec
xor
xchg
in
xlat
push
mov
inc
jg
cmc
rcl
outsb
shlb
out
lods
pop
xor
ds
and
fimull
sbb
call
and
stos
mov
popa
jo
push
mov
pop
pop
or
jl
test
push
movsl
out
test
int
dec
sahf
adc
movsl
cmp
or
pop
sbb
jl
outsb
lahf
dec
and
push
sarb
ja
and
leave
sarl
xor
push
adc
fsubrp
xchg
or
in
pushf
js
jae
push
jns
arpl
pop
mov
mov
pop
call
jl
outsb
shr
jl
adc
out
ss
jae
sbb
or
inc
xchg
xor
fdivl
dec
push
mov
fimuls
in
jae
outsl
cmp
sub
pop
mov
cmp
sub
mov
jbe
aad
nop
and
push
sub
and
cmp
mov
push
sarb
lea
jmp
pushw
popfw
pushf
inc
pushf
adc
pusha
pushf
pushl
ret
clc
add
clc
test
pushf
lea
jne
push
jmp
neg
movb
clc
movb
rol
mov
mov
bt
jmp
pop
loope
xchg
subb
lahf
mov
mov
cmp
push
add
lret
xchg
rclb
or
jmp
in
out
stos
lods
cmp
sbb
xlat
jle
ljmp
jp
and
lahf
scas
cmc
gs
jle
imull
mov
xchg
and
sub
icebp
pop
int
daa
pop
movsb
add
cmp
test
push
xlat
mov
or
dec
mov
mov
and
es
popf
clc
loop
ljmp
jne
mov
mov
popf
mov
mov
mov
movsl
mov
lcall
sti
cmp
mov
fisubrs
adc
sbbb
call
push
mov
je
popf
mov
bound
cmpsb
xchg
dec
sub
out
sub
sub
in
ja
test
lea
fistpll
pusha
loopne
xchg
mov
sub
cltd
push
sarb
cmp
shr
add
add
loop
cli
pusha
mov
mov
mov
sahf
adc
jne
pop
int3
mov
xor
daa
xor
and
mov
fisttps
addb
mov
imul
push
outsl
adc
jbe
xlat
push
andl
sbb
cmpb
hlt
lds
mov
fwait
mov
lcall
add
and
lret
cs
mov
ljmp
xchg
dec
lret
push
push
inc
sub
inc
movsb
and
clc
adc
aaa
pop
push
jnp
scas
jnp
or
fcmovb
mov
ljmp
push
inc
sub
mov
mov
mov
pop
shlb
repz
mov
mov
or
pop
leave
pop
mov
sub
mov
or
idivl
sub
loopne
dec
inc
or
xor
pop
out
push
cli
insl
aas
mov
cmp
dec
loopne
out
dec
or
xor
call
jae
mov
ss
jmp
dec
mov
add
bound
std
mov
and
mov
sub
push
int3
or
sbb
in
jp
dec
in
or
in
pop
nop
cmp
xor
in
out
xor
inc
mov
cmpsl
shlb
xor
sub
mov
mov
xor
mov
dec
es
ds
movsb
jecxz
xor
in
or
pop
xor
movsb
sbb
test
movb
sub
loope
and
aas
or
add
scas
sbb
lods
loope
or
xor
scas
sbb
mov
ficoml
xor
ftst
and
mov
cmc
xor
stos
sbb
aas
mov
xor
das
out
add
push
aas
or
sbb
or
sbb
sub
aas
or
xor
lods
sbb
or
xor
test
mov
daa
cltd
aas
mov
sbb
jl
xor
dec
in
imul
xor
sub
sbb
or
adc
xchg
sbb
mov
sbb
or
sbb
ljmp
xor
fucomip
lcall
mov
int3
and
aas
or
pop
xor
mov
mov
pop
es
cmp
sub
lods
aas
or
xor
inc
sbb
call
call
bound
or
xor
nop
sbb
or
cmpsl
xor
cwtl
sbb
or
aas
mov
mov
mov
xor
int
xor
dec
sbb
or
xor
test
adc
cmpsl
aas
mov
xor
adc
fs
xor
decl
mov
pop
daa
jo
push
jne
leave
mov
je
sahf
sub
inc
mov
or
xchg
iret
andb
xor
jne
xchg
lods
sub
mov
insl
xchg
enter
and
hlt
sbb
addr16
ror
stos
and
pop
mov
cmp
sub
lods
adc
cmpsl
fsubp
sbb
mov
fs
mov
call
mov
jmp
enter
loopne
roll
arpl
push
out
test
mov
push
testl
lahf
mov
mov
dec
enter
rol
int3
or
xor
cmc
shrl
leave
jbe
inc
fisubrs
mov
jno
jl
insl
sahf
add
push
cmpl
movsl
int
fistps
movsl
pop
or
stc
or
popf
out
adc
cmc
sub
sub
test
clc
call
aas
mov
adcb
outsl
fcompl
sbb
inc
xchg
sub
xor
rorl
xor
rolb
jecxz
arpl
decb
movsl
or
bound
mov
aas
addr16
shrl
xchg
push
mov
repnz
int
mulb
cmp
int
push
mov
ret
mov
cs
cli
jo
leave
lret
dec
sti
xor
pop
fistpl
or
sub
shrl
push
je
pop
sbb
out
pop
cmp
mov
cli
mov
add
mov
or
xor
mov
movw
pushf
movw
pushl
ret
sub
shrl
int3
sti
ds
mov
es
mov
dec
jb
ljmp
sbb
inc
push
mov
xchg
je
cs
es
sub
fdivrp
sub
ss
push
xor
pop
call
hlt
scas
sbb
mov
push
xor
sub
cmpsb
add
mov
insb
mull
xchg
ja
pop
lds
cmpsl
clc
scas
test
ds
add
js
lods
sub
dec
cmp
bound
mov
cli
mov
adc
sahf
pop
shr
inc
add
push
add
ss
push
test
movl
mov
push
pushf
lea
jmp
mov
lea
jb
pusha
jmp
str
call
push
call
jne
jmp
pushf
lea
jne
jmp
add
dec
gs
popa
addr16
outsl
js
add
and
fs
call
pushf
lea
jae
pusha
bt
jmp
call
or
stc
rcr
mov
jmp
lea
call
push
call
lea
je
push
clc
pushl
or
push
call
jmp
sbb
sub
push
mov
pushf
jmp
movsbl
rol
sub
cmc
neg
lea
sub
pushf
bt
pusha
jmp
bt
pusha
pushf
push
or
movb
pushf
jmp
pushf
pusha
movl
push
lea
jmp
pushl
jmp
mov
insl
xlat
xor
cs
call
add
in
sbb
mov
lret
rcrb
jl
or
push
xor
sbb
xchg
cmpsl
rcll
push
aas
in
mov
cmp
jle
mov
inc
push
movsl
into
pop
addb
xor
or
jecxz
push
lods
xchg
mov
add
cmp
outsl
movsl
pushf
jecxz
test
pushf
pop
add
xchg
aam
lret
in
cmp
int3
xchg
push
inc
jo
ror
add
fmulp
orl
dec
pop
xor
xchg
ret
hlt
in
push
rol
dec
std
inc
jl
pop
cmc
shrl
adcl
test
cmp
out
push
dec
sub
pop
sahf
mov
xor
pop
jp
iret
mov
mov
inc
xor
cmp
scas
addr16
dec
sub
add
out
pusha
mov
push
rol
rcr
xor
rcr
pushf
xor
lea
xchg
lea
push
mov
pusha
pop
xchg
mov
bswap
pushf
call
lea
fucomp
or
scas
mov
add
ss
lahf
dec
inc
lea
lds
pop
std
sbb
out
add
test
sbb
gs
rcll
mov
jns
xchg
lret
lea
jecxz
jae
leave
mov
and
arpl
jecxz
sub
shrb
notl
xor
or
push
outsb
cmc
jbe
mov
sbb
pop
aaa
add
mov
std
xor
mov
mov
test
arpl
fimuls
jbe
fmull
aam
add
pop
xorl
jmp
push
rol
rclb
ja
jmp
shrl
cmpsb
repnz
dec
mov
fstps
movsl
aam
add
out
fdiv
mov
test
fistps
popa
cmpsl
jmp
mov
mov
in
jne
pop
fadd
or
or
lahf
fwait
test
lods
scas
jo
loop
jae
rol
xor
shrl
mov
lret
lahf
adc
and
in
xor
lahf
rorl
aaa
in
int
dec
cwtl
xchg
mov
fsubrl
es
mov
mov
ret
mov
push
jle
in
push
push
cmp
sub
push
int3
push
rol
movsl
xchg
mov
dec
mov
inc
addl
push
nop
jbe,pt
rclb
push
push
mov
cwtl
mov
sahf
jae
pop
push
mov
mov
xchg
inc
cmp
repnz
jecxz
mov
or
and
ficoml
pop
cmp
cs
jo
jbe
cs
cmc
xchg
xchg
pop
fcompl
jl
mov
fldz
cld
js
jne
jl
repnz
into
imul
xor
push
rol
les
and
pop
mov
jmp
pushf
jmp
pushf
call
pop
and
mov
mov
les
pop
dec
cwtl
movsl
iret
shr
and
inc
pop
mov
std
jmp
xor
mov
mov
mov
cmc
jle
daa
and
xlat
aam
jnp
xlat
mov
lea
adc
test
ljmp
ret
data16
xchg
bound
lret
xor
fsub
aam
jno
xchg
inc
aam
sar
mov
vmread
int
js
xlat
and
pop
jmp
inc
clc
mov
push
ror
dec
or
ds
add
test
movzbw
bts
add
sub
pushf
setl
add
btc
mov
call
movsb
into
cli
mov
cmc
rcll
push
or
push
sub
je
iret
or
mov
sbb
dec
mov
cmp
outsl
test
mov
test
popa
pop
stos
sub
cmp
scas
pop
int3
sub
repz
jb
adc
and
sub
hlt
inc
xchg
jge
pop
ficoml
enter
pusha
mov
lea
pushf
pushf
pushf
lea
call
call
jmp
fimuls
cs
sbb
dec
mov
xor
pop
jne
inc
std
mov
mov
add
stos
fisubl
jg
mov
sub
ja
push
add
cli
xchg
jb
cwtl
ds
xchg
xchg
inc
rcl
loopne
and
inc
daa
arpl
jae
push
ret
sbb
cs
push
sub
xor
and
and
pop
mov
jne
adc
cli
add
cmp
push
int3
cmp
lahf
or
sahf
popa
ficoms
xchg
mov
std
add
cmp
das
add
shll
insl
jmp
push
inc
sbb
dec
sahf
popa
xor
movsl
cmp
fnstenv
mov
fistl
inc
add
repz
in
ja
sbb
ja
test
cwtl
enter
jne
add
sbb
js
cmp
push
daa
lea
jne
push
jmp
clc
neg
call
not
setl
push
stos
pusha
call
pusha
movzwl
movzbl
pushf
pop
movzbw
lea
mov
pushf
mov
pushf
lea
call
push
call
call
mov
mov
call
push
pushf
movl
pushf
mov
lea
jmp
jle
in
mov
sub
jp
test
sbb
push
mov
dec
insl
pop
inc
aaa
divl
xchg
jle
sub
lea
outsl
les
push
xchg
ret
mov
insl
lea
arpl
sub
push
and
sbb
pop
mov
cli
in
jb
outsl
les
sbb
ffreep
cmp
mov
stc
loope
call
inc
lret
pop
scas
jmp
push
mov
scas
ret
sub
int
aad
xchg
jecxz
imull
lock
push
cmp
enter
sahf
cwtl
dec
add
enter
aas
pop
cli
xchg
and
sahf
stos
daa
adc
adc
or
ja
sti
pusha
leave
fidivl
cs
sbb
mov
adc
jae
popf
insl
jecxz
scas
fidivrl
mov
sti
mull
test
test
xchg
jne
push
ljmp
ret
xor
mov
dec
enter
push
fidivl
pop
cmp
js
xchg
cmpsb
mov
jo
mov
popf
aad
xchg
mov
cld
popf
xor
arpl
push
mov
xchg
ds
ret
dec
jb
cmp
jo
push
pop
repz
mov
das
sub
imul
into
popa
cld
inc
ffree
sbb
mov
adc
pop
jb
lods
sbb
aaa
xor
xchg
jno
imul
sar
cmp
jecxz
hlt
hlt
repz
aaa
repz
arpl
pop
cli
stc
or
fdivs
push
aaa
xor
daa
dec
mov
cmp
sub
pop
scas
hlt
sub
movsl
sub
lds
xchg
adc
sahf
cld
sub
test
lahf
dec
mov
in
cli
mov
xchg
or
enter
dec
imul
rcl
xchg
push
dec
addl
mov
mov
sbb
xchg
ret
cmp
jle
fsubrs
and
inc
push
pop
pop
stos
dec
es
ror
lds
call
cmpsl
cmpsl
cmpl
xchg
bound
aas
sbb
sahf
xchg
jge
aaa
inc
push
dec
clc
sub
outsl
aaa
outsb
cmp
lcall
fsubrs
pushf
aaa
fsubrl
inc
xchg
int3
cmp
sahf
jae
dec
sub
cld
loopne
jg
add
mov
cwtl
fwait
push
mov
mov
cmp
cli
inc
repnz
cmp
jl
mov
popf
loopne
push
in
mov
mov
add
arpl
mov
vmptrld
xchg
inc
pusha
in
xchg
leave
mov
jmp
popf
mov
xchg
into
pushf
pushf
movl
jmp
lea
jne
sar
shr
xor
pop
jmp
mov
or
mov
inc
lods
sbb
hlt
gs
ljmp
stos
cmp
roll
lods
mov
mov
repz
mov
adc
or
jmp
mov
xchg
stc
inc
jge
jg
out
lcall
jmp
repz
mov
push
inc
pop
rcr
xchg
cmc
lret
xlat
inc
pop
shlb
sti
arpl
and
inc
sub
dec
imul
mov
jecxz
loop
ja
xchg
pop
addr16
mov
lahf
mov
cmp
fsubrl
pop
rcll
subb
call
rcrb
movsl
push
inc
test
cmp
sbb
icebp
daa
cmpsl
cmpsb
lods
or
and
cld
jmp
hlt
cmp
dec
push
xor
xchg
fld
fisttpl
xchg
mov
test
out
movsb
mov
mov
cmp
out
mov
test
outsb
addb
into
push
ror
sbb
cmc
shll
out
ja
and
dec
mov
aam
shrb
cli
daa
jo
push
mov
or
adc
sbb
or
sbb
pop
bound
dec
mov
xor
or
jecxz
pop
mov
rcrl
je
pop
je
sbb
add
adc
addr16
mov
fiaddl
fldl
call
push
fistpll
popa
xor
pop
shll
aam
mov
mov
clc
push
jae
mov
rcrb
or
imul
cmp
call
aad
mov
sti
pop
aaa
mov
or
lret
lods
int
xor
test
icebp
addr16
inc
pop
mov
or
and
jl
add
das
or
popf
dec
clc
mov
repnz
dec
push
pusha
insb
inc
fsub
adc
sbb
push
dec
pop
in
lret
or
call
mov
lahf
add
dec
in
xchg
bound
xchg
xchg
adc
mov
cmc
mov
jo
mov
jae
push
imull
mov
iret
rcll
stos
mov
fstpl
and
or
shl
bsr
shl
lea
test
lea
sub
xchg
rol
or
push
shrd
push
shl
btc
ror
push
xchg
mov
stc
lea
sbb
ror
mov
inc
bsr
mov
clc
or
call
pushf
lea
jae
push
lea
jmp
ds
sti
sbb
adc
or
fnstcw
pop
pop
mov
mov
inc
sub
mov
mov
hlt
inc
mov
jo
mov
hlt
xchg
xchg
pop
adc
add
push
rol
mov
mov
insb
sbb
mov
jge
test
lods
mov
jp
add
pop
int3
xchg
mov
mul
mov
fisubl
push
cmp
push
push
inc
and
jns
fwait
lds
pusha
ret
inc
ror
and
sub
dec
out
pushl
and
test
imul
and
jo
mov
jnp
movb
test
lcall
inc
add
cmp
mov
sbb
jno
es
loop
mov
add
dec
pop
mov
lock
je
inc
cmp
repz
ret
push
int
xorl
sub
pop
mov
xchg
mov
lock
cmpsl
xchg
xlat
xor
xlat
pxor
pop
inc
fisubs
int
inc
and
iret
mov
gs
into
aam
dec
sub
stc
xchg
outsl
fnstsw
call
sbb
sbb
pusha
es
neg
cmp
and
xchg
fidivrl
mov
sbb
stc
dec
shrb
xlat
gs
cmpsl
push
lret
outsb
fmull
cmpsl
or
lcall
push
push
in
ja
in
cmp
popf
cmovl
xchg
jbe
jge
dec
sub
pusha
sub
in
outsb
mov
inc
push
adc
shll
dec
in
fists
stos
int3
sarl
adc
inc
or
stos
dec
fimuls
and
mov
push
rcl
lcall
add
add
jns
movb
pushl
ret
pop
loop
pop
jmp
mov
adc
jge
pop
lods
add
je
imul
jbe
pusha
insl
or
mov
fadds
sub
push
dec
ret
pop
rcll
xchg
jb
cmc
shrb
es
mov
adc
fs
mov
imul
scas
lea
add
add
adc
xor
sbb
rcr
push
and
movl
pushf
mov
pushf
lea
jmp
shr
clc
clc
cmp
pushf
lea
je
pusha
test
cmp
pusha
pushf
lea
je
clc
bt
cmp
jmp
seta
movsbw
lea
pushf
push
movl
jmp
not
jmp
pushf
push
lea
call
stc
push
bt
cmp
jmp
and
add
dec
sub
and
movsb
lahf
push
adc
xor
add
call
mov
int
int
ret
push
ja
jge
mov
fmuls
lahf
mov
aam
notb
sarl
mov
stc
loop
mov
pop
cld
mov
sub
xchg
xchg
pop
jmp
cmp
je
pop
pop
lret
jp
sub
cwtl
cmpsl
xor
cld
sub
dec
ficomps
rolb
lods
pop
adcb
xor
ja
jns
cmp
or
rcl
dec
mov
cmp
sub
cmc
cmp
movb
cmp
cmp
jmp
jbe
xchg
fdiv
cmc
sarl
lret
pop
arpl
adc
jle
lock
and
push
movsl
xchg
and
mov
cltd
and
push
fistpll
rcl
imul
test
add
jmp
clc
orl
pop
xor
test
and
xor
sub
in
pusha
inc
cmp
pop
enter
pop
or
mov
aas
pop
mov
push
fstps
test
insb
leave
pop
ror
ds
jp
xchg
ss
stc
or
aaa
sbb
pop
jne
xchg
pop
jb
lcall
lcall
decb
lods
mov
and
adcb
jmp
fwait
enter
mov
fmull
insb
xchg
inc
mov
push
sub
jo
cs
ffreep
pop
inc
test
rcll
mov
xcrypt-ctr
cmpsl
fistpl
sbb
ret
dec
push
subb
jle
es
push
push
test
cmpsl
sub
sbb
fs
sub
jg
rclb
test
mov
dec
js
in
iret
cmp
xchg
inc
or
test
lret
push
cmp
pop
mov
test
cltd
pop
fldt
cli
xor
mov
sbb
in
add
test
rcl
mov
xchg
cs
sarl
sbb
sbb
enter
daa
adc
sbb
dec
mov
jns
adc
cmp
mov
test
cmc
jno
mov
push
fisttpll
dec
mov
mov
or
sbb
fldl
mov
dec
pop
jl
scas
and
push
rcl
adc
loopne
or
pushf
movl
jmp
pusha
jmp
jmp
and
aas
call
cmpsl
sbb
cmp
subb
dec
test
decb
mov
inc
repnz
jne
jge
cwtl
dec
sbb
cmp
adc
cmp
subb
sub
sbb
das
xchg
int3
push
loop
push
ds
and
loop
js
pop
in
test
ja
cltd
cmpsb
shrb
jae
bswap
enter
mov
push
jecxz
in
jge
shlb
inc
rcl
decl
and
clc
jg
icebp
mov
mov
mov
mov
mov
sub
ljmp
lret
xchg
or
sbb
ss
int
enter
xlat
les
xor
ja
inc
popl
bsf
scas
dec
orb
sub
sbb
pushw
rcll
push
push
cltd
xor
and
lea
mov
hlt
push
testl
cli
cmp
ret
ljmp
arpl
mov
insl
mull
mov
cmp
in
negb
imul
add
mov
insl
sbb
ror
mov
pop
xor
movsl
aad
mov
mov
int
shlb
movb
stos
pusha
pusha
pushf
lea
jmp
das
push
aam
mov
shl
sub
rol
bsr
pusha
mov
lea
xor
dec
mov
call
movl
pusha
lea
jmp
pushf
lea
jae
call
test
cmp
pusha
movl
jmp
and
add
jle
cmpl
orb
pop
fildl
adc
subl
or
aam
jle
cmp
fidivrl
mul
dec
jge
jo
mov
add
cmpsb
mov
outsl
inc
and
xchg
daa
stc
fisubrl
iret
push
rcr
add
cltd
call
cwtl
and
or
mov
iret
xor
pop
ja
popa
into
sub
gs
dec
test
cld
add
sub
lods
aas
stos
mov
push
das
mov
popl
sbb
cmp
in
xlat
mov
pop
push
mov
pop
add
mov
sbb
gs
mov
dec
orb
dec
test
adc
dec
sahf
jo
cltd
push
lret
dec
mov
ret
pop
mov
leave
lcall
rcr
lds
bt
clc
add
pushf
lea
jne
mov
mov
mov
pushfw
and
shr
add
mov
call
or
push
xchg
mov
inc
jge
cmp
sbb
sbb
ret
jge
insb
jp
out
popf
sarl
and
int
div
jo
imul
mov
fs
les
dec
sbb
mov
loope
ret
rcr
mov
mov
pusha
lea
jae
bt
cmc
clc
cmp
call
lea
jne
pushf
mov
bswap
call
push
pusha
movw
pusha
push
lea
jmp
stos
aam
or
insb
fwait
mov
jg
pop
pop
adc
push
push
cmp
rcr
fistps
mov
pop
xchg
int3
push
jb
in
pusha
cmp
xor
add
jns
call
insl
lahf
mov
mov
pop
mov
les
dec
bound
jne
popa
jae
lods
cltd
sub
adc
rcr
lret
sub
test
incl
push
cmc
shr
pusha
mov
call
xchg
jne
or
push
jg
mov
cwtl
rcrb
pop
mov
inc
leave
lret
xchg
adc
jmp
rolb
int
mov
xor
inc
cmp
dec
clc
adc
in
or
enter
mov
sarb
enter
orb
dec
push
test
lcall
cli
push
jnp
popf
or
roll
and
fimull
mov
fs
push
dec
cmpsb
sub
cmp
or
sahf
xlat
or
xchg
adc
js
fxtract
adc
fsubs
out
pop
nopl
push
inc
xor
inc
lds
incl
cli
cmc
jnp
dec
push
iret
xlat
jno
mov
adc
mov
jl
xchg
sarb
pusha
pop
mov
push
cmp
adc
xchg
loopne
dec
sub
gs
pop
xor
mov
pop
shlb
mov
fsts
mov
push
fistpll
xor
push
add
push
mov
dec
mov
mov
fwait
test
inc
sub
xchg
sub
inc
mov
shl
and
push
mov
pop
aaa
cli
sbb
mov
mov
adc
push
add
fisubrl
gs
jl
es
xchg
push
mov
sub
adc
popf
sbb
push
aad
outsb
fisubrs
cltd
cmp
sub
or
cltd
cld
mov
int3
pushf
sbb
test
jecxz
test
mov
ja
out
sbb
test
mov
int
daa
adc
rcl
xchg
mov
pop
cs
inc
iret
lahf
mov
sbb
mov
leave
stos
sbb
js
rcr
imul
lea
call
pusha
call
adc
call
lea
ret
clc
clc
add
pushf
pusha
test
call
pushf
add
pushf
bt
add
jbe
popfw
pushf
pusha
inc
pushl
call
add
cmc
jecxz
or
ds
in
or
mov
xchg
js
imul
mov
repz
mov
push
cld
aad
push
fstl
cmp
fidivrs
xchg
or
es
dec
jp
rcr
add
bsr
stc
mov
test
cmc
pushf
and
pusha
pushf
stc
add
push
pushf
push
pushf
lea
jmp
fcmovbe
push
stc
or
cmp
in
paddsb
addr16
adc
ss
pop
jle
inc
cmp
sbb
push
test
and
ja
push
scas
lds
xchg
jecxz
shll
in
cmp
popf
loope
push
stc
out
xchg
iret
and
imul
ljmp
push
mov
inc
jb
or
and
pop
mov
sub
jge
cld
cld
daa
adc
jno
into
cli
mov
outsl
insb
add
aas
push
xor
les
sbb
push
rcr
shlb
iret
jmp
add
add
add
add
add
test
adc
add
add
add
mov
adc
lret
nop
pop
movsl
mov
pop
pop
outsb
mov
bound
dec
sub
imul
call
stos
and
movsl
scas
pop
mov
cmpsb
sub
and
sub
addr16
cmp
sub
je
jecxz
mov
push
sbb
and
clc
adc
lcall
andl
bound
adc
add
fdivs
push
lds
and
push
aaa
pop
incl
push
out
mov
mov
dec
jno
mov
mov
ja
out
mov
std
shl
inc
cwtl
add
mov
imul
dec
xchg
push
push
mov
pop
dec
cltd
in
pop
ret
in
add
in
xchg
mov
cs
inc
jne
mov
inc
mov
pop
pop
or
mov
mov
pop
cmpsb
mov
sub
fisttpll
mov
roll
jne
adc
or
pop
push
imul
fsubrp
inc
or
jo
mov
cmp
cld
aas
lds
dec
outsl
in
ljmp
je
sub
xor
inc
into
cmp
xorl
mov
fwait
cmp
scas
cmp
lcall
inc
nop
pop
xchg
lea
sub
subb
pop
mov
cwtl
cmp
mov
js
xchg
push
out
fisttpll
mov
adc
pop
and
iret
imul
sahf
stos
sbb
add
dec
lock
leave
dec
cmc
out
pusha
test
jmp
fisubrs
dec
push
xorb
xor
or
arpl
arpl
stc
dec
cld
leave
sbb
fs
fdivr
data16
mov
cwtl
jg
mov
mov
mov
cwtl
imull
dec
insl
xchg
jbe
mov
adcb
imul
icebp
popa
jno
add
andl
adc
xchg
div
lcall
aad
mov
repnz
adc
and
adc
popa
inc
sub
imul
arpl
xchg
dec
ret
xor
leave
scas
push
mov
dec
gs
pop
cltd
mov
arpl
jbe
sbb
inc
js
lods
aaa
pop
cmc
ljmp
push
cmpsl
push
sbb
xchg
test
adc
loop
mov
add
loope
sub
push
or
push
adc
sbb
xor
and
insb
sub
adcl
cwtl
adc
mov
clc
mov
test
and
decl
negl
mov
pop
cld
lahf
inc
and
add
inc
sub
sahf
xchg
inc
jl
xor
mov
jge
xchg
ljmp
push
scas
dec
pop
mov
jg
push
aas
lds
inc
mov
mov
lret
mov
fdivrl
lret
in
mov
sub
xor
pop
aaa
mov
xchg
inc
jg
in
addr16
addl
inc
cs
jle
adc
mov
mov
pop
xchg
lods
out
mov
test
icebp
sub
ja
jo
xchg
ret
aas
and
insb
cltd
cmp
xchg
dec
cmpsb
popa
repz
inc
xorb
add
repz
pop
mov
mov
xchg
bound
xchg
add
jb
and
lret
pop
mov
mov
inc
xchg
inc
int
pop
and
data16
ds
xchg
push
xor
ljmp
mov
sbbl
repnz
std
test
or
push
loop
mov
icebp
jno
jl
mov
lahf
pop
rclb
hlt
into
jae
xor
sarl
shlb
std
jmp
and
mov
sbb
rolb
cltd
fs
push
push
repz
jns
inc
jb
push
loope
adc
cmp
push
xchg
fyl2xp1
lahf
jmp
aam
and
jg
aam
notl
jl
shrb
push
bound
push
call
xchg
xchg
mov
std
divl
or
pop
add
icebp
cld
ja
inc
fisubrs
ja
or
aam
and
arpl
movsb
cmpsb
test
mov
movsb
jbe
fstpl
inc
rep
sub
or
orl
and
sbb
pusha
call
push
insl
out
popa
and
jle
es
cli
lods
xchg
xchg
xchg
sub
dec
test
ret
repz
mov
jge
sbb
xchg
mov
movsl
jne
mov
xchg
aad
cmp
in
cmp
mov
cs
jecxz
mov
pop
bound
bound
pop
add
mov
mov
repz
push
mov
fiaddl
xchg
inc
push
add
loope
push
cmp
lock
xchg
into
or
jmp
jb
ret
fdiv
sub
test
std
shll
js
mov
neg
mov
jns
imul
gs
cwtl
insb
sbb
push
stos
ret
pushf
or
push
and
test
inc
lret
or
out
or
mov
push
iret
mov
cmpl
test
sub
and
subl
ds
lea
out
adc
cmpsl
xchg
mov
xchg
lods
ss
in
push
or
fldcw
pop
pushf
js
hlt
ror
inc
dec
mov
sbb
jge
outsb
incl
pop
es
xchg
lods
pop
push
lods
fwait
pop
int
mov
bound
dec
in
dec
cwtl
arpl
mov
test
bnd
pop
xchg
insl
cmpsb
and
push
fs
cmp
mov
cmpsb
mov
pop
add
lds
xchg
cwtl
xor
aad
pop
dec
xchg
mov
and
sub
pop
test
cwtl
add
scas
cmp
xor
sbb
or
and
jb
xchg
frstor
jp
in
in
jb
mov
dec
pop
sub
loop
movsb
mov
popa
std
insb
or
xor
mov
sub
rcrb
push
mov
pop
inc
xor
rcr
movsb
cmp
mov
sbb
js
push
imul
sbb
shr
cmp
lods
cmpl
inc
xchg
ror
jb
enter
inc
cmp
mov
and
or
sbb
sbb
loopne
in
insb
or
jmp
jb
out
jbe
leave
push
mov
inc
int3
mov
dec
mov
or
pusha
daa
mov
or
into
mov
jecxz
dec
stos
inc
pop
mov
mov
or
dec
jecxz
scas
push
add
jae
mov
jbe
or
gs
fisttpll
test
jmp
sub
fidivrs
pop
les
out
out
xchg
jbe
insb
xchg
add
and
int
xor
hlt
outsl
jno
popf
cmpsb
jne
popa
pop
xchg
mov
pop
mov
mov
movsb
inc
aad
pop
push
enter
jae
cld
mov
mov
es
push
ficoms
mov
lcall
mov
xor
xchg
lahf
cltd
xchg
xor
xor
in
jne
fwait
add
in
mov
mov
jo
popf
vmovhpd
sub
jne
adc
test
mov
mov
shl
ljmp
fists
out
xlat
inc
push
mov
pop
xchg
fimuls
cwtl
std
inc
int3
push
lods
cltd
xor
das
xor
aad
adc
add
push
push
adc
pop
jns
in
ljmp
scas
adc
test
pop
adc
bnd
imul
dec
xchg
movl
mov
jno
xchg
iret
bound
ja
cmpsl
jl
leave
lods
pushf
mov
pop
adc
push
mov
push
pop
rcll
test
lds
cmp
cltd
pop
jns
lahf
inc
enter
outsl
and
fs
jp
mov
jno
inc
dec
lods
jbe
mov
cs
stos
movsl
add
lcall
imul
pusha
jl
lahf
roll
inc
or
inc
int
test
test
inc
arpl
add
dec
aas
imul
clc
nop
js
dec
mov
cmpsl
or
jb
popf
clc
js
or
int
dec
movsl
mov
adc
in
cmc
lret
bound
add
push
lods
sbb
pop
movl
ljmp
cmp
out
pop
push
inc
aam
push
insl
lock
pop
sub
pop
outsl
add
rol
or
scas
and
aaa
dec
push
rolb
inc
shrl
fldenv
push
divb
je
fs
lret
fsubp
lea
push
cmc
xlat
cmpsb
decb
aam
jg
jns
lock
cmpsb
test
in
xchg
leave
aas
ja
shrl
ret
push
inc
ja
sub
jmp
hlt
jnp
jb
in
xor
xlat
or
andb
pop
pop
xchg
sbb
pop
jg
shrb
dec
aaa
cld
mov
stos
in
addb
and
dec
dec
sub
xor
jbe
and
mov
push
adc
mov
dec
addb
push
and
dec
outsl
mov
sub
out
xchg
cmpb
xchg
call
adcl
mov
jg
lret
les
ret
aas
loope
mull
push
add
jo
rorl
gs
or
pop
cmpsl
out
dec
sub
dec
pop
mulb
xchg
jno
mov
cmp
imul
jb
into
add
fmull
or
std
test
push
cwtl
es
sub
push
push
dec
notl
and
ror
mov
lcall
push
xor
cmp
ret
cmp
xor
jbe
push
es
pop
subb
cmp
cli
aad
sub
mov
repz
pop
cmp
jge
mov
into
cmp
rcrl
in
frstor
cwtl
push
rorl
sub
les
insb
jecxz
pop
sbbb
push
dec
jecxz
adc
loopne
shlb
sbb
sub
repz
sub
push
xorl
mov
inc
in
fcmovu
jae
adc
mov
out
lret
fdivs
or
shl
outsb
aaa
xor
mov
add
sbb
cli
into
xchg
loope
into
stos
push
jg
xchg
and
gs
dec
push
inc
add
adc
cmp
ja
mov
cli
mov
cld
inc
out
jp
ja
int3
lds
ljmp
lea
inc
adc
in
sub
add
pop
in
and
lret
push
xor
es
es
gs
icebp
sub
sub
pusha
stos
stos
push
dec
mov
dec
addr16
lea
fwait
cltd
fldt
add
push
aas
jmp
inc
or
xor
and
int3
lcall
mov
pop
loopne
push
push
push
int
aaa
sbb
jbe
inc
cs
testb
ret
cmp
cmp
pop
push
das
testb
jmp
test
jmp
ret
adc
sbb
dec
imul
ljmp
sub
jp
das
or
push
or
enter
push
out
loopne
fisubs
imul
mov
sub
cmpsb
daa
inc
outsb
imul
dec
stos
arpl
dec
push
push
sub
aas
xchg
aam
movsw
push
push
add
stos
scas
inc
imul
adc
dec
xor
mov
pop
decl
inc
imul
mov
sub
imul
dec
clc
sub
in
sahf
pop
orb
inc
int3
or
sub
int3
or
dec
imull
pop
fildll
lds
dec
popa
sahf
outsl
dec
and
fsubl
dec
adc
in
pop
lea
pop
mov
dec
cmp
sub
in
stos
pop
xchg
dec
subl
cwtl
imul
dec
sub
adc
out
rcrb
mov
fstpl
cmp
dec
jle
push
xchg
jecxz
movsb
imul
or
shll
xchg
mov
add
scas
mov
scas
stos
repnz
imul
jae
aad
jmp
andb
icebp
fsubrl
test
add
xchg
movsb
mov
and
mov
mov
stc
insb
subb
add
jae
sbb
jmp
stc
jae
les
sbb
decb
push
xor
or
cmc
xchg
cmpsb
or
jg
add
in
ljmp
pop
mov
inc
mov
fildl
push
movd
scas
or
cmp
push
xchg
or
cmpsb
xor
data16
dec
sub
stc
and
subl
sahf
mov
jp
or
out
in
add
cmc
jmp
xor
scas
or
inc
enter
gs
jno
andb
jbe
add
jns
gs
fldt
or
rolb
cmp
into
add
xchg
or
out
ljmp
xchg
or
hlt
or
call
xchg
cwtl
out
stos
cli
jg
incb
jg
jno
push
lds
je
mov
imul
test
and
ss
js
shll
js
cld
push
in
loope
call
addr16
push
fbstp
mov
cmovbe
in
sub
pushf
movsb
xchg
stos
addb
outsb
lcall
xchg
out
mov
inc
in
mov
xor
sbb
push
sub
out
pusha
arpl
fsub
test
rolb
inc
cmp
pushf
mov
and
loopne
or
xchg
jo
jp
jo
andb
mov
int
xchg
jmp
nop
movsb
lret
adc
mov
mov
jne
pusha
lock
push
push
sti
sub
add
cld
dec
jg
stos
push
jno
fisubs
fists
rcrb
rcl
insb
jbe
in
movsl
sarb
in
ss
mov
sub
push
jbe
cli
jmp
ja
xchg
push
cs
shll
inc
pop
jns
andb
mov
mov
sub
incb
add
push
ja
xchg
push
cs
shll
xor
push
andb
scas
push
xor
push
je
dec
or
outsb
pop
pop
jbe
cli
jmp
loopne
shrl
jp
clc
add
outsb
lcallw
mov
mov
inc
lcall
pop
scas
call
out
cld
pop
in
test
dec
test
xchg
pusha
notb
shl
out
in
ror
stos
xchg
hlt
lcall
fimull
cmp
xchg
ljmp
jo
add
call
sarl
ret
mov
mov
pop
push
push
dec
sub
out
push
add
out
push
mov
pop
and
and
xor
out
inc
dec
jl
cld
pusha
pop
rcrb
arpl
or
decb
mov
test
shll
mov
vpsubusw
das
out
iret
adc
sbb
arpl
dec
or
fmull
aas
or
sub
ds
add
icebp
in
pop
or
sbb
hlt
out
sbb
push
push
push
in
add
repnz
in
pop
or
adc
cmc
adc
jge
jecxz
out
or
jle
ficomps
arpl
or
sub
mov
add
icebp
mov
mov
in
add
aaa
fcomi
out
mov
lret
loopne
mov
loopne
cld
jb
popf
lods
push
add
add
daa
repnz
lret
xchg
cs
movsb
or
les
jle
xor
sbb
adcb
sti
imul
push
scas
sub
and
add
sbb
cwtl
cmpb
mov
add
mov
push
or
sti
pop
and
imul
add
sub
pop
fldt
xor
call
or
fcoml
fcompl
lahf
adc
cmp
mov
push
int
lds
cwtl
add
cmp
inc
in
mov
loopne
into
cld
in
xor
daa
les
shrb
cmc
stos
lds
xlat
lcall
or
push
aaa
dec
aad
xor
fcmovnu
dec
add
xlat
xor
cld
sub
or
into
xchg
insb
faddl
cmpsb
adcb
add
xor
popf
mov
pop
cmp
and
and
out
sti
inc
in
or
xlat
jmp
or
dec
icebp
mov
int3
ficoms
inc
ljmp
sub
in
in
xor
fwait
push
xchg
xchg
jp
ret
push
in
push
loope
leave
daa
sub
cmc
sbb
mov
dec
stos
push
out
dec
dec
enter
add
aam
xchg
adc
ljmp
xchg
push
xchg
call
ret
fildll
mov
cmp
and
sbb
imul
sbb
arpl
stc
pop
in
jns
cmp
cli
dec
mov
dec
stc
sub
pop
out
dec
jl
stos
mov
jge
jecxz
in
pop
sub
mul
adc
push
popf
inc
pop
mul
adc
pop
stos
fcoml
out
adc
pop
xor
pushf
test
mov
adc
outsl
mov
stos
cwtl
movsl
xor
mov
push
movsb
test
cmp
sbb
push
add
adc
sub
ss
jne
pop
sbb
dec
pmulhuw
ds
out
dec
pop
imul
jno
push
imul
pushf
rorb
movsb
sbb
jg
jns
rorb
cwtl
rcrl
inc
mov
jns
jmp
xor
cld
or
jb
sub
mov
imul
popa
sarl
imul
sti
push
fs
lods
pop
mov
loop
or
push
shrl
or
imul
imul
clc
dec
xor
repnz
movsl
leave
imul
cmp
xor
loope
cltd
jg
ja
or
daa
xchg
xchg
ss
fisubrs
imul
lock
sub
leave
lock
pmaxsw
add
lock
cmp
dec
or
jne
out
sahf
push
xor
or
leave
dec
cwtl
lock
or
add
dec
sub
add
xchg
or
je
les
dec
adc
fdivrs
cmp
lock
and
lock
imul
into
jle
je
imul
mov
lock
push
push
sub
lock
xor
add
xlat
xchg
fwait
fbstp
jae
fsubp
pop
cld
scas
sbb
fsubl
sub
cld
sbb
xor
in
idivl
sbb
pop
mov
outsl
xor
pop
cmp
jg
pop
lock
push
or
cs
inc
dec
sub
jmp
scas
scas
jl
mov
pop
inc
add
loopew
scas
xchg
loope
jns
dec
lret
and
pop
in
push
and
jle
lahf
rorb
sub
movsb
scas
pop
push
or
js
and
mov
fdivr
xchg
enter
jno
or
push
outsl
xchg
and
add
lahf
mov
cld
lea
cmp
rolb
and
pop
adc
or
fs
out
jecxz
cmp
and
dec
loope
push
leave
push
lds
mov
stos
cld
mov
js
mov
jno
cld
bound
loopne
cli
cwtl
dec
or
jmp
scas
mov
mov
test
jle
or
jmp
push
test
push
pop
jne
in
inc
mov
xchg
cmc
outsb
scas
jp
fs
dec
test
arpl
cmp
out
or
xchg
jmp
addr16
sbb
sbb
shll
jmp
and
jo
add
push
push
mov
jno
cmp
fs
pop
mov
cli
ljmp
lcall
lahf
mov
jge,pn
gs
popa
jb
adc
aas
mov
jb
int3
push
bound
push
push
add
push
push
jb
insl
cmp
gs
aas
rcrl
in
dec
pop
test
pop
insl
popa
arpl
and
hlt
mov
xor
in
xor
pop
std
mov
gs
push
mov
in
aad
addr16
jp
fmull
mov
repnz
adc
imul
jae
push
and
xor
shr
arpl
mov
mov
pop
test
add
mov
movsb
fnsave
aad
ss
mov
or
push
pop
sbb
sub
pop
xor
push
mov
mov
sub
je
fidivs
jmp
add
or
fs
arpl
stos
push
je
xchg
lods
mov
push
pushf
adc
decl
mov
push
lret
push
sub
mov
mov
jae
dec
test
ss
loopne
sbb
dec
adc
in
in
jae
loope
in
jno
inc
jae
outsl
fsubs
cmpb
jae
mov
test
xor
lods
scas
hlt
push
sahf
repz
push
jae
shl
push
sub
call
or
adc
leave
sub
arpl
insb
repz
sbbb
dec
or
ss
insb
call
movsb
dec
add
fnsave
aam
rcll
jnp
xchg
jge
lods
out
addr16
jae
cmp
test
les
and
int
stos
jecxz
fdivrl
int3
call
js
hlt
xor
push
mov
mov
jae
sub
push
jecxz
or
es
and
stos
rep
adc
pop
add
hlt
push
and
pop
xor
mov
out
outsl
dec
xchg
xchg
jbe
jnp
loope
in
insl
mov
dec
insl
fadds
jnp
cmpsl
gs
shr
jmp
icebp
out
imul
in
jae
xor
and
push
sbb
jae
in
mov
cmp
inc
mov
outsl
pop
repz
imul
dec
inc
in
jae
xchg
lea
sbb
cs
loop
shlb
repz
cmp
fdiv
jmp
cmpsl
push
je
out
int3
outsb
inc
movsb
jo
and
mov
lock
push
inc
dec
stos
push
repz
lods
xor
mov
jmp
lret
push
or
pushf
in
sbb
dec
mov
xchg
jae
sti
mov
inc
mulb
insb
mov
ss
add
or
push
fs
jae
imul
jae
cmp
out
sbb
js
push
jae
cmpsl
insb
pushf
addr16
popf
mov
out
dec
jae
or
pop
xchg
hlt
hlt
insb
popa
pop
pop
mov
pusha
jmp
xor
fs
push
dec
jo
ss
and
push
xchg
mov
sub
cmp
std
rcr
jae
rolb
jae
sti
cmpsb
jecxz
ret
lock
inc
sub
and
ss
cltd
jae
jl
fs
xchg
xor
and
popa
lret
lret
jecxz
or
fwait
aas
jae
arpl
addr16
and
pop
adc
xchg
sti
jae
jmp
fistpll
xor
mov
cld
xor
insb
sbb
cmp
or
fs
inc
jae
out
push
or
sbb
in
imul
jae
daa
testl
fwait
jnp
icebp
sub
lods
in
inc
fisttpll
insl
jns
xor
js
sub
mov
or
divb
mov
fistl
inc
int
dec
lahf
loopne
mov
call
jecxz
dec
mov
pop
inc
loopne
xchg
cmp
jae
cs
add
jle
mov
mov
push
adc
lea
scas
lcall
xlat
subl
dec
insl
shl
xchg
or
jb
test
mov
jnp
mov
repz
jnp
push
push
add
sbb
and
addr16
mov
mov
dec
push
pop
fisttps
hlt
pop
cmc
fsub
sub
cltd
das
daa
jbe
adc
imul
cmp
fiadds
mov
es
jl
or
outsl
and
test
xlat
jbe
push
xor
andb
pop
insl
or
inc
rclb
arpl
mov
dec
sub
addr16
popa
outsl
push
push
xor
dec
jle
cmp
mov
sub
xor
repz
adc
ljmp
cmc
lea
jmp
cmp
push
mov
arpl
imul
rcll
dec
sti
jo
popa
gs
mov
dec
popa
outsl
push
scas
dec
sub
mov
into
inc
jae
or
mov
add
inc
lret
into
push
insl
insl
add
int
in
xchg
sub
ss
sub
out
into
outsb
xor
add
fld
repnz
out
test
popf
out
jae
mov
fbstp
and
fiadds
xlat
popa
mov
lret
aam
cmpsl
das
adc
jp
fldl
push
mov
fsubrs
xor
cli
xor
sbb
push
out
mov
or
les
inc
orb
imul
enter
mov
add
jae
cmp
mov
jae
lret
movsb
jo
jge
enter
incl
push
fs
adc
lahf
jae
dec
mov
sub
lcall
out
insl
inc
sub
xlat
lahf
divl
stc
jp
std
jmp
lock
test
mov
jecxz
hlt
xchg
dec
jp
fdivl
jae
sub
mov
std
jg
lods
lahf
test
mov
jae
adc
push
mov
sub
mov
andb
rcrl
cmp
movsl
fdiv
fadds
jnp
aas
jl
jae
fwait
scas
jecxz
orl
jae
pop
nop
test
jae
aaa
adc
mov
lds
sbb
subb
sbb
loope
addr16
insb
mov
jae
test
push
or
push
pop
jae
and
sarb
jae
es
inc
adc
mov
sub
stos
cmp
jne
xchg
xlat
jl
sti
xchg
aam
test
and
loopne
jmp
jae
mov
arpl
inc
lods
xlat
or
scas
pop
push
xor
sbb
aas
dec
inc
jae
out
cwtl
adc
mov
sbb
lret
cmp
ror
xor
add
testb
jae
pop
aam
idivl
jae
scas
pusha
es
mov
jae
daa
sbb
cld
int3
add
push
mov
js
repz
aas
jo
jae
push
ja
pop
pop
cld
xor
xor
jg
int3
push
jmp
fwait
xchg
sbb
sarb
insb
inc
es
jae
mov
cmpsb
iret
mov
ja
ret
in
jp
loope
mov
mov
push
mov
lret
adc
mov
mov
cmp
add
inc
and
aas
imull
jae
in
lea
hlt
or
jle
xlat
addr16
stc
sub
mov
dec
fstpl
imul
xchg
push
cmp
xchg
dec
test
xchg
xorl
mov
cmp
xor
xchg
jae
push
xor
in
jae
adc
loopne
add
push
jne
add
jb
stc
in
xor
jae
push
addr16
aas
push
js
insl
movsb
adc
sbb
cld
jg
outsl
rcll
and
dec
push
mov
mov
clc
xlat
loopne
jle
fwait
cld
mov
push
daa
or
cmp
xor
divb
pop
movsl
ds
jp
js
out
xor
rcrb
cld
outsl
inc
call
pushf
test
scas
shl
clc
and
xor
add
push
int
cld
dec
or
push
outsl
jmp
and
js
mov
sub
xor
mov
and
outsl
adc
bound
mov
scas
add
cmp
test
lods
dec
popa
mulb
repz
repnz
mov
stos
es
int
or
in
sahf
mov
outsl
cmp
mov
adc
popa
sbb
dec
inc
hlt
pop
mov
aam
shrb
xor
outsl
clc
outsb
ljmp
loopne
arpl
call
or
jnp
mov
cld
sub
and
repz
dec
mov
pop
jne
in
cmovge
xchg
pop
dec
mov
push
xor
ror
push
cltd
push
and
sbb
sbb
sub
aam
fs
clc
and
pop
in
push
add
adc
xor
xor
adc
mov
pop
cld
bound
sub
dec
lock
and
dec
in
stos
pop
fwait
pop
pusha
mov
push
push
lret
and
int3
mov
mov
adc
inc
xor
push
aas
xchg
outsb
ljmp
lock
xor
sub
add
mov
dec
xor
outsl
jae
mov
fstpt
pop
sbb
lahf
xor
sub
movsl
mov
push
call
cli
or
or
xor
xchg
jmp
mov
inc
shrl
arpl
push
sub
dec
add
test
stos
and
or
insb
jae
push
loopne
test
jmp
imul
and
jb
insl
ljmp
lahf
lods
in
inc
outsl
lods
mov
jae
cld
push
inc
lret
jl
and
pushf
lods
stos
pop
lock
jns
lret
dec
mov
lock
pop
cmp
pop
push
in
pop
push
xchg
insb
dec
sub
push
cmp
and
or
insb
jno
jecxz
or
lock
pusha
imul
aad
cmpsl
or
xchg
jae
sbbb
outsl
movsb
lods
jae
lret
in
loop
push
sub
popa
cmp
push
jae
lods
arpl
loope
xor
in
outsl
addl
mov
addb
int3
insb
jmp
fisubl
inc
mov
in
xor
dec
clc
jae
insb
test
daa
xor
pop
in
out
push
xor
add
cmp
ret
test
lea
inc
push
push
loop
adc
fwait
xor
adc
fdivp
push
mov
dec
xor
ljmp
mov
add
and
dec
adc
repz
xchg
int3
in
out
outsl
push
xor
pop
push
mov
insb
les
shrb
insl
mov
lret
in
andb
arpl
addr16
mov
mov
sub
pop
or
movsb
repnz
out
jae
jl
insl
gs
sbb
dec
icebp
aam
jae
cmp
mov
fsubl
cmp
fwait
dec
sub
or
xchg
enter
jae
jp
orl
movsl
inc
lock
shl
popa
push
cmpsb
lods
jae
call
mov
push
mov
in
inc
dec
sti
addr16
das
fnsave
gs
fsubrl
insb
scas
cmp
fwait
mov
push
rcr
addr16
sub
adc
pop
mov
mov
jae
gs
imul
data16
mov
jae
cmp
and
or
rcrl
sbb
or
hlt
jnp
pop
jnp
xor
in
jae
push
jnp
push
mov
or
adc
mov
insb
insl
xor
arpl
inc
cs
jns
hlt
push
adc
sbb
sbb
repz
iret
mov
or
out
imul
and
or
push
adc
jnp
xor
insl
sbb
push
mov
xchg
icebp
xor
outsb
push
ret
xchg
lods
sub
es
arpl
dec
movsl
jecxz
sbbl
imul
xor
push
je
loop
xor
enter
xor
push
imulb
dec
aaa
testl
jnp
insb
push
clc
or
loope
mov
mov
mov
push
xor
popa
inc
repz
xor
shr
pop
lods
xor
fidivs
mov
imul
shrb
in
xorb
xchg
out
xor
jle
imul
or
push
lods
xchg
add
sub
push
jae
adc
popa
mov
jae
fisttpl
sahf
jle
mov
xchg
add
scas
ret
jae
mov
xor
push
insb
push
insl
je
xchg
movsb
int3
jae
push
stc
test
jl
test
mov
repz
fstpl
push
or
shl
rep
or
xorl
clc
and
jmp
pop
jae
jmp
iret
in
sbb
out
setnp
xorl
pop
mov
sbb
add
shlb
adc
xchg
inc
and
addr16
jae,pn
popa
dec
out
into
sub
or
outsb
and
mov
lods
pushf
xchg
mov
jbe
rcr
mov
dec
or
mov
jae
dec
or
push
or
lea
add
sbb
adc
shrb
mov
cmp
dec
jle
repnz
mov
popa
test
js
cmp
sbb
dec
bound
addr16
xchg
fcomps
mov
xchg
cli
movsb
test
mov
subl
jle
adc
cmpb
notrack
jae
repnz
and
and
cli
out
inc
stc
dec
mov
mov
or
imul
push
jae
mov
add
or
insb
inc
push
dec
nop
sbb
mov
xchg
mov
pop
gs
movsl
xchg
add
sub
test
lock
cmp
and
xchg
inc
mov
cmpsb
push
jae
shrl
rcll
repnz
test
fists
inc
mov
jae
push
pop
cmc
mov
je
orl
mov
xor
inc
insb
xor
in
ss
fdivl
cmpl
add
xchg
jae
movsb
aaa
repnz
push
xorl
dec
push
insl
jae
fstps
sahf
rcrl
or
repz
repnz
cmp
xlat
stos
roll
out
add
add
jae
xchg
in
add
movsl
dec
xorl
and
add
jae
sbb
lcall
fwait
icebp
in
push
inc
add
fimuls
ljmp
repnz
fs
in
int3
fiadds
andb
enter
cwtl
orb
aas
aad
pusha
pop
pop
imul
data16
aam
stc
inc
scas
xor
dec
cltd
add
shlb
mov
ret
inc
in
inc
jae
push
sub
icebp
lret
jecxz
add
xor
inc
scas
sub
xchg
push
or
inc
mov
loopne
xor
orl
imull
ja
push
cmp
push
and
push
or
pop
xor
mov
mov
inc
sub
out
pop
es
jae
popa
inc
or
imul
xchg
mov
and
add
xchg
fmull
dec
dec
inc
push
dec
je
xchg
jae
ficompl
jae
in
sbb
xchg
jae
std
add
xchg
js
imul
mov
pop
popa
sub
jl
jle
ret
adc
mov
dec
mov
adc
insl
mov
leave
mov
sbb
mov
cli
cli
cmpsb
cmpsl
jae
insl
sti
icebp
push
or
push
inc
xchg
scas
jecxz
out
add
arpl
lock
add
mov
mov
or
mov
inc
adc
xorl
imul
enter
and
jle
test
jae
add
inc
push
fnstsw
jae
bound
push
jae
imull
call
and
lock
std
aam
xchg
add
push
sbb
test
scas
insb
fistl
adc
and
mov
sbb
je
mov
repz
xor
adc
xchg
dec
fcmove
xchg
cltd
adc
imul
mov
imul
es
out
xchg
ljmp
jae
add
sub
pop
scas
sub
xor
aaa
pop
jg
mov
xchg
sub
or
mov
sbb
mov
cltd
push
pop
jae
add
sub
jae
ret
dec
int3
adc
jae
movb
pop
jnp
insl
sbbl
dec
xor
mov
sbb
stos
filds
cmpl
cmp
push
xor
movsb
or
cli
jae
fstpl
push
out
in
and
test
rcr
fldt
or
popa
xor
sbb
aas
jmp
inc
add
cmp
push
dec
mov
jae
mov
fidivl
jns
je
into
clc
xor
out
adc
arpl
rcrl
xchg
jb
rol
push
xlat
dec
or
xchg
fidivs
and
or
inc
sahf
jbe
cmpl
in
add
int3
xor
adc
lods
inc
pop
loopne,pn
dec
mov
jnp
outsb
call
jae
sub
enter
or
sub
xchg
ja
pop
addr16
dec
enter
out
mov
or
sub
inc
inc
sub
or
dec
sub
cli
jmp
push
lock
insb
dec
mov
add
jae
push
adc
xorl
andl
repnz
mov
mov
jae
push
push
dec
test
int
cltd
xchg
pop
mov
cmp
pop
mov
xor
lock
cmp
jae
mov
jae
setno
pop
xor
loopne
xor
mov
in
lds
and
aam
push
or
outsb
in
push
data16
loop
jae
fisttps
pop
jae
mov
in
push
clc
in
dec
pop
mov
or
out
pop
outsl
mul
cmp
mov
imul
mov
pop
ss
jbe
add
mov
mov
jae
mov
inc
push
jae
mov
push
pop
xor
jae
sti
aam
aaa
ljmp
jns
mov
scas
dec
leave
fldt
sbbb
or
loop
repz
and
jae
mov
fildl
mov
int3
and
and
inc
jp
add
cmp
mov
dec
rcrl
cmp
xor
dec
imul
loop
fildll
push
adc
jne
or
lahf
outsb
rcr
mov
insl
mov
mov
lods
mov
push
cli
stos
mov
xchg
shll
rclb
das
pop
jns
repz
sub
cld
pop
jecxz
push
sbb
imul
xchg
jb
dec
jae
mov
sbb
es
mov
lcall
loope
xor
ret
push
cltd
pop
in
push
jae
pop
cmpsb
xlat
fsubs
scas
sbb
arpl
jae
clc
movsb
popa
daa
mov
mov
mov
dec
stc
mov
pop
lock
pop
xchg
xchg
jb
inc
insb
sbb
loope
xor
and
imul
pop
and
dec
sub
xchg
pop
test
jmp
mov
hlt
dec
addr16
mov
mov
cli
mov
add
push
dec
mov
lcall
orl
out
xchg
jae
or
call
xor
dec
jae
sarb
ljmp
mov
xchg
lret
lods
cli
cmp
pop
insl
rcll
or
popa
into
jnp
daa
push
int3
dec
shrl
dec
jae
mov
push
pushf
into
cmovl
adc
mov
cli
mov
ss
inc
fistpl
aas
pop
mov
insl
aam
aad
xchg
movsb
adc
lret
in
in
jae
push
mov
xchg
cmpsb
ret
sbb
lret
pop
pop
jae
add
daa
dec
stos
mov
push
mov
insb
stos
scas
lahf
jae
popf
xchg
push
out
or
out
into
jae
cmpsb
xchg
inc
mov
sti
out
inc
jb
xorb
cmc
mov
xor
jae
mov
jae
fsubp
loope
test
cmpsb
cld
inc
cwtl
insb
push
sahf
sbb
xchg
xchg
dec
repz
push
mov
idivl
call
test
mov
xchg
test
and
ror
sti
pop
loop
dec
loope
scas
pop
call
push
fldt
imul
mov
cmp
lock
and
pop
push
adc
adc
outsl
outsb
popa
inc
out
popf
ret
xor
adc
mov
fldenv
int3
gs
sbb
cltd
je
jnp
xchg
adc
insb
xor
xchg
dec
sub
mov
inc
adc
inc
xchg
mov
push
adc
mov
shlb
jae
mov
pop
pop
jae
or
cmpl
jae
lds
call
jg
sub
lret
outsb
ror
stos
xorb
daa
cmpsl
mov
and
in
ret
xchg
cmp
jae
das
push
jg
sbbb
or
mov
push
jo
cltd
jecxz
pushf
mov
into
pop
adc
out
mov
cli
inc
ret
mov
jae
xchg
imul
mov
in
lcall
jo
out
xor
sub
stc
sub
stos
jae
pop
cmp
addb
xchg
nop
test
roll
aas
cmp
das
aaa
mov
fstps
popa
adcl
mov
dec
test
jne
push
push
sub
inc
sub
sbb
icebp
jae
sub
aas
xor
adc
xor
xchg
mov
sub
cmc
test
sarl
dec
mov
sbb
inc
push
sbb
adc
lret
lahf
fnsave
jge
andl
test
loopne
push
sbbl
mov
leave
xchg
or
jae
mov
rcll
gs
xchg
in
insl
push
push
push
pop
stos
sbb
pop
orl
insl
shl
insl
aaa
jnp
in
jnp
jmp
pop
inc
mov
imul
push
mov
xchg
jmp
cli
fucom
mov
jae
cld
pop
fs
add
push
jae
add
fcmovb
jns
mov
movsl
sub
xchg
fs
or
push
dec
idivb
shl
fstl
push
or
adc
mov
add
cmovo
jae
sub
push
out
repnz
js
pop
jae
mov
jbe
fwait
shrb
int
rolb
jns
adc
mov
xchg
and
es
ss
xchg
insb
or
xor
es
aas
jae
pop
leave
mov
fsub
test
or
jae
dec
lods
pushf
add
popa
inc
xor
xchg
mov
scas
inc
rol
stos
jecxz
xchg
clc
inc
fabs
pop
sub
fistl
xor
xchg
subl
sbb
dec
imul
add
mov
jae
mov
into
jge
xchg
inc
sbbl
jae
mov
jb
or
sbb
shll
xchg
arpl
lods
outsb
stos
mov
divl
out
mov
gs
addl
roll
dec
jne
cmp
xchg
pop
sbb
sbb
or
push
scas
leave
xor
scas
popa
jae
inc
sub
into
inc
sub
aam
rorb
mov
in
imul
cltd
outsl
jb
jg
sti
int
orl
insl
mov
out
outsb
sub
push
mov
add
mov
adc
sub
jae
mov
insb
push
xor
scas
in
dec
sbb
je
cmp
insb
mov
sub
pop
shlb
sbb
mov
push
sub
jg
es
loope
insb
js
or
jae
shlb
mov
inc
add
shll
xlat
loop
and
cmc
jae
xchg
mov
inc
scas
add
iret
push
xchg
xor
shlb
mov
add
sbb
in
mov
jae
mov
mov
jae
mov
pop
or
fidivl
jnp
test
jae
pop
imul
pusha
das
shll
jae
sbbl
and
mulb
arpl
or
sbb
enter
dec
jle
int3
pop
je
xchg
adc
jl
cld
vfrczss
jecxz
push
sbbl
nop
add
jae
cmpsb
fisttps
or
insl
aam
aaa
lea
adc
and
incl
or
cli
nop
pop
jae
hlt
mov
loope
jae
call
mulb
sub
fbstp
rorb
jae
xchg
pop
xlat
sbb
mov
jae
test
shlb
inc
or
sbb
mov
fdivrs
xchg
testb
jae
sub
js
or
shlb
add
mov
pop
dec
shll
pop
fnstenv
add
and
testb
pop
iret
xor
mov
shll
push
jae
mov
jnp
test
xchg
das
ljmp
pop
fisubrs
jae
hlt
sbb
daa
jae
jnp
mov
mov
mov
roll
bound
lahf
ds
pop
jae
repz
adc
push
cmp
or
cltd
push
sbb
sbb
or
push
xor
sahf
loope
xchg
into
jae
movb
jg
andb
and
xchg
sti
aam
mov
push
and
xchg
push
enter
sbb
jo
dec
leave
jns
push
scas
xor
icebp
outsb
mov
int3
outsl
mov
xchg
sub
gs
mov
hlt
mov
push
ret
ljmp
and
idivl
xlat
repz
mov
pop
int
sbb
test
leave
out
add
lcall
or
xchg
pop
popa
loope
icebp
test
addr16
in
mov
arpl
and
jae
mov
iret
inc
sub
inc
das
sub
sti
lea
adc
adc
adc
add
push
dec
sbb
les
scas
outsb
dec
sub
xchg
xorl
sbb
fstl
push
dec
jae
mov
in
mov
cmpsl
ja
xchg
imul
xchg
push
ljmp
aad
push
and
pusha
test
sti
and
scas
rorb
jae
stc
popf
outsb
lds
stos
into
jae
or
cli
out
fstpl
xchg
jae
dec
loop
push
ss
enter
cmovno
jae
lcall
js
jae
mov
inc
out
and
jae
xchg
jl
pop
jp
cmpsl
jae
icebp
mov
or
mov
iret
sbb
xchg
jae
pushw
hlt
lret
icebp
jae
add
call
jae
fisubs
xor
mov
jbe
pop
test
dec
xchg
movsl
jge
in
out
cmc
subb
and
jae
sahf
test
repz
fs
lods
adc
loop
lock
lret
rcll
aam
scas
mov
mov
xchg
hlt
stos
push
pop
and
icebp
push
xchg
xchg
inc
sahf
mov
cmpsb
add
dec
add
fsubs
sub
je
lds
jae
cld
mov
jae
cmp
mov
jae
rol
subl
or
xchg
mov
jae
push
jmp
je
sbb
aas
xchg
pop
pop
jg
jmp
ss
dec
jae
data16
scas
mov
jae
mov
add
sbb
out
dec
mov
xor
daa
xchg
repz
xchg
xlat
adc
dec
int
jle
loopne
inc
sub
ret
scas
mov
mov
jae
sub
hlt
lahf
jge
cmpsb
jae
jo
aad
mov
es
iret
cmp
lret
daa
out
cmpsl
outsl
je
shlb
jae
xor
mov
sub
jl
push
xor
repnz
pop
jae
fwait
cmp
mov
add
stc
jae
xchg
jo
inc
pop
jbe
sbb
sub
fdiv
int3
icebp
inc
mov
mov
mov
add
cmp
loopne
jae
fcomp
lds
ss
movsb
xchg
lea
xorl
jae
dec
in
sbb
push
outsb
and
cmpsb
xchg
stc
je
popa
out
push
push
dec
jae
fwait
test
cs
clc
push
cmp
out
sbb
or
jae
jmp
js
sub
or
leave
clc
in
pop
cld
sbb
rolb
jg
sbbb
xchg
insl
pop
fisttpll
push
out
and
ds
jge
fwait
sbb
push
insb
adcb
jle
insb
cmp
test
lds
lahf
push
or
ja
and
pop
dec
jae
int
sbb
pop
test
jae
push
dec
and
movsb
add
adc
xor
jp
push
popa
pop
xchg
mov
addr16
fsts
pop
adc
rolb
pop
xor
adc
pop
lret
mov
jae
cmpsb
jp
sbb
aad
jae
lcall
mulb
les
dec
xor
inc
mov
wbinvd
int
shrl
pop
rcr
mov
insl
js
insl
cli
test
mov
or
jns
xchg
cmc
repnz
inc
mov
push
sbb
iret
push
lcall
and
mov
insl
mov
inc
lret
or
inc
jno
jl
sub
sbb
shrb
pop
xchg
and
sbb
shll
and
movsl
fstpt
cmpsb
xchg
popa
stos
test
sub
mov
in
gs
pop
xor
add
pop
out
flds
hlt
imul
mov
popa
pop
cmc
popa
sahf
popa
xor
push
aaa
cmc
imul
inc
sub
inc
mov
sub
or
movsb
imul
sub
sub
addr16
mov
mov
into
enter
data16
aas
in
pop
xor
cmp
jmp
call
jae
xchg
loope
shll
cltd
das
jl
clc
xchg
popa
pop
cmpsl
js
xchg
rcll
fisttpll
arpl
and
push
imul
call
jle
insl
sbb
mov
mull
jae
lods
pop
lcall
int3
gs
dec
mov
aam
sub
add
mov
repz
mov
scas
mov
mov
insb
call
xchg
dec
insb
jns
xor
push
and
xchg
lods
xchg
jmp
push
mov
add
iret
leave
push
pop
insb
dec
cs
inc
mov
jae
xor
popa
cmpsl
nop
dec
into
lods
test
xchg
jo
pop
add
cmp
mov
jg
jnp
imul
jg
jecxz
popa
jae
jmp
push
rclb
dec
lahf
sbbl
es
in
dec
inc
mov
fisttpl
push
orl
dec
repnz
cmpl
cmpl
insl
pop
pusha
rorl
out
mov
test
sub
rcll
cmovae
data16
pop
addr16
imul
xchg
jae
jb
push
pop
out
lea
cmp
xchg
jb
jae
push
adc
mov
push
jae
rcll
loope
and
fdivs
or
int
adc
jae
rcrl
mov
mov
inc
xchg
mov
or
xchg
adc
shlb
mov
mov
out
in
jae,pt
xchg
gs
idivb
and
bound
jg
push
test
sub
sahf
mov
xchg
xor
add
flds
jae
pop
icebp
cmp
mov
popa
movsb
push
scas
pop
test
dec
aam
notl
cwtl
sbb
mov
push
mov
push
popa
mov
xor
mov
and
movsb
cwtl
pop
push
pushf
ds
push
pop
add
push
sbb
jne
shlb
dec
in
insl
mov
push
sti
push
pop
adc
mov
lret
cli
outsl
fs
scas
repz
inc
insl
and
or
enter
jl
jle
cmpsl
imul
test
dec
js
mov
pushf
gs
jge
inc
sub
jp
pop
leave
jb
push
adc
dec
jae
mov
mov
cmpsb
adc
xor
mov
cltd
pop
lret
popf
fwait
aad
insl
repz
xor
out
imul
jnp
push
subb
or
adc
xor
jnp
popf
jae
sbb
icebp
or
jb
ja
sahf
mov
sbb
xchg
dec
roll
dec
fldcw
push
in
lret
mov
push
insb
add
pop
imul
ds
hlt
and
call
jae
rclb
jecxz
jmp
stos
mov
scas
xchg
imul
pop
pop
gs
ds
sub
fistl
jae
jnp
stc
push
fldenv
jo
ja
inc
jae
mov
mov
in
iretw
fdivl
xchg
mov
fdivs
call
inc
mov
push
pop
hlt
ret
mov
andb
mov
scas
xchg
or
bound
lret
jmp
call
iret
jae
xlat
dec
jns
mov
stc
pop
shll
stos
cmp
cld
icebp
imul
pusha
pop
jae
push
pop
fdiv
aas
cwtl
jmp
daa
jae
lds
fstl
and
sub
and
or
call
jmp
aam
out
adc
in
cmc
adc
cmp
pop
loop
mov
jae
aaa
xchg
rorb
ljmp
mov
dec
sbb
inc
loop
jae
cmp
int3
jecxz
push
imul
push
add
add
icebp
daa
popf
mov
addr16
jae
sub
mov
imul
dec
and
push
mov
stos
repnz
das
sbb
pusha
pop
popa
out
add
sub
jae
movd
jae
jge
lret
pop
jg
pop
jae
jns
mov
outsl
in
data16
pop
push
in
popa
mov
pop
mov
jb
pusha
pop
leave
imul
dec
std
cli
mov
adc
out
sbb
adc
mov
in
and
inc
es
pushf
mov
movsb
mov
mov
in
faddl
push
mulb
testl
cmp
and
pop
xchg
movsl
das
popf
stos
sub
pop
jns
ja
pop
pop
mov
dec
test
divl
out
test
call
pop
or
mov
xchg
push
mov
ret
lahf
sub
adc
cld
test
add
ret
cli
daa
stc
and
fdivs
pushf
ss
adc
fstpt
mov
fs
cmpsl
xor
inc
dec
xlat
push
mov
adc
fwait
in
jo
add
or
pop
sbb
jae
fisubl
mov
sub
jae
jb
mov
cmp
cmp
inc
pop
push
sub
sub
pop
add
pop
repz
dec
in
mov
cmpsl
jg
data16
sub
nop
movsb
fcoml
cli
in
test
push
lods
imul
dec
outsl
popa
jb
sbb
sbb
pop
dec
iret
into
js
sahf
out
scas
rep
sub
call
sbb
popf
mov
push
mov
xchg
scas
dec
push
lods
int3
dec
mov
into
adc
in
das
xchg
xchg
push
mov
jle
out
popa
fdivrs
jb
pop
fnstsw
shlb
lods
aaa
xlat
and
out
pop
jae
mov
jae
rol
nop
in
dec
pop
xor
clc
dec
push
pop
xchg
xor
ja
lods
cmp
icebp
and
add
add
cwtl
aad
fnstenv
dec
adc
sub
and
mov
in
add
jnp
mov
xor
insb
clc
scas
mov
fdivrl
and
jae
mov
jns
inc
sbb
cmp
loop
and
call
fimull
xor
xchg
aas
mov
adc
mov
lds
out
popa
xor
mov
pop
popa
jae
jle
call
push
or
add
test
jae
test
mov
jae
testb
push
scas
add
cmp
btr
and
push
jae
fldenv
sub
popa
pop
xor
dec
inc
sti
jae
repnz
mov
insl
lret
sbb
mov
jae
mov
and
stos
leave
jae
mov
push
test
mov
in
jle
addr16
xor
xor
or
mov
lret
jnp
sub
adc
mov
add
incl
jae
js
sub
fnstenv
push
jae
xchg
xchg
inc
cmp
xor
and
insl
scas
scas
cmpsb
sub
lret
out
mov
or
nop
mov
inc
arpl
rcrl
je
fdivl
and
stos
dec
stc
jns
mov
pop
sahf
sub
fsubrs
sub
mov
imul
pusha
push
lcall
mov
adc
rolb
pop
jae
fidivrs
inc
or
jne
test
js
mov
sub
push
and
jae
dec
adc
or
repnz
jae
dec
ror
movsb
inc
lahf
push
jae
jne
lret
pop
es
or
cmp
jae
push
mov
push
push
cmp
inc
cmp
push
pushf
jae
sti
bound
test
jle
or
mov
rcrb
negl
mov
test
sbb
sub
jae
jecxz
or
xchg
jne
add
fldl
ljmp
jo
jg
pushf
jmp
ror
out
adc
xor
dec
push
es
xchg
xchg
aas
aaa
insl
popa
inc
and
call
xchg
and
repnz
gs
jp
and
lea
push
gs
mov
fisttpll
movsl
add
pop
adc
jl
push
jae
clc
lock
ss
test
mov
iret
xor
loopne
into
insb
addr16
lds
mov
or
push
repnz
mov
shll
xchg
jae
test
movsb
mov
add
adc
pusha
add
call
lret
mov
and
and
adc
jae
fwait
in
fistpll
fdivr
dec
mov
mov
inc
sbb
iret
jae
and
lcall
push
sbb
mov
add
cli
clc
jae
xor
stc
jg
cmp
popf
rorl
mov
push
cmp
jae
out
pop
jl
xor
jae
ret
imul
push
sahf
jnp
pushf
stos
adc
jae
fldcw
fsubl
sbb
ds
cmp
mov
inc
mov
lret
punpckldq
in
enter
jae
pop
sub
cmc
mov
dec
insl
cmp
mov
pushl
pusha
loope
hlt
repz
int3
jae
lea
jle
xor
mulb
cld
pop
les
cs
mov
push
xchg
fucomi
mov
push
repz
inc
jae
loop
push
movsl
sub
pop
fs
fmulp
cmp
inc
fstps
adc
jae
into
or
push
jae
cmc
mov
lahf
jae
xchg
jnp
stos
sub
adcb
lret
loope
jg
mov
daa
hlt
xchg
rcll
lds
and
loopne
or
cs
and
ja
push
inc
flds
inc
test
pop
bound
loop
push
mov
and
cmp
sbb
or
imul
push
and
popa
pop
sbb
add
xor
pop
inc
inc
sbb
adc
jae
pop
movsl
mov
aam
xor
in
mov
xchg
lock
repnz
inc
in
cmpsb
movb
mov
inc
adc
mov
leave
repz
imul
rolb
call
cmpsl
sbb
push
xor
adc
xchg
cwtl
mov
jae
xchg
mov
sbb
mov
mov
leave
pop
adc
xorl
sbb
icebp
jo
jae
push
testl
sub
xchg
pusha
lret
sbbb
movsb
fnstcw
lds
sti
ja
fwait
cmc
mov
cmpsl
fistps
sbb
scas
xor
cmpsb
jl
sbb
imul
inc
fidivl
rcrb
sbb
sti
out
pop
jae
mov
sbbb
xchg
andl
jns
sub
xchg
xchg
cltd
add
mov
mov
test
sbb
adc
hlt
pusha
mov
nop
testb
pop
adc
add
nop
sub
stos
xchg
in
imulb
test
adcl
xor
dec
push
pop
imul
into
adc
xchg
repnz
test
out
cmp
cwtl
lcall
mov
cmpb
pop
or
lods
aas
cld
jae
or
cs
sub
jae
and
sbb
mov
push
lret
pop
dec
in
insl
jmp
in
sub
icebp
out
outsb
imul
notrack
xlat
pop
hlt
aad
sti
ficomps
ja
xor
sub
int
out
xchg
out
xlat
and
add
and
push
pop
cld
add
cli
dec
mov
call
repnz
ret
push
scas
movsb
jb
mov
cld
nop
js
adc
xchg
xchg
mov
and
mov
mov
xchg
fsubr
mov
pop
pop
sbb
xchg
iret
stc
adc
pop
ljmp
push
sub
ja
sub
xorb
mov
dec
popa
data16
push
push
dec
xchg
or
pop
jle
jae
sub
scas
xchg
xchg
cmpsb
mov
sbb
fucomi
int
fadds
fdivrs
push
insl
insb
sub
fcoml
sti
popa
aas
pop
js
les
dec
lock
mov
testl
mov
jg
mov
mov
shll
mov
int3
jns
jmp
add
mov
sub
scas
sub
notl
loope
frstor
arpl
in
arpl
enter
or
rcrl
sbb
into
clc
cmp
or
pop
mov
std
and
aad
mov
mov
std
iret
push
add
jno
lock
jmp
bound
xchg
scas
mov
xor
repnz
leave
add
scas
aas
int
adc
xor
les
ret
inc
mov
sub
rol
bound
jmp
fistps
js
call
inc
sti
jecxz
fmul
dec
or
pop
xchg
sub
test
fs
xchg
cltd
push
shrl
fistpl
movsl
mov
xor
popa
notl
and
dec
ss
xchg
in
or
add
cld
bound
add
pop
jb
pop
inc
push
pusha
call
add
push
movsb
add
add
pop
repnz
cmc
lods
filds
sarl
add
xor
add
mov
pop
push
cmp
mov
xchg
rcrb
push
test
add
or
jo
inc
sbb
mov
fwait
test
and
int
adc
push
test
push
mov
push
sbb
and
negb
sub
ja
pusha
pop
sub
mov
cmpsl
jmp
loopne
daa
lcall
leave
shrl
and
stos
sub
js
inc
hlt
nop
inc
push
aam
call
dec
sub
sub
and
and
or
sti
add
sub
mov
outsl
add
out
xchg
pop
push
je
push
sarl
das
mov
aam
add
mov
fs
fs
pushf
pop
aas
inc
loopne
pop
insl
insb
out
or
aaa
inc
and
and
and
and
and
and
and
and
dec
mov
jge
inc
cld
push
clc
in
cmc
addr16
es
es
sub
cmpsb
mov
in
je
mov
faddp
aam
inc
jno
cld
insl
mov
arpl
popa
cs
pushf
popf
mov
mov
push
add
aad
xor
je
mov
xchg
cmp
fs
addb
add
pop
add
or
enter
jb
push
mov
lret
cmpsl
lgs
dec
inc
cmp
das
lods
cmp
cli
cmpsb
sbb
jbe
xchg
scas
cld
popa
add
fisubrs
ljmp
push
lods
in
dec
test
cmp
arpl
fdivrl
pushf
mov
pop
out
aaa
repz
ret
ljmp
lods
mov
and
arpl
lea
popa
call
inc
fsubrl
repz
cmc
dec
lret
in
jb
call
dec
hlt
movsb
dec
adc
jo
out
sbb
test
repz
mov
repz
sbb
lods
sub
fists
pause
or
mov
cmc
xor
lods
fsubrs
sbb
repz
imul
in
cmpsb
repz
push
repz
mov
fsub
in
sti
lret
cmp
std
lahf
or
hlt
repz
dec
insb
imul
cmp
mov
in
sbb
outsl
push
imul
inc
dec
repz
and
jae
xor
xor
std
sub
imul
xor
movsb
stc
in
jle
inc
test
dec
and
fildll
push
mov
insb
mov
imul
inc
in
arpl
call
dec
push
mov
outsl
dec
fucomip
sub
xor
xchg
pop
movsb
stos
jp
mov
and
repnz
movsb
popl
out
jle
insb
fldl
adc
or
mov
and
mov
das
adc
les
sub
xchg
stos
fildll
dec
insl
inc
int
mov
adc
cmp
xor
cs
mov
sub
call
aaa
and
ljmp
daa
sub
clc
mov
gs
imul
jo
mov
aaa
out
insb
out
loopne
jae
add
and
mov
mov
repz
les
sub
mov
arpl
loop
loop
adc
call
aam
dec
sub
xor
rorl
fmull
pop
frstor
add
push
or
xchg
sahf
inc
push
or
push
push
sbb
adc
fstps
stc
adc
or
mov
in
sub
arpl
sub
in
testb
mov
stos
sbb
lahf
test
jg
imul
fstpt
push
push
repz
xchg
push
daa
mov
lock
daa
fimuls
inc
sub
jg
int3
nop
jns
imul
jno
loope
and
imul
jns
or
jnp
jns
out
push
aaa
or
in
or
mov
cld
jg
hlt
cld
xchg
push
push
mov
fs
cmpsl
jns
sahf
in
xlat
xchg
shll
inc
jg
xchg
jge
push
cmpl
stos
lea
cmp
andb
dec
insl
test
pop
dec
and
xlat
mov
rcrl
mov
jle
sub
cmpl
and
cmp
sbb
outsb
stos
mov
and
push
pop
lods
jmp
or
jg
pop
mov
outsl
ljmp
xchg
pop
jge
and
mov
mov
pusha
mov
faddl
adc
cs
jecxz
cli
mov
pop
push
mov
lret
push
or
arpl
mov
adcb
add
pop
mov
jb
sbb
cwtl
shll
add
insb
outsb
lea
jge
add
je
jp
dec
sub
dec
int3
push
sbb
dec
arpl
in
sub
cs
push
fcoml
jne
inc
adc
icebp
dec
jnp
arpl
adc
and
sarl
xchg
and
adc
sti
std
xchg
outsb
mov
jmp
leave
jb
mov
jecxz
jno
mov
bound
or
repz
xor
xchg
sbb
push
mov
aam
lea
sahf
jbe
mov
jecxz
mov
addr16
mov
loopne
pop
int
inc
sbb
and
test
sub
jp
in
push
into
xchg
mov
int3
xchg
jne
popa
imul
inc
sti
scas
and
xor
xchg
pop
movsl
movsb
push
cld
add
mov
lock
out
inc
mov
cmp
push
xor
cmp
push
xchg
aas
imul
repz
mov
sub
lret
push
aam
xorl
inc
cmp
jne
jbe
jmp
push
inc
in
add
dec
mov
fistpll
out
out
xlat
cmpsl
mov
dec
and
jns
mov
scas
sbb
ja
dec
jmp
lea
or
dec
jae
test
push
pop
jnp
xor
sub
mov
insl
fmulp
ja
mov
xor
mov
push
or
ja
fwait
add
push
in
mov
mov
ret
sbbl
xchg
add
imul
add
mov
int
mov
iret
rcr
adc
rcr
repz
mov
in
sub
xor
adc
imul
mov
int
in
push
imul
or
jmp
xchg
insb
inc
fsubp
fisubl
xchg
int
xchg
ja
ret
pusha
fadd
mov
insl
dec
outsl
pop
mov
enter
push
xor
jae
and
jmp
insl
mov
faddl
or
dec
ret
inc
xor
ret
jp
nop
push
scas
pusha
xor
pop
fdivl
ret
inc
enter
notb
pusha
xchg
add
insb
bound
jg
je
jae
sbb
inc
ret
adc
popa
xchg
mov
mov
inc
sub
cmp
lods
cmovg
fucomip
mov
and
xorb
mov
mov
push
pop
jmp
pop
inc
fcoml
jl,pt
xorl
jp
imul
mov
push
fcoms
bound
push
inc
flds
clc
pop
jmp
mov
ret
push
in
mov
pusha
push
lock
sti
xchg
shlb
cmp
js
push
adc
repz
push
testb
nop
inc
add
add
sub
pop
mov
inc
fstpl
repnz
jg
gs
idivl
add
xchg
in
lods
inc
pshufw
fmull
mov
lock
shll
idiv
sub
imul
jae
enter
leave
aaa
push
movsb
jecxz
xchg
insb
dec
testb
push
popa
out
daa
enter
mov
sub
hlt
jae
rorb
insl
aam
push
xchg
pop
inc
repz
jmp
imul
inc
mov
movsl
jae
dec
fdivs
lret
cmpsl
imul
rcrb
and
ljmp
mov
insl
popf
adc
add
mov
pop
clc
push
pop
xor
sbb
or
xlat
or
push
xor
inc
shl
rcrl
in
jge
jl
ret
sub
cld
and
and
xchg
push
mov
jae
outsl
adc
lahf
bound
xor
jae
out
test
xchg
insb
inc
xor
outsb
rcl
adc
mov
fsub
int3
inc
or
ret
aaa
call
and
xlat
mov
jae
adc
sbb
jae
pushf
push
mov
gs
loope
mov
negb
add
pop
jg
insl
jmp
or
popa
call
int3
aaa
ret
movsb
mov
mov
test
into
dec
out
dec
rolb
jno
out
in
roll
nop
sbb
mov
and
testb
adcb
add
pop
in
mov
lret
movsb
sti
test
push
fsts
dec
jae
hlt
test
lret
cwtl
mov
repnz
leave
outsb
call
loop
xor
or
outsl
cltd
outsb
pushf
or
orl
xor
dec
ja
add
inc
loopne
fnsave
in
ret
push
and
in
fisttps
mov
xchg
and
fwait
xlat
jae
rcll
and
adcl
es
pop
in
sbb
rcll
add
push
inc
mov
popa
cmpsl
push
pop
jae
push
jle
jae
call
sbb
cld
imul
pop
jmp
repz
cmp
jl
xor
aas
stc
stos
jl
jae
out
movb
push
mov
jmp
jae
mov
arpl
push
inc
xchg
in
in
out
arpl
adc
push
jae
imul
jae
mov
icebp
imull
mov
pop
out
les
ret
mov
sbb
push
push
lods
xor
xchg
scas
cmp
jecxz
add
cmp
jns
adc
rcll
scas
and
push
ljmp
adc
cmp
xor
ljmp
dec
or
in
xor
sbb
lods
shlb
xchg
outsb
cmpsb
or
mov
cmp
ds
mov
insl
ja
test
jecxz
pop
repz
push
fwait
and
xor
push
push
rolb
adc
xlat
stc
fldpi
out
cltd
sub
or
cld
xor
add
push
xor
add
inc
into
je
xor
jnp
das
pop
xor
pop
cld
or
arpl
push
add
jo
pusha
push
ror
rorl
pop
jle
or
add
or
ret
xor
push
and
scas
incb
or
into
dec
mov
add
pop
test
ss
adc
cmp
cmp
add
push
add
add
andb
add
jo
xor
push
dec
cmp
or
cs
push
jg
push
cld
cli
cmp
ret
add
or
or
ljmp
cli
cmp
mov
add
shr
and
pop
fcmovu
or
mov
movl
mov
in
in
dec
lods
cmp
hlt
sub
cmpsl
pop
je
xchg
dec
push
push
push
pop
out
testl
dec
xchg
movsl
clc
or
shrl
add
leave
xchg
and
inc
adc
pop
pushf
xor
aam
ja
movl
arpl
out
or
add
mov
outsb
add
popa
add
cld
lods
mov
outsb
or
fsubp
xlat
adc
scas
mov
cmp
add
push
dec
add
add
cld
pop
or
decb
sbbb
scas
xchg
inc
jl
stos
pop
or
or
sub
in
add
dec
and
in
or
mov
xor
add
push
and
faddl
dec
cld
sub
movsb
or
push
fmull
cmp
sahf
jnp
scas
lea
dec
add
add
cld
pop
or
pop
push
mov
add
push
dec
add
add
cld
pop
or
fimuls
sub
out
ja
lea
jnp
cmp
adc
addl
ds
xchg
and
pop
outsb
jne
sbb
test
inc
inc
fldt
dec
mov
sub
pmulhw
ss
movl
mov
or
incl
mov
movsb
imul
outsl
fisttpll
jb
icebp
outsb
outsl
gs
pop
fstps
lahf
sub
cmp
out
sub
testl
call
outsl
push
scas
imul
xchg
pop
jp
arpl
arpl
mov
jge
sub
pusha
test
arpl
inc
outsl
popl
and
arpl
arpl
insl
jge
insl
adc
insl
popa
push
outsl
cwtl
and
into
dec
in
rorl
adc
lods
and
xchg
int3
jl
xlat
cld
enter
adc
fwait
lret
xchg
in
stos
xchg
mov
out
out
les
xchg
movsl
out
xchg
mov
sahf
test
xchg
and
inc
dec
sbb
push
movsb
jb
clc
sahf
xchg
fstps
xor
pop
push
inc
sbbl
pop
xchg
jae
cmp
rcll
add
or
xlat
inc
clc
out
push
lret
adc
in
leave
xor
inc
ret
sub
imul
insb
xchg
rcll
sbb
scas
pop
imul
scas
push
pop
mov
sub
push
and
add
loope
push
repz
pop
adc
imul
pop
insb
xchg
jae
push
cld
loope
add
imul
adc
inc
out
aad
cmpsb
in
pushf
jecxz
cld
shll
enter
out
leave
imul
loope
and
dec
iret
sub
lods
pop
lret
sub
stos
fdivr
ret
jae
mov
sbb
fwait
std
sarb
push
cmpsl
pop
pop
mov
mov
scas
add
sub
icebp
dec
fstps
imul
pop
cmpl
jp
cld
pop
stc
fisubrl
sbb
imul
mov
mov
jns
inc
or
jecxz
mov
stc
xchg
push
and
xor
scas
xchg
mov
cmp
xchg
jmp
imull
sahf
fwait
jae
repz
les
iret
jne
mov
int
daa
mov
push
shrl
push
ficompl
imul
out
cltd
xchg
xor
cmp
loope
and
pushf
add
or
in
icebp
push
mov
jb
iret
shll
inc
push
push
pop
dec
push
push
mov
lret
mov
add
das
shl
mov
in
fnstenv
pop
out
iret
cmp
icebp
xchg
das
cwtl
pop
sub
mov
adc
out
or
insl
and
imul
inc
sub
dec
jle
jg
hlt
fucomp
xchg
mov
in
rclb
push
push
mov
pushf
pop
insl
leave
repnz
lods
js
pop
loop
scas
insb
push
mov
out
xor
pop
push
pusha
dec
adcb
mov
popa
and
mov
or
daa
popa
cmc
mov
adc
inc
push
rcrl
fldz
ljmp
or
outsb
xor
xchg
inc
mov
mov
push
xchg
mov
sti
sbb
jl
stos
mov
stos
in
xor
adcl
mov
ljmp
pop
stos
hlt
jnp
sub
add
adc
mov
hlt
mov
mov
cli
and
pushf
loopne
lock
mov
test
arpl
dec
fdiv
mov
sub
xchg
cmp
sbb
test
cwtl
aaa
lods
loopne
cmpsl
xchg
aam
add
mov
sbb
enter
out
pop
xorl
xor
xchg
push
fwait
dec
push
clc
ficoms
das
repnz
fs
loopne
push
lods
loop
xchg
test
scas
pop
fwait
stos
cs
cmp
pop
xchg
nop
adc
or
lret
xchg
rcrb
nop
fdivl
jb
shrb
sahf
aas
sub
mov
pop
xchg
lea
scas
mov
inc
sub
jns
and
mov
movsb
int3
xchg
outsb
out
xchg
les
pusha
xchg
pushf
mov
cmpsb
sbb
push
push
scas
imul
popa
out
clc
movsb
nop
mov
ljmp
push
push
lock
xlat
call
adc
xchg
cmp
call
xor
stos
inc
aaa
call
adc
and
stos
sbb
int3
pop
sbb
push
xor
sbb
leave
jl
mov
dec
adc
test
pop
add
dec
fs
and
jmp
mov
sub
jge
fisubrs
or
pop
mov
ss
push
push
sarb
inc
lret
test
mov
dec
in
inc
mov
aas
mov
rcl
repz
mov
out
rolb
and
jp
inc
mov
pusha
xchg
enter
sub
addr16
popa
sub
arpl
cld
pop
pop
movsb
pop
insb
ficompl
pushf
push
outsb
je
out
or
add
adc
mov
outsl
dec
sub
test
pop
xchg
lds
fmull
lret
add
fdivr
in
pop
sub
popa
push
ds
cmp
test
pop
adc
inc
movsb
sbb
fcompl
or
dec
push
sub
out
out
sub
popa
dec
orl
xchg
sbb
in
jnp
movsb
sub
sub
ja
cwtl
jno
pusha
out
sub
sub
outsl
in
test
imul
push
outsb
push
adc
mov
cltd
rcl
mov
mov
daa
arpl
pop
pop
adc
cld
jp
lock
hlt
mov
fdivs
mov
push
aas
ret
inc
cmp
mov
jg
mov
subb
les
data16
imul
sbb
add
jmp
aas
mov
add
cmpsl
jo
add
xchg
pop
cmp
and
call
dec
pop
arpl
adc
dec
cmove
outsb
or
dec
movsl
add
xchg
add
fwait
ljmp
mov
testl
out
adcb
sub
jmp
out
loope
mov
push
fstl
imul
mov
or
imul
int
sub
jne
lret
push
lds
xor
pop
xchg
ret
pop
mov
mov
mov
xchg
je
imul
into
lds
lret
fs
pop
sub
ds
shll
shll
pop
adc
push
fldt
fnstenv
loop
jcxz
loope
out
in
pushf
jmp
out
hlt
in
pop
xchg
repz
push
jbe
cmc
xchg
cs
pop
call
inc
mov
aaa
addr16
insl
or
adc
fwait
psrlw
cmp
jnp
pop
jecxz
adc
fs
lahf
pop
or
and
or
xor
mov
push
jmp
xor
xor
xchg
lret
or
mov
aas
in
dec
jmp
sub
leave
jno
sti
jmp
add
lcall
push
jmp
and
loope
call
inc
popf
inc
fbld
add
dec
fiadds
sub
mov
add
xor
pop
sbb
jnp
mov
stc
movsb
popa
aad
pop
neg
in
sub
imul
cmp
mov
push
add
or
sbb
mov
out
jmp
iret
lods
loope
inc
mov
in
sbb
loope
sbb
pop
inc
push
sbb
loope
outsl
xchg
xchg
or
or
jno
data16
popa
or
mov
dec
arpl
push
aaa
stos
dec
out
jecxz
fbld
jge
aad
pop
imul
fidivrs
pop
imul
jno
push
jecxz
mov
mov
cwtl
lds
lret
and
mov
imul
ss
stc
inc
fldt
adc
jb
in
movsb
xchg
fdiv
jle
cmp
or
mov
popa
lods
fadd
mov
or
fiadds
fdivp
mov
mov
pop
mov
push
fs
xor
iret
adc
leave
xor
iret
es
pop
lock
loope
sub
out
test
rcr
or
mov
push
aad
shll
out
popf
inc
mov
add
movsl
in
imul
leave
test
iret
sbb
adc
adc
mov
sub
fdivrp
ret
popa
fstpl
push
mov
jb
icebp
xor
in
mov
or
cmp
jmp
sub
mov
pop
test
repnz
jmp
int3
insl
push
leave
imull
cmp
dec
in
mov
xchg
fisttpll
jmp
enter
popa
dec
mov
stc
into
dec
jle
sbb
stos
pop
aad
leave
mov
rcll
fistl
and
sub
imul
push
jb
mov
mov
and
pop
add
aas
adc
movaps
popa
loope
out
stc
fdivp
and
cmp
leave
fistl
andb
jmp
and
dec
sbb
add
test
jecxz
stc
cmp
push
jmp
inc
ja
mov
loope
call
add
dec
aad
dec
aas
stc
xor
sub
fidivrs
scas
stos
aas
cltd
jb
cmpl
jecxz
shl
dec
jle
sub
dec
push
mov
dec
test
cmp
push
sub
iret
clc
testl
pop
mov
jmp
pop
imul
jmp
jnp
fsubp
sbb
filds
dec
aad
add
mov
loope
jecxz
dec
mov
mov
movsl
add
xor
mov
lods
mov
pop
jmp
pop
nop
cs
mov
xor
imul
sub
mov
nop
mov
add
sbb
stc
sarl
neg
add
in
hlt
in
leave
popa
pop
loopne
lods
fldl
jmp
jnp
mov
jb
adc
or
xor
pop
or
fbstp
inc
dec
rcll
push
fbld
dec
out
mov
scas
mov
cli
imul
cs
fistps
fnstsw
loope
dec
sbb
cmovge
repz
push
xchg
add
and
dec
neg
mov
xlat
addr16
jmp
adc
jmp
iret
lcall
cwtl
loope
pop
fwait
dec
pusha
xchg
inc
push
fisttps
dec
rcrl
push
fs
fiadds
dec
mov
add
imul
and
stos
out
jle
imul
sbb
enter
add
arpl
mov
add
clc
popf
inc
mull
mov
ss
dec
loope
fsubr
shl
xchg
jecxz
popf
xor
and
lret
and
fmulp
or
popa
shl
imul
mov
pusha
ja
sub
lcall
aas
mov
imul
fs
incb
sub
mov
add
stc
shl
mov
leave
push
xchg
not
inc
cmpsl
push
jno
sub
sahf
popa
inc
in
js
jmp
icebp
jmp
rorl
pusha
jmp
dec
cmp
sub
or
push
cmp
mov
push
dec
mov
push
dec
jmp
dec
loop
jecxz
iret
loop
sub
imul
paddusb
std
push
sub
add
fsincos
je
push
dec
jb
imul
pop
in
mov
ja
jmp
xchg
lea
loope
hlt
mov
dec
aad
loop
fldl
leave
movsb
dec
popa
xchg
fdivr
into
cmc
push
fidivrs
movsl
and
lret
cs
and
icebp
inc
dec
imull
push
sahf
or
out
fldl
and
sahf
inc
add
fiadds
dec
adc
fdivp
sbb
sbb
xchg
xchg
adc
adc
jle
inc
jge
and
sub
aad
shrl
cli
in
and
xchg
mov
mov
dec
testl
sti
cmc
outsb
sti
xor
stc
fldl
sub
enter
inc
pavgw
int3
add
js
stc
fdivp
imull
in
xchg
popa
ljmp
xchg
mov
leave
mov
dec
sbb
filds
pushf
fiadds
aad
rorl
or
xor
std
iret
add
push
scas
iret
test
jb
call
mov
imul
movsb
xchg
fstps
adc
mov
fdivrl
call
add
hlt
stc
jno
fdiv
jne
imul
ret
jb
jnp
fsubp
sbb
cli
aad
rcll
dec
sub
xor
xchg
add
add
cs
mov
imul
call
imul
add
rorb
add
dec
add
push
sub
stos
pop
stc
dec
cli
neg
in
xlat
cltd
je
ret
jb
jnp
fsub
stos
push
jmp
addr16
and
mov
pop
shll
das
add
mov
imul
call
cmpsl
addr16
nop
sbb
jnp
and
stc
xchg
mov
in
jno
jmp
pop
movsl
adcl
out
popf
lock
rcl
push
iret
hlt
dec
push
syscall
cmpsb
scas
xchg
xchg
mov
push
cmpsb
dec
or
xchg
pop
jb
mov
and
push
movsb
or
sbb
dec
jbe
pop
popa
adc
dec
adc
add
stc
iret
mul
imul
popf
inc
jmp
jns
repnz
lods
iret
fcomip
aad
adc
rcr
leave
mov
ret
sub
stos
arpl
jnp
xchg
xchg
sub
popf
cmp
js
adc
js
and
sub
stc
fdiv
popf
sub
test
and
jne
jb
mov
loope
cmpsl
jmp
or
fmul
std
ja
loope
imul
mov
call
movsb
dec
jb
psubsb
fwait
mov
xchg
imul
js
jmp
and
enter
fistpll
jno
cmp
movsb
popa
inc
xlat
shrl
push
imul
or
mov
rorb
xchg
mov
fsubrl
dec
data16
jl
call
loopne
fcompl
cltd
fmull
or
imul
mov
iret
xchg
jmp
neg
jmp
push
shlb
addr16
aad
dec
dec
imul
scas
fwait
inc
movsb
dec
jb
adc
jne
add
stc
dec
xchg
jmp
push
xchg
les
lret
das
adc
ret
pop
adc
dec
adc
fwait
mov
daa
mov
imul
push
sbb
dec
sbb
add
imul
jmp
popf
and
xor
inc
imul
iret
addr16
jmp
ljmp
adc
sahf
and
stos
xor
int
jne
sbb
sub
cmp
clc
imul
cltd
daa
popa
repnz
bound
fistps
xchg
pop
vfixupimmss
jnp
imul
pop
fmull
sbb
dec
repnz
and
dec
jmp
stos
pop
adc
pusha
imul
xor
addr16
movaps
sub
imul
pop
push
addl
sbb
xchg
add
xlat
std
adc
decl
or
or
in
add
fwait
idivl
lock
clc
dec
repz
popa
testb
or
lods
jmp
jnp
out
jb
in
loop
mov
xor
dec
jecxz
fcmovb
mov
aaa
and
imul
aas
ljmp
addr16
neg
test
idiv
xchg
cs
xchg
stos
imul
jecxz
adc
mov
add
xlat
stos
ljmp
fwait
adc
inc
addr16
cmc
cmp
cltd
sbb
addr16
lods
xor
pop
inc
push
dec
lahf
sahf
dec
add
stos
adc
popa
sbb
pusha
arpl
pop
push
mov
inc
aad
aad
imul
mov
scas
or
and
mov
dec
push
mov
mov
dec
push
mov
pop
push
mov
push
scas
ret
xor
adcb
adc
ret
fisubrl
mov
popa
mov
mov
cs
dec
mov
mov
sub
jecxz
arpl
push
movsl
pop
jne
dec
daa
jg
mov
mov
mov
jb
imul
sbb
cs
and
sbb
dec
mov
negb
imul
pop
and
sarl
sbb
dec
fsubrp
adc
imul
add
mov
cmp
sbb
leave
sub
mov
imul
dec
jo
dec
imul
arpl
dec
test
fsubrp
jg
sbb
jb
xchg
pop
outsb
cmovo
push
outsl
mov
lahf
sub
movsb
push
jp
psubd
pop
jmp
jno
test
ja
imul
jnp
jmp
jecxz
test
sbb
inc
lret
adc
or
dec
push
pop
pop
xchg
cld
aam
adc
sbb
cltd
lahf
cs
jbe
lea
xor
ss
pop
rdmsr
jmp
xchg
adc
lahf
jecxz
lds
push
pop
xchg
sbb
pop
test
sbb
adc
xor
lahf
jecxz
ljmp
ret
sbb
sbb
data16
cli
lahf
jecxz
jb
mov
pop
xchg
sbb
pop
test
sbb
dec
push
jg
dec
xor
mov
popf
cli
lahf
jecxz
mov
and
sbb
lds
mov
jb
mov
daa
xor
xchg
ficomps
lock
mov
jne
lea
push
jg
sub
jb
imul
sub
inc
jle
lock
xor
outsl
dec
pop
mov
ss
mov
jp
bound
cmp
imul
mov
imul
mov
jb
dec
mov
cmc
mov
ret
into
loopne
stc
dec
je
scas
cs
popa
cli
mov
inc
pop
mov
loopne
enter
rorl
lret
push
aas
imul
rorl
rcll
mov
mov
add
adc
push
lock
subl
ja
imul
inc
sub
leave
loope
fiadds
jmp
dec
inc
scas
insl
aam
pop
push
pop
leave
insb
mov
pop
pop
push
fistpl
in
jo
aad
rcl
pop
mov
pop
push
lret
push
ja
aas
loope
inc
imul
adc
imul
repnz
dec
test
mov
adc
idivb
imul
cmpsl
rclb
jecxz
fs
pop
dec
lret
rcrl
imul
dec
pop
cwtl
leave
mov
jmp
stos
fsubr
orb
rcll
and
jg
ss
jbe
cltd
mov
xchg
loope
mov
dec
fldl
jecxz
mov
scas
sub
push
insl
and
adcb
mov
xor
xor
sub
cwtl
hlt
ljmp
imul
xchg
cld
xlat
xor
push
repz
inc
andl
lods
inc
in
push
mov
inc
pop
icebp
inc
cltd
cmc
add
push
push
imul
les
mov
xchg
sbb
out
fwait
sbb
addr16
and
ds
ljmp
ficompl
sub
cmpsl
in
jbe
xor
ret
dec
jmp
push
push
sub
pushf
subl
pop
loopne
popf
and
xchg
sub
frstor
shrl
es
daa
cmp
and
mov
pop
call
adc
cld
shll
mov
jae
dec
push
rcll
rcrl
dec
daa
jns
daa
rcll
ret
mov
mov
sbb
inc
mov
dec
mov
sbb
lret
dec
leave
popa
and
cltd
sbb
xor
pushf
or
fmull
add
test
push
movsl
dec
roll
ljmp
arpl
xlat
pop
dec
and
mov
cmpsl
mov
mov
test
arpl
ja
outsl
test
or
xlat
pop
dec
shr
inc
cmp
lret
push
dec
bound
data16
daa
adc
imul
test
loopne
imul
mov
imul
jnp
imulb
jmp
inc
dec
mov
aad
add
mov
vdivss
pop
xchg
inc
imul
push
lret
daa
mov
shlb
mov
mov
movsb
pop
arpl
cmp
mov
mov
daa
lock
pushf
push
ss
addr16
sbb
dec
dec
xchg
sub
mov
pop
xor
int
and
cmp
imull
adc
imul
icebp
and
aas
dec
rclb
lret
add
insl
mov
jmp
dec
dec
xor
subl
lret
jo
and
rcll
cld
outsb
daa
lds
jmp
pop
sub
dec
aas
les
notb
iret
movsl
add
loopne
mov
pop
repnz
sbb
mov
imul
iret
nop
movzbl
push
xchg
sub
push
xchg
lcall
les
xchg
bound
xlat
pop
arpl
sub
inc
push
mov
inc
mov
shrb
xor
cmpb
outsl
mov
pop
leave
inc
or
dec
jmp
mov
outsl
xlat
push
inc
rorl
jmp
mov
shl
iret
mov
mov
fadds
xor
dec
daa
lds
sub
divb
mov
sbb
repz
ucomiss
cltd
jmp
or
popa
cs
dec
push
arpl
fistpl
cmp
outsl
mov
dec
fidivl
or
fwait
outsl
mov
lods
aas
outsl
add
mov
std
xchg
or
cltd
xchg
jmp
cld
dec
stc
push
cmpsl
and
sub
xlat
je
int3
punpckhwd
sub
imul
stos
ret
cltd
loopne
mov
inc
dec
xchg
xor
xlat
divl
fsubrl
ds
xchg
popa
xor
mov
shrb
aam
xor
popf
das
andl
aad
sub
jmp
xor
mov
and
out
lds
fsubr
das
inc
frstor
imul
pop
repnz
dec
sbb
or
or
mov
stos
pop
rorl
mov
pop
es
imul
fbstp
out
stos
dec
xor
xchg
outsl
dec
imul
mov
mov
cmpsl
subl
ds
dec
jmp
sbb
add
pop
sti
inc
imul
cmpsl
fstpl
adc
popf
inc
sbb
push
sub
dec
je
push
imul
push
cmp
aas
push
inc
pop
pop
in
jb
cmp
ffreep
pop
mov
mov
aad
push
pop
dec
jmp
dec
push
stos
dec
testl
mov
scas
mov
mov
mov
scas
outsl
cld
xchg
mov
jmp
xchg
lods
push
inc
roll
cmpb
xor
jnp
addr16
movl
sahf
pop
inc
mov
in
rol
filds
stc
iret
push
in
and
iret
sbb
mov
xor
mov
lahf
lock
adc
pop
mov
xlat
xor
push
cltd
mov
add
psllw
xor
sbb
pop
iret
cmp
fists
neg
stc
cltd
rcrb
mov
cmp
jbe
pop
push
pop
mov
ja
sub
jle
notb
jmp
sub
or
out
cmp
or
mov
lret
lret
dec
imul
push
imul
mov
iret
sahf
jmp
cmc
faddl
pop
iret
cli
loope
in
or
xor
adc
lock
iret
repnz
setg
dec
cmp
inc
ds
xor
pop
jns
clc
test
jmp
pop
sbb
xchg
push
cmp
or
adc
inc
dec
stc
sbbb
in
mov
aam
jmp
nop
imul
push
test
decb
js
pop
je
orb
fldl
in
mov
mov
jmp
cmc
sbb
push
leave
ficoml
data16
sbbb
rorl
scas
dec
mov
outsl
ja
sub
iret
xchg
pop
jg
cwtl
pavgb
adc
sahf
dec
ss
fiadds
scas
add
sti
imul
cli
sarl
addr16
mov
dec
divl
loope
out
scas
sub
aam
aad
xchg
jmp
mov
cmp
cwtl
aas
jmp
pop
cltd
iret
cli
stc
and
sub
push
pushf
imul
adc
adc
dec
pop
sub
xchg
cmc
push
cmp
imul
movsb
jno
cltd
xlat
outsl
ret
xor
aas
pop
xor
mov
pop
rorl
or
add
xchg
sub
fcompl
jns
js
shll
std
and
jge
fcmovnu
add
pop
mov
popa
mov
fsubrp
fsubrp
adc
or
mov
sub
imul
es
aas
test
iret
mov
js
imul
imul
popa
imul
fiadds
inc
dec
add
or
dec
add
dec
add
push
fsubrp
mov
xchg
repz
aam
jg
outsl
iret
sarb
inc
movsl
ret
xchg
mov
fsubrp
notl
xchg
outsl
aas
jmp
mov
mov
fnstcw
insl
out
jne
jmp
jmp
std
pop
test
xor
xchg
add
mov
inc
daa
js
push
ror
cwtl
xor
imul
fwait
cmc
and
pop
popf
bnd
inc
cli
shrb
in
mov
outsb
ret
outsl
mov
push
xchg
jmp
popa
lcall
mov
outsl
test
sub
xchg
mov
ss
xor
lea
mov
sub
sahf
push
add
fisttps
xor
fs
mov
movsl
pop
mov
sahf
sbb
vmaxss
in
lock
cwtl
fsubr
incl
mov
mov
sti
push
lds
call
jne
in
jmp
cmp
pop
jp
iret
jbe
adc
jne
jmp
push
xchg
je
repnz
test
push
dec
imul
sub
mov
shll
scas
cwtl
sarb
inc
inc
jnp
and
dec
out
in
sbb
imul
add
outsl
pop
jmp
es
enter
dec
loope
mov
pop
or
sub
adc
stos
add
xchg
idivb
add
adc
pop
xor
sub
mov
mov
sbb
push
jb
loop
loop
fsubr
fidivl
mov
pop
jmp
sub
cmp
dec
jmp
add
out
in
or
jge
outsl
mov
mov
xor
ja
shrb
lds
cmp
pop
fdivr
sbb
jo
loop
std
inc
les
sti
push
sub
in
cmp
push
sbb
shrl
pop
jmp
je
fs
fldpi
cs
add
mov
testl
dec
push
je
mov
xchg
dec
push
std
outsl
add
int
outsl
mov
sub
sbb
sbb
imul
add
imull
mov
je
ret
cs
icebp
arpl
repz
xorb
cmp
inc
mov
maxps
out
inc
sub
add
mov
movsl
add
or
jmp
mov
xchg
clc
stos
push
shrl
into
bound
pop
jmp
js
mov
fs
xchg
daa
pop
fsubrp
and
mov
adc
std
lcall
jmp
lcall
or
aad
xchg
sub
inc
ficoml
test
pop
jmp
and
push
in
lcall
call
fwait
in
outsl
fldcw
pop
aad
dec
dec
in
fmuls
inc
jle
adc
push
aam
das
push
pop
pop
adc
jmp
mov
jo
subl
imul
sbb
xchg
std
pop
iret
out
jg
mov
aas
rorl
adc
lods
leave
fisubs
loop
xchg
ficoms
sbb
arpl
mov
cmp
jb
sbb
push
pop
mov
stc
shlb
stos
dec
mov
aad
pop
mov
mov
pop
ljmp
or
push
imul
inc
popf
pop
sbb
aam
sbb
inc
pop
test
frstor
xlat
filds
mov
sub
pop
outsl
mov
sub
setbe
or
dec
mov
add
arpl
into
adc
ja
jmp
fsub
pop
std
sbb
mov
and
jne
addr16
imul
imul
pop
popa
jae
cmp
inc
xlat
dec
cmpsl
jno
mov
mov
adc
rorl
or
pop
leave
push
out
str
push
or
sub
lea
neg
jnp
add
or
cmp
cs
mov
addb
and
scas
mov
jg
xchg
jmp
adc
sahf
loope
lret
cs
push
push
stc
fdivrp
rclb
mov
aas
and
dec
and
dec
pop
outsl
add
jmp
fildl
cmp
out
lahf
insl
sti
stos
outsb
cmp
jmp
jmp
dec
xor
or
xchg
outsl
test
or
aas
insl
mov
int
cs
dec
add
fisubs
pop
divb
cs
call
push
pop
sarb
cmc
jl
in
add
sub
fucomp
push
cmc
mov
push
lods
cld
aam
mov
fidivrs
shld
les
sub
and
sub
jle
clc
aad
and
inc
dec
adc
addl
daa
fucomi
aad
inc
xor
adc
mov
xlat
int
or
sub
out
dec
imul
and
fs
dec
dec
data16
push
and
cmp
push
xchg
jp
add
xchg
jl
and
ljmp
dec
push
stc
mov
push
inc
dec
mov
xchg
cmp
cmp
inc
mov
push
hlt
xchg
push
push
sub
mov
xor
imull
lret
mov
mov
mov
orl
mov
repz
iret
mov
ror
fs
imul
out
aad
sub
push
mov
fisubl
stc
dec
in
lahf
and
enter
sbb
and
mov
and
bound
pushf
push
mov
sub
cmp
loopne
jp
xor
aas
dec
fisubrs
xchg
data16
inc
shll
rclb
sub
bound
or
fidivl
push
popf
add
aam
lgs
fildl
xor
xchg
cmp
mov
inc
fstpl
fsubrp
adc
out
cmp
ror
pop
push
nop
subl
inc
lods
and
scas
mov
push
pop
es
aad
ss
pop
and
divb
push
imul
shlb
and
shll
jge
and
out
and
aas
add
popa
cltd
popf
inc
loope
pop
mov
push
mov
data16
out
lret
imul
daa
dec
stos
add
dec
rorb
cmpsb
in
lret
sub
scas
xor
in
and
sub
fildl
subl
mov
sub
cmp
pop
movsl
inc
sbb
fidivrs
daa
jae,pt
push
push
iret
push
adc
shll
cmc
push
xor
cmpsl
ljmp
imul
jb
and
mov
clc
sbb
pop
mov
data16
pop
xor
jae
inc
ja
iret
inc
ret
sbb
inc
mov
adc
ret
lahf
xchg
cmp
mov
push
imul
xchg
jecxz
mov
popa
pop
and
repnz
out
dec
xor
push
cmp
repnz
in
std
sarl
add
popa
dec
aad
movsl
fists
stc
int3
jmp
xor
or
mov
imul
cmpsb
xor
sahf
inc
jmp
sbb
mov
aaa
shll
iret
dec
dec
es
jg
insl
aad
adc
aaa
shll
jmp
xor
xor
and
mov
fsubl
sub
dec
add
sub
push
sub
sub
mov
addr16
pop
imul
out
sub
aad
imul
cvtps2pi
fadds
xor
dec
jmp
and
mov
inc
ret
xor
int
mov
test
add
xchg
xor
mov
inc
ja
inc
fdivrl
loopne
or
sbb
popa
std
sub
dec
ljmp
xor
add
nop
pop
jb
out
roll
cmp
jae
cmp
inc
sub
stos
aaa
jmp
ret
mov
sub
mov
mov
fdivp
dec
sbb
cmp
jb
inc
leave
sarb
pop
aam
icebp
jmp
test
and
test
bound
xchg
ret
int
imul
push
pop
and
decb
imul
fcoml
sbb
mov
xchg
pop
popf
xor
xchg
leave
mov
inc
neg
aad
fsubr
popf
and
mov
fdiv
xchg
sarb
iret
cli
jmp
mov
inc
mov
ret
jns
loop
divl
xlat
jns
pop
mov
adc
sbb
imul
mov
sbb
xor
cmp
in
adc
dec
stos
sbb
out
and
adc
fsubrp
cmc
sbb
jge
negl
andb
rclb
pop
jae
adc
subl
imul
pop
xchg
push
push
inc
sub
imul
mov
outsb
adc
cmpsl
or
cmp
mov
bound
inc
lcall
pushf
popa
call
push
add
cmp
push
cmpb
pop
clc
mov
fistps
das
cmpl
dec
jbe
and
aas
ds
mov
push
fnsave
imull
jmp
push
add
mov
cmpsl
loope
shll
lret
mov
cli
iret
aas
xor
inc
out
inc
inc
push
imul
cld
imul
ss
addr16
imul
sub
popa
aaa
xor
dec
fpatan
imul
ja
and
and
pop
lods
adc
mov
insb
mov
ljmp
pop
ljmp
pushf
add
les
push
mov
call
call
jmp
imul
roll
cmp
fldl
sub
stc
add
pop
sbb
shlb
push
stos
popa
lods
and
push
mov
aad
mov
scas
ds
add
ljmp
imul
addr16
popa
sub
ss
and
mov
jge
imul
ljmp
mov
dec
xchg
rcrl
adc
fwait
pop
or
sbb
cmp
std
adc
dec
inc
bound
data16
cmp
shr
fisttpll
lahf
mov
mov
add
and
jg
popf
xor
inc
leave
pushl
and
and
loope
pop
push
in
mov
cmp
fwait
ds
mov
mov
xorb
jb
loopne
fs
adc
dec
push
xor
imul
mov
push
popa
movsl
add
mov
add
cmp
mov
and
je
xlat
gs
cli
sub
pxor
dec
mov
dec
movsl
mov
fucom
stos
and
cltd
js
mov
roll
cwtl
lods
popa
jmp
out
popa
mov
or
xor
addr16
popa
popf
add
movsl
mov
dec
jmp
fstps
es
mov
adc
iret
jmp
je
dec
adc
jbe
jmp
imul
jp
inc
cs
jmp
fisttpll
sub
iret
sbb
mov
cmp
xor
adcb
pop
jmp
enter
fdiv
call
push
testl
adc
add
fimuls
jge
pop
icebp
call
lock
push
jne
add
call
es
sub
pusha
push
jge
rcll
xchg
movsb
pop
imul
sbb
fdiv
jns
sbb
jmp
es
cld
aam
sub
stos
push
jmp
inc
jb
push
rolb
sub
int
repnz
popf
xor
imul
mov
add
jge
sbb
jmp
xchg
xor
xchg
dec
adc
pop
dec
cwtl
in
xor
push
test
ss
and
mov
std
sub
mov
stc
inc
std
daa
cmc
and
mov
mov
jge
add
je
mov
shr
imul
and
iret
loop
fisttpll
aad
sbb
xchg
xchg
xor
shl
aam
dec
fsubp
inc
mov
jo
pop
inc
movsl
sub
mov
mov
xor
cmp
sub
rclb
push
shrb
xchg
pop
popa
sub
call
push
orl
daa
adc
popa
jne
jnp
stc
xor
sbb
pop
push
les
and
sbb
xchg
icebp
adc
cltd
pop
and
and
das
dec
sbb
push
push
pop
xchg
out
jae
sti
sbb
and
pop
or
sbb
and
adc
adc
negb
cltd
or
fs
push
popf
pop
xor
add
add
notb
and
xchg
gs
mov
out
imul
xchg
repz
movsl
adc
mov
xor
enter
jmp
sub
movsl
sub
pop
popa
dec
shll
pop
mov
movsl
das
dec
mov
jle
dec
mov
imul
stos
aaa
push
mov
popa
dec
xor
movb
das
pop
adc
and
jne
sbb
pop
fwait
add
and
pop
or
push
aas
jg
add
sbb
pop
mov
aaa
pop
dec
xchg
icebp
or
mov
add
mov
dec
push
push
fsub
dec
sub
movsl
sub
mov
add
fcoml
mov
ds
loope
pop
imul
adc
in
cld
jnp
in
lods
enter
sub
leave
insb
add
dec
stos
inc
add
jno
and
dec
push
mov
push
shrb
adc
cmpsl
sub
stc
push
hlt
into
fwait
push
out
test
sbb
dec
sub
pop
popf
sbbl
in
fcoml
adc
sbb
mov
cmpb
loop
aas
call
and
sub
mov
repnz
sub
fwait
pop
sbb
mov
aaa
push
in
dec
cs
lret
xchg
out
fucomp
xchg
jae
divb
call
test
out
jecxz
in
ja
arpl
jmp
cs
inc
cld
loope
aam
in
pop
push
rcrl
pop
mov
cmp
pop
sub
inc
jle
pop
push
jno
sub
add
lods
mov
cltd
movaps
jle
push
bound
cmp
aam
jmp
dec
mov
and
fsubrs
loop
insb
aad
mov
pop
sub
loopne
icebp
call
cltd
jae
in
mov
imulb
test
add
or
mov
lahf
jmp
cmp
xchg
rcl
popf
or
shll
xor
negl
out
xchg
dec
sub
pop
jmp
loope
push
jecxz
sub
add
ficoms
xchg
sbb
mov
mov
inc
sub
dec
mov
mov
jmp
cmpsl
das
dec
inc
fwait
add
aaa
dec
movsb
push
inc
and
xchg
adc
cmc
adc
adc
leave
std
pushf
fdivp
xor
and
pop
je
and
xor
sbb
cli
andb
jb
xchg
enter
test
aas
leave
xchg
ror
imul
in
fucomip
xchg
push
loope
imul
sbb
pop
ljmp
mov
cmpsl
or
clc
push
fidivrs
inc
push
rolb
lods
add
imul
push
push
scas
clc
push
pop
mov
fidivl
jmp
mov
scas
sbb
ds
pop
dec
cmp
jp
xchg
scas
sub
sbb
dec
inc
xor
mov
or
inc
dec
jne
mov
sub
inc
lcall
jne
sti
adc
hlt
mov
add
inc
pop
and
dec
inc
dec
add
dec
xor
add
xchg
sbb
and
hlt
stc
sub
mov
mov
lret
inc
in
pop
xchg
sbb
lock
orb
rolb
stos
insb
mov
mov
pushf
or
mov
not
adc
imull
adc
imul
mov
es
dec
sub
jno
out
cmp
popf
inc
jmp
pop
lods
mov
mov
cmp
and
aam
mov
or
xor
dec
and
cltd
add
sub
sbb
fwait
and
mov
jmp
add
loop
out
lret
fmuls
ljmp
sbb
call
mov
fldcw
inc
pop
into
xchg
in
imul
aad
mov
mov
and
push
push
inc
scas
popa
stos
mov
sub
pushf
cmp
rclb
push
pop
iret
xor
dec
jmp
cmp
fwait
inc
xor
add
add
xchg
push
or
ficomps
fisubrl
mov
mov
iret
imul
mov
aam
mov
mov
jne
call
cs
aam
cmpb
stos
push
pop
inc
xchg
mov
aam
bound
fisttpll
cmc
aad
adc
cmp
lret
fadds
movsb
stc
pop
lds
insl
ret
dec
jno
les
cli
pop
imul
sbb
mov
mov
outsl
mov
mov
jmp
rolb
popa
test
test
mov
popa
dec
push
cmp
sarb
outsl
flds
aad
lock
xchg
jmp
insb
cld
lods
or
and
loop
xchg
es
or
fcompl
fcmove
arpl
lock
xor
inc
add
pop
adc
nop
aam
mov
xor
push
mov
inc
inc
dec
xor
pop
dec
pop
aam
das
mov
in
in
add
pop
fmulp
bnd
test
mov
mov
mov
jmp
mov
xchg
add
mov
or
sar
add
aas
and
sbb
mov
jge
mov
or
js
loopne
imul
call
push
call
inc
dec
mov
pop
fdivl
pop
jo
das
call
sub
dec
add
leave
pop
test
sub
inc
fisubl
leave
fdivrl
or
leave
push
aam
cli
cmp
fs
or
out
cltd
or
fidivs
cmc
in
jbe
in
nop
adc
xchg
sub
mov
xor
and
popf
scas
popa
dec
mov
popa
dec
bound
incb
add
jmp
lds
out
jl
mov
sbb
dec
or
hlt
fdiv
fsubr
adc
push
dec
insl
sbb
aaa
push
lock
cmp
fstl
and
sbb
mov
mov
add
test
aam
adc
mov
in
sti
jbe
push
cmc
cli
add
repnz
insl
std
jle
jno
mov
jmp
imul
mov
lahf
icebp
push
ja
pushf
popa
dec
imul
pop
xor
lds
cmc
add
imul
fndisi(8087
loop
xchg
fsubrs
mov
cmp
pop
mov
mov
stc
push
mov
xchg
repz
push
cltd
pop
insl
sub
mov
ret
ret
add
push
push
movsb
or
mov
aad
pop
shll
xlat
or
xchg
sti
popf
and
xor
mov
or
mov
push
ret
dec
jge
std
aam
cmp
out
mov
or
add
pop
insb
mov
shrb
insb
jge
sub
sub
repz
jmp
xchg
in
hlt
jno
subl
shlb
js
fs
lods
test
pop
fwait
jmp
sahf
mov
push
mov
in
jno
enter
dec
int3
insl
jg
xchg
pop
xchg
cmc
push
lock
pushf
mov
xchg
enter
out
popa
dec
mov
loopne
xchg
dec
scas
push
pop
mov
mov
test
fcmovnu
add
mov
mov
xor
sbb
mov
popa
and
dec
push
aas
jmp
fwait
nopl
in
dec
cld
push
mov
mov
out
sub
negb
pop
lret
das
inc
xchg
decl
shll
mov
jmp
pop
test
test
insl
jg
push
std
mov
fchs
xchg
jmp
ljmp
cmc
push
je
addb
mov
mul
dec
pop
ficoms
test
mov
dec
mov
test
jge
lret
ret
dec
mov
iret
fmulp
jg
xor
mov
pop
or
and
movsl
xor
or
cltd
or
aam
in
add
rcl
mov
inc
call
sbb
int3
add
jbe
lret
stos
cltd
movups
mov
cmp
es
xchg
add
in
fiadds
dec
imul
xor
sbb
cmp
not
shl
jne
and
jmp
pop
fdivl
sub
and
sbb
mov
push
dec
shrl
pop
idiv
fs
lahf
sarb
leave
mov
fistpl
mov
aam
mov
xor
fs
outsb
xor
push
jo
cmp
inc
dec
push
int3
cltd
jecxz
push
pop
stos
xchg
hlt
fidivs
fdiv
jno
cmpsb
xchg
leave
into
jmp
and
add
popf
test
sbb
aas
push
fwait
sub
mov
mov
sahf
push
ds
mov
sub
xor
sbb
and
lods
inc
subb
aam
imul
loopne
lods
cs
push
cmp
add
mov
sub
xor
hlt
enter
mov
dec
jno
inc
cmp
fwait
inc
sti
push
mov
rcrl
stos
xchg
xlat
test
imul
pop
ss
jb
pop
lahf
pop
jo
sub
sub
add
loope
out
jno
xchg
lods
test
or
jmp
imul
push
dec
leave
sbb
enter
js
sub
imul
fcompl
push
imul
mov
aas
jnp
ret
fwait
ja
xchg
aaa
stc
insb
xor
inc
rcrb
jmp
push
sub
xor
shlb
ret
jne
mov
jbe
or
aas
testl
xor
fucomip
imul
fs
imul
mov
sti
xor
insl
subl
push
daa
ficompl
ret
addr16
xchg
inc
xor
imul
pushf
in
and
fsubrp
daa
popa
cmp
jae
scas
xor
outsl
aaa
movsb
imul
dec
imul
inc
add
pop
fistpl
jg
outsl
dec
cmp
inc
pop
pop
insl
mov
ret
call
xchg
lret
mov
test
push
jno
mov
out
mov
jg
insl
mov
fsubr
aam
mov
xor
lcall
add
cld
rol
insl
mov
rorl
sahf
in
cmc
sbb
dec
push
test
sbb
insl
inc
outsl
push
repz
loopne
enter
lods
pop
pop
cmp
xor
cwtl
mov
mov
xor
lea
movsl
inc
pop
jecxz
lds
pop
mov
xor
adc
cmp
and
stos
nop
js
dec
in
add
inc
mov
sti
gs
ret
pop
push
cmp
jl
loope
out
mov
sub
imul
subb
clc
mov
jne
mov
scas
in
inc
sbb
leave
dec
pop
jecxz
ret
pop
pop
outsl
bound
or
adc
cld
jecxz
sbb
and
insl
sub
dec
aad
pop
xchg
and
push
ss
pusha
imul
movsl
repz
mov
and
int
insl
xchg
jne
call
dec
pusha
imul
adc
fsubs
jo
aad
out
icebp
push
fcoml
or
outsl
test
and
popa
xor
add
sub
push
sub
pop
loop
test
inc
aaa
inc
sbb
arpl
sbb
fs
popa
sbb
add
je
insl
mov
cmc
test
lods
fnstcw
mov
insl
call
jae
aad
sti
loopne
pop
imul
sti
ja
and
shlb
push
dec
bound
dec
and
imul
add
outsl
test
insl
ljmp
rcll
adc
in
fmull
cmp
ds
dec
mov
pop
dec
neg
dec
cmpsb
mov
mov
insb
call
pop
add
mov
cmp
mov
imul
cmpsb
cmpsl
mov
std
out
test
mov
adc
pop
andb
inc
add
cmp
into
inc
cmp
getsec
xchg
mov
clc
pop
pop
std
out
mov
add
mov
xlat
inc
scas
xlat
xchg
mov
inc
rorb
and
lea
das
dec
pop
jae
pop
and
and
inc
imul
or
cvtpi2ps
mov
mov
mulb
mov
rcr
int
cmp
jae
adc
clc
dec
mov
fucom
xchg
loope
lahf
jmp
mov
in
imul
rclb
mov
xor
sub
ja
aam
aad
sub
dec
icebp
or
mov
fwait
popa
cld
xlat
int3
insl
lods
xor
jno
rcl
addr16
in
lahf
mov
dec
mov
mov
mov
inc
movsl
mov
imul
orb
rcl
add
mov
mov
imul
sbb
imul
popa
test
test
roll
cltd
test
fisubrs
fsts
in
cltd
jmp
in
mov
rclb
push
xorl
fsubrl
popa
xorl
inc
xchg
jp
arpl
imul
fstps
je
push
inc
cmpl
cmpsl
outsl
jecxz
cmp
mov
imul
jmp
pop
mov
adc
cmp
cmp
subl
lahf
cmp
cld
xchg
sub
inc
inc
and
ja
mov
inc
stc
jp
stos
andb
adc
dec
lahf
jbe
pop
adc
dec
orl
cwtl
imul
jle
mov
jns
aaa
jne
xor
sub
movsl
insb
xorl
jns
sbb
ljmp
imul
outsl
fwait
cmpsl
pusha
xchg
ja
inc
cmpsl
mov
inc
mov
mov
mov
enter
iret
cwtl
xchg
lds
mov
pop
jne
dec
inc
movsl
dec
popa
xchg
xchg
shrb
dec
mov
in
cwtl
xchg
int
mov
pop
imul
mov
rorb
mov
cmpsl
push
fmull
lret
jae
fwait
xlat
mov
mov
imul
ljmp
or
jae
xor
int
cltd
aad
outsl
test
mov
jl
imul
pop
mov
iret
xchg
xchg
int
pop
imul
xor
push
ret
inc
inc
shll
lahf
fldcw
sbb
pop
adc
lods
repz
out
faddl
leave
lret
out
jnp
xchg
dec
jae
out
lahf
in
out
aad
jge
int3
imul
insl
in
mov
fiaddl
rcl
imul
jecxz
cmp
icebp
sub
faddl
cmpl
jbe
jmp
inc
in
cmpsl
jae
repnz
jecxz
test
ficoms
jae
outsb
cmp
sti
push
lods
add
cli
or
xchg
out
nop
imul
mov
jb
ret
or
adc
clc
stos
push
js
xchg
pop
divb
mov
and
ret
jae
adc
push
adc
fsubrs
insl
push
leave
loop
frstor
out
imul
lret
emms
inc
mul
cs
lds
adcb
es
cs
pop
mov
in
mov
xor
popa
sahf
cld
and
xor
pop
mov
aam
cwtl
cld
fwait
mov
aad
xchg
hlt
lods
sub
nop
loop
adc
pushf
or
mov
adc
sbb
cmp
aaa
adc
xchg
repnz
lods
rcr
ljmp
mov
jae
jmp
xor
lcall
aaa
mov
jae
frstor
aad
pop
push
mov
mov
imul
dec
cmc
repz
adc
jnp
xorl
cltd
mov
das
out
jo
jl
dec
dec
les
xchg
cld
fbstp
xchg
movsl
ret
mull
adc
out
mov
out
jge
fwait
dec
mov
adc
adc
fdivr
imul
shl
shll
adc
xor
inc
push
rorb
pop
jae
popf
leave
icebp
or
pop
gs
punpckldq
addb
leave
idivl
jecxz
xchg
shl
adc
mov
push
mov
pop
or
xchg
in
popa
and
repnz
jmp
gs
push
adc
jae
jp
lea
inc
mov
pop
push
inc
jae
lret
cmp
mov
sbb
inc
in
jmp
pushl
int
in
pusha
in
or
out
clc
lcall
imul
adc
nop
hlt
jae
add
xor
or
jae
xchg
lret
in
incl
in
pop
lret
mov
les
pusha
hlt
in
shrb
iret
pop
in
icebp
push
stos
add
js
jmp
pop
lahf
lds
xchg
sub
idivb
movsl
sbbl
mov
outsl
leave
sbb
lods
adc
xlat
std
adcl
fsts
rcl
push
int3
in
fnstsw
jns
xchg
push
mov
test
mov
mov
test
mov
fdivrl
arpl
adc
imul
or
addr16
jge
sar
push
int
jnp
adc
scas
lret
inc
shrb
popa
push
pop
sub
rorb
cmp
jnp
shll
mov
aas
enter
daa
xchg
jb
sub
in
js
repz
cld
mov
push
xor
repnz
push
push
pop
dec
pushf
dec
xor
mov
dec
movsl
adc
sub
mov
and
mov
aam
and
sub
pop
mov
push
ret
dec
ss
xor
push
inc
push
popa
mov
mov
pop
inc
popa
hlt
rcll
pop
aad
pop
inc
lds
sbb
mov
jb
mov
stc
lret
dec
out
popa
xlat
pop
xor
pop
out
insb
and
pop
cmp
fldenv
cmp
ds
push
cmp
inc
dec
pop
mov
xor
shrb
xchg
cmp
jb
dec
inc
sub
notl
test
pop
sbb
xor
pop
jae
cs
icebp
mov
movsl
sub
lds
das
pop
sti
int
push
and
inc
sub
cmpsb
mov
dec
insb
xchg
in
lods
mov
jmp
inc
and
pop
sti
shll
sbb
dec
and
jb
mov
sub
and
loop
add
jb
add
mov
pop
jae
cmp
lahf
sbb
mov
inc
push
idivb
leave
outsl
mov
cwtl
xchg
add
into
pop
ja
and
xchg
jecxz
jb
pop
lods
cmp
test
xchg
jnp
fdivr
repnz
repz
add
mov
xchg
xchg
jb
scas
jae
and
repnz
popa
sub
lods
mov
idivb
pop
test
mov
popa
dec
movsl
add
pop
pop
xchg
lds
out
xchg
in
ljmp
aaa
push
xorl
popa
clc
pop
out
test
add
xor
jg
push
je
lret
int3
popa
mov
mov
int
mov
and
jb
jge
popa
mov
pop
mov
enter
lret
out
jcxz
loopne
je
mov
imulb
mov
popf
push
jne
lcall
mov
addb
jnp
cs
mov
pop
insl
mov
xchg
xchg
sub
imul
pop
or
push
dec
mov
mov
pop
jecxz
ret
movsl
xor
sbb
into
or
movl
shll
xor
outsl
xchg
fstpl
imul
push
lahf
shll
mov
mov
ficoms
imul
xor
push
addr16
aam
out
popa
mov
ror
fisubs
das
loop
xchg
sbb
xchg
mov
fadd
es
outsl
cmpsl
repz
dec
cmp
lret
andb
sarb
movsl
sti
in
int
push
mov
iret
test
scas
mov
ficomps
xorl
mov
mov
adc
inc
fidivs
push
std
call
cmp
dec
cltd
fsts
test
fsubrp
shrl
ret
and
mov
inc
and
js
sub
xchg
out
popa
or
into
fidivrs
daa
lods
mov
pop
mov
imul
mov
aam
jp
outsl
push
popa
out
mov
mov
shlb
cwtl
mov
pop
mov
popa
faddp
outsl
iret
dec
push
ret
inc
adc
push
shll
sbb
push
dec
mov
popa
or
das
ficoms
rcll
dec
lret
dec
adc
std
imul
out
out
cmc
sub
stos
int3
imul
mov
leave
push
sbb
aas
and
aas
xor
arpl
imul
ficoms
aad
cli
dec
sub
fisubrs
test
fisubs
dec
xor
pop
mov
mov
or
popa
fiadds
fwait
out
mov
imul
popa
stos
xor
sub
rolb
jb
fidivrs
arpl
cmp
in
ret
aas
or
jmp
call
imul
push
sbb
imul
mov
dec
dec
outsb
call
mov
gs
movsb
das
call
iret
and
lods
mov
imul
jb
imul
push
out
jecxz
call
add
std
pop
or
push
cmp
jb
xor
push
push
push
xor
in
inc
sbb
lods
pop
or
or
add
pop
mov
icebp
ja
mov
add
test
mov
rcll
ja
leave
lcall
jb
test
ja
jp
jno
movl
jg
rclb
inc
mov
jno
les
cltd
xchg
jne
or
shlb
stc
shrb
adc
ljmp
add
imul
insb
jae
pop
or
mov
imul
outsb
xchg
mov
and
outsb
popa
dec
push
in
inc
sbb
inc
adc
jmp
cmp
out
cli
jae
ss
xor
fldt
imul
and
iret
in
and
sbb
pop
es
scas
mov
dec
xor
aad
rcrl
das
call
stc
ds
and
popa
dec
jnp
dec
jae
testl
inc
add
jbe
in
mov
sub
aad
push
ret
mov
adc
lods
adc
int
lret
lds
ds
es
add
pusha
insb
push
xchg
dec
xor
fs
out
cltd
push
sub
out
cwtl
pop
mov
cmp
popa
dec
sbb
add
std
dec
adc
inc
movsb
sti
mov
jae,pt
in
cmp
out
xor
out
sub
jecxz
fbld
mov
in
ss
fsubrl
je
cmp
mov
push
inc
dec
mov
scas
xchg
pop
jle
dec
mov
in
sahf
in
out
mov
insb
pop
sub
insb
cmc
inc
sub
popa
push
es
dec
jae
add
push
add
add
cmp
cmc
xor
ss
sub
out
pop
mov
xor
test
ss
jmp
insb
pop
lods
xchg
jle
dec
xchg
xor
mov
mov
cmc
bound
lock
scas
sub
push
movsl
adc
adc
adc
adc
dec
push
or
add
incl
stc
insb
push
into
lods
sub
scas
arpl
inc
adcl
xchg
scas
xchg
jle
dec
xor
in
sahf
pushf
cltd
insb
int3
mulb
and
jae,pn
sub
push
and
dec
sbb
dec
or
inc
push
or
hlt
pop
insb
dec
cmc
insb
and
mov
push
jge
mov
mov
fisubrs
mov
sbb
push
lock
dec
sbb
insb
jo
jae
cli
cmpsb
shll
sub
xor
std
sub
jae
daa
push
and
push
sbb
jae
adc
dec
add
inc
cli
jae
cmp
pop
cmp
std
xor
cmc
cs
sbb
fstl
mov
fbstp
test
es
mov
scas
xchg
pop
jle
dec
mov
in
aad
mov
xor
sub
mov
push
push
daa
push
adc
out
or
and
jmp
sbb
jecxz
xchg
cld
adc
jne
enter
ds
or
neg
push
insb
sub
add
xchg
aad
cltd
cmp
sub
inc
clc
shlw
xor
pusha
outsl
cs
insb
dec
or
dec
pop
insb
cmp
pop
ss
imul
pushf
scas
pop
jecxz
jns
imul
mov
dec
insb
aad
pop
in
aad
rcrl
xor
xchg
mov
sbb
jmp
orl
outsl
or
push
add
push
repz
jae
inc
loopne
inc
aam
cmp
shll
mov
cmp
mov
and
push
push
pop
neg
mov
jle
pop
dec
xor
xchg
aad
cltd
das
subl
addr16
out
popa
popa
sbb
adc
loope
pop
push
jecxz
add
push
clc
imul
loopne
push
iret
cmp
lret
punpckhdq
mov
loop
dec
or
jbe
mov
dec
xor
stos
cld
cwtl
mov
push
cs
insb
insb
sahf
movsl
addr16
out
popa
popa
and
sub
or
push
movsb
push
aad
jae
xlat
dec
cli
rorl
iret
xor
lods
sbb
mov
shll
rorl
inc
fldt
inc
mov
orl
scas
xchg
pop
jle
dec
mov
stos
jp
call
test
insb
ss
xlat
aam
rcrl
int
push
lods
or
dec
imulb
ds
mov
clc
popa
in
lcall
xchg
mov
ds
inc
push
jbe
les
call
in
adc
movsl
xor
or
js
repz
popa
push
out
adc
in
adc
rol
inc
xor
mov
popa
dec
add
mov
hlt
mov
es
and
or
jle
jb
loope
cmp
inc
in
clc
movsb
mov
notl
insb
aaa
clc
fsubrl
pop
mov
mov
in
ficoms
pop
or
je
lcall
xor
imul
ss
scas
fwait
imulb
mov
jae
stos
jmp
sarb
lret
shrb
imul
xchg
call
mov
mov
sub
dec
mov
addl
mov
mov
shlb
popa
in
cli
imul
mov
incb
bound
leave
cmp
mov
mov
xor
mov
sub
mov
and
lods
outsb
sbb
test
jb
pop
or
push
cs
dec
or
dec
sbb
mov
and
mov
push
icebp
pop
mov
scas
and
lods
push
iret
push
sbb
leave
push
or
dec
pop
add
dec
insb
insl
lock
inc
in
inc
fdivrs
xor
xlat
sub
jle
in
ds
mov
orb
fcompl
xchg
scas
xchg
pop
jle
dec
mov
in
aad
lock
scas
dec
and
sar
and
imul
addr16
shrl
push
popa
pop
sbb
inc
popf
jae
or
push
add
gs
test
ljmp
into
mov
sub
jecxz
insb
aad
pop
xchg
jle
mov
mov
xchg
jae
loopne
sti
imul
fistpll
push
mov
insb
mov
cld
roll
lock
fs
ds
lret
inc
sub
outsb
xor
fdecstp
cmc
std
pop
neg
mov
dec
sub
sub
repnz
mov
dec
es
insb
gs
imull
or
out
pop
adc
jae
or
push
add
dec
clc
pop
fisttpl
xlat
insb
scas
leave
or
lcall
xchg
push
divb
insb
sub
xor
push
cld
push
insb
add
arpl
imul
ljmp
jmp
jae
out
loope
lock
in
pusha
insl
cmp
mov
sub
mov
aaa
or
and
mov
fiadds
scas
xchg
mov
xor
aad
insb
rolb
pop
dec
pop
aas
inc
imull
pop
or
push
or
push
add
dec
hlt
in
gs
loope
loop
or
es
arpl
sbb
mov
insb
int
insb
cmp
call
pop
dec
mov
in
aad
insb
aas
pusha
dec
insb
jae
ss
and
or
dec
jae
or
add
inc
cmp
cmc
mov
jmp
out
mov
aad
cwtl
mov
cmc
push
pop
neg
mov
dec
pop
xor
aad
mov
xor
jae
xor
xor
push
adc
hlt
cli
dec
or
movsbl
repz
icebp
xor
out
cs
in
adc
repnz
jp
mov
scas
xchg
jle
fs
xor
jmp
ljmp
inc
cmp
pop
xor
dec
imul
adc
inc
add
add
ss
int
leave
adc
adc
insb
push
dec
pop
faddp
mov
jne
push
xor
jns
inc
insb
sub
dec
dec
pop
cmp
imul
sbb
cmpsb
dec
push
or
subb
sti
ss
imull
in
and
out
ljmp
call
mov
cmc
mov
scas
sub
dec
mov
in
or
xchg
cs
and
pop
push
pusha
and
push
pop
imul
inc
add
addr16
aas
cmp
push
sbb
adc
stos
jmp
popa
sbb
call
xchg
xchg
jle
das
dec
jbe
pop
push
jae
and
fimull
push
and
cmp
fdivl
cmp
dec
push
xor
sbb
jae
sbb
dec
adc
dec
add
sbb
cmp
repnz
xor
stc
sub
negl
sub
mov
xchg
neg
or
ret
xor
sub
insb
ss
cmp
loopne
daa
insb
jae
mov
cmp
dec
imul
clc
insl
aaa
sub
sub
sbb
and
stc
sbb
les
push
mov
inc
or
or
es
or
jle
dec
dec
nop
push
lahf
inc
sub
jnp
xor
and
pop
leave
mov
fidivl
pop
push
insl
inc
adc
or
or
cmp
inc
jecxz
cmp
bound
jae
gs
ds
mov
lods
jp
insl
in
fnstsw
sbb
xor
cmp
dec
jne
jnp
adc
sub
in
sbb
and
fsubrl
dec
sub
sub
and
and
int3
movsb
dec
mov
and
scas
jle
insl
jp
int
aad
insl
push
pop
insl
adc
insl
sbb
fs
pop
in
arpl
xor
mov
in
sub
in
xlat
pop
cmp
insb
mov
insb
mov
outsb
nop
icebp
sbb
or
imul
es
outsl
je
ret
pop
dec
dec
into
test
addr16
pop
sahf
sub
cmpsl
sbb
test
fnsave
fiadds
mov
cld
sbb
or
mov
andb
negb
jnp
lret
push
pop
test
dec
sbb
push
push
push
jge
ja
scas
inc
test
outsl
int
pop
in
out
stos
popa
outsl
push
push
dec
cmp
loope
cmp
movsl
int
cmp
arpl
sti
imul
cltd
mov
inc
cmp
mov
outsl
imul
fimull
ja
hlt
arpl
sbb
adc
dec
dec
inc
into
jae
cs
movb
push
lret
dec
int
iret
leave
out
sub
and
scas
jae
and
test
or
jae
inc
add
in
sub
fs
cmp
lret
mov
jo
or
addr16
cli
pop
push
mov
stc
and
dec
leave
dec
dec
cmp
into
scas
dec
imul
or
out
enter
outsb
repz
test
lods
sub
jae
mov
das
pxor
and
mov
shrl
push
lods
add
adc
out
jae
inc
inc
and
push
les
sub
aas
or
aaa
hlt
mov
pushf
jns
jo
cltd
push
lea
lods
test
jae
xchg
mov
cwtl
jae
pop
xor
jae
or
push
out
movsl
xchg
jae
or
imul
or
push
pop
gs
scas
pop
sbb
shll
int3
insl
xchg
fdivs
or
int
pusha
jp
popa
fwait
cltd
popa
shlb
sub
or
hlt
jmp
outsb
repnz
stos
int
popa
mov
push
or
jae
iret
xchg
inc
mov
jo
jae
xor
loop
add
pop
add
cmp
loope
jno
out
mov
lock
adc
lcall
clc
jg
hlt
mov
int
dec
xorb
sti
jb
loopne
pushf
sbb
xchg
imul
mov
fwait
in
int
pop
repz
cld
js
jae
iret
test
jae
add
jp
mov
cmp
iret
nop
pop
sbb
xchg
pop
jae
scas
sahf
in
adc
xchg
xchg
jnp
adc
or
pusha
inc
mov
cvtpi2ps
xchg
cmp
adc
dec
pushl
sub
in
pop
inc
scas
mov
pop
jae
sarb
ljmp
adc
mov
inc
push
stos
int
fucomi
mov
popa
jmp
sub
or
and
mov
stc
fadd
sahf
aad
push
mov
adc
daa
ljmp
push
cmp
jp
stos
xor
pop
pushf
insb
sar
cmp
or
notl
adc
jbe
jae
xchg
lahf
lret
inc
add
fnstenv
sbb
dec
jae
jbe
stc
les
mov
mov
jb
lods
psllq
ja
sbb
iret
loop
or
shl
lods
test
es
scas
xor
lock
sub
adc
fwait
aad
jne
lds
mov
push
jae
xchg
or
jae
cwtl
notl
jo
or
addr16
daa
sbb
or
pop
push
adc
out
xchg
jl
ds
jae
je
cmpsb
push
mov
mov
or
jg
jae
addb
fwait
jge
es
xor
and
dec
popa
push
sbb
inc
or
dec
jmp
jae
jg
cltd
lods
fcmovnbe
aad
ret
lea
mov
lods
jae
add
notl
nop
jae
or
mov
inc
mov
mov
lret
add
insl
push
std
dec
fistl
xchg
mov
popf
adc
stos
sub
push
pop
add
xchg
pop
mov
cmpsl
jae
roll
lock
imul
adc
push
xor
cmp
popa
xchg
jge
leave
mov
inc
push
pop
scas
inc
adc
and
add
cmp
push
jg
jo
jae
pop
jmp
icebp
jne
mov
adc
addl
jae
mov
jmp
sbb
mov
ret
aas
pushf
out
mov
test
dec
push
sub
mov
shl
lahf
je
popl
jae
xchg
jl
jne
popa
pop
insl
cmp
repnz
lods
insb
shll
inc
lea
and
or
imul
mov
xor
in
das
jge
xchg
xchg
add
test
jae
push
repnz
mov
ret
xor
dec
adc
push
dec
cmp
cltd
insl
frstor
pop
jl
les
cmp
fildll
popa
mov
jae
lock
xor
xchg
sbb
add
cltd
cmp
mov
dec
rcrl
incl
lock
jae
sub
jl
add
mov
mov
dec
mov
shrb
pushf
xchg
daa
jp
fdivr
push
and
lods
shlb
outsl
loop
mov
aad
insb
inc
sbb
inc
pop
jbe
xchg
jne
lret
insl
mov
sti
loope
in
fcmovnb
jae
jle
and
fsubrl
fidivl
int
cmp
shlb
call
hlt
cld
jae
cmpsb
in
out
pop
daa
imulb
add
jp
push
jnp
aad
pusha
fiaddl
jae
mov
shr
or
dec
in
jno
mov
xchg
mov
xchg
insb
push
mov
es
adc
xchg
xchg
out
adc
inc
fnstenv
daa
loop
repnz
cmc
jae
jb
ljmp
adc
aaa
mov
push
adc
cmpsl
pop
jae
arpl
inc
les
push
ds
je
lret
lret
fsubrp
jae
leave
divb
imul
ret
fidivs
push
fcmovbe
jl
cmp
insl
mov
pop
test
pop
sbb
xchg
lahf
aad
dec
iret
jae
nop
push
popf
fstpt
imul
lret
jae
repnz
sbb
jl
cmp
sub
lahf
pop
adc
xchg
out
jae
cmpsl
mov
adc
insl
sarl
aaa
xchg
cwtl
mov
mov
fdivrp
jae
mov
adc
loop
cmp
xchg
outsl
adc
sbb
js
shrb
jg
xchg
and
in
push
icebp
fnstenv
fwait
jae
int
cli
cmp
and
jae
sahf
add
sbb
jecxz
mov
push
movsb
mov
jle
pop
push
cmpsl
aad
pop
jae
leave
pop
jnp
jae
inc
bnd
shrl
xorb
shlb
pop
iret
nop
cmp
mov
jnp
ja
cmc
cli
xor
jae
test
push
orb
scas
icebp
popa
mov
roll
ss
dec
popf
sbb
lret
and
cmp
adc
and
insb
mov
add
lock
inc
add
lea
sahf
sbb
lret
clc
cld
out
das
pushf
xor
jae
pop
fdivrl
jae
aam
inc
test
imul
ret
or
insb
dec
jge
adc
jae
cmp
jmp
push
lods
lret
jmp
cmpsl
cltd
jae
imul
addr16
or
pop
xor
ljmp
pusha
xlat
nop
add
mov
xor
cwtl
cmp
ljmp
mov
rorl
pop
add
sarl
ret
ret
mov
mov
loopne
insb
push
or
aam
mov
jae
enter
cmp
cmp
adc
jae
adc
sbb
jae
mov
and
mov
cmp
jae
aam
mov
jae
adc
pop
mov
push
inc
jae
data16
jae
cmp
or
cmpsb
or
and
or
stos
lret
sahf
jae
cmpsl
push
and
mov
inc
inc
popf
call
addl
pop
mov
jae
mov
stc
xchg
jp
ja
jae
sarb
sub
daa
adc
insl
mov
imul
jae
cmpsb
dec
sar
inc
sub
xor
inc
pop
adc
or
data16
mov
adc
js
divl
int
cs
xchg
insb
pop
jg
xor
jne
dec
jae
leave
sbb
mov
adc
icebp
sub
lds
out
es
push
and
sub
mov
lret
xchg
ja
popf
inc
pop
sbb
jae
xchg
xchg
sub
pop
jae
in
push
data16
popa
adcb
dec
sbb
stos
jg
popf
adc
subl
dec
or
lahf
aaa
setno
loop
fdivl
lods
popa
dec
jb
jae
add
test
jae
cli
pop
xchg
jecxz
aam
dec
les
ficoms
jno
cmpb
rorl
popf
imul
lock
aad
cmp
and
mov
lods
lret
out
test
les
jne
in
fidivs
cmc
pop
int
jae
or
divb
mov
add
lret
xchg
mov
and
pop
iret
push
xchg
sti
jae
and
pop
lds
enter
lahf
popf
and
mov
leave
jecxz
imul
cs
rcr
call
pop
movsb
repz
dec
lret
js
adc
xor
nop
pop
dec
sbb
adc
stc
in
xchg
xor
call
js
test
add
xor
pop
js
cmp
sbb
pop
inc
lea
sub
mov
dec
int
fwait
test
jns
imul
mov
xchg
mov
pop
lahf
inc
repnz
add
sub
aaa
imul
sbb
xor
mov
call
xor
dec
out
sarb
imul
xor
adcl
and
cmp
mov
lret
jecxz
sbb
xor
fwait
ret
or
das
xor
mov
fdivl
ljmp
xorb
xchg
sub
sahf
stos
fsubs
jno
es
leave
iret
xchg
cmp
les
dec
mov
add
scas
js
jnp
push
mov
movsl
rcll
fs
ltr
iret
cwtl
dec
cltd
sub
fisubl
sbb
pop
rcrb
loop
pushf
mov
jne
push
pop
add
fists
stc
test
movsb
ja
sbb
inc
out
ret
dec
lret
cwtl
dec
icebp
mov
test
and
inc
ret
sub
inc
dec
ret
sbb
inc
xor
sbb
ret
iret
dec
pop
fwait
sub
aas
repz
mov
es
ds
clc
mov
sbb
cmp
in
mov
fyl2x
repz
out
outsl
jns
mov
aas
mov
sbb
call
push
xorb
push
cmp
aas
daa
std
sbb
or
stc
adc
mov
int3
adc
clc
dec
and
mov
sbbl
fdivrl
add
pop
add
popa
js
psubsb
psubsb
test
fs
mov
js,pt
setge
cmp
mov
por
cmp
dec
push
jp
xchg
xchg
es
jae
sbb
sub
jae
or
push
or
ja
pop
scas
leave
and
sbb
stc
add
pop
orl
mov
xchg
jae
movsb
in
fldenv
js
jae
pop
mov
inc
jae
mov
dec
jae
imul
pop
addr16
movsl
shlb
cpuid
and
adc
sbb
movsb
rcl
dec
inc
insl
mov
or
jno
and
cmpsb
dec
and
out
jp
dec
pushf
rclb
mov
xchg
push
xchg
dec
jae
add
xchg
fidivl
insb
ffree
fsubrp
int
add
mov
jb
jae
mov
mov
jae
popf
xor
aaa
mov
mov
cmp
xchg
in
jae
pop
cmp
adc
mov
lahf
fwait
test
push
cmp
cld
jle
jae
decb
clc
jmp
sub
cmp
add
push
jne
push
mov
popa
clc
loop
and
pop
test
mov
fldenv
pop
pop
insb
div
inc
add
lret
xchg
ret
sbb
js
cmp
lahf
loop
jp
insb
je
mov
pop
lock
adc
or
xchg
xor
or
repnz
into
jg
popf
cmc
cmp
cmp
mov
jo
jae
movl
jae
pop
jle
inc
push
std
mov
ja
rcr
cmpsl
aas
jae
ret
cwtl
cmp
xor
mov
push
cmc
les
jb
icebp
jbe
stc
bound
xchg
in
pop
adc
int
jae
jns
xor
fs
lods
dec
sahf
fwait
or
pop
les
test
daa
fs
and
insl
js
lahf
aas
pushf
lret
jmp
jns
xchg
jl
mov
add
xlat
xchg
pop
aam
loope
push
rolb
jae,pn
scas
push
or
dec
cmp
dec
push
jb
popa
xor
pop
push
or
pop
and
jae
daa
inc
cmc
jne
xchg
ss
push
pushf
imul
dec
aad
mov
data16
sbb
jae
cwtl
inc
mov
push
pushf
out
insl
mov
dec
jbe
sarb
scas
jnp
inc
mov
jp
xchg
mov
mov
aas
lock
xchg
icebp
xchg
xchg
jae
std
das
sti
addl
sbb
jae
add
scas
loop
add
sbb
movsb
aaa
hlt
sub
popa
dec
test
mov
flds
inc
fldl
mov
insl
xlat
jns
xchg
aas
sub
jg
repz
mov
add
sbb
pushf
fidivl
mov
shll
or
and
pop
cmp
pop
sbb
pop
mov
insl
or
dec
sub
add
jae
add
xor
xlat
push
mov
rorb
pop
add
mov
shl
and
jnp
jae
pop
fidivrl
or
xchg
sbb
jmp
ret
sbb
add
jmp
pop
push
add
jg
mov
repz
jb
cwtl
add
cmc
add
mov
xor
test
popf
mov
lds
xchg
jo
jne
bnd
adc
sbb
out
jl
ja
jae
fistps
jne
cltd
jae
leave
flds
pop
push
loopne
dec
pushf
inc
mov
roll
jae
ret
pop
jg
fistps
mov
add
imul
test
in
xor
push
xlat
push
lcall
jae
mov
cmpsb
hlt
repnz
outsb
mov
mov
sub
mov
sub
dec
imul
sbb
xor
insl
aaa
xor
cs
jb
dec
or
sti
cmp
std
pop
adc
test
mov
stos
pop
inc
cmp
dec
test
sahf
cwtl
out
inc
frstor
jp
movl
loop
bound
push
mov
icebp
and
mov
fiadds
jne
shll
gs
dec
cli
adc
jae
fmul
inc
cmp
pop
repz
xor
adc
add
jl
stos
xorl
xchg
push
insb
lods
daa
or
sahf
jns
jbe
or
adcb
mov
loopne
mov
stos
ds
aad
and
jae
adc
xchg
inc
insb
mov
adc
pop
roll
mov
jne
dec
movsl
inc
test
popf
jns
ret
xor
mov
jae
mov
jo
jae
daa
jle
xor
jae
xchg
mov
test
cwtl
push
shll
inc
rolb
dec
test
cltd
mov
sbbl
jae
adc
inc
or
xchg
pop
jp
jae
lret
stos
ja
iret
ret
cmc
int3
push
add
jge
fistps
into
jae
pop
jg
pop
add
inc
jmp
push
testb
add
push
adc
xchg
cmp
cltd
fimull
jae
fnstcw
scas
mov
adc
or
aaa
nop
lret
xchg
sbb
cltd
loope
adc
jae
inc
adc
ljmp
pop
sbbl
sub
cmp
aas
shrl
insb
inc
das
push
jnp
aam
in
out
insb
lea
pop
jae
push
sbb
adc
aad
sub
push
test
jae
cmc
cmp
popa
ja
out
xchg
ja
pop
adc
xchg
js
andl
jb
and
mov
jmp
xor
jne
xor
inc
fcomp
pushf
cltd
rcrl
cld
jae
jle
and
mov
jb
ljmp
scas
xor
mov
pop
cwtl
pop
subl
xchg
hlt
insb
pop
fdivrl
daa
lods
sub
mov
mov
mov
mov
sub
lods
cmp
stos
fs
js
ds
push
fxtract
and
xchg
cmpsl
dec
call
inc
out
and
xchg
repnz
cli
imul
inc
inc
push
jae
pop
sbb
push
repnz
jae
enter
jmp
call
icebp
and
mov
lods
push
test
fstps
std
lds
add
mov
xchg
cltd
pop
scas
hlt
aad
jae
and
sub
xor
mov
loope
mov
fnstenv
jae
mov
pop
cmpsl
mov
loop
shlb
add
add
pushf
xchg
lcall
pop
iret
push
cwtl
inc
orb
enter
lret
mov
sbb
pushl
sbb
lds
or
cli
ja
sub
add
ret
je
jle
lret
xor
xchg
aaa
sti
sub
test
shlb
dec
mov
btc
and
xor
add
clc
pop
aas
ret
and
xor
int
call
xor
add
insb
and
aad
cmp
xchg
add
in
sub
shll
ds
mov
int
sbb
pop
xorl
enter
cmpsb
add
shlb
hlt
lds
fidivrl
testl
aas
cwtl
xor
insb
fs
or
aam
mov
mov
mov
pop
push
dec
pop
jmp
jo
and
in
lock
mov
dec
xchg
jae
aaa
or
push
js
and
sub
cmp
fiadds
clc
xchg
add
icebp
pop
jge
outsb
and
adc
adc
je
popa
icebp
cmp
pop
jb
aam
sub
pop
je
pusha
das
mov
jnp
jae
or
cmc
rcrb
rcl
fdivs
mov
lods
xchg
dec
add
test
lret
repz
mov
rcrl
dec
rorb
lret
xor
or
cmp
outsl
ja
jae
add
pop
cmpsl
xchg
jae
add
mov
push
mov
add
or
and
sbb
fsubr
xor
mov
jae
pushf
jmp
xchg
insl
lds
cmpsb
popf
inc
notl
mov
jae
sub
inc
and
dec
mov
mov
dec
test
add
push
sub
loop
fidivrs
sub
aaa
sbb
imull
data16
cmp
xchg
push
jae
mov
mov
pop
jl
es
outsl
movsb
fistps
bound
mov
repz
jae
and
and
rcrb
dec
mov
push
movsb
and
add
jae
add
jns
jae
popf
lods
xlat
xor
dec
loope
dec
repz
pop
cli
rclb
jmp
and
loope
mov
xchg
pop
inc
mov
lret
adc
iret
call
int
and
xchg
stos
in
mov
leave
aam
repnz
push
adc
out
stos
jae
mov
mov
mov
push
adcl
ja
test
repz
xchg
xor
movl
sub
jae
cmc
clc
js
lret
inc
jbe
mov
pop
repnz
xchg
push
movb
lods
inc
lea
xor
mov
lcall
loop
fucomi
into
ja
jbe
cmp
push
sbb
iret
rcr
fwait
cwtl
fisubrl
add
adc
arpl
xchg
dec
cmp
cmp
mov
sarl
sarb
jle
int3
xchg
test
pop
adc
in
xor
dec
je
ja
leave
jae
push
clc
add
cmpsl
sub
cmpb
repz
outsl
ror
iret
jl
mov
gs
pop
jle
adc
mov
inc
ja
jae
sbb
stos
jae
pop
out
mov
mov
cmp
lcall
fwait
add
mov
mov
dec
inc
lcall
jne
sbb
xchg
mov
inc
aaa
insb
add
int
inc
lret
repz
cmp
ja
mov
es
shll
repnz
cmpb
ja
mov
add
mov
jae
pop
xchg
sbb
adc
sbb
roll
inc
add
test
push
mov
jp
sti
loopne
shlb
inc
push
inc
lcall
and
es
or
lret
push
sub
add
xor
pop
jb
int
mov
mov
adc
lahf
insb
jge
mov
jl
sub
and
insl
lds
sub
jnp
xchg
lods
jmp
pop
js
xchg
adc
inc
std
push
fsubr
jae
sbb
aaa
mov
popa
inc
incb
xchg
rclb
pop
sbb
sbb
xor
pop
push
jae
or
or
push
int3
push
frstor
and
or
push
pop
mov
sbbl
push
in
test
jae
and
mov
jae
sbb
rol
mov
test
cmpsl
push
jae
mov
lock
das
jae
aas
emms
roll
mov
cltd
jae
adc
mov
jg
lods
add
divl
xchg
pushl
dec
test
mov
rorb
test
sahf
and
adc
test
out
pop
mov
jae
inc
ss
js
push
jae
sbb
sarl
jb
je
cs
cwtl
xchg
xor
xchg
sub
and
sub
add
movsl
fstl
js
std
stos
shll
mov
into
aaa
ret
jg
xor
mov
movsl
jge
ss
and
sti
test
pop
xchg
mov
add
and
adc
mov
push
ficomps
daa
dec
jae
sbb
and
dec
aas
add
jl
out
mov
repnz
mov
and
scas
mov
das
mov
js
adcb
sti
adc
roll
inc
fnstcw
popa
lahf
mov
test
lock
or
test
lret
jae
xchg
mov
fisubl
iret
fsub
insl
adc
mov
std
pushf
ja
jae
js
test
notl
aas
imul
shlb
orl
lods
sbb
xchg
pop
jb
xchg
jge
imul
cmp
lret
scas
leave
and
jae
scas
inc
sahf
push
iret
mov
jnp
jae
in
mov
sbb
mov
sbb
pop
jne
add
sbb
inc
inc
test
dec
jae
adc
inc
sub
mov
dec
lods
cmp
ljmp
jae
cmpsb
cmpl
push
push
push
mov
xor
lock
or
movb
mov
ja
xor
push
cli
cmpl
jmp
sub
pop
lret
adc
sarl
and
jae
lcall
inc
stc
jae
out
hlt
xchg
fsts
leave
ss
xor
xchg
or
add
mov
scas
cmpb
jae
adc
mov
popa
mov
sub
in
cs
in
ds
out
nop
mov
mov
dec
dec
shll
adc
rcrb
mov
bound
cmp
push
div
mov
insb
pop
lds
dec
sbb
mov
jge
or
xor
jl
daa
xchg
aam
in
cwtl
inc
sub
clc
jae
add
insl
icebp
sbb
xchg
call
and
jo
shrl
int
mov
and
fs
scas
insb
mov
mov
mov
or
popf
jae
push
sbb
mov
mov
loopne
inc
sub
adc
xor
cmp
cld
stos
xor
cmpsb
sub
ret
std
gs
dec
cltd
mov
adc
aas
dec
shll
jle
arpl
test
or
das
pop
pop
xchg
and
xor
icebp
mov
push
mov
or
sub
lods
shlb
fsts
je
fbstp
dec
leave
lret
cli
push
cmp
sarl
insb
iret
mov
dec
mov
mov
xchg
mov
inc
mov
jae
rorl
jge
xchg
imul
push
inc
xor
dec
mov
cmp
mov
ret
leave
jl
mov
jae
or
jae
fs
mov
jae
iret
std
push
decl
push
leave
shll
fdivp
out
pushf
shl
xchg
xchg
jne
movl
and
lock
jge
in
mov
sbb
jae
into
dec
cli
das
adc
cld
popf
insb
sti
mov
or
std
jmp
lods
inc
orb
ret
pop
sahf
mov
jae
shl
xchg
xchg
aas
jae
xchg
ds
add
mov
in
pop
out
dec
shlb
inc
pop
push
jae
stos
adcb
outsl
pushl
mov
icebp
rcrb
aam
into
jae
negl
mov
jae
mov
test
sbb
and
stos
insl
jecxz
rcrl
mov
mov
idivb
aaa
jae
cltd
pusha
adc
xchg
pushf
pop
icebp
jae
mov
inc
adc
mov
adcl
into
out
icebp
jns
in
cli
cmpsl
adc
mov
cltd
xchg
jbe
pop
jae
loope
adc
rorb
add
insl
and
xchg
push
jle
out
lods
adc
add
movsl
dec
negb
je
mov
fbstp
mov
jae
aam
mov
cmpb
mov
push
jne
pop
mov
test
mov
lock
mov
mov
inc
push
jp
jbe
sbbb
sbb
mov
push
stos
mov
int
fnsave
andb
xchg
fs
jle
imul
mov
ret
adc
add
insb
sbbb
jmp
push
mov
xorl
ret
std
nop
stos
ja
cld
ror
lds
pop
mull
sbb
mov
test
add
xor
adc
mov
ljmp
lods
mov
aam
test
add
sbb
outsb
inc
aas
and
ljmp
inc
fidivs
leave
iret
jl
sub
inc
jo
mov
mov
repz
aaa
inc
dec
ficoml
xchg
dec
jae
idiv
push
jmp
push
xor
adc
sub
arpl
cmp
pop
inc
imul
inc
push
lret
ss
cmp
xor
mov
fucomip
push
sbb
mov
pop
push
andb
pop
dec
xchg
cmpsl
repnz
jae
push
call
or
rorl
dec
xchg
movsl
daa
lods
sbb
jae
fistps
lahf
jnp
jae
pushl
sti
or
sbb
or
fwait
fs
ljmp
jp
xchg
pop
sbb
mov
inc
cld
mov
jp
mov
cmc
mov
xchg
jae
sbb
adc
add
ss
shld
dec
mov
lock
pop
test
testb
jne
repz
dec
pushf
stos
clc
in
insb
add
xchg
lock
andl
mov
sub
je
rcl
dec
jae
fs
xchg
stos
inc
jae
scas
adc
jne
jg
imul
cltd
pop
repz
in
add
mov
pop
xor
sub
jae
xchg
addb
stos
jmp
mov
dec
cmpsl
fnstenv
adc
and
inc
test
jae
pusha
add
add
sbb
loopne
xchg
mov
xor
int
insb
pop
lahf
out
popa
pop
sbb
xchg
lcall
push
js
call
adc
stos
aad
les
jmp
shlb
in
mov
lods
mov
jge
xlat
push
fidivs
movsl
leave
jae
sbb
sbb
jae
loopne
mov
lea
push
xchg
repz
mov
or
mov
repnz
cmpsl
in
push
add
fdivrs
test
ficoms
hlt
loopne
xorb
cltd
aad
and
xchg
cmpsl
aaa
hlt
and
test
bnd
jne
mov
jae
sbb
xorl
lods
xchg
fs
add
stos
add
daa
xchg
jae
sarl
mov
loope
mov
aas
je
and
test
xchg
or
icebp
mov
das
frstor
mov
sbbl
loop
cli
jae
xchg
lds
ficomps
jae
mov
jle
imul
sub
mov
xor
adc
xor
test
cli
sub
in
push
aaa
xchg
dec
insb
movsl
dec
jo
shll
push
jmp
xchg
jle
mov
jae
aas
adc
push
push
cmp
aad
ret
jae
push
jge
and
es
jae
fistpll
mov
sbb
jae
dec
jle
lea
jp
ja
jae
pop
dec
aas
dec
inc
incb
xchg
shr
sahf
xchg
xor
cld
mov
or
mov
xlat
and
enter
and
xor
imul
mov
xlat
ss
in
scas
test
je
mov
jns
mov
aad
xor
push
enter
xor
sbb
daa
pop
dec
jb
aad
dec
mov
sbb
jae
int
repnz
mov
cmp
push
mov
add
add
add
cwtl
test
aad
js
dec
pushf
lds
push
jae
or
adc
or
hlt
pop
iret
lahf
fs
xor
test
cmpsl
subl
cltd
out
xchg
ja
jnp
popa
dec
lcall
cmpsl
aam
cmp
mov
adc
ficompl
loopne
ljmp
stos
xchg
pushf
dec
in
push
mov
and
sbbb
imul
dec
clc
or
xchg
cmp
les
insl
lret
test
or
aaa
jae
movsb
es
cs
cmpsb
fstps
loopne
sbb
xchg
mov
movsl
mov
mov
jae
jl
aad
fidivs
jae
scas
and
dec
push
sbb
jae
sahf
adc
cmpsb
aas
stos
dec
fwait
jg
mov
sbb
lret
sbb
leave
movsb
mov
dec
sti
push
jp
push
icebp
ret
lahf
je
jnp
and
inc
jae
mov
lret
sbb
dec
call
cwtl
jnp
imul
or
jb
dec
inc
adc
test
imul
jae
dec
cwtl
or
test
cs
jmp
lcall
xor
jg
repz
dec
xor
rolb
adc
xor
fildl
loopne
sbb
mov
adc
xchg
imul
dec
scas
hlt
sbb
jnp
jae
jo
cmpl
pop
xor
jns
stc
cmpsb
jae
clc
mov
jmp
out
jae
sarb
jle
out
xchg
int3
jae
aaa
iret
push
pop
mov
adc
es
mov
xor
jae
mov
inc
jns
jne
lods
scas
adc
addr16
add
insb
adc
xor
push
xor
repz
mov
mov
sahf
xchg
lods
ja
or
dec
js
jae
ljmp
jae
adc
pop
mov
xchg
xchg
jp
subl
dec
inc
push
or
sarl
sarb
dec
loopne
decb
push
add
je
out
sti
jo
jae
into
xchg
leave
mov
adc
mov
jle
aas
clc
sahf
mov
cwtl
roll
fildl
sbb
inc
cld
mov
movsl
test
sub
notl
or
not
inc
popa
jb
mov
lods
icebp
jae
adc
jnp
adc
daa
and
and
dec
xor
sbb
pop
jae
sbb
adc
iret
out
lds
insb
stos
arpl
xchg
jge
add
sbb
xor
cltd
jmp
cld
push
adc
fstpt
fisubrs
pop
les
out
fldenv
cmpsl
xchg
xor
fcomps
cmp
jne
adc
aaa
mov
ficomps
xchg
xor
adc
test
outsl
xor
test
ror
aam
cmp
out
jo
jae
subl
aas
or
mov
jae
test
int
and
push
inc
jmp
push
jmp
aas
jl
aaa
jle
rol
xchg
inc
adc
ja
insl
xlat
push
lret
jb
jecxz
mov
sbb
mov
insb
fidivrl
int3
and
pop
add
cs
popa
icebp
loope
or
jb
imul
xorb
sbb
jns
mov
mov
or
push
sub
fs
fwait
xchg
jle
sbb
clc
push
xor
cld
in
pop
ficomps
mov
adc
mov
add
lods
cld
imul
add
rcrb
mov
fs
call
pushf
sarl
sbb
or
ljmp
jbe
sub
push
jl
cli
mov
jno
add
arpl
jae
mov
fsub
dec
pop
insl
mov
or
fcmovnbe
sbb
push
pushf
aad
ljmp
mov
mov
pop
lcall
repnz
mov
enter
adc
inc
push
push
cld
lcall
mov
insl
les
fstpt
dec
jmp
movsl
lods
inc
mull
cmp
or
daa
inc
push
out
pushf
call
fcmovb
or
dec
jae
adc
jmp
outsl
jne
ja
jb
mov
fdiv
divb
mov
add
outsl
cmp
pop
cmp
insb
mov
push
pushf
shlb
mov
hlt
stos
aaa
fdivrs
mov
cwtl
or
fwait
pusha
adc
scas
or
mov
mov
fists
inc
lds
sub
fdivrs
add
ja
jae
rcrl
lcall
ror
repnz
jo
js
xor
add
in
jae
repnz
js
insb
dec
fmuls
int3
aas
lock
or
jnp
jg,pn
pop
sarb
lret
sbb
and
mov
mov
iret
sub
leave
sub
mov
fdivp
dec
sbb
aad
aad
xchg
std
aaa
loope
pusha
xor
jae
mov
cmp
cli
out
fs
xchg
or
flds
jle
cltd
bound
mov
dec
inc
pop
test
sbb
adc
pop
jb
mov
push
into
push
aam
jae
add
negl
xchg
jle
jne
lods
rorb
xchg
add
enter
es
sbb
push
stos
xor
movsl
push
push
ds
loop
arpl
cmp
fsts
push
rcrl
mov
movsb
add
lcall
and
movl
add
mov
insl
leave
cmp
cmpsl
mov
pop
aam
pop
insl
mov
sbb
popa
xor
xor
out
or
insl
call
mov
push
pop
fisubrs
adc
movsl
aas
pop
or
sbb
mov
push
lock
in
aam
stos
inc
jmp
inc
push
fwait
sub
and
insw
sbb
rcl
sub
mov
imul
lds
aaa
jmp
xor
insb
xor
jmp
mov
and
sbb
jae
in
jb
add
mov
push
call
insl
aad
inc
clc
sub
push
mov
mov
fs
and
popf
scas
rcl
repz
cmp
mov
imul
icebp
xchg
inc
xor
insl
test
pop
out
xchg
fwait
jecxz
xchg
lods
cmp
jb
dec
lahf
jae
xchg
push
sbb
sub
imul
aaa
inc
sub
scas
add
mov
popa
sbb
xchg
inc
int3
sti
sarl
insl
inc
daa
pop
ja
dec
nop
outsl
cltd
inc
or
insl
call
les
ret
inc
and
fs
cwtl
lret
push
mov
jbe
jae
xor
xchg
cld
inc
pop
cli
mov
das
lock
xlat
loopne
jae
or
out
jns
mov
mov
not
shrb
mov
mov
aam
pop
jae
shl
std
sub
inc
pushf
jae
nop
push
dec
or
push
mov
icebp
repz
xchg
push
jae
jne
lea
jp
and
xor
fidivrl
sbb
mov
lahf
push
hlt
or
mov
or
in
shlb
xorl
cmpb
in
loope
push
xchg
mov
jae
mov
pop
xorb
lods
mov
jl
push
and
push
dec
in
lds
jb
cmp
bound
lcall
jb
xchg
and
int
ud1
xor
add
in
sbb
in
rcll
mov
popa
lret
ljmp
push
sbb
js
xor
pushf
cltd
mov
nop
xor
out
rolb
push
jnp
andb
test
jae
cmp
jle
xchg
xchg
sti
xor
sbb
push
std
sub
movsb
sbb
loopne
cmpsb
push
aas
daa
sbb
lods
mov
pop
test
lea
in
je
lods
lock
sub
les
je
aad
jae
sbb
js
mov
cmp
push
add
mov
sbb
cltd
dec
pushf
insl
pop
scas
pop
and
jnp
jae
lahf
pusha
pop
lret
aam
sarb
jmp
jb
xchg
jnp
scas
dec
jne
jmp
dec
push
inc
mov
ja
shll
cwtl
pop
test
pop
xchg
push
mov
sbb
lret
pop
inc
push
test
and
dec
out
jb
loope
stos
mov
mov
ljmp
mov
cltd
xchg
pop
cs
nop
pushf
in
aaa
jmp
movb
ret
push
mov
jge
xchg
jns
push
mov
and
adc
inc
ja
scas
mov
test
adc
lcall
shlb
jae
dec
fsub
mov
dec
lods
aad
cwtl
xchg
jl
orl
jle
lea
cmpb
lock
shr
jnp
xor
push
mov
daa
jae
sbb
ja
mov
jb
test
stos
movsl
xor
fstpl
repnz
xchg
mov
mov
mov
testb
xor
push
mov
mov
dec
jbe
jecxz
daa
adc
repnz
mov
jae
icebp
stos
mov
sub
xor
adc
jle
xlat
jae
nop
into
cmpl
or
xchg
add
fstl
dec
leave
rorb
jae
mov
jne
xor
push
pop
std
loop
push
mov
and
sbbb
dec
xorl
roll
xchg
sbb
mov
mov
lock
sbb
mov
ret
mull
mov
xor
mov
jno
lret
push
pop
ja
xchg
clc
xor
xlat
xchg
jno
mov
or
dec
movsb
addr16
sub
lret
imul
push
bnd
jns
fisubs
adc
jno
mov
pop
push
sbb
fwait
mov
dec
cmp
or
cmp
nop
movsb
enter
xchg
mov
xor
fninit
push
insl
fwait
or
icebp
mov
sbbl
add
rorl
pop
inc
cmp
outsl
adc
adc
jno
mov
popf
jnp
jo
sbb
addr16
xor
or
sti
pop
mov
movl
cmp
iret
gs
rclb
jb
shlb
push
insb
pop
loope
cmpsl
arpl
jmp
cwtl
cmp
pop
push
push
ret
pop
rcl
jnp
jno
shlb
pop
imul
lcall
lret
pusha
jno
out
icebp
mov
mov
out
data16
cmp
cmp
cmp
adc
aad
addr16
add
inc
or
std
into
xor
aaa
cmp
ror
outsl
inc
jae
dec
dec
cs
inc
inc
sub
dec
iret
inc
sub
out
addr16
sub
shrb
popa
sub
arpl
cli
cld
add
pop
shll
imul
sub
push
or
push
dec
iret
popa
inc
pop
inc
cmp
lret
sub
jae
test
mov
inc
inc
icebp
jns
lods
cltd
xchg
or
es
jge
out
jae
enter
jle
mov
jns
lock
stc
xlat
jp
mov
mov
in
fsub
dec
jl
loopne
xchg
sarl
or
jae
dec
stos
ret
inc
and
enter
fsubs
and
imul
inc
xor
xchg
jp
fcoms
mov
fmull
insl
jl
das
loop
pop
test
sub
loopne
les
cld
xor
fs
ss
inc
ror
jae,pt
jmp
push
fdivl
sbb
cmp
call
xchg
fnstsw
mov
mov
add
call
out
insl
or
pop
stc
pop
je
sbb
xchg
mov
setne
jae
cmp
mov
pop
fs
sub
xor
ds
fidivs
dec
inc
popa
mov
or
in
in
dec
dec
aaa
mov
jae
lcall
jae
lahf
addr16
jl
jae
sub
sub
insl
nop
inc
sbb
xchg
cmp
jecxz
out
enter
cmp
cld
mov
mov
jp
pop
negl
jns
enter
int
ret
push
jne
popf
or
jp
movsl
mov
push
in
sbb
lods
mov
jae
lahf
popf
push
push
cmp
push
clc
jae
fldenv
and
xorb
lahf
sub
outsl
cltd
jae
dec
pusha
out
pop
jl
xor
rcrl
mov
inc
fsub
jae
xor
dec
jp
scas
shlb
fstpt
pushf
mov
lods
or
aad
int3
subb
movsl
sahf
fs
mov
push
dec
pop
and
or
insb
sub
cmpsb
daa
clc
js
xor
cmp
pop
push
add
aam
mov
mov
cli
std
sbb
add
lahf
jae
in
je
mov
mov
push
outsl
and
push
and
add
stos
xor
push
js
cld
sub
imul
iret
negl
mov
scas
bnd
mov
cmp
mov
mov
mov
and
xlat
dec
sbb
and
js
inc
push
popa
arpl
cs
jae
inc
lret
sub
mov
in
sub
pushf
lea
add
test
aaa
ja
leave
sub
aad
mov
addr16
cs
inc
sub
ret
dec
or
in
or
scas
test
or
mov
adc
xchg
stos
fwait
mov
or
jecxz
push
sbb
mov
push
xchg
shll
vmovntpd
mov
xchg
fcompl
pushf
pop
les
ss
dec
cltd
scas
push
imul
andl
jae
movsb
mov
jl
mov
pop
pop
add
jmp
cmc
stos
adc
jae
rorl
testl
bound
hlt
mov
xor
lds
mulb
out
aaa
repnz
jbe
adc
popa
mov
mov
sub
jae
fdivrs
js
xchg
pop
jae
aaa
outsl
cli
cs
in
jmp
sbb
and
jp
subb
mov
mov
adc
pop
xchg
sub
mov
sbb
lods
sub
add
fldenv
test
adc
sbb
xchg
lret
mov
jecxz,pn
sbb
jae
fwait
xor
insl
lods
mov
mov
sub
push
sarl
inc
pop
jae
cltd
insb
popl
movsl
stc
push
jge
ljmp
in
loopne
adc
cmp
mov
jae
ret
stos
sub
sub
lcall
add
dec
test
test
rorb
push
sti
popf
push
popa
adcl
sub
jne
jnp
jmp
insb
aam
pushf
cwtl
jae
add
int3
pop
jae
jbe
adc
hlt
pop
mov
push
pop
ret
popf
push
notb
inc
xor
jp
out
xorb
xor
xchg
push
pop
add
scas
jg
adc
jo
repnz
mov
enter
popl
jae
push
add
inc
add
addb
ret
jne
scas
sub
push
sarb
pop
test
lahf
jae
rclb
inc
das
add
jae
push
loopne
xlat
mov
and
aam
stc
sti
clc
xorl
xor
jae
xchg
add
test
enter
push
pop
jmp
leave
adc
cmp
sub
negb
push
insb
or
out
negl
orb
in
cmpsb
sub
push
pop
ljmp
out
imul
cmp
jae
ret
mov
jecxz
inc
push
xchg
push
jp
idivl
jl
pop
shl
dec
ljmp
and
or
sub
es
outsl
popa
outsl
arpl
popa
adc
pop
out
mov
call
sub
out
inc
jae
push
ljmp
stos
nop
fisubl
pop
adc
pop
stos
sub
xchg
mov
jo
or
ja
lods
test
dec
lods
popa
cmp
gs
out
mov
sub
add
les
fs
jae
imul
mov
lahf
jnp
ficompl
mov
leave
movsl
loope
cmp
sbb
jae
fldenv
lret
inc
movl
cmp
mov
clc
into
rolb
jae
fsubrs
ds
outsl
add
jecxz
repnz
subb
inc
mov
adc
scas
repz
inc
sub
sub
out
mov
loope
imul
cmp
call
or
jmp
bound
pop
xchg
adc
sub
mov
push
jp
outsl
mov
mov
pop
repz
stos
inc
enter
iret
sbb
mov
dec
and
repz
jae
jecxz
out
push
lods
push
popa
ror
and
daa
notb
add
lock
in
push
fadd
stos
cltd
mov
jae
and
aas
add
sub
cmp
mov
pop
aaa
imul
or
mov
fidivs
push
xor
inc
adc
xchg
inc
lret
adc
mov
testl
popa
rorb
adc
jae
in
lods
xor
jo
jae
movsb
push
pop
aaa
xor
insl
push
fldcw
pusha
mov
mov
mov
jae
mov
fdivs
in
jae
sbb
loope
scas
cmp
pop
aam
repnz
ret
or
adc
inc
sti
jge
xor
cmp
jmp
xor
push
imull
inc
mov
iret
fisttpll
aaa
into
ror
cmpsb
xchg
mov
insb
cld
cs
pop
or
rorb
cltd
in
stos
hlt
rcrl
mov
sub
in
inc
fs
aaa
jae
aad
hlt
testl
jns
or
adc
mov
pop
pop
jae
es
shrb
inc
mov
jae
push
xchg
clc
sti
daa
movsl
xchg
cli
push
jle
mov
lahf
mov
jae
sbb
jae
ret
sahf
adc
pop
fucomip
jae
and
addr16
sub
dec
aam
sbb
jae
scas
add
push
sbb
push
xchg
in
cld
jecxz
out
xor
hlt
stc
in
aam
ja
lea
jae
xor
jge
adc
fdivrs
out
push
jae
int3
aad
push
out
mov
fincstp
int
sti
loop
jae
sbb
popa
jo
xchg
jae
shl
loope
inc
sbb
out
mov
pop
aam
int3
rolb
jae
or
mov
cld
mov
sahf
scas
xchg
push
sti
jnp
addr16
scas
sub
jae
inc
sub
push
sahf
fildll
push
dec
or
cmpsl
test
rcll
mov
jae
xchg
pop
lods
sti
shll
flds
push
push
dec
jmp
fsub
push
jae
cmp
cwtl
ret
adc
mov
and
adc
lret
out
jp
push
mov
lock
inc
bound
dec
mov
ljmp
test
addb
pop
test
sbbl
jae
pop
mov
lret
iret
in
mov
lea
js
clc
xor
mov
cltd
push
movsl
pop
sbb
pop
cmp
ret
mov
cli
mov
outsl
inc
repnz
and
jne
pushf
loope
mov
movsl
jae
aad
popw
imul
jae
xor
and
test
stos
es
xor
daa
ret
mov
testb
mov
dec
add
mov
xor
loop
loopne
sahf
fnstenv
sbb
icebp
out
cmpb
cmp
fdivrs
ss
jae
lret
in
imul
jmp
and
jg
mov
add
adc
lods
fisubrl
pop
pop
outsl
addr16
cltd
xchg
ss
lock
insb
jg
idiv
cli
adc
int3
add
imul
scas
xor
push
insb
cld
mov
sbb
repnz
xor
inc
bswap
in
mov
pop
jae
aaa
inc
cmp
jae
xchg
lock
orb
insb
mov
xchg
xor
popf
jae
inc
xchg
aaa
sbb
pop
divb
cmp
or
xor
xchg
jae
jnp
jns
jae
ja
mov
jae
xchg
push
insl
rcrb
insl
int
call
popa
xor
adc
icebp
fwait
jno
ja
das
mov
adc
icebp
jnp
mov
and
adc
imul
addr16
sbb
dec
gs
addr16
inc
jae
sub
out
dec
in
sub
jae
ljmp
ror
push
pop
mov
addr16
aas
sub
ftst
add
fildl
scas
pop
and
int3
adc
xchg
sub
jae
mov
mov
rclb
xchg
cwtl
sbb
clc
repnz
pop
out
xchg
pop
dec
outsb
pop
pop
movsl
push
mov
inc
push
lods
std
popf
cs
and
mov
movsb
in
test
rol
jae
push
push
pop
orl
push
sbb
add
mov
push
std
dec
fmull
mov
xchg
nop
jo
cmp
jne
test
xchg
cli
mull
insb
ja,pt
pop
aam
ret
sbb
je
mov
jae
dec
out
add
ds
fwait
fwait
jl
jae
dec
inc
or
cmp
sub
repz
jae
movsb
dec
in
clc
inc
call
les
mov
bnd
in
jae
out
push
sbbb
inc
dec
mov
cmp
shrl
mov
inc
test
mov
jmp
or
cmp
in
out
jp
rcl
jne
sub
push
sbb
inc
inc
in
ja
in
cmp
je
dec
push
pop
xchg
aam
mov
sbb
inc
jns
pop
fldt
pop
clc
fimuls
cltd
mov
jg
mov
pop
mov
nop
xlat
and
stc
std
mov
imul
les
adc
inc
lret
xchg
jecxz
push
inc
pop
test
mov
fldt
fmull
pusha
xor
add
enter
jg
xchg
lods
sub
push
push
addr16
inc
into
pop
dec
pop
out
jl
fs
ficomps
aam
xchg
mov
dec
popa
sub
cmp
cs
xchg
aam
call
jl
fisttps
sbb
test
int
sub
pop
icebp
jecxz
sub
sub
ret
mov
dec
cmp
xor
xor
and
stos
cli
sbb
cld
loopne
xor
dec
js
lahf
pushf
push
xor
fsubrl
les
jmp
cmp
ja
inc
jae
int3
insb
jbe
and
aad
dec
sbb
cmp
xchg
cmp
mov
ret
sub
and
mov
sbb
iret
dec
xchg
jae
mov
jmp
pop
jae
dec
inc
sbb
arpl
test
es
cmp
jae
call
dec
jae
leave
cmp
xor
jae
popf
adc
mov
jae
cmp
add
jae
mov
icebp
inc
sbbl
jae
pop
mov
lret
and
sahf
jle
lahf
ret
iret
mov
xor
adc
dec
jae
xchg
sbb
cmp
jae
adc
sub
fsubl
jb
stc
data16
shl
imul
sub
and
and
and
mov
mov
mov
imul
cltd
fdiv
sub
mov
xchg
sbb
ret
pop
imul
call
jp
add
cmp
int
xchg
fsubrl
sub
pop
fidivs
jg
call
dec
sbb
add
sbb
in
mov
jge
cltd
adc
je
loopne
out
jb
add
sub
add
jbe
addl
mov
insl
insb
jb
dec
mov
jle
ficomps
dec
jge
xor
dec
pop
dec
lods
ds
xor
add
jno
jnp
or
int
dec
xchg
loopne
das
dec
cmp
dec
sub
mov
pop
cld
pop
insl
imul
fsubl
jmp
movsb
jle
jp
ret
nop
test
mov
push
or
xchg
fwait
stos
xchg
xchg
lock
test
scas
xor
xchg
sahf
cmpl
xor
pop
jbe
pop
mov
lds
sahf
mov
mov
dec
iret
push
or
loop
add
push
dec
or
in
out
aam
or
test
mov
mov
dec
push
paddd
mov
add
fiaddl
ficoml
mov
jl
enter
cld
repnz
faddl
adc
xor
push
stc
sub
push
sti
sub
dec
inc
pushf
rcr
movsb
xorb
scas
lcall
pushf
movsb
testb
dec
lock
test
pushf
xchg
orb
adc
push
cli
mov
fistpl
ds
push
mov
push
into
sub
jno
xchg
fcoml
or
mov
test
bound
and
add
inc
repnz
cmp
add
adc
xchg
push
cmpsb
or
push
into
or
mov
mov
gs
fldcw
jle
ret
fisttps
ror
adc
negb
cmc
iret
dec
es
xor
daa
mov
push
insb
jo
rcrl
push
pandn
cmpsl
arpl
sub
gs
jmp
fsubrs
jo
jno
scas
movsb
iret
push
lret
scas
arpl
sbbl
rorl
pop
imul
cmc
adc
adc
mov
dec
push
fsubs
pop
dec
into
xor
aad
rcl
sbb
subl
fiadds
jl
pop
mov
popa
mov
jnp
rorl
popa
mov
push
cli
loopne
push
in
add
out
jmpw
sub
shrb
das
xor
outsl
xchg
lods
enter
sbb
fsubl
add
inc
jecxz
andl
xchg
add
or
inc
int3
mov
add
shr
jo
ds
ret
add
out
addr16
outsl
idiv
stos
push
cwtl
mov
dec
data16
imul
pushl
aad
push
pop
das
popa
out
jle
stos
xchg
lds
outsl
and
or
std
mov
loopne
aad
or
std
dec
cmp
fldt
xor
in
rorl
jne
mov
fimuls
negb
sub
sbb
sbb
lods
rep
sub
adc
pop
fnstcw
pop
pop
scas
insl
mov
ds
fs
adc
mov
loopne
sbb
out
cltd
inc
in
in
loope
pop
ja
enter
icebp
mov
decl
push
cs
pop
jecxz
int3
int
sbb
rcrl
rcll
pushf
jecxz
les
decl
shl
enter
ficompl
out
outsl
repnz
dec
add
movsb
rcll
sub
sub
imul
enter
pop
and
es
arpl
xchg
inc
and
arpl
push
std
add
push
push
sub
sub
gs
dec
fs
addr16
fisubrl
push
mov
cltd
lock
or
cwtl
sti
repnz
movl
adc
xor
push
outsl
or
leave
jmp
iret
stc
xchg
xchg
cvtpi2ps
addl
ret
xchg
pop
cmp
jb
dec
and
arpl
fwait
int
imul
mov
xor
insl
sub
pop
out
scas
outsb
cltd
std
sbb
jg
push
fwait
jns
test
dec
xchg
and
fcoml
xchg
out
cwtl
int3
outsl
scas
mov
mov
mov
lea
in
cmpb
aas
fcmovbe
xchg
sbb
sub
sub
ljmp
stc
xchg
sub
sub
adc
mov
pop
push
mov
sbb
insb
dec
dec
dec
addr16
cs
jae
push
dec
dec
int
arpl
inc
sub
add
les
jmp
jae
or
mov
and
sub
dec
das
jmp
fwait
es
xchg
daa
push
leave
pop
push
mov
jg
es
jecxz
imul
dec
imul
push
into
or
enter
lods
sub
scas
outsb
in
sub
test
mov
outsl
push
lea
adc
mov
add
jae
test
sbb
jae
fistps
loop
adc
jae
or
mov
mov
push
aas
sahf
decl
mov
rorl
xchg
fldenv
rolb
add
leave
and
stos
dec
jae
cmp
into
ss
fdivrl
aas
and
sti
pop
mov
ds
pushf
ja
divb
and
call
jae
inc
jbe
pop
daa
adc
sbb
mov
add
in
mov
ss
sahf
add
aas
mul
cmpsl
lahf
jae
adc
pushf
iret
xchg
inc
jae
push
jbe
aad
xor
int
mov
lahf
cwtl
insl
jns
cmp
sub
lahf
jae
lds
jl
jp
loopne
cmp
sbb
sub
push
and
jnp
fidivs
lds
xchg
jne
ror
or
insl
jmp
clc
dec
movsl
mov
push
out
add
rcrb
out
pop
push
and
int
popl
mov
and
popf
push
push
cld
sarb
xchg
sub
pop
jae
movl
xchg
jle
push
sub
pop
jb
mov
and
imul
adc
mov
xchg
aaa
popf
jmp
pop
out
insb
rorl
push
cmp
out
fistl
les
push
pop
sarb
mov
mov
jae
adc
jle
jae
jmp
imul
aam
flds
xor
inc
fwait
mov
in
xchg
jno
add
aad
pushf
insl
push
sbb
xchg
in
fisttpll
mov
fdivl
ss
aad
into
push
xor
mov
adc
jae
hlt
pop
mov
pop
pop
jne
test
sbb
and
push
icebp
stos
out
test
adc
aad
sti
rcrb
pushf
lods
inc
dec
ficoms
jb
ja
mov
lahf
iret
test
out
lds
add
sbb
mov
ret
mov
cmpsl
pop
popf
pop
jnp
jne
jae
or
sbbb
das
and
xor
mov
or
xor
mov
inc
das
lock
mov
cmp
sub
push
sbb
popa
inc
clc
movsb
and
es
jae
loopne
leave
int
sbb
testl
out
dec
lock
jae
aad
mov
out
mov
aaa
or
xchg
cmpsb
or
test
sbb
lods
test
jecxz
dec
push
aas
mov
mov
in
mov
test
adc
jbe
popa
nop
push
in
sbb
aam
mov
mov
int
jp
dec
push
jns
push
mov
or
push
pop
sub
cmp
xor
dec
xchg
push
cld
in
xor
scas
aad
xchg
stos
loop
lea
stos
ret
es
movsl
fs
mov
cld
inc
jae
cmp
movb
idiv
imul
push
pop
js
jae
cmp
shlb
aad
test
push
out
add
ficoml
or
aam
sbb
mov
push
pushf
lods
scas
leave
inc
cmp
inc
fwait
adc
jnp
popf
stos
mov
mov
push
and
adc
pop
cli
hlt
jae
mulb
leave
push
pop
or
and
pop
xor
out
jo
jae
mov
cmpsb
add
inc
subl
and
pop
addb
mov
sbb
or
ret
lods
insb
push
jb
xor
xchg
das
in
push
jo
movsl
add
lcall
rol
jae
js
add
in
int
mov
fildl
insb
mov
outsl
xchg
icebp
sahf
cmp
mov
in
xchg
fldl
lds
cwtl
iret
sbb
push
mov
push
fbld
stos
mov
cli
mov
fsts
add
or
mov
iret
push
push
jae
in
cmp
repz
test
stos
cmpl
mov
jae
fndisi(8087
xchg
inc
adc
subl
push
push
pop
iret
mov
aam
add
fidivs
ret
mov
aad
lods
lcall
rorb
mov
jae
das
stc
xchg
cld
xor
cmp
inc
ss
mov
pop
repnz
sub
xchg
clc
add
inc
inc
in
mov
push
jae
fsubrl
rcll
cld
dec
xchg
xor
daa
pop
cmp
cmp
sub
push
int
ret
insb
es
inc
jae
pop
pop
je
or
inc
push
in
ficoml
jnp
jbe
dec
sbb
lahf
jae
xor
stos
mov
shll
cmc
insl
sub
lds
mov
or
and
sbb
daa
ja
jmp
or
ficomps
xchg
mov
xor
icebp
adc
jae
ret
aaa
cmp
and
add
std
rorl
cltd
xor
xchg
pop
lods
sbb
lret
jns
out
jne
jb
xchg
insb
mov
rcrb
cwtl
jae
popf
fwait
mov
and
pop
xchg
xchg
jae
add
cmp
lsl
leave
subb
lret
mov
inc
negl
popf
adc
inc
xlat
sub
jae
scas
jmp
adc
popf
scas
in
insl
sti
loop
jo
rcrb
cmpsl
sbb
jmp
cmp
stc
aas
adc
addb
nop
cmp
mov
sahf
add
pop
leave
mov
add
daa
lods
and
pop
rcrb
into
jb
test
jae
sbb
ret
xchg
hlt
pop
jae
cmp
inc
call
icebp
ja
loop
mov
mov
incb
push
fisttps
dec
jae
cmpsl
mov
push
imul
cmp
mov
add
movsb
out
out
or
pop
mov
inc
arpl
cmpsb
push
adc
inc
fldenv
mov
push
and
lock
mov
or
add
fucomip
mov
jae
cmp
andb
xchg
mov
ss
lods
insl
lcall
adc
aam
cmc
rorl
fwait
ds
and
rcrl
jae
jb
fwait
hlt
inc
popa
and
inc
xor
mov
jnp
addr16
pop
cmc
filds
push
imul
xor
sahf
push
jae
add
jne
popa
fs
mov
addr16
movsl
mulb
popa
jmp
scas
dec
xchg
sub
stc
mov
jae
mov
cmp
leave
jge
jo
jae
sbb
xor
sub
push
scas
xchg
xlat
mov
mov
xor
insb
in
jnp
adc
enter
add
mov
sbbl
mov
lret
stc
imul
jge
sub
xchg
add
stos
xchg
cmp
jae
xchg
fimull
pop
rorb
xlat
jo
and
movsl
jp
fstpt
outsl
inc
pop
push
rcll
mov
push
test
jecxz
push
xor
pop
loopne
and
insb
jge
inc
push
add
imul
pop
outsl
mulb
and
in
jp
cmpl
in
sarb
cld
xor
xor
dec
mov
outsl
push
xchg
inc
jae
std
mov
insb
mov
adcl
sub
lock
inc
loop
icebp
icebp
lods
outsl
enter
dec
add
addb
andl
or
xor
ficomps
in
mov
clc
jecxz
cld
sbb
pushf
mov
jae
ljmp
insl
imul
sub
aaa
stos
scas
sub
push
bound
sbb
jo
jge
push
repz
ret
jp
xor
out
leave
shll
imulb
xchg
mov
xor
pop
xchg
mov
push
jns
jp
outsb
jmp
xchg
mov
lahf
rclb
add
pop
sbb
test
or
cmpb
fmull
ja
sub
cs
js
dec
daa
insb
cli
bnd
fs
shl
sub
es
nop
jae
xchg
mov
fwait
notb
mov
lods
sahf
mov
xchg
jo
xor
leave
xor
mov
loop
jo
sahf
pop
nop
push
shll
add
mov
mov
roll
inc
fsubs
sub
cmp
lock
and
in
aad
mov
int3
cmp
add
lods
push
jae
mov
xchg
mov
jne
xor
out
aam
int
pusha
or
inc
outsl
lea
cmpsl
mov
mov
arpl
sub
jo
ror
add
cmp
inc
out
inc
xchg
and
dec
push
fs
pop
sub
adc
aaa
andb
out
into
lods
jp
leave
sbb
sub
aam
push
shll
lahf
out
cmp
mov
mov
insl
adc
jle
jne
addb
sahf
aaa
pop
sub
sbb
daa
add
das
and
adc
push
or
lds
stc
repz
xor
jb
js
xchg
imul
sub
jae
push
shrb
aaa
das
sub
rorl
mov
ljmp
dec
push
mov
ja
icebp
scas
xchg
je
lahf
push
insl
sub
xor
das
pop
cmp
rcll
sub
and
jb
int
fldz
jnp
ljmp
cmp
dec
mov
stos
repnz
xor
adc
pop
pop
insb
mov
jp
inc
repnz
cli
arpl
insb
shll
dec
jo
push
les
inc
sbb
out
or
neg
add
fwait
dec
inc
pop
pop
jae
loop
fdivrs
add
inc
xor
mov
mov
lds
cwtl
pushf
pop
fdiv
pop
add
cmp
repz
subl
mov
and
push
mov
mov
adc
push
data16
mov
das
ss
ljmp
js
scas
or
mov
stos
in
fwait
pushf
in
sbb
out
icebp
jae
fs
jae
nop
loop
cmp
mov
push
ja
push
or
cmpsl
cwtl
xor
sbb
pop
jae
lock
cmp
jae
ror
cmp
or
sub
sub
mov
pop
push
jl
mov
xor
dec
mov
push
xchg
icebp
sub
aad
add
lods
jb
adcb
jae
mov
out
ja
xchg
loope
xchg
add
scas
inc
data16
pop
mov
push
in
pop
jae
dec
or
pop
mov
mov
das
int
inc
ret
inc
or
ljmp
shlb
icebp
jne
mov
mov
mov
divb
pop
notl
mov
in
push
lret
into
hlt
test
mov
pop
inc
push
int3
pop
imul
insl
aad
jmp
insb
les
decb
rcrb
cmpsl
sub
lret
xchg
xor
outsb
cld
and
insb
mov
xchg
push
out
ret
das
jmp
lret
fwait
push
jmp
add
cld
mov
sbb
mov
in
push
jb
mov
cmpsl
pop
cmp
cmp
idivb
jae
inc
mull
jae
pop
sbb
mov
xchg
jl
dec
or
add
xchg
inc
fldt
xchg
leave
push
xchg
fldenv
movsb
jmp
daa
add
insl
pop
sbb
add
cmp
xchg
xchg
out
fucomip
jae
inc
dec
jle
or
xor
pop
sub
repz
sub
dec
push
push
push
stc
inc
jae
sbb
fnstenv
in
outsl
inc
popf
aad
mov
repz
out
xchg
mov
mov
lock
lds
jle
lcall
add
mov
aas
cld
jl
ret
inc
xor
lcall
pop
jae
pusha
cmp
and
dec
xchg
inc
popf
xor
pop
xchg
mov
jae
sbb
stos
cmp
and
fucomi
mov
xlat
mov
push
sub
cwtl
pop
jae
std
mov
rclb
mov
mov
test
popa
cmp
dec
inc
or
push
xchg
loop
adc
inc
test
cmpsb
outsb
pop
sub
jnp
cmp
fimull
enter
insb
das
mov
mov
adc
cli
sbb
mov
sub
mov
insl
mov
add
jae
pop
les
mov
sti
ss
sti
adc
imul
das
jae
lds
mov
scas
ret
jae
in
aas
xchg
jns
nop
push
mov
scas
mov
mov
jae
je
test
int
cwtl
lahf
hlt
jae
pop
aaa
mov
jae
std
mov
cmc
sub
loop
add
cltd
test
iret
movsl
jae
fdiv
aas
pop
jae
mov
popf
jl
and
xor
cmp
in
sbb
loop
adc
push
ret
lods
adc
pop
mov
mov
in
shr
jae
jp
call
xor
cmp
fs
aas
aam
sbb
in
mov
pop
mov
mov
shlb
popa
inc
arpl
cwtl
xor
stos
out
loopne
bound
xchg
push
adc
movsb
pop
test
inc
ja
sahf
jae
cwtl
mov
icebp
jae
ret
cltd
mov
sbb
out
push
fdivrs
mov
adc
pushf
inc
pop
test
sub
add
jae
add
jle
jne
xorb
js
pop
in
pop
jae
pop
sbb
pop
lret
mov
mov
mov
add
cmp
call
lods
addr16
icebp
jae
xor
cld
jp
push
shrl
fmull
jae
push
jl
cld
popa
adc
dec
xchg
repz
out
sbb
addl
and
imul
loope
imull
fidivrl
dec
xchg
les
inc
or
push
jae
and
popa
inc
mov
lods
mov
cs
mov
mov
subb
dec
or
in
fistpll
jae
ret
rclb
jne
sahf
cmp
insb
mov
xor
add
cmp
lods
mov
hlt
xor
or
jae
mov
jl
jae
and
fcmove
xor
scas
jae
xchg
out
clc
xchg
pop
stc
push
dec
icebp
mov
repz
jae
jge
mov
daa
test
jae
jo
jb
mov
loopne
or
fisttpl
fsin
bound
repnz
addr16
jle
mov
jae
inc
out
adc
cmpsl
sti
jae
add
xchg
jg
jae
xor
sub
aaa
js
stos
loop
aam
jg
outsl
jns
push
and
push
jae
mov
and
mov
lret
aad
clc
mov
mov
sub
popa
sub
or
dec
inc
imul
in
aad
jnp
mov
lds
jae
xor
sub
nop
hlt
cld
int3
mov
mulb
aaa
rcl
pop
in
sub
mov
push
xchg
in
sti
insb
fisttpl
sahf
shlb
fcompl
adc
sbb
clc
xor
insb
inc
push
cltd
xor
inc
and
jno
mov
sbb
push
jae
mov
fcompl
dec
mov
push
inc
jecxz
cli
in
lock
hlt
cmp
decb
cli
pop
mov
dec
push
mov
adc
cld
sub
mov
repnz
insb
addps
push
sub
pop
dec
pop
mov
cmp
dec
int3
sub
add
add
loope
dec
adc
into
dec
test
add
in
fisubrs
imul
mov
pop
sbbl
jae
xchg
xchg
sbb
movsb
in
daa
sub
cmc
cli
cmp
das
jnp
cmp
jae
loop
pop
es
mov
mov
xchg
mov
and
adc
cmc
jo
outsb
shll
fdivl
jae
mov
fistps
test
push
jae
mov
in
xor
aam
ret
cltd
mov
xorb
lret
mov
sbb
out
ja
ret
sahf
dec
mov
test
xchg
jae
inc
dec
add
leave
inc
jns
rorb
jae
adc
xchg
add
jl
daa
jae
call
and
push
ds
clc
lods
xchg
pusha
bound
scas
xchg
and
mov
insl
adc
mov
adc
sbb
sahf
mov
scas
out
ret
pop
mov
int
or
in
or
add
xchg
das
shl
les
sub
mov
jmp
lahf
mov
jb
jne
insl
cs
in
leave
shll
shll
sub
or
sbb
daa
and
cwtl
imul
push
push
push
or
sti
and
loope
inc
jns
jo
push
inc
mov
dec
imul
leave
js
jae
pop
into
xchg
push
sahf
lea
jae
pop
push
les
mov
lds
dec
out
sub
shl
push
insb
out
shlb
inc
sbb
mov
mov
test
adc
inc
jae
mov
addr16
fstps
mov
adc
push
push
xchg
mov
out
imul
loope
test
and
dec
pop
in
insb
mov
xchg
lahf
xor
out
xchg
jo
popa
sub
mov
pop
sahf
sarl
inc
dec
or
jae
pop
mov
adc
jp
test
in
lcall
scas
rorl
xchg
jnp
dec
xchg
lods
shll
das
incl
push
fsts
jo
mov
jecxz
data16
fmul
leave
mov
mov
and
xlat
jb
repnz
pop
add
insb
cwtl
testb
cmp
stc
cmp
ljmp
mov
gs
fnstcw
gs
sub
sbb
aas
mov
xor
mov
iret
inc
push
outsb
ja
cwtl
roll
mov
jae
push
icebp
lods
xchg
add
jl
cmp
pop
xchg
jns
repnz
add
push
and
sub
inc
sbbl
js
popf
cmpb
jge
or
push
push
dec
jg
push
xor
movsl
mov
push
clc
adc
adc
lods
test
inc
jle
mov
push
jg
out
inc
imul
dec
ret
sub
clc
jae
xorl
popa
ret
and
inc
sub
roll
push
mov
pop
ds
insb
scas
icebp
xor
hlt
xor
jae
mov
out
test
imul
and
lea
bswap
mov
lahf
jae
jle
mov
jo
or
xchg
lock
adc
sub
mov
scas
popf
jae
sbb
pop
jae
mov
xor
outsb
sbb
mov
lcall
mov
jl
cmp
add
orl
daa
sub
notl
sti
mov
and
xor
dec
out
pop
xor
jmp
js
or
rol
loop
jecxz
sub
and
inc
pop
lcall
fwait
sbb
mov
jae
aad
shl
jbe
ja
cmp
xchg
insb
push
mov
jb
inc
xor
cmpb
jns
scas
push
push
gs
ljmp
imul
inc
xor
out
insl
jg
cwtl
jmp
mov
lret
jp
or
push
test
daa
and
out
pop
xchg
pop
cmpb
out
bound
aam
lods
lea
mov
sbb
pushf
sub
hlt
jnp
clc
jae
push
rcrl
jae
sbb
test
lods
mov
in
xchg
xchg
sahf
inc
cmc
jae
sbb
data16
jo
insl
out
fwait
stc
and
and
add
and
ja
out
mov
push
xor
sbb
push
into
push
or
insb
sbb
jecxz
imul
std
stc
xor
scas
jae
xorl
jae
xchg
jne
stos
mov
pop
and
movsl
mov
xlat
lock
jge
mov
ficomps
and
ret
mov
mov
outsl
movsb
fstpt
out
lods
test
lret
in
dec
movsl
lcall
aaa
mov
in
js
jae
sbbb
jae
push
jge
icebp
shll
clc
lds
cltd
add
pop
xchg
rcr
in
mov
js
lock
inc
data16
lock
or
outsl
pop
std
ffreep
in
pop
arpl
leave
cmp
jae
repnz
jg
sub
jae
hlt
sbbl
fcmovnbe
push
jae
xchg
lds
mov
and
sub
jmp
mov
jbe
insl
dec
neg
jp
add
fisttpl
mov
lret
lret
push
mov
cs
cwtl
sbbl
or
push
xchg
popf
enter
mov
negl
push
or
pop
loope
xchg
std
ret
inc
nop
enter
shlb
jnp
insb
dec
mov
mov
jae
push
mov
cmpsl
sbb
leave
jge
inc
sbb
pop
sbb
dec
push
shll
mov
cmpsl
std
aad
xor
cwtl
adc
jp
outsl
mov
popf
dec
xchg
imul
es
cmp
ja
stos
or
outsl
lret
bnd
xorl
sahf
push
lea
out
sbb
mov
add
fstpl
xchg
xorl
add
cmp
ret
xor
clc
jae
xlat
inc
pop
jecxz
test
cmp
lea
jo
fadd
xchg
outsl
lcall
add
dec
inc
sbb
sahf
push
push
popa
jb
stc
sub
or
lods
xlat
negb
pop
je
mov
mov
mov
pop
xor
aas
jg
dec
sub
dec
outsl
repnz
aam
loope
push
mov
jae
mov
xchg
cwtl
cmp
mov
stos
add
xchg
mov
xorb
inc
or
aas
push
imul
jl
sub
mov
add
sub
mov
orb
push
jbe
jmp
xchg
rcrl
clc
test
jae
ret
mov
adc
mov
sbbl
idivl
sarl
jae
inc
mov
prefetcht0
cmp
xorl
push
xchg
fwait
mov
test
and
jp
orb
add
inc
scas
movsl
inc
or
add
in
fdivr
js
or
and
sahf
jo
in
into
hlt
xchg
xchg
icebp
test
inc
fdivl
mov
fs
outsb
loopne
insl
out
mov
jmp
jp
mov
movsl
mov
jae
mov
loop
inc
push
lret
jae
adc
mov
jns
and
aam
lahf
adc
jae
push
flds
xor
sbb
mov
dec
add
mov
jae
mov
arpl
jae
push
je
addl
jae
stc
jns
xchg
rcrb
cmp
mov
sub
pop
icebp
or
pop
xchg
imul
lret
dec
lret
jae
push
push
lock
in
jbe
jae
inc
push
daa
mov
lcall
aas
popa
lret
jmp
jecxz
rclb
jmp
or
aaa
shl
dec
pop
jne
jae
mov
mov
out
repnz
test
sbb
inc
jae
jl
in
pusha
lds
jae
sahf
scas
mov
adc
and
loop
jb
mov
in
imul
test
mov
jp
daa
cmp
dec
adc
jge
jae
mov
rolb
pop
xor
inc
test
subl
clc
cwtl
popa
pop
xor
test
repz
scas
fwait
pop
stos
imul
clc
pop
add
add
rclb
mov
cmp
cmp
mov
jae
push
add
xor
aas
or
adc
jae
fs
nop
jl,pt
jae
loop
mov
inc
fisubrs
dec
mov
inc
mov
dec
daa
jb
pop
mov
sub
insb
popf
imull
jae
xchg
mov
decb
xor
jl
nop
add
out
push
dec
insb
ret
mov
pop
lods
fisttps
dec
cltd
jb,pn
repz
push
add
in
inc
mov
mov
pop
cmp
cmp
and
sub
popa
push
cmp
popf
add
push
xchg
jo
gs
cmp
jb
inc
lds
sub
loope
adcl
sbb
test
pop
loop
mov
add
fldcw
arpl
rcl
xor
jp
jae
movsb
add
lcall
mov
jbe
mov
mov
ret
in
lret
jae
adc
mov
mov
imulb
xchg
jmp
xorl
xchg
pop
cld
jae
std
sbb
cmp
imul
and
fwait
ret
stc
fwait
stc
jbe
or
aaa
adc
test
inc
cmp
and
enter
mov
push
cmp
mov
ja
jae
sub
ret
lds
stc
inc
mov
mov
cltd
pop
sti
int
jnp
movsl
inc
lods
pop
jae
idivb
cmp
inc
pop
repnz
mov
gs
stos
notb
xchg
add
push
outsl
fcoml
push
jb
popa
enter
jge
outsl
adc
mov
repz
in
addr16
dec
mov
xor
pop
and
scas
mov
ja
xlat
adc
adc
mov
jl
and
jo
inc
pop
add
push
mov
pop
jmp
jbe
inc
jae
mov
cmp
aam
dec
jmp
jp
jae
mov
aas
je
fidivs
cmp
dec
mov
cmp
stc
lret
leave
in
adc
xor
mov
vunpckhps
xchg
jg
xor
push
push
pop
rorl
aam
stc
daa
jl
test
mov
in
out
mov
xor
jae
mov
or
imul
subl
sbb
out
jae
xchg
in
mov
movsl
out
scas
nop
push
mov
or
inc
test
lods
adc
lea
dec
pop
fadd
mov
test
fistl
sub
pop
imul
inc
mov
movsl
aaa
jb
cmc
inc
ss
std
rol
mov
add
jecxz
movsl
jae
or
jp
jae
testl
jae
rclb
push
arpl
and
fisubrs
icebp
lea
dec
stos
mov
jl
outsl
dec
cmpl
icebp
fst
rcrl
push
loope
and
xchg
ja
negl
fsubrp
pop
pop
lods
aaa
push
jae
icebp
fisubl
jae
ret
lahf
push
scas
fisubrs
subl
cmp
sbbl
jns
icebp
jge
mov
dec
popa
xchg
xor
mov
jne
jae
or
jl
xchg
inc
aaa
jae
adc
mov
popa
jmp
imul
sbb
cmp
dec
xchg
ret
popa
dec
popf
cmp
test
or
mov
inc
aaa
xlat
mov
mov
adc
std
dec
pushf
fwait
mov
notl
jne
mov
sarl
jae
cmp
push
ret
adc
mov
and
ret
jl
push
ja
jne
xchg
push
leave
pop
mov
aam
sub
mov
lahf
idivb
jne
cmp
ret
sbb
add
xlat
jae
clc
fistpll
or
ss
mulb
inc
das
imul
nop
inc
ljmp
sbb
sti
imul
and
daa
push
push
mov
fnclex
sub
xchg
xchg
test
mov
dec
insb
loopne
xchg
les
pop
cmp
stos
insb
cmp
ja
mov
push
dec
fldcw
movsl
push
xchg
jae
cmpsl
call
cmpsl
shll
hlt
or
mov
cltd
test
and
aad
movsb
outsb
add
mov
sbb
cwtl
mov
ret
stos
idivl
jmp
in
dec
aaa
lret
jae
dec
jnp
mov
pushf
lods
jae
or
mov
fcmovb
jae
mov
popf
ss
inc
imul
mov
jae
or
aam
fdivl
or
addr16
ret
and
cld
mov
jp
pop
jge
add
addl
scas
cmpsl
jae
pop
pop
inc
pop
shll
test
xchg
mov
in
out
mov
mov
aam
jno
push
xor
and
ret
sub
sub
and
jae
clc
xchg
test
mov
bound
xchg
or
ss
sub
insl
loop
loope
in
jmp
xorl
xor
jae
divl
outsl
ficoms
aam
push
data16
mov
lret
pop
adc
cmp
sti
inc
scas
mov
out
push
add
daa
or
jae
mov
xor
hlt
out
aad
push
push
lock
xor
pop
inc
mov
mov
dec
fwait
ss
push
cltd
adc
imulb
aaa
insb
or
jae
cmp
inc
cwtl
insl
sar
jo
jmp
lea
jne
fs
popl
inc
adc
es
daa
jmp
cs
lcall
jecxz
js
sub
insb
stos
std
xlat
xchg
mov
pop
pop
inc
cmp
test
sti
jae
pop
shl
lret
cmpsl
lea
sub
cltd
hlt
stos
push
mov
jae
push
pop
aam
add
pop
cmp
xchg
jbe
ds
mov
mov
push
and
mulb
adc
mov
add
inc
pop
and
clc
movsl
bound
sbb
lock
mov
in
mov
decb
cmp
loope
and
jae
xchg
adc
fiaddl
cmp
pop
in
mov
lret
test
rorb
roll
adc
movsb
pushf
dec
push
cmp
mov
leave
mov
je
repnz
jae
mov
lea
mov
mov
jae
inc
jp
push
xor
mov
fdivrl
add
dec
popa
sub
add
and
push
and
cwtl
jae
mov
es
mov
test
into
mov
adc
dec
mov
das
mov
sti
xchg
fucomip
pop
aas
add
popa
cmp
push
daa
xchg
pop
jae
aaa
mov
mov
mull
xor
jae
rorb
mov
jle
jnp
adc
mov
adc
xchg
add
popf
les
adc
and
clc
insb
mov
lea
sti
xchg
movsb
mov
mov
jge
ret
dec
pop
leave
inc
pop
insw
xchg
hlt
jne
pop
jo
sti
test
gs
stos
lcall
sub
sarb
push
xchg
scas
aam
mov
sbb
pop
jle
push
mov
push
sti
jmp
jnp
mov
shll
es
mov
pushf
inc
ja
jae
fldenv
inc
cltd
mov
scas
push
jae
dec
hlt
cwtl
pusha
mov
push
lods
mov
adc
fistl
mov
and
loopne
push
xchg
mov
xchg
cwtl
fildl
sbb
sub
cmp
jae
xchg
aam
xor
hlt
stc
push
insb
cmp
push
dec
outsl
add
in
ret
leave
jae
outsb
dec
dec
lret
iret
adc
insb
lcall
ffreep
jecxz
or
test
scas
movsl
and
imul
push
nop
jnp
cmp
and
or
jp
fnstcw
rclb
jg
sub
cmp
pop
cmpsl
or
sbbl
stc
subb
dec
fnsave
mov
fnsetpm(287
jae
jecxz
inc
mov
push
xchg
mov
jae
and
jae
xlat
push
jo
aad
add
pop
xchg
loopne
push
dec
ret
mov
xchg
jg
inc
rcr
aad
into
mov
int
add
pop
cwtl
jae
hlt
pop
jle
test
cmp
iret
jge
inc
pop
dec
in
mov
fisubrl
stos
add
loopne
std
sub
aam
pop
cmp
scas
pop
loope
scas
insl
mov
stos
cmp
mov
xor
or
cld
pop
hlt
cltd
jmp
movsb
adc
add
movb
pop
sahf
xor
lods
dec
add
mov
jbe
jle
rcrb
add
mov
jae
xor
mov
ss
pop
outsl
mov
jl
fwait
push
lret
rcl
add
jmp
or
movsl
lods
mov
and
nop
adc
inc
mov
cmpsl
test
fcmovnbe
les
rcll
push
pushf
pop
jnp
js
jae
sbb
sub
mov
jae
cmpl
xor
adc
mov
mov
fsts
xor
loop
jae
push
mov
sub
jae
adc
and
dec
hlt
sti
sub
shr
push
cmp
movl
scas
icebp
sbb
in
add
mov
sbb
inc
and
popa
sbb
test
mov
aad
or
andl
pop
adc
mov
ret
mov
mov
es
cmp
push
aam
mov
or
sahf
sbb
inc
arpl
xchg
repz
bswap
jnp
sti
xor
inc
xchg
insb
aaa
in
loop
cmp
mov
pop
and
push
and
lret
jecxz
mov
jae
push
pop
xchg
ret
pop
movsl
mov
in
hlt
lds
test
sbb
jge
adc
xor
pop
or
lret
stos
das
andb
mov
rcrb
outsl
pop
sahf
cmp
pop
jp
out
mov
loopw
movsl
add
in
jae
mov
xor
hlt
inc
insb
shrd
xchg
jo
adc
mov
push
hlt
inc
jae
xor
add
mov
movsl
stc
inc
ret
pop
sbb
aam
and
inc
lods
inc
in
jae
daa
stos
into
mov
dec
jae
pop
icebp
xlat
inc
hlt
jg
testb
xchg
inc
movsb
dec
pop
jae
into
mov
xlat
jae
dec
push
and
lahf
cmp
test
stos
or
pop
int
dec
out
insb
into
scas
and
push
jmp
loopne
repz
cmc
xchg
mov
aaa
mov
add
test
or
inc
mov
test
push
jl
mov
es
notb
mov
mov
mov
pop
lahf
sub
or
test
repz
es
imul
scas
shrl
sub
mov
outsl
jb
clc
or
lret
cmpsl
data16
cmp
aad
inc
cli
pop
xor
inc
in
lea
cmp
dec
mov
movl
jle
mov
mov
jae
xchg
inc
imul
je
jae
in
cmp
cmp
jae
jns
cmc
jecxz
ret
fmuls
ja
pop
pop
sbb
inc
push
pop
aam
and
push
test
jae
jb
daa
popl
lds
inc
imul
inc
push
adc
inc
inc
jae
clc
cmp
rorb
aad
inc
scas
cmc
inc
mov
shll
and
in
push
hlt
scas
dec
pushf
outsl
jecxz
xchg
mov
out
push
adc
mov
loope
dec
int3
jne
push
lret
lcall
dec
pop
mov
imul
fs
adc
pop
in
mov
das
and
cld
jae
pop
and
add
adc
mov
dec
nop
shrb
pop
sbb
or
jecxz
je
dec
push
jnp
jae
aaa
dec
add
inc
xchg
gs
mov
cmpsb
aad
je
jae
push
rcrb
inc
movb
xor
daa
cli
pop
sub
or
jb
push
ret
push
imull
sub
or
rcrb
lret
in
stc
sub
stos
ret
push
jmp
pop
and
icebp
jbe
jae
mov
daa
insl
cmpsb
xchg
inc
lret
test
out
pop
mov
mov
pop
out
push
mov
mov
inc
enter
jl
ficomps
jae
mov
adc
ds
in
pop
or
xorb
lea
dec
jne
add
dec
jbe
stos
adc
lahf
mov
aad
xchg
cmpsl
sti
mov
loopne
inc
pop
jae
pop
test
push
add
sub
jecxz
pop
cmp
dec
sub
cmpsb
orl
pop
sub
push
add
lahf
push
cmp
cwtl
sub
fdivs
mov
stos
add
jae
clc
add
inc
stos
dec
hlt
insl
pushf
push
out
xchg
mov
jp
xor
add
test
inc
jnp
mov
popa
pop
dec
je
mov
stc
jbe
std
inc
adc
inc
pop
xchg
and
xchg
cmp
add
stos
mov
shl
std
mov
pop
bound
in
or
adc
dec
or
pop
mov
jmp
out
mov
fsubrl
adc
es
dec
sub
inc
pop
mov
xor
sub
je
cmp
adc
jae
mov
mov
inc
push
mov
jmp
xchg
mulb
loope
jae
push
push
pop
loopne
cmpsl
dec
das
daa
xlat
jae
inc
test
mov
and
sbb
sbb
ss
mov
sub
dec
or
add
repz
jmp
divl
pop
out
test
jae
mov
xchg
dec
jae
nop
movsb
int3
or
xchg
or
xor
movsl
mov
or
xchg
lods
push
icebp
je
in
cld
jle
mov
rolb
mov
scas
pop
or
mov
sbb
jae
sbb
loope
mov
rorb
inc
lods
nop
shrl
insl
hlt
jecxz
sub
shll
aam
cwtl
jae
inc
mov
mov
add
jae
test
or
std
jae
adc
das
mov
mov
adc
jnp
jae
sbb
cli
stos
shl
mov
fisubrs
les
insb
add
shlb
cmpsl
mov
lcall
inc
mov
pop
les
or
mov
mov
sahf
leave
iret
inc
jae
adc
jmp
add
push
mov
inc
mov
sub
clc
js
sbb
mov
je
jae
mov
and
faddl
cwtl
jae
and
scas
roll
bound
cmp
add
dec
addr16
jae
incb
pusha
jae
imulb
jae
lock
insl
leave
and
cmp
mov
movd
pushf
xchg
rclb
cmpl
sbb
xchg
pop
jg
mov
pop
xchg
sub
xor
popf
ss
cli
mov
jae
push
inc
pextrw
lea
dec
lods
out
push
sti
jmp
fnsave
test
divl
lods
sub
out
lods
lea
mov
cld
icebp
insl
loopne
mov
xor
test
xlat
fcompl
movsl
ret
push
pop
pop
movsl
stos
movsb
fsubrs
in
loope
cltd
fildll
stc
shll
in
icebp
fcoml
sub
rclb
xchg
sub
loop
jmp
outsl
cli
push
insl
stos
sbb
into
mov
pop
sub
insl
fs
mov
dec
vpcmpeqw
jnp
cmc
fsubrs
jne
pop
jle
cmp
out
fldenv
fbld
inc
out
ljmp
push
jnp
in
or
leave
nop
pop
dec
scas
cs
loopne
pop
and
insl
add
fwait
outsl
data16
in
xchg
movsb
call
daa
jmp
mov
xor
adc
in
aad
leave
int
add
push
sti
inc
jae
out
subl
leave
adc
add
sbb
xchg
xor
sub
mov
subb
adc
inc
imul
push
out
cmc
lods
std
jns
jnp
push
leave
js
imul
dec
jo
cs
mov
aam
add
popa
insl
ds
inc
dec
jl
push
jecxz
addr16
xor
iret
jecxz
rorl
dec
fbld
ftst
fcmovnbe
pop
rorl
and
fmul
dec
leave
sub
in
pop
rorl
mov
sub
shrb
mov
push
insl
and
insl
ljmp
sub
lcall
sub
nop
test
pop
sti
xchg
outsl
push
mov
mov
mov
in
mov
xor
mov
jb
pop
rorb
outsl
pop
cmp
xor
cwtl
xchg
sti
jnp
arpl
outsl
insl
ficomps
aam
das
gs
pop
or
addr16
pop
leave
sbb
into
enter
add
xchg
or
iret
inc
xchg
xchg
dec
jae
out
sub
jae
in
es
outsb
or
jae
or
mov
lods
pop
push
std
mov
ja
mov
std
dec
sbb
and
mov
mov
pop
dec
sub
enter
addr16
call
jae
dec
lods
lea
in
and
ljmp
fprem1
mov
stc
insb
mov
sub
loope
pushf
inc
aad
data16
sbb
int
clc
daa
cmp
out
push
hlt
ja
mulb
mov
push
sti
xchg
mov
bound
mov
and
mov
int3
enter
adc
pop
jae
ret
out
xchg
mov
push
mov
jge
jl
jbe
insl
mov
aas
stos
push
lds
aaa
xor
pushf
int
scas
imul
pop
jmp
push
jae
dec
shlb
bound
cld
pop
add
jns
sbb
add
jmp
std
and
jne
xchg
lods
scas
xchg
cmp
sub
lahf
cld
rclb
or
daa
scas
add
sbb
scas
insb
sub
xchg
jbe
lcall
jnp
imul
in
jno
out
call
mov
sbb
mov
aad
insl
jp
and
test
mov
dec
fcoms
xchg
shrb
jl
cmpsb
xchg
mov
mov
cwtl
jle
repz
int3
mov
aaa
popf
out
cmp
aas
inc
jae
adc
pop
xlat
or
cmpsb
popa
push
push
and
rolb
out
pop
cltd
icebp
adc
sub
cmp
jae
mov
push
inc
mov
hlt
test
cltd
and
sub
mov
xchg
mov
loope
or
ja
icebp
jge
cmp
notl
frstor
or
push
xor
lods
xchg
adc
push
sbb
jg
inc
mov
stc
inc
insb
daa
pop
lcall
cmp
push
push
repnz
add
call
jbe
cmp
ret
seta
stc
leave
jge
insl
lock
lret
jae
jne
rorb
imul
sub
and
mov
push
push
xchg
jae
scas
or
icebp
adc
fidivl
jae
pop
mov
movsl
imul
push
popa
push
ret
rol
add
cmp
insb
loop
dec
inc
and
jae
jmp
in
jae
loope
dec
sbb
jmp
out
and
js
xor
mov
ret
or
sbb
mulb
mov
nop
sarb
repnz
inc
jae
icebp
cld
push
insl
aas
cwtl
stc
cli
pop
notl
ret
or
xor
push
cmp
xchg
mov
lret
stos
mov
add
dec
jmp
xchg
or
scas
repz
push
shl
scas
jmp
cmpsb
jae
mov
pusha
jae
cmp
adcl
xchg
icebp
mov
jae
jb
ja
lds
xchg
lahf
lock
sub
loop
jae
lcall
jae
movsb
pushf
sbb
jae
fisttpll
stos
or
mov
idivb
lods
xchg
dec
les
scas
dec
daa
aaa
sbb
dec
adc
stos
stos
add
sbb
incb
into
ret
and
jnp
push
test
pop
popf
mov
jae
mov
out
int3
mov
mov
inc
jbe
pop
test
dec
xor
or
xchg
loopne
add
jae
jnp
push
pop
nop
fistps
inc
or
mov
xor
jg
jne
and
out
pop
xorl
dec
push
aad
push
in
into
jae
cli
and
jae
in
push
or
aad
or
ss
sub
lock
loopne
cmp
adc
jnp
data16
in
jecxz
cmc
mov
inc
mov
ficomps
jl
mov
jecxz
xor
push
psubsw
mov
adc
jle
mov
es
int
pushl
rcr
adc
xchg
test
jae
cmp
adc
xor
jmp
mov
rclb
sahf
dec
lds
fdivl
in
adc
movsl
shr
shlb
cmp
xlat
test
xor
jmp
or
and
in
aas
das
cmp
cmpsl
jae
mov
data16
sbb
loope
sbb
push
rcrb
int
icebp
xor
in
fists
cltd
pop
lock
fs
icebp
adc
pushf
aam
fdivrl
jg
mov
icebp
mov
sbbl
daa
adc
add
ret
jnp
jae
test
jl
cld
xchg
enter
cmp
pop
jae
xchg
and
or
cmp
ja
test
or
jae
xchg
mov
xor
int
cmp
and
ret
sbb
push
js
push
in
pusha
jmp
cwtl
jge
or
jo
xlat
jb
test
adc
lea
mov
iret
sahf
add
jbe
xorl
xlat
jae
dec
popf
sbb
jns
fsubr
jne
cmc
shl
std
outsl
jmp
fdivrp
sbb
rolb
mov
xchg
stc
out
rcll
hlt
sbb
pop
daa
jge
jmp
imul
fidivs
jmp
mov
jae
push
popf
adc
adcl
or
mov
push
push
push
push
xor
je
gs
mov
adc
aad
add
mov
mov
push
xchg
pop
xchg
rol
test
imul
sub
rolb
inc
stc
inc
lods
pop
scas
lods
dec
fwait
mov
lock
lret
mov
repz
es
lahf
adc
imul
adc
pop
push
pop
mov
jae
enter
cmp
mov
cmp
mulb
cli
addb
insb
ss
stos
add
in
mov
jle
lock
subl
insl
les
and
addr16
xchg
popa
sahf
jge
add
stos
inc
lahf
xor
ficoml
xor
add
sahf
dec
pop
cmpsl
imul
dec
xchg
call
data16
in
dec
push
add
push
jae
push
iret
sbb
jle
or
loope
lds
mov
xchg
imul
movsl
pop
roll
xchg
test
lods
pop
dec
sub
jae
nop
clc
lcall
sti
mov
push
jle
js
testb
mov
loopne
aas
jp
fldcw
pop
lock
mov
insl
jae
and
or
test
jae
cli
fcoms
sarl
popaw
movsl
push
xlat
lcall
mov
js
push
jmp
jl
inc
shlb
mov
mov
insb
add
add
add
mov
dec
xchg
insb
inc
loope
inc
cmpb
es
xchg
sbb
iret
jle
push
lea
loop
inc
popa
fldenv
or
shrl
xchg
mov
add
xor
jae
or
fisubrs
insb
mov
sti
push
sub
mov
insb
loope
mov
xchg
xor
sbb
arpl
mov
pop
jb
and
mov
insb
lods
je
jp
xchg
cs
imul
push
or
dec
jae
jl
mov
ja
mov
sbb
cli
repnz
jae
mov
addl
ljmp
dec
push
jbe
mov
xor
inc
insb
data16
jns
js
dec
cmp
push
mov
mov
cmp
scas
jge
sti
dec
call
push
js
mov
bound
test
inc
shll
jae
aaa
cmp
dec
xchg
add
jnp
fxch
fwait
adc
xorb
sahf
hlt
pusha
cmp
negl
jmp
aam
mov
dec
stc
das
xchg
inc
mov
dec
mov
fstpt
inc
pop
xchg
mov
mov
xorb
ja
imulb
mov
jae
push
pop
mov
mov
sti
adc
orb
lret
stc
insl
pop
shll
xchg
dec
fimull
xchg
cmp
cld
push
stc
ret
outsl
stos
xchg
jae
popf
pop
roll
mov
out
rcr
sub
mov
mov
jecxz
push
shrl
xchg
bound
mov
xor
cmp
lock
ljmp
inc
ljmp
jmp
sub
mov
pop
lea
jae
push
and
imul
push
ret
mov
push
pusha
test
mov
shl
sbb
and
pop
mov
pop
pop
sbb
push
jnp
xchg
mov
sbb
add
or
or
dec
test
dec
ljmp
ficomps
jo
push
jb
repnz
test
pop
cmpsl
scas
test
push
dec
push
mov
mov
inc
inc
inc
jo
push
mov
bound
cld
fsubrs
sub
or
pop
roll
shll
xor
cmp
ret
loopne
mov
je
leave
jl
movsb
ljmp
hlt
icebp
test
jg
insb
jp
frstor
dec
xlat
cmp
addb
push
add
or
cld
arpl
push
jmp
sub
or
repz
imul
xchg
nop
dec
cmp
outsb
insl
xor
cld
dec
mov
xchg
rcrb
shlb
rol
std
mulb
cs
pop
shll
cs
mov
cmp
iret
repnz
fwait
jae
imul
lods
out
mov
pop
xchg
xorl
rorb
sti
out
sar
mov
mov
cmpsb
mov
outsb
adc
divb
and
stos
test
add
sub
int3
inc
int
pop
ror
sub
sbb
mov
insb
cmp
mov
pop
in
or
jnp
adcb
ja
or
rorl
adcb
mov
in
test
ret
adcl
test
mov
push
inc
std
jp
jae
jb
xor
add
xchg
sub
mov
jae
push
and
lock
pop
push
mov
mov
xor
jae
push
ja
jae
sbb
sbb
xor
xor
js
dec
inc
inc
imul
pop
sbbb
mov
adc
add
jae
xor
pop
pop
mov
mov
xchg
int
rolb
and
add
les
bound
push
outsl
cmp
mov
addr16
in
pop
or
ss
inc
fildll
clc
movsl
mov
mov
mov
adc
mov
sbb
out
xchg
popa
fistpll
jp
or
lds
jae
inc
aam
dec
lret
jae
popf
pop
cmp
inc
add
jbe
hlt
rcrl
and
jne
adc
shll
or
fsts
xor
jb
repz
je
mov
xor
int
repz
filds
fnstcw
fwait
inc
jae
ljmp
jae
push
xchg
insl
shl
cmp
mov
addr16
xlat
lcall
fisttps
loopne
lret
xchg
leave
jae
andl
inc
cmc
cmpsl
mov
sbb
mov
movsb
push
arpl
and
mov
push
jae
push
mov
adc
icebp
cmpsb
mov
fsubrs
mov
xchg
and
lods
lds
sahf
popf
inc
xchg
ficoms
inc
adc
aad
cmp
hlt
pop
lcall
cltd
fs
adc
int
mov
rcll
and
xor
cltd
fists
flds
add
call
fwait
push
xor
add
insb
fldcw
mov
push
jae
mov
popf
mov
retw
jb
jecxz
divb
xchg
aas
jnp
mov
sbb
cmpsl
cli
loope,pn
dec
repz
out
push
jae
mov
scas
icebp
mov
jmp
pop
cmc
ja
imul
aad
dec
pop
mov
loope
mov
adc
cmp
out
lahf
bound
sub
push
cmp
orb
movsb
ret
ja
test
leave
and
mov
jae
int3
lret
pop
mov
lds
gs
dec
aas
push
lcall
in
lret
lea
aad
pop
jne
or
jmp
jmp
movups
leave
bound
popf
push
int3
mov
adc
movsb
mov
int
repz
sarl
xchg
mov
cmp
or
mov
lea
jle
mov
scas
sub
aam
test
outsb
and
sbb
sbb
and
mov
mov
pop
cmp
pop
jae
lock
jbe
mov
pop
cmpsl
or
cmc
movzwl
jae
jo
xchg
fdivrs
cli
jae
xor
ss
std
dec
out
orb
pushf
xor
daa
jae
mov
xchg
xchg
shlb
push
jp
jne
enter
fnstsw
xchg
sub
push
out
mov
dec
add
dec
lods
sub
jns
mov
xor
jp
and
sub
popa
cmpsb
pop
push
fisubrs
xor
inc
test
icebp
push
add
stos
xchg
sbb
inc
scas
subl
mov
jo
test
cld
sti
clc
push
daa
lret
popf
jae
cmc
mov
aaa
or
sub
lcall
aas
loopne
mov
mov
sub
adc
fimuls
aas
and
fwait
ret
iret
lods
enter
test
jae
add
icebp
rcll
sahf
cmp
js
push
inc
xchg
dec
jb
add
stc
lret
data16
jae
mov
dec
std
stos
je
jne
dec
cld
adc
push
and
movsl
xchg
fldcw
xchg
mov
adcl
sbb
mov
clc
and
mov
jbe
mov
xchg
imul
repz
jnp
aam
cmpb
out
mov
or
scas
lock
int3
dec
push
and
loope
jns
scas
mov
jecxz
jae
nop
ficomps
aas
aam
xchg
xor
imul
lcall
popf
push
subl
mov
push
or
movsl
outsl
icebp
add
sbb
push
jmp
popf
aam
pop
aam
push
aad
mov
xchg
jae
movsl
stos
imulb
pop
pop
cmpsl
jae
jmp
jne
ret
gs
js
sub
repz
popf
das
inc
in
hlt
dec
xlat
jnp
pop
inc
fnstsw
movsl
insb
loope
pop
mov
popa
mov
mov
xchg
mov
mov
test
mov
filds
mov
daa
mov
lcall
mov
pop
inc
out
jae
jecxz
adc
jbe
shll
push
mulb
popf
jnp
adc
js
mov
lds
xchg
cmp
pop
cmpsl
negb
js
mov
out
outsl
mov
push
mov
or
jge
insb
lret
sti
test
jle
insl
add
push
mov
lock
mov
jmp
mov
cmp
mov
or
imul
fsubrl
lock
aas
add
test
in
jae
stos
test
popf
fbld
bnd
inc
mov
pop
pop
mov
cmp
xchg
sbb
push
into
xor
jb
xlat
fnsave
push
stos
pusha
in
xor
and
sti
push
and
xchg
jae
jle
pushw
xor
outsl
inc
jnp
mov
clc
mov
cld
movsl
or
scas
js
shrb
jae
jecxz
fs
sub
push
push
dec
fistps
popa
stos
loopne
mov
int3
sub
roll
movsl
cmpsl
popf
xchg
push
jecxz
pop
loopne
call
int
jae
ficompl
jae
stos
into
and
mov
mov
call
xchg
inc
sbb
pop
and
mov
nop
sar
js
mov
aad
jb
cmpsl
push
mov
xchg
shlb
mov
lods
lahf
jae
and
outsl
fisubs
ret
add
cltd
dec
jae
mov
mov
jae
mov
or
cmpsb
xchg
add
jae
test
data16
cmp
sbb
jae
icebp
aaa
cltd
mov
call
repz
xchg
jae
cwtl
pushf
pop
lds
dec
subl
mov
or
pop
jae
cmpsb
sbbb
loop
popl
nop
mov
fistpll
mov
inc
stos
xor
xchg
inc
scas
jl
notb
jae
dec
repnz
sub
lret
lcall
ret
and
fimuls
mov
clc
pop
dec
cmp
lods
inc
xor
mov
push
inc
push
mov
sub
lods
xchg
shlb
in
outsb
pop
jge
popw
push
xchg
mov
push
les
push
incb
std
jecxz
inc
lods
aad
repnz
adc
push
and
cwtl
out
inc
push
jp
mov
adc
mov
jae
xor
mov
jae
xadd
pushf
nop
xlat
push
mov
add
and
lods
and
xchg
fbstp
jnp
and
add
fwait
int
cmc
mov
adc
mov
or
cmp
mov
ret
cmc
and
dec
jae
out
pop
jo
jg
leave
orb
xchg
or
out
outsl
cmpsl
js
jns
in
shr
mov
xchg
int
push
outsl
jmp
or
in
lods
xor
hlt
or
stos
fwait
or
call
rcll
adc
xchg
insl
xchg
jge
ds
cmp
int
sub
cmp
outsb
outsb
cmpb
or
pop
mov
and
adc
jae
cmc
jb
iret
int
jne
sub
sahf
pop
or
aad
mov
leave
and
jb
or
add
fidivrs
mov
sub
and
ss
lods
cmc
jae
testb
pop
repz
cmp
data16
xor
xchg
pop
fisttpll
leave
jae
sbb
mov
fildl
jmp
mov
imul
dec
mov
stos
sbb
pop
inc
mov
cmp
dec
xor
jnp
aad
pop
pop
push
aam
cmp
dec
and
insb
and
inc
popa
xchg
pop
pop
repz
pop
pop
je
cld
mov
mov
popa
ret
or
add
cmc
mov
mov
fbstp
xor
test
lret
ss
or
mov
xor
jae
push
adc
sub
dec
fstpt
andb
sub
daa
sti
or
movsl
roll
xchg
ja
test
add
in
mov
popf
js
clc
jne
outsb
sbb
scas
aas
mov
sbb
add
mov
pop
fcompl
jae
shlb
or
adc
in
pop
jbe
adc
jle
jae
ljmp
push
jo
and
jae
jnp
vcvtdq2pd
fisubl
mov
cmp
adc
adc
lock
popa
xorb
fcomi
inc
ret
mov
aas
jae
sahf
aaa
sti
jnp
jmp
leave
dec
jae
out
jmp
push
push
add
sub
scas
mov
shll
sub
popa
push
inc
sbb
and
scas
test
add
mov
ss
cwtl
mov
insb
pop
dec
jo
cmp
inc
cltd
push
shrl
jae
pop
int
loopne
cmp
mov
pop
cmp
jmp
jae
aaa
add
iret
mov
cmc
xchg
xlat
cmpl
xor
negb
adc
fmull
jae
dec
cmpsb
xchg
sub
adc
sbb
xchg
xorb
cmpl
mov
dec
inc
aad
adc
jo
sbbb
push
jo
out
repz
adc
push
jae
add
in
fcomps
ret
je
dec
lret
xlat
jmp
insl
lcall
push
push
mov
or
js
add
pop
pop
mov
xchg
cmpsl
mov
int
xlat
push
push
daa
xchg
add
nop
ficoml
jae
pop
sbb
jae
or
rclb
sbb
outsb
sub
push
sbb
jae
mov
mov
push
fcmovbe
jae
sti
pop
jns
sbb
sar
jg
ja
xor
xchg
pop
scas
ret
and
sub
mov
js
mov
jae
jae
fildl
inc
shlb
and
push
pop
sub
mov
adc
mov
jns
jbe
add
push
aam
xchg
and
popa
and
repnz
mov
lods
sbbl
rcrl
adc
icebp
mov
fidivs
pop
pushf
inc
mov
aas
mov
inc
sub
pop
dec
arpl
jae
pop
jg
test
in
ret
daa
clc
movsl
xor
jae
inc
and
int3
ss
shll
ja
sbb
sub
adc
scas
mov
rcll
adc
cmp
jnp
int
xorl
mov
adcl
jae
lahf
ja
mov
xchg
sti
pop
jae
dec
xor
out
sbb
mov
jae
loopne
sub
xorl
repz
ja
stos
cmc
inc
jo
jae
add
cmpsl
aas
stos
lods
push
mov
jb
cmc
adc
shlb
cmpsb
pop
pop
xorl
mov
scas
xlat
adc
xchg
stc
insl
and
mov
jbe
sub
lods
dec
dec
dec
cmp
mov
dec
push
add
sbb
popf
xlat
pop
ljmp
pop
jae
mov
jo
inc
insl
popf
lods
mov
scas
adc
adc
fbld
lds
fldenv
cmp
insl
mov
adc
icebp
fdivl
jae
inc
sbb
xchg
lds
jbe
jb
adc
xlat
pushf
mov
ljmp
bound
or
dec
jae
and
inc
push
lock
mov
lods
ss
test
sbb
data16
shrb
cmp
xchg
leave
and
mov
jb
int3
cltd
cmpsl
scas
jae
int
fsubp
pushf
fdivrs
stos
adc
pop
cmp
mov
push
mov
xor
inc
movsl
rcrl
sbb
inc
test
cli
push
jae
cld
das
aas
daa
jo
jae
sub
jb
mov
cmp
jle
mov
or
js
mov
pop
mov
jae
xlat
lcall
sti
dec
test
rol
adc
mov
mov
jae
or
pop
mov
in
jae
je
jnp
jo
sti
jae
mov
stos
or
and
xor
xlat
jo
cmp
mov
icebp
push
fisttpl
fistps
stos
xchg
repz
cmp
out
fwait
jnp
stos
dec
inc
or
fnstenv
dec
jl
mov
jo
jmp
jg
xor
aaa
and
adc
inc
movl
ret
popf
shl
jae
add
jge
xor
ret
jae
bound
subl
xor
aam
mov
add
mov
xchg
insb
cmp
movb
jae
leave
dec
xlat
decb
adc
xchg
sbb
or
add
scas
je
fisttpll
imul
nop
and
pop
lret
jne
fcomip
mov
insb
aad
inc
loope
push
mov
mov
xchg
mov
mov
xchg
aas
lcall
je
insb
adc
jae
cmp
leave
cmovb
fstpl
mov
mov
arpl
sub
xor
xlat
dec
jnp
lods
add
cltd
shll
cmp
mov
test
or
shl
jae
lret
mov
lea
jo
xchg
or
repz
jle
inc
push
xor
or
add
pusha
mov
arpl
inc
aad
pop
je
lret
dec
das
xchg
jl
mov
jle
lock
xchg
vshufps
cmpsl
adc
mov
mov
fildl
mov
sub
or
divl
nop
fadd
ss
add
insl
stos
push
lea
or
xor
lret
jae
jb
mov
xchg
mov
adc
mov
shl
mov
cwtl
adc
mov
sub
jg
or
jle
dec
xchg
add
jne
imul
mov
add
xlat
sbb
rcl
inc
push
jne
push
xchg
add
in
mov
xchg
inc
jae
push
test
scas
mov
icebp
mov
mov
and
xchg
ja
jae
inc
sarl
std
or
mov
adc
jae
inc
sbbb
inc
ror
inc
push
aad
repz
jae
dec
loope
mov
inc
ret
jne
jle
jae
add
es
js
cmc
aam
decb
and
test
aad
push
imul
jne
mov
int3
ret
push
mov
jae
std
test
xchg
jb
jae
in
or
xor
mov
jae
movsb
xchg
lea
jl
xor
jmp
jbe
adc
repnz
in
mov
sbbl
pusha
aaa
pop
mov
jae
fmuls
loop
aas
xor
add
or
icebp
les
adc
jae
xor
mov
inc
lahf
sti
aam
adc
cli
pop
in
add
inc
scas
mov
lret
daa
leave
dec
sub
shlb
mov
and
jae
call
cmpsl
fadds
pop
les
sbb
mov
lods
stos
pop
hlt
out
mov
adc
xchg
outsb
mov
clc
jle
cltd
rcrl
shlb
in
fisubs
push
divb
xor
xchg
cltd
xchg
pop
popa
adc
out
xorb
or
lret
mov
fsubs
out
and
jae
fldenv
inc
fcoml
subb
adc
or
jae
add
add
repz
nop
mov
das
fistpl
icebp
in
insl
xchg
sarb
mov
jae
ja
xchg
lahf
add
inc
stos
inc
pop
loop
mov
insl
inc
inc
xchg
xor
scas
loopne
dec
xorl
cmp
ret
mov
adc
cmp
mov
push
adc
cmp
pop
fdivl
pop
daa
int3
push
sub
mov
arpl
mov
lods
loop
scas
insb
in
xchg
pop
jg
mov
sarl
lret
jae
aaa
pop
cltd
xchg
ficoms
aad
mov
jb
lods
xchg
ja
mov
and
inc
jae
mov
pand
sub
shlb
mov
jp
incl
mov
push
imul
mov
pop
pop
pushf
jae
int
movl
adc
popf
subb
xor
pushf
out
rcr
lods
jne
and
ret
push
stos
shlb
jg
in
aam
popa
inc
sub
cwtl
insb
addb
mov
jl
shlb
sbb
jge
jb
sbb
push
imul
add
xchg
fidivrs
jae
je
jp
ret
idivb
cmp
mov
sbb
cli
mov
jae
xchg
idivb
movsl
jne
inc
sbbl
adc
jae
repnz
pusha
inc
pop
out
mov
sahf
mov
notb
xchg
shll
jnp
ja
lods
mov
jo
mov
testl
out
xchg
lods
pop
push
jmp
cmp
sbb
aas
jae
cwtl
test
xchg
jae
or
aaa
sub
clc
cwtl
jae
jmp
cmp
jg
push
repz
sub
ret
in
jae
das
adc
jp
lret
shll
pop
cmc
mov
push
dec
adcb
ss
lds
sti
aad
jg
add
jae
jle
jp
jae
stos
jne
pop
mov
fcmove
dec
jae
mov
pop
popa
xor
jmp
insl
fndisi(8087
sti
jg
es
in
mov
pop
aam
int
dec
movsl
popa
imull
cmpsl
mov
dec
js
jae
and
lea
cmp
lret
jmp
fnstenv
test
lret
xchg
int3
jae
xor
or
sub
mov
xorl
push
sbb
lahf
add
scas
mov
ret
lods
dec
add
sarl
push
repz
or
shl
inc
xor
rorl
movsl
jnp
aaa
jbe
cmc
inc
iret
add
mov
es
les
sbb
push
add
andb
mov
jae
sbbl
push
hlt
mov
mov
pop
aad
jecxz
jp
negb
jae
aaa
and
rorb
pushf
daa
js
xchg
jae
xchg
dec
lock
popf
push
or
aas
dec
insb
push
daa
mov
jae
mov
mov
jae
leave
daa
and
in
sbb
loope
jmp
xchg
ss
sar
jae
lret
sti
jge
xor
mov
out
push
cmp
jae
dec
test
notb
inc
addr16
jnp
jb
lea
rol
outsl
loopne
lret
pop
lods
cmp
mov
test
shlb
popa
mov
in
and
nopl
mov
outsl
mov
pop
aam
leave
rcr
stos
jae
lcall
sub
mov
lahf
cmp
pop
cltd
mov
mov
xor
inc
adc
enter
out
jae
mov
jl
cmpsl
es
test
insb
and
fisttps
jae
cmpsb
mov
in
add
in
dec
sahf
jae
xchg
jo
jg
xor
inc
pop
xchg
inc
jae
add
add
gs
dec
and
aad
sbb
int3
xorl
jmp
in
and
mov
xlat
pop
mov
jnp
cmp
jae
mov
aas
jae
mov
sub
js
mov
xorl
es
pop
repz
inc
jae
sbb
clc
mov
sahf
jb
rorb
jae
mov
mov
pop
cmpsl
sbb
adc
xor
pop
push
xor
lret
fucomi
test
cmp
filds
clc
or
sbb
pop
dec
cmpsl
pop
add
loop
xlat
ss
sbbl
repz
or
dec
or
push
sbb
pop
fsub
xor
cmp
into
fbld
jae
lea
fimull
insb
leave
xchg
xchg
jne
and
inc
xlat
ss
mov
xor
lods
adc
jae
adc
push
jae
enter
das
xchg
es
stos
dec
push
or
pop
insb
add
mov
lea
push
cmpsl
aas
mov
mov
aaa
insb
rol
dec
xchg
mov
pop
xchg
inc
adc
in
adc
stos
pop
insb
js
and
cmp
daa
je
pop
jae
inc
sbb
jae
mov
aad
mov
add
stos
xchg
xlat
xorl
icebp
lea
imul
aas
adc
lahf
cwtl
daa
jae
addl
cmp
sbb
das
leave
movsb
or
xchg
push
jg
cltd
sbb
loop
enter
mov
gs
xor
ss
xchg
lret
jae
sbb
hlt
or
lock
add
mov
and
or
pop
jae
dec
inc
cwtl
and
mov
movsl
popa
test
push
xlat
mov
jecxz
cli
xorb
push
adc
jae
sbb
aad
out
and
adc
mov
ret
es
jae
jl
sub
pop
adc
outsl
cwtl
ja
jle
jo
cmc
xchg
jae
data16
push
pop
leave
flds
ss
mov
jp
mov
jnp
jae
es
mov
cmp
add
scas
jb
pop
fwait
ret
repz
lods
insl
stos
mov
out
jl
outsl
clc
mov
int3
fdivs
jae
gs
pop
fsubrs
jle
cmp
jp
jb
lret
test
stc
mov
and
xchg
mov
rcrl
mov
push
fwait
jge
sti
in
mov
mov
xchg
pusha
mov
mov
mov
jge
aaa
xor
imul
lock
jae
loop
nop
mov
rorb
dec
mov
jle
lret
pop
test
push
xor
int
xchg
adc
scas
mov
movsl
xlat
xor
lock
jae
adc
arpl
jae
lret
inc
cmpsb
jecxz
push
fisttpll
sahf
lds
nop
pop
int
paddusb
ret
test
sub
pop
outsb
cltd
pop
pop
fcmovnu
mov
xor
enter
imul
scas
xchg
cwtl
push
mov
fstpt
jmp
pop
xor
jle
imul
pop
dec
push
mov
xbegin
mov
jecxz
inc
mov
add
lcall
mov
out
leave
filds
jae
fidivs
adc
mov
cmp
ja
ret
jnp
push
rol
adc
jae
xchg
pushf
jmp
sub
lods
adc
dec
into
rcrl
mov
jae
dec
and
es
mov
inc
push
inc
fisubrs
cmp
mov
pop
jle
lods
push
idivb
insl
daa
test
push
push
pop
mov
fnstenv
fildl
push
ficoms
out
xor
aam
jae
jp
push
ret
sbb
mov
xchg
mov
push
or
hlt
popa
daa
pop
sahf
mov
pop
mov
pop
dec
add
sub
cmc
inc
adc
mov
stos
mov
in
lahf
mov
sub
lds
test
pushf
orb
inc
les
dec
fcmovne
arpl
test
mov
int3
les
xlat
and
mov
test
inc
mov
mov
pop
jae
mulb
scas
cmp
sbb
daa
dec
ds
push
jae
sub
es
and
addr16
mov
lods
hlt
stos
jo
int3
jecxz
dec
push
sbb
lcall
dec
xor
leave
enter
loope
xor
pop
scas
shl
lret
test
mull
ret
dec
in
clc
cmp
out
outsb
xchg
and
out
xchg
loop
insl
jae
sbb
xchg
inc
pop
cmc
inc
pop
sti
mov
mov
mov
dec
mov
subb
mov
jae
rol
sbb
xor
mov
jne
insb
cltd
sahf
popf
fstp
xchg
bound
jle
int3
movsb
je
jae
jo
push
mov
shrl
jae
leave
jp
cmp
ljmp
fcmovnb
push
jae
sub
inc
je
add
mov
vpandn
jae
sbb
push
mov
pop
jae
out
sahf
scas
push
into
cmp
int
push
jecxz
leave
push
add
xor
mov
xchg
cltd
or
and
cmp
out
jae
pop
add
testb
jae
jge
shll
and
xchg
pop
adc
sub
clc
mov
adc
sub
sbb
adc
inc
mov
lods
sub
mov
inc
cmp
fwait
and
testb
stos
loopne
orl
lret
popa
mov
cld
push
sbb
arpl
ret
movsl
stos
into
add
dec
pop
dec
nop
lods
shl
pop
mov
adc
test
pop
arpl
xor
jae
outsb
dec
add
xchg
adcb
mov
pop
mov
daa
inc
push
cmp
dec
gs
cmp
addb
xor
cmp
xchg
fisubrs
or
mov
push
loop
mov
and
push
pop
pop
into
jle
sbb
adc
insl
addr16
nop
les
mov
cmpsb
jae
inc
dec
test
sti
flds
sub
sub
loope
addb
jbe
fucomi
mov
lea
xchg
jb
adc
mov
jae
outsb
loope
test
jnp
inc
dec
mov
fidivs
adc
clc
mov
scas
sbb
inc
pop
js
add
aad
scas
movsl
insl
or
push
sbb
add
xlat
loope
cwtl
cmp
xchg
sbb
dec
out
aad
mull
daa
xchg
sahf
insl
cs
add
pop
xchg
and
repz
fstp
jnp
imul
stos
insl
addr16
cmpsb
or
in
mov
movswl
andb
cltd
lds
clc
mov
jae
mov
sbb
jmp
jae
popa
fnstenv
push
pop
inc
jae
sub
out
mov
adc
xor
popf
js
inc
fwait
sub
fidivrs
push
repnz
or
jae
aam
adc
push
adc
adc
lock
sbb
xchg
loope
or
jle
imul
leave
repz
out
aas
fdivs
test
rcr
pop
imul
in
mov
mov
stos
ja
dec
mov
shll
inc
dec
inc
jle
xchg
mov
mov
pop
mov
clc
negl
mov
scas
leave
stos
or
rolb
popa
out
movsb
leave
out
int3
cwtl
iret
out
insl
pop
cltd
das
pusha
jle
xchg
mov
insl
lock
inc
out
jg
xchg
adc
sub
cltd
jae
xchg
lock
clc
andb
add
scas
shrl
pop
cmp
add
sub
test
addr16
ret
jle
addr16
test
push
adc
stos
xchg
jae
lret
xor
rorb
pushf
jl
jae
jmp
sbb
lock
les
rcrl
adc
mov
xor
xchg
mov
and
push
cwtl
mov
cmp
push
inc
add
sahf
leave
push
or
outsb
mov
divl
xchg
add
loop
xor
sar
stos
mov
pop
jae
out
cmpsl
inc
pop
lret
jg
inc
scas
lds
imul
add
jb
mov
cmp
mov
aad
stc
mov
xchg
mov
mov
push
sub
mov
stc
sti
stos
mov
xchg
add
mov
test
xor
cld
call
test
sbbb
inc
data16
mov
insl
fbld
jge
rcrb
negl
xchg
lea
inc
jnp
dec
mov
ficoms
popf
call
pop
pop
push
pop
repz
rcrl
rorb
and
sub
out
hlt
push
pop
rcll
jo
add
lret
pop
lahf
add
ja
push
pop
loopne
mov
sub
aam
xor
movq
mov
insl
out
insb
push
inc
sub
cli
xor
insl
das
mov
out
add
adc
pop
adc
mov
sub
idivb
imul
into
cld
fcmovu
and
out
ffreep
jne
push
pop
dec
jns
outsl
mov
add
dec
imull
push
mov
out
arpl
jg
fildl
sti
add
cmc
or
movsl
xor
imul
outsl
dec
add
in
sarl
pop
mov
sahf
jl
subb
sti
addr16
mov
mov
rcr
lret
sub
out
lcall
jbe
outsl
int
push
pop
xchg
xchg
jecxz
and
dec
dec
mov
push
jl
sub
es
aam
mov
movl
inc
mov
dec
roll
das
dec
ss
add
adc
cmp
cs
rorb
push
xor
mov
pop
das
roll
inc
rol
cs
out
fadds
jnp
jo
jo
jno
mov
xor
icebp
lret
shrb
sbb
dec
rorb
cmp
xchg
pushl
inc
adcb
mov
arpl
pop
sub
dec
iret
test
call
pop
add
lock
not
and
pushf
inc
repz
repz
movsb
addr16
jl
roll
inc
sbb
ret
inc
sub
sbb
int3
pop
mov
dec
inc
cmp
fstpt
dec
inc
dec
cmp
popf
sbb
pop
mov
and
fadd
dec
mov
mov
and
fdivl
in
stos
pop
movsl
dec
cmpsl
and
push
insb
mov
insb
lret
loop
std
fsub
fidivrs
pop
fsubrs
dec
dec
fisubrl
aam
dec
lds
push
in
scas
shrl
outsl
popf
sub
imul
mov
mov
out
lea
xor
inc
mov
mov
push
mov
adc
test
fsubr
ds
arpl
fidivs
xor
and
pop
cmpsb
cli
jg
sub
enter
lods
aaa
push
or
jae
dec
dec
sub
or
test
in
mov
in
insl
out
fs
or
xor
and
cmp
inc
xchg
test
push
jge
add
into
xor
jne
xor
jo
xor
gs
jae
iret
lea
inc
das
mov
dec
xchg
sbb
stc
scas
mov
out
xchg
xor
subl
dec
jae
mov
xor
insl
mov
mov
push
lds
adc
mov
roll
pop
out
int
jae
aas
adc
shr
xchg
rcrb
xchg
scas
push
insb
cmp
jns
cmp
popa
lods
pop
push
ja
jbe
arpl
mov
stos
adcl
jae
pusha
jp
jae
mov
dec
mov
push
adc
or
fidivrs
das
pop
mov
clc
dec
or
movsl
jg
jae
out
aad
stos
mov
fbstp
sahf
add
cmp
jae
iret
xchg
inc
mov
jbe
imul
sbb
sub
jns
sub
fidivs
fstpt
inc
cmpb
sub
fwait
ss
sub
jge
push
and
xchg
jns
add
xorb
xlat
sub
mov
xchg
adc
iret
fldenv
pusha
scas
popa
cld
push
sub
jo
sub
push
outsb
xchg
push
jb
cmpl
jo
inc
push
sbb
scas
and
push
decl
test
imul
cmp
sbb
push
mov
cmp
and
out
xor
pop
stos
stos
sbb
pop
cld
mov
pop
cli
adc
mov
aam
and
adc
or
cmp
cmpsl
add
mov
int
rcrb
mov
lcall
js
cmp
pop
imul
mov
jae
add
ret
or
push
cmc
and
pop
dec
in
fildl
inc
push
mov
fwait
js
xor
jnp
mov
insb
cmp
cltd
mov
shlb
xchg
aam
and
js
xchg
clc
pop
insb
stc
icebp
into
cmpsb
mov
hlt
xor
adc
jns
sahf
jns
add
and
xchg
lret
in
popa
movb
cmpsl
jns
adc
jo
sub
mov
stc
add
cwtl
pop
scas
sub
add
xlat
xchg
or
je
insb
test
es
sbb
xor
push
aad
mov
cmp
push
pop
pop
popf
push
fs
std
xchg
filds
dec
fistpl
dec
cmp
shr
push
cmc
xchg
mov
fwait
cmp
cld
cmp
daa
sub
cmp
push
mov
adc
push
lock
xchg
lods
push
jnp
subl
jg
scas
push
cmp
shrl
popf
add
or
jae
pop
test
outsb
jae
in
sub
mov
stos
jae
cmpb
sbb
xchg
pop
cmpsl
jmp
sub
sub
or
mov
push
popf
mov
sub
out
int
add
jae
mov
and
jae
mov
jge
stos
inc
jae
dec
dec
call
out
mov
js
in
stos
and
mov
mov
adc
jae
aaa
add
sbb
into
dec
xor
mov
mov
out
jbe
adc
jae
loopne
test
mov
or
push
push
loop
test
or
jae
int
push
push
lret
inc
pop
lods
add
pop
inc
cmp
sbb
xchg
ret
ja
pop
jae,pt
movl
clc
dec
fdivr
into
mov
dec
jae
jnp
mov
mov
test
repnz
xchg
cli
mov
adc
pop
mov
popa
sahf
or
mov
sub
fmul
ss
pop
icebp
mov
lahf
jae
das
int
sub
lret
mov
sti
loope
in
jae
mov
sysenter
fmulp
sub
mov
jae
imul
jbe
hlt
cld
jae
cmpsb
in
out
pop
daa
imulb
push
xor
mov
jae
adc
lret
jb
test
push
sub
jae
and
in
loop
jae
adc
into
inc
jnp
pop
es
cmc
mov
out
push
scas
mov
aad
sbb
sub
stos
cmp
aas
adc
dec
scas
aam
iret
vcvtsi2sdl
pop
ss
add
leave
pop
test
loop
xor
out
mov
outsl
add
addr16
ds
mov
scas
rorb
xor
sbb
lcall
dec
mov
mull
xchg
push
xchg
lcall
scas
push
jae
loopne
ss
js
xchg
in
push
and
daa
ret
add
jbe
jae
and
subl
add
mov
int
or
mov
add
inc
or
jnp
js
setbe
jae
xchg
cmc
xor
lret
mov
inc
and
pusha
push
mov
pop
xchg
lds
jnp
sbb
loop
test
xchg
hlt
shlb
ficomps
sbb
imul
je
lcall
dec
xchg
data16
lahf
push
mov
push
mov
lods
dec
ret
cmp
in
xchg
xchg
cmp
push
lret
sbbl
icebp
loop
sub
cmp
add
jmp
and
jg
mov
push
jnp
inc
xorb
mov
lcall
add
mov
and
xchg
cwtl
and
mov
xchg
aas
mov
lret
or
mov
push
jbe
fidivs
bound
lds
mov
pop
cmp
cld
xor
push
andb
xlat
xchg
or
int
cmp
sahf
repz
cmp
bswap
jae
lret
add
jae
cmpsl
fnop
imul
cmp
or
ret
sub
and
push
add
cmp
ret
insl
jmp
add
mov
pop
pop
stos
jne
loop
jae
mulb
xchg
sub
mov
cmp
push
ds
addr16
adc
mov
std
add
stos
xor
xor
mov
dec
imull
mov
fwait
shlb
nop
add
pop
adc
pop
adcb
pop
mov
test
bnd
inc
call
shrl
dec
fidivl
daa
into
adc
sub
popa
insl
rol
push
push
data16
sbb
xchg
and
fwait
ss
adc
inc
cmc
in
fs
outsl
mov
lods
inc
lret
push
and
dec
sahf
dec
fimull
lds
sbbb
mov
cli
pop
jecxz
adc
insb
fstpt
mov
dec
mov
test
add
mov
adc
xchg
jae
popl
mov
pop
ss
xlat
scas
rclb
rep
mov
jae
leave
mov
jne
popf
hlt
pop
sub
lret
jl
jae
out
push
mov
jae
sti
ss
popa
inc
js
and
pop
mov
mov
mov
adc
fdivrl
jle
test
and
inc
xchg
push
mov
mov
jne
jecxz
mov
lahf
imul
movswl
lods
push
bound
sub
addl
bound
dec
jl
mov
adc
xchg
xor
jecxz
cmp
insb
or
and
inc
xor
enter
dec
pop
xchg
shrl
xchg
outsl
cmpsl
movl
test
fs
stc
insb
imul
outsl
ss
jge
mov
xlat
add
stc
jae
lds
add
adc
sub
adc
mov
aaa
shrd
call
shlb
xor
call
andb
mov
and
insb
arpl
push
lcall
loop
or
add
sti
pop
stc
jae
fidivrs
js
fnstsw
push
out
xor
mov
cs
in
insb
pop
sbb
cmc
ss
jae
dec
scas
and
mov
inc
cmc
popf
cltd
mov
sub
jg
fdivl
imul
xorb
addl
cmp
call
mov
rcr
sbb
test
out
gs
and
repz
adc
cmp
sbb
jmp
ljmp
jns
shlb
adc
jae
ss
mov
xchg
xor
xchg
pop
pop
mov
lret
mov
mov
adc
jbe
stos
outsb
int3
xor
icebp
sub
xor
lds
jae
stc
inc
jb
xchg
jg
sub
pop
lahf
shrl
push
ss
call
sbb
push
fadds
jns
add
jbe
xchg
stos
sahf
cli
es
cmp
sub
outsl
dec
inc
fwait
outsl
imul
jecxz
in
mov
mov
insl
push
jo
cmovp
cmp
lahf
aam
adc
repz
mov
sbb
sbb
into
loope
jne
nop
and
adc
pop
cmp
sub
out
and
inc
movsb
ret
bound
sbb
jl
ss
test
decb
xchg
std
and
insb
mov
pop
sti
idivb
adc
cld
fidivl
jae
mov
sbb
test
cld
fidivs
inc
enter
sub
push
jnp
mov
pushf
mov
mov
sub
out
push
push
stos
sub
xor
fstps
jecxz
popa
movsb
loopne
sahf
std
test
fistpll
loop
sbb
jae
dec
sahf
out
push
aad
stos
popa
mov
mov
clc
out
xor
lods
jmp
lret
mov
hlt
jae
dec
xor
or
push
jle
adc
pop
push
ds
sub
dec
jmp
pushf
fisttpll
iret
xchg
pop
mov
jl
jae
add
mov
xchg
push
mov
lea
or
inc
aas
cmp
jl
mov
jae
or
push
hlt
loopne
cmp
and
and
aaa
sub
jae
dec
xchg
enter
outsl
rorb
and
ficoms
pop
int
dec
mov
inc
jae
hlt
add
mov
and
scas
push
xor
lods
jae
ss
pop
das
jae
xchg
stc
xchg
incl
lahf
and
cmp
adc
sub
jbe
inc
mov
mov
mov
jmp
hlt
fwait
data16
xchg
lret
jnp
jae
sarb
pop
push
shll
cmp
test
idivb
and
mov
lock
jae
jbe
sahf
cmp
icebp
movsl
stos
fbstp
movl
xor
push
xor
sub
inc
or
pop
jae
xchg
mov
xorl
jae
inc
das
lds
test
dec
mov
popf
icebp
inc
ja
lahf
enter
les
pop
mov
dec
testl
stc
and
adc
xchg
js
pop
and
jae
mov
lea
pop
in
jb
adcl
xchg
insl
fs
pop
lods
dec
in
add
test
test
or
or
shrl
loop
cmpsl
stos
lcall
ljmp
mov
add
jnp
jae,pt
xchg
cltd
push
dec
lret
mov
sbb
fwait
nop
insl
inc
enter
push
cmp
mov
pop
aad
cmpsl
jmp
push
xchg
push
in
insb
mov
inc
jae
lcall
push
or
xor
pop
ret
jae
int
lock
cltd
jae
dec
fimuls
in
or
lcall
repnz
hlt
inc
fildl
cwtl
aas
mov
push
sbb
repz
mov
icebp
ss
mov
lock
sbbl
fldenv
dec
inc
test
jecxz
mov
adc
pop
xor
out
sbb
xor
scas
cmp
out
sbbl
pop
jae
jg
and
add
jae
add
lods
fnsave
mov
push
leave
popa
fxch
inc
dec
mov
dec
jae
aam
ret
dec
addr16
adc
std
push
js
pop
hlt
loope
adc
je
int
jle
stc
jbe
jmp
jo
adc
js
andb
or
in
cmpsl
int
jne
xorl
jp
jae
pop
test
stc
adc
jae
mov
push
stos
cmpsl
imul
pushf
test
mov
popa
out
lock
xor
adc
jae
inc
or
insl
pop
mov
xlat
in
inc
movsl
in
push
popf
inc
jl
add
ret
lahf
lea
xchg
xor
stos
jmp
fbstp
sbb
loope
int
stc
popf
jae
xor
jp
je
mov
and
aaa
loop
icebp
cmpsb
hlt
ss
dec
jae
andl
or
cmp
insl
sbbb
pusha
mov
sbb
push
dec
sub
out
push
add
ss
jae
dec
mov
pop
jne
sbb
sub
xor
pop
test
jbe
jae
sbb
repz
pop
cli
inc
dec
lea
mov
gs
and
cmc
xchg
jg
in
rclb
jmp
popf
test
fidivrs
mov
fcoml
cmpsb
loop
movsl
stos
jo
jae
std
mov
movb
jne
pop
scas
xchg
mov
loope
aaa
inc
sahf
movsb
cmp
jns
jl
ret
lret
gs
insb
lret
shlb
inc
add
push
mov
ret
int
dec
insb
nop
ret
cmp
aad
stc
shll
gs
idiv
dec
leave
clc
fwait
jae
es
cmpsb
mov
cli
pop
push
and
add
xchg
adc
jae
jp
push
lock
lods
jne
add
pop
dec
rcr
test
cmc
inc
imul
ret
push
mov
sub
mov
decb
jae
subl
jae
mov
jp
push
xor
mov
hlt
jae
dec
shrl
test
xchg
into
fisttpl
and
jae
mov
icebp
shrl
jnp
jo
jle
mov
or
mov
movsb
pop
adc
pushl
inc
mov
mov
stc
inc
ljmp
fstpl
lods
movsb
push
leave
ret
pop
psubusb
scas
xchg
jae
push
push
sbbl
adc
inc
mov
xchg
int3
cmp
mov
aaa
hlt
sub
out
push
adc
and
enter
std
jo
jae
mov
mov
jge
sub
lds
pop
loope
jns
add
cwtl
test
and
shl
popa
aaa
jle
cmp
or
and
fsubl
int
stos
mov
pop
add
jae
xor
in
icebp
rcl
cld
cld
or
nop
dec
in
jnp
xchg
push
dec
js
testb
jae
fstpt
imul
adc
xor
xor
push
mov
mov
adc
std
mov
and
stc
xchg
iret
xchg
cltd
lcall
and
aad
gs
mov
mov
pusha
repnz
jae
aas
das
jp
push
leave
data16
in
jl
jne
mov
je
cmp
inc
xchg
jo
ja
xchg
xor
cwtl
mov
pop
and
nop
jnp
or
jb
movb
cmp
jae
mov
fbstp
jns
dec
sub
cmp
outsl
mov
xor
js
mov
adcl
mov
cmpsl
cmp
sbb
xor
push
repnz
fsub
xor
mov
cmp
sub
pop
cmp
faddp
outsb
xor
pop
lods
sbb
cmpsl
sbb
lea
inc
sti
aad
jecxz
pop
xor
fmul
xlat
or
icebp
mov
push
aam
xchg
movsb
jae
cmc
pextrw
jo
inc
mov
daa
mov
or
cs
lds
and
arpl
in
in
inc
xor
push
mov
sub
mov
or
mov
insl
adc
das
mov
in
dec
pop
insb
mov
and
push
adc
dec
mov
out
mov
fwait
sub
push
scas
in
aam
sarb
push
mov
loope
jae
mov
push
dec
scas
jl
lahf
sub
fists
pop
aad
enter
pop
xor
and
dec
dec
cmpsl
lds
cmp
inc
daa
mov
adc
mov
mov
jae
lcall
jae
ret
cmpb
cmpsl
jae
dec
or
mov
pop
mov
adc
shlb
outsb
cmp
and
popf
pop
pop
insl
ret
xlat
fwait
test
push
decb
lods
and
xorb
jnp
movswl
push
ret
xor
ret
mov
push
popa
loopne
cli
add
dec
in
mov
call
jge
xorb
jo
in
lcall
jae
test
and
inc
mov
in
inc
scas
out
lret
pop
add
xchg
push
bound
mov
dec
test
cli
mov
daa
jns
repz
leave
push
movsl
or
fcomps
and
inc
mov
ja
pop
jae
lret
ret
mov
xchg
je
jae
and
pop
fistl
push
rcrb
or
dec
cmpl
xor
inc
sbb
out
jae
fs
and
aam
mov
xor
inc
test
mov
dec
rcrl
stc
je
xchg
inc
jne
mov
jle
pop
daa
mov
rolb
cmpl
push
xchg
jae
out
sub
pop
ja
fwait
xchg
pop
mov
and
insb
sub
pop
stos
cli
clc
loop
std
pop
xor
adc
insb
ds
xchg
jae
js
push
roll
pushl
jne
jecxz
jb
inc
add
leave
xorb
xchg
jg
cmp
lret
push
dec
mov
adc
mov
jae
push
mov
mov
stos
inc
xor
mov
fwait
sbbl
mov
lret
daa
and
jb
adc
cmp
shr
add
xor
or
sub
mov
out
xchg
subb
je
call
das
std
pop
in
jnp
inc
mov
xor
lock
scas
popa
pop
sub
psubusw
lahf
adc
xor
data16
jg
loop
xchg
push
sub
or
jae
fnsave
dec
idivb
xchg
insb
nop
hlt
das
cmp
jmp
mov
jae
sub
cmp
lds
sbb
aam
loopne
insl
icebp
sbb
les
push
cmp
mov
test
pop
aaa
adc
ret
push
imul
lret
mulb
sti
mov
pushf
jge
inc
mov
andb
std
mov
test
in
outsb
and
inc
js
push
in
mov
out
cmp
loop
in
cmpsb
nop
lcall
and
icebp
outsl
mov
sahf
stos
xchg
xchg
xor
xchg
inc
inc
pop
jae
sbbb
aam
mov
aas
adc
fldt
ljmp
hlt
ret
inc
repnz
insl
into
and
hlt
int
fsts
insl
icebp
lret
neg
xchg
pop
out
push
cmc
mov
std
jo
repz
loopne
mov
les
pop
cltd
add
and
cmp
cwtl
repz
push
adc
xchg
movsl
addb
xor
mov
push
xchg
inc
xchg
xchg
mov
xor
int
pop
test
fidivrs
add
adc
push
adc
int3
sbb
sbb
mov
jae
and
int
xor
fwait
push
xchg
dec
ja
test
lods
out
mov
adc
aas
jl
test
jge
repnz
mov
lock
pop
cmp
out
or
xchg
jb
bswap
push
pop
daa
aas
popa
pop
pop
and
jmp
push
mov
dec
mov
inc
mov
adc
pop
test
jnp
jae
call
rorb
mov
test
jae
jb
fldcw
rcrb
ja
outsl
lods
or
into
jp
adc
popf
jae
xchg
in
cwtl
ds
xor
sbb
or
repnz
pop
dec
mov
mov
push
test
xchg
aam
mov
cwtl
aad
insl
mov
cmp
mov
cli
orl
fcoms
or
sub
test
adc
cwtl
xchg
hlt
adc
jae
cmpsb
loopne
shlb
addl
fwait
mov
xchg
jecxz
jae
pop
jge
or
aaa
mov
gs
dec
in
loope
jae
daa
push
or
je
mov
jae
mov
sbb
cmp
popf
jae
cmp
add
ss
shlb
das
shlb
dec
adc
lcall
jns
dec
and
pop
sbb
sbb
mov
jge
or
rcrb
jae
inc
inc
sahf
leave
idivl
push
fwait
xchg
fdivr
loopne
das
fldenv
aaa
int
push
cltd
jae
out
push
add
inc
in
ret
cld
test
and
scas
aam
add
mov
mov
in
imul
inc
jp
cltd
jecxz
ret
mov
inc
lret
lods
or
fistpll
and
add
jle
loopne
mov
out
xchg
bound
mov
add
jae
add
xor
push
icebp
xor
jns
mov
push
dec
dec
sbb
add
leave
cltd
pop
stc
dec
cmp
jae
cmpsl
in
add
mov
jo
xchg
shll
hlt
scas
jae
and
pop
daa
jge
xchg
test
lods
adcb
js
jae
xlat
mov
xchg
or
or
and
out
push
xor
dec
mov
fidivrs
loope
pushf
testl
ret
repz
mov
sarb
inc
mov
int
jae
xchg
xchg
jae
dec
fists
push
inc
scas
dec
xchg
pop
mov
inc
and
cmpb
xchg
fldl
inc
mov
rcl
decl
mov
fdivrl
in
lcall
jae
test
das
jg
sahf
mov
cmp
adc
jae
or
inc
ret
mov
test
lahf
sbb
jnp
adc
pop
scas
and
adc
fadd
daa
mov
popa
sub
and
insb
pop
xchg
mov
cmc
aas
jae
scas
cmpsb
push
cwtl
pop
jae
lea
imul
add
push
loope
bound
adc
repz
push
enter
adc
icebp
loop
mov
pop
fcompl
fwait
inc
jecxz
mov
add
test
mov
jmp
jp
shl
add
inc
jb
sbb
pop
jae
dec
cwtl
popf
mov
js
lds
mov
push
out
mov
jp
pop
pop
stc
inc
xchg
divb
insl
imul
push
lahf
cmp
out
inc
sti
jo
jb
jae
or
cmc
jae
popl
ret
jae
sub
fsubs
icebp
cli
mov
xchg
mov
inc
push
ss
mov
xor
xchg
repz
jns
popf
imul
push
cmp
inc
insb
inc
push
dec
popl
xchg
jg
loope
inc
in
ljmp
fistl
sub
xchg
fisttps
cltd
jae
sub
pop
jae
xchg
in
add
dec
loope
shr
xor
add
cmp
push
lods
repz
mov
clc
sbb
add
xlat
int
cmpb
jae
call
cmpsb
sub
bound
mov
in
adc
imul
cmp
mov
lcall
daa
sub
imul
or
pop
adc
aad
in
popf
xor
cltd
add
mov
pop
rcr
pop
push
mov
aaa
add
jo
jae
pusha
and
push
imul
bound
lods
jae
add
aaa
shl
test
repnz
icebp
xor
hlt
fsubrs
int
mov
aad
push
jp
mov
ss
or
xchg
lods
and
push
aas
clc
imul
or
cmpsb
jae
adc
inc
lret
xchg
push
jb
insb
pop
dec
stc
inc
or
jns
xor
mov
xor
ds
cmp
xor
test
sahf
mov
push
sbb
push
xor
fisubl
sub
add
sbb
cmc
dec
faddl
into
les
jne
cmpl
jl
pop
icebp
mov
sarl
jg
test
rcll
and
in
push
aad
loope
aam
push
add
fists
rolb
xorb
icebp
shl
pushf
daa
sbb
adc
shrl
je
fcoms
fldenv
or
test
ficompl
insb
das
mov
mov
enter
xchg
push
call
popa
mov
mov
add
mov
icebp
inc
fs
jmp
hlt
mov
mov
int
pushf
cmp
sub
xor
outsb
xchg
decb
cwtl
pop
rcrb
out
and
add
scas
mov
insl
xor
adc
mov
aad
in
cmp
inc
jge
loop
ficomps
jae
aam
and
inc
aaa
out
cmp
or
std
xor
cmp
shrl
loop
cmp
xor
test
xchg
cmp
add
sub
loopne
aad
xor
orl
into
stos
cltd
jae
sbb
gs
sbb
sbb
mov
popa
mov
or
or
pop
adc
push
stos
imul
cmc
lret
jbe
adc
leave
xor
popf
test
popa
das
stc
lret
in
jmp
nop
divl
add
fdivrs
lahf
cwtl
xchg
loop
sbb
aas
xor
in
jae
mov
ja
xor
or
push
xchg
out
stos
inc
lahf
aas
gs
ja
mov
fdivs
cmp
lahf
pop
jae
add
mov
xor
fcmovb
jae
inc
fnsave
out
and
ds
mov
mov
fnstenv
int
mov
xor
mov
xor
cltd
jmp
jne
jae
jns
data16
cli
xchg
jae
jle
or
pop
popf
inc
sub
jl
jae
push
aad
dec
sbb
fbstp
das
nop
xchg
mov
add
cmpsl
mov
idivb
push
test
lret
ds
inc
xor
loope
rorb
cmp
adc
scas
cmpsl
inc
pop
and
jae
push
push
leave
ss
and
stc
clc
cwtl
jns
push
push
push
sbb
xchg
pop
xchg
adc
push
mov
jae
add
xchg
mov
sub
sbb
xchg
pop
cwtl
rclb
push
mov
xor
aam
push
jmp
aas
push
cli
sbb
test
jmp
inc
pusha
lahf
sbb
mov
push
int
mov
je
inc
shlb
loope
pop
out
add
jae
or
inc
mov
and
cwtl
and
mov
lret
adc
push
cmp
lds
cwtl
daa
repnz
pop
inc
push
enter
int
loopne
fcoml
lret
aaa
cmp
inc
push
xchg
adc
and
sbb
popf
push
mov
mov
jae
mov
je
test
andl
push
scas
out
xor
xchg
push
movsl
test
mov
add
and
daa
jae
negb
fidivl
pop
inc
or
add
and
jae
mov
sub
jae
and
push
mov
adc
lret
stos
cmp
xor
shrb
fs
outsl
mov
sbb
enter
or
stos
and
subb
dec
movsb
mov
mov
fistl
pop
and
lds
xchg
jae
jmp
sub
jae
add
push
adc
xchg
inc
bound
pop
mov
fdivl
mov
inc
fincstp
inc
hlt
adc
xlat
mov
and
cmp
dec
jmp
loop
mov
daa
mov
add
adc
shrl
push
dec
imul
xor
jae
mov
mov
bnd
mov
shll
mov
push
mov
xchg
ss
ss
lds
sbb
adcb
jae
mov
mov
in
imul
mov
outsb
pop
jae
cmpsb
aam
jmp
lret
lods
iret
inc
or
or
pop
inc
adc
jae
sti
shlb
pop
jl
fdivrs
adc
in
mov
and
jae
lea
push
mov
cmp
aas
pop
sbb
pop
pop
inc
inc
loop
pop
xor
bound
jge
jecxz
stc
add
push
inc
mov
repz
bound
jae
pop
xchg
push
cmpsl
leave
and
push
sbb
testb
sbbb
cwtl
inc
sub
ljmp
cli
lods
roll
bound
jae
addr16
xlat
addl
push
clc
jle
out
mov
inc
inc
jae
jle
inc
xchg
lret
sbb
jae
pop
sahf
stos
dec
icebp
cmp
movsl
ljmp
imul
movsl
fucomi
pop
mov
ret
sbb
jp
je
sbb
andl
stc
loope
insl
arpl
pop
mov
cltd
jno
or
iret
xchg
pmaxub
pop
sbb
pop
inc
inc
test
pop
mov
xorb
out
pop
fs
sbb
decl
xchg
lds
push
push
or
das
sbb
sub
insl
mov
and
daa
test
dec
sbb
call
clc
push
fs
test
add
or
push
loopne
pop
in
movsl
jl
mov
lret
ret
out
sahf
ss
mov
mov
xor
sahf
lods
shrl
fdivrp
jnp
insl
jns
fldt
mov
cli
bound
jbe
dec
xchg
in
inc
lods
imul
add
inc
fnstcw
pop
dec
inc
fs
aam
jno
and
test
int3
dec
sub
xchg
add
or
or
int
sub
jb
jno
shl
pusha
or
arpl
fidivrs
pop
sbb
fimuls
cltd
dec
imul
jae
loope
arpl
cmp
rol
orl
dec
jne
xchg
push
insb
shll
jl
mov
out
add
aaa
jae
push
xor
jnp
daa
ja
repnz
les
mov
arpl
sbb
pop
cmp
enter
shrl
pop
dec
mov
cmp
dec
sub
jne
xchg
inc
arpl
sahf
cmp
mov
loope
popa
fwait
mov
cld
je
fcomps
les
daa
movsb
push
arpl
sub
jae
sbb
adcl
imul
sbb
test
or
jmp
sbb
repz
int3
dec
retw
sbb
les
movsb
pop
movsb
sub
mov
lods
ret
dec
insl
add
mov
arpl
fsubrp
push
inc
ret
inc
ret
dec
push
pushf
insl
popa
jge
sub
jmp
je
jnp
ret
pop
mov
adc
imulb
jae
test
sahf
push
xorl
jnp
xchg
out
cld
jnp
pop
pushf
imul
fsubr
inc
or
jae
sub
jne
xchg
roll
push
dec
fildl
inc
pop
jnp
and
pop
jae
imul
xor
imul
sti
aas
jmp
fisttpl
dec
sbb
stos
ror
mov
xor
pop
or
jae
scas
xchg
lcall
les
jae
in
dec
jnp
scas
adcl
jecxz
xchg
jae
mov
inc
jnp
jae
fsubrl
jg
dec
sti
cmp
mov
and
or
shrl
test
pop
jae
or
scas
adc
ret
sbb
push
mov
cmpl
sbb
xor
fcoml
out
repz
pushf
push
dec
dec
jae
xchg
orl
insb
push
ret
and
adc
mov
inc
sahf
scas
cmp
and
sub
jmp
repnz
lock
mov
push
jae
movsb
sbb
int
push
push
int3
test
fmull
jl
imul
andl
mull
xchg
mull
jae
adc
aaa
insb
scas
inc
aam
push
sbb
js
jae
int3
xchg
rorl
dec
push
idivl
and
sahf
cs
jmp
cmp
pop
cmp
fs
cmpsl
sub
sub
push
and
jae
sahf
les
cwtl
cmpsl
dec
add
insl
sbbb
add
and
inc
mov
ret
fwait
mov
adc
pop
dec
jg
xor
lds
fwait
jnp
or
outsb
dec
data16
jnp
lret
sbbl
cmp
push
imul
dec
jle
fsubrp
dec
mov
je
and
xchg
jnp
cmp
daa
xorl
cmp
jne
sbb
jg
lock
fstpt
or
push
lcall
xchg
add
xor
shll
shlb
inc
call
dec
mov
nop
les
pop
imul
add
add
ljmp
mov
pop
cld
das
insl
inc
imul
gs
imul
test
movsb
jle
jp
mov
mov
push
testb
cli
push
stos
xchg
xchg
rorb
sbb
sub
cltd
fwait
xchg
sahf
ja
popa
clc
shlb
jbe
pop
mov
subb
int3
mov
dec
mov
adc
sub
jmp
cld
sub
or
aam
or
sub
sub
xchg
mov
add
mov
push
xchg
adc
sbb
es
sbb
outsl
data16
mov
cmp
repnz
ljmp
adc
test
mov
movsb
push
sbb
test
cmpsb
mov
cmp
inc
dec
shll
mov
inc
nop
lcall
pushf
push
movsb
mov
dec
rorb
cld
mov
pushf
jns
call
outsb
adc
push
push
xlat
mov
xchg
push
pushf
stos
xchg
xor
lret
sub
jno
xchg
enter
aam
mov
sub
les
mov
sahf
cmp
add
inc
adc
xchg
pop
cmpsb
enter
or
xor
xlat
mov
sahf
aad
stos
mov
ret
shrb
jne
pop
push
dec
pop
pop
insb
nop
imul
int
jmp
scas
ret
ja
inc
lods
pop
dec
push
jl
test
lods
out
mov
xchg
mov
dec
mov
add
in
fistl
fmull
push
stos
lods
push
shll
data16
pop
and
dec
jecxz
push
add
sbb
sar
movsb
ficompl
and
cmc
outsl
daa
imull
ret
loope
pandn
adc
sub
mov
fisttpl
jecxz
in
fistpll
popl
pop
aam
inc
enterw
arpl
or
xchg
or
jecxz
jne
stc
xchg
xor
in
incl
test
lret
mov
sbb
mov
mov
pop
and
sarl
das
and
sahf
or
jne
outsl
and
xchg
popf
cltd
jmp
or
jne
xor
dec
inc
sub
jmp
adc
mov
sbb
or
test
imul
or
push
sbb
scas
add
pop
push
roll
mov
scas
sub
push
out
jmp
outsl
dec
imul
pop
popa
inc
imul
in
imul
addr16
shlb
ret
mov
dec
pop
test
dec
dec
mov
mov
popf
mov
jbe
lcall
imul
cmc
les
lods
push
stc
arpl
outsl
imul
mov
mov
cltd
int3
popa
sub
mov
pop
insb
cmc
pop
outsl
scas
popa
sbb
sar
xchg
pop
pop
insl
cs
enter
js
popf
repz
les
sub
or
test
push
in
sub
ljmp
cli
icebp
cli
pop
movsb
cmp
sub
dec
mov
cmp
sub
sbb
xchg
jge
xor
out
and
gs
sub
lods
lea
and
iret
js
xchg
sysexit
xorb
outsl
mov
loop
adc
jae
mov
push
ss
push
sahf
stc
add
dec
cli
rcrl
jno
inc
clc
fisttpl
mov
cmp
pop
repz
movsb
inc
mov
pop
lods
lea
jae
xchg
shll
jecxz
and
popl
xchg
xor
mov
push
rcrb
pop
and
mov
sub
daa
mov
lods
mov
mov
arpl
push
mov
out
inc
dec
sub
ficoms
mov
mov
xchg
xor
jl
adc
jae
stos
inc
lods
mov
mov
push
test
iret
sbb
push
popa
lea
cmp
js
mov
jecxz
jne
aaa
popa
inc
scas
stc
and
push
sbb
mov
fs
fsubs
lret
fbstp
arpl
mov
push
cmc
sub
test
pop
push
pop
or
adc
popa
and
repz
cmp
or
xor
aas
pusha
lret
out
imul
adc
inc
outsl
insl
push
aad
mov
jae
clc
mov
jne
mov
adc
pop
rcll
imul
mov
jecxz
pop
popa
cmp
mov
dec
pushf
mov
daa
sbb
mov
fnstenv
mov
xor
es
xor
ljmp
notl
mov
jp
jb
aaa
int
jo
jae
xchg
into
jae
jb
sbb
and
lock
imul
mov
nop
out
movsl
int3
push
ret
icebp
add
mov
js
into
mov
scas
ja
cli
stos
daa
insb
les
inc
test
lods
xchg
cwtl
mov
fdivl
sub
popf
xchg
and
xchg
inc
jmp
jge
mov
lods
cmpsl
xorb
pop
clc
ss
xor
iret
lahf
aas
mov
mov
cld
ret
jae
or
lcall
into
pop
xchg
push
xchg
mov
stos
cmpsb
repnz
and
pop
xchg
ret
repz
ja
stc
jae
loop
icebp
hlt
pop
mov
mov
adc
shll
mov
lret
mov
lret
ret
sbb
outsb
sbb
xor
cltd
dec
jmp
pop
jae
cmp
nop
out
pop
imul
xorb
mov
sti
push
inc
add
mov
rol
or
pop
push
jl
popa
mov
sub
les
test
mov
stc
repnz
jnp
adc
xor
jae
pop
test
add
or
jae
nop
movsl
loope
enter
pop
jo
push
xchg
int
dec
push
mov
lds
shlb
xchg
jle
or
jmp
jae
mov
mov
in
int3
jmp
inc
xchg
std
dec
repnz
jae
adc
sub
push
lea
pop
cmp
mov
jp
xchg
aaa
in
jae
mov
fildl
add
icebp
outsl
xchg
cmpsl
jle
mov
or
das
mov
mov
mov
mov
shrb
sbb
xchg
outsl
scas
push
inc
cmp
ret
lods
loope
jae
jp
ljmp
jne
loope
stc
adc
pop
pop
jnp
pop
scas
dec
jb
dec
orl
ja
inc
cwtl
es
jbe
jmp
addr16
stos
add
adc
add
push
add
dec
lea
out
jae
jbe
jp
pop
dec
jb
jnp
lret
push
shll
xor
cli
repz
jbe
dec
mov
lahf
mov
mov
outsl
adc
std
lret
xorb
cmc
sbb
pop
ljmp
adc
push
or
les
jmp
pop
gs
xchg
lahf
in
insb
scas
movsl
sbb
fimull
ja
mov
and
in
inc
icebp
jnp
mov
pop
sbb
xchg
jae
iret
xchg
mov
xor
adc
lods
xor
inc
pop
xorl
outsb
cmp
pop
jb
ja
mov
push
cltd
insl
rolb
hlt
push
jge
ja
jns
xchg
sbb
and
mov
stos
mov
jecxz
xchg
jne
jp
jg
cli
xchg
imul
mov
loopne
das
and
out
mov
adc
fistl
fnstcw
xchg
adc
add
mov
cmpsb
adc
inc
insb
arpl
mov
or
loope
jge
cmp
loop
jo
push
cld
xor
aad
xor
or
imul
sub
mov
dec
sti
pushf
sub
sbb
imul
or
repz
jns
dec
imul
push
adc
jnp
or
mov
xchg
mov
xchg
insb
sub
mov
insl
movsl
sub
cmp
dec
cmpsl
xorb
filds
sbb
ljmp
adc
fwait
out
jae
sub
mov
mull
mov
jae
lods
mov
jge
cmpsl
add
and
pop
je
jae
adc
movsl
ret
xor
sub
leave
mov
mov
daa
lods
mov
jp
loop
mov
mov
test
adc
mov
popa
mov
stc
lahf
in
loop
xor
and
andb
pushf
dec
jae
aam
mov
jge
jae
or
sahf
shrb
jae
mov
fwait
hlt
inc
jmp
jne
jns
out
bnd
icebp
repnz
insb
stos
xchg
jg
jb
xchg
jle
push
mov
pop
insb
mov
mov
insb
inc
cmc
lock
fwait
jne
jecxz
fs
cmp
or
jae
xchg
test
jae
int
add
sar
and
sbb
movsl
jnp
jo
mov
jae
push
xchg
add
in
shlb
add
sub
xchg
mov
inc
mov
xor
fnsave
jl
push
lret
repnz
mov
sahf
xor
jae
inc
lea
jnp
jb
imul
ljmp
fsub
insb
mov
jnp
je
sub
add
insb
jge
xor
jg
pop
cmpl
in
test
sub
jge
xchg
xor
gs
cmpl
sub
xor
aam
xor
xor
ljmp
adc
xor
jmp
imul
and
stc
ss
movsb
mov
jnp
adc
lahf
adc
in
mov
cmpsl
bound
loope
stc
pop
repz
xchg
and
push
lcall
push
dec
insb
lcall
jns
xchg
test
pop
adc
gs
jge
rcrl
out
jns
dec
or
sub
popf
repz
movsl
xlat
icebp
mov
mov
idivl
inc
mov
jae
shlb
mov
hlt
icebp
ss
xchg
ret
xrelease
insl
outsb
daa
jo
js
mov
aam
add
fisttps
sub
subb
ja
jne
inc
jg
mov
aaa
repz
jbe
jae
pop
je
ja
stc
jp
or
mov
outsl
addr16
cmp
mov
cmp
or
int
loopne
stc
jae
dec
jg
mov
sar
scas
movsl
dec
xor
xchg
das
adc
test
test
adc
mulb
inc
test
stc
call
push
cmp
ljmp
out
cmp
icebp
imul
int
fs
aaa
mov
mov
push
and
stc
scas
fs
insb
cmp
imul
icebp
add
stos
loopne
dec
fdivrs
bound
push
and
xor
jae
andl
mov
lock
cmp
aam
pushf
insb
inc
test
mov
pop
imul
aaa
jno
mov
add
add
sub
mov
mov
mov
lret
stos
mull
adc
lea
cmp
jae
repnz
std
pop
dec
mov
xor
aas
cs
jae
jmp
int3
ljmp
sbb
mov
mov
push
push
aam
aas
sub
sub
in
mov
adc
jg
sti
test
add
push
faddp
into
xor
lahf
rorb
sbb
ja
xchg
ss
sbb
leave
int3
xor
pcmpeqd
inc
mov
loope
cltd
xor
xlat
pushf
sbb
jae
sbb
jmp
aad
shrb
jge
push
inc
jbe
adc
jne
arpl
js
jp
jae
jl
aaa
mov
stos
imul
push
mov
insl
and
filds
cmpsb
jmp
das
stos
lea
loope
inc
jb
mov
in
sbb
mov
xchg
dec
push
dec
aad
cltd
idivb
inc
insb
jle
push
gs
push
jo
into
jae
add
sub
ss
insl
inc
push
out
fbld
jae
mov
in
int
cmpsl
jae
mov
adc
push
aam
jge
mov
roll
pop
popa
fstpt
mov
add
mov
movsb
fisttps
movl
out
testb
push
cmp
xchg
jae
shll
repnz
les
cmp
mov
leave
xor
xor
dec
jae,pn
testb
jae
adc
loopne
inc
leave
iret
xchg
testl
push
ret
sbb
xor
jae
xor
addl
xchg
cmp
sti
lock
sbb
mov
mov
rcr
in
jecxz
test
jae
mov
aad
jae
xor
fbld
jae
scas
in
leave
push
dec
jae
xor
push
jp
jnp
xor
mov
repz
test
fldcw
ficoml
sbb
lret
addl
std
jae
jecxz
faddl
js
xchg
in
pop
xor
sti
popa
and
mov
cmpsl
in
xor
fbstp
lcall
jae
pop
int
shrl
fndisi(8087
or
sub
push
cmpsl
or
les
jae
icebp
cmpl
std
ss
push
addr16
mov
push
out
fldl
dec
jg
mov
fcmove
inc
fwait
push
imul
cli
jae
mov
adc
sbb
xor
and
jae
pop
icebp
fnstcw
hlt
ja
outsb
adc
test
repnz
ss
sarl
xchg
and
cwtl
pop
sti
cmc
insb
mov
lods
fbld
insb
rcrl
add
mov
pop
in
jl
and
sub
insb
movsl
fldcw
sbb
jmp
or
lret
mov
inc
lea
aas
adc
xor
lock
popa
decb
xor
aad
loope
jle
push
mov
xchg
pop
or
jecxz
add
jae
lret
adc
aas
mov
jae
aam
sub
mov
cli
cmpsb
sbb
cmp
sub
fnstcw
jp
jae
loop
mov
popa
mov
pop
mov
lods
pop
test
scas
xchg
mov
xor
mov
add
jo
and
inc
push
sbb
inc
addr16
cmpsb
outsb
push
jbe
jecxz
je
jp
xorb
lds
repz
fcoms
inc
jp
sbb
jae
cmc
cmpsl
notb
jnp
cmp
xchg
mov
or
cmp
in
mov
into
pop
jo
cmpsl
out
jo
jae
mov
pop
adc
aaa
into
jle
jb
jns
das
adc
mov
loop
inc
sarl
push
mov
popf
xor
push
mov
push
test
xchg
insb
into
inc
nop
cmp
or
sub
or
add
mov
push
movsl
cmp
icebp
call
jo
cs
push
or
jae
mov
test
push
fdivr
xor
xor
or
ds
jae
xchg
mov
stos
outsl
mov
xor
stos
jae
movsl
jg
fiaddl
xor
jle
insb
test
and
cmp
jnp
fisttpl
outsl
or
add
jae
xor
lea
dec
xchg
int
lcall
add
jp
push
mov
pushl
subb
jbe
add
jae
out
and
sub
fnsave
stos
mov
cli
mov
lock
add
leave
ja
stc
cmp
jb
jg
repnz
insb
or
or
mov
andb
test
add
loop
inc
pop
adc
mov
stc
pop
xchg
mov
into
inc
imul
xchg
cmp
or
imul
cmp
inc
push
sbbb
ja
and
sahf
add
xor
stos
aaa
push
scas
gs
jp
jnp
sub
fldt
add
pop
test
movsb
xchg
movsl
js
das
jnp
add
push
fnstenv
sarl
icebp
insl
mov
imul
shlb
cmp
jae
xchg
into
mov
xchg
repnz
icebp
inc
cmc
ficomps
idivl
movups
push
repnz
jae
and
xorl
aaa
jae
mov
in
jmp
mov
insl
leave
dec
jo
daa
mov
or
lods
inc
fnstenv
test
adc
mov
insl
push
push
mov
inc
fnsave
loop
mov
and
dec
add
jne
mov
jae
rclb
inc
aas
dec
aam
ret
into
xchg
mov
xor
dec
fnsave
cmp
add
lds
mov
xchg
outsl
mov
in
cltd
scas
std
xchg
mov
pop
rcll
ja
in
mov
or
stc
inc
shll
mov
mov
jecxz
mov
xchg
jae
adc
jmp
inc
pop
mov
jnp
dec
pop
pop
repz
rorb
dec
push
loopne
xchg
jle
lock
mov
xor
pop
fdivrl
push
stos
mov
out
sarb
imul
in
sub
stc
out
xor
xchg
sahf
pop
adc
sub
mov
adc
call
icebp
mov
inc
sbb
xchg
jb
sub
sbb
push
cltd
xchg
scas
divl
xchg
mov
jae
pop
pop
jp
cmp
jae
sbb
or
xchg
cld
jae
cltd
mov
lahf
insl
jecxz
fsubs
test
mov
cwtl
or
pop
push
jae
js
or
ss
test
lods
mov
add
ja
fcompl
aaa
sub
out
in
cmpsl
call
push
inc
std
xchg
cwtl
xor
jae
add
aam
cmc
and
xor
adc
jae
mov
sub
ret
test
cmpsl
imul
add
idivl
sbb
push
jae
cmp
mov
cli
or
test
cmpl
mov
sbb
rcll
leave
mov
jg
mov
lea
in
xchg
jg
inc
push
dec
jae
aam
or
adc
sbb
fstpl
icebp
pop
adc
js
jmp
loopne
inc
test
popa
enter
sbb
divl
ret
push
into
mov
popf
std
rcll
aaa
imul
in
lea
mov
loope
sbb
cmc
jo
lods
mov
mov
fcomps
sbb
inc
xor
mov
repz
sbb
std
jbe
repnz
sahf
das
xchg
add
mov
cld
stos
mov
push
jne
pop
push
iret
mov
adc
leave
mov
mov
mov
mov
fcmove
push
inc
mov
jae
or
addl
xchg
ja
stc
adc
insl
enter
hlt
std
in
pop
sti
loope
loop
and
in
jnp
je
push
mov
and
adc
inc
dec
mov
das
pop
getsec
aas
inc
jae
sbb
negw
dec
sbb
jae
mov
test
das
adc
sbb
pop
test
add
jae
mov
je
imul
pop
int
inc
mov
addr16
andl
lret
push
jo
push
pushf
jae
cmp
mov
in
sbb
inc
lahf
sti
stc
cli
ljmp
dec
leave
or
enter
pop
mov
sub
ljmp
sbbl
imul
jae
clc
xchg
jae
cmp
test
leave
xchg
xchg
icebp
cmpsb
mov
lret
push
mov
pop
dec
negb
sub
jp
jae
int
mov
insl
nop
fnstenv
mov
xchg
push
push
lcall
popa
dec
push
dec
or
xchg
fisttpl
or
mov
sti
adc
imul
pop
xchg
and
arpl
aas
popa
jp
dec
dec
lock
divl
mov
adc
xor
into
and
imul
movb
das
insl
pop
es
xchg
enter
jmp
cmp
sbbb
jae
or
or
sbb
mov
mov
jae
int
js
pop
mov
jnp
mov
outsb
fimuls
add
push
insl
push
and
shll
xor
push
fwait
out
mov
mov
inc
sbbl
aam
inc
das
mov
test
ja
repz
add
js
jb
imul
pop
jae
mov
fidivs
ret
sub
or
stos
jae
shll
jae
sbb
sti
mov
loop
std
push
mov
xchg
push
fldcw
aam
mov
clc
pop
inc
imul
dec
jae
scas
aas
jnp
push
loopne
faddl
jae
js
scas
cmp
imul
test
icebp
sarb
or
scas
jne
sub
jge
mov
pop
loope
cwtl
clc
pop
and
jl
insl
shlb
lret
fcmovnu
insl
cmp
dec
xchg
mov
push
jae
adc
shlb
jnp
lods
jg
cli
cld
jae
jmp
xchg
aam
sbb
dec
jo
inc
jae
stos
inc
mov
push
fcmovbe
loope
xchg
jae
xor
add
test
fstl
jns
xor
fwait
jae
aam
jg
pop
xor
xchg
push
jp
adc
xor
aas
push
sub
fdivrl
shlb
pop
loop
adc
pop
rcrl
and
aam
loopne
ja
dec
jns
mov
sar
mov
jae
xchg
cmp
int3
fisttpl
push
dec
inc
jmp
and
mov
pop
nop
shll
pop
fisubrs
sbb
and
es
jl
cmp
aad
mov
jg
imul
mov
xor
xor
or
ja
fs
jle
mov
xchg
jae
add
scas
pop
hlt
or
test
sbb
movsl
xlat
cmp
mov
outsl
add
jae
sbb
xor
add
fnsave
mov
mov
test
scas
jb
mov
xor
icebp
repz
repnz
ds
int3
jae
mov
sub
ret
lret
adc
adcl
insb
roll
popf
add
sahf
mov
or
xchg
add
pusha
cmp
sbbb
mov
loopne
lret
mov
jmp
pop
jae
mov
mov
mov
and
nop
mov
orb
sbb
popa
push
cmp
aas
ficomps
mov
or
mov
test
xor
and
mov
aas
js
cltd
jae
push
mov
rolb
jae
aaa
lret
push
mov
push
imul
cmp
jge
sbb
xlat
pop
jp,pt
dec
in
pop
clc
push
xchg
fbstp
adc
fisubl
sbb
idivb
in
clc
mov
pop
repnz
xchg
cmp
cmp
jbe
lods
or
pop
les
cmc
push
pop
je
testl
mov
adc
leave
inc
add
dec
lods
xchg
fisttps
shrb
cmp
push
push
jne
mov
jb
jae
pop
icebp
adc
inc
fldl
pushf
test
inc
int
insb
jl
inc
lods
insb
push
iret
call
xchg
fwait
test
or
adc
xchg
push
push
rcr
inc
in
inc
pop
mov
imul
pop
mov
into
jle
movsl
lcall
pop
loopne
dec
insb
add
fwait
js
mov
sbb
jl
gs
imull
jle
je
jnp
xchg
lock
aam
or
jl
dec
jg
xor
jae
pop
sub
mov
test
jae
mov
les
insl
or
lods
loope
shll
mov
push
lret
test
dec
lods
loop
movsl
stos
rclb
lahf
daa
sub
xor
xchg
sub
ret
fwait
sub
std
push
addr16
push
in
test
test
jle
icebp
add
jne
push
inc
add
adcl
jae
aaa
dec
xlat
sub
notb
enter
shlb
mov
nop
into
mov
js
jae
xchg
inc
push
jae
inc
sbb
cmpsb
rorb
aas
aaa
cmpsl
leave
in
lds
dec
dec
pop
dec
mov
scas
or
inc
and
mov
sahf
xchg
rclb
movsl
or
lods
cld
test
movb
aaa
lcall
adcl
dec
inc
cmp
adc
out
push
sub
mov
fcomip
dec
xchg
ss
cmpsl
jae
dec
orb
adc
popf
xor
xchg
add
jge
and
loopne
rorb
jge
repz
xchg
xchg
xchg
jae
sarl
xor
jg
inc
pop
std
inc
pop
pop
jns
orb
cmc
jae
nop
push
into
data16
xor
adc
insl
mov
add
je
xchg
fwait
or
jae
fnstsw
rclb
lock
adc
jae
pop
jmp
mov
jg
add
stc
push
ja
mov
jb
adc
lock
jp
idivl
mov
rclb
adc
lds
leave
jae
test
inc
rcrb
push
jae
fsubs
or
xorl
xchg
add
jae
stos
sbb
xor
pop
mov
adc
push
aas
cmp
jae
andl
jnp
lea
mov
lods
adc
rcl
fdivs
cmp
inc
ja
filds
inc
sbb
push
rcll
mov
xchg
out
mov
inc
int
ja
jle
call
xorb
out
pop
cmpsl
and
hlt
lret
std
jge
mov
cmp
sahf
ret
mov
repz
fldl
jle
testb
push
aad
xor
dec
adc
stc
fnclex
jp
add
or
jge
xchg
jle
jae
testl
and
lret
test
jae
clc
loopne
pushf
and
push
mul
dec
aaa
scas
pop
and
je
mov
outsl
loope
sub
mov
ljmp
jp
pop
xchg
cmp
inc
dec
dec
dec
lcall
sti
jae
pushf
pmuludq
jmp
xchg
fldcw
stc
insl
mov
add
adc
popa
ficomps
and
mov
movsl
or
lods
push
cmp
mov
fisubrs
sbb
push
mov
testl
sub
js
in
sub
add
xchg
xor
mov
aas
ret
popa
lcall
das
ficompl
xor
repz
loope
aad
mov
cmp
fwait
add
xor
mov
push
insb
popa
push
ds
dec
and
jae
fldl
sub
fdivs
cmpsl
jmp
je
push
sub
pop
ret
mov
inc
jae
mov
mov
dec
mov
iret
push
mov
jne
and
xor
jns
fidivrs
jae
lds
mov
insl
in
or
sub
jp
add
fdivs
mov
push
or
jb
js
jg
in
jmp
jae
inc
rolb
aaa
idivb
jne
repz
xchg
test
inc
sub
mov
or
and
add
pop
jecxz
aas
inc
ffreep
repnz
cmp
xor
pop
out
push
mov
fs
into
insb
and
jle
test
loope
lods
adc
pop
fidivs
pusha
mov
and
push
mov
cltd
jnp
gs
fsts
sub
cmp
inc
cmpsb
aam
ds
dec
lcall
test
push
xchg
in
fstps
insl
add
pop
xchg
add
dec
mov
cmp
push
fisubs
xor
xchg
push
mov
inc
in
mov
mov
bound
adc
pusha
mov
push
xchg
and
jae
loop
int
jae
xor
data16
jp
dec
and
xchg
jae
aaa
pop
jmp
adc
cmpsl
lea
mov
inc
out
gs
icebp
and
mov
movsl
mov
mov
test
cli
loopne
jae
sahf
xchg
mov
xor
or
andb
and
and
std
sub
inc
hlt
mov
out
jae
movsl
ja
inc
stos
adc
dec
inc
int
popa
test
jae
mov
faddl
push
adc
in
dec
enter
jg
dec
add
aas
push
jae
jg
mov
jo
popa
cvtpi2ps
mov
jns
imul
jp
sub
jae
lods
pusha
mov
shlb
lds
adc
add
mov
mov
jns
mov
call
sub
mov
pop
jae
sub
jne
mov
aam
je
or
jae
sub
daa
pop
jecxz
jae
out
fnstsw
push
call
inc
clc
mov
jae
xchg
xlat
mov
cmp
jnp
jne
or
imul
pop
adc
xchg
push
std
insb
icebp
adc
inc
mov
cld
inc
dec
inc
jge
mov
insl
hlt
jg
xchg
or
sub
sbb
lods
cwtl
mov
ret
jae
xlat
std
cmp
pop
into
xor
idiv
adc
jae
test
sahf
cltd
or
das
jae
out
popf
dec
pop
or
daa
mov
aas
mov
jo
data16
push
or
fcoml
mov
push
add
pop
sbb
adc
pop
lea
push
cltd
movsl
insb
ljmp
mov
popa
xor
idivb
and
stos
ja
push
dec
js
movsb
in
je
out
ret
movsl
push
stc
sbbl
jae
test
pop
cltd
mov
jg
jae
jmp
xchg
lock
lods
addr16
cmpsb
jg
mov
xchg
xor
mov
movsb
mov
popa
ficompl
lahf
xchg
mov
sbb
int
ja
mov
mov
out
push
in
fsubs
test
cld
pop
adc
aas
das
js
sbb
mov
lea
test
jle
jae
daa
int
loope
leave
xchg
mov
add
inc
jae
jecxz
mov
popa
or
fadds
inc
push
insb
cmp
js
sbb
add
fstpl
push
sbb
and
fisubl
cmp
or
pop
sbb
repnz
cli
js
outsl
adc
rcl
mov
mov
cmp
insl
and
push
jne
scas
repz
jae
lret
and
push
xchg
jl
cmp
sub
int
mov
stc
add
xor
insl
lret
and
dec
jnp
leave
imul
fsts
daa
clc
mov
mov
dec
xchg
xor
jae
sbb
mulb
sub
xchg
adc
pop
dec
orl
add
xor
push
mov
mul
test
mov
cmp
shll
add
mov
inc
movsl
lods
je,pt
stos
inc
sbb
push
fwait
in
mov
clc
mov
or
jge
and
aaa
inc
out
jne
icebp
add
add
or
dec
aam
push
xor
pop
jbe
xchg
push
jnp
jae
and
ret
popa
jp
and
lcall
fisubl
push
scas
pop
dec
inc
pop
and
das
pop
or
sub
pop
fcomps
into
jb
cwtl
aad
insb
insb
icebp
mov
aas
stc
in
jge
jae
testl
push
sbb
pop
jae
mov
pop
jb
jae
xor
andb
mov
xor
insb
mov
and
pop
cmc
push
xlat
mov
lock
xchg
insb
jge
and
fsubrl
lret
mov
jae
icebp
and
mov
sbb
loopne
inc
push
push
jbe
fwait
pop
fadd
fists
mov
push
xor
std
test
stos
insb
inc
mov
pop
push
add
mov
mov
xchg
jo
cmc
mov
and
rcrb
jae
iret
dec
test
insl
addr16
xchg
sti
addw
push
jae
aas
arpl
mov
jae
add
add
cmp
sbb
add
dec
fildll
std
jae
lcall
adc
js
repz
fldt
xchg
cmc
xchg
xor
nop
int3
test
and
rol
adc
shlb
pop
and
mov
dec
add
sub
cmpsb
lods
scas
out
xor
cmp
cli
xchg
jne
xchg
jle
pop
loope
aas
mov
and
mov
cs
iret
mov
clc
cmp
cmpsb
test
inc
lods
insl
fcmovb
nop
mov
lahf
in
adc
jae
cmc
add
shl
int3
or
jae
sti
in
xchg
movsb
pop
mov
sbb
jae
data16
movsb
aas
mov
loop
push
cmp
loope
mov
popf
in
fdivrl
in
jp
and
int
mov
xchg
bound
aad
dec
cwtl
xorb
or
sub
roll
add
inc
movsb
pop
ret
and
lock
add
loope
cmp
dec
xchg
insl
mov
lret
xchg
clc
insl
sbb
andl
mov
adc
aas
ret
add
xchg
pop
push
jge
cmc
ret
and
insb
add
lods
jae
int3
jmp
rorb
popa
xor
in
mov
mov
mov
test
dec
and
jae
pushf
mov
and
out
inc
das
sahf
jae
aas
adc
loope
dec
xchg
lock
jae
stc
mov
jae
mov
ss
insl
xor
xchg
sarl
shll
jns
push
xchg
xchg
inc
add
les
mov
mov
jae
shl
dec
stos
jecxz
cmp
std
aad
xlat
mov
ja
add
cmp
xchg
lods
int3
cmc
xchg
orl
rorb
mov
js
mov
or
fwait
jns
add
aaa
aas
js
iret
cld
lahf
jae
movsb
jne
cmp
insl
dec
mulb
push
and
mov
dec
jae
enter
mov
push
cmp
imulb
inc
jbe
mov
sbb
fsubl
adc
mov
nop
sub
insl
push
jmp
lcall
jae
cmp
aaa
gs
push
mov
ficomps
dec
loopne
push
sbb
ret
in
stos
orl
pop
inc
sti
jae
sbbl
arpl
inc
mov
jae
xchg
roll
es
push
pop
xor
lods
add
mov
into
sbb
or
imul
mov
mov
jae
cmpsb
ja
cmp
adc
jae
cmpsl
cmc
lret
ret
popl
sbb
jae
nop
aaa
inc
cltd
jo
into
shr
push
mov
out
jae
mov
shl
jne
xchg
jae
mov
es
rcrb
daa
hlt
scas
or
pusha
ret
out
jae
mov
btcl
divb
pop
mov
lcall
aam
imul
push
shll
daa
js
mov
aas
dec
dec
and
test
jp
dec
cli
mov
js
sub
aaa
ljmp
or
sbb
cwtl
js
hlt
fwait
push
insb
idiv
pop
mov
loop
jae
sbb
jbe
jp
sti
jae
push
leave
rcrb
aas
das
xorl
lock
sarb
adc
jae
push
pop
mov
mov
jae
jo
xchg
inc
mov
push
in
les
jae
mov
inc
shrl
into
xor
push
cmp
or
push
inc
and
jns
mov
mov
movsl
inc
bound
mov
mov
sbbb
lret
lcall
pop
ret
jae
sahf
popa
mov
pop
push
iret
adc
xchg
outsb
push
cmp
mov
testb
cmp
xchg
pop
pushl
pushf
push
mov
jecxz
jge
and
repnz
pop
out
pop
sbb
cmp
insb
mov
adc
jae
push
cli
imulb
fiadds
pop
push
xchg
sbb
dec
and
mov
mov
outsl
add
xchg
mov
jbe
decb
mov
adc
hlt
adc
inc
xchg
jae
mov
sbb
adc
xor
mov
imul
popa
inc
negb
pop
mov
xchg
test
int
je
pop
inc
jbe
aam
and
fxch
cmp
jnp
add
xchg
das
jg
imul
test
sbb
adc
mov
push
int
mov
fnstenv
fwait
cltd
icebp
mov
cmp
xor
jae
ret
cmp
lret
sbb
xchg
jae
and
push
xor
in
xchg
repz
cld
mov
insb
cld
into
mov
jnp
push
insl
jb
and
jl
rcl
inc
testb
out
das
push
sub
add
ror
jae
hlt
dec
add
pop
mov
das
push
dec
adc
sub
aaa
jle
mov
test
dec
mov
adc
ret
cmc
mov
dec
lea
sub
dec
xchg
lret
jle
subb
ljmp
xor
or
dec
cs
enter
mov
imul
aaa
push
or
cwtl
cmp
stos
shll
lods
dec
add
div
adc
push
inc
adc
jb
cmpsl
mov
jae
paddw
jae
js
orl
enter
adc
push
lods
out
or
pop
cli
cmc
or
sbb
lret
pop
sub
lret
cs
test
decl
mov
cltd
cltd
or
int3
cld
call
das
adc
jae
mov
roll
jg
js
sub
out
cwtl
sub
mov
lds
xchg
push
scas
call
hlt
sbb
rorl
pusha
sub
pushf
dec
fmull
test
adc
xorl
leave
iret
jge
push
sub
outsl
sbb
dec
dec
or
lea
or
jo
dec
out
enter
jecxz
sub
int
call
shlb
sti
xor
jo
ja
add
stc
enter
push
je
or
push
or
dec
or
arpl
lahf
add
and
lock
icebp
pop
decl
clc
punpcklwd
lret
sub
adc
xchg
shrb
sub
xchg
add
fwait
pop
rorl
jl,pt
sub
inc
mov
call
loope
jo
dec
fbstp
and
enter
dec
mov
sub
mov
imulb
pop
sub
test
es
xlat
jmp
imull
popa
shlb
pop
mov
dec
iret
mov
dec
mov
pop
mov
cwtl
pop
je
add
mov
insl
push
add
ljmp
addr16
mov
push
jecxz
and
sub
and
fisubs
in
les
lods
lods
in
scas
mov
test
in
movsb
lock
cld
sbb
aam
out
push
mov
loopne
inc
imul
fsubl
ret
mov
call
pop
popf
or
sub
mov
jnp
push
int3
xchg
xchg
loope
xchg
mov
adc
pop
insl
int
inc
les
sub
add
jae
sub
out
call
or
outsb
outsl
or
lret
je
pop
movsb
fs
mov
insl
cwtl
scas
sarb
icebp
sahf
sub
jb
negb
into
mov
sbb
scas
sub
outsb
sub
call
mov
outsl
lods
lea
bswap
and
in
lea
jae
loope
insl
pushf
inc
aad
data16
sbb
iret
lock
and
leave
out
jle
mov
pop
das
hlt
dec
icebp
cmp
mov
aam
jb
jmp
pop
pop
sub
push
cmp
cmp
mov
insl
adc
sub
push
jmp
and
mov
fcomi
loope
lahf
rcrb
ret
gs
xchg
inc
mov
or
sub
fcmovnu
fwait
jb
sub
mov
ret
or
leave
jmp
and
jne
add
int
cltd
clc
dec
push
jne
shlb
push
mov
jae
lods
out
loopne
add
aaa
lods
adcl
mov
pop
in
xchg
mov
inc
fdivrl
sbb
xchg
mov
cmp
mov
mov
mov
mov
hlt
mov
or
cmp
jmp
jae
cld
scas
pop
inc
out
pop
jae
lret
mov
loop
xchg
outsb
dec
and
xchg
jae
mov
cmpsl
sub
popa
mov
rcll
inc
gs
sub
icebp
jmp
test
jg
pop
xor
loope
cmp
cmpsl
sub
jae
mov
add
rclb
lcall
sar
ljmp
or
lahf
dec
xor
xor
sub
jae
in
test
mov
frndint
xchg
xchg
cmp
jns
lret
loop
rclb
adc
lods
fwait
sub
and
fndisi(8087
jge
fdivrs
jne
jae
fmulp
adc
jae
rolb
jae
lahf
adc
stc
xchg
scas
mov
jmp
cmpsb
add
jbe
imul
inc
icebp
leave
inc
jae
les
xlat
hlt
xchg
gs
ffreep
jne
mov
popa
sbb
xchg
rcrb
add
dec
jae
popf
sub
xlat
jae
sbb
pop
pop
gs
cmp
daa
cwtl
jmp
lds
xchg
jae
jbe
sub
or
sub
jae
dec
jg
mov
mov
cld
out
lret
sbb
mov
ret
xor
or
push
divl
stos
pop
std
add
insl
pop
sub
and
mov
in
jae
lret
pushl
lcall
stos
mov
add
inc
jae
mov
out
jae
or
dec
cwtl
push
nop
mov
rcrb
mov
dec
lods
push
into
pop
jnp
in
dec
jl
aam
testb
push
mov
popa
ja
cmp
cmp
push
lcall
setne
pop
lods
jae
roll
test
add
mov
negl
cmp
popf
jae
icebp
jmp
mov
fdivrs
pop
xchg
sbb
mov
jae
aas
pop
inc
and
and
testl
pop
cltd
int
repnz
xlat
addr16
shl
and
lods
mov
mov
sahf
pop
mov
lods
out
cli
jb
inc
xchg
out
loopne
lds
cltd
inc
push
add
sub
or
jo
sub
and
std
adc
movsl
notl
clc
push
sub
jae
jle
adc
and
pop
test
and
adc
rolb
adc
test
xchg
adc
push
push
or
add
sub
aas
mov
mov
mov
mov
cmc
push
mov
mov
and
jae
incb
pop
mov
ret
push
xchg
mov
or
jae
iret
push
jmp
mov
sub
outsl
mov
scas
in
loop
inc
adc
mov
mov
mov
mov
lea
mov
ljmp
addr16
or
pop
adc
out
push
mov
aad
and
les
sub
repz
stos
add
lret
jo
sahf
jae
test
jne
cwtl
push
jae,pt
vmovaps
cmpsl
inc
sbb
fsubrs
push
and
into
jae
or
pop
and
sub
mov
inc
add
stc
xor
mov
popf
aaa
xlat
lahf
add
sub
in
inc
inc
scas
sahf
shl
enter
jbe
inc
mov
loopne
rcrb
pop
jae
push
xchg
aaa
dec
and
repz
data16
je
jbe
sahf
aad
mov
addr16
xchg
daa
lds
popl
pop
lret
mov
lahf
cmc
mov
sahf
or
dec
std
jno
in
adcl
stc
fimuls
cmc
rcl
add
ljmp
testb
jae
fmuls
mov
sub
js
lods
stc
jb
cmp
push
out
add
add
xchg
aam
jae
rcrl
sbb
das
inc
js
arpl
xchg
cmpl
sbb
cmp
jae
test
push
inc
daa
test
mov
or
std
cmp
sbb
jmp
imul
adc
repnz
orb
mov
cmpsb
sahf
add
repz
int3
add
call
mov
jl
insl
jg
sub
mov
lods
arpl
dec
pop
or
cmp
lock
jae
outsb
inc
arpl
adc
imul
mov
xchg
in
std
adcb
insl
ljmp
or
insl
fabs
adc
cmp
cwtl
test
inc
aad
cmpsb
leave
arpl
test
mov
outsb
sbb
pop
and
mov
mov
xchg
rclb
dec
fcom
mov
add
inc
lods
jnp
iret
push
jg
insl
lea
pop
or
sub
cmp
outsl
mov
outsb
xor
es
jae
push
je
mov
bound
loop
icebp
rol
sbb
jae
sbb
fildl
enter
fists
addr16
jae
in
sarb
fnsave
cs
mov
mov
lcall
rcrl
clc
pop
rclb
js
sbb
mov
ja
xchg
leave
insl
ss
pop
in
xor
adc
inc
xchg
mov
dec
dec
loop
mov
lock
cs
lods
mov
insl
mov
sub
fstl
push
push
into
pusha
pop
sbb
dec
xor
adc
and
mov
mov
push
in
rcrl
dec
insb
data16
aas
js
fldenv
repz
mov
int3
adc
pop
andl
xor
fsubs
dec
fwait
push
imul
sbb
test
inc
jl
sahf
cltd
adc
fsubrl
pop
ret
outsl
sub
mov
jb
outsl
adc
push
xor
lods
lods
cmp
adc
ret
inc
pop
popa
icebp
mov
mov
pop
hlt
cmp
shrb
dec
repnz
lock
in
clc
xchg
scas
iret
dec
ss
dec
lcall
sub
xchg
mov
add
pop
or
stc
lret
jecxz
in
scas
loopne
xor
inc
xchg
add
cmc
in
rorb
push
and
xchg
push
xchg
pop
out
add
jp
insl
push
test
jge
adc
mov
xchg
into
mov
call
cmp
jne
js
jl
sub
fidivs
scas
push
dec
inc
mov
outsl
jnp
in
dec
pop
loopne
fs
mov
pushf
push
aam
mov
fs
insb
pop
sti
and
fnstsw
dec
dec
pop
add
cmp
cmpsb
andl
dec
jl
dec
call
lcall
fs
shr
into
popf
pop
sti
add
aad
pop
mov
std
pop
xchg
out
repz
jb
pop
popa
sti
sbb
aaa
sbb
hlt
jle
inc
jae
pop
fisubl
jae
mov
fnsave
in
jle
pop
cmp
cmp
hlt
inc
inc
ret
in
and
orl
xor
and
and
jae
aaa
rclb
dec
add
dec
mov
or
or
jae
mov
jg
xor
jae
adc
iret
jae
in
sub
sbbb
lods
push
scas
jae
xchg
mov
inc
push
push
cmpsl
sbb
pop
dec
jle
pop
pop
pop
inc
push
xorl
or
jmp
mov
cmp
inc
das
jae
stos
stos
cmc
popa
or
mov
push
aam
jae
fdivr
jne
xlat
sub
loope
daa
test
leave
sbb
lock
cmpsb
jae
xchg
shr
fiaddl
jae
fdivrl
mov
cmpsb
lcall
pop
jae
xorl
ja
sbbl
clc
popf
jg
bound
adc
add
mull
mov
pop
pop
jae
aas
ja
test
jae
iret
pop
sbb
xchg
out
loope
add
movsb
sbb
es
cmp
mov
jo
inc
sbb
xchg
or
insl
xchg
jle
mov
mov
je
stos
mov
rcrl
fwait
divb
inc
xor
mov
aaa
xchg
jae
mov
das
repnz
int
insb
sub
jne
jb
out
lds
or
sbb
cmp
add
jle
fwait
daa
jae
fsubrs
fdivl
inc
iret
jb
leave
outsl
aad
ljmp
fwait
inc
push
in
and
sbb
pop
popa
test
fsts
and
mov
jae
mov
xchg
jge
add
jbe
jae
xchg
jp
cmc
add
xor
sarb
orb
and
pushl
push
stc
xor
xchg
or
or
xor
pop
andl
lea
mov
add
push
pop
jo
cld
js
pop
sahf
roll
xchg
div
sub
jg
mov
jae
or
push
sbb
js
xor
inc
dec
repz
mov
fimull
add
jb
repnz
dec
loope
repz
daa
xor
mov
jae
sbb
jae
xchg
xchg
push
inc
jne
popa
add
jbe
pop
mov
inc
aas
jae
mov
mov
daa
je
mov
jae
mov
push
dec
inc
and
sbb
and
insb
lods
jl
pop
mov
imull
mov
xor
pop
scas
cmpsl
inc
pop
clc
or
insb
mov
leave
shlb
repnz
pop
fxch
jns
adc
fsubrl
mov
push
pop
add
cltd
sub
pop
jae
orl
mov
jae
pop
mov
iret
push
je
inc
cld
xor
mov
sub
jae
and
loop
adc
lods
pop
cmp
loope
ja
daa
cmp
jae
dec
adc
rolb
mov
ja
push
in
loope
push
jo
pop
pop
es
in
jl
push
push
jae
pop
jge
xor
leave
or
add
adc
xchg
cwtl
sub
mov
or
idivb
push
xchg
and
jae
add
dec
idivb
add
sbb
jae
decl
pop
push
cmc
sbb
popf
sub
in
push
je
out
push
xchg
push
mov
xchg
jnp
es
or
jo
jae
cltd
xor
imul
push
add
pop
jg
cmpsb
pop
jae
add
lds
jo
sbb
outsl
lret
xchg
push
dec
lods
mov
xchg
sub
push
inc
mov
fnstenv
in
jl
jae
push
lds
pop
fisttpl
xchg
fadds
jae
iret
fisubrs
cli
jns
insl
sub
jmp
scas
jae
jle
test
mov
cltd
ret
out
jae
pop
mov
pop
pop
fisttpl
or
and
scas
mov
xchg
xchg
aam
pop
jbe
jae
int
push
mov
repz
mov
sbb
adcl
aad
dec
jle
jae
cmp
stc
movsl
cmpsl
and
or
xor
push
xor
shrl
pop
ret
aad
push
in
insl
daa
mov
xchg
sahf
jae
gs
pop
push
jp
insl
and
inc
jo
xchg
pop
jae
loope
cmp
mov
push
dec
enter
insl
shrl
or
mov
pop
outsb
add
sub
jl
jg
jge
subl
pop
xchg
clc
jl
cld
mov
insb
hlt
jbe
popf
test
dec
mov
scas
rcrl
jae
out
push
lcall
ret
loope
dec
cmpsb
mov
jae
mov
insl
repnz
jae
sbbb
push
add
add
and
bound
jecxz
fs
jae
out
ret
orl
pop
mov
jo
mov
lret
les
jp
add
iret
pushf
aad
xor
adc
jae
jnp
xchg
lea
pop
jae
adc
je,pt
xor
cmp
and
into
in
sub
cmp
insl
mov
xchg
jbe
mov
jp
jae
sti
adc
cltd
add
sbb
mov
jbe
cmp
sub
inc
jae
jg
xchg
popf
add
xor
jae
mov
add
neg
pextrw
jae
sahf
ret
xchg
adc
lds
xchg
jp
xchg
out
jae
repz
test
jle
lds
jae
mov
inc
pop
jnp
loope
lock
or
stc
fdivl
fwait
lahf
fdivs
ss
shrb
scas
stos
jae
js
stc
cmpsb
xchg
mov
jae
mov
inc
add
popa
loope
aam
test
inc
cmpsl
ja
pop
mov
lret
cld
js
mov
pushf
clc
sbb
sbbb
fiaddl
divb
cmp
and
mov
cld
ror
fstenv
jnp
repz
xchg
aad
stos
shrb
cmpsb
cmp
cld
and
add
hlt
inc
or
ret
scas
loop
jae
sub
pop
cmpxchg
push
imul
mov
or
pop
stos
test
jle
pop
pop
cwtl
jecxz
lds
jne
cmpsb
stc
fidivrs
sbb
mov
jg
pop
xor
sub
mov
insl
and
ja
adc
scas
repz
jg
in
loop
or
int3
push
mov
mov
push
and
dec
lret
jo
aam
imul
shrb
jmp
shlb
testb
xor
push
jbe
jmp
jp
repz
push
push
jae
clc
or
xchg
ja
jae
aas
pop
rolb
add
in
and
jnp
popa
hlt
push
test
push
mov
jne
and
testl
inc
xchg
popa
fidivrl
mov
cmpsl
jle
jae
mov
cmc
sub
jnp
gs
jl
hlt
insb
lret
push
xor
test
insl
je
cmp
xchg
mov
mov
sbb
mov
push
and
fnsetpm(287
or
call
jg
in
cmc
sahf
insb
mov
inc
and
test
imul
xchg
test
jo
mov
mov
addb
insb
adcb
les
push
nop
sbb
dec
xchg
loopne
jae
js
scas
ljmp
cltd
fldenv
mov
jmp
leave
jl
push
sub
inc
aas
adc
insl
push
rclb
andl
std
jae
fcmove
dec
stos
loop
xchg
mov
push
test
jae
xchg
popf
and
loop
sahf
icebp
lcall
mov
leave
in
pop
outsl
add
add
stos
cmc
inc
outsl
movsl
mov
insb
pop
hlt
scas
push
cmp
dec
les
push
fld
jae
mov
jns
loopne
test
inc
cmp
into
aad
lea
hlt
js
lcall
mov
dec
nop
inc
jae
std
push
clc
lods
hlt
jl
cs
push
call
mov
jmp
aaa
loope
lret
pop
mov
mov
inc
rol
push
insb
mov
loopne
jae
xlat
sbb
outsl
pop
hlt
sub
js
out
adc
mov
mov
or
mov
or
jae
js
cltd
and
icebp
shrb
adcl
jmp
mov
jmp
stos
pop
insb
xor
ret
fcoml
in
jae
daa
aas
or
cmpsl
lahf
xchg
pushl
xor
push
rcrl
and
sub
sub
adc
adc
das
mov
dec
insl
adc
mov
mov
mov
subb
pop
mov
mov
repnz
insl
sbb
add
mov
ss
out
roll
adc
icebp
shr
unpckhps
mov
push
jns
fldl
cwtl
ficomps
add
idivl
pop
pop
jae
pop
mov
repnz
mov
adc
je
mov
dec
jne
ljmp
add
jae
mov
clc
mov
fisubrs
jae
pop
es
shlb
push
mov
jecxz
xchg
add
je
push
bound
insb
in
test
mov
dec
xor
leave
sete
inc
icebp
jmp
popf
roll
out
andb
mov
jae
and
push
iret
cwtl
pop
pop
jae
cmpsl
cltd
sub
insb
jo
lcall
or
fidivl
sub
fidivrs
jae
adc
test
fsubrl
fidivs
mov
jae
jbe
pop
adc
add
add
leave
mov
icebp
ja
scas
xchg
dec
popa
pop
inc
sahf
inc
lods
mov
in
sarl
jae
sub
in
insl
enter
add
insb
and
jae
adc
mov
lahf
adc
sbb
cltd
pop
pop
pop
insl
jb
mov
cmp
xchg
arpl
jae
and
out
test
lcall
mov
mov
hlt
and
jae
pop
xchg
fdivrl
dec
cmc
ss
jae
dec
rolb
push
popa
xor
pushf
clc
cmp
es
inc
icebp
repz
push
fisttps
fisubs
jae
sbb
loopne
sub
repnz
inc
ds
mov
xchg
mov
mov
or
ja
push
push
push
jmp
test
je
jae
dec
mov
cmc
into
jae
inc
dec
mov
cmp
inc
shrl
loop
push
xchg
jg
jae,pn
stc
cmpsb
rcr
xchg
mov
or
daa
icebp
push
jne
xchg
lcall
jbe
adc
sub
loope
pop
fidivl
aas
lret
adc
lret
and
push
xlat
out
test
jae
std
pop
aas
fidivrs
lods
jl
cltd
icebp
mov
movsl
and
jae
sbbl
pop
xor
cltd
pushf
xor
call
insl
mov
into
cli
lret
push
in
or
outsl
clc
add
out
jae
dec
xor
jecxz
and
pop
pop
jle
push
das
jbe
rol
sub
hlt
xchg
aad
popf
pop
inc
pop
inc
jne
das
je
jae
push
aaa
shl
mov
jae
stc
mov
iret
std
ret
or
sbb
lcall
cmpsb
cltd
js
mov
xor
mov
jo
jge
scas
jne
popf
jbe
lea
push
clc
sahf
xor
test
stc
insb
data16
sbb
daa
imul
sub
popa
rcrb
testl
adc
lahf
out
dec
jns
call
aad
jae
push
repnz
leave
testl
jg
inc
pop
jmp
in
inc
mov
jae
adc
aad
mov
fcmovnb
inc
xor
loope
out
jmp
mov
lea
int
out
jae
inc
test
push
jae
je
inc
jnp
xor
insb
push
iret
jb
sbb
scas
fcomp
sbb
in
call
adc
mov
inc
mov
shl
scas
in
xchg
mov
and
insb
mov
pop
out
jbe
rorl
cmpsl
repz
pop
pop
cmc
adc
nopl
adc
jae
shl
add
push
mov
add
pushl
xchg
mov
adcl
pop
icebp
es
jo
push
bnd
scas
leave
mov
js
jmp
lret
push
jne
sbb
push
cmp
rcrb
aas
xchg
or
mov
leave
rclb
jnp
insl
xchg
ret
cwtl
mov
clc
insb
pop
sub
adc
cmpsl
or
in
subb
mov
inc
adc
pop
inc
push
in
aas
scas
idivl
popa
jnp
inc
push
xor
mov
jae
push
ret
cmp
popa
xor
inc
cltd
add
sub
mov
xchg
test
jle
mov
sbb
shrb
xor
out
leave
push
dec
xlat
cmp
iret
cld
loope
jp
test
das
sbbb
jae
or
out
mov
es
lcall
dec
std
mov
cmp
cli
jp
jae
cmp
push
lret
je
test
jle
or
and
pop
cs
test
or
fbstp
shrl
outsl
lret
pushf
scas
jne
minps
push
cmp
out
xchg
mov
xor
jae
cwtl
lcall
mov
jg
cmp
shr
divl
icebp
aad
add
fisubl
aam
mov
leave
inc
ja
pop
xor
xor
inc
mov
add
clc
push
cmp
fs
push
cmp
push
sub
aas
jecxz
lret
lds
pop
pop
jmp
add
jmp
sub
repz
mov
jae
test
nop
jnp
mov
xchg
orl
add
fcmovne
out
jae
sbb
pop
iret
jae
push
xchg
and
test
mov
dec
mov
or
cld
into
cmp
xor
xchg
jae
xchg
cmpb
pop
das
jae
mov
rcrb
popf
js
adcb
jmp
repz
sbb
jae
pusha
xor
cmp
xor
and
ss
pop
mov
pop
sub
fisttpll
or
lods
inc
stc
jae
mov
xchg
ja
je
xor
in
outsb
sahf
cltd
daa
nop
lock
popf
insl
mov
adc
mov
inc
mov
test
push
or
mov
add
xchg
xchg
cwtl
cmp
mov
push
std
jae
aas
aad
mov
mov
ljmp
xor
insl
test
inc
iret
int
lea
xchg
push
jmp
cmp
xor
push
mov
push
mov
sti
imul
mov
insb
and
lcall
jae
mov
mov
jae
lahf
or
aam
loop
jg
rcr
jp
icebp
adc
push
cli
jae
pop
pop
out
jae
ss
aad
push
adc
sub
clc
xor
pop
sbb
add
mov
sub
adcl
or
push
sub
shl
loop
jae
sbb
dec
pop
sub
mov
jae
dec
cmpsb
jp
sbb
test
movsl
les
or
and
test
leave
push
mov
cmp
sub
jae
sbb
mov
fwait
mov
insl
push
jo
jg
lahf
pop
sub
or
shll
push
pop
mov
mov
add
push
jns
shlb
or
mov
idiv
pushf
jae
xchg
testb
adc
inc
mov
dec
sahf
sub
movsl
push
inc
aad
sarb
jae
adc
lods
sub
shll
repnz
gs
hlt
sub
pop
jae
push
mov
aas
stc
jb
add
outsl
sub
popa
mov
flds
into
test
fwait
xchg
jecxz
jae
jl
aaa
iret
xorb
xor
sahf
or
xor
jge
sarl
cs
sar
pop
pop
bound
inc
fwait
push
or
jecxz
test
lds
mov
shlb
out
sahf
iret
pop
cmc
jae
loope
push
inc
fidivrs
popf
mov
xchg
jae
lea
adc
add
adc
jae
mov
ror
cwtl
and
les
jg
cli
jae
out
js
lcall
ja
ret
es
mov
lds
xchg
repnz
inc
xor
shll
sbb
pushf
pop
out
bound
jl
shrl
sbb
inc
add
push
pop
into
in
jae
ss
movsb
test
aad
jae
and
xor
ret
lahf
pop
jne
xchg
add
scas
lcall
ds
repnz
sub
xchg
jae
inc
pusha
sub
daa
and
adc
xchg
mov
test
lods
mov
mov
div
int3
xchg
pop
jae
leave
pop
push
cmp
xor
je
mov
sbb
xor
int
fst
fldt
jnp
aaa
adc
sbbl
or
add
adc
xchg
sub
mov
in
add
pop
popf
sub
pop
jne
sbb
fwait
stc
loope
nop
xor
inc
cmp
jae
jnp
adc
dec
jo
repnz
ret
lea
test
mov
cltd
hlt
iret
dec
push
in
mov
mov
jae
mov
sahf
jae
mov
xchg
loop
nop
movb
mov
mov
add
mov
test
mov
inc
lods
testb
jmp
cmp
jae
mov
add
cli
nop
pusha
insb
sbb
jmp
iret
lcall
push
jge
aad
jae
pop
mov
arpl
jae
imul
pop
and
inc
push
mov
fildll
sbb
inc
xor
dec
mov
shld
enter
xor
sub
inc
jbe
jae
cmpsl
xor
push
scas
mov
lea
mov
mov
jmp
addl
loop
jne
rol
es
jae
daa
push
adc
jp
dec
insl
jge
cli
sub
fwait
jae
shll
in
daa
jae
jmp
mov
push
mov
or
mov
leave
jmp
mov
jae
dec
adc
lahf
jae
jnp
loope
fs
jae
fidivs
push
fchs
xchg
in
test
or
pop
push
test
sub
mov
lds
dec
pop
aaa
jae
sbb
int
aam
adc
js
jb
xchg
movl
jo
insb
sub
repz
pop
dec
jae
test
test
sub
mov
jae
fstl
aam
mov
insb
mov
loope
mov
call
push
or
aaa
insb
pop
dec
out
mov
lock
js
jle
mov
add
xor
lods
sub
jae
or
in
jae
test
hlt
add
rcrb
fldcw
adc
shlb
dec
jg
scas
je
jmp
fstl
mov
push
lods
adc
push
testb
xchg
aaa
xor
ja
mov
das
jae
push
fisubrs
enter
fwait
repz
imul
jbe
dec
repz
in
push
xchg
aad
cwtl
push
push
cmp
xor
mov
add
xchg
pop
push
jae
dec
push
pop
cmpsb
xor
jae
clc
into
mov
jae
adc
aad
popa
xor
incl
bnd
adc
nop
icebp
scas
pop
or
xchg
outsb
out
daa
pop
notl
cmp
mov
lea
mov
scas
test
sbb
adcl
movsl
inc
pop
lcall
lods
loopne
jmp
add
pop
push
push
mov
mov
sub
dec
adcl
jae
les
jo
sbb
lcall
pop
xlat
pop
push
pop
jg
mov
leave
xchg
sub
mov
mov
lahf
bound
add
xor
fwait
loop
jb
jae
pop
jecxz
mov
dec
lods
jae
pop
sub
cmp
jae
pop
fcomps
jae
jne
std
lea
mov
clc
pop
cmp
jle
push
rcrb
loopne
leave
repz
pusha
and
sbb
test
cmp
push
lock
jae
jnp
hlt
push
das
adc
mov
cmp
jae
jbe
cmc
sub
mov
jle
je
mov
int3
mov
mov
rcll
fists
push
clc
jo
hlt
test
aam
push
mov
jae
xor
dec
cmp
ror
mov
movb
xchg
dec
insb
jae
lahf
and
cmc
into
test
dec
fists
jae
xchg
movb
adc
sahf
lods
jae
out
icebp
test
cmp
clc
lea
in
jmp
lods
inc
cmp
dec
shl
mov
in
inc
pop
adcl
cmpsl
scas
shl
clc
movsl
pop
push
add
add
lods
jle
jae
in
daa
jg
ficoml
popf
nop
lock
cmpsb
jae
jl
pop
leave
push
inc
pop
jae
jbe
loope
js
adc
cli
inc
iret
xor
and
push
lds
insl
mov
inc
rol
add
div
jb
adc
int3
or
mov
js
lods
push
outsl
enter
adc
std
mov
mov
loope
jae
js
sub
cmp
cmp
icebp
adc
or
movsl
fldcw
rcll
adc
lcall
add
dec
lahf
cmp
fwait
shll
xchg
ret
shl
add
xchg
mov
bound
or
les
iret
jae
rclb
xchg
mov
ja
iret
leave
mov
xchg
ret
mov
mov
mov
movl
jp
mov
add
push
lret
jmp
rorl
in
lcall
or
in
lds
jae
and
lret
shr
fidivs
jae
les
sbb
incl
xchg
add
fwait
mov
jnp
mov
add
jp
testb
or
cmp
add
xchg
push
into
push
ret
jbe
xor
or
decl
jle
cwtl
les
add
jae
mov
jae
jb
icebp
nop
mov
jge
in
sahf
mov
repnz
cmp
aad
cmp
je
sti
inc
ja
add
dec
data16
cwtl
xchg
push
insl
mov
lea
or
cmp
sbb
stos
and
fwait
adc
lcall
jae
inc
test
test
xorl
xor
sbb
sbb
lret
lods
push
jp
push
jo
sub
pop
bound
out
pop
pop
clc
les
cmp
pop
sub
inc
cmc
add
mov
lock
mov
jae
and
inc
aaa
inc
dec
insl
mov
mov
in
inc
repnz
rorl
in
jns
xchg
pop
jae
test
xor
xchg
imul
jo
stc
hlt
lods
js
jne
out
inc
or
lret
jnp
mov
jmp
rclb
lods
iret
sbb
pop
pusha
adc
xchg
push
push
sub
mov
sbb
test
pop
jns
popa
negl
xchg
dec
popa
inc
dec
orl
xchg
cmp
cld
popf
mov
bound
push
cmp
xchg
clc
in
and
jmp
sub
jae
out
lret
inc
inc
mov
pop
inc
iret
filds
loopne
cmp
xchg
and
lock
jae
adc
sbb
jne
cmp
cltd
inc
cli
mov
jl
push
mov
inc
pop
or
mov
xor
or
pop
mov
cmp
add
jae
or
jge
test
loop
push
pop
mov
lcall
mov
aas
in
int
jmp
and
imul
lods
push
test
sbb
aaa
clc
insl
mov
mov
lret
dec
in
push
add
movsb
and
addl
sub
cmp
mov
inc
mov
lcall
adc
and
mov
jp
cmp
mov
jae
mov
mov
jecxz
inc
imul
dec
pop
push
imul
xchg
mov
iret
sub
or
movb
jae
lea
inc
in
inc
and
dec
sub
push
push
cmp
jmp
push
or
aas
lods
adc
pop
dec
adcb
jp
mov
jmp
dec
push
dec
popa
dec
push
pop
mov
and
add
js
jae
inc
jmp
mov
add
into
aas
testb
mov
mov
cmc
mov
adc
or
mov
mov
in
cltd
xchg
cwtl
nop
pop
and
sub
xor
inc
xchg
push
fsubl
out
or
mov
xchg
xchg
xchg
jae
loopne
mov
jae
hlt
add
xlat
adc
daa
popa
cmp
out
mov
lcall
xor
push
sahf
add
daa
lea
push
repz
cmpsl
stos
xor
dec
jmp
aad
ret
icebp
or
js
pop
mov
sub
dec
sar
sub
jp
daa
jb
jae
nop
es
mov
cmp
mov
cmp
jae
inc
testl
sub
add
push
adc
aaa
add
insb
push
add
inc
inc
imul
enter
imul
push
xor
inc
add
inc
lea
fisubrl
push
int3
cltd
popl
out
jg
mov
leave
ret
or
mov
adc
add
and
pop
es
sub
mov
xchg
mov
scas
jae
push
push
mov
dec
rolb
test
dec
cmpsl
mov
je
cmpsl
scas
gs
add
insb
cli
aam
inc
jae
or
pop
je
xor
int3
repz
daa
popa
movsb
lds
leave
dec
inc
xchg
push
jp
je
lret
cmc
inc
insb
mov
out
hlt
inc
adc
pop
pushf
in
adc
sub
inc
pop
adc
insl
iret
fistpl
jmp
mov
xchg
jae
jge
or
int
cmpsb
lret
jns
dec
in
mov
pop
fiadds
rdtsc
jae
push
jl
mov
jae
mov
xchg
mov
sarb
lods
add
inc
jae
inc
add
mov
or
add
ja
rcll
jae
and
sbb
leave
adc
in
insb
xlat
pop
add
push
xchg
mov
xor
stc
movb
pop
call
jae
orl
mov
mov
pop
ja
jae
add
sbb
jae
dec
jne
jg
out
jae
test
pop
cmp
mov
test
shufps
fdivr
xbegin
aaa
cld
mov
jae
add
mov
pop
lds
mov
and
mov
rol
jae
jo
aaa
mov
loop
testl
or
push
popa
cs
adc
or
xchg
xor
aad
push
cltd
push
jg
in
xchg
leave
sti
ss
int
or
bnd
icebp
mov
incl
cli
test
cltd
mov
ret
add
xchg
adcb
imul
popf
jae
push
int
xchg
pop
mov
sbb
in
mov
cmp
lret
pop
sbb
jae
mov
mov
es
imul
loop
lret
les
cmp
sub
fwait
aam
lret
add
xchg
xor
jne
pusha
xchg
dec
enter
das
imul
jmp
mov
push
icebp
xorb
push
imul
scas
mov
mov
cmp
cmp
mov
imul
mov
rcr
push
ret
mov
aad
pop
inc
pop
push
scas
push
xchg
sub
mov
loope
jecxz
add
call
inc
xchg
stc
arpl
pop
adc
orl
shrl
test
push
xlat
movsl
dec
dec
jecxz
sbb
dec
xchg
arpl
int
fs
shll
mov
loopne
pop
jbe
push
and
dec
fbld
pop
iret
stc
xor
sbb
into
push
arpl
loopne
dec
out
fs
dec
shrb
bnd
jo
in
rorl
call
fdivs
outsl
inc
imul
test
cs
mov
sub
pop
imul
pop
hlt
ficoms
pop
cli
mov
insl
mov
and
xchg
xchg
inc
cmp
dec
cmp
add
addr16
adc
jl
mov
pop
divl
adc
fcompl
lds
pop
mov
pop
int3
adc
arpl
inc
into
loopne
sub
sbb
out
jmp
popf
sbb
xchg
insb
xor
packssdw
pop
add
aas
mov
fildll
mov
push
sub
push
adc
dec
or
push
fmull
dec
or
add
push
add
dec
cld
and
fdivr
dec
cli
sub
in
lock
repnz
in
and
fsubr
dec
ljmp
loop
fsubl
dec
fisubrl
aam
rcrb
dec
int3
and
fmul
dec
lret
in
rcrb
mov
dec
mov
mov
mov
lods
and
fsubrl
in
mov
and
fcompl
in
nop
pop
xchg
dec
mov
fmull
in
sbbb
jl
jle
js
jp
je
jbe
pop
jb
insb
and
fsubrl
push
fs
pusha
pop
bound
and
fcompl
pop
sub
push
push
pop
push
dec
push
and
fimull
or
jmp
push
mov
sbb
imul
insl
lcall
pop
xchg
arpl
arpl
mov
push
lods
sub
mov
jge
movsb
mov
imul
xchg
andb
into
in
jle
in
js
in
jp
jmp
mov
imul
imul
bound
in
outsb
ret
repnz
push
in
fs
in
test
aad
into
movsb
bound
imul
mov
dec
mov
dec
out
ds
push
sbb
pop
movsl
push
mov
insl
xor
insl
xchg
dec
insl
movb
inc
imul
adc
dec
jbe
dec
cmpsb
cmp
dec
push
aaa
dec
xor
jge
test
lea
in
sub
sub
daa
fsubrp
and
in
and
sbb
jmp
rcrl
repz
adc
jp
movsb
adc
orps
or
or
add
add
insb
outsb
std
insb
lcall
sti
insb
push
cmc
insb
dec
imull
pop
pop
mov
stc
in
insb
out
insb
push
jmp
push
in
dec
out
add
mov
dec
lret
bound
addb
popf
into
lods
push
icebp
cs
shrb
imul
dec
fdivrs
in
inc
cli
stc
push
pop
mov
cs
movb
arpl
repz
ja
es
or
movsb
insl
or
fs
and
pop
pushf
nop
adc
imul
push
push
cs
adc
enter
jl
jae
or
lods
sub
mov
in
mov
sub
xchg
test
pop
je
adc
mov
inc
dec
push
fidivl
mov
sahf
mov
lea
dec
jae
or
jne
or
movsb
cmp
test
jnp
or
inc
dec
frstor
jae
mov
enter
std
adc
pop
inc
fwait
add
outsl
arpl
stos
loop
xor
sbb
iret
js
mov
out
fwait
jae
push
or
std
cmp
lret
aaa
mov
pushf
enter
call
lret
sub
xchg
mov
jbe
lret
mov
fbstp
jae
xchg
jns
daa
dec
pushf
jae
cmp
fisubs
and
mov
push
jns
fldl2t
xchg
repnz
insb
das
pop
mov
insl
and
mov
xchg
adc
xchg
into
ss
adc
roll
pop
jae
cmp
sub
roll
idivb
jae
scas
xchg
out
push
js
mov
or
jae
mov
lods
xchg
lea
in
ret
fwait
hlt
jae
push
clc
mov
adc
mov
mov
daa
pop
xor
mov
jle
popf
sub
ja
js
xchg
xchg
pop
or
roll
or
rcrb
movsb
leave
pop
cwtl
sbb
pusha
push
sbbb
outsb
lea
pop
xchg
mov
adc
lret
ja
jbe
test
mov
and
xchg
mov
pop
mov
in
inc
jb
mov
loope
xchg
imul
cld
add
add
inc
push
movb
jae
in
jns
aas
mov
mov
das
stos
jne
push
inc
xor
push
jmp
aas
pop
addr16
add
mov
adc
or
or
jg
out
jo
dec
and
imul
sbb
call
xchg
add
daa
jmp
movsb
movsl
jae
xor
cmpsl
dec
repnz
cld
shll
and
mov
loopne
leave
lods
xchg
stos
adc
cmp
lret
dec
iret
jb
xlat
mov
push
jno
jo
insb
test
out
sti
iret
jae
push
pop
sub
daa
in
outsl
mov
lods
lahf
adc
jae
mov
mov
push
cmp
jge
jb
mov
push
pop
pop
test
push
push
and
jae
cltd
jnp
pop
add
mov
mov
test
icebp
push
xor
xorb
xchg
cmp
test
addr16
movsb
test
add
dec
cmpsl
or
lods
cmp
xchg
sub
stc
mov
ja
fisttps
xchg
cltd
aas
jo
rclb
adc
imull
xchg
fwait
mov
inc
fcomps
jae
push
fstpt
cwtl
sub
xchg
add
pop
cltd
lds
mov
cld
xchg
aad
sub
lods
xlat
inc
mov
stos
leave
jbe
mov
or
popa
cmpsl
aad
pop
xor
adc
and
les
pop
insl
aas
jg
ret
mov
out
sub
add
cltd
orb
add
mov
push
iret
adc
add
pop
cmp
setp
daa
sbb
pusha
xor
es
ret
stos
in
lret
sti
xor
nop
cmp
test
popa
push
mov
jbe
loope
jae
dec
ret
add
jae
sahf
adc
push
and
jbe
mov
xorl
jge
int
push
xchg
add
jnp
sub
in
dec
fnstsw
mov
cwtl
ja
and
adc
xchg
scas
lods
jmp
adc
mov
scas
sahf
inc
aas
das
xchg
pusha
sub
xor
xchg
insl
test
pushf
insl
dec
jns
inc
push
mov
int
hlt
mov
das
in
es
xor
push
sahf
push
push
stc
iret
push
xchg
int
inc
adc
mov
fwait
or
icebp
mov
mov
outsl
leave
and
lcall
jae
push
jnp
xchg
bound
sarl
repz
inc
dec
mov
fidivrs
ror
sbb
mov
cld
into
push
scas
xchg
fisttps
jae
addr16
sub
jae
mov
fdecstp
imul
pop
adc
les
sub
xchg
xchg
out
dec
sarl
xor
je
or
inc
in
inc
clc
mov
jg
jmp
jae
inc
hlt
adc
stos
and
pop
int
xchg
stc
insb
sub
push
lock
cmpsl
mov
cmp
mov
xchg
cli
in
fwait
arpl
cmp
lods
sbb
repz
ja
xor
mov
inc
jae
lds
ret
bnd
or
das
lcall
subb
popf
dec
subl
fdivl
cmp
idivb
push
scas
or
cmp
jae
or
ret
push
pusha
xlat
cmpsb
jae
adc
lods
jae
cmp
inc
daa
in
sbb
add
outsl
dec
push
xchg
inc
adc
incl
mov
add
cmpsl
dec
lahf
repz
jmp
mov
jae
xor
lods
ficoml
lods
or
jae
fstpt
xchg
sbbb
mov
and
add
movsb
decl
test
fs
int
mov
lcall
mov
iret
jge
push
je
add
sbb
push
mov
stos
loop
xchg
jne
mov
jae
xor
orb
or
mov
call
inc
insl
mov
jns
ret
lock
lcall
mov
in
push
push
clc
jo
and
xor
ljmp
pop
js
fnstcw
rolb
fdivrs
cmp
mov
push
scas
stos
divl
sti
jae
loope
repnz
pushf
stc
pop
notb
mov
mov
dec
loope
fists
repz
repnz
insb
mov
popf
pop
dec
iret
add
cmp
mov
bound
in
xlat
sahf
pushf
jo
js
jae
lock
popf
jge
jg
jp
jbe
jae
jne
cmp
pop
push
xchg
xor
jb
enter
test
stos
xorb
bound
js
shll
dec
jne
das
rol
cmc
jle
jae
push
jmp
loope
ss
out
js
sub
arpl
mov
pop
imul
or
mov
imul
out
lods
and
xchg
sub
call
dec
leave
stc
or
sub
aaa
push
jnp
mov
test
popa
leave
xchg
mov
arpl
mov
jmp
test
push
push
mov
mov
cltd
lea
leave
cwtl
adc
sar
jae
xorb
imull
test
pop
xchg
mov
jae
xor
repnz
in
cmpsb
mov
test
roll
out
mov
mov
push
mov
lea
sbb
shll
mov
mov
jno
jbe
scas
negb
scas
jnp
jae
loop
fists
leave
or
push
push
imul
negl
lahf
test
push
sub
lret
jnp
add
sar
lret
and
lds
aas
pop
xchg
jne
int
dec
cld
push
sub
jae
std
adc
jo
jg
xchg
push
int
inc
jae
addl
push
xor
xor
xchg
sub
andl
adc
sbb
mov
out
imul
mov
mov
sahf
lea
xor
cs
in
scas
sbb
xchg
mov
arpl
sbbb
popf
add
mov
dec
scas
mov
sbb
xorb
jns
dec
rcrl
aaa
adc
int3
dec
sub
xchg
insl
push
pop
xchg
fidivl
mov
lods
inc
scas
adc
lret
push
mov
inc
adc
and
repnz
jbe
ret
in
in
mov
imul
and
pop
push
add
call
std
sarb
jae
idivl
into
adcb
lods
jns
ja
jae
sub
movsl
sbbb
sahf
mulb
cmp
negl
lahf
gs
xor
add
fs
jbe
xor
push
mov
std
ja
add
sub
dec
jne
or
pusha
dec
iret
add
xchg
daa
cs
insb
rol
mov
inc
inc
xchg
lcall
icebp
pushf
jae
rcrl
clc
or
insb
bound
leave
dec
xchg
pop
jae
lahf
sub
jae
dec
mov
mov
mov
aam
cbtw
lods
lcall
xchg
or
jbe
sub
and
cmpsl
and
test
nop
cmp
jle
clc
cmc
jle
popa
xchg
lahf
repnz
test
mov
dec
addr16
mov
rorl
filds
fwait
inc
lret
jae
mov
jge
push
adc
pop
adc
jp
adc
dec
das
aas
xchg
mov
out
imul
repz
sahf
scas
mov
sar
enter
clc
ficoms
mov
adc
das
lock
cmp
outsl
jnp
xor
cld
jae
fstpt
and
inc
lea
loope
lret
fcmovbe
mov
or
iret
or
fidivrs
jp
xor
test
in
mov
xlat
adc
xor
xor
xchg
jae
xchg
mov
adc
xorl
ljmp
sahf
pop
add
lret
ret
sbb
rolb
push
dec
mov
lret
pusha
sub
dec
popf
imul
iret
idiv
psubb
jo
mov
mov
xchg
or
leave
pushf
pop
jae
jmp
cmpsl
jns
shll
dec
fldl
aas
mov
pop
jge
cmc
std
xchg
test
fcmovu
jae
call
jg
jae
add
inc
pop
je
jae
test
jns
and
rcr
add
mov
mov
cmpb
jl
xchg
sbb
adc
enter
push
mov
lea
into
xor
jae
sub
stc
test
cmpsl
xchg
sbb
sbb
xlat
jae
mov
out
test
jbe
jae
ret
jmp
xorw
jne
lret
imul
sbb
jae
push
xor
jae
sbb
clc
jne
std
mov
jae
cmpsl
rolb
jae
add
and
xor
scas
sti
popa
add
or
test
push
fidivrs
jae
scas
sbb
cld
and
out
inc
xchg
lret
xchg
fnsave
mov
inc
jbe
mov
adc
loope
out
hlt
cmpsl
pop
mov
jno
fnstcw
xchg
sub
orl
dec
popf
jmp
fnstenv
mov
pop
mov
pop
mov
cmc
imul
lods
enter
or
xchg
mov
aas
jbe
lods
cli
and
out
inc
jae
cmp
sbb
flds
inc
jae
ja
enter
shlb
aaa
fistpl
orb
mov
rcrl
mov
inc
mov
insl
push
mov
xchg
bnd
jns
mov
fisubl
dec
jae
das
inc
sti
je
xchg
add
ja
push
add
lds
push
cmp
lret
push
imul
test
jae
adc
add
aaa
lock
test
jnp
mov
sti
push
clc
push
sbb
stc
loop
pusha
mov
xchg
sbb
iret
fcomps
jae
xor
dec
pop
jb
cltd
jo
jae
fcmovnbe
pop
sbb
cmp
jae
or
inc
jae
test
mov
out
inc
jae
shrb
lock
addr16
jae
out
inc
fisubrs
mov
lret
dec
jp
in
cs
int
and
add
ss
insb
addr16
lock
aaa
jae
int
adc
pop
adc
push
loope
jb
ret
enter
cmp
loop
rolb
mov
cmc
inc
outsl
cmp
outsl
lods
jmp
icebp
imul
xchg
das
mov
mov
stc
mov
mov
adc
mov
sahf
lds
fisttps
cwtl
inc
jb
es
repnz
cld
fs
sbb
mov
inc
jae
cld
jle
xlat
mov
jns
mov
mov
scas
cmpsb
lods
jae,pt
xchg
xchg
xchg
mov
andb
les
aad
xchg
jbe
cmc
hlt
int
cld
mov
xchg
jae
pop
mov
mov
pushf
aaa
xor
jg
lods
popa
test
inc
mov
jle
cmc
adc
add
mov
add
ss
das
or
push
ja
push
sbb
ret
dec
adc
pop
xor
mov
push
jge
jns
loopne,pn
mov
xor
jae
icebp
subl
and
xchg
sbb
lret
nop
sub
lcall
imul
xor
mov
sub
inc
add
jb
push
dec
aam
ljmp
cmp
out
sahf
push
sbb
push
loop
insb
lret
roll
xor
in
jno
or
pop
sarl
jno
ja
jbe
jne
add
mov
insb
popa
pop
adc
ret
lret
pop
jae
out
sbb
push
pop
xchg
or
jae
mov
clc
add
push
xchg
je
movsl
popa
cmc
xchg
stc
cmpb
mov
lret
aas
movl
and
xchg
out
enter
lahf
sbb
les
sub
or
enter
stos
fiaddl
jbe
mov
jae
dec
aam
adc
mov
rep
pop
push
cwtl
push
inc
cmc
sti
ja
mov
stos
and
jae
or
fildll
sub
notb
ja
daa
inc
outsl
sti
xchg
inc
js
shlb
mov
jae
jne
test
pop
cmp
fistpll
repnz
jae
pop
jmp
les
mov
xor
je
adc
sub
repnz
cltd
insb
xchg
in
xchg
mov
xchg
aaa
inc
ret
add
mov
hlt
scas
jmp
mov
jecxz
jge
jo
rorb
sbb
loop
xor
inc
push
ret
les
sub
mov
sti
push
xor
jb
sub
rolb
lods
test
jne
mov
data16
out
repnz
out
insb
mov
fdivrs
add
jae
cwtl
mov
sbb
push
lcall
outsb
rorb
aad
stos
jp
outsl
push
cmp
cmpsl
pop
mov
shll
mov
sub
jnp
pop
shlb
mov
push
inc
les
jle
popf
movsl
jb
ja
cmovle
scas
shll
outsl
xor
xor
dec
sub
push
aaa
ret
jp
or
andb
jae
call
movsb
push
xor
das
jecxz
popa
test
mov
inc
jae
pop
inc
out
sub
movsb
adc
jecxz
repz
outsl
jo
cmpsb
test
add
lock
lret
insl
clc
and
in
sbb
lods
jmp
mov
out
xor
xchg
lock
and
mov
fisubrs
ljmp
jmp
rol
inc
inc
push
pop
jp
adc
pushf
jns
inc
cltd
jp
popa
pop
movsb
popf
adc
or
addl
fnstenv
popa
shl
or
and
xor
mov
add
jae
jle
push
fstpl
mov
loope
mov
adc
sbbb
and
xchg
ret
shl
loope
mov
inc
fldt
js
sahf
xlat
lds
popf
pop
rcrl
mov
add
mov
mov
dec
pop
leave
daa
and
jae
jo
mov
jge
jl
mov
mov
mov
nop
stc
xor
in
jae
jo
xor
mov
loope
cmp
jae
ffree
and
mov
sbbb
sbb
repz
xor
push
fistps
xlat
cmp
cmp
divb
test
adc
outsl
adc
pusha
in
repnz
cmc
cmpsl
imul
pop
enter
jge
mov
loope
mov
ret
jae
mov
rorl
out
add
push
rorl
daa
fiadds
shll
fst
xchg
lret
popa
into
call
dec
rclb
sub
sub
fidivl
fbld
popa
cmpsl
sbb
loopne
xor
sahf
daa
insb
test
mov
insl
pop
into
sub
hlt
jnp
leave
jae
jp
cmpsl
test
out
dec
mov
je
lahf
out
addl
push
jne
popf
dec
pop
or
inc
cmpsl
shll
pushf
jge
mov
mov
pop
cmpsl
mov
imul
fistps
test
comiss
cwtl
cmp
testb
aaa
mov
psubd
mov
bound
scas
inc
pop
and
test
lods
mov
jae
add
lret
inc
add
xchg
stc
jae
mov
aas
scas
movsb
sbb
add
jae
or
adc
inc
shlb
insl
icebp
xorl
loope
mov
lods
xorb
jnp
xor
repnz
cld
xorb
sub
jb
repz
mov
push
pavgb
je
in
mov
inc
xor
and
leave
push
add
adc
pop
popa
and
xor
sbb
rolb
mov
cmp
sub
xchg
mov
jae
imulb
pop
leave
xchg
lea
sti
adc
mov
ja
jae
sahf
mov
rorb
jae
icebp
addr16
lret
xchg
push
popa
loopne
lds
iret
xchg
mov
push
test
shlb
pusha
sbb
mov
mov
sub
std
testb
mov
jnp
jp
sub
adc
jecxz
les
mov
xchg
jae
pop
xchg
fwait
loop
lahf
or
inc
add
addl
inc
jae
mov
mov
cmp
lock
add
sub
jg
add
add
cmpsl
add
clc
mov
roll
ja
icebp
fidivl
xor
popf
or
xlat
fmul
les
lcall
sbb
clc
sub
mov
xor
aas
xchg
jae
push
test
jo
dec
ljmp
sbb
in
adc
adc
push
inc
pop
fidivrs
ret
mov
mov
or
enter
pop
sbbl
jo
jae
mov
mull
inc
add
movsl
jge
fildll
ja
push
pop
sub
into
inc
push
loope
cmp
inc
cmpl
xchg
mov
rcrl
jge
je
xchg
jae
cmp
adc
lahf
add
mov
icebp
push
mov
dec
dec
insb
cmp
rclb
in
movsl
mov
loope
mov
ja
insb
bound
adc
fidivl
rcr
mov
mov
jp
pop
mov
jbe
stc
pop
xchg
int
sahf
pop
jae
or
mov
aad
pop
or
hlt
sbb
ds
push
xchg
push
xor
popf
xchg
test
icebp
fdivr
lret
dec
loopne
sbb
rorb
or
dec
fucomip
xchg
icebp
int3
lea
xchg
mov
bound
data16
push
xchg
icebp
mov
mov
fbld
fsubs
dec
ret
cli
adc
out
cmp
jle
cmpsl
cmpsl
jae
pop
pop
and
push
cmp
jae
inc
adc
jnp
jl
or
jge
test
data16
jne
mov
mov
or
cmp
lret
btrl
pusha
addr16
fimull
ljmp
ds
adc
sbb
cmp
pushl
roll
push
xor
pop
lret
pop
sbbl
lods
inc
mov
insl
mov
pop
pop
jae
mov
mov
inc
movsb
adc
push
iret
imulb
lret
daa
mov
mov
mov
mov
sahf
sarl
pop
or
pop
sbb
call
lahf
jne
lods
cmpsb
js
jae
ja
pop
mov
inc
cmpsl
sub
add
aad
push
mov
cmc
sbb
sub
movsb
cmp
shl
adc
int
aas
shll
mov
xor
lcall
cld
mov
dec
test
cmp
scas
popf
jae
push
add
jecxz
jmp
out
faddl
pop
jae
jp
movsl
les
adc
push
iret
or
adc
inc
fisubl
cmp
lret
push
pop
xchg
xchg
gs
stos
or
int3
repz
shlb
jno
xor
in
mov
sub
add
jnp
clc
loop
dec
roll
push
mov
adc
movsl
push
ds
jae
xchg
test
scas
or
inc
ret
fldl
sub
jae
adc
jg
sbb
add
outsb
push
out
shlb
adc
add
and
orb
insl
add
xor
pop
jae
mov
clc
cmp
popf
cmp
fstl
mov
inc
mov
xchg
jg
pop
sub
aad
mov
mov
mov
notl
push
jns
std
adc
cwtl
or
and
push
jge
adc
loop
pop
popf
insl
pop
pop
pop
pop
sarb
fldl
dec
aad
adc
adc
mov
dec
addb
dec
mov
jbe
adcl
roll
xor
movsl
pushf
inc
xchg
aad
lods
popf
and
jae
dec
repnz
adc
das
imul
sbb
jae
out
adc
test
push
cmpsl
fmull
inc
addr16
inc
cltd
pusha
icebp
rolb
out
addr16
pop
jae
xor
call
adc
add
push
mov
jae
xchg
add
test
bound
fs
xor
pop
cmpsb
lret
fsubl
xor
sbb
push
mov
clc
jae
cmp
mov
movb
lods
rclb
mov
and
or
mov
stos
sti
jae
loope
pop
sbb
jmp
jae
dec
adc
pushf
mov
ficomps
sub
loopne
sbb
jl
xchg
aas
mov
jae
rorb
inc
aad
clc
inc
cmp
test
pop
stc
mov
xor
adc
inc
pop
test
pop
repz
jecxz
fidivl
aaa
jne
jle
pop
aam
sahf
or
in
mov
out
jae
aaa
lea
fs
rol
jb
mov
shll
mov
adc
inc
adc
sbb
xchg
push
mov
ret
jnp
repnz
jae
xchg
inc
loopne
fildl
cmpsb
jae
fnsave
sub
adc
rcr
sbb
ss
jns
sub
lahf
mov
jg
mov
adc
jecxz
xor
pop
sub
jmp
jge
push
test
jns
pushl
or
dec
les
stos
mov
insl
out
xor
jnp
stos
sbb
pushf
lods
jae
xchg
rcrb
adc
idiv
test
shlb
jae
sti
loope
lret
cmp
je
sarl
in
add
inc
sahf
scas
mov
bound
loop
pop
xor
cmp
push
or
push
sbb
hlt
inc
dec
loop
push
aas
jae
push
mov
dec
shrl
pop
jae
cmp
jp
and
sahf
lods
cmp
xchg
lock
xchg
hlt
int
lahf
jae
je
mov
sub
jns
inc
adc
xchg
into
es
push
clc
jae
sbb
ret
mov
stc
xchg
out
mov
mov
shlb
loopne
pop
sbb
xchg
scas
lcall
xchg
cmpb
dec
jae
xor
inc
jae
movsl
daa
push
cmp
sub
jae
xchg
xchg
pop
in
jne
dec
mov
push
jae
jge
sti
test
add
jnp
add
inc
xor
jne
add
rorb
rcr
mov
aaa
xor
and
dec
mov
lock
xchg
add
lahf
adc
xor
stc
in
std
jle
dec
mov
push
lock
imull
loop
xchg
xchg
loope
jo
cmp
mov
mulb
xor
scas
inc
jae
lea
mov
adc
insb
pop
lahf
sar
mov
sarl
test
aaa
cmp
xor
movsb
mov
sahf
pop
push
sbb
mov
shrb
xchg
call
adc
repz
aas
xlat
fcompl
push
jae
mov
mov
mov
mov
rolb
ret
adc
push
xchg
cld
jae
std
cmpsl
popf
jp
sti
scas
fwait
and
adc
cmp
jge
mov
pop
loope
out
test
xchg
pop
inc
xlat
stos
sub
fildl
cmc
cmp
rcrl
mov
insb
push
jne
mov
sbb
popf
push
scas
out
mov
adc
mov
jae
or
jbe
shr
dec
and
jmp
movsl
mov
add
mov
iret
pushl
mov
xor
cmp
insl
push
add
sub
inc
stos
andb
sbb
repz
test
in
push
repz
scas
jne
aam
mov
mov
mov
psrad
test
and
jecxz
lods
jae
cwtl
das
jo
ret
icebp
ljmp
pop
push
in
pop
mov
lea
jae
push
and
scas
into
dec
jae
or
cld
mov
mov
dec
sub
jae
int
lcall
ljmp
mull
sbbb
xchg
ret
mov
adc
mov
mov
pop
cli
test
lgs
outsb
xchg
aaa
cmp
add
ja
outsb
jg
or
bound
aam
insb
call
mov
jae
js
push
xchg
pop
or
roll
xchg
in
cmpl
adc
testb
aas
outsb
inc
dec
push
lret
xchg
push
jp
mov
mov
cli
jb
push
mov
inc
xor
stos
lcall
aad
jae
out
adc
pusha
cli
push
mov
adc
push
or
jae
mov
xor
xchg
add
mov
sbb
aaa
ds
jae
pusha
shr
push
sub
add
lahf
adc
aad
stos
loop
jl
pop
inc
imul
add
mov
mov
in
sbb
aad
dec
mov
xchg
add
popa
xor
sbb
mov
repz
hlt
cmp
cmp
jb
outsl
inc
test
cmc
jae
dec
or
mov
mov
out
push
test
mov
jge
sbb
nop
pop
aaa
jae
add
cmpb
bound
bndldx
mov
in
aas
inc
pop
inc
mov
jb
or
add
xchg
lock
pop
xlat
cmp
jno
insb
cmpsl
push
hlt
xchg
dec
xchg
subl
sarl
sub
jbe
jae
cmpsl
in
mov
js
and
cmpsb
and
xor
sub
aaa
mov
das
push
mov
inc
insl
mov
pop
mov
fiaddl
mov
lods
in
out
xor
lea
lahf
out
inc
fstpl
dec
popf
dec
es
jae
push
xor
imul
aam
cmp
add
or
jp
xor
popa
rclb
out
add
lcall
xchg
nop
mov
cmpsl
or
lahf
mov
roll
push
aad
mov
add
xchg
icebp
sbb
jecxz
in
mov
xchg
out
popl
aaa
sti
or
fld
cli
adc
push
lods
and
cmp
dec
cmpsl
and
clc
stc
lret
cwtl
lods
test
or
mov
jae
mov
mov
dec
jnp
push
stc
xor
aas
and
jae
or
enter
mov
xchg
movb
daa
dec
dec
push
fimuls
dec
adc
bnd
cltd
cmpsl
mov
mov
adc
sbb
loope
rcrb
mov
mov
insb
dec
dec
mov
jl
mov
xchg
mov
sarl
push
mov
jae
adc
and
imul
pop
inc
and
push
pop
cwtl
jbe
insb
jp
addb
sbb
or
cmpsl
pop
aam
jmp
test
and
xchg
fdivs
test
jmp
insl
hlt
daa
adc
xchg
push
xlat
lods
xchg
lods
cmp
or
les
in
push
push
jecxz
jae
sbb
stc
jae
mov
add
hlt
xchg
mov
shll
in
xchg
or
mov
xchg
mov
add
rcrb
loope
mov
jns
jbe
sbb
ror
xchg
iret
jae
xchg
les
adc
pop
push
scas
xlat
std
jle
ret
mov
pusha
dec
pop
jecxz
fists
xor
mov
mov
cli
push
lods
push
xchg
xchg
mov
dec
mov
lahf
inc
loope
shl
lcall
pop
xchg
jae
nop
loop
sub
mov
icebp
fwait
fwait
pop
leave
mov
push
or
xor
into
inc
or
addb
mov
fst
pushf
clc
mov
jns
mov
test
roll
in
add
in
dec
ret
xchg
cmp
std
xchg
lcall
das
jae
add
cmp
cmpsl
jns
js
daa
pushf
pop
loop
lea
icebp
jb
adc
mov
fldenv
loop
pop
lahf
xchg
push
dec
sbbl
dec
leave
test
mov
inc
pop
cmc
lahf
icebp
ja
repz
mov
call
pop
loopne
push
and
jb
repnz
mov
ja
jae
iret
mov
inc
inc
insb
frstor
imul
lea
daa
mov
mov
ss
outsb
cmp
notl
jo
jae
popf
sub
loope
fidivs
inc
fnstenv
jns
cmpb
lock
cltd
shlb
cmp
dec
and
mov
cmpsl
push
sub
aad
lods
lods
iret
jae
push
test
sti
adcl
loopne
addl
mul
mov
mov
sti
fdivl
nop
xor
lods
xchg
mov
mov
cltd
sub
adc
jbe
leave
jmp
jecxz
inc
dec
inc
sahf
push
dec
in
xor
std
jae
rolb
test
ljmp
jae
mov
popf
pop
test
pushf
jl
jae
jge
js
cmpsl
jb
clc
xchg
lcall
jnp
add
or
nop
push
stc
mov
sbb
je
adc
les
sbbb
sub
std
lock
mov
mov
push
pop
mov
jnp
jae
pop
in
lahf
add
dec
insl
lcall
push
mov
mov
mov
outsl
cwtl
xchg
jmp
mov
and
lods
inc
aaa
repz
push
pop
loop
jae
pusha
lds
jae
adcb
xor
xor
jmp
lret
inc
jns
add
cli
and
repnz
mov
xchg
jge
jbe
cmpsb
cmpsl
cwtl
fnsave
decb
adc
add
jae
jbe
inc
lds
xchg
mov
or
cmpb
insl
and
in
mov
inc
mov
ror
test
js
push
adc
mov
clc
lea
test
cltd
loop
popa
jns
mov
icebp
push
xorl
pop
cmp
xor
shl
repz
stc
ffreep
jae
cmpsb
or
jae
fucom
pop
push
inc
pop
into
adc
add
jae
cs
or
cmp
push
sbb
mov
jae
inc
sbb
ret
or
ret
jmp
cmp
idivl
xor
sub
iret
mov
lcall
adc
xchg
sbb
jae
out
xchg
or
aas
mov
or
mov
push
fistps
insb
enter
sub
add
lods
adc
or
in
aam
ja
jns
adc
jae
sbb
or
pop
add
jae
lret
add
mov
xlat
into
adc
inc
push
jae
cwtl
sub
cmp
test
shll
and
aam
push
mull
mov
adc
loop
push
test
stos
lret
icebp
jbe
lock
adc
or
cwtl
jae
pop
cmp
lds
test
les
inc
adc
nop
pop
notb
insl
xchg
in
aas
loope
clc
mov
scas
xchg
pop
and
loop
mov
xlat
xchg
sbb
nop
cmp
add
es
jae
sbb
in
jae
mov
cltd
std
rcl
jae
inc
fwait
inc
stos
mov
push
jae
nop
lcall
push
ret
or
mov
jae
mov
jae
mov
mov
jle
push
loop
jge
dec
cli
imul
jmp
mov
fwait
push
jle
jae
nop
fmul
jg
mov
std
inc
push
jbe
inc
insb
and
scas
js
jae
movb
add
das
fstpl
mov
fucomip
adc
pop
jns
cltd
imul
pop
jae
adc
stc
fisttpl
jae
sub
sbb
outsb
and
sbb
lahf
adc
xor
bound
jo
pop
push
les
jo
cmp
je
add
pop
test
push
push
inc
in
sbbb
pop
cmpsb
popa
mov
idivb
dec
imul
dec
add
jae
stos
mov
mov
inc
into
mov
mov
adc
jle
push
mov
aam
loop
cmp
test
in
xchg
nop
cmp
cmc
in
repz
daa
test
mov
fstps
icebp
adc
mov
cmp
les
bound
iret
testb
fnstcw
adc
inc
cmp
jae
cmp
fistl
push
out
mov
je
outsl
xlat
xchg
dec
ja
jl
adcl
mov
jne
fst
dec
fdivrs
outsb
js
inc
ret
mov
popa
sahf
cmpsb
xchg
ljmp
mov
xlat
loopne
dec
jle
dec
push
mov
nop
mov
daa
xchg
sarb
rcl
push
push
mov
test
into
js
or
mov
stos
xor
adc
imul
cmp
enter
ror
jecxz
inc
inc
adc
jb
add
lods
mov
mov
xchg
sahf
cld
push
add
mov
in
insl
push
xchg
movsl
mov
push
mov
cmp
mov
jae
or
cmp
jb
jae
adc
pop
shll
xchg
je
mov
lods
mov
jae
mov
or
mov
inc
call
adc
lock
icebp
imul
jecxz
repnz
pop
and
xchg
sti
jae
loope
popf
jns
push
and
mov
and
lods
dec
cmc
dec
shlb
adc
jmp
out
cwtl
jne
sbb
sahf
cmp
mov
jae
xor
int3
xchg
incb
xchg
sub
add
hlt
mov
jb
pop
or
mov
test
data16
jae
xchg
icebp
test
sahf
add
pop
fidivl
jecxz
je
cmc
insl
aas
orl
cmpsl
das
jmp
fdivl
stos
and
pop
test
notb
mov
and
in
pop
std
sub
mov
or
cwtl
jecxz
test
ja
sahf
pop
xchg
xor
outsl
sub
pop
adc
sar
adc
ja
aaa
fsub
xchg
pop
and
lods
out
sub
add
mov
das
outsl
arpl
mov
outsl
insb
dec
popf
mov
in
xor
insl
mov
adc
or
add
subl
pop
and
outsb
repz
jg
xlat
pop
inc
dec
lock
repnz
and
mov
mov
xchg
push
jg
or
addr16
ret
push
jecxz
stos
inc
icebp
popf
out
fwait
or
push
or
rcrl
adc
jns
les
les
int3
sti
outsl
push
dec
xor
outsl
decb
incb
stos
cld
test
xor
ljmp
add
dec
jg
add
stos
push
test
xor
ljmp
or
int
push
vprotb
or
mov
push
xchg
mov
push
xchg
pop
or
rcrl
jo
clc
xor
dec
jo
sub
rcrb
stos
sub
movsl
dec
sti
rorb
and
inc
enter
test
push
insl
ss
arpl
sbb
inc
popf
stos
push
jne
popf
jg
add
push
jecxz
xor
rorb
push
inc
push
popf
sbb
das
cmpsl
inc
jmp
test
xor
in
or
out
add
add
in
lock
xlat
add
lahf
lahf
jecxz
mov
loopne
loopne
stc
jecxz
mov
cld
stc
jecxz
mov
cld
stc
jecxz
mov
cld
stc
jecxz
mov
cld
stc
jecxz
mov
cld
stc
jecxz
mov
cld
stc
jecxz
mov
cld
stc
jecxz
mov
cld
stc
jecxz
mov
cld
stc
iret
test
mov
mov
sub
inc
inc
loopne
add
loopne
fdivs
mov
lahf
js
das
mov
cmp
push
xchg
sub
cli
sti
movsl
and
mov
popf
adc
cmp
pop
fadd
int
lock
xchg
sub
mov
push
sbb
andb
xor
push
orb
fcoms
dec
push
sti
fcoms
dec
push
sti
fcoms
dec
push
sti
fcoms
dec
push
sti
fcoms
dec
push
sti
fcoms
dec
push
sti
fcoms
dec
push
sti
fcoms
dec
push
sti
fsubs
and
rorb
dec
pop
das
pop
insl
and
les
mov
je
inc
sbb
jecxz
ret
cmp
pop
mov
jle
cmp
mov
jle
cmp
mov
jle
cmp
mov
jle
cmp
mov
jle
cmp
mov
jle
cmp
mov
jle
cmp
mov
jle
cmp
mov
jle
cmp
mov
mov
xor
or
clc
stos
dec
lret
std
hlt
fwait
adc
movl
pop
and
sub
in
mov
push
inc
out
lahf
leave
dec
test
xor
push
mov
mov
or
jb
movsb
or
pop
add
and
int
cmp
bound
add
ljmp
fs
insl
lock
cmp
bound
inc
fnstcw
stos
stos
adc
mov
push
leave
mov
push
sub
daa
ljmp
jle
xor
adc
stos
lock
sbb
iret
jle
jecxz
jbe
add
and
jg
or
in
popf
test
push
popf
jg
push
xor
mov
jb
lock
roll
es
inc
aas
mov
test
or
test
adc
cmc
dec
jp
out
mov
inc
add
call
ljmp
sub
dec
js
sub
ja
add
or
femms
loope
push
and
sub
cli
jecxz
js
fwait
mov
shrl
fwait
jbe
arpl
js
fwait
mov
mov
mov
or
rcl
push
lret
call
cld
or
lahf
mov
xchg
jecxz
jbe
mov
lahf
rorb
add
sub
mov
xchg
jecxz
jbe
add
fs
push
or
int
cmp
bound
pop
jns
stc
or
sub
js
bound
inc
dec
nop
shlb
lock
adc
pop
cwtl
fwait
rep
add
jg
sbb
and
roll
sar
sbb
dec
xor
push
and
fisubrs
adc
jno
imul
arpl
jns
rorb
push
arpl
jmp
xor
mov
outsl
push
push
jmp
loope
icebp
lds
lea
int
scas
pop
xor
push
in
mov
pop
loop
mov
and
std
inc
lahf
ja
xor
xlat
movsb
xor
jl
xchg
repnz
movsl
dec
mov
ret
in
pop
stc
or
sti
shl
jne
lret
daa
dec
push
ds
cmc
repnz
outsl
ja
and
test
fwait
and
and
sub
or
push
ss
cmp
add
pop
insl
inc
adc
push
pusha
fcomps
addr16
inc
dec
xchg
pop
outsl
xchg
and
fcoml
in
rcrb
dec
int3
and
fmul
dec
lret
in
rcrb
mov
dec
mov
mov
mov
lods
and
fsubrl
in
mov
and
fcompl
in
xchg
pop
mov
and
fmull
in
sbbb
jle
js
jp
je
jbe
jo
pop
insb
dec
outsb
and
fsubrl
sub
pusha
bound
dec
pop
and
fcompl
pop
sub
push
push
pop
push
dec
dec
and
fmull
dec
sub
inc
inc
pop
inc
dec
cmp
dec
cmp
xor
xor
and
fsubrl
dec
sub
and
and
and
fcompl
dec
sbb
adc
adc
and
fmull
dec
or
add
add
and
fdivr
dec
sti
sub
in
icebp
pop
repz
in
and
fsubr
dec
jmp
in
out
pop
jecxz
frstor
dec
fldt
aad
xlat
rcrl
dec
int
iret
fmul
dec
lret
sub
in
rcrl
mov
dec
mov
mov
mov
lods
and
fsubrl
in
mov
and
fcompl
dec
mov
arpl
dec
pushf
mov
cmpsl
sub
test
xchg
subb
sub
jl
xor
ja
insb
lods
je
fidivs
or
cmp
gs
outsb
xchg
dec
mov
insl
sbb
insl
jle
insl
scas
pusha
push
mov
dec
ds
dec
insl
pop
push
popf
pop
cmc
pop
insl
and
into
push
dec
jp
dec
cmpsb
push
dec
rclb
decb
sub
push
dec
push
sbbl
insl
add
insl
pop
inc
insl
mov
loop
push
or
dec
imul
xor
xor
sub
jle
dec
test
fisubl
and
and
sbb
pop
insl
stc
sbb
sbb
adc
mov
dec
imul
insl
rorl
out
or
add
push
insl
nop
add
std
insl
in
insl
adc
insl
cmp
insl
addr16
outsl
lea
mov
outsl
jecxz
outsl
or
imul
sub
jmp
in
out
and
sub
jecxz
jns
mov
outsl
neg
outsl
sbb
sub
xlat
sub
shrl
shrl
int
ror
sub
leave
sub
lret
sub
lds
sub
shrl
xchg
mov
mov
xchg
pop
pop
mov
arpl
mov
inc
lods
arpl
push
mov
add
popa
mov
mov
and
sbbb
xchg
insb
ss
insb
addr16
ret
into
pop
mov
arpl
jbe
dec
cmpsb
xchg
ds
cmpl
xchg
dec
pop
lds
cmc
jnp
dec
jne
mov
mov
mov
in
outsl
jge
lods
imul
cmp
insb
arpl
lods
lcall
jp
inc
icebp
pop
xchg
addl
bound
add
mov
gs
popa
pop
aam
mov
jns
insb
dec
addr16
dec
inc
into
jae
add
movb
arpl
push
les
in
popa
call
or
ljmp
xchg
imul
outsl
enter
repz
jae
pop
dec
out
inc
pop
loopne
push
push
pushf
aad
xor
lods
add
mov
mov
ss
xchg
or
mov
enter
jae
xchg
stc
add
dec
nop
test
frstor
adc
jae
mov
inc
xchg
push
ja
or
xor
aam
push
imul
xchg
or
jae
dec
cltd
push
and
mov
mov
cmpsl
stos
jae
repnz
cmp
or
add
imul
jecxz
and
lds
push
xchg
lahf
jae
mov
scas
push
pop
adc
js
sub
je
imul
shrb
js
inc
clc
add
pop
dec
insl
xchg
jno
sarb
insb
add
imul
jb
mov
std
sub
jae
sbb
test
xor
push
add
xchg
pop
gs
xor
xchg
es
jae
fiadds
cwtl
or
adc
mov
mov
pop
repz
push
dec
sbb
scas
lcall
pusha
mov
pop
popf
lret
jae
dec
sahf
and
jae
mov
test
mov
adc
inc
int
rcrb
lahf
repz
cmp
stc
iret
mov
call
insb
pusha
jmp
push
gs
pop
int
sub
ss
jae
jmp
jae
arpl
dec
stos
dec
push
mov
roll
subb
mov
sarl
inc
jb
ret
pop
fs
lahf
lods
mov
pop
enter
je
inc
push
pop
jnp
loopne
stos
cltd
or
xor
add
push
or
jne
mov
push
sbb
xor
add
add
push
xorl
loop
mov
fidivl
clc
ret
sarb
xchg
aad
insl
cmp
pop
lods
jnp
add
jae
mov
pop
test
sub
mov
jae
cmpsl
or
daa
stos
hlt
ffreep
mov
pop
cmpb
jae
cmpsl
sahf
xchg
xchg
pop
inc
jae
mov
dec
or
test
in
mov
mov
popa
je
push
push
popf
jae
adcb
jmp
out
icebp
jg
add
push
inc
lock
or
lods
stos
xor
jbe
adc
std
xchg
scas
push
sub
mov
ljmp
sub
daa
jae
jecxz
repnz
jae
and
jne
mov
rclb
mov
jae
adc
loop
pop
jl
outsl
lods
roll
mov
jns
jae
xchg
scas
inc
test
cli
fisubrl
mov
xchg
lcall
xchg
cmp
dec
ficoml
mov
rorl
jne
insb
or
leave
xchg
or
pop
cli
mov
push
pop
clc
loope
jmp
sahf
popa
xor
hlt
mov
filds
mov
int
push
lock
popa
pop
sbb
out
adcl
cmp
rolb
lods
ss
mov
xor
mov
fildll
arpl
loopne
call
add
dec
test
sub
sbb
insb
ss
add
mov
test
insb
idiv
add
andb
mov
push
and
cmp
fwait
loop
popa
mov
aad
in
lds
push
testl
stos
cmp
pop
jae
lret
enter
jae
and
aaa
xor
ss
bound
sub
inc
dec
jb
cmp
mov
jo
jae
cmp
cmp
test
sbb
inc
jae
and
dec
jae
fcmovnu
addl
rcrb
jmp
es
out
or
mov
stos
xchg
sbb
sub
lock
stos
add
or
mov
bound
adc
or
aam
or
insl
jg
hlt
int
or
ljmp
divl
repnz
icebp
ret
test
lret
rclb
and
jae
or
pop
mov
dec
imul
jae
test
scas
rclb
jnp
mov
add
pop
push
lret
inc
movsl
add
mov
xchg
inc
mov
scas
into
push
bound
jae
mov
sbb
jns
cwtl
lret
in
das
pushf
dec
add
ja
jl
leave
repnz
jne
jb
repnz
mov
sub
sbb
or
fdivrp
mov
jbe
ror
cli
cmp
and
addr16
rcrb
iret
rep
xor
loopne
push
int3
mov
repz
mov
pop
pop
lds
adc
add
pop
jae
cltd
ja
jnp
jbe
push
test
push
orb
jae
loop
shrl
ss
dec
popf
sbb
lahf
and
jg
sti
push
jb
sub
mov
sub
jnp
jge
ss
loope
mov
and
icebp
test
xchg
icebp
sub
mov
into
jmp
movsb
adc
ja
dec
mov
repnz
insb
jb
aam
pop
pop
adc
test
repz
std
shll
push
out
pop
pop
lods
dec
jae
jge
xor
movsl
cli
push
les
pop
shrl
aas
loope
cmp
mov
ret
imull
test
add
iret
mov
inc
test
test
jae
ret
sarl
xchg
cmp
cmp
les
mov
jne
push
stos
enter
fstpt
sbb
stos
addr16
aad
loopne
pop
loop
mov
jae
in
std
inc
shll
popf
and
cltd
jae
mov
pop
loope
shll
jnp
jl
mov
and
mov
rclb
insl
push
xchg
stos
jns
push
dec
cmpl
push
pushf
jo
jae
adcb
inc
lods
and
adc
jno
push
inc
rorl
mov
int3
cmpsl
jnp
xor
xor
xchg
push
xor
mov
ror
jnp
lock
mov
cmp
scas
aaa
adc
and
addr16
insl
icebp
dec
lock
cli
sub
or
js
mov
icebp
mov
imul
pushf
je
mov
test
repz
mov
loope
jbe
fnsave
mov
repnz
mov
ljmp
fs
jae
sahf
mov
xor
insl
jge
mov
xor
add
popa
aad
outsl
mov
mov
push
ljmp
push
xor
outsb
movsl
leave
iret
dec
dec
push
cmp
jae
sarl
jae
loope
and
ja
cmpsl
pop
pop
icebp
movsb
pop
mov
and
inc
mov
fadd
sbb
xchg
add
jae
sub
mov
repnz
jle
jecxz
cmp
aaa
imul
xor
lods
and
jbe
jge
xchg
ds
inc
insb
push
scas
das
aad
mov
pop
xchg
and
xchg
fcomip
dec
popa
inc
rolb
cwtl
sahf
cltd
mov
mov
testl
test
fcmove
xchg
jecxz
dec
pop
cwtl
divl
dec
xchg
and
sahf
scas
sbb
ret
cmp
jp
xchg
dec
mov
sub
shlb
das
pop
mov
xchg
sbb
adc
pop
push
mov
xchg
adc
inc
popa
clc
jns
out
mov
test
mov
push
pushl
jmp
mov
mov
arpl
test
adc
push
cmp
jle
adc
xor
push
jne
mov
dec
out
imul
sbb
stos
mov
xlat
mov
je
setnp
mov
xchg
pop
jmp
adc
mov
jo
in
add
repz
mov
in
rol
jae
and
and
pop
adc
pop
fidivl
mov
jmp
jge
sbb
lcall
dec
pop
fcoms
push
pop
mov
movsb
pushf
pop
sti
sub
adc
sub
fdivrs
cmp
addr16
aad
clc
mov
or
arpl
dec
mov
mov
ss
repz
jmp
jae
orl
shll
mov
aam
ret
xor
pop
jbe
mov
dec
xchg
xor
clc
inc
orb
notl
xchg
or
sub
ret
ds
push
or
or
sbb
xor
cmp
shlb
je
aam
sub
lahf
test
lock
push
in
lret
leave
and
mov
cmp
jbe
insl
test
mov
pusha
lods
cmp
jae
aad
ficompl
cwtl
arpl
push
jmp
pop
xor
mov
in
adc
into
repnz
mov
jecxz
sbb
xchg
rcl
or
jae
dec
xor
xchg
jg
and
pop
inc
je
mov
mov
mov
imul
and
adc
lds
push
pop
mov
jae
inc
leave
jb
lea
pushf
jae
xchg
push
sbb
sbb
cmp
inc
aaa
push
adcb
inc
or
mov
jae
push
jle
xor
ss
push
sub
testl
mov
aaa
push
sbb
es
sub
push
loope
dec
mov
mov
push
repz
movsb
inc
daa
in
jae
fisttps
fldenv
std
popa
notl
dec
mov
mov
mov
mov
insb
fidivl
mov
xorl
push
and
addr16
xchg
mov
and
cmpsl
or
add
xchg
shrb
lods
call
movsl
xor
testb
xchg
dec
mov
lahf
jge
push
add
ljmp
push
push
xor
sahf
pop
jae
stos
pop
aad
out
mov
je
mov
test
es
push
jae
push
mov
jle
cmpsl
add
dec
les
mov
jae
and
mov
divl
xchg
jae
mov
xchg
leave
popa
testb
aaa
xchg
jae
xchg
add
jae
mov
sbb
nop
inc
cli
pop
jb
cmp
ret
cmp
shll
xchg
shlb
xlat
jae
leave
popf
sbb
and
and
insb
jp
rorl
aad
nop
and
and
pop
jb
jae
pop
lods
add
cmp
fs
bound
popa
jae
pusha
xchg
cwtl
xorb
adc
lea
pop
pop
pop
lock
jne
adc
sub
jp
adc
data16
fistpl
and
pop
movsb
bswap
fs
jae
lock
sub
lods
sbb
out
mov
push
sub
xchg
xchg
and
ja
jae
repnz
mov
ss
lcall
lock
popf
mov
and
lds
jae
movsl
jecxz
lahf
add
jne
aam
and
daa
jmp
push
shll
pusha
jmp
pop
js
jge
mov
in
data16
cmp
add
int3
add
cmpsl
dec
mov
aad
jae
out
sbb
xchg
dec
mov
push
aas
adc
cmp
lahf
push
bound
jo
stc
stos
pusha
leave
insl
pop
and
aam
lock
mov
bnd
jmp
mov
and
in
mov
rcll
cltd
mov
adc
push
jae
loopne
repnz
sbb
outsl
jbe
mov
lea
shll
push
cmpsl
jl
test
icebp
movsl
mov
popf
sti
loope
movsb
xchg
test
fmuls
cld
loope
jae
lds
dec
ljmp
push
mov
test
inc
cmp
jae
das
adc
jmp
mov
popa
cmpsb
and
xor
sub
lahf
int3
xor
inc
es
or
rolb
loop
movsl
or
and
jb
dec
mov
scas
pushf
insl
cmp
jg
das
sub
lea
orl
in
int3
lds
pop
fdivrs
jno
push
sbb
jae
loop
ficomps
dec
lds
push
movsl
je
in
sub
and
repnz
pop
jg
xchg
add
orl
mov
jae
lret
mov
push
jg
and
fs
outsl
sub
mov
jnp
fstps
into
and
stos
mov
push
mov
hlt
mov
aam
pusha
aam
imul
pop
add
hlt
enter
push
sbbb
aas
mov
or
shlb
and
loopne
xchg
mov
adc
mov
fbstp
dec
lret
je
subl
mov
push
push
add
inc
push
test
sub
scas
xor
clc
mov
loop
mov
jae
decl
adcb
sbbl
fdiv
or
jg
mov
add
ds
negl
stc
xor
scas
lods
ljmp
jae
jle
pop
fstl
adc
fmul
mov
fcompl
mov
inc
loopne
sti
mov
test
aas
push
loopne
mov
test
loopne
add
jo
add
jbe
pop
cs
or
sub
add
pop
or
adc
pop
lods
mov
sbb
jb
add
jae
sbb
xchg
or
add
and
xor
repz
loope
sbb
inc
insl
cwtl
decl
dec
add
inc
adc
adc
xor
scas
cmp
les
jb,pt
xor
xchg
pop
mov
mov
fwait
or
inc
pop
testl
push
sarb
and
xchg
cmp
aaa
sub
xor
mov
jb
sub
shl
insl
cltd
movsl
mov
mov
xchg
hlt
stc
stos
or
imul
jp
iret
add
add
jbe
push
mov
shll
xor
pop
insb
call
mov
xchg
jae
jb
mov
cmp
loope
insl
jb
or
inc
pop
jae
mov
sarl
test
xchg
mov
lret
nop
jae
out
test
test
push
cmp
push
jb
jae
rcl
mov
inc
mov
mov
jae
mov
sar
lahf
imul
mov
inc
movsl
jp
push
push
lahf
xor
jne
hlt
adc
sbb
mov
xchg
ss
add
cwtl
lds
jb
aaa
mov
loop
mov
lods
jae
and
les
jl
and
dec
jg
adc
cltd
jmp
xor
xchg
cld
loop
repz
jns
jae
loope
fmuls
test
leave
iret
hlt
sub
out
jae
jle
cmp
push
jnp
insl
cmp
jg
sub
je
insl
rorl
jg
idivb
sub
shl
sti
jb
mov
push
fistpll
fs
cmp
stos
loop
xor
sbb
cli
rclb
lds
in
sub
jmp
cmc
icebp
jg
xchg
sub
pushl
add
loopne
or
xor
jmp
out
clc
sub
aam
jl
jae
sub
sti
mov
xchg
notb
repz
out
xchg
dec
add
decl
mov
arpl
insl
mov
je
push
test
push
test
mov
push
and
mov
jae
cli
bswap
iret
xchg
and
enter
insb
or
push
daa
push
or
mov
mov
aad
and
lods
xlat
call
mov
scas
and
mov
in
xor
xchg
add
out
cmp
mov
sbbb
pop
sbb
fcomps
jae
call
jle
xchg
dec
or
xor
mov
cltd
jecxz
js
pop
lock
inc
jp
sbb
xor
push
or
pop
pop
sbb
test
fmul
mov
notb
arpl
lods
pop
loope
push
mov
mov
call
or
mov
xchg
lcall
xchg
mov
or
pop
cmp
mov
pop
jae
sbb
dec
jae
jmp
daa
aaa
repnz
mov
sbb
dec
push
mov
sbb
es
pop
cmp
loopne
mov
dec
push
sub
xlat
pop
mov
out
xchg
insb
pop
cmpb
popa
dec
and
jns
adc
ja
and
xor
cs
inc
mov
ljmp
sub
push
xorb
add
inc
popa
mov
cmp
mov
ljmp
xchg
jae
mov
jb
mov
out
cltd
xor
and
push
call
adc
dec
test
jnp
adc
aas
popa
sahf
pop
add
repnz
jns
sub
lds
in
les
loope
jge
add
int
xor
loop
cmp
fcmovne
imul
mov
loop
dec
das
push
xlat
repz
add
mov
or
cmpsb
cmp
xor
aas
setge
cs
xchg
mov
fisubrs
clc
cmpsl
push
out
jle
shll
fldl2t
nop
mov
xchg
out
repnz
pop
in
push
pop
jae
cwtl
xor
jnp
adc
ss
push
cli
test
add
fldt
xor
xchg
jmp
insl
pop
mov
leave
push
and
mov
insl
sbb
add
mov
push
mov
pop
es
pusha
icebp
lahf
inc
repnz
cmc
jae
jmp
nop
sbb
jmp
ja
xchg
aas
mov
cltd
std
or
scas
xor
push
add
test
xchg
fnstenv
mov
and
or
jge
adc
mov
insb
xchg
ret
push
push
mov
and
cmpsb
push
xchg
rcrb
insl
mov
or
jb
movsl
popa
mov
xor
cmp
cmp
jb
jae
adcb
adc
inc
shll
iret
dec
sbb
jl
xor
lods
or
cmp
cmp
push
icebp
imul
cmp
pop
notl
daa
pop
adc
lds
jae
divl
sub
pusha
and
fistpll
mov
rcrb
push
jae
push
xchg
cwtl
pop
lcall
fldl
pop
dec
lods
lods
cmp
pop
jae
ss
pop
inc
or
andb
pop
movsl
xchg
lahf
test
aaa
push
imul
inc
fcomip
mov
addr16
push
iret
lcall
add
movl
ficoms
inc
scas
hlt
fstl
and
push
inc
mov
loopne
popf
push
or
pushf
aaa
adc
daa
push
int
mov
pop
test
sbbl
cmpsl
sbb
in
pop
adc
sub
js
in
icebp
and
or
insl
pusha
cmc
les
cmpl
jne
push
push
pop
arpl
shlb
movsb
test
lods
lret
andb
int3
aaa
cmc
sti
mov
add
push
dec
xchg
je
or
lds
lock
sub
and
subb
test
leave
xchg
jmp
pop
ss
xchg
mov
jo
jmp
sahf
push
pop
mov
jae
test
hlt
and
sahf
cltd
orl
lcall
cmp
in
sub
clc
adc
add
and
jo
sbb
jae
sbb
ss
daa
mov
divl
add
aas
dec
jmp
pop
lds
xchg
sti
fadd
loopne
adc
jp
mov
mov
pop
scas
fldt
orb
jb
jae
or
add
into
andb
cmp
pop
lret
sbb
sarb
insb
pop
loopne
and
fldt
arpl
pop
or
icebp
iret
mov
aaa
inc
xorb
call
xchg
push
test
insb
xor
aad
maskmovq
testl
and
insb
mov
xchg
test
sub
cs
gs
outsb
scas
fucomp
fistps
push
fidivl
sbb
in
adc
mov
dec
sub
test
mov
adc
shlb
enter
and
sub
rolb
or
jae
or
sbb
adc
xchg
jp
les
lahf
xor
test
jae
add
xchg
xchg
or
out
mov
ret
sbb
sarl
or
cwtl
lret
or
insl
xchg
mov
rorl
mov
cmpb
lret
and
mov
jp
jns
fmuls
jne
inc
imul
push
jae
adc
jp
rclb
or
cmp
dec
fiadds
cmp
pushf
jae
dec
fistl
jae
sbbb
cld
and
jns
pop
xor
jae
xor
test
or
jae
add
dec
sub
adc
shll
lock
les
test
in
sbb
jae
mov
cmp
icebp
loope
jae
pop
push
xlat
dec
ja
das
stc
pop
xor
cmp
jns
int
std
imul
jg
outsl
xor
test
lods
in
pop
in
and
and
add
imul
mov
ficompl
sti
add
arpl
mov
dec
popf
repz
jle
adc
jae
jne
jb
or
push
jae
aad
rcrb
jg
push
xchg
pop
bound
xlat
lahf
jmp
mov
lret
jae
fdivr
sub
push
add
mov
jp
cltd
mov
xchg
test
lea
test
jmp
mov
loopne
test
shrl
mov
insb
cmp
ret
mov
xchg
clc
dec
lods
scas
loopne
fdivrs
insb
sub
hlt
mov
fnstcw
cwtl
mov
adc
rclb
jae
sti
jg
dec
jae
lock
pop
push
add
jae
ss
scas
aam
jae
js
or
add
xor
ja
icebp
xor
clc
insl
idiv
les
lahf
fildl
stc
dec
fs
push
pop
daa
mov
or
mov
jnp
dec
test
push
lods
sahf
cld
test
jge
js
adc
adc
push
sub
inc
mov
jmp
add
nop
jae
test
cld
in
es
mov
fildl
scas
js
pop
dec
call
push
sti
jae
cmp
test
sub
push
addl
jae
xchg
out
stc
or
mov
in
add
pop
adc
mov
enter
inc
push
adc
adc
dec
daa
adc
es
jae
fisubs
jbe
jae
dec
cmp
push
push
and
mov
roll
xchg
insb
sbb
cs
imul
xor
pop
or
rcl
sub
lret
rcrl
incb
jne
insb
jns
test
sar
jbe
repz
data16
or
adc
jae
inc
xchg
shlb
pop
jae
cltd
mov
dec
mov
jge
and
dec
pop
insl
adc
arpl
ret
xchg
incl
jge
cmpsb
les
mov
mov
or
icebp
aad
jae
stos
push
jge
xchg
add
mov
jp
jne
aas
inc
es
jae
popf
mov
mov
xor
push
xchg
mov
and
clc
cmc
insb
jnp
pop
loope
mov
push
or
mov
movsl
inc
jbe
hlt
xchg
mov
jae
add
push
test
dec
mov
mov
jae
pop
enter
or
pop
fidivs
test
jmp
loopne
repnz
ds
jae
push
aam
add
jl
jmp
js
dec
loopne
cwtl
adc
imul
dec
pop
lock
cld
jae
xor
lcall
js
xchg
push
int
imul
notb
imul
cmp
es
inc
aaa
dec
repz
fwait
out
jmp
out
mov
jae
add
mov
jae
xchg
xchg
scas
iret
fcmove
lcall
repz
jbe
push
fs
or
jne
aam
pop
jae
mov
lea
xchg
icebp
sbb
stc
cmp
repnz
adc
sbb
aaa
adc
dec
call
mov
inc
xor
cmpsl
lods
divl
mov
test
movsl
ret
call
jae
icebp
sub
mov
lods
js
jae
stc
cmp
and
mov
xchg
cmp
mov
scas
outsb
lods
mov
jb
adc
jae
jp
sbb
mov
add
jle
xor
fmul
lods
jae
je
cmpl
jae
xchg
xor
icebp
jmp
jae
repz
and
mov
insb
outsb
pop
xchg
adc
cmp
incb
dec
jo
stos
lods
out
dec
pop
push
lds
das
aam
jns
aaa
dec
xchg
lcall
inc
jae
aas
test
xor
mov
stos
mov
inc
jae
push
push
dec
jp
push
lret
sub
outsb
shll
xchg
enter
mov
daa
out
sbb
sarb
lcall
xor
cmp
gs
repz
notb
test
cmp
mov
jmp
or
adc
and
xchg
jae
mov
int3
mov
aas
or
or
dec
fnstenv
jnp
fs
mov
xor
add
jg
mov
cmp
repz
ds
mov
ret
movsl
aad
repnz
cmp
add
iret
call
sahf
movsb
pusha
xlat
pop
repnz
loopne
ret
insl
test
push
lea
adcl
cs
push
outsb
add
out
pop
pop
push
xor
cwtl
cmp
jns
jae
push
cmp
insl
cli
sbb
and
fs
enter
adc
fdivp
jae
sti
cmpsb
sbb
or
xchg
push
in
add
in
xor
out
add
mov
inc
push
jnp
scas
lods
push
ret
dec
sub
push
stos
mov
movsl
and
lret
adc
mov
rol
push
dec
push
pop
lods
js
add
popa
mov
add
or
inc
mov
mov
jbe
leave
rcl
testl
in
fldenv
sbb
sbb
movsb
and
add
or
outsl
out
dec
mov
and
mov
and
js
jae
sub
push
dec
xor
fcmovbe
dec
jb
pusha
call
jb
inc
adc
lahf
ret
sti
jmp
pop
cltd
mov
add
shl
inc
scas
adc
adcb
mov
jnp
mov
xchg
mov
mov
sbb
mov
insb
dec
jl
cmc
adc
sbb
push
dec
addr16
rcrb
ds
rcrb
lock
sub
jae
daa
adc
add
xor
dec
pusha
out
jb
popa
stos
add
fstps
inc
insl
cltd
stos
rcll
icebp
mov
lahf
and
sub
adc
repz
add
mov
cmp
cmp
shll
aam
call
mov
xor
scas
int
xchg
adc
sbb
push
pushf
fiadds
jecxz
sub
or
mov
out
out
rcll
in
jae
ffree
push
je
mov
mov
inc
push
add
cwtl
xchg
mov
mov
jae
and
jmp
movsl
push
sbb
outsl
test
pop
xchg
and
jae
iret
subb
sahf
fldt
dec
pusha
cmc
mov
ret
mov
lahf
pop
pop
fcomps
mov
mov
push
daa
sti
clc
clc
sbb
cld
mov
push
add
or
jp
pop
mov
data16
and
aaa
push
lods
sarb
or
sbb
pushf
ljmp
and
pop
sti
mov
imul
mov
xchg
jae
notb
lahf
inc
xor
jae
pusha
pop
add
adc
push
fadd
sbb
fnstcw
js
hlt
xchg
insb
rclb
jae
and
int
jae
inc
pop
mov
jge
sti
xor
pop
push
subb
flds
pushf
inc
jne
cmpsl
jae
lcall
jae
mov
lret
mov
insl
sbb
mov
and
mov
sub
xchg
jmp
and
nop
xorl
ret
xchg
inc
mov
mov
sub
int3
jo
dec
cmpsb
jae
pop
data16
jle
sahf
fldcw
push
lahf
mov
hlt
movsl
cs
push
inc
pop
ljmp
or
loopne
mov
aad
fsubrs
insl
fsubr
and
sub
mov
int
xor
lea
ja
adc
repnz
sub
in
jl
push
sahf
test
icebp
and
push
aad
and
pusha
shll
ja
adc
jae
mov
repnz
mov
js
iret
sbb
sbb
mov
lock
mov
loopne
xchg
jae
xlat
mov
push
or
dec
inc
xchg
aam
xorb
bound
cmpsb
cmp
js
mov
jbe
jnp
insb
aas
popf
jg
jae
jne
sahf
mov
add
jae
mov
sub
faddp
mov
pop
jae
cmp
adc
dec
ret
mov
xchg
in
jmp
testl
cmp
cwtl
cmpsl
in
andl
mov
int
aam
movl
dec
outsl
jb
mov
jl
mov
imul
jecxz
roll
out
fwait
add
negl
subl
inc
fldt
idivl
xor
pop
cmc
and
jae
adc
and
and
shrb
fiadds
jge
imul
mov
scas
jae
cmpsl
cltd
inc
lea
loope
mov
and
cwtl
addr16
ljmp
push
sahf
repz
sub
arpl
mov
add
xor
fsts
adc
jae
push
push
lret
mov
mov
push
inc
mov
in
sbb
fsts
loopne
push
mov
lcall
xchg
call
fsub
ja
mov
mov
xchg
mov
xchg
jne
push
mov
pushf
imul
test
mov
or
or
xorb
lcall
shlb
sub
cmp
add
push
je
jae
rcll
aaa
sti
fsubrs
out
add
stc
mov
mov
and
pop
cmpsb
push
idivl
and
push
jae
jbe
int
jne
sub
xchg
lret
je
insb
les
ficompl
daa
insb
dec
and
jl
popa
push
lock
shll
into
jns
pop
jae
scas
shll
nop
mov
fwait
cmp
jae
repnz
jl
scas
mov
jae
lds
mov
adc
sub
and
sahf
mov
test
pop
cwtl
shlb
mov
fiadds
xchg
push
insb
sbb
stos
push
and
sahf
inc
cltd
sbb
insl
cwtl
jbe
repnz
adc
rcl
pushf
push
push
sub
adc
jae
lds
leave
push
jg
fldt
repz
adc
rclb
test
scas
sub
pminub
jae,pt
sbb
fiadds
push
fs
xchg
cmp
xor
aam
xchg
inc
stos
repnz
arpl
out
jae
js
loope
mov
sahf
mov
jae
xchg
shrl
addl
dec
mov
pop
inc
jae
lcall
les
dec
flds
mov
cwtl
insb
lods
shll
sbb
and
and
bnd
xchg
in
jg
ja
addr16
sub
fsubrp
adc
shlb
xchg
aaa
clc
test
mov
rorl
push
mov
out
movsl
push
and
jb
push
cmp
aam
adcl
mov
in
stos
lahf
jae
inc
mov
sbb
jae
jbe
leave
sarl
nop
jb
jae
mov
rol
repnz
dec
fs
cmp
cli
add
cltd
out
push
jmp
mov
xchg
adc
repz
dec
scas
test
rclb
dec
add
xor
jns
lock
mov
lcall
sbb
add
adc
and
inc
mov
scas
loopne
or
mov
ds
pop
stc
into
push
jae
mov
cmp
add
cmp
sub
sbb
pop
test
pop
mov
into
add
mov
rolb
leave
cltd
push
fisttps
popf
mov
sbb
jo
jae
xchg
cmp
adc
pop
mov
or
loope
iret
rcr
adc
shll
aad
sbb
es
sub
dec
ja
push
mov
pop
mov
das
and
jb
mov
cltd
mov
sti
inc
insb
in
in
test
mov
push
test
pop
std
jne
insl
dec
pushf
mov
fcmovbe
add
aas
loopne
mov
fwait
iret
mov
xor
jae
aad
adc
and
push
jbe
or
sahf
pop
mov
les
ja
mov
xor
lret
negb
push
sub
cltd
xchg
mov
pop
cs
imul
pop
jae
cmp
rorl
and
xchg
ret
divl
xchg
sahf
ret
aaa
cwtl
add
inc
adc
les
inc
jl
mov
jae
cwtl
push
cltd
and
push
outsl
dec
mov
insb
cmpsb
dec
rol
cmc
mov
or
pushf
jae
sbb
lock
push
lods
divl
pop
mov
fimuls
stos
iret
shll
lret
data16
add
or
insl
cmpsb
int
pop
mov
test
add
fidivl
jbe
pop
add
stos
popa
adc
imull
push
cmpsb
clc
push
mov
das
mov
shll
pop
xchg
xor
daa
stos
test
popa
js
sbb
xchg
shlb
or
jle
cmp
insb
cmp
fdivl
xchg
ds
dec
sub
pop
push
andl
fstpl
popa
hlt
repnz
mov
push
mov
jnp
xchg
cmc
pop
and
lds
hlt
jns
xchg
js
xchg
adc
inc
push
shl
cs
inc
adc
rcr
mov
popa
lods
shlb
sub
adc
add
jae
into
push
xor
mov
ja
lcall
mov
push
push
pop
xor
jae
mov
decl
mov
or
xchg
jae
or
and
in
xchg
fsub
enter
aaa
or
pop
mov
add
out
sahf
repz
jbe
add
add
insl
inc
lods
xchg
mov
negl
cmp
add
lcall
lretw
mov
jae
loope
vmovddup
jae
stos
and
push
std
and
insb
sub
mov
push
jae
hlt
mov
xor
call
adcb
mov
imul
jae
loope
mov
or
sbb
mov
xchg
mov
push
lcall
je
fcmovu
push
mov
mov
call
mov
cmpsl
mov
aad
inc
jmp
push
rolb
jb
nop
incl
inc
in
xor
mov
xchg
mov
cmc
xor
mov
pop
loopne
mov
jle
enter
cli
jae
loop
sahf
popf
out
jae
mov
movsl
jecxz
jge
test
push
jae
cmp
sahf
jbe
rorl
je
jae
sbb
clc
mov
push
fwait
jge
lahf
mov
lret
insl
test
jns
inc
iret
xchg
insb
subl
pop
mov
inc
mov
test
mov
ss
xor
push
out
or
addb
fwait
jae
adcl
jae
ja
add
cli
in
insb
xor
xlat
xor
mov
pop
repz
gs
mov
test
xor
out
xor
mov
jns
and
jae
xchg
loopne
sub
cmpsb
fdivs
dec
fisubl
hlt
inc
cs
js
add
daa
adc
jge
xor
cmp
cld
loopne
jecxz
gs
or
xor
dec
out
mov
test
nop
test
sub
mov
adc
xlat
movsl
xor
test
mov
addr16
ja
mov
es
aam
inc
shrb
pop
ret
iret
sub
xor
mov
jns
mov
pop
js
lods
xchg
pop
pop
lea
jb
sub
or
jnp
push
and
loop
data16
rorb
fildll
out
and
lret
sub
push
pop
jno
ret
loop
test
inc
dec
pop
icebp
mov
and
jno
add
push
jno
jecxz
out
outsl
and
fistps
jbe
imul
pop
cmp
out
xor
dec
lods
repz
insb
mov
leave
rcrl
setge
adc
shl
or
aaa
aas
or
push
ds
mov
adc
fucomp
out
jno
push
jecxz
xor
into
sub
cmp
imul
mov
sbb
inc
out
dec
push
and
cmpsb
or
push
gs
faddp
out
lods
xor
dec
xchg
jne
addr16
xchg
lret
nop
push
mov
into
inc
adc
jp
ja
scas
sub
lods
cmpsb
pop
sub
push
inc
pop
cmp
or
aaa
out
imul
sbb
sbb
cmpsl
imul
mov
in
dec
cmp
sub
cmovo
test
jb
test
inc
push
sbb
stc
ljmp
jge
popf
sbb
clc
popf
adc
push
popf
icebp
add
ljmp
jne
lahf
sbb
or
mov
xchg
ljmp
addl
movsb
add
leave
jns
shll
popf
jne
pushf
mov
mov
decb
clc
mov
jb
mov
or
repnz
adc
or
bound
rclb
pop
leave
call
or
mov
mov
aas
dec
dec
mov
lock
add
cmp
addr16
fisttpll
sbb
push
push
or
jl
insb
dec
cmc
jb
sbb
push
or
lahf
jg
or
push
sub
dec
rcrl
fiadds
test
push
lock
lahf
lahf
cltd
pop
add
and
inc
dec
bound
rcrb
push
inc
push
lahf
pop
mov
jbe
inc
pushf
lahf
jbe
push
push
sub
inc
rcrl
cltd
aad
fucom
clc
adc
ss
mov
mov
ret
xchg
cs
vshufpd
je
lahf
ret
inc
lcall
lcall
mov
fld
in
je
lahf
ret
inc
lcall
cwtl
std
lcall
push
ret
cmpsb
insb
fwait
mov
lcall
add
insb
or
lcall
lds
xlat
mov
mov
insb
mov
rcrl
scas
sbb
adc
xchg
cld
mov
fstps
xchg
lcall
jbe
mov
flds
sbb
stc
pop
add
add
add
add
add
add
add
add
add
lcall
mov
fnstenv
mov
cmp
xchg
mov
push
mov
cmc
xor
bswap
data16
push
sub
stc
pop
adc
pushf
outsl
ret
mov
mov
add
data16
shl
adc
mov
sub
cltd
pop
into
jnp
leave
sub
sbb
mov
mov
dec
sbb
xchg
lret
out
inc
div
cltd
pop
push
jmp
lock
int
cmp
bound
subl
cld
out
pop
adc
dec
mov
scas
or
popf
jo
mov
loop
sbb
dec
push
pop
add
lea
push
and
mov
jge
inc
mov
fwait
jecxz
jbe
push
push
mov
pop
add
or
shll
lret
sarl
jbe
cltd
lahf
shll
push
or
mov
jg
or
fcompl
ljmp
sar
or
sahf
cltd
rol
pop
decb
ljmp
cmc
fbstp
fcompl
test
movsl
lock
iret
xor
or
fcmovbe
jl
rcrl
cltd
and
movsl
push
or
cmc
fbstp
fcompl
ljmp
rcll
iret
xor
cltd
movsb
xchg
sbb
add
dec
xchg
mov
in
push
lea
mov
int3
fstps
iret
test
out
lock
in
push
lea
lea
mov
pop
lock
imul
jmp
or
enter
jg
sahf
in
pop
lea
mov
push
lea
dec
leave
lret
arpl
add
clc
ljmp
leave
sbbb
fmul
jns
rclb
fcoms
mov
leave
sbb
cmp
aam
leave
jns
repnz
aas
mov
lock
jge
jmp
cs
cld
sbb
test
test
ljmp
leave
sub
aas
imul
jmp
fsubrl
lret
mov
sub
cs
jnp
aas
adc
mov
jne
jnp
ret
scas
into
cmpsl
jmp
ja
mov
lahf
adc
jne
add
push
jbe
add
nop
imull
aad
movsl
movsl
sbb
cs
jecxz
ret
stos
mov
add
add
dec
aad
das
add
aad
jmp
cli
std
adc
jo
pop
aad
push
xor
loopne
aad
mov
push
aad
mov
push
aad
mov
push
aad
mov
push
aad
mov
push
aad
mov
push
aad
mov
push
aad
mov
push
aad
push
andb
ftst
mov
mov
sbb
add
adc
or
mov
mov
push
lret
mov
push
mov
mov
push
mov
mov
push
mov
mov
push
mov
xchg
push
mov
xchg
push
mov
xchg
or
or
or
or
or
or
or
or
or
or
jns
aas
adc
loopne
sbb
std
adc
loopne
fists
imul
fcoms
sub
outsl
fs
sbb
mov
test
ficomps
mov
es
cltd
mov
jle
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lock
stc
pop
push
cmpsb
jmp
sbb
xchg
jbe
sbb
aas
inc
pop
and
arpl
cltd
xchg
mov
sub
inc
insl
imul
outsl
sub
and
or
mov
subl
lret
repz
jne
push
dec
je
or
push
cmpsb
shrl
insb
insb
arpl
gs
inc
push
insl
ds
pop
pop
pop
into
in
mov
out
sbb
xor
lds
pop
in
ds
cmp
and
shlb
inc
lea
imul
loop
imul
push
jns
jne
mov
iret
in
pop
push
fwait
imul
adc
push
adcl
bound
imul
add
outsl
imul
aam
clc
xor
pop
ja
gs
imulb
dec
inc
addr16
jae
lret
push
enter
dec
das
or
jae
dec
dec
int
or
or
mov
in
test
jae
push
ljmp
and
mov
cmp
xor
cli
das
push
push
mov
dec
cwtl
out
imul
out
or
sub
enter
sub
int
lods
inc
outsl
iret
and
das
jge
adc
jae
cmp
sub
int3
in
jae
je
fcompl
and
dec
jae
popf
cmp
mov
sub
inc
loope
mov
jae
pop
std
adc
push
xor
jae
lods
add
inc
scas
jle
jnp
divb
bnd
sub
mov
jg
jo
ja
dec
jae
jnp
mov
xchg
jae
sub
dec
jae
jle
mov
movsl
sub
pushf
cs
stos
jnp
clc
dec
popf
lods
xor
xchg
sahf
mov
xchg
jmp
xor
nop
mov
pop
add
jae
xor
push
scas
add
insl
out
cmp
mov
bound
cmp
shrb
adc
addl
aad
dec
shlb
fsub
andb
or
mov
jmp
sbb
push
sub
jb
cmp
scas
sbb
fstps
hlt
gs
mov
pop
insb
jmp
inc
dec
movl
repz
inc
and
divb
mov
jmp
jmp
xchg
dec
mov
inc
cmp
repnz
mov
push
and
lods
jnp
lock
inc
imul
mov
inc
popf
xchg
pusha
jg
push
sbb
inc
daa
pop
clc
mov
jae
cmp
sub
jae
mov
sbb
dec
jp
int
mov
arpl
inc
jae
fcmovbe
mov
jae
mov
punpcklwd
xor
push
add
sbb
jl
jae
shl
push
pushf
pop
imul
stos
and
jae
jbe
jb
jae
mov
adc
dec
pop
loope
xchg
dec
sub
jae
xchg
orb
dec
into
test
pop
ret
mov
bound
add
pop
adc
xchg
mov
rcrb
jge
xor
push
lock
jns
rcrl
fmulp
adc
inc
in
rolb
add
pop
sbb
push
or
fmuls
stc
jecxz
jo
mov
push
and
loop
lock
xchg
gs
jne
mov
sbb
mov
xchg
minps
pusha
ret
sub
frstor
std
loop
jae
mov
andb
les
cmp
fadd
cmp
ror
xchg
sarb
xor
ret
or
mov
xchg
inc
jmp
jae
rcrb
adc
cmp
push
inc
push
ds
cld
fbld
push
or
fldt
cmpsb
or
mov
ss
sar
pop
iret
inc
push
sub
daa
in
or
lods
xor
add
in
xchg
cmp
lret
test
stos
mov
mov
add
inc
mov
mov
fcmove
insl
mov
fwait
xchg
or
rcrl
mov
jae
pop
lods
pushl
mov
icebp
hlt
pop
insl
xchg
pop
or
cmc
xchg
loope
mov
pushf
mov
mov
jae
fmuls
or
iret
loop
leave
mov
mov
jae
out
pop
mov
cmp
cmp
push
aad
and
rcr
bound
dec
insl
xchg
sbb
in
push
cmp
jae
test
mov
cltd
lds
xor
jge
cld
jb
in
jae
or
adc
dec
xchg
out
loope
jnp
scas
add
push
pop
xor
jae
jp
dec
jb
lret
push
xlat
mov
xchg
lds
cli
push
icebp
jae
lret
inc
adc
cmpxchg
clc
pop
jae
and
and
jg
adc
jae
mov
adc
dec
outsl
jae
xchg
mov
stc
cmpsb
jae
inc
je
push
fimuls
pop
test
aam
jge
mov
in
dec
ret
add
adc
sahf
adc
mov
loopne
daa
fdivl
cmpsl
insb
xchg
inc
lahf
jge
das
int
push
xchg
repz
inc
lds
sahf
lahf
loop
es
xor
fdiv
loopne
mov
cmp
add
mov
add
xchg
adc
out
pop
daa
insl
test
pop
mov
cmpb
or
in
loop
inc
adc
repnz
or
or
inc
hlt
adc
jmp
jo
test
sub
mov
cmp
xchg
sbb
aad
and
sub
push
stos
add
adc
movsb
scas
inc
iret
jl
push
test
call
rorb
jae
mov
xchg
mov
cwtl
jae
jecxz
xchg
jo
sub
lahf
mov
inc
rclb
sbb
cld
mov
movsl
shrb
jecxz
pop
jae
xlat
idivb
ss
dec
in
or
pop
cmp
cmp
je
xor
jb
jae
mov
scas
ljmp
lret
out
test
jne
lods
sbb
push
fbstp
mov
test
movsb
pop
icebp
adc
sbbl
add
cwtl
add
cmpb
stos
mov
jmp
insl
fimuls
cmc
push
jb
pusha
hlt
or
mov
sub
xchg
jae
fnstenv
xchg
mov
cmp
sbb
insl
mov
jne
fsubs
incl
xchg
push
sub
test
das
jae
jb
and
aam
pop
jae
aas
jge
xchg
fwait
add
jae
xorb
outsb
int
imulb
mov
ret
stos
aad
mov
xchg
iret
repnz
jae
sarb
add
mov
sbb
push
mov
lods
fistl
cmp
push
or
ret
add
push
cmpsb
sahf
clc
adc
lods
mov
incb
inc
in
sti
cld
adc
sti
ss
jb
cld
or
pop
dec
popa
stc
pushf
sub
sbb
mov
imul
adc
daa
int
push
or
mov
xchg
ljmp
and
mov
push
arpl
sub
shlb
repz
mov
xchg
imul
jecxz
mov
xor
das
lahf
mov
ss
jmp
cli
lock
jl
and
pop
jae
je
cltd
push
jbe
in
popa
xor
sbb
nop
jne
adc
mov
sub
pop
jae
mov
inc
push
and
adc
pop
into
test
imul
repnz
daa
jo
pop
jbe
inc
adc
dec
and
adc
mov
and
push
jl
mov
pop
sbb
repnz
jl
xor
jb
xor
in
ss
shll
rcrb
add
pop
call
mov
push
stc
test
jmp
shll
ja
int
jae
mov
cmpsl
inc
loope
jnp
or
rclb
ret
jae
sbb
negl
test
shll
inc
pop
lcall
ret
jae
adc
test
mov
cmp
inc
adc
je
popf
jne
add
jns
sub
mov
xlat
roll
bound
ret
push
xchg
shll
hlt
add
pop
mov
mov
popa
bound
sbb
je
jae
clc
repnz
aaa
imul
shlb
leave
sub
out
pop
in
push
jp
outsl
popa
clc
jg
jns
fcmovnb
or
jp
bound
lret
sub
or
push
mov
pusha
popa
adc
popf
sub
lods
xor
pop
jbe
jne
insb
mov
sti
jle
sub
pop
xor
and
fwait
rclb
xchg
and
repnz
in
xadd
jg
test
mov
cmpsb
shrl
dec
jo
aam
outsl
iret
dec
lods
jae
adc
test
aas
mov
and
jg
dec
gs
xor
repz
lcall
cld
out
pushf
cmpsb
roll
mov
and
jae
adc
mov
test
ja
mov
dec
jnp
inc
ljmp
push
cmp
mov
sub
pop
lret
or
and
cmp
insl
jbe
mov
stc
out
mov
int
adc
mov
mov
mov
ljmp
cmp
inc
pop
bound
outsl
cmp
xchg
inc
pop
iret
adc
push
cmpsb
or
xor
imull
loop
mov
jb
mov
jl
xor
cs
sbb
dec
aam
jo
ret
outsl
xor
push
popf
inc
xchg
add
xlat
sahf
jae
mov
fsts
mov
popa
div
pop
xchg
rorl
sahf
hlt
cmp
add
lahf
inc
sarl
mov
jne
andl
dec
adcl
mov
lret
mov
data16
into
pushf
fs
push
fadd
out
sbb
add
mulb
test
and
pop
mov
mov
js
mov
adc
cli
mov
xchg
outsb
dec
dec
xor
test
pusha
cmp
xchg
fs
pop
nop
repz
inc
dec
out
adc
or
in
push
pop
sarl
insl
jle
inc
sbb
dec
incb
sbb
enter
pop
cmpsb
stc
jecxz
test
xchg
jae
mov
in
jae
sbb
adc
push
mov
push
jl
pop
jbe
add
fs
cmp
insl
orl
fcmovne
mov
cmp
in
or
mov
stos
scas
insb
pop
xchg
add
xchg
jae
std
cld
adc
cli
rcrl
jecxz
shlb
movb
sub
lock
jae
mov
fwait
ret
cmp
jb
rolb
fsts
jae
adc
into
lock
pushf
scas
jmp
dec
sbb
jno
leave
adc
mov
repz
movsl
xor
and
lea
ret
jmp
or
hlt
fwait
mov
push
mov
push
repz
jae
lahf
mov
add
notl
cwtl
loope
xor
daa
push
test
fwait
sub
inc
ret
pop
jg
inc
xchg
jae
or
mov
jae
sbb
movsb
or
dec
out
popa
jecxz
mov
push
inc
lock
inc
pop
and
ja
mov
sbb
add
add
movsl
jns
fwait
and
xor
popf
aad
in
adc
xchg
repnz
lahf
out
push
aam
push
lret
cmpsb
daa
pop
les
leave
lcall
and
mov
adc
xchg
js
jp
adc
lods
xacquire
cmp
fldenv
mov
push
add
sbb
popf
pushf
mov
jp
jae
lcall
jae
fistpll
push
int
dec
clc
insl
cmpsb
pop
enter
inc
fwait
in
stos
mov
xlat
xchg
pop
loopne
jb
xchg
mov
jg
jae
das
mov
icebp
pop
sbb
mov
add
mov
enter
sub
repnz
sahf
insb
cmpsb
mov
aam
pushl
mov
pop
jb
jae
sbb
push
pushf
mov
hlt
or
bnd
fnstsw
movsl
popa
daa
jne
sarl
lock
cs
adc
into
insb
xchg
shrl
fnstsw
loopne
sub
sub
push
inc
xor
cmp
mov
aaa
cmp
aad
bnd
sbb
jnp
iret
xchg
adc
andl
lds
jp
fbstp
idiv
mov
int3
leave
and
dec
or
dec
das
lods
imul
out
enter
mov
scas
adc
orl
adc
imul
mov
aaa
jbe
jg
cmpsl
jnp
mov
jae
inc
fsts
mov
sub
jecxz
jbe
into
jae
das
mov
push
cmp
jae
int
mov
jae
mov
idivb
orb
add
shl
inc
loop
or
enter
and
in
lret
push
add
mov
jae
push
adc
out
xchg
and
mov
xor
bound
js
insl
sahf
inc
mov
xorl
jmp
out
fmuls
and
shrb
jae
in
fstpl
shlb
add
mov
adc
jns
aam
add
fstpt
scas
jp
cmp
out
stos
jae
cmp
repnz
loop
out
lret
pop
add
push
inc
bound
mov
cli
and
xor
jne
cmp
notb
ljmp
dec
test
js
shrl
lds
jae
lret
in
mov
lcall
ret
jo
clc
cs
testb
or
push
sahf
cmp
inc
dec
nopl
mov
xchg
pop
addl
in
mov
jge
mov
test
stos
fwait
mov
jae
jp
repz
xlat
or
inc
add
add
iret
scas
xor
xor
xlat
jbe
insl
out
vmovdqa
adc
repz
fnstcw
push
outsl
rcrb
loope
repz
stos
insl
mov
lods
mov
fcompl
jae
xor
movsb
test
jae
dec
in
shrb
les
or
push
negb
in
movsb
movsl
js
push
daa
cmp
aad
xchg
cmp
inc
jns
lcall
pop
andl
loope
push
lcall
sbb
scas
aam
psubusw
sub
ljmp
cmc
aas
xor
in
sbb
std
in
outsl
mov
push
jmp
icebp
push
push
sti
cltd
sub
xchg
mov
adc
lret
dec
jae
xchg
clc
and
adc
iret
jae
out
inc
aas
and
sub
inc
mov
dec
jae
rcl
pop
xchg
jb
xchg
jae
push
jnp
sub
jge
jae
notb
mov
jecxz
pop
pushf
mov
lahf
vxorps
mov
pop
daa
hlt
inc
inc
jmp
test
mov
jae
mov
mov
jo
ret
clc
ss
jae
mov
jne
inc
ljmp
les
xchg
sbb
ds
jae
sbb
xchg
imul
xchg
mov
xchg
mov
add
add
mov
leave
xor
in
repz
iret
jne
push
repnz
sub
test
daa
push
inc
gs
xor
pop
mov
bound
add
sub
lcall
pop
mov
mov
jns
pusha
mov
aas
mov
jae
jnp
test
jae
pop
inc
cmc
scas
and
mov
push
xchg
cs
into
xchg
popa
xor
insb
out
icebp
dec
test
dec
and
movsl
xor
push
mov
outsl
inc
or
mov
out
sub
leave
inc
push
jnp
js
cmpsb
insl
clc
rorb
mov
dec
inc
add
jae
lock
sbb
mov
pop
outsb
ja
lcall
jge
or
jg
jae
sahf
fwait
data16
jnp
jae
jo
lcall
call
fcmovnbe
sbb
adc
cli
lds
data16
mov
adc
mov
xor
add
cld
aaa
lea
inc
xchg
cmp
mov
cli
shlb
loope
sbb
pop
fdivs
push
inc
lds
aas
jp
out
lcall
sbb
popa
imul
inc
mov
out
fwait
aad
ret
jae
xor
es
push
mov
xchg
cmp
and
pusha
stos
notl
xlat
push
mov
jae
mov
loopne
movsb
roll
popa
daa
push
jo
shrb
notb
shr
icebp
push
inc
mov
sahf
repnz
jne
rolb
insl
hlt
ficoms
sub
pop
popa
sbb
xchg
leave
jmp
insb
pop
lea
test
sub
or
cwtl
jo
or
xchg
rorb
dec
push
fdivl
xor
aad
sbb
aas
aaa
mov
adc
test
xchg
lcall
push
daa
pop
and
jae
out
or
jae,pn
pushl
leave
xor
out
adc
push
jnp
cmpsb
andl
cmp
jle
xchg
push
in
icebp
fsubl
mov
scas
mov
jae
adc
xchg
push
movsb
dec
stos
in
lods
xor
xlat
shlb
jnp
push
push
mov
lcall
fs
jae
jmp
std
mov
jg
mov
cld
pop
and
add
and
stos
and
je
lds
into
jae
rcr
mov
shrl
xchg
mov
mov
pop
orb
add
jge
movsl
shll
jb
fcmovnu
adc
xor
movsl
lods
faddp
and
jae
pop
dec
in
mov
add
mov
js
das
dec
jmp
imul
sub
ja
lods
jae
inc
roll
mov
pop
jae
mov
jbe
out
ljmp
test
bound
jae
stc
cld
inc
movsl
andb
jp
or
aas
shlb
into
js
pushf
sub
xchg
or
add
stos
add
stos
lret
dec
push
xchg
fcompl
jnp
jg
push
mov
mov
hlt
sti
pop
or
pop
xchg
pushf
cltd
popf
outsl
mov
adc
mov
pop
jp
rcrb
push
sti
jg
sub
mov
push
and
jae
aam
fimuls
aad
ja
popa
mov
test
mov
fcoml
rorb
cmc
xor
enter
pusha
xchg
lcall
pop
js
mov
das
cmp
mov
cltd
int
fisttpll
pop
and
cmp
and
loope
jae
cli
sti
in
mov
inc
cltd
dec
repnz
flds
ret
pushf
sbb
jp
popf
sub
jae
aas
aad
mov
sti
sbb
gs
dec
pop
into
or
leave
cmp
push
xchg
mov
jp
lods
shlb
cmpsl
loope
leave
lods
test
sbb
les
mov
roll
mov
inc
or
and
push
jmp
sub
imul
xchg
es
sub
test
cmp
cmpsb
jnp
dec
repz
inc
mov
pop
sbb
mov
sbb
xchg
jmp
xchg
xchg
pop
mov
mov
cli
ss
leave
imulb
mov
sarl
inc
jg
or
lret
push
xor
adc
add
fbstp
jae
lcall
cmp
flds
lret
popl
cmpsl
test
test
in
pop
stos
xor
jns
ds
push
mov
pop
and
daa
and
imul
pop
jge
lods
stos
cmc
jnp
cli
lahf
xor
mov
int3
stos
movsl
push
not
aaa
mov
xor
xchg
vpunpcklqdq
mov
iret
fldl
sbb
sbb
jae
cwtl
or
cmc
jle
push
add
jl
cs
int
fldt
inc
out
cmp
lods
lea
out
std
pop
dec
pop
daa
mov
mov
add
loop
or
sub
shr
imul
dec
or
popa
lds
sbb
out
pop
adc
mov
jmp
or
mov
xchg
lret
add
aas
and
sahf
sti
mov
jae
jne
or
dec
loop
mov
es
cmpsl
jae
push
aad
cmp
cltd
sbb
push
jb
shl
jae
pop
add
sub
jnp
rol
scas
push
mov
clc
adcl
or
fnstenv
sbb
push
sbb
pop
xchg
loopne
add
sti
repz
icebp
mov
pop
pop
js
jp
pusha
push
int3
jmp
and
aas
mov
push
push
cld
add
icebp
adc
shll
lcall
pop
jae
mov
movsb
jae
add
fnsave
xorl
mov
fmulp
fwait
jae
rclb
or
pushf
jae
divb
mov
ss
jae
addb
push
outsb
jae
push
nop
mov
jae
mov
cmp
dec
fbld
lock
shll
lods
sub
hlt
js
insb
cmp
lea
je
jae
fbstp
xor
mov
js
fisubs
jae
fldcw
mov
adc
insl
ja
ds
cli
mov
push
jb
jae
js
pop
idivb
lods
inc
add
xor
xchg
dec
in
or
cli
sbb
push
rolb
mov
mov
adc
dec
jg
data16
pop
jbe
loop
cli
lahf
push
and
pop
jp
push
push
movsb
push
cwtl
jae
mov
mov
insl
pop
pop
ljmp
mov
jnp
xchg
shll
jmp
push
pop
out
mov
shrb
jecxz
fsts
iret
fdivl
jae
lret
cltd
adc
lds
int
inc
xor
sub
jecxz
mov
cmp
sub
xchg
xchg
adc
nop
popf
shlb
pop
mov
push
jae
jns
mov
iret
sbb
jae
lds
enter
jae
mov
mov
xor
shl
stos
pop
dec
sub
jae
pop
cmp
mov
loope
mov
loop
jg
xchg
inc
xor
xchg
incb
or
imul
pop
sbb
jae
push
jmp
xor
clc
into
mov
mov
shld
cmp
dec
xchg
ret
mov
dec
inc
push
adc
mov
and
push
xchg
push
fnstsw
dec
movsl
fiaddl
out
jae
sbb
rolb
xor
lret
dec
xchg
ficomps
xchg
iret
pop
jae
pop
mov
cli
lahf
pop
jae
jmp
and
nop
add
add
ret
cwtl
jae
mov
jle
jo
testl
movsl
jnp
mov
cmc
push
movl
pop
aas
jae
in
scas
test
adc
fsubp
mov
push
mov
test
fwait
cmp
xchg
jae
add
dec
mov
js
jmp
mov
mov
daa
imul
mov
mov
loope
or
je
jmp
nop
cmp
ss
test
fildll
ss
mov
jl
unpcklps
push
scas
stos
add
xor
adc
testb
inc
mov
mov
cltd
jmp
cmp
lahf
shll
mov
movsl
iret
jae
add
push
inc
jae
je
push
xor
adc
xor
das
mov
mov
jae
jg
adc
mov
lahf
jae
aam
out
test
push
jae
pop
and
nop
or
push
xchg
scas
jns
mov
test
mov
adcl
sarl
imul
add
repz
adc
clc
loop
xlat
inc
pop
in
sahf
inc
and
pusha
loopne
mov
cmc
mov
lahf
shlb
icebp
outsl
mov
fiaddl
in
mov
cmpb
shl
jb
push
pushf
xchg
aam
repz
outsl
sbb
mov
aaa
lds
shll
or
insl
jp
mov
pop
mov
in
test
mov
pop
fsubrs
addb
mov
pop
inc
jae
leave
pop
sbb
ja
xlat
mov
add
mov
inc
xor
cmp
ja
movsl
inc
in
mov
jae
xchg
sbb
leave
jmp
popf
dec
inc
adc
mov
sub
sbb
xor
jae
fcomi
pushf
cmp
push
push
adc
jae
cwtl
js
jo
adc
mov
push
out
jae
pop
sti
mov
cmc
mov
jo
jae
test
cmp
fistl
lock
and
icebp
adc
inc
jo
add
jle
cltd
pop
pop
push
pop
fwait
aas
clc
xor
inc
aaa
cmc
rep
mov
mov
jo
mov
iret
and
sbb
adc
aaa
fbld
int3
mov
dec
lret
repz
lahf
jae
xchg
xchg
ret
mov
mov
xor
ja
jl
lret
jae
mov
leave
pushf
roll
sub
jae
int3
and
movl
das
test
or
xor
pop
and
push
ret
pop
mov
fistpll
jae
jp
js
hlt
lea
jae
sarb
negb
in
push
nop
mov
push
xor
jae
iret
lret
jge
adc
mov
sbb
mov
cwtl
stos
xor
sbb
mov
aam
pop
jbe
jae
xchg
mov
jae
iret
mov
inc
mov
pop
ds
out
jae
aam
mov
ss
leave
push
out
hlt
repnz
insb
cmpsb
cmp
jnp
lock
into
jmp
push
ss
jae
loopne
mov
push
shlb
adc
fcoml
mov
daa
clc
jae
js
mov
jmp
mov
leave
lods
in
sbb
push
add
repz
mov
ret
xlat
pop
cmc
mov
jae
xchg
mov
stc
bound
xchg
sbb
int3
jb
mov
dec
mov
mov
pop
inc
loopne
test
and
inc
or
ret
cwtl
cmp
sbb
mov
jmp
mov
rorb
loop
jae
test
mov
jnp
rcl
xor
bound
xchg
pusha
loope
sbb
daa
imul
repz
jae
push
movsb
cmc
cmp
push
jns
and
inc
adc
scas
in
xchg
mov
je
jg
jne
in
adc
mov
dec
and
mov
iret
mov
adc
and
push
mov
mov
dec
xor
in
mov
lds
adc
push
ret
subl
mov
mov
orl
cmp
iret
int
repnz
movsb
repz
or
inc
mov
int3
mov
repz
sub
pop
loopne,pn
es
js
jae
mov
pop
cltd
xchg
repnz
mov
shll
mov
movsl
js
jp
popf
mov
mov
dec
push
aas
pusha
pop
push
sbb
sub
test
out
mov
sub
adc
inc
test
in
push
push
mov
pop
jae
or
xor
adc
mov
push
add
mov
imul
pop
sahf
rcll
jae
cmc
sbb
mov
mov
daa
ret
dec
adc
popf
push
popa
cmp
dec
mov
lcall
and
das
leave
inc
pop
mov
and
sbbb
dec
shr
in
jae
pop
lea
cmp
inc
cltd
mov
ss
ds
sbb
adc
xchg
push
insl
cmp
sub
xchg
imul
adc
jecxz
rclb
inc
add
jae
jp
enter
pop
popa
mov
jo
mov
jae
xchg
cmp
lds
jae
mov
jp
pop
mov
jae
mov
sub
jae
sub
lret
xor
inc
inc
jae
ficomps
subl
jecxz
mov
pop
mov
add
sbb
clc
push
popa
cmp
stos
inc
inc
or
adc
rolb
push
imul
mov
sti
mov
cld
lret
inc
adc
mov
popf
jne
fidivs
and
pop
adc
fildll
movl
jae
dec
dec
pop
popf
and
pushf
jae
sbbb
aas
push
insl
add
mov
stos
lea
mov
stc
movsl
repz
decl
fcmovne
add
push
aaa
jae
daa
roll
jmp
imul
std
mov
in
js
sarb
subl
xor
mov
stos
lods
jmp
push
mov
mov
aad
or
test
testl
loopne
int
push
push
push
in
in
fcomp
fsubrl
pop
test
adc
pop
pop
lods
popf
cmp
xchg
mov
jnp
and
test
decb
and
in
mov
loope
pop
test
sbb
push
nop
rcrb
jae
mov
out
jae
xchg
ljmp
in
adc
xor
mov
pslld
aad
rcrb
cmpsb
cmp
xlat
pushf
repnz
jae
mov
xor
iret
jae
xchg
pop
pop
xchg
out
test
mov
jae
dec
xlat
jne
cmp
clc
paddsb
jae
out
inc
orb
cs
sub
mov
jae
adc
push
fnstenv
scas
jae
hlt
xchg
xlat
int
sbb
adc
pop
jbe
stos
jae
or
jnp
xor
ficomps
inc
insl
push
fisubrl
pop
in
xorl
shlb
les
mov
jae
cwtl
jo
add
push
mov
insl
push
les
popf
movsl
aas
cmp
fidivs
adc
sbb
jae
ret
mov
ja
lock
insb
test
test
sbb
push
pushf
int
bound
jae
push
into
xlat
mov
std
imul
dec
jae
gs
jb
xor
sub
and
adc
test
jbe
xlat
adcl
aas
jge
cmp
xchg
jae
in
int
mov
sbb
xlat
sub
cltd
jl
cmc
test
push
jns
adc
xchg
pop
js
sub
sbb
sbb
adc
inc
sbbb
fsubrs
sub
lods
or
loopne
adc
loop
pop
rol
push
test
cmpsl
cli
adc
ficomps
push
in
shl
sub
dec
push
ret
loopne
je
in
jmp
push
jae
mov
sarb
fnstenv
lock
lds
jae
out
sbb
cmp
loopne
loop
stc
xchg
jae
shrl
adc
insl
inc
adc
out
jmp
mov
and
push
xor
jae
icebp
and
mov
aam
lock
mov
aaa
or
xchg
js
and
mov
sub
hlt
cmpsb
dec
insb
and
adc
fidivrs
jae
mov
xor
xor
and
cmc
roll
out
cwtl
cmp
mov
loope
stos
notb
pop
sbb
jmp
aad
lods
xchg
sahf
push
cli
and
ss
xorl
pop
mulb
inc
adc
movl
into
xchg
jne
xchg
jae
mov
shlb
ja
jae
jb
cmpl
shlb
lret
push
xchg
mov
pop
out
repnz
fisubrl
lret
es
call
sub
dec
sub
in
cwtl
scas
and
jle
jae
das
sub
xchg
xor
daa
std
pop
xchg
sbbl
test
rcr
ljmp
and
mov
lahf
test
aad
mov
xor
xchg
xchg
xor
and
push
pop
jne
push
jnp
aad
inc
loopne
cltd
mov
les
xchg
and
rclb
rol
adc
int
jae
sbb
mov
ret
and
dec
and
jae
xchg
mov
add
add
sti
in
mov
inc
xchg
daa
arpl
jae
repz
pop
movsl
imul
ja
mov
das
jae
cmpsb
sub
jae
xor
mov
into
jne
push
movb
inc
stos
jae
xchg
sub
jae
popf
mov
ja
pop
xchg
ret
xchg
and
repz
js
mov
jae
pop
sarl
pop
mov
js
adc
or
mov
test
js
jbe
dec
mov
jae
cmpb
xchg
aam
popa
mov
adc
enter
das
jne
lahf
push
je
mov
xor
fisubl
sub
aas
inc
add
dec
jae
cmp
out
push
pop
cwtl
sbb
shrl
in
pop
lods
sub
test
jecxz
xor
and
shrl
sti
pop
in
testl
out
xlat
mov
loop
ljmp
aas
push
dec
push
push
pop
xor
arpl
insl
je
cmp
adc
adc
dec
ret
cmp
test
in
push
mov
jb
incl
pop
mov
add
cmpsl
jae
mov
mov
pop
mov
pop
repnz
and
cwtl
lret
push
lds
pop
daa
push
lret
rcll
in
insl
aas
xor
dec
bound
jne
es
mov
sahf
lcall
insb
mov
or
hlt
cltd
insb
fldl
ja
push
inc
std
nop
mov
imul
mov
pop
push
mov
cmp
lock
imul
lds
jae
or
jp
jae
outsl
lock
incl
inc
mov
jae
adc
leave
dec
or
jae
push
mov
roll
fisubs
test
fmul
lock
cltd
hlt
jge
inc
repnz
int
adc
ret
xchg
lods
jmp
enter
cmpsb
and
push
leave
jae
inc
dec
daa
loop
or
pop
mov
xor
mov
xor
push
or
aaa
mov
mov
test
push
dec
jae
or
pop
lcall
rcrl
jo
std
repz
in
lahf
mov
insb
inc
cltd
loop
fldt
jne
imul
movsl
ja
adc
jp
test
cmc
xchg
add
push
mov
stc
adc
mov
lcall
lahf
filds
sbb
sub
movb
clc
roll
movsb
loopne
sub
dec
into
lods
orl
add
sub
or
jnp
mov
mov
xchg
sbb
outsl
add
lret
jmp
aam
and
and
dec
ret
push
mov
bnd
xchg
or
cmp
adc
into
jae
sbb
bound
jae
or
ret
xorl
xchg
mov
mov
and
inc
pop
sahf
gs
int
cmpsl
js
add
dec
mov
enter
jae
mov
cmp
mov
insl
mov
jecxz
jp
rclb
pop
cmpsl
jb
xor
jge
and
push
jae
mov
popf
sbb
jge
sbb
dec
mov
pushf
xor
sub
push
jmp
push
pop
insb
and
mov
or
dec
xchg
loop
adc
ret
jne
dec
adc
add
inc
movsl
fnstenv
sahf
cmp
dec
ret
aam
inc
aam
push
lds
hlt
mov
cmp
jl
and
repnz
test
mov
cmpsb
and
inc
aas
psubsw
cwtl
rorl
mov
fcoml
sbb
sbb
adc
out
inc
jl
js
jae
dec
sbb
cmp
rolb
or
lret
push
aaa
mov
pop
fnstcw
cmp
std
mov
movsl
inc
movsb
out
jae
fcmove
mov
cmp
in
cmpsl
lahf
cmp
fstpt
dec
test
loopne
cmc
sub
dec
add
shl
ret
lret
sbb
jp
mov
dec
jae
lcall
and
sub
xor
sahf
xchg
fnstcw
loop
adc
jne
pop
ss
les
or
jl
or
mov
add
shll
pop
gs
push
cmpl
mov
aas
pop
daa
and
shll
je
das
ja
mov
sbb
adc
dec
and
lock
xlat
lods
dec
pushf
xchg
sub
xchg
call
scas
push
xor
mov
je
fstp
xchg
push
jl
jae
push
add
movsl
xchg
or
cwtl
add
push
xlat
aas
or
jo
inc
repnz
push
sub
lret
test
adc
std
xor
pop
les
sub
push
stos
iret
imul
push
xchg
daa
shll
inc
jmp
xor
lret
mov
jb
bound
hlt
lock
add
enter
ss
jae
aam
adc
test
insl
sbb
mov
std
sub
jns
rolb
decb
pop
mov
ret
lds
insl
leave
dec
push
push
add
add
push
jg
mov
shl
jae
icebp
sbb
cmpsb
orb
sub
mov
sub
lea
testl
or
loop
push
push
or
in
push
inc
repz
sub
movsb
sbb
or
sbb
cmp
pop
xor
loopne
fdivs
dec
outsl
and
sbb
push
xchg
xlat
inc
and
sub
cltd
sub
test
lret
cmp
jnp
mov
sti
hlt
call
jle
xor
inc
out
cwtl
mov
push
and
cmc
pop
outsl
mov
jb
and
insb
scas
mov
shrb
insl
adc
dec
jge
cmc
inc
insl
push
mov
bound
sub
pop
frstor
lret
imul
cmpl
jns
sub
mov
and
movsb
mov
fstps
stc
orl
ret
lods
iret
inc
or
push
pop
bnd
out
arpl
gs
push
fiaddl
push
mov
dec
notl
cmpsl
jno
scas
lcall
orl
jns
or
cmp
pop
pop
sbb
es
jno
xchg
scas
idivb
bound
pop
insl
cmc
mov
movsb
xchg
imul
xchg
flds
push
pop
pop
insl
ret
sub
jp
stos
pop
xor
xchg
leave
daa
out
outsl
lahf
insl
or
stos
insl
mov
lcall
jnp
ja
frstor
push
inc
cwtl
mov
dec
pop
jmp
in
insl
sbb
adc
pop
outsl
and
xchg
mov
ret
imul
mov
insl
push
xor
imul
ja
jo
jno
sti
cld
lods
fidivrl
sub
pop
and
enter
cmp
push
cmp
sbb
gs
push
sahf
fsub
mov
sbb
mov
jecxz
inc
cmc
jmp
pop
push
dec
dec
and
fmull
dec
pop
test
test
mov
dec
arpl
ret
mov
imul
sub
mov
lea
jle
int
test
clc
ret
outsb
pop
adc
mov
cld
out
loopne
mov
mov
stc
loope
insl
arpl
pop
mov
div
mov
mov
movsl
adc
jne
sub
and
jbe
mov
sub
sub
lea
jge
mov
sub
pop
adc
or
fcoms
mov
jge
xorb
cmc
mov
stos
push
les
xchg
xchg
jno
cli
fdivrl
fidivrs
sub
jno,pn
jmp
inc
jbe
add
les
mov
jbe
cmp
ljmp
jmp
or
or
inc
in
sub
lret
icebp
jge
addr16
insl
push
xor
test
add
nop
mov
addr16
dec
sub
or
or
push
in
loope
push
add
in
fimull
ret
test
xchg
pop
sub
stos
sub
movsb
sub
cmpsb
lcall
rcr
jbe
loope
cmp
mov
pop
fstl
fidivl
dec
test
aas
outsl
sarb
pop
xchg
repnz
popa
imul
ret
gs
stos
outsl
test
add
shl
inc
xchg
inc
cs
enter
add
xchg
or
iret
jae
inc
sub
dec
or
sub
popa
and
jae
dec
and
es
ljmp
sub
or
mov
jns
lret
jecxz
repnz
ret
popf
mov
leave
into
call
push
add
push
mov
out
arpl
dec
in
xchg
sub
lea
gs
jmp
pop
in
mov
loop
adc
jae
or
test
xchg
or
mov
test
leave
xor
xchg
jae
cmp
fisttpl
mov
and
adc
jae
xor
ss
fdivrl
and
mov
lods
sub
jb
rol
ret
sbb
dec
frstor
and
push
dec
pop
jno
jp
mov
test
mov
push
jbe
aaa
xor
pushf
fnsave
rcll
xchg
ret
jl
jbe
and
mov
push
push
sub
scas
ret
mov
sbb
jae
dec
lods
test
sbb
jl
and
or
pop
mov
adc
loopne
xor
xchg
push
fidivs
push
xchg
cmpsb
jmp
push
bndstx
jae
sbb
jg
outsl
mov
xchg
ja
jecxz
lods
jge
nop
jae
inc
lods
and
loopne
jae
pop
leave
loope
jb
std
popa
push
mov
pop
loop
loopne
mov
pushf
xchg
sahf
and
mov
push
jae
jge
push
push
outsb
aad
xor
movsl
mov
jb
jae
mov
loop
xor
aaa
iret
repz
mov
xchg
inc
scas
sbb
rcr
repnz
jae
scas
xchg
or
xchg
jb
pop
push
xor
lret
shrl
sbb
cmpsb
ljmp
pop
ret
test
pop
out
cmp
cli
lock
pop
loope
inc
jae
cmpsb
ja
mov
xor
sahf
je
jg
stc
push
in
repz
jae
push
or
lahf
popa
pop
test
mov
fildll
add
xchg
jns
fstpt
jae
int
push
mov
xchg
or
xor
add
jge
jae
sbb
fwait
and
sbb
mov
addb
sbb
cltd
lds
xor
jecxz
cmpl
sbb
ret
inc
int
rep
loope
dec
sbb
jmp
out
and
js
jo
mov
jns
cmp
test
jae
test
jbe
xchg
jae
add
push
jae
test
aam
jae
out
test
out
dec
aaa
insl
or
pop
lea
lds
mov
sahf
sbbb
lock
jae
leave
dec
stc
addr16
push
jg
mov
jns
std
adc
pop
pop
add
lds
sub
cltd
jge
dec
popa
jbe
jae
out
lods
mov
jae
popf
mov
je
mov
push
fisubrl
ss
movsb
mov
mov
lock
mov
jae
dec
sbb
jae
fs
notl
ret
les
cmc
jecxz
pop
clc
cmpl
adcl
shll
or
fucomp
inc
xchg
fnstenv
fistps
ficomps
sbb
or
jae
xchg
cwtl
std
cmp
cmp
imul
jae
and
adc
insl
adc
and
mov
ja
cmp
lcall
popa
popa
cli
in
aas
xor
cwtl
jb
add
mov
lret
push
mov
xchg
or
or
mov
inc
lahf
add
cltd
or
cmp
or
iret
push
mov
mulb
xor
inc
xor
pop
inc
ret
stos
in
mov
dec
jae
das
sub
lea
add
notb
fnsave
or
and
lcall
or
jae
lds
loopne
xchg
or
pushf
or
sarl
mov
sti
out
sub
outsb
dec
fnstsw
add
mov
jae
jne
pop
add
xchg
jae
mov
pusha
xor
gs
dec
aam
lds
or
je
jae
sarl
cmpsl
push
stos
sbbl
inc
jne
in
loope
jae
adc
push
jbe
outsl
pop
cmp
icebp
es
cmpb
adc
shrb
pop
enter
sub
cmp
fidivrs
out
or
mov
in
xor
push
in
loope
and
or
or
and
dec
aad
cmp
pop
xchg
sub
xchg
clc
add
inc
inc
insb
mov
pop
sub
mov
add
inc
sahf
cli
fdivp
jge
insb
leave
gs
add
sub
lahf
push
cmp
mov
mov
jne
mov
jae
jmp
cmp
add
mov
ficoml
mov
xor
and
jne
mov
mov
mov
pop
rcrb
popf
outsb
push
or
pop
xchg
mov
xor
shll
lds
mov
repz
mov
mov
jae
jmp
dec
les
or
jb
shrl
mov
shlb
mov
cmp
fiadds
sbb
jg
cmc
jae
and
pop
iret
pop
lret
sub
fcmovu
icebp
sbb
popa
pop
daa
inc
xchg
pop
or
and
faddl
adc
jle
jp
lret
inc
jae
sub
mov
and
add
adc
xchg
loop
shll
jae
and
mov
add
mov
mov
loope
mov
daa
lods
insl
inc
mov
mov
shlb
pusha
scas
imul
bound
mov
push
cwtl
or
sahf
clc
add
and
xor
jae
dec
push
dec
sub
or
ret
cltd
cmpsb
pusha
jae
sbb
mov
lods
pop
and
xor
addr16
jo
test
adc
loope
in
out
ret
cmpb
lods
out
pop
or
aaa
cmp
in
lods
jecxz
fs
in
dec
jae
arpl
scas
push
adc
pop
jmp
std
pusha
push
stos
add
xchg
lds
stos
mov
rclb
stc
repz
inc
xchg
std
ja
jae
stos
iret
jmp
mov
nop
data16
pop
popa
jo
out
iret
int3
xchg
mov
fstl
fwait
jae
aad
cmp
mov
lock
push
insl
in
inc
or
ret
mov
jg,pn
out
into
jle
xor
xor
push
mov
jb
jae
push
mov
xchg
adc
cmpsb
or
adcb
mov
bound
popa
pop
shll
xor
inc
dec
adc
pop
pop
andl
jl
add
dec
mov
outsb
lret
inc
cmc
pushf
adc
jae
or
sbbl
div
mov
insl
fnstenv
sub
pop
das
xchg
sbb
sti
pop
aad
mov
mov
popf
loope
movsl
adc
fs
add
jle
or
push
cmp
mulb
rcrl
sbb
mov
cmpsl
cmc
fwait
mov
mov
mov
cwtl
add
cmc
xor
jae
jmp
call
insl
sub
jle
rorl
mov
jge
mov
clc
repnz
mov
jns
xchg
jg
mov
cld
insl
xor
scas
adc
mov
cld
test
imul
xor
cs
jno
int
lcall
jae
lea
aas
adc
pop
jae
cmp
std
xor
jb
jmp
insb
js
ret
mov
xchg
and
lock
cmc
or
adc
pop
mov
out
rcrb
shl
scas
mov
in
arpl
push
jns
dec
jecxz
xor
mov
mov
push
dec
pop
lock
incb
leave
push
mov
xchg
xor
pop
insl
int
aad
cmp
test
clc
mov
in
mov
pop
mov
sahf
pop
sarb
pop
das
cmp
call
mov
loop
cs
pop
test
jle
xor
bound
pop
rcll
add
adc
and
call
xor
mov
xor
add
dec
pop
repnz
jae
sub
pop
ja
and
ret
cmp
mov
inc
lds
mov
or
xor
mov
ja
stc
out
mov
enter
or
adc
adc
data16
jae
pop
adc
xorb
pop
push
cltd
mov
cmp
push
xchg
fdiv
insl
mov
aad
mov
leave
add
adc
sub
xchg
adc
out
push
or
insl
shrb
movsl
icebp
dec
xor
popa
jge
addr16
leave
shll
lods
mov
dec
dec
jb
jnp
notb
xchg
pop
mov
mov
pushf
int3
pop
xor
inc
fsts
movsl
jb
cmc
lods
addr16
cmp
int3
shlb
je
int3
repz
into
cmp
xchg
arpl
mov
cld
insl
movsl
repnz
mov
sub
or
mov
mov
xchg
ljmp
jne
das
pop
in
lock
adcl
subb
rcl
fs
imul
gs
mov
arpl
sub
dec
jae
mov
rep
cmp
and
mov
sbb
movsl
xor
in
sub
test
xchg
jge
pop
add
sub
aam
add
inc
hlt
js
inc
pop
aaa
fs
cmp
js
rorl
pop
sbb
out
fistps
add
sub
xchg
jae
cmp
cmp
fldl
call
adc
in
sub
cli
cmp
in
fs
sub
scas
int
cmp
andb
mov
mov
add
lahf
pop
ja
add
clc
cmp
pop
xchg
subl
cmp
xorb
inc
in
sub
mov
mov
mov
xor
and
insb
dec
mov
xchg
icebp
std
popa
mul
aam
mov
and
js
cmp
popa
ja
test
or
repz
inc
data16
fstpl
push
in
pop
jns
js
jnp
jae
lcall
test
inc
sti
adc
cli
ret
fidivrl
in
sub
jmp
jge
and
or
outsl
add
and
scas
and
jb
fwait
and
push
dec
js
in
dec
out
xchg
fistpl
test
push
imul
ljmp
inc
dec
adc
mov
mov
push
dec
fwait
stos
cld
aas
pop
insb
stos
pop
rcll
int
jae
cwtl
pop
mov
or
sbb
mov
or
orb
sbb
jae
push
xchg
jns
dec
and
sbb
jp
test
add
mov
mov
clc
ja
push
icebp
mov
sbb
jae
cmpsb
lcall
jle
jae
lea
daa
xor
mov
js
xlat
fs
mov
pop
pop
inc
jae
bnd
test
xchg
sub
mov
jae
push
or
jne
jae
rcl
sub
out
in
cmpsl
call
nop
inc
std
xchg
cwtl
rcrl
sbb
sub
cli
and
stos
xor
in
insb
cmp
push
push
aam
mov
inc
orl
dec
std
aad
jo
pop
mov
xor
cmp
out
pop
cmp
rorb
in
mov
cmp
push
lcall
cmp
add
mov
adc
inc
adc
ficoml
push
repz
dec
sarl
dec
js
adc
inc
jb
mov
jae
dec
mov
lret
inc
push
fnstenv
add
push
mov
xlat
sarl
andb
mov
lahf
add
and
jnp
sbb
adc
lret
rcll
out
push
rorb
jae
mov
imulb
clc
in
nop
test
loope
and
lret
mov
data16
lcall
scas
aas
xchg
jb
jo
pushw
jmp
jno
iret
sub
stos
jae
loope
jb
mov
xor
jecxz
in
sar
movsl
inc
xchg
jae
lret
xchg
adc
cmp
push
adcb
and
or
mov
xlat
in
sbb
push
jp
pop
mov
sbb
rcrl
test
push
mov
xchg
cmp
test
popf
jo
cli
mov
pop
sti
xor
fidivrs
lret
mov
add
inc
push
adc
lcall
fwait
daa
cmp
pop
jne
into
or
sub
subl
jae
or
xor
adc
nop
icebp
lahf
dec
adc
daa
aad
xchg
mov
sbb
jge
pushf
or
jb
adc
test
clc
loop
mov
mov
loopne
insl
add
mov
daa
cmp
shll
jae
pop
push
sub
mov
and
sub
add
rcrl
das
inc
jae
loopne
mov
mov
divl
iret
add
xor
xor
and
sahf
and
shl
das
fadds
mov
negb
mov
insb
mov
or
ja
xchg
jae
jne
jge
sahf
cmc
lret
mov
mov
andl
jge
and
jae
pop
aas
lahf
lcall
pop
mov
pusha
pop
jae
pop
in
nop
jb
mov
mov
loope
movsl
jne
fwait
sbb
jae
sbb
fcoml
mov
lock
sete
cmc
adc
jae
mov
movsl
xchg
push
cltd
movsb
mov
outsb
fisttpl
pusha
and
xor
into
fisubrl
push
or
xchg
mov
jae
push
lds
pop
sub
lret
sbb
subl
daa
cld
lods
jae
je
dec
std
sub
jecxz
mov
mov
jb
jae
in
aad
fnstenv
and
push
dec
jp
jae
xlat
cmp
divb
fsubrl
loop
adc
fbstp
mov
sub
jae
jmp
std
shll
mov
xor
xorl
pop
xor
mov
xor
inc
aaa
into
xchg
leave
mov
idivl
int
in
fisubs
inc
popa
sub
add
stc
xor
jns
ss
push
repz
cmp
ja
jae
lahf
mov
xchg
dec
shll
xor
inc
inc
in
fstps
subl
pop
or
dec
add
jmp
hlt
or
add
jae
xchg
cmp
clc
jae
dec
dec
packuswb
sbb
push
enter
loop
jo
jmp
pop
jae
xchg
mov
pop
push
lods
jae
dec
xor
in
cmp
icebp
add
fistpll
pushf
mov
in
pusha
inc
ja
sbb
fwait
std
adc
mov
cmp
jae
sti
and
fstpt
test
repz
leave
fsub
scas
xchg
adc
popa
out
add
mov
stos
jae
mov
filds
xchg
sub
in
sub
jae
sbbb
jp
popf
repnz
hlt
jo
shlb
lods
cli
mov
aaa
cs
ret
jae
mov
sbb
xor
insb
stos
and
pop
mov
pop
adc
xchg
divb
loopne
or
mov
ss
sbb
jb
inc
sbb
fnstsw
jae
clc
adc
jae
out
xor
jae
loopne
and
jecxz
cli
jae
pop
sti
fildl
ss
jae
scas
push
mov
sbb
mov
pop
jae
addl
mov
cmp
mov
repz
push
sub
or
test
ret
mov
add
je
dec
cmpsb
or
ss
sti
jae
inc
nop
cmp
mov
sbb
call
les
aad
dec
subb
xor
in
repz
jae
adc
loope
imul
pop
or
or
jnp
jns
sbb
lcall
mov
pop
ds
cmp
mov
imul
adc
int
jae
test
jb
sbbb
add
packuswb
adc
in
push
fidivs
lret
nop
mov
mov
dec
cwtl
jae
cmc
pop
mov
sub
jnp
jo
lods
out
daa
xchg
jmp
jb
and
sbb
imul
sbb
popf
fildl
push
mov
es
xlat
add
pop
ss
sar
fnstsw
mov
xor
add
fcomp
test
insl
mull
push
popf
jb
shrl
pop
and
in
xorb
lret
roll
stos
fwait
jae
adc
mov
sbb
lret
mov
mov
lods
pusha
mov
and
insb
xchg
mov
mov
negl
ja
aaa
dec
int3
sub
jecxz
xchg
adc
test
jae
nop
and
cmp
scas
jae
cltd
xor
dec
ss
and
lahf
mov
cld
fsubrs
mov
leave
lcall
mov
int3
xchg
negl
cltd
imul
icebp
jnp
jae
sub
ja
roll
in
adc
movsb
jae
mov
xchg
loop
cmpsb
and
mov
xchg
jnp
jmp
js
xchg
icebp
popf
pop
jae
ljmp
jae
cmpb
mov
xor
js
xor
loopne
scas
jp
aas
inc
mov
xchg
fsubrl
lret
movlps
or
xchg
xor
xlat
icebp
ljmp
mov
orl
xchg
jge
or
pop
dec
add
cmp
dec
jmp
mov
dec
nop
icebp
jge
adc
mov
inc
imul
movsl
push
je
jecxz
jae
and
xchg
sahf
lret
stos
xchg
jae
cmp
stos
jg
sbb
inc
dec
sub
jae
mov
lret
jae
jge
mov
sbbl
push
cli
js
mov
xchg
lods
sbb
pop
lret
test
sbb
jmp
pop
aas
jb
fcoml
bound
js
xor
cmpsb
fistps
stc
pusha
mov
xchg
mov
ja
sarl
mov
add
loope
insl
fldt
sbb
mov
repz
sbb
repz
shlb
jg
mov
repnz
insl
ds
xor
xchg
in
cmpl
insb
push
jo
arpl
leave
hlt
xchg
xchg
xchg
sbb
cmp
rcrb
or
fsts
mov
and
xorb
mov
mov
pop
xchg
cmpsb
repz
jmp
repz
cli
mov
inc
fprem1
pop
adc
mov
int
sahf
fistl
jae
daa
mov
push
cmpsl
mov
js
and
jmp
into
jae
out
test
lds
jae
push
mov
dec
stos
bound
jecxz
jmp
or
arpl
cmp
out
sarb
movsl
jge
ror
in
add
xor
repnz
mov
push
push
fsubrs
sbb
pop
popa
cmp
in
lods
cmp
inc
mov
add
ja
pop
mov
js
popa
inc
lea
testb
xor
jae
mov
mov
and
pop
rclb
jbe
cmp
mov
fsubl
in
push
stos
insl
shrb
je
fcmovb
mov
jb
cmpsl
into
jae
test
sub
mov
fildll
push
scas
mov
popl
popf
mov
jae
adc
xchg
bnd
imul
std
jmp
into
jae
movsl
cwtl
jmp
inc
adc
test
or
insb
sub
mov
push
lcall
fldenv
lds
push
ss
push
sub
sub
gs
jg
lcall
jecxz
xchg
jo
sbb
sahf
int3
insl
mov
out
pushf
lods
xlat
jae
mov
in
pop
add
push
jae
mov
inc
popf
jae
out
sbb
and
xchg
repz
mov
flds
pop
insl
sub
mov
mov
mov
push
jb
mov
stos
test
lds
adc
jae
stos
mov
xor
mov
cmp
mov
das
mov
sbbl
mov
jb
stos
mov
out
xlat
jae
in
lds
jl
jae
jne
lret
mov
andl
jae
lret
lds
lods
aas
push
xchg
pop
stos
push
pushf
push
push
nop
push
daa
movsl
inc
ja
inc
arpl
inc
mov
jo
xchg
lcall
test
inc
jae
dec
ljmp
dec
adc
adc
mov
in
mov
mov
xor
xchg
xchg
lahf
push
mov
insl
xchg
jae
mov
inc
fdivr
sub
dec
push
inc
addr16
pusha
aas
jae
mov
dec
dec
mov
adc
mov
jae
sahf
and
aam
sub
pop
dec
adc
loop
out
jp
inc
xchg
adc
dec
add
mov
xor
ja
dec
push
daa
push
xor
jae
scas
cmc
ret
xchg
jbe
jecxz
add
and
sbb
jge
gs
shlb
xor
jae
pop
push
push
mov
mov
out
repz
clc
jae
cmc
sbb
cld
fsubs
shlb
sbb
jecxz
lock
movsl
in
lods
ss
add
mov
cmpsl
or
les
movsl
repnz
fndisi(8087
push
adc
mov
lock
outsb
xorb
inc
pop
int
outsl
popf
dec
fbld
inc
mov
push
jae
jo
lock
stos
test
adcb
add
mov
insl
jge
fadd
dec
mov
sub
lds
in
mov
mov
sub
cmc
mov
daa
pop
push
jp
mov
add
xchg
repz
ss
jae
ret
xchg
or
and
mov
rcll
in
adc
aam
mov
mov
incb
ret
inc
inc
jae
cmp
aad
xor
fs
mov
cwtl
inc
jmp
and
xor
test
xchg
sbb
push
pop
mov
sbb
jnp
rcl
icebp
sti
insl
js
or
cmc
add
mov
adc
xor
mov
push
popa
leave
jae
aam
cltd
add
vmread
cmpsb
sub
clc
loope
in
and
fcoml
cmpsl
mov
insl
push
rorb
jae
mov
pop
sub
lock
xlat
idivb
xor
xor
fists
lea
rclb
mov
gs
or
sub
xor
and
ljmp
dec
out
je
push
stos
roll
xchg
mov
jae
mov
or
or
aam
jbe
inc
icebp
xchg
rclb
jbe
inc
lret
mov
xor
add
imul
and
cmp
ud1
into
cmp
or
outsb
lock
add
outsb
stos
push
ljmp
outsl
das
or
in
push
xor
je
int
mov
cmp
vsqrtss
in
rcrl
lahf
jp
xchg
cmp
sbb
cli
jle
cmp
lods
mov
jae
adc
sub
jmp
outsb
imul
mov
mov
mov
pop
in
ret
and
notl
xchg
mov
mov
lods
imul
loop
movsl
insb
insl
cmpsl
shll
cmc
mov
insl
sbb
cmpb
jae
mov
or
xchg
mov
push
mov
cli
add
sbb
sub
aam
adc
cmp
test
jae
ficoml
insl
mov
inc
insb
jmp
mov
mov
lds
fwait
stc
enter
lock
xor
xchg
pop
outsl
loope
sbb
xchg
imul
das
sbb
ret
adc
aaa
mov
xchg
mov
cmpsb
fwait
sar
xor
xchg
add
or
jae
cmp
cmp
addb
fldenv
jae
pop
jp
out
jae
fisttpl
popf
jns
ja
mov
jae
fwait
xchg
jo
test
adc
dec
popa
je
xchg
add
and
xor
sbb
insl
jge
push
cmp
repz
fnstsw
push
pop
mov
cmp
std
dec
lods
fbstp
sti
push
jns
jg
jp
insl
inc
cmp
lret
je
imul
or
fcompl
mov
xor
std
nop
mov
sbb
insl
ja
inc
mov
repnz
and
pop
pop
lock
test
jns
mov
jae
fmul
leave
mov
mov
jae
xchg
scas
je
loopne
jbe
mov
sti
fistps
pop
sub
adc
xchg
idivb
out
or
push
insl
inc
xor
insb
cmp
dec
push
or
or
pop
cld
ss
adc
add
push
int
iret
std
repnz
or
mov
lock
daa
jl
jae
cli
pushf
pop
sti
scas
and
adc
jae
jne
adc
insl
leave
push
cltd
nop
mov
and
clc
fnsave
lock
pop
push
pop
push
repz
mov
js
cmp
sbb
push
int
mov
cmc
push
jg
mov
mov
stc
lock
xor
cwtl
and
sti
xorl
cmpsb
xchg
mov
mov
jae
mov
dec
lock
insb
fnstsw
add
adc
fs
in
jmp
scas
cmpsl
mov
lret
vmptrst
xlat
insl
icebp
add
jno
pop
xor
jae
sbbb
insl
and
mov
mov
jae
loopne
jae
fcmovnu
call
jae
dec
stos
xlat
or
cmpsl
push
fildl
mov
mov
adcb
into
dec
lret
pop
ret
adc
nop
cmp
jns
out
icebp
inc
xor
inc
fiaddl
mov
ja
lock
stos
or
xor
cmp
imul
pop
int3
or
dec
xchg
xchg
std
enter
xor
jbe
sti
adc
loope
jg
push
pop
int
dec
cwtl
cli
mov
in
aam
xor
ret
push
iret
cld
std
jae
clc
add
cmp
ret
dec
jae
sub
xchg
jne
jb
test
imul
lods
lea
xchg
jmp
mov
mov
xorl
jae
cmpb
cmp
mov
mov
ret
mov
fsubrl
sub
pop
jle
jae
ja
jns
cli
mov
and
sbb
jmp
hlt
cmc
sbbl
inc
daa
insb
xor
test
out
fsubrs
out
cmp
jae
pusha
sahf
and
and
pop
mov
xchg
push
mov
sbbb
lret
push
insb
test
nop
cltd
adc
adc
cld
das
jb
lods
stc
enter
push
inc
sub
cmpl
dec
xor
sar
xchg
mov
push
cmc
inc
stos
xchg
xorb
mov
clc
fcoml
addr16
ret
fwait
and
mov
fwait
pop
inc
inc
jae
jge
xchg
sbb
mov
fsts
std
mov
add
xchg
aam
ja
rorl
cmpsl
xor
xor
inc
sbb
jae
jbe
je
jge
stos
aad
xchg
lock
sub
sub
cmp
pop
cmp
lcall
mov
icebp
adc
cmp
fnstenv
rclb
cmp
sub
stc
sub
nop
adc
xchg
mov
cmp
and
mov
mov
aad
fildl
fisttpll
mov
jae
cli
pop
sub
mov
rorl
rcll
cmpsb
fcomip
mov
inc
aas
es
insb
sbb
push
sti
lret
insl
push
push
frstor
xlat
mov
adc
or
jb
lret
ret
movsl
sahf
fmuls
int3
loope
frstor
pusha
xor
ss
xchg
xchg
pop
fldl
jae
jne
add
cli
cmc
outsl
pop
mov
adcl
add
adc
jle
jae
js
pop
movsb
test
call
push
jbe
iret
adc
add
dec
ds
mov
xchg
push
out
mov
jo
xchg
sbb
ss
inc
mov
rcll
adc
xchg
clc
lods
test
push
iret
jb
test
push
das
insl
pusha
shll
dec
clc
and
mov
pop
lea
xchg
dec
test
aad
inc
jae
movsb
jne
mov
jae
add
ret
mov
adc
mov
jb
mov
sub
push
fldcw
into
dec
bound
xor
cli
jp
xchg
pop
loope
movsb
je
enter
inc
push
cwtl
cmpb
fildl
cmp
jae
ds
cmp
adc
jae
shlb
popa
sub
ja
mov
inc
mov
mov
jns
add
shll
jae
mov
jle
lds
jb
jae
dec
mov
das
jae
aaa
push
fdivr
sbb
and
cmpsl
loopne
sbb
and
popa
cwtl
xchg
out
add
aas
pop
insb
pop
incb
cmp
loop
push
xchg
mov
jnp
popf
jmp
mov
shr
mov
data16
xlat
jae
mov
test
jae
inc
shlb
jae
es
loopne
and
push
jne
repz
bound
adc
pop
xchg
jae
es
jnp
and
xchg
push
cli
and
in
push
jae
mov
adc
mov
mov
mov
cmp
push
iret
push
fcoml
mov
sub
xor
xchg
icebp
shrb
push
testb
addl
pop
xchg
fldl
xchg
pop
jae
mov
mov
sub
mov
int
jae
sbb
inc
adc
mov
add
std
push
jecxz
outsb
jae
sub
cwtl
jae
mov
inc
jle
icebp
mov
jae
aam
in
shlb
insb
ljmp
imul
mov
jae
xchg
inc
xchg
adc
inc
enter
test
jae
add
call
ss
pusha
ret
xor
cmp
mov
xchg
shrb
movsl
push
push
jo
sti
clc
adc
sbb
dec
out
es
cmp
sbbl
scas
loope
push
sub
lret
xor
cmp
addr16
jae
mov
sub
adc
int3
test
cmp
dec
mov
mov
add
adc
pop
pop
and
pop
mov
xchg
push
dec
adcl
aas
pop
jae
pusha
xlat
push
popa
sub
ret
test
xchg
loopne
and
cmp
xchg
xchg
mov
xor
ret
cmp
aas
ss
and
ja
lods
insl
popf
mov
loope
jae
cwtl
mov
pop
xor
jo
in
dec
add
add
jae
dec
or
jae
push
aas
pop
jge
stos
aaa
lahf
or
fisubs
jb
jae
test
cmp
subl
dec
xor
push
xor
cli
jle
or
outsl
add
dec
mov
in
dec
pop
movsl
push
sar
xor
xlat
inc
pop
lock
jnp
gs
sub
xor
sar
fistps
movsb
mov
sbb
psadbw
ret
sbb
push
int
jae
stos
sahf
movb
loope
insl
push
lock
test
inc
mov
hlt
ja
mov
popa
aam
loope
loopne
or
jo
xlat
xchg
aas
sub
jae
mov
and
pop
and
adc
jae
cmpsb
jne
jp
ret
std
pop
sub
cmp
jae
xchg
push
popf
icebp
movsb
inc
sub
int3
jo
jae
inc
jns
lret
cld
jl
dec
lds
ja
inc
jge
jl
push
dec
rcrl
jnp
jae
sub
push
xor
jp
push
sbb
movsb
inc
jae
loop
ja
mov
sub
adc
inc
std
push
enter
sub
pop
movsl
fucomi
in
jb
mov
or
ret
jae
xor
fisubrs
add
jae
adcb
lahf
stc
ffree
and
rcll
sub
cmp
or
ds
ret
dec
shll
add
jae
fstp
and
aam
in
out
in
jae
test
std
cmp
mov
jae
cmc
cmp
mov
xchg
loope
pop
pop
stc
mov
daa
aaa
jecxz
jnp
jae,pt
nop
push
loopne
test
loope
mov
jae
mov
push
stos
imul
lret
sahf
test
jae
cmp
mov
push
and
insb
jns
mov
aam
mov
enter
add
out
mov
xchg
ret
push
jb
jae
cli
inc
lds
int
outsl
fistl
sbb
inc
cwtl
sub
push
movsb
stc
push
iret
push
ss
mov
arpl
into
mov
les
lds
pop
mov
dec
clc
jecxz
xor
cmp
shrb
xlat
cmc
xchg
and
xchg
pop
test
jns
das
or
dec
addr16
fldenv
sbb
jae
movsl
test
cwtl
adc
or
into
jae
inc
sbb
aas
std
fnsetpm(287
jae
stc
dec
pop
and
push
jp
jecxz
inc
leave
inc
int3
push
aad
icebp
repz
in
nop
sbb
test
test
xor
imul
fbstp
clc
fistl
loope
and
adc
dec
idiv
stos
insb
cwtl
sub
cmp
in
test
dec
pop
repz
aad
mov
ss
dec
dec
fildll
cli
add
jae
sbb
jae
push
or
xchg
lds
jae
cwtl
mov
popa
jecxz
leave
add
enter
into
sahf
jae
imul
push
hlt
inc
mov
fimuls
add
mov
movsl
stc
insb
or
pop
sbb
push
daa
sub
inc
out
out
mov
flds
mov
inc
enter
xchg
xchg
fs
lds
inc
xchg
insb
add
test
movsb
pop
test
mov
out
mov
cmp
hlt
jge
fidivrl
sarb
scas
jae
icebp
daa
cld
int
lret
cmc
outsl
xchg
mov
push
push
fistps
aam
push
stc
clc
es
sub
sub
stos
jae
cmpsb
loop
loope
inc
xor
sbb
jp
and
lods
js
xor
cld
cmp
fildll
lret
repz
sbb
add
push
cmp
xchg
std
add
inc
rol
lahf
cmp
and
dec
mov
insl
test
paddusb
sub
mov
incl
pop
adc
cmp
out
jae
inc
mov
xchg
and
leave
insl
rcr
jp
inc
mov
ret
jae
pop
dec
add
sub
lea
inc
adc
test
cli
xor
std
jmp
xor
push
movsl
insl
add
hlt
cld
sub
or
outsl
das
push
bts
mov
std
pusha
push
xchg
addr16
outsl
enter
adc
in
clc
pop
inc
lcall
inc
sub
mov
mov
adc
jae
push
push
xor
lahf
cmp
adc
movsl
fsubl
pop
sub
ficompl
data16
insb
mov
outsl
sti
es
sub
pop
dec
sbb
ds
outsb
lock
test
mov
or
cmpb
inc
stos
sbb
test
xor
mov
jae
cli
pop
mov
fcmovbe
add
push
mov
push
jl
jae
jb
cmp
popa
dec
add
push
aad
pop
fwait
shr
xor
or
mov
das
cwtl
xor
aam
sbb
cmp
mov
or
addl
popf
fiaddl
ja
inc
jae
cmp
xor
pop
xor
shlb
mov
cmp
adc
aas
sbb
jae
or
and
lds
daa
test
dec
insb
iret
xor
shrl
mov
cmp
imul
rep
ret
adc
add
dec
pushf
notl
je
sub
cmp
adc
cmpsb
jae
or
adc
jne
adc
pusha
loopne
sub
je
push
add
leave
jae
jo
adc
mov
inc
xchg
mov
daa
out
imul
fistl
les
xchg
fsubl
xchg
imul
adc
jecxz
sub
jae
inc
and
std
icebp
and
stc
scas
jecxz
mov
ret
lahf
fwait
int
out
out
outsl
xchg
mov
ffreep
repz
push
mov
xchg
jae
stc
test
dec
fs
aam
push
std
into
lods
imul
frstor
insb
and
or
ficoml
cmp
lcall
rolb
sub
jae
stc
in
mov
adc
mov
das
lock
movsb
orb
ja
jae
out
sub
das
add
xchg
int
loop
add
jae
add
push
loope
jae
xor
xchg
and
lea
pop
mov
push
cwtl
sarb
xor
outsl
xchg
mov
and
or
jne
int3
aas
repnz
jae
test
or
mov
aam
into
jae
stc
mov
push
xlat
inc
pop
inc
jbe
lret
aad
push
mov
xchg
pop
jg
shlb
adc
or
lahf
push
inc
in
insl
inc
mov
mov
sub
fsts
mov
add
mov
or
filds
pop
lods
test
outsb
insl
fmull
inc
xchg
jg
mov
andps
cltd
decl
lret
flds
inc
inc
dec
test
push
and
shl
jle
imul
push
popa
shrl
dec
addl
or
ret
ret
adc
insl
fs
stos
pop
insl
out
jle
xlat
adc
into
ret
imul
orl
sbb
outsl
adc
in
in
mov
jae
pop
add
add
xchg
imul
scas
push
int
push
jo
pusha
sub
pop
fidivl
ret
call
mov
mov
movsb
stc
cmp
pop
and
outsl
sbb
insl
mov
mov
sub
sub
dec
mov
adc
aam
dec
push
mov
ret
push
rorl
int3
sahf
lcall
pop
adc
pop
sbb
insl
inc
ljmp
pop
adc
insl
mov
mov
push
sub
call
pop
sub
or
sbb
pop
fwait
sub
lret
xor
xor
out
ds
lods
ljmp
mull
icebp
dec
repz
fsubr
dec
jmp
or
dec
pop
ror
dec
jge
add
pop
pop
call
sbb
in
fs
out
in
loopne
in
loop
in
lret
mov
add
loop
imul
daa
mov
decl
dec
fisubl
xlat
mov
mov
daa
test
jmp
sbb
adc
dec
ds
dec
pop
push
add
mov
das
popf
or
movsl
sbb
push
dec
push
and
cmc
cmp
jmp
lret
pop
pop
dec
insb
stc
incb
sbb
cmc
inc
mov
ret
push
imul
push
dec
mov
das
or
int3
pop
jecxz
mov
pop
testl
and
inc
mov
jmp
add
aam
cmp
iret
int
xor
js
adc
insl
jnp
loope
and
jge
push
adc
mov
mov
sbb
aad
lret
push
jle
cmpb
push
jo
enter
mov
div
push
test
add
inc
je
xor
outsl
add
in
adc
outsb
push
pop
sbb
fsubs
in
ficomps
dec
clc
and
fdiv
dec
imulb
lock
in
pop
out
dec
call
dec
out
loopne
loop
pop
outsl
mov
fisubrs
les
mov
arpl
dec
or
adc
cmpsb
sub
mov
dec
pushf
sub
sahf
in
cmc
in
cwtl
mov
xchg
xchg
popf
pop
push
adc
dec
out
cs
push
xor
cmpsb
cmp
mov
mov
out
inc
idivl
arpl
imul
push
cmp
pop
repz
cs
int
outsl
inc
dec
dec
inc
mov
add
or
call
or
outsb
or
es
outsb
dec
movsb
fs
cmpsl
inc
mov
sub
clc
std
inc
cmp
lcall
insb
ss
into
mov
imul
out
cmpsl
or
repz
xchg
gs
call
int
lea
bswap
call
add
loope
pushf
inc
aad
xor
aas
sbb
iret
dec
fnsave
leave
out
jle
mov
insl
scas
push
fsts
icebp
cmp
mov
aam
mov
sbb
pop
sub
xor
cmp
inc
leave
in
ret
xor
adcl
xchg
lret
jns
xor
sbb
jp
mov
fcomi
loope
push
fadd
iret
xchg
inc
inc
mov
repz
push
popa
push
sub
and
or
outsl
iret
add
xor
sub
jae
int
cltd
clc
dec
jne
hlt
shlb
push
fnsave
pop
lods
out
jae
add
aaa
lods
adcl
mov
pop
in
xchg
add
inc
fdivrl
pop
dec
sbb
xchg
mov
pop
push
mov
mov
mov
mov
hlt
mov
or
jmp
and
cld
scas
pop
inc
out
jae
int3
lret
mov
loop
xchg
outsb
dec
lret
pop
mov
xchg
push
mov
cmpsl
sub
imul
popa
xchg
inc
gs
push
cmp
data16
jg
pop
jae
inc
loope
cmp
cmpsl
sub
inc
mov
add
rclb
lcall
sar
ljmp
or
ss
dec
cmp
xor
sub
out
in
test
mov
xor
xchg
xchg
shlb
jns
lret
loop
rolb
adc
lods
fwait
call
pop
daa
fndisi(8087
push
jge
mov
jne
xor
movsl
xchg
mov
stc
xchg
inc
mov
jmp
jbe
ja
push
inc
in
adcl
mov
pop
inc
call
cltd
mov
add
mov
loop
and
popf
sub
push
xlat
sahf
sbb
pop
pop
gs
cmp
cwtl
jmp
adc
repnz
repz
xchg
in
cltd
inc
xorb
adc
dec
jg
mov
mov
mov
mov
stos
pop
std
jae
jb
pop
sub
lahf
and
adc
rorb
jae
in
repz
pushl
xor
dec
stos
mov
add
aaa
inc
adc
aad
lods
jae
out
inc
or
dec
cwtl
jae
nop
mov
pushf
jmp
cltd
sub
adc
into
pop
jnp
jecxz
jl
cmp
push
add
sub
adc
ja
cmp
cmp
mul
mov
fwait
mov
pop
lods
sub
shll
adc
mov
and
negl
jae
repnz
pop
icebp
jmp
mov
fdivrs
pop
push
xchg
sbb
imulb
inc
jb
and
imul
popa
cltd
int
data16
xlat
mov
shl
scas
lea
mov
sahf
pop
pop
mov
out
cli
xor
inc
repz
loopne
lds
dec
cltd
inc
add
sub
cmp
ss
sub
std
adc
movsl
notl
clc
jae
sub
inc
jle
adc
and
pop
test
and
adc
jae
xorl
mov
dec
insl
into
test
or
lock
adc
push
or
add
jae
or
mov
dec
fildl
cmp
mov
dec
cmc
mov
les
mov
push
loope
jae
adc
sbb
fdivrs
push
fbld
incb
pop
mov
sbb
cld
pop
cmpsb
push
jns
or
les
mov
adc
cmpsl
sub
sub
vpsrld
into
es
sub
arpl
sarb
or
pop
adc
out
push
mov
cwtl
mov
andl
fdivs
sahf
insb
xchg
test
jne
cwtl
jae
ds
vmovaps
cmpsl
imul
jecxz
push
and
into
testb
pop
and
sub
mov
inc
jae
cmp
movsb
push
stos
stc
xor
and
sbb
jle
mov
icebp
popa
add
das
das
sub
scas
data16
ss
js
xchg
cld
lea
movsl
rcrb
pop
push
push
xchg
addr16
dec
and
mov
inc
data16
je
into
sahf
mov
jae
xchg
daa
lds
popl
pop
lret
mov
lahf
cmc
mov
sahf
or
jae
roll
xchg
loop
xchg
nop
ret
aaa
mov
outsl
xlat
jb
ja
inc
dec
mov
fisubl
es
or
js
stc
jb
jae
lds
add
add
jl
aam
mov
sahf
je
sbb
test
loop
inc
js
fisubl
xchg
sbbl
sbb
cmp
jmp
push
int
inc
daa
jae
aad
mov
mov
cmp
cmp
fisubl
pushf
nop
fs
shll
stc
xor
cmp
subb
pusha
xchg
jae
xchg
push
and
mov
les
int3
jae
aas
pop
dec
inc
call
cmc
in
or
jnp
push
push
mov
jl
push
jg
mov
xor
adc
dec
stos
pop
out
mov
adc
jae
pop
mov
jae
inc
fldenv
mov
sbb
add
stos
and
jbe
icebp
addr16
adcb
outsl
ljmp
mov
fnstenv
adc
cmp
mov
jae
mov
inc
aad
mulb
test
cmp
mov
outsb
sbb
pop
imul
pushf
add
lods
sub
fdivs
mov
test
lods
jnp
dec
iret
dec
sub
lea
addr16
and
cmp
mov
insl
outsb
xor
es
xor
or
je
mov
bound
loop
rorb
cmc
mov
imul
fildl
enter
jae
addr16
add
xchg
add
in
sarb
fnsave
cs
loopne
inc
adc
jae
lcall
jae
add
pop
rclb
add
or
out
mov
xor
sub
mov
adc
inc
xchg
jae
mov
insl
xchg
and
movsb
inc
xchg
insl
lock
cs
lods
dec
out
cmc
insl
repz
outsl
pop
push
push
iret
sub
sub
popa
mov
dec
ret
add
in
std
push
in
shll
dec
test
popf
or
outsb
data16
aas
popa
js
and
jns
ret
push
insl
fcompl
fsubl
xchg
sbb
push
cmp
fdivs
dec
adc
dec
jo
stos
shll
fmulp
popa
daa
iret
repz
jl
imul
jecxz
insb
outsl
sub
mov
inc
repnz
xor
repz
push
push
xor
add
lods
inc
cmp
pop
jns
inc
pop
icebp
mov
in
mov
imul
lods
ja
jbe
repnz
jecxz
inc
push
and
add
ret
orps
or
adc
add
fsubs
push
mov
cwtl
lcall
sub
inc
mov
xchg
add
shrb
dec
add
and
push
xchg
repz
xor
and
pop
jae
inc
xchg
into
mov
sahf
fimuls
jmp
call
repz
fisubs
out
scas
dec
inc
cli
mov
jnp
fnstcw
pop
loopne
int3
xor
cmp
xor
mov
dec
mov
fs
insb
ret
fnstsw
test
dec
add
call
adc
subl
pop
dec
daa
jmp
push
lcall
lahf
shr
pop
rcrl
popf
ret
pushl
sahf
aad
xor
in
adc
out
repz
jae
mov
sti
sbb
aaa
sbb
inc
push
pop
fisubl
mov
cli
cmp
imul
or
jle
pop
jae
fstpt
inc
inc
inc
ret
in
inc
xchg
jno
xorps
and
pop
and
jle
rclb
push
dec
add
dec
mov
or
or
or
xor
push
adc
dec
iret
repnz
sub
xor
jae
test
mov
popa
inc
push
cmpsl
sub
in
fdivrl
ret
mov
jae
cwtl
mov
pushf
push
popf
mov
cmp
inc
das
jae
stos
stos
cmc
popa
or
mov
push
aam
jae
fdivr
jne
xlat
sub
loope
daa
test
leave
sbb
lock
cmpsb
jae
xchg
shr
fiaddl
jae
fdivrl
mov
cmpsb
lcall
pop
jae
xorl
ja
sbbl
clc
popf
jg
bound
adc
add
mull
mov
pop
pop
jae
aas
ja
test
jae
iret
pop
sbb
xchg
out
loope
add
movsb
sbb
es
cmp
mov
jo
inc
sbb
xchg
or
insl
xchg
jle
mov
mov
je
stos
mov
rcrl
fwait
divb
inc
xor
mov
aaa
xchg
jae
mov
das
repnz
int
insb
sub
jne
jb
out
lds
or
sbb
cmp
add
jle
fwait
daa
jae
fsubrs
fdivl
inc
iret
jb
leave
outsl
aad
ljmp
fwait
inc
push
in
and
sbb
pop
popa
test
fsts
and
mov
jae
mov
xchg
jge
add
jbe
jae
xchg
jp
cmc
add
xor
sarb
orb
and
pushl
push
stc
xor
xchg
or
or
xor
pop
andl
lea
mov
add
push
pop
jo
cld
js
pop
sahf
roll
xchg
div
sub
jg
mov
jae
or
push
sbb
js
xor
inc
dec
repz
mov
fimull
add
jb
repnz
dec
loope
repz
daa
xor
mov
jae
sbb
jae
xchg
xchg
push
inc
jne
popa
add
jbe
pop
mov
inc
aas
jae
mov
mov
daa
je
mov
jae
mov
push
dec
inc
and
sbb
and
insb
lods
jl
pop
mov
imull
mov
xor
pop
scas
cmpsl
inc
pop
clc
or
insb
mov
leave
shlb
repnz
pop
fxch
jns
adc
fsubrl
mov
push
pop
add
cltd
sub
pop
jae
orl
mov
jae
pop
mov
iret
push
je
inc
cld
xor
mov
sub
jae
and
loop
adc
lods
pop
cmp
loope
ja
daa
cmp
jae
dec
adc
rolb
mov
ja
push
in
loope
push
jo
pop
pop
es
in
jl
push
push
jae
pop
jge
xor
leave
or
add
adc
xchg
cwtl
sub
mov
or
idivb
push
xchg
and
jae
add
dec
idivb
add
sbb
jae
decl
pop
push
cmc
sbb
popf
sub
in
push
je
out
push
xchg
push
mov
xchg
jnp
es
or
jo
jae
cltd
xor
imul
push
add
pop
jg
cmpsb
pop
jae
add
lds
jo
sbb
outsl
lret
xchg
push
dec
lods
mov
xchg
sub
push
inc
mov
fnstenv
in
jl
jae
push
lds
pop
fisttpl
xchg
fadds
jae
iret
fisubrs
cli
jns
insl
sub
jmp
scas
jae
jle
test
mov
cltd
ret
out
jae
pop
mov
pop
pop
fisttpl
or
and
scas
mov
xchg
xchg
aam
pop
jbe
jae
int
push
mov
repz
mov
sbb
adcl
aad
dec
jle
jae
cmp
stc
movsl
cmpsl
and
or
xor
push
xor
shrl
pop
ret
aad
push
in
insl
daa
mov
xchg
sahf
jae
gs
pop
push
jp
insl
and
inc
jo
xchg
pop
jae
loope
cmp
mov
push
dec
enter
insl
shrl
or
mov
pop
outsb
add
sub
jl
jg
jge
subl
pop
xchg
clc
jl
cld
mov
insb
hlt
jbe
popf
test
dec
jae
add
pop
clc
lods
pop
adc
mov
test
ja
cmp
xchg
loope
cmpsb
mov
in
mov
add
repnz
jae
cmc
sbb
addr16
mov
push
add
jge
pop
bound
mov
jae
xor
jne
pop
mov
jae
sbb
jae
pop
jp
xlat
iret
pushf
aad
shlb
icebp
jae
cmpsl
jnp
xchg
lea
pop
pop
adc
add
xchg
push
push
cmp
jne
dec
into
in
sub
mov
jae
mov
lock
jbe
mov
lahf
lods
mov
adc
cltd
jae
add
mov
and
inc
sub
insb
xor
jg
xchg
popf
push
add
xor
movsl
mov
sbb
neg
mov
jae
fcompl
in
lds
jp
jae
out
and
pop
test
jle
lds
push
jl
xor
jae
loope
mov
or
fwait
lahf
fdivs
cwtl
ss
adc
in
stos
movsb
js
stc
cmpsb
jae
mov
xlat
mov
std
inc
add
popa
ret
xchg
jnp
xor
testl
cmpsb
inc
popa
lret
js
mov
pushf
push
clc
sbb
mov
fiaddl
xor
xor
and
mov
out
into
lods
jge
jnp
fwait
popf
xchg
jae
and
rcrb
iret
mov
adc
push
add
hlt
inc
jae
mov
ret
jae
loop
sbb
rcrb
jae
and
adc
xchg
icebp
test
pushf
xchg
mov
or
pop
stos
jae
movsl
xor
std
jle
pop
pop
cwtl
xor
and
xorl
adc
fdivrp
and
push
and
movsl
push
mov
jg
pop
xor
mov
xor
pop
jae
and
ja
hlt
adc
mov
in
loop
cltd
or
push
mov
pop
push
cs
dec
lret
jo
mov
jge
inc
cwtl
jnp
jg
shrb
push
shlb
mov
jae
fildl
push
jbe
inc
jp
inc
jae
mov
or
mov
aas
pop
rolb
add
jmp
sarl
hlt
push
test
jne
inc
xor
jae
dec
jns
jb
inc
xchg
mov
imul
jne
mov
shlb
xor
jae
jnp
scas
jl
hlt
adc
push
push
xor
fisubrs
cmp
xchg
lock
insb
leave
sbb
mov
movsl
push
and
pusha
in
call
jg
in
cmc
xchg
or
xchg
jae
lea
mov
mov
push
fimull
jae
xchg
daa
xchg
jo
mov
mov
push
mov
jae
movsl
pop
les
nop
outsl
sbb
xchg
loopne
in
inc
js
jae
ljmp
fnstenv
lea
jmp
leave
jl
loope
sub
jae
inc
mov
rclb
cld
andl
std
jb
lret
push
loop
xchg
shr
test
lods
adc
jge
rcrl
ss
test
pop
add
int3
add
inc
movsl
mov
pop
pop
hlt
jae
push
cmp
les
jae
fld
sbb
loopne
test
cmp
into
aad
xchg
lea
sbb
push
hlt
in
lcall
mov
jae
nop
inc
xor
push
clc
outsl
lods
hlt
jl
mov
out
call
jae
push
jmp
loope
lret
pop
jbe
dec
std
cmp
stos
lcall
adc
add
jae
push
gs
hlt
sub
gs
xor
fucomp
ret
mov
mov
shlb
or
mov
or
sub
push
cltd
and
icebp
shlb
dec
adcl
push
fld
mov
repz
pop
push
xor
ret
and
pop
daa
aas
jae
cltd
add
mov
insl
xor
xor
cwtl
or
and
sub
sub
adc
adc
das
jae
and
xchg
pop
cli
inc
imul
add
std
repnz
nop
mov
sub
testl
imul
out
jg
jae
adc
shr
unpckhps
mov
mov
jns
fstl
lds
add
jns
icebp
pop
pop
mov
inc
insl
mov
push
add
push
dec
lods
dec
jne
ljmp
add
loope
mov
jns
pusha
lret
xor
pop
es
push
shlb
adc
ja
mov
jecxz
dec
xchg
dec
xlat
jns
inc
bound
xor
mov
push
xchg
mov
scas
xchg
leave
sete
inc
out
mov
roll
pop
out
movsb
repz
ljmp
jae
and
push
iret
cwtl
jae
pop
xchg
cmpsl
cltd
sub
mov
jmp
shlb
or
jae
mov
push
test
fidivrs
sbb
push
in
test
fsubrl
fidivs
jae
mov
jbe
pop
adc
add
add
leave
jae
xchg
mov
ja
scas
insl
xchg
dec
pop
inc
sahf
inc
lods
mov
rcll
sub
jae
es
add
mov
cltd
imulb
adc
clc
mov
insb
adc
repz
pop
jae
pop
jb
mov
cmp
lcall
insb
mov
test
sahf
xorl
iret
mov
jae
sub
and
lahf
pop
xchg
jae
mov
cmc
xor
dec
jae
test
stos
out
push
popa
mov
mov
jnp
mov
or
adc
xchg
fisttps
jge
mov
sub
jae
loop
scas
clc
loopne
pop
hlt
and
aas
shrb
fiaddl
adc
mov
xchg
mov
imul
jmp
inc
test
mov
mov
cmc
into
out
outsl
dec
mov
cmp
lods
shrl
loop
out
xchg
jg
bound
mov
testl
mov
insb
fldenv
icebp
push
jne
lcall
lret
sub
adc
loope
jae
mov
add
rcll
lret
and
push
cli
pop
test
paddw
aas
mov
inc
lods
jl
cltd
icebp
cmp
sbb
jne
test
xchg
out
xchg
mov
adc
call
mov
mov
in
aad
outsl
clc
add
out
sbb
xor
jecxz
and
mov
pop
cmp
das
jae
mov
sbb
jae
inc
scas
aad
popf
inc
pop
adc
jne
or
pop
lret
push
jae
shl
mov
loop
insl
mov
iret
std
ret
mov
and
add
pop
lcall
cmpsb
cltd
js
mov
stc
imul
jbe
adc
xor
je
ja
or
cld
sbb
daa
test
push
les
xor
mov
pop
rcrb
and
cmovb
xor
sti
icebp
lahf
pop
dec
jns
jae
jbe
aad
daa
notb
repnz
leave
testl
jg
inc
pop
jmp
sub
mov
adc
ljmp
jns
fcmovnb
push
inc
dec
loopne
and
cltd
scas
les
ret
mov
lea
int
jae
add
test
jae
mov
jnp
xor
repz
iret
jb
sbb
scas
fcomp
sbb
in
sub
adc
mov
popa
mov
imulb
jge
jo
mov
jg
in
mov
scas
out
jbe
rorl
lods
cmpsl
sub
pop
pop
cmc
jae
nopl
notb
inc
insb
dec
shl
add
push
mov
insl
add
insb
call
adcl
pop
icebp
dec
insb
mov
fisttpll
jae
pop
scas
leave
mov
js
insl
jmp
push
jne
sbb
push
imul
xchg
inc
inc
mov
leave
rclb
jo
jae
ret
cwtl
mov
xor
insl
adc
cmpsl
or
in
subb
mov
nop
mov
pop
outsb
in
scas
idivl
popa
jnp
inc
push
xor
mov
jae
push
ret
cmp
popa
xor
inc
cltd
add
sub
mov
xchg
test
jle
mov
sbb
shrb
xor
out
leave
push
dec
xlat
cmp
iret
cld
loope
jp
test
das
sbbb
jae
or
out
mov
es
lcall
dec
std
mov
cmp
cli
jp
jae
cmp
push
lret
je
test
jle
or
and
pop
cs
test
or
fbstp
shrl
outsl
lret
pushf
scas
jne
minps
push
cmp
out
xchg
mov
xor
jae
cwtl
lcall
mov
jg
cmp
shr
divl
icebp
aad
add
fisubl
aam
mov
leave
inc
ja
pop
xor
xor
inc
mov
add
clc
push
cmp
fs
push
cmp
push
sub
aas
jecxz
lret
lds
pop
pop
jmp
add
jmp
sub
jmp
mov
cmp
test
nop
jnp
mov
xchg
orl
add
sbb
pop
jae
leave
push
xchg
and
jae
mov
dec
mov
or
cld
into
cmp
xor
xchg
add
pop
jae
cmp
shlb
popf
js
adcb
gs
pop
sbb
insb
push
pusha
xor
mov
xorb
dec
ss
pop
mov
pop
sub
fisttpll
or
or
stc
jae
cmp
mov
jb
lock
push
ret
in
sahf
cltd
daa
nop
lock
shll
mov
adc
add
incb
insb
test
push
or
mov
add
clc
xchg
adc
cwtl
cmp
mov
push
std
insb
and
aad
mov
push
mov
daa
sbb
push
roll
repnz
iret
int
lea
popa
xchg
jmp
cmp
xor
daa
jb
loope
dec
adc
lcall
pop
sub
lahf
or
aam
jae
jg
rcr
jp
inc
icebp
das
push
jae
mov
pop
pop
out
loopne
ss
aad
push
adc
sub
clc
shll
pop
lcall
cmpsl
cmc
mov
repnz
or
out
mov
jae
pop
sub
or
xor
dec
cmpsb
jp
inc
sbb
test
pop
mov
loop
and
dec
and
test
jae
push
mov
jae
aas
sub
das
sbb
push
mov
fwait
xchg
rep
jo
jg
lahf
add
and
imul
xor
mov
mov
bound
add
push
jns
rol
mov
lods
xchg
movsl
adc
fmuls
insb
xlat
xchg
testb
popa
adc
inc
mov
dec
sahf
jae
jg
push
inc
aad
not
jne
and
cltd
lods
push
sub
mov
shl
or
sbb
hlt
sub
lds
push
mov
aas
stc
jb
add
outsl
sub
imul
into
test
fwait
xchg
jecxz
add
xor
jbe
jae
cmp
lds
sarl
cs
xor
pop
pop
jmp
inc
mov
ret
popa
test
lds
or
movsl
jae
stc
push
sahf
iret
pop
jae
inc
loope
push
inc
fidivrs
sub
lea
adc
or
adc
fcompl
mov
jae
ss
ror
cwtl
jae
lret
inc
jo
bound
mov
test
lcall
ja
ret
es
aas
jae
add
inc
push
xchg
repnz
leave
xor
shll
sbb
pushf
pop
xor
jmp
cltd
test
sub
imul
inc
into
in
adc
ss
movsb
test
xor
and
mov
rcrl
dec
add
jae
lcall
pop
cmc
repnz
addl
inc
pusha
sub
xchg
and
sarl
inc
jbe
jae
int3
xchg
pop
dec
leave
pop
push
pop
cmp
xor
je
adc
ret
int
fcmovnbe
fildl
outsl
xchg
aaa
dec
xor
aad
std
cmp
mov
sbb
push
es
imul
lcall
sub
pop
jne
push
sbb
fwait
stc
sbb
js
jae
inc
cmp
and
adc
or
dec
jo
repnz
ret
xor
test
mov
mov
hlt
iret
dec
in
mov
mov
int3
jge
mov
cmp
pop
jae
mov
loop
nop
movb
sbb
leave
add
mov
mov
pop
add
divb
fldl2t
add
jae
movb
dec
fisubrs
push
add
nop
pusha
add
sub
jae
iret
lcall
jge
aad
sub
pop
pop
mov
arpl
lock
jae
and
inc
mov
jae
test
or
sbb
call
inc
dec
mov
shld
enter
and
sub
inc
mov
push
pop
push
scas
mov
sub
mov
stos
mov
in
mov
pop
loop
jne
jae
es
ljmp
sub
jge
cli
sub
lock
jae
faddp
xlat
pop
in
daa
jb
jb
pop
mov
inc
in
lret
or
mov
leave
jmp
mov
xchg
pop
dec
adc
jae
popf
jnp
loope
fs
sbb
fidivs
push
fchs
xchg
or
fmull
pop
loope
cwtl
out
sbb
lcall
dec
pop
jae
sbbl
mov
rcl
jb
xchg
pop
pop
hlt
inc
imul
mov
adc
pop
jae
inc
test
test
sub
lock
insb
pusha
fstl
xor
mov
repz
loope
inc
mov
push
ret
popa
or
aaa
repz
dec
out
jae
sahf
or
lock
js
and
test
push
add
in
in
lods
sub
cwtl
sub
in
shlb
push
shrb
mov
ret
mov
rorb
je
insl
jmp
xchg
ja
or
push
adc
xchg
outsl
push
testb
xchg
aaa
jae
ja
mov
jae
sbb
lods
add
enter
fwait
mov
incl
shr
jbe
dec
lods
dec
in
adcb
cwtl
push
push
cmp
xor
mov
add
sbbl
push
test
xor
xchg
cmp
mov
in
adc
aad
mov
pusha
stos
incl
bnd
and
icebp
scas
pop
inc
in
xchg
outsb
jae
daa
pop
notl
cmp
sbbl
fisttpl
jne
hlt
xchg
inc
pop
lcall
lods
loopne
jmp
jae
pop
push
push
mov
mov
sub
dec
adcl
mull
adcl
and
sbb
je
hlt
ret
lods
lods
pop
xlat
pop
pop
jg
test
insb
leave
xchg
sub
mov
jae
js
lcall
xor
fwait
loop
jb
fcomps
int
mov
movsb
pop
jae
jmp
cmp
out
jae
sahf
pop
test
mov
pusha
in
nop
xor
stos
test
jbe
jle
push
jae
cltd
xchg
mov
lods
repz
and
sbb
xchg
xorl
jecxz
push
jae
adc
inc
mov
jl
aad
push
jbe
jae
sub
imul
lahf
mov
mov
rcll
fists
add
mov
test
pop
outsb
or
loope
xor
dec
imul
in
outsl
jge
xchg
aas
xchg
out
insb
in
and
into
adc
push
lds
mov
popa
iret
sahf
lods
sub
out
icebp
jae
out
jbe
mov
imul
movsl
cmp
adc
pop
inc
jae
dec
shl
jae
sub
in
inc
pop
xorl
ds
cmpsl
scas
shl
dec
clc
movsl
pop
jae
call
fists
sarb
sti
in
daa
jg
mov
or
inc
cmpsb
sarb
leave
jae
inc
pop
sahf
jbe
loope
push
js
adc
inc
iret
mov
and
push
lds
fcmovnb
mov
cli
inc
shlb
push
push
daa
div
jae
notl
or
mov
js
fwait
push
outsl
jae
cltd
fcoml
mov
dec
std
popa
inc
out
mov
icebp
loope
stc
js
sub
cmp
cmp
jae
adc
pop
xor
movsl
fnstenv
js
in
adc
lcall
add
dec
lahf
cmp
fwait
shll
xchg
ret
shl
add
xchg
mov
bound
or
les
iret
jae
rclb
xchg
mov
ja
iret
leave
mov
xchg
ret
mov
mov
mov
movl
jp
mov
add
push
lret
jmp
rorl
in
lcall
or
in
lds
jae
and
lret
shr
fidivs
jae
les
sbb
incl
xchg
add
fwait
mov
jnp
mov
add
jp
testb
or
cmp
add
xchg
push
into
push
ret
jbe
xor
or
decl
jle
cwtl
les
add
jae
mov
jae
jb
icebp
nop
mov
jge
in
sahf
mov
repnz
cmp
aad
cmp
je
sti
pop
ja
add
out
sbbb
pushf
xchg
cmp
or
jmp
stos
and
mov
js
push
jecxz
sbb
jae
xor
cmp
incb
mov
popa
add
add
and
sbb
jae,pt
push
jp
push
insl
jo
xchg
in
mov
in
and
clc
les
push
sub
inc
cmc
add
mov
lock
int3
mov
dec
and
inc
aaa
inc
jae
mov
mov
xor
pop
inc
mov
sarl
jae
out
test
inc
xor
insl
out
mov
jb
jo
xor
lods
js
jne
lods
inc
or
lret
jnp
mov
jmp
rclb
lods
iret
sbb
pop
pusha
adc
popf
popa
ds
sub
mov
or
test
negl
sbb
add
test
cmp
cld
popf
jae
repnz
push
cmp
jae
lret
in
shr
jae
push
jo
lea
cmp
lret
inc
inc
mov
pop
pop
iret
filds
loopne
cmp
xchg
adc
jne
mov
pop
cmp
cltd
inc
cli
mov
jo
jl
push
mov
inc
pop
or
mov
xor
or
pop
mov
jae
stos
inc
incb
sub
aas
jge
test
loop
push
pop
mov
lcall
mov
aas
in
jae
jmp
and
mov
bound
push
test
sbb
aaa
jae
mov
mov
lret
dec
xor
add
movsb
and
jnp
and
lds
add
inc
mov
jae
inc
push
push
cmp
adc
and
mov
jp
cmp
mov
xor
mov
jecxz
insl
inc
fisubs
sbb
insl
push
shlb
xchg
xchg
lock
mov
jae
mov
lret
out
jae
popf
push
push
cmp
scas
and
cmp
imul
addb
inc
js
lret
js
jae
stc
into
or
orl
dec
dec
push
pop
mov
and
cwtl
and
icebp
jae
inc
jmp
mov
add
into
aas
testb
mov
jg
cld
cmc
jbe
adc
or
xchg
pop
jg
mov
pop
popf
sub
xchg
cwtl
nop
pop
push
and
adc
inc
xchg
push
fdivl
inc
dec
cwtl
out
or
mov
xchg
xchg
jae
in
cli
mov
test
hlt
add
xlat
adc
imul
mov
lcall
xor
push
sahf
cmp
daa
lea
cmpsl
push
stos
mov
jmp
aad
ret
icebp
jl
jae
pop
mov
sub
dec
sar
sub
inc
jp
jb
in
nop
es
and
lcall
gs
insb
les
dec
jae
add
mov
jae
or
push
adc
aaa
add
in
push
add
inc
inc
push
mov
xchg
or
push
push
inc
inc
add
inc
lea
sub
mov
repz
push
sbb
hlt
test
fs
jg
mov
leave
ret
or
mov
adc
add
and
popa
push
push
fdivrl
mov
jae
xor
mov
dec
rcrb
pop
push
outsb
dec
cmpsl
mov
push
mov
mov
add
repz
aam
jae
xor
cmp
pop
int3
mov
dec
lret
sub
or
flds
dec
inc
popa
xchg
jp
je
sbb
repz
out
ja
adc
xchg
in
adc
sub
inc
mov
fistpl
jmp
mov
mov
or
int
cmpsb
lret
jns
dec
in
mov
pop
fiadds
xor
push
jl
mov
push
mov
xchg
xor
mov
xchg
add
jae
and
add
mov
or
add
ja
shl
jae
fisubl
pop
sbb
leave
jl
push
sbb
xlat
pop
add
loope
mov
rol
stc
movb
pop
call
mov
mov
jp
outsb
je
sbb
repnz
mov
in
and
adc
jne
jae
sub
push
dec
test
pop
imul
mov
push
shufps
fadd
clc
inc
jp,pn
jae
cld
mov
pusha
add
mov
fwait
pop
lds
cmp
and
imul
mov
mov
cmc
aaa
jae
and
sub
or
mov
sub
call
jae
rorl
jae
adc
cltd
push
jg
stos
xchg
leave
sti
ss
mov
jae
jne
repnz
incl
test
and
rclb
je
roll
jae
inc
popf
mov
int
pop
xchg
pop
mov
mov
test
mov
in
mov
popa
repnz
lret
sub
repz
mov
mov
push
jae
jmp
loop
inc
push
les
mov
stos
cmp
adc
in
fwait
aam
sbb
cmpb
xchg
xor
jne
pusha
xchg
enter
mov
jp
cld
imul
jbe
cmp
divl
daa
adc
fcmovb
xor
lods
lods
cmp
nop
bound
mov
sti
sti
dec
loope
std
mov
cli
stc
pop
cmpsb
push
repnz
call
loop
sub
stc
and
insl
mov
outsl
push
outsb
into
imul
arpl
addr16
iret
xor
pop
mov
sub
xor
inc
pop
loop
push
insl
push
pop
pop
flds
call
imul
fsubrl
push
push
leave
repz
add
loope
clc
iret
jmp
icebp
rcll
or
mov
std
cmc
add
jmp
lods
jecxz
sbb
call
or
rorl
adc
jae
cmc
xchg
sbb
sub
enter
push
lods
lret
mov
fmuls
adc
mov
sarl
std
or
sub
ljmp
int
daa
lret
lret
daa
xlat
stc
movsb
add
jg
add
sub
mov
jae
out
cltd
rcrl
dec
or
pop
shlb
inc
cmc
cmp
xor
mov
test
repz
mov
in
pop
dec
add
push
xor
fists
scas
adc
jne
inc
loope
adcl
lret
push
rorl
cmp
stc
mov
or
pop
adc
fldpi
lods
arpl
mov
std
lret
aaa
into
lds
mov
shrl
and
mov
scas
mov
loope
rcl
sbb
je
les
gs
dec
cltd
adc
fdivrs
frndint
or
mov
sub
xchg
out
mov
jg
mov
lret
push
push
test
jbe
cmp
out
js
outsl
js
cmpsl
outsl
sub
lcall
inc
and
cmp
xor
jl
les
dec
mov
jno
ljmp
push
and
dec
inc
push
mov
sti
jnp
inc
or
out
rorb
sub
cmp
das
insl
cld
pop
mov
outsl
mov
add
xchg
inc
mov
pop
loope
int3
mov
fs
cmp
test
addr16
fstps
repz
adc
mov
jne
mov
mov
in
push
aad
push
jns
sub
mov
pop
arpl
add
or
stos
xchg
xor
jo
shufps
jmp
jmp
jnp
adc
push
sbb
std
and
pop
mov
lods
daa
dec
xchg
jecxz
push
xchg
pop
inc
aas
pop
push
scas
or
fdivs
xchg
lret
bound
dec
pop
pop
clc
mov
jmp
dec
pushf
and
aaa
dec
ret
and
dec
xchg
dec
std
loopne
hlt
pop
nop
adc
xchg
hlt
insb
sbb
or
clc
mov
pop
outsb
repz
aad
pop
fimull
mov
add
fld
add
sub
sub
mov
fwait
sub
iret
clc
push
pop
or
sub
aaa
nop
add
aaa
mov
jne
aaa
in
push
sbb
push
sub
cmpsb
xchg
mov
mov
add
cmp
in
leave
subl
xchg
movsb
cmpsb
and
inc
das
add
cmp
jle
aaa
dec
pop
les
cwtl
mov
sub
push
in
sub
fisubs
aam
and
es
outsl
and
outsb
or
arpl
push
dec
in
dec
sub
dec
fcomps
dec
pop
adc
dec
call
dec
pop
or
jle
incb
insl
dec
cld
insl
insl
std
cli
insl
pop
imulb
lock
pop
in
insl
jge
insl
fucomip
push
jge
push
test
mov
insl
sbb
insl
cwtl
aam
mov
ds
lret
insl
ds
mov
sahf
mov
sbb
scas
in
cmpsb
pop
mov
fcompl
in
mov
outsb
push
pop
jle
jp
jbe
dec
outsb
push
mov
jg
pop
int
push
insl
dec
cmp
dec
cmp
dec
sub
pop
pop
outsb
daa
push
std
and
sub
sbb
sbb
fisttpll
sbb
incb
add
ljmp
stc
sub
xor
in
fisttpll
or
int
and
imul
into
lds
fucomp
mov
mov
mov
mov
mov
sahf
jne
ret
jmp
cs
popa
or
lods
push
imul
addr16
into
jmp
push
xor
dec
imul
push
sub
and
and
dec
dec
sbb
sbb
push
in
push
pop
or
and
fdivr
dec
cli
sub
in
repnz
in
frstor
mov
loop
movsb
into
out
enter
sbb
popf
movsb
mov
mov
test
popf
pop
dec
in
movsb
into
movsb
cmpsb
mov
pop
mov
test
incb
and
jle
or
insb
std
pavgw
or
add
jmp
dec
in
out
fbstp
insl
pop
iret
push
pop
ds
scas
sbb
insl
scas
stos
cmp
insl
ficomps
cs
insl
fldl
into
addr16
jle
sub
mov
insb
lods
cs
and
in
sbb
sub
sub
add
dec
int
ljmp
in
pop
in
out
outsb
in
call
pop
sub
push
into
sbb
pop
or
scas
arpl
insl
insl
sahf
insl
fldl
cmp
cmp
insl
sahf
inc
imul
arpl
std
outsb
scas
add
jmp
addr16
repz
in
jmp
in
jecxz
cmp
pop
insl
cmp
push
sub
jle
push
out
jnp
add
hlt
arpl
gs
in
inc
or
cmpsl
fstpl
dec
push
outsb
push
arpl
adc
or
push
push
out
add
cmp
mulb
jecxz
les
jle
sub
movsb
or
mov
xchg
or
arpl
jge,pt
scas
jbe
popf
jo
push
insl
insw
lea
insl
sub
mov
pop
xor
stos
xchg
add
sbb
jb
cli
mov
aaa
arpl
mov
push
in
pop
popf
or
imul
arpl
pop
scas
stc
dec
cmc
sub
in
jmp
and
dec
aad
shrl
jle
outsl
cmp
imul
jge
sub
test
pop
cmpsl
or
pop
in
subl
int
and
addr16
pop
imul
mov
out
pop
aad
insl
jp
pop
cmp
lods
sbb
jle
jmp
mov
ds
xor
sub
sub
jge
in
and
dec
sbb
fcoml
dec
push
sub
in
add
insl
push
clc
insl
or
dec
fdiv
ds
in
ds
insl
push
aam
mov
insl
std
int3
insl
int
dec
popf
test
sahf
mov
test
dec
stos
insl
pushf
sahf
in
lcall
sub
ficoml
cli
in
sbbb
ljmp
jecxz
dec
jb
mov
or
pop
bound
pop
imul
pop
xchg
push
decb
or
arpl
push
outsb
xor
push
daa
out
and
int
arpl
pop
push
mov
or
outsb
adc
orl
imul
cmp
out
or
pop
outsb
sub
sub
fldcw
sub
lds
jle
push
mov
movsl
or
popf
in
lahf
fstpl
outsb
fwait
or
popf
sub
mov
lea
fnstsw
insl
gs
mov
xor
sub
cmp
dec
pop
sub
push
in
dec
in
dec
out
pop
das
dec
outsb
jg
sbb
ds
push
iret
pop
ds
insl
cwtl
inc
outsl
aas
sub
outsl
js
outsl
clc
cmp
in
xor
shll
sub
xor
sub
jmp
pop
cs
sub
cmp
std
and
dec
mov
out
out
or
insl
or
outsl
test
push
loopne
loop
pop
fisubrs
loopne
aam
jmp
sbb
imul
arpl
les
outsb
jle
pop
lods
shlb
dec
out
ds
mov
mov
dec
scas
dec
mov
dec
mov
jge
insl
fcomps
out
xchg
std
xchg
insl
jg
dec
mov
jge
into
xchg
andb
sub
jl
pop
jp
je
pop
pop
or
jo
insb
imul
push
push
data16
pop
outsb
pop
or
mov
fsubrp
push
dec
in
dec
push
in
inc
fucom
pop
lea
mov
xchg
cmp
pop
lods
cmp
xor
sub
xor
sub
sub
mov
movsb
fstpl
mov
sbb
or
insl
dec
or
or
add
dec
pop
jge
cmp
movsb
stc
sub
movsb
cmc
mov
fsubp
pop
mov
push
xchg
jmp
pop
dec
movsb
in
loope
outsb
pop
int
dec
jecxz
std
pop
dec
dec
cmp
movsbl
sub
iret
sub
shll
mov
cs
mov
popf
pop
pop
insl
stos
dec
sub
sahf
mov
sub
in
insl
in
imul
outsl
mov
outsl
push
imul
dec
push
outsl
int
outsl
cs
outsl
sahf
dec
outsl
lods
inc
outsl
push
xor
mov
pop
adc
push
push
in
or
push
insb
jle
insb
pop
clc
insb
push
hlt
insb
out
repnz
in
arpl
push
sub
int
dec
insb
dec
rcr
sbb
mov
push
mov
je
jb
into
xor
into
das
ds
pop
sbb
or
add
dec
pop
sub
icebp
mov
outsb
imul
aad
int
pop
mov
mov
insl
mov
int
and
addr16
cltd
jge
pop
cmp
in
xchg
jge
imul
loopne
arpl
in
ds
inc
or
mov
pop
and
push
insl
sahf
sbb
adc
outsl
dec
push
outsl
push
add
cli
movsb
hlt
pop
in
imul
aam
lods
rclb
or
arpl
or
arpl
mov
sahf
fistpl
jge
jecxz
mov
sub
push
bound
pop
pop
push
std
inc
lea
cmp
ds
out
das
mov
mov
insl
scas
pop
insl
insl
add
cmc
cmp
insl
jge
insl
shrl
int
iret
ds
mov
dec
dec
mov
cltd
cmp
cmp
pop
pop
arpl
arpl
sub
arpl
push
call
inc
sub
cmp
and
insb
jecxz
and
adc
or
outsb
or
fistpl
sahf
loop
ds
ds
scas
into
insb
pop
lret
fstpt
into
mov
sbb
fistpl
pushf
jecxz
xchg
and
lock
jle
ds
pop
insb
insb
or
ret
mov
jle
insb
int
insb
mov
inc
cmp
insl
dec
daa
imul
arpl
sub
or
mov
in
cmc
fucomp
icebp
cs
out
in
mov
movsb
aad
shll
into
mov
in
scas
or
mov
push
xchg
dec
mov
insl
push
jae
push
pop
mov
in
mov
in
sahf
in
in
idivb
xchg
std
in
mov
in
jl
in
mov
dec
arpl
mov
sub
popf
inc
sub
aas
in
pop
in
xor
push
sub
sub
sub
sub
jge
dec
daa
addr16
pop
sub
and
sbb
dec
sbb
addr16
pop
mov
cwtl
add
add
std
dec
cmp
push
fcomps
cmc
gs
inc
arpl
repz
loopne
arpl
in
js
in
mov
jecxz
in
fistps
in
fstpt
popf
shll
int
pop
iret
cli
xor
sub
sub
jmp
outsb
mov
fidivrs
mov
sub
dec
into
test
fs
xor
dec
sahf
mov
fwait
push
mov
lods
xchg
cmp
push
into
mov
ds
xchg
cs
cmp
cmp
jnp
cmp
ja
sub
jnp
mov
in
or
lods
in
popa
out
in
arpl
outsb
orl
insl
pop
dec
scas
push
cmp
pop
dec
sub
cmp
outsl
mov
imul
cmp
cmp
insl
dec
sub
cld
pop
cs
dec
pop
push
xchg
sub
and
ret
ficomps
sbb
push
pop
push
sbb
jecxz
push
dec
adc
adc
or
mov
outsb
sbb
push
cld
in
imulb
cmp
in
out
ds
mov
in
in
sub
dec
or
int3
les
arpl
pop
mov
mov
outsl
mov
or
scas
clc
pop
insl
stos
insb
frstor
dec
pop
pushf
insl
mov
popf
in
xchg
arpl
lea
mov
pop
pop
dec
xchg
andb
dec
jg
in
js
jbe
test
pop
pop
mov
insb
mov
fs
pop
pop
outsb
mov
arpl
pop
arpl
push
divb
push
in
outsb
movsb
dec
popf
dec
imul
push
cwtl
pop
push
in
inc
cmp
push
popf
cmp
dec
fidivs
or
xor
das
arpl
arpl
dec
out
jl
and
sbb
mov
in
adc
int
or
add
in
add
stc
cs
mov
mov
ds
sub
in
sub
jmp
pop
or
loope
jecxz
jge
pop
fildll
sti
pop
sub
sub
fnsetpm(287
mov
in
sar
xchg
rcr
pop
cs
lret
pop
pop
into
in
or
shll
mov
pop
int
addr16
mov
out
jle
pop
in
lods
sbb
test
stos
cmp
movsl
mov
push
mov
pop
add
fwait
push
pop
inc
fcompl
xchg
dec
or
pop
or
repz
in
test
orl
pop
jno
mov
or
insl
push
insl
std
arpl
loope
adc
pop
insb
inc
ds
outsb
cmp
arpl
into
pop
in
es
std
dec
jge
and
sbb
adc
add
sub
clc
sub
imulb
repnz
out
sub
out
popf
pop
fdivrl
dec
rorb
fmulp
pop
mov
mov
outsb
lods
jge
or
test
sub
dec
dec
int
push
push
repnz
in
ds
aam
in
lret
rcr
ret
mov
pop
pop
enter
and
or
sub
mov
outsl
sbb
imul
jmp
scas
sub
lea
imul
ds
imulb
aam
popf
mov
js,pt
lods
pop
insl
sbb
insl
pop
add
std
leave
sub
inc
mov
insb
sbb
insb
fisubrl
insb
pop
xchg
insb
push
jbe
mov
insb
push
adc
insb
jle
insb
lods
fisttpl
push
rorl
sub
sub
add
dec
out
std
mov
or
arpl
push
push
in
dec
sub
pop
js
sbb
call
adc
packssdw
or
pop
out
pop
dec
dec
std
add
dec
clc
sti
sub
jge
std
icebp
addr16
pop
sub
repz
jecxz
jmp
in
into
jecxz
cmp
or
fisttpl
in
leave
insb
mov
outsb
mov
pop
mov
pop
mov
into
mov
pop
lods
test
pop
outsb
test
jge
rcrl
std
or
insl
cmp
fimuls
arpl
fisttpll
or
addr16
pop
xchg
jg
sahf
jns
fnsave
std
outsl
mov
sub
addr16
arpl
pop
sub
pop
xchg
push
insb
into
push
insb
cmp
arpl
dec
outsl
mov
out
inc
xchg
cs
pop
inc
dec
int
insl
inc
dec
cmp
ds
sub
or
ficomps
sub
cs
sub
addr16
sahf
outsb
sbb
sbb
pop
push
stos
ficomps
adc
pop
push
sub
adc
or
in
push
mov
pop
sub
fiadds
cmp
pop
dec
pop
jle
sub
pop
add
lock
in
in
xchg
call
in
out
in
loopne
movsb
loop
fimuls
pop
outsb
and
in
fsubs
rcrb
in
into
frstor
pop
sub
cmp
in
mov
mov
pop
mov
sub
leave
inc
and
arpl
sub
outsl
mov
imul
sub
jle
push
pop
loopne
jo
in
insb
iret
in
outsb
outsl
les
push
dec
outsb
lea
cs
pusha
aad
bound
addr16
pop
or
lea
push
push
or
dec
or
or
in
inc
outsl
mov
outsl
out
cmp
pop
or
xor
sub
sahf
sub
and
enter
sbb
sbb
in
or
sti
or
mov
sub
add
test
pop
into
stc
pop
pop
jae
cmp
mov
lods
in
int
loope
into
jecxz
out
fistpll
pop
dec
iret
or
push
lds
dec
pop
ret
add
pop
pusha
mov
pop
fstpl
aad
mov
pop
pop
int
arpl
mov
mov
pusha
mov
xchg
lahf
ficomps
in
fwait
dec
xchg
xchg
ficomps
in
lea
in
out
xchg
mov
mov
lods
adcl
push
mov
mov
fiadds
pop
mov
insl
arpl
out
imul
in
cmp
sub
push
arpl
push
ds
push
push
jle
push
std
pop
lods
inc
push
into
inc
dec
pop
cmp
dec
into
ss
lea
outsl
sbb
mov
jp
fisttpll
or
movsb
add
push
imul
push
fistps
in
cld
mov
hlt
call
fadds
out
imul
out
pop
pop
loopne
loop
or
fdivp
movsb
fcomps
push
jg
in
movsb
popf
int3
addr16
into
movsb
les
dec
movsb
mov
mov
push
jle
lods
pop
test
or
push
into
pushf
dec
scas
sahf
ds
cwtl
lea
jge
stos
pop
pop
mov
xchg
outsb
pop
push
xchg
jecxz
jp
std
pop
popf
inc
fs
push
jo
mov
push
ds
bound
push
into
pop
dec
insl
push
ficoms
push
cmp
push
int
dec
or
sahf
aas
movsb
fstpl
mov
cmp
pop
sub
ficomps
dec
sub
and
pop
jnp
mov
pusha
sbb
pop
push
adc
movsb
adc
or
mov
mov
incl
fstpl
stc
sub
pop
mov
jle
ficoms
push
jmp
jmp
into
in
loope
out
dec
pop
outsb
sub
add
cs
or
push
shrl
int
scas
pop
in
lods
pop
mov
mov
mov
popf
pop
jnp
outsb
or
sahf
stos
insl
dec
cmpsl
push
mov
out
mov
inc
pop
sub
subl
in
into
in
jns
in
jne
in
ja
in
jno
adc
aam
scas
arpl
imul
imul
arpl
pop
arpl
push
sub
ljmp
dec
push
or
into
cmp
sbb
arpl
xor
xor
cs
pop
sub
pop
arpl
push
popf
sbb
sbb
outsb
iret
pop
pop
cmp
jge
pop
ds
fiadds
imul
mov
std
in
lock
pop
sbb
int
sub
ljmp
mov
lods
fmuls
int
sub
shrb
mov
or
dec
ret
mov
mov
jecxz
std
sti
or
lods
ficomps
sbb
fisubs
pop
ds
stos
mov
fstl
nop
sub
pop
lea
cmp
fimuls
orb
in
jle
js
test
pop
pop
xchg
jbe
pop
ds
jb
pop
cmp
push
ficomps
cmp
out
bound
pop
push
outsb
pop
dec
insl
pop
or
pop
outsb
and
in
pop
addr16
push
push
in
dec
fucomp
dec
cs
dec
fstpl
pop
cmp
cmp
into
xor
pop
sub
das
sub
sub
daa
sub
and
into
sbb
xor
dec
mov
in
stc
enter
pop
fdivp
insb
dec
rep
jg
insb
sbb
insb
outsl
in
or
out
in
jecxz
js
outsl
pop
sub
jge
in
push
movsb
rorl
imul
push
scas
pop
sbb
mov
imul
int
dec
in
mov
in
lods
ds
test
out
scas
cmpsl
pop
in
mov
out
dec
fwait
into
in
xchg
fucomip
xchg
jg
pop
in
lea
mov
test
mov
jne
dec
cmp
sub
xchg
insl
insb
int
insb
push
gs
outsb
popa
outsb
lods
dec
dec
arpl
insl
cmp
cmp
imul
pop
inc
insb
into
inc
inc
into
inc
insb
push
ds
mov
fisttpl
dec
cs
pop
mov
arpl
cmp
pop
cs
dec
pop
push
push
mov
dec
adc
cmp
std
or
mov
mov
paddusw
adc
cld
insb
ds
ficomps
cli
insb
jge
jecxz
mulb
in
arpl
push
push
ljmp
pop
loopne
pop
xchg
loop
sub
insl
fsubp
mov
ficomps
int3
dec
sbb
lret
imul
mov
pop
in
mov
pop
insl
xchg
mov
pop
push
in
lods
movsb
scas
outsb
test
dec
stos
push
into
pop
dec
pop
int
dec
movsb
insl
jge
cmp
decl
mov
mov
xchg
orb
je
or
lea
imul
popf
dec
pop
adc
mov
std
aas
push
xor
jg
sub
or
aas
or
add
std
sub
ljmp
imull
pop
push
cmp
pop
mov
aad
fstps
pop
pop
jg
push
dec
iret
in
mov
pop
sub
sub
cltd
sub
xchg
sub
sub
mov
orl
jne
jno
out
addr16
faddl
dec
jecxz
dec
sub
dec
outsb
cmp
popa
ss
xor
sub
in
es
sbb
adc
cmp
arpl
adc
push
add
cld
outsl
outsl
scas
hlt
outsl
mov
imul
sub
loop
clc
fimuls
outsl
sbb
imul
cwtl
rorb
mov
mov
dec
mov
mov
out
scas
mov
in
mov
lcall
aam
dec
inc
fldt
jle
insb
int
insb
jle
insb
out
xor
push
das
outsl
lahf
and
fstpl
cmp
sub
or
add
std
sub
xlat
xchg
insb
insb
dec
outsb
insb
sahf
push
mov
into
movsl
outsb
lea
mov
test
imul
mov
push
and
sahf
gs
into
arpl
dec
imul
pop
mov
fsubp
and
insb
mov
jecxz
push
arpl
or
add
fiadds
arpl
jle
pop
or
cmp
imul
dec
mov
mov
pop
lcall
jp,pt
fidivs
dec
jo
insb
or
std
pop
xchg
dec
jecxz
cmp
or
fisubs
outsl
sbb
push
sbb
out
adc
sti
pop
cmc
dec
in
loope
fisttpll
sub
in
mov
and
fsubl
xchg
ds
decb
popf
sbbl
jl
outsb
push
popa
dec
jecxz
dec
sub
dec
arpl
sub
xor
or
adc
or
pop
or
or
out
clc
mov
addr16
or
aam
fstpl
shrb
mov
dec
mov
xor
arpl
sub
mov
mov
outsb
pop
dec
iret
sub
movsb
scas
pop
pop
loopne
cwtl
push
jmp
outsl
lcall
pop
sub
mov
mov
pop
into
add
pop
pop
jl
push
pop
out
js
out
jbe
push
insb
outsb
cmovle
outsl
ljmp
cs
or
popf
inc
cmp
pop
lods
pop
dec
std
dec
xchg
pop
xchg
inc
push
pop
pop
dec
movsb
push
fistpll
cmp
pop
pop
dec
aaa
dec
call
mov
jg
mov
sub
sub
cmp
arpl
sbb
je
xchg
sbb
cs
pop
pop
scas
movsb
add
sti
imul
out
in
cs
jmp
pop
jle
sub
clc
rcll
push
jge
test
insl
push
mov
xchg
push
fiadds
ja
popl
sbb
outsl
jge
outsl
cs
outsl
insl
dec
outsl
mov
outsl
cmp
or
xor
outsl
pop
sbb
push
outsl
sahf
sbb
adc
loopne
mov
repnz
call
imul
addr16
sar
in
int3
pop
movsb
into
std
lret
sarb
jne
or
insl
sbb
push
insl
test
push
incb
js
jo
jle
jle
ret
or
scas
dec
fisttpl
push
xchg
jecxz
cmp
into
and
fstpl
insb
ds
insb
decb
add
mov
push
sti
insb
mov
sahf
jmp
out
popf
jecxz
in
fisttps
xlat
int
push
lea
in
rcrl
mov
dec
mov
scas
jecxz
stos
push
cmpsl
push
jle
lods
xchg
push
mov
push
sahf
pop
adcl
push
sub
jmp
into
pop
imul
inc
mov
arpl
outsl
scas
outsl
outsl
dec
outsl
popf
sbb
in
adc
cmp
outsl
fdivrp
outsl
cs
pop
push
hlt
push
push
ljmp
insl
push
shrb
lret
shrb
insl
dec
mov
sahf
test
out
mov
xchg
or
dec
into
test
jle
je
out
pop
sbb
or
push
pop
sub
pop
add
pop
pop
pop
sbb
sub
push
or
pop
sub
outsb
pop
pop
std
daa
arpl
arpl
pop
dec
cwtl
dec
call
adc
or
lahf
pop
sub
or
movsb
pop
mov
scas
mov
in
test
pop
fsubrp
imul
or
out
outsb
scas
pop
pop
sbb
dec
mov
sub
int
dec
lret
arpl
cmp
pop
pop
sarl
lea
mov
mov
lods
test
movsl
into
cmpsl
insb
mov
int
ds
pop
lea
fwait
into
in
xchg
out
jecxz
outsb
pop
lods
xchg
into
pop
ficomps
mov
push
test
xchg
pop
pop
sbb
push
fwait
dec
pop
sbb
ja
or
outsl
arpl
and
pop
cltd
dec
pop
inc
push
dec
out
dec
jecxz
pop
decb
pop
dec
dec
outsb
inc
mov
arpl
pop
pop
xor
clc
ds
xor
insl
push
dec
pop
sub
sub
in
or
and
into
sbb
push
arpl
dec
mov
ds
add
add
cld
imul
dec
jle
dec
fcomip
sub
in
repnz
call
std
lods
ljmp
insl
dec
fimuls
add
mov
imul
movsb
enter
int
lea
mov
in
mov
mov
mov
dec
pop
jge
outsl
mov
stos
into
xchg
cmpsb
ficomps
mov
in
sahf
dec
in
cwtl
in
in
lcall
pop
in
dec
insl
xchg
insl
std
mov
rcl
push
xchg
lods
and
dec
mov
int
arpl
arpl
data16
pusha
cmp
pop
cmp
arpl
pop
cmp
pop
sub
enter
jle
dec
aas
fimuls
test
cs
outsl
mov
int
insl
inc
mov
pop
out
cmp
aaa
imul
imul
mov
into
and
sbb
test
pop
push
adc
scas
adc
or
add
int
in
pop
jge
add
sti
sub
lods
imull
icebp
imul
out
movsb
in
out
popf
loope
mov
mov
in
xlat
cmp
push
lea
xchg
iret
dec
pop
push
in
lret
mov
dec
dec
sarl
ret
fidivrs
pop
pop
mov
mov
mov
fstpl
pop
mov
int
imul
jecxz
std
dec
jge
cli
inc
fsubp
andl
in
jge
in
jns
pop
jne
or
cmp
pop
sub
imul
push
jle
insb
mov
sub
enter
insl
lods
dec
insl
aas
dec
outsl
fildll
cs
sub
inc
test
pop
insl
inc
outsl
sahf
inc
outsl
cmp
push
loop
pop
jno
mov
fnsave
imul
add
and
pop
sub
and
sbb
ficomps
sub
adc
push
push
push
in
or
in
add
in
add
out
insl
cld
scas
mov
hlt
insl
dec
lock
or
or
insl
loopne,pn
jle
insl
pop
fcoms
push
cwtl
pop
push
shrb
into
cmp
push
faddp
dec
mov
push
out
mov
mov
pop
mov
lcall
scas
push
into
stos
dec
scas
cmpsb
dec
dec
mov
sub
fists
nop
into
mov
orb
pop
in
adc
push
popf
jl
jp
cmp
pop
push
jo
pop
pop
into
insb
arpl
pusha
insl
lods
bound
pop
imul
pop
insl
pop
scas
push
lods
xchg
push
ficomps
mov
out
fisttpll
xchg
dec
push
pop
lods
inc
insl
sahf
inc
outsl
sbb
cmp
out
sbb
push
aaa
ficomps
int
cmp
insl
and
sub
sub
adc
test
fmull
pop
stc
jecxz
sti
arpl
cmp
pop
insl
rep
enter
dec
fsubrp
insl
dec
in
outsl
jg
sub
test
pop
cmp
push
fcmovnu
int
jecxz
shll
int
dec
pop
popf
iret
aad
lret
fimuls
fisttpll
ds
shrl
cwtl
mov
into
mov
mov
in
mov
mov
sahf
lods
dec
dec
scas
ds
movsl
and
mov
in
mov
and
fcompl
jge
sub
xchg
xchg
pop
pop
arpl
mov
outsb
in
icebp
pop
in
adcl
dec
sub
add
pop
push
pop
cmp
cmc
sub
pop
in
pop
imul
dec
sub
dec
pop
out
pop
dec
pop
pop
sub
pop
sub
push
in
sbb
fimuls
ficomps
inc
mov
push
inc
ljmp
out
pop
mov
arpl
dec
scas
xor
jmp
lea
fs
out
insl
cli
popf
out
cmp
cmp
std
push
sub
push
les
dec
pop
mov
push
push
test
dec
movsb
dec
jge
dec
lods
mov
jl
in
jp
movsb
jbe
insb
imul
movsb
pusha
out
pop
addr16
pop
pop
in
pop
dec
in
push
or
lea
in
cmp
pop
aaa
sahf
xor
outsb
sub
insb
sub
fcmovne
sbb
adc
dec
or
mov
mov
sub
std
sub
decl
sbb
mov
mov
insb
popf
out
jecxz
jmp
loope,pt
jecxz
push
fucom
fists
pop
aad
lods
xlat
arpl
sub
fstpt
sub
rcll
pop
mov
mov
scas
mov
mov
and
fmull
fimuls
xchg
insl
outsb
orl
jns
jnp
int
push
jno
lods
sbb
and
dec
arpl
arpl
push
arpl
pop
arpl
pop
arpl
arpl
arpl
arpl
and
push
arpl
insl
mov
dec
sub
jge
insl
xor
jecxz
sub
cs
sub
dec
fisubs
sub
in
sbb
push
dec
sbb
sbb
adc
pop
push
sub
adc
adc
push
dec
or
or
add
add
add
sub
in
hlt
pop
testb
repnz
push
in
imul
in
in
out
loopne
int
in
fcomps
dec
aam
dec
shrb
int3
in
into
fucomp
enter
cs
cmp
dec
mov
dec
mov
mov
mov
pop
lods
dec
scas
and
fsubrl
in
pushf
pop
sahf
dec
cwtl
and
fcoml
mov
mov
mov
mov
int
in
sbbb
std
js
jp
je
pop
jo
scas
jb
cmp
push
sub
pop
pop
pop
dec
push
outsl
push
push
outsl
push
push
and
in
dec
insb
sahf
inc
insb
mov
inc
inc
cmp
sub
arpl
push
mov
popf
sub
jge
insb
ds
insb
cs
sub
pop
sub
sbb
ficomps
in
adc
insb
outsb
or
std
or
sub
sub
add
fldl
in
lcall
dec
sti
and
fdiv
arpl
dec
out
sub
in
in
out
loope
into
jecxz
mov
or
fscale
aad
xlat
push
rorl
dec
or
int
dec
lds
std
shl
mov
mov
out
int
mov
lods
fsubrl
in
cmpsl
insb
mov
and
fcompl
sub
xchg
sub
pop
mov
subl
jg
jnp
jne
ja
outsb
pop
sbb
frstor
int
insb
mov
insb
popf
pop
insb
lea
jge
insb
insl
push
push
push
outsl
dec
push
outsl
ds
popa
cs
arpl
dec
arpl
dec
arpl
inc
arpl
inc
arpl
arpl
push
outsb
cmp
xor
dec
ja
cmp
sub
sub
or
in
es
and
and
fcompl
dec
sbb
adc
push
adc
dec
or
into
or
or
faddl
dec
add
add
cld
pop
clc
dec
cli
and
fdiv
arpl
repnz
in
dec
out
sub
in
in
out
loop
fdivr
in
fisubrl
insb
out
insb
jecxz
rorb
jle
enter
sub
in
ret
insl
or
insl
in
mov
mov
mov
jecxz
test
stos
dec
dec
movsb
dec
cmpsb
ds
and
aam
std
xchg
pop
xchg
insl
mov
outsb
mov
int
mov
dec
test
std
and
jl
jle
js
popf
jp
lea
jbe
int
in
outsb
pop
push
fsubl
pusha
sub
sub
pop
sub
pop
or
pop
fcoml
push
or
dec
outsl
sbb
imul
in
inc
pop
inc
dec
cmp
dec
cmp
aaa
in
xor
dec
das
and
fsubrl
dec
and
and
dec
pop
sub
sbb
adc
cmp
or
sub
in
pop
pop
add
and
fdivr
dec
stc
sub
in
icebp
pop
repz
in
and
fsubr
dec
jmp
in
loope
sahf
jecxz
mov
imul
fcmovnbe
pop
xlat
dec
shll
fmul
dec
iret
sub
in
lds
dec
shll
test
mov
mov
mov
mov
scas
insb
fisubrs
mov
dec
mov
lahf
pop
cltd
dec
fwait
and
fcoml
in
pop
mov
and
faddl
test
jne
push
ja
push
jno
mov
xor
je
outsb
imul
sub
popa
outsb
arpl
pop
sub
pop
outsb
push
popa
push
jecxz
push
sub
push
outsb
dec
popa
dec
jecxz
dec
sub
dec
outsb
inc
addr16
arpl
sub
cmp
insb
push
outsb
push
ja
xor
popf
sub
sub
dec
and
fsubl
dec
and
sbb
push
sbb
dec
adc
push
fcoml
dec
adc
or
or
or
add
jge
sub
pop
clc
dec
cli
and
fdiv
dec
lock
out
cmpsl
and
fsubr
dec
in
out
loopne
pop
fmull
and
aam
ds
lods
into
ds
ret
fstpt
scas
sub
pop
pop
pop
jle
ds
mov
insl
jbe
in
insb
dec
outsb
ret
mov
mov
dec
fcmovnu
inc
mov
aad
xor
pop
int
push
aas
sub
insb
pop
daa
mov
push
and
sub
imul
jge
pop
sbb
repz
insb
sbb
ret
out
pop
mov
pop
pop
insb
sub
outsb
decl
adc
sub
imul
sysenter
mov
or
or
add
iret
popf
mov
fwait
pop
in
xchg
cs
xchg
outsb
jmp
int
imul
imul
arpl
mov
xor
dec
outsl
cmp
popa
ds
pop
dec
pop
dec
fcomps
scas
repz
push
dec
or
dec
pop
mov
js
fsubs
pop
cwtl
insl
jg
insl
clc
xchg
insl
sub
dec
data16
test
push
cs
dec
cmp
mov
mov
cmp
cmp
insl
das
or
pop
cmp
cmp
insl
dec
iret
cmp
dec
mov
sbb
iret
stos
sub
popf
or
pop
xchg
or
push
insl
sub
hlt
test
dec
dec
outsl
js
outsl
iret
dec
imul
clc
cs
sbb
enter
push
sbb
insb
or
sub
insb
cmp
insb
outsl
lock
mov
fucomi
into
ret
mov
into
test
jl
sahf
push
cmp
fstpl
pop
dec
std
dec
scas
pop
or
insl
dec
int
lods
iret
insl
jle
push
fidivrs
fidivs
movsl
into
mov
dec
lahf
scas
cltd
popa
cmovp
scas
push
inc
pop
arpl
lock
out
xor
test
ds
pop
std
es
lods
and
insb
fstl
fistpl
adc
aam
out
dec
adc
fcomps
outsl
fisubl
in
scas
in
int3
jge
into
dec
enter
xor
push
outsb
pop
sub
insl
dec
lods
or
insl
into
movsb
outsl
or
out
pop
jge
or
popf
pop
mov
imul
pop
pop
jo
sti
pop
add
fmull
test
inc
pop
or
dec
pop
movsb
push
lea
scas
pop
sub
lods
out
pop
pop
lods
inc
ds
jecxz
cmp
cmp
inc
out
dec
jmp
jge
imul
sub
ds
or
and
sbb
into
pop
into
or
add
or
or
mov
sahf
cmpsl
sub
mov
jg
pop
sub
fistpl
push
arpl
cmp
xor
pop
pop
dec
xor
mov
add
ds
sub
dec
or
push
in
in
out
dec
loopne
mov
add
popf
sub
mov
into
js
pop
lret
or
ficomps
cs
dec
pop
sub
push
add
into
pop
add
jle
or
mov
pop
pop
das
sub
arpl
or
dec
or
pop
jecxz
jmp
stc
cmp
dec
in
fsubp
cmp
int
pop
cmp
sahf
rorl
iret
sub
lret
sub
lds
mov
sub
mov
out
pop
lods
into
in
sub
inc
dec
jg
cwtl
insl
mov
arpl
insl
fmuls
jg
insl
scas
inc
insl
enter
movsl
test
sub
dec
pop
arpl
cwtl
and
and
sbb
adc
or
add
sub
imulb
in
sub
in
aas
aam
push
sahf
enter
mov
push
stos
outsl
cmp
or
pop
xchg
outsl
mov
mov
mov
sub
test
subb
in
in
insb
or
push
in
pop
sahf
in
sbb
jmp
in
out
pop
pop
loope
dec
ffree
outsb
pop
scas
fldcw
in
fldt
xlat
arpl
lods
dec
int
clc
repz
insl
lret
aad
sub
dec
in
dec
cs
jge
mov
push
pop
push
stos
out
pop
add
insl
popf
ficomps
cs
int
sub
xchg
jno
sbb
push
test
jns
out
jno
pop
and
push
cmp
arpl
gs
push
pop
insb
scas
push
insb
dec
dec
insb
in
dec
insb
outsl
cmp
dec
pop
xor
sub
cs
cs
pop
arpl
push
push
or
push
or
std
shrl
push
in
jecxz
hlt
arpl
repnz
jle
dec
ret
mov
sbb
dec
dec
pop
lea
ds
mov
fsubs
jge
cmp
pop
dec
aam
or
ds
test
sbb
sahf
inc
pop
inc
imul
aas
cmp
cs
int
std
aaa
imul
out
mov
pop
pop
lea
push
mov
sub
popf
sbb
insb
push
pop
outsb
dec
push
pop
jle
sahf
sti
pop
add
dec
fmull
test
mov
imul
stc
or
icebp
mov
jmp
push
in
jecxz
into
fldcw
ds
cmp
scas
ret
imul
into
lods
subl
pop
ja,pt
push
or
fsubrl
arpl
dec
dec
imul
pop
cmp
pop
xor
xor
dec
pop
scas
sub
jg
dec
out
and
mov
scas
adc
lods
pop
jmp
imul
imul
push
insl
stc
mov
ds
add
add
outsl
sbb
sub
dec
sub
aam
pop
sub
int3
or
dec
pop
std
ret
mov
sbb
lods
or
pop
out
test
cmpsb
dec
mov
fcoms
xchg
push
orb
popf
jle
into
jbe
pop
pop
int
push
fisubrs
pop
pop
mov
arpl
bound
ds
outsb
dec
dec
inc
outsl
cmp
pop
or
aaa
lea
sub
and
dec
and
mov
out
outsb
adc
out
or
push
in
or
add
add
loope
sub
imul
movsb
rorl
dec
dec
lods
sti
or
mov
fidivs
insl
lods
in
out
xchg
scas
dec
pop
clc
mov
in
mov
fwait
imul
imul
iret
insl
and
cld
imul
or
insl
ds
push
dec
dec
dec
pop
inc
lock
repz
xor
in
xor
in
cs
movsb
es
sbb
into
adc
add
add
outsl
pop
repnz
out
in
loop
in
fdivrs
ficompl
in
rcrb
pop
ds
int
test
insl
fdivs
cmpsl
into
stos
dec
in
movsb
mov
push
outsb
pop
movsb
xchg
lods
mov
mov
xchg
jl
out
scas
or
jo
outsb
ds
fs
or
insl
sub
dec
aas
push
dec
std
push
dec
into
dec
dec
push
inc
dec
fldl
jle
fidivrs
pop
mov
ds
or
fisubrs
insl
test
insl
fcoms
insl
pop
cmovge
or
out
jmp
cmc
outsb
xchg
repz
dec
ds
dec
in
jecxz
into
repz
addr16
rorl
lret
int
imul
push
pop
pop
sub
mov
movsb
scas
out
xchg
xchg
dec
pop
pop
or
xor
lods
sub
jne
out
into
and
pop
pop
scas
arpl
pop
dec
sbb
dec
dec
dec
mov
ds
xor
and
sahf
in
and
xchg
sbb
pop
popf
in
sbb
in
or
fs
or
add
in
add
into
clc
cmp
pop
cli
insb
jle
insb
lods
imulb
insb
insb
push
in
jecxz
call
cmp
or
outsl
in
sub
or
int
sub
xor
xchg
orb
jle
je
sub
out
insb
imul
pop
pop
test
pop
jge
imul
pop
or
sahf
dec
fstpl
jge
fidivrs
fistps
sub
sbb
pop
add
mov
or
push
icebp
test
pop
mov
imul
lret
imul
stos
int
jge
push
jno,pt
gs
dec
popa
sub
pop
outsb
inc
imul
out
lea
ror
pop
pop
int
insb
or
out
pop
push
insl
sub
mov
das
lcall
imul
cmp
fidivs
sbb
push
lods
pop
pop
sub
arpl
pop
sbb
xlat
arpl
dec
push
dec
outsl
push
dec
or
out
sub
inc
or
inc
in
cmp
pop
enter
nop
fucomp
pop
scas
jmp
ds
imul
decl
popf
movsb
add
std
pop
sti
push
mov
outsb
jmp
fucom
cld
fbld
rcrl
fadd
push
cmpxchg8b
dec
mov
pop
mov
test
pop
mov
outsl
xchg
dec
xchg
pop
sbb
ja
inc
push
insb
test
arpl
imul
pop
push
outsl
fists
mov
lahf
inc
addr16
dec
in
xor
dec
sub
fcompl
adc
pop
add
cld
push
sub
sub
sub
out
sub
in
pop
fsubrl
fimuls
or
mov
outsl
outsl
lret
or
pop
mov
dec
xchg
dec
pop
or
subb
imul
cmp
data16
pop
arpl
push
push
mov
dec
pop
pop
and
out
in
mov
sbb
out
adc
movq
in
fmull
or
dec
lods
and
fdiv
dec
xchg
pop
pop
fwait
ret
outsl
push
jbe
outsl
push
data16
inc
cwtl
inc
pushf
insl
popa
hlt
jno
add
jo
lods
outsl
pop
enter
jne
fsubr
cmp
movsl
mov
int3
imul
mov
push
mov
jmp
movsl
fsubp
sub
push
outsl
stc
lods
sub
mov
xor
jmp
xchg
cmpsl
and
int3
int3
ss
outsw
mov
jmp
adc
sub
dec
stc
addr16
pop
mov
testl
push
sub
dec
outsb
push
in
int
push
int
sub
sbb
imul
sbb
clc
insl
dec
dec
push
pop
into
xor
dec
pop
out
sbb
jno
outsl
gs
mov
adc
data16
inc
aad
dec
les
add
pop
mov
jnp
dec
mov
push
or
popa
adc
imul
sub
pop
insl
ss
fs
cli
push
push
lea
pushl
scas
jo
shl
push
ss
loopne
imul
mov
test
jp
pushf
xor
inc
pop
mov
dec
outsb
outsl
cltd
aad
out
jnp
jmp
jecxz
movsb
jnp
mull
in
sub
hlt
and
into
loope
sub
jae
arpl
push
imul
mov
insl
adc
jb
jb
xor
xchg
add
jae
cmpl
mov
xchg
inc
and
mov
fdivl
xor
popa
dec
mov
dec
push
pushf
pusha
stc
imul
enter
cmp
aaa
std
movsb
add
arpl
sub
pushf
dec
inc
add
pop
ds
pop
sbb
jecxz
push
sbb
inc
js
lret
mov
jecxz
mov
pop
cwtl
frstor
mov
push
notb
rcl
xchg
sbb
enter
jg
push
popf
clc
xor
push
push
push
cmpsb
lcall
xor
imul
arpl
pop
mov
and
and
addr16
movsl
iret
lods
imul
sbb
insb
filds
adc
xchg
cmp
pop
loopne
sub
addr16
rolb
ret
out
cs
lods
or
leave
or
ror
xor
inc
rol
insl
mov
loopne
jb
daa
jmp
pop
xor
arpl
ret
sub
repnz
cmp
and
cmp
scas
xchg
sub
enter
cmp
hlt
mov
cs
add
in
inc
sub
in
push
int3
adc
std
mov
push
mov
arpl
out
jle
inc
in
cld
push
callw
inc
in
cld
dec
push
sbb
or
inc
mov
inc
mov
add
push
mov
dec
pop
push
xorb
pop
jmp
sar
loope
add
fldt
shll
or
fisttpl
lret
clc
shrl
orb
add
xor
dec
cld
push
cmp
and
gs
dec
or
mov
arpl
adc
mov
push
lock
adc
call
cmpsb
pop
sbb
ss
cmp
sub
or
lods
rorb
sub
stos
call
sbb
sbb
dec
jl
ljmp
jo
ljmp
adc
in
adc
dec
mov
mov
cs
test
das
push
je
inc
adc
cwtl
push
push
inc
jmp
je,pt
ljmp
inc
int
gs
sub
pop
das
adc
subb
xor
pusha
adc
arpl
out
notb
mov
mov
loop
jmp
sbb
dec
cmp
fwait
push
loop
xchg
clc
rdpmc
pop
stos
lret
lods
adc
sbb
nop
sbb
dec
adc
stos
mov
jmp
sbb
adc
push
lock
add
adc
push
jecxz
mov
push
fwait
mov
pop
xchg
fs
cs
sbb
je
bound
sbb
jmp
stos
push
shlw
push
push
xchg
mov
imul
ret
aaa
cs
pop
movntps
dec
sbb
push
es
xchg
jnp
lret
jecxz
outsl
push
inc
outsl
jp
call
push
imul
jecxz
mov
push
data16
je
push
cmp
iret
nop
enter
iret
push
inc
push
out
mov
in
mov
sbb
or
push
lock
pop
fbstp
push
mov
scas
ss
es
les
fwait
data16
cs
mov
add
push
adc
ljmp
pop
sbb
in
mov
or
shll
jmp
add
mov
and
dec
inc
and
mov
and
stos
inc
cs
push
shrb
and
mov
dec
and
push
dec
mov
mov
push
cs
call
sub
call
push
jge
jecxz
sarb
dec
mov
out
sub
pop
out
xor
mov
jmp
or
inc
lock
pop
adc
scas
sub
mov
mov
adc
pop
ljmp
xchg
mov
xchg
hlt
xor
cs
fiaddl
lahf
ljmp
divb
dec
cmp
imul
jbe
clc
dec
mov
in
data16
xchg
xchg
jmp
xor
mov
dec
mov
cs
xor
xchg
xor
popf
xchg
cmpsb
out
pushf
xchg
mov
push
lahf
sbb
add
xor
imul
push
out
sti
pop
push
push
inc
sbb
pusha
lret
mov
pop
mov
mov
es
scas
dec
pop
fwait
jmp
push
lahf
push
out
pop
sub
push
cs
sub
mov
les
dec
aam
arpl
xchg
or
imul
insb
bound
into
insl
fsubr
push
inc
xchg
test
xor
in
fiaddl
add
clc
subl
dec
sub
mov
lea
sbb
imul
add
cmp
int
dec
insl
dec
test
outsl
call
mov
adc
arpl
lret
push
aad
flds
pop
outsl
cltd
mov
add
ss
jnp
ficomps
ss
mov
sub
xor
arpl
fs
mov
jnp
and
orl
fnstcw
dec
push
ja
cmpsb
roll
push
imul
stc
fsubl
shlb
dec
jno
pop
cmp
stos
clc
mov
push
mov
jns
inc
mov
xor
mov
xlat
and
rorb
fistps
xchg
push
ljmp
in
push
aaa
push
insl
inc
and
mov
push
stc
ficomps
test
pusha
inc
dec
shlb
int3
addr16
pop
add
mov
aam
push
sbb
inc
pop
or
jno
mov
ret
jl
lret
jnp
ljmp
movsl
lahf
push
imulb
add
fs
sbb
push
xchg
cmpsb
aaa
and
sub
cmp
arpl
mov
mov
insb
dec
sub
cmp
dec
adc
push
dec
popf
xchg
xor
push
jne
sub
sub
cs
scas
shrb
mov
cmp
and
sub
jne
pop
mov
outsl
inc
jne
fwait
ds
sarl
xor
stos
call
jp
mov
into
test
mov
ds
movsl
push
adc
push
and
imul
sub
cmp
and
xor
arpl
mov
cmp
cltd
rcrb
jmp
push
popf
fcmovbe
mov
add
sub
jecxz
and
mov
jbe
and
out
out
mul
aas
or
in
adc
imul
incb
cmp
das
push
inc
stos
add
cld
hlt
sub
roll
data16
scas
loope
push
dec
sbb
jb
call
daa
cmc
sub
cmpsl
insl
outsb
or
pop
jl
push
loopne
jmp
sbb
cmpsl
xor
call
mov
sub
inc
push
fildl
pop
xchg
push
dec
xor
cmp
dec
mov
dec
jp
clc
je
jecxz
stos
notb
mov
mov
arpl
sub
orps
sbb
aam
sbb
bound
jp
dec
call
push
clc
add
jmp
inc
adc
movsl
dec
adc
int
mov
cmpsb
sbb
xor
xchg
data16
push
stc
adc
pop
and
push
gs
dec
arpl
ja
mov
sbb
int3
add
mov
and
dec
aam
cmp
inc
in
orl
ds
pop
sub
pushf
dec
xor
pop
imul
pop
mov
enter
mov
pop
mov
lea
test
lret
int3
mov
in
jb
push
mov
push
pop
mov
int3
ss
arpl
dec
stos
lret
xor
les
add
cld
and
push
addr16
pop
in
movsl
pop
cmp
outsl
jl
dec
pop
add
in
mov
dec
add
bound
lea
popa
xor
push
inc
pop
dec
iret
sbbb
mov
sbb
pushf
pop
pop
insb
lcall
push
pop
inc
mov
add
adc
leave
dec
xchg
add
ljmp
push
inc
dec
in
scas
mov
jb
push
mov
imul
pop
jmp
lea
sub
imul
insb
pop
leave
push
mov
icebp
push
mov
xor
dec
in
jmp
test
inc
enter
test
mov
repnz
pushf
adc
cmp
jno,pn
rorb
push
mov
icebp
push
mov
xor
dec
in
jmp
test
inc
dec
stos
pushf
mov
addr16
arpl
dec
inc
imul
sbb
mov
btr
cld
mov
mov
jno
inc
popf
or
lret
sub
push
mov
clc
pop
lret
xor
mov
push
lahf
test
dec
shll
daa
sub
inc
inc
rcll
mov
mov
xorb
leave
lcall
int
fnclex
push
sub
xchg
mov
mov
or
mov
dec
in
cmpsb
cmpsl
jae
shr
xchg
push
std
aad
push
or
rclb
arpl
dec
xchg
pop
mov
data16
cs
in
test
inc
loopne
sub
and
adc
jbe
ja
jg
insb
mov
cmpsl
add
xchg
cmp
andb
rolb
mov
lret
push
xchg
push
das
inc
fisubl
ljmp
dec
addr16
mov
test
movsb
cmp
xor
mov
xor
dec
outsl
pop
add
sti
pop
dec
xor
mov
push
movsl
lods
pop
xor
ss
or
xchg
lock
push
je
inc
fwait
jg
pop
sbb
es
stos
sub
out
mov
sub
fwait
xor
mov
shrl
push
nop
jecxz
jb
mov
xchg
mov
cld
fistpl
fdivr
fists
adc
pop
cmp
lds
sub
xor
pop
push
sahf
aas
loopne
ret
loopne
cs
out
mov
mov
mov
jne
or
pop
sub
mov
cmp
or
push
pusha
pop
push
xlat
scas
dec
sahf
arpl
jecxz
push
aad
or
dec
fidivs
gs
rcrb
add
or
push
cmp
sbb
int3
jmp
xchg
cltd
fcmovne
push
pop
pop
mov
loope
popa
insl
notb
ja
arpl
mov
xchg
rcll
adc
fwait
push
mov
inc
pop
lds
jb
lahf
xchg
dec
repz
clc
inc
fs
inc
add
jl
jmp
rcrb
ljmp
or
or
push
mov
push
push
cmp
inc
sub
and
xchg
mov
xlat
or
loop
mov
fnsave
xor
cs
xchg
push
dec
movsb
push
inc
sbb
dec
add
pop
cltd
outsl
or
jne
xor
shlb
repz
sbb
ror
pushf
rorl
popa
iret
sbb
mov
popa
test
fldcw
adc
pop
xchg
adc
mov
mov
daa
pusha
dec
push
out
mov
out
into
lret
push
jge
dec
push
push
sub
sbb
lret
data16
pop
test
adc
fwait
mov
je
in
test
xor
add
xchg
mov
jp
xchg
push
sbb
xor
push
push
jo
pop
lea
rorb
pop
or
repz
pop
imul
out
xchg
xchg
in
icebp
int3
daa
repz
je
cli
jecxz
xchg
adc
inc
aas
imul
sti
mov
scas
jnp
xlat
inc
xor
rcrb
gs
shlb
daa
adc
dec
jmp
pop
repnz
push
call
ljmp
test
dec
inc
gs
mov
fs
push
mov
jne
xor
out
dec
mov
sahf
outsb
push
mov
push
sbb
sbb
add
xor
mov
sub
mov
pop
push
mov
hlt
adc
sbb
pusha
ucomiss
test
imul
pop
inc
dec
jle
lret
jmp
mov
cmp
push
pop
in
push
popf
loop
add
cwtl
je
call
les
mov
jecxz
jle
arpl
les
sbb
rcr
lret
fwait
push
dec
mov
cmp
jge
in
insb
xchg
popa
xor
cltd
fidivl
outsl
dec
imul
or
jl
jecxz
gs
dec
addr16
dec
aam
mov
stos
mov
sti
fldt
iret
pop
test
fldcw
sub
lahf
sbb
loope
ret
in
sti
inc
shlb
push
adcl
hlt
lea
insl
je
scas
arpl
into
arpl
es
lods
pop
insl
pop
and
mov
jnp
mov
fisubrl
cli
shrb
and
xor
iret
and
cs
jecxz
adc
jo
repnz
insl
pop
iret
mov
lods
loop
fwait
mov
mov
inc
or
mov
push
lret
lret
movq
stos
arpl
fdivr
fisubrl
insb
sbb
fadd
das
lahf
push
and
je
sub
arpl
mov
mov
inc
mov
xor
gs
popf
mov
das
fs
or
and
arpl
inc
movsl
mov
xor
das
imul
sbb
les
lret
dec
dec
xchg
movsb
ds
add
jl
pop
repz
enter
cmp
es
xor
xorb
pop
je
jecxz
ror
or
popa
rorb
ja
mov
aaa
sahf
fsubrl
sahf
mov
into
lock
xchg
or
ds
mov
ja
pop
pop
mov
fcmove
inc
adc
out
pop
mov
data16
push
lret
mov
call
adc
dec
sbb
dec
sub
sti
jne
inc
push
jae
sub
sti
js
jne
cwtl
jne
fwait
mov
ja
out
push
adc
jne
repnz
lock
shll
add
and
arpl
xor
mov
mov
dec
or
arpl
daa
jnp
push
or
addr16
push
push
rol
push
rorb
mov
arpl
ret
or
jno
cmp
inc
arpl
push
inc
mov
leave
fs
dec
lock
pop
int
insb
icebp
dec
sarl
ss
mov
mov
push
in
out
jmp
fcoms
push
pop
aas
jnp
push
inc
push
arpl
cmc
fbstp
mov
xor
xlat
sbb
xchg
ret
jg
out
fwait
sti
sub
dec
roll
std
sbb
adc
xor
loopne
ss
sahf
xor
stos
hlt
inc
hlt
push
cmpl
arpl
jmp
jecxz
jb
lret
jmp
daa
jge
cmp
jo
imul
sarb
sub
mov
inc
push
aas
fcomps
xchg
in
inc
xor
inc
push
mov
imul
fmull
jecxz
fistpl
popa
dec
xchg
xor
sbb
dec
repz
mov
bound
cli
lcall
adc
subl
mov
push
xchg
cli
sub
push
mov
pop
pop
mov
mov
xchg
sub
insl
call
pop
xor
ljmp
arpl
xchg
mov
push
fwait
or
in
push
test
jge
pop
pop
push
mov
je
inc
pop
data16
stos
mov
in
je
lret
call
dec
cmp
jb
and
mov
int3
pop
ja
lcall
sbb
dec
test
xchg
fwait
jle
je
andl
add
adc
cwtl
pop
data16
insl
adc
mov
cltd
sbb
ret
jecxz
mov
pop
jb
mov
sub
jne
cmp
pop
fistps
mov
push
dec
mov
dec
testl
rorl
mov
out
out
sbb
cs
filds
arpl
mov
mov
iret
popf
in
into
push
pop
pop
inc
mov
cmpl
add
out
or
fsub
dec
mov
cmc
push
ljmp
cmp
cmc
adc
and
push
cmp
sub
jg
stos
outsl
xchg
push
mov
aas
pop
dec
adc
push
or
sub
es
call
lea
ret
jo
push
mov
adc
data16
pushf
int3
enter
lods
lret
das
les
cs
push
jle
push
cmp
mov
imul
lods
pop
xchg
hlt
pop
xor
mov
mov
outsl
xor
push
pop
xchg
xchg
call
ds
inc
out
mov
inc
pop
pop
xchg
xchg
aaa
xchg
out
pop
xchg
xor
xor
push
xchg
bound
cld
jnp
test
fcoml
repnz
test
inc
pop
pop
xchg
xchg
js
out
mov
dec
pushf
call
aaa
mov
push
mov
pop
testb
xor
pop
movsb
pop
clc
push
dec
outsl
dec
jg
imul
inc
cs
dec
movsl
das
fwait
sub
pop
dec
lahf
xchg
rcll
movsb
push
sarl
inc
lea
xchg
xor
push
jge
mov
sti
loop
das
dec
fisubs
dec
cmp
add
popf
sbb
mov
cmp
pusha
inc
into
jle
ret
inc
sti
sub
mov
lcall
add
addl
nop
in
mov
pop
mov
lea
and
jecxz
add
sub
cmp
inc
aad
push
arpl
sbb
shlb
push
mov
enter
aad
mov
scas
pop
mov
sbb
ljmp
xchg
fbstp
out
les
pop
pushf
xchg
jl
scas
mov
stos
es
out
sbb
imul
dec
push
sub
lret
adc
cli
push
jecxz
fcompl
push
dec
push
jns
cld
xor
pop
and
adc
stc
lock
subl
pop
add
clc
sbb
push
sarb
rclb
pop
jnp
outsb
pop
mov
inc
inc
icebp
xor
mov
add
out
jb
imul
flds
lahf
xchg
jp
add
mov
or
cmp
cs
sbb
arpl
clc
mov
dec
mov
and
arpl
jl
arpl
popf
jmp
lock
sarl
es
jmp
scas
call
mov
sub
loop
dec
in
jle
and
sbb
cld
mov
pop
imul
mov
xchg
push
sub
shl
test
in
jbe
pop
outsb
daa
adc
xor
das
pop
aas
iret
mov
pop
mov
movsb
addr16
xchg
adcl
and
mov
hlt
lods
cs
and
mov
mov
jle
pushf
fwait
xor
jne
add
and
or
pop
es
and
movsl
out
lret
xchg
xor
pop
pop
fstpt
shll
dec
xor
popf
pop
lret
out
dec
xor
lods
jnp
pop
cmp
mov
cmp
fsubs
mov
jp
add
into
movsl
jnp
cld
dec
stos
sbb
fs
inc
call
mov
stos
jb
cld
fs
test
decl
sbb
test
fs
mov
adc
adc
mov
jg
dec
scas
pop
dec
scas
scas
ljmp
imul
lods
inc
cs
ret
mov
mov
sub
lods
mov
je
test
sub
dec
lods
sti
dec
ljmp
lods
out
iret
mov
call
pop
add
pop
dec
inc
mov
mov
mov
stos
lea
movsb
mov
arpl
stos
push
mov
sub
mov
dec
xchg
test
mov
lret
cmpsl
test
aaa
mov
jp
mov
dec
cs
mov
mov
jp
dec
mov
imul
loope
int
mov
fdivl
ret
shlb
adcb
dec
mov
dec
xorl
or
xchg
subb
mov
sti
sbb
sbb
mov
mov
inc
mov
jmp
mov
call
xchg
pop
mov
adc
adc
mov
add
xor
inc
cmp
xchg
mov
pop
sbb
jo
insl
pop
fwait
mov
iret
push
int3
mov
push
frstor
bound
pusha
out
mov
lret
dec
mov
adc
push
hlt
shl
mov
add
shll
mov
movsl
mov
int
mov
aam
pop
ja
loopne
or
outsl
movsl
cmpsb
add
mov
dec
in
mov
dec
cwtl
jge
cld
cs
stos
adc
test
pop
mov
cld
sbb
or
cs
mov
pop
ret
rcrl
sub
ret
les
addr16
mov
aad
data16
roll
rcll
shll
roll
ja
inc
pop
movsl
mov
in
shrb
mov
arpl
jmp
arpl
cwtl
dec
fs
sbb
decl
sbb
ljmp
lds
sub
stos
call
lds
test
pop
lods
sbb
nop
jb
cmc
adc
sbb
lret
cltd
dec
xchg
ljmp
arpl
push
leave
inc
cs
mov
filds
mov
movsl
stc
cs
mov
iret
in
dec
es
ret
jl
iret
bound
mov
data16
push
iret
xchg
lcall
jecxz
pop
pusha
int
call
mov
inc
pop
mov
rol
cs
roll
arpl
mov
sarl
shll
push
roll
xchg
roll
rcl
mov
xor
xlat
pop
jmp
xlat
adc
sbb
jnp
call
cmp
xlat
adc
loopne
and
call
nop
stos
test
xor
js
test
mov
fucomi
js
inc
cs
mov
out
inc
pop
jne
ja
mov
pop
jg
inc
fstps
adc
pop
fs
inc
jne
or
lods
push
fsts
sub
lods
fists
mov
ret
addb
mov
ret
mov
test
ret
mov
dec
mov
mov
movsb
mov
jmp
fisttps
mov
lret
mov
cmp
btc
pop
cmp
mov
jmp
pop
mov
jmp
push
adc
jecxz
mov
call
shll
push
jmp
jecxz
cltd
adc
jl
jecxz
cmp
arpl
pushf
xchg
call
xchg
loope
popl
out
loope
test
loope
call
mov
mov
or
fs
mov
les
jmp
mov
outsb
out
test
out
jns
or
cmp
cs
shl
in
test
in
fsubrs
in
fwait
mov
adc
es
dec
clc
fistpll
dec
mov
push
test
movsb
in
dec
jmp
sbbb
movsl
fwait
sub
arpl
jmp
fwait
sub
data16
pop
js
arpl
inc
dec
cmp
dec
xlat
jmp
cmp
or
lret
jecxz
icebp
shrb
jecxz
push
mov
xlat
imul
or
push
dec
pop
jmp
adc
push
mov
mov
dec
adc
out
das
mov
dec
dec
out
and
mov
mov
lret
pop
in
andl
lea
xor
data16
call
jns
repz
mov
out
xchg
adc
pushf
into
xchg
push
adc
xchg
fs
cld
sbb
mov
fs
repz
push
rclb
or
lea
call
in
imul
add
cmp
imul
pop
repz
loopne
stos
sbb
or
pushf
pop
and
inc
xor
mov
add
bound
hlt
add
sbbl
xchg
sub
es
imul
icebp
imul
jo
adc
out
jecxz
xor
in
jmp
or
mul
mov
pop
testl
xor
mov
fdivrl
jmp
or
dec
xchg
pop
arpl
jo
insb
mov
cmc
cmp
cmp
bound
fs
cmc
sbb
data16
adc
call
pop
aad
lea
jo
call
jo
dec
mov
sti
scas
lock
stos
stos
scas
pop
sti
pop
sar
cmp
out
sub
imul
pop
xor
call
inc
aas
andl
imul
pop
pushf
sbb
stc
imul
loopne
out
test
imul
enter
mov
out
inc
xor
dec
imul
stc
imul
stc
dec
or
lock
jmp
loope
jmp
ret
in
jge
xor
pushl
fs
lcall
rcrl
pop
mov
stos
clc
sti
sbb
ljmp
ljmp
dec
popf
std
imul
cs
imul
icebp
mov
imul
std
imul
std
mov
push
out
fdivr
add
cmpsl
add
out
sub
hlt
cs
add
add
nop
push
ss
stos
pop
xchg
xor
int3
xchg
data16
add
arpl
lret
mov
push
dec
lahf
lcall
dec
add
pop
adc
lahf
dec
sub
or
push
pop
jg
adc
mov
mov
jl
sub
sarl
data16
mov
jmp
adc
loop
cs
inc
jb
arpl
jo
arpl
push
jl
or
mov
roll
clc
jns
arpl
ss
fwait
adc
icebp
dec
xchg
or
shr
lods
call
or
mov
lsl
pop
in
xchg
pop
jecxz
jle
xor
and
push
adc
loopne
ss
pop
mov
subb
or
arpl
mov
push
xchg
dec
rorb
cmp
jl
and
dec
bound
lods
adc
sbb
dec
out
adc
cld
adc
adc
xor
shl
test
inc
call
je
adc
adc
and
sbb
loopne
scas
cld
imull
adc
je
push
dec
stos
pop
call
adc
jns
push
call
inc
ljmp
pop
mov
dec
pop
test
inc
and
call
pop
push
arpl
inc
jl
arpl
push
mov
push
pop
out
rcll
out
adc
out
push
adc
out
xchg
adc
sbb
subw
retw
mov
pop
inc
ljmp
sbb
sub
inc
pop
pop
sbb
sub
inc
call
adc
mov
cmp
mov
push
push
out
outsl
sbb
out
xor
imul
mov
hlt
rcrb
shll
data16
xchg
inc
sbb
pop
sbb
int3
adc
data16
pop
push
arpl
lret
mov
fadds
loopne
jnp
xor
pop
sbb
jmp
sbb
pop
dec
sbb
ljmp
jmp
and
sub
pop
roll
data16
inc
and
sub
aad
and
sub
rorl
jl
mov
xor
push
jl
and
cmp
rcrl
leave
daa
mov
push
test
push
push
cld
pop
jnp
scas
jg
mov
ss
shlb
xchg
fcmovne
inc
call
ljmp
jno
or
daa
imul
mov
push
bound
std
out
jecxz
lret
loopne
fs
dec
sbb
shr
and
arpl
adc
pop
dec
jecxz
out
pminsw
enter
and
xchg
arpl
sub
imul
mull
jge
inc
jle
mov
sbb
mov
stos
imul
repz
imul
push
push
cmpsb
and
inc
stc
sub
xor
subb
ret
dec
daa
data16
inc
les
and
pop
dec
mov
pop
dec
ljmp
sub
cs
sub
out
and
pop
movsb
call
mov
sub
fs
sub
mov
adc
push
sbb
cmpb
dec
xor
sbb
std
sub
xchg
ffreep
sbb
mov
xchg
gs
popf
movsl
xor
mov
sbb
lahf
sbb
mov
test
call
negb
outsl
in
mov
movsb
push
sbb
xchg
pop
cs
loop
jecxz
mov
sub
add
pop
pop
popf
rcll
out
ljmp
dec
mull
add
xchg
mov
mov
inc
es
pop
addr16
es
dec
movsl
xor
mov
cmpl
packssdw
rdpmc
hlt
loopne
jecxz
jl
lcall
xorl
std
xor
mov
mov
ja
dec
cltd
xor
cmp
sahf
pop
ret
fsub
dec
jno
and
jb
mov
stos
stos
pushf
cli
cli
dec
out
mov
in
cmpsb
pop
lds
aaa
pop
mov
loope
aaa
add
jl
loop
fs
aaa
adc
std
sub
je
in
aaa
add
in
push
push
jl
mov
push
pop
cs
xchg
pushf
mov
mov
call
scas
cs
imul
jno
sbb
jns
hlt
sub
mov
loope
bound
ss
and
nop
dec
test
lock
data16
aaa
in
ror
xor
xchg
or
es
ljmp
add
les
mov
mov
dec
lahf
cmp
pushl
imul
cmp
dec
push
adcw
jno
mov
fdivs
and
pop
sbb
sbb
add
nop
mov
push
xor
jb
pusha
xor
jg
in
cmp
or
bound
sub
sub
lods
mov
cmp
mov
ss
aas
or
mov
ljmp
aas
test
ret
in
cmp
dec
arpl
shl
mov
test
mov
test
and
inc
inc
call
and
stos
sub
and
sbb
daa
mov
and
sub
sahf
cmp
idivb
adc
sub
in
lods
stc
push
mov
xchg
loope
sbb
ljmp
cmovae
gs
inc
pop
xchg
imul
fists
ror
mov
inc
xchg
pop
enter
popf
es
sbb
cmp
mov
stc
fwait
sub
sbb
aad
mov
sbb
cltd
inc
adc
sub
sbb
sbb
sub
push
inc
push
ret
pslld
ss
mov
or
arpl
dec
aas
hlt
xor
rclb
clc
push
fcoms
mov
push
leave
in
pop
mov
dec
mov
psubb
and
in
inc
xor
push
push
mov
call
mov
imul
push
mov
inc
push
scas
or
inc
pop
push
inc
jle
cmp
mov
dec
test
jns
dec
repnz
aaa
mov
adc
lods
loope
and
ds
sbb
xchg
fsubr
mov
push
clc
add
jecxz
dec
sbb
aam
out
sub
iret
into
mov
or
ror
pop
xchg
dec
test
adc
push
jmp
cmpsb
movsb
mov
sbb
mov
pop
out
pop
and
iret
push
mov
mov
cmp
xor
or
sbb
dec
sbb
dec
adc
test
dec
clc
pop
dec
je
mov
sub
xchg
dec
mov
adc
sbb
incb
xchg
mov
pop
adcb
data16
orb
dec
add
cld
and
dec
dec
mov
mov
adc
mov
call
mov
sahf
popf
outsl
sbb
push
and
mov
je
insb
mov
jle
sti
xor
inc
ret
scas
push
cmp
lock
mov
dec
or
lcall
pop
sbb
xchg
fxch
inc
sar
mov
test
outsl
sub
leave
shrb
mov
jmp
add
inc
lods
test
mov
inc
push
iret
jle
movsb
dec
sbb
sub
xor
inc
enter
push
pushfw
xor
dec
aad
dec
sub
cs
adc
fs
sbb
mov
enter
les
mov
fsubrs
inc
fistl
in
jb
inc
fs
adc
fcomps
dec
inc
push
scas
roll
push
xchg
xor
sbb
cs
movsb
mov
push
gs
addl
out
add
hlt
pop
jnp
mov
lret
mov
pop
gs
popa
lret
cmp
pop
loopne
sub
dec
jmp
repz
test
push
or
fs
mov
jecxz
stos
movsb
adc
dec
into
push
jecxz
in
mov
sarl
pop
mov
scas
adcl
jo
mov
cmp
inc
pop
insb
push
mov
mov
lods
push
mov
dec
scas
loop
xor
aas
sbb
lcallw
cld
dec
dec
mov
scas
insb
std
outsb
adc
pop
dec
add
sbb
push
sbb
and
sbb
pop
scas
and
imull
pop
push
sub
and
pop
cltd
jb
stos
xchg
pop
dec
paddd
shll
ret
ljmp
int3
or
push
sub
cmpsl
mov
add
cmp
mov
fs
xor
cmp
push
or
cmp
jo
push
jo
xchg
lret
je
dec
xchg
pop
sbb
pop
inc
pop
mov
ljmp
pop
or
pop
xor
and
fisttpll
dec
nop
or
add
and
push
jg
scas
mov
loop
mov
pop
pop
test
in
cli
dec
dec
pop
sbb
js
xchg
dec
mov
push
mov
push
mov
xor
jbe
push
lea
xor
cmp
jmp
pop
mov
cmp
pop
ret
cmp
call
jle
jg
pop
loope
sbbb
add
lods
mov
arpl
into
lret
push
cs
push
sub
fsubs
jecxz
int
cmp
push
rorl
mov
pusha
lcall
pusha
fisttpl
pusha
dec
fistl
pop
stos
sahf
int
jmp
int3
adc
adc
lea
xor
rorl
add
ret
cmpsl
push
into
ss
aaa
cli
mov
jecxz
loope
jl
jecxz
lret
sbb
inc
xor
rcrb
inc
in
adc
dec
subw
push
jl
cs
cmp
xchg
push
rclb
adc
mov
jo
jo
mov
aaa
pop
repz
push
repz
cs
dec
push
sti
or
push
inc
sti
std
lret
sub
sbb
mov
stos
cwtl
jno
mov
push
mov
aam
out
cmp
sbb
outsl
or
cltd
gs
sti
addr16
jno
out
into
lret
test
pop
jb
xchg
dec
clc
ret
xchg
or
adc
gs
push
sub
arpl
int3
or
adc
push
dec
cmp
dec
jl
outsb
bound
enter
stos
lret
cli
dec
adc
sarl
test
dec
xchg
add
mov
scas
rcl
inc
pop
xor
insb
mov
adc
fimull
xor
push
pop
lea
shll
jecxz
pushf
mov
test
lret
jo
cs
sar
mov
jo
fs
jo
loop
push
push
sbb
enter
inc
xor
pushf
test
mov
mov
xor
add
fcmovbe
fs
cld
cmp
and
push
and
push
dec
repnz
add
pop
jl
sahf
or
lret
cmpsb
add
shlb
arpl
cmpsb
jmp
dec
jnp
jnp
mov
jge
scas
add
testl
fcoml
mov
pop
xor
add
popf
je
and
cmp
add
movsb
dec
adc
xchg
stos
push
icebp
dec
cli
popa
xor
mov
pop
mov
loop
xor
xor
enter
xor
mov
test
out
xor
fdivl
loope
jno
insb
arpl
cs
and
loopne
out
ss
aam
call
pop
sub
je
and
adc
rorb
push
sahf
and
add
mulb
test
dec
pop
dec
pop
negb
push
loop
mov
sub
insl
mov
arpl
js
scas
out
js
cmp
xlat
outsl
clc
arpl
inc
lea
push
mov
je
imul
popa
rclb
sub
dec
test
jle
shrb
ret
arpl
test
leave
in
test
inc
loopne
cs
dec
pop
sub
repz
dec
sti
xor
in
test
clc
movb
push
fistps
aam
jmp
popa
rcr
or
jp
fmuls
enter
loope
or
sbb
sbbb
or
cmp
repz
ljmp
roll
push
and
sbbb
dec
mov
sub
xchg
sub
cmpb
movsb
movsb
mov
lods
iret
pop
mov
imul
andb
mov
lret
rcrl
add
call
icebp
int
loop
sahf
mov
shrb
xchg
lret
add
push
insl
push
pop
enter
mov
and
or
and
fdivrs
jle
adc
lcall
sbb
push
pop
pop
test
pop
pop
pop
stos
jle
sbb
cs
dec
dec
sub
sub
cmp
das
cs
pop
xlat
inc
mov
xchg
fcompl
cmovs
into
and
xor
pop
push
xchg
xor
pop
stos
mov
jge
lea
cmpsb
push
test
arpl
mov
mov
fs
mov
dec
imul
mov
cwtl
std
dec
xor
mov
add
jecxz
cmpsb
shll
fcmovnb
aam
sub
cwtl
and
jno
or
orb
je
test
rorl
mov
cmp
sbb
arpl
repz
sbb
push
into
jle
sti
daa
fdivr
xchg
push
push
stos
mov
inc
sub
xor
test
xlat
add
lret
andl
bound
aam
pop
push
aad
aad
pushf
movsl
pop
pop
movsb
mov
dec
cmpsb
int
add
adc
pop
nop
adcl
hlt
dec
add
daa
in
inc
out
adc
addr16
cmc
sbb
shl
sub
mov
mov
push
xchg
fucomp
in
push
loopne
dec
int3
addr16
jmp
cli
push
sub
dec
xchg
lret
mov
pop
mov
or
ss
sub
out
ds
js
loope
mov
mov
bound
inc
mov
mov
xor
add
inc
cs
stos
adc
mov
push
mov
repz
dec
ret
lea
pop
das
outsl
cld
shrl
push
dec
push
sbb
rcll
ljmp
dec
nop
sbb
cwtl
nop
data16
xor
ljmp
xchg
loopne
cs
scas
leave
xchg
inc
rorb
sub
jmp
call
mov
xchg
sbb
and
xor
ljmp
add
push
repz
push
inc
movsb
arpl
lcall
es
inc
cmp
int3
adc
loop
je
inc
outsl
std
test
loop
ss
enter
out
xor
and
fistl
mov
inc
dec
push
fs
cwtl
push
jno
mov
push
push
lock
arpl
jns
jmp
ljmp
pop
aaa
cwtl
stos
popf
rolb
dec
insl
das
shlb
cs
mov
xor
call
loopne
fs
cld
inc
call
cmp
out
aad
jb
jmp
lea
stos
rclb
sub
das
shlb
and
mov
xor
lods
pop
jecxz
int
cmp
jg
fcomps
dec
test
bound
das
and
mov
xor
data16
pushf
popa
outsb
push
pop
cs
scas
in
inc
dec
fimull
adc
loop
and
cmpsb
cmpsb
add
push
mov
or
sbb
ds
imul
sub
dec
scas
or
pop
or
mov
sbb
cmpsb
jge
pusha
sarb
ljmp
mov
popf
xchg
xor
xchg
pop
dec
sub
imulb
pop
hlt
mov
lods
add
shlb
inc
enter
daa
or
or
pop
int3
pop
mov
push
popf
in
add
xor
push
insl
ss
sub
cwtl
pop
cltd
fldcw
movsl
cmp
out
pop
fsubs
mov
js
and
add
ljmp
inc
pop
shll
scas
mov
or
push
push
dec
gs
dec
in
loope
pop
jecxz
int
cmp
pop
sbb
pusha
mov
cmp
popa
jl
push
pop
out
push
and
adc
pop
in
xchg
dec
popf
push
cld
jmp
loopne
lea
dec
push
pop
add
call
sub
testb
loop
out
mov
into
sub
outsl
sti
call
jp
dec
addr16
xchg
je
mov
or
cli
push
mov
adc
cmp
inc
inc
shll
mov
and
test
in
ja
int3
cmp
test
sbb
mov
jecxz
insb
dec
loop
push
fwait
aad
jmp
adc
xchg
ret
cmp
int3
insl
test
arpl
add
incl
push
cltd
xchg
and
and
dec
pop
pop
dec
sbb
loope
mov
clc
cmp
and
outsl
movsb
xchg
stc
mov
inc
add
cmp
mov
jp
and
int3
add
and
dec
cmp
adc
testl
outsl
arpl
lods
mov
lods
push
scas
mov
inc
pop
loope
mov
icebp
mov
xchg
inc
mov
loop
ja
ja
mov
mov
stos
nop
sbb
mov
ds
insb
pop
add
mov
push
mov
and
mov
mov
loopne
stos
lret
cli
and
mov
push
add
out
into
rcrl
push
bound
icebp
inc
fs
icebp
add
fstpt
dec
addr16
pusha
call
pop
add
loop
fs
jb
mov
imul
mov
jge
mov
mov
mov
jecxz
xor
sub
out
sub
imul
cmp
inc
pop
and
mov
xor
rcrl
sub
rolb
jl
imul
jmp
data16
mov
push
scas
in
inc
pop
sbb
inc
cmc
sub
in
xor
pop
mov
jmp
fidivrl
pop
or
sti
nop
push
jne
sti
ss
fld
stos
add
sbb
cmpxchg
std
add
add
pusha
test
or
test
clc
add
dec
or
repz
adc
dec
push
ret
or
adc
out
sub
rolb
rclb
movb
push
arpl
out
xchg
jge
add
mov
xchg
mov
sub
jnp
cld
dec
jmp
sbb
loopne
subl
les
sbb
sbb
les
adc
xor
pop
out
xchg
dec
xchg
lret
cmp
dec
lret
fwait
enter
enter
enter
enter
xchg
into
pop
jmp
into
xchg
ror
daa
add
pop
add
into
or
fmul
xor
scas
cld
dec
addb
arpl
int3
rcrl
cs
andb
shrb
shr
xchg
shlb
ret
inc
shlb
inc
cmp
movsl
shlb
sub
adcl
rcl
pushf
rol
scas
mov
inc
xchg
sbb
stc
sub
add
add
adc
push
scas
aad
inc
pop
or
mov
nop
aam
pop
aam
out
inc
repnz
scas
or
xchg
sub
data16
fiaddl
out
or
push
scas
fiaddl
cli
fidivl
pop
mov
inc
repnz
scas
fdivs
jecxz
test
fadd
xchg
les
call
fdivs
out
ficoms
inc
fisubs
jbe
inc
mov
fisubs
xor
hlt
cs
fidivs
add
inc
mov
sub
pop
push
fdivl
and
push
movsb
sbb
fcoms
fs
shr
outsl
or
int
fidivs
mul
push
xchg
mov
add
inc
dec
dec
and
loop
adc
in
sub
cld
dec
sub
fstpl
loopne
dec
fwait
sti
mov
in
les
loop
fs
notb
dec
pop
sahf
test
loopne
andl
xchg
inc
out
arpl
shlb
dec
mov
hlt
sub
adcl
pop
hlt
xor
pop
in
in
jne
addr16
jmp
test
push
scas
mov
imul
outsl
pop
lods
ljmpw
pop
rorb
ss
in
ljmp
in
cli
dec
lods
call
call
js
stos
scas
sti
call
out
or
pop
imul
hlt
sub
out
sbbl
xchg
mov
insb
jns
mov
sbb
adc
js
outsb
in
sbb
xchg
pushf
in
lds
repnz
mov
cmpsb
repnz
arpl
repnz
jb
int
xor
pop
shrb
lock
xchg
in
push
scas
push
lock
mov
mulb
cs
testb
imul
call
cmp
scas
hlt
adc
outsl
hlt
jl
ljmp
dec
nop
cli
adcl
pop
add
loop
lods
clc
jb
out
imul
sub
clc
nopl
scas
lock
xchg
notb
add
mov
sbb
stc
fs
sbb
cld
lods
lret
cld
push
lods
ret
cld
push
mov
shrl
jmp
cld
adc
jmp
add
push
lods
ljmp
sub
mov
xchg
imul
ret
add
test
add
xor
data16
add
mov
data16
push
hlt
cs
push
loope
les
add
sub
adc
pmaddwd
add
sahf
push
lcall
mov
lea
add
mov
sbb
sbb
jle
lret
stos
mov
dec
mov
dec
divb
inc
jns
test
add
jle
rcrl
scas
dec
and
ljmp
arpl
or
sub
or
sub
out
rorl
jns
jl
data16
or
pop
push
or
mov
iret
push
mov
mov
mov
fmuls
inc
xchg
int3
cld
push
push
mov
cld
arpl
call
cli
jecxz
call
in
or
out
jg
inc
pop
lods
adc
jl,pn
xchg
cmpl
loop
inc
mov
adc
cltd
adc
rcll
jbe
sbb
xchg
lcall
fcoml
cld
inc
loop
std
in
adc
or
pop
dec
mov
push
xchg
dec
popa
push
sbb
adc
xchg
outsl
sti
fnclex
adc
dec
loopne
sti
or
adc
ds
sub
push
sbb
fs
sbb
dec
xchg
lods
cmpsb
sbb
movsl
decl
sbb
jecxz
pop
cmp
les
arpl
sbb
and
sbb
ljmp
sbb
jmp
jle
sti
mov
jecxz
inc
sbb
xor
push
xchg
jle
sbb
xchg
fs
push
lock
dec
test
test
push
xchg
dec
loopne
lods
addr16
xor
cltd
sbb
or
pusha
sbb
jle
stos
bnd
or
cmp
sbb
mov
and
sbb
stc
sub
sbb
and
movsl
jnp
loop
sbb
mov
and
dec
add
pop
dec
arpl
sbb
sbb
es
and
sbb
shlb
daa
bound
lret
call
sbb
xchg
cs
push
and
andb
or
shrb
and
popa
and
ret
pop
sub
adc
mov
scas
sub
sub
sub
sub
testb
dec
jo
scas
mov
imulb
popf
movsb
add
cmp
pop
mov
cs
cs
arpl
shrb
andb
shrb
sub
shrl
dec
sbb
xchg
sbb
cli
adc
or
sub
test
sub
jle
lret
cli
dec
mov
addl
mov
xor
mov
shlb
fcoms
and
pop
cli
dec
repz
mov
jmp
xor
jle
sti
andb
xor
dec
jle
call
pop
xor
xlat
fs
cmp
pop
sub
sbb
imul
add
jl
loop
lea
loop
pop
subb
sbb
mov
je
insb
fsubr
xor
rolb
add
cmp
xchg
add
xchg
dec
pop
xchg
cmp
cmp
pushf
pop
es
cmp
fstps
mov
xor
cmpsl
ja
dec
sbb
stc
fs
cmp
cmp
dec
loop
sarl
test
bound
jecxz
aaa
or
inc
sbb
rcrb
sub
out
adc
pop
fcoml
ror
shlb
push
fwait
and
ds
or
shlb
xchg
test
adc
bound
cmp
mov
out
stc
pop
cmp
scas
lods
mov
iret
xchg
movsl
mov
fwait
dec
mov
push
pop
pop
ja
mov
xchg
mov
js
mov
pop
and
ljmp
sbb
add
movsb
mov
cli
gs
jnp
loop
cs
mov
push
mov
cmc
pop
iret
stc
jecxz
or
scas
ja
jmp
addr16
mov
fwait
ret
test
cltd
mov
loopne
fwait
jmp
lock
test
ja
enter
jl
mov
pop
inc
int
cmp
icebp
and
test
pop
or
ljmp
inc
xchg
data16
rcll
popf
push
cmp
popa
xorl
sub
xorl
hlt
inc
fidivs
cmp
xor
jno
push
arpl
cmpsl
mov
mov
xchg
or
js
ja
aam
sbb
std
inc
jns
out
sbb
or
jmp
mov
mov
push
loopne
dec
incb
xor
mov
clc
pop
into
cmp
mov
mov
jne
dec
adc
jns
fwait
cmpsb
mov
dec
push
call
outsl
sub
scas
lds
inc
fwait
sbb
or
xor
xorl
or
dec
mov
dec
sub
fbstp
jmp
adc
bound
sub
movsb
or
mov
insb
out
mov
or
sbb
jl
loop
push
arpl
ja
cmpl
dec
rorl
lret
add
cmp
call
xor
jnp
movswl
loopne
pop
mov
loopne
dec
pop
push
in
sub
jmp
cmp
outsl
cli
dec
push
outsl
fwait
dec
sbb
lea
mov
jle
push
fisubs
cmp
pop
xchg
loope
orl
jl
push
data16
xchg
hlt
cmp
cmpsl
sbb
inc
lret
xchg
mov
fadds
test
shll
idivl
sets
mov
orl
lods
dec
push
xor
adc
adc
cmp
ret
or
fildl
test
push
fstpt
call
mov
push
imull
pop
pop
mov
stos
sub
hlt
hlt
bound
sbb
jns
ljmp
orl
stos
into
adc
cs
xor
jnp
sub
int3
sbb
adcl
push
sbb
shr
jmp
push
sbb
fwait
scas
push
push
inc
cmp
xor
push
stos
lea
int3
inc
adc
ja
and
pop
lods
sub
pop
lods
outsb
pop
xor
pop
pop
xchg
test
loop
data16
pop
push
jb
mov
test
pop
cli
sub
call
insb
push
cs
hlt
cld
cmp
cwtl
addb
pop
js
dec
in
jo
mov
dec
mov
mov
bound
inc
imul
out
inc
mov
adc
and
push
cs
xor
jnp
mov
pop
inc
jecxz
jl
arpl
mov
add
arpl
xchg
xor
inc
arpl
arpl
mov
enter
cli
mov
push
cs
repz
popa
sbb
fs
leave
ja
out
test
mov
popa
lods
fldenv
dec
stc
popa
lods
sbb
dec
cmp
inc
popa
xchg
cmp
jp
lods
lcall
hlt
sti
push
ret
fisubl
loopne
dec
pop
popa
punpcklbw
movsb
pop
call
ja
btc
ljmp
xor
ret
fnsave
es
xchg
inc
mov
rolb
adc
fwait
jge,pt
pop
push
inc
sbb
xchg
sub
icebp
aad
sbb
enter
jbe
cmc
mov
test
gs
sbb
jmp
gs
lcall
mov
in
jo
stos
shll
jg
pop
data16
adc
call
int
lcall
imulb
adc
insb
rcrl
inc
jge
shll
push
sbb
popa
jnp
call
jb
push
es
hlt
lods
jmp
ja
mov
push
dec
pop
dec
js
sbb
es
xchg
pop
out
imul
dec
sbb
imul
jmp
jno
pop
roll
call
nop
clc
andl
pop
adc
adc
out
pop
into
outsl
hlt
dec
ljmp
scas
lea
push
and
dec
movb
pop
sbb
je
sub
hlt
lahf
jmp
xchg
mov
stos
sbb
xchg
adc
sub
jnp
mov
inc
push
inc
add
xchg
cmpsb
cli
movsb
call
gs
mov
loop
arpl
mov
bound
mov
mov
movsl
cmc
mov
loope
jle
out
xor
mov
xor
cmp
push
enter
cmp
jno
push
push
pop
repnz
ljmp
imul
data16
mov
pop
jge
jp
push
lret
ljmp
ja
test
ja
loopne
dec
push
ja
stos
xor
push
call
jl
ja
jle
pop
fs
jne
mov
cs
ret
scas
inc
xor
call
call
jecxz
int
cmp
dec
mov
xchg
cli
in
jnp
pop
jmp
jnp
dec
outsb
jnp
ret
or
jnp
dec
ret
sbb
sbb
mov
stos
jns
fnstcw
lret
scas
add
and
ret
ret
xchg
sbbb
pop
rcll
inc
push
dec
rcrl
rcll
jge
mov
scas
movsb
imul
into
jae
jg
push
xor
or
mov
fs
test
aaa
sub
jecxz
out
stos
jg
inc
fistpl
push
cwtl
xor
daa
inc
in
inc
xchg
test
out
add
jge,pn
cli
in
test
jge
loopne
dec
cmpb
inc
sub
xchg
pop
shrb
and
stos
jbe
stc
pop
test
dec
jmp
imul
bound
scas
mov
adcb
jecxz
jle
cmp
push
loopne
jecxz
jle
cmp
push
loopne
jecxz
jle
out
cmp
add
jecxz
mov
xor
mov
cs
sub
insb
cmp
stc
stos
test
cli
or
pop
dec
cmp
sahf
push
mov
bound
sahf
int
jno
or
sbb
xchg
inc
movsb
mov
or
or
xchg
sti
pop
cs
out
sti
popf
js
or
fs
in
mov
out
test
push
jmp
dec
dec
test
pop
push
dec
rcll
push
test
jp
xor
adc
shrb
mov
xchg
and
repz
xchg
sbb
mov
pop
push
stos
cltd
dec
pop
mov
cs
lret
mov
fs
std
adc
shrb
mov
xchg
cmp
pop
jmp
adc
lods
mov
jecxz
xchg
arpl
call
arpl
lret
loopne
ret
cwtl
pop
shll
data16
lea
in
push
fs
lea
sbb
popa
cmc
ror
jb
call
sti
loope
stc
test
adc
out
dec
cmp
mov
leave
pusha
xor
lds
add
leave
sbb
icebp
fcmovne
sti
pusha
rorl
add
arpl
lods
sti
push
jecxz
dec
fmuls
jno
int
sti
ja
inc
inc
bound
cmpsb
xchg
lea
lahf
pop
ret
xchg
imul
add
bound
inc
cmp
pop
sbb
repz
daa
popa
add
sarl
pop
rolb
out
push
xchg
xor
rcll
aas
adc
xor
imul
pop
or
xchg
pusha
and
ret
in
test
jmp
arpl
mov
dec
sub
and
es
mov
aas
dec
ret
cmpsb
sub
mov
sbb
shr
inc
push
xor
cmp
cmp
cmc
je
cs
daa
xchg
or
loope
arpl
andl
popf
clc
insl
scas
enter
movsb
movsb
push
mov
mov
popf
lret
fs
inc
mov
pop
sub
mov
push
addb
rclb
push
cltd
jno
pxor
nop
clc
mov
imul
mov
and
fwait
imul
ret
fstpl
fwait
imul
scas
loopne
sub
xchg
jo
pop
sub
aad
cmp
jb
mov
cmp
add
jnp
cltd
call
cltd
imul
dec
xchg
cltd
imul
les
imul
les
imul
mov
lahf
imul
les
imul
les
pop
cs
imul
fidivs
subl
mov
cmp
dec
imul
loop
imul
add
mov
call
push
aad
push
lea
inc
pop
pop
xchg
cmpsl
jle
mov
inc
rolb
sub
jmp
sbb
add
stos
test
inc
add
out
scas
mov
push
scas
aas
movsl
inc
pop
outsb
movsl
mov
xchg
movsl
mov
sbb
mov
ljmp
fldcw
sbbb
pop
push
stos
rorl
add
dec
ret
pop
insl
mov
repnz
jg
shrl
mov
test
test
cli
fildll
pop
mov
out
scas
rclb
scas
movsl
xchg
test
scas
xor
hlt
scas
out
sti
adc
mov
subl
xchg
shrb
test
lods
inc
arpl
mov
ret
mov
cs
mov
push
inc
mov
ljmp
maskmovq
testl
jmp
sbb
push
pop
mov
fbstp
aad
sub
aad
jl
add
shlb
and
mov
add
int3
mov
data16
mov
arpl
mov
arpl
sbb
out
xor
push
cmpsl
mov
mov
dec
mov
repnz
jb
inc
xor
inc
ljmp
mov
daa
mov
xchg
sarl
pop
aaa
mov
rcrl
test
mov
inc
pop
dec
mov
je
aam
xchg
jmp
data16
dec
sbb
jno
or
ret
lea
sub
sub
adc
ret
orl
xor
mov
push
fs
dec
jne
lods
xchg
pop
jmp
js
cmpsl
sbb
stos
sbb
lcall
ljmp
lret
xchg
cmpsl
lret
push
arpl
lret
xchg
out
push
arpl
lret
xchg
daa
lret
push
xor
out
pusha
lret
hlt
sub
hlt
sub
lret
out
loopne
hlt
sub
lret
movsb
in
clc
adc
call
or
idivb
faddp
xor
pop
adc
enter
sub
test
test
push
pop
cld
arpl
adc
lret
iret
loopne
pop
inc
mov
les
popf
enter
or
outsl
jmp
loop
sub
in
add
xchg
dec
out
pop
fs
add
shll
hlt
ret
adc
add
arpl
cltd
dec
jbe
imul
in
or
inc
call
out
adc
dec
fwait
jecxz
mov
call
stos
pushf
mov
dec
rorb
dec
mov
mov
push
popf
int3
fsubl
xchg
dec
pusha
jl
ljmp
std
outsb
push
mov
out
fidivl
int
add
int
cmp
sub
mov
imul
in
add
jnp
into
sub
sbb
mulb
test
int
jecxz
addb
imul
shrl
jns
mov
and
mov
lret
test
xchg
mov
sbb
sarl
je
imul
sub
mov
xor
adc
pop
roll
ljmp
test
push
jnp
jno
jg
fadds
shl
jno
jle
push
or
jge
imul
xchg
roll
sbb
xchg
xor
fsubrl
ljmp
and
lock
adc
bound
add
inc
pop
add
mov
or
push
pop
mov
mull
sbb
dec
mov
lea
dec
pop
adc
or
dec
cmpl
pop
xorl
xor
and
mov
mov
jl
add
or
pop
or
mov
lcall
ret
sbb
mov
pop
aad
pop
mov
push
xor
mov
pop
xor
cmp
mov
stos
or
pop
lea
mov
dec
mov
and
mov
inc
lods
jns
or
shl
or
ja
pop
sub
lods
inc
dec
rorl
or
lds
imul
sahf
cmpsb
mov
stos
sbb
pop
sub
jl
cld
out
loop
sub
enter
dec
xchg
xlat
stos
pushf
sbb
fdiv
sub
stos
std
cmp
push
cmp
dec
dec
sbb
rcll
aam
lret
cmp
pop
mov
cmp
mov
outsl
cmc
xchg
mov
add
pushf
dec
enter
ds
rcl
xor
lret
repz
xchg
or
fcompl
inc
std
sbb
imul
fsubs
and
dec
push
sbb
dec
ret
mov
movsb
cmp
lret
push
loop
mov
roll
jmp
out
or
std
and
inc
pop
sbb
mov
push
mov
xchg
mov
mov
cmp
mov
sub
mov
mov
aad
rorb
adc
fcompl
mov
inc
jmp
ds
adc
mov
scas
jnp
inc
pop
inc
mov
lods
dec
shl
imul
stos
scas
iret
cld
dec
xor
lcall
push
aas
mov
sarl
gs
and
int3
loope
dec
es
fdivs
pop
clc
mov
fdivs
test
mov
loop
push
test
int
pop
sarl
lods
or
mov
test
inc
dec
andb
sub
add
data16
mov
sbb
les
xchg
pop
sbb
out
adc
inc
cmc
push
lret
cs
movsb
cmp
dec
aaa
sub
outsl
arpl
repnz
in
sub
inc
call
imul
dec
movsl
add
jmp
cs
mov
stos
inc
ljmp
cs
popa
dec
gs
scas
inc
ljmp
push
call
call
lahf
call
int3
jmp
jmp
roll
or
sub
pop
outsb
jmp
push
mov
jmp
jmp
adc
in
sub
inc
call
mov
jmp
adc
in
sub
inc
call
call
mov
popa
cs
inc
xor
push
loopne
arpl
pop
mov
pop
in
sbb
pop
fwait
in
push
out
imulb
cmp
or
mov
mov
into
adc
mov
pop
mov
imul
sbb
push
pop
mov
pop
ret
mov
into
jnp
shrl
push
pop
mov
in
sbb
push
ret
fs
sbb
sbb
test
icebp
out
in
sbb
pop
shl
lret
call
sub
push
in
sbb
pop
xor
sub
fdivp
cmp
push
jmp
adc
in
sub
call
aas
out
pop
mov
out
mull
clc
dec
jmp
pop
push
into
pop
pop
jp
imull
clc
inc
call
cwtl
cs
in
adc
loopne
sub
pop
lods
cmc
lret
rorb
cs
movsb
or
imul
inc
ljmp
cs
mov
adc
push
ljmp
push
call
arpl
dec
outsb
or
das
and
cs
leave
fs
xor
push
jle
scas
dec
loopne
jbe,pn
aam
outsl
dec
ds
je
ljmp
push
call
aas
out
pop
icebp
push
jmp
adc
in
sub
call
call
jl
lcall
call
call
adcb
in
cs
xor
pop
stos
pushl
dec
nop
lmsw
dec
pop
pop
fs
xchg
pop
cs
int
arpl
dec
mov
mov
inc
push
aas
into
mov
push
add
call
mov
sahf
into
das
mov
std
jp
xchg
test
sbb
into
int
pop
push
je
mov
into
das
movsb
inc
enter
dec
leave
into
in
adc
and
into
pop
lcall
xchg
movl
leave
into
in
adc
and
pushf
lret
nop
in
sub
inc
call
call
mov
cmp
lods
inc
xor
pop
mov
cs
push
adc
push
dec
gs
mov
dec
dec
sbb
movsl
loop
cs
xchg
xchg
mov
dec
movsb
call
jecxz
mov
xor
pop
jl
sub
call
sub
sub
comiss
arpl
js
call
pop
mov
movsl
and
and
sbb
pop
push
push
call
sub
mov
push
mov
mov
push
pop
mov
xor
testb
cmp
or
cmp
sbb
lahf
or
mov
cs
shll
push
call
sub
mov
arpl
stos
das
adc
call
pop
cs
out
in
aaa
pop
dec
jg
sti
psrad
cmp
jecxz
mov
int
sbb
loopne
sbb
mov
adc
sbb
xchg
or
inc
loop
add
sub
push
add
mov
stos
unpcklps
call
pop
jb
call
pop
cs
call
sub
push
or
dec
mov
fildll
push
das
mov
add
jecxz
mov
scas
jecxz
mov
stos
mov
ljmp
pop
mov
mov
ss
pushf
stos
pop
adc
ljmp
mov
je
and
insl
ljmp
insl
adc
add
push
out
fs
push
push
subl
out
lahf
fsts
and
sti
mov
imul
sub
imul
nop
mov
js
or
sbb
imul
subl
pop
add
iret
rorl
rcrl
pop
or
add
and
enter
inc
mov
push
call
and
xchg
fs
pop
rclb
addr16
jle
inc
fiaddl
adc
ljmp
pop
lcall
sub
push
adc
dec
insb
repnz
dec
int3
adc
or
popf
loopne
pop
inc
fnstenv
sahf
gs
adc
icebp
loop
adc
jl
ficompl
xchg
lcall
mov
movsb
aam
pop
add
loope
sub
dec
btc
sbb
iret
pop
scas
int
cmp
dec
lahf
mov
outsl
mov
mov
jae
inc
rcrb
adc
sbb
addl
sub
inc
loop
sahf
into
ljmp
mov
frstor
xor
lret
xchg
dec
rcrb
orps
dec
jg
mov
jmp
mov
sub
sti
lahf
or
popa
mov
nop
addb
pop
adc
xchg
pop
arpl
mov
push
sub
pop
out
pop
cmc
je
js
outsl
mov
xor
jg
cli
jb
pop
es
mov
sub
push
shlb
lods
mov
repnz
scas
inc
sbb
movsb
jge
shll
and
and
add
or
sti
ret
xor
mov
or
lock
dec
pop
xchg
push
xor
es
and
xchg
adc
das
jle
cmp
sub
jp
imul
sub
adc
daa
fs
daa
cld
inc
cld
jne
out
mov
daa
sbb
mov
jecxz
push
test
and
mov
and
arpl
and
pop
cmp
adc
jmp
sub
pop
and
imul
mov
jle
sub
call
out
xchg
ja
les
xlat
imul
test
clc
add
sub
sub
pop
out
cmp
shl
sub
pop
nop
cs
in
cld
fwait
loopne
and
subw
jo
cmc
sub
mov
lahf
test
cmp
stc
mov
arpl
aaa
outsl
adc
mov
and
jp
sub
mov
fwait
xchg
mov
jl
sub
ljmp
cmp
pop
mov
xchg
test
jmp
xchg
pop
inc
xchg
movsl
mov
sub
sub
sub
cs
hlt
out
sbb
push
pusha
pop
in
cmpsb
mov
inc
adc
adc
pop
inc
add
rcrb
ret
jno
pop
xor
dec
jle
sar
or
mov
js
inc
mov
mov
cmp
and
xor
gs
imul
jb
lcall
cmp
xor
pop
xor
push
mov
pop
xchg
stos
pop
inc
xor
mov
cmp
jbe
mov
sbb
push
outsl
push
push
pop
adc
lods
sbb
call
int3
add
test
jne
mov
incb
ljmp
aaa
jo
sbb
jp
push
aaa
mov
lds
lods
add
mov
je
xor
cld
fucomp
push
andl
test
xor
cs
mov
mov
ret
lock
xor
mulb
mov
arpl
cmp
rorl
push
pusha
scas
movsb
xor
call
gs
arpl
into
aas
push
test
aas
mulb
cmpsb
shrb
cmp
lahf
cmp
jl
cmp
mov
adc
xchg
movsb
inc
xchg
out
shl
stos
data16
inc
hlt
sub
out
xchg
inc
xor
xchg
lds
xchg
jle
push
pop
data16
stos
and
bound
xor
outsb
inc
push
test
inc
mulb
scas
shrb
inc
out
cmp
cs
inc
out
dec
xchg
xor
popl
push
cld
nop
bound
xchg
test
dec
cmc
dec
fwait
aaa
loop
or
jge
sbb
dec
lods
cld
dec
xor
lods
or
push
dec
push
dec
lock
outsl
push
packsswb
ret
rorl
test
dec
idivb
dec
stos
rcll
test
dec
hlt
sub
dec
out
cli
dec
xor
ljmp
and
sub
push
test
push
mulb
mov
sub
pushf
push
hlt
cs
xor
repnz
mov
test
call
cltd
push
xchg
fistl
loopne
data16
push
hlt
fwait
push
push
arpl
bound
mov
cmpsb
mov
call
push
ret
push
push
test
pop
negb
mov
mov
push
arpl
xchg
pop
pop
bound
test
or
jg
xchg
fidivrs
call
cmp
sub
roll
pop
hlt
sub
xor
adc
into
or
inc
or
ret
test
pop
negb
mov
dec
les
pop
xchg
out
pop
bound
mov
sbb
popf
jp
test
xchg
add
call
jno
xchg
xchg
pusha
push
arpl
bound
pusha
xor
xor
mov
mov
cmp
sub
mov
push
call
and
addr16
cs
mov
inc
mov
les
shlb
icebp
inc
sbb
out
push
jmp
push
dec
fs
ja
rorb
mul
push
push
adc
inc
push
mov
adc
or
rep
jp
sub
or
mov
push
dec
enter
outsb
sbb
jno
std
mov
jp
mov
jb
call
jb
outsb
loop
mov
jle
jmp
jb
inc
jno
cmpsl
mov
dec
push
jo
push
loop
or
sahf
ficomps
dec
add
and
dec
inc
jbe
xor
push
dec
jb
push
inc
std
adc
gs
arpl
in
je
pop
je,pn
sub
shll
test
jp
sub
jp
sbb
cs
scas
dec
jp
les
xchg
enter
shl
scas
js
dec
js
out
jmp
je
push
push
jle
cmp
jle
sbb
mov
pop
dec
js
fwait
mov
jl
fs
ljmp
xorb
movsl
subb
xor
jne
jo
or
jl
jp
mov
out
or
dec
subb
aad
popf
xchg
lret
adc
lods
testl
jg
repnz
sbb
xor
push
jmp
dec
cltd
pop
pop
lret
mov
pop
movsl
mov
out
fwait
and
mov
mov
fs
mov
mov
mov
mov
test
inc
stos
std
mov
jmp
mov
test
mov
push
mov
mov
cld
xchg
loope
les
mov
dec
push
xchg
fwait
pop
loop
or
cmpsb
clc
sbb
nop
lods
sub
lods
cmp
push
dec
jp
push
inc
ja
cmp
or
dec
xchg
js
pop
cld
adc
fsts
jmp
repnz
adcb
add
inc
fwait
pop
das
adc
inc
xor
cmp
repz
dec
fcomps
es
cs
sub
cmp
pop
enter
popa
cmpsl
in
dec
adc
cmc
and
pop
mov
lcall
xor
fwait
jne
cwtl
sub
out
jl
loop
fs
cwtl
cld
pop
ljmp
bound
cmp
jecxz
mov
arpl
and
testb
push
call
or
push
arpl
mov
pushf
add
lods
pop
outsl
movsb
imul
jb
dec
mov
ret
leave
mov
inc
pop
cmp
arpl
fs
bound
mov
sbb
sub
push
call
bound
mov
bound
mov
fs
dec
imul
test
mov
test
sub
data16
test
jno
hlt
cs
std
xor
test
into
repnz
iret
lods
xchg
or
push
adc
sti
sub
imulb
lods
cmp
cltd
out
mov
cmc
mov
sub
mov
jb
push
call
fdivl
arpl
mov
inc
inc
mov
sbb
pop
pop
mov
sub
data16
mov
sub
mov
dec
mov
cmp
scas
jg
inc
call
popa
pop
push
arpl
stos
gs
push
popa
packsswb
movsb
popa
adc
push
xchg
dec
mov
negb
mov
shll
mov
push
mov
arpl
jl
mov
inc
call
imul
mov
jp
in
mov
add
jl
loop
fs
ret
ljmp
out
inc
call
imul
sahf
shl
fadd
xchg
sbb
shll
hlt
sub
xor
mov
cmpsb
inc
sbb
sbb
push
les
push
xor
mov
rcl
hlt
mov
bound
pop
jle
xlat
mov
adc
push
imul
arpl
enter
enter
mulb
shrb
into
out
dec
hlt
cs
into
out
mov
cs
into
mov
into
repnz
sbb
xchg
pop
int3
ret
fwait
rclb
mov
rclb
inc
rorb
rolb
inc
mov
sahf
mov
inc
rclb
xchg
negb
mov
into
ds
push
xchg
insb
bound
sub
cmp
sbb
lods
pop
out
fimull
hlt
sub
out
lcall
enter
xor
jecxz
je
inc
test
pop
daa
add
mov
or
xchg
fdivrs
fsubs
inc
fdivs
dec
fsubrs
push
dec
ja
lea
jmp
cld
call
fnstsw
ss
inc
fdivp
pop
sbb
ror
inc
data16
fdiv
sub
out
outsb
fdivl
pop
xor
fs
testl
loop
stos
loop
fs
sbb
loop
xor
xor
lods
inc
aaa
push
dec
mov
adc
jnp
loop
or
xchg
out
dec
pushf
dec
sbb
jge
dec
and
lods
inc
out
dec
xor
lea
push
add
sahf
push
sbb
jnp
jo
ds
xchg
and
ret
and
shlb
dec
mov
sub
and
push
in
pop
fmul
and
out
sbb
inc
sbb
jno
push
in
clc
jno
loopne
cld
in
call
pslld
jle
pop
sub
in
lret
jecxz
cmp
sub
repz
ficoms
add
shlb
add
mov
dec
int3
cmc
ljmp
clc
ja
add
loopne
xlat
lret
jmp
push
cld
mov
pop
ljmp
jecxz
int
cmp
clc
scas
or
jecxz
mov
cmp
outsl
call
pop
lock
data16
call
push
scas
scas
rolb
jecxz
mov
movsb
pop
imul
push
dec
mov
call
fisubl
test
cltd
out
add
xchg
cli
orb
sbb
ja
ret
pop
out
mov
int3
push
out
dec
push
push
xor
lret
xlat
and
or
ja
xor
sub
in
push
dec
fwait
dec
bound
ja
int3
lock
xor
push
jmp
in
mov
mov
push
dec
gs
fstpl
into
call
arpl
or
jno
push
mov
jmp
call
dec
jecxz
sub
or
jg
dec
adc
repnz
scas
sub
pop
push
repnz
xor
out
test
cld
xor
xchg
mov
push
mov
lds
call
arpl
in
inc
lods
cmp
push
icebp
pop
mov
adc
inc
data16
mov
sub
xlat
lahf
cmp
and
and
divb
xor
push
cli
add
sti
stos
inc
xchg
rol
and
mov
adc
lock
imulb
out
adc
adc
aaa
hlt
scas
mov
je
xchg
test
mov
push
push
insb
sub
and
ja
mov
mov
daa
dec
sti
and
lods
push
cs
xor
cli
imul
and
fucomip
sub
dec
cli
sti
xor
pop
rorl
fwait
lcall
sub
inc
sti
sub
cmp
cmc
xor
test
lret
add
clc
rcrl
cs
fldt
mov
pop
sub
inc
cmp
pop
jecxz
pop
adc
bound
sub
mov
push
cld
imulb
clc
f2xm1
fcom
icebp
mov
negl
jae
push
nop
inc
or
negl
dec
je
shll
lods
flds
push
sub
arpl
add
repz
lret
sbb
pop
xor
dec
pushf
cmpsl
inc
or
xchg
mov
test
mov
push
mov
sbb
sti
or
add
sti
sbb
add
push
sarb
or
or
out
push
into
mov
jb
outsb
and
xor
frstor
mov
pop
loop,pt
test
add
pop
xchg
add
xchg
das
dec
mov
xchg
das
enter
pop
outsb
mov
or
scas
and
jle
scas
jbe
inc
xor
sbb
and
push
les
sbb
sbb
adc
push
outsl
mov
adc
jmp
mov
stos
xor
enter
subb
cs
test
incb
cs
stos
and
xchg
pop
cmp
add
stos
push
clc
mov
ret
out
or
pop
and
add
or
xor
cli
sbb
fbstp
pop
cmp
xor
adc
xor
popf
js
jl
or
aas
fidivl
mov
test
or
arpl
mov
rorl
and
push
test
fisttpl
xchg
js
pop
bnd
push
push
out
js
push
sub
cmp
pop
fs
push
push
jb
jns
bound
jo
pop
lds
fwait
sbb
or
lret
lret
out
or
fs
call
pop
jmp
or
dec
xchg
adc
adc
jns
fs
jb
mov
lds
fwait
cs
call
pop
call
inc
jecxz
pop
jl
jg
test
adc
movsb
adc
push
movsb
or
jge
jge
push
lods
movsl
push
push
push
pushf
jb
test
cmpb
or
pusha
shr
inc
leave
not
cmp
xor
jl
aas
dec
sbb
cmp
dec
jb
jecxz
stos
adc
repz
xchg
cli
adc
pop
inc
inc
inc
arpl
mov
mov
jnp
frstor
mov
pushf
xor
or
mov
jle
sub
sbb
jb
xlat
xorb
or
cltd
mov
push
rcrb
int3
add
imul
inc
adc
out
xor
je
sub
xorl
int
imul
daa
dec
xor
sbb
adc
inc
arpl
sbb
sbb
add
stos
xchg
sbb
or
adc
jle
sbb
mov
lods
adc
adc
mov
popf
nop
push
mov
push
jecxz
je
imul
arpl
push
pop
repnz
mov
mov
out
add
lcall
imul
xchg
inc
pop
aas
push
pop
pop
push
mov
push
arpl
xchg
cwtl
push
push
arpl
push
loopne
dec
clc
push
icebp
aas
xor
sbb
pop
cmp
into
inc
test
sbb
fs
cli
fs
dec
sub
adc
lcall
les
sbb
xchg
cmp
mov
lcall
and
dec
mov
and
ljmp
mul
push
adc
and
mov
adc
sbb
and
sub
jl
pop
jmp
and
pop
push
test
mov
std
sub
lea
jmp
sub
fisubrl
sbb
jns
nop
inc
xchg
dec
sub
dec
and
sbb
sub
add
int3
sub
lea
adc
cs
outsl
and
sarl
cs
jle
pop
pop
sub
fstpt
adc
mov
inc
bound
push
jl
sub
test
sub
arpl
push
adcb
out
jb
jne
pop
xlat
xor
mov
popf
fadds
jg
mov
lahf
mov
and
pop
lods
xor
mov
xorb
out
push
sarb
movsl
cld
sbb
nop
je
mov
push
xor
mov
arpl
and
mov
mov
sub
test
ss
dec
mov
ljmp
movsb
stos
subb
cli
stos
test
fdivrs
cs
stos
and
adc
popf
xor
pusha
xor
mov
jae
xor
fadds
mov
cmp
pop
das
cld
dec
xchg
xor
add
add
hlt
scas
gs
outsl
iret
xorb
enter
sbb
cmp
mov
mov
call
cmpsl
or
mov
xchg
sbb
jo
and
sbb
hlt
enter
decl
cmp
test
clc
mov
test
scas
dec
lahf
dec
cli
adc
sbb
cmp
popf
cmp
lods
add
adc
mov
outsl
cwtl
test
fildl
sub
dec
test
add
int3
loopne
data16
scas
inc
pop
arpl
sub
inc
xchg
clc
scas
xchg
pop
inc
mov
xchg
mov
dec
add
pop
and
sub
jle
scas
inc
stos
jmp
repz
fisubrs
out
fs
repnz
inc
xchg
sub
cs
andl
bound
scas
inc
hlt
cs
inc
mov
fadds
push
inc
dec
sti
cltd
dec
loope
xlat
lock
scas
and
dec
sti
cltd
dec
jge
push
inc
xorl
dec
test
in
ret
repnz
sti
cltd
dec
push
dec
push
popl
subl
popf
arpl
push
push
pop
mov
xchg
mov
arpl
push
arpl
dec
xchg
or
arpl
dec
xchg
dec
dec
push
arpl
xchg
dec
push
arpl
iret
dec
xchg
xchg
mov
sbb
push
dec
fstpl
jle
mov
mov
test
push
inc
call
jg
jbe
cs
shrb
outsl
mov
cmp
cs
push
mov
imul
call
cmp
push
push
call
gs
push
jl
push
data16
push
inc
arpl
mov
ficoms
sub
shrb
push
je
lds
sbb
dec
pop
push
xchg
scas
pop
push
jl
pop
data16
pop
inc
call
mov
ja
cli
fs
pop
lcall
pop
add
ljmp
sti
and
sti
cmp
and
popf
push
lea
jnp
pop
test
arpl
mov
mov
pop
jl
arpl
push
pop
pop
inc
int
ds
inc
add
mov
out
and
inc
pop
andb
test
je
or
ret
dec
popa
bound
clc
iret
xchg
pop
addr16
xchg
cs
ret
subl
cmpsl
jp
cli
add
mov
dec
adc
cmp
bound
cmp
gs
and
push
push
test
jle
cmp
cs
cltd
sarb
cmp
imul
push
pop
ljmp
loopne
in
imul
adc
fwait
in
imul
imul
dec
les
dec
inc
test
xlat
or
pusha
outsl
xchg
les
dec
fcmovnbe
sbb
and
nop
adc
mov
jo
test
fistpl
cld
and
xchg
push
mov
add
and
push
dec
test
mov
outsl
ss
cwtl
jno
outsl
cltd
arpl
scas
ffreep
dec
adc
sbb
sub
orb
outsl
fwait
scas
call
jb
test
mov
outsl
idiv
dec
jne
add
sub
xchg
jecxz
in
jne
outsl
adc
jne
xor
jnp
inc
sbbl
je
in
sarb
push
or
jecxz
outsl
ret
jge
call
outsl
push
lods
jns
pop
push
mov
mull
jns
test
sub
lret
jg
push
test
outsl
xchg
push
ret
sbb
outsl
out
cmp
add
jge
adc
outsl
push
fs
subl
sub
outsl
cmp
subl
and
out
aas
subl
pop
subl
subl
cwtl
subl
and
subl
cltd
arpl
lahf
jne
imul
outsl
lcall
xchg
outsl
cmc
ret
xchg
out
das
xchg
xchg
sub
popf
loop
sti
ljmp
test
xor
test
jl
test
outsl
xor
outsl
bound
call
test
fs
icebp
mov
fs
rorb
mov
sub
mov
and
mov
adc
and
pop
cli
js
mov
dec
pop
xor
cs
stc
cmp
outsl
int3
push
imul
movsl
sti
shrb
outsl
mov
orl
lea
scas
arpl
pop
call
out
adc
sbb
shrl
mov
scas
lahf
xchg
add
inc
pop
mov
call
std
pop
call
sti
xchg
jle
cmp
call
jmp
xchg
outsl
subb
mov
adc
outsl
push
ret
ret
xchg
ljmp
mov
test
xchg
lea
xchg
jle
cmp
call
fwait
cltd
cs
outsl
rcl
xchg
ljmp
xchg
outsl
mov
imul
je
in
mov
mov
adc
je
addr16
outsl
mov
imul
in
or
mov
fwait
outsl
xor
mov
test
loop
jecxz
je
fwait
outsl
adc
pop
fwait
rcrl
sti
je
out
xor
cs
outsl
mov
jnp
outsl
jo
insb
lahf
outsl
data16
lahf
outsl
pop
out
adc
popf
outsl
xor
test
jb
adc
popf
inc
scas
mov
outsl
sub
popf
outsl
xor
pop
stos
outsl
data16
data16
sub
mov
outsl
or
xlat
mov
mov
fs
add
cmpsl
sti
pop
call
pop
fs
xchg
fs
cmpsl
jo
pop
or
lods
in
pop
mov
mov
movsl
jb
cmp
stos
lods
lret
stos
xor
jp
cmp
js
inc
stos
repnz
subl
fs
test
or
inc
ljmp
jmp
scas
cli
lea
ljmp
fs
mov
out
loop
btr
mov
dec
mov
push
mov
test
mov
enter
loop
or
fs
mov
cs
sbb
and
inc
mov
fidivs
stos
cmp
clc
in
pop
inc
dec
xchg
iret
cli
jmp
mov
push
ss
push
fwait
inc
loop
mov
mov
repnz
subb
mov
pop
in
loopne
dec
in
mov
inc
mov
mov
push
or
and
cmpsb
ret
pusha
mov
cmpsb
jl
mov
ljmp
mov
jge
test
mov
inc
dec
xor
mov
outsl
cltd
mov
adc
cmp
mov
or
inc
inc
mov
push
mov
cli
jle
ja
xor
das
mov
call
rcl
pop
dec
popf
mov
xchg
add
pop
pop
mov
sub
cld
subl
nop
cli
cmpsb
fistpll
mov
xchg
mov
mov
sub
xchg
mov
mov
mov
nop
add
cmp
mov
mov
mov
dec
dec
mov
sub
push
movsl
cmpsb
pop
cmpsb
mov
jg
pop
sub
orb
dec
mov
ret
jecxz
out
adc
mov
mov
fs
fsqrt
jmp
ret
lcall
fucomi
jge
mov
mov
into
add
rol
cmp
ret
jecxz
call
mov
inc
pop
rorb
aam
out
dec
xchg
xor
dec
roll
dec
cs
ret
mov
pop
inc
jo
out
or
clc
cwtl
or
xchg
xor
outsl
pop
add
mov
dec
fs
xor
jg
lea
popa
add
push
sbb
sti
in
lods
das
sub
lds
add
cs
sbb
fimull
inc
movl
test
cmp
push
add
dec
sti
fs
lret
sbb
data16
xchg
jecxz
movsb
sub
pop
int3
ret
jbe
loopne
das
lret
lret
outsl
and
push
fs
outsl
cwtl
loopne
pop
outsl
js
xchg
mov
mov
push
in
xchg
adc
leave
outsl
into
mov
arpl
outsl
lret
loopne
out
mov
outsl
push
sub
push
notb
xorl
mov
sub
scas
mov
icebp
iret
xchg
clc
push
fists
mov
dec
or
iret
dec
mov
into
sbb
or
push
dec
mov
clc
scas
cmp
fimull
ljmp
fs
int
sbb
insl
int
sbb
sarl
dec
loop
shll
inc
rcrl
push
addr16
cmc
orl
roll
mov
repnz
ljmp
rcll
nop
xchg
sbb
aas
sbb
shrl
fs
mov
test
aas
pop
jmp
xlat
adc
test
adc
pop
test
aad
test
lret
lret
sahf
aad
std
sbb
call
pop
fs
aad
loop
or
test
mov
pop
sbb
mov
inc
fndisi(8087
mov
lds
fsubrp
fistpl
ljmp
sbb
ljmp
call
idivl
sbb
call
cmp
fs
xchg
loopne
and
sbb
add
ljmp
pop
jp
mov
xchg
sub
shlb
push
xor
bound
mov
aaa
sub
sub
mov
ret
addb
inc
push
and
frstor
paddusw
pop
inc
frstor
push
xor
push
jle,pn
lods
out
add
ficompl
lds
xor
jge
es
xchg
sbb
insb
mov
hlt
sub
fisttpll
and
xchg
jecxz
jl
je
pop
shl
int
push
sub
dec
sub
pusha
loopne
jb
jecxz
xor
jecxz
jl
mov
mov
jmp
jecxz
pop
add
je
inc
loope
xchg
jl
or
out
loope,pn
and
push
cltd
mov
mov
subb
imul
in
movsl
sbb
rol
notl
xchg
dec
inc
mov
push
xor
dec
outsl
or
scas
outsl
add
outsl
sarl
pop
outsl
mov
lock
outsl
mov
mov
hlt
je
push
loopne
lock
fmuls
subl
xor
sbb
cmp
xorb
sub
add
outsl
shl
adc
test
and
ret
xor
pop
mov
mov
rcrl
sub
cmp
test
or
cmp
jb
sub
into
dec
xchg
pop
mov
add
pop
jne
int3
mov
cmc
imul
mov
in
jns
add
out
addl
inc
and
xor
out
repz
sbb
insl
data16
pushw
arpl
enter
scas
mov
jb
cs
mov
cmp
gs
sbb
push
cwtl
add
in
jecxz
scas
mov
sub
in
mov
testb
dec
sub
arpl
out
pop
test
das
pop
cld
mov
pop
fmul
pop
xor
in
pop
data16
pushf
pop
push
sub
shr
mov
xchg
repz
sub
aam
sub
aad
rep
mov
arpl
les
mov
jnp
hlt
sub
icebp
fsubr
ret
es
fs
jecxz
pusha
imul
into
sbbl
les
mov
xor
rep
pop
call
push
test
arpl
dec
xchg
xchg
push
xchg
mov
cmp
imul
sub
sti
cltd
push
fwait
sbb
insb
push
push
insl
jo
std
sub
push
scas
rcrb
xchg
js
test
insb
int
cmpsl
and
inc
sub
call
cltd
scas
pop
out
mov
mov
ret
inc
xchg
test
sub
ret
fcompl
movsb
hlt
mov
add
imull
hlt
stos
in
imul
bound
das
in
push
push
cs
mov
jb
jnp
adc
jl
mov
loope
cmp
jae
call
icebp
repz
xchg
outsl
ror
lods
xchg
cmc
cmp
bound
lea
cmc
push
xor
pop
cli
or
in
lock
ss
fdiv
aam
pop
mov
dec
cwtl
or
fs
sti
mov
sbb
push
sbb
mov
xchg
add
dec
mov
xlat
and
fcomps
hlt
es
mov
jns
outsb
inc
push
add
fdivrl
out
sbb
fldenv
in
out
lock
sbb
xor
mov
pop
push
fldenv
lock
lcall
push
mov
fadds
jmp
test
mov
pop
dec
mov
sub
adc
idiv
xor
inc
jno
xor
outsl
rol
cltd
mov
xchg
pop
xor
dec
sub
cltd
push
shll
mov
jg
in
ss
test
or
sub
pop
addr16
xchg
pop
int
xor
mov
insb
xchg
int3
push
std
bound
imul
cs
add
lods
add
pop
mov
cmc
inc
in
dec
fwait
xor
fsubl
xchg
loop
cs
xchg
add
outsl
and
testl
data16
js
fs
push
mov
and
dec
add
aas
dec
loop
jecxz
and
lea
shll
roll
pop
es
xchg
pop
cmp
inc
aas
in
adc
ret
ret
rolb
arpl
pop
mov
out
testb
ret
push
pop
dec
aas
dec
jecxz
popl
into
gs
mov
imul
mov
gs
into
add
dec
or
cmp
or
or
jecxz
mov
or
or
imul
or
jmp
nop
pop
call
mov
xor
bts
loop
cs
or
int3
xor
or
add
pop
js
stos
or
pop
and
aas
subb
or
outsl
or
ljmp
xsha256
cmpsb
push
cmc
dec
sbb
sti
or
xor
mov
aad
pop
rclb
mov
sbb
jg
cmp
adc
push
dec
add
lahf
filds
stos
push
inc
std
adc
es
fwait
mov
dec
dec
sub
daa
mov
adc
fcoml
int
pop
jle
inc
xor
cs
arpl
and
adcl
popa
inc
dec
les
mov
pop
inc
push
or
sbb
inc
outsb
dec
cmp
inc
jmp
and
clc
and
mov
mov
in
jbe
arpl
jmp
sub
fsts
and
cmp
adc
lcall
std
imul
jne
fmuls
pop
and
mov
es
mov
push
mov
push
xor
adcb
mov
cli
movsl
sub
cs
mov
cmp
mov
xor
jge
push
scas
test
jmp
sbb
pop
cmp
sbb
sbb
push
mov
sub
cmp
inc
sbbb
ljmp
popf
or
movsb
aad
cmp
fwait
jnp
xchg
xchg
clc
fsubl
adc
jmp
mov
adc
shlb
ret
fucom
pop
pushf
jbe
lea
shrb
dec
ret
arpl
push
inc
loop
dec
ljmp
test
or
sub
pop
mov
pop
push
mov
fwait
xlat
xor
cmp
dec
outsl
das
test
in
outsl
outsb
ret
test
add
adc
xchg
mov
mov
mov
mov
icebp
add
jae
push
lods
fwait
sbb
scas
fstpl
scas
xor
dec
sub
and
push
mov
sbb
adc
aam
dec
pop
scas
aam
sub
push
int3
cmpsl
and
xor
push
imul
mov
and
arpl
xchg
xor
xlat
jl
icebp
sub
jbe
jmp
movsb
mov
test
in
test
xor
sub
xchg
ds
call
test
test
loop
and
test
push
sbb
and
orl
mov
sti
xor
movsb
out
fisubrs
fwait
push
sub
mov
dec
mov
jl
and
xchg
dec
xor
cld
and
in
and
imul
popa
out
mov
cmp
xor
push
push
sub
pushf
xor
scas
addr16
arpl
mov
frstor
repz
popa
adc
lret
aad
mov
insl
mov
fdivrl
adc
js
mov
lods
cwtl
daa
outsl
pop
push
cmp
fwait
pop
jecxz
lret
jp
add
push
dec
data16
pop
fdivr
push
mov
sbb
imul
or
and
fbld
push
mov
dec
jno
cli
mov
xor
pop
dec
or
int3
push
mov
cmpl
mov
sbb
pop
movsl
int3
and
pop
ljmp
pop
and
sub
fbstp
jbe
ret
mov
outsb
cmp
xor
out
pop
ljmp
push
or
inc
mov
imul
insl
cmpsb
push
stos
icebp
popf
or
popa
pop
negb
int
gs
adc
adc
popa
movsl
pop
pop
das
loope
call
add
aas
je
inc
call
jl
mov
jno
mov
jecxz
mov
sub
dec
cli
ss
addr16
es
mov
cmpsb
in
push
mov
or
sbb
gs
sti
imul
shrl
outsl
push
mov
inc
xchg
outsl
cmp
das
std
push
cmp
inc
and
inc
pop
mov
je
bound
push
arpl
sub
sub
inc
in
daa
sub
sbb
mov
mov
and
adc
stos
or
mov
cmp
inc
ljmp
fwait
stos
pop
dec
pushl
sbb
loopne
pop
mov
adc
or
outsb
ret
and
mov
adc
stos
xchg
ljmp
int
pop
imul
pop
gs
mov
cs
iret
xor
outsb
ror
dec
mov
sub
lret
mov
and
xor
pop
rol
pop
dec
and
mov
and
imul
mov
pop
mov
xchg
dec
xchg
clc
sbb
fwait
call
jb
and
out
imul
dec
dec
int3
insb
sbb
inc
sbb
fnop
ficoml
xchg
ljmp
loopne
and
xor
push
lds
cmp
popf
in
mov
sub
dec
inc
mov
xor
cmp
jne
or
lcall
cmp
hlt
in
das
scas
dec
cld
popf
out
ret
add
subl
push
cmp
sub
sti
sbb
popa
add
stc
iret
cmp
inc
out
cmp
jecxz
orb
jbe
test
fdiv
loopne
adc
movsl
xor
and
push
mov
or
mov
fldl
arpl
scas
pop
aas
xor
cld
cs
jmp
aas
clc
dec
aam
jns
ds
imul
xor
lods
cmpb
jnp
cld
popf
jno
fwait
cltd
call
inc
lcall
adc
hlt
loop
fwait
pop
mov
mov
pop
jmp
inc
adc
or
sub
inc
and
ja
cld
arpl
inc
shrl
inc
push
ret
xchg
inc
push
jl
inc
data16
inc
inc
mov
inc
hlt
sub
pop
movb
fsubl
cltd
dec
scas
daa
dec
xchg
jae
dec
pop
pop
dec
and
orl
dec
pop
pop
dec
mov
dec
adc
dec
stos
dec
adc
and
jae
dec
data16
cli
sub
loopne
mov
adc
dec
ret
jl
dec
bound
inc
movsl
and
clc
sub
sub
push
mov
adcb
push
push
call
cmp
mov
iret
push
inc
pop
std
push
xchg
sbb
adcb
sahf
mov
scas
jle
cmp
cmp
push
ss
jns
add
adc
and
push
adc
pop
mov
pushf
repnz
xchg
xor
xchg
dec
pop
push
fstps
push
aas
sbb
xchg
sub
out
outsb
push
ss
mov
data16
mov
cmc
jo
test
test
xchg
pop
xlat
mov
mov
dec
pop
push
ret
lret
in
sbb
sbb
fwait
ss
adc
jns
inc
and
js
push
xor
sub
gs
addw
mov
inc
pop
mov
cld
pop
repnz
pop
inc
cli
call
or
cwtl
fs
pop
sbb
hlt
out
xchg
dec
xchg
loop
fs
clc
sub
aaa
ret
pop
mov
dec
pop
xor
xor
pop
imul
in
shrb
les
jns
mov
cmp
jg
hlt
mov
arpl
pusha
mov
in
mov
xor
scas
mov
add
dec
fs
out
ja
add
cmpsl
shrb
andb
shrb
fs
mov
ss
hlt
adcw
stos
hlt
cwtl
fs
cld
sub
or
xchg
push
or
sti
int
push
add
push
sub
push
mov
cmp
sbb
outsb
inc
ret
xlat
jl
ret
ss
pop
je
popf
ror
call
mov
add
out
roll
sub
and
stos
mov
fstp
int
call
mov
aas
fildl
xchg
repz
xchg
sarl
mov
xor
scas
jb
jmp
jb
jmp
jb
adcl
dec
jb
sub
xchg
dec
pshufw
loop
pop
jo
repz
jo
jmp
jo
jmp
jo
pop
cld
call
sub
push
add
xorb
mov
stc
fs
sbb
je
xchg
je
sbb
call
fisttpl
je
fwait
gs
je
test
jp
test
jp
insb
mov
into
jp
cld
jp
mov
mov
js
cli
imul
aas
js
test
js
scas
jnp
inc
pop
test
jle
cs
jle
arpl
out
adc
std
mov
popf
push
jecxz
ja
jle
testl
push
cld
pop
sti
ss
pop
test
movsl
add
mov
scas
add
inc
ss
or
add
jl
dec
or
repz
js
and
or
adc
mov
add
pop
sub
jg
sub
push
ret
inc
adcb
orb
shll
shrb
xchg
sub
out
xchg
xchg
mov
ret
in
xchg
pop
xchg
cmp
mov
rolb
mov
mov
mov
test
mov
test
mov
jmp
arpl
cli
jecxz
call
pop
mov
pop
fimull
shrb
mov
jns
jle
cmp
mov
mov
jnp
icebp
xor
movsb
add
xor
mov
jecxz
call
repnz
pop
mov
xchg
rcll
sub
xchg
push
mov
sub
aas
jbe
test
pop
lret
xor
imul
jmp
nop
negl
enter
stc
fs
sbb
nop
lods
add
clc
loop
cs
nop
and
xchg
mov
loop
fidivl
shlb
aas
mov
xchg
adc
fs
xchg
pop
aas
das
adc
xchg
sbb
mov
jge
or
sbb
xor
sahf
xchg
xorw
mov
jge
iret
ss
pusha
and
call
pusha
loop
mov
push
cmc
and
scas
lret
xchg
and
sbbl
int
out
dec
dec
xchg
das
or
or
cmc
inc
adc
subl
loopne
fisubl
xchg
push
and
dec
arpl
mov
mov
jno
out
sahf
push
loopne
mov
es
stos
sub
pop
inc
pop
inc
mov
ss
into
dec
fcmovnb
mov
cltd
pop
push
lret
dec
dec
mov
sti
into
cmp
sbb
dec
mov
es
insl
movb
fs
dec
sub
dec
push
in
push
push
inc
arpl
push
test
popf
inc
add
push
sub
lcall
int3
outsb
dec
sbb
dec
xor
fwait
insl
pop
dec
inc
push
pop
jbe
pushf
ficoms
lods
mov
jp
lods
cwtl
mov
into
in
lods
clc
outsl
push
arpl
repz
adc
outsb
mov
fisttpl
sbb
nop
repnz
mov
dec
ret
adc
jbe
pushf
in
mov
fsubs
pop
fildll
mov
push
or
xchg
mov
pushf
dec
xchg
xor
or
and
imul
jmp
loopne
jmp
imul
sbb
test
mov
mov
mov
icebp
notb
jo
pop
sub
push
mov
repz
lahf
pop
sahf
mov
js
mov
inc
outsl
mov
jg
mov
ds
jae
mov
pop
bswap
pushf
mov
std
inc
jmp
push
mov
sbb
insl
test
clc
fsubr
sub
push
mov
cli
jmp
mov
clc
dec
mov
ret
xchg
ret
mov
push
pop
sar
sbb
popa
add
stos
repnz
cmp
add
fisubrs
sbb
nop
loopne
and
mov
inc
loopne,pt
fs
movsb
testb
push
mov
mov
callw
inc
pop
pop
movsb
int
call
pop
add
dec
repz
insb
add
and
inc
xchg
cld
cs
jno
sub
pusha
ret
shr
jmp
movsb
push
xchg
in
xchg
adc
push
call
in
stos
add
jge
or
mov
mov
pop
stos
lcall
jbe
lock
xchg
and
add
stos
mov
and
cmp
out
inc
sub
pop
out
cwtl
in
pusha
movsl
arpl
daa
jb
inc
lds
jae
stos
xchg
loop
sbb
ljmp
test
cld
mov
sti
call
adc
mov
pop
sub
push
sub
sbb
jmp
test
ljmp
mov
ljmp
shll
out
sub
jge
mov
mov
sbb
dec
add
ljmp
outsl
rcl
adc
mov
ja
iret
jecxz
imul
lods
dec
bound
xchg
loop
sbbl
xchg
pop
mov
fdivs
les
popa
pop
fisubs
add
movaps
inc
pop
stos
jne
std
and
clc
cwtl
shl
arpl
mov
and
mov
pop
mov
jge
pop
xor
mulb
pop
cmp
in
xor
mov
das
mov
xchg
and
add
push
subl
repnz
jge
jmp
sub
push
rorb
dec
and
call
dec
xor
rorb
and
mov
fbstp
fwait
cmp
mov
cmp
or
pop
sub
xchg
sti
imull
subl
test
cmp
out
es
sub
adc
push
fmull
mov
lahf
mov
data16
stos
adc
cmpsb
adc
fs
mov
movb
call
push
mov
testl
gs
inc
negb
lcall
rcrl
dec
stc
mov
cmp
repz
pop
test
cmp
bound
ffree
lods
and
lea
hlt
sarb
mov
dec
dec
orl
jnp
mov
ljmp
test
and
movl
lahf
cmp
add
add
xlat
sbb
push
dec
imul
push
sti
add
dec
pusha
popa
xor
arpl
cmp
das
add
mov
cmp
cs
xlat
and
test
xchg
cmp
pushf
or
cmp
cwtl
dec
xor
enter
les
xchg
mov
int3
flds
out
jno
xchg
mov
repnz
fidivrl
cld
sub
popf
into
loopne
inc
ljmp
outsb
pop
xor
loope
arpl
mov
out
jno
pushf
fcomps
xchg
sbb
sub
je
mov
lret
mov
mov
lret
mov
mov
sub
jg
into
and
stc
sub
mov
mov
cmp
sbb
and
add
outsl
and
jp
inc
xchg
loope
pop
push
enter
lahf
jecxz
inc
mov
arpl
xchg
stc
cmp
ljmp
add
ret
sub
mov
inc
lret
and
gs
push
pop
pop
call
pop
repnz
fnstenv
dec
push
mov
xor
fwait
jmp
pop
cs
mov
xor
stc
mov
stos
xor
clc
dec
xor
pop
jnp
mov
dec
ljmp
shlb
push
popf
fisubs
arpl
pop
push
jecxz
push
popf
inc
sbb
lods
jnp
sub
cltd
pop
mov
shlb
xchg
sbb
and
out
outsl
fs
inc
jb
data16
push
movsb
cld
push
mov
in
dec
push
push
pop
push
sbb
das
push
push
add
mov
and
sbb
fiaddl
das
add
fmul
rcrb
add
dec
mov
cmp
jecxz
adc
xor
mov
inc
mov
lods
test
outsl
es
push
fnstcw
push
sahf
mov
mov
es
xchg
std
stc
stos
push
mov
or
repnz
das
pop
or
les
xchg
mov
or
sbb
pop
mov
adc
pop
fadd
andl
stos
jne
sbb
int
fdivl
sbb
xchg
xor
mov
dec
adc
outsl
test
xor
sub
jnp
loop
fs
jb
ds
xor
cmp
es
mov
push
movsb
test
mul
sbb
dec
shl
insb
pop
frstor
test
mov
fiaddl
ljmp
mov
incb
push
pushf
ja
scas
push
cltd
push
pop
sarb
adcl
outsl
dec
add
lds
jne
rcrb
push
pop
enter
sbb
lret
testb
div
jmp
out
mov
jmp
mov
dec
push
enter
enter
mov
enter
test
xor
cs
mov
outsb
and
addl
lcall
arpl
data16
or
insl
inc
aaa
and
pushf
lahf
out
fidivs
xor
testl
into
sbb
popf
das
mov
mov
adc
sub
dec
cwtl
insl
pushf
leave
icebp
push
addr16
mov
mov
frstor
dec
int
fidivl
movb
inc
outsl
mov
repz
std
inc
add
cmc
std
and
fmulp
sahf
jmp
mov
cltd
pop
mov
jns
xchg
cmp
and
xchg
inc
int3
or
mov
sarb
in
xor
js
push
push
dec
add
scas
xlat
cmp
push
sub
arpl
jno
cltd
sub
fcoml
and
sub
pop
mov
push
fwait
or
movsb
rclb
out
arpl
arpl
andl
xor
mov
arpl
adc
jg
cli
mov
stos
mov
fs
add
jl
in
fbstp
cld
ljmp
addr16
ja
or
adc
scas
lds
xchg
dec
js
lods
cwtl
clc
pop
dec
add
adc
lahf
scas
test
pop
mov
or
aam
and
aam
int
hlt
and
cmp
adc
sub
not
sbb
into
lods
cmp
pop
sub
lods
ficoml
dec
aad
lahf
dec
leave
dec
mov
xchg
dec
adc
lods
xor
cmp
ficomps
dec
mov
lods
fdivs
push
out
and
or
xor
fadds
mov
ficoms
or
jmp
fdivp
sub
xchg
repnz
ljmp
fwait
dec
stos
mov
push
fsubl
lcall
test
fwait
push
ljmp
adc
loop
inc
ljmp
loop
sub
loopne
sbb
aam
sub
pop
sub
lahf
loopne
dec
loopne
dec
mov
loopne
dec
cld
loopne
sbb
cmp
ljmp
or
hlt
sub
sbb
fs
jp
cmpsl
in
loopne
jmp
cli
sbb
jg
pop
in
sub
or
dec
loop
in
ljmp
je
adc
loop
movsb
add
jmp
jno
gs
cld
ror
pop
sbb
sbb
cmp
sub
cmp
int
iret
scas
mov
dec
add
lock
dec
fcomps
and
mov
adc
test
call
lods
push
bound
dec
imul
mov
sbb
sbb
xchg
ja
je
out
fsubp
dec
and
roll
out
push
add
fsubrl
sahf
les
jbe
mov
jnp
lea
dec
ds
out
clc
mov
in
sub
in
sub
sti
scas
ljmp
jne
push
pop
inc
subl
rcll
dec
add
sbb
loopne
and
repnz
sub
xor
cld
mov
and
call
repnz
dec
inc
arpl
lock
lock
je
mov
xor
sbb
dec
clc
lock
ljmp
cmp
cs
idivb
mulb
fs
je
dec
mov
icebp
sbb
sbb
inc
stos
ret
cli
cs
add
xchg
data16
adc
mov
mov
sti
mov
pop
call
jns
cltd
lret
add
arpl
shlb
dec
mov
outsl
adc
or
in
adc
push
call
cmpsb
xchg
pop
sbb
cs
lcall
cli
scas
jmp
cli
mov
imul
test
fwait
lret
push
pop
inc
orl
jecxz
sti
mov
shlb
rolb
xchg
pushf
jge
enter
notl
jmp
cld
call
cli
xor
mov
and
xor
xor
pop
sub
and
and
jo
ret
jns
dec
xor
sub
pop
sar
xor
push
fisubrl
mov
mov
enter
clc
or
jno
mov
lock
mov
popl
fs
sbb
jecxz
popa
mov
loop
and
xchg
mov
insl
rcrl
repz
loop
sub
pop
lock
dec
adcl
into
pop
ja
ret
mul
cld
mov
dec
sbb
pop
ss
jge
cld
sbb
shr
repz
add
dec
adc
or
fucomip
push
loope
or
sbb
in
or
sub
movsb
cmovne
push
fwait
cmp
lods
pushf
stos
inc
arpl
out
loop
ss
mov
dec
pushf
cmp
mov
inc
jo
dec
std
gs
lock
and
add
cltd
mov
fcoml
push
pop
lahf
add
jp
inc
inc
fists
sbb
xor
dec
mov
dec
inc
imul
orb
test
sub
pop
popf
rclb
subl
push
cmp
test
add
sub
add
imul
sub
pop
xchg
mov
stos
mov
ljmp
test
push
push
dec
imul
pop
jecxz
mov
mov
fs
push
jl
push
loopne
cs
loop
arpl
sub
mov
add
mov
pop
iret
add
in
cmp
add
jnp
dec
dec
add
mov
bound
js
jnp
ret
mov
or
ss
mov
lock
push
test
or
loop
sub
mov
jmp
mov
or
cltd
or
push
sbbb
cmp
mov
mov
fstl
das
faddl
iret
jne
cmp
xchg
stc
fucom
xchg
lock
test
rsm
cmp
ret
push
cmp
add
loopne
andb
cld
jo
arpl
scas
clc
lock
mov
or
lret
pop
scas
mov
adc
icebp
or
cli
adc
fs
or
dec
cmpsl
jns
push
push
jmp
je
push
or
dec
xchg
sbbl
dec
shrl
lcall
fstl
out
push
adc
push
call
mov
nop
sub
stos
inc
xchg
xchg
in
sbb
gs
push
pop
leave
adc
in
lock
inc
adc
sub
jp
jg
mov
jge
ds
fwait
lock
sub
out
leave
push
push
pop
scas
push
xchg
and
stc
fucom
fwait
lock
and
xadd
jp
pop
scas
mov
sbbl
adc
into
mov
dec
push
sbbl
loopne
add
adc
movzbl
or
jp
dec
mov
add
mov
add
jp
and
inc
addl
xchg
out
sti
sbb
stc
call
mov
pop
pop
xchg
mov
cltd
push
fstpl
into
mov
dec
das
xchg
loopne
add
out
stc
fucom
fwait
lock
in
jae
scas
addb
data16
cs
fcomp
jp
dec
mov
sbb
lcall
fisttpll
shr
push
fists
jp
push
pop
pop
insb
mov
movsb
mov
xchg
xor
xchg
rcll
push
jecxz
jecxz
test
sbb
xor
jecxz
cs
sbb
mov
push
mov
cmp
jae
mov
stc
pop
mov
xchg
pushf
mov
psubq
sub
sti
rcrb
jmp
sbb
cmp
mov
mov
cld
mov
loope
push
arpl
and
sub
and
pop
and
out
test
and
fnstsw
xchg
pushf
and
cmp
adc
adc
sbb
loop
xor
sti
xchg
cmp
imul
and
out
adc
and
lea
and
outsl
and
fs
and
shlb
pop
dec
popa
dec
jecxz
cwtl
lea
es
push
or
mov
scas
add
cli
sub
repz
pushf
ja
enter
ss
pop
imul
cs
es
mov
shrb
and
sbb
pop
jmp
insb
and
xchg
add
scas
mov
clc
pop
arpl
aam
jnp
jbe
imul
rolb
dec
sub
insl
add
adcl
jg
shrb
sub
cs
jmp
pushf
imul
pop
pop
fsubrl
in
arpl
mov
test
pushf
push
xchg
not
jno
ljmp
sub
mov
bnd
fwait
sub
sti
xlat
push
sarl
mov
aas
push
jb
mov
cmpsl
jecxz,pn
sub
or
cmpsl
inc
nop
cs
imul
subb
cs
and
out
push
aam
and
add
inc
arpl
push
or
loope
or
shl
sbb
sub
popf
push
jecxz
subb
sub
inc
sahf
and
sub
repz
jmp
sub
das
cmp
es
and
adc
inc
dec
cmpsb
and
xor
sub
jmp
xor
popf
leave
pop
fiaddl
inc
jmp
sbb
mov
add
pop
push
pop
jecxz
dec
mov
pop
fcomps
in
jge
cmpsb
lods
mov
pop
xor
xor
xor
mov
in
push
xor
jnp
bound
cmc
mov
call
add
sbb
pop
add
rcl
pop
dec
jb
sbb
arpl
ss
dec
jne
jmp
dec
cli
jecxz
mov
fnsave
test
loopne
dec
cmp
stos
loope
popf
jne
movsb
mov
leave
jecxz
sti
push
hlt
ljmp
jne
fs
aaa
dec
push
dec
mov
ja
sbb
push
popf
fadds
fdivs
sub
push
xchg
mov
cmpsl
pop
jmp
cmp
mov
mov
cmp
out
cmp
fistps
ret
int
cmp
pop
and
ret
mov
mov
xchg
xchg
ds
aam
jp
fsubrs
aas
mov
mov
and
push
pop
jg
mov
cmp
inc
jno
mov
jecxz
jmp
adc
sub
push
and
loopne
es
jb
mov
lret
cmp
mov
push
rclb
out
dec
cmp
enter
inc
mov
mov
out
arpl
insl
pop
out
xor
dec
std
cmp
ja
inc
sub
stc
arpl
jnp
xor
jp,pn
stos
shrl
rcrl
fs
test
call
cld
pushf
bound
and
mov
stc
xor
loopne
rclb
mov
stc
push
xor
jp
fs
fstpt
stc
jmp
inc
sbb
rorl
adc
and
jns
stc
sub
scas
jnp
mov
repz
inc
and
xor
mov
ja
pop
dec
mov
push
jecxz
fistpl
mov
jge
stc
add
push
cmp
jbe
and
movsb
add
faddl
fists
jecxz
pushf
pop
jbe
data16
or
sbb
xor
arpl
call
dec
jmp
inc
jg
jp
mov
stc
xchg
push
shr
inc
arpl
into
sub
cli
add
ljmp
repz
enter
pop
test
lret
dec
mov
rcl
pop
pushf
movsb
loopne
dec
loopne
cs
mov
ret
cs
in
test
inc
loopne
dec
xchg
sbb
jmp
inc
adc
cli
xchg
jmp
inc
lcall
dec
decl
sbb
dec
sbb
loopne
sti
aaa
call
adc
sbb
jg
rorb
dec
xor
mov
fs
dec
aas
cmpsb
decb
in
dec
sbb
jmp
mov
dec
and
pop
sti
sbbb
mov
add
adc
push
mov
xchg
dec
orb
or
ja
cwtl
fs
push
sbb
push
popf
fstpl
mov
ss
test
push
push
scas
xor
inc
pop
imul
lret
mov
mov
push
sbb
stos
dec
push
ja
mov
lock
lods
mov
lods
cmp
lods
sahf
push
push
jmp
push
repnz
mov
sbb
add
loopne
xorl
mov
pop
lods
cli
push
pop
lea
pop
lea
pop
pop
lea
pop
lea
pop
pop
lea
pop
lea
pop
pop
xlat
adc
pop
sbb
ffree
sbb
std
jge
cmp
fadd
sbb
cmp
notl
dec
fwait
cmp
cmp
xor
fs
arpl
dec
loop
lods
js
xor
mov
arpl
dec
dec
test
pop
loop
fs
jl
loopne
or
out
popa
or
and
sub
out
mov
sub
hlt
sub
addr16
or
sub
addr16
dec
add
ret
addr16
out
imul
push
lods
pop
cmp
or
fs
sbb
jg
jns
sbb
cmpl
aas
imul
cli
imul
sub
outsl
imul
int3
stc
imul
xchg
pop
test
cmc
outsl
pop
testb
jl
pop
sub
repnz
lock
jp
jnp
out
dec
outsl
jns
mov
or
cmp
stos
jb
xchg
scas
mov
call
mov
xor
std
data16
mov
fisttps
arpl
push
imul
cmpsb
stos
out
jno
push
mov
pop
jne
rorb
sbb
sub
xorb
push
push
rcll
and
mov
mov
dec
mov
stos
push
sarb
pop
fdivrs
stos
xor
imul
insl
adc
jne
inc
shrl
insl
adc
jne
inc
in
pop
jne
pop
mov
jnp
xchg
std
jnp
insl
adcl
insl
je
mov
loopne
stc
xor
mov
call
insl
push
ret
xchg
jns
xor
mov
jb
sub
pop
stos
sbb
sub
roll
sti
jg
repnz
in
cmc
push
jg
sbb
sub
ret
inc
jg
xor
jge
jno
add
pop
ss
jge
insl
add
jge
push
fs
xchg
fstpt
push
ljmp
subl
mov
insl
cmp
subl
and
out
mov
subl
subl
in
subl
sub
clc
mov
les
testb
fwait
xchg
iret
int3
pop
scas
idivb
cs
jnp
cli
inc
and
pusha
xor
push
jno
aam
or
hlt
adc
ret
push
jl
dec
pop
pop
movsb
push
adc
sub
das
sub
mov
stos
cltd
fcomps
dec
aam
mov
cwtl
popf
jnp
jle
mov
popa
xchg
pop
pop
test
pop
rolb
jo
dec
test
xchg
repz
xchg
sahf
int3
jp
xchg
pop
push
test
arpl
mov
mov
jl
shl
idivb
ljmp
pop
dec
or
fwait
cmp
hlt
stc
mov
xchg
mov
xchg
mov
cs
lcall
es
xlat
sub
cmpsl
jnp
jmp
fisttps
and
lahf
into
dec
push
jmp
xlat
fbld
adc
loopne
repnz
and
pop
test
subb
movsl
mov
orl
insb
lea
les
inc
scas
inc
lea
pop
xchg
rclb
sbb
cwtl
xlat
bound
les
xchg
ds
xchg
ds
popa
aad
pop
jp
add
xor
cs
popf
xchg
call
xchg
out
es
push
scas
mov
inc
cmc
sub
ds
clc
dec
jne
lcall
xchg
xlat
xchg
daa
fimull
int3
adc
cwtl
dec
pop
xchg
jecxz
xchg
xchg
or
pusha
mov
daa
lods
xchg
dec
lock
adc
sbb
ficoms
xchg
mov
shr
xchg
lea
push
jmp
fwait
xchg
ret
stc
arpl
rcrl
mov
dec
mov
or
fwait
mov
subb
cltd
sbb
cltd
stc
jmp
cli
dec
add
xorb
lret
pop
dec
ret
mov
dec
mov
dec
cltd
inc
pop
sbbl
ret
lahf
movsb
aaa
out
dec
sti
lahf
mov
push
shrl
push
lea
mov
pop
jecxz
mov
test
cmpsb
fstpt
inc
out
popf
pop
xor
popf
mov
ret
popf
shrb
popf
ffree
movsl
sbbl
mov
mov
test
sahf
xchg
and
lret
mov
cmpsl
ret
sbb
inc
push
sub
mov
dec
clc
test
inc
push
mov
mov
jns
xchg
mov
and
mov
pop
or
fs
jnp
arpl
mov
mov
cmp
cmpsl
sub
sbb
fldenv
mov
or
hlt
sti
pop
cs
cmpsl
in
lock
movsl
jle
shlb
push
imul
ss
dec
xor
movsl
cltd
into
fisttps
clc
fidivrs
scas
mov
push
movsl
fcmove
loopne
fcoms
pop
xchg
out
cmp
jnp
imul
dec
shrl
xor
push
push
loopne
sub
adc
cs
inc
pop
mov
jp
mov
push
rcrb
push
sbb
call
cwtl
dec
xor
sbb
test
sbb
xor
shrb
scas
mov
scas
inc
push
pop
mov
scas
loope
and
rcrl
int
lea
cmp
cs
jnp
lcall
ret
sbb
mov
in
leave
jbe
add
xor
push
add
adc
int
lock
pop
mov
lods
sub
cli
dec
lods
ljmp
pop
mov
xchg
cmp
jnp
lods
adc
lods
insl
les
lods
insl
sti
inc
js
data16
mov
imul
jae
mov
adc
fwait
dec
xchg
cmp
loop
sub
dec
data16
mov
xchg
or
pop
sahf
cmp
add
sahf
pop
sub
pop
jae
mov
push
dec
shll
jne
sub
and
push
ljmp
mov
mov
rcll
mov
mov
mov
fwait
aas
or
fistps
adc
fisubl
add
cmp
pop
sti
int
aas
les
mov
sub
dec
mov
bound
inc
or
mov
das
pusha
sti
and
mov
xor
cmc
roll
inc
adc
lret
shll
pop
mov
scas
das
mov
test
mov
out
ficoml
xchg
cmp
call
popa
or
aas
popf
mov
scas
sbb
xor
sub
mov
enter
jbe
cli
lcall
lcall
xchg
xchg
sbb
repnz
xlat
xchg
dec
fistpll
cld
xchg
mov
sbb
sarb
mov
out
stos
sbb
dec
stos
stc
mov
pop
test
loopne
jecxz
jle
arpl
push
call
ljmp
imul
adc
xchg
mov
add
stc
adc
ljmp
dec
inc
arpl
cld
mov
mov
or
cmp
loop
sub
sbb
and
pop
or
dec
adc
dec
decl
ret
jmp
sub
decb
push
shlb
xchg
ljmp
and
notl
jp
loopne
sub
pop
xchg
into
adc
out
clc
shl
pop
inc
ret
cli
xchg
and
mov
mov
ror
cmp
shrb
xadd
xor
das
shrb
shrl
xor
call
xchg
push
shr
in
push
icebp
or
int3
pushf
stos
sbb
das
and
arpl
and
call
sbb
mov
inc
fs
hlt
lret
pop
jno,pn
out
lret
popf
js
aad
mov
out
sub
lds
cs
mov
imul
and
stos
mov
adc
or
sbb
test
and
call
pop
push
push
fs
data16
inc
sbb
imul
ret
scas
pop
or
ret
lret
stos
lods
fistl
mov
in
ss
into
or
iret
jo
int3
jb
call
push
rcrl
mov
xor
mov
mov
rorl
leave
sbb
and
lods
movsl
gs
xor
fwait
shll
add
cltd
hlt
push
loop
sub
dec
mov
xor
or
lret
cmpsb
mov
ret
jae
or
xchg
mov
jmp
inc
out
dec
or
cmpsl
inc
es
xchg
xchg
mov
xor
int
test
xchg
aaa
int
loopne
dec
push
int
fucomi
jo
shlb
lea
adc
and
jmp
outsl
add
fdiv
adc
in
inc
fadds
mov
lcall
mov
ds
mov
roll
ret
cmp
ret
jecxz
lret
fidivl
ss
scas
cs
sarl
and
lret
push
lods
mov
mov
icebp
jle
dec
idivl
jle
inc
pop
stos
pop
mov
sub
sbb
lods
fsubr
or
mov
sbb
add
mov
int
shrl
cld
push
popa
inc
jnp
out
mov
outsb
fisubrs
lods
jne
pop
movsb
mov
das
adc
mov
sbb
xchg
mov
jmp
jo
shl
iret
stc
pop
js
in
cs
sub
rcrl
ds
xor
lods
inc
ljmp
xchg
ja
mov
mov
mov
subl
mov
xor
jnp
mov
mov
leave
sub
mov
dec
mov
adc
insl
push
fcomps
sbb
sub
testl
xlat
mov
push
sbb
lret
and
negb
popf
sub
fsubr
inc
jecxz
fnsave
fxch
inc
mov
outsl
sbb
mov
call
in
movsb
ss
mov
and
dec
and
sbb
cmc
enter
mov
lahf
jle
pop
xchg
stc
dec
or
scas
inc
pop
mov
dec
inc
mov
dec
push
cltd
push
int3
mov
cmc
out
jecxz
mov
inc
mov
xchg
adc
lret
mov
icebp
add
add
pop
lcall
out
rcr
inc
in
xchg
mov
push
sub
clc
inc
cs
test
fnstcw
iret
sbb
fcoml
leave
scas
jmp
mov
pop
or
sub
pop
pop
imul
sub
in
jecxz
jge
pop
cs
mov
or
xchg
mov
fnsave
cs
movsb
push
sbb
mov
loopne
fisubl
shl
test
xchg
pop
mov
xchg
push
popl
negb
in
adc
bound
out
mov
push
icebp
or
pusha
call
repnz
pop
or
pop
dec
push
sub
jecxz
out
jecxz
adc
adc
jecxz
iret
jno
xchg
pop
orps
loope
notb
sarl
mov
loopne
mov
repz
and
sub
dec
mov
sbb
xchg
dec
test
add
enter
cli
jl
loope
mov
shr
cmp
es
sub
movsl
jecxz
mov
xchg
and
mov
fcoml
and
out
push
pop
out
ficompl
repnz
movsb
push
mov
cmpsl
and
adc
adc
outsb
adc
std
cmpsl
inc
int3
xchg
in
es
mov
cmp
jns
in
push
loope
add
mov
push
inc
and
xlat
mov
mov
push
push
ljmp
cmp
push
push
movsb
ret
or
push
add
dec
ss
add
jg
push
dec
in
jmp
or
shr
jle
push
sub
in
hlt
or
pop
mov
das
xor
push
jecxz
test
sbb
adc
test
bound
imul
rclb
stos
adc
call
loopne
pop
xchg
jle
pop
jp,pn
adc
test
push
push
and
data16
pop
sub
scas
out
and
ficoms
shlb
out
ja
scas
mov
mov
pop
dec
xor
in
fimull
das
or
loopne
pop
popa
jle
pop
cs
int
push
sub
jmp
jmp
in
mov
jmp
mov
push
in
push
ss
and
jecxz
mov
jp
pushf
sub
gs
pop
sbb
cmp
or
repz
jecxz
mov
in
pop
jbe,pn
adc
fs
hlt
repnz
decb
in
cld
in
ljmp
mov
xor
bound
jle
cmp
push
mov
jmp
movsb
or
lock
sub
in
pop
pop
pop
cmp
and
xor
bound
sub
mulb
dec
pushf
jmp
imull
and
cmp
int
jl
pusha
push
hlt
or
and
in
add
dec
cmpsb
xchg
cld
cs
push
ljmp
and
int
cmc
lret
add
cs
adc
jecxz
mov
add
cs
movsl
xchg
or
cs
fisubrl
dec
sbb
add
test
mov
add
out
leave
sti
cmp
call
adc
and
hlt
sub
sti
pusha
scas
mov
loopne
pop
stc
mov
aas
das
out
adc
jle
sub
jecxz
push
adc
in
mov
inc
cld
cs
push
push
jecxz
mov
jl
stc
cmp
sub
adc
or
inc
lods
mov
in
inc
push
cs
push
fs
hlt
ror
jmp
pop
mov
icebp
jnp
in
les
push
aas
mov
das
fdivl
call
ljmp
cs
mov
lret
std
bound
xlat
std
icebp
jge
mov
adc
in
aas
mov
les
loopne
sbb
push
call
pop
outsl
int
push
dec
movsl
enter
call
mov
fildll
fisubl
mov
in
sbb
jne
hlt
cmp
loop
cs
cmp
jg
into
jmp
add
aam
pop
leave
add
icebp
in
cld
in
pop
dec
lods
cmpsb
inc
cld
lods
push
ljmp
pusha
cs
xchg
int3
mov
sub
sbb
cs
mov
xlat
xor
std
ljmp
mov
lea
shl
sub
cs
sbb
pushf
out
adc
sub
in
cmpsb
xchg
lret
and
cs
lea
jo
add
rorb
sbb
and
dec
pop
jecxz
jle
cmp
lcall
fsubrs
add
jecxz
int3
lar
sub
in
pushf
movsl
enter
jge
push
dec
jmp
add
and
dec
sub
and
cmp
push
add
scas
ljmp
rclb
enter
pop
adc
mov
sub
or
arpl
cmp
sub
or
fsubr
fsubr
mov
not
hlt
daa
cmpsb
enter
xor
add
int3
bound
jle
xor
bound
sub
bound
das
int
mov
sub
adc
pop
push
stos
movsb
hlt
rclb
jecxz
jle
cmp
push
xchg
popl
adc
xchg
cmpsb
test
pmuludq
enter
jmp
fdiv
jge
ds
xor
adc
pop
loope
jl
push
push
dec
daa
jecxz
jle
cmp
aam
movsb
xor
bound
das
ljmp
sub
fisubrs
loopne
fs
test
xor
and
inc
hlt
pusha
push
dec
aaa
jecxz
jle
cmp
jbe
xor
sub
ljmp
sbb
lods
fdivrl
pop
ljmp
or
xor
add
loopne
call
jle
dec
pop
hlt
mov
add
adc
clc
push
dec
enter
cmp
push
std
jmp
dec
push
ljmp
pop
ljmp
shll
inc
das
adc
test
pop
mov
xor
lret
stos
mov
fsub
mov
dec
cmp
push
push
stos
lea
sti
jmp
adc
pop
int
xor
jmp
pop
and
push
dec
fs
or
stos
inc
sub
loope
xor
fistps
mov
cmp
jno
sub
xor
lea
ja
cmp
push
ljmp
push
bound
das
cmp
dec
push
sub
xor
out
pop
mov
push
dec
cld
jecxz
jl
in
dec
inc
jecxz
jle
cmp
sbb
cmc
cmp
lds
cmp
or
adc
jp
dec
pop
daa
call
jl
fs
add
sarb
enter
inc
int
xor
bound
jle
xor
bound
sub
bound
das
fsin
in
sub
pop
mov
xor
mov
aam
filds
pushf
cs
stos
adc
push
int
xor
bound
jle
xor
bound
sub
pop
scas
mov
mov
lods
in
pop
int
cmp
enter
mov
bound
das
mov
xchg
push
sub
in
mov
imul
jmp
out
hlt
jns
and
jl
out
pushf
mov
sub
mul
pop
inc
stos
fs
mov
dec
orb
lods
mov
arpl
cmp
in
or
pop
cs
dec
jecxz
jle
cmp
and
fwait
pushf
rcll
inc
jecxz
int
xor
bound
das
push
xor
in
mov
xor
add
aam
sbb
push
out
and
arpl
cld
mov
stos
pop
pushf
out
ljmp
cmp
xchg
cmp
fs
sti
fiaddl
stos
ljmp
sbbb
repz
popa
int
cmp
mov
add
and
sahf
push
sub
sti
or
and
scas
call
and
dec
jl
add
adc
repnz
inc
ret
js
loop
jecxz
fmulp
call
enter
jle
rcrb
add
out
shrl
jge
mov
pop
sub
sub
in
enter
lret
push
cld
ficoms
ret
jecxz
int
shlb
andb
dec
fcomi
lea
push
sbb
jmp
mov
loopne
pop
das
popf
loope
dec
sahf
cs
outsb
or
and
das
and
int
je
adc
xor
int3
scas
test
das
inc
adc
cs
mov
sub
pusha
jecxz
xchg
loope
lods
jle
shl
sub
hlt
cs
les
dec
or
push
popf
dec
jg
lea
xchg
loop
mov
sub
cld
rcrl
popf
call
jl
fs
ds
das
lret
loop
mov
mov
fsub
les
cmp
push
and
scas
arpl
shrb
dec
mov
pop
cmp
loopne
lret
mov
mov
push
push
cwtl
in
push
fisubrs
mov
sbb
in
popf
jle
movsl
popa
cld
xor
and
bound
xor
cs
ljmp
adc
in
push
cs
cmp
jecxz
mov
push
pop
repz
shl
sub
and
lret
pop
add
add
inc
popf
mov
shlb
pop
ja
stc
cs
ss
aas
cmp
loop
cmp
ljmp
sbb
std
add
cs
rorb
jecxz
mov
mov
shr
mov
hlt
pop
shlb
sbb
iret
cs
lahf
xor
shrb
sub
std
ljmp
hlt
mov
and
dec
iret
rorl
mov
cmp
out
je
push
add
and
sub
cltd
push
xor
imul
cs
scas
cmp
xchg
cld
out
jmp
cmp
std
jecxz
jle
shl
sub
push
or
stos
hlt
hlt
in
dec
mov
sub
fildll
cs
xor
bound
das
cmp
jle
scas
lods
add
adc
inc
inc
dec
repz
ret
inc
push
sub
in
test
loopne,pn
lret
sahf
test
cmp
or
adc
clc
in
enter
das
cmp
loop
arpl
dec
mov
cs
xchg
aas
lea
pop
shrb
sub
push
insb
popl
loop
cs
test
lret
pop
lcall
aas
cld
cmpsb
add
dec
push
in
and
mov
rcll
aas
jge
mov
movsl
cmp
cmp
loop
mov
sbb
sub
mov
push
fisubrs
scas
scas
or
xchg
cmp
jle
shl
sub
and
jp
inc
mov
ror
cs
dec
das
cs
sbb
sub
cmp
lods
cmp
loopne
ljmp
lea
in
push
xor
jmp
cmpsb
sbb
push
inc
dec
inc
pcmpeqb
mov
inc
cmpsb
dec
cmpsb
std
cld
cs
xor
test
inc
cs
adc
jecxz
xchg
adc
mov
adc
push
push
in
xchg
cmpsb
cmc
pop
das
or
loop,pn
rclb
push
dec
cs
xchg
rorl
and
push
nop
cmovb
call
push
adc
jnp
ror
cs
sub
dec
push
pusha
jecxz
mov
push
dec
or
repnz
out
push
addr16
adc
mov
adc
cs
xchg
push
dec
out
adc
cs
nop
sbb
mov
fcoml
jo
jmp
movsb
sbb
loop,pn
mov
cld
hlt
and
dec
cmp
sub
push
inc
lea
push
sub
xor
lret
lea
ret
add
mov
loopne
pop
adc
dec
push
jecxz
jle
cmp
xchg
pop
jl
add
cs
daa
out
int
shrb
sub
push
lret
lea
push
sub
dec
test
lret
pop
jecxz
add
lret
pop
and
or
inc
add
mov
loopne
pop
stos
fnstsw
cs
pop
int
ss
std
in
push
cs
je
sub
call
mov
notl
data16
xor
and
dec
je
pop
jle
cmp
mov
sub
pop
clc
stos
fs
insl
push
dec
ds
pushf
pop
mov
sbb
orl
pop
addr16
inc
adc
jmp
or
adc
dec
jecxz
jle
cmp
mov
cs
into
cli
cmp
cmp
dec
or
push
sub
lea
sbb
push
xchg
push
int
mov
aad
rorl
mov
cs
loope
mov
enter
std
xchg
pop
daa
adc
pop
jmp
push
adc
dec
scas
xchg
sbb
and
in
cmpsb
cs
ficoml
aaa
fistps
cs
xlat
xor
pop
pop
das
stos
fdiv
sahf
push
dec
outsb
iret
test
mov
das
repnz
jle
movsl
addr16
xor
or
movsl
and
jne
push
sbb
mov
sub
jmp
mov
xor
push
movsb
pop
adc
fcoms
fmull
mov
lock
sarb
pushf
xor
and
dec
push
iret
mov
mov
and
ja
mov
test
lret
pop
iret
cltd
mov
scas
or
jl
push
mov
loopne
pop
xchg
cltd
loop
dec
add
scas
rorb
cmp
mov
sti
test
es
push
xor
dec
int
lods
popf
pop
clc
sbb
push
adc
jmp
test
loop,pn
cs
stos
nop
pushf
pusha
push
imull
sub
add
in
hlt
lock
and
dec
sub
xor
outsl
lret
data16
dec
xchg
loop
ljmp
lahf
movl
xor
movsb
cld
je,pn
ljmp
xor
sub
mov
cs
ljmp
fcomps
leave
psllw
loop,pn
jecxz,pn
aaa
pushf
pop
push
ljmp
je
mov
cs
xor
bound
and
adc
jns
inc
bound
jl
pop
add
dec
lods
xchg
pop
lock
add
aam
loopne
pop
sbb
cmpsl
fistl
enter
fwait
jnp
push
cmp
loop
cs
push
inc
xor
xchg
cs
popa
pop
xor
fs
pop
pop
aam
int3
jle
shl
inc
jmp
pop
cmp
loop
cs
stos
sahf
pushf
outsb
push
ljmp
cli
hlt
mov
repnz
test
mov
xor
bound
jl
bound
cmc
icebp
leave
cs
mov
sub
cs
pop
daa
aam
insb
jmp
bound
imul
dec
orb
lock
dec
shl
jle
cmp
push
sbb
jecxz
jl
bound
cs
mov
jns
ljmp
mov
xor
bound
das
or
jl
push
mov
xor
ret
cltd
mov
scas
sar
mov
scas
push
sbb
mov
push
movsb
push
sub
loop
jle
cld
cmpsb
paddb
fists
lret
jecxz
int
ss
pop
mov
mov
push
mov
adc
loopne
pushf
push
sub
mov
cs
ss
imul
mov
dec
pop
cs
out
clc
jge
xchg
inc
cs
sub
pushf
in
mov
fnstsw
xchg
fs
adc
loopne
mov
sub
jg
adc
in
cs
test
scas
fbstp
mov
xor
bound
das
inc
clc
mov
jle
shrb
sub
add
cs
stos
xor
add
ljmp
push
inc
aaa
pop
lret
data16
paddw
loop,pn
cmp
ljmp
les
shrb
and
sub
in
mov
xor
inc
pop
adc
or
mov
push
sub
xor
outsb
inc
fisttpl
cs
mov
and
pop
bound
dec
mov
cmp
out
sub
cs
cltd
ds
imul
dec
outsb
popfw
shll
insb
sarb
in
pusha
cs
cmpb
cmp
jbe
orl
shll
sub
jmp
test
cltd
outsl
cmp
loop
cs
lods
cmp
es
lea
sub
push
sti
xor
add
dec
jo
inc
inc
push
sub
xor
hlt
pop
les
dec
or
jl
jg
bound
jecxz
jle
cmp
jo
call
shll
lock
into
inc
and
dec
adc
cmp
cmp
push
push
les
je,pn
add
aam
inc
aaa
ror
cs
sbb
inc
jecxz
popf
into
mull
shlb
inc
fists
cs
xor
bound
das
and
mov
add
or
and
dec
stos
inc
cmpsl
dec
pop
sbb
mov
xor
bound
das
cs
repz
mov
inc
mov
loope
es
movsl
sbb
push
ljmp
pop
bound
das
je
sbb
ljmp
cmp
clc
add
jecxz
int
xor
bound
jl
jp
inc
xchg
cs
sar
push
sub
in
mov
xor
jbe
inc
popf
jge
movsl
mov
cs
clc
mov
jle
shrb
mov
hlt
jecxz
int
xor
bound
jle
xor
bound
sub
add
add
jmp
mov
xor
inc
pop
pop
popf
mov
cs
push
ljmp
mov
or
fimull
mov
mov
lea
js
int
xlat
mov
adc
push
pop
and
xor
lcall
fsubrs
pop
test
hlt
push
push
dec
out
mov
sub
dec
or
mov
jl
mov
out
pop
mov
aam
and
shll
fs
mov
stos
fcomi
call
sub
fildll
cs
xor
bound
loopne
cmp
hlt
mov
dec
jmp
sbbb
sbb
and
dec
jecxz
jle
cmp
add
add
dec
shl
mov
jecxz
jle
cmp
enter
ds
push
mov
dec
sub
jmp
andb
sbb
and
pop
xchg
xorb
jbe
jne
adc
dec
movsl
dec
cld
in
pop
aaa
ror
mov
sub
jmp
ss
or
loop,pn
sbb
ljmp
push
cmp
dec
movsl
xchg
pop
fistps
cs
mov
fistps
mov
xor
bound
das
push
push
dec
scas
jecxz
jle
cmp
in
and
cs
xor
fs
dec
cmpsl
push
mov
fwait
add
in
cs
mov
or
cmp
sti
push
je
push
loop
cs
test
js
inc
aaa
or
out
cs
mov
push
dec
cld
rcl
dec
jno
mov
and
sbb
mov
adc
lds
cmp
or
push
xchg
push
jp
jmp
movsb
lret
add
in
rclb
or
lret
pop
adc
pop
jl
mov
rol
lret
cs
mov
push
wbinvd
cmp
loop
mov
cs
pop
jecxz
jle
cmp
pop
push
repz
loop
cs
stos
push
pushf
and
fsubr
xchg
pop
hlt
gs
sti
gs
shrb
inc
stos
mov
fistps
cs
xor
bound
das
das
clc
mov
outsb
push
ljmp
int3
bound
das
repnz
mov
jle
shrb
sub
push
lods
lea
mov
dec
add
mov
sub
cs
stc
jecxz
jle
cmp
aas
push
mov
jle
rcll
in
cs
mov
fnstsw
out
sti
mov
mov
inc
inc
pop
dec
ljmp
scas
iret
clc
jge
movsl
cmp
ljmp
shll
ret
clc
mov
jle
shrb
sub
push
jl
inc
add
push
mov
push
mov
popa
in
xchg
fwait
bswap
cmp
adc
ucomiss
sub
sbb
mov
loop,pn
cs
stos
rcrb
adc
cs
push
mov
jl,pn
fwait
addr16
imul
stos
fstps
fistps
cs
xor
sti
loopne
sub
pushf
cld
cs
push
test
mov
insb
xor
and
sbb
gs
dec
ss
test
divb
push
jmp
icebp
fstps
pop
push
push
iret
mov
cmp
adcl
arpl
cld
loopne
mov
sbb
mov
cwtl
pushf
push
and
pop
cs
out
mov
xor
test
lds
jns
sub
call
fimuls
imul
mov
xor
xor
push
cmpsl
imul
push
jmp
lcall
lcall
mov
scas
int
mov
mov
jae
ss
fisubrl
dec
push
les
inc
loopne
cs
es
sti
mov
iret
cs
insl
mov
jo
dec
aas
sahf
cmpl
aam
fnsave
jae
cwtl
fwait
and
adc
fisttps
jne
mov
add
xchg
ds
mov
rcrl
cltd
arpl
sahf
insl
ret
add
dec
jnp
pushf
add
jno
inc
adc
mov
popa
iret
dec
scas
adc
cmp
out
push
xchg
jecxz
mov
xchg
sbb
sub
pushf
out
xchg
pushf
rcll
ret
std
imul
jge
inc
jg
cs
mov
xor
xchg
sarb
cmpb
fwait
test
xchg
enter
mov
or
cs
mov
ret
dec
pushf
push
repnz
mov
movsl
xchg
xchg
dec
pusha
mov
mov
out
popf
cmp
jge
pusha
xor
lcall
push
mov
into
mov
mov
stc
sub
push
xor
fs
mov
pop
jmp
mov
lods
sbb
insl
adc
or
mov
shl
orb
in
or
add
dec
mov
sti
sub
mov
gs
add
cmpsb
pop
inc
lods
and
pop
jmp
cmpsb
cld
in
ret
int3
mov
dec
mov
mov
add
jp
or
mov
ret
jge
daa
ljmp
cld
lock
jecxz
xor
repz
mov
loope
adc
mov
jne
icebp
pop
dec
lea
cmp
mov
xchg
mov
xchg
ret
rol
outsl
sub
pushf
mov
fcomps
push
and
xchg
or
jmp
xchg
cmpsb
xor
iret
stos
insl
mov
aam
mov
rcll
lods
test
stos
inc
sub
ss
cmpb
mov
or
xor
lahf
test
sub
int3
enter
pop
pop
call
fadds
or
push
and
xor
fistl
fs
test
bnd
adc
push
mov
add
lods
mov
dec
and
sub
adc
xchg
shrb
push
xchg
popf
sub
sub
sbb
scas
or
stc
or
hlt
dec
xchg
aaa
aam
in
in
mov
ss
movsb
jecxz
test
loop
aam
sbb
in
mov
ss
test
lods
cmp
imul
inc
and
dec
call
push
pop
cs
js
or
push
mov
les
out
pop
sub
jecxz
or
in
push
sub
in
xlat
inc
or
mov
lock
dec
pop
cs
loop
jecxz
into
int3
pop
jne
mov
cmc
lds
and
pushf
out
mov
cmpsl
push
add
movsl
adc
mov
int3
shrb
lods
out
sbb
pop
arpl
or
clc
xchg
sbb
mov
mov
es
fisubrs
data16
sahf
aas
incb
ret
mov
call
jge
xor
mov
jno
add
or
aas
and
jp
inc
xor
push
rcl
jbe
fs
pop
and
ficomps
fdivr
sub
cs
lret
xor
ljmp
in
nop
push
shll
call
pop
jnp
inc
push
dec
cmp
icebp
mov
push
in
mov
inc
sub
cwtl
sub
int3
std
fwait
push
push
or
add
sbb
fnstcw
inc
sub
pop
inc
jne
fmull
in
or
jecxz
in
mov
sbb
pop
push
mov
push
or
loop
sti
adc
and
js
outsl
ficoml
jecxz
sbb
ret
add
xor
call
stos
sub
fwait
add
sbb
jge
fstpt
mov
ds
enter
out
ret
ficomps
jns
aaa
outsl
sbb
jmp
push
fwait
add
dec
mov
data16
stos
out
lahf
jge
out
nop
jo
cli
xchg
push
jbe
popa
sbb
cs
arpl
lcall
lods
aas
push
dec
addr16
pop
daa
jae
gs
push
pop
mov
push
sbb
add
pusha
loopne
hlt
mov
dec
cs
mov
mov
and
in
sub
hlt
call
mov
imul
loopne
inc
stc
inc
push
cmpl
mov
iret
fidivrs
sbb
jnp
shrb
test
inc
data16
fildl
dec
xchg
inc
sub
insb
pusha
outsl
inc
and
cs
dec
mov
loop
dec
mov
pop
pop
popa
test
xor
sub
inc
dec
xor
shl
imul
mov
out
idivb
dec
jnp
mov
data16
fistpl
lea
or
mov
cs
into
arpl
or
lret
push
hlt
xor
dec
jecxz
push
mov
loopne
loopne
scas
push
or
and
ljmp
int3
hlt
mov
imul
dec
inc
mov
xchg
mov
in
pop
enter
push
push
add
fwait
cs
ret
dec
sbb
das
pusha
xor
jecxz
sub
lods
pop
mov
hlt
jmp
push
jns
lock
sbb
hlt
cmp
push
dec
sbb
shrl
xor
insl
es
ret
cmp
sbb
cs
mov
push
push
add
arpl
aam
fstpt
cmp
add
add
adc
cmove
cmp
sbb
push
pushf
test
adc
xor
shrb
pop
stos
dec
mov
ret
mov
lret
negb
xlat
xchg
aas
inc
jecxz
mov
movsb
or
inc
sub
rcrb
dec
mov
jg
or
mov
subb
lock
inc
subl
cmpsb
ja
testb
ljmp
lods
fxch
jge
and
adcb
jae
jno
jl
out
divb
loopne
notl
sub
jbe
jg
sbb
mov
adc
test
ror
xlat
ret
sahf
dec
sbb
mov
mov
loop
inc
sub
xor
out
dec
jge
lret
mov
rcrl
mov
mov
mov
mov
mov
mov
mov
leave
je
ljmp
dec
dec
fcomp
pop
clc
xchg
adc
imul
lcall
mov
xlat
push
lret
jle
repz
ljmp
xor
sbb
stos
fcompl
lret
jecxz
push
pusha
pop
xchg
ftst
imul
xchg
sbb
mov
sub
push
dec
bound
inc
mov
xchg
and
gs
add
inc
inc
sub
pop
lret
sub
cs
enter
push
cmp
cs
add
sub
and
push
data16
mov
dec
push
and
ljmp
push
out
ds
xchg
mov
iret
stc
xlat
mov
sub
or
inc
mov
cs
sbb
sarb
fstps
ss
mov
insl
test
fwait
push
mov
into
insl
bound
or
sbb
sbb
fwait
dec
cmp
mov
or
sub
pop
mov
dec
das
lret
out
dec
rcrl
fisttpl
out
sbb
jmp
rdmsr
repz
cmpsb
sti
cmp
jno
out
pop
jmp
imul
lret
ds
push
mov
stos
push
int3
mov
xchg
sub
icebp
lret
adc
mov
sti
inc
jb
cmp
pop
add
ret
shrb
int3
pop
int3
or
aaa
sub
push
ficompl
adc
lea
and
subl
inc
add
data16
xchg
pop
imul
imul
pop
mov
lds
mov
mov
lods
inc
mov
ds
sub
sub
dec
lea
sub
push
xchg
dec
cmp
hlt
ljmp
pop
cs
fsubrs
inc
adc
add
sub
out
fwait
repz
push
mov
fs
mov
xlat
mov
and
ss
call
inc
jnp
and
mov
sbb
stos
cs
push
mov
inc
cmpsb
mov
sbb
mov
mov
pop
add
pop
cmp
sbb
push
pop
sub
arpl
pushf
fwait
pop
sarb
add
xor
ss
aas
cmc
sbb
inc
mov
lea
jmp
push
inc
or
sub
sub
and
dec
push
and
adc
sub
pop
lret
popf
adc
stos
imul
dec
sub
cmp
enter
mov
or
aam
test
dec
ffree
mov
movsl
and
cmp
cs
out
inc
dec
dec
lret
jmp
lock
ja
adc
push
pop
push
push
pop
sbb
or
test
jecxz
lret
loopne
and
and
pop
dec
sub
adc
mov
jg
add
mov
out
sbb
jbe
insl
mov
rol
push
mov
xchg
sbb
ret
push
lcall
arpl
ja
fs
movsb
lcall
sbb
outsl
dec
or
outsw
sar
gs
sbb
mov
push
jo
aaa
xchg
popf
mov
push
bound
call
arpl
pop
dec
rcr
sbb
call
pop
mov
clc
mov
outsl
sub
movsb
sbb
cmp
sub
sbbb
jnp
inc
or
dec
xchg
ficoms
mov
mov
shrl
mov
in
jnp
mov
mov
mov
sub
fisubs
adc
push
xchg
cmp
test
test
in
jnp
mov
data16
insl
sbb
fcomp
lods
test
cmp
and
mov
sbb
inc
dec
dec
add
fmull
push
sub
xor
adc
data16
or
test
fsubl
pop
jecxz
mov
sahf
inc
or
shr
sbb
lock
call
loop
or
add
fs
out
jno
lahf
add
xor
inc
pop
pop
loop
outsb
jmp
jg
xchg
out
in
fidivs
or
sbb
hlt
ret
cwtl
mov
cmpsl
rcll
xchg
orb
cmpsb
enter
test
fs
mov
dec
testb
push
mulb
pop
loopne
pop
jle
lea
pop
lea
loopne
or
enter
cld
test
mov
popf
xor
hlt
pop
push
and
out
mov
dec
shl
push
sbb
inc
int3
mov
lret
push
and
pop
faddp
int3
fldcw
push
jns
inc
cmp
js
or
shl
jo
in
and
call
dec
jle
pop
cld
jle
cli
adc
mov
clc
and
data16
lock
fsubrl
sub
movsl
ljmp
ja
sub
shlw
scas
mov
ljmp
dec
cmp
mov
popa
mov
call
push
xchg
pop
aaa
aaa
sub
inc
dec
stos
imul
outsl
and
sarb
cmc
jno
movsl
xor
mov
mov
sbb
pop
add
les
out
push
pop
shll
add
in
sbb
sub
pushf
add
in
arpl
gs
mov
in
movsl
stos
or
in
shrb
in
jmp
xchg
fs
imul
rclb
add
add
add
fcompl
and
mov
inc
pop
jmp
repnz
repnz
hlt
movsl
xor
pop
sbb
aam
sub
sub
adc
push
or
jnp
sbb
addr16
aam
or
jnp
cmc
call
push
clc
loope
arpl
repnz
mov
sub
push
xor
mov
sti
lock
mov
addb
xor
xor
dec
xor
scas
push
fcompl
movsl
add
call
sbb
mov
inc
call
lods
dec
pop
lea
in
xchg
cld
and
inc
sti
and
data16
cs
pop
cmp
sub
jmp
jle
mull
loopne
rorb
jnp
push
popf
out
sbb
jmp
hlt
pop
ret
sbb
imulb
stos
mov
in
sbb
pop
pop
jo
decl
int3
dec
hlt
data16
ret
out
cli
bound
sub
push
sbb
mov
fstpt
loopne
es
xchg
sub
subl
idiv
data16
sub
pop
cmp
cs
clc
mov
test
aas
out
sbb
shlb
daa
adc
dec
mov
mov
dec
fidivrl
mov
call
dec
outsl
test
mov
data16
dec
mov
scas
mov
add
push
pop
test
push
scas
and
or
into
mov
scas
call
push
mov
or
sbb
pop
insb
mov
mov
mov
pop
popa
jecxz
hlt
fistps
cs
xchg
add
mov
out
pop
add
out
rcrl
pushf
xchg
inc
xlat
jns
fs
or
or
test
scas
popa
or
popl
inc
inc
test
add
pop
push
insl
mov
jecxz
les
test
mov
lret
fisubrl
push
mov
inc
mov
jmp
push
xchg
mov
mov
sub
mov
bound
fmull
popa
pop
sub
repnz
loopne
lea
loope
loope
or
psubsb
sbb
add
cmc
xchg
outsl
cmp
adc
call
sbb
add
cmpsb
and
popf
call
or
mov
cmp
fs
xchg
mov
push
and
and
mov
sub
inc
aas
lret
or
mov
pushf
outsb
es
aas
or
xchg
or
add
adc
call
dec
andw
push
stos
outsl
lret
mov
jne
jbe
inc
outsl
or
cmp
loope
sub
insl
rcr
cmp
hlt
push
sbb
lcall
aas
fisubrl
mov
lea
test
rcl
jecxz
mov
dec
movsl
sub
fdivrl
pop
pop
fdivs
cmp
arpl
out
push
outsl
cld
icebp
adc
add
add
push
pop
sbb
les
jb
mov
sbb
bound
clc
inc
and
lret
mov
es
sub
data16
adc
dec
xchg
das
insl
inc
push
mov
dec
ja
adc
cli
mov
sbb
jno
mov
and
add
jae
push
clc
push
mov
mov
loopne
cs
pushw
mov
les
push
inc
scas
repnz
xor
mov
es
cmp
test
inc
divl
dec
movsb
adc
and
arpl
or
mov
inc
or
iret
scas
jnp
cs
outsl
test
sub
or
sbb
cs
stc
call
jbe
dec
cmpsl
dec
sar
mov
je
sahf
push
and
inc
cmp
lds
add
call
dec
cmp
sbb
pop
adc
pop
test
sbb
leave
pop
dec
xor
inc
sbb
xchg
sbb
arpl
popfw
mov
cli
xor
sbb
arpl
aaa
xchg
xchg
mov
lea
adc
gs
popf
or
sbb
dec
ret
insl
push
pusha
shl
lock
push
sub
jb
inc
rcl
sbb
mov
popf
fimuls
sti
sahf
out
arpl
dec
sbb
pop
lock
in
and
push
and
mov
inc
jnp
sub
in
inc
add
push
and
sbb
fdivl
sbb
imul
test
inc
cmove
cmp
aad
xchg
in
mov
mov
pop
pop
add
testb
fs
cmc
cmp
mov
cmp
rcrl
in
int
push
clc
bound
push
add
dec
or
popa
popf
push
fmull
pop
fs
sub
imul
icebp
jmp
nop
pop
adc
cmpsb
xor
push
sbb
cld
dec
lret
or
fwait
add
fs
and
fisubl
stos
jmp
jecxz
sbb
and
dec
sbb
cmp
cs
out
icebp
test
inc
push
mov
sarb
cmpsl
aad
pop
nop
adc
js
dec
lods
xchg
and
leave
into
std
cmp
loopne
jecxz
fstpl
dec
rcl
dec
inc
xchg
pop
call
cmova
ljmp
xchg
jb
pop
lret
mov
sub
aam
je
push
shr
xlat
pop
sti
add
xor
sub
xchg
cwtl
xchg
mov
cmpsb
or
mov
aad
pop
cmp
lret
jnp
mov
push
xlat
adc
shrb
mov
or
idiv
adc
add
or
dec
adc
add
xor
adc
sbb
push
dec
or
aam
dec
pop
lods
xchg
cs
out
je
loopne
shr
lea
in
inc
cmp
das
call
subb
pop
popl
sbb
inc
loopne
gs
and
sub
push
xchg
sbb
loopne
shrl
lea
pushf
add
clc
sub
movsb
rol
push
pop
push
xchg
int
cmp
dec
xchg
jns
dec
pop
movsb
mov
xorl
fs
mov
inc
call
pop
test
adc
cmp
loop
pop
pusha
into
sbb
gs
cmp
fdiv
dec
push
pop
mov
loop
outsl
movsb
adc
add
sbb
dec
push
arpl
test
je
jo
and
jl
add
in
xor
testb
sahf
mov
add
std
lret
jecxz
fists
enter
sub
loopne
inc
test
xchg
or
ljmp
cld
pop
or
bound
ficoms
mov
dec
xchg
mov
aad
push
push
xor
psubb
inc
mov
sbb
inc
sarl
or
insl
cld
fwait
dec
push
dec
outsb
ljmp
or
iret
int
xchg
sub
sub
hlt
inc
sbb
dec
sbb
and
into
push
xchg
inc
clc
pop
pop
dec
push
daa
lock
push
imul
rcrb
push
and
dec
jl
xchg
out
addr16
dec
addr16
mov
insb
arpl
fs
dec
cltd
lcall
xchg
xchg
add
and
inc
add
and
cmp
into
and
lds
test
pop
or
mov
sub
popf
inc
push
dec
ds
inc
mov
hlt
movsl
and
sbb
outsl
cmp
out
ret
jae
cmp
or
dec
gs
adcl
stos
stos
sub
adc
lret
aaa
mov
push
cmp
cmpsb
cmp
faddl
inc
movsb
and
pusha
in
mov
pusha
xchg
mov
push
aam
jecxz
in
shl
mov
or
sub
addr16
dec
mov
aam
aad
push
xchg
arpl
pusha
dec
add
add
or
sbb
and
jle
add
mul
xor
xor
sbb
mov
pop
xor
fdivrs
dec
mov
push
sahf
ja
mov
stos
cld
mov
arpl
loopne
xor
call
cmp
xor
jb
add
insl
in
add
arpl
mov
sbb
push
pop
mov
jo
sahf
pop
in
dec
enter
faddp
idivl
pushf
dec
into
in
lea
pop
inc
addr16
dec
cmp
inc
gs
insb
cld
mov
scas
sbb
push
dec
mov
jmp
sbb
jmp
das
inc
inc
test
ret
int
inc
dec
xchg
punpckldq
jmp
cmp
fptan
repz
jb
aaa
push
cld
dec
das
push
jb
add
xor
inc
mov
xchg
add
and
pop
fimull
inc
sub
push
cwtl
lods
outsl
push
mov
ds
inc
dec
fimull
cmpsb
pop
sbb
fs
ds
lret
push
dec
jmp
push
call
rclb
and
imul
fsubrs
or
pop
cmp
push
mov
or
cmp
mov
mov
jp
sbb
sysenter
mov
add
mov
pop
imul
inc
adc
dec
pop
in
es
push
out
clc
pop
loopne
sbbb
push
dec
das
cmp
pop
fs
inc
das
ret
addb
pop
push
mov
mov
inc
lea
test
ficoml
call
sbb
and
pop
subb
push
iret
lret
mov
add
sti
xchg
mov
inc
dec
and
inc
bound
notl
jge
fwait
sahf
cmp
aaa
scas
test
inc
dec
push
pop
repnz
fisttpll
in
fucom
movsl
call
daa
dec
mov
and
shrb
inc
mov
into
int3
dec
clc
xchg
call
dec
or
pop
cmp
pop
xchg
xor
pop
add
cmp
pop
xchg
pop
jmp
inc
sbb
or
aad
or
inc
dec
outsb
pcmpgtb
sub
pop
fs
and
cmc
fists
push
dec
sarb
and
test
addr16
test
inc
add
js
int3
int
data16
inc
xor
ss
or
inc
or
cld
lods
jge
mov
inc
bswap
dec
sub
pop
out
jnp
pop
mov
xor
imul
leave
in
shl
mov
fnstcw
mov
sub
xor
in
adcb
pushf
test
imul
mov
pushf
in
test
dec
cmp
enter
lea
dec
cmp
gs
xchg
push
cmc
mov
gs
push
push
test
jge
dec
push
inc
fxch
outsl
dec
xchg
xchg
loop
and
ljmp
mov
mov
pop
jl
push
xor
into
add
adc
leave
popf
jbe
cmc
daa
cmp
jbe
mov
push
stc
push
and
push
mov
insl
dec
arpl
jecxz
push
popf
mov
mov
cmp
sub
test
xor
imul
dec
dec
pop
je
dec
dec
jecxz
movsb
test
jecxz
je
cs
dec
test
push
mov
loop
jae
push
adc
daa
cmpxchg
fucomi
orb
testl
loope
xor
xchg
mov
cli
sbb
mov
push
fbstp
sub
rorl
adc
das
inc
xor
pop
sub
pop
jl
ljmp
mov
jmp
push
sbb
sub
add
sub
or
loopne
mov
xor
stos
pushf
jmp
mov
ljmp
out
mov
std
inc
and
cs
movsb
dec
push
iret
inc
push
jnp
sbb
pop
push
cmp
jecxz
ret
mov
inc
stc
aas
dec
popf
xchg
push
rclb
and
test
imul
jo
xchg
nop
out
or
cld
test
ret
sub
and
call
movsl
jge
sub
repnz
dec
fwait
imul
dec
sbb
nop
rcrl
fcmove
scas
pop
jmp
push
sbb
and
shl
insb
addr16
addb
or
pushf
iret
cmpsb
imul
jae
sarl
repnz
cltd
mov
pop
sbbb
fimull
push
lock
xchg
mov
je
fimuls
xlat
decl
mov
repz
or
stos
push
or
lret
dec
das
pop
pop
dec
mov
decl
movsb
jp
and
adcb
sbb
or
mov
add
sub
push
push
mov
in
and
push
jg
stc
loopne
cs
mov
push
mov
ficompl
cmp
rclb
xor
popa
loop
scas
les
push
add
pop
addr16
out
sbbb
mov
jle
xor
xlat
jmp
pop
je
loopne
dec
adc
or
pop
sbbl
jl
ds
loop
mov
jmp
hlt
sub
scas
hlt
add
mov
mov
das
push
and
xor
sti
fcompl
push
cs
mov
mov
jnp
mov
ficoml
dec
mov
xor
dec
pop
data16
testl
dec
xlat
insl
arpl
or
roll
lods
fisubl
testb
xchg
dec
inc
popf
std
fs
xchg
adc
outsl
push
and
inc
xchg
mov
push
arpl
bnd
mov
push
jl
popa
push
in
fwait
xchg
push
mov
in
mov
scas
sahf
addr16
xchg
loopne
mov
mov
les
and
iret
cmc
push
data16
pop
loopne
aam
mov
jg
iret
arpl
push
and
sub
into
push
or
pusha
ljmp
xor
loopne
lods
das
and
dec
popa
sti
sbb
push
testl
scas
sub
call
call
incl
rclb
pop
dec
call
push
shrb
je
packssdw
int3
jecxz
inc
add
icebp
or
imul
push
arpl
stos
mov
fs
je
loop
pop
dec
les
mov
inc
pusha
inc
jmp
sbb
xchg
push
negl
fcmovb
sahf
rolb
xor
ljmp
in
outsl
loope
scas
das
outsl
inc
dec
hlt
and
outsl
ss
pop
je
shrl
sbb
jle
pop
scas
push
les
rorl
lea
pop
xor
dec
mov
fimull
inc
jnp
negl
dec
sbb
and
nop
pop
mov
mov
xor
mov
inc
into
xor
lret
mov
idiv
mov
outsb
xchg
ffreep
pop
mov
inc
test
jecxz
mov
sub
pop
fisttps
xrelease
rorb
push
iret
adc
mov
mov
mov
mov
fists
shrl
imul
xchg
imul
aas
push
sub
or
xorb
xchg
cli
sub
hlt
js
pop
mov
pop
and
mov
jbe
call
push
xchg
push
mov
inc
sbb
test
xor
xchg
in
push
xchg
jo
test
bound
mov
xchg
add
cld
push
inc
and
mov
mov
sarb
and
xor
mov
cs
cmp
mov
shr
ja
mov
mov
lock
jne
dec
xor
notb
sahf
push
cld
lds
popf
dec
add
xorl
xchg
cmp
xchg
cmp
xchg
cmp
int3
sub
or
push
adc
imull
jne
cmpsb
repnz
push
or
xlat
xchg
xlat
iret
loope
and
into
add
rcl
inc
mov
cmpw
nop
cmp
dec
push
jnp
cmc
pop
cmp
arpl
gs
and
cmp
sub
add
mov
repz
addl
xor
pop
es
mov
sub
adc
mov
repnz
pop
or
and
pop
pop
mov
push
inc
jne
pop
cld
out
pushf
sbb
pop
paddd
hlt
pushf
push
and
fnstenv
add
and
cmp
xor
mov
pop
clc
xchg
repnz
jecxz
mov
sti
test
loopne
rclb
sar
sub
test
mov
mov
mov
push
les
dec
pusha
fidivrl
iret
adc
fdivrs
movsl
out
xor
xchg
fstpt
gs
fisttpll
xchg
leave
cmp
cwtl
mov
inc
adc
xlat
lahf
test
mov
fldenv
mov
push
jns
sbb
jo
jecxz
or
dec
mov
outsl
test
jecxz
mov
jge,pn
inc
add
loopne
pop
rcll
sbbl
cmp
movsl
cltd
scas
arpl
dec
fidivrs
shlb
loope
andl
jns,pt
adc
pop
xchg
mov
push
jbe
movb
dec
fwait
cmpsl
movsb
lret
cwtl
fs
ja
jmp
mov
xchg
or
call
dec
ja
sub
xor
imull
fildl
mov
inc
xor
outsb
fwait
mov
push
mov
mov
or
sub
loop
dec
arpl
cmp
dec
out
out
lahf
xchg
xor
inc
jo
dec
dec
mov
jne
pop
mov
mov
fs
xchg
cmp
daa
test
push
sahf
pushf
stos
jge
fs
shll
cmp
arpl
mov
jecxz
mov
cmpsb
lock
test
arpl
fs
adc
xorl
cli
call
ss
decl
dec
cmove
push
insb
push
jns
int3
cmc
pop
cmp
test
roll
mov
inc
in
das
adc
loop
mul
push
jbe
incb
cld
sub
pop
jbe
in
pop
leave
mov
pop
cli
loop
xchg
shrb
in
sbb
in
sarb
push
push
mov
jecxz
and
xchg
jp
es
pop
xchg
mov
movsb
fwait
mov
rcr
pop
jmp
xchg
and
sbb
ljmp
cld
lods
xchg
cmpsb
mov
add
pop
ret
int3
nop
mov
mov
aaa
cs
int
mov
mov
xlat
mov
mov
notl
int
mov
pop
shll
ret
loope
arpl
jbe
stos
loopne
das
add
in
hlt
mov
loop
jecxz
add
dec
mov
cwtl
clc
lret
push
adc
dec
sub
rcr
and
mov
mov
shll
movsl
adc
add
imul
es
aas
in
xchg
mov
add
mov
lahf
mov
xchg
push
ret
fadds
adc
es
movsb
lea
rolb
push
fwait
lcall
subl
dec
ror
xchg
sbb
inc
into
push
inc
cmp
stos
sbb
fwait
cmc
dec
rorl
mov
icebp
outsb
pusha
xchg
jns
pop
in
push
dec
mov
ret
lock
mov
adc
call
push
lcall
or
enter
jge
cmpsl
das
int3
inc
dec
testb
cmp
clc
push
cmp
mov
mov
push
jl
cmpsb
sbb
movsl
push
cld
and
pop
and
mov
or
ja
arpl
jecxz
into
mov
ret
nop
sub
mov
scas
push
loop
shll
jbe
mov
in
in
in
or
insb
lods
pop
xchg
cmp
sbb
movsb
xchg
mov
sbb
jecxz
pop
lret
adc
loop
out
stos
jecxz
cli
fldenv
inc
dec
sbb
jle
orl
cmc
lea
movsb
mov
arpl
cmpsb
lahf
pop
xchg
push
sbb
loop
sbb
sub
xchg
xor
sub
ret
lock
outsl
dec
mov
int
xchg
inc
sti
lock
sahf
aas
adc
cmp
fwait
fwait
fwait
pop
inc
mov
cmp
test
clc
jle
jmp
sbb
sbb
lea
out
ss
push
out
outsl
fwait
decb
lds
cs
fwait
cmpsl
xchg
pop
mov
mov
and
cs
mov
cs
in
pop
flds
pop
mov
sbbl
mov
adc
stc
pop
sub
popa
cltd
arpl
movsb
jbe
add
movd
imul
inc
outsb
mov
minps
mov
adc
repnz
mov
lock
aad
sub
loop
adc
aas
and
cmpl
pop
xchg
lahf
xchg
xor
ret
adc
outsb
jmp
jge
sbb
gs
pop
test
mov
out
add
aaa
pop
xor
dec
inc
mov
inc
jecxz
call
lods
daa
sbbb
adc
scas
or
lret
push
mov
and
add
test
xor
xor
nop
push
stos
pop
out
sbb
packsswb
sub
mov
rclb
cmp
into
paddw
dec
lock
dec
cmpsl
inc
cs
popf
mov
cwtl
sbb
mov
aaa
shrl
outsb
enter
dec
mov
cs
mov
mov
lods
jns
cld
and
arpl
mov
call
ljmp
enter
ds
xor
dec
sub
jmp
mov
sub
jecxz
inc
pop
sub
mov
pop
add
sub
dec
loop
pop
xor
arpl
mov
rcr
push
cmp
and
and
shlb
cmpsl
arpl
cld
dec
cmpsl
call
inc
dec
sahf
sbb
and
cvttps2pi
inc
lods
dec
push
lret
xchg
jle
and
sbb
push
rclb
movsl
jl
shlb
hlt
xchg
das
inc
push
cld
sbb
call
movsl
int
stos
fstps
xor
test
adc
xor
pop
adc
lret
dec
mov
testl
in
adc
sub
sbb
hlt
jo
loop
ror
inc
and
sub
or
sbb
test
and
inc
roll
jge
push
lret
sub
fwait
mov
mov
std
mov
mov
orl
rcr
xchg
lret
mov
call
and
mov
sub
out
pushf
mov
push
dec
xchg
pop
add
xor
mov
call
mov
mov
jno
inc
pop
adc
adc
mov
scas
fucom
mov
jl
dec
adc
scas
scas
xor
rolb
adc
or
rcrb
xor
push
dec
fs
lods
xchg
xchg
rcr
repz
pop
bound
pop
scas
movsl
dec
sub
jmp
mov
test
cli
lods
xor
stos
mov
cmpl
dec
imul
clc
lahf
xchg
sbb
shlb
inc
xchg
mov
and
dec
pop
and
mov
and
fbstp
push
pusha
and
lcall
call
pop
xorb
std
jnp
mov
or
scas
nop
orb
jg
xchg
add
fnsave
pop
adc
hlt
push
mov
mov
jl
pop
icebp
mov
daa
and
adc
aam
fwait
inc
xor
aas
dec
sbb
mov
jae
mov
pusha
mov
mov
cmc
and
les
les
daa
mov
cs
mov
arpl
je
cmp
rorl
mov
test
mov
out
xchg
mov
arpl
mov
in
pop
xchg
and
sub
adc
cmp
fdivrs
jbe
adc
xchg
dec
inc
mov
and
loopne
hlt
cld
loopne
push
loop
jmp
rcll
mov
xorb
inc
push
ja
cmp
dec
js
push
xchg
dec
adc
clc
mov
xlat
dec
lahf
test
pop
ror
scas
and
test
xlat
sub
xchg
call
push
outsb
pop
push
cs
arpl
mov
jno
jecxz
dec
push
push
dec
mov
or
stos
and
aas
or
pop
mov
xchg
stos
fbld
andl
mov
add
lcall
add
jge
dec
fwait
mov
jl
lods
adc
push
pop
xchg
loopne
jmp
mov
jnp
sbb
pop
jne
and
xorl
mov
push
sub
shrl
ret
push
test
push
cmp
mov
mov
test
repnz
mov
ljmp
push
xor
dec
arpl
xchg
mov
in
cvtdq2ps
dec
push
hlt
popf
mov
dec
sbb
int3
rcrb
lcall
loopne
xor
mov
inc
jge
es
mull
arpl
mov
and
shll
lcall
div
ret
lret
hlt
outsb
jecxz
pop
mov
jl
es
cmp
xchg
test
sar
xchg
in
mov
movsl
mov
icebp
mov
sarl
cmp
stos
jne
and
lock
xor
mov
in
gs
add
xchg
fldenv
push
aad
push
andl
mov
test
pop
data16
int3
mov
data16
adc
sub
jns
sub
fwait
call
loop
sbbl
mov
leave
lds
loopne
loop,pn
aaa
lds
pop
lds
out
and
mov
mov
and
push
pop
jecxz
mov
sub
mov
adc
add
pop
add
mov
leave
jecxz
sub
dec
mov
loop
jne
lock
ja
pop
and
popf
ja
pop
int3
cmp
xor
lods
xchg
cli
push
jbe
insl
arpl
out
fs
call
pop
jmp
lret
js
xchg
shr
test
add
push
and
jmp
sub
sti
sbb
ljmp
out
or
jb
jnp
mov
xor
call
pop
jmp
leave
mov
rcl
das
outsl
inc
push
mov
mov
sub
leave
mov
inc
jno
and
and
ja
into
pop
jmp
mov
mov
inc
aas
cmp
mov
js
psrlq
jge
and
loop
stos
mov
push
push
adc
dec
and
mov
push
and
sub
pop
push
and
call
add
sbb
dec
pop
movsb
call
push
fwait
mov
push
out
lock
push
mov
jge
xor
inc
stos
sbb
xchg
scas
cmp
inc
arpl
shr
dec
je
bound
cmpl
dec
push
sbb
xchg
je
push
push
and
push
inc
mul
jmp
out
cs
mov
push
dec
sbb
shrl
test
roll
pop
popl
ljmp
out
out
leave
in
dec
sbb
inc
push
dec
cmp
xlat
stos
or
test
xlat
inc
pop
and
xchg
jl
in
test
and
data16
je
push
push
in
jns
xor
shrb
aad
movsl
aad
sub
stos
aam
pop
data16
mov
int3
jns,pt
add
fcom
or
bound
aad
jg
out
les
dec
add
ds
pop
les
push
mov
addl
int
adc
cld
arpl
push
cld
or
call
add
arpl
cmpsb
imul
jmp
xchg
jb
add
jno
sub
cs
mov
cs
or
in
cs
fnstcw
dec
pop
lcall
pop
out
inc
fsin
lret
imul
dec
sbb
lret
fs
mov
in
xchg
and
fbstp
outsl
mov
repnz
pop
sub
data16
in
and
dec
jns
sub
dec
subl
xlat
fisttps
add
dec
sahf
jbe
jno
inc
push
das
push
enter
es
mov
mov
ljmp
xor
call
int
adc
sub
loop
in
fstpl
aas
mov
fst
or
xchg
insb
pop
fisttpl
scas
insl
mov
lret
jns
iret
adc
repnz
shll
sbb
movsb
addr16
stos
fnstsw
inc
mov
jmp
icebp
sbb
aam
xor
add
jbe
inc
sbb
sbb
lods
xchg
jecxz
shr
pop
sahf
shrb
jecxz
adc
fldl
shl
std
cmp
loop
repz
lods
mov
scas
sti
push
mov
out
pop
sbb
out
pop
sub
sub
arpl
stc
inc
int3
push
fpatan
push
mov
mov
mov
fdivl
xor
push
pop
aad
dec
shlb
or
aaa
loope
repnz
push
sbb
stos
sahf
adc
rcrb
cs
cwtl
xor
imul
test
movsb
cs
fldcw
dec
jg
sbb
mov
jecxz
dec
mov
pop
xlat
adc
mov
pushf
sub
cmp
jmp
js,pn
cmp
cmp
sbb
or
fyl2xp1
leave
inc
mov
dec
daa
adc
pop
jne
rclb
in
jo
int
call
rcrb
and
and
test
lret
and
fnstsw
insl
push
push
pop
dec
and
mov
pop
call
jmp
jnp
iret
lcall
jp
add
xor
jp
jge
aad
lock
dec
iret
stc
cs
mov
pop
jnp
push
fnsave
xlat
pop
loopne
jecxz
into
cmp
fdivs
mov
push
jns
cld
insb
jmp
xor
test
fcmovb
inc
call
push
push
jecxz
mov
inc
pop
sub
test
cmp
and
mov
sub
cld
les
mov
test
pop
jmp
sbb
jmp
test
ss
out
sub
mov
dec
or
lea
add
mov
mov
xor
arpl
inc
dec
jbe
pop
jecxz
push
stc
out
dec
mov
cld
popf
in
enter
inc
test
cmp
stos
mov
jmp
std
hlt
js
out
jnp
add
pusha
jecxz
iret
mov
ss
cmpl
clc
push
and
out
int3
jp
or
mov
fsubl
xchg
mov
xchg
inc
movsl
push
inc
lcall
in
jo
ror
sbb
mov
int3
fildll
lods
shl
jle
loopne
xchg
pop
xchg
mov
dec
inc
in
jge
fdiv
xchg
sub
stos
cmc
and
lcall
div
lcall
mov
icebp
and
dec
jo
mov
push
int
nop
mov
scas
adc
outsb
jno
cs
mov
inc
cmc
call
xorb
add
inc
sbb
sub
inc
push
pop
xor
and
cmp
cs
in
sbb
mov
jmp
icebp
clc
dec
push
icebp
and
inc
xor
scas
dec
push
movsb
push
jecxz
iret
dec
push
pop
mov
aam
test
out
fsubrl
xchg
mov
std
jnp
into
mov
jg
cmpsl
popf
push
movsl
xchg
sti
negl
and
adc
add
test
not
popa
inc
mov
sbb
push
repnz
imull
xor
movsl
adc
stc
lahf
xor
lea
in
cld
aad
ljmp
cmp
fsubl
jle
cmp
arpl
jge
fcmovbe
das
es
cmp
sbb
xchg
xlat
sti
push
inc
xor
jnp
lea
call
icebp
fmul
jnp
data16
leave
mov
rcl
jecxz
push
mov
jp
dec
mov
sub
cmp
int3
mov
sbbl
std
cmp
jecxz
enter
jge
pop
inc
mov
xor
testl
push
jle
push
mov
cs
je
push
jecxz
jo
add
fdivl
repz
lea
cmp
and
mov
int
sahf
jbe
pop
sub
aam
jnp
lea
or
dec
push
xor
mov
sbb
rep
lock
inc
ljmp
fiaddl
pop
mov
in
mov
idivl
call
push
fiaddl
or
jae
aam
dec
outsl
frstor
jmp
ret
push
dec
and
cmp
test
dec
add
inc
mov
sbb
push
cmp
or
mov
or
dec
incl
pop
fmuls
inc
jno
js
andl
xor
out
sub
mov
inc
and
cmpl
les
rolb
mov
mov
jecxz
inc
cmpsb
fdivrs
add
sbb
movsb
std
adc
daa
lcall
insl
push
pop
jp
mov
xor
push
push
and
dec
int3
mov
and
repnz
pop
jo
lcall
inc
int3
fiaddl
mov
xchg
cmpsl
popf
hlt
sahf
lahf
ss
pop
cmc
xchg
push
dec
add
xchg
adc
mov
push
and
pop
jnp
fstpt
xlat
daa
push
jl
in
icebp
mov
loopne
cs
or
cmp
fwait
or
in
je
aad
or
ljmp
lea
data16
mov
and
dec
mov
leave
cwtl
pushf
dec
shrl
jmp
sbb
sbb
loop
pop
rorl
shrl
mov
call
dec
jp
jno
out
int3
sbb
lret
hlt
cld
adc
call
dec
rsm
imul
mov
movsb
fs
mov
jb
iret
in
hlt
aas
fmuls
inc
dec
je
push
nop
dec
mov
int3
lock
push
and
inc
lret
add
xchg
xchg
pop
jmp
adc
jmp
adc
dec
mov
pushw
in
add
inc
jecxz
mov
in
xchg
jne
rep
xor
repz
stos
sti
fsubrl
xor
cs
cmp
stos
jl
adc
mov
in
xor
pusha
mov
adc
cmp
stos
xor
adc
faddp
mov
mov
call
dec
xor
pop
leave
addl
pop
rcll
sti
aam
aam
ret
and
popf
ret
imul
push
sti
orb
and
scas
lret
and
lock
ljmp
popf
or
fs
jne
sbb
das
sub
insl
leave
cltd
pop
fs
mov
sub
test
inc
call
xchg
das
stos
inc
dec
inc
jecxz
into
mov
mov
mov
lods
ret
in
cltd
pushf
jle
jnp
xchg
imul
ret
hlt
je
dec
pop
shrl
test
sbb
pop
jae
clc
push
xchg
loopne
faddl
inc
mov
mov
push
shrb
ret
cli
push
loope
or
addr16
test
pop
jecxz
mov
in
popf
roll
jnp
inc
push
mov
xlat
dec
pop
xchg
push
pop
adc
out
outsl
aam
cmp
mov
ret
jno
jmp
push
push
clc
int
xchg
stc
mov
push
dec
outsb
lods
in
lods
mov
dec
add
fcompl
lock
sub
into
int3
arpl
and
ficoml
call
mov
fs
cwtl
jb
inc
push
jmp
push
lret
mov
fisttpll
xor
sub
shrb
sbb
jecxz
cmp
fisttpl
fdivrs
inc
pop
popf
pop
in
out
cld
cmpsl
jecxz
adc
lret
xchg
and
pop
test
idiv
xchg
loop
ficoml
scas
xor
mov
dec
lock
push
mov
into
sub
and
lea
sti
pop
jmp
sbb
add
and
or
xchg
fucomp
pop
sbb
push
pop
ret
lea
sub
mov
mov
pop
fisubrs
and
sbb
and
lock
cmpl
add
inc
daa
xchg
sub
imul
into
icebp
dec
push
pop
inc
or
dec
dec
cli
mov
faddl
mov
push
test
mov
mov
mov
sub
jp
pop
mov
sub
movsb
cmp
movl
push
call
fldt
fisubrl
xor
dec
sbb
arpl
and
sub
push
inc
or
xor
mov
push
and
add
dec
insl
mov
sbb
cld
bound
and
mov
mov
fisubrl
sub
daa
test
iret
daa
into
push
push
arpl
xor
sbb
es
clc
call
pop
inc
cmpsl
out
add
fwait
pop
sbb
pop
in
fdiv
inc
and
sbb
movb
jmp
xor
xchg
es
inc
adc
mov
and
stos
pop
jecxz
lea
jp
mulb
mov
push
push
push
pop
mov
push
std
push
js,pn
mov
mov
jbe
sbb
sbb
sbb
scas
sbb
call
jl
scas
xchg
inc
pop
push
sub
outsb
pop
into
xchg
and
call
push
enter
cmp
imulb
sub
push
mov
cmp
dec
jne
push
pop
push
pop
pop
mov
ret
cmp
imul
mov
subb
in
hlt
xor
mov
xor
sbb
leavew
comiss
sub
jnp
data16
fcmovu
andb
adc
nop
lea
push
stos
iret
les
dec
lahf
pop
scas
aad
xchg
sbb
int3
lret
push
pushf
arpl
sub
sbb
inc
mov
cmp
fs
cld
dec
bound
fidivrs
mov
mov
push
jecxz
mov
push
fdivl
push
repz
clc
cltd
cmp
lods
sarl
mov
in
dec
aas
leave
jg
test
shll
cmpsb
mov
and
jnp
lret
inc
pop
in
xor
cltd
jbe
mov
xchg
aaa
fs
push
xchg
mov
sub
pop
sahf
jmp
out
je
mov
and
add
shl
sub
aaa
xor
mov
and
aam
dec
es
leave
das
push
sub
cmpsl
mov
jecxz
dec
push
or
ljmp
je
sub
mov
outsb
xor
sarb
mov
xor
push
dec
subb
loopne
add
mov
mov
insl
mov
loope
pop
popaw
xchg
jge
sarb
jecxz
pop
jmp
push
out
push
hlt
adc
sub
inc
jb
push
inc
rcrl
or
scas
rolb
fsubl
or
fisttpll
arpl
rclb
xchg
rcrl
cmp
jb
shll
xchg
jecxz
cmova
loop
pop
das
lea
sbb
cmpsl
pop
rol
adc
shr
cmp
aaa
adc
jle
test
dec
inc
jnp
and
shrb
cmp
stc
aas
mov
movsb
cmpb
ja
xor
hlt
std
jle
lret
enter
xor
or
subl
fidivrl
scas
scas
or
cmp
enter
call
sbb
int3
cmpsb
sub
sbb
cmp
cmp
adc
in
sub
add
in
arpl
cmp
ret
loopne
sarb
lds
repnz
invlpga
adc
popf
andl
arpl
nop
push
cli
test
es
leave
jl
inc
xchg
pop
mov
lahf
adc
adc
dec
or
inc
call
dec
arpl
xchg
and
pop
js
sbb
outsl
mov
call
stos
cli
dec
mov
adc
xchg
and
cs
in
jns
or
shll
cwtl
jne
mov
nop
and
jle
mov
pop
in
imul
in
mov
jg
mov
stc
sub
pusha
pop
adc
fwait
mov
loope
jmp
sub
pop
in
in
or
inc
loopne
sarb
addl
mov
inc
xchg
sub
and
sbb
or
ja
mov
mov
pop
fstpt
and
jno
lahf
int3
mov
loopne
movsb
ljmpw
cmp
jecxz
mov
sub
insl
sub
ret
push
push
lock
inc
aaa
in
icebp
add
cmp
fbld
sbb
test
adc
push
cld
lea
inc
fstl
addr16
jo
push
jle
push
call
pop
sbb
push
ja
movsl
xor
push
pop
sub
and
cmpsb
mov
inc
or
jne
mov
jno
ljmp
loopne
shrb
pop
push
jle
movsl
dec
cmp
lahf
jmp
add
adc
or
cmp
pop
pop
sbb
jge
jp
jb
jmp
dec
je
add
dec
mov
inc
dec
push
fnstsw
stos
mov
popa
mov
mov
call
repnz
dec
arpl
mov
dec
push
and
cwtl
gs
pop
inc
arpl
dec
shrb
dec
cmpsl
xchg
adc
mov
outsl
pop
gs
inc
leave
ljmp
rolb
lea
dec
fwait
inc
and
jb
fdivrp
insb
dec
loopne
stos
in
into
stos
push
sbb
add
scas
xchg
lea
dec
cmp
lea
and
imul
xchg
dec
das
ss
fs
pop
sbb
sbb
call
push
flds
dec
dec
dec
jecxz
jmp
lahf
pop
dec
stos
dec
cmpsl
inc
jecxz
ja
mov
icebp
pop
mov
pop
in
xchg
mov
cltd
out
xchg
mov
push
int3
lods
adc
sbb
les
ds
xchg
fidivs
rcrb
movsl
or
mov
inc
sbbl
push
pop
or
inc
call
push
dec
sbbb
sub
fs
push
sti
dec
ljmp
mov
fwait
sub
ljmp
dec
filds
add
ret
dec
stos
es
stc
push
mov
stos
data16
and
and
test
mov
sub
adc
mov
pushf
call
ds
sub
and
jns
inc
push
idivb
out
pop
jg
fstpt
int
mov
push
out
sbb
sbb
outsb
mov
xchg
sbb
mov
inc
les
repnz
xor
sub
pop
mov
sub
arpl
sti
jg
or
push
xor
pop
cs
cmp
out
mov
jno
and
data16
xchg
sbb
test
push
mov
test
ret
mov
loop
and
pop
pop
dec
sbb
pop
sub
lods
push
or
and
pop
ffree
cmp
sub
pop
dec
mov
adc
pop
jo
loop
fstps
pop
lret
inc
ret
bsf
pop
fcoms
test
sbb
ja
xor
aam
fisubl
pop
call
push
jp
mov
aas
rcrl
mov
loop
repz
dec
inc
call
outsl
xchg
mov
adc
fistpl
loopne
nop
mov
shll
fwait
push
lcall
in
mov
fs
add
add
inc
pop
stos
mov
test
jmp
pop
repnz
mov
jb
call
mov
lods
fnstenv
pop
sub
add
mov
lret
bound
sub
mov
bound
push
bound
jp
movsl
pusha
push
rorl
xor
je
xor
cli
jp
xchg
sub
push
adc
jbe
pusha
je
cs
mov
mov
bound
jl
pop
cmpsb
ret
fs
push
loop
dec
jmp
dec
sbb
callw
shl
arpl
fs
push
fs
aad
call
push
int3
mov
push
inc
mov
mov
inc
dec
xchg
add
pop
push
dec
fisubrs
sub
push
gs
and
push
jbe
push
push
push
call
lret
hlt
cli
mov
and
mov
outsb
pop
jl
add
outsb
push
in
ror
push
mov
cmpsb
insl
inc
popa
cld
into
shll
push
sbb
ljmp
inc
cs
dec
mov
cs
scas
mov
mov
sbb
insb
dec
push
scas
mov
xlat
xchg
adc
andb
cs
mov
jle
popa
inc
cli
mov
hlt
sub
push
ja
push
dec
in
jb
dec
xor
dec
dec
add
inc
cmp
stos
hlt
shl
jb
lret
inc
xchg
push
cs
push
fs
mov
inc
movsb
jecxz
lret
mov
pop
into
fs
jecxz
mov
in
ja
cmpsb
or
mov
and
cmp
push
sub
das
xchg
inc
dec
scas
jecxz
into
stos
pop
jecxz
stos
or
and
jo,pt
jmp
jbe
dec
mov
jbe
cs
arpl
aam
data16
rcll
adc
loop
cmp
je
pop
and
pop
je
adcl
je
ret
dec
je
call
scas
testb
jecxz
fucom
jp
dec
jp
into
mov
mov
and
scas
cld
jp
sub
jle
pop
sbb
call
js
inc
loop
lods
loop
dec
add
insl
loop
mov
xchg
sub
mov
jle
mov
jnp
jle
int3
xor
movsl
scas
inc
adc
bound
lcall
jl
dec
jmp
hlt
cmp
punpckhwd
test
mov
xor
sub
push
icebp
add
inc
andb
mov
adcb
mov
sub
cmp
test
xor
fwait
aas
sahf
shlb
mov
cmp
das
pop
mov
ffreep
sub
xchg
rolb
jp
jbe
lods
and
xchg
pop
pop
push
fnsave
fwait
xor
sub
out
xchg
sub
mov
cmp
stos
jge
cmp
xchg
mov
shrb
sbb
cmc
jge
rorl
lods
push
lea
scas
pop
mov
xor
bound
jl
scas
test
push
mov
push
das
mov
sbb
xchg
mov
movsb
push
into
scas
and
sub
or
add
sub
push
out
inc
cwtl
movq
push
xchg
push
adc
jge
and
inc
data16
mov
ljmp
dec
push
imulb
jae
cwtl
shr
scas
mov
inc
in
mov
mov
fiadds
jae
data16
mov
call
loope
inc
pop
fimuls
aad
jl
adc
or
cmpsb
bound
mov
das
mov
pop
sbb
mov
mov
inc
and
and
jns
loop
sbb
jae
pushf
sbb
mov
dec
mov
pop
leave
push
inc
mov
fdivrp
dec
push
popf
outsb
fnstenv
into
inc
fidivrs
test
xor
dec
mov
ja
rclb
mov
sbb
out
movsb
arpl
and
aaa
sti
sti
inc
xlat
cwtl
push
insb
mov
dec
sbb
mov
pop
jne
cmpsb
add
mov
and
lret
sbb
stos
out
mov
imul
jbe
mov
loop
mov
es
xchg
je
sbb
nop
cmp
and
aaa
int
stc
dec
push
nop
mov
gs
scas
dec
fwait
xchg
push
mov
pop
dec
setbe
push
push
mov
push
shl
jmp
lods
xchg
jnp
mov
cmpsl
loop
pop
mov
xor
rorb
mov
adc
fildl
sbb
aaa
in
repnz
jl
xchg
dec
cli
scas
xchg
mov
xlat
fs
int
adc
inc
fimull
lcall
daa
sub
push
pop
xchg
shl
cs
ror
sbb
jmp
lcall
sub
cs
test
scas
inc
arpl
cwtl
je
cmp
scas
xchg
add
add
arpl
cwtl
je
incl
mov
int
inc
pop
add
mov
xchg
sahf
xor
and
pop
std
stos
popf
jle
fsubs
mov
movsl
fisubl
jne
push
mov
jmp
pushf
mov
cs
into
sub
int
mov
je
add
ret
movsb
addr16
pop
mov
subb
xchg
mov
mov
mov
jg
jnp
shll
dec
iret
sbb
ret
jle
mov
je
sbb
loopne
aam
or
and
cmc
and
fidivl
cmp
xchg
outsl
lods
pop
dec
cli
mov
inc
dec
dec
mov
aas
fcomp
jno
dec
or
and
lods
int3
mov
adc
xor
call
popa
cld
jl
push
push
icebp
mov
xchg
int3
dec
lret
jnp
push
pop
outsb
cmpsb
popf
mov
pop
pop
pushf
cmpsb
inc
int3
jmp
hlt
clc
loop
fiaddl
cmpsb
pusha
jl
lods
push
cs
mov
mov
dec
cmpsl
cmp
xchg
jg
inc
and
pop
mov
scas
mov
shlb
movsb
outsl
mov
movsb
mov
or
mov
lea
outsl
lahf
jp
jo
inc
sub
add
stos
stos
mov
mov
adc
in
xor
jge
mov
pushf
and
test
sarl
jecxz
pop
cmpsb
ror
hlt
mov
dec
mov
push
inc
xchg
pop
out
das
xchg
xor
mov
dec
push
and
add
test
mov
sub
xlat
inc
lea
ss
mov
pop
dec
lock
loope
insb
push
or
pop
sub
aad
cli
pop
cmp
push
jge
sti
pop
loopne
hlt
js
cwtl
inc
push
cmpsb
sub
and
shl
sub
jnp
frstor
inc
call
shrl
call
pop
jmp
lods
adc
fld
data16
sbb
shl
mov
ret
pop
mov
call
scas
testb
jecxz
fstl
or
sub
xorl
mov
dec
sbb
cmc
bound
mov
cs
push
sarl
data16
or
xor
mov
pop
inc
lds
mov
push
xchg
fnstcw
lahf
mov
push
sbb
adc
push
fwait
aam
call
sub
inc
jb
push
arpl
lret
aas
mov
bound
shrb
push
mov
inc
mov
arpl
lds
mov
stos
data16
mov
adc
jns
stos
mov
dec
pushf
into
and
call
pop
or
lods
cmpsb
mov
and
jbe
dec
leave
dec
iret
and
pop
or
lea
fildll
sub
insb
jecxz
frstor
xchg
add
clc
stc
test
call
ret
test
test
dec
dec
into
dec
push
inc
sarl
and
aaa
mov
push
sub
pop
mov
push
dec
xor
fs
hlt
jnp
test
ret
scas
inc
ret
js
int
jmp
adc
sub
jnp
mov
mov
int3
pop
cs
jecxz
jle
mov
mov
int
cwtl
fsubrs
jne
icebp
adc
mov
outsl
ret
test
pop
subl
or
lea
fwait
inc
xchg
in
hlt
out
ret
jmp
fisubs
mov
lret
pop
pop
mov
cmp
out
cwtl
cmc
inc
sbbb
ds
cltd
mov
pop
push
cs
xor
sbb
adc
into
and
mov
arpl
pop
ja
jecxz
fwait
cmpl
faddp
mov
push
cs
mov
fcoml
scas
js
push
cmp
inc
shl
inc
jmp
adc
push
jge
aam
push
dec
fwait
sbb
cwtl
push
mov
mov
mov
mov
fadd
out
and
sbb
jno
cmp
jno
mov
gs
jle
adc
and
mov
pop
push
jecxz
cs
add
sbb
data16
mov
sub
sbb
sahf
or
scas
add
cld
jle
enter
cmpsb
mov
repnz
test
int3
mov
cmc
adc
sub
and
dec
insb
mov
pop
pop
fadd
push
enter
cmpsl
lahf
cmp
test
mov
and
into
insb
shlb
into
jecxz
jmp
pop
adc
cmpsl
and
mov
repnz
sti
fisubrl
mov
lods
cmp
mov
dec
ret
call
and
sub
push
xchg
popa
dec
xchg
or
ret
mov
repnz
leave
lahf
dec
loop
call
hlt
pop
cld
imul
dec
xor
out
sti
leave
fcmovbe
xorl
push
jl
or
inc
adc
fld1
push
loop
mov
out
and
mov
mov
sahf
and
in
push
repnz
and
in
mov
pop
dec
dec
pushl
jle
repnz
dec
int3
shlb
loopne
inc
adc
fistl
and
call
sub
shrd
or
mov
out
xorb
nop
xor
rcl
mov
loop
mov
adc
mov
int
mov
es
cmp
ss
lea
mov
xlat
ljmp
int3
mov
push
arpl
daa
aam
ss
and
mov
mov
sub
aam
sub
les
mov
push
stc
out
jbe
fisubl
fsubp
fiaddl
jnp
and
fsubs
iret
orl
and
xor
dec
popf
mov
fidivs
iret
lods
sbb
xor
xor
xor
mov
test
adc
stos
scas
jmp
cltd
mov
cs
loope
fsubl
enter
jp
int3
fildll
lods
shl
jle
shl
xor
or
ret
inc
fcoml
xchg
inc
out
add
gs
cmp
inc
pop
pop
loop
arpl
imul
mov
adc
arpl
shrb
loopne
cs
loopne
jle
push
mov
loopne
call
scas
testb
in
out
adc
jmp
imul
xchg
outsl
xor
popa
xchg
pop
jmp
in
xor
cld
lea
push
pop
dec
mov
fsubp
mov
in
lods
add
test
ljmp
out
sbb
je
jp
clc
mov
lods
call
scas
dec
call
jg
sarl
bound
cs
mov
out
movsl
out
hlt
cs
in
out
push
jle
xor
sbb
out
adc
out
or
jle
push
out
push
iret
push
pop
jmp
imul
in
pop
jmp
in
jle
ret
leave
jmp
lock
push
inc
add
pop
lcall
out
mov
repnz
push
in
mov
cmp
xor
je
ret
repnz
mov
push
jg
sub
repnz
xchg
lfs
push
push
lods
sub
adc
jne
inc
mov
lock
lock
inc
jnp
out
cmp
jno
mov
sub
shl
xchg
stos
data16
lock
cmpsl
mov
xchg
mov
or
jae
in
stos
cmc
fwait
out
icebp
inc
lds
ret
sub
sub
lea
sub
adc
andps
ja
icebp
xchg
or
xchg
mov
rorl
addl
in
ljmp
hlt
xchg
hlt
jns
xchg
hlt
leave
jg
lods
fdiv
arpl
mov
jb
loopne
pop
call
add
cmp
hlt
dec
push
scas
loope
dec
jb
push
dec
and
or
lcall
fcmovnb
mov
pop
add
test
imul
mov
enter
jge
push
dec
jns
pop
dec
mov
or
inc
pop
mov
fwait
fsubs
lret
sbb
cld
inc
clc
loopne
lret
dec
rorl
mov
push
loop
jecxz
jbe
or
fmull
insl
jno
or
push
call
mov
js
sbb
dec
test
and
stos
rcl
mov
fcomi
out
push
and
int3
movsl
out
cmc
cmp
pop
rol
add
fldt
cld
aaa
loop
mov
sbb
push
ja
mov
call
xchg
pop
xor
lcall
enter
int3
push
int
out
test
inc
sbb
push
lret
cs
std
gs
inc
jno
jmp
xchg
js
mov
cmp
sub
les
cmp
mov
ljmp
and
cld
or
dec
call
js
lea
jmp
sub
xor
pop
js
and
call
pop
loopne
mov
mov
sub
lds
dec
addl
jns
mov
pop
or
cmc
into
mov
push
daa
lea
das
mov
les
xor
mov
les
sub
das
and
pop
mov
cmpl
push
icebp
adc
sti
out
cld
inc
add
sub
bswap
les
lret
jno
in
roll
sub
bound
popf
jno
imul
in
push
ret
mov
jb
mov
das
jno
jg
xchg
sbb
push
mov
jno
jle
outsl
cs
sbb
inc
push
xchg
sbb
aad
dec
aam
shlb
mov
jo
add
incl
int3
jb
data16
inc
sbb
cs
out
dec
add
fisubrl
ret
arpl
add
ret
clc
in
pop
dec
call
pop
in
or
dec
arpl
scas
pop
jne
iret
sub
push
test
int3
loopne
cmp
push
add
sub
scas
mov
push
popf
cltd
fwait
lock
jg
xchg
or
inc
or
jb
negb
loope
pop
sbb
arpl
or
and
or
je
nop
pop
fdiv
xchg
mov
pop
jmp
push
sbb
push
xchg
xlat
dec
jb
mov
mov
pop
out
sbb
mov
cmp
push
int3
add
pop
pushf
adc
aam
sub
inc
pop
mov
dec
jno
mov
mov
and
scas
sbb
cmp
rcll
dec
sti
cld
lea
adc
pop
test
lret
inc
lcall
and
pusha
pop
call
orb
jnp
sub
dec
int3
mov
and
mov
call
arpl
pop
mov
fs
jmp
rclb
sbb
shl
ja
sbb
sti
fdivrs
movsb
inc
sbb
xor
outsb
adc
adc
out
sbb
and
cvttps2pi
inc
lods
dec
push
mov
iret
dec
aaa
or
push
push
repnz
and
sub
pop
push
sti
push
cmpsb
int3
and
and
inc
in
insb
sbb
xchg
ret
pop
mov
shl
jle
repnz
insb
mov
or
cs
mov
fs
adc
xchg
adc
loope
pop
pop
or
sbb
adc
in
sbb
iret
aad
mov
xor
jecxz
enter
insl
lcall
cs
lods
jl
adc
xor
sbb
sbb
pop
xor
sbb
enter
mov
mov
sub
pop
xchg
xor
cli
sbb
jo
inc
imul
ljmp
fwait
add
pop
hlt
out
dec
into
arpl
jne
bound
or
call
dec
sbb
hlt
pusha
mov
int
push
mov
sub
int3
jno
ljmpw
add
and
pop
cmp
jmp
pop
jno
push
sub
jmp
push
mov
stos
pop
jbe
mov
stos
push
cmpsb
movsb
aad
fisubrs
pop
call
pop
fwait
ret
inc
and
ljmp
push
ficompl
xor
cli
push
inc
pop
sbb
pop
dec
inc
hlt
ret
cmpsb
outsb
inc
inc
aam
xchg
sbb
jmp
sbb
repnz
insl
mov
mov
es
mov
dec
sbb
dec
stos
jbe
mov
aaa
scas
scas
cmp
adc
fs
cmp
xchg
dec
xchg
mov
lods
xchg
leave
aam
shll
adc
cs
loope
and
push
cltd
and
rcrl
fs
adc
and
pop
add
and
bound
adc
lcall
popf
jno
dec
enter
dec
shll
es
es
xor
in
and
dec
mov
and
sub
mov
push
cmp
push
rol
push
sahf
mov
sbb
sub
mov
sti
das
cs
inc
xchg
jmp
xor
decb
jb
lahf
jecxz
xchg
shll
and
orl
sbb
dec
aaa
sbb
test
cmpl
mov
dec
push
xchg
shll
nop
outsl
lods
stc
cmp
pop
pop
dec
mov
jno
add
xor
fwait
jecxz,pn
into
mov
jle
fdivrp
cmpb
cmp
lret
es
adc
cmp
mov
in
push
insl
jo
test
xor
stos
xor
xor
rcl
mov
aam
fs
sbb
xchg
pusha
adc
mov
fnsave
mov
push
mov
subl
and
fdivs
imul
inc
ret
jl
mov
cmpsl
enter
pop
popf
xor
les
int3
sbb
data16
sub
inc
lods
fisubrs
xor
inc
jns
fwait
jmp
sbb
and
mov
sarl
sub
inc
icebp
inc
sub
sub
rclb
mov
push
xor
xchg
dec
rcl
pop
ja
enter
fwait
sub
dec
stos
sub
push
call
je
js
dec
movsb
mov
imul
xchg
adc
pop
je
orb
mov
sub
and
sub
ret
sub
shll
sbb
cmp
cli
cvtdq2ps
dec
jl
mov
mov
sub
aam
shll
mov
insl
test
inc
inc
arpl
jge,pn
je
add
pop
mov
or
mov
xchg
out
aad
jge
pushf
fs
fsubrp
lcall
cs
flds
dec
sub
push
push
push
arpl
xor
test
xor
pop
mov
jbe
repnz
push
cmp
mov
or
pxor
pop
dec
sub
fwait
jae
inc
inc
daa
dec
hlt
add
push
and
cmp
ss
fildl
jnp
dec
in
je
cmp
pop
je
dec
insl
lods
jns
pop
pop
enter
jb
or
fsub
or
cs
mov
adc
dec
mov
cmpsb
sbb
shrl
popa
cmp
pop
dec
les
pop
pop
ret
adc
pop
pop
sbb
sbb
xor
jno
repnz
dec
jl
add
gs
enter
push
cmp
js
fnstenv
jg
push
inc
js
dec
scas
lret
dec
inc
inc
sbb
inc
jmp
inc
popf
das
bound
mov
shrb
cmp
push
es
je
mov
and
in
inc
mov
fsubr
pop
cld
mov
addb
popf
fmull
das
je
jge
ds
rcll
stos
outsl
stos
sub
ret
jecxz
mov
dec
stos
mov
mov
int
jnp
call
inc
outsl
dec
mov
sub
rcrb
enter
data16
cmp
push
dec
cmp
mov
pop
xor
xor
xchg
ljmp
or
arpl
push
call
call
jl
adc
pop
lds
cs
inc
jl
adc
xor
cld
pop
adc
enter
mov
enter
jne
and
cs
into
push
pop
pop
sub
mov
in
dec
in
scas
pop
test
roll
inc
mov
sbb
inc
and
inc
out
xor
sbb
lods
into
push
call
hlt
sbb
call
sbb
sbb
call
test
cmp
fdivs
das
rolb
dec
hlt
popf
adcb
test
popf
inc
hlt
mov
sbb
sti
scas
sbb
dec
mov
cs
mov
rorb
repnz
dec
in
pop
and
movsb
and
ret
dec
pop
in
dec
cli
stos
fists
enter
pop
mov
pop
mov
enter
lock
scas
cmpsl
dec
inc
pop
leave
dec
mov
push
jge
mov
cs
mov
es
xor
xchg
arpl
enter
or
adc
ret
jmp
dec
sbb
dec
scas
mov
push
jge
mov
cs
mov
inc
repnz
dec
jne
and
and
test
jo
adc
jecxz
mov
mov
push
outsb
xor
xor
mov
or
sub
xor
test
cmpsb
mov
shl
in
xor
int3
fs
sbb
sbb
cmp
shr
out
sbb
sti
out
aam
roll
sbb
pop
dec
imull
ret
gs
pop
adc
loopne
iret
aas
shl
mov
arpl
outsb
filds
mov
push
sbb
fcoms
pop
insb
pusha
sbb
dec
jnp
imull
es
je
jmp
repnz
dec
shrl
and
inc
je
bound
ljmp
cs
out
add
inc
clc
jp
fs
sbb
push
sub
fldenv
pusha
idivl
push
xor
scas
div
fsubrp
dec
scas
outsb
lock
and
cld
lock
inc
popa
inc
sbb
xchg
pop
int
test
lods
aam
add
sub
popf
jp
lea
cs
mov
xor
xlat
popa
dec
fldt
sub
adc
fldcw
push
pop
xor
add
jbe
add
add
mov
addr16
mov
jb
xchg
push
jne
jg
sbb
jl
lahf
push
xchg
xor
push
push
arpl
stos
xchg
addr16
pop
inc
push
fs
push
xor
lods
fldenv
xchg
sbb
pop
movsb
dec
adc
adc
fnstenv
mov
mov
cmc
lret
add
ffree
xor
shlb
and
xchg
jno
xor
sbb
loop
dec
notl
pop
out
or
mov
in
cwtl
data16
adc
push
cmc
dec
test
mov
pop
stos
xor
sub
inc
and
stc
scas
in
int3
test
and
shll
or
jg
scas
call
pop
rcrl
dec
mov
inc
jo
imul
mov
inc
fsubrl
adc
sbb
pop
das
mov
xchg
inc
cmp
lea
addr16
dec
sub
cmpl
sub
stos
and
sub
shl
push
mov
adc
ret
ljmp
js
cmp
or
dec
pop
add
or
and
inc
test
push
mov
jbe
push
inc
inc
je
mov
jmp
sbb
xor
popa
push
out
pop
test
xor
lods
gs
fcmovb
dec
popf
pop
cld
outsb
shr
jns
and
dec
dec
std
xchg
push
shrl
call
arpl
imul
add
hlt
pop
push
fsub
xlat
mov
sbb
jne
sbb
leave
test
mov
inc
andl
fcmovb
inc
and
cs
stos
stmxcsr
sbb
jge
roll
subb
dec
mov
sub
mov
adc
jb
mov
stc
outsl
xor
jge
icebp
pop
push
pop
outsl
dec
sbb
scas
outsl
sbb
sbb
ror
cmpsb
sub
sbb
movb
mov
leave
mov
es
bound
jnp
sahf
mov
lcall
int3
shr
cmpsl
movsl
dec
or
daa
jmp
and
xchg
andl
imul
ss
push
fldl
dec
mov
cmp
lea
sbb
mov
bound
mov
jb
xchg
push
mov
sub
jmp
jb
xor
sbb
dec
pop
add
jl
xchg
aam
jo
lret
arpl
inc
jp
pop
imul
mov
dec
pushf
imul
sti
mov
mov
inc
cmc
pop
mov
jg
call
xor
push
insb
fcoms
hlt
out
jmp
cs
sbb
adc
or
sub
push
ds
out
imul
dec
cs
dec
arpl
pop
inc
adc
or
subb
lods
cmp
pop
fs
cmp
mov
push
cld
adcl
inc
scas
xchg
popa
arpl
pop
in
mov
iret
dec
sub
in
lcall
shrl
imul
sub
jno
in
push
lcall
dec
mov
arpl
gs
in
jl
jbe
add
dec
sub
repnz
jmp
frstor
fcoml
inc
pop
fsubs
fsubl
pop
sub
in
xor
inc
sub
dec
rorb
outsl
lret
fdivrl
add
cmp
inc
cmpsb
pop
cwtl
dec
push
dec
sub
sti
in
push
in
xor
pop
test
mov
dec
cmp
sub
pop
outsb
dec
dec
mov
movsb
fdivl
sub
stc
dec
arpl
outsl
push
and
fcompl
sub
xor
jl,pn
jbe
out
and
in
sub
popa
dec
mov
stos
in
icebp
pop
inc
outsb
cmp
and
dec
leave
dec
cmp
sub
in
mov
cmc
add
cmp
pop
dec
scas
outsl
mov
pop
sbb
dec
push
sub
in
sbb
in
pop
insl
out
addr16
call
dec
lret
dec
es
sbb
mov
subl
loop
rcr
pop
dec
push
dec
dec
fsubrl
inc
in
xor
sub
movsb
pop
pop
xlat
fmul
pop
imul
in
sub
sbb
call
outsl
icebp
sub
shrb
in
int3
arpl
dec
add
sub
sub
in
adc
push
pop
mov
shrb
ffreep
arpl
pop
iret
mov
mov
mov
in
pop
jno
lds
mov
scas
in
mov
lahf
pop
push
dec
add
sub
sub
movsb
in
push
in
cmpsb
or
outsb
clc
dec
mulb
sahf
test
pop
pop
cwtl
imul
mov
xchg
dec
lret
xchg
sub
ds
in
cs
xchg
and
outsb
adc
mov
sub
pop
in
jbe
hlt
pop
sub
sbb
mov
lret
mov
sub
and
jbe
imul
pop
arpl
dec
pop
cmp
xchg
pop
pushf
push
outsb
xchg
dec
jnp
insl
insl
push
outsl
cld
and
faddl
add
xchg
js
loope
fisttpl
sub
dec
or
push
dec
and
fsubrl
in
mov
dec
stos
dec
femms
pop
xor
dec
cmp
xor
ret
jnp
cmp
in
jnp
mov
aad
iret
in
inc
arpl
dec
dec
sub
xor
outsb
cs
mov
dec
xchg
sub
sub
out
fldcw
xchg
cmp
dec
aas
sub
in
mov
movsl
dec
push
aas
outsl
dec
and
fmul
dec
mov
and
lods
pop
cmp
dec
repnz
fcompl
dec
adc
shl
lds
push
sahf
dec
js
jb
lidtl
dec
imul
dec
sbb
sub
in
cmp
outsb
sub
and
fcoml
dec
or
lret
in
sbb
xor
fmull
and
fcompl
sarl
fisubrs
dec
lcall
adc
and
in
sub
dec
sbb
and
hlt
dec
jmp
fstp
dec
orl
ficomps
dec
sahf
and
fsubl
out
sub
in
mov
outsb
inc
dec
loopne
leave
add
pop
xor
inc
imull
aas
in
jg
icebp
outsb
mov
sarb
adc
sub
jp
pop
mov
out
imul
in
mov
sub
out
fs
xchg
loope
pop
adc
jecxz
fisubs
fdivl
orb
push
in
and
nop
dec
pop
and
in
dec
lods
sub
pop
aad
push
dec
mov
movsb
fmull
dec
std
cmp
sub
mov
shrl
and
fcoml
in
xor
dec
repz
fsubrl
iret
adc
inc
pop
or
push
and
fadd
dec
mov
sbbb
inc
and
fdivl
dec
movaps
in
pop
mov
faddl
inc
sub
cs
decb
and
fdivl
in
dec
pop
cmp
faddl
dec
stc
sub
in
mov
stos
dec
andl
cmp
sub
in
negb
dec
mov
scas
fsubl
in
xor
and
fdiv
dec
mov
mov
insl
jecxz
pop
mov
mov
sti
xor
in
in
sub
pop
sub
dec
sbb
and
jmp
xchg
arpl
lret
dec
inc
sbb
cmp
sbb
lret
adc
sub
imul
mov
movsl
dec
pop
or
dec
jno
add
mov
test
outsb
sub
and
xlat
and
fdivrl
fimull
dec
int3
cmp
sub
sub
outsb
sbb
loop
movsb
sub
fsubrs
imul
mov
xchg
pop
das
mov
and
mov
pusha
in
pop
pop
adc
and
loopne
stos
mov
pop
add
sub
in
jle
jo
dec
and
fdiv
dec
jmp
gs
movsb
jle
xor
dec
add
fmul
dec
sub
bound
cmpsb
outsl
mov
faddl
sub
arpl
pop
cli
dec
mov
dec
push
sub
in
in
mov
shrl
mov
test
dec
jl
sub
cwtl
outsb
addr16
and
fcompl
push
sub
in
jmp
fisttpll
and
in
lcall
in
subps
xchg
outsb
clc
dec
ret
fsubr
dec
loope
cwtl
xchg
sub
pop
in
cld
pop
adc
and
fcoml
dec
sub
in
pop
mov
fcoml
dec
sub
in
lret
pop
mov
in
mov
dec
add
cli
in
mov
dec
dec
sub
popf
dec
xchg
sub
imul
ljmp
xor
and
faddl
mov
push
in
rcrb
push
lret
fdivrl
adc
dec
mov
dec
push
sub
mov
inc
and
fsubr
dec
sahf
sub
jmp
faddl
sub
fsub
rolb
and
fmul
dec
sub
imul
data16
movaps
in
stos
pop
push
subb
and
fsubl
in
repz
in
xchg
and
in
jl
xor
sub
in
jle
sub
fmul
dec
jns
or
pop
push
dec
and
fsubrl
bound
adc
or
js
push
and
fdivr
dec
stos
sub
dec
out
and
fcoml
xor
in
fimuls
and
dec
shrl
and
es
je
pop
enter
jb
fs
sbb
or
addr16
pop
dec
or
fsubrl
dec
lcall
dec
mov
jo
ds
out
sub
in
mov
dec
xor
dec
xchg
sub
ss
pop
out
pushf
and
fcoml
inc
sub
in
mov
movsl
dec
arpl
and
faddl
dec
mov
data16
fcoml
in
jne
sub
outsb
es
fsubl
fmull
xor
mov
push
sub
in
cmpsb
pop
pop
dec
push
and
faddl
push
jne
mov
push
sub
in
jl
jbe
xor
sub
fs
in
dec
out
pushf
fcoml
in
cmc
pop
mov
movsl
sub
imul
dec
push
sub
fsubl
dec
adc
sbbl
add
pop
imul
jb
fs
lcall
pop
mov
outsb
stos
dec
or
in
pop
push
push
dec
dec
hlt
dec
repz
pop
sub
lea
fcoml
in
add
dec
xchg
and
in
arpl
dec
xor
rcrl
outsb
and
test
dec
xlat
dec
xor
jl
xor
pop
outsl
imul
dec
leave
dec
mov
jl
lock
ljmp
clc
outsb
cmp
into
outsl
sbb
xchg
enter
out
arpl
pop
inc
nop
dec
cmp
sub
lds
sub
imul
dec
add
xchg
in
dec
pop
inc
dec
shll
test
sbb
pop
ret
and
fcompl
or
test
dec
dec
cld
and
fsubl
in
add
js
stos
sub
imul
dec
dec
inc
sub
in
data16
je
pop
or
and
fsubr
dec
xchg
sub
sub
and
in
jo
leave
pop
cli
jb
in
sub
ljmp
je
stos
mov
jge
outsb
adc
pop
stos
mov
jge
push
popf
inc
pop
or
jecxz
pop
and
pop
mov
pop
dec
movsb
pusha
sub
cmp
sub
pop
dec
xlat
cmp
cmp
lcall
dec
mov
test
mov
in
mov
loopne
outsb
fimull
and
in
xor
dec
mov
movsl
sub
xor
inc
sbb
pop
stos
mov
jge
jecxz
out
adc
das
popf
inc
pop
mul
sub
mov
jge
sub
pop
js
jb
pop
fcoml
pop
pop
and
sub
in
out
pop
loopne
js
jb
and
sub
in
inc
in
and
sub
outsb
es
shlb
fdivrl
dec
cmc
pop
out
dec
xchg
and
in
pop
arpl
push
js
or
pop
paddusb
dec
popf
sub
pop
in
aam
pusha
dec
pop
sub
adc
pop
sub
push
dec
pop
ljmp
dec
sub
movsl
pop
adc
outsb
or
and
fsubl
in
fstps
dec
jns
pop
push
arpl
pop
repnz
ljmp
pop
jp
insb
inc
orl
mov
movsl
dec
in
or
rorb
sub
or
dec
sub
sbb
arpl
pop
add
and
fmull
in
rcrl
dec
push
add
and
fdivrl
add
sub
jecxz
lea
and
lret
arpl
dec
add
fsubl
in
lret
pop
add
movsl
dec
lahf
dec
and
sub
sub
cmc
in
jb
fs
mull
in
icebp
arpl
dec
fisubrl
int3
in
mov
and
mov
in
xchg
pop
push
rep
adc
in
outsl
inc
and
fsub
dec
jo
push
sbb
pop
mov
cmp
or
outsl
je
and
sub
in
cltd
pop
inc
in
ds
in
push
pop
dec
pop
out
or
mov
pop
ss
sub
jecxz
and
fdivl
add
sti
sub
cmp
pop
fimuls
and
fcoml
dec
sub
in
jnp
insl
fldcw
dec
push
and
faddl
sub
sbb
push
test
mov
out
sub
mov
in
loopne
mov
jecxz
xchg
dec
mov
dec
in
leave
pop
ret
dec
adc
fsubrl
sub
test
outsb
decl
cmpsl
outsl
sbb
popa
mov
dec
fs
sbb
cltd
in
ja
fwait
imul
dec
sub
xchg
imul
test
dec
mov
sub
sub
pop
int
and
fdivrl
jle
dec
jo
inc
test
cmp
xorl
xchg
dec
sti
subl
mov
xchg
dec
test
sub
mov
pop
sub
outsb
es
jo
push
sub
dec
sub
sub
jne
inc
push
in
ja
pop
aaa
dec
sub
fmul
pop
inc
jno
ds
in
push
pop
dec
dec
jmp
fstp
pop
xchg
or
repnz
fsubl
pop
sub
out
addr16
arpl
gs
pop
clc
dec
jp
insb
fcoml
dec
add
sbb
outsl
or
mov
and
fcompl
dec
fwait
sub
dec
mov
dec
cmp
mov
scas
dec
in
imul
dec
mov
push
fmull
leave
sub
sub
gs
rcrb
dec
push
pop
dec
xlat
sub
outsb
in
fisubs
fdivl
icebp
sub
in
jge
clc
popa
outsb
repnz
xchg
and
faddl
in
or
arpl
pop
lods
dec
cmpsb
and
fcompl
dec
mov
pop
in
rcrb
cmp
dec
inc
pop
sub
aam
pop
dec
dec
inc
and
pop
push
pop
dec
dec
sub
in
pop
pop
push
dec
cmc
and
mov
push
sub
cld
negb
dec
push
or
add
sub
das
push
out
in
push
outsl
gs
fcompl
sub
push
in
fstpl
dec
mov
and
fadd
pop
mov
xchg
xlat
in
push
out
dec
xlat
and
fsubl
sub
dec
in
scas
pop
mov
adc
dec
inc
imul
xor
gs
sub
adc
cwtl
and
xchg
sub
push
adc
out
stos
or
jmp
aad
arpl
pop
out
dec
sub
jnp
in
call
outsb
and
subb
shrb
mov
jl
dec
jbe
sub
in
mov
and
in
mov
sub
in
pop
lds
sub
imul
dec
and
cli
in
mov
test
pop
and
fmull
dec
leave
sub
in
jne
and
adc
mov
dec
push
cwtl
outsl
add
fdivl
mov
outsb
cmp
inc
and
fadd
dec
mov
inc
in
les
dec
dec
and
pop
addr16
dec
pop
sub
push
ficompl
dec
mov
dec
pusha
sub
in
add
dec
xlat
and
loopne
nop
mov
dec
sub
xchg
lock
les
and
fsubrl
sub
mov
pushf
push
pop
dec
dec
sub
fsubl
mov
or
xchg
test
dec
add
fdivrl
cli
mov
sub
fs
mov
and
fmul
dec
sub
lahf
pop
push
test
dec
xchg
and
fmull
in
in
xchg
pop
jbe
push
pop
orb
fsubp
rclb
andb
jnp
insl
jl
jmp
fstpl
jle
pop
les
mov
cs
fsubl
in
xchg
pop
adc
outsb
push
dec
mov
fmull
dec
std
sub
jbe
pop
insb
dec
data16
pop
arpl
push
sub
in
push
in
jb
pop
stc
dec
repz
imul
arpl
pop
dec
push
in
fsubr
fs
pop
cmc
pusha
outsb
out
dec
xchg
pop
outsl
test
lods
pop
imul
pop
jne
arpl
arpl
dec
push
dec
dec
push
sub
add
pop
ss
outsb
sub
and
fsub
dec
sub
in
sbbl
repz
sub
sbb
or
mov
es
dec
sbb
sub
mov
in
pop
in
cmp
dec
xor
sub
imul
fstpl
dec
mov
in
shr
mov
pop
aad
dec
iret
dec
je
sub
sbb
in
mov
and
pop
outsb
orb
or
or
outsl
imull
inc
packssdw
in
add
add
dec
adc
sub
lods
out
in
imul
out
pop
xor
or
fdivr
dec
in
dec
dec
fldt
inc
sub
aad
xor
dec
pop
jl
jbe
shrl
fdivrl
shrl
xchg
sub
int
ficompl
push
dec
mov
iret
cmp
imulb
mov
jge
push
leave
outsl
inc
and
fdivrl
dec
std
sub
in
lret
pop
xchg
dec
mov
adc
scas
dec
cmp
sub
push
aam
cmp
push
arpl
insl
gs
insl
and
insl
mov
insl
jecxz
outsl
subl
mov
repz
mov
std
dec
jge
or
dec
fadd
mov
idivb
dec
pop
mov
mov
insl
test
outsl
dec
and
fsubl
shl
popa
repz
pop
mov
pop
and
fdivrl
dec
pop
push
adc
sub
xchg
cmp
mov
in
mov
adc
dec
or
lock
cwtl
in
jne
mov
mov
outsb
pop
pop
in
dec
test
push
adc
ds
arpl
dec
aad
outsl
jno
jmp
outsl
mov
imul
push
arpl
sbb
jnp
adcb
rcrl
outsb
out
dec
adc
in
dec
arpl
hlt
dec
scas
pop
in
jnp
push
dec
outsb
lcall
inc
arpl
dec
sahf
sub
in
push
in
inc
adc
ret
ficomps
inc
insb
lock
mov
sub
imul
cmp
in
xor
out
loope
sub
pop
repz
cs
inc
in
sub
and
in
and
dec
arpl
outsl
push
and
fmull
sub
in
add
clc
mov
and
in
cli
arpl
dec
data16
in
in
in
ja
xchg
out
outsb
dec
dec
pop
sub
push
ljmp
imul
les
test
pop
adc
js
arpl
pop
cmp
dec
and
dec
mov
inc
sub
xchg
in
rcrl
dec
mov
insl
pop
xchg
divps
sub
outsl
outsb
adcb
arpl
inc
arpl
cmp
inc
sub
mov
pop
and
sub
imul
inc
pop
cld
xor
xor
sub
sub
pusha
in
and
pop
popa
and
outsb
adc
jmp
sbb
mov
insl
or
mov
das
dec
arpl
inc
arpl
dec
xlat
dec
cld
or
cmp
sub
in
jp
or
pop
dec
add
xchg
ret
sub
imul
fisttpll
dec
outsl
shlb
fdivl
mov
dec
cmp
ret
sub
inc
in
fucomp
cmp
in
cmp
in
xor
in
ss
movsb
sub
imul
imul
imul
in
clc
sti
pop
pop
cli
outsb
add
out
shrb
loopne
js
mov
arpl
pop
mov
arpl
dec
scas
dec
mov
dec
aam
xlat
shrb
shrb
dec
pop
mov
popf
enter
insl
in
imul
shrb
sub
mov
lret
inc
push
in
mov
pop
lea
out
insb
sbb
movsb
insl
out
cmpsb
imul
imul
imul
arpl
nop
arpl
xchg
arpl
mov
or
insb
lock
fidivl
add
xchg
jb
mov
pop
add
push
adc
sub
pop
or
dec
push
addr16
in
push
fstpl
dec
dec
push
outsl
aam
pop
fsubr
add
orb
dec
lea
adc
lcall
inc
sub
inc
push
pop
fwait
pop
or
outsb
xchg
dec
mov
outsl
sbb
aas
arpl
sub
cmp
lret
stos
dec
push
cmp
sub
imul
push
sub
sub
in
scas
pop
jmp
insb
call
fcomps
pop
jle
insb
jo
insb
add
outsb
lahf
pop
pop
xor
cmp
outsb
jnp
pop
dec
out
sbb
dec
in
dec
mov
pusha
or
flds
xor
sub
aad
aaa
fmull
push
cld
leave
sub
insb
add
outsb
add
outsl
les
in
shrl
imul
adc
addl
mov
sahf
mov
cli
mov
stc
dec
sbb
out
pop
and
sub
stos
in
cmc
in
movsl
imul
cmpsl
fucomip
mov
pop
mov
lods
lahf
arpl
mov
dec
sbb
sub
in
test
xchg
fsubrp
fstpl
mov
rorl
test
push
pop
shrl
xchg
subl
in
jge
xchg
push
mov
push
pop
jnp
dec
pop
ret
dec
stc
jne
push
ja
dec
jno
mov
stc
xchg
xchg
dec
cld
arpl
arpl
mov
and
test
mov
pushf
popa
imul
dec
xlat
dec
loope
dec
outsl
pop
dec
in
pop
sub
push
in
or
push
jl
or
push
outsl
mov
lods
in
dec
arpl
pop
inc
inc
dec
mov
inc
jbe
insb
dec
inc
insb
rolb
pop
dec
mov
outsl
mov
dec
pop
imul
xchg
ss
xor
xor
sub
cmp
in
fldlg2
and
in
es
sbb
in
sbb
in
adc
in
adc
xchg
push
std
pop
scas
in
or
pop
sahf
or
dec
jle
insl
adc
insl
push
add
sub
adc
imul
clc
imul
aad
imul
arpl
pop
add
dec
movsl
ds
scas
rorb
adc
int3
in
enter
pop
mov
arpl
dec
and
dec
jmp
sub
mov
mov
pop
xchg
sub
subl
outsl
push
jns
loopne
push
mov
dec
add
jnp
pop
repnz
dec
xor
dec
add
push
dec
dec
ljmp
sub
and
mov
pop
and
push
push
insb
movsl
sbb
insb
into
push
insb
popa
adc
insb
in
repnz
xchg
dec
int3
pop
cmpsl
out
arpl
in
mov
dec
mov
mov
ret
les
insl
fidivrl
mov
jmp
popf
mov
outsb
lds
je
imul
scas
jo
jb
push
insb
dec
outsb
test
fsubrl
push
je
dec
ds
jl
dec
and
inc
cmp
mov
js
insl
lock
in
aaa
imul
and
push
out
iret
adc
das
in
sub
outsb
negl
and
sub
add
in
insl
in
pop
in
pop
push
sbb
dec
mov
mov
imul
dec
or
pop
ret
out
and
outsl
stos
sub
imul
inc
pop
arpl
stos
dec
sub
dec
incb
sub
std
sub
jmp
sub
cld
sti
insb
dec
cmc
outsb
iret
dec
push
icebp
outsl
xor
in
repz
arpl
xchg
out
arpl
arpl
dec
jg
mov
out
loope
pop
jecxz
fstps
sbb
in
mov
imul
xchg
insb
push
xlat
outsb
cwtl
dec
sbb
insl
loopne
insl
mov
mov
imul
sub
in
scas
pop
sub
outsb
sahf
dec
mov
lea
frstor
cmp
lahf
insl
setns
xchg
outsl
pop
sub
xchg
outsl
sbb
imul
mov
sarl
movsb
sub
dec
arpl
pop
les
dec
mov
sub
sub
inc
sub
inc
in
add
ds
in
sub
push
sub
dec
out
outsl
jns
and
and
in
or
popf
pop
inc
push
dec
jge
and
dec
mov
dec
insb
add
jp
dec
push
add
sub
cli
in
in
movsl
pop
std
out
insb
pushf
call
cmp
insb
or
insb
loopne
fsubrl
insb
sub
insb
addr16
int
pop
insl
add
outsl
cmpsl
sub
mov
mov
mov
push
mov
sub
sub
sahf
in
xor
out
lcall
lods
in
popf
pop
and
mov
cmp
dec
pop
mov
icebp
lods
cli
sub
mov
or
pop
test
outsb
dec
add
mov
in
dec
arpl
dec
icebp
sub
push
outsb
in
fidivrs
or
insl
pop
xor
ss
imul
loopne
xor
jne
mov
dec
cs
fstpl
outsb
lret
add
add
outsl
lret
sub
clc
imul
jnp
imul
imul
scas
icebp
xor
in
mov
ficomps
in
in
fdivrs
mov
in
sarb
out
shlb
insl
push
enter
insl
and
imul
aad
jb
mov
pop
shll
mov
insb
adc
insb
movsb
insb
sbb
insb
or
insb
cld
mov
and
insb
ficoms
xchg
xchg
imul
jb
sub
jbe
xor
insb
shrb
pop
pop
outsb
arpl
movsb
pop
scas
push
outsb
dec
dec
pop
test
adcl
in
mov
mov
outsb
cmp
sub
imul
push
dec
fldt
sub
inc
in
cli
xchg
inc
push
pop
leave
pop
inc
inc
outsb
lret
inc
insl
cwtl
cmp
in
aas
arpl
dec
xchg
sub
sub
cmp
clc
and
sub
imul
nop
dec
loope
and
dec
insl
sub
test
gs
daa
repnz
cmc
dec
and
outsl
insb
sub
sbb
pop
sub
sbb
adc
rcrl
adc
out
outsl
mov
imul
loope
pop
repnz
jecxz
pop
xchg
outsb
cmp
fldcw
xlat
outsl
xchg
sub
leave
imul
dec
das
sub
icebp
add
sar
ret
in
mov
pop
scas
dec
test
insl
mov
lret
mov
les
daa
cmp
sub
dec
mov
adc
and
add
arpl
iret
dec
enter
lahf
sub
sub
cltd
sub
fwait
sub
xchg
in
jge
out
xchg
outsb
je
mov
insl
add
outsl
or
inc
movsb
cs
aas
in
mov
mov
in
test
pop
out
dec
jne
subl
in
es
jge
pop
pop
jg
mov
ret
push
pop
in
jnp
cs
jmp
jp
outsl
jns
mov
movsb
cs
lods
fidivrl
mov
dec
dec
sub
in
outsb
pop
lret
and
fdivl
std
sub
test
pop
sbb
mov
add
dec
stos
sub
sub
push
in
dec
in
dec
ficompl
outsb
xor
fmull
dec
in
inc
sub
clc
inc
in
loop
loope,pt
add
outsb
je
add
xchg
cmp
xor
in
ss
movsb
xor
xor
push
sub
and
mov
insl
dec
sbb
ficomps
insl
sub
adc
sbb
jmp
loopne
dec
xor
sub
sub
add
inc
push
in
and
add
cld
fstpl
insb
push
clc
outsb
cltd
dec
psubusb
fisubrl
sub
aam
fstpl
sub
and
fmul
or
ret
add
arpl
cmpsb
sub
ja
in
mov
in
lea
sahf
in
test
pop
mov
adcl
dec
xchg
sbb
lods
pop
inc
jne
xor
insb
test
pop
and
imul
dec
imul
imul
mov
dec
inc
arpl
and
mov
pop
sbb
mov
sub
sbb
adc
add
in
fucomi
lock
repnz
pop
push
in
outsb
stos
dec
fldz
insl
sub
outsl
ret
sub
push
pushf
loopne
sbb
dec
fs
mov
mov
bound
sbb
mov
pop
js
mov
sti
pop
insb
je
lahf
cmp
jbe
dec
pop
fnsave
mov
test
outsb
iret
and
fsubrl
stos
fs
out
mov
out
in
push
imul
push
in
inc
jb
cmp
jmp
scas
cmp
xor
dec
mov
dec
nop
xor
pop
xor
sub
das
pop
sub
sub
and
and
sub
sub
and
sbb
and
jecxz
sbb
pop
call
rcll
cmp
in
adc
dec
xchg
push
or
dec
pop
pop
or
fsubrs
or
xor
add
pop
pop
add
outsb
mov
idiv
insl
push
ljmp
and
in
stc
imul
imul
std
pop
cmp
dec
bound
movsl
sub
repz
in
in
lret
in
out
dec
in
jmp
pop
repnz
jo
mov
dec
mov
push
minps
outsl
pop
and
in
fldenv
pop
mov
dec
rorb
dec
sbb
ds
push
iret
imul
sub
in
in
lret
fs
loope
arpl
outsl
shlb
xchg
pop
and
dec
cwtl
sub
insb
mov
xchg
dec
mov
outsl
mov
mov
push
lods
imul
imul
xor
sub
and
jge
lea
push
xchg
sub
lea
pushf
mov
or
pop
out
inc
arpl
pop
into
inc
arpl
dec
stos
dec
aas
cmp
int3
ds
dec
sub
lcall
in
and
pop
outsl
and
dec
or
insl
xchg
xlat
sub
imul
or
add
lods
push
imul
pop
repnz
mov
fildll
out
sub
call
insb
in
cmp
sub
fsubrl
in
pop
in
aam
in
xor
ret
and
outsb
leave
dec
xor
mov
mov
shll
push
xlat
cs
sahf
mov
fs
xchg
sub
imul
cmc
dec
test
sub
sub
xchg
in
bound
dec
insl
xchg
outsl
mov
sub
int
popf
leave
sub
shrl
test
pop
inc
mov
lock
lret
sub
dec
mov
xor
in
scas
or
fsubrl
test
ficoms
push
outsl
popf
and
sbb
fdiv
dec
stos
dec
popa
sbb
in
sub
adc
pop
jge
outsb
push
outsl
xchg
and
in
adc
dec
sbb
sub
iret
or
or
pop
dec
loopne
outsl
daa
sub
imul
dec
inc
sub
lds
in
push
aaa
in
ljmp
dec
xchg
and
in
loop
imul
add
sub
in
mov
into
mov
enter
paddusb
hlt
sub
in
dec
in
les
sub
imul
jns
sub
dec
pushf
sub
and
in
mov
jmp
in
mov
sub
orb
mov
pop
dec
mov
nop
mov
mov
or
pop
and
in
js
dec
iret
dec
fidivrs
adc
jne
in
je
pop
stos
dec
push
jbe
inc
and
in
jo
push
fs
jecxz
rorb
sub
in
pop
in
repnz
mov
pusha
imul
mov
jmp
pop
sbb
enter
mov
mov
arpl
sub
loope
lahf
cmp
pop
stos
pop
pusha
dec
adc
push
addr16
dec
ds
ss
arpl
sub
dec
in
mov
cmp
inc
imul
pop
sub
dec
insb
sub
in
mov
outsb
lea
inc
outsl
mov
dec
cmp
ficomps
cmp
in
sub
sub
dec
mov
mov
push
daa
outsb
mov
and
in
and
and
pop
or
arpl
xor
push
dec
pop
bound
sub
sub
adc
or
in
js
stc
dec
clc
adc
sub
imul
mov
in
inc
in
or
pop
mov
sub
imul
jb
ret
dec
cmp
push
add
add
fwait
addr16
push
jecxz
lds
dec
loop
cwtl
in
out
xchg
dec
sub
outsl
dec
and
fdivrl
mov
dec
out
sub
mul
mov
pop
das
dec
dec
rep
mov
push
in
imul
mov
sub
in
pop
in
out
sbb
mov
insb
outsl
out
std
loope
aas
pop
add
sub
jecxz
mov
mov
mov
push
test
cmp
pop
repnz
dec
in
and
in
fldcw
dec
mov
sub
in
dec
in
rcr
pop
xchg
dec
dec
sub
shrl
int
ljmp
iret
sub
leave
out
insb
dec
cmp
stmxcsr
sub
lds
imul
mov
arpl
lea
mov
out
outsl
xchg
and
in
mov
dec
or
sti
pop
mov
mov
out
mov
sub
in
mov
in
add
lea
sub
dec
lods
in
sub
sub
test
test
data16
dec
rorl
sub
test
pop
pop
mov
dec
mov
out
insl
adc
ds
jge
imul
je
pop
add
outsb
push
dec
dec
outsl
shlb
in
mov
mov
xchg
dec
loop
push
imul
subl
in
lahf
pop
push
jge
pop
pop
lret
jg
jmp
in
jns
pusha
pop
fs
sbb
xlat
in
addr16
mov
insl
outsl
imull
imul
sub
popa
std
pop
in
pop
outsb
sub
and
mov
sub
push
in
jg
push
outsb
in
dec
sbb
dec
into
out
dec
jne
outsl
in
adc
sub
sub
adc
out
in
pop
push
insl
jno
jae
push
shrb
cmc
test
mov
lods
js
add
loope
lret
pop
test
sbb
je
fsubs
test
dec
and
jle
sbb
imul
sbb
mov
push
push
sbb
and
push
pop
mov
adc
cwtl
adc
xchg
mov
xchg
add
jmp
ret
ss
in
test
imul
cmp
pop
jl
cs
jg
push
adcb
int3
fimuls
and
je
bswap
or
mov
neg
shl
dec
sar
add
bt
rcl
clc
btr
mov
bt
test
push
pushf
lea
je
sar
and
push
shl
add
push
bsr
cmp
mov
pushl
bt
pusha
add
cmc
stc
clc
mov
sub
shl
rol
test
mov
bt
pushl
clc
bt
cmp
call
fldenv
sbb
xchg
xor
jle
adc
pop
jae
push
nop
insb
and
mov
insb
loopne
test
shl
inc
outsb
rolb
adc
inc
call
out
mov
fiadds
cmp
adc
pushf
lea
jae
pushf
jmp
xor
test
sbbl
mov
push
sub
je
mov
pop
inc
push
popa
out
mov
xor
adc
lods
xchg
sub
adc
mull
inc
lret
imulb
fs
in
and
insl
and
rcr
lret
push
aad
pop
faddp
jbe
lds
xchg
subb
aam
push
movsl
push
ret
lea
mov
fists
int
rcrl
dec
cld
mov
jbe
clc
cwtl
or
ret
fucomi
stc
adc
cmp
fs
cmp
inc
sub
jo
sahf
lock
cmp
cs
in
hlt
ficomps
aam
and
cmp
test
punpckhwd
test
in
inc
sub
jecxz
xchg
xchg
xchg
test
popl
or
in
mov
mov
dec
pushl
sahf
seto
repnz
ds
jmp
shr
lea
dec
sbb
mov
pushf
test
sub
jb
pushf
or
call
lea
ja
push
setno
inc
pusha
pushf
inc
or
mov
bt
dec
xchg
xor
aaa
mov
bt
shr
sar
movb
mov
call
test
test
adc
cmpb
add
sub
mov
adc
bound
adc
adc
arpl
lods
cltd
and
pop
pop
dec
iret
das
cmp
mov
aad
mov
inc
daa
sahf
push
mov
or
insb
mov
push
push
daa
sub
push
shlb
lods
mov
xchg
lret
int
or
daa
hlt
sbb
and
dec
add
int3
loopne
push
ss
orb
mov
orl
fists
int
pop
mov
movsl
ss
in
sub
cmp
hlt
loope
sbb
push
das
mov
lods
lods
jmp
or
cmpsb
ja
aad
push
cmp
popa
outsb
xlat
mov
rcrb
lcall
in
in
jge
and
xor
mov
xor
jle
cwtl
gs
test
loopne
andb
ss
cmp
loope
or
xor
mov
add
cmp
adc
add
inc
iret
lea
add
sub
or
lods
and
dec
aad
add
jle
add
xor
xchg
int
mov
mov
mov
test
les
push
sar
push
inc
sub
and
iret
sti
movsl
popf
adc
out
test
mov
leave
fidivrl
push
mov
out
test
mov
pusha
fisttps
insl
pushf
aas
lods
sbb
out
sarb
leave
push
outsb
mov
ja
ds
and
imul
outsb
sbb
mov
clc
xchg
and
xlat
xor
popf
je
aam
mov
push
jo
xchg
and
or
test
jo
insb
mov
lcall
mov
sub
inc
pusha
out
inc
mov
cld
jb
daa
sbb
mov
xor
sahf
ss
addr16
adc
or
addr16
pop
push
mov
pop
repz
sbb
adc
or
mov
add
dec
cmp
mov
add
lods
cltd
cmpsl
jl
adc
pop
sbb
adc
adc
pop
or
adc
stos
out
cli
push
mov
pop
sub
xchg
ficoms
popa
push
dec
or
shll
loope
jns
pop
loop
ret
mov
push
inc
insb
xchg
sub
or
stc
xor
int3
int
icebp
dec
sahf
lret
mov
pop
and
loope
and
jecxz
add
fisttpll
and
xor
int
mov
insb
test
loope
or
out
cld
in
lret
xchg
jae
mov
arpl
adc
stos
jno
push
adc
pop
xchg
jmp
push
mov
jbe
cwtl
sbbb
xor
mov
sti
inc
and
jmp
add
inc
ds
in
scas
pop
into
xchg
scas
inc
pushf
inc
repz
pop
daa
mov
push
aaa
adc
das
mov
in
enter
movb
mov
lcall
adc
das
scas
mov
out
mov
xor
jnp
dec
add
and
xchg
adc
shll
aas
xor
push
repz
mov
clc
adc
int3
jecxz
inc
push
pushf
fs
fisttpll
xchg
sub
adc
dec
in
arpl
xor
cld
push
pop
insl
fcoml
sub
aad
aas
jno
addl
push
xchg
lcall
cmp
das
es
dec
fldcw
scas
mov
xchg
add
cmp
sub
dec
int
jle
lret
push
int3
in
and
je
or
fs
je
test
pushf
test
add
pushl
clc
bt
cmc
cmp
call
ror
push
bt
pushf
cmc
neg
cmp
test
xor
test
neg
jmp
pushf
lea
jb
push
jmp
cmc
mov
cmc
jmp
call
pop
addr16
jge
sub
subb
mov
push
adc
int
pop
mov
lds
out
dec
push
cli
imul
mov
test
movsb
jae
out
mov
nop
jg
imull
inc
mov
add
push
mov
sbb
and
add
sarb
ljmp
sahf
repnz
scas
test
mov
shl
push
cs
lods
xchg
add
ret
pop
push
adc
adc
mov
jo
sub
mov
call
add
lea
jne
call
add
pusha
stc
movb
pusha
cmp
call
pushf
seta
mov
mov
movzbl
movb
lea
movw
movl
push
mov
mov
pusha
mov
pusha
movw
pushl
ret
add
push
gs
insb
outsl
jae
dec
gs
push
push
inc
push
xor
cs
insb
add
cmp
call
xchg
mov
movw
bswap
mov
mov
push
movb
mov
movzbw
push
pop
pusha
mov
pushf
push
pushf
push
pushl
ret
movl
jmp
xchg
pusha
movl
push
movl
movb
pusha
lea
jmp
mov
int3
jmp
pop
fwait
popa
outsb
jmp
ja
dec
popf
push
push
lcall
adc
mov
test
adc
lcall
mov
jge
xor
mov
orl
nop
movsb
xchg
cmp
pusha
notb
mov
inc
mov
mov
addr16
andb
cs
out
xchg
fsubrs
data16
push
xor
outsl
pushf
ds
in
add
les
out
adc
repz
pop
aaa
pop
jecxz
mov
aam
outsl
in
cwtl
dec
mov
insb
mov
push
movsb
aam
shl
jecxz
cmp
pop
int3
cmp
enter
loop
mov
push
sub
and
adc
push
push
xor
fisubrl
mov
mov
sub
das
pop
jl
in
or
in
pop
lahf
and
pushf
push
ljmp
jno
imul
inc
sbb
insb
outsb
imul
xor
pop
mov
call
gs
dec
pushf
inc
sub
ret
not
and
jno
fucomp
fucomi
xor
cld
ss
jmp
dec
push
push
lock
ja
jbe
cwtl
sub
sbb
sub
pusha
push
repnz
mov
dec
popf
jmp
and
lods
sbb
mov
rcrb
mov
fwait
xlat
stos
push
mov
fstl
mov
into
dec
out
push
and
stos
out
out
scas
dec
and
xorl
movb
push
lea
jmp
stc
mov
sub
cmc
bt
movb
neg
cmc
call
sarl
xor
test
sub
or
mov
jecxz
dec
or
shrb
inc
adc
dec
ficompl
xchg
dec
xchg
mov
in
mov
cmpsl
loopne
loopne
jne
mov
leave
xchg
mov
into
lret
clc
out
lods
jmp
cmp
push
adcb
xchg
pop
jno
mov
xor
sub
cmp
push
int3
call
repnz
stc
pushl
cmc
mov
not
mov
sub
call
lods
dec
cmp
bound
and
ljmp
cmp
cmpsb
inc
jo
or
loop
lahf
mov
sbb
mov
shl
mov
jmp
lea
adc
xchg
jbe
fwait
lret
stos
jl
pop
outsb
ja
pop
mov
mov
rcrb
sbb
lds
into
mull
mov
je
addb
inc
add
aam
jbe
sub
insl
ret
xchg
mov
call
dec
jns
jae
cmp
sub
or
sub
mov
pop
xchg
repnz
cltd
hlt
push
mov
adc
xor
inc
addl
pushf
cmp
mull
cmp
pop
mov
mov
jmp
mov
js
stc
cmc
push
int3
jmp
xchg
das
cmc
fldl
ret
add
push
inc
insl
fidivrl
daa
divl
cmp
pop
gs
sti
std
jle
or
inc
aas
cmpsl
inc
jl
cs
in
call
in
mov
inc
ror
dec
mov
nopl
push
orb
jno
andb
pop
or
push
int3
jmp
and
popf
mov
and
pop
jnp
xor
nop
testl
mov
pusha
cmp
fwait
xchg
pop
cli
push
in
push
inc
jl
cmpxchg
stos
jmp
and
int3
mov
mov
popa
cs
mov
pop
fistpl
arpl
subb
adc
pop
imul
repz
fsubrl
bound
test
jge
aad
push
enter
leave
or
ljmp
pop
adc
clc
xchg
mov
lcall
int3
ljmp
rcrl
sbb
cmp
mov
push
pushf
pushl
lea
ja
call
cmp
pusha
cmp
call
adc
nop
dec
add
add
push
adc
jl
adc
xchg
inc
jno
ret
loop
ret
lods
xchg
das
dec
fwait
int
cmc
xchg
mov
pop
test
mov
push
int3
jmp
pop
sahf
pusha
movl
push
push
pushf
pushl
lea
jmp
push
mov
lea
je
clc
pushf
cmp
pusha
pusha
push
jmp
dec
inc
push
dec
inc
dec
xor
cs
insb
add
fisttpl
xchg
pop
inc
adc
push
xor
jge
call
in
inc
adc
iret
xor
xchg
xchg
push
arpl
lcall
or
jge
out
cmp
mov
ja
fsubrl
test
add
xlat
outsb
js
push
mov
inc
mov
inc
jge
pop
shlb
jg
inc
mov
out
enter
xchg
aaa
sub
or
cmc
mov
shrb
sub
ljmp
pusha
push
int3
jmp
jl
pushf
lea
je
pushf
pushf
lea
jmp
push
mov
jmp
stos
pushf
pusha
movb
lea
jmp
dec
inc
inc
sar
xchg
sbb
bt
cwtl
mov
mov
cmc
mov
pusha
mov
cmc
xor
mov
clc
push
test
sub
movb
pushl
rep
lea
not
mov
mov
pushl
pushf
lea
jmp
pop
hlt
and
movsb
insb
push
pop
out
mov
mov
test
int3
repz
testl
aam
data16
inc
jae
jne
test
repz
or
push
out
roll
jno
out
pop
mov
xor
ja
insb
jns
add
inc
js
jb
or
dec
sbb
fisubl
or
iret
xlat
jmp
outsb
ja
dec
cld
fs
ret
outsl
jno
and
cmp
jle
stos
in
sub
cmp
lods
jnp
mov
outsb
imul
push
sbb
int3
outsb
or
popf
fsubr
cmp
sti
in
repz
push
push
loope
pop
sub
fdivrl
lods
cmp
out
int3
xchg
pop
sbb
loope
in
mov
outsb
lea
addr16
jge
lds
lock
push
sbb
cmc
roll
icebp
xor
pushf
sub
dec
jae
push
push
cmc
xchg
call
lods
fnstcw
popa
mov
sbb
ret
ljmp
rep
popa
clc
inc
and
mov
and
pushf
lock
call
subl
ret
push
fs
insl
scas
cld
jge
adc
popf
mov
int
out
jecxz
lods
mov
mov
in
xor
imul
mov
xchg
mov
add
push
in
pop
je
sub
sub
inc
pop
jno
lds
push
add
out
push
arpl
jle,pt
ja
sub
into
imul
lahf
test
adc
fiadds
sarb
sbb
into
gs
ds
mov
sub
leave
pushf
xlat
cli
repz
lods
bound
and
pusha
xchg
imul
jp
jne
add
and
dec
js
popf
mov
push
jle
pop
test
in
lods
in
cmc
imul
pop
xchg
and
pop
pusha
out
repnz
scas
icebp
js
mov
je
insl
repz
sub
or
iret
shll
dec
int
jns
cs
pop
lret
cmp
cmpsb
outsb
cmp
xchg
push
jns
pushf
push
xchg
xchg
fcmovnb
and
mov
pusha
sub
xor
sbb
push
repz
insb
xchg
sub
aam
mov
cli
imul
popf
sbb
outsb
jnp
push
into
push
enter
pop
lds
cmp
enter
mov
and
push
arpl
push
insb
out
mov
push
mov
add
xchg
cli
je
pop
and
xor
aad
xchg
std
dec
push
inc
mov
lret
es
popa
clc
push
or
out
jae
cwtl
daa
mov
mov
add
aam
jmp
les
xor
int3
popf
stos
add
mov
or
fwait
cmpsb
arpl
push
cmp
pop
sub
popf
int3
mov
xchg
hlt
pop
outsl
dec
and
fidivs
popa
in
xor
out
imul
xchg
insl
mov
push
jno
in
bound
cltd
roll
popf
mov
outsb
jns
push
popf
push
imul
ljmp
mov
popl
fcompp
iret
cli
in
pop
xor
mov
aad
loopne
out
jmp
fidivrs
push
xchg
clc
aas
cmpsl
movsb
adc
fbstp
pop
test
shl
push
pcmpgtb
addb
push
pop
push
fsubl
stos
and
push
shr
hlt
repz
pop
popa
adc
adc
popf
cld
ss
mov
and
aaa
pushf
aam
les
pop
jb
mov
push
sbb
sbb
xor
lods
fwait
insl
jb
aad
add
iret
xlat
insl
or
mov
test
or
movsl
xchg
nop
insb
mov
xchg
hlt
popf
sub
push
sbb
rol
sub
jno
inc
mov
xchg
sub
imul
add
cmp
test
loop
mov
pushf
dec
lods
sub
cld
push
mov
push
sbbb
cmp
arpl
gs
adc
addr16
dec
int3
fstl
sbb
mov
imul
popf
bound
fcmovu
rolb
sbb
push
aas
popa
repz
pop
and
ror
imul
add
popf
xchg
cmpsb
nop
or
pop
insb
repnz
fbld
xchg
out
cltd
jle
and
or
ficoml
out
addr16
insb
or
mov
pushf
movsw
push
ljmp
inc
mov
dec
fdivrp
adc
cli
cmp
cmp
pop
dec
jne
mov
push
xor
dec
iret
lods
pop
rorl
push
fmull
mov
mov
leave
mov
sbb
pop
mulb
and
dec
pop
inc
nop
es
mov
push
into
and
dec
lods
jecxz
cmp
sbb
dec
inc
cld
popf
xchg
call
les
gs
xor
jp
iret
bound
repz
sub
ficompl
pop
lods
lcall
inc
int3
push
movsb
test
add
sahf
push
out
and
mov
iret
call
outsl
shll
push
sti
out
push
insl
jae
fists
xchg
push
dec
adc
out
loop
xor
add
jg
shrb
int
xorb
outsb
fists
out
in
ja
scas
sub
insb
es
adc
pushf
in
cs
sahf
and
mov
imul
inc
sbb
hlt
es
pop
lret
fcmovbe
out
es
xor
mov
les
pop
jo
mov
out
sahf
daa
test
add
dec
test
cltd
push
and
out
ss
int
cltd
movsb
sub
mov
dec
fwait
addr16
jb
mov
push
pushf
out
sub
loopne
jbe
sbb
xchg
dec
inc
addr16
mov
inc
insb
dec
popf
lret
xchg
in
push
ja
dec
mov
sti
jp
pop
idivl
cld
dec
adc
dec
sub
out
test
jmp
insl
ret
movsl
frstor
cmc
hlt
aam
ss
mov
repz
push
daa
jne
jmp
cmpsb
cmp
stos
cld
int
call
ds
jge
jo
xchg
pushf
shl
xor
jmp
inc
add
mov
cs
pop
pop
popf
popf
sbb
movsb
mov
pop
int
lods
insb
out
sub
pop
pop
lret
test
test
mov
xchg
popf
and
out
cwtl
sbb
out
arpl
mov
pushf
xor
dec
and
daa
int3
cmp
push
in
imul
push
outsb
sub
and
sub
ficompl
push
lods
adc
sbb
mov
xchg
lods
les
lods
addr16
push
das
jge
aad
stc
les
xor
sbb
bound
push
xchg
cs
mov
xchg
ds
sub
mov
and
xor
gs
nop
pop
xor
rol
sub
jns
pop
sbb
out
mov
and
sub
call
repz
pushf
xor
mov
dec
lcall
je
shl
xchg
or
adc
inc
or
cli
dec
xor
icebp
shl
cmp
or
cmp
int
inc
lods
sub
imul
xchg
jg
and
or
cmp
cmp
sbb
arpl
dec
inc
fadds
sbb
insb
test
mov
sbb
or
inc
pop
mov
inc
lock
iret
out
mov
mov
push
testl
add
jl
andb
push
cs
mov
out
jmp
cmc
mov
and
xchg
pushf
jle
into
xchg
sti
sbb
mov
pop
pop
in
out
in
into
add
popa
pusha
sarb
adc
mov
pop
xchg
aas
bound
or
mov
dec
sub
jae
or
lock
fistps
popf
pop
sahf
into
es
mov
add
je
cld
xor
fiadds
mov
and
popf
insb
rolb
cmc
mov
add
ret
data16
lods
pop
stos
cwtl
in
add
stc
dec
cli
jbe
push
ror
inc
lds
mov
aam
and
jg
shlb
loope
xchg
int3
push
xchg
dec
lods
popa
mov
ret
sti
pop
repz
iret
mov
imul
fstl
mov
popf
pop
mov
sbb
sub
push
pop
clc
cmp
mov
lods
sub
push
dec
data16
insl
outsl
xlat
mov
das
mov
or
mov
lcall
and
imul
enter
lods
push
sub
rcll
in
jns
push
cmp
push
mov
fstps
ret
scas
jg
lock
addr16
int
adc
or
cltd
ss
arpl
push
shrl
jmp
aad
pusha
iret
mov
mov
popf
dec
mov
sub
adc
fwait
scas
push
inc
push
imul
stos
repz
pushf
jg
lds
js,pn
insl
sub
dec
in
out
repz
sub
outsb
pop
cmp
mov
or
pop
jne
rorb
in
cld
test
fmull
and
sub
ror
add
aad
lods
sub
addr16
mov
push
xlat
dec
lds
or
lret
xchg
and
repnz
scas
cmp
cld
mov
dec
or
fcompl
or
pop
bound
adc
pop
in
sbb
sbb
or
paddusb
mov
sbb
add
sub
jne
divl
out
daa
cli
dec
jg
bound
test
fsts
bswap
scas
daa
pop
mov
mov
fwait
sub
fs
and
pop
les
sbb
xchg
push
jnp
int3
sbb
xchg
and
dec
inc
lods
push
mov
or
sbb
sub
pop
pushl
in
sti
push
shrl
pop
xchg
pop
stos
out
sahf
mov
out
in
cld
sub
jecxz
sub
imul
mov
xchg
or
xchg
arpl
push
mov
pushf
cmp
pop
inc
scas
sub
pop
xor
jae
cld
push
pushfw
inc
insb
jge
push
jns
dec
mov
inc
mov
es
dec
loop
iret
xor
xor
popf
in
out
push
adc
mov
mov
mov
dec
pushf
jne
das
sub
loope
push
xchg
pop
nop
mov
in
in
and
sbb
and
les
subl
xor
lods
insl
jmp
daa
inc
bound
aam
dec
dec
ret
jne
leave
popa
jl
fnstsw
xor
and
sub
xchg
sbb
sub
or
cmp
jnp
mov
sbb
pushf
xchg
lods
mov
out
popa
gs
imul
jecxz
repz
out
mov
push
in
cld
outsb
enter
xlat
call
push
into
insb
and
push
jmp
push
adc
hlt
push
stos
xor
push
hlt
data16
and
fsubrs
dec
cmc
cmp
mov
rcll
mov
fcoml
mov
mov
test
out
call
lds
and
mov
jno
arpl
repz
adcl
test
fcompl
ja
ret
enter
push
and
add
mov
cmc
jno
and
dec
les
in
pushf
pop
mov
push
insl
popf
add
xor
test
mov
mov
rcl
push
scas
or
cli
mov
call
inc
jl
xor
fsubrl
clc
outsl
push
add
lods
aam
or
ja
push
popa
sub
in
dec
and
fs
or
xchg
es
arpl
push
les
test
ss
dec
sub
les
push
outsb
or
popa
push
push
mov
sub
sbb
divl
xchg
dec
sbb
imul
repz
xchg
or
sbb
xor
lret
cwtl
sbb
stos
outsl
add
or
popf
push
or
xor
and
leave
push
inc
int3
sub
test
sbb
cmc
jae
repz
pop
shll
iret
jge
outsb
outsb
jno
inc
dec
scas
enter
lods
repz
inc
xchg
out
ja
repz
dec
add
insb
movsl
cmp
data16
insl
dec
fistps
repz
push
and
xlat
nop
arpl
xchg
adc
mov
and
jmp
mov
mov
cmpsb
faddl
push
push
rcrb
jae
pop
push
mov
idivb
adc
cwtl
ret
out
lret
fwait
and
add
sub
mov
aam
test
fmull
loop
rorl
sahf
pop
push
add
les
dec
add
sub
jl
les
stos
jnp
adc
mov
pop
daa
lret
es
pop
cmpsl
adc
sbb
or
arpl
insb
jae
cmp
adcl
sbb
ljmp
mov
mov
aam
fs
ss
mov
shrl
ljmp
push
lahf
loope
lret
dec
jle
dec
in
shrl
and
jge
pop
dec
popa
negl
mov
imul
sub
jle
and
iret
dec
fistpll
mov
les
pop
es
push
hlt
orl
sbb
push
arpl
pushf
dec
aaa
push
orb
and
movb
rorb
fcoml
in
adc
cmp
sbb
pushf
shlb
push
insl
mov
inc
push
mov
xor
mov
fmull
cmp
or
loopne
negl
sub
adc
cld
fcmovnb
pop
inc
adc
or
notb
push
inc
loope
cli
cld
pop
outsb
neg
mov
cmpsl
push
ror
in
cmc
lret
push
andl
dec
xchg
pop
shlb
dec
dec
dec
xchg
xor
popa
lret
pop
pop
repz
mov
or
aam
aam
rcll
push
xchg
dec
lret
ret
pusha
jle
jmp
ficoms
and
fdivr
aad
add
or
mov
inc
les
jno
aaa
movsb
adc
xlat
cmc
and
mov
or
inc
lret
aas
pushl
das
es
leave
mov
xchg
sub
lock
scas
inc
jmp
subl
mov
adc
add
pop
dec
fucomip
fcoml
cmp
scas
sti
push
ljmp
xor
inc
nop
cmp
mov
dec
push
adc
mov
or
cmp
test
jne
adc
cwtl
adc
in
mov
push
xor
jns
ret
bound
test
sahf
jge
outsl
dec
gs
fs
imul
cli
into
movb
mov
pop
push
mov
cld
ds
nop
pushf
sbb
and
dec
xor
xchg
sbb
jnp
mov
scas
out
and
jns
addl
imul
pop
testl
cmp
and
adc
sahf
les
hlt
popf
lods
gs
in
mov
test
imul
cmp
loope
mov
mov
sub
fbld
cmp
push
shlb
jne
inc
xchg
mov
adc
lahf
fs
mov
cltd
insb
pop
filds
pop
imul
popf
inc
mov
je
dec
lods
mov
and
fidivs
jge
pop
jne
or
push
xor
xlat
pop
loop
arpl
imul
out
aam
pushf
das
jge
cltd
add
fs
pop
lods
fwait
push
adc
inc
sbb
push
iret
mov
out
sbb
xchg
dec
mov
js
push
out
stos
cs
lods
gs
outsl
mov
dec
xchg
mov
movsb
ds
out
sub
push
dec
or
int3
adc
mov
and
test
sub
les
aaa
sbb
stos
les
mov
lods
mov
cmc
xchg
ds
pop
mov
mov
cmp
popf
mov
xchg
test
cmpsl
call
add
cs
cwtl
adc
lcall
and
and
dec
int
subb
aam
push
push
jmp
xchg
inc
cmp
adc
lods
lods
mov
push
cmp
ja
repz
pop
test
into
test
test
sub
sub
loope
lods
repnz
add
pop
xchg
iret
mov
imul
inc
call
jge
lahf
addr16
enter
scas
push
push
ret
frstor
or
add
inc
and
pop
sahf
jge
rcrb
lods
dec
pusha
cli
repnz
lret
dec
popf
es
sub
iret
fwait
cmp
cmpsl
popa
sub
cwtl
mov
cmp
rorb
jne
adc
movsb
pop
pavgb
sbb
jmp
loop
scas
push
jge
insb
jae
addr16
arpl
imul
adc
add
aas
test
loopne
movsb
fldcw
insb
ja
cmp
or
cvtdq2ps
mov
ss
daa
lret
dec
pop
inc
fdivl
xchg
jge
or
shrb
out
incb
lock
or
pop
mov
ror
out
outsl
pushf
pop
pcmpeqd
push
xor
insl
pop
cli
insl
ret
outsl
insb
jg
cli
outsl
int
scas
pop
ficomps
jo
popf
repnz
lods
sbb
mov
pop
cmp
in
adc
into
inc
push
shrb
cmp
daa
pushf
xchg
mov
shr
movsl
dec
xor
fs
mov
adc
add
iret
dec
pop
scas
pop
lret
dec
subl
mov
nop
mov
pop
inc
jae
add
ret
gs
enter
inc
movsb
popf
mov
push
or
push
xchg
push
or
inc
lods
test
popa
js,pt
push
fsubl
and
pusha
pop
xor
fcomps
shlb
lods
mov
adcl
stos
scas
fisubs
pop
mov
test
pop
jecxz
mov
es
or
or
or
ret
popf
dec
mov
jl
fisubrs
pop
lods
testb
cmp
arpl
movsl
into
push
sub
in
movsb
or
inc
cmp
push
fisubrl
lods
cmpsl
mov
push
pop
fisubrl
mov
fldcw
fsubs
movsl
bound
cmp
nop
sub
gs
pushf
mov
pop
movsb
pop
lcall
mov
xor
and
sub
call
cmp
lahf
pop
fnstsw
inc
inc
mov
push
add
mov
push
adc
pop
xchg
movsb
lret
aam
iret
and
arpl
int
cmp
inc
jb
mov
scas
cmp
in
imul
xchg
outsl
cmp
push
xorl
jmp
sub
ret
pop
jge
fwait
sub
clc
and
mov
or
mov
inc
hlt
sub
mov
pop
in
mov
ja
outsl
or
adc
mov
enter
cmp
pop
arpl
fldcw
mov
loopne
push
test
sub
test
loopne
xor
inc
jecxz
fcmovne
add
dec
dec
inc
mov
loopne
ror
push
int3
lcall
out
xor
test
out
popa
jne
nop
fisubrs
sub
shrl
mov
es
fidivs
dec
xor
lods
pop
jmp
sbb
push
iret
xchg
jne
push
aaa
arpl
cli
fidivrl
ret
nop
imul
iret
stos
cmpsl
cmp
shrl
mov
push
sub
popf
stos
ror
and
in
push
and
ds
cmpsl
sbb
popf
add
jnp
popa
lock
lods
es
fdiv
sbb
cmc
mov
mov
in
mov
int3
daa
idivb
ja
pop
lods
popf
pop
in
scas
xchg
ret
xor
insb
mov
and
sbb
jmp
imul
mov
push
fucomp
mov
pop
or
insb
push
repz
pop
pushf
insb
and
lahf
pop
repz
data16
xchg
sub
sbb
ffree
and
pop
mov
adc
mov
jge,pn
out
in
cmp
mov
repnz
aaa
jmp
pop
push
mov
outsb
jns
jp
or
les
mov
sbb
jl
adc
ror
pop
pop
jg
cs
shl
pop
fst
lcall
inc
les
lods
test
mov
rorl
popf
popf
adc
sbb
sbb
hlt
movsb
push
es
out
sbb
pop
dec
cmc
push
cld
push
insb
lcall
add
xorb
dec
sub
cmp
les
pop
add
cs
mov
outsb
xor
push
gs
mov
movsb
dec
out
outsl
addl
aam
cmpb
xor
pop
or
inc
pop
xchg
or
xor
xchg
movsl
jp
mov
xchg
sbb
lret
fs
push
sti
sbb
movsb
cli
push
mov
scas
ficoml
cmpsl
pop
mov
cwtd
fwait
lock
mov
imul
aas
mov
imul
scas
sbb
sbb
mov
imul
push
imul
mov
add
sub
subl
pop
mov
dec
lret
loope
pop
insl
pop
gs
sti
in
repnz
sub
push
popa
in
lahf
mov
insb
xchg
ja
cmpsl
popa
push
insb
lea
pop
add
lods
jg
sub
enter
pushf
lcall
fsubr
mov
popf
push
imul
mov
mov
movhps
loop
outsb
fwait
add
les
mov
add
call
jne
fdivs
cmp
enter
in
je
or
popa
push
inc
subl
jnp
push
jne
cmp
pushf
pop
in
decl
inc
xor
xchg
repz
cmp
test
pop
sbb
mov
sti
pop
insb
xchg
cmp
mov
in
insl
mov
mov
int
movsl
cs
jno
pop
in
int3
add
push
fwait
repz
scas
lods
aad
outsb
sbb
pop
mov
mov
stos
and
imul
sbb
clc
sub
lret
test
jmp
push
sub
scas
sahf
popf
sub
sub
push
xorb
cmp
mov
adc
in
lahf
in
add
xchg
popf
mov
inc
ds
sbb
mov
dec
xor
push
mov
mov
push
push
inc
iret
xchg
lods
mov
loopne
loope
xor
pop
lock
adc
mov
cmp
ds
inc
jno
lds
sbb
inc
cmp
outsb
rcll
int
fdiv
or
dec
dec
lock
and
ret
sbb
xor
es
or
cltd
pop
pop
imul
cmpb
outsl
pushf
sbb
test
pusha
pop
adc
mov
lods
int3
aaa
out
jmp
stos
frstor
ret
pushf
cmpsb
dec
sbb
fistl
loopne
cs
test
and
out
push
add
and
add
push
push
scas
jb
mov
dec
iret
push
or
sarb
mov
rcr
sarb
inc
js
fs
cmp
loopne
outsl
jge
cmp
mov
aaa
test
sbb
loopne
ja
lods
pusha
mov
dec
and
testb
popf
insl
inc
push
cmp
cmpsl
cmp
test
pop
mov
dec
int
es
xchg
and
mov
cwtl
inc
sbb
mov
xchg
or
negb
dec
movsb
scas
outsb
outsl
xor
add
dec
out
lock
adc
fs
test
sbb
xor
pushf
mov
addr16
inc
pop
add
je
adc
lods
stos
imul
outsb
insl
nop
div
add
jmp
sub
inc
lcall
push
sbb
push
cld
xchg
pop
mov
xor
cmp
inc
mov
mov
aad
xchg
mov
enter
out
pop
xchg
pop
jg
xchg
leave
or
push
push
les
bound
jge
mov
lock
xor
nop
xor
push
shr
push
lods
sbbl
loop
push
jecxz
out
outsl
jno
test
push
push
loope
shrl
jecxz
mov
int3
add
divl
or
faddp
mov
insb
shlb
test
xor
test
popf
push
cmp
push
ja
gs
cmp
fst
jge
sub
fs
sub
insl
mov
sub
dec
xor
fcmovnb
in
cmp
xchg
sbb
cmp
pop
lods
mov
aas
daa
in
xor
add
sub
les
nop
adc
or
mov
gs
push
mov
xor
lea
cs
lods
mov
dec
lods
jmp
or
fidivl
and
mov
ja
lret
loopne
jne
inc
out
sub
addr16
outsb
pushf
arpl
imul
scas
gs
pop
int3
cmp
xor
lahf
mov
vandpd
iret
lahf
les
or
push
mov
sti
dec
lods
leave
out
sub
incl
mov
jbe
enter
sbb
dec
or
ds
adc
and
lahf
cltd
ficoml
out
fisubs
jns
add
cltd
or
xchg
mov
iret
push
dec
in
movsb
mov
idivb
mov
pop
mov
cmp
outsb
jg
sub
insb
rcrb
push
bound
xchg
enter
sbb
leave
and
movsl
lret
sub
or
fs
ja
push
adc
ss
push
xor
and
repz
mov
sahf
pop
mov
in
mov
shl
shrl
xor
lea
add
inc
jecxz
aad
mov
cmp
fmull
gs
ret
and
gs
insb
gs
cmp
dec
inc
fisubs
andb
add
jae
jno
add
test
sti
imul
ja
push
pop
fldl
icebp
push
mov
push
data16
inc
cmpsl
in
push
rcrb
add
rcll
sbb
cmp
repz
movsb
push
loope
in
mov
fdivs
mov
and
or
pop
push
xchg
aad
jg
fcmovbe
inc
adc
orl
iret
sti
push
dec
pop
cs
mov
inc
in
es
das
dec
jae
xchg
push
fldcw
insl
mov
fadds
nop
pop
dec
mov
in
data16
jmp
iret
ds
jmp
in
add
fdivrl
pop
and
adc
jp
mov
cmp
popf
jne
push
insb
xchg
pop
jae
lds
mov
and
xchg
jmp
sbb
stos
jns
mov
test
shl
sub
push
stos
pop
push
xor
popa
push
adc
movsl
test
icebp
adc
cmp
push
icebp
or
in
mov
xchg
cld
dec
addr16
es
scas
imul
stc
dec
push
and
pop
sarb
fsubrl
je
adc
lods
mov
in
shll
sub
xchg
mov
clc
push
adc
pop
push
repz
test
or
sub
inc
mov
notl
xor
pusha
insb
push
ffreep
fwait
jmp
fcoml
lds
daa
lods
ljmp
stos
outsl
sbb
adc
arpl
mov
mov
dec
ljmp
imul
fcmovb
cs
shrb
cld
fstl
sub
push
cmp
fldt
sbb
loop
mov
popa
jnp
addr16
jno
and
xor
adc
popf
and
filds
adc
or
mov
stc
rorl
mov
insl
leave
scas
jbe
insl
in
jg
addl
into
aad
push
pushf
filds
add
jp
mov
adc
test
aaa
dec
sbb
out
or
in
sbb
imul
in
in
ret
int
adc
push
popf
cmp
jae
cmp
iret
aad
lods
mov
in
int3
addr16
dec
jne
mov
mov
pop
mov
pop
xchg
mov
data16
push
inc
das
aaa
push
popf
sub
jb
int
sub
imul
iret
mov
sub
imul
inc
mov
and
roll
loop
and
movsb
dec
lahf
pop
adc
test
sbb
lret
xor
add
cmp
jbe
fsubrl
jns
pop
test
popa
xchg
pop
or
push
adc
fldl
sbbb
filds
insb
mov
mov
xor
fdivrl
inc
cmp
or
dec
or
test
roll
lds
popf
xor
or
xor
xor
in
outsb
daa
and
push
iret
les
es
sahf
ret
scas
sar
fcompl
or
push
mov
mov
adc
mov
jns
pop
sbb
popf
ljmp
sbb
ds
sub
ljmp
xchg
jmp
adc
inc
sbb
xchg
adc
cmp
rcrb
dec
aaa
mov
xor
movsb
push
fnstsw
pop
fdivrp
adc
pop
arpl
popa
ja
insb
and
inc
or
mov
mov
inc
jnp
sbb
fs
inc
out
ja
adc
and
sub
insl
sti
int
iret
pop
xchg
popf
lret
repz
outsl
xor
sub
insb
ja
dec
dec
mov
dec
pop
mov
pop
outsl
scas
enter
xor
pop
test
popa
lret
decb
int
mov
push
fs
loope
pusha
enter
popf
mov
iret
jmp
add
sbb
sub
insb
jnp
cmpsb
jge
or
mov
sbb
addr16
xchg
xchg
jno
popf
and
loopne
push
arpl
int3
push
or
add
daa
pop
les
data16
xchg
and
repnz
lods
ret
pop
int3
std
mov
imul
inc
mov
enter
jmp
sbbl
mov
add
sub
sarb
mov
jns
and
rclb
sbb
sarl
or
push
inc
push
dec
mov
outsl
pushf
push
es
shll
mov
xchg
popf
mov
out
sbb
gs
dec
lret
pushf
inc
int3
xor
sub
imul
fldt
push
pop
fcomps
testb
into
mov
filds
cmp
push
call
test
nop
mov
sbb
mov
pop
out
or
in
jnp
into
cmp
and
sbbb
mov
dec
push
mov
or
pushf
stos
gs
mov
mov
or
push
fs
pop
push
xchg
int3
popa
xor
add
dec
or
outsl
test
fimuls
mov
jge
jo
sbbl
sbb
outsb
movb
lods
movsb
into
fcmovb
dec
out
inc
push
add
out
xchg
sub
aaa
jae
lods
pushf
mov
jmp
push
pop
or
mov
adc
mov
adc
dec
lods
fdivrl
aam
shr
xchg
dec
mov
call
fsubrl
sub
and
xor
out
mov
dec
sbbl
ret
stc
and
test
lahf
cli
push
rol
dec
sub
pop
pop
xor
xor
mov
popf
push
xor
pop
int
lea
imul
fcoml
sbb
in
rep
imul
repnz
test
jo
sti
insb
push
xchg
movsb
mov
pop
aad
push
loop
stos
xor
ljmp
xchg
movsb
add
out
add
push
fimull
lret
xchg
lret
cmp
test
iret
lock
mov
inc
jge
in
mov
movsl
sbb
pop
jg
lods
incl
addl
mov
dec
jge
pop
lods
in
and
or
mov
loop
lods
shlb
push
sub
push
test
imul
xor
sub
popf
es
mov
subl
pop
fwait
lds
cmp
mov
test
mov
repz
xor
ret
mov
add
mov
out
xor
repz
xchg
and
cltd
bound
imul
sbb
inc
loope
test
xchg
sbb
dec
enter
scas
mov
test
mov
pop
dec
adc
cmpsb
call
pop
add
push
sub
push
push
lods
test
xor
out
pop
insb
inc
cmp
in
fisttpll
es
cwtl
pusha
in
lock
loop
push
outsl
push
add
mov
and
sti
mov
clc
dec
mov
xchg
hlt
jnp
add
dec
xchg
mov
push
in
push
out
sahf
sub
iret
sahf
mov
xchg
and
lods
or
outsb
inc
mov
fiadds
or
clc
add
cs
sub
sub
out
hlt
sysenter
pop
lods
mov
inc
or
and
sbb
lahf
mov
fiaddl
rcll
in
sbbl
arpl
mov
or
rolb
add
lret
sub
push
sub
loope
xor
stos
cwtl
xchg
pop
cld
inc
add
ljmp
imul
pop
mov
insl
iret
insb
out
mov
or
insl
jge
xchg
adc
xchg
jnp
into
stos
push
fistps
test
sbb
pushf
mov
pop
pop
xchg
in
mov
mov
movsb
nop
andps
int
cmp
add
push
or
popf
sahf
call
mov
sarl
testb
int3
dec
imul
into
dec
mov
repz
popf
mov
adc
or
push
outsl
arpl
out
mov
or
or
in
cltd
pop
add
shrl
jp
push
adc
leave
arpl
aam
scas
sub
pop
test
cmpsl
mov
pop
lret
out
and
dec
in
rorl
lods
gs
mov
push
cmc
mov
mov
lret
push
cmpsl
fstpl
sbb
pop
adc
fcoms
dec
or
or
stos
xchg
mov
dec
fs
dec
inc
inc
shlb
jnp
mov
inc
sub
xlat
mov
push
sbb
in
test
fbld
orb
dec
shll
xor
xchg
lret
inc
sub
dec
or
fsubrs
adc
test
mov
or
cmp
in
cld
hlt
sbb
cs
mov
dec
outsl
cmp
fadd
dec
stos
les
cmp
mov
mov
mov
negb
mov
pop
outsl
pushf
cld
js
or
jl
testl
fcoml
out
xchg
and
ljmp
push
in
hlt
mov
daa
lock
imul
and
cmp
push
sub
push
pop
add
jne
es
jae
mov
or
dec
popf
xchg
inc
ficompl
inc
in
movsl
xor
les
cmp
mov
lods
call
lods
repz
outsb
jns
sti
aam
icebp
push
jecxz
pop
in
imul
cmp
xor
jle
lcall
sbb
push
pop
aam
hlt
xchg
shlb
repz
cmp
ror
mov
popf
sbb
pop
inc
enter
imulb
pop
and
pop
pop
mov
scas
pop
sbbl
pushf
cs
test
sbb
push
and
not
xchg
int3
pop
dec
fs
jno
mov
xlat
imul
cmp
adc
adcl
mov
nop
fisubs
popa
out
dec
or
mull
pusha
test
out
test
mov
add
cmp
dec
addr16
push
dec
pushf
out
imul
dec
mov
stos
pop
push
inc
wrmsr
fbstp
mov
xchg
imul
pop
lahf
cmp
adc
cs
hlt
inc
sbb
imul
in
ret
dec
fildll
repz
dec
mov
cmp
adc
pusha
xor
xor
arpl
das
test
sbb
fs
mov
sub
mov
xor
adc
cmp
arpl
int
cmp
fdiv
fstp
into
mov
sub
fisttps
dec
jecxz
sub
fcmovne
xorw
sub
dec
xchg
les
dec
jge
push
pop
or
xchg
insb
into
in
negl
jle
lods
in
push
outsb
cmc
inc
insb
or
lods
in
aas
and
pop
xor
sub
adc
test
out
int3
imul
mov
lods
push
push
push
adc
inc
push
jl
adc
push
and
dec
test
enter
mov
jecxz
arpl
push
pop
push
mov
cmp
test
lods
and
cld
sbb
imul
aam
xor
arpl
lods
or
push
dec
mov
push
in
dec
out
pop
imul
jmp
sub
sbb
mov
and
in
xor
xor
and
cmp
xchg
sub
push
adc
mov
ficomps
jecxz
mov
fimuls
and
test
arpl
lods
fdivrp
outsl
dec
cmp
mov
dec
cmpsb
inc
inc
sbb
xor
enter
les
push
dec
or
sub
pop
xor
inc
cld
add
push
arpl
enter
pop
sub
fcmovnu
stos
fadd
in
ret
je
das
fmull
mov
xchg
push
fs
cmp
aad
imul
add
xor
sub
sbb
or
jecxz
dec
aam
or
or
cmp
dec
dec
xor
fmull
adc
in
aas
fs
lods
repz
in
mov
add
sub
fs
das
sub
lods
pop
push
dec
push
cld
sub
sbb
adc
fmulp
imul
ret
imul
dec
and
inc
and
jecxz
xor
push
clc
dec
mov
adc
fisubrl
outsb
movsb
shrb
push
cwtl
and
sub
cmp
push
popf
int
jae
pushf
mov
fistpll
push
ss
dec
adc
cmp
push
dec
pusha
popa
imul
or
jmp
mov
imul
add
jecxz
pop
adc
mov
shlb
mov
outsb
xchg
pushf
shll
jbe
lds
sbb
ja
and
outsl
jge
repz
xchg
jbe
jge
jmp
out
stc
sub
outsl
push
xchg
das
ret
pop
xor
adc
cmp
inc
and
push
and
iret
test
push
outsl
xchg
adc
xor
mov
fstpt
in
lods
xchg
jg
sub
push
repz
inc
popf
loop
xor
in
into
loope
mov
popf
aad
insb
std
pop
loopne
inc
pushf
sub
mov
sub
adc
mov
sbb
insl
push
push
sbbb
xchg
jl
lahf
jmp
and
or
aad
jne
sbb
aas
adc
sub
mov
enter
pop
pop
cmp
scas
pop
mov
cmp
push
push
push
cmp
ja
mov
mov
fisttps
outsl
dec
mov
cmp
fidivrl
mov
fld
lock
pop
push
addl
mov
mov
div
in
ret
fbstp
andb
fbld
xchg
ficoms
sbb
add
cld
and
in
popf
test
sub
jg
adc
sbb
into
scas
pop
mov
mov
lods
push
iret
sub
jg
mov
test
mov
pop
scas
dec
inc
leave
addl
pop
hlt
in
add
mov
seto
fstps
shlb
pop
fisubs
cmp
push
pop
les
int3
idivl
mov
ret
ljmp
lods
les
jg
add
pop
dec
pushf
inc
inc
mov
and
and
loopne
gs
cli
out
je
out
xchg
in
std
push
popa
ljmp
popf
es
push
out
inc
fiadds
adc
sub
les
fdiv
xor
mov
and
ret
dec
add
ljmp
mov
loope
mov
xor
sahf
cwtl
xchg
cmc
push
push
mov
mov
enter
rclb
dec
push
les
icebp
in
insb
insb
mov
ja
ja
pushf
sub
inc
jns
call
or
sbb
cmp
xor
jg
mov
jne
fldl
into
mov
sub
cld
ljmp
out
push
pop
mov
and
mov
arpl
ss
mov
movsb
dec
aam
xchg
mov
fwait
insb
jns
enter
add
int
popf
outsb
cmpsb
pop
lds
aad
mov
cmp
pop
imul
xchg
insl
aam
ds
push
cs
lret
insl
mov
xchg
loopne
cmpsl
jge
pop
add
mov
adc
pop
mov
enter
cld
inc
adc
mov
and
jmp
mov
dec
jns
pop
leave
adc
cmp
test
ror
insb
pop
enter
sbb
xor
rclb
int
jne
xor
fmull
dec
jl
xchg
sub
mov
xchg
out
out
fs
jae,pn
dec
push
sub
repz
iret
sbb
mov
jae
loope
mov
xchg
and
test
mov
in
pop
pop
ret
jae
lds
and
cwtl
xchg
popf
fstps
out
mov
enter
push
fistpll
jecxz
into
jmp
insl
push
push
cmpl
movsb
movsb
xchg
or
inc
in
arpl
and
loop
popf
sbb
jge
inc
push
add
out
sbb
gs
mov
mov
jo
in
out
fsubr
mov
fsubrs
pusha
jnp
pop
rolb
out
cs
mov
js
imul
insb
push
repz
lret
push
pop
outsb
dec
adc
imul
loope
sarb
cmp
adc
data16
ljmp
cltd
lahf
sbb
aaa
fldl
xchg
mov
inc
notb
out
sbb
mov
cs
xchg
cltd
rclb
xchg
int
insl
push
jp
mov
insb
mov
jae
jns
movsb
outsb
xchg
or
mov
inc
imul
imul
pushf
pop
loop
cmpl
jl
stos
xchg
pusha
xchg
inc
pusha
dec
mov
gs
iret
stos
sub
inc
mov
mov
movsl
ror
popa
aad
xchg
ja
jg
das
cwtl
pop
mov
jmp
jge
sub
add
sub
mov
or
or
fs
sub
xor
jne
jne
or
in
sbb
fcompl
out
dec
inc
and
pushf
adc
out
aam
fs
xor
push
pop
mul
jmp
mov
mov
stos
outsl
cltd
les
fnsave
xor
add
imul
inc
fstpl
adc
pop
data16
sub
mov
ret
je
sbb
jne
add
push
pushf
jbe
mov
test
mov
mov
sbb
push
in
insb
in
pop
test
cld
and
push
push
sub
ss
addl
xchg
dec
hlt
jnp
sar
out
add
push
inc
pop
aam
jnp
pop
dec
outsb
jg
sahf
pop
idivb
gs
les
test
sahf
inc
lea
pop
imulb
cmp
inc
lret
loopne
push
jmp
mov
inc
xor
loope
mov
inc
mov
lahf
popa
inc
in
or
fisttps
mov
sti
loope
loope
inc
lea
pop
pop
in
int
test
lcall
insl
aam
mov
inc
adc
mov
jge
std
dec
test
push
subb
leave
xlat
mov
push
test
cmc
lret
negb
or
mov
sahf
or
jle
scas
mov
cmp
lret
mov
fucomip
adc
aad
jp
aaa
jge
mov
outsb
lods
movsb
je
xor
add
insl
cld
ss
fucomp
into
gs
repz
lods
int
insb
test
cmpl
adc
cmc
in
pop
hlt
ljmp
inc
pushf
mov
data16
leave
mov
adc
mov
push
shrl
or
dec
leave
imul
clc
add
addr16
stos
and
adc
mov
arpl
or
pop
fs
outsl
mov
push
out
cmp
roll
les
hlt
dec
ljmp
and
idivl
sub
popf
pop
test
xor
jns
cmp
adc
mov
cmp
xchg
and
adc
pop
push
dec
mov
ja
sbb
into
jbe
out
pop
lds
pop
push
jne
fcoms
inc
je
jge
jle
mov
jecxz
movsl
xchg
into
shlb
mov
popf
jb
out
pop
pushf
jne
add
imul
adc
cmc
cmp
sbb
pushf
mov
mov
mov
add
xor
in
dec
addr16
out
cmpsl
in
out
add
repz
add
push
in
add
in
fnsave
shl
dec
ficomps
add
sub
clc
sub
xor
aam
arpl
mov
mov
out
sub
lcall
inc
adc
pop
mov
out
dec
or
jb
mov
cmp
jge
jo
push
pushf
dec
push
sti
es
pop
or
cmpsl
into
repnz
mov
ja
dec
add
adc
add
inc
xor
repz
ret
mov
imul
lret
inc
out
out
int
sbb
lcall
cmpsb
xor
into
cmp
fstpt
notb
xchg
jle
jge
jmp
mov
bound
sbb
xchg
push
adc
push
jnp
jp
mov
sub
outsb
js
pushf
push
mov
dec
aaa
sahf
xor
push
adc
popf
adc
jle
sub
cld
sub
mov
inc
insb
inc
stos
int3
push
rclb
gs
bound
out
jl
ror
jno
sbb
cmp
movsb
into
daa
int3
cmpsl
push
jnp
cmpsl
mov
cmp
jecxz
mov
and
mov
scas
push
out
in
cli
aad
cld
dec
data16
gs
and
or
rorl
push
inc
cmp
cli
pop
jns
adc
es
mov
fs
jl
jecxz
mov
out
pop
inc
cltd
aaa
and
ja
cmpsb
bnd
add
sub
jecxz
fldcw
sbb
stos
addr16
xor
dec
mov
jne
dec
ret
inc
inc
nopw
popf
xchg
mov
push
mov
inc
cmp
ljmp
sub
inc
sbb
inc
rcr
mov
enter
std
stc
or
and
outsl
in
cli
adc
aas
pop
arpl
jno
dec
iret
or
mov
ljmp
mov
popf
in
mov
pop
jmp
add
add
popf
mov
xor
les
iret
dec
jnp
leave
sub
mov
in
dec
or
sbb
push
loopne
add
pop
inc
xchg
cmp
mov
mov
sbb
popf
int3
mov
pop
or
mov
dec
inc
aad
push
outsb
fdivs
mov
arpl
ds
push
test
stos
pop
pop
aas
jecxz
bound
sub
sti
ljmp
or
cmpsl
sub
or
loope
sti
xchg
insl
jg
mov
inc
cli
push
outsb
pushf
fnstenv
jp
out
sbb
lds
sti
mov
adc
mov
lods
ss
aaa
test
pop
dec
jmp
rcr
inc
push
mov
daa
cmp
or
inc
mov
xor
sub
pop
sbb
push
xor
adc
insl
pop
jecxz
inc
or
mov
push
call
and
out
insl
imul
mov
rol
push
insb
aaa
pushf
test
sarb
push
cmp
insl
jp
paddusb
push
movsl
xor
pop
pop
hlt
fnsave
jg
out
notb
cwtl
xchg
and
nop
sti
pop
sub
inc
xor
test
ja
inc
sub
repz
jne
mov
sbb
pop
sub
cmp
xor
push
cmc
xlat
repnz
addr16
pusha
nop
repz
xchg
ror
movsl
xor
std
pop
jg
loopne
je
lcall
push
sbb
dec
imul
lret
frstpm(287
mov
sub
xchg
repz
sbb
mov
mov
popf
lahf
std
pop
push
fldenv
pop
popa
mov
or
lea
mov
dec
jge
popa
inc
repz
sub
and
push
pop
rcrb
dec
and
xchg
nop
mov
push
dec
add
fcmove
jns
test
mov
sbb
inc
leave
xchg
pop
in
and
scas
or
dec
lods
cmp
call
subl
dec
sbb
fiadds
mov
es
and
xchg
pop
in
fadd
jb
push
scas
xlat
jge
scas
sbb
jns
outsb
pushf
cmp
out
mov
cmp
sbb
fdivl
enter
fdiv
data16
push
ret
int3
fs
mov
cmp
mov
dec
jno
hlt
outsl
imul
out
inc
sub
or
mov
arpl
addl
addb
pushf
fucom
and
push
push
arpl
out
push
in
dec
jle
dec
imul
jge
sub
push
inc
dec
fimull
inc
repz
push
add
insl
stos
mov
jne
mov
outsb
jbe
mov
mov
ds
sahf
test
cltd
fstpl
mov
xchg
sbb
in
inc
stos
sbb
mov
mov
lea
add
jmp
frstor
cmpsb
bound
or
jmp
pushf
and
push
add
mov
stos
imul
mov
jnp
cli
outsb
into
pop
adc
cmp
dec
dec
jle
jp
stc
mov
ret
xchg
mov
jb
sub
test
gs
lods
jns
pop
lds
jo
or
xor
jmp
mov
pop
jmp
push
xor
pop
pushf
pop
pop
enter
sahf
sbb
test
enter
mov
pop
je
iret
test
mov
cmpl
adc
hlt
inc
pushf
and
lea
scas
fdivl
iret
mov
push
pop
pop
adc
stc
dec
cmpsl
and
in
sahf
sahf
out
sbb
mov
scas
pop
cmp
sarb
outsl
mov
jns
pop
std
pop
inc
lds
out
lea
in
cld
sar
addr16
inc
jns
mov
or
out
jg
inc
xorl
lahf
dec
adc
in
outsl
iret
cmp
and
lods
pop
cltd
dec
push
popf
lahf
es
jns
xor
mov
push
ficoms
movsl
sti
sub
int3
out
ret
xchg
imul
push
in
and
clc
and
push
pop
push
dec
enter
es
mov
ret
mov
fildll
push
xchg
popf
and
movsb
int3
outsl
lods
pushf
pusha
cmp
sbb
enter
jno
dec
xor
mov
lods
mov
ficoms
fsts
jb
stos
mov
sbb
mov
add
jnp
sub
push
push
iret
sub
mov
add
imul
popf
inc
adc
aad
stos
xor
mov
ss
movsl
lret
mov
or
jae
adc
mov
cld
fidivs
and
or
dec
and
dec
ja
outsl
fisubrs
jecxz
mov
pop
repnz
inc
xchg
fbld
popf
fmuls
out
popa
pop
xchg
or
bound
leave
adc
cld
xor
or
jns
sub
inc
lock
in
repz
xor
sbbl
and
dec
jnp
add
inc
insb
insl
cli
mov
das
mov
push
rclb
ret
pushf
push
std
adc
rorb
test
cmc
mov
push
aam
aaa
int3
xchg
test
cli
sti
jbe
push
fsubrl
sbb
sbb
xchg
movsl
fsubrs
xor
cs
inc
outsb
enter
mov
mov
inc
enter
push
xlat
mov
loop
icebp
pop
push
lea
inc
enter
insl
mov
jecxz
clc
cmp
lcall
dec
mov
dec
lcall
or
fldcw
outsb
pushf
inc
dec
sub
pop
mov
jmp
int
fs
cmpsl
cld
imul
pop
push
scas
sub
sbb
sbb
ljmpw
test
xchg
pop
shl
fmull
rcrl
outsl
jg
push
sti
loope
icebp
cmp
mov
pop
insb
xchg
icebp
test
xor
pop
cmp
lods
sub
mov
insb
sarb
pushf
or
pinsrw
test
dec
xor
dec
dec
pop
out
push
sahf
roll
es
jle
jb
dec
jo
pop
sbb
pushf
out
push
rcl
lret
jns
negl
cli
mov
fsubl
int
sarb
dec
inc
xchg
pop
mov
cmpsb
into
mov
out
add
shll
repz
jmp
push
movsb
repz
adc
inc
sbbl
or
sub
popf
sbb
gs
push
pop
xchg
and
paddusb
jnp
ficoml
inc
and
test
popf
enter
jle
in
shlb
inc
inc
mov
jecxz
dec
mov
out
sbbb
icebp
fmuls
push
leave
pop
cmpsb
push
jns
mov
js
add
add
cmp
in
lods
mov
jmp
mov
push
jge
inc
scas
and
popf
and
cltd
pop
mov
push
pop
xchg
and
gs
push
pop
lods
xor
jmp
enter
into
push
push
sub
sti
std
frstor
mov
cmp
or
pop
movsb
xchg
loopne
fistpl
lret
mov
test
sbb
outsb
push
js
mov
jns
xchg
push
arpl
das
insl
jmp
imul
xor
aad
inc
in
lods
add
xchg
push
xor
imul
inc
cmp
cvttps2pi
xchg
fmuls
ret
inc
ds
fcomip
scas
add
filds
push
mov
call
enter
sub
divb
in
int
sub
arpl
stos
jg
mov
fsubl
in
adc
rcrb
ds
or
fwait
mov
cmp
orl
sbb
fsubl
stos
pop
arpl
adc
pushf
in
or
xor
mov
insb
push
jle
imul
jmp
enter
pushf
xchg
sti
loope
lahf
lret
jecxz
sub
fs
insb
imul
add
dec
adc
pushf
cmp
insl
je
and
jl
and
ds
mov
cmpsl
icebp
sbb
and
std
out
fdiv
cs
sbb
mov
call
call
pop
push
pop
and
adc
dec
test
hlt
int3
and
cmp
gs
inc
sub
mov
dec
xor
and
inc
sbb
aas
sub
int3
call
loopne
pushf
jl
fsub
enter
xor
push
jecxz
cld
xor
dec
jmp
push
addl
aam
xchg
dec
iret
push
in
imull
or
call
push
add
in
or
cmove
mov
filds
rorl
push
fcmovnb
fmul
sub
inc
sub
xor
and
sbb
out
hlt
and
dec
mov
fsubr
pop
fsubl
or
and
cmpsb
dec
add
cmp
dec
int3
sub
dec
jecxz
dec
dec
dec
dec
dec
in
dec
aas
ret
or
jns
xor
lcall
push
xlat
mov
or
fdivs
test
pop
ja
addr16
sub
push
je
inc
mov
lret
or
cmp
pop
lods
pop
mov
push
push
xor
pop
mov
ljmp
test
adc
movsl
xlat
cltd
push
or
add
pop
dec
test
lock
popf
jle
inc
xchg
xor
rolb
jmp
add
repz
adc
pop
adc
stos
pop
movsl
out
popf
pop
push
cli
ret
in
data16
repz
ror
jg
sahf
pop
jmp
dec
jno
or
movlps
stos
push
sub
leave
ret
repz
subl
loopne
lods
push
jecxz
lea
mov
adcl
dec
fldl
lods
jge
add
and
mov
ficomps
ret
pop
sbb
sar
call
int3
popf
mov
in
dec
or
ret
sbb
and
and
mov
outsb
sbb
pop
mov
fmul
movsl
xchg
sbb
or
pop
fstps
popf
repnz
fsub
inc
adc
jg
out
mov
push
sbb
clc
sbbl
xchg
mov
insb
jno
mov
or
sbb
imul
sub
ror
dec
xor
outsl
pushf
mov
xchg
mov
ds
arpl
xlat
pop
xor
movsb
cmp
popf
pop
mov
or
jae
push
loope
pop
lods
test
in
push
in
scas
jb
aam
pop
es
pop
in
cmc
mov
inc
jbe
push
inc
jge
out
fwait
jno
lods
roll
pop
test
pushf
sub
lds
or
add
mov
jmp
sbb
out
pop
inc
jl
out
jp
sub
jnp
sahf
push
ss
fs
xchg
push
xor
mov
out
ret
push
cld
mov
lahf
or
mov
in
pop
pusha
bound
arpl
pop
pusha
push
cwtl
in
mov
or
fwait
daa
std
test
in
popf
fadd
jge
dec
movsb
mov
scas
push
and
cmc
inc
jae
mov
lods
xor
add
push
es
adc
cmp
inc
sbbl
pop
push
mov
inc
test
ja
mov
cmp
sbb
gs
dec
je
mov
loope
mov
jg
xchg
add
not
lods
or
scas
jmp
pushf
ja
push
inc
sbb
dec
adc
iret
adcl
mov
lods
pushf
xchg
test
mov
xlat
sub
jmp
push
mov
dec
shll
hlt
repnz
sub
sub
or
dec
mov
and
xor
fwait
and
lods
pop
adc
or
pop
mov
dec
lcall
addr16
push
sub
das
ficompl
pop
push
mov
jg
pop
sbb
xor
dec
mov
and
ret
test
ja
push
cld
mov
xor
or
push
xor
xor
lods
lret
pop
adc
sbb
mov
aaa
adc
addl
les
jae
jge
in
pushf
cmp
mov
fs
adc
in
arpl
push
dec
popf
pop
lds
jb
adc
cmc
xlat
out
push
xor
fsubs
ret
add
jecxz
pushf
xchg
pop
cmp
pop
mov
outsb
xor
repz
jg
push
subb
mov
jecxz
xchg
movsb
jle
or
xor
outsl
jo
addr16
mov
ja
dec
in
xchg
xlat
adc
call
fisttpll
sub
push
lds
mov
in
sub
cmp
popf
aaa
jmp
les
cmp
clc
aam
repnz
es
lods
jne
or
jge
imul
pop
xor
testl
push
mov
fbld
outsl
pop
adc
gs
mov
mov
xor
pushf
shl
es
jp
pop
rcrl
imul
outsb
pop
ja
xchg
lret
xchg
enter
arpl
into
xchg
push
mov
inc
mov
or
add
sbb
or
add
iret
dec
inc
or
aam
sub
mov
in
popf
ret
es
sub
and
jbe
jnp
sub
inc
idivb
add
sub
pusha
in
mov
cld
dec
rclb
lcall
lods
add
mov
adcb
bound
imul
add
lods
icebp
rcl
pop
fldl
call
test
dec
shrl
je
insl
lods
push
repz
push
in
jns
pop
inc
mov
pop
iret
adc
popf
fbld
movb
or
rcrl
adc
xor
bound
sub
lret
cmpsl
dec
dec
push
out
out
add
and
mov
sub
lds
xchg
sti
repnz
and
mov
lods
outsb
xchg
inc
mov
add
lahf
mov
imul
push
inc
int
push
lods
adc
adc
iret
sbb
lds
outsl
inc
sub
es
scas
jmp
jle
inc
in
call
stos
imul
or
jp
arpl
daa
test
mov
fdivp
pop
jge
pop
sub
dec
jne
xorb
dec
inc
imul
sbb
cmp
arpl
cld
lods
adc
lahf
icebp
push
xchg
test
push
movsl
sub
sbb
inc
pop
gs
fnstcw
jae
pushf
es
loop
inc
lret
imul
push
call
idivb
lret
sub
ss
jmp
and
fcmove
push
cld
sub
bswap
fst
inc
insl
add
insb
sarb
mov
mov
loop
insl
cmp
mov
fcoml
hlt
mov
adc
push
arpl
mov
popf
mov
push
xlat
bound
negl
stos
inc
sub
pushf
add
sbb
cmp
jnp
out
lcall
and
flds
pop
stc
gs
roll
popa
pushf
or
popa
lcall
test
cmp
movb
popf
xchg
movsl
std
xor
adc
adc
icebp
push
xchg
outsb
jmp
mov
dec
xor
mov
int3
jge
push
mov
lret
mov
jnp
test
sub
jns
ret
js
gs
aad
mov
imul
fs
cmpsb
imul
and
shll
bound
jns
add
xor
fsubr
inc
test
psrlw
nop
cmp
in
ss
jge
and
dec
jns
shll
push
fs
subl
push
push
fs
sbb
and
dec
test
push
popf
mov
mov
pop
pop
aad
out
sarl
jp
movsl
dec
jmp
dec
pushl
pop
cmp
cmp
mov
or
pushf
pop
sub
cmp
subl
jecxz
jne
out
jge
xchg
jmp
mov
popf
js
dec
lods
imul
fsubs
test
adc
aad
repnz
outsl
bound
rcrb
push
pcmpeqd
fidivrl
mov
jge
and
jge
clc
lods
pop
insb
jg
lret
ror
imul
jns
adc
adc
lcall
int3
scas
push
mov
push
jmp
add
scas
popf
pop
ffreep
mov
push
insl
fstpl
and
mov
mov
xchg
lret
jne
add
int
out
inc
repnz
bnd
cmpb
lods
js
iret
std
fs
lahf
movsb
cmp
je
or
mov
dec
es
cltd
ret
fcomps
rcrl
stos
adc
ret
mov
div
rorb
push
mov
jl
stc
icebp
cmp
hlt
ret
clc
push
or
inc
jle
rolb
mov
pop
or
add
mov
inc
pushf
lcall
testb
and
test
loopne
inc
sti
and
jmp
dec
out
mov
cs
jp
pop
jle
mov
sbb
xlat
shrb
pop
arpl
jecxz
mov
es
aaa
sbb
dec
scas
xor
and
dec
or
push
cmp
sub
mov
mov
rcrl
mov
stos
pop
popf
sub
fucom
adc
push
adc
mov
or
xor
aad
jecxz
mov
data16
das
push
ret
sahf
push
inc
jecxz
xchg
adc
pop
jle
xor
fs
ret
in
cmp
test
cltd
sahf
cmp
stos
test
sub
pop
lcall
insl
pop
inc
pop
clc
jb
mov
push
ret
aam
xchg
popa
inc
mov
xor
cmp
sub
les
mov
arpl
pop
sub
into
stos
mov
xor
fmuls
mov
iret
ja
cwtl
shrl
cmp
inc
jns
dec
hlt
jb
lock
xor
adc
fs
ja
xchg
sub
popf
cmp
dec
pop
or
repz
minps
mov
insl
subl
cwtl
dec
xchg
dec
int3
sub
mov
bound
push
mov
data16
mov
sbb
and
mov
mov
mov
cmc
xor
add
or
lods
sti
push
dec
icebp
add
or
mov
movb
repnz
adc
xchg
inc
mov
lea
mov
cmp
les
pop
iret
adc
dec
pushf
inc
dec
push
or
pushf
pop
push
push
divl
repnz
mov
adc
addb
mov
dec
imul
subl
xchg
inc
in
sbb
mov
imul
inc
pushf
call
mov
cmpsb
and
mov
ds
es
cwtl
popl
data16
addr16
push
stos
fcmove
xlat
mov
pushf
mov
mov
shll
out
inc
aad
or
test
dec
loope
mov
mov
mov
popa
pop
jo
push
mov
inc
mov
js
stos
sarl
ljmp
push
mov
dec
iret
jg
subb
xchg
add
out
call
loopne
and
pop
push
insb
shlb
rorl
pop
cmp
dec
insl
mov
arpl
push
leave
xor
lods
das
adc
mov
push
in
enter
jmp
in
jmp
int
jmp
mov
lds
mov
cmp
mov
out
scas
fstl
mull
sub
popf
lock
fwait
test
mov
inc
dec
pop
push
icebp
fldenv
repz
pop
test
xor
leave
mov
and
mov
ret
xchg
fcoml
es
test
ljmp
out
mov
insl
std
mov
and
dec
push
dec
gs
and
fucom
outsl
sub
in
jge
mov
arpl
push
roll
mov
stos
cs
jp
mov
shll
add
mov
fcmovnbe
add
cmp
shlb
out
xchg
leave
xchg
movsb
mov
add
lods
lret
sub
cmp
inc
jae
lods
insb
jns
test
mov
add
add
fwait
dec
outsb
sub
pop
mov
adc
sbb
mov
aas
sub
test
dec
or
and
std
outsl
pushf
mov
je
cmp
jb
shrl
sub
lea
hlt
cmp
aad
into
xchg
xor
mov
dec
mov
push
jns
and
sbb
jmp
into
dec
add
push
icebp
inc
and
pop
fsubl
stos
in
dec
pushf
mov
jmp
mov
in
and
xchg
pop
leave
pop
ss
push
push
push
mov
or
int3
rcrl
jp
adcl
push
int
dec
out
into
mov
mov
lods
shll
idivb
adc
pop
cmpsb
jns
jecxz
xchg
cmp
push
pop
push
sub
ret
and
mov
dec
imul
les
mov
jnp
enter
mov
mov
jmp
mov
add
pop
sbb
xor
xchg
mov
xlat
idivl
xchg
test
enter
xor
sub
pop
fcmovb
insb
arpl
stos
ljmp
ret
dec
inc
jge
rcrb
je
mov
pop
addb
dec
push
xor
inc
pop
push
add
jns
push
pop
loopne
xchg
inc
mov
mov
push
mov
cmpsl
test
iret
or
scas
divl
sub
jne
hlt
push
jo
cmc
dec
or
fiadds
lret
fs
sbb
xlat
lods
mov
dec
pushf
jnp
dec
fwait
rorb
pop
je
fdiv
js
pop
sub
mov
dec
sub
sub
out
add
pop
sbb
push
dec
outsb
add
push
sub
mov
test
es
lret
andl
fcomps
and
push
cmp
sahf
test
loop
sub
mov
iret
push
mov
push
and
call
fimuls
mov
jbe
dec
pop
in
arpl
imul
xchg
inc
jge
cltd
mov
pop
sbb
cvtps2pd
sti
int3
adc
pop
mov
jae
or
mov
adc
fstpl
cli
aam
dec
stos
mov
jns
push
inc
pop
call
xor
xor
push
je
cmp
shlb
loopne
fcompl
xor
or
cmpsb
dec
iret
outsl
jne
gs
and
and
cs
jne
ja
popf
push
ud0
xor
enter
jae
dec
addb
xchg
and
mov
dec
dec
mov
in
push
dec
inc
enter
and
mov
outsb
shll
psrad
mov
pop
jmp
cli
pop
sub
adc
jge
dec
jb
dec
xor
test
inc
mov
jecxz
jge
cmp
add
cli
or
or
insl
sbbl
add
push
xorl
jnp
stos
lds
cmc
jmp
pop
mov
lret
ja
aaa
addb
jne
aad
jne
call
lret
mov
push
mov
popf
scas
addr16
repz
stc
fildl
xor
inc
jg
mov
push
aad
popa
loopne
pop
mov
sub
or
jnp
aam
mov
xor
push
addr16
mov
xchg
add
xor
cltd
push
out
xchg
or
mov
andb
stos
xchg
xchg
jo
clc
adc
dec
icebp
mov
fidivs
adc
sahf
or
lods
icebp
pop
rolb
and
imul
icebp
fidivrs
or
mov
inc
iret
cmp
lcall
xchg
mov
popf
cli
inc
inc
iret
shl
lcall
jmp
sbbb
aam
push
leave
mov
xor
inc
or
adc
cmpsb
cli
unpcklps
test
inc
adc
jnp
push
enter
scas
inc
jb
pop
cli
cmp
push
push
sahf
inc
adc
lock
pop
xchg
movsl
add
aad
pop
fs
pop
inc
repz
aam
push
and
jmp
mov
adc
enter
sbb
xchg
addb
add
and
loopne
pop
or
sub
mov
ret
xor
xor
test
pushf
inc
or
xchg
lret
add
enter
shlb
cmp
adc
in
movsb
xchg
and
icebp
inc
and
sti
fcmovne
lea
dec
mov
push
sbb
outsl
inc
push
pop
sub
fisubrl
dec
popf
cmp
xchg
inc
popf
inc
jo
jle
out
cmp
clc
xchg
insl
repz
test
cmp
mov
mov
adc
and
inc
mov
lahf
push
pop
popa
dec
or
shll
mov
push
or
mov
out
sub
insb
ja
out
ret
inc
xchg
xchg
push
fstpt
dec
pushf
pop
sub
rcll
cmp
mov
mov
lret
dec
bound
sub
mov
xor
sub
fcmovbe
or
fdivrl
push
test
movzwl
adc
pop
jae
lret
push
jo
pop
mov
sbb
sub
inc
or
cmc
push
test
inc
push
dec
xchg
inc
mov
jge
ret
xor
add
add
adc
fadds
pop
pushf
push
mov
fwait
add
loope
les
icebp
mov
mov
or
les
adc
mov
fwait
pushf
insl
and
mov
push
in
ja
dec
int
pop
icebp
arpl
mov
cmp
xlat
adc
and
sbb
push
push
or
pop
ss
jmp
mov
movsl
or
cmp
push
mov
shrl
jbe
add
arpl
lods
int3
in
in
jae
jmp
in
sub
outsl
lds
jmp
xchg
leave
push
lods
jp
insl
and
jno
sub
icebp
mov
test
sar
fsubr
jecxz
mov
popf
shll
pop
stc
sbb
adc
cs
and
dec
lret
or
xor
iret
test
mov
in
lret
mov
jmp
cmp
leave
adc
subl
cmp
shlb
push
inc
mov
das
and
int3
pushf
cld
test
in
pusha
addr16
mov
aam
jo
push
xlat
mov
add
mov
pop
sbb
xchg
inc
add
dec
int3
popa
cmp
fidivl
mov
xchg
imul
outsl
pushf
and
insb
mov
and
dec
or
mov
push
in
xchg
out
out
push
adc
les
inc
mov
shr
pushf
psrad
repz
out
adc
call
cmp
dec
jge
mov
in
mov
and
cmc
popf
hlt
inc
push
inc
into
add
negb
cmpl
sbbl
idiv
out
leave
push
pop
ss
and
jo
dec
jmp
sbb
adc
mov
je
fwait
pop
mov
sbb
out
arpl
adc
enter
mov
iret
xor
pop
mov
sahf
pop
cmpsb
pop
inc
mov
stos
dec
jb
clc
pop
fisubl
cltd
rcr
fnstcw
pop
mov
lods
xchg
inc
or
insb
lods
sbb
andl
es
inc
sub
fcompl
jge
and
popf
es
cltd
mov
jge
fisubrl
mov
push
test
loope
std
jnp
dec
lret
pop
in
out
adc
aad
mov
sbb
sbb
por
std
test
adc
mov
pop
push
push
pop
mov
loope
insb
test
pop
jmp
pop
popa
cmp
mov
test
push
pop
sarl
popf
pop
into
sahf
sbb
mov
incl
and
icebp
or
mov
bound
mov
std
mov
xchg
and
xor
push
jb
in
jno
mov
adcl
mov
pop
stos
imul
push
pop
aad
push
lock
dec
int3
mov
fidivs
fidivrl
popl
cli
xor
std
sti
jno
lret
inc
dec
cmpsl
arpl
pop
and
in
adc
faddl
stos
pusha
cmp
mov
int3
push
xor
cmpsb
cmpsb
imul
sar
add
lret
pop
dec
sarl
cli
pusha
in
and
mov
sbb
loope
loope
lds
jl
adc
jge
iret
mov
sbb
and
aad
mov
movsl
cmpsb
test
pop
adc
sbb
fs
lds
xor
insl
sahf
mov
sub
movl
sar
enter
gs
fs
or
les
cmc
sbb
inc
pop
inc
jg
cmp
pop
test
pop
andb
sbb
sub
jae
scas
dec
and
sbb
cs
push
sub
lret
jne
adc
jnp
data16
jg
sbb
cli
sbb
xlat
out
dec
push
sar
pop
fnstcw
sbbb
andb
mov
sar
int
pop
loop
aas
dec
jb
ret
jmp
inc
test
jle
xchg
xor
or
out
imul
cmc
out
daa
lods
sub
shl
pop
sbb
fwait
ret
out
rcrl
jp
push
dec
sahf
test
add
pop
xchg
push
dec
xchg
pushf
pop
leave
shll
shl
xor
out
mov
xchg
filds
notl
and
lock
out
xchg
arpl
jo
jle
dec
xor
ret
sub
test
sbbb
out
int
clc
inc
pop
pop
jno
jge
mov
int3
xor
les
xor
insl
pushf
stc
imul
adc
jle
cmp
mov
jecxz
sub
in
fs
push
mov
test
lahf
loopne
add
les
push
inc
adc
sub
pop
mov
mov
sbb
bt
pop
push
pop
pop
loopne
xchg
iret
and
iret
ss
inc
repz
adc
adc
sub
cwtl
addr16
jmp
sbb
arpl
dec
add
dec
arpl
inc
pop
decl
fldcw
imul
fidivs
cmp
ss
cmc
or
ret
dec
test
or
mov
cmp
or
lock
mov
lea
in
dec
adc
dec
in
fists
in
mov
fst
std
xor
push
test
dec
sub
lods
jnp
jge
sbb
fwait
dec
push
or
jecxz
fsubr
jecxz
arpl
adc
call
cmp
stos
aas
orl
sbb
and
enter
repz
xor
arpl
mov
sti
fs
in
inc
push
jge
or
stos
dec
jecxz
sub
scas
dec
xchg
mull
sbb
addr16
pop
xchg
adc
xchg
gs
arpl
arpl
xchg
mov
fcoml
sub
pop
sarl
push
jecxz
sub
adc
insb
mov
sub
pushf
fisubrs
cmp
push
outsb
push
insb
addr16
and
cmp
sbb
jecxz
loopne
push
mov
dec
mov
fs
mov
repz
mov
orl
fwait
into
add
inc
insl
in
xlat
iret
or
push
in
sub
cmp
fs
pop
sbb
sub
pop
mov
les
inc
sub
in
cs
add
and
dec
xchg
add
cmpsb
orl
insb
call
fs
in
cwtl
arpl
sbb
sbb
pop
and
and
fdivrl
insb
inc
fdiv
enter
jecxz
enter
pop
or
dec
mov
frstor
jae
fmulp
sub
arpl
loopne
mov
add
jecxz
les
arpl
in
mov
sub
pushf
pop
in
sbb
inc
pop
push
pop
in
cmp
outsb
pop
xchg
dec
adc
hlt
mov
pop
repnz
adc
out
and
jge
icebp
pushf
jp
xchg
adc
sub
std
sbb
fisttps
push
out
outsl
test
loop
paddusw
fdivrp
sti
sbb
pop
inc
pushf
andb
or
das
mov
hlt
inc
push
push
dec
pop
xchg
add
in
sarl
scas
loopne
push
stos
add
and
movsb
pop
mov
out
sub
movsl
fidivs
mov
cmp
lahf
mov
test
mov
iret
rolb
mov
test
xchg
sub
mov
mov
sbb
xchg
outsl
outsb
aaa
popf
fwait
andb
xchg
pop
lods
add
cs
sbb
mov
orl
fidivrl
or
es
xchg
das
lahf
xor
mov
adc
pusha
jno
jns
insb
fbld
sbb
scas
and
fs
mov
mov
nop
sbb
cmpsl
and
push
rol
shll
hlt
popf
cmp
stc
dec
mov
mov
lods
imul
mov
popa
clc
and
popf
les
pop
ret
dec
mov
test
popf
jge
sbb
loop
lock
adc
loopne
in
push
push
test
lea
in
xlat
outsl
popf
mov
push
loopne
jle
aam
mov
rorl
jno
std
mov
cmp
jl
push
and
jg
inc
lds
dec
mov
fwait
das
and
imul
or
stos
jbe
xor
jbe
xor
adc
stos
dec
jp
jb
mov
sbb
int3
sti
mov
fwait
mov
daa
jae
jne
adc
cs
popf
je
enter
sub
push
popl
mov
fstpl
xorb
xor
pop
jl
push
mov
les
ja
mov
sbb
stos
gs
add
pop
enter
scas
outsl
jns
sbb
dec
test
leave
pop
gs
cmp
pop
mov
dec
outsl
xchg
arpl
je
sbb
lock
out
repz
inc
hlt
in
mov
ds
xchg
mov
jne
pusha
mov
push
xchg
mov
insb
pop
sahf
movsb
sub
fwait
xchg
or
dec
loope
out
imul
jg
iret
scas
gs
push
fsubrs
dec
sti
fucomip
arpl
outsb
lea
inc
popl
imul
outsl
daa
shlb
xor
popf
adc
push
pop
arpl
mov
mov
pop
sub
inc
ss
test
call
je
call
imul
call
lea
mov
or
fdivp
jmp
adc
jmp
aad
pop
shr
mov
lods
ficoms
inc
daa
inc
cmpsl
push
cltd
fcoml
das
hlt
mov
mov
push
sbb
movswl
xchg
decb
pop
outsb
and
mov
es
sarl
ds
out
jl
push
ja
lds
call
sbb
xlat
mov
int
idivl
adc
jnp
jmp
add
sti
clc
fstl
xor
sbb
jbe
insb
pop
outsl
ret
mov
mov
xchg
loopne
xchg
pop
dec
sub
ljmp
mov
popa
sub
jmp
insl
int
xor
and
mov
and
pop
icebp
adc
xor
in
enter
push
add
cli
pop
pop
jne
push
jns
add
add
add
sti
shlb
popf
xor
pop
cmpsb
pop
movsb
pop
sbb
cmp
sub
jge
inc
mov
jbe
cltd
push
jl
jo
cwtl
sub
gs
es
xlat
jge
stos
xorl
sub
jge
sahf
imul
push
cmovp
sub
aas
pop
arpl
lods
bound
js
test
icebp
mov
stos
ret
insb
hlt
loop
inc
lea
dec
dec
lods
stos
clc
stos
dec
adc
add
imul
imul
sbb
les
bound
pop
rorb
lock
sbb
subb
fidivrs
into
js
inc
jecxz
in
mov
pop
xchg
in
sub
jae
int
pop
cltd
fmul
out
pop
xchg
enter
adc
hlt
test
pop
fyl2xp1
adc
jne
sti
dec
je
insb
sbb
bound
repz
push
out
repnz
cwtl
iret
mov
xchg
psubb
int
roll
cmpsl
jge
xchg
jnp
inc
mov
cmp
adcl
push
fistl
pop
inc
lea
sub
push
addl
add
test
jge
pop
outsl
dec
jge
push
in
dec
in
data16
mov
lcall
maxps
out
cmc
out
dec
sub
inc
gs
ret
arpl
iret
mov
mov
enter
sbb
call
or
sbb
fucomip
mov
mov
cld
jbe
nop
gs
push
mov
mov
gs
cmpsb
dec
push
pop
jns
mov
sub
jmp
loope
lea
mov
les
add
insl
and
pusha
into
nop
in
imul
sbb
mov
adc
gs
sub
sar
lods
add
or
dec
loope
inc
iret
mov
clc
frstor
outsl
xchg
push
fildl
repz
mov
mov
out
xchg
add
mov
ret
outsb
js
push
sub
cmc
xor
out
add
sub
movsl
sbbb
xchg
xor
mov
lods
jns
push
sbb
xor
insb
lahf
add
fs
push
leave
mov
std
cmp
les
fwait
dec
test
cmpsl
outsb
xchg
sbb
shrl
stos
outsl
push
jmp
sub
jne
daa
jmp
mov
xchg
idivl
add
jns
jne
jmp
adc
fdivrs
dec
imul
and
pop
je
jl
cmc
test
mov
dec
into
xor
pushf
rclb
xchg
jle
daa
loop
pop
icebp
push
mov
and
or
add
xchg
popf
inc
movsl
ja
movsl
lret
pushf
or
or
dec
in
jb
pushf
xchg
fcompl
mov
add
imul
cmpsl
out
mov
in
cmpsb
cwtl
in
mov
sbbl
fsts
inc
push
outsl
repz
dec
jne
cmp
loopne
push
in
jo
les
cmp
mov
test
mov
and
inc
stos
mov
repnz
push
push
aam
sti
jge
jae
test
dec
sar
jp
adc
clc
and
pop
jae
imul
pop
inc
testl
sti
sbb
mov
aam
jae
pop
jnp
cmovne
lahf
divl
add
adc
and
ret
jae
dec
xchg
outsl
jae
cmc
push
je
or
jle
jae
mov
fimuls
insl
sbb
xor
pushf
cmp
jecxz
xchg
insl
push
inc
hlt
or
mov
roll
jae
or
fistl
mov
outsb
addr16
add
push
adc
dec
lods
or
mov
jae
adc
mov
inc
mov
jae
adc
jne
scas
ja
jae
mov
pop
jo
mov
dec
out
mov
inc
out
xchg
test
sub
mov
shr
test
jae
xor
outsl
loope
fbld
sub
cltd
in
sbb
testb
cmp
lods
sub
xchg
add
jb
mov
pop
mov
and
and
dec
xor
mov
cmp
mov
aam
mov
dec
in
loopne
push
clc
inc
pop
pop
imul
sbb
mov
pop
test
out
es
movsb
inc
orl
decl
mov
jecxz
push
push
push
shll
ret
push
xor
out
inc
and
fwait
pop
divb
gs
fdivrl
pop
pushf
lock
dec
sbb
out
iret
dec
fs
mov
inc
dec
xor
mov
in
dec
std
insb
mov
mov
ds
dec
mov
inc
out
or
fmull
jmp
add
hlt
repz
adc
push
data16
and
js
imul
xchg
mov
insl
popf
js
xchg
dec
fcompl
arpl
adc
dec
fst
pop
inc
dec
ds
out
pop
out
fcomi
mov
call
mov
add
push
pop
insb
aaa
jle
pop
jnp
and
cmp
lods
in
sbb
das
pop
ljmp
lcall
or
fsubs
inc
jae
repz
jae
imul
push
push
fistps
repz
jbe
sbb
insb
faddl
push
lret
lret
in
imul
ret
sub
jae
dec
loopne
fs
push
jae
lea
lock
jae
sbb
dec
xor
dec
mov
jae
movsl
out
ret
xor
mov
xor
mov
shll
xor
xchg
in
add
adc
push
pop
xor
xchg
gs
imul
cmp
addb
push
fucomi
jnp
out
adc
xchg
outsb
pushf
mov
loop
jo
fimull
in
and
jge
pop
cmp
in
pop
push
dec
push
sti
jb
lds
jl
mov
nop
jmp
cli
inc
jmp
lock
cvtps2pd
sbbl
push
mov
mov
pop
mov
pcmpeqd
mov
xor
mov
push
int
icebp
scas
bound
xchg
fnsave
mov
mov
mov
or
cli
xor
fdivrp
popa
hlt
mov
push
dec
std
sub
vdivpd
popa
mov
fwait
andb
movsb
push
mov
dec
into
push
subl
push
ja
pop
mov
inc
cmpsb
cld
mov
test
jns
popf
jno
out
mov
xor
int3
mov
add
push
pop
dec
es
out
out
inc
dec
dec
cwtl
movsb
or
insb
lods
mov
inc
jae
xor
xchg
cs
out
outsl
les
xor
shlb
movsl
sub
and
loop
mov
fstps
mov
aas
out
fs
inc
mov
inc
lods
insl
xchg
fwait
imul
jnp
dec
out
subb
pushf
popa
pop
repz
adc
dec
lods
ja
aad
clc
sub
dec
popf
ds
push
add
lods
pop
mov
in
mov
jae
xchg
push
icebp
mov
gs
arpl
push
dec
in
jo
cmp
testl
push
mov
xchg
jp
loopne
dec
pop
pop
es
and
push
ja
jno
ds
fcomi
sbb
push
jnp
pop
sub
inc
dec
push
loop
or
sarl
jae
cmp
dec
out
jae
mov
push
xchg
fildll
mov
in
movsb
loopne
and
cld
movsl
pop
xchg
mov
jae
outsl
xor
push
in
adc
jae
lret
dec
mov
js
fnstenv
cmp
xchg
sub
add
or
jae
xchg
cs
jecxz
out
shlb
popf
int3
push
jae
mov
ljmp
jp
jae
mov
neg
jae
shrb
imul
push
repnz
push
xor
lds
test
adcb
imul
sbb
sar
imul
fisubrs
mov
pop
lahf
dec
js
test
dec
pop
fbstp
xchg
in
mov
lock
mov
bound
ret
or
clc
outsb
xor
lods
add
push
popa
and
aaa
bnd
ret
lds
sbb
add
jg
push
insl
loopne
add
movsb
adc
in
dec
je
imul
aam
stos
or
push
out
dec
inc
adc
cmp
aaa
in
lahf
repz
push
sub
sub
lods
pop
add
xor
dec
jle
push
aaa
aad
imul
loop
pop
fs
rep
pop
push
xor
jbe
push
jae
rcr
insl
in
and
mov
int
jae
fdivl
rolb
xor
and
or
stos
push
es
jae
mov
mov
cmp
ficomps
stos
push
push
sub
jmp
insl
jno
arpl
dec
out
popf
cwtl
pop
addl
arpl
call
dec
popa
pop
pause
xor
mov
pop
mov
mov
lods
ss
fldenv
and
cld
fsubrl
mov
mov
inc
dec
into
adcb
add
je
cmp
andl
into
test
aad
pop
jb
loop
cmpsl
out
negb
push
cmp
add
mov
push
shll
mov
sbb
add
dec
mov
jge
faddl
sub
push
ds
lret
mov
arpl
adc
push
add
fsubl
pop
adc
lods
and
mov
adc
jp
dec
imul
mov
les
jge
outsl
popf
and
dec
fmulp
into
sbb
ret
push
pop
dec
xchg
repz
std
ss
scas
les
push
orb
orb
test
push
or
into
cmp
enter
leave
sbb
mov
pusha
mov
jae
inc
dec
xchg
mov
imul
jns
adc
xor
sub
dec
and
outsb
loop
shrw
jae
int
shl
mov
into
mov
mov
fs
test
aas
into
int
sub
imul
mov
xor
lret
popa
lds
fildl
jae
cmp
icebp
sbb
andl
jecxz
call
jp
stos
cmp
and
sbb
stos
clc
xchg
dec
int3
cmp
and
xchg
fldenv
sbb
or
xor
sbb
lods
fsubrl
mov
cld
insl
mov
in
jle
or
cmp
loop
stos
sbb
mov
dec
xor
adcl
push
push
sub
je
xchg
cmp
mov
fdivl
imul
jmp
xchg
or
ret
sbb
lret
je
jle
andl
sahf
imul
sbb
push
push
imulb
les
cwtl
push
shlb
xor
rcll
and
imul
loope
jl
sub
xchg
cmp
inc
lock
or
faddl
lods
test
std
rcr
sbb
or
pop
push
and
in
leave
into
mov
ljmp
xlat
jge
mov
out
push
add
adc
sbb
scas
or
rcl
dec
jl
xor
mov
push
test
out
lods
fidivs
inc
sub
ds
repz
or
ds
xchg
or
jae
inc
push
outsb
pop
call
imul
push
in
jge
lahf
dec
out
ljmp
ds
jo
cld
inc
or
lods
and
add
fidivrs
movsl
fmull
cmp
cmp
push
adc
sbb
fidivs
push
and
sub
in
adc
push
adc
pusha
std
or
ret
fdivrl
adc
andb
add
adcl
or
push
mov
arpl
mov
aaa
mov
cli
push
pushf
pop
loop
jp
sbb
xchg
shlb
push
outsb
mov
sbb
leave
loope
cmpsl
js
cli
mov
out
inc
int3
jbe
or
fcmovnb
int
push
jl
adc
out
and
iret
jmp
lret
popf
jge
rcll
sar
fidivrl
push
lcall
xchg
mov
shl
jmp
mov
pushf
inc
push
fs
xor
pop
xor
pop
dec
loop
popa
sub
out
punpckldq
pop
dec
jmp
push
addb
cmp
inc
jecxz
mov
fldl
or
xchg
or
out
sbb
add
push
xchg
mov
push
gs
xchg
push
pop
stc
gs
aam
jg
xlat
pop
ja
push
push
repz
insl
fildl
popf
push
sbb
fs
dec
nop
adc
imul
rcl
ja
in
pop
push
adc
addb
mov
adc
movsl
dec
push
dec
sub
and
lret
mov
enter
jae
inc
sbb
mov
test
nop
inc
imul
or
stos
push
cmpsb
pop
sub
insb
push
fistps
xor
dec
int
mov
sub
mov
inc
mov
rolb
or
mov
or
dec
jb
shl
scas
gs
js
repnz
push
jg
insb
xor
pop
sbb
call
test
dec
lods
push
sub
dec
xor
xorl
inc
mov
int3
add
mov
je
popf
movsb
pop
jbe
fisubrl
mov
pop
ja
pop
adc
mov
pop
dec
test
add
pop
sub
sbb
xor
cmp
aam
sub
sbb
movl
not
loopne
in
es
mov
roll
fs
mov
pop
insb
cld
sub
mov
sub
mov
out
outsl
repz
push
andb
or
pushf
xchg
xchg
daa
push
stc
je
out
adc
or
xchg
pop
or
aam
aas
loop
xlat
adc
fs
dec
sub
imul
sub
xchg
mov
pop
pop
arpl
ljmp
jl
xor
push
loope
imul
aas
out
insb
stos
ja
in
pop
sub
mulb
and
sahf
xchg
jp
insb
fildll
int3
dec
clc
xchg
push
fldt
sbb
xor
xor
pop
inc
std
rorl
fidivl
ja
pop
mov
push
fs
pop
and
inc
jno
dec
adc
pop
arpl
shl
shl
lret
sti
inc
aaa
pop
aaa
mov
lods
push
cld
fcomps
push
scas
popf
cs
jecxz
add
xchg
and
xor
pop
loopne
outsl
arpl
jo
dec
inc
imul
dec
mov
mov
bnd
shll
sti
xchg
popa
jae
and
ret
outsl
lea
insb
adc
cmpsl
and
jl
add
pop
jecxz
xchg
outsl
dec
mov
jnp
mov
ds
rorl
insl
xchg
dec
push
pushf
lea
inc
movsb
cmp
sbbl
push
or
xchg
ds
stc
pop
xchg
and
es
jno
sbb
push
cmpsl
lret
frstor
jbe
push
insl
stc
or
jae
mov
inc
push
jae
aaa
rcl
sbbl
push
test
push
jo
lds
inc
in
xlat
in
push
sub
push
lods
pop
sar
jbe
mov
mov
pop
jmp
in
pushf
fucomi
mov
dec
mov
mov
mov
or
jb
sahf
sti
xor
mov
in
icebp
sub
xorl
inc
dec
adc
aam
rcl
jae
cmpsl
sti
xchg
inc
jae
adc
cmovae
adc
pusha
jp
jmp
mov
stos
sbb
cmp
dec
sahf
cmp
mov
xor
mov
cmc
imul
aad
inc
push
rclb
mov
mov
pop
pop
in
jg
shrl
cmp
jnp
jae
and
jae
lods
inc
xchg
and
cli
insb
pop
adc
stos
lods
push
push
insl
pop
jo
lds
jae
xchg
mov
call
enter
test
or
sub
xlat
hlt
loope
adc
and
sub
icebp
cli
cld
outsb
int3
lock
mov
push
movsb
pop
dec
mov
inc
mov
or
in
xchg
movsl
lea
enter
rcr
stos
into
push
xchg
lods
and
inc
jo
shlb
jo
jno
jecxz
mov
lahf
stos
mov
adc
lret
repz
jecxz
xchg
dec
sub
lcall
mov
mov
sbb
and
ret
mov
dec
adcb
or
ss
cmp
imul
pop
dec
in
lahf
shlb
jae
pop
aad
jecxz
lcall
loop
inc
scas
sbb
lods
inc
or
outsb
pop
lods
in
adc
dec
push
xchg
rorb
push
mov
xor
jae
in
shl
sub
bound
repz
sub
pop
mov
and
mov
fbld
and
insb
bound
mov
in
arpl
add
add
out
shrb
xor
jl
cmovs
jae
ss
cmp
sbb
mov
pop
mov
pop
out
arpl
push
es
jg
fwait
loopne
popa
pushf
xchg
sbb
out
mov
leave
lcall
pop
popa
adc
jge
in
push
inc
sub
popf
xor
pop
cmc
test
inc
pop
inc
and
mov
lods
mov
ljmp
or
lahf
gs
push
or
outsl
pop
mov
lahf
popf
xor
das
dec
dec
popf
lret
adc
das
popf
jae
aaa
pop
dec
dec
insb
inc
xor
jmp
sub
shlb
mov
ficompl
jle
cli
sbb
and
ss
repz
inc
dec
sub
jae
adc
out
and
and
jae
stos
or
clc
jae
adc
icebp
in
hlt
testb
dec
stos
mov
mov
insb
jl
add
xchg
jae
inc
repnz
mov
dec
or
lods
add
xchg
cli
mov
fldt
lods
xor
mov
cld
popa
sbb
aaa
cmpsb
or
jae
stc
mov
scas
jb
push
inc
jbe
dec
into
clc
imul
push
xor
lds
jns
fdivl
lahf
daa
imul
sub
in
push
pop
xor
repz
mov
mov
xchg
insl
pushf
flds
daa
lods
sbbb
popf
popf
push
mov
rcll
or
pushf
and
out
lock
xor
xchg
sbb
scas
repnz
mov
sahf
push
xor
or
aam
pop
out
or
push
xor
add
in
out
es
mov
inc
rcrl
mov
jg
jge
rcrb
pushf
pop
mov
add
and
enter
popf
enter
pop
cmp
push
xor
aas
dec
adc
hlt
cmp
loopne
repnz
and
and
jmp
and
outsl
push
outsl
jns
in
xor
jae
shrb
and
mov
pop
fiaddl
mov
fwait
lods
ret
xchg
dec
push
dec
cmpl
mov
inc
hlt
repnz
jae
into
add
xchg
test
jmp
shll
repz
insb
and
ret
lds
imul
dec
push
add
jae
or
pusha
outsl
jo
lds
ret
imul
aam
adc
imul
int3
ljmp
cli
ja
pop
lahf
popa
jae
mov
outsb
cmp
pop
mov
push
aas
dec
stc
gs
pushf
pop
ret
inc
fwait
xor
popf
popf
jo
jae
aam
sti
lods
mov
imul
mul
xchg
sbb
sub
jecxz
aam
mov
shlb
xlat
dec
out
pop
mov
dec
or
sub
into
popf
pop
inc
jle
cmp
std
loopne
cmp
dec
mov
or
mov
pop
add
insl
mov
out
lods
push
dec
loopne
push
or
gs
ja
jns
xor
add
cmp
sbb
lcall
dec
push
xchg
and
inc
icebp
mov
inc
fists
xchg
inc
js
popa
dec
cmpsb
dec
or
mov
out
jb
adc
inc
pop
jae
xchg
push
mov
divb
js
movsl
push
jl
insl
in
and
lret
mov
xlat
insl
popf
mov
add
pop
jae
mov
push
xor
mov
inc
sbb
xor
and
xor
jmp
ret
aad
insl
jnp
iret
mov
repnz
outsl
pushf
in
and
adc
or
jne
aas
mov
cmc
sub
sbb
push
adc
xchg
jno
mov
mov
lret
aam
push
xor
mov
push
call
mov
aas
sub
push
mov
aad
sbb
das
cs
inc
pop
xchg
pop
jmp
fdivl
jo
xorl
mov
cmc
sbb
notl
pop
xor
mov
jb
jne
mov
stc
pushf
mov
push
rorb
push
insl
add
stos
ljmp
mov
test
and
lcall
fsub
xor
mov
push
dec
mov
cs
iret
fstps
loopne
aas
fadd
xchg
and
sub
scas
push
inc
mov
add
jge
cmpsb
mov
sbb
test
repnz
repz
inc
pushf
insl
nop
jne
cwtl
popf
push
jg
sub
arpl
std
push
out
pop
ljmp
icebp
fmuls
cmpsl
jbe
mov
movsl
mov
popa
insl
arpl
inc
fmuls
jae
fwait
push
sub
es
int
aam
orb
in
dec
rorl
and
mov
and
loopne
clc
clc
insb
repnz
not
jae
inc
xchg
or
aas
pusha
jae
ja
adc
in
je
and
inc
jnp
arpl
sub
loope
xor
and
push
mov
lods
or
xchg
mov
or
ret
jae
xchg
mov
jl
push
add
sub
sbb
mov
shll
inc
push
inc
dec
or
ja
je
std
popa
jae
jo
lds
xchg
fcoms
stos
sub
shrl
sbb
mov
cmc
aas
jae
out
stos
mov
fucom
xchg
fmuls
sbb
push
cmpsl
outsl
insb
pushf
cwtl
inc
dec
mov
mov
add
mov
adc
pop
cld
cmp
cwtl
pop
jge
or
inc
adc
dec
dec
pop
jmp
jp
jmp
je
dec
data16
pop
popf
lea
mov
push
lods
jae
or
ljmp
sub
pop
insb
and
mov
loop
cmpsb
sarl
jbe
jl
lock
shrb
and
lret
ret
int
sub
ret
inc
xchg
jae
insl
dec
mov
imul
inc
or
add
ja
movsb
pusha
pop
outsl
daa
outsl
mov
repz
and
loop
xlat
test
dec
iret
jae
mov
ret
sub
loop
std
mov
into
rorl
jae
jno
and
clc
shlb
jg
mov
sbb
jae
mov
adc
and
fsubl
fidivrl
push
jae
inc
in
xor
cli
adc
in
xor
mov
cmp
xchg
adc
cmpsl
or
lret
or
push
into
or
loopew
add
dec
repz
mov
cmpl
jae
mov
xlat
mov
and
or
out
icebp
mov
lds
outsl
nop
jae
mov
imul
pop
xor
mov
jae
or
aad
xor
xlat
test
rcrl
push
jg
inc
mov
pop
mov
sbb
mov
pop
dec
scas
mov
xchg
pop
xor
sub
and
popf
rclb
adc
xchg
outsb
imul
in
cmpl
and
add
pushf
ret
and
frstor
sub
xchg
xor
gs
sbb
sti
testb
add
or
or
dec
or
clc
adc
lret
imul
jle
andl
inc
lods
xchg
insl
jmp
outsl
out
insb
push
int
vcvtpd2ps
push
into
int3
sub
jns
ss
dec
cmp
xor
pop
xchg
in
dec
or
ljmp
jmp
imul
mov
std
cmc
pop
jecxz
sbb
jle
mov
fucom
scas
sub
iret
jmp
out
pop
arpl
imul
push
mov
stos
cld
ret
icebp
sub
mov
mov
dec
repnz
and
or
imul
pop
icebp
shrb
or
dec
rep
dec
push
mov
cmpsl
dec
lret
shrb
dec
or
jp
scas
pop
xor
insb
lret
sub
hlt
cld
mov
cmovnp
mov
pop
push
and
xchg
jae
std
push
in
cmp
mov
mov
fdivr
pop
sub
jae
cli
push
ret
or
push
or
lcall
xor
insb
pusha
xchg
popa
xor
in
and
jmp
insb
pop
cmp
lret
aaa
jae
sub
mov
inc
adc
add
neg
mov
test
imul
lock
shlb
imul
jae
sbb
jae
mov
pop
xor
jmp
push
dec
dec
inc
test
popf
or
jne
ret
sub
dec
clc
daa
pushf
cmpsb
push
les
es
sub
mov
xchg
cmc
and
pop
jmp
out
mov
out
dec
fnstcw
shrl
mov
dec
pop
out
adc
or
lods
jle
push
insl
push
push
btr
add
sub
int
push
test
cmp
sahf
int3
dec
cmp
lahf
cmpsl
inc
fdivrl
fstl
adc
mov
dec
cmp
add
add
cmc
fwait
test
shlb
mov
scas
rcrb
sub
in
adc
xor
pop
push
jo
daa
adc
iret
push
fmull
aas
hlt
jg
es
in
ret
test
pop
jns
loopne
fcoml
add
stos
jg
xchg
xchg
or
xchg
dec
cmpsl
mov
inc
cmp
push
ss
shl
mov
enter
push
imul
xor
or
mov
cmp
mov
fcmovnu
aas
dec
pop
jae
mov
sub
adc
mov
shlb
mov
cmp
rorl
loope
mov
pop
jae
into
es
andl
mov
mov
das
popa
out
sub
lods
mov
outsl
jae
divl
aam
inc
push
sub
shrl
push
rorl
in
push
daa
add
les
mov
icebp
pop
and
outsl
fisttpl
add
mov
repz
fwait
leave
hlt
es
adc
pop
cs
lret
nop
imul
jo
insl
insl
ret
add
rcll
es
sub
jo
lds
pop
fidivrl
sub
push
sbb
insl
repz
int3
jae
mov
insl
add
paddsw
inc
mov
jle
popf
push
dec
fnstenv
xor
lods
rcrb
enter
jno
outsb
pop
clc
mov
es
roll
lea
inc
in
or
push
aas
push
pop
and
or
frstor
outsb
inc
add
int
ret
in
popa
mov
aas
hlt
pop
adc
insl
push
sub
or
sbb
clc
fstl
mov
add
hlt
inc
xor
pop
lock
mov
out
rorl
push
movsl
or
outsb
stos
inc
mov
clc
sub
lcall
aam
insb
mov
or
cltd
mov
or
notb
push
push
repnz
push
mov
xchg
out
xchg
insb
repz
dec
stos
and
negb
inc
int3
hlt
inc
or
incb
rcll
icebp
rcrb
clc
daa
hlt
cmc
stos
sub
repnz
je
sub
add
push
or
bound
or
and
push
andl
push
xchg
jecxz
add
sbb
repz
shrl
ljmp
cli
xor
lock
comiss
or
add
xchg
xor
cli
xchg
pop
scas
hlt
jnp
sbb
testb
out
dec
repnz
or
in
shr
push
xor
sub
push
add
push
pop
ror
sub
adcb
xchg
movsl
bound
ds
sub
mul
popf
scas
loope
adcl
sub
mov
push
repnz
jecxz
cld
mov
scas
cmp
pop
and
out
inc
cli
aam
rcrl
mov
ds
repnz
repz
outsl
dec
sub
push
or
or
jae
dec
not
push
xchg
push
add
shl
push
bsr
btc
rcl
push
rcr
bt
mov
clc
xadd
mov
and
add
ror
seta
mov
clc
and
push
setbe
sub
lea
call
movl
pusha
lea
jmp
movb
lea
je
bt
add
pushf
pusha
pushf
lea
jmp
mov
pusha
pushf
lea
jae
pushf
call
pusha
movl
pushl
push
pusha
pushf
movl
pushf
lea
jmp
push
mov
lea
je
mov
movzbl
lea
push
jmp
pusha
mov
movl
call
scas
sbb
cli
jge
pop
adc
mov
sbb
cmpsb
shlb
dec
dec
xlat
add
je
loop
ja
roll
mov
test
ret
or
stos
pop
fs
testl
into
into
outsl
popa
sbb
iret
imul
and
jo
pushl
push
pusha
pusha
pushl
ret
push
outsl
jb
jns
and
jae
popa
jo
insb
imul
and
outsb
outsb
outsl
je
jb
outsb
and
fs
popa
and
jb
jne
insb
and
arpl
outsb
gs
into
pushf
and
aad
push
xchg
dec
cli
xchg
clc
xchg
jae
jae
mov
sub
mov
ret
aas
jmp
jbe
ret
out
movsb
xor
jmp
je
ss
fstpl
mov
pop
push
mov
sbbb
mov
jmp
push
hlt
icebp
insb
cltd
adc
mov
fcoms
mov
push
adc
mov
sub
daa
jecxz
imul
test
sbb
mov
jo
jecxz
cmc
aad
dec
mov
lea
jae
jmp
call
pop
cmp
adc
and
fistpll
mov
fisttpl
ss
xor
enter
push
sub
add
imul
mov
sbb
inc
into
dec
push
lds
sbb
ror
mov
push
popa
out
add
push
sbb
push
stos
jne
lahf
stos
or
stos
out
inc
sbb
push
scas
adc
adc
pop
inc
push
add
pop
lds
dec
mov
xchg
inc
negb
add
or
sbbl
int
iret
imul
cmc
fiadds
rorl
inc
outsl
sub
mov
sub
mov
push
int3
cmp
dec
mov
dec
push
xor
adc
loope
jmp
je
xchg
inc
jmp
dec
and
les
out
mov
fwait
mov
shl
or
lret
xchg
out
push
jl
xchg
or
pop
jne
jnp
xchg
ret
jg
iret
imul
sub
pushf
lea
jb
pushf
lea
jne
bswap
pop
bswap
movsbl
call
movsb
je
lret
or
push
clc
xchg
jnp
aad
mov
pop
data16
adc
push
into
or
mov
outsb
std
fs
push
add
push
xchg
out
fstl
imul
fisubl
out
sbb
sub
dec
fisttps
cmp
or
and
push
mov
mov
push
pop
fstps
add
inc
sub
in
mov
cmp
nop
ja
fisttps
inc
ss
or
mov
mov
insl
addb
lahf
adc
mov
les
lods
jecxz
mov
jp
adc
add
sbb
pop
adc
repnz
dec
and
add
push
jmp
inc
and
jnp
mov
cmpsl
push
iret
insb
imul
in
test
adc
sub
cmp
cs
mov
sub
jl
jns
jecxz
loope
jp
cmc
lods
in
clc
mov
push
inc
xor
inc
inc
xchg
in
ret
adc
push
push
fnstenv
decb
pop
ret
fnsave
mov
dec
or
insl
and
not
movl
lahf
not
bswap
bswap
lea
push
movl
movb
jmp
pushf
pushl
lea
je
push
pushf
cmp
pusha
lea
je
pusha
pushl
pushf
pushl
lea
jmp
setb
push
movb
jmp
add
inc
gs
outsl
fs
gs
imul
add
inc
test
mov
and
fdivrl
repnz
adc
inc
inc
add
xor
jp
mov
test
push
dec
lock
add
sti
ret
mov
mov
rclb
mov
test
push
cltd
jmp
insb
outsl
dec
add
mov
popa
dec
jp
pop
into
sbb
bound
jo
movsb
sbbl
cmp
mov
push
push
iret
outsb
pop
popa
cmpsb
mov
pushf
lea
call
push
jmp
jmp
bt
mov
not
rcr
pusha
mov
pusha
xor
pushf
push
bt
repnz
pushf
call
mov
not
test
push
sub
pushl
mov
neg
test
clc
jmp
lea
pop
push
pushf
pushf
pushl
ret
movl
pusha
push
movl
pushf
pusha
pushf
mov
lea
jmp
cmp
mov
jle
inc
xchg
repnz
xchg
xchg
push
jo
inc
mov
push
test
sub
mov
shlb
pop
daa
lock
decb
push
cwtl
mov
movsl
push
add
aam
jp
inc
sbb
mov
jb
das
xchg
inc
idivl
addr16
cli
jmp
sbb
xchg
sub
pop
inc
pusha
movl
pushf
lea
jmp
stc
mov
lea
cmc
pusha
mov
sub
btc
mov
stc
sub
lea
jb
push
pusha
pusha
rep
mov
pushl
movsbw
not
mov
movw
pushf
lea
jmp
mov
mov
movl
mov
push
movb
lea
jmp
pushl
clc
call
cmpb
pusha
pusha
push
lea
jne
rol
sub
shr
lea
lahf
jmp
mov
js
and
sahf
loop
push
int
movl
xor
enter
aad
add
mov
dec
xchg
xor
sbb
adc
push
add
push
and
insb
and
fidivl
into
lret
mov
sqrtps
add
rclb
cmc
adc
stos
fwait
jmp
mov
dec
shlb
xchg
shll
ret
iret
jo
imul
sets
pusha
cwtl
movl
not
pusha
movsbw
push
lea
pushf
pushf
jmp
push
pushf
jmp
pushf
lea
jne
cmc
shr
test
pop
pusha
cmc
push
bt
sub
call
ret
cmp
mov
sub
outsb
mov
fwait
outsl
pop
loopne
lcall
fdiv
inc
cmp
sub
mov
mov
aad
cmpsb
in
decb
jo
out
test
adc
shufps
jo
mov
pop
in
fsubr
ret
je
loope
pop
or
inc
pushf
push
mov
sbb
bound
lcall
add
jno
inc
jmp
lea
jne
lea
pushf
mov
pushl
lea
jmp
jmp
pushl
pushf
lea
je
pusha
push
cmp
jmp
sbb
bound
test
repnz
or
mov
pop
mov
push
push
aam
inc
xor
out
lea
sub
mov
movb
adc
aad
xor
cwtl
mov
cmp
mov
dec
or
stc
xchg
or
mov
aaa
dec
fcoml
je
add
lret
addr16
mov
outsb
dec
inc
popa
jno
movsb
nop
pop
inc
mov
mov
mov
mull
inc
enter
xchg
addr16
cmp
mov
iret
jb
pushf
sub
clc
pushf
lods
add
jle
xor
pushf
push
cmp
not
cmp
bt
cmc
cmp
sub
clc
neg
movl
cmc
pusha
sub
cmc
ror
test
jmp
call
lea
je
push
xor
shl
movzbw
mov
shr
sub
xor
setge
not
bts
shr
add
stc
rcl
test
mov
adc
add
bsr
not
add
cmp
cmc
mov
bt
clc
jmp
lea
je
jmp
add
mov
test
and
push
stc
add
pushl
movb
mov
lea
jmp
lea
jne
movsbl
pop
setnp
mov
pop
bswap
pop
call
mov
lcall
adc
js
jae
insb
dec
ss
scas
aaa
in
jmp
pop
xchg
lods
jnp
add
mov
outsb
mov
gs
dec
xchg
dec
in
pop
pusha
and
mov
dec
jns
push
iret
jae
lcall
loopne
stc
or
push
lcall
out
shrl
leave
loop
jl
mov
xchg
jns
xor
daa
gs
ds
mov
out
lods
add
push
test
jnp
dec
imul
mov
push
dec
repnz
jle
aad
jno
std
test
xor
adc
jg
test
js
cwtl
lret
fiaddl
jp
jo
sbb
mov
stos
fsubr
add
cmp
sub
xchg
in
popf
out
addr16
inc
adc
out
sbb
sbb
push
and
cltd
add
sub
icebp
add
je
push
dec
bswap
setb
mov
pushf
lea
jmp
pushf
lea
jae
pusha
pusha
bt
add
pushf
mov
movb
pushf
pushf
pushl
lea
jmp
movw
rep
call
clc
stc
cmc
xor
cmp
cmp
call
jmp
mov
movl
jmp
pusha
movl
jmp
movzwl
sub
mov
mov
clc
cmc
pushf
cmp
add
clc
push
cmc
jmp
int3
popf
pushf
jmp
mov
push
cmp
pusha
movw
jmp
mov
lea
jbe
inc
bsf
movsbl
sub
lea
xchg
or
shrd
mov
shrd
mov
sub
bsf
add
rcl
bts
bt
shr
jmp
test
call
pushf
movl
lea
jne
push
push
pushf
pusha
push
lea
jmp
jmp
shr
pushl
pushf
mov
pushf
jmp
pushl
popl
mov
movb
mov
lea
jmp
xchg
pushf
call
cmc
clc
mov
push
cmp
sub
pushf
dec
pushl
jmp
test
add
push
push
lea
jmp
mov
mov
jmp
cmp
sub
movb
movl
mov
pushf
call
mov
lea
jae
pusha
mov
pushf
mov
pusha
jmp
not
notl
sar
ror
aas
rol
mov
bt
call
pushf
mov
pushl
popl
mov
pushf
lea
jmp
jmp
rol
call
shl
mov
sar
clc
mov
btr
mov
jns
clc
add
call
call
pusha
movl
jmp
jg
pusha
mov
pusha
mov
pushf
lea
jmp
dec
daa
mov
stc
push
clc
sub
call
pushf
movb
mov
push
pushl
movw
pushl
lea
jmp
mov
mov
dec
pushf
push
lea
jmp
bts
xor
add
mov
rcr
add
call
mov
call
pushf
call
call
pushl
popl
pushf
mov
pushf
lea
jmp
jmp
mov
xor
jge
cmp
mov
test
sub
bt
clc
call
rol
neg
not
stc
mov
pusha
sub
call
push
push
mov
mov
push
movw
movl
mov
pushl
jmp
pusha
stc
add
push
push
lea
jmp
shr
mov
ror
mov
test
call
pusha
call
sub
pushf
pushf
mov
movw
movb
pushf
lea
jmp
jmp
cmp
sbb
test
cwtl
lea
pushf
jmp
push
call
mov
jmp
clc
clc
sub
mov
mov
pushl
mov
pushf
movl
lea
jmp
pushf
mov
push
mov
push
pushf
popl
jmp
xor
sub
jbe
sub
jmp
pushl
pushl
pushf
pushl
popl
pushf
lea
jmp
pushf
jmp
pushf
mov
pusha
lea
jmp
lea
jne
test
mov
clc
clc
and
stc
bt
cmc
call
mov
pushf
lea
jmp
mov
push
pushf
pushl
lea
jmp
clc
pushf
pushl
popf
pushf
pusha
movb
mov
lea
jmp
movb
add
stc
bt
test
shrd
call
pushl
popl
movb
lea
jmp
daa
not
pop
bts
bsf
ror
pop
jmp
bt
push
add
pusha
jmp
stc
bt
add
jmp
cld
cld
call
pusha
call
sub
push
xchg
jmp
cmc
stc
rol
pusha
dec
clc
call
bt
neg
bsr
mov
btr
neg
mov
pusha
cmp
add
pushf
mov
movb
push
lea
jmp
add
xorb
lea
lea
jmp
mov
pushf
movl
pushf
lea
jmp
push
pushl
lahf
movsbw
mov
push
pushf
mov
push
movw
call
mov
pushl
pushf
lea
jmp
dec
mov
movb
test
stc
add
movb
mov
movw
pushl
ret
jmp
jmp
not
clc
stc
test
not
call
dec
pushf
bt
not
clc
sub
clc
cbtw
cmp
cwtl
movw
jmp
bt
cmc
movzbw
mov
push
jmp
mov
push
pusha
call
sete
pushf
movzbw
dec
shr
sar
xor
neg
not
pushl
btc
movsbw
ror
add
cmc
bt
shr
and
cmc
bswap
mov
jmp
push
mov
pushl
movw
lea
jmp
mov
pusha
jmp
pushf
mov
neg
mov
jmp
pusha
jmp
rcr
rdtsc
jmp
cmc
and
pushl
lea
jno
mov
pushf
pushf
popl
call
mov
push
pushf
lea
jmp
movb
lea
mov
mov
lea
jmp
xchg
bt
mov
xor
xchg
not
mov
btr
pushl
popl
xadd
dec
dec
bsf
movl
shl
inc
cmc
mov
pusha
sub
movzbw
sbb
rcl
neg
call
add
call
add
pushf
mov
pusha
pushf
lea
jmp
lea
call
pushf
lea
jae
mov
pushf
pusha
push
lea
jmp
add
jmp
or
dec
pushl
popl
shr
bswap
movl
shl
or
clc
add
mov
inc
shld
sub
rol
not
setb
sar
neg
xchg
dec
ror
lea
sar
lea
bsr
sub
setno
mov
shl
dec
mov
rol
bt
mov
and
bsf
bswap
xor
add
rcl
xchg
mov
push
test
test
add
jmp
jmp
mov
call
push
call
call
pushf
mov
pusha
pushl
pushf
lea
jmp
xor
test
bt
pushf
lea
clc
push
call
pusha
mov
pushf
pushl
mov
lea
jmp
push
pushf
pushf
mov
mov
jmp
jmp
pusha
mov
push
pushf
popl
mov
pushl
popl
pushf
lea
jmp
dec
jmp
clc
push
push
sub
movb
shr
pushf
pushf
mov
call
rcr
shl
dec
add
mov
pushf
stc
sub
push
pusha
mov
pushf
pushl
push
movl
lea
jmp
pusha
sub
clc
pushf
pusha
call
mov
pushf
movb
pushf
lea
jmp
stc
and
pusha
movb
jmp
xor
bt
push
xchg
stc
pusha
call
add
lea
jne
pushf
stc
ror
pushf
mov
jmp
pusha
mov
mov
pushf
pusha
pushl
pushl
lea
jmp
pusha
pushf
mov
pushf
lea
jmp
add
or
mov
shld
lea
or
mov
jmp
lea
pusha
pushf
jmp
bt
bt
add
call
pushl
popl
pushf
pushl
pushf
lea
jmp
jmp
mov
mov
push
push
lea
jmp
mov
pusha
push
lea
jmp
jmp
jmp
pushf
jmp
mov
movb
pushf
pushf
push
lea
jmp
aas
rcl
aam
mov
bt
stc
sub
jmp
bt
bt
shl
mov
jmp
pushf
popl
call
bswap
mov
rol
lea
dec
sar
cmc
cmp
stc
not
btr
rol
shl
not
sub
pushf
pop
movzbl
jmp
pusha
mov
mov
pusha
movw
mov
lea
jmp
daa
rcr
ror
sar
mov
pusha
bswap
cmp
call
pushf
pushf
mov
lea
jne
pushf
mov
pushl
push
pushf
lea
jmp
jmp
rcr
bsf
shl
stc
add
lea
movzbw
movzbl
mov
dec
pusha
mov
pusha
dec
test
cmc
add
push
mov
push
push
pushl
ret
pushf
cmc
not
cmp
neg
push
call
sub
pusha
mov
mov
lea
jmp
push
pushf
pushf
mov
pushf
lea
jo
push
pushf
dec
pusha
or
call
call
btr
movsbw
xor
btc
mov
add
setns
inc
mov
pushf
jmp
movb
pushl
pushl
popl
movw
pushf
lea
jmp
movzbw
pushf
popl
or
mov
test
mov
jmp
mov
push
mov
mov
jmp
movzbw
rcl
mov
pusha
call
pushf
pushl
popl
pushf
lea
jmp
mov
pushf
pusha
lea
jmp
sub
bt
mov
call
pushf
sub
lea
jle
mov
jmp
jmp
call
mov
lea
jl
mov
pusha
lea
jmp
cld
pusha
pushl
popf
pusha
push
lea
jmp
btr
pop
pusha
bsf
stc
bt
mov
rcl
adc
mov
ror
aam
rol
mov
cmc
bt
cmc
inc
pushl
popf
movzbw
mov
pushl
mov
pushf
pushf
pushl
ret
mov
movb
pusha
movw
lea
jmp
jmp
mov
bswap
bswap
call
mov
mov
push
call
pushf
xchg
jge
lea
pushf
sar
setns
push
movsbl
push
shld
bsf
push
shld
sar
sub
pusha
mov
btc
shld
xor
mov
bswap
clc
bswap
mov
sets
jmp
jmp
jmp
pushf
call
jmp
push
pushl
pushf
popl
call
jmp
call
mov
pushl
push
pushf
lea
jmp
mov
movsbw
movsbl
call
pusha
mov
movw
pusha
call
lea
push
jmp
pushl
bt
pushf
pushf
add
bt
pushl
popf
pushf
movb
pusha
lea
jmp
push
mov
pushf
push
pushf
pushf
lea
jmp
call
jmp
pushf
add
jmp
movl
call
mov
pop
add
xchg
pop
add
xchg
pop
add
pop
add
pop
add
jp
add
jns
add
pop
add
jp
add
pop
add
jbe
add
xchg
pop
add
jg
add
sbbb
lea
xchg
jle
add
pop
add
xchg
test
pop
add
lea
test
add
jbe
add
jg
add
jge
add
xchg
pop
add
jbe
add
pop
add
xchg
pop
add
pop
add
pop
add
jge
add
mov
sbbb
jp
add
xchg
pop
add
mov
out
xchg
pop
add
jge
add
pop
add
jp
add
add
xchg
add
mov
notb
pop
add
nop
pop
add
xchg
pop
add
xchg
pop
add
jg
add
xchg
pop
add
pop
add
nop
pop
add
xchg
idivb
add
nop
pop
add
jbe
add
jp
add
pop
add
pop
add
xchg
pop
add
xchg
pop
add
ja
add
pop
add
xchg
pop
add
xchg
pcmpeqd
cltd
lea
sbbb
jp
add
mov
push
jbe
add
xchg
pop
add
pop
add
mov
mov
mov
arpl
pop
add
jge
add
mov
or
pop
add
xchg
pop
add
xchg
pop
add
pop
add
xchg
pop
add
sbbb
jle
add
xchg
pop
add
jbe
add
pop
add
sbbb
jbe
add
nop
pop
add
pop
add
jbe
add
xchg
pop
add
jge
add
xchg
pop
add
xchg
pop
add
xchg
pop
add
mov
imul
add
nop
pop
add
xchg
mov
pop
add
jp
add
mov
add
pop
add
xchg
pop
add
pop
add
pop
add
nop
pop
add
pop
add
pop
add
jg
add
pop
add
jp
add
xchg
pop
add
xchg
pop
add
nop
pop
add
xchg
pop
add
mov
nop
pop
add
jns
add
sbbb
xchg
pop
add
jg
add
xchg
pop
add
ja
add
jg
add
pop
add
xchg
pop
add
jp
add
jns
add
pop
add
ja
add
xchg
pop
add
xchg
pop
add
jp
add
xchg
pop
add
jp
add
pop
add
jge
add
jp
add
pop
add
nop
pop
add
pop
add
pop
add
xchg
scas
xchg
pop
add
jg
add
xchg
scas
xchg
pop
add
pop
add
xchg
pop
add
xchg
pop
add
jg
add
xchg
pop
add
jp
add
xchg
pop
add
xchg
pop
add
xchg
pop
add
jp
add
pop
add
pop
add
xchg
pop
add
pop
add
jbe
add
pop
add
jg
add
jg
add
sbbb
nop
pop
add
add
nop
pop
add
pop
add
nop
pop
add
xchg
pop
add
jbe
add
pop
add
pop
add
xchg
pop
add
nop
pop
add
mov
arpl
pop
add
xchg
pop
add
xchg
pop
add
jns
add
test
push
add
push
clc
cmc
call
rcr
mov
pushf
shl
mov
mov
bt
add
jb
sub
jmp
call
mov
call
call
mov
not
movsbl
movsbw
cld
mov
jmp
sar
lea
dec
rcr
sub
xor
inc
mov
mov
push
mov
or
btr
add
movsbw
movzbw
movzbw
inc
mov
bsf
clc
add
cmc
pusha
shld
sub
rcl
rol
pusha
sub
rcr
add
call
mov
stc
stc
sub
jmp
sub
cmc
rol
not
btr
stc
sub
and
sub
jbe
add
inc
push
dec
movzbl
mov
dec
bswap
mov
pusha
dec
pusha
cmp
push
add
mov
jmp
call
and
btc
pushf
mov
adc
and
stc
mov
clc
cmc
sub
mov
shl
movb
mov
pushf
mov
pushf
pusha
pushf
popl
call
mov
rcr
mov
movsbl
bsf
mov
cmc
push
jmp
bt
bt
sub
pusha
pusha
stc
clc
rol
jmp
mov
shl
jmp
call
bsf
xadd
bsf
jmp
stc
sub
jmp
jmp
pushl
add
push
call
add
pushf
mov
call
call
pushl
popl
pushl
pushf
lea
jmp
pushf
popl
pushf
pushl
popl
push
pushf
pushf
push
lea
jmp
std
std
cld
mov
rep
lea
mov
lea
jns
sar
not
pop
call
test
sub
call
mov
movl
pushf
mov
lea
jmp
push
call
cmp
call
jmp
movb
xor
mov
push
pushf
jmp
pushf
mov
jmp
jmp
xchg
movw
call
push
mov
mov
pushf
pushf
lea
jmp
call
pusha
pushl
call
mov
rcr
inc
mov
pushf
add
pushf
pushf
mov
pushf
lea
jmp
mov
mov
pushf
mov
pushf
lea
jmp
pushl
pushl
popl
pusha
pushf
push
lea
jmp
dec
call
mov
call
push
pushl
mov
mov
push
pushl
movw
mov
lea
jmp
add
add
neg
xchg
bt
bt
movzbl
or
sub
movsbw
pusha
seta
pushf
inc
cmp
rcl
cmp
not
sbb
sar
movzbw
neg
add
not
sub
cmc
neg
stc
shld
mov
pusha
cmp
add
call
shr
jmp
mov
pushf
lea
jmp
pusha
push
call
lea
ja
lea
shr
bswap
test
mov
shr
adc
cmc
lea
rcr
neg
mov
or
sub
sar
lea
cmc
and
sub
ror
sub
lea
not
mov
lea
pushf
movsbl
movsbl
bswap
bswap
push
mov
std
std
mov
movzbl
jmp
pushf
popl
lea
jne
pusha
pushf
mov
pushl
popl
pushf
movl
lea
jmp
bswap
mov
call
push
mov
pushf
mov
pusha
push
mov
lea
jmp
shr
cmc
cmp
mov
bt
clc
sub
test
bt
xor
call
dec
jmp
sbb
xchg
mov
inc
push
not
pushf
mov
bt
sub
call
cwtl
pusha
jmp
cmp
pusha
push
call
lea
btc
sar
mov
ja
add
pushf
mov
push
pusha
lea
jmp
mov
rol
mov
cmp
cmp
sub
stc
pusha
stc
shr
pusha
mov
pushf
pushf
popl
pushl
pushl
popl
pushl
movb
pushf
lea
jmp
call
jmp
pusha
push
pushl
mov
pushl
lea
jmp
pushf
mov
pushf
movb
push
push
lea
jmp
test
rcr
mov
not
shl
inc
mov
pushf
clc
jmp
movw
pushf
pushf
mov
pusha
pushf
push
call
push
ror
pusha
inc
bt
test
push
xor
test
sub
movw
mov
pushl
push
movb
lea
jmp
bswap
pusha
mov
pushf
lea
jmp
pushf
pusha
mov
pushf
lea
jmp
mov
lea
je
pushf
cmc
call
mov
pushl
push
mov
lea
jmp
xchg
call
clc
push
movw
mov
push
push
cmc
pushf
xchg
mov
push
xor
pushf
jmp
push
lea
cpuid
cmc
stc
clc
sub
test
cmp
cmpl
pusha
pushl
pushl
call
pushf
mov
mov
mov
pusha
pushf
lea
jmp
btc
movzbl
rcr
setno
neg
sub
lea
call
pushl
pushf
mov
pushl
lea
jmp
pushl
shr
cmp
pushf
pusha
push
or
cmp
xor
mov
pushf
pushf
push
inc
pushf
decl
pushf
call
dec
call
pushl
jmp
setle
mov
bt
cmp
jmp
pushf
mov
pushl
push
add
jmp
call
dec
stc
clc
cmp
jmp
call
lea
jne
cmp
cmc
sub
call
mov
movb
lea
jmp
pusha
mov
pusha
movb
push
lea
jmp
rep
shl
cmc
sar
test
mov
test
clc
pop
or
mov
std
push
pushl
popf
pushl
lea
jmp
add
movb
pushf
mov
pushf
lea
jmp
movl
push
mov
pushl
push
pushf
pushf
pushl
ret
pushf
pusha
pushf
popl
pushf
pushl
popl
pushl
mov
movw
lea
jmp
stc
pop
test
jmp
push
mov
mov
pushf
lea
jmp
mov
movb
pushf
push
lea
jmp
sar
mov
and
shl
add
shld
cmp
bswap
bt
xor
pushf
rcl
bswap
xor
mov
pushf
pushf
clc
shl
clc
call
mov
movb
pushl
ret
pusha
movl
pushf
movb
pushl
mov
push
mov
pushf
pushl
ret
lea
jne
pushf
mov
mov
lea
jmp
std
lea
std
call
pusha
cmp
sub
pusha
lea
lea
jo
push
mov
mov
lea
jmp
jmp
pusha
pusha
call
jmp
mov
pusha
pushf
pushf
mov
pushl
ret
mov
inc
lea
jne
not
test
clc
cmc
neg
test
sub
pushf
test
clc
mov
cmp
bt
cmc
sub
mov
movb
dec
pushf
mov
pushl
pusha
pushf
lea
jmp
movw
xchg
call
pushf
mov
jmp
jmp
movl
call
rdtsc
mov
shr
xadd
shld
bswap
pop
xor
pop
jmp
jmp
pushf
pusha
divl
call
lea
jg
cwtl
bt
jmp
cmp
btr
rcr
daa
mov
bt
pusha
clc
mov
cmp
add
call
push
stc
sub
mov
jmp
pushf
mov
mov
pushl
movb
jmp
pushf
jmp
mov
pushf
call
shl
shr
cmc
bswap
mov
clc
jo
add
pusha
lea
jmp
push
not
mov
pusha
call
xor
cmc
sub
movw
push
mov
pushl
sub
jmp
dec
movb
call
shr
neg
aad
sub
mov
pusha
add
pushf
push
pushf
popl
call
mov
pusha
pushf
pushf
lea
jmp
mov
bt
and
bt
cmp
cmp
pushf
cmp
push
pusha
call
lea
jne
sub
call
mov
test
push
stc
bt
sub
push
jmp
stc
cmp
pushf
lea
jne
jmp
call
push
jmp
pusha
pushf
dec
jmp
bts
xorb
movzbw
jmp
cmp
bt
shrd
xorb
pusha
pop
mov
push
push
lea
jmp
pushf
popl
lea
jg
popl
pushf
movb
lea
jmp
jmp
movzbw
sbb
mov
bts
mov
shl
and
rcl
pusha
mov
push
pushf
add
stc
shld
push
jmp
lea
jne
push
sub
call
push
push
pushf
lea
jmp
cmp
cmp
cmc
sub
test
shr
call
pushf
dec
clc
or
movw
lea
je
jl
pusha
xor
pusha
call
jmp
pusha
jmp
call
push
movzbw
shl
mov
push
sub
movzbw
shld
inc
push
xor
pushf
push
movzbw
lea
movsbw
push
movsbw
dec
sar
shl
ror
xor
pushf
xor
shld
sub
rcl
mov
call
clc
neg
or
not
mov
pusha
stc
lea
jge
sub
clc
jmp
rdtsc
movzbl
bswap
mov
movzbw
mov
push
jmp
jmp
popl
pushf
lea
jmp
lea
jne
and
call
pushl
inc
cmp
cmc
pushf
pusha
xor
clc
cmp
pushl
sub
jmp
pushf
popl
jmp
push
pusha
pusha
mov
push
mov
push
movb
lea
jmp
cmc
cmp
clc
add
push
movb
pushf
pusha
lea
jmp
pusha
pushl
popl
pushf
mov
push
lea
jmp
pushf
call
ror
mov
stc
add
push
pushf
mov
pushf
mov
mov
pusha
jmp
call
xor
btr
mov
sub
dec
mov
clc
not
cmp
pushf
test
pushf
not
cmc
pushf
sub
pushf
cmp
pusha
pushf
and
call
jmp
push
mov
pusha
pushf
pushf
pushf
lea
jmp
jmp
mov
movw
lea
jmp
pushf
movb
mov
jmp
pushl
pushf
call
test
test
call
movzbl
pop
inc
push
push
dec
call
call
call
pushf
popl
mov
pushl
popl
mov
mov
pushf
lea
jmp
mov
call
push
mov
push
pushf
pushf
popl
jmp
pushf
mov
movb
lea
jmp
call
push
sub
cmp
add
call
pusha
sub
pushf
pushf
clc
rol
mov
dec
clc
not
movb
sub
cmc
stc
clc
bt
sub
bt
add
call
cmp
lea
jo
ja
movzbw
mov
lea
btc
rcl
xor
lea
inc
pushf
stc
sub
lahf
lea
rcr
pop
dec
lea
and
movzbw
sub
pusha
pusha
call
jmp
pushf
popl
mov
push
pushl
popl
pushf
lea
jmp
sar
shl
shrd
mov
movsbl
pusha
xor
test
mov
push
pushl
movb
jmp
pusha
mov
pushf
lea
movb
movb
call
pushf
pushf
popl
pusha
movsbw
mov
pushf
bswap
xchg
pop
mov
movzbl
push
lea
jmp
pushf
popl
pusha
call
lahf
or
pusha
mov
btc
add
js
xadd
mov
neg
cmp
mov
stc
add
stc
clc
stc
clc
shrd
push
call
pusha
mov
pushf
pushf
mov
lea
jmp
test
pusha
mov
lahf
mov
sbb
stc
or
neg
mov
cmc
jmp
pusha
bswap
mov
call
jmp
cmc
sub
movw
stc
and
pusha
push
pushf
pushf
popl
pushf
pushf
pushl
popl
pushf
mov
push
mov
lea
jmp
mov
lea
jo
push
lea
jne
sar
neg
shl
mov
pusha
jmp
seta
inc
dec
add
bsf
rcl
neg
rcl
ror
bsf
and
and
lea
mov
clc
push
call
cmc
sub
pushf
clc
cmp
cmc
shl
push
mov
pushf
mov
pushf
pushf
pushf
popl
mov
pushl
popl
pushf
push
mov
pushl
lea
jmp
push
mov
pushl
pushf
popl
pushl
lea
jl
push
pushf
pushl
popl
pushf
lea
jmp
call
call
pushf
not
not
mov
jmp
shld
sbb
mov
cmc
pusha
xchg
movb
xor
pushl
jmp
lea
jne
shl
rcl
movsbw
mov
call
cmp
shr
add
add
mov
push
pushl
bt
add
jmp
mov
lea
jmp
