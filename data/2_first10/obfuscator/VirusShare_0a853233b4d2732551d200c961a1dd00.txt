or
add
add
add
add
jmp
add
dec
sar
test
leave
clc
or
pop
pop
jge
add
jmp
mov
das
rorb
daa
enter
cmc
gs
pop
scas
shrb
incb
clc
shlb
jg
in
cmc
out
mov
inc
and
and
ds
add
jecxz
les
xchg
xchg
ja
add
push
test
ja
lock
incl
loop
imul
pop
jmp
add
arpl
repz
repz
sti
loopne
fnsave
and
xorl
stos
xorb
pop
and
cmc
lods
jg
outsl
ljmp
ja
sbb
jbe
cmp
test
sbb
je
jns
incl
popf
inc
addr16
cmc
mov
imul
insl
mov
in
imul
inc
clc
insb
cmpsl
rcrl
dec
mov
pusha
std
add
xchg
mov
in
popa
leave
mov
pop
repnz
pop
xor
add
jnp
in
mov
mov
or
pop
cmp
mov
mov
lds
test
add
add
sar
xchg
aas
inc
add
addb
aas
add
fdivr
out
add
repz
jmp
inc
std
rorl
mov
mov
jns
mov
in
repz
cmp
mov
sar
fs
or
adc
jb
sti
inc
inc
add
into
lea
push
jns
add
add
ja
add
clc
add
xlat
mov
cmpsb
repz
inc
add
add
sarl
xchg
repz
shrb
xchg
mov
sar
inc
add
leave
mov
pop
mov
cld
popf
out
icebp
xchg
hlt
lods
add
or
mov
inc
das
jp
mov
cltd
push
std
mov
mov
cmp
js
cmovns
cmp
jp
cmp
xor
lds
mov
xchg
push
dec
stos
adcl
int
and
push
cmp
sbb
nop
mov
inc
mov
mov
jecxz
mov
mov
push
add
mov
pushf
rcrl
enter
and
adc
xor
sbb
enter
enter
mov
push
lea
dec
ds
in
mov
mov
jb
or
cmc
stos
mov
xorl
dec
icebp
mov
add
mov
arpl
rep
pop
mov
fdivl
xchg
shlb
mov
int
vmovhps
pop
xor
les
mov
sub
jo
rorb
std
inc
mov
xchg
bound
das
or
mov
adc
fadd
mov
xor
sbb
inc
pop
es
or
cltd
nop
or
jo
mov
loopne
mov
insl
and
mov
add
fcomi
ficompl
cmp
mov
cwtl
jb
mov
pusha
sbb
andb
insl
rcrl
pop
jno
xor
mov
sub
or
xchg
mov
insb
inc
or
push
ret
sub
cmp
jnp
loop
lock
jno
xchg
shlb
push
xchg
xlat
das
jb
in
pop
cmp
push
cmp
sub
cmp
lds
pop
xor
mov
sar
pop
inc
in
mov
or
push
shlb
repz
jbe
mov
mov
lock
orb
or
cli
mov
arpl
cmp
sbb
lock
mov
cmp
xor
adcb
dec
leave
mov
ja
leave
mov
lock
and
dec
xor
clc
lock
cmp
or
lock
jge
push
sbb
xor
mov
pop
mov
fstpl
xor
lret
leave
mov
xor
xor
lret
xchg
stos
sbb
aam
xor
test
pusha
out
jge
test
in
scas
stc
and
jmp
sbbl
mov
cmp
lds
imul
mov
cmpsb
add
xchg
orb
push
jle
and
icebp
jo
scas
dec
mull
leave
xor
push
pop
call
adc
cld
add
push
daa
fwait
out
jl
bound
cmp
fwait
mov
mov
xchg
cmp
sarl
fmull
sbb
xor
mov
dec
hlt
cwtl
hlt
arpl
cmp
dec
or
mov
cmp
dec
test
orb
mov
mov
test
fs
push
sub
inc
leave
cltd
push
mov
xor
jmp
push
mov
mov
mov
lods
mov
inc
cmp
lds
inc
test
repz
xchg
cmp
outsl
and
mov
rorl
adc
test
and
xchg
cmp
lds
xor
inc
int
or
mov
mov
xchg
mov
mov
stos
cmp
sarl
sub
out
jge
push
sbb
xor
fistl
dec
mov
cmc
or
xor
mov
out
push
mov
aas
cmp
sar
mov
sbb
cld
movsb
push
jnp
xchg
out
mov
cmp
cmp
inc
mov
mov
icebp
mov
mov
stos
sub
lods
fsubrl
mov
mov
enter
or
ja
dec
ljmp
out
mov
dec
sbb
xor
and
rorl
or
jne
and
dec
xor
lret
push
stc
daa
jbe
js
fcompl
scas
adc
das
out
push
cmpsl
shrb
jbe
ret
scas
int
push
arpl
mov
xor
pop
mov
and
fcoml
pop
ret
movsl
into
leave
sti
push
pop
xchg
jl
aam
jae
fstps
xor
add
int
jecxz
lock
xor
mov
mov
mov
ror
and
imull
mov
std
test
fwait
mov
leave
shll
sbb
das
andb
das
test
addr16
mov
fsubs
mov
je
cltd
jbe
arpl
loopne
in
xchg
loope
sbb
push
dec
jnp
dec
mov
sub
das
xchg
xor
cmpsb
mov
daa
jbe
xor
lock
xor
xor
or
xor
pop
test
xor
leave
pop
rclb
call
adc
orl
ret
pop
lahf
pop
movsb
cmp
and
int
inc
cmp
repz
jo
pop
mov
mov
fidivrl
jl
dec
fnstcw
sub
or
in
push
xchg
cmp
or
push
fcmove
icebp
idivb
or
mov
jnp
cmp
jb
loop
inc
jg
movhps
test
call
push
data16
scas
cmp
or
gs
cltd
xorb
add
js
or
shlb
inc
or
inc
ficoms
hlt
jae
and
mov
cmpsl
add
jno
sbb
cmpl
xchg
gs
imul
fwait
jnp
xor
add
sbb
mov
add
adc
aaa
mov
insb
hlt
mov
pop
pop
cwtl
jmp
mov
gs
ds
out
mov
xchg
fsubrs
or
repz
or
ret
mov
rcrb
movsb
add
adc
jo
xor
jns
xchg
mov
cmp
xchg
sbb
imulb
out
add
mov
pop
shlb
imul
xchg
cmp
dec
mov
ret
xor
aad
es
lds
jns
push
andnps
std
in
mov
dec
mov
addl
lods
dec
shlb
jne
and
out
xor
cs
push
sub
incb
inc
add
mov
push
cli
ffree
pop
add
fcomps
push
repz
adc
rcrb
std
lds
rcrl
cmp
xchg
mov
mov
xor
scas
test
inc
fcoml
arpl
in
test
xor
adc
mov
dec
movsb
iret
cmp
insb
test
roll
fwait
mov
xor
xchg
cmp
dec
adc
adc
jg
repz
mov
addr16
sbb
mov
fldt
dec
jp
insl
loopne
je
or
cli
mov
jl
xor
sub
cld
pop
int3
xchg
mov
cmc
sbb
imulb
lret
shlb
mov
cmpsb
mov
enter
jbe
jg
ss
cmpl
mov
mov
lcall
mov
xor
or
les
cmp
dec
cmp
mov
cmpsb
mov
popl
mov
leave
fisubl
cli
ret
lret
xchg
shlb
add
notl
aad
xor
lcall
xor
mov
add
roll
push
dec
sbb
sub
shll
mov
push
outsb
aas
cltd
xchg
mov
xchg
je
xchg
mov
imul
dec
jnp
ret
lcall
pop
dec
dec
mov
push
sub
cmp
cs
sub
inc
roll
pop
adc
jns
shll
fnstsw
mov
mov
fidivrs
loope
adc
pop
test
mov
out
inc
addl
js
jge
ret
xchg
mov
adc
xchg
cmpl
fst
sahf
xlat
jl
adcl
pop
jo
lods
sbb
push
adc
or
test
or
mov
xlat
sub
xchg
jns
dec
jno
sti
ja
pop
adc
popa
hlt
aad
adc
cmp
call
add
int3
mov
mov
jo
pop
dec
cmp
jns
xor
in
fsts
lea
adc
cld
jmp
push
sbb
enter
push
push
sub
lods
pop
lfs
shlb
or
popf
daa
xor
aaa
xchg
sub
loopne
pop
cmc
mov
stos
inc
inc
rcr
push
mov
insb
and
jmp
out
xchg
into
jp
jge
mov
cmc
sahf
pop
pop
cli
lret
xchg
mov
dec
movsb
xor
js
and
outsb
and
movsl
pop
ret
mov
push
xchg
fistpll
inc
and
mov
les
add
jg
data16
rolb
sub
cmp
int
xor
leave
jnp
scas
mov
rcrl
xchg
push
inc
lea
insl
inc
out
call
je
pop
xchg
xor
and
mov
loopne
daa
cmp
push
xor
add
addb
mov
inc
sub
cmpsb
gs
rcr
aaa
or
mov
ss
shll
testl
push
xor
aad
adc
pop
pop
jbe
mov
fdivrs
test
xlat
fiaddl
xor
mov
xchg
pop
stc
pop
std
cmpsb
notl
xor
lock
adc
mov
fdivrs
adc
out
inc
int3
or
pop
sbb
push
out
scas
and
movsl
xchg
mov
add
xchg
sbb
mov
sub
mov
arpl
out
jge
mov
sub
ja
subl
mov
sti
pop
xor
subl
into
shrb
in
mov
mov
fs
gs
adc
push
stos
pop
xor
ret
ret
dec
call
mov
mov
mov
rorb
shrl
cmp
inc
fdiv
or
push
lret
pop
sbb
ja
ja
loopne
popf
jns
sub
xor
in
mov
push
arpl
nop
popa
pop
mov
add
ret
mov
mov
int
xor
cmpb
fadds
xchg
jecxz
in
fnstenv
or
leave
inc
push
inc
aad
mov
or
xlat
or
pop
push
rcr
mov
add
stos
rol
mov
mov
sub
shl
pop
je
xchg
or
sub
dec
xlat
mov
push
das
adcb
sub
or
fidivs
orl
in
mov
out
andb
clc
inc
pop
and
jge
lods
lret
jecxz
cmp
mov
fidivrl
inc
add
xchg
jmp
stos
rolb
std
in
xor
mov
stos
gs
mov
inc
jno
inc
and
test
adc
pop
jno
xor
mov
bound
add
mov
call
addr16
dec
jp
fxch
pop
sub
jae
mov
les
push
data16
insb
bound
push
sbb
sub
dec
mov
cmp
xor
xchg
push
cmp
sbb
dec
loope
jp
add
addr16
xchg
lods
cmc
rcrl
out
aas
fcmovnu
fmuls
and
xchg
out
xlat
fisttpl
lods
rol
cld
pop
and
mov
loope
adc
int3
adc
pop
adc
insb
mov
adc
dec
loopne
les
aas
mov
mov
loope
imul
das
mov
dec
sbbb
and
xchg
and
dec
pop
shr
aaa
pop
add
mov
shl
mov
inc
test
outsl
push
sub
div
jp
sub
fnstenv
shr
or
movsb
pushf
xchg
adc
lret
fisubrl
mov
adc
bound
mov
nop
inc
repnz
adc
mov
pop
xor
cmpl
jmp
clc
mov
les
das
insb
fldt
lea
or
sub
xor
int3
cwtl
push
cltd
pop
mov
add
cltd
or
push
into
leave
enter
and
outsl
aad
xchg
and
clc
into
cltd
fistl
mov
dec
mov
mov
xor
pushf
in
mov
gs
jns
jge
xchg
imul
das
in
loope
repnz
and
das
mov
mov
int
mov
mull
icebp
addb
inc
lods
xchg
jmp
xorl
ljmp
das
mov
pusha
hlt
mov
or
jae
mov
imul
and
je
int3
lock
sub
sahf
add
in
inc
dec
inc
or
sub
mov
ffree
xchg
lea
xor
mov
aam
enter
mov
fidivl
iret
push
cmp
add
sub
mov
jb
or
jns
movsl
xor
inc
out
repz
mov
adc
pop
adc
shrb
adc
inc
or
lds
xor
mov
sub
testb
push
dec
lods
push
cmpsl
add
mov
shll
inc
lahf
loope
outsb
loope
std
lret
cmp
or
mov
popf
sbb
mov
cmpsb
lret
mov
jb
pop
dec
sarb
addr16
mov
fwait
insb
stos
mov
jno
sbb
into
jae
push
cltd
xchg
jmp
fidivl
mov
mov
xor
sbb
outsl
push
loopne
je
inc
xchg
stos
lods
xor
dec
push
rcrb
test
and
mov
ret
mov
insl
mov
adc
shrb
sbb
mov
ret
pop
repz
imul
int
stos
hlt
pop
inc
shll
in
jle
aam
jecxz
icebp
pop
cmp
testl
cli
test
std
xchg
test
cli
fcoml
insb
and
pop
inc
test
push
cli
sub
xorl
xchg
inc
xor
movsl
aam
fldenv
xor
iret
insl
jns
mov
jle
lods
aad
push
ja
lret
jbe
cmp
push
push
hlt
out
xor
dec
mov
add
gs
and
and
push
mov
mov
mov
sub
es
aaa
mov
sub
imul
jmp
mov
shrb
jne
call
mov
hlt
jbe
cli
xor
repz
shrl
lods
cld
add
sub
int3
outsb
mov
iret
iret
adc
inc
jae
add
sbb
xor
das
rorl
hlt
stos
sbb
popa
mov
add
stos
push
push
pop
repnz
mov
mov
leave
adc
out
cmp
lods
mov
enter
ss
int3
out
repnz
or
lds
jge
push
and
loope
mov
inc
mov
lcall
cmp
cmp
sub
sub
jmp
int3
cmp
cmc
test
inc
shll
and
and
adc
or
mov
stos
push
mov
xchg
mov
mov
imull
mov
pop
fisttps
dec
loope
xchg
outsl
jnp
dec
jg
cmc
clc
aaa
test
out
rcll
out
sub
fistl
mov
lret
adc
sub
push
sarl
imul
add
push
mov
icebp
pop
test
in
sbb
inc
mov
aad
xor
lahf
cltd
clc
js
xor
cmp
or
lret
pop
add
enter
xchg
mov
aam
mov
xor
rorb
mov
enter
popf
scas
xor
mov
aam
leave
cmp
mov
xchg
lahf
call
out
orl
or
push
dec
cmp
dec
or
arpl
mov
setno
outsl
sub
push
mov
icebp
in
mov
repnz
mov
lods
in
mov
pause
imul
push
adc
mov
mov
push
scas
cld
pop
pop
in
ret
push
xlat
push
stos
lock
xchg
sbb
jecxz
lods
mov
adc
repz
and
xor
mov
into
imul
daa
clc
xchg
in
gs
pop
cli
xor
mov
push
mov
dec
push
fcmovnbe
notl
and
imul
lods
or
lret
lcall
sbb
notb
sub
inc
mov
lret
psubb
xor
movsl
jle
ja
or
pushf
sbb
lods
add
wrmsr
loope
pop
inc
pop
xchg
jp
and
std
mov
or
aas
ss
jecxz
xor
hlt
imul
test
ss
mov
std
push
push
sbb
cld
test
dec
sub
sbb
out
xchg
addb
pop
aad
mov
add
adc
cli
mov
dec
push
add
sbb
dec
pop
lcall
jb
sbb
or
mov
add
adc
lret
call
xchg
test
sub
test
or
arpl
mov
adc
and
mov
dec
rolb
aaa
fcompl
mov
inc
lods
ret
das
push
mov
mov
aaa
scas
sbb
enter
xchg
int
add
xor
shrb
jge
mov
sub
jp
aaa
xor
imul
imul
imulb
push
or
push
mov
jae
in
xor
fbstp
and
outsb
cmp
sbb
sub
pop
lahf
push
hlt
sbb
insl
cmp
std
iret
mov
adc
addr16
cmpl
mov
push
leave
sub
xrelease
cmp
adc
lods
clc
mov
or
dec
sbb
hlt
cmp
xchg
xchg
iret
dec
xor
call
repz
jo
jl
add
cli
je
shl
dec
shlb
cmp
sbb
mov
aaa
leave
mov
cs
out
push
dec
test
jecxz
pop
insb
clc
inc
jle
cmpsl
xor
pusha
arpl
dec
test
aas
std
xchg
and
std
das
mov
imul
mov
mov
stos
push
je
sub
in
jg
xchg
sub
and
popf
lds
cmp
mov
sahf
cld
movsb
or
adc
or
cli
mov
lods
pop
fstpt
add
jge
jnp
and
lret
fcmovnbe
and
std
ss
sbb
js
scas
push
fcmovu
mov
mov
sub
or
fs
in
mov
aas
sub
es
hlt
nop
mov
xor
lods
pop
xchg
jo
movsl
lock
mov
jl
mov
je
imul
fildl
data16
inc
mov
test
mov
sub
popa
iret
addr16
push
and
les
sub
jl
les
jns
jg
ficoml
adc
or
mov
rcrb
rcl
inc
enter
mov
insl
data16
iret
inc
mov
mov
sub
or
cli
mov
mov
in
mov
ja
imul
repz
orb
push
xor
mov
fsubl
or
or
cmpsb
js
aaa
dec
mov
cmc
scas
inc
xorl
and
cmp
jmp
xorl
nop
aam
sub
cwtl
popf
xchg
int
jo
cmp
mov
arpl
dec
enter
push
xor
insb
ficomps
jne
out
sub
add
lods
and
in
sahf
cmpb
mov
add
add
adc
lea
dec
mov
pop
xor
test
xchg
add
and
loopne
cwtl
xor
cmp
shl
xchg
mov
repz
dec
lcall
out
scas
mov
or
xchg
fcoms
cli
mov
in
jl
jecxz
sbb
sub
in
fsubr
mov
jp
cmp
lret
mov
xor
mov
jmp
jmp
mov
push
loop
adcl
adc
jno
shlb
sahf
rolb
fdivr
rolb
lret
jae
xchg
and
jge
test
lods
sti
lods
rolb
rcl
xor
xor
std
fdivs
inc
jl
jb
sbbb
lods
fs
loopne
jge
and
int
pop
mov
icebp
pop
mov
in
dec
cmp
dec
clc
jmp
and
divb
scas
push
pop
roll
jnp
lock
cmp
cli
into
int3
cmp
mov
xor
sub
adc
pop
xchg
cmp
mov
ja
and
imul
sbb
leave
mov
xchg
inc
push
add
jp
add
push
mov
mov
jnp
mov
cmp
mov
popf
and
out
mov
or
sub
xchg
inc
pop
add
cli
xor
hlt
mov
js
xlat
pushf
inc
in
adc
sbb
xchg
dec
mov
xor
arpl
mov
or
pop
and
xchg
sbb
mov
mov
sub
dec
mov
add
neg
ljmp
xlat
or
scas
dec
dec
rolb
or
xor
stos
ds
adc
xchg
push
push
mov
sub
pop
fwait
jl
add
pop
sbb
sbb
gs
dec
loop
cmp
mov
jl
xor
out
cs
push
ret
insb
sub
test
pop
xor
stc
jne
mov
cs
lods
shr
mov
jo
imul
ss
pushf
pop
stc
or
mov
in
data16
or
fs
xchg
mov
imul
or
fisubrs
mov
movsl
mov
daa
fwait
sbb
popa
or
int3
lock
xor
or
cmp
sahf
jns
inc
cmp
add
repnz
mov
lahf
jmp
pop
xor
dec
adc
xor
ja
mov
leave
mov
test
xchg
or
aaa
mov
aam
mov
mov
adc
sub
ret
dec
arpl
push
mov
xlat
decb
and
mov
scas
sbb
decl
rolb
fsubl
aas
mov
icebp
stos
or
arpl
movsb
xor
dec
lds
rol
ror
std
jp
lds
rorl
out
ljmp
in
test
mov
sub
mov
xor
jne
jge
rcl
jl
mov
cmpsb
loop
jmp
xor
pop
aad
lcall
pushf
and
mov
inc
inc
push
push
stos
mov
cmpsb
pop
popf
mov
imulb
or
fdivp
push
outsb
xchg
mov
mov
jne
cmc
int3
out
roll
fsubrs
cmp
and
ljmp
push
jl
fucomi
ds
lea
dec
clts
jae
and
and
fstl
push
mov
cmp
andl
std
insb
fwait
push
jp
repz
mov
push
jns
sbb
inc
or
push
imul
mov
pop
cmp
push
dec
test
mov
mov
icebp
icebp
stos
sti
push
dec
mov
push
fsts
and
cmp
sbb
xor
test
repnz
das
push
loope
in
sub
shll
popf
or
push
mov
test
inc
imul
xor
cli
sbb
sti
cwtl
test
stos
push
fwait
hlt
xor
jne
sub
fistpl
jae
jae
adc
adc
lds
jmp
mov
aas
lcall
loop
jge
cmp
mov
int
aad
shll
or
cmc
js,pn
cld
dec
hlt
nop
ret
out
jle
pop
jo
testl
xchg
mov
cs
lock
sbb
jno,pn
push
test
add
xchg
popa
lods
xchg
push
rcl
mov
jg
inc
mov
jb
jge
scas
mov
mov
and
lret
cmpsb
dec
nop
lcall
rcrl
hlt
sahf
or
les
mov
icebp
and
hlt
imul
xor
mov
repz
jmp
mov
fistpl
pop
jno
repnz
adc
cmp
insb
push
inc
cmp
jl
sub
pop
sbb
sub
inc
or
xor
sub
mov
xorb
cmc
lret
lcall
pop
jg
ss
or
jge
adc
xchg
roll
jg
mov
jno
push
leave
cmp
gs
xor
das
loope
sahf
std
cmp
sbb
rcr
pop
sub
divb
lds
fwait
cmp
std
movsb
cmpsl
test
aad
mov
out
dec
or
paddd
into
enter
in
xchg
sub
stc
add
or
xor
aam
xor
hlt
pop
push
cs
inc
js
fsubs
add
push
sbb
popf
loope
bts
enter
insb
or
cmp
rcll
pop
dec
and
inc
xor
jmp
mov
int3
fsts
adc
dec
push
lods
xchg
mov
pop
sbb
xchg
mov
mov
or
push
clc
inc
in
das
jb
xchg
out
pop
inc
push
push
pop
sbb
xorb
cmpsb
je
inc
dec
aam
dec
and
cli
xor
test
sub
lret
mov
stos
cmc
adc
mov
pop
dec
out
insb
std
repz
mov
cmp
scas
inc
mov
pusha
and
add
lods
dec
scas
jno
lahf
sub
or
mov
push
xchg
or
int
mov
mov
cmpsb
or
repnz
mov
sbb
sbb
clc
je
test
mov
and
mov
lret
push
push
xchg
and
mov
mov
sbb
dec
dec
sub
cmp
loop
mov
xor
adc
lds
leave
pop
add
out
stos
fs
subl
mov
mov
inc
data16
and
mov
mov
or
add
and
fnstenv
jno
mov
jnp
mov
scas
push
xor
dec
add
mov
or
xchg
sbb
pop
add
xchg
inc
test
out
mov
xor
sub
mov
icebp
push
or
les
jg
rolb
xchg
xor
arpl
jno
ja
mov
js
dec
arpl
and
pop
enter
mov
jmp
scas
hlt
adc
jle
arpl
xor
mov
push
gs
dec
jl
xor
jge
stos
or
int3
mov
push
pop
lret
push
leave
ja
leave
sbb
push
fistl
in
adc
jecxz
inc
add
add
pop
repnz
sub
hlt
aas
filds
sti
cli
sti
or
rorb
in
sub
mov
les
mov
and
pop
mov
lcall
cmp
or
lret
insb
xchg
xor
dec
xchg
lods
insb
lea
push
and
popa
mov
js
push
pop
movsb
mov
mov
mov
movsl
jo
or
std
cli
bound
ja
vpinsrw
or
aaa
in
cmc
dec
mov
push
outsl
in
push
flds
int3
rclb
lock
cmp
nop
ljmp
lahf
ss
imul
sub
mov
xchg
insl
leave
addr16
orl
dec
dec
lahf
sub
cs
push
rol
xor
pmaddwd
push
inc
fs
nop
fdivp
mov
or
sub
add
and
xor
and
inc
js
pusha
pop
adc
mov
scas
fsts
cmp
push
roll
push
sbb
xor
rcrl
hlt
mov
clc
fisttpl
mov
in
loopne
ss
js,pn
lret
pop
cs
mov
repnz
sbb
sbb
mov
inc
add
sti
jae
orl
xchg
dec
xlat
enter
jl
lods
mov
out
push
sub
adc
sub
cs
out
sub
xchg
out
cmpsl
jmp
pop
out
dec
insl
jecxz
jo
lret
and
mov
add
mov
push
lcall
inc
and
dec
fsubs
shlb
mov
pop
scas
js
xor
bound
in
mov
xchg
in
pop
jl
adc
clc
or
mov
sar
into
cmp
xor
dec
cmp
leave
lods
mov
outsb
mov
mov
cmp
imul
ljmp
mov
mov
xchg
sbb
jge
inc
fbstp
rcrb
jg
pop
add
xchg
mov
pop
sahf
fstpl
mov
push
and
ljmp
repnz
data16
pushf
jge
pop
cmp
sbb
loope
or
xor
inc
jg
jge
sbb
cmc
enter
mov
mov
adc
ret
leave
in
xchg
xor
lahf
in
jo
jae
and
push
stos
enter
cmpsb
das
push
push
xchg
inc
inc
adc
sub
iret
shll
scas
cmp
xor
ret
stos
je
adc
mov
pshufw
sbb
and
lahf
mov
scas
jl
fisttpll
insb
popf
imul
cmp
nopl
std
pushf
call
mov
fadd
sbb
insb
repnz
adc
int
ljmp
sub
lret
or
in
jo
push
mov
push
incb
mov
sbb
arpl
or
cld
jp
mov
jne
lret
pop
rcll
int3
or
clc
jg
std
push
in
push
push
push
insl
mov
fcompl
out
push
add
icebp
lods
push
arpl
imul
adc
cmpsl
test
push
pop
sbb
mov
sub
adc
jo
xchg
jo
xchg
popa
mov
fisttps
jl
adc
ds
push
mov
and
les
in
les
ljmp
and
push
mov
rolb
inc
mov
fdiv
dec
ret
loop
cmp
aas
mov
adc
in
popa
sub
roll
mov
cmpsb
dec
pop
xor
mov
les
enter
adc
stos
out
push
add
cwtl
mov
xchg
stos
cmpl
mov
scas
mov
xchg
mov
fistpl
shll
iret
add
jl
or
test
xor
inc
or
add
shrb
inc
jo
sub
push
adc
divb
iret
popf
and
sub
stos
aam
sub
shll
lea
dec
pop
insl
arpl
test
loope
sbb
sbb
fstps
push
xchg
lods
adc
insl
aad
int
and
shlb
subps
in
inc
mov
call
imul
ss
mov
pop
stc
sub
popa
scas
pop
dec
or
or
mov
insb
mov
pop
mov
inc
ds
insb
or
xchg
int3
xor
sub
xchg
das
lcall
cmp
cmp
push
insl
iret
addb
push
hlt
aad
stc
push
and
jb
lfs
mov
pusha
sub
pop
xchg
push
shll
repnz
sti
mov
jg
push
push
mov
sub
dec
sub
sub
add
leave
and
mov
sub
mov
dec
push
sub
dec
sub
mov
sub
push
push
mov
mov
call
and
call
xor
xor
and
dec
or
call
push
mov
sub
or
dec
push
and
mov
sub
sub
xor
push
push
call
sub
and
xor
add
or
xor
lea
push
or
xor
add
xor
push
sub
xor
xor
mov
and
push
mov
mov
sub
sub
push
inc
add
add
or
push
or
add
call
xor
add
and
mov
sub
add
or
and
mov
sub
dec
shr
xor
add
xor
jmp
xor
inc
and
add
or
dec
lods
inc
add
xor
add
or
xor
inc
sub
mov
and
and
dec
je
xor
dec
xor
xor
jmp
mov
mov
sub
add
inc
or
xor
sub
sub
dec
mov
jne
xor
xor
add
sub
pop
add
pop
add
xor
pop
sub
sub
and
jmp
