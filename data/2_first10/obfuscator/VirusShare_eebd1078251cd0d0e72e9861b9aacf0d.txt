push
push
add
lods
lods
mov
jg
add
outsb
xchg
stc
subl
pop
fidivl
xor
jb
pop
fidivs
imul
adcl
cmp
lret
or
fidivs
inc
or
inc
imul
addr16
and
push
mov
inc
aas
jbe
inc
popf
mov
inc
sti
popf
xchg
adc
ret
jmp
imul
adc
jmp
out
adc
jecxz
dec
pop
inc
xor
mov
sbb
sbb
push
or
insb
xchg
je
lret
out
mov
js
in
and
inc
hlt
shr
mov
sbb
ljmp
movsl
mov
push
push
mov
addr16
mov
jp
mov
lea
out
add
mov
flds
mov
sbb
cs
fiaddl
mov
call
jb
mov
loop
pusha
stos
mov
shl
lea
xchg
mov
clc
bound
or
pop
ljmp
pop
cmpsb
inc
adc
mov
pop
sarb
push
nop
ret
pop
jl
outsl
pop
fidivl
jmp
in
fstl
sub
add
sub
push
pushf
sub
ret
and
das
jle
dec
xor
jle
dec
ds
call
pop
push
mov
adc
or
mov
sbb
add
sbb
sbb
in
sub
out
push
jmp
call
scas
mov
jmp
shll
mov
xlat
shll
std
sbb
cmc
and
subl
out
test
lcall
xor
jg
sahf
xchg
stos
outsb
push
xchg
mov
push
dec
jecxz
push
stos
negb
push
or
lret
push
addr16
push
lds
dec
adc
push
mov
or
mov
mov
cmp
mov
jb
cmp
jb
cmp
jb
cmpw
je
cmp
jae
mov
mov
cmp
jne
pop
pop
ret
int3
push
mov
sub
andl
push
push
push
pushl
call
cmp
jb
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
add
cmp
mov
mov
jbe
cmp
movswl
mov
jae
mov
cmp
jae
mov
cmp
jb
mov
add
cmp
jb
mov
mov
add
mov
lea
mov
mov
mov
movzbl
mov
movzbl
sub
jne
mov
mov
mov
sub
mov
cmpb
je
incl
mov
mov
mov
movzbl
mov
movzbl
sub
je
test
jl
jle
xor
inc
test
je
mov
inc
cmp
mov
jb
mov
pop
pop
pop
leave
ret
mov
mov
add
mov
jmp
xor
jmp
push
mov
sub
push
xor
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
mov
push
push
mov
mov
mov
pop
pop
lea
mov
cmp
jb
lea
cmp
jb
lea
cmp
jb
mov
push
pushl
call
mov
lea
push
pushl
call
mov
lea
push
pushl
call
mov
mov
cmp
jbe
mov
lea
push
push
call
push
pushl
lea
push
mov
lea
call
add
xor
lea
mov
add
mov
inc
add
cmp
jl
cmpl
jbe
mov
lea
push
mov
sub
push
push
call
mov
mov
lea
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
mov
push
sub
push
push
call
push
push
pushl
call
push
push
call
push
mov
push
push
call
push
pushl
push
call
mov
movzwl
push
pushl
lea
push
call
add
pushl
mov
push
push
pushl
mov
pushl
pushl
call
pop
pop
mov
pop
leave
ret
add
add
or
cmp
fmul
sahf
arpl
pop
mov
lret
mov
scas
xor
je
loopne
rcl
mov
xor
cmp
mov
in
in
push
xchg
rorb
cmp
pop
mov
xchg
shlb
or
in
shll
jg
or
xchg
and
xchg
jns
inc
lret
and
or
pop
add
btc
nopl
adcb
cmp
ficoml
xor
adc
mov
adc
mov
scas
adc
ret
addr16
dec
outsl
call
ret
push
xchg
sbb
and
dec
out
jmp
fwait
inc
jae
mov
insb
lret
push
pop
jg
push
mov
movsl
iret
push
jns
jnp
xlat
lret
daa
push
xor
icebp
jg
icebp
push
push
add
pop
fcoms
sub
imul
pop
and
mov
pop
loope
push
pop
popf
rol
movsl
aam
xchg
add
sbb
mov
pushf
inc
add
ss
add
mov
dec
add
pushf
push
add
ret
add
rcrl
add
sub
add
and
neg
es
cmpsl
dec
mov
mov
pop
mov
mov
shrl
out
aam
fcoml
hlt
cld
xor
or
mov
icebp
jo
push
js
js
xchg
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
push
mov
inc
pushf
rcrl
lea
out
das
pop
push
dec
jns
sub
test
loop
mov
sub
scas
pop
xor
icebp
cmpsb
int
js
into
outsb
mov
jno
ret
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
cmp
and
pushf
insl
cmp
sub
sub
popa
inc
shll
cmc
pop
pusha
sub
xor
lret
into
add
fwait
pop
jns
rolb
call
mov
push
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
xor
divb
xor
sub
ljmp
add
xchg
into
mov
jg
fcmovb
ds
into
and
ja
jo
sbb
add
mov
xor
lock
ds
enter
arpl
sbb
shll
jns
jl
popa
cmpsb
cmp
cwtl
pop
dec
mov
js
loopne
pop
sarl
mov
adcl
pop
lods
jecxz
sub
jmp
push
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
ljmp
sub
push
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
dec
push
and
repz
jno
ret
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
inc
mov
jnp
or
mov
mov
sar
inc
test
jno
ret
movsl
sbb
addr16
rorb
pop
outsb
int3
xchg
inc
push
repnz
ret
jl
cltd
xchg
mov
shll
xchg
jno
ret
movsl
sbb
aad
sbb
push
imulb
cld
ljmp
adc
movsl
aaa
xor
xchg
jno
ret
movsl
sbb
sbb
je
add
xchg
fimull
stos
shll
out
sub
or
xchg
jno
ret
movsl
sbb
push
imul
test
sbb
addl
xor
dec
sbbb
stc
xor
pop
movsl
sbb
mov
push
push
xchg
jno
ret
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
push
sbb
fistl
fmull
jns
int3
mov
mov
mov
sbb
je
popa
jl
cld
xor
je
into
inc
and
add
das
and
pop
cli
mov
ljmp
add
mov
push
into
and
insl
int
pop
mov
adc
mov
inc
stc
hlt
pop
sbb
pop
pop
jbe
cmpsl
add
mov
arpl
leave
sub
repz
dec
js
je
pop
fwait
popf
push
xor
jne
out
in
iret
xor
addl
sbb
mov
push
mov
mov
jo
and
les
sbb
sub
cli
push
push
push
inc
pusha
mov
dec
cwtl
push
addl
or
mov
rcll
sub
adc
jb
stc
sbb
mov
push
adc
mov
xchg
aas
shll
cmp
jg
mov
mov
rcr
and
xchg
outsl
mov
lahf
inc
inc
or
inc
mov
arpl
mov
lods
and
push
jl
sbb
lret
in
mov
aam
mov
pusha
sbb
andb
imul
pop
pop
sub
enter
in
cltd
and
aam
aas
mov
les
adc
push
or
les
adc
pop
or
and
aad
es
pop
insb
push
inc
gs
xchg
cltd
or
daa
imul
sub
jg
test
or
jne
fucom
ror
daa
popf
shlb
cmp
cmpsl
xor
and
aaa
test
daa
sub
mov
dec
js
arpl
xchg
inc
leave
sbb
sbb
xor
popf
sub
and
lret
int
mov
scas
cmp
pop
mov
ret
bound
cmp
inc
hlt
out
test
std
push
leave
sub
sbb
js
jg
ljmp
iret
xor
fst
je
bound
mov
icebp
and
loop
insl
movsb
sbb
sub
jge
lea
pop
out
nop
ljmp
cs
adc
arpl
cmp
mov
loop
jno
fists
stos
sub
mov
pop
xor
xchg
aad
mov
push
insb
cmp
lret
push
insl
es
imul
stc
dec
push
pop
gs
mov
stos
shll
stos
negb
out
or
aaa
cmp
cmpl
ljmp
int
sbb
and
rorb
mov
sub
xor
pop
std
stos
imul
cmp
fndisi(8087
sub
and
xchg
xor
adc
mov
add
xor
out
mov
shlb
test
pop
jl
or
mov
mov
inc
sbb
or
inc
leave
fdivrs
fidivs
lea
gs
fsts
test
and
pop
xchg
hlt
lds
icebp
or
fmuls
mov
xchg
or
sbb
xor
scas
stc
mov
sub
ret
add
jb
mov
lods
mov
les
dec
mov
int
sub
adc
cs
aad
ret
std
popf
mov
data16
inc
les
adc
rclb
xlat
les
fisubl
jle
xchg
sbb
add
fistl
pop
mov
stc
test
sbb
imul
push
adc
jo
jae
aaa
aaa
into
dec
push
addr16
push
das
lock
out
adcl
mov
mov
jne
push
addr16
std
out
repnz
adc
jmp
enter
dec
cmp
mov
xor
and
cli
push
xchg
fadd
push
clc
popf
cmp
test
sbb
mov
and
test
xchg
push
stc
xchg
aaa
sbb
push
sub
sbb
clc
iret
pop
inc
xchg
gs
xor
jo
and
dec
stos
hlt
cmp
fisttps
add
std
ja
mov
dec
sub
or
mov
inc
push
jo
sbb
cmp
mov
and
scas
push
dec
cmp
jo
mov
in
push
push
jmp
arpl
dec
shlb
insb
adc
mov
or
inc
sub
and
cmp
add
fcompl
and
sarb
inc
fcmovu
in
mov
mov
sbb
or
add
insl
pop
cmc
popa
and
push
ret
shll
aas
mov
std
jecxz
jl
dec
xor
out
repnz
push
into
call
fldt
mov
lea
mov
or
scas
dec
iret
daa
push
ficompl
and
push
icebp
add
mov
cli
outsl
or
lods
roll
shll
dec
rcll
jne
test
mov
aad
xchg
lret
lea
pop
jo
lds
jnp
mov
fisubs
fadd
sub
loopne
clc
subl
aad
lcall
xchg
pop
lods
and
call
loop
popa
add
pop
adc
shlb
insb
adc
out
data16
adc
ljmp
jl
xlat
mov
cs
cmp
into
lgs
call
mov
inc
in
mov
or
fidivl
and
sub
fxch
push
out
mov
ja
xchg
and
setl
out
daa
lret
xor
pcmpeqw
inc
and
pop
fnstcw
into
xor
or
inc
repz
in
and
mov
cld
push
xor
outsl
sbb
insb
mov
and
in
stc
sbbb
jae
lods
add
mov
je
repnz
jno
mov
iret
cmp
imul
xchg
push
jge
xchg
push
icebp
jp
push
and
jno
lret
push
fcom
mov
adc
push
adc
imulb
adc
shlb
push
orb
sti
in
fsubrl
xchg
fsubs
emms
mov
fisttpll
lret
mov
or
push
inc
sbb
xchg
sbb
cmp
bound
imul
jb
test
cmpsb
push
sub
pop
push
out
ret
push
test
testb
and
notb
sub
push
mov
jae
icebp
nop
xchg
mov
inc
out
jmp
test
js
popa
pop
cs
xchg
enter
adc
mov
mov
stc
mov
stc
xor
cmp
loopne
push
dec
aas
sub
mov
pop
mov
test
clc
jge
addr16
inc
mov
hlt
aad
xor
and
negb
lahf
shrl
dec
push
repnz
mov
rcl
inc
out
cmp
movsl
movmskps
xor
sub
cli
push
xchg
lock
ret
mov
mov
je
or
and
cli
je
pusha
push
lret
orl
divb
stc
lahf
ret
mov
cmpsb
test
and
jl
push
jae
insl
mov
test
xlat
cmp
out
gs
cmp
iret
shld
int
fists
inc
out
cmp
xchg
repz
clc
cmp
or
xchg
outsl
loopne
pop
movb
jle
cmpsl
xchg
sti
inc
pusha
adc
lods
pushf
div
sub
sarl
fwait
scas
dec
jge
jbe
cmp
fwait
xchg
and
sub
cmp
icebp
arpl
fwait
or
or
pop
fstps
shr
nop
jb
scas
ds
jae
jb
hlt
pushf
xchg
dec
push
xchg
mov
add
roll
push
in
fdivrs
and
jp
inc
inc
in
lahf
shr
arpl
jecxz
lods
in
push
les
fbstp
inc
xlat
sub
jle
pusha
mov
pop
mov
mov
stc
popl
stos
lea
xchg
dec
int3
xor
add
mov
pushf
popf
xchg
sub
and
add
sub
add
test
movsl
push
sub
in
dec
std
push
or
fldenv
push
adc
pushf
ret
xchg
aam
adc
sti
jl
movsl
xchg
mov
lahf
xorb
cmp
and
leave
add
jmp
mov
sub
sub
aam
dec
test
sub
cmp
push
xlat
adc
test
sub
arpl
rcrb
nop
adc
push
adc
cmp
mov
mov
arpl
push
pop
and
dec
cltd
mov
add
adc
jmp
sbb
aad
xchg
repnz
fcoml
call
fstl
movb
pushf
popa
lret
or
lds
adcb
xchg
adc
or
cmp
ja
data16
lods
push
mov
xchg
call
xor
mov
fcoms
inc
xor
push
push
sti
enter
push
int3
ja
lods
ss
fstpl
sbb
popf
mov
ja
adc
cmp
cmp
lret
or
or
inc
push
mov
les
push
sbb
push
mov
std
push
fs
add
pop
lcall
inc
fs
leave
xor
xlat
xchg
dec
out
mov
sbb
clc
inc
or
cltd
punpckhbw
pop
cmp
pusha
or
pop
loop
lods
cwtl
les
adc
lds
cvtps2pd
clc
aad
test
xor
iret
xor
arpl
test
mov
hlt
adc
insb
pushf
jle
daa
pop
lcall
mov
testb
sub
xchg
pop
cltd
lock
dec
push
inc
data16
popa
ljmp
scas
dec
pop
mov
imul
mov
inc
sub
pop
js
sarl
xchg
in
loope
adc
push
dec
sahf
enter
imul
pop
hlt
jg
or
dec
pop
jbe
xor
pop
cld
mov
xor
mov
xchg
sti
adc
lcall
and
ds
cmp
jmp
pop
rcrb
dec
lods
mov
xchg
ds
enter
lods
dec
or
push
das
repnz
ja
aas
rclb
popw
addr16
lods
adc
out
std
pusha
dec
sbb
repnz
aas
in
sbb
jecxz
movsb
jl
sub
rcll
fidivrl
addr16
rcrb
out
out
mov
and
leave
xor
sub
mov
sub
pushf
hlt
testb
test
sbb
test
subb
scas
insl
bound
pop
je
and
sbb
arpl
loop
ja
stc
mov
xlat
nop
ret
mov
mov
pop
out
dec
outsb
dec
in
rcrb
out
out
mov
ja
sbb
and
mov
ljmp
xchg
sbb
jo
or
sbb
xor
xor
adc
sbb
pop
scas
and
fimull
addr16
add
scas
lret
cmp
or
test
loope
mov
push
jge
repnz
and
mov
loopne
inc
sub
cmc
cli
enter
cli
daa
popa
push
push
lret
mov
test
xor
lds
loope
add
push
int
add
jmp
std
sbb
mov
and
cmpsl
lds
mov
pop
push
push
setno
push
mov
push
push
push
sbb
lods
and
lea
pop
cmc
popf
lea
push
out
arpl
push
js
sti
int3
jecxz
fs
pop
dec
sbb
mov
test
out
shlb
popf
xchg
push
ret
push
mov
sub
daa
xor
rclb
cli
lret
in
sub
add
dec
mov
imul
cmp
es
mov
mov
and
pop
jne
jl
js
and
loopne
popa
push
shrb
into
testl
sbb
or
dec
repz
dec
sbb
or
sub
push
lahf
jg
xchg
fsubs
das
mov
dec
scas
dec
xor
mov
lret
data16
mov
jle
test
pop
mov
es
jne
inc
pop
bound
out
int
cmp
jge
aas
pop
test
mov
sbb
jmp
mov
cmp
cwtl
sahf
pop
mov
cmpsb
mov
cld
fnstcw
add
mov
les
sbb
mov
dec
push
pop
cld
pop
sbb
les
jmp
cltd
mov
pushf
mov
loope
or
add
pop
enter
in
roll
xor
push
rcrl
cltd
cmp
jb
cmp
fdivrl
mov
movsb
insb
sub
xchg
cmp
jge
cmpb
repnz
mov
xlat
shlb
add
scas
jmp
divb
push
js
bound
outsb
and
mov
clc
mov
inc
xchg
dec
outsb
add
inc
aas
cmp
ljmp
adc
xchg
or
adc
outsl
inc
jne
adc
push
test
jne
das
loopne
mov
js
lcall
xorl
pop
sub
iret
aad
push
inc
ficomps
jmp
xchg
aad
popa
movsb
and
flds
or
orb
sarb
inc
scas
sbb
jb
test
rolb
cs
push
ret
xchg
cmpl
push
jmp
push
into
xor
sbb
sub
aad
daa
xchg
loopne
mov
jbe
dec
call
add
data16
push
and
rorl
sbb
sarl
xorl
cmpsb
in
les
mov
mov
bswap
outsb
mov
ds
aaa
mov
pop
lcall
mov
jmp
jne
loop
cmp
mov
jns
bound
xor
sti
lahf
sbb
cltd
sarl
sarb
scas
xadd
cltd
in
xchg
mov
out
push
xlat
mov
dec
cwtl
jo
rcrb
dec
fucomp
test
daa
push
mov
push
add
sub
scas
or
and
iret
fistps
das
mov
lcall
mov
pop
mov
cmpsb
jno
and
xchg
bound
test
roll
divl
addr16
mov
xor
add
push
mov
sbb
outsb
dec
xlat
sub
mov
mov
shll
push
insl
dec
mov
cld
loope
jmp
in
cs
movsl
in
ror
jg
test
les
pushf
mov
mov
jp
aaa
xchg
neg
mov
cmp
jp
mov
sub
mov
jp
das
xchg
xor
xor
xor
dec
aad
adc
xchg
mov
std
push
lds
cmc
std
pop
push
mov
pop
push
pop
lds
jo
sub
inc
sub
ret
sub
jle
cld
xor
jb
hlt
fiadds
jne
jne
fcompl
inc
icebp
aad
aam
dec
fimull
stos
imul
cmpsb
in
sti
xor
xor
xor
dec
aad
and
lret
scas
adc
es
cmc
lret
aad
frstpm(287
pushf
ret
xor
jmp
xlat
dec
insb
ljmp
pop
minps
pop
mov
mov
lea
dec
and
xchg
sbb
out
ret
add
mov
dec
movsl
xchg
mov
sub
insb
and
dec
or
dec
pop
data16
sbb
mov
ret
adc
in
sub
mov
mov
adc
arpl
inc
add
mov
pop
fs
sbb
cs
or
inc
mov
push
or
or
inc
cmp
sbb
pop
mov
icebp
mov
sbb
and
pop
fsub
sub
sbb
dec
sbb
push
andl
add
fsubr
cmpsl
jl
sbb
mov
inc
cmpsl
mov
fistps
lret
imul
pop
and
outsl
push
into
inc
das
stc
stos
sub
sub
jmp
sti
clc
push
mov
int
loop
cld
scas
dec
sub
jle
sahf
push
inc
push
push
movsl
dec
test
jl
es
and
scas
push
dec
std
add
adc
pop
push
xchg
push
adc
rol
jmp
lahf
aaa
jp
or
fbld
sbb
and
pop
mov
psubusb
aaa
jae
je
mov
aam
fld
cld
mov
dec
leave
add
arpl
hlt
lock
inc
pop
loop
dec
xchg
mov
lea
repz
sub
and
jnp
out
push
movsl
mov
lahf
cwtl
cmp
enter
mov
in
push
pop
lret
cmpsb
mov
andl
cmp
xchg
push
lahf
fwait
mov
sti
pop
aam
test
or
sub
dec
aam
das
test
repz
jb
addr16
add
mov
jmp
mov
add
jp
ret
inc
push
mov
loope
mov
bound
ljmp
cltd
lcall
cs
fdivs
mov
popa
sub
cmp
sar
xchg
cmp
clc
inc
pop
imul
sti
ja,pn
inc
inc
xlat
mov
cmp
sbb
test
mov
movb
mov
rol
mov
lcall
scas
lret
in
pop
mov
pop
inc
call
test
sub
notl
shll
arpl
in
popa
xor
in
pusha
xchg
test
outsb
inc
test
insb
add
xchg
loopne
pop
lret
pop
or
decl
mov
mov
pushf
dec
sbb
out
stos
cmp
inc
mov
repnz
push
andb
add
int3
fsub
shlb
sbb
jae
inc
repnz
outsl
lret
xor
pop
xchg
jne
int
ljmp
fsubl
jbe
sbbb
arpl
out
pop
and
xchg
cmpl
sbb
pop
inc
and
scas
scas
sub
cmp
cmp
cwtl
adc
hlt
out
xorb
pusha
xor
popa
xchg
std
adc
inc
aad
adc
das
xchg
filds
jb
sbb
adc
je
aas
imul
popa
jp
dec
add
ja
adc
dec
loopne
imul
jnp
out
adc
inc
cmc
xchg
cmc
sub
jge
push
testb
jns
daa
cwtl
add
push
iret
mov
hlt
cwtl
inc
mov
frstor
sti
arpl
stos
shrl
or
adc
insl
cmp
and
xchg
loopne
imul
imul
js
out
nop
add
adc
cmp
in
mov
stc
call
loopne
imul
pop
lods
inc
aad
rorl
or
testb
and
push
mov
add
fsubs
adc
xchg
or
repz
adc
xchg
mov
scas
shlb
repnz
or
inc
sub
push
dec
cld
pop
inc
test
adc
stos
les
in
inc
in
cwtl
scas
adc
pusha
push
pop
das
sub
movsb
iret
inc
call
cltd
jbe
nop
jle
inc
dec
leave
xor
out
or
mov
push
fnstenv
enter
dec
add
sub
jg
fcomp
sbb
fdivrl
hlt
mov
mov
pop
add
add
push
xor
popa
sbb
enter
outsl
rclb
jmp
in
mov
enter
testl
sahf
insb
pop
mov
lret
inc
outsl
mov
mov
sub
xchg
xor
movsb
dec
cmp
add
push
lods
cmp
enter
xchg
outsl
adc
cmp
ja
mov
movsl
mov
jb
xchg
lcall
xchg
jbe
mov
adcb
dec
xor
jns
cltd
insl
in
insl
out
popa
add
das
pop
mov
cwtl
popa
fcoms
and
or
push
adcb
rcr
xchg
pop
push
pusha
adc
das
sbb
jne
pop
in
dec
xor
nopl
and
jmp
scas
sti
mov
add
pop
adc
shlb
sbb
adc
mov
hlt
aad
mov
lds
pop
and
xor
jo
mov
lret
shll
pop
lods
loopne
jbe
stc
cmp
bound
mov
adc
add
mov
push
dec
push
jmp
mov
add
lea
sbb
or
and
stos
nop
gs
lock
sub
popa
mov
out
in
adc
pop
sub
cld
jns
je
aad
cltd
scas
stc
push
pop
ret
cli
popf
and
mov
xchg
jno
ret
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
jle
xor
pusha
push
lea
sbb
test
mov
jmp
add
pop
jne
add
pusha
fldt
and
mov
and
pop
cmc
stos
imul
add
push
add
mov
adc
ds
jne
inc
ss
scas
cltd
jl
test
push
lds
xlat
iret
test
fimull
subb
sub
and
xchg
jno
ret
movsl
sbb
pop
push
dec
jo
push
jnp
mov
adc
bswap
mov
or
dec
inc
movntq
xchg
jno
ret
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
loope
xchg
aam
ljmp
out
inc
xor
sbb
inc
xchg
decl
fimull
jmp
cs
push
in
jnp
mov
xchg
push
std
stc
mov
scas
repz
xchg
mov
mov
scas
jp
push
xchg
cmp
cltd
xchg
inc
fidivl
pusha
out
fcoms
shrb
cmpsb
shll
xor
pop
std
and
push
cmpb
cmp
cmpsl
or
out
push
repz
xchg
pop
and
clc
and
push
sbb
sub
xchg
add
lods
jp
out
sbb
int3
xor
inc
iret
mov
sbb
stos
cmpsl
es
pop
sub
pushf
rcrb
dec
inc
sbb
je
jbe
jmp
mov
in
imulb
or
fidivl
dec
test
inc
inc
std
mov
adc
scas
mov
jae
mov
push
fld1
lea
lret
and
ret
test
and
iret
mov
das
icebp
or
icebp
xchg
sbb
pushf
gs
leave
aam
lds
jno
push
cmc
mov
scas
jecxz
cmpsb
push
jg
test
add
and
leave
xchg
aas
adc
mov
xchg
mov
fs
add
out
cwtl
aad
mov
mov
jg
ror
in
cli
xchg
pop
mov
jl
mov
and
test
repz
cli
leave
lea
fst
jge
xchg
adc
mov
inc
and
jno
sbb
xchg
adc
es
mov
lret
add
gs
add
push
ds
inc
mov
dec
call
rorl
fcoms
lret
sub
je
and
aas
not
stos
pop
jge
xchg
test
sbb
shll
std
mov
sub
jp
scas
shrb
dec
xchg
dec
int
add
mov
cwtl
aam
icebp
loop
rorl
movsb
jno
into
bound
xor
std
push
fdivrs
mov
adc
inc
or
mov
mov
stos
cmp
mov
jle
push
or
in
mov
cmpsl
pushf
fs
andb
mov
mov
adc
and
ja
in
cmp
jecxz
mov
out
mov
stos
scas
add
mov
mov
push
add
jmp
ja
inc
cmpsl
shl
pop
pop
inc
fiaddl
in
xor
push
dec
aas
fimuls
outsl
adc
add
jae
fnstcw
in
insl
inc
mov
fs
adc
pop
cmp
nop
loop
loopne
js
mov
daa
hlt
sbb
pop
xlat
mov
pop
fcmovnbe
loope
dec
imul
sub
sub
sub
mov
hlt
data16
enter
push
popf
sbb
loopne
sub
sbbl
dec
jp
outsl
cmpsb
cwtl
inc
insl
out
inc
add
jecxz
xlat
push
push
stos
in
lea
add
jo
pop
call
fisubl
inc
pop
adc
jmp
rep
cmpsl
insl
andb
stc
cmp
fldpi
mov
mov
jl
jno
ret
sbb
mov
mov
mov
sahf
packsswb
xor
push
in
loope
fisubl
inc
psubsw
cli
std
or
jle
xor
and
aaa
mov
ds
pop
leave
clc
addr16
and
mov
orb
push
pop
movsl
pop
adc
fsts
test
sub
xchg
mov
add
ret
movsl
out
and
call
shll
push
cld
inc
das
fisttpll
add
sub
jmp
and
sarl
mov
int
mov
add
leave
push
loopne
cld
xor
push
out
sahf
inc
xchg
and
les
je
jmp
push
stos
dec
rcll
xchg
dec
out
std
dec
jle
popa
add
nop
sbb
aas
dec
jae
ret
adc
inc
or
nop
jae
inc
cld
mov
push
sbb
xchg
pop
mov
jbe
fildl
sbb
or
push
enter
jnp
mov
divb
push
xchg
lret
jno
lods
ret
ret
aaa
ja
dec
rcl
mov
inc
sub
dec
outsb
xor
xchg
fwait
dec
mov
pop
lea
dec
movsb
sub
scas
pop
add
into
pop
aad
cmpsl
leave
movsl
push
data16
in
test
enter
xchg
mov
xor
push
call
fistl
mov
mov
inc
adc
pop
int
xchg
lret
dec
clc
rcrl
out
ljmp
insl
cld
cld
popf
push
xor
add
xchg
aaa
or
lds
fdivl
clc
fisttpll
addr16
popf
xchg
and
jno
sbb
mov
rorb
nop
push
or
mov
js
adc
pusha
ret
aam
and
adc
imul
xor
pop
shlb
sbb
lea
ret
fidivrs
sub
fucomp
sbb
les
fucomi
cmp
fmuls
mov
xor
out
xchg
inc
adc
jno
es
imul
pop
ret
int3
push
arpl
inc
cltd
clc
pop
cmp
xchg
ret
arpl
movsl
jl
inc
cltd
std
pop
test
mov
pop
mov
xor
in
cs
fnsave
rcrb
dec
jo
mov
aas
add
shll
test
sub
sarb
in
std
and
mov
pushf
test
push
push
mov
pusha
call
fstpt
rcr
movsb
orl
sub
movb
loopne
cwtl
jbe
xchg
loope
pop
dec
push
and
xchg
or
inc
sbb
scas
lods
pop
nop
fdivs
sbb
push
mov
int
sub
mov
fiadds
mov
jae
pop
add
scas
rcrl
push
ljmp
mov
shll
sahf
mov
loop
popl
test
or
push
repz
in
cmpsb
out
inc
fcmovne
and
scas
decb
mov
or
sbbl
inc
and
scas
das
inc
cmpsl
mov
mov
scas
hlt
idivl
mov
mov
jnp
xor
jnp
in
add
push
mov
dec
xchg
jmp
icebp
dec
test
lea
pop
pop
inc
lahf
test
sbb
cmp
aad
aad
mov
imul
dec
fadds
in
xor
cmp
lcall
out
xor
push
inc
xchg
pop
aaa
cmpsb
rcrl
jo
xlat
sub
pop
repnz
lods
push
push
add
dec
or
pop
push
sbb
xchg
inc
addb
inc
jbe
dec
mov
push
sti
adc
jns
into
repz
popf
scas
adc
leave
push
mov
push
xor
xchg
dec
dec
add
in
push
jp
in
sub
or
jl
std
js
gs
push
clc
mov
cmpsl
mov
or
push
mov
inc
scas
movsb
fiadds
gs
push
arpl
adc
or
cmp
mov
scas
mov
and
cmp
cmp
ja
dec
dec
ja
enter
lds
or
repz
insl
adc
test
ljmp
andb
xor
divl
daa
dec
outsb
and
test
or
xchg
jne
pop
and
pop
cld
loopne
pop
and
mov
jb
outsl
ret
scas
mov
dec
sub
xchg
std
pop
cld
loopne
pop
and
mov
dec
mov
cs
pop
divl
push
mov
addr16
repnz
aaa
jnp
in
and
inc
xor
cld
out
xlat
out
pop
je
cmp
rcl
test
cltd
cmc
test
loop
sub
sub
and
js
in
lods
out
mov
scas
fsubs
fwait
fs
repnz
rorb
flds
cltd
cmp
repnz
pusha
mov
lret
outsl
scas
inc
xor
data16
das
push
cmc
mov
jp
pop
enter
jns
add
mov
aad
idiv
adc
sbb
sti
cltd
rcl
push
scas
xor
call
jl
inc
hlt
movsb
sti
mov
leave
mov
imul
or
into
jmp
jb
push
hlt
sbb
mov
xchg
jb
pop
dec
sahf
clc
pop
rol
mov
sbb
pop
out
pop
mov
sbb
sub
fwait
pop
sti
cmp
mov
inc
ror
add
push
fdivrs
inc
test
roll
cmpsb
mov
sub
dec
aad
push
inc
jae
xchg
and
pop
mov
nop
cmc
mov
out
xor
out
push
test
push
inc
mov
add
pop
data16
pop
sbb
adc
add
xlat
mov
xor
fs
dec
repnz
inc
repz
or
adc
jl
mov
cmp
std
in
push
cmpsl
sbb
mov
addr16
dec
in
movsl
xchg
push
subl
or
jbe
inc
fstpl
mov
loop
xchg
popa
sub
je
jmp
inc
push
push
jno
xchg
xchg
outsl
push
js
insl
push
mov
mov
jmp
js
mov
pop
cs
daa
and
xor
idivl
pop
jb
mov
stc
mov
and
adc
or
xchg
lea
jb
test
loope
jae
int
and
pushf
fimull
and
xchg
inc
je
das
in
fs
mov
idivb
mov
daa
subb
mov
jmp
icebp
cmpsl
inc
aam
pop
sbb
mov
das
cli
xchg
sbb
rcrl
xor
mov
mov
fiaddl
mov
fdivrl
out
dec
xor
xchg
dec
lods
jb
inc
inc
adc
into
cmc
adc
fisubrs
movsb
outsl
inc
popa
xor
and
xchg
xor
push
sbb
xchg
in
mov
adc
das
pushf
hlt
outsl
pop
fmull
pop
xlat
jbe
shll
lret
into
daa
insl
scas
sub
scas
rcrb
cli
sarb
add
cmp
jp
dec
notl
sbb
sbb
js
inc
stos
movsl
lods
movl
iret
xor
lret
gs
loop
push
pusha
mov
dec
inc
es
pop
sub
pop
pop
push
mov
fnstenv
dec
ss
aas
mov
push
sbb
test
sbb
ficoms
frstor
ss
mov
shr
xchg
arpl
loop
out
sub
cmp
and
aad
cmp
cmp
lahf
adc
xlat
sbb
fcoml
jecxz
sti
fbld
in
add
iret
or
push
leave
dec
and
insl
mov
mov
data16
and
sarb
inc
cli
jmp
lock
fdivl
icebp
mov
jb
mov
or
jecxz
jmp
jmp
incl
jbe
dec
mov
bswap
sahf
adc
sub
icebp
lcall
in
pop
nop
mov
mov
lods
test
pcmpgtb
fistpll
inc
stos
movsl
lods
addr16
testl
call
add
rolb
jle
sahf
das
push
pusha
mov
dec
inc
es
es
js
sar
imul
mov
icebp
push
sub
enter
test
dec
aad
stc
aam
sub
fidivrs
xor
cmp
pop
sub
imul
pop
loop
jne
add
leave
daa
xchg
cmp
mov
mov
pop
and
inc
cmpsl
dec
aas
dec
shlb
cmp
fadds
into
je
pop
les
cmp
adc
inc
xor
ljmp
movsl
repz
stos
jecxz
xchg
mov
mov
mov
out
mov
push
sbb
xor
pop
pop
push
inc
jl
fyl2xp1
out
xchg
js
stc
daa
stos
push
movsb
insb
push
outsl
mov
xchg
mov
outsl
or
nop
stos
loope
nop
dec
mov
cwtl
out
adcb
je
dec
mov
xor
aam
jns
out
divb
dec
bnd
imul
dec
mov
test
jae
jns
or
mov
movsb
les
scas
mov
xchg
scas
insl
test
out
inc
fbld
push
rolb
aad
inc
bound
ds
cmp
and
sbb
pop
mov
xchg
in
mov
pop
dec
xor
rcrb
pop
fxch
test
jmp
push
daa
xchg
cmc
pop
push
sbb
mov
fbstp
adc
dec
cwtl
xchg
mov
lret
push
stc
addl
xor
inc
filds
or
push
dec
push
adc
addl
pop
movsl
xlat
hlt
sub
sbb
adc
push
shrl
xchg
ror
mov
pop
jo
dec
or
push
out
mov
jp
or
lahf
repz
repz
jg
aaa
add
js
mov
xchg
int
lret
xchg
dec
stos
adc
inc
loopne
divl
push
cmp
mov
xor
sub
outsb
inc
add
and
dec
scas
ds
aad
inc
outsl
adcb
pop
inc
xchg
add
push
ds
cs
sbb
cmp
dec
mov
in
in
jg
scas
sbb
shrl
hlt
in
pop
xor
dec
aam
fisubs
sub
lahf
cmp
and
and
xchg
es
dec
mov
std
in
xor
jbe
jp
ss
or
mov
adc
notl
mov
sahf
out
and
push
xor
mov
add
add
inc
movsl
in
cmc
scas
sub
pop
sub
int3
lds
popa
mov
lods
push
in
imul
movsb
add
movsb
push
aas
out
out
loopne
jbe
popa
aam
insl
cli
psrlq
or
pusha
icebp
mov
pop
enter
mov
push
jmp
inc
push
push
jns
or
cmpl
daa
jle
mov
sub
jmp
cmpsb
pop
inc
into
inc
cmpsb
or
inc
push
fldl
ljmp
pop
pop
sub
in
in
lods
xlat
mov
xor
or
jo
xchg
outsl
daa
imul
nop
jp
jnp
rol
jae
add
shll
psubsb
sbb
inc
faddl
sbb
mov
jp
jp
cwtl
push
mov
jno
push
loop
rorl
dec
xchg
dec
adc
and
rcrl
xor
add
cmp
test
cwtl
jno
fisubl
ja
dec
ljmp
push
push
in
mov
dec
adc
fisubrs
xchg
cld
test
shl
pop
jge
enter
insl
adc
push
or
lds
mov
in
mov
jnp
mov
imulb
outsb
adc
int3
or
dec
in
hlt
jbe
or
xchg
xchg
xchg
cmc
xor
pop
add
js
push
jb
mov
or
incl
adc
mov
std
dec
lods
push
pop
popf
pop
mov
xorl
xchg
xorb
data16
sub
cli
cmpb
mov
sbb
imul
or
aas
push
cmp
jmp
xor
adc
mov
sarl
stos
jmp
testl
jns
pop
and
sbb
inc
jnp
push
xor
push
xchg
jge
pop
fucom
mov
stos
inc
mov
pushl
out
push
imul
xchg
adc
mov
in
gs
mov
mov
lock
sbb
popa
mov
imul
call
call
dec
mov
out
lock
cld
out
xor
mov
daa
xchg
dec
jmp
fadd
dec
mov
in
xchg
xchg
hlt
fnstcw
push
or
mov
sahf
dec
adc
sbb
popf
call
adc
fdivp
mov
add
dec
pusha
adc
pushf
sbb
xor
pop
ljmp
iret
sub
jg
iret
adc
mov
cli
sub
jge
jbe
and
popf
adc
sbb
dec
pop
pop
xchg
xor
shl
lods
insb
xlat
pusha
dec
inc
xchg
das
out
pop
cmp
lods
notb
adc
xchg
xor
cmp
inc
mov
in
fbld
dec
pop
add
pop
hlt
hlt
sbb
insl
push
fmull
out
push
or
cmp
fs
pushf
mov
pop
sahf
movsb
dec
rcll
es
pop
jl
cmpsb
fcompl
dec
jle
or
dec
push
insb
sub
jg
lods
data16
inc
pop
xchg
popa
inc
inc
ja
inc
popf
push
jmp
jo
xchg
sub
jae
movq
or
inc
and
mov
insb
lea
es
jnp
faddl
add
rorb
cs
mov
jne
pop
stos
push
mov
hlt
jl
lods
outsl
jg
inc
scas
mov
or
insl
fidivs
movsl
fwait
adcb
imul
into
aaa
push
icebp
mov
pushf
xor
lock
mov
xchg
stc
dec
push
mov
mov
push
subb
mov
sub
sbbb
xchg
int
mov
das
inc
stc
add
mov
jno
les
shr
xlat
in
jne
fidivrl
faddl
scas
add
sub
jae
sti
pop
notb
dec
rcr
les
popf
jb
mov
test
call
shlb
xchg
and
adc
push
push
outsb
mov
cmc
and
test
pop
adc
inc
imul
test
mov
rclb
cmp
fisubs
xor
cmpsb
push
jnp
out
and
cltd
lock
mov
js
mov
dec
mov
aaa
leave
and
mov
adcb
mov
leave
sub
xchg
xchg
adc
insb
mov
andb
and
loope
cmpsb
lods
lds
cwtl
enter
adc
jecxz
dec
jg
jecxz
mov
mov
and
xchg
xchg
popa
xor
mull
fs
pop
inc
dec
pusha
inc
push
ds
and
out
out
and
int
adc
test
cwtl
push
mov
outsb
mov
ja
cmp
loope
mov
das
xlat
sub
jp
test
mov
jns
or
or
dec
loopne
adcb
push
lret
sub
push
lods
test
mov
cmpl
push
cmc
stos
repz
pop
rcrl
lret
arpl
adc
xchg
or
sub
das
cwtl
insl
stos
inc
call
jl
inc
add
mov
or
mov
jmp
stos
xchg
daa
cmp
sbb
fnsave
xlat
ficomps
fistpl
dec
jge
push
or
or
ljmp
jge
adc
xchg
mov
jae
sbb
icebp
and
ficoml
orb
mov
dec
fmul
adc
repz
fwait
mov
fdiv
enter
xor
pop
fisubrl
xchg
cmp
bound
pop
xor
jg
test
sbb
gs
and
test
cmpsl
sar
xchg
and
inc
lret
data16
es
mov
push
bound
hlt
sbb
dec
push
add
lret
mov
movsl
push
xor
xchg
mov
mov
sbb
pop
xchg
pusha
jmp
out
mov
cmp
jmp
stos
and
inc
lock
hlt
scas
jnp
push
sub
dec
jnp
xor
test
fwait
aaa
mov
lea
jg
xlat
jmp
ret
int
imul
dec
sbb
push
mov
mov
or
cmpsb
fs
push
jecxz
dec
mov
out
mov
mov
fistl
jo
stos
fisubrs
fmull
sub
mov
mov
add
mov
sub
inc
sub
xchg
loop
sbb
jl
add
ds
lods
ret
mov
cmp
rol
mov
xor
add
int3
push
cmp
push
xor
dec
xchg
mov
shll
fwait
in
dec
or
int
iret
movsb
pop
push
js
repz
xchg
xor
das
add
mov
sbb
adcl
stc
cmpl
pop
shlb
fistps
cmp
call
daa
push
cmp
xor
xor
cmp
in
mov
insl
dec
cmpxchg
mov
jnp
xchg
lahf
sub
mov
stc
addr16
or
test
cs
jo
dec
pop
outsl
cmp
int3
test
cld
subl
out
lods
popf
out
jae
mov
mov
mov
push
inc
gs
loope
mov
pushf
cmp
test
xorl
or
sbb
xor
fdecstp
es
daa
adc
xchg
out
addr16
jg
mov
xchg
pushf
or
out
imul
mov
inc
lods
mov
rcl
push
bswap
lds
pop
fistpl
jbe
mov
dec
mov
mov
mov
xorl
lea
stc
xor
inc
movsl
jbe
dec
mov
sub
aaa
ja
mov
push
xchg
sub
dec
iret
jnp
leave
stos
jne
jno
ret
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
mov
arpl
sub
lret
push
fisubrs
lcall
lock
xchg
jno
ret
movsl
sbb
pop
movsl
sbb
jle
xor
pusha
push
lea
sbb
test
mov
jmp
add
pop
jne
add
pusha
fldt
and
mov
and
pop
cmc
stos
imul
add
push
add
mov
adc
ds
jne
inc
ss
scas
cltd
jl
test
push
lds
xlat
iret
test
fimull
subb
sub
and
xchg
jmp
and
int
mov
push
adc
dec
ret
imul
cmovo
push
xor
and
je
xchg
adc
mov
xchg
jbe
faddp
or
jmp
mov
adc
push
fadds
clc
ss
and
add
xchg
mov
mov
jle
je
out
jmp
adc
out
cld
pop
push
cmpsb
lods
sub
cmp
mov
xor
nop
stos
dec
sbb
jnp
dec
movsl
jbe
push
leave
orl
frstor
xor
sahf
pop
or
pop
rolb
cmc
les
mov
xor
in
xchg
lods
cltd
lret
sbb
or
xchg
mov
mov
out
xor
dec
sbb
jl
or
mov
icebp
mov
cmp
fs
ffreep
mov
jae
gs
pop
mov
cmp
std
and
mov
adc
imul
sub
scas
cmc
hlt
insb
aad
out
out
push
dec
push
push
or
imul
fstl
dec
push
ret
xchg
dec
dec
xor
test
jle
pop
mov
mov
or
xchg
push
xlat
stos
lods
dec
xor
mov
pop
cld
rcr
jle
das
cmp
lods
xchg
adc
pop
insb
or
outsb
adc
test
mov
pop
or
shlb
scas
loop
jmp
sti
out
xchg
pop
ffree
loope
pop
cmp
push
and
loope
rcrb
rorb
add
test
ja
jns
pop
cmp
fidivs
pop
or
inc
testl
push
xchg
mov
sbb
rclb
les
ja
fisubl
xor
cs
shrb
cmp
push
ret
xchg
jecxz
pushf
ljmp
repz
inc
testl
adc
movsb
pop
push
idiv
imul
decl
mov
ret
cmpl
call
sub
lret
sbbb
dec
mov
cmc
xor
mov
mov
loope
xchg
daa
mov
mov
cld
mov
enter
arpl
std
cmpsl
and
mov
ds
int
lret
lds
fiadds
add
cmp
out
enter
icebp
rclb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
mov
pop
lock
cmp
idivb
dec
mov
iret
or
inc
cmp
jns
sti
sti
pop
dec
sbb
cmp
pop
aam
mov
sbb
dec
int
xchg
sub
scas
sbb
dec
fmulp
pop
fdivrl
lea
mov
ljmp
icebp
add
or
push
cmc
adc
dec
xchg
jle
ret
lods
sub
jb
cmc
dec
lret
push
jno
outsl
lods
shl
xchg
icebp
push
outsl
dec
fcmovne
ss
inc
testl
jecxz
cmpsl
dec
adc
pusha
loop
mov
jnp
sbb
call
or
add
jp
mov
int
in
jnp
clc
jle
repnz
ret
insl
repnz
mov
push
mov
cmp
sub
xor
mov
dec
or
cmp
push
loop
pusha
mov
fidivrs
daa
adc
enter
pop
cmp
insb
xchg
mov
sbb
cmpsb
inc
inc
cmp
lahf
xchg
sti
dec
pop
mov
push
cmpsb
popf
sarl
int3
xor
dec
push
sub
popf
fildll
xor
icebp
mov
mov
int3
mov
mov
orb
stc
subl
in
pop
xor
sahf
pop
jmp
rolb
xlat
jle
fistps
fstps
sbb
add
lret
push
add
insl
push
jl
xor
mov
loopne
push
adc
into
or
out
icebp
push
pushf
negb
jnp
fidivs
jp
rcr
in
xchg
add
sbb
mov
cs
dec
inc
xor
ret
cmovns
jns
xchg
jo
andl
push
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
pop
movsl
sbb
aam
icebp
cmp
inc
nop
nop
mov
dec
lods
xor
and
ja
or
repz
addr16
mov
cli
cmp
sub
fs
cmpsl
lods
clc
fwait
stos
jnp
cmp
fs
aam
xor
test
mov
lret
mov
testl
sub
js
mov
inc
notb
pop
ljmp
and
mov
pop
or
push
popf
dec
int
loop
xchg
mov
mov
popf
je
mov
std
add
decl
mov
push
outsl
inc
stos
inc
jnp
push
dec
add
jb
cmc
iret
mov
jbe
rcrb
mov
push
lret
xchg
daa
or
inc
xor
jae
mov
push
lods
xchg
push
mov
dec
bound
cmp
aaa
dec
out
fs
add
in
pop
sahf
scas
fiadds
mov
bound
movsb
popa
addr16
loopne
test
addr16
rorb
out
dec
mov
push
ljmp
scas
movsl
sbb
aas
adc
dec
fidivs
jle
jbe
lds
fbld
enter
loop
push
in
and
fxch
repz
sbb
sbb
andb
stos
mov
ja
addr16
aam
loope
or
cld
ds
mov
push
in
mov
daa
les
or
xor
xor
pop
fmull
pusha
push
xchg
loopne
mov
sub
aad
sbb
cltd
push
pop
cmpsb
daa
sub
ss
addr16
mov
xor
push
or
mov
test
sub
mov
cs
cli
pop
lcall
mov
xor
xor
cmp
insl
cmp
xchg
lods
out
daa
jno
adc
imul
adc
push
dec
cmp
sbb
enter
sahf
push
fbstp
mov
leave
xchg
mov
faddl
pop
and
xchg
cmpsl
jl
out
enter
mov
mov
mov
das
incl
call
in
pusha
mov
jp
sub
sahf
shlb
push
dec
repz
jnp
imul
sub
rorb
mov
inc
xchg
jp
clc
jns
int3
sub
add
shr
int3
jnp
out
test
out
jecxz
mov
adc
stos
mov
mov
scas
adc
pop
fnsave
cltd
sub
int
loop
popa
dec
pop
addr16
ja
add
mov
pop
inc
jge
xor
pop
outsl
subb
adc
dec
addr16
mov
lds
test
int3
mov
adcb
shrb
and
jg
push
pop
mov
dec
pop
cmc
mov
lock
push
add
lahf
jno
xor
dec
sarb
pop
cli
imul
xchg
jne
jecxz
hlt
jae
adc
jle
fcomip
dec
xor
inc
repz
lods
mov
mov
pop
loop
or
cltd
jno
cmp
push
test
cmp
cmp
mov
mov
pmulhuw
push
fwait
pop
push
sub
mov
dec
dec
les
mov
mov
aaa
in
jle
mov
scas
xchg
pushf
adc
movsb
sbb
ds
mov
fldt
shlb
imul
jae
ficompl
cltd
sti
insb
daa
mov
jo
aad
adcl
xchg
sbb
jno
push
stos
jp
into
repnz
inc
addr16
stos
dec
das
pop
or
mov
pop
imul
test
cmp
cmpsl
mov
push
stos
cmpsb
cmp
sahf
or
mov
int
jg
cmp
add
movsb
subb
es
into
mull
pop
xor
jmp
out
scas
gs
jmp
push
sbb
in
in
xor
das
inc
cmpsl
test
sub
fistpll
nop
into
sbb
add
or
cmp
push
and
fisubs
cltd
stc
mov
pop
push
mov
cwtl
jmp
mov
aam
filds
jp
or
loop
or
std
test
sub
push
pusha
pop
mov
shl
mov
pop
mov
arpl
aam
jno
push
cld
inc
ret
lret
pop
dec
fs
dec
mov
clc
mov
xor
mov
sbb
jb
mov
mov
daa
jecxz
shlb
and
rcl
call
lock
sbb
addb
pop
mov
mov
jno
xor
inc
mov
inc
push
inc
mov
dec
sarb
xchg
scas
pop
movsb
xor
insb
test
in
nop
add
orl
inc
or
imul
loopne
mov
stos
fcom
ss
sbb
cmpsb
xor
sahf
sarl
ret
je
xchg
mull
fsubr
adc
insb
divl
pushf
sub
inc
daa
or
xor
lods
stos
lret
cltd
mov
inc
repz
push
testb
clc
js
in
movsl
xor
cwtl
pop
in
push
pop
clc
pusha
sbb
lahf
or
js
repz
jg
fwait
enter
clc
imul
rcrl
jg
pusha
xchg
fdiv
dec
pop
dec
ss
es
jae
jg
repz
js
mov
testl
sub
push
aad
lcall
and
cmp
shl
lds
scas
mov
jns
sub
xchg
push
jne
rcll
int
pop
jl
mov
mov
or
sbb
clc
mov
sub
shlb
mov
dec
fdivs
adcb
jbe
jbe
int
adc
xchg
andb
pop
sub
fisttps
lcall
clc
aam
bound
adc
dec
ss
add
lods
int
cmp
gs
flds
clc
fistl
sti
mov
cmp
adc
lods
inc
roll
lret
mov
sub
adc
hlt
imul
dec
jge
loopne
pop
leave
xchg
mov
and
in
rclb
jmp
pop
test
cmp
jnp
insl
jae
test
ss
sbb
jbe
mov
push
cwtl
pop
push
pusha
add
xchg
sbbl
push
in
fsubs
sub
inc
mov
test
negb
push
jge
and
sub
ljmp
in
mov
or
clc
addb
cltd
pop
inc
add
inc
mov
test
mov
leave
push
cmp
xor
cld
addb
mov
stos
xor
movsb
mov
mov
loopne
nop
mov
imul
inc
lds
xchg
ds
sbb
pop
mov
dec
mov
pop
xchg
inc
push
sbb
lods
aaa
icebp
mov
cltd
inc
test
imul
pop
addl
add
lea
les
and
mov
sub
pop
xor
pushf
sbb
mov
add
sub
in
xor
out
mov
jae
jnp
stos
xchg
cmp
imul
dec
push
jmp
cmp
mov
push
mov
insl
xchg
shrl
jge
jae
xor
add
mov
addr16
mov
notl
in
sbb
or
int
fistpl
adc
add
inc
sbb
push
mov
sub
into
xchg
jbe
ret
ret
and
jp
test
shl
jmp
fdivl
xchg
aad
mov
mov
das
cmc
imul
lds
adc
iret
pop
cmpsb
leave
lock
pop
mov
imull
popf
mov
mov
jmp
push
mov
or
iret
pop
inc
cmp
or
out
ljmp
dec
scas
pusha
lea
addr16
mov
jg
aaa
mov
in
bsf
inc
add
popa
push
push
mov
insb
test
test
mov
movsl
js
or
xorl
into
push
or
cwtl
cmpsl
sbb
popl
ret
int3
bound
cltd
mov
cs
hlt
jle
cmp
add
bnd
andb
jmp
pop
jb
jmp
add
mov
sub
xor
adc
add
push
cs
sbb
stos
dec
sbb
stos
or
in
inc
jae
call
add
fisttps
nop
pop
ret
shll
push
mov
movd
ds
scas
xchg
dec
bound
sub
mov
lods
repnz
lods
into
cmp
subl
das
jnp
dec
inc
sbb
bnd
lret
test
sub
std
inc
lods
cmp
sub
and
inc
jle
sbb
call
cmp
cmc
cmp
mov
out
mov
sbb
jp
mov
sbbb
xchg
and
out
jnp
xchg
and
dec
inc
dec
jl
push
adc
and
push
cmc
jmp
outsb
mov
cmpsl
fstl
into
fnstsw
jmp
push
mov
push
mov
cmp
mov
jl
mov
push
shr
push
mov
push
mov
mov
mov
movl
movl
mov
mov
mov
shr
add
shl
add
xor
mov
add
xor
sub
mov
shr
add
mov
shl
add
xor
mov
addl
add
xor
sub
decl
jne
mov
mov
mov
add
decl
jne
pop
pop
pop
leave
ret
int3
and
jb
std
pop
mov
sbb
insl
and
enter
popf
add
loope
jo
xor
dec
fdivs
call
pop
shlb
add
std
cmp
and
shrb
push
mov
inc
push
js
fsubrs
jecxz
sbb
jae
add
cli
std
daa
scas
dec
pop
push
rorb
and
sbb
pop
mov
pusha
arpl
inc
test
mov
inc
cltd
or
dec
xchg
and
addr16
orb
push
push
fwait
xor
xor
orl
xchg
pop
pop
or
in
and
je
daa
faddl
stc
add
scas
outsb
add
fildll
mov
in
pop
push
test
movsl
dec
ja
cmpsl
sbb
xchg
fdivl
movb
mov
mov
jo
lret
jecxz
roll
call
out
and
xchg
xchg
sbb
int3
sub
pop
adc
lock
xor
mov
andb
movsl
sbbl
dec
outsb
sub
dec
int3
cmp
sbb
negb
cmp
in
mov
dec
pushf
