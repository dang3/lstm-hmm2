jg
das
dec
dec
fsubr
loopne
and
cmc
and
shrl
xchg
adc
in
jle
push
or
sub
pop
pop
into
xchg
pop
rcrl
cld
and
jbe
inc
frstor
add
add
scas
dec
adc
jge
mov
clc
mov
imul
ja
xchg
sbb
fldl
push
xchg
sub
test
pushf
imul
adc
cmpsb
mov
cmpxchg
xor
nop
jge
dec
test
and
nop
inc
dec
lds
mov
ljmp
push
and
jmp
andl
push
mov
push
add
jbe
out
faddl
xchg
and
and
repnz
lcall
or
sub
rcr
pop
popl
stos
mov
pop
mov
repz
sarl
mov
cmp
ret
push
adc
leave
repz
mov
mov
sahf
and
stos
dec
inc
inc
push
scas
push
and
cmpsb
mov
push
mov
mov
lahf
test
rolb
xchg
fcmovu
push
xchg
pop
pop
mov
pop
jb
repnz
call
mov
ljmp
pushf
and
test
call
mov
iret
and
jo
jb
add
xor
jns
push
outsl
pop
mov
mov
lock
cmpsb
jg
push
idivb
mov
inc
sub
mov
movsl
sbb
cmc
xchg
lret
push
pop
fdiv
outsl
push
out
insl
call
sarb
jo
lret
mov
dec
jecxz
inc
packuswb
jg
scas
mov
pop
pop
js
dec
or
xor
jns
pop
rol
insl
aad
mov
mov
fnstcw
or
sub
enter
or
dec
lea
mov
xor
mov
cmpsb
inc
jns
mov
jb
jg
mov
jge
mov
jnp
out
jae
mov
arpl
pop
or
rcll
imul
push
icebp
jl
jnp
dec
cld
scas
test
fisubrs
int
add
push
and
out
leave
aaa
addr16
lock
xchg
mov
popa
pushf
xchg
sti
daa
mov
sub
add
sub
std
les
es
out
dec
mov
jae
and
insb
fucomp
je,pn
js
repz
mov
mov
lds
push
shlb
sbb
push
xchg
daa
and
mov
icebp
pushf
dec
mov
arpl
sbb
add
add
test
push
aas
rcll
ss
insb
rcrb
cmpsl
mov
add
xchg
sbb
mov
inc
xchg
mov
in
daa
in
sbb
loopne
pushf
ret
add
xchg
out
scas
stos
pop
jle
fisubrl
inc
mov
push
sets
xchg
or
mov
addr16
cmp
fimull
loopne
test
sarl
sbb
int
lock
push
inc
fidivl
rcrl
pop
and
and
sbb
or
lea
movsb
push
sub
pop
pushl
pop
jbe
shll
mov
lea
push
inc
pop
push
stos
dec
and
divb
inc
inc
aaa
aas
push
scas
push
fisubl
sub
and
notb
push
lahf
sub
inc
adc
call
pop
push
adc
outsl
insb
jle
das
enter
mov
lods
rorl
mov
ret
push
mov
and
insl
aas
enter
les
jnp
push
push
mov
js
loop
mov
out
dec
cmp
int3
push
dec
mov
mov
cmpsl
imul
popf
mov
adc
ljmp
lret
shll
repnz
or
push
jb
or
int
push
call
lea
mov
and
mov
push
adc
cs
stos
xchg
mov
fidivl
pop
in
dec
fdivl
test
popa
int3
sub
lahf
adc
jns
xchg
mov
and
js
popf
in
test
xchg
inc
int3
add
test
dec
and
mov
cmpsb
lods
cmp
xor
or
jge
sbb
movsb
jne
ja
pop
lock
int
mov
inc
les
pop
pop
cltd
addr16
xchg
inc
inc
jge
jae
mov
and
fcoms
lahf
into
fs
mov
add
xchg
dec
or
mov
xchg
mov
lods
test
aad
mov
inc
push
std
xchg
in
test
adc
push
pop
mov
stos
insb
jle
xchg
movl
dec
sbb
mov
mov
mov
fistpll
mov
adc
mov
or
cmp
inc
mov
pushf
fisubs
orl
dec
cmpb
mov
std
call
data16
jg
fs
fldenv
rol
and
sub
adc
mov
in
sbb
sahf
inc
pop
cli
sub
pop
xchg
mov
jne
jmp
jmp
adc
shrl
faddl
xor
daa
rcl
sbb
stos
dec
add
clc
mov
push
mov
mov
mov
mov
xorb
rdpmc
in
mov
sbb
push
and
subb
push
push
mov
ret
shrb
ljmp
push
insl
cmp
cli
push
xor
mov
xchg
pop
pop
jb
cmpsl
dec
push
lods
cmp
add
scas
lret
inc
mov
in
push
mov
cwtl
test
mov
mov
pop
push
add
cmpl
inc
mov
sbb
ja
jb
push
inc
out
popf
adc
std
mov
test
or
fidivrs
sbb
test
stc
or
push
cmpsb
daa
mov
popf
rcrl
sbb
loop
movsb
dec
stc
sub
enter
es
rcrl
or
jmp
stc
daa
mov
popa
or
sti
or
jbe
adc
mov
inc
adc
pop
fwait
mov
jge
inc
mov
or
push
jb
int
push
xchg
xor
or
ljmp
dec
lea
jb
jg
push
sar
out
ffreep
and
mov
pop
hlt
out
cmp
ret
int3
add
jae
inc
rcl
push
out
popa
dec
popa
mov
add
test
push
cmpsl
sti
cmp
cmpsl
les
pushf
ficompl
test
out
aad
sahf
pusha
outsl
mov
mov
jno
or
add
cmp
mov
neg
es
adc
ja
pusha
xchg
dec
fisubrl
imul
inc
sub
shl
cwtl
arpl
xor
cmp
call
loope
adc
pop
and
addb
push
iret
nop
fisttps
mov
mov
push
je
xor
cmpsl
pop
jge
data16
pop
sub
test
mov
jno
js
sbb
adc
dec
push
lods
lret
inc
decb
lods
mov
jnp
mov
push
sbb
mov
aad
lret
lret
pop
jnp
fsts
inc
jle
mov
stos
decl
inc
mov
push
cld
call
imul
sbb
push
pop
leave
xor
lea
dec
cmpl
and
pop
out
or
inc
notb
mov
or
ret
sbb
jecxz
push
fidivs
cmp
mov
mov
cmp
int3
push
cmp
shl
or
xorl
in
lods
jge
mov
inc
stos
aas
xor
in
repz
out
mov
jmp
mov
cmpl
mov
vmovaps
sub
xor
jecxz
push
jne
imul
js
out
xlat
jmp
subl
add
jns
cmp
mov
mov
xor
adc
mov
push
loop
setle
aas
push
dec
mov
cmp
jno
pop
stos
int3
repnz
push
dec
iret
les
jae
add
and
ds
mov
jne
jnp
inc
mov
call
mov
loopne
and
test
lock
mov
cmp
sbb
dec
push
cmp
daa
fidivrs
sbb
sub
decb
sbb
lret
movsl
adc
insl
out
push
mov
push
dec
addr16
add
or
aam
repnz
push
movsb
adc
rolb
repnz
aad
and
popf
pop
fsubl
xchg
out
dec
aam
dec
mov
in
fsubr
ret
add
xchg
sbb
cmp
xor
add
pop
test
sub
cwtl
push
add
jg
rclb
cmp
sbb
mov
jg
and
add
loop
inc
sub
or
scas
jae
mov
gs
fdivr
xor
mov
aaa
pop
enter
inc
push
push
cmp
push
adc
xor
sub
out
adc
stc
add
mov
and
nop
jb
std
sub
mov
cmp
push
es
push
jne
movsl
loopne
inc
repz
pop
or
fmuls
or
inc
add
lret
cmp
pop
sti
sbb
push
imul
pop
ljmp
scas
rcr
xchg
movsb
daa
mov
stos
push
lret
dec
je
das
stos
pop
rcll
mov
mov
jb
stos
xor
dec
in
lcall
or
xor
sub
in
jle
adc
in
add
outsb
adc
addl
or
pusha
mov
loop
cli
andl
push
and
idivl
and
rcrl
cmp
inc
out
scas
cmp
pushf
sbb
push
xchg
mov
push
out
out
sub
push
sub
movsl
cwtl
pop
sti
adc
ret
pop
add
and
and
sub
pop
je
fcmovu
ss
ds
inc
cli
loopne
fists
sbb
rcrl
hlt
in
popf
fcmovb
fmull
sub
jae
push
stos
xor
fmull
pop
xchg
loopne
dec
sub
push
cltd
or
or
jmp
push
and
sbb
mov
push
lods
lods
outsl
movsb
push
mov
sub
in
hlt
cmp
notb
pop
adc
adc
arpl
dec
loop
out
lret
xor
or
xor
xchg
addr16
pop
shl
add
mov
nop
arpl
jl
mov
into
lds
lahf
add
adcl
mov
mov
or
test
mov
jmp
fbld
push
cmp
cmpsl
loop
js
xor
aas
rcrb
and
aad
imul
icebp
push
add
xor
mul
jmp
xchg
pop
imul
mov
hlt
leave
push
test
xor
rol
sbbl
negl
sbb
jmp
popa
or
js
cld
movl
dec
jno
out
movsb
jb
mov
in
mov
in
es
push
push
lret
dec
pop
xchg
jl
je
and
or
ss
pop
in
lock
mov
dec
dec
cmp
push
jp
sub
fldcw
push
jb
mov
xor
enter
inc
mov
stos
jo
jecxz
fidivrs
jns
push
mov
mov
inc
ds
out
mov
dec
nop
add
fsubl
cltd
ds
dec
gs
jns
push
mov
fwait
mov
test
sub
push
rclb
mov
mov
ja
and
xchg
mov
shll
inc
dec
lahf
scas
cmp
push
inc
add
lea
das
lds
popf
push
icebp
add
jbe
outsb
lcall
push
mov
pusha
ja
scas
sbb
and
jle
fs
hlt
add
das
addr16
or
add
jnp
dec
mov
xchg
inc
popl
mov
into
call
inc
stos
daa
hlt
adc
outsl
dec
mov
pop
imull
out
outsl
push
push
lods
das
jmp
test
gs
push
shll
inc
sub
jno
test
lcall
orb
mov
arpl
std
in
cmp
lods
sar
adc
or
sbb
loopne
test
xchg
inc
and
mov
lahf
hlt
pop
lea
repnz
push
push
jp
add
cmpsl
mov
call
mov
notl
out
add
aam
or
int
mov
cmpsl
clc
inc
test
mov
mov
xchg
jnp
shll
push
pop
fsubrs
dec
rolb
dec
aas
nop
jbe
or
cmp
int3
mov
mov
ss
imul
scas
sbb
daa
xchg
jmp
mov
mov
inc
out
inc
adc
repnz
or
cmp
xor
cmp
sar
dec
push
inc
or
insb
mov
dec
sub
sub
cwtl
ret
inc
sbb
mov
jecxz
jo
in
mov
out
mov
pop
loope
xchg
jb
aam
add
sbb
lods
out
js
js
xchg
in
mov
mov
adc
les
pop
xchg
mov
test
sbb
mov
cmp
shrb
sub
adc
addr16
or
push
outsl
dec
push
leave
insl
or
fcoml
popf
pop
scas
mov
mov
fsts
push
and
out
jl
rorl
add
movsb
dec
fisttpll
imulb
js
test
inc
cmp
cmp
mov
cmc
test
lret
or
or
mov
pop
dec
pop
movsb
mov
ss
push
sar
aam
jb
jb
imul
xor
mov
pop
and
xchg
mov
loopne
sti
lahf
call
es
mov
jbe
inc
and
loope
lret
push
lret
mov
cs
sub
adc
adc
cmp
jge
push
jecxz
fwait
nop
add
jl
jp,pt
sub
pop
push
or
inc
repnz
stos
pop
aas
aad
orl
xchg
dec
insl
pop
cmp
shr
arpl
clc
rorl
cmp
mov
mov
std
out
dec
loope
in
cld
dec
rorl
rcrb
push
cld
inc
stos
mov
jae
arpl
xchg
cmpsb
dec
bound
adc
jg
xchg
jl
aad
inc
sbb
push
rclb
repz
or
inc
or
or
jp
clc
add
fstpt
cmp
shlb
loope
call
addb
mov
lcall
fbstp
dec
cmp
xchg
jp
xchg
or
push
int
mov
xchg
bound
mov
mov
jp
mov
mov
call
cmp
jecxz
dec
jmp
ja
fcoms
sub
cld
cmc
stc
cmp
loopne
sub
in
imul
dec
notb
adc
mov
stos
xor
test
in
sti
jle
and
lretw
push
lcall
xchg
cmp
xor
hlt
test
xchg
cs
dec
add
loope
lods
mov
and
xchg
sbb
fsubl
xor
jae
push
xchg
lock
lret
sti
xchg
xchg
mov
xor
shlb
movsb
mov
outsb
rorl
fwait
cmpsl
adc
pop
push
sti
test
daa
in
orl
mov
cmpsb
fdivrl
stos
sub
lahf
cmpl
inc
test
cmc
mov
lahf
push
push
popf
push
xchg
lcall
lahf
inc
mov
sbb
mov
shll
pop
arpl
dec
cwtl
and
mov
inc
mov
enter
outsl
shlb
mov
ror
cmc
adc
push
cmp
std
xchg
daa
test
xorl
aas
mov
rcll
sub
xchg
hlt
and
cmp
imul
ss
mov
mulb
js
mov
in
fsubl
repnz
xor
push
pop
push
jp
xchg
addb
add
loope
and
idivl
cmp
cmp
adc
and
mov
add
mov
xchg
fstl
sbb
les
aad
push
mov
aad
lds
mov
pop
rolb
test
jecxz
lahf
sahf
and
insl
xor
in
sbb
cmp
jnp
xor
mov
xlat
lahf
push
fadd
xchg
sub
enter
push
and
xchg
pushf
aam
xor
lcall
lahf
dec
jne
or
mov
rol
xor
pop
repnz
test
push
cmc
fsubrs
jmp
inc
shl
fidivs
add
das
std
add
cli
sti
mov
fsubs
adc
inc
insb
sar
mov
mov
sar
and
js
xor
and
push
inc
pop
rclb
fs
sbb
mov
out
out
xlat
or
dec
pop
mov
xchg
shrl
insb
aam
inc
mov
in
dec
push
fists
testb
data16
push
int
pop
cmc
mov
cwtl
sbb
stc
jns
sahf
jb
jp
fwait
sub
jg
add
mov
jo
sub
jge
sbb
xor
and
subb
inc
shll
jne
push
std
xchg
mov
mov
lea
mov
xchg
mov
aad
add
pop
orb
repnz
or
scas
rolb
inc
mov
test
ds
inc
shlb
push
ficoml
and
sbb
lock
fwait
aam
push
ds
in
adc
xor
ds
mov
sbb
insb
or
pop
mov
pop
sbb
ja
inc
iret
mov
jo
jns
mov
stos
dec
push
mov
hlt
sub
notb
push
enter
push
xchg
insb
inc
cmp
pusha
cld
sbb
pop
loop
cmp
xor
out
popf
aas
fnstcw
popa
imul
sub
add
lds
das
std
push
push
jns
sarb
adc
mov
ja
cli
dec
cwtl
shr
pop
and
int3
mov
mov
out
sbb
insl
ret
mov
aas
sub
inc
mov
adc
aam
iret
pop
jno
js
mov
arpl
push
rclb
sub
iret
inc
pop
push
rcll
xor
loop
ficomps
jae
mov
adc
aam
nop
mov
pop
add
mov
dec
subl
sub
mov
xor
int
into
xor
in
stc
je
out
or
aas
outsb
loope
ret
sbb
out
femms
sbb
lock
mov
xchg
cwtl
push
jl
jl
pop
pusha
xorl
sbbb
loopne
out
pop
in
inc
sub
mov
push
data16
push
enter
xchg
pop
aam
loopne
lds
movsl
and
sbbb
pop
popf
pushw
in
pop
ret
dec
out
or
popa
iret
add
jne
notl
sti
movsl
inc
jecxz
aas
mov
jno
out
enter
push
push
mov
icebp
stc
push
scas
sbb
fbstp
mov
hlt
lds
xchg
inc
dec
cmp
sbb
out
jge
fcoms
sbb
pop
xchg
push
adc
adc
cltd
out
mov
xchg
sbb
inc
jle
aam
icebp
sub
dec
out
xchg
add
andl
inc
push
cmpl
pushf
test
lock
ss
mov
xor
add
outsb
movl
jg
test
xor
lahf
push
jne
into
mov
pop
cs
jno
outsl
adcl
mov
push
mov
fmull
out
pop
jmp
mov
adcl
mov
negb
cmpsl
pop
pop
dec
and
pop
or
rcrl
test
ds
pop
pop
xchg
push
lret
xor
clc
or
sti
adc
movsl
or
in
repnz
add
cs
sbb
and
call
std
dec
stc
sbb
adc
es
stos
test
add
mov
notb
jecxz
pop
xchg
jae
adc
mov
jmp
scas
xchg
mov
fsts
orl
loop
jg
int3
fincstp
push
loope
sbb
jns
clc
dec
pop
mov
rorl
mov
add
mov
scas
lods
cmp
pop
out
idivl
xchg
bound
addl
inc
fnstcw
ja
mov
in
or
lret
add
inc
sahf
or
repnz
dec
add
xlat
aam
cmc
push
cld
stc
lcall
lcall
jle
std
pop
aad
push
js
testb
push
adc
pusha
pop
sarb
int
test
adc
arpl
mov
mov
ret
dec
shrb
inc
sti
fdivrl
loope
push
int3
jp
pop
lret
pop
jae
jno
movsl
repz
add
int3
inc
mov
mov
mov
movups
in
mov
in
notb
inc
and
into
push
sbb
xlat
lock
leave
ficomps
movsb
sbb
lahf
addl
cli
fsubs
into
icebp
jno
insb
push
cmc
lock
imul
push
mov
imul
inc
lock
call
mov
sti
jno
and
cmp
mov
stc
xchg
gs
xchg
push
fildl
jl
aaa
arpl
push
adc
fcompp
cmp
ficomps
negb
dec
mov
push
and
roll
ds
in
scas
add
aam
or
pop
adc
pop
cwtl
cmpl
clc
sbb
aas
repz
iret
push
or
sti
movsb
adc
or
mov
xchg
mov
popf
inc
cltd
in
negb
push
faddl
mov
xchg
jno
cmp
fists
addr16
or
sarl
adc
inc
mull
andl
mov
sbb
pslld
or
out
cmp
inc
popa
loop
inc
adc
cmpsb
fisttpll
imul
inc
sbb
sbb
dec
mov
gs
dec
inc
sbb
stos
push
mov
repz
loop
xchg
ja
dec
or
adc
and
scas
add
dec
fmull
fstpt
outsl
mov
inc
xchg
lret
scas
jno
out
notl
shr
lret
jnp
in
les
pop
aam
cli
dec
rclb
dec
loopne
out
mov
or
xor
dec
mov
arpl
les
sub
mov
mov
push
lret
add
mov
nop
add
mov
jae
xchg
stos
and
clc
fnstenv
xlat
add
xchg
out
sub
cmp
lds
mov
addr16
inc
add
mov
push
popa
cmp
mulb
in
jmp
or
dec
sbbb
inc
mov
mov
or
ret
inc
pop
mov
adc
test
push
test
imul
popa
dec
inc
out
es
setns
ja
mov
cli
cmp
or
pop
test
loope
andb
xchg
add
push
xor
xchg
mov
push
das
mov
in
sarl
xchg
inc
cmp
outsb
fistps
addr16
xorl
xor
cmpsb
add
add
pushl
sbb
movsb
xchg
out
cwtl
mov
inc
mov
in
adcl
into
rcl
icebp
sahf
pushf
pop
nop
add
adc
xchg
mov
loopne
cmpb
pop
icebp
out
push
pop
push
dec
sahf
add
mov
mov
mov
mov
and
cltd
imul
hlt
xor
rol
subl
mov
data16
insl
cmp
out
arpl
ss
cmp
imul
xchg
inc
push
push
icebp
cmp
and
imul
out
rcrl
dec
in
push
xlat
xchg
test
pop
stos
pop
fsubrs
ja
mov
push
fdivrp
mov
gs
inc
icebp
insl
sbbl
pushf
jo
nop
sbb
inc
lods
jno
aam
mov
xor
xchg
les
mov
lods
pushf
enter
sbbl
and
jecxz
pop
arpl
xorl
test
jno
jg
mov
dec
jmp
cmp
xor
ljmp
dec
outsl
mov
daa
in
gs
mov
add
dec
adc
bound
daa
xor
adc
dec
shlb
push
imul
inc
in
jbe
mov
cmp
idivl
xchg
jo
loop
cmc
mov
nop
add
xchg
lret
push
dec
call
cmp
icebp
and
pusha
sbb
mov
stos
dec
mov
push
jbe
orl
push
push
mov
jecxz
shlb
sahf
inc
add
mov
sbb
cwtl
scas
add
add
stos
mov
jge
outsl
outsl
pusha
mov
fisttpl
leave
fcmovne
pop
mov
adc
in
sbbl
sub
mov
or
gs
xor
jo
xchg
ret
jne
cmc
loopne
cmp
rclb
sbb
pop
sbb
cmp
ficoms
cmpsl
xchg
popf
loope
cmp
notb
add
pop
aaa
push
ds
lret
rcrb
or
cwtl
add
jmp
cmc
xor
jno
pop
push
popa
sahf
add
pop
mov
fwait
dec
add
out
das
lahf
push
adc
xor
mov
push
pop
cmp
xchg
pop
pop
push
xchg
mov
jmp
adcl
jecxz
push
sbb
add
mov
sbb
loop
mov
cmp
lods
dec
pop
ror
mov
popa
dec
xor
sub
lods
jnp
in
test
scas
lods
jae
cmp
popa
cmp
pop
cltd
ret
rorb
xchg
shr
xor
dec
dec
pop
pop
es
aam
ret
push
stos
mov
out
xor
adc
divl
shrb
aad
arpl
lods
cmp
sub
sbb
daa
fs
lret
jg
aaa
nop
fdivr
roll
add
cmp
push
je
in
push
arpl
outsb
push
sub
popa
or
je
add
popa
lds
cmpsb
test
out
arpl
adc
or
test
mov
bound
gs
jnp
hlt
push
and
jno
jno
fs
add
push
jno
push
test
sbb
lret
outsl
aaa
mov
push
pop
push
fcoml
ret
pop
popf
mov
decb
sbb
enter
mov
mov
xchg
ja
push
fs
pop
dec
addr16
xchg
loopew
aam
or
lock
mov
add
jb
repz
mull
subb
and
xchg
into
mov
xchg
adc
mov
inc
fidivrs
call
add
fmull
xchg
adc
outsl
sub
insb
mov
push
pop
outsl
fcomps
into
pop
and
gs
xchg
dec
mov
dec
xchg
inc
loop
xchg
sbbb
and
idivb
inc
fsub
xor
adc
pop
hlt
pop
inc
das
mov
repz
in
push
add
fstpl
push
mov
dec
add
inc
mov
mov
fldt
cmpl
jae
out
adc
cmpb
adc
mov
sub
push
xchg
shll
add
nop
aam
adcb
mov
fstps
dec
add
adc
dec
aas
stos
mov
in
cmp
sub
mov
movsb
adc
imul
cmpsb
out
pop
pop
push
test
mov
scas
pop
mov
rcrl
stc
enter
js
cmc
pop
adc
mov
sub
cmp
xchg
hlt
fs
clc
mov
cmp
sub
aad
adc
ja
inc
mov
inc
data16
nop
ljmp
or
mul
mov
dec
inc
clc
out
push
mov
repnz
and
fs
loop
or
repz
mov
sbb
dec
add
xor
repz
roll
cmp
cmpl
rcrl
or
jae
inc
mov
test
insl
jo
or
pop
insb
bnd
mov
adc
and
imul
and
xchg
out
pusha
push
inc
inc
or
sbb
jp
in
jg
mov
ja
push
cmc
push
lds
les
cmp
adc
pop
lods
lret
daa
fcmovbe
rorb
cmp
fldt
outsb
push
jp
insb
pop
xor
rorb
push
ror
jle
pop
add
sbb
sub
imulb
cmp
out
jnp
adcb
lahf
mov
fnstsw
adcb
sbb
arpl
inc
push
mov
stc
lods
out
sbb
inc
js
mov
mov
adcb
shlb
shlb
cld
loopne
dec
jo
dec
pop
xchg
sbbb
pushf
pop
arpl
test
dec
mov
pusha
jae
mov
inc
jb
or
and
rorl
inc
gs
fsts
test
int
and
mov
adc
fists
notl
and
clc
add
fimull
loope
out
mov
jmp
in
or
test
push
in
jbe
jmp
inc
lods
out
jp
lds
add
fs
adc
dec
fistl
repz
push
xor
fs
sub
xlat
pop
loop
scas
hlt
rorl
mov
js
test
ljmp
test
cmpl
in
xchg
jl
jbe
lret
dec
imul
lcall
into
mov
imul
test
stos
test
sub
push
lods
pushl
into
push
aaa
and
lahf
adc
pusha
test
cmc
daa
inc
lret
add
xchg
fs
mov
or
pop
addl
lcall
pusha
push
ret
fnstsw
and
mov
cmp
push
mov
lret
and
inc
shll
dec
and
rorl
fldl
inc
pop
mov
adc
mov
repnz
cwtl
push
dec
out
mov
mov
or
jns
cwtl
push
add
mov
and
outsb
fimuls
sub
fnstcw
adc
ja
push
sti
fadds
sub
push
pushf
mov
cs
test
lock
pop
sahf
xchg
jg
jno
jge
daa
inc
int3
dec
mov
rcrb
pop
pop
push
push
orl
inc
or
adc
push
fwait
mov
ljmp
inc
arpl
push
mov
test
sysret
pop
lock
mov
push
aaa
adc
nop
and
jle
aad
mov
mov
jp
insl
add
mov
out
lret
testl
test
ljmp
jl
inc
mov
mov
xchg
xchg
push
rcll
out
sbb
pop
mov
comiss
dec
inc
ja
cmpsl
sub
jecxz
lods
popf
dec
pushl
rorl
cmpsb
sub
fisttpl
out
in
mov
pop
addr16
mov
mov
push
dec
inc
test
sbb
mov
adc
call
loop
and
mov
loopne
popa
xchg
mov
mov
stos
or
ret
rcrb
loope
in
jnp
jns
cmp
cmp
movb
adc
dec
and
subl
shll
ljmp
adc
xchg
into
aaa
jecxz
xchg
dec
aaa
pop
mov
fsubrs
ret
aad
int3
rclb
ret
mov
test
jo
adc
push
xchg
xor
xor
pop
mov
sub
fwait
cltd
lret
inc
jmp
loop
dec
mov
sarb
mov
and
xchg
pop
push
lods
jnp
add
repnz
or
mov
and
lcall
es
testb
fcom
js
leave
jecxz
loop
pop
movsb
notl
repz
test
or
vmwrite
loope
imul
push
ficoms
xchg
jae
pop
xor
out
dec
xchg
lea
fistpl
sbb
hlt
testl
test
out
mov
int3
xor
xor
or
inc
mov
ror
jae
xor
push
std
mov
int
mov
or
cmc
pushf
enter
push
frstor
andb
test
dec
sub
add
fs
jne
sbb
shrb
fsubl
and
mov
movsl
insb
call
arpl
mov
ds
push
xchg
mov
call
mov
sub
call
cltd
mov
cmp
js
adc
ljmp
push
cmpsb
aam
les
jmp
cmpsl
rolb
or
pop
jae
mov
mov
ficomps
sub
repz
push
shlb
repz
arpl
push
pop
jns
jge
clc
xor
lods
xchg
and
and
pop
mov
jmp
ret
sbb
ret
adc
push
lock
fcomi
adc
mov
pusha
scas
sbb
dec
mov
clc
cmp
outsl
in
je
ljmp
sahf
rclb
outsb
mov
shlb
cld
push
mov
test
fisubl
jl
mov
dec
iret
jb
cld
mov
dec
sub
fsubs
xchg
push
mov
mov
mov
push
lods
or
add
xor
sti
jecxz
jnp
and
sbb
mov
inc
pop
outsl
or
out
jmp
xor
add
mov
addr16
cmpl
push
das
arpl
mov
add
inc
stos
scas
insb
mov
pop
mov
iret
add
mov
dec
in
jnp
mov
push
enter
mov
jl
cmpsb
mov
stos
add
pop
aad
cmp
adc
push
icebp
jne
inc
sub
push
pop
fists
cltd
xchg
bnd
nop
inc
cmpsb
pusha
sbb
ds
sti
jg
rcrl
hlt
test
test
mov
push
or
das
js
mov
cltd
fsubrs
cli
mov
jnp
push
add
data16
xchg
scas
imul
shrb
jns
pushf
xchg
cs
inc
arpl
adc
int3
popa
inc
fwait
jge
dec
sub
sub
rcll
pop
in
push
mov
not
adc
frstor
adc
pop
pop
test
mov
cmp
xor
outsl
fwait
lcall
mov
stc
aaa
sub
or
fsubs
or
outsb
btr
push
push
pop
shr
jne
loopne
lahf
push
shlb
outsb
imull
jbe
push
mov
xchg
sbb
dec
or
cwtl
pop
push
push
fdiv
or
lds
mov
push
inc
sub
js
xor
shll
cmp
or
cs
les
fisttpl
adc
sbb
subb
fmuls
popf
fs
push
in
jle
dec
imul
bound
test
dec
pop
sub
or
jnp
mov
test
sti
pop
inc
xchg
sub
pop
add
ljmp
xchg
pop
fistpl
inc
dec
pop
scas
fst
xchg
push
sub
leave
pop
mov
cmp
pop
mov
movsb
lcall
xchg
movsl
push
xor
mov
out
and
imul
out
jo
lar
push
mov
push
adc
mov
or
pop
popa
pop
lock
inc
iret
mov
fwait
insb
xchg
sub
push
movsl
adc
out
xchg
xchg
push
xorl
mov
cwtl
test
push
xor
push
cld
mov
stos
lret
cltd
pop
pop
inc
and
in
adc
push
mov
cmp
les
mov
movb
popf
es
ss
mov
pop
push
mov
movsb
cwtl
adc
inc
ficomps
push
rol
int
inc
enter
add
mov
xchg
daa
sti
lea
test
addr16
xor
push
mov
cwtl
xchg
idiv
jo
mov
mov
rolb
cld
add
lods
sub
sbb
jns
inc
das
stos
push
in
mov
push
movsl
mov
fistps
mov
xchg
mov
jle
mov
and
dec
cmp
fidivs
jb
cmpsl
imull
dec
stos
aam
fldt
inc
test
xor
andl
push
in
pushf
iret
cmp
inc
dec
jecxz
movsl
mov
leave
out
cmp
roll
fnstenv
orb
jb
aas
sti
fmuls
inc
ja
lret
imul
aas
add
sbb
pop
jge
and
jge
xorl
loopne
stos
mov
jle
pop
dec
repnz
inc
and
mov
lods
imul
int
and
shlb
cltd
out
inc
lcall
and
jbe
and
cmp
sub
je
out
adc
dec
lcall
mov
or
lds
and
enter
push
test
shll
loopne
cld
outsl
mov
sbb
xor
lret
aad
xor
fisubs
repz
adc
mov
push
outsl
mov
arpl
sbb
jmp
cmp
mov
mov
xchg
sbb
mov
sub
pop
ja
push
xchg
imul
stc
dec
sub
bound
jle
mov
jb
dec
popf
push
repz
adc
mov
dec
dec
pusha
data16
mov
ret
pusha
push
push
arpl
mov
jno
sbb
xchg
les
and
jo
xchg
ljmp
add
sub
or
arpl
push
mov
sbb
stc
movsl
fs
std
sub
inc
xor
rorl
pop
js
rol
test
cld
dec
das
or
mov
pusha
or
stos
jl
push
adc
add
stos
inc
sub
or
aas
mov
mov
adc
cmp
adc
add
xor
repz
adc
push
ljmp
je
push
jne
arpl
test
int
clc
jbe
xor
icebp
mov
push
mov
sub
mov
test
out
iret
fildl
dec
jmp
movsl
mov
and
mov
inc
fs
jg
or
out
jne
pop
mov
push
outsl
jo
out
inc
inc
ret
cmpsl
sbb
and
mov
mov
mov
sub
mov
dec
mov
xchg
and
push
add
cmp
out
incb
add
xor
xor
in
inc
adc
xor
mov
jp
or
inc
fists
js
jecxz
ret
sbb
sub
mov
cli
loope
fisttpll
mov
sub
in
mov
les
stos
cltd
icebp
cmp
fldl
and
inc
push
xor
jns
ret
adc
inc
jo
ljmp
fdivs
nop
push
fwait
push
scas
cmp
push
xor
test
fs
aas
arpl
and
mov
stos
mov
add
pushf
lcall
stc
arpl
dec
push
mov
cwtl
rorb
mov
les
mov
testl
mov
xorl
leave
cld
lods
ss
icebp
pop
mov
cs
xchg
imul
ret
mov
orb
adc
sar
fs
sub
xorl
popa
adc
lahf
lods
push
jno
inc
push
mov
jecxz
mov
out
scas
fwait
in
xchg
clc
clc
xor
dec
push
addr16
movsb
lret
repz
xchg
std
popa
mov
fldl
ja
test
popa
or
in
movsb
mov
outsb
push
gs
arpl
imul
adc
in
dec
sub
popa
xchg
daa
sub
xchg
push
das
test
mov
stc
addb
cmp
mov
test
pop
push
shrl
adc
orb
jno
negb
dec
mov
cmp
adc
lds
or
mov
mov
pop
jl
sarl
push
mov
fldcw
clc
bound
adc
clc
push
pop
ret
inc
movl
pop
inc
test
sub
shl
cli
aaa
adc
mov
andb
fldenv
fdivrs
sahf
sub
adc
jnp
loopne
js
out
neg
bound
jp
jb
xor
push
cmpsl
aaa
dec
xor
xchg
dec
fsubs
idivb
insb
clc
or
cmp
aaa
xor
adc
adc
xlat
sub
sub
push
decb
or
mov
stc
dec
scas
loop
pop
inc
lods
dec
xchg
out
cwtl
cmp
inc
cmc
and
or
in
jb
lods
mov
and
neg
loope
ficoml
cli
data16
iret
mov
or
or
fst
cmp
sbb
adc
sub
into
cwtl
cwtl
mov
xor
lahf
stos
jecxz
mov
sbb
and
or
outsb
scas
lahf
out
icebp
popa
mov
icebp
mov
rol
leave
jae
aas
mov
std
xor
xor
into
mov
lods
and
add
cmp
stos
or
decl
std
jp
inc
pop
xor
sbb
sbb
mov
nop
mov
mov
mov
jb
repz
pop
sbb
xrelease
hlt
lret
movsl
cs
ret
js
inc
dec
cwtl
inc
mov
mov
xor
add
idivb
mov
in
add
mov
dec
mov
dec
pop
hlt
fdivs
inc
xchg
aam
mov
daa
pop
lret
xchg
mov
mov
rcll
adc
insb
add
jae
and
sub
ret
outsb
sub
inc
negl
sbb
out
pushf
ja
outsb
cmp
xor
xor
nop
stos
jmp
jne
aas
das
mov
sti
ficoml
cmp
cmc
inc
test
subl
and
sbbb
nop
xchg
pusha
and
jmp
das
aam
dec
dec
lret
rol
lea
insl
fsts
and
pop
xchg
or
stos
mov
test
repnz
and
stos
je
repz
nop
test
mov
rcl
mov
mov
lret
shrb
jp
in
popf
cmp
push
cmp
ret
repz
xor
addr16
jle
mov
or
cmpsl
lret
gs
mov
hlt
repz
pop
into
or
ljmp
dec
mov
mov
outsl
mov
mov
mov
insl
sbb
and
pushf
and
inc
aas
push
popf
leave
subl
mov
mov
dec
xchg
add
insl
lock
mov
fdivrl
pop
scas
lods
mov
mov
test
andb
sahf
lret
mov
into
adc
xchg
pop
ret
pop
in
loop
adc
and
in
inc
pop
int
iret
mov
mov
push
add
cmp
mov
xchg
aad
cld
jge
out
hlt
push
lcall
inc
dec
cmp
movsb
jae
jle
and
push
mov
add
mov
add
test
jl
dec
push
or
inc
std
ds
adc
dec
add
mov
roll
jbe
dec
fldl
scas
jp
inc
xor
test
sbb
cmp
push
lds
int
pop
xor
mov
pop
loop
cmc
xchg
out
shll
and
nop
stc
jge
sbbb
xor
or
rorb
mov
mov
fxch
aam
aaa
enter
add
mov
jae
cmp
popa
adcl
jmp
sbb
sarb
leave
popa
je
xchg
mov
sbb
fadds
sbb
adc
pop
loope
adc
pop
sub
cli
xchg
push
xor
cmpsb
lret
inc
loop
idivl
push
and
cmp
adc
jecxz
dec
rcrl
inc
dec
inc
add
loop
imul
pop
outsb
xchg
aas
ljmp
jle
mov
sbb
dec
scas
movsb
push
pop
sbb
push
loope
aad
pop
jae
push
lods
and
and
add
jb
pop
jmp
cmp
jmp
push
dec
out
imul
dec
mov
addr16
xor
es
in
and
daa
int3
sub
test
scas
insb
dec
mov
pop
pop
bound
jmp
ds
call
insb
and
pushf
mov
gs
jge
je
xor
jecxz
xchg
cmp
hlt
jne
mull
sbb
ja
icebp
out
jle
mov
xchg
jo
insl
fcmovu
jne
jb
sbb
loopne
gs
out
and
ss
push
xchg
and
sarb
je
js
dec
int
lahf
lahf
mov
push
or
mov
negb
dec
rep
dec
sub
mov
cmc
popa
test
movsl
inc
sbb
jno
xchg
xchg
add
xchg
push
push
pop
movsb
mov
jmp
mov
std
sub
xor
push
mov
repnz
orl
mov
push
xchg
mov
dec
inc
or
jge
dec
insl
or
push
xchg
int
sbb
pop
or
xchg
mov
sbb
jbe
jge
imul
cmpsl
fistpl
sub
push
xchg
hlt
or
push
pop
ds
fsubl
sbb
clc
mov
das
imul
push
sub
mov
mov
and
mov
out
iret
fsts
cmp
push
pop
add
fwait
ja
mov
mov
fbld
shll
and
andl
push
dec
shrd
push
dec
in
insl
sbb
insl
iret
inc
sub
bound
mov
mov
dec
push
jle
ss
mov
mov
hlt
clc
loopne
daa
add
pop
ljmp
push
inc
sbb
xchg
cltd
es
nop
sub
jg
inc
jle
loopne
pop
sub
js
or
mov
les
sbb
mov
or
adc
mov
mov
cwtl
aad
adc
fdivrl
and
ret
sub
cld
and
sbb
pop
dec
sub
hlt
cmp
adc
aaa
jo
add
push
dec
xchg
adc
jg
cmp
xlat
add
in
cmp
push
filds
xor
adc
test
push
pop
mov
xor
pop
gs
test
rcrb
push
pop
aad
mov
dec
pop
mull
mov
fisubl
sub
stos
into
out
xlat
scas
pop
stos
arpl
lea
adc
in
pop
fldt
lcall
mov
cld
int
sbb
inc
push
ljmp
pusha
cmpsl
mov
adc
xchg
sbb
jb
and
das
das
inc
andl
mov
cmp
repnz
sbb
dec
dec
mov
sub
fs
ss
pop
dec
call
dec
in
push
sbb
mov
jb
sub
xorl
into
pop
fsubrl
inc
leave
fdivl
adc
dec
jl
je
push
sbb
pusha
jno
inc
cld
das
sahf
in
xlat
into
sub
add
dec
pushf
cmc
mov
dec
pop
sbb
xchg
movsb
or
xor
insl
or
jecxz,pn
in
std
nop
cwtl
in
testb
les
add
test
mov
fmull
or
pop
fistps
jl
and
dec
scas
js
call
push
push
shlb
cmpsl
jmp
daa
sbb
cltd
xchg
sahf
inc
mov
scas
leave
sbb
bound
mov
sub
jge
outsl
ficompl
lea
push
or
into
inc
add
jb
cmp
jmp
stos
xchg
pop
xchg
mov
dec
int
jne
inc
subb
ja
add
ret
ja
mov
mov
mov
clc
test
mov
mov
push
test
psrld
mov
dec
int3
lea
cld
sub
or
es
ds
dec
dec
out
js
dec
rcrl
jb
mov
dec
out
xchg
jmp
lea
xchg
lea
pusha
or
mov
cmp
hlt
ret
pop
in
in
xchg
or
sbb
data16
adcb
icebp
mov
subl
fisubl
jge
shr
push
inc
hlt
and
ret
xchg
sarb
jg
push
mov
js
fidivrl
push
jne
fnstcw
std
dec
call
ret
lds
pop
or
rcll
mov
cmp
out
mull
out
sbb
xor
jge
mov
lock
mov
pop
cmpsb
cmp
movsb
lods
jne
dec
mov
int
clc
inc
movsl
push
iret
sbb
fisttpll
pop
inc
mov
shr
rorb
xchg
incl
mov
push
xor
bound
sub
cmp
sbb
sub
stos
lds
jb
subl
out
aam
arpl
sub
movsl
sbb
jmp
sarb
push
pop
outsb
movsb
jbe
mov
js
ljmp
out
lcall
fcomp
pop
test
dec
push
inc
fcmovnbe
inc
jbe
push
negl
out
xlat
mov
test
test
mov
je
add
push
aad
aaa
xor
sub
adc
mov
aad
inc
and
enter
imul
sahf
and
xchg
cli
and
jge
loope
jle
hlt
and
dec
add
mov
mov
pop
out
adc
cmp
js
inc
mov
xchg
dec
lahf
xchg
jp
add
lods
flds
sahf
xchg
xchg
dec
call
pop
dec
xchg
lret
fsubl
outsb
cmp
mov
into
dec
int
dec
mov
mov
in
mov
jae
pushf
xchg
out
mov
sub
xor
cmp
mov
lods
xchg
int3
stos
cmc
xlat
insb
jno
cmpsl
ss
and
scas
arpl
fidivrl
mov
outsl
das
sub
test
outsl
add
jb
jle
mov
mov
jns
das
out
dec
push
mov
popf
loop
popa
dec
sub
cmpb
ss
and
addl
adc
pop
pop
int3
and
fstps
jmp
add
mov
cmc
or
int3
movb
decb
sarb
add
mov
ret
jecxz
jmp
jl
insl
jb
xor
test
cld
lret
test
jb
lea
inc
xchg
sbb
xchg
jno
dec
pop
push
push
inc
cs
pop
lret
out
xor
loopne
mov
lds
and
ret
das
xchg
xchg
ja
ja
adc
mov
or
or
jle
jl
inc
cmp
daa
fcoml
sti
loopne
add
int
int
fxch
mov
ss
lret
lods
jmp
arpl
sbb
xchg
jnp
popf
xchg
hlt
int3
add
and
cmpsl
mov
rol
popf
fucomi
mov
inc
inc
mov
add
insb
insb
iret
hlt
adc
jl
mov
hlt
mov
sbb
fisttps
dec
popl
mov
jns
pop
mov
or
imul
gs
mov
jne
or
sti
mov
outsl
inc
cld
mov
xchg
arpl
outsb
lods
adc
xchg
adc
aas
loop
nop
sahf
xchg
movsl
and
dec
sbb
shll
lret
mov
mov
icebp
mov
call
mov
cld
xor
and
outsl
pop
imul
bswap
mov
sti
aam
stos
jge
sbb
mov
pop
adc
in
pop
test
mov
mov
loope
fwait
ret
scas
and
ljmp
adc
icebp
pop
jns
mov
push
repz
mov
scas
stos
movsb
stos
mov
adc
insb
notb
lret
js
mov
push
ret
out
or
pop
sub
mov
loopne
and
jae
sub
das
pushf
into
repz
sarb
jnp
and
insl
adc
jl
mov
or
outsw
out
pop
js
mov
loop
ret
lahf
in
pop
mov
fsubrl
or
jne
adc
in
dec
pop
push
and
loope
push
mov
ss
xor
sub
fisttpl
fdivrs
lock
push
dec
sbb
stc
mov
aam
xor
jge
adc
in
pop
pop
mov
sbb
and
inc
enter
loope,pn
shr
mov
cmpb
rolb
and
and
and
jae
vpsubsw
mov
ficoms
xchg
mov
les
mov
pop
mov
dec
jbe
and
or
out
mov
pop
add
xlat
mov
fstps
sahf
or
fsubr
pop
test
pop
mov
shl
out
inc
loopne
outsl
inc
lret
push
pop
cmp
push
jae
dec
js
imul
das
or
sbb
and
sub
xlat
xlat
mov
fnstcw
mov
xchg
shrl
insl
dec
jnp
sub
cltd
push
leave
cmp
shl
sbb
jle
out
xchg
pop
jmp
cmp
clc
outsl
lds
inc
add
sub
stc
out
xchg
popf
js
pop
ljmp
mov
subl
cli
mov
iret
incl
jb
int
cwtl
in
jns
push
jo
out
add
lret
in
adc
fists
aad
js
push
push
imul
inc
out
sti
jmp
rcr
push
ret
inc
mov
xchg
cli
and
popa
push
sbbl
mov
push
or
insb
nop
inc
test
cmc
sbb
into
inc
mov
scas
mov
stos
frstor
pop
test
jmp
xor
and
xor
mov
mov
pusha
push
jns
pop
jno
adcl
sbb
mov
pop
mov
pusha
xor
xchg
mov
sti
subl
pop
add
cmp
lret
clc
and
test
add
clc
cmpsl
aam
iret
jno
testl
bound
adc
inc
sti
inc
and
pop
xchg
fdivr
lea
inc
mov
arpl
adc
xchg
test
mov
sarl
xlat
inc
xor
sbb
loop
and
mov
out
mov
sti
sbb
mull
mov
jmp
stos
int3
fsubrp
pop
pop
xchg
and
test
sbb
divl
cltd
jae
dec
pop
movsb
and
pop
sub
out
cmp
lds
je
cltd
mov
jle
adc
lret
and
sbb
or
shlb
mov
ficoml
pop
xchg
data16
jmp
jge
add
sbb
lcall
and
push
sub
inc
shrl
adc
mov
mov
lods
and
cmp
xchg
in
dec
loope
lods
ficomps
sub
pop
jne
xor
push
xchg
scas
xor
stc
adc
loop
push
mov
ja
inc
fisttpll
sub
shrb
bnd
xchg
add
jns
leave
xchg
fsubr
xor
jnp
mov
or
loopne
jb
loop
shlb
movsl
bound
aad
sbb
ror
push
outsb
pop
xchg
push
push
rol
ret
push
neg
sub
mov
sub
lcall
pop
scas
enter
mov
mov
push
pop
ss
outsl
pop
sarb
ds
shl
repnz
pop
xchg
pop
pop
loop
fnstenv
sbb
mov
in
insl
sub
test
dec
std
jmp
shlb
xlat
push
shll
leave
sbb
call
nop
fadds
sub
adc
fsts
cli
movsl
jnp
and
and
sahf
sbb
inc
ret
push
leave
cld
ret
incb
aam
push
repnz
add
ja
jg
mov
pop
sbb
or
and
mov
shl
out
adc
push
mov
stos
xchg
dec
mov
nop
out
dec
mov
inc
mov
lea
pop
cmp
inc
push
adc
inc
repnz
cmpb
aam
ret
cli
aad
sahf
test
inc
fldt
cmp
and
dec
aad
xlat
push
repnz
mov
test
and
adc
xor
or
pop
shlb
orb
sbb
mov
out
testl
rcr
xor
sbb
addr16
daa
adc
repz
hlt
hlt
movsl
cld
and
lret
add
push
stos
mov
repnz
rcll
aad
in
pop
and
adc
add
int
push
aas
inc
push
pop
mov
dec
testb
inc
testb
int
stos
test
mov
adc
mov
insb
pushf
loop
outsl
imul
xchg
or
sbb
dec
ret
aas
add
ss
jl
imul
mov
add
out
pop
mov
jmp
scas
stos
out
sbb
jmp
push
jb
dec
jnp
pop
lds
ss
add
jp
push
pop
fdivrs
pop
ds
jecxz
add
cmpsb
pop
das
push
add
pop
scas
movsb
aad
fsubs
pop
pop
insb
popa
sbb
mov
ljmp
fcmovbe
andl
subb
decl
stos
push
xchg
dec
enter
push
mov
cmp
addr16
mov
xor
cmpps
xor
push
mov
int
jmp
lret
fisubs
xchg
cmp
xchg
mov
lods
and
sub
mov
in
sub
dec
adc
shll
orb
rorl
loopne
mov
mov
mov
or
pop
adc
xchg
xor
add
jbe
jb
dec
stos
xchg
sbb
outsb
popa
sub
mov
jecxz
je
les
sahf
inc
in
sti
movsl
ret
xor
gs
pop
and
fidivl
out
add
inc
out
cli
aaa
test
xchg
iret
push
dec
dec
in
addr16
pop
lcall
push
push
pop
xorb
sub
mov
out
loopne
fcoml
insb
pop
jno
mov
int
aam
lret
stos
aam
cltd
cmp
mov
stos
hlt
or
aaa
enter
xchg
mov
add
shrb
stc
push
sbb
add
mov
int
lds
jp
test
leave
sub
mov
ret
leave
dec
sub
inc
in
out
leave
imul
popa
leave
mov
test
pusha
dec
ss
add
pop
lret
lret
fbstp
in
and
andb
shrl
iret
jne
adc
das
or
dec
jbe
into
cmc
mov
adc
aaa
pop
and
push
in
popa
bound
notl
test
xor
and
mov
add
sbb
dec
gs
mov
pop
xchg
mov
mov
rcl
push
jmp
dec
sub
lahf
shll
loope
cmpsb
fisttpl
push
mov
daa
popf
and
push
cmpsb
sbb
cmp
fbstp
jno
and
in
mov
mov
fldt
mov
movsl
into
xor
jmp
test
mov
jne
mov
mov
orl
cs
push
xor
ljmp
push
jno
sbb
cwtl
stos
mov
fistpll
adc
jp
int
or
jo
repnz
ret
pusha
call
or
push
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
rol
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
xlat
