call
xchg
sub
mov
mov
pop
movl
xchg
sub
mov
mov
pop
push
xchg
sub
mov
mov
pop
call
xchg
sub
mov
mov
pop
ret
iret
cwtl
mov
cltd
arpl
inc
rcrl
rcrl
iret
pushf
xor
dec
sub
lcall
adc
pop
jecxz
jns
aaa
cwtl
jg
adc
dec
mov
std
into
jno
call
gs
and
lret
inc
es
add
adc
lret
sub
cmp
cltd
jne
add
int3
jg
enter
xchg
sbb
mov
and
jo
jmp
rcrl
mov
push
push
pop
paddw
in
lret
cltd
lahf
cmp
sub
je
mov
rcrl
push
xor
mov
stc
dec
pop
repz
adc
sbb
sbbl
dec
rcr
push
orb
xchg
add
loop
push
xchg
setnp
nop
stc
out
fwait
mov
cmp
movsb
jae
lea
enter
mov
ja
lods
outsl
mov
xchg
int3
call
sti
nop
int
mov
mov
out
xchg
sub
mov
dec
sbb
xor
xchg
xor
xchg
jno
mov
xchg
lock
test
call
mov
cmpsb
sub
iret
ss
pop
inc
xchg
xlat
sarb
imull
out
mov
outsl
das
mov
push
or
test
shl
or
jns
das
sbbb
test
xlat
xchg
xchg
inc
xorb
mov
cwtl
sbb
aaa
je
aaa
cwtl
adc
adc
adc
orl
mov
push
pop
sbb
js
pop
xchg
fsts
notl
mov
test
adc
imul
dec
mov
test
mov
bound
mov
xchg
scas
nop
fisttpll
imul
xchg
scas
mov
mov
mov
xchg
xchg
pop
test
lock
test
rorb
xchg
mov
mov
push
nop
jno
scas
mov
aaa
sbb
xchg
mov
or
sbb
pop
nop
pop
cmpsl
push
xchg
repnz
rclb
mov
cli
xchg
cmpsl
pushf
lahf
xchg
pop
das
mov
aad
jb
xchg
xchg
jmp
leave
jmp
repz
sub
and
push
sti
jg
mov
or
lods
repnz
push
adc
push
pop
sbb
push
test
or
sub
adc
adcl
xor
cmp
sbb
and
aas
shlb
fnstsw
adc
js
cmc
sbb
dec
bts
mov
popf
cwtl
popa
adc
sbb
test
rorl
xchg
adcb
sar
sbb
sbb
xchg
dec
cwtl
pushl
xchg
imul
push
outsb
out
outsb
outsb
outsb
xchg
scas
mov
ds
ds
data16
pop
outsb
test
inc
test
xchg
setbe
outsb
subb
sbb
aam
jno
push
xchg
or
dec
jb
mov
mov
ja
push
fwait
sub
xchg
icebp
and
jae
icebp
popa
sub
in
jb
or
aas
xchg
adc
filds
mov
adc
not
mov
hlt
rorb
jg
and
mov
mov
loope
or
scas
adc
pop
cltd
imul
push
jno
mov
cltd
sbb
cmpsb
pop
sbb
mov
rcr
inc
repz
adc
stos
cltd
loop
xor
ror
fwait
cmpsl
nop
ret
xchg
adc
mov
popa
out
cmpsl
ja
notl
rclb
xchg
lds
jo
aaa
cltd
fbld
pop
add
push
and
stos
cmp
pandn
xor
xchg
push
adc
lock
iret
and
jecxz
mov
xor
mov
sti
daa
aaa
push
sbb
movsl
fwait
push
pop
mov
jecxz
test
popa
mov
daa
lods
push
test
mov
lea
cmp
add
hlt
iret
pop
cmp
fs
and
jno
addb
cmpsb
mov
mov
inc
hlt
bnd
test
add
out
iret
add
fst
sahf
jnp
cmp
fs
fsts
cmpsb
cwtl
loop
leave
inc
cmp
loop
out
xchg
push
or
nop
xchg
xchg
mov
sub
cld
xchg
jnp
sub
jnp
mov
and
jne
std
cmpsl
bound
das
test
add
push
mov
adc
inc
cld
sbbb
loope
ret
loope
lock
pop
or
mov
mov
mov
adc
sub
and
push
out
pop
cmp
mov
mov
cmp
nop
mov
or
adc
iret
cmpsb
jb
add
dec
push
into
test
out
mov
mov
push
fwait
pop
pop
xchg
xchg
negb
sar
xchg
mov
and
jo
pop
jl
lds
pop
inc
fstpt
clc
out
incb
pop
sub
hlt
pop
mov
or
pop
rcr
vphsubwd
repnz
ss
popf
pop
xchg
jbe
inc
push
in
jbe
lcall
lret
jecxz
mov
je
sbb
push
cmpsl
sbb
cmp
cmp
xchg
loope
or
stos
and
mov
add
sub
es
mov
xor
popa
hlt
fistpl
mov
mov
bound
or
mov
lahf
movsl
loop
lcall
ja
and
rcrl
push
pop
loope
rcrl
pop
adc
mov
and
dec
out
mov
neg
pushf
dec
sarb
cwtl
outsl
lods
jg
dec
dec
jns
cwtl
jno
aas
mov
and
bound
sahf
sbb
pop
cltd
test
cmpb
xchg
rcrb
repz
lahf
scas
fistl
sbb
pop
out
xor
push
je
adc
aas
mov
fstl
adc
test
cs
ja
shrb
popf
xchg
mov
pop
cmp
xchg
adc
cmp
adc
xor
or
idivl
test
mov
adc
cmpsl
mov
scas
jecxz
test
outsl
rcrl
test
aam
popf
int
movsl
sub
loope
stos
jno
gs
or
fistpll
stos
jno
mov
push
cli
outsl
mov
jne
stos
scas
mov
sbb
xchg
js
and
mov
jge
movsl
sbb
jae
xchg
xchg
aaa
mov
cmp
xchg
mov
mov
mov
adc
std
xchg
arpl
fstpl
xchg
jg
xchg
ret
xor
and
hlt
jae
packsswb
std
xchg
jecxz
add
sub
sahf
sub
add
xor
fwait
sbb
rcr
iret
inc
push
pushf
mov
lods
jbe
fs
xchg
repz
inc
mov
adc
jbe
fcoms
aad
cmp
cmp
pop
xchg
cmpsl
pop
ss
inc
lret
pushf
sub
int3
adc
inc
js
sti
sbb
fldl
dec
jecxz
adc
test
jmp
enter
xor
in
jmp
cld
pushf
xchg
mov
lods
pop
mov
inc
ja
in
pop
or
imul
test
jmp
xchg
cltd
inc
sub
xchg
push
mov
xchg
cmp
pop
aam
div
ret
div
pop
inc
lock
xchg
mov
popf
mov
xchg
mov
dec
test
in
add
adc
fcmovbe
cmpsl
pop
rorl
inc
xchg
pop
sbb
xadd
sbb
movsl
push
add
clc
test
rorb
adc
daa
sbb
pop
mov
in
mov
popa
sub
jno
iret
mov
xchg
xor
scas
mov
and
fs
clc
cmp
ud1
pop
mov
adc
xchg
ficoms
mov
popf
cmp
aaa
push
enter
lds
push
pop
mov
jns
mov
pop
jns
or
mov
xor
adc
addb
insl
mov
iret
inc
shr
adcl
push
or
sbb
adc
mov
jae
sbb
test
je
lret
mov
addb
mov
lock
inc
sahf
mov
xchg
dec
and
sbb
aam
pusha
in
pop
jo
xchg
push
mov
insl
sahf
aam
jae
cld
dec
outsb
in
lea
mov
aam
popa
sbb
icebp
mov
sub
mov
int
pop
mov
and
fisubrs
sub
notb
dec
sbb
sti
imul
jno
stos
cmp
xrelease
mov
fnsave
dec
xchg
pop
into
sub
sahf
popf
dec
outsl
dec
jb
jl
xchg
and
int
stc
aam
jge
jge
mov
daa
mov
lcall
nop
adcb
and
push
sarl
repnz
sbb
and
ret
adc
jecxz
pop
popf
subb
cmpsb
push
icebp
push
sub
mov
and
outsb
inc
mov
cmp
xchg
inc
stos
out
push
pop
cmp
jo
or
movhpd
int
repnz
lds
movsb
loopne
mov
xchg
lods
pop
xchg
fldenv
mov
mov
push
int3
sbb
xor
and
fstps
push
out
lahf
jg
repnz
xor
dec
dec
sbb
push
add
inc
mov
sub
ja
cmc
ret
aaa
ja
push
or
mov
rclb
sbb
and
jo
mov
sti
mov
movsl
test
or
mov
mov
adcb
push
loop
loopne
lret
push
xchg
xchg
jb
cmpsl
xor
fwait
mov
push
cmp
shlb
ret
sbb
pop
xor
cs
call
push
in
add
push
in
pop
jns
out
jae
fisubrs
mov
or
jno
sbb
jge
outsb
lahf
jge
inc
or
call
enter
dec
and
ja
inc
repz
push
aas
adc
cmpsb
inc
pop
cmp
outsl
stos
je
andl
add
dec
adc
aas
nop
clc
loop
fbstp
popf
fwait
xchg
daa
cmp
jbe
xchg
aad
orb
movsl
out
in
insb
test
fnstcw
sbb
imul
adc
pop
outsb
pop
pop
cmp
andb
inc
ds
js
cmpsl
dec
imul
loop
ljmp
mov
jno
outsb
inc
xchg
mov
arpl
fcoml
ja
popf
shrb
xor
pop
lds
push
xor
addr16
pop
fcmovnu
mov
out
out
int3
imul
lret
adc
mov
call
dec
xor
arpl
jmp
decl
stos
mov
sub
out
int3
dec
add
outsl
mov
cs
movb
test
aam
rorl
js
dec
push
std
push
std
bound
push
adc
popf
lods
frstor
pusha
xor
xor
adcl
out
call
ljmp
add
sub
ror
shrb
dec
insl
jbe
in
sbb
mov
pop
scas
mov
mov
xchg
aad
std
js
clc
xchg
stos
call
pop
cmp
add
and
loopne
or
pop
xchg
hlt
popf
cwtl
push
popf
pop
cmpsb
int
in
hlt
cwtl
adcl
les
adc
repz
mov
ficoml
aas
cmc
sar
divl
outsl
adc
lock
mov
pop
mov
into
xchg
cmp
or
sti
fadd
loopne
lret
bound
int3
xchg
fidivl
push
mov
add
mov
aam
divb
jae
aam
xchg
cltd
mov
out
mov
pop
push
jg
cmpsb
adc
cmp
stos
push
push
int3
adc
jnp
add
mov
test
psrad
jmp
aad
and
arpl
aaa
adc
stos
mov
cmp
xor
aad
rorl
popa
ret
push
mov
xchg
into
pop
push
cmp
or
subb
jno
xchg
inc
cmpsl
sub
mov
iret
sub
xchg
in
push
inc
dec
aam
mov
jecxz
jbe
mov
jo
es
xchg
sub
bound
dec
xor
insl
fnsave
scas
mov
ret
push
xchg
mov
xchg
stos
pop
push
adc
add
mov
in
mov
es
mov
stos
rclb
roll
sbb
add
fstp
out
mov
stos
ljmp
jle
test
fadds
adc
jb
mov
mov
decb
je
pushf
out
mov
movsb
cmp
mov
aad
xchg
ss
jmp
mov
fsubl
push
inc
enter
dec
pop
rcrb
inc
rol
pop
inc
mov
and
ss
push
aam
aas
stc
inc
xor
inc
mov
or
mov
sbb
adc
stc
fucomi
and
ljmp
aad
inc
pop
bound
xorl
lcall
fcompl
mov
sub
mov
out
shl
gs
xor
and
pop
add
mov
pop
xchg
add
sub
jbe
xchg
mov
out
xchg
sti
xor
jmp
outsb
ljmp
push
rcr
js
sub
fcompl
jne
pop
push
negl
das
ljmp
lahf
mov
int
fwait
mul
jno
ss
jne
and
dec
rcll
stos
mov
cmpsl
sbb
mov
in
enter
add
shll
or
or
add
and
out
mov
leave
adc
or
sti
xor
xchg
cmp
mov
xor
je
into
aam
cld
imul
dec
fnsave
and
test
inc
faddp
pop
jbe
push
loope
clc
xchg
dec
addb
mov
scas
cmp
in
cmp
leave
sbb
push
cltd
and
adc
xlat
cmpsb
rcrl
repz
sbbl
pop
fistpll
shll
adc
adc
cmp
adc
stos
cmp
jge
daa
inc
inc
flds
add
loopne
insb
emms
inc
lahf
clc
sti
loope
or
clc
aam
mov
xchg
add
sbb
aad
mov
das
loopne
outsl
mov
imull
cli
jp
leave
sbb
inc
pop
push
cmc
mov
mov
fwait
movsb
cmp
xchg
fs
pop
loopne
enter
and
jg
movsbl
les
dec
out
sti
enter
ss
test
lret
aam
push
ficomps
cmp
cld
inc
movsb
push
cmp
and
inc
cmpsb
cmp
leave
push
push
and
mov
sbb
push
fs
movsb
aaa
jbe
cmc
lods
lea
mov
push
aam
sbb
xchg
push
and
xchg
mov
sbb
push
out
inc
pusha
cmp
mov
xchg
fwait
lock
arpl
gs
mov
mov
out
dec
divl
int
test
dec
xchg
xchg
mov
mov
test
mov
push
movsb
xor
xchg
popf
xchg
sbb
mov
das
push
scas
dec
negl
xchg
je
dec
push
xchg
mov
push
add
popa
sub
out
mov
add
jnp
fwait
cmpsb
sbb
push
sarl
insl
mov
cli
xor
xor
dec
add
xor
int3
inc
div
xchg
test
sbb
jge
pop
ret
xchg
in
sub
jae
add
cmp
popa
or
shlb
ret
jl
dec
add
push
sub
icebp
icebp
sbb
outsb
test
lea
jne
cltd
xchg
rorb
jge
ror
scas
aaa
xchg
mov
fnstcw
mov
cld
inc
outsb
mov
fcomi
add
ret
xchg
cld
test
fwait
cmpsb
pop
inc
shll
inc
push
fistpll
jne
mov
xor
jp
cmp
mov
leave
rorb
mov
push
mov
dec
and
aas
sbb
bound
dec
cltd
add
sarb
and
xchg
cli
mov
mov
std
test
sub
mov
adc
dec
mov
in
inc
out
cmp
add
call
jle
dec
cwtl
xlat
out
pop
test
xor
push
lods
fwait
shrb
push
imul
pop
rcrl
out
ds
mull
cltd
nop
sbb
mov
setle
addr16
in
inc
jl
push
add
mov
adc
aam
pop
jae
pop
test
push
add
push
sub
movsl
inc
mov
enter
enter
out
ss
push
fdivr
icebp
sbb
jb
js
mov
addr16
jae
mov
pusha
cmp
jl
sub
or
xor
cs
out
sub
mov
mov
lcall
xor
pusha
lahf
add
fiadds
push
sahf
sahf
insl
shrl
insl
jae
cmpsl
fstpl
jmp
jae
out
mov
adcl
xchg
enter
jecxz
mov
sbb
mov
push
inc
into
mov
inc
pushf
gs
in
sar
jo
fisttps
dec
sbb
dec
jg
pop
jae
test
popa
es
cwtl
jne
ror
or
cs
ds
out
mov
mov
mov
out
popf
sub
push
das
pop
cmpb
fs
in
xchg
inc
iret
icebp
lret
sbb
xchg
mov
dec
cwtl
test
xlat
sbb
mov
xor
gs
int3
push
mov
mov
in
sub
mov
pop
cli
and
xchg
xchg
js
and
mov
jns
jbe
clc
and
test
pusha
das
aas
or
je
cmp
mov
in
pop
mov
dec
sbb
movsl
pop
rolb
push
in
lock
ja
push
ds
sub
outsb
lcall
push
aam
testl
clc
cmc
rorb
mov
push
xor
xor
mov
push
test
stos
sbb
mov
into
adc
mov
fidivrl
std
mov
lods
aas
or
jo
jnp,pn
pusha
dec
pop
mov
dec
mov
adc
aaa
xor
out
jmp
aas
test
je
mov
or
pushf
pop
sub
roll
ss
shrb
xchg
adc
adc
scas
sbb
lret
fwait
sar
cmp
ss
mov
lds
adc
ljmp
mov
push
dec
sub
cmpsl
mov
and
es
mov
xlat
and
in
hlt
loop
mov
xchg
ja
xchg
enter
in
add
ss
sti
mov
pushf
push
dec
and
push
icebp
push
and
cld
lods
dec
gs
decl
cwtl
stos
shrl
or
jae
shll
dec
cmp
les
mov
dec
jb
js
pop
pop
push
push
int
pop
jp
mov
xlat
jbe
pop
dec
cmp
iret
push
cltd
adc
xchg
je
dec
add
push
sbb
shrb
rolb
test
cmc
faddl
mov
sbb
std
bound
ret
ja
xchg
jns
lret
mov
cmc
nop
xchg
daa
dec
inc
call
fwait
push
adc
mov
mov
dec
es
mov
sub
stos
xchg
and
sub
divl
in
and
xchg
push
aam
pop
out
pop
aam
rcrb
xchg
push
add
bnd
pusha
lret
or
pusha
mov
push
mov
mov
lret
mov
int3
cmc
mov
inc
pop
push
push
rcrl
aam
stos
cmp
mov
roll
jmp
cmpsl
iret
cli
ret
pop
jmp
bound
fsubrs
repz
sbb
adc
sub
add
xlat
mov
data16
int3
loopne
out
mov
idivl
ljmp
xchg
mov
shl
test
mov
stos
or
not
fidivl
inc
pusha
pop
dec
imull
int
je
and
cmpsl
pop
movsb
imul
test
jle
int3
imul
popa
lods
xchg
lods
inc
ja
arpl
and
insb
sbb
inc
cs
fildl
scas
ret
mov
popa
mov
mov
sub
insb
cwtl
or
movsb
and
xchg
jg
and
cmpsb
xor
mov
pop
inc
jb
cltd
cwtl
aam
pop
dec
or
popf
pop
cmp
push
icebp
fsubs
jg
or
inc
rcr
cmpsb
jl
movsb
and
les
jns
xor
inc
in
and
push
adc
lock
lahf
in
mov
fbld
lock
sbb
push
push
call
or
aam
rorl
mov
sbb
insb
mov
inc
loop
stos
imul
in
repnz
cli
xor
push
ja
lahf
hlt
push
inc
aam
inc
or
mov
loop
or
add
std
adc
push
add
fmull
mov
sbb
add
sbb
cwtl
pop
mov
lock
or
arpl
sbb
jnp
mov
add
mov
and
das
in
pushf
inc
mov
lods
jge
sbb
pop
adc
or
scas
sub
insb
jae
add
push
add
insb
aaa
fs
dec
mov
dec
fldt
and
jne
data16
js
in
in
push
daa
adc
in
mov
addr16
push
test
add
lods
mov
out
gs
push
push
test
insl
cmp
jp
popa
hlt
mov
test
in
push
xchg
subb
insb
xchg
push
insb
inc
sub
shrl
mov
enter
inc
adc
ret
loopne
stos
dec
mov
jno
roll
push
jge
test
jno
mov
fsubrl
pusha
insb
hlt
es
clc
in
loopne
out
push
loopne
push
into
jecxz
dec
js
daa
scas
js
push
push
es
cmp
insl
out
mov
shrl
out
insl
int3
int3
push
insb
cmpsb
insl
pop
cmc
xor
lahf
outsb
mov
sbbl
out
xor
pop
insb
or
scas
xor
lahf
das
add
xchg
xchg
add
add
xchg
mov
xchg
push
and
repz
hlt
adc
test
xchg
int3
jne
fcoms
xor
rcrl
dec
aad
xchg
dec
je
mov
push
movsl
add
divl
shlb
out
insl
fdivs
pop
pop
xchg
mov
in
or
loop
xchg
push
mov
stos
mov
loop
movsb
xchg
stos
push
cmpsb
xchg
stos
bound
adc
pop
adc
adc
and
js
push
insl
mov
pop
nop
and
adc
xor
insb
mov
jg
jg
mov
xor
mov
adc
xchg
aad
movsl
fidivl
sub
inc
jecxz
xor
mov
xchg
push
andl
sbb
sub
push
cmpb
fstpt
mov
sar
mov
adc
xor
inc
aaa
sti
xor
lock
inc
das
adc
mov
inc
daa
wrmsr
mov
mov
xchg
jo
dec
pop
add
inc
fwait
mov
fwait
out
adc
enter
sti
fwait
dec
pop
loopne
push
push
lds
stos
jno
sbb
mov
mov
sbb
mov
divb
in
sbb
ss
dec
test
int3
pushf
rorl
ss
outsb
pop
shll
xor
add
test
mov
fisubs
aaa
mov
sub
stc
dec
rep
jmp
adc
xor
xchg
dec
adc
subb
push
pop
xor
jo
imul
adc
arpl
lahf
sbb
xchg
inc
mov
fimull
sub
jnp
push
gs
xor
gs
test
fimull
push
shrl
call
lods
and
lret
js
in
repz
mov
push
mov
pop
inc
inc
repz
push
xchg
mov
loopne
or
inc
in
das
jbe
and
or
mov
cmp
icebp
jmp
mov
in
xor
in
ja
scas
sub
cmp
adc
inc
movsb
jo
mov
lcall
mov
mov
cmp
arpl
push
xchg
xchg
cmp
mov
dec
js
aad
cmp
jge
cmp
ret
test
adcb
lcall
into
arpl
mov
into
lcall
jle
fsubrl
stc
test
out
xor
jnp
lcall
push
ss
mov
loopne
ja
test
mov
pop
mov
pop
xor
inc
frstor
sub
add
xchg
arpl
xor
in
in
pop
push
stc
lods
dec
sbb
mov
fs
push
test
stos
pop
inc
into
and
pop
movsl
dec
sub
imul
pop
xchg
test
es
test
je
xor
aam
lea
lret
rcll
incl
mov
jmp
inc
adc
cmp
outsl
test
pusha
xchg
and
or
xor
pop
push
mov
mov
push
rol
shlb
add
mov
les
xor
fwait
stos
imul
xchg
movsb
insb
mov
testb
mov
mov
add
loopne
or
or
mov
fcoms
imul
adc
faddl
stc
rcrl
mov
movsl
sahf
pop
mov
xchg
subb
push
adc
int
push
xchg
lret
jae
mov
pop
mov
mov
mov
inc
mov
mov
pushf
mov
imul
stos
fcompl
into
push
fsts
stc
sarb
push
or
lods
mov
arpl
mov
sbb
cmc
or
lods
and
or
push
jge
test
push
test
mov
cmpsb
imul
out
clc
test
subb
or
iret
xor
int3
sti
pop
mov
rolb
shl
scas
icebp
mov
clc
imul
and
and
mov
es
xchg
mov
ss
cli
xor
lods
mov
sbb
cmc
mov
nop
cld
hlt
lahf
dec
or
fsub
cmpsl
aam
loope
mov
cwtl
dec
sbb
hlt
inc
push
adc
test
sub
push
and
insb
xchg
das
jmp
jge
lahf
bound
push
sub
adc
dec
adc
aad
mov
sbb
int3
dec
lods
out
movsl
scas
pop
add
and
xor
sub
xor
mov
xor
inc
xchg
mov
mov
add
pop
pop
mov
cmc
cmp
cmp
jae
scas
xchg
fstpt
enter
jo
pop
mov
dec
test
je
mov
dec
sbb
xchg
sub
pop
cld
jne
and
int
test
orb
cmp
sahf
mov
add
cmp
jns
xor
pop
les
cmpsl
sbb
xor
icebp
jne
or
jp
mov
add
dec
js
test
pop
push
xchg
pop
jne
ss
or
xorb
mov
pushf
add
aad
loopne
outsb
js
scas
dec
sub
mov
addb
popa
xor
inc
ljmp
adc
repz
mov
ds
cmp
cmpsl
adc
xor
ficoms
xchg
adc
or
sub
flds
les
xor
pop
cmp
sbb
dec
repz
mov
xor
dec
nop
gs
imul
pop
jbe
adc
cmp
clc
cli
xchg
pop
mov
or
inc
jnp
adcb
adc
test
cmp
fistpl
mov
dec
push
jmp
xchg
je
stos
fwait
test
push
xor
inc
insl
pop
fbstp
pop
shld
clc
mov
les
mov
adc
xlat
pop
shlb
dec
sbb
imul
imul
push
loopne
int3
mov
mov
mov
inc
sub
cmp
add
or
add
pop
test
adc
inc
in
scas
hlt
xchg
adc
mov
cmpsl
iret
test
sbb
xor
lcall
inc
fsts
push
movsl
xchg
dec
mov
mov
ror
xchg
sub
insb
and
mov
int3
xor
repz
cli
push
add
idivl
in
lods
mov
xchg
popa
jmp
lods
pop
shll
adc
fidivs
out
xor
adcb
test
testb
movsl
xlat
xchg
jno
stos
add
scas
push
insl
xor
cmovle
jle
dec
jge
fiadds
xchg
mov
ds
mov
mov
lcall
sub
mov
mov
or
cmpsl
roll
fwait
js
pop
pop
mov
sbb
fsubrs
loopne
gs
dec
mov
lret
repz
subl
jecxz
lcall
testl
push
lds
pop
push
adc
cli
inc
adcb
clc
cwtl
ret
icebp
or
pop
sbb
es
enter
inc
aad
jle
jne
pop
lds
ja
andl
cmp
es
loopne
js
insb
pop
xor
jb
pop
mov
push
ret
or
arpl
inc
xlat
jmp
shll
in
dec
or
imul
shrb
add
shll
in
inc
xorl
xchg
sub
icebp
shll
imul
pop
in
pushf
insl
outsl
mov
stc
sahf
jecxz
leave
test
cmc
enter
sbb
xor
loop
inc
xorl
push
je
push
lret
cmp
cld
aaa
cmp
fildl
xor
dec
nopl
cmp
inc
mov
add
sub
mov
arpl
add
lods
jo
iret
dec
shlb
shlb
sub
or
cmpsb
cmp
jne
mov
stos
in
push
sub
imul
aas
ret
cli
scas
btr
cmp
loopne
stc
test
xchg
fwait
les
stc
cmp
fnstsw
jl
aas
mov
mov
lea
test
push
xchg
and
das
add
adc
push
mov
ret
ja
dec
stc
adc
jnp,pt
popf
iret
mov
andl
push
icebp
xchg
mov
jmp
jo
mov
push
push
sbb
cmp
scas
out
mov
jo
lds
pop
xor
mov
inc
xlat
xor
add
jge
aaa
push
arpl
sbb
add
addr16
cmp
and
ret
call
mov
sbb
movl
push
add
cmp
movsb
jo
jmp
lcall
in
in
sbb
jb
adc
loope
das
daa
arpl
aad
or
xchg
fiaddl
lock
das
jnp
repnz
and
push
add
mov
mov
mov
stc
adc
jae
popa
and
cmc
aam
xchg
add
rcll
jbe
sub
sbb
repnz
mov
pop
repnz
scas
subl
pop
mov
das
mov
mov
clc
andb
roll
mov
sti
mov
mov
cmp
scas
or
mov
test
xlat
lcall
loope
shll
jecxz
aaa
jp
jl
stos
push
cltd
cmp
lea
xor
jp
scas
roll
mov
mov
xor
or
pop
sub
pop
mov
adc
movsl
and
pop
jg
mov
mov
rclb
jp
mov
icebp
lret
inc
cs
xorl
mov
arpl
fisttps
repz
or
lret
inc
mov
and
arpl
es
dec
cmp
and
mov
jl
into
mov
push
sub
rcll
sbb
push
mov
lret
xorb
cmp
xchg
jecxz
push
push
mov
push
outsl
rcll
push
and
out
adc
xchg
xor
xchg
jbe
mov
fwait
mov
jb
xor
dec
and
sti
aas
sbb
subb
lods
mov
adc
pop
shl
test
in
pop
and
mov
rolb
std
add
movsb
cmc
sbb
pop
mov
jne
ja
jbe
cli
fcom
sbb
xor
jo
jb
adc
test
mov
iret
xor
jge
mov
adc
shld
push
out
bound
push
mov
mov
lock
bound
cmp
inc
sub
sub
xor
outsl
inc
scas
int3
push
call
jae
mov
ljmp
js
dec
sub
jp
add
std
jle
adc
popf
stc
loopne
test
adc
jmp
loop
and
ret
nop
pop
inc
jmp
call
adc
popa
and
stos
out
sbb
pushf
jne
out
push
pushf
roll
lahf
pop
push
add
sbb
xchg
push
push
lahf
sbb
pop
or
add
ss
in
cmp
mov
ljmp
jp
popl
clc
xchg
out
push
mov
and
js
outsl
je
imul
les
out
dec
mov
inc
popw
jns
pop
xor
fs
enter
jecxz
jmp
out
jb
jns
add
push
jb
pop
iret
lret
test
pushf
xor
loopne
data16
mov
je
jle
addr16
jp
fwait
add
xchg
sbb
subl
push
mov
inc
inc
repnz
das
ja
cmpsl
out
movsl
jnp
pop
add
call
sti
jle
mov
adc
mov
add
fildl
sbb
aam
inc
mov
ds
pop
test
jae
in
mov
push
je
fistpl
adc
xor
insb
add
movsl
jae
repnz
test
repz
int
icebp
cmc
fcom
fdivrs
dec
cmp
xor
lods
mov
mov
xor
stc
das
and
pop
or
and
mov
out
mov
push
jb
icebp
push
xor
outsb
aad
jb
addr16
xchg
xor
clc
add
or
push
mov
test
mov
mov
dec
jo
jo
sub
xor
cmpsl
xchg
aaa
sbb
sbb
pop
mov
stc
ret
adc
mov
lods
jp
jae
icebp
adc
mov
xchg
cmp
sbb
insb
movsl
cld
inc
cmpsl
push
mov
cmpl
bnd
arpl
shl
pop
aad
enter
jmp
add
adc
inc
fisubs
push
adc
xchg
sbb
mov
fnstenv
mov
xchg
in
xor
sbb
sti
popf
dec
mov
sub
repz
jge
push
add
xor
mov
inc
insb
dec
mov
fisttps
add
adcb
and
cmc
add
sbb
jne
push
movsl
std
xchg
pushl
rorl
popf
add
test
push
pop
repnz
xor
aam
lea
pusha
pop
shl
xor
test
lods
fwait
sbb
xorb
jmp
sarl
mov
pop
lret
repz
sub
fsubs
jg
mov
or
xchg
fs
xlat
jecxz
push
mov
movsl
jp
stos
jae
dec
jnp
nop
xor
call
or
dec
rcrl
in
pushf
xchg
mov
sbb
pop
add
not
icebp
popa
xchg
in
inc
aam
xchg
hlt
cmc
imul
push
inc
fadds
pop
notl
insl
pop
or
jne
test
pop
sbb
enter
xor
sar
iret
rclb
stc
jne
pop
daa
std
sbb
loop
in
ljmp
ljmp
out
inc
test
dec
jae
xchg
dec
out
sahf
mov
jo
addb
sbb
call
or
push
mov
pop
adc
mov
mov
mov
adcb
cli
popf
fisttps
inc
xor
int
icebp
mov
xor
pop
ja
xor
pushf
gs
xor
rcrb
fwait
je
mov
aas
adc
nop
pop
inc
das
and
add
xchg
js
movsl
arpl
mov
lret
lods
rorb
push
test
loop
mov
pop
pop
add
out
shl
add
cld
pusha
xor
xchg
je
and
cmp
mov
test
or
out
cmp
stos
sub
pop
or
jp
in
cld
jp
out
fdivl
or
and
pop
sbb
sbb
std
sub
push
mov
xchg
pop
fisttpll
jnp
jns
push
aaa
inc
test
mov
and
jbe
or
mov
das
and
push
push
hlt
mov
sub
xor
lret
ud1
cmpsl
push
inc
adc
outsl
or
test
inc
adc
lea
test
sbb
mov
aad
cmc
sub
mov
enter
cmpsl
movsb
loopne
rcr
mov
test
add
sub
push
lock
or
out
dec
cmp
mov
loopne
cwtl
hlt
dec
mov
xchg
popf
in
jg
rorb
out
scas
repz
or
call
xor
sbb
and
test
nop
test
dec
push
inc
jo
sub
or
fldt
test
mov
jb
ret
cmp
jg
pop
cmp
sarl
cmp
dec
jo
sahf
pmaddwd
in
cwtl
mov
mov
test
xchg
pop
mov
daa
testb
mov
mov
mov
mov
std
adc
mulb
lock
adcl
ficompl
sti
pop
idivb
inc
imul
cmp
inc
idivl
aam
cmp
lcall
dec
xchg
rcrl
icebp
inc
imul
stos
iret
xchg
fdivl
jp
mov
jecxz
shll
mov
pop
das
dec
int3
outsb
pop
imull
sbbl
mov
and
and
stc
lds
mov
mov
in
adc
cmp
mov
mov
aad
and
jmp
push
je
mov
pop
ds
or
pushf
neg
lods
mov
in
xor
movsl
les
xchg
mulb
push
inc
sub
inc
push
xchg
xchg
jg
cmp
or
js
xor
sub
sahf
cwtl
adc
mov
push
lea
into
aas
mov
dec
mov
clc
mov
pop
cmp
jb
paddw
call
sub
test
into
xchg
icebp
inc
out
mov
jb
lock
das
jmp
inc
rol
jnp
sbb
scas
or
jmp
sbb
insb
psubw
das
sti
xchg
xchg
aas
std
mov
push
out
mov
int
ljmp
lods
mov
fcompl
inc
cmpsl
inc
mov
xchg
in
and
repz
aad
iret
sbb
fldenv
mov
push
adc
pop
xchg
cmp
push
mov
clc
lds
xor
call
push
push
mov
repnz
inc
cmp
loope
imul
fwait
sbb
mov
roll
jp
inc
lds
xorb
cli
test
push
jne
call
or
cmc
lahf
mov
cmp
cmpsl
popf
mov
scas
lret
mov
imul
jecxz
pop
push
cmpsb
mov
sbb
insl
in
jnp
adc
mov
inc
adcl
ret
jg
repnz
sti
cwtl
jno
ret
mov
and
inc
rcrl
outsl
push
ja
sub
and
mov
stc
push
ja
jmp
jg
jmp
clc
and
pop
mov
and
daa
sub
mov
sub
adc
xlat
push
jb
popf
inc
push
and
xchg
or
pop
or
and
lock
adc
les
popf
add
outsl
cwtl
add
jne
pop
and
lret
mov
dec
sub
shlb
add
jle
adc
add
inc
sbb
push
add
addl
mov
push
mov
push
inc
mov
divb
mov
fwait
orb
lds
add
js
out
movb
mov
pop
dec
adc
cld
je
enter
sbb
sbb
xor
cmp
mov
mull
xchg
addr16
xor
cmp
jne
mov
andl
push
popl
dec
sarl
mov
stos
mov
stos
sbb
push
bound
daa
loope
dec
jmp
das
jecxz
mov
mov
and
dec
cltd
pop
notl
test
stc
jg
lds
pop
push
pop
icebp
ljmp
jb
mulb
adc
push
cmp
roll
inc
push
jne
and
mov
imul
into
pop
adc
addr16
sub
lret
ljmp
aam
out
push
nop
mov
test
arpl
jnp
inc
pop
clc
outsb
pop
nop
std
dec
push
sub
add
js
shlb
dec
jnp
jecxz
gs
lret
cmp
pop
add
jae
xchg
add
movsb
cmp
nop
fisttps
scas
mov
mov
mov
cmp
xchg
outsb
and
jge
test
andl
jbe
jo
mov
mov
rorb
push
js
jecxz
jg
das
and
push
adc
push
shrb
xchg
jle
mov
in
in
pop
jno
sbb
movsb
iret
out
daa
xor
mov
adc
dec
adc
jmp
add
pop
mov
ret
xchg
dec
adc
mov
out
cmpsb
dec
and
add
dec
pop
jge
in
in
lahf
cmpsb
xor
xchg
mov
dec
add
mov
mov
addb
dec
ds
lret
fnsave
xchg
xor
push
test
push
movsb
lahf
loop
dec
push
add
push
test
xchg
jo
shlb
mov
sbb
stc
sbb
pushf
add
rcrb
aas
add
inc
pop
sbb
imul
mov
inc
mov
fidivrl
xor
lcall
inc
xor
push
sbb
jl,pn
xchg
xor
fwait
sub
cld
push
xchg
xor
or
xchg
cmpsb
ret
xor
rcr
fisubrl
adc
pop
pop
loop
add
and
rclb
fistpl
adc
fdivs
imul
adc
push
mov
jecxz
rcl
clc
cmc
mov
or
and
push
push
jge
repnz
push
ljmp
jo
pop
insl
jne
or
adcb
scas
imul
and
and
push
mov
dec
les
scas
repz
jmp
and
or
cmpl
ds
push
jo
pop
repz
sarl
nop
push
jmp
jecxz
push
or
lods
add
scas
and
insl
fcompl
dec
xor
dec
sub
in
lret
xorl
push
and
jp
and
dec
icebp
xor
repnz
jmp
adc
call
xchg
inc
in
sbbl
cli
repz
call
aad
dec
add
xchg
and
mov
clc
scas
xchg
insb
adc
xchg
sysret
sub
out
push
lods
xchg
mov
dec
push
adc
ljmp
push
or
sahf
jne
or
in
fidivs
and
movsl
or
call
fistpl
jmp
cmp
pop
xchg
aam
cmp
dec
notl
js
mov
mov
dec
mov
fldl
out
mov
subl
daa
in
ja
arpl
scas
in
clc
int3
adcl
popa
out
pop
dec
out
xchg
jno
and
and
add
sahf
ds
dec
sbb
add
bound
mov
imul
jmp
insl
fistl
dec
add
jns
mov
push
fwait
sub
ret
xor
xchg
xchg
add
push
jbe
lahf
jbe
imul
dec
mov
std
call
push
xchg
arpl
mov
jbe
rclb
pop
inc
lahf
lcall
sub
lea
xchg
or
sub
call
jne
nop
pop
jae
call
xchg
xlat
add
fidivs
lret
fcoml
mov
dec
push
xchg
jg
cmp
jbe
jb
inc
push
xor
cmp
das
popf
inc
mov
in
aaa
in
jp
call
lods
sbb
push
test
mov
push
movsb
xchg
outsb
inc
sub
jno
sbb
xor
loop
jae
outsl
stos
ret
sub
xchg
lods
xchg
push
sbb
cltd
stos
lahf
rorb
sets
adc
shll
imul
and
adc
xchg
mov
push
sub
std
stos
pop
lahf
js
movsb
rcrb
or
inc
xchg
cmp
seta
mov
mov
jnp
bound
orb
add
xor
fstpt
lahf
pop
loope
xchg
jmp
jge
mov
pop
idivl
in
pop
mov
jp
repnz
lcall
xchg
push
mov
push
out
out
ja
inc
add
ret
fs
cmp
mov
or
xchg
dec
sbb
inc
xchg
jle
jae
int3
inc
popf
cmpl
xchg
sub
jle
into
mov
push
xchg
inc
pop
xor
sbb
push
scas
push
lock
mov
cmp
sub
iret
adcl
jg
repnz
sbb
fldenv
aaa
out
not
dec
mov
sbb
mov
sbb
popf
sub
xlat
das
popf
or
std
sahf
or
and
lret
mov
enter
aas
test
sbb
mov
rcrl
xchg
mov
iret
out
daa
mov
lahf
dec
inc
cmp
add
inc
or
cli
movsl
pop
pop
xor
dec
adc
lahf
dec
repnz
mov
dec
data16
nop
push
sub
jns
lods
push
sti
xor
mov
add
mov
loopne
inc
js
cmp
sub
xchg
lea
aas
scas
push
mov
mov
leave
mov
or
mov
dec
lcall
mov
leave
addr16
gs
adc
movd
loop
or
sbb
subl
sub
add
cmp
jb
ret
push
test
pop
cmp
ljmp
dec
sbb
dec
xchg
inc
pushf
inc
lahf
mov
push
testl
test
orl
scas
lret
add
sbbb
lea
jne
mov
lock
xchg
mov
cmp
ds
push
pop
rorl
inc
in
cmpsb
jb
jmp
outsl
jb
aas
adc
repz
adc
mov
or
sbb
gs
pop
mov
mov
scas
fs
fdiv
arpl
adc
adc
add
xor
lea
scas
mov
leave
fwait
mov
or
or
xor
adc
pop
inc
add
xchg
imul
jnp
inc
adc
arpl
imul
movsl
mov
cmp
adc
mov
negl
loopne
xchg
jmp
nop
push
mov
jnp
lock
stos
cmpb
adc
pop
inc
push
mov
loop
int3
ds
fisubl
dec
cltd
jo
lcall
ljmp
loop
mov
shr
cltd
mov
mov
sahf
cltd
fstpt
push
pop
fcoml
jmp
jecxz
or
pop
mov
cld
shll
or
test
xchg
inc
jmp
mov
mov
xchg
push
test
lahf
pushf
cwtl
push
fwait
enter
in
push
call
add
lock
jno
jg
repnz
and
sbb
scas
jp
xchg
mov
dec
and
mov
int3
shll
pop
sub
lods
dec
mov
mov
test
dec
aam
push
cmp
adc
out
xchg
cmp
pop
mov
inc
xchg
loop
call
cmp
mov
sbb
add
mov
adc
or
xor
lahf
icebp
pop
cmpsb
sub
popa
sbb
xchg
mov
pop
adc
push
push
test
imul
test
fildl
sbb
xorl
mov
lcall
push
icebp
sti
stc
cld
xor
inc
mov
mov
or
push
rolb
iret
filds
sbb
pop
sub
and
xor
mov
inc
add
push
jae
mov
mov
ret
add
cmpsl
mov
stos
in
sbb
adc
xchg
leave
gs
scas
inc
mov
lods
cmp
fs
shr
push
xor
push
data16
imul
push
aam
scas
out
mov
lcall
xchg
xor
sbb
iret
aam
dec
mov
call
inc
xor
mov
mov
sbb
jne
cmpsb
sub
aas
xor
push
xlat
xlat
jg
mov
jo
dec
jne
aam
pusha
insl
fimull
leave
and
push
dec
cmp
jp
mov
lods
jbe
mov
fsubl
popf
lods
clc
leave
into
mov
xlat
ja
mov
xchg
dec
cmc
sbb
push
maskmovq
divl
fdiv
mov
or
mov
call
pushf
mov
add
lcall
les
popa
mov
pusha
sahf
call
pop
mov
xchg
pop
push
or
fs
dec
push
push
jbe
push
ret
pslld
ljmp
sarb
pushf
pop
ss
adc
xchg
mov
xor
in
iret
mov
xchg
cwtl
sar
mov
xor
push
cmpl
adc
aad
xor
mov
or
mov
jecxz
test
xor
pop
fistpll
ud0
xlat
mov
adc
mov
jg
sub
cmpsb
jb
call
aas
dec
sub
mov
lret
arpl
test
test
mov
xor
cmp
test
mov
xchg
fnstenv
jmp
xor
loope
mov
scas
pop
or
push
xor
adc
aaa
xchg
aam
push
fistl
fwait
xchg
arpl
inc
sbb
push
clc
push
push
js
ja
xor
mov
addl
xchg
jecxz
jnp
jno
rolb
loopne
lock
mov
push
push
adc
adc
int
dec
nop
std
pop
aas
daa
push
vmread
ret
insl
adc
pop
jge
cs
add
orps
sbb
ret
mov
adc
ficoms
sbb
scas
loope
mov
pop
lahf
js
popf
mov
push
repz
loopne
mov
in
lea
jae
mov
nop
sub
mov
test
and
clc
inc
mov
pop
xchg
out
xor
sbb
or
ret
or
mov
enter
cmp
push
in
pop
jecxz
lahf
xchg
xor
dec
cmpsl
std
iret
push
test
aaa
push
lahf
je
das
mov
dec
fdivs
inc
xchg
mov
push
push
mov
sub
push
push
scas
add
pushf
add
cmpsl
mov
and
add
mov
bound
in
sarb
lret
mov
adc
pop
jbe
jecxz
push
mov
push
adc
mov
jecxz
cmpsl
ffreep
xchg
jg
mov
popa
aam
in
xchg
mov
or
notl
push
dec
xchg
out
jb
xor
jle
pop
mov
mov
lahf
stos
sarb
movsb
hlt
addb
inc
repnz
sbbl
jle
mov
adc
std
daa
push
dec
jecxz
sub
pusha
inc
xchg
cmp
fs
adc
lahf
pop
lods
call
icebp
add
mov
xor
pop
andb
and
in
add
loopne
fs
test
insl
into
mov
push
mov
mov
cmpsl
push
or
adc
adc
mov
int
leave
testl
aad
ffreep
mov
aas
sbb
dec
out
jle
dec
rclb
out
movntps
cmp
shlb
outsl
out
mov
jge
mov
into
cltd
and
xchg
mov
fcomps
iret
adc
arpl
pop
cmp
out
iret
add
lea
sub
fisttps
test
in
push
loope
test
inc
cmc
insl
addb
xorl
adc
sbb
lret
dec
push
sti
fnstenv
lcall
push
pop
push
push
pushf
inc
or
sbb
mov
int
cmc
xchg
sub
scas
sub
scas
jg
movsl
test
in
lea
ds
outsl
fistl
invd
push
jno
push
xchg
jno
fcmovb
sbb
pop
pushf
scas
sub
mov
sbb
adc
xchg
dec
sbb
push
es
cmp
sbb
out
ret
pop
jns
jbe
sub
call
mov
sub
xor
jno
dec
and
mov
push
inc
fwait
rclb
stos
or
rcrb
mov
outsb
lea
icebp
popf
pop
jecxz
jb
sub
clc
xchg
lret
lret
lret
lret
lret
leave
enter
mov
mov
ret
mov
sbb
sub
sub
xchg
outsl
adc
loop
iret
xchg
mov
cmp
push
test
hlt
add
and
cmpsb
add
call
in
xor
imul
mov
xor
mov
xchg
ficoms
dec
mov
ds
jns
sub
fimuls
shrb
cmp
pop
div
jo
int
cmp
orb
xor
jb
xorb
mov
inc
leave
push
mov
cmp
xchg
stos
jg
gs
xchg
lds
jp
movsl
aad
jb
call
clc
mov
int3
test
or
aaa
fldl
in
lret
mov
xor
sbb
sti
or
test
and
mov
pslld
pause
test
sti
xor
mov
pushf
aaa
cmp
cmpsl
fdiv
sbb
sub
mov
jo
pop
iret
stos
cmp
adcb
pop
mov
pop
xchg
enter
jbe
add
pop
movl
lret
out
adc
daa
sub
inc
mov
shlb
mov
and
xchg
sahf
pop
mov
mov
icebp
pop
in
stos
mov
dec
jnp
and
push
dec
jnp
mov
xor
mov
lock
lcall
in
adc
dec
arpl
xor
fdivrl
cld
jl
jmp
call
push
push
icebp
and
imul
daa
and
add
test
fdivrs
jp
jo
add
xchg
add
js
mov
das
je
xchg
and
jmp
mov
sarl
mov
mov
testl
mov
pop
out
pop
mov
pop
xchg
jg
cmc
cli
mov
cmp
mov
adc
mov
cmpsl
je
xchg
je
aam
cmc
cmp
mov
in
insl
add
mov
or
in
mov
cwtl
or
adc
push
leave
xlat
cwtl
pop
sti
movsl
pop
mov
int
adc
sbb
pop
ret
or
cmp
pop
lcall
popw
jo
mov
and
push
mov
pop
fidivrl
inc
repnz
jno
jo
sbb
xor
ror
arpl
mov
lahf
jg
cmpsl
in
xor
mov
inc
arpl
sbb
jnp
lods
cmp
fstps
mov
inc
iret
xlat
icebp
movsb
xor
pop
xchg
les
outsl
scas
cmp
mov
nop
jb
cmp
mov
pop
in
lahf
mov
rolb
inc
repz
das
xlat
jmp
stos
ret
cmpsb
push
xorb
pop
rclb
pop
push
fsubrs
icebp
cmpb
pop
pop
pop
jno
movsb
jle
inc
sarb
jp
es
cwtl
push
xchg
mov
adc
sarb
aam
inc
scas
les
int
fstl
fadds
aas
mov
lea
jae
dec
sbb
mov
push
stos
shr
adc
xchg
mov
inc
fs
and
lahf
loopne
pop
push
sbb
and
xchg
shr
pop
adc
push
dec
jge
sbb
mov
xor
cltd
les
sbb
ffree
lcall
xchg
mov
jo
sbb
insl
stos
rcrb
push
mov
pop
xchg
mov
pushf
fcmovu
adc
jo
and
jge
dec
cwtl
mov
js
xor
and
sbb
adc
gs
dec
imul
mov
pushf
inc
lcall
movsl
adc
push
enter
pop
jmp
cmp
scas
jno
sbb
rcrl
jns
jp
insl
fmulp
nop
inc
arpl
mov
lret
push
jns
loope
shll
dec
repnz
mov
jb
fwait
popa
adc
mov
pop
xchg
sbb
xchg
cmc
sbb
push
nop
imul
and
mov
mov
enter
inc
incb
aas
xlat
rcl
pop
or
or
in
xchg
and
lret
fistpll
jbe
push
shlb
mov
cmpb
call
in
mov
pop
in
push
arpl
jns
and
jbe
andl
mov
testl
pop
mov
int
sbb
xor
ret
ror
push
nop
ljmp
outsb
dec
aad
push
pusha
je
fistpll
fistpll
enter
sbb
dec
test
jbe
lods
jne
or
dec
cs
mov
cwtl
cli
or
out
shl
pop
in
lahf
or
jb
loope
push
nop
scas
sahf
call
dec
push
cmpsb
push
fisttps
sbb
cmp
repz
popf
and
mov
jle
ljmp
xor
repnz
cmp
stc
mov
or
and
test
sub
fcomi
lret
mov
js
xchg
out
pop
xor
les
cmp
push
sahf
lahf
shrb
fs
loop
clc
fwait
inc
out
mov
je
adcl
cwtl
xchg
sti
or
mov
push
adc
jbe
ss
push
xlat
shlb
cmpb
cmp
jbe
cmc
sti
sbb
add
aaa
outsl
out
mov
sbb
mov
cli
das
test
jle
add
repnz
inc
repz
xchg
xorb
repz
data16
call
clc
mov
js
or
push
aam
aam
and
cli
xchg
cmpsl
push
fisubrl
popa
das
jmp
shrb
decl
jp
xor
adc
and
les
mov
inc
lahf
test
pop
scas
dec
sub
add
test
out
inc
xor
popf
jb
sahf
jae
ret
testl
and
loopne
imul
js
xchg
cmp
loope
add
fstpt
pop
push
adc
scas
lock
xchg
ja
sub
aaa
pop
stos
xor
cmp
adc
and
inc
data16
cmp
add
inc
idivl
inc
xchg
insb
nop
fldcw
lods
addb
push
test
mov
rcrl
cmp
adc
mov
pop
mov
cli
xor
scas
inc
xor
mov
rcrl
lret
iret
rcll
inc
aaa
loopne
cmpsb
icebp
push
out
jle
jl
jne
repnz
sbb
movntq
loopne
cwtl
sbb
aad
adcb
dec
scas
jecxz
xchg
push
mov
mov
loop
xchg
sub
shlb
xor
inc
je
pop
call
aad
mov
jp
dec
sbb
enter
inc
mov
cld
and
paddsb
dec
and
jne
ja
imul
pop
mov
and
repnz
and
shll
sub
xor
fcomip
test
sub
xchg
pop
and
jnp
mov
pop
mov
popl
cmpl
stc
mov
or
es
mov
pop
push
test
mov
inc
pop
push
sub
out
or
mov
bound
xchg
xchg
adc
pushl
push
outsl
jecxz
movsb
push
xchg
enter
push
rcrl
xchg
add
dec
test
out
cmp
xor
jle
notb
or
out
out
out
mov
repz
push
gs
fcompl
push
pop
lock
sbb
inc
jge
je
xor
adc
or
push
gs
sub
mov
outsb
cld
scas
push
mov
icebp
ss
fisubs
cmp
cmp
or
nop
push
adc
xor
pop
dec
mov
fmul
lock
cmp
js
enter
aaa
xchg
cmp
push
cmp
lar
pushf
mov
xor
dec
outsb
sbb
inc
fldenv
inc
aad
jb
roll
dec
mov
enter
xchg
sub
test
fs
push
mov
int
sti
sub
add
out
orl
aam
inc
fistl
adc
into
adc
xchg
mov
xchg
jmp
xor
out
data16
out
or
and
sub
xchg
aam
push
rcll
icebp
jo
loop
and
push
or
rcrb
push
rcrb
adc
pop
shl
sub
sub
sub
mov
aaa
pushf
lea
xchg
lea
adc
aad
push
jne
push
out
xor
mov
outsl
imul
mov
sbb
add
pop
repnz
xlat
and
push
mov
mov
outsb
add
shr
xor
pop
sbb
movsb
mov
incb
xchg
xchg
leave
xchg
xchg
cld
pop
or
addb
jnp
or
sbb
aam
aaa
jae
pop
xchg
xor
enter
push
lods
mov
scas
and
fdivrl
lahf
ja
repz
ret
aad
je
sub
cmp
pop
out
sbb
jmp
hlt
mov
divb
push
loop
je
fs
adc
filds
fdivrl
mov
mov
push
je
mov
dec
xchg
es
cwtl
out
lods
orl
dec
xchg
mov
sub
daa
fbstp
or
stos
das
mov
insl
popf
adcb
mov
sbb
lret
mov
xchg
sti
lock
mov
stc
loope
and
pop
in
sbb
push
jl
insb
in
test
fcoml
dec
fistpl
push
in
in
sub
call
popf
cmp
stos
add
repz
mov
mov
lea
xor
adc
pop
into
test
lcall
aas
ja
sub
bound
inc
xor
pop
mov
mov
jg
push
dec
mov
popf
xor
xor
out
test
mov
mov
out
out
mov
sahf
fstp
aad
cmp
popf
cmpsl
hlt
mov
fdiv
js
sub
dec
mov
loopne
add
stos
pop
and
pop
cmp
cmp
popa
test
lea
push
pop
xor
mov
xchg
mov
lret
pop
ljmp
stos
jl
repnz
fdivrs
shrb
enter
sub
notl
test
add
loope
fidivrs
cmp
aas
test
movsl
inc
lock
shrb
add
push
cmp
iret
jb
pop
fistpll
pop
mov
xor
jne
data16
and
sub
gs
lods
xor
mov
sti
push
and
jns
rcr
loop
ret
and
jnp
pop
and
dec
mov
fsts
stc
stos
push
mov
std
push
test
inc
sarl
pop
and
mov
mov
loopne
add
xchg
int3
dec
xlat
aas
sarl
pusha
jne
xchg
mov
ja
arpl
lods
inc
cwtl
lock
xor
inc
mov
lock
jp
cs
and
xchg
jg
push
sub
mov
fisubrl
pop
sub
inc
jbe
in
adc
add
and
sub
int3
add
sahf
push
cmpsl
add
mov
or
mov
bound
out
pushf
imul
cwtl
jb
addr16
pop
and
repz
test
shrb
iret
dec
push
push
sbbl
push
shll
or
fwait
les
cmpsl
jg
outsl
mov
hlt
lahf
sub
pop
mov
push
lea
push
int3
xor
inc
fimuls
bound
mov
xlat
insb
or
test
insl
int3
mov
push
iret
adcb
ss
imul
xchg
inc
shl
jp
andb
add
pop
add
xchg
jns
es
pop
xchg
mov
pusha
cmc
sbb
loope
xchg
and
mov
sub
sbb
lock
fwait
mov
mov
jo
hlt
cs
shl
iret
cs
mov
mov
add
fs
fstpt
and
arpl
jne
clc
int3
out
mov
or
pop
pop
jae
inc
push
pop
in
lods
in
in
out
jl
or
mov
push
sub
fs
data16
out
ss
xchg
pop
std
xchg
lods
mov
nop
hlt
sbb
lcall
push
pop
xor
inc
imul
arpl
cltd
sbb
push
inc
push
mulb
movsl
push
pop
jmp
pop
and
aaa
stos
into
lods
xchg
cmp
ds
xor
popa
jecxz
inc
sub
loope
inc
rcr
jo
in
cwtl
arpl
push
dec
cwtl
jo
lods
adc
push
ror
mov
out
push
push
jp
push
imul
xchg
push
mov
push
mov
or
insb
add
adc
das
jmp
dec
loop
fisubrs
mov
or
push
adc
int
ja
fisubl
fcoms
call
push
hlt
pop
adc
push
imul
in
fld
jae
add
test
dec
imul
inc
jge
xchg
push
int
jo
push
js
lock
in
lret
rcrb
lcall
inc
sbb
aas
out
shlb
test
jle
sbbb
das
hlt
add
or
mov
add
imul
lock
inc
in
jge
xchg
push
sub
addr16
inc
xchg
jae
jmp
cld
sbb
movsl
and
xchg
out
add
push
xchg
xchg
xor
mov
les
daa
call
mov
call
xchg
lock
push
or
out
js
push
imul
fwait
mov
gs
in
imul
jne
int
mov
lcall
mov
scas
xchg
inc
les
imul
sbbl
lock
xchg
push
mov
xchg
sub
aam
popf
inc
mov
adc
cmc
ret
adc
jl
mov
fwait
or
outsl
adcl
or
shll
mov
add
add
stos
rcr
jmp
das
pusha
sbb
cmp
pop
shll
addb
lock
add
push
cmp
push
repz
sarb
push
mov
mov
mov
jmp
int3
mov
push
pop
popa
jle
xor
gs
insb
stos
mov
lods
rorl
fcoml
test
pop
movsb
outsl
lahf
movsl
xchg
loop
pop
addr16
jg
mov
mull
mov
enter
push
push
pop
clc
push
pop
pmulhuw
cmp
adc
mov
test
jmp
xchg
push
es
jae
add
mov
negb
sti
ret
clc
pop
jg
pop
sbb
int3
mov
popf
xor
mov
fnsave
outsb
push
jnp
mov
loopne
and
leave
sbb
enter
cmc
mov
add
pop
aas
adc
and
sahf
mov
nop
xchg
in
mov
repnz
or
and
outsl
scas
insl
int3
je
mov
fwait
gs
mov
cwtl
xchg
sbb
push
jge
rclb
sbb
enter
mov
adc
cmp
sbb
jg
cmc
push
dec
loope
mov
inc
mov
inc
pmuludq
stc
stos
push
das
xchg
mov
in
or
dec
sbb
dec
imul
push
push
test
push
pop
mov
jnp
orl
sbb
mov
call
je
and
insl
jge
enter
jb
and
enter
out
push
cmp
aas
lret
test
in
dec
push
pop
xchg
test
mov
adc
inc
lea
cmpsl
icebp
outsl
hlt
inc
push
mov
out
fnstsw
out
cmpsl
push
aaa
jg
add
jb
pop
xchg
mov
addr16
shrl
mov
sbb
pushf
bound
xor
ja
adcb
cs
inc
dec
pop
push
outsb
je
testl
test
fmull
sbb
out
mov
imull
cli
imull
dec
icebp
adc
sahf
inc
mov
mov
stos
test
dec
pop
jp
push
rclb
mov
les
hlt
and
lods
pop
lds
orl
xchg
test
xor
xchg
das
out
dec
jge
lahf
adc
and
xchg
adc
jl
scas
icebp
int3
das
and
and
and
jmp
pop
leave
fidivrl
sbb
dec
inc
push
lods
mul
adcl
rol
dec
outsb
mov
adc
jnp
pusha
xor
xor
mov
filds
nop
inc
xor
pop
mov
xchg
dec
or
ret
sbb
lcall
push
icebp
xor
xlat
push
or
nop
je
push
and
dec
jno
pusha
aam
push
mov
xchg
sbb
jmp
xor
or
add
sub
sbb
outsb
dec
lahf
enter
icebp
call
pushf
pushf
fnstenv
cmc
popa
mov
sub
jne
negl
mov
cmp
fstps
dec
or
sti
in
aad
and
push
push
aad
add
stos
jo
jnp
mov
lods
pop
jne
std
sbb
shl
pop
bound
mov
push
cmpsb
xchg
test
repnz
inc
imul
in
mov
scas
mov
jb
pop
mov
mov
jne
in
inc
mov
outsl
lods
aam
scas
xor
jo
ror
leave
into
xchg
addr16
jmp
lret
xchg
in
cmpsl
add
or
mov
and
mov
sbb
test
pop
je
mov
and
int3
pop
addr16
leave
imul
movsl
pop
add
lret
iret
popf
mov
stos
sbb
popf
sbb
pop
pusha
xchg
mov
mov
test
jp
out
mov
idiv
fwait
push
sbb
out
xchg
pop
int3
arpl
jae
loope
mull
xchg
seta
lock
imul
call
pop
jg
lods
xor
ja
and
adc
xor
pop
rcrb
fldcw
ss
xchg
movsl
je
pushf
outsl
ret
adc
stos
pop
shlb
rcll
push
nop
xchg
jmp
clc
imul
mov
push
cmp
adcl
cmp
jns
popa
nop
arpl
fwait
adc
add
lret
jle
jecxz
xor
xchg
movsl
ja
fstpl
cmp
xor
cmpl
stos
sbb
cmp
xor
mov
inc
repnz
fsubs
and
cmpsl
in
pop
cmp
mov
mov
mov
es
jne
fxam
inc
jmp
cwtl
inc
sbbl
jbe
aad
shlb
sbb
mov
xchg
aas
inc
cmp
lods
pusha
add
jg
sub
movb
sub
fstpl
pop
ja
pusha
ja
ja
fsubrs
sahf
das
sti
sbb
test
out
pop
cmpsl
rcrl
fistpll
iret
adc
dec
pop
enter
mov
lahf
int3
mov
out
or
inc
or
nop
and
xor
sub
push
xchg
aas
mov
adc
sbb
setno
dec
jb
push
stc
fldt
pop
xlat
icebp
inc
das
push
scas
mov
xchg
or
cwtl
iret
cmpsb
sbb
jae
jae
push
roll
arpl
test
int
in
shll
cmc
xchg
mov
cmp
outsl
sbb
fwait
lods
and
xchg
jne
inc
pop
in
int
add
sub
shll
jp
or
push
xchg
repnz
jg
js
cmp
dec
jo
leave
mov
push
dec
popaw
add
out
xchg
daa
add
mov
jg
adc
mov
test
test
mov
cmp
sarl
mov
jmp
lods
add
fstp
in
movsl
add
dec
cmp
pusha
mov
pop
lcall
cmp
lods
fldt
cmpsl
push
xchg
ret
add
loope
adcl
mov
push
jo
ds
inc
lds
lahf
leave
in
cmpb
jae
or
xchg
cmpl
lods
imul
ja
nop
sbb
ror
paddusw
in
mov
sti
lods
pop
pop
cmp
orl
sbb
adc
push
fwait
pop
pop
cmp
add
adc
push
je
mov
mov
sbb
addr16
mov
jns
scas
xchg
or
xchg
dec
shl
les
xchg
pop
push
ss
pop
outsl
or
pop
jbe
int3
or
mov
adc
loopne
or
sbb
sbb
loope
cmp
lds
inc
ret
rorb
fs
or
push
outsl
xchg
addb
clc
mov
and
imul
pop
mov
mov
repnz
pop
mov
sbb
int3
mov
out
sub
inc
test
and
mov
jae
mov
cmp
sbb
add
jecxz
adc
pop
pop
rclb
jecxz
sti
fcoml
or
movsl
jne
and
das
cmc
xchg
sbb
push
jg
xor
push
jecxz
mov
lcall
sti
dec
jo
nop
jmp
fidivl
mov
mov
xchg
push
ret
xchg
xor
add
mov
pop
adc
mov
rcl
fmull
insl
aad
mov
mov
in
pop
test
mov
pop
xchg
repz
and
and
and
jno
and
outsb
inc
mov
cmp
sub
push
pop
negl
movsl
mov
lcall
orb
stc
lock
lods
pop
or
cwtl
sbb
push
stc
lahf
mov
ret
xor
out
fs
mov
dec
sub
shlb
mov
movsb
repz
loop
pusha
adc
cmp
fsub
lds
mov
mov
jmp
jecxz
push
xor
enter
ret
cmp
cmp
pop
cmp
pop
mov
popl
cltd
xchg
jl
sbb
xor
pushf
jmp
xchg
xchg
inc
adc
imul
dec
popa
shrl
clc
xorl
or
pushf
dec
mov
or
test
fcompl
lds
psubb
and
les
fsubs
xor
lods
adc
outsl
fwait
insl
push
jl
std
jb
aas
jnp
ss
adcl
push
jg
cmp
stos
xlat
or
jne
mov
push
fwait
mov
movsb
js
lret
imul
in
pop
out
jp
adc
mov
lret
stc
xor
mov
push
sub
mov
rolb
fiaddl
scas
push
inc
sbb
adc
shl
xorb
in
arpl
pop
mov
inc
int3
mov
test
mov
ret
add
in
ss
cs
fnsave
mov
add
dec
jno
arpl
cld
lret
mov
cmp
das
cmpsl
mov
pop
jp,pn
push
mov
test
sbb
cmp
hlt
cld
xchg
jns
adc
push
out
into
and
lret
xchg
and
fs
stos
jp
int3
sti
pop
mov
pop
pop
pop
xchg
adc
xchg
inc
jne
or
jb
and
test
lea
out
adcb
push
imul
gs
testl
lods
dec
add
jecxz
mov
daa
jl
imul
add
lret
add
inc
mov
in
aad
sub
imul
cld
sbb
inc
fldenv
mov
cs
sti
push
setle
pop
scas
pop
rcrl
xchg
sub
cmp
pop
mov
jle
imul
scas
imul
adc
mov
outsb
pop
in
sbb
jge
in
cmp
xchg
dec
adc
sbb
inc
xor
mov
aas
and
or
xchg
sbb
and
and
xchg
popa
aas
dec
add
test
loope
inc
sub
out
and
add
or
dec
out
andl
lcall
ret
xchg
pushf
push
mov
mov
leave
ja
sub
adc
mov
inc
push
xchg
cmpsb
jo
push
xlat
imul
sbbb
adc
inc
mov
out
mov
push
inc
pop
jno
lea
mov
lea
xchg
repz
mov
cmp
push
jge
mov
mov
popa
mov
jb
jl
arpl
out
lcall
cmp
lcall
out
add
xchg
mov
cmpsl
mov
icebp
aad
adc
inc
xchg
or
fidivrs
cmp
cmpsl
int
sbb
std
pop
pusha
xor
cwtl
adc
cs
test
lea
es
inc
jb
adc
jno
subb
shrb
shlb
cli
call
mov
sti
sbb
test
pop
jne
cmc
xchg
cmpl
in
ds
mov
fucom
xchg
rcr
pop
jae
jno
fstl
pop
cmp
jno
mov
addr16
adc
js
push
jmp
daa
or
iret
adc
xchg
jp
inc
push
fucom
popa
mov
sbb
inc
out
loope
cmp
daa
cmpsl
and
lds
push
dec
dec
add
icebp
cltd
sbbl
in
add
sbb
mov
lock
insl
test
orl
adc
das
xchg
sub
adc
dec
cmp
jae
cwtl
into
xor
mov
cwtl
ljmp
dec
bound
movsl
inc
lss
mov
in
movsb
pop
pusha
xchg
movsb
rol
les
rorl
push
movsb
adc
push
mov
cmpl
arpl
loope
fistl
sub
cmp
nop
stos
sub
xchg
sub
adc
cltd
inc
lds
and
out
pushw
popa
mov
pop
mov
cwtl
inc
mov
xchg
and
dec
inc
or
sbb
lock
std
stos
ss
mov
xor
sbb
rcll
repz
mov
mov
cmp
dec
xchg
sbb
push
scas
xchg
cmp
int
insb
mov
dec
adc
shrl
aas
cmp
jg
and
mov
mov
imul
loop
enter
mov
adc
loop
push
inc
mov
fistpll
adc
inc
testl
mov
jno
inc
das
fbstp
mov
arpl
xor
aas
inc
sbb
mov
xchg
fisttpl
scas
jb
lret
lahf
in
sub
or
dec
cmp
mov
push
insl
loopne
cmc
mov
outsb
xchg
adc
sti
pop
and
mov
aaa
xchg
jnp
dec
sbb
jae
in
aaa
xchg
push
adcl
ss
aaa
dec
out
stos
clc
dec
add
inc
push
xchg
mov
adc
mov
call
call
aas
mov
mov
sbb
shrl
insl
push
ret
nop
fs
popa
xor
add
xor
push
out
lods
arpl
mov
xchg
pop
cmp
ljmp
mov
rcll
add
rcl
or
cmp
enter
sahf
cli
adc
cs
cmp
mov
stos
iret
xor
adc
inc
jle
cmp
pop
mov
aam
push
mov
adc
add
daa
test
int3
cwtl
imul
sub
jp
sahf
mov
add
xchg
pop
shrb
mov
pop
mov
cmp
cmp
cmc
mov
cmp
les
fcmovnu
in
stc
in
jns
or
test
jns
inc
mov
jb
and
movsl
pop
cmp
rcrl
mov
push
jnp
mov
std
pop
add
ja
loopne
mov
inc
sub
aaa
adc
dec
cmp
dec
aam
or
movsl
fdivrs
sbb
fcoml
imulb
inc
push
ss
shll
xor
daa
sbb
lods
adc
adc
jl
scas
les
and
pop
arpl
jne
shlb
mov
jns
mov
or
aad
daa
nop
dec
adc
shll
cld
push
lea
test
rclb
jp
pop
js
dec
sbb
lahf
loop
inc
mov
xchg
dec
jmp
sbb
or
std
jg
aaa
xor
sub
ret
inc
ret
les
ljmp
popa
add
clc
inc
cmpb
mov
roll
jnp
add
lods
sub
xlat
movsl
push
fidivrl
xor
xor
mov
std
mov
out
mov
movsl
cmp
std
cwtl
cltd
int
cmpsb
outsb
mov
dec
adc
mov
sub
imul
mov
fstpt
cmp
push
sub
gs
jg
lret
pop
in
clc
outsl
xchg
filds
jb
outsl
jg
cmp
mov
mov
dec
bound
xchg
xchg
bound
cmpsl
push
fsubrs
fstp
mov
in
add
cmc
out
push
arpl
fs
in
xchg
xchg
mov
rcr
push
mov
incb
mov
pop
aas
std
mov
mov
mov
jl
adc
xor
fnstsw
shll
mov
ds
mov
pop
pop
sub
dec
bound
sbb
sub
andb
addr16
or
nop
into
outsb
dec
fldl
dec
sbb
mov
xchg
scas
xchg
or
pusha
push
adc
test
xchg
sub
loop
mov
subl
inc
xlat
clc
ret
and
mov
insl
repz
xchg
mov
insl
repz
lods
mov
inc
adc
pop
mov
push
xor
cld
roll
lds
daa
pop
adc
mov
push
push
stos
pop
clc
add
sbb
xchg
loop
stos
xchg
mov
repz
push
lahf
movb
hlt
je
add
push
xchg
pop
or
or
or
pop
icebp
xor
pop
mull
dec
jno
popf
mov
adc
outsb
frstor
cmp
fs
scas
ds
or
in
pop
mov
adc
mov
clc
jge
nop
xchg
dec
pop
inc
push
lods
cs
push
or
cmpsl
push
jle
loope
mov
aam
pushf
ss
push
testb
cmpsb
cltd
shrb
mov
jbe
mov
ja
push
adc
pop
aaa
sbb
pusha
and
jo
adc
mov
aad
nop
cmpsb
in
adc
pop
cld
popf
mov
outsl
pusha
cmp
test
in
jno
lods
and
or
inc
pusha
mov
mov
mov
xchg
stc
xchg
bound
sub
jp
stos
cmpsb
in
xlat
push
dec
arpl
jp
fwait
test
daa
shll
dec
shl
jno
push
aaa
pop
sbb
inc
nop
cld
pop
scas
sub
jns
js
arpl
lods
lods
sti
lock
push
arpl
ja
rcrb
dec
xor
mov
fcomps
add
xor
cmp
fwait
add
sbb
mov
loopne
arpl
push
orl
push
loope
xor
xor
pushf
sbb
jns
xlat
mov
push
inc
push
loope
movsl
add
push
mov
jecxz
pop
lods
pop
sbb
inc
jp
xor
adc
mov
das
lret
push
dec
arpl
stos
add
mov
push
sbb
clc
sahf
xor
mov
dec
inc
lahf
cmp
pushl
shrl
push
aas
push
es
arpl
mov
fs
sbb
sbb
xor
sti
loopne
push
push
js
push
gs
repz
jns
jl
arpl
cltd
test
fwait
int
subb
into
cmpsl
les
ds
push
lods
imul
xor
aad
sbb
jg
xor
push
loop
jno
push
cmpsl
int
adc
or
ffreep
fsubl
mov
cld
cmpsb
decb
fucomp
jnp
lds
scas
cmp
sbb
push
mov
push
into
inc
jns
inc
or
fwait
xchg
outsl
pop
pop
ss
ret
push
push
js
mov
jne
popa
in
mov
popa
sub
mov
int
fidivs
imul
fsts
in
ja
pop
sarb
nop
jns
iret
loop
fs
enter
jp
fbstp
cltd
dec
sub
shld
inc
sbb
jbe
movsb
xchg
mov
jle
fs
imul
daa
fcomps
rcrl
inc
or
div
xor
jne
inc
bound
fcmovne
mov
loop
push
jo
jl
rorb
imul
jecxz
pop
mov
pop
inc
push
fisubl
dec
xor
cwtl
lock
ljmp
dec
xchg
sbb
out
pop
add
cmpsw
jl
movsl
test
out
int3
push
inc
jle
inc
jb
gs
push
mov
push
int3
into
mov
loopne
mov
jmp
sarb
repz
or
gs
xor
imull
bound
mov
pop
call
ss
and
adc
outsl
sub
adc
push
and
lods
aam
push
lret
cmp
inc
and
adc
add
or
xor
leave
cltd
sub
dec
leave
jg
sbb
lods
adc
jl
jne
mov
lods
jmp
push
clc
aad
cmpsl
lcall
push
out
and
ljmp
inc
aam
jle
mov
popa
ss
pop
aad
into
jl
dec
mov
pop
push
mov
and
aas
push
js
inc
adc
add
inc
pop
xor
pusha
arpl
fcmovne
out
mov
mov
lds
or
pop
das
xchg
jp
inc
into
aam
ja
mov
inc
xchg
jnp
mov
cmp
xchg
sti
int
and
insb
sub
xor
mov
adc
pop
push
das
push
xchg
pop
je
dec
bound
test
std
jb
out
dec
in
xlat
pop
mov
das
or
adc
pop
push
jle
testl
cli
adc
outsl
test
cmc
fimuls
rcrb
xchg
ja
ss
xor
ja
jne
outsl
push
fwait
aas
jnp,pn
xchg
mov
js
rorl
inc
out
call
stos
and
test
lea
jp
pop
ds
xor
mov
and
push
mov
fwait
pop
mov
mov
scas
or
loopne
sbbl
iret
out
movsb
xlat
outsb
das
data16
xchg
shll
outsb
sub
shlb
dec
sbbb
stos
in
adc
imul
dec
jns
fnstsw
mov
add
lds
add
dec
pause
mov
mov
aas
aad
aas
rcrb
jg
test
into
test
xchg
rorl
dec
dec
or
dec
les
shlb
iret
jmp
aas
in
aas
xor
leave
dec
xchg
addr16
test
das
in
sub
cmovg
sarl
add
fstpt
add
add
mov
aam
lods
aam
jecxz
lahf
jnp
pminub
out
rclb
xchg
xorb
out
xor
jecxz
rorl
leave
call
in
pusha
mov
fwait
out
movsb
stc
dec
aaa
adc
arpl
push
scas
xchg
shll
add
push
mov
xchg
test
sbb
mov
xorl
mov
leave
mov
push
test
push
mov
pop
mov
lods
xchg
sbb
addps
aaa
mov
jb
repz
inc
xor
push
sub
std
push
scas
cld
jmp
push
dec
jns
add
insb
push
daa
cmp
cmp
outsl
shr
aam
push
divl
sub
push
dec
addb
mov
xor
xchg
sbb
jmp
jbe
aad
or
nop
push
mov
es
lret
lahf
sti
cmp
sti
mov
add
ljmp
add
or
mov
push
dec
cwtl
xchg
pop
sub
mov
aas
lcall
inc
xchg
pop
mov
cmc
sub
fidivs
mov
dec
adc
mov
jns
rcrb
jp
rcll
lret
pop
jmp
sub
or
mov
push
and
shll
push
cmpsl
push
add
mov
aaa
mov
mov
addr16
popa
dec
mov
jnp
sbb
or
mov
cmp
jno
or
xchg
out
lahf
test
out
insb
mov
outsb
outsl
xchg
out
push
mov
gs
xchg
outsl
dec
mov
mov
in
sbb
and
pop
out
addr16
out
adc
xlat
sbb
test
xchg
gs
xlat
sbb
xchg
stc
mov
repz
pop
pop
dec
cmc
cmpsl
xchg
vpsadbw
adc
test
mov
rol
inc
inc
push
fwait
xor
roll
jo
jbe
pop
int3
adc
lahf
aaa
js
addr16
mov
inc
dec
push
jno
xchg
add
mov
frstor
inc
or
je
stos
pushf
push
mov
stos
mov
loope
jo
sbbl
dec
jns
add
xchg
jbe
push
pushf
jl
xor
lods
aas
or
das
jle
and
xor
dec
call
fsubrs
cmp
xchg
xor
jp
mov
sti
enter
xrelease
ljmp
adc
and
iret
stc
add
push
ja
lret
inc
mov
in
lret
dec
or
fwait
ret
sbb
cmp
pushf
dec
out
divl
mov
gs
and
mov
insl
push
cmpsl
sub
jns
jg
xor
inc
sbb
loope
cld
dec
xchg
pop
jl
hlt
bound
leave
lcall
adc
mov
mov
fmuls
or
rorb
sbb
mov
adc
gs
inc
mov
or
sbb
mov
leave
outsb
sub
scas
addr16
mov
xchg
clc
pop
jae
iret
outsl
push
adc
sar
mov
inc
stos
les
mull
adc
pusha
add
sub
dec
mov
out
out
int3
imul
xchg
imul
je
pop
lea
inc
sbb
pushf
shll
addr16
imul
cmp
dec
mov
lods
inc
adc
dec
std
ret
dec
imul
add
in
in
shlb
and
and
rol
inc
popa
es
cltd
xor
mov
cmc
xchg
enter
dec
sub
mov
invd
outsb
mov
bswap
sbb
frstor
inc
out
push
mov
dec
pop
mov
inc
mov
fcompl
out
pop
loop
cmp
add
das
sbb
xchg
movsb
test
pop
xchg
and
scas
out
cmp
je
mov
push
pop
xchg
mov
cwtl
inc
add
inc
fcmovnbe
fsub
repz
push
clc
sbb
mov
pop
add
fcmovnu
enter
movsb
add
jnp
movsb
clc
dec
fildl
jo
enter
neg
int3
loop
adc
sbbb
mov
cmpsb
mov
bound
dec
mov
dec
pop
rol
call
sahf
lock
add
stos
xor
pslld
or
hlt
pop
hlt
loopne
xchg
jp
lcall
stc
add
enter
int3
pop
shl
or
jae
test
xor
pop
addb
xor
bound
js
mov
cmp
repz
sbbb
mov
movsl
push
dec
call
sti
jbe
stos
dec
test
inc
or
pop
popa
jne
stos
sahf
js
pop
mov
lea
or
push
mov
outsl
inc
aad
adcl
mov
lahf
clc
or
cmpsb
sbb
call
arpl
xchg
dec
loop
inc
lods
sahf
mov
stos
push
lahf
lods
push
push
sarb
loop
jg
jbe
jno
sbb
sub
jp
push
imul
mov
insb
test
js
push
cmpsl
insl
jbe
mov
lea
das
push
mov
out
xchg
jecxz
mov
pop
add
xchg
dec
sbb
lods
shll
arpl
pop
xchg
mov
hlt
aas
shlb
rcrb
adc
cwtl
lods
jae
rcll
xorl
xchg
jbe
lea
clc
xor
mov
mull
aas
jl
pop
repnz
ficompl
cmc
push
arpl
push
orb
cwtl
sub
loop
xor
pop
sub
mov
aas
push
sbb
test
jmp
into
arpl
ret
push
ja
mov
test
xor
add
sahf
shrb
lea
test
adc
roll
sbb
inc
mov
pushf
mov
jo
repz
mov
sti
adc
mov
rorb
jecxz
xor
sahf
or
push
add
push
xlat
jmp
pop
xor
icebp
or
mov
fucomi
pop
dec
xchg
inc
aad
fcomps
add
mov
inc
fwait
jmp
out
arpl
mov
rorl
test
int
mov
pop
inc
shr
jb
pop
xor
imul
xchg
fstpt
mov
out
test
xchg
sbb
xchg
or
xor
xchg
push
or
xchg
clc
test
or
sbb
xchg
inc
and
clc
loop
xor
mov
sbb
jecxz
arpl
lds
fmull
mov
or
mov
jmp
push
mov
push
lea
ss
out
leave
mov
sbb
lods
xchg
icebp
mov
call
rorl
adc
mov
repz
adc
jmp
test
aad
pusha
in
fsubrl
mov
sbb
xchg
mov
jg
fdivl
clc
sub
add
fbld
mov
jo
shlb
rcrl
mov
cmpsl
shll
ror
jns
scas
xor
mov
cmp
adc
jns
jb
lea
cmp
push
aaa
cmp
xor
test
add
jns
ja
icebp
jno
pop
les
jmp
clc
incl
int3
inc
jns
mov
aaa
xchg
movsl
loop
cmp
dec
xor
dec
out
or
fstpl
mov
into
fs
into
mov
inc
sbb
mov
mov
je
fdivrs
pop
lcall
inc
xchg
xor
xlat
mov
mov
mov
cmp
movl
aas
iret
cmp
mov
and
sti
and
ljmp
fwait
sub
aas
or
cld
mov
push
jb
lret
cmpsb
ret
enter
sahf
xchg
leave
lds
or
lea
or
popa
push
out
rcr
cltd
mov
push
mov
loopne
rolb
clc
cmp
cmp
daa
mov
je
inc
push
notl
adc
dec
xchg
push
cmp
xor
shrb
sub
movsl
sbb
pop
jmp
popa
out
adc
mov
cmp
xchg
lock
sbb
fistps
push
add
mov
add
mov
jmp
dec
pop
adc
and
std
and
mov
orb
lock
int3
call
inc
xchg
xchg
sbb
mov
cmp
outsl
mov
mov
mov
xchg
xchg
out
pop
adc
enter
dec
mov
fldenv
xor
xor
add
rcrl
xor
lahf
mov
mov
hlt
lcall
fwait
xlat
and
sbb
cmp
add
repnz
insl
and
inc
sub
push
scas
mov
popf
add
xor
out
cmc
filds
addl
int3
mov
add
mov
mov
shll
inc
mov
cmpsb
stos
mov
inc
sbb
sbb
fcomi
pop
cmp
pop
push
es
test
repz
xor
push
int3
notl
push
mov
frstpm(287
rclb
orl
ja
outsl
dec
mov
push
aad
btc
fistpll
or
ficoms
xchg
cmp
ds
lret
mov
mov
shll
mov
cli
sub
mov
and
pop
test
xor
repnz
mov
xor
sub
mov
pushf
arpl
pop
cmpsb
xlat
cld
cltd
cmpsl
movsb
xor
pop
dec
and
push
das
cli
lcall
push
int3
inc
pop
mov
in
cmpsl
xor
cwtl
mov
pop
and
mov
cld
ljmp
jecxz
pop
push
cmpsb
in
pshufw
lahf
cltd
jne
in
mov
adc
xor
pusha
cmc
xchg
into
mov
push
inc
pop
iret
js
fistl
xchg
and
js
iret
loope
dec
add
xor
add
dec
hlt
outsl
mov
xor
sub
rolb
loop
cmp
test
pop
enter
sbb
fidivs
popf
sub
sbb
dec
fildll
dec
or
cmpsb
or
out
orl
lcall
out
adc
sub
push
pop
mov
je
lea
bound
sbb
fildll
fimuls
in
or
sbb
adc
cmp
aas
inc
stos
cmp
nop
lds
add
addb
jb
rcl
or
and
data16
add
test
divl
outsl
lods
fnclex
ja
mov
outsl
imul
dec
mov
push
jle
xor
pop
outsl
xorl
and
jmp
clc
pop
int3
pop
mov
std
jle
in
xchg
cli
inc
imul
outsl
int
cmpsb
sub
inc
in
and
in
insb
enter
xor
push
insb
or
outsb
cmp
sub
imul
in
adc
mov
dec
es
push
jbe
inc
in
in
lock
push
ljmp
cmpsb
hlt
inc
in
pop
std
and
push
aas
and
push
fwait
sub
lods
sub
add
repnz
adc
and
test
divl
jo
and
sub
int3
cltd
mov
lret
outsl
enter
pop
xchg
pop
fs
jge
xchg
sub
das
mov
shrb
pop
into
int3
outsb
adc
adc
scas
adc
sub
add
movsb
das
lahf
jbe
sbb
lcall
add
ds
dec
iret
push
rolb
in
sub
pop
push
xchg
shlb
pop
pop
clc
sbb
out
or
hlt
mov
and
inc
or
test
push
pop
xor
cwtl
push
xchg
icebp
es
mov
aaa
sub
mov
inc
shll
push
test
mov
push
nop
mov
xchg
loopne
inc
jg
mov
and
adc
ss
popa
les
sbb
mov
sbb
data16
cs
idivb
sbb
jmp
sbb
push
popa
fnsave
dec
pop
push
xchg
sbb
mov
push
outsb
jae
inc
scas
lcall
inc
mov
adc
xchg
sub
xor
addr16
mov
mov
pop
xor
cmp
adc
mov
add
nop
sbb
cmp
sub
cmpsl
sub
adc
mov
mov
icebp
xchg
loopne
mov
sbb
popf
popf
cmpsl
jle
inc
xchg
dec
scas
pop
jo
rorb
inc
fsubr
lea
or
adc
rclb
add
sahf
jae
mov
cwtl
dec
sti
stos
in
mov
add
jne
mov
cmp
lcall
int
sub
cmc
mov
mov
inc
mov
mov
leave
hlt
pop
fs
cld
adc
and
mov
test
dec
mov
rorb
enter
lea
loope
cmpsl
push
sub
push
mov
std
ret
es
cmp
inc
cmp
sub
movsl
push
mov
jmp
mov
iret
inc
pusha
mull
sub
adc
lahf
push
clc
jb
mov
mov
orl
repz
inc
outsb
sbb
popf
adcb
cmp
shlb
cmp
xor
pop
or
clc
sbb
lods
adc
push
js
out
out
cmp
mov
adc
fldcw
sbb
stos
imul
mov
popf
push
jg
dec
mov
mov
pop
cwtl
test
push
push
mov
nop
cmc
mov
stc
loope
mov
pop
jg
sub
shr
daa
sub
stc
adc
adc
mov
mul
popf
shlb
inc
fstpt
lret
ljmp
mov
and
sti
lock
inc
dec
mov
ss
pop
mov
or
pop
outsb
jbe
repz
ret
mov
scas
mov
rcrb
mov
xorl
ds
push
mov
cmp
mov
scas
push
cmpsl
dec
daa
dec
xchg
stos
lret
cmp
ficoms
cld
aad
add
fsts
loope
sbb
shll
jnp
mov
xchg
xor
stos
cli
inc
outsb
fbld
dec
add
mov
pop
jg
imul
aaa
add
jmp
stos
push
inc
shrb
or
push
cwtl
jbe
mov
pop
adc
jl
xlat
mov
cmc
and
push
ret
lods
jp
ss
std
clc
faddl
inc
arpl
das
mov
mov
push
rcrb
sbb
adc
push
pusha
lahf
ret
cmpsb
test
popa
and
ret
mov
xchg
jp
jns
aas
adc
data16
negb
test
mov
inc
add
sub
frstor
mov
add
or
cmpsb
adc
out
test
adc
sbb
int3
mov
cld
lret
lods
nop
in
xchg
mov
jge
loope
les
xchg
lahf
out
push
sti
lahf
fisttps
dec
and
jp
iret
fstps
add
pop
mov
ljmp
ret
shrl
or
xor
mov
mov
add
sub
cmp
outsb
fwait
and
xchg
sbb
mov
test
xor
fisubrl
mov
in
mov
adc
cmpsb
fwait
std
cmp
adc
mov
or
notl
xchg
pop
adc
out
xchg
dec
lods
movsl
aaa
push
daa
sbb
sub
nop
test
clc
push
adc
addr16
aam
repnz
jb
add
mov
shl
mov
cmp
cltd
and
mov
iret
jno
call
cli
xor
stc
mov
xchg
cs
out
mov
sti
mov
or
push
cwtl
testl
cld
ja
or
mov
sub
std
ret
loopne
mov
inc
adcb
addl
dec
mov
pop
movsl
sub
movb
cld
pop
daa
cmovb
test
lret
or
mov
jo
xor
xchg
mov
jbe
shlb
gs
sub
mov
sub
sti
inc
and
jecxz
stos
out
into
and
imul
jno
loope
out
mov
mov
jp
test
fimull
test
push
adc
jmp
jae
xor
cmp
scas
sbb
flds
pop
inc
sbb
es
mov
dec
add
repnz
sub
lock
adc
addr16
in
ja
push
add
dec
add
cmp
in
cmp
shlb
faddl
and
mov
xchg
add
repnz
pop
mov
cwtl
lahf
mov
aaa
adc
add
pop
je
jno
and
cs
push
dec
das
mov
int
sbb
xchg
repnz
fwait
cmp
inc
push
fsubrs
js
mov
fstpl
fmul
testb
mov
pop
fldenvs
sub
sbb
shufps
aas
orb
and
int
into
ficompl
loop
sbb
sub
cmp
adc
adc
pop
and
pop
xchg
and
dec
mov
xchg
iret
lods
cmpsb
push
fadds
and
fistps
enter
jo
movsl
or
mov
cmp
scas
ds
and
mov
or
xchg
leave
push
inc
insb
fs
sbb
enter
add
sahf
sub
aas
pusha
add
sarl
mov
mov
mov
repz
pop
pop
lods
jo
mov
insl
mov
psraw
add
jb
popa
mov
test
push
mov
inc
aas
stc
cli
test
xor
daa
mov
js
xchg
fisttps
addr16
in
andl
sbb
adc
jbe
push
cmp
mov
mov
or
jmp
std
cmp
adc
sub
jmp
xor
push
call
nop
ljmp
insl
ja
insl
jnp
pushf
repz
xor
push
jp
mov
dec
jmp
ficoms
xchg
sub
fistpl
hlt
xchg
mov
fidivl
or
fisubrl
cld
xor
mov
dec
arpl
adc
ss
xchg
jbe
clc
mov
push
pop
and
out
mov
mov
aas
fidivrs
inc
push
stc
mov
mov
jne
out
push
ljmp
jg
stos
cwtl
or
add
enter
dec
xor
adc
mov
inc
or
repz
sbb
fwait
in
and
inc
mov
fsubrs
stos
and
sahf
arpl
sarl
mov
movsb
jge
lea
out
xchg
inc
sar
in
mov
xchg
mov
xchg
mov
test
loopne
repnz
stos
lods
lahf
mov
cmp
xchg
loop
popa
ss
xor
inc
sahf
mov
adc
stc
mov
mov
test
cs
adc
fnsave
xchg
mov
mov
js
out
sub
or
test
cld
mov
or
jl
movsb
or
fistpll
and
cltd
lcall
mov
xchg
xor
insb
test
jl
adc
arpl
adc
xchg
or
inc
jae
jb
stc
test
jae
mov
adc
sar
jno
frstpm(287
fldl
cmc
test
sub
out
fstpl
and
jo
mov
clc
sbb
repnz
cmp
jl
out
shrl
add
mov
sarl
lods
or
pop
jp
inc
loopne
pop
add
repz
xchg
adc
push
and
inc
inc
mov
mov
push
les
mov
jne
xchg
mov
push
mov
mov
fldenv
xchg
aas
pop
loope
pop
jo
cli
fldt
dec
xor
stos
cmp
push
decl
and
xlat
loop
divl
dec
cmp
aam
and
pop
xor
rorb
out
cltd
dec
sbb
cs
mov
or
dec
jmp
call
xor
lods
dec
les
xor
dec
jl
push
mov
test
arpl
xchg
in
and
xchg
iret
cmc
cmpsb
pusha
fstps
mov
sar
jle
loope
xchg
jl
fdivrl
and
rcrl
xor
lods
cltd
add
or
insb
push
test
shll
push
inc
sub
stc
or
jp
xlat
and
repz
add
inc
pop
sbb
fwait
iret
or
mov
mov
xchg
mov
xchg
inc
sti
imul
xor
pop
in
leave
arpl
and
xchg
inc
mov
pop
or
testb
jge
mov
jno
in
mov
mov
imull
in
rcr
repnz
xchg
push
push
mov
cmpsl
addr16
cli
addr16
mov
xchg
aad
repnz
negl
in
out
mov
xchg
dec
mov
movsb
stc
xchg
jno
mov
call
test
push
enter
aad
cmpsl
pop
imul
or
es
cld
mov
cmp
cmpb
imul
inc
push
lock
xchg
sbb
push
jb
pop
jmp
gs
push
push
hlt
arpl
sub
dec
sbb
pop
xchg
lea
icebp
sub
mov
mov
subb
mov
xchg
insb
mov
or
imul
call
xor
adc
pop
push
outsl
in
and
cmp
jl
jo
dec
dec
add
nop
jnp
insl
jp
inc
insb
shrl
jle
mov
pop
cld
arpl
imul
test
mov
subl
mov
fiadds
bound
lock
sbb
std
push
jae
jb
push
sbb
pop
xchg
mov
rcr
lret
mov
sbb
aam
popf
int
lret
mov
mov
dec
lods
movsb
xchg
loopne
aam
adc
test
and
jp
push
outsl
scas
and
fsubrp
jle
lock
lods
scas
mov
movsb
pop
cmpsl
sbb
lods
iret
jae
addr16
add
mov
push
out
dec
mov
push
aaa
xchg
mov
jno
dec
xor
pop
shl
jg
xor
add
fidivl
shrb
push
cmp
fs
in
push
out
cmp
data16
jp
out
rclb
cmp
ret
cmp
lret
xlat
jne
mov
add
loopne
dec
lahf
push
mov
sbb
mov
cltd
decl
pop
push
sbb
mov
pop
bnd
insb
mov
adc
cmp
push
mov
insb
xchg
mov
movsl
mov
popf
outsl
and
cmp
push
cmpsl
pop
mov
iret
jg
test
pop
dec
xchg
fxch
gs
lock
push
and
pop
enter
adc
sbbl
subl
jae
ss
icebp
inc
jp
in
inc
xor
cmp
mov
daa
scas
ret
jge
adc
jns
xchg
cld
xchg
stc
push
mov
xchg
in
out
jg
xchg
setg
add
stos
aas
fimuls
lea
push
dec
subb
xchg
push
sub
call
push
jno
and
call
cwtl
dec
xchg
mov
jmp
stos
lds
loopne
ret
xchg
push
aad
mov
lret
lahf
cltd
int3
mov
lods
xchg
lds
fcompl
andb
sete
es
insb
dec
clc
jmp
arpl
std
pop
push
out
sub
lods
lods
scas
xchg
jo
push
xchg
test
mov
sub
cmc
call
dec
popl
dec
ret
lret
xchg
test
xor
adc
testl
xor
rcrl
xor
cld
mov
pop
movsb
mov
pop
loope
xchg
adc
dec
mov
inc
xchg
test
push
adcl
inc
mov
out
push
adc
sarb
out
sarl
ljmp
cwtl
lret
adc
pop
xchg
adc
xchg
out
push
sar
sahf
pop
imul
pop
adc
insb
out
lock
adc
dec
adc
repz
xchg
js
mov
pop
outsb
sub
das
mov
in
jb
mov
pop
pop
or
push
outsb
push
popa
imul
push
insb
pusha
pop
pusha
cwtl
fcmovu
lret
xor
jg
and
push
mov
in
cmp
dec
cmpsb
or
jmp
pop
adc
and
xchg
inc
fs
mov
adc
lret
add
mov
in
adc
xchg
mov
aad
cmpsb
dec
cmp
test
jp
int3
add
add
pop
mov
jecxz
xor
es
orb
loope
sahf
sub
movsb
sbb
stc
sub
jne
mov
push
pop
mov
cs
and
hlt
xchg
mov
movsl
xchg
stos
repnz
add
iret
repnz
movsl
add
das
adc
aad
mov
mov
mov
and
jg
xchg
dec
jg
std
push
movsl
cmp
fistl
sub
clc
pushf
cmpsl
push
mov
aam
mov
in
mov
aad
rol
shrb
mov
mov
jb
xor
push
and
adc
data16
addr16
xchg
push
loope
pushl
pushf
mov
and
sub
jp
mov
adc
stc
leave
sub
dec
or
xor
pop
ret
push
shlb
sbb
in
mov
cmp
cmpsb
mov
adc
pop
test
xor
ret
sbb
xchg
fs
aam
mov
push
xchg
mov
shll
adc
sbb
ss
pop
add
mov
enter
cmpl
sti
enter
mov
mov
fimuls
rorb
or
in
or
dec
mov
fistps
xor
lcall
icebp
test
sub
add
nop
rorb
add
pop
nop
