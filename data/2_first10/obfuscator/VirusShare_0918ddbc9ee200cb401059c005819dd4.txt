push
movsb
int3
sub
es
out
push
pop
out
add
test
cmpb
jge
nop
lcall
add
in
loopne
outsl
clc
adc
or
cmp
mov
scas
mov
adc
push
lahf
mov
loopne
pop
xchg
scas
push
push
daa
xor
in
mov
jmp
std
lret
push
into
aas
bound
insb
add
subb
inc
out
xchg
inc
test
jmp
icebp
xchg
cmp
js
cmpsb
xor
xor
js
mov
aad
push
mov
cmc
or
fstpt
mov
xor
sbb
cltd
dec
test
call
or
push
push
push
mov
and
ficomps
into
mov
xlat
xchg
repnz
jnp
adc
jbe
xchg
push
nop
inc
jl
push
sbb
sbb
in
inc
mov
cld
sub
movsl
dec
pop
in
js
pop
es
andl
push
jo
sti
imul
out
aas
sbb
push
rolb
fiaddl
sbb
dec
add
scas
mov
push
inc
add
push
sbb
inc
int
xor
inc
jns
or
arpl
mov
xor
lock
jae
ja
insb
mov
sub
xor
mov
adc
lea
push
pusha
pusha
pushl
ret
leave
jns
push
pusha
fisubs
shr
sahf
adc
fsubl
adc
test
push
mov
es
sub
mov
aad
pop
lret
inc
mov
jb
rcrl
outsb
aaa
push
arpl
repz
cmp
jp
sub
xor
jnp
or
std
iret
and
cld
std
push
fmuls
jl
inc
into
mov
mov
push
call
sbb
lcall
lods
jnp
xchg
in
fwait
add
jmp
or
imul
fistpl
rolb
adc
jmp
push
xor
imul
fwait
outsl
or
mov
sbb
ret
and
cmpsb
mov
rolb
in
fnstenv
push
mov
movsl
mov
mov
stc
lea
ja
sar
stc
sub
bswap
dec
push
lea
lea
add
neg
bswap
btc
mov
sar
and
dec
mov
bt
call
fists
mov
dec
adcl
cwtl
jle
adc
sarb
xchg
jge
gs
rorb
xchg
lret
xor
add
mov
push
fs
cld
fsubrp
cmp
mov
lods
cmp
sub
cltd
mov
mov
cwtl
cmp
pop
add
xor
cmp
push
xchg
adc
or
dec
mov
inc
jno
iret
xor
add
hlt
sti
shll
sub
int
aad
jno
mov
jbe
test
mov
mov
xchg
inc
shll
mov
xchg
repnz
pop
shll
mov
mov
sbb
dec
ljmp
pop
pop
and
dec
mov
fsubs
cmpsb
lret
sub
sbb
jmp
lds
js
daa
sarb
pop
mov
ljmp
adc
push
jp
push
xchg
cltd
mov
mov
je
dec
pop
pop
push
and
rolb
xor
mov
or
add
dec
loopne
cld
adc
js
hlt
mov
cmp
test
cmp
lds
outsb
add
mov
sub
test
add
outsl
cmp
jbe
call
mov
jno
sub
xchg
pop
inc
enter
enter
mov
cmp
sbb
add
xchg
adc
in
dec
dec
cmp
fildll
inc
outsb
cmpsl
jb
call
sbbl
mov
push
sbb
cs
dec
and
insl
push
cld
in
mov
test
jge
cltd
push
add
xor
or
dec
pop
ljmp
scas
mov
or
fcompl
mov
mov
test
outsb
xchg
xlat
xor
testl
inc
dec
dec
test
push
ror
lods
add
sbb
aas
and
sbb
out
loope
or
or
jmp
into
stos
adc
mov
in
cmpl
and
das
and
or
mov
mov
mov
push
or
jo
test
cmp
or
xchg
mov
pop
add
mov
mov
xchg
dec
fistpl
outsb
mov
adc
jmp
pop
int3
inc
xchg
rolb
loope
clc
std
cmp
rclb
fwait
xor
jecxz
leave
mov
ljmp
dec
jmp
movw
pushl
sub
pusha
stc
pushl
popl
test
test
cmp
push
pushf
call
test
call
mov
movb
pushf
mov
call
mov
cmpsb
aas
push
test
mov
xor
cs
dec
jo
movsb
imulb
xlat
xchg
std
adc
je
leave
sbb
cs
shrl
and
ret
sbbb
pop
inc
fisubs
jbe
push
pop
add
out
call
push
lahf
arpl
call
mov
ss
and
repnz
lock
sbb
xor
push
movsb
push
pop
leave
jp
insb
pushf
mov
pop
shlw
inc
add
adc
inc
insb
mov
push
add
cmp
repz
ljmp
cmp
mov
popa
cli
rcll
jns
out
sub
jmp
xchg
popa
dec
ja
inc
jns
xor
rolb
jns
inc
shl
mov
jns
dec
jp
scas
add
gs
rcrb
mov
sub
daa
dec
scas
xchg
in
or
adc
leave
into
add
scas
mov
xchg
push
xchg
sub
lea
lahf
mov
pushf
push
lea
ja
jmp
hlt
shlb
dec
mov
leave
aaa
fadds
cmp
dec
adc
ja
mov
out
or
jmp
loope
jne
cli
mov
movsb
or
shlb
push
int3
sbb
jp
cmp
movsl
xor
sbb
pushf
in
std
test
xor
cmp
push
aaa
jae
sbb
and
or
sahf
test
rorb
inc
inc
and
push
loop
mov
repz
add
and
sub
icebp
lock
dec
inc
jne
mov
sbb
cld
mov
push
mov
cmpsl
push
cmp
dec
je
fwait
test
sbb
cmp
jno
outsl
mov
in
scas
cmp
pop
xor
mov
stos
sti
int3
pop
cmp
fldlg2
jl
mov
ret
pop
lock
popf
imul
cmc
inc
mov
out
mov
mov
movl
add
mov
stc
jmp
or
sub
and
mov
rol
add
shl
shl
xor
rcr
mov
cmc
clc
test
jmp
fbstp
rcrl
es
pop
dec
aam
inc
sub
ds
pop
sbb
sub
push
adc
test
sub
and
lahf
out
loope
lcall
cmp
jle
imul
scas
bound
int
mov
and
xor
loopne
push
push
mov
into
inc
mov
imul
ret
xor
rorl
mov
push
test
xchg
dec
cmpsb
pop
and
push
or
xor
stc
movzwl
shl
mov
pushf
bt
add
test
cmp
bt
mov
jmp
lea
jne
pushf
pushl
stos
mov
push
lea
jmp
lea
jb
clc
push
test
push
cmp
pushf
lea
jae
sub
shrd
mov
bt
pushf
mov
shld
and
or
mov
stc
stc
xor
bt
pushf
cmp
stc
repnz
lea
pusha
pushf
pushf
lea
jne
ror
bsf
sar
mov
bsf
inc
jno
sub
bsf
mov
cmc
sub
push
cmp
jmp
js
jno
jae
int3
fstpt
scas
imul
dec
loop
fimull
cwtl
mov
or
iret
addl
fcmovnu
ds
xchg
lock
mov
add
pop
push
mov
inc
jg
data16
xchg
cwtl
adc
fldln2
pusha
sbb
cmp
pushf
mov
aam
sbb
cmpsb
fcoms
into
mov
daa
adc
cld
rolb
adc
pop
in
js
add
cld
lret
mov
add
aam
mov
jmp
hlt
out
cmc
pop
sub
inc
push
in
lock
mov
cmp
xchg
clc
test
mov
cld
add
lret
adc
repnz
popa
pushf
mov
pmaxub
jns
jb
pop
sarl
mov
xchg
xor
xchg
aad
jns
push
subl
mov
test
out
xor
jno
cmp
push
adc
int
out
loopne
sub
jo
dec
inc
scas
sub
std
dec
mov
inc
push
pop
loope
adc
into
inc
mov
cwtl
fdivr
and
xchg
lods
daa
pop
push
popf
sbb
ljmp
dec
frstor
lock
shr
push
push
push
dec
fs
idivl
push
jmp
xor
int3
inc
adc
ret
lock
cmova
clc
add
imul
adc
dec
lret
aaa
scas
test
push
inc
or
pop
lea
leave
stos
daa
cmp
sub
mov
sbb
cmp
lret
inc
imul
arpl
scas
imul
xor
out
int
aaa
jae
repnz
dec
push
jmp
cmp
or
xor
pop
push
test
mov
ficoml
es
cmpsb
aas
lock
sbbl
cwtl
lahf
dec
pop
jae
adc
aaa
xchg
xor
inc
ljmp
out
mov
cwtl
adc
notb
rcrb
in
movsl
push
insb
fsubs
gs
fldcw
sub
pop
fcomp
push
mov
lock
push
test
and
jp
ss
lock
push
outsl
xchg
insl
sarb
lea
pushf
mov
outsb
pop
cmp
push
jne
outsl
sub
push
pop
lcall
jle
popl
mov
fistpl
push
sbbl
std
cmpsl
in
jle
xchg
cmpsl
and
arpl
nop
movsl
adc
jne
les
push
data16
jo
movzbw
movsbw
mov
jmp
call
pusha
jmp
sub
sub
jecxz
jb
shlb
add
xchg
cmp
out
pop
adc
enter
mov
fcoms
loope
xor
subb
insb
push
pop
scas
inc
sbb
cmc
jecxz
bound
xor
push
adc
inc
xchg
xchg
and
arpl
sbb
fxch
push
pop
sub
sbbb
xchg
push
adc
stos
push
xor
xor
xchg
jecxz
dec
sbb
mov
lds
xchg
in
mov
cltd
sbb
fcomps
mov
out
mov
stc
push
lea
je
pushf
lea
jmp
not
mov
lea
jmp
in
bound
or
add
cmp
pusha
sub
cmp
subb
stc
sbb
lret
cmp
call
shl
lret
clc
jae
addb
aad
nop
gs
es
jg
pop
outsb
sub
jne
mov
pop
xor
out
xchg
and
adc
jmp
sbb
or
ret
sub
add
popf
in
dec
dec
loopne
sti
lods
xchg
out
mov
mov
std
jae
jg
inc
inc
inc
xchg
cmp
sbbb
pop
aas
stc
out
addr16
xor
mov
fnsave
test
sbb
xlat
xchg
add
jecxz
mov
xchg
or
lahf
adc
add
push
mov
add
pop
sbb
mov
add
pop
sub
in
push
out
cmp
cmp
and
outsb
sbb
shrb
pop
fsubl
cmc
fs
aas
sbb
mov
add
dec
mov
aaa
lcall
aaa
js
ss
jmp
inc
mov
jle
out
sbb
cs
dec
fistpll
dec
js
mov
cwtl
jmp
ds
mov
pushf
dec
fistpll
pop
add
and
jne
mov
in
test
inc
fsts
cmpsl
push
sti
jnp
and
jg
test
stos
pop
int3
lods
pop
sbb
add
out
inc
fs
in
adc
and
pushl
push
lea
jb
stc
stc
cmc
jmp
jg
pop
pop
mov
and
pushf
in
add
mulb
sarl
pop
xor
js
cmp
inc
mov
adc
popf
leave
jmp
add
inc
rcll
in
dec
les
hlt
xchg
cwtl
daa
loop
ret
mov
and
add
shr
hlt
sbb
inc
rcrb
inc
sbb
xor
jbe
inc
movb
popa
pop
xor
mov
sbb
test
aas
add
push
mov
adcl
dec
dec
cs
insb
add
pushf
movb
pushl
ret
in
cmpsb
inc
mov
aam
or
pusha
cs
fdivp
jle
and
in
sarb
mov
push
sub
jp
pop
stos
xor
rcpps
mov
testb
inc
arpl
and
lds
mov
sub
or
mov
adc
sti
push
xchg
mov
sahf
lret
jp
mov
pusha
and
hlt
jbe
test
int
and
scas
mov
inc
and
in
pusha
or
add
insb
lds
loopne
dec
mov
stos
push
dec
push
push
outsb
push
mov
sub
jnp
aaa
dec
out
cld
adc
inc
sub
mov
dec
std
cld
xchg
movsb
push
xor
in
mov
les
es
out
or
pop
shlb
push
out
inc
addr16
scas
mov
xor
dec
sahf
and
pop
push
xchg
adc
or
mov
es
add
sbb
jmp
xchg
dec
mov
mov
lahf
and
aam
or
push
outsb
xchg
mov
add
imul
pop
sub
mov
loope
mov
push
in
sti
mov
int3
xor
push
xchg
js
or
dec
pop
in
jge
mov
ljmp
outsb
dec
inc
int3
in
mov
fs
mov
dec
and
int
or
insl
lea
call
push
pushf
lea
jb
push
push
pushl
ret
loop
adc
cmp
dec
clc
in
outsl
xchg
js
icebp
movsb
push
dec
jecxz
cwtl
xor
inc
cltd
push
pop
lcall
addr16
jb
sets
fwait
mov
mov
pop
bound
out
aas
insl
mov
inc
mov
sahf
pop
dec
fwait
sbb
dec
cli
lods
in
stos
mov
jbe
iret
mov
gs
mov
inc
icebp
adc
xor
fcmovu
aam
lea
add
mov
lcall
mov
ret
push
lret
inc
popa
fs
orl
leave
cli
fbld
and
pop
stc
lcall
mov
push
fdivrl
dec
xchg
ja
push
call
jge
int3
mov
sbb
inc
test
dec
and
lcall
push
ss
rclb
cmp
sub
ss
sbb
push
mov
fiaddl
inc
lret
pop
popf
out
iret
mov
scas
jns
ljmp
fdecstp
mov
imul
or
and
cmp
add
clc
stc
cmp
pusha
cmp
movl
lea
jb
pushf
cmp
cmp
call
data16
setnp
cmpsl
adc
addr16
mov
mov
movsb
push
aad
add
sub
enter
pop
ret
loopne
xlat
data16
out
adc
jp
cmp
ljmp
ss
mov
ret
jg
lods
mov
mov
test
mov
adc
jmp
cmp
mov
lahf
xchg
adc
mov
movb
xor
js
ret
push
and
scas
mov
pop
cmp
push
add
push
xor
shll
sub
mov
cmp
cwtl
or
mov
jecxz
cmpsb
inc
gs
mov
loopne
cmpsb
jp
sahf
cwtl
sbb
andl
xchg
cwtl
or
movsb
in
cmc
imul
mov
add
pushf
mov
adc
cltd
adc
cmc
mov
rorl
movsl
jl
sahf
loope
lock
pop
sbb
xchg
repnz
jne
mov
mov
mov
cwtl
inc
inc
mov
call
sub
ljmp
cli
out
in
sub
scas
shlb
mov
inc
pop
add
cmc
scas
cmpsb
aas
push
movzwl
sub
mov
inc
sti
call
mov
out
mov
push
pop
or
pop
and
fucompp
xrelease
add
and
xchg
fsubr
leave
cmc
mov
jge
adc
cmp
mov
daa
sbb
scas
scas
xchg
fists
aas
push
pop
mov
inc
test
xchg
jp
adc
jbe
aaa
repnz
ljmp
and
mov
xchg
cmp
jae
mov
leave
rol
ds
push
aad
fmull
outsl
jg
push
inc
pop
stos
mov
and
das
sub
insb
push
xor
mov
iret
jmp
mov
mov
push
das
cld
push
lods
xorb
cltd
popf
push
mov
rorl
pop
imulb
outsb
loope
push
push
popf
jns
cmc
mov
pop
mov
mov
push
and
fisubl
xchg
xor
dec
out
push
jg
mov
inc
test
adc
mov
outsb
add
mov
mov
xchg
adc
mov
shrb
imulb
out
aaa
or
test
or
jo
sbb
inc
pop
push
jecxz
int
aam
inc
inc
mov
test
out
sub
cwtl
xchg
mov
xchg
xor
xchg
and
push
mov
xchg
in
adc
mov
pop
loop
dec
or
popf
sub
insl
jp
jo
sbb
mov
mov
sahf
mov
sbb
mov
push
popl
jge
mov
push
outsl
and
pushf
mov
cmpsl
mov
call
bound
cmp
mov
pop
fistpl
loop
arpl
jb
mov
xchg
dec
xor
int3
dec
and
pop
sti
imul
push
xchg
scas
repz
or
lds
shr
pop
mov
add
xlat
or
loopne
lret
push
insb
int
inc
pop
or
adc
mov
test
mov
jp
jns
mov
jns
inc
pushf
pop
outsb
cmpsl
pop
push
fucomi
stc
adc
mov
pop
clc
and
in
inc
fsubrl
frstor
cli
xchg
test
fdiv
sub
fs
push
jg
addr16
inc
xchg
lcall
pop
xor
cli
mov
ljmp
repz
out
bt
test
push
pushf
lea
je
pushf
add
stc
cmp
pushf
clc
cmp
push
lea
jb
pushf
pushf
pushf
bt
cmp
call
add
xor
fdivl
sbb
jne
stos
pop
mov
sti
mov
jae
cs
bound
int
in
scas
mov
xor
sub
dec
dec
ret
xchg
jne
mov
push
ss
pop
add
mov
inc
cltd
xchg
cmp
push
pop
lock
stc
icebp
push
mov
or
sti
jns
imull
push
push
add
lea
and
arpl
or
jno
cmp
sbb
enter
fidivl
fsubl
inc
pop
scas
mov
stos
jg
pusha
xor
mov
and
mov
mov
mov
pusha
bound
divb
jae
mov
xor
in
or
enter
loope
gs
popf
fnsave
and
fsubrs
je
lahf
or
clc
mov
out
stos
lcall
pop
outsl
out
popa
orl
imull
mov
dec
adc
mov
fistpl
xchg
sti
or
arpl
mov
push
push
lea
jne
jmp
adc
mov
push
test
cmp
and
test
pusha
add
lea
stc
call
bt
cmc
clc
cmp
jmp
bswap
setns
bswap
mov
call
lea
jae
pusha
mov
push
lea
jmp
je
pushf
sub
btr
lahf
shld
mov
movsbl
or
adc
aad
mov
shrd
shr
lea
jp
shld
mov
push
cmp
cmc
clc
or
pusha
pushf
lea
je
clc
add
adc
sub
movzbw
movsbw
mov
shr
bsr
mov
pushf
shr
btc
add
or
and
xor
and
add
lea
xor
mov
pusha
pusha
cmc
add
jle
shr
cmc
pushf
cmc
bt
cmp
mov
call
push
dec
push
xchg
loop
hlt
es
leave
ss
dec
jmp
hlt
stc
fstl
add
add
das
jl
mov
fsubs
mov
push
jg
loopne
mov
sub
mov
daa
xor
sbb
repnz
xchg
lahf
add
fdivrs
fiaddl
mov
stc
or
mov
mov
je
or
je
add
fs
jne
jmp
push
addr16
sbb
xlat
insl
sbbl
mov
repnz
xor
shrl
clc
inc
cmpsb
cmc
or
pop
pop
ficoml
divl
mov
out
sbb
filds
xlat
cmpb
clc
lret
fnstsw
scas
test
icebp
sub
jmp
xlat
mov
adc
mov
sahf
in
add
jbe
es
jb
ret
call
pop
es
pop
js
or
inc
pop
cltd
xor
mov
mov
outsb
xlat
adc
addr16
leave
push
mov
xor
or
cli
mov
jnp
out
or
sbb
xchg
or
out
pop
insb
lods
arpl
push
sbb
sub
aam
lret
lods
xchg
lock
sbb
mov
dec
out
repz
leave
mov
popf
sti
pop
sub
outsl
jo
fcom
jp
push
mov
popa
pusha
pop
dec
jno
insb
addr16
mov
rcrb
or
stos
sub
jmp
adcb
mov
dec
loope
jno
repz
xlat
gs
cmc
sub
inc
pop
pop
mov
and
test
std
jmp
fs
jmp
mov
pushf
jmp
pusha
pushl
pushl
lea
jb
push
mov
movb
pushl
pushl
ret
lea
jb
clc
cmc
jmp
inc
inc
push
jecxz
es
sub
out
push
jg
pusha
pushf
mov
fcoms
push
cmp
jae
mov
push
add
add
pop
out
sti
cmp
push
out
pop
das
xor
mov
mov
pop
aad
daa
push
les
sahf
adc
setp
aaa
int3
cs
xchg
scas
fs
pop
sbb
xor
jnp
push
out
mov
jg
cmp
out
mov
cmp
add
add
bts
shl
clc
shr
cmc
and
shrd
rcl
mov
rcr
not
sbb
sar
add
pusha
movw
pusha
movsbw
mov
jmp
lods
in
out
cli
adc
inc
inc
pop
sbb
xchg
jp
add
xchg
clc
cs
mov
rorl
xchg
jp
test
mov
mov
pop
jp
cwtl
leave
fisttpll
pop
test
pop
add
mov
adc
fcomip
add
adc
push
out
xchg
cmpsb
cmp
mov
and
cmp
pop
adc
sub
adc
xchg
popf
aaa
jnp
popa
mov
outsl
lret
jmp
add
sub
leave
fwait
andb
jmp
mov
aad
mov
lea
je
fimuls
mulb
mov
xchg
mov
in
mov
sub
sti
and
pop
test
sub
cmpsb
sbb
xor
xchg
push
push
jae
pop
clc
or
mov
sub
cmp
cmp
push
inc
add
js
shll
jmp
xor
in
xchg
test
pop
hlt
iret
push
sub
test
imul
fstps
push
test
popf
xor
dec
xchg
mov
mov
jp
out
mov
mov
push
adc
push
repnz
cmc
xchg
sub
mov
jne
loopne
push
or
xchg
mov
enter
pusha
jns
in
jmp
fisttpll
push
xor
daa
jae
stos
xchg
stos
or
and
mov
mov
je
or
inc
and
out
cmp
call
inc
pushl
call
mov
aam
fnstenv
je
xlat
push
mov
fcompp
repz
popa
movsl
stos
addr16
loope
in
repz
xchg
xchg
pop
push
cmp
loope
pop
or
pop
xchg
push
cld
leave
sbb
and
add
and
inc
rclb
je
adc
push
sbb
and
or
and
addl
cli
cmpsb
out
lahf
mov
into
xchg
in
mov
add
push
lods
out
xchg
lret
pushf
mov
test
mov
sti
jnp
sbb
xchg
sub
test
jmp
lods
cmp
and
xchg
xor
jae
mov
ret
xor
add
xor
fwait
imul
addb
clc
xor
scas
repnz
aad
int3
movsl
daa
or
cmp
inc
mull
cmp
inc
push
bound
and
insl
cmpsb
mov
and
sub
outsb
loopne
or
add
cmpsl
shl
repz
add
ds
mov
sti
cmpsl
sar
jno
and
in
fs
cmp
fildl
int
fdivr
fdivl
popf
jno
clc
mov
imul
nop
adc
sahf
pop
xchg
xchg
in
and
xchg
inc
hlt
repz
cwtl
mov
push
and
in
movsb
dec
loope
aaa
pop
push
roll
inc
xlat
sahf
xchg
cmp
jp
mov
fsubl
ret
dec
pop
xchg
pop
je
adc
push
dec
outsb
or
test
or
rolb
mov
cmp
mov
and
addr16
cmpsl
mov
outsl
loope
shrl
pop
or
lahf
jno
add
push
mov
jl
rcrb
dec
and
add
out
insb
xchg
mov
pop
mov
push
cmpsb
nop
push
sub
push
xchg
out
push
je
pop
jl
inc
or
pop
mov
jle
mov
xchg
mov
outsb
sub
lret
mov
inc
push
jecxz
shrl
xchg
add
mov
push
jecxz
ret
xor
adc
es
jmp
sub
sub
push
mov
inc
push
fistl
dec
cmp
std
cli
jmp
jmp
mov
ret
imul
jecxz
cltd
jnp
ljmp
push
cmpsl
sub
mov
repnz
pop
push
mov
mov
mov
mov
pop
push
sbb
cmpl
pop
cs
popa
adc
inc
cltd
jmp
mov
jb
push
push
sbb
push
js
js
sub
mov
sub
add
adc
ret
sbb
mov
lods
repnz
fwait
adc
out
mov
les
data16
push
das
sbb
inc
push
push
inc
jge
push
rolb
ljmp
dec
xchg
stc
dec
ret
push
push
and
mov
inc
xchg
insl
adc
stc
adc
mov
fisubrl
mov
push
push
mov
rcrl
push
dec
mov
test
jbe
inc
mov
mov
push
dec
adc
mov
mov
add
daa
pop
pop
add
mov
dec
call
je
pusha
cmp
call
cmp
add
bt
cmc
add
jae
cmc
test
pusha
jmp
add
add
add
sub
nop
js
add
add
dec
add
add
adc
dec
add
add
add
add
popf
or
js
add
add
add
add
push
js
add
add
add
add
movsl
imul
dec
add
add
add
add
in
dec
add
js
add
add
add
add
sahf
imul
lods
imul
add
add
jmp
dec
add
js
add
add
add
add
xchg
dec
add
add
add
add
ret
jno
add
js
add
imul
add
add
outsb
dec
add
js
add
imul
add
add
mov
dec
add
js
add
imul
add
add
sbb
dec
add
js
add
imul
add
add
aas
or
add
jns
add
imul
add
add
popf
or
jns
add
lret
shld
ror
bt
push
dec
and
clc
add
mov
rcr
xadd
mov
not
shr
bsr
mov
pusha
pushf
push
or
pushf
jmp
jmp
dec
cltd
test
push
cltd
or
stos
dec
loope
fs
mov
push
or
iret
or
cmp
mov
dec
ds
sub
into
adc
xchg
xchg
int3
cmp
sbb
icebp
xchg
push
dec
mov
add
jle
mov
dec
or
mov
adc
cmp
lock
or
fldcw
jge
mov
lods
fadds
incl
and
shll
imul
mov
fisttps
test
bswap
cmc
cmp
mov
btc
rcr
sub
btc
bsf
mov
pushf
stc
jmp
pusha
pushf
pusha
lea
jae
pusha
sub
pusha
call
add
clc
stc
mov
pusha
stc
jmp
lea
je
test
jmp
mov
out
cmp
clc
xchg
cmp
cmc
or
cwtl
inc
shlb
mov
out
or
jmp
and
pop
xor
or
inc
bound
push
or
stos
cmp
mov
jmp
faddl
sbb
sub
jp
arpl
xchg
and
add
gs
mov
cltd
sub
add
add
push
daa
sub
mov
popa
out
aad
xor
into
pushf
sub
fcomip
mov
push
popf
data16
mov
div
movsb
mov
mov
pushf
pushl
pushf
lea
jmp
not
ror
shl
mov
push
bt
movb
or
pushf
jmp
mov
out
and
xchg
fbld
add
icebp
mov
add
daa
push
pop
je
mov
or
mov
stos
add
push
pop
repz
cltd
jmp
fisubl
pop
mov
pop
pop
andl
ficomps
rorl
shll
mov
add
fucompp
and
sub
dec
in
pop
int3
jae
imulb
xchg
testb
icebp
add
jg
testl
ja
lods
fneni(8087
in
jbe
xchg
loope
xor
cs
inc
and
add
nopl
push
jmp
ror
movb
pusha
pushf
inc
jmp
xchg
sbb
call
fmulp
mov
repz
pop
jae
mov
insl
lcall
mov
sbb
or
and
push
cmpsl
std
pop
xchg
dec
mul
test
xor
ffree
add
add
jnp
push
test
ficoml
pop
pop
stos
push
push
sub
inc
shrb
jge
scas
loope
in
lock
iret
or
sbb
adc
dec
loopne
push
add
xchg
lahf
pop
mov
movsb
pop
dec
inc
out
pop
les
lods
ds
loope
pop
mov
mov
ss
ds
dec
dec
loopne
mov
fidivl
mov
in
ss
inc
sti
and
sbb
sbb
sahf
out
sub
das
fwait
inc
ss
jmp
cmpsl
ja
push
dec
jmp
in
bnd
or
inc
fs
fldcw
jecxz
adc
cmove
dec
pop
mov
les
jbe
daa
sub
lret
ja
shll
sub
or
jmp
mov
lods
sbb
dec
xor
xchg
loop
adcl
xchg
fs
jge
inc
btc
inc
inc
sub
cmpb
mov
pop
ret
inc
sub
push
push
sub
inc
pop
mov
fsubrl
hlt
aad
fildl
shrb
mov
adc
sub
aas
dec
push
les
xchg
aas
push
in
mov
cmp
leave
sub
pushf
push
outsb
clc
aad
sbb
icebp
les
inc
stc
cmp
imul
or
adc
mov
aad
mov
inc
mov
inc
dec
shlb
pushf
adc
pusha
movb
push
lea
jmp
dec
out
sti
or
mov
loop
mov
adc
or
pusha
ljmp
push
mov
clc
sub
and
push
add
test
popf
xor
and
cmp
or
jmp
dec
out
xor
fstpt
daa
aaa
mov
shl
test
cmp
mov
adc
repnz
mov
int
push
rorb
pop
xchg
push
das
cmpb
dec
lret
xor
cmc
ret
and
xor
push
out
daa
sbb
mov
enter
sbb
rcll
dec
les
pop
sbb
add
repz
xlat
adc
jmp
lea
je
stc
clc
cmp
jmp
outsb
test
insb
out
psrlq
shrb
mov
scas
fisubrl
push
aas
stc
xor
cmp
into
test
mov
jecxz
fcmovnbe
adc
addr16
mov
pusha
scas
sub
add
push
push
loopnew
mov
xchg
sub
clc
sbb
adc
xchg
das
and
xlat
pop
pop
xchg
out
inc
aad
fildll
jp,pn
adc
pop
cmp
xchg
sbb
fdivrp
sahf
or
sbb
movsb
jle
pop
ss
stc
and
add
test
mov
dec
jns,pt
inc
inc
cmp
sub
sahf
pushf
rcrl
mov
cmp
dec
fsubrp
cmc
mov
lds
out
cltd
add
mov
addr16
ja
test
dec
xorl
scas
stos
negb
push
add
pop
into
inc
adc
dec
stc
xchg
adc
mov
dec
cld
pushw
popfw
jmp
xchg
stos
fnstcw
test
jg
pop
bswap
cmp
sahf
hlt
push
test
jae
movsb
adc
cmp
stos
mov
in
ss
pop
or
lret
jmp
aaa
adc
sub
ljmp
clc
sub
mov
sbb
xchg
leave
xchg
adc
in
inc
sub
stos
add
incb
stos
or
jne
ja
movsl
and
sub
idivb
and
sbb
pop
sub
pop
xchg
push
stos
mov
xor
push
inc
xchg
ja
lods
add
aam
jne
mov
jae
fcoml
push
inc
xor
mov
xchg
add
sbb
in
and
mov
fwait
lds
popf
pop
shrb
movsb
and
jno
mov
sbb
clc
mov
cmp
lcall
inc
daa
jns
lahf
lahf
scas
xlat
stos
sbb
mov
into
mov
cmp
cwtl
ss
fidivl
ljmp
pop
in
ret
add
sti
push
rolb
popa
stos
out
in
dec
push
imul
inc
or
mov
mov
andl
hlt
and
outsb
mov
sbb
inc
push
mov
out
cmp
cmp
adc
stos
int
push
inc
sub
adc
sbb
push
xchg
test
sbb
pop
out
sbb
stos
sub
inc
mov
push
and
mov
stos
and
fdivrs
pop
lods
pop
jmp
cs
mov
or
sarl
mov
jl
pop
mov
mov
sbb
stos
in
pop
fdivl
addr16
mov
mov
shr
jle
movb
dec
xchg
inc
imul
stos
jl
push
mov
lcall
sbb
enter
lock
ja
xchg
ret
add
stos
or
es
fisttpll
call
xchg
cwtl
dec
in
fwait
and
insl
add
mov
outsl
add
cli
movsb
add
and
inc
push
mov
stos
jae
add
fildll
ds
or
cmp
lods
cli
stos
into
and
add
fnstcw
sub
scas
sub
mov
jns
dec
ret
insl
in
out
arpl
loope
mov
in
mov
stos
test
sub
les
jae
fsubrl
negl
push
add
adc
jp
lret
sti
outsb
cmpsb
mov
cwtl
xchg
daa
jmp
add
cwtl
inc
cs
pop
nop
sbb
lret
xor
mov
out
stos
sahf
pop
dec
jne
imul
ljmp
jle
xchg
sub
cmp
mov
mov
pop
push
dec
cmp
xchg
fwait
jmp
mov
jo
data16
pop
popa
stos
lods
daa
out
add
enter
xchg
sti
dec
jmp
repnz
lret
lahf
movsl
xchg
ret
and
add
movsb
mov
sub
mov
mov
ljmp
pop
mov
cld
loop
test
push
dec
and
mov
jmp
imul
movsb
iret
inc
and
rorb
das
inc
sbb
mov
iret
addr16
repnz
mov
push
adc
cli
cmp
mov
les
loopne
pushf
jmp
call
add
cld
pop
movsl
cs
mov
xchg
push
cmp
xchg
pop
stos
mov
jmp
pop
lods
es
push
mov
add
push
stos
push
mov
aam
sbb
and
inc
mov
insb
subl
int
jnp
ss
test
ljmp
mov
gs
mov
test
jmp
and
sbb
mov
mov
mov
addr16
xor
in
inc
stos
jo
adc
cmp
mov
jle
popa
out
push
fldenv
mov
dec
cwtl
sbb
inc
stos
push
jo
pop
xlat
inc
lock
mov
adc
scas
fsubrl
dec
mov
adc
or
aas
imul
fwait
cmc
mov
lret
stos
jb
aad
jge
out
imull
lret
cmp
pop
add
stos
jbe
mov
mov
push
mov
js
test
push
sub
ljmp
lods
sub
mov
xchg
xchg
or
insb
add
test
mov
push
stos
in
push
jns
stos
or
mov
mov
and
outsl
test
inc
aaa
cs
test
mov
mov
ret
xchg
out
and
push
shrb
push
stos
popf
scas
pop
mov
stos
jb
adc
sbb
jae
sub
movsl
xchg
andl
stos
sbb
nop
pop
push
mov
loope
xor
ret
js
rol
mov
sub
lods
push
popf
sub
arpl
stos
lahf
mov
and
sbb
pop
lret
stos
cmp
pushf
xchg
mov
cmp
jecxz
aad
lods
rorl
pop
addl
movntq
stos
out
or
xchg
movsl
and
jmp
jae
jle
cli
mov
or
shrb
sbb
pusha
popa
xchg
out
lcall
sarb
loopne
sbb
loop
dec
cli
jmp
aam
cld
fwait
in
add
popf
mov
cmp
cltd
movsl
and
cmpsb
fwait
cmc
in
loopne
adc
sub
mov
dec
loop
mov
jo
stos
aaa
ss
mov
gs
and
hlt
ljmp
stos
fildl
sbb
dec
adc
mov
jo
stos
into
adc
cli
vmovdqa
mov
dec
rclb
into
lahf
and
nop
ret
sub
inc
hlt
mov
dec
out
pop
push
mov
stos
xor
sbb
stos
inc
cli
jns
cmp
push
insl
iret
pop
pop
mov
cmp
int3
push
and
mov
test
add
mov
push
out
push
or
cmpsl
stc
lods
cmp
movsb
jl
loopne
in
cmc
push
sbb
test
repz
xchg
cmp
push
fwait
jb
cmpsl
aad
adc
xchg
stos
mov
negl
nop
xlat
addr16
push
or
jmp
test
xor
inc
mov
xor
imull
cmp
ja
mov
stos
mov
lret
fwait
mov
cli
push
ljmp
pop
mov
ljmp
mov
pop
stos
sbb
push
push
stos
inc
xorb
cli
pop
inc
in
cmp
xchg
mov
insl
clc
es
fidivrl
out
jge
sbbb
mov
pop
aaa
mov
jo
mov
sub
xchg
dec
xor
mov
shll
stos
push
sub
sbb
mov
push
imull
cwtl
lcall
xorl
loopne
push
add
dec
add
mov
inc
add
jns
popa
or
mov
sbb
xor
adc
fidivrs
stos
lock
rorl
jb
stos
cmp
test
int
mov
sbb
jge
cwtl
daa
jnp,pn
nop
mov
add
jecxz
push
pusha
push
stos
pop
mov
adc
dec
sub
add
leave
or
and
imul
mov
mov
stos
lcall
ljmp
cmp
lcall
cmpsb
sbb
loop
mov
mull
lea
int
or
leave
mov
leave
mov
add
inc
mov
es
mov
shlb
adc
adc
shlb
das
mov
sub
test
leave
stos
es
and
mov
es
cmpsl
and
mov
es
and
and
mov
es
and
jecxz
and
es
cmc
mov
dec
mov
fsubs
insl
cmpsl
es
and
mov
mov
jno
dec
leave
and
adc
mov
out
and
mov
es
mov
add
cmpb
adc
test
and
es
dec
mov
ret
pop
leave
xchg
adc
test
popa
mov
es
mov
icebp
lock
mov
mov
into
push
orl
ds
ret
pusha
push
or
sti
inc
adcl
scas
ud1
cli
mov
repnz
cmp
aad
jo
sbb
push
cmpsl
mov
daa
inc
xchg
test
sbb
ss
stc
stos
clc
cli
jp
repnz
mov
into
xor
xchg
pop
mov
xchg
repnz
and
nop
es
xchg
stc
rdtsc
mov
cmp
xchg
inc
lea
inc
jbe
jno
and
testb
xchg
imul
int
daa
push
pop
mov
mov
out
jno
xlat
jbe
cli
push
lock
daa
xchg
jb
push
jb
and
dec
inc
shll
movntps
arpl
jb
fldenv
and
adc
lea
scas
lea
int3
test
jb
pushf
dec
push
mov
lods
lods
icebp
cwtl
lcall
pop
xor
mov
cmp
mov
jbe
stc
mov
mov
dec
int
jb
sbb
test
mov
int
dec
mov
pop
stc
lock
lea
mov
pushf
push
jnp
arpl
jbe
cmp
sbb
jle
jb
or
loope
aaa
js
cld
cmp
insl
ret
pop
lods
cmp
dec
es
and
fdivrl
es
xor
adc
fisttps
int
sub
push
cwtl
xchg
jno
dec
jo
fiadds
sub
clc
repz
jmp
sub
inc
call
dec
lock
icebp
and
push
mov
xchg
js
addr16
ja
mov
cmpsl
out
int3
gs
mov
mov
mov
inc
imul
pushf
sbb
cmp
jb
cli
mov
mov
clc
int
insb
sbb
push
jl
unpckhps
notb
es
xor
jno
and
loope
and
mov
icebp
icebp
xor
push
cmpsb
out
inc
lods
xchg
mov
and
cltd
cmpsb
mov
fsubp
daa
mov
fdivrl
cli
and
stc
sub
and
mov
pop
mov
mov
or
and
loope
ret
daa
inc
cmp
fs
outsb
ret
cld
inc
movsl
jecxz
mov
sbb
imul
int3
mov
mov
test
test
jmp
sbb
ljmp
imul
push
rolb
lcall
sahf
sbb
cmpsb
sub
mov
sub
test
dec
jmp
cmpsl
xchg
push
xor
or
rolb
xor
xchg
push
bound
or
cmpsb
mov
inc
rolb
jle
sbb
scas
push
mov
xchg
jecxz
jge
scas
sub
mov
lret
jmp
jle
fiaddl
mov
std
xor
jle
nop
mov
shrl
cmp
jnp
mov
xchg
decb
pop
sbb
xchg
lcall
mov
xchg
cltd
jmp
std
adcl
xchg
and
inc
cmpsb
out
pop
mov
in
jmp
arpl
cmp
mov
repz
sbb
lahf
push
std
fdivr
mov
jecxz
jmp
lahf
push
vandnpd
push
and
fpatan
xor
mov
xchg
xlat
lea
pop
fsub
push
stc
data16
fstpt
jge
and
mov
repnz
mov
or
cmp
inc
insb
or
cmp
cmp
rcl
fcoml
adc
std
cmp
jp
sti
cli
xor
sbb
lods
nop
mov
in
xchg
std
push
sub
daa
push
add
fdivl
pop
adc
and
addl
mov
mov
cmp
cmp
pop
xor
and
and
lock
sub
lahf
push
stos
pop
adcb
fistps
xchg
pop
iret
fwait
loope
cs
jb
jle
dec
mov
xchg
sbb
mov
mov
das
mov
add
mov
pop
ret
fsubrs
lcall
xchg
push
or
adc
jmp
loop
jp
ret
mov
pop
stc
daa
sti
lret
xchg
mov
fwait
lahf
and
cmpsl
mov
out
mov
sti
aad
andb
stc
lahf
loope
sti
xchg
testb
sbb
call
repnz
and
add
mov
test
xchg
aam
shlb
test
mov
mov
outsl
sub
push
ret
xchg
push
jbe
xchg
jmp
es
fs
stc
fwait
inc
jnp
mov
add
addl
jmp
pop
lret
popf
mov
sbb
shlb
xor
cli
jg
adc
scas
lock
stc
xchg
sbb
lret
lahf
pop
adc
dec
or
mov
shrl
xchg
shll
cmpsb
popf
ror
xchg
push
jg
outsb
mov
cmp
xchg
pushf
out
ret
jmp
loope
mov
push
in
jmp
pop
cmp
mov
jae
lods
mov
cmp
das
dec
mov
pushf
movsb
rcrb
cli
mov
mov
dec
clc
lea
push
sub
and
inc
inc
adc
cmpsb
cs
jbe
pop
mov
lods
movsb
fsubs
sbb
jb
ss
mov
jg
cmp
adc
es
repnz
add
insl
xchg
pop
adc
jae
sbb
rcrb
hlt
mov
xchg
mov
mov
addr16
insl
cmpsb
sub
dec
adc
popa
xchg
or
loopne
das
cmc
inc
xchg
lahf
movsb
sahf
fcmovb
imul
mov
inc
out
pop
into
inc
test
pop
subb
fistpl
es
call
cmp
andb
idivl
pop
mov
sbb
adc
push
dec
outsl
sarl
insl
cmpsl
fidivs
dec
inc
sbb
jg
pop
imul
rclb
mov
sub
aas
sbb
push
jno
dec
ret
scas
or
jg
subl
repz
add
xchg
xor
xchg
mov
inc
cmpsl
mov
jecxz
add
push
pop
jl
subb
sub
pop
inc
xchg
sahf
in
pop
imul
fcoml
sbb
or
sbb
aam
xchg
sbb
pop
in
push
cltd
push
int3
mov
jl
pop
lret
popa
in
xchg
add
inc
mov
shl
jl
xchg
pop
mov
iret
dec
jle
icebp
mov
sub
push
outsb
pushf
push
sbb
push
sbb
or
fstl
adc
mov
lods
push
stos
fcomps
shr
aas
sbb
mov
sbb
and
clc
lock
cmp
sbb
fldl
lret
fldl2e
dec
pop
in
and
mov
inc
jg
xchg
inc
cmpb
mov
shrl
sbb
nop
pop
ficoml
xor
sub
cltd
push
xchg
sub
push
jns
mov
mov
aad
mov
mov
nop
push
rcll
mov
sbb
pop
push
pop
movsb
mov
out
cmpsb
xchg
aad
xor
test
xchg
lahf
dec
rcrl
sbb
jmp
sub
adc
inc
lcall
popf
popa
arpl
dec
dec
daa
arpl
stos
sahf
jmp
mov
icebp
dec
mov
jno
xlat
scas
jb
dec
push
rorl
push
into
pop
cwtl
icebp
sub
lock
mov
push
call
add
div
mov
mov
fnstcw
mov
lcall
adc
jecxz
es
dec
ret
pusha
movsb
out
add
xchg
loop
ja
daa
or
cmp
mov
dec
jmp
pop
out
clc
cmpsb
push
mov
movsb
and
mov
jp
jmp
sub
insb
jne
clc
cmpsb
fxch
jnp
jecxz
popf
loope
lahf
imul
cmpsl
fisubl
imul
sbb
cli
scas
mov
pop
call
mov
test
cmp
cltd
pop
lahf
mov
jge
cmpsl
lcall
orl
aas
cs
xor
cmc
outsl
push
imul
fwait
ljmp
sub
mov
mov
add
pusha
mov
mov
jb
mov
push
clc
pop
jb
cmp
ret
andl
mov
push
stos
enter
adc
popf
ss
push
mov
aad
xchg
mov
movsb
dec
mov
mov
push
subb
dec
mov
int
mov
mov
ret
jmp
lahf
mov
mov
fwait
lods
insl
imul
push
cmpsl
jnp
pop
in
aas
cmp
mov
clc
data16
movsb
imul
outsl
andb
int3
sub
dec
lods
dec
dec
mov
pop
jmp
mov
xorb
push
pop
sub
into
ljmp
pop
adc
xchg
das
lock
aam
or
cs
pusha
add
test
test
nop
dec
inc
out
mov
imul
xor
stos
sub
mov
into
lods
cwtl
hlt
jmp
sub
fwait
and
sub
sti
jb
stos
mov
cmp
popf
test
sub
sbb
outsb
inc
dec
cli
cwtl
fwait
jecxz
leave
test
push
lea
xchg
in
xchg
jle
stos
fnstcw
mov
jl
movsb
mov
push
or
in
ljmp
mov
stos
movsb
test
or
mov
xchg
push
or
scas
mov
test
mov
sub
lret
sub
pop
jmp
enter
jecxz
stos
and
sbb
clc
sti
movsl
stos
fcmovnbe
test
pop
stos
mov
dec
sub
stos
adc
push
lods
addr16
movsl
xchg
stos
std
hlt
cmp
jno
mov
pop
sub
lahf
mov
fldt
push
pop
mov
movsl
imul
mov
sub
stos
mov
cld
lods
imul
stos
mov
adc
movsl
pusha
in
scas
fwait
xor
std
xlat
repnz
xchg
stos
lret
push
or
pop
jle
mov
mov
xchg
dec
mov
push
es
hlt
cmpsl
jmp
fistl
test
ss
imul
jle
dec
mov
add
scas
std
mov
adc
jnp
mov
xchg
adc
imul
mov
loope
mov
scas
enter
jmp
stos
push
sbb
mov
or
dec
imul
xchg
xor
or
mov
xchg
push
or
and
sub
imul
jge
imul
inc
das
jle
push
lahf
movsl
lahf
add
ljmp
ret
add
nop
stos
jmp
shll
sub
lock
push
xchg
jmp
es
orl
and
jmp
mov
pop
dec
movsb
daa
mov
cmpsl
fwait
push
bound
ljmp
std
mov
nop
cmp
scas
int
imul
nop
in
in
adc
pop
mov
test
xor
imul
push
mov
jp
ljmp
xchg
mov
jo
sbb
cltd
std
jnp
dec
fmulp
stos
pop
xchg
xchg
sub
push
jmp
shr
lcall
mov
stos
test
pop
cmpsl
jl
in
jns
fstl
push
leave
stc
daa
or
lret
popf
cmpsb
stos
xor
or
outsl
mov
and
pop
dec
or
cmp
xor
jo
cmc
loope
test
popa
inc
testl
movl
add
mov
cmp
out
add
stos
call
lret
xchg
lds
cmp
out
push
gs
mov
xor
stos
es
in
bound
fsubrs
push
cmpsb
aam
stos
enter
cmp
imul
out
push
popa
sub
mov
adcl
stos
in
mov
enter
aas
test
dec
or
pop
movsb
pop
ret
aam
xchg
loope
mov
loopne
popf
jmp
and
lods
fs
scas
cld
ljmp
test
push
or
test
xchg
dec
clc
imull
je
out
cmp
insl
lret
test
xor
imul
sub
xor
leave
inc
cmc
xchg
cld
stos
test
push
push
data16
fwait
and
jb
mov
xor
mov
jmp
stos
out
into
add
cmc
lahf
mov
push
push
pusha
pop
sbb
hlt
xchg
addr16
pop
aad
mov
cmp
pop
mov
xchg
mov
addr16
sub
xor
fwait
stos
das
jns
andb
rcrb
ret
push
lods
out
dec
test
xlat
adc
dec
push
mov
das
mov
daa
mov
xlat
lahf
cwtl
in
stos
jmp
test
sub
mov
fwait
inc
jmp
mov
lret
mov
xchg
push
mov
xchg
mov
stc
jno
test
arpl
pop
mov
stos
notb
sub
into
fidivl
mov
outsb
test
cltd
test
test
cmc
pop
mov
jne
stos
jnp
push
les
stc
test
repz
cmp
jo
stos
add
mov
stos
js
popa
xor
popf
ds
stos
fldt
xchg
leave
pop
xsaveopt
cmpsl
sub
sub
imul
jp
adc
cmpl
dec
sbb
pop
jb
pop
mov
adc
mov
jl
stos
movsb
push
rcrl
stos
lods
imul
out
cmpsb
imul
sti
cwtl
mov
mov
sub
ret
mov
xor
movsb
rorl
ljmp
pop
test
movsl
test
xchg
push
jmp
sbb
xor
in
jbe
fistl
imul
pop
std
test
mov
jmp
cs
mov
out
mov
cmpsl
ljmp
xor
out
sub
daa
mov
push
push
cli
dec
mov
call
xchg
mov
xchg
loop
mov
mov
cltd
cmp
add
sahf
js
xchg
push
movsb
mov
and
xchg
jnp
negl
inc
xor
xchg
pop
test
jmp
movsl
mov
mov
adc
mov
aaa
popf
lahf
mov
out
mov
sahf
mov
mov
imul
push
leave
popf
es
mov
test
mov
dec
gs
lea
cmpl
int
mov
out
and
xchg
lret
cmpl
lcall
xchg
hlt
xchg
mulb
in
lods
out
xor
jmp
jne
adc
lcall
test
fwait
cmpsl
movsl
hlt
pop
and
jb
fs
jae
mov
ljmp
popf
sbb
mov
mov
jnp
pop
adc
xchg
cli
ljmp
out
movsl
mov
xchg
leave
inc
mov
xchg
cmpsb
icebp
adc
cmpsl
dec
lods
jo
mov
sbb
push
jecxz
call
mov
adc
mov
jle
dec
and
popf
xchg
repnz
call
fwait
loope
test
lods
testl
mov
inc
xchg
sbb
call
mov
mov
or
mov
aad
out
es
pusha
in
add
jne
lahf
outsb
andl
jnp
xchg
cmpsl
mov
adc
adc
mov
cmp
jns
mov
push
test
mov
test
mov
and
leave
out
lods
xchg
leave
scas
inc
testl
mov
lahf
out
leave
push
lahf
mov
es
mov
es
mov
and
lea
fs
es
scas
mov
xchg
fucompp
mov
xchg
jmp
cs
mov
mov
lcall
mov
mov
cmp
mov
addl
mov
popf
cmpsl
mov
adc
cmpsb
dec
dec
mov
mov
mov
mov
cltd
out
mov
int
xchg
mov
mov
mov
cmpsb
cltd
sub
cltd
add
mov
les
xchg
mov
sub
dec
bound
lea
cmp
out
mov
loopne
dec
or
stc
aaa
ja
aaa
jns
cmp
push
mov
notl
idivl
scas
stos
or
push
lret
xor
xchg
add
insl
cmp
and
cmpsb
or
pop
mov
mov
test
fwait
enter
push
adc
test
sub
jbe
mov
sub
imul
add
out
or
gs
cmpsl
cmpsb
fs
mov
dec
jmp
cmpsl
mov
cmp
pop
lods
andb
jecxz
cmp
adc
mov
cmpsl
mov
push
or
pusha
lods
xchg
cmp
in
stc
cmpsl
sub
sub
pop
cmpsl
sub
sti
cmpsl
ret
and
test
inc
jge
imul
mov
loopne
sub
dec
push
movsl
xor
xchg
and
inc
jnp
jecxz
cmpsl
outsl
mov
jecxz
mov
andl
jecxz
and
add
mov
cli
popf
sub
cmpsl
into
addr16
cmpsl
ficomps
mov
movsl
dec
imul
fwait
andl
mov
mov
dec
cmp
sti
inc
in
jle
mov
ss
adc
inc
popl
and
test
push
xchg
fimuls
mov
pop
cmpsl
insl
jns
shll
mov
xchg
scas
mov
pop
sbb
xchg
sbb
stos
sub
ss
mov
dec
jmp
bound
arpl
in
push
mov
dec
in
movsl
mov
pop
movsl
xlat
and
mov
shl
movsl
call
mov
popa
hlt
add
movsl
int3
out
js
cmp
mov
xor
jmp
dec
xor
movsl
mov
dec
stos
sbb
fdivr
mull
cmc
mov
mov
ljmp
xlat
movsl
pusha
dec
mov
mov
inc
cld
mov
add
jecxz
mov
xor
cltd
movsl
cs
and
aas
jns
cmp
sub
xlat
sub
mov
movsl
xchg
dec
mov
imul
and
mov
scas
inc
inc
es
movsl
jns
shr
pop
movsl
jnp
lods
push
xchg
outsb
in
xor
sbb
lea
repz
add
mov
fsts
mov
push
bound
hlt
or
mov
inc
mov
pusha
sub
mov
mov
nop
movsl
jbe
in
pop
flds
std
sub
movsl
shll
mov
movsl
push
cli
mov
popa
push
into
add
lds
addb
arpl
std
lahf
jb
xchg
or
mov
adc
cmp
push
test
call
es
pop
movsb
mov
out
mov
cltd
add
mov
jle
call
out
out
jae
bound
fsubl
mov
push
pop
and
daa
push
daa
icebp
daa
psubsb
test
mov
cmp
jmp
or
lcall
dec
in
xadd
stos
pop
sub
cli
mov
mov
test
xchg
add
imul
mov
inc
sub
aas
clc
mov
lea
cmp
leave
mov
mov
mov
decl
std
repnz
test
andb
cmp
fistpll
sub
shll
movsb
call
and
mov
sbb
sub
mov
mov
push
jp
mov
mov
ljmp
mov
mov
or
xor
mov
rorb
or
mov
pop
fstpt
jg
ljmp
cmp
xor
mul
xchg
mov
push
adc
mov
leave
cmp
pushf
sti
stc
xchg
mov
call
xchg
pop
adc
mull
icebp
xor
push
xchg
sub
inc
mov
push
icebp
lods
mov
into
repz
mov
and
add
mov
test
out
mov
xchg
mov
xchg
in
xor
sub
mov
outsb
movsl
addr16
movsb
scas
rorb
pop
inc
push
jne
add
cmc
xor
mov
std
divl
xchg
sub
xchg
mov
jne
stc
mov
test
inc
popa
dec
lods
sahf
cmpsb
insl
lahf
mov
mov
or
cld
dec
div
dec
adc
lea
mov
mov
frstor
incb
mov
movsl
mov
sub
into
stos
cmc
xor
jae
fwait
stos
mov
xchg
imul
stos
ds
addr16
push
mov
adc
test
cli
jge
mov
addr16
orb
push
push
and
into
push
inc
cmp
inc
push
xchg
loop
pop
mov
call
enter
mov
mov
xchg
jmp
push
fwait
mov
cmpsl
xor
into
outsl
pop
adc
sub
dec
fmull
sub
xchg
push
mov
lods
dec
push
mov
sbb
stos
setbe
pop
inc
mov
stos
movsb
test
push
scas
ljmp
xor
mov
stos
and
data16
fisttps
outsb
stos
xchg
jecxz
add
cmp
in
mov
aas
push
jno
add
mov
daa
mov
dec
aaa
cmp
and
stos
sub
imul
push
mov
inc
add
aam
or
stos
fidivrs
jl
push
pop
dec
stos
insl
jle
enter
pop
and
stos
mov
cmp
and
mov
inc
dec
mov
test
bound
xor
cmc
xlat
imul
jno
gs
nop
sub
roll
pushf
mov
push
jmp
fucomp
icebp
xor
gs
stos
add
stos
add
pop
mov
sub
cmp
jb
out
sbb
mov
fnstsw
int
in
stos
dec
mov
insl
outsb
adc
divb
mov
adc
add
jecxz
incb
and
dec
test
push
stos
out
xchg
popa
xchg
jnp
sub
xchg
xor
mov
push
rcrl
cwtl
and
fidivrl
or
jnp
stos
scas
mov
pop
inc
stos
dec
insb
mov
pop
xchg
sub
adc
or
or
subl
jns
outsl
pop
fiaddl
pop
jnp
or
cwtl
ret
stos
pop
in
test
and
xor
movsl
jo
loop
sahf
sbb
out
sbb
stos
lcall
fsubrs
xor
test
icebp
adc
lret
daa
and
in
stos
mov
inc
iret
push
inc
mov
mov
and
in
and
xor
and
jecxz
push
xor
stc
cmc
stos
pop
ret
sar
lds
mov
jno
xor
pop
dec
mov
mov
cs
pop
test
lea
jmp
ficoml
mov
cwtl
push
in
iret
or
adc
xor
sbb
dec
mov
inc
or
aad
subb
mov
popf
stos
pusha
jp
push
lret
mov
jle
pop
xor
mov
xchg
lret
int3
or
and
daa
jno
sub
mov
lods
xchg
xlat
in
nop
dec
leave
stos
adc
adc
sahf
jbe
xor
in
mov
xchg
nop
cmp
divl
std
stos
ds
adc
push
ret
pop
or
mov
idiv
stos
xor
in
add
cmp
in
lret
loop
xchg
pusha
stc
das
pop
jl
mov
xchg
sbb
jecxz
stos
scas
adc
movsl
in
cmp
lods
sbb
push
jnp
xchg
or
jmp
push
imul
mov
adcl
stos
mov
adc
stos
sarl
fmulp
fiaddl
mov
clc
sub
push
insb
stos
push
add
ret
orl
mov
jl
mov
sbb
jae
loope
out
test
aas
or
stos
adc
cmpsl
fsubrs
dec
mov
stos
pop
xor
add
mov
stos
jl
insb
xchg
das
jge
inc
xchg
push
movsb
pop
mov
xchg
jnp
sub
ficoms
mov
mov
pusha
ljmp
lret
in
int3
stos
lcall
xchg
pop
daa
jno
lcall
fsubrp
and
xchg
mov
loop
sub
jbe
outsl
inc
fwait
test
xchg
jns
jg
in
addl
xor
test
push
xor
cmp
rol
fldl
adc
and
out
or
cs
in
adc
xor
lock
mov
xchg
add
sbb
sub
mov
sbb
push
fwait
xchg
adc
stos
dec
or
adcl
pop
mov
int3
and
test
and
cmp
xor
mov
dec
stos
stc
lods
ds
cmp
push
xlat
xchg
stos
jl
sahf
xchg
sub
mov
repnz
insb
jle
stos
je
popl
arpl
stos
mov
sbb
cmp
mov
lods
fwait
stos
xchg
add
les
fisubs
xor
loope
cmp
jno
int
xchg
dec
shrb
sbb
cltd
stos
pop
add
sahf
int3
pop
stos
sbb
cmpsb
arpl
xchg
pop
cmp
stos
data16
cwtl
jb
loop
mov
jmp
sub
jno
mov
fldl
outsb
mov
sbbb
or
popa
fs
xor
popf
push
xchg
int
scas
movsb
stos
ds
and
clc
test
stos
out
push
mov
cwtl
jecxz,pn
lock
shll
inc
xor
mov
mov
in
sbb
stos
sub
pop
bound
test
mov
loope
mov
arpl
mov
push
jnp
in
xchg
out
push
stos
inc
add
in
popa
inc
lods
adc
xor
into
fwait
push
lret
jmp
les
pop
js
lods
icebp
jg
pushf
stos
mov
xchg
sub
cmp
cmpsl
fs
pushf
mov
cld
repz
scas
jbe
inc
or
mov
call
pop
stos
sub
or
push
fistps
stos
pop
lcall
addr16
inc
pop
add
aaa
jnp
addr16
mov
stos
xchg
mov
xchg
inc
dec
mov
ja
outsb
or
sub
dec
inc
pop
mov
stos
fidivs
enter
repz
mov
cli
stos
xor
dec
push
or
jbe
test
pop
jmp
stos
adc
mov
mov
or
loop
pop
sarb
cmpsb
cmpsl
mov
sbb
adc
aad
add
ljmp
cli
xor
or
sub
xchg
fldenv
test
pop
inc
mov
icebp
lcall
fs
lret
mov
dec
add
pop
iret
pushf
ret
sub
push
rolb
daa
pop
jbe
mov
mov
sti
mov
ror
stos
inc
call
xchg
sub
stos
nop
sub
cmp
pop
test
stos
push
jns
dec
pushf
add
mov
pop
mov
jo
pop
stos
cltd
fsubr
adc
jmp
dec
mov
scas
test
cmpsb
add
mov
cmc
xor
stos
lcall
xchg
mov
pop
cmp
cld
outsb
orl
roll
push
stos
jmp
pop
lahf
and
int3
mov
push
xchg
inc
imul
test
sbbl
push
stos
aad
jl
and
into
push
imul
lods
inc
or
ret
lcall
fldl2t
push
clc
in
arpl
testl
cmpsl
sub
int
aad
addb
pop
pusha
icebp
cltd
out
adc
lods
xlat
stos
in
popa
mov
pop
test
push
les
push
stos
repz
bound
or
je
mov
mov
xchg
fwait
pushf
scas
es
repz
pop
jecxz
sbb
push
cmp
imul
cltd
add
sub
mov
add
jge
inc
stc
stos
psllw
xor
lds
ja
mov
jecxz
mov
xchg
xchg
out
stos
ret
xor
mov
xchg
jae
cmp
mov
lea
js
mov
and
repz
in
fsubl
fwait
and
les
stos
test
sbb
adc
stos
pop
inc
sub
test
stos
andb
xchg
jmp
cltd
mov
stos
nop
pop
imul
add
daa
xchg
dec
jae,pn
aad
xor
dec
mov
add
and
cmp
fwait
outsl
insb
jb
pop
mov
mov
jae
movsb
adc
sbb
enter
stos
les
xor
push
movsb
pop
push
sub
jb
add
xor
stos
iret
in
ret
mov
out
xor
loope
mov
push
or
movsb
xchg
hlt
stos
add
test
pop
lods
movsl
stos
sub
ds
dec
pushl
stos
pop
popf
daa
sti
cs
andl
pop
cmp
jae
mov
std
in
mov
inc
mov
inc
iret
stos
scas
out
inc
daa
rcrb
jae
stos
xor
dec
jge
sbb
jns
das
fisttpl
lcall
sti
shrl
sar
inc
sbb
mov
fcomp
je
stos
aam
rcr
sar
pop
stos
popf
lock
pop
lcall
js
enter
stos
mov
inc
adc
sbb
stos
repnz
or
xor
mov
stos
cld
aaa
xor
loope
pushf
lock
push
xor
mov
xlat
stos
insl
jge
push
and
xchg
daa
js
test
fwait
and
and
dec
stos
mov
mov
ljmp
xchg
test
sub
or
in
jbe
imul
cmp
push
mul
adc
test
es
push
and
cld
imul
mov
mov
pop
xchg
stos
mov
push
or
xchg
inc
stos
mov
inc
ds
cli
xchg
ret
in
sub
sti
sub
xchg
add
xor
inc
push
adc
outsl
inc
fists
mov
mov
push
std
mov
dec
stos
call
imul
jns
js
push
xor
cmpsb
clc
jbe
mov
into
jmp
hlt
xchg
inc
cmp
imul
dec
dec
inc
scas
in
jl
mov
mov
out
mov
stos
rcrb
sahf
push
stos
pop
jo
cmpsl
dec
add
das
push
adc
dec
movsl
shl
es
mov
imul
jno
or
std
shl
stos
sbb
int3
xchg
cld
lds
jp
insb
aaa
lods
gs
jecxz
adc
adc
stos
mov
push
pusha
add
mov
jmp
push
rcll
mov
stos
sahf
pop
lock
push
sub
stos
movsb
or
push
and
and
in
sbb
add
push
lret
ss
dec
sbbl
shl
mov
jg
stos
add
aas
sub
stos
dec
arpl
es
enter
pop
mov
sbb
scas
mov
sub
lea
aaa
sti
or
mov
mov
push
insl
mov
orl
push
mov
mov
mov
call
stos
sbb
adc
cmp
xchg
test
fidivrs
in
fwait
mov
lea
jmp
inc
ja
imul
stos
pop
jbe
shll
pop
push
stos
cmp
call
pop
stos
sub
mov
dec
add
mov
into
cmpb
scas
and
adc
mov
and
push
cmpb
in
addr16
andb
lds
inc
xchg
mov
mul
push
fadd
orl
xchg
test
int
push
dec
mov
sub
pop
repz
push
jge
or
loopne
call
rorb
popf
mov
cwtl
aam
dec
aad
lahf
dec
pop
les
fxch
dec
js
cld
cmpsl
ja
inc
inc
out
test
inc
jmp
fistl
cltd
push
addr16
push
hlt
lds
stos
pop
ret
inc
int3
jbe
int
adc
push
and
pop
or
dec
stos
sbb
clc
pop
psadbw
int
sub
xor
add
mov
ss
inc
fs
mov
popf
je
push
scas
add
lods
add
arpl
and
aam
add
pop
xor
mov
stos
jnp
lret
mov
stos
stos
cmp
int
shrl
mov
into
scas
fldt
cmc
mov
add
inc
or
mov
in
push
lret
faddl
jno
push
popf
aam
push
mov
stc
bound
aam
dec
jnp
mov
xchg
cwtl
frndint
jo
stos
dec
xlat
add
cmp
push
movsb
sbb
xor
xor
or
popf
or
sar
cs
mov
iret
stc
stos
push
sti
sub
inc
mov
dec
sub
lahf
pop
xor
mov
inc
xor
jg
out
sbb
jp
stos
cmp
es
imul
fstl
sub
lds
inc
aaa
lahf
stos
mul
cmp
xchg
push
inc
mov
push
scas
rolb
test
mov
dec
or
cld
stos
jbe
adc
pop
jecxz
mov
enter
push
cmp
es
sub
ffree
nop
sahf
push
repnz
and
insb
je
leave
inc
cwtl
mov
push
out
cld
sbb
stos
in
jecxz
jbe
xchg
stos
xor
pop
cmpb
mov
push
mov
mov
pop
sahf
dec
jo
cmpsb
mov
pusha
mov
inc
xlat
in
xchg
cmp
stos
pop
pop
sahf
add
fwait
push
stos
cld
mov
jg
mov
inc
mov
arpl
push
outsl
lea
imul
add
mov
stos
and
dec
stos
xlat
les
ja
addr16
mov
stos
lea
push
sbb
add
arpl
cs
push
xchg
and
xchg
adc
nop
push
stos
daa
jecxz
or
sub
leave
stos
scas
scas
ret
jmp
outsl
mulb
jnp
cwtl
stos
mov
ss
dec
test
stos
scas
push
xchg
mov
stos
clc
in
sbb
in
mov
sbb
xchg
stos
fildl
mull
jb
fs
test
adc
ljmp
and
pop
out
cmp
fwait
stos
cwtl
mov
sbb
dec
jecxz
outsb
jae
mov
lods
stos
pop
jno
cld
aad
and
mov
xor
push
mov
xchg
jle
lret
xor
and
sti
imul
jp
outsl
xchg
push
insl
xchg
push
cld
imul
push
stos
mov
xchg
mov
dec
fcmovnb
mov
xor
je
adc
pusha
pop
out
roll
jecxz
fstpl
add
fld
mov
stos
and
xor
jae
std
sbb
mov
inc
leave
or
cmpsb
ret
dec
pop
jnp
jmp
shll
jmp
cmp
jb
xor
stos
lcall
test
loopne
arpl
jo
scas
inc
mov
pop
lods
dec
filds
hlt
gs
dec
push
es
or
stos
cmpsl
sti
insb
fistpll
dec
jno
rorl
fldenv
push
and
clc
stos
std
pop
sub
ret
in
dec
pop
mov
add
mov
jge
in
fisttpll
mov
sbb
adc
loop
stos
push
mov
testb
out
adcl
and
inc
stos
jge
mov
dec
add
pop
cmp
testl
leave
stos
mov
mov
out
mov
xchg
stos
shl
mov
js
scas
fildll
inc
imul
or
jbe
stos
insl
movsb
fs
sub
sub
stos
xor
imull
lret
iret
out
xor
add
inc
pusha
imul
sahf
mov
jmp
orb
pop
inc
bound
sub
lcall
xchg
insb
mov
fwait
stos
xor
popf
lods
xchg
cmpsl
and
repnz
adc
fdivrs
fwait
cmpsl
arpl
iret
xchg
stos
mov
mov
ucomiss
jmp
jbe
sbb
imul
ss
adc
cmpsb
xchg
push
imul
sbb
mov
lods
mov
stos
xchg
xchg
push
fstpt
mov
cs
and
lret
sbb
mov
pop
movsb
mov
mov
lret
dec
stos
call
push
sahf
add
xchg
sbb
sbb
dec
ljmp
push
jno
bnd
inc
sub
xchg
pop
xor
loope
das
stos
adc
ds
xlat
mov
hlt
sub
addr16
sar
xor
add
push
fcomi
or
cld
call
push
mov
adc
cmpsl
mov
fwait
add
ja
lods
and
lahf
mov
push
stos
clc
dec
mov
or
pop
in
cmp
cmpsl
jns
adc
mov
adc
hlt
mov
mov
data16
mov
rcrb
imul
mov
test
and
arpl
cmovg
sbb
daa
pop
and
out
cmp
stos
push
add
fs
pop
xor
popf
out
imulb
mov
mov
gs
xor
stos
int3
lcall
out
pop
xchg
mov
test
xchg
and
dec
mov
gs
dec
pop
jmp
mov
mov
pop
add
jne
dec
daa
cld
pusha
dec
inc
mov
in
call
pop
jp
adc
jns
stos
test
sbb
stos
and
and
or
cmp
push
xchg
mov
xor
stos
cwtl
inc
dec
pusha
loopne
mov
stos
or
repz
lods
stos
shrl
shl
dec
push
fwait
jo
xor
outsb
push
cli
adc
jns
pop
or
aad
xchg
mov
jp
pop
sbb
ja
adc
in
or
xchg
pop
pop
adc
mov
loop
and
lret
out
and
mov
mov
and
stos
dec
pop
les
xchg
mov
adc
fwait
push
mov
mov
inc
js
mov
in
jno
push
stos
enter
pop
clc
or
stos
daa
cmp
lret
scas
lea
scas
jmp
sbb
mov
rclb
hlt
ret
inc
or
test
jmp
adc
push
xor
xchg
roll
mov
fcoml
adc
adc
mov
call
leave
aam
lock
adc
jmp
mov
imull
sbb
xchg
mov
xchg
sbb
stos
mov
lds
stos
cmp
cli
ret
jbe
stos
pushf
imul
mov
cmp
push
fs
dec
shl
ljmp
sbb
outsl
mov
scas
stos
mov
aas
rorl
nop
jne
ret
andb
sub
xor
jmp
xchg
in
test
popa
ss
inc
stos
andl
push
insb
stos
scas
and
inc
jp
pop
cmpsb
stos
jl
inc
lds
mov
stos
adc
dec
movsb
imul
arpl
fistl
jae
in
inc
leave
stos
fnstsw
cmp
stos
pop
xor
and
sub
pop
test
mov
push
add
push
mov
dec
xchg
ja
mov
adc
and
jb
jge
out
stos
loopne
sti
les
xchg
mov
mov
mov
stos
cmp
movsl
mov
rcll
pop
sub
xchg
push
sbbl
in
sub
mov
cli
lods
js
outsb
mov
jno
sarl
popf
mov
std
stos
loop
rclb
pusha
jmp
xor
leave
sub
xchg
pushf
xor
mov
scas
sub
or
shll
stos
xchg
mov
cwtl
rolb
jmp
mov
rclb
icebp
imul
lahf
call
cmpsl
pop
repnz
xor
clc
stos
out
or
push
fistpl
incl
cmp
aaa
jae
lret
push
cwtl
push
dec
cmc
mov
enter
pop
scas
mov
add
and
mov
mov
fldt
sub
sarl
addr16
cmpsl
lods
test
mov
shrb
ss
push
test
dec
repnz
stos
pop
xchg
mov
cwtl
stos
jle
loop
sbb
push
xor
jnp
add
stos
shl
xchg
ret
ficompl
or
insl
jbe
inc
adc
cmp
imul
les
cmp
jg
or
subl
and
js
pop
lds
mov
add
stos
inc
inc
pop
ljmp
xchg
push
xchg
shrl
imulb
cmp
sarb
push
jmp
pop
mov
mulb
test
cltd
ljmp
xchg
imul
push
sub
sbb
xchg
testl
cmp
pusha
mov
subb
imul
out
xor
cmp
dec
jmp
outsb
cmpsl
xor
movsb
lret
push
lock
ret
loopne
dec
jle
mov
pop
pop
mov
idiv
rolb
push
xchg
stos
clc
repz
and
push
out
js
in
mov
fwait
ficoms
sbb
sti
jge
lods
sbb
jge
and
sub
mov
mov
and
lret
mov
xchg
add
arpl
push
inc
sar
jge
inc
sub
jl
adc
push
stos
pop
aas
xor
adc
insb
mov
ficompl
ret
stos
lock
mov
shrl
in
cld
shll
lds
sbb
cmp
mov
stos
in
rcrb
push
in
cmp
leave
push
cld
scas
into
fstp
xchg
daa
pop
jb
fsubl
mov
fisubrs
mov
xor
sub
mov
jo
stos
cld
fnstenv
sti
dec
out
fwait
imul
ss
sbb
addl
xchg
cmp
stos
mov
fs
clc
pop
stos
sbb
mov
stos
rorl
dec
stos
mov
xchg
movsb
mov
dec
hlt
push
cmp
stos
aad
stos
mov
mov
andb
dec
lret
stos
and
std
inc
mov
jge
popa
std
pusha
nop
stos
add
push
dec
or
imul
fwait
push
test
mov
imul
mov
sahf
mov
dec
popa
or
fldcw
pop
xchg
fnstsw
mov
jmp
mov
stos
dec
cld
fmuls
pop
push
lret
enter
xchg
push
push
stos
fistpll
js
stos
mov
and
ljmp
lcall
xchg
roll
sahf
xchg
jo
push
jbe
lret
lea
pop
xchg
scas
stos
xlat
xchg
stos
add
xchg
pusha
dec
inc
mov
xchg
xchg
lods
sub
lds
jmp
lock
int3
out
xchg
dec
nop
or
stos
les
xchg
aaa
dec
push
dec
aad
loopne
xchg
xchg
repz
insb
stos
xor
xor
mov
add
dec
and
ja
mov
fnstcw
mov
rcl
inc
sbb
cli
addr16
push
stos
mov
test
into
jmp
in
cmpsl
sub
xchg
xchg
push
pop
xchg
mov
in
mov
lcall
test
stos
push
mov
ret
jns
lret
out
inc
pop
mov
addr16
or
cli
push
sbb
mov
rol
icebp
xchg
stos
outsl
sahf
lcall
jg
stc
inc
mov
jb
pop
and
nop
stos
add
stos
fwait
mov
aaa
movsb
pop
nop
xchg
stc
stos
cmpsl
inc
push
xor
mov
leave
aad
stos
push
sub
pop
jae
stos
or
clc
jns
cmp
sbb
jl
mov
ds
fwait
push
jo
out
inc
adc
adc
movsl
fstps
in
dec
lahf
mov
xorb
mov
inc
out
movsb
daa
sub
add
stos
aad
ret
mov
jmp
xor
mov
dec
stos
test
popf
in
adc
daa
jbe
sub
cld
dec
stc
fistl
and
sbb
lret
pop
dec
jge
stos
xchg
out
mov
arpl
imul
and
lds
lret
enter
lcall
nop
stos
mov
mov
lds
loope
sub
stos
adcl
iret
xchg
lods
jnp
pop
stos
mov
adc
mov
xchg
jno
stos
jp
sbb
cwtl
dec
stos
mov
cmc
and
sbb
dec
pop
inc
fwait
jg
mov
stos
pop
dec
das
inc
leave
jnp
inc
das
and
nop
jno
jecxz
ds
nop
push
fcmovne
insl
stos
xchg
into
push
sbb
imul
xchg
repnz
cmp
aas
insb
xchg
cmpsl
scas
push
push
jne
ficompl
pop
scas
test
gs
in
test
std
fsubs
in
out
daa
and
sbb
xchg
mov
insb
inc
pop
cmpsb
mov
lods
jbe
and
stos
sub
mov
insl
mov
mov
mov
or
sbb
hlt
push
mov
int
aaa
iret
gs
fwait
inc
in
jne
xchg
jbe
dec
cmp
lcall
je
dec
mov
inc
pop
rclb
lcall
inc
fwait
push
fistl
jno
stos
jbe
jp
test
and
outsb
dec
push
and
shlb
pop
xor
mov
aas
fstps
das
movsb
lds
test
or
adc
sub
xchg
pop
fldl
mov
fistps
mov
sub
je
jl
pop
stos
push
or
stos
dec
push
std
dec
inc
and
data16
sbb
inc
lods
stos
and
inc
faddp
stc
insb
mov
out
rol
cmp
xchg
mov
mov
dec
stos
scas
es
and
mov
push
or
push
out
xchg
shlb
push
mov
insl
test
sub
cmp
sarl
mov
sbb
add
rorb
imul
and
mov
frstor
or
fdivs
sti
ret
stos
xor
std
test
mov
fcomps
ret
std
push
mov
daa
add
stos
repnz
xchg
jmp
nop
cmp
sub
xor
test
js
push
sbb
outsb
mov
mov
stos
cli
xchg
xchg
insb
xlat
stos
jne
sub
stos
mov
cld
mov
outsb
and
mov
inc
push
mov
ret
mov
and
stos
cmp
jmp
fldcw
subl
call
stos
push
pop
add
mov
in
xor
aas
int3
loopne
push
stos
jns
stos
jb
shrl
arpl
popf
adc
sarb
mov
mov
add
jo
shll
mov
pop
punpckhwd
movsb
sub
pop
int3
daa
movsb
das
add
mov
in
scas
js
stos
mov
dec
iret
jmp
repz
ret
xchg
fwait
cmp
stos
sbb
and
stos
lock
imul
imull
orb
xchg
ret
aas
mov
pushf
fsubrl
jnp
sti
stos
jb
ja
lret
clc
rcl
stos
idivl
aaa
adc
push
fists
stos
imul
add
push
stos
nop
add
hlt
jg
xchg
dec
in
test
stos
daa
nop
or
mov
inc
lret
inc
stos
loope
pushf
inc
push
fsubrl
and
or
xchg
insl
dec
sbb
scas
shlb
pop
aas
mov
stc
stos
inc
imul
jp
lds
sbb
xchg
push
dec
or
stos
lods
scas
push
nop
stos
xor
ljmp
cmp
stos
mov
test
stos
push
xchg
and
add
shrl
sbb
pushf
scas
stos
push
sbb
fmuls
test
xor
adcl
xchg
int3
out
lret
sbb
and
mov
add
or
idivl
rcll
jno
loope
push
pop
scas
stos
mov
xchg
and
stos
xor
dec
loopne
inc
mov
enter
xchg
sub
and
cmpl
mov
add
imul
stos
adc
adc
jne
inc
lods
stos
xchg
pop
sbb
stos
mov
loopne
ret
sub
int3
cmpsb
stos
mov
out
add
js
ret
pop
fsubrl
stos
xor
fildl
xor
stos
js
xchg
adc
std
imul
pop
mov
xor
pushf
cmp
stos
or
in
pop
dec
popa
std
inc
dec
insb
or
fsubl
gs
and
stos
mov
cmp
adc
dec
jnp
xchg
mov
mov
xchg
cmp
xlat
shll
mov
stos
jns
mov
push
push
stos
mov
mov
int
pop
stos
pop
jnp
jge
repnz
lods
inc
pushf
pop
cmp
sahf
adc
stos
scas
aas
daa
jno
fwait
dec
inc
push
in
ljmp
mov
into
outsb
addr16
sub
mov
and
pop
stos
add
xor
sahf
cmc
mov
std
jbe
dec
imul
jg
xchg
outsl
push
std
mov
mov
or
loope
pop
daa
orl
mov
std
cmp
stos
lcall
xor
mull
inc
sub
push
mov
lods
hlt
add
repz
and
dec
stos
jp
jae
loope
sub
mov
lea
stos
jle
pop
push
into
mov
cmp
dec
in
inc
test
imul
mov
imul
fiaddl
sbb
mov
inc
push
stos
pop
mov
addr16
andb
sub
xor
iret
lahf
and
repnz
sub
mov
es
fwait
in
cmp
pop
andl
orl
stos
cmp
dec
add
ret
stos
sbb
fsubs
adc
dec
add
fcompl
fistps
jg
stos
movsb
addr16
xorl
jle
es
outsl
out
jp
stos
mov
inc
cmc
clc
add
loopne
push
mov
cmp
vpmacsdql
mov
pusha
stos
inc
jo
les
lea
push
xchg
insb
sub
popf
stc
push
xchg
movsl
das
mov
stos
aad
inc
call
stos
std
sub
adc
iret
mulb
jmp
add
lock
movb
push
xchg
ljmp
fucomip
mov
cmc
arpl
push
std
out
int3
stos
out
inc
or
lea
stos
sbb
jns
insb
mov
lahf
lret
adc
and
or
and
stos
ficompl
xor
stos
mov
dec
push
adc
filds
lods
jmp
stos
jge
push
cmc
stos
inc
dec
icebp
pop
xchg
push
stos
aam
stos
jmp
sbb
xor
clc
repz
fstl
lahf
cmp
scas
mov
push
pop
xchg
stos
incl
ljmp
data16
lea
ret
jmp
stos
jg
jns
mov
int
iret
out
and
jl
add
mov
sti
sub
and
push
pop
rorl
dec
aas
pop
stos
jno
mov
icebp
cld
push
punpckhwd
cld
lea
std
jp
and
in
adc
mov
call
cmpb
inc
pop
sbb
ss
aaa
fldl
and
lret
into
cs
cwtl
pop
ffree
in
jae
scas
stos
mov
pop
or
arpl
sub
lods
mov
stos
lock
or
stos
xchg
adc
cmp
sub
test
shll
dec
inc
lret
into
insl
cld
push
punpckhdq
push
jl
cltd
mov
jae
xchg
sbb
leave
stos
add
icebp
mov
insb
fsubrp
xor
jno
nop
test
std
cmpsl
inc
jecxz
pop
stos
sub
xchg
es
push
push
adc
jae
push
inc
pop
mov
stos
enter
cmp
add
stos
imul
ds
sahf
pop
pusha
mov
aad
fmull
addr16
js
mov
mov
std
jmp
sti
out
cwtl
jo
xor
cmpl
repz
andl
push
mov
stos
movsl
xchg
and
fidivrl
in
cmp
les
mov
cmpsl
cwtl
xchg
xor
sbb
pop
mov
jno
insb
daa
rcl
dec
jl
clc
stos
lcall
sub
cmp
in
repnz
push
in
mov
ljmp
pop
jae
push
bound
shrb
push
fsubrs
push
push
mov
outsb
xchg
or
cmp
jo
out
stos
push
adc
addr16
cld
dec
stos
mov
loop
mov
pop
pushf
stos
sbb
in
cmpsl
sub
and
push
out
dec
mov
pop
sub
push
dec
cltd
xor
stos
push
in
std
cmp
pop
mov
mov
loope
adc
add
out
imul
mov
movl
stc
insb
mov
rcrl
adcl
xchg
sub
stos
loopne
test
iret
sub
mov
roll
outsb
dec
in
and
test
popa
stos
lock
ljmp
mov
xchg
stos
out
fimuls
in
call
fwait
push
fst
dec
pushf
mov
int3
mov
xchg
mov
mov
shlb
mov
xchg
dec
aaa
mov
add
ret
cmpsl
sbb
dec
jbe
ficomps
imulb
outsb
int3
adc
mov
jmpw
cmp
pop
in
lret
jle
jge
add
xor
arpl
cmpsl
and
sub
push
add
xchg
push
add
addr16
sub
pop
and
push
mov
pop
stos
fcmovbe
ljmp
les
push
fwait
mov
pop
cmpsl
jl
in
rcl
outsl
pop
popf
push
mov
stos
in
jl
es
daa
sub
rcrl
loop
sbb
repnz
pop
fwait
jmp
inc
stos
js
test
jbe
push
out
stos
movsb
mov
xorl
inc
dec
test
lcall
pop
jecxz
ret
jle
cmp
sub
mov
push
mov
sub
sahf
in
jle
cmp
mov
mov
cld
jle
out
ror
and
rolb
and
jmp
add
stos
push
dec
out
push
fmuls
mov
mov
aad
movsb
sub
nop
xor
xchg
stos
cmpsb
lahf
mov
movsl
stc
test
jmp
or
sub
adc
mov
imul
pop
dec
mov
aaa
adcl
and
ja
jbe
in
adc
stos
scas
cli
add
addr16
notb
iret
movsb
inc
adc
cmc
pop
lret
call
pop
stos
cmp
insl
cwtl
stos
vmovlps
cmp
mov
mov
fucom
shll
test
xor
subl
pop
test
movsb
repnz
fwait
daa
mov
cwtl
xor
sub
cmp
lahf
jmp
test
pop
out
fwait
cmpsl
int
aad
push
sub
pop
xchg
out
mov
stos
add
and
stos
xor
fstpl
push
mov
outsl
imul
mov
sub
and
popa
xlat
mov
mov
notb
push
xor
fdivs
mov
push
fsubp
cmpsb
mov
mov
or
pop
mov
mov
cli
mov
pop
ret
xchg
jg
adc
pushf
in
imulb
xchg
push
mov
cwtl
jp
xor
mov
push
mov
loop
stos
mov
pop
clc
push
arpl
sbb
pop
imul
mov
fcoms
jg
and
jl
or
sti
sub
into
mov
loope
in
xchg
push
or
xor
push
cltd
ljmp
push
jmp
sub
shrb
push
out
imulb
je
sub
stos
cs
pop
outsb
subb
fistpl
sbb
loopne
imul
stos
mov
icebp
xor
fwait
push
test
in
or
movsb
clc
sbb
mov
iret
stos
xor
lret
enter
stos
add
pop
lods
mov
push
or
test
push
mov
jnp
cmp
repz
dec
adc
xlat
or
ja
or
outsl
add
add
sbb
xchg
add
lcall
pop
jmp
std
sub
add
lea
out
mov
out
sub
cmp
lds
dec
fst
sarl
jmp
pop
cmpsl
movsb
test
add
adc
sub
movsl
mov
mov
nop
inc
daa
xchg
push
aam
scas
aad
xchg
sbb
jp
enter
pushf
ljmp
and
mov
mov
stos
ror
in
mull
stos
addb
stos
jbe
mov
stos
push
sub
xchg
push
sub
push
fsubs
xchg
cld
jo
test
jns
psubsw
mov
icebp
ja
jmp
sub
decw
pusha
jo
arpl
int3
in
lods
popa
test
clc
jne
imul
push
aas
mov
cmpsl
xorb
mov
xor
stos
xchg
ret
inc
aad
mov
jge
movl
and
pop
or
xchg
pop
lods
jne
mov
cltd
popf
enter
mov
imul
out
jmp
mov
sbb
mov
fcomi
addr16
int
mov
fmuls
scas
ficompl
outsl
add
pushw
and
xchg
stc
fs
ds
sahf
sbb
cs
dec
sti
or
arpl
mov
inc
gs
dec
loopne
mov
add
mov
mov
sets
cmp
jnp
stos
fs
mov
inc
cmp
dec
xchg
stos
pop
clc
popf
mov
je
lret
popa
jb
add
rclb
aad
dec
stc
add
cmc
and
mov
popf
or
arpl
mov
rorl
stos
lods
ret
mov
inc
int
add
data16
jmp
frstor
fidivrl
lods
xor
jmp
faddp
clc
mov
pop
xchg
pop
in
add
dec
dec
cs
shl
scas
xor
jl
in
stos
xchg
mov
sub
lea
mov
stos
push
push
loop
add
xchg
out
fucomip
adc
mov
ss
sub
ljmp
lret
stos
pop
lock
mov
daa
mov
cmpsl
mov
cltd
pop
aaa
imul
add
pop
gs
push
mov
repnz
test
cmp
mov
movsl
insb
jecxz
stos
cli
jne
faddl
mov
jge
ljmp
jns
imul
lock
fsubrl
pop
cs
cmp
stos
push
in
xor
push
jmp
push
mov
aad
jp
push
xlat
adc
add
stos
pop
test
xchg
dec
mov
push
adc
mov
mov
dec
cmpsb
into
arpl
stos
lret
es
xlat
push
cld
stos
sbb
mov
sbb
inc
mov
or
in
or
out
es
shll
xor
aad
stos
adc
lock
aas
cmpsb
pop
addr16
fwait
cmc
mov
inc
pop
stos
fimuls
gs
xor
mov
movsb
mov
xchg
cmpsb
sbb
or
clc
jmp
stos
pop
inc
xchg
in
movsb
pop
lcall
adc
stos
mov
fdivrs
lahf
mov
and
dec
and
lds
fstps
xor
imul
aas
add
data16
or
xchg
adc
and
cmp
dec
bound
test
stos
ret
push
outsb
divb
mov
mov
ret
adc
repz
sbb
xor
pop
jmp
rcrb
mov
cmpsl
fdivrl
cwtl
dec
stos
popf
pop
sbb
lock
ljmp
insl
cli
cmpsb
xor
xchg
imul
xor
sub
mov
xlat
push
sahf
addr16
mov
push
mov
adc
stos
addl
xlat
mov
fiadds
add
mov
cmp
push
gs
jne
and
sar
sbb
push
adc
insb
mov
push
iret
add
sub
cld
stos
stc
cmpsb
or
movsl
push
lock
push
daa
mov
jmp
mov
cwtl
dec
mov
fdivl
cmp
stos
add
xchg
pusha
push
jmp
jle
pop
xchg
dec
xor
nop
mov
fwait
mov
and
mov
push
out
movsb
stos
cld
imul
test
shlb
mov
stos
insl
and
push
ds
sbbl
stos
rorb
pop
cltd
les
inc
hlt
xor
ds
jo
push
sub
stos
pop
sub
jecxz
xlat
inc
stos
mov
mov
stos
dec
lcall
daa
stos
and
int3
or
punpcklbw
movsb
xor
cmpb
mov
loopne
inc
mov
out
stos
imul
jmp
xlat
mov
dec
lds
popa
aam
mov
sub
sbb
arpl
inc
pop
xlat
imul
data16
ljmp
jb
mov
stos
mov
cmp
push
imul
rcr
test
mov
xchg
js
mov
dec
and
loop
push
and
outsl
adc
mov
push
or
cltd
stos
hlt
sub
leave
stos
mov
xor
stos
ret
or
jb
into
outsl
addr16
scas
stc
imul
push
int
jnp
movsl
sub
sbb
inc
mov
and
insl
dec
nop
aas
mov
jmp
inc
test
xchg
jp
lret
shrl
popa
stos
xchg
nop
imul
push
cmc
xchg
jb
push
roll
xchg
mov
stos
mov
inc
cwtl
lods
mov
stos
dec
das
mov
mov
daa
push
cli
xor
pop
insl
stos
scas
rcrl
icebp
int3
ret
push
and
xor
in
mov
push
stos
repnz
faddl
or
pop
cmp
cmp
mov
or
push
push
scas
mov
pop
add
adc
and
imul
push
jg
ja
js
movsl
stos
rol
lret
and
jmp
stos
ficoml
mulb
shl
cmp
inc
add
dec
xchg
xor
jl
xor
fisttpl
fwait
insb
cmp
dec
sarb
push
push
sub
in
xlat
cmp
int3
lcall
je
dec
inc
push
jecxz
inc
mov
lret
pop
int
scas
popa
imul
stos
inc
sahf
push
lret
outsl
movsl
lods
loopne
cmp
and
or
enter
sbb
mov
push
lahf
add
and
loope
dec
frstor
div
stos
int
inc
cld
or
popa
stos
mov
lret
shrb
outsl
stos
pushf
inc
arpl
test
aaa
mov
jge
insl
inc
add
or
xchg
xchg
cmp
clts
mov
icebp
fisubrl
xlat
repz
out
mov
mov
in
pop
lds
sti
je
push
cmp
int3
mov
pop
sbb
js
shl
les
pop
fsubrs
cli
shl
jae
pushf
mov
xchg
shll
inc
cmp
xchg
nop
and
mov
fildll
gs
shl
adc
stos
xor
loopne
subb
mov
jl
pop
daa
jle
fisttps
xchg
stos
hlt
jmp
fnstenv
xor
nop
in
adc
sub
xor
stos
mov
fmul
shrl
lret
subl
daa
mov
aas
cltd
loop
sbb
cltd
xlat
popf
stos
repnz
out
lret
jae
stos
cmp
jle
xor
hlt
push
mov
pop
sub
lock
daa
add
shrl
mov
jne
inc
push
imul
arpl
stos
lds
dec
and
gs
xor
ljmp
out
add
lcall
push
pop
jb
je
stos
inc
lods
pop
mov
stos
inc
std
mov
adc
stos
add
xchg
or
pop
test
ficoml
ljmp
add
xchg
jg
add
sbb
mov
mov
test
jl
push
cli
push
lea
jle
lret
add
stos
gs
loope
sahf
mov
stos
iret
push
ljmp
les
out
stos
mov
xor
sahf
test
test
fisubl
movsl
jb
outsb
jge
pusha
xchg
loope
ljmp
adc
into
out
inc
pop
outsb
cli
int3
ss
fwait
icebp
fwait
fs
inc
ret
jge
sti
mov
popa
faddl
cmp
mov
cmpsl
dec
fwait
test
jmp
push
jmp
lahf
fstpt
mov
stos
ficoms
and
or
cld
jnp
stos
mov
ss
cmc
jo
pop
mov
or
ds
pop
imul
dec
int3
xchg
icebp
inc
scas
mov
or
stos
sub
stos
sbb
inc
enter
es
das
mov
cmp
stos
fwait
es
pop
add
pop
cmp
ret
movsb
movsb
adc
subl
notb
add
dec
cld
add
imul
mov
adc
subl
mov
cmp
mov
xor
xor
mov
clc
in
dec
mov
test
push
stos
das
adc
stos
test
cmp
or
xchg
stos
xchg
push
mov
cmp
sbb
mov
leave
lods
jecxz
movsl
scas
lods
jno
inc
stos
pop
mov
push
and
dec
pushl
cmp
mov
outsl
shrb
jbe
adc
xchg
outsb
cmpsl
movsb
xor
stos
rcll
ret
xchg
in
add
mov
jbe
stos
test
sub
xchg
add
jnp
ret
mov
and
mov
mov
inc
sub
out
stos
call
fcoms
add
dec
add
movsl
mov
mov
or
xchg
fwait
inc
dec
push
or
mov
into
subl
push
cltd
cmp
cmp
xchg
nop
stos
jo
imul
stos
lret
and
lds
jecxz
mov
subl
push
stos
testl
sub
cmpl
ljmp
hlt
test
sbb
and
cwtl
fptan
pop
aad
xchg
repz
lods
lock
pop
inc
xor
adc
sub
jle
cmpsb
mov
movsb
pop
filds
imul
outsl
je
nop
pop
and
and
mov
or
cltd
daa
in
movsb
addb
imul
jae
sub
push
push
stos
cmp
movsl
js
stos
dec
xchg
mov
stos
push
mov
jg
pop
scas
push
mov
nop
adc
shrl
stos
jb
scas
add
mov
lret
inc
cmp
mov
insl
pop
subl
out
stos
leavew
jbe
rcll
sbb
sbb
push
leave
add
xchg
push
arpl
imull
stos
test
mov
insb
mov
lcall
cmp
sar
jp
sub
test
and
mov
push
insb
cmpl
push
enter
adc
or
lods
mov
in
ljmp
stos
call
dec
mov
stos
fwait
mov
mov
ret
or
pop
push
daa
fildll
divl
imul
mov
aam
cld
pop
int3
out
das
imul
adc
lahf
inc
xor
fcoms
add
lahf
imul
jecxz
sahf
test
cmp
lahf
aas
repz
stos
xchg
and
cwtl
jne
sbb
jns
mov
sub
ret
pop
cmp
and
jno
push
mov
mov
aaa
jnp
stc
outsb
sbb
hlt
imul
jae
fisubrs
mov
and
stos
enter
int3
lea
fildll
das
imul
add
fldl
jns
loop
xchg
or
lock
push
or
add
test
mov
repnz
mov
dec
push
ss
je
adc
mov
shl
push
sub
out
fisubrl
push
jp
ja
data16
dec
rcrb
or
in
gs
mov
stos
sub
jmp
test
divl
sbb
cli
jnp
insb
sub
fadds
mov
hlt
stos
mov
adc
stos
jl
daa
xor
sub
je
xorl
xorb
push
lods
push
inc
jns
lods
sarb
inc
into
imul
mov
ret
add
sbb
jae
push
inc
std
arpl
and
rcll
jno
test
xchg
cmp
movsl
imul
ljmp
mov
outsl
aas
daa
adc
pop
dec
insl
arpl
pop
mov
stos
xchg
shrb
loop
mov
cmp
jmp
jb
sub
in
call
and
lds
idivb
pop
and
aam
in
lahf
pusha
xchg
inc
cmp
xchg
mov
out
stc
pushf
xchg
inc
pop
loopne
out
lcall
popf
cmpsb
std
adc
dec
test
dec
stos
mov
cmp
lods
stos
lcall
iret
mov
mov
divl
or
add
mov
push
and
inc
jnp
or
push
in
lahf
xor
jo
in
not
movsb
dec
stos
fwait
lods
filds
jmp
xlat
pop
shl
add
xchg
cmovl
stos
repz
jl
push
cmp
loope
xchg
add
mov
in
xchg
adc
add
mov
cmpsl
xor
pop
es
dec
jae
stos
dec
loopne
shll
sbb
stos
push
xchg
or
sub
stos
or
popf
cmc
add
sbb
subl
push
stos
cmp
arpl
stos
sbb
fdivrs
leave
cmp
and
stos
imul
loope
bnd
mov
cmc
sti
or
push
mov
imul
mov
loope
mov
loop
mov
xchg
cld
xchg
sti
stos
push
inc
test
lock
pop
mov
sub
inc
or
stos
aam
mov
repz
push
stos
add
bound
stos
imul
jp
data16
pop
stos
mov
in
pop
movzbl
add
cmp
adc
dec
cmpsl
js
jl
sbb
adc
add
inc
mov
hlt
mov
push
sti
lods
fwait
sub
ret
dec
in
stos
fwait
cmp
cmp
pusha
sub
pop
cmp
and
push
mov
stos
adc
inc
ds
ucomiss
dec
xchg
cmp
jno
shlb
lret
pop
sbb
cmp
adc
shl
mov
or
push
or
stos
addl
in
cmp
xlat
sub
jne
stos
jb
xchg
cld
cmp
je
push
sbb
jge
mov
mov
inc
shrl
daa
test
fbld
ret
xor
lret
sub
cmp
mov
jecxz
lds
adc
xlat
and
add
cld
imul
fwait
mov
dec
inc
stos
pusha
inc
int
movsb
inc
mov
mov
adc
insl
push
mov
mov
shll
int3
xchg
cmp
xchg
cmpsb
mov
stos
ja
add
imul
sbb
mov
push
out
dec
int
rorb
aad
or
outsl
jmp
in
jae
push
cs
sub
push
test
push
test
xor
repz
pop
push
daa
lahf
mov
adc
xor
pop
in
stos
mov
inc
xchg
jg
xchg
push
mov
cmp
jp
mov
es
mov
pop
inc
pop
and
stos
lret
jae
ret
jmp
loopne
sbb
push
xchg
inc
pop
scas
stos
xor
fst
or
sub
fwait
lea
and
mov
pop
sbb
pop
jne
dec
mov
add
sar
adc
ficomps
adc
stos
xlat
int
add
cmp
clc
or
sbb
jge
inc
dec
test
stos
pop
inc
mov
and
daa
popa
out
into
or
test
inc
jg
std
in
stos
sbb
jb
mov
mov
out
test
and
repz
jp
rorl
loop
loope
in
fsubrs
jg
sbbb
push
or
adc
stos
dec
stos
and
shl
repnz
xor
pop
xchg
nop
mov
test
mov
and
or
jae
mov
mov
sbb
stos
aam
or
mov
or
sub
fs
stos
lret
xor
adc
add
ja
ljmp
adc
mov
xchg
dec
imul
lock
mov
push
lret
xchg
mov
testb
imul
jmp
mov
jmp
push
push
jne
popa
test
ja
femms
imulb
int3
jb
xlat
loope
ret
xchg
stos
mov
fdivrs
scas
mov
pcmpgtb
stos
push
inc
and
arpl
lea
mov
xchg
jae
sbb
cmc
imul
jecxz
nop
push
psubsw
stos
sbb
lcall
sub
jno
sti
push
scas
std
xchg
popf
xchg
ja
mov
pop
inc
mov
cwtl
out
stos
push
xor
stos
mov
add
cmc
push
mov
jmp
xchg
into
add
sub
push
sbb
lret
lcall
rcl
movsb
mov
push
xor
and
pop
in
fwait
mov
movsb
sbb
in
fnstcw
pop
lret
stos
stos
mov
inc
loopne
ljmp
adc
or
inc
mov
scas
xchg
pop
xlat
stos
fsubl
jbe
movsl
cmp
stos
or
lcall
and
dec
sbb
xchg
push
push
fwait
popa
mov
pusha
out
subl
push
ja
negl
cltd
jge
cmpsl
stos
mov
or
stos
shrl
or
sub
or
sub
enter
out
ror
pusha
stos
lahf
or
out
mov
push
dec
xchg
enter
insl
addr16
cmp
pop
in
dec
push
mov
fwait
add
arpl
dec
pop
push
pushf
call
in
add
xchg
data16
push
mov
xorb
adc
mov
insl
aam
shl
push
sub
pushf
dec
rclb
cs
sub
fsubrl
dec
test
sbb
mov
movsb
test
inc
shlb
adc
stos
push
pop
push
fs
stos
cmc
xor
ds
add
lret
in
add
rcr
stos
cltd
and
or
jmp
cmpsl
cmp
out
arpl
lret
jge
call
test
fwait
add
fmul
mov
jnp
test
clc
icebp
imul
scas
xor
ljmp
xchg
xchg
rclb
or
cmc
js
mov
rorb
stos
pop
out
xor
mov
add
mov
and
sbb
xor
arpl
mov
sbb
adc
add
adc
popf
ret
or
daa
push
out
pusha
lds
shrb
scas
stos
negl
and
popa
iret
lret
sub
xchg
adc
and
lret
sbb
stos
pushf
pop
mov
test
sub
sub
imul
mov
dec
into
bts
ljmp
or
idiv
fwait
mov
inc
lods
insb
sbb
adc
jae
add
mov
pop
sahf
push
or
subb
push
mov
xor
add
jmp
sbb
loop
xchg
or
jns
push
adc
les
and
cmp
stos
js
jmp
lods
stos
mov
push
hlt
xchg
sub
stos
sbb
xchg
sbb
mov
jmp
push
mov
test
jl
cmpb
ficoml
scas
outsl
cmpsb
dec
mov
sub
and
xchg
sahf
mov
fwait
ret
or
fimull
push
sub
jno
mov
push
in
push
in
pop
sub
dec
and
inc
mov
stos
icebp
loop
arpl
stos
or
popa
xchg
adc
add
leave
dec
stos
movsl
cs
xchg
mov
mov
cmp
outsl
push
xchg
movsb
jns
lret
movsb
jp
ret
mov
decb
jno
adc
or
push
pop
int
push
shl
jge
push
xor
fldcw
mov
dec
fsts
xchg
stos
xorl
add
mov
mov
lcall
test
fisubrl
or
lds
lods
loop
jae
stos
js
mov
add
stos
mov
out
divl
pop
cmpsb
cwtl
fisubs
or
ss
pop
push
xchg
jbe
xor
mov
aam
stos
loopne
jle
dec
stos
imul
aas
into
stos
imull
movsl
out
mov
fiadds
adc
lods
movsb
lret
movsb
pop
mov
rolb
outsb
xchg
sub
loopne
popf
js
xchg
or
shrl
sbb
xchg
add
cld
fsubrs
mov
xchg
ljmp
fwait
inc
loop
mov
fs
push
sbb
scas
in
xor
mov
push
or
pop
test
push
xor
idiv
mov
jns
xchg
jbe
cwtl
subb
dec
icebp
les
sbb
leave
pop
push
daa
js
dec
inc
mov
in
imulb
into
mov
gs
mov
loop
xchg
sbb
ja
js
mov
icebp
adc
stos
pop
adc
mov
shll
fildl
ja
loope
lods
sbb
inc
mov
std
outsb
add
aaa
xor
mov
lods
mov
adc
stos
hlt
mov
inc
xor
jp
push
mov
sbb
ret
int3
nop
xchg
into
cli
and
cltd
mov
jns
sbb
scas
lret
out
mov
adc
cwtl
push
push
dec
pop
int
sub
adcb
int3
lret
stos
or
lcall
stc
loope
fcoms
push
xor
repz
xchg
add
bound
daa
jbe
xor
mov
inc
int
stos
dec
and
outsb
pop
test
in
mov
fwait
gs
mov
insb
cltd
add
jnp
notb
mov
stos
push
cmp
mov
dec
mov
popf
cmpsb
clc
or
icebp
push
xchg
push
mov
outsb
out
test
push
dec
jmp
sbb
and
enter
je
repz
sub
imul
inc
sub
shll
icebp
stos
jae
int
sahf
adc
std
stos
dec
rclb
sbb
stos
in
xchg
addr16
idivl
aad
or
daa
stos
add
cs
stos
cmp
mov
dec
outsb
decl
fsubr
push
stos
jle
fidivrs
dec
mov
dec
cmp
rcrl
aaa
cli
and
subb
push
fildll
sub
or
in
daa
nop
cmp
cmp
out
mov
add
nop
push
stos
push
bound
cmp
mov
test
xchg
mov
fiadds
aam
fldl
inc
push
xchg
lcall
rcrl
push
and
clc
adc
inc
bound
lahf
adc
lret
jb
insl
popa
in
js
inc
xor
mov
push
stos
pop
repz
insl
ret
mov
push
lods
out
test
aaa
popf
in
clc
fdivrl
sbb
dec
pop
xlat
sbb
cwtl
arpl
sub
mov
or
cmp
pop
stos
pop
pop
xchg
sbb
mov
imull
inc
add
sub
fbld
sub
out
sub
fwait
in
stos
shlb
lcall
lea
subl
jmp
add
dec
and
stos
cltd
idivb
adc
sbb
scas
pop
dec
arpl
iret
jae
inc
pop
push
adc
jne
push
xchg
sbb
mov
or
add
lahf
inc
dec
das
stos
mov
add
or
inc
mov
fdivl
out
dec
frndint
dec
stos
pop
jb
xchg
mov
lods
scas
ja
xor
mov
sahf
movsl
xor
jns
xchg
ror
xor
add
and
and
shl
sub
jp
addl
shll
scas
test
mov
add
or
addr16
leave
push
mov
pop
fcomi
into
push
push
stos
in
orl
daa
les
push
dec
jno
data16
jg
stos
add
stos
lahf
in
mov
push
add
mov
xchg
insl
stos
push
xor
movb
pushf
dec
repnz
pop
fidivs
std
lds
imul
in
sub
mov
adc
inc
stos
dec
cmp
fstl
ss
imul
aam
push
sbb
fcmovne
stc
or
fwait
js
stos
pusha
and
adc
xchg
push
inc
pop
cld
stos
sahf
inc
dec
dec
mov
mov
push
sub
stos
mov
stos
mov
repnz
fldl
out
mov
xchg
movsb
jbe
das
pop
mov
imul
stos
and
jns
aam
loope
sahf
arpl
xchg
inc
jmp
gs
xchg
lods
es
mov
aaa
mov
push
arpl
ret
xor
fmull
in
lret
movsb
mov
popf
imul
das
push
test
test
mov
sbb
stos
test
inc
sub
repnz
pop
jb
cmpsl
adc
jmp
data16
xchg
dec
lea
fcompl
sub
icebp
or
nop
stos
push
iret
adc
xlat
stos
pusha
popf
dec
bound
iret
sub
cs
sbb
loop
mov
jne
loope
xchg
mov
mov
xlat
pop
add
pop
je
fs
loope
cmp
rorl
cmp
push
xor
stos
dec
or
sub
pop
xchg
jge
xlat
xor
in
cmpsl
subl
test
imul
incb
push
xchg
stos
into
imul
mov
daa
xchg
stos
test
int3
ret
les
push
stos
lods
cld
sbb
ss
mov
loopne
cwtl
sub
sbb
mov
jns
jge
jae
nop
scas
xor
jmp
js
xor
mov
xchg
or
outsl
push
sub
mov
std
dec
mov
clc
and
jb
push
or
cld
mov
jl
stos
jge
adc
sbb
and
out
mov
pushf
movsl
fcomps
stos
pop
arpl
cwtl
stos
mov
ret
aad
mov
stos
mov
lock
imul
pop
dec
xchg
adc
lret
inc
ficoml
andb
stos
and
mov
sbb
pop
stos
cmp
aam
addr16
lahf
xlat
cltd
jg
mov
fnstcw
mov
mov
cmp
pop
in
lods
stos
loope
aam
jae
es
xchg
fwait
aas
or
sub
test
dec
test
xchg
inc
jns
shll
cmp
stos
xor
push
fsubrl
mov
mov
mov
fistpl
jne
adcl
xchg
mov
ljmp
lods
and
stos
call
mov
cs
sbb
data16
sbb
push
stos
jne
add
fcomi
push
stos
into
cwtl
lods
shll
stos
sbb
out
xchg
fisttps
adc
push
ja
xchg
sbb
fisubrs
les
mov
imul
pop
xchg
dec
lods
mov
cmpb
ja
mov
je
sbb
test
xor
pop
stos
into
xor
ja
cmp
xchg
je
arpl
pop
add
pop
nop
stos
lods
add
cltd
and
or
fwait
cmp
cmp
aas
pop
stos
mov
push
push
xchg
stos
mov
ficoms
dec
push
mov
out
mov
xor
subb
pop
push
testl
add
dec
xchg
mov
mov
inc
sub
stos
dec
cmpsb
xchg
out
call
stos
add
dec
push
shlb
mov
cmc
xchg
nop
sbb
gs
cmp
push
lods
or
out
mov
mov
adc
xchg
lahf
lods
and
fisttpll
mov
jg
imul
mov
leave
data16
xchg
cmpsl
inc
call
dec
mov
outsl
push
dec
stos
mov
sbb
mov
push
dec
out
xchg
enter
addb
sub
push
hlt
stos
int
adc
mov
mov
mov
mov
stos
jmp
cmp
std
xchg
aam
test
scas
adc
nop
jp
addr16
in
aaa
jmp
xor
fbstp
pop
pushf
cmpsl
pop
adc
or
stos
and
enter
add
inc
lods
xchg
std
insl
jne
and
nop
stos
mov
lahf
ljmp
cltd
xor
out
int3
push
mov
jl
test
xor
and
jmp
imul
sub
stos
xchg
dec
add
in
mov
mov
push
stos
push
pop
ficompl
popf
push
imul
adc
aad
lret
rcl
out
sahf
xchg
jns
jmp
orl
inc
aad
jns
adc
test
in
outsl
mov
loop
stos
stc
jmp
pop
sti
xchg
lahf
jae
lds
cmpsb
mov
stos
rcll
adc
jnp
jbe
xor
mov
fiaddl
aas
stos
add
loopne
scas
sub
push
repnz
jnp
aas
mov
sbb
cmp
mov
push
sahf
mov
jmp
lret
adc
mov
jb
test
mov
stos
mov
adc
push
loope
repz
inc
ljmp
xchg
fwait
pop
push
orl
jecxz
sub
push
lods
sub
pushf
dec
fisttps
pusha
cltd
mov
movsb
lods
xor
cld
push
jae
je
inc
sbb
fs
imul
jmp
mov
ret
push
xor
sub
jo
mov
mov
push
stos
sub
movsl
mov
dec
imul
mov
push
jge
sub
sub
xchg
adc
mov
rclb
cld
push
inc
mov
clc
inc
mov
stos
add
cmp
push
ret
jmp
sub
mov
mov
mov
popf
mov
cmp
pusha
xor
adc
xchg
inc
jae
arpl
test
mov
pop
xchg
imul
movsl
adcl
pushf
xor
cmpsl
hlt
dec
jnp
push
insl
xchg
jmp
add
dec
jl
rclb
add
sbb
addr16
stos
loopne
notb
lods
bts
mov
outsb
jmp
sbb
inc
sub
mov
jae
fwait
cltd
das
movsl
cmp
mov
push
jmp
dec
jmp
mov
cmpsl
test
dec
shrl
mov
out
or
clc
call
and
jmp
subl
rcrb
mov
gs
aam
stos
mov
and
jecxz
in
stos
mov
pushf
cmp
cld
test
out
loop
shrb
inc
insb
add
bound
mov
int3
mov
fldpi
dec
aad
loopne
dec
mov
pusha
stos
mov
stos
std
mov
test
stos
xor
sub
add
movsb
pusha
idivb
xchg
enter
outsb
jno
cmp
leave
and
sbb
imul
loope
xchg
fsubr
insb
xchg
adc
ljmp
test
stos
mov
push
jb
ss
fsubrs
stc
mov
int3
jmp
sbb
inc
push
incl
rcr
insl
repnz
scas
xchg
icebp
shlb
je
out
or
or
stos
fstpt
sub
aad
dec
loope,pn
ss
dec
cmp
lahf
nop
inc
stos
pushf
jmp
inc
ret
and
out
stos
sar
ljmp
adc
inc
inc
pop
or
jp
out
das
inc
popa
mov
test
addr16
mov
inc
testl
mov
mov
ss
xchg
and
cld
in
mov
stos
mov
out
mov
fcompl
push
sub
lahf
outsl
stos
sbb
fisttpll
insl
in
jp
adc
iretw
jne
stos
rorl
sbb
inc
arpl
mov
test
std
cmp
stos
loope
popa
xor
sbb
mov
lret
add
aad
mov
and
sbb
lahf
fwait
xchg
je
push
into
out
neg
or
inc
mov
mov
sbb
aas
daa
stos
leave
adc
mov
sub
stos
sarl
cmp
imul
dec
dec
aaa
pop
stos
mov
inc
std
inc
stos
adc
fdivs
adc
cmpl
mov
xchg
fldcw
push
mov
stos
js
and
mov
jl
lods
adc
jne
stos
jbe
mov
inc
loope
pop
arpl
pop
mov
lcall
hlt
stos
stc
dec
push
xor
daa
les
jo
jae
scas
pop
stos
sbb
or
loop
lods
aad
mov
ljmp
pop
stos
push
ds
shrb
sarl
push
xchg
mov
xchg
mov
mov
rorl
popf
cmp
arpl
xchg
lcall
push
push
ret
popa
daa
pop
mov
test
loope
sub
mov
push
add
adc
push
lret
mov
stos
scas
mov
test
adc
stos
rorl
dec
sbb
jp
nop
stos
cmc
pop
mov
test
sub
jmp
inc
stos
pcmpeqw
nop
mov
leave
inc
stos
add
inc
mov
int
divl
mov
push
mov
inc
ret
insl
iret
stos
xor
in
jecxz
sub
mov
dec
test
sarb
mov
fadds
nop
mov
cld
or
test
orb
mov
mov
push
les
sub
testl
into
sbb
xchg
or
decl
mov
inc
adc
insb
and
loope
aas
dec
cmp
test
push
imul
loop
repnz
fidivrs
pminsw
jg
cmpsb
inc
xchg
arpl
push
cs
ret
jne
push
mov
mov
push
push
push
xor
dec
mov
out
add
mov
mov
les
stc
cmp
or
ret
scas
jns
mov
inc
push
adc
push
sbb
je
mov
add
fistpl
adc
mov
pusha
xor
pop
scas
xchg
stos
sahf
and
popa
inc
sub
jmp
pop
sbb
mov
xchg
sahf
mov
rcll
mov
mov
sbb
pusha
stos
enter
scas
out
jnp
stos
mov
ror
fisubl
loop
sub
stos
inc
and
scas
movsb
mov
sbb
jp
push
stos
xor
ja
or
stos
mov
push
xchg
arpl
push
iret
mov
imul
mov
pop
bnd
add
inc
or
nop
lods
mov
jmp
stos
pop
fnsave
lahf
out
jo
cmp
les
inc
mov
cmpsb
adc
les
es
fistpll
jae
cmp
add
inc
mov
sub
mov
mov
sub
nop
mov
adc
stos
dec
ja
cli
xor
iret
test
stos
sub
mov
lret
mov
aam
stos
int
or
lods
out
dec
mov
fs
repnz
dec
mov
cs
int3
stc
mov
sbb
xor
xor
aam
movsb
or
dec
lds
fisubrs
or
ss
push
xchg
inc
jmp
testl
scas
loope
cmp
cmp
insb
test
push
subl
stos
xor
lods
xchg
fsubrs
or
sbb
cmc
stos
mov
imul
pushf
mov
mov
push
repnz
iret
shll
stos
je
idivb
test
out
aad
fimuls
mov
movsb
lds
stc
repnz
stos
popa
stos
mov
stos
dec
mov
stc
bound
insl
cmp
push
sbb
sarl
sub
stos
mov
mov
movsl
stos
adc
fcmovbe
sbb
lods
movsb
and
push
jo
ficomps
push
cmc
add
adc
mov
and
sahf
xchg
in
inc
shlb
nop
popf
stos
jnp
insb
jne
mov
stos
loope
push
mov
cld
movsb
stos
adc
jp
in
or
dec
adc
sbb
sub
xchg
xor
imul
imul
xchg
aas
mov
addl
inc
dec
sub
dec
repz
jl
stc
popf
stos
ja
adc
mov
sub
xchg
mov
xchg
sub
inc
rcrb
mov
lods
and
stos
jp
pushf
test
adc
add
cmc
and
je
pop
sahf
stos
push
das
mov
fs
push
jmp
pusha
inc
pop
xorb
iret
cwtl
loope
lahf
add
push
mov
stos
mov
or
cmp
push
insl
stos
push
jbe
shll
mov
xor
pop
imul
push
out
mov
out
sbb
push
stos
pop
add
sub
in
pop
into
lret
xorl
stos
lcall
dec
stos
dec
popf
sbb
sbb
xchg
test
or
jmp
jecxz
xor
lret
cmp
stos
push
pop
mov
fmull
dec
jmp
mov
stos
lds
fcomps
data16
inc
xor
adc
sbb
and
mov
xchg
call
dec
in
pop
shlb
mov
imul
lea
mov
stos
pop
mov
or
stos
inc
shlb
inc
mov
mov
lods
or
fs
xchg
pushf
outsb
sahf
sarl
ljmp
mov
shll
mov
jmp
inc
stos
out
mov
inc
stos
dec
popa
and
pop
jmp
rcr
xor
repnz
push
aad
add
stos
push
xchg
pop
dec
ljmp
insb
cltd
mull
stos
repz
psubsb
push
jecxz
stos
cmp
xchg
arpl
sbb
call
enter
js
hlt
dec
or
int
movsl
inc
psrlw
nop
lock
out
aad
jl
and
lds
pop
pop
cltd
repnz
sbbb
mov
xchg
fucom
sub
call
mov
repnz
dec
cmpsl
stos
aaa
pop
orl
cli
lcall
stos
cltd
loope
shrb
je
and
mov
mov
mov
shlb
adc
jbe
mov
outsl
das
stos
out
and
fildll
xchg
push
imul
out
dec
inc
sbbl
fadd
stos
je
nop
stos
cltd
mov
jne
cld
cs
call
lret
push
fwait
js
into
stos
sub
fs
stos
jmp
iret
testb
loopw
pop
dec
int
stos
xor
gs
sbb
rcr
loopne
xchg
lods
stos
movsb
jns
xorl
dec
imul
mov
divb
push
cmpl
js
arpl
pop
sub
imul
push
clc
loop
xchg
stos
popf
sub
cltd
push
inc
sbb
adc
pushf
fdivr
mov
or
stos
addl
stos
mov
scas
je
xchg
cmp
mov
sbb
out
test
or
adc
push
xchg
orb
add
ret
insb
lret
push
stos
push
dec
xor
pop
or
addr16
mov
mov
popf
dec
xchg
aam
pop
sbb
xlat
pop
cmp
cmp
push
addr16
xor
jb
mov
mov
push
pop
pop
scas
push
cmp
add
cmpl
pop
imul
imul
test
jl
xchg
mov
xor
jle
out
xchg
imul
fildll
sub
call
icebp
ljmp
loop
mov
lods
stos
push
bnd
pop
mov
adc
js
dec
insl
stos
adc
pop
mov
sub
aas
and
repnz
mov
out
xchg
flds
rcr
jns
xchg
lods
sbb
stos
or
cld
sub
dec
mov
pop
dec
push
mov
jg
push
out
mov
lods
sahf
sub
ret
or
mov
lret
subl
stos
adc
sub
or
lods
push
mov
dec
lahf
adc
dec
lods
mov
aaa
hlt
addb
dec
pop
cmp
in
pop
push
and
aam
cs
adc
stos
xchg
out
mov
jl
jg
jne
xor
or
int
pop
in
jmp
sub
mov
or
mov
push
ds
dec
out
xchg
pop
imulb
ljmp
push
cld
ret
outsb
sub
lcall
out
scas
jne
ljmp
xor
nop
stos
fisubrl
ret
cmpsb
xchg
test
das
push
nop
cltd
shlb
lahf
mov
sbb
loopne
and
shlb
scas
pop
mov
push
loopne
pop
imulb
or
mov
pop
jl
cld
and
popa
adc
hlt
rcll
in
in
or
add
cmpsb
mov
iret
hlt
stos
fmul
xchg
jb
iret
dec
movsb
stos
add
mov
pop
pop
cmp
xchg
out
ret
mov
xchg
lret
orl
imul
stos
test
enter
fisubrl
ja
jae
mov
lahf
adc
pushf
or
xchg
pop
stos
pop
stc
test
fucom
push
call
jno
cltd
pusha
shrl
sbb
lds
pop
pop
enter
or
inc
adc
jnp
xchg
jp
gs
push
lods
push
fwait
add
sub
fucomip
jg
out
pusha
in
sbb
sbb
pop
jb
dec
sbb
stos
pop
add
pop
nop
push
mov
cltd
cmp
je
dec
sub
int3
xchg
sub
mov
ret
xchg
dec
loop
loopne
pusha
mov
adc
pop
dec
add
xchg
cmp
stos
outsl
movsl
inc
add
and
mov
push
cmpsl
movsl
xchg
push
int
inc
sbb
push
or
stos
lock
or
stos
xor
gs
mov
loope
inc
or
inc
xlat
push
les
sti
dec
subl
divb
push
cmp
ds
pop
mov
xchg
movsl
and
mov
data16
shl
pop
pop
daa
pushf
nop
aad
stos
es
sbb
stos
add
and
dec
cmp
jle
xor
ss
lahf
jne
cmpsl
stos
push
push
loope
inc
iret
mov
sbb
cmp
adc
cld
xchg
adc
xchg
add
cltd
mov
mov
divl
fwait
nop
stos
aas
add
popf
in
shr
pop
or
pop
push
movsb
xchg
push
mov
stos
sar
pushw
lods
stos
mov
leave
jbe
ficoml
movl
stos
daa
xchg
addb
lret
inc
mov
or
int3
ss
movsl
add
dec
into
jp
cmp
hlt
mov
test
add
push
xor
int3
lock
scas
dec
fs
stos
rolb
xor
mov
iret
push
testb
xorb
adc
inc
xchg
and
stos
fldcw
adc
sbb
lods
nop
data16
jne
bound
xor
je
mov
mov
jae
loop
sub
stc
aad
xchg
and
sub
lret
stos
sti
push
addb
jmp
dec
stos
jb
popa
les
mov
dec
jmp
or
sub
mov
mov
cmpsb
pop
jg
stos
cld
add
notb
stos
mov
or
jns
mov
sarl
stos
dec
sbb
inc
cmp
xchg
lods
stos
cmc
scas
lock
mulb
sti
mov
jg
stos
jae
ljmp
xor
mov
dec
rep
iret
lock
cltd
lcall
out
mov
sbb
mov
xchg
sbb
fisubrl
imul
sbb
push
dec
fcompl
outsl
bound
movsb
adc
or
adc
jp
mov
lods
imul
imull
add
mov
add
inc
imul
arpl
imul
lahf
cltd
lock
stos
inc
movsb
inc
out
nop
fucomip
jmp
ja
std
insb
js
mov
mov
dec
cmpsb
sub
stos
add
add
pusha
cld
stos
jns
rorl
icebp
cmp
mov
mov
stos
mov
pop
orb
ja
inc
shlb
adcb
cmp
lcall
mov
mov
scas
lea
stos
sbb
shll
jecxz
sub
xchg
mov
push
add
hlt
xchg
xor
cmp
stos
insb
scas
add
pop
stos
xchg
in
and
cmpsl
push
xchg
fists
or
shlb
pop
mov
sbbb
stos
sti
cmpl
pop
stos
add
mov
cmc
sub
pop
dec
inc
imul
imul
cmpsb
xchg
jbe
lcall
sbb
and
xchg
loop
dec
pop
xchg
mov
sub
les
imul
mov
stos
sahf
add
out
or
mov
scas
stos
mov
pop
outsl
dec
add
maxps
push
call
stos
lea
cmp
nop
jg
fiaddl
mov
imul
mov
add
mov
mov
jmp
xor
mov
arpl
clc
ljmp
mov
sar
imul
jo
pop
icebp
lahf
test
stos
outsl
ds
fs
jl
pop
addr16
fcmovnu
sub
jle
out
mov
mov
mov
stos
cmpxchg
enter
stos
cmp
fmuls
and
mov
sub
test
ret
inc
jbe
stos
nop
pop
out
loopne
inc
jmp
pop
jne
cltd
xchg
jge
imul
ror
and
stos
and
pop
adc
ja
ret
rorb
test
mov
cmp
adc
mov
push
outsl
cmc
je
mov
loop
nop
sub
add
jg
xchg
stos
mov
dec
mov
sbb
stos
aad
push
pop
adc
lret
and
pop
cld
add
stos
xchg
sub
mov
inc
daa
adc
js
test
jl
xor
aam
and
sbbl
and
dec
movsb
aad
decb
sbb
addr16
rcrl
jp
push
cmp
test
mov
fisubrl
cmpsb
fwait
loop
and
pop
imul
lahf
mov
jmp
out
shrl
xchg
stos
sub
push
inc
fstpl
mov
lods
fwait
int3
sub
cmp
cmp
addr16
xchg
jno
sbb
lret
lret
inc
mov
mov
sbb
mov
icebp
push
fwait
mov
cmp
cmp
sbb
arpl
xchg
fst
stos
idivl
stos
rol
sbb
mov
mulb
enter
mov
lods
subl
fwait
cmpsb
out
and
ljmp
jne
and
inc
mov
ror
stos
xor
jmp
fsub
push
stos
and
jno
sysret
pop
and
sbb
and
orb
stc
das
jmp
sub
clc
sahf
test
mov
mov
stos
insl
push
pop
sbb
hlt
insb
jnp
call
ficompl
sub
mov
imul
movsb
cmpsl
stos
add
adc
mov
stos
xchg
xor
push
xchg
test
dec
rorb
mov
outsb
jnp
hlt
push
sbb
sar
sub
or
fildl
mov
int3
stos
sbb
lcall
push
jmp
or
outsb
addl
dec
out
out
xchg
aam
and
and
repnz
cld
stos
pusha
scas
stos
adc
xchg
jbe
stos
push
call
in
stos
mov
mov
pop
stos
mov
inc
jge
stos
xorb
int
push
mov
subb
out
sub
dec
cltd
daa
cmp
cmp
mov
pop
stos
mov
xor
mov
aad
sbb
xor
inc
stos
push
cmp
stos
jbe
jmp
adc
fwait
stc
scas
stos
into
push
mov
or
push
jne
xor
dec
jmp
int
mov
dec
fnstcw
mov
dec
cmpb
mov
stos
jb
xor
mov
test
test
push
sbb
mov
fsubrl
push
scas
into
insl
mov
addb
jg
out
fwait
clc
jnp
pop
xchg
shrb
pop
jmp
xchg
daa
subb
mov
ds
cmpsb
ljmp
pop
cs
xchg
push
test
outsl
push
fs
dec
cld
scas
mov
or
dec
jp
add
mov
sub
jnp
mov
push
mov
push
ss
jbe
insl
lahf
mov
in
push
fs
sbb
stos
dec
jae
cmp
push
std
mov
push
mov
aam
popa
ja
ljmp
fcmovbe
sti
mov
push
lods
repz
mov
stos
iret
xchg
out
outsl
fs
stos
aaa
sub
mov
stos
sbb
pop
cwtl
jl
in
lods
insl
daa
push
dec
jmp
mov
outsl
jmp
pop
inc
lret
push
xchg
jmp
and
mov
call
stos
xchg
xor
dec
fldcw
add
rol
scas
aas
add
stos
cmp
cmp
cli
das
jp
dec
stos
gs
jbe
insb
stos
in
push
xchg
jg
lods
and
mov
in
dec
aam
stos
mov
or
daa
push
xor
popl
lahf
cmpsl
addr16
seta
pop
imul
outsb
fucomip
imul
xchg
sub
das
xor
repnz
ljmp
enter
mov
addr16
aas
stos
flds
add
inc
loope,pn
push
in
push
dec
mov
pop
xor
xchg
std
lea
mov
add
and
mov
aaa
xchg
dec
jmp
add
ja
mov
xchg
stos
inc
jecxz
pop
or
fs
mov
hlt
mov
stos
xchg
dec
rorl
push
lds
ljmp
imul
leave
stos
xchg
push
xor
sub
das
stos
pusha
es
jns
mov
stos
mov
inc
addr16
xor
pop
jae
add
push
pop
lret
cmp
push
mov
add
fwait
dec
shrb
nop
stos
iret
or
or
mov
insb
decb
mov
mov
xchg
je
loop
jne
sbb
sbb
pop
frstpm(287
mov
adc
imul
and
stos
test
sub
in
fdivl
out
push
xlat
or
jl
lods
mov
jns
cmpsl
cmp
jno
mov
mov
aaa
stos
ret
je
adc
arpl
fimull
lahf
cwtl
adc
in
enter
pmuludq
stos
jmp
add
scas
cmpsb
sub
jnp
fistl
add
jo
push
or
or
aaa
stos
lcall
lds
mov
inc
in
lods
daa
lahf
fstl
dec
stos
ret
pusha
jecxz
stos
sub
hlt
dec
inc
xor
and
xlat
loopne
loope
pop
jmp
cld
xchg
inc
sub
popa
push
int
xchg
jmp
add
lods
sbb
arpl
stos
loope
add
lods
sub
stos
into
sbb
stc
sub
pusha
dec
dec
loopne
fs
cmp
outsb
and
cmpb
and
sbb
inc
mov
dec
mov
aam
iret
xor
or
fwait
sbb
push
sbb
cld
pop
and
cmpsl
andl
stos
adc
fists
stos
adc
push
xchg
dec
in
stos
sub
out
and
jmp
xchg
jno
fwait
inc
test
dec
lods
mov
xor
out
aas
push
test
xchg
aad
out
fcoml
jb
dec
stos
stc
mov
stos
mov
jmp
adc
mov
in
stos
mov
cmp
sub
inc
mov
pop
dec
dec
jge
push
movsb
lods
shlb
in
inc
ret
nop
outsb
or
xchg
out
mov
xchg
in
jl
pop
scas
movsl
into
sub
cmp
nop
mov
in
jecxz
xchg
lods
arpl
lods
dec
fwait
ret
test
push
sub
sahf
jge
cltd
cs
stos
fwait
stos
gs
jp
push
stos
and
mov
dec
xchg
aas
push
jmp
stos
pop
aam
imul
in
rcrb
das
pop
sbb
xorb
mov
addr16
inc
in
mov
fimuls
daa
stos
mov
in
mov
loop
fwait
mov
pusha
stos
cmp
xor
adc
out
adc
loope
gs
inc
pop
stos
sbb
stos
mov
xchg
cmp
push
and
mov
xor
push
push
and
inc
int
movsl
jl
xor
jb
pop
outsl
std
stos
cli
xchg
xor
sbb
jne
or
and
cmp
inc
stos
inc
popf
jle
aas
mov
dec
daa
sbb
les
ljmp
stos
pop
aam
lret
jle
stos
jae
sbb
in
test
fwait
push
push
mov
add
mov
cs
stos
and
inc
xchg
and
lods
leave
stos
mov
fists
shrl
rcrl
jp
dec
xchg
stos
test
mov
lcall
mov
push
xchg
pop
rol
imul
xor
or
imul
stos
test
pusha
shlb
clc
lods
lret
pop
lahf
es
xchg
int3
stos
out
or
pop
jmp
mov
add
std
xchg
inc
shlb
jb
mov
stos
out
stc
lds
and
pop
stos
fmuls
fcompl
or
mov
out
xchg
fs
stos
ret
xchg
cmc
and
sbb
std
mov
outsl
ljmp
bound
cmpsl
sqrtps
fsubrp
mov
stos
inc
sub
xlat
sbb
sarb
stos
add
jl
ds
cmp
sbbb
pop
jle
mov
cli
shrl
andl
lret
add
addr16
sbb
shlb
stos
mov
outsl
or
jmp
add
push
xor
mov
mov
lret
stos
xchg
sahf
dec
push
and
mov
leave
imull
ret
jl
stos
rcl
out
mov
dec
jne
push
push
stos
pop
repnz
jmp
xor
xchg
add
fcomps
icebp
andb
popa
stos
push
lock
mov
call
lea
sub
sbb
fidivs
mov
ret
xchg
cmp
imul
xchg
lock
xchg
cmp
mov
dec
aaa
into
orl
xchg
test
pop
in
jmp
stos
add
pushf
js
pop
out
test
ucomiss
aaa
mov
arpl
test
or
ja
out
cmp
stos
mov
dec
ss
push
nop
push
pop
in
scas
mov
jle
xchg
fwait
jnp
stos
mov
sub
ljmp
adc
das
add
fsts
out
stos
and
lds
sbb
push
shrl
dec
sbbl
call
test
repz
ljmp
xchg
mov
leave
imul
shrl
pushf
cwtl
sub
adc
xchg
push
shlb
fwait
pop
inc
pop
xchg
mov
in
and
ljmp
pop
xchg
inc
idivb
pop
pop
mov
inc
and
arpl
cmp
sarl
stos
and
mov
cli
pop
mov
lea
jmp
insl
test
and
mov
sbb
mov
stos
lds
cmp
call
divl
std
lret
mov
jle
bound
mov
inc
dec
or
sub
insl
stos
stc
repz
xor
movsb
and
rolb
push
lcall
adcl
adc
adc
arpl
jmp
scas
fcompl
cmp
sub
add
lret
out
insl
shll
pop
mov
xchg
aaa
mov
stos
lahf
imul
sbb
jmp
outsb
mov
stos
cwtd
adc
push
std
xor
sbb
mov
adc
xchg
mov
data16
in
jl
xchg
cmpsb
stos
mov
xchg
sbb
test
lcall
xor
and
stos
and
lret
cs
in
mov
test
cmp
fwait
and
mov
lods
xchg
xchg
out
sub
xlat
shrl
scas
xchg
nop
mov
mov
and
sub
mov
movsb
out
cmp
shrl
push
mov
lahf
push
shl
std
testl
sub
repz
nop
push
pop
stos
sbb
stc
loopne
sbb
inc
in
xor
popa
stos
fisttps
aad
cmpsb
mov
stos
shll
cmpsl
fst
pop
push
mov
pusha
pop
lods
jns
lret
sbb
mov
stos
ret
es
repnz
ja
insl
stos
push
lret
xor
adc
push
out
movsb
mov
int3
outsl
cld
pop
stos
pop
shlb
pop
stos
jmp
xchg
inc
pop
mov
xchg
mov
adc
sbb
dec
adc
mov
sbb
mov
js
pop
inc
mov
xchg
mov
mov
add
arpl
push
pop
outsl
fsub
mov
les
push
jmp
in
and
adc
mov
stos
or
inc
xchg
and
js
test
mov
xor
mov
lea
test
or
std
ftst
call
and
inc
enter
xor
fsubrl
lahf
jmp
js
xchg
add
stos
and
sbb
cmpsl
stos
loope
and
mov
mov
js
stos
fsubr
jmp
add
sti
jo
jb
scas
ror
stos
aaa
adc
movl
stos
adc
mov
mov
mov
call
push
jge
cs
lret
push
sub
repz
jno
cmc
scas
sarb
daa
pop
sub
fsubrs
pop
cmp
fwait
sub
jne
mov
lret
ffreep
dec
or
xchg
mov
or
out
iret
push
stos
insl
adc
das
pop
inc
xchg
stos
jmp
loopne
cmp
mov
xchg
aas
aam
sbb
stc
cmpsb
stos
dec
push
mull
lret
lods
out
cld
stos
adc
stos
mov
bound
push
loopne
xchg
pop
push
repz
sbb
in
xchg
or
stos
rcll
push
inc
das
dec
daa
cs
inc
add
hlt
movsl
stos
mov
sarb
fimull
jno
aam
or
stos
xor
in
jne
pop
lds
push
loop
shll
test
aam
scas
lods
aas
daa
jge
in
sbb
jnp,pn
movsb
mov
outsb
pop
nop
dec
bound
xorl
or
mov
and
stc
leave
decl
and
pop
aam
adc
das
stos
test
rclb
jnp
pop
insl
outsb
aas
lahf
test
mov
lahf
scas
jbe
mov
mov
push
in
xchg
sbb
ja
push
jl
cmp
dec
mov
or
xchg
jae
xchg
push
stos
push
stos
in
cmp
add
add
add
bound
nop
adc
enter
jmp
jbe
ficoms
push
lods
inc
jp
stos
pop
or
lea
dec
repnz
push
dec
popa
lods
ss
stos
stos
aas
clc
jmp
icebp
int
stos
imul
aad
pop
test
insl
stc
mov
sti
add
loope
jo
call
cmp
dec
and
mov
lods
bnd
push
in
das
mov
out
inc
mov
addr16
sbb
and
dec
sarb
pop
sub
push
outsl
push
pop
int
testb
jnp
lods
xchg
fiadds
push
fwait
addr16
cmp
inc
jmp
pop
mov
jbe
cmpsl
sub
loope
mov
fcompl
repnz
insl
inc
add
or
xor
out
jl
jp
inc
jecxz
mov
push
pushf
mov
mov
rorl
ds
imul
sub
cltd
mov
rcl
sbb
es
inc
subl
lret
cs
clc
pop
mov
push
stos
popa
push
int
and
bound
addr16
push
pop
add
out
stos
test
mov
sub
sbb
insb
pushaw
fwait
stos
loope
adc
xor
xchg
aaa
stos
mov
sbb
and
sbb
mov
stos
pop
cwtl
xchg
flds
negb
jp
mov
jg
jmp
xor
add
je
gs
loop
or
lods
insl
popf
adc
mov
cli
into
pop
stos
mov
xchg
pop
mov
test
stos
inc
pop
into
andb
arpl
add
xchg
pusha
mov
dec
lret
imul
xchg
stos
cwtl
jae
loopne
lods
sbb
sbb
std
mov
push
movsl
jmp
add
sti
filds
mull
and
mov
push
adc
stos
and
ja
in
loopne
stos
pop
insl
jne
jmp
pop
je
inc
adc
xor
xor
stos
sbb
or
es
jbe
mov
mov
pushf
aaa
cwtl
push
sbb
dec
or
sub
stos
fildll
iret
cmp
push
cwtl
shl
and
mov
stos
xchg
mov
clc
testl
icebp
lahf
fldcw
jl
sbb
stos
and
clc
lcall
dec
sub
push
jmp
lock
mov
sub
or
push
add
xorb
adc
test
mov
pop
popf
loopne
cs
jmp
stos
xor
lret
ljmp
cld
ds
nop
inc
and
incb
pop
jno
push
movsb
add
fwait
mov
test
stos
sub
add
les
fists
mov
insb
cltd
and
mov
repz
pop
ret
mov
adc
push
stos
scas
xor
sbb
dec
pop
jmp
arpl
or
xchg
xchg
es
stos
movsb
out
lcall
mov
add
or
xor
pushf
popa
stos
jl
enter
mov
imul
cld
pop
mov
cmp
jp
shl
sub
loopne
idivl
stos
hlt
lret
adc
out
popf
cmp
out
push
push
call
mov
in
into
stos
pusha
pop
cmp
inc
mov
xchg
mov
popf
dec
rorl
in
addl
mov
cs
adc
cmp
and
inc
mov
stos
jnp
add
pushl
ds
adc
pop
mov
imul
mov
xlat
sbb
mov
cmp
jle
insb
mov
xchg
aad
sub
cltd
sbb
stos
add
mov
sub
stos
xchg
daa
jnp
jo
jge
jmp
jl
ja
in
mov
cmp
loopne
ror
stos
arpl
dec
lods
jno
jl
add
mov
xlat
xchg
loop
xchg
jne
push
ds
cmp
dec
std
ret
xchg
popl
sti
addr16
ficoml
push
mov
adc
push
cmc
sub
test
push
bswap
jo
stos
outsb
ret
xor
sub
xchg
xor
loop
push
adc
stos
lret
and
repz
push
in
lret
and
into
adc
out
fbstp
lret
sbb
stos
mov
cltd
or
stc
stos
mov
sub
adc
movsb
aam
je
lea
sub
xchg
rcr
jnp
sarb
mov
jmp
push
pop
inc
addr16
mov
jle
cmp
cltd
jl
stos
in
adc
cmp
mov
bound
negl
rcll
aaa
cld
and
pop
int3
test
xor
stos
in
es
or
js
out
cmp
lds
sbb
mov
push
lods
and
mov
pushf
stos
mov
inc
mov
adc
aaa
clc
and
mov
dec
xchg
lds
lods
xchg
add
stos
iret
dec
adc
stos
divb
mov
jmp
mov
out
add
push
in
cmp
lods
xchg
aad
jb
pop
fbld
jbe
daa
mov
dec
cmp
or
das
repz
adc
aaa
push
stos
xchg
xor
adcb
push
mov
stos
enter
fsubrs
popf
fisubrl
push
out
fcomi
into
shll
fcoms
jge
xlat
jae
cmpsb
xchg
imul
lea
xorl
cld
adc
jb
daa
jns
mov
int3
movsb
xchg
cmpsb
xchg
or
xchg
es
mov
nop
sbb
addr16
adc
adc
fwait
push
or
inc
xlat
jmp
dec
sbb
into
int
jae
inc
mov
ja
xchg
scas
subl
popf
dec
dec
cli
stos
dec
xchg
jno
add
dec
stos
cltd
addr16
jne
addr16
pop
pop
subl
jnp
aad
fmuls
ret
push
sti
popa
mov
mov
ret
or
stos
mov
shrl
mov
in
enter
xchg
mov
lahf
stos
mov
xor
out
outsb
lea
dec
popf
adc
outsl
pop
xor
stos
push
cmp
arpl
imulb
cwtl
jmp
mov
icebp
xchg
repz
jmp
cld
inc
mov
aaa
xchg
dec
push
stos
out
adc
out
push
sub
dec
cmp
sub
aas
insl
cmpsl
lahf
leave
in
clc
stos
mov
push
imul
jg
test
ret
pusha
inc
sub
xchg
jo
xor
sbb
daa
push
sub
mov
ljmp
sub
add
xor
sub
stos
repz
xchg
sub
mov
stos
jp
inc
std
mov
xor
jo
pop
sti
inc
inc
sbb
sbb
mov
lahf
adc
stos
mov
push
shl
imul
shl
gs
stos
pop
adc
add
lcall
cli
inc
out
stos
out
add
xchg
or
sbb
inc
push
jg
or
sub
xchg
bound
adcb
dec
lods
inc
xchg
push
pop
adc
xchg
xchg
sub
loopne
bound
out
addl
stos
leave
sahf
pop
cmpsb
xor
imul
fwait
mov
jae
sahf
pusha
adc
subb
mov
les
mov
cmp
orb
in
xchg
outsb
xchg
shrb
ret
or
ss
jns
mov
xorl
stos
mov
pop
lock
jae
aas
adc
xchg
cli
xchg
cmp
xchg
movsb
lcall
adc
mov
stos
or
push
mov
cmp
push
adc
xchg
jb
stos
popa
sbb
xor
stos
js
pop
mov
jmp
adc
xor
inc
xchg
outsb
and
fdivl
out
dec
sti
jnp
add
fists
push
add
cmc
inc
mov
stos
test
jmp
inc
push
push
dec
ja
push
sbb
xchg
fwait
jl
sub
sahf
mov
shrb
ja
stos
push
jae
jmp
enter
movsb
testb
dec
or
cmp
xchg
mov
addr16
mov
push
mov
fcmovnbe
pop
sbb
stos
sbb
push
cmpsl
pusha
imul
aam
inc
setno
jl
nop
jnp
ja,pn
mov
daa
lods
lds
popf
shl
movsb
sbb
mov
jge
mov
xchg
test
mov
mov
push
xor
arpl
push
push
fdivp
xchg
push
pop
orl
push
rcll
mov
stos
mov
shll
jle
lods
sub
fdiv
pop
lcall
les
repnz
lea
sub
jno
adc
sahf
stos
test
int
movsb
mov
mov
stos
mov
jno
clc
sub
scas
outsb
stos
in
cltd
ds
sti
imul
push
jl
in
hlt
sub
push
pop
and
in
out
repz
push
outsb
stos
aad
cs
mov
inc
cmp
mov
xor
cltd
ss
outsb
dec
push
aaa
lds
jmp
aas
ja
xorb
xchg
inc
mov
mov
mov
fisttps
aam
in
aas
in
stos
sbbb
stos
mov
push
jecxz
in
dec
pop
mov
addr16
inc
ficoms
test
cmp
stos
cmc
sub
mov
jmp
mov
fldcw
adcb
wrmsr
stos
sarl
fadd
push
pop
dec
stos
push
fs
xor
addl
add
ds
push
into
arpl
in
push
pop
pop
pop
dec
xchg
stos
mov
std
cmp
sbb
and
mov
or
stos
cli
xor
push
stos
xor
int
stos
aaa
inc
sub
mov
adc
push
stos
inc
mov
mov
cmp
cmp
inc
rcll
dec
popf
dec
movb
popf
cmp
fldenv
stos
dec
and
insl
std
stos
cmp
cwtl
pop
push
inc
jg
add
sbb
stos
fiadds
jnp
mov
stos
add
in
cmp
and
insb
mov
adc
pop
lcall
stos
cmpsb
bnd
fidivs
in
mov
lds
lods
in
xor
push
out
leave
sbb
daa
jnp
dec
xchg
mov
sahf
stos
xchg
sbb
aam
mov
stos
pop
or
push
push
stos
rep
sub
stos
in
iret
shrl
aad
pop
call
ljmp
jg
cld
pop
mov
mov
iret
stos
adc
dec
dec
stos
xor
and
mov
push
or
xor
mov
pop
mov
lods
es
loopne
push
sub
sbb
cmp
gs
fsubrs
sub
ret
and
mov
mov
rorb
sbb
push
decb
push
mov
pop
iret
sbb
scas
shrb
mov
pusha
jl
enter
mov
gs
ficoms
push
imul
mov
movsl
loopne
inc
movsb
push
or
xchg
sub
xorl
or
outsb
bound
pop
lods
jno
subb
mov
pop
stos
popa
inc
jmp
subb
sub
sbb
iret
add
out
jb
sbbb
or
inc
xchg
rorb
xchg
sbbb
stos
pop
jbe
cmpsl
test
mov
andl
mov
xor
adc
imul
hlt
xchg
shll
lahf
nop
dec
dec
fdivr
mov
shlb
inc
mov
testb
ffree
cwtl
dec
mov
dec
stos
in
insb
cmp
push
cmp
stos
in
fmull
fistl
pop
insb
push
push
ret
stc
cmp
pop
in
cs
push
fbld
cmpl
mov
jp
mov
mov
inc
aaa
adc
dec
call
adc
enter
in
daa
xor
stos
fmulp
or
scas
in
loop
cwtl
lods
and
mov
dec
mov
adc
pop
inc
mov
add
cmp
ret
xor
shrd
ljmp
mov
jmp
mov
add
sbb
outsb
test
outsl
lea
mov
jbe
adc
stos
popf
cmp
xor
mov
stos
gs
loop
rep
shll
push
pop
stos
sub
push
and
or
cmpl
shl
fcompl
stos
roll
cmp
imul
fdivrs
ret
dec
outsb
imull
or
cwtl
stos
nop
mov
lock
inc
pop
dec
lret
das
mov
loop
gs
sar
imul
xchg
push
add
shll
xchg
mov
xchg
or
test
lahf
lcall
adc
in
aad
stos
cld
cmpsb
int
loope
iret
call
imul
mov
and
ja
mov
dec
shl
sbb
sti
push
mov
imul
int
inc
shrb
cltd
es
daa
in
inc
imul
cmpsb
xor
movsb
and
fwait
mov
pop
sub
daa
adc
insl
mov
nop
add
in
int3
gs
mov
add
stos
pop
sahf
dec
cmp
mov
es
and
mov
xchg
pop
sub
dec
out
mov
mov
pop
std
sbb
das
mov
inc
pop
sub
les
stos
cmpsb
imulb
popa
lret
push
je
bound
or
dec
out
push
sbb
stos
mov
nop
stos
inc
mov
push
stos
add
sar
xchg
mov
dec
push
inc
mov
dec
es
call
loopne
or
jne
out
and
jmp
stc
out
in
pop
sub
cwtl
stos
shll
stos
mov
add
inc
xorl
sbb
test
mov
orl
in
xor
mov
cltd
aaa
mov
mov
lahf
cmp
fwait
cmp
cld
cld
loope
hlt
pop
inc
das
push
out
sbb
sbb
or
fisubrl
loope
scas
not
aam
xchg
dec
insb
adc
aas
andb
adc
fwait
sbb
stos
jae
xchg
cli
les
int
push
outsl
mov
sbb
sub
ds
dec
jmp
dec
loopne
popf
aaa
xchg
fdiv
mov
cmp
push
stos
ljmp
mov
into
rcrb
pop
adc
dec
xchg
adc
sbbb
stos
jl
inc
ss
es
stos
mov
arpl
idivl
or
mov
lock
andl
sbb
dec
mov
jmp
ret
leave
adc
jo
cwtl
mov
daa
daa
xchg
test
cmp
mov
mull
dec
jbe
lahf
stos
lret
loop
adc
scas
int
movsb
mov
js
bound
push
add
lea
xchg
and
nop
imul
iret
repnz
aaa
xor
cltd
scas
adc
rclb
jg
mov
loopne
mov
lea
mov
stos
addr16
push
sub
nop
adc
test
inc
cmp
jmp
iret
sbb
lds
repnz
and
inc
dec
sub
pusha
and
dec
int
loop
fildl
pinsrw
adc
ret
mov
push
cld
adc
imul
dec
popf
cld
inc
inc
lret
mov
stos
cmp
fdivs
mov
add
inc
inc
pop
or
jl
fucomp
mov
push
mov
inc
cwtl
mov
lret
cmp
mov
test
ds
and
rorl
jae
mov
sbb
test
std
int
pop
jmp
fmull
scas
cltd
cmp
les
sub
out
xchg
jge
mov
insb
stos
push
sub
jmp
stos
neg
mov
push
data16
stos
cltd
inc
clc
xchg
or
jge
cmpsb
rcll
sbb
sub
int3
daa
add
std
mov
pushf
mov
repz
bound
add
notl
pop
stos
mov
fisubl
mov
mov
or
mov
add
fdiv
push
rcrb
mov
dec
mov
jmp
adc
scas
xor
jl
cmpl
mov
sbb
addr16
jle
pop
aam
int3
mov
jg
loop
stos
in
lea
daa
es
cmp
mov
mov
iret
jae
push
fcmovbe
push
dec
cmp
fwait
andb
sbb
sbb
lock
in
add
mov
or
int3
imulb
pop
movsl
xchg
push
test
in
mov
in
jg
pop
push
sbb
add
dec
inc
into
repnz
and
int3
aas
jbe
std
cmp
pop
adc
stos
jns
pushf
dec
pop
scas
push
pop
push
xchg
xchg
dec
outsb
and
push
adc
ret
push
stos
fisttps
shll
cmp
outsb
and
mov
setae
mov
xor
jle
clc
test
pop
insb
pop
daa
stos
push
mov
adc
jbe
test
andb
incl
pop
dec
push
sbb
fwait
ret
pushf
adc
mov
jne
and
pop
daa
mov
and
mov
push
or
stos
mov
shrb
cmp
arpl
das
cld
ja
je
addr16
xchg
sarl
push
daa
add
inc
loop
pushf
mov
movsb
mov
jecxz
mov
add
leave
std
mov
test
in
and
orb
mov
stos
movsb
roll
neg
ret
ss
mov
hlt
call
fsubl
adc
dec
fildll
jne
leave
hlt
cmpsb
in
and
imul
push
cmp
xchg
xor
xchg
adc
pop
mov
mov
pop
sti
pop
sub
fs
adc
pop
data16
ret
push
add
jmp
inc
imull
xor
jmp
or
fisttps
lods
mov
scas
dec
xchg
cmp
stos
test
stc
sbb
lcall
fwait
sbb
push
lret
sub
sti
arpl
mov
leave
pop
dec
jbe
shrb
push
and
push
push
stos
jecxz
fstpl
fwait
les
mov
xchg
mov
push
sbb
mov
fidivl
jmp
outsb
adc
mov
cmp
sub
stos
cmc
pop
cld
mov
push
stos
dec
xchg
push
jle
in
mov
and
mov
stos
test
lods
adc
jmp
adc
mov
stos
shl
sbb
cld
pop
or
mov
adc
neg
jp
arpl
inc
sub
adc
add
or
xchg
lea
or
sub
sarl
jg
or
std
stos
shr
stos
push
ficoml
lret
insb
sarb
push
xchg
xchg
lods
rcr
jnp
loopne
ss
mov
clc
stos
scas
insb
mov
xchg
imul
out
or
addr16
shlb
pushf
adc
push
push
inc
jnp
leave
push
jle
jo
stos
jg
fbstp
pop
nop
mov
imull
xlat
pop
mov
adc
outsl
cld
add
xchg
mov
jecxz
aas
jg
daa
imul
adc
and
or
addr16
sub
aas
xor
fisubl
mov
ja
loopne
stos
mov
loope
les
loop
jbe
push
mov
ljmp
aas
lret
sbb
stos
xor
sub
gs
cmpsl
sbbl
lret
inc
add
mov
outsl
jge
jae
dec
scas
daa
stos
xchg
nop
mov
movsl
mov
mov
sbb
mov
test
dec
push
jge
mov
mov
stos
push
jl
jmp
cwtl
dec
sub
cmpsb
lcall
clc
inc
addr16
ret
stos
pop
es
or
gs
push
and
mov
xchg
dec
jmp
call
enter
cmc
stos
sub
ljmp
push
insb
out
lods
lret
xor
stos
xor
lods
adc
bound
and
fwait
popf
stos
mov
lahf
sub
stos
xor
ss
pusha
jbe
stos
inc
jno
add
adc
stos
into
jns
sbb
stos
inc
jmp
cltd
lods
mov
mov
call
sbb
mov
adc
adc
out
cmp
sub
andb
mov
mov
stos
lods
jecxz
pop
ds
incl
rol
mov
stos
enter
jnp
inc
outsl
stos
xor
cmp
adc
xor
pop
pop
and
fs
call
fwait
shl
jmp
pop
ret
das
ljmp
sbb
push
sbb
mov
push
jge
jno
xchg
jae
outsl
mov
pop
jno
lods
shrb
xchg
rcr
and
scas
fistpl
mov
js
cld
out
push
stos
pop
adc
aaa
int3
add
sub
push
mov
sub
imul
fcomi
mov
in
and
dec
add
sub
xorl
cmp
jnp
cmpsl
add
stos
cmpsb
add
or
adc
stos
ror
xor
cld
stos
pop
cmp
addr16
mov
ret
scas
pop
or
jl
insl
pop
and
add
imul
sub
movsb
mov
add
out
pushf
cmp
stos
cltd
repnz
shrl
adc
mov
inc
adc
sbb
lea
jg
mov
or
jns
adc
bnd
mov
rcrb
stos
bound
nop
pusha
scas
outsl
and
ret
cmp
mov
and
xor
and
jge
push
mov
and
jne
leave
stos
test
scas
add
push
stos
inc
mov
or
pusha
add
cld
pop
scas
or
call
loopew
scas
cmp
cmp
mov
adc
push
sbb
les
movsb
xlat
fldcw
shrl
and
xor
gs
sub
sahf
scas
fs
stos
mov
jb
mov
xchg
imul
lock
popf
lods
and
cmp
pop
fwait
push
insb
je
mov
jmp
or
imul
pop
mov
loope
jo
fdiv
fnstenv
push
sbb
fwait
loopne
sub
cmpsl
test
std
and
stos
test
insl
loope
fxch
push
movsb
cmc
dec
push
mov
leave
rcll
stos
jmp
insl
pop
mov
popa
sar
daa
jl
add
push
adc
mov
mov
mov
mov
lea
test
pop
sbb
ss
adc
pushf
aas
aaa
cwtl
aad
arpl
jo
add
stos
jbe
arpl
adc
aaa
or
push
adc
lds
mov
adc
xchg
jl
pop
sbb
lods
aaa
ljmp
insb
int
sub
cmpsb
mov
dec
stos
sti
arpl
sbbl
inc
stos
dec
jmp
jno
dec
test
ret
mov
pop
cmp
inc
pop
push
lahf
cmp
loopne
daa
insb
mov
mov
stos
xchg
fst
int
xlat
mov
sub
test
loop
mov
ret
jmp
pop
xchg
lret
sbb
mull
rcrl
test
mov
xchg
fnsave
stos
inc
mov
inc
aas
xchg
xchg
inc
popf
dec
gs
xor
divb
xchg
mov
stos
or
es
pop
mov
sub
call
loop
int3
lahf
orb
aas
mov
push
stos
sub
js
and
ds
mov
movsl
scas
xchg
and
or
icebp
pop
popa
stos
loope
mov
out
rcr
mov
xchg
and
jno
fisttpll
stos
cmpsl
add
sub
adc
jmp
fs
and
leave
daa
clc
mov
cmp
mov
arpl
aad
stos
cmp
ljmp
xchg
out
or
jp
push
xchg
xor
dec
fbld
jmp
xor
mov
divb
fisubrl
imul
lods
lret
lahf
fbstp
adc
jmp
push
divl
rol
push
stos
xchg
jb
jl
aas
sbb
push
fs
xchg
fnstcw
sub
cs
add
add
jnp
pop
xor
dec
insb
stos
and
inc
sti
stos
mov
add
xchg
stos
pop
xchg
add
jns
test
in
xor
test
push
out
out
lret
or
adc
lods
and
sub
push
leave
stos
push
data16
dec
xlat
push
jns
inc
inc
xchg
stos
sub
pusha
and
cmp
xchg
mov
fidivs
sub
stos
fisttpl
sub
add
mov
cmpl
rclb
stos
dec
pusha
or
jecxz
int3
popf
stos
gs
andb
stos
jmp
adc
push
stos
int
and
pop
std
mov
in
sbb
stos
pusha
les
shr
cli
xor
mov
and
stos
xor
mov
pop
adc
push
stos
fsubs
cmp
dec
mov
or
push
stos
dec
aas
pop
pop
shrl
in
test
push
mov
stos
mov
jmp
xchg
push
aaa
mov
xchg
lods
xor
xlat
lock
stos
xor
mov
repnz
mov
cwtl
jg
mov
sub
sbb
cmp
lods
jb
sbb
jecxz
push
mov
sub
leave
data16
imul
aam
or
sbb
mov
mov
lret
fwait
push
and
ja
sarb
mov
xchg
xlat
addr16
in
add
mov
stos
pop
cmpsb
jg
adc
xchg
and
jae
mov
pop
stos
testb
and
shrb
daa
xor
cmp
loope
push
mov
shrb
pushf
je
mov
mov
jae
add
stos
aad
scas
push
inc
push
push
outsb
stos
jle
rcll
int3
subl
mov
loope
jecxz
xchg
jae
or
pop
addr16
sbb
add
and
aam
rcll
mov
loopne
jmp
scas
jb
mov
ret
mov
lods
mov
imul
movsb
lods
stos
or
lea
xor
mov
mov
mov
stos
aad
and
lea
hlt
lret
and
imul
or
add
jns
stos
push
xor
dec
lods
ficoml
ds
jge
addb
sub
pop
pop
xor
nop
negl
jecxz
stos
ljmp
and
cmpsl
adc
outsb
sbbb
shlb
stos
sahf
inc
je
call
cwtl
and
stos
std
mov
mov
dec
arpl
mov
into
xchg
in
ds
fwait
push
jae
dec
jg
jmp
dec
andb
pusha
stos
add
mov
or
pop
sbb
test
mov
addr16
into
cmpsb
stos
out
ret
fdivrs
jo
dec
mov
add
and
add
lods
mov
sarb
mov
inc
in
stos
imul
push
push
sub
scas
xchg
or
lds
rorl
repnz
stos
xchg
inc
inc
add
lret
outsl
push
stos
rcrl
lds
inc
and
sub
cmp
or
xchg
dec
mov
pop
mov
push
adc
pushl
mov
fs
pop
imul
cmpsl
out
mov
xchg
scas
aas
jb
inc
adc
lods
adc
xchg
xor
or
test
fiadds
adc
clc
imul
stc
repz
stos
notl
adcb
stos
push
dec
dec
mov
pop
push
xor
jb
inc
add
mov
sbb
adc
insb
sbb
scas
clc
iret
test
je
repz
stos
pop
ret
inc
scas
stc
sub
xlat
adc
jmp
xor
ficomps
jge
mov
sub
jmp
lock
mov
mov
aaa
shrb
pushw
stos
inc
icebp
nop
ds
fistpll
cwtl
sti
xor
or
sub
fucom
or
stos
pushf
jmp
sahf
fs
lret
imul
xchg
mov
xchg
movsb
push
cmp
xchg
gs
ja
stos
roll
mov
adc
mov
push
test
jle
lods
cmp
push
popa
xchg
dec
stos
or
pop
jno
sbb
mov
and
and
adc
icebp
push
or
and
xchg
out
adc
mov
xchg
mov
outsb
mov
hlt
mov
adc
fisubrs
adc
xchg
cmp
cmp
sbb
cltd
scas
into
addr16
pop
mov
mov
dec
lahf
sbb
dec
stos
rol
scas
or
add
ds
jae
stos
push
out
jmp
push
imul
out
dec
xchg
gs
add
adc
into
ret
or
dec
xchg
shrb
js
xchg
stos
or
dec
mov
lds
xor
stos
sub
in
stos
sub
dec
adc
stos
aam
mov
and
test
movsb
jle
popf
int
stos
lods
inc
or
repnz
and
pop
ja
push
jg
sti
mov
int
xchg
add
push
dec
inc
and
outsb
gs
xchg
stos
and
arpl
xchg
iret
sbb
lcall
xchg
xor
xchg
mov
push
lds
sbb
jl
fistpl
rcr
stos
mov
nop
cltd
jg
xchg
sbb
stc
jp
jb
js
or
in
addr16
dec
mov
and
ljmp
movsl
xor
or
cmp
push
jb
fldt
push
stos
push
leave
adc
sbb
pushf
pop
insb
cmp
lock
cmp
stos
mov
mov
jmp
mov
stos
mov
into
sub
push
dec
dec
sbb
xorl
icebp
cmpsb
stos
dec
push
insb
adc
lret
stos
push
sub
orb
adc
stos
mov
pop
rorb
stos
jmp
test
add
mov
push
cli
aaa
repnz
dec
clc
sbb
testl
cmp
std
mov
xor
mov
gs
xlat
mov
test
ja
stos
adc
roll
bound
stos
inc
and
ljmp
add
fnstsw
fsts
icebp
pop
cltd
lahf
mov
jo
mov
jl
jno
xor
xchg
push
lds
pop
stos
sbb
jecxz
fisubrs
ljmp
add
lods
inc
pushf
stos
out
xor
cmpsb
pop
xchg
xchg
pop
stos
and
pop
adc
test
xor
sbb
inc
push
cs
cltd
stos
mov
and
add
bound
shrl
lret
xchg
mov
out
push
loope
stos
jbe
dec
mov
stos
xchg
sub
sbb
addr16
xchg
repnz
sub
fwait
pop
subb
cltd
cmp
jmp
dec
lock
stos
xchg
xchg
sti
mulb
incb
mov
rol
mov
or
jno
cmp
cmpsl
in
fldt
mov
push
push
imul
jecxz
dec
xor
insl
inc
push
adc
les
in
dec
stos
rcll
xor
pusha
jl
fldcw
fisttps
stos
call
mov
inc
pop
repnz
pop
sub
xchg
bts
push
mov
pop
push
cld
andb
mov
push
push
jmp
xchg
sbb
imul
cmp
sub
mov
adc
xchg
scas
rcrb
hlt
ss
fwait
test
push
inc
jns
dec
stos
xchg
iret
movsl
mull
mov
rcll
fwait
stos
mov
fmul
mov
adc
rcrb
lods
outsb
out
movsb
jns
arpl
mov
mov
mov
imul
xor
adc
mov
shrl
stos
pusha
lds
stos
jnp
pop
inc
fwait
pop
loop
stos
pop
adc
jp
movsb
xchg
xchg
stos
inc
xchg
loopne
and
stos
jb
mov
dec
pop
sarb
xchg
mov
add
call
imul
pop
insb
dec
lcall
mov
ja
sub
inc
lret
dec
jmp
inc
xlat
sub
xor
stos
and
jne
jbe
cwtl
stos
jecxz
pushf
clc
movsl
mov
shrb
addb
hlt
stos
mov
xchg
jge
and
outsl
dec
stos
dec
xchg
xchg
mov
lods
repz
dec
pop
movsb
stos
adc
stos
lds
pop
shrb
popf
sti
xlat
add
and
outsb
std
xor
stos
xchg
repnz
jnp
rcll
stos
mov
add
push
in
jmp
pop
fwait
sbb
aad
mov
lods
jns
popa
dec
xchg
inc
stos
scas
lahf
push
xor
cltd
jmp
aam
ret
ret
clc
or
mov
mov
xchg
in
add
mov
xchg
loopne
pop
mov
jb
xchg
sbb
bound
inc
loope
stos
in
into
push
lods
xchg
jmp
pop
mov
cltd
fwait
mov
mov
lcall
mov
mov
jl
jp
push
stos
sub
lret
mov
stos
and
in
inc
mov
push
jge
sbb
orl
jp
pop
lahf
sbb
mov
pop
imul
jo
lret
sub
test
stos
cmc
lret
inc
rorl
addr16
cwtl
fildll
mov
lds
aam
adc
fsubl
pop
sub
lds
addr16
je
jns
xchg
stos
dec
bound
pop
mov
mov
inc
xchg
bound
movsb
cmp
shl
adc
or
scas
dec
push
popf
mov
ljmp
stos
repnz
icebp
push
jle
loope
and
fcomps
cmp
stos
rorl
out
mov
mov
fmuls
fstpt
mov
jmp
stos
stos
xchg
out
stos
es
mov
sub
mov
test
cld
dec
jae
scas
fidivrs
repz
aaa
out
adc
adc
repnz
test
test
lret
stos
sbb
sub
ja
stos
add
daa
movsb
in
in
rcr
jecxz
ret
push
into
rcll
loopne
movsb
cmp
imul
add
mov
std
jae
inc
aaa
xor
cs
push
lcall
mov
shl
pop
inc
inc
cmp
stos
lcall
mov
push
pop
xchg
mov
dec
movsb
es
test
addl
xchg
sub
bound
das
sbb
stos
loop
int3
mov
enter
sub
aam
mov
xchg
int
js
mov
daa
adc
pop
stos
pop
and
or
mov
sub
inc
stos
in
clc
mov
movsl
pop
adcl
inc
cmp
stos
incl
pop
xor
jne
jmp
or
in
dec
sub
fildll
jge
frstor
pop
push
loop
push
mov
stos
mov
popa
stos
lock
fldenv
push
lods
xchg
stos
mov
les
lcall
or
pop
pop
sti
in
into
cld
stos
repz
rcrl
ds
xchg
xchg
lret
hlt
add
test
jl
cmpsb
push
cmc
sti
call
dec
aas
stos
xchg
aad
nopl
mov
lds
pop
adc
cmp
inc
cmp
pop
jecxz
and
fcmovnb
outsl
das
test
sub
es
int3
push
adc
shll
dec
stos
xchg
mov
and
lods
sub
push
stos
pop
inc
cli
loope
add
lea
aad
cmpsl
je
mov
or
daa
stos
idivl
jne
nop
stos
jge
sub
mov
imul
mov
mov
addr16
dec
mov
bound
ret
xchg
mov
shlb
jge
sbb
push
mull
lods
jb
mov
inc
pop
inc
icebp
push
stos
mov
mov
sub
in
pop
jl
inc
pop
icebp
imul
add
dec
mulb
and
les
stos
stos
jp
aad
in
push
test
out
fcmove
sbb
flds
mov
push
scas
and
dec
and
lods
add
push
xor
and
xchg
cmp
fwait
lahf
inc
lahf
ret
leave
jbe
mov
ss
imul
dec
scas
int
jns
jb
xchg
mov
stos
out
sbb
stos
sbb
mov
sbb
mov
xchg
stos
sub
into
push
shr
jge
imul
add
ror
push
mov
sti
xor
lock
in
fildl
jns
ss
scas
mov
add
out
cwtl
shll
test
add
lahf
sbb
outsb
inc
cmpsl
adc
out
cs
mov
push
addr16
add
stos
ret
repz
sbb
sahf
js
orl
mov
lret
imul
das
outsb
jnp
daa
mov
bound
push
push
int3
xchg
ss
stos
jne
insl
adc
arpl
mov
dec
push
or
hlt
sbb
add
or
imul
dec
xor
stos
mov
adc
hlt
fwait
outsl
xchg
sub
stos
test
inc
mov
or
cmp
repz
out
sub
loopne
fsubrl
sahf
xchg
stos
dec
or
ffree
or
data16
sub
scas
fwait
ja
push
mov
stos
popa
and
push
mov
cmp
imul
pop
adc
ss
stos
cmp
jns
mov
lret
stos
stos
cmpsl
jmp
jg,pn
cmp
dec
and
mov
loope
jno
stos
insl
ja
push
pop
or
in
mov
mov
in
cmpsb
or
int
xchg
add
sub
stos
icebp
das
or
sbb
aas
mov
cmp
fisttpl
daa
cmp
stc
mov
lods
mov
and
ret
sahf
mov
xchg
addr16
push
jmp
outsb
xor
fnstenv
adc
shl
adc
nop
hlt
inc
cmpsl
stos
test
xlat
outsw
adc
and
inc
jg
pop
inc
jmp
or
orb
xchg
mov
lea
push
ljmp
loop
inc
pushf
repz
push
ds
xor
sbb
loope
addr16
and
mov
imul
stos
out
std
lahf
test
andb
in
stos
cmp
mov
in
aad
sti
out
lods
je
sub
push
movsl
adc
mov
ss
imul
lahf
popa
int3
pop
daa
stos
pushf
pusha
fnstcw
roll
xchg
jecxz
and
jnp
repz
stos
fs
cmp
push
mov
test
std
aad
out
mov
mov
loop
shrb
xor
or
stos
aas
or
mov
mov
sbb
dec
pop
jbe
cs
stos
outsl
aam
or
ljmp
cmp
adc
loopne
mov
inc
mov
mov
rorl
ror
mov
jmp
or
cmpsb
enter
int3
stos
fcompl
xor
prefetcht0
stos
dec
push
iret
lcall
in
stos
push
test
cmc
fsub
data16
js
addr16
addr16
imul
xchg
outsl
mov
mov
sti
jne
add
cwtl
loopne
scas
leave
int
stos
je
in
dec
mov
lds
and
cmpsl
fdivs
loope
roll
arpl
pusha
push
movsb
add
lcall
imul
aad
nop
scas
pusha
or
imul
fwait
push
mov
lods
stos
test
icebp
dec
stos
sub
jp
stos
pop
repz
out
and
cltd
jge
xchg
add
xchg
fs
mul
cltd
push
or
sbb
adc
lcall
and
in
mov
mov
push
sti
out
popf
stos
and
int3
xchg
in
lods
ret
out
add
and
and
stos
pavgw
jp
lahf
test
pusha
jns
jns
mov
stos
push
aas
add
push
push
addr16
sbb
lock
ja
dec
jne
pop
xor
imul
js
adc
out
jne
movsb
mov
mov
push
hlt
imull
jmp
jecxz
mov
repz
add
stos
pusha
in
adc
pop
mov
cmp
mov
leave
or
cli
xchg
adc
movsb
loope
inc
mov
stos
mov
jb
cmp
lcall
and
sub
in
dec
lret
stos
loope
fistpll
hlt
data16
push
ret
test
xor
sbb
shrl
lcall
iret
stos
sbb
aas
dec
pop
popf
subb
scas
mov
rcrl
movsb
push
xchg
jo
int
popf
mov
in
orb
lods
mov
stos
xlat
lcall
mov
stos
imul
rolb
pushf
andl
xchg
push
inc
stos
cmp
sbb
scas
cwtl
xor
pop
out
stos
ret
cmpsl
adc
xchg
in
lahf
sub
jl
aas
push
mov
sti
add
xor
ds
stos
add
aas
ja
das
sub
and
adc
push
xor
mov
cmp
iret
xchg
outsl
icebp
in
stos
cmp
mov
notl
aad
adc
jecxz
jns
stos
sub
xor
daa
adc
aam
add
mov
ljmp
add
popa
out
in
sahf
mov
xchg
stos
pop
hlt
or
sbb
movsl
iret
push
and
test
lds
addr16
outsl
out
push
xchg
jl
popf
stos
cmp
jbe
adc
push
dec
in
inc
stos
enter
stos
pop
imulb
mov
stos
push
jp
pop
imul
mov
stos
sub
aaa
js
xorb
lcall
movsb
scas
fs
icebp
add
mov
mov
pop
xchg
pop
movsl
stos
jae
mov
and
mov
xor
lods
xor
nop
mov
popa
stos
fldcw
dec
jne
bound
pop
mov
cltd
dec
xchg
adcl
xchg
fstsw
xor
cmc
aaa
insb
jp
stos
pop
addr16
rcrb
cmp
xchg
mov
mov
or
stos
and
push
ret
add
stc
int
stos
push
dec
sahf
pop
cltd
xchg
push
stos
in
dec
mov
xlat
dec
xor
lock
push
add
mov
add
or
fwait
pop
shll
xchg
nop
jmp
test
imul
lods
add
mov
stos
cmp
sub
push
adc
mov
push
lds
sub
xchg
pop
xchg
mov
jmp
imul
mov
lahf
push
xchg
stos
cmpb
sarb
jmp
icebp
push
xlat
adc
mov
xchg
and
jle
je
nop
and
mov
sbb
stos
sbb
fsubrl
into
iret
loopne
orl
xchg
xchg
mov
sbb
cmc
fstl
jmp
mov
inc
add
xor
cltd
shll
stos
cmp
fwait
push
lahf
in
dec
stos
push
push
mov
pop
stos
xchg
cmp
xchg
jmp
inc
fbld
imull
addr16
into
outsb
popa
mov
mov
pop
lods
in
jmp
stos
mov
loope
mov
stos
fwait
dec
stos
mov
scas
imul
aas
cmp
shll
jmp
xor
adc
leave
fwait
xchg
iret
stos
xor
mov
cmc
fwait
sbb
stos
leave
push
enter
scas
sar
stc
pop
adc
dec
aas
std
add
lds
pop
pop
and
xchg
in
push
mov
stos
pop
ret
mov
rcll
inc
lods
dec
stos
cli
in
fiadds
es
ljmp
add
lahf
data16
xchg
repz
or
imul
pop
je
stos
aas
scas
lock
sbb
movsl
and
lds
pop
xor
inc
ret
stos
icebp
rorb
mov
sbb
stos
mov
cs
push
pop
addb
ja
mov
cltd
punpckhwd
out
xchg
lahf
pop
sub
xor
mov
cmp
int
inc
inc
ss
into
fsubrl
and
nop
cmp
mov
dec
mov
xchg
shlb
mov
stos
pop
aam
test
iret
or
and
notb
repnz
cwtl
es
mov
in
dec
adc
out
mov
pusha
xor
jb
mov
stos
mov
push
lea
stos
inc
mov
push
xor
add
sub
add
mov
xchg
dec
mov
dec
sbb
imul
stos
push
inc
mov
lret
cwtl
dec
and
push
push
rcrl
lods
outsb
stos
pop
insl
mov
fisubl
mov
push
jno
stos
cmp
dec
or
shl
or
inc
ljmp
cmc
mov
jmp
mov
xor
stos
leave
lret
dec
mov
cmpsb
out
stos
in
aaa
mov
stos
push
mov
out
stos
add
sub
mov
jl
jle
push
pop
add
popf
xor
jge
movsl
mov
stos
clc
xchg
inc
es
stos
sub
jecxz
orb
inc
mov
fildll
mov
lcall
sbb
sbb
adc
mov
mov
fldenv
mov
dec
inc
ss
mov
enter
adc
and
xor
cmp
or
lock
mov
in
stos
test
jno
cwtl
je
inc
stos
ljmp
push
addr16
or
sub
cwtl
int3
mov
aad
icebp
push
inc
add
dec
stos
outsb
xor
stos
bnd
imul
xchg
lea
push
mov
outsb
stos
sub
out
mov
fwait
and
mov
add
stos
xlat
leave
pop
pop
lahf
sub
shrb
mov
jmp
and
jmp
jo
add
xchg
test
das
maxps
stos
jmp
stos
jge
lahf
gs
xchg
stos
cmp
lods
push
aad
movsb
mov
mov
in
inc
xchg
sahf
ljmp
adc
dec
std
fwait
mov
fs
jns
roll
aad
mov
insb
pop
mov
addr16
aam
cmp
cmp
into
imul
sub
movsl
mov
or
sub
gs
mov
sub
stos
jl
adc
jp
xlat
insl
dec
adc
adc
stos
mov
arpl
xor
pop
add
loopne
das
mov
stos
test
lock
loope
pop
and
cmp
push
je
insl
pop
mov
gs
mov
test
mov
cmpsb
fwait
push
ja
loope
in
sub
repz
inc
jns
stos
sbb
ds
iret
inc
xchg
scas
cli
inc
xchg
mov
imul
pop
mov
daa
test
rep
and
cmc
stc
stos
xor
mov
dec
push
inc
pusha
mov
es
stos
mov
add
stos
aas
sbb
mov
stos
jae
jp
mov
inc
fstl
aam
mov
cmp
hlt
mov
loop
mov
add
les
sbb
in
jmp
out
or
mov
movsl
jmp
or
xchg
lods
fs
fstps
shr
ljmp
leave
lret
adc
jmp
jne
arpl
xor
pop
dec
imul
dec
pushf
stc
jl
mov
orb
repz
pop
stos
cld
jp
push
and
pushf
adc
or
repnz
jmp
cmp
mov
pop
stos
jns
jmp
call
ja
sbbl
icebp
cmp
push
mov
pop
xchg
cltd
lds
pushf
inc
daa
jb
daa
cmp
pop
mov
mov
xchg
stos
mov
jno
sbb
mov
not
add
and
sbb
ss
iret
jnp
sub
sub
loop
inc
mov
in
daa
push
cwtl
xchg
and
xor
lcall
sbb
aaa
in
stos
jne
enter
cmp
mov
jmp
rcll
scas
mov
mov
into
stos
cltd
ds
adc
in
push
and
es
xchg
adc
aad
call
movsl
adc
fdivrp
jb
xchg
dec
stos
test
and
jl
outsl
stos
jmp
scas
stos
int
xor
jmp
sub
addr16
std
aad
lods
in
into
cmc
xchg
jns
repz
out
or
and
ret
pop
dec
xor
int3
stos
sbb
add
dec
stos
lea
aad
daa
icebp
pop
xlat
xchg
mov
int3
cmp
cmp
scas
mov
push
mov
out
or
jmp
mov
das
add
out
mov
insl
mov
or
adc
pushw
int3
stos
outsb
lahf
adcb
gs
cmpsl
fdivs
lret
fs
xchg
scas
sbb
add
adc
stos
loope
xor
and
in
and
imul
movsb
stos
jo
fucomi
loope
std
fs
xor
stos
mov
jecxz
push
adc
stos
jbe
outsb
dec
inc
sbb
out
shr
ret
adc
cmp
dec
push
cmp
fwait
and
hlt
jno
pop
dec
push
stos
push
sub
les
in
jecxz
inc
sarl
ds
lret
adc
cmpsl
jmp
push
insl
lock
and
ds
or
mov
jl
stos
xor
sahf
pop
outsb
xchg
xor
mov
stos
lds
std
ds
sub
dec
jne
popf
stos
cwtl
cmpsb
add
insl
adc
xchg
shrl
lahf
mov
stos
ret
fistps
lods
stos
sbb
adc
mov
int3
sarl
stos
inc
xor
aad
mov
xchg
xchg
mov
sbb
repnz
mov
mov
imul
stos
lods
int
je
dec
push
ret
push
lret
mov
stos
incb
lock
xchg
jnp
stos
xchg
push
mov
cmpsb
pusha
in
dec
adc
or
ds
cmp
cld
in
cld
jge
mov
pop
mov
pop
cli
bound
outsl
pop
stos
repz
pop
sub
mov
je
addr16
xchg
push
cmpsl
and
ret
cmp
jb
roll
pop
scas
fistpl
cmp
insl
dec
fwait
clc
inc
pop
ja
xchg
out
mov
push
mov
mov
inc
cmpsb
stos
mov
test
or
imul
xor
out
lods
jecxz
cmpsb
inc
dec
mov
fcomi
dec
mov
pop
xor
ds
cld
scas
icebp
xchg
dec
repnz
stos
mov
xchg
fstl
test
cli
cmp
mov
dec
dec
ss
stos
stos
lea
or
daa
sub
pop
idivb
push
stos
test
je
aaa
lods
mov
mov
pop
les
mov
or
dec
movups
in
pushf
aas
dec
repnz
adc
dec
push
cmc
sbb
fwait
iret
ss
inc
or
stos
ja
push
ret
hlt
sub
stos
sbb
fsubl
cmp
lret
cs
movb
xchg
jnp
lds
stos
mov
dec
enter
gs
stos
sub
movsb
daa
xchg
mov
mov
or
stos
dec
and
add
inc
pop
stos
fwait
cmp
xchg
push
movhps
mov
xor
cltd
arpl
into
push
in
addr16
mov
shrb
mov
lret
mov
cmp
xor
ljmp
daa
in
pop
mov
mov
mov
pop
mov
jl
mov
pop
lods
inc
int3
xorl
cld
icebp
xor
stos
outsb
ss
mulb
arpl
mov
adc
jmp
js
jnp
gs
xchg
sbb
stos
mov
jg
ljmp
xchg
dec
flds
jmp
sub
arpl
stos
neg
push
movsb
add
dec
push
jecxz
or
insb
aas
add
cmp
mov
movsb
sub
pop
mov
iret
mov
stos
dec
or
add
lds
stos
ret
leave
sarl
int
stos
or
adc
jns
mov
lea
rolb
imul
nop
stos
pop
shl
and
cli
lea
in
pop
mov
xor
and
iret
jmp
addr16
ljmp
test
sub
leave
cld
dec
xchg
jmp
icebp
fidivl
add
stos
scas
or
jb
and
fildll
push
mov
cmp
out
inc
dec
cmc
stos
pushf
inc
insl
xor
mov
jmp
in
xor
lahf
and
je
sub
mov
outsb
hlt
js
ret
mov
mov
rolb
call
mov
pop
jmp
jmp
mov
or
xchg
push
rclb
shr
rclb
sbb
mov
xchg
out
das
jns
jg
out
in
cmp
stos
adc
in
bound
jns,pt
jge
xchg
add
cmc
imul
push
mov
mov
in
flds
push
dec
sti
or
xchg
cmp
scas
xchg
dec
fsubl
pop
xchg
mov
push
xchg
pusha
out
xchg
cmp
mov
cld
mov
fisubrs
dec
dec
cmp
stos
aad
gs
int3
cwtl
adc
mov
add
push
test
xchg
daa
lcall
out
pop
jecxz
stos
lds
sub
stos
adc
add
iret
sarb
mov
jo
les
loop
neg
push
rcll
outsl
stos
andb
jmp
lcall
fs
inc
adc
test
movsb
xchg
pushf
das
and
scas
dec
pop
mov
fdivl
js
jae
jbe
mov
push
push
inc
aam
lahf
xchg
daa
and
clc
gs
xor
mov
jbe
stos
push
stc
leave
repnz
push
std
mov
or
sub
ljmp
push
mov
mov
jecxz
cld
or
scas
rcr
jge
stc
add
xchg
loope
sbb
sbb
cmp
mov
hlt
xlat
loope
cli
xor
enter
cmpsl
roll
cmp
and
lods
js
ja
arpl
dec
lea
loopne
sub
inc
lods
add
stos
loope
inc
xor
je
outsb
lcall
xchg
shl
in
or
dec
popf
ss
mov
stos
mov
arpl
stos
inc
sar
lods
jbe
filds
jg
aas
xchg
mov
fcmove
mov
xor
mov
pop
jmp
cmp
sar
or
jp
ret
sbb
add
insb
stos
mov
lret
mov
cld
mov
addr16
pop
mov
loopne
test
sub
popf
pop
das
and
jae
clc
mov
gs
or
leave
stos
movsl
xchg
jbe
mov
outsl
mov
test
push
flds
stos
jb
leave
xor
movl
cs
xor
les
jae
sub
fsub
daa
scas
es
repnz
inc
jo
call
mov
scas
mov
stos
fcomp
mov
gs
in
js
jl
es
jb
psubd
out
pop
mov
or
lret
js
inc
ljmp
in
pusha
sbb
icebp
stos
mov
and
popa
jmp
stos
push
cmpsl
imul
out
or
jl
sar
and
push
outsb
cmpsb
mov
stos
rep
stos
pop
lods
jecxz
imul
arpl
fidivrs
scas
stos
adc
int
daa
addb
mov
loop
adc
mov
adc
jbe
fldenv
lret
jmp
jle
push
mov
stos
sbb
iret
dec
sbb
subl
lods
call
cs
sub
push
sub
cwtl
movsb
imull
add
scas
jmp
and
mov
cmp
push
test
cld
dec
lods
sub
out
push
aam
dec
lahf
mov
pop
orl
cmp
xor
std
lcall
das
je
mull
jmp
sbb
scas
test
push
add
cmp
add
jo
ds
stos
test
inc
mov
jmp
pop
push
mov
jmp
mov
adc
test
push
mov
push
pop
xchg
xlat
fwait
xor
pop
pushf
add
stc
xchg
into
arpl
aad
mov
jmp
dec
pop
cmp
pushf
jo
mov
jbe
or
or
dec
push
jl
jae
mov
dec
mov
int3
scas
por
xchg
jl
in
repnz
mov
push
ljmp
mov
pop
imul
test
or
mov
in
pop
push
stos
dec
fbld
ja
shrb
push
loope
icebp
stos
pusha
adc
out
es
lds
mov
xchg
xchg
jl
mov
mov
pop
xchg
stos
stc
je
xlat
lahf
dec
cltd
stos
lds
aad
stos
lods
push
lea
lcall
stos
lret
xchg
std
jp
sub
movsb
jle
push
bound
pop
test
stc
sbb
pop
jo
std
sub
or
pop
xchg
xor
mov
stos
add
xchg
push
stos
imul
dec
mov
ret
call
aas
dec
xchg
jmp
xchg
or
js
cld
cli
cmp
and
scas
insb
stos
mov
pop
adc
adc
aaa
add
sbb
mov
sub
add
in
out
cmp
outsl
stos
mov
and
je
mov
cltd
xor
cmpsb
dec
or
cmp
fnstcw
lret
imul
push
stos
push
xchg
jmp
es
mov
mov
leave
jno
js
or
pop
mov
push
jl
aas
jae
inc
push
stos
sbb
and
stos
inc
add
aad
adc
mov
repnz
xchg
or
stos
inc
inc
outsl
cmp
inc
or
xlat
sub
stos
dec
add
xchg
stos
stc
and
hlt
cld
aad
stos
xor
inc
pusha
out
loopne
lea
imul
jns
outsb
out
add
pusha
jge
push
mov
sbb
stos
lock
or
stos
sub
lds
stos
stc
test
cld
add
jbe
mov
stos
nop
pop
cwtl
pop
adcl
in
js
fwait
mov
stc
jbe
stos
hlt
pop
movsl
push
add
pop
or
add
and
repnz
shll
orb
mov
dec
or
push
test
dec
inc
lret
sub
push
push
repz
stos
js
pop
aas
int
or
mov
push
mov
xchg
push
inc
dec
in
push
pop
stos
pushf
int3
cmp
lret
lcall
icebp
jmp
mov
and
mov
cmpsb
or
sub
xor
data16
sbb
pop
push
dec
sbb
pop
jne
xchg
stos
jae
pop
notb
xchg
fcoml
call
add
out
stos
lret
dec
inc
inc
push
add
iret
daa
mov
adc
xor
push
mov
out
call
es
std
xchg
scas
mov
jno
dec
cmp
outsb
jns
stos
xlat
sbb
ret
call
xor
rcll
negb
ljmp
ja
sub
fwait
jp
cld
stos
lods
dec
add
push
hlt
in
test
inc
shll
xchg
sbb
cld
loope
xor
stos
mov
repz
in
addr16
sbb
cmp
aad
push
jg
jns
mov
xchg
out
imul
jmp
out
ljmp
addr16
adc
stos
mov
scas
jne
jge
nop
cmp
pop
inc
movsb
or
jle
sbb
imul
mov
loope
int3
fsubrl
shrb
fildl
das
push
test
shrb
dec
mov
sbb
stos
fisubl
lods
mov
jb
pop
ds
xchg
aaa
mov
stos
cwtl
inc
dec
fbstp
push
arpl
repz
cmpl
sbb
or
stos
mov
in
jb
ljmp
fucom
and
xchg
push
adc
jne
cmp
mov
fwait
mov
sub
daa
inc
push
xchg
call
adc
lret
add
cmp
outsl
in
xchg
stos
push
mov
mov
jmp
pushf
lahf
xor
into
xchg
mov
stos
mov
dec
cmc
dec
stos
mov
sbb
mov
jle
fisubrs
mov
mov
and
inc
mov
repnz
int3
outsb
dec
cmp
xchg
shrb
and
mov
xor
imul
mov
jnp
inc
addl
fs
sbb
stos
inc
imul
xchg
xchg
dec
cmp
push
adc
stos
pop
mov
fdivl
inc
fmuls
ds
insl
ss
add
stos
daa
add
or
mov
ja
lea
and
add
fwait
sbb
push
dec
jo
lods
arpl
test
xchg
xchg
add
popa
cmc
mov
inc
push
xchg
mov
pop
lds
mov
shrb
mov
mul
stos
mov
in
mov
gs
dec
shl
push
dec
mulb
push
mov
inc
cmp
push
mov
xor
andb
stos
xor
daa
loop
mov
jl
mov
or
stos
cltd
mov
push
push
fwait
loop
cmp
sahf
pop
mov
and
dec
sbb
xchg
sub
loop
scas
iret
imul
inc
cmc
xor
stos
push
shr
adc
xchg
scas
stos
stos
aad
dec
int
mov
push
into
out
outsb
dec
lods
cld
stos
sarb
scas
mov
andl
shrb
call
ret
xor
pushf
pop
nop
adc
bound
lcall
jne
xchg
stos
push
or
into
xchg
and
loop
mov
mov
stos
or
and
lahf
dec
stos
ljmp
add
xor
mov
shrl
imul
cs
xchg
push
add
sub
fldt
push
push
add
loop
rorl
std
jbe
in
mov
mov
xchg
xor
mov
cltd
es
dec
or
cli
enter
mov
popf
testb
loope
dec
mov
mov
xchg
ret
dec
popl
add
les
add
add
sbb
stos
subb
dec
stos
add
or
sub
jmp
les
mov
or
lds
push
outsl
scas
mov
repz
pop
movsl
sbb
jmp
push
daa
fwait
mov
push
jmp
test
dec
call
or
xchg
popa
gs
test
mov
out
sar
sahf
jg
push
jmp
xchg
shrb
adc
aad
int3
sub
stos
sub
sti
pop
push
jbe
cmp
xchg
mov
and
push
stos
out
fisubl
xorb
lahf
mov
fs
subb
in
mov
fwait
xchg
dec
mov
mov
push
cltd
xor
add
icebp
push
xor
ljmp
aam
xchg
daa
leave
shll
fcomip
call
inc
fisubrs
adc
xchg
stos
pop
cmp
int
mov
add
adc
xor
dec
sub
adc
stos
inc
enter
out
cmp
cs
arpl
jo
or
inc
mov
out
fistps
cltd
push
gs
hlt
ja
stc
sub
js
faddl
mov
jecxz
mov
insl
xor
xchg
repnz
aad
dec
push
inc
in
xorl
stos
js
shrl
or
arpl
into
imul
jmp
or
cld
stos
fstpl
jg
or
sbb
push
fildl
inc
mov
movb
jno
call
int3
xchg
mov
stos
push
insb
add
stos
lods
into
sbb
push
data16
pop
daa
je
fwait
pop
cwtl
sub
popa
push
repnz
dec
jmp
sub
and
cmp
leave
stos
xchg
jae
push
hlt
test
sub
test
dec
fildl
and
es
stos
or
scas
xor
jp
andb
outsb
jne
test
ret
stos
pop
xor
mul
push
mov
inc
aam
popf
mov
imul
stos
mov
sbb
lret
push
or
stc
lahf
dec
loopne
lcall
hlt
pop
mov
dec
stos
mov
rcr
xchg
sarl
pop
push
lods
in
adc
mov
lret
out
icebp
inc
sbb
xor
fcoml
xlat
imul
es
and
dec
test
mov
and
je
adc
cltd
adc
nop
addr16
pop
movsb
mov
sub
into
pop
addr16
mov
loop
push
jmp
mov
fstpt
stos
ss
jae
ljmp
pop
stc
stos
iret
xchg
jnp
mov
dec
sub
addr16
js
and
test
jl
adc
xchg
movsl
bts
push
mov
test
pop
mov
in
push
loop
jb
imul
out
pop
mov
stos
lods
add
rcrb
call
imul
arpl
push
and
xchg
or
daa
fldt
jg
push
lods
jb
push
in
jns
inc
aas
enter
imul
add
out
jle
mov
stos
mov
jnp
cmpsl
xchg
sub
mov
mov
mov
lods
pop
in
xor
test
stos
sub
dec
ficoml
cmpsl
stos
out
pushf
inc
and
dec
adc
ret
stos
mov
in
aam
push
stos
or
loope
lods
nop
sub
inc
inc
xor
daa
iret
pushf
xor
cmp
out
cltd
movlps
in
adc
xor
xchg
jb
pop
dec
jg
stos
imul
sub
jae
jecxz
xchg
stos
or
mov
fsts
and
mov
pop
mov
stos
ja
and
call
stc
mov
xlat
rclb
rclb
hlt
stos
scas
js
mull
mov
jnp
test
pop
push
jmp
mov
dec
xchg
cmp
stos
jno
movsb
test
stos
push
dec
lahf
enter
stos
push
jbe
push
fnstsw
popf
stos
sub
or
jmp
mov
stos
push
fucom
mov
stos
lea
mov
inc
lods
sub
add
movsl
inc
adc
push
inc
aaa
std
stos
jp
testl
adc
mov
and
js
stos
movsb
pop
lods
mov
jmp
movsl
mov
xchg
fisubrs
nop
jmp
loopne
pop
or
daa
cmp
gs
pop
enter
xchg
ds
repz
test
out
jmp
xor
clc
or
pop
stos
call
sub
and
push
js
inc
jo
push
cltd
jg
adcl
cmpsb
pushf
mov
cli
stos
xchg
cmp
or
or
stos
xchg
les
out
gs
jmp
pop
addr16
lea
add
cmp
stos
cmp
insb
and
or
xor
cs
shll
or
jae
or
push
daa
dec
adc
loopne
rcrb
pop
stos
sbb
rcll
dec
mov
int
fs
cmp
xchg
daa
out
dec
cld
bound
icebp
pop
stos
fdivrl
cwtl
push
popf
adc
call
stos
in
sub
and
loope
arpl
add
adc
jmp
pop
jns
and
push
ret
icebp
mov
xchg
mov
mov
adc
push
mov
pop
stos
imul
push
stos
scas
lret
or
push
movb
inc
stos
test
or
jmp
mov
pushf
fwait
outsl
shlb
insl
arpl
jb
dec
lds
lods
adc
fcompl
xchg
or
pop
mov
in
fstpl
stos
cmc
dec
mov
addr16
xchg
ds
pop
stos
and
mov
mov
push
mov
dec
inc
mov
out
stos
push
mov
fs
outsl
stos
js
lods
dec
aaa
cmp
pop
stos
push
test
xor
in
orb
jg
push
shll
fdivr
les
jp
mov
push
iret
adc
adc
and
jp
dec
mov
xchg
mov
dec
fwait
mov
jecxz
add
movsl
add
stos
jg
and
sbbb
xor
lret
subl
jmp
mov
push
std
inc
xchg
cs
xchg
shrb
daa
adc
stos
sti
sahf
cmp
and
cld
pop
scas
mov
or
lds
push
ret
testb
iret
jle
stos
mov
daa
mov
xchg
aad
xchg
mov
ljmp
lea
and
sbb
ja
daa
pop
in
sahf
stos
cmpsb
clc
fdivrp
subl
mov
inc
mov
jl
jg
orps
sbb
fists
imul
ds
or
xlat
dec
mov
leave
cmp
sub
ret
mov
mov
lcall
jmp
addl
andl
pop
outsb
out
or
int
stos
mov
rolb
ja
dec
jl
push
stos
jae
add
aas
maskmovq
divl
xlat
or
dec
push
xor
sbb
mov
sub
and
inc
jns
mov
loop
std
fnsave
push
mov
loopne
cli
add
sahf
push
xchg
sbb
stos
int
jmp
inc
int
stos
mov
shl
lods
xor
in
sub
pop
mov
lcall
fildll
imul
dec
lds
mov
cmp
push
ja
jmp
jecxz
xor
mov
mov
es
xor
in
dec
vpcomw
lea
mov
jp
stos
je
fwait
push
stos
lods
or
stos
inc
sbb
pop
adc
imul
mov
cmp
dec
insb
mov
es
mov
inc
jne
call
xor
mov
sub
stos
cmp
cmp
push
call
sbb
or
mov
mov
push
jl
mov
shr
test
ret
mov
scas
dec
push
mov
in
jbe
je
aam
stc
push
jae
cltd
test
mov
in
cltd
flds
cmp
inc
stc
cmpsl
cmc
lret
fdivrl
and
inc
push
insb
lods
pop
inc
xor
add
push
jg
imul
mov
xchg
sbbb
out
inc
rep
mov
test
mov
push
pop
hlt
lea
sbb
aas
popf
stos
and
cwtl
add
add
jecxz
and
stos
test
or
fwait
outsl
inc
stos
enter
push
test
adc
push
sub
xor
fldenv
cwtl
push
inc
fimull
stos
add
shlb
mov
adc
repnz
push
xchg
mov
out
mov
ret
and
dec
stos
jbe
and
inc
jg
push
push
dec
lods
add
stos
insb
int
sub
pop
shr
daa
cmc
mov
rcr
push
stos
jmp
push
insl
jb
xlat
imul
jecxz
das
xchg
cwtl
push
cs
adc
inc
jns
aas
dec
sub
in
test
jno
sub
sahf
hlt
stos
aas
or
test
push
xchg
aaa
movsb
mov
mov
inc
stos
sub
pop
rclb
out
cmpsl
inc
adcl
xchg
push
cmp
cmp
adc
dec
aas
mov
xchg
inc
aam
pop
imul
xchg
stos
cwtl
mov
sbb
adc
xchg
jno
push
xchg
orb
inc
imul
test
std
mov
stos
cld
dec
hlt
sub
sbb
je
loope
mov
enter
popf
stos
inc
shrb
cwtl
pop
xor
or
xor
loop
pop
icebp
movsb
in
daa
int
or
add
lahf
push
stos
push
test
mov
stos
pusha
cmp
out
and
mov
sub
in
cmp
jg
xlat
xchg
pop
xchg
mov
push
stos
pop
nop
repz
cltd
adc
stos
or
cmp
out
lods
inc
stos
sbb
push
cs
arpl
add
jg
jo
cltd
stos
or
adc
stos
rcrl
pusha
vmovntps
mov
fucom
jp
in
in
xchg
std
fisttpl
les
xchg
mov
sub
imul
js
mov
add
pop
push
lea
add
mov
sub
mov
jns
rolb
pop
aad
fimull
pushf
stos
cmp
int3
rcll
mov
add
fs
stos
adc
adc
inc
and
notb
orl
push
or
ljmp
jge
addb
packsswb
out
stos
mov
aam
cld
inc
jmp
push
cmp
dec
lea
pop
pop
mov
xorl
stos
aaa
rorl
cmp
lock
jns
ja
in
pop
jno
leave
popf
fsubrs
jmp
cmc
lret
popf
imulb
mov
push
lea
inc
scas
test
xchg
mov
sub
xor
pop
cmp
cltd
mov
or
mov
sbb
cmpsl
into
sub
mov
hlt
addl
mov
loopne
adc
in
pop
cli
icebp
or
imull
fwait
incb
mov
mov
repnz
test
cmp
shrb
mov
repz
pop
shll
cwtl
mov
inc
outsl
mov
fsubrl
sub
stos
push
mov
or
and
inc
pop
fwait
sbb
xor
pop
mov
lock
fldt
aam
push
xchg
and
stos
hlt
std
into
test
subb
es
cmpsl
dec
cltd
jmp
jmp
mov
push
lea
ljmp
bound
xchg
push
int
inc
mov
cmp
jl
stos
lea
dec
stos
or
sar
jge
pop
jmp
cwtl
mov
jns
bound
popf
mov
adc
sbb
mov
test
mov
and
stos
jnp
cmpsl
lret
mov
fwait
mov
xchg
push
lods
jno
call
and
fimull
fcompl
jmp
shrl
stos
inc
enter
ljmp
repz
stos
mov
pop
cmp
adc
aas
sub
xor
insl
sub
mov
dec
pop
mov
inc
cmp
cltd
stos
movsl
cmp
inc
test
xor
cmp
mov
daa
add
stos
outsb
xor
pop
jmp
pop
aaa
dec
cmc
aas
add
pop
mov
or
push
nop
sbb
jnp
mov
sub
stos
adc
cmp
imul
xor
mov
jg
mov
loopne
in
stos
sub
movsb
jp
fwait
stos
stos
out
jne
lods
jg
test
push
lock
cmp
mov
pop
xchg
lcall
in
and
lret
in
ja
or
push
pop
pop
stos
fcomps
mov
insb
stos
jne
or
movsl
inc
notb
in
subb
jmp
sbb
sti
xchg
or
push
jl
mov
xor
mov
cmpsb
fs
jle
push
mov
shrb
ja
adc
push
test
ljmp
insb
pop
loop
sub
add
add
daa
mov
cmp
pop
stos
test
test
arpl
push
xor
ljmp
push
fcompp
inc
stos
add
cmp
jmp
mov
stos
sti
jnp
int3
push
adc
sbb
xor
xor
jno
loop
ds
call
jmp
lea
dec
sub
pop
mov
xlat
stos
push
adc
scas
mov
imul
cmp
mov
pop
fists
ret
stos
movsl
mov
and
jg
inc
push
add
push
sub
call
cltd
jmp
mov
imul
mov
xchg
xor
or
or
and
sbb
stos
mov
mov
pusha
mov
pop
std
jns
test
stos
loop
xchg
dec
enter
stos
xchg
xchg
jno
jmp
push
aad
and
push
scas
jnp
mov
mov
scas
rcrl
mov
xchg
xor
fisttpll
fsubrp
jg
sub
int
aam
stos
jp
test
stos
fcmovb
rorb
push
popf
xchg
addr16
pop
jmp
inc
dec
cs
stc
xor
push
in
aam
lcall
jbe
shrl
scas
jo
mov
xlat
mov
fldl
mov
mov
stos
add
lods
test
dec
mov
mov
inc
dec
xchg
mov
iret
sub
mov
stos
cmp
ss
sub
cmc
push
outsb
subb
xchg
enter
loopne
adc
xchg
out
jle
ja
dec
popf
out
into
imull
cmp
push
stos
out
fisttpll
mov
sub
out
xchg
sub
xorb
xchg
cmpsl
inc
stos
mov
cmpsb
xchg
rcl
mov
daa
icebp
repz
fwait
xchg
int
arpl
xlat
inc
sub
sub
daa
in
and
inc
sub
lock
lcall
lret
stos
inc
sbb
lods
sahf
sub
stos
xchg
xchg
clc
je
in
stos
jle
mov
nop
in
test
stos
loope
lea
mov
push
lea
push
jle
xor
lods
test
out
stos
jge
scas
pushf
daa
mov
sbb
dec
pop
jl
aaa
mov
mov
sub
ss
stos
push
xor
cli
shl
hlt
stos
or
xchg
mov
scas
es
ret
loope
test
lds
ss
aam
push
call
sub
mov
adc
repz
scas
std
stos
outsl
xorl
imul
mov
stos
jg
cmp
sub
pop
mov
fwait
push
stos
xchg
add
iret
xor
inc
dec
xor
sbb
stos
mov
push
test
stos
sbb
aas
jns
lea
cmc
stos
push
sub
sub
jge
bound
jle
jmp
jmp
imul
pop
inc
jmp
jns
or
insb
aam
cwtl
mov
addr16
in
push
fnsave
fisubrs
sbb
adc
popa
dec
sti
inc
sub
adc
decl
test
or
clc
subl
push
ljmp
mov
inc
sbb
inc
jno
cltd
xchg
daa
lea
sub
in
mov
shlb
xlat
jge
adc
push
inc
loopne
mov
scas
mov
mov
fs
jl
in
sbb
sub
test
sub
hlt
mov
fimuls
subb
jns
and
stos
sub
cmp
js
sub
xor
xor
push
fwait
sub
adc
jbe
stos
pmaxsw
or
stos
fdivr
outsl
out
dec
jmp
stos
in
lock
rolb
sahf
test
mov
dec
push
mov
in
jns
outsb
stos
mov
add
xchg
and
orl
and
xor
mov
inc
out
sub
imul
jb
xor
push
and
adc
rcrl
test
jmp
and
sub
and
mov
inc
adc
stos
test
movsb
dec
mov
adc
out
push
lds
push
sbb
adc
push
mov
sbbl
xor
mov
test
ss
stos
sub
adcb
inc
stos
test
shlb
int3
mov
push
aas
lock
xchg
dec
cmpsb
and
stos
pcmpgtb
insl
stos
scas
adc
sub
std
pop
shlb
iret
mov
push
fwait
int
pop
xchg
cmp
inc
fs
xorl
loopne
stos
inc
inc
push
js
and
jmp
sbbl
or
stos
adc
pop
rorb
add
mov
mov
stos
and
sbb
es
pusha
mov
and
hlt
cmp
mov
sub
jp
xchg
add
push
popf
mov
mov
mov
rep
push
cmp
lods
stc
das
push
sbb
xor
push
sti
stos
inc
mov
es
xor
in
xor
pop
dec
adcb
stos
inc
push
inc
int
jmp
movsl
cmpsl
leave
dec
lret
roll
cs
loopne
out
les
ret
pop
jecxz
stos
or
lcall
stos
mov
dec
adc
outsb
scas
push
xor
addr16
addb
sbb
aam
paddusb
jmp
or
mov
push
int
arpl
into
sbb
nop
lea
inc
sti
push
push
adcl
enter
stos
add
fwait
mov
lcall
sub
pop
or
lret
stc
aad
mov
and
arpl
sbb
stos
addl
stos
inc
std
xchg
lret
aad
jb
push
mov
insb
push
jmp
into
xor
push
xchg
out
cmpb
pop
stos
or
daa
dec
loope
mov
mov
loop
scas
push
or
dec
jmp
gs
mov
shrb
outsl
daa
xchg
fwait
add
push
push
pop
xorb
or
aas
xor
pop
pop
xchg
adc
lds
jae
xchg
clc
movsl
dec
test
hlt
fwait
jns
aas
mov
dec
lods
in
scas
das
and
jle
fwait
mov
sti
movsl
sbb
xchg
adc
mov
je
push
stos
outsl
jg
xchg
adc
imul
xchg
in
stos
sti
inc
cmp
mov
cmpb
mov
sbb
and
add
orl
sbb
stos
out
aaa
subl
rcrb
add
xor
sub
mov
gs
inc
stos
loope
sub
stos
jae
std
sbb
or
stc
jmp
cmpsb
je
cld
sbb
fwait
jnp
and
or
xor
jl
in
stos
adc
mov
and
mov
push
xor
jb
push
lret
popf
dec
mov
lods
pushf
push
js
cmc
sub
imul
sub
test
cmp
out
dec
push
sub
fwait
xchg
insl
daa
jae
pop
mov
inc
inc
ret
les
fmull
cmp
sbb
and
mov
xchg
sub
or
mov
or
xlat
sbb
popf
xor
mov
orl
xor
out
pop
aad
mov
jp
mov
js
int
stos
mov
mov
stc
add
sahf
jmp
adc
inc
jecxz
and
stos
add
pushf
jbe
ret
stos
and
push
popf
cltd
lock
stos
mov
push
push
mov
leave
mov
pop
imul
adc
inc
jg
cwtl
in
stos
aas
and
dec
repz
aam
sahf
add
jno
push
xor
push
scas
pop
sub
fnstcw
int
loopne
stos
sub
push
dec
sbbl
cmpsl
lods
push
fisttpl
in
mov
cmp
fwait
cmp
stos
jnp
ficoms
aaa
sbb
or
inc
stos
cltd
shlb
stos
nop
jl
sub
test
outsb
sub
xor
les
std
adc
pop
pop
in
fcmovnb
popl
out
lahf
ds
and
dec
call
stos
test
and
or
adc
les
xchg
arpl
icebp
nop
stos
movsl
xor
ss
testb
xor
sub
inc
movsl
stos
pop
inc
adc
dec
jmp
in
fwait
jb
pop
imul
test
std
int3
repnz
es
mov
lea
rol
pusha
xchg
loopne
cmpsl
mov
jns
test
stos
or
dec
inc
jnp
mov
mov
mov
stos
xchg
imul
cmp
mov
pop
pusha
pop
add
add
gs
mov
stos
mov
vpor
test
push
shlb
xchg
xrelease
lahf
fldcw
divb
adc
cmp
sub
stos
or
enter
xor
in
ret
jmp
leave
data16
pushf
dec
mov
or
mov
mov
sahf
jecxz
mov
lret
stos
ret
adc
ss
stos
test
fwait
stc
push
add
cmp
xor
mov
adc
das
test
pop
cmp
cltd
scas
sbb
jg
push
dec
cmp
cmp
jae
xlat
mov
push
mov
out
scas
call
mov
xor
cmc
mov
sbb
jns
cmp
call
push
jnp
xor
xchg
addr16
xor
xchg
mov
xchg
ja
or
mov
pushf
cmpsl
xchg
and
jae
repnz
movsb
push
pop
pop
xchg
gs
push
std
mov
addr16
mov
ljmp
stos
fbld
ja
adc
mov
push
stc
dec
iret
inc
adc
test
out
or
ljmp
jp
add
jl
xchg
test
out
imul
stos
xchg
jecxz
ficoml
repnz
stos
and
pop
jle
repz
stos
jl
popf
jge
add
jns
shlb
out
aad
pop
cmp
sbb
sbbl
scas
mov
sub
add
add
stos
lret
icebp
lods
sbb
jg
ret
cmc
jmp
and
movhps
addr16
mov
mov
dec
and
rclb
and
xchg
stos
stc
mov
cmp
add
enter
push
std
repz
loop
fcoms
stos
adc
push
stos
or
psllw
xchg
lahf
push
mov
dec
repnz
loope
jae
outsl
fadds
adc
shrb
stos
or
mov
pop
stos
push
pop
fwait
and
mov
clc
sub
push
inc
sbb
rcll
mov
pop
jbe
pop
lods
stos
outsl
arpl
sbb
test
and
pop
sub
es
popa
mov
stos
clc
cmp
jbe
bound
jl
shr
lret
mov
ret
lods
cmpsb
fldcw
fmuls
mov
repz
stos
push
ja
lock
xor
ret
idivl
xchg
lret
mov
cltd
mov
dec
or
dec
imul
xchg
je
cmpsb
in
xchg
mov
or
cmp
orl
imul
loopne
dec
xchg
cmp
in
dec
xchg
cmp
stos
shl
adc
xor
stos
imul
sub
in
fcmovb
fwait
xlat
shlb
mov
sub
pop
stos
ret
push
aas
stc
insb
arpl
add
cmpb
sbb
adcb
lcall
pop
mov
mov
out
outsl
in
cmp
mov
jo
dec
stos
mov
roll
push
stos
xchg
cmp
pop
and
shrl
sbb
pop
ret
es
jle
andl
sub
pop
lods
fidivrs
or
push
mov
pop
pop
dec
fsubrs
lock
sahf
mov
stos
xchg
xor
dec
popf
imul
mov
xchg
aad
roll
jmp
add
push
out
pop
sub
in
and
cld
mov
dec
mov
popa
out
jbe
sub
fwait
mov
outsb
jmp
div
add
invd
cltd
test
fldcw
fidivrl
mov
loopne
xchg
pushf
in
mov
pop
xor
insb
in
pop
and
mov
lret
cmp
lahf
mov
pop
xchg
mov
xchg
call
and
decl
insb
andl
ja
sub
xchg
and
stos
pop
mov
jecxz
jae
inc
mov
arpl
std
mov
mov
js
aad
xchg
lds
pop
xor
fimull
nop
inc
and
cltd
dec
stos
ret
inc
daa
cmp
jb
sub
xchg
repz
inc
sub
shll
push
inc
sarl
jle
lock
inc
sti
sub
xchg
and
stos
xchg
mov
pop
sbb
or
push
sub
stos
jns
xor
mov
sbb
je
les
stos
shl
mov
jbe
inc
jmp
stos
loop
pop
xor
xlat
pop
cli
fdivl
je
or
stos
jecxz
mov
sub
dec
adc
mov
adc
int3
in
mov
jne
sub
in
push
hlt
sub
into
addb
cli
xchg
push
mov
inc
push
adc
aam
stos
mov
shlb
push
mov
xchg
xor
push
jmp
cltd
inc
mov
daa
mov
add
mov
xor
xchg
stos
rolb
outsl
sarl
stos
shll
pop
faddl
lds
test
fs
mov
push
pushf
and
aaa
pusha
stos
insl
sub
pop
outsl
stos
ds
xor
dec
stos
cld
sbb
jbe
movsb
ds
mov
std
jnp
mov
test
cmc
jg
jne
jae
out
add
dec
daa
rclb
stos
sub
scas
sbb
stos
pop
inc
jnp
adc
imul
pop
dec
stos
sbbl
sbb
or
jb
stos
lods
mov
mov
fcmovnb
aaa
fmul
ss
test
push
in
mov
mov
hlt
stos
dec
leave
mov
jmp
adc
cmc
ror
xchg
push
nop
stos
xchg
stos
mov
fnsave
notl
test
jae
popa
insl
and
in
sub
in
or
popa
mov
aas
and
sub
mov
mov
fistpl
stos
es
pop
lods
jle
bnd
aad
pop
repz
leave
adc
clc
and
call
pop
lcall
jl
in
jo
movsb
cmp
jmp
imul
or
orl
push
jbe
inc
pop
fcmovne
and
xor
jae
pusha
xchg
andb
fmuls
imul
mov
pop
js
stos
movsl
push
cmc
outsl
xor
jmp
lcall
xor
ja
in
out
cmpl
inc
sti
mov
jmp
push
push
jge
repnz
mov
stos
mov
sub
cmpsl
inc
mov
mov
jne
or
lret
xchg
xor
sub
xchg
mov
movsb
mov
movsb
mov
add
jb
mov
jbe
aas
and
xchg
stos
test
xchg
adc
fiaddl
stos
mov
int3
repz
stos
jge
movsl
fwait
call
hlt
push
sub
stos
in
mov
mov
xchg
mov
pop
stos
dec
push
out
pop
pop
dec
stos
xchg
es
and
lock
cld
fwait
scas
je
mov
xchg
mov
shrb
push
push
scas
and
xor
jne
cmp
xor
push
loop
popa
cwtl
lods
enter
sub
jmp
fwait
lret
mov
xchg
insb
push
bound
loop
into
scas
pop
in
mov
push
push
rcll
or
mov
fisttpll
cmpsl
cmp
mov
xlat
addr16
lret
sbb
jnp
stos
test
adc
fs
ljmp
js
add
sbb
pop
jne
stos
and
and
add
dec
jae
and
mov
stos
xchg
pop
ret
jns
xchg
ror
stos
movsl
push
mull
pop
dec
xchg
test
inc
adc
dec
fwait
xchg
mov
ret
cmpsl
jmp
dec
sub
in
add
push
cwtl
int
pop
lods
mov
adc
stos
scas
fisubs
rolb
in
inc
ss
cld
jae
jnp
ds
in
mov
or
push
sub
xor
test
cs
stos
jns
shlb
aad
test
movsb
cmp
hlt
sbb
mov
pop
loop
fisubrl
sti
cmp
or
insl
je
mov
dec
xor
cmp
test
stos
loop
lret
xchg
push
nop
adc
sub
stos
mov
mov
daa
fstpt
test
dec
mov
push
mov
cli
cltd
sub
mov
add
push
leave
mov
stos
and
xor
mov
add
jle
idivb
xchg
hlt
subb
dec
mov
stos
repnz
cld
test
in
push
jle
orb
enter
lods
pop
jnp
stos
mov
pop
stos
mov
xchg
adc
sub
mov
outsb
repz
call
inc
enter
xor
scas
inc
xchg
sbb
mov
xor
mov
pop
mov
cmpsl
aam
es
cli
imul
bound
stos
fnstsw
pop
decb
xchg
push
fsub
stos
cmp
pop
or
stos
and
mov
mov
push
adc
test
pop
push
adc
hlt
xchg
sti
test
add
inc
dec
stos
daa
pop
xchg
popa
pop
jmp
test
notl
stos
fnstsw
cmp
cwtl
loope
inc
imul
call
imul
movsl
icebp
jge
mov
into
mov
sub
mov
dec
out
int
rclb
jmp
fsts
clc
ja
imul
mov
xchg
adc
ljmp
mov
fildll
data16
ret
lods
out
scas
sub
test
pop
xor
stos
mov
fildll
jb
loopne
mov
sarb
adc
xor
stos
adc
cmpsb
mov
subl
jmp
mov
stos
das
lret
mov
imul
repnz
out
test
mov
test
sbb
cmpsb
mov
mov
out
pop
cmp
cs
stos
fldlg2
mov
stos
sub
dec
rclb
mov
dec
push
stos
nop
jne
xchg
dec
sub
xchg
or
arpl
fiaddl
test
cmc
out
les
cmp
mulb
pushf
rclb
dec
or
xchg
sbb
mov
sub
test
push
fildl
mov
pusha
fbld
cli
stos
dec
insb
push
inc
inc
jp
mov
dec
out
das
icebp
cmp
leave
mov
pop
data16
mov
sub
les
push
das
adc
cwtl
movsl
mov
stos
jle
jbe
out
xchg
stos
inc
lea
dec
popa
inc
enter
and
dec
push
xlat
in
cmp
xor
pop
stos
dec
inc
or
fs
mov
fbld
jb
subb
not
cli
stos
cmpsb
jmp
shrb
mov
adc
insb
fcoml
stos
pop
xlat
mov
lret
outsb
xchg
jb
mov
gs
into
fistpl
xor
xchg
std
cmp
imul
dec
cs
mov
lret
push
or
aaa
inc
test
and
mov
dec
imul
mov
fcomps
imul
daa
inc
out
movsl
xchg
lods
pop
in
stos
push
mov
push
das
stc
push
fs
xchg
cmp
stos
jle
jb
rcl
and
push
inc
test
mov
sub
cld
and
test
cmpsl
dec
int3
in
iret
xor
mov
stos
pop
mov
add
lcall
sbb
add
andb
add
mov
sbb
scas
lret
movsl
push
cld
xchg
inc
loop
jne
fdivrl
jmp
xorl
stos
adc
repnz
fsubrs
ror
xor
js
inc
cld
push
movsl
daa
xor
pop
mov
shlb
sbb
in
imul
mov
bnd
insl
lret
mov
dec
xchg
stos
in
cs
xchg
add
mov
mov
sahf
push
jno
pop
daa
push
loopne
xchg
xchg
dec
in
arpl
movsb
push
mov
mov
add
addr16
xchg
jmp
jmp
sbb
mov
fcoms
aam
insb
stos
test
sub
jp
sbb
add
sbbl
lahf
sbb
mov
jns
push
stos
mov
jecxz
jb
dec
jo
cmp
and
stos
sub
je
lea
scas
fisubrl
iret
cmpsb
ss
aad
xchg
in
out
je
stos
inc
pop
mov
pusha
add
add
add
pop
adc
jg
ljmp
loop
aas
incl
stos
jle
into
dec
adc
movsb
lret
orl
mov
inc
rorb
out
mov
stos
xchg
fwait
mov
sub
xchg
stos
insb
mov
jp
imul
jnp
jecxz
jo
cmp
fildl
xchg
xor
jmp
shl
mov
into
enter
stc
mov
ja
inc
xchg
push
es
repz
add
pop
push
mov
out
and
inc
mov
lods
inc
cmp
ja
stos
cmpsl
test
jle
xchg
mov
fs
bound
mov
sub
testb
repnz
imul
out
dec
negl
cmc
stos
leave
dec
ljmp
inc
dec
ret
push
jmp
jmp
clc
and
out
push
sbb
ds
mov
addr16
int3
cmpsl
push
cmpl
testl
cmc
xchg
dec
bts
loope
movsl
stos
mov
stos
mov
add
dec
fwait
mov
call
gs
push
pop
mov
mov
sub
xor
pop
in
push
scas
and
pop
addr16
cmp
jne
and
jl
inc
mov
stc
imul
fistl
adc
enter
stos
notb
out
push
stos
sub
push
stos
dec
hlt
or
and
arpl
lret
mov
ret
repnz
popf
and
ja
jno
mov
stos
loopne
and
xor
std
push
add
aad
xchg
leave
in
nop
ds
adc
cld
imul
daa
xchg
stos
pop
aaa
mov
add
out
movsb
mov
stos
hlt
and
sbb
lods
idiv
mov
dec
pop
sub
in
stos
les
push
lret
mov
push
int
aam
dec
xchg
movl
adc
dec
inc
push
add
jmp
dec
stos
adc
mov
inc
clc
incb
sub
cwtl
sahf
rorl
pushf
pop
jp
cmp
jmp
out
out
adc
push
xchg
mov
add
inc
cmp
dec
ret
xor
stos
push
mov
stos
mov
ffreep
and
nop
stos
xchg
sbb
push
mov
and
sub
out
add
jae
les
stos
mov
lods
aaa
jp
sar
scas
xchg
cmp
xchg
and
push
add
cmpsl
das
jmp
sub
je
mov
test
cmp
dec
or
or
mov
cs
jae
shr
push
movsb
adc
lock
pop
xchg
call
js
aam
stos
add
in
jae
adc
dec
push
mov
xor
sbb
int3
xchg
jmp
pop
push
decl
andb
sbbl
mov
sub
adc
xchg
cmp
out
mov
and
in
scas
mov
loop
fs
sub
hlt
imul
inc
ss
jns
mov
lahf
inc
xor
xor
stos
clc
jae
ljmp
mov
aaa
push
cmp
aam
xchg
shrb
enter
push
lds
aaa
fwait
xchg
inc
jne
push
jp
stos
cmp
in
pop
mov
stos
cmp
sahf
imul
sti
pop
sub
mov
mov
inc
mov
movsl
push
int3
sbb
lahf
push
xchg
lea
stos
or
lods
ljmp
push
inc
stos
loop
xlat
pop
pop
jno
movsl
stos
sbb
pop
mov
push
repnz
in
mov
imul
mov
add
arpl
push
lahf
pushf
incb
imulb
scas
or
and
popf
mov
push
adc
je
mov
repz
dec
sub
jno
pop
addr16
pop
clc
stos
jecxz
jg
les
gs
rorl
xor
push
push
mov
out
mov
inc
inc
xchg
stos
cli
cmpsb
dec
movsl
mov
cwtl
mov
push
loope
and
pop
inc
and
xchg
jg
stos
bound
je
cbtw
shrb
int
mov
stos
push
sub
fwait
lahf
push
stos
dec
addb
mov
fucomip
daa
xchg
movsl
push
lret
cwtl
adc
scas
cmp
or
add
orb
nop
mov
sub
mov
ftst
fs
cmpsl
stos
and
popa
loop
imul
mov
stos
mov
popf
dec
int3
mov
mov
xchg
push
and
sub
add
stos
lret
adc
mov
jns
inc
stos
fcmovne
xchg
aaa
mov
out
sub
mov
lret
stos
jecxz
daa
mov
aas
loopne
stos
dec
xchg
xor
lock
popa
ja
std
fdivs
stos
inc
sti
mov
add
inc
mov
test
push
push
dec
or
push
hlt
or
xchg
fcoml
lods
jmp
stos
cld
mov
jl
stos
add
and
stos
incl
cmp
jge
xor
sti
int3
stos
pop
xchg
and
in
fistpll
xchg
fildl
cltd
lret
mov
xchg
dec
jnp
cmovbe
in
rclb
negl
stos
test
and
stos
std
jp
aaa
stos
push
nop
or
int3
stos
imul
shr
imul
cmp
rorb
mov
inc
roll
repz
push
clc
fucomi
pusha
xorl
lds
mov
nop
test
mov
ds
xchg
dec
iret
mov
daa
push
icebp
test
push
adc
jo
mov
stos
mov
insl
add
sbb
mov
jp
ffree
insb
add
pop
imul
mov
stos
jle
mov
xchg
stos
cltd
push
pusha
jb
pop
sbb
std
cmp
dec
shrb
sub
mov
je
test
push
pop
cmp
fs
mov
mov
pop
jmp
mov
lahf
pop
push
imull
out
xor
stos
cld
xchg
shrl
xor
in
xchg
test
xchg
arpl
dec
in
adc
mov
ret
push
fdivrs
call
inc
test
xor
xchg
ret
fisttpll
sub
mov
data16
hlt
stos
mov
inc
loop
mov
or
sahf
mov
imul
bound
lcall
es
imul
in
mov
das
loopne
jmp
mov
imul
fs
stos
add
cwtl
stos
mov
xchg
jg
stos
jle
outsl
ljmp
sub
mov
in
arpl
pop
mov
sub
inc
lret
adc
fcompl
jecxz
inc
push
cli
sub
or
sub
pop
sbb
xlat
into
cwtl
pop
dec
insb
popf
icebp
fwait
push
loop
aam
push
repz
jo
jg
pop
stos
shrl
push
jbe
add
loopne
clc
mov
into
pusha
mov
or
pushf
stos
inc
mov
hlt
adc
lods
arpl
les
repz
nop
lock
mov
stos
das
jno
or
daa
jne
sub
dec
jnp
stos
dec
stos
bound
and
jae
push
jne
dec
ret
sti
jns
stos
cmc
inc
fwait
vpor
cmp
xchg
orb
jnp
xchg
daa
xor
mov
jl
test
xchg
das
addr16
pop
icebp
xlat
ds
nop
ret
pop
loope
outsb
fldenv
xor
testb
call
cmp
and
sbb
dec
lds
je
or
add
jl
xchg
jno
sbbb
rclb
int
mov
leave
test
jecxz
and
xor
dec
insb
xchg
loopne
mov
mov
in
push
rcll
adc
adc
push
dec
cli
adc
ret
es
xor
jno
add
cmp
stos
loopne
fcmovnu
inc
jg
pop
stos
sub
cli
lods
scas
movl
ja
stos
cmpb
popf
stos
sub
imul
push
jg
sbbl
mov
or
popa
mov
cmc
fxch
add
xchg
push
repz
shlb
insl
fdivp
mov
cs
pop
cltd
jb
stos
cmp
pop
in
xor
and
add
ss
daa
xlat
das
adc
push
stos
fildl
loopne
inc
scas
mov
and
popf
push
call
lea
into
inc
daa
cmp
out
aaa
pop
in
stos
inc
sbb
sbb
stos
adc
in
fisubrs
and
mov
stos
push
push
movsb
out
jb
loop
fs
addr16
xchg
push
mov
in
or
mov
lret
mov
clc
in
in
inc
rcrl
icebp
dec
xchg
sub
popa
and
xchg
scas
mov
mov
add
jbe
dec
stos
sti
mov
sub
lret
popa
les
fwait
cmp
mov
pusha
sub
imul
adc
mov
mov
adc
xchg
sbb
xchg
int
stos
and
xchg
pop
and
lret
jbe
xor
fcoms
mov
mov
mov
adc
fbstp
sti
arpl
fwait
sub
dec
stos
fs
iret
roll
dec
mov
mov
pop
mov
movsl
pop
scas
mov
push
aam
lcall
xchg
imul
notl
jge
int3
xor
sbbb
sub
xchg
aas
mov
mov
jne
lahf
repnz
xor
mov
in
mov
stos
cmp
sti
es
pop
test
lods
cli
out
shrl
or
pop
dec
cld
cmp
fstpt
xor
mov
add
ror
xchg
enter
and
sarb
cld
push
pop
imul
cwtl
sub
and
loopne
push
xorb
or
in
in
stos
inc
jo
adc
das
shrl
data16
daa
out
int3
ret
adc
stos
sbb
cmp
jl
cld
stos
push
push
add
arpl
outsb
mov
sub
sub
mov
fwait
std
inc
inc
stos
pop
xor
stos
inc
out
jmp
adc
push
mov
movsb
xchg
ss
stos
in
or
stos
jg
inc
das
notl
dec
xor
into
xchg
vpaddb
incb
mov
cmpsb
xrelease
loopne
lea
fldl
mov
lods
iret
test
js
xchg
jne
cmpsb
stos
sub
cli
jb
push
add
inc
xchg
cmpl
pop
stos
pop
negl
lods
and
shlb
jne
mov
imul
jnp
mov
shrl
je
mov
stos
int
jle
dec
push
add
js
std
lock
fwait
aas
movsl
mov
int
pop
rcrb
scas
jb
stos
out
jl
inc
ss
movsl
sbb
mov
jb
shrl
mov
mov
movsb
cmpsl
xor
pop
mov
out
mulb
outsl
mov
dec
and
jl
xchg
pop
data16
jbe
jmp
cmp
ja
mov
dec
aaa
add
sarl
mov
cmp
mov
sub
pop
aaa
test
cmp
cli
pushf
sahf
xor
lock
or
sub
and
out
mov
inc
jb
je
out
stc
xor
roll
jg
test
pop
cmp
cltd
inc
xchg
in
stos
insl
push
aad
jno
mov
stos
cmp
push
pop
pushf
jo
xchg
stos
mov
cltd
add
in
xchg
rcll
stos
xchg
push
jns
lret
xchg
adc
sub
push
fwait
cmp
stos
mov
mov
stos
mov
stos
icebp
xchg
mov
inc
mov
or
into
fdiv
insl
inc
jmp
lahf
xor
mov
jae
jnp
sub
inc
cmp
outsl
cmp
out
mov
ds
push
cmp
xor
lret
fsubl
jl
out
mov
add
jno
sbbb
jle
or
sub
loopne
mov
dec
or
pop
push
xchg
add
loopne
push
jl
lods
in
add
sub
xchg
out
sub
mov
cmp
or
jle
imul
xchg
lahf
mov
mov
fldt
mov
out
xchg
cmpsl
lods
insb
xchg
loopne
adc
jb
imul
lock
dec
push
jecxz
push
mov
or
mov
xchg
outsb
lcall
jmp
mov
scas
pop
jnp
mov
dec
inc
stos
mov
mov
stos
clc
xchg
sbb
gs
fisubrl
lcall
sbb
dec
sbb
jg
mov
mov
mov
pop
rcll
lock
xchg
dec
imul
inc
mov
stos
pop
dec
or
fildll
stos
loopne
mov
cltd
cmp
inc
rcll
mov
movsb
inc
jno
xchg
jmp
add
adc
jmp
cld
and
pop
push
bound
cmp
and
rolb
mull
test
mov
sti
iret
fildll
push
fwait
jbe
cmp
lret
sub
mov
stos
cmp
cmc
mov
push
mov
sub
bound
inc
das
test
icebp
jmp
imul
stos
cs
sbb
stos
les
xchg
or
xor
icebp
imul
ficompl
sbb
leave
inc
sbb
inc
cmpsw
mov
add
stos
or
dec
je
inc
sbb
xchg
fisttpl
dec
ret
fdivr
nop
adc
pop
push
inc
pusha
xchg
xchg
mov
sbb
lahf
aas
stos
cmp
shl
jno
lods
out
dec
push
mov
stos
adc
loope
jle
imul
push
mov
jo
push
fwait
in
outsb
add
or
mov
inc
jbe
cmp
xchg
jl
mov
cmp
ret
pop
or
and
and
pop
int3
mov
out
adc
stos
sub
and
jnp
xor
adc
pxor
ret
fldenv
dec
mov
pop
xchg
push
std
mov
fldl
stos
fbstp
mov
sti
stos
sub
stos
mov
jb
in
pop
sub
pop
stc
fs
scas
lcall
stos
mov
movsb
cmp
mov
imul
xchg
or
pop
mov
mov
sub
pop
into
shrb
dec
fidivl
jmp
cli
mov
lcall
popl
xor
mov
addr16
in
loop
lods
mov
stos
repz
cmp
and
and
dec
call
hlt
or
jo
xor
push
jp
fst
sbb
shll
dec
imul
outsb
cmc
addr16
repnz
and
out
repz
fstl
cmp
add
mov
insb
push
push
pop
sti
test
outsb
mov
xor
and
cmp
jne
xchg
js
stos
cld
lods
repnz
aad
inc
xchg
sbb
jo
jle
stos
jg
xor
push
push
aaa
xchg
push
je
loop
dec
mov
stos
jmp
adc
into
movsb
outsb
sar
sti
jno
pop
sbb
mov
fwait
sub
adc
dec
sub
movsb
push
xchg
mov
int3
clc
jge
inc
or
inc
arpl
xor
mov
movsl
xlat
stos
xor
jge
outsl
sbb
or
inc
lock
add
push
pop
adc
mov
dec
fstpl
jns
inc
imul
fs
pop
stos
lahf
xchg
adc
xor
mov
or
ret
pop
pop
inc
stos
sbb
push
rcr
fnstcw
jo
xor
stos
lahf
sub
dec
inc
mov
out
sbbl
divb
js
jb
jmp
push
mov
add
out
rep
adcl
jmp
std
cli
loop
popf
loope
iret
enter
ror
js
gs
ja
pop
xchg
xchg
sti
push
inc
xchg
repz
imulb
xor
mov
add
ds
scas
inc
enter
or
popa
stos
gs
pop
mov
push
roll
test
call
fcmovu
lret
adc
add
lods
pop
popf
stos
mov
or
ret
data16
subb
sbb
out
jmp
inc
popf
mov
mov
jmp
test
fidivrs
sbb
lods
mov
pop
stos
insl
jnp
pop
jmp
lahf
imul
test
cmp
gs
push
out
push
iret
ficoml
sub
es
mov
fcomps
movsb
cmp
adc
ret
xchg
stc
and
xchg
cwtl
xor
xchg
adc
jmp
and
xor
mov
aad
stos
mov
mov
xor
mov
std
mov
stos
cmp
cmp
stos
outsb
and
sbb
pop
push
ljmp
or
shlb
fbld
inc
ljmp
jo
or
lock
sub
fcompl
dec
inc
adc
lods
mov
paddb
jo
pop
mov
inc
loopne
lods
inc
jmp
aaa
inc
outsb
jns
push
xorl
sbb
bound
or
loope
mov
stos
adcl
test
imul
xchg
jmp
rclb
lcall
ljmp
call
mov
rep
cltd
aas
rep
mulb
jmp
push
lcall
cmp
cwtl
stos
and
daa
sbb
jmp
je
jmp
int3
cld
xlat
jo
and
mov
xor
xor
mov
push
dec
cmpsb
imul
mov
push
push
mov
popa
add
popf
int3
loopne
sahf
arpl
mov
xor
enter
sub
add
xor
shrl
pop
test
es
jp
jnp
xchg
stos
sti
inc
inc
hlt
and
sub
jb,pn
jl
lods
sub
jns
fidivrl
dec
adcb
test
bound
cltd
inc
stos
pop
in
mov
ljmp
xchg
loop
stos
mov
push
xchg
lcall
add
sbb
mov
insl
jns
mov
xor
rolb
call
scas
and
scas
mov
adc
stos
out
popl
sbb
dec
xor
cmp
sub
stos
pop
test
xor
inc
dec
ljmp
call
dec
sbb
cmp
iret
sub
and
xor
fiadds
int
dec
mov
mov
daa
sbb
pushf
stos
jmp
lea
insl
addb
addr16
lea
imul
inc
das
imul
push
inc
push
stos
inc
in
sub
fadd
ds
xchg
and
sti
imul
jmp
inc
pop
fdivl
or
cmpsl
ljmp
push
lahf
inc
pop
or
xor
stos
ss
push
push
shl
mov
stos
cmpsb
xchg
or
test
sahf
sub
cltd
in
mov
dec
out
mov
into
cmp
stos
movsb
dec
pop
arpl
int3
inc
jo
add
hlt
inc
mov
adc
pop
xchg
stos
xor
pop
push
nop
jnp
stos
iret
jno
adcl
dec
mov
jmp
insl
cli
cmp
movl
add
subl
loopne
call
xchg
insb
stos
xor
xor
gs
sti
adc
scas
stos
lret
sbbl
sbb
out
xor
pcmpgtw
aam
scas
dec
pop
fwait
aaa
and
dec
in
cs
push
jns
lea
dec
out
stos
inc
dec
call
leave
stos
mov
mov
fwait
or
arpl
stos
test
enter
xor
add
sub
stos
dec
test
sahf
lret
inc
rorb
les
ljmpw
or
fcmovbe
mov
addr16
cs
mov
mov
testb
mov
sti
fcomps
jbe
test
cmc
xchg
lret
xchg
std
adc
in
cmp
jb
pop
add
cli
mov
aam
fwait
stos
cmp
in
ljmp
mov
mov
stos
sbbb
mov
mov
and
pmullw
sar
stos
mov
dec
pop
test
or
pop
pop
stos
in
insb
sub
rorl
sbb
in
out
stos
sub
push
add
mov
stos
cli
aas
ret
or
pop
stos
pop
push
xor
stos
jne
sub
arpl
fldcw
inc
fwait
or
jo
dec
mov
push
iret
or
fistps
outsl
stos
jno
imul
leave
scas
in
cmc
rorb
mov
lahf
popf
test
cli
jecxz
or
lods
daa
js
cmp
jge
cs
aas
popf
stos
pusha
lds
mov
add
jl
stos
outsl
mov
insb
aam
jmp
out
push
fnstsw
fisubs
xor
mov
stos
imul
mull
jo
hlt
es
ds
cmp
sub
std
lret
pop
pop
adc
insl
pop
mov
stos
cmp
mov
icebp
test
inc
fwait
inc
ret
add
jmp
scas
push
xlat
js
lods
inc
ljmp
pop
fiadds
sub
mov
cwtl
mov
xor
mov
inc
scas
lahf
les
clc
mov
out
push
lods
stos
jbe
out
cltd
scas
dec
sub
xor
add
fcoms
mov
xlat
outsl
cmpsl
dec
mov
mov
xor
push
push
jge
call
inc
and
adc
in
jnp
xor
add
push
mov
mov
sbb
xor
out
adc
repnz
arpl
lcall
push
add
les
lea
push
lds
cwtl
inc
inc
lea
cmpsb
das
repnz
or
add
dec
es
aaa
inc
inc
sub
aad
push
nop
xor
stos
scas
in
out
or
fsubrl
push
mov
jo
imul
out
aam
cmp
push
mov
lahf
mov
data16
mov
loop
push
stos
ljmp
jl
xor
mov
push
mov
aam
aaa
mov
jp
xchg
and
push
scas
mov
jmp
cld
xchg
xor
enter
je
cs
adc
push
inc
jnp
lods
xchg
aas
int3
sub
sbb
stos
jo,pn
xor
stc
pop
jbe
insb
sub
stos
cld
inc
fdivrl
imul
push
out
lds
fadds
cmp
popa
jge
ja
xor
daa
test
dec
and
sti
mov
mov
jbe
inc
stos
sbb
ret
push
add
add
les
movsl
sub
es
adc
mov
sbb
or
push
mov
aad
pop
fwait
cmp
jecxz
xor
ljmp
outsl
push
pop
nop
fs
popf
idivl
rcll
andl
arpl
push
xchg
in
cwtl
test
xchg
jg
xchg
shrl
shlb
enter
testl
adc
pop
mov
nop
xor
jnp
stos
rcrl
mov
cs
dec
frstor
and
cmp
sub
and
in
pop
or
stos
sarl
sti
jnp
shll
add
rcrb
lahf
dec
jg
movsb
pop
mov
stos
lods
pushf
stos
addr16
arpl
stos
xchg
insl
add
xchg
test
stos
lret
mov
test
dec
push
outsb
setae
pop
xchg
add
fsubp
jne
pop
shll
stos
xor
cmp
stos
cmp
out
negl
test
xor
in
dec
popf
js
jg
lea
jnp
inc
mov
arpl
mov
mov
out
ljmp
inc
mov
jle
adc
test
mov
scas
xchg
lods
cmp
out
push
mov
jne
xchg
inc
imul
jmp
push
pop
aas
or
and
and
orb
mov
inc
out
ret
sbb
ljmp
xchg
movsb
dec
xchg
out
stos
loopne
push
sub
stos
add
or
daa
and
and
dec
push
jb
ds
test
popf
scas
enter
shr
imul
outsb
cs
xchg
sbb
sub
mov
xchg
loopne
fwait
push
addb
and
cmc
stos
inc
and
adc
mov
jmp
daa
repnz
xchg
inc
mov
push
xor
in
mov
pop
shrb
push
fmull
jo
xor
lods
imul
movsb
daa
mov
std
mov
push
cmp
cmpsl
mov
aas
inc
and
popf
cmpsb
jmp
ss
fldt
jae
sbb
je
or
and
cmp
arpl
bts
scas
mov
jmp
mov
daa
bound
lock
pop
add
mov
xchg
js
adc
mov
mov
ja
cld
mov
movsl
jge
xchg
das
stos
xchg
fisttps
pop
and
sbb
xchg
dec
push
popl
fsubrs
enter
push
stos
addl
stos
lods
lds
pop
pop
into
adc
dec
daa
rcrb
paddw
movsl
stos
xor
pop
iret
popf
mov
mov
sub
inc
stos
xor
test
std
ret
stos
dec
data16
dec
push
das
movsl
fisubrl
movb
adc
stos
mov
push
adc
adc
lock
pop
daa
or
addl
out
addr16
lret
pop
in
xorl
dec
pop
cmc
leave
dec
movsl
stos
js
dec
cltd
inc
stos
jno
push
xor
rcrb
es
adc
xchg
mov
push
sub
stos
xlat
push
dec
xor
out
add
cmpsb
mov
push
jno
xchg
mov
mov
scas
adc
sub
mov
fimuls
xchg
je
xor
mov
xor
in
pop
xchg
mov
loope
and
push
and
or
push
adc
imul
mov
and
repnz
icebp
mov
rcll
sbb
cwtl
int
mov
pop
adc
cmp
cmp
cld
xchg
stos
jno
mov
stos
mov
mov
imul
negl
inc
mov
pusha
cmpsl
and
mov
cld
fildl
sbb
sub
lea
stos
in
fcompl
stos
adc
jg
pop
or
adc
inc
stos
outsb
xchg
test
repnz
sar
push
pusha
jg
aaa
and
jae
and
fwait
cmp
pop
mov
stos
mov
outsb
fucomip
mov
xor
fiadds
cmc
stos
cwtl
sarl
lock
enter
js
inc
stos
idivb
nop
sti
adc
data16
inc
xlat
imul
and
pop
mov
stos
aad
mov
dec
mov
mov
dec
xchg
daa
add
rorl
mov
icebp
cmp
stos
clc
jno
pop
inc
or
popf
stos
lock
es
push
movsb
out
pop
in
fld
fwait
push
out
push
pop
mov
sbb
lea
mov
addr16
gs
hlt
fisttpl
add
mov
jecxz
stos
push
mov
inc
inc
popa
dec
je
lock
scas
mov
test
stos
in
jne
or
jmp
filds
xchg
jg
mov
stos
xchg
sub
cmpsb
xchg
cmp
sti
mov
movsb
sub
test
shrb
sbb
sbb
test
insb
xor
shll
sbb
cmp
stos
sti
cmp
mov
cmp
es
test
jle
add
fisubs
testl
mov
pop
and
mov
or
xchg
out
stos
sbb
outsb
nop
adc
sahf
add
lods
loopne
sti
cmp
or
mov
jg
loop
add
stos
fwait
xor
push
loope
test
std
and
dec
imul
aaa
sbb
insb
xor
in
aas
arpl
and
lahf
aam
adc
stos
inc
in
push
sbb
cmpsl
inc
dec
xor
xchg
ret
out
shll
inc
mov
pop
fwait
imul
jge
pop
mov
jno
jbe
mov
or
xchg
jne
pop
dec
mov
fwait
sti
imul
xchg
push
mov
test
mov
xchg
pop
mov
mov
stos
pop
jno
rorb
dec
cmp
imul
xchg
mov
dec
pop
jmp
pop
aaa
cmp
xchg
sbb
lret
push
stc
std
cltd
outsl
imul
fsubs
add
clc
fstps
test
out
jecxz
subl
mov
sahf
cmp
iret
pop
cwtl
pushl
int3
test
adc
cld
adc
push
push
xchg
call
stos
mov
mov
xchg
lret
sbb
jmp
jmp
or
rcl
mov
push
dec
lret
fcom
xchg
mov
or
mov
sahf
mov
jae
gs
outsb
sbb
push
xchg
xor
fmuls
ja
stos
test
xchg
clc
push
pusha
sbb
add
aad
lcall
adc
mov
xlat
stos
sub
push
imul
shl
aas
xchg
stos
dec
gs
mov
arpl
sub
test
mov
shrb
mov
fisttpll
cmp
xchg
cmp
stos
jne
mov
clc
gs
mov
lahf
dec
cli
mov
xchg
imul
fwait
stos
or
add
add
aas
add
cwtl
mov
call
jge
push
push
loop
or
mov
inc
stos
arpl
and
stos
subl
stos
inc
xchg
and
aaa
cli
mov
loope
in
aaa
mov
mov
stos
push
fwait
adc
jecxz
notl
stos
or
sub
stos
xor
pop
clc
lcall
stos
sub
adc
lods
or
stos
test
mov
adc
ja
in
aaa
add
pop
hlt
dec
sub
pop
out
je
ljmp
push
stos
pop
aad
and
inc
xchg
xor
loopne
mov
sub
jmp
movsl
jnp
jo
imul
mov
mov
mov
mov
mov
or
ret
or
stos
ds
push
int3
or
push
std
sbb
sbb
mov
daa
stos
or
rorb
mov
jle
and
push
stos
leave
pop
dec
rcrl
idivl
mov
mov
es
movsl
gs
mov
mov
lods
decl
lret
stos
xchg
adc
push
mov
cmpsb
mov
repnz
sub
stos
rolb
jecxz
arpl
inc
mov
pusha
inc
xchg
cmp
stos
int
or
call
out
ds
mov
add
scas
mov
movsb
sbb
and
push
or
lcall
fcmovnb
daa
adc
jl
inc
ss
addl
add
sarl
mov
cmp
loopne
xor
leave
stos
add
psrlq
cwtl
test
mov
dec
push
add
xor
xlat
movsb
loop
or
xchg
mov
sbb
lret
insl
nop
addl
imul
push
inc
movsl
stos
push
dec
jge
jo
inc
jae
dec
shrl
out
jl
mov
popf
push
fwait
sbb
sbb
mov
fdivrl
addr16
push
imulb
add
push
sti
addr16
xor
repnz
adc
xor
gs
shl
lock
stos
cltd
and
mov
test
stos
clc
dec
inc
jl
jo
es
xor
push
mov
and
jns
outsb
dec
fidivrl
jmp
jno
add
pop
xchg
popa
add
testl
test
stos
jns
pushf
inc
jne
sub
dec
gs
inc
mov
daa
inc
push
xchg
jge
inc
cwtl
psubusb
stos
cmpsb
or
fcoml
mov
pushf
mov
stos
stos
xchg
cmp
stos
jle
cmpsl
rolb
fnstenv
jg
inc
sbb
insl
fsubrl
lods
jbe
add
es
cwtl
ss
or
dec
dec
inc
int
stos
push
pushf
call
fmull
test
nop
ror
stos
add
dec
mov
movsb
or
stos
in
or
push
push
mov
cmp
jmp
mov
inc
or
jbe
pop
stos
adc
jl
shll
adc
lds
insl
mov
dec
cmc
sti
sbb
stos
xchg
imul
adc
mov
xor
lcall
mov
mov
fwait
stos
push
xor
dec
sub
cmp
jne
mov
int3
fwait
inc
jecxz
adc
stos
js
fldcw
lret
dec
sbb
dec
cmp
cmpl
pop
fnstcw
mov
stos
test
pop
fbld
mov
dec
insl
or
cli
or
mov
and
daa
mov
cmpsl
mov
imul
sub
cmp
repnz
in
cmove
cmpsb
stos
push
xor
cltd
lock
sub
jmp
fnstcw
mov
sub
int
cltd
jg
mov
aam
mov
lea
jmp
mov
out
adc
shl
hlt
adc
dec
stos
dec
test
jl
mov
or
push
jge
or
stos
or
aad
scas
out
pop
mov
stos
test
js
stos
pushl
stos
adc
push
repz
jae
dec
jecxz
sbbl
xlat
bound
out
push
stos
xor
lods
or
xor
cmp
jns
and
nop
mov
fsubrl
stos
cmpsb
in
xchg
ror
xchg
sti
fwait
pop
xor
stos
shlb
lahf
pop
rcrl
cwtl
stos
mov
mov
mov
inc
int
inc
stos
mov
stos
inc
sar
fwait
pop
jb
stos
jmp
in
adc
stos
sbb
lea
lcall
sub
jae
jl
ja
jge
fcomps
addr16
lret
cmc
dec
imul
stos
push
les
loop
pushf
sub
xor
dec
es
sub
iret
or
push
stos
sbb
push
lds
sbb
imul
adc
cwtl
xchg
and
fildll
test
adc
jmp
xchg
pop
bound
xchg
xchg
jg
imul
xchg
loop
mov
cli
mov
push
popl
cli
imul
mov
daa
mov
inc
aad
in
dec
xlat
fcmovu
data16
inc
stos
mov
and
xor
add
es
mov
shrb
dec
clc
and
adc
imul
pop
jns
loopne
push
negb
cmc
dec
push
negl
gs
stos
scas
push
scas
mov
mov
pop
and
sarb
xchg
mov
insb
mov
adc
pop
add
mov
mov
and
xchg
int
enter
mov
imul
mov
dec
and
stos
mov
adc
inc
sahf
or
push
imul
in
pop
stos
filds
scas
shrb
inc
mov
inc
out
dec
jno
das
xor
in
int3
rcl
jns
lods
movsb
imul
or
jmp
dec
ret
cmpsl
dec
jg
inc
sbb
cmp
imul
fbld
xor
stc
fwait
push
sbb
stos
int
inc
lahf
popf
pop
shlb
mov
mov
add
dec
and
xchg
lods
stos
mov
mov
ja
mov
jecxz
stos
jmp
mov
xor
shlb
inc
aas
stos
mov
stos
scas
pop
sahf
mov
int
roll
scas
shrb
push
outsb
sub
and
pop
sbb
ljmp
add
inc
scas
mov
cld
and
jo
sub
inc
pop
mov
mov
aam
xchg
pusha
adc
repnz
cmpb
fcmovnu
and
stos
imul
out
stos
hlt
sbb
inc
lahf
inc
es
push
xlat
ret
mov
dec
orb
xchg
push
pop
mov
add
stos
fsubl
orl
imul
add
imul
stos
sar
pop
in
ret
into
ds
inc
iret
leave
mov
inc
push
out
mov
fdivp
dec
stos
insl
mov
sub
fdivrs
mov
pop
cli
lods
dec
arpl
in
adc
sarb
cmc
mov
jb
push
arpl
adcb
xchg
stc
pushf
adc
sub
cmp
sti
stos
mov
gs
fisubl
lcall
lret
or
lahf
inc
jmp
out
insb
addl
jmp
test
mov
test
xchg
js
lods
les
outsl
pop
add
jns
adc
ja
xchg
lret
stos
lds
out
pop
pusha
in
loopne
cmp
and
shll
arpl
adc
pop
stos
push
or
out
repz
repnz
xchg
sti
mov
push
mov
and
arpl
xchg
push
sbbl
imull
jle
pop
aam
cli
stos
data16
and
mov
in
push
pusha
mov
call
stos
xchg
mov
scas
ds
pop
mov
push
arpl
mov
jmp
mov
jge
fdivrs
mov
fildl
pop
cmc
clc
imul
xchg
movsl
mov
in
fwait
clc
xor
loope
imul
mov
stos
inc
loopne
ljmp
pop
jne
insl
xor
dec
adc
and
stos
mov
mov
mov
adc
stos
xor
xor
pop
stos
mov
stos
insl
stos
orl
xchg
in
pop
stos
jmp
loop
daa
adc
mov
leave
icebp
bound
xchg
mov
add
sbb
mov
jge
out
pushf
stos
or
xchg
mov
add
add
fnstcw
fsub
stos
inc
jb
mov
daa
dec
push
sub
andl
imulb
ds
flds
lds
shrl
clc
mov
xlat
mov
movsl
add
int3
imul
xor
adc
or
stos
cmp
insl
ds
inc
cmp
das
lods
jnp
inc
and
push
sub
mov
stos
jle
shlb
stc
outsl
lahf
iret
jbe
mov
mov
xchg
leave
jl
and
cmp
cld
or
stos
imul
stos
mov
shlb
js
sub
mov
test
jo
xchg
push
shlb
inc
inc
xchg
lods
inc
jg
pop
lods
nop
stos
inc
arpl
std
jp
pop
adc
mov
sbb
xchg
mov
stos
xor
out
fwait
loope
sub
sti
fidivs
repz
and
imul
sub
cmp
popf
lds
inc
sub
pop
push
mov
cmp
jbe
std
push
sbb
and
scas
sarb
outsl
stos
out
bound
les
dec
xor
adc
sbbb
inc
imul
xor
add
out
test
out
jp
add
pop
fimuls
mov
inc
js
sub
seta
jb
push
cmp
stos
mov
and
mov
jae
icebp
test
cmp
mov
sub
loopne
cmp
cmp
out
js
inc
inc
jmp
cmp
scas
pop
fsubrl
bound
mov
in
fists
sahf
and
stos
sbb
les
popf
mov
in
mov
mov
fwait
cli
popf
jae
stos
das
lea
mov
stos
sbb
loop
add
cmpsl
sti
fwait
jnp
jg
dec
pop
stos
nop
sbb
push
or
std
mov
xor
repnz
daa
add
mov
mov
stos
fildl
sbb
mov
rcl
popa
cmpsl
lret
adc
stos
shll
outsb
leave
stos
jbe
adc
arpl
push
xchg
icebp
iret
hlt
cwtl
in
stos
cmp
jp
xor
stos
cmp
push
cmpb
addr16
cltd
jle
lods
pop
add
test
stos
adc
paddb
movsb
stos
add
mov
icebp
lds
sar
or
mov
cs
inc
sbb
xchg
ljmp
jnp
sbb
ret
pop
pop
push
mov
jnp
mov
pop
push
insb
cmpl
cs
and
cmp
dec
or
xor
adc
dec
pop
xchg
inc
stos
cmc
fmull
pop
in
xor
jp
lret
fwait
testb
in
mov
jae
mov
stos
xor
std
js
jns
jmp
dec
inc
movsb
lods
jp
imul
xchg
dec
stos
mov
or
loopne
std
in
std
inc
and
fs
dec
cltd
mov
mov
out
das
gs
into
push
push
sub
ret
lret
push
lock
xchg
stos
imul
mov
int3
jb
dec
and
js
jmp
xchg
sub
and
jl
imul
pop
das
aaa
mov
jge
stos
xchg
jecxz
out
inc
stos
cwtl
stos
outsb
mov
stos
sub
inc
lods
stos
mov
in
mov
stos
mov
notl
jg
loop
inc
in
cwtl
stos
pop
sub
adc
xchg
jmp
daa
pop
pop
and
cmpsb
leave
stos
scas
lahf
sbb
stos
js
sbb
icebp
mov
test
sahf
repz
daa
inc
aaa
lds
insl
frstor
jb
or
sbbl
pop
mov
or
fisubrs
sti
push
gs
cld
and
mov
in
fistl
fucom
inc
mov
stos
mov
xor
or
mov
xchg
jmp
in
shr
add
jp
cmp
lahf
cwtl
stos
push
pop
leave
sbb
in
or
jl
aad
int3
stos
inc
cmp
pop
push
repnz
mov
push
xchg
mov
stos
dec
xchg
jns
imul
stos
mov
or
push
mov
dec
sub
xchg
mov
mov
out
stos
xor
data16
stc
adcb
ror
aas
cmp
and
das
jl
push
cmpb
fstsw
stos
lea
jge
inc
fsubrp
stos
scas
mov
sub
loopne
test
lods
jmp
push
adc
cmp
cld
push
add
ljmp
inc
xchg
sub
pop
mov
mov
loopne
or
jmp
roll
outsb
and
lods
daa
arpl
aas
pusha
mov
adc
stos
loop
mov
movl
xchg
shl
cmp
cmp
testl
add
push
mov
ret
cmp
stos
jp
movsb
popa
rol
shr
inc
jo
pop
lock
mov
loopne
cld
lods
add
daa
aam
sbb
sysexit
mov
lds
or
stos
addr16
jmp
jb
pusha
push
mov
adc
xchg
xchg
xchg
fldt
add
loope
aad
dec
mov
xchg
adc
pop
fstp
imul
ljmp
imul
inc
shr
movsb
push
and
stos
add
inc
mov
xor
and
sahf
stos
sub
mov
fmuls
js
fnstenv
icebp
mov
pop
xchg
std
pop
mov
inc
inc
xchg
stos
or
or
shll
lret
push
stos
mov
stos
pop
pop
ljmp
adc
enter
stos
fdivr
cmp
sub
dec
xchg
lcall
arpl
mov
rorb
lret
icebp
pushf
adc
add
xor
in
fisttps
stos
add
cld
or
shlb
mov
jne
xchg
xchg
cmp
xchg
push
or
stc
and
fnstenv
int3
into
ljmp
fwait
dec
fdivs
imul
in
loope
mov
sti
daa
int3
lcall
loopne
add
inc
jg
stos
mov
sbb
rolb
insl
sub
push
loopne
dec
and
dec
add
stos
mov
cmp
pusha
fistl
stos
cli
xor
mov
and
xchg
subb
mov
cltd
dec
cmp
sbb
sub
aas
shrl
mov
int3
mov
movsb
mov
add
faddp
sbb
mov
jecxz
subb
add
cmpsb
popf
mov
pop
mov
dec
xor
fwait
clc
mov
xor
fisubrl
cmp
popf
stos
repz
dec
sub
out
push
pop
xchg
xchg
xchg
xor
daa
imul
std
mov
jg
mov
xchg
shrl
pop
push
pop
jno,pn
add
xchg
or
mov
test
push
fcom
inc
icebp
fmul
stos
xchg
lahf
sub
stos
jp
popf
test
mov
fbstp
and
pop
sahf
sub
ja
xor
nop
jecxz
inc
iret
jo
jg
in
pop
mov
les
lods
inc
mov
lahf
dec
cmpsb
mov
add
subb
stos
jg
jo
insb
mov
mov
cmp
pop
imul
mov
vldmxcsr
push
hlt
aam
jmp
or
inc
add
lcall
enter
loope
iret
xchg
pop
sub
push
mov
ss
xor
sub
inc
stos
and
fcmovb
addr16
add
mov
or
pop
inc
outsl
pop
xor
fidivs
jmp
inc
repnz
mov
dec
adc
pop
inc
xor
cmp
jmp
pop
clc
lds
cmp
pop
ficoml
outsl
pop
push
leave
jne
or
mov
stos
imul
inc
xor
add
xor
in
out
stos
pushf
sbb
call
stos
sub
adc
push
movsb
jmp
das
sbb
and
sbb
mov
dec
lea
xacquire
ljmp
mov
mov
sahf
jb
add
jnp
std
xor
jo
xchg
fdivr
test
cs
mov
fisubrl
lahf
pop
or
imul
andb
lods
pusha
loopne
addb
nop
or
out
jmp
pop
dec
push
imul
cltd
incl
lea
loope
std
enter
dec
jo
inc
sbb
mov
std
jmp
es
lret
or
mov
ljmp
bound
stos
xchg
dec
iret
hlt
mov
and
addb
pop
stos
and
movsb
insb
int
mov
add
push
imul
into
in
cltd
movsl
nop
data16
dec
bound
jmp
mov
nop
add
push
or
xor
insl
lret
inc
jp
mov
stos
in
das
cwtl
orl
imull
pop
sarb
pop
std
or
ljmp
stos
movsb
xchg
jp
and
dec
jo
sub
mov
pop
popa
jns
lods
mov
roll
inc
fwait
sbb
mov
sti
addr16
and
mov
stos
sbb
cmc
and
in
push
xor
outsb
xor
nop
ljmp
stos
imulb
pop
int3
stos
pop
popf
ret
shrl
jnp
sbb
aas
dec
pop
movsb
icebp
fwait
testl
adc
movsl
adc
jp
dec
ret
jle
cmp
push
mov
jo
or
jl
mov
shrb
fimull
arpl
push
inc
aaa
mov
adc
add
mov
test
sbb
in
jo
stos
pushf
decb
jb
int3
or
mov
mov
stos
jmp
incb
testl
jae
call
lea
dec
push
ror
push
stos
sub
add
jecxz
arpl
add
push
movsl
mov
jp
shlb
jmp
ja
call
mov
stos
nop
xchg
xchg
cmp
xor
cmp
pop
or
cmp
pop
dec
stos
js
test
loop
notl
mov
inc
mov
and
negb
ss
add
lahf
sbb
push
fcmovnb
fucomip
lods
mov
stc
nop
inc
arpl
stos
sub
sub
lret
iret
out
jmp
adc
push
mov
push
clc
stos
movsl
je
mov
push
xor
imul
out
aad
add
stos
sbb
jne
adc
inc
push
and
sub
rcrl
xchg
loop
stos
imul
jne
mov
jnp
push
mov
jmp
test
adc
aam
ret
cltd
out
sahf
stos
mov
lods
pushf
cmpsl
or
sbb
call
mov
xor
pop
mov
or
sub
xchg
add
and
or
mov
push
push
jg
fwait
xlat
xor
xor
stos
lcall
cwtl
mov
ret
movsb
or
stos
out
mov
mov
stos
push
lock
jg
or
xchg
mov
stos
add
jnp
adcb
push
addr16
xor
push
push
push
stos
insb
sarb
pop
int
mov
std
dec
mov
sbb
push
adc
sub
adc
push
inc
jecxz
mov
sub
or
jns
mov
pop
pop
dec
stos
dec
pop
xor
xchg
icebp
out
mov
jb
notb
sub
sbbb
mov
ds
xchg
jle
sbb
jmp
leave
cwtl
cs
mov
xchg
mov
int3
sub
dec
sub
xchg
sbb
enter
pop
test
cli
dec
xchg
stos
mov
aaa
out
dec
jnp
shll
out
mov
mov
inc
fs
arpl
lahf
mov
mov
mov
mov
mov
lock
stos
nop
push
mov
aad
fstl
adc
stc
mov
xchg
loop
jg
sub
push
xor
jl
jae
cmp
call
mov
inc
inc
push
adc
stos
jno
jnp
jecxz
hlt
push
jmp
lods
add
std
addr16
xchg
mov
leave
lds
xchg
iret
shlb
fwait
stos
inc
cmp
or
jb
clc
decb
mov
pop
fisttpl
inc
cld
ljmp
mov
repnz
stos
add
xlat
idivb
or
rol
nop
xchg
movsl
stos
mov
adc
outsb
push
repnz
mov
sahf
xchg
mov
sub
inc
nop
loope
stos
adc
jecxz
push
std
or
mov
adc
pushf
fwait
test
ds
ret
sti
mov
mov
push
addl
jae
mov
sbb
stos
ror
or
jp
jmp
pop
xchg
xchg
mov
stos
rol
mov
push
or
aam
mov
test
inc
xor
stos
add
dec
out
push
adc
les
loop
sbb
sbb
mov
lea
jmp
mov
jne
adcl
mov
arpl
inc
mov
xchg
mov
xor
add
mov
mov
loop
mov
test
ja
xchg
xor
push
jnp
pushf
push
jne
fwait
out
cld
lods
lock
stos
mov
mov
enter
dec
lods
int
dec
stos
xor
xlat
lret
movsl
enter
push
mov
xor
push
imul
jl
or
jae
and
les
cwtl
mov
mov
pop
stos
cmp
movsb
call
out
movsl
popa
cld
test
nop
fisubs
mov
stos
inc
icebp
mov
bound
mov
mov
lods
push
subl
stos
jmp
xchg
pushf
jle
xor
int
clc
dec
mov
test
push
stos
cmp
sarb
dec
cltd
xor
scas
sub
lret
mov
sahf
xchg
jmp
push
mov
lcall
test
inc
nop
pop
inc
dec
mov
loopne
push
jnp
push
sbb
fists
adc
or
stos
cmpsb
push
pop
lcall
dec
mov
ja
lahf
sub
fidivrs
hlt
add
psubsb
ja
fwait
shrb
cmp
cmpsl
icebp
jnp
shrl
in
cmp
xor
nop
cmp
clc
sub
div
jge
cli
int3
imul
sbbl
insb
cs
push
add
dec
pusha
adc
push
addl
push
cmpsl
movsl
subb
cli
dec
jno
out
and
xchg
push
addr16
lcall
lock
out
pop
stos
loopne
in
cmpsl
push
test
stos
mov
repnz
cmp
stos
in
shlb
sarl
mov
fistpl
mov
xlat
jecxz
push
je,pn
pop
stos
sub
pushf
xchg
out
insl
inc
imul
and
push
mov
mov
mov
arpl
xor
stos
and
cmc
dec
or
stos
cmp
scas
dec
xor
stos
xchg
jo
add
out
xor
mov
stos
jl
in
sub
push
or
sbb
mov
or
fsts
xor
xchg
outsb
imulb
pop
movl
cmpsl
gs
inc
popf
lods
scas
add
imull
dec
into
in
jmp
pop
inc
add
cmp
addr16
push
mov
push
in
xchg
aas
pop
icebp
jmp
bswap
add
sub
rcll
out
stos
xchg
filds
stos
pushf
outsb
jo
mul
xor
stos
jl
adc
cmp
or
jecxz
mov
inc
push
add
and
pusha
in
mov
pop
lods
push
outsl
stos
add
es
adc
push
stos
iret
jnp
dec
popa
cmc
xchg
add
dec
push
ret
rorl
imul
mov
mov
or
inc
leave
les
inc
sar
jp
xchg
stos
shll
pop
stos
adc
fiadds
js
out
addr16
mov
cmp
imul
xchg
pop
mov
in
cmp
push
shll
ret
push
push
or
fwait
sbb
aas
stos
xchg
add
push
push
shlb
mov
sti
sbb
dec
or
popf
and
or
xchg
scas
cld
daa
rcll
xchg
push
pop
dec
add
mov
pop
push
mov
push
push
push
stos
imulb
je
lods
xchg
stos
push
and
int3
daa
cmp
adc
fisubs
jge
jne
iret
sub
popf
cltd
pushf
subb
push
sub
and
stos
bound
orl
lret
jl
push
insl
stos
mov
cmp
out
sti
mov
hlt
or
fdivl
or
into
jnp
fs
pusha
pop
mov
mov
out
mov
and
in
fsubl
jmp
mov
push
lret
bts
mov
or
fsts
dec
stos
loopne
enter
lea
pop
and
ret
rclb
mov
stos
into
adc
stos
nop
out
add
ret
cmc
or
stos
lods
mov
mov
lods
stos
and
cmp
mov
aaa
imul
jmp
mov
stos
mov
and
jmp
xor
in
cld
stos
or
addr16
adc
shlb
fs
sub
ljmp
aas
adc
mov
aas
aam
inc
in
dec
jg
jmp
sub
adc
pop
nop
stos
mov
sahf
repnz
stos
sarb
jle
sbb
sub
lods
lock
repz
adc
and
xchg
stos
addr16
out
aas
jge
add
les
insb
mov
scas
adc
stc
jbe
sbb
mov
out
gs
mov
addr16
mov
mov
aaa
jge
filds
lods
mov
aas
int3
repz
out
movsl
pop
stos
stos
sub
into
fsubrs
xchg
push
and
mov
adc
sub
cmp
ja
stos
and
cwtl
inc
stos
add
pop
mov
stos
lds
mov
in
jae
xor
testb
dec
dec
dec
leave
or
push
adc
mov
cld
add
adc
insl
imul
inc
xor
stos
pop
mov
lds
in
loopne
mov
dec
and
stos
repnz
ret
inc
jp
xchg
lea
adc
jns
sti
dec
mov
sbb
mov
push
pop
popl
push
jnp,pt
fwait
mov
jmp
jmp
out
inc
xor
lock
xchg
in
jae
stos
scas
cmp
ljmp
or
pop
xchg
mov
stos
pop
sbbl
insl
sub
loop
je
xchg
fcomps
or
stos
mov
das
push
movsb
imul
mov
lret
mov
rorl
stos
cltd
dec
push
lds
scas
rep
or
dec
and
subl
xor
push
push
or
cmp
xor
dec
lock
push
lds
sub
movsl
std
dec
or
mov
cmp
shll
and
pop
mov
stos
imul
sub
push
movsb
mov
add
aad
jcxz
mov
out
mov
and
adc
fwait
push
test
pop
arpl
jmp
and
mov
sub
mov
pop
adc
push
xchg
adc
mov
in
and
outsl
sbb
jg
cmp
adc
call
leave
mov
adc
stos
or
stos
jae
in
cmp
fbld
addr16
int3
stos
ss
and
cmpsb
pop
inc
dec
mov
lret
fsts
ds
fwait
mov
lret
xchg
rorb
sbb
sub
test
jmp
inc
stos
hlt
fildl
cmp
lea
int
ja
sti
and
fldt
xchg
mov
jecxz
stos
cmc
pop
test
aam
xchg
sti
jnp
in
push
nop
stos
enter
cmp
int
and
push
stos
xor
sbb
pop
inc
aad
negb
testl
nop
lds
cli
mov
stos
mov
imul
in
std
mov
inc
stos
push
mov
js
addr16
xor
dec
mov
jmp
or
test
jnp
cmc
adc
pushf
stc
stos
jo
inc
pop
mov
fdivr
sti
inc
adcb
fbstp
jae
push
fnsave
rcrl
inc
xchg
data16
stos
icebp
sbb
push
stos
pop
leave
or
mov
cmp
cmp
xor
mov
fwait
test
mov
out
mov
mov
test
or
scas
adc
jbe
xor
add
addr16
addl
sahf
outsl
pop
sbb
ret
fmull
mov
ds
shll
stos
xchg
sti
add
mov
cltd
adc
mov
xlat
mov
std
inc
sub
mov
movsb
stos
xchg
in
mov
adc
test
fwait
out
fdivrl
sahf
jae
xchg
xchg
pop
into
stos
stos
dec
push
imul
xchg
outsl
mov
les
jne
cmp
sbb
subb
mov
push
or
iret
je
lods
push
mov
mov
xchg
arpl
cld
lods
pop
pop
xchg
or
imul
daa
stos
xlat
incb
add
arpl
je
adc
cmp
jnp
lret
mov
stos
sti
int
dec
clc
pop
mov
ficoms
mov
hlt
aaa
mov
das
jmp
lcall
inc
popa
fs
call
xchg
add
sbb
pop
cmp
aam
fisttpll
inc
mov
xchg
add
stc
push
aaa
pop
call
ljmp
stos
je
fisttpl
mov
dec
mov
fmuls
jl
push
addr16
loope
dec
hlt
stos
xchg
repnz
icebp
sbb
and
cli
push
push
shrl
mov
mov
daa
cmp
lods
mov
fidivrs
stos
fs
mov
xchg
mov
mov
rcr
push
and
mov
loope
stos
cld
inc
cmc
cltd
mov
xchg
mov
sbb
sbb
stos
push
xor
cltd
adc
push
es
dec
mov
test
jbe
xor
jmp
jl
cmp
mov
jae
cmp
mov
imul
mov
out
adc
fistpll
xlat
mov
mov
cltd
jg
sbb
dec
inc
xchg
stos
in
sub
push
mov
push
stos
jne
ja
fadds
fincstp
imul
out
xor
rcrl
frstor
icebp
rep
mov
jge
jmp
dec
adc
testb
dec
aaa
mov
adc
cmpsb
sbb
jmp
into
daa
cmp
push
fstpl
fwait
aas
pop
ja
mov
cmpsb
stos
add
int3
out
popf
inc
ljmp
jb
cmp
rol
stos
push
fistpl
stos
aam
lret
push
inc
pop
sbb
repnz
sub
and
sbb
add
fidivrs
stos
adc
pushf
pop
or
and
lahf
xchg
scas
mov
fiaddl
sahf
mov
mov
stos
adc
adc
xchg
gs
xchg
fcompl
add
cmpsl
ret
stos
pop
inc
jne
stc
mov
mov
aad
stos
dec
and
dec
xor
push
stos
divb
scas
clc
sbb
pop
xchg
stos
out
ja
inc
add
lea
data16
jmp
jmp
sbbb
movsl
std
stos
xchg
jg
lds
stos
loopne
enter
push
mov
cmp
mull
mov
cmp
stos
mov
filds
mov
in
xchg
xlat
mov
add
dec
pop
push
adc
pop
roll
pushf
dec
mov
stos
incl
add
jmp
jg
inc
mov
lret
test
dec
push
jge
and
pop
mov
cwtl
jl
jmp
pop
les
stos
xor
ret
mov
mov
sub
call
xchg
pop
or
lcall
ljmp
stos
xchg
pop
mov
fmuls
jmp
hlt
inc
sbb
push
push
out
lret
sbb
or
xor
xchg
fwait
push
cmp
in
popf
or
jae
pop
das
dec
inc
jg
int
stos
out
mov
ret
mov
jno
inc
sub
into
pop
stos
insl
rorl
sbb
push
xchg
mov
lds
cwtl
leave
stos
jns
cmp
test
lea
and
push
jecxz
cld
cmp
stos
add
scas
sbb
stos
inc
cmc
sbb
loop
push
stos
insl
mov
push
movsl
xchg
sbb
int3
pop
mov
xchg
mov
adc
testb
clc
jge
cmp
mov
xlat
data16
stos
in
adc
mov
sar
push
stos
frstor
or
stos
dec
add
xor
and
imull
inc
sub
mov
add
sub
jp
stos
pop
jnp
nop
xchg
sub
pop
movsb
xchg
mov
fs
sub
std
not
pop
cmp
jo
rorl
jl
adc
mov
jmp
pop
xlat
sbb
sub
pop
imul
in
lods
lods
hlt
outsl
and
rcrl
jo
sbb
cmpsl
stos
dec
push
add
mov
cmp
mov
add
andl
mov
push
dec
loope
stc
sti
push
stos
ret
fistpl
nop
ja
sub
or
stos
jb
imul
jno
add
cmpsl
sbb
mov
sbb
jns
loop
enter
test
imulb
xor
scas
mov
leave
das
push
ret
rorl
imull
mov
xchg
xchg
stos
stos
mov
and
pop
mov
xor
add
fwait
mov
add
push
push
and
daa
pop
mov
push
stos
mov
inc
stos
push
sbb
or
add
and
mull
aam
movsl
stos
jo
shl
in
scas
jns
stos
pop
or
test
stos
jb
adc
shl
jmp
std
inc
imul
repnz
lea
and
bound
xor
shrl
push
mov
fwait
clc
adc
in
and
pop
fcmovbe
stos
sbb
imul
adc
into
mov
stc
clc
jbe
push
out
fldt
gs
pusha
leave
out
and
pop
imul
mov
inc
imul
lret
ljmp
int3
sub
imul
ror
adc
jl
movsb
setns
sbb
out
aad
jmp
and
rorb
stc
jmp
out
sarl
cltd
xchg
lcall
in
enter
pusha
push
mov
pop
mov
cmp
xor
ja
dec
mov
mov
mov
cmp
mov
jmp
stos
mov
sub
lret
dec
xchg
stos
mov
div
subb
jbe
ss
aam
movsb
arpl
add
aaa
sahf
sub
aam
mulb
stos
enter
dec
xor
adc
sbb
lret
divl
test
ret
push
mov
scas
and
adc
out
movsb
stos
mov
scas
roll
sbb
stos
jnp
clc
jge
jo
in
inc
mov
push
fimull
sub
test
lret
cwtl
jmp
and
xchg
jo
stos
mov
dec
and
stos
push
imul
and
mov
xor
push
mov
xorb
mov
in
stos
sub
mov
data16
ficoms
lds
mov
mov
xor
xchg
test
add
xchg
inc
lea
aas
scas
mov
lcall
sub
stos
xchg
pop
inc
in
pop
fwait
sbb
jo
das
ret
dec
lods
pushf
mov
sub
and
stos
sbb
insb
js
jmp
push
xchg
sub
iret
imul
mov
int3
mov
cmp
push
pop
test
adc
mov
inc
xchg
rol
and
lods
mov
and
inc
adc
imul
outsb
jmp
clc
jle
outsl
das
stos
lcall
lock
stos
inc
gs
mov
pop
les
pop
sub
insb
int3
xchg
inc
subl
shrb
daa
aad
pop
fsubrs
stos
pushl
push
cmp
pop
inc
inc
inc
stos
rorl
jbe
add
stos
and
aaa
add
add
xor
pusha
mov
xor
stos
mov
fisttps
push
out
mov
out
arpl
mov
test
cmp
fldenv
jno
das
xor
cmove
imul
mov
mov
xchg
sbb
popa
stos
test
xchg
stos
mov
sbb
jl
out
inc
rorb
test
jns
pop
js
mov
sbb
fwait
repnz
push
jns
or
nop
cmp
cmpsl
stos
aas
jbe
shll
mov
repnz
cmpsb
adc
or
mov
lahf
stos
and
push
mov
sbb
inc
push
xchg
sahf
imul
stos
push
mov
mov
mov
sahf
stos
movsl
aas
cmpsl
fcoml
stos
adcl
pusha
cmp
icebp
stos
add
into
je
ja
fisubl
js
inc
fwait
andb
sub
ret
shll
stos
xchg
pop
cs
push
in
call
inc
mov
stos
mull
mov
jne
xchg
test
pop
xlat
in
test
hlt
jno
arpl
ret
stos
icebp
fwait
cwtl
lods
outsb
outsl
cmp
mov
addr16
sbb
je
imul
jno
mov
scas
stos
cmp
add
stos
xor
cmpsb
push
jbe
fcmovnb
aas
jp
dec
daa
xchg
sbb
push
mov
mov
add
and
or
lods
xor
jo
xchg
pop
push
in
fsub
lahf
fwait
les
inc
mov
adc
stos
or
xorl
sti
js
and
xchg
rep
inc
adc
inc
call
loopne
lcall
or
arpl
mov
sub
fs
cmpb
lcall
bt
cmp
push
stos
orb
xchg
xchg
arpl
dec
mov
jns
in
jmp
adc
jb
das
inc
and
jp
lock
daa
test
xchg
fbld
and
inc
pushf
or
cld
push
repz
xor
cltd
dec
lds
adc
xchg
cs
insl
sbbb
xchg
fadd
cmpsl
mov
mov
pop
cmp
js
test
cltd
aam
out
stos
xchg
stos
pop
enter
pushf
aas
cmp
ds
arpl
lods
jge
pusha
popf
jmp
in
imul
insb
lock
adc
popl
stos
ljmp
mov
sbb
xor
and
mov
popf
pop
xchg
stc
int3
sar
sub
mov
stos
inc
cs
mov
xor
cmpsb
jno
dec
mov
mov
mov
stos
mov
out
inc
xchg
pop
stos
pop
or
outsb
and
insl
jno
insb
stos
or
add
movsb
ret
pop
jnp
pop
cmc
ss
ds
leave
stos
fst
in
cs
mov
popf
lock
add
cmpsl
stos
and
lret
shlb
inc
popa
mov
stos
jno
int3
mov
call
sub
movsb
lcall
lret
addr16
dec
in
enter
into
and
stos
or
jmp
xor
sbb
lcall
push
lret
inc
or
mov
stos
stos
scas
pop
dec
xchg
int3
leave
push
and
mov
ja
shlb
movsb
push
push
nop
cwtl
stos
int
mov
push
pop
push
in
xor
mov
fwait
cmp
icebp
test
jle
cld
scas
dec
stos
mov
dec
jmp
mov
pushf
lods
out
subl
dec
inc
inc
aam
pop
int
stos
scas
add
mov
mov
stos
in
clc
push
and
popa
movsl
stos
sbb
sub
mov
dec
stc
nop
pop
stos
or
addb
stos
pop
xor
jmp
jae
mov
push
ljmp
fadd
iret
ja
push
stos
mov
push
out
pop
fidivrl
dec
stos
decl
inc
push
sahf
inc
add
add
mov
mov
xor
adc
int
leave
mov
stos
setbe
lock
pop
out
fwait
fwait
mov
push
xor
call
push
repnz
sbb
sbb
jae
es
aaa
push
add
stos
or
shlb
add
sub
lods
inc
xor
ret
imul
ss
scas
stos
movsb
add
sub
sbb
stos
enter
inc
push
fisubrs
adc
lahf
pop
add
mov
mov
imulb
subl
stos
and
push
xchg
dec
scas
mov
push
inc
fwait
into
or
leave
inc
xchg
lods
sahf
je
add
notb
fistpl
stos
or
jae
xchg
mov
push
xor
cld
ja
shl
mov
xor
or
popa
adc
loope
mov
sub
jmp
jle
inc
and
lcall
aaa
or
xor
int
ja
dec
mov
push
fdivs
stos
ret
addr16
sahf
ljmp
dec
clc
adc
cmpsl
stos
loop
jns
xchg
push
ja
dec
aas
shll
pop
pusha
fwait
mov
mov
iret
mov
push
addr16
or
adc
fs
scas
in
repnz
jno
jg
sub
mov
mov
cltd
add
insl
push
out
push
mulb
lea
jecxz
test
jb
push
mov
dec
arpl
inc
mov
stos
inc
lret
sbb
xchg
add
push
mov
fcmovnb
mov
sbb
lods
mov
adc
fwait
cmp
push
pushf
dec
inc
cmp
fmulp
cmp
and
pop
faddl
out
stos
mov
lret
dec
shll
stc
out
mov
bound
sub
xchg
pop
or
loope
xchg
mov
pusha
and
imul
addr16
sub
cmp
dec
or
push
mov
push
outsl
pop
cld
cmp
imul
addr16
cmp
mov
sbb
add
jne
pop
aaa
and
push
subl
stos
xor
movsb
dec
fsubrs
push
pusha
cli
pop
addr16
fidivrl
mov
push
outsl
arpl
and
stos
xchg
out
push
and
pop
es
inc
sub
lods
sbb
dec
lret
ret
cmp
stos
xor
pusha
and
sub
stos
lea
xchg
repnz
test
xchg
scas
inc
imul
mov
cmp
dec
out
and
lcall
sbb
dec
xchg
mov
int
daa
jp
imul
scas
mov
stos
aaa
adc
fucomp
cwtl
push
mov
arpl
popf
fsub
outsl
stos
mov
dec
daa
inc
data16
push
push
cli
jne
notb
leave
mov
stos
inc
js
xor
add
jle
dec
push
adc
out
push
adc
xchg
sub
es
stos
lret
test
test
stos
cmp
ret
jmp
lods
stos
xlat
ds
push
loopne
mov
xchg
repnz
fwait
arpl
xchg
std
rorb
stos
adc
inc
iret
stos
xchg
mov
pop
and
out
push
leave
lods
aas
stos
cld
mov
aaa
sahf
push
aad
addr16
inc
ja
stos
pop
fldt
movsb
ret
ficoms
lods
stos
les
into
mov
sbb
fs
orb
in
popf
and
mov
adc
aas
jmp
rorl
outsl
lcall
sub
adc
stos
or
cmpl
sub
popa
jb
pop
das
mov
or
cwtl
and
je
add
or
jo
xchg
data16
sbb
add
stos
fnstcw
iret
push
jno
or
in
daa
mov
js
dec
inc
andl
stos
inc
xchg
rclb
ret
jmp
and
movsl
dec
test
mov
jg
pop
stos
insl
popa
mov
cltd
stos
cmp
jmp
mov
add
in
xchg
add
inc
cmpb
cs
inc
or
xor
cld
repnz
mov
adc
mov
aad
and
or
mov
int
stos
in
pop
out
es
dec
and
sub
sub
jmp
cwtl
push
stos
adc
push
xor
aas
in
push
in
es
xchg
mov
cs
subl
mov
jb
mov
sub
mov
test
jmp
in
mov
pusha
fwait
or
sbb
mov
jle
fwait
stos
std
imul
into
jecxz
outsb
mov
stos
mov
jp
pop
std
cmpsb
es
xchg
scas
aas
sub
jb
pop
xchg
and
mov
jbe
sub
cwtl
sbb
leave
mov
push
rolb
notb
stos
cmp
ja
push
inc
pop
out
or
sub
mov
std
stos
pop
ss
inc
gs
shrb
jecxz
mov
pop
mov
xlat
xchg
popa
xor
dec
sbb
jmp
jb
fdivrl
push
das
mov
pop
lcall
inc
ret
out
stos
dec
xchg
repz
xchg
lret
cmp
sbb
lds
bound
dec
push
das
mov
iret
les
je
mov
imul
arpl
cld
and
mov
mov
pop
stos
xchg
push
not
cwtl
rcrb
dec
add
mov
stos
xchg
sub
sahf
mov
xlat
rclb
imul
ljmp
lahf
into
pushf
mov
jns
inc
stc
jmp
or
nop
lcall
mov
mov
stos
dec
pop
ja
pushf
cmp
sti
mov
jbe
mov
fcomi
pop
xchg
push
repz
sbb
inc
xor
sti
xchg
mov
push
adc
cs
mov
es
lods
stos
jp
pusha
popa
xchg
notl
stos
dec
adc
mov
movsb
xor
pop
jb
mov
popl
cwtl
mov
lods
in
pop
arpl
orb
negl
mov
sub
lods
test
jp
xchg
add
push
mov
test
lods
je
imul
jg
sbb
rorb
es
and
rorl
stos
sbb
addr16
std
cmp
add
stos
dec
dec
jl
push
aaa
mov
cmp
sub
dec
flds
popa
push
mov
inc
jge
stos
push
xchg
out
stos
sbb
rcll
cs
shlb
pop
xor
add
mov
fsubs
pop
or
fcmovnbe
cmp
mov
repnz
scas
jmp
or
sub
xchg
mov
dec
stos
sbb
mov
cmp
mov
jns
or
push
fldcw
mov
test
inc
int3
mov
aad
pushf
repnz
mov
xchg
insb
mov
mov
jno
pop
dec
and
test
push
or
fldcw
sbb
lds
fsubrp
stos
fs
push
jg
inc
lea
es
inc
aad
mov
iret
imul
stos
sub
daa
aaa
jmp
inc
sub
jecxz
pop
mov
stos
shlb
and
mov
stos
fs
and
jmp
idivb
xchg
lret
fsubrs
call
imul
mov
mov
push
stos
add
pop
js
add
stos
stc
addr16
sub
cmp
lea
adc
stos
pusha
adc
mov
or
addr16
lret
xchg
stos
push
dec
and
pusha
nop
stos
in
push
dec
add
mov
jg
addl
push
mov
xchg
or
push
fsubrs
pop
xchg
add
sub
icebp
aad
popa
fildl
inc
stos
cmp
insb
movsb
or
add
xchg
in
cltd
mov
sub
sub
xchg
inc
jns
mov
sub
fwait
stos
test
aas
xchg
jmp
int
pop
sarl
mov
cld
lret
fistps
cmc
stos
jmp
out
fsubrs
into
inc
sub
popa
mov
stos
insb
rcrl
jns
adcb
out
inc
ja
fistpl
enter
sbb
cld
add
jl
stos
sbb
push
ja
mov
jg
fwait
lret
push
xor
jno
mov
pop
mov
fisubrl
cld
jmp
cmpsl
cld
dec
in
lret
and
jl
dec
clc
stos
cs
stos
les
dec
inc
xchg
ret
jp
out
mov
iret
jmp
fistps
mov
insl
stos
mov
xor
push
sub
mov
xor
faddl
aaa
lcall
stos
inc
lea
rcll
mov
xchg
mov
xchg
jp
lea
cmc
in
les
lret
popa
sub
js
bound
ret
xchg
testb
mov
adc
add
lods
mov
pusha
or
mov
lret
xchg
dec
xchg
test
push
repnz
dec
pop
sar
add
mov
movsb
imul
mov
in
notb
or
xor
ljmp
fsubl
sub
stos
cmc
xor
mov
stos
movsb
scas
jp
fwait
int3
fwait
insl
jne
inc
and
sub
add
cmp
movsl
mov
pop
sub
pop
adc
in
cld
or
test
xchg
mov
stos
pop
sarb
dec
iret
and
sbb
movsl
arpl
bound
popf
dec
sbb
movsl
dec
sahf
ret
cmp
adc
and
mov
punpckhwd
sub
pop
stos
imull
cmpsl
push
sti
mov
jbe
dec
outsb
xor
mov
jae
jmp
add
xor
mov
scas
gs
test
sub
ljmp
fmuls
daa
imul
sub
pop
movsb
rolb
ds
pop
mov
sbb
mov
dec
stos
push
and
js
mov
ds
cmpsb
lahf
rorb
faddl
in
inc
and
push
in
insl
mov
popf
hlt
enter
dec
dec
stos
std
xchg
inc
jo
les
push
push
jecxz
and
adc
inc
icebp
adc
aad
pop
stos
mov
imul
subb
les
cmp
fldenv
test
out
and
hlt
sbb
stos
xorb
pop
cmp
jmp
xchg
jbe
stos
mov
fwait
and
push
cmc
arpl
bound
cmp
add
mov
hlt
fldl
sbb
jle
xchg
rcll
sbb
or
aas
cli
pop
add
sbb
dec
mov
stos
add
inc
push
mov
sarb
and
push
dec
pop
jmp
mov
sub
dec
aaa
jns
stos
and
mov
les
rcr
int3
fwait
fwait
xchg
fs
pop
stos
or
dec
sbb
jecxz
jmp
mov
aam
test
ljmp
dec
mov
mov
mov
xor
imul
inc
add
lds
push
stos
data16
fs
adc
in
xchg
inc
fcmovu
jb
mov
add
mov
push
pop
movsb
and
mov
stos
inc
mov
outsw
iret
test
push
fwait
xor
pop
sub
aaa
stos
mov
dec
sbb
mov
popa
jne,pn
xchg
in
push
xor
stos
sub
ja
xchg
adc
xchg
adc
sahf
inc
mov
jmp
jmp
sub
mov
add
lahf
aam
push
aad
pop
jb
les
mov
xorb
stos
cli
testb
push
push
imul
mov
jmp
js
enter
cmp
mov
push
xchg
stos
or
cmc
sahf
jbe
mov
cld
hlt
cli
aad
les
aas
ficomps
cmc
stos
push
and
sbb
inc
jg
call
lods
push
mov
in
pop
sbb
hlt
xchg
mov
pop
dec
loop
test
sbb
mov
cwtl
cld
orb
jae
lock
leave
stos
mov
mov
push
cli
stos
xchg
ljmp
stos
call
outsl
cmpsl
fildll
movsl
mov
jmp
mov
es
push
stos
mov
addr16
lcall
pusha
lahf
and
jle
movsb
sub
je
mov
inc
jae
shl
pop
push
mov
and
jne
mov
neg
mov
push
loop
test
xor
push
mov
sub
aad
insl
inc
stos
push
scas
push
dec
outsl
xchg
jmp
repnz
adc
dec
out
jl
scas
push
stos
call
adc
daa
push
mov
shrb
out
imul
dec
or
lcall
inc
jmp
or
jg
stos
xor
sbbb
mov
stos
dec
nop
lret
lds
jbe
stos
adc
xchg
int
adc
std
or
cltd
js
sub
frndint
and
stos
add
test
lods
rorb
test
xchg
loopne
fisubl
aas
popa
test
int3
pop
cmc
inc
xchg
jle
cmp
leave
enter
pop
pop
mov
adc
inc
mov
jmp
mov
jmp
add
xchg
inc
inc
stos
fstpl
int3
shr
jg
loopne
lods
adc
jecxz
enter
push
fwait
loope,pn
xchg
or
lds
push
cmp
fadds
fs
push
stos
push
or
sbb
lock
fnstcw
roll
cmpsl
jp
dec
fidivs
repnz
addr16
dec
jecxz
test
adc
sub
mov
daa
dec
mov
mov
int
jne
cltd
pop
sbbb
or
pop
lcall
gs
lret
fadd
jne
sbbl
dec
sub
xchg
in
pop
sub
dec
xchg
jecxz
add
xchg
jne
sbb
ljmp
cli
pushf
or
mov
dec
mov
xchg
mov
stos
mov
mov
add
cmp
inc
adc
sub
cwtl
push
push
outsb
push
add
pop
test
xchg
adc
das
sub
sbb
cld
mov
pop
and
movsb
pop
fmul
mov
cwtl
pop
stos
dec
cmpsl
stos
std
push
dec
push
dec
mov
xchg
stos
lret
xchg
fsubrs
daa
stos
inc
imul
lcall
pushf
pop
mov
mov
xchg
mov
dec
data16
popa
ljmp
fwait
push
pop
pushf
jno
sub
mov
hlt
cmp
ljmp
mov
or
dec
or
mov
cmp
xchg
xchg
sti
stos
addr16
jmp
push
stos
mov
mov
fiadds
stos
lret
dec
xor
adc
les
dec
mov
stc
xchg
icebp
stos
in
outsl
gs
mov
mov
xchg
rorl
jecxz
and
popf
mov
stos
gs
ret
outsb
sbb
hlt
push
jb
or
mov
stos
nop
fstpl
dec
jmp
dec
mov
out
push
push
and
jp
daa
mov
pop
imul
mov
icebp
xchg
and
lcall
mov
push
mov
insl
add
xchg
push
mov
mov
cmc
rorl
xchg
fdivrs
jae
sti
shrl
sub
dec
mov
mov
xchg
stos
xor
xchg
mov
aaa
cmp
pop
es
out
xchg
rclb
int3
sbb
ds
cs
pop
xor
adc
xchg
mov
xor
out
inc
sbb
ja
xor
and
call
mov
jl
pushf
fs
jns
es
stos
dec
mov
xchg
fxch
stos
stos
mov
fisubs
mov
sbb
fwait
add
xchg
mov
pop
jns
and
ret
xchg
bound
stos
adc
test
fs
stos
jp
and
insl
mov
or
imul
xchg
and
les
insl
jne
dec
xchg
imul
daa
mov
ljmp
adc
push
mov
mov
xchg
popf
mov
iret
xchg
test
mov
mov
mov
pushf
pminsw
js
pop
mov
je
lcall
xor
daa
shll
mov
mov
aam
addr16
mov
xchg
daa
and
mov
or
xor
popa
sbb
mov
pop
shll
stos
cmp
adc
xor
jmp
adc
xchg
and
cmpl
xchg
or
xchg
mov
in
xchg
mov
dec
push
stos
dec
xor
or
fldcw
cmpsl
es
mov
stos
push
sub
sub
stos
ljmp
and
cld
popa
cwtl
lret
stos
shrb
mov
and
stos
insb
add
stos
test
jno
inc
stos
fdivrl
mov
imul
mov
add
ds
daa
sbb
shrl
test
add
addr16
jg
nop
push
cmp
sub
dec
cwtl
sub
jno
stos
scas
negb
lea
mov
cmp
or
ljmp
inc
gs
repz
pop
ja
mov
repnz
into
imul
fwait
lea
lret
stos
aas
sub
aaa
insb
mov
mov
inc
sbb
lahf
loope
daa
and
fucom
mov
das
stos
test
adc
movsl
call
cltd
mov
mov
out
or
push
out
popa
or
adc
mov
int3
jb
and
je
jo
mov
jmp
adc
fnsave
mov
xorl
imulb
mov
lock
push
add
and
aam
cltd
ds
pop
and
int3
and
cmp
push
jne
dec
sub
xor
mov
inc
xchg
sbb
push
push
add
jb
pop
xchg
xor
mov
xor
clc
cmp
icebp
ds
je
lds
lods
stos
test
mov
adc
mov
lods
and
or
subl
stos
dec
jp
xor
ret
inc
or
les
insb
mov
xor
cld
and
stos
or
insl
xor
insb
daa
stos
sub
cmp
add
jg
or
push
fwait
mov
push
std
popf
rcrb
subl
dec
lock
jecxz
outsb
out
in
mov
mov
sbb
fstpl
stos
mov
js
daa
jecxz
movsb
shrb
loopne
pop
xchg
std
stos
xlat
in
sub
mov
bound
cltd
aas
stos
inc
clc
popf
repz
incl
stos
inc
add
bound
icebp
loope
pop
test
sub
pop
xlat
dec
fidivl
ljmp
nop
stos
rcr
push
and
imul
and
subl
stos
icebp
outsb
xchg
out
clc
jmp
pop
jnp
pop
dec
pop
jmp
lret
mov
int
stos
pushf
xor
xor
stos
mov
es
jp
stos
cmp
call
add
jmp
pop
lahf
push
clc
fisubrl
adc
mov
call
hlt
xchg
je
stos
dec
xchg
out
or
mov
mov
mov
dec
mov
nop
xchg
mov
imul
test
dec
push
jle
adcl
mov
dec
jecxz
mov
push
and
xchg
mov
stos
outsl
in
shr
stos
lret
cmp
out
stos
jmp
lds
icebp
mov
stos
into
ret
in
push
hlt
stos
sar
pop
cmp
sbb
push
pusha
xchg
inc
imul
frstor
mov
lods
lcall
ficompl
mov
cmp
push
adc
test
out
pop
or
test
jp
fwait
pusha
pop
jmp
cmpsl
sub
sub
daa
xchg
rcrb
xor
inc
cmp
or
ficoms
sub
cmp
inc
aad
data16
sbb
subl
fcmovne
cld
mov
nop
add
sub
imul
lcall
in
xchg
jecxz
and
stos
cmp
sub
push
sub
pop
idivl
stos
xchg
push
movsb
cmp
pop
mov
inc
cmp
inc
cmp
pusha
xchg
fsubp
push
stos
or
sbb
arpl
mulps
and
shrl
mov
negl
mov
lahf
cmp
sbb
aas
arpl
sti
out
jg
add
stos
insl
fbld
clc
jb
fwait
imul
leave
stos
loopne
inc
or
stos
mov
dec
sbb
jae
sbb
popf
stos
ret
pop
movsl
icebp
stos
inc
xchg
iret
adc
aad
out
add
pop
xchg
mov
cmp
aaa
inc
ljmp
push
dec
cmp
mov
or
dec
jbe
adc
stos
rcrb
das
imul
mov
cmp
test
pop
mov
lcall
mov
mov
adc
and
loopne
and
movsl
pcmpgtw
sub
stos
xchg
repz
mov
jno
add
mov
xor
push
out
push
cmpsl
jge
stos
add
jp
in
xor
pushw
inc
xchg
cmpsb
lret
dec
fwait
shll
inc
add
sub
mov
js
sbb
xchg
push
jge
stos
fs
lock
cmpsl
pop
jno
mov
xchg
les
sbb
adc
inc
and
es
mov
add
insl
daa
in
mov
repnz
into
test
stos
mov
xor
mov
jl
cmp
stos
xchg
inc
push
mov
sub
stos
xchg
jle
loope
mov
xchg
ljmp
popf
es
jp
aam
decl
outsb
xchg
lods
mov
pop
in
rcrb
std
stos
adc
inc
sub
repnz
enter
pop
cmpsl
pop
pushf
cmp
jnp
stos
pop
push
sbb
xchg
inc
add
dec
pop
ja
xor
cltd
insl
push
cmp
lcall
pop
xchg
stc
mov
std
aas
sahf
stos
add
aaa
stos
clc
movsl
fs
lods
fdivl
stos
scas
adc
xchg
push
jle
sub
xchg
inc
xchg
or
xchg
xchg
cmpsb
sub
inc
adc
fwait
loopne
stos
pop
add
fists
xchg
push
loop
lret
out
or
mov
inc
test
daa
sub
stos
xor
xchg
data16
xor
loop
rolb
sbb
test
mov
out
into
mov
mov
push
sar
sti
push
dec
xchg
sbb
mov
and
xchg
push
xchg
mov
jg
push
cmp
add
ja
btc
in
out
lods
addr16
mov
movb
call
arpl
inc
mov
pushf
mov
dec
jb
lcall
rcrl
xor
cmp
repz
ja
push
stc
rcll
jp
mov
stos
call
adc
xor
sbb
ret
mov
xor
mov
push
xchg
nop
jmp
outsb
lds
mov
data16
sbb
cli
sub
stos
push
push
arpl
inc
pop
loope
xchg
aam
into
xchg
inc
jne
in
mov
xchg
shll
and
mov
stos
jnp
xor
inc
inc
sbb
pop
test
ficompl
imul
add
mov
inc
hlt
lds
xchg
pop
stos
jns
shld
xchg
jae
js
adc
push
xchg
scas
adc
pop
call
aaa
push
stos
push
xchg
insl
dec
jmp
shrl
add
cmp
sbb
push
cmp
and
in
ljmp
pop
movsb
xchg
es
sti
inc
fildll
push
lcall
add
fmul
mov
sub
sbb
or
lock
jp
lahf
pop
addr16
leave
into
stos
pusha
mov
lods
hlt
stos
adc
inc
lods
cmp
sbb
shll
and
mulb
inc
into
adc
loopne
adc
dec
test
mov
test
jbe
adc
inc
sbb
mov
cltd
loopne
mov
sub
inc
push
or
xchg
xchg
mov
ffree
sub
jge
and
push
scas
mov
sbb
xor
enter
in
repnz
mov
lret
pop
push
mov
int
mov
mov
sub
pop
fwait
in
jecxz
dec
mov
stc
push
jnp
or
mov
movsl
unpcklps
out
mull
xor
mov
cltd
stos
xchg
mov
movsl
in
and
mov
jle
cli
pop
push
stc
stos
scas
add
adc
push
je
test
mov
stos
subb
jb
ds
lock
mov
sub
inc
loop
or
sub
test
push
mov
xchg
pop
js
subb
push
stos
push
inc
push
add
addr16
mov
xchg
lahf
add
mov
mov
std
xor
rcrl
out
pop
fbstp
mov
je
call
fldl
mov
cli
dec
cmp
or
xor
mov
sub
push
jmp
mov
or
jg
push
xchg
sbb
stos
jp
xchg
jmp
div
mov
xlat
xchg
lcall
les
and
jae
add
stos
mov
dec
loope
mov
adc
add
mov
sub
out
sbb
iret
arpl
ror
in
stos
xchg
jb
repz
jg
movsb
addr16
outsb
sub
orl
add
adc
inc
pusha
mov
or
leave
stos
mov
out
imul
xor
jmp
adc
push
repnz
cli
adc
stos
mov
fwait
push
jge
cmp
dec
popa
add
test
inc
ss
jle
dec
stos
ja
pop
inc
add
sub
push
mov
cmpsl
sbb
xchg
inc
lods
je
stos
roll
cwtl
repz
mov
push
rcr
subl
in
pushf
imul
fwait
lods
push
pop
xchg
stos
sbb
dec
daa
pop
mov
xlat
stos
aam
add
xchg
sbb
mov
movsl
in
jp
pop
fstpt
jo
and
mov
mov
dec
mov
sahf
popf
sbb
repz
pop
and
mov
sti
enter
and
sub
jecxz
jns
push
cmc
cmp
mov
or
popf
ja
xchg
sbb
push
inc
gs
stos
jo
sub
or
cmp
rcrb
adc
das
negb
int3
cmp
mov
mov
jp
dec
and
sbb
test
gs
xor
pop
int
je
fwait
stos
push
mov
mov
jne
pop
jp
lods
ss
bound
cmp
call
scas
stos
mov
xchg
out
daa
jge
divl
fwait
mov
push
rol
scas
ljmp
dec
dec
test
packssdw
aas
ret
cld
sub
pop
stos
sub
mov
stos
push
xchg
addr16
xlat
in
or
out
inc
mov
fwait
and
ljmp
fiadds
jo
push
imul
dec
stos
add
pop
mov
mov
mov
stos
or
andl
jge
sub
aam
mov
sbb
xlat
sub
sbb
fs
xor
inc
stos
dec
outsl
insb
mov
xor
xorb
ljmp
test
stos
shlb
mov
cmc
stos
pop
or
stos
xchg
ljmp
stos
mov
test
aad
in
daa
aas
lret
stos
stos
rcrb
jmp
idiv
mov
push
mull
bnd
pop
mov
loope
mov
cltd
xor
fisubrs
pop
imul
sub
dec
xchg
cld
mov
dec
xor
or
push
stos
lods
fdivs
adc
dec
mov
nop
or
pop
lcall
cld
enter
repz
shl
fwait
in
cwtl
push
or
jmp
pop
outsb
sub
mov
pop
stos
callw
adc
ret
mov
push
jmp
xchg
jno
ficomps
stos
xchg
movsl
fmuls
fildll
or
xor
lret
fwait
and
in
repnz
jge
mov
iret
jb
test
out
stos
jbe
fnsave
xchg
imul
fimull
sub
in
mov
cmp
and
stos
int3
stos
fs
pop
jmp
imul
fimull
test
stos
add
aas
sub
shll
js
mov
ret
jg
stos
pop
bound
loope
sahf
push
aad
push
mov
or
adc
sbb
dec
push
or
into
sub
mov
stos
sbb
dec
adc
mov
in
fwait
aaa
lcall
imul
inc
cmc
mov
and
dec
pop
addl
pop
rcrb
scas
je
imul
push
push
pop
arpl
repnz
loopne
xchg
stos
inc
push
hlt
pop
mov
scas
pop
orl
int3
xor
aaa
shr
and
mov
add
stos
loopne,pn
pop
mov
mov
or
inc
in
and
mov
sbb
stos
rcl
inc
fdivrs
mov
sub
jo
mov
sub
jb
or
imul
dec
jecxz
aad
shll
cmpl
gs
ja
lods
ss
xchg
fildl
addr16
movsl
jmp
fsubrs
int3
lret
push
fldcw
inc
and
stos
push
mov
cmp
into
mov
jmp
sub
jo
out
jae
mov
mov
scas
imul
stos
cwtl
dec
ret
repz
push
rolb
pop
jl
stos
dec
mov
aad
sub
addr16
loop
dec
scas
sbb
mov
push
sub
fimuls
pop
mov
bound
adc
ret
in
fsubrs
pop
sahf
push
stos
mov
sub
mov
arpl
sbb
shrb
imul
inc
xor
clc
inc
sub
xor
mov
scas
orb
cmp
stos
adc
mov
stos
lret
clc
push
std
mov
dec
push
call
jno
icebp
daa
push
mov
popa
xchg
fcmovnbe
pop
dec
stos
lcall
add
and
xchg
mov
dec
stos
cmpsl
inc
mov
and
pop
inc
sub
xor
mov
lret
dec
iret
stos
lods
outsb
enter
xor
add
stos
mov
scas
xor
test
stos
push
aas
cmc
pop
jae
push
add
bound
stos
inc
jg
iret
pushf
lcall
popa
sbb
inc
or
std
mov
imul
enter
addr16
mov
push
shlb
sbb
ficompl
icebp
inc
push
lcall
pop
sub
daa
xchg
mov
jmp
fdivp
jmp
mov
dec
inc
cmp
lods
clc
mov
outsb
scas
out
cmpl
mov
push
stos
xchg
call
stos
scas
les
inc
stos
jecxz
jl
outsb
xlat
in
imul
mov
xor
std
dec
inc
mov
dec
stos
scas
pop
cld
int
loopne
stos
pcmpgtw
stos
imul
mov
addr16
add
aas
lea
insb
cmp
fidivs
cmp
mov
or
sub
add
stos
adc
jl
aad
inc
push
mov
je
and
icebp
cltd
push
shll
add
cmp
mov
mov
rcr
test
popa
in
inc
mov
mov
push
xchg
push
rsqrtps
cli
not
lods
lock
mov
add
sub
adc
fs
or
and
jbe
lahf
rcrb
or
arpl
call
imul
cmpsl
mov
mov
cmp
inc
popa
scas
insl
fimuls
stos
fisttpll
xlat
imul
outsl
jbe
mov
arpl
jle
lcall
test
outsl
stos
and
popf
jno
test
adc
fisttpl
pop
in
dec
ficomps
orb
sbb
xor
sbb
popl
lcall
and
xlat
repnz
fs
dec
inc
rcrl
mov
pop
pop
mov
stos
adcl
out
push
cmp
popf
cld
mov
stos
in
stos
gs
call
xor
in
mov
addr16
jg
jo
pop
stos
dec
fdivrp
lahf
ret
mov
lret
mov
pop
daa
fstl
cmpsl
mov
inc
rcr
cmp
in
ds
inc
movsb
stos
cmp
jle
adc
or
lods
xor
cli
xor
push
sahf
adc
cmp
adc
inc
lods
shl
wbinvd
jp
into
sbb
fwait
cmp
ljmp
clc
pop
lods
imul
cmpsl
das
xlat
fs
mov
stos
orl
dec
gs
outsb
mov
xchg
mov
dec
shrb
and
scas
cmp
mov
cmp
ret
mov
add
mov
addr16
mov
orl
daa
dec
mov
imul
fwait
ret
sub
adc
add
fs
cmp
mov
pop
inc
insb
stos
sti
fsubrp
incb
icebp
clc
call
outsl
and
loope
and
jne
stos
fstps
mov
pop
push
into
mov
insb
stos
gs
aam
stos
pop
sbb
lret
jo
sub
inc
sub
negl
imul
jnp
add
call
popf
mov
pushf
out
cmp
pop
scas
faddl
pop
mov
mov
loopne
sahf
mov
out
in
loope
pop
pusha
mov
or
pop
cmp
xchg
aam
stos
addr16
in
or
dec
sub
lods
ja
icebp
mov
pand
stos
mov
pop
bound
mov
enter
adc
push
and
stos
xchg
jno
dec
cld
xchg
scas
ljmp
jb
mov
adc
int3
pop
xchg
stos
stos
rcr
jmp
stos
out
push
outsl
push
xorl
and
pop
faddl
dec
push
leave
stos
pop
aas
fisubl
stos
enter
movhps
and
xor
lret
or
aam
iret
test
pop
stos
adcb
sub
inc
cmp
xlat
cmpsl
stos
pop
gs
je
or
inc
stos
adc
cmp
inc
addr16
adc
mov
fisubrl
repz
jns
addr16
pusha
jns
jle
mov
mov
jne
aas
push
aaa
xlat
and
xchg
xchg
int
lahf
cwtl
stos
fdivrs
push
xlat
mov
dec
fdivrl
cwtl
push
lods
stos
pop
incl
xor
lret
adc
mov
inc
leave
test
mov
and
stos
xor
sub
fsubl
dec
add
and
dec
es
xor
repnz
stos
testb
sub
stos
sub
xor
inc
es
jmp
jle
dec
sub
mov
inc
lahf
loope
out
popl
inc
sub
or
test
jp
lret
hlt
stos
in
add
sub
jmp
mov
test
cmpsb
adcb
cltd
push
fdivr
movsl
dec
stos
repnz
ds
stos
mov
xchg
and
pop
aad
and
in
cld
sbb
or
mov
fidivs
loope
pop
addr16
ljmp
pop
sub
stos
mov
lds
jl
push
sub
addr16
push
jns
mov
xor
test
fwait
stos
cmp
push
in
stos
ljmp
add
cmp
and
xor
and
mov
stos
xchg
adc
add
mov
xchg
scas
mov
jmp
inc
loope
jno
repnz
or
leave
inc
sbb
sbb
mov
and
mov
dec
aam
mov
jbe
flds
cmp
out
mov
cmpsb
mov
mov
jmp
pop
jae
mov
jmp
cmp
and
mov
lret
dec
shrl
sbb
xor
mov
aad
mov
addr16
xor
mov
insl
stos
cld
push
and
mov
xor
ljmp
sti
icebp
fistpl
pop
ja
cmp
mov
xor
jno
and
jae
lods
stos
pop
mov
or
icebp
mov
loope
stos
jmp
dec
fcoms
mov
mov
xchg
std
mov
aad
rclb
repz
fcoml
mov
jecxz
mov
jns
mov
jmp
push
test
insl
adc
jae
aaa
and
ret
inc
jne
les
not
push
push
adcl
subb
cli
mov
addr16
push
dec
repz
js
imul
jnp
add
jl
mov
inc
cs
imull
mov
cmp
jo
std
stos
lret
mulb
cmp
mov
inc
je
xchg
stos
int
cmpsl
adc
aaa
adcl
shrb
fcompl
adc
jmp
enter
stos
in
sub
adc
outsl
das
xchg
dec
mov
enter
push
jae
jge
pop
xor
adcb
fldt
jns
mov
dec
push
cmp
in
add
sub
sub
mov
in
mulb
adc
dec
lods
jnp
stos
cmpsb
pop
mov
test
test
dec
mov
xchg
stos
pop
stos
cs
rcll
stos
cmp
insl
fldcw
jecxz
in
xor
orl
stos
jne
xchg
insl
stc
or
stos
movsb
jb
dec
sbb
imul
jne
xchg
mov
add
lret
and
mov
push
fdivp
aad
inc
shrl
rolb
test
jp
daa
stos
subl
je
stos
cmp
es
fisttpll
dec
int
cmp
imul
inc
fwait
scas
into
jge
dec
xchg
rcl
lret
add
or
add
flds
in
stos
mov
aad
inc
stos
push
out
mov
adc
imul
or
sub
lahf
popf
stos
and
sbb
cwtl
stos
loop
out
lret
movsl
stos
jmp
in
jmp
dec
imul
fwait
test
stos
mov
repnz
lcall
mov
popa
mov
hlt
rolb
stos
jle
in
pop
push
and
dec
sbbl
jnp
sub
add
js
stos
or
mov
stc
shr
mov
outsb
adc
push
cmp
xor
jp
jnp
aad
jne
ds
xchg
jo
dec
stos
jno
add
stos
push
je
add
or
sbb
xlat
imul
enter
push
or
xchg
stos
adc
popa
cltd
shl
xlat
push
movsl
lds
push
movb
ljmp
stos
std
popf
jb
mov
push
icebp
nop
adcl
fnclex
sub
movsb
stos
lods
xor
in
clc
mov
push
cmp
subb
movsl
ljmp
dec
inc
test
push
adcl
test
ds
stos
adc
xor
jg
mov
stos
ljmp
mov
enter
dec
stos
popf
adc
std
stos
cmp
push
push
int
stos
lret
or
bound
stos
push
mov
mov
mov
adc
and
sub
lret
mov
xchg
outsb
cmc
std
stos
out
ret
ljmp
mov
arpl
mov
dec
sub
dec
insb
outsb
dec
stos
adc
rcll
jge
mov
sbb
cmp
push
fbld
faddl
bound
rcr
inc
xchg
mov
lahf
dec
stos
xchg
or
call
stos
jae
xlat
jp
je
adc
inc
call
mov
xchg
push
dec
lds
mov
pop
or
mov
jg
stos
dec
in
and
or
stos
add
pop
rcrl
xchg
mov
xchg
aaa
mov
stos
jg
insb
sbb
cli
bound
jbe
mov
pushf
scas
jae
clc
stos
das
in
fdivl
or
jl
pop
arpl
cmp
jbe
jl
jge
adc
jo
stos
les
aas
shrb
dec
es
sbb
lahf
pop
stos
mov
cmp
or
stos
clc
jnp
jae
push
jne
adc
jp
in
mov
fists
xor
rcll
jmp
or
das
and
imul
mov
or
shlb
cltd
sub
shrb
mov
lods
mov
inc
hlt
pushf
xlat
lds
out
pop
pop
sub
mov
mov
push
stos
insl
ret
mov
bound
xchg
hlt
shlb
sub
sahf
adc
xchg
idivb
stos
pop
fsubr
pop
std
cmp
mov
pop
stos
push
jle
jnp
jl
int3
scas
sbb
xor
and
pop
push
fstps
xchg
sub
dec
xor
cmp
push
xchg
or
jmp
adc
add
pop
cmp
lods
stos
imul
mov
addr16
clc
pushl
addr16
pusha
stos
enter
je
nop
jo
add
repz
in
stos
idivb
stos
push
push
fsubr
iret
pop
stos
mov
ljmp
sbb
fdivrl
stos
mov
fldcw
subb
or
stos
adc
and
imul
push
adcl
loopne
sub
fisttpl
int
jb
sbb
imulb
in
pop
loop
pop
sbb
fnstcw
mov
mov
hlt
outsb
movsl
in
rorb
pusha
pop
outsl
fistl
call
xchg
arpl
sbb
jae
in
mov
sbb
subl
xlat
loope
mov
repnz
es
mov
stos
std
jb
aaa
cld
dec
in
stos
rorl
out
mov
subl
sti
es
or
pop
loopne
inc
aas
mov
mov
pop
mov
xchg
and
cmp
push
or
out
stos
jg
pop
sahf
stos
lret
sbb
pop
subb
jmp
xor
int3
adc
push
stos
mov
mov
add
movsb
jl
ret
stos
dec
xchg
mov
lea
xchg
enter
jle
dec
out
ljmp
popf
xchg
stos
jge
xlat
bound
sbb
mov
mov
adc
push
cmp
mov
inc
mov
stc
push
sbb
mov
xor
and
aas
push
inc
cmpsb
cmpsl
xchg
stos
add
inc
das
xor
xchg
mov
aas
jle
xor
xchg
fildll
lds
add
jge
sub
in
push
sarl
test
lock
cs
imul
xchg
dec
add
mov
add
add
pop
pop
test
out
loope
pop
mov
xor
xlat
dec
subl
mov
shrb
mov
or
subb
dec
aam
stos
push
mov
jmp
mov
repz
sbb
jb
xchg
stos
pop
jae
into
mov
push
cmp
push
lods
adc
sub
test
pusha
push
mov
sbbl
fs
xchg
insl
test
push
hlt
jge
cmp
jmp
xchg
gs
xchg
into
add
mov
pop
cld
fisttpll
push
stos
pop
loope
dec
lret
mov
or
aam
dec
call
sub
jg
clc
sub
les
std
bts
xchg
jg
ljmp
xor
xchg
mov
stos
xchg
pop
iret
xorb
mov
into
push
out
ja
xor
rcrl
cs
sub
daa
jne
xor
cltd
test
movsb
xchg
hlt
pop
or
sub
xchg
ja
mov
add
js
cmp
movsl
bswap
adc
inc
outsl
imul
cmp
lock
imul
xor
jne
out
dec
outsb
pop
scas
int3
cli
daa
cwtl
push
sbb
mov
sbb
dec
adc
pop
aas
stos
imul
add
shrl
addl
dec
jbe
pop
fsubr
mov
jl
fcoml
stos
subl
notl
ret
stos
jb
push
lahf
dec
mov
push
iret
add
enter
xor
movsb
mov
shll
or
xchg
stos
jge
push
mov
stos
addr16
cltd
lret
stos
mov
out
mov
jb
bound
in
xor
pushf
stos
mov
pop
and
mov
xor
push
mov
jnp
dec
call
dec
cmp
sbb
aaa
stos
inc
jg
xor
shlb
pop
fwait
xchg
pop
dec
push
sub
lret
out
lods
xchg
lods
sbb
inc
rcll
dec
xchg
inc
popa
pop
xchg
popf
add
aaa
sub
sarl
stos
or
add
push
xlat
out
loopne
fmul
add
xchg
fstpl
sbb
lea
dec
sub
aaa
insb
or
xchg
popa
fnstsw
stos
ja
or
daa
imull
jge
xchg
movsb
stos
sbb
push
test
jns
iret
jb
shr
rcr
mov
int3
scas
xlat
bswap
mov
adc
inc
out
pop
and
insb
inc
adc
mov
adc
imul
fsubrl
mov
add
int3
mov
add
sub
stos
mov
cld
inc
mov
mov
fwait
mov
lret
fwait
mov
cwtl
stos
das
aad
mov
out
sub
cld
scas
sbb
mov
stos
int3
xchg
inc
inc
or
fsts
stos
pop
cmp
leave
jb
inc
stos
mov
pop
cs
rolb
into
insb
stos
inc
push
pop
add
mov
cs
stos
outsb
das
and
test
stos
jmp
or
lods
cld
data16
loope
fwait
imul
mov
stos
jge
mov
jl
cmp
setnp
nop
aaa
add
mov
and
xor
sbb
in
jecxz
jmp
ret
jnp
aam
adc
adcb
mov
sarl
imul
test
xchg
nop
mov
push
mov
sub
rcrb
in
call
and
xchg
xor
mov
and
divl
xchg
or
stos
add
mov
inc
cmp
faddl
xchg
xor
bound
jle
jmp
mov
or
in
mov
in
sub
es
mov
xor
jb
mov
std
cmpsb
jbe
or
add
mov
leave
sub
or
stos
lods
dec
loope
lret
ljmp
cmp
mov
mov
xor
outsb
pop
inc
or
stos
fld
roll
adc
stos
out
addr16
push
cwtl
faddp
sub
mov
clc
jne
xchg
lock
stos
sub
or
fcmovb
mov
daa
jle
mov
push
dec
cmpsl
call
adc
push
rcl
cmp
sbb
jecxz
xchg
push
ret
mov
xor
jl
stos
test
mov
xchg
push
sbb
imul
stos
or
add
sbb
mov
or
aaa
sbb
arpl
outsl
repnz
pop
dec
sti
daa
mov
xchg
sub
mov
jle
dec
push
mov
cltd
cmpsb
sbb
sbb
pop
std
xchg
fnstsw
mov
adc
jmp
repz
popl
in
outsl
stos
sti
bound
push
mov
mov
sub
add
std
jl
mov
out
aas
sbb
jmp
xor
push
pop
addr16
add
js
sbb
ret
setb
lock
push
dec
je
add
fsubl
ret
stos
mov
sub
stos
into
loope
js
sub
fwait
shlb
mov
xor
imulb
pop
xor
stos
mov
jmp
stos
xchg
bnd
sbb
loope
shll
movsb
xchg
pop
shl
pop
out
in
jno
scas
aam
stos
pop
mov
or
iret
mov
dec
add
pop
out
pop
fistpl
and
dec
mov
lea
scas
jmp
mov
imul
int3
out
movsl
in
dec
call
push
aas
out
scas
push
push
mov
inc
addb
adc
and
mov
sub
cmp
stos
jp
ret
popf
in
scas
test
cmp
cli
test
ljmp
int
push
ret
sub
sbb
rorl
stc
push
scas
repnz
inc
stos
jge
sbb
mov
jmp
inc
scas
loopne
add
pop
sbb
in
sub
stos
inc
and
xor
lcall
in
jno
enter
adc
add
mov
jmp
mov
fadd
dec
cltd
mov
sub
mov
mov
jmp
mov
or
gs
push
dec
fwait
jbe
pop
stos
xor
cmp
stos
in
pop
fsubrs
and
sub
jle
jp
movsb
in
aam
subl
mov
mov
ljmp
cld
aam
xorl
cmpsl
cmp
mov
pop
xlat
sub
mov
xor
arpl
dec
mov
or
fldcw
dec
les
or
cltd
nop
stos
push
ror
stc
jbe
cmp
stos
add
imul
mov
mov
and
out
push
std
jle
jmp
sbb
and
rep
mov
in
stos
xor
sub
sbb
adc
stos
push
fwait
adc
popa
and
dec
push
mov
xor
jb
inc
fwait
js
jmp
in
cmc
cmp
ret
stos
dec
adc
sarb
pop
jmp
mov
cwtl
mov
stos
mov
mov
stos
fstl
sbb
stos
andl
sub
in
lods
fiaddl
push
stos
and
call
data16
subl
push
mov
stc
lods
push
add
shll
mov
add
or
sarb
std
xor
mov
stos
cmp
xor
push
fs
mov
inc
mov
add
mov
mov
xor
stos
jge
mov
push
aaa
and
iret
mov
frstor
sub
cmp
enter
sbb
repz
imul
repnz
rcll
stos
pop
jns
movsl
cmc
ljmp
jb
jmp
jo
into
mov
add
mov
push
js
mov
jae
pop
inc
xor
stos
rcrl
mov
xorl
add
aam
divb
cli
pop
arpl
addr16
sbb
stos
sub
mov
push
stos
sub
sbb
lods
shrl
shrl
pusha
push
mov
lds
dec
hlt
add
mov
sub
outsl
xchg
xchg
lock
test
stos
lahf
into
mov
add
stos
stos
push
and
jnp
dec
pop
outsl
into
mov
sbb
fiadds
jnp
scas
int3
dec
daa
sub
pop
cmp
jge
shl
mov
and
xor
jl
xchg
mov
mov
add
shlb
daa
xchg
add
mov
jns
repnz
test
xchg
rol
stos
jne
sub
sbb
jmp
icebp
fiadds
adc
add
xor
or
movsl
mov
iret
jl
cli
js
lcall
stos
cs
dec
ret
mov
das
mov
aad
sbb
pop
sti
mov
xlat
mov
jne
ss
xchg
dec
dec
call
mov
ficomps
jmp
xor
rcr
mov
ret
dec
mov
mov
cwtl
dec
iret
cmp
sbb
sub
pushf
cmovl
cmpsl
sbb
fwait
xor
mov
add
adc
loopne
daa
out
inc
dec
adcl
inc
jno
stos
test
mov
xchg
cld
or
gs
lds
xchg
pop
leave
xchg
jmp
pushf
mov
or
stos
adc
and
xor
fsubs
int3
add
adc
call
pop
or
mov
sbb
jl
cmp
and
hlt
repz
push
lcall
out
fildll
fcmovnb
dec
pop
stos
call
cwtl
push
sti
mov
xchg
pushf
mov
cmp
icebp
inc
jge
push
jae
stc
mov
es
outsb
in
popf
cmp
sbb
imul
imul
sub
es
mov
jmp
pop
fists
xchg
push
sar
jg
nop
imul
stos
hlt
or
add
stos
inc
jae
dec
rep
imulb
std
cmpsb
pop
adc
cmpsl
iret
push
mov
mov
jl
push
lods
fisttpl
jnp
add
shl
and
lods
adc
sahf
adc
in
sub
std
data16
lahf
xchg
andb
testl
stos
out
lahf
xchg
jbe
cmp
push
mov
js
add
jecxz
mov
enter
cmp
fwait
test
shl
rorb
out
mov
jmp
push
gs
in
stos
push
es
fwait
stos
push
and
addr16
in
xchg
stos
inc
mov
inc
pop
or
xchg
xor
mov
mov
xchg
inc
testl
push
xchg
stos
cmp
ds
nop
test
mov
push
xchg
cmp
sub
mov
pop
push
mov
cltd
jne
xchg
jmp
mov
cld
cltd
ret
push
inc
mov
xchg
xor
sub
les
stos
repz
popa
gs
mov
push
mov
fs
push
xchg
push
dec
lods
fsubl
xchg
xchg
stos
mov
jno
stos
sub
imulb
mov
pushf
roll
xchg
out
mov
mov
inc
sbb
fistpll
ret
repnz
or
imul
dec
dec
add
mov
lahf
imulb
andl
popf
and
lahf
daa
test
add
loop
lahf
scas
nop
out
stos
xchg
cmc
mov
xchg
loopne
jge
adc
pop
sub
test
xor
mov
out
data16
pop
int
mov
mov
fmull
insl
xchg
movsl
outsl
mov
cmpsl
movsb
jl
xor
movsb
shl
mov
fs
shrl
dec
sbb
lods
xchg
in
sbb
les
pop
jae
stos
xor
xor
aad
mov
adc
loope
xchg
addr16
dec
push
fwait
imul
dec
sub
pop
in
ret
inc
arpl
in
push
mov
shrl
xchg
xchg
mov
std
das
cld
stos
cltd
jae
shr
imul
int3
int
xchg
and
stos
es
pop
jb
inc
or
stos
jl
pushf
dec
or
stos
shrl
cmpsl
mov
xchg
stos
gs
inc
mov
xchg
fwait
or
stos
popf
xor
fadd
push
dec
pop
js
jg
mov
imul
test
adcl
mov
dec
fcomps
xchg
adc
ss
insl
sbb
out
into
lahf
test
pop
push
or
mov
stos
push
in
rclb
or
cmp
push
stos
aas
test
xchg
xchg
int3
cmp
stos
stc
gs
popf
and
loope
adc
push
pop
cs
inc
data16
stos
dec
cmp
sub
andl
cmp
xchg
dec
sub
xor
cmc
mov
popf
outsb
rcrb
fdivs
adc
jnp
icebp
dec
xchg
stos
sub
cmp
lahf
and
mov
enter
xchg
notl
stos
inc
imul
stc
xchg
mov
pop
add
loopne
adc
arpl
pop
insb
jmp
fcomps
cmp
jno
aaa
push
or
jns
dec
mov
and
insb
sub
lock
push
sbbl
fwait
scas
mov
add
push
pusha
in
lretw
stos
mov
seta
cs
xchg
and
mov
jp
arpl
jge
mov
push
in
xlat
mov
lock
ljmp
stos
addr16
jo
arpl
std
cmp
stos
inc
inc
pop
or
out
stos
dec
jecxz
ret
jp
pop
inc
or
mov
rcr
cmpsl
sti
push
mov
lahf
mov
cs
jle
cmp
lods
jmp
jmp
adc
or
and
sbb
push
popf
adc
mov
xor
dec
cmpsb
push
aam
fsubrs
inc
fwait
mov
imulb
sub
fwait
imul
in
cmp
jmp
sbb
sub
insb
mov
stos
push
cmp
lret
cmpsb
push
jmp
jmp
gs
nop
xchg
jl
stos
sub
add
cli
imul
stos
inc
std
out
jno
clc
movsb
shrl
data16
or
stos
lea
outsl
dec
xchg
pop
jmp
gs
dec
in
mov
iret
cmp
xor
in
mov
cmp
js
shr
movsb
hlt
xchg
out
stos
mov
and
or
lret
push
stos
ljmp
inc
stos
ret
or
roll
int
inc
cmp
jae
pushf
mov
cli
sbb
cmpsb
sub
add
adc
sarb
mov
and
fnstsw
fistpll
and
pop
mov
xchg
arpl
adc
stos
mov
dec
push
jp
xchg
pusha
stos
mov
fstpl
mov
or
push
xor
outsb
cld
ret
xor
out
jp
lret
test
pop
pusha
or
pushf
push
stos
inc
int
lods
push
inc
cmp
cs
sbb
stos
inc
das
adc
cli
lods
stos
pop
jg
adc
inc
dec
dec
or
clc
fbld
mov
mov
sub
aam
jmp
cmpsb
in
int
push
cmp
dec
js
nop
sub
leave
sub
cmovbe
out
mov
jecxz
mov
mov
clc
jmp
out
and
xchg
cmp
or
and
mov
nop
push
fcoms
pop
push
vpcomuw
std
mov
mov
arpl
fwait
pop
gs
shl
ljmp
andl
vmwrite
ljmp
cltd
repz
xchg
das
lret
mov
mov
shr
push
and
push
imul
stc
push
shlb
or
jmp
jle,pt
jae
mulb
pusha
xor
repz
mov
push
jl
mov
les
jo
das
fwait
sahf
repnz
inc
idivb
xor
aas
adc
cld
and
rclb
stos
adc
aaa
xor
cmp
mov
mov
bound
dec
add
mov
mov
adc
jmp
mov
and
fimuls
stos
test
sub
clc
hlt
jne
test
das
and
std
icebp
sti
imul
and
into
cmp
aam
mov
xor
cmp
test
stos
lods
mov
daa
cmp
xchg
and
sub
imul
je
lret
dec
jbe
sub
jmp
add
sub
fisttpll
push
lds
inc
inc
mov
shrb
dec
lret
xchg
pop
das
test
pop
jmp
les
jecxz
arpl
jmp
lods
dec
mov
push
xchg
lret
stos
jl
xchg
mov
stos
jmp
out
push
cmpsl
jle
pop
nop
stos
enter
fs
imull
jle
dec
jecxz
adc
xor
push
xchg
ljmp
mov
sub
cmpl
ss
push
push
ja
jnp
out
cmp
cmp
adc
fcoml
loop
sub
mov
dec
pop
movsb
push
pop
pop
stos
xchg
lods
sbb
push
add
push
das
adc
cmp
insl
lock
int3
jmp
adc
and
movsl
iret
aas
mov
divb
mov
jp
fld
insl
xor
pop
mov
mov
addr16
test
push
fnsave
dec
popf
adc
sbb
cmp
sub
stos
cs
add
pop
pop
insb
iret
sbb
lcall
daa
stos
sub
xor
insb
stos
lock
xchg
lcall
sar
cmc
stos
pop
outsl
jno
cwtl
xchg
js
xchg
xchg
and
dec
pop
xor
push
jnp
aas
pushf
nop
stos
out
outsl
mov
mov
stos
xchg
rorl
fs
sub
and
scas
mov
and
cli
shlb
jmp
lahf
faddl
imul
stos
sahf
inc
daa
gs
fwait
call
scas
fsubrs
push
xchg
mov
stos
idivb
or
stos
test
cli
das
stos
icebp
inc
mov
pop
push
jmp
rcrb
lahf
int
femms
lds
or
pop
data16
push
or
mov
sbb
xchg
adc
dec
sub
in
icebp
push
xchg
sub
outsl
sub
cmp
push
lea
shrb
sahf
inc
push
lds
pop
xchg
lret
popa
test
stos
lock
sub
stos
mov
push
pusha
jge
out
stos
jno
add
mov
mov
stos
scas
les
or
mov
fidivs
loopne
loop
and
jge
cmpb
xchg
int3
cld
in
orl
add
or
lcall
cli
mov
xchg
add
and
lods
mov
mov
sbb
jb
aad
dec
or
sahf
mov
pop
dec
mov
lock
shrl
stos
pushf
in
in
stos
sub
cli
mov
xor
in
jmp
leave
sub
std
sbb
nop
insl
mov
jmp
stos
jge
repz
adc
mov
jp
cmp
ficompl
fwait
scas
clc
stos
xchg
or
push
sbb
or
mov
inc
xchg
stos
push
pusha
fiaddl
xchg
fbld
cmp
cmp
and
xor
scas
cli
out
push
mov
pushf
fldcw
inc
xchg
lcall
into
loopne
subb
sarl
xchg
sbb
and
jae
cli
in
imul
sbb
fdivl
in
xor
stos
sub
sub
int
mov
xor
shrl
je
jmp
mov
lea
adc
push
add
scas
xchg
leave
stos
subb
arpl
mov
stos
lea
xor
loopne
dec
pusha
stos
fcoml
inc
jo
out
arpl
sub
bound
jno
push
addr16
sub
jne
stos
mov
mov
lret
cld
cmpsb
cmp
dec
push
scas
dec
stos
mov
xor
or
mov
out
in
subb
std
add
insl
lea
jne
cli
stc
aaa
stos
dec
xchg
fwait
sbb
mov
push
sbb
icebp
pop
jne
xchg
nop
fistpl
adc
dec
scas
xor
push
and
rcrb
sbb
or
sub
xchg
xchg
sarb
call
xor
mov
mov
cld
in
add
movsb
sub
bound
sbb
xlat
test
shrl
sbb
pop
enter
xchg
xchg
in
lret
push
cld
push
mov
jecxz
xlat
mov
and
mov
and
jg
aam
xor
hlt
jmp
adc
sti
inc
inc
jl
push
and
or
repnz
xlat
xchg
stos
add
out
fisubs
inc
inc
scas
or
push
push
jnp
fisttps
int
mov
jno
sub
dec
inc
insb
xchg
test
fmul
pop
dec
xchg
stos
xchg
push
jecxz
leave
mov
mov
xchg
push
mov
push
xchg
pop
jmp
repnz
fwait
sti
ljmp
stos
pop
shlb
stos
stos
add
lret
divl
xor
mov
cld
ljmp
cmp
shlb
stos
sti
xor
mov
in
jae
mov
mov
stos
mov
fisubrl
popf
push
push
scas
lods
jne
sub
and
lds
stos
les
pop
push
clc
dec
enter
stos
sbb
sbb
mov
fisubrs
push
inc
and
lods
sub
sub
cmp
dec
stos
jo
add
mov
cld
stos
inc
aaa
aad
pop
mov
stos
cmp
inc
push
jno
clc
lcall
add
lcall
jmp
ss
clc
stos
popa
sub
stos
int
adc
sbb
stos
jmp
jno
mov
popf
cmp
imul
test
pop
mov
or
in
jnp
insl
stos
xchg
jae
dec
stos
dec
aad
inc
stos
jp
xor
mov
call
pop
insb
leave
rolb
jo
in
repz
fbstp
fwait
dec
dec
push
test
pop
and
shl
mov
sub
ret
jno
jo
pop
stos
and
jmp
xchg
scas
mov
push
mov
repz
xchg
stos
sbb
ljmp
dec
or
cmp
push
cmp
stos
inc
jne
test
subl
xor
lods
popf
fwait
lcall
enter
repnz
rorb
cmpl
stos
cmp
lock
scas
js
ja
and
test
mov
in
aam
dec
das
outsl
hlt
sbb
clc
stos
xchg
lea
stos
stc
cld
daa
repz
push
xor
popa
je
or
stos
or
js
inc
and
jmp
and
cltd
xchg
dec
push
imul
andb
jg
scas
shrl
cmp
imul
sbb
js
test
mov
ja
cmp
stos
inc
out
loop,pt
std
adc
cmpsb
push
add
mov
or
jp
adc
outsb
jmp
adc
jge
rorb
arpl
push
cld
fldcw
stos
pop
ret
mov
hlt
jle
stos
fwait
sub
jmp
push
push
stos
lods
mov
mov
or
mov
and
mov
mov
xchg
xchg
cmp
xchg
lret
pop
and
inc
cmp
pop
jae
mov
popf
mov
or
inc
jnp
jl
pop
push
sub
enter
stos
sbb
imul
inc
and
stos
inc
adc
push
mov
stos
fistpl
push
or
sub
hlt
xchg
js
inc
push
mov
es
filds
cmpsb
shrl
xchg
je
adc
push
fstpl
xchg
adc
stos
nop
test
xor
ljmp
scas
daa
pusha
stos
pop
data16
lret
addr16
fs
jno
js
pop
stos
call
jmp
cmp
clc
push
faddl
stos
mov
adc
je
ret
decl
mov
stos
add
fcmovu
cwtl
ja
push
and
xor
mov
xchg
imul
sub
or
jbe
dec
stos
xchg
sub
xchg
mov
mov
fadds
jp
mov
and
mov
mov
inc
stos
xchg
jno
jae
fsubs
adc
cmc
call
sbb
test
ret
popa
stos
iret
adc
sub
lods
mov
sbb
stos
jne
ja
mov
jo
ret
orb
mov
push
mov
jge
jg
addr16
fs
or
push
test
fwait
mov
cmp
repnz
mov
pop
mov
and
pop
les
mov
mov
int
mov
stos
test
jb
push
fiaddl
stos
orl
cmp
sbb
xor
ret
push
jne
stos
test
lods
sbb
cmpsl
or
fsubrs
movsb
adc
xor
loope
push
jge
scas
pop
jp
sub
scas
insl
xor
mov
jmp
fnsetpm(287
jecxz
repz
mov
add
and
adc
shlb
stc
stos
adc
es
cwtl
int
stos
cmpxchg
enter
push
dec
pop
add
stos
js
xor
sub
jl
inc
mov
popf
pop
xchg
enter
pop
and
push
sub
hlt
test
and
movsb
aaa
insl
cmp
pop
xchg
xchg
loope
fisttpll
cmpl
mov
outsb
stos
icebp
ror
movsl
dec
enter
ficoml
mov
popa
dec
jecxz
loop
stos
xor
insl
jnp
pushf
scas
scas
stos
inc
xor
and
loop
into
in
adc
push
arpl
inc
cwtl
pop
js
insl
mov
aaa
ret
adc
mov
outsl
mov
stos
mov
mov
pop
add
xchg
daa
jae
fwait
loop
and
and
or
hlt
mov
stos
xchg
out
mov
mov
jns
mov
and
dec
xchg
arpl
stos
ja
add
adc
stos
lcall
cmp
stos
pop
jecxz,pn
add
mov
mov
stos
sbb
inc
stos
cmp
in
push
fistl
scas
stos
jbe
xchg
data16
mov
or
add
ret
out
mov
repz
out
adc
xchg
add
inc
jle
add
es
mov
pop
mov
stos
ja
dec
test
int3
pushf
stos
shlb
xchg
adc
call
sub
addr16
cmp
push
xchg
imul
ret
icebp
and
jecxz
cmpsl
repnz
sahf
es
data16
cmp
cmpsb
adc
iret
cltd
stos
ficomps
fsubrs
mov
and
xchg
dec
ss
daa
xchg
ret
les
negl
stos
mov
test
shlb
int3
jno
iret
cmp
push
mov
adc
sbb
movsb
jp
into
hlt
dec
fisubrl
mov
popa
stos
out
adc
sbb
fisubs
adc
stos
dec
inc
loop
mov
xchg
push
iret
clc
stos
out
mov
mov
test
int3
fwait
push
push
xlat
push
mov
andl
bound
push
dec
jp
sbb
ds
mov
add
mov
sub
mov
int
lods
mov
stos
rorb
push
sub
stos
stos
cs
pop
cmp
mov
repz
stos
outsl
test
movsl
push
clc
xlat
mov
aad
js
mov
jmp
rcrl
or
lahf
sbb
push
stos
jl
ljmp
inc
mov
movsb
dec
stos
sbb
cmp
xor
or
stos
and
shlb
lea
jecxz
cmp
mov
mov
adc
push
fcomi
out
rclb
sbb
jg
push
mov
xchg
movsb
xlat
in
xor
fsubrs
and
push
fsubrl
mov
jmp
dec
int
sbb
push
stos
sti
aaa
xor
stos
mov
or
jmp
std
sbb
sub
mov
insb
fimull
dec
and
addl
enter
xchg
cwtl
mov
stos
jae
enter
bound
push
and
jmp
imul
pop
js
mov
movsl
lahf
popf
push
inc
jl
inc
pop
mov
pop
mov
scas
stos
pusha
clc
inc
adc
mov
mull
add
sbb
push
stos
shll
sbb
in
jmp
pop
scas
add
lock
insb
cld
stos
mov
inc
or
push
das
mov
pushf
out
in
lret
jno
imul
xchg
sub
jo
shlb
cwtl
dec
push
push
mov
insb
sub
mov
jnp
jle
out
add
lret
push
inc
push
or
inc
lahf
shlb
stos
add
or
movsl
shlb
mov
mov
std
mov
push
pop
test
cld
hlt
mov
adc
xor
mov
pop
ficoms
ljmp
push
mov
cmpsb
and
mov
pushf
sub
dec
lods
cld
lret
fwait
dec
pop
mov
jle
cltd
and
in
fstpt
lret
sbb
stos
xlat
subb
testb
outsb
xchg
xchg
stos
add
sbb
lahf
jne
and
inc
int
or
in
arpl
mov
xchg
outsl
pop
lods
rep
inc
aaa
sub
mov
push
stos
add
punpckhwd
js
sahf
add
jae
and
iret
pusha
mov
or
std
fnsave
imulb
push
jae
mov
stos
addr16
test
mov
cmp
push
inc
stos
test
sub
stos
sbb
pop
lods
push
cmpsb
add
add
sub
stos
das
shll
mov
adc
lods
arpl
cmp
inc
xchg
loope
aaa
stos
jnp
enter
in
add
adc
daa
stos
frstor
pushf
sbb
pop
sti
jmp
xor
lahf
sub
cmp
pop
bound
push
jmp
mov
cs
jne
stos
push
inc
mov
loopne
js
in
nop
outsl
imulb
stos
jecxz
adc
pusha
pop
mov
push
addl
add
enter
mov
add
stos
push
pop
inc
xor
ds
stos
adc
shlb
stos
lods
int3
dec
xor
jmp
aas
push
lods
sub
push
xchg
mov
movsb
jmp
sub
stos
and
mov
sbb
stos
add
daa
mov
cmc
sbb
jp
roll
jmp
daa
aas
out
sub
fcoml
sti
stos
cmpsb
enter
in
xor
push
add
mov
and
fldenv
stos
pop
scas
bound
mov
js
popw
in
xchg
cmp
and
jae
dec
sahf
or
push
dec
cwtl
xchg
iret
jmp
ret
inc
lods
les
cmc
sbb
rclb
loopne
xor
push
mov
cmp
mov
in
lahf
test
stos
fsubr
ret
cld
stos
cmp
inc
into
or
xchg
outsl
lods
add
dec
inc
call
inc
stos
shlb
shll
iret
ljmp
sahf
test
shrl
sub
jo
push
cld
mov
test
cwtl
jb
stos
int3
clc
jns
sbb
sbb
leave
les
jg
aaa
cld
adc
stos
mov
int3
dec
stos
add
ret
ds
xor
cmpsb
shlb
stos
push
push
and
pushf
and
andl
stos
add
mov
lahf
sub
and
into
daa
inc
sub
dec
stos
sbb
inc
cmp
mov
shll
xchg
ficompl
xor
xchg
adcb
nop
imul
mov
sbb
adc
shrb
insl
leave
jmp
pop
cli
mov
push
push
mov
lahf
pushf
fucom
stos
daa
push
mov
outsb
mov
mov
sub
push
repnz
lock
scas
sub
shrl
xchg
mov
sbb
inc
mov
add
lea
jb
mov
xchg
lock
pushf
fistl
or
pop
xchg
xor
inc
stos
add
jne
das
inc
push
and
call
fcompl
sub
inc
out
xchg
daa
pop
popf
push
sarl
std
pop
shrl
cmp
stos
dec
push
sbb
test
sbb
inc
aad
xchg
stos
jae
lea
stos
out
out
stc
jne
dec
mov
fwait
add
stos
adc
push
nop
push
fnsave
dec
push
mov
adc
stos
shlb
mov
and
jl
stos
sub
test
out
stos
jne
xchg
dec
and
sbbb
mov
out
sub
lret
xchg
scas
out
loope
dec
fcomps
and
sub
movsb
aas
fadd
stos
test
dec
testb
and
loopne
and
stos
xchg
xor
es
int3
daa
stos
inc
nop
xor
stos
mov
fs
stos
gs
xchg
xchg
negl
insl
mov
fsubl
push
pusha
mov
jnp
mov
inc
aaa
push
aam
mov
aad
sbb
sub
mov
scas
lods
mov
insb
or
jle
push
xchg
cmpsl
sbb
xor
dec
stos
arpl
and
stos
jg
stos
and
xchg
in
inc
inc
adc
sbb
mov
loope
inc
mov
jl
cli
mov
lahf
push
arpl
push
cmpsb
stos
mov
stos
in
dec
ss
aaa
scas
fsubl
ret
imul
xchg
lea
xchg
popf
lods
jmp
std
cmp
es
xorl
jns
shrb
pop
pop
xor
je
sub
mov
mov
addr16
std
pop
xor
fdivrl
cld
stos
out
out
lret
mov
movsl
sbb
push
mov
faddl
outsb
stos
jns
pop
mov
addr16
into
xor
call
pop
popf
jmp
and
outsl
imul
mov
adc
call
sub
cltd
inc
in
add
push
test
jo
scas
inc
out
push
dec
pushf
enter
xchg
mov
frstor
add
call
lcall
push
mov
mov
cmpsb
jecxz
jb
inc
cltd
cld
inc
inc
cmp
dec
jnp
and
imul
sbb
xchg
adc
jae
lcall
add
and
test
leave
cli
pmulhuw
jne
stos
cmp
mov
fwait
sti
stos
lock
jnp
icebp
xchg
test
adc
movsb
push
in
test
stos
jmp
pop
ss
jnp
pop
popf
dec
xchg
stos
xchg
xchg
inc
lock
cmp
stos
and
mov
jb
out
stos
xor
mov
stos
leave
inc
mov
or
dec
imul
pop
les
sbb
pop
sub
icebp
stos
out
dec
mov
xchg
outsl
or
int
mov
and
xchg
stos
inc
adc
add
call
stos
ret
mov
cmpsb
stos
xlat
vmulss
xorl
in
pop
js
es
xor
and
pop
into
xchg
mov
stos
ja
dec
test
into
mov
pusha
stos
iret
int
sub
loop
inc
in
outsb
stos
bound
add
aas
pop
inc
orb
sbb
bound
sub
xchg
inc
fisubl
outsl
stos
jl
dec
out
cwtl
push
xlat
das
sub
cli
stos
into
test
movsl
ljmp
mov
push
movsb
dec
int
cmp
lods
xchg
adcb
repnz
ret
in
mov
cltd
std
push
stos
addl
xchg
mov
lock
jnp
xchg
and
lcall
cmpb
sarb
mov
mov
and
fsubrl
nop
aad
testl
roll
push
mov
lcall
sbbb
push
fstpt
fmuls
cli
lods
stos
ret
aam
and
stos
dec
mov
sub
mov
mov
push
in
daa
test
push
stos
mov
or
mov
pop
lret
jo
mov
jmp
push
fs
movl
fwait
push
rorb
mov
ja
stos
adc
push
test
stos
mov
mov
mov
push
add
sbb
ret
std
out
pop
pushf
or
ljmp
mov
jmp
movsb
mov
lock
popa
lods
push
dec
movsb
mov
fsubrs
imul
addr16
mov
mov
arpl
lds
mov
shrl
imul
in
mov
push
inc
cmpsb
inc
imul
mov
enter
scas
xor
stos
decb
mov
stos
pop
mov
incl
loopne
mov
cmpsb
in
jmp
add
xchg
stos
loope
mov
push
lea
popa
int3
popf
mov
dec
xor
cld
stos
jne
ljmp
ja
js
sbb
ficoml
mov
into
xchg
je
dec
lods
pop
stos
sti
repz
mov
les
lret
add
fildll
mov
sbb
dec
cli
inc
mov
test
enter
outsl
out
and
push
fdivs
pop
idivb
add
inc
push
ret
lods
fs
adc
loope
sbb
dec
push
imul
mov
stos
inc
js
add
jmp
pop
loope
sub
movsb
fs
push
jmp
lahf
jns
test
jnp
mov
mov
xchg
imul
and
shr
loop
stos
arpl
cmp
jmp
sub
push
mov
dec
fmull
mov
outsl
xchg
mov
stos
or
xchg
clc
cmp
mov
int3
lahf
lahf
rcll
sub
mov
imul
push
jne
add
test
popa
dec
xchg
lods
cltd
or
stos
ss
lcall
test
hlt
mov
or
mov
add
in
push
fcomps
cmp
pop
mov
dec
pop
sbb
imul
mov
mov
and
dec
in
ljmp
cwtl
inc
leave
cmp
push
jne
push
lcall
jge
in
mov
and
xor
pop
push
test
enter
cmp
inc
fisubrs
sbb
insb
sub
ljmp
pop
push
mov
sar
mov
push
mov
pop
je
add
filds
sbb
mov
popa
stos
add
inc
test
je
stos
adc
dec
cmp
js
jmp
stos
or
mov
push
repnz
es
loope
stos
sti
jne
dec
cmpb
cmp
jnp
hlt
in
testl
inc
stos
ja
ds
jl
rep
adc
mov
xchg
mov
js
stos
in
mov
lahf
or
aaa
dec
push
fisttps
pop
push
popf
ja
in
stc
lahf
sahf
push
hlt
adc
stos
test
cli
push
stos
shlb
in
sbb
mov
jnp
add
imul
jl
add
xchg
bound
and
xor
lret
fucomip
fildl
enter
push
push
add
or
mov
push
cs
push
jae
daa
test
movsb
lret
pop
and
outsb
push
fcoms
adc
jmp
mov
js
dec
adc
mov
lret
stos
push
outsl
xchg
idiv
es
push
lret
push
clc
enter
push
stos
mov
imul
cmpsb
int
adc
stos
cmpsb
push
jmp
mov
push
adc
nop
test
ljmp
dec
orl
stos
xchg
ja
js
shlb
or
xor
cmp
cmp
test
lret
test
push
aas
gs
stos
inc
jle
lods
sbb
pop
mov
daa
stos
xor
mov
or
mov
mov
insl
stos
pop
push
xor
repnz
rcrl
dec
push
or
shrl
stos
imul
inc
push
out
ds
addr16
ljmp
push
sbb
xor
movsb
or
jno
push
popf
orb
stos
inc
ja
roll
aam
fmulp
popa
stos
xlat
mov
and
adc
lahf
cmp
stos
movsb
mov
lret
pushf
aam
push
ds
scas
addr16
inc
out
xchg
hlt
fidivs
shrl
shrb
mov
test
in
stos
jb
push
shrl
sti
fwait
pop
je
dec
stos
sbbl
ret
mov
pop
sahf
shrb
psubb
imull
aaa
push
mov
dec
cld
sti
xchg
mov
stos
ret
inc
jle
mov
aas
cmp
xor
icebp
stos
out
mov
in
push
jae
icebp
stos
lds
out
stos
mov
push
sub
xchg
je
nop
xchg
jmp
and
rol
xchg
sti
push
loopne
adc
xlat
imul
mov
ret
xchg
popa
lods
pusha
jbe
daa
sbb
fwait
or
scas
loopne
stos
jns
imul
call
sbb
bound
xchg
stos
fwait
int3
mov
bts
into
push
sub
or
jmp
lahf
stos
and
pop
push
cld
sahf
loop
stos
repz
mov
gs
inc
imul
lahf
mov
mov
leave
scas
mov
out
pop
rcll
xchg
mov
imul
stos
das
push
inc
xchg
push
int
or
jmp
aad
aam
in
pop
leave
push
mov
popa
mov
out
inc
stos
mov
arpl
jg
or
fs
xor
stos
ljmp
push
sbbb
push
lock
mov
cmp
stos
in
fwait
daa
out
mov
cmp
repz
xor
xchg
rcll
sub
xor
stos
je
xor
mov
push
adc
jmp
sub
mov
push
in
fs
outsl
stos
fildl
pop
jae
push
mov
jnp
push
sbb
jl
sbbb
lods
push
push
and
jno
stos
sti
addr16
or
push
mov
pop
mov
scas
xchg
imul
adc
stos
mov
lods
mov
dec
pop
jmp
xor
out
xchg
xchg
or
mov
pop
push
clc
stos
lcall
das
stos
lock
fidivrl
fs
jecxz
dec
and
add
test
adc
sti
mov
inc
and
sbb
push
in
stos
stos
mov
push
pop
xor
stos
cld
ss
inc
das
dec
test
stos
je
push
int
lcall
fidivl
sbbb
aad
jmp
jmp
pop
cltd
xchg
mov
push
cwtl
xor
stos
out
pop
imul
clc
jge
mov
js
cmp
stos
outsb
stc
jno
repz
in
orl
and
sti
inc
push
lahf
xlat
movsb
shrl
adc
pop
hlt
pop
in
subb
dec
pushf
out
stos
mov
in
sti
push
pop
jge
je
rorb
mov
xchg
cmp
mov
cmp
mov
push
mov
in
or
es
and
stos
arpl
je
mov
push
aad
mov
imul
or
lahf
push
movsl
inc
and
adc
adc
fs
mov
stos
xchg
xlat
mov
cmp
mov
data16
jns
dec
or
stos
jne
pop
daa
add
inc
stos
xchg
and
arpl
dec
xor
lret
mov
and
pop
mov
clc
lahf
adc
mov
mov
mov
adc
fdivrs
cmp
pop
and
xor
cmp
aam
fstpt
mov
pop
repz
je
shll
dec
add
test
sbb
jmp
dec
mov
add
xor
clc
js
jl
negl
inc
push
dec
jnp
es
fdivrl
nop
ret
stos
cmp
aam
inc
adc
fwait
or
stos
push
lods
dec
cmpsb
pop
ffree
cmc
stos
call
xchg
js
movsb
dec
test
push
in
dec
int3
lea
pop
push
cs
gs
stos
aad
shrl
out
xchg
and
push
stos
cmp
int
stos
sbb
xor
and
imul
test
xchg
xchg
rcrl
inc
js
mov
je
fwait
ja
inc
mov
stos
scas
and
mov
jne
popa
and
and
sbb
pusha
stos
jecxz
ficompl
stos
adc
push
pop
arpl
dec
std
push
xchg
dec
imul
movsb
negb
outsl
add
xchg
dec
arpl
test
pop
dec
andb
dec
jmp
or
or
xor
xor
arpl
stos
call
pop
mov
stos
mov
sbb
stos
mov
fstpl
dec
rcrl
xchg
inc
sub
fstps
scas
mov
test
stos
into
ss
inc
enter
mov
out
lock
movl
js
fisubrl
lds
lret
leave
dec
pop
cmc
fsubrl
adc
mov
aaa
jmp
jo
std
popf
sbb
stos
sahf
jg
mov
sub
jnp
leave
pop
jl
stos
xchg
cmpsl
loopne
imul
shl
fwait
jmp
and
mov
inc
stos
test
inc
cltd
push
stos
push
mov
pop
sbb
stos
stos
out
xor
je
mov
xlat
pusha
xchg
jno
shll
mov
inc
lods
jae
lods
push
ret
jne
pop
movsl
mov
pop
in
sar
popf
mov
jecxz
cmp
adc
dec
sub
sbb
xor
or
add
add
sub
mov
xchg
xchg
cmpsb
fldt
xor
adc
push
pop
in
inc
dec
icebp
stos
lock
ds
cmpsl
stos
xchg
mov
js
sahf
andl
les
add
cmp
addr16
fildll
dec
inc
mov
or
mov
stos
jbe
ror
cmp
xchg
ret
stos
jae
jmp
shrb
iret
push
cmp
popf
stos
mov
sbb
xchg
dec
xchg
xor
cmp
sub
daa
subl
add
adc
mov
mov
jp
movsb
ret
and
fwait
pusha
mov
mov
xchg
push
mov
xchg
jae
test
jle
or
cwtl
jl
and
aaa
stos
add
ret
pop
sub
add
and
and
sete
push
sti
ja
sub
fdivrl
loope
test
xchg
inc
xchg
in
insb
imull
lea
leave
xor
stos
push
xchg
dec
sbb
cmpsb
mov
in
lret
aaa
dec
push
xchg
fwait
test
outsl
xorl
int
and
stos
or
sbb
mov
add
pop
cmp
or
inc
out
fldt
in
or
or
sbb
inc
jmp
lea
scas
mov
cmc
inc
scas
frstor
mov
test
lods
stos
inc
or
inc
fldt
fcoml
push
add
mov
cmpl
mov
fs
and
adc
cmc
mov
xchg
mulb
imul
sahf
test
xchg
and
loopne
pop
daa
std
inc
push
int3
mov
xchg
stos
jne
lahf
cmp
aad
inc
stos
adc
stos
push
mov
fwait
jbe
mov
shrb
fildll
loope
stos
imul
ficomps
cltd
sub
push
jle
js
aam
lds
aad
outsb
adc
dec
pushf
mov
mov
fcoms
ja
stos
xor
inc
ror
subl
xchg
lods
ficompl
mov
inc
xchg
mov
sub
mov
dec
lds
adc
mov
outsl
push
ds
inc
sub
inc
les
shrb
xlat
cmpsl
sbb
sti
insl
xchg
dec
adc
stos
jmp
and
mov
adc
std
fdivrl
cld
stos
mov
scas
imul
cmp
inc
xorl
mov
stos
insb
into
adc
jmp
ljmp
xchg
add
sbb
lods
fsts
in
pop
int
lcall
lds
sbbl
push
mov
inc
enter
push
mov
xchg
arpl
and
inc
fsubl
popl
imulb
or
xchg
aas
loope
dec
cmp
push
cmpsl
cwtl
imul
jno
mov
push
pop
xchg
rorl
stos
cmp
sarb
fwait
sbb
fwait
adc
fucomip
jmp
int3
stc
sub
pop
rcrl
stos
lock
in
push
jns
iret
in
lods
and
jecxz
stos
mov
lods
scas
lret
sub
pop
adc
mov
movsl
mov
sub
enter
imul
pusha
and
mov
insl
mov
xchg
mov
or
in
cltd
pop
mov
maxps
aas
ret
lods
scas
jmp
cmp
xchg
sbb
adc
mov
or
push
jl
movsb
cmp
call
mov
dec
pop
sbb
popa
cmpsb
arpl
fwait
stos
inc
or
xchg
jno
stos
sub
ljmp
mov
orb
repz
movsb
imul
stos
sti
movsl
mov
or
icebp
mov
jns
pushf
sub
pop
shll
imul
xchg
stos
push
inc
cmc
pushf
rcrb
addr16
adc
movsb
sub
jecxz
xor
push
pop
jne
imul
insb
adc
pop
popa
je
nop
sub
fs
addr16
dec
push
stos
fmuls
stos
aas
sub
mov
popl
int3
cltd
pop
icebp
nop
adc
shll
std
fs
pop
push
mov
mov
xlat
mov
jno
repnz
or
dec
lods
stos
test
popf
xchg
pop
push
inc
cmp
je
or
jnp
inc
mov
jno
stos
enter
into
mov
pop
shlb
pop
jnp
stos
inc
icebp
das
cltd
xchg
add
jmp
ret
les
scas
push
mov
dec
outsl
movsb
push
inc
push
sti
shll
and
popf
xor
cmpsl
ss
in
mov
sub
push
rcrb
imul
mov
insl
and
shlb
in
in
mov
imul
mov
imul
dec
lahf
xchg
jmp
sbb
out
pusha
jge
nop
sti
fwait
stos
aam
mov
and
stos
cmp
jae
push
lds
stos
dec
dec
les
xchg
jmp
subb
ud1
pop
stos
stc
inc
cmpsb
idivb
loop
fs
in
dec
decl
jbe
push
in
sub
sbb
sub
or
cmp
push
push
jle
fisttps
mov
pop
daa
add
dec
ret
mov
cmc
push
sbb
stc
xchg
stos
int3
cmp
fdivs
sub
shll
inc
and
mov
das
dec
stos
cmp
jp
pusha
iret
jecxz
scas
leave
stos
hlt
mov
add
stos
xchg
lods
mov
inc
subl
mov
pusha
stos
sbb
jp
enter
pop
xchg
add
out
insb
cmpsb
popf
mov
and
sub
ficompl
movl
mov
xchg
jge
iret
mov
or
int3
loop
mov
jecxz
out
fisubrs
js
test
stos
mov
or
bound
into
or
sub
sbb
push
mov
inc
sub
xchg
mov
es
sub
mov
jmp
and
ss
jecxz
xchg
mov
sub
je
ds
inc
push
stos
shll
stos
movsl
rcll
cmp
mov
or
adc
inc
lret
subb
xchg
js
jecxz
adc
mov
mov
mov
lock
loope
rcr
dec
lret
mov
xchg
ret
imul
or
call
xor
inc
pop
stos
adc
xor
test
add
insb
jg
sub
lock
sub
inc
ret
daa
mov
jnp
mov
test
ds
mov
cs
jmp
sbb
inc
in
adc
daa
cmc
pop
and
mov
and
push
cwtl
jg
mov
jle
pop
jmp
cmp
into
in
lock
push
pop
ljmp
or
call
and
push
and
sub
bound
cs
gs
sbb
nop
int
stos
mov
enter
je
in
aas
lods
fisttpll
cs
stos
or
jmp
pop
dec
mov
repnz
aad
stos
dec
cmp
cltd
popa
cmp
leave
pop
js
dec
lods
stos
test
push
out
stos
scas
enter
jp
add
imul
imull
inc
mov
int3
fidivs
and
dec
add
lahf
stc
mov
in
in
inc
inc
adc
xchg
sbb
jle
lods
sbb
adc
sbb
rol
out
mov
fisttpll
xchg
stos
insl
push
cli
fsubs
imul
xchg
xchg
test
mov
sti
repz
fsubrs
out
leave
push
stos
xchg
jmp
cmp
xor
xor
outsb
mov
inc
sbb
xor
andb
pop
or
out
xchg
dec
js
or
stos
dec
imulb
jnp
cs
test
mov
sarl
aad
mov
inc
je
cmp
mov
cmp
hlt
xchg
sahf
xchg
push
jbe
jae
fwait
xchg
shrb
stos
ja
sbbb
sbb
aaa
ljmp
stos
push
cmp
jne
lock
cmp
push
jmp
fdivs
jmp
fldenv
pop
movsb
inc
lods
jle
stos
sahf
push
add
ret
int
in
pop
pop
mov
sub
cmp
daa
mov
stos
push
pop
jp
enter
rclb
dec
popf
and
ljmp
aaa
pop
aad
push
ja
mov
and
adc
stos
dec
js
inc
or
incl
stos
mov
popa
sbb
inc
sub
mov
sub
fcompl
shlb
pop
sahf
dec
imul
stos
or
fs
mov
stos
cwtl
push
outsl
adc
jmp
int3
mov
aad
cs
pop
mov
mov
push
xor
arpl
inc
xchg
jmp
scas
fsubrl
or
das
scas
mov
adc
ficompl
stos
aaa
or
xor
insl
idiv
dec
aas
sub
loop
pop
add
ds
lret
je
pop
and
cwtl
push
mov
or
inc
stos
fwait
push
or
jge
dec
loop
int3
adc
lock
xchg
repz
cld
dec
stos
cld
out
dec
xchg
dec
stos
aas
sub
xor
popf
nop
gs
stos
rcr
in
sub
and
enter
lret
mov
mov
test
inc
loop
jecxz
movsl
pushf
nop
jl
and
add
imul
nop
flds
mov
das
mov
pop
add
and
int
popa
cmp
jle
mov
mov
xchg
movsb
icebp
mov
loop
sub
outsb
and
sbb
cmp
inc
cli
mov
mov
fldl2e
xchg
stos
imul
fiaddl
jno
adcl
and
cli
lea
cmp
stos
inc
int
push
daa
pop
push
jg
push
mov
scas
aam
pop
out
cltd
stos
cli
ds
xor
mov
lds
aam
out
xchg
stos
push
popa
test
sub
sahf
fldcw
mov
jg
rolb
mov
imul
and
ret
stos
or
xor
or
xchg
cmp
lahf
fwait
cli
lret
pop
xor
mov
stos
fdivp
and
stos
dec
jmp
mov
mov
and
pusha
imul
call
jmp
fstpt
pop
loopne
cmc
push
cwtl
shl
lahf
fildll
push
stos
dec
cmp
jp
test
jecxz
cs
pop
mov
lods
dec
cmc
imul
out
xchg
xor
stos
daa
add
pushf
push
inc
out
or
lods
cmp
stos
hlt
lods
inc
adc
bound
jp
push
cmp
or
lds
mov
loopne
cmpsb
stos
shll
dec
mov
insl
xor
stos
testb
stos
stos
iret
add
scas
out
mov
adc
call
rcl
sub
lahf
pushf
cltd
int3
bts
andl
or
sti
push
pop
imul
fstpl
sbb
sub
fidivs
addr16
sub
ja
push
test
jmp
fbstp
sub
stos
clc
fcoml
jnp
mov
sbb
std
pop
arpl
push
cmp
sti
jl
sub
mov
add
push
mov
push
add
imul
cmpl
scas
xchg
stos
das
shll
inc
pushf
jno
cs
jge
pcmpgtw
jo
jl
orl
roll
xchg
mov
jmp
mov
sahf
stos
rcrl
xchg
xor
or
dec
mov
add
and
movsb
inc
sar
hlt
and
mov
stos
out
hlt
dec
or
das
stos
test
pop
shrl
stos
sbb
imul
cmp
cmp
adc
jmp
mov
hlt
cwtl
mov
cwtl
ret
fdivs
shll
lret
stos
mov
aam
nop
adc
rclb
lds
pushf
rolb
stos
mov
popf
lods
cmp
mov
sbb
jmp
loop
jns
ss
je
jmp
mov
push
lret
lods
cld
mov
adc
mov
js
inc
loop
cltd
in
cltd
jmp
mov
imul
inc
pop
pop
stos
or
lds
jmp
stos
adc
aaa
push
test
sahf
lock
pop
out
stos
fcmovbe
cmp
test
fstpt
lahf
add
cmp
lcall
xchg
lds
imul
mov
and
pop
aaa
sub
mov
dec
stos
xor
mov
mov
mov
shrb
stos
ja
xor
or
fs
stos
fistps
insb
push
flds
sub
ds
cmp
fwait
clc
movsl
cmp
rcl
popf
stos
scas
into
shlb
in
je
cmp
mov
sahf
lods
sbb
pop
lcall
jg
mov
lock
stos
stos
sbb
mov
movsl
cmp
push
mov
cmpsl
fstp
cld
std
xchg
stos
pop
push
mov
sbb
stos
or
add
dec
cmpsl
jmp
and
cltd
inc
xchg
stos
pusha
test
out
sbb
pop
jmp
scas
or
mov
arpl
adc
enter
pop
fimull
std
adc
mov
stos
test
sbb
dec
dec
ret
pushf
stos
mov
lahf
fnstcw
lea
pop
adc
sbb
push
bts
mov
test
pop
push
subl
stos
fstpt
add
or
adc
out
jecxz
dec
mov
dec
cld
pop
bnd
test
adc
xchg
stos
mov
jmp
int
pop
sbb
mov
repz
shr
ss
pop
xchg
sub
or
inc
arpl
push
fstpt
mov
dec
sbb
insl
stos
xor
out
add
mov
arpl
stos
pop
sti
cmpsb
mov
shrl
stos
lods
mov
stos
add
dec
pop
mov
add
pop
stos
mov
in
popa
jl
mov
xor
mov
inc
clc
sbb
stos
adc
jnp
or
stos
or
xchg
outsb
subb
mov
stos
shrb
mov
imul
cwtl
jl
imul
imul
add
and
jl
faddl
stos
push
mov
xchg
cs
add
or
lcall
lods
stos
cmp
into
arpl
test
test
mov
in
stos
pop
jne
push
das
dec
inc
packsswb
inc
xor
fwait
stc
mul
push
sub
lahf
cmp
repnz
mov
mov
adc
cmp
in
arpl
mov
into
ds
xor
stos
mov
ret
aaa
push
je
mov
pop
mov
mov
stos
pop
repz
dec
stos
adc
pushf
add
adc
mov
jmp
mov
stos
inc
pop
lods
lock
insb
test
stos
xchg
or
lret
das
dec
stos
clc
adc
push
dec
enter
adc
mov
mov
daa
dec
mov
jbe
sub
and
arpl
xor
pop
shr
clc
mov
movl
lret
jecxz
inc
xchg
das
inc
nop
std
scas
pop
xor
push
stos
insb
insl
or
js
mov
lret
pop
in
dec
loop
or
imul
std
push
mov
push
lods
mov
mov
cmpsb
mov
jno
ret
hlt
mov
dec
andl
loope
mov
jecxz
jmp
stos
mov
mov
jnp
adc
mov
sbb
cmp
push
stos
scas
push
and
je
pop
jmp
rcr
inc
stos
add
nop
mov
stos
scas
sub
stos
je
pushf
out
xlat
sbb
movsl
stos
pop
xchg
adc
mov
gs
mov
pop
pop
dec
lret
arpl
sarl
mov
sub
addr16
pusha
mov
stc
jecxz
sub
sub
stos
scas
pop
lds
test
inc
fldenv
aam
xor
stos
popa
mov
daa
or
clc
jmp
pushf
lahf
aad
leave
sarb
push
in
cmpxchg8b
loopne
stos
or
push
mov
stos
add
imul
subl
adc
mov
jl
stos
pop
andl
stos
pop
inc
add
leave
add
adc
hlt
cmpsb
stos
sbb
loop,pn
stos
jae
ljmp
subb
mov
dec
jge
xor
stos
mov
pop
add
and
iret
mov
cmpsl
imul
jae
fldcw
and
in
loop
jo
stos
push
stos
mov
outsb
push
pop
cwtl
stos
pop
fldt
in
aam
daa
pusha
adc
sbb
loope
push
jbe
lods
push
jbe
stos
pushl
or
out
int3
push
call
xchg
subl
stos
aad
and
jns
pop
pop
imul
jmp
testl
dec
insb
mov
pop
adc
stos
aaa
pop
xchg
dec
sub
lcall
lret
jnp
out
jmp
inc
add
fimuls
stos
sbb
aad
ret
stos
jae
lods
inc
inc
sub
cmp
jo
out
pop
stos
unpckhps
mov
out
adc
test
sub
lea
divb
dec
or
mov
inc
jp
stos
push
les
or
and
dec
mov
lret
bound
pop
push
int3
mov
repnz
mov
xchg
stos
imul
push
out
and
stos
movsl
mov
inc
ret
jg
iret
inc
xor
push
sub
lds
xchg
mov
fisubs
mov
stos
push
push
adc
or
icebp
out
sub
lret
push
push
ror
mov
adc
scas
inc
stos
mov
subl
adc
add
or
pop
stos
adc
lret
mov
call
in
sti
xor
lds
add
add
js
in
stos
mov
es
inc
loopne
dec
leave
or
stos
cs
test
and
lcall
negl
push
mov
mov
fadd
adc
ss
jmp
nop
outsb
stos
imul
negb
and
or
rorl
mov
xor
daa
mov
stos
dec
rcl
push
imul
or
stos
stos
movsb
mov
mov
shrl
push
dec
aad
repnz
outsb
js
fisttpll
or
or
sysret
cmpb
lret
and
adc
dec
mov
cmp
cmc
xlat
pop
push
mov
mov
dec
and
sbb
stos
pop
fildll
sub
xchg
inc
inc
nop
mov
mov
adc
filds
sbb
daa
push
loop
push
mov
jecxz
test
xchg
into
stos
cmc
jle
and
stos
addb
mov
das
mov
stos
iret
cmp
cld
and
sub
scas
adc
call
mov
cmp
push
add
arpl
sbb
stos
jne
std
mull
fistpl
pop
sub
enter
mov
stos
dec
pop
testl
mov
bound
imul
test
test
push
pop
mov
out
stos
es
mov
ljmp
fsub
stos
push
ja
imul
daa
js
pop
and
cmpsb
outsb
mov
or
dec
mov
lods
fldln2
xchg
imul
mov
push
mov
dec
je
fbld
xchg
aad
bound
arpl
sub
aas
stc
fwait
shrb
enter
xchg
mov
push
sub
fsubr
stos
push
sbb
sbb
push
loop
push
mov
adc
stos
hlt
ficoml
add
dec
sbbb
shlb
shl
call
loope
decb
jne
sbb
fdivrp
lret
inc
inc
fidivrl
stos
dec
cwtl
adc
sahf
xchg
ds
pop
jp
pop
icebp
mov
in
cmp
or
cmc
iret
cld
inc
scas
dec
icebp
clc
stos
sub
cmp
stos
push
push
pushf
xchg
sub
or
dec
scas
add
adc
jnp
subb
or
push
nop
out
addr16
jecxz
xor
mov
cmpsb
cmp
mov
mov
mov
xchg
test
stos
mov
lock
lds
sbb
mov
jmp
mov
test
sub
stos
add
out
movsl
cmp
jmp
mov
sbb
into
push
jmp
insl
dec
adc
jns
sbb
xchg
or
xchg
stos
mov
scas
mov
addr16
inc
cmp
xor
call
mulb
mov
xchg
cld
xchg
stos
xor
out
scas
filds
stos
pop
in
push
movsb
mov
gs
push
addl
stos
pop
dec
add
mov
movsb
outsb
test
fnsave
push
aaa
sub
aas
jg
cmc
incb
xor
push
int3
cld
sbb
mov
sbb
outsl
xchg
or
mov
mov
push
fdiv
stos
in
out
mov
jb
fsubrs
stos
mov
mov
add
push
jno
ss
sub
jg
cmp
adc
add
or
cs
ss
pushf
mov
scas
jo
pop
jno
stos
out
call
stos
xor
jnp
stos
repz
ja
stos
cli
out
les
xchg
stos
cmp
jbe
fldt
outsl
daa
mov
int3
loope
pop
cmp
add
sbb
xor
loop
inc
pop
dec
xchg
mov
clc
rcrb
sub
and
add
mov
stos
jg
sbbl
hlt
sbb
subl
out
pop
stos
xchg
faddl
jmp
aam
into
sbb
xchg
repz
fwait
sub
fdivs
dec
cmpl
push
jl
mov
push
jns
movsb
mov
ljmp
push
jl
xchg
shrl
rclb
add
data16
push
daa
jns
fwait
or
jle
push
fisubrs
push
xchg
sbb
cli
dec
dec
stos
mov
in
pop
cmpl
lret
add
push
mov
icebp
stos
adc
loopne
adc
dec
lea
stos
dec
jge
out
jl
movhps
jmp
jo
lahf
cmp
push
jae
xor
movsb
ret
addr16
inc
pushf
jns
rcrb
leave
ljmp
cwtl
stos
sbb
xor
aad
mov
jbe,pt
scas
loope
stos
sub
pop
xor
insl
arpl
inc
jns
pop
faddp
stos
mov
mov
pop
movsl
lds
xchg
add
iret
xor
stos
cltd
jmp
stos
sahf
sti
jmp
icebp
sbb
test
rorb
fidivrs
cmp
movsb
adc
or
shll
pushf
nop
sbb
int
stos
rorl
dec
sub
bound
xchg
cltd
push
inc
stos
jo
es
and
shr
xor
mov
xor
test
adc
add
sbb
sbb
repz
xor
pop
cmp
or
sbb
in
xchg
testl
stos
add
and
cmp
in
imul
jb
mov
pop
stos
ficoms
repnz
mov
mov
or
subl
adc
and
jno
and
sbb
enter
and
repz
scas
pushf
fsubs
sarl
add
jp
lret
or
cmc
daa
sub
mov
in
xchg
movsb
mov
add
xor
test
sub
push
cmpsl
add
stc
pop
push
mov
cmp
test
imul
inc
add
stos
outsl
push
out
call
jnp
mov
test
faddl
add
gs
stos
sbb
sbb
and
mov
mov
aad
stos
cli
adc
dec
cmpsb
subb
push
rcrb
stos
sub
std
stos
cwtl
mov
xor
pusha
popf
jbe
jmp
rep
les
andb
imul
int
mov
xchg
sub
rcll
adcl
stos
mov
mov
stos
cmp
cmp
stos
arpl
cld
shll
xchg
jge
stos
int3
popa
add
mov
fildll
dec
stos
cmpsb
insw
jo
pusha
dec
jb
push
cmp
sbb
cmpsb
maskmovq
divl
pop
sbb
push
mov
add
cmp
push
idivb
pop
adc
inc
mov
and
adc
out
pop
lock
stos
addr16
inc
lret
in
jl
inc
jmp
lahf
iret
vprotd
stos
push
mov
xlat
cmpsb
ja
stos
dec
shrl
repnz
push
stos
or
push
sbb
call
fs
dec
pop
inc
pop
int
sbb
pop
sbb
adcb
dec
mov
gs
xchg
fwait
cltd
repz
or
dec
int
mov
icebp
jnp
mov
imul
push
fwait
lea
stos
jne
mov
inc
scas
fisubrs
xor
daa
enter
sbb
fwait
jb
inc
cwtl
jmp
psubq
xchg
outsl
and
movsl
mov
sub
idiv
cmp
roll
cmpsb
popa
in
mov
stos
stc
mov
pop
dec
mov
fnsave
xor
xchg
cmp
cmp
out
in
pop
movsl
sbbl
mov
int
stos
mov
imull
pop
pop
push
push
adc
pop
push
mov
pushf
stos
sbb
adc
dec
jl
cmp
xor
movsb
pop
xchg
sbb
and
setp
jmp
testb
in
sbb
cld
sub
inc
movsl
aad
iret
shrl
stc
and
sub
repnz
pop
ds
xchg
repz
int3
push
fucom
test
fwait
test
mov
inc
int
arpl
mov
fiadds
cmpsl
mov
sbb
xchg
clc
scas
jecxz
or
push
xchg
je
adc
enter
int3
out
fwait
lea
stos
rcrb
xchg
lods
and
fnstsw
sbb
ljmp
inc
leave
pop
fwait
adc
pop
loopne
popf
out
and
in
lods
orb
mov
cwtl
arpl
mov
jecxz
gs
stos
cmp
sub
aas
arpl
push
pop
fistpl
loop
insb
xchg
lcall
xchg
sahf
clc
or
push
dec
aas
pop
stos
fmuls
leave
xor
jns
mov
nop
call
push
jo
cmc
lahf
dec
push
dec
test
adc
mov
stos
dec
jo
aam
or
inc
stos
add
clc
jge
aas
stos
xor
push
sub
stos
dec
cwtl
and
xor
xchg
pushf
stos
and
sub
stc
xlat
fcmovnu
jo
xchg
adc
ss
fwait
xor
xor
jns
js
dec
stos
bound
ltr
stos
sbb
push
jb
lds
popf
cmc
dec
mov
push
xor
ljmp
stos
shlb
fwait
sbb
stos
mov
xorl
lea
arpl
cmc
lcall
jmp
ds
push
mov
xchg
or
stos
lds
cli
add
popf
daa
xchg
in
mov
sbb
sti
sub
fisttpll
pop
repnz
jl
imul
leave
shlb
or
cltd
adc
cmp
mov
out
mov
cld
fwait
sbb
lahf
subl
and
adc
pop
fcoml
cmp
jmp
xor
ret
stc
lcall
sub
rcll
adc
mov
push
xchg
mov
xchg
or
pop
aam
arpl
test
stos
mov
rclb
in
jmp
jg,pn
jb
cmp
iret
mov
mov
inc
clc
stos
jns
pop
xchg
sti
and
dec
stos
add
test
inc
shll
mov
push
push
adc
lods
dec
mov
xor
cwtl
add
lahf
stos
or
xchg
pop
insb
test
out
insl
push
stos
inc
hlt
sub
mov
stos
xchg
out
mov
push
add
xchg
xchg
cmp
daa
je
pop
cltd
mov
mov
cwtl
xchg
cmc
mov
imul
pop
fmull
ret
add
cmpsl
pop
push
mov
fidivs
push
stos
fwait
mov
xor
out
mov
mov
or
push
push
sahf
push
push
or
push
jmp
ss
sub
outsl
add
lods
mov
adc
outsb
xchg
daa
mov
stos
negl
push
lods
rcl
iret
stos
or
xchg
push
jge
sub
std
push
stos
fiaddl
adc
jbe
fcomi
cmpsl
push
scas
sub
outsl
xlat
aam
cmp
adc
stos
push
les
dec
aaa
mov
cmpsl
mov
and
test
mov
insb
jns
xor
adc
stos
sub
mov
cld
jp
addr16
mov
stos
adc
mov
stos
and
inc
in
fnstsw
jb
jne
pop
insb
lods
in
movsb
arpl
pop
mov
xchg
bound
stos
cmp
mov
dec
out
mov
jns
sbb
stos
ret
and
stc
adc
imul
ds
int
push
adc
stos
cltd
push
ja
movb
int3
mov
js
push
iret
lea
aaa
xor
push
imul
mov
stos
test
jecxz
and
xchg
stos
push
jns
pop
arpl
imul
mov
arpl
in
mov
mov
sub
adc
and
xchg
jge
test
call
and
sub
stc
dec
cltd
fdivrs
loopne
xlat
mov
mov
xchg
imull
fnstenv
xchg
ret
ja
hlt
mov
dec
and
int3
mov
je
sbb
add
push
fcmove
cmp
mov
ret
bound
stos
mov
lcall
movsb
sub
or
push
sbb
pop
stos
aam
xor
imul
orb
xchg
mov
sub
jg
jno
movsl
and
stos
sub
sbbb
sbb
fwait
cmp
stos
dec
ds
pop
pop
dec
rcr
push
bound
andl
mov
mov
cmc
pop
and
leave
jmp
pop
adc
jmp
mov
push
stos
pushf
std
push
mov
stos
out
add
xor
in
std
stc
loope
adc
mov
stc
jae
jnp
xor
xor
mov
push
nop
inc
mov
mov
test
push
xor
add
imul
loopne
cmc
xchg
inc
stos
stos
xchg
je
out
aaa
pop
cmpsb
addr16
cs
pop
mov
jg
inc
push
cli
xchg
stos
into
xchg
push
subb
jmp
subb
fldcw
mov
scas
insb
and
lock
sub
dec
mov
xor
xchg
stos
lods
jg
or
mov
stos
push
sub
cmpsl
nop
sbb
push
pop
jp
pop
cmp
mov
xor
cltd
mov
popf
out
fsts
stos
frstor
fistpll
call
outsb
dec
jb
inc
jl
data16
jle
imul
sbb
stos
clc
je
cmp
stos
or
mov
enter
das
dec
movsl
jnp
fwait
add
icebp
jns
mull
add
stos
and
and
mov
cltd
aaa
out
or
pop
mov
xchg
sub
stos
mov
shll
push
stos
aam
clc
or
adc
cmp
notl
jmp
xchg
movsl
aaa
int3
lods
test
out
push
mov
and
cltd
and
sbb
mov
xchg
insb
js
jecxz
in
jbe
inc
stos
xchg
sub
leave
stos
inc
mov
icebp
cmc
imul
scas
mov
pushf
cmp
mov
test
stos
aam
xchg
and
dec
mov
jno
lret
sbb
movsl
int
mov
aam
lock
ja
sub
shrb
cltd
das
xor
int
inc
sub
add
popa
stos
push
mov
lcall
adc
inc
insl
pop
divl
jl
pop
jns
pusha
outsb
push
stos
enter
je
jb
daa
inc
push
cmpsb
fs
mov
sub
jmp
xorb
and
sbb
nop
push
stos
je
jbe
lock
stos
ficoml
pop
jecxz
dec
inc
mov
adc
mov
andl
jo
jae
sub
sub
and
sub
xchg
xchg
nop
or
outsb
leave
int3
addr16
push
clc
fwait
adc
stos
jnp
ffreep
iret
xchg
stos
push
movsb
movsl
mov
xchg
aaa
lret
es
in
sti
mov
ljmp
dec
movsl
sub
push
inc
stos
pop
rorl
stos
adc
stos
push
mov
in
and
stos
mov
out
bound
imul
stos
pushf
mov
cmpsb
loopne
mov
stos
xchg
outsb
dec
pop
or
clc
and
and
sbb
call
icebp
fbld
xchg
add
xorl
sbb
sti
mov
daa
arpl
ret
or
into
call
das
cwtl
aam
and
gs
test
sub
dec
lret
and
addl
or
cmp
outsl
inc
stos
test
lcall
hlt
movsl
stos
push
mov
bnd
aad
cmp
cmc
stos
fs
add
xchg
mov
fisubs
adc
in
std
lahf
jmp
dec
and
arpl
test
cmpsb
cmp
push
rol
aaa
mov
andl
shrb
jge
mov
cmp
cmpsb
xchg
in
xor
pop
sbb
jbe
or
ljmp
push
lds
jo
int
sbb
fidivrl
xchg
fisubs
stos
in
sub
xchg
sub
sub
dec
sub
adc
bound
loop
std
ret
rorb
lods
xchg
aas
stos
or
adc
stos
unpckhps
cmp
mov
outsb
adc
dec
repz
push
stos
or
dec
adc
out
cli
mov
sbb
jno
stos
stc
pop
xchg
js,pt
inc
cs
mov
mov
add
mov
stos
dec
push
call
xor
lcall
jmp
cmpb
shll
jge
jnp
stc
stos
inc
out
ss
scas
icebp
lret
negl
fcompl
movsb
stos
jp
outsl
dec
add
movsl
packuswb
mov
pop
mov
repnz
std
insb
aas
mov
out
mov
lea
push
outsl
xor
enter
iret
fwait
push
das
neg
stos
mov
sbb
and
cli
fdivs
stos
cld
es
pop
dec
test
stos
sbb
ret
test
mov
dec
repnz
or
in
mov
ja
sub
in
inc
dec
pop
lret
and
lcall
cmp
push
adc
les
iret
lcall
or
push
add
xchg
mov
movsl
fdivrs
cmpsl
inc
stos
pop
stc
rclb
mov
jnp
hlt
outsb
int3
mov
je
xchg
cmp
stos
adc
cmp
addr16
push
aad
popf
inc
cs
sub
decb
push
stos
cmp
in
aaa
dec
jmp
cmpsb
push
enter
adc
adc
jo
jmp
in
call
mov
cmp
sti
mov
adc
sbb
cmp
sub
iret
out
scas
stos
xchg
inc
mov
jns
shl
pop
popf
xor
mov
push
stos
pop
imul
push
mov
or
cmp
inc
mov
subb
lcall
test
dec
movsl
push
shlb
xchg
sbb
or
in
fidivs
dec
loopne
fimull
mov
sbb
lods
inc
js
andb
addr16
add
out
push
lahf
pusha
shll
jae
data16
mov
xor
lods
sti
aam
stos
add
pop
dec
pop
out
imul
mov
push
fisubrl
imul
sub
stos
inc
xchg
mov
pop
xchg
sub
cs
adc
xchg
addb
insb
rcrb
dec
ljmp
pop
in
push
and
mov
loope
push
je
cld
xchg
gs
cmp
pop
pop
fwait
rcll
pop
and
xchg
pop
stos
push
adc
cmc
dec
out
scas
jmp
xchg
pop
frstor
fs
mov
stos
pop
cs
mov
mov
pop
push
mov
push
jecxz
inc
iret
push
daa
fisubs
xor
mov
stos
cmp
int
mov
jno
into
inc
stos
sub
testl
push
adc
push
jmp
sbb
xchg
and
push
popl
pop
testb
inc
jmp
mov
ljmp
jmp
lcall
je
stos
in
mov
mov
scas
xchg
sub
lcall
sbb
loop
dec
arpl
adc
mov
push
mov
and
movsb
cmp
jp
xchg
mov
mov
jnp
dec
lds
stos
cmpsl
sbbb
stos
or
cmp
pop
stos
ja
mov
imul
xchg
mov
repz
nop
stos
arpl
in
stos
mov
stos
subl
in
sbb
jp
gs
fwait
mov
out
and
fidivl
daa
mov
pop
stos
mov
pop
ffreep
xchg
stos
out
or
pushf
popf
adc
stos
sbb
dec
mov
mov
hlt
call
lods
ret
cmp
pop
lds
imul
subl
test
lods
mov
adc
fldl
clc
push
lds
xor
jbe
fisttpl
push
out
lret
or
xor
dec
shll
xchg
mov
dec
inc
test
stos
mov
adc
jmp
pop
or
lret
jmp
sti
dec
dec
inc
xchg
cmp
stos
add
adc
jmp
movsb
sub
add
call
aam
aas
sub
jp
mov
call
pushf
imul
xchg
fldt
mov
push
aad
push
pop
lods
rep
inc
fimull
dec
aad
pop
xchg
sbb
adc
stos
jl
fistpl
sbb
stos
icebp
loopne
cmpsl
inc
test
xchg
stos
fmul
jecxz
sbb
cltd
xchg
mov
icebp
std
push
xor
push
pop
stos
jmp
loopne
fs
or
push
cmp
push
sahf
mov
sbb
rol
stos
xchg
dec
mov
mov
and
xchg
xor
mov
mov
cmp
mov
nop
xor
ljmp
push
fiadds
and
scas
outsl
out
imul
mov
subl
test
and
pusha
stos
jne
cld
cs
or
lods
mov
inc
push
mov
mov
push
push
and
xor
mov
mov
inc
test
addl
dec
scas
cmp
ret
iret
bound
push
test
xchg
movsb
sbb
stos
movsl
mov
popf
mov
ljmp
fwait
push
aad
sbbl
sarb
dec
jmp
fsubs
fadds
enter
nop
mov
test
insb
cmp
and
push
xchg
ss
stos
stos
sbb
pop
movsb
ds
mov
adc
sub
lahf
push
lret
jp
push
add
stos
dec
scas
mov
scas
adc
inc
outsb
pop
add
mov
daa
jmp
or
lea
icebp
sbb
jno
in
mov
jl
lcall
adc
lret
lock
stos
not
mov
mov
call
sbb
mov
mov
mov
negl
stc
mov
cli
stos
movsl
push
jge
jmp
xchg
and
mov
pushf
jo
stos
shl
mov
pop
out
sub
pusha
shl
sarl
mov
xchg
stos
cmp
adc
push
fidivrs
sti
daa
imul
imull
adc
jmp
stos
shlb
xor
push
mov
pop
sub
dec
and
test
testl
push
lock
adc
and
fwait
mov
fisubl
add
dec
lods
aad
mov
gs
xor
arpl
xchg
shrl
jno,pt
jmp
aam
clc
push
aad
mov
imul
xchg
adc
mov
inc
stos
rcll
sub
shlb
mov
out
daa
fstl
cmp
stos
cmc
mov
out
jb
mov
stos
inc
sbb
mov
imul
adc
jl
dec
popf
inc
cmp
shrb
mov
pop
fwait
jae
rorl
stos
mov
aam
les
and
cs
aas
shlb
mov
adc
and
aas
cmc
cmp
lret
ret
stos
adc
inc
mov
jmp
sub
loopne
mov
push
daa
adc
loop
adc
test
stos
xlat
dec
sub
and
stos
sbb
fcompl
mov
aam
xchg
imul
das
xchg
xchg
in
insl
push
xchg
xchg
mov
arpl
dec
mov
mov
stos
test
scas
inc
das
stos
stos
adc
les
push
in
rcrl
add
xor
pop
stos
cmp
xchg
or
stos
int3
jge
mov
lcall
jmp
sbb
sub
inc
fisubrs
rcl
pushf
xchg
imull
push
inc
ljmp
in
fdecstp
mov
jg
push
insl
pop
in
test
ret
jmp
icebp
std
xchg
mov
sub
cmp
stos
push
xor
pop
mov
xchg
xchg
add
out
adc
mov
fmull
addr16
aam
pop
xchg
mov
mov
popa
stos
push
jb
mov
sub
push
mov
jne
add
orb
sbb
outsl
mov
inc
int3
push
and
inc
jecxz
mov
out
stos
adc
push
mov
stos
mov
xor
mov
inc
cmc
stos
mov
or
bound
sbb
and
mov
stos
cmovo
mov
cmp
ss
xchg
movl
or
push
sets
stos
dec
mov
sub
cmpsb
stos
icebp
jno
push
popf
push
jecxz
push
hlt
call
and
imul
jnp
mov
out
sarb
stos
gs
enter
xchg
or
dec
stos
cmp
adc
aam
jl
imul
xchg
mov
stos
hlt
xor
test
push
push
mov
pop
lahf
stc
mov
push
lock
push
mul
stos
jo
ss
xorb
inc
jp
int
iret
rclb
jmp
ja
mov
aam
cs
stos
ss
test
stos
adc
or
cwtl
fcompl
ret
ljmp
cli
dec
nop
lcall
in
icebp
add
daa
jle
inc
fsubrp
mov
cmp
pushf
adc
js
xor
test
cmpsb
xchg
aas
inc
mov
pop
jns
xchg
mov
jmp
xor
mov
dec
pop
stos
jmp
mov
lods
stos
leave
xor
ja
fsubrs
fst
jne
stos
xlat
inc
int
xor
jns
stos
pop
or
cmp
leave
ljmp
xchg
xchg
stos
aaa
in
push
mov
add
les
jecxz
imul
popl
jo
loope
jno
lret
xchg
and
stos
nop
ljmp
stos
push
mov
daa
into
jmp
mov
icebp
cwtl
adc
stos
bound
jl
stos
sbb
cmpsb
clc
push
out
pop
and
mov
inc
inc
lods
mov
fists
cmp
or
cld
pop
stos
push
pop
mov
subl
stos
in
je
sarl
outsl
mov
int3
add
push
stos
fwait
mov
push
divb
fnstcw
xchg
gs
sbb
xor
stos
call
test
cmp
sti
xor
stos
mov
jno
jmp
popf
in
mov
lahf
xchg
pop
aad
cmp
sti
loop
fwait
jo
mov
jecxz
sub
andl
loop
xlat
imull
subb
pop
cmp
fwait
lods
cmp
push
stos
fs
mov
lahf
add
mov
add
mov
lret
mov
pop
insl
or
popf
stos
mov
add
fiadds
inc
loopne
aaa
inc
daa
ret
inc
jo
aas
pop
jecxz
std
movsl
jne
test
stos
inc
repnz
roll
movb
jo
jbe
mov
out
stos
cli
push
mov
test
add
or
test
out
sub
sarb
xchg
addl
movsl
and
mov
out
add
stos
cmp
rcl
movsl
fsubl
inc
sbb
popa
adc
je
mov
stos
pop
sahf
fsubrl
stos
or
jo
es
push
lret
jnp
jle
lods
xchg
popf
mov
xchg
jae
pop
stos
leave
mov
mov
stos
cmpsl
lahf
cmp
mov
scas
stos
jmp
pop
mov
push
mov
fmull
dec
aam
int3
stos
or
and
stos
add
xor
loop
icebp
aaa
mov
sbb
pop
mov
adc
push
stc
mov
add
add
daa
in
in
stos
and
repz
fisubrl
adc
push
sti
dec
push
stos
inc
pop
mov
xor
push
push
pop
sub
xchg
fldl
xchg
idiv
fwait
stos
adc
sub
arpl
stos
js
ret
push
jg
or
pop
xchg
dec
pop
arpl
cld
xchg
fiadds
stos
jge
loop
jp
xor
stos
cs
inc
orb
pop
xchg
and
test
xor
and
cmp
add
cmp
cld
add
dec
stos
or
pop
add
xchg
xchg
aam
xor
inc
sub
mov
mov
shlb
les
in
and
ja
jle
lds
fwait
rol
les
call
int
sarb
rclb
mov
mov
sub
cmpsb
out
hlt
sub
fstps
leave
sub
cmp
jecxz
stos
cmc
push
inc
arpl
and
out
push
xchg
into
pop
stos
jp
adc
or
sub
test
cmp
mov
jl
push
loopne
xor
arpl
mov
ss
dec
daa
cs
xchg
mov
jno
pusha
je
scas
pusha
mov
std
stos
fmuls
push
pushf
cmp
pop
stos
sarl
rep
pop
push
jnp
sub
clc
xlat
test
xor
lock
fisubrl
add
or
sbb
stos
inc
dec
lcall
clc
dec
push
push
stos
xchg
aam
dec
jae
fiadds
insb
mov
cltd
rol
arpl
and
test
insb
stos
add
pusha
xchg
pop
aad
aas
stos
sbbb
imul
fwait
mov
jbe
mov
es
ljmp
nop
push
fldt
dec
js
or
push
iret
dec
jp
adcl
push
inc
add
push
rol
jae
scas
fldt
add
movsb
mov
push
push
push
stos
adc
push
nop
into
inc
xor
inc
frstor
pop
mov
cmp
clc
dec
inc
sbb
push
xchg
sbb
dec
iret
movups
inc
push
lret
fwait
pop
rorl
push
xchg
jb
jle
ret
push
ljmp
sbb
stos
xchg
mov
inc
aaa
xchg
jmp
aad
add
push
mov
addr16
cwtl
hlt
cmp
dec
lods
stos
fdivl
xchg
stos
sbb
pop
inc
sarl
sbb
adc
push
add
rolb
xchg
pop
je
rcrb
in
outsl
mov
mov
mov
dec
mov
inc
popa
cmp
outsl
push
iret
push
cli
xlat
in
and
stos
sahf
push
xor
outsl
mov
push
rclb
sbb
add
and
sub
lds
in
xchg
mov
rcr
jl
shll
outsl
stos
and
leave
cs
sub
or
cld
push
mov
cli
mov
enter
stc
dec
stos
mov
andl
dec
fsubp
inc
nop
adc
sub
jl
insl
mov
adc
jmp
ficoms
sbb
xor
inc
lret
mov
adc
stos
clc
into
jle
int3
out
fidivrs
scas
xor
mov
xchg
movsb
jl
divl
lods
mov
subb
sbb
imul
js
pop
push
lock
xor
into
mov
rclb
mov
hlt
sbb
stos
pop
sbb
sub
xor
xchg
sub
inc
adc
or
aaa
maxps
push
adc
sbb
mov
incl
fwait
mov
les
int3
mov
stos
sahf
mov
decl
pop
sub
mov
dec
in
addr16
jge
pusha
jl
push
mov
es
stos
movl
lea
ret
sahf
mov
mov
hlt
jge
movsb
dec
cmp
cs
fwait
push
or
sti
movb
cmc
fwait
mov
mov
fbld
hlt
stos
cltd
push
mov
add
sub
stos
pop
lret
push
icebp
pop
fldcw
lahf
lods
xor
inc
cmpb
aaa
inc
out
nop
cmp
stc
mov
stos
in
cmp
and
sub
clc
cld
pop
sbb
xchg
lods
out
scas
enter
mov
and
sbb
shr
stos
mov
xchg
adc
pushf
dec
jl
mov
jmp
sub
rep
push
gs
xchg
stos
iret
dec
jle
lret
xor
popf
mov
pop
xchg
stos
scas
iret
lcall
jbe
jnp
das
shl
pop
std
push
insl
and
test
xor
xchg
sbb
cmc
sbb
cli
addb
or
lds
lods
xchg
xchg
mov
xlat
gs
adc
mov
mov
inc
adc
lea
dec
pop
push
mov
sbb
loop
outsb
mov
mov
mov
loop
mov
pop
stos
mov
xor
or
mov
dec
xor
or
adc
loope
pop
imulb
pop
mov
mov
cmp
hlt
in
adc
pop
sbb
jns
mov
or
out
aas
roll
je
push
pop
stos
cli
lock
sbb
stos
addb
std
push
mov
sbb
xchg
pop
out
pop
aad
cmp
nop
es
stos
xchg
mov
hlt
push
stos
ret
jmp
sub
lock
push
mov
push
jae
adc
xchg
add
les
jp
pushf
fwait
lds
mov
mov
mov
out
inc
leave
jg
dec
and
cmc
shlb
fimuls
movsl
jno
out
popl
lds
fistl
mov
stos
xor
pop
push
lods
movsb
rclb
or
mov
mov
jnp
bound
daa
mov
fwait
mov
jp
push
xchg
xchg
or
jmp
dec
cmp
mov
and
aaa
lods
xchg
sub
lcall
cmp
mov
adc
or
dec
sub
hlt
jp
mov
movsb
stos
pusha
fsts
shlb
push
mov
xor
push
cld
fcmovnb
or
stos
enter
pop
scas
aas
jl
mov
and
int3
dec
mov
xchg
xor
pushl
fidivrl
imull
xor
fildll
out
sub
in
ja
sarb
jbe
pop
lea
sub
movsl
fisttpll
jp
sbb
mov
shlb
aas
test
push
adc
repnz
outsl
js
fwait
stos
rcr
daa
repz
sbb
mov
jl
push
mov
enter
daa
or
rol
neg
xchg
push
stos
lock
jns
scas
pop
xchg
cmpsb
loope
cmp
adc
inc
nop
sbb
sub
push
ds
clc
fnstsw
pop
stos
adcl
adc
stos
jge,pn
test
xchg
mov
stos
or
inc
push
clc
stos
inc
aad
add
sbb
sti
stos
ret
adc
xor
hlt
in
cmp
inc
fwait
pop
and
stos
icebp
jl
nop
push
int3
stc
push
stos
hlt
fcomps
stos
jbe
lods
dec
lret
cmp
xchg
lea
dec
inc
jl
xor
int
loopne
dec
out
pop
imull
dec
xchg
sub
push
xchg
add
sahf
xchg
int
or
jno
inc
loope
lea
push
xchg
dec
sbb
shrl
loopne
push
mov
or
imul
add
stos
repz
jnp
cwtl
and
clc
in
mov
psrlq
stos
inc
push
adc
bound
arpl
mov
add
ret
inc
hlt
xlat
in
jmp
pushf
push
mov
dec
or
pusha
or
js
clc
dec
sub
out
inc
lods
push
cltd
add
jns
fcoms
push
mov
repnz
mov
ret
and
sub
test
fildll
add
cltd
iret
adc
or
xor
mov
mov
sbb
das
push
sub
mov
fwait
inc
test
or
stos
mov
inc
jae
add
stos
mov
pop
or
sti
xchg
sbb
ficoms
insb
negl
lods
push
lret
es
xchg
fstpl
daa
mov
in
push
xchg
shll
push
sbb
mov
std
and
push
cltd
add
rcrb
aas
add
and
int
mov
in
fists
fcmovne
mov
ldmxcsr
scas
mov
sbb
fdivs
arpl
orl
bound
pop
push
int
test
lret
sbb
outsl
cli
mov
mov
imul
addr16
fs
stos
xchg
push
stos
lea
int
cmp
sbb
fwait
mov
stos
xchg
inc
xchg
push
out
sub
fbld
push
mov
jle
jne
aaa
inc
jge
add
imul
jnp
mov
stos
aad
data16
inc
movsl
aaa
xchg
mov
aas
lcall
push
cld
leave
sahf
scas
icebp
push
cltd
insl
and
stos
mov
mov
ja
addr16
stos
xchg
pop
inc
mov
gs
mov
and
mov
cltd
lock
insl
push
xchg
out
or
repz
xor
fsubrl
shll
jo
mov
stos
aaa
stos
rcrl
or
jle
dec
iret
jb
shlb
out
dec
outsl
adc
es
inc
mov
stos
cld
jmp
and
sbb
xchg
sub
inc
cld
push
mov
stos
out
xchg
sbb
scas
or
or
call
and
cmp
mov
inc
xchg
imul
xchg
cmp
add
push
lods
xchg
dec
jne
and
fisubrl
mov
in
inc
movsl
adc
push
stos
outsb
sahf
adc
jmp
jo
dec
repz
sub
stos
jae
std
add
sub
and
lods
stos
mov
xor
jecxz
add
pop
mov
es
adc
push
lea
xchg
and
cmp
inc
cmp
ficoml
xlat
dec
stos
insb
jecxz
ljmp
lret
push
push
pop
xchg
or
stos
lods
jns
scas
push
sub
rcl
ficoms
dec
in
stos
jecxz
scas
movsl
imul
jg
fs
xlat
lock
pushf
adc
pop
daa
movsl
xchg
out
iret
or
dec
xchg
insl
stos
pop
in
push
lds
lcall
pop
dec
stos
jle
cmpl
hlt
push
stos
push
lds
imul
mov
imul
adc
or
dec
bts
js
int
repz
stos
cltd
mov
push
push
dec
fs
stos
dec
into
addr16
push
mov
sub
mov
cmp
add
lea
mov
sbb
loope
pop
ret
lcall
and
jge
roll
sarl
jecxz
jmp
mov
pop
cmc
lret
outsb
hlt
stos
incl
xchg
rolb
les
fs
popf
fildll
movsb
xor
adcb
lret
add
in
mov
mov
and
pop
incl
std
xor
mov
jl
mov
test
mov
fwait
push
stos
not
lret
mov
lods
push
andb
call
std
mov
push
and
jge
mov
imull
sbbl
addr16
outsb
dec
mov
xor
sub
push
mov
leave
sbb
mov
xchg
mov
inc
imul
lock
insb
xchg
aam
sbb
mov
cmp
cwtl
stos
sub
push
ds
sub
insb
sbb
shl
xchg
push
fisubrl
mov
mulb
stos
push
and
test
sub
aam
xlat
inc
cmp
mov
in
lods
pop
pop
jmp
outsb
lock
cmp
mov
mov
xchg
ljmp
and
fldcw
jge
jmp
stos
xor
int
push
fcmovu
insb
stos
jae
scas
shrl
mov
fsubp
insl
fistps
and
cmp
add
sub
in
in
inc
pop
sbb
jmp
mov
mov
stos
cwtl
lret
cltd
movsb
mov
mov
add
cmp
enter
test
ss
jns
mov
push
clc
or
aam
jle
fistpl
jbe
push
adc
js
nop
push
stos
mov
inc
fsubrs
test
sub
call
out
lahf
mov
test
gs
lahf
stos
xor
xor
push
stos
push
mov
add
shrl
in
xchg
xchg
mov
mov
js
rol
push
stos
sbb
mov
xchg
mov
xchg
mov
aas
fldt
stos
idivb
nop
sbb
pop
mov
jecxz
pop
xchg
lods
jno
ret
adc
jns
and
mov
or
inc
sub
jmp
daa
dec
dec
jae
call
cltd
sub
jmp
aam
inc
js
mov
stos
push
mov
mov
sarl
stos
addr16
subb
je
pop
cwtl
xchg
sahf
lret
out
cmp
out
stos
push
aam
std
ss
cltd
gs
andl
gs
sti
aaa
shlb
stos
jb
sbb
pusha
enter
jmp
int
mov
call
mov
pushf
stos
mov
out
sub
ljmp
add
sbb
mov
mov
aad
clc
xor
mov
out
inc
mov
stc
adc
rclb
mov
stos
pop
xchg
ja
jbe
jecxz
stos
fs
mov
sub
push
rcrl
iret
inc
adc
nop
les
movsl
cmp
dec
nop
push
stos
jno
std
add
aaa
mov
inc
test
jmp
jecxz
add
adc
into
out
stos
dec
jb
sarb
sub
and
stc
pusha
cwtl
stos
popa
xchg
addr16
mov
fs
stos
and
cmp
sub
push
mov
cltd
sbb
inc
or
in
push
bound
dec
push
cmpl
cs
sbb
sub
and
jge
stos
test
sti
loopne
enter
push
xlat
or
ret
data16
not
call
cmpsl
loop
rclb
fcoms
scas
xchg
cmp
xchg
stos
dec
pushf
test
in
xor
rcrl
sbb
adc
popf
lret
xor
in
mov
jmp
push
sti
cltd
sbb
stos
mov
les
jmp
mov
daa
mov
dec
jb
add
xorl
movsb
in
es
repnz
jg
leave
das
stos
notb
cmp
sub
stos
pop
loopne
mov
lcall
or
gs
push
loop
xor
add
mov
roll
sub
insb
mov
push
popf
mov
xchg
adc
add
lods
fsubs
stc
jo
insl
addl
cmp
int
arpl
inc
mov
push
into
jp
rclb
nop
adc
in
mov
sbb
fdiv
lret
divb
lcall
cmpsb
xchg
clc
lock
adcl
mov
mov
sbb
mov
stos
sub
jge
mov
icebp
stos
fisttps
push
shrb
out
jb
arpl
xor
and
out
sub
push
out
sti
out
and
ljmp
imul
iret
test
jp
stos
fs
xor
clc
aam
push
mov
cmp
xchg
sub
inc
mov
dec
jmp
mov
pop
dec
cltd
fmull
out
fidivrl
mov
cli
xchg
jmp
mov
jns
jle
stos
inc
push
or
mov
push
sub
out
scas
stos
jno
fs
leave
xchg
push
stos
inc
inc
popf
mov
stos
cmp
pop
cmc
stos
scas
mov
aas
adc
xchg
add
mov
mov
xor
and
adcl
or
stos
push
in
inc
pop
in
pop
xor
nop
cltd
xor
lock
test
inc
push
stos
pop
mov
cmpsl
inc
push
movsl
inc
push
leave
xor
sti
xor
addr16
int3
push
add
leave
stos
xchg
popf
ds
stos
dec
jmp
jecxz
cmp
stos
inc
es
mov
or
fidivs
fstl
lods
adc
dec
mov
mov
cmpsb
sbbl
jne
cli
lods
arpl
push
popf
push
or
pop
pop
and
test
pop
mov
pop
stos
sahf
shll
addr16
ret
les
push
dec
xor
jl
jae
in
push
mov
outsb
mov
push
dec
stos
cs
mov
stos
lret
jecxz
dec
cmp
mov
arpl
fs
mov
pop
xchg
jge
fwait
xchg
enter
or
or
add
push
rolb
nop
imul
fwait
shrl
push
cwtl
inc
stos
mov
inc
rolb
adc
xchg
outsl
xor
pushf
mov
stos
test
std
hlt
mov
scas
lds
mov
jecxz
mov
adc
stos
xchg
jne
inc
cmp
stos
pop
add
jbe
roll
stos
mov
outsl
lods
mov
stos
or
inc
and
movsl
xchg
ret
mov
arpl
in
sub
jo
xor
stos
jns
mov
repnz
cmp
insl
mov
in
cmpsb
pop
jno
push
stos
icebp
jae
in
cmpsl
mov
nop
aad
scas
incl
and
dec
jns
mov
js
dec
in
or
dec
mov
stos
sbb
cld
push
dec
jge
in
arpl
mov
stos
call
rclb
sbb
mov
mov
and
in
fs
aad
push
sarl
cltd
adc
mov
push
dec
adc
negb
sub
jns
aaa
stc
mov
daa
data16
inc
testb
stos
cld
in
sbbb
hlt
stos
mov
ret
test
addr16
daa
mov
mov
mov
cmp
rorl
stos
jge
enter
in
popa
stos
and
cmc
xchg
in
cli
mov
loop
stos
shll
and
adc
fidivrl
jo
mov
nop
inc
iret
stos
ficomps
pop
jo
xchg
sbb
mov
fcomps
xor
fwait
and
stos
inc
dec
jp
push
cli
jg
jl
imul
fadds
push
scas
adc
stos
mov
sbb
mov
pop
jmp
add
stc
mov
fs
in
mov
lret
lahf
pusha
imul
sub
dec
in
pop
fsubrl
ret
add
mov
xchg
jle
nop
bound
js
inc
scas
stos
pop
sbb
repz
test
stos
push
dec
insb
cmp
rcrb
dec
dec
cmp
mov
dec
pop
ljmp
xchg
jnp
and
faddl
jne
lock
stos
pushf
call
jno
or
out
dec
in
pop
adc
fwait
jb
insl
stos
sbb
je
xor
push
xor
mov
nop
adc
xchg
int3
es
inc
out
mov
and
in
mov
mov
push
mov
inc
and
xchg
push
arpl
mov
shrb
outsb
pop
push
jecxz
or
in
stos
in
fimuls
adcb
clc
mov
pushw
or
in
popf
sbbb
or
sbb
fdivrl
mov
push
pop
scas
cmp
shrl
out
xchg
test
sub
adc
jns
jge
mov
mov
mov
aaa
stos
pusha
repz
out
cmp
loope
push
fwait
test
in
cmp
xor
ficoms
outsb
mov
imul
and
mov
ret
xchg
mov
and
mov
cmp
sub
mov
push
lds
sub
xor
mov
pop
cmpsl
sub
pop
pop
mov
dec
push
lahf
lret
jmp
inc
popf
push
aad
nop
lods
add
sub
xchg
mov
mov
xor
cld
stos
rorl
push
or
pop
jae
das
loope
in
mov
stos
popa
shlb
les
push
jmp
call
fsts
subl
stos
imul
stos
lret
and
xchg
pop
into
mov
dec
stos
fstpt
out
ja
jg
and
push
or
lret
mov
mov
mov
shrb
inc
push
stos
aas
dec
testl
stos
js
add
imul
and
dec
xor
scas
leave
iret
lcall
stos
ja
pop
mov
stos
xlat
pushf
jmp
mov
inc
mov
pop
stos
push
dec
mov
and
out
imul
pop
xchg
gs
stos
outsb
popf
mov
call
sar
paddusb
xor
push
mov
mov
fildll
stos
ds
int
ss
pop
stos
fiadds
jge
stos
jnp
or
cli
mov
out
clc
cmpl
xchg
fmuls
ljmp
out
or
aam
data16
lss
dec
scas
xlat
jbe
fistpl
or
mov
push
fs
or
mov
inc
sub
mov
imul
arpl
stos
push
push
jb
out
and
stos
adc
lcall
or
sti
stos
add
or
xchg
and
push
jle
test
xchg
iret
ljmp
loope
add
and
mov
adc
dec
call
jecxz
das
push
mov
iret
jmp
fistl
xchg
cwtl
mov
xchg
mov
stos
or
sub
jge
arpl
adc
into
adc
icebp
pop
imul
iret
scas
sbb
and
fdivrl
pop
stos
imul
orl
loope
mov
cmp
fnstenv
xchg
sub
xchg
leave
stos
inc
lock
inc
jmp
aas
addr16
bound
fsubrl
in
dec
sbb
icebp
lahf
fiaddl
add
push
out
sub
frstor
mov
lahf
stos
xor
xchg
inc
daa
dec
leave
jbe
jns
sbb
fisubrs
xchg
inc
mov
popa
inc
mov
stos
push
shr
pop
scas
stos
pop
mov
dec
pmulhuw
mov
or
jl
mov
out
lret
loop
outsb
mov
aas
push
inc
stos
es
mov
in
push
ret
insl
sub
xchg
int
cmp
imul
sub
xchg
mov
push
push
xchg
mov
stos
ljmp
iret
mov
add
testl
xor
mov
sub
pop
and
stos
in
push
cmpsb
stos
mov
scas
pop
pop
imul
pop
lahf
out
shll
stos
xor
jge
inc
int3
daa
mov
mov
sub
mov
bts
or
popf
push
in
bound
add
sbb
stos
movsb
adc
mov
stos
insb
adc
xor
jne
adc
sbb
jo
outsb
out
loop
fwait
adc
pop
sbb
add
or
jg
shlb
imul
stos
or
or
jecxz
jl
inc
pop
adc
fsubrs
shlb
or
test
add
dec
sub
icebp
mov
pop
sbb
mov
les
jmp
movsl
cmpsl
mov
enter
cmp
sub
outsl
stos
pop
mov
mov
out
jmp
dec
out
sbb
stos
xchg
add
ret
mov
cli
fdivrp
push
adcb
push
push
daa
sbb
or
fildll
xor
andl
dec
fidivs
dec
cltd
sub
lods
adc
cs
imul
and
jb
sub
cmc
pop
inc
lcall
cld
cmp
dec
mov
cmp
add
in
into
push
inc
push
xor
push
or
mov
dec
xchg
pop
data16
int
stos
mov
sbb
stos
lcall
stos
xchg
mov
lds
adc
stos
push
clc
sub
cld
jmp
rorl
aas
imulb
std
and
mov
imul
fists
rorb
mov
jbe
std
sub
add
pop
sub
push
jge
or
xchg
push
dec
jmp
daa
iret
aad
mov
ret
dec
push
addr16
push
dec
jle
push
in
nop
ficoml
outsb
ds
add
fwait
inc
es
ret
or
into
inc
xchg
push
arpl
out
xor
push
mov
fmull
lret
dec
mov
daa
mov
sub
push
in
out
mov
or
stc
push
mov
into
jle
fwait
daa
rcr
stos
dec
mov
cmp
mov
xchg
lods
push
loopne
hlt
mov
orl
push
outsb
mov
lcall
fidivrl
inc
mov
xor
mov
mov
sub
es
add
stos
mov
enter
js
stos
inc
cmp
je
fisubl
push
out
push
jno
stos
xchg
push
inc
outsb
xor
jge
push
push
loop
sbb
hlt
movsb
mov
sbb
mov
sub
xchg
das
push
stos
mov
pop
and
xchg
xchg
mov
ss
jno
jmp
jmp
lods
dec
iret
xchg
divl
mov
sub
push
push
icebp
pushf
stos
lock
add
sbb
sbb
stos
push
jae
mov
stos
jns
int3
jge
stc
dec
mov
das
sub
imul
pop
sarb
jl
ret
aas
sbb
stos
sbb
fistl
jae
jecxz
pushfw
pop
arpl
mov
ret
and
jno
lcall
icebp
jb
scas
adc
cmp
in
xchg
fsubrl
lahf
mov
pop
push
movsl
mov
xchg
daa
mov
fwait
cmp
loope
xchg
xchg
addl
push
bound
pop
xor
stos
fs
test
mov
mov
insb
stos
xchg
data16
jo
xor
scas
stos
iret
ja
add
xor
adc
test
sub
movsb
mov
subl
mov
movsl
jns
xchg
aas
mov
adc
and
sahf
cmp
loopne
rep
cmp
pop
lds
nop
les
dec
cmpsl
daa
stos
and
xchg
or
and
xchg
cmpsb
addr16
jne
in
mov
popa
cli
jmp
inc
mov
scas
inc
or
stos
sub
insb
mov
xchg
jns
notl
xchg
arpl
push
mov
xchg
and
fidivl
sub
in
repz
movsb
icebp
inc
loopne
in
out
addr16
insb
in
stos
pop
mov
popf
jae
fildl
xor
test
cmpsl
pop
fidivrl
call
and
loop
aam
subb
int
imul
jmp
add
insb
xchg
aam
stos
jmp
sub
adc
stos
dec
pop
jl
and
test
cltd
outsl
xor
adc
movsl
push
aad
sub
or
lock
jl
stos
lret
push
hlt
jbe
in
inc
xchg
stos
mov
xor
mov
xor
pop
inc
mov
mov
or
mov
inc
sbb
push
cmpsb
dec
push
xchg
stos
in
mov
stos
mov
ret
or
stos
push
or
fsubr
outsl
int
stos
dec
and
mov
mov
dec
mov
leave
pop
mov
fcompl
mov
aad
cli
cmp
stos
imul
mov
daa
lea
xor
mov
sahf
js
mov
mov
or
xor
dec
sahf
mov
cld
fwait
xor
sub
push
push
or
fwait
push
mov
fwait
stos
imull
push
enter
fisubrl
cmp
fwait
mov
arpl
repnz
xchg
dec
mov
out
xchg
aad
xor
stos
cmc
fcmovbe
fst
mov
mov
push
cli
push
repz
mov
stos
repnz
fsubp
cmp
stos
popa
xchg
movl
sti
outsb
sarl
stos
mov
dec
into
mov
sbb
cmp
pushf
int
cmp
or
xchg
add
xchg
mov
lods
sub
and
xor
insb
sub
scas
test
popa
dec
daa
xor
lods
enter
jno
mov
das
mov
imul
scas
push
fwait
sbb
stos
out
xchg
pop
pop
jae
push
fsubr
push
es
mov
mov
fcoml
insb
lods
orl
addr16
js
lret
dec
ss
mov
sub
add
mov
mov
mov
popf
push
pop
std
mov
int
icebp
or
stos
jge
cmpsb
sbb
mov
imul
push
ret
arpl
stos
fiaddl
xor
pop
ja
inc
stos
lret
jnp
jae
inc
mov
mov
adc
testb
jmp
mov
mov
add
stos
inc
ficoms
stos
dec
or
adc
push
xchg
imul
repnz
leave
mov
in
xchg
in
cs
push
mov
fbstp
mov
push
or
sbb
lea
push
jp
stos
push
or
xchg
mov
popf
xlat
stos
lea
push
inc
add
or
test
mov
movsb
xchg
dec
cwtl
or
mov
stos
xor
rcl
fildll
int
lret
xchg
into
adc
cltd
stos
jae
pop
adc
mov
ss
movsb
movsb
ret
inc
mov
push
cmp
jecxz
xchg
dec
cwtl
xorb
out
outsl
stos
daa
sbbl
xor
repz
mov
loope
shlb
ss
subl
xchg
daa
push
mov
in
and
push
cmpsb
mov
stos
dec
je
dec
cs
iret
stos
loope
fsubrp
xchg
mov
add
adc
imul
inc
out
dec
mov
fisubl
jp
or
ss
stos
add
fwait
dec
dec
push
pop
fs
sub
xchg
cmp
jnp
out
push
stos
stos
cmpsb
icebp
outsb
cmp
mov
stos
ds
addr16
cmpsl
btr
lret
cld
ret
push
stos
dec
jo
xchg
je
out
stos
sub
outsb
xor
or
mov
xchg
addl
jmp
dec
pop
stos
dec
divb
test
jnp
scas
js
out
xchg
daa
dec
xlat
or
push
add
stos
and
push
push
cmpsl
mov
or
dec
imul
add
lods
imul
dec
lea
sub
pusha
stos
out
mov
shl
loop
jae,pn
cmc
push
fwait
xchg
jne
imul
xchg
or
pop
xchg
test
push
mov
lcall
mov
stos
lea
and
dec
imul
and
mov
shrb
icebp
stos
dec
sahf
xor
mov
movl
stos
lock
ljmp
adc
push
xchg
gs
stc
out
pop
stos
nop
ljmp
push
and
sub
mov
test
lahf
pop
xchg
stos
xchg
cmpsl
mov
stos
popf
sbb
push
stc
sub
or
jnp
les
lds
cltd
stos
mov
add
imul
fistl
inc
stos
adc
mov
stos
je
dec
rcrb
cmc
sbb
scas
in
jno
enter
scas
jecxz
mov
lret
es
aam
stos
jle
mov
jle
scas
dec
or
stos
movl
push
mov
int3
rep
stos
enter
or
andl
push
int3
or
or
lret
fisttpl
push
xchg
insl
xchg
movsb
subb
mov
mov
out
stos
iret
xor
cmc
xchg
xchg
cld
add
test
cmp
addr16
or
sti
sub
push
xchg
mov
leave
movsb
jle
mov
cmpb
addr16
test
pusha
add
imul
xchg
xchg
fdivrs
in
test
in
jl
add
mov
sbb
lcall
dec
std
pop
ja
sub
jge
or
stos
push
lahf
push
nop
fwait
push
pop
and
js
scas
inc
pop
jmp
push
out
cld
xchg
clc
mov
sub
sub
and
sub
cmc
cld
setns
stos
push
das
insl
xor
movsb
cmp
sbb
in
scas
cltd
stos
dec
ljmp
stos
mov
xchg
or
call
imul
xchg
or
stos
jbe
xor
in
sub
fists
out
aad
rolb
push
pop
mov
lea
xor
lods
xchg
stos
jbe
dec
jnp
mov
shrl
push
fisttps
pusha
pop
xchg
and
push
mov
stos
in
addps
sbbb
adc
add
lds
push
fmul
inc
mov
insl
fwait
jbe
stos
jae
sbb
mov
xor
push
adc
insb
or
loope
fimull
int3
jnp
xchg
in
stos
into
shl
rolb
iret
xor
add
push
icebp
add
enter
adc
int
pop
sbb
int3
sahf
mov
lods
jmp
pop
or
movsb
js
pop
mov
fsubl
jmp
cmp
int
cmpsb
lcall
stos
push
std
inc
mov
outsb
mov
das
ljmp
pop
sub
stos
jle
dec
or
cs
int
rcll
xor
and
pop
movsb
arpl
pop
scas
mov
jge
stos
push
mov
and
imul
lahf
test
adc
lock
pushf
pop
lea
pop
std
push
xlat
mov
fs
sbb
jge
xchg
mov
das
push
jne
movsl
imul
dec
pop
imul
insl
andb
imul
and
loop
xchg
ror
fildl
stos
lret
pop
and
lods
std
pop
bound
mov
cmp
jmp
stos
mov
loop
lahf
adc
mov
rcll
cmp
mov
mov
faddl
or
dec
inc
iret
mov
stos
mov
int
pop
scas
and
dec
adc
pusha
mov
adc
stos
mov
enter
sbb
fbld
out
cmpsb
test
movsb
in
pop
mov
je
stos
or
pop
mov
pop
sbb
sti
fdiv
or
outsl
sbb
stos
repz
loope
shll
out
es
lods
mov
and
dec
push
lock
imul
stos
adc
xchg
data16
inc
stos
dec
mov
add
addr16
subb
jbe
sbb
fmulp
dec
movsb
mov
cld
mov
insl
stos
mov
or
insb
lss
inc
clc
xchg
inc
or
lods
shrl
shrb
mov
xor
sbbb
fwait
call
jno
enter
sahf
ret
stos
and
or
push
push
push
arpl
dec
cmp
cmpl
loope
jnp
pop
stos
sub
dec
pop
pop
daa
addr16
mov
out
jmp
imul
mov
push
add
test
jae
xor
lock
subl
in
dec
test
call
daa
sti
cmp
mov
and
inc
idiv
jno
and
ljmp
insl
insb
or
mov
ds
pushf
enter
mov
jnp
jbe
xorb
jmp
and
xor
mov
mov
sar
push
stos
fisttps
jbe
add
adc
mulb
jge
xchg
das
add
stos
mov
jno
mov
stos
stos
adc
out
dec
mov
xor
cmp
jb
cmp
mov
lods
push
stos
cs
cli
out
pop
daa
jae
and
loope
stos
into
sbb
xchg
lcall
mov
ret
jae
sbb
inc
push
test
iret
mov
rcrl
cmp
stos
xlat
icebp
dec
lea
enter
push
cld
push
outsl
mov
data16
cwtl
dec
and
hlt
push
mov
leave
stos
outsl
arpl
dec
test
add
jmp
cmc
pop
in
push
call
lea
adc
mov
jle
adc
in
aas
cmp
fildll
les
inc
sub
adc
std
and
push
stos
push
push
fistpl
pop
cmp
mov
or
stos
add
xlat
dec
mov
sub
stos
mov
lahf
scas
pop
adc
fcmovb
xchg
aaa
xchg
sbb
jne
inc
stos
rcl
negl
ss
je
or
insb
in
bnd
sub
push
pop
inc
inc
add
mov
and
xchg
adc
pop
xchg
fwait
add
mov
bound
fnstenv
stos
cmp
shrl
jno
cmp
cmp
mov
in
mov
xchg
movsl
cmovo
sub
fs
push
in
iret
sub
shl
pop
nop
jne
out
imul
testl
lods
out
lahf
mov
shrl
lret
mov
insl
mov
inc
adc
pop
cmpsb
push
jmp
call
or
sub
addr16
lods
mov
push
cmpl
cmpsl
sbb
mov
cmc
jle
out
sbb
outsb
add
jl
cmp
int3
or
stos
leave
or
adc
movsb
fs
clc
push
sti
jo
add
subb
push
and
push
sbb
or
in
subl
cmpsl
ljmp
sub
or
cs
add
pcmpgtd
clc
stos
mov
and
stos
push
cmp
lock
stos
sub
nop
cmp
xchg
ret
stc
jbe
cmp
sbb
pusha
mov
jnp
mov
add
aas
jp
adc
lahf
sti
fs
dec
mov
mov
imul
into
setae
popa
or
out
and
push
cmp
sbb
and
mov
ret
and
out
xor
fildll
out
stos
outsl
movsl
inc
cmpsl
jo
push
rorb
xor
roll
sub
mov
jne
and
cmc
xchg
test
stos
fpatan
iret
loopne
insl
punpckhdq
jno
aam
xchg
push
daa
or
mov
cmpsb
dec
jl
mov
les
adc
int
movsb
jns
stos
jbe
addr16
stos
inc
js
lea
std
int3
shrl
aas
mov
pop
xchg
cltd
and
or
aad
mov
insb
movsb
ljmp
stos
arpl
sub
and
push
sbb
test
and
or
xchg
fwait
mov
test
rorb
sub
sbb
jno
lret
xchg
loop
cmpb
aaa
ljmp
stos
dec
jg
jl
sub
push
stos
or
cmp
adc
stos
or
push
mov
cld
fstps
push
jnp
fstl
scas
jmp
stos
or
xlat
push
es
popa
add
jl
roll
stos
xchg
clc
stos
cmpsl
test
xchg
jns
dec
sbb
mov
stos
test
mov
mov
icebp
dec
orb
test
cltd
cmp
insb
aad
stos
lahf
andb
lahf
cmp
xchg
mov
rcrb
xor
test
stos
cmp
pop
jecxz
sbb
movsl
add
push
mov
loopne
inc
xchg
adc
xchg
pop
jle
cmp
lds
add
dec
stos
into
nop
push
push
in
mov
mov
aaa
dec
stos
mov
out
test
or
push
push
sti
mov
mov
or
push
cmp
mov
testl
mov
or
push
jae
adc
stos
dec
lret
lds
cmp
mov
or
jl
jmp
lret
cs
xchg
mov
push
mov
daa
push
and
jne
push
inc
push
xor
xchg
rclb
xchg
sub
mov
xchg
push
iret
repnz
or
out
stos
mov
pop
sub
push
mov
xchg
adc
leave
gs
aad
stos
mov
popf
loop
sti
xchg
aaa
stos
mov
loopne
sub
mov
xorb
stos
shlb
jle
stos
cmp
daa
lock
fistl
mov
data16
fsts
fwait
sti
popl
push
scas
pop
push
ret
jno
cmp
push
push
xor
or
pop
cs
sbb
or
scas
repnz
into
popa
jmp
shrb
push
stos
sub
movsl
mov
mov
jb
into
jmp
call
dec
push
inc
in
in
inc
mov
stos
sbbl
jl,pt
adc
sub
mov
jecxz
jmp
sub
xor
or
inc
pop
or
mov
ret
cmp
in
pop
cmc
es
cs
fisttpll
ja
stos
fs
rcll
mov
adc
stos
jnp
popa
push
dec
and
call
xchg
pop
iret
stos
dec
mov
cmp
sbb
push
stos
jl
dec
imul
out
push
fwait
xor
sbb
mov
inc
jae
sbb
stos
out
scas
add
or
jmp
sub
ljmp
aaa
imul
fld
xchg
sbb
pop
dec
iret
pop
es
mov
xor
scas
fisttpll
leave
lret
stos
dec
xlat
mov
adc
sub
cwtl
mov
stos
mov
scas
and
rol
cmp
push
stos
xchg
xchg
andb
fwait
adc
xor
add
mov
cmp
sub
cmpsl
scas
stos
in
dec
movzwl
push
int
movsl
cltd
stc
add
les
jno
sbb
rol
mov
stos
pushf
inc
pop
add
stos
addb
xor
xchg
mov
add
cmpsb
outsb
inc
fucomip
xor
and
jbe
inc
fimuls
leave
push
ja
test
xor
aam
sbb
or
pop
fnstcw
mov
mov
sahf
imul
cmp
lcall
cmp
push
movhps
lods
popa
lcall
sub
imul
jg
pushf
inc
lcall
push
fldt
pop
cld
sub
stos
imul
ja
fsubrs
dec
add
pushf
notb
xchg
out
dec
jbe
mov
mov
mov
mov
adc
add
mov
orb
dec
lods
dec
imul
stos
push
rolb
inc
mov
dec
jge
push
and
sbb
mov
push
jmp
mov
stos
int
jo
ja
push
push
ljmp
adc
aam
and
adc
mov
stos
jg
bound
jmp
inc
insl
loope
cld
lods
jp
stos
push
cs
pop
mov
push
mov
pop
addr16
in
imul
pushf
xchg
addr16
pop
mov
loope
push
mov
sbb
stos
orb
stos
nop
loop
test
aaa
inc
mov
sub
mov
insb
sbb
xchg
sbb
stos
and
ja
stc
cmpsl
mov
mov
sub
mov
test
push
fprem1
stos
fdivrl
stos
add
cmp
stos
cmp
out
sbb
pop
mov
inc
mov
ffreep
stos
aam
mov
incb
aad
push
dec
jle
divb
clc
movsb
push
pop
fwait
lea
pusha
stos
test
sbb
dec
test
mov
cltd
sarl
popf
imul
aam
cld
pop
ja
dec
rorb
cmp
in
xor
xchg
call
stos
pop
cmp
jns
stos
cmp
mov
addb
adc
lock
cwtl
xor
mov
add
inc
scas
mov
dec
stos
stc
dec
sub
and
sbb
push
int3
fiaddl
stos
sub
mov
add
sti
inc
bound
dec
lds
and
xsavec
insl
push
and
xor
jp
mov
adc
jmp
stc
add
or
imul
outsl
lods
cmpsl
jbe
dec
push
add
dec
sub
lahf
xor
mov
ds
lahf
test
dec
mov
pop
int3
and
je
mov
stos
and
mov
stos
loop
and
call
dec
adc
stos
popa
xor
stos
xchg
int3
jbe
sbb
cmp
outsb
imul
jnp
lea
lds
gs
out
jb
fwait
xchg
sub
fwait
jmp
sub
dec
mov
pop
or
push
pushl
xchg
xor
mov
fwait
in
das
push
je
add
sub
repz
pop
lret
clc
scas
xchg
sub
icebp
mov
xlat
adc
dec
sub
stos
push
adc
pop
ds
inc
pop
or
test
mov
push
pusha
mov
lock
test
mov
test
pop
loopne
jecxz
mov
add
lea
sbb
mov
cmp
add
lea
mov
popf
ficoml
stos
std
negl
push
sub
addr16
mov
sub
ljmp
xor
inc
sti
stos
mov
ja
ficoms
fisubrl
stos
inc
test
mov
inc
stos
xor
adc
mov
mov
rorb
arpl
xchg
mov
stos
clc
or
push
push
in
loope
leave
mov
jge
jmp
movsb
jle
cmp
cmpsb
sbb
dec
jmp
inc
stos
and
loope
push
and
dec
sub
jle
push
xchg
movsl
int3
aaa
sub
sbb
stos
inc
jae
insl
pop
fisttpll
stos
add
mov
dec
inc
jne
mov
mov
jmp
stos
push
dec
imul
iret
ror
cmp
aaa
xchg
mov
mov
mov
inc
push
mov
stos
popa
sub
xor
jmp
push
mov
mov
xchg
pop
lahf
arpl
jne
push
divl
pop
push
ret
loop
pop
sbb
scas
shll
leave
mov
icebp
jmp
pop
xor
subl
sahf
repz
adc
lods
mov
popa
fs
add
cs
std
fwait
fwait
roll
inc
jle
hlt
cli
sbbb
mov
mov
sub
xchg
int3
xor
push
cld
jg
adc
in
jmp
out
xor
adc
xor
push
xor
repz
inc
push
stos
cmpsb
xor
dec
fimull
pop
in
fistpll
adc
sbb
dec
mov
mov
add
add
repz
ret
stos
xor
jl
fmulp
int
mov
mov
push
je
aaa
data16
movsl
insl
jge
push
shll
stos
jp
ljmp
mov
popa
faddp
cmp
adc
jmp
mov
cmc
stos
fwait
jmp
mov
in
jne
and
popf
dec
jmp
mov
push
or
sbb
dec
xchg
stos
mov
inc
mov
stos
dec
fdivl
jb
push
das
push
lods
jae
sub
xchg
xor
stos
push
lods
loop
in
mov
mov
add
insl
fxch
in
data16
test
pop
dec
mov
or
stos
arpl
jnp
lcall
fwait
cmp
pop
movsl
scas
stos
jo
or
xor
mov
iret
out
stos
jp
add
data16
aad
mov
and
dec
mov
lock
add
shll
stos
jnp
mov
bound
inc
shll
lea
mov
mov
divl
cmp
mov
ljmp
jmp
mov
xor
xor
scas
mov
std
enter
inc
jo
push
into
mov
push
xor
dec
stos
shlb
push
xchg
or
ret
loope
xchg
inc
cld
out
fisubrl
imul
andl
and
repz
mov
incb
fcmovb
or
cmp
stos
int
jle
shrl
mov
mov
pop
call
mov
xchg
push
adc
mov
fldt
dec
sub
pop
lea
out
push
stos
or
jne
or
sub
jnp
pop
hlt
daa
mov
lret
sbb
lcall
and
inc
insb
inc
sbb
dec
adc
cli
insl
fwait
andb
fildll
daa
cmp
add
mov
xor
fldl
jecxz
jne
loopne
dec
pop
ds
insb
nop
add
in
stos
dec
fwait
cli
adc
add
jecxz
and
xlat
stos
dec
jle
data16
cli
out
stos
jo
and
pop
pop
xchg
movsb
inc
scas
ret
mov
xor
stos
xor
aad
cld
adc
or
repz
stos
dec
stos
lahf
adc
push
stos
dec
sarl
data16
xor
sub
nop
dec
jmp
and
es
clc
jmp
jl
push
lock
or
xchg
loop
scas
mov
in
ja
je
stos
cmp
jecxz
sahf
imulb
sbb
call
xchg
jmp
mov
sub
jge
xchg
nop
stos
jae
fisttpll
adc
leave
movsb
cltd
mov
in
cld
mov
test
cmc
xchg
stos
push
cltd
sub
stos
cld
movsb
add
scas
mov
flds
out
ds
cld
test
movsb
cmp
sub
ss
cltd
push
push
and
xchg
shr
push
and
or
nop
adc
add
or
sbb
repz
mov
mov
xchg
repnz
jp
jb
subl
stos
fstpl
cmp
imul
cltd
mov
fdivrs
or
stos
mov
mov
mov
adc
stos
js
stc
cmpsl
test
and
and
adc
popl
in
stos
pusha
dec
in
pushf
mov
push
and
jne
lods
imul
arpl
insl
stos
push
mov
cmpsl
loop
jle
cmp
inc
popf
cli
sub
fstpt
adc
decl
stos
dec
cmp
ss
or
stos
cltd
data16
mov
popf
in
cmp
jmp
sub
xchg
xor
jl
or
jne
das
lods
or
call
out
es
into
jb
pushf
popa
jne
fwait
jae
pop
pop
cmp
mov
or
loopne
mov
mov
addr16
xchg
aas
dec
push
xor
insl
scas
cltd
stos
mov
sbb
movsb
cmp
stos
dec
imulb
je
inc
mull
xor
jns
rcr
dec
movsb
pop
arpl
stos
xor
leave
and
stos
adcb
arpl
lret
jle
fwait
lahf
jno
fwait
cmp
or
subl
sti
outsb
aam
xchg
arpl
inc
iret
or
jmp
jbe
xor
and
dec
stos
popa
dec
inc
mov
jno
add
xchg
in
insl
mov
xlat
imul
int
xchg
mov
sub
pop
cs
mov
add
inc
ret
out
mov
mov
fcmovb
outsb
xor
test
jns
xchg
inc
dec
stos
cwtl
sbb
stos
lods
push
dec
decl
clc
lock
and
fsubl
pop
stos
test
pop
pop
mov
push
fnstenv
in
xchg
out
stos
rorl
stc
mov
pusha
or
pop
in
stos
inc
je
push
popf
and
cmp
and
inc
xchg
pop
ret
xchg
hlt
mov
push
rolb
lds
stos
inc
dec
fwait
leave
cmpsb
enter
loope
inc
jl
jmp
dec
xchg
cmp
cli
rol
stos
add
clc
or
outsl
push
gs
testb
or
push
in
mov
mov
scas
sub
movsl
jl
testb
dec
fwait
stos
lock
xchg
lahf
test
stos
cmpl
jge
idiv
fbstp
addl
pop
push
jns
adc
stos
push
imul
fcmovnbe
mov
inc
sbb
ret
dec
push
mov
stos
inc
dec
xor
xchg
cmpb
sbb
jno
arpl
roll
stos
add
orl
imul
mov
push
mov
sub
test
pop
stos
pop
lret
inc
mov
and
or
fidivl
popf
cmp
jge
test
mov
push
add
in
stos
mov
dec
or
ljmp
sub
mov
dec
imul
pop
mov
xchg
mov
ds
stos
stc
sub
outsl
xchg
and
mov
mov
adc
nop
xlat
mov
push
fnstsw
js
stos
out
xchg
in
mov
outsb
jae
int3
mov
pop
jmp
cmpb
inc
scas
mov
jo
mov
sub
mov
and
fwait
pop
xchg
mov
daa
push
cmp
or
mov
aam
pusha
cmp
jnp
call
xor
stos
mov
add
stos
pop
xchg
pop
ljmp
xor
push
subl
test
pushf
jmp
stos
notb
loopne
icebp
inc
dec
dec
jmp
lock
lods
aam
in
and
pop
push
pop
dec
mov
cwtl
stos
inc
arpl
pop
lahf
push
push
xchg
stos
adc
mov
stos
push
jnp
add
cs
popf
stos
jge
push
add
pop
push
mov
stos
sbb
mov
pop
adc
jmp
test
pop
jle
xchg
popf
adcl
arpl
mov
arpl
mov
xchg
sbb
fcoms
mov
xchg
into
inc
stos
loop
cmpsl
cmp
and
push
repz
int
mov
xchg
gs
add
insb
stos
iret
loope
push
cmp
mov
mov
pop
mov
sbb
pop
jge
adc
pop
movsl
jns
in
cmpsb
stos
js
mov
ljmp
pusha
pop
into
jae
lods
fwait
fs
popf
cmp
sub
xchg
lock
enter
adc
into
nop
lcall
stos
loope
mov
xor
sub
stos
mov
dec
hlt
into
gs
out
push
daa
push
aaa
xchg
sub
mov
mov
mov
cmpsl
imulb
cmp
stos
cmp
or
lahf
insb
add
jbe
test
stos
jo
rorb
or
xchg
xorb
lcall
xchg
mov
cmp
push
push
and
adc
or
mov
popa
xor
jne
xlat
stos
xchg
ljmp
mov
es
lods
dec
mov
insb
adcl
rorb
ljmp
sbb
pop
nop
cli
sbb
pop
dec
test
mov
mov
cmp
add
stos
mov
lret
pop
addr16
stos
inc
adc
mov
cmp
fldcw
aaa
dec
add
xor
adc
outsl
jmp
call
inc
mov
mov
mov
xchg
fcmovnbe
stos
orl
loop
imul
fstl
stos
repnz
fs
in
jo
test
ret
push
scas
xor
loopne
adcl
jb
in
fbld
stos
scas
rep
sbb
mov
std
pop
inc
stos
push
test
jecxz
sbb
adc
ds
stos
mov
cld
and
es
sti
mov
dec
mov
mov
xchg
xor
aam
stos
push
dec
lock
loopne
push
jg
jp
les
inc
push
sti
pop
cld
mov
jl
jmp
test
repnz
data16
addr16
push
inc
out
pop
push
scas
repz
cs
pop
xor
mov
mov
cmp
jmp
std
mov
daa
xchg
loop
movsb
int
jo
xor
lock
stos
mov
mov
push
inc
je
lret
leave
clc
mov
stos
mov
aas
hlt
xlat
jge
and
iret
cmp
in
stc
pop
mov
push
stos
andb
jne
ja
stos
sub
cmc
and
sub
insb
mov
cmp
inc
inc
orl
or
mov
dec
inc
and
stos
push
jb
cmp
or
xchg
add
mov
and
pop
clc
stos
xchg
xlat
scas
or
pop
pop
or
cmp
arpl
pop
mov
movsb
mov
rcr
mov
into
lock
mov
dec
xchg
mov
mov
stos
pop
jo
xor
mov
ret
dec
jb
cmp
mov
js
ljmp
decl
stos
mov
fstps
mov
cmp
insl
xor
stos
rcl
xchg
or
scas
stos
rolb
call
sti
jge
inc
and
pushf
jecxz
out
addr16
push
mov
inc
stos
popf
xchg
std
loopne
xor
xor
jmp
push
or
sbb
pushf
jle
inc
mov
push
stos
fidivrl
mov
insl
sub
hlt
sbb
stos
sbb
mov
xchg
xchg
loopne
pop
stos
cmc
dec
test
fisubrl
sarb
mov
push
push
xchg
jle
stos
aas
jbe
pop
dec
int
sti
and
dec
jo
mov
aad
inc
jns
mov
pop
ljmp
add
jo
push
xchg
shl
mov
pop
bound
es
cmp
fwait
sub
scas
and
cmpsb
dec
mov
dec
jg
fisttpll
test
ljmp
mov
xor
jle
push
clc
pop
lahf
sub
jl
imul
push
pop
jmp
push
cmp
xchg
mov
cmpsb
xor
push
mov
filds
mov
rorl
mov
stos
jl
out
or
add
std
or
adc
stos
movsl
test
cs
shrb
mov
dec
sarl
or
or
divb
idiv
stos
mov
jmp
mov
pushf
std
outsl
jp
stos
aam
out
dec
mov
pop
sbb
lods
xchg
push
popf
xor
es
fidivrl
stos
call
mov
stos
push
sub
mov
fmuls
fwait
inc
fistpl
dec
adc
pop
test
lea
lods
jmp
push
adc
int3
out
in
stos
stos
fildl
rcrb
push
fdivrl
mov
ss
iret
inc
jb
das
aas
insl
stos
mov
push
xchg
inc
stos
mov
mov
xchg
dec
jl
and
push
loopne
icebp
lcall
pop
loop
pop
xchg
xchg
inc
stos
mov
fcomps
stos
pop
in
jbe
es
arpl
imul
adc
cmp
or
stos
cs
popl
mov
push
and
imul
in
push
pop
cmp
movsl
addl
stos
notb
fnstenv
aas
or
out
jb
subl
adc
test
xchg
mov
push
mov
dec
int
pop
xchg
lods
mov
and
movsb
pushf
imul
js
jmp
mov
fisttpl
vpaddd
popf
in
pop
imul
mov
adc
and
cmp
jmp
fwait
xchg
jb
adc
xchg
jmp
lock
outsl
mov
aaa
int3
gs
imulb
mov
xor
pop
sbb
hlt
lahf
fwait
xchg
dec
pop
movsb
jne
leave
mov
push
ss
imul
pushl
push
adc
and
pusha
xchg
cmp
and
into
lods
mov
jmp
cld
add
push
sbb
scas
stos
and
jg
mov
stos
lahf
xor
mov
mov
sub
stos
shlb
cltd
sbb
mov
sbb
inc
add
into
add
or
stos
xchg
lea
add
subl
xchg
xchg
shrb
cmp
clc
cmpsb
jl
sub
add
stos
cld
cmpsl
stos
shll
popa
jnp
push
mov
jmp
jns
add
sub
mov
idivl
dec
shrb
xor
cmp
sbb
nop
stos
inc
jecxz
adc
mov
xlat
rorb
stos
movsl
sub
dec
stos
jmp
mov
pop
stos
inc
push
cmp
mov
cmp
sti
xchg
inc
pop
bound
dec
inc
loope
stos
pop
lea
call
stos
mov
dec
add
stos
mov
jl
lods
stos
insb
iret
push
inc
pop
rcl
sub
hlt
lock
add
cld
in
pop
push
rolb
loope
sahf
or
jno
stos
mov
test
push
stos
jnp
xor
or
stos
sahf
dec
jne
mov
int3
lods
jnp
aam
cmp
inc
data16
lcall
inc
stos
add
aad
cmpsl
stos
jbe
xchg
imul
mov
mov
xchg
lods
sub
mov
mov
lret
insb
pop
mov
bts
add
push
add
int
in
push
xchg
jne
xchg
dec
stos
cmc
or
test
stos
jmp
lds
stos
sbb
mov
stos
daa
out
inc
add
int
stos
aam
mov
mov
lock
jae
jecxz
scas
aaa
mov
stos
popa
dec
lahf
and
xor
imul
mov
stos
jp
int3
jne
mov
inc
stos
xchg
mov
call
js
jns
dec
dec
lods
sti
stos
das
sub
push
xor
push
stos
mov
outsl
or
in
mov
or
cs
and
daa
jmp
out
arpl
mov
mov
jmp
xor
jne
loopne
jecxz
xchg
xchg
stos
dec
test
movsl
aad
push
push
jmp
jno
shrb
stos
push
mov
sub
sub
cmp
fabs
inc
xchg
mov
lcall
cli
pop
push
dec
mov
add
icebp
popf
cmp
mov
mov
dec
sbb
jae
sub
inc
and
xchg
jnp
popf
imul
jmp
addb
mov
jne
bound
push
mov
dec
dec
dec
std
stos
push
repz
dec
inc
mov
movsl
xor
leave
or
mov
sti
out
add
scas
enter
std
out
lea
mov
mov
in
cli
inc
arpl
daa
sub
push
stos
test
and
outsl
pop
stos
xor
push
jno
stos
sub
cmp
xor
out
jbe
decb
ret
adc
push
mov
das
or
movsb
cmp
stos
sti
stos
push
xchg
rcrb
cli
stos
xchg
repz
push
pop
dec
into
ljmp
scas
punpcklbw
stos
mov
mov
addr16
xchg
pop
xor
push
lock
mov
jnp
dec
and
jmp
cwtl
cmp
nop
ds
stos
outsb
dec
xlat
scas
rclb
push
hlt
mov
stos
sbb
add
stc
out
cmp
xorl
inc
push
jle
and
loope
or
sbb
mov
icebp
jl
orl
xchg
adc
jo
leave
inc
in
or
xor
test
stos
jo
jmp
mov
jmp
mov
cmp
cmc
movsb
in
rcrb
lahf
mov
stos
xorb
mov
imul
push
cmp
push
outsl
mov
stos
repz
stos
out
jecxz
fildll
inc
jno
stos
push
mov
mov
clc
xchg
mov
xchg
arpl
outsl
sahf
xchg
stos
mov
cwtl
fsubr
stos
or
repnz
rcr
lea
enter
subl
shlb
stos
aaa
lret
push
fcomip
pushf
test
stos
push
sbb
sbb
inc
pop
inc
stos
ds
cmp
stos
jo
ret
dec
push
jl
cwtl
inc
xchg
ret
pushf
cs
mov
scas
dec
push
xchg
fidivl
fwait
repz
daa
mov
stos
bound
cmovae
adc
mov
lea
cwtl
fidivl
stos
sti
jl
cli
leave
lods
movsb
stos
jb
lcall
mov
mov
mov
imul
mov
add
push
sub
ss
xchg
adc
stos
enter
adc
ljmp
mov
mov
int3
out
in
mov
loop
divb
inc
pop
jo
int3
xchg
mov
push
pop
inc
call
scas
push
bound
xchg
push
add
jno
fwait
clc
push
and
sahf
imul
jl
aad
outsb
fwait
outsl
and
repz
or
mov
stos
cmp
sti
mov
jmp
mov
and
hlt
or
test
pop
inc
jae
fwait
mov
cli
add
adcb
mov
or
test
rcrb
or
into
pop
sti
popa
adcl
lret
stos
testl
mov
xchg
sub
ds
lret
adc
bound
loope
stos
jns
nop
mov
cld
aas
jg
xchg
ffreep
pop
push
mov
stos
iret
subb
daa
fs
aad
pop
sahf
xor
in
mov
xchg
inc
xor
shll
push
addb
pop
out
dec
jp
cmpl
into
dec
stc
mov
lret
push
mov
and
stos
mov
ret
aad
mov
push
stos
inc
enter
mov
or
mov
stos
rol
inc
dec
gs
add
das
jo
mov
mov
add
cmpsl
lods
mov
aas
insl
xchg
push
sub
sub
mov
inc
cmp
pop
outsl
je
lods
add
jo
mov
add
push
imul
or
ficomps
lahf
mov
arpl
test
iret
addr16
mov
xchg
shrl
cli
fwait
inc
or
stos
call
sbb
dec
jg
fmull
out
sbb
mov
push
loopne
jnp
push
dec
sub
push
mov
mov
xor
sahf
ds
pushf
inc
or
xchg
or
clc
stos
in
sbb
stos
mov
push
jge
push
leave
push
sub
nop
scas
mov
xchg
or
inc
divb
pop
fs
stos
mov
test
loop
mov
add
mov
in
sbb
add
mov
jo
push
pop
jp
test
cs
and
xor
jl
mov
stos
jmp
gs
xchg
xchg
mov
jmp
int3
cmp
lret
stos
inc
daa
push
mov
test
sub
inc
or
fistl
stos
mov
dec
popa
mov
mov
inc
push
xor
lret
cld
or
ljmp
dec
jne
sbb
int3
pop
sub
int3
jle
push
sbb
dec
mov
adc
push
pop
add
pushl
xor
cmpsl
lds
hlt
in
aaa
ds
loopne
xor
adc
cmp
in
outsl
dec
popf
stos
aam
cmp
stos
notl
addr16
stos
pop
jno
movsl
push
in
push
adc
outsb
push
rorl
scas
dec
xchg
stc
pop
into
mov
adc
pop
and
stos
clc
xlat
dec
mov
fwait
jae
stos
outsb
cltd
jl
jb
mov
imul
push
stos
pop
lret
or
mov
pop
lods
aam
jp
sbb
daa
imull
or
pop
icebp
sub
jmp
mov
adc
mov
push
sbb
cmp
adcl
daa
stos
jae
xchg
cmp
mov
push
arpl
jp
je
push
sub
xorb
xchg
dec
fldcw
jae
lock
sti
or
lds
push
cmp
pushfw
aas
outsb
add
imul
aam
pop
or
iret
push
jmp
sbb
and
fwait
pop
or
xchg
xlat
orl
jecxz
mov
push
es
cwtl
cmpsl
arpl
out
fwait
popl
sub
cmpsb
xchg
sbb
add
movsb
outsb
xchg
push
cmp
fwait
mov
and
int
loope
in
es
mov
lea
stos
push
aas
adc
movsl
imulb
test
dec
fldt
cwtl
lds
scas
push
mov
fwait
inc
jge
adc
mov
xchg
out
cltd
stos
adc
mov
repnz
fidivl
daa
fucom
fwait
and
or
push
inc
jg
outsb
lods
hlt
fcmovne
scas
int3
stos
dec
cmp
push
xchg
mov
testb
lahf
xchg
test
inc
xor
mov
mov
push
sub
push
inc
outsl
daa
inc
xchg
sbb
stos
inc
in
in
mov
cmp
xor
sub
xchg
mov
clc
and
es
cmp
iret
pop
lods
adc
xchg
pop
sub
dec
cmc
mull
mov
mov
iret
stos
mov
jno
dec
and
jmp
cmp
jle
into
dec
cwtl
dec
int3
stos
push
pusha
xor
pop
jbe
es
loop
sahf
mov
scas
push
stos
adc
sub
fisttps
stos
aad
in
xchg
jmp
adcl
jg
call
scas
rep
vpsubusw
dec
pop
pop
stos
push
cmp
out
xchg
inc
lods
and
mov
mov
int3
enter
pop
mov
fs
push
and
inc
push
rcrb
cmpsb
cltd
jmp
cmp
aad
lods
scas
fnstenv
addr16
jp
cmp
cmpl
lret
add
je
sbb
xor
pushf
popa
sbb
fwait
inc
xor
fildl
or
jmp
adc
adc
int
lods
jle
mov
inc
fnstenv
pop
lea
stos
cmp
cs
cmc
add
idiv
cmp
ljmp
mov
negl
push
imul
mov
int3
and
ljmp
test
inc
shrb
data16
adc
pushf
push
leave
push
dec
mov
mov
int
mov
daa
or
xchg
add
dec
imul
jno
adc
xchg
flds
gs
stos
xchg
or
jno
gs
test
sub
jg
stos
mov
xor
in
xchg
mov
inc
mov
lods
xor
inc
int3
stos
imul
cs
mov
out
stos
sbb
or
jb
pop
fisttps
stos
repnz
mov
out
clc
js
pop
lods
inc
std
insb
stos
loope
sub
xchg
dec
stos
cmp
mov
je
fldt
scas
xchg
popf
stos
fs
int3
and
in
daa
stos
mov
imul
pop
stc
mov
gs
stos
xchg
insb
mov
mov
mov
lcall
push
and
test
add
shrl
ret
fildll
lcall
repnz
sbb
mov
imul
orb
cwtl
shld
push
movsl
clc
stos
imul
jl
or
rcrl
dec
mov
in
xchg
data16
stos
inc
cmp
stos
xor
je
jp
add
movsl
jns
icebp
mov
xor
or
cmp
sahf
and
outsb
mov
test
jnp
push
sbb
mov
inc
rcrb
stos
jnp
aas
lods
out
mov
rcll
stos
jle
add
stos
loope
xchg
lret
push
test
stos
mov
xchg
adc
cmp
mov
stos
mov
sti
stc
imul
mov
iret
in
lods
cwtl
jmp
jmp
fstps
fwait
sub
daa
pop
jge
push
mov
ljmp
in
enter
repz
ja
jmp
stos
out
das
and
push
lea
loopne,pt
adc
push
dec
mov
mov
dec
stos
shlb
xlat
mov
jne
stos
mov
arpl
fwait
stos
imul
shrl
jmp
ret
bound
stos
pop
stos
jecxz
add
or
push
repz
or
ja
mov
stos
push
pusha
mov
repz
je
inc
or
xlat
add
sbb
sbb
mov
xchg
rep
andb
cli
jle
lods
push
push
cmpl
add
sub
lock
int
inc
push
shrb
inc
xchg
cs
push
mov
and
adc
scas
mov
enter
cld
push
xchg
stos
fnstsw
or
sbb
inc
xor
movsl
push
sarb
mov
pop
jl
dec
push
jo
mov
sbb
dec
mov
rcll
fwait
mov
idivl
popf
leave
jl
loop
mov
jp
inc
and
aaa
mov
mov
mov
aaa
loope
aaa
cmp
push
stos
sub
pop
insl
adc
inc
jecxz
movsb
mov
mov
add
imull
fsub
cmpsl
lret
sub
jmp
loop
mov
cltd
jb
pop
imul
stos
inc
xor
pop
daa
stos
rol
stc
cmpsl
je
stos
add
int
cmp
cmc
sbb
popa
and
sub
scas
push
in
pushf
mov
xchg
jle
outsb
pop
stos
pop
xor
xor
xchg
jl
in
inc
stos
and
cmp
aam
cli
pusha
mov
loope
xchg
inc
dec
mov
sub
push
insb
xchg
jne
sbbl
xchg
cmovp
lods
loop
dec
stos
or
xorb
and
sarb
push
push
xchg
pusha
orl
addr16
adc
lcall
mov
scas
push
dec
stos
movsb
add
pop
imul
stos
mov
or
push
test
cltd
mov
in
pushw
stos
out
dec
adc
cmpsb
mov
in
lods
test
es
xchg
fs
nop
cmp
and
seta
outsl
fbld
scas
test
jbe
and
subl
stos
or
dec
xchg
jnp
mov
scas
das
pop
insl
insb
incl
jb
xchg
mov
push
push
daa
stos
add
xor
stos
dec
xor
adc
out
nop
subl
out
lret
imul
in
das
xchg
stos
or
popf
xchg
xchg
xchg
and
fldl
xchg
repnz
push
imul
rcl
fwait
cmpb
jg
push
mov
sbb
add
sbb
sbb
adc
or
pop
push
sbb
enter
fadd
in
or
mov
stos
call
stos
pusha
fwait
stos
push
sub
mov
outsb
lods
mov
stos
aas
daa
sbb
es
mov
dec
jmp
in
jae
mov
jmp
xchg
xchg
push
or
ljmp
add
xchg
lahf
jmp
lret
mov
nop
pop
mov
mov
sti
stos
ror
sbb
mov
adc
sbb
mov
stos
push
push
cmp
xchg
pop
lods
stos
loope
imul
push
dec
ret
sub
dec
xchg
mov
mov
add
mov
test
pop
jo
das
mov
inc
dec
dec
movsl
test
jno
dec
daa
stos
popa
xchg
leave
test
mov
jmp
xchg
sar
icebp
push
repnz
aad
xchg
sbb
cs
sub
stos
addr16
movsl
or
mov
in
mulb
mov
ja
stos
pop
pushl
mov
out
xchg
daa
insb
dec
lahf
and
test
out
mov
sahf
test
je
jl
aam
ljmp
mov
lods
daa
mov
mov
dec
push
packssdw
stos
jp
adc
pop
stos
mov
adc
mov
jl
dec
and
or
or
clc
aad
icebp
lret
jbe
push
xchg
stos
insl
dec
add
repnz
idivl
andb
push
sbbl
push
and
and
sub
repz
repnz
add
lods
orb
stc
inc
stos
out
test
iret
icebp
xchg
xchg
jp
inc
jbe
pop
adc
pop
adc
out
pusha
mov
iret
and
repnz
fisttps
mov
pop
arpl
stos
push
mov
add
dec
sbb
orl
jp
js
into
and
sbb
jg
dec
movsb
mov
lahf
push
imul
enter
add
cmp
cld
roll
mov
iret
clc
sub
dec
in
test
out
into
mov
stos
lods
push
and
les
leave
outsl
addr16
sub
jmp
stos
jne
lahf
or
jg
stos
subl
sbbb
stos
push
ds
pop
xor
sub
test
and
stos
inc
adc
ds
pushf
xlat
pop
adc
xchg
mov
test
test
xchg
rclb
cmp
xchg
pop
pop
xchg
mov
test
aam
fwait
es
popf
and
mov
add
loope
aad
mov
jne
add
addr16
test
dec
jecxz
aas
cmp
and
daa
mov
popa
rcrb
scas
cmc
mov
push
in
dec
imul
mov
stos
mov
sub
outsl
jo
divl
dec
push
xor
cmp
mov
mov
mov
daa
dec
out
sub
mov
adc
stos
inc
divl
lret
stos
fidivrs
or
stos
sbb
stc
arpl
jnp
mov
push
cmc
mov
stos
cmp
cwtl
shl
xor
daa
out
dec
jae
pop
out
jle
in
pop
stos
xchg
stos
repnz
jbe
leave
jmp
push
pop
mov
addr16
inc
lods
test
daa
adc
jmp
stos
aaa
xchg
jns
jo
es
scas
pcmpgtb
cmp
stos
mov
push
mov
sbb
mov
outsl
stos
push
shlb
loope
stos
mov
into
xchg
xlat
scas
pop
dec
addr16
stc
lea
inc
jae
xchg
mov
fildll
xor
xor
and
stos
pop
gs
iret
or
dec
js
jae
xchg
jnp
hlt
jmp
icebp
bound
lret
or
xor
ljmp
scas
mov
add
adc
jbe
push
mov
stos
dec
hlt
data16
pushf
stos
rep
scas
and
cltd
outsb
sub
stos
mov
jno
fldl
or
ljmp
sub
sub
stos
dec
sub
daa
int3
fwait
xor
mov
stos
in
jle
daa
imul
jmp
push
repnz
mov
fwait
mov
aad
and
faddl
jmp
cmc
mov
stos
outsl
jb
sbb
xor
dec
in
testb
or
pusha
fsts
stos
jmp
test
jne
pop
cmp
bound
arpl
bound
inc
ja
pop
lcall
insb
or
loop
cmp
stos
xor
data16
outsb
ficoml
sub
cld
stos
mov
push
mov
stos
jbe
ret
imul
mov
inc
mov
lret
stos
sub
dec
push
lahf
jmp
mov
ss
or
inc
pushf
out
gs
mov
inc
mov
mov
daa
in
or
es
or
rcr
stos
int3
sub
jl,pt
out
stos
jbe
scas
dec
xchg
cld
cmpsl
jge
dec
stos
fidivrs
ret
push
add
lods
scas
ljmp
adc
dec
jb
aad
cmp
jge
and
sub
push
cmc
imul
jecxz
aad
aam
sti
jge
mov
cmp
mov
data16
mov
and
imul
fwait
jg
xchg
lcall
pop
insl
popa
int
icebp
inc
lock
int3
mov
imul
mov
dec
sub
data16
orb
cmp
dec
mov
push
add
cmp
fisubs
popa
mov
push
in
stos
inc
lahf
call
mov
dec
mov
inc
sbb
test
aaa
orb
data16
subl
out
and
mov
push
sarl
mov
mov
push
lcall
adc
jge
stos
cli
push
jo
enter
jmp
sub
jb
add
pushw
pop
push
mov
scas
sbb
stos
pop
mov
aam
inc
popf
pop
stos
in
jae
lret
xchg
mov
xchg
xchg
shrb
push
mov
mov
mov
lret
stos
add
cmp
andl
cwtl
pop
fdivs
cmpsl
xchg
sbb
xchg
cmp
jns
das
pop
jbe
sbb
inc
pop
mov
in
adc
cs
in
and
ret
mov
inc
xor
mov
cmpsb
adc
addl
push
mov
xchg
mov
pop
dec
fucomp
sub
push
jl
xchg
rorb
xor
mov
nop
mov
repz
int
stos
add
xchg
outsb
pop
aaa
and
test
xchg
das
fwait
adc
sbb
cld
mull
cmpsl
mov
scas
sbb
imul
jne
jl
mov
stos
scas
inc
and
jmp
mov
test
sahf
inc
mov
push
pushf
add
rorl
scas
pop
push
mov
out
add
push
or
and
scas
lea
push
in
in
pop
in
mov
cmpsl
mov
inc
aad
mov
adc
cmp
or
es
sarb
dec
pop
fisubl
fisubs
mov
mov
fisttps
mov
fisubrs
sahf
cltd
stos
std
dec
mov
lret
jne
inc
stos
lret
ja
clc
fstpt
xchg
mov
pop
das
stos
test
push
test
stos
test
js
imull
or
push
pushf
mov
stos
ss
movsl
or
mov
jmp
pop
mov
sub
inc
call
ljmp
lock
jnp
movsb
in
stos
in
push
fistl
inc
inc
stos
dec
fnstsw
adc
push
stos
addr16
jg,pn
fdivl
int
cmp
in
add
fbld
xchg
stos
fiaddl
pushf
sub
mov
cmp
xchg
shrb
jp
lcall
into
flds
sub
rcrb
xor
popf
test
fimuls
lea
das
cmp
enter
cmc
dec
sbb
stos
loop
xchg
pop
or
popa
mov
lret
aas
mov
pop
and
fidivrl
outsb
outsl
xor
insb
in
xchg
dec
mov
push
stos
add
and
jb
aas
in
je
lahf
xchg
dec
stos
loope
cli
sbb
jns
fimull
stc
lods
pop
repz
xor
lcall
test
adc
adc
mov
or
stos
std
loop
mov
cltd
mov
jle
sbb
dec
push
popa
or
and
push
adc
xchg
repz
pop
stos
dec
jmp
mov
rclb
ss
inc
enter
fistl
jb
jmp
xor
aam
mov
or
sbb
int3
in
out
jnp
pop
es
stos
push
data16
push
orb
fsts
aas
sahf
xchg
in
les
add
stos
pop
mov
dec
xor
xlat
sbbl
stos
sarb
ds
stos
scas
fwait
xor
insl
cwtl
push
lods
dec
cmpl
std
test
sub
stos
das
cwtl
add
cli
sarb
js
mov
lcall
jo
subl
cltd
sbbb
dec
add
addb
xchg
cmpsb
pop
imul
mov
or
xchg
ret
mov
fisubrl
cli
imulb
push
sub
stos
fcmovb
hlt
adc
daa
outsb
inc
cmp
sub
adc
push
cmpsl
stos
js
lods
ret
int
ja
jmp
add
and
add
sbb
nop
or
sbb
jnp
dec
dec
push
adc
mov
mov
bsf
xor
out
lahf
and
jp
js
stos
dec
subb
icebp
sti
rep
test
outsb
addb
sahf
fistpl
mov
shlb
bound
imulb
das
ret
inc
out
lods
jle
bound
cmpb
stos
std
xorb
pop
ljmp
mov
xchg
push
outsl
jmp
lods
inc
xchg
bound
stos
icebp
dec
mov
sub
sbb
stos
add
mull
jp
jns
aaa
dec
adc
stos
leave
sub
and
jnp
popa
imul
pushf
xchg
pusha
arpl
scas
mov
push
add
mov
stos
iret
in
mov
outsl
ja
stos
jmp
std
stos
or
addr16
xor
icebp
dec
cld
stos
movsb
loopne
sbb
pop
mov
outsb
jge
add
and
shrl
adc
loop
jecxz
test
sub
daa
cmpsb
lret
test
sub
add
cmc
ljmp
or
pop
pop
jb
xchg
jmp
stc
stos
sub
leave
sbb
in
and
sub
and
mov
fwait
jmp
and
mov
dec
and
sub
out
mov
arpl
add
push
pop
clc
leave
push
cmp
daa
xchg
xchg
xorw
mov
mov
outsb
lea
nop
dec
fwait
iret
add
jge
popf
jb
rcrl
fs
adc
aas
stos
sub
out
cmp
push
iret
xchg
das
mov
stos
test
and
aad
imulb
repnz
enter
popl
push
and
push
daa
in
cmp
and
mov
xchg
adc
mov
rcrb
daa
repnz
sub
imul
jge
xor
ljmp
mov
les
lcall
xchg
add
pop
push
subb
jg
stos
xor
or
dec
popf
das
clc
adc
stos
scas
js
and
imul
sbb
or
aad
pop
sti
lcall
jnp
outsb
jp
jnp
and
clc
pop
std
daa
int
mov
mov
mov
push
stos
sbb
cs
mov
cmp
js
push
sti
stos
jne
or
outsl
lcall
dec
xchg
stos
mov
dec
mov
stos
mov
fnstcw
jp
pop
addb
icebp
push
mov
das
stos
push
jae
stos
lods
or
inc
cmp
mov
pop
out
pop
push
ret
cmp
popa
sub
add
stos
cmpsb
cmp
out
testl
subb
movsl
mov
cmp
movsb
cmpsb
mov
orb
outsb
adc
stos
inc
add
nop
mov
sbb
mov
sub
lahf
push
add
iret
cltd
ret
and
stos
cld
fmul
jp
add
ret
inc
and
ljmp
jle
fildll
xor
mov
imul
lahf
ret
aad
mov
dec
xchg
pop
sbb
and
mov
cmp
dec
or
cmpsb
mov
and
in
cmp
xor
addr16
xlat
xor
fucom
mov
mov
imul
xchg
add
and
les
mov
jmp
mov
arpl
popa
mov
mov
cs
arpl
les
dec
xor
or
stos
xchg
daa
mov
out
insl
push
or
add
or
xchg
xchg
sub
mov
js
ljmp
scas
pop
mov
aas
jp
sub
lcall
inc
aaa
adc
cmp
stos
push
jb
inc
or
push
push
mov
mov
dec
mov
cmc
movsl
or
pop
int
stos
or
es
and
and
cmpsb
inc
out
add
out
push
mov
or
pusha
in
stos
leave
scas
das
cmp
pop
push
in
ficoml
cltd
shr
cmpsb
lods
bound
aam
stos
and
sbb
lcall
aad
in
repz
inc
cmp
sub
sti
cwtl
xor
and
lcall
mov
mov
insb
inc
inc
stos
mov
lret
mov
fisubrs
cmp
dec
pop
out
sub
stos
push
fdivrl
xchg
sub
mov
or
jno
mov
inc
stos
js
in
or
repnz
aad
mov
pushf
and
mov
sbb
push
inc
mov
inc
roll
lds
cmc
rcll
sub
mov
xor
loope
stos
dec
jo
gs
test
mov
jge
mov
insl
mov
jnp
add
pop
stos
mov
push
dec
add
push
adc
dec
cld
imul
sbb
aas
sti
movsb
scas
mov
imul
xor
test
int
push
sbb
xor
repnz
cmpsb
inc
aam
jbe
pop
sub
and
stos
cli
mov
icebp
lcall
mov
push
idivb
popa
push
jl
and
push
dec
fnstcw
mov
repnz
test
repnz
imul
int3
aaa
adc
icebp
xchg
fildll
fwait
movsb
xor
dec
mov
fstpt
clc
enter
cmp
in
push
fisttpl
cmc
fs
xchg
push
dec
scas
adc
mov
into
test
and
cwtl
mov
daa
sbb
xchg
fcoml
inc
cli
mov
mov
out
test
mov
sahf
dec
fnsave
xchg
jb
aam
xlat
lds
adcl
dec
sti
jnp
sarb
es
jnp
cli
jbe
dec
mov
das
gs
and
xchg
imul
xor
cmp
dec
jg
cmp
stos
sar
add
jo
jnp
loop
and
inc
jmp
inc
in
popf
xor
xchg
mov
daa
or
imul
stos
ja
xor
aas
imul
in
and
jp
xor
lea
pop
jge
pop
fimull
mov
loop
and
stos
insl
test
mov
stos
mull
jnp
mov
dec
and
in
outsb
stos
movsl
inc
jl
inc
pmulhuw
lcall
mov
cmp
scas
mov
insl
rorl
mov
testl
ret
mov
xchg
jmp
loopne
add
cmp
fsubl
add
mov
out
xchg
aas
cmpsl
and
xchg
sub
inc
add
xchg
bnd
mov
push
dec
sub
adcl
cmp
stos
mov
out
insb
in
popa
and
mov
mov
dec
xchg
mov
mov
stos
mov
push
mov
ret
fidivl
stos
mov
adc
or
push
xorb
ljmp
mov
pop
clc
out
stos
xor
icebp
jns
cmp
imul
loop
nop
adc
push
test
lahf
stos
jl
cli
xor
xchg
adc
das
push
stos
push
sub
daa
dec
pop
sub
test
mov
mov
cmp
popf
out
or
jle
jne
pop
arpl
jnp
imul
aam
push
cmp
add
xchg
push
nop
aam
and
xchg
stos
lock
test
lea
pusha
cwtl
imul
sub
jge
clc
cmp
mov
xchg
xchg
sub
jo
aad
pop
fildll
outsl
std
jnp
imul
rclb
sub
std
sbb
add
jnp
test
mov
push
popl
or
stos
icebp
push
cmp
pop
stos
jmp
push
sub
xchg
xor
mov
test
fimuls
imul
and
in
sti
stos
in
push
notl
je
add
lea
mov
dec
ja,pn
sbb
mov
sub
mov
aaa
out
inc
push
fstps
jl
cmpsb
daa
dec
into
mov
jns
popa
mov
lods
cmp
sub
sbb
xchg
mov
mov
add
ret
popf
stos
adc
mov
xchg
stos
push
mov
xchg
popf
stos
adc
pop
jecxz
mov
mov
mov
jmp
movl
add
pop
mov
adc
mov
iret
mov
xchg
pop
inc
adc
stos
out
xor
fidivrs
push
fucomp
maxps
lea
out
repz
sti
mov
pop
fdivs
pop
stc
stos
jmp
lret
add
lock
sbb
xor
fistps
mov
push
inc
push
mov
cmp
ds
xor
pop
movsl
xchg
jl
out
imul
gs
movsb
imul
pop
mov
cmc
sub
mov
inc
push
pop
xor
sti
pop
mov
in
cmp
dec
lcall
cmp
and
add
fisttps
and
pop
mov
and
in
or
nop
test
loop
repnz
stos
mov
jae
adc
xor
cmp
ljmp
pushf
push
and
pop
daa
cmpsl
inc
rcrl
sbbl
nop
push
mov
call
dec
adc
sub
stos
scas
jbe
jno
pop
fadds
fldt
xlat
in
and
negl
das
stos
cmp
sbb
jmp
add
jmp
or
adc
jae
stos
inc
pop
out
pusha
push
ret
stos
stos
mov
sbb
outsb
sbb
stos
adc
push
mov
cmp
aam
sbb
mov
add
out
stos
jo
dec
jp
xor
mov
jmp
mov
xchg
repz
jl
lret
push
push
mov
stos
mov
fnstcw
adc
sub
mov
adc
daa
sbb
lods
movsb
popa
pop
aaa
daa
pop
sti
gs
js
inc
lods
xchg
sub
loop
push
lret
imul
inc
stos
add
loop
xchg
stos
jge
sti
dec
xchg
pop
inc
lcall
repz
inc
rorl
fwait
pop
pop
stos
daa
add
stos
int3
inc
cli
fisttps
shl
js
fdivs
insl
mov
sub
lods
lahf
subb
pop
in
lahf
stos
pop
pop
cmp
push
jmp
push
pop
jmp
stos
inc
push
and
jl
jp
sub
cwtl
leave
inc
lret
stos
mov
add
je
insb
pop
imul
shrl
int3
iret
es
out
lret
lds
stos
mov
xchg
imulb
or
inc
mov
sub
stc
popf
xchg
mov
jmp
add
jne
dec
scas
pop
rep
mov
dec
or
stos
mov
add
mov
imul
outsb
insb
and
xor
nop
push
jae
push
scas
push
fs
icebp
inc
inc
stos
fsubrl
lods
in
sub
mov
ss
add
rcrb
sbb
stos
inc
jp
sub
jnp
mov
jbe
push
out
push
testl
testb
ja
jmp
daa
loop
ljmp
lods
fildll
lods
sbb
scas
into
pop
stos
inc
inc
sub
or
cmc
dec
sub
sarl
push
movsl
push
aas
jb
lcall
jmp
and
int3
push
adc
inc
enter
stos
and
xlat
les
imul
xchg
mov
xchg
jns
push
sub
stos
fs
mov
dec
insb
mov
stos
or
mov
stos
pop
testb
sub
xchg
mov
stos
fwait
dec
pop
shlb
xchg
std
and
mov
out
sahf
clc
dec
sarl
rorl
mov
cmc
iret
rorl
lock
shrb
stos
insl
inc
xchg
mov
arpl
stos
push
mov
mov
dec
and
inc
jne
stos
push
ss
push
cmp
push
stos
mov
leave
sub
stos
lds
fbld
shrb
dec
loope
lea
popf
jl
mov
stos
dec
sub
adc
push
jle
xor
jne
mov
adc
jp
hlt
stos
fcmovnb
int3
insb
mov
gs
and
xor
out
sbb
cmp
mov
mov
stos
adc
stos
orb
ret
sub
mov
push
jle
xor
or
or
stos
std
fwait
jmp
sbb
jo
pop
adc
sbb
out
outsb
scas
mov
stos
lods
push
sbb
addr16
inc
mov
mov
stos
xor
cmc
mov
jecxz
ret
stos
sti
dec
aad
add
xchg
sbb
add
mov
push
jnp
pop
test
stos
aam
pop
add
clc
nop
fsubrl
lahf
shll
imul
int3
stos
cmp
rep
jg
mov
loope
in
cltd
daa
add
cmp
lcall
mov
add
cli
lahf
fldcw
mov
scas
xchg
add
addr16
pop
lds
xor
inc
int3
shrl
loope
push
shlb
stos
testl
xor
pop
int
jle
mov
cmp
or
sbb
mov
imul
pop
enter
stos
inc
jp
in
stos
cmp
cs
xor
push
shlb
out
fwait
add
bound
rolb
shrl
pop
adc
jnp
mov
cmp
push
cmp
mov
and
clc
or
dec
jmp
xchg
data16
or
lods
pop
jmp
xchg
lods
push
test
push
scas
push
js
mov
jns
outsl
stos
pop
jne
sub
or
in
mov
lret
push
push
push
ss
push
lods
ljmp
insl
aam
stos
jnp
test
and
dec
stos
sti
pop
cmp
cmp
enter
mov
dec
dec
mov
cmp
mov
rol
xor
sub
iret
sbb
fdivrl
dec
filds
mov
cmp
mov
or
or
inc
ret
pop
std
xchg
and
in
test
popf
cmp
inc
int
test
test
add
fstps
and
cmpsl
adc
push
ret
dec
jnp
stos
out
imul
cmpsb
stos
lcall
fstl
add
sbb
lahf
push
insl
push
dec
pop
es
shrb
mov
push
sub
rcrl
mov
lahf
lods
cmpsb
lds
mov
xchg
in
adc
clc
mov
sbb
std
adc
out
popa
push
pmullw
lret
iret
in
scas
incb
scas
clc
mov
lds
dec
mov
cmpsb
and
cmp
loop
xor
dec
adc
xor
cmpsl
sub
stos
idiv
ret
clc
out
stos
cmp
repnz
jmp
shlb
jb
roll
mov
dec
or
mov
dec
imul
inc
adc
test
and
fwait
adc
mov
jmp
sub
loopne
pop
mov
cld
stos
xlat
lock
mov
das
int
lods
push
stos
lret
xchg
cmp
and
je
daa
add
mov
mov
es
fs
stos
xlat
pop
dec
adc
les
pop
or
sub
fwait
push
adc
stos
cltd
xor
rolb
aad
in
sbb
pop
jbe
adc
sbb
xchg
stos
enter
and
mov
stos
ret
jo
jle
stos
mov
jns
out
jmp
fisubs
pop
mov
repz
cmp
flds
xorl
push
fstl
mov
sub
ds
stos
inc
andl
push
repz
sub
scas
jmp
and
cmp
push
iret
xchg
mov
arpl
test
ret
xchg
sub
es
mov
pop
mov
sub
dec
cmp
imul
lods
mov
orb
cmp
imul
xchg
inc
mov
rcll
loope
and
push
mov
xchg
int
mov
pop
add
test
or
stos
mov
sub
bound
mov
and
sbb
dec
subb
sub
sub
mov
daa
mov
mov
mov
cmp
cmp
sahf
dec
in
mov
adc
sbb
bound
mov
xchg
in
push
imull
stos
sbb
cmc
cmp
fisttpl
shll
xchg
cld
fiaddl
mov
stos
test
or
jnp
adc
inc
jns
cmpsl
mov
divb
adc
sub
mov
jmp
lret
jle
push
leave
jecxz
lods
ret
jns
outsb
dec
mov
int3
stos
or
xchg
sub
xor
push
mov
ret
stos
fbstp
cmpsb
sub
mov
stos
sbb
or
enter
repnz
call
add
jge
int3
out
cwtd
pop
stc
stos
ss
mov
jnp
jnp
inc
stos
fsts
popa
stos
push
xchg
inc
fsubl
lret
sti
jmp
add
sbb
cmp
adc
dec
jmp
popa
lcall
sbb
jb
daa
jp
xor
stos
ficompl
jno
stos
int3
cmp
pusha
ds
adc
hlt
cmp
insb
pop
stos
pop
cltd
adc
pop
xchg
jb
addr16
add
daa
pushl
js
dec
sbb
scas
add
ljmp
popf
mov
gs
adc
add
cmp
inc
sub
mov
add
test
xchg
jnp
lea
iret
mov
nop
inc
rcl
sbb
adc
lods
loope
mov
inc
loop
imul
mov
addr16
push
aam
xchg
add
mov
ds
int
jo
push
fdivs
les
pusha
je
cmp
popf
or
stos
jns
jge
and
pushf
clc
or
push
mov
ljmp
aad
in
stos
dec
inc
push
and
ret
adc
mov
xor
mov
push
sub
js
mov
stos
mov
mov
dec
sub
movsb
sbb
adc
mov
stos
and
leave
sbb
movsb
pop
jecxz
les
jmp
fcom
pop
stos
xchg
pop
mov
inc
bound
dec
cmpsb
insl
mov
popa
inc
stos
xlat
cs
pop
mov
aad
push
mov
in
stos
lcall
pop
stos
lret
in
imul
movsl
ljmp
andl
test
popa
or
jo
mov
mov
jmp
pop
jnp
call
aam
push
xchg
in
scas
inc
sub
lock
pop
mov
stos
and
xor
pop
pushf
jnp
out
mov
ljmp
aam
xchg
and
stos
or
sub
push
jmp
test
mov
adc
lahf
jp
mov
bound
lods
add
push
stos
jne
fstpt
frstor
fistps
xchg
xchg
adc
xchg
stos
add
shlb
cmpsl
cld
shll
test
mov
neg
les
jl
cli
mov
cmpsl
push
push
loope
cmpb
aas
lods
sbb
in
stc
push
stos
sarl
pop
imul
scas
pop
ja
imulb
mov
scas
jle
push
fmulp
jae
mov
stos
cmp
stos
mov
cmc
ret
stos
push
insl
sbb
es
and
mov
jmp
aas
in
enter
daa
mov
int
mov
push
or
std
loope
mov
push
aas
loop
stos
mov
push
sbb
jmp
in
test
insb
jle
dec
mov
adc
xchg
jecxz
rclb
cmc
enter
pop
in
ret
mov
jae
jns
inc
xor
add
cmp
arpl
rcrb
ret
test
sub
stos
sbb
xchg
insl
daa
jno
stos
push
mov
arpl
sub
inc
aam
xchg
pop
mov
cmp
stos
mov
ret
mov
imul
fsubs
lahf
xchg
stos
jno
insl
stos
fucom
cmpsb
xor
xor
scas
stos
cmpsl
shrb
rcrl
jg
bound
popf
xor
mov
stos
mov
rclb
xor
jl
mov
and
dec
out
push
ja
sub
in
dec
in
mov
ret
sahf
dec
scas
stos
movsb
sbb
mov
cmp
daa
imul
shlb
cmp
stos
inc
rorl
or
lahf
adc
imul
aad
push
sarl
cwtl
push
mov
imul
sbb
xchg
add
es
iret
push
stos
mov
call
xor
xchg
popf
xor
sub
adc
inc
jbe
fists
into
stos
jno
lock
adc
mov
mov
icebp
popa
jmp
popf
lods
daa
int3
js
jns
and
mov
pushf
jo
ss
lcall
jl
in
add
inc
xchg
outsl
rolb
lcall
jp
imul
lea
xor
push
stos
lock
dec
lds
add
xchg
subb
pop
movsl
ds
loope
jle
mov
pop
es
mov
mov
mov
movsb
jo
in
mov
jge
push
stos
imul
sets
in
inc
mov
rolb
sahf
stos
ds
jae
jecxz
imull
add
lods
dec
mov
xchg
stos
test
lds
mov
adc
les
stos
inc
push
push
inc
add
iret
loope
inc
mov
cmp
xor
test
lret
xchg
push
xchg
ret
pop
fldenv
int
fwait
cmp
cmpsl
std
mov
in
xchg
mov
shrb
jno
stos
or
cltd
stc
mov
jecxz
dec
cmp
mov
outsb
cmp
loopne
sarb
jb
es
leave
outsl
insb
addb
add
adc
mov
xchg
int3
cmp
loope
adc
imul
out
arpl
mov
inc
ljmp
call
dec
push
in
stos
pop
pop
mov
sbb
push
ss
push
adc
data16
ficompl
xchg
or
stos
enter
frstor
sbb
add
jle
cmp
stos
lea
dec
mov
sub
nop
adc
push
outsl
pop
sub
stos
aam
faddl
jecxz
fwait
stos
mov
test
ljmp
fwait
add
test
push
imull
mov
mov
mov
add
icebp
out
xor
in
idiv
rcr
mov
or
jecxz
jno
mov
fstpl
mov
adc
mov
popf
jnp
mov
and
rcrb
xchg
sub
lea
mov
jns
stos
test
movsb
fxtract
stos
xchg
xor
leave
cmp
stos
jno
ret
mov
shr
imul
aam
imul
andl
cli
sub
pushf
jae
add
mov
rorb
ret
stos
jle
mov
cmp
sti
sub
stos
testl
test
push
movsb
stos
fwait
mov
ljmp
jmp
pop
push
daa
shll
dec
push
mov
xchg
xchg
hlt
test
xchg
insl
clc
stos
or
fistpl
sub
pop
dec
pop
stos
test
xchg
out
mov
cmp
mov
pop
stos
lods
imulb
push
mov
aad
or
or
arpl
into
mov
subb
cld
nop
lret
sbb
repnz
inc
fcompl
pop
jmp
mov
sbb
mov
enter
mov
sbb
sbb
hlt
cmp
xchg
adc
arpl
stos
pop
leave
inc
mov
ljmp
sub
test
in
scas
mov
jl
pop
stos
jne
jp
lds
xchg
mov
add
aas
inc
cmp
add
in
arpl
rcrb
ret
mov
cmc
and
mov
stos
out
cmp
jno
fs
adc
add
mov
ftst
push
jne
pop
mov
add
subb
stos
mov
cmp
adc
sahf
push
das
cld
ss
shr
xchg
mov
mov
icebp
jb
shrb
scas
or
jo
push
sub
ret
xchg
imull
cmp
cmp
adcl
stos
out
lds
testb
stos
lret
sub
insl
outsl
push
stos
fs
and
test
cmpsl
loopne
fcomi
jmp
mov
mov
daa
popf
ror
sub
or
or
xchg
sub
call
mov
dec
cltd
clc
push
cltd
test
stos
jnp
add
adc
stos
pop
aad
push
fcoml
jne
imul
mov
stos
adc
push
iret
mov
add
stos
js
mov
stos
push
scas
push
in
repz
test
stos
jg
mov
cmp
lea
outsl
in
dec
scas
iret
aam
imulb
mov
dec
mov
xchg
xchg
subb
add
mov
and
pop
jl
fildll
cwtl
lahf
stos
mov
cmpsb
mov
inc
lcall
mov
aas
scas
ret
mov
popa
imul
adc
mov
pop
stos
sbb
sbb
stos
xor
xor
dec
popf
xor
mov
iret
adc
sub
and
cmp
jmp
shrl
sbb
iret
ja
jnp
mov
and
adc
pop
jno
aas
lahf
popa
insl
dec
sar
addr16
enter
xchg
stos
idivb
das
in
fldcw
sti
xchg
mov
stos
popf
and
inc
or
arpl
xchg
push
mov
xor
in
mov
mov
xchg
rolb
jle
adc
stos
sub
pop
pop
jbe
mov
cs
rcll
cld
aam
cltd
stos
mov
std
jae
mov
ljmp
mov
popf
or
mov
mov
or
lods
add
mov
leave
stos
addr16
or
jge
iret
xor
ret
cmc
add
out
stos
sar
imul
lahf
stos
sub
xchg
push
jo
stos
hlt
stc
cmp
stos
test
inc
sbbb
dec
push
mov
sbb
mov
and
imul
sbb
mov
jnp
and
jge
jmp
repz
aas
push
sub
pusha
arpl
xchg
es
outsl
adc
iret
cmp
pop
push
pop
adc
jb
inc
sahf
stos
xlat
or
jae
stos
sub
cmp
lret
daa
dec
stos
push
jbe
enter
out
mov
popf
dec
fnstcw
push
sub
decl
iret
popa
adc
cmp
adc
mov
add
cmp
inc
push
gs
dec
insl
mov
mov
or
rcl
cmp
mov
adc
fimull
andl
push
aam
mov
jne
stos
sbb
test
or
popfw
push
lret
fcomi
sbb
aam
pand
lods
mov
and
jecxz
xchg
aam
in
inc
stos
sbbl
sbb
pushf
mov
out
bound
adc
pop
xchg
mov
es
add
insl
test
scas
dec
bound
lock
push
inc
add
pusha
sbb
adc
outsb
stos
je
push
push
sub
outsl
stos
xchg
mov
xchg
loopne
jb
bound
stos
ret
pop
out
jo
rolb
das
xlat
dec
add
mov
pop
and
imul
into
fldl
stos
lods
mov
jo
or
inc
and
repnz
ror
mov
xchg
out
iret
iret
stos
in
das
sbb
sbbl
loopne
sub
xor
mov
test
stos
mov
stos
popa
mov
adcb
cmp
inc
fwait
repz
movsb
jge
adc
jecxz
mov
jno
or
mov
aad
sub
push
imul
jg
adc
je
sbb
push
dec
pop
fsubr
xchg
lds
ss
fadd
stos
dec
mov
xor
pop
into
dec
orl
mov
mov
pop
addb
xchg
popf
xchg
inc
dec
or
fxch
jne
push
ret
in
xchg
in
inc
mov
pusha
sub
stos
mov
adc
cmc
ljmp
adc
aam
ret
cmpsl
jmp
dec
mov
xor
aaa
cwtl
mov
jp
stc
fwait
xchg
push
stos
sbb
sub
imul
stos
mov
fdivl
stos
je
sar
hlt
push
repz
stos
scas
das
dec
popa
ja
clc
lahf
stos
mov
roll
dec
int
imul
scas
add
fwait
push
subl
cmpsb
hlt
sub
psubusb
insb
stos
jecxz
ss
xorl
cld
sub
cmp
mov
iret
pop
movsl
inc
inc
mov
jmp
push
mov
mov
sub
enter
mov
stos
fsubp
mov
xchg
test
fwait
xchg
es
xor
test
adc
jge
mov
mov
sahf
mov
jecxz
pop
mov
sub
mov
pop
dec
adc
sub
pop
sub
stos
dec
dec
mov
leave
pop
sbbl
mov
inc
loope
sub
push
dec
mov
in
sbb
xchg
push
jecxz
int
hlt
mov
mov
cmp
mov
jnp
outsb
mov
stos
cmp
scas
lcall
repnz
xchg
mov
stos
bound
or
push
mov
inc
shrl
movsb
inc
jo
mov
push
sbb
jns
andb
mov
insl
cli
stos
rorl
push
cmp
lahf
repnz
stos
roll
jmp
movsb
popa
mov
push
stos
cmc
push
mov
lret
adc
pushl
sahf
dec
stos
lahf
cli
inc
mov
jecxz
test
add
test
xchg
cwtl
inc
sub
inc
fdivrl
jl
stos
in
adc
jge
lret
stos
inc
inc
aad
scas
xchg
cli
popa
stos
cwtl
leave
mov
mov
ds
dec
pop
xchg
mov
inc
loope
and
adc
xor
icebp
inc
test
dec
push
xchg
push
sub
jae
into
fwait
lret
stos
push
movsb
and
inc
lods
outsl
std
outsb
daa
mov
xchg
es
repz
cld
xchg
push
movsl
pop
mov
icebp
in
xchg
test
lret
fwait
xor
stos
xchg
inc
pop
adc
mov
ljmp
stos
mov
inc
or
daa
push
rolb
mov
test
xor
stos
sbb
sbb
xchg
mov
cld
repz
insl
into
call
adc
or
mov
push
adc
stos
lret
pop
mov
incl
lret
sub
mov
inc
loopne
jecxz
xchg
jle
stos
ret
scas
lds
stos
sub
test
lea
jge,pn
jmp
fwait
insb
lods
jnp
push
scas
xchg
dec
sbb
movsl
or
rcrb
cmp
fmull
jg
sub
inc
cs
jecxz
fsubl
das
or
mov
jmp
mov
imul
add
stos
popl
jmp
jmp
icebp
adc
mov
sbbb
jno
int3
in
lahf
push
add
mov
out
sarl
lods
and
sarb
dec
imul
stos
ret
aad
les
dec
and
push
in
jmp
adc
xchg
xor
mov
je
mov
pusha
loop
sbb
and
push
test
mov
aaa
fs
fadd
pusha
adc
std
lcall
cs
cmp
cltd
push
stos
mov
shlb
scas
push
push
dec
stos
jp
inc
dec
imul
pop
mov
and
pop
dec
out
jae
mov
test
xchg
fldcw
scas
mov
leave
adc
pop
fs
pop
fwait
mov
and
xor
aas
les
rcrl
cmp
stos
adc
loop
mov
push
adc
add
xchg
out
fadd
daa
jmp
mov
int3
stos
jg
lret
sub
stos
fdivrs
dec
dec
lcall
cmp
pop
imul
cmc
dec
push
popf
adc
stos
ljmp
push
stos
adc
lods
mov
stos
push
pop
dec
les
sub
scas
mov
inc
sub
add
stc
cmp
bsr
push
pop
jmp
xchg
mov
subl
mov
mov
jbe
add
cmp
or
xchg
dec
rol
mov
inc
mov
jmp
inc
push
lds
xor
or
or
or
stos
push
sbbb
or
push
mov
aam
push
aad
and
stos
push
push
mov
lahf
sub
stos
imul
movsb
lods
mov
xchg
clc
pop
adc
mov
fs
push
shl
fld
repnz
stos
lcall
sti
mov
out
fcom
pop
inc
push
jmp
xor
sbb
push
lcall
cmpsb
mov
pop
push
jnp
mov
mov
mov
inc
mov
sbb
jae
fmul
mov
mov
mov
pushf
push
in
stos
loope
pop
outsb
xchg
sbb
lods
jns
jb
adc
mov
stos
lret
mov
ljmp
stos
push
ret
loopne
pop
mov
cmpsl
lods
add
jge
leave
aam
jg
ljmp
add
mov
mov
dec
pop
es
xchg
mov
movsl
das
int3
mov
lret
xchg
pop
pop
or
push
inc
addr16
cmp
lcall
xor
push
test
mov
and
daa
stos
aas
mov
xchg
inc
ds
push
mov
push
outsb
dec
popf
xor
lret
sub
call
stos
popa
inc
mov
jle
lahf
xchg
mov
int
stos
dec
adc
adc
enter
mov
imul
bound
pop
das
jmp
pop
lret
cmp
and
stos
push
sarb
push
cmpsl
add
sahf
xchg
ret
pop
push
pop
push
xchg
addr16
shl
mov
addr16
std
push
aaa
or
mov
push
lock
les
cld
aam
jmp
nop
das
std
mov
scas
stos
or
mov
pop
jbe
add
or
pushf
lods
fisubl
mov
jmp
sub
pusha
xchg
fidivrs
sub
loope
mov
scas
stos
mov
sub
cmp
imul
push
js
dec
sbb
iret
cmpsb
inc
adc
or
in
cmp
sub
lcall
bound
stos
fistpll
mov
daa
jl
pushf
dec
sbb
add
adc
pop
jmp
or
xchg
adc
jo
mov
mov
aas
inc
loopne
push
cmp
mov
sbb
xchg
mov
std
hlt
es
loope
inc
stos
jg
mov
or
push
aas
mov
stos
jmp
jb
mov
fidivl
aaa
jle
andb
adc
jge
mov
dec
jne
inc
and
and
push
stos
xchg
mov
adc
stos
stos
inc
push
clc
xlat
fistpll
xorb
bound
loopne
push
mov
pop
popf
xchg
mov
mov
shr
mov
mov
lds
mov
mov
outsl
inc
push
or
mov
shlb
mov
imul
mov
jb
icebp
or
sub
adc
cld
adc
insl
fsubs
xlat
ret
ds
xchg
mov
sub
out
cltd
lods
hlt
stos
mov
inc
mov
stos
lods
jns
xchg
imul
xchg
or
hlt
sub
movsl
stos
push
pop
dec
mov
daa
pusha
roll
cmp
mov
dec
jb
out
mov
sub
stos
lods
mov
mov
stos
or
out
lock
adc
fsts
stos
mov
inc
arpl
lock
adc
movsb
cmp
pop
repz
cwtl
fwait
fwait
pop
pop
adc
push
popl
xor
inc
cltd
fmuls
cmp
rcrb
out
insl
or
loope
xlat
mov
and
sbb
stos
ret
rorb
packsswb
icebp
int
out
mov
subl
stos
xor
inc
mov
addr16
jnp
mov
and
imul
subl
mov
push
jg
ficomps
je
and
fadds
mov
imul
or
ret
push
sub
dec
pop
push
push
cmp
jg
dec
add
fstpt
test
subb
addr16
out
mov
mov
push
stos
lcall
sub
and
stos
xor
out
dec
and
adc
mov
push
aam
sbb
xchg
mov
inc
mov
cmc
jne
mov
add
stos
fadd
push
jo
cltd
mov
mov
mov
pop
std
push
repz
sbbl
xchg
pop
adc
fmul
xor
stos
pushf
nop
cwtl
push
fcom
negb
and
and
and
lods
cmp
scas
push
mov
imul
stos
pop
fmuls
mov
loop
adc
mov
stos
xor
cmp
ror
orb
inc
push
mov
sub
leave
test
jae
push
mov
adc
nop
in
iret
out
gs
cmp
lods
mov
movsl
int
dec
fwait
xor
movsb
pop
cs
mov
mov
and
jo
stos
fwait
pop
movsl
mov
adc
inc
es
idivb
fnstcw
enter
out
cltd
popa
mov
loopne
dec
xchg
in
negl
xlat
cmpl
movsb
sub
loopne
push
or
fldt
fcoml
lea
stos
push
popa
jb
pop
out
aaa
test
add
and
mov
cmpsl
stos
jnp
sti
xor
scas
int
adc
mov
fisubs
dec
cmp
insl
push
jp
setg
out
jle
cmp
lock
fnstenv
mov
ja
orl
iret
popa
pop
int3
push
stos
cmpsb
sbb
jnp
lods
leave
mov
scas
lcall
sub
stos
mov
inc
je
and
xor
or
sub
int3
xchg
ds
mov
shrl
push
mov
xor
movsl
test
outsl
stos
mov
add
lahf
cli
fcmovnb
stc
cltd
and
cmp
and
jecxz
stos
icebp
dec
cmp
xchg
cmpsb
pop
stos
xor
cmp
jnp
add
xchg
or
stos
dec
push
mov
out
xor
lret
stos
fnstsw
in
inc
push
sbb
dec
inc
fcomp
lods
imul
push
test
mov
repz
mov
mov
cmp
lods
jbe
ljmp
insl
int3
dec
stos
mov
cli
lahf
cmpl
fs
bound
mov
icebp
pop
jmp
pop
addr16
jg
inc
nop
ljmp
lock
inc
cs
push
mov
xchg
jmp
scas
sarb
jnp
xor
nop
movsl
pushf
jmp
mov
add
adc
push
cld
stos
push
or
xlat
push
xchg
daa
shll
xor
stc
inc
mov
test
sti
and
shr
roll
or
in
clc
pop
lret
add
ja
stos
shr
movsb
das
jno
pop
iret
daa
pop
push
nop
shlb
jo
mov
movsl
mov
xor
xchg
in
sbb
jmp
pop
dec
mov
sbb
stos
mov
mov
imul
orl
pop
xchg
sbb
pop
rcrb
mov
fwait
or
sub
sahf
mov
int3
scas
xchg
lods
stos
sub
outsb
jae
mov
lock
aad
movaps
out
inc
mov
and
xor
stos
pop
jl
repz
mov
mov
mov
fiaddl
push
jb
aad
scas
stos
ljmp
je
or
data16
xchg
stos
hlt
test
pusha
imul
int3
xchg
bound
xchg
xchg
push
fwait
icebp
jmp
jae
add
leave
scas
xchg
lcall
sub
arpl
stos
jne
adc
pop
stos
cli
add
andb
push
cmp
push
sub
inc
xlat
es
out
xor
in
push
and
sbb
ja
jmp
sub
push
mov
scas
in
sbb
jmp
push
mov
add
imul
popa
cmpsb
dec
es
movsl
jecxz
sbb
and
jg
mov
repnz
mov
pusha
daa
in
and
stos
adc
lods
stos
fdivp
mov
icebp
add
fsubrl
loop
std
idivb
test
adc
jb
addr16
jmp
xchg
rorl
gs
mov
xchg
shrb
xor
add
fwait
stos
dec
xchg
hlt
jmp
push
inc
or
popa
lods
mov
cmp
addb
sbb
sahf
stos
jmp
cmp
cltd
jmp
out
pop
fs
xchg
scas
cli
xchg
mov
mov
pop
stos
sbb
pop
mov
stos
les
aas
imul
sbb
xchg
push
mov
lahf
cs
inc
or
sbb
dec
int3
lahf
stos
add
inc
or
aaa
scas
adc
mov
jmp
and
jle
gs
test
xchg
pop
mov
sub
push
inc
dec
cmp
mov
jae
in
jmp
xchg
fldt
cmpsb
stos
roll
pusha
sbb
sbb
ret
or
subb
or
cmp
pop
jmp
xchg
xchg
xor
jbe
dec
fadds
or
or
push
nop
imul
mov
xchg
adc
xorl
lret
adc
pop
inc
test
in
stos
sbb
clc
aam
mov
dec
out
inc
mov
into
int3
add
test
pop
lea
das
sar
pushf
stos
mov
pop
push
lret
fisttpl
aas
mov
pop
ds
mov
lds
stos
addr16
rorl
adc
rclb
cmp
test
stos
ja
mov
sbb
mov
popa
mov
mov
testl
xchg
jp
mov
pop
sub
dec
cwtl
xchg
stc
popf
lret
loope
mov
push
xchg
adc
stos
movsb
add
fidivrl
xchg
xor
pop
daa
aas
xchg
bound
cmp
cmp
mov
mov
mov
sbb
cmp
and
sub
stos
iret
addl
adc
mov
mov
fneni(8087
lahf
or
stos
movsl
dec
out
mov
add
push
stos
leave
stos
jbe
in
sbb
stos
pushf
lahf
cmp
arpl
fisttps
test
sub
xor
mov
jge
stos
push
xchg
xchg
leave
jecxz
jns
daa
lret
faddl
jmp
stos
jnp
pop
and
fidivl
mov
repnz
std
mov
pop
shll
pop
lret
subl
xlat
sti
jg
mov
xchg
out
cs
inc
stos
push
dec
mov
stos
jnp
jns
sti
ret
stos
xchg
and
stos
imul
mov
jnp
cmp
loope
push
stos
das
sub
mov
pop
jo
cmpsb
lahf
mov
mov
stos
das
not
lds
ds
push
mov
sbbl
fwait
mov
test
push
pop
sbb
cmp
stos
fwait
add
popf
xor
sub
cmpsl
fs
xchg
repz
stos
insl
icebp
loop
jmp
fmull
mov
aam
add
loop
mov
cmp
pop
push
jbe
stos
mov
push
ret
int
stos
aad
sub
stos
push
dec
dec
iret
pop
mov
imul
fwait
insl
adcl
loopne
mov
xchg
pushw
cmp
push
mov
sub
jp
ficompl
jl
xlat
ljmp
ret
push
loope
xor
sbbb
std
imul
out
xchg
jmp
mov
xchg
inc
popf
stos
cmp
fisttpl
push
out
adc
push
test
inc
stos
xchg
pop
pop
stc
xchg
cwtl
push
or
inc
jno
mov
ds
test
cltd
lods
int3
pop
scas
push
stos
mov
push
dec
dec
jg
adc
xchg
pop
mov
fidivl
ja
add
adc
push
mov
pop
cmpsb
xor
mov
jb
sub
mov
sbb
jmp
cmp
subb
mov
sar
daa
push
nop
pop
iret
gs
jl
push
xchg
fsubrl
mov
mov
repnz
xorps
inc
mov
stos
push
adc
mov
inc
leave
stos
fldcw
fdivl
stos
pop
movsb
iret
cltd
cmp
jns
push
adc
lds
repz
daa
filds
push
sub
in
stos
adc
push
scas
sub
stos
in
pop
xchg
gs
cmp
mov
xor
mov
stos
test
orl
int3
adcb
movl
into
in
push
bound
sub
xchg
cltd
inc
mov
stos
fdivl
push
pop
sbb
in
pop
or
stos
adc
rorb
add
push
stos
mov
enter
stos
add
xor
inc
dec
inc
stos
and
inc
pop
cmp
pop
xor
sub
mov
mov
and
cmpsl
pop
xchg
mov
push
push
stos
xchg
outsl
push
sub
imul
xchg
out
sahf
or
lcall
rcr
jae
lcall
aas
mov
lods
shlb
or
mov
stos
and
mov
push
jno
xchg
orl
pusha
and
jo
xor
xchg
sub
mov
xchg
push
mov
imul
in
push
stos
data16
int
pop
pop
adc
xchg
in
or
outsb
mov
jb
into
xchg
fs
stos
ja,pn
pop
stos
push
push
call
jb
add
out
mov
mov
fwait
stos
scas
xchg
stos
adc
mov
daa
sub
adc
mov
cmp
dec
addr16
mov
pop
dec
dec
sub
icebp
cmp
shrb
fsubs
decl
cli
popf
shll
xor
insb
insl
mov
inc
lock
sahf
sbb
add
fs
lcall
daa
adc
inc
daa
add
in
inc
repz
stos
imul
les
jnp
aaa
mov
popf
mov
cmpsb
mov
push
out
cmp
dec
stos
imul
int3
movsl
pop
sub
mov
sahf
bts
lods
stos
insl
jmp
repnz
addr16
pop
mov
cmp
jmp
sbb
jbe
lea
fwait
inc
es
or
sbb
fwait
aaa
js
jmp
xchg
add
leave
data16
sahf
jmp
int3
test
jns
fsts
cmpsl
in
jb
mov
push
stos
xor
dec
pushf
scas
stos
int3
xchg
into
sbb
sub
stos
loop
jno
imul
fld
jecxz
jle
stos
popf
neg
shl
dec
mov
push
mov
pop
mov
xor
stos
bound
cltd
mov
lret
mov
mov
or
xor
jns
stos
mov
jno
fsubrl
pusha
test
lods
daa
mov
jle
movsb
shrl
cmp
xor
push
in
fiaddl
rcr
cmpxchg
sub
pushf
loope
or
jmp
fcmovu
push
fwait
cli
lcall
subb
mov
pop
pusha
in
dec
stos
mov
push
xchg
in
cmp
mov
pop
lods
jg
push
mov
or
cld
and
xor
clc
int
stos
stos
ret
fs
stos
mov
lea
sbb
push
sub
mov
sub
sbb
loop
xchg
mov
push
stos
mov
fwait
adc
push
fistpll
in
pop
mov
loope
stos
push
clc
mov
stos
test
adc
in
sub
pop
fnstenv
lea
lcall
jmp
xor
cs
mov
shrl
pop
mov
rcrb
stos
inc
mov
pop
test
mov
jge
addr16
xor
fwait
negb
xor
movsb
cmpsl
and
xor
fcmovnb
stos
lcall
mov
and
sbb
ss
pop
inc
or
cmp
cmpsl
popa
or
xchg
jg
popf
xorb
mov
mov
test
mov
outsl
lods
iret
pop
stos
fimuls
scas
shrl
adc
imul
xchg
arpl
ffree
mov
mov
mov
mov
daa
int
jne
cli
lea
sbb
test
pushw
stos
pop
mov
jmp
mov
mov
stos
push
cs
fwait
jecxz
mov
adc
daa
adc
pop
daa
ja
cli
jne
popa
je
clc
pop
adc
lret
jo
fidivrs
jb
jmp
xchg
in
jmp
sub
lods
dec
dec
fwait
mov
ficompl
sbb
cmp
xchg
cld
push
push
enter
jbe
std
clc
adc
xchg
imul
jl
mov
or
push
stos
lods
jmp
fldl
mov
dec
inc
pop
sbbl
pushf
pop
xchg
daa
lret
imul
xor
push
add
jmp
mov
fimuls
inc
push
sub
out
dec
mov
es
push
das
or
rcrb
fisttpl
test
stos
mov
mov
std
sub
loop
sub
push
stos
ja
fadds
stos
adc
add
add
inc
mov
add
pop
fwait
outsl
pop
and
stos
sbb
inc
fistpl
stos
and
add
or
mov
lret
push
stos
ror
lods
cmpsb
jnp
test
dec
loop
mov
push
push
stos
fcomip
cwtl
dec
cmp
mov
pop
mov
loop
and
lock
fcmove
mov
shrl
lods
mov
adc
sti
fidivs
push
orl
popa
push
enter
iret
dec
stos
mov
mov
sbbb
or
mov
out
es
pop
gs
pop
daa
cmp
out
stos
jp
push
mov
or
outsb
fistpl
xchg
sbb
xchg
popf
inc
mov
jmp
mov
push
sub
mov
js
stos
out
mov
daa
mov
sub
stos
adcb
push
in
push
lods
test
add
rcrb
or
mov
xor
movsb
out
cmc
sbb
sub
repz
or
stos
lcall
dec
dec
call
cs
paddusb
mov
addr16
shl
stos
loopne
bound
mov
lahf
sub
pusha
filds
movsl
xor
inc
inc
es
xchg
pusha
stos
lcall
subl
outsl
lret
cmp
pop
negb
popf
jp
dec
sub
mov
repz
das
sub
pushf
test
stos
int
pop
dec
mov
or
ret
xchg
nop
dec
stos
add
and
sahf
mov
mov
stos
xlat
dec
mov
pop
outsl
sbb
stos
lock
sbb
inc
scas
push
push
clc
stos
es
fisttpl
xchg
in
pop
mov
push
insl
int
fistpll
stos
mov
jecxz
push
dec
pop
stos
and
mov
sub
mov
scas
mov
sbb
popa
mov
and
and
adc
into
mov
cmp
jl
lret
xchg
stos
stos
sbb
pop
adcb
xor
mov
mov
es
stos
mov
gs
pusha
mov
aas
push
addr16
inc
stc
mov
dec
loope
cmp
rcl
lahf
insl
push
stos
out
lds
andl
popf
sub
xchg
push
in
int
stos
and
cmp
stos
inc
sbb
cmp
mov
lods
jno
fildll
xchg
rcll
call
push
ss
mov
push
dec
stos
mov
xchg
xchg
repnz
nop
cmp
rolb
mov
mov
jp
stos
push
pop
in
fsubl
sub
cs
rcrb
call
push
stos
jno
movsl
xchg
push
icebp
or
test
ffree
jge
loope
addr16
and
jg
xchg
stos
mov
mov
lret
add
fwait
dec
arpl
jmp
scas
js
cmp
fcomip
stos
ror
leave
lock
xchg
adc
stos
out
test
push
stos
in
shlb
stos
incb
bound
or
stos
adc
jg
push
inc
and
stos
icebp
pop
push
loopne
mov
out
add
push
adc
mulb
cmp
push
mull
jb
icebp
scas
jbe
dec
dec
pusha
stos
adc
mov
or
mov
stos
je
or
cmp
stos
mov
add
or
mov
xchg
stos
push
cwtl
cltd
scas
xor
ret
rol
sub
ficompl
pop
stos
mov
or
cmp
sbb
sub
mov
or
inc
mov
fbstp
mov
sbb
mov
popf
rolb
mov
jp
sbb
movsl
push
stos
mov
mov
les
xor
xlat
stos
dec
bound
dec
imul
sbb
test
and
pop
leave
aad
sub
stos
mov
push
cmpb
xchg
ret
lea
stos
xor
mov
dec
stos
mov
test
in
mov
adc
pop
stos
cmp
rcll
sub
push
pop
pop
int3
mov
dec
push
push
fcmove
ret
icebp
aas
ficoms
jo
fstps
hlt
mov
jae
mov
mov
and
jne
lds
hlt
push
push
or
lret
loopne
clc
dec
push
stos
pop
inc
mov
subl
stos
sub
scas
mov
inc
shlb
push
push
orl
repz
pop
mov
test
pushf
movsb
iret
std
mov
js
push
rol
mov
push
fs
sub
cmpsb
popf
leave
arpl
adc
mov
insl
push
inc
push
sbb
jns
arpl
lods
mov
rcrb
in
sbb
or
call
jb
notb
in
stos
dec
xchg
stos
mov
imul
xchg
inc
pusha
cmpsb
or
mov
pop
push
jnp
imul
rorl
adc
mov
jge
stos
or
dec
adc
sub
mov
ret
ljmp
jae
cli
jmp
or
stos
imul
mov
sbb
paddsb
jg
cmc
stos
sub
jmp
pop
xor
andb
cmp
mov
mov
cmp
repz
std
adc
cld
inc
push
inc
cmpsb
and
aaa
fnstcw
xchg
sbb
dec
pushf
aas
loope
cmpsl
lcall
dec
clc
push
ficompl
push
ljmp
loop
xchg
pop
inc
stos
push
sbb
push
push
ss
fcoms
lods
pop
xchg
lret
daa
inc
repz
xorl
data16
stos
jg
sub
push
rolb
sbb
ds
mov
int
sbb
and
repnz
in
add
xchg
orb
fcmovnb
stos
mov
fisttpll
jge
loope
jecxz
es
xlat
stos
sbb
insb
pop
add
inc
mov
push
push
stos
int
sbb
popa
sbb
jae
imul
push
fnstsw
sbb
test
or
hlt
addr16
adc
mov
sbb
daa
aam
adc
xor
stos
addr16
mov
or
xor
mov
mov
jl
pop
ret
negl
inc
jno
outsl
lock
dec
sub
cltd
lods
mov
xor
add
scas
xor
xchg
cmp
sbb
or
mov
push
stos
sbb
cmp
mov
xchg
and
pusha
jno
lret
stos
out
fwait
mov
pop
or
stos
aam
outsl
into
push
dec
test
stos
mov
daa
daa
add
movsl
jge
pop
add
lret
dec
adc
arpl
add
imul
scas
popl
ss
movsl
rep
fstpt
push
dec
stos
cmp
dec
push
imul
testl
stos
and
fnstenv
xchg
stos
out
je
inc
in
mov
mov
cmp
or
mov
arpl
cld
int
mov
insl
jle
ror
jmp
in
mov
xchg
xor
and
inc
lods
bound
lea
mov
data16
dec
sarb
fdivrl
xor
jecxz
and
clc
push
mov
int
aam
sahf
hlt
imul
lods
fistl
inc
mov
loope
or
mov
lds
mov
dec
mov
addr16
xchg
mov
inc
pop
mov
xchg
or
pop
and
outsl
aam
jmp
lret
add
jecxz
imul
jns
push
jge
aaa
mov
stos
adc
xorl
mov
fisttpl
xor
addr16
lods
mov
cli
xlat
leave
sub
sbb
xchg
mov
stc
inc
stos
lds
dec
stos
imul
xchg
sbb
and
orl
icebp
mov
pop
adc
mov
fsubrs
mov
xor
ds
xlat
push
stos
and
adc
stos
xor
out
rolb
mov
out
iret
insl
stos
jmp
dec
jmp
outsb
sbb
mov
push
stos
mov
push
push
cmp
add
inc
clc
sti
outsb
dec
cli
stos
jp
cwtl
aaa
xchg
pop
aas
fsubrl
ljmp
stos
or
loopne
mov
mov
or
stos
adc
out
jo
out
mov
mov
pushf
enter
jecxz
popa
or
ds
in
into
fnstsw
popf
je
daa
stos
fisubrl
xchg
std
sub
adc
addr16
or
mov
das
jmp
es
push
movsl
and
cmpsb
bound
jmp
in
xchg
icebp
jmp
mov
fildll
or
gs
dec
xchg
push
aad
adc
addr16
in
inc
fwait
aas
aaa
inc
shl
cli
push
push
jg
stos
ljmp
in
imul
cs
mov
pop
stos
mov
cmp
ret
jmp
aaa
mov
sub
outsb
cmp
stos
jge
jno
adc
sbb
or
push
xor
xor
ljmp
pop
fisttpl
insl
push
xor
sbb
add
jecxz
in
daa
add
loope
mov
push
stos
gs
adc
sbb
imul
scas
call
or
jge
push
inc
push
cmpsb
dec
or
mov
jmp
loopne
insb
shr
xchg
and
xchg
sub
repnz
xor
push
push
mov
fs
fisttpl
adc
sub
push
xchg
add
idiv
dec
into
stos
xor
cmp
jg
adc
push
inc
pop
cmpsb
fildll
mov
jne
aam
push
stos
dec
in
daa
bswap
inc
addr16
mov
stos
test
leave
mov
xor
adc
push
imul
test
out
pop
dec
adc
scas
outsb
imul
stos
insb
loope
xchg
cli
ds
cmpsl
in
adc
mov
loop
jl
pop
mov
daa
lods
inc
xchg
fildll
movsb
sarl
jg
stos
xlat
adc
pop
in
sub
imul
fbld
cmpsl
ja
fwait
stos
adc
daa
mov
mov
inc
mov
dec
dec
stos
iret
push
push
daa
subl
mov
mov
and
add
dec
mov
pushf
fisubrl
sahf
stos
out
mov
dec
in
inc
lods
fwait
push
int
fwait
test
stos
cltd
xchg
aas
stos
mov
push
sbb
rol
arpl
mov
mov
sahf
or
cmp
test
add
dec
icebp
xchg
pop
add
stc
sub
mov
test
jo
imul
mov
cltd
inc
mov
inc
mov
icebp
mov
adc
jg
sbb
and
inc
xchg
add
cmc
adc
stos
inc
pop
mov
push
cmp
jnp
fiaddl
mov
movsl
fstl
push
popa
mov
jmp
mov
sub
mov
xor
or
sbb
xchg
js
fstpt
jb
stos
and
mov
stos
pusha
sbb
stos
out
xchg
arpl
scas
jecxz
lret
in
popa
push
lods
outsl
addr16
rorl
xchg
dec
push
icebp
outsb
stos
shlb
push
sub
addb
hlt
pop
sub
mov
push
outsl
mov
push
cld
stos
int
xchg
fs
mov
movsb
push
rolb
into
in
sar
stos
sbb
std
fbld
in
sbb
xchg
jmp
fwait
stos
int
repnz
in
stos
cmp
pusha
or
dec
or
into
scas
mov
xchg
insl
sti
mov
shlb
sub
push
shrl
fwait
out
cmp
scas
or
mov
cld
daa
fcos
out
mov
in
clts
xlat
jmp
push
mov
std
movsb
stc
pop
dec
mov
sbb
mov
cmp
mov
and
xchg
repz
xchg
and
cmpsb
stos
shll
xchg
aad
lock
je
int
repz
sti
stos
pop
into
xchg
and
push
in
push
stos
andb
cltd
pop
fldenv
fstpl
fsub
stos
mov
outsb
inc
lods
stos
ljmp
fisubl
cmc
pop
jl
shrb
adc
mov
in
lods
enter
or
cwtl
add
mov
push
pop
movsl
mov
inc
mov
leave
or
fisubrl
jo
stos
dec
inc
lods
aaa
xor
andl
add
sarb
ss
das
stos
call
in
test
fwait
sub
jb
push
stos
dec
xchg
lahf
aas
outsl
stos
pop
lret
or
mov
inc
fs
fisubs
mov
stos
data16
jne
mov
xchg
daa
mov
and
fs
lea
shl
pop
je
aam
inc
ds
sbb
push
sub
mov
dec
fwait
mov
push
mov
arpl
and
cmc
stos
repz
pop
xor
inc
movsb
cmpsb
adc
stos
aaa
lods
mov
dec
imul
ficoms
cld
or
pusha
fisubrl
lret
dec
and
push
popf
sub
stos
std
lahf
fcomps
loopne
in
xor
in
pop
lods
mov
inc
or
aad
jmp
stos
fldenv
adc
fimull
sub
or
jno
lods
mov
loopne
push
stos
xchg
lea
pop
adc
jecxz
cmp
sbb
stos
or
cmp
sub
cmp
mov
xchg
lea
inc
or
jbe
dec
cmp
jne
bound
stos
jmp
in
inc
shlb
sti
or
rcr
mov
sbb
jbe
repnz
popa
mov
cmp
clc
xchg
insl
xor
lock
dec
sub
jnp
shll
xor
icebp
clc
int
gs
or
mov
xchg
ljmp
xchg
gs
cmp
stos
popf
cli
push
fs
imul
mov
stos
mov
cmp
mov
push
xor
adc
test
jp,pt
insb
inc
fwait
enter
push
mov
inc
lock
push
mov
test
xor
pop
out
fwait
cs
ret
xchg
rcl
inc
xchg
fdivr
xchg
and
mov
outsb
lds
sbb
dec
stos
or
mov
sahf
js
or
jb
xchg
or
mov
stos
push
or
add
cmpl
mov
test
addr16
mov
push
pop
mov
mov
mov
sahf
jg
insb
add
push
int3
xorb
add
push
pop
xchg
je
into
icebp
stos
lea
fisubrs
andl
imul
mov
stos
or
sub
imul
aam
cltd
mov
inc
xchg
mov
inc
ss
pop
insb
movsb
in
leave
fwait
push
push
stos
mov
mov
mov
shufps
in
int
into
leave
adc
stc
mov
pop
in
and
aam
lods
sub
stos
cltd
xor
stos
test
cld
xlat
dec
sti
stos
je
out
int3
dec
js
xchg
stos
push
mov
push
stc
stos
out
in
jmp
mov
fs
jbe
fisubrs
lret
jae
jle
lret
sub
fwait
dec
rorl
jbe
out
ljmp
es
bts
mov
mov
hlt
and
outsb
sub
dec
test
xchg
xor
or
int
pop
sti
jns
cmp
je
stos
mov
shrl
xchg
add
daa
push
mov
je
in
stos
jge
lds
pop
pop
add
cs
inc
roll
xor
mov
mov
push
scas
mov
sbb
loopne
inc
stos
aas
std
sub
cmc
popa
push
stos
call
adc
sub
es
xor
xchg
mov
pop
insl
lods
cmpb
inc
aaa
cltd
sbbl
jae
ds
bound
enter
data16
repz
sbb
movsb
lds
sbb
push
ljmp
or
stos
repz
std
push
mov
in
lahf
stos
pop
push
ffree
mov
stos
rolb
test
in
adc
mov
aad
push
in
mov
xchg
push
stos
mov
cld
add
das
int3
stos
xchg
test
cltd
xchg
fnsave
pop
push
add
in
adc
stos
shlb
xchg
cltd
sbbl
dec
or
cmp
jmp
loop
mov
cltd
in
enter
jno
ret
les
inc
dec
xor
aam
stos
fwait
fs
nop
sub
mov
xchg
data16
mov
popa
fwait
test
out
ljmp
in
xchg
aam
addb
add
xchg
or
jb
popa
mov
jne
stos
rcl
scas
outsb
fst
stos
sbb
or
nop
jmp
fsubrl
add
out
movsb
mov
push
fbstp
mov
in
leave
xchg
mov
dec
inc
stos
daa
and
jg
push
lea
loope
pop
mov
stos
nop
mov
xchg
jle
stos
movsb
pop
scas
scas
outsl
pop
ljmp
jecxz
les
test
mov
stos
and
and
stos
pop
mov
mov
icebp
rolb
jle
mov
stos
enter
aam
lret
sbb
fldenv
test
inc
mov
mov
mov
nop
stos
push
mov
in
cmp
inc
fadds
loope
cmp
fwait
ret
mov
shlb
push
lds
dec
pop
stos
test
sub
test
cmp
jns
pop
jl
in
pushf
imul
xorb
adc
stos
andl
into
mov
sub
and
movsl
fistpl
stos
lea
fs
stos
jmp
fiadds
push
jno
xchg
sahf
insl
stos
cmpb
push
cmpsb
jb
stos
jge
fs
popa
into
imul
je
sub
stos
cli
mov
out
mov
bound
cmp
stos
xor
clc
fs
sbb
cs
stos
mov
aaa
dec
push
cmp
adc
stos
jle
cmpsb
repnz
adc
daa
mov
hlt
pop
and
mov
loop
jmp
xchg
cmp
mov
push
mov
dec
stos
pop
lds
mov
imul
movq
xchg
sti
mov
pop
add
jg
std
rorb
popa
cmpsl
and
xor
cwtl
ret
je
imul
repnz
mov
and
xchg
xorb
imul
mov
mov
stos
dec
jb
sub
or
mov
jmp
inc
xchg
bnd
shrl
je
dec
or
dec
mov
mov
cli
stc
stos
jnp
pop
mov
movsb
cmp
or
push
cld
push
cmpsb
fstpl
out
ja
daa
mov
add
out
ds
cli
mov
stos
jo
jg
sub
jecxz
stos
stos
jnp
mov
gs
shrb
pusha
and
mov
inc
repz
rcll
push
jb
mov
cli
out
out
in
jle
sti
and
mov
add
lea
mov
stos
add
das
dec
jae
xor
loopne
inc
cmp
mov
fistl
cli
cwtl
in
lods
sub
push
sub
and
add
test
mov
iret
rcrb
inc
inc
push
adc
stos
scas
jbe
iret
push
outsl
test
xchg
pop
dec
stos
gs
shr
cmc
push
sti
jmp
dec
add
popf
ljmp
xchg
out
fildll
loop
pop
bts
push
adc
xor
jl
cmp
insb
outsb
stos
inc
pop
xlat
jb
push
jg
push
inc
hlt
stos
cld
cmp
mov
pop
xor
loope
sub
cltd
mov
shr
push
push
insb
xchg
cli
fisubrs
fnsave
inc
sub
xchg
push
adc
pop
call
push
jbe
das
and
stos
out
jge
and
xchg
imul
mov
ret
mov
shlb
mov
lods
xor
adc
lock
es
mov
mov
sbb
in
and
add
negb
mov
mov
mov
cmpsl
xor
sub
stos
mov
cld
stos
mov
add
adc
stos
mov
sbb
lcall
stos
lods
sbb
add
dec
and
stos
adc
cmpsl
lea
in
sbb
pusha
movsl
push
mov
stos
jns
imul
cmp
stos
adc
add
and
les
fwait
loop
call
stos
sub
inc
fiadds
xchg
xor
pop
sbb
adc
test
inc
sti
push
stos
xchg
jo
push
call
sbb
lods
sbb
out
pop
add
aas
xchg
loopne
sub
cmp
fcomps
mov
xor
outsl
imul
xchg
inc
pop
stos
nop
mov
das
fisttpl
pop
scas
and
lds
jg
cmpsl
loopne
inc
fwait
stos
cs
outsb
or
stos
hlt
je
cmc
lock
test
sarb
stos
cmpsl
sti
jp
jecxz
mov
jg
clc
loope
insb
adc
inc
stos
int
mov
sbb
rcll
push
into
sub
test
lock
cmp
mov
cmc
movsb
sub
inc
mov
or
cmpsl
in
push
stc
stos
cmp
stos
mov
pop
ja
xchg
outsl
js
xor
lret
inc
push
xor
jmp
pop
push
es
shll
in
push
xchg
repz
xchg
movsl
lock
notl
cli
stos
ja
pop
dec
xor
mov
stos
and
mov
push
push
hlt
clc
cmp
mov
cltd
cli
pop
in
int
mov
test
dec
cmpsl
sbb
mov
fcmovnu
xchg
xor
fildll
dec
sub
pop
je
dec
mov
xor
cmp
jbe
pop
xor
enter
sbb
mov
fcomps
out
xchg
fdivrl
inc
mov
fildll
mov
cmp
sbb
sub
lods
push
lret
pop
push
ljmp
jle
pop
sub
cmp
jp
push
inc
aam
clc
inc
or
sub
leave
xchg
in
push
push
pop
imul
bts
out
push
push
pop
leave
out
out
lahf
inc
fldt
sbb
push
mov
jns
gs
pop
and
scas
jno
fwait
mov
cwtl
pushf
enter
sbb
ret
cmp
add
jge
adc
test
stc
stos
fcoms
stos
aad
pop
pop
mov
lds
jg
or
mov
lcall
data16
mov
stos
dec
mov
loopne
int3
mov
adc
cmp
loop
xchg
mov
js
xchg
push
xchg
and
mov
bound
lock
stos
cmc
lret
clc
sbb
imul
andl
sbb
jmp
ret
mov
cmp
jo
push
or
je
arpl
cltd
mov
push
xchg
stos
int
ja
pushf
jb
push
stos
fidivrs
clc
xchg
add
imul
paddb
lea
pop
mov
gs
daa
jecxz
inc
fldcw
dec
stos
popf
mov
xchg
fstpt
in
sbb
out
push
gs
mov
aam
and
in
and
stos
movsb
jl
mov
stos
adc
sub
imul
rcrl
stos
daa
mov
ds
addr16
pop
xor
mov
jns
loope
fstps
stos
das
rol
shrb
ret
jmp
dec
sbb
push
scas
inc
sub
aad
jne
stos
lcall
or
sbb
xor
popa
enter
stos
nop
inc
mov
mov
shl
sub
pushf
stos
mov
jb
aad
mov
fwait
insb
xorl
jmp
daa
mov
cmp
inc
out
fldenv
decb
xchg
mov
sub
mov
stos
ljmp
xchg
imul
ret
stos
mov
push
scas
sub
jo
ljmp
cmp
cltd
ss
mov
lret
mov
sub
clc
test
stos
fcoms
int
popa
stos
mov
jge
and
leave
inc
enter
stos
sub
inc
stos
mov
dec
je
xor
jne
or
ss
rclb
stos
and
jge
cld
stos
jecxz
add
jmp
cmp
adc
push
mov
xchg
jp
push
dec
pop
test
addr16
pop
xor
mov
pushf
jmp
xchg
push
pop
add
mov
addl
pop
mov
sub
sub
mov
jp
jmp
add
jl
mov
stos
scas
cmpsl
data16
sub
in
rolb
imul
int3
scas
mov
mov
pop
ljmp
pop
stos
jno
xchg
adc
lea
addr16
xlat
jg
and
or
add
mov
and
lock
and
mov
lret
aad
jp
pop
mov
jbe
stos
shrl
xchg
adc
and
jmp
sbb
push
push
fcmovne
aad
xor
sub
stos
lea
stos
add
adc
icebp
pop
outsb
mov
test
and
daa
or
out
lods
mov
mov
stos
shl
or
arpl
add
pop
cmp
xchg
ss
jmp
stc
xchg
jnp
outsl
movsb
je
push
out
addr16
iret
fidivrs
test
xchg
add
xlat
dec
push
push
rol
sub
jmp
sbb
mov
stos
pop
repz
sti
ds
jns
std
test
adc
test
mov
sti
cmp
or
movsl
lret
push
or
mov
adc
dec
mov
cmp
mov
cmp
push
stos
imul
adc
inc
mov
stos
out
mov
outsb
fdivrs
movsl
cmc
stos
aam
pop
mov
adc
jb
fwait
cmovo
cmp
jge
sub
sbb
xchg
inc
and
or
fsubrl
test
repz
push
imul
mov
fistps
mov
fwait
addr16
sti
fstpl
stos
ljmp
pushf
stos
fisubl
mov
mov
cmp
ljmp
dec
and
test
stos
cmpsb
sub
pop
negb
dec
sub
bound
loop
xchg
jb
pop
mov
dec
mov
pop
nop
stos
xchg
dec
sti
sub
xchg
cmp
stc
aas
stos
pop
stos
adc
add
sub
or
pop
sbb
push
cld
jg
xchg
dec
outsl
mov
sbb
inc
insl
dec
xchg
xchg
pop
in
push
int
popa
cmp
dec
mov
outsb
fistps
ret
lods
jp
cmc
addr16
xchg
dec
inc
mov
dec
mov
pop
int
stos
movsl
mov
mov
lods
or
mov
lcall
xor
insl
call
mov
mov
cmp
inc
dec
mov
mov
mov
push
movsb
sub
ret
aaa
or
mov
xor
in
pushf
dec
mov
enter
rcrb
out
mov
xchg
stos
push
xchg
mov
subb
jo
mov
mov
cmp
out
es
pushf
sub
mov
in
xor
add
lds
mov
xchg
sti
stos
bound
mov
dec
insl
add
imull
mov
hlt
popa
mov
shlb
lea
lahf
movsl
sbbl
stos
out
sbb
adc
fldcw
jp
jl
stos
shrl
pop
stos
fcomps
data16
jne
pop
xchg
mov
ret
iret
ss
push
mov
stc
push
push
paddd
cltd
jns
xchg
stos
inc
sbb
dec
je
stos
sub
mov
loope
mov
fwait
mov
adcb
leave
dec
test
stc
or
orl
out
xor
stos
icebp
or
xor
int
mov
notb
stc
stos
int3
out
and
inc
jmp
aas
lcall
push
or
fdivrs
into
sbb
enter
sbb
stos
js
outsl
sub
imul
adc
push
cld
lahf
push
cmp
pusha
ja
nop
push
sub
iret
shlb
jp
das
mov
in
dec
pop
sub
dec
sub
mov
das
addr16
mov
push
imul
dec
add
pop
or
movsl
sub
fdivrp
movsb
jne
test
stos
xor
repz
movb
xchg
je
mov
inc
jbe
cmc
mov
xchg
mov
adc
je
lock
lods
pop
jmp
or
or
fstps
arpl
sub
push
rcll
out
mov
inc
or
add
stos
and
push
cmp
fcomp
stos
mov
das
cmpl
xor
pusha
jmp
sahf
imul
pop
dec
call
test
stos
pop
and
fnsave
stos
and
jecxz
jne
cmpl
ret
mov
shrl
push
out
shrl
movsb
aaa
ds
ss
jo
dec
icebp
add
push
mov
imul
mov
stos
js
xchg
mov
jmp
mov
lods
ja
sbb
addr16
daa
scas
movsl
mov
stos
mov
cs
pusha
stos
sub
fsts
stos
lods
fs
sub
in
les
pop
lret
push
data16
ret
jle
dec
loopne
test
sbb
push
ret
jnp
add
dec
movsb
pop
push
mov
insb
call
pop
fimull
mov
adc
ret
add
pop
imul
mov
imul
js
imul
jb
aam
shlb
or
push
lret
dec
movsb
or
sbbb
fisubrl
or
mov
xchg
in
lods
jecxz
jmp
loop
aas
movsl
push
xor
fcomps
dec
xor
jnp
insl
mov
scas
outsl
out
jecxz
cmp
sbb
cld
sets
cmp
imul
imul
xchg
ret
fisttpll
imul
cmp
addr16
stos
mov
sbb
imul
jge
fwait
out
mov
mov
or
add
mov
and
stos
jl
cmc
adc
stos
xor
pop
sub
inc
or
gs
imul
mov
lea
mov
sbb
in
jmp
movsl
cmc
arpl
cmp
mov
in
imul
test
jbe
jmp
push
in
pop
insb
iret
lea
loope
mov
push
test
addr16
movsl
xchg
xchg
or
sub
jnp
jnp
jl
mov
mov
cmp
stos
or
ret
or
pop
addr16
scas
cmp
mov
fwait
rorb
push
mov
adc
mov
and
xchg
in
pop
push
mov
call
xchg
pop
fcoms
je
mov
ret
jb
aam
addr16
or
sbb
xchg
push
push
jae
int
or
jb
clc
stos
dec
les
and
stos
movsl
or
sbb
stos
or
inc
pop
mov
fs
xor
scas
xchg
loop
stc
stos
incb
jns
aas
imul
mov
stos
jle
fisubrs
push
pop
stos
mov
sbb
push
adc
out
cmp
pop
out
stos
adc
scas
nop
rcrb
int
fimuls
xchg
cmp
in
daa
imul
push
lods
inc
push
mov
pop
sub
lcall
aaa
mov
mov
xchg
mov
mov
stos
std
fsubrl
imulb
sub
sbb
xchg
outsl
xor
jecxz
sarl
sti
jne
div
jge
cmc
stos
dec
out
movsl
or
fwait
sub
in
hlt
inc
xchg
pop
lret
into
stos
lret
int3
outsb
or
aam
mov
cmp
inc
and
add
fwait
ss
repnz
sahf
mov
stos
leave
inc
rcr
adc
mov
roll
sub
idivl
arpl
mov
das
sahf
pop
sub
sbb
pusha
inc
jnp
in
mov
data16
loop
ljmp
xchg
pop
or
push
scas
adc
out
mov
out
mov
and
pop
or
dec
jmp
and
add
jg
in
mov
jo
pop
mov
int3
in
outsb
inc
dec
mov
lds
shlb
negb
push
pop
dec
jle
stos
xchg
arpl
sub
sbbl
jno
pop
stos
push
je
ret
add
stos
insl
repz
inc
stos
xchg
jae
stos
mov
int3
out
xchg
lret
push
xlat
mov
mov
testb
sub
push
xor
jle
jge
cmp
test
pop
mov
fildll
mov
pop
jno
popf
icebp
adc
push
int3
pop
push
ljmp
pop
stos
inc
jb
cmpsl
orl
or
dec
mov
insl
roll
adc
mov
xchg
ja
jmp
mov
inc
imul
scas
stos
xchg
add
ds
dec
dec
or
popf
in
cmp
jnp
imul
movsl
adc
stos
or
sub
mov
inc
in
and
sahf
and
stos
mov
mov
stos
repz
mov
addr16
mov
and
add
out
subl
push
stc
jo
je
popf
or
pop
push
dec
insb
sbb
sub
push
je
inc
inc
outsl
stos
loop
leave
jno
mov
fisubrs
movsl
pop
andb
shll
ja
stos
adc
mov
inc
stos
mov
scas
mov
stos
and
or
int
sti
pop
stos
stc
adc
and
mov
stos
sub
pop
xorl
lret
jg
sub
insb
and
jo
cmp
sbb
lods
jbe
stos
js
xchg
es
pop
and
sbb
push
or
mov
pop
stos
sub
sbb
imul
lahf
jne
xor
loope
mov
sbb
inc
fcompl
dec
cmp
sbb
icebp
sti
and
mov
addb
imulb
jns
movsl
and
adc
test
stos
call
fwait
pop
in
jmp
lods
push
mov
dec
lcall
nop
mov
sbb
stos
xchg
and
xchg
hlt
dec
xchg
pop
cs
stos
nop
ret
jne
push
lcall
xchg
les
mov
cmc
je
adc
cmp
scas
xchg
add
stos
into
dec
imul
cmp
mov
out
lock
imul
adc
sub
in
scas
push
xchg
add
stos
lcall
shrl
xchg
daa
je
stos
cmc
adc
pop
gs
jmp
cmpsl
shlb
loope
lret
imul
lahf
in
add
push
jmp
ret
xchg
subb
fbld
in
loopne
daa
or
ljmp
pop
dec
lret
jae
les
jecxz
fidivs
scas
enter
sub
stos
pop
mov
mov
cmovbe
stos
sub
dec
mov
inc
fsubs
stos
push
popf
mov
mov
in
nop
daa
dec
mov
mov
and
aas
std
loope
or
subl
lods
jae
ret
mov
jne
mov
and
sub
cld
addr16
add
pop
fsubrl
xlat
and
test
lcall
stc
testl
sbb
xlat
jmp
jns
mov
jmp
jg
js
adc
stos
lahf
fidivrl
not
mov
cmp
or
enter
jp
xchg
xor
pop
es
cmp
push
mov
add
lcall
push
mov
cmp
inc
stos
fstp
sbb
dec
xchg
stos
jg
or
add
aaa
mov
mov
cwtl
enter
mov
push
jl
push
jne
mov
je
ljmp
sbb
dec
lcall
add
ficomps
pusha
mov
std
mov
pushf
lods
daa
in
lret
movl
outsb
into
incl
push
scas
ret
mov
fcoml
addr16
rcrb
lret
scas
jmp
dec
pop
mov
and
ljmp
push
stos
pop
xor
adc
fidivrl
stos
out
in
mov
cs
and
pop
cmp
add
stos
dec
je
movsb
push
enter
test
mov
and
fildll
fwait
daa
and
dec
inc
daa
in
sti
mov
ljmp
out
mov
add
push
push
aas
stos
mov
js
sub
push
and
jecxz
jmp
mov
pop
cld
hlt
stos
inc
inc
jmp
push
push
jb
stos
sub
pop
in
or
push
push
mov
testb
lret
loopne
add
xor
scas
sahf
mov
xlat
jge
sar
sbb
stos
cltd
outsl
hlt
xchg
adc
xor
sub
cltd
cmpsb
arpl
lds
pushf
dec
push
stos
xchg
test
cmc
jo
js
stos
leave
arpl
jg
cs
stos
sbb
lea
push
imul
ss
cld
jnp
mov
pop
mov
leave
add
stc
adc
push
gs
stos
out
inc
jno
iret
nop
in
stos
mov
mov
and
rcr
mov
dec
fsubr
popa
dec
push
mov
ret
scas
in
xchg
inc
or
aam
orl
xchg
stos
loope
xor
mov
loopne
sbb
imul
stos
push
and
pop
stc
xchg
insl
sub
sub
stos
cmp
fsubrs
jge
mov
sub
push
pop
loopne
mov
and
cmp
jmp
pop
inc
sub
mov
sti
adc
in
call
dec
imul
add
xchg
sub
pushf
mov
xchg
imul
aam
lret
gs
arpl
aaa
mov
imul
jbe
ljmp
stos
sahf
loopne
ja
pop
mov
pop
xor
xor
xchg
mov
sbb
in
insb
stc
stos
shlb
jbe
call
inc
lods
or
mov
cli
jno
sbb
fwait
push
lods
lahf
sarb
mov
popa
jno
arpl
xlat
ret
jns
ficoms
xor
fdivs
xchg
mov
fsubrl
xor
mov
pop
int3
mov
fcomps
ror
jl
std
or
dec
lea
push
cmc
jmp
add
fidivrs
and
mov
nop
cmp
test
lds
pop
xlat
fsubrl
mov
std
scas
mov
push
daa
in
mov
movsl
jns
sbb
rcrl
push
mov
addr16
clc
jl
out
dec
cmp
cmp
js
pop
inc
push
mov
xor
xchg
test
jl
adc
push
add
cmp
scas
mov
lret
mov
sub
into
loopne
ds
pop
sub
repnz
mov
daa
stos
call
mov
fwait
leave
add
dec
or
dec
jae
xchg
call
adc
fsubrs
shr
lods
aad
and
push
xchg
push
jge
xor
mov
mov
ljmp
and
stos
frstor
add
mov
pop
stos
cmpsl
sti
bound
mov
or
test
cmpsb
loopne
ret
xor
mov
sbb
jg
mov
jbe
rolb
scas
addr16
jne
sbb
stos
mov
rcll
popa
call
xchg
add
lcall
stos
xchg
stos
push
mov
shrl
fwait
stos
in
sbb
mov
mov
es
sbb
cs
mov
xor
xchg
outsb
mov
call
stos
adc
scas
xor
test
dec
in
sbb
mov
mov
cmpsl
stos
inc
pop
push
push
jg
push
sub
lods
sub
shlb
lret
pop
adc
mov
in
push
into
dec
sub
sbb
xchg
fwait
lds
dec
or
stos
jg
xor
mov
imul
ds
shll
xchg
test
sbb
mov
xchg
test
inc
les
fnstcw
mov
shll
push
scas
jg
leave
movsl
das
movsb
mov
xchg
xor
pusha
mov
push
adc
push
mov
popf
stos
pop
xor
xlat
mov
or
xchg
aam
int
and
stos
rclb
xor
enter
mov
arpl
stos
adc
rcrb
scas
push
push
aas
mov
sub
push
daa
cmp
pop
xorl
add
xchg
xor
jb
pusha
jns
test
into
repz
cmc
popf
push
stos
mov
xor
lret
lods
sub
dec
cmp
cltd
adc
cmp
adc
mov
xchg
lcall
sahf
into
dec
mov
pop
push
and
push
mov
test
dec
mov
lds
int3
addb
stos
jp
cmpsb
sbb
or
xchg
mov
repnz
sbb
mov
fwait
stos
icebp
out
mov
in
mov
fistl
and
push
or
add
sbb
call
xchg
test
fsub
mov
and
daa
sub
jmp
sbb
jecxz
push
mov
addr16
push
adc
or
dec
lods
mov
mov
outsb
stos
mov
push
push
es
test
stos
fcompl
jp
jae
daa
sub
fisubl
test
imul
cmp
insl
push
adc
xchg
push
popl
scas
leave
jb
mov
divl
stos
insl
imul
xor
sub
cmp
pop
xchg
sub
stos
sub
jmp
rclb
lcall
cmp
cmpsb
aam
mov
cwtl
ret
test
js
pop
test
cld
fwait
add
scas
ja
mov
sahf
stos
push
add
add
cltd
stos
or
in
fisubs
sbb
imul
nop
test
push
imul
xchg
xchg
fiadds
stos
mov
and
adc
hlt
jge
lret
dec
xchg
cmpsl
imul
fs
gs
outsl
xchg
imul
loope
jmp
mov
les
push
and
push
and
jg
cltd
or
dec
xlat
addb
mov
dec
mov
xor
push
inc
jecxz
mov
push
xchg
scas
add
inc
mov
cmp
cmp
adc
test
aas
inc
stos
jmp
dec
or
shlb
sbb
stos
push
jp
scas
mov
dec
dec
push
int
stc
movsb
testb
sbb
and
stos
push
and
pop
mov
mov
pop
pop
imul
fwait
cld
gs
loope
mov
in
pusha
stos
inc
inc
in
push
cmp
adc
jle
stos
stos
mov
mov
lds
and
add
mov
mov
fimull
or
in
cmp
incl
ljmp
mov
mov
gs
sub
fdivrs
xchg
dec
lock
rcr
lds
aam
cmc
dec
fldcw
adc
lods
and
jns
movsb
in
stos
dec
das
xchg
cmp
mov
push
sti
pop
ljmp
jecxz
stos
into
adc
jno
stos
xor
repnz
sbb
outsb
insl
mov
add
stos
repnz
xchg
lock
out
imul
add
lods
lcall
stos
je
pop
sbb
fwait
jmp
out
push
stos
or
popf
test
jb
fimull
sub
or
and
cs
fdivs
stos
mov
jo
imull
and
fwait
subb
aad
ret
sub
mov
decb
inc
pop
dec
fbstp
xchg
adc
iret
mov
mov
cmpl
sbb
or
xchg
out
adc
inc
mov
cmpb
ret
or
stos
lock
rcll
bound
mov
bsr
stos
mov
and
js
pop
in
xor
cmpsb
testl
jne
aas
inc
movsl
pop
imul
fnstsw
stos
ja
and
dec
inc
push
stos
vmovhps
jbe
out
stos
movsl
insb
insl
adc
xor
test
pop
icebp
or
cmp
sub
jg
das
adc
repnz
lret
and
addr16
xchg
mov
int
jmp
pop
pop
push
pop
xor
mov
jl
mov
cmpsb
arpl
mov
sbb
push
add
mov
dec
fwait
stos
jae
push
jp
ret
stos
outsb
shll
stos
pop
jg
lahf
mov
mov
sub
js
adc
pop
push
mov
push
mov
les
cmp
xor
das
imul
out
jbe
xchg
insl
pop
stos
icebp
push
out
pop
jno
popf
mov
jl
mov
sub
cmp
mov
stos
sbb
or
dec
clc
push
push
movsl
dec
jmp
sub
stos
xchg
xor
iret
pop
aad
cmp
adc
cmc
dec
movsb
dec
xchg
stos
popf
adc
lock
stc
mov
imul
test
inc
xchg
xor
dec
stos
cmpl
adc
ds
call
push
pop
jmp
scas
divb
cmp
push
repnz
pushf
test
stos
movsl
mov
inc
stos
adc
mov
adc
cmpsl
dec
stos
dec
mov
sub
stos
push
orl
in
and
mov
subb
inc
addr16
insl
sbb
jo
push
lahf
dec
stc
ldmxcsr
aaa
stos
jb
fstpt
lret
sub
stos
adc
jbe
lahf
add
xor
mov
add
in
sbb
dec
outsl
cwtl
leave
iret
sub
imul
push
adc
loopne
stos
das
lods
sub
pop
stos
pushf
or
out
aam
outsl
stos
sbb
std
orb
push
stos
or
movsl
mov
xchg
fsubrl
loope
orl
mov
mov
rorb
insb
mov
addr16
jae
xchg
sub
scas
or
pop
ret
ss
or
jle
sbb
daa
push
outsl
mov
sbb
shlb
shl
stos
sti
gs
xor
mov
scas
sbb
adc
jecxz
add
mov
inc
xchg
jl
stos
xor
imull
cld
fidivrl
dec
lock
dec
mov
cmp
leave
push
les
lret
inc
andl
lahf
aaa
addr16
pushf
ficomps
ret
add
fsubrl
out
adc
stos
and
push
loope
mov
mov
ret
pop
cmp
cmp
push
popa
es
mulb
pop
stos
inc
mov
sti
fsubrl
jmp
stos
stos
out
das
xor
push
aas
mov
mov
lahf
imul
cmp
dec
mov
jns
lods
test
stos
push
xor
fsubr
stos
cmp
jb
stos
jge
xchg
sarl
pop
scas
adc
mov
movsb
inc
sbb
cs
addr16
mulb
mov
or
shrb
stos
pop
nop
mull
stos
cltd
sub
cmp
fisttps
jb
pop
rcrb
stos
cwtl
sub
sbb
mov
in
hlt
stos
jl
cmp
adc
inc
shlb
xlat
push
push
push
stos
cwtl
sahf
mov
mov
shll
xchg
sub
js
sbb
sahf
stos
lods
mov
stos
mov
lret
mov
or
gs
fwait
arpl
test
mov
inc
cmpl
fsubs
add
jl
jno
jp,pn
popf
scas
loop
imul
pop
mov
js
jg
sbb
stos
stos
cs
aas
stos
xchg
fmuls
jmp
lcall
sub
mov
cmp
mov
jnp
stos
arpl
movb
mov
xchg
add
shrb
fidivrs
sbb
ss
or
jmp
subl
outsl
repnz
sbb
gs
xor
imul
or
in
mov
mov
dec
xor
pop
cmp
cmp
add
dec
stos
mov
popf
jecxz
cmpsb
mov
std
and
push
adc
pushf
ror
lods
lods
inc
cli
movsb
jp
mov
negb
stos
xchg
cmp
push
sub
rcrl
fimull
stos
mov
cmp
sub
or
aad
fs
jmp
mov
push
scas
dec
jne
sub
fcmovnu
jmp
jge
loopne
cltd
or
pop
fidivrs
div
jmp
sahf
dec
adc
cmp
add
movsb
sub
sub
int
jnp
enter
jl
push
jb
scas
xchg
push
or
xor
cmp
xor
clc
ret
mov
insl
stos
cmpl
adc
mov
outsl
clc
test
lock
bound
cmc
out
insl
adc
push
jp
sbb
test
sbb
or
test
push
xchg
orl
push
cmp
js
sbb
aam
sub
dec
mov
sbb
lcall
pop
stos
loope
mov
cmp
adc
test
jo
sahf
cmp
xchg
lret
push
lahf
decb
fisttps
stos
jb
aaa
iret
into
and
and
cltd
aas
stos
mov
jecxz
out
jmp
mov
jae
fcompl
out
stos
cltd
in
movl
cmp
jmp
and
stc
xchg
pop
mov
je
push
xor
frstor
fdivrs
xchg
insb
loop
fbstp
pop
pop
out
repz
dec
dec
fsubrs
in
stos
std
inc
ret
xor
mov
jne
fisubrl
or
imull
out
cmp
out
sbb
daa
fwait
push
inc
scas
mov
sarl
jns
fdivs
js
pop
stos
mov
loopne
or
insb
xchg
sub
stos
pop
add
int
imul
cmpsl
int3
and
sbb
jmp
fildll
lret
xor
stos
mov
xor
jl
mov
sub
shrl
mov
pusha
stos
js
bound
push
or
add
fidivrs
loopne
int
xlat
inc
dec
pop
loop
push
in
cli
ds
push
pop
dec
sub
sahf
inc
cltd
sti
cmp
stos
fwait
mov
data16
xchg
addr16
cmp
bound
xchg
add
mov
test
imul
mov
ds
pop
das
stos
xchg
dec
fs
mov
ficomps
lahf
adc
idivl
or
stos
pushf
jns
out
sbb
add
mov
stos
aam
lods
push
adc
jge
inc
stos
insb
add
sub
mov
out
in
dec
dec
push
jo
mov
and
push
stos
mov
jecxz
loop
stos
lock
ss
pushf
fisttpll
stos
mov
cmp
jecxz
mov
dec
fsubrs
push
sub
mov
into
ret
stos
jae
in
adc
mov
xchg
mov
cmp
loopne
sub
adc
jmp
inc
into
scas
mov
and
in
rcrl
add
lds
mov
scas
stos
fsubp
test
stc
imul
mov
into
daa
sub
pop
pop
lock
mov
mov
dec
jns
ret
addl
rcl
stos
outsl
inc
push
and
fwait
call
out
arpl
pop
mov
jns
jne
pop
adc
mov
pop
rolb
cld
stos
mov
mov
lahf
jmp
mov
orb
jl
lock
xchg
addr16
mov
adc
test
sbb
mov
stos
dec
test
out
mov
pop
push
or
dec
mov
jle
adc
outsb
daa
jmp
sub
xor
dec
push
adc
inc
stos
dec
fidivl
incb
cs
aam
andl
fstpt
adc
push
xchg
jle
repnz
sbb
sub
out
or
out
stos
sbb
mov
ret
popa
jl
popf
daa
stos
jge
push
inc
and
push
cs
movsl
inc
xchg
and
scas
mov
jp
xchg
aad
push
and
call
adc
sub
outsb
jle
xchg
stos
pop
mov
jb
icebp
sbb
add
stos
ljmp
xchg
stos
mov
fdivr
sub
mov
sub
mov
jmp
push
xchg
adc
nop
mov
stos
stos
stc
jl
outsl
jo
pop
stos
cwtl
adc
mov
stos
bound
mulb
cld
mov
and
adc
cmp
mov
jbe
mov
mov
mov
stos
sbb
imul
sub
jecxz
imul
insb
out
add
jbe
cmp
inc
add
cmp
or
mov
push
fcomi
dec
xchg
xchg
sahf
std
and
push
psubd
xchg
inc
mov
mov
or
xlat
or
push
imul
and
dec
out
dec
jmp
lds
mov
mov
lahf
adc
shrl
fisubs
jns
adc
lcall
mov
or
lds
int3
cltd
addr16
subl
cmp
sbb
sub
mov
cltd
shll
subb
imul
stos
cltd
or
xchg
out
sti
stos
into
push
fmuls
pop
filds
push
jecxz
xlat
or
shll
jmp
pop
mov
mov
ja
enter
and
gs
scas
add
adc
mov
and
xchg
fmull
pop
push
loope
iret
gs
ret
out
inc
xchg
leavew
jmp
xchg
and
cmpl
stos
repz
cmp
mov
and
adc
repz
daa
les
adc
or
xlat
stos
dec
gs
outsb
push
pushf
jne
mov
enter
das
loopne
idivb
inc
lret
movsl
or
mov
aaa
pop
fsubs
stos
xchg
jne
stc
sub
daa
in
pop
out
dec
fwait
or
cmp
cmpsb
in
inc
rorb
insl
subl
jp
imul
mov
cli
rclb
movb
and
sbb
jge
fstpl
mov
imul
push
jle
scas
pop
jl
imul
and
inc
pop
sbbl
sti
stos
dec
or
adc
pop
stos
adc
push
daa
out
fcoml
sub
add
mov
cmp
cmp
xchg
pop
cli
es
iret
sub
imul
push
add
adc
fisubrl
mov
stos
xor
xor
xchg
inc
ret
shll
daa
inc
sbbb
xchg
inc
xchg
mov
jp
lahf
or
test
push
lds
stos
cmp
mov
fistps
stos
sbb
leave
fisubl
mov
mov
jmp
movsl
cmp
fcoml
out
sbb
add
movsb
data16
sub
bound
jecxz
sbb
fwait
xchg
stos
cmp
xor
jp
subl
sub
mov
mov
pop
faddl
aad
mov
jo
pop
xchg
pop
fdivs
insl
pop
inc
xorl
aad
or
ret
jge
cmc
push
push
imul
xchg
jecxz
in
hlt
xchg
xchg
stos
lea
sub
int
lret
fsubrl
mov
or
sahf
hlt
mov
test
xchg
test
mov
xor
pushf
xchg
das
mov
fsubrs
cltd
mov
pop
arpl
lret
push
ss
or
lret
ljmp
aad
sbb
movsb
lods
adc
or
orb
int
decl
push
stos
sbb
loopne
jg
dec
pushf
stos
rorl
inc
call
inc
lret
cmpb
test
or
gs
es
adc
stos
into
imul
xchg
push
je
sbb
popf
lock
stos
into
mov
sub
cld
stos
xchg
in
rcrb
mov
jmp
sub
cli
push
mov
int3
addl
mov
stos
loop
fwait
lea
gs
aas
stos
lahf
or
jno
scas
stos
rcrb
sub
stos
xchg
and
or
jp
mov
xor
rorl
pop
das
iret
xchg
jmp
stos
adc
fiaddl
stc
out
stos
adc
push
cmp
add
mov
imul
xchg
fsts
out
dec
pushf
pop
cmpsb
mov
out
sub
pop
or
jmp
mov
mov
stos
or
cmove
jle
mov
data16
lahf
and
stos
loopne
fwait
push
jmp
fsubs
fidivrl
fucomi
out
cmp
push
mov
inc
stos
jle
in
loop
out
addr16
in
mov
fsubrs
mov
shrl
stc
js
or
jnp
loop
cmp
cmpsl
jo
in
pop
mov
push
mov
stos
lock
fsub
fldenv
add
mov
sub
add
add
xchg
push
xchg
ja
ficoml
pop
fwait
add
jo
jns
repz
fmuls
dec
sub
ljmp
push
movntq
pop
repnz
pop
ljmp
jo
push
test
lods
loopne
inc
loope
push
fisttpl
and
push
xchg
push
lret
jmp
inc
dec
jge
jnp
lods
hlt
les
outsl
dec
cmpsb
ja
push
addr16
xor
arpl
sub
lcall
lret
jg
xchg
mov
addr16
jp
mov
hlt
stos
decl
mov
xchg
icebp
xor
lods
stos
ret
sbb
into
stos
sbb
das
ljmp
fimull
xchg
out
imul
out
iret
adc
lods
xchg
stos
aam
inc
rolb
imul
xchg
mov
shl
push
stos
push
inc
mov
and
fidivs
stos
inc
jl
pop
aam
stos
mov
cltd
jp
nop
outsb
test
stc
stos
test
andb
icebp
add
sbb
mov
mov
notl
pop
scas
add
mov
push
test
adc
add
stc
xchg
or
sbb
sbbl
dec
jb
lea
fdivs
shl
sub
pop
pop
stos
pop
xchg
cmp
or
or
testl
sub
jp
add
cmpsb
stos
aam
dec
jge
int3
add
sbb
ss
out
subl
mov
jne
shr
ja
sub
xchg
pushf
pop
fwait
pop
mov
stos
in
jnp
dec
out
pop
or
mov
lods
inc
dec
enter
stos
mov
shlb
mov
mov
imulb
repnz
aaa
jnp
jecxz
adc
add
test
and
push
shlb
cmpsb
or
jle
scas
pop
jp
fimuls
fwait
pop
stos
mov
cmp
jae
stos
push
sti
adc
sbb
xor
pusha
sbb
popa
cmpsl
loope
add
cmp
inc
test
push
stos
add
loopne
and
das
jns
pop
mov
stos
loope
lea
stos
mov
and
ja
mov
dec
orl
enter
test
sub
adc
lods
ss
popa
fcomp
orl
cmc
stos
adc
xchg
out
gs
sub
and
push
mov
dec
lret
test
adc
es
push
stos
mov
cs
stos
jne
dec
sbb
movsl
mov
sarb
inc
stos
mov
dec
add
stos
ficoms
mov
iret
roll
data16
and
xchg
xchg
and
outsl
leave
lahf
popf
inc
movsb
stos
cmp
lods
arpl
xchg
jge
stos
and
adc
leave
inc
adc
sti
mov
fwait
insl
mov
ret
in
stos
push
push
dec
out
mov
aad
clc
lods
shlb
sbb
negb
xorl
mov
gs
cwtl
scas
dec
dec
out
stos
xor
in
insl
add
cli
addr16
add
push
shrl
cmp
insl
sti
aaa
add
ds
cs
adc
ret
dec
adcb
stos
jp
xchg
imul
fisubs
test
daa
mov
or
mov
stos
movsl
or
sub
into
adc
stos
lods
test
mov
stos
inc
dec
rcr
insl
xchg
les
stos
and
or
xor
xlat
stos
lods
xchg
pushf
ss
movsb
cs
aas
stos
sbbb
repz
aam
stos
or
call
jnp
pop
stos
mov
dec
aas
cmp
stos
and
repnz
jns
add
jge
pop
pop
out
dec
movsl
cs
lock
sbb
stos
cmp
movsl
lcall
pop
mov
das
insl
pop
stos
or
and
lea
rcr
mov
aam
je
xchg
sub
int
mov
movsb
sbb
mov
or
push
in
in
fxch
sub
packuswb
shll
or
rep
mov
cld
stos
push
xchg
mov
stos
push
xchg
xor
rcl
cmp
adc
inc
insl
jne
daa
inc
or
daa
xchg
lret
mov
push
addr16
es
stos
aad
outsb
stos
out
and
jge
sub
mov
jno
add
jmp
stos
push
push
cmp
mov
mov
lahf
or
xchg
in
and
pop
inc
pop
dec
and
into
push
dec
dec
aas
pop
adc
jl,pt
jl
int3
iret
mov
mov
sbb
sub
sbb
mov
pushf
push
dec
mov
sbb
cltd
hlt
jb
dec
adcl
jnp
push
lods
push
xor
movsb
scas
mov
stos
fwait
sub
mov
pop
inc
mov
pop
adc
test
stos
jge
out
xlat
and
js
sbb
nop
aam
stos
sbb
les
pop
es
dec
stos
mov
enter
incb
stos
jmp
and
lcall
stos
fcoml
in
push
js
je
lods
jl
and
or
mov
sahf
xchg
stc
or
stos
idivb
mov
iret
mov
das
in
out
leave
xor
jmp
xchg
mov
lods
pop
push
stos
and
jo
aaa
mov
adc
stos
mov
sbb
adc
fwait
jg
and
and
xor
xor
dec
iret
push
pop
stos
xor
lret
jecxz
xchg
stos
xchg
xchg
add
scas
aaa
and
imull
mov
js
popa
sbb
pop
sub
mov
push
xchg
loope
pop
mov
sub
out
push
jae
xor
movsl
int
in
pop
push
jae
mov
cmpsb
aas
and
cwtl
push
inc
lds
pop
fists
cmpl
and
inc
arpl
notb
fwait
adc
imul
fisubs
xchg
push
xor
dec
inc
movsb
push
insb
pop
add
xchg
in
jno
outsl
loope
in
mov
mov
std
addr16
stos
sbb
sarb
inc
mov
repnz
mov
es
stos
fistps
mov
push
fisubrs
push
cwtl
enter
push
jle
stos
pop
insl
jo
scas
xchg
cli
stos
jno
mov
inc
pop
adcb
mov
jbe
mov
inc
in
fisttps
daa
pop
repz
push
jns
mov
jae
mov
or
outsb
stos
mov
sub
stos
xchg
sub
jmp
add
hlt
test
jp
stos
cmp
or
stos
es
int
mov
mov
push
or
cmpsb
jle
mov
mov
ror
push
es
mov
adc
out
sbb
mov
ret
rcr
fcoms
jnp
stos
inc
out
and
add
lods
dec
push
inc
push
lea
les
stos
js
cmc
fistps
xor
das
xchg
push
rcll
sbb
xchg
cmpsb
in
jg
and
lcall
stos
jae
xchg
xchg
mov
shll
por
mov
stos
lret
cltd
push
cmp
xor
adc
stos
xor
inc
mov
je
xchg
sub
mov
add
cltd
inc
push
cs
pop
push
subb
xchg
and
fwait
mov
jmp
pop
mov
sbb
scas
dec
fistl
add
xchg
test
cld
sti
lret
ds
loope
xor
test
pop
stos
in
sbb
mov
cld
or
sbb
stos
sub
xchg
stos
fdivrs
test
fwait
push
add
sub
and
sbbl
stos
xchg
fidivrl
mov
mov
stos
mov
pop
ret
cmc
mov
out
imul
nop
mov
stos
out
jae
pushf
xchg
scas
lahf
lods
imul
fwait
xchg
xor
xchg
stos
repz
int3
dec
dec
stos
pop
ljmp
and
push
dec
cmp
jl
xchg
pop
outsb
fwait
std
faddl
cmp
fistl
add
ret
sub
pushf
adc
arpl
sub
pop
icebp
leave
push
inc
faddl
addr16
stos
cwtl
adc
mov
mov
fs
je
nop
negl
sub
push
jg
and
shl
addr16
dec
out
push
fwait
in
xor
addr16
sub
push
fwait
and
hlt
xchg
stos
or
jl
stos
xor
insl
cwtl
test
mov
mov
sbb
cs
jb
push
push
pushf
sbb
mov
cmp
xchg
and
xlat
cmpsl
daa
loope
int3
mov
mov
jmp
xchg
dec
test
mov
adc
jecxz
int
test
stos
sub
prefetch
or
push
out
fnsave
clc
in
mov
mov
movsb
test
mov
push
shrl
nop
stos
or
out
aad
int
sahf
stos
mov
mov
popa
jmp
clc
addr16
lods
push
xchg
xchg
in
stos
xchg
mov
test
movsl
filds
sub
ficoms
test
jb
xchg
mov
cwtl
stos
inc
push
adc
subl
adc
aaa
shrb
roll
insb
dec
stos
out
sub
fadd
outsl
lahf
cmpsb
jmp
ja
or
into
fcomi
stos
cwtl
cmp
fisubrs
negl
fldpi
xor
inc
mov
stos
jnp
test
jmp
mov
in
mov
out
loopne
fcmovb
add
cwtl
jmp
das
sub
adc
aas
in
adc
fsubl
es
stos
adcb
loopne
aad
aam
add
stos
xor
lds
pop
cmp
subl
fistpl
stos
shr
push
mov
jle
sbb
lods
outsl
jmp
push
pop
bound
pusha
cmp
adc
sti
mov
mov
popf
or
popa
in
inc
or
xchg
jecxz
xor
mov
and
xchg
inc
push
stos
gs
ljmp
in
cmc
pop
stos
je
xor
push
mov
lods
fidivrs
cmp
frstor
mov
jnp
daa
loop
xchg
inc
fwait
iret
cwtl
mov
movsb
shlb
pop
cmp
cmp
mov
xlat
add
stos
sbb
stos
ss
adc
pop
lret
and
popa
push
xchg
mov
stos
mov
or
pop
xchg
mov
dec
data16
stos
add
fwait
addr16
mov
jb
xchg
imul
and
add
leave
xchg
cltd
xlat
cmp
stos
jae
mov
adc
enter
stos
fld
das
xchg
imul
push
scas
and
mov
sbb
pop
add
test
stos
push
icebp
or
ret
add
loope
stos
mov
cwtl
js
add
xchg
dec
mov
out
js
lcall
mov
or
lods
hlt
sub
mov
lods
stos
sbb
lds
sub
sub
ja
adc
mov
paddusw
arpl
push
mov
or
mov
adc
jge
aad
push
ljmp
push
jbe
stos
jp
movsl
sbb
sbb
or
lock
stos
jno
sub
ret
stos
stos
pop
rcll
cwtl
out
lahf
dec
enter
lret
push
sub
stos
outsl
or
out
mov
xor
stos
ds
ret
xchg
push
aam
lret
sub
subl
push
mov
stos
mov
sbb
out
ret
add
inc
xchg
stos
stos
lahf
mov
xchg
loop
pop
faddp
adc
pop
scas
out
mov
stos
movsl
and
loope
stos
stc
das
lahf
and
lock
adc
push
test
stos
stc
ja
mov
and
lds
or
inc
xchg
stc
stos
jne
cmp
leave
mov
shll
aaa
dec
xchg
inc
dec
movsl
stos
loopne
cmc
mov
std
arpl
xor
jo
dec
and
rcrl
lods
mov
mov
jmp
mov
jmp
xchg
and
xchg
out
sbb
xor
jmp
pusha
push
mov
or
adc
ja
rcrl
xor
dec
cmp
rorl
dec
add
jns
mov
outsl
ficomps
and
dec
stos
jmp
into
or
stos
in
push
jae
mov
or
ljmp
rcr
xchg
xlat
stos
sub
inc
int3
xchg
stos
push
scas
push
or
outsl
dec
stos
testl
repnz
and
out
xchg
xchg
push
add
push
inc
movsb
call
fucomp
lods
mov
ljmp
mov
das
shrl
jecxz
loope
xchg
testb
rcll
jmp
daa
push
push
add
mov
punpckhdq
outsb
pop
movsb
aad
lahf
push
mov
dec
les
and
je
lret
mov
xor
fs
push
repz
test
jmp
testl
mov
jns
xor
inc
pop
pusha
lods
fcomps
cmp
es
ds
and
xor
loope
nop
or
mov
je
jl
jnp
xlat
test
or
nop
push
cmp
or
stos
and
inc
or
pop
sub
packsswb
jbe
insl
test
adcb
dec
lods
sub
pop
push
mov
dec
push
les
mov
add
push
add
sbb
xchg
movsl
pop
stos
je
xor
and
aaa
xor
inc
adc
jnp
imul
in
inc
int3
ds
push
xchg
stos
les
dec
scas
addr16
or
sub
sbb
lds
mov
cmpsb
dec
fcoml
stos
out
cli
xlat
push
jbe
mov
jnp
movb
mov
cmpsb
fwait
stc
daa
icebp
cmpsl
push
and
push
cmp
inc
mov
inc
add
adcb
pop
cmp
stos
xor
stos
test
insb
sti
adc
pop
xlat
or
mov
mov
jle
ds
scas
dec
push
pop
pushl
out
stos
repz
mov
sti
cmpsl
stos
ljmp
lock
jb
mov
fs
xchg
mov
dec
pop
scas
xchg
jmp
into
cli
mov
jne
xchg
stos
ljmp
jmp
jecxz
cmpsb
add
sub
stc
sbb
xchg
stos
mov
xor
hlt
dec
sahf
stos
stc
pop
jle
insb
push
loopne
jmp
call
or
repnz
dec
lret
vpmadcsswd
sbb
cmp
popa
push
stos
add
imul
ljmp
add
and
push
xor
insl
dec
out
out
push
inc
pop
stos
xor
jo
xrelease
movsb
inc
jp
inc
xchg
sbb
push
xor
push
push
cmpsl
cltd
stos
fdivs
push
sub
cmc
cmpsb
jmp
push
jnp
jl
scas
lcall
sub
jmp
add
jno
ret
adc
mov
xor
xchg
mov
fisttps
push
int3
fwait
lock
ss
and
sbb
stc
sbb
imul
out
sbb
xchg
stos
ret
aaa
or
test
stos
loopne
lret
sti
inc
lea
stos
pop
xlat
ret
roll
jb
repnz
pop
mov
adc
imul
mov
xor
push
mov
ja
or
push
mov
inc
outsl
inc
mov
popf
cmp
lock
dec
jnp
mov
jne
ret
popa
imul
mov
sub
icebp
dec
scas
mov
lods
pop
dec
push
fs
das
test
jmp
inc
pop
popf
enter
jmp
adc
sahf
jecxz
cmp
add
mov
sbbl
push
cmp
lods
sbb
ret
lock
xchg
sbb
and
shlb
scas
inc
stos
cmc
mov
test
movsl
stos
xor
xchg
cwtl
mov
out
push
lods
adc
mov
pushf
pop
or
stos
cmp
arpl
xor
cmp
inc
xor
mov
stos
pop
ja
sub
aaa
stos
sub
xchg
inc
daa
push
ja
cmp
mov
push
inc
mov
pop
xor
jae
sub
pop
imul
into
xor
mov
stos
loope
sbb
stc
test
mov
push
sbb
or
lods
mov
jp
ficomps
stc
xor
mov
ret
dec
loopne
fwait
inc
xchg
out
dec
out
stos
and
sub
sahf
lock
and
mov
mov
push
cmp
pop
or
mov
push
shrl
sbb
and
adc
je
imull
addr16
push
insl
add
fwait
pop
dec
xor
pop
pop
lea
mov
shll
add
in
sub
adc
push
add
or
dec
mov
gs
int3
ret
in
and
imul
stc
jbe
movsl
sarb
pop
xchg
jno
mov
lahf
aam
lods
sbb
stos
sbb
icebp
inc
repz
fwait
xor
popa
push
stos
add
adc
cmp
pop
das
ljmp
stc
stos
add
ljmp
cwtl
stos
fldl
adc
stos
pop
lds
das
popw
pop
es
jo
imul
in
stos
pop
mov
dec
mov
fsts
ds
stos
sub
xchg
stos
out
cmp
dec
leave
daa
jg
enter
xchg
push
push
fsubl
test
or
sbb
dec
sti
outsl
inc
adc
iret
inc
mov
rcl
popf
in
stos
mov
ja
std
stos
fsubrp
inc
adc
sahf
cmp
stos
xor
cmp
stos
push
enter
cmp
sub
stos
sbb
and
push
jmp
mov
stos
adc
loopne
lret
dec
dec
in
lret
inc
cmp
cmpsl
fcmovnbe
in
xchg
push
sub
push
xor
sub
cwtl
imul
sahf
stos
pop
movsb
bnd
xlat
jb
test
xchg
out
xchg
dec
lock
jle
push
sbb
pop
push
jo
mov
jecxz
stos
fmulp
mov
push
out
xor
cld
daa
push
ja
stos
dec
sub
or
or
pop
stos
dec
repnz
loopne
insb
stos
enter
test
arpl
inc
pop
imul
stos
rcll
das
sbb
mov
push
stos
adcl
push
imulb
in
sbb
and
xor
mov
scas
push
or
ja
xor
in
gs
mov
popa
mov
mov
movsb
fisttpll
jns
fistpll
and
jae
xor
and
out
mov
mov
es
xchg
imul
lahf
stos
lahf
xchg
cmp
push
clc
sbb
push
push
lret
in
out
dec
shr
stos
pop
inc
nop
pcmpeqd
and
push
stos
ds
std
push
dec
push
xor
arpl
mov
xor
inc
stos
sbb
frstor
and
stos
test
lods
mov
stos
sar
inc
leave
sbb
stos
inc
rorl
hlt
mov
cmp
shlb
sub
imul
lahf
sbb
into
ds
inc
xor
mov
stos
sbb
xor
jl
outsb
aam
mov
push
notb
xchg
ds
or
stos
test
sbb
sub
outsb
add
xor
es
adc
stos
je
ret
jo
add
sub
lea
imul
cmpsl
cmc
xor
xchg
xchg
or
cld
add
sbb
test
bts
sbb
popf
and
jecxz
cmp
adc
sbb
stc
cli
fs
aam
stos
cmp
fsubrl
stos
cmp
cmc
mov
cmpsb
out
jmp
movsl
enter
mov
inc
pop
fs
sub
or
fcmovnb
dec
mov
adc
mov
push
sub
lea
repnz
dec
push
xchg
adc
jl
movsb
mov
mov
lds
lods
scas
push
fisubrs
or
call
cmpsb
jno
fiaddl
mov
push
dec
stos
mov
scas
insl
pop
stos
or
movsl
lret
add
test
cmpsb
pop
imul
sub
fwait
shl
ret
push
mov
andb
nopl
stos
jns
pop
fldt
adc
dec
stos
mov
or
and
inc
cmp
sub
js
mov
xchg
xchg
or
insb
sub
adc
jp
jecxz
stos
push
jns
dec
jbe
mov
or
movsb
ficoms
imul
stos
xchg
dec
cmp
jo
pusha
sbb
adc
push
outsb
xchg
stos
xor
lret
adc
cmp
outsl
pop
stos
subl
or
stos
sub
mov
int
leave
lock
stos
sub
xor
hlt
sub
pop
mov
mov
stos
sbb
clc
adc
dec
ret
hlt
cmp
out
aaa
cld
pushf
jns
sahf
jbe
fimull
mov
sub
daa
dec
sbb
sub
bound
icebp
or
add
mov
cmp
pop
mov
jns
aaa
push
leave
ret
out
ds
stos
enter
insb
scas
dec
mov
xchg
cmp
push
jno
and
movsl
cmp
rorb
int
mov
out
in
stos
jae
aam
jle
in
xchg
in
scas
stc
adc
fsubrs
mov
xor
jns
jbe
xlat
insl
xchg
sbb
out
loopne
in
mov
pusha
add
out
or
add
stos
xor
inc
xchg
pop
cmp
shll
stos
fs
sub
dec
ret
stos
sbb
cmp
jmp
mov
lods
stos
addl
repz
inc
cmp
pop
fdivrl
rorl
push
stos
mov
mov
std
cmp
stos
int3
xchg
mov
cmp
cmp
call
add
mov
in
pop
stos
sbbb
cmp
pop
push
xchg
mov
das
stos
mov
mov
fsubrp
rorb
iret
ret
pop
dec
inc
stos
cld
rclb
mov
call
in
mov
mov
stos
repz
push
pop
push
imul
dec
into
cltd
mov
inc
sub
andl
loop
jo
mov
imul
hlt
sub
lea
ss
inc
scas
pushf
xor
stos
test
mov
sub
jp
add
cmp
stos
std
andb
les
push
fildll
push
and
je
and
xchg
stos
out
pop
dec
scas
fists
hlt
xchg
sub
push
pop
stos
add
adc
iret
xor
inc
ss
setp
dec
shll
movsl
xchg
sbb
mov
pusha
xchg
gs
adc
or
and
lret
js
stos
outsl
push
lcall
xchg
inc
or
mov
movsb
js
xor
mov
in
mov
subb
cmpsl
sub
stos
push
jmp
sti
or
push
pop
arpl
add
xchg
test
push
add
ficoms
adc
dec
mov
sbb
add
pop
movsb
adc
out
push
in
loope
adc
sub
stos
movsb
test
push
es
and
js
stos
call
idiv
mov
cmp
cmp
sbb
push
dec
stos
xchg
and
out
lcall
jne
mov
aam
fcoms
pop
cmp
push
imul
fldl
mov
jbe
adc
jmp
je
enter
jmp
iret
lods
or
insb
jo
pop
insl
stos
or
aam
stos
sub
jns
stos
and
jle
sbb
mov
lahf
test
aad
faddl
jno
stos
xchg
arpl
sarl
stos
insb
es
xor
ret
and
mov
frstor
cmp
sbb
and
rcl
cltd
scas
xchg
ljmp
and
outsb
aad
pushf
lret
sti
mov
bound
jl
inc
faddl
xorl
mov
mov
in
and
xor
fldt
push
ss
push
pop
xchg
addr16
pushf
jno
adcb
mov
stos
aad
mov
ret
pop
add
stos
xchg
rcr
bound
repz
sub
stos
out
dec
xchg
push
cmpsb
mov
popl
xor
or
stos
stos
in
add
scas
addr16
out
loop
fneni(8087
or
adcb
mov
jne
aas
mov
aad
fldt
lcall
dec
test
jl
pop
adcb
adc
mov
xchg
inc
dec
and
iret
add
cli
in
enter
mov
adc
sub
dec
fcoms
stos
sbb
daa
and
icebp
push
mov
push
jo
sub
stos
jae
ds
pop
in
push
stos
mov
insb
lahf
xor
jns
and
jo
jb
imul
scas
fs
stos
outsb
dec
mov
shrl
shrb
xchg
loop
cld
mov
and
pop
call
stos
xor
add
in
lock
pop
ljmp
cmpb
movsb
push
lods
repz
es
push
inc
add
sub
jb
daa
das
cli
jb
xchg
lods
or
nop
fldcw
test
add
insb
pop
mov
or
pop
xor
sub
cmc
rcrb
cmp
stos
push
inc
cld
dec
das
jne
or
fistpll
or
xchg
addr16
jl
pop
fwait
lock
push
outsb
pop
and
test
mov
int
stos
sahf
repz
negl
xchg
std
addr16
lods
insb
imul
addr16
push
sub
shrl
jp
mov
pop
stos
and
out
cmp
sub
stos
ret
pop
jge
mov
stos
xor
cmp
or
iret
arpl
xchg
xchg
add
les
adc
aaa
push
sbb
mov
jnp
ja
nop
pushf
stos
mov
in
js
pop
aaa
jmp
or
add
stos
scas
mov
sbb
cmc
stos
ret
imull
xchg
test
add
inc
push
ljmp
fistpll
or
inc
and
fsubr
stos
sti
add
loop
in
add
adc
dec
out
stos
aam
dec
mov
in
loopne
fwait
hlt
je
out
jge
cmc
int
cli
stos
scas
dec
mov
bound
filds
jmp
dec
inc
stos
fwait
int3
sbb
xor
inc
adc
dec
push
ret
test
xor
sbb
outsl
out
nop
popf
pushf
stos
and
xor
pop
push
sub
sbb
or
or
stos
pushf
jo
add
repz
stos
xchg
inc
in
fldt
inc
inc
push
dec
stos
cmpsl
ljmp
jmp
cmp
out
mov
cmp
test
xchg
jne
inc
imul
mov
imul
adc
in
mov
cld
fsub
aas
and
lods
ja
sbb
xor
cmp
push
ja
cltd
test
xor
dec
lret
mov
rcrl
jno
popf
xchg
push
cld
shl
jbe
les
xchg
adc
push
cmp
dec
stos
lret
aas
xchg
mov
stos
fs
dec
insl
jecxz
and
inc
mov
mov
mov
pop
dec
pop
lods
add
sub
adc
sbb
pop
aas
pop
lahf
cmp
jle
push
mov
mov
jb
stos
ficomps
or
stos
push
add
leave
lcall
ret
ja
lods
sbbb
cmp
shrl
fsubrs
push
xchg
fwait
push
add
mov
mov
daa
push
sbb
xor
lock
dec
xchg
xor
es
stos
cmp
imul
fcoml
jns
pop
xchg
fcomi
stos
mov
jecxz
ss
lahf
lret
out
loop
lods
arpl
sub
ljmp
and
pop
cmpl
stos
les
icebp
in
inc
inc
push
jge
xor
in
imul
loope
mov
pop
fimuls
daa
fcmovb
adcl
loop
inc
addr16
fsubr
mov
or
out
arpl
dec
push
pop
stos
bound
movntq
jmp
push
movsl
mov
and
pushf
inc
mov
cld
xchg
stos
fistl
pop
in
stos
dec
daa
push
pop
mov
call
push
xchg
dec
repnz
stos
push
add
mulb
lcall
ljmp
mov
dec
sahf
push
cmp
pop
popf
mull
and
sbb
movsb
jp
mov
aad
cmpsb
or
push
rcrb
mov
rolb
outsb
dec
cmp
push
jnp
mov
jbe
mov
sub
imul
cli
ja
push
stos
push
test
xchg
adc
imul
stos
xor
or
xchg
loope
push
ljmp
xchg
dec
insw
sub
cmp
mov
stos
xchg
stc
lds
dec
mov
cmp
mov
je
push
sti
inc
lahf
dec
movsb
jae
dec
or
repz
mov
outsl
stos
vcomiss
pop
mov
sub
scas
cmpsb
pop
jp
mov
adc
stos
rclb
das
daa
bnd
cmp
jmp
mov
xchg
ljmp
mov
jnp
mov
outsl
jmp
adc
xor
dec
sbb
push
lahf
mov
pop
add
fcomp
xlat
scas
test
or
xchg
mov
jp
add
mov
mov
lods
dec
push
add
outsl
fcompl
sub
lods
std
push
lret
stos
adc
jl
imul
inc
into
xchg
stos
mov
lock
inc
js
movsl
push
xchg
cmp
jae
and
scas
jmp
gs
lret
and
fucomp
push
dec
mov
aam
cmp
pusha
cmc
in
fwait
sbb
inc
sub
iret
idivl
sub
pop
cli
in
adc
mov
pop
bnd
aam
lcall
scas
cli
mov
cld
dec
or
in
inc
lcall
imul
mov
jne
and
popa
addr16
fwait
sbb
cld
inc
mov
sub
stos
stos
and
mov
loope
xchg
arpl
mov
jg
lea
sahf
jae
mov
stos
mov
jbe
fildll
rcrl
stos
lock
test
mov
je
fidivrl
out
adc
cltd
push
popa
or
cmpsb
jg
push
rorl
stos
mov
std
je
push
jo
jne
mov
jmp
popf
xor
inc
stc
stos
cmp
lods
in
adc
lods
add
repz
xor
cli
in
pop
xchg
stos
test
and
sahf
xchg
add
xchg
pop
in
lcall
scas
mov
pop
idiv
adc
inc
cmp
jns
pop
mov
cmp
sub
fistpll
insl
fwait
xchg
into
push
jl
mov
popf
xchg
cmp
and
jle
sbb
or
pop
jmp
mov
stos
mov
fsubr
adc
jecxz
lock
cld
push
int
hlt
add
mov
lea
pop
daa
stc
mov
cli
sbb
loope
stos
sarl
mov
mov
jae
pop
enter
std
pop
mov
sub
cmc
and
fwait
sub
popf
movsl
cmp
das
xchg
out
jno
stos
fucomi
cmc
lock
stos
data16
in
rolb
add
cmp
push
stos
dec
add
sub
sbb
pop
repz
repnz
stos
nop
hlt
xor
push
cmp
sub
dec
sub
out
shll
jmp
pavgb
pop
xchg
jnp
pop
jns
ss
shlb
pop
pop
jmp
pop
out
mov
xor
cmp
in
leave
xchg
push
pop
mov
and
dec
mov
stos
push
xchg
mov
addb
fsubs
pop
stos
js
inc
mov
stos
imul
stos
mov
lods
and
ja
stos
js
jle
cmp
and
arpl
inc
sub
fdivs
imul
scas
and
lcall
push
dec
stos
loop
psllq
ret
adc
stos
sti
pop
xor
cld
shl
dec
mov
popl
and
out
sarl
adc
and
in
sub
jnp
outsl
rorb
cld
addr16
jg
mov
jns
sbb
das
ret
mov
dec
out
shr
stos
mov
mov
test
xchg
xchg
jno
dec
cs
fs
xchg
cmp
decl
xchg
sahf
dec
mov
push
xor
jge
lret
or
add
xchg
test
sbb
stos
and
sub
mov
iret
rorb
fwait
in
repz
mov
xchg
push
push
and
in
movsl
and
jns
iret
ja
cmp
xchg
cwtl
stos
jno
nop
jle
dec
mov
xchg
xchg
jbe
test
stos
repz
add
stos
pop
dec
sti
mov
sub
ja
out
ret
out
sub
push
fwait
sarb
shr
adcl
icebp
nop
leave
jp,pn
adc
jmp
and
ja
stos
add
clc
cmp
push
das
out
jne
stos
ss
into
pop
mov
lahf
xor
add
adc
adc
shrl
dec
jbe
stos
aad
sti
jg
jae
pop
stos
or
jmp
xor
stos
test
dec
xchg
mov
xchg
push
and
fwait
in
cmp
pop
mov
lods
orl
in
adc
hlt
jmp
sub
shrb
dec
lahf
xchg
sub
lret
sbb
aad
stos
lea
sub
inc
sbb
and
inc
popa
xchg
mov
mov
stos
ja
jmp
xor
and
jmp
xlat
in
pushf
shll
es
ljmp
pop
outsb
jle
inc
stos
mov
lods
aas
adc
fs
fldpi
jno
mov
xchg
or
mulb
and
loop
dec
jb
jl
cltd
outsl
daa
sbb
stos
or
das
jle
lahf
fmull
pop
mov
jb
loopne
scas
int3
adc
stos
stos
inc
cltd
clc
pushf
mov
xchg
testl
jmp
aas
cli
stos
movsb
jo
jns
mov
pop
stos
adc
test
enter
stos
adc
fs
lea
stos
cwtl
es
jmp
stos
adc
insb
dec
and
subb
xor
ret
adc
sub
es
jmp
adc
test
stos
bswap
cmpsb
call
stos
jge
cmp
push
cwtl
dec
xor
stos
xchg
add
imul
jmp
sbb
xchg
xchg
mov
out
cmp
lahf
lahf
subb
dec
movsl
sbb
std
lret
or
xor
stos
xchg
jge
pop
push
lcall
jo
mov
dec
stos
adc
lahf
cmp
jns
stos
mov
and
cmp
imul
subl
mov
es
xchg
inc
jnp
imul
enter
cmp
js
stos
jbe
aaa
out
xor
fwait
push
inc
jp
sbb
rorb
mov
mov
leave
stos
outsl
out
cmpsl
push
push
scas
cs
stos
sub
push
dec
cmp
popf
sub
stos
xor
sbb
outsb
mov
dec
addl
add
sbb
cmp
es
xchg
daa
dec
fwait
mov
stos
jl
lahf
call
xchg
jg
out
mov
mov
xchg
addr16
pop
movsl
cmp
mov
rcl
test
imull
test
testb
push
shrl
movsb
subl
gs
out
lret
jne
mov
sarl
mov
fisttps
lahf
and
push
out
pop
xor
mov
pop
dec
mov
cmp
pop
popa
jecxz
adc
sbb
daa
ljmp
cmpsb
xlat
dec
cmp
dec
cmp
cld
sub
jo
rorb
test
mov
cmpsl
divb
call
or
imul
test
repnz
fisubrs
fs
add
xor
mov
or
popa
sbb
cwtl
or
cmp
mov
and
addr16
and
imul
imul
out
and
das
sbb
sub
lea
mov
cmp
out
mov
repnz
lahf
jge
mov
mov
sub
pop
fwait
or
inc
or
ds
xchg
mov
inc
xchg
mov
jg
aam
mov
daa
mov
xlat
cmp
in
mov
stos
adc
jae
data16
outsb
nop
shl
das
and
insl
jno
movsb
stos
and
xor
and
mov
gs
sub
aam
imul
sbb
sub
scas
sbb
stos
repz
mov
popf
stos
mov
aaa
and
jp
mov
stos
fdivl
mov
stos
aaa
add
pop
add
lahf
nop
lods
cli
stos
in
and
daa
je
xor
in
cmc
shlb
cmpsl
lahf
rclb
jmp
mov
pop
and
imul
imulb
mov
roll
mov
xor
aad
jno
test
faddl
shrl
push
mov
scas
andb
sbb
or
imul
insl
mov
xchg
jecxz
push
lods
lea
popf
aam
pop
jle
jl
mov
mov
mov
dec
lods
cmp
jg,pt
aad
scas
xchg
stos
inc
int3
movsb
bound
or
or
fucomip
add
pop
mov
aad
cmc
sbb
loope
cltd
jne
cmp
xchg
xchg
mov
jg
add
adc
xlat
loope
sbb
jo
xor
fidivrs
adc
enter
add
jl
push
loopne
dec
inc
sub
cld
mov
jmp
push
stos
or
mov
icebp
movsl
mov
add
push
mov
mov
mov
icebp
std
jle
push
mov
cmpsb
push
mov
jmp
movsb
mov
jo
mov
stos
xchg
stos
scas
or
inc
mov
ja
inc
push
imul
orb
jae
pop
xchg
mov
push
nop
jns
stos
je
cmp
rolb
in
das
js
fldenv
mov
pop
inc
push
pusha
jmp
pop
or
dec
stos
lods
cwtl
cs
lods
pushl
inc
int3
out
pop
mov
cmp
cmp
subb
bndldx
enter
jecxz
pop
xor
fwait
inc
push
xchg
jne
pop
jle
stos
cmp
movsb
inc
cmp
push
scas
inc
adc
insl
mov
mov
or
xchg
ret
inc
sbb
push
movsl
daa
lock
xor
push
push
loop
xchg
mov
mov
daa
xor
in
dec
push
push
push
cltd
movsb
jne
inc
popf
mov
inc
aad
movb
push
fsubrs
je
mov
out
or
stos
push
xor
mov
loope
mov
jmp
push
lret
or
dec
xchg
addb
arpl
cmpsb
mov
shrl
mov
sbb
inc
call
push
sbb
lds
stos
cmpsl
mov
adc
mov
xchg
jl
enter
stos
mov
pop
cmp
jbe
jp
pop
leave
push
push
stos
sbb
lea
popf
fidivrl
mov
and
repnz
pop
aam
in
sbbl
push
out
mov
stos
mov
cmpsl
mov
mov
std
and
stos
jbe
jle
xchg
sbb
stos
sub
mov
aaa
sahf
jne
stos
mov
xchg
cmp
and
mov
cmp
fnsave
and
or
ret
cmc
stos
mov
push
push
test
ja
sub
adc
mov
jmp
jo
and
jns
mov
mov
mov
xor
mov
jmp
mov
movsb
aaa
test
and
mov
mov
cwtl
mov
push
dec
mov
into
mov
lahf
jle
stos
pusha
add
and
pop
and
mov
mov
nop
sbb
fwait
outsb
jle
fbstp
pop
lock
mov
jmp
cmpsl
test
iret
push
stos
sbb
pop
out
cmp
or
push
stos
fs
mov
xor
sub
mov
mov
cwtl
and
stos
push
xor
cmpsl
mov
jns
xor
cwtl
shrb
stos
test
rcll
push
movsb
push
icebp
xchg
mov
stos
xor
push
stos
xchg
nop
jae
inc
add
imul
or
add
pop
popa
cwtl
and
mov
adc
xchg
push
stos
je
mov
movsb
xor
sub
push
fs
xor
rcl
repnz
leave
lea
lods
mov
test
mov
addr16
jne
pop
cmpsl
ds
or
inc
imul
imull
data16
dec
push
sahf
orl
pop
stos
xor
out
ljmp
xlat
stos
jnp
or
sbb
and
dec
incl
stos
sbb
in
push
daa
mov
jmp
mov
dec
sbb
jl
out
in
or
and
test
mov
adc
arpl
xchg
scas
stos
jnp
lea
stos
jnp
cli
cwtl
cltd
mov
je
or
repnz
stos
dec
sub
pop
mov
mov
shlb
bound
mov
pop
push
inc
stos
and
or
stos
gs
movsl
test
pop
mov
fwait
stos
bound
sub
lahf
stos
fisubs
test
aam
sub
pop
sbb
mov
mov
mov
lret
push
popa
jp
adc
or
inc
stos
jg
or
mov
repnz
push
add
cmp
mov
test
xchg
int
stos
add
cli
mov
stos
ljmp
mov
mov
adc
test
mov
stos
pop
jae
xlat
xor
addr16
mov
jl
sbb
or
mov
mov
adc
jmp
stos
outsl
mov
xor
inc
mov
pop
stos
mov
xchg
jmp
jbe
adc
stos
cmp
sub
scas
test
cld
andl
jg
das
adc
jo
inc
and
movsb
mov
daa
pop
xchg
lods
ds
stos
rcrl
jmp
xchg
cmp
dec
stos
push
mov
adc
pop
sub
stos
mov
popa
xor
adc
pop
push
es
pop
in
daa
fldenv
mov
je
push
movb
mov
cwtl
dec
xchg
push
insl
mov
stos
test
enter
rclb
arpl
xchg
jno
mov
adc
daa
idivb
cs
sbb
sbb
sub
iretw
add
lcall
dec
stos
cld
fcmovnu
mov
xor
jne
stos
out
pushf
addr16
in
or
flds
loopne
xchg
mov
adc
push
push
notl
xchg
test
stos
sbb
cwtl
add
iret
bound
in
xor
xchg
xchg
stos
movsl
mov
arpl
lds
in
cmpsb
mov
in
dec
daa
pavgb
outsb
mov
mov
aas
adc
icebp
stos
and
and
mov
push
sarb
add
aaa
push
in
jbe
adc
scas
xor
sbb
pop
pop
mov
add
shll
xchg
sbb
imul
ljmp
adc
ret
arpl
nop
xchg
or
scas
fmuls
nop
fwait
ds
icebp
insl
jns
push
sbb
mov
stos
and
xchg
ja
jmp
pop
cmpb
dec
stos
cmp
scas
pop
inc
jle
cltd
daa
icebp
cmovp
cmp
out
iret
cmpsb
lahf
mov
or
stc
daa
scas
stos
push
in
out
shlb
jg
stos
and
mov
stos
lods
sub
lret
lds
popa
in
imulb
pop
sbb
xchg
stos
and
mov
jmp
mov
add
aaa
push
daa
mov
pop
shrl
in
or
sbb
mov
cmp
arpl
fwait
addr16
mov
mov
in
pop
cmc
int3
loop
in
ret
test
mov
jl
mov
addr16
mov
mov
fsubp
and
jbe
repnz
cmpsl
ljmp
sbb
shrl
nop
sub
sub
and
mov
pop
sub
and
mov
stos
test
mov
sbb
shlb
stos
test
lock
dec
leave
stos
or
push
sub
fldl
ljmp
mov
bound
mov
stos
ret
push
mov
hlt
daa
add
shrb
imul
jnp
dec
mov
rorl
push
inc
push
loop
sbb
fwait
xor
inc
mov
jno
push
stos
clc
cmp
xchg
dec
ljmp
orb
fimuls
movsb
loopne
add
mulb
inc
mov
cwtl
stos
orps
cmp
mov
pop
cmc
test
sub
pop
shll
push
stos
bound
xchg
mov
jle
or
sub
dec
ret
xchg
popa
xchg
mov
pushf
fwait
and
mov
xor
ret
xchg
mov
pop
push
push
mov
scas
jge
gs
sbbb
xor
dec
mov
pusha
pop
push
xchg
cmp
pop
cmp
push
stos
push
jbe
jno
adc
inc
aad
daa
stc
call
les
or
jmp
mov
jns
mov
pushl
in
sbb
int
jmp
mov
xchg
lcall
sbb
out
jge
adc
stos
push
mov
scas
push
cmp
xor
mov
or
data16
movsl
cmp
dec
loope
cmp
cld
out
sub
cmpl
or
mov
xor
cmp
pop
out
jp
inc
call
insl
sbb
pop
icebp
cmp
clc
out
mov
cwtl
pop
xor
and
cmp
jp
jmp
cmp
lods
mov
cmp
pop
imul
sub
stos
jns
rorb
xor
test
subb
jbe
test
stos
adc
mov
jmp
mov
insl
in
stos
cmp
cmp
idiv
pop
lods
and
xchg
movsb
sbbl
notl
out
inc
sti
mov
lds
scas
sub
pop
incb
enter
xor
ljmp
xchg
jmp
and
les
aas
fdivrp
pusha
stos
int
sbb
cli
pop
stos
lds
xlat
call
mov
lods
lret
iret
stos
push
popa
and
pop
les
fisubrs
aas
inc
fwait
jl
scas
js
sbb
stos
outsl
aam
enter
cli
push
cmp
lods
jge
scas
dec
pusha
add
mov
jo
jnp
leave
stos
stos
outsl
ljmp
fildll
imul
imul
insl
in
xor
lea
push
aaa
sub
and
dec
stos
sahf
and
pop
dec
jg
stos
ret
lea
shr
mov
shl
xchg
js
stos
cmpsb
push
ret
imul
call
fistl
lods
sub
push
leave
sti
push
loope
xchg
or
scas
addr16
repnz
rorb
mov
pusha
addr16
or
js
orl
push
iret
xchg
jge
jl
dec
stos
lcall
push
xchg
stos
jl
js
sub
sub
cmpsb
xchg
stos
mov
add
jge
adc
inc
adc
fldt
les
int
out
jmp
mov
cltd
pop
cwtl
lahf
aam
xchg
mov
adc
xchg
mov
add
in
iret
pusha
and
mov
mov
lods
dec
stos
les
cmp
popf
or
cmpsb
rolb
cwtl
repnz
ss
decb
mov
inc
pop
stos
ljmp
jb
imul
mov
mov
icebp
lcall
imul
mov
mov
popf
sbb
xor
lods
stc
ljmp
pop
push
rep
xchg
lahf
mov
lea
addr16
arpl
adc
in
stos
imul
inc
cwtl
sbb
jae
mov
es
hlt
mov
stos
popa
popf
cmp
push
jmp
stos
xchg
shrl
push
mov
in
jmp
sub
jle
lds
push
or
int
dec
adc
js
imulb
sub
jmp
mov
mov
or
pop
and
sub
push
hlt
lret
aas
xor
jmp
mov
cltd
stc
ret
pop
mov
or
xor
call
loope
mov
jp
cmp
in
mov
pop
stos
lahf
jg
or
or
xchg
pushf
cltd
fwait
jbe
adc
jmp
jmp
xchg
ret
jecxz
xchg
pop
stos
xchg
mov
jge
dec
sub
jno
dec
aas
and
inc
stos
sti
lods
fadds
icebp
stos
pop
cli
jo
adc
mov
nop
loope
std
stos
leave
aam
dec
push
scas
repnz
stos
jno
arpl
int3
popf
pop
cmpsl
lahf
jne
test
sbb
jne
ljmp
shl
push
test
sub
stos
aas
cs
aaa
xor
loope
stos
cltd
std
push
gs
dec
xchg
in
addr16
data16
arpl
cmpsb
cmp
mov
jl
stos
dec
dec
pop
mov
stos
cmp
push
fldt
sub
imul
ret
and
lahf
imul
mov
add
sub
arpl
out
mov
stos
mov
repnz
cmpsl
bound
arpl
enter
push
fbld
dec
xor
dec
fsub
xchg
xchg
sbb
push
stos
push
repz
mov
mov
stos
or
dec
mov
and
fs
mov
or
sub
in
addb
cmp
mov
pushf
mov
stos
dec
fcomps
js
adc
dec
stos
scas
loop
lods
adc
mov
mov
mov
sbb
shlb
stos
sbbl
push
xor
pop
add
mov
inc
mov
cli
js
stos
xor
stc
jb
test
jmp
testb
mov
enter
mov
rolb
lret
push
cwtl
fistpll
push
mov
push
cmpl
xchg
negl
adc
pop
mov
jno
stos
sub
jp
inc
sbb
mov
pop
jnp
out
jmp
push
fs
push
lahf
stos
cmp
xchg
pop
mov
imul
mov
jl
sub
stos
out
adcb
pop
dec
sub
mov
jns
xchg
stos
test
icebp
rclb
pop
adc
movsl
inc
and
and
stos
adc
sub
stos
xor
push
loop
cmp
mov
xchg
xchg
pop
ss
or
and
orb
test
stc
pop
mov
mov
sub
mov
bound
std
inc
lock
sub
shrl
add
ljmp
pop
insb
sub
imul
loop
ja
sbb
repz
in
mov
xchg
bnd
imul
add
xchg
rolb
lcall
sbb
sahf
mov
xchg
stos
pop
cmp
mov
and
lock
xchg
sbb
push
add
mov
repz
mov
adc
lret
lret
cmp
adc
mov
loope
sarb
aaa
push
jae
mov
xor
les
add
lods
std
addr16
stos
cs
sbb
stos
cmp
jmp
sbb
ficomps
stos
and
mov
mov
jns
xchg
jp
icebp
pop
stos
push
lahf
test
lods
int3
imul
mov
sub
mov
scas
daa
jnp
dec
stos
repnz
es
mov
stos
jno
out
push
xchg
mov
icebp
push
mov
lods
das
mov
popl
jmp
mov
push
lea
mov
and
and
mov
jmp
lret
cltd
lds
pop
dec
mov
mov
mov
je
stos
div
mov
lcall
dec
or
pop
ljmp
push
push
push
stos
dec
leave
movsl
cmp
or
fildll
pop
push
sbb
cs
jg
out
mov
div
sti
js
movsl
bound
jnp
enter
pop
lcall
xchg
sbb
mov
and
shlb
dec
mov
add
pop
and
stos
mov
fdivrl
shlb
stos
mov
push
sbb
inc
ds
dec
stos
xchg
jge
or
mov
mov
fs
or
lock
stos
fadds
outsb
mov
dec
clc
fnstenv
xchg
sub
mov
mov
mov
mov
and
xor
nop
dec
subl
mov
inc
stc
imul
xchg
clc
test
fsubl
cwtl
stos
add
ret
lods
push
stos
xchg
in
adc
rolb
in
fwait
test
popa
mov
jle
sub
fstpl
sub
rorl
mov
scas
es
cmp
mov
sbb
cmpsb
addr16
jmp
lret
out
repz
sahf
lcall
push
sbbb
push
movsb
adc
ret
mov
hlt
and
sbbb
cltd
push
cmp
inc
adc
daa
dec
movsb
inc
lods
xchg
lcall
sbb
arpl
lods
out
mov
repnz
dec
stos
add
adc
mov
cmc
out
pop
xchg
mov
xor
loop
adc
bound
xchg
js
data16
mov
cmp
dec
pop
popa
fldt
jle
jne
pop
mov
popf
in
xchg
jnp
xor
mov
fdiv
adc
push
push
adc
mov
pop
scas
cmpsl
xor
out
xchg
mov
pop
jmp
dec
push
mov
jae
stos
pop
fwait
std
xchg
inc
dec
clc
dec
stos
jg
bound
mov
and
aaa
pop
loope
scas
inc
out
push
aas
mov
fsubrl
subl
lret
outsl
push
mov
in
daa
pop
mov
stos
xchg
jns
adc
pop
popf
jmp
pop
pop
jl
cmpl
dec
sbb
mov
or
fildll
dec
or
int3
mov
inc
stos
ljmp
jae
mov
push
addr16
js
mov
jne
xchg
std
xorl
cltd
notb
sbb
lea
stos
addr16
les
mov
mov
or
pop
xchg
subl
out
mov
dec
push
inc
popl
movsb
stos
sub
xchg
add
mov
insb
aad
cmpsb
sbb
pop
stos
aas
pop
and
or
negb
cld
mov
pop
stos
ljmp
inc
stos
gs
aad
push
adc
and
lods
stos
sti
xchg
sub
jl
xlat
adc
stos
xor
mov
daa
mov
push
lahf
xchg
mov
shrb
jae
stos
sbb
pop
mov
inc
ret
xchg
mov
cmp
jno
test
stos
fsts
cltd
shl
pop
sub
jae
stos
idivb
outsl
or
mov
stos
push
xchg
fildl
int3
sub
adc
mov
in
out
stos
cwtl
arpl
sub
adc
lods
fsubrs
mov
decb
aas
jo
push
insl
dec
xchg
in
cmpsb
stos
xor
xlat
aas
stos
pop
fsubrp
xor
or
stos
test
xchg
inc
dec
stos
mov
mov
dec
stos
xlat
push
and
pop
call
adc
fwait
jp
out
movsb
stos
and
out
xchg
jmp
aaa
dec
fisttpll
loope
rcrb
fstps
je
dec
mov
pop
mov
dec
cli
imul
lcall
adc
stos
into
aad
cmp
xchg
pop
fs
data16
mov
stos
adc
loop
xor
shrl
iret
and
sahf
ljmp
pop
sbb
lcall
rcr
mov
sub
pop
mov
mov
aas
jnp
arpl
sbb
cld
ror
stos
push
cwtl
sub
adc
stos
ret
sbb
pop
cmc
test
add
sti
jae
andl
or
cmc
loope
imul
stc
iret
shlb
popf
sub
push
insb
mov
dec
vmwrite
cmpsb
cmp
stos
mov
push
and
cld
push
xchg
mov
cmovg
pop
das
imul
add
ljmp
loopne
jo
imul
push
call
cmp
push
sbb
push
std
jp
dec
push
daa
cmp
mov
jo
scas
aam
cmp
mov
iret
movsl
mov
lahf
hlt
lret
xchg
in
cmp
mov
fimull
por
pushf
int3
push
insb
mov
jbe
adc
jnp
sub
stos
je
jl
pop
and
imul
mov
mov
sbb
scas
xchg
or
push
sbb
jne
mov
ljmp
or
std
fwait
push
sub
stos
mov
pusha
shrb
or
jmp
add
xchg
call
mov
sbb
and
inc
jmp
les
enter
sub
xor
cmp
stos
jmp
fwait
aaa
cltd
stos
in
xchg
adc
mov
push
jg
pop
sub
xchg
mov
jne
cwtl
std
imul
jmp
sbb
add
jp
mov
adc
stos
cmp
je
mov
xchg
aas
xor
sahf
andl
cld
jno
and
jnp
stos
xchg
pop
mov
sub
data16
push
dec
mov
xchg
movsb
imul
mov
add
enter
lahf
addr16
stos
call
jg
jmp
inc
push
nop
inc
int
aad
fildl
or
mov
fldln2
out
mov
mov
jmp
or
cmp
imul
dec
jbe
fisubl
jne
test
adcb
fwait
xchg
cwtl
popl
xchg
jg
nop
add
add
jp
mov
jb
fucomi
xlat
fs
jns
pop
into
adc
test
xor
sub
stos
arpl
push
mov
subl
stos
lahf
dec
les
xor
adc
pop
stos
dec
xchg
sbb
jl
xchg
sub
les
mov
stos
xlat
inc
repz
addb
xchg
and
sub
cs
jecxz
sti
sub
sbb
stos
in
mov
pop
ficomps
stos
je
call
mov
sbb
orb
shl
mov
mov
fwait
mov
push
in
stos
mov
jg
mov
subb
add
jns
and
arpl
js
jge
mov
int
and
pop
stos
pusha
push
push
push
rorb
xchg
stos
mov
out
adc
jle
lahf
and
stos
sti
inc
push
ret
mov
stos
xor
jnp
dec
mov
xchg
mov
inc
and
xchg
scas
aam
fimuls
repz
negl
fistpll
jno
mov
push
lods
out
cmp
popf
cmp
in
stos
add
leave
sti
fldcw
jmp
mov
popf
clc
das
lods
sbb
ljmp
mov
outsl
stos
dec
and
mov
cmc
sbb
inc
arpl
sub
and
jle
dec
push
and
dec
das
mov
mov
xor
test
mov
lock
or
pusha
popf
movb
inc
scas
stos
in
and
shrl
aas
dec
repnz
sbb
lahf
pop
xchg
cmpsl
mov
popf
fldt
mov
jnp
stos
aaa
enter
psubsw
push
jbe
rcl
movl
pop
inc
in
mov
sub
pop
imul
stos
loopne
mov
push
outsb
mov
jmp
dec
push
sub
addr16
jne
imul
or
addr16
mov
arpl
push
lret
jg
shll
stos
jecxz
or
mov
aaa
lock
mov
lret
in
xchg
pusha
pop
mull
data16
outsl
ljmp
stos
stos
mov
dec
dec
cmpsl
mov
inc
leave
bound
movsl
xchg
add
stos
inc
jle
fwait
adc
dec
mov
pop
xor
outsb
dec
daa
inc
inc
out
fwait
sbb
imulb
je
ret
push
pop
xor
mov
xchg
out
insb
push
add
push
test
stos
cmc
mov
push
enter
test
int
ds
pop
mov
decb
xor
inc
scas
das
out
and
mov
adc
or
arpl
adc
stos
and
loopne
stos
mov
sub
pop
das
inc
lods
sbb
mov
adc
cmp
fildl
stos
mov
pop
adc
dec
sub
cmp
out
ja
stos
gs
stos
test
adc
xchg
cwtl
pushf
cmpsb
stos
idivl
sbb
mov
mov
push
push
or
divb
push
imul
jmp
mov
test
jae
mov
xchg
fld
mov
push
push
xchg
stos
lods
popa
mov
or
jl
stos
ljmp
stos
mov
clc
push
inc
lahf
or
xor
test
mov
push
stos
lahf
fcoml
mov
ret
mov
pop
lahf
fadd
mov
push
jno
pop
jmp
sub
pusha
cmc
stos
xchg
cmp
stos
ljmp
lods
stos
cmp
adc
ss
mov
cmp
mov
scas
insl
jo
lea
stos
mov
adc
stos
inc
jns
stc
mov
jne
or
and
pop
mov
ljmp
cmp
sub
or
pop
in
insl
rcrb
cmc
jmp
and
xor
imul
sub
jae
mov
aam
stos
test
movl
stos
pusha
xor
mov
sti
scas
stos
mov
into
ljmp
cli
orl
repnz
jmp
inc
pop
jmp
adc
mov
adc
sub
je
add
add
leave
cmp
mov
sbb
xchg
adc
and
mov
inc
cmp
inc
in
stos
add
adc
stos
cmpsb
lea
stos
or
fistpll
dec
popa
push
xor
negl
inc
fwait
xor
fwait
push
cs
mov
lahf
inc
jne
sub
rcrl
mov
jg
mov
stos
jmp
xchg
adc
or
xlat
push
scas
xchg
and
push
dec
mov
scas
stos
andb
stos
into
mov
imul
cmp
mov
xabort
pop
js
adcl
sbb
mov
inc
mov
stos
insb
push
mov
stc
inc
or
stos
mov
fistpll
stos
outsb
and
add
push
out
mov
bswap
aad
xchg
jnp
daa
stos
loopne
mov
cwtl
stos
cld
push
xor
mov
jmp
gs
mov
iret
sti
imul
test
stos
ljmp
push
stos
js
add
add
ret
xchg
cmp
xor
movsb
mov
test
cmpl
mov
xlat
fs
stos
sub
push
lea
ja
stos
ret
fldcw
popw
je
inc
or
ljmp
mov
out
stos
xchg
xchg
aaa
push
mov
mov
shrl
nop
popf
pusha
lcall
or
in
pop
shl
in
mov
stos
push
xor
cmc
imul
lds
cltd
push
sub
enter
fidivl
daa
daa
pop
dec
loopne
push
mov
jg
jns
imul
std
cmp
push
daa
mov
push
out
jmp
mov
jle
inc
cmp
ret
and
sub
and
stos
pop
jge
test
cmp
dec
stos
jmp
push
ret
cltd
mov
inc
pop
and
mov
add
fwait
jl
movsb
sub
movsl
out
dec
xor
addr16
in
sub
fistl
mov
rolb
inc
and
scas
cld
stos
in
add
int3
sub
jmp
or
aam
mov
sahf
xchg
shll
loope
shrb
pushf
stos
or
pop
fdiv
add
shlb
jbe
movsb
stos
adc
inc
push
and
add
rcrb
mov
aam
dec
lds
stos
push
pop
adc
sub
stos
dec
inc
cmpsl
lcall
pop
jmp
inc
dec
xchg
sahf
dec
xchg
cmc
adc
cmp
les
adc
shlb
int3
adc
and
dec
leave
add
aaa
stos
pop
inc
add
in
dec
sti
mov
add
xchg
mov
daa
incb
cli
push
sub
aas
mov
jnp
jge
stos
cmpxchg
movsb
stos
inc
cmp
jne
stos
add
inc
dec
int3
test
stos
push
push
push
outsl
jbe
mov
sarb
stos
subb
in
xchg
dec
sub
enter
push
pop
push
pop
sub
push
adc
and
arpl
daa
pushf
enter
or
xchg
sub
adc
mov
pop
popa
mov
xlat
sub
mov
hlt
stos
repnz
fwait
inc
inc
ljmp
push
ds
test
stos
xor
inc
xchg
lods
and
movsl
gs
std
stos
fstl
dec
negb
repnz
aaa
and
cs
push
push
enter
cmpsl
dec
ret
idivl
lods
stos
mov
push
or
jnp
push
shr
ds
xchg
xchg
sub
stos
xor
dec
stos
xchg
stos
jle
and
sti
nop
inc
stos
mov
push
sbb
stos
mov
popa
dec
or
mov
les
xchg
pop
ret
scas
mov
xchg
mov
divb
mov
imul
stos
or
cmpsb
dec
cli
push
fiaddl
inc
scas
ret
or
aaa
sahf
xor
pop
mov
and
es
stos
sub
mov
xchg
imul
stos
hlt
sbb
in
stos
ficomps
push
mov
enter
popf
or
pop
pop
pop
nop
fwait
out
sub
xchg
shrb
sti
call
movl
lods
popl
xchg
cwtl
stos
or
inc
ror
mov
jmp
stos
dec
arpl
xchg
push
aaa
push
mov
adc
insl
cs
shrl
sub
loop
jl
cmpsb
stos
sbb
cmpsw
lods
adc
dec
mov
xchg
pop
out
stos
ss
lds
stos
cmp
and
or
aad
stos
cli
mov
into
push
stos
dec
pop
or
add
add
push
push
push
pop
mov
push
jmp
stos
stos
bound
cmp
sub
cmpsl
add
stos
fisubrs
stos
cltd
lock
loope
and
jg
cli
orl
sbb
mov
or
loop
mov
lahf
test
mov
cmp
add
push
imul
inc
xor
mov
clc
cli
je
adc
mov
out
loop
stos
rorb
arpl
xchg
shlb
pusha
scas
outsb
jle
aaa
dec
xchg
fs
sbb
int
mov
mov
cmp
pop
stos
mov
popa
daa
test
and
aad
stos
xor
lods
mov
sub
movsl
stos
mov
xor
std
cli
int3
dec
inc
push
imul
push
aad
mov
leave
nop
xor
pop
stos
addl
iret
mov
subb
sub
stos
out
out
or
adc
and
mov
mov
jbe
ficompl
incl
shr
hlt
scas
pop
xchg
sub
stos
jne
ja
rcrl
push
add
icebp
test
or
cmp
push
jnp
push
popa
repz
sbb
loop
cs
xchg
lret
arpl
add
test
mov
ret
gs
rorb
stos
pop
das
fwait
push
pusha
adcl
stos
fdivs
mov
cmp
push
xor
fcoms
jb
stos
xor
pusha
mov
mov
mov
stos
pusha
mov
pop
insb
addb
xlat
aas
cltd
jmp
stos
sub
stc
repz
les
mov
cmpsb
loop
dec
xchg
cmc
cmp
cmp
add
stos
mov
push
stc
inc
je
sbb
stos
adc
aas
inc
in
stos
call
frstor
stos
jl
sub
jbe
xor
stos
pushf
aas
int3
xchg
xchg
dec
into
jae
lcall
inc
or
stos
push
ljmp
mov
ja
dec
or
mov
out
loopne
dec
xor
fs
ret
and
jbe
xchg
stos
dec
mov
xchg
mov
aaa
sub
lret
push
jl
xchg
arpl
movsb
int3
fisubl
fwait
les
mov
push
lock
and
enter
mov
stos
sub
cmp
aam
lret
pop
stos
mov
into
mov
lea
xchg
jecxz
mov
mov
inc
or
xchg
jp
mov
stos
ret
adc
add
jnp
cmp
stos
or
fwait
insb
xlat
imul
das
stos
int
push
mov
stos
add
leave
je
test
xchg
mov
notb
mov
push
test
pop
int
mov
mov
lock
icebp
adc
outsl
push
push
or
outsb
stos
push
clc
out
xchg
add
lea
xor
enter
popf
fwait
dec
fsts
adc
mov
mov
scas
and
insl
ficoms
jns
xchg
jo
int
mov
add
xchg
dec
xchg
sub
insl
shrb
cltd
jle
stos
add
popa
and
cmpsb
pop
mov
jmp
adc
ret
xchg
push
dec
stos
and
add
dec
push
jmp
cmp
cs
mov
fwait
mov
scas
lahf
fwait
sub
xchg
mov
fs
imul
mov
stos
out
stos
jae
dec
les
test
stos
pop
mov
ret
mov
cli
into
mov
mov
mov
imull
out
les
stos
jne
pop
pop
leave
dec
inc
stos
int3
xchg
or
in
loope
in
sub
pop
xchg
cmp
mov
or
xor
pop
sbb
ja
jbe
fstps
xchg
inc
lea
ror
in
xor
mov
insl
test
sbb
movsb
leave
mov
insb
cmpsb
push
add
data16
lahf
in
mov
jno
sub
popf
pop
stos
xchg
addb
shll
lods
jecxz
subl
mov
shrb
les
daa
pop
mov
dec
in
ret
mov
scas
xchg
xor
in
push
insb
pop
push
and
cmpsb
ret
jae
stos
lods
mov
cmpsl
or
cmp
sbb
out
inc
add
cmp
arpl
pop
mov
ja
push
adc
xor
popf
mov
dec
imul
fnstsw
loop
jne
lahf
popa
mov
sbb
dec
enter
lea
mov
lods
outsb
inc
jmp
nop
push
xor
insb
and
sub
mov
fnstenv
mov
js
sub
mov
stos
jg
test
sbb
jbe
fildl
je
cmp
and
inc
imul
movsb
mov
xchg
fisubl
mov
scas
xlat
push
int
stos
inc
insb
fnstenv
adcb
les
ja
mov
stos
mov
xchg
push
jmp
pop
in
cmp
dec
dec
mov
enter
jecxz
jne
fs
movsl
or
pop
stos
lcall
pop
adc
daa
insl
cltd
in
std
ja
xchg
sub
lock
mov
pop
nop
xor
ret
mov
push
imulb
sbb
inc
and
cmp
pop
into
sbb
inc
jnp
jno
loop
inc
stos
xor
mov
in
add
stos
mov
cmp
imul
push
stos
pop
out
shll
inc
lods
inc
jmp
xchg
dec
mov
stos
mov
cmp
insb
imul
pop
shlb
repz
aas
stos
stos
ljmp
in
popf
lret
or
mov
rorl
add
fistl
std
int
std
jle
sub
xchg
pop
subb
inc
and
sub
mov
stos
movl
stos
mov
shlb
cs
jge
cmp
daa
jmp
into
ss
pop
out
stos
dec
std
xor
and
mov
stos
cmc
loope
lret
cli
aam
lea
jns
xchg
imul
mov
mov
adc
jl
jo
jns
out
or
fldt
xchg
pop
sub
adc
arpl
stc
cmp
mov
push
push
pop
insl
out
sub
jp
mov
mov
mov
stos
cmpsl
push
push
cld
stos
pop
dec
pushf
push
mov
adc
xlat
xor
notb
and
xchg
jge
fwait
test
pushf
mov
cmp
mov
inc
ds
das
out
fbstp
lea
push
sti
xchg
shll
push
in
lock
jecxz
push
adc
test
push
dec
addr16
arpl
sar
mov
jns
insl
repz
test
dec
stos
faddl
mov
jae
scas
push
clc
pop
stos
mov
ja
bound
icebp
lcall
sub
mov
and
stos
xor
inc
stos
cmp
and
and
jmp
daa
adc
into
or
fwait
stos
icebp
lea
js
mov
sbb
adc
in
mov
arpl
sub
test
mov
mov
xchg
in
adc
add
enter
pushf
es
scas
cmp
shll
fsubs
push
dec
or
inc
adc
push
call
sbb
lahf
fsubrl
ror
arpl
pop
push
cltd
movsb
stos
pop
dec
inc
shl
mov
fsubs
mov
faddl
stos
ret
mov
pop
fldt
mov
xchg
add
lcall
mov
add
stos
mov
call
jbe
mov
adc
test
xchg
pop
dec
mov
aam
pop
daa
aad
mov
mov
mov
mov
sbb
in
stos
mov
mov
mov
push
mov
fmull
loope
rclb
mov
push
stos
into
cmp
jo
bnd
mov
inc
pop
or
lock
cwtl
mov
stos
fistpl
ja
movsb
mov
shlb
test
stos
lods
cmpsb
cwtl
out
fnstcw
push
hlt
or
movsl
adc
adc
imul
mov
adc
movsb
lds
mov
lret
stos
out
sub
pop
outsb
adc
stos
iret
or
inc
loop
ds
mov
sbb
or
mov
std
arpl
cltd
push
je
pop
jg
push
mov
stos
aad
lcall
shl
or
es
stos
mov
and
cli
cmpb
scas
jl
push
xchg
lea
pop
add
cwtl
int3
cmpsl
mov
sar
or
test
mov
push
sahf
push
or
loope
stos
out
mov
insl
inc
pushf
stos
subps
mov
add
jne
ljmp
sbb
push
pop
inc
scas
shll
xlat
mov
stc
jb
jmp
popa
inc
imul
stos
test
out
stos
insb
out
andb
or
ljmp
mov
out
gs
lret
test
outsb
rcl
cmp
push
xchg
mov
mov
pop
stos
add
mov
push
cmc
stos
out
subl
sub
aas
push
movsb
jno
mov
mov
std
inc
test
mov
add
stos
or
cwtl
dec
stos
adc
add
mov
fldcw
dec
stos
jo
hlt
fcomip
nop
cmp
enter
movsl
nop
and
stos
push
mov
ret
nop
fwait
sbb
les
push
xchg
xchg
insb
jne
push
xchg
shr
sti
dec
sub
sbb
mov
jge
out
xchg
fwait
pushf
subl
daa
xor
xchg
rclb
int
mov
dec
jecxz
mov
xchg
addb
jb
jle
arpl
daa
mov
push
jmp
aas
shrb
xchg
or
cmp
in
in
adc
xchg
mov
stos
jne
push
sub
cmp
aad
xchg
arpl
dec
mov
cwtl
pop
cld
stos
push
inc
movsb
std
stos
mov
inc
jge
stos
xchg
jnp
leave
int
adc
stos
das
fists
mov
and
jo
gs
in
jmp
add
cmpsb
in
shrl
cwtl
dec
sbb
repnz
imul
imul
mov
in
adc
fwait
inc
movsb
push
jne
push
out
orb
insl
sbb
into
lahf
stos
jne
cmp
gs
clc
bts
pushf
add
stos
mov
sub
mov
test
subb
repnz
stos
jo
cli
js
dec
gs
aas
das
leave
imul
and
or
lods
push
stos
or
add
dec
jp
jne
les
stos
lock
fidivs
cmp
sbb
test
sbb
les
mov
jbe
cmpsb
cmp
hlt
stos
scas
fdivrl
lods
pushf
enter
iret
stos
movsb
pusha
sub
cmpsl
jnp
stos
mov
mov
xchg
mov
stos
mov
add
lods
out
inc
stos
fdivs
dec
push
fdivl
mov
in
mov
sub
fiaddl
cmpsb
and
sbb
lds
js
push
push
lock
xchg
xchg
in
jae
sub
push
nop
add
stos
fwait
jecxz
jle
xor
pop
jb
xchg
ljmp
mov
dec
and
dec
nop
sub
lock
fisubrs
and
cmc
bound
mov
test
rolb
adc
xor
stos
sbb
mov
mov
push
sarl
adc
xchg
call
xchg
cmp
inc
outsb
xor
or
addr16
mov
jl
mov
lret
stos
gs
ja
push
movsb
or
stos
mov
ret
add
mov
in
mov
cmp
dec
clc
pop
stos
push
mov
inc
hlt
mov
mov
sub
call
mov
jne
pop
scas
jle
stos
rclb
jno
xlat
repnz
aas
xchg
rol
dec
pop
clc
stos
xor
bound
stos
icebp
pop
inc
push
push
fsubr
add
sub
test
push
aaa
push
stos
jbe
outsb
cmp
data16
sbb
xchg
xor
xor
mov
pop
xchg
add
and
shl
repz
xchg
sub
stos
test
test
mov
scas
inc
jg
imul
lods
inc
mov
mov
add
dec
or
nop
mov
xchg
inc
sub
lds
stos
nop
xchg
bound
stos
jp
dec
fsubrs
je
stos
pop
push
adc
adc
cs
xor
push
cwtl
stos
or
repnz
lock
insl
cmp
add
push
or
sub
or
push
jecxz
push
push
dec
mov
inc
sub
jo
adc
cmpl
xor
xchg
cmp
stos
xchg
xor
pop
jmp
sub
inc
mov
out
inc
scas
imul
mov
stos
mov
pop
adc
icebp
test
stos
cmpsl
and
sbbb
xlat
stos
les
mov
popf
jg
cmp
hlt
adc
add
inc
test
sbb
inc
and
add
sub
and
sub
popa
sbb
inc
leave
stos
cwtl
xchg
cmpsl
sub
jecxz
in
push
std
mov
push
xchg
and
lahf
cmp
pop
jb
mov
leave
stos
mov
insl
addr16
or
sub
mov
xchg
mov
js
cli
insb
fwait
push
mov
sahf
sub
das
cmp
sbb
dec
sub
jne
ret
movsb
stos
ss
dec
int
sarb
stos
push
sbbl
dec
pop
or
and
mov
adc
xor
and
stos
shl
iret
ret
cmp
lcall
aad
popa
mov
xorb
scas
push
jecxz
fwait
gs
fisubs
addr16
jne
or
lock
stos
push
cwtl
mov
add
push
sub
adc
hlt
pop
cltd
cwtl
and
lds
add
sbb
mov
unpckhps
push
pop
scas
ficompl
fwait
mov
mov
test
lods
xchg
stos
xor
popa
xchg
push
ret
stos
sub
aaa
lcall
faddl
dec
imul
lret
mov
mov
xchg
cmp
inc
sbb
cmp
mov
fucom
iret
jp
sti
stos
mov
inc
test
add
jno
fiadds
inc
push
xchg
sub
cmpsb
aad
mov
xchg
mov
or
test
clc
aas
pop
push
into
stos
fimull
stos
xchg
pop
imul
ja
cmp
xchg
cwtl
sub
sub
push
xchg
stos
mov
lods
and
aam
lcall
andl
outsl
mov
add
stos
fs
aam
xor
jmp
cmp
dec
push
mov
fmull
jo
out
stos
out
or
push
lret
cmpsb
stos
adc
push
cwtl
push
jp
stos
mul
test
mov
sbb
dec
mov
mov
mov
movsb
push
jmp
dec
dec
test
xchg
push
fadds
mov
jb
movsb
sarb
das
test
mov
push
mov
mov
stos
adc
mov
stos
stos
sub
mov
cmp
sbb
stos
adc
xor
clc
lea
stos
lret
jae
and
stos
dec
pop
lock
cmpsl
ds
cmp
fldt
loope
stos
xor
sbb
outsl
int3
insl
mov
popa
mov
push
insb
and
out
mov
sub
push
push
jecxz
mov
sbb
es
inc
xor
lods
stos
stos
cmp
adc
orb
nop
lcall
jl
cld
stos
inc
jmp
popa
stos
xchg
repnz
sbb
push
adc
scas
call
pop
push
stos
jmp
sbb
test
mov
cs
mov
loopne
pop
scas
pop
xchg
andb
stos
adc
aaa
jl
or
sbb
mov
cs
stos
sarl
mov
sub
ret
lds
stos
mov
sub
dec
push
jmp
xchg
or
cwtl
and
inc
push
movsl
xchg
mov
mov
fsubrs
imul
sahf
or
add
mov
xchg
stos
out
cli
mov
fs
cmp
cmp
movsb
das
inc
popf
sti
icebp
adc
loop
int3
pop
stos
repnz
pop
mov
aam
mov
fmul
aas
rcrb
daa
loopne
es
inc
stos
clc
mov
jle
sahf
stos
test
stc
xchg
popf
inc
sub
push
adc
xor
mov
and
mov
fwait
iret
push
test
test
imull
stos
mov
mov
mov
rorl
arpl
int
inc
add
mov
jbe
and
jge
fcoms
stos
fistps
add
scas
inc
stos
inc
shlb
movsb
bound
cltd
sub
pop
xchg
sbb
fs
in
hlt
mov
stos
je
pop
mov
popf
loopne
stos
les
clc
and
movsb
ret
stos
lods
fimull
mov
outsb
subl
mov
negb
push
cld
das
movd
mov
cmp
cwtl
out
jae
jmp
ljmp
add
jge
insl
mov
jl
mulb
ja
dec
rcr
lock
sbb
or
xchg
pop
stos
iret
je
mov
das
sub
daa
es
mov
mov
stos
rol
add
lsl
push
lock
xchg
loop
popf
stos
cmpsl
xchg
pop
mov
testl
stos
adc
add
nop
push
stos
jg
lock
loope
dec
stos
insb
clc
fldenv
stos
popa
imull
sub
add
call
xor
out
aas
jg
push
or
in
xchg
ja
outsl
jl,pt
pop
stos
pop
lret
push
adc
xchg
fwait
pop
sub
movsb
mov
stos
adc
mov
xchg
fbld
inc
add
arpl
add
or
aaa
ljmp
sbbl
push
imul
sbb
cwtl
jmp
pop
xor
xchg
movsl
iretw
push
xchg
inc
ret
stos
xchg
test
in
lcall
lds
stos
xchg
mov
xchg
dec
stos
cmp
sbb
lea
enter
mov
sbb
inc
cmp
mov
lahf
adc
sbb
fwait
or
stos
mov
add
pop
cmp
cltd
sbb
and
inc
fstps
add
xor
rep
jnp
scas
adcl
mov
ret
popa
jle
mov
sub
int
dec
aas
test
call
xchg
xor
nop
jae
pop
mov
xor
lcall
add
mov
scas
xor
push
fsubrl
push
stos
aaa
cltd
push
xlat
jo
lret
pop
or
movsl
jl
repnz
cld
stos
sbb
insl
xchg
rcll
cmpsb
jo
je
jno
in
pop
lret
lahf
stos
sbbb
dec
mov
or
jo
cmp
cmp
movsb
movsl
iret
jae
pop
cmpsb
popl
in
xchg
jne
leave
and
cli
cmpsb
or
outsl
repnz
es
clc
xchg
stos
enter
lock
or
leave
mov
les
fisttps
loopne
mov
xchg
mov
lcall
std
sub
insl
aam
fmuls
or
addr16
push
push
jo
movsb
lods
stos
add
push
xchg
sbb
out
arpl
cmp
cli
test
dec
imul
fisubrs
imul
aad
sbb
xchg
jb
xor
mov
inc
pop
xchg
jbe
sub
cli
adc
ljmp
inc
pop
pop
dec
dec
sbb
repnz
xchg
ret
sub
xor
pop
or
sub
jmp
loope
lods
mov
push
stos
add
add
dec
sbb
enter
nop
stos
adc
push
mov
out
inc
push
fldcw
imul
push
xchg
pop
dec
test
inc
jnp
ret
jae
imulb
cmp
dec
or
or
jl
insl
stos
test
xchg
lahf
fcoms
xchg
and
movsl
sbb
adc
inc
xor
fwait
and
pop
dec
aas
push
test
stos
imul
test
loop
out
mov
xchg
loop
mov
jno
aad
xchg
and
test
fcomps
fsubrl
bound
xchg
add
movsb
xchg
cmpl
cwtl
mov
das
push
add
loopne
xchg
in
pusha
stos
lret
inc
roll
jmp
ficoms
xchg
das
stos
jb
inc
sbb
out
xlat
test
inc
sub
stos
or
pop
ret
cmpsb
andl
imul
mov
jae
stos
orb
scas
xchg
jl
sbb
sahf
xor
or
lods
aaa
jbe
xor
int3
mov
dec
bound
mov
or
out
jnp
stos
nop
popa
lds
stos
cld
dec
add
inc
or
stos
out
out
inc
clc
jge
stos
je
stos
out
push
aaa
lahf
mov
add
pop
lcall
fwait
xchg
mov
sub
adc
push
mov
sub
dec
data16
mov
mov
and
ljmp
and
mov
lods
call
jmp
je
or
jno
nop
push
shrb
sub
xorl
dec
popa
push
sbbl
lret
cltd
shlb
cld
cmp
dec
scas
push
pop
mov
mov
jmp
pop
std
lods
movsl
cmc
call
imul
fildll
in
pusha
inc
into
sbb
mov
ss
and
xor
jp
pop
aad
cwtl
mov
in
stos
xchg
mov
xor
add
lret
mov
stos
mov
jg
xchg
into
or
inc
and
aaa
stos
mov
add
pop
std
mov
push
ret
inc
jp
jbe
stos
mov
pusha
adc
push
addr16
push
jo
xchg
adc
shll
test
push
inc
push
mov
imul
leave
push
into
aam
in
fldcw
add
push
imul
cli
ret
fwait
push
xor
aam
inc
mov
xchg
push
stos
push
or
sbb
ss
stos
adc
filds
and
sub
and
mov
dec
in
push
imul
mov
out
xor
jle
mov
popf
out
inc
test
pop
sbb
adc
dec
fsubl
jge
addr16
rorb
mov
stos
jb
cld
cmpl
dec
inc
lret
stos
outsb
adc
inc
push
push
repz
into
xchg
jmp
mov
stos
xchg
jb
push
xacquire
sub
in
cs
sub
jp
push
shll
stos
pop
movsl
or
jnp
stos
out
std
jns
xor
lock
mull
pop
das
mov
aad
dec
cmpsl
stos
inc
ja
mov
imul
int
dec
pop
xor
xchg
inc
stos
pop
mov
mov
outsb
jl
sbb
push
mov
out
pop
jle
stos
movsb
test
and
push
ficompl
jmp
add
hlt
pop
mov
popf
stos
sti
shr
movsb
adc
popa
outsb
mov
xor
sub
sbb
inc
das
test
adc
loop
mov
shrb
inc
xor
xor
or
xorb
arpl
mov
ljmp
mov
dec
cli
jmp
push
loopne
mov
daa
jl
shll
mov
push
iret
mov
stos
into
xchg
sbb
clc
lret
lea
mov
bound
adc
xchg
addr16
xchg
mov
fwait
cmp
mov
sti
sub
sbb
pop
jnp
mov
mov
in
mov
pop
aaa
leave
dec
xchg
mov
fadds
out
add
inc
stos
adc
bnd
aam
jne
popf
mov
stos
pop
loop
repz
jb
leave
dec
stos
shrb
int
mov
jmp
dec
add
jge
push
and
shrl
xor
and
mov
push
scas
add
sbb
ljmp
mov
pop
mov
push
sbb
pop
repnz
clc
mov
sbb
pop
fisubl
pushf
dec
sbb
cmp
aad
int3
push
orb
addl
push
cmp
or
fisubrs
pusha
mov
mov
cs
jb
pop
stos
cltd
ret
xchg
cmp
into
shl
stos
xchg
aaa
pop
mov
test
jl
xor
xchg
lods
stos
adc
clc
adc
dec
movsl
inc
jecxz
and
inc
iret
adc
das
stos
fs
setp
mov
or
shll
loope
in
sub
das
stos
jno
lods
lret
add
push
imul
out
mov
xchg
jl
orb
out
stos
adc
sahf
in
pop
mov
cmp
xor
or
add
push
stos
ret
mov
mov
stos
inc
mov
test
stc
push
stos
jle
aad
cmpsb
fidivrs
and
cld
pop
xchg
and
icebp
fstps
cmpsl
jb
inc
mov
clc
stos
sysexit
outsb
in
arpl
sbb
jbe
shrl
and
xchg
stc
push
rcr
fwait
incl
mov
out
and
in
mov
cmp
cltd
sbb
push
rep
or
mov
jmp
test
stos
je
cmp
adc
outsl
mov
jno
insl
into
mov
stos
orb
pop
jmp
mov
mov
cmp
les
sti
adc
lds
popa
stos
adc
icebp
sbb
fiaddl
shll
sub
xchg
iret
pop
cmp
add
pop
mov
popa
push
jmp
xchg
cwtl
sahf
das
stos
pop
or
add
insl
pop
mov
jmp
xchg
jl
pop
stos
aad
pop
loopne
dec
stos
sbb
mov
fwait
stos
jae
leave
movsb
ret
push
cmp
stos
shlb
mulb
adc
stos
push
mov
stos
push
pop
mov
or
dec
cmp
add
ret
mov
out
pop
insb
mov
ja
outsb
aad
mov
test
scas
js
pushf
cmp
pop
call
push
xchg
push
cmpsl
popa
jae
call
xor
daa
enter
stos
mov
test
mov
sti
sub
push
cli
data16
inc
stos
push
lods
and
cmp
pop
xor
jp
ss
cmp
sub
lahf
mov
frstor
jbe
cmpsb
push
push
sbb
sub
repz
sbb
xchg
xor
stos
js,pt
push
cwtl
pop
mov
cmpl
pushf
add
jp
add
push
fdivp
add
scas
xchg
out
insl
sti
sub
shll
int
stos
mov
adc
imul
sbb
mov
mov
pusha
cmp
xor
lods
cmp
inc
xchg
cmp
push
mov
cwtl
and
push
das
xchg
fcomps
loop
jae
lods
adc
mov
test
or
stos
cmp
push
xor
dec
lock
pusha
out
out
add
mov
pop
push
movsb
push
jp
xchg
cmp
mov
je
loopne
sub
dec
fcmovu
fnsave
scas
ss
scas
int3
shrl
stos
cmp
sbb
sub
es
pop
loope
mov
sbb
cld
stos
mov
sub
aaa
ljmp
gs
fstps
ja
adc
insb
xchg
ljmp
je
in
cltd
addr16
cli
nop
mov
inc
xchg
jmp
stos
pop
stos
mov
mov
adc
arpl
add
mov
test
push
dec
jne
ljmp
dec
xchg
shl
jl
hlt
stos
mov
xchg
and
ljmp
pop
enter
dec
int
stos
dec
and
scas
fdivs
shrl
adc
sub
stos
mov
bsr
mov
hlt
and
adc
mov
sub
insl
mov
mov
pop
gs
add
test
ret
dec
and
stos
inc
daa
addr16
cld
stos
loop,pn
or
sub
mov
stos
out
cltd
insb
push
scas
jne
jmp
mov
cs
clc
jmp
xor
push
lods
rcl
test
jecxz
or
cmp
pop
lods
dec
repnz
loope
mov
stos
push
mov
sbb
add
and
jle
out
sub
inc
pop
cmp
test
stos
xchg
jns
scas
test
scas
lahf
jmp
ret
sub
and
cmc
mov
popf
movsb
ret
stos
arpl
cltd
inc
inc
xchg
add
sbb
mov
xchg
jg
dec
dec
pop
cld
lods
bound
xor
test
cltd
ljmp
jl
push
stos
mov
cmp
repnz
loopne
imul
shlb
sub
xchg
es
popa
scas
jno
or
movsb
pop
aaa
js
sbb
mov
mov
mov
stc
ss
xchg
flds
xor
push
aas
xchg
outsb
dec
xchg
push
xchg
lret
test
mov
out
pop
or
fidivrs
lahf
repnz
popa
cli
mov
shlb
lds
ljmp
xchg
mov
adc
mov
lods
loope
fwait
mov
rcr
stos
imul
hlt
cmp
stos
subl
mov
mov
add
inc
xor
sarb
jmp
shr
in
std
test
iret
repnz
xchg
jle
xchg
or
pop
mov
xchg
popf
pop
sbb
test
ret
mov
adc
daa
sub
cli
sbb
jmp
je
jne
mov
mov
jg
add
js
and
stos
movsl
lock
enter
lods
std
dec
dec
lret
xor
insb
mov
xchg
pop
add
jmp
insl
mov
cmp
andl
aam
add
push
ljmp
testb
mov
push
cwtl
fucomp
pop
push
sub
xchg
pushf
add
or
mov
enter
sbb
gs
push
mov
ja
mov
ljmp
les
stos
dec
push
pop
or
sub
xor
adcb
adc
sub
rcr
sub
aas
nop
and
lea
stos
ret
mov
inc
in
dec
insl
arpl
rcll
out
or
push
sbb
scas
sub
mov
aad
jmp
mov
pop
je
mov
push
stos
in
mov
jns
adc
and
adc
push
jl
leave
or
xor
das
aaa
movsb
out
pop
sbb
jo
cltd
test
cmp
mov
scas
sahf
pusha
adc
push
stos
mov
cmpsl
and
ret
pop
or
mov
mov
aas
mov
sub
push
push
push
repz
stos
bound
fists
fs
iret
xor
mov
mov
adc
fwait
shlb
stos
or
pop
sub
mov
cmc
stos
fisubl
sbb
insl
pop
stos
jno
lock
mov
rcl
rcll
xchg
into
mov
mov
mov
lret
xchg
bound
daa
mov
and
and
addr16
mov
mov
dec
sahf
divb
pop
imul
sti
inc
out
xchg
loopne
out
pop
shlb
push
lcall
or
pop
cmc
stos
jecxz
fcmove
iret
sbb
cs
xchg
mov
dec
nop
adc
stos
rolw
push
fst
mov
scas
adc
loopne
cmp
stos
scas
push
sbb
sbb
pop
cmp
pop
cwtl
fisttpl
or
xchg
push
stos
lock
stos
push
aam
xchg
cwtl
mov
sahf
stos
sub
dec
stos
jmp
rol
stos
push
lock
inc
fwait
js
repz
cmc
mov
mov
psllw
mov
mov
iret
push
pop
sub
adc
mov
loope
mov
icebp
mov
stos
mov
test
pop
jp
pop
scas
pop
stos
fwait
and
mov
fildll
jp
or
pop
js
cmp
sahf
sub
pop
xchg
fcomi
cmpsb
stos
call
fsubrl
sub
nop
popf
xor
mov
aas
lock
pop
divl
jl
mov
jne
push
fstpl
mov
pop
push
jnp
push
stos
data16
jno
out
int
stos
lea
insl
stos
fiadds
dec
xlat
mov
push
xor
stos
pop
and
mov
or
stos
cmp
and
jnp
xchg
lods
stos
xlat
arpl
sub
xchg
dec
jg
ret
jle
stos
mov
jns
sbb
cs
xlat
mov
out
mov
aaa
push
inc
push
xorb
stos
dec
mov
ja
stos
push
sbb
mov
in
movsl
popf
pushf
aad
stos
ret
dec
adcb
int3
sbb
lds
lods
dec
pop
stos
sub
sbb
adc
or
test
addr16
arpl
xor
mov
push
lods
out
inc
addr16
stc
dec
mov
xchg
stos
mov
ret
mov
stos
jp
adc
movsb
outsl
mov
jnp
dec
or
stos
sbb
adc
addb
dec
push
stos
xchg
inc
jg
xor
mov
lret
dec
in
cmpsb
inc
into
inc
std
les
dec
mov
cmp
mov
push
jno
or
aaa
les
shrb
cmpsl
dec
repnz
jno
nop
xchg
xor
daa
loop
scas
stos
xchg
hlt
push
fisttpll
push
aad
in
fistps
push
rorl
out
jmp
jo
pop
adc
jb
fwait
adc
sahf
stc
xor
push
mov
pop
stos
ss
push
js
mov
pop
stos
repnz
push
dec
movsl
mov
jnp
xchg
dec
gs
ret
jecxz
enter
stc
jmp
sub
clc
mov
lea
and
fdiv
cmp
test
sub
sbb
mov
jl
jns
sbb
stos
ljmp
out
into
das
mov
xchg
jecxz
inc
daa
cmp
sub
stc
outsl
xchg
push
stos
lcall
in
dec
stos
js
out
in
es
movsb
fisubrl
imul
inc
subl
mov
stos
push
les
stos
in
sbb
hlt
dec
lret
scas
aaa
clc
insl
ret
inc
cmp
jmp
dec
testb
sbb
pop
cltd
adc
inc
stos
xor
imul
test
mov
sub
sti
loop
sbb
adc
out
or
daa
pop
clc
aas
bound
lea
enter
cmp
and
cmc
jp
mov
mov
xor
stos
xchg
dec
aaa
jb
stos
mov
lods
das
mov
loope
xchg
lea
test
cmp
fisubrs
in
outsb
sbb
dec
jne
add
stos
xchg
mov
stos
ja
je
bound
shrl
fld
cli
add
sbb
or
stos
movsl
push
lahf
test
push
add
ljmp
or
in
add
es
inc
jns
pop
stos
fisttpl
mov
stos
movsl
mov
out
and
mov
xor
addr16
lret
repnz
push
mov
lcall
cmpl
cmpb
rcr
xchg
pop
sbb
pop
mov
pop
stos
ljmp
std
imul
pop
stos
roll
loope
jecxz
rorb
jo
stc
cmpsl
sbb
stos
movsl
repz
pusha
sbb
dec
mov
pop
stos
in
popf
dec
cmp
sub
push
jae
sub
out
cmp
stos
fcoml
popa
stos
pushl
lods
in
mov
cmp
jo
fxch
push
stos
aaa
mov
and
mov
testl
pop
mov
arpl
jp
popf
jbe
jge
mov
xor
dec
pop
test
stos
jne
stos
lret
test
stos
pop
push
jo
jge
or
stos
test
dec
dec
mov
and
adc
and
adc
aas
and
aam
stc
jbe
cld
imul
cmp
mov
mov
cld
pop
loope
push
out
mov
xchg
xchg
sti
stos
sbb
xor
sbbb
int3
lock
pop
aam
or
aas
sub
leave
icebp
movsb
call
push
ficoms
or
cmp
outsl
fsubrs
cli
in
loope
in
push
ljmp
imul
mov
adc
jae
mov
or
in
or
hlt
arpl
stos
faddl
inc
pop
stos
lods
movsb
repnz
leave
out
mov
int
stos
mov
and
das
mov
fnsave
mov
lret
add
lcall
xchg
ret
sub
scas
mov
das
popf
sub
sub
fwait
mov
mov
lret
outsl
loope
inc
shr
push
movsb
in
insl
mov
mov
addb
stos
loop
mov
mov
adc
mov
in
iret
fildll
je
jmp
shl
adc
mov
popf
mov
xor
clc
pop
rorb
push
jmp
cwtl
sub
jne
cmp
sub
pushf
dec
out
lock
stos
inc
push
int
fwait
jnp
lea
subl
mov
arpl
pop
dec
and
push
shlb
adc
gs
xchg
insb
mov
and
mov
jl
or
leave
arpl
cli
enter
stos
or
lahf
sbb
lods
pop
stos
or
js
iret
cmp
sahf
stos
in
outsl
sbb
repz
stos
idivb
js
lods
cmpsl
adc
ds
mov
sbb
or
cmp
or
repz
fwait
jns
jle
imul
xchg
stos
fidivs
pop
repnz
loopne
mov
clc
push
jmp
stos
mov
js
pop
fstpt
inc
scas
daa
adcl
mov
dec
mov
sbb
lcall
inc
lods
adc
int3
jno
mov
stos
jo
lock
sbb
push
pop
pop
cs
test
fsubrl
push
rcll
push
and
stos
divl
push
xchg
xchg
stos
dec
mov
fwait
dec
sahf
stos
popf
sub
pop
mov
stos
and
push
fsubs
cli
xor
sbb
cmp
mov
movsb
fwait
ja
data16
stos
nop
and
scas
adc
aad
sbb
mov
test
mov
inc
aas
stos
sub
push
daa
icebp
stos
push
jl
in
sub
mov
xchg
pop
js
dec
fcoms
fs
push
jbe
cmpl
xchg
cld
stos
ds
dec
enter
stos
push
jecxz
cs
mov
clc
test
stos
test
std
rcrl
in
imull
into
jl
mov
sub
pop
lds
sbb
push
push
stos
sbb
xchg
movsb
add
xlat
pusha
outsb
repz
stos
push
test
idivb
inc
ffree
stos
xlat
cmc
xor
imul
cli
in
jmp
mov
in
adc
push
imul
int
stos
add
fisubs
ljmp
sbb
pop
movsl
sub
ret
or
por
outsl
stos
insl
cltd
cmp
adc
xor
stos
imulb
inc
stos
cmp
cmp
imul
fsubr
push
mov
hlt
and
add
sbbl
stos
dec
mov
xor
xlat
add
cmp
inc
mov
jle
aam
daa
out
stos
mov
jl
push
and
bound
pusha
ljmp
inc
loop
sub
mov
mov
mov
stos
mov
pop
call
sbb
sub
stos
rcr
mov
stos
sbbb
jp
iret
jno
inc
scas
adc
lock
lret
dec
jmp
jle
push
cmp
xchg
nop
and
out
call
aad
ss
stos
subl
icebp
stos
fsubr
js
xchg
decl
addr16
cmpsb
rep
xchg
leave
aam
stos
xorb
mov
arpl
sahf
ret
xor
mov
and
stos
pop
imul
jmp
lock
in
cmp
cwtl
jg
xchg
subb
adc
sub
stos
push
jecxz
jbe
adc
shrb
enter
sbb
into
stos
inc
lret
xchg
xor
sub
push
test
lea
cmp
mov
test
mov
mov
stos
cmpsl
pop
test
adcl
and
mov
xor
aad
mov
ficoml
imul
cmp
mov
cmp
aas
inc
mov
sti
xor
jmp
test
xchg
hlt
shrb
add
add
rcl
enter
clc
lcall
xor
ret
and
imul
xlat
push
loopne
in
stos
or
jl
push
xor
data16
pusha
stos
add
jmp
aas
mov
xchg
test
es
roll
cmpsb
add
test
and
insb
in
inc
arpl
stos
xchg
xchg
lcall
rcll
inc
mov
cmp
es
jmp
andb
jnp
sarl
push
dec
stos
call
movsb
stos
and
dec
inc
int3
mov
sub
push
mov
mov
out
stos
mov
insl
shlb
stos
push
fwait
mov
loope
movsl
subb
ljmp
daa
stc
test
in
fdivs
les
mov
mov
shrl
out
std
adc
mov
mov
sbb
ret
cmp
adc
inc
adc
jmp
sti
scas
push
push
xchg
in
stos
lret
or
push
movntps
xchg
call
inc
mov
stos
xor
mov
arpl
cltd
js
xor
pop
imul
xchg
or
jg
mov
add
or
xchg
pop
xchg
shrl
mov
loopne
pop
jbe
dec
dec
mov
cld
push
mov
fimull
test
imul
push
pushf
leave
pop
mov
mov
aaa
stos
repnz
xor
dec
jns
lds
test
cwtl
stos
cmp
jmp
push
fwait
mov
add
jb
and
adc
mov
insb
call
cmp
adc
inc
mov
pop
dec
add
pop
insb
jbe
jnp
pop
stos
cmc
xor
stos
out
std
jmp
jb
mov
movsb
mov
jns
outsb
idivl
mov
and
pop
stos
sti
adcb
das
pushf
cmp
adc
jo
jb
adc
stos
sti
mov
dec
stos
jp
les
iret
testb
out
orl
adc
pop
loopne
push
ror
ss
ja
push
push
xchg
sbb
jmp
mov
stos
repz
lods
mov
adc
xchg
imul
mov
xchg
insl
dec
push
gs
sbb
pusha
std
aam
stos
jo
fisttps
xchg
add
insl
add
iret
or
addr16
or
push
dec
fwait
add
pop
mov
sbb
es
notb
mov
out
shlb
dec
mov
add
and
hlt
inc
cmpl
lock
mov
adc
add
jne
out
stos
fsubs
andl
pop
adc
push
push
shrl
int
sahf
std
sbb
insl
mov
fcmovne
scas
stos
neg
leave
sbb
or
es
mov
fbld
std
mov
in
sbb
jnp,pt
lods
or
orl
stos
cmp
or
push
lock
pop
jge
mov
jo
push
stos
jmp
stos
dec
cs
mov
xor
cmp
inc
imul
imul
or
dec
das
cmp
es
inc
stos
push
and
dec
push
arpl
stc
icebp
stos
xchg
js
or
sbb
and
lds
xor
out
mov
jmp
and
push
insb
mov
cmp
or
xor
cmp
rcll
jb
mov
imul
push
inc
jmp
mov
add
jnp
push
dec
ret
clc
adc
inc
subl
jge
out
mov
outsl
addb
ds
or
in
js
xchg
xchg
insb
xchg
or
popa
pop
inc
mov
stos
pop
dec
xchg
sub
add
hlt
stos
pop
sahf
repz
add
jmp
cmp
ds
int3
leave
stos
and
dec
pop
stos
pop
mov
lds
orl
fsts
inc
stos
add
pop
push
push
stos
pusha
jmp
jo
mov
stos
aaa
dec
sarl
into
xchg
jmp
repz
jmp
sub
cmc
negl
xor
xchg
gs
subl
imul
xor
pop
insb
cmpsb
ja
stos
lods
sub
andb
sub
mull
jl
push
cmp
inc
shr
mov
pop
fisubrl
dec
nop
hlt
cwtl
imul
xchg
xor
daa
pushf
pop
in
and
inc
mov
loope
xor
stos
xchg
adc
outsb
popa
movsb
and
aam
fwait
push
outsl
iret
dec
adc
jmp
in
sbb
dec
arpl
test
stos
sbb
cwtl
ss
scas
pop
stos
or
jne
dec
cmp
stos
jb
mov
adc
mov
and
mov
outsb
xchg
jle
sub
sti
subl
stos
clc
inc
dec
or
add
lea
ss
push
stos
frstor
in
add
cmpsb
stos
xchg
sbb
and
inc
loopne
stos
mov
inc
jb
stos
mov
rcrl
test
stos
mov
out
sbbb
add
xor
mov
stos
leave
addr16
test
xchg
and
dec
xchg
and
aam
mov
dec
lock
dec
cwtl
jg
stos
push
test
pop
cmpsb
pop
pop
stos
aaa
faddp
stc
xlat
or
or
sub
je
adc
cld
movsb
push
das
mov
fistps
scas
fwait
imul
insl
shll
icebp
stos
jns
adc
push
sahf
pop
loope
lea
fsubr
push
xchg
jge
push
andb
jno
inc
enter
inc
bound
test
dec
jge
stos
sahf
sub
fnstcw
mov
sub
sbb
scas
hlt
imul
clc
stos
incl
addr16
icebp
subl
stos
mulb
xor
int3
xchg
push
imul
cmpsl
xor
fcmovnbe
imul
stos
pop
inc
mov
das
stos
jns
in
or
dec
fwait
adc
stos
xchg
mov
dec
out
rcrl
mov
stos
scas
jo
mov
imul
mov
stos
adc
inc
gs
fwait
cmp
ror
addr16
loop
mov
push
push
inc
ret
imul
out
or
push
dec
clc
xchg
stos
pop
ja
cmpsb
jno
ljmp
orb
stos
imul
jmp
add
ja
call
stos
addr16
sub
push
in
ljmp
dec
jae
sbb
adc
mov
fistl
push
mov
and
movsb
push
daa
push
fsubs
dec
pop
xchg
adc
sub
in
add
sub
jp
subb
lock
adc
stos
add
bound
mov
stos
xor
ja
xchg
es
stos
mov
lcall
loopne
mov
addl
adc
in
mov
adc
data16
cs
stos
sahf
lock
movsl
xor
adc
or
es
xor
loop
sub
repz
ds
fisttpl
cmpsl
cmc
test
stos
or
lcall
mov
es
xchg
cmpsl
cmp
mov
cvtps2dq
xor
stos
jge
sbb
ja
add
xor
sbbl
mov
xor
mov
dec
cwtl
imul
cmp
xchg
mov
add
jp
mov
mov
in
jnp
xchg
stos
data16
outsl
xor
jecxz
cmp
sarb
mov
fsubrs
jae,pn
fwait
add
cmp
pop
mov
stos
test
mov
stos
sbb
js
and
jle
or
scas
stos
xchg
cwtl
mov
jbe
push
or
stos
jecxz
adc
jns
stos
test
inc
stos
cmp
mov
mov
mov
fwait
mov
pop
stc
rclb
inc
sub
insl
test
scas
mov
lret
xchg
and
test
jge
dec
mov
lcall
stos
push
fisubs
pop
out
xchg
insb
stos
dec
mov
jmp
push
xor
sbb
jo
stos
mov
xor
or
pop
dec
stos
inc
jp
stc
mov
add
roll
sub
stos
imulb
pop
cmpsl
stos
push
pop
sbb
adc
push
shrb
inc
call
sub
icebp
jbe
stos
jo
aad
push
sbb
call
out
inc
inc
stos
mov
jmp
jmp
push
push
mov
mov
jmp
or
sti
pop
sbb
stos
xor
cltd
scas
fiadds
mov
lock
xchg
sbb
mov
mov
xor
mov
push
pop
xchg
push
inc
sub
stos
lcall
ljmp
scas
cmp
jg
popf
and
imul
sub
jecxz
stos
xchg
inc
add
loope
pop
das
repnz
and
or
mov
insl
mov
pop
push
mov
stos
out
add
ror
stos
xorl
push
stos
mov
popa
cli
push
or
dec
addr16
cld
xchg
test
icebp
dec
rolb
loope
inc
loop
sub
push
stos
scas
xchg
insl
fwait
mov
sub
adc
or
and
in
and
ret
ljmp
dec
stos
fldenv
add
push
not
loope
mov
sub
mov
hlt
add
rorb
sti
push
ljmp
cwtl
xor
ds
mov
gs
and
inc
mov
cs
test
stos
mov
jb
jne
fwait
stos
fcos
sbb
das
ja
orl
pop
bound
stos
outsl
inc
add
mov
sbb
lahf
aas
les
imul
xchg
pop
ljmp
push
inc
clc
push
lea
jno
add
xlat
xor
and
sub
or
pop
jmp
dec
stos
jg
cwtl
icebp
cmp
mov
fsts
loope
es
mov
jmp
push
loopne
xchg
fwait
jl
push
mov
add
sbb
outsl
jbe
jmp
stos
outsl
push
bound
jae
subl
fwait
cltd
sub
addr16
mov
and
data16
imul
jmp
lret
arpl
mov
inc
jmp
sbb
inc
sbb
orb
loop
mov
push
loopne
shll
aad
call
pop
push
push
outsb
dec
cld
daa
jmp
fsubs
pop
add
pop
push
fldcw
insb
jmp
pop
dec
xchg
and
in
call
xchg
inc
popa
cmpsl
ret
cmp
nop
inc
cli
stos
sbb
loop
jle
inc
stos
jl
fwait
dec
cmpsl
and
jae
mov
mov
dec
push
sub
aad
dec
stos
cmp
pop
mov
or
js
add
ss
or
fisubrs
adc
stos
decl
mov
test
xchg
inc
stos
fildl
stos
push
stos
pushf
in
cmpsl
pop
pop
xchg
aam
inc
std
inc
sbb
xchg
fcomi
jge
stos
jg
cmp
out
rcll
jne
jle
enter
call
ljmp
dec
mov
ret
shl
stos
mov
lcall
rcr
mov
jbe
imull
add
mov
or
sahf
dec
subb
xlat
daa
mov
jmp
jecxz
add
mov
popa
in
lea
pop
lock
fiaddl
cld
jb
mov
pop
imul
clc
lret
cmpl
xor
in
loopne
pop
xor
and
rorb
stos
push
mov
dec
mov
shrl
xchg
adc
or
divb
in
stos
das
cmc
push
cltd
dec
lods
mov
xchg
repnz
shrl
mov
loopne
int3
adc
xchg
mov
test
or
jo
push
fwait
cmp
and
adc
sub
push
pop
call
cmp
aam
adc
loopne
xor
movsl
aas
or
out
rclb
test
stos
loop
or
js
call
dec
adc
cltd
or
push
jecxz
or
lea
push
mov
stos
fcomp
movsb
roll
rcrb
stos
out
cmp
ds
stos
mov
mov
mov
and
test
mov
fidivl
out
js
std
fstps
outsl
daa
pop
sahf
mov
cmp
mov
pop
or
iret
mov
mov
jno
loopne
jae
lds
ret
and
popf
sbb
stos
jo
inc
sub
push
mov
call
mov
ficoml
fadd
dec
xor
pop
adcl
mov
fwait
sub
add
mov
add
pop
cmp
lock
int
leave
push
pop
mull
gs
mov
fisubrs
xchg
divl
jns
scas
push
lcall
mov
xchg
mov
jo
mov
ljmp
jns
stos
mov
outsl
add
pop
sub
test
cli
pop
adcb
daa
lret
xor
insb
pop
stos
pusha
pop
add
scas
pushf
and
push
and
mov
xchg
stos
aas
and
repnz
stos
sub
pop
xchg
mov
stos
push
mov
mov
fimull
pop
sbb
sbb
adc
or
mov
les
stos
push
mov
pop
push
pop
jmp
stos
mov
xchg
fnstcw
jmp
iret
lea
inc
xor
stos
pop
pop
loopne
sub
sub
pop
mov
movsb
xchg
arpl
stos
add
popa
dec
jo
dec
cs
call
mov
leave
sti
push
cli
icebp
fwait
inc
jecxz
cmpl
stos
cs
cmp
subl
stos
cmpsl
inc
repz
pop
cmp
pmulhw
inc
sbb
ja
mov
je
insb
mov
add
bound
add
cs
jmp
pop
addr16
jne
stos
and
push
lods
shrl
cmp
repnz
push
jo
sub
xlat
or
pop
pop
aas
cmp
add
lahf
mov
aaa
cmpl
add
stos
mov
sbb
dec
stos
les
or
int
addr16
and
add
mov
push
dec
or
sti
call
mov
imul
xchg
shlb
stos
mov
mov
lock
add
mov
aaa
fnstenv
jnp
std
push
xor
es
stos
fsqrt
in
mov
inc
xchg
pop
jne
stos
mov
dec
jo
adc
mov
sub
imul
enter
stos
push
aam
cmp
or
and
test
iret
in
fldl
sub
dec
nop
mov
push
push
insb
xchg
pop
cmp
stos
fistpl
lock
and
bound
mov
cmp
aas
pop
nop
dec
repnz
daa
test
xchg
jp
sub
add
cltd
push
inc
mov
pop
xor
mov
pop
mov
xadd
loop
ret
pop
popa
mov
into
stos
xchg
mov
pop
stos
fwait
sub
add
arpl
test
stos
mov
jb
lods
cs
mov
xchg
cmp
or
out
stos
out
or
mov
test
mov
xor
fisubrl
insl
mov
mov
xchg
jns
ret
dec
roll
dec
jb
add
and
test
xchg
and
jecxz
add
scas
jo
sub
xchg
or
stos
xor
push
dec
mov
sub
mov
adc
daa
xchg
jns
cmc
stos
mov
mov
jp
and
fisubrl
inc
fdivs
mov
cmp
xor
jp
pushf
jno
imul
jmp
rcrb
dec
xchg
popa
dec
inc
mov
pop
inc
mov
jge
stos
cmp
mov
fldl
inc
subl
addr16
lods
inc
cmc
mov
stos
rcrb
pop
cmpsb
into
inc
stos
stos
loope
test
ret
imul
mov
popa
ja
stos
cli
imul
mov
push
shrb
dec
cmpsl
xchg
pop
push
js
imul
scas
cltd
stos
jmp
nop
adc
stos
xchg
jl
mov
movsb
mov
insb
jmp
enter
mov
dec
jmp
mov
rorb
loope
fs
outsl
outsb
or
dec
mov
test
push
lea
je
dec
lds
inc
dec
daa
push
push
push
rclb
frstor
add
stos
xchg
mov
movsl
push
sub
mov
mov
hlt
adc
pop
dec
jno
jp
ficompl
fidivrs
cld
inc
cmp
jmp
or
dec
add
dec
enter
push
dec
mov
or
cmp
mov
push
stos
or
cmp
out
mov
or
push
mov
scas
sbb
into
stos
push
sbb
adc
jno
add
jp
dec
dec
sbb
adc
push
fucomip
sbb
scas
out
mov
stos
int3
neg
inc
out
jbe
jmp
aaa
subb
add
add
xchg
lret
ret
fadds
inc
out
lods
cli
pop
sbb
in
xor
repnz
sbb
push
jecxz
outsl
jae
and
cmp
aam
or
dec
sbb
or
add
lds
push
js
cmpsl
cmc
inc
outsl
xor
or
ljmp
ret
sbbl
stos
bound
inc
les
aad
fwait
jge
out
negl
test
mov
xchg
ds
daa
stos
call
ret
mov
pop
xor
subl
es
or
stos
sbb
fst
pop
inc
stos
ja
mov
xchg
cltd
xchg
mov
inc
stos
push
scas
xchg
push
mov
shll
pop
xchg
std
jno
sub
mov
stos
sub
bound
lods
xor
push
mov
in
aas
cmp
stos
adc
jl
mov
mov
jp
out
dec
stos
call
nop
xor
stos
aad
adc
jno
lahf
leave
stos
cmp
adc
lods
sti
xchg
cmp
dec
and
push
aas
xchg
lret
cmpl
hlt
mov
sarl
cmp
gs
lret
adc
or
and
addl
jg
scas
lock
sub
mov
lds
pop
lret
sbb
sbb
addr16
mov
xchg
lods
cmpsl
popa
imul
push
sbb
test
mov
stos
sub
call
movl
loope
fldenv
stos
sbb
sub
ss
stos
push
xor
sarb
stos
pop
insl
jo
jecxz
repnz
aad
fwait
outsb
pop
xor
jns
dec
lcall
xchg
push
imul
mov
imul
lahf
sub
fwait
sub
stos
adc
mov
sbb
sar
mov
mov
addl
adc
repnz
icebp
mov
lahf
push
pushf
push
stos
sbb
cmp
jb
imulb
stos
sub
js
sub
loop
push
sub
gs
imul
popa
mov
and
jae
mov
cmp
cmp
push
sub
movl
fists
call
stos
aaa
push
adc
xor
mov
fwait
cs
jge
pop
mov
push
shlb
lahf
hlt
out
aaa
pop
testl
cltd
lcall
inc
mov
in
dec
xchg
pusha
jl
scas
jb
insl
mov
shrl
call
cwtl
cmp
aam
and
out
lret
mov
stos
je
push
sti
cmp
stos
mov
fwait
or
test
mov
cmp
les
lret
fstpt
arpl
cld
mov
xchg
stos
mov
push
sbb
lods
sub
mov
int3
sti
stos
add
iret
pop
add
jg
sarb
cmp
dec
scas
mov
fwait
stos
xor
out
ffree
popa
les
in
push
jb
cld
xchg
pop
mov
adc
stos
mov
lods
leave
repz
ds
jno
mov
in
aad
stos
loop
push
push
cmp
add
mov
and
stos
sub
xor
inc
dec
jmp
or
movsl
fildl
mov
in
xchg
stos
mov
adc
dec
xchg
pop
stos
add
cmp
stos
inc
aaa
push
sbb
and
lret
shr
and
jmp
push
mov
imul
aam
adc
adc
stos
mov
xor
fstl
bound
xchg
inc
out
mov
fsubrs
push
push
jmp
rcll
xlat
sub
imul
jp
das
rcrl
mov
imul
fmuls
adcl
test
sub
popf
add
xor
or
sti
in
xor
mov
xor
mov
rclb
xchg
imul
aad
call
pop
scas
pop
mov
mov
jl
lcall
sbb
cmp
daa
jno
iret
in
stos
and
out
out
or
scas
mov
daa
jno
out
cwtl
cmp
add
sahf
test
int
ret
or
stos
or
adc
pop
dec
sbb
mov
stos
and
jl
dec
or
cwtl
inc
jge
inc
scas
stos
sbb
std
mov
fcmovnbe
mov
popa
cltd
ficoms
stos
repz
movsb
outsb
jne
nop
dec
stos
hlt
sub
push
xor
push
mov
push
mov
jo
pop
stos
sbb
data16
mov
adc
pop
movsb
inc
pusha
faddl
dec
iret
jno
out
insl
aad
outsl
push
sarl
sub
leave
int3
xor
stos
xor
xacquire
aad
test
stos
jne
jmp
stos
hlt
push
jbe
mov
aam
jmp
mov
dec
mov
subl
jmp
mov
lret
xchg
sbb
inc
fadd
stos
test
aas
jecxz
xchg
jmp
stos
push
cli
popa
pop
das
imul
nop
push
stos
cmp
mov
daa
aas
inc
pusha
push
fwait
mov
ficoms
stos
push
test
pop
outsb
call
aas
ljmp
inc
dec
pop
push
add
inc
clc
lahf
lods
dec
fnsave
ja
pushf
stos
ds
mov
stos
pop
addr16
pop
push
imul
push
stos
inc
xlat
ror
ds
lcall
xchg
xor
jmp
sub
lret
add
jnp
jbe
adc
stos
mov
pop
dec
stos
fsub
clc
cmc
mov
push
add
in
cmp
jns
xor
in
mov
mov
stos
xor
out
and
mov
lods
stos
fxch
or
dec
ret
imul
repz
loop
xchg
lock
stos
push
jno
jmp
mov
inc
push
mov
mov
jge
stos
out
mov
lahf
aad
shlb
jmp
mov
mov
xor
push
lret
out
mov
lds
mov
pop
stos
add
das
push
jl
or
nop
fldcw
inc
mov
stos
gs
push
int
rclb
stos
hlt
pop
imul
imull
out
xor
jl
mov
pop
dec
xchg
test
push
fsubrl
xabort
in
push
rorb
imul
push
push
fsubrs
jo
add
pop
mov
shrb
scas
mov
cli
cmpsb
cmp
xchg
fadds
and
aas
daa
inc
stos
lock
clc
xor
push
sub
xorb
jno
sbb
push
outsb
sub
add
or
inc
stos
dec
adc
push
sbb
out
xchg
stos
xlat
shlb
imul
sahf
and
mov
or
enter
out
jle
dec
mov
fmuls
fwait
movsl
mov
push
shrl
mov
and
nop
lods
xchg
adc
sbb
iret
dec
mov
xchg
shrb
lods
push
fldcw
mov
add
lret
xor
mov
and
stos
push
lods
xlat
mov
loope
stos
adc
ret
clc
mov
xchg
bound
jne
xchg
arpl
test
jmp
outsl
add
mov
dec
adc
sub
cli
stos
lock
pop
insb
dec
dec
imul
xchg
fisubrs
mov
jbe
xorb
ret
jmp
lds
mov
rcrb
jmp
cmpsl
cmc
and
sub
je
mov
mov
push
loop
fmull
adc
stos
xchg
xor
cmp
frstor
mov
insb
cmovge
jae
mov
orl
jge
and
push
cmp
mov
jmp
mull
lods
mov
loopne
fidivl
test
stos
out
cmpsb
idivl
sbb
shrb
jae
call
mov
out
add
shr
mov
mov
std
add
ljmp
fldcw
pop
mov
xchg
stos
pushf
xlat
in
out
in
jnp
in
test
pusha
or
stos
cmp
mov
xchg
jmp
sbb
mov
aad
inc
int3
insl
stos
dec
test
pop
imul
mov
cmp
stos
inc
mov
mov
stos
mov
lods
push
int3
fwait
movsb
pop
stos
aam
cmpsb
mov
popf
mov
shll
mov
cmp
jo
dec
std
adc
lret
aaa
jg
pop
popa
pop
xchg
fildl
lahf
ret
mov
cmp
das
lock
stos
lcall
jge
jmp
xor
std
orl
pop
gs
ss
dec
jl
sbb
xchg
stos
stos
mov
imul
or
fs
mov
push
sub
adc
mov
je
push
int
stos
jp
jae
sub
or
rcrb
stc
lcall
mov
dec
stos
fwait
push
scas
and
pusha
fldcw
jae
in
xor
movsb
stos
movb
mov
subb
cmpsl
out
movsb
or
xchg
adcl
cmc
addr16
mov
sbb
inc
rcrb
imul
xchg
stos
mov
repnz
mov
push
push
imul
subl
imul
mov
icebp
out
cwtl
stos
into
pop
mov
dec
push
lret
movsl
or
js
dec
test
stos
dec
dec
mov
sahf
adc
movsb
stos
loop
mov
inc
movsb
xchg
nop
je
stos
xchg
cmpsb
and
insb
xchg
sub
pop
mov
xchg
sub
mov
mov
pop
movsb
pusha
mov
jmp
stc
cmp
aaa
movsl
cmc
fwait
dec
out
lahf
pop
or
lods
in
stos
int3
and
xchg
pop
jmp
pop
movsl
xor
ss
mov
arpl
cli
aad
push
stos
ret
pop
push
data16
pop
stos
add
xor
xor
iret
loope
fmull
adc
inc
and
xchg
subb
daa
xchg
mov
repnz
pop
daa
adc
stos
rcl
inc
xchg
pop
jmp
cmp
scas
dec
stos
push
cltd
mov
or
dec
mov
lds
sbb
xchg
dec
mov
add
lcall
stos
bound
dec
sarl
andb
or
stos
popa
dec
pop
jo
inc
stos
cmp
xor
dec
cmp
cmp
enter
sbb
aas
out
dec
mov
cmpsb
stos
stos
lret
fidivrl
dec
stos
sbb
jae
sti
test
pop
fucomi
not
stos
rclb
into
outsb
cmpsl
dec
stos
scas
ret
repz
jns
jg
or
mov
xor
sub
and
dec
add
adcb
loop
mov
stos
jae
es
and
pop
lods
loop
fdivrs
mov
sarl
aad
stos
inc
loop
push
sbb
cmp
jo
fstps
loop
mov
pop
xchg
bound
inc
lcall
or
and
stos
daa
aas
mov
sub
test
int
xchg
jle
sub
dec
jo
pop
mov
add
es
push
jns
bts
js
cmp
mov
sbb
stos
shll
push
fldt
xor
sub
stc
stos
push
push
arpl
fsubs
mov
adc
stos
loopne
repnz
int3
es
dec
cmpl
sbb
aam
jmp
mov
jbe
inc
adc
add
jmp
sbb
mov
and
sub
xchg
stos
popa
inc
scas
jle
cmp
std
cs
bt
xor
pop
pop
add
dec
mov
push
push
jmp
in
jb
inc
pop
lods
sbb
mov
xchg
push
cli
fldt
adc
adc
stos
scas
xchg
test
xchg
jne
stos
push
cmp
movsb
xor
hlt
jo
lds
notb
jg
sbb
mov
stos
mov
push
sub
sbb
insb
bound
sahf
dec
dec
popa
cs
jo
fstl
push
sub
fsts
mov
push
stos
push
adc
bound
cmpsl
mov
stos
sbbl
test
out
negl
lea
sbb
mov
pusha
push
mov
xchg
bts
cs
jl
xchg
hlt
sub
sti
pop
dec
add
jl
cmpsb
fs
dec
sub
mov
in
mov
cmp
pop
stos
inc
ss
xchg
cltd
in
lret
lret
repnz
loope
and
addr16
je
mov
and
bound
sbbl
mov
f2xm1
sahf
imul
sti
repz
int3
inc
int3
jb
ja
loop
sub
lods
lret
fwait
por
jno
stos
movsl
imul
daa
lock
mov
call
stos
cli
cmpsl
addl
ds
leave
mov
stos
test
lock
stos
cmpl
dec
mov
xor
insl
imul
inc
mov
pop
mov
pop
inc
or
mov
stos
mov
or
stos
mov
xor
repnz
fs
nop
into
daa
arpl
sbb
mov
or
or
jmp
aaa
shlb
outsb
mov
stos
or
in
sub
inc
icebp
mov
mov
mov
pop
fs
cs
mov
scas
mov
stos
jnp
pop
loope
push
push
push
cli
iret
repz
addr16
or
cltd
insl
adc
jns
mov
jmp
jb
int3
dec
sahf
mov
jno
adc
xor
xor
mov
sbb
mov
shll
push
stos
rorl
mov
xchg
jmp
dec
leave
popf
pop
xchg
in
lock
pop
sub
xchg
mov
outsl
imul
fwait
into
inc
and
in
jecxz
xor
mov
fwait
pusha
cmpsl
sub
stos
rorb
into
cmp
aam
stos
pushl
xor
jmp
shlb
in
popf
cmp
out
sub
mov
stc
lret
stos
pop
inc
int
dec
push
popf
insb
stos
in
movsl
int3
xchg
mov
lret
stos
adc
stc
and
push
cli
cmp
lret
movsb
pop
ds
xorl
push
fwait
mov
and
and
mov
mov
mov
push
stc
fcompl
xlat
or
xchg
stos
dec
jbe
push
outsl
inc
mov
xchg
nop
loope
sub
fwait
cmp
cmp
jmp
mov
popf
xchg
scas
jns
stos
jle
jg
cmpsl
and
and
mov
loopne
stos
sarb
mov
icebp
and
pop
clc
pusha
insb
pop
in
stos
add
cmp
mov
dec
pop
xchg
cmp
stos
dec
cmc
leave
or
aas
ss
testb
aam
inc
dec
hlt
stos
jp
fisubrl
dec
fisubrs
mov
push
repnz
xor
test
and
rcrl
dec
out
and
loopne
adc
stos
xchg
int3
divl
mov
rcrb
xlat
adc
stos
jmp
jnp
in
pop
mov
push
daa
xchg
in
xor
fs
aad
and
xor
stos
xchg
ljmp
and
pop
into
imul
xlat
stos
push
lock
not
push
daa
jmp
stos
lods
push
inc
jns
pop
loopne
add
fisubrs
adc
dec
test
dec
popf
cmpsb
out
stos
aas
add
dec
mov
and
sub
ss
lret
repz
hlt
inc
stos
aam
data16
adc
je
sub
push
stos
or
mov
aam
adc
sub
leave
stos
insl
jmp
xor
or
jae
cmpsl
frstor
or
sub
and
int
pop
aam
jecxz
mov
repz
out
mov
icebp
scas
mov
xchg
cmp
add
mov
js
dec
stos
mov
stc
inc
iret
imul
pop
mov
test
mov
mov
push
xchg
adc
dec
add
stos
sub
lea
cmp
leave
subl
rcrb
enter
mov
cltd
mov
insl
push
das
popa
push
je
lods
lods
subl
xchg
adc
sarb
stos
loopne
or
cld
xchg
imul
cmp
out
fildl
stos
pop
jl
mov
dec
adc
in
stos
fldcw
add
push
jle
stos
stos
bound
shl
pop
imul
sbb
js
popa
fwait
aaa
test
stos
rcl
scas
bound
cmp
cmp
push
lods
add
notrack
jno
repz
add
stos
stc
shr
add
mov
ret
pop
push
jmp
flds
push
sbb
data16
popa
adc
outsl
stos
push
xchg
int3
sub
stos
mov
clc
mov
stos
fimull
daa
mov
jmp
push
lea
add
push
push
scas
sarl
pop
jmp
ret
divb
push
sub
movsl
repnz
mov
addr16
into
popf
imul
jp
inc
xchg
xor
scas
loop
daa
les
imul
fidivs
sub
jb
mov
shrb
leave
cmpsl
int3
in
pop
sbb
stos
shl
push
push
cmp
xchg
sahf
mov
jmp
lcall
inc
enter
adc
xlat
mov
xchg
dec
stos
lock
jns
cmp
std
push
dec
mov
sub
adc
mov
jmp
in
jnp
inc
imul
xor
lock
mov
inc
sub
mov
std
lods
or
out
push
inc
push
cld
lret
push
stos
gs
fiadds
pop
add
push
add
cli
cs
mov
push
sub
into
sub
cmp
insl
xchg
jp
pop
sub
jmp
loopew
das
jge
sbbb
cwtl
aam
nop
loopne
stos
ret
roll
adc
mov
sub
and
mov
mov
cmp
push
lret
insb
std
cmp
pop
xchg
test
pandn
popa
inc
push
stos
lahf
js
out
xlat
push
enter
mov
fnsave
xchg
xor
push
mov
push
int3
mov
adc
stos
ficompl
lahf
mov
loope
mov
das
ret
arpl
and
shrl
fstpl
mov
jle
push
iret
popf
stos
or
pop
in
int3
stos
mov
lcall
outsl
xor
inc
push
cmp
dec
push
iret
cmp
xchg
jae
inc
stos
adc
xor
repnz
add
mov
sbb
and
push
xchg
stos
mov
lods
stos
sub
inc
lods
sti
mov
addr16
out
notl
stos
mov
inc
xchg
pushf
repz
mov
xchg
and
stos
adc
shll
icebp
stos
lahf
push
aaa
movsl
add
test
jne
lcall
jmp
fdivs
inc
fldenv
mov
aas
lds
addr16
in
mov
fcmovbe
cmp
jmp
lret
or
cltd
fstpt
dec
insb
fwait
scas
xlat
stos
outsb
int3
lahf
xchg
dec
mov
stos
xor
aas
ja
mov
test
inc
cmpl
stos
jecxz
movsb
add
inc
mov
stos
jl
mov
pushf
movsl
stos
pusha
stc
cli
xor
ja
stos
xorb
in
mov
sbb
jmp
scas
cmp
aaa
mov
mov
imul
je
or
fwait
sbb
mov
stc
add
sub
nop
mov
imul
pop
jmp
lcall
stos
test
jg
mov
push
mov
in
fcoml
mov
in
add
push
imulb
std
and
jae
and
dec
mov
adc
popf
and
scas
outsl
mov
jl
xchg
fcmovb
pusha
lahf
pop
push
ficoml
sbb
mov
sbb
or
adc
popf
lock
add
les
inc
push
mov
in
int
aaa
out
iret
cmpl
xchg
mov
sub
and
stos
jg
sub
fs
insl
lods
std
dec
stos
mov
xchg
jb
jmp
cli
dec
ja
sub
inc
xchg
sarl
daa
sbb
jae
stos
fs
and
aam
cmp
fcmovb
stos
stos
xor
and
inc
stos
dec
andl
sub
mov
adc
test
pop
loopne
in
and
push
and
push
xor
add
mov
inc
adc
imul
hlt
adc
push
push
aam
negb
mov
adcb
stos
jle
nop
add
testb
sub
mov
mov
ret
inc
pop
lds
sbb
out
jae
push
adc
nop
cs
imull
test
cltd
ja
stos
push
jbe
aam
inc
jns
stos
testl
mov
push
leave
or
lahf
add
jge
add
scas
movb
add
outsl
lea
out
pop
push
sub
pop
xchg
fcomps
xchg
cmpsb
inc
stos
aam
call
in
imul
adc
dec
jl
stos
syscall
adc
cmp
loopne
movsb
push
repnz
push
cmc
xchg
pop
in
and
rcrb
nop
stos
ret
sbb
and
jbe
stos
loopne
pop
push
fcmovne
shrl
leave
test
dec
mov
push
arpl
aas
stos
jmp
push
aam
inc
cs
dec
daa
fsubrl
je
cmp
and
cwtl
jb
jecxz
mov
mov
mov
sbb
pop
rorl
test
mov
testl
dec
push
mov
mov
in
aas
dec
pop
stos
sub
fsubrl
fimull
stc
ret
add
stos
fidivrs
cmp
stc
stos
jb
jmp
mov
std
rcll
stos
push
ljmp
sub
cli
sub
dec
push
push
in
inc
mov
stos
aaa
mov
mov
mov
imul
mov
sub
nop
and
fdivrs
clc
xchg
stos
fs
pop
aad
subb
and
or
bound
cmp
dec
cli
push
mov
pop
movsb
pop
orl
pop
push
dec
add
dec
aam
stc
mov
out
fmuls
jle
and
sbb
imulb
cwtl
and
ss
out
mov
push
sarw
stos
inc
cmc
fcomip
pushf
sti
lods
adc
xchg
jmp
push
in
les
and
inc
fwait
push
lods
rorl
stos
std
mov
adc
xor
xchg
rep
xchg
dec
pop
stos
lcall
nop
stos
jg
out
push
loopne
shlb
pop
and
mov
inc
cmpsl
test
sub
cmpsb
test
push
xchg
cmp
jnp
ret
cmp
aad
shrl
cld
int
fs
icebp
dec
sbb
mov
jae
lahf
int3
inc
stos
imulb
ret
shll
inc
fcompl
push
xchg
dec
sahf
addl
dec
jmp
cmp
jp
xlat
clc
pop
jne
ja
das
addr16
jns
and
xchg
pushf
pop
popfw
inc
mov
jmp
or
ret
lods
push
cmpsb
int
stos
push
mov
inc
stos
pop
iret
add
stos
lods
outsl
loop
cli
jnp
ret
jl,pn
jmp
mov
xor
add
lods
daa
scas
dec
mov
mov
dec
and
ret
jmp
iret
push
cltd
dec
jb
rcrb
stos
shl
inc
bound
stos
sbb
sbb
pop
mov
nop
jnp
sti
stos
shl
jnp
shll
jmp
xchg
scas
add
stos
pop
push
mov
mov
cld
and
dec
mov
push
sar
xor
fwait
cmp
inc
push
mov
push
subb
and
into
stos
push
xchg
out
add
mov
sahf
xchg
in
fdiv
ja
lahf
aas
pop
xchg
int3
mov
adc
and
faddl
outsb
mov
push
roll
adc
daa
mov
add
xlat
mov
stos
data16
lods
mov
cmp
xchg
in
jmp
inc
mov
mov
insl
stos
pop
cwtl
xorb
xchg
jg
push
push
push
lahf
icebp
add
iret
daa
xchg
mov
jbe
jb
adc
push
inc
ljmp
xor
mov
sbb
mov
dec
stos
mov
loope
test
daa
orl
push
pop
pop
push
mov
jl
dec
scas
stos
ficoml
out
sub
js
add
movsb
aaa
ja
sbb
insl
stos
mov
cmp
rep
stc
inc
mov
std
jl
mov
dec
negb
shrb
jb
aad
ret
sub
add
fcompl
jp
fabs
xchg
mov
stos
into
jge
sbb
fucomip
nop
stos
and
mov
jle
addr16
sub
sbb
jmp
stos
jnp
pushf
lods
out
sub
jnp
push
lret
cmp
jmp
mov
and
pop
inc
inc
pop
sub
inc
xchg
xor
ja
rorb
jnp
lock
or
lods
test
pop
stos
daa
mov
stc
add
movsb
push
loopne
hlt
mov
stos
js
lods
xchg
stos
inc
dec
inc
jbe
xchg
call
xor
cmp
ja
sahf
cli
push
xor
adcb
movsb
push
and
push
jbe
arpl
lahf
inc
ds
mov
cmp
addl
imul
or
dec
cmpsl
mov
fcom
in
jb
mov
sbb
sub
sub
fistps
jmp
mov
xchg
stos
mov
xchg
mov
mov
mov
jmp
xlat
jle
mov
mov
imul
mov
pushf
cmc
sti
popa
jmp
pop
arpl
lods
inc
jb
daa
sbb
repz
pop
stos
mov
les
add
loop
mov
sub
add
mov
imul
pop
mov
ds
stos
mov
cmpsb
mov
stos
or
repz
or
pop
push
movsb
and
add
lret
push
sub
cmp
popf
push
dec
bnd
iret
data16
xor
mov
pop
flds
stos
lcall
cmp
xchg
or
mov
jmp
pop
in
jnp
mov
movsb
adc
jmp
mov
xchg
scas
lret
adc
arpl
adc
shl
mov
jecxz
dec
mov
cmpsb
dec
ja
adc
out
bound
mov
sub
fists
test
or
lcall
add
fisubl
stos
gs
scas
aas
adc
fbld
lcall
mov
or
aam
pop
stos
gs
imul
pusha
or
add
jae
jg
adc
mov
dec
cmp
testl
cld
fs
mov
int
stos
insb
icebp
frstor
cmp
jp
stc
jmp
pop
jg
cmc
push
xchg
jns
stos
lods
icebp
inc
or
cwtl
mov
jecxz
imul
ljmp
pop
or
mov
xchg
stos
pop
outsl
test
sub
mov
lds
adc
mov
mov
stc
jl
pusha
pop
add
jmp
stos
test
fmul
pusha
pop
jmp
jne
in
cmp
inc
ljmp
sub
xchg
lods
mov
add
xchg
nop
lcall
in
stc
movsb
stos
mov
lock
mov
stos
jge
movsl
pop
sub
dec
test
adc
mov
xor
sub
imul
fwait
in
int
push
sbb
push
insl
scas
les
icebp
xor
pop
push
aas
ret
sbb
xchg
nop
jo
cmpsl
jle
mov
les
out
daa
cmovbe
cld
pushf
stos
inc
mov
xchg
mov
sbb
stos
inc
sub
xchg
pop
push
push
scas
stos
sub
out
mov
cmp
adc
popa
stos
xchg
fistpll
and
mov
dec
and
jo
movsl
repnz
movsb
gs
imul
push
stos
mov
outsl
cli
xchg
dec
inc
sub
or
outsb
push
mov
pop
lea
mov
insb
subb
imul
lds
ja
add
sub
imul
ljmp
gs
pop
arpl
out
cmpsl
pusha
fisttpl
scas
mov
jg
sahf
enter
push
nop
in
stc
push
data16
mov
in
aam
in
stos
push
int3
push
inc
add
cmp
stos
add
fdivl
push
pop
sub
jg
mov
push
xchg
sub
aas
lods
mov
test
cld
pop
insl
push
push
imulb
movsl
js
push
mov
push
pop
cmpsl
xchg
mov
lock
ja
adc
aaa
pop
data16
and
std
out
stc
fbstp
push
daa
sub
aad
and
mov
xchg
stos
js
xchg
pop
stc
shr
mov
mov
jp
dec
pop
add
mov
or
les
fwait
rorb
nop
lods
ljmp
sub
js
add
jno
test
loopne
and
pop
xchg
cmp
push
idivl
pushf
mov
lret
mov
out
stos
adc
adc
xor
jb
lret
enter
sbb
jg
push
inc
stos
adc
and
in
jnp
fwait
es
push
in
push
addr16
jp
mov
cmp
mov
xor
xorl
jge
lods
mov
and
fdivl
das
stos
and
pop
push
roll
mov
xor
mov
outsb
dec
sahf
imul
xchg
xchg
sbb
mov
ficoms
popf
das
xorl
xor
jb
sub
mov
and
popa
xor
push
cs
outsl
mov
scas
jae
out
call
lds
es
add
jmp
stos
mov
shrl
and
sbb
push
stos
ffreep
in
adc
dec
mov
dec
ret
jl
mov
push
std
mov
popf
add
je
aaa
fwait
mov
in
test
enter
pop
stos
xor
lods
dec
push
mov
jae
mov
sti
stos
cmp
addl
aad
sub
cmpsb
mov
xchg
mov
icebp
hlt
pop
cmc
mov
jecxz
jmp
repz
aad
loopne
mov
mov
push
inc
pusha
xor
jge
adc
ret
xchg
inc
cmpsb
jmp
icebp
pop
rcll
out
jmp
push
or
sub
mov
addr16
xchg
stos
sbb
cmp
loop
imul
mov
aam
int3
arpl
jo
push
pop
mov
or
adc
push
mov
testb
cli
stos
cmp
pop
out
iret
stos
in
xor
jp
or
inc
or
xchg
in
imul
or
lret
dec
cltd
arpl
dec
stos
and
cwtl
xor
dec
stos
mov
mov
leave
jmp
cmp
shll
jae
cli
adc
xchg
stos
push
fildl
pop
movsb
or
sbb
scas
mov
fxch
in
jmp
jb
inc
xchg
jbe
gs
or
pop
fsave
test
jl
es
mov
std
add
clc
ljmp
stos
pushl
stos
bound
fwait
xor
repnz
stos
shrl
test
rep
lods
or
push
adc
fisttps
loop
js
stos
jns
cld
icebp
test
es
jmp
pop
inc
pusha
push
mov
stos
lods
in
loop
pop
mov
adc
sub
jl
xchg
xchg
aas
outsb
call
sub
mov
test
iret
ljmp
dec
clc
stos
and
jbe
stos
mov
cli
lods
lcall
mov
stos
cmpsb
fistps
stos
pop
repnz
mov
xchg
decb
in
int3
sbb
btr
push
ds
sub
push
pop
cwtl
and
imul
pop
stos
pop
jmp
or
gs
adc
mov
ds
cmc
stos
or
movsl
adc
repnz
fisttpll
add
cmp
stos
mov
fbstp
sahf
stos
insl
mov
xor
cwtl
cld
cmp
cld
pop
mov
push
js
out
inc
stos
shlb
lds
std
jns
dec
sti
lret
bound
and
lods
sbb
mov
outsb
mov
cmpsl
das
flds
stos
jp
xor
push
sub
stos
lret
xor
stos
jae,pn
roll
ja
and
mov
shll
icebp
cmp
mov
sub
mov
stos
cmp
jno
je
sbb
stos
out
jnp
mov
stos
jle
inc
insb
mov
or
call
daa
pop
sub
aas
mov
sbb
std
clc
mov
xchg
mov
xchg
adcw
cltd
ret
add
icebp
xchg
in
pop
xchg
stos
dec
jmp
hlt
int3
lahf
es
movsb
call
dec
xor
icebp
sub
cmp
shl
popa
mov
jge
push
addl
arpl
rcrb
mov
arpl
scas
jno
subl
sbb
out
out
sbb
mov
jo
mov
pop
pop
or
cmp
sbb
stos
rcr
data16
ret
dec
inc
sub
jecxz
dec
sub
mov
cmc
inc
xchg
cli
push
scas
out
sub
mov
inc
cmp
push
push
cmc
repz
lock
sub
push
mov
loopne
xchg
pop
stos
loop
push
add
imul
fisubrl
dec
pop
fs
inc
xchg
mov
scas
rcrl
call
in
ljmp
push
insl
inc
mov
loopne
xor
mov
xor
xor
adc
out
mov
clc
xor
push
arpl
in
stos
pusha
jb
xor
dec
mov
or
push
xchg
inc
ss
das
loop
ja
pop
es
mov
jb
xchg
push
mov
cmpsb
loop
push
pusha
and
push
mov
lcall
adc
xchg
shl
mov
adc
inc
fidivl
fwait
nop
jmp
dec
lret
cmp
imul
adc
in
sarb
stos
push
sbb
add
mov
fmull
cmp
fimull
xor
stos
pusha
xchg
sbb
cmc
pop
daa
inc
push
fs
gs
cs
stos
lods
out
daa
dec
jno
jmp
les
xchg
jp
test
bound
adc
pushf
xlat
out
sbb
les
and
push
jp
and
fsubr
xchg
xor
popa
push
cmpsb
pop
stos
push
cmp
pushf
xchg
lds
fimuls
jae
bound
stos
in
adc
mov
lahf
dec
push
jmp
rcrb
mov
lock
hlt
sub
scas
imul
jmp
xlat
repz
xor
js
rclb
stos
mov
xor
lods
mov
stos
pop
mov
adc
out
loope
incl
xchg
cwtl
sbb
inc
xor
movsl
orb
adc
es
lds
jb
jmp
pop
je
les
movsb
mov
inc
or
movsb
push
out
mov
add
js
add
mov
add
lret
and
xchg
stos
es
xor
cmpsb
js
add
ljmp
lret
xor
add
push
sbb
pop
andb
adc
xchg
inc
add
stos
out
inc
std
jl
mov
idiv
mov
loopne
sbb
jp
fisubrs
push
pop
jo
xchg
out
insb
xchg
lea
stos
fsubs
xor
inc
sbb
xchg
lcall
shll
cmp
pop
mov
lds
dec
sbb
lock
push
addr16
cld
ljmp
or
cmp
mov
stos
mov
testb
int
aaa
into
stos
pcmpgtw
aas
cmp
jg
dec
ja
jge
in
dec
mov
test
sub
stos
xchg
cmpsl
cmc
hlt
stc
stos
cmp
xchg
pop
repnz
dec
add
jp
push
nop
loopne
stos
inc
sti
mov
xor
jecxz
add
inc
stos
aas
xchg
mov
jg
pop
js
mov
lahf
sub
mov
xchg
jge
lret
pusha
xor
loopne
xlat
mov
cmp
xchg
sub
adc
addl
push
ficoms
xor
js
jo
cmc
iret
imull
or
mov
stos
fucom
fsubl
aas
stos
test
lods
movsl
cmp
sti
enter
push
sbb
int3
xchg
movsl
in
adc
stos
stos
push
inc
inc
adc
test
stos
cli
insb
sbb
fsubrl
fcoms
jns,pt
pop
lds
xchg
outsl
stos
sub
mov
and
mov
mov
mov
stos
and
fildll
mov
sub
pop
xchg
mov
cs
in
pop
xchg
arpl
stos
pop
jmp
adc
int
stos
fdivs
xor
push
sahf
lea
stos
mov
inc
or
in
add
sbb
adc
fcmovne
dec
movsb
movsl
imul
ss
lds
sbb
xor
pop
mov
cmpsl
dec
cltd
push
ljmp
lock
adc
add
int3
mov
cld
lods
out
jle
or
repnz
stos
lret
pop
mov
pusha
dec
jns
cmp
insb
stos
call
pop
out
xchg
add
rcll
clc
push
xor
in
stos
insl
cmpsl
icebp
or
insb
dec
or
mov
dec
cmp
xchg
cmp
adc
sbb
in
stos
cmpsl
sbb
dec
and
fs
jno
popa
push
jae
stos
call
add
and
pop
and
jno
call
movsl
mulb
xor
icebp
out
lret
mov
scas
cli
movsb
pop
xchg
arpl
jno
stos
adc
inc
mov
sti
xor
iret
test
je
jno
cld
fisttpll
jae
ljmp
je
jo
arpl
daa
jle
xchg
xchg
pop
jecxz
js
sti
jge
mov
xchg
stos
xor
cs
lea
mov
stos
lcall
xchg
jp
rolb
sbb
push
test
push
and
imul
cld
stos
popf
xchg
and
rcll
lahf
mov
xchg
outsb
jmp
cld
mov
je
fnstcw
sub
stos
or
inc
cld
mov
fdivr
dec
imul
aad
or
xchg
repnz
cmc
stos
xlat
pop
mov
pop
inc
arpl
stos
xchg
in
subb
std
jb
leave
shrl
xor
stos
mov
adc
jp
cmpsb
cs
fwait
or
stos
mov
push
lods
sarl
rorb
iret
addr16
ss
sbbb
inc
pusha
lods
mov
xchg
scas
stos
adc
dec
xchg
inc
xchg
out
in
inc
sub
popf
int3
movsl
aaa
stos
test
or
in
stos
in
sub
pushf
pop
mov
sub
jmp
test
std
cltd
add
mov
pop
loop
push
xchg
mov
mov
lods
add
stos
pop
lret
mov
lcall
das
cwtl
ds
push
xchg
cli
insl
arpl
mov
adc
push
movsl
scas
jg
sub
stos
sbb
rclb
stos
lret
cmp
int
int
stos
inc
push
addb
or
and
push
sub
add
adc
pop
mov
punpckhwd
add
dec
movl
sbb
daa
mov
xor
xchg
or
repz
in
ds
std
pop
cli
stos
lret
testb
pop
fldcw
xchg
stos
cld
and
loop
lods
cmp
push
jno
sbb
call
movsb
shl
pop
or
mov
movb
out
es
shll
iret
fwait
and
mov
xchg
je
out
jl
stos
mov
inc
nop
ljmp
rorl
mov
mov
sbb
sti
ja
daa
add
in
push
aam
xchg
stos
cmpsl
ljmp
pop
cmp
mov
mov
xchg
xchg
daa
push
popa
mov
cmpsb
xchg
mov
or
ret
daa
xchg
stos
push
push
adc
stos
push
test
sbb
fildll
lea
adc
subl
mov
lods
cmp
pop
cmpsl
stos
cwtl
push
pop
pop
hlt
cli
inc
mov
stos
and
xlat
sbb
bound
in
sbb
mov
insb
mov
mov
nop
cmp
test
adc
imul
pop
dec
jle
lods
ret
mov
scas
imul
add
in
jo
js
mov
shrl
adcb
push
xlat
push
int3
xor
test
cmp
and
hlt
imul
mov
outsb
pushf
pop
and
xor
in
fsub
movsl
jae
stos
mov
out
mov
xor
lea
mov
scas
inc
jge
in
sbb
stos
daa
leave
lret
cld
xchg
and
pop
das
xor
jns
jge
mov
stos
in
insl
std
push
dec
sub
filds
xchg
stos
lock
xchg
lods
insl
add
in
stos
sbb
lahf
out
data16
scas
lods
fstps
stos
xlat
and
out
frstor
cwtl
cld
mov
dec
pop
mov
ss
dec
pushf
aas
stos
lods
push
hlt
jmp
jb
out
sub
imulb
inc
cmp
fdivrl
aad
mov
mov
xchg
mov
adc
sti
test
stos
and
add
std
dec
pop
stos
xchg
mov
fs
cld
es
xchg
mov
sub
mov
stos
pop
xor
jg
mov
int
jmp
mov
mov
stos
push
movsl
lock
lret
cmp
outsl
stos
cmp
cmp
jnp
ja
js
push
sub
jmp
sub
xchg
negl
mov
sahf
sbb
cwtl
stos
jp
call
test
outsb
lea
sub
push
dec
stos
sbb
scas
mov
sub
push
aam
xchg
and
jmp
cmp
xor
inc
xchg
stos
xchg
insb
xchg
jbe
adc
aas
stos
andl
lods
pusha
lret
xor
int3
bound
outsb
push
cmpl
stos
loop
movsl
mov
mov
pop
pop
jmp
xchg
imul
xlat
stos
push
dec
lock
imul
push
sbb
mov
xchg
stos
outsl
cs
push
pop
fstpl
stos
ljmp
push
and
out
stos
mov
stos
cwtl
jae
push
js
icebp
int
sub
lods
jnp
les
test
fdivrs
mov
lahf
xchg
sarb
es
stos
ds
int3
xchg
jb
adc
push
lods
movsb
out
shlb
das
mov
aam
push
test
jl
dec
jmp
cli
ret
pop
testb
iret
cs
adc
add
les
mov
out
stos
jb
xchg
imul
cld
data16
push
ljmp
iret
test
cmpsl
imul
xchg
jg
stos
cwtl
jne
inc
lahf
cmpsb
andl
ret
mov
xor
push
aaa
scas
cmp
aam
aas
fwait
stc
icebp
inc
stos
div
inc
les
daa
jno
test
pushf
scas
push
rcr
mov
jnp
cmp
test
inc
sub
jno
das
mov
sti
inc
dec
out
lods
lahf
jmp
and
pushf
cmpsb
daa
inc
cltd
pop
imul
stos
inc
sbb
add
mov
jns
inc
mov
aaa
adc
or
mov
aas
mov
dec
lahf
sbb
fdivrs
mov
subb
in
xor
stos
add
push
mov
jmp
dec
out
xor
arpl
push
dec
lss
ret
jmp
or
in
jns
mov
arpl
jmp
clc
dec
jbe
pop
cmp
inc
mov
stos
leave
shll
xlat
cmc
lahf
jns
sbb
jo
jle
aad
stos
daa
xchg
out
in
xchg
stos
and
xchg
jge
xor
stos
adc
push
addr16
mov
pop
push
push
sbb
scas
outsb
dec
xchg
bnd
insb
stos
loope
fbstp
ret
push
jecxz
std
xchg
jg
lret
jo
test
stos
ljmp
push
daa
cmc
movsl
in
mov
mov
fnsave
daa
das
aaa
ja
mov
inc
push
shr
mov
jecxz
cmp
scas
les
dec
mov
gs
fwait
cmp
call
mov
jmp
fbld
or
imul
sub
push
out
pop
lods
pop
stos
stc
repz
sub
push
iret
sti
mov
pusha
lcall
sub
and
lods
push
les
fstp
cmpsl
imull
add
cmp
js
fcomi
sbb
stos
mov
and
inc
xor
cli
divl
pop
cmp
sarl
lods
sub
lds
adc
loope
jns
cmp
stos
in
jmp
shlb
sbb
aaa
adc
outsb
stos
cmc
xchg
cli
xor
xor
out
sbb
xor
jae
ja
mov
out
rcl
dec
gs
out
xor
sbb
stos
sbb
daa
int
popf
sub
mov
in
mov
stos
lods
dec
ret
mov
stos
dec
fidivrl
mov
fsubrs
or
dec
jnp
lock
inc
cmp
mov
sarl
mov
mov
jno
stos
xadd
sub
mov
and
adc
add
stos
xchg
mov
xlat
mov
out
mov
xchg
outsb
test
stos
cs
adc
mov
mov
rcll
xor
stos
xchg
shlb
mov
int3
sbb
mov
loope
stos
movsb
fsubs
xor
popa
out
add
xor
loopne
pop
lods
cmp
out
addr16
ljmp
push
and
popf
xor
add
stos
sbb
jnp
adc
xor
or
stos
out
sbb
pushf
stos
std
add
xchg
pop
dec
ljmp
sbb
cmp
subl
mov
add
scas
imul
and
sub
std
pop
stos
jns
mov
lahf
mov
dec
xor
movsl
jl
out
xor
imul
mov
js
stos
out
dec
enter
ret
stos
jge
jne
lcall
xor
je
sti
in
mov
fisubs
add
fildll
in
mov
sub
aad
stos
inc
cld
pop
lods
xlat
nop
or
jp
jmp
je
int
push
popa
stos
pop
add
aad
push
fistl
stos
and
cmp
sbb
jle
pop
imul
xor
stos
cs
outsl
pop
jmp
pop
in
lret
dec
mov
stos
mov
les
movsl
aaa
popf
stos
push
mov
test
pop
cmpsl
stos
pop
rolb
jne
out
stos
xchg
sti
stc
cwtl
hlt
or
and
jge
jg
sub
mov
lock
imul
aaa
inc
jae
daa
cwtl
xlat
jnp
pop
or
arpl
add
sbb
add
pushl
cli
jae
scas
shrb
dec
ret
pop
arpl
jnp
push
push
stos
sbb
xchg
pop
shll
xor
dec
and
mov
sbb
aas
out
stos
dec
aaa
mov
push
jnp
push
dec
sbb
mov
fisubrl
arpl
push
cltd
or
shrb
into
sbb
fadds
stos
add
xchg
dec
mov
cmpsl
mov
aam
cmpsb
stc
push
jecxz
icebp
and
mov
stos
cld
pop
test
testl
int3
stos
mov
clc
or
xchg
push
test
pop
push
jmp
pusha
out
mov
cltd
push
stos
dec
loope
repz
ds
push
sub
imul
stos
ja
mov
xchg
stos
je
pop
and
jl
xchg
mov
dec
pop
in
adc
ds
in
sub
mov
cltd
pusha
in
jmp
loop
and
pop
iret
add
hlt
into
mov
xor
int
mov
out
xchg
push
cwtl
lods
clc
bound
sbb
sarl
add
outsb
sub
and
mov
ds
cmp
push
stos
and
fcompl
rcr
push
xchg
lods
stos
sub
or
cwtl
pop
adc
cmpsl
push
jg
stos
xchg
xchg
leave
jb
mov
mov
imull
mov
push
popf
data16
lds
stos
dec
xchg
test
iret
ret
mov
mov
inc
stos
arpl
in
push
imul
cmp
xchg
sub
stos
jg
outsl
pop
adc
std
add
popf
stos
shr
stos
test
sahf
in
out
insb
popf
cmpsl
stos
cmp
or
sub
mov
loop
stos
ja
sahf
aam
mov
shrl
icebp
test
mov
call
std
outsl
mov
stos
loopne
mov
stos
mov
ficoms
hlt
std
stos
or
mov
stos
inc
int
aas
lods
stc
into
jmp
aad
dec
pop
jae
cwtl
nop
adc
mov
mov
and
xchg
inc
fbld
jg
bound
addb
jmp
xor
push
xchg
aas
lock
and
stos
push
adc
and
mov
and
pop
push
negb
pop
pop
add
push
cltd
adc
ret
dec
mov
mov
ficoms
xor
push
shl
jno
cmp
lods
pop
jb
insl
jmp
loopne
movsl
jmp
in
xor
sbb
fisubs
xlat
mov
pop
or
xor
imul
cmp
jae
inc
sub
mov
gs
mov
inc
mov
sbb
jecxz
movsb
add
cmc
stos
enter
push
jmp
out
ss
pop
decb
ret
js
stos
jo
fidivrl
push
sub
cmpsl
nop
mov
stos
and
xchg
mov
push
mov
jmp
pop
stos
jecxz
xchg
lods
je
scas
fadds
fwait
mov
mov
std
inc
pop
push
out
adc
cmpsb
xchg
dec
sbb
sti
or
inc
test
mov
stos
pusha
xor
add
sbb
int
and
stos
bound
daa
rep
and
mov
mov
fdivs
and
call
sub
xor
or
cmp
lods
imul
jns
pop
test
dec
stos
mov
xlat
mov
stos
jle
jae
mov
test
in
xchg
mov
jmp
stos
popa
loope
dec
and
pop
movsl
stos
and
dec
notl
jle
inc
dec
sbb
or
push
daa
sahf
std
cmp
pop
stos
test
sbb
sub
mov
mov
mov
mov
je
push
subb
mov
adc
stos
das
pop
pop
mov
fldl2e
gs
pop
push
cwtl
ja
hlt
xchg
sahf
movsb
sti
loopne
mov
xor
dec
push
sahf
or
pop
aaa
xchg
addr16
out
movq
fwait
mov
push
jl
or
pushf
daa
jae
or
fildll
jo
push
dec
inc
fdivs
push
jp
inc
scas
push
xchg
sub
adc
jno
mov
stc
mov
mov
scas
adc
stos
rcll
push
sub
sbb
xchg
xchg
cltd
mov
adc
xor
jmp
sbb
push
mov
stos
loopne
arpl
daa
push
push
repz
sbb
fldcw
gs
dec
stos
arpl
shll
stos
sbb
jno
lahf
stos
mov
test
std
int3
push
stos
cmp
xchg
mov
pop
xor
popa
pop
out
sarl
or
or
mov
add
rcrb
or
movsl
dec
dec
dec
xor
cmpsl
jmp
xlat
lods
xchg
sub
sbb
mov
dec
les
push
stos
cmp
scas
push
mov
pop
xchg
xor
hlt
mov
mov
stos
xor
cmp
jae
fcmovnu
movsl
jp
fisttpll
stos
ret
andb
stos
jbe
push
imul
ljmp
repnz
mov
lds
sub
js
mov
mov
sbb
mov
enter
mov
lahf
or
lret
enter
imul
stos
cmpl
or
arpl
fisubrl
jl
fsubrs
or
rorl
add
gs
or
stos
insl
mov
sub
addr16
jecxz
stos
pop
mov
stos
clc
out
ficoml
mov
xlat
lock
mov
fmulp
lds
mov
pusha
inc
pop
stos
insb
mov
imulb
xlat
add
ret
mov
mov
jmp
cwtl
cltd
sub
cmp
divl
mov
push
out
je
adcb
jmp
push
enter
or
mov
imul
pop
sub
shrl
les
pop
int
or
dec
xchg
sbb
jmp
or
imul
xor
mov
stos
addb
dec
out
stos
rcrb
cltd
xor
mov
dec
push
daa
pop
fwait
insb
out
push
es
mov
or
inc
arpl
insb
adc
mov
aaa
stc
add
cmp
cld
stos
out
push
pushf
sbb
cwtl
icebp
jle
stc
mov
call
imul
push
icebp
push
mov
stos
adc
test
stos
mov
xlat
icebp
int3
inc
pop
xchg
iret
or
fcomi
iret
scas
adc
pop
iret
mov
test
aaa
stos
hlt
leave
sti
mov
addr16
inc
add
xchg
add
jne
lret
in
nop
fwait
and
iret
mov
xchg
pop
scas
mov
push
and
inc
and
imulb
repnz
in
pushl
lods
rcrl
aam
bound
stos
adc
mov
xchg
data16
xchg
stos
pop
imul
out
cmp
push
cld
sub
sbb
mov
movsl
xchg
test
lods
cmp
das
ljmp
iret
xor
lcall
fwait
imul
repz
pusha
enter
and
rorl
out
dec
and
xchg
mov
inc
jp
dec
mov
xor
xor
stos
adcl
mov
das
sbb
or
mov
add
mov
imul
sbb
stos
in
or
add
dec
dec
jp
inc
xor
stos
jecxz
testb
push
mov
int
jae
into
negl
out
add
xchg
ss
xchg
cld
xchg
shrb
mov
adc
sbb
aad
movsb
add
fwait
out
mov
testl
ljmp
sbb
add
dec
pusha
xchg
test
mov
pop
pop
lods
push
xchg
stos
lods
rcr
dec
jmp
xor
sbb
mov
stos
cli
addr16
pop
lods
ds
pop
cmpsl
mov
lret
adcb
mov
cltd
faddp
adc
imul
cmp
mov
mov
sub
sub
sub
add
or
sub
xchg
or
gs
outsb
mov
mov
dec
cld
stos
jns
dec
push
inc
sbb
xchg
jbe
dec
stos
ss
stos
repnz
shrb
sub
sbb
or
loop
call
mov
stos
mov
lret
aas
mov
cs
call
imull
jns
fbld
mov
stos
sbb
inc
jp
or
inc
mov
push
outsb
stos
mov
mov
dec
xor
shrb
mov
push
cltd
test
adc
int
cld
out
mov
scas
insl
mov
arpl
xchg
mov
sbb
sahf
test
xchg
jp
and
mov
mov
add
push
fnstcw
mov
mov
int
stos
test
test
pop
imul
fsin
in
rorb
sub
ljmp
ret
loopne
test
daa
adc
mov
sbb
push
push
add
push
pop
add
lds
cmpsl
cmp
jmp
jno
ss
lds
cwtl
repnz
dec
jp
mov
lret
stos
andl
ficomps
aam
daa
loop
in
inc
inc
mov
imul
or
rcrb
dec
mov
dec
jl
mov
lahf
push
out
cmp
sub
movsb
dec
cmp
andb
ror
mov
inc
pop
xlat
loop
int3
stos
adc
xchg
lcall
ret
mov
rcr
cltd
mov
sub
and
shlb
movsl
stos
lret
decl
aaa
mov
mov
jnp
mov
out
pop
cmp
out
movsb
push
lcall
lods
add
or
stos
orb
test
clc
add
imul
xchg
mov
into
test
add
mov
mov
testb
daa
and
xchg
push
stos
inc
gs
xor
xchg
and
lock
fcomps
push
or
out
sub
loopne
and
or
jmp
inc
jbe
xor
mov
lods
lods
scas
out
stos
mov
cmpsl
loope
stos
mov
aas
cwtl
fildl
dec
jbe
pop
dec
and
test
stos
cltd
test
dec
popl
popf
xchg
jne
sbb
imul
lds
inc
xchg
jbe
pop
movsb
mov
fwait
mov
and
mov
stos
movsb
fadd
xchg
lock
inc
insl
lea
cmp
daa
clc
jo
jbe
fcmovnbe
aad
jle
lods
decl
pop
std
sar
jnp
mov
dec
xchg
mov
adc
ds
inc
add
fistl
jp
stos
out
out
lret
aas
ljmp
jge,pn
or
lock
pop
stos
pop
xor
jmp
jmp
jnp
ds
jo
inc
stos
les
iret
xchg
std
es
imul
daa
jg
mov
aas
shr
add
cmp
adc
out
jae
xchg
je
stos
sbb
mov
enter
jns
sbb
xor
mov
stc
jl
cltd
mov
sub
shrl
inc
push
lea
mov
aad
jge
or
cmp
jmp
hlt
shll
imul
mov
les
xchg
in
sbb
or
sbb
or
mov
xchg
push
mov
int3
adc
xchg
xor
push
scas
pop
stos
out
pop
leave
mov
adc
in
movsl
sbb
les
xorl
stos
mov
aas
inc
sbb
mov
stos
push
jbe
addr16
dec
stos
sti
popf
fldcw
cmpsl
push
stos
inc
decb
ret
fmul
push
inc
stos
aad
fcmovb
test
aas
test
dec
mov
pop
into
fnstcw
xlat
xchg
movhps
stos
insb
pop
mov
pop
jbe
push
imul
inc
stos
pusha
cwtl
dec
in
out
dec
stos
test
bound
stos
pop
out
pop
sub
jmp
in
outsb
xor
gs
pop
inc
stos
inc
call
stos
mov
xor
xchg
fwait
inc
out
adc
mov
ficoml
or
jmp
sub
sub
stos
push
and
cmp
imul
dec
into
cltd
daa
es
icebp
hlt
pop
xor
push
xchg
cmpsl
imul
adc
sub
mov
clc
fbld
out
push
mov
xlat
cld
xchg
pop
push
in
loope
psubusw
es
fwait
and
fisubl
xchg
fwait
stos
lcall
pop
stos
inc
sbb
andl
imul
mov
jmp
stos
stc
push
mov
stos
mov
in
test
cmc
cwtl
mov
into
mov
out
inc
push
js
pop
fists
cmp
cs
sub
popf
mov
std
push
or
pop
mov
sbb
rorb
add
lds
cmc
test
stos
loope
push
cli
in
mov
jmp
mov
clc
cltd
mov
sub
mov
fwait
hlt
mov
dec
pop
in
out
mov
cmp
jge
ds
mov
clc
int3
adc
aaa
int
mov
push
xor
repnz
fstps
aam
jnp
inc
aas
hlt
stos
repz
inc
jno
pop
gs
mov
sbb
mov
lret
pushf
cwtl
sti
xchg
daa
sbb
mov
bound
stos
mov
cmp
sub
mov
mov
sbb
xchg
fisubrs
cli
pop
mov
mov
cs
rol
scas
sbb
test
dec
mov
sbb
imul
add
mov
iret
xchg
push
arpl
insb
push
push
lret
stos
lds
sarb
jae
jnp
sbb
repz
aas
push
clc
xchg
mov
push
mov
or
jmp
lods
stos
jmp
sub
jmp
orl
shrl
push
xor
lcall
sbb
int3
popa
ss
stos
imul
in
movsb
pop
jmp
jge
add
rcl
and
jns
pop
lahf
js
fwait
mov
ljmp
mov
or
mov
mov
rclb
lock
push
and
decb
cmp
add
cmp
jecxz
or
push
stos
cli
mov
popf
js
xorb
cmp
adc
subb
stos
test
fs
int3
push
addr16
out
adc
jge
orl
xor
xchg
out
rorl
sbb
lods
mov
jno
fidivrl
ret
stos
ljmp
fs
mov
imul
out
sarb
lods
xlat
xchg
gs
int3
fimuls
xchg
sbb
in
lock
mov
jno
mov
sub
movsl
and
lahf
icebp
push
sti
jl
mov
jmp
inc
sarl
sub
inc
imul
sti
cltd
jo
or
dec
lds
stos
iret
pop
mov
cmpsl
mov
mov
mov
and
shrl
inc
arpl
jmp
stos
add
mov
lret
stos
xchg
lcall
stos
pop
jns
aaa
sbb
jb
scas
adc
gs
mov
fmuls
arpl
pop
leave
sub
push
mov
pop
xlat
call
sti
stos
in
jg
jne
stos
addl
jle
ss
popf
stos
jb
xor
aaa
sub
inc
adc
push
pop
data16
cmp
stos
pushf
cmc
popf
jae
arpl
je
test
aas
mov
adc
shll
jl
insb
fs
int3
stos
sbb
add
aas
jns
or
cmp
data16
stos
add
mov
jecxz
fwait
xlat
in
mov
gs
pop
inc
xor
stos
aad
out
repz
sbb
push
jmp
clc
mov
sbb
cmp
sahf
cmp
test
imul
adc
subb
mov
sti
bound
lret
stos
test
fs
fdecstp
aas
lea
enter
lods
aaa
push
sub
cmp
xchg
pop
int3
add
mov
out
adc
repz
mov
stos
outsl
add
out
dec
test
mov
add
jg
dec
mov
lods
sti
ret
stos
dec
daa
mov
inc
movb
jae
xlat
sbb
arpl
cltd
fmulp
xor
mov
push
stos
mov
sub
ljmp
dec
or
add
stos
lds
mov
mov
sti
rcrb
aad
out
or
fmull
roll
dec
cmova
push
stos
clc
ja
xlat
loop
mov
imul
mov
jmp
stos
and
sub
lahf
inc
data16
dec
cmp
pushf
mov
inc
push
mov
daa
stos
das
js
push
int3
mov
aaa
dec
sub
dec
stos
mov
cmp
movsb
movq
xor
inc
pop
and
push
stos
aad
mul
data16
mov
in
sti
mov
adcb
mov
lcall
shlb
mov
mov
and
or
cs
pop
mov
arpl
stos
inc
xorl
xchg
stos
sbb
ret
subl
sub
stos
or
jg
push
fistpl
ja
jmp
or
jo
inc
int
outsb
dec
pushf
mov
ss
das
push
mov
ja
jmp
mov
adc
out
mov
stos
pop
cmp
adc
and
ds
sub
jecxz
pop
stos
inc
dec
popa
int
push
ljmp
gs
movsl
aam
sub
lods
fstpl
dec
mov
xchg
imull
dec
mov
sbb
ret
stos
jmp
fsub
stos
adc
lret
cmpsl
and
ds
mov
stos
xchg
push
stos
xor
dec
dec
inc
mov
cmpsb
cmp
jmp
or
stos
movsb
cmp
fisttpl
arpl
jle
inc
hlt
out
mov
mov
stos
jo
mov
stos
aaa
xlat
je
mov
jmp
jo
jg
or
push
aaa
out
aam
add
stos
mov
xor
imul
sbb
xchg
scas
cmp
out
jb
les
stos
adc
test
arpl
mov
xor
lret
dec
cltd
add
daa
lods
adc
out
dec
and
push
pop
jns
add
sub
mov
stos
pop
inc
inc
and
adc
push
stos
arpl
push
test
xor
push
push
fistl
push
cmp
mov
sub
dec
dec
xor
xchg
pop
jg
and
pop
dec
sub
xorl
jl
arpl
ljmp
sbb
stos
xor
pop
rolb
sti
xchg
inc
push
cmp
push
jle
aam
lcall
lcall
fwait
adc
inc
dec
jmp
stos
das
adc
gs
iret
sti
mov
stos
lods
mov
scas
lahf
pop
daa
cltd
cs
jo
dec
xchg
into
inc
jnp
mov
pop
xchg
test
stos
jno
pop
add
imul
stos
push
dec
das
lea
jg
xchg
adc
cmp
in
sub
js
testl
dec
xchg
shll
out
adc
xchg
pop
sbb
xchg
imul
adc
mov
arpl
mov
push
jmp
out
or
adc
shlb
outsl
add
mov
jp
jmp
outsb
lret
pop
gs
add
jo
mov
xchg
cmc
cmp
rcrl
xchg
jmp
inc
and
in
push
or
mov
jp
fwait
jbe
xchg
push
stos
fwait
mov
jno
lods
add
sbb
in
hlt
aaa
fwait
lock
stos
xchg
sbb
dec
stos
test
dec
jo
jmp
fildl
mov
or
lea
stc
daa
cmp
xor
les
ljmp
addr16
out
loope
xor
pop
or
push
ja
push
stos
mov
and
loopne
in
xor
lcall
mov
dec
xchg
mov
and
ficomps
inc
jge
and
jnp
fistl
xchg
pop
xchg
stos
stc
loope
add
mov
push
or
arpl
lcall
test
stos
jns
fcmovne
push
scas
push
movsl
adc
push
mov
aas
sahf
stos
je
icebp
push
jg
push
ret
xlat
mov
jb
stos
fs
push
ret
nop
cltd
stos
daa
mov
into
xchg
dec
mov
adc
nop
stos
pop
xchg
movsb
aam
jb
add
inc
rcll
dec
out
pop
jbe
in
orl
stos
dec
xchg
fs
sbb
je
into
lods
jae
jmp
lock
fnstsw
pop
stos
dec
mov
inc
icebp
loopne
xor
and
outsb
pop
adc
lds
mov
mov
lea
stos
imul
inc
mov
sub
bound
push
mov
into
dec
pop
adc
stc
jmp
stos
mov
xor
cmp
aas
daa
mov
mov
fwait
pop
inc
add
stos
mov
ret
addr16
mov
sbb
push
jo
fs
cmp
outsb
sbb
cli
stos
rcll
jae
mov
stos
sarb
fsubrs
sbb
ss
jns
push
stos
fisubl
inc
push
into
stos
jmp
clc
pop
jbe
dec
mov
push
mov
test
inc
xchg
fimull
lahf
adc
jae
add
sub
rcrl
push
mov
imul
cmp
cld
mov
mov
mov
cs
sbb
mov
stos
test
jp
cltd
stos
jnp
jne
je
and
xchg
call
cmpsl
lret
dec
push
imul
lret
cltd
mov
push
testl
stos
xor
pop
mov
push
scas
out
and
cmp
or
out
cwtl
enter
lds
sub
xor
mov
ficompl
dec
es
stos
repz
arpl
xor
sub
mov
sub
daa
fwait
lret
lea
sti
inc
stos
imul
mov
or
push
sbb
outsb
jmp
and
dec
or
push
add
movsb
xchg
stos
ds
xchg
stos
mov
jle
lcall
mov
arpl
sub
xor
dec
fwait
mov
int3
sub
pushf
clc
out
stos
xlat
dec
cltd
aas
es
mov
pop
lods
sbb
aaa
popf
mov
mov
jg
mov
push
std
stos
ljmp
sub
cltd
xchg
jae
je
mov
add
shll
cmpsb
outsb
xchg
scas
pop
cltd
insb
imul
sbb
popa
in
add
sub
in
sbb
mov
iret
inc
stos
lods
cmp
test
insl
adc
popf
or
stos
enter
or
and
dec
stos
aaa
mov
fiadds
mov
stos
mov
mov
cwtl
hlt
dec
ss
xchg
and
popf
fldl
push
fisubl
cltd
jecxz
mov
inc
jnp
lods
dec
sub
arpl
adc
xchg
sbb
imul
sarb
xchg
stos
out
repz
push
stos
or
push
xor
in
clc
jae
or
stos
jecxz,pn
cmp
in
lret
stos
and
enter
outsl
xor
aam
xchg
fwait
sub
adc
mov
push
aad
scas
call
xchg
lahf
xor
fnstsw
cmp
int
push
mov
mov
lret
jae
pop
sub
arpl
repnz
sti
in
dec
jl
jbe
clc
cs
stos
cmc
imul
out
enter
mov
cmpsb
dec
stos
jmp
lret
jb
test
xor
xchg
js
lea
sub
pop
pop
mov
mov
addr16
daa
sbb
mov
shr
cmp
jle
ljmp
cmp
and
mov
stos
outsl
cmp
in
stos
hlt
push
out
xor
into
fs
pop
imul
stos
push
add
rcr
xchg
stos
addr16
sbb
bound
daa
rcll
stos
cmc
stc
fidivrl
arpl
xchg
popf
stos
pop
push
in
adc
xor
stos
adc
data16
aad
addr16
scas
fcomps
jne
popf
adc
xchg
inc
pop
sub
jb
push
mov
mov
cmp
sub
pop
sbb
das
iret
jecxz
mov
and
in
fucomip
imul
adc
pop
mov
push
sub
fildll
sub
lods
push
stos
dec
inc
add
lea
aam
cli
xor
jbe
iret
xchg
stos
in
out
and
stos
js
mov
fld
mov
stos
push
mov
inc
sahf
sub
stos
sbb
jno
cld
mov
mov
xor
aaa
mov
loopne
dec
stos
cmp
stos
jno
les
sbb
cmpb
add
xorl
fs
shrl
mov
pop
test
scas
cli
das
pop
hlt
out
gs
jne
pushf
ss
adc
add
pop
and
fstps
adc
mov
xadd
sub
jne
sbb
or
into
add
lods
std
mov
imul
shrb
aaa
jmp
xchg
inc
jmp
lods
imul
sbb
hlt
mov
stos
gs
enter
jns
stos
mov
popa
cwtl
xchg
stos
clc
cmc
mov
out
stos
je
push
in
jae
lret
xchg
cli
mov
mov
mov
mov
inc
cmp
ljmp
push
lods
push
shrl
inc
lret
pop
ljmp
push
pusha
push
cmpsb
stos
lcall
clc
stos
loope
lds
pop
shlb
or
test
mov
xor
stos
out
test
adc
xor
scas
jmp
imul
stos
mov
mov
adc
fsub
popf
pop
or
call
arpl
int
mov
xlat
cmpsb
mov
mov
add
or
ss
mov
mov
imulb
sub
cmp
outsb
lods
inc
leave
pop
stos
push
sub
sti
cmpsb
mov
xor
or
mov
push
jne
into
daa
push
push
lods
pop
add
mov
push
and
popf
stos
movb
pushf
stos
sub
pop
adc
adc
push
push
dec
ffreep
stos
movsb
andb
stos
add
jo
jmp
int3
aam
ret
push
xchg
int
inc
stos
ret
mov
xchg
mov
and
jae
xchg
mov
pusha
sti
mov
loopne
imul
lods
push
xchg
ja
bound
test
jl
xor
mov
movsb
stos
js
mov
xchg
lods
push
cmp
pop
fnstenv
jae
in
and
std
stos
sub
int
sahf
push
stos
int3
cmp
stos
les
lds
hlt
mov
mov
or
fildll
xchg
test
push
xchg
cmp
push
call
mov
xor
stos
and
mov
movsb
hlt
sarl
test
xchg
and
push
cmp
testb
fbld
jno
hlt
pop
ds
lock
fdiv
xchg
jge
pop
into
aas
sub
bound
xlat
push
ds
jmp
push
or
stos
lods
mov
mov
jmp
into
stos
gs
shrb
fisttpl
adc
loopne
stos
mov
xchg
or
stos
in
outsb
fistps
push
jbe
adcl
aam
xlat
inc
stos
mov
dec
and
stos
jne
xchg
scas
lret
stos
dec
neg
mov
clc
inc
mov
cli
mov
sub
mov
sbbb
fdivrl
pop
daa
ss
cld
fcmovnbe
jne
dec
sbb
sub
daa
scas
sub
xchg
cmpsb
mov
and
and
inc
outsl
stos
adc
rclb
enter
imul
mov
inc
or
push
stos
cmp
cld
cmp
cltd
jo
stos
cmp
imul
stos
stos
xor
es
imul
rcll
mov
mov
jmp
sub
xchg
dec
stos
jl
and
push
imul
ds
mov
xchg
outsb
xchg
in
out
push
mov
scas
jo
push
fwait
dec
or
ret
push
cmp
in
stos
arpl
rcrl
cmp
push
inc
lea
in
xor
push
leave
inc
cmp
xchg
pop
mov
push
and
or
sbb
in
mov
fcmove
xchg
ljmp
lahf
mov
sbb
mov
pushf
mov
sub
xchg
inc
xor
jno
daa
inc
cmpb
ds
lahf
dec
lret
rcrl
je
sub
add
cmp
or
loop
mov
bound
data16
subb
test
xchg
dec
stos
push
sbb
outsl
mov
lret
inc
cmpl
cmp
cmp
add
movsl
sbb
mov
in
cbtw
or
int3
push
ja
stos
adc
fmull
dec
jae
mov
insb
add
mov
imul
stos
sub
call
dec
in
in
lds
stos
xchg
add
stos
push
mov
jp
into
push
pop
out
in
sbb
stos
adc
mov
stos
insl
dec
jmp
xchg
cmp
movsb
mov
mov
jae
rclb
mov
stos
pop
imul
add
shrl
scas
imul
and
jmp
mov
mov
cltd
cmp
idivb
xor
sbb
hlt
vunpckhpd
mov
mov
repnz
clc
adc
pushf
sarb
out
jo
mov
inc
mov
adc
mov
lcall
aas
or
xchg
fmull
popf
subl
dec
fisubrl
push
xor
jae
in
add
sub
and
outsl
sub
stos
push
xchg
cmc
ds
mov
fwait
adc
mov
outsl
stos
mov
popf
cmpsl
stos
add
mov
lcall
shll
in
ja
mov
jmp
xor
xchg
inc
pop
js
hlt
test
xor
or
jne
dec
mov
jae
mov
jmp
cmp
popa
sub
cmp
push
fisttpll
push
mov
inc
mov
xor
shlb
int
mov
pop
mov
or
int3
sti
mov
push
sbbb
stos
cmpsb
jne
aas
stc
int
movsb
rcrl
xchg
mov
std
dec
stos
adc
sbb
pop
gs
mov
loop
dec
pop
jmp
sub
rcrl
ret
lods
mov
push
fldt
pop
push
pusha
int
and
ljmp
ret
icebp
stos
jae
testl
fninit
push
sub
lods
jb
dec
inc
aaa
pop
stos
fiaddl
xorb
mov
sub
daa
push
stos
xlat
pop
mov
stos
out
jmp
or
clc
in
stos
pop
imul
and
and
sub
cmp
sub
sub
pop
sbb
mov
test
cmp
scas
in
jne
ljmp
push
xor
fs
mov
loopne
outsl
idivb
pop
add
jl
fistpll
mov
sbb
pop
mov
arpl
adc
pop
scas
insb
fstpt
out
push
fwait
js
mov
popf
out
lret
pusha
push
sbb
mov
shrl
stc
add
in
lahf
pop
jmp
push
ja
jp
dec
cmp
pop
mov
push
cs
inc
lahf
ficoms
rcrl
fcom
push
xor
pop
adc
aaa
stos
add
mov
inc
fcmovbe
sbb
adc
jnp
stos
stos
iret
push
fwait
add
cs
lea
or
stos
mov
dec
inc
sbb
imul
decb
jns
sbb
fwait
mov
and
dec
xchg
mov
push
imulb
inc
arpl
push
xchg
adc
mov
aam
push
sbb
jmp
loop
stos
out
repnz
cmp
in
insl
divl
scas
or
dec
jg
adc
scas
push
rolb
insl
inc
inc
out
mov
cmp
pop
ljmp
add
pop
adcb
add
stos
push
outsb
jg
leave
jecxz
mov
sub
cmpsb
adc
iret
mov
or
int
stos
dec
ret
stos
popf
pop
cmp
xchg
adc
mov
dec
sub
lock
jnp
mov
inc
gs
adc
test
xor
xor
xor
lcall
fwait
out
call
push
xchg
push
sub
adc
es
mov
stos
pushl
push
movsl
addr16
dec
in
andl
push
jmp
jmp
stos
hlt
inc
and
enter
ficoms
les
stos
addr16
shrl
test
and
jnp
popf
adc
inc
or
jno
xor
and
stos
rcl
fidivrl
pop
mov
rclb
hlt
xchg
mov
pop
scas
icebp
dec
movsb
and
outsl
mov
sarb
popl
negl
out
popf
mov
out
fcoml
sbb
inc
mov
push
inc
mov
into
loopne
or
adc
fisubrl
inc
imul
jo
addr16
sub
adc
push
inc
fisubrl
rorb
test
imul
testl
sub
sbb
xchg
push
imul
adc
sub
add
stos
mov
lods
adc
fs
arpl
jbe
aaa
jmp
stos
sti
dec
mov
ja
repz
stos
mov
dec
call
inc
loopne
mov
ja
inc
jae
fs
and
lods
sbb
mov
adc
adc
push
ja
and
mov
sub
pusha
les
test
lahf
lcall
adc
sub
and
call
sub
lahf
rorb
cltd
mov
cmpsl
xchg
in
rep
push
ret
lods
and
scas
ja
cltd
stos
lcall
mov
sbb
mov
shll
ret
out
loop
cli
push
scas
push
jl
xchg
jmp
mov
push
and
ljmp
pop
jg
aas
stos
lea
cld
dec
sub
insl
stos
and
pop
cmp
mov
push
jno
mov
and
inc
push
fildll
mov
adcl
outsl
into
dec
iret
stos
and
pop
fcmove
push
stos
fsubp
pop
sbb
imul
lea
push
xlat
pushf
fcompl
stos
ss
push
add
mov
jnp
insl
mov
loop
loopne
inc
cltd
arpl
daa
inc
daa
enter
cmp
idiv
stos
mov
fiaddl
cli
outsl
inc
push
dec
dec
cmp
lods
mov
cltd
add
cmc
fistps
stos
jne
mov
xor
movsb
jmp
mov
pop
jns
cwtl
in
stos
enter
cmp
xor
loop
jmp
mov
xchg
loope
jmp
int3
fstl
movsl
inc
fwait
mov
stos
ss
stos
test
mov
dec
jnp
daa
cld
sbb
and
stos
int3
pop
xchg
adc
jnp
sbb
dec
mov
pushf
out
stos
popa
sub
inc
adc
jl
aad
mov
mov
jmp
cld
xchg
lcall
jge
dec
in
stos
or
mov
data16
and
xorb
inc
das
push
xor
and
repnz
imul
fstl
jl
daa
adc
dec
sar
and
lods
push
fiadds
mov
loopne
cmp
adc
stos
adc
insb
xchg
jle
adc
jmp
test
xchg
mov
fisttpl
fldcw
lods
jno
adc
xchg
xchg
addr16
mov
stc
sbb
stos
push
outsl
pop
mull
jge
fldcw
popf
test
test
push
bound
mov
mov
push
fidivs
sbb
rol
gs
mov
xor
int
rorb
les
pop
push
mov
arpl
xchg
inc
fwait
lods
push
dec
in
movsb
xor
lea
mov
rcrb
scas
pop
mov
stos
mov
ja
lods
aam
es
hlt
cmp
xchg
jo
inc
cmp
cmp
add
sub
xor
out
mov
and
cmp
jne
mov
jns
ret
imul
call
mov
mov
mov
gs
cli
xchg
dec
test
push
dec
or
xor
jge
ficoms
pop
out
cmp
das
mov
inc
pop
xchg
mov
aas
xchg
imul
dec
test
imul
jo
pop
stos
into
in
sti
icebp
cmp
mov
aas
popf
mov
sahf
xlat
pop
insb
jnp
inc
arpl
mov
sub
mov
push
and
cmp
je
mov
faddl
mov
into
ficoms
stos
out
push
sub
sub
add
les
sti
push
fsubs
imul
loope
stos
out
xchg
mov
dec
add
in
dec
add
stos
jne
dec
imul
jecxz
int
xlat
xchg
stos
dec
jne
adc
xchg
stos
in
pusha
and
fisubrs
fmull
or
sub
stos
addl
sub
or
mov
jp
pop
insb
cld
imul
dec
xchg
stos
add
hlt
pushf
pop
insl
sub
nop
imul
daa
mov
mov
stos
push
ret
lds
addr16
test
mov
jmp
mov
mov
fdivrs
pop
jmp
leave
cmp
adc
lret
sbb
aam
std
fsubrs
add
inc
add
inc
push
stos
outsl
sbb
xorl
lcall
nop
stos
jne
dec
jb
sub
add
stos
call
cli
push
adc
scas
stos
dec
xor
cmc
push
out
test
mov
add
insb
stos
sbb
add
addr16
push
sbb
sub
fwait
ret
imul
test
es
divb
mov
cmpsb
jp
cmp
sbb
jae
icebp
stos
je
and
inc
stos
ret
cmp
shrl
pop
scas
lods
stos
dec
dec
adc
sbb
stos
add
outsl
xor
sub
sub
cmpsb
jmp
push
rolb
inc
sbb
addr16
fsubr
dec
jp
pop
insb
or
subb
dec
imull
mov
js
popf
into
lods
sub
clc
and
cwtl
fstl
mov
enter
je
ljmp
fdivrl
push
push
and
test
cmovnp
stos
xlat
shll
arpl
shll
mov
mov
dec
pushl
stos
inc
cmp
adc
or
mov
aam
adc
ffree
push
sbb
stos
mov
out
decb
sub
mov
push
push
or
test
imul
and
lods
clc
popf
insl
xchg
xor
fsubrs
xor
lea
and
dec
xor
dec
xchg
lock
and
aam
mov
xor
stos
hlt
mov
or
movsb
inc
cwtl
adc
mov
xchg
test
adc
mov
orl
pcmpgtw
jmp
dec
pop
push
bound
stos
out
cmp
aas
hlt
push
xor
and
dec
adc
add
js
lods
fwait
imul
mov
xchg
inc
stos
mov
push
lods
imul
sbb
aad
stos
xchg
fsubrp
xchg
mov
dec
sbb
insl
inc
inc
jp
lods
xor
out
mov
repnz
stos
mov
push
cmc
or
lds
or
test
xor
shrb
pop
cld
stos
stc
add
daa
rcr
cmp
outsl
pop
lret
insb
out
push
scas
adc
aas
stos
pop
mov
sbb
jb
imul
stos
mov
loopne
aam
test
std
add
ljmp
pushf
jmp
adc
repnz
xlat
stos
pop
cli
push
daa
xchg
out
add
mov
jmp
fisttpl
adc
mov
jnp
inc
shlb
cltd
xchg
push
sbb
aaa
stc
daa
xchg
xchg
mov
push
jnp
addr16
xchg
and
repz
sub
jmp
lock
lcall
mov
mov
mov
enter
int3
jno
test
push
cmpsl
pop
or
stos
mov
xchg
cmp
stos
jb
std
jecxz
movb
insb
cld
dec
mov
xchg
scas
daa
stos
inc
pusha
xor
push
jnp
stos
subl
xor
movsb
and
scas
dec
inc
or
rolb
lret
push
mov
sarl
pop
pusha
add
add
jecxz
mov
adc
mov
cmc
fisttpll
stos
dec
cmp
lds
xorb
adc
jecxz
hlt
cmp
dec
push
lods
xchg
stos
xchg
stos
andb
push
sbb
xchg
adc
out
push
jb
fdivs
xor
xchg
push
daa
in
and
ret
lods
loope
cmp
subb
jbe
aad
sbb
mov
sub
leave
adc
scas
fwait
je
outsb
lcall
mov
stos
sub
cwtl
lret
arpl
ficompl
rep
lods
mul
test
cmp
mov
pop
push
inc
stos
inc
nop
arpl
stos
mov
adc
inc
arpl
in
and
sbb
adc
stos
add
and
dec
xor
bound
dec
daa
mov
outsb
mov
movsb
jmp
dec
add
mov
push
mov
lcall
or
scas
xchg
cmpsb
pop
stos
je
cmp
es
pop
subl
lock
repz
arpl
aad
subb
pop
stos
mov
lods
xor
stos
movsl
add
mov
xchg
jmp
jbe,pt
xor
sbb
stos
scas
pop
outsl
arpl
mov
inc
loope
insb
mov
jecxz
sbb
stos
std
xchg
push
int
mov
push
add
cmp
sub
stos
push
push
sbb
mov
pop
add
popa
roll
mov
push
fisubrl
mov
movsl
arpl
pause
cmp
inc
stos
xor
inc
orl
sbb
pop
ss
jmp
xor
push
inc
xor
or
adc
xchg
iret
stos
xor
and
xchg
inc
scas
bts
imulb
and
mov
das
dec
sbb
aas
xchg
sahf
xlat
xor
mov
sti
inc
pushf
fdivrl
mov
push
jne
cmpsb
pop
pop
subl
or
lahf
in
dec
lock
out
or
stos
popa
insl
xchg
adc
adc
pop
mov
addr16
xchg
fistpl
daa
mov
jns
lret
push
loop
stos
push
mov
dec
lcall
cwtl
int3
in
stos
cmpsl
xchg
mov
sub
push
xor
inc
stos
movsb
roll
aas
xchg
daa
loopne
es
xor
in
cmpsl
or
stos
mov
pop
dec
stos
int3
std
dec
push
inc
test
out
fs
sti
adc
mov
and
pop
push
mov
xorl
imul
inc
in
jne
push
mov
mov
pop
cmp
stos
xor
test
adc
adc
jae
sbb
ljmp
jno
push
ljmp
mov
fldcw
dec
xchg
pop
adcl
sub
fwait
sbb
xchg
ds
cwtl
rolb
addr16
adc
mov
stos
fadd
mov
fcoml
or
pusha
addr16
shll
xchg
xchg
cmp
insb
push
aad
mov
or
pop
outsl
stos
jnp
mov
lret
stos
stos
cs
fstl
sub
cld
jno
stos
cmpsb
xor
and
jae
ret
stc
lret
inc
stos
popf
jecxz
and
hlt
xorb
jnp
test
das
stos
jne
xor
enter
imul
mov
jle
js
repnz
push
and
xchg
mov
add
or
and
rclb
mov
mov
adc
fsubs
push
iret
daa
xchg
movsb
jnp
add
iret
stc
stos
les
in
adc
subb
push
or
stc
mov
stos
mov
jecxz
xlat
fabs
push
cmp
jb
aam
mov
nop
shlb
inc
ret
fstp
add
out
stos
pop
add
sar
push
mov
or
aas
addr16
cld
push
mov
cld
scas
ret
cmpsl
jle
outsl
sub
stos
xchg
xor
es
test
daa
push
aaa
aas
ds
in
xlat
test
lods
stos
inc
jne
insb
rcrl
fucomi
and
push
sbb
je
stos
scas
in
mov
jo
jno
stos
enter
jle
pusha
jae
loopne
clc
mov
mov
rolb
sahf
xchg
jle
stos
scas
mov
jmp
pop
or
punpckldq
mov
std
fildll
int
cmpsl
cli
adc
inc
gs
stos
add
inc
jb
xchg
into
sub
inc
cmp
enter
sub
stos
mov
mov
jg
dec
lock
stos
scas
jle
imul
aaa
jae
sahf
in
dec
lret
jl
lods
add
popf
sahf
stos
pop
cmpsb
repz
cmpsl
or
or
call
lcall
stos
in
xchg
jns
shll
shl
pop
xor
fwait
add
imul
xchg
jl
mov
std
cmp
stc
daa
mov
out
sahf
test
xor
jae
test
or
adc
add
inc
daa
scas
cmp
int
out
stos
hlt
sbb
test
repz
arpl
pop
test
sti
clc
xchg
stos
add
jae
movsb
lods
test
stos
pop
dec
std
xor
loop
into
arpl
das
xchg
xlat
dec
stos
test
out
add
neg
jg
popa
sbb
xchg
mov
test
mov
leave
push
cmc
sti
or
inc
daa
fsub
sbb
stos
xchg
insb
mov
lods
popf
shrb
mov
push
mov
int
push
pop
sub
mov
dec
push
aad
daa
leave
ds
stos
inc
pop
or
mov
rcrb
je
jp
lods
mov
das
iret
push
in
out
arpl
andl
dec
xchg
push
cmp
push
lock
cmp
inc
orb
push
xorb
in
ljmp
enter
icebp
jno
jb
loopne
dec
mov
inc
mov
xor
push
push
rcl
dec
aad
subb
and
icebp
bound
xchg
lcall
daa
and
test
add
stos
jl
mov
stos
pop
daa
cmovae
imulb
lds
repz
stos
mov
jp
lret
xor
fisubrs
fdivs
add
loop
stos
ljmp
dec
cs
stos
push
movsb
imul
leave
mov
lea
cwtl
out
scas
fwait
xor
lret
stos
imull
mov
stos
and
jbe
cmp
mov
xchg
or
addl
pop
stos
into
push
adc
sbb
lds
adc
stos
cmpsb
jmp
ljmp
stos
pcmpeqw
dec
stos
mov
in
hlt
mov
in
xor
imul
cltd
scas
jge
jmp
rclb
add
jbe
inc
test
push
mov
scas
mov
movsl
stos
in
pop
decb
and
xor
in
pop
cmpl
jmp
or
nopl
stos
cli
jl
mov
leave
outsl
imulb
pop
dec
push
add
scas
dec
push
and
pusha
jne
mov
int3
lods
fidivrl
fildll
xorb
or
cmp
icebp
pop
xor
jge
or
aad
jb,pn
adc
cmp
jp
imul
dec
jge
cmpb
popa
stos
push
adc
mov
sub
pushl
mov
cmpsb
int3
outsb
xchg
nop
stos
inc
cli
pop
test
stos
fbstp
call
stos
and
push
inc
dec
gs
repz
shrl
stos
mov
xlat
sbb
lahf
lock
cmpl
stos
ja
and
nop
bound
xor
or
cmp
xor
or
fmul
sub
stos
sbb
sti
into
mov
lds
daa
sarl
jne
sahf
stos
div
mov
ds
adc
stos
mov
enter
xchg
jne
rclb
fimull
jnp
add
clc
xchg
push
and
dec
mov
mov
jo
insb
xchg
dec
stos
push
nop
cltd
es
mov
mov
inc
xor
mov
cmp
and
mov
cmp
dec
sahf
addr16
movsb
jg
inc
xchg
stos
jne
pop
xor
dec
stos
jns
mov
bts
outsl
lock
out
stos
neg
rorb
adc
xchg
xor
pop
repz
stos
push
pop
movsl
mov
stos
loope
mov
jmp
stos
jg
pop
mov
mov
nop
sti
movsl
setne
cmc
filds
and
mov
test
mov
adc
lret
cwtl
in
pop
push
mov
push
int3
daa
flds
daa
push
outsb
movsb
stos
jae
inc
imul
icebp
xchg
fildl
jge
xchg
out
nop
jnp
inc
fwait
xchg
xor
lods
sbb
xchg
jae
stos
sbb
xchg
sbb
push
popf
or
pop
add
lods
push
repnz
fnsave
jnp
sbb
dec
inc
sub
out
lods
jle
xchg
cli
std
mov
stos
in
pop
ret
or
out
cmp
fistpll
stos
mov
cld
test
pop
mov
xchg
int
and
fdivrl
leave
xor
cltd
xchg
mov
mov
mov
pop
dec
ds
imul
fwait
rol
push
imul
mov
stos
pop
out
xor
shll
mov
mov
nop
stos
add
push
jb
stos
inc
aad
popa
addr16
test
ret
xchg
mov
ret
cmp
lods
idiv
insl
daa
jge
stos
scas
stos
or
cmc
loopne
pop
push
jp
cmp
mov
cli
or
adc
stos
std
mov
and
gs
adc
mov
fwait
mov
lock
push
and
sbb
in
cmp
jl
push
stos
sbb
lea
stos
pop
orb
mov
cmpsl
push
inc
jb
jp
stos
leave
push
outsl
mov
adc
xor
mov
dec
pop
jmp
fcoms
xor
test
jecxz
popw
mov
sub
addr16
lahf
sub
push
adc
stos
xor
mov
loop
fcmove
stos
imul
push
nop
jmp
stos
sbb
cmp
fidivs
jns
stos
aas
daa
test
cld
pop
mov
mov
shlb
dec
aaa
inc
stos
dec
out
orl
daa
dec
xor
mov
xor
imul
adc
mov
mov
jne
pop
ds
inc
ficoms
add
xor
imul
lahf
sbb
xorb
daa
stos
repz
cld
cmp
mov
lea
sbb
faddp
lret
adc
in
in
lret
pop
jnp
jnp
jmp
cmpsb
out
mov
imul
cmpsl
push
cmc
sbbb
xchg
cs
jbe
in
lret
stos
imul
adc
jmp
clc
inc
jae
lcall
mov
shrl
inc
or
push
dec
in
jo
pop
push
in
ss
hlt
cmp
mov
loop
inc
push
sbb
das
int
dec
stos
vmaxps
xor
jae
xchg
mov
bound
mov
jge
lock
jbe
dec
cmp
sbb
insl
fldt
stos
out
mov
mov
stos
or
sbb
cmp
movsl
cs
and
das
aam
stc
xchg
jg
ljmp
sub
mov
cmp
mov
inc
aam
pop
pop
pop
mov
or
ret
stos
push
mov
int
jl
stos
stos
mov
or
bound
sti
popf
gs
cmpsl
subl
clc
and
addr16
idivb
mov
push
stos
and
adc
fs
and
stos
fdivrs
dec
mov
jg
xchg
dec
cld
scas
hlt
stos
out
mov
xchg
popf
stc
pop
test
popf
test
ss
insl
pop
call
mov
and
and
nop
andl
xor
jb
add
or
imul
stos
ret
sub
cmc
pop
push
inc
stos
aas
sub
push
stos
jg
pop
pmulhuw
repnz
stos
xor
xor
xor
mov
push
out
stos
in
int
imul
jmp
xchg
scas
sbb
add
addr16
int
mov
jnp
mov
loopne
in
outsb
jmp
jmpw
xchg
stos
xchg
xor
imul
rcr
enter
fs
stc
orl
xor
imul
push
mov
jle
test
into
fwait
outsb
dec
jnp
xor
xchg
cmp
mov
jl
ret
push
jmp
mov
cmpsb
xchg
das
push
push
hlt
imul
and
ficoms
cmp
add
inc
sub
and
mov
jnp
in
or
jmp
fbstp
fsubrs
sti
mov
mov
adc
jmp
inc
mov
fsts
stos
adc
pushf
mov
mov
mov
iret
pop
cmp
fwait
adc
sub
mov
fistps
icebp
jmp
imulb
xchg
mov
stos
inc
xchg
push
outsb
aas
mov
stos
sti
shlb
xor
in
adc
mov
jne
sbb
sti
pop
xchg
das
lods
fucomp
jg
pop
scas
stos
stos
ret
push
addr16
xor
lcall
shrl
mov
cmp
in
nop
testb
mov
mov
out
stos
pop
outsl
mov
test
hlt
push
sbb
out
mov
mov
stos
fs
xor
std
xor
mov
mov
popa
sarb
and
inc
sub
xchg
xchg
or
mov
mov
and
jbe
rol
xor
cwtl
jno
stos
das
cmp
test
xlat
int
outsl
lods
mov
add
pop
in
sub
fwait
cmp
outsb
ja
jbe
enter
mov
lds
mov
fwait
jle
rcrb
pop
cs
stos
into
clc
fs
mov
insl
stos
pusha
in
leave
and
inc
stos
jbe
mov
lahf
jp
mov
sahf
mov
in
xchg
jecxz
imul
pop
stos
or
sub
aad
pop
stos
jns
xchg
out
mov
inc
stos
int
xchg
xor
imul
jbe
stos
stos
dec
mov
sbb
in
std
stos
out
cmc
xchg
jle
daa
push
jae
jg
inc
hlt
into
subl
cmpsl
jl
sbb
stos
jo
aaa
push
and
popa
cs
mov
and
mov
and
add
int3
call
xchg
leave
stos
ss
loope
sub
xor
lock
cmpb
nop
paddb
xor
jnp
loope
ret
outsb
pop
mov
les
mov
pop
xchg
jae
sub
sub
rcr
mov
divb
lahf
fwait
sub
mov
adcb
stos
mov
mov
scas
stos
fistpll
test
movsb
loop
and
push
sub
mov
jnp
mov
fldt
cwtl
test
push
inc
mov
mov
pop
pusha
gs
jle
xor
jecxz
mov
popa
inc
pop
mov
stos
or
lcall
mov
sub
inc
popa
stos
jge
mov
movsb
jp
insb
cltd
or
stos
xorl
dec
jle
and
bound
jp
fisubl
xchg
adc
push
mov
xor
hlt
cwtl
stos
jns
sti
cmp
mov
cvttps2pi
sub
mov
adcl
add
loope
push
addr16
js
imul
stos
mov
div
mov
enter
iret
xor
std
mov
inc
mov
push
mov
imul
lret
inc
stos
int3
mov
push
dec
imul
fwait
movsb
fwait
and
sbb
rdpmc
push
jg
xchg
ret
arpl
test
adc
stos
out
cld
xor
lock
scas
push
addr16
pop
inc
xlat
mov
jo
dec
loope
lds
pop
mov
aas
stos
add
dec
lea
jmp
xchg
out
jns
bound
mov
fwait
stos
dec
mov
out
xchg
sub
pop
fldl
rclb
mov
fidivl
xor
and
stos
and
popf
enter
iret
push
repz
mov
stos
pop
scas
push
mov
push
mov
mov
push
stos
dec
movsl
dec
ds
repnz
jmp
shll
dec
stos
pop
imul
add
lea
pop
stos
xor
sub
int3
xchg
pop
jecxz
dec
ss
lret
mov
push
sub
push
icebp
bound
shrb
sbb
leave
scas
xor
sub
add
ss
lret
movsb
aad
lahf
std
and
dec
adc
ficomps
stos
and
into
lea
call
subb
stos
pushf
sbb
out
lret
data16
fwait
cwtl
dec
cmc
out
stc
mov
stos
insl
mov
pushf
cmp
pop
mov
test
or
ret
stos
xchg
dec
stos
add
add
xchg
dec
sub
pop
mov
stos
stos
and
divl
dec
enter
or
or
jb
jecxz
cwtl
test
stos
xlat
rcll
stos
fxch
xor
sub
and
stos
arpl
in
inc
pop
cld
inc
stos
or
stos
in
mov
and
stos
scas
mov
addl
pop
punpcklwd
cmp
stos
pop
lea
ljmp
loope
jne
mov
adc
movsb
pop
push
orb
or
cmp
and
fisubrs
mov
inc
leave
les
pop
dec
push
stos
and
mov
call
ds
loop
inc
ret
test
les
pop
pop
fidivs
dec
push
jbe
btc
sub
sbb
mov
stos
rcrb
jp
rorl
rorl
in
std
in
or
int3
data16
push
movsb
mov
aad
test
stos
out
dec
test
jne
cmp
inc
leave
mov
fidivl
dec
and
push
stc
stos
imul
inc
loopne
sbb
jp
sub
xlat
mov
xchg
iret
stos
and
movsb
in
nop
test
adc
sbb
pop
jbe
xchg
push
mov
stos
or
and
je,pn
addr16
dec
add
fwait
cmp
mov
dec
push
clc
insb
in
and
std
in
sub
jns
cmp
clc
stos
push
push
dec
insl
xor
cmp
push
stos
into
test
pop
lret
insl
jno
jns
fidivl
xchg
lock
sub
mov
ret
cltd
dec
stos
pop
jg
push
push
pop
aam
jmp
imul
in
or
mov
mov
es
loope
jbe
or
mov
adc
mov
fiadds
cmp
mov
pop
mov
lahf
adc
mov
loopne
cmpsb
stos
jno
movq
loope
jecxz
cld
js
adc
push
sbb
lea
sbb
fwait
adc
stos
mov
icebp
xor
jl
addr16
or
push
mov
ljmp
stos
cmpsb
repnz
stos
mov
mov
mov
mov
cmpsb
mov
adc
loope
add
int
ret
push
xlat
and
cld
stos
and
mov
cwtl
subl
mov
push
mov
test
pop
into
stos
sbb
sub
dec
jo
dec
mov
push
adc
jmp
into
stos
adc
xchg
js
fwait
out
shll
add
xor
mov
add
xchg
sub
shrb
ficompl
in
mov
imul
enter
mov
inc
or
clc
xchg
scas
call
add
push
xchg
stos
enter
mov
mov
push
lret
int
and
lods
rcrl
xchg
sub
inc
shll
stc
xchg
and
xchg
iret
jge
or
jmp
and
adc
test
push
rclb
sub
stos
mov
push
cmc
imul
adc
xor
rol
or
rclb
mov
enter
and
out
xchg
cmpsl
lods
jmp
cmp
lods
xor
or
out
ret
jecxz
xchg
sbb
sub
out
test
mov
add
mov
test
test
data16
stos
imul
arpl
jns
inc
cmc
clc
push
stos
push
jmp
mov
xor
mov
and
inc
jmp
fsubrl
push
orl
les
stos
mov
push
cmp
in
stos
js
rclb
mov
add
jge
xor
stos
xchg
fidivrs
push
stos
test
push
decb
stos
mov
notb
stos
push
add
sahf
stos
roll
xchg
mov
das
mov
pop
adc
inc
ror
push
stos
aad
lcall
inc
out
fldcw
daa
mov
add
jle
or
sbbb
xchg
cmp
jmp
and
fcoms
insl
popa
lods
cmp
jbe
push
jg
movsl
fwait
adc
mov
in
pop
icebp
push
mov
je
ss
jbe
lret
push
dec
inc
lock
push
or
div
stos
fistpl
loopne
mov
dec
stos
rclb
es
imul
out
jo
js
or
rcll
stos
inc
sbb
pop
add
fnstenv
sub
in
loop
test
stos
dec
fistl
cmp
rcrl
adc
pop
je
pushf
loop
out
and
jnp
mov
adc
scas
lret
rcl
in
stos
cli
clc
das
mov
stos
dec
aaa
mov
subl
cmp
sub
or
insl
aas
dec
enter
dec
xchg
stos
outsl
js
int3
add
shl
stos
sbb
data16
lcallw
dec
stos
or
adc
xor
stos
mov
dec
push
repz
push
xchg
sbb
add
stos
sahf
test
mov
mov
iret
daa
ret
mov
scas
cmpsl
adc
adc
mov
xchg
dec
mov
cltd
int
imull
mov
ljmp
test
sub
and
ret
imul
pushf
lock
push
cmpsb
jnp
push
in
sbb
gs
loop
sub
push
cmp
sub
test
adc
inc
jge
dec
pop
mov
push
les
lods
cmp
dec
mov
dec
pop
aaa
ljmp
or
inc
stos
cmp
loope
aam
dec
pop
stos
outsb
xor
adc
cmpsb
in
push
fistpll
cmpsl
test
stos
insb
hlt
das
int3
and
stos
cmp
mov
stos
cmpsl
mov
movsb
loope
in
fcompl
aaa
gs
dec
stos
push
mov
imul
in
mov
dec
ret
cmc
xorb
mov
xchg
cld
or
sub
les
inc
insl
fsubrs
jmp
imul
stos
pushf
add
mov
stos
shrl
mov
xchg
fdivrp
stos
cs
stos
mov
dec
cmp
cmp
dec
push
xchg
add
mov
shl
xchg
mov
test
cmp
pop
mov
mov
subb
std
jg
fcoms
out
stos
add
dec
sub
je
xor
sub
xchg
lock
out
lods
cmpsb
iret
pop
stos
les
loop
incl
imul
lcall
cmp
out
adc
pop
pop
xchg
lahf
pop
mov
pop
jge
sbb
jle
and
aam
dec
clc
mov
mov
and
fmuls
stos
aaa
push
push
and
stos
cmp
lahf
fmull
faddp
stos
cs
shll
in
jmp
ja
jae
adcl
repnz
orl
lds
std
jne
mov
xchg
and
imul
les
inc
sub
rorl
and
xchg
jo
jne
mov
sbb
stos
movsb
jns
sub
rclb
loopne
push
mov
xor
imul
jl
div
pushf
push
pop
xchg
lods
cmp
sahf
cmp
adc
scas
lods
nop
cmp
push
inc
jmp
and
adc
jle
jp
jns
jmp
mov
dec
fsubrl
push
push
mov
std
push
daa
shrl
loop
test
add
pop
jo
fwait
push
xchg
outsl
stos
test
fldenv
ret
test
jg
cs
lea
pcmpeqw
orb
sbb
fwait
repz
xor
out
sbb
shll
mov
mov
xchg
mov
lret
daa
push
add
iret
lcall
nop
sbb
add
xor
aad
xorl
xchg
mov
andl
icebp
pop
insb
call
inc
out
jno
sub
and
jge
push
mov
cmpsl
lods
test
daa
lret
xor
adc
sub
ss
popf
ret
mov
shrl
xchg
ret
stos
movsl
cmp
cmc
aad
imul
fisubrl
jl
jge
or
cmpsl
cltd
mov
pop
outsl
or
and
pop
push
mov
popf
cs
es
pop
push
xchg
push
leave
push
adc
or
push
adc
rcll
sbbl
outsb
aaa
testl
cmpsl
ds
jns
xor
cmpsb
stos
pop
ljmp
jmp
out
sbb
mov
and
sbb
cwtl
adc
sub
and
roll
inc
outsb
dec
out
fs
lock
movsl
push
lcall
push
lret
loope
rcrb
mov
add
xchg
popf
stos
lods
cmpsl
stos
jg
loopne
xchg
pusha
add
push
jl
pushw
xor
push
xchg
fwait
xchg
stos
out
add
or
jge
add
fsubrl
cmp
test
stos
je
mov
mov
nop
ret
in
fwait
inc
push
pop
mov
push
sub
popa
sbb
lods
scas
int3
stos
xchg
dec
fucomi
cmp
mov
cmpsl
fbstp
add
sub
mov
and
stos
xchg
jg
mov
xor
mov
push
cld
fmul
add
xchg
fsubrl
sbb
pop
movsb
push
mov
repnz
push
dec
cmp
mov
xor
mov
popa
stos
add
and
aaa
lahf
insb
stos
mov
push
stos
xchg
mov
inc
ja
inc
stos
sahf
pop
pusha
mov
es
jg
mov
jb
mov
dec
fisttpl
popa
mov
mov
or
or
mov
out
sub
pop
test
jno
flds
popa
hlt
add
pop
andl
sahf
stos
clc
pop
mov
rcl
xchg
nop
mov
jne
sub
ljmp
xchg
adc
aam
stos
sarl
loop
dec
add
stos
std
xchg
cwtl
add
sub
pop
ret
mov
ja
in
pop
cmp
xadd
mov
test
or
ret
hlt
mov
stos
pop
cli
cmp
sub
stos
adc
push
add
enter
stos
cmpb
sbb
or
into
inc
or
rclb
adc
mov
stos
shl
mov
and
fwait
adc
sub
mov
mov
out
jmp
mov
and
jae
cli
subl
outsl
repnz
ja
push
out
lret
lods
jae
scas
leave
pop
cld
sarl
mov
pop
push
mov
incb
adc
mov
iret
inc
and
movsb
shr
jmp
fldenv
mov
pop
push
cmpsb
js
stos
sti
jg
loope
and
pop
mov
aas
shll
js
into
decb
or
mov
insb
sub
movsl
jecxz
and
xor
dec
lret
insl
mov
jmp
and
addl
std
adc
pop
jo
pop
stos
test
in
call
cmp
stos
cmp
dec
imul
sbb
ds
push
ljmp
dec
mov
or
aam
arpl
cmp
pop
fisubrs
cld
pop
pop
iret
cmp
aam
lret
imul
xchg
roll
std
push
in
xlat
or
fcmovbe
lahf
cwtl
push
stos
inc
and
xchg
ret
nop
das
lock
mov
stos
dec
scas
fiadds
rcl
daa
sbb
cmp
pop
lea
sub
stos
iret
ljmp
stos
je
mov
loope
mov
dec
icebp
mov
cwtl
ljmp
aad
out
fisttps
mov
push
and
bound
adc
push
jecxz
mov
stos
mov
add
stos
ds
jno
cwtl
lret
jmp
dec
xor
mov
data16
mov
mov
fcoml
imul
mov
pop
stos
sti
sarl
push
ret
shrl
outsb
in
data16
mov
mov
cli
cmp
mov
dec
stos
add
adc
cmpsl
lret
rol
divl
mov
pop
pop
and
mov
mov
movsb
movsl
xchg
and
stos
xchg
push
div
stos
dec
bound
shr
stos
mov
jl
lods
xchg
mov
inc
mov
lret
push
loop
scas
fwait
sbb
mov
cli
stos
push
sbb
stos
xchg
inc
shrl
xor
aaa
fidivs
inc
es
mov
dec
pop
xchg
imul
mov
mov
jmp
dec
inc
pop
and
push
cltd
movl
roll
int3
push
dec
and
pop
mov
xlat
mov
or
aam
ss
out
test
mov
fwait
inc
mov
in
out
mov
stos
jge
pushf
xchg
sbb
out
cmp
sub
stos
sbb
dec
test
or
sub
jecxz
stos
mov
bound
pop
fiaddl
daa
xchg
adc
fldcw
popa
pop
iret
mov
fmuls
addl
call
or
addb
je
imul
fstpl
test
aas
jecxz
stc
sbb
mov
pop
ljmp
mov
xchg
xchg
mov
loopne
ljmp
js
das
fwait
int
mov
jmp
into
mov
jl
adc
mov
gs
or
xchg
fisubrs
push
sub
outsb
movsl
insl
inc
enter
sub
out
cmc
mov
fisubrl
push
mov
mov
lret
xchg
arpl
out
adc
mov
sbb
jno
sbb
mov
jmp
adc
hlt
shlb
jmp
cs
lahf
stos
shlb
adc
ret
pushf
pop
out
inc
test
mov
sbb
add
aas
dec
insb
cltd
xchg
andl
rclb
into
or
and
pop
lds
push
outsl
mov
inc
insl
jns
mov
mov
test
lret
sbb
mov
mov
jne
test
inc
mov
and
stos
and
lcall
gs
roll
dec
mov
inc
push
mov
popf
lock
add
sbb
je
scas
xchg
addr16
test
int3
pop
push
adcb
mov
xchg
mov
test
push
popa
scas
jecxz
cs
stos
cmp
add
imul
arpl
xchg
or
sub
hlt
fwait
dec
inc
addr16
dec
enter
popf
loop
sub
jmp
pop
dec
stos
es
pop
push
test
inc
bound
rcrb
orb
imul
jns
loopne
lahf
das
mov
sub
cld
pop
xlat
lods
stos
mov
stos
out
fwait
mov
std
rcll
mov
aam
imul
xor
cltd
mov
stos
out
xchg
xchg
andb
sub
xchg
jmp
sub
cmp
imul
subl
adc
jecxz
jg
push
dec
jg
popa
test
add
mov
fisubrl
stos
lahf
pop
jo
ret
cmp
mov
stos
pop
push
orb
pop
adc
mov
stos
jp
mov
jb
fwait
test
fmulp
cmp
xchg
shr
adc
pop
cld
lret
test
xchg
addl
shlw
shlb
add
daa
je
pop
fwait
sub
shrl
mov
fwait
xor
dec
mov
popf
fbstp
lods
sub
or
mov
pop
addl
inc
jl
inc
notb
or
jp
gs
js
push
mov
xchg
fildl
stc
xchg
jmp
add
stos
push
inc
lahf
hlt
jge
add
sub
stos
fstpl
sub
cwtl
pop
stos
data16
int3
in
ja
and
mov
stos
or
pop
cmc
aam
mov
fsub
aad
dec
in
jge
mov
inc
jecxz
notb
iret
ret
stos
dec
dec
xchg
aad
cli
cmp
pop
sbb
mov
repz
in
test
test
mov
imul
or
mov
aaa
mov
jp
test
sbb
add
stos
xchg
mov
add
mov
scas
lock
aam
stc
test
xchg
mov
dec
push
ljmp
pop
pop
scas
lods
mov
mov
in
sarl
and
icebp
in
xor
ret
push
pop
lods
out
aaa
jmp
cmp
pushf
clc
jge
xchg
xor
stos
sbb
out
ds
aam
mov
je
stos
movsb
fisttpll
aas
insl
popf
test
popa
inc
and
xor
mov
in
out
stc
outsb
fisubs
sub
mov
mov
arpl
and
sbbl
jne
fnsave
jnp
into
mov
lahf
mov
or
pusha
xchg
lcall
or
fistpll
cmp
out
rcr
push
aam
loop
cmp
xlat
in
and
inc
fbstp
and
es
adc
xor
and
popf
cmp
jne
xor
stos
or
lret
popf
pop
stos
lahf
add
enter
pop
lods
shrb
jg
cld
mov
into
daa
arpl
out
dec
mov
call
incl
aaa
cmpsl
out
out
sahf
adc
add
shrb
pop
sub
xchg
in
das
stos
mov
and
popa
test
jnp
mov
decl
cmpsb
adc
cwtl
cmc
faddp
xchg
push
outsl
dec
arpl
stos
out
and
xor
imul
insl
popf
jne
subl
and
xchg
cmp
dec
notb
stos
inc
data16
mov
shrl
loop
aad
stos
sarb
cmp
jg
stos
stos
jae
decb
adc
mov
loopne
xor
scas
xor
sbb
sbb
addr16
imull
stos
jge
mov
mov
or
in
xor
test
and
push
into
cmp
inc
inc
stos
daa
lock
das
pop
mov
fwait
psrlw
stos
adc
mov
popf
aaa
fwait
gs
sbb
daa
mov
pop
mov
push
je
xchg
stos
sbb
inc
in
pushf
imul
mov
mov
push
mov
dec
jbe
lcall
jmp
stos
sahf
in
outsb
cmp
stos
dec
lret
fisubl
sbb
enter
leave
dec
xor
xorb
add
popa
mov
mov
inc
stos
sbb
int3
ljmp
xchg
dec
inc
add
sahf
inc
loop
ret
sbb
je
xor
shrb
pop
scas
push
push
sbb
mov
add
xor
xor
push
mov
adc
scas
es
inc
and
cld
xchg
mov
int
clc
call
lods
jp
mov
sti
stos
pop
xchg
cmp
jmp
jecxz
insl
test
or
stos
mov
movsl
xor
lcall
xchg
stos
inc
int3
out
inc
lahf
in
imul
ret
es
std
lods
inc
mov
imul
call
jnp
pusha
stos
scas
sbb
xchg
pop
testb
push
cld
and
mov
in
outsb
jns
xchg
aaa
gs
jle
mov
repnz
lock
stos
mov
pop
scas
jns
xor
adc
mov
sahf
movsb
leave
push
xchg
fwait
pop
addr16
jmp
adc
adc
cmp
mov
divb
stos
sub
and
loopne
fimull
stos
xor
int3
stos
xchg
pushf
aas
mov
arpl
jg
mov
clc
movsb
push
mov
dec
jp
cmp
jmp
rorb
xor
xor
ficoms
xchg
or
sahf
jmp
stos
pop
push
ds
cli
clc
fistpll
add
pop
test
js
and
stos
je
inc
push
cmp
xor
cmp
push
stos
and
add
cwtl
sbb
out
cmp
dec
cmp
lret
sahf
push
sbbb
ss
loopne
push
push
ret
pop
cmpsb
or
xchg
fwait
cmc
outsl
stos
repz
or
gs
subl
push
xchg
pop
inc
lret
cmp
movd
scas
loopne
mov
dec
loope
pop
jmp
and
aaa
xor
stos
dec
fistpl
ljmp
fs
inc
js
adc
sbb
dec
addb
fsubs
add
fisttpll
sbb
pop
aaa
inc
jb
cmpsl
sti
fwait
inc
xchg
stos
mov
rolb
arpl
xchg
mov
mov
push
jae
movsb
xor
scas
stos
push
jbe
dec
stc
aam
push
mov
ja
jp
add
cmc
jmp
ret
adc
loope
in
sbb
sbb
sub
imul
push
mov
cmp
in
mov
test
popf
cmp
jmp
iret
cwtl
lar
push
sti
jle
mov
cmpsl
int
jmp
jge
push
mov
aam
outsb
sub
cli
subb
lods
add
stos
push
aaa
pushf
jmp
dec
and
es
mov
dec
iret
movsb
stc
in
orl
add
out
mov
xchg
in
stos
pop
repz
scas
arpl
inc
inc
mov
mov
mov
mov
jmp
aad
out
in
int3
xchg
mov
js
ja
clc
dec
mov
push
stos
data16
mov
repz
or
xor
stos
enter
insl
imulb
ljmp
sbb
mov
outsb
int3
cmp
jb
scas
pusha
repz
push
iret
mov
push
cwtl
dec
bound
xchg
and
cmp
out
push
push
bound
or
call
shll
pop
aas
cwtl
ret
pop
adc
test
daa
test
add
xchg
stos
jno
push
xchg
pop
sub
aam
mov
js
stos
add
lret
mov
sbb
push
stos
push
dec
in
sub
or
jg
ret
cmp
push
inc
cmc
or
sbb
mov
pop
arpl
out
stos
inc
ret
fnstenv
subb
inc
adc
jge
out
in
inc
cltd
jmp
fcmovnb
fmull
and
xor
mov
cmpsl
addl
add
mov
cmc
fbld
inc
stos
xor
dec
repz
jg
stos
decl
jbe
xor
outsl
sarb
stos
aaa
fisttps
and
sub
dec
mov
mov
add
stos
sbbl
aas
mov
out
xchg
flds
jmp
outsb
daa
mov
xchg
jp
addb
ds
cli
roll
stos
orl
or
mov
stos
aad
rorb
fbstp
stos
xor
sbb
lret
push
sub
mov
mov
pop
nop
daa
xchg
mov
mov
inc
cmpsb
test
shrb
sub
or
sar
clc
daa
add
outsl
mov
imul
adc
mov
xchg
sbb
push
stos
or
mov
mov
popf
shrb
or
jmp
xchg
xchg
xlat
cwtl
and
mov
stos
rcr
or
mov
stos
int
pop
test
insl
jmp
jl,pt
push
fdivr
stos
punpckhbw
mov
inc
dec
movsb
mov
arpl
dec
lret
iret
xchg
call
ja
xchg
fstl
push
stos
clc
adcb
mov
or
jnp
pop
pop
mov
stos
hlt
and
mov
cmp
imul
stos
xor
push
mov
adc
mov
sbb
push
fwait
mov
sahf
mov
cmp
xchg
mov
out
stos
gs
mov
lret
shrb
sbb
xchg
fsubrl
sbb
pop
dec
pop
mov
sub
cltd
push
xchg
out
push
cmpsl
fldcw
aad
insl
lahf
xchg
stos
jl
push
mov
les
stc
jns
mov
or
pop
dec
stc
lods
and
lock
xor
rcrb
jae
jns
cmp
or
cwtl
adc
mov
loop
fimull
lods
mov
pop
stos
inc
xor
or
mov
imulb
fwait
outsb
dec
shrb
lods
or
scas
mov
popf
jmp
addr16
scas
fwait
and
pushf
push
in
call
loop
jb
push
xchg
xor
lret
idivb
aam
test
aas
std
ror
push
stos
or
or
stos
in
dec
xchg
xchg
ret
adc
imul
mov
jmp
stos
pop
inc
add
mov
cmp
sbbl
cs
int3
and
jmp
out
and
lods
xchg
stos
nop
push
std
pop
mov
stos
xchg
push
in
mov
inc
ds
mov
xlat
leave
xor
add
jmp
sar
or
fwait
stos
jns
xlat
ret
dec
cmp
mov
and
aad
mov
xchg
shlb
in
les
mov
sbb
stos
sub
add
popf
rol
mov
jg
pop
pop
pop
leave
daa
enter
mov
in
aas
ret
jno
movsb
addb
pop
cwtl
es
xchg
stos
gs
push
push
xchg
pop
stos
ret
pop
aam
fsubs
sbb
nop
in
mov
jnp
stos
dec
fsubrp
fwait
jne
lret
xchg
clc
or
das
stos
test
dec
mov
addr16
jmp
stos
enter
pop
or
divl
adc
mov
stos
fimull
push
out
pop
fldcw
scas
mov
cli
inc
stos
mov
lock
pop
adc
cwtl
or
xchg
ds
pop
stos
and
xchg
jno
fs
repnz
mov
push
xor
xor
addr16
mov
outsl
jl
arpl
rolb
push
test
stos
lret
das
jo
cwtl
jge
imul
adc
and
mov
aaa
cmp
mov
stos
xor
sbb
adc
xchg
mov
inc
outsb
cmp
adc
lcall
push
arpl
add
js
jecxz
imul
neg
dec
mov
imul
inc
int
daa
mov
lahf
dec
jecxz
clc
mov
stos
inc
pop
ljmp
push
adc
add
stos
xchg
fimull
jbe
inc
push
mov
test
xchg
stos
sahf
adc
dec
out
sbb
mov
aas
mov
inc
lahf
arpl
add
and
in
cmc
or
and
adc
in
push
js
orl
mov
jbe
sub
lret
out
stos
fldt
cmp
popf
filds
stos
xchg
or
mov
push
clc
sub
and
cmp
pop
add
pop
jecxz
sbb
daa
sbb
mov
push
loopne
and
jbe
and
stos
out
scas
in
test
push
stos
js
mov
or
xor
cmp
or
stos
jo
push
jmp
sbb
jmp
out
add
loopne
lods
push
shrb
mov
cmp
stos
lahf
sarl
stos
push
loopne
insl
stos
adcb
out
daa
imul
fsubr
sub
call
cmp
pop
mov
stos
xchg
dec
xor
stos
mov
cli
xchg
gs
stos
dec
inc
pushf
or
inc
imull
out
dec
and
pop
jnp
or
sub
pop
test
xchg
cmpsl
jg
mov
fistpl
negb
out
stos
mov
leave
jmp
lcall
dec
jmp
jecxz
fs
into
pop
repz
mov
dec
aas
test
mov
lret
mov
cmpsl
stos
rcrb
fsubrs
dec
out
inc
lret
pop
nop
insl
in
or
aas
dec
stos
loope
mov
movsb
xchg
mov
imul
jbe
loopne
scas
into
mov
fisttpll
mov
iret
jae
movsl
jbe
adc
pop
lods
int3
push
pop
lahf
mov
push
popa
stos
push
fs
stos
push
aaa
repz
or
fnsave
cmpl
shl
scas
mov
push
cmp
or
fbld
adc
imul
stos
lea
fidivl
mov
shll
in
jp
je
fisttpl
data16
cmp
les
adc
adc
stos
loope
inc
dec
leave
pop
imul
push
and
mov
sbb
mov
movsl
xchg
stos
lds
popf
and
or
jge
xchg
sub
jle
leave
loop
lods
lahf
stos
jnp
xor
out
call
sbb
bound
sbb
jb
stos
mov
jae
mov
mov
push
push
dec
and
pop
cld
fmuls
stos
jo
and
scas
xor
inc
aam
pop
daa
pop
mov
adc
movl
stos
push
xchg
inc
or
xchg
ljmp
sub
sbb
pop
insl
pop
mov
stos
fstpl
movsb
xchg
aam
fsubrl
ret
pop
stos
mov
xor
jmp
xchg
mov
pop
lahf
lods
pop
fs
int3
mov
mov
sub
testl
mov
es
stos
cwtl
push
aas
stos
fwait
mov
jns
sub
test
jno
mov
clc
sub
in
out
stos
or
leave
fxtract
stos
iret
adc
jno
lcall
fsub
mov
sub
ret
mov
nop
xchg
lea
xchg
adc
pop
jl
xchg
daa
push
fisubrl
cwtl
push
add
cmp
cltd
mov
or
negl
sub
pop
and
lock
mov
stos
inc
orb
xor
mov
pop
pop
stos
jb
inc
sub
call
add
jge
movsl
stos
push
push
imul
xor
mov
and
mov
stos
add
sbb
nop
mov
add
mov
mov
fildll
stos
xor
cmp
jle
imull
fs
push
sbbb
out
lock
add
movd
xchg
pop
dec
stos
fisttpll
mov
stos
adc
dec
inc
leave
mov
cmp
sar
xchg
or
lea
popa
or
stos
mov
add
aam
movsl
imul
xor
aad
mov
aaa
daa
xchg
mov
pop
clc
repnz
add
adc
and
stos
gs
mov
pop
stos
xchg
mov
in
fs
cltd
lds
data16
fwait
and
out
and
dec
fwait
or
movsb
daa
inc
stos
push
mov
hlt
xchg
stos
jp
inc
and
mov
imul
mov
leave
sbb
stos
xchg
int3
repz
inc
push
stos
sub
ljmp
push
mov
test
push
add
dec
mov
mov
and
loopne
sahf
arpl
cmp
add
sub
imul
sbb
adc
in
ds
sbb
stos
xor
lret
sub
fwait
cmp
lret
rolb
xchg
stos
std
out
mov
stos
cli
lahf
gs
arpl
shll
rcl
cmp
adc
sub
mov
test
cpuid
stos
out
xor
mov
pop
xchg
test
adc
xchg
loope
dec
fistpl
jle
stos
push
cmp
cs
shl
cltd
or
jae
popf
xchg
stos
mov
cmpsl
push
jl
pop
adc
pop
mov
setbe
es
adc
fistl
stos
jb
dec
push
jb
fnstenv
mov
scas
push
js
sub
sbb
or
cmp
ficoms
cmp
mov
mov
enter
mov
mov
pop
ss
stos
xchg
sub
stos
jmp
mov
jmp
sar
push
js
pop
push
push
mov
inc
cmpsl
stos
test
lea
stos
and
xchg
dec
out
dec
cmp
jmp
fidivrl
mov
mov
arpl
popf
sub
lods
divw
mov
mov
loop
imul
mov
aad
cmp
in
imul
les
jb,pt
out
sbb
fwait
je
mov
dec
sahf
fildl
stos
sbb
xor
nop
addr16
sbb
xchg
addr16
movsb
mov
lods
dec
lret
mov
xor
inc
cmpsb
mov
daa
std
cs
xchg
and
lret
int3
das
stos
cmp
mov
test
data16
ret
push
stos
rcrb
xchg
stos
inc
mull
lahf
jmp
cmpl
scas
adc
mov
cmp
sub
imul
mov
jbe
jp
outsb
inc
mov
scas
scas
out
cwtl
outsl
shrl
and
xor
and
dec
lcall
fs
mov
js
xchg
add
push
xchg
adc
cmp
dec
stos
mov
xchg
cmpsb
push
and
repnz
mov
and
int3
stos
addl
les
jecxz
dec
mov
scas
insl
cltd
jno
stos
lds
xor
mov
and
inc
and
mov
push
loope
cli
nop
stos
pusha
arpl
mov
sub
stos
repnz
test
adc
rorb
hlt
fldt
stos
sub
sahf
adc
cmp
sub
mov
bts
xor
call
mov
lods
fcmovu
cmpsb
gs
sbb
test
roll
es
pop
dec
xor
add
dec
or
mov
mov
setns
or
stos
add
imul
imul
mov
scas
mov
cmp
mov
sarl
push
pop
jle
cmpsb
stos
mov
lds
in
shlb
lahf
mov
arpl
stos
mov
inc
repnz
lahf
mov
adcl
imul
inc
or
ret
pop
aad
dec
loop
je
jb
repz
mov
or
adc
push
stos
in
cmp
mov
sbb
roll
stos
ret
mov
stos
rcl
lods
and
jle
mov
mov
cmp
adc
or
push
test
fwait
movsb
ds
stc
mov
cmp
stc
stos
jmp
addb
pusha
fisubrs
mov
lea
int
jns
pop
cmp
stc
cmp
imul
jge
pop
push
push
push
lcall
mov
in
fwait
push
stos
sbb
dec
scas
stos
and
or
mov
cli
mov
mov
mov
ss
push
jmp
aam
mov
call
stos
push
push
sahf
insb
xor
lret
imul
pop
jmp
jmp
aas
mov
lods
rolb
rcl
cltd
jge
cs
mov
mov
stos
lock
scas
dec
enter
clc
inc
pop
mov
jnp
into
xor
das
stos
add
fsubs
stos
loope
enter
inc
stos
daa
fldl
subb
out
enter
push
jmp
cmpsl
pop
ljmp
inc
push
sub
nop
stos
dec
shlb
inc
stos
push
faddp
mov
mov
stos
mov
cmpsb
push
subl
xchg
in
clc
dec
xchg
sbb
ss
adc
stos
mov
sub
jmp
and
mov
data16
push
pop
fs
and
clc
rcl
inc
sub
jnp
jg
ss
stos
cmpb
mov
ret
in
movsb
adc
jmp
sbb
mov
mov
popa
push
jge
pop
pushf
add
stos
xor
aas
xlat
stos
push
imul
lahf
hlt
xchg
xor
mov
mov
jmp
stos
adc
xchg
mov
in
addr16
imul
jge
leave
stos
cltd
dec
inc
out
fnstenv
out
loope
jle
rolb
in
cmp
pushf
stos
fs
daa
into
lds
mov
int3
mov
adc
test
push
aad
mov
leave
cld
add
mov
stos
dec
lds
pop
jmp
out
arpl
mov
pop
fwait
sahf
clc
aas
stos
aam
es
stos
les
push
cmp
push
or
xchg
mov
iret
mov
mov
imul
sbb
cmp
in
stos
arpl
push
mov
dec
or
jge
mov
adc
stos
xor
jp
test
pop
stos
pop
nop
xor
push
ljmp
push
dec
test
xlat
ret
cld
movsb
les
dec
or
adc
rcr
dec
jae
mov
mov
pop
dec
add
pushf
iret
les
adc
cmpl
xchg
mov
in
ja
stos
stc
insb
cmc
push
xor
or
add
imul
stos
adc
pop
stos
aas
or
mov
loope
jmp
xchg
jp
addr16
shrb
stos
std
xchg
pop
aam
mov
test
sbb
neg
stos
sub
push
stos
mov
xchg
mov
cwtl
mov
popa
jg
mov
mov
jmp
jle
jns
stos
in
sub
dec
mov
push
cmpsl
cmp
mov
lea
jmp
jmp
jo
subl
inc
xchg
stos
in
mov
stc
fwait
cmpsb
mov
xor
stos
sub
shrb
push
dec
dec
stos
mov
push
adc
iret
xorl
mov
sbb
mov
cld
mov
sub
jge
in
dec
mov
das
push
clc
test
sub
stos
dec
push
stos
jecxz
inc
xor
fadd
xor
int3
aad
arpl
inc
pop
jnp
pop
jp
mov
push
stos
orb
popa
inc
iret
insb
stos
cmp
sub
stos
rcrb
sub
mov
aaa
sbb
mov
stos
xchg
and
cmp
dec
sub
jl
mov
fucomp
mov
scas
adc
sub
mov
pop
and
daa
arpl
lods
stos
and
adc
pushf
add
jb
xchg
pop
sub
mov
stos
mov
jmp
adc
xchg
stos
and
scas
out
ss
ljmp
stos
inc
xchg
push
stos
inc
xchg
mov
ret
int3
cld
and
xor
push
or
in
sbb
mov
iret
jecxz
and
mov
sarl
mov
movsl
ss
push
cmovl
movsb
in
orb
ljmp
stos
out
jle
popa
mov
cmp
xchg
repnz
sarb
cltd
leave
cmc
adc
cmpsl
loopne
hlt
xchg
stos
shll
push
push
packssdw
ret
popf
clc
pop
and
adc
mov
repnz
cmpsl
push
xor
lock
and
ja
popf
inc
jb
imul
mov
cmp
adc
mov
jecxz
stos
imul
inc
mov
out
mov
mov
sub
fldt
mov
testb
imulb
push
mov
mov
xchg
addl
cmpsb
iret
xchg
stos
lods
sub
les
repz
or
mov
insb
jbe
std
and
rorb
inc
fsubrs
jmp
in
sti
incb
ret
mov
adc
std
cs
stos
pop
jae
mov
jmp
sbb
sbb
cmpsb
or
sub
data16
xchg
aas
cwtl
xor
stos
xor
cmp
mov
lea
jecxz
mov
jge
stos
mov
ret
orl
xor
stos
xor
sbb
mov
test
mov
inc
jp
stos
lods
jle
bound
mov
icebp
add
orl
inc
sub
mov
push
insb
mov
stos
mov
adc
test
dec
sub
bound
test
scas
ss
sahf
sti
mov
cmpsl
xor
xchg
movsb
adc
in
mov
stos
fnsave
stos
aas
testl
test
mov
mov
test
mov
ror
lods
fldt
and
inc
ds
add
push
mov
push
scas
pop
pop
mov
test
inc
lret
sahf
cld
xor
mov
stos
in
arpl
les
lods
out
es
pop
stos
test
repz
push
pop
loopne
jge
sahf
nop
or
stos
adc
mov
dec
lcall
in
cmpsl
daa
jmp
stos
xchg
jecxz
or
faddl
sbb
sub
lea
subl
addr16
movsb
iret
outsl
push
mov
fstl
or
mov
xchg
jecxz
dec
je
test
cmp
push
stos
add
add
out
popa
stos
push
xchg
insl
in
xor
fdivl
enter
dec
lods
cmp
lret
fwait
cmp
push
pcmpgtw
scas
add
scas
pushw
cmp
andb
loop
popa
fiaddl
push
dec
cwtl
mov
pop
js
and
pop
push
inc
stos
int3
mov
cmp
stos
lods
jmp
and
scas
pushw
cmp
stc
pusha
das
cltd
lahf
or
mov
adc
mov
icebp
stos
mov
fsts
xor
xor
lea
js
inc
and
mov
inc
test
add
repz
mov
dec
cwtl
dec
loopne
call
out
cmp
sbb
cmp
push
sbb
imul
inc
out
mov
pop
test
mov
xor
jge
xor
mov
decl
sub
mov
push
scas
jmp
lret
mov
dec
scas
sub
stos
mov
cmpsl
push
mov
sub
push
pushf
stos
jns
repnz
call
outsl
sbb
xor
and
rcll
mov
out
mov
ja
xchg
daa
jmp
add
aas
lods
pop
push
imul
xchg
mov
xchg
xchg
adc
sbb
roll
mov
add
cmpsl
movl
insl
mov
cld
add
mov
cli
mov
hlt
outsl
pop
sub
mov
mov
mov
jno
mov
shr
cmp
mov
cltd
inc
lds
xor
dec
dec
sbb
inc
rorb
xlat
mov
ljmp
movsb
dec
stos
sbb
push
xchg
pop
fstl
out
push
mov
inc
cmpsb
or
jb
xchg
xchg
xchg
xorb
inc
dec
stos
mov
divb
sbbl
pop
stos
and
int
sbb
jp
and
mov
aad
jmp
adc
loope
popa
imul
movsb
cld
jo
fldcw
add
or
test
out
sahf
int3
stos
rcrb
adc
cmp
test
mov
push
popa
mov
es
lods
pop
add
shl
nop
int3
stos
xchg
cs
cmp
mov
nop
ljmp
sahf
inc
lods
push
xchg
scas
ja
or
ret
jmp
and
jmp
dec
inc
aad
mov
xchg
push
loope
add
repnz
sub
sub
pop
push
fistl
xchg
daa
out
stos
mov
mov
lods
stos
cld
aad
call
rcrl
jb
fwait
rorb
addl
xor
inc
pop
pop
mov
stos
out
mov
xor
push
cmp
into
mov
out
int
popf
jb
nop
push
stos
and
lret
lcall
into
stc
stos
mov
add
sbb
mov
mov
stos
ror
mov
add
mov
mov
shll
cli
lds
dec
xchg
pop
jp
inc
or
test
stos
hlt
push
cmp
pop
stos
or
roll
clc
mul
pop
cld
fmull
popa
sub
stos
loopne
pop
lret
outsb
add
stos
dec
mov
sbb
fucomip
stos
cld
jg
mov
dec
mov
scas
mov
xrelease
push
push
daa
sar
fnsave
jnp
test
stos
lds
xor
or
stos
enter
dec
outsb
mov
jg
aaa
xchg
std
cld
notl
jmp
push
in
stos
jmp
cli
dec
test
or
outsl
add
int
ficompl
stc
shlb
xchg
shlb
cmp
pop
cwtl
mov
cmp
mov
xor
sti
sub
stos
add
popf
aam
stos
add
mov
mov
ret
daa
popf
jmp
es
stos
jge
in
mov
js
in
mov
push
or
scas
sbb
test
stos
jb
outsb
mov
mov
rclb
cmpsl
cmp
cmp
shr
lods
adc
cmc
fs
les
push
sub
insl
or
xchg
repz
adc
pop
std
stos
lahf
je
add
mov
adc
stos
cmp
enter
jnp
jg
notb
sahf
pop
stos
popl
movsb
stos
rolb
shll
cli
pop
xchg
xor
movsb
lret
fwait
sub
inc
sbbb
es
add
stos
test
jmp
test
lds
sub
mov
dec
stos
scas
daa
jo
shrb
subl
mov
call
je
cmp
push
or
movsb
cmpsb
fsubrs
pop
stos
inc
sti
pop
cltd
mov
fistpll
adc
repz
push
cmp
jl
push
pop
lret
ret
int
mov
cmpsb
test
addl
mov
add
pop
mov
push
jl
cmp
sub
mov
cwtl
cld
pop
adcl
pop
xchg
lret
jns
xlat
stos
decl
pop
pop
loopne
bound
inc
fcompl
jnp
and
ss
out
ret
stos
je
adc
imul
pop
xchg
pop
mov
stos
mov
out
mov
in
ljmp
nop
popf
jge
ret
adc
in
lock
push
add
lds
push
sub
fwait
mov
push
stos
fs
or
jecxz
mov
movsl
stos
in
sahf
pop
xchg
sbb
enter
sub
fmull
inc
lea
insl
movsb
sahf
pop
adc
das
adc
jl
cld
mov
jmp
negb
lcall
stos
xchg
popl
or
dec
std
test
rolb
xchg
ja
mov
fs
dec
stos
fidivrl
mov
roll
scas
stos
mov
lock
divb
adc
xchg
jecxz
jmp
fs
xor
subl
lahf
xchg
xchg
addr16
aad
pop
mov
pop
stos
add
xchg
sub
jmp
dec
jno
and
stos
push
add
out
insl
cmpsl
stos
jecxz
popf
jle
imul
add
jbe
sub
cmp
inc
mov
or
into
aad
mov
subb
repnz
lods
or
fisttpll
sub
jnp
sub
lahf
jb
jp
lahf
and
xor
pop
stos
mov
into
dec
cli
gs
enter
insl
sub
cld
add
mov
xor
stos
mov
mov
xchg
stos
mov
test
divl
stos
divb
repz
out
or
fisttpl
stos
fsubr
daa
mov
stos
jp,pt
inc
jmp
clc
mov
jb
cmp
test
das
fildll
and
stos
push
into
stos
repz
lds
in
cmp
mov
sbb
sub
jae
jnp
mov
outsl
clc
sbb
stos
cmc
leave
xchg
and
int
inc
stos
ret
rcr
and
cmc
pop
mov
stos
mov
sbb
cmp
xchg
shr
adc
add
jmp
stos
emms
ds
loope
xchg
cmp
or
das
mov
daa
xchg
sub
mov
jbe
xorb
bound
inc
roll
dec
mov
cmp
xchg
xchg
iret
dec
andl
daa
repz
xchg
jb
pop
push
xor
xchg
stos
push
and
push
stos
xchg
pop
divb
jno
inc
cld
xor
stos
cmp
fmull
in
stos
pop
sub
imul
subl
stos
mov
mov
dec
stos
pop
jmp
mov
shrl
stos
push
orb
dec
and
stos
pop
pop
xor
or
cmp
stos
fisttps
je
xchg
fldcw
mov
inc
lods
in
stos
push
sub
jnp
push
aas
inc
insl
inc
mov
stos
adc
fnstsw
data16
daa
or
cli
aad
das
jp
xchg
mov
push
stos
int
cltd
push
lods
add
mov
mov
dec
and
icebp
jecxz
cmpsl
push
mov
call
dec
mov
add
int3
push
cltd
in
jbe
mov
push
sub
push
sbb
mov
sub
rcrl
stos
sub
mov
aas
inc
mov
jbe
mov
sahf
pushf
xchg
push
imul
pop
adc
repnz
cwtl
mov
imul
pop
push
js
push
adc
xchg
int3
cmp
and
scas
inc
pop
lock
jecxz
push
pop
insb
mov
push
in
sbb
xorl
lret
mov
stos
inc
add
ja
push
loop
stos
in
cmp
int3
mov
ljmp
mov
pusha
jge
cmc
test
fidivs
fbstp
stos
jae
mov
ja
cmp
mov
stos
ljmp
or
loope
sbb
mov
daa
mov
jmp
fwait
cmp
stos
mov
mov
and
jl
mov
xchg
mov
jnp
jno
and
mov
enter
shl
fisttpll
cltd
mov
popf
stos
loopne
xor
stos
sub
sarl
xchg
movsb
mov
add
push
in
jp
mov
enter
clc
das
daa
ljmp
dec
in
rcrb
es
jno
fs
jecxz
cmp
imul
mov
add
dec
xacquire
leave
insl
mov
xor
std
scas
outsl
bound
jbe
jns
stos
inc
and
ss
stos
add
insb
adc
pushl
sub
imul
clc
popf
pop
xor
pop
mov
call
fildl
xor
mov
pop
imul
mov
orl
mov
cltd
dec
int
lods
nop
repnz
sub
sub
sbb
data16
lods
push
xchg
stos
mov
out
lock
lods
stos
scas
cmpsb
mov
inc
mov
jp
mov
dec
stos
fwait
sar
int
lock
mov
mov
fsts
adc
js
loop
rorb
fistpl
es
cld
dec
jmp
imul
xchg
popf
int3
mov
and
cmp
mov
in
xchg
sbb
in
or
mov
movl
ret
mov
stos
xchg
clc
mov
ljmp
sub
cmpsb
fisubrl
fcomi
sahf
cwtl
sub
icebp
je
orb
jmp
push
add
cmp
scas
or
xlat
mov
push
stos
add
mov
adc
dec
int
mov
fidivrl
outsl
stos
rcrb
addr16
inc
fsubs
cmp
xchg
lcall
jmp
out
xor
pop
js
lods
mov
rolb
cmp
andl
mov
pop
imul
push
xor
xlat
xchg
xchg
aam
add
scas
mov
push
mov
stos
inc
pop
jg
jl
roll
xchg
test
mov
adc
lods
mov
add
adc
push
je
pop
pop
mov
push
bound
stos
or
push
and
rcrl
mov
das
push
mov
gs
scas
vextractf32x4
adc
clc
mov
cld
stos
les
jg
imul
mov
mov
push
add
fstps
out
sub
test
xchg
stos
popf
xchg
jnp
mov
out
rolb
cmp
jbe
add
cmpsb
xchg
cmpsb
stos
or
dec
stos
cmc
cmp
sub
je
lods
stos
adcb
pop
or
repz
stos
jp
xlat
jmp
jnp
push
stos
xor
out
cmpsl
or
stos
sbb
pop
mov
arpl
xor
ss
int
jecxz
popa
mov
testb
mul
mov
fistl
push
mov
fdivr
fildll
pusha
pcmpgtw
shll
stos
mov
push
imul
push
mov
push
or
les
mov
mov
mov
lods
mov
es
sub
fisubrl
jle
stos
jno
mov
subl
dec
test
add
or
faddl
stos
lock
ds
nop
xchg
jmp
call
fistpl
inc
stos
mov
bnd
sti
jns
aas
lret
nop
insl
enter
stos
loopne
test
mov
xchg
jecxz
aaa
stos
rolb
xchg
cwtl
mov
rclb
std
stos
mov
mov
fs
mov
stos
popa
xor
inc
test
sbb
rcr
stos
sahf
loope
fstpt
das
stos
cli
and
arpl
mov
test
fwait
xlat
stos
or
jp
stos
outsl
faddl
jns
repnz
mov
jmp
ret
dec
sarb
cmp
stos
sahf
daa
jns
loop
cwtl
fs
pop
lahf
pop
insb
xor
push
push
jge
sub
and
shl
loop
sbb
mov
pop
stos
sbb
mov
mov
imul
subl
pop
jbe
mov
push
stos
sbb
or
adc
test
in
stos
sbb
ds
repz
jl
mov
xchg
inc
data16
stos
jecxz
mov
aas
into
in
stos
adc
arpl
cwtl
xor
decb
push
stos
in
dec
adc
sbb
lret
push
dec
jle
mov
sub
scas
clc
xor
loope
lods
shrl
sarb
xchg
push
adc
jecxz
test
stos
and
or
stos
pop
xor
fldcw
stos
push
lock
das
ds
mov
popf
ret
je
sub
mov
xchg
dec
mov
or
cmp
stos
cmpsb
xchg
and
mov
data16
mov
inc
sbb
stos
and
jl
stos
mov
xor
out
stos
imul
comiss
ret
lahf
test
stos
mov
shlb
shrl
daa
sub
xlat
testl
and
scas
sub
jp
xchg
cmp
adc
jg
and
or
dec
arpl
stos
daa
inc
nop
or
jb
fsubrl
mov
insl
iret
in
dec
sbb
test
fwait
sbb
mov
lds
xchg
icebp
test
lret
rolb
adc
in
stos
jmp
mov
add
sbb
push
filds
stos
rolb
xchg
dec
testb
pop
dec
bts
pushf
icebp
jg
dec
cmp
cld
add
pop
push
addr16
int
ja
stos
push
inc
mov
stos
arpl
adc
push
xchg
cmp
call
sahf
stos
jmp
mov
or
loope
sbb
lret
stos
mov
or
stos
out
dec
push
mov
pop
mov
movsb
mov
inc
add
or
or
fisttpll
enter
lahf
insl
popf
mov
mov
fcompl
ljmp
push
and
inc
cmc
push
xchg
stos
mov
arpl
aam
pop
push
xchg
cmp
bnd
pusha
jg
orb
jo
xchg
and
mov
cmpsb
mov
mov
imul
cmp
je
cmc
mov
ljmp
iret
arpl
cld
mov
add
lods
cmpsl
stos
inc
je
dec
jne
cwtl
test
adc
push
cs
nop
cltd
pop
stos
insb
fs
test
stos
sub
sub
ret
int
aad
scas
mov
arpl
sub
negl
add
outsl
repz
adc
sarb
push
adc
out
jb
xor
sbb
cmp
stc
xchg
xchg
fwait
stos
push
aaa
lock
dec
pop
jmp
mov
cld
pop
scas
xchg
insb
lock
shrb
movsb
xchg
mov
ret
or
jns
pop
fimuls
and
stos
inc
xchg
lret
push
dec
stos
cmp
sbb
dec
test
xor
arpl
stos
pop
jle
xchg
pusha
scas
stos
ret
mov
xchg
lahf
fisubrl
bound
mov
stos
fdivl
jp
stos
dec
leave
outsb
or
rcrb
and
mov
mov
push
pop
stos
iret
xor
add
shlb
or
push
xor
stos
jae
push
adcb
or
into
mov
stos
push
mov
mov
ret
addr16
push
pusha
fbstp
mov
clc
imull
push
mov
shrl
mov
mov
xor
xchg
ret
imul
mov
dec
stos
hlt
jecxz
addr16
xchg
or
std
enter
arpl
stos
xor
sub
xor
jp
lock
out
daa
stos
enter
lret
iret
stos
test
imul
pop
xchg
in
outsl
mov
fwait
cltd
mov
add
lods
mov
mov
arpl
stos
fildll
daa
adc
sbb
mov
adc
shrl
outsl
or
jns
lret
cwtl
adc
addr16
and
leave
fwait
movsb
push
idiv
add
jmp
fimull
lea
cld
cmpsb
movsl
stos
jns
sbb
xchg
cwtl
jp
mov
adc
imul
mov
lock
lcall
jmp
jb
imul
push
mov
stos
movsl
xchg
sub
cli
test
adc
stos
sub
push
cmp
lcall
data16
scas
cmp
mov
push
sarb
mov
mov
int
inc
addr16
popf
push
mov
xor
dec
fcompl
repnz
sahf
mov
in
stos
xchg
jge
daa
inc
fmull
cli
dec
lahf
stos
xor
mov
adc
stos
mov
test
test
cmp
idivb
mov
xchg
mov
ret
ljmp
xor
gs
push
xchg
mov
pop
std
stos
ja
push
fdivrl
inc
rcrb
mov
in
in
push
add
or
sbb
mov
adc
test
psrlw
mov
sti
vmovd
arpl
lret
leave
stos
adc
insb
sub
cmc
dec
loope
lds
stos
aaa
sub
push
std
jle
test
push
sti
shld
in
stos
enter
push
insb
adc
cmc
and
jp
arpl
cmp
iret
incb
jmp
inc
push
xchg
jp
sbb
jb
cmpsb
stos
fisttps
addr16
stc
mov
and
push
aam
imul
out
add
stc
mov
mov
ds
or
jb
cmp
shll
rol
push
add
mov
popf
rclb
js
adc
push
stos
fcomps
lcall
stos
arpl
gs
mov
mov
mov
jl
xor
pop
loopne
fistpll
fldt
cwtl
arpl
test
adc
shrl
pop
pop
mov
xchg
pop
stos
les
mov
ret
fildll
pop
or
jno
push
iret
push
cmp
inc
cmpsb
out
mov
scas
mov
mov
and
xchg
xchg
fldl
stos
jno
test
add
cmc
dec
imul
movsl
and
cmpb
jbe
lcall
cmp
jge
stos
inc
jg
fcmovu
outsb
sti
movsl
adc
dec
imul
xchg
add
arpl
sti
inc
lods
jmp
stos
push
jle
scas
call
jno
insl
je
hlt
mov
pop
sbb
aad
or
lret
shrl
jno
ds
daa
mov
stos
pop
in
push
mov
pop
leave
stos
or
popf
call
in
popl
xor
sub
or
addr16
pop
mov
aam
stos
add
std
fisubrs
xor
mov
mov
jne
fcomi
outsb
pop
push
mov
inc
jno
xchg
test
stos
call
inc
fisubrl
pop
mov
mov
xor
stos
shlb
sbb
stos
and
jle
movsl
sub
inc
out
scas
and
stos
mov
adc
mov
idivl
lcall
xchg
mov
xchg
ljmp
dec
ret
jg
xor
ret
push
out
loop
sub
pop
inc
into
iret
fwait
rcr
pop
stos
adc
rcll
jnp
int3
ftst
aad
adc
sbb
push
test
and
stos
sbb
sti
aas
mov
into
inc
stos
mov
imul
leave
stos
inc
inc
les
repz
jbe
imul
and
jmp
xor
ret
xor
adc
mulb
stos
push
dec
mov
rorl
ret
lods
movsb
adc
inc
or
stos
mov
out
mov
lods
mov
push
and
jl
outsb
adc
mov
or
mov
loop
lods
push
stos
out
inc
jbe
cmpsb
or
mov
iret
jge
ss
fidivrs
stos
lds
cltd
les
pushf
sbb
jbe
mov
mov
sub
push
lods
cmp
dec
mov
or
out
ret
movsl
inc
stos
lret
fst
pop
shrl
lahf
add
inc
stos
insb
push
sahf
jbe
fwait
pop
stos
cld
clc
or
shrl
cmp
aaa
adc
mov
xor
sub
adc
stos
jp
or
push
fcompl
stos
stc
mov
rcl
push
jae
mov
push
orl
inc
mov
xorb
outsl
mov
xchg
sbb
into
push
jp
mov
ds
jnp
sbb
mov
lret
nop
xchg
sti
repnz
hlt
ficompl
repz
rclb
push
xchg
bound
and
ja
pop
cli
es
and
jno
clc
popf
and
or
adc
jge
push
stc
jle
jo
cmpl
repz
cmp
push
dec
mov
das
sti
stos
cli
data16
xchg
jp
stos
fstpt
xor
add
stos
sub
sub
dec
ret
xchg
stos
dec
push
push
pop
push
inc
loopne
xchg
xor
insb
mov
roll
arpl
sub
pushf
imul
cmp
loop
or
xchg
add
sub
aas
addr16
test
lret
stos
test
sbb
dec
mov
inc
dec
rclb
mov
aas
adc
stos
test
das
xor
dec
cmp
push
xchg
add
cld
nop
repnz
loopne
stos
push
ret
loope
fdiv
stos
addr16
and
push
jo
mov
xchg
clc
enter
add
push
ljmp
gs
orl
iret
sbb
dec
adc
aad
into
movsb
dec
mov
mov
cwtl
push
mov
sub
imul
cmc
dec
mov
call
xlat
dec
dec
cmp
push
int
jnp
jns
xchg
pushf
push
int
xchg
stos
out
xor
pop
int3
stos
sbb
cli
sub
or
dec
ljmp
push
js
sbbl
imul
adc
adc
jp
lret
movsb
lret
mov
in
mov
fidivs
movsl
shrb
jge
js
jg
mov
int
and
pop
outsl
fcoms
dec
mov
cmp
icebp
add
repnz
aaa
stos
jns
xchg
in
das
push
dec
js
popf
mov
fbld
sub
mov
pop
stos
sbb
ret
pop
jmp
cmp
mov
xchg
adc
sbb
sbb
lock
mov
enter
lods
pop
mov
push
xchg
pusha
mov
lahf
jecxz
adc
hlt
or
addr16
push
loopne
xchg
pushf
popf
out
inc
fisubrs
add
jns
ss
xchg
out
stos
mov
icebp
dec
xchg
jmp
stos
and
fwait
ret
add
arpl
mov
xchg
mov
faddl
test
pcmpgtd
imul
jp
jno
and
dec
cmp
or
into
sbb
movsb
cmp
jg
stos
adc
pop
xchg
arpl
loop
push
lret
adc
add
into
push
imul
sbb
ljmp
add
mov
stos
aam
imul
nop
lret
xchg
stos
imul
jno
push
stos
xchg
pop
idivl
xorl
ror
leave
sub
cmp
pusha
sti
inc
lahf
lods
dec
ljmp
adc
and
mov
fwait
adc
mov
stos
jbe
fstps
cmp
fnstsw
mov
stos
and
jns
movsb
sub
test
lret
outsl
adc
popf
or
jns
and
and
mov
dec
test
cs
and
add
faddl
mov
test
movsb
lods
mov
fwait
or
mov
clc
stos
and
sti
and
xchg
repz
repnz
and
jg
pushf
cld
imul
mov
stos
push
rcll
imul
in
jp
sub
sbb
ret
lret
cli
daa
and
clc
stos
mov
js
cwtl
cld
repnz
imul
mov
test
stos
lds
lcall
ret
cmp
into
fnsave
jb
ret
pusha
pop
dec
stos
inc
ja
sbb
mov
and
mov
aam
mov
mov
push
cli
stos
or
mov
and
insl
mov
add
cmp
mov
andl
fsubrs
pop
stos
in
add
push
lret
inc
cmp
xchg
sahf
clc
loope
mov
push
out
xchg
pushf
pop
stos
xor
movsl
mov
cmp
mov
popf
in
sbb
outsb
pop
adc
test
inc
jae
xchg
xchg
cwtl
stos
dec
jg
inc
data16
xlat
pop
xchg
or
jl
jne
inc
mov
scas
lods
sti
lods
sahf
stos
out
xchg
and
movsl
sub
lea
push
jl
and
in
mov
pop
xor
mov
idivb
jae
jp
pop
mov
sti
addr16
ret
mov
mov
call
xchg
mov
shrl
mov
cld
inc
pop
mov
and
and
popf
mov
repz
shl
sbbb
in
mov
jge
inc
push
xchg
test
iret
mov
fisubrs
das
rorb
jg,pn
out
pop
aas
lock
sahf
mov
sbb
cmovp
ljmp
loop
les
addr16
pop
lret
andl
fwait
movsl
or
jmp
aad
in
loop
subb
fisubrl
ss
xor
inc
jo
stos
and
aad
daa
dec
push
mov
stos
and
xchg
stos
fucomi
jo
aam
cmp
jmp
das
mov
inc
pop
xchg
fwait
pop
mov
fdivrs
pop
xchg
xchg
imul
addr16
movsb
scas
mov
cmp
dec
out
lcall
in
xchg
xchg
popf
stos
stos
and
adc
pop
jnp
adc
test
xor
xor
pop
scas
stos
test
enter
pop
out
jns
cmp
mov
xchg
push
cs
xlat
push
ja
mov
pushf
scas
daa
scas
cmpsb
stos
mov
add
popf
jb
fcmovnbe
je
mov
jmp
jecxz
and
add
mov
add
adc
lret
dec
mov
jmp
xchg
imul
stos
xchg
push
outsb
jbe
cs
mov
loop
pop
inc
lods
imul
lret
fidivrs
mov
pop
addr16
sub
scas
fsub
lcall
sub
push
outsb
mov
mov
imulb
add
es
and
aad
sbb
jnp
lcall
imul
stos
adc
test
pop
aam
ss
fwait
dec
adc
adc
dec
stos
mov
lahf
pop
xchg
stos
jno
pop
push
xchg
jg
dec
and
sbb
in
jae
sbb
push
or
jl
shrb
cmc
add
mov
sub
xchg
cmp
xor
scas
lock
addr16
orl
aam
cmp
jbe
insb
mov
outsl
and
inc
mov
fisubrs
loope
iret
dec
stos
in
xchg
add
imul
fisttpll
int3
and
jecxz
stos
lahf
push
test
sub
adc
stos
cmp
sub
xchg
arpl
add
stos
mov
jmp
dec
xchg
pop
mov
cld
aam
jo
insl
lods
lea
mov
lods
or
stos
js
xchg
lock
or
mov
mov
mov
add
dec
stos
add
or
push
mov
inc
pop
mov
add
mov
popf
std
mov
xchg
pop
lret
xor
nop
pop
push
scas
cmpl
push
loope
stos
sbb
pop
sub
in
shrl
jbe
outsl
mov
pop
xchg
xchg
into
adc
xchg
xchg
add
test
ret
mov
sbb
out
mulb
inc
jo
ljmp
mov
inc
adc
xchg
stc
mov
dec
sbb
mov
or
xchg
enter
inc
mov
es
stos
sbb
cmp
iret
fsubs
inc
xchg
cli
jae
mov
mov
mov
stos
mov
loop
mov
dec
into
cmp
stos
dec
test
aad
sti
mov
add
mov
stos
jle
mov
mov
mov
jo
push
icebp
inc
xor
mov
inc
stos
lcall
movsb
stos
int
xor
dec
inc
imul
push
xchg
icebp
sub
dec
insl
and
xchg
lds
aad
shl
stos
outsb
xor
test
out
ret
es
add
aam
sub
rorb
ljmp
mov
sti
lret
xchg
js
cmc
int
sbb
dec
mov
pop
inc
testl
stos
jno
lcall
ja
jmp
mov
mov
add
lods
dec
add
int
mov
jo
pusha
clc
icebp
stos
sub
add
stos
dec
pop
add
fwait
ljmp
xor
mov
scas
lret
arpl
stos
jecxz
pop
cmpsb
dec
mov
inc
mov
daa
mov
or
push
cltd
pop
cmp
or
fisubrl
fsubl
and
dec
shlb
ljmp
frstor
jmp
pop
and
dec
mov
cld
fsubl
mov
xchg
mov
mov
push
stos
leave
push
loop
ficoms
push
fisttpll
stos
pcmpeqw
stos
pop
scas
cmp
xor
inc
dec
dec
movsl
xchg
cmp
cld
and
pop
push
mov
arpl
mov
stos
lock
and
mov
fcmovnb
cmp
sbb
dec
cmpsb
stos
sub
imul
and
je
int
push
iret
stos
sub
or
or
leave
stos
fcomps
mov
cld
pop
stos
repnz
push
sbb
mov
ds
push
movl
addr16
xchg
xchg
mov
fucomip
andl
add
clc
pop
arpl
add
mov
xor
or
sub
negl
push
mov
jnp
ret
or
stos
or
dec
test
pop
stos
dec
stc
sti
arpl
mov
jnp
andl
pop
popf
push
in
pinsrw
cwtl
ss
mov
cli
scas
jno
stos
sahf
popf
cmpsl
mov
mov
or
xchg
test
xor
cmp
mov
cwtl
stc
mov
aad
aam
shlb
cmc
dec
jb
sub
pusha
mov
stos
mov
dec
shrl
mov
sbb
das
loop
lret
in
fistps
daa
jmp
or
stos
mov
dec
xor
ss
inc
in
stos
leave
shlb
inc
and
xor
mov
pop
sti
mov
lret
pop
cmpsb
int3
cmp
sub
stos
call
in
sbb
gs
cmpsb
test
adc
cmp
stos
je
sub
push
lods
daa
lret
add
aad
dec
mov
mov
or
dec
fists
stos
xchg
jmp
push
arpl
in
add
shrl
repnz
out
sub
xor
jg
inc
stos
leave
sub
pxor
cli
xchg
lods
leave
repnz
jmp
in
stos
and
fisttpl
iret
adc
or
push
fcoml
pop
inc
dec
scas
or
imul
imul
mov
shll
mov
call
pop
lahf
cmpsl
sub
lret
clc
cwtl
mov
push
xchg
sbb
stos
push
in
inc
fidivrs
mov
or
sbb
cmp
ret
cmp
and
stc
and
mov
sub
lret
mov
dec
mov
stos
sbb
pop
mov
aaa
jnp
ds
mov
stos
loop
loopne
pop
pop
dec
dec
cmpsb
cli
mov
adc
rorb
stos
sahf
es
lcall
pop
add
add
push
sahf
mov
mov
xchg
insb
dec
jae
shll
fsubl
stos
add
repnz
jge
cli
ds
jmp
xor
xor
inc
push
ret
sub
push
push
test
sbb
stos
or
lret
dec
jl
cwtl
stos
insl
call
xor
ljmp
test
jmp
mov
rcr
cli
mov
dec
stos
test
not
stos
adc
pop
pop
scas
loop
stos
jmp
pop
mov
pop
in
rol
mov
xorl
or
xchg
push
stos
xor
fcmovb
movsb
sub
mov
ss
mov
ja
lds
adc
ds
lret
mov
push
es
xlat
pop
arpl
push
mov
sub
imul
dec
daa
mov
lods
xchg
mov
clc
mov
jmp
js
stos
jo
xor
scas
cli
movsl
hlt
stos
mov
fdivl
jge
and
outsb
pop
adc
stos
fisubrs
ret
pop
test
lret
push
daa
inc
or
lret
jae
fdivl
in
rcrl
out
outsl
jb
dec
stos
ja
xchg
xor
xchg
dec
inc
stos
mov
or
push
dec
xchg
aam
jo
stos
lods
sbb
push
or
stos
lea
add
fistpl
push
stos
shlb
and
roll
or
stos
out
cmc
cld
out
add
cwtl
dec
jmp
stos
cltd
outsl
daa
or
dec
mov
mov
addr16
inc
xchg
jmp
mov
cmp
sahf
or
fldt
mov
jno
stos
inc
sub
jg
out
fistps
jmp
jmp
adc
rcrb
repnz
mov
bound
push
aaa
xchg
fwait
pop
stos
mov
jge
fsubrp
push
loop
and
sarb
mov
incl
les
adc
lock
mov
stos
jns
fistl
fistpll
imul
ss
xor
daa
into
nop
rorb
stos
sti
negb
aad
xchg
pop
cmp
int3
pop
repnz
int3
mov
jns
push
xchg
dec
stos
push
inc
mov
sub
inc
cmp
xchg
pop
push
loopw
mov
mov
mov
push
imul
mov
stos
mov
adc
outsb
stos
push
std
out
mov
adc
stos
sub
out
mov
insl
push
mov
lahf
dec
iret
scas
cmp
or
sbb
arpl
stos
loopne
xor
imul
int3
mov
push
scas
jmp
stos
cli
xchg
enter
push
and
cmpsb
xchg
sbb
pop
rcll
ljmp
sub
inc
stos
cmpsl
sub
out
pop
sbb
cli
sti
and
adc
or
pop
sarl
stos
cmp
ficoms
stos
in
xlat
pusha
mov
xor
movsl
stos
sbb
inc
push
dec
sub
ror
inc
mov
xchg
cmp
rolb
lods
cmc
lea
or
insb
int3
pop
daa
rclb
lcall
cli
stos
or
jno
jle
mov
arpl
test
inc
lahf
sbb
mov
cmp
sub
scas
adc
push
lods
push
stos
or
addr16
fwait
ret
stos
stc
and
jne
cmp
js
fnstenv
mov
mov
cli
jmp
stos
cmp
sub
inc
sbbl
cmp
push
or
pop
adc
ret
stos
hlt
addr16
arpl
movsl
test
int
sbb
dec
mov
fmuls
arpl
xchg
mov
scas
dec
rcrl
stos
arpl
jnp
jp
int3
rclb
and
aas
pusha
mov
jae
lods
cmp
es
cld
popl
cltd
cwtl
outsb
mov
ja
stos
and
lds
stos
mov
dec
imul
out
push
in
xchg
mov
stos
and
mov
fstpt
ja
pop
std
sbb
fwait
mov
test
sbb
push
pop
mov
movl
iret
fmuls
dec
data16
xchg
andl
jno
loope
xchg
mov
pop
cwtl
and
aas
es
xchg
ljmp
dec
scas
dec
or
pop
and
out
stos
xor
inc
sub
cmp
fisubrs
or
jnp
daa
cld
sbb
mov
ja
adc
cmpsl
dec
mov
sarb
mov
mov
stos
jmp
stos
pop
ret
das
mov
jmp
and
xor
mov
pop
lods
jmp
in
xor
push
adc
mov
cmpsb
pop
movsl
scas
repz
out
mov
xchg
cmp
push
out
fcompl
pop
mov
subl
jns
cmp
xchg
insb
scas
mov
imul
shlb
in
int
mov
xchg
jbe
negl
jge
lds
leave
mov
xor
mov
sbb
xchg
add
pop
inc
loopne
cmc
pop
push
stos
incb
out
popf
adc
addl
pop
stos
aas
repz
test
mov
aad
cli
clc
int
fcmove
stos
push
stos
je
fistps
icebp
or
stos
rcrb
outsb
nop
add
ja
sub
stos
in
xor
mov
cmp
or
xor
add
out
stos
or
pusha
lea
test
pop
aas
stos
lahf
jmp
pop
cwtl
stos
jno
je
and
adc
jae
mov
andb
and
ja
pop
stos
jnp,pn
decl
cmp
lods
arpl
jmp
out
jl
xor
mov
mov
stos
and
divl
stos
push
dec
shll
sub
mov
xchg
inc
rcll
cmp
stos
push
notb
xchg
sbb
push
cmp
push
stos
out
pusha
push
rolb
imul
push
mov
stos
sbbl
loope
test
push
stos
adc
mov
stos
loope
inc
add
stos
or
mov
pop
shrb
jns
jnp
sub
xchg
andl
icebp
xor
mov
and
pop
stos
cli
xor
daa
outsl
jb
lcall
sub
jnp
daa
adc
cwtl
inc
mov
les
jbe
daa
push
out
lret
sbb
dec
mov
inc
xchg
std
stos
sub
stos
into
mov
cmp
stos
push
push
sub
or
daa
mov
popa
mov
ret
les
test
cmp
adc
ss
in
ds
mov
sahf
bound
enter
and
mov
jge
sub
gs
mov
pop
and
push
mov
sarb
imul
out
or
sbb
dec
lahf
popa
stos
shll
or
mov
xchg
aas
stos
scas
test
cmp
xorl
stos
push
jne
mov
stos
sarl
xor
fiadds
add
jo
stos
mov
fcoms
stos
push
pop
fstps
adc
inc
test
fmul
mov
pop
add
adc
stos
iret
hlt
sti
sbb
aad
stos
and
cltd
prefetch
lods
cmp
test
mov
test
pop
pop
inc
je
decl
fsubrs
mov
sbb
lret
pop
dec
aaa
popa
arpl
mov
jl
mov
leave
imul
lret
mov
jne
and
or
in
adc
mov
jecxz
pop
ds
dec
test
jno
int3
stos
scas
mov
stos
xchg
mov
test
sub
sbb
mov
and
xor
xorb
push
clc
sub
jp
pop
and
cltd
inc
test
sbb
mov
dec
negb
or
fcomip
stos
pop
jmp
jle
ficoml
push
pop
adc
aad
stos
sub
xchg
lods
jmp
sarl
stos
imul
jmp
dec
aad
jg
lods
rolb
ficomps
and
jmp
push
cmp
add
fisubs
stos
adc
mov
add
xchg
aam
mov
fcomp
ret
and
pushf
mov
movsb
test
jmp
cmpsl
xor
cwtl
rol
lea
leave
mov
shr
adc
movsb
fidivl
notl
fmull
pop
jmp
adc
add
pop
mov
stos
adc
cmpb
movsl
jns
movsb
add
jbe
and
arpl
cmpsl
cmp
cmp
pop
test
xchg
sub
popf
cmp
dec
xchg
stos
mov
nop
sub
sub
push
inc
dec
clc
icebp
mov
jno
pop
notl
ror
push
out
add
xchg
stos
cmp
mulb
stos
add
stc
inc
push
fcoml
stos
fs
repnz
cmp
push
imul
mov
push
loop
stos
insl
cmpsl
mov
sub
xlat
inc
test
enter
pop
notl
pop
popf
jge
pop
sbb
mov
pop
mov
ja
iret
sbb
xchg
mov
sti
jl
fisubrl
inc
xchg
mov
sub
dec
mov
cmpsl
stos
daa
fcompp
xor
sub
adc
stos
enter
in
xchg
xchg
mov
stos
out
jno
sub
stos
jb
sbb
adc
fisttpl
rcll
and
lahf
xchg
outsl
adc
mov
and
mov
scas
mov
inc
sarb
shll
insb
out
lea
insl
adc
adc
sbb
subb
js
test
push
mov
or
add
adc
stos
dec
lret
sbb
mov
push
sub
lods
jb
jge
xor
pusha
fsubrs
call
jns
ljmp
inc
stos
mov
mov
daa
xor
mov
scas
mov
inc
adc
out
stos
xor
mov
jmp
mov
insl
ret
ds
test
mov
cmpsl
stos
cmp
mov
stos
or
pop
aad
arpl
mov
insb
imul
push
jmp
push
add
or
repz
push
cmp
push
loope
jb
jne
add
pop
repz
movsb
lcall
scas
dec
cmpsl
mov
mov
dec
xor
push
pop
aaa
enter
mov
jl
jmp
test
stos
xchg
aam
ljmp
sbb
mov
and
and
call
jge
movsb
loopne
imul
mov
popf
int3
mov
dec
mov
in
stos
out
jp
or
mov
push
stc
stos
cs
sbb
int3
fsubl
lods
out
pop
jne
dec
push
push
cmpsl
cmp
xchg
dec
movsl
popa
stos
add
push
fldz
in
cmp
and
test
stos
jae
repnz
fcomps
add
push
push
fdivl
inc
sbb
stos
cmp
fldenv
adc
jge
pop
cli
aaa
les
mov
jmp
pop
movsb
cmp
fisubrl
mov
dec
mov
or
sbb
mov
enter
xor
and
pushf
int3
xor
stos
push
adc
add
mov
ja
dec
mov
sarl
cld
push
mov
push
daa
sub
xor
cmp
push
imul
mov
loope
stc
js
push
mov
or
adc
fstpl
xorb
mov
pushl
cmpsl
addr16
mov
add
sub
mov
cmp
es
mov
mov
stc
adc
xor
stos
pop
ret
cli
mov
push
in
or
in
iret
lahf
mov
cld
push
lret
push
xchg
outsl
cmp
cmp
js
stos
pop
pop
mov
pop
push
dec
mov
jge
je
lods
bound
movl
mov
cld
sti
mov
fs
sub
mov
mov
loop
push
mov
jae
xchg
cs
shrb
outsl
iret
icebp
push
imul
sarl
pop
lods
mov
sub
push
shr
fs
mov
test
dec
sub
daa
sarb
xor
in
add
stos
test
add
loope
addr16
lret
or
loopne
lods
and
mov
add
sti
stos
nop
jno
gs
jl
clc
addr16
cmpl
jne
das
out
imul
daa
xchg
scas
push
stos
js
sbb
movsl
repnz
sub
jno
sub
test
repz
push
sbb
add
cmp
jbe
jo
push
and
ret
leave
pop
dec
jns
addr16
scas
lods
fwait
lahf
add
adc
int3
mov
fidivrl
in
ljmp
xchg
into
add
stos
leave
daa
adc
xor
push
jmp
cmp
icebp
xchg
mov
stos
insb
jns
mov
std
xor
xchg
adc
xchg
je
jo
mov
mov
stos
cmp
mov
sub
out
sub
dec
stc
stos
fwait
cs
xchg
inc
test
jb
aam
popf
imulb
pop
sbb
sbb
es
test
int
movsb
sbb
sbb
or
repnz
shlb
aam
lods
jecxz
push
repz
push
shr
mov
fwait
cli
fsubr
push
stos
int3
es
and
push
add
xchg
mov
in
lret
outsl
mov
insb
stos
sbb
ret
xchg
dec
stos
lods
sbb
test
aad
js
gs
ds
jge
fcmovnb
scas
and
loopne
stos
scas
xchg
lret
js
inc
leave
imul
pop
stos
mov
jnp
mov
or
lcall
stos
aam
fstpt
or
inc
imul
jbe
stos
daa
inc
movsl
fistl
shlb
or
cmp
inc
xchg
test
shrl
imul
or
jmp
xor
test
mov
ret
sbb
mov
inc
mov
xchg
imul
bound
repnz
cs
mov
ljmp
stos
xorl
cmp
stos
jbe
ja
in
mov
lods
stos
jmp
imul
int3
std
adcb
xor
out
pop
dec
add
add
adcb
shrb
bound
cmp
mov
push
push
push
adc
lcall
xchg
jnp
jmp
xchg
sub
ret
lods
mov
stos
insb
in
push
add
in
imul
inc
mov
cmp
insb
mov
gs
loopne
stos
add
iret
mov
pop
adc
bound
and
xchg
xchg
mov
frstor
mov
mov
pop
cmp
jo
pop
es
nop
je
ds
jmp
inc
mov
leave
in
mov
in
xor
push
mov
dec
pop
jg
imul
jp
stos
sub
enter
xchg
in
mov
shl
mov
xchg
lods
repnz
jns
lock
mov
inc
push
fisttps
mov
call
add
stos
and
xchg
sub
stos
iret
mov
add
jmp
and
and
and
pop
xchg
or
stos
xor
scas
adc
mov
test
xor
xor
xchg
inc
cwtl
push
push
stos
dec
js
out
and
jne
clc
repnz
mov
jge
loop
inc
scas
stos
shll
shll
repnz
lods
xlat
or
clc
movsl
jns
push
sahf
lcall
fisubs
inc
adc
gs
loopne
inc
hlt
push
add
jno
lret
sub
xchg
stos
pop
dec
stc
or
test
push
cmp
sub
push
sbb
lods
mov
es
mov
xor
xor
shl
xchg
fstpt
push
rolb
jnp
nop
cmp
sbb
push
rcl
and
inc
jns
aaa
mov
stos
ljmp
lea
push
xor
ret
jnp
mov
lds
mov
shrb
mov
pop
stos
ljmp
pop
stos
ds
sub
or
mov
test
stos
js
ss
imul
stos
cld
cmp
cmpl
aam
cmp
and
out
push
fld
adc
adc
stos
loop
mov
inc
mov
scas
jecxz
pop
mov
xchg
mov
mov
jb
scas
pop
arpl
test
lahf
and
fsubl
sahf
cmp
sbb
push
mov
mov
mov
test
stos
clc
and
mov
aam
mov
aad
sbb
pushf
jge
fcoml
ja
stos
mov
mov
shrl
add
inc
cmp
imul
and
add
xor
loopne
cmc
mov
xor
pop
inc
gs
sbb
push
xor
aad
jae
ret
jl
or
gs
inc
hlt
insl
pop
push
into
insb
call
xor
sub
push
ds
mov
xchg
xchg
cmp
xchg
mov
or
das
cmpsl
mov
dec
dec
lahf
lret
pop
data16
aam
not
hlt
mov
stos
insl
push
xor
in
xchg
and
stos
push
inc
mov
sbb
shrb
jp
xchg
jmp
pop
mov
lea
imul
push
pop
shll
xchg
ss
movsb
sbb
pop
push
loopne
enter
push
stos
out
mull
fwait
xor
lods
imul
sbb
pop
cmc
xor
dec
inc
push
pop
scas
sub
or
sahf
stos
jl
ror
jg
mov
mov
dec
inc
out
inc
xchg
jbe
shlb
adc
fdiv
mov
cmp
xor
stos
aad
movsb
nop
adc
sbb
jnp
pop
mov
lea
push
jmp
shlb
iret
pop
popf
aaa
pop
or
jge
insl
sub
xchg
addr16
mov
mov
sti
lea
and
or
sbb
sbb
pushf
and
sti
lods
inc
push
dec
fnstsw
jnp
mov
xchg
push
jo
outsb
jg
int
stos
sbb
xor
lods
mov
push
jecxz
ret
push
jg
mov
scas
cltd
gs
mov
lock
movb
pop
ljmp
mov
mov
xchg
popa
mov
xchg
cltd
lret
stos
ret
push
dec
add
jnp
fmull
xchg
insl
xchg
addr16
subl
mov
and
stos
arpl
mov
js
xchg
cmp
stos
add
push
and
sbb
pop
and
lods
sbb
int3
jns
jmp
sbb
mov
jne
cs
and
inc
mov
adc
fsubrs
push
push
mov
jmp
scas
movsb
faddp
inc
gs
mov
enter
cmpb
mov
pop
lahf
lods
adc
in
or
iret
cwtl
push
mov
ljmp
adc
les
lahf
int3
out
push
jp
cmp
sub
movsl
stos
divb
testl
stos
bound
and
imul
rclb
rolb
xchg
notl
jbe
rcl
jno
inc
ss
rcl
lds
sbb
data16
fstps
scas
test
cmp
cmp
stos
fneni(8087
dec
bound
mov
push
in
dec
out
or
bound
sbb
imul
xchg
outsl
and
mov
adc
jb
stos
mov
mov
xchg
loope
pop
sbbl
mov
mov
out
mov
sub
xchg
stos
int3
daa
stos
sub
jb
pop
adc
xor
xor
add
add
std
addr16
jmp
mov
mov
ja
in
gs
stos
test
int3
mov
push
icebp
outsb
cmpsb
dec
lods
dec
push
sbb
push
or
andl
stos
adc
cmp
adc
add
mov
jle
adc
enterw
push
shll
jg
icebp
imul
movsl
stos
cmp
adc
aas
or
add
jbe
mov
mov
inc
stos
inc
popf
packssdw
sbb
cmc
cltd
mov
bound
lret
jo
out
jmp
stos
icebp
outsl
rolb
repz
dec
fldenv
ljmp
mov
fs
jae
add
shrb
lea
rcll
push
sub
mov
mov
xlat
push
in
stos
leave
ja
mov
cmp
das
call
nop
cli
mov
pop
push
out
push
cltd
jb
xchg
jle
and
mov
lret
cmp
fisttpl
push
dec
sbb
cmp
push
mov
mov
test
stos
mov
pop
outsl
imul
stos
idivb
lahf
add
test
pop
jae
mov
xchg
leave
stos
jo
cmpsl
xor
daa
adc
sub
sbb
sbb
fildl
fisubrs
push
cmp
pop
fwait
leave
fst
stos
or
dec
call
out
ret
ss
mov
push
loopne
aas
jnp
xchg
insb
stos
orb
push
sub
adc
inc
fldt
sarb
xchg
jmp
push
into
xchg
dec
aas
fsubs
dec
mov
stos
dec
inc
in
test
scas
stos
pop
pop
inc
mov
xchg
or
xchg
stos
daa
jno
aas
mov
sbb
jb
in
mov
imul
mov
mov
ljmp
and
das
ja
sub
pusha
out
mov
stos
cmp
scas
pop
mov
sub
or
adc
mov
xchg
pop
fwait
dec
add
xorl
mov
in
les
and
xchg
sub
xor
loope
mov
jae
inc
mov
or
daa
arpl
jmp
sbb
and
in
sarl
imul
lret
leave
pop
outsb
stos
and
int
sbb
iret
stos
orb
stos
xlat
jmp
mov
xchg
stos
vmovapd
jno
dec
nop
movsb
negl
stos
int
mov
xchg
push
stos
and
std
lea
cwtl
xchg
bound
mov
scas
in
stos
fisubs
xor
push
testl
mov
add
inc
fstp
xlat
or
stos
jnp
lcall
enter
adcl
stos
dec
xor
pop
int
fnsave
mov
mov
xchg
iret
jo
stos
pop
and
sub
push
xchg
mov
add
stos
mov
movsl
add
xor
cs
jae
ds
sub
stos
xchg
lret
fwait
cmp
sbb
mov
out
stos
xlat
cmp
inc
mov
outsl
insl
and
out
stos
testb
into
stos
in
cld
xor
xchg
test
sub
or
pusha
sub
xchg
stos
cmp
icebp
pop
mov
ljmp
fucomp
movsl
jmp
xchg
cld
pop
stos
out
mov
sbb
loop
call
xor
pop
pop
divb
dec
jb
fsubrs
jp
imul
cmp
xchg
and
dec
testb
lea
or
push
mov
jnp
ss
xor
fisubs
repz
lea
aas
mov
imul
jnp
xchg
nop
hlt
push
stos
jmp
mov
sbbb
addr16
pop
jnp
push
ja
fcompl
cltd
mov
stos
mov
jge
into
daa
jno
adc
in
stos
cli
stos
cltd
add
push
cmp
sbb
lahf
sub
add
jp
xchg
fdivl
dec
push
lods
add
or
dec
stos
repnz
mov
imul
cmp
stos
jg
lea
cmpb
or
or
mov
pop
into
jge
dec
mov
xchg
mov
aaa
in
cmp
dec
insb
stos
xor
cmp
out
sub
lret
cmpsb
sbb
stos
pop
test
add
jbe
hlt
stos
jb
data16
mov
mov
int
std
dec
push
inc
movsl
mov
lahf
je
stos
mov
enter
outsl
fwait
loopne
icebp
fisubl
pusha
dec
stos
negb
in
add
stos
roll
inc
stos
mov
mov
cmp
data16
ja
daa
es
aaa
cmc
jnp
sbb
adc
sbb
insb
popf
jl
sbb
and
jmp
pop
lret
imul
daa
fcom
icebp
stos
lcall
shrb
adc
mov
aad
pushf
cmp
cmp
mov
push
call
das
insb
in
xchg
xchg
stos
mov
fbstp
add
push
daa
sub
jecxz
mov
and
cmp
rcrb
leave
mov
mov
dec
mov
mov
sub
adc
sti
lret
adc
and
ja
dec
mov
imul
lods
int
push
inc
lea
or
pop
sub
add
daa
cmp
in
pop
fistl
and
xor
mov
ret
fwait
mov
inc
or
pop
js
dec
cmpl
jns
or
adc
addr16
icebp
xchg
dec
insl
lea
cmc
test
cmp
test
jne
decb
mov
arpl
shll
popa
fiadds
cmp
mov
mov
fimull
cmpsb
sub
outsb
imul
sbb
xor
sub
or
stos
pop
adc
mov
mov
in
arpl
fwait
shlb
aaa
jnp
scas
push
sahf
sub
int
jl,pt
ljmp
fdiv
jmp
in
pushf
push
loop
mov
jle
dec
fimuls
addr16
bound
inc
mov
push
loop
aas
mov
dec
in
jns
imul
xchg
adc
stos
pop
repz
cmp
or
add
mov
push
sub
lods
aam
push
in
and
jmp
insl
cs
dec
pop
call
jg
aas
sbb
dec
aaa
jmp
xchg
mov
pop
rcll
movsb
negl
std
popa
xlat
mov
lret
dec
mov
fs
mov
sub
stos
shr
jb
xchg
out
inc
movsl
out
xlat
push
jnp
mov
test
jbe
mov
stos
sub
cwtl
push
sbb
or
cs
fwait
push
stos
mov
out
xor
cmpsb
sbb
test
stc
pop
stos
rcr
lret
repz
lock
dec
push
push
mov
je
dec
movsb
adc
xor
add
or
aad
sbb
or
imulb
xor
dec
stos
push
adc
test
stos
stos
push
xchg
mov
filds
insl
jp
gs
add
and
xor
push
and
push
xchg
cmpsb
cltd
jmp
mov
add
out
adc
xchg
jl
pop
jbe
cs
mov
xor
aam
mov
scas
lret
xchg
fldl
xchg
cmp
push
mov
testl
pop
dec
mov
pop
movsl
stos
fs
loop
stos
jae
xchg
imul
mov
inc
xchg
jbe
pop
lods
push
sub
ror
or
stos
inc
cwtl
inc
fsts
push
cmp
stos
pop
xor
inc
xor
stos
adcl
stos
jp
sbb
fisubl
cmpsl
xchg
xor
and
mov
cld
stos
add
pop
ss
lea
stos
lods
enter
test
ss
test
mov
sub
xchg
stos
mov
sub
sub
ds
das
imul
cmp
frstor
hlt
dec
test
push
repnz
mov
add
daa
mov
mov
ret
or
jle
imul
insb
pop
cmp
mov
adc
sbb
das
inc
sub
cmp
sti
sub
cltd
sbb
in
aad
stos
idivb
stos
mov
cmp
arpl
push
sbb
sbb
mov
fldcw
ja
lcall
sahf
mov
jb
sub
popa
mov
stos
aaa
in
xchg
xchg
cmc
stos
dec
stc
std
xor
addr16
test
dec
pop
mov
arpl
fdiv
mov
fs
imul
xchg
pop
and
bts
in
push
sub
xor
mov
cmpsb
stos
dec
ljmp
stos
pop
mov
imul
aam
inc
loopne
push
stos
sahf
nop
test
imul
ficomps
jmp
popf
jae
ret
xchg
push
push
stos
call
mov
jge
movb
das
stos
loopne
adc
imul
fildll
fwait
pop
lahf
das
cs
mov
sub
mov
mov
faddl
jno
jb
into
clc
dec
insl
fwait
mov
inc
mov
pop
mov
imul
sti
jmp
insb
add
and
xor
roll
std
xlat
mov
imul
test
xchg
mov
pop
stos
xchg
sub
mov
and
das
sub
xlat
xor
sub
sbb
mov
subb
pop
stos
faddp
xchg
in
js
stos
sub
dec
frstor
out
outsb
mov
loope
adc
add
pop
sbb
setg
cmpsb
sub
fsubr
out
mov
jmp
imul
mov
stos
mov
xchg
inc
xor
cs
mov
stos
sbbl
cltd
shrl
out
in
xchg
bound
add
aaa
mov
loop
jne
into
dec
jmp
mov
mov
cmp
stos
lret
xchg
and
sub
lret
popf
ja
xchg
mov
call
and
imul
mov
imul
movsl
std
ret
fidivl
es
sbb
std
or
out
stos
push
mov
ljmp
jle
imul
lahf
mov
add
pop
and
sbb
mov
mov
add
gs
push
stos
pop
jmp
push
fsts
ds
pop
xchg
sbb
and
sub
aam
stos
scas
mov
mov
outsl
cmp
test
dec
mov
stos
idivl
cmc
movsb
stos
sub
dec
fcmovnb
fcoml
imul
dec
sbb
cmp
sbb
hlt
fwait
cwtl
in
push
pushf
stos
in
aam
xor
int
stos
jp
mov
push
adc
in
xchg
leave
sti
cmp
mov
call
test
cmpsl
push
adc
stos
lcall
push
and
adc
lea
dec
fcmove
ror
movsb
out
sbb
fnstcw
inc
in
cltd
cmc
ds
stos
cmpsb
cmpb
vcvtsi2sdl
xor
cmp
popf
subl
sub
sti
stos
mov
mov
pop
sbb
push
mov
test
push
mov
test
jecxz
scas
xlat
hlt
xor
je
stos
clc
mov
sub
cld
mov
insl
jnp
mov
fimuls
cmpsb
jle
cli
jge
add
push
pop
pop
popf
sbb
xchg
and
mov
jmp
rcll
stos
aam
lods
movl
insl
mov
pop
push
loop
imul
adc
cli
push
sahf
mov
mov
inc
stos
iret
mov
in
jb
mov
das
push
nop
out
int3
mov
cld
fisttpl
out
in
adc
and
ds
aas
scas
jmp
scas
dec
sub
stos
pop
inc
test
sub
test
pop
cmp
dec
and
outsb
mov
push
je
fs
xchg
into
xchg
mov
sbb
and
es
mov
xor
outsb
jns
test
fadd
ss
or
push
mov
mov
xchg
mov
inc
inc
ret
minps
and
xor
movsb
lods
jns
sti
pop
inc
stos
xor
cmpsb
call
jle
fimuls
push
shrb
mov
mov
aas
insb
mov
xor
cmpsl
and
scas
js
setae
insb
sub
leave
das
sub
inc
pushf
inc
lock
cmp
sub
sti
push
stos
loopne
mov
icebp
in
cwtl
or
loopne
add
and
sub
rclb
inc
jecxz
stos
mov
dec
fbld
cs
mov
stos
push
pop
scas
lock
sub
inc
cmp
fwait
dec
stos
mov
movsb
cmp
cmp
jno
call
jns
nop
stos
std
bound
mov
jno
movsl
add
stos
mov
mov
mov
xchg
push
xor
dec
stos
xchg
cmp
lret
dec
in
into
stos
ljmp
and
mov
push
mov
inc
mov
inc
es
into
cwtl
xchg
pop
jge
nop
sub
pop
aas
lds
lods
fs
testb
xchg
pushf
jno
shl
and
dec
inc
fnsave
test
adc
lret
rcrl
push
in
jge
stos
sub
mov
push
or
mov
lds
or
stos
test
mov
cltd
data16
stos
xchg
out
arpl
stos
mov
cmp
icebp
addr16
repz
aam
jl
mov
clc
pop
sbb
add
stos
and
xor
aaa
ret
stos
fsubrl
lahf
clc
in
add
mov
inc
xchg
push
stos
stos
jge
mov
mov
hlt
sub
in
mov
inc
ret
push
out
cld
pop
cmp
lods
sahf
dec
mov
in
enter
and
add
loop
dec
fwait
and
inc
imul
fnstsw
je
fwait
test
mov
lahf
int3
cld
push
scas
outsl
mov
gs
mov
jb
mov
cmp
aam
fisubrl
ljmp
pop
jno
int
jae
repnz
mov
movsl
loope
mov
popl
jbe,pn
mov
fisubrl
mov
fmull
clc
repnz
hlt
mov
fistps
fmuls
sbb
pop
jmp
out
jle
push
push
jns
pop
icebp
cmp
dec
or
dec
jmp
lds
mov
mov
fiadds
lods
mov
mov
movsb
jge
mov
pop
and
mov
loopne
push
mov
push
icebp
stos
mov
out
jns
jne
stos
mov
xor
inc
stos
sar
xchg
gs
ds
lahf
icebp
mov
jnp
inc
js
or
push
fwait
sub
or
mov
loope
cmpsb
stos
shl
and
dec
stos
mov
pop
in
lods
and
das
inc
es
test
shll
cltd
fs
sbb
push
in
mov
test
dec
mulb
stos
mov
cmp
xlat
pop
and
sti
movsl
push
jne
jae
fnsave
aas
cmp
xchg
inc
inc
stos
test
aaa
lea
adc
stos
jbe
mov
insl
stos
stos
mov
and
mov
add
mov
mov
mov
mov
inc
fisubrl
movsl
repz
xchg
test
add
mov
aaa
push
push
ret
jne
repnz
rcrb
xchg
into
enter
dec
inc
push
js
mov
out
adc
movsb
std
popa
lret
pop
add
repz
add
out
arpl
mov
jecxz
adc
stos
pop
es
faddp
ljmp
fwait
or
outsb
xor
lock
or
and
jle
leave
int
mov
mov
jmp
push
scas
movsl
xchg
stos
inc
push
sub
and
stc
imul
push
cwtl
lret
mov
cmpsb
inc
daa
in
push
inc
xchg
or
mov
jns
cmpsl
mov
push
xor
push
sub
jle
mov
sbb
addr16
stc
daa
adc
stos
jmp
mov
pop
jmp
cli
jbe
and
mov
adc
stos
mov
dec
movsl
jns
sub
mov
cmpsb
shrl
idivl
sbbl
mov
pushf
pop
sub
bound
and
xchg
iret
or
pop
test
or
sub
mov
loopne
repz
sbb
std
or
cld
push
mov
test
movsb
out
fnstsw
pop
nop
popa
or
mov
inc
dec
sub
mov
mov
inc
andl
mov
ds
scas
cmc
or
jp
fisubl
sahf
pop
sub
mov
mov
push
adcb
sbbl
or
rolb
inc
adc
mov
scas
pop
jge
push
lret
shrl
aad
lods
adc
in
dec
pusha
fwait
cmpsb
xor
sbb
cmp
popa
aad
lea
mov
dec
imul
fildl
jmp
mov
pop
stos
hlt
lret
mov
subl
push
inc
add
scas
pop
scas
sbb
int
xorl
aam
fidivl
pop
shl
or
data16
inc
adcl
arpl
pusha
aaa
and
jl
jae
pop
cmp
xchg
sbb
sbb
les
je
int3
stos
call
mov
fs
dec
sbb
and
and
pop
xlat
stos
inc
and
or
adc
xor
xor
jmp
jle
add
xor
mov
mov
mov
sbb
push
push
jnp
dec
sub
xor
jp
push
mov
stos
xor
lods
fcomi
fsub
add
pushf
mov
push
iret
es
aas
push
sti
pop
mov
repz
clc
stos
xchg
mov
pop
cmp
stos
test
scas
xchg
js
mov
pop
inc
icebp
in
stc
pop
mov
inc
add
lret
cmp
test
pop
stos
push
xchg
mov
test
sbb
mov
cmp
push
mov
stos
push
and
js
imul
scas
push
lds
outsl
stos
add
sarb
stos
sbb
iret
jge
fnstenv
ret
pop
popf
mov
movsb
sub
stos
jne
push
and
int3
push
stos
xor
or
stos
xchg
push
ret
push
shrl
scas
test
cmp
jmp
divl
lcall
in
ds
cmp
imulb
sub
aad
mov
sub
fwait
das
pop
stos
push
je
and
mov
aas
and
cmp
rcll
in
xor
loopne
stos
fisubl
pop
ds
lock
out
stos
fidivrs
rclb
mov
les
cmp
das
es
adc
xor
test
repnz
and
mov
dec
sub
loope
mov
xor
add
not
fs
jge
jnp
clc
stos
lahf
xchg
and
jns
jg
xchg
sub
pop
ja
daa
push
inc
jns
shl
subb
nop
addr16
dec
push
mov
xchg
cmp
movsl
movsb
or
cpuid
les
lock
xchg
adc
jecxz
das
dec
stos
pop
stos
push
fwait
sub
lea
jo
push
adc
mov
dec
rorb
movsb
dec
push
lahf
stos
and
sub
jp
rcrb
and
fcoms
imul
cmpsb
iret
inc
stos
arpl
sahf
lret
imul
fnstcw
mov
std
daa
or
pop
mov
mov
fidivrs
dec
mov
push
stos
in
push
jmp
repnz
xor
test
pop
sbb
jb
mov
js
fsubrs
lcall
pushf
lahf
ret
arpl
xlat
aad
xchg
mov
jmp
fucomip
shlb
mov
jmp
out
out
add
cli
inc
and
add
fnstenv
or
popf
push
rcr
push
push
pop
inc
xchg
add
rcll
mov
loope
stos
inc
mov
bound
xchg
sahf
fiadds
rcrl
lret
mov
jnp
mov
or
ret
push
shlb
stc
in
rcrl
xchg
mov
lret
or
sbb
mov
test
and
stos
mov
push
movsl
stos
sbb
adc
loopne
mov
cmp
in
push
test
mov
int
mov
pop
push
rcrl
push
xchg
add
lods
in
idivl
mov
enter
lds
and
ss
popf
shlb
rcrb
test
into
popf
into
mov
xchg
xor
mov
imul
jmp
pop
jle
sti
xchg
aam
xor
mov
xor
imul
and
inc
jecxz
loop
pusha
ret
sbb
stos
mov
pop
cmpl
xor
stos
movsl
shrb
and
hlt
cltd
push
dec
lds
mov
jmp
xchg
stos
push
dec
inc
sub
cs
dec
jmp
cmp
mov
xchg
aad
cld
ficompl
in
add
push
xchg
dec
adc
jg
inc
sub
adc
sbb
in
mov
or
mov
or
push
call
pushf
outsb
and
sub
inc
in
ret
movsb
xorb
mov
imul
stos
dec
mov
dec
fld
xchg
sub
pusha
pop
lret
aad
xchg
pop
mov
mov
stos
clc
sub
lds
insl
push
mov
aas
insb
mov
out
and
fldt
push
cld
push
pusha
mov
adc
inc
mov
aam
neg
leave
nop
movsl
stos
push
xor
cwtl
js
and
pop
roll
pop
dec
dec
scas
sarl
cld
pop
dec
mov
in
in
stc
pusha
icebp
sbb
jb
movsb
ljmp
cs
cld
clc
sbb
and
loop
and
movsb
dec
push
scas
sti
inc
jns
xlat
bound
mov
jle
lahf
or
jae
add
push
enter
movsb
sbb
fwait
sbb
mov
jmp
mov
stos
xchg
xor
loopne
pop
sti
test
jecxz
fwait
movsb
inc
push
pop
mulb
mov
mov
xor
xchg
jo
xchg
mov
movsb
shlb
outsb
push
fsubrp
ret
subl
cltd
leave
mov
add
stos
pop
fldenv
gs
xor
stos
add
push
or
sbb
inc
jmp
stos
mov
sub
mov
sbb
dec
outsl
stos
andl
pop
stos
out
xor
pop
pop
clc
xchg
stos
jecxz
adc
fldcw
movsl
mov
inc
stos
daa
pop
sbb
push
xor
stos
call
lret
sahf
mov
loop
stos
or
jbe
fldt
lods
jnp
ds
imul
inc
in
mov
push
and
pop
mov
add
inc
xchg
in
arpl
out
fmull
mov
jl
jmp
jb
imul
stos
and
sbb
sub
stos
or
hlt
je
stos
inc
dec
push
lret
int
nop
popf
stos
push
dec
pop
shlb
mov
js
lret
mov
scas
imul
xorl
mov
stos
hlt
in
pop
je
jle
xchg
stos
fsincos
dec
jne
std
inc
cltd
push
lahf
insb
fucomp
mov
push
mov
cltd
add
pushf
stos
fisubrl
icebp
loopne
test
inc
mov
mov
mov
aas
notl
xchg
dec
mov
stc
sub
or
mov
pop
xor
aad
scas
mov
and
pop
mov
daa
pop
ret
lds
lock
or
adc
xor
enter
stc
or
outsb
stos
mov
cld
es
stos
loope
mov
stos
add
push
fildll
mov
inc
faddl
mov
mov
jg
dec
jb
stos
add
test
stos
dec
push
push
mov
std
dec
cmpsl
and
add
mulb
sbb
stos
divl
ljmp
xchg
enter
shrb
sahf
in
push
xchg
in
mov
lods
enter
loopne
dec
sbb
adcl
adc
cli
sub
cltd
and
mov
sub
sub
dec
fwait
stos
or
ret
inc
test
in
stos
les
push
movsb
dec
int3
inc
popa
sub
movsl
xchg
xchg
repnz
adc
loop
add
lods
and
pop
sarl
stos
arpl
inc
rcll
aam
xor
dec
insl
fs
push
imul
jmp
jae
iret
pop
mov
scas
in
mov
arpl
imul
adc
push
xchg
fmull
cli
rclb
out
push
lahf
bound
push
xchg
cmp
repnz
lret
mov
ljmp
insb
or
stos
or
jae
sbb
stos
cmc
loope
xor
pop
dec
and
stos
fsubrl
out
xchg
ss
aaa
pop
scas
inc
lock
addr16
push
xchg
int3
sub
mov
sbb
jl
cmpl
push
mov
mov
adc
ret
sub
insl
dec
push
stos
in
push
fwait
mov
stos
leave
mov
cs
fwait
xor
push
stos
sbb
and
pop
jmp
or
mov
push
stos
pop
and
xchg
cwtl
outsl
shrb
subb
xchg
mov
inc
sub
and
dec
or
xor
stos
gs
fs
testb
add
stos
call
xor
stos
sub
sbbb
push
scas
stos
lods
shrb
out
imull
push
arpl
shll
mov
mov
mov
stos
xchg
dec
mov
aam
xchg
data16
jp
lea
mov
mov
jns
stos
push
rcll
lds
stc
addr16
ss
aas
imul
sarb
std
xchg
iret
lods
rclb
insl
fcomip
pop
shrl
pop
mov
mov
loopne
cmp
push
stos
cmpb
dec
push
add
dec
jmp
mov
iret
jl
mov
xchg
mov
fstpl
rcl
stos
into
test
adc
jmp
mov
testl
and
stos
cld
adc
cmp
pop
mov
jne
test
and
sub
adc
push
mov
popa
mov
stos
mov
dec
xor
jmp
outsb
inc
xchg
rcrl
and
mov
lods
out
mov
add
jae
lcall
mov
dec
adc
stos
dec
lret
mov
dec
stos
sarb
shrl
or
pop
add
stos
bound
pavgw
mov
pop
mov
dec
xor
mov
shll
sahf
pusha
add
jle
push
cmpsl
jecxz
inc
stos
imul
movsb
dec
or
sbb
adc
dec
mov
fs
fdivr
ret
sbb
sbbb
mov
and
stos
mov
mov
xchg
aaa
mov
pop
push
push
fucomp
stos
ret
das
mov
int3
cmp
mov
aaa
xchg
mov
add
scas
xor
stos
insb
lcall
stos
cwtl
adc
ljmp
jle
cld
push
adc
pop
mov
pop
fldl
jg
nop
out
stos
out
push
or
xchg
fisttpl
xchg
sti
stos
xor
fwait
adc
push
stos
loop
fnstcw
stos
int
xchg
inc
pop
in
cld
addr16
dec
mov
clc
subb
lods
mov
stos
test
mov
daa
scas
icebp
mov
sbbl
pushf
mov
push
loopne
data16
push
ljmp
xor
mov
sti
stos
decb
test
ss
pop
lea
lret
push
or
dec
roll
sub
into
out
push
jnp
jnp
pop
push
in
jl
rcll
lods
std
popf
addr16
nop
lahf
repnz
cmc
sbb
aas
stos
das
subl
imul
lods
jge
inc
int3
mov
call
dec
pushf
cmc
xor
cmp
test
push
add
jns
rorb
lcall
pop
xor
int3
xchg
xchg
add
or
mov
inc
leave
scas
xchg
inc
cmp
addr16
aaa
mov
sbb
stos
add
enterw
ss
fdivl
subb
xlat
adc
sti
push
test
stos
mov
inc
mov
flds
add
stos
mov
insl
lea
scas
clc
jp
sbb
jb
add
and
stos
xor
test
jecxz
or
lret
int
mov
loope
cs
pusha
std
shl
pop
bnd
xor
stos
enter
mov
adc
xor
stos
sbb
push
sbb
jno
stos
addr16
cmc
mov
push
popf
sbb
xor
ljmp
in
fisttps
stos
dec
pop
or
into
js
mov
mov
shrb
and
xchg
movsb
imul
adc
mov
lret
aaa
stos
push
js
or
push
cwtl
push
sbb
fcmovnb
lret
into
mov
cmp
stos
aas
dec
dec
pop
es
enter
repz
or
nop
cmp
push
aad
lret
or
push
jge
sub
lods
inc
push
stos
fst
adc
and
mov
iret
mov
pop
in
mov
out
xchg
jnp
inc
or
decl
lahf
out
mov
sar
pop
stos
fs
pop
and
xlat
sbb
mov
int
lahf
cmp
mov
into
mov
mov
rolb
movsl
in
fwait
aaa
jae
xchg
xchg
call
pop
in
mov
push
fistpll
stos
test
dec
pop
out
stos
sbb
ljmp
mov
add
punpcklbw
addr16
jnp
gs
mov
cld
pop
mov
dec
stos
inc
push
xchg
push
xor
imul
jno
stos
test
movsl
and
aad
mov
lret
loopne
lods
add
dec
sbb
inc
mov
jmp
lea
inc
jg
xchg
fs
aas
inc
mov
nop
cmp
imul
repz
daa
sbb
xlat
sub
in
lcall
ret
lahf
jg
test
lahf
sbb
mov
test
mov
iret
test
inc
sub
mov
xchg
sahf
xlat
cmp
divl
sub
stos
mov
cli
adc
lret
iret
daa
mov
sub
adc
stos
pop
jns
int
mov
stos
mov
push
jle
mov
or
in
sub
stos
or
lret
or
xlat
stos
rcr
and
iret
xchg
out
xor
cmc
ficompl
ficomps
inc
xchg
jne
stos
mov
or
stos
fcoml
jb
xchg
rep
dec
stc
jae
xchg
or
int3
jmp
dec
scas
mov
push
stos
arpl
iret
pushf
adc
jecxz
fmull
test
arpl
xchg
inc
xchg
cmpsb
stos
and
fnstenv
cmpsl
imul
insl
stos
pop
xchg
stos
jmp
push
sub
stos
jb
bound
stos
das
aam
sahf
daa
lcall
ret
xor
fwait
or
fmuls
bound
outsb
fwait
add
jmp
stos
cmc
scas
or
inc
jmp
cli
dec
stos
jae
test
adc
stos
fwait
rcll
and
sti
fs
enter
repnz
das
fsubs
mov
loopne
shrl
stos
mull
and
pushf
sbb
inc
jmp
lods
mov
sub
or
stos
sahf
ret
add
jg
xchg
nop
xchg
adc
and
in
cmpsl
ret
mov
xchg
or
fsubrs
pop
stos
and
push
xchg
loope,pn
cld
cltd
mov
lret
inc
mov
std
dec
dec
jmp
mov
ja
nop
dec
xchg
stos
sub
mov
in
inc
mov
sbb
aam
fs
pop
xchg
or
or
mov
jo
scas
jmp
mov
lret
xchg
and
xchg
add
stos
jg
ja
adc
sbb
jne
jmp
test
sbb
adc
sub
rclb
dec
add
dec
pop
data16
nop
cmp
jl
imul
jb
fidivl
lea
aam
sbb
stos
in
push
mov
mov
xor
sbb
add
add
and
jmp
or
dec
lret
xchg
or
shll
mov
stos
ds
rorl
lret
cmpl
inc
xor
out
mov
pop
cmp
aaa
jmp
shrd
mov
sbb
mov
insb
icebp
sub
cmp
xor
shl
divl
cmovnp
pop
jne
fisubrs
mov
push
push
stos
sub
cs
jecxz
dec
cmp
int3
bound
idivl
test
sahf
stos
adc
inc
xchg
ljmp
pop
adc
inc
popa
stos
adc
pusha
shrb
pop
faddl
les
leave
inc
stos
lcall
popa
xchg
sbb
rep
xor
push
and
mov
or
cld
xchg
sub
jns
xchg
mov
addl
sbb
inc
add
stos
jle
jp
data16
cmp
sub
outsl
pop
mov
jp
pop
imul
push
jmp
cld
cmp
xchg
cmp
jmp
mov
incl
aas
test
into
jmp
xor
push
pop
cmp
call
fs
jecxz
adc
lock
pop
pop
or
sbb
jno
stos
and
lods
mov
sub
outsl
pop
jle
addr16
sahf
and
scas
mov
push
test
jo
jbe
dec
decl
out
ficoms
enter
sub
stc
sub
push
mov
pop
popf
repz
xchg
enter
stos
cli
lods
xor
xchg
xorl
jns
lods
imul
mov
mov
mov
cmp
adc
and
dec
lods
xor
xchg
cmpsl
xor
lods
or
loopne
mov
mov
stos
mov
adc
push
stos
push
arpl
lret
shrl
fiadds
jmp
mov
lods
jnp
stos
or
insl
mov
aam
jl
das
test
fsubs
and
xchg
dec
sarb
ret
out
std
pop
xchg
mov
push
pop
xor
lret
dec
scas
mov
mov
test
and
xor
daa
fwait
mov
mov
hlt
stos
xor
notb
gs
dec
les
or
ljmp
adc
jo
mov
push
fwait
jge
xchg
mov
out
xchg
out
push
cmp
mov
and
sti
test
jg
push
inc
mov
pop
iret
in
es
push
mov
faddl
xchg
push
fdivs
imul
ret
icebp
or
cli
xchg
dec
mov
xchg
cmpsb
imulb
lret
out
mov
stos
ficompl
mov
notl
in
fwait
int
popa
stos
or
sub
int3
mov
orb
stos
jecxz
cmp
mov
or
dec
flds
nop
cmp
pop
stos
cs
push
cmpsb
mov
lahf
stc
in
mov
jae
sbb
add
movsb
sub
xchg
enter
daa
jns
ljmp
xor
dec
xchg
pop
fisubrl
lret
daa
jne
jmp
loop
cmp
ret
or
loope
leave
test
outsl
and
add
or
fwait
sbb
jp
stos
test
push
mov
stos
push
les
push
stos
addr16
lahf
and
stos
sub
and
mov
jmp
push
out
pusha
xchg
call
stos
adc
mov
data16
sub
test
mov
cmp
stos
fcompl
or
stos
repnz
jns
arpl
test
push
fistl
fwait
jp
mov
jg
rcr
andl
fcomps
dec
jmp
xchg
popf
pushf
lret
outsb
subb
mov
inc
stos
cmp
fimull
mov
frstor
cmp
push
lods
loopne
sbb
leave
adc
lahf
fs
stos
add
inc
test
jae
push
sub
outsb
ret
dec
xchg
pop
mov
fcoms
pushf
lahf
iret
and
out
jmp
mov
xchg
call
inc
movsl
aad
xlat
xchg
cmpsl
dec
pop
sub
push
insb
mov
xchg
les
xchg
cmp
mov
int
dec
stos
leave
adcl
stos
and
inc
ret
popa
mov
mov
stos
testl
das
pop
add
xchg
add
mov
mov
pop
xor
test
cmp
mov
push
xlat
stos
sbb
inc
dec
imul
stos
cmc
iret
or
pop
jmp
aaa
hlt
shlb
leave
jb
sbb
xor
and
addr16
cmp
inc
pop
gs
adc
add
mov
out
imul
mov
push
and
jg
stos
pop
pop
mov
jne
pop
das
in
xchg
add
add
aad
mov
loope
rorb
jnp
insl
xchg
jmp
lcall
cltd
in
hlt
stos
leave
stc
mov
cmp
stos
fstpl
jo
xchg
and
shrl
sbb
nop
fs
pop
stos
xchg
pop
stos
daa
js
or
ficoms
pop
mov
out
dec
in
mov
inc
es
stos
lret
out
mov
mov
dec
mov
add
mov
in
cmp
pop
and
dec
mov
and
outsb
push
lret
stos
add
push
pop
xchg
loope
inc
jmp
ret
dec
mov
mov
cmp
mov
std
pushf
push
call
xchg
in
mov
xchg
sub
cmp
mov
or
adc
push
xor
pop
sbb
rclb
stos
cs
in
out
jno
hlt
stos
sbb
clc
sub
xor
sbb
out
ret
push
mov
and
lret
cmp
das
cwtl
xchg
sbb
pop
push
rorb
jmp
stos
mov
dec
testl
out
test
add
scas
pushf
aad
xchg
xchg
stos
call
fnstcw
xor
pop
push
leave
repnz
lods
xlat
stos
xchg
dec
stos
and
stos
xchg
pushf
mov
lds
or
cld
repz
xlat
lcall
mov
xchg
cmpsb
adc
sbb
gs
jl
addl
cmp
loope
lcall
cmp
mov
fdivrs
insb
jp
cs
pushf
aam
lahf
push
adc
and
mov
pop
push
je
pop
jb
stos
xor
xlat
mov
out
pop
stos
subb
push
arpl
cmp
fldcw
inc
in
add
stos
or
dec
punpckhwd
stos
testb
std
shl
mov
inc
lahf
jg
outsb
adc
ss
pop
icebp
pop
xor
xor
or
fsubrl
stos
loopne
jbe
mov
or
repz
dec
xchg
jnp
and
test
ljmp
stos
aam
pop
clc
int
xor
cld
cmpxchg
test
outsb
push
cwtl
cs
stos
xor
loopne
stos
test
jb
pop
notb
in
rcll
shlb
sub
std
inc
xlat
cmpsb
sub
mov
stos
mov
pushf
cli
je
ss
add
or
adc
stos
nop
inc
pop
movsl
out
mov
arpl
pop
into
addr16
jl
fwait
sahf
sarl
fwait
stos
cmc
push
call
lret
inc
jne
mov
ret
sub
cltd
rclb
sub
flds
jecxz
int
es
dec
cmpsl
bound
dec
jl
gs
imul
xchg
in
daa
shrl
cmc
sub
mov
imul
jl
shlb
mov
and
clc
lahf
push
sub
lods
dec
or
push
cmpl
jmp
xorl
mov
lret
adc
in
inc
mov
lock
cmp
push
push
fidivrl
shl
stos
inc
daa
fbstp
stos
adcb
cmc
and
lods
jp
imul
out
jle
mov
stos
mov
cli
sub
jnp
push
mov
mov
loopne
or
cmpsl
mov
scas
movsl
stos
js
cltd
add
sbb
les
dec
xchg
jnp
jmp
outsb
loop
int3
and
arpl
mov
sbb
aas
stos
mov
out
ffreep
sub
sahf
add
mov
inc
jmp
mov
stc
ficoms
inc
adc
add
into
fldt
sub
out
aad
scas
arpl
test
mov
insb
mov
lock
das
jns
sbb
arpl
test
negb
dec
cld
outsl
and
repz
stos
xchg
dec
cmp
adc
aaa
sahf
bswap
adc
stos
stos
xlat
adc
lcall
sub
outsb
inc
test
xor
mov
stos
sahf
jl
lods
add
mov
stos
imul
shll
xor
jl
push
sub
cmpl
subl
inc
jl
jae
jecxz
clc
lahf
jnp
popa
push
mov
fwait
insl
shll
icebp
jb
xlat
add
inc
iret
outsb
pop
ljmp
pop
imul
mov
out
mov
mov
push
pop
adc
pop
ffreep
stos
mov
in
ljmp
fidivs
add
cmp
rorl
ret
stos
cmc
test
in
lock
stos
js
push
faddp
xor
ret
mov
push
mov
cmpsb
imul
jnp
pusha
sub
lcall
decl
and
out
cmp
push
xchg
add
adc
icebp
mov
scas
jmp
xchg
mov
fwait
repnz
jno
fildll
sbb
in
lret
mov
insb
mov
iret
or
loop
ret
adc
push
mov
iret
repz
sub
jb
mov
shrl
sbb
or
push
jecxz
push
movsl
dec
mov
icebp
out
pushf
sbb
in
stos
pop
cmc
fdiv
pop
mov
subb
inc
xor
jl
mov
popf
mov
stos
stos
jno
into
inc
addr16
stos
pop
pop
mov
int
cmp
stos
in
dec
imul
outsb
out
std
popf
jno
mov
imull
dec
mov
stos
nop
jp
test
sbb
mov
jo
stos
push
stos
nop
dec
jns
jge
add
fcmovu
fwait
xor
test
mov
movsl
and
cltd
jae
cwtl
or
fistpl
jmp
xor
dec
jg
nop
cli
xchg
xor
sub
ret
mov
jns
xor
test
loope
mov
cld
addr16
cmp
repz
cmpl
mov
stos
jecxz
pop
cld
test
stos
stc
jno
add
loope
loopne
movsb
pop
inc
cmpsb
jmp
sbb
es
mov
adc
xchg
pushf
xor
stos
jns
xchg
mov
stos
inc
mov
and
repnz
kmovb
arpl
push
enter
mov
stos
outsl
es
jno
mov
stos
mov
cs
stos
pop
test
add
adc
jo
add
stos
mov
popa
inc
bound
jb
shrl
stos
adc
je
mov
pop
das
lods
and
mov
sub
cwtl
aaa
outsb
fwait
stos
push
loop
xor
mov
stos
jge
or
mov
movsb
lds
fwait
or
pop
sub
jge
stos
inc
push
mov
aam
and
jmp
sbb
xor
push
stos
int
xor
scas
stos
popa
adc
or
adc
or
sbb
stos
hlt
mov
dec
lea
jge
lahf
aaa
or
daa
test
push
pop
rol
mov
loopne
push
das
add
mov
aad
sub
pop
pop
push
jmp
xor
xchg
cwtl
lahf
enter
scas
clc
imul
mov
jbe
mov
inc
fildll
and
sbb
push
xchg
jmp
adc
mov
shrl
dec
mov
mov
insb
dec
jns
leave
pop
cmp
cs
mov
cmp
xchg
push
pop
cmpsb
sub
or
stos
das
dec
mov
and
sbb
data16
xor
dec
lret
dec
shl
lret
jae
fwait
imul
cmp
mov
jb
or
lods
jge
or
nop
fwait
mov
fistl
cmpsl
jae
or
ljmp
bound
lds
stos
dec
outsb
push
dec
and
mov
adc
sub
jnp
and
sub
sub
cmp
sar
cs
jg
shlb
stos
cld
jns
sbb
pop
lret
and
inc
push
cltd
adc
add
shrb
fcmove
xchg
cmpsl
mov
lcall
daa
push
pop
stos
mov
xchg
cli
mov
enter
lret
gs
adc
sbb
aas
aad
cwtl
mov
xor
stos
push
aam
or
pop
sub
and
popf
int
xlat
jl
je
es
in
pop
jmp
push
stos
dec
jnp
repz
dec
stos
jecxz
pop
imul
ret
pop
ret
stc
mov
lods
stos
pop
pop
mov
adc
mov
pop
sbb
or
imul
push
pop
fsubrs
dec
scas
mov
daa
add
mov
lcall
and
leave
sbb
mov
mov
xor
shll
out
decb
fwait
mov
push
mov
add
pop
stos
icebp
bound
pop
stos
xchg
or
aam
stos
stc
sbb
out
inc
lds
mov
mov
push
cmp
lret
stos
xor
cmpsb
int
push
cmc
subl
outsl
ljmp
lret
add
int3
pop
ljmp
out
and
dec
scas
and
imul
sub
mov
loopne
mov
cmp
xor
push
inc
xor
add
fcmove
add
lcall
and
sbb
pop
push
cmpsb
and
ss
outsb
jbe
cmp
pushf
in
jle
aam
iret
pop
stos
mov
movsl
outsl
push
stos
xlat
dec
fisubrl
pushw
adc
xchg
pop
jle
sbb
add
movsb
jae
jno
push
xor
jg
push
mov
orl
dec
jnp
imull
fwait
pusha
fwait
and
push
stos
adc
xchg
mov
nop
mov
stos
rol
dec
cs
mov
aas
pop
push
dec
cmp
stos
sub
sub
cwtl
push
outsl
jnp
sbb
stos
inc
inc
loop
pop
pop
stos
lea
mov
arpl
jp
and
jg
cmpsl
ja
inc
repz
pusha
jns
xchg
imul
xchg
iret
in
inc
mov
and
sub
bnd
mov
xchg
js
sub
pushf
int
stos
jo
in
dec
daa
stos
mov
push
iret
lods
mov
jbe
enter
adcl
cmpsb
imul
lahf
mov
inc
sub
jnp
add
loope
adc
sbbl
push
xorl
xchg
mov
stos
mov
cmp
insb
imul
inc
xchg
das
lea
pop
mov
push
cmp
adc
gs
ss
js
stos
dec
sub
fst
xchg
test
inc
in
outsb
stos
xorl
stos
xor
shl
sub
mov
ret
sbb
push
adc
movsl
stos
stc
in
lods
aad
mov
les
cmp
inc
stos
sub
stos
mov
add
mov
dec
mov
xchg
std
fildll
and
push
lcall
daa
adc
sbb
mov
adc
rolb
xor
xchg
push
mov
cmp
into
sbb
jmp
data16
or
mov
les
push
mov
mov
adc
imul
sbb
jo
or
lds
divb
cmc
out
nop
fidivrs
icebp
mov
stos
mov
mov
iret
nop
lret
imul
xor
jg
push
stos
xchg
mov
push
ss
inc
inc
mov
insb
xor
pushf
stos
insl
ljmp
stos
xor
dec
push
jecxz
shlb
pop
stos
jbe
push
shll
rcr
xchg
jns
cmp
and
stos
jmp
sbb
pusha
jne
ds
cs
mov
cmp
lods
cs
ret
xchg
or
cld
out
sub
mov
fsubrl
jbe
stos
clc
movsl
fwait
int3
sti
mov
mov
xchg
loop
push
stos
sbb
ds
aas
ss
and
jae
xchg
into
mov
lds
dec
jmp
lret
orb
mov
xlat
mov
and
shr
jecxz
jns
sbb
sbb
out
stos
cmpsb
aaa
loope
imul
jmp
pop
scas
call
lods
shrl
popf
cmp
pushf
stos
icebp
notl
loop
or
pop
fistpll
loopne
arpl
vmwrite
std
mov
mov
subl
cs
sbb
xor
stos
movsb
cmp
adc
sub
jno
imul
loope
mov
stos
maskmovq
idivl
imul
pop
lret
lahf
das
mov
dec
outsl
adc
mov
stos
movsl
or
dec
in
push
data16
pop
xor
xchg
push
les
push
adc
sbb
xor
push
jge
lret
jns
stos
xor
in
loopne
or
arpl
movsl
int3
cmovnp
push
mov
cli
adc
jae
push
jno
push
fisubs
fld
sbb
hlt
test
pop
and
imul
dec
cmpsb
gs
cmp
sbb
rorb
jo
pop
mov
cli
out
mov
pop
stos
pushf
xchg
sahf
jae
push
fisubrs
dec
arpl
call
fs
int3
test
je
push
rcll
inc
sbb
subl
stos
dec
mov
xor
add
adc
and
scas
mov
add
xchg
sub
in
cmovbe
push
addr16
push
int
mov
lea
sub
xor
pop
push
stos
xchg
loop
mov
stos
dec
inc
xchg
jbe
andb
xchg
cmp
jb
sahf
enter
push
out
stos
rcll
ret
int3
in
mov
stos
mov
cmp
mov
std
stos
stos
mov
and
lcall
mov
stos
shll
fisubrl
in
mov
or
and
cmp
leave
xchg
xchg
push
dec
jl
inc
stos
popa
dec
cs
xchg
xor
adcl
mov
lds
cmpsb
and
sbb
or
repz
sub
aaa
add
in
stos
and
in
movsb
adc
stc
aas
cmc
push
cmp
popf
push
xchg
and
and
es
stos
es
daa
cmpsb
mov
std
lret
inc
fwait
xchg
xchg
jae
push
push
fs
pop
or
mov
mov
data16
repz
dec
aad
mov
shrb
aas
sub
pop
out
ss
adc
mov
stos
gs
loop
mov
and
je
mov
xchg
mov
nop
stos
mov
data16
ficompl
subb
fs
adc
sbb
dec
stos
cmp
sbb
stos
sti
je
data16
repnz
xchg
test
enter
stos
mov
push
fisubrs
imul
stos
popa
mov
sub
mov
movsb
mov
push
mov
and
js
jg
inc
stos
xlat
pop
or
adc
and
or
xor
jp
adc
dec
jbe
or
arpl
or
sub
stos
sahf
popa
fstpt
pop
repz
and
push
cli
ljmp
ret
mov
add
in
mov
mov
push
mov
icebp
movsb
or
rcrb
ljmp
add
mov
pop
test
and
add
mov
push
loope
pop
jecxz
or
stos
cmp
jo
mov
xlat
add
out
lods
mov
insb
mov
cmpsb
ds
nop
hlt
les
push
jno
gs
mov
and
push
sub
pop
inc
cltd
xchg
stos
lock
push
bnd
stos
movsb
das
je
pushf
fistps
dec
cmp
pop
jp
shll
and
stos
mov
js
xchg
das
aas
lds
nop
pop
xchg
jl
jbe
out
jmp
popf
mov
xchg
repz
push
movsb
dec
jno
adc
pop
cmpsl
inc
lret
fwait
sbb
add
dec
stos
jb
sbb
xlat
stos
and
adc
insl
mov
mov
dec
sbb
cwtl
mov
stos
fs
xchg
fwait
mov
sarl
and
mov
rclb
test
mov
xchg
jbe
test
gs
aas
iret
adc
stos
push
sbbb
ss
sarl
insb
xchg
mov
inc
sub
mov
lds
lahf
jle
das
push
imul
xchg
iret
stos
xor
je
push
push
sub
push
adc
lahf
xchg
jmp
push
stos
xor
xchg
push
pop
pop
shr
cwtl
inc
pop
xchg
dec
xchg
and
push
mov
inc
stos
cs
loopne
cld
pop
xchg
stos
daa
and
and
stos
mov
push
mov
stos
jns
sbbl
jge
adc
pushl
mov
ss
fldt
cmp
dec
les
stos
mov
popa
leave
add
mov
popf
std
adc
stos
dec
int
cmp
or
push
popa
or
adc
push
inc
das
jecxz
inc
loop
mov
es
insb
jmp
cmpsl
and
das
inc
stos
data16
arpl
outsb
cmp
mov
xchg
imul
push
jo
test
pushf
cmp
movsb
andb
sub
mov
inc
scas
sbb
jle
lods
cmp
or
stos
orl
ret
addr16
adc
xchg
mov
aaa
and
push
inc
inc
add
or
lods
mov
jg
xchg
cs
stos
cmp
call
mov
mov
pop
stos
lock
sarb
test
hlt
dec
test
add
add
out
sub
mov
popf
mov
stos
adc
xchg
mov
stos
lret
jl
sbb
cmp
mov
or
daa
and
jecxz
je
jmp
xchg
push
xchg
fcmovnb
sbb
aas
or
shlb
or
inc
mov
pushf
ljmp
daa
rcll
cld
scas
stos
mov
push
mov
shrl
stos
bound
lods
push
pop
mov
mov
cwtl
das
adc
aam
pop
lods
push
push
push
push
xor
inc
dec
jb
fstpl
cli
les
dec
scas
lock
addr16
jge
fistps
cld
stos
and
fisubl
inc
scas
loop
sub
add
dec
pop
jnp
loopne
and
mov
sbb
push
fs
pop
adc
in
insb
mov
cmpsl
inc
sub
add
mov
xchg
inc
popf
test
lcall
fcomip
stos
lods
jae
xchg
negb
int
sbb
shll
stos
mov
dec
shr
sbb
jle
jne
pushf
add
xor
stos
cmpsb
inc
sub
repz
ret
imul
outsb
pusha
lea
ja
mov
imulb
cmp
or
cltd
add
stos
outsl
fldenv
movsb
ss
in
sti
es
movsl
pop
jnp
push
imul
adc
repnz
sub
mov
mov
fsubr
ds
cld
outsl
push
mov
call
mov
jo
sub
or
aad
sub
lret
jp
sahf
mov
xor
inc
xchg
loop
adc
out
pop
inc
xchg
jge
jmp
mov
dec
stos
xor
outsl
xchg
ret
stos
xchg
loope
cltd
dec
insl
push
sub
lahf
sub
mov
imul
pop
mov
scas
mov
movsb
fistps
insl
aad
push
test
cli
int
arpl
mov
xchg
jns
dec
dec
adcl
mov
test
inc
sub
cmpsb
arpl
dec
test
arpl
mov
pop
scas
stos
stos
and
mov
push
xchg
scas
mov
stos
mov
inc
mov
stos
cs
sub
sub
ret
inc
jae
or
jmp
cmp
pop
in
mov
mov
mov
mov
lock
xchg
daa
jb
mov
mov
push
daa
fpatan
jmp
ret
and
jnp
mov
xchg
or
and
fsubr
out
xlat
pop
int
stos
iret
lahf
mov
mov
stos
sbbl
or
rcl
mov
cmp
stos
repnz
push
pop
addr16
mov
cmp
outsb
sub
xchg
mov
stos
and
or
adc
or
jne
inc
ficomps
popa
lahf
add
fidivl
xchg
sbb
pop
in
fistpll
mov
ljmp
cmp
cld
push
stos
lret
or
jle
mov
xorb
xor
addr16
dec
in
stos
add
push
xor
mov
ja
clc
imul
orl
inc
sub
pop
iret
adc
or
sub
dec
stos
xchg
push
outsb
or
adc
xchg
xchg
out
mov
iret
stos
fsts
push
imul
arpl
mov
push
cmp
sub
cmc
out
mov
stos
hlt
dec
inc
xor
mov
ret
stos
and
std
dec
push
sbb
mov
mov
adc
mov
lcall
insb
loop
dec
push
xchg
push
movsb
pusha
mov
stos
sbb
or
xchg
mov
pop
or
stos
rorb
iret
mov
jnp
stos
mov
sar
sub
mov
sbb
push
mov
xchg
xchg
bound
fldl
pop
test
xor
pop
nop
sti
mov
bound
mov
cs
fiadds
cmp
add
pop
js
pushl
dec
stos
mov
imul
test
imul
add
es
in
mov
int
daa
push
ja
ret
pop
fwait
lock
pop
fldpi
adc
stc
scas
ss
jmp
clc
pusha
lods
cmp
stos
pop
shlb
insb
js
add
cmpl
pop
mov
mov
jp
das
jmp
xor
cwtl
pop
and
in
or
dec
adc
stos
cs
mov
xchg
sbb
pop
stos
scas
movsb
gs
fdivr
ss
movsb
aaa
mov
inc
movsl
cmc
adc
mov
push
mov
lds
fucomip
out
dec
mov
inc
leave
fs
sbb
out
xchg
out
mov
pusha
push
stos
jb
lock
and
lds
fldenv
xor
pop
fwait
andl
cs
daa
jmp
repnz
and
in
pop
iret
out
int
jp
stos
adc
and
sub
and
fwait
out
test
xchg
mov
sbb
call
pop
stos
sahf
cmp
ds
inc
lahf
xor
outsl
mov
push
mov
and
movsl
xchg
stos
outsb
jmp
or
xor
push
mov
dec
pop
icebp
adc
pop
ds
out
pop
cmp
scas
stos
add
mov
bound
pop
adc
ret
popf
pop
cmpsl
xor
cmpsb
mov
push
mov
stos
cmp
nop
adc
push
sarb
movsl
push
xor
das
into
stos
arpl
lods
dec
stos
or
int3
cmc
leave
test
ror
shrl
dec
sub
pop
aad
repnz
ds
stc
in
gs
fstpt
stos
adc
shll
pop
lods
xchg
push
stos
or
xchg
call
sub
loope
daa
adc
mov
movsl
stos
jo
push
fstpl
lahf
stc
cmpsl
stos
dec
sbb
jg
stos
sbb
xlat
cld
and
dec
or
nop
stos
xchg
inc
addr16
cwtl
jae
sbb
adc
clc
cmp
cld
sub
mov
and
stos
leave
jecxz
ljmp
out
mov
scas
stos
insb
push
mov
stos
int
adcl
mov
push
dec
mov
fdivrl
fisttpll
fmul
add
pusha
add
mov
mov
imulb
sbb
es
xor
mov
bts
and
adc
imul
xor
es
cmp
outsl
cmp
push
gs
mov
sub
out
idivb
pushf
mov
mov
ficoml
push
jge
test
pop
xor
fisubrl
mov
push
xor
into
std
adc
and
push
jmp
arpl
mov
into
stos
orl
push
gs
iret
cld
stos
adc
call
out
icebp
es
xchg
jl
jno
ja
adc
push
cli
or
mov
jbe
pop
dec
call
adc
insb
jns
mov
jle
fs
ds
fwait
mov
iret
gs
cltd
lcall
aad
fldcw
mov
xchg
dec
fisubrl
mov
mov
loopne
mov
loop
jbe
rorb
xchg
adcl
push
dec
das
shl
pop
cltd
or
push
into
shlb
pop
add
fwait
inc
lret
add
mov
sbb
push
mov
loop
inc
test
jge
inc
icebp
rclb
adc
stos
int3
mov
jno
inc
subb
xchg
testl
jns
fsubs
divl
nop
psubd
stos
adc
push
inc
mov
imull
pop
jl
rcrl
dec
ljmp
fsubrs
add
lock
repz
loop
mov
leave
push
js
and
stos
add
sbb
mov
std
inc
pop
mov
jne
xor
stos
lahf
ds
pop
sti
rcl
adc
xchg
lret
lods
mov
xchg
and
cltd
push
mov
mov
push
scas
pop
pop
mov
hlt
push
and
ret
into
mov
mov
stos
std
popf
mov
adc
orb
stc
addr16
lock
mov
pop
inc
jle
dec
mov
popa
in
les
push
mov
push
mov
xchg
cmpsl
push
cmp
daa
lret
out
cwtl
sub
clc
sbb
mov
mov
iret
outsb
cmpsl
xor
dec
inc
loopew
mov
inc
dec
mov
xlat
push
jmp
and
push
stos
pop
jmp
test
stos
xor
aaa
pop
scas
xchg
aad
hlt
cmpsl
out
push
enter
movsb
add
xchg
dec
fstpl
ret
fdivl
stos
lock
pushf
leave
fildl
orb
ljmp
mov
sbb
mov
push
xor
imul
addr16
mov
ds
jge
std
ret
mov
rcr
cs
sahf
mov
cli
in
push
lcall
stos
xchg
inc
inc
sbb
aas
stc
pushf
ljmp
pop
addb
imul
int3
inc
and
cmpsl
lahf
mov
fwait
push
mov
mov
or
ja
fisttpl
jo
in
push
test
cli
testl
lahf
gs
xchg
or
into
add
cld
sbb
and
fs
add
in
pop
jmp
rcrb
mov
and
jno
data16
pop
decl
stos
negb
cmpsb
sbbl
lods
or
notl
mov
xor
dec
mov
jb
mov
mov
or
clc
ja
dec
ret
cmpb
add
push
and
mov
sbb
xor
and
xchg
shrb
neg
pop
sbb
lds
xchg
pop
fdivs
stos
mov
mov
add
dec
lock
stos
xor
shlb
push
btc
sub
sti
divl
push
pop
les
stos
add
mov
clc
mov
sub
fistpl
and
inc
leave
stos
sbb
xchg
les
cmp
lahf
inc
xchg
add
xor
dec
push
in
mov
mov
jecxz
ljmp
cmc
mov
dec
pushf
fisubrl
inc
mov
xchg
popa
stos
cmpsb
mov
loope
lods
stos
add
call
push
push
mov
int
hlt
push
cld
push
aas
mov
cwtl
jne
mov
xlat
lret
sti
cmpsl
push
push
fimull
mov
stos
movsl
lock
mov
add
enter
adc
jae
ret
xchg
sbb
mov
dec
out
iret
nop
mov
mov
mov
les
sub
stos
xchg
mov
sbb
es
lds
push
ret
push
xchg
push
loop
push
mov
lods
inc
out
stos
jns
mov
adc
fcomps
sub
xchg
stos
aaa
data16
shr
out
mov
stos
pop
aas
dec
pop
mov
xor
pop
jp
pop
into
fdivrs
dec
and
int
fwait
add
imul
inc
rclb
fcoml
ds
jo
jecxz
xchg
in
je
fildl
test
mov
cmp
jbe
sub
and
add
ret
mov
out
ljmp
xchg
jo
rep
iret
dec
sti
xchg
aad
add
or
in
jne
xor
int
call
stos
and
lea
and
cmpb
outsl
xor
scas
push
mov
fucom
enter
pop
and
dec
add
dec
addr16
fcompl
xchg
and
cmpsl
not
xchg
xor
sbb
push
test
jo
push
pop
mov
clc
lret
in
jno
out
adc
call
movsb
pop
jmp
loopne
adc
xorl
js
and
stos
andb
outsl
jmp
das
mov
push
insl
dec
xchg
pop
int
fidivs
fwait
jmp
notl
xchg
fs
pop
add
cmp
add
frstor
stos
pop
dec
loopne
mov
lahf
or
push
in
jb
pop
mov
loope
stos
and
popa
aas
daa
mov
inc
mov
xor
push
int
gs
inc
iret
fstps
outsl
nop
jne
push
sub
insb
xlat
popf
pop
in
push
lret
arpl
jnp
jmp
stos
push
shr
arpl
push
stc
stos
out
data16
sub
pop
jbe
inc
arpl
daa
xchg
iret
mov
jl
adc
add
xchg
push
stos
sbbb
cld
mov
add
inc
addr16
dec
into
xchg
push
jbe
cmpsb
cmp
sbb
ja
lcall
inc
pop
mov
sbb
lds
in
jno
mov
leave
imul
mov
or
sub
push
add
push
push
jecxz
xor
data16
mov
adc
scas
daa
ljmp
aaa
inc
ficomps
sarb
cmp
lcall
pop
mov
test
into
add
mov
lea
mov
shrl
out
ret
mov
repz
mov
inc
in
decb
mov
mov
aas
stos
xchg
jg
loope
test
insl
mov
dec
mov
fidivrl
pop
mov
ss
fsubr
jg
cmc
addl
dec
xlat
push
in
and
mov
add
rorl
add
decb
pop
pop
mov
cwtl
jns
jmp
insb
rorl
dec
mov
cmp
xor
adc
jae
pusha
ret
sub
xlat
push
pop
mov
xchg
dec
arpl
leave
stos
ljmp
in
jecxz
pusha
mov
dec
xchg
outsl
gs
and
arpl
adc
or
push
stos
pop
cmc
inc
jl
cmp
mov
ftst
sub
stos
dec
sub
test
pop
fsubrs
jbe
sub
push
icebp
imul
mov
aas
cmp
out
frstor
or
and
mov
xchg
dec
and
cmc
outsl
loop
push
stos
cmpsb
pop
orb
add
sub
test
or
cmp
sbb
stos
aad
in
sub
movsb
mov
shr
rorl
xchg
cltd
ja
stos
out
out
cmp
lds
or
mov
icebp
adc
imul
subl
jmp
hlt
cs
int
iret
xchg
mov
jmp
adc
adc
xor
cmc
and
jb
insl
ret
pop
imul
int3
imul
stos
xor
mov
mov
aam
xchg
fstp
jge
cmp
stos
mov
mov
in
enter
mov
xchg
inc
dec
stos
dec
jp
add
outsl
add
push
popa
xchg
add
lret
pop
push
push
stos
addb
fwait
bound
and
pop
stos
clc
into
popf
push
or
cmp
mov
sub
loopne
jecxz
push
xchg
movsl
or
mov
out
push
mov
jns
in
cltd
subl
mov
stos
or
jg
fidivrs
xor
push
inc
cmpsb
push
stos
xchg
adc
and
les
pop
inc
mov
arpl
xchg
mov
cmp
stos
int3
mov
dec
stos
lods
inc
aas
and
mov
ret
lcall
jb
xchg
test
and
mov
hlt
mov
adc
inc
stos
sahf
jp
xor
and
imul
adc
dec
ja
lock
jno
sti
and
hlt
incl
lds
jo
nop
pop
stos
daa
addr16
stos
ja
xor
clc
stos
jbe
xlat
inc
cmp
xchg
call
cmpsl
lret
in
mov
fwait
pop
stos
push
mov
ss
ljmp
xchg
and
gs
mov
iret
leave
mov
push
pop
in
pop
mov
lods
mov
mov
sub
mov
aaa
jg
cmpsb
inc
ja
fs
jae
xchg
pusha
mov
cmpsb
pop
cli
sti
xchg
stos
cltd
lcall
insb
jl
jmp
jne
stos
mov
dec
notb
das
jnp
mov
inc
stos
cltd
inc
and
cmp
stos
push
nop
jb
and
popf
pop
inc
mov
mov
scas
xchg
or
xchg
push
mov
fldlg2
pop
lods
xchg
outsl
add
in
xor
dec
inc
cltd
pop
test
ss
cmp
dec
outsb
add
jnp
mov
test
sub
add
pop
or
pop
mov
pop
cld
push
das
stos
xor
dec
fwait
pusha
mov
stos
xlat
mov
imulb
inc
stos
mov
adc
fidivl
in
mov
cltd
je
mov
push
mov
jb
cmp
mov
push
stos
rol
andl
jo
push
lret
inc
sbb
clc
stos
adc
pop
adc
push
fildll
fmuls
sub
lods
dec
mov
xchg
mov
movsb
out
or
mov
cmp
sbb
stos
push
push
fwait
inc
gs
pop
sub
lods
ret
lea
pop
cmp
ja
sub
pop
push
mov
inc
push
jnp
lock
in
xor
stos
mov
mov
xchg
push
xlat
stos
xor
xchg
push
pop
cmp
call
push
cwtl
cmp
push
xchg
or
insl
stos
int
iret
lock
pop
xchg
jno
leave
outsb
shrl
pop
and
movsl
stos
jno
test
ss
inc
lods
lds
int
sarb
xor
push
mov
data16
mov
fwait
ret
gs
stos
add
mov
xor
mov
stos
pop
push
shll
xchg
es
in
pop
or
stos
jl
scas
sahf
rcll
push
shr
jne
mov
arpl
xchg
jp
scas
xor
sbb
pop
push
mov
in
cmp
sbb
sahf
stos
jle
lods
mov
cmp
mov
add
enter
mov
cmp
int3
inc
inc
dec
push
rol
pushf
cmp
cmp
out
or
das
cmp
sbbb
stos
shlb
push
daa
jb
repnz
sub
mov
frstor
mull
push
xchg
out
xchg
scas
mov
inc
push
sbb
rcrb
ljmp
loop
addr16
add
mov
pusha
sub
in
cmc
pop
icebp
imul
lcall
mov
stos
popa
mov
sbb
femms
stos
insl
cmp
xchg
jmp
lret
and
jb
push
rorl
push
stos
mov
mov
daa
aad
dec
jns
dec
stos
test
pushf
ds
or
xor
fimuls
mov
and
loopne
cltd
cmp
stos
cmp
push
popa
mov
test
cmp
shl
lods
mov
adc
pop
push
mov
sub
jp
outsb
pop
lret
cld
pop
or
jecxz
and
stos
adc
mov
and
repnz
stos
ja
push
popa
pop
lds
xchg
in
jnp
pusha
dec
mov
cltd
stos
dec
xor
jp
mov
nop
add
adc
sbb
loope
mov
iret
push
sub
cwtl
fsubrs
xor
xchg
mov
mov
ljmp
dec
pop
jae
or
fwait
in
repz
cmpsb
vmwrite
mov
fsubl
add
xchg
sub
cmc
repnz
outsl
xchg
jp
in
and
jne
addr16
bound
pop
stos
leave
inc
or
xchg
dec
and
mov
fwait
scas
sub
sub
cld
addl
int3
xchg
lods
lahf
mov
or
jnp
inc
movsb
jae
inc
mov
fs
sbb
stos
roll
nop
leave
test
jecxz
stos
scas
dec
fistps
pop
pop
mov
stos
inc
in
es
xchg
or
stos
and
gs
xchg
leave
xor
pop
lret
xor
rcl
lods
jg
jmp
stos
mov
dec
xorb
stos
mov
xchg
sahf
stos
stc
jecxz
loop
movsb
add
stos
in
mov
fstpl
stos
sbb
lock
or
divl
jns
hlt
imul
or
stos
roll
inc
jne
xor
out
push
or
xchg
sub
lea
out
ret
aad
jg
in
popf
sub
bound
cli
pop
imul
mov
pop
cmp
stos
mov
cmpsb
jge
xorl
inc
push
lahf
or
jno
xchg
scas
lds
call
add
mov
mov
fildll
adc
movb
sbb
sbb
fstpt
push
cmc
pop
mov
sbb
adcb
shrb
cmp
loop
pop
js
push
mov
or
sub
mov
mov
in
adc
pop
mov
pop
scas
adc
test
aad
ja
push
mov
or
ret
pop
xchg
stos
dec
mov
outsl
mov
cmpsb
std
fwait
dec
mov
fists
or
shlb
add
sbb
xchg
int
stos
and
and
stos
mov
testl
pop
ljmp
movsb
mov
mov
pop
mov
jnp
das
mov
es
daa
out
mov
subl
int
int3
jle
fwait
pop
js
push
and
lods
dec
sbbl
or
xchg
inc
btr
std
push
fisubl
cmpsl
test
push
cld
sbb
jle
push
lret
adc
pop
sbb
mov
jp
loop
dec
inc
mov
stos
dec
push
testl
ret
push
movsb
imul
adc
xor
sub
and
pusha
push
jb
fildl
inc
cltd
adc
imul
mov
sahf
inc
gs
cmp
pushl
pop
fisubrs
mov
in
cltd
stos
mov
bound
xchg
stos
ret
rorl
insb
cmp
lret
inc
inc
orl
das
out
jecxz
outsl
dec
in
xor
pop
std
or
arpl
in
sti
insl
mov
aaa
jbe
jns
stos
add
mov
push
mov
cmp
push
add
cmp
test
fucomip
xor
stos
fcomps
cmp
stos
lods
es
sbb
rol
in
xchg
into
or
xchg
xchg
into
inc
arpl
jnp
push
stos
xchg
sbb
fsubs
cli
sub
jp
mov
mov
cmp
mov
cmpsb
stos
jl
cmc
xor
xor
sbb
or
push
jmp
imul
stos
lods
sahf
mov
mov
mov
sub
arpl
add
sub
dec
adc
push
add
mov
outsl
mov
dec
inc
xchg
dec
add
push
mov
andb
pop
ja
shlb
jle
je
and
xchg
aam
cmp
add
inc
rcr
rcrb
es
pop
mov
mov
repnz
sbb
fsubrs
mov
xchg
ds
xchg
cmp
dec
subl
jge
xchg
or
sbb
es
cwtl
add
push
mov
orb
stos
sbb
cltd
les
adc
and
lods
mov
adcb
stc
stos
xchg
xor
daa
and
mov
cmp
iretw
dec
imul
mov
cmp
in
jg
mov
lret
sub
cld
daa
sub
jnp
sub
enter
dec
cli
mov
std
jmp
xor
jo
xchg
addr16
bound
or
mov
stos
in
and
subl
xchg
or
push
in
xor
fucomip
std
cmp
fcoml
orb
add
stc
cmp
lret
push
stos
mov
add
stos
mov
sbb
nop
add
jge
push
xchg
sarb
das
push
cmp
and
addr16
pause
and
ljmp
mov
stos
mov
cmpsb
mov
shr
imul
lahf
and
sbb
leave
popl
das
call
nop
sbb
dec
sbb
mov
mov
rcll
cmp
cmpb
in
sbb
jmp
jecxz
loope
mov
stos
sbb
out
outsl
shrb
mov
sub
in
lods
data16
xor
mov
xchg
stos
xchg
repnz
jno
in
cmpl
cmp
sub
lahf
shl
stos
test
and
push
adc
cmpsb
inc
out
fwait
movsb
mov
inc
lret
xor
xor
cmp
xchg
lock
scas
mov
jl
adc
lds
mov
ret
inc
push
repz
mov
jae
mov
mov
mov
jae
ret
stos
pop
aaa
mov
sahf
stos
push
add
mov
mov
xchg
inc
rcrl
push
dec
out
mov
xor
xlat
lea
movsl
outsb
jno
stos
repz
xor
and
pop
lahf
stos
adc
or
and
test
cld
pusha
inc
call
mov
ja
xchg
pop
lods
stos
inc
in
jecxz
add
inc
stos
and
and
mov
mov
jmp
bound
sbb
lods
mov
xor
mov
or
jno
adc
nop
jnp
cmp
dec
in
out
adcl
stos
lret
jns
pop
xor
aaa
xchg
sub
sti
lret
sarb
lahf
adc
adcl
push
into
cmpsb
icebp
mov
mov
loope
inc
test
mov
ds
out
insb
stos
jmp
int
jmp
pushf
pop
test
add
dec
sub
sub
or
lock
stos
xchg
cltd
mov
jbe
mov
mov
js
xchg
je
push
mov
out
rcll
cwtl
jo
stos
inc
mov
lock
lods
movsl
imul
iret
mov
dec
clc
or
cmpsb
dec
mov
nop
test
adc
jmp
xlat
push
fcmove
mov
stos
push
out
push
push
cmp
inc
dec
xor
rcrl
add
stos
push
jno
dec
mov
mov
addr16
cmp
imul
iret
adc
sbb
add
scas
pop
shl
mov
mov
cld
aad
outsb
cld
dec
ja
aam
insb
jge
outsl
cmpsl
les
cmp
pop
add
or
mov
mov
push
or
stos
or
mov
and
adc
shrb
pop
mov
add
insl
xlat
stos
jg
shlb
stos
dec
inc
cmp
popf
lods
jno
inc
mov
stos
mov
iret
insl
cmp
xor
or
test
vpcomd
or
pop
movsb
in
inc
out
and
movl
cwtl
pusha
addl
stos
mov
xchg
cltd
push
divl
lcall
sbb
jmp
arpl
jo
jno
stos
loopne
jb
dec
jnp
outsb
stos
sbb
daa
ljmp
jne
movsb
dec
daa
xor
xlat
mov
mov
sbb
aas
add
jo
sahf
jnp
lea
jmp
arpl
scas
int
cwtl
sub
sahf
ja
sbb
xchg
dec
movsb
fistpl
stos
lret
sbb
cmc
stos
mov
ret
or
lcall
clc
fwait
int
lods
push
pop
stos
inc
adc
xor
mov
out
stos
lcall
push
ret
xor
enter
cld
pop
shrl
lds
ljmp
ret
imul
lret
cmp
data16
into
ja
mov
les
pop
push
xchg
lods
imul
xor
mov
adc
int
outsl
sub
lahf
inc
shrl
ret
fbstp
fsubrs
cli
mov
stos
lahf
push
stc
cmp
stos
jno
fstps
daa
cwtl
movsl
imul
fnsave
and
popa
movsb
movsl
stos
inc
and
xchg
in
fstps
push
mov
out
xor
cwtl
stos
iret
bound
popf
xchg
xlat
and
out
inc
stc
mov
daa
daa
push
outsb
cmp
dec
cld
fwait
ja
int
mov
pop
add
lods
jno
jne
push
add
daa
mov
shrb
sub
repnz
sub
and
stos
addr16
inc
push
add
jno
push
mov
leave
lea
gs
xor
sbb
lcall
sub
jns
dec
js
outsl
mov
stos
mov
iret
sbb
xchg
aad
jmp
outsb
dec
cmp
test
xor
loopne
mov
xchg
movl
jg
xchg
or
xchg
fisubrs
int3
inc
jmp
push
lods
cmc
xor
adc
lcall
cmp
pop
xchg
mov
jle
int
leavew
xchg
push
lret
fs
push
stos
pop
mov
cmpl
in
mov
mov
mov
shll
movsl
stos
imul
adc
xlat
jbe
in
repz
and
jns
xchg
stos
les
int
stos
xor
sub
add
gs
out
subl
stc
mov
iret
sbb
sbb
in
fwait
les
subb
mov
cld
sub
jge
inc
jno
mov
stos
xchg
int3
jmp
mov
in
ja
nop
stos
es
pop
std
stos
fsubr
xchg
fisttpll
xor
stos
or
loope
push
stos
lock
rcrb
lea
sub
mov
stos
jns
push
jbe
push
and
aaa
aas
lods
test
in
pop
rol
daa
adc
stos
cwtl
ret
pop
push
mov
sbb
sbb
push
fdivrs
dec
mov
xchg
out
fimuls
sahf
push
lahf
inc
add
sub
cwtl
subl
stos
loop
inc
adc
xchg
fwait
xchg
ds
mov
cltd
push
adc
mov
xchg
xchg
pop
push
test
mov
jge
lea
inc
pop
jl
mov
popa
mov
fs
mov
hlt
das
mov
stos
popf
sbb
in
sbb
pop
movsb
stos
outsl
xchg
adc
inc
mov
out
loopne
cltd
dec
out
sahf
mov
or
lret
fwait
rorl
mov
stos
jo
js
xchg
ds
addr16
lock
add
dec
mov
jecxz
adc
or
repnz
cmp
dec
mov
mov
jmp
test
lods
or
imul
mov
mov
in
ljmp
scas
stos
insb
sarb
and
clc
add
mulb
out
xchg
jecxz
or
pop
imul
jecxz
es
push
js
inc
movsl
shlb
push
int3
stos
aad
cmc
dec
fwait
cmpsb
dec
aaa
lea
sub
mov
xor
ffree
add
nop
mov
add
sub
in
and
mov
daa
pop
out
dec
sub
test
aas
insb
fcomps
stos
push
sbb
movsb
or
loopne
jmp
stos
test
scas
push
lret
sbb
inc
cltd
stos
sub
push
stos
cmp
mov
out
testb
shlb
dec
mov
push
fldz
mov
mov
adc
add
lret
push
in
mov
cli
stos
pop
add
mov
jmp
dec
js
dec
test
and
stos
loope
add
or
and
loopne
add
push
test
aad
mov
cwtl
inc
gs
fwait
in
and
js
jmp
into
cltd
icebp
fdivrl
stos
pop
sahf
inc
dec
sti
mov
mov
push
or
hlt
lea
inc
test
push
rclb
movsl
leave
jl
xchg
lock
jp
sub
and
push
stos
pop
adc
inc
pop
stos
out
shll
push
mov
cld
call
icebp
popf
in
xchg
call
cli
cmp
mov
leave
movzbl
in
fldl
andb
adc
mov
sbb
out
or
lahf
jae
out
mov
or
dec
fsubs
fadd
into
jo
inc
jmp
pop
enter
int
stos
inc
mov
orl
cltd
fwait
jo
repnz
add
mov
xchg
jl
in
jne
repz
cmc
je
lods
repnz
stos
rcl
cmpsb
jmp
popa
and
arpl
das
dec
mov
insl
pop
stos
push
iret
xor
cmp
loope
pop
jae
push
stos
lcall
dec
stos
ljmp
xchg
stos
sbb
fbstp
es
das
inc
push
lcall
inc
mov
iret
mov
pop
fidivl
pop
inc
nop
xor
push
scas
shlb
xor
es
push
lods
stos
pop
sub
mov
pop
stos
inc
jno
les
hlt
pop
loop
push
sarb
ss
flds
jecxz
jo
notl
addr16
orl
subb
and
inc
stos
inc
pop
sbb
movl
lods
push
xchg
add
insl
fldt
xchg
movsb
imul
jbe
rolb
mov
lds
jne
and
sbb
mov
pop
jo
cmp
inc
push
jmp
sti
push
jmp
arpl
jns
dec
fwait
addr16
lock
leave
xor
adc
popa
mov
movsb
lcall
stos
mov
dec
mov
in
sub
and
cmp
lret
fs
jmp
push
lock
call
lret
dec
scas
into
fsubrs
inc
les
cmp
pop
sahf
mov
mov
adc
stos
xchg
stos
add
ss
mov
add
lock
sub
dec
ds
cmp
das
mov
add
fcmovbe
scas
push
std
push
xor
aam
sub
stos
daa
cmp
mov
stos
imul
fdivs
cmp
fwait
in
ret
jbe
lcall
cs
add
mov
imul
mov
stos
jle
inc
mov
dec
pop
les
andb
int
fstl
push
idiv
add
daa
imul
stos
ficoml
pushf
cltd
testw
cmp
dec
push
mov
add
js
mov
mov
jl
mov
lock
pop
fcoml
jnp
pop
mov
jbe
adc
or
pushf
add
sbb
pop
cmp
stos
inc
sbb
cwtl
dec
sahf
loop
stos
inc
add
rcr
ljmp
jmp
cmpb
or
mov
jmp
adc
lret
stos
testl
inc
scas
adc
add
aam
popf
js
sarb
cwtl
test
fimull
aam
fildl
add
mov
stos
jo
mov
xchg
dec
dec
stos
imull
leave
adc
stos
ret
mov
cmp
push
in
cmp
sub
das
adc
lcall
shrl
or
arpl
shrl
test
stos
lds
js
hlt
cmpb
ja
outsb
in
lods
xor
xor
pop
clc
insb
call
arpl
adc
movsb
pop
or
and
jecxz
cmpsb
scas
outsb
je
fwait
sub
mov
adc
dec
loope
push
repnz
andl
insl
mov
je
stos
fldt
movsl
and
jae
in
xchg
push
jb
inc
stos
inc
std
sub
out
pop
loop
arpl
inc
mov
outsl
and
jno
mov
fidivrs
pop
daa
adc
inc
div
push
in
xchg
in
mov
push
bound
xor
inc
scas
push
mov
stos
add
mov
imul
stos
std
xchg
jl
mov
out
imul
mov
rcll
leave
mov
jmp
lock
call
cltd
ret
push
aad
rcr
scas
lods
pop
dec
jge
dec
in
lods
inc
lds
addr16
xlat
stc
rorl
clc
mov
or
jge
adc
sbb
out
in
xchg
aam
stos
dec
stos
sbb
daa
test
or
xchg
adc
dec
stos
popf
mov
test
mov
mov
lret
enter
stos
push
ficoms
mov
mov
jmp
mov
popa
or
lcall
jecxz
lea
in
mov
fbstp
out
and
jge
pusha
stos
sub
mov
xor
sahf
ss
addl
std
adc
or
icebp
les
stos
pop
fists
pop
pop
out
pusha
test
xlat
ret
mov
jmp
movsl
xor
insb
ljmp
repz
je
stos
jnp
lods
pop
in
jbe
mov
inc
paddb
jb
push
out
ja
in
add
push
jo
pop
adc
xchg
cmp
xor
shlb
and
sbb
into
cmp
mov
stos
in
scas
cltd
sub
xor
jbe
jg
mov
out
loop
js
pop
pusha
or
int
stos
adc
inc
push
gs
or
push
andb
xchg
fwait
repz
stos
mov
insb
pop
test
loope
stos
stos
cli
orl
cmpsl
adc
pop
loopne
adc
cmp
add
loope
push
lds
sbb
repz
jo
mov
imul
ljmp
stos
icebp
adc
xor
mov
pop
xchg
outsl
stos
out
dec
xlat
lods
test
jmp
dec
jnp
stos
sti
jl
icebp
cmpsl
cli
xchg
xchg
jbe
xor
or
aam
mov
push
je
stos
inc
daa
pop
and
rclb
lahf
mov
int
mov
in
sub
daa
sbb
push
pop
cmp
xor
dec
adc
mov
xchg
flds
lods
mov
inc
mov
je
outsl
daa
pop
stos
mov
inc
hlt
cwtl
stos
dec
fsubrl
or
jno
imul
test
add
add
stc
jo
mov
stos
cli
or
stos
subb
push
stos
shll
mov
push
es
cmp
lret
mov
stos
in
mov
stos
mov
int
push
ret
stos
aaa
jbe
mov
lods
jg
shlb
imul
cld
sbb
mov
cmp
xchg
stos
adc
push
pusha
sahf
scas
pop
lock
mov
pop
sub
cmpsl
push
icebp
xchg
lods
dec
xchg
xchg
jle
sbb
out
cs
stos
test
insl
add
jmp
popa
dec
stc
inc
lret
int3
xchg
xor
sbb
insb
xchg
repz
in
stos
mov
idivl
test
mov
dec
push
xchg
loopne
cmp
cmpsb
addr16
mov
xor
jmp
stos
inc
mov
daa
lock
mov
add
stos
test
mov
pop
adc
mov
fldenv
stos
shl
or
pop
aas
dec
push
stos
mov
or
xor
aaa
push
mov
lcall
sti
mov
sub
inc
inc
stos
adc
mov
or
stos
aad
jmp
sbb
dec
push
loope
add
jle
push
sub
pop
fisubl
xchg
stos
jl
cmp
outsl
mov
xchg
ret
in
ljmp
pop
mov
dec
xchg
xorb
gs
mov
lea
loop
movsl
out
dec
adc
pop
push
jno
movsb
rcl
movsb
fmull
scas
jns
stos
inc
addr16
in
xor
inc
inc
movb
inc
stos
pop
push
cli
mov
imul
fwait
stos
mov
mov
mov
rcll
lcall
mov
movsl
movsb
jl
push
mov
and
or
stos
sti
insb
into
xor
stos
xchg
ljmp
das
stos
pop
or
rcl
addb
adc
mov
mov
imul
popf
or
icebp
push
rcll
dec
pop
stos
cmp
fs
jmp
arpl
inc
inc
jb
mov
push
and
scas
stos
push
mov
mov
test
stos
pop
cmp
std
jo
in
cmp
xor
or
dec
mov
jmp
adc
nop
movsl
xchg
stos
cmc
dec
jno
sbb
xor
mov
mov
sahf
out
stos
fdivs
stos
imul
pop
xor
cs
shrl
hlt
ret
into
or
push
stos
and
sub
ja,pn
xor
dec
inc
adc
sbb
adc
cwtl
push
movzbl
add
dec
jmp
int3
fldcw
add
push
mov
sahf
stos
repnz
inc
jle
loopne
fldcw
push
movsl
jbe
testb
cmp
fwait
popf
sarb
nop
adc
mov
lods
lea
rolb
push
and
mov
cmc
pop
stos
push
sti
aam
push
fwait
and
xchg
push
jnp
xor
lret
out
xchg
aad
or
aaa
jmp
call
call
xchg
add
ror
cmp
addr16
mov
pop
inc
xchg
inc
ret
add
push
mov
mov
hlt
ljmp
icebp
lret
mov
stos
push
int
in
popa
jecxz
imul
pushf
orl
clc
mov
stos
ja
aad
stos
pop
ret
andb
add
lret
fwait
lret
dec
or
arpl
pusha
push
xor
movsb
sbb
xchg
stos
push
jecxz
jo
fmuls
mov
sub
add
jne
mov
push
lea
push
enter
cmp
dec
stos
mov
sub
adc
mulb
mov
push
sub
ljmp
stos
lcall
inc
stos
jo
and
les
je
loop
stos
out
repz
mov
pop
into
stos
inc
dec
ret
popa
subl
sub
iret
push
or
xchg
out
lods
ret
fnstenv
xor
jmp
test
ss
mov
add
or
xchg
dec
stos
je
gs
mov
pop
cld
cmpsl
dec
testb
mov
stos
ljmp
stos
stos
pop
mov
or
inc
in
lcall
fldt
stc
ret
jmp
push
and
scas
repnz
daa
pop
and
rorb
cmp
imul
stos
mov
push
ss
inc
jbe
and
pop
push
stos
aam
add
stc
js
xchg
jl
fdivs
or
push
lea
cld
in
mov
jmp
in
stc
mov
lret
cltd
call
decb
cmp
push
repz
fwait
mov
mov
dec
cwtl
dec
cmp
int
cmpsb
and
sbbb
and
iret
ficompl
addr16
shrl
xchg
sbb
sub
jae
xor
stos
cmpsl
pop
xor
push
sti
and
jnp
fsubrl
sub
jmp
jmp
addr16
cs
test
cmc
cmp
stos
push
popa
mov
add
mov
imul
sbb
jne
popa
js
mov
insl
add
mov
inc
stos
and
fs
iret
jae
sub
stos
fcmovbe
jno
add
stos
add
cltd
stos
cmpsl
mov
into
outsl
adc
or
sbb
xchg
dec
mov
xchg
mov
mov
xchg
cld
leave
mov
addl
mov
test
fldcw
stos
pop
cmp
sub
adc
addr16
popf
rcrl
pop
xchg
cld
ljmp
push
lahf
jns
push
lcall
ja
aad
mov
dec
mov
jle
push
xor
sub
adc
sarb
orl
lds
dec
mov
adc
cmp
cmpsl
jmp
push
ljmp
sub
out
stos
popa
cmp
add
imul
jno
imul
mov
movsb
cli
les
stos
stos
pop
push
mov
arpl
and
shrl
repnz
sub
xor
movsl
cltd
jle
ret
mov
dec
popa
jmp
jo
mov
xchg
sub
mov
push
xor
stos
sbb
jb
loop
adc
or
sub
mov
stos
in
nop
outsb
fadds
mov
cmpsl
adc
mov
scas
js
out
in
stos
dec
xlat
push
xchg
mov
inc
fsubs
or
mov
push
dec
xchg
push
stos
into
cmpl
mov
sti
jmp
loopne
ja
xchg
mov
adc
adc
outsl
les
or
lahf
jp
nop
das
stos
mov
aam
xchg
gs
xchg
inc
stos
scas
movsb
pop
pop
xchg
sbb
or
xchg
cld
icebp
mov
and
movsl
int
cs
insl
pop
test
arpl
scas
mov
push
mov
mov
mov
pop
insb
mov
or
sub
jae
dec
pop
daa
or
cs
jne
jle
stos
dec
loop
mov
mov
inc
gs
stos
fisubl
push
scas
and
scas
xchg
sar
dec
popf
imul
dec
mov
jmp
pop
pop
pop
fwait
jbe
stos
inc
daa
adcl
add
or
mov
pop
jae
andps
movsl
dec
stos
addr16
cmp
rorl
popf
sbb
push
push
mov
stos
dec
xchg
leave
data16
andb
pop
jo
les
mov
cmp
orl
adc
popa
xor
add
mov
fs
pop
jne
xor
jno
cs
loope
into
outsb
stos
fstps
das
cwtl
mov
stos
lds
mov
fs
insb
pushf
mov
pushf
pop
sahf
imul
jmp
lret
loope
cmp
mov
sub
nop
addr16
xchg
stos
and
fdivp
sbb
mov
ja
inc
mov
sbb
scas
add
shrl
mov
btr
lret
inc
int3
pop
clc
aad
popaw
or
aad
xchg
outsb
mov
mov
pop
or
rorb
clc
sub
jmp
push
or
ret
pop
stos
test
and
push
xorb
mov
movsl
fsubrs
adc
jnp
or
out
fadds
mov
mov
sub
jle
xchg
imul
and
int
xchg
jl
xchg
dec
lret
stos
mov
lds
mov
clc
push
dec
cwtl
and
or
fucomip
out
pop
fwait
push
jo
shl
outsb
add
dec
stos
pop
fisubrl
xor
aam
and
adc
fisttpl
sub
pop
ud1
xchg
das
mov
push
add
and
sub
bound
xchg
ljmp
adc
cltd
pop
mov
iret
lods
stos
inc
and
fisttpl
sahf
enter
sub
xchg
in
stc
cmpsl
jo
int3
addb
push
mov
addr16
and
nop
ret
or
movsl
aaa
cmp
daa
mov
and
pop
in
fbstp
adc
xchg
stos
aaa
scas
repnz
sarb
mov
movsl
call
sub
jmp
sbb
stos
lods
aas
push
xor
lds
adc
les
pop
xor
lahf
rorl
sub
push
out
or
mov
mov
mov
xchg
push
xchg
xor
stos
pop
add
cmc
cs
aam
xchg
add
stos
inc
shlb
pop
jge
push
push
sub
out
mov
mov
call
add
jmp
fmul
fisttpll
stc
nop
lahf
mov
stos
mov
cltd
jp
daa
jle
push
push
mov
push
and
pop
orb
jmp
xchg
xchg
xor
xchg
cmp
pushf
mov
xchg
stos
lds
push
mov
inc
inc
cltd
xchg
jb
stos
inc
jae
movl
outsb
sub
mov
icebp
adc
addr16
inc
add
sbbl
iret
outsl
fwait
popa
or
mov
sarl
daa
stos
into
and
xor
cmc
stos
mov
push
jne
scas
ds
inc
sbb
xlat
and
aam
mov
push
pop
stos
int3
sub
insl
popf
sbb
dec
pop
popa
mull
lods
outsb
stos
gs
std
jae
imul
imull
jle
inc
dec
dec
mov
xor
lahf
pop
sbb
mov
lret
adc
xchg
pop
push
add
arpl
xchg
dec
add
mov
mov
jb
dec
push
stos
test
xchg
scas
cmp
shlb
pushf
lret
mov
mov
mov
movsb
stos
arpl
stos
loopne
mov
jecxz
dec
stos
cmp
inc
out
mov
dec
lea
jle
fwait
mov
add
pop
icebp
imul
stos
mov
lock
iret
mov
mov
fwait
notb
adc
mov
or
stos
and
mov
das
stos
cmp
repnz
inc
jp
sbb
xchg
insl
jmp
sub
leave
cmpsb
mov
lea
mov
cmp
stos
mov
sbb
mov
mov
stos
fs
lret
adc
or
xchg
sub
xchg
cmpsl
add
fs
data16
add
clc
sbb
lock
mov
sbb
dec
fidivl
rol
sbb
jl
sub
test
orl
mov
xchg
pop
push
aad
dec
js
sbb
and
ja
xor
les
inc
aam
push
stos
mov
jo
stos
das
jns
in
cmc
insl
cli
xchg
sbb
stos
inc
jge
mov
enter
mov
mov
imul
stos
mov
mov
xchg
imul
inc
mov
xorb
ret
stos
adc
push
loop
cmc
int
mov
lods
sbb
jb
les
xchg
mov
daa
mov
pop
inc
lods
push
mov
add
xor
mulb
pop
mov
jmp
cmp
loope
stos
sti
dec
jmp
cmp
dec
cli
test
fmul
sbb
pop
movsb
popf
mov
mov
shlb
imull
rclb
aaa
stc
stos
inc
je
dec
int3
mov
push
sub
add
lds
lods
inc
nop
stos
xchg
orb
jns
dec
imul
test
xor
es
out
stos
xor
sbb
stos
inc
cltd
pushf
sub
popa
insl
aas
psubw
jge
push
aaa
clc
shlb
stos
dec
push
push
sub
sahf
ljmp
jl
pop
xchg
icebp
mov
mov
insl
push
dec
in
lret
sbbb
call
cld
xor
int
sub
enter
add
mov
aam
stos
cmp
push
stos
sbb
dec
push
ror
mov
shll
std
pusha
out
fnsave
movsb
stos
pop
in
aas
xchg
xchg
cmp
mov
in
lea
or
mov
stos
stos
cmpsl
lret
fmulp
lods
dec
dec
inc
imul
stc
and
sbb
cmp
add
imul
push
mov
rorb
mov
dec
fistl
subl
lret
dec
fmull
and
addr16
cltd
mov
xor
orb
test
inc
sti
push
scas
imul
fildl
cmc
mov
mov
stos
test
pop
sbb
bound
and
stos
outsb
mov
js
jmp
or
push
repnz
push
inc
out
xchg
sub
adc
and
jmp
and
stos
jbe
push
in
sbb
in
stos
push
fildl
ljmp
lret
mov
dec
aaa
mov
cmp
xchg
xor
mov
ret
ds
lret
jg
jnp
dec
xchg
in
jnp
stos
stos
scas
lea
pop
outsb
and
mov
mov
addr16
xor
aad
ret
out
daa
sti
cmp
push
stos
addr16
leave
stos
or
sub
mov
mov
les
inc
adc
loop
push
outsb
shll
fidivs
stos
sti
push
jns
out
dec
stos
dec
aaa
pop
push
xchg
ret
aam
stos
stos
add
cld
insl
imul
and
jp
mov
das
stos
mov
cmp
ljmp
lds
fstpt
and
adc
in
mov
pop
jno
imul
cmpsl
push
ja
add
mov
dec
scas
jnp
or
imull
in
cmp
mov
mov
stos
dec
jge
enter
xor
outsl
addr16
and
je
push
fldt
or
aam
shr
ljmp
xchg
mov
xlat
stos
cmp
leave
add
lret
add
loopne
sbb
dec
mov
stos
adc
fwait
add
push
lock
out
jp
lret
stos
mov
xchg
and
and
jmp
push
cltd
sbb
aam
aas
xchg
and
imul
cmpsl
mov
ds
cmpsl
sbb
xlat
and
aas
in
and
aam
clc
lahf
cli
dec
adc
pop
pop
xchg
insl
jp
test
stos
addr16
push
and
stos
mov
lds
mov
and
mov
add
push
cmpsb
jo
lahf
push
xchg
jge
dec
stos
pushf
mov
lret
shrl
pop
add
xchg
inc
mov
aam
mov
stos
and
sbb
sub
xor
stos
mov
xlat
mov
stos
push
jecxz
sub
cmpsl
push
shl
and
xchg
movsb
lea
lock
popa
adc
mov
enter
mov
sbb
dec
dec
lock
jo
addr16
out
xchg
shl
stos
sub
mov
add
aas
out
push
pop
std
arpl
sahf
push
fdivl
stos
mov
ds
pop
stos
xor
jmp
mov
jg
lahf
xor
daa
hlt
outsb
sub
aas
push
stos
in
sbbl
cli
jo
leave
cmp
mov
lods
or
push
mov
fldl
or
rcrb
mov
or
dec
jge
stos
cmpsb
sub
sar
push
stos
enter
push
jmp
sub
scas
cmp
push
add
in
sti
jmp
sub
mov
fstl
sub
cmpl
add
pop
cli
cltd
lahf
mov
shrl
stc
call
sub
stos
adc
push
pop
mov
je
jb
adc
mov
stos
ret
push
and
dec
and
dec
xlat
cmp
add
bound
arpl
mov
add
push
stos
adc
fimull
popf
popa
mov
stc
adc
aaa
stos
xor
in
popa
stos
add
jbe
lret
data16
push
in
mov
push
ficompl
add
stos
lock
lret
xor
sub
ja
xchg
pop
divb
das
rcl
xchg
inc
push
dec
sbb
xor
into
push
mov
push
sub
fcmovne
lods
lods
repz
aad
iret
push
sub
push
sub
ret
stos
cmpsb
pop
dec
clc
sbb
arpl
stos
int3
movsb
mov
and
loope
addl
xchg
stos
cmpl
adc
fcompl
cltd
sub
cmp
mov
push
mov
cmpsl
inc
inc
stos
xchg
or
mov
imul
fiadds
mov
stos
xchg
daa
push
xor
ss
jbe
lods
jmp
dec
cmp
loop
fsubrl
pop
sarl
ds
sub
sub
jecxz
mov
sti
fmul
xrelease
frstor
xchg
nop
xor
cmp
scas
arpl
iret
pop
in
dec
add
and
lea
or
jno
stc
cli
sub
stos
enter
inc
dec
incb
in
inc
push
sbb
lret
push
sub
stos
imul
mov
sbb
call
sub
jo
stos
outsl
aad
adc
add
test
sbb
enter
or
int3
and
push
sub
loop
mov
cmp
dec
adc
and
xchg
push
xchg
stos
sub
mov
insb
andb
shll
pop
cmp
stos
call
mov
aas
ljmp
sahf
icebp
in
cmc
fdivr
and
insb
int
hlt
fstps
xor
stos
or
xchg
scas
and
addr16
xchg
imul
fwait
mov
fidivs
out
stos
jbe
or
inc
test
es
sub
in
xor
aad
mov
stos
add
jns
push
stos
xchg
pop
jmp
into
leave
push
or
and
lods
mov
nop
add
sub
mov
bound
mov
pop
jecxz
stos
jae
add
jge
dec
scas
stos
test
mov
jnp
stos
sub
lock
xor
push
stos
adc
clc
and
mov
stos
dec
test
or
gs
inc
mov
ss
inc
mov
xor
and
mov
outsl
pop
cwtl
popa
push
std
push
mov
aas
out
jmp
xor
mov
mov
add
mov
jmp
push
sub
pop
mov
loop
ja
stos
ds
pop
push
shlb
orl
dec
lods
lret
jns
pop
jne
push
mov
pop
ljmp
les
push
setno
mov
mov
adc
in
fnstcw
cmp
jmp
add
pop
push
xchg
rcll
jnp
fsubrl
ljmp
pop
jg
stos
pop
inc
repnz
sbb
stos
xlat
and
sarb
stos
out
aas
and
scas
divb
imul
pop
sub
stos
shrb
cmp
fs
mov
stos
push
mov
lods
xchg
sbb
int
imul
mov
jbe
and
and
add
stos
mov
in
and
xchg
mov
pop
lock
inc
pop
gs
inc
stos
jmp
scas
insl
jb
jmp
fldl
loopne
add
jmp
jo
jecxz
jp
mov
sbb
js
jnp
jno
cli
lret
movsb
and
sub
mov
sbb
stos
xchg
mov
sub
fwait
movsb
jg
push
mov
pop
dec
out
cmpsl
dec
sub
stos
mov
mov
lret
push
inc
stos
repnz
jae
mov
or
push
inc
jnp
lret
clc
test
stos
push
fchs
dec
add
js
push
mov
push
and
adc
mov
cmc
cmp
nop
das
mov
cmp
xlat
loopne
lods
int3
stos
ret
xor
sub
stos
addl
in
pop
xor
mov
mov
jecxz
dec
arpl
stos
rcrl
mov
jp
stos
scas
fbstp
hlt
popf
negl
inc
and
stos
inc
or
lea
mov
mov
stos
jecxz
jp
xor
pop
je
stos
cli
cmpsb
aas
pop
mov
test
xchg
ss
and
stos
xor
daa
jecxz
adc
dec
loope
test
arpl
mov
shrl
mov
dec
mov
xchg
je
repnz
mov
xchg
fdivrl
test
xchg
xchg
stos
stc
xchg
mov
push
mov
loop
xor
scas
and
cmc
outsl
fmuls
and
or
fcmovnb
lea
push
push
xlat
mov
js
mov
outsb
mov
sbb
std
sti
jmp
mov
mov
adc
leave
ret
push
pop
sub
mov
stos
loopne
xor
jle
pop
mov
or
pop
es
rcll
in
testl
jle
adc
ljmp
push
mov
and
stos
mov
dec
xor
loop
mov
es
xchg
movsb
stos
push
push
jo
fadds
rcrb
cmp
stos
dec
pop
stos
sub
lock
adc
push
int3
stos
test
pushf
cs
mov
dec
es
xor
jmp
mov
pop
lea
iret
shlb
mov
stos
cmp
in
sahf
pop
push
or
dec
lds
aam
xchg
shl
stos
imul
add
lea
mov
add
pushf
imul
imulb
adc
inc
sub
mov
adc
sahf
xchg
mov
jo
sbb
and
mov
stos
mov
popf
into
mov
pop
lahf
shll
imul
xchg
pop
add
mov
pop
outsb
stos
sbb
loope
push
jecxz
push
and
xchg
imul
jbe
lods
mov
sbbb
lret
in
loop
inc
push
fwait
sub
sub
dec
add
fwait
pop
or
loopne
cli
sbb
stos
cmp
and
stos
outsl
mov
mov
jl
jp
repnz
sar
sub
adc
inc
sbb
js
mov
adcl
ds
cmp
xchg
sbb
stos
mov
data16
lea
lret
mov
test
lds
stos
pop
out
or
stos
popf
leave
or
addr16
push
stos
mov
in
dec
jp
ror
xchg
bound
sti
dec
stos
out
inc
mov
dec
lret
sub
iret
adc
and
dec
mov
mull
xor
mov
stos
pusha
fsub
push
sbb
xchg
test
mov
xchg
in
popf
jno
or
aaa
movl
call
cmp
mov
in
out
gs
gs
stos
push
fld
js
stos
pop
jmp
imull
sub
aaa
xchg
int3
outsb
stos
fisttpl
mov
in
lock
stos
cmpsl
test
aas
dec
mov
add
and
lods
push
dec
stos
pop
lahf
xor
stos
movsb
mov
sub
push
fmull
cmp
pop
jbe
fs
add
jmp
mov
xchg
adc
scas
xor
push
pop
ds
xchg
imul
adc
stc
stos
xchg
jmp
loop
lret
stos
jmp
rcr
stos
scas
cmc
and
pop
jbe
jle
pop
popa
mov
push
push
fs
daa
and
or
xor
stos
sbb
pop
cmpsb
inc
mov
in
mov
xchg
enter
pop
sarb
int3
jb
mov
stos
and
pop
pop
stos
sub
inc
cmp
mov
xchg
das
cmp
xchg
mov
lret
sub
in
cmpl
dec
loopne
lods
mov
imul
pop
fsubr
bts
fisttpl
cmc
daa
push
push
data16
pop
out
mov
sub
or
outsb
pop
dec
pop
loopne
mov
or
sbb
shrl
xchg
jae
notl
xchg
pop
and
stos
adc
push
mov
inc
mov
xor
cwtl
push
shrb
dec
sub
cmpsb
ljmp
aad
in
lahf
sub
mov
sub
dec
es
scas
xchg
aad
or
mov
sbb
imul
stc
mov
jnp
sti
adc
push
stos
xorps
sub
mov
mov
xchg
adc
gs
xchg
shll
test
stos
outsb
mov
sub
adc
pop
xorb
sbb
inc
dec
data16
jmp
mov
inc
icebp
xor
stos
adc
jbe
lldt
mov
xchg
mov
cwtl
addb
cmp
jno
xor
les
loope
stos
cmpsb
fucompp
sahf
pop
mov
xor
icebp
or
ffree
add
pusha
xchg
les
inc
das
sti
inc
hlt
rcll
sub
sub
push
inc
and
jl
jne
mov
xchg
stos
pop
lcall
stos
push
hlt
mov
xor
loope
into
mov
ds
stos
fmuls
outsb
push
pop
lock
push
add
push
mov
aad
mov
cmp
mov
xchg
stos
mov
or
stos
nop
inc
js
mov
sbb
inc
fimuls
fs
mov
push
dec
repz
dec
push
stos
clc
lea
mov
stos
and
pop
pushf
stos
mov
pop
mov
mov
ss
aad
jmp
inc
es
pushf
ljmp
mov
sbb
loope
addr16
dec
and
mov
pop
jl
fildll
push
stos
test
lcall
push
sub
arpl
xor
adc
pop
scas
xchg
pop
mov
stos
add
fcmovbe
stos
mov
jecxz
add
inc
mov
repnz
dec
jnp
sbb
mov
pop
stos
push
mov
xchg
ds
aas
nop
lods
xorb
stos
mov
leave
pop
cmpsl
sub
cwtl
imul
add
and
cmp
test
sub
shrb
fsubs
or
jmp
popl
loopne
add
adc
xor
and
lcall
rclb
subl
mov
imul
pop
aas
xchg
out
stos
lret
mov
fwait
or
mov
fwait
sub
lods
pop
das
add
shll
fnstenv
lret
test
std
cmp
push
subb
out
mov
or
inc
xor
jmp
loope
ds
cmp
or
or
cmp
ret
push
rcr
or
leave
stos
std
push
pop
cmp
pop
push
int3
and
push
jne
push
testl
repz
in
ret
sarl
call
fwait
mov
ret
popa
stos
outsl
rorl
jno
aas
pop
stos
imul
rep
insl
push
movsl
pusha
popa
inc
inc
mov
jne
pushf
bound
orl
cmp
in
stos
cpuid
xchg
inc
dec
stos
xchg
es
fsubrs
stos
xor
mov
negb
ss
or
xchg
add
push
jno
mov
mov
in
dec
in
leave
imul
jl
push
stos
mov
ljmp
lret
imul
or
fmull
fwait
test
and
sahf
stos
and
inc
aas
sarl
stos
clc
pop
orb
mov
mov
xchg
scas
sub
in
loope
or
dec
stc
stos
jne
pop
lret
add
cltd
stos
cmp
xor
inc
loop
jg
scas
into
popf
xchg
stos
jp
add
jmp
imul
pop
aas
mov
xor
stos
not
stc
cmpsl
jp
repnz
stos
mov
stos
rorl
mov
xlat
stos
mov
iret
or
fmulp
stos
test
sahf
das
jmp
jl
imul
xor
insb
int3
loope
ja
mov
into
jae
sbb
repz
jne
add
repnz
push
mov
push
loop
inc
lods
dec
inc
xchg
ret
xor
cmpsb
in
jmp
add
and
loopne
jns
or
insb
fisttpl
push
ret
stos
aam
stos
dec
jmp
sub
dec
das
shll
push
in
stos
push
cmp
fdivs
or
sub
xchg
inc
jmp
aam
pusha
clc
lods
fwait
xor
into
sub
sub
dec
stos
sahf
add
xchg
and
mov
mov
cmp
aas
jle
cmpb
pop
aam
xchg
into
std
arpl
clc
stos
xor
cmpsb
inc
aaa
ret
xlat
xchg
outsl
push
mov
xchg
mov
test
jae
adc
out
inc
cld
jmp
movsb
stos
cltd
dec
test
xchg
sbb
out
mov
cmp
andl
adc
das
ljmp
fwait
repnz
sbb
sub
stos
hlt
push
push
ds
adc
jg
jae
sahf
push
in
mov
mov
cld
stos
pop
jne
movl
add
xchg
push
data16
fs
stos
mov
cs
lock
fildll
ret
mov
enter
pop
mov
ja
mov
push
repz
negb
mov
adc
adc
lcall
imul
stos
cmp
jb
dec
stos
inc
and
in
das
push
dec
imul
mov
cmp
mov
cmpsb
mov
cmc
or
push
fwait
sub
icebp
push
xor
mov
xchg
lahf
mov
adc
dec
gs
mov
aaa
mov
stos
mull
mov
inc
xor
stos
dec
cmp
enter
or
inc
push
cmpsb
scas
and
push
push
stos
rep
sbb
scas
xchg
pop
std
arpl
sub
ret
ds
dec
jne
testl
fs
out
jmp
mov
adc
loop
dec
stos
cltd
in
jmp
mov
outsl
into
hlt
bound
add
adcl
cmp
pop
ret
sarl
stos
ljmp
movsl
mov
stos
dec
and
jg
sub
cmpb
mov
repnz
enter
adc
int
sub
fxch
test
stos
add
out
in
adc
aaa
mov
cli
mov
ror
adc
mov
cmp
jnp
hlt
xchg
dec
stos
in
lds
mov
dec
clc
cmp
dec
push
sbb
xchg
rcr
mov
mov
adc
mov
movsb
add
xchg
out
push
icebp
stos
cmp
jo
inc
pushf
int3
jmp
cmpsb
lahf
mov
add
push
push
stos
sbb
insl
or
ss
push
lea
and
dec
sub
mov
outsl
inc
loope
fwait
lret
mov
jmp
scas
rol
insb
ret
fstpl
lods
and
sub
or
jle
mov
mov
out
lcall
add
jmp
dec
adc
int3
stos
jns
pushf
xchg
into
mov
ret
push
cmp
sub
stos
push
test
sbb
inc
stos
adc
mov
stos
daa
mov
fisubrl
cmp
std
lahf
stos
xchg
sub
dec
ljmp
inc
mov
or
stos
arpl
sbb
adc
das
mov
pop
cmpsb
ror
aam
adc
das
pop
xchg
stos
sub
push
dec
push
cmp
pop
xor
out
jmp
stos
cmp
or
sub
mov
xchg
inc
lock
ds
mov
stos
dec
int
filds
adc
sub
sub
cmp
in
lcall
add
stos
xor
xor
aam
jge
jns
enter
int3
mov
xor
in
cmpsl
jnp
cld
movsb
pop
add
mov
jg
ret
ret
mov
je
fnstenv
mov
stos
icebp
jl
add
lods
gs
mov
enter
mov
in
and
dec
stos
shrl
xor
mov
scas
push
ret
sub
mov
xor
jno
push
add
stos
xor
and
imul
pop
mov
stos
jbe
adc
cmp
imul
cmp
and
bound
lods
ss
sbb
in
enter
mov
iret
dec
mov
movsb
dec
xchg
fwait
inc
jmp
mov
out
mov
outsl
dec
jl
mov
andb
push
mov
add
pmaxub
das
lods
pop
dec
inc
xchg
fwait
fwait
xchg
mov
xchg
repnz
iret
stos
sub
movsl
mov
or
push
mov
daa
jmp
push
or
scas
cmp
pop
stos
sbb
xor
lods
mov
cmp
stos
mov
popf
gs
pushf
jg
mov
pop
shrl
or
and
repnz
int3
jb
movsb
rcll
hlt
pop
xchg
push
add
stos
jne
jo
jl
ds
cmp
ljmp
jno
mov
stos
test
xchg
lock
out
pop
mov
stos
iret
and
cmp
mov
addr16
pushf
mov
mov
ret
dec
movsl
scas
clc
stos
push
sub
mov
cli
out
stos
cmpsl
fs
mov
mov
stos
mov
inc
outsb
daa
stos
aad
inc
arpl
cmpsb
add
jp
pushf
mov
test
insl
clc
stos
mov
cmpb
frstor
adc
push
mov
sbb
test
jns
add
fdivl
ja
mov
lcall
std
arpl
inc
cs
pop
and
push
fwait
jge
xor
cmc
das
stc
cmp
mov
stos
jmp
mov
add
sub
shll
out
fidivl
push
push
xchg
stos
mov
cmp
in
pop
popf
add
dec
sub
icebp
jne
jl
mov
test
loop
lret
cs
je
sbb
push
cld
arpl
xor
outsl
aam
adc
add
mov
lret
inc
testl
jmp
push
fstp
xchg
mov
addr16
mov
push
sub
aas
ret
mov
jae
stos
xor
mov
sbb
hlt
and
lods
outsl
fwait
fwait
dec
stos
cmpl
push
stos
into
mov
adc
test
in
pop
stos
add
xor
push
daa
inc
push
add
jns
out
loope
insl
imul
and
adc
or
fwait
dec
sbb
nop
jne
into
loope
cwtl
add
in
or
subb
mov
mov
push
addb
in
dec
pop
stos
lret
dec
xor
fcoml
test
stos
stos
mov
cmp
ficompl
stos
std
mov
mov
jmp
stos
dec
or
out
gs
adc
arpl
mov
sbbb
stos
fisubl
pop
sub
mov
test
jo
mov
xchg
xchg
add
add
je
stos
and
mov
jl
mov
ret
sub
scas
and
xchg
dec
fwait
cs
stos
sarl
and
call
jnp
ret
push
cs
stos
xor
repz
sbb
jp
stos
out
jno
insl
rcrb
flds
jnp
sbb
sub
jae
fstp
icebp
rol
mov
dec
jnp
jle
sub
push
flds
mov
mov
daa
inc
pop
ror
push
repnz
stos
cli
and
mov
fldcw
movsb
stos
je
stc
jle
adc
pop
stos
add
dec
pop
in
jns
jp
fnsave
xchg
dec
stos
test
pop
xor
sub
push
mov
je
adc
and
pop
and
aad
lods
mov
mov
stos
push
inc
les
xchg
push
stos
stos
out
pop
cltd
fcoms
pop
imul
cmp
mov
jo
sub
subb
inc
dec
jp
sub
in
pop
aam
cmp
sbb
or
xor
stos
pushf
fistl
jae
fsubrs
fs
aam
addr16
xchg
cmp
sahf
pop
xchg
sbb
xchg
idivb
and
ds
jns
or
fwait
stos
addr16
cmc
sub
xchg
pop
add
hlt
mov
loopne
xor
stos
xchg
fwait
mov
xor
mov
push
jge
std
fidivs
and
sub
adc
pop
imul
cs
loope
sub
jp
inc
adc
push
stos
stos
jge
sbb
stos
jno
imul
sbb
stos
sub
jecxz
xor
inc
push
and
jl
cmp
imul
dec
mov
xchg
out
xchg
stos
adc
aad
test
lcall
outsl
adc
stos
je
xor
stos
pop
jmp
or
jmp
push
xchg
pushf
add
mov
or
pop
jl
fldcw
pop
addl
stos
rorl
addr16
int3
adc
add
loope
pop
lea
jge
adc
fstpl
stos
iret
sub
or
or
jbe
pusha
xchg
imul
xor
jno
nop
stos
call
stos
cmp
adc
inc
dec
gs
sub
cmc
or
mov
int
inc
les
cmpsb
sbb
add
in
cld
mov
mov
fldl
push
cltd
loope
cmp
ret
adc
add
scas
ljmp
mov
adc
aaa
cwtl
xchg
mov
or
jno
stos
pop
mov
in
cmp
and
xchg
push
aam
lret
pop
pop
in
shrd
mov
inc
mov
jge
in
stos
lock
mov
xchg
rcll
xchg
lcall
into
lea
and
mov
lret
push
popf
stos
mov
add
stos
cld
and
ret
aam
xor
mov
int
ljmp
cmp
add
insb
mov
mov
jnp
push
push
mov
xchg
stc
in
je
adc
cmp
aam
mulb
adc
les
inc
dec
ret
push
je
dec
lcall
dec
stos
leave
jns
mov
popa
lret
data16
mov
mov
mov
leave
sub
inc
stos
adc
mov
mov
into
adc
inc
bound
fistpll
cli
ss
and
sub
dec
imul
fldt
add
jge
stos
daa
ficoms
subb
push
hlt
imul
repz
mov
mov
push
add
xchg
cli
jo
xchg
dec
imul
mov
stos
int
ljmp
adc
xor
add
mov
stos
stos
sbb
aad
and
stos
push
push
xor
dec
dec
stos
xlat
jns
mov
movsb
cld
fisttpll
mov
daa
mov
stos
xchg
incw
mov
and
mov
inc
icebp
push
lahf
sub
cmp
repz
stos
adcl
inc
push
stos
mov
nop
push
lret
ljmp
xchg
push
adc
stos
ss
insl
sbb
mov
add
push
sar
xlat
mov
mov
sub
fsubl
insl
xchg
mov
add
push
stos
pop
rcrl
jnp
jnp
stos
xchg
mov
jle
stos
sub
sbbl
adc
mov
pop
rcrb
scas
into
loopne
cwtl
imul
sar
adc
jge
or
or
fcomp
stc
push
sub
stos
mov
aas
out
stos
push
shl
fstpl
fwait
popa
add
sahf
fdivrs
bound
subl
pop
mov
push
rorb
test
mov
mov
adc
stos
xlat
repnz
movsb
mov
or
inc
fwait
dec
jno
or
lcall
mov
xlat
stos
inc
mov
jb
xchg
sbb
xchg
push
movsb
add
stos
and
movsl
clc
push
gs
jmp
stos
push
mov
dec
ja
add
fldcw
popa
sub
stc
mov
xlat
and
xor
xchg
jae
stos
mov
dec
jl
cmp
add
sahf
fcompl
adc
lahf
ds
dec
cmp
stos
fwait
int
add
lds
mov
mov
push
push
cli
mov
popa
loopne
fbstp
mov
imul
xchg
mov
lcall
data16
clc
sbb
mov
stos
and
adc
scas
cmp
sub
mov
bound
or
pop
ja
or
or
jmp
mov
jmp
jp
sbb
in
int3
mov
or
mov
es
mov
xchg
stos
sbb
jl
adc
stos
fidivs
lea
gs
jo
into
shr
pop
mov
xchg
scas
push
stos
add
xchg
into
bound
lods
jle
hlt
dec
pop
stos
cs
mov
ljmp
decb
mov
stos
fldt
xor
fidivl
stc
scas
in
mov
shll
push
mov
jl
lahf
stos
mov
or
jno
stos
push
idivl
sbb
add
pop
mov
test
ds
std
bound
or
ss
clc
fxch
shlb
adc
xchg
stos
or
nop
jae
pop
mov
sbb
in
ja
xlat
sarb
jne
push
xchg
dec
andl
testl
inc
filds
stos
push
ret
int
mov
bound
cmpb
insb
jns
adc
pushf
shrl
imul
sub
stos
popl
pop
rol
stos
adc
fisttpl
jmp
push
xchg
inc
cmp
sahf
dec
xor
cmpsb
mov
mov
imul
ss
xor
movsl
les
sub
xchg
cltd
in
movsb
mov
cwtl
push
adc
mov
test
gs
xor
cltd
sbb
addr16
mov
movsb
sbb
notw
stos
adc
or
pop
jp
and
xchg
les
and
movsl
mov
and
test
ja
movsb
xchg
jl
addl
sbb
jg
aaa
xchg
cmpsl
insl
cld
xchg
mov
mov
and
daa
out
sub
cmpsb
adc
push
frstor
stos
dec
pusha
lret
cltd
ds
fwait
mov
push
pop
test
xchg
into
popa
int
movsb
decl
ret
mov
fwait
jg
xchg
push
jmp
repnz
dec
xchg
dec
mov
mov
insb
lahf
divb
adc
jnp
jp
je
mov
push
add
lcall
movsb
loope
jp
xor
stos
add
cmpsl
add
push
enter
inc
mov
lret
push
aad
pop
and
mov
inc
loopne
jmp
cmpl
hlt
test
xchg
adc
movsl
aad
add
stos
and
insb
xchg
ja
dec
stos
fnstenv
cmp
stos
insl
mov
inc
ljmp
inc
push
ret
xchg
mov
int
sbb
jne
imul
mov
fbstp
out
add
out
aad
mov
nop
stos
test
or
fistps
mov
push
jae
stos
xor
pop
xor
stos
pushf
sbb
xor
xchg
stos
xchg
jp
loope
outsb
cld
xor
jl
fistl
xchg
sub
mov
ja
ljmp
jge
pop
xchg
outsl
stos
ffree
int3
stos
test
push
mov
or
lret
jl
mov
std
mov
pop
cmp
out
test
jle
xchg
stos
sti
mov
adc
shlb
mov
je
cld
jp
out
pop
jno
jl
pop
dec
lahf
jns
adc
xor
test
cwtl
rol
adc
add
in
xchg
in
push
mov
daa
scas
xor
std
test
scas
sub
sbb
rep
xchg
cmc
xor
shrl
mov
fwait
or
sahf
sbb
pop
ror
mov
test
dec
movsb
outsb
ds
jmp
test
dec
repnz
mov
mov
fnstcw
je
mov
das
dec
stos
pop
xchg
mov
sti
ret
ljmp
sub
mov
dec
push
fwait
clc
sbb
roll
lods
mov
in
cmp
mov
push
xor
inc
mov
dec
mov
int
mov
aaa
xchg
or
push
sub
push
and
negb
mov
pop
ret
leave
mov
inc
pop
mov
add
and
lds
mov
loop
std
mov
cmp
or
jmp
push
jbe
mov
fcomi
clc
cltd
add
imul
pop
int3
mov
stos
or
lret
cmp
cmp
inc
fnstsw
lahf
add
and
call
out
mov
inc
hlt
mov
push
sub
xlat
dec
pop
pop
outsl
cmp
dec
stos
shlb
in
nop
mov
iret
cmpsl
sub
mov
movsb
mov
mov
sub
enter
daa
jg
mov
lea
mov
inc
add
jg
jmp
jne
jo
sub
stos
lcall
cwtl
stos
push
popf
adc
sahf
mov
clc
xchg
stos
push
jae
jp
mov
out
push
xor
push
and
lea
fsubs
xor
push
pop
cmp
mov
sahf
sub
xchg
insb
js
movsl
imul
daa
jo
scas
pop
mov
ljmp
sahf
cmp
test
das
push
jge
test
and
movsb
lds
outsb
mov
orb
sub
cwtl
mov
in
push
stos
inc
jnp
inc
es
pop
stos
xor
testl
pushl
inc
loop
test
repnz
jbe
mov
mov
mov
sbb
lret
popf
rolb
shll
test
lock
add
daa
daa
mov
inc
fwait
push
fnstcw
stos
jnp
pop
cmp
adc
andl
jo
dec
imul
mov
adc
xchg
push
addr16
inc
imul
addb
fidivrl
cmp
add
lcall
cmp
xchg
stos
adc
dec
scas
xor
fwait
shlb
lds
or
pusha
xor
fidivrs
fildll
pop
stos
iret
add
pop
int
jp
mov
lock
sub
lds
dec
inc
mov
and
out
std
ret
push
mov
sbb
js
cwtl
mov
xchg
int3
imulb
xor
js
push
xchg
jno
movsb
test
adc
cmpsb
loopne
out
or
icebp
dec
adc
push
arpl
cld
daa
jo
fcoml
test
insl
lcall
int
push
push
pop
imul
mov
aas
arpl
in
out
jg
shll
pushf
shlb
daa
out
inc
orl
daa
out
mov
mov
fisubrl
push
mov
pop
push
data16
rol
stos
ss
inc
sbb
ret
or
stos
xlat
xchg
aad
dec
in
out
movsb
in
cs
stos
movsl
sahf
lods
sbb
movsb
sbb
jp
add
das
xchg
mov
sbb
xlat
push
mov
test
mov
xor
cmp
dec
stos
adc
lods
push
stos
add
sbb
repnz
into
dec
mov
adc
jbe
aad
pop
lcall
mov
pushf
stos
push
mov
xchg
inc
pop
cmp
stos
add
pop
add
mov
stos
xchg
mov
cld
popf
hlt
pop
daa
xchg
mov
dec
inc
jo
ret
dec
sahf
mov
xchg
fildll
xor
and
loopne
test
fwait
out
stos
sub
add
js
movsb
movsl
insb
push
sti
jl
inc
mov
lods
jno
std
push
andb
das
stos
xchg
xlat
cmp
rcll
sti
stos
lea
insb
icebp
jle
add
gs
stos
mov
cmp
mov
jno
push
and
push
leave
add
stos
test
jl
lods
std
jo
sub
lods
cs
mov
and
ds
inc
adc
fcoml
fwait
xchg
push
pop
shrl
out
mov
cmc
dec
test
rcrb
out
cmp
shlb
das
lds
test
dec
stos
pushf
jnp
inc
fwait
cmp
and
dec
push
scas
cmp
test
or
lcall
insb
stos
xchg
in
cwtl
jp
int3
mov
dec
mov
test
mov
cmp
sub
iret
nop
inc
sub
cld
fistps
out
fcoms
xchg
sub
stos
mov
jb
xchg
outsb
fldt
daa
shrb
ja
pop
cmp
test
or
rorl
cmc
and
mov
aas
lcall
ljmp
faddl
sbb
int3
enter
fwait
clc
push
addr16
jle,pn
stos
mov
pop
sub
loop
std
mov
xor
jno
out
lods
jl
stos
inc
xor
loope
daa
bound
stos
or
mov
xchg
push
push
mov
jg
stos
dec
xor
push
loope
sahf
or
or
xchg
sub
jg
cmp
insl
lret
lods
test
jnp
cmp
ret
enter
push
add
lret
xchg
mov
mov
sbb
sbb
and
cli
xchg
jmp
sbb
xchg
js
stos
lock
es
rorl
adc
xchg
mov
outsl
and
sbb
xchg
cld
cmpsl
out
es
shll
pop
insb
stos
cmp
movb
testb
pushf
cmpb
adc
stos
dec
stos
pop
lahf
dec
fwait
rclb
lods
cmpsl
ret
call
js
xlat
repz
mov
mov
fwait
add
inc
mov
aas
stos
or
js
push
adc
pushf
cmc
or
mov
pop
xchg
hlt
lret
jmp
jo
addr16
shr
cltd
imul
xor
and
cmp
jmp
xchg
adc
xlat
mov
test
dec
jmp
mov
stos
push
pusha
sbb
or
or
sub
fldcw
and
imul
ret
stos
mov
lods
jno
stos
stos
stc
fnstcw
and
xchg
jb
dec
nop
repz
mov
out
into
shrl
hlt
lcall
mov
mov
jmp
repnz
pop
cmp
mov
lret
xorl
cmc
mov
add
xchg
popf
std
cmp
stos
mov
sti
dec
inc
les
and
xor
dec
push
stos
mov
push
push
aam
bts
shll
or
stos
fisubs
roll
fcoml
cmp
insl
imul
push
data16
decl
hlt
aaa
stos
jnp
inc
jno
in
aas
mov
jns
icebp
subl
mov
js
in
es
mov
pushf
push
lea
inc
testl
mov
push
cmp
sub
lods
stos
pop
xor
insb
stos
xor
std
pop
call
stos
pop
and
mov
stos
mov
mov
gs
mov
mov
jmp
jbe
insb
mov
sbb
sub
push
fcomps
fldenv
scas
addr16
repz
stos
lcall
int
stos
shrl
and
das
mov
ret
loope
xchg
in
sub
cld
stos
scas
or
sub
cs
push
frstpm(287
aas
shr
and
mov
stos
jae
mov
or
stos
shll
jle
daa
pop
adc
outsb
xor
push
xor
mov
mov
stos
mov
fdivl
je
loopne
sbb
imulb
bswap
icebp
pop
rcll
movsb
or
dec
or
push
in
mov
subb
push
xchg
xchg
mov
mov
scas
shlb
int3
jae
fsubrl
sbb
imul
cmpsl
stos
xchg
sbb
mov
xor
into
mov
add
lock
lods
stos
inc
sahf
pop
aam
jmp
mov
loop
sbb
lcall
xor
push
fdivrl
and
je
call
std
sbbb
xrelease
dec
cs
imul
jmp
pop
stc
lret
lds
pop
fs
lock
arpl
jne
adc
leave
jge
xchg
leave
xchg
addr16
sbb
adc
adc
xchg
add
xlat
arpl
sub
sbb
add
and
jg
mov
inc
imul
mov
sbb
ret
stos
fdivrs
sub
cld
dec
and
out
dec
adc
clc
mov
pop
xor
push
jmp
lock
mov
push
mov
js
imul
ret
stos
addr16
jo
call
adcb
push
shlb
stos
clc
mov
ret
cwtl
mov
in
dec
jle
sub
leave
fwait
js
movsl
imul
rcrb
inc
push
ss
jmp
stos
mov
fisubs
daa
int
xchg
faddl
sub
repz
aad
call
lock
mov
jnp
cmp
mov
popa
in
adc
jo,pt
aas
std
lret
sub
cmp
push
inc
push
rcrb
cs
mov
inc
in
lods
icebp
cmp
rep
and
jmp
xchg
jmp
pop
mov
push
test
inc
xor
neg
aas
mov
out
add
ljmp
sub
pop
mov
pop
xor
enter
clc
sbb
pop
hlt
outsl
xor
scas
fdivrs
mov
js
scas
in
in
fiaddl
lods
mov
fstpt
shrb
dec
inc
sbb
stos
mov
add
imul
mov
loopne
je
int
fsubs
cmpsb
movsb
jg
lahf
pop
and
sbb
add
sub
and
xor
stos
fcompl
mov
stos
mov
cmp
dec
mov
scas
jge
fldl
sub
jmp
ret
sahf
stc
jo
fisttps
and
sbb
add
aam
lods
roll
stos
outsb
std
insb
inc
ret
out
inc
sahf
mov
xlat
pop
pushf
mov
movsl
ljmp
xchg
ret
icebp
xor
mov
xchg
iret
pop
fdivrp
jnp
clc
addr16
imul
stos
lods
dec
stos
fnsave
push
cmp
jae
std
pop
pop
nop
mov
stos
shrl
shlb
push
out
ficomps
repz
cwtl
scas
and
imul
mov
cmp
pop
stos
pushaw
and
jp
subl
xchg
loop
lods
pushf
adc
mov
xchg
aam
and
repz
stos
fs
repnz
xchg
fwait
hlt
je
jmp
jg
mov
add
popa
stos
push
mov
inc
mov
and
ficoml
inc
cmpsb
call
cltd
stos
jle
push
lea
repnz
sub
aaa
pop
iret
cmp
xchg
push
stos
test
ret
stos
bound
std
mov
pop
or
and
inc
leave
jo
mov
jmp
jmp
dec
ret
lret
mov
adc
lods
xorb
xor
xchg
inc
cld
push
stos
sub
inc
lahf
sarl
stos
pcmpgtb
or
add
mov
xor
jle
cmpl
gs
jae
dec
stos
stos
pop
fistps
inc
mov
mov
inc
pushf
push
outsl
fstp
mov
dec
cmc
push
lods
and
es
loop
stos
mov
aas
js
inc
shll
cmpl
stos
ja
addr16
stos
pop
mov
xchg
stos
jge
orl
rsm
pop
or
pop
inc
pop
pop
push
test
insb
out
lcall
test
call
stos
pop
outsl
or
inc
push
out
ljmp
pop
stos
sub
xor
shr
fucomi
lret
sbb
dec
stos
xor
shl
ljmp
ljmp
and
mov
sbb
ds
stos
cltd
scas
dec
push
int3
daa
mov
stos
test
mov
add
and
repz
popf
stos
idivb
into
pop
and
and
jmp
pop
sbb
in
or
dec
cltd
stos
insl
lea
cmp
test
pop
mov
mov
por
adc
popf
pusha
dec
jmp
pop
sub
mov
dec
mov
adc
call
ljmp
cli
out
mov
imul
mov
stos
gs
xor
mov
add
or
in
mov
dec
adc
andb
mov
mov
test
xchg
cmp
mov
mov
xchg
mov
cmc
stos
jge
sub
and
jnp
inc
push
gs
xchg
adc
sbb
dec
mov
inc
inc
pop
xchg
insb
cmp
push
dec
fucomp
lcall
sbb
jg
stos
scas
mov
jge
dec
or
mov
dec
jne
sub
xor
gs
cld
in
xor
arpl
pop
imul
inc
test
fadds
mov
pop
js
in
lret
stos
scas
cmpsl
adc
xchg
outsl
imul
nop
jmp
test
mov
stos
pop
mov
out
dec
mov
stos
or
cwtl
and
stos
inc
addr16
mov
sbb
icebp
jg
mov
imul
sub
aad
mov
rcll
sub
bound
in
pop
push
lds
mov
test
movsb
popf
mov
iret
out
lods
hlt
jg
stos
inc
in
mov
sub
push
inc
add
testb
or
pusha
mov
inc
imul
pop
adcl
in
push
adc
xchg
pop
inc
add
outsl
xchg
mov
mov
dec
jmp
dec
fsubrs
xor
stos
push
mov
inc
pop
sbb
cmpsl
jae
scas
fldt
icebp
aaa
mov
stos
cmp
xor
jp
lock
stos
jmp
sahf
mov
mov
stos
loop
xchg
ret
stos
test
aas
jne
fdivrs
stos
pop
hlt
test
mov
xor
mov
xchg
xchg
out
and
adc
stos
jecxz
sar
stos
jmp
xchg
mov
inc
adc
leave
dec
imul
loope
mov
jne
push
push
pop
and
aad
in
fs
mov
sub
mov
push
loopne
pop
pop
stos
cmp
mov
ja
cmc
mov
adc
mov
fistpl
out
lcall
xor
sub
aaa
dec
jnp
adc
push
stos
ds
pushf
sub
jmp
xor
pop
xchg
jmp
bswap
aas
adc
jl
pop
lahf
sahf
decb
and
mov
out
stos
je
sub
mov
cmc
sub
fs
es
stos
jg
ret
out
push
movsb
push
stos
roll
js
adc
stos
add
mov
xor
shll
ljmpw
mov
sub
jp
shrb
dec
hlt
sbb
dec
jae
scas
or
movsb
jmp
repz
cli
mov
xchg
mov
shlb
push
es
mov
jae
cmp
ja
stos
push
movsb
das
popa
repnz
stos
inc
flds
pop
pop
repz
in
jmp
lret
pushf
outsb
jmp
dec
scas
stos
add
cmpb
cmp
js
sbb
xor
add
shrb
sbb
and
lret
pop
push
imul
mov
stos
mov
or
jmp
nop
sbb
dec
stos
push
or
jno
arpl
sub
mov
or
fmul
popa
ja
rcrl
mov
bound
fimull
jae
daa
or
mov
xchg
std
stos
adc
pop
xchg
adc
stos
push
xchg
outsb
xor
push
cmpsl
jnp
push
fisttpl
daa
xchg
jno
xlat
mov
insb
stos
adc
sub
scas
out
iret
sub
jno
test
stos
mov
add
cmp
daa
or
lret
sti
adc
test
out
sub
fldt
add
subb
xor
sti
pop
add
pop
stos
xchg
test
or
sub
push
mov
add
ss
mov
mov
repnz
push
stos
mov
dec
pop
push
jmp
or
mov
popf
stos
punpckhdq
jmp
scas
adc
fs
cmp
std
or
jno
enter
fs
stos
loopne
push
fadds
jns
lret
stos
inc
jl
clc
adc
stos
sub
xchg
jmp
je
xor
stos
es
aam
sbb
dec
stos
inc
jb
sub
lcall
je
push
push
cwtl
stos
sub
mov
dec
stos
or
ss
mov
jns
aaa
das
movsb
and
stos
pop
or
inc
ds
int
stos
repz
mov
lea
mov
subl
aad
mov
loop
int3
js
jns
adc
test
dec
jmp
push
in
adc
mov
push
mov
add
xchg
shrl
scas
and
add
and
pusha
dec
dec
leave
stos
mov
fwait
lret
inc
mov
sarl
mov
in
insb
xchg
mov
xchg
inc
idiv
les
xchg
cltd
fwait
push
stos
ds
push
aas
xlat
stos
fstl
outsl
in
stos
repz
in
pusha
sbb
jmp
iret
orl
mov
pop
clc
mov
stos
push
push
push
out
fldt
arpl
inc
add
cmp
scas
stos
mov
lahf
lds
cltd
scas
into
adc
push
daa
sbb
mov
xchg
jne
mov
push
xor
stos
in
sahf
jmp
stos
push
push
bound
daa
inc
dec
sub
out
dec
stos
mov
movsl
inc
insl
push
pop
cmp
mov
stos
pop
pusha
cli
fwait
mov
in
push
inc
insb
sub
movsl
push
dec
pushf
nop
cmp
adc
aam
and
dec
in
ror
mov
sbb
stos
cwtl
or
test
sbb
decl
pop
adc
cltd
mov
scas
push
xor
jl
xor
std
xchg
scas
test
stos
cmp
sub
out
mov
adc
jmp
pop
arpl
xchg
jo
mov
push
nop
jmp
testb
mov
in
clc
iret
mov
mov
stos
adc
or
pop
push
cltd
sbb
xchg
add
dec
lea
mov
stos
outsl
dec
lahf
xor
into
insb
dec
stos
mov
jbe
lock
cmc
push
cmp
sbb
insl
xchg
aaa
dec
imul
lahf
cmp
loope
cmp
scas
mov
dec
stos
ret
inc
xchg
cltd
pop
jge
and
in
popf
stos
fcomps
ja
mov
stos
push
push
or
jge
adc
cli
scas
add
pop
stos
inc
in
ret
fistps
stos
mov
sbb
dec
push
sti
jl
js
jbe
push
inc
outsb
mov
stos
cmc
pop
lods
addr16
aad
stos
data16
push
mov
xor
push
inc
loop
mov
cmp
stos
dec
and
fnsave
arpl
mov
inc
add
fs
stos
push
fsts
stos
adc
jle
dec
mov
inc
mov
stos
push
lcall
imul
jmp
aad
roll
scas
push
lret
push
test
sbb
and
jae
stos
adc
pop
scas
pop
ja
sarl
push
push
mov
aas
out
stos
cmp
dec
dec
movsl
jnp
sbb
sbbl
dec
jmp
xchg
cmp
push
stos
jns
ljmp
bound
xchg
push
stos
inc
pop
push
jmp
fwait
pop
mov
movsb
sub
mov
sbb
jb
xor
aad
sub
stos
pop
js
repnz
push
icebp
cli
fwait
jns
cltd
popa
xor
int3
push
sbbb
cltd
and
daa
mov
jge
cmp
jo
mov
cmpsl
stos
mov
shrb
shll
mov
mov
stos
push
fstl
mov
std
mov
inc
sub
rclb
mov
arpl
mov
cmp
mov
and
dec
xor
mov
mov
repz
mov
adc
jp
xlat
mov
aam
adcb
filds
subl
push
imul
aad
movb
iret
stos
int3
pop
scas
or
in
cmp
jge
push
jnp
in
dec
jne
hlt
bound
insb
inc
jp
or
es
outsb
mov
adc
lods
out
lods
jle
xor
jp
mov
jnp
lds
sub
stos
out
mov
lods
adc
jp
movsb
fnsave
addr16
dec
xchg
aaa
in
test
jecxz
push
test
pushf
stos
xchg
mov
sub
or
adc
lret
stos
addb
or
test
in
mov
stos
fs
xchg
sbb
adc
push
inc
jecxz
cmc
loope
gs
sbbl
xchg
dec
jmp
mov
mov
jbe
loopne
push
lahf
pop
xor
adc
sub
imul
arpl
mov
xor
adc
add
jmp
orb
cs
mov
sub
sub
dec
in
in
daa
mov
out
stos
jge
addr16
pop
es
lcall
iret
and
stos
test
call
ljmp
inc
stos
cmp
jmp
mov
rolb
mov
inc
xor
dec
xor
cmp
popa
stos
or
xor
jg
or
mov
stos
sbb
mov
dec
and
rcr
mov
pop
dec
cmp
adc
and
adc
stos
xor
mov
lods
stos
or
in
mov
insb
lods
les
paddsb
or
stos
ljmp
jmp
inc
shl
push
inc
popf
mov
loope
test
stos
adc
push
xchg
push
ret
subl
out
push
push
mov
sub
popa
add
inc
aaa
jmp
and
mov
sti
add
aam
inc
stc
mov
mov
mov
stos
aas
arpl
sbb
jnp
hlt
stos
popf
ds
loopne
test
push
inc
push
or
mov
hlt
mov
jecxz
sub
das
repnz
xor
mov
adcb
mov
faddp
stos
aaa
pop
data16
enter
nop
push
jmp
roll
int
outsb
mov
mov
mov
jo
adc
daa
insl
sub
addr16
mov
push
fsubrs
dec
mov
jp
mov
dec
notb
jg
dec
popf
loopne
xchg
mov
pop
cli
sbb
mov
scas
sbb
movsl
fwait
mov
cmp
popa
stos
in
jae
in
loope
fwait
stos
out
mov
punpckhbw
movsl
mov
shrl
stos
rolb
and
mov
cmpsb
stos
in
fsubs
mov
imul
mov
arpl
xchg
test
stos
mov
push
jmp
stos
cwtl
les
and
lahf
jmp
mov
stos
jg
stos
aaa
sbb
sbb
xor
cmp
lahf
idiv
mov
jl
push
or
ret
or
push
imul
fwait
xchg
mov
imul
xchg
movsb
cs
stos
jle
je
xor
in
adc
mov
imul
shlb
in
je
outsl
test
int
stos
xorb
inc
jmp
pop
mov
add
pop
cmpl
int
loop
fsubrl
cmp
cmc
mov
outsb
stos
xchg
mov
fs
xor
cmp
popf
and
jns
out
imulb
mov
repz
stos
cmpb
inc
lret
sti
mov
sbb
push
stos
or
cmpsl
mov
sub
xchg
aaa
mov
lods
mulb
shrl
stc
in
fmul
xor
test
cwtl
cmp
xor
sbb
adc
jl
ret
stos
sbb
add
mov
pushf
push
and
loopne
and
jge
or
inc
stos
int3
pop
push
dec
test
push
mov
mov
mov
stos
cld
sbb
mov
sbb
sub
nop
cltd
imul
cwtl
arpl
push
int
movsb
in
stos
into
dec
add
mov
or
pop
pop
xchg
stos
mov
stos
out
loope
lret
sar
pushf
daa
pop
adc
lods
movhlps
mov
sbb
cmpsb
cmp
push
stos
add
cmc
stos
pop
pop
icebp
cmpb
and
xchg
insl
push
adc
mov
in
xor
cmc
or
mov
jp
pop
push
dec
mov
xor
pop
jnp
fs
mov
aad
je
mov
push
frstor
push
fidivrl
dec
mov
rorl
jo
cmp
sbb
xor
mov
cmp
adc
add
fsubrs
ss
stos
popf
cmp
pushf
lret
stos
and
shrb
mov
icebp
imul
out
push
cmp
enter
testl
dec
jne
xchg
lock
imul
frndint
iret
aas
cmp
call
push
fwait
punpcklwd
sbb
pop
cmp
cmp
enter
popa
sbb
push
addr16
sbb
mov
mov
add
mov
test
sbb
stos
jge
daa
fxch
mov
jmp
dec
cmpsb
inc
insb
ret
es
fwait
icebp
xchg
hlt
sub
rorl
movsl
sbb
flds
fldt
mov
add
loop
bound
pop
lods
inc
jo
pop
mov
adc
subl
shlb
dec
loope
adc
dec
mov
stos
push
fdivrl
sahf
push
jecxz
out
mov
inc
xchg
inc
out
cld
punpckhdq
mov
jnp
jb
dec
shll
dec
addr16
scas
or
jo
and
pop
lods
push
pop
ds
por
push
or
movsl
or
insb
mov
mov
fld1
sub
cmp
insl
aam
xchg
push
xchg
add
pop
pop
sub
and
stos
add
in
out
addr16
push
pop
pusha
mov
push
pop
test
ds
push
scas
xchg
cmpl
out
jns
fildll
lods
cs
mov
or
cwtl
stos
cmp
sti
or
mov
add
or
stos
or
cmp
rcrl
push
ret
dec
mov
shl
add
dec
jns
push
das
lret
loop
inc
pop
xchg
mov
stos
mov
mov
test
pusha
jnp
jmp
sbb
xchg
xor
or
or
lods
dec
in
dec
adc
fwait
jecxz
out
xor
stc
stos
sbb
xor
jp
mov
mov
sti
jecxz
jb
inc
clc
fyl2xp1
cwtl
or
push
and
sbb
jle
dec
addr16
lock
push
stos
popa
sub
enter
ljmp
cmp
pop
stos
and
lret
push
pop
repnz
enter
and
into
push
mov
loope
jg
add
lahf
daa
lret
in
stos
rorl
nop
stos
inc
jge
mov
shlb
icebp
push
adc
stos
mov
add
xor
test
xor
pop
dec
jmp
mov
push
add
divl
je
push
fildl
out
aam
stos
cltd
pop
jg
sub
and
arpl
stos
sbb
jae
lods
imul
cli
xor
xchg
fisubrs
push
ret
add
add
cmp
js
sbb
mov
jno
pop
adc
pop
aam
inc
dec
imulb
daa
sub
stos
xlat
pop
mov
push
sub
je,pt
jns
fnclex
adc
test
jb
cmp
inc
pushf
pop
lcall
in
inc
inc
test
sub
out
and
mov
pop
push
and
jg
cmpsb
inc
stos
lods
jmp
sub
in
inc
std
cld
push
movsl
sub
addr16
jl
xor
or
incb
negl
inc
jae
xchg
add
mov
xchg
stos
push
movsb
loop
fiaddl
mov
andl
and
popf
pop
sub
enter
xchg
mov
dec
push
adc
scas
xchg
mov
into
jg
push
mov
stos
add
sub
jnp
enter
pop
mov
std
sbb
stos
mov
leave
xchg
dec
inc
stos
mov
js
cmp
mov
jo
stos
push
lea
xor
pop
es
push
jp
ljmp
aam
data16
stos
loope
test
or
push
sarb
insl
stos
dec
push
divl
sub
into
dec
jmp
insb
mov
bound
push
popa
jno
movsb
aaa
lods
xor
ja
mov
inc
sub
cmp
mov
fnstsw
imul
dec
shll
jmp
dec
rcrl
dec
push
rclb
inc
sbb
or
dec
sahf
push
mov
sub
pop
sub
scas
repnz
adc
adc
ret
mov
aad
sarb
nop
jle
and
jmp
or
cmc
aad
mov
inc
or
js
xorb
scas
sbb
out
push
push
adc
popa
and
sbb
or
inc
aas
mov
movsb
je
xchg
test
lods
lods
xchg
jl
js
out
lret
call
cld
push
add
scas
movsb
jle
movsb
xchg
mov
mov
lea
push
adc
mov
xchg
or
stos
sbb
and
mov
push
add
mov
inc
sub
fwait
cmp
jecxz
push
xchg
insl
arpl
stos
jns
mov
sti
imul
xchg
pop
out
in
js
popa
stos
loopne
out
pusha
xchg
add
pop
xor
pop
inc
shl
add
es
pop
add
jl
test
pop
or
add
dec
notl
cmp
and
xor
loopne
aas
mov
mov
push
stos
push
push
jbe
lods
inc
or
stos
pop
jne
lahf
and
sbb
stos
push
and
insl
pop
mov
stos
cmp
test
fldcw
mov
into
stc
mov
mov
rcrl
outsl
and
lahf
pop
cmp
push
jbe
inc
and
adc
stos
rclb
std
push
sarb
outsb
push
lret
bound
orb
mov
adc
xorl
mov
cli
call
in
mov
fldcw
jcxz
sbb
cmp
loop
pop
aam
sahf
out
or
jp
push
scas
into
dec
stos
jle
xor
dec
and
addr16
icebp
pop
idiv
mov
out
inc
addr16
mov
add
dec
popl
pop
ret
cld
inc
stc
lret
xabort
adc
mov
mov
cld
push
ss
pushf
adc
in
push
cli
dec
sbb
mov
jmp
cltd
pusha
clc
pop
xchg
and
mov
fdivrl
jle
mov
lds
dec
insb
stos
mov
in
xchg
dec
and
stos
xchg
jle
outsb
test
xchg
outsl
or
inc
cmp
cmc
sub
mov
sahf
adcl
add
fldl
inc
stos
jmp
std
mov
mov
xchg
dec
movsb
stos
mov
pop
fwait
insl
xchg
leave
adc
std
stos
or
or
in
shrb
aad
xchg
inc
mov
mov
movsl
xchg
stos
out
cli
aaa
push
stos
in
bnd
loop
aad
jge
or
or
in
and
sub
fwait
sbb
and
xchg
cs
stos
jne,pt
stos
mov
dec
arpl
jg
pusha
adc
mov
adc
pop
pop
mov
imul
add
sub
ret
fidivrl
stos
push
push
dec
pop
lret
adc
jecxz
int3
push
xchg
subb
mov
xchg
cld
push
cmp
pushf
cvtpi2ps
cmp
jb
adc
fwait
sbb
incb
xchg
arpl
js
adc
mov
dec
les
jl
fwait
sti
xchg
popa
and
jle
xchg
jmp
stos
cmp
sub
mov
outsl
dec
stos
gs
lret
jp
push
push
xor
cld
mov
stos
lret
stc
lahf
jns
out
jge
into
test
jnp
andnps
push
stos
xchg
out
sub
push
sbb
xchg
xlat
out
cmp
arpl
xor
mov
lea
daa
sbb
add
lods
je
or
xchg
lret
xor
hlt
scas
mov
or
cld
lods
pop
xor
mov
jne
and
or
je
stos
push
scas
aad
cli
lods
stos
push
or
in
xchg
pop
aaa
int
mov
test
inc
arpl
or
in
mov
es
mov
stos
jge
mulb
sbb
cmp
mov
ret
xchg
xchg
xor
mov
pop
xchg
inc
cld
cmp
push
fiaddl
mov
pushf
fcoms
lcall
sub
mov
xor
mov
and
shlb
sub
inc
mov
push
stos
movsl
rol
or
inc
push
lods
dec
fsts
jle
js
ljmp
add
mov
or
add
pop
inc
cmp
xchg
sbbl
pop
addr16
xor
ds
push
stos
jbe
dec
int3
pop
arpl
sbb
mov
sub
js
cmp
stos
aas
mov
push
inc
stos
xor
scas
dec
addr16
mov
repz
xor
jns
pop
jmp
sub
push
subl
stos
push
pop
mov
fisubrs
push
xlat
add
cmp
inc
out
mov
mov
push
inc
stos
fmull
push
or
mov
or
shlb
ss
icebp
dec
stos
sub
mov
add
ret
daa
pop
sub
xchg
aam
xor
dec
shlb
in
mov
or
das
fwait
lahf
fiaddl
sti
and
pushf
pop
imul
imul
addr16
jecxz
stos
push
adcb
xor
das
push
add
add
ljmp
push
nop
int3
inc
icebp
in
addr16
daa
imull
jle
stos
lock
test
add
lcall
dec
sbb
jp
stos
ret
mov
add
stos
mov
sub
pop
push
leave
js
pop
movsb
stos
outsl
cli
lahf
mov
sub
jb
fcoml
pop
mov
pop
stos
cmp
jmp
push
mov
ret
orb
popa
cmp
and
lock
jns
decl
and
leave
and
repnz
rcrl
lds
iret
sbb
mov
dec
loop
loopne
fwait
add
add
mov
sub
stos
lret
in
lock
shrb
xchg
adcb
push
fisubrl
xorl
scas
sbb
in
or
lds
shlb
cmp
test
adc
iret
push
repz
loopne
jp
ja
stos
sub
popa
popf
sub
or
lds
je
fldt
call
add
imul
sbb
jg
mov
sbb
xorl
stos
in
out
dec
jl
push
stos
jecxz
add
mov
ja
lret
pop
xor
insb
cmp
and
push
aaa
add
mov
adc
iret
push
test
scas
fstl
add
and
adc
stos
das
dec
fists
stos
scas
sub
add
xchg
fidivs
call
xor
jbe
lds
popf
jg
test
sar
dec
cmp
fldt
adc
call
push
jl
stos
jle
jne
in
pop
pop
push
mov
mov
cmp
and
out
dec
insl
stos
aas
xchg
clc
jl
mov
pushfw
in
mov
movsb
clc
imul
pushf
mov
stos
and
push
lock
jge
xor
inc
jno
jns
nop
adc
mov
mov
stos
sbb
in
int3
push
push
stos
pop
jle
movsb
mov
push
mov
ror
pop
in
sub
mov
btsl
or
stos
cwtl
push
in
sub
mov
outsl
out
shrb
dec
popf
push
enter
mov
adc
sub
testb
xchg
push
and
mov
xchg
stos
pop
imul
jp
lcall
mov
sbb
inc
inc
stos
pop
add
icebp
mov
xchg
pop
mov
or
orb
dec
in
mov
stos
inc
sub
loope
stos
sbb
test
mov
adc
fildll
loop
test
mov
in
mov
shrl
rolb
push
push
lods
mov
fucomp
cmp
xor
sub
fisubl
shrl
xchg
ds
imul
mov
jg
stos
xor
sbb
sub
jnp
pop
mov
dec
pop
insl
mov
fmulp
aas
addb
int3
stos
add
movsb
lods
subl
jmp
fwait
xchg
imul
xor
sbb
mov
das
pusha
jecxz
dec
out
adc
cmp
loope
mov
cmp
daa
insb
mov
xor
cs
stos
push
lods
lods
lds
cmp
clc
mov
stos
adc
lock
ret
cmp
stc
jne
mov
jno
xchg
or
sahf
mov
out
mov
add
mov
xlat
cs
and
fwait
mov
stos
push
jne
stos
mov
bound
addl
push
xchg
shrb
jne
mov
movsb
stos
sub
nop
bound
es
or
js
jno
sbb
cvtpi2ps
test
and
imul
icebp
repnz
int3
mov
ja
push
cltd
rorb
fmull
fs
sub
out
push
rcll
mov
lods
dec
imul
cmpsl
mov
sub
cmp
add
or
cmpsl
arpl
mov
lcall
lahf
mov
mov
and
dec
adc
in
inc
cltd
jmp
pop
add
lds
cwtl
testl
stos
scas
mov
push
test
popa
xchg
stos
ret
aad
mov
fildll
xor
dec
iret
imul
ljmp
ds
jl
stos
imul
sahf
rorb
sar
mov
adc
stos
es
aam
mov
arpl
xchg
fwait
or
outsb
stos
sub
jg
push
stos
pop
loope
in
test
in
mov
adc
xlat
mov
addr16
rcr
jns
daa
xor
xchg
lret
enter
dec
insl
inc
mov
add
test
aaa
jno
adc
adc
or
fucomi
stos
xchg
sub
mov
dec
xor
lcall
jns
insb
mov
cli
dec
dec
xor
ret
popf
push
loop
adc
sbb
jl
in
es
stos
es
andl
ror
movsl
cmp
push
test
mov
mov
mov
adc
mov
xchg
aaa
stos
stc
in
daa
jg
mov
sub
xor
cmp
sub
jp
jl
loopne
arpl
sbb
push
jno
mov
jg
cmp
lods
out
jns
inc
xor
stc
xchg
lods
mov
call
jnp
addr16
in
sub
inc
movsb
or
inc
stos
jmp
loope
movups
xlat
inc
sub
sbb
insl
mov
inc
mov
inc
mov
mov
or
sub
inc
push
scas
add
add
addr16
jecxz
stos
lret
mov
stos
shrb
sbb
std
jmp
ljmp
cmp
ds
push
ljmp
leave
or
stos
xchg
mov
and
cmc
iret
dec
movsl
sub
xchg
lds
in
icebp
jno
dec
mov
mov
ss
sbb
clc
les
cmpsb
mov
jl
adc
jne
ljmp
add
inc
adc
add
xchg
inc
push
xchg
stos
mov
xchg
je
cs
stos
mov
cmp
gs
jbe
mov
popf
lahf
push
stos
jecxz
lods
sbb
imul
mov
fst
adc
mov
mov
sahf
jmp
jmp
sbb
dec
stos
mov
lahf
lds
inc
jbe
sub
flds
int3
cmp
adc
xchg
pop
sbb
and
lods
mov
lret
cmp
xor
jno
add
pushf
push
inc
call
xchg
dec
dec
stos
mov
into
inc
aaa
loop
popf
stos
pop
mov
les
repnz
adcl
data16
mov
pop
sub
test
mov
push
inc
and
mov
jecxz
and
adc
jmp
add
ror
iret
xchg
xor
adc
cwtl
sbb
sbb
add
sarl
scas
cwtl
iret
in
mov
inc
or
ret
mov
mov
cltd
mov
stos
out
xchg
test
cmp
mov
push
dec
adc
inc
call
jmp
mov
inc
mov
stos
cmp
sub
jo
push
fldl
imul
cmc
pop
xorl
lahf
adc
test
dec
add
ljmp
popa
xlat
cmp
into
fldl
out
push
xchg
leave
stos
and
push
sub
xchg
xor
push
pop
push
test
scas
cmp
daa
stos
pop
inc
jae
sub
daa
pusha
lods
je
mov
and
inc
test
repnz
ss
sbb
push
int
mov
mov
cmpsb
and
scas
jbe
xchg
and
jmp
stos
mov
jae
pop
mov
stos
fucomp
imull
and
stos
xor
icebp
push
stos
push
int3
out
sbb
stos
cmp
xchg
push
push
repz
hlt
pushf
pushf
mov
xchg
out
pop
popa
scas
jg
push
gs
stos
enter
movsl
stos
xor
dec
mov
lret
mov
jo
sarl
push
stos
fdiv
adc
mov
bound
jo
test
scas
nop
add
scas
add
shll
and
xchg
addr16
jo
mov
mov
sbb
xor
dec
mov
lods
mov
lea
ds
and
or
mov
xchg
inc
inc
ret
or
stos
cmp
pusha
ds
outsl
pop
cltd
adcb
aad
xor
call
pop
stos
cli
adc
or
dec
xchg
and
dec
inc
popf
loope
lods
scas
addb
aad
cwtl
mov
aam
inc
mov
cmp
sbb
jnp
dec
test
fwait
lods
fdivs
add
dec
stos
rol
ds
stos
pop
loopne
cltd
bound
sbb
adc
xor
icebp
adc
dec
aam
pop
jmp
mov
mov
sbb
aad
iret
mov
stos
loop
fucomp
aam
push
stos
call
adc
scas
inc
pop
jno
stos
fwait
jnp
sbb
test
in
unpckhps
mov
js
jle
loope
test
jae
mov
push
xchg
scas
fnstsw
dec
stos
rcl
inc
arpl
add
inc
add
mov
stos
mov
andb
faddl
fwait
pop
push
jo
fs
fiadds
fldcw
andl
xor
popa
jne
stos
std
lret
outsl
add
int3
push
aaa
stos
inc
imul
imul
jmp
xor
stos
cld
daa
push
xor
mov
stos
push
push
orb
jl
inc
js
inc
or
pop
flds
push
inc
popf
mov
shll
icebp
stos
push
adc
pushf
aas
dec
outsl
stos
mov
adc
in
hlt
dec
outsb
je
sti
dec
pop
sub
loopne
imul
nop
and
push
cmpsb
in
sbb
xchg
pop
mov
ss
sub
jb
ja
push
push
inc
dec
mov
cmp
sub
push
xchg
stos
pop
and
leave
dec
stos
into
adc
fisubrs
mov
fwait
adc
mov
mov
jecxz
rcrb
xchg
notb
lahf
dec
xlat
lds
addl
inc
loop
and
push
cs
scas
jge
cwtl
mov
shrb
pop
mov
arpl
inc
jo
insb
stos
pushf
mov
leave
lea
sbb
cmp
into
mov
imul
mov
or
xchg
repnz
sub
in
test
jnp
stos
dec
gs
jb
cs
call
or
jmp
push
and
lods
test
push
shrl
fistl
fs
stos
push
mov
insb
pop
stos
ja
cli
jmp
mov
cwtd
addb
ss
jmp
fstpl
mov
or
sub
sti
mov
sub
pop
sarl
imul
lds
push
adc
dec
mov
stos
and
pop
adc
mov
imul
std
leave
add
jp
mov
mov
inc
adc
lahf
xor
stos
xor
orb
gs
dec
sahf
stos
pusha
pushf
lods
nop
lcall
push
dec
cli
fcom
lods
popa
test
stos
out
loope
bound
daa
sub
arpl
push
mov
push
cwtl
mov
std
mov
jmp
scas
push
lods
xchg
idivl
fwait
js
mov
xchg
aas
inc
cmp
stos
push
leave
scas
sbb
xchg
addr16
sub
imul
push
mov
adc
cmc
repnz
sub
xor
xchg
addr16
mov
sub
sbb
xchg
stos
insl
addr16
shr
scas
mov
add
stos
xchg
inc
cmp
stos
inc
inc
das
jmp
and
mov
xchg
es
inc
mov
mov
and
insl
out
mov
stos
jge
inc
xor
xor
out
xchg
pop
int
or
call
or
stos
aaa
out
fwait
xor
sbb
insl
dec
rorb
jl
fsubrs
in
popa
ljmp
jo
inc
lret
imul
push
nop
jno
ret
test
outsb
jae
out
mov
pop
stos
outsl
mov
out
icebp
and
jnp
in
out
or
xor
pushf
sbb
fidivs
sbb
jl
lods
out
fs
mov
cli
xchg
jge
stos
mov
push
inc
mov
and
roll
loope
stos
sbb
incb
adc
inc
sti
push
xchg
cmpl
dec
or
pop
mov
stos
jnp
cmp
dec
out
out
loop
xchg
xchg
shrb
mov
out
xchg
cwtl
inc
stos
add
pushf
jbe
movsl
repnz
stos
cmp
sub
dec
in
and
aaa
stc
ja
ret
jmp
imul
dec
or
jnp
inc
imul
stos
pop
call
sub
push
mov
mov
sbb
mov
cltd
fisttpll
inc
mov
mov
sbb
xchg
into
push
xchg
sub
data16
dec
cs
shlb
push
sub
pop
pop
aaa
fimuls
test
xchg
scas
cmp
sar
inc
in
xor
push
ror
dec
popf
and
outsl
mov
dec
stos
sub
push
pop
sub
stos
cltd
xchg
out
fbld
stos
inc
pushl
mov
popl
xchg
movsb
cmp
add
test
inc
inc
sub
mov
testb
and
sub
mov
stos
pop
xchg
xchg
jle
lret
lods
int3
jl
mov
jmp
push
inc
mov
mov
jmp
lret
and
in
mov
pop
lea
loop
jmp
cwtl
flds
pusha
pop
stos
imul
or
xor
xchg
pop
outsb
mov
hlt
rorb
stos
inc
xor
inc
ljmp
cld
pop
or
push
xor
pop
stos
sub
cmp
pop
adc
stos
sbb
mov
divb
sbb
inc
mov
push
add
stos
int3
mov
add
dec
mov
insb
fisubrl
in
or
pop
sub
push
andb
cli
jecxz,pn
imul
movsb
jp
stos
lahf
inc
sbb
pop
pop
adc
push
mov
iret
xchg
je
imul
xor
arpl
loop
and
out
inc
int3
push
add
repz
imul
inc
lret
cmc
ret
xchg
fidivrl
inc
ja
out
and
repz
stos
leave
or
inc
jo
push
jl
push
and
cmp
rorl
rcll
dec
loopne
adc
sti
pop
mull
insl
stos
xor
mov
sub
ja
arpl
mov
adc
xchg
inc
push
adc
in
popa
sub
pusha
fsub
sbb
enter
sub
mov
adc
stos
in
adc
jne
cmc
cmp
stos
je
sahf
pop
out
insb
adc
stos
push
mov
sti
mov
dec
xchg
or
cmp
mov
aam
xor
sub
or
lcall
push
stos
test
adc
arpl
push
nop
imul
das
adc
inc
inc
fcomps
add
mov
push
jmp
sti
jne
dec
shrl
or
jnp
jmp
mov
movsb
inc
sbb
fwait
push
flds
jne
cli
rorl
stos
scas
mov
inc
and
aad
pop
sahf
ja
enter
insl
xchg
stos
cmp
ja
and
xor
orb
adc
stos
int
mov
cld
shrl
je
jg
stc
mov
push
stos
les
popa
or
int3
push
mov
popf
cmp
sbb
jno
jp
nop
arpl
movsb
adc
mov
test
sarl
pusha
dec
hlt
pop
jne
sub
cld
jbe
mov
mov
mov
push
and
mov
lods
inc
pushl
stos
xor
pop
cmp
in
stos
pop
jns
incb
sub
stos
dec
xor
push
out
jae
stos
mov
enter
sbb
stos
or
jg
test
xlat
divb
mov
ficoms
mov
lret
sub
push
xchg
bound
movsb
xchg
fwait
mov
lock
mulb
loope
bound
shrl
jmp
addr16
popa
mov
adcb
gs
mov
stos
aam
scas
retw
sub
ficomps
sub
cltd
and
mov
stos
cmc
int3
jmp
mov
aad
adc
lahf
push
fs
push
or
data16
stos
jmp
iret
or
xchg
sarl
adc
cwtl
or
sbb
xchg
inc
stos
xor
inc
ret
bound
nop
adc
int
xor
jge
cld
iret
sbb
pop
jecxz
into
xor
pop
repnz
lret
stos
test
outsb
adc
push
outsl
fwait
scas
out
or
sub
mov
add
stc
lea
push
icebp
outsb
mov
cltd
mov
stos
sub
rclb
bound
sbb
into
fwait
loopne
pop
jg
sbb
dec
cmp
inc
add
cmp
sahf
aad
jnp
stos
xor
xchg
stos
xchg
stos
call
push
jo
imul
mov
shlb
loope
and
mov
stos
mov
add
jmp
sbb
jae
pop
cwtl
push
push
stos
inc
rol
insl
iret
xor
jp
xchg
mov
fwait
and
movsl
stos
loope
pop
scas
mov
pop
adc
lcall
mov
pop
cmp
or
inc
xlat
outsb
outsl
xor
push
scas
or
sub
hlt
clc
jge
mov
je
lds
out
pop
aas
int3
stos
call
inc
fidivrs
sbb
int
clc
mov
adc
cmp
xor
mov
push
add
fldt
testb
mov
fwait
nop
cmp
jle
pop
xor
imul
xlat
push
mov
pop
imul
out
loop
push
clc
jp
stos
aas
into
outsb
pop
jo
adc
mov
loop
mov
fwait
jecxz
bts
jno
add
sbb
and
sar
cmp
push
ja
aas
fwait
push
adc
cs
jmp
mov
dec
pop
stos
dec
fisttpll
lods
fwait
push
dec
sub
or
inc
sbb
sbb
or
sub
cmpsl
mov
stos
shr
aaa
shrb
jmp
loop
andb
pop
mov
bound
jnp
adc
daa
ja
cmc
mov
or
clc
push
mov
or
dec
mov
jmp
stos
cltd
insb
mov
push
imul
push
stos
mov
divl
sub
test
dec
jmp
pop
xchg
stos
mov
xor
jo
stos
stos
inc
lock
push
fldenv
stos
cmc
mov
jecxz
mov
mov
dec
or
pop
add
mov
pusha
daa
jp
and
out
pop
xchg
sbb
stos
jle
push
hlt
and
in
filds
inc
mov
xchg
cmp
pop
shll
jecxz
test
mov
incl
xor
or
stos
ss
movsl
or
push
inc
mov
int3
es
stos
paddw
inc
in
data16
stos
xlat
scas
out
out
js
mov
ljmp
cmp
clc
mov
mov
dec
add
sub
mov
je
xchg
jo
stos
xchg
jbe
sub
xor
or
stos
mov
ja
xchg
stos
add
jle
stos
cmp
fs
pushf
mov
mov
add
hlt
icebp
pop
fistpll
mov
std
pop
fistpl
lds
jmp
icebp
sub
dec
out
xchg
mov
loopne
mov
jbe
loopne
aas
sub
stos
lock
stos
xchg
adc
insl
pop
and
sbb
lret
mov
jmp
adc
fwait
inc
xchg
jne
stos
pop
push
sub
pusha
cmc
cmpsb
fwait
xor
stos
fstpl
call
std
inc
iret
mov
pusha
sub
test
stos
enter
mov
sbb
in
dec
clc
mov
out
stos
inc
jge
mov
in
jbe
xor
negb
xchg
shll
xchg
inc
mov
mov
jmp
push
inc
lret
aad
cmp
out
rcl
mov
stos
xchg
or
jo
cld
sub
mov
in
hlt
stos
inc
test
cli
mov
jmp
les
xchg
ja
pop
cld
repz
fcom
int
cli
mov
int3
add
ret
stos
addr16
shl
xor
lea
pushf
scas
mov
ss
mov
jae
shll
push
pop
out
mov
xor
stos
in
ret
test
push
stos
xchg
xchg
pmaddwd
mov
mov
cmp
jbe
cld
rcll
cmp
stos
sbb
xor
sub
xchg
xchg
xchg
fldt
in
stos
mov
xchg
mov
inc
stos
xor
jns
sti
stos
and
add
stos
and
mov
ret
lea
mov
test
int3
popa
cmc
inc
popl
push
pushf
es
into
inc
stos
mov
push
add
xchg
shll
sahf
mov
cmp
pusha
fld1
or
pop
stos
imulb
mov
inc
lds
aaa
scas
mov
or
imul
stos
mov
insb
cmp
lods
notb
mov
push
xor
test
push
cmp
lahf
mov
sbb
in
adcl
dec
nop
cmc
stos
cmp
push
push
inc
rcll
jno
les
int
pop
xchg
push
imul
xor
std
daa
mov
adc
inc
jg
dec
lock
and
ret
cmpsb
sub
ja
stos
jbe
call
les
mov
sbb
das
stos
mov
xchg
loope
stos
stc
sahf
mov
out
sub
pop
jecxz
add
popa
stos
sub
pop
xor
ret
ljmp
test
stos
in
cltd
push
jne
pusha
mov
xchg
add
and
stos
addr16
dec
cmp
rcl
xor
or
and
mov
cmp
mov
and
or
stos
ja
push
in
dec
in
jns
dec
cld
shrl
add
pop
stos
sbbl
in
sahf
rcll
stos
jle
rcr
push
xchg
mov
ljmp
stc
add
fsubrl
cmp
movsl
mov
test
cmp
imul
mov
leave
lahf
stos
mov
inc
lods
sub
dec
xchg
jnp
ljmp
lcall
rcll
dec
stos
push
mov
sbb
lahf
or
cmp
leave
mov
inc
xchg
mov
int
jecxz
cmp
mov
jge
sbb
lret
sahf
push
jmp
mov
cwtl
mov
stos
inc
jnp,pn
cmpsl
xchg
sbb
lock
sub
push
mov
jmp
pop
cmp
mov
xchg
les
xchg
sub
imul
adc
mov
xor
stos
jns
dec
aaa
jge
loop
stos
adc
ja
mov
in
sbb
aam
imul
loope
fdivl
stos
adc
add
cmpsl
popa
stos
rorl
enter
cmp
fimull
and
int
push
imull
pop
mov
stos
mov
mov
stos
adc
incb
sbb
into
addr16
das
dec
inc
jmp
inc
xchg
pop
mov
jl
sti
fwait
add
adc
loop
and
inc
mov
adc
enter
daa
mov
mov
outsb
or
xchg
and
subb
pop
addr16
push
xchg
ja
add
aaa
stos
sbb
cltd
mov
aad
or
lret
ljmp
popf
pop
stc
add
mov
jge
lds
pop
cld
push
stos
in
int3
cmp
fbld
leave
pop
mov
cltd
stos
decb
xchg
cwtl
mov
movsb
lods
mov
mov
pop
mov
cli
test
mov
movsb
sub
lcall
mov
mov
and
fbld
jecxz
repnz
dec
js
inc
cli
insb
mov
pop
in
adc
xor
inc
adc
lahf
stos
fsub
lds
test
jmp
push
fcmovbe
dec
stos
mov
test
sub
push
xor
sbb
and
pushf
setbe
mov
pop
pop
loope
scas
shl
jmp
stos
jo
insb
outsb
jno
or
xchg
jp
lock
in
out
jmp
shll
cmp
lds
shll
mov
cld
rcr
sub
push
js
xor
mov
sbb
sub
push
pop
jne
add
fwait
aam
mov
inc
ss
stos
test
jge
gs
and
xchg
mov
push
adc
adc
jno
mov
cmp
xchg
cmp
loope
or
fwait
aas
cmp
stos
rol
loop
push
adc
push
add
mov
clc
scas
push
pop
es
adc
lea
hlt
lahf
fsubrl
cltd
mov
adc
adc
dec
mov
jmp
stos
inc
push
das
mov
sbb
cmc
adc
adc
leave
mov
inc
cld
aam
jle
lret
cmp
adc
fwait
mov
xor
mov
mov
push
jg
sbb
mov
push
jge
js
sub
mov
sahf
mov
mov
mov
out
and
lahf
jle
mov
adc
sbb
jl
mov
jns
shrb
sbb
and
xor
push
and
dec
test
mov
stos
fimuls
clc
pop
xchg
mov
aas
mov
outsb
xchg
or
stos
pop
dec
mov
mov
push
jb
mov
enter
lcall
dec
stos
mov
mov
addr16
push
adc
andb
push
xlat
pop
lret
arpl
xor
cld
or
pop
adcb
xchg
mov
sbb
push
jo
mov
xchg
mov
jp
adc
andl
imul
xor
mov
or
int
mov
stos
inc
or
adc
inc
and
mov
stos
push
sbbb
mov
movsl
inc
sbb
popf
adc
mov
rolb
les
add
orl
mov
jmp
popa
lods
push
aas
xchg
xchg
mov
mov
lods
adc
and
loope
div
ja
dec
and
jb
lea
pop
lret
setg
lds
mov
pop
cmpsl
mov
pop
stos
mov
dec
push
aam
lcall
in
stos
push
sarl
insb
sti
popf
stos
dec
xor
mov
pop
push
jecxz
into
in
popa
stos
cmpsb
xchg
int
iret
push
sub
xchg
jg
sub
or
inc
stos
std
push
lock
adc
stos
int3
aam
inc
mov
stos
test
iret
mov
loopne
scas
pop
repnz
inc
cli
adcb
or
mov
test
pop
call
pop
dec
sbb
adc
aas
push
clc
stos
inc
pop
cmp
mov
outsb
pop
fsts
dec
cmp
mov
push
sbb
adc
stos
aad
add
orb
and
push
rcrb
and
pop
mov
mov
das
jle
ret
lods
lcall
decb
int
stos
xchg
or
push
fsubrs
mov
test
outsb
data16
popl
push
mov
stos
aad
xor
out
add
stos
addr16
mov
mov
mov
push
stos
pusha
xchg
out
icebp
data16
nop
mov
aas
jg
and
loope
xchg
stos
test
mov
add
dec
xor
push
movsb
push
jg
fwait
mov
movsl
stos
jecxz
dec
fbstp
sahf
out
fdivrs
out
ret
xor
jmp
loope
insb
mov
fisubrl
clc
pop
in
imul
mov
leave
mov
pop
sbb
outsb
sbb
push
pusha
mov
push
dec
stos
xor
call
pop
imul
mull
test
mov
aad
adc
stos
jno
inc
sub
jae
push
stos
xor
adc
stos
jmp
or
es
jns
or
adc
int3
dec
jne
pop
mov
mov
xor
lret
xlat
imul
jae
sahf
or
fsubrp
aas
sub
outsl
push
std
mov
test
scas
jne
dec
jnp
insb
mov
add
js
push
stos
rorb
sti
and
subl
test
jbe
shll
pop
sub
in
sbb
ja
fldcw
lea
stos
aas
push
dec
ljmp
or
daa
mov
mov
pushf
add
mov
pop
pop
stos
mov
lea
push
push
test
pop
xlat
xor
inc
call
jl
pop
adc
mov
outsb
int3
shrl
pop
jo
les
test
mov
mov
xor
xchg
push
scas
fbld
insb
pop
xor
popf
cmc
icebp
stos
sahf
test
imul
xor
push
or
mov
sar
sbb
jg
add
ss
pop
test
stos
sub
xor
stos
leave
fwait
xchg
and
inc
jmp
dec
jecxz
sub
dec
or
scas
push
adc
xchg
xchg
cmp
xchg
fs
stos
pop
imul
lock
cmp
mov
pop
stos
cmp
arpl
stos
xchg
daa
jnp
adc
or
or
imul
ja
mov
in
stos
lea
jbe
stos
add
lods
movsb
daa
push
pop
out
pop
push
add
stc
aaa
xchg
pop
inc
cmp
adc
mov
sbb
and
cmp
and
mov
movsb
adc
and
mov
ja
xchg
ret
int
stos
jecxz
or
pop
xor
stos
std
push
sbb
jbe
cmpsb
stos
mov
jle
aad
ret
xor
jmp
cltd
stos
push
pop
and
daa
fwait
andl
stos
in
or
xchg
les
pop
xor
das
push
add
jo
imul
mov
stos
mov
cmp
loope
push
in
inc
lods
push
cmp
je
rep
incl
push
cmp
shrl
hlt
push
push
xchg
das
popa
xchg
dec
gs
adc
pop
push
aaa
stos
sbb
mov
mov
test
inc
inc
cmp
popf
imul
and
ljmp
mov
sbb
iret
pusha
pop
sahf
xchg
lcall
dec
jle
popa
xchg
in
push
and
enter
mov
xchg
jnp
aas
icebp
or
sub
jge
and
je
int3
stos
mov
jle
lret
add
adc
ds
sub
inc
sbb
stos
sub
push
sub
push
dec
pop
gs
push
iret
cld
stos
sbb
mov
rorl
popa
jg
stos
mov
or
movsb
inc
jp
fwait
sub
mov
std
push
lds
scas
mov
fbstp
sarl
mov
addb
mov
aad
ret
push
hlt
dec
mov
mov
imul
mov
adc
jmp
ret
clc
scas
das
lret
sbb
cmp
push
mov
adc
push
stos
or
push
xchg
push
in
add
push
stos
sahf
mov
test
stos
push
adc
dec
ret
mov
sub
loopne
mul
movsl
andl
sub
stos
dec
inc
mov
or
sahf
pop
sbb
jl
sub
mov
jmp
add
inc
vphaddbw
daa
jp
inc
mov
lods
mov
add
scas
mov
mov
mov
into
stos
les
mov
sbb
or
stos
push
cmp
and
stos
xor
mov
jmp
pop
loope
mov
fst
inc
mov
stos
sbb
jmp
and
cmpb
pop
arpl
xchg
test
lret
std
cmpl
loopne
leave
dec
js
int
jno
stos
inc
pop
lods
adc
lods
movsb
insl
test
mov
stos
jmp
pop
push
mov
sbb
add
push
mov
cmp
pop
sub
lock
std
imul
xchg
lret
fidivrl
adcl
push
stos
jae
mov
mov
adc
and
sbbb
and
stos
test
inc
mov
stos
push
aam
add
push
iret
test
fsubrs
outsb
jecxz
jle
push
dec
stos
inc
or
and
inc
push
repz
and
xchg
sbb
sbb
bound
jg
sti
stos
mov
xchg
and
stos
test
ja
jge
int
dec
aad
mov
sub
sub
inc
hlt
mov
or
sbb
std
dec
dec
stos
xchg
jnp
sub
stos
js
loope
je
dec
mov
mov
jg
dec
jge
outsl
jmp
and
dec
cwtl
ljmp
xor
or
mov
stos
fwait
mov
mov
lds
lock
stos
xorb
cmp
mov
mov
test
inc
mov
mov
or
push
cmp
push
stos
andb
pushf
jecxz
adc
push
adc
inc
adc
stos
into
mov
jns
cmp
dec
stos
cltd
mov
sbb
stos
or
test
push
jg
add
outsl
rcr
pop
cmpsb
mov
stos
push
inc
insb
rolb
mov
aam
fisubrs
xor
stos
xor
mov
inc
fs
mov
arpl
out
movsl
stos
xchg
and
dec
push
stos
push
stos
cmpsb
inc
in
aam
mov
inc
stos
pop
cld
inc
xor
mov
stos
mov
fstpt
xchg
movsb
mov
mov
push
in
and
add
fidivrs
mov
jne
icebp
stos
add
and
scas
imul
iret
out
lcall
or
stos
fildl
pop
leave
fsub
rclb
in
push
in
mov
fdivr
insl
addr16
sti
stos
push
ret
mov
push
stos
push
cmp
inc
stos
scas
inc
loope
cmpsb
push
ret
dec
int3
ret
cmc
xor
stos
imul
arpl
stos
push
scas
dec
shll
cmpb
mov
mov
movsb
adcl
aaa
test
mov
xor
jmp
jae
push
aam
aam
mov
lods
mov
pop
stos
or
xor
jmp
pop
mov
adc
pop
mov
rolb
cmovl
clc
pusha
mov
and
pop
stos
sbb
xor
sahf
cmp
imul
cmp
inc
loop
daa
ljmp
sbb
int3
cmpsb
mov
sti
dec
jp
es
and
stos
inc
rep
ficomps
cs
sbb
stos
adc
jns
cmp
sti
shrb
sub
pop
sub
xlat
mov
iret
push
mov
rorb
adc
in
xchg
adc
cs
push
inc
cmp
lods
inc
int3
loop
mov
lret
popf
xchg
loopne
pop
mov
sub
stos
mov
notl
adc
sbb
pop
add
or
jae
pop
test
jnp
jg
addl
stos
mov
dec
fsts
lret
daa
rcrb
test
mov
add
sbb
pop
cli
fisttps
pop
push
xchg
stos
int
inc
test
lea
stos
sbb
mov
dec
stos
stos
mov
insb
xor
aad
stos
lret
test
bound
lock
rclb
dec
mov
xchg
cmp
leave
jo
out
fistpl
mov
sub
adc
fwait
xchg
in
or
mov
aad
stos
pop
push
xchg
out
add
mov
adc
push
std
jmp
mov
inc
in
mov
xor
inc
stos
mov
fdivrs
cmc
pop
add
aam
pop
nop
jge,pn
js
inc
outsb
fists
call
cs
stos
push
mov
cmc
xor
cmp
mov
mov
stos
pop
adc
in
ret
outsb
mov
lcall
lock
sahf
enter
sub
stos
adc
test
jae
push
pushf
stos
mov
icebp
add
out
adc
cld
fmuls
stos
fcmovu
hlt
cltd
mov
fwait
rclb
add
int
adc
inc
aad
mov
mov
lods
xor
and
adc
stos
fimuls
fwait
pushl
mov
mov
inc
mov
adc
dec
popf
stos
or
lea
mov
mov
movl
xor
imul
mov
xchg
mov
xchg
push
jns
in
pop
stos
dec
ljmp
push
pop
jne
stos
mov
lock
test
stc
cmp
xchg
mov
mov
mov
sti
ljmp
add
cmc
xchg
pushf
pop
push
lahf
stc
shr
iret
enter
ds
adc
repnz
nop
mov
or
pop
pop
in
cli
jmp
xor
pusha
dec
ret
addr16
adc
insl
icebp
mov
movsl
pop
cwtl
lahf
xchg
repnz
std
add
stos
int
add
lret
jnp
lea
lods
xchg
inc
stos
or
stos
or
sbb
insl
data16
jne
jecxz
mov
jnp
fadds
push
stos
cmp
ss
stos
mov
cmp
xchg
jo
add
sbb
imul
dec
cmpsl
add
das
sbb
sub
leave
lret
mov
and
xor
je
mov
dec
jmp
ret
dec
mov
test
xchg
inc
pop
stos
lcall
popa
stos
pop
cld
xchg
inc
daa
out
daa
sbb
repnz
mov
add
adc
lahf
enter
jae
stos
and
xchg
xor
inc
add
lret
cmp
and
mov
int
stos
dec
sub
pop
mov
mov
std
or
stos
gs
fwait
push
into
scas
das
push
add
out
mov
jo
aad
xchg
ss
xchg
arpl
repnz
add
push
xor
icebp
dec
daa
enter
fwait
mov
push
inc
add
cltd
xchg
shrb
dec
push
int
stos
pop
aas
iret
movsl
jmp
shlb
mov
int
stos
lea
movsl
stos
push
and
jnp
outsl
stos
mov
jle
stos
aad
mov
int
cmp
scas
sbb
xchg
les
pop
cmp
pop
in
mov
aam
mov
pop
mov
fdivs
pop
or
jmp
mov
aas
pop
mov
adc
add
jmp
ja
sbb
mov
dec
leave
repz
bound
cmp
pop
jmp
jno
fiadds
add
stos
nop
scas
dec
ficompl
mov
repnz
or
jp
cmc
or
push
xchg
jns
xchg
inc
push
sub
stos
sbb
mov
je
mov
inc
fldenv
add
std
lret
push
stos
lahf
pop
push
shll
mov
mov
loope
or
push
mov
xchg
mov
or
push
add
jae
insb
dec
lea
mov
data16
lahf
les
xchg
stos
mov
je
fldt
into
mov
push
mov
popa
icebp
mov
dec
xchg
xor
shlb
sarb
ucomiss
stos
jbe
mov
loop
mov
insb
ret
or
pop
add
lahf
jbe
dec
sbb
int
je
xor
sbb
lods
pop
stos
fsubrl
call
mov
hlt
in
shrb
shll
shrl
fisubl
cmpsb
stos
pusha
lods
dec
in
sbbl
icebp
and
out
incl
cmp
jne
cmp
mov
outsb
inc
rcrb
sub
aad
test
dec
xor
and
scas
out
pop
stos
adc
push
leave
stos
sti
sbb
arpl
jmp
scas
stc
mov
adc
sub
stos
jmp
cmp
roll
mov
fwait
mov
fisttps
stos
in
dec
imul
lds
pop
das
sbb
sar
stos
rcrb
ret
nop
jns
xor
mov
test
mov
and
dec
stos
icebp
bound
sbb
stos
push
sbb
je
in
mov
push
pop
aam
nop
mov
out
inc
pop
stos
outsb
dec
xchg
jae
mov
xchg
add
jp
lret
addr16
call
push
mov
xchg
xchg
xor
push
pop
movsb
rcrl
lods
push
push
sbbl
adc
sub
popf
xchg
mov
jne
sbb
mov
dec
sub
repnz
cs
push
into
ret
cltd
loop
leave
xchg
push
stos
jle
sti
lods
sahf
cmp
std
stos
mov
sbb
insb
jge
gs
inc
cmp
fwait
mov
dec
xchg
jmp
insl
shl
ja
and
pop
scas
cmp
movsb
adc
stos
mov
mov
and
stos
test
inc
push
pop
les
mov
jg
add
and
fxch
push
add
nop
ja
xchg
fisubrl
add
pop
fwait
push
in
fcompl
dec
adcl
stos
push
punpcklbw
cmp
jmp
add
mov
roll
sub
stos
mov
cmp
xchg
add
adc
inc
pop
cmp
lahf
ja
xor
shll
cmpsb
jmp
mov
dec
and
mov
or
xchg
mov
ret
sub
pop
fisttps
stos
rclb
divb
cld
sub
lea
push
daa
loop
test
mov
adc
lret
mov
scas
and
es
mov
mov
mov
fmull
and
cmp
xchg
jo
sub
test
cld
repnz
cmpsl
and
mov
lock
shll
scas
mov
aaa
inc
stos
test
sub
sahf
jmp
cli
lods
or
nop
fwait
cmp
aam
jne
mov
dec
stos
mov
mov
inc
stos
inc
js
xchg
and
cmp
sub
sarb
jmp
popa
imul
or
push
jmp
inc
mov
rolb
cmp
test
xchg
cli
and
cmp
call
ljmp
mov
stos
ds
add
nop
stos
icebp
inc
pusha
imul
push
inc
mov
addr16
and
mov
sarb
mov
call
dec
stos
shlb
pop
pop
inc
fldl
divb
or
sub
in
mov
daa
jl
stos
les
fs
pop
mov
inc
add
mov
stos
fucomip
sbb
mov
or
out
in
aad
xor
fucomp
and
jae
mov
xor
stos
in
jl
push
addr16
shrl
and
stos
popf
inc
pop
xor
xor
xchg
adc
stos
hlt
aas
adc
jo
pushf
stos
dec
into
xchg
out
dec
sub
ffreep
jge
lcall
mov
cld
sub
push
or
fwait
sarl
adc
mov
out
lret
inc
mov
mov
sti
mov
adc
daa
pop
dec
rep
sti
movsb
in
mov
adc
adc
push
sbb
stos
adc
outsb
insb
std
mov
inc
daa
scas
movsb
mov
leave
stos
gs
std
jmp
cmp
stos
ds
mov
inc
outsl
stc
lahf
stos
jne
pop
push
stos
scas
sarl
dec
shrb
add
mov
mov
push
enter
sbbl
adc
inc
loopne
stos
mov
adc
in
or
xlat
enter
xchg
adcl
inc
fildl
xchg
and
cmp
sub
stos
ficomps
fistl
scas
cld
jmp
jmp
jnp
push
jae
add
mov
jl
test
out
ljmp
scas
in
inc
fisubs
arpl
popf
mov
mov
ror
fwait
imul
sbb
outsl
mov
mov
push
fldcw
jae
fdiv
mov
fsubr
push
cmp
sub
stos
cltd
or
cmp
cmp
test
insb
or
ret
js
std
mov
sbb
adc
jae
rorb
std
dec
cmp
stc
imul
pusha
stos
and
repnz
xor
mov
stos
mov
cmp
icebp
inc
inc
mov
scas
int
stos
pop
and
add
ret
stos
pop
pop
jmp
mov
push
pushf
stos
dec
shrb
xchg
sbb
bnd
lods
rorb
jge
in
adc
adc
jnp
mov
dec
bound
push
sub
ja
dec
repz
cmp
int
out
xchg
push
stos
inc
cld
dec
add
xor
ss
add
mov
loop
ret
xchg
mov
in
stos
fsubrl
pop
stos
cmp
dec
jmp
stos
nop
mov
ds
stos
cmp
fists
movsb
mov
mov
jnp
mov
xchg
insb
pop
daa
push
or
adc
rep
lret
rolb
lret
mov
dec
mov
adcb
aam
pop
aad
mov
stos
sub
sub
inc
imul
or
cmp
repnz
mov
into
jb
mov
clc
lcall
jae
cmc
and
xchg
dec
mov
sub
cli
stos
mov
sbb
shrl
daa
bound
in
jecxz
stos
mov
je
stos
pop
xlat
xchg
cli
clc
imul
pop
jne
mov
sbbl
data16
clc
lods
call
lret
stos
or
dec
cmpsl
cwtl
stos
jbe
mov
pop
scas
xor
sbb
jl
ret
jle
outsb
daa
ljmp
popa
daa
and
push
or
outsb
stos
jecxz
dec
add
or
or
imul
adc
daa
testl
ficoms
stos
in
push
xchg
loopne
push
stos
xor
repnz
aaa
or
jbe
mov
push
pop
mov
push
inc
pusha
stos
vcvttss2si
cmp
fs
add
and
ret
push
ja
dec
movmskps
add
sub
jb
test
jo
mov
stos
cld
and
and
cmp
xor
jge
xchg
stos
jns
pop
push
cmp
or
jo
shrl
movsl
movsb
clc
sbb
lock
pop
cmp
je
int
mov
mov
lods
cli
test
sbb
inc
daa
movsb
stc
add
stos
mov
daa
pop
std
in
imul
pop
jb
dec
stos
jmp
dec
outsb
xor
sbb
dec
stos
test
pop
dec
mov
push
subb
jecxz
push
push
mov
int
cli
stos
clc
test
scas
jb
cmp
test
stos
xor
pop
jbe
stos
sbb
add
xor
add
sbb
jle
mov
pop
cmpsb
das
xchg
stos
imul
lods
cwtl
dec
jno
push
inc
mov
sbb
stos
sbb
out
or
sub
lcall
int3
lods
mov
or
stos
dec
and
sti
stos
mov
inc
pop
outsb
sbb
stos
ja
aaa
mov
jmp
push
jge
add
lahf
push
sbb
out
pop
ja
repz
add
cmpl
fdivrl
test
inc
add
loope
jmp
in
add
popa
or
push
mov
jne
inc
pop
jbe
push
addr16
cmc
and
push
data16
xor
call
jg
sbb
cwtl
push
bound
or
jae
mov
mov
jbe
stos
mov
pusha
xor
icebp
adc
stos
loope
gs
dec
daa
inc
mov
mov
xor
daa
sbb
fsts
push
pop
jne
adc
dec
inc
push
daa
mov
aaa
icebp
hlt
stc
stos
mov
maxps
sbb
loopne
or
or
ret
fwait
adc
sub
shrb
pop
sbb
test
mov
cmp
stos
mov
push
jne
nop
imul
arpl
mov
adc
add
add
mov
stos
aaa
loop
add
stos
nop
fldt
hlt
stos
cs
pop
dec
dec
push
mov
fldt
je
and
stos
inc
ds
and
mov
cmp
adc
mov
pop
insb
sahf
lods
sbb
lahf
stos
lret
fisttpl
int3
and
hlt
fildll
mov
xchg
aas
es
imul
cwtl
nop
stos
cmp
cmc
rep
aaa
imulb
insb
add
enter
xor
lret
xchg
cmp
sub
or
xchg
jge
and
popl
jb
sbb
push
stc
stos
clc
push
fistl
stos
outsl
mov
inc
decb
mov
nop
pushf
pusha
ljmp
sbb
fnstenv
int
movsb
lock
lea
or
push
aas
je
mov
mov
add
cwtl
jmp
fcmovnbe
lods
jo
inc
dec
dec
inc
cmp
ja
addb
push
xchg
mov
test
jecxz
or
lahf
xchg
inc
stos
xor
addr16
push
mov
popf
xchg
mov
push
mov
std
stos
mov
jno
arpl
mov
push
or
xchg
jno
out
cs
aas
mov
scas
iret
sahf
stos
in
dec
clc
jnp
adc
jecxz
bound
mov
mov
pop
fsubrl
cmp
pusha
push
test
cmp
fisubs
pop
stos
xor
inc
dec
stos
addr16
shll
jb
stos
ret
cmp
xchg
sbb
std
mov
in
negl
sbb
scas
inc
in
fwait
lea
add
mov
icebp
inc
inc
pop
stos
pop
sub
lods
mov
aam
jb
ret
test
lods
xor
stos
cs
out
jae
inc
stc
stos
enter
dec
out
in
int3
iret
stos
dec
sub
xchg
and
mov
push
in
sti
mov
adc
fildll
stos
push
ds
in
into
push
fldcw
shll
fwait
or
jmp
add
fwait
xchg
sub
fsub
cmp
and
push
mov
outsb
adc
jb
sbb
pop
int3
and
jecxz
stos
sub
push
shrl
add
mov
out
rep
lds
or
mov
mov
bound
push
add
je
rolb
mov
call
mov
jmp
sahf
mov
scas
insb
pcmpeqw
cmpsl
dec
dec
cltd
pop
inc
stos
icebp
mov
ret
popa
stos
cmp
dec
out
testl
int3
mov
das
xchg
iret
addr16
movsb
xchg
test
sbb
in
push
popf
jnp
mov
pop
add
stos
cmp
movsl
sbb
aam
mov
stos
ss
sti
adc
mov
xchg
int3
sbb
jmp
fcomps
ds
xchg
scas
adc
cld
lret
in
mov
mov
popf
enter
and
xor
mov
xor
enter
add
cmc
and
rcrb
data16
xchg
loop
outsb
in
xchg
fcomi
stos
in
sub
lods
xlat
push
int3
mov
pop
or
fidivl
ret
scas
movsl
aam
adc
jmp
and
insb
mov
pop
adc
fisubrl
mov
xor
inc
mov
push
stos
outsb
loope
hlt
test
cmp
mov
dec
cwtl
stos
cmc
aam
mov
loope
lods
imul
cmpsl
popa
hlt
stos
cmc
pop
roll
sub
mov
mov
stos
push
jnp
and
stos
mov
sbb
ret
das
xor
or
ds
and
fiadds
lret
lods
sbb
jmp
cs
insl
dec
bswap
xchg
test
stos
mov
in
fwait
aaa
push
cmp
test
dec
pushf
icebp
stos
lcall
adc
mov
or
mov
inc
stos
mov
mov
shrb
shrl
cs
and
or
push
adc
mov
gs
stos
pop
jg
ret
mov
dec
push
into
xor
jo
pop
ljmp
rol
aas
hlt
fwait
popf
stos
imul
stos
xchg
jge
adc
mov
scas
arpl
cs
cli
stos
push
mov
fwait
pop
ret
stos
mov
sbb
xchg
sbb
insl
stos
loope
stc
lock
out
subl
mov
clc
pop
lods
mov
xchg
stos
xchg
pop
das
pushf
mov
adc
daa
inc
jp
dec
cld
mov
mov
mov
add
inc
sub
and
sbb
rorb
jnp
jmp
lahf
mov
mov
ss
adc
jg
data16
stos
popf
mov
or
cmp
jmp
cmc
stos
jg
mov
iret
inc
dec
mov
mov
xchg
mov
scas
stos
leave
push
inc
test
jns
stos
jecxz
test
dec
aaa
xor
imulb
sub
jp
addl
dec
push
dec
pop
dec
mov
fadd
stc
xchg
scas
adc
in
and
in
lret
fsubl
mov
inc
jge
mov
jns
loope
cwtl
stos
inc
push
in
jne
sub
lret
lcall
push
lods
loop
add
pop
xchg
xchg
insb
stos
or
je
sub
stos
xchg
adc
or
mov
loopne
mov
mov
push
mov
adc
xor
xchg
nop
adc
inc
and
je
pop
stos
xchg
sbb
sbb
shrb
jmp
aad
std
mov
mov
mov
pushl
mov
or
int
dec
mov
shrl
inc
cli
push
outsb
stos
inc
ss
test
xor
loopne
fnstenv
imul
mov
stos
mov
jb
sti
mov
icebp
xor
jle
jmp
or
scas
in
cmc
xchg
mov
subl
sub
adc
push
lods
cmpsl
pop
pop
sti
test
out
pop
or
cwtl
les
scas
nop
sar
ljmp
mov
mov
loope
iret
lods
clc
stos
xor
mov
subl
stos
push
xchg
mov
pop
stos
popa
push
or
das
stos
test
adc
stos
dec
bound
inc
adc
outsb
dec
pop
cs
xchg
cmpsb
bound
mov
outsl
imul
repz
mov
scas
sub
lret
popa
stos
sub
in
pusha
mov
lds
mov
mov
repz
mov
mov
es
mov
test
push
mov
scas
xchg
mov
aad
mov
xchg
xchg
jb
adc
push
mov
dec
or
jbe
jge
mov
leave
js
adc
add
popf
bound
imul
out
pusha
arpl
mov
cmp
push
stc
rorl
mov
mov
pop
jnp
jnp
fldcw
test
dec
mov
call
mov
es
stos
addr16
mov
add
or
addl
push
jle
push
loopne
lods
gs
fsubrs
test
mov
lea
adc
and
add
fisubrs
scas
xchg
stos
out
pushf
ja
stc
inc
jo
inc
cmp
iret
adc
rcll
xor
lret
pop
ss
in
add
push
lds
sub
pushf
mov
cltd
dec
loopw
jge
mov
movsl
mov
jno
ret
jg
fistps
pushf
and
mov
adc
stos
sub
out
xchg
sub
sbb
stos
out
inc
jbe
stc
dec
in
stos
xor
pushf
jp
add
inc
cs
es
add
jmp
sub
frstpm(287
call
sub
inc
es
xor
ss
jns
ja
xchg
jo
mov
add
aad
pop
out
stos
sub
jnp
loope
pop
movsb
int3
push
mov
das
arpl
stos
outsb
popf
adc
adc
cmc
or
dec
stos
mov
add
stos
xor
push
sbb
dec
xchg
push
pop
mov
dec
or
stos
pop
ret
cmp
dec
sub
stos
test
fwait
add
scas
aam
lahf
jbe
jo
lock
sub
outsb
push
jge
mov
xor
pop
bound
ss
fwait
loop
int
imul
pop
rcrb
inc
testl
push
lea
sub
repnz
adc
adc
subl
xchg
mov
pop
lods
mov
sub
stos
add
sub
sarb
ret
pop
fs
mov
sub
subb
int3
xchg
addr16
ljmp
repnz
addr16
mov
in
negl
fisubl
lods
push
stos
xchg
or
lahf
mov
daa
mov
xchg
jle
imul
stos
cld
jmp
stos
les
stos
add
inc
mov
jmp
sub
jmp
fwait
mov
sbb
test
mov
shrl
push
push
sub
cmp
push
stos
jmp
adc
imul
aaa
movsl
or
insl
es
dec
stos
jns
xchg
movsl
mov
das
fcomps
aam
jmp
mov
into
and
mov
daa
stos
adc
sbb
xchg
xor
add
mov
repnz
and
je
scas
adc
fdivrs
sub
or
out
sub
in
stos
in
jae
or
dec
sarb
stos
insl
mov
xor
stos
push
pop
shlb
imul
scas
dec
or
ss
cmpl
ret
dec
bound
xchg
movsl
mov
add
and
lea
cmp
lret
pushf
mov
xchg
dec
push
stos
dec
daa
and
mov
pop
stos
cltd
in
push
xchg
pop
stos
aad
pop
sub
test
dec
fs
in
dec
nop
push
addr16
cmp
pusha
das
xchg
icebp
mov
out
push
stos
adc
js,pt
ja
xor
mov
mov
fimull
mov
xor
mov
cmp
bound
decb
stos
mov
in
into
push
jnp
clc
cmp
mov
stos
loopne
add
aam
leave
inc
cli
add
xor
int3
stos
je
lcall
push
fistpll
roll
in
ds
push
xchg
mov
xor
stos
dec
mov
stos
int
lcall
mov
repnz
not
das
jnp
arpl
pop
lea
sti
push
aas
push
xor
mov
xor
loop
push
push
dec
test
movsl
test
test
fldl
ljmp
jmp
and
out
dec
pop
xchg
rep
jmp
es
addr16
sahf
cmp
dec
xchg
pop
loopne
pusha
stos
bound
inc
scas
fwait
mov
sarb
dec
cmpsl
jae
xchg
push
stos
mov
jle
or
daa
sub
fimull
and
clc
stos
lds
stc
pop
xchg
sub
xchg
adc
jl
jle
fnsetpm(287
ja
rcrl
stos
insb
fstpl
hlt
jle
out
stos
inc
std
mov
mov
or
fcoms
movsb
xor
fwait
inc
loop
loope
dec
stos
xchg
xchg
cmp
push
push
seto
cmp
stc
cmpsb
lcall
andb
xchg
adc
jecxz
fstpt
fbstp
fwait
mov
sub
xor
mov
imul
mov
stos
push
movsl
ret
sub
stos
repnz
jae
sbb
cmp
sub
xor
scas
mov
push
ljmp
ret
sti
bound
jg
mov
pop
jge
or
jecxz
out
cmp
popf
stos
mov
aaa
dec
aad
mov
enter
add
out
stos
add
test
paddsb
pusha
arpl
mov
adc
mov
and
andb
int3
ja
adc
test
stos
jge
mov
xchg
stos
popf
fdivrp
adc
adc
stos
cmpsb
push
or
les
xchg
dec
add
aam
push
neg
ss
inc
stos
mov
jge
sbb
mov
inc
cli
ficompl
and
dec
cmpsl
mov
xchg
fsubrs
and
movsb
jae
imulb
inc
mov
and
test
xor
outsl
jge
clc
std
es
jbe
mov
imul
stos
popf
xchg
mov
scas
in
and
sub
cli
dec
cmp
imul
aam
mov
jns
or
mov
dec
jne
inc
insb
scas
jnp
clc
jns
aam
stos
sub
movb
stos
xchg
aaa
out
shr
sub
in
in
or
mov
enter
or
insl
out
sub
fwait
aas
daa
fistps
fildl
mov
xchg
mov
lock
cmp
xchg
lahf
and
movsb
or
add
test
sub
add
push
mov
addr16
dec
daa
mov
stos
cmpsb
and
lret
and
imul
cmp
mov
cli
inc
ficomps
stos
mov
pmulhw
pop
push
aam
mov
lret
xchg
mov
push
stos
test
push
aaa
mov
out
fldenv
push
jecxz
stos
xor
shl
andb
pop
and
sub
jge
jmp
aas
inc
pop
push
insl
mov
stos
pop
xor
lcall
mov
or
jmp
mov
jl
dec
inc
adcl
mov
sbb
xor
sub
stos
pop
inc
jp
std
push
dec
es
mov
pop
mov
and
mov
xchg
lock
imul
push
stos
lods
inc
mov
xor
push
add
xor
push
mov
sti
dec
adc
lds
jl
jnp
or
push
loop
insl
inc
cmpl
imul
ds
sahf
adc
popf
lahf
ljmp
sub
pop
mov
mov
lods
cwtl
xchg
jge
or
dec
stos
jno
jmp
adc
addr16
in
lods
mov
pop
pop
testl
mov
daa
ljmp
int
lcall
cmp
pop
cli
stos
xlat
jbe
sbb
sarb
pop
xchg
adc
stos
inc
add
mov
stos
aad
call
lcall
push
xlat
pop
stc
fs
xchg
pop
in
mov
fwait
xchg
fcoms
mov
mov
leave
push
xlat
sub
pop
xchg
lods
xor
das
lcall
js
xchg
push
inc
add
mov
pop
stos
mov
cmc
into
jne
pusha
jecxz
stos
jge
xor
cli
ds
ja
cld
sub
xor
push
xchg
cwtl
ret
daa
jo
iret
adc
fucomp
decb
repz
sbb
inc
stos
and
fsubs
xorb
movb
sahf
push
sarl
or
pop
mov
pushf
test
or
or
in
xchg
insb
rcrl
xchg
ret
pop
fists
sbb
cmpb
adc
insb
fdivrs
insl
sahf
rorb
mov
cmp
cli
lcall
stos
pop
gs
xchg
add
int
xchg
hlt
mov
pop
inc
dec
repnz
nop
inc
adc
icebp
adc
cmp
int
in
pop
jmp
stos
test
dec
addr16
jo
lret
fstl
pushw
xchg
dec
pop
stos
pop
lret
rcrb
stos
adc
mov
enter
jle
pop
or
jmp
aam
fwait
push
mov
insb
stos
and
xchg
jne
movsl
mov
jle
shll
addr16
push
in
adc
inc
jmp
adc
xchg
push
or
mov
test
daa
aam
shlb
xchg
rcll
lds
lahf
ficoml
cwtl
daa
lods
inc
add
and
and
mov
stos
int
cvttps2pi
pop
xor
outsb
push
fwait
jnp
mov
jns
or
aad
mov
js
mov
rclb
xchg
or
xchg
push
cltd
stos
or
add
in
fcoms
in
mov
je
pop
das
test
pop
dec
sbb
iret
mov
xor
jle
addr16
and
adc
mov
shr
fmuls
por
ja
mov
sbb
sbb
stos
fnsave
jge
pop
imul
stos
push
sub
or
in
mov
int3
cmp
xorl
cmpsb
or
mov
xor
arpl
adc
push
rolb
adc
mov
aas
push
sbb
int3
scas
stos
fcomip
push
or
or
stos
aad
cmp
xchg
mov
mov
ja
bound
test
xchg
dec
pop
push
sbb
shll
popf
and
mov
out
stos
xchg
push
insb
in
adc
js
lods
adc
jmp
jns
incl
ja
sbbb
jb
adc
mov
xchg
fwait
in
xorb
sub
mov
mov
jno
outsb
mov
inc
shll
push
into
fistpl
sub
hlt
xor
adc
pop
pusha
mov
push
movsl
clc
stos
jnp
lret
pop
shr
lds
push
mov
jne
das
enter
stos
aad
inc
insl
lods
repz
stos
in
mov
adc
fcomp
daa
xchg
dec
subb
jnp
xor
or
in
mov
adc
fwait
stos
mov
mov
addl
stos
adc
cmp
daa
scas
xchg
mov
enter
stos
pop
xchg
icebp
leave
in
dec
sbb
movsb
lea
stos
sahf
jns
les
ss
addr16
dec
stos
xchg
imul
stos
lock
sbb
gs
mov
jle
adc
mov
xchg
mov
jmp
and
sub
stos
sub
mov
fsubr
stc
stos
sbb
cmpsl
psrld
mov
mov
mov
loope
and
pop
mov
mov
sbb
imul
sub
mov
mov
push
sub
jecxz
pop
xchg
out
icebp
cld
jae
stos
sbbl
jmp
jecxz
push
fsts
nop
mov
stos
mov
jo
loope
in
aad
and
outsl
push
lahf
push
fadd
push
stos
xchg
testl
imul
ret
xchg
insl
and
stos
push
dec
mov
mov
fwait
sbb
cmp
nop
popl
ljmp
xchg
push
gs
int
jl
into
test
stos
cld
popf
xchg
inc
mov
add
adc
stos
xor
cmp
in
push
test
leave
fyl2x
stos
int3
mov
jp
stos
fwait
inc
dec
xor
add
sbb
hlt
push
outsl
pop
call
xor
stos
andl
jle
sub
add
pop
stos
xchg
or
xlat
stos
or
cmpsb
dec
dec
inc
loopne
stos
and
ss
mov
dec
incl
xchg
and
imul
xor
fwait
mov
jmp
iret
flds
ljmp
in
jl
stos
add
xor
data16
inc
adc
xchg
inc
dec
lods
sub
jno
stos
push
repz
xchg
int3
pop
cmpsb
push
stos
cli
mov
call
cmp
mov
stos
jno
dec
dec
inc
fisubrl
arpl
mov
inc
add
jnp
jno
push
xchg
mov
stos
push
and
xchg
stos
iret
add
mov
gs
jmp
lcall
pop
fisttpll
push
inc
pop
adc
in
test
mov
push
jg
inc
stos
mov
loopne
dec
sti
xor
ficoml
shrl
aad
imul
jae
or
icebp
jmp
sub
and
bts
jnp
jmp
or
into
stos
xchg
ljmp
cmp
sbb
pop
mov
cs
sub
stos
orl
mov
leave
sbb
pop
ja
movsb
dec
scas
sti
stos
sub
lds
jmp
push
mov
pop
and
mov
mov
daa
std
sub
jne
xchg
aad
stos
outsl
mov
imul
jb
fxch
lcall
xchg
inc
insl
das
xor
leave
cmpsb
cmp
pop
into
and
and
jge
daa
sbb
cld
call
mov
xchg
mov
je
jb
stos
dec
jp
adc
mov
adc
sbb
mov
repz
pop
pushf
stos
fdivl
cwtl
push
jge
fstpl
inc
mov
arpl
int3
rcrl
stos
es
mov
daa
add
loopne
lret
fldt
mov
xchg
sub
xchg
in
in
ss
inc
pusha
hlt
and
fistps
jo
daa
test
call
je
xor
stos
dec
cli
cmp
xor
or
fwait
repz
xchg
mov
std
stos
fadds
jno
aas
enter
lods
stos
add
jns
fwait
rorl
push
and
leave
sub
into
icebp
mov
stos
and
shll
adc
sbb
lret
push
sbbl
push
mov
jg
xlat
cmp
xor
stos
nop
xchg
dec
stos
push
xorb
cld
in
push
fisttpll
clc
and
repz
aaa
es
pusha
sub
movsl
fisubl
mov
das
jp
and
pop
lahf
add
data16
stos
aad
jmp
dec
stos
xor
sbb
stos
sbb
mov
movsb
add
stos
imul
xor
nop
pop
and
sbb
jae
sbb
in
jmp
push
iret
sub
test
mov
daa
add
stos
sub
inc
push
mov
lahf
fistpll
fwait
dec
inc
mov
stos
jno
std
ret
xor
lods
arpl
add
jp
loope
cli
sub
or
stos
ss
sub
out
push
loope
inc
inc
sub
fcomps
lea
stos
cltd
test
test
stos
daa
pop
sti
bound
xor
cmp
xor
leave
stos
enter
adc
arpl
nop
test
stos
cmp
adc
jns
mov
pop
stos
push
aaa
lods
adc
pop
mov
mov
orl
mov
and
pop
clc
stos
or
loope
xchg
pop
out
inc
stos
pop
adc
cmc
out
test
mov
dec
jno
daa
push
jmp
dec
push
in
stc
stos
add
pop
stos
mov
pop
or
dec
add
dec
cmpsb
jo
stos
or
das
mov
fldl
bound
ret
test
jae
jge
stc
lds
pop
lcall
jecxz
repz
mov
andl
jmp
pop
data16
in
push
jge
mov
pop
ret
outsl
xor
adc
mov
imul
cmp
inc
mov
mov
mov
stos
pusha
add
lcall
mov
pop
push
lea
xchg
lret
add
imul
jb
and
popf
shlb
std
mov
lea
fwait
cmpsb
or
out
mov
clc
leave
sub
pop
and
shl
stos
sub
inc
push
add
and
mov
icebp
lret
daa
pop
sub
add
dec
xchg
stos
lods
sbb
pop
sbb
mov
std
sbbb
or
sbb
inc
sarb
push
add
cltd
sub
stos
xor
aaa
cld
sarl
stos
inc
push
mov
in
push
cmp
push
push
pop
fisttpl
inc
scas
mov
sbb
nop
cltd
fisubrl
jae
jb
arpl
push
mov
adc
stos
das
mov
sbb
pushf
jb
adc
pop
or
inc
stos
pusha
movsb
or
ret
stos
xchg
outsl
cmc
mov
cmp
je
fucomp
pop
or
mov
jmp
in
pop
pop
lret
mov
enter
outsl
js
clc
sub
mov
mov
dec
pop
stos
loop
lods
cmc
pop
dec
push
and
stos
test
mov
ds
xorl
jnp
xor
mov
xchg
inc
jnp
stos
cmp
and
jmp
clc
or
mov
stos
jnp
xor
adc
cmp
stc
jl
stos
sub
popa
ljmp
dec
arpl
dec
imul
sub
or
rcr
stos
pop
mov
andl
xchg
daa
stos
test
lods
jle
mov
sbb
stos
pushf
cmp
loop
lahf
neg
mov
push
out
cltd
pop
lods
cmpl
push
inc
out
sub
xlat
stos
out
dec
mov
stos
lock
in
scas
mov
mov
andl
std
jl
fs
jge
idiv
adc
jbe
mov
pop
mov
sub
and
scas
cld
stos
imul
cmp
adc
pop
mov
add
sti
and
das
stos
xchg
repnz
pop
or
stos
stc
pop
mov
xor
or
push
push
jns
jmp
mov
pop
xchg
cmpsb
stos
movsb
add
mov
stos
out
lcall
les
popf
and
mov
mov
aam
leave
xor
adc
ja
lds
sub
scas
jnp
jne
mov
insl
stos
fcomi
xor
insb
in
push
mov
mov
orb
jmp
rcrl
mov
xor
repz
add
subl
or
and
orb
addr16
inc
pop
hlt
loop
mov
or
jae
fidivrl
fildl
cmc
arpl
dec
push
loopne
stos
sarb
adc
stos
push
call
hlt
stos
push
dec
sbb
sbb
xchg
xchg
shrl
stos
add
xor
lock
arpl
fisubl
mov
mov
mov
mov
stos
jge
xlat
fistpll
lahf
mov
sub
out
mov
xchg
in
sub
loop
push
xchg
btc
sub
aam
dec
push
xor
insl
or
stos
xor
inc
fsubrl
mov
xor
mov
xlat
popf
mov
xor
sub
int3
pop
jmp
stos
in
jno
sub
or
jne
push
lret
xor
aam
pop
cmc
mov
mov
clc
xor
xor
pop
jno
aam
outsb
xchg
subl
in
mov
addr16
rolb
mov
xchg
test
and
xchg
scas
cli
dec
push
push
in
outsl
ret
es
imulb
mov
stos
scas
push
and
cmp
jmp
lods
out
mov
stos
outsb
adc
lea
imul
subb
push
push
fwait
xor
rol
stos
cmp
fwait
les
pop
cld
mov
out
pop
or
mov
ss
mov
inc
pop
xchg
pusha
cld
push
fsts
shlb
scas
pop
iret
stos
insl
inc
test
mov
nop
inc
lret
add
mov
lds
addr16
sti
cltd
shl
int
push
arpl
dec
out
aaa
fwait
mov
shrb
iret
notl
sub
sub
xchg
insl
mov
pop
or
xchg
or
push
aas
scas
ret
shlb
xchg
pop
ljmp
mov
xlat
push
dec
insl
pushf
pop
xchg
cmp
cltd
loope
in
mov
push
test
mov
stos
out
mov
adc
lods
push
jb
stos
lock
movsl
push
cmp
clc
lret
mov
sub
lds
stos
inc
stos
cld
scas
pop
stos
add
inc
subb
fidivs
sbb
push
std
sti
xchg
cmpsl
dec
jl
mov
popa
push
mov
cwtl
loopne
mov
jle
enter
or
and
xchg
nop
in
orl
bound
xchg
rcll
fsubs
cmpsb
loopne
xor
stos
pop
jge
mov
sub
stos
add
dec
xchg
aam
cmp
cmp
idivl
jmp
cmpsb
or
std
mov
stos
add
lea
movsl
stos
and
cmpb
stos
xchg
cmp
stos
push
cltd
push
out
fisubrs
ret
jo
divl
lods
xchg
stos
mov
lret
aad
adc
fmuls
ss
loop
xchg
pop
adc
mov
stos
jmp
lcall
bound
ficoms
or
fstpt
stos
sub
es
imul
ss
mov
xor
bound
aaa
cmpsl
mov
daa
mov
pusha
daa
cmp
loopne
mov
enter
cmp
rcl
dec
jmp
stos
and
inc
mov
xorl
jnp
nop
aam
fwait
outsb
rclb
mov
pop
pop
push
cmp
pop
jmp
or
xchg
mov
or
jmp
jl
je
stos
outsb
jae
stc
and
stos
xchg
int3
cld
rcrl
push
stos
mulb
in
mov
sub
adc
inc
fucomip
imul
outsl
arpl
sbb
imull
das
dec
test
outsb
push
push
xor
rolb
pop
fisubl
pop
stos
push
ja
jmp
stos
aas
lret
movsb
scas
ss
ret
mov
call
in
dec
test
jmp
push
or
cld
stos
test
fistps
jbe
ds
xchg
mov
pushf
pop
jmp
loop
or
jb
lcall
or
int
mov
mov
bound
addr16
cmp
adc
shlb
inc
dec
mov
adc
pusha
lret
mov
mov
pop
fidivl
fwait
jbe
stos
call
imul
mov
jmp
xor
jnp
fwait
cmpsb
imul
dec
addr16
sbb
lods
xchg
mov
icebp
std
test
lock
dec
dec
mov
cmpsb
jmp
mov
xchg
jmp
lds
mov
daa
jmp
jmp
jmp
sbb
dec
mov
jno
repz
jb
and
mov
bnd
into
pop
mov
jbe
lock
sub
cmp
jnp
ljmp
jg
push
arpl
in
out
cmpsl
cmp
loope
movsb
test
jmp
mov
cmpsl
loop
stc
mov
and
mov
test
ss
jb
mov
mov
sub
ljmp
dec
sbb
push
mov
push
addr16
cmpsb
loope
cmpsb
stos
mov
mov
pusha
xchg
mov
ficompl
xor
jno
sub
mov
xchg
mov
mov
mov
push
out
jp
mov
popf
jmp
mov
mov
mov
shrl
ss
popa
mov
mov
xlat
mov
mov
lea
mov
xorl
jb
std
cmpsb
fwait
mov
mov
repnz
lcall
mov
inc
mov
aam
xchg
ret
mov
fwait
into
ja
cmpsb
lahf
imul
mov
or
or
mov
mov
and
dec
call
out
call
mov
pop
xchg
movsb
test
pop
mov
mov
and
dec
pop
dec
lcall
jnp
dec
imul
popf
popa
jb
dec
mov
int
inc
add
ds
add
imul
cmpsl
or
inc
int
lock
call
xor
jne
mov
mov
adc
fwait
pop
adcb
outsb
inc
leave
out
sbb
in
cld
mov
fs
imul
sbb
xchg
jmp
jne
mov
sbb
xchg
jno
dec
in
and
xlat
adc
mov
sti
dec
nop
mov
jle
sub
mov
and
fnsave
out
push
push
data16
xchg
jmp
std
mov
es
daa
idivl
jns
fmuls
jmp
xor
fs
fwait
xor
sub
mov
divl
cmp
mov
adc
cmpsl
call
jbe
mov
mov
and
xlat
push
xor
call
lret
jle
sbb
and
pop
mov
sub
jmp
xchg
mov
or
pop
xchg
or
pop
insl
xlat
daa
pusha
in
dec
fcomi
sub
mov
jl
shrl
outsb
ret
scas
sbb
push
cmpb
or
stc
pop
mov
and
xor
add
dec
cmp
mov
or
fldl2e
mov
dec
dec
test
loopne
cmpsl
xor
xchg
outsb
test
test
cmpsl
xorl
add
daa
sub
jle
xchg
jns
sub
dec
sbb
sub
adc
stc
cmp
js
cmpsb
jmp
daa
ss
and
cld
jbe
imul
imul
ljmp
sub
sti
cltd
xor
cmpl
mov
mov
lret
or
shll
loopne
data16
test
sahf
call
push
inc
cmpb
jmp
jge
push
cltd
pop
mov
jl
out
test
push
in
lds
mov
ljmp
xchg
push
cmp
mov
or
imulb
movsb
xchg
sub
ljmp
jle
pop
push
add
pop
mov
push
mov
ds
cmc
mov
dec
nop
xchg
mov
lahf
xchg
mov
jmp
mov
xchg
sub
test
sub
into
and
mov
bound
ljmp
mov
cmp
int3
add
mov
cmpsl
jo
dec
call
add
jge
mov
mov
mov
scas
and
ss
decb
xor
mov
test
cmp
mov
hlt
les
test
inc
sub
call
orl
xchg
add
mov
dec
mov
mov
mov
mov
loope
mov
in
add
jb
push
imull
cmp
mov
xchg
pop
out
dec
xchg
popa
jnp
stos
add
inc
out
and
cld
xchg
insl
jle
out
test
mov
jmp
mov
and
sub
test
mov
dec
and
and
iret
lods
jl
push
test
mov
das
stos
xchg
bound
dec
shlb
mov
movl
out
movsb
mov
mov
push
je
mov
in
xchg
or
leave
pop
mov
out
mov
xor
xchg
xchg
nop
push
and
jl
xchg
dec
call
mov
adc
jl
out
bound
inc
mov
mov
cmp
call
jle
xchg
sub
imul
adc
mov
mov
mov
test
leave
sub
xchg
add
inc
ret
mov
mov
mov
call
mov
push
and
daa
cmpsb
mov
lret
cmp
or
icebp
mov
mov
and
adc
dec
mov
xor
xchg
in
loopne
fidivrs
sti
pop
inc
mull
adc
mov
dec
in
mov
cmp
mov
movsb
mov
mov
mov
lcall
sar
stc
outsl
sub
pop
es
pop
andb
or
mov
mov
mov
call
jnp
jecxz
sub
mov
adc
loope
negl
lret
mov
dec
es
daa
daa
lock
stos
popa
sbb
ljmp
mov
adc
cli
popf
adc
lret
jmp
add
and
mov
stos
test
test
test
xchg
xchg
mov
mov
test
push
pusha
dec
mov
dec
dec
fisttpl
mov
mov
fwait
cmpsb
mov
xchg
orl
shrl
dec
mov
jle
lret
or
test
mov
push
mov
sub
cmp
mov
pop
sbb
fucomi
imul
ret
int3
lret
mov
mov
leave
test
mov
cmp
ljmp
mov
mov
imul
xchg
into
mov
and
xorb
sub
pop
mov
out
mov
xchg
add
sub
test
add
leave
cmp
and
mov
inc
and
cld
gs
jp
insb
push
inc
xchg
jecxz
ret
out
cmc
inc
fstps
sbb
xor
add
cmpl
aas
enter
dec
lods
test
jbe
mov
dec
cmp
pop
inc
add
pop
mov
test
xchg
lds
in
test
andl
popf
inc
subl
push
adc
mov
add
or
cmp
daa
mov
mov
fstpt
insb
sub
aam
sub
pop
sbb
mov
ds
fwait
sub
mov
mov
imulb
nop
cmc
movsl
cli
mov
and
sub
jl
test
mov
jg
mov
test
inc
sub
mov
into
fxtract
imul
movsl
xchg
xchg
jmp
test
and
pop
stos
mov
fincstp
enter
leave
sbb
mov
sti
rcll
ret
loopne
mov
sub
movsl
mov
into
movsb
inc
aad
test
dec
cmp
fisubs
mov
jecxz
sub
dec
lcall
xchg
outsl
in
cmp
or
insb
in
cmpsb
mov
les
add
lds
add
cmp
mov
cmp
cmpsl
lahf
adc
ds
jge
inc
into
stos
fwait
and
or
jg
jge
imul
xchg
sub
mov
jmp
mov
and
call
mov
lret
cwtl
mov
jp
es
adc
dec
mov
and
fsubs
es
into
cwtl
dec
ret
push
iret
lcall
repnz
movsl
push
add
sub
sbb
movsl
cltd
mov
or
es
mov
cmp
push
insl
inc
mov
lods
loop
cmp
call
enter
dec
in
push
push
test
push
in
movsl
xchg
nop
test
ljmp
xchg
jp
leave
sbb
mov
cmp
js
into
outsb
lret
mov
cmp
sub
jnp
icebp
cmp
inc
sub
inc
push
push
sub
mov
sti
inc
push
into
stos
loop
mov
jbe
mov
cltd
push
popa
push
inc
cmc
cmpsb
push
lods
hlt
mov
nop
inc
xor
pushf
data16
mov
aaa
and
mov
xor
test
cmp
mov
test
mov
aad
jl
or
sub
roll
add
lret
cmp
sbb
jo
nop
mov
into
in
mov
lahf
mov
lods
repz
mov
test
imul
jl
leave
rorb
cltd
imul
cmp
mov
pop
dec
adc
mov
stos
mov
cmpsb
dec
jmp
mov
jb
mov
push
and
in
pop
sub
ljmp
pop
repz
lret
je
push
push
sub
sbb
fstps
jmp
push
sub
mov
cmc
ljmp
xor
ss
mov
xor
into
cmpsb
dec
mov
and
or
dec
lods
ss
cmc
into
sub
xchg
inc
cmpsb
sub
lret
dec
mov
xchg
and
and
fmull
and
mov
ljmp
sub
mov
hlt
cmpsl
or
loop
repz
mov
or
and
sub
data16
mov
jmp
dec
stos
mov
mov
cmp
xor
loope
xchg
add
mov
cmpsl
mov
popa
jb
bound
popf
jp
xor
jp
sub
es
jl
pop
mov
xor
pop
fnstcw
dec
daa
mov
in
mov
push
mov
jbe
mov
sub
movsl
sahf
or
fisttpll
test
test
mov
int3
loop
cmc
ret
je
or
jg
mov
lcall
pop
mov
lock
repnz
in
mov
mov
fstps
cmp
pop
pop
into
movsl
push
pop
fs
imul
imul
or
in
cmpsb
ret
mov
xor
and
movl
test
and
imul
and
mov
es
mov
dec
sbb
mov
sti
movsb
or
push
popa
mov
xchg
insl
fnstcw
ds
daa
js
aad
xor
sub
rolb
inc
xlat
and
daa
jecxz
lods
cmpsl
movsl
xchg
movsl
push
xor
jno
cmp
mov
movsb
lret
push
xorb
cld
sub
xchg
and
push
cld
mov
out
std
or
adc
add
sbb
out
test
stos
xor
and
lret
sub
mov
out
ss
or
mov
movsl
dec
enter
push
cmp
mov
lods
mov
test
movsl
mov
ss
xor
mov
mov
test
lds
mov
mov
imul
jb
jl,pn
out
xor
nop
mov
sbb
mov
cltd
mov
out
jmp
mov
xor
jae
and
incl
or
xor
popaw
scas
add
addb
cli
xor
xlat
sub
orl
cltd
cmpsl
mov
scas
push
jne
and
mov
pusha
lret
sub
pop
push
mov
mov
push
adc
std
sahf
test
push
loope
je
push
jo
loope
pushf
jbe
lea
lret
or
test
xor
stos
mov
sub
dec
aam
out
es
dec
cmp
xchg
sub
push
out
cmp
lret
xchg
jno
dec
cld
call
adc
out
sub
sub
mov
out
lret
cmp
mov
lock
leave
loop
push
fmull
adc
lret
stos
push
dec
sub
mov
mov
adc
addr16
scas
shll
xchg
hlt
xchg
pop
cld
addr16
cmpl
push
and
dec
mov
fnstenv
lods
lret
leave
xchg
sar
inc
xor
xor
addr16
or
mov
shrl
xchg
push
mov
je
mov
jl
sahf
inc
cltd
dec
std
mov
icebp
mov
popa
fistl
ret
mov
into
push
sub
xor
test
js
xor
and
popa
mov
mov
out
jo
inc
pop
les
out
mov
sub
xor
call
cltd
mov
xor
xorb
ja
repnz
adc
inc
pop
jle
fsubs
pop
sub
dec
mov
repnz
loope
test
pop
in
sub
ljmp
or
add
mov
push
stos
fldt
xchg
xchg
push
mov
push
in
mov
shlb
out
cmp
rcll
mov
push
add
xor
test
js
cltd
cmc
movsb
fnsave
adc
mov
cmpsb
or
in
adc
popa
xchg
mov
and
mov
sarb
inc
add
mov
xlat
cmpsl
mov
pop
mov
lret
or
pusha
in
and
fwait
jmp
add
push
shlb
mov
cltd
aas
mov
lods
xor
mov
mov
push
movsb
jne
lods
sbb
lods
test
and
scas
cmp
rcrb
mov
enter
sub
inc
ret
xchg
aaa
mov
or
loope
addr16
imul
or
cmp
sbb
fldt
lret
mov
ja
jns
sbb
push
daa
pop
cmpsl
xchg
sub
enter
call
test
sub
in
out
push
sbb
jb
push
cmp
leave
adc
out
mov
xor
out
adc
repz
insl
sbb
mov
pop
aaa
push
xchg
xchg
jae
xor
sub
push
mov
es
in
cmpsb
mov
mov
sub
cmp
mov
cmpsb
sub
shl
dec
lahf
mov
in
xchg
inc
sub
fstps
xchg
cmc
jl
test
xor
lret
jmp
into
imul
lret
add
popf
test
inc
std
movsl
mov
mov
cld
mov
je
jne
push
mov
lahf
mov
jl
lret
cmc
sbb
cmp
adc
lock
ljmp
xor
push
ret
push
mov
das
mov
clc
outsl
sub
aas
sbb
jl
repz
out
or
xlat
pop
mov
enter
fistl
stos
add
add
jl
pop
stos
mov
paddq
stos
dec
cmpsb
dec
imulb
test
mov
mov
imul
or
sti
fistps
movsb
add
ret
jecxz
sbb
dec
jecxz
leave
cmc
inc
stc
push
xchg
push
ss
dec
cmpsl
clc
shll
jns
cmp
in
or
ret
cmpsl
jbe
cmp
out
sub
mov
push
imul
and
inc
sub
fisttpl
mov
andb
xchg
lds
fmul
push
pop
push
mov
cmc
add
xlat
or
mov
ret
fildl
shrl
or
out
sahf
test
call
mov
loopne
xorb
and
pop
andb
out
dec
test
popf
lods
dec
jp
es
cmpsl
test
jne
push
sbbl
push
xchg
xlat
xchg
loopne
movsl
mov
fnstenv
jns
andb
lds
mov
nop
roll
scas
or
cs
daa
mov
jne
idivb
sub
jnp
cltd
add
push
aad
xor
lret
ja
add
mov
xchg
imul
xchg
fs
xor
adc
xchg
enter
ja
stos
sbb
stos
mov
out
arpl
sar
xchg
jns
mov
sarb
mov
lcall
xor
jmp
and
xchg
ljmp
movsb
pop
cmp
mov
push
mov
cli
and
es
push
stc
into
and
in
xor
pop
mov
mov
or
repz
data16
or
daa
ja
mov
cmp
inc
sbb
sbb
mov
es
mov
in
xchg
cwtl
push
add
test
cmpsl
ret
mov
sbb
hlt
push
or
insl
pop
ds
cmpsb
mov
cwtl
in
test
ret
mov
loopne
dec
pop
sbb
in
shll
insl
out
cltd
mov
daa
enter
xchg
movsb
mov
lahf
loope
jmp
xlat
or
mov
cmp
jmp
jns
test
pop
push
es
sbb
pop
mov
stc
shl
mov
sti
adc
add
xchg
cmp
test
jmp
mov
mov
subb
xchg
leave
push
inc
mov
mov
dec
cmpb
cmpb
orb
scas
mov
out
cmp
or
mov
xchg
jp
sub
xlat
xorb
test
mov
xchg
mov
mov
xchg
lods
cmpsl
out
mov
xor
xchg
cmpsl
pusha
mov
mov
mov
mov
aam
cmc
aaa
pop
ja
jne
and
lds
mov
mov
fidivrs
subb
subb
mov
enter
mov
xchg
jmp
scas
lods
jle
jnp
orb
movsl
sbb
cmpsb
dec
cmpb
push
mov
stos
push
ja
pusha
mov
jmp
mov
mov
cmpsl
pushf
mov
pusha
popf
repnz
in
cmpsl
stos
loopne
sbb
mov
push
repnz
imul
movsb
xorl
arpl
dec
push
sub
mov
xchg
pop
fisttpl
int
iret
dec
push
call
mov
sti
mov
and
push
xchg
mov
lock
adc
movsb
lock
and
fsubrl
cld
mov
xor
and
and
mov
std
cmc
sbb
xor
ss
sbbb
mov
mov
test
leave
lahf
adc
sub
gs
mov
dec
in
push
xor
cmp
push
insl
scas
cmpsl
mov
cli
scas
pop
fmull
test
stos
xor
push
fisttpll
sbb
test
imull
ljmp
jb
mov
pop
mov
stos
out
movsl
movsl
dec
cltd
mov
jl
enter
or
lods
das
repz
iret
enter
mov
stos
push
jmp
push
inc
and
inc
stos
or
out
cmpsb
sub
test
push
mov
push
mov
sub
lret
push
js
mov
into
fs
cmp
add
mov
mov
cmp
inc
test
and
pop
mov
pop
sub
jge
mov
push
push
cmpsl
push
push
mov
push
add
pop
pop
jne
xchg
jg
sub
sub
push
mov
jle
sbb
enter
pop
sbb
daa
add
jbe
xchg
jle
xchg
xchg
mov
cmp
fnop
idivl
push
fistl
xor
pop
mov
mov
jle
add
push
icebp
jmp
in
sbb
rol
stos
into
movsb
loop
push
outsb
or
ss
lea
adc
cmp
cmp
xchg
scas
popa
sbb
xchg
cmpsl
and
mov
push
mov
mov
pop
shrb
sub
ljmp
jmp
jne
xor
cwtl
scas
xor
jmp
scas
ja
jle
cmpsb
xchg
imul
push
sub
into
out
mov
imul
or
repz
push
mov
mov
jno
repnz
into
xor
xchg
push
push
mov
mov
or
rcll
inc
jns
andl
sub
pop
push
and
insl
pushf
repz
pop
shrl
mov
outsb
add
cmp
xor
pop
xchg
stc
leave
insl
xlat
mov
test
idiv
fprem
enter
icebp
lret
sarl
test
or
lret
movsl
dec
nop
pusha
cltd
jge
lcall
daa
stos
mov
mov
jne
inc
shll
dec
stos
add
into
jmp
or
loop
les
daa
stos
add
sbbb
arpl
call
ljmp
bts
test
scas
stos
shrl
jg
pop
pusha
mov
lret
sub
into
jmp
imul
jge
sbb
ret
jcxz
mov
idivl
pusha
int
fldt
jle
icebp
fldenv
stos
sub
and
cmp
dec
addr16
stc
sub
addr16
adc
cmpsb
dec
movsb
push
lods
imulb
test
inc
es
jmp
or
sub
cmp
jnp
cmp
xor
dec
js
jl
test
mov
and
dec
sbb
inc
daa
mov
jecxz
popf
mov
mov
push
sub
cmp
test
sub
stos
fimuls
test
je
int
scas
leave
xor
imulb
mov
xchg
call
mov
hlt
lahf
outsl
mov
inc
scas
add
adc
lahf
shrl
loop
insb
stos
cmp
xor
or
mov
call
lahf
adc
jb
pop
cmpsb
mov
mov
sbb
jmp
push
das
insl
adc
mov
and
js
andl
sti
lcall
and
xchg
leave
aaa
subb
into
push
hlt
mov
mov
adc
mov
adc
stos
xchg
lret
xchg
sbb
cmp
and
mov
loop
mov
mov
addr16
fistl
int3
insl
push
or
loopne
leave
shr
in
maskmovq
idivl
loope
loop
jns
mov
jecxz
add
xchg
cltd
or
xchg
mov
jmp
insl
ja
inc
iret
and
call
xor
push
icebp
test
lods
mov
xchg
jbe
loope
adc
mov
jmp
cmp
mov
adc
mov
jecxz
mov
pop
mov
sbb
jmp
dec
mov
sub
lea
push
movsb
mov
data16
test
daa
sahf
mov
into
mov
cs
cltd
add
xchg
lcall
mov
cmp
lods
and
icebp
mov
jl
bound
test
jbe
cli
leave
cld
popa
ret
popa
aaa
cmp
push
in
fdivs
mov
lods
fistpl
gs
shrl
in
sub
mov
jns
push
scas
push
add
jmp
push
jo
arpl
push
ret
cmp
push
push
add
test
push
dec
pop
cmpsb
mov
mov
out
int
adc
xchg
ret
popa
out
and
jge
adc
dec
out
dec
test
notb
mov
mull
xchg
mov
push
addr16
cmpsb
jbe
adc
cmc
adc
dec
jp
jmp
movsl
fwait
shll
leave
in
add
cltd
imulb
sahf
aaa
das
mov
mov
popw
pusha
mov
addr16
mov
pop
gs
mov
mov
jae
imul
enter
jle
imul
dec
stc
mov
call
stos
pop
jae
push
insl
dec
jp
xor
mov
pusha
fldenv
add
sbb
aaa
aaa
dec
lret
xchg
cltd
insl
mov
call
and
jmp
dec
imul
push
loop
adcl
sbb
mov
mov
into
cmc
mov
jecxz
push
popf
sbb
mov
clc
or
mov
dec
lds
loopne
or
push
aad
sub
cmp
xchg
in
int
shlb
test
xchg
fwait
mov
mov
push
fwait
dec
add
aam
xchg
and
incb
pop
mov
fwait
sub
loope
sbb
or
sub
fildll
pop
push
outsl
jmp
xchg
mov
push
jg
mov
enter
jecxz
testb
pushf
add
adc
bnd
lods
lods
jmp
push
jmp
js
imul
pop
xlat
mov
lods
sbb
daa
mov
cmp
rcl
es
xchg
add
push
imul
test
jmp
xor
lods
pop
imul
leave
mov
popl
mov
cmpsl
jl
mov
cmp
bnd
or
mov
cmp
outsl
mov
cmp
mov
mov
out
mov
cmpsb
sahf
or
out
pop
mov
dec
sbb
or
mov
dec
and
iret
pop
push
negl
push
mov
lcall
pop
repz
mov
in
and
mov
sti
sbb
mov
fistl
aam
int
add
xchg
push
rol
stos
gs
imul
mov
outsb
mov
nop
addr16
pop
fildll
out
jp
outsl
imul
mov
clc
stos
out
jecxz,pn
mov
xor
or
ljmp
ja
shlb
es
cmpsl
xchg
pushf
push
and
icebp
cltd
or
mov
lods
into
stos
push
lea
adc
jecxz
repz
xorb
mov
jmp
jbe
cli
lods
push
daa
push
in
mov
sarb
pop
test
jmp
adcb
mov
in
dec
mov
fidivs
cmpl
scas
into
mov
xchg
sub
mov
xchg
out
stos
test
ret
add
mov
push
cmpsb
jmp
testl
mov
push
aaa
or
or
addl
fcompl
sub
dec
in
lods
les
movsb
cmp
cwtl
cli
leave
ds
in
lods
jae
mov
out
xchg
nop
sub
cld
add
fisubs
int
ja
fdivrs
pop
mov
out
mov
lahf
xor
fildll
jne
lret
sub
xor
addl
or
std
lahf
inc
es
fstpt
mov
leave
mov
add
push
stos
mov
enter
ja
dec
sub
jne
push
xchg
jl
sbb
fs
mov
jnp
sahf
cmp
cmp
std
cmp
jne
push
jbe
jae
sbb
addr16
mov
js
and
stos
shl
push
mov
ljmp
call
dec
dec
outsl
jmp
lods
mov
rcll
cltd
or
or
movsl
imul
mov
enter
xor
out
test
mov
outsl
test
or
xchg
jl
xor
addr16
mov
popa
fisubl
sbb
sbb
or
push
insl
lahf
pop
lods
mov
jge
das
andl
adc
sarl
push
mov
daa
call
scas
mov
and
xor
lods
stos
jp
push
jl
mov
jne
insl
pusha
sub
aas
jge
movsl
in
addr16
mov
test
test
lahf
nop
mov
lret
sub
subb
or
add
insl
mov
and
or
mov
sbb
push
sub
xchg
sbb
sub
dec
cmp
addr16
xchg
scas
pop
mov
and
jae
or
es
fstpl
lock
aas
out
pop
clc
cmp
mov
cmpsl
cmp
aaa
fistpl
movsl
inc
and
dec
jle
int
cmpsb
pop
mov
clc
cmpsb
jbe
shrl
and
lret
rorl
lods
loope
push
cmp
loope
or
mov
imul
loope
mov
mov
jmp
jno
test
push
xchg
idivl
push
xchg
inc
jae
popa
mov
pusha
insl
shrl
cmp
dec
sub
jl
clc
out
int
and
mov
ds
loop
xchg
xchg
adc
icebp
xor
mov
mov
xor
xor
lods
fnstsw
push
mov
or
mov
and
fdivs
mov
out
sti
xchg
out
mov
mov
imul
fiaddl
sarl
jl
dec
or
lods
jb
jl
cs
or
jns
xchg
pop
add
push
pushf
enter
scas
mov
jecxz
mov
and
mov
xchg
in
mov
ds
push
sbb
pusha
push
mov
dec
and
test
insl
fdivp
insb
sti
pop
mov
sub
std
enter
xchg
add
mov
jecxz
stos
gs
mov
jmp
loope
daa
push
jmp
mov
rcrl
lret
push
mov
xchg
mov
stos
movsl
outsb
dec
outsl
mov
mov
xor
xchg
stos
jp
call
orb
cmp
sbb
loope
std
mov
fnstenv
push
ljmp
into
xchg
fmull
jae
insl
dec
or
and
or
xor
xor
mov
loop
jp
push
movsb
ja
ljmp
add
decl
push
popa
jmp
dec
data16
sti
icebp
push
mov
pop
lcall
and
xlat
ret
mov
fnstcw
lret
loopne
pusha
cltd
inc
mov
test
push
ljmp
fstps
jno
jp
mov
mov
jg
loop
adc
mov
scas
pop
test
and
push
addr16
or
xchg
fidivs
xchg
daa
ret
ss
cmpsb
ljmp
pop
stos
mov
or
movsl
scas
test
add
or
into
aad
mov
push
lock
mov
testl
mov
mov
mov
lds
idivl
push
xchg
scas
cmp
mov
jg
and
sbb
or
mov
leave
jl
mov
loope
jl
mov
xor
repnz
pop
lods
dec
cltd
sub
and
leave
mov
movsl
into
mov
mov
lret
adc
and
lret
push
mov
shll
subb
lods
imul
filds
lret
ret
mov
and
roll
cmc
insl
adc
cld
xor
mov
sbb
test
test
inc
xchg
mov
jmp
push
loopne
aad
addr16
mov
pusha
xlat
mov
cltd
pop
mov
add
adc
ljmp
pop
dec
mov
cmp
push
or
xor
and
pop
mov
mov
test
rcrb
mov
adc
sbb
mov
push
pop
dec
pop
mov
rep
dec
mov
popf
loopne
sbb
cmp
mov
cltd
pop
push
mov
and
pop
leave
sahf
sti
add
add
mov
aas
adc
sub
push
pop
mov
ljmp
mov
mov
cmpsl
lret
mov
into
sub
xchg
sub
test
dec
nop
pop
fwait
sbb
loope
sub
sub
leave
js
jp
add
jo
cmc
je
xchg
ret
mov
mov
js
and
enter
lret
rorb
in
or
aad
mov
or
test
push
or
dec
cli
xor
jg
in
hlt
xor
push
lea
stc
lcall
in
orl
repz
test
int
dec
inc
fs
mov
into
das
movsb
add
lods
out
hlt
xor
mov
sbb
jg
data16
loope
sti
movsb
mov
test
loop
adc
cmc
cwtl
popf
andl
mov
imul
lahf
jb
sub
ss
ja
xor
std
in
test
andb
mov
ljmp
cmpsb
fstps
push
loop
cmc
popl
ret
add
testb
in
repnz
sub
test
cmp
rcll
dec
push
push
cli
js
fsts
cmp
es
dec
mov
xchg
mov
cltd
stc
dec
mov
cmpsb
xchg
jl
or
data16
sbbb
mov
sbb
push
dec
lcall
push
cmp
out
add
jg
inc
push
or
mov
jbe
fisubs
xor
clc
ret
cs
out
loop
scas
sti
stos
xchg
jl
mov
sub
xor
push
jl
adc
inc
jle
push
inc
jo
jns
add
repnz
dec
push
lahf
sahf
push
push
mov
xchg
jecxz
xchg
xchg
pop
loop
cmp
mov
mov
mov
stos
test
leave
ss
mov
mov
iret
cmc
jg
shll
cmp
mov
mov
dec
out
stc
pop
test
outsb
xor
mov
sbb
fs
xchg
mov
adc
fimuls
ror
xchg
cmp
call
xor
lret
xchg
add
stos
sub
clc
xor
xchg
push
xchg
icebp
xor
mov
inc
test
xchg
mov
ljmp
mov
cmp
inc
repnz
cmpsl
xchg
pop
and
mov
xchg
movsl
xor
jb
hlt
lret
fildll
adc
fisttps
sub
cmp
mov
mov
pop
inc
loope
xchg
jl
cmp
sti
xchg
cmpsb
ret
mov
fidivs
sub
push
fcomp
fwait
test
cli
into
data16
repz
cmc
sub
dec
mov
xchg
mov
nop
or
jne
std
xchg
and
dec
cld
xchg
mov
mov
and
xor
into
aad
jbe
gs
add
and
popa
lret
lcall
lock
frstor
dec
cld
jns
ljmp
iret
mov
jp
or
inc
add
outsb
roll
out
or
insb
xchg
xor
adc
pop
dec
lret
or
mov
sub
int
pop
push
jo
out
mov
stos
addr16
jmp
inc
add
fstl
mov
dec
movsb
dec
mov
mov
xchg
push
mov
cmp
iret
aad
test
cmp
jmp
adc
sub
add
test
call
mov
xlat
mov
xchg
nop
mov
sub
cmp
sub
sti
push
mov
xor
fucomi
enter
sub
movl
in
cmc
pop
adc
popf
test
sub
shrl
cmpsl
in
or
movsb
into
mov
xchg
cmp
test
xlat
loop
fwait
or
mov
or
mov
cli
fwait
and
ret
mov
mov
jnp
mov
movsb
and
lods
js
repnz
or
mov
mov
mov
mov
mov
xor
enter
fs
and
mov
jecxz
clc
xchg
bound
xor
addb
lcall
inc
mov
jmp
cmpsb
add
ret
rorl
aas
aam
into
inc
mov
xchg
aas
sub
lret
loop
xchg
shl
dec
arpl
in
out
push
xchg
std
gs
out
or
sbbl
xlat
xchg
mov
jmp
cwtl
popf
sub
dec
sar
jge
xchg
mov
mov
mov
out
jecxz
out
mov
mov
inc
lds
clc
jmp
cmpsl
cli
xchg
mov
icebp
imul
mov
sub
int
out
addr16
jmp
cs
addb
loop
push
lret
aas
jl
dec
outsb
enter
mov
idivl
aaa
enter
pop
inc
rorl
jl
imul
lock
lea
mov
scas
cs
mov
mov
or
addr16
xchg
ficoml
lods
fwait
daa
movsb
imul
push
lea
loop
cld
pop
push
push
out
call
cld
push
cmpsb
pop
leave
ss
popf
ret
add
push
xchg
cmpsl
xchg
jae
xchg
mov
pushf
scas
and
popa
mov
mov
mov
lods
push
jecxz
push
push
push
mov
xor
dec
pop
sub
push
add
stos
lret
push
test
stos
aaa
pop
sti
pop
xor
mov
in
ljmp
cmp
imul
sbb
stc
fs
jle
and
pop
mov
and
leave
addr16
in
dec
aad
inc
push
add
add
nop
lcall
rcll
imul
jecxz
jmp
incl
jmp
es
cmp
in
daa
mov
aaa
mov
pop
ret
in
popa
nop
xchg
jmp
mov
dec
sbb
fxam
cmpsl
xor
fs
xchg
mov
push
sti
lods
cltd
lods
mov
mov
cmpsb
std
xlat
sarl
jl
mov
scas
insl
pop
cld
scas
inc
mov
mov
mov
xlat
push
daa
jl
testl
or
dec
sbb
cmp
jns
sti
pusha
call
dec
cmpsl
test
push
mov
dec
cmpsl
es
test
sbb
mov
test
and
pushf
fs
mov
sbb
adc
ds
mov
xor
sti
jp
mov
fwait
cmp
mov
jl
push
xor
loop
decb
loop
push
or
bound
sub
cwtl
jecxz
sub
mov
sbb
jae
jne
je
cmp
or
jl
int
push
mov
sub
shl
jecxz
insl
shll
jbe
test
mov
bound
rcrl
push
xchg
loop
lcall
push
xor
jmp
jno
test
sbb
or
sti
test
add
popf
mov
sub
cmpsl
mov
es
lea
or
es
bound
xor
mov
mov
andl
test
movsl
and
mov
or
pop
andl
mov
andb
and
test
mov
scas
mov
into
jbe
xchg
jp
scas
mov
xor
or
jo
mulb
push
mov
call
mov
jbe
es
addr16
xlat
stc
aaa
jns
clc
sti
and
es
cmp
es
test
xor
or
rcrb
pop
lods
das
or
movsb
mov
cmpsb
mov
loopne
ja
repnz
jno
mov
dec
repz
xor
in
mov
dec
icebp
loopne
push
or
in
cmp
mov
into
push
mov
or
mov
inc
mov
ss
mov
xor
jg
stos
imul
lods
dec
pushf
jecxz
in
sbb
fadds
cmpl
nop
mov
and
mov
mov
adc
fwait
and
movsl
or
jb
pushf
mov
jo
loopne
jae
sub
mov
sbb
xchg
ficomps
and
jge
push
out
jnp
xor
cmp
lock
mov
sub
mov
dec
or
xor
jno
push
int
inc
jl
loop
sbb
mov
jecxz
sbbl
xor
jp
pop
adc
into
mov
int
mov
mov
mov
cmp
sti
aas
popf
sub
mov
clc
xor
jo
dec
sbb
ds
cmpsl
test
mov
dec
lea
dec
out
sub
mov
mov
xchg
into
adc
mov
adc
dec
lcall
sti
dec
into
xchg
loopne
or
jmp
push
popf
cmp
pushf
ss
mov
cmpsl
push
xchg
pop
jmp
syscall
test
push
and
int
push
jg
je
dec
mov
test
jge
lock
xchg
mov
aaa
dec
or
lds
adc
mov
jecxz
clc
mov
cmpsl
lea
loope
inc
es
stos
jb
mov
into
aaa
mov
adc
or
mov
int
or
mov
mov
mov
sub
cmpsb
and
mov
into
mov
mov
jbe
add
mov
mov
gs
jle
mov
hlt
lahf
cltd
dec
add
or
mov
or
mov
mov
pop
push
xor
cmpsl
test
mov
xor
xchg
loop
movb
es
jb
jb
faddp
test
sub
mov
sti
mov
mov
iret
and
in
xor
inc
and
xchg
cmp
test
ja
movsb
cli
ss
adc
or
and
jno
cmp
push
jp
xrelease
cli
hlt
add
mov
je
add
addr16
sub
movzbl
jmp
xlat
adc
pop
jp
es
inc
jmp
sub
fistl
mov
js
stc
or
sbb
cs
mov
mov
daa
or
sbb
xchg
adc
inc
in
and
dec
in
mov
sbb
ds
loop
mov
dec
out
jno
ljmp
nopl
mov
adc
stc
fdivs
jbe
pop
outsl
mov
add
daa
sti
adc
mov
testl
shll
xorb
cmpb
mov
pop
mov
mov
ss
jbe
mov
out
mov
and
and
mov
sub
rdtsc
dec
das
divb
cmp
push
jp
popl
add
dec
mull
mov
cmp
stos
aaa
xrelease
push
sub
lock
pop
inc
and
jne
nop
sub
mov
repz
mov
clc
std
mov
or
mov
dec
movsl
clc
pop
aaa
push
cmp
mov
andl
cmp
mov
les
mov
inc
inc
dec
sub
test
sub
inc
add
and
xchg
add
aas
mov
pop
inc
gs
test
add
mov
jmp
and
mov
clc
test
pop
addl
aas
add
cmp
sub
cwtl
sbb
dec
pop
ljmp
lock
add
addr16
clc
xor
js
cmp
jne
jne
icebp
mov
xor
repnz
shlb
in
mov
or
lahf
icebp
inc
and
stos
dec
adc
icebp
mov
push
jecxz
push
fwait
out
mov
or
or
in
mov
mov
in
loope
stos
xchg
sub
mov
mov
xchg
xlat
mov
bswap
cmpsb
and
mov
sbb
stos
push
sbb
sub
call
ret
pop
stos
fsub
dec
cmpsb
mov
lret
stos
mov
jne
data16
movsl
dec
pusha
gs
cmpsb
rclb
dec
sub
stc
xor
cmp
inc
dec
mov
rcrb
jno
jle
call
mov
jbe,pn
gs
cmp
sbb
lret
jne
cmp
inc
idivb
in
xchg
int
add
icebp
stc
xor
cmp
ja
js
jbe
adcb
popa
push
xor
inc
xor
cmpsb
outsb
lret
leave
sub
push
icebp
mov
dec
cmp
in
daa
idivb
adc
mov
insl
scas
jg
mov
mov
mov
int
cmp
imul
push
sub
pushf
sbb
sbbl
mov
push
fsubrp
mov
cmp
jb
add
lret
cmpsl
imul
fsubl
les
and
jmp
mov
mov
es
mov
movsl
mov
es
xchg
rep
fs
mov
es
or
mov
mov
mov
lret
mov
mov
xlat
jmp
mov
sub
in
stos
jecxz
xchg
enter
pop
mov
cs
and
cltd
inc
int
jmp
insl
ljmp
jp
std
or
loope
movsl
or
push
test
lret
inc
jecxz
lods
stos
mov
daa
repz
cmp
sub
mov
jp
add
pop
xchg
sbb
sub
ret
sub
push
xor
fwait
jae
xor
xchg
adc
mov
loopne
test
stos
and
std
out
sarl
jmp
add
jmp
cmpsl
mov
mov
xchg
stos
sbb
mov
mov
call
imul
jmp
push
xchg
test
cmpsl
cmpsb
cltd
out
es
xchg
movsl
cltd
sti
xchg
jp
mov
mov
add
cmc
mov
mov
push
pop
xorb
pusha
mov
or
lds
add
cmpsl
ret
fldl
pop
jne
and
mov
imul
add
in
sub
pop
out
sub
lret
js
jecxz
or
cmpsb
or
push
sub
mov
inc
push
and
clc
stos
arpl
lods
jp
sub
data16
adcb
jmp
nop
and
xchg
es
mov
andb
mov
xchg
mov
mov
es
mov
mov
mov
mov
mov
mov
mov
xchg
popf
stc
xchg
xchg
jmp
movsl
cmp
mov
leave
mov
pop
cmp
or
mov
pusha
addb
bound
es
xor
movl
outsb
cmp
rol
mov
mov
cltd
and
add
and
clc
mov
not
push
bound
daa
out
cmpsl
mov
jmp
xchg
cli
pusha
movsl
and
jbe
mov
stos
test
movsl
iret
cltd
addr16
xchg
mov
and
mov
and
mov
aas
adc
lods
jno
call
stc
ja
aaa
jecxz
call
daa
fsubrl
jmp
sahf
xor
shrl
sahf
sub
and
icebp
dec
cmovp
les
mov
stc
xchg
mov
mov
sub
lock
jno
loope
ljmp
dec
inc
add
mov
jmp
mov
mov
jle
jge
jae
sbb
jmp
mov
lds
leave
jne
xor
imul
mov
xor
mov
call
cmpsb
cmp
xor
mov
or
movsl
cmp
sti
cmp
mov
mov
push
icebp
test
xor
mov
mov
sti
jno
cmp
int
sbb
hlt
mov
mov
xor
sub
xlat
mov
outsb
mov
into
fcom
repnz
in
xchg
mov
shl
subb
or
xor
sarl
mov
add
mov
sub
mov
add
jb
mov
fwait
aad
and
cmp
push
cmp
jbe
repz
icebp
add
inc
andl
aas
pop
mov
mov
cmp
dec
sarl
xchg
mov
mov
mov
mov
imul
imul
test
sub
sub
adc
cmpsb
imul
mov
test
sbb
imul
sub
jecxz
das
ljmp
inc
push
mov
adc
mov
mov
scas
std
sub
inc
xchg
mov
lods
outsb
sub
jmp
fucom
push
jmp
fwait
pop
push
jecxz
xchg
inc
int3
jecxz
stc
loop
push
stos
mov
cmp
stos
cwtl
incl
jle
jnp
stos
sub
stos
or
xchg
fcoms
loope
jae
fsubrl
cmp
sarl
push
sub
in
arpl
and
loopne
mov
in
stc
in
mov
test
ret
in
fldln2
push
in
adc
nop
in
lods
lods
jmp
push
jmp
push
sub
cmc
inc
xor
push
mov
lock
push
outsl
sahf
push
sbb
push
out
pop
and
inc
mov
push
rcll
sbb
adc
stos
std
mov
and
ds
jge
sti
jnp
jnp
jnp
jnp
jnp
jnp
daa
mov
pop
xorps
inc
xchg
push
fcoms
push
xchg
push
scas
push
sub
cmp
loopne
std
pop
cmp
push
rep
inc
outsb
inc
outsb
fsubrl
outsb
xchg
outsb
shrb
outsb
imul
xchg
and
jae
or
lods
insb
lods
data16
mov
stc
mov
fistpll
jnp
jnp
daa
jmp
pop
jb
enter
cwtl
inc
push
push
push
xchg
daa
cmp
aaa
mov
addr16
inc
xchg
push
adc
xchg
daa
jl
aaa
es
movsl
push
dec
addr16
sbb
mov
mov
nop
xor
ljmp
dec
or
xchg
scas
adc
cmp
jl
cmp
ljmp
pop
cmp
push
mov
xor
outsb
outsb
lds
outsb
fildll
outsb
xchg
outsb
adc
adc
scas
push
loope
cmp
scas
xor
adc
das
lods
test
movsl
in
jl
mov
jnp
jnp
mov
or
inc
or
pop
or
aad
shll
daa
test
cmpsb
aaa
sti
pop
mov
mov
push
ja
inc
dec
push
xchg
push
adc
mov
das
push
pop
addr16
ja
dec
lret
inc
addl
push
pop
push
daa
inc
mov
pop
pop
fisubl
add
sbb
sbb
pop
sub
in
cmp
mov
push
or
outsb
add
pop
outsb
fisubrs
outsb
fisubrl
outsb
sub
arpl
cmp
arpl
inc
dec
inc
xchg
inc
pop
inc
sahf
dec
bound
jns
mov
jo
mov
pop
adcb
fsts
push
sub
xlat
cmp
roll
inc
in
sub
in
sub
in
insb
lods
out
push
movsb
mov
or
mov
or
jnp
jnp
jnp
mov
les
mov
inc
mull
inc
rolb
popf
inc
pushf
inc
fwait
inc
lcall
dec
and
mov
jno
dec
add
fsts
clc
lcall
push
orb
punpcklwd
jns
jno
dec
movl
push
lahf
adc
dec
sub
cmp
arpl
inc
mov
inc
lds
inc
addb
pop
ja
push
fsts
sub
fnstcw
cmpsl
adc
imul
jns
jno
dec
mov
stc
outsb
cmc
cs
sub
in
inc
in
add
mov
or
push
movsb
and
mov
add
jp
mov
inc
push
inc
rorl
cld
push
add
and
arpl
inc
or
inc
insl
dec
out
push
popa
test
repz
into
loopne
scas
lcall
call
aaa
xchg
pop
scas
push
in
push
sub
es
sub
mov
mov
movsb
loop
pop
les
pop
popa
push
jns
repnz
xchg
and
addr16
ja
inc
rcll
adc
pop
pop
in
pop
sub
sub
xor
dec
stc
or
jnp
pop
cmpsb
std
and
aaa
pop
icebp
push
iret
addr16
ja
inc
sbb
sbb
test
inc
imul
jns
jno
dec
mov
mov
push
pop
push
push
xchg
push
xchg
push
xchg
push
xchg
push
nop
push
scas
push
scas
push
lods
sarl
mov
pop
mov
sbb
ficoml
outsb
push
outsb
nop
outsb
scas
outsb
scas
cs
xchg
lock
jno
dec
mov
lcall
lods
xchg
lods
xchg
lods
nop
lods
xor
lahf
mov
mov
push
mov
les
sub
jbe,pt
bnd
jno
dec
and
mov
mov
dec
mov
pushf
push
cwtl
cltd
shll
or
loop
mov
test
mov
sahf
in
add
xchg
pop
xchg
inc
add
push
lods
shrb
jns
jno
dec
mov
inc
xor
scas
xchg
xchg
test
cli
mov
mov
mov
mov
sbb
inc
mov
inc
xchg
inc
test
inc
addb
addb
sahf
ja
pushf
push
fwait
push
lcall
push
xchg
push
xchg
push
xchg
push
xchg
push
xchg
push
xchg
push
nop
push
scas
pop
scas
popa
mov
aaa
les
and
xchg
or
mov
popf
jbe
sbb
cltd
dec
jmp
jb
decl
jno
mov
or
inc
and
repz
or
test
mov
stos
xor
icebp
mov
decl
add
cmp
sub
jp
shr
sti
sub
rolb
cmp
paddb
inc
jnp
dec
dec
adc
and
mov
xor
test
std
jb
adc
insb
push
fwait
call
pop
out
popf
push
push
pop
cwtl
sbb
push
sbb
sbb
stos
popf
lods
xchg
sbb
ljmp
push
adc
sbb
push
mov
fistps
sub
movsl
pop
fstps
and
pushf
fs
adc
sbb
jp
mulb
cs
shl
sbb
dec
adc
loopne
adc
jbe
cli
push
lods
cmp
dec
hlt
lret
stos
dec
lods
cmc
inc
cwtl
and
adc
sub
or
sbb
daa
mov
push
stos
sbbb
pop
push
mov
gs
push
mov
stos
xchg
jmp
and
nop
add
mov
push
je
shrb
adc
popf
jno
mov
mulb
bsr
stos
sub
dec
jns
pushf
pop
test
jae
xchg
pop
jnp
inc
jbe
stos
lds
adc
daa
hlt
sbb
stos
pushf
inc
lret
or
stos
insb
movsl
xor
dec
stos
test
xchg
cmpsb
popa
inc
imul
push
lock
mov
xchg
mov
stos
jne
ljmp
gs
pop
repz
arpl
insb
aam
sarb
mov
mov
fsubrl
adc
xor
push
xchg
or
push
lods
sub
cmp
stos
pop
dec
out
pop
mov
add
xor
cmp
ja
mov
mov
mov
dec
test
sbb
movsl
mov
jno
cmp
sub
dec
nop
jmp
pop
and
push
push
pop
xor
sub
inc
stos
out
mov
repz
adcb
jp
out
pusha
sbb
lahf
stos
pop
xchg
in
jo
push
adc
push
call
jge
sbb
cmp
xor
idivb
in
test
icebp
pop
cmp
rorl
mov
cmp
sti
vdivps
stos
push
push
lret
fcomp
imul
stos
cmp
in
xorl
dec
and
xlat
xchg
cmp
mov
stos
adc
sbb
adc
mov
hlt
imul
stos
movsb
sbb
ret
add
lcall
add
stos
fsts
sbb
les
lcall
icebp
popa
iret
and
stos
in
out
fldcw
stos
mov
lea
and
stos
cmpsb
mov
mov
test
clc
dec
add
shrb
xor
in
leave
stos
adc
push
or
adc
pop
mov
or
jp
nop
stos
or
push
mov
stc
insl
or
inc
ljmp
cmp
in
lods
shlb
frstor
addr16
mov
mov
stos
gs
xchg
mov
mov
or
mov
ficompl
inc
stos
sub
in
mov
les
jns
std
out
idiv
aam
push
jl
push
or
mov
adc
jb
jne
xor
lods
xchg
dec
daa
stos
push
sub
ret
rcrl
and
adc
jo
and
cmovne
pop
pop
push
push
inc
stos
xlat
data16
aaa
lcall
push
jge
jecxz
stos
in
xchg
push
add
mov
stos
add
mov
ret
stos
mov
add
lahf
lods
add
push
mov
push
or
scas
xor
in
and
jecxz
ret
mov
sbb
or
dec
pop
stos
push
and
lods
fsubs
les
ds
jmp
stos
leave
pop
or
lcall
mov
outsl
xchg
cmc
mov
iret
shrb
adcb
stos
inc
ja
cmpsl
push
jl
nop
stos
fmul
outsl
ret
daa
stc
scas
insl
stos
sahf
push
enter
mov
push
sti
cmp
stos
outsl
adc
xchg
stos
sarb
sub
adcb
lret
stos
jo
js
pushf
call
repz
cld
adc
stc
sti
imul
scas
out
call
lcall
shrb
or
xchg
dec
add
mov
inc
repz
mov
sbb
pusha
pop
fidivl
dec
lcall
stos
pop
dec
mov
outsl
sbb
inc
stos
jne
inc
xor
add
fsubrl
ja
stc
fwait
stos
adc
mov
pop
stos
nop
aam
jb
jo
scas
stos
push
aaa
or
push
arpl
aas
daa
pop
jl
inc
jns
stos
dec
lea
lds
lgs
xlat
sahf
iret
jmp
or
ja
lock
lods
test
out
stos
sub
das
loope
jo
js
add
dec
lahf
stos
xchg
mov
jge
pushf
in
sub
jno
inc
mov
xchg
stos
nop
lret
and
push
hlt
and
mov
add
dec
xchg
icebp
add
inc
and
cmp
loopne
ret
pop
push
fstpl
stos
movsb
fildll
inc
stos
add
mov
and
add
sbb
shrl
adc
fnstenv
mov
jl
shrl
and
mov
sbb
out
nop
pop
ljmp
jp
jno
push
cmp
mov
and
cmp
cmp
aas
xchg
and
imul
rorb
pop
pop
stos
jmp
xchg
stos
adc
cmpb
cmpsb
sub
stos
sub
das
mov
fndisi(8087
xchg
stos
mov
cwtl
pop
mov
push
aas
dec
shrl
xchg
outsl
fdivl
mov
and
sbb
lock
xchg
ss
mov
xchg
mov
mov
cwtl
and
scas
dec
stos
cmp
xchg
and
imul
sbb
xchg
mov
js
pop
aam
adc
jns
je
mov
add
pop
sti
pusha
push
adc
fs
add
icebp
or
cli
ljmp
js
adc
and
pop
sub
fmuls
xchg
push
xchg
xlat
lea
data16
cmp
or
iret
cmp
sub
and
mov
pop
mov
imul
dec
stos
mov
hlt
scas
stc
adc
stos
push
sub
sub
mov
fwait
popf
stos
adc
adc
stos
cld
mov
aad
imul
popa
enter
stos
pop
mov
inc
stos
sbb
adcl
aam
fdivr
insl
popa
dec
imul
mov
jecxz
in
stos
dec
vpshaw
adc
outsb
lea
stos
ds
out
ljmp
aam
test
addr16
ret
mov
into
jne
sbb
aad
out
sub
fsubrs
das
jp
jo
fimuls
jmp
out
adc
cmp
pop
xor
mov
push
stos
dec
pop
popf
clc
adc
movsl
daa
je
mov
mov
stos
inc
mov
dec
jnp
shll
mov
mov
popf
rcl
push
stos
xchg
adc
jnp
inc
pop
fwait
dec
xchg
test
xchg
test
cmc
mov
popf
test
iret
mov
xor
ljmp
sub
pop
call
xchg
int
pop
mov
mov
in
imul
out
mov
scas
mov
fistl
dec
popa
stos
daa
mov
jnp
imul
inc
inc
int
stos
mov
xchg
fstpl
pop
mov
lods
data16
xchg
inc
adc
inc
cld
cmpsb
or
mov
add
aad
fisttpl
lock
sub
push
andl
test
stos
cld
add
lret
mov
dec
loopne
add
pop
call
pop
sbb
pop
into
pop
cltd
mov
pusha
mov
mov
push
imul
aad
and
popa
addr16
adc
jmp
fistps
test
pop
sub
mov
adc
stos
mov
xchg
lock
shrl
jecxz
or
push
mov
stos
iret
popa
insb
dec
xchg
pop
xchg
das
cmp
adc
repnz
fisubrl
fadd
mov
mov
std
mov
mov
pop
jne
lods
xor
in
cwtl
lea
fnstcw
push
and
add
out
mov
jmp
mov
or
jbe
clc
fs
sbb
xor
stos
ja
xor
das
loopne
and
mov
mov
push
sbbb
andl
adc
sbb
xor
mov
scas
int
lret
mov
sub
mov
lea
jmp
push
mov
xchg
sub
push
cmp
fiadds
fisttpl
or
loopne
mov
pop
mov
addr16
lods
int
stos
call
pop
stos
lods
push
imul
imul
rcll
xorb
dec
xor
xor
sub
inc
stos
lahf
adc
xchg
je
sti
imul
mov
cmpsl
mov
push
nop
divl
sub
in
mov
dec
lds
dec
jmp
outsb
rcr
aaa
outsl
jmp
fistl
xchg
dec
or
pushf
shrl
stos
mov
pop
idivb
enter
or
sbb
and
xchg
je
pushl
jmp
ret
jl
stos
xor
mov
stos
std
push
fisttpl
dec
mov
jno
imul
cmpsl
int3
testl
push
dec
subl
orl
xchg
rorl
dec
ss
imul
ljmp
jno
mov
ud1
jmp
xor
stos
jmp
pop
mov
mov
bts
ljmp
hlt
mov
data16
sub
je
mov
lea
out
aad
xchg
scas
clc
adc
cmp
sbbl
xchg
mov
mov
outsl
and
jp
stos
idiv
loop
xor
stos
xchg
mov
mov
xchg
xor
mov
stos
push
add
mov
mov
inc
stos
out
pop
xchg
lret
and
xchg
dec
std
jmp
pop
jns
sbb
xchg
pop
xor
in
pop
jb
clc
stos
mov
cmp
push
lock
sub
sub
push
imul
pop
and
pop
stos
mov
or
add
scas
fsts
vphaddwd
lods
leave
icebp
jp
cmp
sbb
stos
push
mov
cmc
mov
mov
jge
xchg
adc
fldl
add
pop
jecxz
fwait
mov
add
mov
or
out
dec
stos
rolb
cmp
mov
sub
shrb
xchg
or
cwtl
sub
mov
jnp
adc
xchg
insl
jmp
test
stos
fstps
test
mov
xchg
sarl
mov
jne
inc
or
shrd
cwtl
scas
stos
roll
stos
mov
cmpsl
adc
mov
leave
lods
pop
shrb
loopne
cs
jne
sti
cltd
out
push
addl
dec
notb
iret
stos
fimull
push
imull
cmpsl
pop
bound
push
fildll
in
ljmp
out
popf
adc
andl
xchg
mov
pop
sub
lret
sbb
xor
movsb
je
std
dec
inc
sub
imul
and
cmp
mov
mov
lret
fistps
adc
mov
test
push
jno
mov
xchg
icebp
push
stos
or
hlt
push
aaa
pushf
imul
ret
stos
dec
iret
enter
lret
int
repz
mov
call
mov
arpl
sbb
loop
les
enter
pop
inc
mov
adc
mov
in
pop
stos
pop
cmpsl
cmpl
lahf
jne
jmp
stos
das
jl
push
inc
sub
outsb
gs
stos
inc
stc
push
push
shll
nop
daa
sbb
sub
lea
xor
imul
sbb
in
adc
push
arpl
mov
push
sti
adc
sub
sub
nop
xchg
mov
sahf
jmp
inc
cmp
pop
mov
inc
inc
insb
dec
jecxz
int
push
iret
mov
ljmp
popf
xchg
sahf
sub
jo
dec
shrl
aam
sarb
dec
xor
fbld
mov
jae
jbe
jnp
insb
mov
stos
adc
stc
mov
leave
daa
es
xor
fwait
lds
jae
mov
mov
mov
mov
sub
sbb
mov
sub
stos
loope
mov
and
stos
cmc
adc
int
xlat
jp
into
add
lahf
mull
adc
imul
sti
imul
add
cmp
mov
sbb
cmpl
imull
ljmp
mov
subb
dec
sub
nop
sbb
xchg
pop
xchg
push
adc
and
jbe
ljmp
sub
negl
dec
das
call
stos
and
mov
mov
cmp
xor
cmp
int3
daa
jl
xor
xchg
push
jg
scas
stos
divl
lahf
push
adcb
popa
stos
mov
xchg
adc
gs
stos
shlb
pusha
out
xchg
stos
and
lfs
in
stos
fcompl
xor
stos
sbb
push
clc
je
push
inc
out
hlt
sub
pushl
stos
mov
std
loop
and
xchg
shll
stos
mov
fnstcw
arpl
lods
sub
jo
cwtl
rcrl
xchg
mov
pushf
ss
dec
mov
jmp
ja
fwait
rcrl
mov
pop
xchg
or
mov
mov
ss
ds
mov
imul
or
dec
stos
repz
adc
into
xchg
jg
insb
add
mov
push
cld
in
stos
mov
bound
pop
stos
xchg
add
cmp
fbstp
pop
pop
xchg
mov
push
lahf
pop
mov
clc
fistpll
xchg
movsb
sbb
lods
stos
mov
inc
sub
icebp
push
xor
cmp
and
mov
loop
push
cmpsb
mov
enter
sti
js
les
scas
mov
pop
orl
hlt
jge
adc
test
call
decl
shr
mov
std
and
adc
stos
sbb
inc
repz
dec
add
mov
stos
pop
sub
fwait
mov
in
out
lahf
dec
cmp
push
push
cmpb
jp
mov
lcall
fwait
movsl
jge
subl
push
mov
imul
xchg
jp
sub
and
xchg
mov
test
mov
xor
scas
jne
mov
dec
mov
xor
mov
jmp
stos
in
adc
outsb
pusha
jmp
mov
out
mov
shrb
mov
in
mov
sub
push
data16
and
sarb
stos
call
push
andb
aam
stos
pop
iret
mov
cmp
clc
gs
sbb
add
call
gs
std
sbb
dec
das
scas
or
les
inc
pop
lea
jecxz
dec
xchg
loop
xor
imul
stos
outsl
cmp
sbb
stos
sbb
stos
rorl
stos
int
js
mov
xor
jmp
stos
add
in
and
stos
daa
dec
cli
aad
sub
add
lock
jb
mov
es
mov
stos
push
loope
pop
mov
sbbb
push
jae
es
movsb
into
dec
int3
lret
test
xor
repnz
jle
pop
mov
popa
loope
into
leave
test
inc
lods
xor
int
push
jo
xchg
daa
pop
imul
mov
call
lds
sbb
scas
mov
jg
fisubrl
stos
aad
loope
mov
cmpsb
jge
adc
mov
cltd
rorl
and
outsl
or
xchg
inc
repz
push
mov
jl
add
dec
cmc
inc
adc
scas
xchg
dec
shlb
test
sub
adc
movsb
jnp
sbb
stos
test
flds
sbb
stos
nop
outsl
mov
sbb
sbb
inc
sarb
push
ret
dec
cmp
ret
push
xor
sub
lahf
mov
stos
cmp
jo
mov
adc
mov
in
stos
daa
and
ret
and
lret
stos
arpl
push
jno
mov
inc
lret
std
ljmp
fsubrs
inc
ret
stos
cmp
fistpll
stos
add
inc
pop
in
sub
mov
lds
mov
mov
std
jmp
mov
stos
andl
mov
andb
and
cmp
stos
dec
mov
add
nop
push
movsb
stos
imul
cs
jno
push
fidivrl
or
stos
cmc
push
lret
pop
scas
xor
and
sub
js
or
xlat
dec
stos
adc
jno
mov
test
daa
mov
rolb
dec
in
shrl
jl
out
std
scas
fs
lahf
es
pop
jb
mov
mov
aad
jno
push
stos
icebp
cmp
pop
js
fmull
pop
push
mov
imull
shrl
in
jp
shr
mov
cltd
mov
ljmp
jp
xchg
mov
and
mov
mov
add
stos
imul
stos
enter
ret
stos
jne
out
cmp
mov
int3
repnz
test
subl
dec
jnp
sub
popf
mov
mov
sub
xchg
cmp
sbb
adc
mov
xchg
jo
in
mov
stos
mov
outsl
nop
sbb
loopne
fwait
stos
test
shrl
or
and
mov
xor
push
sub
popa
dec
stos
ljmp
cmp
mov
push
stos
inc
add
test
adc
test
or
sarb
dec
sahf
lods
fs
lea
or
stos
out
ss
popf
xchg
xchg
aas
push
imul
pop
popa
imul
outsb
test
dec
pop
inc
cltd
test
loopne
out
enter
jle
stos
pop
fsubrl
sbb
push
xchg
add
aam
imul
sub
xchg
xchg
cli
stos
in
pop
pushf
push
shll
call
ret
push
xchg
pop
stos
or
movl
test
or
psubq
mov
sub
or
dec
lods
jmp
cmpsl
in
xchg
notl
mov
lea
dec
inc
fwait
imul
ret
xor
imulb
sbb
and
stos
mov
push
sub
sub
or
sbb
cmp
or
decl
movb
cmc
dec
jmp
xor
jge
mov
adc
lret
and
es
mov
imul
inc
lods
sbb
stos
xchg
mov
push
inc
mov
pop
and
lahf
fisubrs
mov
lock
jmp
add
stos
sbb
lods
jb
push
and
xchg
stos
push
rcll
fwait
clc
nop
hlt
lds
call
lods
lock
xchg
jmp
ret
outsb
enter
in
push
stos
mov
ljmp
cmp
and
into
push
adc
lea
insb
stos
cwtl
mov
ljmp
divb
inc
jmp
dec
int
mov
and
push
fwait
xor
mov
shr
stos
sarb
mov
mov
pop
jl
mov
push
out
shrl
test
lahf
sub
sub
cmp
shll
in
stos
or
enter
xchg
daa
dec
mov
stos
dec
mov
mov
movsb
icebp
addb
sbb
imul
jl
ja
stos
rclb
xchg
movsb
incb
fimull
and
stos
push
mov
stc
jae
gs
es
sub
or
movsb
mov
push
stos
xor
in
mov
jp
mov
out
xchg
mov
jbe
mov
arpl
xchg
mov
lea
lret
clc
mov
mov
inc
gs
xchg
jmp
pop
jno
iret
cwtl
mov
shl
add
lods
lods
stos
mov
popa
push
push
jnp
xlat
ja
mov
xchg
push
push
iret
or
js
add
stos
jle
idivb
test
stos
cmp
jns
lods
cmp
lods
insl
stos
xchg
jne
xchg
jnp
cli
nop
mov
push
mov
xchg
pop
mul
stos
enter
pop
stc
lods
jae
cltd
adc
or
orb
push
mov
mov
adc
inc
int3
dec
subl
orb
std
test
xor
stos
xchg
or
outsb
sahf
mov
dec
fs
sbb
hlt
push
sub
add
dec
rclb
and
dec
mov
jge
sub
and
dec
xchg
sbb
stos
js
imul
repnz
adc
stos
ljmp
dec
addr16
roll
mov
pop
cmp
mov
cld
jns
fldcw
or
pop
out
push
stos
fstpt
test
mov
mov
cld
stos
cwtl
mov
xchg
negl
xor
stos
mov
dec
cltd
pushf
jmp
mov
stos
ja
out
fists
xchg
roll
bound
daa
pushf
jmp
push
inc
repz
xchg
sub
dec
cltd
mov
pop
movsb
sub
mov
test
sub
xor
mov
mov
data16
dec
sbb
lret
stos
ljmp
stos
in
push
xor
cmpb
ds
and
stos
pusha
sbb
movsb
sbb
adcl
aam
sub
stos
push
lret
sbb
mov
pop
mov
fldt
or
jo
xor
popa
stos
jmp
mov
push
movsb
sbb
cmp
shlb
or
adc
jno
stos
mov
mov
sub
fmuls
scas
repnz
les
imul
stos
jbe
mov
mov
test
ja
push
stos
and
xchg
and
icebp
mov
adc
cmp
imul
adc
and
xor
add
xchg
adc
stos
faddl
incb
dec
jecxz
imul
ljmp
sbb
mov
add
xchg
inc
stos
loop
shrl
imul
push
ljmp
pushf
lds
sbb
outsl
jne
mov
fisttps
push
xchg
neg
and
cwtl
dec
scas
dec
test
cmp
cmp
jnp
jne
rcrb
lock
add
push
outsb
int
fcoml
jmp
mov
mov
stos
imul
stos
stos
dec
cmp
jmp
ljmp
std
add
icebp
pop
ds
sub
popa
out
outsb
test
or
jmp
mov
data16
inc
roll
adc
adcl
lahf
stos
jecxz
or
addb
adc
imul
xchg
pop
add
rorl
push
stos
dec
leave
cmp
es
mov
mov
stos
pop
fst
push
sub
push
daa
adc
cli
mov
jl
in
dec
popf
jb
add
rorb
mov
mov
mov
pusha
mov
xor
push
mov
mov
clc
dec
out
mov
stos
fdivrs
mov
or
add
jae
dec
cmpsb
push
movsb
jecxz
neg
mov
ficompl
push
jnp
and
adc
sub
stos
ja
sub
loop
shr
jbe
mov
cmp
outsb
aas
in
out
rep
std
add
cmp
scas
popa
out
xor
shll
dec
mov
inc
insb
int3
stos
xchg
mov
or
jo
fisttpll
loopne
pop
bound
push
adc
mov
inc
stos
sub
pop
test
test
mov
fldl
xchg
cwtl
mov
stos
cmp
cli
imul
mov
pop
push
dec
subb
fidivrs
xor
mov
jns
out
xchg
fsubrl
lods
dec
mov
mov
push
mov
popf
lcall
stos
inc
dec
test
xchg
stos
and
lods
mov
stos
scas
mov
jns
int3
js
stos
inc
rcll
stos
fisttps
enter
cmpsb
loope
lods
mov
jle
mov
push
jne
int3
add
push
xchg
stos
cmpsb
and
cmpsl
clc
lea
push
pop
mov
mov
nop
cmp
test
lret
outsl
jo
jb
dec
movsb
lods
outsb
stos
xchg
sub
enter
xchg
stc
cmp
loop
and
stos
fwait
in
lock
sbb
repnz
adc
xchg
stos
sahf
adc
mov
adc
lods
lahf
out
push
data16
dec
dec
es
loopne
inc
xchg
fcomps
cwtl
add
les
js
loope
adc
out
inc
inc
repnz
xchg
ss
stos
leave
mov
mov
stos
xor
ret
insb
xchg
adc
imulb
inc
add
mov
adc
in
test
stos
push
xchg
mov
mov
pop
enter
cltd
mov
stos
aad
push
add
fisubrs
push
jns
dec
mov
mov
shlb
pop
jge
jl
or
daa
sbb
dec
cmpsl
and
leave
push
jo
bound
pop
jmp
stos
lahf
dec
inc
ret
outsl
iret
rorb
add
xchg
test
xor
loop
sbb
repnz
ret
and
xchg
lahf
sbb
mov
stos
out
jne
nop
pop
imul
iret
dec
stos
mov
xor
stos
loope
xchg
repz
xchg
xlat
adc
ss
jae
xor
xorl
xor
mov
pop
sbb
mov
dec
inc
ljmp
imul
cmp
bound
jbe
shlb
stos
jnp
add
push
in
add
aaa
push
and
cs
rolb
stos
les
int
mov
mov
add
xchg
lods
xchg
movsb
out
jbe
xchg
daa
dec
mov
stos
enter
xchg
push
fisubs
les
jbe
push
xchg
xchg
stos
sti
add
cmp
cltd
cmp
stos
inc
das
ret
stos
rclb
out
aaa
push
xlat
stos
push
test
in
cmpsb
cmp
cmpsl
mov
stos
adcl
jnp
cmp
jo
stc
nop
imul
in
mov
sub
jns
es
mov
arpl
push
jge
dec
and
push
pop
stos
pop
jg
and
stos
fmull
jnp
stos
mov
mov
and
faddl
jmp
jno
mov
or
in
imull
mulb
mov
inc
add
jbe
xchg
cmpsl
mov
cld
xchg
mov
repnz
lcall
stos
pop
or
jb
lods
mov
callw
stos
mov
cmp
fisubrl
cwtl
pop
fs
fwait
repz
xchg
xor
test
xchg
lret
shrl
js
lods
hlt
outsb
and
stc
mov
dec
sub
stos
sub
into
fucomip
iret
mov
outsl
ljmp
mov
ja
add
adc
dec
daa
xorl
sub
daa
mov
push
mov
clc
push
push
movsb
xchg
fldt
mov
ret
jl
loopne
insl
cs
arpl
mov
mov
dec
fdivl
shrl
inc
stos
mov
lea
or
js
push
cld
jns
dec
repz
xchg
sub
mov
call
sub
ljmp
inc
jae
or
mov
mul
stos
aas
addb
das
iret
stos
outsb
jns
sub
dec
subl
shrb
pop
xor
stos
out
jae
outsb
add
mov
add
aas
mov
das
dec
push
mov
mov
aam
out
adc
fldt
mov
mov
mov
jg
arpl
stos
sub
cmp
stos
push
outsb
loop
inc
push
mov
adcl
lahf
xchg
or
shrl
dec
sbb
leave
mov
push
js
cmp
jns
mov
jnp
push
scas
push
lock
add
sub
mov
cmpsl
sub
mov
ljmp
hlt
mov
loopne
insb
push
stos
sub
jae
int3
lret
push
mov
mov
xchg
aad
fbld
mov
push
test
stos
xlat
mul
gs
sbb
ret
xor
aas
xchg
and
cmp
inc
add
imul
xchg
lods
andb
fwait
xchg
sub
adc
xchg
add
jmp
aam
hlt
or
pop
sti
pop
iret
mov
out
lock
in
and
into
cmp
stos
push
add
sbb
sub
stos
dec
jnp
xchg
popf
imul
sti
inc
aad
and
push
das
dec
or
into
adc
std
push
adc
xor
enter
dec
push
ds
stos
add
gs
adc
stos
fbstp
lcall
sbb
xchg
lea
outsb
push
rep
add
mov
stos
lods
jg
xchg
pop
test
arpl
dec
lcall
aam
enter
std
rorb
fnstsw
dec
push
stc
stos
movsb
out
add
rol
out
dec
jecxz
sub
ss
sub
lahf
imul
lock
sbb
jg
mov
and
jo
int3
stos
test
xor
or
outsl
lods
dec
pop
daa
outsb
adc
repz
loope
pop
mov
or
mov
call
dec
jo
adc
stos
push
mov
adc
xchg
jp
push
stos
cld
sbb
fidivrl
sbbl
jnp
or
aas
repnz
mov
jne
jp
icebp
das
sbb
inc
jo
fwait
stos
fidivrs
insl
mov
popa
shrl
ds
add
push
sbb
pushf
jmp
imul
or
stos
fiaddl
filds
add
aaa
jnp
out
stos
fisubs
xor
or
adc
push
stos
pop
sub
pop
xor
bound
add
movsb
mov
stos
sub
popf
insb
push
mov
xchg
ret
sub
push
mov
sub
sahf
shrb
sub
mov
mov
ljmp
sbb
test
lock
mov
or
movsb
xchg
jnp
repnz
mov
filds
call
push
add
orl
jle
subl
mull
lea
adc
push
adc
pop
sub
repnz
stos
stos
or
or
adc
imul
loop
jb
jae
dec
data16
pop
or
or
mov
jnp
sub
lret
push
sbb
xor
stos
in
adc
mov
scas
sub
int
lea
loop
je
cmpsb
mov
mov
rcr
jecxz
out
imul
xchg
cmp
lcall
adc
stos
mov
lahf
push
out
insl
std
jecxz
arpl
mov
xor
test
xchg
or
out
jbe
stos
mov
shlb
lods
push
popf
push
out
pop
js
cld
or
stos
notl
cmp
imul
inc
in
jl
imul
aas
jecxz
nop
test
lods
cs
stos
push
add
in
ja
sub
and
rclb
lcall
pop
and
aad
icebp
sbb
jle
stos
adc
sarb
stos
and
stc
jp
mov
cmpsb
das
or
jnp
imul
imul
shrb
lods
stos
scas
lahf
cwtl
push
dec
or
dec
adc
nop
subl
jmp
mov
dec
mov
cmp
jp
sbbl
stos
mov
outsb
stos
call
fcoms
sbb
std
sub
inc
inc
test
stos
fdivr
mov
pusha
imul
adc
pop
aaa
mov
jb
aad
loope
jmp
jo
ror
push
stos
sub
stos
ror
push
fnstsw
mov
sub
stos
movb
pop
cmpsl
xchg
ret
stos
divl
jge
mov
pushf
shrb
xor
mov
stos
out
iret
or
icebp
gs
xchg
cmp
mov
jo
cmp
movsb
daa
inc
xor
adc
cmc
cmp
test
imul
sbb
mov
jbe
or
es
mov
adc
jnp
mov
mov
aad
daa
mov
pop
aas
jb
add
cmp
add
test
test
pop
adc
stos
ljmp
data16
es
jae
enter
stos
adc
xchg
and
xchg
jle
xchg
xor
mov
or
ret
lret
push
sub
outsb
mov
adc
adc
sti
loope
or
clc
stos
mov
mov
cmpsb
popa
cmpsl
jnp
dec
mov
les
int3
icebp
mov
sub
sbb
fstpl
pop
inc
xor
xchg
adc
ret
stos
in
pop
push
pop
pop
imul
fwait
add
inc
inc
stos
icebp
adc
dec
mov
jbe
jno
popa
stos
lods
dec
xchg
movsl
sub
mov
pop
adc
pop
stos
imul
data16
jo
push
popa
sub
inc
push
pop
daa
clc
or
mov
aad
xchg
cltd
xchg
stos
inc
loope
test
stos
sub
sub
shlb
imul
outsb
dec
mov
in
das
popa
stos
insw
mov
aad
cmp
pusha
cmc
out
mov
subl
push
daa
or
jge
sti
xor
or
cs
add
int3
es
stos
mov
cmp
jge
inc
sbbb
dec
xchg
push
xor
loop
movsb
fwait
gs
xchg
sbb
sbb
stos
cld
inc
dec
inc
ficompl
mov
dec
mov
stos
mov
scas
mov
or
stc
mov
mov
mov
test
dec
aad
mov
mov
stos
cwtl
pop
outsb
out
lret
sahf
jmp
mov
stos
mov
out
mov
mov
inc
dec
aad
fisttpl
lea
pop
add
addr16
push
jmp
inc
nop
insl
adc
rcrl
xchg
cmp
dec
stos
fcomi
mov
push
mov
inc
int
stos
decl
mov
cmpsb
repz
xchg
and
cld
int
jnp
xchg
push
clc
inc
sbb
dec
mov
arpl
shl
stos
adc
daa
jecxz
xor
mov
jmp
es
push
xchg
xchg
les
test
pop
cmp
and
addr16
adc
data16
rorb
into
stos
xchg
enter
xor
push
pushl
je
test
mov
dec
aad
mov
dec
sbb
jmp
jae
mov
sub
pop
pop
call
fidivs
dec
cmp
cmp
je
mov
sub
repnz
sub
stos
add
mov
fs
mov
psllw
stos
mov
mov
xor
mov
stos
jg
loop
call
movl
mov
cmp
push
jo
pop
add
adc
or
jl
jmp
jecxz
fistpll
jp
fidivs
xchg
inc
jecxz
outsl
xchg
xor
fsub
or
mov
mov
in
cs
fwait
or
xchg
and
push
cli
fwait
test
in
xor
hlt
dec
mov
fisttpll
les
fucomip
adc
adc
pop
jl
imul
mov
mov
fldcw
cltd
mov
cmp
xchg
xor
dec
stos
es
inc
popa
mov
inc
imul
push
adcb
bound
xor
and
or
test
sbb
xchg
addr16
call
stos
jb
arpl
imul
mov
stos
xchg
int
push
adc
loop
popf
and
dec
xor
xor
sub
out
lds
add
stos
pop
mov
stos
cltd
push
test
test
lahf
fwait
sbb
std
or
scas
cmp
stos
fiadds
or
inc
popa
cmp
cmp
in
imul
clc
or
xchg
adc
icebp
mov
xor
das
aaa
std
jnp
push
stos
rcl
fidivl
stos
cmp
add
mov
xor
lods
repz
stos
dec
adc
or
lret
in
and
xor
mov
pop
int3
xchg
and
aad
subl
push
pop
decb
stos
and
sbb
push
stos
inc
rclb
push
cmpsl
es
pushf
cwtl
sub
add
jns
dec
in
or
dec
pop
les
push
mov
xchg
stos
cwtl
xor
ret
out
jmp
xchg
mov
std
stc
out
nop
add
jno
fmull
lcall
movsl
insl
mov
andb
xchg
arpl
mov
adc
xchg
stos
push
cvtpi2ps
cltd
nop
repz
push
mov
outsl
stos
int
and
bound
stos
pop
ret
mov
pop
fisttpl
push
xor
xchg
jmp
stos
mov
mov
loope
icebp
inc
cmp
jmp
mov
ja
pop
mov
imul
mov
stos
dec
into
dec
lods
jmp
xor
mov
mov
lahf
sub
jmp
stos
push
mov
lcall
xor
fisubrs
enter
mov
xchg
lds
icebp
mov
outsb
and
pop
xchg
jmp
bound
sub
inc
mov
xchg
movsl
pop
stos
inc
mov
push
out
aaa
mov
stos
fildll
inc
inc
imul
mov
sarl
mov
jmp
test
xor
stos
sarb
cld
xor
push
ret
mov
in
xchg
lods
jle
in
stos
mov
sahf
dec
pop
xor
pop
stos
mov
mov
xlat
stos
dec
cli
lock
pop
xchg
es
lret
ss
outsb
ljmp
pop
cmp
ret
idivl
gs
call
stos
xchg
jnp
adc
and
cmp
fidivl
imul
mov
xor
dec
stos
mov
test
outsl
cmp
mov
xchg
dec
xchg
mov
xor
ss
hlt
addr16
test
popf
stos
lret
das
int3
adc
mov
jp
sub
sbb
pop
in
dec
push
push
xchg
cmp
lods
pop
xor
push
cmp
fisttps
fnstsw
stos
call
jns
jmp
shl
stos
mov
negl
adc
and
out
push
cmpsl
enter
sub
hlt
and
cli
stos
xchg
fistl
xlat
and
nop
daa
mov
lods
bnd
stos
idivl
jp
adc
stos
lods
or
movsb
jl
dec
stos
mov
cmp
stos
xchg
imul
in
and
lret
dec
stos
and
rorb
add
in
jne
xchg
stos
push
jae
dec
pop
xor
aas
imul
bound
jo
xchg
in
inc
cltd
lds
pop
mov
push
mov
out
jmp
outsl
and
out
and
stos
xor
jle
push
pop
stos
faddl
stc
sub
test
push
mov
das
mov
iret
cmp
outsl
imul
popa
add
mov
xlat
pop
outsb
and
clc
xor
add
sub
jmp
stos
mov
stos
cli
loopne
incb
xchg
sbb
mov
scas
xor
push
cwtl
jno
cmpsl
add
or
add
ljmp
out
in
adc
mov
gs
lret
stos
sub
repz
das
shlb
push
sbb
xchg
pop
pushf
test
inc
cwtl
arpl
ja
push
in
sahf
lcall
sub
mov
dec
mov
mov
cmp
push
stos
sbb
add
cmp
sbb
mov
pop
ret
inc
ljmp
fsubl
mov
fisttpll
loopne
es
stos
mov
repnz
cmp
mov
int3
push
mov
js
mov
stos
gs
je
iret
push
std
stos
fnstcw
add
and
daa
jae
lret
es
cmp
enter
fsubrs
std
or
pop
lret
jle
fwait
xchg
das
addr16
jmp
lret
mov
mov
add
movsb
repnz
push
and
hlt
ss
stos
jmp
adc
gs
aaa
lock
pop
fildll
mov
stos
xor
rcr
adc
jnp
jmp
mov
push
dec
push
addr16
or
js
adc
sub
jmp
and
arpl
push
jnp
jmp
mov
mov
add
sbb
mov
mov
addl
jns
cli
lods
mov
push
pop
inc
mov
pop
dec
inc
adc
sahf
or
xor
sbb
jg
orb
stos
stc
fcoms
push
scas
dec
cmp
ja
cmpsl
shrb
jg
jb
dec
push
inc
mov
mov
xchg
pop
cs
xor
xchg
daa
mov
aaa
add
xchg
pop
iretw
stos
or
lcall
sub
and
jp
xchg
inc
jbe
stos
in
lea
mov
loop
or
mov
fs
divl
xchg
imul
lods
stos
dec
dec
jae
pop
js
iret
clc
xchg
and
jmp
mov
stos
or
or
stos
xor
and
aam
insl
push
icebp
jae
nop
leave
inc
xchg
frstor
xor
or
popa
imulb
jmp
sub
sbb
test
xchg
add
subl
daa
add
mov
mov
mov
xchg
jo
into
in
fnsave
repz
inc
shlb
mov
out
aas
ret
jnp
clc
fistpll
or
inc
cmp
cs
scas
out
stos
test
data16
pop
jne
stos
push
lret
jmp
cmc
push
insl
iret
imul
xchg
loopne
inc
push
loope
in
sahf
out
inc
sbb
mov
stos
stc
test
dec
or
push
bound
out
mov
imul
pop
mov
lods
ret
stos
call
xchg
push
fstpt
scas
add
lahf
dec
addr16
call
rcr
das
fisubl
stos
sub
add
pop
lock
lds
push
jne
pushf
daa
add
lcall
jb
les
shrb
jmp
es
cld
popf
push
add
xor
xchg
out
mov
test
xchg
stos
xor
pop
stos
cld
jb
sbb
dec
dec
out
mov
into
or
int3
or
jl
add
inc
fdivrl
add
insl
jnp
or
jg
dec
inc
stos
rcrb
mov
call
mov
or
add
fisttpl
stos
enter
sub
popa
les
adc
popf
jae
dec
mov
aaa
jge
js
test
aad
mov
adc
pop
pop
cmpsb
cmp
cmp
pop
fidivrl
add
dec
ljmp
pop
cltd
lret
stos
inc
or
push
dec
das
stos
mov
repz
jg
shll
loopne
stos
add
fst
stos
inc
dec
jge
fstpt
xor
aaa
cld
int3
xchg
mov
stos
movsb
in
mov
jge
hlt
addr16
aam
pop
stos
sbb
ret
mov
inc
cmpsl
xchg
push
inc
stos
push
sahf
xor
stos
push
mov
stc
push
movsb
jnp
xor
cmc
and
mov
stos
inc
pushf
adc
xchg
mov
movsb
and
icebp
cmpsl
fwait
jnp
stos
jge
adc
xchg
in
iret
mov
leave
sbb
fwait
adc
or
in
mov
xchg
loope
stos
arpl
pop
pop
lock
adc
stos
daa
ja
stos
jne
loop
stos
test
jg
stos
or
sti
imul
int3
inc
popa
dec
cmp
decb
shr
adc
arpl
push
sub
xchg
dec
sbb
push
daa
push
in
stos
cmc
jle
ficompl
dec
jmp
cmp
mov
stos
shll
jnp
rcl
popf
stos
pop
dec
mov
scas
mov
stos
fdivrl
fistpl
in
int
orb
arpl
stos
inc
or
lea
or
fldcw
cld
sbbl
mov
fsubs
fimull
stos
imulb
jl
xchg
daa
xchg
jmp
repnz
pop
lds
jmp
ss
dec
aad
adc
stos
xlat
aas
gs
cmp
stos
cmp
xchg
push
inc
mov
push
ja
jp
stos
dec
iret
jle
lret
jb
stos
cmpsl
add
add
dec
adc
jo
sub
mov
xchg
jnp
int3
sub
jbe
dec
push
and
add
shr
mov
pop
outsl
addr16
pop
fisubrl
jmp
sbb
fwait
pop
adc
pop
nop
lret
push
dec
stos
jb
fwait
xchg
cmp
popf
mov
pop
fistpl
nop
stos
pop
fxch
push
xchg
jge
daa
stos
sarb
mov
in
pop
test
or
test
xchg
sub
mov
movsl
xchg
jmp
lret
mov
les
into
stos
xchg
push
xchg
mov
sub
cmovnp
xor
enter
xchg
xor
incl
stos
clc
mov
xchg
subb
dec
xchg
insb
imul
stos
adc
mov
test
stos
jge
xorb
dec
out
stos
sti
ret
cmpsl
push
xchg
shrl
jg
stos
shr
cwtl
inc
dec
push
stos
jl
fmuls
lcall
and
shl
daa
js
push
arpl
mov
stos
stc
mov
and
pop
mov
test
jnp
xor
ja
test
stos
jne
das
sbb
add
into
dec
shld
mov
js
in
sbb
inc
sub
inc
xchg
mov
in
loopne
roll
stos
xchg
fs
add
jo
push
out
mov
stos
orb
push
imul
adc
lret
scas
sub
mov
inc
xor
cmp
imul
data16
push
movsb
cmp
add
popf
pop
adc
ret
cmp
nop
dec
mov
aas
popf
xor
sbb
sbb
repz
shrb
outsl
cwtl
pop
addr16
es
and
inc
stos
into
xchg
xchg
mov
stos
scas
or
add
push
int
ds
repz
stos
mov
andb
ret
or
stos
xor
adcb
pop
insl
div
push
ss
fstps
pop
dec
xor
xchg
and
mov
mov
sub
xchg
jns
xor
in
imul
fwait
sbbl
cmp
dec
ficoms
sub
pop
stos
lcall
xlat
daa
filds
xchg
mov
cmp
pushf
in
jb
jns
jl
jb
int3
add
sbb
fistps
fucom
call
stos
out
xchg
adcl
lea
in
cmp
popf
addr16
shr
sti
mov
imul
ds
xchg
cmpsb
imul
jge
mov
stos
sbb
xor
cltd
lods
push
sti
dec
lock
cltd
bndstx
pop
addr16
stos
ljmp
pop
xchg
enter
sub
sbb
out
stos
pop
fistpl
xor
fcomip
adc
adc
sub
mov
push
loopne
push
js
scas
stos
repz
xchg
jb
xor
dec
jmp
add
sub
xchg
pop
lret
xchg
mov
clc
and
cmp
or
stos
stc
inc
mov
cmpsb
sub
push
iret
mov
jp
aas
stos
pop
mov
adcb
xchg
jae
cmp
jmp
mov
les
mov
cmp
push
xchg
fwait
xor
stos
popf
pop
mov
fs
sbb
stos
mov
test
fldl
xlat
je
out
xchg
mov
jl
loop
pop
jne
lods
unpcklps
aas
and
jnp
mov
outsl
stos
mov
cmpsb
cmp
cmp
stos
inc
mov
test
sub
stos
dec
push
fwait
leave
sbb
addr16
scas
xchg
sub
iret
jns
clc
push
and
ss
sub
cmp
je
rorl
or
add
xchg
add
push
loope
jns
arpl
xchg
aas
push
cwtl
or
fstl
pop
sub
aam
lret
xor
add
push
mov
cmp
inc
out
scas
jge
xchg
dec
fwait
push
stos
insb
jae
mov
addr16
mov
mov
fisubrs
repz
ljmp
loope
hlt
and
call
movsb
push
inc
adc
cmpsb
in
das
push
imull
add
fldcw
xor
dec
arpl
inc
adc
add
mov
jo
nop
outsb
aam
call
jg
xchg
cmp
inc
push
imul
int
or
loopne
cli
or
stos
inc
sub
popf
stos
lret
jle
adc
fs
insl
fcompl
stos
and
push
ljmp
jmp
add
dec
icebp
lods
loopne
xchg
lods
cmp
sahf
mov
std
imul
scas
mov
inc
cltd
shrb
sub
mov
roll
shrb
push
fwait
stos
test
movsb
cltd
xchg
stos
repz
and
in
lcall
out
xchg
pushf
loop
cs
rcll
lret
and
imul
xor
mov
inc
into
popf
movsb
call
jbe
or
sbb
imul
and
xor
imul
xor
pop
dec
stos
and
jl
or
loop
adc
add
inc
push
sbb
and
popf
aaa
or
jbe
lds
pop
fwait
je
pop
cli
scas
xor
stos
rcrl
adc
inc
jae
sub
and
cs
stos
inc
iret
add
cli
stos
outsb
mov
adcb
mov
stos
es
leave
or
shrl
testb
leave
mov
scas
stc
enter
les
mov
imul
stos
push
sbb
or
ljmp
movsb
sbb
sbb
cltd
mov
test
out
in
ss
cltd
xchg
gs
loop
xchg
xrelease
aas
stos
xor
xor
fdivl
stos
xchg
xchg
repz
jnp
sbb
push
xor
jbe
xchg
pop
xchg
insb
stos
mov
xchg
inc
imul
pushf
les
mov
mov
dec
in
imul
xchg
sbb
stos
fisubrs
xor
stos
mov
or
imul
push
stos
cwtl
cmp
pop
loop
int3
adc
cmp
ss
stos
dec
and
fistl
xchg
adc
stos
sbb
jb
and
repnz
stos
mov
hlt
std
cmp
sub
or
inc
xchg
rcl
jle
inc
stos
jo
pop
test
xor
enter
aad
inc
stos
rcrl
or
mov
mov
out
adcl
cmpsl
stos
dec
shll
inc
sahf
ljmp
out
outsb
lcall
aas
stos
xchg
jle
add
push
jmp
mov
in
jecxz
stos
fdivrl
jl
int
push
out
push
leave
adc
ret
push
push
sub
dec
sub
loope
leave
lret
cmp
lea
fwait
mov
sbb
imul
call
dec
dec
jle
mov
dec
adc
orl
mov
in
sti
loope
test
std
add
mov
xchg
pop
loop
dec
fldt
jmp
das
out
mov
adc
jle
repz
jmp
ljmp
jmp
push
mov
neg
movsb
lret
mov
cmp
sbb
push
insb
stos
jo
in
sbb
shrl
dec
int3
and
sbb
fwait
add
inc
sti
enter
add
jp
dec
and
mov
jmp
mov
add
or
cs
pop
cmp
sbb
jae
sbb
and
cmp
jne
clc
imul
in
mov
in
sub
cmp
jp
outsb
out
xor
pop
adc
test
stc
sbb
jmp
or
inc
xchg
jno
and
sub
cmpl
fisubrl
cmpsl
scas
cli
addw
hlt
mov
roll
mov
jecxz
stos
fdivrs
jne
xor
push
mov
out
xchg
stos
cmpsl
and
mov
mov
push
mov
stos
data16
loopne
test
in
stos
push
inc
mov
fldlg2
sbb
stos
scas
iret
cmp
stos
fimull
hlt
adc
stc
jp
sub
mov
sbb
lahf
stos
aas
dec
cwtl
mov
push
in
pop
stos
dec
stc
lods
icebp
sub
xlat
lea
jbe
mov
jmp
inc
test
stos
cmp
mov
int3
stos
mov
pop
popa
mov
cmpsl
test
push
sub
push
stos
fcompl
sub
jae
pop
push
mov
mov
or
das
xor
adc
movsl
stos
mulb
pop
cmp
adc
xchg
jge
pop
test
push
mov
xchg
and
stc
in
ljmp
and
and
leave
cmpsl
mov
enter
fyl2xp1
aam
lods
add
stos
xor
mov
jb
jns
bts
ss
mov
mov
arpl
jo
pushf
xchg
int3
ljmp
inc
sbb
adc
dec
add
mov
lret
stc
stos
test
sbb
mov
xchg
outsb
push
ljmp
in
cmp
cltd
sbb
stos
bound
fsubrs
mov
ret
adc
daa
jb
leave
cltd
data16
stos
inc
sub
dec
inc
cmp
cmp
lahf
addr16
mov
rcrl
cwtl
xor
stos
divb
int3
xchg
stos
jl
pop
jns
scas
mov
mov
fwait
pop
sub
cmp
inc
mov
dec
int
stos
cmp
mov
imul
xlat
in
pop
stos
cmc
clc
mov
dec
pusha
mov
stos
cmp
sti
pop
xchg
sarl
dec
push
scas
mov
movsb
pop
mov
pop
add
add
daa
int3
popa
leave
cmp
mov
and
ds
icebp
or
dec
jl
xchg
stos
ss
in
or
daa
xor
int3
in
add
cmp
xor
push
lret
mov
ljmp
pop
test
mov
fstpt
mov
jbe
jb
out
sbb
test
mov
imul
mov
mov
aaa
jae
inc
fnstcw
inc
loope
std
mov
hlt
jg
fbstp
cmpsb
dec
mov
cmpl
xchg
mov
out
stos
jo
push
lea
gs
notl
cmp
bound
add
stos
sbb
and
mov
movsb
sub
cli
stos
adc
mov
jmp
movsb
xchg
insl
sub
dec
fwait
rcrb
shll
mov
dec
and
js
imul
stos
aas
mov
daa
adc
and
into
ficoms
loopne
cmpsb
sub
cmp
outsl
jmp
sub
lcall
fisubrl
popl
ds
jp
mov
outsb
mov
aam
pop
sbb
stos
jmp
xchg
jp
stos
aaa
inc
sbb
repz
out
xor
pusha
je
stos
xchg
cmpb
clc
fs
cmp
lret
scas
stos
push
jecxz
sub
jo
test
stos
outsb
lcall
mov
stos
es
dec
cmpb
bound
mov
xchg
js
pop
stos
fiaddl
xchg
adc
test
imul
mov
mov
stos
and
pop
daa
mov
sub
ljmp
sub
add
daa
cmpsl
jns
mov
inc
stos
cltd
lret
mov
mov
movhps
stos
movsl
jg
xchg
jge
sbb
aas
lea
loop
stos
sbb
xchg
mov
stos
ds
dec
in
aaa
test
mov
jp
and
stos
push
mov
lods
fldt
aaa
mov
xor
popf
mov
out
or
je
scas
dec
jp
add
jecxz
sbb
std
inc
scas
addr16
insb
or
lds
xchg
cli
mov
stos
movsl
add
inc
stos
pop
pop
test
jb
scas
es
data16
int
pop
adc
dec
cmp
cli
sbb
jb
fcompl
stos
dec
cmpsb
cmp
xchg
mov
cmp
out
stos
dec
fs
xchg
dec
xchg
stos
idiv
pop
negb
mov
loope
or
imul
sub
mov
cmc
push
xlat
test
popl
sbb
rorb
push
arpl
xor
inc
jmp
push
repnz
bound
push
shrb
stos
dec
and
jo
loopne
mov
adc
pop
test
jmp
lds
jl
or
loop
in
aas
mov
int
lods
mov
fisttpll
sub
and
cmp
nop
lret
jae
mov
jmp
lcall
cli
sub
mov
call
jno
xchg
and
push
push
outsl
mov
stos
lahf
mov
dec
stos
mov
xacquire
popl
stos
fcompl
or
push
sbbb
inc
ss
mov
stos
sbb
arpl
stos
inc
fnstenv
add
mov
iret
jbe
mov
addr16
cld
movsb
add
jns
cmp
jp
test
cli
jge
lods
mov
stos
imulb
xchg
pushf
jne
add
jle
adc
aad
sbb
lret
sarl
repz
mov
cmp
stos
out
cmp
test
mov
mov
stos
xchg
sub
les
out
or
leave
test
xlat
sar
in
jmp
rclb
loope
dec
sbb
js
cmpb
pop
stos
and
lds
push
or
jmp
and
clc
or
lods
cs
inc
movsl
xchg
addl
mov
and
adc
lods
scas
pop
xchg
je
sti
inc
push
in
iret
pop
in
fcom
outsb
pop
repz
fwait
inc
jle
fistl
adc
popf
mov
mov
xorb
mov
jnp
bound
jb
stos
or
push
xor
enter
jp
cmp
push
test
pop
cld
stos
xchg
imul
aas
stos
lds
test
std
fwait
arpl
out
mov
cwtl
stos
mov
shrd
cmp
jne
jmp
daa
mov
das
mov
scas
and
cmp
adc
mov
dec
xlat
adc
loop
test
stos
test
testb
test
jmp
sbb
cmp
stos
mov
pop
pop
and
xchg
imul
or
xchg
lcall
jno
aas
stos
aam
mov
movsb
or
mov
ja
stos
push
pop
inc
lret
dec
or
mov
out
stos
inc
mov
and
xor
jecxz
lds
xchg
mov
dec
stos
ficoms
js
sub
addr16
sbb
xchg
int
stos
or
and
push
cmpb
sub
in
add
jl
dec
jp
xchg
fst
jne
lahf
shlb
fisubrs
push
pop
add
clc
leave
add
adc
stos
int3
lea
xchg
stos
adc
adc
xchg
stos
mov
pop
mov
jmp
imul
pop
mov
scas
in
stos
imul
dec
lods
arpl
xor
jne
stos
imul
out
stos
loop
xchg
and
cs
mov
loopne
cwtl
ljmp
and
xchg
data16
adc
pop
mov
shrb
out
fisttps
jo
cwtl
dec
jno
sub
mov
bound
mov
dec
in
lahf
or
sbb
jmp
push
stos
sub
shlb
push
push
neg
mov
inc
stos
fsin
push
add
xor
sub
mov
cmp
fists
lahf
dec
lret
outsl
mov
or
cmp
scas
stos
sub
xor
in
lret
bound
cltd
jo
lcall
mov
mov
out
or
arpl
clc
cs
ds
loope
fsubrs
and
mov
cmp
or
scas
pushf
inc
add
lret
xchg
bts
dec
mov
shlb
lret
mov
mov
in
pop
and
aas
xchg
lds
jns
push
leave
loop
inc
aam
rorl
xchg
imul
cltd
andl
mov
pop
add
and
mov
adc
jecxz
and
mov
xchg
xorb
gs
in
pop
add
xor
enter
mov
sub
push
stos
lods
sbb
xchg
dec
data16
sbb
movsb
xchg
fwait
jge
cwtl
xchg
dec
stos
push
out
cmp
dec
mov
dec
jmp
jo
mov
sti
add
js
or
stos
mov
outsl
fsubl
jl
les
fistpll
mov
scas
cli
cmp
cwtl
outsb
inc
out
lods
and
cld
push
push
lock
pop
leave
stos
xchg
sbb
stos
in
int3
aaa
dec
scas
scas
and
xchg
ljmp
lret
lahf
popa
int3
pop
stos
jnp
lods
add
cltd
push
push
cmpsl
stos
test
insl
rcrl
cwtl
adc
xor
xchg
pop
sbbb
daa
test
js
roll
sub
test
sbb
inc
jne
and
addl
or
out
xor
jl
fcoms
push
push
int3
cmpsl
out
fstpl
dec
aaa
dec
inc
sbb
jo
ljmp
imul
shrb
lcall
stos
lret
leave
sbb
and
jge
push
call
stos
lcall
mov
lds
call
add
sti
stos
inc
mov
sbb
stos
push
cmp
xchg
leave
jmp
movsl
pusha
fisttpl
lcall
mov
lds
xchg
loop
call
lods
das
shll
sub
xor
mov
in
ja
or
jl
pop
stos
add
fcoms
xchg
cmp
stos
je
add
push
inc
cmp
push
shl
jnp
loope
mov
into
ret
ljmp
stos
cmp
adc
mov
cmp
into
stos
cli
mov
push
mov
xchg
dec
inc
xor
push
mov
imul
xchg
cmp
add
imul
mov
mov
loope
mov
cli
and
lret
into
pop
daa
adc
dec
push
stos
mov
xor
in
dec
orb
scas
push
das
sub
shr
jg
push
stos
fwait
inc
mov
hlt
xchg
sbb
out
xlat
stos
or
inc
icebp
or
gs
stos
imul
jno
pop
fs
jns
jnp
dec
inc
inc
aaa
adc
mov
xor
pop
lcall
pushf
imul
imul
movsl
fsubrs
mov
mov
lret
pop
cpuid
out
pop
stos
mov
popa
xchg
jo
xchg
stos
inc
fiadds
push
inc
into
pop
stos
imul
outsl
push
fdivp
mov
push
iret
mov
mov
mov
xchg
pop
cltd
outsb
stos
call
jo
mov
mov
add
cmpsb
adc
notb
mov
push
cmc
and
mov
xchg
add
pusha
lahf
pop
adcl
cmc
lret
fisttps
sub
testb
arpl
push
rorb
or
mov
push
int3
and
mov
roll
lahf
cmp
pop
inc
stos
mov
leave
jp
stos
je
sbb
aas
push
stos
dec
lret
sti
xlat
xchg
negl
xor
lods
inc
mov
push
push
or
notl
pusha
xchg
cli
xchg
xor
into
scas
test
jbe
cld
xchg
dec
stos
mov
jmp
xorb
push
mov
pop
jnp
imul
stos
push
enter
lfs
hlt
ljmp
jl
or
inc
cmp
jae
cld
stos
xor
mov
sbb
push
arpl
jae
push
scas
xchg
inc
in
stos
in
push
mov
enter
add
fnstcw
mov
fwait
push
mov
addb
inc
mov
and
inc
decb
mov
icebp
ljmp
mov
cmc
inc
ret
mov
popf
add
jp
clc
pop
sub
stos
sub
lret
adc
stos
push
xchg
lock
int
stos
imul
pop
imul
pop
push
inc
stos
add
nop
mov
sub
mov
mov
stos
test
aaa
jbe
sbb
push
dec
cwtl
dec
test
movsb
sub
imul
push
fidivrs
adc
add
sub
push
cmp
inc
push
popf
pop
and
mov
and
add
pusha
pop
push
inc
mov
loop
fstpt
ficoml
sub
mov
cmp
ficoms
xor
cmp
mov
enter
sti
stos
fldl
xchg
js
loope
stos
xor
or
lret
scas
pop
sahf
daa
inc
ja
insl
mov
cwtl
scas
cs
sub
jo
mov
ret
lods
scas
adc
shr
xor
xlat
stos
in
lds
pop
jp
push
gs
popf
in
shll
cltd
lock
xchg
mov
ret
stos
incl
push
lret
push
xor
xor
xchg
adc
sub
test
lods
into
push
movsl
ljmp
mov
adc
stos
enter
mov
lret
add
or
pop
mov
sbb
lea
pmulhuw
std
inc
dec
mov
cltd
stos
pop
cmpsb
sbb
inc
xor
ret
sub
out
push
stos
popf
add
add
pop
inc
test
stos
inc
data16
pop
adc
test
stos
xchg
stos
punpckhdq
shll
push
push
mull
mov
add
jnp
sub
pop
mov
sub
jns
in
push
stos
xchg
pop
pop
shrb
lret
push
aaa
aas
mov
and
cmp
bound
js
fists
movzbl
mov
fiaddl
adc
lods
fnsave
arpl
divl
mov
fists
stos
out
adc
fstpt
rorb
mov
and
popa
mov
rorl
stos
int
jle
jp
sub
and
es
ljmp
inc
test
cs
inc
adc
xor
scas
mov
xchg
fldcw
lcall
cmp
adc
pop
sub
jb
js
mov
inc
and
stos
jle
rcll
outsb
sti
mov
aam
mov
jmp
or
dec
stos
ret
mov
mov
sti
imul
scas
fsts
mov
or
dec
loope
imul
ret
repnz
xchg
je
mov
fcmovb
jb
scas
pop
std
stos
jl
lcall
vandnpd
divb
mov
xor
push
fstl
lea
js
mov
or
insb
inc
pop
mov
mov
pinsrw
lcall
cwtl
and
shrb
stos
sub
add
inc
push
jmp
sbb
cmp
lock
mov
stos
inc
jo
and
lcall
subl
mov
inc
ljmp
out
stos
nop
ds
repz
ret
hlt
cmp
cli
popa
test
xchg
mov
addr16
repnz
sti
xchg
mov
stos
xor
lret
mov
jle
mov
fwait
orb
or
clc
push
mov
fcos
adc
rep
jle
add
xlat
xchg
psubd
loopne
cmpsl
stos
test
fsts
xchg
dec
and
inc
lods
jnp
stos
arpl
ljmp
stos
cmp
push
and
add
leave
jns
adc
jmp
xchg
lahf
sbb
mov
push
add
sbbb
stos
and
je
push
lock
sub
imul
scas
stos
cmpsb
xor
pop
sub
mov
inc
cmp
adc
jge
mov
test
xor
add
int3
xchg
stos
or
pushl
mov
int
or
popf
add
inc
stos
clc
push
fldcw
cmc
cmp
scas
stos
xor
cmp
das
add
loop
xor
push
jo
sbb
mov
stos
jmp
sub
fs
mov
inc
repnz
or
mov
movsb
mov
fucomip
cld
stos
and
adc
or
outsl
popf
add
mov
test
mov
fldenv
stos
adc
push
stos
and
aad
cmp
scas
jmp
xor
popa
push
adc
add
mov
xchg
push
mov
jnp
dec
test
stos
fisttpl
into
jecxz
xor
test
imul
sub
push
test
xchg
shrb
mov
addr16
roll
push
adc
paddw
mov
js
jp
sbb
add
cmp
pushl
push
adc
jnp
scas
mov
stos
inc
in
test
add
pop
addr16
scas
das
lock
stc
fsts
ljmp
repnz
mov
or
in
adc
cmp
mov
das
stos
jb
xchg
add
cmp
sub
test
mov
stos
js
mov
ljmp
jge
loop
sub
stos
push
mov
xchg
stos
xlat
add
pop
jno
mov
dec
inc
movsb
cwtl
inc
xchg
cmp
mov
cltd
pop
imul
mov
scas
mov
rep
in
into
add
mov
sbb
and
mov
xchg
push
dec
in
cli
cltd
daa
xor
scas
jg
fdivr
subl
mov
mov
mov
out
into
cmc
stos
fcmovnu
movsl
test
clc
jecxz
sub
ds
mov
dec
les
hlt
jmp
cmp
in
idivb
insl
xchg
jle
fldt
rolb
aas
imul
lea
daa
outsl
stos
pop
pop
data16
scas
jle
jmp
cmp
outsb
mov
sub
jecxz
push
mov
prefetchw
stos
jo
clc
pop
add
adc
fldenv
mov
inc
stos
adc
test
jno
int
dec
pop
push
mov
call
out
xchg
cmpl
push
stos
out
mov
in
jns
lcall
mov
stos
xchg
movb
xchg
loope
cmp
pop
xchg
adc
test
add
xchg
imul
popf
dec
cld
add
pop
sbbl
and
imul
popa
jae
mov
test
fmull
loopne
pusha
cs
stos
inc
mov
push
sahf
mov
imul
xchg
arpl
clc
xor
xor
mov
cmp
mov
lods
test
mov
es
xlat
call
push
xchg
pop
push
stos
out
cs
xchg
ret
aad
mov
add
iret
stos
cmc
movsb
adc
sbb
jns
fisubrl
push
enter
jmp
mov
fmulp
imul
mov
into
ret
push
xchg
lock
insl
stos
cwtl
popf
push
sub
pop
sbb
repz
add
call
jp
jbe
xchg
sub
insb
das
out
pop
jb
pop
push
movsb
stos
fcmovb
sub
inc
adc
push
push
je
xchg
and
xchg
cmp
cmp
push
aam
orl
je
lock
test
cwtl
ds
push
nop
fisttps
cmp
repnz
lahf
les
add
test
stos
pop
sahf
xchg
pusha
cmp
xchg
lods
out
push
push
xchg
or
enter
subb
push
dec
jmp
stos
mov
aad
sbb
sub
and
jp
push
sbb
js
jge
inc
scas
push
leave
rol
mov
stos
insb
mov
dec
jmp
imul
lret
add
or
push
fwait
pop
xor
add
dec
push
cwtl
sub
cld
fwait
add
mov
dec
inc
loopne
pushf
and
cmp
mov
xor
push
jne
push
xchg
pushf
push
inc
inc
cwtl
pusha
sub
cmp
mov
add
push
sbb
mov
xchg
xchg
lods
aaa
stos
arpl
cwtl
pop
js
mov
and
add
cmp
xor
outsb
notl
xor
dec
xchg
adc
rorl
push
mov
test
xchg
cltd
jno
sub
add
stos
xor
test
stos
fldt
pushf
adcb
arpl
xor
dec
stos
aad
cltd
xchg
repnz
stos
push
cmp
sub
pop
push
cmc
sub
fs
pop
mov
in
stc
xor
mov
xchg
data16
jmp
icebp
aam
out
leave
push
xchg
cli
repnz
and
ss
inc
pop
adc
stos
lea
mov
lret
xchg
jmp
push
cld
shll
push
mov
xchg
les
in
je
movsb
push
addr16
movsl
xchg
sub
lea
stos
mov
adcl
xlat
stos
inc
dec
mov
and
lcall
mov
xchg
sbb
jnp
sub
add
ret
cmpsl
stos
or
nop
push
stos
into
add
int3
fistpll
int
and
cmp
mov
js
into
dec
pop
sbb
test
daa
movsl
lcall
sbb
push
mov
dec
mov
cwtl
imul
jge
shrb
sbb
pop
fs
popl
lret
icebp
jmp
pop
gs
jl
cld
push
pushf
mov
inc
sub
cwtl
stos
dec
shrb
jmp
xor
jmp
jg
sub
cmp
cmc
adc
fs
jnp
jno
shll
xlat
rorb
pop
test
sub
or
iret
mov
std
loop
stos
or
bound
jmp
sbb
jp
cmp
add
jb,pt
mov
shrl
cmp
fidivrs
out
inc
add
sbb
pop
cmpsl
adc
and
pop
imul
fistl
leave
aaa
lods
jp
stos
movb
int
cmpsb
cmp
imul
sub
imul
push
repz
mov
sub
test
jmp
inc
into
aas
lods
push
imull
cli
stos
out
subl
cmpsb
call
outsb
mov
orl
in
imul
jne
push
pop
sbb
stos
push
pop
or
inc
jge
and
stos
jl
lret
sub
subl
stos
jmp
in
pop
inc
mov
es
int3
sahf
add
je
inc
sbb
shl
movb
lea
pop
cmp
daa
or
in
and
mov
pop
stos
mov
cmc
dec
pusha
stos
adc
mov
bswap
jno
cmc
ds
mov
out
out
mov
rolb
loope
jb
sbb
mov
stos
gs
mov
scas
jl
mov
mov
dec
andb
aaa
xchg
or
stos
push
in
xchg
push
sbb
xchg
popf
xchg
dec
push
imul
sub
out
std
stos
sahf
es
rcrl
jmp
mov
mov
push
ljmp
call
movb
and
jno
sbb
jns
shrl
fisubrl
in
inc
or
aad
int
stos
icebp
xor
jl
stos
mov
outsl
jmp
stc
jge
outsb
xor
gs
in
stos
push
or
sbb
mov
sbb
xchg
and
jg
xor
stos
out
and
mov
or
stos
roll
pop
xor
repnz
leave
jno
mov
cmp
pavgw
mov
into
stos
ffree
in
hlt
scas
jnp
stos
xchg
inc
xor
adc
lahf
nop
adc
add
ss
jmp
rolb
inc
dec
stos
jl
jno
arpl
pop
sbbb
stos
lahf
dec
pop
adc
or
cwtl
stos
and
cmc
cmp
inc
into
lcall
mov
pop
stos
mov
je
testb
fildl
fwait
int
jo
xchg
loope
stos
in
ret
les
and
imul
adc
jmp
shlb
or
or
xor
cmovno
jnp
adc
sbb
mov
sbb
jecxz
mov
rcr
push
mov
cmp
lock
pop
popf
push
stos
popa
adc
xchg
lds
outsb
fnsave
mov
sbbl
jb
stos
jno
roll
and
jle
std
sbb
push
test
decb
stc
add
adc
int
push
mov
push
addr16
xor
adc
test
sub
xchg
or
mov
test
xor
mov
inc
sbb
lea
push
mov
stos
rcr
jecxz
mov
inc
rolb
sbb
pushf
in
mov
fsubl
mov
mov
add
push
push
stos
push
inc
iret
mov
fwait
js
sub
in
cltd
stos
fsubrs
dec
jl
mov
inc
sbb
int3
data16
cmp
sub
mov
stos
mov
cwtl
stos
scas
nop
mov
and
dec
stc
das
and
mov
and
cmp
stos
sbb
jmp
fnstcw
mov
clc
lods
push
das
fsubrl
cmp
inc
add
xchg
inc
mov
sbb
xor
mov
add
ja
mov
or
cmpsl
mov
and
mov
cmpsb
stos
je
dec
fs
jo
ljmp
sbb
sub
in
jbe
or
sbb
mov
push
hlt
sbb
push
mov
int3
jb
stos
xchg
jmp
dec
lock
lret
lret
stos
aaa
dec
movsl
mov
fwait
inc
pop
imul
mov
xchg
mov
dec
aas
outsl
xchg
stos
add
imull
or
icebp
je
push
popf
repz
es
in
inc
scas
or
push
out
in
stc
ss
stos
mov
ja
mov
into
xchg
enter
aas
mov
cwtl
rcrl
xchg
jne
add
jo
mov
jmp
mov
xlat
and
pop
lods
and
lods
mov
xlat
inc
adc
mov
int3
lret
dec
cli
addr16
call
stos
outsb
gs
lds
mov
adc
inc
or
shrl
sbbb
or
imul
jmp
pop
xchg
mov
aad
dec
inc
push
cmpsb
mov
int
lods
aas
js
mov
fildl
push
dec
mov
shll
mov
dec
insl
int3
cwtl
daa
cmp
push
mov
inc
stos
sub
mov
stos
xor
mov
jge
int
movl
pusha
push
scas
push
xor
xor
push
mov
or
cmp
mov
nop
lea
add
pusha
lods
xchg
cli
stos
shlb
insl
xchg
sub
jns
push
pop
dec
out
pop
gs
stos
dec
testl
iret
ficompl
imul
std
push
mov
in
push
xorb
add
je
ljmp
jnp
push
xor
lods
in
sahf
push
stos
data16
push
int3
loop
pushf
stos
inc
sbb
jmp
insb
pop
stos
and
cmp
imul
out
xor
cmp
xchg
xchg
pusha
lahf
sbbb
pop
test
scas
ljmp
mov
mov
cltd
fs
pop
mov
lcall
cmp
insb
ficomps
loope
jge
push
xor
mov
daa
xor
inc
loopne
stos
and
cmp
scas
sbb
or
hlt
mov
dec
mov
cltd
dec
push
mov
stos
xchg
clc
enter
or
movsb
iret
or
bnd
pop
test
icebp
inc
jno
xchg
jle
subl
jmp
or
or
and
pop
jne
cmp
push
in
push
out
mov
stos
xchg
fidivs
les
inc
nop
cmp
push
push
sub
inc
push
xchg
sub
arpl
and
add
sbb
hlt
xchg
push
adc
mov
lock
xchg
clc
stos
mov
cmpsb
push
lods
push
pusha
sahf
stos
xor
scas
movsl
rorl
imul
inc
pop
sahf
lods
stos
mov
call
cmp
das
fisubrs
mov
roll
cld
enter
xor
movsb
popf
xchg
fsubrp
xchg
iret
dec
mov
xchg
stos
into
test
mov
stos
adc
mov
push
stos
in
and
cmp
and
out
int3
pop
imull
fsubrl
fnstsw
mov
fwait
mov
fcompl
push
mov
inc
push
inc
adc
aaa
stos
mov
icebp
movsl
cmc
test
test
sub
xchg
adc
mov
cmpl
mov
jp
stos
fisubrl
loopne
stc
adc
stos
mov
jl
or
ja
pushf
push
stos
or
sbb
out
aaa
inc
bound
mov
mov
push
jb
in
outsb
std
and
ret
dec
push
sahf
js
hlt
lods
jecxz
add
lock
popf
pop
stos
cs
push
es
int
stos
adc
fidivl
or
idivb
xchg
test
cmp
xchg
stos
inc
and
or
test
repz
add
stos
adc
inc
out
stos
std
push
push
xchg
daa
popa
and
outsl
pop
testb
mov
inc
in
mov
push
dec
mov
sub
or
jge
loopne
aad
mov
cld
fstps
outsl
fdivl
ja
cwtl
jl
stos
sub
xor
cld
imul
inc
cli
test
add
stos
mov
xchg
jae
outsl
stos
pop
adc
sub
dec
push
push
clc
cmp
sbbl
mov
jo
xchg
gs
leave
jbe
stos
mov
dec
adc
lret
scas
clc
imul
mov
add
adcb
sub
mov
mov
mov
xchg
mov
xor
sub
scas
stc
cltd
dec
movsl
lods
lret
stos
jmp
jb
rep
adc
sarb
xor
ljmp
stos
loope
pop
mov
stos
mov
daa
std
sub
sbb
stc
cmp
sti
aas
lods
mov
lret
inc
sbb
cmp
sub
mov
push
test
cmp
hlt
jo
inc
cmpsb
dec
mov
inc
test
add
sub
xor
stos
dec
and
and
rcl
jmp
xchg
mov
mov
js
sbb
sbb
inc
aad
pop
stos
fmull
add
cmpsl
leave
xchg
scas
nop
cmp
dec
or
repz
cltd
icebp
pop
lods
mov
dec
xchg
or
stos
test
shll
xchg
dec
xchg
fcoml
insb
test
sbbb
sub
lods
mov
imul
xchg
setg
dec
stos
add
dec
pusha
es
mov
cmp
cmp
pop
mov
jmp
xchg
fists
add
xchg
push
mov
imul
stos
or
es
cmp
sub
push
pushl
popa
xchg
xor
add
addr16
push
leave
sub
cmp
pusha
lods
lret
mov
in
shrb
dec
stos
into
and
pop
imul
stos
inc
mov
test
xchg
or
mov
mov
nop
cmpsl
inc
xchg
cmp
ja
push
cld
cwtl
aad
or
lods
push
stos
stos
cmc
rolb
call
and
xor
jle
push
and
pusha
sbb
push
sub
imul
push
jno
xchg
push
mov
arpl
mov
aas
stos
cmp
test
stos
inc
aam
insb
add
in
mov
lret
xor
dec
mov
stos
add
pop
stc
das
inc
iret
pop
stos
cmpsl
sbb
shrl
push
sub
adc
stos
mov
rcll
mov
push
stos
push
adc
cwtl
stos
push
lret
cld
daa
mov
sahf
loope
mov
stos
push
jae
cltd
stos
pushf
cmpl
stos
pop
xorb
stos
mov
aad
xor
cmp
and
outsb
mov
or
xchg
cld
jmp
idiv
sub
mov
inc
shrl
xchg
in
shr
and
fisubrl
pop
sub
xchg
stos
je
jnp
lret
mov
bound
cmc
add
jmp
int3
std
xlat
jns
call
cmp
stos
test
mov
iret
or
stos
mov
nop
add
mov
pop
movsl
dec
fistl
orb
stos
movsbl
orb
loopne
stos
in
pop
sbb
aaa
push
adc
enter
aas
sub
leave
mov
rorb
out
rcrl
inc
rorb
jge
mov
sub
lock
jns
adc
fnsave
jo
in
cmc
fwait
rcrl
dec
xor
shlb
mov
xchg
cmp
push
inc
cmp
lods
stos
jnp
ret
sub
mov
or
mov
and
mov
lret
movsl
stos
mov
fists
fnstenv
test
lcall
mov
test
scas
imul
iret
mov
fldenv
inc
adc
arpl
fwait
or
stos
les
xchg
pop
or
sbb
sbb
scas
imul
jmp
int3
leave
aas
mov
lret
xor
scas
data16
insb
mov
mov
stos
nop
lock
mov
mov
cld
gs
fwait
mov
das
mov
mov
ja
movsb
test
xor
and
shrb
outsl
insb
pop
call
xchg
jl
cld
stos
dec
jnp
pop
ficompl
xor
out
push
xor
test
jne
rcl
mov
mov
cmp
mov
fyl2xp1
std
lret
mov
leave
shlb
nopl
push
pop
and
jmp
mov
aad
or
mov
scas
mov
cmc
mulb
or
cmp
push
cmp
jbe
xchg
test
in
stos
push
js
rcr
cmp
ss
cmpsl
mov
pop
adc
mov
daa
stc
data16
add
sbb
ja
outsl
stos
mov
jae
pusha
sti
in
pop
cltd
fwait
test
les
xchg
cmpsl
sti
out
stos
mov
xor
aas
mov
stos
jns
and
dec
lea
aam
sub
pushf
lcall
mov
lods
repz
pop
icebp
dec
and
in
mov
test
ja
adc
neg
mov
jmp
fstpl
push
fwait
clc
xchg
lret
adc
aad
js
jecxz
mov
dec
dec
stos
pop
sbb
xchg
adc
test
pop
movsb
int
stos
stos
aam
push
cmpsb
xor
sbb
mov
adc
mov
test
mov
lods
pop
mov
xchg
inc
or
jns
int
xchg
fisubrs
sti
enter
add
xchg
inc
outsl
add
pop
mov
push
xlat
xchg
mov
shlb
mov
imul
lahf
adc
fmuls
mov
inc
sbb
push
repz
lcall
mov
lods
stos
lock
pusha
cmp
stos
xchg
shll
fldt
ss
cmp
cltd
cmp
mov
xor
xor
sub
sbb
cmp
cmp
sbb
mov
cmpsl
jne
cs
mov
jae
ror
scas
xchg
mov
gs
xor
mov
js
add
pop
push
push
movsb
stos
dec
aad
push
nop
in
daa
shlb
pop
add
lret
iret
cmp
pop
xchg
repz
mov
mov
mov
aas
jecxz
jl
pop
rorb
movsb
test
and
lahf
incl
sti
insb
sbb
and
add
or
in
dec
push
outsl
stos
inc
add
or
or
cltd
inc
adc
and
out
mov
test
daa
mov
mov
rorl
add
int
stos
sbb
mov
xlat
stos
or
aad
inc
xor
mov
inc
fstps
pop
mov
sbbb
daa
mov
stc
ret
adc
mov
call
cs
mov
imulb
stos
pusha
movl
stos
pop
adc
daa
and
cltd
es
xor
push
dec
ret
mov
and
push
inc
bound
push
cmp
addr16
push
pop
int3
mov
out
imul
stos
imull
cmc
test
cmp
cld
stos
jp
pop
mov
xchg
stos
mov
sahf
pop
repz
jb
adc
cmp
dec
or
dec
stos
xor
ds
mov
arpl
ret
stos
loopne
sbb
loop
and
dec
lock
or
adc
sub
rcl
mov
out
int3
lahf
popf
add
in
fdivl
movsb
stos
mov
dec
pop
stos
sbb
data16
movsl
loope
mov
fdiv
cmp
jb
lahf
xlat
stos
rcl
ficoms
addr16
or
sbbl
jmp
or
jmp
data16
lahf
in
push
ja
push
stos
fldl
push
dec
push
stos
inc
pop
inc
cmp
les
cmp
dec
stos
das
stos
stc
sub
sub
sub
cld
push
cwtl
dec
stos
fldcw
push
jmp
jae
jbe
movsb
sbb
mov
fcompl
mov
leave
jns
mov
in
fwait
or
xor
clc
sub
out
scas
pop
pop
aas
mov
xchg
stos
gs
mov
repz
cld
sub
stos
add
jg
inc
ret
stos
adc
loope
push
dec
arpl
inc
lock
lds
cmp
stos
mov
mov
dec
ret
shrb
cmp
daa
aas
dec
inc
imul
out
loop
les
aas
int
cltd
leave
decb
mull
jns
sbb
stos
fidivs
in
stos
sbb
dec
das
sbb
mov
in
dec
mov
cmp
jb
mov
xchg
xor
and
sub
cltd
jmp
xchg
xchg
movsb
or
adc
dec
add
in
or
mov
xchg
fwait
jae
push
xchg
mov
cmp
inc
push
pusha
add
pop
xor
aad
fs
sbb
aas
addl
add
sub
stos
jb
dec
imul
scas
mov
imul
dec
mov
les
lock
in
out
mov
dec
jno
movsb
lods
mov
cmp
leave
imul
shlb
or
pushf
push
mov
xchg
dec
push
stos
bound
xor
xor
notl
jnp
stos
inc
pop
leave
ja
cmpsl
movsl
dec
outsl
jmp
fidivl
ficoml
pop
mov
lret
cmp
in
leave
xchg
out
mov
ljmp
jge
adc
sub
stos
dec
push
push
adc
jne
cmp
test
std
sub
addr16
lock
outsl
cld
mov
dec
movsl
filds
sahf
dec
mov
call
or
fnstcw
xor
xchg
jno
test
add
outsb
int
loope
cmp
jnp
fdivrl
sar
mov
xchg
inc
cltd
adcl
push
data16
lahf
inc
mov
scas
repz
sti
xor
lods
jo
loopne
jnp
das
dec
mov
test
and
test
lret
test
sub
xbegin
or
adc
arpl
scas
lods
mov
lods
push
shlb
stos
outsb
add
scas
dec
sub
stos
xchg
push
push
out
jae
stos
and
push
pop
repnz
into
add
insl
in
xor
jne
or
aad
mov
orb
ljmp
xor
jns
jmp
pop
cmp
mov
push
xchg
inc
jmp
cmpsl
in
jbe
adcb
dec
andl
xor
dec
and
pusha
lahf
lcall
out
fst
test
repnz
imul
xchg
or
fcompl
pop
ja
stos
insl
stc
mov
sub
push
dec
stos
inc
aad
fimull
imul
jbe
rcr
push
arpl
cmc
xchg
mov
cmp
inc
shrl
xchg
push
and
push
xchg
stos
lahf
and
inc
insb
stos
ret
pop
cwtl
mov
inc
stos
addr16
pop
jge
cmpsb
std
stos
jae
mov
shrl
repz
jmp
lods
ljmp
cmp
cltd
xchg
fdivr
into
cwtl
mov
push
adc
cmp
pop
stos
imul
adc
push
cmc
scas
cmp
ficoms
sbbl
jmp
pop
or
jne
nop
xchg
arpl
mov
xlat
pop
and
jo
sub
sub
mov
scas
pop
sub
stos
jb
lret
repnz
stos
stc
cmp
test
sbb
mov
add
sbb
add
dec
pop
std
repnz
fisttpl
pusha
jae
test
push
sbb
ss
sbb
mov
push
inc
push
ja
stc
jae
lahf
or
cwtl
scas
xor
push
lock
popa
movsb
xchg
mov
or
aaa
stos
hlt
mull
lea
incb
aas
adc
pop
pushf
imul
cmpsl
int3
lea
lds
mov
scas
adc
xchg
stos
and
mov
out
push
stos
adc
into
les
mov
insl
or
sbb
dec
jecxz
jno
std
jge
push
mov
sahf
lock
divl
out
cwtl
stos
lret
push
adc
je
mov
mov
push
mov
aam
lea
cwtl
push
rcrl
stos
pop
pop
in
in
mov
jae
fisubrs
and
iret
lret
icebp
stos
mov
dec
ljmp
popf
jp
nop
sti
gs
stos
aaa
and
test
popf
mov
aaa
mov
dec
cmp
cli
cmp
sub
and
hlt
fsubl
cld
inc
push
cwtl
push
mov
jg
adc
cmpsb
add
cmp
mov
mov
out
inc
int
jo
sbb
insb
cmp
or
loopne
pop
imul
movl
stos
mov
sbb
stos
cmp
pop
lss
test
sbb
mov
or
stos
add
paddw
das
testb
xchg
jns
jnp
insl
aad
mov
adc
xor
imul
daa
fnsave
mov
stos
repnz
dec
insb
test
cmp
jnp
stos
std
sbb
or
popa
mov
push
stos
dec
pop
or
mov
in
stos
jl
movsl
aas
inc
and
mov
testb
or
pop
pusha
jmp
fnsetpm(287
push
scas
stc
shrl
lahf
xchg
ror
stos
mov
jecxz
lds
and
mov
aaa
add
xchg
xchg
mov
or
sti
stos
pop
sarl
cwtl
rcr
addr16
cmpl
sub
test
js
sti
pushf
pusha
test
push
jb
rclb
xchg
dec
int
stos
adc
xchg
daa
mov
rcll
test
daa
cmp
lcall
movsl
cli
stos
push
push
lret
mov
stos
dec
add
inc
js
test
xor
lahf
pop
stos
insb
addb
rorb
xor
fimuls
js
cli
lods
out
popf
aam
inc
jmp
jp
in
add
sub
stos
push
push
mov
jg
shrb
add
stos
mov
pop
adc
test
xor
push
stos
or
add
cmp
pushf
mov
mov
lods
jmp
mov
jge
xchg
stos
jnp
xor
jecxz
pop
push
pop
mov
push
sti
xchg
lods
cmp
adc
inc
test
insl
push
and
bound
daa
je
sbb
movsl
lock
int
jb
or
shrb
mov
xor
in
insb
test
xlat
sub
into
stos
enter
fwait
push
xor
sub
stos
xchg
pinsrw
int
lcall
jmp
jp
popf
or
stos
mov
or
push
clc
mov
ljmp
pop
enter
pop
push
bound
stos
inc
cmpsl
aaa
fisttps
outsl
std
mov
lea
test
adc
pop
das
push
stos
out
mov
mov
pop
lds
ret
shrb
pusha
mov
xchg
stos
inc
out
sbb
andb
nop
lret
stos
stos
shrb
imul
in
out
and
inc
mov
jne
lcall
into
frstor
stos
aam
sbb
fbld
sahf
clc
cmpsl
mov
lret
imul
repz
ss
popa
jp
inc
xchg
jnp
fisubrs
mov
mov
xchg
dec
cmpsb
scas
fsubrl
mov
jbe
xchg
xchg
sub
add
rorl
jmp
pop
in
repnz
addb
jae
mov
mov
mov
add
stos
inc
jae
lret
fcompl
push
jnp
dec
mov
sti
pop
adc
push
mov
mov
push
in
mov
xchg
sub
xor
movsb
dec
sbb
and
xlat
xor
mov
sub
stos
pop
popa
push
mov
xor
mov
int
pop
mov
stos
sub
scas
les
pop
push
sbb
jl
push
loope
mov
add
ds
fldenv
and
stos
mov
adc
lcall
xchg
in
fwait
dec
pusha
loope
cli
sti
jge
pop
or
lea
add
pushf
mov
dec
xchg
add
dec
xor
stos
mov
dec
ret
mov
xchg
imul
test
fisttps
and
push
pop
push
xchg
xchg
jmp
mov
xchg
xor
stos
lock
adc
fsubrp
add
scas
push
jmp
shlb
vextractf32x8
scas
jnp
pop
mov
cwtl
stos
arpl
cli
leave
mov
jnp
sub
adcl
mov
mov
inc
dec
stos
movsb
jle
imulb
push
mov
xchg
enter
and
int3
mov
or
hlt
pop
pusha
les
test
adc
mov
jmp
int3
stos
xchg
dec
in
sti
jo
add
push
or
sub
stos
inc
inc
fcmovnb
shl
jb
popa
or
jbe
ret
inc
adc
inc
leave
ds
push
and
sub
sbb
ficoms
in
imul
stos
lcall
pusha
stos
pushf
mov
cmc
stos
push
cmp
mov
cmp
outsb
cli
push
movsb
addr16
into
xchg
or
pusha
imul
fcoml
cld
cmp
lods
das
mov
loop
sub
or
dec
clc
scas
das
push
mov
mov
jnp
mov
inc
sbb
push
push
fidivs
lret
or
je
cld
mov
mov
sbb
xor
test
daa
in
inc
je
push
xchg
out
shl
and
movsl
fwait
xlat
xchg
je
mov
xchg
aam
incl
daa
sbb
mov
sub
std
jns
sub
jp
lahf
lcall
sbb
xlat
inc
stos
push
or
xorb
adc
xor
mov
stos
pop
imul
cwtl
inc
jo
jmp
stos
add
roll
stos
mov
aas
test
pop
mov
call
dec
mov
cmp
mov
sbb
stos
dec
sub
popa
lods
inc
stos
packsswb
mov
xchg
das
out
stos
fimull
add
imul
jge
es
mov
pop
out
stos
dec
sub
iret
in
push
mov
jl
cmp
pop
je
jmp
xchg
pop
bound
adc
sub
mov
and
lods
scas
rcrb
in
sar
lret
mov
pop
mov
arpl
testb
cmpsl
lcall
dec
stos
test
ss
loop
xor
inc
stos
and
stos
pop
cmpsl
xchg
mov
stos
les
andb
leave
lcall
xor
test
inc
xchg
stos
jge
pop
data16
jae
mov
jmp
xchg
cmp
pop
jno
scas
xor
stos
addr16
pop
mov
push
in
insb
imul
stos
inc
lea
pop
stos
out
dec
data16
stos
stos
outsb
das
sahf
dec
jbe
enter
aaa
pusha
int
lret
cmp
ds
inc
mov
mov
or
or
test
das
dec
mov
addr16
jle
fnstcw
dec
outsb
stos
add
nop
inc
stos
pop
mov
pop
in
orb
int3
sahf
pop
sbb
dec
sarl
stos
data16
sbb
mov
or
addl
xor
repz
push
sbb
fcmovnb
and
mov
pop
mov
mov
stos
inc
ljmp
stos
stos
or
mov
xchg
je
mov
shrl
push
stos
cmc
cmp
or
stos
push
mov
add
mov
cli
mov
pop
jno
movsl
inc
orb
stos
int3
or
mov
adc
stos
adc
ljmp
sbb
fwait
decb
gs
jmp
popa
icebp
shr
fistl
loop
lahf
xchg
stos
lret
out
dec
xchg
push
and
dec
jmp
fnstenv
xchg
adc
stos
idiv
call
adc
or
or
es
scas
sbb
mov
jo
out
xor
jl
sub
xchg
mov
xor
test
pop
sub
inc
mov
xor
add
cwtl
stos
ficoms
sub
and
pop
fisttpll
sbb
sub
ss
and
adc
push
ret
mov
jne
sub
mov
das
cmp
ret
jg
mov
std
test
mov
into
add
pop
aam
stos
dec
xchg
jmp
cmc
cmpsb
fldcw
in
lea
dec
stos
pusha
repnz
mov
dec
repz
ss
mov
cwtl
data16
stos
sbb
fwait
outsb
pop
adc
es
sub
inc
or
cmp
stos
dec
xchg
pop
enter
xchg
mov
push
jbe
adc
adc
push
pop
stos
dec
xchg
jnp
and
sub
mov
lahf
add
mov
hlt
pop
out
xor
stos
push
sbb
cmp
mov
jmp
jle
mov
cwtl
fwait
repnz
inc
ficompl
sarl
sbb
mov
je
push
mov
stos
testl
aaa
imul
das
stos
add
imul
sbb
xor
pop
sub
sahf
cld
stos
pop
test
stos
mov
push
xchg
sub
imul
cmp
fcom
jns
push
lea
inc
mov
sub
mov
stos
and
cmp
in
fsubrs
mov
xor
or
xor
or
jo
mov
jl
psubusb
bound
cmp
arpl
inc
movsl
sti
xchg
movsb
js
adc
ret
mov
cs
stos
inc
shrb
mov
in
stos
popf
stos
outsb
jnp
es
inc
cli
mov
or
call
aas
loopne
inc
stos
jp
jecxz
in
stos
mov
lods
inc
add
out
pop
jmp
movsb
push
rcrl
cmp
inc
out
stos
cltd
ja
xchg
lods
push
into
add
mov
fwait
addr16
fwait
adc
int3
stos
lret
sub
lahf
mov
mov
cmpsb
stos
std
push
pop
call
push
pop
mov
jns
and
push
in
pop
xchg
loope
fs
add
mov
fdivs
insb
push
pop
push
mov
test
addr16
mov
or
cltd
mov
mov
outsb
lods
mov
in
sbb
cmp
mov
adc
repz
xchg
and
and
pusha
testb
fwait
rcr
stos
push
mov
push
fimuls
mov
xchg
fcomps
lahf
cmp
inc
pop
gs
adc
cltd
or
adc
decl
jl
xchg
outsb
and
and
sbb
or
stos
data16
nop
sahf
pop
adc
cmp
inc
xchg
mov
call
mov
ret
sbb
out
aas
sub
stos
push
int
stos
loope
jno
scas
push
xor
aas
mov
pop
stos
push
sbb
mov
je
stos
or
add
aas
ds
insl
cmpsb
ret
out
cmp
sbb
stos
pop
cmovl
xor
sbb
mov
mov
std
in
jmp
stos
fucomip
mov
adc
xor
add
or
mov
or
jbe
shr
ret
int
sub
iret
add
add
lret
jge
inc
jne
mov
sbbb
incl
xchg
lods
inc
and
jae
stos
pushf
dec
ret
test
or
pusha
sarl
ja
into
sbb
xchg
push
stos
mov
pop
js
stos
call
dec
insb
lock
popa
pop
inc
decb
stos
inc
pop
sbb
and
add
leave
mov
jmp
xorl
scas
add
jp
pushf
outsl
adc
aam
inc
loopne
sahf
test
lret
enter
ret
dec
nop
inc
jg
out
jns
pop
dec
and
pop
mov
std
aam
dec
mov
int
push
dec
dec
stos
push
inc
dec
inc
jne
addb
jg
mov
sub
loopne
stos
pop
push
mov
ret
mov
popf
in
add
mov
aaa
mov
add
loopne
cwtl
dec
and
mov
jl
inc
mov
das
shrl
fimuls
repz
and
stos
mov
sub
inc
lods
mov
mov
stos
call
ljmp
cmp
lret
inc
stc
xchg
add
stos
dec
sub
cmp
or
imul
rorb
test
enter
inc
xchg
pop
jno
cmc
leave
test
aad
adc
or
sub
lcall
push
mov
test
jo
add
int3
in
loope
cmc
cwtl
stos
xchg
repz
stos
xor
scas
mov
mov
mov
push
mov
push
adc
xor
mov
mov
call
leave
fistps
ret
adc
clc
sub
and
stos
push
outsl
cmp
ljmp
iret
push
shl
lods
push
lods
stos
negb
pop
outsb
stos
imul
stos
inc
xor
add
es
ror
imul
fiadds
out
movsl
sbb
sub
xchg
int3
or
clc
stc
movsl
aaa
fnstcw
or
pop
mov
outsb
test
out
dec
ret
xchg
je
in
sbb
lods
scas
outsb
aas
mov
lcall
sahf
dec
in
ret
stos
icebp
shlb
arpl
cmp
xchg
inc
stos
push
loopne
mov
int3
dec
stos
cli
xchg
cmpsb
outsb
sub
mov
call
popa
mov
lret
cmp
stos
repnz
or
inc
adc
stos
sbb
push
cli
out
arpl
adc
xor
stos
in
lds
or
popa
xchg
cmp
inc
stos
adc
pusha
out
or
xchg
adc
loopne
xor
pop
movsl
dec
push
aas
mov
mov
dec
lret
ret
mov
pop
fsubp
out
call
icebp
mov
xchg
stos
pop
test
cltd
mov
popa
pop
pop
adc
stos
pushf
pop
and
mov
jmp
xorl
cmp
bswap
pusha
fwait
and
jl
adc
xor
ret
daa
lods
nop
stos
mov
push
mov
cmp
sub
stc
cwtl
popf
out
xor
mov
std
repnz
stos
hlt
mov
and
iret
jne
loop
adc
movd
xor
loopne
cmpsb
sub
cwtl
sbb
mov
cmp
test
fwait
pop
lcall
cltd
icebp
std
stos
das
xor
pop
mov
gs
and
dec
scas
mov
cmp
cmpsb
pop
mov
mov
sbb
fldenv
jmp
into
mov
push
push
fcmovu
int
pop
je
sbb
pusha
jp
std
testb
leave
mov
addr16
mov
subb
sbb
test
or
dec
popa
cmp
jmp
jmp
dec
stos
fwait
sbb
lods
bound
jmp
mov
jecxz
scas
add
or
inc
ret
movsb
push
addr16
push
stos
subps
fildl
add
les
stos
cmpsb
mov
stos
orl
movsl
iret
fnstsw
xor
out
sub
xchg
dec
cwtl
lahf
out
leave
stos
sar
xor
inc
stos
clc
xchg
repz
insb
add
fwait
mov
pusha
std
fwait
hlt
xorb
stos
mov
pop
in
xchg
fsubrl
jmp
scas
lds
cmp
sbb
daa
sub
scas
xor
int3
sub
jg
testl
les
pop
rolb
xor
add
fldenv
push
loopne
cld
iret
mov
stos
lock
push
mov
push
shl
arpl
cmp
pusha
xchg
ljmp
insl
push
les
enter
int3
mov
mov
arpl
adc
mov
sbbl
cwtl
pushf
imul
in
into
loop
add
stos
mov
add
mov
fcompl
mov
scas
and
push
xor
xor
sbb
pop
sub
jae
loopne
stos
scas
lret
jecxz
mov
jbe
push
xchg
hlt
pop
and
arpl
or
stos
outsl
scas
fbld
push
sbb
inc
insl
pop
stos
aaa
sub
add
push
stos
rorl
add
mov
insl
in
ficoms
imul
jbe
out
sarl
push
fmuls
aad
dec
stos
aas
daa
sub
sub
lds
sbb
jmp
cmp
add
xchg
add
or
imul
stos
scas
lds
jbe
in
mov
ss
aam
mov
loop
out
jb
dec
sbbl
scas
or
lcall
loope
mov
add
scas
adc
mov
and
xchg
lods
divb
or
sub
data16
das
mov
fildll
jnp
jecxz
stos
mov
cmpsb
scas
subl
loop
lahf
mov
ja
or
pop
add
or
rolb
lock
sbb
mov
add
mov
mov
cmc
adc
stos
push
mov
pop
jg
stc
daa
lods
dec
mov
inc
sbb
sub
stos
push
mov
inc
jns
jmp
in
enter
push
jmp
xchg
icebp
xlat
nop
cmp
rcrl
ret
and
in
stos
mov
js
leave
stos
adc
lret
jbe
lcall
pop
scas
ljmp
shlb
icebp
enter
mov
es
mov
and
sbb
add
sub
mov
and
stos
jp
xlat
enter
and
push
std
fwait
sub
out
rcrl
stos
je
div
xchg
pushw
test
ja
push
inc
mov
popf
mov
imul
imull
in
jle
aas
jl
test
mov
orl
mov
push
into
stos
aad
outsl
or
ret
cmp
cwtl
stos
ret
data16
fidivrs
out
enter
jge
popf
stos
in
addr16
or
adc
inc
and
fstl
stos
shlb
inc
std
add
xchg
std
sbb
inc
rorb
stc
stos
loop
pop
adc
push
xchg
in
movsb
loopne
mov
stos
xchg
and
les
jmp
mov
aas
stos
or
jle
cmp
adc
inc
mov
stos
sub
mov
jns
out
sbb
xchg
stos
mov
add
push
sti
test
mov
stos
insb
shll
and
push
int
into
xchg
ret
cld
lcall
jecxz
lods
int3
xchg
mov
rclb
xorb
daa
daa
mov
movsl
ret
in
jns
popf
xor
jl
jno
sub
in
pusha
stos
test
mov
stos
inc
dec
and
or
push
sub
shlb
stos
lahf
dec
divb
cld
push
pop
imul
push
mov
out
je
xor
ljmp
rol
outsb
adcl
lret
test
lds
fsubs
call
stos
shlb
fldcw
mov
mov
dec
xchg
sub
sub
stos
scas
rcll
push
stos
or
cmp
lods
mov
das
ljmp
addr16
mov
cltd
mov
pop
fcos
push
cmp
cs
testl
fwait
repz
stos
push
inc
lods
popa
sti
pop
adc
stos
adc
xchg
add
xor
stos
sbb
cmp
stos
add
pushf
mov
xor
jb
in
movsb
stos
jmp
or
add
jne
stos
enter
xchg
ds
jle
cmc
imul
push
addr16
sbbb
jae
push
stos
jmp
adc
lcall
addr16
mov
stos
cmp
sbb
jns
mov
in
iret
jb
mov
test
cmp
rcrl
fsubrs
lods
fwait
mov
daa
popa
jo
sbb
int
outsb
imul
repnz
cmp
mov
loope
stos
or
roll
aas
mov
shrb
cmp
push
aaa
mov
imul
ljmp
cmc
cmpsl
movsb
js
sbbl
dec
lock
mov
popf
negb
in
xor
arpl
jns
xchg
rol
stos
and
dec
jmp
jne
mov
jnp
repnz
mov
xchg
stos
movsb
fidivrl
mov
and
hlt
jb
cld
stos
sub
xor
adc
stos
xchg
inc
jl
lret
andl
push
pop
mov
sahf
xchg
repnz
sub
jl
mov
jae
xor
stos
scas
or
push
sti
lods
pop
stos
roll
cmpsl
stos
xor
movsl
shlb
daa
adc
lret
jns
insb
and
or
mov
stos
xchg
or
jmp
sub
addr16
and
stos
movsb
or
xchg
sbb
repz
add
inc
call
stos
dec
jl
int
lret
and
dec
adc
jl
call
scas
mov
sarl
mov
mov
xor
adc
inc
sub
mov
pop
push
js
or
shr
scas
cltd
jne
push
in
and
sarl
jns
sbb
ja
pop
jmp
stos
xchg
cmovg
cmpb
fisubrs
mov
in
xor
stos
mov
aas
xor
mov
pop
bound
arpl
std
daa
mov
call
mov
mov
test
dec
mov
dec
sub
aas
repz
push
stos
jp
sbb
repnz
add
dec
int
mov
mov
stos
or
stos
insb
xchg
cmp
stos
mov
test
ret
movsb
xchg
xchg
jne
pavgw
mov
jb
cmc
mov
sub
subb
stos
bnd
aaa
cvtps2pd
xchg
mov
push
in
fistps
pop
xchg
push
cmp
outsl
icebp
lock
stos
push
and
pop
inc
stc
mov
cmp
xchg
ja
notl
addr16
lock
sub
cmpb
aaa
popa
sbb
xchg
sub
or
call
stos
lock
js
pop
into
dec
hlt
movsb
lods
lret
push
jns
cs
scas
jge
out
jnp
xor
mov
and
mov
ja
shlb
shrb
stos
in
pop
pushf
pop
adc
test
bound
pop
loope
sub
enter
push
mov
sub
aas
mov
es
stos
movsb
adc
mov
stos
cmpsl
cmp
add
sub
cmpsb
lret
stos
pop
sbb
in
mov
clc
sti
jnp
cwtl
jge
stos
mov
add
icebp
xor
add
mov
arpl
xchg
sub
mov
jne
push
add
jb
inc
cmp
stos
imul
fstps
cmc
adc
mov
add
in
push
add
adc
pop
pop
mov
test
push
mov
jns
or
mov
jmp
mov
aaa
cwtl
lcall
call
xorb
addr16
mov
sub
lahf
stos
or
popa
ja
add
stos
or
xchg
push
pop
out
js
mov
push
pop
and
jp
in
lea
inc
stos
dec
mov
imul
out
mov
push
fwait
xor
imul
stos
stc
xor
fildll
xchg
fwait
hlt
xchg
cmp
dec
mov
cmpb
xchg
inc
xchg
mov
lods
mov
mov
fsts
sub
sbb
mov
stos
cmpxchg
jle
lret
stos
inc
add
jg
fiadds
scas
lods
stos
mov
push
repz
outsb
xor
out
sub
dec
arpl
mov
fwait
shl
stos
fisubs
mov
mov
rcr
test
lret
xchg
jbe
push
mov
int3
push
outsb
stos
pop
lcall
and
jl
mov
jp
lahf
shl
mov
jg
xchg
stos
push
sub
aam
shrb
mov
cmp
int3
and
xor
push
sbb
cltd
push
insl
stos
mov
test
sub
int
sarl
cli
push
mov
mov
stos
sbb
loope
pop
dec
mov
dec
pop
mov
pandn
stos
inc
add
jecxz
cmp
stos
fs
addr16
cmc
jle
dec
stos
pushf
lret
add
sahf
ljmp
outsl
xchg
push
dec
std
fdivrs
stos
leave
adc
mul
popa
cmovnp
jno
mov
mov
sbb
addr16
mov
inc
cwtl
stos
daa
leave
mov
mov
xor
dec
dec
and
stos
lcall
push
popf
rcrl
test
push
push
outsb
sbb
es
inc
out
push
ret
popf
stos
mov
mov
test
sub
mov
dec
stos
je
pop
mov
or
icebp
aas
sahf
js
xor
adc
outsl
push
xor
sub
test
gs
repnz
push
ss
rep
mov
jmp
dec
cltd
dec
nop
jp
subl
fsubrl
xchg
imul
scas
data16
stos
arpl
and
mov
clc
and
pop
in
orl
add
in
repnz
cs
int
adc
xchg
std
fs
add
dec
sub
xchg
int3
imul
mov
dec
dec
pop
into
aam
mov
in
idivb
push
pop
stos
and
xor
out
xchg
sbb
xor
adc
xlat
pusha
js
pop
cmpsb
pop
xchg
ss
pop
pop
xchg
pushf
andb
pop
movsl
adc
imul
jecxz
pop
cmpsl
cld
jmp
cmp
stos
scas
mov
cwtl
or
in
mov
movsb
enter
stos
repnz
ds
mov
jno
mov
mov
bound
adc
cli
pop
inc
fldcw
add
mov
movsb
iret
stos
ja
pop
push
or
daa
sub
stos
andl
lcall
insb
fwait
repnz
hlt
mov
addr16
fistps
stos
xchg
out
jbe
popf
imul
cmpsb
lret
rolb
lahf
stos
not
cmp
pop
sub
dec
jnp
mov
mov
xchg
xchg
test
pushf
lcall
cmpsl
rcll
cmp
fdivrl
stos
sub
mov
test
ds
sub
xor
inc
shrb
push
adc
ljmp
inc
into
mov
movsb
xor
stos
out
shlb
aad
mov
inc
rorl
movsb
je
sbb
dec
mov
stos
scas
out
mov
xchg
lret
push
popa
test
cmp
jnp
stos
sbb
jle
int
pop
stos
add
push
scas
jno
stos
lock
ficomps
lret
mov
xor
fisubrs
shlb
jb
fidivl
movsl
stos
pushl
ret
inc
push
stc
shlb
mov
aad
dec
nop
xchg
push
stos
scas
or
insb
pop
adc
and
fadds
fwait
cli
stos
jnp
cmp
push
lods
stos
js
ja
mov
cmp
jmp
cmpsb
adc
mov
mov
push
xchg
daa
xchg
stos
mov
icebp
push
add
hlt
mov
xchg
fcmovne
jmp
adc
add
int
ret
inc
es
in
stos
pushf
sarb
loope
pop
jge
and
jnp
jmp
es
pop
cmp
test
insl
or
lds
mov
icebp
and
mov
or
mov
mov
call
cmp
sub
xchg
cld
sbb
mov
add
call
rcll
jb
fisubrl
dec
std
pop
mov
jmp
dec
clc
stos
test
bound
xchg
mov
les
movsl
jbe
mov
xor
push
xchg
stos
lock
or
jo
jle
or
aad
je
cmp
push
xchg
scas
dec
pop
das
stos
xchg
inc
push
jl
adc
push
cmpl
test
or
sbb
insl
outsb
lods
stos
or
pushf
fsubs
push
mov
mov
pop
stos
mov
inc
ret
stos
pushf
hlt
jp
bound
out
xchg
daa
or
loop
and
ret
xchg
cmc
scas
or
out
or
mov
cmp
imul
pop
mov
aas
or
mov
sbb
fistpll
stos
fmuls
adc
jp
push
repz
scas
imulb
xchg
cmp
stos
out
jge
and
xor
push
pop
add
xchg
push
stos
pop
pop
jae
push
shl
fsubrl
push
pop
jno
stos
cmpsl
test
ret
adc
sbb
xorb
push
addr16
push
or
mov
and
out
pusha
gs
roll
sbb
lods
sahf
cmp
push
push
int3
pop
rcll
lea
add
cmp
jge
sub
push
imul
xchg
test
rcll
fbstp
pop
or
mov
imul
add
mov
xchg
mov
stos
sub
stos
add
adc
stos
lret
jmp
jge
movsb
stos
cwtl
mov
pushf
push
mov
orl
and
adc
jb
stos
adc
adc
sahf
dec
movsl
stos
adc
fidivrl
and
push
mov
xchg
je
xor
mov
cmp
jne
stos
sbb
fucomip
out
add
xchg
xchg
pop
mov
mov
iret
xor
dec
push
fwait
out
fadd
ffreep
push
int3
jb
stos
das
mov
push
or
fsubs
fistpl
adc
and
push
push
or
adc
mov
xor
stos
js
push
lret
pushf
push
stos
inc
cld
lock
jmp
stos
or
pop
jge
jmp
mov
mov
insb
stos
repz
cs
jnp
inc
xor
imulb
jle
jmp
stos
push
enter
jae
push
imul
mov
sub
loop
xor
popf
popf
imul
loopne
inc
sbb
sbb
stos
cmp
pushf
add
daa
ss
lock
test
outsl
mov
lods
pusha
shrl
stos
push
lock
push
stos
pop
in
ret
and
mov
lcall
outsl
ret
mov
inc
es
repnz
lahf
mov
and
rolb
mov
imul
pop
std
lds
stos
lret
sti
outsl
test
in
jecxz
mov
inc
stos
int
sbb
cltd
mov
stos
lds
in
add
stos
mov
sub
outsb
push
pop
jge
stos
mov
lds
ljmp
and
cld
stos
lea
enter
push
stos
push
xor
mov
stos
aaa
int3
lock
jge
shr
and
stos
lods
mov
popf
in
sbb
addr16
es
stos
xchg
jge
jnp
sub
push
fstpl
rep
mov
mov
dec
stos
loope
xor
mov
dec
fiaddl
xchg
adc
mov
push
cmp
psubw
daa
arpl
pop
mov
shlb
stos
insl
push
cld
mov
jmp
sahf
jno
sbb
mov
je
stos
add
adc
fisubs
sub
adc
cltd
adc
out
jnp
les
xchg
stos
sub
xchg
mov
cs
aam
stos
scas
std
imul
inc
stos
call
push
dec
jmp
mov
and
movsb
arpl
push
adc
lret
jbe
pop
jno
stos
ret
xchg
jl
gs
pop
inc
stos
test
cmpsb
mov
enter
mov
nop
lods
cli
stos
pop
lret
mov
sbb
in
popa
mov
sarl
jns
in
hlt
cld
or
sub
stos
xchg
mov
inc
cmp
inc
mov
std
gs
pop
andl
cmp
or
push
and
mov
call
pop
cwtl
aaa
lods
stos
xchg
lea
mov
inc
sub
cmp
or
or
mov
loope
xlat
scas
pop
push
gs
clc
inc
cmp
pop
push
ffree
stos
mov
aad
jae
xchg
push
dec
int
std
mov
sub
mov
mov
mov
lods
cld
les
stos
ficomps
adc
scas
iret
xchg
imull
pop
mov
ja
xchg
repz
lret
in
mov
push
lods
push
fimuls
xchg
mov
cmp
bts
shr
ret
sub
add
mov
cli
xchg
arpl
leave
gs
outsb
push
sub
jmp
ds
or
inc
scas
sbb
loopne
pop
push
sub
lahf
jp
test
push
mov
mov
mulb
int
mov
jl
jle
adc
popf
mov
cltd
mov
scas
xchg
xchg
das
push
out
imul
mov
stos
cltd
push
les
scas
mov
addr16
iret
test
stos
stos
sbb
xchg
push
xchg
dec
adc
sub
xchg
imul
stos
xor
mov
arpl
in
push
mov
cs
adc
jecxz
leave
out
mov
or
push
and
js
cmp
popf
ret
sub
stos
mov
in
stos
pop
inc
subb
daa
ficompl
add
icebp
cs
stos
aaa
test
fistl
dec
daa
dec
or
adc
stos
dec
push
andb
jp
inc
push
mov
xchg
or
stos
xor
xor
stos
adc
inc
int3
aad
out
pop
std
jg
mov
xor
cmpsb
push
mov
nop
nop
call
jle
mov
int
stos
loop
out
movsl
xor
aas
in
addr16
je
cltd
popa
jne
imul
out
or
or
aas
xchg
leave
sbb
sub
adc
and
or
inc
jge
lret
jnp
cmp
dec
nop
push
je
nop
push
stos
sbb
mov
stos
push
fldt
ret
sbb
stos
dec
push
jg
outsl
dec
aaa
loope
pop
push
fnstenv
inc
or
imul
out
xchg
in
mov
dec
repnz
xchg
jno
sahf
xor
ret
fwait
lret
out
push
xchg
daa
lahf
out
jmp
stos
xchg
inc
add
sub
jns
stos
mov
sbb
mov
stos
push
jp
cltd
inc
shr
mov
xchg
test
jb
jae
rcll
xorl
jp
cmpsl
das
imul
cwtl
inc
ljmp
testb
mov
cmp
push
popf
in
xchg
sub
popa
push
and
xor
stos
jecxz
xchg
daa
andb
cld
xorl
mov
inc
xor
inc
cmp
mov
stc
mov
or
sarb
mov
jmp
loope
inc
stos
or
sub
aas
mov
clc
mov
stos
jg
mov
bound
mov
in
mov
cmp
test
jmp
push
and
aas
insl
mov
daa
test
mov
pop
xchg
stos
arpl
call
cmp
mov
hlt
jge
jno
dec
push
sbb
xor
mov
pop
stos
test
js
stos
cmp
jmp
imull
or
or
mov
hlt
ljmp
inc
iret
inc
test
or
push
sbb
test
int
loope
mov
jmp
cmc
xor
mov
andb
fiaddl
jle
gs
pop
xchg
jbe
dec
xchg
sti
push
add
or
mov
xchg
stos
insb
stos
mov
stos
pop
icebp
jp
inc
mov
mov
push
xor
lods
mov
pop
sti
mov
shl
pushl
pop
in
rolb
in
cmpsb
add
dec
scas
sub
stos
xchg
nop
xor
mov
std
stos
adc
ds
mov
pop
ljmp
icebp
arpl
xlat
out
mov
add
stc
adc
pandn
stos
sti
mov
sub
add
shrl
int3
jmp
push
imul
fwait
sahf
mov
fisubl
and
ret
stos
testb
adc
call
fisttpll
add
imul
stos
es
or
stos
adc
pop
test
sub
aam
mov
and
andl
lret
mov
scas
sub
sbb
jmp
mov
jmp
out
jno
rolb
add
jo
dec
jg
push
and
daa
repnz
fstps
stos
pop
es
shll
stos
add
faddl
stos
lods
outsb
pop
pop
js
insl
jae
jl
adc
push
stos
push
cld
push
jb
mov
in
jp
fwait
or
pop
or
imul
adc
push
cmp
arpl
mov
jmp
fisubrl
and
scas
repz
sub
std
xchg
std
dec
add
addr16
arpl
xchg
call
lock
and
lcall
push
cmpsl
adc
mov
mov
stos
hlt
cwtl
cli
imul
inc
stos
test
jns
fldt
dec
dec
out
add
stos
and
insl
mov
stos
mov
les
push
dec
fldl
daa
adc
stos
pop
pushf
ljmp
stos
jg
fimuls
fwait
or
pop
in
jp
inc
pop
bound
dec
stos
cmpb
imul
adc
xor
bound
cmp
stos
and
dec
adc
or
mov
call
xlat
je
cmp
movsl
lret
and
push
imul
addr16
dec
into
mov
mov
jbe
pop
dec
movsl
pop
stos
mov
int3
in
fmuls
xchg
cmp
add
push
dec
cltd
xchg
sub
mov
das
popf
jmp
xchg
cmp
cwtl
adc
add
or
add
loope
cmp
in
stos
xor
dec
stos
stos
shl
cli
nop
dec
push
inc
arpl
jge
mov
cmp
jne
rclb
jl
mov
inc
cltd
mov
bound
out
adc
sub
pop
pop
dec
sub
js
les
imul
cmpsl
mov
mov
stos
in
ds
cmc
arpl
pop
addr16
cmp
push
stos
fisttps
mov
sti
in
stos
push
popa
insl
mov
cli
fnsave
lret
imul
fwait
push
call
mov
pop
cltd
loope
and
fs
in
pushf
push
stos
or
sbb
sbb
out
xchg
stos
das
mov
jge
lods
push
push
stos
push
arpl
dec
push
push
imul
cmp
and
imul
sahf
xchg
jmp
lods
popa
add
pusha
js
fsubl
ret
cmp
out
push
mov
push
xlat
sbb
sahf
shrl
dec
push
add
cmp
cmpsb
inc
xor
adcl
xchg
ret
in
fwait
icebp
je
inc
mov
cmpsl
mov
fiaddl
popf
stos
fstl
rorb
inc
leave
ljmp
pop
dec
jb
jnp
xor
mov
and
add
jnp
stos
arpl
or
dec
out
loopne
mov
and
repz
push
out
movsl
sub
and
dec
stos
inc
or
lahf
push
sub
push
stos
xchg
stc
in
aam
jne
mov
mov
sub
mov
stos
adc
out
clc
stos
ds
divb
pop
xchg
stos
sbb
mov
dec
lea
xorb
xchg
xor
sbb
sbb
dec
jmp
add
sub
sti
das
stos
mov
push
std
imul
imul
jge
add
les
iret
jns
pop
stos
xor
sbb
int3
mov
sbb
push
mov
fwait
test
sbb
test
dec
mov
mov
fwait
das
add
pop
stos
mov
sbb
cs
daa
mov
push
push
sub
scas
out
sbb
out
mov
xchg
es
cmp
push
imul
push
test
mov
subb
lahf
sub
shrb
test
sub
into
fwait
cmp
stos
adc
and
stos
lea
sub
call
xchg
mov
cmp
in
sarl
icebp
jne
fs
xchg
mov
dec
inc
xchg
lret
and
jl
mov
ja
adc
jge
mov
mov
pop
jne
int3
subl
shll
stos
jecxz
sub
aam
add
dec
mov
push
shlb
test
mov
mov
or
or
shl
movl
mov
add
xchg
xlat
ss
jb
mulb
cli
sahf
mov
xchg
addb
mov
cmpsl
adcb
add
xor
jb
in
cmp
push
jmp
push
mov
mov
sub
push
jg
int
into
dec
cld
mov
inc
fcomps
pushf
push
stos
test
out
imul
inc
shlb
mov
push
cmp
inc
pop
jmp
push
pop
fs
xchg
stos
je
and
aaa
stc
aad
jmp
sbb
cmp
mov
or
xchg
cmp
mov
std
cmp
add
daa
or
repnz
jb
stos
mov
js
rclb
inc
inc
imul
push
mov
es
push
stos
and
ljmp
nop
outsb
stos
jbe
dec
and
fwait
imul
pop
push
mov
notb
sbb
out
fwait
dec
out
shrl
jl
sbb
lock
stos
jae
push
xchg
out
pusha
xor
jmp
mov
xorb
dec
stos
int3
in
sub
xchg
data16
cmp
xchg
stos
adc
std
scas
enter
mov
sub
mov
aad
push
out
mov
addr16
add
or
cwtl
cld
mov
inc
popa
sub
pusha
or
pop
cmpsl
mov
or
loop
mov
pmaxub
lods
mov
push
in
push
push
ljmp
outsb
cltd
rep
xor
or
stos
adc
cmpsl
cs
sub
mov
pushf
daa
subl
ljmp
mov
jp
stos
mov
sub
fsubl
push
stos
cli
jb
and
stos
jecxz
mov
stc
int3
icebp
stos
xor
jmp
push
lods
cs
stos
addr16
and
in
sub
imul
shrl
sub
mov
shlb
sub
out
loopne
dec
stos
ja
add
test
hlt
out
movsl
inc
ds
cmp
loopne
mov
testb
movsb
mov
jne
movsl
cmp
stos
ror
fstpt
mov
cmp
mov
mov
push
pop
sbb
idivb
adc
scas
cmp
movsl
jns
or
movsb
inc
cltd
cwtl
push
push
lods
lods
aad
cmp
mov
push
mov
inc
adc
xor
xor
push
or
cld
in
fwait
pop
and
pop
sub
mov
rorb
xor
push
int3
and
addr16
and
push
arpl
mov
mov
sub
loop
dec
jecxz
cmp
jmp
mov
gs
sbb
stos
mov
stos
and
xchg
lods
loopnew
mov
dec
movsb
cmp
sub
mov
mov
mov
stos
pop
push
enter
or
sub
pop
mov
aas
in
xchg
addr16
and
mov
jge
call
adc
push
xchg
jmp
ljmp
sbb
jmp
stc
out
mov
adc
in
stos
aad
cwtl
loopne
push
mov
test
pop
dec
jae
cltd
movsb
mov
popf
stos
adc
sub
repz
cmp
mov
mov
into
rol
loop
push
pop
stos
add
aas
pop
out
jb
in
sub
inc
ja
or
mov
pop
shrl
in
pop
negl
push
add
int3
out
cwtl
pop
pop
push
scas
stos
outsl
je
sar
jmp
mov
adc
scas
push
stos
cmpsl
pop
mov
js
mov
les
outsb
xchg
pop
ja
stos
or
xchg
loope
and
or
stos
xlat
ds
lret
cltd
test
loop
jbe
bts
ror
dec
xchg
stos
push
mov
sub
push
fdivrs
adc
in
xchg
out
mov
stos
loop
popa
pushf
rcrl
movsb
mov
bts
cld
out
insb
rol
xchg
pop
inc
subl
fisubrl
or
pop
inc
subb
fwait
cmpsb
int3
loop
jp
mov
inc
xor
stos
out
ss
rcr
jnp
xchg
in
les
clc
or
sbb
push
push
jg
dec
lds
call
inc
mov
rcl
jge
stos
add
movsb
xlat
inc
cmp
sahf
insb
subps
mov
cwtl
inc
sub
sbb
jge
rclb
pop
add
es
rcl
sub
mov
stos
stos
and
outsl
decl
pop
jle
mov
movsb
lods
inc
stos
das
out
or
lds
xor
lret
adc
push
cld
cmp
gs
jle
stos
std
mov
dec
jl
sbb
push
stos
dec
cli
in
dec
sub
clc
cltd
inc
dec
xor
dec
test
adc
mov
daa
xor
dec
gs
mov
les
imul
or
loope
adc
lods
and
inc
push
daa
out
fwait
push
ret
mov
insl
mov
aas
mov
pop
adc
ss
mov
mov
dec
lret
sar
xchg
pushf
lods
stos
in
mov
sbb
faddl
stos
pop
push
cltd
cld
cwtl
movsl
push
pop
mov
or
cmpl
les
xchg
xor
mov
icebp
insb
repnz
test
cmp
pushf
mov
clc
adc
xchg
sbb
pushf
mov
aas
jmp
in
bound
pop
mov
inc
push
push
push
daa
mov
loopne
ljmp
mov
add
imul
push
sub
stos
lods
jno
jecxz
jle
mov
inc
sub
jne
lods
sbb
ds
addr16
addr16
mov
les
inc
loopne
xor
mov
mov
scas
add
out
arpl
xchg
mov
lods
lahf
or
push
jb
fs
inc
pop
inc
imul
mov
stos
mov
stos
push
roll
insl
jo
pop
in
mov
jno
rcrb
sub
pop
push
push
and
int
xchg
pop
pop
stos
add
and
xchg
shrb
or
or
inc
mov
stos
xor
scas
or
insl
dec
and
lods
mull
pop
push
dec
mov
das
mov
es
pop
enter
xchg
fwait
and
push
adc
fldcw
sub
lret
rorl
cltd
inc
inc
scas
test
stos
sbb
mov
stos
rorl
fnstcw
ret
or
mov
mov
jns
je
push
or
xor
mov
adc
xchg
and
scas
sub
out
sbb
xchg
fwait
mov
gs
fisubs
and
loope
les
sahf
mov
push
dec
cld
jmp
repnz
enter
push
out
mov
cwtl
adc
stos
test
pop
pop
test
adc
aam
out
imul
inc
adc
push
stos
cmp
xlat
sbb
push
push
stos
add
cld
das
stos
scas
rcll
push
stos
cmp
cli
fld
or
jne
lods
das
adc
or
jmp
jnp
xchg
mov
mov
mov
je
stos
outsb
lods
or
mov
insb
xchg
stos
test
ret
xchg
inc
mov
pop
leave
and
stos
dec
dec
or
addl
test
mov
out
fdivs
jmp
cmc
inc
in
xor
xchg
aad
pushf
stos
xor
stos
dec
or
sti
orb
inc
fldcw
fbld
dec
jmp
inc
inc
faddl
or
mov
push
cmp
movsb
jmp
push
sbb
xor
rcll
sbb
or
sbb
mov
loopne
lock
fwait
loope
sub
icebp
xor
jle
stos
pop
lds
ja
je
stos
popf
or
shrb
mov
sbb
aaa
pop
inc
shll
imul
mov
xchg
sub
fldenv
stc
mov
mov
jmp
mov
push
icebp
jge
lock
sub
movsb
das
repz
mov
jnp
or
sub
xchg
out
lods
dec
stos
into
popa
sti
push
leave
pop
data16
mov
fmuls
out
iret
mov
xor
stos
and
xor
fsubr
adc
and
and
jl
adc
adc
and
testl
cmp
push
ds
mov
adc
push
sub
jb
push
mov
test
stos
fimuls
ljmp
cwtl
stos
ss
ja
aaa
pop
or
pusha
into
add
lods
inc
inc
cmpsl
data16
enter
or
iret
loope
or
aaa
stos
cmp
sbb
shlb
mov
pop
imul
enter
stos
jb
sbb
xchg
adc
mov
imul
or
dec
sti
push
lock
cltd
push
into
int
stos
add
mov
stos
dec
sbb
arpl
jns
loopne
es
fbld
in
push
jmp
outsl
ret
xchg
mov
stos
stc
imul
xor
dec
in
stos
ret
jmp
stos
mov
jne
das
scas
dec
stos
jmp
xchg
and
mov
repnz
pushf
sub
xchg
imul
xor
adc
fsubrs
hlt
test
stos
sahf
xchg
insb
xor
xchg
push
mov
xor
dec
data16
ret
dec
add
jmp
mov
imul
mov
mov
jae
movsb
cmp
adc
scas
jns
push
mov
sbb
icebp
mov
stos
mov
lock
sti
lret
pop
int3
stos
in
pusha
cwtl
repnz
pop
lahf
and
add
add
dec
jbe
adc
stos
mov
mov
lcall
mov
int
adc
pop
stos
daa
cmc
or
pop
lret
lds
and
mov
or
pop
sub
stc
inc
push
shlb
stos
mov
decl
lcall
std
dec
movsl
pop
lea
js
mov
mov
jmp
lods
test
and
sub
xchg
stos
sti
mov
xchg
in
or
pusha
rcll
push
fildll
push
mov
sub
pop
stos
cmp
push
mov
jns
cmpl
jmp
ret
lea
jnp
scas
adc
sub
stos
roll
rcrl
dec
mov
inc
stos
ds
adc
lahf
mov
push
add
arpl
cwtl
scas
in
nop
adc
cmpsb
movsb
iret
shrb
pop
je
stos
mov
push
imul
add
stos
jbe
shrb
pushf
xor
jg
fwait
xchg
jns
dec
sub
fsts
jg
and
cmp
lahf
push
bound
xchg
push
stos
cmp
popa
test
movsb
aad
pop
xchg
cs
jecxz
fnstenv
cmp
xchg
into
or
je
ret
fsubrl
mov
jl
jmp
mov
mov
int3
push
mov
sbbl
stos
jmp
inc
inc
jbe
jbe
push
adc
lret
in
xorl
setnp
add
fdivp
loop
loope
xchg
xor
das
xchg
stos
lret
cmp
inc
jne
adc
or
pop
stos
rcrb
out
or
mov
mov
dec
jno
push
scas
aad
pushf
daa
sub
orl
dec
out
stos
push
ss
adc
clc
pop
imul
mov
fwait
movsb
mov
hlt
stos
jl
loop
xlat
cmp
add
sarl
leave
stos
lds
repnz
or
std
xchg
icebp
stos
movsl
sub
jb
aaa
mov
stos
ss
imull
inc
or
stos
subb
and
inc
sbb
dec
ficoms
insb
push
cmp
stos
dec
add
and
xlat
stos
adc
je
stos
sbb
testl
sbb
stos
mov
loopne
push
insl
andl
mov
and
push
or
stc
punpcklwd
pop
jl
sub
pop
adc
push
sub
stos
or
push
imul
push
stos
clc
inc
and
jmp
lret
inc
mov
loop
add
lock
arpl
stos
push
js
sub
fwait
test
stos
jge
outsb
xchg
mov
stos
loopne
cmp
xchg
mov
and
lahf
jne
leave
mov
lea
pop
push
hlt
stos
mov
cltd
add
jl
xchg
push
call
or
fdivl
and
xchg
stos
adc
mov
leave
and
insl
mov
sbb
int
pushf
xchg
sbb
lods
stos
incl
outsb
ret
jle
stos
leave
test
int3
mov
cmp
dec
in
pop
cltd
xchg
inc
stos
jmp
js
and
sbb
jne
sub
cmp
stos
cmp
sub
pop
xor
in
cmpsb
in
sub
rcrb
inc
jmp
jecxz
jge
pusha
mov
stos
lods
mov
lahf
in
movsb
scas
enter
out
sbb
outsb
aas
addl
fdiv
cli
jmp
lahf
popf
sub
or
xchg
or
fxam
lock
clc
xchg
mov
jecxz
nop
xlat
stos
xchg
mov
xor
ret
mov
mov
fadds
push
mov
test
mov
xor
stos
cwtl
jmp
pop
mov
adc
data16
imull
in
or
iret
cs
inc
sbb
cltd
imulb
scas
dec
push
xchg
push
push
mov
stc
push
sti
add
mov
in
stos
xchg
push
push
cltd
decl
insb
stos
std
adc
sbb
adc
ja
xor
fmuls
mov
adc
sub
adcl
repnz
stos
jno
stos
sahf
xchg
add
dec
arpl
jecxz
fwait
push
insb
sbb
sti
fwait
repz
adc
push
pop
sbb
fwait
xchg
pushf
or
mov
mov
stos
loopne
adc
mov
incl
cmpsl
loop
jmp
fs
and
fdivs
out
scas
cli
nop
xchg
decb
aaa
pop
arpl
test
add
jecxz
xor
push
jmp
mov
stc
sbb
daa
push
and
ja
mov
aad
pop
out
out
cmp
aaa
add
stos
dec
in
icebp
mov
pop
mov
push
adc
inc
push
scas
mov
push
mov
pop
addr16
bound
in
push
in
fwait
or
push
cli
xchg
sbb
stos
lret
rcrl
js
lcall
sbb
sbb
pop
or
push
lock
stos
mov
shl
stos
pop
out
popf
mov
dec
or
insl
daa
xor
xor
imul
push
pop
mov
nop
out
push
subl
push
lods
stos
cmp
ficoms
push
movsbl
xchg
std
and
stos
jb
aam
xor
dec
test
stos
int3
xchg
push
sti
stc
cwtl
push
dec
mov
jl
xor
stos
jae
mov
or
push
loop
cmp
cs
mov
out
pop
scas
insl
or
out
lods
add
sub
jge
lret
pop
dec
sub
pop
out
out
add
aas
je
fwait
addr16
daa
bts
jo
inc
jae
repz
stos
pushf
adc
mov
fldt
sbb
jno
shll
jmp
loopne
negb
push
xchg
ljmp
scas
jno
pop
sar
cwtl
push
push
je
dec
jmp
adc
into
and
test
adc
jg
repnz
insl
out
mov
sub
lea
out
inc
xchg
das
out
stos
dec
ljmp
stos
push
mov
or
jo
out
shll
cmp
cmpsb
dec
jbe
cmp
lcall
dec
sub
shlb
fistpl
mov
xor
mov
sub
xor
stc
add
sbb
stos
gs
fstpt
pop
xor
fcoms
xchg
std
mov
lds
lods
out
inc
stos
loop
jo
popf
lcall
cmpsl
mov
ret
sbb
add
jecxz
lahf
adc
stc
shll
test
lret
stos
in
mov
inc
fidivrs
adc
sub
and
lock
fisubrl
sbb
stos
cltd
cmp
fsub
jle
stos
cmp
imul
lret
sarb
push
ja
into
cli
add
cmp
sti
xor
scas
mov
lahf
gs
push
stos
scas
cmp
push
sub
mov
xor
inc
push
adc
jl
or
stos
mov
mov
xor
push
sub
sbb
jb
stos
jp
fisubrs
pop
cmpl
iret
jne
mov
stc
xor
test
aas
int
std
frstor
in
pause
push
movsb
adc
push
movsl
cmp
xchg
mov
ja
jl
insl
xor
dec
push
mov
adc
mov
mov
lahf
shr
cmp
mov
cmpsb
orb
sub
or
adc
push
mov
stos
scas
or
popa
stos
mov
call
stos
cmc
fdivs
cmp
sahf
insl
je
cmp
imul
clc
pop
jns
inc
pop
adc
add
and
pop
push
movsl
mov
addr16
cwtl
and
or
fcomip
dec
pop
or
dec
addl
rorb
push
push
fwait
jo
gs
xchg
mov
and
jno
and
daa
cld
es
fcomps
int
stos
cmp
das
and
sbb
call
dec
jl
sub
adc
hlt
mov
addl
xchg
jl
enter
pushf
xchg
fbld
inc
xchg
stc
push
dec
jle
lods
imul
lods
sub
mov
push
inc
jge
add
xchg
pushf
cmp
add
cwtl
shll
loopne
imul
cwtl
dec
movsb
stos
sbb
add
or
stos
or
inc
outsl
scas
cmp
xchg
add
mov
adc
lods
dec
iret
and
cmpsb
mov
imul
sbb
loop
stos
push
pop
ret
sub
pusha
stos
adcl
dec
insb
stos
push
fld1
test
roll
jmp
mov
mov
in
pop
iret
mov
out
inc
fistpl
push
push
pop
pop
and
int
mov
stos
rolb
adc
sub
out
stos
mov
ret
in
jle
sbb
inc
outsl
movsb
add
in
test
mov
push
cld
insl
mov
stos
int
je
inc
stos
or
stos
cmp
dec
push
sub
and
mov
mov
xchg
test
push
or
cmpsl
lahf
add
enter
mov
mov
jp
sbb
imul
xchg
push
fmul
push
ljmp
jne
test
imul
or
xchg
enter
loop
mov
xlat
sahf
movsb
xchg
fsts
cmc
push
jmp
stos
jg
xchg
mov
xchg
icebp
sub
clc
dec
pop
stos
add
dec
cmpl
stos
jmp
xchg
test
cmpsl
sti
mov
xor
aas
aam
cmpb
into
ficoms
dec
outsb
addr16
xchg
movsb
pop
push
mov
adc
rorl
mov
inc
lret
iret
and
lret
movsb
pushf
adcb
scas
mov
shrb
adc
sbb
cmp
int3
xor
jno
add
in
push
stos
jg
push
ret
mov
sti
stos
movsl
shlb
stos
popa
inc
pushf
mov
push
cmp
xchg
add
ret
out
sbb
xchg
jle
or
mov
jbe
xchg
inc
cs
push
pop
js
movsl
dec
ljmp
insb
stos
icebp
xchg
pushf
pop
push
orl
xchg
pop
sahf
mov
lock
lods
lds
lahf
inc
add
push
inc
xchg
cmc
inc
mov
addr16
call
stos
sub
jle
dec
cmp
rol
sub
stos
adc
push
pop
or
mov
xchg
and
in
arpl
pusha
test
imul
fldt
frstor
in
or
sti
iret
stos
xchg
mov
cmc
and
mov
aam
xor
or
hlt
jmp
inc
adc
mov
subb
cmp
jne
inc
cmp
stos
jb
repz
lret
jl
xor
call
in
cmp
pushf
dec
mov
int
adc
inc
das
daa
push
dec
ret
or
shrb
mov
cmpsl
addr16
lds
out
mov
stos
test
xchg
pop
subb
cltd
enter
stos
cmp
cmp
push
test
or
je
loop
jge
xchg
dec
dec
popf
stos
jg
jmp
cwtl
pop
jle
stos
cli
jl
lea
test
mov
dec
xchg
xor
fs
mov
adc
stos
or
push
outsl
sbbb
daa
arpl
stos
fs
push
dec
mov
push
sbb
adc
andb
subb
xchg
or
imul
lods
es
xchg
mov
pop
ja
mov
cmp
in
sbb
loop
lcall
xor
pusha
test
adc
iret
int3
xchg
and
mov
adc
stos
hlt
push
inc
jge
xchg
or
movsl
fcoml
subb
lock
sub
into
pop
iret
sti
hlt
adc
mov
stos
cmp
mov
stos
sub
adc
mov
fisttpl
rorb
test
movsl
stos
repnz
mov
icebp
and
push
es
or
mov
jns
pop
std
mov
les
mov
dec
popa
pop
mov
jns
fwait
xchg
insl
push
cmp
mov
xchg
mov
push
daa
fs
cli
mov
into
stos
test
or
stos
xor
std
mov
jmp
cmc
and
mov
jmp
repz
jbe
pop
xchg
xchg
xchg
jmp
stos
push
lahf
repz
scas
xchg
jmp
push
outsb
fxch
jmp
dec
adc
adc
fstp
mov
jae
lahf
mov
sub
out
pop
cmp
adc
xlat
sub
ret
addr16
fwait
ds
fwait
add
data16
jge
int3
sub
nop
loop
dec
xchg
stos
in
ret
xchg
into
mov
xchg
test
jg
or
shlb
arpl
inc
and
xor
sub
add
addr16
popa
movsb
stos
push
and
stos
mov
jge
lock
add
icebp
lea
mulb
arpl
or
adc
sbb
jmp
enter
scas
lea
icebp
imul
jno
mov
inc
mov
fmulp
xchg
jmp
or
test
imul
nop
sahf
movsb
stos
ficomps
loop
or
stos
pop
repz
addr16
movsl
insb
mov
lcall
nop
stos
jns
pop
fs
mov
push
stos
shr
adc
fldenv
stos
ds
and
and
push
mov
mov
sub
mov
cmp
loope
jge
stc
jg
and
iret
push
push
lcall
popf
sbb
stos
fwait
adc
pop
rcrb
mov
subl
inc
dec
xchg
popa
add
pop
push
insb
pushl
stos
cltd
outsl
sbb
add
jmp
jmp
add
movsl
cmpb
pop
mov
lock
loope
daa
dec
imul
pop
shl
addr16
mov
mov
pop
fistpl
out
call
sbb
adc
jp
or
movsb
push
gs
mov
and
cmp
mov
shrb
dec
cwtl
jl
mov
mov
leave
or
loopne
jmp
push
stos
mov
out
cld
lcall
lret
sbb
push
stos
cmp
pop
push
lods
stc
ret
mov
pop
mov
pushf
mov
mov
inc
in
xchg
xchg
ja
jl
xchg
cmpsb
jge
daa
pop
mov
add
xor
xchg
test
popf
jno
pop
adc
cltd
es
ret
xor
mov
cld
rcrb
stos
dec
cmp
push
mov
sti
in
icebp
stos
xorl
mov
cmp
call
or
fwait
pop
repz
dec
ss
lret
aad
mov
lcall
mov
mov
cmp
xchg
popa
push
pushaw
icebp
pop
stos
repnz
ss
adc
imul
inc
stos
stc
ret
adc
sbb
mov
fwait
adc
ficoms
mov
imul
ficompl
push
add
dec
mov
jl
stos
mov
mov
or
mov
dec
xchg
xchg
sub
pop
jne
mov
stos
je
jge
and
or
jmp
push
pop
stos
push
rcl
andl
ret
fwait
je
push
xchg
xor
inc
cmp
mov
arpl
pop
push
stos
xchg
adc
out
add
jmp
mov
test
stc
and
cltd
stos
iret
jbe
xor
or
mov
push
inc
bound
je
stos
adc
jbe
cmp
inc
jmp
dec
pop
stos
and
pushf
stos
aam
mov
sub
out
lahf
mov
into
sbbl
xchg
fs
in
jne
xchg
adc
test
cmp
push
stos
xchg
packsswb
popf
inc
add
icebp
mov
stos
in
sub
dec
cmc
mov
dec
leave
outsl
xor
lret
stos
stos
hlt
cmp
adc
stos
add
les
sti
icebp
push
arpl
lock
mov
hlt
adc
cli
es
stos
mov
jge
jg
iret
add
dec
gs
pop
daa
dec
xchg
cmc
cli
and
dec
int3
xchg
sub
add
in
cmp
clc
loop
cli
stos
rcll
or
pop
jno
mov
adc
jge
rolb
stos
sbb
adc
jns
mov
test
pop
les
ds
mov
mov
stos
dec
add
pop
mov
stos
shlb
mov
rcl
lock
push
pop
imul
inc
lret
jne
ret
push
enter
add
adc
int
subl
or
cmp
movsb
jnp
add
fistps
mov
inc
aam
sub
mov
in
xchg
stos
jp
xchg
es
aas
mov
cmp
int3
mov
pop
stos
xor
test
stos
cmp
add
xchg
jl
in
arpl
shrd
cltd
movsl
cmpb
in
xor
mov
pushf
stos
pop
xchg
xchg
mov
sbb
mov
repz
dec
mov
stos
xlat
push
pop
push
icebp
lock
and
rcl
inc
stos
outsb
fstp
jo
aam
jne
push
imul
or
stos
imul
add
stos
pop
sub
mov
stos
fnstsw
cmp
test
sub
stos
push
mov
mov
xchg
mov
ret
mov
pushf
jmp
add
aad
shrb
pop
shrb
stos
xor
int
dec
js
mov
mov
ss
or
das
scas
shlb
movsb
jle
mov
stc
push
add
cld
jbe
mov
xchg
push
test
sbb
lock
stos
pop
scas
test
push
and
jg
sbb
or
enter
jne
stos
xlat
pop
mov
imul
insl
inc
mov
stos
outsl
push
jb
stos
adc
mov
stos
sub
add
loope
jne
clc
push
cmp
lcall
les
addb
xchg
xchg
mov
fcoms
cmp
mov
idiv
adc
stos
fmull
fwait
loope
aaa
jge
add
mov
test
dec
cmp
push
in
pop
xchg
mov
add
or
fsubrs
mov
or
mov
inc
mov
sub
sub
ret
lret
stos
bound
push
mov
ret
lods
sub
dec
ljmp
dec
mov
add
bswap
push
stos
xchg
rcll
cmpsb
xchg
or
jmp
outsl
push
imul
mov
pop
fcom
stos
lahf
cmp
stc
fbstp
addr16
jae,pn
lods
sub
stos
or
fisubrs
imul
xchg
pop
push
jns
dec
shr
adcl
xchg
add
test
insl
sbb
cmpsb
stos
cmc
popa
sub
imul
jmp
adc
xchg
pop
enter
or
mov
dec
jl
into
scas
pop
imul
lret
out
dec
mov
stos
cmpsl
cmp
imul
and
push
mov
jb
xchg
cmpsl
jae
fwait
jno
outsl
jnp
shll
adc
enter
lcall
fwait
lods
jae
push
push
stos
adc
out
dec
movsb
xor
sbb
imul
sahf
stos
jns
and
mov
cmpsb
leave
sub
cltd
stos
and
pop
xchg
push
into
push
cmp
scas
inc
imul
in
jnp
fwait
xor
stos
hlt
mulb
pop
xadd
or
out
inc
iret
xor
das
push
mov
sub
xor
push
and
scas
pop
outsl
cmp
shll
cmp
sbb
jg
ja
sbb
fs
mov
stos
cmp
mov
push
add
inc
stos
xchg
sbb
movsl
lock
stos
cmp
xor
divl
mov
sbb
cmc
mov
dec
subb
inc
sub
stos
data16
sbb
and
loope
xor
jp
stos
sub
int3
mov
stos
ljmp
scas
sub
xor
jae
sub
pop
sbb
stos
dec
insb
add
lret
inc
jmp
test
orb
cwtl
adc
adc
popf
enter
out
xchg
mov
push
into
mov
push
fwait
pop
adc
stos
jl
fidivs
daa
mov
das
and
leave
jl
add
dec
add
ret
stos
out
fisubs
push
aaa
stos
jnp
adc
or
mov
call
xor
ss
jne
pop
push
and
in
lahf
mov
cmp
add
mov
pop
imul
xchg
lock
mov
or
lret
add
lods
jg
data16
rorl
dec
dec
loopne
pop
arpl
int
out
lret
add
aad
ret
xor
jo
or
jne
ret
fsub
imul
or
punpckhdq
ljmp
lds
cwtl
xlat
adc
stos
dec
aas
aaa
mov
jle
ja
stos
mov
bound
mov
pop
and
pushf
sbb
in
negl
jne
adc
call
push
movsl
jecxz
out
and
push
iret
stos
mov
repz
sbb
out
cmp
stos
testl
lret
push
in
adc
push
setg
in
andb
scas
sub
sbb
xlat
sbb
jnp
xchg
push
stos
mov
jl
arpl
cmp
push
lret
lds
push
xor
stos
subb
popf
loopne
jne
mull
movsl
in
xchg
cli
mov
mov
add
out
dec
stos
rcrb
lock
push
stos
scas
test
xor
mov
ret
stos
xchg
cmpl
aaa
dec
xchg
jecxz
dec
cli
xchg
imul
dec
cmpsb
in
stos
xchg
gs
inc
jbe
cs
stos
adc
mov
shrb
pop
sub
pusha
jnp
add
lods
mov
rcrl
loope
lea
and
add
pop
lret
neg
mov
dec
std
outsl
pop
mov
add
push
ret
jmp
push
and
and
xor
mov
add
imul
mov
push
push
stos
dec
negl
hlt
push
sub
fisubrs
mov
iret
bound
addr16
mov
pop
fistps
lds
and
xchg
insl
xorl
sbb
ljmp
scas
adc
xchg
gs
aam
in
or
imul
stos
or
stos
mov
and
dec
mov
pop
jnp
push
push
inc
stos
arpl
sub
ljmp
sub
adc
test
lods
stos
mov
vhsubpd
ret
rep
clc
push
aad
pop
not
dec
stos
into
fstpl
push
stos
mov
cwtl
jl
or
xlat
or
pushf
movsb
push
push
out
add
xchg
stos
mov
xchg
inc
pop
stc
sti
mov
cltd
scas
pop
dec
stos
dec
ja
ss
dec
adc
sarb
enter
stos
into
shlb
inc
das
lret
cmpsb
int3
jnp
in
fs
scas
nop
push
jmp
in
add
sub
idivl
stos
lahf
ret
mov
bound
jae
mov
stos
xlat
rol
sahf
pop
andl
cmpb
enter
insl
and
add
add
lock
push
cmp
xchg
mov
fsubrs
mov
mov
jo
decl
stos
jno
jg
mov
dec
mov
jl
dec
cmpsb
xchg
shl
mov
cmpb
push
je
fcomps
imul
xchg
imul
adc
scas
xchg
mov
ljmp
cmp
add
lcall
jns
setns
ss
arpl
out
adc
imul
push
mov
cmp
xchg
cli
insb
aas
stos
decl
pop
inc
into
stc
lret
push
imul
ss
sub
ss
popl
stos
mov
jb
and
mov
lret
out
push
jmp
repnz
jne
push
xchg
push
lods
sbb
call
add
push
lret
jns
stos
fidivrl
stos
or
mov
loopne
inc
push
push
pop
sti
push
dec
or
stos
and
pusha
adc
inc
add
sub
out
push
stos
shr
fs
hlt
popf
daa
push
push
sti
leave
stos
mov
push
rcrl
add
mov
stos
in
lret
inc
mov
jae
sub
into
imul
add
mov
dec
leave
outsl
adc
sbb
ds
cli
fwait
rcrb
sub
stos
out
inc
jge
je
dec
sbb
bound
dec
push
push
stos
mov
ja
dec
mov
test
jecxz
jne,pn
insb
sub
fxch
mov
mov
inc
xor
adc
insl
push
cmp
enter
sbb
fwait
cmpsb
jne
arpl
jns
lret
mov
stos
int3
mull
cmp
lea
jae
subb
insl
stos
sub
in
jp
fldt
add
ja
xlat
adc
stos
inc
rcr
lea
sbb
stos
ret
stos
int3
add
mov
scas
stos
mov
mov
cmp
fistpl
data16
jmp
add
loopne
scas
fidivrs
or
dec
stos
xchg
mov
or
stos
je
fldenv
stos
pop
clc
lock
add
out
inc
js
cmc
add
addr16
das
mov
xor
clc
mov
pop
mov
mull
mov
xchg
stos
or
jno
xor
in
jg
mov
or
mov
stos
movsb
mov
jmp
sahf
repnz
or
inc
jne
inc
in
add
push
imul
mov
aaa
jb
inc
fildl
sbb
iret
icebp
stos
inc
xchg
ret
int
stos
in
mov
sbb
jne
mov
push
push
fdivs
js
inc
and
fisubrl
icebp
ret
jge
mov
adc
push
push
sub
addr16
mov
pushf
stc
sub
ror
mov
push
sbb
mov
mov
int
stos
pop
add
adc
and
movsb
int
jo
sarb
stos
rclb
mov
add
sub
out
cmc
aas
add
and
sbb
xchg
iret
mov
imul
mov
imul
stos
mov
cmpsl
daa
jae
fsts
frstor
loope
push
in
stos
and
cli
rcll
cmp
sub
cltd
xchg
stos
xor
mov
jmp
cmpsl
scas
std
mov
hlt
bound
xchg
aam
stos
jbe
pop
add
mov
in
stc
adc
stos
leave
jle
test
add
and
mov
stos
dec
flds
cltd
xor
or
push
popa
xchg
lret
pushf
and
ljmp
xor
or
push
inc
sub
and
xchg
fwait
mov
stos
push
fnsave
cmp
stos
jnp
or
mov
aas
xchg
push
stos
jmp
outsl
xor
stos
in
cmc
jmp
lock
xchg
scas
stos
out
cmp
sub
sub
sbb
ret
jnp
dec
jge
ds
stos
std
aaa
in
daa
es
jg
lods
stos
mov
loope
inc
stos
and
mov
test
cmp
xchg
stos
test
icebp
popa
test
stos
or
ljmp
lahf
xchg
cmpsb
push
stos
push
loopne
jmp
xchg
sub
pusha
cmpb
and
js
sti
imul
out
dec
fnstsw
lahf
add
or
ds
cmpsl
adc
cmp
dec
cli
sbb
stos
pop
xchg
xchg
lahf
insl
mov
mov
mov
repz
je
jb
orl
adc
inc
int3
xchg
jg
mov
add
jnp
xchg
subl
mov
cltd
lahf
imul
mov
stos
fsubrp
mov
loope
push
mov
stos
adc
mov
mov
fnstcw
inc
dec
lods
shll
outsl
cmpsb
xorb
call
push
dec
jmp
push
rclb
or
inc
daa
stos
je
mov
stc
arpl
sub
ret
fwait
xor
subb
adc
stos
xorl
bswap
mov
mov
in
mov
xchg
xchg
repz
stos
scas
js
cmp
pop
jmp
dec
dec
stos
stc
mov
shrl
in
mov
das
in
mov
mov
push
cmp
cltd
lods
sbb
sti
push
or
into
leave
mov
xchg
pop
mov
fdivrl
mov
daa
push
fwait
lcall
pop
stos
jle
std
mov
stos
ja
cld
add
scas
loopne
adc
test
sarb
inc
inc
stos
sahf
and
pop
adc
imul
or
stos
clc
inc
js
pop
dec
stc
push
stos
cltd
xor
xchg
inc
push
imul
lret
clc
stos
cwtl
sbb
cli
stos
leave
int
sbb
jmp
stos
push
sub
cmp
xor
and
xor
jbe
inc
rclb
inc
xor
popf
sub
es
stos
mov
out
stos
gs
or
push
jmp
rcr
arpl
pop
lcall
rcrb
fdiv
stos
insb
add
cli
cmp
xchg
pushf
stos
aas
inc
lds
pop
icebp
stos
dec
jb
test
lock
sbb
xchg
test
movsb
adc
fwait
rolb
dec
mov
sarb
xor
xchg
imul
lahf
les
xor
out
push
dec
in
sub
add
lea
fucomp
push
fdivrs
xchg
xchg
xchg
int
cmp
subb
xchg
lods
scas
sbb
stos
mov
jg
and
adc
ljmp
lret
jmp
xchg
mov
mov
repnz
mov
in
and
or
jbe
stos
push
mov
inc
and
stc
outsb
std
mov
mov
fwait
jg
pop
cmp
sbb
add
shlb
stos
sbb
sub
stos
scas
inc
sbb
aad
sub
fimull
outsb
cmp
ljmp
or
stc
stos
sbb
fisubs
faddl
push
mov
lds
mov
clc
daa
sbb
inc
sti
enter
stos
repz
xorb
mov
add
mov
dec
push
stos
push
in
and
push
movl
or
inc
cmc
jl
iret
das
stos
xchg
sahf
mov
lahf
mov
or
loop
lods
sub
or
clc
mov
jns
imul
sub
add
sbb
inc
stc
lcall
mov
int3
pop
into
sub
ja
adc
fstl
and
push
add
stos
jle
jo
mov
or
pop
mov
or
pop
sbb
clc
jae
pop
fildll
movsl
repz
or
xchg
cmp
insl
es
xor
cmpsl
loopne
or
cmp
int
mov
stos
mov
dec
pop
mov
fisubrl
xor
push
gs
stos
imul
jns
or
bound
mov
div
jle
add
jl
jne
cmc
push
out
mov
cmp
rcll
xor
bound
scas
jmp
movq
loop
pop
lahf
stos
dec
mov
dec
mov
shl
push
fistps
shlb
stos
or
int
sub
imul
mov
mov
or
adc
arpl
jns
fs
adc
loope
clc
inc
mov
out
xchg
xor
dec
int
inc
call
mov
outsw
ss
mov
lds
stos
repz
addr16
mov
push
stos
adc
add
cmp
push
sub
movsb
orl
and
clc
sti
sbb
subb
sbb
mov
xor
mov
insl
xor
fisttpll
cmp
push
add
shrb
stos
or
add
daa
hlt
mov
cltd
arpl
adc
add
cs
icebp
dec
mov
push
stos
xchg
shl
fst
stos
cltd
lret
aaa
cmp
add
inc
std
jno
pop
mov
addr16
pop
and
in
repnz
xchg
add
stos
cmp
ja
leave
mov
pop
stos
scas
in
add
sub
ja
mov
fcmove
fldcw
lahf
adc
scas
daa
mov
out
jge
rep
cmp
xor
dec
xor
stos
js
mov
pop
lahf
movsb
out
xchg
push
addb
sub
fstenv
mov
aad
stos
dec
push
lahf
mul
movsl
adc
les
and
xchg
call
xor
fisubrl
hlt
lods
outsl
mov
pop
jmp
pop
dec
mov
mov
insl
mov
or
scas
shrl
jns
push
insl
stos
aad
jae
jge
adc
lcall
mov
mov
inc
fwait
icebp
popa
stos
or
dec
jecxz
sub
mov
xchg
push
cmp
jle
stos
gs
sub
mov
enter
out
iret
mov
divb
pusha
or
pop
stos
xchg
aas
iret
cmp
dec
in
push
cmp
cmpsl
clc
sbb
nop
stos
movsl
jae
pop
jg
xchg
scas
stos
push
in
fildl
xorl
or
mov
fs
stos
stos
das
fsubrl
ljmp
lret
sti
inc
out
dec
jp
xchg
pop
mov
andb
gs
dec
repnz
adcb
shrl
int3
hlt
movsb
insl
add
imul
mov
aas
stos
shll
adc
stos
sub
sbb
in
push
fistpll
stos
data16
rol
inc
xor
in
jge
mov
stos
jecxz
fwait
dec
sbbl
test
stos
push
inc
pusha
loop
cltd
dec
ljmp
dec
pop
and
sarl
jno
daa
addr16
movsb
jl
fisubl
jle
stos
mov
sub
mov
rcll
in
out
lods
lret
mov
stos
jo
ja
or
fidivrs
cmp
orl
mov
xchg
movsb
mov
sub
jp
stos
cmpsl
jmp
into
pop
pop
outsl
stos
test
stc
lds
jb
out
addr16
stos
incb
xlat
lock
ret
add
loope
in
icebp
stos
cmp
dec
xor
insl
cmp
dec
ja
or
lock
aaa
inc
adc
imul
test
popf
lahf
jmp
push
cmp
push
fnstsw
stos
das
lods
cli
icebp
rorb
lds
pop
aas
pop
xchg
stos
push
mov
mov
xor
sbb
test
cmpb
push
stos
movsl
mov
popa
sbb
cpuid
and
loopne
xor
ret
adc
mov
push
daa
insl
xlat
loopne
mov
dec
stos
popa
adc
int3
push
iret
mov
mov
gs
aas
xchg
pop
xor
cld
sub
inc
ret
mov
stos
adc
inc
pop
pop
subb
add
cwtl
ds
scas
shrl
xor
ljmp
add
cmp
add
dec
jnp
popa
adcb
pop
stos
jl
and
shrl
imul
fwait
inc
xchg
lea
movsl
std
xchg
cld
lahf
cmp
stos
jl
push
push
pop
ljmp
dec
sbb
pop
jge
ja
adc
xchg
shr
xor
lret
cmp
xchg
sub
mov
stos
into
cvtps2pd
cmpsl
push
lods
or
stos
repz
outsl
push
stos
inc
sub
adc
jnp
stos
mov
lret
and
sbb
stos
dec
out
sub
push
cmpsb
xchg
mov
inc
stos
sbb
sahf
popa
sbb
fstpt
mov
nop
loop
outsl
dec
inc
scas
fsubrl
or
xchg
dec
sub
lods
lods
outsl
or
nop
aaa
daa
test
dec
insb
mov
popf
stos
xor
mov
jp
stos
pushl
gs
les
and
es
mov
inc
stos
mov
lods
pop
adc
xor
mov
mov
imul
bound
mov
push
pushf
scas
mov
testb
int3
cmp
aaa
xchg
call
pop
outsl
fs
stos
aam
hlt
cld
xor
mov
pop
leave
imul
in
cmp
xchg
adcw
push
jge
add
int
dec
pop
stos
mov
cmc
pop
mov
test
scas
movsb
lea
imul
call
jo
stos
cmp
sbb
mov
stos
mov
mov
mov
xchg
jbe
dec
adc
les
lock
in
test
dec
xor
stos
mov
or
aam
and
daa
loop
adc
leave
pop
gs
and
lods
sbb
cmpsb
dec
js
mov
fcomi
cmp
into
push
pop
mov
cltd
jmp
jmp
sub
sub
inc
xlat
fadd
mov
sarl
jae
mov
std
outsl
pop
dec
shrb
nop
icebp
mov
cmpsb
stos
ss
xchg
or
stos
aam
and
push
stos
adc
inc
das
mov
adc
xchg
es
or
ds
push
pusha
dec
fwait
dec
mov
push
add
lcall
mov
fisubrl
push
jbe
cmc
scas
add
pop
mov
pop
imul
fwait
jecxz
int3
sub
das
push
jnp
inc
jo
push
pop
int
inc
adc
jecxz
xrelease
shlb
stos
ds
xlat
mov
jle
int
stos
adc
and
jne
aad
pop
mov
cmp
data16
xchg
and
push
stos
gs
or
inc
dec
in
or
stos
repz
jmp
xchg
ds
add
cmp
icebp
stos
xchg
les
cwtl
adc
cld
rcll
rclb
dec
xchg
stos
mov
stos
repnz
pop
mov
stos
xlat
call
scas
adc
xor
stos
mov
fwait
inc
cs
icebp
push
mov
repz
push
xchg
pop
rcrb
leave
push
mov
ljmp
and
dec
cld
or
out
jmp
imulb
mov
jmp
pop
jnp
mov
imull
data16
xchg
mov
in
pop
inc
inc
stos
rorl
stos
pop
add
es
mov
dec
aaa
mov
push
stos
sub
push
cmp
gs
addr16
in
ja
xchg
mov
stos
imul
cmc
sbb
cli
adcl
js
ds
cmp
fwait
imul
add
shr
jne
dec
xchg
jl
push
sub
jb
jle
imul
pmovmskb
inc
push
cmpsb
and
and
stos
cld
pop
mov
push
imul
jle
std
subl
adc
mov
stos
in
out
mov
das
xchg
jnp
test
iret
fidivrl
ret
sub
fs
loope
sbb
stos
jg
pop
movsl
inc
inc
mov
mov
stos
add
mov
pop
sbb
iret
mov
push
mov
fcmove
lret
imul
sub
outsl
mov
or
test
fmul
add
por
scas
add
shll
pop
adc
gs
mov
int
add
stos
loope
adc
and
lds
mov
or
sub
and
xchg
pop
add
shrl
addl
mov
enter
or
sub
loope
cmpsl
xchg
imul
or
pop
and
nop
int3
stos
pop
cmc
cmp
inc
or
stos
push
scas
test
dec
stos
push
xchg
or
les
imulb
xchg
cmpl
and
stos
push
gs
rorb
push
cld
cmpsb
jae
push
push
add
mov
outsb
sub
out
jno
jne
data16
mov
in
int
rcll
mov
ret
out
and
fisubs
call
push
mov
lret
pop
daa
andb
or
mov
aad
pop
lea
shll
arpl
lods
push
stos
inc
xor
negb
pop
stos
add
push
lret
cld
push
and
test
add
mov
pop
test
cli
or
sub
jne
sub
mov
lea
inc
jmp
xchg
mov
pop
stos
xor
lods
rcrb
mov
aaa
push
jle
push
stos
test
push
mov
mov
stos
xchg
push
enter
dec
stos
mov
leave
jl
sbb
push
stos
inc
sbbl
outsb
cmp
test
mov
adcl
adc
or
add
enter
xor
iret
out
loopne
fldt
mov
push
sbb
sub
insl
and
stos
mov
cmp
fwait
stos
out
and
stos
lret
push
lds
and
in
int3
imul
add
int
cmc
ret
iret
jecxz
adc
sarl
push
ljmp
les
stos
es
imul
aas
stos
mov
sarb
stos
cwtl
xlat
sahf
call
mov
mov
arpl
jo
ljmp
or
cltd
xchg
pop
jmp
adc
test
dec
bound
xorl
stos
push
push
popa
and
xchg
adc
in
pop
fs
cltd
cwtl
stos
mov
push
jnp
fildll
negl
aad
jmp
jp
push
or
test
stos
icebp
ss
jns
cmpsl
jp
xor
push
xchg
pop
repz
pop
out
stc
jl
ficoml
stos
shrb
or
mov
gs
pop
cli
and
fnstsw
cmp
lods
je
adc
jge
arpl
mov
adc
imul
lcall
js
int
sti
les
in
push
inc
push
mov
stos
das
jmp
mov
dec
push
add
shrb
add
stos
jo
or
or
in
loop,pn
das
or
sbb
jmp
mov
fists
rcrl
enter
mov
outsl
sar
mov
pushf
rol
dec
stos
push
in
fdivl
pop
and
loopne
movsl
imul
stos
int3
sbb
add
xlat
mov
xchg
dec
stos
pop
mov
rorb
add
stos
lds
out
insl
pusha
push
cmc
lret
jmp
mov
jo
ljmp
cmp
aaa
cmpsb
sarb
pusha
xlat
dec
xchg
test
orb
stos
ja
dec
pop
cwtl
shr
inc
push
ficoml
stos
xchg
out
ret
test
xchg
stos
scas
mov
mov
ja,pn
ds
shrl
lret
push
mov
pushf
jb
sbb
mov
fstpt
arpl
pop
sbbl
stos
out
ds
lock
popa
xchg
imul
push
sahf
and
pusha
mov
decl
lret
sub
mov
stos
pop
xchg
pop
stos
es
lds
sahf
adc
sbb
int3
jp
pop
pop
mov
gs
stos
movsb
jg
xchg
in
cmp
mov
int3
push
jecxz
stos
or
adc
cwtl
cmpsb
stos
cmp
mov
nop
lock
in
aaa
add
orl
sbb
fidivl
ljmp
test
cwtl
shrl
or
stos
cld
add
mov
fldenv
xchg
or
sub
stos
push
stos
adc
pop
mov
dec
in
jmp
xor
lahf
adc
rcrb
mov
pop
call
mov
shrb
cmp
out
jns
popf
mov
sbb
pop
xlat
sub
mov
dec
sbb
mov
cmpsl
jg
fisttpl
stos
xchg
mov
jno
stos
add
test
hlt
sbb
ficoml
rolb
or
stos
aad
fstp
mov
insb
call
stos
test
stos
jg
push
mov
imul
fcoml
jae
fisubl
aas
add
mov
inc
adc
push
stos
sub
loope
arpl
cs
in
stos
mov
leave
sub
stos
mov
adc
call
out
imul
dec
mov
sub
add
jbe
jnp
test
dec
stos
sbb
int
add
shrb
sub
cmp
stos
adc
xchg
xchg
stos
mov
add
outsl
popa
js
into
dec
mov
stos
cmp
push
dec
mov
stos
pop
leave
xchg
enter
stos
movsb
daa
aaa
loopne
iret
popf
mov
push
pop
roll
stos
leave
pop
sarb
je
jmp
mov
daa
mov
scas
stos
adc
xor
jbe
stos
enter
out
stos
shrb
imul
jp
add
add
sbb
movsl
push
test
and
es
lods
adc
ret
sub
sbb
out
stos
shl
push
dec
stos
insb
pop
or
arpl
imul
int
mov
jge
jno
lret
and
fidivl
stos
int
sahf
out
cmpsl
stos
adc
sub
pop
jmp
idivl
xchg
dec
pop
stos
pop
cmp
or
arpl
mov
pop
lods
dec
lahf
mov
jmp
sbb
leave
xchg
in
sbb
mov
mov
popa
add
out
inc
lods
mov
dec
sub
pop
lds
push
push
fdivl
inc
dec
jg
mov
cmpl
arpl
xor
das
movsl
jp
push
jb
cld
in
jg
movsb
add
lock
cmp
insl
mov
clc
ljmp
stos
cmp
adc
fldl
adc
pxor
cmp
jb
dec
push
mov
dec
stos
cmp
and
cmp
mov
aad
lret
mov
push
jns
cmp
mov
fbld
xor
pop
mov
dec
enter
cmp
push
inc
adc
push
add
fwait
inc
outsb
mov
dec
out
ret
arpl
mov
inc
stos
add
loop
pop
int3
jge
jle
push
mov
push
sbb
aaa
stos
jmp
pop
not
nop
int3
mov
adc
jmp
stos
jmp
inc
inc
imul
pop
sbb
movsb
adc
dec
lret
xchg
sub
idivl
int3
std
repz
mov
jl
stos
bound
cmp
leave
stos
iret
lcall
mov
mov
mov
sti
fadd
mov
pop
in
xor
sahf
fwait
scas
xor
pop
mov
testb
add
xor
rol
stos
pushf
popa
out
or
int
push
into
jecxz
jge
mov
adc
inc
xor
adc
stos
dec
sub
dec
sbb
mov
imull
adc
jne
data16
jbe
jmp
xchg
mov
flds
popa
mov
fwait
pushf
arpl
bndstx
stos
aad
cmp
or
out
sub
je
stos
test
pop
or
push
aad
and
mov
dec
xchg
cmp
pop
stos
in
shll
jne
ljmp
ss
inc
adc
scas
mov
xchg
xlat
cmc
and
loope
cmp
jne
imul
xor
mov
adc
or
pop
stos
popf
dec
xchg
lods
pop
mov
stos
mov
out
shll
arpl
ret
mov
dec
mov
stos
mov
movaps
mov
and
stc
or
sub
stos
leave
in
lods
bound
mov
stos
jl
les
dec
push
mov
cmp
jmp
stos
push
inc
mov
out
loop
das
pop
outsb
mov
jno
sub
dec
and
xchg
dec
pop
imul
add
aad
pushf
xor
aaa
insl
int3
lret
popf
add
sbb
fwait
mov
push
addl
pop
stos
cmp
cmpsb
test
push
loopne
mov
stos
push
ja
js
mov
push
mov
mov
and
repnz
sub
jo
pop
and
scas
jbe
stos
cmp
scas
mov
stos
je
popf
es
lahf
add
or
mov
jbe
pop
mov
cmp
sti
or
mov
pop
int
dec
shll
xor
loope
fisubl
xchg
stos
xchg
pop
mov
or
lock
dec
pop
xchg
xor
add
mov
ljmp
xor
lahf
inc
lea
in
pop
and
aaa
adc
jne
jnp
cli
inc
lret
ds
push
xchg
out
cmp
xchg
pop
lods
mov
mov
mov
popf
arpl
mov
jbe
mov
js
lods
imul
sbb
push
cmp
dec
stos
adc
out
push
imul
stos
add
rep
mov
jne
sub
dec
jge
aaa
std
jmp
jno
loop
clc
scas
mov
cwtl
xorl
mov
lods
stos
push
push
xchg
pop
dec
in
outsb
or
or
stos
mov
mov
movsb
cwtl
stos
push
mov
sbb
test
in
stos
jo
ficoms
cmpb
inc
das
scas
mov
js
jge
jae
push
mov
add
xchg
inc
jmp
in
pop
bound
xor
call
jge
jmp
insl
cltd
fnsave
shrb
inc
mov
sahf
xor
lahf
loopne
and
test
iret
mov
lods
imul
pushf
push
out
dec
or
sbb
push
pop
int3
stos
scas
fsubl
call
sub
jmp
pandn
in
xchg
aas
bound
sub
sbb
stos
or
clc
xor
loopne
xchg
mov
stos
add
jno
insl
stos
mov
notl
mov
scas
je
mov
sbb
rorl
sti
mov
fldcw
mov
test
stos
insl
mov
inc
dec
fwait
daa
imulb
andb
push
stos
icebp
testl
adc
sub
or
adc
in
es
stos
arpl
push
push
leave
in
xchg
stos
lea
pushf
lds
stos
sti
lods
jae
push
mov
mov
hlt
mov
adc
xchg
stos
out
or
in
imul
sub
push
xor
cmp
divl
in
sub
ds
push
add
sub
xchg
mov
rcll
leave
jns
stos
xor
mov
andb
inc
or
xchg
and
clc
fcmovnb
push
stos
push
inc
mov
stos
imul
adc
xor
push
xchg
pop
xchg
int3
fdivrl
push
jle
mov
dec
pop
imul
stos
adc
sbb
hlt
addr16
insl
adc
mov
add
pusha
scas
or
mov
stos
out
and
stos
fstps
or
stos
sub
dec
psubsb
jmp
mov
arpl
stos
test
outsb
inc
or
mov
xchg
popa
fwait
add
jae
je
mov
push
xchg
loop
add
daa
shll
in
imul
outsb
mov
push
adc
jo
push
stos
add
lds
repnz
xor
cmp
bound
cmp
repnz
stos
adcl
sti
outsb
stos
mov
insl
push
inc
jl
mov
dec
fxch
sub
repnz
cmp
inc
inc
test
adc
fwait
dec
sub
mov
or
xchg
cmc
or
lock
stos
inc
pop
xor
stos
das
jb
mov
stos
xchg
jne
xor
cmpsb
push
stos
outsb
enter
push
adc
push
test
shlb
popf
push
lret
jecxz
aad
xorl
mov
jbe
daa
repnz
push
int
inc
stos
andl
std
sbb
faddl
jp
sub
and
inc
imul
into
push
stos
outsl
adc
inc
push
or
jl
dec
mov
inc
push
mov
jmp
cmp
arpl
mov
repz
gs
push
adc
dec
dec
add
sbb
lds
fcoms
pop
leave
push
dec
imul
push
xor
stos
test
or
out
repnz
ds
call
in
push
add
stos
frstor
scas
movsb
push
fisubs
sbb
in
iret
addr16
rolb
scas
arpl
movsl
stos
pop
subl
pusha
xchg
lcall
sub
fcomip
xchg
stos
movsl
dec
out
gs
ja
test
stos
loop
ljmp
aas
mov
lock
test
mov
clc
pmuludq
popa
mov
sub
lahf
push
jmp
add
stos
aam
add
stos
rcr
push
push
inc
push
sbb
stos
aaa
mov
push
push
fisubrs
ss
pushf
fs
sub
jl
stos
push
dec
xor
test
xchg
stos
mull
idivb
pushf
repnz
pop
adc
push
dec
push
adc
scas
push
mov
sub
clc
sub
stos
sti
hlt
lods
std
addl
xorl
test
xor
stos
out
dec
push
shll
pop
jp
xchg
mov
dec
stos
mov
push
pop
clc
stos
icebp
sub
cmpsb
sub
aas
ret
insl
shrl
int
ret
popa
imul
clc
xchg
jns
fldt
ja
insb
mov
stos
jae
xchg
mov
cwtl
mov
push
js
sub
push
daa
cmpsb
jno
xor
cltd
jnp
dec
pop
pop
stos
imul
jns
inc
mov
jecxz
gs
pop
ret
insb
xor
nop
aam
mov
aaa
cmp
adc
ret
lods
icebp
stos
daa
add
cs
lcall
pop
enter
sub
fwait
les
out
nop
aas
out
stos
popf
je
cmc
insl
pop
sub
stos
imul
and
nop
dec
loop
xchg
repz
and
mov
mov
xor
jl
push
cli
xor
ret
mov
jmp
aaa
mov
daa
mov
pop
pop
stos
fwait
sbb
in
pop
push
ds
lock
daa
cmp
push
cmp
mov
cmpsl
cmpsb
cli
data16
mov
mov
adc
lods
xor
stos
int3
insl
xor
cs
dec
and
je
xchg
das
imulb
outsl
stos
jmp
gs
jno
fwait
sarb
mov
fstpt
inc
std
mov
hlt
cmp
nop
jo
outsl
mov
ljmp
stos
test
daa
pop
stos
mov
xor
push
xor
stos
xchg
inc
mov
aaa
loope
and
mov
popf
adc
mov
mov
jl
fiadds
test
enter
lea
dec
les
mov
or
fisubs
sub
mov
push
cld
pop
sub
stos
popf
add
aas
xchg
jl
pop
and
jo
in
dec
dec
pop
add
adc
sbb
stos
mov
fwait
jb
mov
out
and
inc
les
cli
int3
inc
fwait
or
cmp
pusha
mov
mov
dec
and
push
xchg
dec
stos
ja
mov
fsubrl
gs
and
leave
mov
imul
mov
test
mov
or
cltd
arpl
inc
mov
push
push
lahf
xchg
jmp
lods
dec
cmp
js
rclb
push
test
dec
push
fcompl
stos
stc
mov
sub
or
iret
xchg
std
cmpsl
mov
pop
in
mov
push
stos
push
jne
push
jecxz
aam
lahf
test
out
scas
ds
stos
inc
jle
lcall
stos
push
adc
scas
xchg
stos
inc
sub
or
aaa
stos
mov
dec
out
addr16
or
and
test
mov
cli
or
shrl
int3
dec
pop
push
stc
pop
out
cmp
fmulp
call
pop
push
je
cmp
push
imul
mov
daa
pop
aaa
test
dec
sbb
add
pop
div
sub
imul
dec
dec
loope
xchg
js
icebp
push
std
mov
mov
pop
mov
stos
movsl
pop
jb
scas
pop
xchg
mov
flds
xlat
cmc
stos
jmp
insb
out
mov
mov
stc
push
popa
inc
imul
xchg
scas
jns
mov
push
ss
jb
adc
lret
popa
and
pop
mov
out
iret
xchg
daa
cmp
fiaddl
shrb
leave
cmpsl
movsb
and
jo
test
stos
out
push
aaa
int3
jbe
fstpl
push
xchg
repz
jl
cs
push
and
fwait
imul
stos
push
push
call
cmp
mov
mov
mov
iret
push
fwait
adc
stos
xchg
adc
sbb
clc
cmp
push
mov
mov
or
xchg
subb
cld
sub
jmp
xchg
jae
mov
enter
jnp
xchg
in
push
dec
sub
add
stos
fsubs
lea
xchg
ret
sbb
fbld
stos
sbb
push
jo
stc
sub
stos
xchg
sub
lds
je
mov
or
bound
mov
es
das
stos
aas
rclb
lea
push
mov
push
mov
daa
sbbl
mov
pop
dec
in
popa
lods
stos
pop
xor
push
popf
clc
into
stos
mov
imul
inc
insb
add
mov
stos
aad
inc
pop
jle
stos
mov
and
mov
jp
sub
jge
or
stos
call
repz
xor
fimull
cmpsb
stos
pop
out
pop
dec
and
push
mov
dec
les
push
mov
call
add
cmp
mov
js
adc
pop
fwait
out
shlb
out
lahf
movsb
lea
push
daa
xor
stos
mov
jno
pop
and
fwait
ja
es
stos
andb
dec
outsl
daa
cmp
mov
push
scas
fwait
jp
int3
stos
and
test
stos
mov
out
lret
mov
testl
push
aad
int
dec
mov
aam
lea
daa
mov
adc
push
or
mov
and
loop
pop
in
hlt
stos
pop
jb
sbb
dec
lret
inc
cmp
bound
ja
mov
or
dec
icebp
stos
push
cwtl
push
adc
fbld
push
dec
stos
jno
in
pushl
mov
stos
add
adc
test
push
xor
sub
fistpl
stos
sub
pusha
adc
sbb
sbb
cltd
scas
test
jmp
push
int3
cs
inc
stos
ficoms
mov
and
cmp
inc
xor
shrl
jbe
add
and
mov
je
cmpl
jmp
xchg
lods
sbb
fstpt
js
jmp
iret
push
aaa
mov
jp
or
add
mov
and
setae
dec
stos
inc
sub
add
dec
mov
bound
or
mov
subb
xchg
jno
mov
or
data16
sub
nop
sbb
inc
sub
stos
lock
inc
stos
push
mov
in
test
push
mov
adc
incl
lcall
sbb
mov
jno
rolb
fisubrl
lods
push
cltd
jmp
push
lock
ljmp
das
sbb
sbb
inc
inc
xchg
out
imul
mov
fwait
push
dec
test
aam
jmp
out
mov
cltd
or
xchg
stos
mov
popf
test
dec
dec
imul
data16
jae
push
outsl
scas
push
xor
sbb
arpl
call
sti
adc
cmp
clc
jmp
push
mov
xchg
stos
push
pop
mov
sub
add
lock
mov
jmp
nop
stos
out
jnp
cli
sub
stos
pop
adc
icebp
xor
push
mov
andl
pop
add
cmp
mov
test
rorb
stos
push
inc
lahf
sbb
das
pop
inc
in
pop
stos
jne
dec
inc
dec
cmp
inc
inc
in
add
jmp
mov
cmp
fcoms
xchg
add
std
hlt
dec
mov
mov
xor
outsb
sub
stos
cmpsl
mov
sahf
and
stos
jns
stos
les
or
sahf
aad
into
mov
lea
push
jmp
popf
xor
ljmp
sub
xchg
les
jle
jecxz
fwait
icebp
or
pop
fsubl
and
lea
xchg
push
jnp
or
or
pop
arpl
jp
data16
jb
cltd
stos
mov
sub
in
fwait
lods
add
jmp
xor
inc
les
lcall
pop
enter
stos
ja
pop
shl
push
xlat
xchg
mov
push
cmpsb
nop
int
imul
bound
or
add
jg
push
sub
mov
xorb
test
pop
test
scas
cmpsl
xor
pushf
fistps
mov
imul
decb
daa
pop
stos
shrl
xor
lret
lahf
shlb
pop
in
dec
sbb
pop
xchg
mov
imulb
xor
mov
and
pop
jnp
mov
mov
adc
into
aam
sub
xor
jb
cmp
mov
and
jg
lahf
push
loope
cltd
pop
loop
inc
stos
mov
ljmp
lret
push
xor
stos
test
cmp
inc
adc
dec
sub
xchg
xchg
lahf
aad
aad
js
mov
sbb
into
sbb
scas
out
add
stos
xor
ret
cmpsb
insb
jo
ja
icebp
imull
jp
add
iret
add
in
adc
aam
pop
dec
popf
fsubrp
push
stos
inc
sbb
jno
add
lds
shlb
and
mov
pushf
shrb
xchg
cwtl
sub
prefetch
cmp
jo
out
and
in
fwait
out
rcr
test
pop
lds
jb
adc
jo
lods
inc
fsubrl
xchg
pop
daa
pop
arpl
xchg
sub
cmp
ret
rclb
shll
jg
loopne
dec
mov
and
test
xor
xor
xchg
add
stos
nop
in
sbb
sbb
stos
cs
inc
jne
stos
jno
loop
pop
out
fcomi
stos
pop
xchg
inc
ja
mov
into
shll
or
leave
push
stos
cmp
add
adc
inc
pop
xchg
stc
ljmp
sbb
je
stos
jno
xor
xchg
test
add
enter
jne
xchg
add
mov
and
sbb
call
sahf
push
and
iret
stos
daa
cs
adc
ud0
stos
int
xor
jo
pop
mov
cld
pop
loop
and
inc
subb
jmp
sbb
push
inc
imul
fists
jmp
ss
stos
shrl
mov
mov
mov
in
cld
stos
out
insl
fistpl
fisubl
stos
dec
ret
adc
outsb
imul
stos
les
dec
pop
aad
int
mov
inc
xor
pusha
enterw
dec
push
mov
cmp
into
add
movsb
ds
stos
jp
jnp
js
stos
iret
hlt
jo
nop
int3
or
jb,pn
ficompl
lds
and
icebp
insl
je
push
push
lods
cmp
sub
inc
xchg
mov
imul
orl
loopne
mov
out
js
xor
push
ja
gs
push
mov
jae
fmull
push
outsl
and
sbb
mov
bts
adc
mov
jl
stos
push
das
pop
insl
jmp
xlat
cltd
ret
rorl
and
testb
stos
xchg
dec
cwtl
data16
call
subb
adc
xchg
fisubrl
fildll
lret
fs
fdivs
push
adc
cmp
cmpsl
repz
xchg
in
jge
sbb
stos
mov
push
xor
idiv
hlt
addr16
sbb
inc
xchg
cmp
std
sbb
adc
pop
pop
jmp
inc
push
adc
xchg
fwait
sbb
adc
enter
pop
stos
in
stc
cltd
mov
movsb
and
repz
rorl
cmp
mov
cmp
fisubrs
xchg
mov
loop
push
leave
dec
add
popf
sub
pop
fwait
cmp
repz
movsb
cld
pop
ret
mov
cmp
mov
and
icebp
mov
push
adc
push
sub
popa
pop
test
imul
xchg
xchg
dec
stos
mov
lahf
cwtl
inc
stos
sahf
pop
iret
xor
movsb
or
mov
ror
dec
cmp
or
cmpsb
xchg
scas
test
aam
stos
cmp
jmp
iret
push
cmp
xor
stos
loopne
out
push
mov
loop
stc
outsb
fs
stos
sbb
xor
cmp
sbb
stos
inc
xchg
cld
jmp
sarl
adc
out
mov
cltd
adc
xor
out
int
push
repnz
or
jmp
mov
cmc
mov
xor
ja
xchg
jne
add
mov
das
in
shr
pop
or
xor
mov
xchg
and
iret
lea
movsl
cli
xor
sahf
cmovae
mov
mov
stos
sub
popf
mov
xor
stos
jle
sub
jecxz
fmuls
sub
std
sahf
mov
pop
mov
stos
imul
in
pusha
int3
aas
cmp
pop
pop
or
push
addr16
and
mov
shrb
jp
inc
cmc
iret
loopne
enter
pop
icebp
and
cmp
xchg
jg
adc
lahf
mov
fwait
std
adc
inc
lods
mov
lret
lret
jecxz
cmp
imul
repnz
std
and
insb
inc
stos
les
roll
pop
stos
jns
test
jno
mov
addr16
mov
stos
xor
cmpsb
stc
mov
fisubrs
add
stos
push
sti
insl
push
mov
test
popa
mov
aad
dec
stos
push
insl
rorl
sub
pop
mov
mov
or
pop
sub
cmpsw
mov
in
stos
out
add
sbb
cld
adc
nop
sub
stos
sbb
lods
ret
andl
jno
aad
icebp
fstl
mov
scas
pop
rcrl
stos
cld
rol
xchg
pop
dec
push
stos
mov
inc
data16
imul
cs
mov
fwait
movb
cmc
leave
stos
xor
add
sub
xchg
and
mov
fisttps
mov
inc
jns
lahf
mov
xchg
xor
add
stos
sti
out
int3
movsb
adc
scas
sbb
lock
push
cmp
andl
addl
andb
push
out
xor
adc
enter
out
stos
push
jno
in
stos
mov
inc
mov
cld
push
icebp
or
jo
stc
aaa
xchg
das
je
stos
xchg
shll
mov
sub
adc
mov
or
int3
lock
arpl
push
mov
xchg
xchg
mov
icebp
inc
popf
stos
iret
and
gs
sub
stos
xor
xor
add
mov
or
shrl
jbe
push
test
imul
jns
mov
jle
stos
sbb
cmp
stos
repz
rolb
sub
sti
pop
jge
sbb
stos
mov
lock
aas
lods
shr
dec
fildll
ffree
mov
stos
mov
sub
outsb
insl
js
sahf
jle
mov
movsl
inc
data16
mov
jl
stos
mov
mov
push
inc
xor
aaa
js
fwait
clc
xchg
mov
popf
cwtl
stos
ficoms
icebp
loope
jo
stos
addr16
cmp
shl
mov
fdiv
stos
and
inc
push
xchg
enter
addr16
push
lret
jae
push
stc
adc
pop
adc
in
add
lcall
fsubl
mov
ret
add
push
jno
popf
push
jmp
adc
pusha
jo
inc
hlt
xchg
mov
jmp
test
push
mov
inc
decl
pop
stos
push
jle
adc
jns
pop
add
or
pop
stos
cld
and
stos
sub
mov
push
lret
in
cmp
fs
sub
sbb
aam
or
jns
jb
stos
and
pop
outsb
mov
fildll
mov
inc
jb
pop
fisubl
push
fmulp
call
push
fwait
rolb
test
ds
rcrb
lea
add
push
into
mov
mov
mov
cltd
inc
cmpsb
dec
adc
stos
xor
pop
cmp
shlb
nop
int3
jbe
jb
push
fsts
fcom
adc
out
stos
data16
lods
getsec
mov
dec
ja
leave
pop
rcl
cli
lcall
sti
mov
jmp
mov
stos
repz
cltd
pop
std
imulb
mov
dec
int
mov
sahf
add
xchg
in
lods
arpl
addl
mov
das
dec
mov
mov
icebp
add
daa
stos
sub
arpl
outsl
inc
in
xor
fwait
test
mov
xchg
in
dec
stos
pop
push
cs
push
movsb
outsb
dec
mov
cli
or
lods
push
jge
adc
xchg
pop
aad
stos
or
rcrl
add
addr16
into
aam
pop
stos
or
mov
rcr
dec
pusha
daa
lcall
insb
fwait
mov
stos
pop
xchg
out
add
or
mov
xor
out
fcmovnu
daa
sub
pop
jo
xlat
or
and
shlb
pop
call
fsubrs
fisubrs
jmp
scas
movsl
and
popf
std
pop
pop
xlat
fs
sbb
push
leave
fwait
xlat
and
push
inc
ja,pt
imul
adcl
xchg
adc
adc
pop
das
jmp
arpl
movsb
cmpsl
mov
fwait
push
xor
jbe
subl
mov
cmpsb
xchg
dec
mov
rorl
mov
ret
inc
stos
pop
push
dec
pop
aam
xchg
xlat
stos
fwait
sbb
dec
jge
xor
mov
imul
cmp
roll
push
ret
push
adc
popf
inc
push
pop
push
shr
int
dec
or
sbb
in
imul
mov
stos
out
aad
out
mov
mov
or
adc
jmp
and
push
leave
les
fs
jae
dec
sbb
pop
iret
mov
push
movsb
into
stos
das
mov
mov
and
lea
test
stos
pop
rcl
pop
inc
xlat
es
adc
xchg
and
sbb
push
test
stos
pop
or
sub
stos
or
in
movl
mov
push
sbb
jecxz
xchg
sub
sbbl
arpl
pushf
or
pop
call
fstl
lods
stos
jl
sub
mov
add
stos
mov
test
mov
sub
fwait
imul
adc
adc
sub
sub
pop
pusha
sub
rolb
mov
ljmp
stos
jae
sbb
in
push
stos
rcl
popf
xchg
adc
or
mov
ljmp
sbb
shrb
inc
clc
pop
push
and
cmpsb
cld
bound
add
sbb
mov
fcomps
push
idiv
in
movsl
andl
push
into
jl
pop
xchg
ret
adc
stos
loop
js
xlat
outsb
jb
stos
add
push
cld
mov
outsl
int3
push
xchg
test
lret
negl
xchg
cwtl
pusha
stos
fcomp
add
push
imul
jge
lahf
jge
into
mov
stos
xchg
or
xchg
sub
or
cmp
xchg
cltd
push
outsl
cmp
movsb
xor
mov
xor
cmp
or
xlat
dec
out
stos
xchg
sub
ret
add
jns
jbe
xor
in
insl
pop
test
iret
or
mov
subb
pop
xchg
cmpsl
stos
int3
xchg
xchg
jle
into
daa
pop
and
out
cltd
and
enter
mov
scas
jae
dec
sbb
mov
mov
out
sub
push
xchg
rorl
hlt
arpl
sbb
dec
cmp
cltd
stos
fwait
pop
pop
mov
inc
sbb
adc
jnp
rorb
inc
test
xchg
je
pop
dec
arpl
xor
sub
shrl
jne
lock
arpl
mov
xorb
inc
sub
jl
mov
orl
cmp
and
jmp
sti
aad
stc
xchg
rolb
lret
ja
out
jmp
mov
add
xchg
fisubrs
incb
xchg
test
xchg
cltd
rcr
pop
das
in
int3
imul
xchg
lods
out
mov
or
jnp
inc
mov
jge
jo
mov
lret
bound
jl
cld
cmp
stos
out
and
outsl
iret
mov
mov
hlt
adc
lret
jo
jl
push
stos
mov
aam
stos
xlat
cmc
loopne
jmp
stos
sti
or
mov
dec
ficompl
add
push
out
add
jno
scas
adc
push
dec
iret
stos
sbb
inc
jg
je
stos
add
ja
lds
dec
stos
and
fcoml
ljmp
cld
stos
fcmovnu
lds
pop
xor
imul
aaa
mov
imulb
pop
int3
jb
stos
pop
mov
fstp
stos
jge
sub
jns
stos
lret
inc
loop
pop
xor
das
stos
jecxz
and
stc
cmp
sarb
xchg
icebp
stos
and
mov
stos
sub
xchg
cld
stos
movb
enter
std
push
loop
mov
inc
add
sbb
or
movsb
stos
in
sbb
stos
in
push
xchg
push
js
and
jae
stos
arpl
inc
xchg
nop
push
push
jmp
lretw
mov
inc
test
mov
adc
lods
jg
jb
pop
sub
or
stos
imul
sbb
fldcw
roll
push
stos
mov
pop
or
dec
mov
aaa
sub
xlat
test
sbb
stos
fistps
lcall
das
xor
adc
push
and
mov
inc
cmp
aas
cmp
bound
es
mov
stos
mov
lret
push
xchg
sbb
jg
fsubs
cltd
lds
aam
int
and
xchg
lret
mov
sbb
imulb
sti
adc
test
gs
push
mov
das
mov
cmp
out
lods
addb
mov
dec
dec
jnp
sub
inc
jbe
dec
mov
xchg
push
pusha
lahf
jge
add
loopne
inc
mov
push
sti
add
add
stos
xchg
not
sub
push
cwtl
repnz
stos
cmc
jmp
sub
sbb
add
lods
cld
out
scas
adc
dec
stos
popa
leave
cmp
out
ret
js
jbe
inc
shll
jo
mov
stos
mov
push
lods
int
in
xor
mov
mov
lahf
push
in
data16
dec
int3
push
sub
sbb
jnp
sbb
stos
jle
or
lods
in
aaa
stos
adcb
pop
and
sbb
and
jns
mov
stos
dec
rcr
mov
dec
fildll
sbb
xor
call
stos
jl
lcall
push
lret
xchg
aam
adc
cmp
roll
jae
or
in
loopne
dec
daa
cmp
fs
ljmp
sbb
test
and
cmpsl
inc
jmp
mov
mov
xor
adc
sub
jmp
push
sub
stos
adc
leave
and
stos
cwtl
xchg
mov
jo
jb
movsl
negl
xchg
push
mov
scas
fiadds
nop
sbb
xchg
int3
lea
pop
stos
jne
popa
push
jns
popf
xor
in
stos
rorl
out
or
icebp
daa
std
pop
lods
xchg
fwait
mov
xchg
lods
inc
arpl
pop
add
mov
inc
push
mov
cmp
mov
daa
es
ljmp
push
stos
mov
out
pop
cmc
dec
inc
nop
mov
mov
sub
je
push
pop
lret
jb
lock
add
sub
stos
dec
xor
dec
push
sub
cmp
lods
stos
pop
xor
xchg
jno
daa
rolb
lret
dec
cltd
push
mov
xor
lock
dec
fildll
out
scas
and
in
adc
cwtl
mov
inc
int3
lea
ljmp
repnz
or
icebp
lahf
add
imull
imul
pop
aaa
inc
inc
push
pop
stos
repz
call
test
nop
push
movsl
jp
lahf
mov
push
add
jp
push
sub
imul
pop
mov
stos
lcall
movaps
sarb
cs
divb
add
pop
mov
jl
push
into
aam
mov
xchg
data16
stos
jns
add
lods
imul
or
fistps
push
xchg
mov
stos
xor
or
cmp
clc
jmp
mov
sub
out
int3
or
lcall
shr
push
jne
stos
jmp
in
add
lock
dec
xchg
fwait
lock
fwait
nop
jbe
fadd
call
and
stos
notl
clc
les
push
pusha
lahf
stos
std
ss
scas
and
jno
popa
fwait
pop
lods
mov
xchg
in
cmp
fsubrl
stos
ret
jl
mov
stos
and
pusha
mov
xchg
cmp
cmpsb
sub
adcb
leave
daa
mov
or
mov
and
stos
fisubrs
sub
or
mov
dec
mov
icebp
stos
test
pop
fnstsw
lcall
push
push
aaa
stos
dec
mov
data16
jl
into
add
pushf
mov
int3
mov
rorl
cltd
mov
imul
sbb
das
stos
add
lahf
fisubl
in
push
add
and
pop
mov
es
adc
pop
pop
stos
lcall
cli
sub
mov
dec
rep
mov
push
insb
js
xchg
adc
sub
hlt
mov
mov
out
shrb
xor
out
jb
jns
mov
or
iret
sahf
xor
jnp
adc
mov
inc
aad
jmp
fldl
jnp
out
sub
stos
inc
in
loop
xchg
testb
pop
sbbb
ja
sub
or
jecxz
sub
punpckhdq
add
divl
inc
dec
insb
test
out
jle
xor
sub
bound
fists
mov
jle
sub
jp
ljmp
xor
insb
mov
les
stos
inc
rcll
and
out
inc
or
das
ljmp
lods
popf
mov
sbb
mov
aas
stos
ds
jnp
adc
xchg
or
jl
fsubr
mov
xchg
add
dec
ja
pop
pop
adc
dec
in
jbe
stos
mov
rolb
movsb
movsl
adc
jmp
insb
and
mull
ss
jecxz
out
arpl
stos
xorl
sbb
jae
cli
jne
aas
enter
or
aam
xchg
and
mov
sub
and
fwait
insb
push
cltd
push
sub
cmp
mov
fdivrp
cmc
jg
rep
div
pop
add
xlat
mov
or
je
unpckhps
stos
xchg
sub
push
mov
stos
sub
arpl
stos
into
out
or
lret
outsb
adc
jmp
and
mov
iret
in
mov
stos
mov
cmpsl
into
add
adc
stos
and
dec
xchg
xchg
stos
xor
mov
mov
or
stos
sbb
push
mov
sti
into
jecxz
stos
and
ljmp
and
cli
aas
lock
imul
lahf
push
xor
mov
xchg
lea
test
xchg
rorl
sub
push
fmull
cmp
sbb
adc
shl
das
xor
movsb
cmpsb
int
in
cmp
mov
stos
mulb
cltd
xchg
dec
addl
xor
sbb
out
jo
in
addr16
and
jno
lret
inc
mov
jp
stos
push
mov
jb
sub
sahf
and
out
testb
sub
cltd
or
daa
xchg
sbb
mov
mov
inc
mov
stos
je
pop
push
stos
push
rclb
and
stos
mov
add
add
and
fwait
xchg
push
jp
jb
gs
adc
stos
xorb
aam
movsb
xchg
leave
stos
or
dec
pop
and
inc
addr16
sub
daa
or
add
repz
testl
imul
mov
jb
pop
or
mov
dec
stos
xor
ss
add
stos
inc
dec
sbbb
outsl
lret
push
mov
push
imul
inc
push
repnz
mov
xor
or
pop
push
les
mov
outsl
sar
stos
cmp
lods
mov
stos
das
or
into
daa
xchg
mov
jecxz
mov
mov
in
iret
mov
ja
inc
stos
adc
or
mov
cmpsb
xor
rolb
stos
lods
dec
mov
dec
lcall
push
mov
repz
cltd
mov
jecxz
fisubs
test
adc
jle
loope
sbb
mov
xchg
jns
stos
fidivrl
frstor
lahf
mov
fwait
fwait
inc
shll
and
stos
lods
nop
aas
mov
out
scas
or
xchg
movl
xchg
cltd
je
stos
jns
insb
repz
lret
push
mov
or
pop
pop
stos
mov
fcmovbe
stos
xchg
insb
adc
stos
bound
sbb
jmp
mov
les
jmp
je
jg
pop
and
addr16
cmp
push
cvtps2pd
repnz
cli
in
outsl
mov
mov
fcoml
cld
stos
sbb
mov
pop
mov
pop
sub
mov
pop
inc
push
pop
lods
sub
in
enter
stc
insb
mov
iret
movsb
lret
mov
out
fistpll
cmp
nop
mov
jno
and
mov
fstpt
dec
decl
jmp
imul
mov
js
popf
aam
xchg
test
adc
arpl
lahf
sbb
add
out
sub
mov
movsb
jge
loopne
xor
xor
shrb
test
stos
add
push
inc
fldcw
es
or
lret
jl
xchg
daa
jbe
stos
fistl
popf
imul
adc
fwait
push
ljmp
adc
sbb
or
mov
mov
sbb
movsl
add
dec
stos
inc
push
scas
and
add
stos
inc
adc
push
sub
inc
jmp
xchg
or
jbe
int
imul
je
stos
popa
insb
inc
mov
stos
mov
jno
fldl
and
andb
repz
roll
mov
lods
and
mov
push
repz
mov
subl
stos
ds
cld
sbb
cmp
lods
mov
clc
push
repz
and
mulps
nop
add
or
test
stos
jge
jecxz
loope
dec
in
cmp
or
cmp
xchg
sbb
sub
das
push
stc
jl
mov
repnz
lret
ljmp
test
sbb
bound
scas
mov
stos
cli
and
mov
clc
lds
mov
enter
cmc
jecxz
mov
stos
jnp
mov
jb
popf
xchg
pop
data16
js
push
stos
loope
jbe
xchg
inc
lock
in
mov
push
repnz
ja
or
scas
orb
imul
push
cltd
cs
push
mov
sub
and
stos
lcall
add
adc
sub
pushf
dec
jo
rorl
std
ret
cs
outsb
fmull
stos
xor
cmpsb
mov
mov
jmp
mov
mov
lods
imulb
loope
xlat
xchg
sbb
and
dec
mov
jns
inc
mov
test
dec
movsb
fbld
mov
lret
dec
fcoml
jns
in
mov
push
call
mov
cld
adc
dec
inc
gs
cltd
iret
dec
xor
mov
jp
clc
subb
inc
sahf
stos
outsl
xchg
jo
pop
faddl
sbb
movsl
push
add
mov
add
pop
icebp
jns
sbb
stos
adcb
or
jmp
sbb
xchg
lcall
push
or
push
shrb
push
mov
or
stos
insl
dec
adc
loopne
xor
sub
inc
pop
or
jns
sbb
pop
stos
add
xchg
outsb
lret
mov
lea
xor
aad
rcr
sbb
lcall
in
stos
jmp
add
cmp
xor
dec
adcl
test
aam
push
test
xlat
loopne
into
stos
pop
imul
jle
movups
stos
or
scas
xchg
hlt
sti
mov
jne
mov
xchg
iret
push
jnp
pop
cmpsb
imul
stos
lcall
cmp
dec
out
fwait
push
xor
lret
mov
stos
out
xchg
adc
std
in
lds
data16
cmp
repnz
adc
cmp
add
dec
mov
mov
orl
outsl
sub
stos
gs
mov
daa
lret
pop
push
adc
mull
and
inc
sub
stos
jae
xchg
cwtl
and
add
xchg
iret
or
dec
adc
mov
sti
es
xor
shr
outsl
sbb
mov
jmp
sub
std
dec
shrb
mov
xchg
mov
pop
out
xchg
push
xor
mov
icebp
sbb
stos
push
dec
inc
cmp
cltd
jmp
repnz
daa
fs
xor
xor
mov
fldt
dec
and
in
subl
ljmp
pop
or
lods
adc
sar
ljmp
popl
loope
lods
sub
in
mov
enter
xchg
stos
inc
sub
push
add
adc
pop
stos
sti
addb
or
mov
xchg
jmp
aas
lods
stos
ja
cltd
push
hlt
cmpsb
pushf
mov
into
outsl
or
sub
stos
sbb
mov
ret
rolb
stos
sub
into
scas
mov
xchg
clc
sub
sub
les
push
xchg
sub
mov
imull
ret
inc
mov
hlt
push
stos
xor
push
jle
std
in
cmp
sbb
adc
stos
cs
fimull
jl
insb
xchg
leave
and
js
stos
fldl
sbb
mov
sub
shll
jnp
mov
push
push
inc
negb
jp
movsb
push
jbe
sti
push
dec
mov
xor
adc
and
push
dec
stos
out
jno
mov
cli
mov
stos
flds
ljmp
fistps
cs
bound
aam
lods
mov
xchg
dec
shrb
arpl
lret
pop
mov
dec
xchg
cvttps2pi
stos
testl
sbb
lods
add
add
mov
scas
hlt
sbb
mov
inc
imul
dec
sbb
mov
pop
mov
stos
icebp
movsl
jb
negb
sahf
arpl
shlb
int
loop
ja
jne
ret
sbb
inc
xlat
pop
stos
iret
sub
imull
js
add
jae
cmp
cmp
cld
mov
in
adc
fildl
leave
push
rcrb
in
jne
add
stos
add
pop
or
stos
mov
xchg
fiadds
out
inc
mov
sbb
jg
mov
pop
mov
dec
jp
lock
lret
dec
js
sub
ss
jmp
add
cmp
data16
xor
mov
inc
stos
jg
xchg
push
sarl
cld
jle
mov
fcoms
pop
and
ret
mov
cmpsl
or
jle
in
cmp
mov
inc
int3
stos
std
dec
pop
jo
andb
dec
mov
cltd
jno
scas
and
daa
int3
mov
dec
sbb
mov
ljmp
xchg
outsl
ja
stc
stos
pop
stos
test
addl
add
out
repnz
in
inc
jecxz
std
mov
jae
mov
lahf
mov
stc
jb
lds
push
push
xchg
xchg
je
mov
add
fistpll
enter
insl
cmpsl
adc
pop
add
sub
aam
daa
adcl
sbb
sbb
push
stos
xor
aaa
xlat
movsb
push
cmp
jae
inc
js
mov
cli
out
pop
push
ret
aas
adc
sub
out
and
pusha
mov
fisttpll
sub
mov
in
adc
mov
inc
cmp
dec
dec
sbb
addl
aas
stos
pop
sti
in
push
fiadds
loop
stos
mov
aam
and
cld
aaa
mov
push
stos
ret
call
popf
imul
pop
or
jno
fwait
or
addr16
pop
enter
sbb
dec
stos
adc
pop
cmpsb
add
pop
addr16
mov
add
cmpsl
ljmp
pusha
jg
sub
dec
insb
and
add
cmp
mov
or
divb
popfw
push
jl
xchg
jecxz
popa
insl
stos
in
bound
pusha
add
stos
pop
xor
push
xchg
push
test
add
sti
lds
mov
movsb
mov
stos
outsl
popf
bound
loope
sahf
into
ds
or
xor
repnz
jg
movsb
push
ret
add
iret
xchg
jo
jle
icebp
or
or
lea
gs
mov
les
mov
push
in
rorb
sbb
push
or
rorl
ret
xor
pop
push
js
lret
movsb
pop
into
jle
pop
mov
pushf
or
xchg
cmp
test
scas
cwtl
pop
or
mov
push
out
jg
sub
repz
xchg
xor
sbb
cmp
xchg
push
pop
ja
add
dec
das
xchg
cli
stos
ss
inc
shr
bound
jg
addr16
stos
add
ljmp
leave
or
mov
stos
inc
lock
fadds
adc
cmp
push
stos
rcrb
xchg
or
imul
shll
lahf
call
lds
bound
or
cmp
into
adc
imul
cmpsl
mov
mov
adc
sbb
jbe
stc
into
jmp
sbb
in
es
mov
push
cli
cmp
pop
xor
push
mov
shrb
inc
repz
imul
mov
js
stos
add
pop
push
or
mov
negl
add
sub
xor
lahf
fdivrl
lods
push
cmc
or
mov
or
mov
and
stos
jg
and
cmc
adc
aas
lret
adc
push
fnstcw
ja
mov
stc
jne
mov
stos
sbb
cmpsb
sbb
xorb
push
pushf
scas
int3
sahf
stos
cld
scas
pop
subl
pop
mov
imul
leave
dec
jp
add
out
stos
pop
adc
jb
jmp
in
mov
xchg
sbb
mov
adc
fistpl
daa
cmp
jge
sbb
fsubs
pusha
dec
cmp
mov
stos
adc
es
add
push
aas
xor
sti
push
repnz
pusha
mov
jbe
xor
push
inc
mov
ret
adc
stos
lea
push
dec
adc
stos
ret
cmp
lods
xor
mov
mov
push
dec
inc
push
pop
lahf
push
mov
js
jns
cmp
mov
push
out
enter
lret
loop
iret
push
or
jbe
popf
rcll
mov
lds
inc
lret
adc
xchg
add
loope
xchg
inc
push
repz
ja
xor
fisubrs
pop
or
mov
pop
stos
pop
and
pushf
unpcklps
cmpsb
mov
rcll
jg
xor
cmp
mov
mov
stos
inc
inc
push
sub
ljmp
out
stos
sub
icebp
xchg
enter
sub
and
mov
mov
aad
stos
insl
mov
test
stos
pushl
push
sbb
pop
ret
adc
mov
dec
mov
lcall
orb
outsb
daa
in
rep
imul
stc
xchg
inc
mov
fadd
sub
outsl
notl
shrl
test
push
aam
mov
cmc
mov
rol
clc
inc
cmp
push
lret
sahf
push
inc
or
mov
scas
dec
cli
subl
adc
js
push
pop
adc
sub
test
cltd
dec
lret
iret
sbb
dec
std
or
das
fimull
iret
mov
mov
dec
test
adc
stos
mulb
jo
inc
xchg
test
clc
push
xlat
das
mov
cmp
add
aaa
shr
sub
dec
xor
rorl
push
inc
sub
xchg
inc
test
pop
xor
sub
stos
loop
xor
mov
js
stos
imul
mov
stos
sub
push
jnp
or
les
adc
and
cli
xchg
cmpsb
sbb
jecxz
imul
push
jl
daa
xor
sub
jp
add
imul
dec
jmp
sahf
mov
xchg
stos
aas
or
fcomp
lods
js
stos
adc
xlat
inc
jg
jnp
or
mov
pop
push
xchg
lds
subb
data16
pop
stos
push
loopne
mov
loop
popa
adc
push
mov
pop
jne
daa
and
xchg
jnp
scas
sub
mov
jne
pop
fwait
cwtl
mov
stos
lcall
lds
jbe
clc
stos
test
lods
cmp
and
and
adc
mov
adc
and
stos
dec
enter
adc
sbb
mov
testb
lahf
mov
stos
into
mov
hlt
jnp
das
sub
adc
adc
dec
cmpsl
lahf
adc
aas
jae
mov
sbb
xchg
inc
out
popf
mov
stos
fwait
aam
out
mov
ljmp
das
sub
inc
stos
jb
sbb
stos
mov
dec
or
dec
dec
out
jmp
lret
aaa
or
or
and
cltd
mov
stos
stc
push
xor
dec
adc
rorl
fnstsw
fwait
rclb
stos
pushl
pop
sbb
les
stos
mov
pusha
sub
arpl
mov
scas
lods
mov
mov
jmp
inc
aas
stos
sub
popa
data16
in
pop
mov
jp
mov
mov
or
mov
mov
scas
stos
mull
arpl
cli
xor
and
mov
sbb
jne
repz
xchg
adc
stos
mov
sub
stos
mov
cld
dec
push
lock
adc
stos
sub
mov
jp
pop
dec
dec
mov
cmp
in
cli
mov
aaa
push
movsb
xchg
dec
push
mov
mov
or
jp
loope
stos
mov
and
ret
cmp
push
stos
adc
mov
ja
lea
popw
xchg
cs
stos
out
aaa
test
xor
sub
mull
dec
in
push
imul
out
subb
jmp
cmc
mov
push
inc
cmp
into
stos
push
cmp
adc
scas
shrb
fiadds
icebp
stos
jecxz
lret
adc
test
pop
mov
aam
push
xor
fimull
aad
subl
leave
es
cltd
push
or
in
adc
xor
arpl
push
pusha
pop
jle
sti
daa
sub
mov
hlt
stos
and
or
inc
movsb
lds
daa
inc
dec
mov
stos
in
jns
sahf
push
cli
addr16
iret
and
jmp
dec
stos
push
cmpsb
gs
aam
addr16
and
arpl
cmp
int
xchg
or
push
stos
test
push
gs
push
cs
mov
stos
pop
int
cmc
daa
mov
lods
stos
xor
xchg
data16
sbbb
arpl
jmp
out
enter
stos
inc
lahf
nop
sbb
ds
test
popf
jno
pop
add
jns
mov
jp
fildl
lds
dec
call
xlat
cmp
sbb
xor
push
sub
imul
mov
in
shlb
dec
scas
aam
sub
leave
stos
and
push
movsl
inc
xchg
imull
cmp
or
adc
sbb
lret
stos
ret
iret
push
nop
dec
push
stos
sub
mov
xor
stos
mov
pop
call
imul
bound
movsl
and
xor
push
mov
jl
dec
dec
mov
jecxz
stos
ljmp
push
stos
mov
jno
es
mov
lods
flds
xchg
xor
dec
xchg
scas
test
jbe
sbb
or
pop
int3
stos
jne
and
push
jmp
xor
xchg
imul
mov
subl
stos
stos
cmp
dec
push
jno
jns
and
mov
mov
mov
test
mov
arpl
rcrb
ret
and
lcall
mov
icebp
inc
outsb
stos
ror
xchg
stc
outsl
pop
xorb
sub
subb
pop
pop
aas
cltd
cmp
cld
stos
mov
ret
leave
pusha
daa
pushw
inc
ret
mov
and
gs
cmpsb
dec
out
clc
imul
int3
fidivs
arpl
in
jns
icebp
cli
sub
and
pushf
mov
or
ror
stos
imul
mov
mov
daa
mov
stos
jbe
pop
add
stos
sbb
xchg
cmovne
in
rcrl
xor
aad
mov
dec
cmp
int
mov
mov
jge
xchg
xchg
sarb
xor
cmp
xchg
fsubl
stos
lock
insb
push
pop
iret
stos
or
or
mov
mov
mov
cli
stos
jle
cld
test
cmp
stos
xlat
push
out
xor
cmp
xchg
out
adc
popf
stos
or
sub
aam
test
inc
mov
jecxz
cmp
mov
and
cmp
push
cs
pop
and
fnstenv
push
sahf
stos
add
addr16
fbld
sub
mov
test
outsb
push
mov
testb
mov
fs
out
int3
push
pushf
imul
sbb
jp
mov
push
jmp
dec
ficoms
cmc
into
xchg
inc
mov
pushf
in
fwait
in
cli
stos
adc
loope
js
xchg
jb
out
mov
mov
xchg
stos
jp
shrb
adc
pop
stos
out
pop
dec
or
cmp
mov
cld
push
lret
sbb
mov
movsl
cmp
mov
sbb
bnd
frstor
mov
dec
adc
clc
xchg
outsb
jmp
push
stos
lret
shlb
stos
push
sahf
mov
or
mov
fidivrs
stos
ret
int3
dec
xchg
insl
mov
or
mov
mov
stos
out
and
sahf
mov
pop
sub
or
jmp
and
inc
ljmp
push
bound
and
stos
mov
stc
push
call
xor
mov
adc
and
xor
enter
ja
or
sub
loop
mov
movsb
adc
or
gs
jecxz
jp
andl
int3
inc
cmp
stos
xor
mov
sbb
test
sub
mov
stos
pop
je
adc
mov
stos
add
add
cmpsl
pop
js
or
pop
ljmp
pusha
imul
inc
mov
stos
mov
mov
cmp
shrl
jb
jo
sar
push
sub
lahf
or
lods
enter
imul
ficompl
mov
test
bound
xchg
push
movsb
push
stos
push
pop
mov
ret
test
imul
data16
out
xchg
jmp
sub
mov
xchg
stos
enter
pop
test
call
xor
mov
xor
add
and
push
jo
pusha
mov
inc
stos
daa
call
adc
push
mov
adc
xor
sub
inc
pushf
push
or
sbb
stos
in
cmp
loopne
xor
lahf
jmp
out
in
lret
arpl
dec
cmp
insl
iret
sbb
add
push
stos
push
test
movsb
std
pop
stos
mov
mov
out
xor
in
add
mov
gs
popl
hlt
popa
lock
push
fsubs
dec
divl
fldt
pop
ret
popf
xchg
ljmp
fisttps
scas
lret
call
push
and
decb
jg
dec
push
fsubrl
mov
icebp
fisttps
arpl
int
stos
jbe
idivb
push
add
loope
cld
in
call
xchg
stos
lods
js
loop
pusha
push
cmp
mov
in
push
mov
std
sahf
subl
xlat
je
mov
popa
stc
aad
shll
insl
mov
stos
shrb
sub
addr16
xchg
mov
stos
and
mov
mov
jg
sub
jge
cmp
sub
aas
cmp
jle
subb
adc
dec
mov
orb
or
jno
xadd
mov
push
sahf
mov
fwait
add
push
ret
pop
push
xchg
imull
xchg
sub
or
mov
cli
cmp
and
lods
int3
stos
popa
hlt
movsl
xor
jge
ljmp
jmp
scas
xchg
repz
xor
xchg
push
xchg
sbb
dec
lock
mov
stos
or
cmp
in
mov
and
or
stos
notl
pushf
fisubrl
test
cwtl
insl
cld
cmp
mov
jmp
and
lock
mov
mov
xchg
gs
mov
and
jae
cmp
dec
in
lods
ljmp
or
and
lods
pop
stos
orb
pop
fildll
repnz
imul
add
std
push
cmpsb
jmp
or
push
lahf
mull
lods
out
mov
daa
mov
push
stos
shrb
jo
mov
adc
stos
in
adc
pop
mov
add
adc
and
push
lock
mov
cmpsb
pop
push
lcall
jo
jl
and
pusha
xchg
xchg
stos
jne
xor
in
lret
idivb
not
out
add
fstpl
push
sbb
imul
jmp
out
jg
dec
fcom
cmp
inc
movsl
stos
scas
pop
mov
aaa
mov
jno
sbb
in
push
or
stos
movsl
cmpb
and
push
loope
shrb
dec
dec
fsts
jno
mov
stos
scas
inc
push
mov
stos
decl
adc
mov
es
sub
loope
sbb
repz
cltd
iret
imul
xchg
aam
stos
outsl
lods
loop
data16
mov
stos
mov
iret
les
mov
jecxz
jne
lret
cld
inc
orl
js
shll
fwait
lea
xchg
cmpl
pop
cmpsb
mov
inc
sahf
or
stos
scas
and
xor
lock
mov
js
xor
push
pop
stc
jg
stos
add
repnz
pop
push
iret
cmp
mov
aaa
push
flds
cwtl
mov
add
daa
popf
aas
idivl
and
mov
nopl
in
test
loopne
ret
stos
into
pop
inc
call
fimuls
adc
or
stc
push
xchg
jbe
out
faddl
push
mov
out
push
fwait
or
sti
adc
shl
scas
and
mov
jnp
sbbl
aas
sub
xchg
push
cmc
call
jns
adc
sub
xchg
pushf
pop
jae
stos
aaa
push
adc
loopne
ss
pop
jmp
mov
loope
hlt
das
and
jg
imul
pop
mov
xchg
sbb
fnstenv
lea
stos
dec
push
aam
daa
pop
stos
in
and
pop
mov
int3
pushf
jae
subl
add
xchg
dec
inc
stos
int
sarb
stos
ret
out
xor
fxch
dec
stos
pop
loopne
std
pusha
aas
fs
cltd
xchg
xchg
inc
and
imul
mov
dec
cmp
sbb
fcoms
sub
mov
shr
loopew
stos
orb
shlb
stos
push
xor
push
stos
xor
int3
or
stos
std
mov
out
lods
stos
jg
dec
fcoms
add
imul
mov
push
cmp
xchg
adc
rorl
jp
test
push
xchg
sbb
test
mov
into
dec
and
stos
lods
stos
sti
xchg
scas
in
mov
adc
pop
fidivrs
out
pop
mov
in
call
inc
adc
stos
sbbl
and
jbe
inc
and
mov
adc
push
scas
dec
rolb
jmp
mov
js
cmpsb
inc
xchg
lods
ret
imul
pop
mov
sahf
stos
and
mov
repnz
imul
sbb
cmp
push
mov
push
pop
lods
call
push
jno
jl
popf
pop
stos
cli
sti
negl
daa
jge
mov
add
xor
imul
add
jmp
inc
cmp
jbe
xchg
mov
stos
shlb
inc
mov
repz
clc
push
insl
xchg
mov
popf
and
cmp
arpl
push
sub
lods
clc
or
adc
add
fisttpl
stos
xor
and
sub
stc
leave
xchg
lcall
xor
push
dec
mov
fisubrl
jo
mov
stos
scas
lret
insl
psrlq
stos
clc
or
inc
push
daa
mov
mov
or
sub
jp
xchg
test
frstor
mov
stos
in
outsb
sbb
fcmove
adc
lods
adc
mov
jae
jmp
sub
xchg
mov
mov
jo
out
inc
sahf
sbb
sbb
jb
fsub
xchg
scas
xchg
fmulp
sti
push
movsb
loop
mov
shrb
call
sub
jb
xchg
stos
rolb
jp
jmp
loopne
dec
push
std
je
push
sub
mov
xor
mov
movsb
repnz
aam
mov
insb
inc
mov
push
stos
pop
sbb
or
test
push
stos
aam
cmp
xchg
sbb
stos
jl
cwtl
push
stos
test
jne
mov
fisubrl
ret
cli
stos
cmc
lret
leave
xor
push
xchg
and
dec
sub
pop
stos
sbb
lods
ss
je
addr16
es
or
mov
iret
mov
rorb
fidivl
mov
pop
sub
xor
out
dec
push
xlat
nop
jo
stos
out
das
xor
mov
hlt
push
mov
ja
add
data16
jmp
cld
adc
xchg
mov
or
mov
insl
outsb
mov
fdivrl
push
js
stos
nop
sub
stos
aad
dec
or
test
add
repz
push
mov
addr16
rcrb
and
lahf
loop
sahf
aaa
stos
sbb
or
mov
jge
in
aam
mov
gs
sarb
cli
sbb
lahf
xchg
in
fwait
pusha
mov
fdivrs
stos
mov
rcrl
mov
nop
and
stos
xor
adc
mov
cwtl
cld
jmp
stos
lods
ljmp
stos
hlt
xchg
mov
sbb
daa
mov
lcall
lods
adc
jnp
arpl
jb
adc
pop
adc
push
and
ja
stos
xchg
mov
fs
sbb
movsl
xchg
jns
stos
out
pop
cld
xchg
xchg
fisubrl
sbb
out
outsb
add
dec
push
and
shrb
addr16
dec
roll
add
adc
add
mov
movsb
insb
js
and
ret
jnp
mov
push
jmp
cmp
lcall
stos
cmp
pop
insb
push
or
pushf
pop
loopne
sbb
fwait
xor
jno
fbld
push
inc
dec
stos
std
fstps
pop
test
adc
cmp
adc
les
pop
jecxz
xchg
stos
xor
adc
cli
mov
pop
inc
das
xchg
shrl
or
dec
jecxz
mov
das
js
daa
fists
mov
sahf
lret
sub
cli
and
jbe
rol
cltd
pop
mov
xchg
push
loope
iret
push
xchg
fs
stos
mov
rorl
stos
xor
mov
ja
enter
pop
dec
stos
mov
or
cmpl
jno
pop
mov
xchg
push
imul
xchg
insb
imul
cmpl
nop
sub
mov
and
jae
outsb
add
mov
push
jno
or
test
pop
add
gs
stos
adc
shll
sub
es
sub
movl
je
addr16
ja
stos
subl
cmc
mov
mov
nop
stos
xchg
and
add
mov
sub
dec
ljmp
shll
in
adc
in
mov
arpl
jg
mov
mov
repnz
pop
shlb
les
stos
fistl
adc
add
jbe,pn
rep
adc
sbb
daa
mov
inc
mov
pop
mov
cwtl
ljmp
or
jp
gs
adc
cmc
or
pop
ja
lcall
fwait
test
mov
inc
push
push
fwait
push
outsl
hlt
add
insl
jae
jge
popf
cmp
je
xchg
mov
outsb
int3
mov
sbb
xor
and
or
mov
aas
lret
outsl
and
addr16
cmc
xchg
stos
xor
rorb
call
addr16
enter
iret
lods
mov
sbb
jmp
in
jo
sub
daa
xor
ljmp
push
test
cmp
lea
rorl
ret
pusha
data16
nop
jno
stos
add
mov
push
arpl
stos
pop
mov
aas
scas
addr16
cmp
fwait
mov
pushf
sub
xchg
mov
xchg
mov
loope
dec
push
sbb
xchg
sub
inc
or
cmp
fcoml
cltd
stos
cmp
mov
stos
mov
mov
jmp
mov
jno
inc
mov
stos
shrl
stos
xor
mov
dec
jns
xchg
lds
mov
insb
push
inc
iret
leave
stos
cmc
jmp
insl
adc
out
and
test
fwait
push
sbb
dec
lods
cli
imul
push
jp
push
test
arpl
ds
lcall
add
je
pusha
mov
pop
jle
adc
xchg
stos
es
jae
in
stos
stos
inc
push
mov
dec
stos
addr16
stc
test
xchg
gs
mov
mov
notb
and
hlt
pop
rcll
mov
xor
out
mov
mov
inc
movsl
mov
mov
cmp
inc
lds
jle
pop
icebp
cmc
cmp
and
mov
inc
movsb
addr16
stos
shll
aas
loope
xor
stos
fs
mov
leave
imul
std
sub
fildll
jne
sahf
xchg
ss
ret
ds
lahf
daa
push
rcll
mov
or
mov
push
pop
stos
mov
jg
rcrb
aas
or
dec
mov
sbbl
imul
pusha
xor
insb
jmp
push
xor
mov
fwait
bound
jl
dec
mov
sub
stos
shll
mov
sub
movsl
mov
std
std
inc
cmp
mov
test
xacquire
adc
cmp
sub
movsl
sub
js
sbb
je
popa
repnz
pop
aad
shll
mov
pop
jp
and
add
add
and
sbb
lcall
add
out
sub
push
pop
adc
push
stos
mov
push
dec
insb
or
clc
pop
jge
mov
hlt
jle
scas
arpl
imul
clc
into
dec
pusha
stos
loopne
scas
cmpsb
cmc
dec
mov
dec
pop
mov
pop
stos
cltd
fxch
push
std
in
or
push
xor
stos
cmpb
xchg
pop
mov
ret
mov
stos
fists
jno
repz
arpl
lcall
aaa
mov
dec
test
cmp
data16
daa
cli
inc
stos
stos
aad
push
adc
loope
stos
pusha
fistpl
and
sbb
cmp
mov
addr16
push
stos
xchg
mov
jo
es
pop
jnp
cwtl
cmp
push
pop
mov
xlat
lea
push
cs
nop
inc
xchg
push
jmp
cmpsb
scas
out
mov
push
stos
iret
jp
popl
adc
int3
add
das
shrb
pop
pusha
insl
dec
popf
or
stos
mov
iret
outsl
or
xor
popf
xchg
add
test
mov
subl
ss
add
jae
cmp
mov
dec
icebp
stc
ds
sbb
idivb
scas
scas
shrb
mov
js
lock
cmp
scas
es
inc
das
in
add
mov
leave
pop
xchg
test
bound
ljmp
jns
or
stos
iret
fnstcw
mov
and
mov
es
or
cli
test
push
adc
ds
lods
out
scas
or
shrb
jo
pop
add
rol
daa
mov
jmp
lcall
ret
rcrb
xor
sub
dec
fisubs
ret
inc
test
int
in
daa
sub
lcall
stos
js
popf
jecxz
pop
dec
stos
pushf
sti
bound
jns
out
dec
stos
xlat
shrl
cmp
mov
dec
mov
fmull
les
movsb
out
xor
pop
lock
stos
sub
sub
aas
stos
imul
aaa
add
dec
inc
cmp
lods
dec
test
stos
pop
cs
push
stos
mov
fdivl
lods
imul
popf
mov
xchg
jo
cmc
mov
jno
mov
dec
stos
and
imul
sub
lcall
stos
cmpsb
and
scas
sub
push
rcrl
test
cltd
add
fistpll
push
mov
addl
or
in
divb
cltd
xchg
movsb
fnclex
in
pop
jl
push
es
fidivrl
xlat
stos
fnstcw
pop
mov
sub
aas
dec
fidivs
lcall
subb
xchg
sti
ss
xor
aam
ja
outsl
mov
insl
add
sbb
dec
mov
pop
stos
add
cwtl
add
xchg
jle
outsb
stos
jl
push
inc
notl
mov
cli
mov
daa
or
mov
shll
popf
in
push
jno
inc
stos
cmp
aad
dec
out
movsl
xchg
and
jge
mov
call
mov
xchg
stos
push
xor
loopne
stos
inc
mov
daa
sarl
fimull
aaa
adc
jb
mov
sbbb
roll
dec
loopne
ljmp
ljmp
stos
and
out
in
nop
test
or
pop
cli
push
stos
adc
aas
mov
ja
cmp
call
test
bound
les
lds
aaa
pop
fwait
stos
in
push
sahf
into
addr16
jne
bound
mov
insl
inc
stos
sbb
dec
sahf
insb
into
lea
pop
adc
dec
rcrl
mov
ljmp
subb
lods
add
sub
int
mov
stc
stos
push
aam
xchg
andb
inc
stos
jbe
movsl
and
sub
ljmp
jle
adc
adc
stos
mov
cmp
and
aam
test
adc
mov
stos
out
ljmp
mov
cmc
jae
dec
lcall
pop
sbb
lea
add
xlat
lahf
jnp
sbb
jp
mov
scas
stos
mov
adc
ror
ljmp
shlb
xchg
sub
push
jecxz
jmp
popf
lds
test
xchg
dec
jl
pop
stos
mov
lcall
jle
mov
fsubp
ret
mov
out
adc
xchg
lret
mov
push
stos
cld
movsb
sbbl
jmp
ljmp
pushf
and
lods
sub
in
dec
cld
add
movsl
lcall
mov
mov
test
mov
ret
lret
or
push
pop
inc
arpl
xchg
pop
pop
or
out
hlt
iret
imul
stos
mov
out
int3
notb
or
lret
aad
fdivrs
push
push
jbe
in
enter
dec
pop
pusha
mov
push
stos
push
xchg
cmp
stos
fwait
int
adc
xchg
cmp
mov
push
aam
daa
insl
adc
daa
jmp
xor
jmp
add
xor
dec
rcrl
and
addb
pop
dec
xchg
iret
je
stos
cmp
stc
pop
stos
push
les
in
xchg
or
ljmp
outsb
inc
jne
stos
dec
jnp
xchg
fisttpl
fs
inc
jns
les
mov
and
addb
arpl
jne
std
pop
inc
mov
iret
cld
imul
mov
stos
xor
rorl
cmp
fcmovbe
aam
test
xor
movsl
sbb
xchg
inc
dec
mov
into
js
orb
lods
push
test
add
inc
pop
sub
jo
subl
mov
sub
sbb
mov
xchg
cmp
outsl
jg
jno
cmp
push
push
popa
stos
inc
out
loop
mov
jnp
sbb
lret
push
jl
mov
js
stos
fs
mov
xor
add
fmull
pop
push
popa
mov
mov
inc
push
stos
adc
pushf
mov
add
scas
dec
mov
xchg
js
incl
arpl
outsb
fwait
cmp
mov
int3
or
jg
iret
stos
ret
ss
adc
or
addl
out
ds
mov
push
stos
dec
add
fisubl
mov
aas
lods
xchg
ficoms
mov
stos
xchg
outsl
test
dec
scas
fidivs
stos
jge
fcoml
and
push
dec
cmp
cmpsl
mov
loope
imul
out
cld
test
jmp
cmp
call
ficompl
loope
stos
jmp
test
leave
pop
cmp
inc
mov
popf
or
clc
xor
lea
imul
adc
push
jbe
and
cmp
jmp
in
xor
inc
test
mov
jnp
xchg
stos
out
mov
and
stos
repz
je
gs
nop
outsl
stos
in
cmpl
stos
pop
mov
mov
jnp
mov
out
cld
out
sti
stc
dec
push
imul
jno
xchg
xor
xchg
sub
int3
mov
adc
jbe
inc
push
mov
aad
xchg
arpl
push
push
xor
ja
aas
add
inc
pop
xor
adcl
testl
push
jb
repnz
pop
adc
add
mov
or
jne
jnp
xchg
aam
es
dec
mov
lret
sub
stos
test
cmpsb
shrb
orb
jle
stos
xor
pusha
and
je
movsb
mov
push
xor
adc
push
das
lods
sub
es
stos
test
cmpsl
adc
stos
int3
xchg
repnz
sub
movsb
es
cmp
addr16
jl
test
stos
icebp
inc
jg
loopne
cmp
push
jne
xchg
mov
fisubrl
dec
dec
jle
ljmp
xchg
lds
cli
push
fcomp
test
sbb
or
and
mov
sbb
jnp
push
add
inc
sub
push
inc
dec
gs
imul
stos
leave
jge
or
rcrl
stos
sub
mov
and
xor
dec
idivb
fisubl
mov
sub
stos
xchg
pop
push
and
pusha
stos
add
adc
ljmp
rorl
cmp
addr16
fcmovne
or
mov
sub
mov
and
cmpsl
xchg
mov
iret
fnstenv
sub
insl
mov
jbe
adcl
scas
pop
test
mov
push
adc
xchg
stos
fld
icebp
add
cmp
and
jmp
dec
cmp
inc
jmp
out
jmp
das
sti
cltd
arpl
stos
rcl
fimull
orl
inc
push
pushf
out
xchg
adcb
jno
imull
data16
push
sbb
stos
das
fwait
dec
stc
inc
fistpl
stos
ror
repz
ja
shrl
insb
adc
lods
test
sub
lahf
xchg
stos
fimull
xlat
cltd
inc
mov
imul
mov
pop
dec
repnz
push
mov
stos
mov
mov
jmp
stos
mov
or
out
or
cmp
jmp
aas
lcall
pop
ds
lret
fcomps
mov
out
push
cmp
int
stos
jl
aam
bound
in
add
daa
push
stos
fisttpl
shrl
test
daa
jmp
sbb
mov
mov
jmp
fcoms
divb
xchg
cs
stos
popa
adc
mov
jge
and
dec
mov
jno
cs
out
xlat
icebp
daa
mov
sub
push
jno
daa
out
into
mov
dec
sti
xor
pop
and
stos
dec
mov
sbb
jp
les
sbb
daa
int3
fwait
jae
cmp
stos
fists
add
xchg
inc
cmp
test
out
push
mov
in
mov
pop
insl
pop
in
insb
imul
aam
jle
nop
lahf
stos
dec
pop
push
sbb
cmp
loope
scas
mov
loopne
stos
mov
push
mov
mov
adc
adc
subb
insb
movsb
jp
loop
lock
icebp
pop
pop
lcall
subl
xchg
and
imulb
mov
and
mov
cmp
mov
fbld
xor
in
pop
data16
push
iret
cmp
notb
out
and
pushf
stos
push
loop
jne
mov
insb
add
add
jns
outsb
xchg
stos
cltd
inc
xchg
xor
jg,pn
mov
adc
fildll
mov
sbb
fcoml
fiaddl
stos
or
and
testb
das
lock
dec
ret
in
mov
mov
aas
in
stos
xor
mov
imul
jp
mov
loop
push
stos
call
or
ss
xor
sbb
stos
or
add
xchg
jb
mov
mov
adc
or
int
icebp
sub
in
push
lods
adc
jb
pop
and
cmp
shrb
movsl
add
stos
pop
bound
scas
mov
shll
out
stos
mov
add
jae
jge
mov
hlt
and
or
into
mov
loopne
inc
mov
pop
lock
mov
lahf
loop
and
ljmp
stos
test
and
mov
scas
repz
pop
shr
and
and
mov
pop
mov
xchg
nop
outsl
mov
cmp
inc
stos
xor
mov
clc
imul
jp
dec
lret
stos
popf
adc
xor
inc
fstp
mov
out
pop
mov
or
fwait
sbb
out
jmp
addr16
mov
and
jg
cmp
mov
mov
push
movsl
adc
data16
stos
leave
js
fst
and
insl
push
push
xchg
fstps
sub
cmpsl
mov
dec
cwtl
pop
cld
mov
mov
in
lea
jmp
popf
repnz
pop
xchg
scas
cli
fdivrp
lret
mov
testl
cmp
push
mov
daa
dec
fdivrs
add
stos
mov
push
mov
out
jne
imul
dec
jg
dec
cwtl
stos
jnp
dec
add
cs
and
xorb
push
stos
mov
icebp
add
jmp
ljmp
jp
out
inc
insb
mov
or
aad
push
add
or
cli
fistpl
rorb
fdecstp
xlat
jmp
xchg
push
stos
lret
xor
inc
stos
push
movsl
push
insb
incl
js
sub
pop
mov
icebp
adc
stos
int
aad
popa
test
jae
mov
mov
pop
xor
mov
addr16
loope
mov
aaa
popa
rorb
stos
and
push
pop
bound
sahf
stos
test
add
mov
rolb
jmp
insb
adc
xchg
sbb
stos
pop
mov
and
faddp
aam
movsl
test
rclb
inc
sub
dec
inc
mov
jl
jmp
bound
sbb
fcompl
dec
xchg
xor
pop
xor
imul
scas
jmp
inc
cmp
stos
cmp
stos
sub
cmp
sahf
stos
imul
stos
push
mov
push
scas
test
and
mov
test
daa
das
scas
or
in
stos
daa
adc
push
sub
stos
adc
add
in
inc
xchg
stos
test
sbb
jecxz
outsb
cwtl
lahf
addr16
mov
iret
cmpb
mov
xchg
shrl
mov
leave
cmpsl
stos
js
jae
lahf
inc
jmp
test
push
sahf
sbb
jbe
cmpl
cld
lret
and
fwait
cmp
xlat
into
stos
cmp
popa
lods
mov
push
nop
inc
std
pusha
dec
and
stos
pop
mov
movsl
mov
fs
cmp
test
daa
stos
jge
iret
mov
clc
push
jle
fildll
cli
sbb
popf
or
sti
stos
xor
mov
or
call
sbb
mov
cmpsl
mov
xchg
bound
ret
div
lods
cmc
inc
push
mov
xor
and
rorl
fisubrl
leave
daa
outsb
push
stos
movsb
mov
hlt
stos
cmc
jge
inc
pop
in
inc
sub
dec
inc
scas
out
aam
add
stos
push
jg
or
inc
subl
call
sbb
and
lcall
xor
inc
pop
adc
jge
pop
je
xlat
das
nop
les
jae
in
lds
xchg
pop
push
stos
out
inc
pop
adc
test
stos
sub
xor
imul
sbb
mov
cwtl
imul
in
cmp
stos
xchg
adc
scas
add
scas
xchg
stos
dec
fdivrl
sbb
test
mov
out
push
cmp
fdiv
stos
dec
popa
movsl
xchg
cs
and
stos
pop
sbb
movsb
imul
stos
jge
push
xor
aad
mov
popl
std
pop
stos
mov
fwait
mov
pop
xchg
out
fidivrl
dec
subb
sub
daa
sarl
es
mov
mov
fidivrl
xchg
stos
mov
add
stos
push
movsl
mov
adc
mov
into
stos
inc
jle
adc
cmpsl
or
in
push
mov
idivl
stos
rcll
lret
es
add
and
sarl
andl
cltd
stos
dec
and
aad
rorl
mov
negl
idiv
test
js
or
sbb
mov
lods
jp
fisubl
or
stos
rcll
into
jo
addb
inc
fwait
mov
push
xchg
fisttpll
imul
repnz
sarb
loop
jmp
dec
ja
add
pop
fcomp
mov
daa
ljmp
mov
shrl
mov
jmp
mov
dec
pop
mov
lods
lahf
jmp
aam
sbb
into
mov
mov
and
cmp
sbb
stos
push
xchg
pmuludq
push
scas
inc
popf
ret
pop
jbe
cmp
and
sub
mov
dec
stos
or
ja
sbb
daa
mov
xor
xchg
adc
xchg
std
xor
dec
sahf
stos
fld
or
and
pop
data16
in
inc
outsl
daa
shll
mov
sti
mov
arpl
add
push
mov
shrl
and
mov
pop
xchg
fistpll
mov
fcmovnb
es
das
push
popf
mov
mov
and
les
sub
sbb
cmp
fnstenv
fs
dec
sub
lea
lfs
cmp
adc
repz
stos
movsl
aas
in
pop
pop
jl
mov
stos
andl
jle
dec
flds
pop
inc
xor
pop
sbb
push
xchg
xor
addl
in
inc
iret
shrb
loopne
mov
sub
stos
ljmp
imulb
dec
and
mov
stos
fadd
sar
aam
add
imul
mov
repz
jp
icebp
or
ret
sub
xchg
stos
enter
mov
js
stos
and
sbb
loop
xor
stos
lea
jmp
and
sbb
sbb
stos
imul
xlat
sub
outsl
or
dec
stos
cs
xchg
mov
int
cmp
stos
or
pop
pop
dec
lods
in
jnp
adc
sti
mov
lret
mov
stos
outsl
arpl
fwait
push
bound
pop
jge
stos
inc
sub
in
cltd
sub
mov
inc
xor
jae
outsb
mov
jecxz
inc
mov
stos
pop
xor
push
enter
stos
popf
adc
hlt
stos
push
inc
insl
adc
pusha
je
adc
fwait
and
shrl
into
jae
fsub
sub
stos
xor
in
xchg
jmp
imul
call
pop
nop
adc
lods
adc
push
pusha
je
xchg
jp
dec
add
stos
mov
repz
in
jbe
scas
xchg
mov
or
mov
cmp
cmpsb
enter
stos
testb
ja
sbb
mov
into
inc
stos
xchg
sbb
and
cmp
std
mov
outsb
sub
cmp
cli
dec
sub
sbbl
or
cmp
cli
push
out
rcl
sbb
in
insb
lret
out
and
aad
stos
in
jb
sarb
push
mov
aaa
dec
js
repz
sbb
lods
xchg
mov
sub
mov
jle
pop
lahf
cmpsw
pop
in
xchg
pop
push
jno
inc
dec
cwtl
frstor
sub
xchg
ret
mov
imul
mov
adc
shrb
mov
inc
ficomps
les
call
xchg
inc
xor
jnp
out
sahf
sub
out
addr16
pusha
stos
lea
sbb
hlt
cmp
out
push
sbb
cmp
repz
rolb
dec
iret
stos
push
lods
mov
adc
mov
add
dec
int3
scas
stos
pop
lods
mov
mov
xor
lock
adc
jecxz
ret
sub
jp
ljmp
push
addb
lahf
and
pop
daa
idivl
xchg
popf
xchg
stos
fwait
in
jo
cmpsb
push
jge
cmp
stos
aam
or
leave
and
sti
cs
ret
mov
xchg
jmp
jae
lret
xchg
dec
mov
mov
stos
cltd
sarb
popa
stos
lea
push
adc
xchg
mov
jge
std
xor
stos
lahf
jecxz
xchg
lds
sbb
or
sub
pop
xor
pop
mov
and
jecxz
xchg
dec
aaa
in
mov
mov
fisttpl
and
jbe
push
in
fistps
cmp
pop
and
xchg
inc
ret
stos
fwait
mov
pop
pop
xor
stos
inc
or
test
sti
call
int
fcomps
sarl
jnp
icebp
daa
cmp
shrb
test
loope
leave
clc
arpl
shl
lret
mov
mov
or
daa
xor
mov
movsb
jle
stos
adc
aaa
leave
stos
jno
out
shrl
sti
sahf
lcall
sbb
sub
xor
into
push
push
stos
lea
add
sub
or
test
lods
push
cmp
mov
mulb
cmp
jle
in
jne
mov
xor
cmp
sub
push
mov
test
mov
bound
repnz
jae
frstor
dec
and
mov
sbb
push
inc
aas
xor
je
push
lods
aad
fnstsw
xchg
jecxz
dec
mov
jne
mov
out
rcl
dec
inc
fstl
dec
sub
data16
daa
aad
and
loop
test
stos
les
into
sub
push
or
stos
push
hlt
cwtl
rol
adc
sub
stos
sbb
mov
ret
test
inc
das
fidivrl
jo
loop
pop
inc
inc
mov
and
mov
adc
gs
sub
fucomi
mov
mov
push
stos
adc
repz
pusha
stos
xor
sbb
stos
xchg
or
pushf
inc
xchg
inc
test
cmp
insl
ljmp
mov
lods
xchg
pop
mov
fcomip
les
adc
mov
gs
adc
dec
test
nop
sub
jnp
iret
or
xchg
and
sbb
stos
xor
mov
in
stos
jns
add
js
push
popf
push
sub
jmp
stos
sbb
lahf
gs
push
mov
stos
dec
inc
loope
or
jge
filds
movsb
xor
mov
inc
data16
js
adc
jns
stos
mov
push
iret
shrb
gs
cmp
dec
lcall
cmp
addr16
movsl
das
mov
imul
aaa
mov
js
mov
mov
bound
jmp
xchg
movsl
cmpsb
fidivrl
xchg
xchg
mov
or
mov
scas
daa
shrl
and
mov
pop
adc
xchg
test
call
pop
pop
inc
fisubl
stos
sbb
ljmp
xor
mov
push
fwait
jb
push
arpl
push
cmp
dec
ror
imul
or
scas
mov
mov
sarl
pop
sti
cld
imul
fidivl
rcrl
mov
scas
fs
cmp
sbb
loopne
and
jl
and
jge
jmp
test
sbb
or
insb
jle
shll
adc
lock
xor
enter
xchg
ds
stos
fs
pop
loope
jle
popa
push
jb
mov
jae
stos
xchg
mov
cmpsb
jg
lods
rorb
jmp
cmp
dec
aas
iret
stos
movlps
sub
mov
insb
stos
das
rcl
shl
mov
cmp
hlt
stos
and
in
xor
ffreep
stos
xor
test
push
cli
negl
sti
cmpsb
mov
mov
xor
enter
int3
mov
mov
cmp
mov
pop
addr16
adc
or
daa
in
jns
aam
gs
inc
dec
stos
jp
rolb
mov
stos
xchg
aad
test
push
push
pop
xchg
js
dec
push
cld
push
xchg
aas
cmc
xor
jno
mov
push
sti
rorl
push
mov
ds
sub
sub
push
cmp
mov
rorb
call
lock
xor
mov
xor
or
stos
imul
ljmp
fisttps
inc
mov
sub
dec
subl
and
push
inc
outsl
stos
in
mov
mov
insl
sub
stos
cmp
and
addr16
jecxz
inc
andb
imul
jge
inc
stos
jnp
mov
test
repz
aaa
in
stos
shll
pusha
and
stos
fnsave
xchg
or
movsl
mov
shll
cmp
lea
mov
in
inc
jl
scas
je
push
nop
fildll
ja
loope
dec
xor
cmc
mov
xchg
scas
outsb
push
ret
out
popf
stos
fstpt
cmpsb
fsubrs
pop
inc
adc
xchg
sub
xor
shrb
sbb
push
jbe
popf
jns
xlat
stos
inc
int
mov
stos
adc
sub
aaa
stos
je
stc
inc
outsl
inc
dec
add
inc
sub
xor
or
dec
inc
pop
or
stos
movsb
add
push
adc
push
sub
pushf
mov
fisubrl
stos
hlt
rolb
rorb
fildll
adc
adc
mov
int
inc
stos
sub
fs
dec
push
and
inc
gs
in
cmp
popf
jo
shrl
call
cmpsl
cwtl
pushf
dec
addl
out
xor
mov
std
push
inc
stos
cmp
dec
or
movsl
out
loopne
out
mov
sbb
inc
or
daa
mov
jbe
jmp
cwtl
jmp
sub
jp
fdecstp
hlt
push
jb
in
mov
cwtl
mov
xchg
icebp
daa
dec
cld
insb
sti
xchg
and
incb
int
jmp
subb
out
mov
stos
jno
mov
mov
aas
lea
cwtl
stos
mov
and
pushl
outsl
aam
aaa
and
int
ja
pushf
dec
sbb
xor
lcall
cmpsb
aas
mov
imul
sbbl
mov
mov
push
stos
sahf
fsts
stos
xchg
add
stos
mov
in
lock
leave
in
sarl
sub
mov
sbb
hlt
aad
inc
stos
mov
lret
push
jp
push
enter
es
mov
cs
fcomp
insl
mov
inc
scas
push
and
mov
or
and
inc
in
push
dec
sub
bound
stc
xor
xor
mov
ss
xor
xor
imul
adc
std
out
xchg
lock
pop
subl
jmp
pop
sbb
lcall
in
xchg
hlt
jg
push
mov
orl
push
xchg
loope
mov
mov
mov
adc
shrb
rcll
imul
pop
test
mov
xor
push
pop
push
movl
dec
xchg
call
orb
push
stos
fildl
fnsave
outsl
stos
jecxz
addr16
scas
lea
inc
fistpll
lods
outsl
jb
aas
pop
data16
ljmp
push
xchg
fmul
stos
cmpsl
lea
mov
inc
inc
jmp
and
jl
jecxz
mov
adc
stos
cmp
dec
fbld
enter
mov
daa
sub
fs
stc
jnp
jmp
jno
data16
lods
cltd
sbb
lods
clc
das
fsubrs
jo
ret
inc
push
cmp
dec
pop
xchg
add
sbb
cmp
movsl
stc
inc
outsb
pop
shl
lods
or
push
mov
cltd
imul
and
cmp
and
xor
push
or
in
push
mov
xlat
data16
cs
jecxz
stos
cmp
es
xchg
push
sub
clc
sub
dec
stos
jne
jecxz
jb
pop
adc
in
dec
imul
fcomps
add
loope
into
repz
push
cmc
mov
ret
or
or
cld
pushf
cmp
js
ljmp
lds
es
mov
jae
push
sbb
sub
xchg
push
xor
mov
pop
incl
xlat
lahf
das
repnz
inc
push
mov
into
insb
pop
fsubrl
or
lret
sbb
nop
mov
adc
stos
loopne
andl
and
mov
xchg
dec
les
js
repz
stos
jns
mov
inc
or
out
cs
sub
stos
enter
xor
xchg
push
jmp
lods
rcll
jle
or
stos
cmp
mov
inc
stos
jno
push
ss
jecxz
pop
stos
enter
cmpsb
cmp
adc
gs
insl
fisubrs
mov
in
arpl
scas
cmp
lods
or
stos
jmp
xor
push
insl
add
and
loope
stos
pause
pop
scas
into
cmp
mov
sti
cmpsl
mov
push
sub
push
int3
stos
push
imul
out
mov
stos
mov
fldcw
mov
imul
stos
xor
mov
inc
stos
sbb
loope
cli
push
xlat
outsb
cmp
daa
lahf
scas
pusha
imul
add
test
mov
aam
fnstenv
xchg
std
cmp
ds
sahf
or
rclb
jbe
pop
clc
fcomps
fdivrl
shl
in
jge
pop
ss
ret
scas
sub
subl
stos
push
adc
adc
popa
jns
add
cltd
push
cwtl
sbb
sub
divb
ret
arpl
in
adc
pop
and
ds
jns
inc
and
pushf
xchg
movsb
pop
pop
cmpsl
stos
inc
inc
jmp
subl
stos
cmp
ja
daa
out
adc
psllq
daa
or
fidivrl
adc
stc
cmpl
push
mov
xchg
sbb
lea
js
fwait
push
bound
push
mov
shrb
mov
ljmp
jmp
pop
adc
xchg
mov
enter
rcrl
mov
dec
lock
and
mov
mov
icebp
out
or
pop
jno
fwait
jmp
out
in
mov
insl
loop
mov
mov
and
paddusb
lret
jbe
xchg
test
or
cwtl
test
insl
repz
outsl
not
movsb
push
in
mov
aam
jne
and
stos
sti
push
int3
addl
xor
jo
mov
jbe
push
lods
mov
cmp
je
fisttpl
out
mov
mov
inc
sbb
push
add
jg
jmp
or
dec
pusha
sub
cmpsb
imul
out
lods
xchg
sbbl
daa
push
push
xchg
fwait
int
pusha
popa
arpl
pop
insl
stos
mov
and
push
adcl
xchg
add
push
pop
pusha
xchg
jl
inc
or
adc
and
mov
mov
jge
dec
push
push
adc
insb
setnp
mov
push
cs
hlt
test
mov
sbb
cwtl
mov
lods
xor
shrb
push
sbb
cwtl
push
test
cld
pop
movb
mov
mov
aas
mov
mov
add
stos
into
jge
push
mov
lds
sbb
aas
lahf
stos
inc
fmull
mov
and
add
inc
imul
mov
jg
dec
movsl
pop
xchg
xchg
in
push
lahf
inc
fwait
jmp
data16
or
hlt
fsubrl
pusha
iret
sarl
test
pop
pop
aaa
jb
fldcw
lcall
mov
fcompl
fidivrs
sub
clc
jmp
dec
lods
pop
xor
shl
data16
movsb
pop
mov
or
mov
jbe
out
inc
stos
scas
cmc
and
dec
pop
addr16
ds
mov
sub
push
mov
push
cmc
stos
test
mov
cmp
mov
stos
pop
out
mov
push
mov
sbb
mov
cwtl
lods
xchg
adc
arpl
hlt
jp
ds
lods
inc
ljmp
stos
jae
pop
inc
xorb
stos
movsb
pop
sahf
push
lahf
push
stc
in
scas
std
stos
popf
or
es
cmp
loop
sbb
pop
stos
aad
in
mov
or
test
lret
cmp
fwait
inc
push
xor
dec
shrb
mov
int3
fsubrp
sub
fadds
cltd
lcall
aad
inc
xor
stos
aas
sbb
and
je
arpl
xchg
push
push
push
lods
ss
lahf
jmp
jmp
popl
lret
mov
pop
adc
imull
mov
fwait
xor
mov
jo
add
subl
add
sbb
xchg
sub
clc
orb
lcall
or
lods
push
push
xchg
mov
or
stos
xor
cmp
jnp
xor
jne
ljmp
notb
pop
hlt
imul
and
inc
or
or
adc
adc
je
push
sub
in
pop
incl
inc
dec
cld
mov
sahf
imull
mov
mov
add
dec
and
jmp
pop
sbb
push
nop
scas
fmuls
adc
call
stos
mov
sub
xchg
imul
in
mov
std
ficoms
sbb
out
pop
fdecstp
insb
mov
stos
into
movd
sar
cmp
stos
in
popa
inc
jecxz
enter
cmp
and
xchg
movsb
bound
es
push
xor
cmpsl
fcoml
into
mov
dec
jge
mov
and
bound
mov
cld
lods
cmp
add
mull
mov
stos
popa
sarb
repz
pop
stos
mov
ret
xor
mov
aaa
stos
sbb
xor
or
mov
fwait
push
add
xor
xchg
ljmp
js
jno
dec
dec
gs
insl
and
movsl
mov
and
lret
or
lea
jg
stos
lret
fucomi
push
and
mov
jne
mov
jo
pop
in
jnp
xor
scas
push
stos
dec
sbb
scas
pop
mov
sahf
inc
mov
stos
xor
in
mov
stos
cld
xchg
or
jmp
stos
pop
fnstsw
inc
aam
scas
mov
daa
mov
cmp
jmp
mov
imul
sub
push
mov
adc
movsl
dec
outsb
imul
lds
stos
out
xor
arpl
sti
mov
pop
scas
test
int3
stos
push
sti
mov
test
fwait
call
add
mov
jl
xchg
out
imul
cld
int
jno
mov
ret
stos
imul
scas
stos
sub
loope
push
jbe
jp
cli
xchg
in
sub
mov
dec
mov
push
sub
montmul
cmpsb
add
jae
aas
xchg
jbe
sbb
addr16
out
dec
mov
push
pop
cmp
inc
fcmovnu
xor
or
mov
dec
test
jg
imul
bound
mov
in
jle
pop
pop
in
cmp
pop
dec
std
mov
or
adc
inc
scas
pusha
jae
push
rcll
sbb
leave
arpl
xchg
jbe
testb
mov
or
add
loope
sar
jb
inc
mull
and
pop
push
mov
jnp
sub
fadd
mov
stos
inc
inc
xchg
pop
push
mov
stos
cmpsl
inc
adc
lret
inc
push
insl
stos
es
xor
jmp
inc
sbb
cld
mov
mov
add
or
arpl
stos
pop
sti
xchg
mov
sbb
lret
push
add
and
cmpsb
out
xchg
movsb
jnp
js
stos
mov
or
mov
test
imul
shll
or
jl
stos
and
fsubrs
test
or
sbb
ljmp
sub
ret
movsb
sti
xchg
or
es
aad
stos
mov
push
stos
dec
repnz
push
clc
inc
les
push
daa
mov
cmp
adc
daa
arpl
pop
inc
sbb
and
loop
outsl
stos
pop
ljmp
movsb
iret
or
mov
mov
stos
xchg
inc
fwait
mov
cs
cmp
rcrl
dec
stos
in
mov
lcall
fistps
outsl
and
adc
pop
jae
int3
mov
stos
or
xchg
stc
push
sbb
sbbb
adc
std
jge
jl
push
adcb
sub
leave
ljmp
xlat
jmp
xor
sahf
cwtl
iret
or
aad
mov
in
mov
adc
shrl
cmp
test
hlt
adc
mov
jl
mov
sub
mov
es
pop
dec
cwtl
sarl
sbb
imul
out
imul
lods
stos
mov
mov
mov
nop
repz
jl
inc
adc
xchg
aam
jge
mov
or
mov
or
stos
in
xor
stos
xor
jo
cs
cwtl
mov
into
daa
mov
stos
insb
push
mull
stos
inc
popf
or
mov
sarl
jge
mov
stos
sub
orl
stos
adc
mov
stos
cmp
add
aam
xor
push
jecxz
jnp
mov
inc
jnp
das
mov
add
fwait
cmp
lahf
mov
and
fldenv
xor
jmp
or
lret
push
push
fstpl
stos
inc
mov
pop
xchg
adc
ja
ret
mov
movsb
arpl
lret
repnz
push
inc
in
pop
adc
fsubrs
push
out
shll
xchg
xchg
mov
stos
shll
add
mov
das
xchg
stos
cmp
fs
loope
dec
push
or
sbb
mov
in
call
mov
sbb
inc
mov
adc
cs
shrb
lahf
or
js
pusha
mov
push
mov
out
mov
mov
pop
stos
pushf
je
jg
lea
sub
xor
mov
mov
pop
jmp
or
xchg
cmp
dec
add
adc
sbb
adcb
inc
es
movsb
mov
mov
and
xchg
sub
pop
leave
dec
outsl
mov
fwait
and
mov
xchg
sub
in
push
mov
dec
fistpl
stos
add
push
daa
stos
testl
arpl
in
mov
mov
jmp
push
fwait
mov
push
or
stos
mov
adc
xor
cmp
and
inc
push
lcall
and
rorl
pop
mov
loop
scas
push
stos
cli
inc
jecxz
inc
es
pop
mov
aaa
in
loope
adc
divl
xchg
add
imulb
jge
or
stos
dec
cltd
outsl
push
push
mov
loope
notb
stos
jae
and
cmp
push
jge
scas
jp
sub
sbb
or
test
pop
repnz
nop
lcall
bound
stos
fwait
nop
mov
cmp
or
loope
inc
popf
sub
dec
add
rorb
xchg
xor
pushw
lea
mov
jnp
stos
test
xor
stos
fs
jno
pop
je
and
xchg
lcall
and
stos
inc
sbb
sbbb
ja
dec
jp
pop
push
daa
cmp
in
mov
mov
jmp
out
pop
stc
jno
pop
and
mov
pop
inc
stos
xor
cmp
mov
jecxz
sbb
stos
push
movsb
and
push
popf
ret
stos
add
adcb
mov
pop
inc
cltd
jmp
cmp
xlat
repz
or
ss
je
out
pop
fbstp
stos
sbb
lcall
pop
mov
inc
rcrl
or
out
cmpsb
sti
mov
push
inc
cmp
jl
test
fcoml
stos
adc
dec
mov
insl
imul
stos
cli
fwait
daa
adc
push
cltd
in
add
sbb
movsl
into
jle
and
out
xor
sub
cld
stos
sbb
sub
and
mov
jg
pop
jl
lcall
jecxz
arpl
leave
stos
std
and
mov
stos
sbb
sbb
stos
pop
push
inc
cmp
mov
xor
mov
subl
xor
andl
add
add
xor
jmp
or
repnz
add
in
dec
mov
stos
mov
add
stos
xor
mov
sub
stos
inc
loope
outsl
push
add
mov
ficomps
mov
out
inc
imul
push
rcrl
aad
adc
push
push
push
xchg
xchg
cs
mov
add
pop
mov
adc
fwait
cld
xchg
lcall
push
mov
aas
je
mov
stos
adc
ja
stos
pop
leave
jge
xchg
mov
shrl
or
es
addr16
inc
jl
fcoml
pop
lods
push
jecxz
and
comiss
and
jl
int3
adc
cmp
addr16
mov
lods
push
push
fsubs
std
and
mov
sbb
aad
test
inc
mov
inc
mov
daa
xor
bound
test
dec
stos
loop
xchg
fdivrp
xchg
daa
ds
pop
fwait
sbb
or
repnz
jmp
rcrb
shrb
aam
mov
or
clc
in
stos
incb
cmp
in
pop
insl
mov
icebp
pop
stos
mov
mov
js
test
pop
in
xchg
cmp
imul
jb
add
mov
mov
lahf
jno
aas
dec
jne
mov
xchg
aaa
push
nop
and
xor
imul
cmpl
stos
push
jmp
pop
daa
stos
imul
jo
jbe
pop
lock
jb
mov
movsl
ds
sti
andb
dec
out
stos
or
inc
mov
mov
inc
jmp
aam
add
add
nop
ret
jne
cmp
mov
mov
shl
loope
rcrb
lret
stos
rorl
rcll
or
push
mov
in
sub
push
mov
fnstenv
scas
roll
sti
sbb
lahf
pop
out
insb
stos
cs
stos
ss
rcll
sub
push
outsb
mov
sbb
and
add
sbb
add
jmp
sbb
ljmp
stos
or
movsl
sbb
test
add
ret
push
imul
fcoms
jno
stos
ficoms
jae
ljmp
adc
push
mov
cmp
xor
sbbb
int3
test
fidivrl
pop
stos
mov
mov
cmpl
dec
push
rclb
fisubrl
popf
idivb
and
rorl
jns
push
xchg
into
inc
test
push
mov
mov
rorl
stos
ror
xor
repnz
push
and
stos
sbb
inc
test
std
push
stos
cmpl
xchg
adc
gs
and
fistl
stos
mov
mov
add
pop
loop
dec
daa
je
sub
lods
push
or
pop
pusha
daa
lock
or
pop
fnstsw
loope
stos
mov
mov
inc
push
sub
out
stos
stos
sbb
push
lahf
mov
or
mov
jae
les
sub
add
in
shlb
jg
xchg
dec
or
out
test
lea
ret
js
inc
jmp
repz
push
xchg
in
idivb
inc
das
xor
adc
sub
push
stos
notb
or
rolb
adc
cmpsl
pop
adc
sbb
ret
mov
cmp
fcomi
out
or
arpl
jmp
stos
in
dec
fdiv
jle
sti
stos
test
cmp
jg
call
ficoml
add
or
inc
lock
mov
mov
mov
sbb
inc
lret
xlat
cmc
cmp
fdivrs
jp
sbb
jo
fwait
cltd
pop
add
and
lock
xlat
push
mov
mov
das
inc
xchg
mov
sub
es
sbb
push
pop
stos
sbb
lds
add
inc
stos
daa
push
sub
push
arpl
add
int
stos
cmp
xchg
lahf
leave
jns
movsl
jnp
lods
addl
xchg
jle
fs
insb
push
lcall
adc
mov
xor
and
dec
stos
mov
insl
add
push
sbb
push
stos
sub
bound
stos
cs
push
pop
and
movsb
mov
push
push
ss
dec
dec
stos
adc
push
lret
mov
bound
sbb
fwait
xchg
cmc
mov
stos
inc
jmp
les
stos
pusha
dec
adc
mov
loop
movsb
pop
out
lcall
iret
dec
jmp
xchg
test
ds
mov
lds
mov
mov
sarb
imul
pop
in
in
stos
xor
xor
xchg
adc
adc
scas
pop
push
xchg
stos
and
repz
out
sub
scas
test
jne
lods
and
xchg
popf
stos
fidivl
mov
outsl
xchg
lds
mov
stos
lea
xlat
add
lahf
push
and
into
stc
mov
mov
mov
cmp
les
daa
stc
stos
xchg
pop
or
mov
iret
dec
cli
push
and
test
push
xlat
stos
mov
shrl
dec
xor
push
adcb
stos
or
jge
inc
sbb
daa
pop
push
jmp
mov
out
daa
pop
dec
push
test
mov
inc
mov
cmp
fimull
xlat
push
stc
add
data16
dec
stos
aas
in
cmpsb
inc
lods
data16
subb
fisubrs
pop
stos
adc
jb
sahf
fwait
or
xor
xchg
sbb
cmp
stos
addl
mov
out
int3
pop
or
stos
insl
lahf
pop
mov
jle
cmpsl
inc
rcrb
push
loop
push
sub
leave
xchg
or
stos
cmpsb
jae
sub
push
dec
stos
movb
dec
out
stos
daa
mov
rol
subb
int3
ficomps
into
mov
xor
cmpsb
cmp
mov
jmp
leave
in
dec
std
insb
fisubl
in
or
lcall
xor
int
mov
mov
mov
in
pop
mov
test
push
adc
mov
repnz
mov
imul
xor
mov
hlt
mov
add
aaa
test
xchg
lods
clc
inc
stos
arpl
cmp
insb
dec
xor
es
lret
adc
mov
xor
fstpt
out
dec
stos
ret
testl
stos
movb
pop
daa
pop
movsb
add
or
lods
ret
stos
and
sub
dec
inc
out
xchg
enter
in
in
inc
cmpsb
shll
push
mov
or
mov
cmc
stos
add
rep
call
sub
mov
pop
stos
push
xor
mov
lret
leave
stos
mov
xchg
test
stos
jb
aaa
jge
or
stos
mov
dec
aad
stos
mov
stos
pop
push
and
bnd
lret
mov
xchg
mov
aaa
jns
loope
out
stos
mov
jmp
pop
push
fs
test
cmpsl
lret
xchg
stos
xchg
sbb
cmp
mov
scas
inc
adc
loopne
enter
mov
xchg
pop
stos
jmp
xchg
mov
jecxz
ljmp
movhps
loopne
sub
sub
scas
mov
in
stos
mov
add
in
and
sbb
rorl
out
push
fmull
sub
xchg
cmp
addr16
fiaddl
jl
sub
sbb
mov
pop
stos
sub
ret
mov
dec
stos
cmp
pop
or
stos
test
bound
xor
mov
mov
pop
mov
or
pop
sub
in
sbb
jmp
push
cmp
mov
push
or
adcb
aaa
js
test
inc
or
jmp
dec
and
pusha
lods
bound
xchg
mov
cmp
sbbl
jb
pop
mov
stos
push
and
lods
test
mov
mov
insl
xchg
sub
sbb
stos
shl
mov
arpl
fsubrl
sbb
aam
xor
mov
call
mov
push
aad
popf
add
addr16
decl
and
daa
fcoml
sub
pop
andb
daa
adc
cmp
es
add
pop
stos
mov
fcom
fdivl
xchg
jb
movsl
stos
pushf
sahf
inc
adc
and
push
push
push
adc
jmp
test
mov
fdivl
stos
jnp
xor
xorl
imul
popf
out
fwait
mov
fcoml
mov
mov
mov
and
pop
cmpsl
aas
sub
stos
mov
clc
pop
and
leave
in
stos
hlt
mov
in
add
push
cs
cmp
sbb
clc
jp
jmp
fsts
mov
out
fs
push
xchg
out
in
daa
mov
mov
ja
loopne
xrelease
xor
mov
push
orb
ljmp
popf
cltd
xor
sbb
rolb
cmpsl
xchg
addb
xchg
addb
stos
push
mov
sbb
mov
aas
inc
sub
les
cwtl
jl
cmp
push
stos
dec
jbe
pop
je
sbb
adc
sbb
outsl
stos
outsb
pop
mov
addl
xchg
xor
stos
fnstsw
push
sbb
stos
cmp
add
and
mov
stos
mov
cmc
out
outsl
sub
lock
mov
mov
inc
push
xchg
add
jmp
loop
movsl
movsb
test
daa
push
xor
push
ret
cld
std
fnstenv
scas
xchg
stos
movsb
or
aam
xchg
rorl
stos
and
out
stc
in
pop
loopew
jo
fwait
rclb
cltd
pop
inc
stos
je,pt
cmc
pop
test
xchg
shll
jnp
stos
sub
jno
dec
sbb
pop
stos
imul
pop
cmp
dec
xchg
stos
scas
movb
mov
jae
jb
xorb
inc
mov
jl
aas
stos
mov
adc
jbe
aam
fwait
add
ds
ss
jecxz
cmpl
test
stos
inc
sti
xor
pop
mov
stos
jae
scas
ss
jne
jbe
xor
sbb
lock
stos
daa
push
push
ret
insb
push
pop
movb
cld
inc
push
xchg
pop
loop
stos
pop
aam
addr16
and
scas
data16
push
cld
sub
stos
sub
int3
and
jno
fucomp
es
fisubrs
mov
aad
pop
dec
repz
test
xchg
cmpsl
mov
cs
stos
dec
mov
popf
sahf
dec
aad
jmp
pop
rcrl
xlat
mov
xchg
or
lods
fidivrl
in
jbe
movsl
sub
rcrb
xor
cmp
push
pop
push
sbb
stos
es
push
xchg
shrl
stos
mov
lods
daa
inc
cmpsb
sahf
mov
push
loop
or
popa
cwtl
adc
or
inc
pop
outsb
ret
and
icebp
adc
sub
xchg
fcoms
jl
xchg
rep
cmpsb
rorb
stos
inc
out
and
cmc
shrl
jl
mov
fadd
aam
call
add
ja
add
dec
in
jmp
jns
daa
mov
stos
cmp
movsl
fsts
dec
jmp
std
data16
sbb
stos
decl
xchg
push
pop
enter
shrl
stos
outsb
fcomi
clc
xor
and
aaa
mov
pop
sbb
stos
cltd
lods
cmp
mov
nop
inc
stos
and
ret
mov
xchg
xchg
test
lods
sbb
cli
subl
adc
push
stos
sbb
stos
xor
inc
scas
sbb
xchg
cmp
pop
push
sub
jl
sbb
push
add
and
cld
pop
pop
mov
test
sub
stos
push
lods
cmpsb
aaa
xchg
mov
cmp
sub
inc
sti
loop
xchg
jecxz
icebp
jnp
adc
and
lods
or
push
lret
jne
dec
es
pop
mov
aaa
sub
stos
push
les
mov
ss
fistpl
mov
xchg
push
scas
mov
pop
lds
fmull
es
mov
mov
push
stc
cli
popa
xchg
ret
clc
add
mov
xchg
aaa
mulb
mov
stos
xchg
and
js
std
ja
lahf
scas
xchg
adc
push
xchg
shrb
dec
and
fsubrl
imul
stos
lcall
stc
stos
pop
push
in
aas
pop
ret
fcompl
bound
ja
call
loope
push
inc
add
lods
es
mov
test
or
add
stos
and
int3
mov
test
xchg
pop
shll
xchg
mov
daa
inc
test
push
mov
xor
fsubs
roll
jnp
lods
stos
jl
add
push
dec
mov
mov
pusha
insb
leave
stos
fdivl
xchg
dec
xchg
pop
lods
subl
mov
sbb
scas
lods
jecxz
insl
mov
lods
inc
mov
insb
mov
cltd
stos
push
mov
enter
std
stos
lret
push
mov
jl
inc
mov
pop
mov
imul
xchg
pop
stos
mov
shrl
addl
fdivs
loop
ss
aaa
cld
mov
nopl
lcall
xchg
mov
add
fs
out
cmp
cld
test
in
iret
add
stos
push
sub
pop
xlat
js
push
push
sbb
jle
stos
jl
xchg
xlat
xor
cmpl
xor
mov
bound
push
jg
nop
inc
lods
fwait
stos
cmp
test
out
popf
mov
jg
cmpsl
adcl
cli
shrb
ficoms
mov
pop
call
in
xchg
and
xchg
rorl
jno
arpl
dec
arpl
cli
dec
stos
mov
imul
data16
stos
test
cwtl
notl
imul
cmpsl
mov
push
stos
xchg
jecxz
cmc
xchg
and
or
xchg
sbb
daa
out
int
mov
xor
adc
mov
shl
xor
sub
pop
lods
rep
add
lds
jl
rorl
xchg
jne
stos
inc
sbb
daa
dec
enter
xabort
push
sub
sahf
stos
dec
scas
nop
stos
jbe
add
lret
pushf
addl
cld
sub
in
stos
rclb
test
addr16
or
in
xor
inc
push
in
adc
enter
push
shrb
dec
xor
movsl
pop
lahf
mov
push
data16
xchg
add
ret
cmp
sub
dec
xchg
stos
aaa
or
mov
adc
fisubrs
lock
fistl
stos
inc
mov
faddl
ja
push
arpl
xchg
shlb
inc
mov
popf
jl
inc
sub
adc
sub
rcll
clc
xchg
inc
cmp
stos
pop
call
repz
in
sbb
rcr
xchg
test
and
xchg
ss
outsl
pop
mov
aaa
sbb
stos
push
into
popa
mov
insl
xchg
cmc
fsubrl
jmp
out
pop
outsb
stos
adc
inc
popf
xchg
in
idivb
push
mov
orl
rcll
mov
mov
stc
push
xchg
mov
bound
sarb
outsb
stos
or
sub
repnz
jl
mov
pop
mov
rol
shrl
jle
into
fwait
sub
out
mov
push
xchg
sti
stos
jo
cmp
in
mov
or
xor
insl
stos
mov
insb
push
cmp
mov
movsb
cs
popa
stos
pushf
inc
leave
mov
jns
mov
lret
sbb
cltd
mov
or
mov
adc
adc
cltd
and
repz
sbb
jne
xchg
sub
xchg
cmp
jnp
mov
jmp
sub
adc
jl
jecxz
or
stos
dec
insb
data16
es
adc
imul
test
call
cmp
add
inc
sti
mov
sub
fwait
sarl
stos
jge
and
loopne
jae
stos
data16
lret
subb
or
rorl
bound
push
xchg
mov
xor
adc
mov
imul
mov
and
mov
stos
mov
mov
outsl
addr16
leavew
cmc
cmp
int
cli
jge
xchg
pop
mov
pop
add
sub
or
insb
push
and
flds
inc
dec
cmp
stos
fisubrl
push
adc
popf
stos
pop
mov
adc
jg
aad
dec
xor
dec
mov
or
std
jnp
stos
mov
jb
orl
dec
jnp
lock
arpl
or
outsb
out
push
lods
cwtl
xchg
cmp
popf
jno
xchg
stos
mov
xor
add
mov
sti
jge
stos
or
out
movsb
add
or
dec
xchg
jmp
jge
lock
or
inc
stos
mov
js
std
mov
fsubr
icebp
xor
jo
cmp
shl
fsubp
or
nop
jg
aas
inc
pusha
jbe
ret
in
dec
clc
mov
mov
xchg
sub
add
push
fwait
push
mov
addr16
xchg
mov
lds
xchg
stos
lock
insl
gs
in
fs
xchg
sub
outsb
mov
xor
push
jbe
leave
cmc
es
cmpsl
pop
cmp
jo
push
mov
xor
ds
stos
cwtl
mov
mov
daa
xchg
jnp
mov
sub
leave
mov
out
add
mov
cmc
and
or
loop
push
jmp
inc
mov
adcl
mov
cmp
dec
mov
cmpsb
cmp
stos
out
xor
mov
jl
subb
and
jnp
or
daa
lahf
push
roll
xchg
movd
pop
stos
pop
clc
or
dec
decl
stos
or
sbb
mov
sbb
cwtl
add
push
ja
xchg
jns
jne
stos
mov
mov
stos
cmpsl
mov
lea
mov
repnz
mov
inc
lock
lods
into
sub
movl
push
enter
pop
fdivl
push
stos
add
cmp
xchg
mov
mov
stos
or
pop
ret
mov
lea
out
cs
pop
mov
rcr
mov
lods
inc
pusha
and
jo
test
jmp
xchg
bound
add
jb
sahf
call
push
jg
fxam
push
xor
imul
scas
mov
xchg
jnp
pop
sub
nop
lea
cli
clc
and
pusha
fwait
push
out
icebp
movsl
stos
jo
rcrl
das
xchg
movsb
jmp
in
cwtl
fs
adc
stos
or
pop
xchg
fcoms
jge
jo
lds
add
mov
xor
xchg
stos
push
test
sarl
pop
stos
mov
add
daa
pmullw
dec
insl
lret
leave
mov
in
mov
push
fiaddl
stos
es
aas
mov
lods
pop
data16
aaa
xchg
incb
mov
dec
shrl
push
leave
mov
inc
test
sub
add
lods
xor
sbb
mov
or
cwtl
dec
sub
lea
in
dec
out
jg
jecxz
pop
ret
sbb
jmp
out
aas
lret
stc
sub
int
fcompl
jo
jnp
pushf
stos
fs
stos
mov
roll
hlt
bound
sub
pop
jl
cs
sub
push
int
cltd
pop
sub
stos
notb
decb
stos
test
ss
cs
shrl
or
stos
popa
mov
cmp
daa
loope
imul
mov
scas
pop
dec
repnz
and
pop
fnstsw
jb
outsl
push
lret
imul
popa
test
mov
add
imul
add
inc
into
loop
and
out
fwait
add
inc
mov
dec
lcall
dec
pop
and
cmp
adc
in
push
mov
int
push
roll
inc
in
fistl
stos
jns
pop
inc
mov
mov
cli
add
mov
dec
pop
stos
aad
sti
or
sub
sbb
sarb
subb
cmpsb
in
inc
jmp
xchg
add
sti
xor
jecxz
movsl
loop
mov
out
outsl
fisubs
pushf
dec
mov
ja
or
or
fcomp
out
mov
and
jns
push
jb
hlt
ds
dec
sbb
aas
pop
cmpsl
loop
sbb
rclb
cmp
mov
xor
std
mov
inc
push
stos
mov
bound
scas
add
fwait
jecxz
lcall
leave
iret
mov
dec
xchg
adcl
or
jp
stos
insl
add
pop
inc
mov
mov
push
mov
stos
in
xchg
push
sbb
jmp
arpl
dec
mov
adc
jno
ljmp
pop
mov
pop
es
stos
popa
mov
test
cld
stos
dec
pushf
jno
jo
pop
lea
enter
pop
sub
div
xchg
and
clc
fucomp
cmp
stos
push
xchg
lods
or
into
jmp
ljmp
jge
sbbb
cmp
mov
pop
xor
es
std
jnp
lret
xchg
sbb
and
lock
mov
mov
push
ret
xchg
shrb
sbb
fs
stos
rol
dec
ja
mov
mov
fs
xor
psadbw
test
stos
imul
call
aam
rclb
cltd
or
jmp
int
stmxcsr
cmp
add
mov
cmpsb
cmp
dec
dec
lock
lods
ds
mov
nop
cmp
push
daa
lds
lahf
dec
stos
and
loope
and
in
aam
push
test
lods
loopne
push
cmp
fcoms
cltd
jae
jge
jmp
enter
iret
stos
out
pop
pop
test
adc
sub
stc
stos
pop
and
lock
stos
sbb
inc
stos
xor
mov
int
push
stos
pop
in
pop
xchg
push
push
cld
imul
stos
mov
adc
stos
test
mov
in
ja
adc
pop
test
xor
popf
loope
adc
stos
sbb
or
cwtl
sub
sub
inc
rorl
ficomps
nop
push
int
dec
mov
subl
jno
mov
inc
imul
push
stc
pcmpeqd
in
or
push
jo
push
xchg
cmp
stos
mov
inc
cmovno
push
fmuls
inc
cwtl
adc
cmpsb
stos
mov
mov
cli
stos
lods
cld
out
movsb
and
into
or
dec
xchg
sub
stos
adc
fldcw
stos
fstpl
cmpsb
inc
xor
push
gs
stos
mov
push
xchg
xchg
cmp
push
loop
nop
jo
adc
cwtl
cli
stos
push
in
cmp
scas
jno
stos
ret
xor
stos
mov
pushf
lock
stos
in
push
sti
push
lods
dec
or
pop
sbb
ljmp
sub
jae
pop
imul
inc
push
scas
mov
aad
push
inc
lods
cmpsl
pop
data16
scas
jl
mov
clc
mov
in
int3
test
into
mov
sbb
or
mov
sub
cmp
or
cld
pop
mov
sub
dec
into
mov
test
xchg
jle
sub
cmc
xor
testb
ds
sub
aam
cmp
jno
mov
incb
cli
outsl
mov
add
loop
xor
xchg
push
add
mov
inc
or
aas
loop
sti
stos
adc
es
jg
push
pop
imul
rclb
push
xchg
aas
imul
ja
jo
jmp
lahf
aad
push
stos
int
push
clc
and
stos
xor
insl
push
cli
fwait
sub
sahf
pushf
mov
stos
fimull
xchg
cmp
mov
imul
mov
stos
push
mov
out
jecxz
adc
dec
mov
cmp
xor
pop
stos
push
ret
imul
addr16
inc
fstpl
xchg
add
mov
stc
pusha
add
mov
fwait
add
mov
data16
cmc
pop
or
inc
psubq
stos
enter
int3
mov
stos
xor
or
pop
xor
push
stos
xor
sbb
les
ss
or
cmpsl
push
cs
and
inc
xchg
xchg
rcrb
call
stos
fwait
cmc
imul
lds
lods
test
in
mov
sub
jns
imul
xor
and
xchg
cmp
pop
cmpsb
clflush
data16
sub
gs
mov
xor
scas
xor
imul
das
sbb
push
xchg
jmp
imul
xchg
lods
xchg
inc
loop
or
push
sub
dec
scas
mov
int
adc
lds
repz
mov
xlat
or
out
or
pop
ljmp
sbb
imul
stos
mov
cmp
in
adc
push
sub
push
fwait
inc
aam
sub
inc
test
adc
add
cmp
push
lock
shlb
shrb
push
stos
add
stos
xor
xor
outsl
imul
negl
xchg
mov
ja,pt
fucomip
mov
adc
cmp
xchg
stos
enter
addr16
mov
std
inc
pusha
lods
popf
mov
int3
ja
stos
cmpsb
outsl
inc
scas
xor
push
jnp
and
or
sub
stos
in
roll
inc
stos
rol
loope
jbe
aas
and
xor
imul
stos
mov
xchg
movsb
mov
add
pop
dec
add
lea
int
dec
cmp
orl
or
repz
aas
imul
loopne
in
push
insl
mov
pusha
stos
inc
mov
rcl
imul
inc
pop
mov
stos
mov
cmp
popa
xchg
or
call
xor
xchg
pop
mov
jg
or
subl
imulb
cmp
mov
and
cmc
inc
jne
jecxz
leave
mov
or
mov
ret
jg
stos
sub
int3
adc
add
sub
mov
jne
sbb
stos
sbb
lods
pop
das
sbb
add
xacquire
stos
push
jno
pushf
lret
test
sub
arpl
mov
cmp
mov
stos
out
dec
rolb
out
mov
pop
ret
shlb
xchg
add
jne
loopne
push
jp
dec
adc
sub
stos
les
inc
cwtl
stos
mov
subb
stos
std
sbb
enter
stos
ror
shlb
mov
mov
xchg
add
inc
and
in
mov
mov
fmuls
sub
mov
popa
mov
cmpsl
inc
insl
inc
jmp
push
xor
fnstsw
jecxz
mov
inc
stos
xor
nop
cli
stos
pop
cmpsb
and
adc
xchg
or
xchg
sbb
jmp
std
stos
inc
scas
subl
xchg
sub
jmp
fldt
xor
or
push
lret
adc
sbb
push
mov
push
test
lcall
fnstenv
cmp
mov
sbb
stos
int
sti
mov
les
arpl
dec
test
inc
add
imul
enter
push
mov
cmp
stos
shrl
test
pop
adc
and
add
sub
stos
or
or
push
adc
stos
mov
cmc
data16
inc
stos
dec
cmpsb
mov
enter
dec
out
call
stos
xor
sub
add
dec
stos
xchg
cmp
cmpsl
lods
jp
push
jmp
mov
test
adc
ds
jno
or
repz
pushf
xor
shll
mov
shl
mov
in
or
jae
jmp
gs
cwtl
sbb
add
fdiv
xchg
sub
out
jb
pop
stos
jns
add
data16
inc
cli
and
inc
leave
stos
jmp
lods
je
test
mov
mov
xchg
ja
negl
retw
dec
stos
and
mov
es
adc
ret
in
add
insb
add
add
sub
xor
mov
arpl
cs
stos
mov
clc
jbe
popf
cmp
outsl
aaa
stos
mov
jge
fimuls
pop
stos
out
cmp
adc
stos
lahf
jle
popa
pop
xor
or
test
pop
xchg
iret
dec
mov
pop
mov
cmp
push
mov
push
mov
out
mov
jle
shll
adc
stos
push
ljmp
in
fwait
cmp
dec
in
xor
lea
aas
add
lds
outsl
mov
scas
bts
fs
sub
insb
xor
subl
jp
ljmp
push
lock
sbbl
int3
inc
xchg
sub
ficomps
popf
jo
jo
add
stos
je
jmp
jnp
lds
lock
sbb
pop
int3
mov
imul
outsl
dec
jg
or
daa
jb
inc
push
and
cmp
outsl
aam
or
imul
push
lahf
cmp
imul
mov
popa
mov
mov
xlat
inc
addr16
orl
adcl
jle
and
dec
test
cmpsb
stos
xorb
ja
xchg
or
sahf
faddp
inc
jl
sti
jne
in
int3
add
scas
cmpsl
stos
cwtl
lea
lods
scas
out
mov
stos
pop
jmp
jg
test
push
sub
addr16
inc
stos
sbb
adc
mov
out
aad
push
movsl
lods
movsb
stos
jb
push
ret
mov
ljmp
xchg
jecxz
lock
jmp
push
sub
lcall
push
into
das
rcrl
imul
jne
xchg
mov
insb
dec
and
loopne
stos
mov
cmp
out
imul
lods
mov
scas
ret
shrl
dec
loopne
imul
stos
pop
mov
mov
decb
stos
adc
out
mov
dec
cmp
xchg
scas
insl
notl
mov
rclb
jns
sub
orb
cmpsb
daa
push
lods
stos
fcmove
ds
imul
call
sbb
xchg
adc
fimuls
inc
pop
mov
hlt
adc
mov
jnp
arpl
fidivrl
rol
stos
scas
xchg
inc
test
cmp
fildll
add
push
sti
and
sbb
push
mov
lcall
arpl
inc
aad
fs
push
shll
stos
pushf
add
dec
jmp
adc
stos
mov
and
push
cmp
or
mov
mov
lahf
repz
arpl
das
dec
xchg
jle
in
push
psllw
imul
mov
mov
jns
int
imul
xchg
repz
pop
xchg
fs
stos
fcoms
jbe
inc
imul
stos
jb
add
stos
ljmp
mov
stos
and
pop
dec
adc
popa
adc
mov
or
lahf
and
mov
mov
push
leave
call
push
insl
mov
aas
cmp
stos
jmp
int
mov
jnp
addl
loope
xchg
jmp
stos
adcb
mov
and
ja
sbb
or
movsl
sbb
mov
and
jp
leave
cmp
mov
stos
xlat
xchg
mov
mov
xor
push
xchg
cmpxchg
stos
adc
and
mov
mov
add
mov
and
nop
push
jb
push
in
sbb
stos
in
xchg
out
cmpsl
mov
lods
pusha
mov
xor
pop
pop
sub
dec
fmul
pop
std
stos
add
hlt
rol
lods
icebp
imul
xchg
mov
add
add
jle
adc
cmp
xlat
jae
das
xor
jecxz
stos
hlt
out
push
mov
mov
push
xchg
mov
test
lret
lods
xchg
pusha
sbbl
in
pop
or
jmp
iret
mov
lea
cmpsl
jo
stos
inc
fwait
imul
lahf
lods
loope
stos
mov
mov
movsb
xchg
fwait
cmc
cmpsb
mov
adc
mov
sahf
stos
push
nop
cmp
cmpsb
jnp
and
push
push
jp
leave
ret
lods
shrl
push
test
das
insl
jns
cmp
bound
mov
or
and
sahf
call
call
adc
stos
pop
scas
inc
sub
daa
adc
fs
fwait
jle
mov
mov
in
rcrb
add
xchg
jmp
shlb
add
in
mov
sti
xchg
cmpsb
lea
flds
push
inc
push
ficomps
shlb
out
roll
inc
mov
cld
mov
fldcw
rorb
jns
dec
and
push
in
mov
stos
or
pop
mov
adc
push
stos
and
cmpsb
lahf
loopne
xchg
mov
stos
xchg
add
dec
jmp
mov
mov
aaa
pop
fldt
ljmp
popf
nop
cmpsb
lret
mov
in
push
clc
and
push
cmp
jmp
je
arpl
fnstsw
push
or
lods
push
mov
out
leave
mov
loop
in
in
xchg
xchg
adc
cmp
sbb
shrl
mov
push
stos
and
ljmp
daa
and
addr16
stos
jno
inc
mov
in
pop
sbb
dec
sbb
arpl
pop
call
mov
outsb
aas
mov
repnz
rorl
jno
jo
or
dec
and
jne
mov
pop
jle
les
stos
jmp
pop
loope
out
inc
jmp
xchg
in
int
in
dec
cltd
mov
sahf
out
lock
xorb
cmp
stos
shlb
pop
sub
jmp
stos
and
jo
mov
movsl
jb
lock
adc
jmp
lods
xchg
sub
ss
call
push
scas
mov
fisubrs
ds
ljmp
add
mov
int
sbb
shlb
inc
push
sbb
lds
xchg
cmp
mov
or
inc
int
leave
js
jmp
push
sbb
je
orl
and
daa
dec
popf
mov
std
arpl
lock
stos
fimull
push
mov
rol
adcb
pop
push
cmc
stos
sbb
adc
adc
sahf
mov
mov
pushf
xor
daa
xor
jne
mov
stos
stos
add
pop
jo
es
addr16
mov
mov
scas
inc
stos
mov
push
movsl
adc
inc
sub
stos
orl
mov
mov
mov
and
push
mov
stos
dec
pop
push
out
mov
cs
sub
scas
idivl
cmpsl
out
xchg
loop
clc
stos
in
or
mov
fwait
test
dec
pop
mov
stos
test
cmp
mov
pop
mov
cmc
int3
scas
stos
sbb
cmpsl
dec
stos
loop
out
mov
stos
in
or
mov
mov
inc
test
out
int3
stos
scas
fs
loop
cmp
jbe
rcrl
jmp
xor
xor
inc
and
stos
dec
xor
fwait
sbb
fldl
fstpt
scas
stos
test
popf
ficoms
mov
imul
mov
or
and
sub
dec
in
mov
stos
or
repnz
enter
stos
jne
pop
mov
or
stos
mov
aad
enterw
aaa
ficomps
bound
mov
add
mov
scas
ja
or
aas
jp
push
sbb
movsb
lret
mov
inc
adc
jne
mov
mov
mov
xor
dec
xchg
in
cmc
mov
cmp
mov
shlb
je
dec
push
addr16
lods
scas
mov
mov
cmpsb
cmp
lods
sbb
sub
stos
xor
neg
rcl
loope
in
pop
subl
lcall
push
push
adc
push
sbb
mov
sub
xor
mov
pop
mov
or
mov
popf
push
xor
push
les
daa
add
fsubp
push
into
mov
addr16
mov
or
and
sbb
mov
mov
mov
sub
mov
shrb
loopne
adc
roll
mov
cmpsl
lds
cli
daa
inc
jle
mov
insb
inc
jbe
sub
adc
jge
mov
imul
stos
jbe
cmpsb
test
stos
dec
xor
push
adc
scas
aaa
and
aam
inc
decb
add
mov
scas
js
js
add
fidivrs
nop
fstps
pop
and
shl
jmp
jmp
mov
push
mov
sarb
nop
imul
stos
test
push
ljmp
jb
sub
sub
and
popa
repnz
ja
imul
adc
in
test
aas
arpl
fwait
repz
xor
clc
xchg
mov
or
stos
cmpsl
shlb
pop
cmc
das
or
lock
jbe
cmp
iret
stos
xchg
popa
pop
int
call
sbb
fcomi
dec
pusha
stos
in
xor
xchg
sub
dec
mov
xor
cmp
inc
cmp
mov
sub
movsl
mov
pop
push
lcall
add
testl
rorb
pop
fidivs
jne
ljmp
fsubrl
jns
and
out
xor
mov
sbb
aad
lahf
lea
stos
mov
sbb
mov
daa
je
popf
push
xchg
fwait
mov
arpl
push
pop
adc
jmp
sub
and
xchg
push
scas
cli
stos
jmp
jo
jnp
in
or
pop
lods
mov
imul
stos
stos
test
xchg
cmp
out
fimuls
stos
bound
inc
inc
int
mov
sub
stos
out
mov
or
std
enter
adc
push
sub
cld
lret
sbb
push
pop
xchg
test
sbb
stos
sbb
xchg
fimull
lret
sahf
fstsw
stos
push
xchg
push
mov
ficomps
stos
nop
lcall
add
adc
stos
lock
rcrb
outsb
fcompl
stos
xchg
leave
jbe
xor
lods
stos
mov
sub
imul
stos
and
div
pop
repnz
mov
cwtl
pop
aas
mov
les
outsb
stos
sub
pop
cli
jecxz
and
dec
adc
call
aad
out
xchg
cmp
stc
fnstcw
mov
mov
cmp
call
jecxz
fwait
cmpsl
inc
das
test
jno
andl
inc
push
ds
push
nop
subb
mov
xchg
or
jnp
stos
or
sub
jae
cmp
stos
jbe
cmc
sbb
addr16
mov
push
sub
mov
in
xor
stos
das
scas
adc
cld
mov
pop
ljmp
stos
outsb
cmp
push
xchg
addr16
outsb
stos
in
add
mov
mov
nop
dec
sbb
adc
incb
pop
imulb
stos
pop
and
push
xor
pop
jne
xchg
stos
xor
sub
xchg
mov
lea
out
push
les
or
cli
mov
pushf
lods
mov
int
lds
push
stos
std
out
movsb
popl
iret
stos
push
sub
popf
shlb
sub
les
outsb
mov
stos
in
add
xabort
icebp
in
mov
add
cmp
jmp
aaa
sarl
or
sbbb
mov
mov
outsl
stos
push
or
shrb
jle
xchg
sbb
pop
lret
mov
cmp
push
inc
cmp
xchg
xchg
sub
out
aad
mov
stos
sbb
sti
bts
inc
mov
stos
out
js
dec
test
pop
stos
pop
mov
xor
imul
xor
pop
sub
loope
movsl
shlb
inc
xchg
xchg
pop
fstpt
pop
dec
lcall
adc
dec
xchg
test
loope
daa
arpl
pop
and
rcrl
and
or
mov
stos
push
mov
mov
lret
sti
push
insl
stos
pop
lock
clc
stos
pusha
push
imul
or
stos
fcmovnb
cmp
jnp
mov
jmp
call
xchg
int3
push
dec
mov
std
stos
sub
in
dec
push
jmp
ret
inc
ds
popf
rcrb
arpl
loop
dec
scas
xchg
lods
fldt
daa
xchg
gs
or
cmp
xchg
jp
push
stos
aaa
scas
je
ja
stos
sti
iret
mov
mov
sub
cmp
cwtl
ret
xchg
stos
pop
add
adcb
cmp
fsubs
or
or
stos
pop
out
add
inc
outsl
or
int3
and
iret
outsb
jmp
cs
push
scas
mov
rcrb
stos
leave
sahf
pop
out
mov
lods
cmc
stos
add
movsl
add
pushf
dec
cltd
lcall
and
fadd
popa
sti
fildll
ret
mov
xor
loop
std
aaa
pop
stos
xchg
pop
xchg
cmp
dec
out
jno
outsl
test
rcrb
mov
pop
adcb
sti
scas
testb
mov
sbb
stos
sub
ljmp
fsubrl
dec
mov
sub
leave
andb
pop
adc
xlat
inc
loop
bnd
mov
inc
inc
imul
stos
lea
jl
scas
ret
jmp
loopne
cld
ja
cli
push
inc
inc
sub
rcrb
xorl
xlat
jg
dec
and
popa
in
ret
xor
jmp
lock
cmp
shrl
cmp
or
int
cmp
fldcw
mov
cli
xor
adc
idivb
dec
jl
cmp
dec
pop
stos
imul
fldcw
mov
pop
test
push
xchg
fldl
adc
out
push
imul
stos
sarl
fwait
pushf
dec
loope
stos
mov
pusha
cmp
stos
add
mov
out
clc
mov
stos
cmp
loop
lock
fwait
jl
fsubrs
adcl
mov
cld
bound
push
pop
jg
stos
das
dec
xlat
insl
pop
mov
xchg
enter
aaa
fistpl
arpl
leave
and
adcb
rorl
ret
stos
or
call
jmp
lret
cwtl
aam
lods
cmp
sbb
xchg
gs
bound
lahf
pop
stos
xchg
les
into
and
fmull
cmp
push
scas
pushf
call
subl
in
inc
sbb
dec
sahf
stos
idivb
addl
stos
andb
scas
xchg
inc
dec
stos
add
xor
lock
xchg
mov
stc
xchg
loope
aas
dec
lret
jb
inc
mov
adc
ret
cli
icebp
xchg
dec
stos
dec
dec
mov
mov
in
xchg
aad
sub
jg
push
shrb
mov
imul
xor
sub
outsl
sub
repnz
inc
aad
cld
sbb
jmp
lahf
mov
mov
mov
xchg
inc
mov
and
push
xor
stos
mov
xchg
mov
in
dec
lahf
and
pop
cwtl
stos
andl
mov
mov
mov
stos
dec
inc
add
fistl
jge
ds
rep
mov
addb
adc
and
stos
xchg
adc
stos
popf
sti
ss
stos
test
jge
scas
add
and
add
stos
jnp
xchg
imul
dec
pop
fildll
pushl
push
cmp
test
bound
gs
aam
shrl
les
or
stos
ret
lret
das
pop
rcll
shll
xchg
stos
mov
adc
and
insl
and
push
dec
stos
daa
aad
mov
xor
repz
mov
int3
xchg
stos
jecxz
add
sub
stos
xchg
mov
jo
int
daa
mov
sub
int3
push
ja
scas
jno
and
rcll
pushf
js
mov
xchg
jns,pn
out
imul
jg
mov
loope
mov
mov
fdivl
or
rcr
stos
mov
cmc
inc
shrl
iret
shrl
sub
daa
incl
pop
lret
xor
into
repnz
fwait
icebp
jnp
mov
xchg
test
fidivrs
fisttpl
insb
mov
mov
ljmp
push
adc
inc
xchg
sbb
push
daa
movb
stos
je
nop
cmp
lds
mov
insb
jne
add
pop
std
add
sbb
test
repz
jmp
xor
stos
jle
and
push
jns
addr16
or
stos
addr16
dec
mov
stos
push
mov
pop
int3
fwait
testl
mov
push
pop
fsub
imul
mov
or
int3
stos
cmp
mov
sub
sub
inc
sbb
and
loop
ss
test
je
out
imul
ret
fildll
ljmp
gs
outsb
pop
or
mov
test
ficoml
fs
imul
xor
add
push
mov
jae
cmp
jb
mov
jns
add
jg
incb
es
mov
lds
pop
orl
push
ds
es
dec
lods
mov
xor
xor
xor
lea
imul
addb
mov
inc
test
jbe
aad
jb
imulb
stos
push
movsb
dec
xchg
xor
mov
out
xor
inc
sub
mov
scas
sub
fwait
sti
mov
lcall
js
movsl
and
add
push
fcmovnb
push
stos
push
repz
std
sbb
popf
add
aas
push
lahf
jg
iret
sub
sub
mov
mov
jp
sbb
scas
repz
daa
xorb
push
inc
pop
stos
dec
jbe
into
cli
rclb
mov
scas
jno
stos
stos
lret
insl
out
imul
xor
fwait
sarb
jne
in
cltd
stos
mov
xchg
in
repz
sbb
scas
enter
mov
stos
xor
ja
add
adc
shrb
fdivl
lods
xchg
and
stos
adc
sbb
stos
enter
aad
inc
movsb
push
pushf
das
cld
clc
pop
test
movb
stos
mov
jb
push
and
shrl
fsts
sbb
pavgw
sti
addr16
mov
dec
fdivs
stos
cmpsb
jns
lds
mov
fisubrl
jo
mov
stos
adc
sub
shll
dec
stos
push
cmp
andb
shlb
jns
sqrtps
nop
shlb
jne
or
xchg
jl
sub
dec
aad
lcall
and
sub
lea
pop
clc
stos
inc
pop
lock
mov
fwait
mov
test
xchg
mov
and
xchg
stc
xlat
sbb
lret
jns
and
shrb
push
into
fadds
add
aaa
fucom
xchg
mov
pusha
mov
add
imul
rorb
in
stos
dec
pop
cmp
stos
lock
hlt
mov
pcmpgtb
mov
imulb
inc
dec
loope
push
jmp
std
in
loopne
out
mov
movsb
fs
cmp
or
stos
dec
and
addl
mov
aas
push
push
pop
mov
jmp
xor
sbb
jnp
cwtl
je
pop
push
or
mov
hlt
lea
xchg
lds
hlt
push
es
mov
push
xchg
jmp
lods
test
pop
cmp
out
xor
jmp
mov
stos
sub
mov
stos
out
aam
pop
pop
xchg
arpl
sbb
push
subb
mov
stos
enter
xor
stos
popa
andl
add
mov
fmulp
or
in
jo
jns
pop
stos
clc
and
insb
scas
dec
push
stos
push
xor
mov
jns
xchg
add
lcall
ror
mov
movsb
inc
lock
mov
cmp
mov
sahf
test
jg
jecxz
rolb
mov
stos
ds
daa
mov
mov
leave
xor
loope
cwtl
lea
jmp
jecxz
push
mov
out
cmp
cmp
mov
inc
fidivs
lods
cmpsl
stos
push
xchg
scas
movl
dec
inc
pop
mov
aad
pop
add
pushf
jmp
cmpsl
xor
xchg
stos
aam
mov
cltd
stos
xor
jecxz
lea
stos
xorb
push
stos
xor
inc
test
popf
pop
dec
stos
adc
xchg
js
imul
and
lret
clc
push
xchg
andb
sub
andl
cmpsb
adc
and
ja
scas
push
or
jp
in
dec
adc
jg
sbb
sbb
add
imul
jg
add
cmp
imul
loope
in
mov
pusha
sub
adc
adc
repnz
sarl
lods
stos
push
fs
fadds
push
les
movsl
or
stos
cmp
popa
cmp
loopne
bound
ret
stos
mov
sub
stos
push
xor
inc
xlat
movsl
dec
cmp
pushf
stos
fs
pop
mov
xchg
mov
sbb
stos
in
jno
rolb
push
jle
cmp
jae
ret
push
insl
es
xchg
sbb
outsl
jl
popa
and
es
or
sbb
inc
add
sbb
xor
sub
inc
inc
in
stos
cli
scas
sbb
cmc
mov
stos
sbb
xchg
daa
scas
dec
mov
arpl
stc
jecxz
ja
pop
in
dec
stos
pop
fwait
or
stos
mov
xchg
std
imul
fmull
jo
imul
sub
xchg
push
pop
std
pop
add
cmp
pop
jbe
fsubl
fwait
addl
jp
insb
push
stos
data16
cmp
dec
test
mov
mov
stos
movsb
jae
mov
sub
cld
int
lock
push
inc
inc
stos
xorb
and
mov
sub
xchg
sahf
or
ret
mov
in
lods
sub
sbb
mov
pop
mov
stos
adc
inc
addr16
scas
mov
es
sbb
in
ljmp
push
jo
sub
adc
js
lock
imul
aas
jb
push
or
push
stos
push
test
xchg
ss
test
cmpsb
inc
stos
cli
sbb
or
imul
mov
stos
popf
push
xor
into
stos
mov
cmp
sbb
stos
incl
mov
stos
fisttpll
add
scas
pop
pop
cmp
adc
jae
out
lret
imul
mov
mov
stos
test
sub
ret
test
adc
gs
daa
mov
out
cli
daa
in
pushf
or
repnz
nop
xchg
stos
stos
xor
movsb
inc
xchg
mov
cld
sub
das
fldt
iret
push
stos
cmp
inc
loop
sbb
sbb
mov
cmp
mov
adc
rcr
out
and
stos
push
fwait
xchg
aaa
dec
mov
stos
xchg
lock
sarl
mov
mov
mov
push
loope
or
movsl
fwait
lret
stos
imul
adc
sbbb
jo
lcall
pop
push
adc
adc
pop
xlat
pop
in
cmp
arpl
jbe
pop
addl
in
mov
and
pop
and
ss
sub
push
xor
pop
stos
dec
fldenv
popf
fdivrp
in
pop
xchg
scas
jo
ljmp
dec
jge
out
ret
faddp
in
sbb
fucom
sub
stos
jmp
sub
mov
stos
sbb
jo
sub
daa
insb
xlat
divb
icebp
jp
xchg
movb
stos
xchg
ljmp
stos
pop
push
mov
mov
dec
stos
je
sahf
movsl
push
adc
repz
leave
test
rcl
js
stos
fstp
push
mov
imul
ja
stos
cmp
push
leave
sbb
push
test
clc
stos
add
imul
daa
jmp
add
and
stos
sbb
add
jo,pt
ljmp
test
divb
ss
nop
fildll
jno
sbb
sub
stos
pop
cwtl
pop
inc
push
shrb
xor
pusha
aam
stos
sbb
lds
inc
pop
in
dec
sbb
adc
mulb
add
stos
jle
inc
aad
pop
push
hlt
mov
das
fistpll
cmc
shrb
shrl
pop
movsb
rol
sti
fs
movsl
mov
cltd
into
nop
or
push
sbb
lcall
hlt
push
incb
xor
subb
adc
enter
dec
stos
scas
pop
mov
jns
dec
mov
mov
and
lret
sbb
sti
nop
fbld
push
scas
imul
sbb
imul
mov
mov
pushw
push
ja
test
lahf
mov
push
jbe
jle
das
lods
mov
cld
dec
in
or
and
and
stos
sbb
xchg
stos
outsl
addr16
imul
inc
or
xor
stos
ja
sbb
imul
orl
stos
leave
sub
lds
inc
pop
mov
inc
add
aaa
fidivl
mov
mov
pop
lret
sbb
jp
pop
fisubs
mov
data16
mov
inc
push
insb
xchg
push
ret
movsb
dec
out
mov
xchg
stos
sbb
lods
mov
jp
xor
fisubrl
rcr
mov
cmp
xor
stos
xchg
dec
push
lret
in
push
adc
hlt
push
push
jl
clc
jp
stos
aas
and
andl
repnz
lds
jmp
adc
xchg
subb
inc
mov
adc
sub
jecxz
aam
int3
mov
sub
movsb
cmc
jmp
ds
xchg
negb
lea
movsl
mov
xlat
stos
sbb
mov
sub
jbe
lock
cmp
stos
jnp
rol
aad
pop
stos
jno
pop
push
sub
sar
add
int3
dec
cmp
mov
arpl
mov
addr16
inc
dec
push
lcall
mov
mov
stos
mov
and
stos
ss
pop
jbe
xor
jmp
xor
outsb
pop
mov
xchg
or
lret
push
pop
and
pop
ficoms
pop
pusha
mov
sbb
stos
push
into
outsl
test
daa
inc
xlat
dec
mov
xchg
addb
mov
stos
je
jge
lcall
insb
lret
fiaddl
into
jp
jl
stos
pop
mov
mov
insl
imul
jae
jp
adc
cld
jl
dec
cmp
neg
and
mov
sub
inc
mov
fistl
movsb
mov
inc
xchg
xchg
mov
movsb
addb
dec
mov
addr16
fisttps
add
sub
or
adc
pusha
dec
bts
das
inc
push
out
ret
xchg
loop
cltd
es
dec
pop
pop
les
data16
stos
arpl
imul
jb
ror
out
dec
add
dec
pop
adc
sub
ret
stos
jns
push
push
cmc
cld
pop
bts
cmp
mov
stos
incl
shlb
jmp
dec
pusha
adc
mov
add
stos
out
inc
mov
pop
pop
dec
stos
sbb
fcoms
aaa
xchg
adc
mov
loop
hlt
add
cltd
stos
sub
xchg
ret
push
mull
mov
mov
jmp
push
and
push
push
sbb
mov
loop
sahf
cmpsb
sub
stos
aas
sbb
das
push
call
pop
pushf
test
inc
add
xor
pop
mov
cmpsb
dec
mov
dec
xchg
stos
add
jge
mov
out
into
jne
call
movl
imul
cmp
lods
push
push
fwait
pusha
sbb
mov
xor
push
add
mov
dec
xchg
je
stos
fsubl
outsb
mov
jp
mov
fwait
mov
pop
stos
sahf
push
inc
adc
mov
inc
scas
mov
lds
clc
mov
inc
inc
jp
outsb
add
stos
cld
jecxz
lret
mov
dec
dec
adc
stos
cmp
lahf
int3
or
cmp
jo
dec
js
sahf
test
push
pop
loop
sbb
xchg
scas
iret
mov
and
outsl
push
mov
imul
jns
ret
jg
stos
push
movsb
ret
scas
jo
and
mov
stos
fisttpl
cwtl
cmp
fldl
bound
or
hlt
push
xchg
cmp
iret
mov
stos
sub
pop
add
cld
ret
jmp
adc
mov
lea
mov
or
add
shrl
sbb
push
lods
call
jg
jl
mov
mov
sub
and
pop
imul
sub
push
mov
push
not
inc
test
aad
adcl
in
lods
jmp
rcpps
js
stos
sub
xchg
mov
stos
push
cmp
jecxz
fidivrs
shl
or
dec
lods
fisttpll
mov
add
xorb
cmp
sub
aaa
pop
mov
scas
push
inc
jns
fisttps
stos
decl
pop
aaa
push
push
pop
inc
shll
fisubl
mov
scas
aaa
in
push
mov
cmp
lock
jmp
sarl
negb
stc
mov
daa
inc
scas
add
add
sub
mov
dec
ret
sub
negb
mov
or
push
lcall
insl
xchg
ss
mov
mov
stos
sub
daa
pushf
adc
neg
push
push
xchg
add
stos
dec
mov
das
fwait
jbe
cli
stos
add
mov
je
cmpsb
pop
stos
jle
pop
inc
movsb
fwait
rcll
stos
jg
sub
pusha
js
in
mov
jae
sahf
cli
mov
mov
subl
add
dec
imul
push
dec
dec
inc
popa
das
push
shrl
mov
out
xchg
push
and
jmp
fwait
in
and
stos
add
jg
push
stos
es
shlb
jno
push
daa
pop
pop
testl
mov
xchg
sbb
shl
lea
stos
insb
cmpsb
ss
popf
into
gs
add
hlt
cmpsb
lock
in
sti
adc
fldenv
stos
aaa
jecxz
pop
divb
shrb
lahf
popf
stos
lcall
cmp
jmp
dec
aad
dec
mov
and
push
call
repnz
out
or
push
dec
jg
andl
fwait
rclb
push
scas
sbb
inc
in
xchg
ss
sarb
iret
dec
roll
mov
aam
inc
out
push
out
icebp
adcl
stos
lods
int
xor
ret
adc
cmpsl
repnz
ss
pop
mov
jno
jbe
mov
xchg
stos
les
pushf
test
cmp
mov
push
jg
out
and
mov
push
pop
gs
js
movsl
cmp
stos
adc
lahf
shrl
test
inc
mov
jmp
test
dec
add
inc
push
outsb
cmc
push
mov
adc
stos
mov
pop
mov
inc
mov
stos
push
xchg
or
in
arpl
dec
das
add
xchg
into
lds
data16
lods
jne
inc
push
mov
mov
add
or
int
imul
sbb
cmp
enter
rcrl
bound
shrb
mov
add
in
pop
pusha
mov
jne
sub
mov
xchg
mov
stos
or
xchg
movl
lcall
pusha
imulb
xchg
stos
cwtl
fwait
cli
enter
lret
inc
scas
mov
pop
adc
in
scas
and
imull
mov
fnsave
fistl
imul
add
mov
std
ljmp
sbb
and
mov
stos
repnz
inc
cmc
movsb
mov
mov
dec
in
sbbl
jbe
cltd
out
stos
sbb
mov
adc
jge
cld
push
jns
dec
mov
pop
mov
and
add
sub
sub
mov
lcall
stos
mov
mov
addr16
jo
dec
adc
stos
cmp
mov
mov
outsl
test
pop
out
lret
stos
and
xlat
cltd
jge
add
cmpsl
or
and
lods
and
call
shlb
repz
lret
imul
pop
mov
es
cmp
jo
push
and
stos
jmp
jns
ret
stos
inc
call
mov
arpl
or
loop
inc
imul
test
out
adc
mov
pop
jae
in
sub
aas
out
push
stos
loop
mov
jo
adc
ljmp
fsubl
ja
das
jge
xchg
arpl
lods
stos
cmp
fcmovnb
xchg
call
sbb
cmp
stos
or
dec
mov
stos
dec
xchg
xor
stos
mov
xchg
inc
lods
in
dec
and
dec
shr
xchg
and
stos
sbb
enter
lret
movzwl
lds
pop
repnz
adc
stos
fmuls
pushf
mov
lods
stos
aad
push
mov
cmp
clc
mov
and
xor
dec
cmp
xchg
orl
stos
cmpsl
xchg
xchg
in
dec
jmp
dec
stos
lcall
push
popf
movsl
xor
scas
sbb
stos
mov
test
scas
jne
lret
push
sub
jae
lock
int
xchg
stos
inc
mov
filds
arpl
adc
les
scas
shll
cwtl
sbb
out
lret
dec
imul
ss
xchg
adc
iret
mov
shlb
stos
sbb
push
out
or
fistps
jmp
xor
mov
sbbb
jnp
adc
in
mov
dec
stos
mov
push
adc
mov
push
stos
ljmp
icebp
std
dec
shrb
and
iret
and
aas
pop
stc
add
xchg
jge
xchg
lret
pop
insb
dec
stos
xchg
xchg
add
ljmp
adc
stos
imull
or
xchg
push
fisubrs
jp
mov
stos
daa
ja
add
cs
xchg
push
pop
mov
in
dec
jo
push
jg
mov
das
mov
test
or
mov
sbb
lods
jmp
jns
scas
mov
cmp
icebp
mov
sub
mov
mov
cld
insl
and
pop
xchg
stos
jge
dec
fst
fcmovb
mov
sbb
push
cs
aad
mov
scas
jno
fs
or
adc
imul
or
loope
mov
dec
sti
stos
data16
xchg
fsub
stos
lock
ljmp
mov
imull
push
jge
inc
fisttps
and
das
or
stos
cmpsb
and
xchg
je
dec
mov
pop
stos
imul
lahf
sbb
movsb
inc
filds
into
pop
stos
out
je
mov
dec
mov
stos
xchg
insb
push
das
or
xchg
stos
fimull
call
jmp
pushf
clc
mov
popa
fwait
add
add
adc
push
stos
dec
pop
les
ret
mov
out
mov
addr16
stos
loop
popf
div
or
mov
cmpsb
jae
push
stos
test
aad
push
sub
scas
ror
imull
pop
sbb
cmp
popf
imul
xchg
movsl
iret
imul
inc
mov
nop
jp
pop
xlat
fnstsw
ret
jmp
scas
jo
stos
sahf
mov
or
jmp
out
call
fld
ret
pop
lods
stos
push
and
das
sbb
jg
stos
cmp
jns
cmc
add
in
fists
arpl
mov
sahf
in
stos
or
sti
jecxz
movsb
rcrb
stos
orb
mov
xor
push
push
loop
mov
xor
outsb
dec
xchg
fnstenv
mov
jno
mov
cltd
cwtl
jbe
shr
clc
lret
lods
stos
xchg
fcoml
dec
mulb
ds
es
stos
jb
in
add
jns
mov
xor
repnz
cli
fwait
into
lods
cmpsb
imul
imul
stos
orl
shrl
ret
popa
movsl
scas
stos
xor
nop
mov
cwtl
loop
gs
ss
insl
lahf
out
jb
out
std
mov
mov
adc
jns
stos
cwtl
dec
loop
cmpsl
ret
aas
stos
xchg
cld
cmp
scas
out
inc
daa
and
xor
xchg
mov
sbb
in
stos
mov
loop
jle
pop
push
iret
sub
mov
out
jmp
pushf
pop
push
push
fcoml
movsl
fistl
addr16
filds
scas
dec
mov
jmp
xchg
ret
inc
lcall
out
cmp
dec
dec
sub
cli
stos
inc
outsb
mov
out
mov
xchg
and
fmulp
shlb
jno
push
outsl
xor
jmp
mov
xchg
lcall
mov
xor
cmp
dec
mov
xor
mov
stos
push
sub
push
stos
or
js
jp
and
imul
mov
mov
inc
mov
mov
dec
test
outsb
stos
sbb
cmpsl
decb
stos
mov
or
mov
pop
mov
stos
or
jno
int
stos
js
sbb
sahf
mov
xor
add
mov
cmc
mov
stos
inc
jb
iret
ljmp
mov
and
sub
int3
lds
jl
cmp
and
test
movsl
add
and
je
stos
xor
lahf
fbld
push
xchg
dec
addr16
mov
es
outsl
mov
dec
lea
clc
sbb
les
pop
sub
cmpsb
loopew
xor
sub
subl
or
stos
ja
cmp
stc
add
test
lret
xchg
ss
and
push
hlt
es
sahf
push
pop
stos
jecxz
pop
dec
loopne
lcall
lahf
adc
inc
subl
stos
sti
les
fwait
movsl
mov
stos
movsb
rolb
adc
mov
lds
loope
mov
test
insl
sub
inc
outsb
jmp
cmpsb
and
xchg
test
xchg
mov
push
insb
xchg
cltd
insb
shrl
ss
in
stos
fsubs
pop
pop
test
stos
sbb
cwtl
fistpl
dec
adc
lahf
push
rcll
add
stos
popa
fisubrl
mov
add
inc
sub
dec
lahf
push
popf
shrb
and
xor
sub
sbb
popf
mov
add
inc
stos
sahf
mov
lret
xor
push
pushf
cmp
aam
xchg
inc
movsl
fsubrs
popa
aas
jmp
xchg
arpl
repnz
dec
dec
jb
pop
cmc
sahf
pop
jmp
loopne
aam
ljmp
daa
push
orb
cmp
das
cmpsb
imul
dec
mov
stos
lret
aaa
jp
stc
xchg
and
push
stos
jbe
inc
shrl
imul
mov
xchg
jecxz
fisttpll
and
add
roll
mov
cld
adc
popa
mov
push
or
js
enter
or
mov
movsb
push
jns
mov
sub
data16
add
stos
mov
das
inc
ljmp
sarb
cmpsb
loope
stos
shl
clc
and
or
dec
xorl
ja
mov
adc
lods
sbb
xor
or
movsb
subl
stos
fs
repz
xchg
adc
pushf
stos
or
jae
cs
jecxz
mov
push
mov
pop
mov
out
add
stos
xor
shr
and
cmp
adc
push
xchg
lods
jp
in
stc
daa
dec
pushl
ret
aad
mov
into
stos
xchg
add
clc
int3
jmp
mov
jo
bound
les
mov
popf
push
stos
jmp
inc
mov
mov
stos
fists
lahf
mov
pop
stos
bound
shll
imul
push
mov
dec
jl
imul
iret
popa
not
mov
loop
je
fnstcw
or
add
xchg
test
jmp
xchg
std
sti
jne
inc
xchg
ds
stos
ret
fmulp
ljmp
mov
mov
mov
pop
mov
movsl
pop
dec
fistl
dec
jns
popa
in
mov
gs
sbb
jmp
stos
cmpsl
xor
addr16
mov
stos
pop
dec
cmc
dec
mov
inc
inc
fsts
push
cld
and
aam
in
mov
test
lods
ja
inc
stos
subb
dec
test
arpl
in
or
insl
idivb
arpl
mov
mov
js
mov
add
shll
dec
and
cmc
stos
mov
ss
push
cmp
stos
inc
push
push
cmp
dec
data16
fistpll
mov
test
mov
push
dec
sub
pop
out
pushf
mov
add
das
jbe
cmpsl
in
cmpsl
cltd
stos
and
add
xchg
mov
xchg
cmp
fidivl
lock
stos
dec
loop
and
pop
xchg
jecxz
std
mov
outsb
test
or
or
xchg
sbb
or
roll
jmp
add
stos
mov
mov
stc
outsl
fucomp
jecxz
jae
cld
addr16
sbbb
mov
mov
aad
stos
movsl
or
pushf
jmp
xlat
jmp
subl
inc
ret
fwait
mov
outsb
in
lret
stos
fdiv
xchg
dec
mov
or
or
xchg
mov
daa
in
ss
pop
cmpsl
add
aas
mov
xchg
aad
sti
push
inc
xlat
push
stos
bnd
push
dec
cmp
das
stos
icebp
add
in
jecxz
push
lcall
loope
or
and
stos
sub
mov
jbe
imul
in
rep
jae
cmpsl
pop
stos
fwait
shll
pop
enter
jl
cli
sbb
bound
mov
mov
add
lods
fidivrs
dec
mov
sarl
je
movsl
adc
mov
jnp
hlt
stos
shlb
mov
mov
jns
sub
leave
lock
fists
subl
stos
inc
dec
test
push
mov
sbb
mov
out
out
dec
mov
outsl
icebp
iret
std
xchg
mov
xchg
aas
ret
or
les
shl
arpl
jp
mov
cmpsl
pop
lock
leave
stos
add
and
mov
cmpsl
pop
add
addr16
sti
sbb
mov
lds
add
xchg
insb
int3
or
xchg
lods
in
aad
lods
mov
dec
inc
sbb
stos
jne
sbb
stos
call
mov
mov
or
mov
xchg
stos
ja
mov
test
inc
push
sbb
mov
jl
cmpsb
push
xor
mov
add
sbb
add
movsl
sub
jae
stos
adc
cmp
lret
jne
lcall
xchg
mull
jg
adcb
pop
in
arpl
pop
sub
pop
mov
lds
add
stos
mov
adc
std
fdivr
scas
mov
hlt
inc
dec
in
jne
fwait
cwtl
je
or
ficompl
pop
daa
fldcw
stos
sub
mov
repz
popa
pop
pop
popf
daa
mov
int
mov
stos
cmp
test
sub
mov
mov
test
fildll
sbb
stos
mov
sub
out
cli
and
and
sbbl
int
jle
std
fwait
inc
and
ficompl
stos
mov
add
adc
loop
pop
push
xchg
imul
scas
stos
dec
adc
jg
mov
aaa
jne
adc
push
xor
and
xor
daa
inc
stos
jb
test
sahf
fs
popf
xchg
pop
xchg
lahf
scas
mov
stos
mov
or
and
push
rcl
faddl
jns
sub
stos
xlat
loopne
rolb
gs
sub
jge
pop
cs
push
mov
ljmp
jle
into
stos
rcrl
leave
inc
push
rolb
mov
add
lods
ss
push
fisubrl
repz
je
mov
movsb
and
inc
sbb
jbe
fisubl
int3
mov
pop
dec
add
add
cmpb
nop
shrl
or
shrb
movsb
pop
iret
push
stos
andb
mov
sbb
jle
pop
stos
cltd
sub
or
mov
jo
filds
jns
xlat
cmp
das
adc
sbb
add
movsl
xchg
stos
pop
sbb
inc
out
stos
in
jb
test
fsubrl
leave
pop
into
and
sahf
out
cmp
stos
pusha
imul
addl
or
stos
push
pushf
ja
pop
fdivrl
stos
mov
hlt
fs
push
or
inc
idivl
int
stos
adc
sbbb
aam
mov
cltd
cli
sbb
arpl
mov
mov
stos
jg
xchg
xchg
imul
mov
jmp
stos
adc
jbe
dec
movsl
pop
pop
stos
push
mov
ja
sahf
cs
stos
mov
inc
fwait
aad
out
stos
sub
or
scas
cmp
mov
jbe
push
or
pop
jp
and
out
fimuls
std
notl
fidivrl
xor
cmpsb
in
push
loop
mov
gs
pop
mov
stos
sub
inc
nop
mov
mov
sahf
clc
add
in
rcrb
cmpsb
pop
mov
and
adc
into
fdivs
repz
jnp
or
jmp
fcoms
mov
dec
stos
push
push
aam
xchg
cmpsb
stos
mov
adc
enter
mov
into
fnstsw
imul
lahf
icebp
in
daa
test
bound
ds
scas
xchg
xlat
xchg
fstpt
or
xchg
dec
stos
pop
lods
imul
xchg
mov
push
ret
xchg
test
stos
into
fwait
mov
je
mov
inc
call
push
add
xchg
jmp
xor
inc
push
lods
loop
or
dec
add
fildll
stos
aad
push
int3
sbb
frstor
insb
scas
jno
jp
push
push
out
mov
sbb
divl
ficomps
stos
test
jl
sub
cmp
in
popa
test
repz
ljmp
sbb
lahf
ljmp
push
lret
or
fidivrs
add
test
xor
lds
mov
lods
jge
sub
lret
cld
sbb
std
xchg
or
fwait
clc
dec
mov
or
test
loope
jbe
aad
bound
xor
xor
sbb
mov
stos
pushf
cmp
rcll
push
cmpsl
mov
stos
mov
aam
fsubs
mov
aas
push
arpl
lret
repz
mov
leave
xor
ret
mov
lret
lds
leave
sub
mov
lcall
repz
stos
pop
adc
test
stos
call
lret
in
arpl
int
stos
add
nop
push
mov
mov
gs
pop
mov
in
enter
stos
adc
dec
or
jl
add
sub
andl
or
jl
rorb
movl
das
sbb
mov
jno
jo
test
push
push
stos
int
std
bound
hlt
insb
pop
out
xor
test
stos
mov
dec
or
stos
sbb
pop
out
add
stos
movsb
mov
jmp
mov
je
cwtl
sub
loopne,pn
xor
stos
pop
jae
mov
mov
out
cld
dec
addr16
sub
sbb
loop
leave
out
sub
test
mov
stos
push
dec
pop
sarl
lds
stos
jge
and
xchg
pop
jl
sub
and
mov
or
stos
mov
dec
jo
fsubrs
push
cmp
mov
xor
je
sbb
mov
stos
sub
out
mov
fiaddl
stos
popf
enter
and
cltd
rcrl
cmp
dec
push
out
aaa
outsb
addl
lds
jnp
push
or
mov
pop
push
inc
xchg
and
jbe
mov
adc
or
je
add
stos
stos
cmp
push
pop
test
add
sub
cltd
stos
lcall
in
ljmp
inc
stos
inc
fiaddl
jmp
mov
sub
mov
cwtl
inc
add
jmp
insb
aas
add
pop
mov
int
add
ficoml
arpl
js
dec
mov
mov
sbb
pop
cld
shll
stos
movsb
fs
std
fbstp
xchg
pop
stos
mov
aaa
inc
int
loope
cmp
mov
shlb
jmp
jl
out
xchg
mov
or
fbld
xchg
out
push
mov
add
mov
mov
cmp
push
int3
push
imul
push
rorb
cs
jecxz
clc
js
mov
inc
mov
sbb
pop
and
imul
mov
imul
fiadds
es
jb
mov
stos
push
jo
test
xchg
mov
push
mov
mov
shrl
and
loop
cmp
lods
jmp
jbe
adc
movb
das
or
or
mov
lret
jle
fiaddl
imul
jmp
xchg
icebp
cld
lahf
movsb
lock
stos
cltd
test
fwait
jge
cmpsb
imul
stos
dec
subl
stos
fiaddl
add
lea
movsb
jmp
cmp
sbbb
xchg
add
stos
push
out
stos
pushf
mov
mov
cld
jmp
dec
test
mov
stos
mov
push
mov
stos
xchg
aam
int
arpl
stos
lcall
push
xor
ror
push
xchg
mov
les
push
rorl
jmp
push
inc
push
mov
mov
xor
sbb
stos
rorl
in
stos
ret
in
fimull
mov
cmpsb
pop
enter
or
repz
xchg
sub
imul
xor
hlt
mov
repnz
mov
ud2
movsb
ja
ljmp
stos
mull
lods
imul
orl
adc
ja
mov
int3
sub
out
imul
addr16
outsb
cmpsb
push
mov
out
pop
test
stos
add
add
fisubrl
dec
loop
xor
fcoms
and
aaa
out
stos
fidivs
push
subb
arpl
mov
lods
push
cld
push
mov
ss
add
clc
ds
outsl
inc
and
lock
rorb
sti
shrl
sbb
mov
je
mov
mov
sbb
hlt
jecxz
sub
push
jg
lcall
cmpb
shlb
xchg
insl
mov
sub
adc
iret
and
inc
mov
stos
mov
movsb
sub
add
pop
push
jg
movsl
bound
stos
push
push
inc
sti
pop
int
cs
cmp
dec
or
inc
sbb
setne
stos
mov
loope
sbb
test
jne
adc
stos
stc
int
out
pop
aas
aam
test
das
sbb
inc
popf
mov
or
adc
dec
pushf
fistps
stos
jo
cs
cmpsb
add
push
jmp
test
loop
sarl
add
stos
mov
icebp
enter
dec
imul
pop
sub
push
and
adc
shlb
mov
stos
dec
sub
lahf
xorb
mov
out
lahf
xor
push
stos
cs
jecxz
arpl
sti
stos
pop
movsb
push
jo
imul
inc
sub
dec
or
scas
imul
jecxz
mov
arpl
imul
push
lcall
scas
scas
inc
dec
or
xor
mov
and
jl
xor
cmp
stos
out
cli
push
test
out
lahf
mov
mov
pop
fistps
xchg
and
stos
stos
lret
lods
add
pusha
sub
in
push
xor
fdivrs
pop
addr16
adcb
out
outsb
mov
sti
loope
or
xor
mov
into
stos
add
mov
push
bound
mov
adc
sub
adc
addr16
mov
mov
lea
xchg
jmp
mov
pop
add
xchg
insb
stos
or
into
fs
stos
push
filds
lret
pop
imul
ss
in
gs
addr16
sub
fldl
mov
es
loop
mov
std
jg
cld
mov
mov
fdivs
sub
jnp
mov
pop
mov
notl
sbb
pusha
xchg
stos
mov
and
iret
dec
stos
lea
xor
jle
adc
mov
call
add
lret
add
pop
cmc
xor
movsb
and
and
mov
mov
xchg
in
ret
sub
inc
mov
in
popf
jle
fdivs
push
stos
dec
mov
pop
stos
adc
sbb
stos
leave
lcall
and
mov
stos
push
sarb
push
cmp
stos
mov
mov
stos
mov
leave
roll
dec
cmp
adc
jg
mov
scas
xor
pop
ja
fldcw
lods
sub
rcl
pop
fwait
popf
jbe
push
stos
rcll
fidivrl
mov
inc
and
jge
dec
pop
mov
sub
stos
push
popa
xor
lcall
dec
jns
lcall
in
dec
ljmp
rcll
mov
hlt
mov
stos
inc
movsb
lods
sbb
fists
add
shll
dec
or
push
fwait
xor
daa
popf
mov
mov
or
outsb
add
stos
pushf
inc
xorl
and
mov
cltd
push
js
rorb
inc
mov
loopne
lcall
add
xchg
cmpsb
and
cmp
push
cs
sbb
jnp
or
cmp
aad
mov
addr16
std
subb
stos
pop
xor
inc
outsb
stos
movsb
adc
pop
in
jmp
pop
jmp
scas
or
pop
inc
or
jmp
fisttpl
aam
pop
stos
adc
imul
fisttpll
into
stos
add
dec
xchg
push
mov
xor
stos
cmc
adc
lea
dec
xchg
stos
addr16
scas
mov
mov
stos
push
xor
xchg
sbb
xor
stos
xor
xor
pop
fwait
es
push
js
sub
dec
xor
and
and
jp
xchg
mov
stos
shll
pop
mov
mov
stos
jne
sbb
movsb
mov
lret
mov
stos
mov
shrl
sar
out
pop
mov
cld
pop
xor
outsl
sarl
fwait
dec
scas
lea
mov
std
and
xor
inc
ret
int
sub
mov
mov
pop
out
gs
sub
mov
mov
rorl
sub
dec
push
fisttpl
mov
adc
mov
shll
add
mov
mov
and
lds
jnp
jne
stos
out
popa
pop
lods
and
pop
stos
aam
dec
cltd
sbb
outsb
popf
fwait
stos
push
mov
leave
mov
sub
inc
ljmp
int
mov
xchg
dec
adc
bound
cltd
stc
mov
stos
or
pop
or
and
mov
sysexit
stos
lahf
jmp
jne
lret
mov
aad
into
movsl
ficoml
daa
inc
cwtl
aam
insl
or
pushf
rcl
clc
jno
pop
jge
mov
mov
lret
pop
imul
popa
add
adcl
rorl
sub
loope
sahf
jecxz
into
xor
jbe
push
fisubl
pusha
mov
rcr
mov
inc
neg
outsb
repnz
stos
ljmp
subl
loop
data16
jae
add
add
stos
mov
mov
xchg
xor
pop
imul
mov
jmp
or
cltd
lods
inc
cld
std
jge
dec
xchg
sbb
leave
test
xor
bound
shrl
loopne
or
inc
stos
dec
imul
lret
cmp
add
lcall
imul
mov
imul
push
aas
adc
in
stc
ret
loop
test
push
push
pop
jmp
lds
imul
mov
mov
out
movsb
jne
pop
mov
aad
data16
or
data16
mov
addr16
arpl
push
test
inc
sub
push
fldcw
into
js
adc
push
mov
add
stos
or
inc
es
popa
or
stos
jne
and
mov
dec
add
pop
scas
mov
cmp
mov
jl
sbb
popf
pop
fstp
sbb
imul
jge
xchg
lods
and
lods
iret
mov
stos
sbb
push
xchg
stos
lds
sti
adc
jle
testb
mov
mov
stos
push
dec
rolb
jnp
sub
add
and
outsl
popa
stos
cmp
popf
test
push
push
or
sbb
xchg
scas
xchg
cmp
xlat
pop
xor
test
loopne
leave
cmp
andl
lods
adc
in
lods
stos
clc
add
xchg
inc
dec
stos
cmp
unpckhps
xlat
mov
fmuls
daa
jmp
lret
xchg
jae
nop
subl
mov
enter
das
jne
aam
lahf
dec
stos
pop
cmpsb
outsl
xor
out
rcrl
jmp
and
push
xchg
mov
sete
dec
test
stos
arpl
push
mov
lea
sub
jae
cld
push
dec
faddp
fcomps
add
es
scas
popf
jmp
mov
in
pop
stos
jae
xor
stos
push
out
sbb
cli
mov
inc
addr16
cmp
and
in
call
pop
repz
stos
fdivrl
mov
push
stos
rclb
out
dec
stc
jl
mov
popl
mov
mov
pop
cmp
lds
and
sub
les
in
mov
jmp
mov
test
pop
ljmp
sub
jge
stos
ds
insb
mov
out
and
or
and
and
dec
stos
mov
inc
loop
stos
jns
or
mov
shll
les
out
cltd
ljmp
cwtl
insl
add
sub
mov
std
dec
lods
pop
stos
dec
mov
aad
sub
adc
repz
and
push
sub
mov
stos
sbbl
xchg
xchg
push
push
mov
cmp
mov
pushf
mov
xchg
stos
xchg
insl
faddl
stos
cmp
mov
pop
fwait
stos
lods
movsb
ljmp
dec
stos
fmulp
dec
mov
dec
arpl
sbb
jmp
ljmp
ds
outsl
mov
xor
call
rorl
xchg
fwait
push
jne
pop
fsubr
inc
mov
stos
and
xor
stos
cwtl
dec
hlt
mov
nop
sahf
and
stos
aas
mov
sub
jmp
mov
mov
adc
iret
mov
jmp
push
shll
stos
xlat
into
stos
daa
movsb
xor
jne
mov
stos
xor
sub
mov
ja
dec
sub
addr16
and
pop
jbe
xlat
int
test
fsubs
lea
std
stos
mov
sbb
call
sbb
add
pop
push
imul
pop
pop
xchg
ss
mov
mov
stos
mov
jns
loop
js
stos
in
cmc
cmp
stos
pop
ss
jp
inc
push
int3
test
sahf
xchg
sbbb
dec
neg
sti
scas
jns
test
xchg
sbb
stc
stos
jbe
sbb
dec
sti
inc
jl
arpl
loope
xchg
push
sbb
mov
stos
pusha
pop
jbe
les
in
mov
jo
loop
push
lea
xchg
cmp
les
lahf
mov
or
pop
xchg
jmp
and
mov
jle
xchg
mov
dec
mov
inc
jo
dec
divl
scas
ljmp
ds
pop
sahf
stos
add
mov
clc
mov
aam
xor
dec
subl
sub
xchg
lret
push
adc
test
cld
cmp
lcall
test
or
dec
insl
adc
sbb
pop
imul
pop
lods
jnp
or
mov
subl
inc
ret
add
jl
pushf
sbb
mov
jb
xchg
stos
xchg
push
pop
dec
sbb
mov
in
xor
jge
dec
stos
bound
es
aas
jmp
shlb
mov
push
repz
cmc
push
adc
cmp
pop
in
movsb
mov
test
fsub
into
imulb
mov
lods
xchg
sahf
cmpb
dec
mov
ss
cmc
jmp
clc
jge
in
lock
mov
sbb
mov
cs
sbb
imul
movsb
dec
in
scas
les
call
mov
movsb
or
sub
lods
jmp
xlat
mov
cmp
sbb
imul
adc
in
repnz
sub
aas
push
nop/reserved
mov
js
orb
sub
int3
addr16
fsubp
xchg
mov
push
stos
cld
sbb
mov
push
pop
stos
test
xlat
cltd
sub
sub
xor
fwait
stos
in
inc
push
sub
mov
sahf
arpl
mov
movb
insl
mov
mov
stos
inc
add
xchg
push
xchg
aad
pushl
mov
xchg
pop
sti
stos
fstl
shlb
ss
mov
lret
lods
push
pop
push
dec
inc
mov
mov
outsl
xchg
fcoms
cli
imul
mov
shlb
movsb
addr16
in
add
enter
lods
stos
sub
xchg
je
movl
sub
imul
and
sbb
je
movnti
ss
inc
stos
push
cmp
mov
xor
dec
out
mov
stos
test
xchg
aam
movsb
nop
stos
lock
arpl
cmp
rorb
xchg
mov
popf
inc
gs
xlat
sbb
sbb
pop
fsubrp
pop
js
stos
lea
cmp
test
cmpl
jmpw
fwait
sub
cmc
xchg
push
mov
lret
push
rcr
test
rep
pop
xchg
mov
stos
outsb
fldenv
mov
pop
jl
xchg
adc
movsb
lret
mov
mov
stos
xor
xor
xchg
xchg
inc
stos
outsb
adc
fildl
bound
mov
in
out
adc
xchg
jns
gs
add
insl
mov
stos
das
mov
xchg
add
jmp
outsb
add
gs
stos
inc
push
int
sub
stos
data16
inc
jg
mov
xor
stos
jns
inc
mov
bound
mov
mov
imul
inc
mov
adc
pop
mov
std
mov
stos
inc
enter
or
jbe
jb
js
je
movsl
clc
dec
xchg
or
pop
mov
loopne
arpl
push
mov
cmp
lret
bound
and
flds
mov
xchg
out
pop
and
jne
xchg
test
mov
stos
dec
clc
rclb
mov
jmp
iret
sub
out
dec
add
rorl
stos
mov
lods
xchg
jno
and
or
lahf
daa
dec
and
cwtl
stos
loope
sub
jmp
dec
and
xchg
scas
in
mov
inc
xchg
xchg
fcom
stos
gs
adc
ret
nop
movsb
mov
les
cmp
cmp
sti
stos
push
imul
stos
pop
fdivrl
inc
dec
add
fistl
inc
leave
mov
xor
push
mov
imul
mov
fs
mov
and
int3
iret
mov
cld
cltd
jp
test
adc
cmp
aam
andl
leave
icebp
and
or
hlt
sbb
fs
and
ret
lmsw
add
or
fdivs
testl
mov
sub
clc
stos
int
insl
cmp
jno
addr16
stos
in
sbb
pop
jl
movsl
ljmp
mov
cmpsl
stos
clc
enter
aas
xor
cmp
stc
stos
xor
ficoml
stos
test
pop
pop
aad
fidivrs
dec
imul
arpl
xor
test
mov
in
inc
and
subb
shr
scas
ja
jle
add
insl
addr16
imul
sub
add
jno
arpl
inc
dec
pop
repnz
pushf
stos
cmp
loope
dec
in
fxch
stos
mov
pop
push
cmpsl
jbe
jp
shrb
or
pop
lret
ja
mov
ljmp
sub
mov
stos
daa
jl
les
mov
push
incb
shrl
leave
out
push
shrb
jl
cmp
jmp
daa
shr
sub
stos
xchg
ficomps
xor
or
mov
xchg
out
xchg
jae
jmp
aam
negb
outsl
insl
test
out
jecxz
fiadds
stos
pushf
xor
sub
dec
push
pop
es
repnz
clc
xor
sub
dec
mov
or
jge
sbb
inc
stos
pop
jbe
or
test
ja
inc
sbbb
mov
mov
jnp
sbb
shrb
jl
lock
int3
mov
lcall
stos
xlat
xchg
add
fsubrs
imul
pop
mov
stos
or
cli
add
pop
adc
xchg
arpl
stos
movsl
scas
es
call
stos
mov
aaa
mov
pop
jne
stos
loopne
sub
xor
or
sti
pminub
inc
add
add
and
cwtl
mov
dec
cli
lds
stos
and
ljmp
jno
xchg
push
std
fldenv
and
out
adcb
lret
jmp
in
inc
jnp
mov
or
mov
incb
dec
add
gs
push
jns
dec
adc
pushf
das
fdivrs
mov
fcompl
cwtl
mov
cmp
inc
int3
clc
fcompl
stos
cmp
les
loopne
xchg
std
pop
or
xor
sarb
mov
or
stos
pusha
stc
pop
mov
mov
stos
and
push
rcll
jb
cmpsl
ucomiss
frstor
mov
mov
stos
jg
jns
dec
stos
jae
pop
pop
scas
arpl
lahf
add
ss
add
or
xchg
mov
mov
push
fcoms
stos
mov
decb
stos
xor
jp
push
mov
stos
in
popa
pop
jecxz
mov
stos
jns
imul
aam
xchg
ss
call
cmpsb
pop
push
lahf
and
or
push
push
cli
cltd
test
shll
insl
dec
and
sti
jnp
push
xchg
pop
pop
stos
sbb
ffree
stos
clc
popa
cltd
or
and
pushf
negb
loopne
lret
out
fdivrl
stos
pop
jecxz
inc
shl
and
stos
mov
movsb
icebp
adc
mov
enter
mov
xchg
cmp
pop
jmp
das
ja
mov
mov
popf
scas
in
lods
xchg
stos
cmp
stos
fiaddl
pushf
outsb
jb
jp
xchg
lock
arpl
cmp
stos
mov
hlt
ret
ds
push
sub
mov
xlat
sbb
cwtl
fcmovne
icebp
push
xchg
xchg
out
mov
movsl
push
mov
faddl
scas
cmp
stos
xor
mov
push
stos
cltd
outsb
or
and
jae
sahf
pushf
stos
add
or
popa
add
in
nop
xchg
aas
mov
jnp
mov
icebp
fdiv
stos
shrl
cmpsb
adc
loop
or
ds
stos
sbb
push
sub
xchg
jg
xchg
fwait
aaa
cmp
lea
mov
ret
push
jbe
std
loope
stos
pushf
aas
jns
xchg
aam
cmc
out
xor
lods
icebp
mov
stos
adc
arpl
cltd
xor
out
stos
cmp
cmpb
aas
pop
jl
addr16
fstpt
mov
jmp
lea
out
arpl
rcrl
xchg
add
inc
int3
add
cwtl
and
int
push
jns
stos
mov
mov
sub
addb
jl
aaa
daa
arpl
js
in
int
add
nop
pop
adc
iret
stos
faddl
cmp
lock
mov
sub
cmp
mov
sbb
add
or
inc
cmp
push
addr16
insb
add
rorl
fcoml
dec
cmp
pop
and
and
xchg
mov
inc
fsubrl
into
sbb
push
stos
sbbl
jle
sbb
cmpsl
addr16
xchg
adc
dec
icebp
ljmp
fsubrl
push
ret
pop
stos
mov
push
das
loopne
subl
mov
inc
cld
mov
push
jo
imul
mov
andl
lcall
shlb
lea
bound
aaa
adc
fcomi
stos
push
js
xchg
rcrl
outsl
loopne
int
mov
popa
jnp
in
mov
pop
mov
inc
aas
cltd
stos
ja
fisubrl
sar
xor
xchg
mov
stos
int3
sub
mov
shlb
mov
dec
out
test
mov
pop
jae
fwait
lret
lods
jbe
adc
lret
jg
xlat
pop
sar
xchg
mov
stos
sahf
and
repnz
in
mov
fs
push
sub
daa
fldenv
jnp
lock
ja
adc
jb
std
mov
mov
clc
sbb
stos
push
xor
cmc
adc
sbb
stos
in
sub
je
test
movsb
pop
pop
mov
mov
lahf
inc
cwtl
inc
mov
lcall
mov
mov
loopne
sbb
or
popf
cltd
mov
data16
movsl
rcll
fldenv
mov
shll
push
mov
push
cmp
xchg
cltd
pop
stos
mov
sub
jg
mov
jmp
adc
mov
mov
sarb
sahf
aam
push
or
sbb
push
xchg
dec
mov
flds
xor
fstpt
cmp
stos
sub
cli
mov
adc
jmp
and
push
lea
outsl
push
sbb
negb
push
mov
dec
test
scas
clc
stos
shll
pmaddwd
stos
jg
pop
leave
jp
mov
stos
shl
stos
pushl
pop
stos
sub
enter
jp
dec
mov
push
sbb
and
or
pop
mov
imul
movsb
jae
stos
or
xor
sti
int
scas
ret
shr
inc
clc
pop
adc
xor
nop
lock
push
xchg
ds
xlat
lahf
mov
out
xor
jae
xor
fsts
test
outsb
fildll
in
stos
scas
popa
mov
inc
outsl
adc
stos
in
out
and
sub
stos
xor
cmp
mov
cld
sahf
addb
arpl
test
stos
fistpll
jno
inc
hlt
and
arpl
jb
mov
xsave
stos
lcall
out
stos
adc
daa
std
mov
xor
and
jae
les
push
test
bts
lea
std
jb
sub
xor
ret
lahf
jne
xor
push
jg
or
out
lahf
adc
mov
mov
stos
mov
fidivl
cltd
stos
mov
arpl
lock
rcrb
pusha
adc
cmp
movsl
push
out
mov
mov
mov
push
mov
cmp
adc
rcrl
xchg
push
push
jmp
pop
imul
mov
test
rcr
mov
iret
adc
ret
or
popa
arpl
lcall
adc
adc
adc
add
idivl
lods
cmp
cmpsb
xchg
sub
stos
adc
inc
adc
sti
inc
outsb
mov
cwtl
xor
or
and
in
je
fwait
pop
mov
inc
cmp
add
shrb
out
mov
adc
sarl
rcrb
insl
mov
outsl
ret
mov
ret
test
lahf
rorb
sub
mov
pop
das
icebp
into
shll
sbb
jmp
mov
fs
fsubrs
dec
pushf
adc
pop
imul
sub
popf
enter
sbb
mov
mov
bound
enter
stos
stc
leave
mov
repnz
inc
pop
cmp
fs
jle
scas
rep
mov
enter
jge
sbb
push
sub
imul
xchg
pop
ficompl
jle
push
jge
add
loop
xchg
mov
inc
clc
mov
outsb
fisttpll
dec
push
das
incl
stos
pop
std
lds
and
rorl
sub
jb
fwait
movsb
addb
push
push
mov
cmp
mov
cs
xchg
fistl
mov
sbbl
dec
imulb
xchg
adc
stos
clts
test
xchg
push
pop
ss
inc
pop
mov
xor
jmp
dec
jbe
stos
incl
in
xchg
add
stos
inc
cltd
jl
arpl
push
and
les
mov
lahf
roll
dec
sub
insb
sbb
push
addb
push
mov
jae
int3
pop
cltd
sbb
xchg
inc
mov
inc
stos
mov
xlat
push
sbb
arpl
mov
stos
sbb
int
jp
cwtl
shld
mov
or
cmp
dec
dec
imul
inc
sbb
lods
scas
jnp
sub
out
out
mov
adc
jmp
insb
add
movsb
fsubrs
mov
rolb
lods
subb
int
lret
stos
mov
adcb
sub
dec
nop
mov
stos
push
pop
shl
lahf
dec
pusha
add
cmc
dec
xchg
xor
nop
test
fidivs
xor
cli
in
and
lods
aad
int
stos
clc
jae
scas
mov
dec
cld
xor
rcrb
aas
sub
imul
mov
les
adc
or
xor
mov
pop
in
fwait
xchg
divl
nop
mov
out
in
jp
and
cmpb
stos
clc
fucomi
mov
mov
xchg
lds
mov
stos
xchg
testl
ret
sub
dec
xchg
mov
pop
mov
stc
mov
in
mov
pop
ret
sbbb
stos
stc
mov
xchg
lret
call
cmc
stos
stos
in
iret
leave
out
sbb
mov
cmpl
and
fstps
xchg
push
js
push
dec
fsubrp
push
sub
pop
cli
push
aas
in
push
dec
mov
push
xchg
mov
mov
data16
sub
call
into
jp
addl
lods
ljmp
inc
ficompl
stos
mov
in
adc
mov
cs
xor
cs
mov
push
xchg
hlt
lret
js
sti
int3
stos
test
pop
mov
ljmp
cli
xchg
or
dec
loop
shll
jmp
inc
mov
scas
out
scas
jp
add
sbb
nop
dec
ss
mov
cld
push
dec
jne
in
cmp
push
xor
cmp
dec
loopne
push
jae
xor
jnp
mov
enter
outsl
inc
cmc
mov
loop
stos
repnz
xchg
mov
mov
xchg
imul
push
cmp
cs
dec
pop
inc
xchg
mov
bound
stos
ja
xor
leave
daa
sub
inc
daa
scas
int3
xchg
cmpsl
xchg
mov
or
es
movsl
adc
incl
jl
push
ja
cmpsl
dec
jmp
sub
out
lret
mov
adc
sbb
xorl
fsubrl
pushw
std
sti
imul
dec
fidivrl
lods
mov
adc
mov
decl
rol
movsb
xchg
mov
clc
add
xor
sahf
push
cmp
sub
js
cli
out
sbb
stos
jne
cwtl
jmp
adc
aad
xlat
fwait
lret
cmc
jmp
out
add
push
or
mov
add
inc
mov
mov
add
int3
outsl
movl
or
outsb
repnz
aas
mov
mov
lock
repz
imul
inc
fidivl
mov
hlt
daa
into
add
outsl
mov
mov
cmc
mov
or
dec
adc
ja
stos
mov
pushf
aas
xor
pop
jmp
data16
jb
add
stos
xchg
inc
mov
cmp
sub
hlt
orl
mov
stos
out
pop
push
test
addr16
cs
mov
xchg
arpl
lock
inc
pop
ja
and
inc
jl
dec
addr16
fwait
aad
jns
cmpsl
push
imul
ret
ret
das
push
mov
mov
mov
stos
cmpsl
faddp
inc
push
push
add
test
jmp
sbb
mov
std
mov
add
and
adc
movsb
and
iret
sbb
stos
add
jne
xor
push
xchg
mov
adc
push
adc
pushf
stos
test
sbb
jge
arpl
adc
out
mov
fbld
daa
cmp
stc
xchg
stos
out
cwtl
inc
in
roll
sahf
cmpsb
shrb
aas
add
push
lds
xor
bound
stos
push
mov
xchg
stc
ja
or
rcll
mov
cwtl
jl
inc
out
out
push
adcl
lret
xchg
mov
push
lcall
jp
cmpl
out
cwtl
ds
cmp
testl
sbb
xchg
jg
mov
cmc
jbe
jmp
sbb
push
jmp
inc
cwtl
ret
mov
mov
movsw
add
mov
leave
std
push
mov
and
inc
stos
int
bound
push
mov
mov
push
es
dec
shrl
pusha
dec
and
xor
or
outsl
arpl
or
xchg
test
sub
lods
gs
mov
adc
hlt
fwait
sbb
mov
lods
out
push
icebp
gs
scas
imulb
xchg
xchg
and
stos
bound
mov
leave
std
xor
fimull
stos
mov
mov
push
lret
mov
mov
jl
stos
push
xchg
in
xor
xor
inc
gs
icebp
mov
shrb
nop
add
stos
xor
scas
aas
stos
mov
xchg
rcrl
sub
in
mov
pop
fwait
push
insb
sbb
dec
fmuls
mov
and
mov
mov
aam
adc
push
or
stos
dec
lret
or
xlat
stos
in
jns
popf
loope
int
xchg
jbe
cmpsl
in
xchg
mov
stos
in
mov
jecxz
and
cmp
mov
adc
or
jge
loope
inc
add
stos
push
daa
mov
mov
push
adc
mov
or
adc
ds
adc
mov
and
psrld
aad
aam
insb
je
lea
stos
and
popf
dec
xchg
push
jmp
jae
sbb
daa
sbb
sub
xchg
mov
int
aas
xor
movsl
xchg
lret
sbb
mov
adc
inc
sbb
cmc
stos
push
fmuls
fcos
xor
lods
imulb
fisubs
jmp
dec
or
cmp
jnp
fldpi
add
repz
mov
jbe
das
sarb
hlt
repz
mov
nop
stos
inc
or
mov
mov
xor
pop
rorl
xor
dec
lahf
sub
cmp
cmpsb
movsl
fs
or
xchg
stos
lcall
cmp
mov
jnp
out
divl
mov
add
jno
cmpsb
adc
adc
mov
lds
jo
mov
int3
sbbb
sarb
ret
arpl
sub
mov
stos
xchg
mov
push
xlat
aad
cmp
fucomip
fnsave
lods
imul
mov
popa
stos
and
add
adc
stos
xchg
and
pushf
daa
stos
in
ss
add
jo
and
inc
or
push
and
loope
jno
or
sbbl
cld
fstp
call
or
cmpsl
push
popf
push
ds
fidivrl
mov
xchg
mov
push
loopne
mov
sub
movsb
test
stos
xor
shrb
in
or
cmp
stc
add
mov
call
cmp
mov
shrl
pusha
xchg
mov
stos
mov
mov
adc
cmp
cmpl
push
xor
dec
xor
mov
jle
pop
mov
mov
int
dec
imul
sub
scas
push
or
notl
lahf
mov
movsb
push
call
adc
jl
mov
add
mov
push
hlt
sbb
xor
or
sti
and
pop
iret
cltd
stos
mov
pop
jo
stos
push
cmp
mov
jmp
sbb
je
push
mov
adc
dec
xchg
scas
out
sbbb
arpl
pop
and
gs
les
mov
popa
out
rorb
stos
fisubs
push
xchg
lods
pop
mov
mov
stos
in
jecxz
scas
fisttpll
cmp
hlt
sub
ja
sbb
mov
dec
push
xchg
inc
mov
mov
push
enter
add
lcall
lock
pop
repnz
shll
int3
pop
stos
scas
push
xchg
stc
cmp
inc
jmp
in
cwtl
fs
mov
cmp
stc
lea
stos
add
imul
stos
cltd
jns
dec
mov
and
stos
mov
ljmp
jo
nop
adc
cmp
aaa
push
aad
mov
mov
lcall
stos
test
and
or
stos
outsb
call
jo
stos
je
test
nop
or
stos
cltd
xor
loop
mov
jecxz
pop
xchg
fcoml
add
stos
ret
inc
sbb
addr16
cmp
stos
stos
insb
mov
shll
in
arpl
movsl
sub
jns
pop
cmp
ljmp
daa
cld
mov
or
push
cwtl
stos
push
divb
sbb
inc
inc
xchg
mov
dec
pop
stos
int3
add
cmp
dec
insb
or
ljmp
mov
cmp
adc
sub
cmp
push
cmp
scas
xchg
pop
test
jno
add
jmp
push
dec
jmp
rclb
xor
push
push
ljmp
imulb
jmp
adc
xor
cmc
mov
shlb
scas
jnp
test
fisubrs
mov
adc
push
in
pop
bound
rorl
inc
fsub
ret
andl
add
popf
stos
add
test
xchg
xor
pop
movsb
jge
xchg
xchg
mov
stos
or
adc
mov
and
jp
mov
out
scas
loop
inc
or
movsl
jmp
jle
mov
rol
xorl
aad
dec
push
xchg
mov
nop
adc
mov
mov
enter
leave
cmp
in
pop
data16
add
jne
push
add
inc
movsl
push
scas
ljmp
test
psrlw
mov
cmp
or
push
test
arpl
ret
mov
sbb
lret
enter
jg
std
addr16
jno
ds
imul
push
test
bswap
or
int
jnp
jmp
xor
jns
push
dec
sub
nop
loop
repnz
sub
and
clc
cwtl
hlt
in
push
call
mov
stos
pusha
out
bound
stos
pop
mov
add
stos
test
push
ret
into
stos
add
xchg
stos
pop
popa
fistpll
lods
cmc
xor
adc
mov
push
hlt
mov
aam
in
imul
adc
stos
jae
or
pop
loopne
stos
leave
pop
jbe
icebp
add
sub
jno
and
cwtl
jmp
xor
adc
or
stos
push
outsb
xor
call
sti
sbb
adc
mov
mov
int3
mov
aad
stos
pop
stc
sbb
jns
sbb
pop
cmpsb
or
aam
mov
das
xchg
mov
xor
int3
and
cld
mov
xchg
xor
add
imul
test
add
jmp
int
cwtl
or
sbb
es
lods
inc
mov
repz
sahf
int3
and
stos
movsb
dec
std
xor
dec
fsubrs
les
mov
jmp
sub
mov
fidivs
je
repnz
jl
in
mov
push
xchg
cmpsb
mov
mov
lcall
stos
lds
adc
fs
lret
sub
addr16
xchg
mov
insb
in
pushw
jmp
aas
jle
and
iret
lock
sub
or
adc
gs
pop
je
das
sbb
sbb
mov
sub
push
aam
stos
pushf
pusha
pop
popf
sub
minps
pop
push
sti
xor
fsubs
jmp
xchg
test
cmp
scas
repnz
mov
imul
fimuls
or
push
jg
fidivrl
fwait
je
push
arpl
lods
add
stos
push
and
cltd
mov
lods
push
test
movsb
in
lret
mov
xor
sub
xor
clc
fnstsw
mov
mov
dec
stos
push
mov
enter
loope
hlt
push
mov
cmp
nop
push
mov
push
add
mov
xchg
stos
pop
pop
push
push
lds
dec
push
lcall
or
jae
call
lcall
addb
stos
mov
xor
outsb
stos
ja
sub
imul
or
loop
stos
cmp
mov
sahf
inc
jmp
sar
pop
pop
mov
add
xchg
mov
xor
insl
mov
imul
mov
push
mov
sbb
dec
jnp
std
stos
jge
ret
sub
pop
int
or
or
mov
add
jp
lods
leave
clc
xchg
jmp
cltd
or
andb
add
stos
sbb
out
mov
inc
push
or
das
pop
addr16
pop
xchg
fisubrs
mov
xor
xlat
adc
mov
stos
pop
sahf
arpl
fcoms
lahf
stos
add
mov
dec
das
rolb
fisubrl
aaa
stos
pop
xor
lea
pusha
sbb
leave
loopne
cwtl
mov
sbb
imul
pushf
add
addr16
sbb
cwtl
jnp
in
stos
ficompl
add
in
adc
xlat
mov
sbb
dec
mul
mov
stos
push
xor
push
or
inc
mov
stos
popf
je
movsl
sbb
dec
fs
in
add
xor
push
stos
jl
mov
push
jge
sbb
push
ret
mov
daa
inc
enter
jb
loope
lcall
ficoml
sub
xor
stos
xor
in
sub
movsl
imul
jno
stos
test
cmpsl
push
aaa
mov
inc
push
jno
jno
sub
pop
and
jae
and
stos
insl
mov
jge
xor
rorb
cli
adc
dec
daa
sub
cmc
xchg
fisttps
and
cmp
xor
or
cld
or
pushl
ret
enter
pop
fnstenv
shrl
mov
xchg
test
inc
dec
mov
stos
adc
loop
iret
cltd
push
stos
ret
cmc
cmp
or
insl
push
push
arpl
jbe
dec
mov
aas
stc
out
stos
loop
push
push
lret
xor
out
stos
and
push
stos
cli
lcall
dec
shrl
dec
mov
mov
lock
rep
xor
stos
js
sahf
or
stc
xchg
push
mov
mov
cmp
dec
sub
or
stos
pop
loop
cmp
stos
mov
mov
aad
stos
stos
lods
mov
outsb
inc
sbb
movsl
insl
inc
pushw
jle
sahf
repnz
pop
adcb
movsb
lock
sub
out
pop
inc
stos
inc
mov
insl
jmp
popa
sub
jno
sti
mov
stos
sbb
mov
inc
loop
pop
fbld
stos
or
xchg
push
jl
into
stos
fisubrl
jecxz
pcmpeqb
add
pop
in
push
xchg
add
mov
push
mov
repz
jp
mov
xchg
into
ljmp
lcall
filds
shrl
adc
pushl
mov
loope
xchg
stos
xchg
jp
sub
js
stos
and
daa
aam
rdmsr
pop
jbe
sti
sub
sbb
mov
dec
jle
xchg
sub
xchg
out
daa
xchg
cmpsl
lea
mov
mov
push
push
cmp
rcrb
ret
daa
lret
shrl
mov
stos
sub
sbb
mov
xchg
stos
mov
push
js
std
push
mov
out
ds
andb
and
push
cld
stos
testb
imul
addr16
jnp
cmp
lret
std
out
fwait
cs
cwtl
sbb
ja
add
movsb
xor
sub
mov
je
jecxz
test
add
stos
call
add
add
stos
adc
inc
dec
xor
dec
stos
fisubrl
ss
mov
push
ret
enter
imul
hlt
jg
sahf
int3
jp
xchg
cmc
cmp
insl
repnz
cld
dec
push
icebp
loope
cmp
gs
mov
sbb
pop
pop
xchg
push
jle
xchg
stos
xor
pop
dec
test
popl
push
push
addr16
mov
daa
mov
dec
mov
subl
jbe
aaa
stos
flds
sarl
dec
es
or
icebp
adc
stos
lock
xchg
mov
push
mov
aam
mov
xor
stos
rcrb
int
xor
mov
cwtl
testl
ds
and
test
pusha
fdivp
stos
movsl
sarl
jns
pop
lret
lret
and
add
outsb
sbb
in
shlb
push
mov
mov
stos
sbb
or
dec
xchg
nop
mov
sbb
inc
dec
mov
stos
pop
hlt
mov
and
sub
popa
int
jo
fistl
adc
xlat
fisubrl
pop
bound
cmpsb
stos
xor
pop
xorb
shlb
mov
mov
stos
or
inc
mov
cmp
jmp
icebp
out
pop
xchg
xor
pop
fisubrs
xchg
push
arpl
stos
push
repz
pop
aaa
push
mov
daa
sub
aam
mov
arpl
cmpsl
cmp
push
push
inc
inc
mov
push
les
sbb
mov
mov
dec
sub
jl
stos
aas
mov
iret
push
fs
arpl
sbb
mov
iret
mov
dec
fistps
lock
lret
add
dec
rorl
mov
pop
inc
lcall
rcr
sahf
mov
dec
pop
sub
clc
xchg
decl
push
sbb
aaa
popf
fs
cmp
pop
rclb
or
nop
mov
addr16
push
and
xchg
dec
jns
mov
shrl
in
mov
ds
dec
addl
rorb
les
dec
in
xor
add
sub
stos
push
adc
xor
cmp
mov
and
stc
repnz
in
mov
pop
stos
jnp
push
inc
dec
shll
cltd
sbb
dec
push
mov
movsb
nop
add
xchg
push
mov
jo
ja
push
inc
mov
xor
add
nop
jno
scas
stos
fnsave
push
std
pop
pushf
jl
mov
pop
nop
or
fdivs
addr16
sub
cmp
lcall
xor
mov
je
mov
out
xchg
mov
fs
fcomip
lcall
sbb
lods
stos
fs
call
dec
mov
xchg
pop
push
icebp
cmpsb
adcb
lret
dec
popf
into
lahf
stos
loop
loopne
je
repz
xchg
or
cmpsl
lcall
sarl
bound
and
xchg
insl
inc
mov
mov
mov
mov
ret
mov
stos
and
xchg
dec
mov
in
push
jne
dec
jbe
mov
daa
xor
arpl
cwtl
bound
xor
push
cmp
jb
add
sbb
add
mov
loope
stos
and
or
addb
stos
inc
or
sti
push
cmp
lods
std
pop
sub
int3
sub
aaa
pop
loope
stos
in
scas
mov
xchg
mov
xchg
lds
mov
outsl
jg
arpl
aas
std
popf
jae
ror
mov
stos
xchg
add
cmp
mov
and
repnz
push
gs
push
jmp
insl
mov
stos
imul
stos
mov
test
jmp
shrb
pop
mov
popa
out
mov
aaa
xchg
loop
or
pop
jp
dec
adc
imul
lods
clc
stos
xchg
push
xor
movsb
push
jnp
daa
enter
mov
stos
mov
fnstcw
mov
or
cld
dec
out
sub
push
pushf
std
ret
push
dec
dec
outsb
cwtl
push
sub
out
test
loope
or
mov
fcoms
stos
inc
push
jg
mov
test
and
lods
lods
out
pop
jl
and
adc
int
cld
ja
sub
xor
jns
idivl
sbbl
pop
jno
mov
nopl
and
pop
xchg
stos
in
push
mov
pop
add
mov
call
inc
mov
jg
sbb
mov
stos
dec
cmp
sub
stos
adc
fwait
lahf
jle
sub
scas
stos
push
dec
dec
pop
cs
stos
cmp
scas
push
inc
jns
stc
stos
jmp
inc
fisubl
sarb
jle
or
mulb
daa
xchg
cmp
jl
lods
adc
mov
stos
pop
and
mov
xor
scas
xchg
sub
cmpsl
in
lds
sub
movsl
daa
jb
in
sub
ja
or
add
lcall
mov
movl
pusha
pushf
cmp
cmp
jmp
jmp
test
mov
es
xchg
ja
xlat
imul
out
test
xchg
pop
xchg
dec
ds
push
pop
jle
movsl
xchg
sub
sbb
cmc
mov
adc
negl
pop
mov
bound
rcrb
xor
aas
mov
fnstsw
mov
dec
adc
ret
dec
subb
xchg
out
mov
sub
sbb
pop
pop
xchg
mov
nop
clc
sahf
mov
lret
es
jns
iret
stos
pop
adc
add
in
jo
out
pop
fisttpll
lods
outsb
xchg
stos
ret
jecxz
dec
pushf
je
int3
bound
cmp
ds
fsubs
inc
sahf
inc
mov
ret
stos
imul
mov
jmp
mov
js
cli
push
stos
dec
cmp
decb
xorb
adc
test
add
jmp
dec
loopw
push
xchg
mov
lds
stos
rcrl
and
adc
mov
dec
mov
xor
xchg
cmp
dec
jmp
jo
pop
push
mov
in
mov
loop
cmp
div
xchg
mov
stos
test
jle
push
cld
notl
enter
xor
mov
das
pop
shll
lea
add
jp
add
movsb
les
pop
out
daa
cmp
pop
or
lds
addr16
jl
push
mov
jne
lock
imul
inc
inc
jmp
sbb
add
stos
or
adc
push
repnz
add
out
mov
popa
ljmp
mov
bound
sub
jno
xchg
mov
jnp
dec
dec
and
adc
insl
sahf
int3
jb
stos
add
cli
xchg
sbb
loopne
mov
jle
mov
xchg
mov
cmp
push
stos
xor
adc
aad
jne
cmp
jecxz
es
stos
mov
dec
xor
lods
cmp
mov
aam
and
mov
ret
pop
push
mov
stos
inc
aas
push
push
testb
test
mov
sub
pop
add
push
fnsave
mov
gs
inc
in
sub
cltd
pop
stos
movsb
insl
push
cmp
push
or
in
and
push
stos
xlat
xor
sbb
lea
stos
inc
cmp
or
stos
out
sub
mov
shll
imul
icebp
data16
jl
in
imull
push
stos
push
lcall
stos
xor
es
mov
loopne
stos
dec
dec
cmp
mov
stos
sub
jno
stos
std
mov
add
aas
mov
inc
subb
ret
ljmp
inc
repnz
sub
stos
xlat
imul
cmp
pusha
les
mov
shlb
push
jnp
iret
iret
stos
xchg
xchg
add
in
in
outsl
mov
stos
into
js
push
aad
stos
inc
or
mov
subl
xor
outsl
xchg
add
pop
icebp
stos
cmp
not
sbb
decl
int
aas
nop
lret
aad
mov
jbe
and
out
inc
add
in
inc
cltd
pop
shrb
insb
dec
pop
pop
and
adc
shrl
nop
mov
lds
cli
cmpb
cltd
stos
or
adc
xchg
je
xor
mov
imul
sbb
add
mov
imul
cmp
sahf
cld
test
stc
jle
fcomip
mov
mov
int3
pop
lods
in
jo
outsb
mov
mov
and
cmp
stos
push
mov
fisubrs
and
jns
adc
stos
std
mov
pause
dec
js
leave
daa
dec
stos
push
cmp
stos
sub
adc
cmpsl
int
scas
test
hlt
xchg
mov
mov
rcl
inc
jle
sub
stos
shll
jne
in
mov
sub
dec
out
les
shrl
iret
sub
mov
lea
test
mov
inc
push
mov
xlat
xchg
sti
dec
sbb
enter
lods
xchg
stos
je
add
imul
sbb
out
pop
movsl
scas
stos
jecxz
cli
cmp
jl
aam
andb
xchg
xor
push
xlat
repnz
aaa
out
gs
mov
mov
int
or
mov
jne
gs
into
mov
pop
stos
mov
ds
fiadds
lock
pop
cld
dec
jmp
mov
arpl
stos
inc
cmpsl
jb
jg
bts
pop
ror
stos
mov
jnp
popa
daa
loopne
rorb
mov
repnz
mov
outsb
scas
stos
int
and
js
push
shrl
stos
xchg
push
and
test
xchg
dec
shrl
push
testl
icebp
lahf
sahf
stos
loop
push
adc
jecxz
imul
xchg
cmpsb
gs
sub
jl
push
stos
lea
xor
stos
xchg
outsb
jae
mov
cli
jmp
push
fdivrl
cmp
scas
and
xor
aad
stos
arpl
les
add
outsl
xchg
inc
mov
mov
sbb
stos
xchg
lahf
add
rorl
stos
in
aam
push
pop
into
stos
jmp
stos
lock
push
leave
aas
sbb
jo
cmpsb
sbbl
or
mov
popa
scas
sub
hlt
sbb
adc
stos
jne
movsl
mov
cld
shl
mov
jbe
mov
stos
addr16
mov
mov
iret
stos
xor
sti
dec
sbb
loope
test
push
fs
jmp
and
pop
ror
stos
fcoms
cld
mov
test
add
out
xor
mov
insb
lahf
stos
inc
dec
sbb
nop
stos
mov
ljmp
sbb
rcll
cltd
daa
xor
mov
stos
jb
mov
sub
mov
xchg
ja
pushf
stos
js
mov
or
jl
pop
mov
ret
push
shll
test
roll
leave
jns
sub
insb
fisttps
push
movsl
pop
mov
mov
jo
pushw
inc
mov
inc
arpl
jmp
mov
push
ret
scas
dec
lahf
sbb
cltd
dec
imulb
ds
bound
xchg
scas
adc
cmp
leave
mov
loope
repz
cs
popf
jp
xor
pop
gs
push
mov
adc
jle
in
aas
sub
inc
cmpsl
loopne,pt
adc
mov
sub
lds
stos
mov
mov
xor
imul
xor
shrb
add
inc
js
jae
push
mov
inc
rorl
jmp
xor
xor
mov
loope
stos
add
pop
cmp
dec
stos
lock
addb
adc
call
dec
mov
push
mov
stos
and
jle
mov
inc
lds
cmp
stos
ljmp
push
sub
mov
sub
clc
out
jge
push
or
test
movb
loopne
cmp
ja
aas
dec
sub
insl
hlt
fdiv
stos
sti
jle
lret
inc
mov
cltd
or
ja
mov
add
dec
stos
sarl
dec
je
fst
add
xlat
lock
cltd
fildll
insl
push
adc
stos
xchg
int
call
dec
add
pop
jle
out
cmpsl
stos
cmp
mov
xchg
add
stos
dec
pop
stos
mov
out
leave
stos
push
out
cmp
mov
sub
or
stos
lret
sub
pop
daa
and
stos
dec
mov
enter
jg
test
push
add
mov
stc
push
imul
sbbl
sbbb
sbb
fnstenv
icebp
stos
repnz
push
stos
addr16
stos
andb
push
xchg
push
push
fnstenv
int
xchg
sbb
jmp
test
cmc
int3
scas
loope
cmp
stos
fs
push
daa
lcall
add
pop
mov
imul
sbb
ret
mov
les
pop
or
push
jnp
push
aas
lcall
add
cmp
pop
stos
stos
mov
inc
stos
int3
mov
pop
xchg
adc
stos
mov
insb
mov
imul
dec
xchg
xor
push
sub
test
inc
daa
pop
xor
jmp
cmpsl
dec
popf
pop
repz
cwtl
sub
push
pop
test
mov
idivl
adc
test
mov
shrb
test
int3
mov
imul
jb
popa
cltd
stos
mov
mov
sub
stos
scas
jno
insl
jne
gs
cmp
stos
mov
fmul
jl
bts
bound
stos
lods
ficoml
push
jbe
or
push
aaa
ja
test
fwait
push
lds
fnstsw
in
sbb
fwait
clc
stc
inc
jae
incb
push
mov
sbb
int3
daa
xor
stos
adc
xlat
andb
test
xchg
lcall
mov
cli
mov
and
les
and
subl
or
inc
ret
push
sub
lods
imul
mov
shrb
or
mov
pop
in
pusha
jg
cmp
pop
sub
stos
pop
je
pop
test
jo
outsl
mov
inc
scas
arpl
leave
add
adc
mov
js,pn
push
iret
and
arpl
mov
fs
mov
pushf
push
stos
in
mov
icebp
xchg
stos
insb
negb
cmp
out
lret
inc
ljmp
adc
push
xchg
and
inc
jmp
sub
scas
add
xchg
stos
cmp
scas
jne
stos
lcall
push
jmp
stos
add
jae
mov
mov
and
mov
pop
jp
pop
fildll
xor
loope
stos
ror
std
mov
jl
jmp
jle
mov
aad
mov
dec
mov
repnz
cwtl
xchg
add
jmp
imulb
int
mov
xchg
mov
fwait
mov
push
mov
loopne
test
pop
fs
clc
fldl
jne
mov
lret
push
xor
adc
addr16
sbb
lock
adc
lods
xchg
mov
hlt
mov
movsl
aam
ja
shl
subb
ret
stos
or
movsb
aam
push
pop
cmp
or
pop
je
mov
fsts
dec
inc
cmp
scas
jmp
hlt
add
mov
stos
xchg
in
sub
dec
stos
mov
pop
push
push
xor
add
call
sub
mov
xchg
daa
inc
sti
pop
stc
sahf
out
stos
in
mov
imul
push
aad
adc
pop
jmp
daa
loopne
outsb
mov
sub
jmp
in
pop
out
test
fsubr
xor
cmp
xchg
and
je
jns
mov
inc
fwait
pop
or
stos
hlt
xchg
mov
jne
call
ffreep
xor
jnp
stos
xor
test
mov
decb
and
daa
andb
xorl
cltd
imul
shrl
mov
sbb
adc
ret
fisubs
jnp
push
jle
cmp
movsl
sbb
and
cmc
daa
dec
xchg
xor
out
cltd
sbb
mov
cmp
pop
push
cmpsl
xor
fsubrs
movsl
fistps
xchg
int3
xor
dec
into
pop
adc
dec
pop
stos
popl
mov
lea
mov
sub
cmp
xor
push
adc
stos
in
rcll
scas
cltd
imul
push
pop
mov
popf
and
imul
insl
out
add
stos
fbstp
and
scas
into
jb
iret
aam
insb
xchg
cld
dec
stos
arpl
mov
mov
test
stos
sbbb
inc
mov
or
adc
and
cwtd
bound
arpl
inc
inc
push
xchg
jbe
or
in
push
inc
jl
int
stc
jmp
out
sbbb
jmp
push
xor
dec
pop
das
xchg
out
push
stos
pop
sub
fs
and
stos
jl
mov
roll
add
ja
xor
movsl
add
mov
xlat
imul
mov
shll
add
stos
cmc
pop
adc
or
repz
sbb
scas
dec
shrl
addl
mov
inc
push
enter
mov
push
repz
lds
stos
sbb
outsb
jle
movsb
sbb
adc
push
imul
cli
and
xor
and
and
xor
mov
adc
pop
mov
ret
nop
add
xor
movsl
jo
test
add
repnz
stos
fwait
pop
mov
or
jecxz
jge
dec
stos
imul
sbb
aad
xor
xchg
insb
mov
addr16
add
jg
adc
push
push
scas
imul
sbb
xlat
mov
xchg
mov
stos
push
sahf
and
stos
push
fs
jne
dec
bound
xchg
dec
xor
mov
jnp
sub
sbbl
mov
add
xor
int
and
loopne
mov
or
ficoml
push
ficoms
push
cmpsl
sub
lds
sub
mov
push
nop
imul
cmp
push
mov
stos
call
inc
dec
sub
cltd
sbb
insl
fistpll
es
das
addr16
std
stos
pop
int
fwait
cwtl
and
ss
pop
sub
mov
fcompl
adc
call
leave
out
mov
stos
stos
mov
icebp
in
pop
fwait
adc
clc
xchg
push
into
data16
cmp
in
dec
sbb
popa
insl
stos
lahf
test
clc
loope
aaa
stos
das
jne
test
es
imulb
push
enter
mov
and
sarl
cltd
xor
fld
or
sub
inc
sti
lds
inc
int
scas
pop
xchg
mov
sbbl
jae
leave
data16
daa
or
xorb
adc
mov
push
lods
mov
ficompl
lds
add
sbb
insl
test
enter
movsl
dec
mov
and
repnz
pop
setge
stos
ds
jb
sbb
dec
pusha
adc
add
fbstp
hlt
and
cmpsb
cmpl
jmp
or
mov
dec
lcall
arpl
sub
xor
rcrl
int
stos
add
jp
jle
arpl
daa
push
aam
aad
sahf
sub
clc
leave
stos
in
adc
bound
std
mov
adc
test
repnz
mov
and
add
pop
mov
mov
sbb
in
and
frstor
shl
adc
dec
mov
mov
sub
mov
stos
and
lret
imul
dec
and
outsb
mov
xchg
les
mov
and
push
sub
dec
mov
adcb
iret
inc
pop
sahf
stos
mov
mov
cmp
addb
xor
push
ljmp
mov
scas
pop
xchg
mov
dec
std
or
imul
call
xchg
rcll
jne
mov
pop
mov
bound
or
stos
test
loope
ret
and
or
push
mov
inc
xchg
inc
testb
scas
cmp
rolb
insl
inc
loopne
subb
lea
xor
and
mov
loop
pop
loope
mov
movsb
outsb
stos
mov
xor
scas
stos
xchg
xchg
loope
or
mov
xchg
jp
mov
gs
or
push
les
jbe
mov
fsubrl
jo
cli
int
jb
xor
mov
aam
xor
mov
stos
push
shlb
cmp
subl
mov
jo
mov
je
ds
xor
mov
jmp
fstps
jl
inc
pushf
ja
jge
stos
mov
mov
dec
mov
cmp
in
cmp
lret
out
or
jge
or
outsb
out
jp
cmp
jb
add
inc
mov
test
cmpsb
scas
xchg
xor
ja
out
inc
xchg
sub
repnz
jmp
fcomip
sbb
rcrb
adc
aas
lea
sbb
adcl
stos
shll
pop
aaa
stos
nop
aas
mov
ss
adc
mov
inc
das
in
stc
les
imul
popf
push
or
out
lock
and
dec
mov
addb
stos
pop
lcall
stos
scas
jmp
popf
or
sbb
inc
sub
fwait
xchg
inc
jp
outsb
test
xchg
push
xchg
add
inc
pop
pop
or
jbe
das
stos
dec
dec
repz
jmp
jns
orb
rolb
pop
stos
ret
pusha
push
pop
ja
xor
cmp
inc
pop
jecxz
lret
xchg
mov
sub
ljmp
push
sub
cltd
sti
xchg
mov
out
xchg
mov
das
bound
in
test
push
addr16
mov
xchg
cmp
sti
sbb
stos
xchg
jo
jp
fcoms
insb
adc
and
push
aaa
fwait
mov
cmp
icebp
stos
push
loopne
shll
adc
sbb
rep
test
fs
rcrb
inc
mov
mov
divb
jno
inc
sbb
std
ret
push
gs
mov
stos
in
xor
shrb
sub
add
stos
aas
hlt
mov
js
out
loop
sub
mov
sbb
xor
mov
dec
test
clc
fstl
loop
mov
insl
fdivs
fsts
fwait
ficomps
subb
dec
sbb
andl
jbe
js
cltd
mov
les
sbb
jmp
pop
stos
stos
xor
int
leave
push
rcll
outsl
sub
aam
scas
inc
stos
add
and
sbb
or
stos
sub
cmpsb
imul
xchg
jnp
xabort
fldt
mov
out
xchg
cs
in
jno
mov
pop
jl
xlat
stos
cmpsl
jmp
setl
stos
shll
push
xor
inc
stos
imul
push
inc
adc
fwait
daa
lret
daa
out
sub
mov
sbb
in
mov
stos
xchg
pop
jno
sarb
mov
xor
imulb
xor
pop
pop
popf
cwtl
stos
mov
adc
lods
stos
and
cmp
sbb
stos
jp
cwtl
frstor
jmp
fwait
stos
cmp
stos
adc
les
jne
aam
out
fisttpll
shrb
jnp
push
mov
mov
stos
sub
push
sbb
sub
push
cmp
add
mov
or
mov
popa
nop
sub
ljmp
mov
cmpsl
push
cltd
movsl
stos
xor
das
cmp
add
xchg
rclb
int3
cmp
stos
daa
popf
cmpb
sahf
sub
add
cli
mov
lods
scas
stos
fisttpll
xlat
addb
or
push
sbb
mov
push
loop
dec
popf
xchg
in
repz
pop
lcall
insl
jge
add
lahf
sub
popf
jmp
daa
mov
cli
mov
mov
stos
stc
xchg
and
cmc
mov
fsubrl
inc
adc
aas
je
mov
xchg
push
cmp
sub
mov
test
imul
xor
pusha
pop
push
outsl
lahf
inc
dec
and
out
mov
xchg
das
pop
xchg
mov
push
pop
mov
popa
lods
repz
xchg
int3
arpl
push
jle
loop
lea
jmp
sbb
pop
stos
in
scas
inc
and
loop
pop
stos
cmc
dec
sub
fwait
scas
inc
into
xor
icebp
pushw
pop
mov
xchg
push
stos
enter
mov
lock
ret
adc
sub
fcom
je
fs
sbb
cmp
les
scas
push
adc
inc
mov
push
stos
dec
sub
mov
pop
dec
and
fcoms
sub
lds
cld
lret
rorl
sbb
sbb
dec
cwtl
sub
xchg
in
call
inc
xchg
push
repz
xchg
fsubrs
xor
cmpsl
pop
in
es
in
stos
or
scas
and
jge
push
lret
fildll
stos
aad
mov
and
mov
push
es
lods
in
mov
ret
xlat
cmp
out
lcall
xor
pop
mov
loope
mov
nop
add
push
dec
inc
es
mov
das
pop
in
jmp
push
arpl
fwait
mov
and
fwait
jmp
mov
rorl
cwtl
lds
jne
out
push
int3
mov
jge
push
mov
xor
lahf
mov
hlt
icebp
repnz
shlb
mov
dec
dec
mov
es
jbe
daa
lcall
stos
dec
cmpsl
rcl
stc
ret
sbb
push
repnz
clc
sbb
inc
inc
fwait
mov
ficompl
sbbl
inc
stos
aas
dec
xor
pushf
mov
jno
insl
dec
enter
outsb
jp
inc
cmp
into
push
pop
cwtl
icebp
repz
cltd
or
call
mov
js
gs
ret
push
into
jo
lahf
dec
insb
in
jmp
dec
cld
incl
stos
leave
icebp
aaa
rolb
orb
mov
bsr
stos
int
xchg
movsl
nop
jmp
pop
push
cmp
mov
push
jge
test
lret
stos
cmp
push
xchg
inc
test
sub
orl
ficomps
pusha
leave
jno
stos
loopne
sbb
imul
jbe
mov
push
and
mov
repz
sti
stos
movsb
lcall
jmp
outsl
mov
xchg
subb
or
loopne
daa
push
push
scas
or
insb
add
mov
stos
iret
pop
clc
lods
xchg
push
aaa
stos
mov
std
jmp
cwtl
insl
pop
loope
cld
ret
mov
push
or
dec
add
imulb
sar
pusha
lahf
aam
jne
jmp
and
int
stos
stos
sarb
stos
xchg
loope
xor
jns
lods
sbb
stos
loope
imul
daa
sti
inc
pop
sbb
mov
aam
push
imul
lahf
xchg
scas
push
jg
mov
fs
stos
sahf
xor
rol
stos
mov
inc
lods
stos
fisubl
dec
and
mov
sti
sub
nop
arpl
cli
stos
daa
sub
stos
test
jl
les
push
cmp
push
lods
in
andl
mov
pop
or
stos
mov
cmp
icebp
sbb
in
jg
or
imul
push
in
cmp
and
cmp
sbb
int
testl
push
mov
lahf
lret
ret
hlt
inc
sbb
jl
add
push
push
push
nop
subl
stos
js
in
setno
jno
push
jae
xor
inc
das
aas
in
jl
int
fnstenv
pusha
add
sbb
push
pop
test
sahf
cmc
rcll
leave
sub
out
lds
stos
mov
mov
dec
in
adc
fwait
add
stos
icebp
enter
xchg
xchg
imul
mov
xor
aaa
std
stos
push
insb
mov
add
push
subb
rolb
mov
mov
cmp
stos
sub
les
sbb
jb
mov
xchg
dec
add
stos
xor
dec
mov
stc
push
sbb
scas
sub
bnd
sbb
add
ds
xor
adc
in
stos
cmp
adc
mov
into
addr16
xchg
inc
or
shrl
lods
mov
mov
insl
andb
fbld
or
pop
stos
psraw
daa
out
jp
pop
addr16
stos
push
push
test
stos
jne
or
lock
jp
push
and
xchg
pop
inc
call
shll
xor
popf
xlat
and
rcrl
sbb
or
ret
ds
mov
stos
pop
dec
mov
xor
pusha
push
jmp
cs
popf
jmp
mov
xchg
insl
cmp
dec
mov
shll
jmp
xchg
xchg
les
pop
into
loope
lahf
adc
loopne
xchg
aas
stos
mov
outsl
dec
fisubl
sbb
xchg
push
sub
mov
je
and
push
dec
lret
mov
repnz
xlat
pop
xchg
cmp
xchg
cmc
stos
pop
sub
or
in
test
stos
popf
push
lock
into
lcall
cmp
idivl
pop
js
sub
jo
dec
outsb
pop
dec
das
sbb
sub
in
sub
aad
sub
sbb
xchg
bswap
movl
fisubrs
pop
aaa
stos
jbe
repz
pop
xor
stos
push
jmp
out
imul
rcrl
mov
std
pop
iret
xchg
pop
mov
stos
aam
mov
repz
out
xchg
add
rolb
mov
aad
xor
push
fnstcw
pusha
fwait
jns
push
adc
jmp
out
and
sub
inc
mov
pop
stos
sahf
mov
aam
push
iret
int3
out
lahf
jne
adc
pop
lods
xchg
aas
shrb
enter
stos
cmpb
xor
stos
inc
insl
loopne
lret
fs
mov
mov
int3
in
lret
sub
push
fisttps
sbb
mov
adc
lahf
sbbb
imul
out
and
push
dec
jmp
popa
mov
xchg
jp
and
mov
add
lods
lahf
xor
push
stos
test
aam
js
jmp
jae
add
pop
push
mov
jge
fldt
cli
stos
mov
and
sub
cmp
adc
scas
in
xchg
pushf
daa
sbb
push
inc
dec
pop
outsl
stos
mov
lahf
lods
xchg
mov
mov
stos
mov
repz
mov
push
sbb
stos
lcall
pop
pop
int3
repz
in
mov
xchg
and
js
stos
jle
flds
hlt
xchg
cmp
or
enter
stos
pop
mov
and
push
jmp
test
stos
adc
fs
pop
mov
or
mov
jnp
cmp
mov
pushf
insl
in
pop
dec
mov
lds
stos
ret
cmp
pop
stos
sub
jbe
mov
sbb
movb
test
into
stos
fwait
xor
push
mov
lret
pop
je
push
int3
stos
leave
notl
dec
iret
into
dec
in
push
mov
test
stos
and
es
stos
out
xchg
imul
daa
cld
xor
lds
adc
ljmp
pop
stos
jne
cmpsb
and
popa
mov
dec
push
xchg
stos
cmpsl
jmp
cmc
popf
sub
add
fmull
xchg
stos
sub
es
stos
inc
mov
loope
imul
inc
push
jmp
cmp
push
lods
stos
push
je
mov
xchg
add
stos
jbe
fcoml
stos
push
cmp
cwtl
sarb
adc
jbe
stos
push
mov
in
out
mov
sub
push
stos
mov
push
into
int
sub
inc
xchg
jmp
jno
push
mov
cwtl
stos
cmpsl
repnz
mov
aad
push
cltd
outsl
mov
cli
jmp
push
retw
inc
stos
jle
add
je
repz
jmp
jmp
jge
pop
js
mov
xchg
pusha
jne
lods
addr16
int
mov
xorl
push
pop
ljmp
stos
cmp
scas
fsubs
lret
test
mov
inc
mov
sub
add
adc
sub
stos
sbb
movsl
cmp
mov
add
jo
mov
jmp
and
cmpsl
jl
adc
cmc
mov
pop
push
dec
jge
scas
dec
lods
lcall
or
fidivrs
inc
rclb
aad
sbb
mov
test
and
int3
stos
adc
xchg
pop
adc
sahf
ja
jno
xchg
push
repnz
insl
je
jmp
push
push
jae
cld
out
push
jbe
dec
or
jmp
pop
inc
sbb
inc
cld
stos
xor
ds
cmpsb
mov
lods
rorb
imul
aaa
fisubrs
fldcw
sahf
or
and
pop
rcl
cmpb
idivl
cmpsb
mov
inc
xchg
testb
lods
mov
jecxz
in
dec
mov
pop
stc
js
mov
inc
stos
mov
daa
stos
add
addr16
mov
jecxz
add
sub
in
mov
mov
out
sub
sub
xchg
stos
clc
inc
pop
out
icebp
xchg
std
xor
mov
pusha
out
subl
stos
lret
into
adc
stos
mov
mov
inc
rcr
jns
std
nop
int
adc
push
fstp
mov
inc
sub
mov
push
out
scas
ja
popf
sub
fs
in
stos
cltd
mov
stos
mov
dec
into
sub
cmc
add
and
jecxz
jnp
repnz
xchg
dec
dec
das
shll
mov
or
mov
dec
push
je
out
mov
lahf
dec
sub
push
push
aad
inc
jns
lahf
out
jl
sbb
mov
sub
stos
int3
movsl
and
insb
mov
lods
xor
lock
jg
mov
xor
mov
in
fcmovnbe
call
mov
shl
ficoml
push
cmpsl
cld
pop
out
mov
fdivrs
lock
mov
add
mov
out
sub
jl
mov
pop
std
stos
push
mov
add
shrb
stos
jne
adcb
imul
dec
fidivrs
stos
mov
pop
imul
adc
xchg
jp
into
xchg
les
sub
jb
adc
add
mov
and
xchg
jb
lock
cmp
mov
mov
test
or
gs
aad
stos
cmpsb
addb
xchg
cmp
fisubrl
and
push
mov
cmp
rcll
push
repz
xor
stos
cmp
sub
dec
gs
mov
les
push
stos
dec
dec
mov
shrl
mov
pop
xor
bound
mov
cmp
std
lahf
lret
jmp
js
push
mov
jnp
ret
cmpl
cmp
push
dec
test
std
fdivr
popa
push
stos
imul
ror
push
mov
mov
mov
pushf
stos
and
subl
mov
cld
jb
inc
sahf
sbb
repnz
cmp
jo
adc
stos
mov
pop
or
jne
in
stos
cmc
js
xor
inc
push
push
ljmp
mov
xchg
cmpsb
mov
xchg
ja
jns
and
stos
mov
enter
jmp
jp
dec
subl
adc
int3
jae
mov
push
cmp
jbe
adc
xchg
loop
mov
loopne
jl
stos
sub
pop
dec
push
pop
stos
cs
mov
push
jmp
outsl
movsl
popa
popf
ljmp
mov
pop
xchg
jl
lret
popf
inc
cwtl
fwait
jle
hlt
stos
push
cmp
aaa
inc
xor
mov
or
mov
stos
inc
mov
pop
pusha
arpl
shll
es
out
ret
xchg
fwait
push
pop
clc
jle
popa
sub
cmp
dec
push
cmpsb
imul
add
mov
pop
add
subb
pop
add
xchg
cmp
stos
sub
ja
pop
pop
mov
das
cld
fwait
dec
movsb
nop
jge
movsb
xlat
out
fdivs
push
cmpsl
lret
lret
xor
push
jmp
sub
push
push
out
push
scas
push
xchg
xchg
adc
stos
aam
xchg
es
adc
xor
cmpb
clc
inc
test
popl
stos
cld
fistps
jb
in
add
mov
mov
mov
inc
mov
insb
and
imul
mov
faddl
jae
movsb
lock
xchg
dec
or
mov
fadds
inc
sar
mov
push
stos
icebp
lcall
stos
iret
daa
cmpsb
movsb
mov
or
jbe
pmulhw
or
imul
fldln2
xchg
test
or
stos
out
in
sar
jb
xor
iret
fwait
stos
push
cmp
xor
insb
and
mov
int3
sub
stos
jl
push
add
addr16
out
pop
adcl
out
stos
xor
call
or
popf
stos
test
in
sti
stos
imul
mov
push
hlt
xchg
xor
dec
mov
mov
aas
stos
outsb
ljmp
stos
psadbw
shlb
mov
sbb
orl
sbbb
lahf
ror
mov
mov
daa
mov
lret
cld
cmp
leave
nop
in
mov
fsubrl
ds
push
add
sbb
stc
xor
pop
test
xor
xor
add
std
mov
stos
sbbb
pushf
fcomps
out
das
add
lahf
push
jmp
sub
and
shll
jb
or
push
ret
lea
mov
add
jmp
mov
adc
mov
stos
xchg
out
and
or
shrl
push
stos
xchg
and
push
sbb
pop
push
push
pop
xor
pop
je
cmp
stos
xchg
adc
stos
in
adc
xor
shlb
imul
hlt
jge
mov
out
shll
stos
cmc
sbb
mov
cmp
setae
ljmp
dec
lret
mov
sub
stos
test
testl
inc
stos
cmp
cmpl
jl
lods
inc
and
test
mov
add
lcall
dec
les
jno
aam
push
jbe
into
adc
pop
inc
mov
and
push
jl
fwait
push
pop
popf
push
out
out
enterw
cmp
stos
les
inc
pop
pop
lods
or
gs
jns
pop
xor
rcrl
xchg
cmpsl
stc
jl
cmp
dec
mov
jbe
mov
dec
daa
jmp
aaa
fistl
push
cmp
movsb
addr16
xchg
sbb
pop
fs
fwait
in
cs
mov
stos
inc
cwtd
aam
rcl
push
bts
mov
cmp
xchg
pop
push
stos
fcomps
or
arpl
mov
stos
mov
inc
sbb
inc
imul
jns
mov
daa
inc
lret
daa
sub
mov
mov
mov
out
stos
std
mov
ds
out
pop
stos
popf
cltd
dec
and
pop
or
int3
decl
mov
test
xchg
scas
xchg
push
stos
dec
push
jecxz
pop
mov
mov
and
mov
out
lret
push
push
outsb
inc
mov
fwait
sbb
push
jo
cmp
xchg
cs
mov
xchg
lret
aaa
xlat
or
mov
sub
add
nop
popa
cli
sub
inc
andb
add
jmp
xchg
insl
adc
adc
scas
test
xor
inc
xchg
repnz
sbb
imull
push
push
cmp
stos
cmc
mov
mulb
shlb
inc
push
sahf
test
ret
jmp
add
push
mov
mov
stos
pusha
lahf
cmc
inc
jl
and
sub
movsb
xchg
sahf
aas
movsb
dec
jp
add
aad
enter
std
mov
adc
mov
aam
pop
shlb
stos
push
add
das
imul
sub
es
add
pop
cltd
out
lret
inc
pushf
stos
cmp
cmp
adc
into
loope
call
jge
mov
jnp
inc
pop
and
stos
into
leave
adc
stos
or
popf
test
stos
xor
or
cltd
jl
outsl
xchg
aaa
mull
cmp
sbb
test
pop
sbb
icebp
mov
sahf
mov
rorl
mov
rclb
test
leave
push
xchg
cli
stos
stc
scas
xchg
mov
stos
pop
push
adc
in
repnz
aad
push
mov
inc
test
shll
daa
pop
stos
push
cmc
cmpsl
das
jo
leave
xchg
stos
lcall
mov
or
or
push
data16
push
shlb
jae
loopne
push
mov
stos
jl
sub
out
adc
stos
fidivl
xlat
or
stos
mov
inc
pop
insb
stc
cli
pop
stos
js
add
pop
mov
stos
into
mov
mov
std
sub
roll
pop
adc
gs
xchg
jns
call
jmp
mov
repz
jmp
fwait
or
sub
daa
mov
scas
mov
int3
push
sub
movsb
std
imul
push
fcoms
mov
addl
jmp
fwait
cmp
pop
adc
cmp
xor
roll
jns
int3
out
jecxz
stos
jl
dec
mov
cmc
mov
push
jno
add
stos
jnp
loopne
stos
or
sti
in
sub
jnp
adc
push
mov
out
and
test
imul
loop
inc
fcoms
or
gs
adc
dec
stos
repz
cmp
popa
jnp
sub
push
int3
insb
mov
in
mov
in
pushf
and
stos
aas
sub
popf
jp
and
mov
xor
xor
je
cmp
lods
jns
stos
rorb
es
push
std
or
dec
pop
enter
mov
sbb
idiv
int
stos
bound
fdivrs
jne
cwtl
pop
stos
push
test
test
lahf
and
stc
mov
adcl
stos
ret
cmp
ds
sbb
sub
pop
imul
cwtl
scas
addr16
mov
outsb
imul
mov
clc
aam
std
dec
pop
cmp
sub
lods
fnstenv
stos
xchg
in
sti
ret
hlt
stos
mov
mov
movsl
daa
sarb
push
mov
cld
inc
mov
lret
mov
sbb
stos
pop
dec
mov
imul
lods
out
inc
outsb
ret
or
test
or
stos
mov
xchg
inc
push
push
fwait
daa
divb
fwait
jae
movsl
mov
inc
pop
lahf
jae
pop
mov
push
nop
jnp
aam
sbb
scas
jo
dec
lods
daa
ret
push
pop
sbb
dec
cs
pop
std
xor
add
subl
stos
leave
cmpsb
xor
fstpl
aaa
or
stos
js
out
imul
out
cwtl
pop
mov
rcl
vmread
stos
lret
add
ljmp
hlt
pop
stos
fcmovnu
mov
sbb
sbb
dec
push
sti
push
test
pop
pop
push
jns
or
push
out
aam
in
cltd
ret
stos
mov
push
roll
ljmp
add
call
jae
movsb
aaa
lahf
pop
test
aam
in
shlb
popa
mov
mov
adc
fadd
lret
call
mov
aaa
inc
xchg
jae
arpl
inc
negb
or
sbb
sub
mov
daa
push
mov
dec
or
lret
mov
mov
int3
jbe
xor
push
stos
aad
mov
mov
cwtl
xchg
xor
mov
dec
sbb
fldt
rorl
int3
inc
stos
mov
pop
mov
xor
call
mov
stos
lock
xchg
jmp
outsl
fsubs
jo
jmp
lahf
xchg
mov
pop
pop
cmp
mov
fwait
adc
stos
das
push
fbstp
push
cli
mov
sbb
stos
jns
pushf
cld
lock
pop
mov
fcomip
stos
movsb
mov
fs
xchg
push
aas
xor
outsl
mov
in
mov
pop
nop
xchg
stos
and
mov
loopne
add
out
in
lods
fs
stos
mov
xchg
fwait
sbb
jno
stos
cli
inc
je
in
mov
stos
or
scas
dec
call
inc
adc
inc
sbb
lock
push
add
roll
sbb
sti
xor
xchg
pop
jmp
jns
lcall
movsb
mov
aam
jmp
sub
test
stos
mov
popf
inc
xchg
jmp
or
mov
mov
repz
popa
jae
popf
inc
stos
mov
das
xchg
icebp
cld
test
mov
adc
or
dec
stos
rorb
test
xchg
popf
mov
fstpt
mov
out
leave
push
cmpl
stos
and
pop
cmpb
lahf
push
lock
dec
stos
push
pop
dec
sub
xorl
jb
mov
stos
fbld
cmp
loop
daa
mov
bswap
dec
sbb
mov
xorb
movsl
pop
into
cs
sbb
inc
lods
jg
jmp
mov
dec
outsl
push
test
push
pop
xchg
stos
lods
xchg
leave
jmp
jo
inc
add
daa
xlat
jno
pop
sub
adc
popa
arpl
mov
pop
cmp
iret
add
in
xchg
or
adc
out
pop
test
xchg
fdivrl
movsb
mov
push
cmp
push
jp
dec
out
repz
pop
stos
dec
in
add
xor
and
aad
stos
dec
sbb
mov
mov
dec
movsb
cmpsb
lss
movsb
out
gs
test
pop
adc
mov
mov
and
pushf
lods
mov
mov
jns
cmp
aaa
sbb
stos
pop
scas
mov
mov
xchg
stos
cmp
pop
stos
and
lds
test
stos
hlt
lods
jnp
mov
icebp
or
push
xchg
dec
stos
mov
push
fldcw
stos
mov
or
mov
je
sub
inc
out
mov
dec
stos
cs
mov
outsl
push
jb
fistpl
mov
stos
xlat
sbb
jmp
in
in
hlt
nop
clc
and
in
or
inc
mov
mov
insb
mov
inc
stos
xor
fistpl
enter
xchg
add
xchg
cmp
int
and
cwtl
leave
xor
pop
sbb
int
sbb
inc
outsl
stos
sti
fcoml
rclb
jns
stos
js
xchg
and
int3
shrl
fbstp
mov
mov
pop
stos
into
sbb
lret
loope
int
stos
mov
mov
jle
mov
imul
sti
rorb
fwait
js
jbe
mov
dec
mov
andl
data16
xchg
stos
sub
cmp
stos
mov
mov
popaw
jp
ljmp
dec
cmpsl
mov
stos
in
jbe
push
std
push
aas
push
stos
movsb
aam
insb
dec
andl
jae
shll
pop
inc
pop
test
xor
cmp
inc
jge
jno
out
imul
sbb
loopne
adc
xchg
mov
jns
shl
xchg
aaa
movb
stos
mov
in
and
je
jb
mov
adc
dec
sbb
pop
xor
mov
shrb
add
adc
out
add
mov
fnsave
dec
cmp
lret
lods
ret
imul
arpl
xor
les
mov
cmp
pop
sub
jg
mov
mov
inc
stos
insl
test
adc
rclb
xchg
push
jnp
stos
test
mov
push
xchg
test
jg
mov
mov
sbb
cmp
or
sub
div
jle
push
dec
sbb
dec
dec
sar
mov
mov
sti
mov
fsubrs
pop
sub
mov
insb
jnp
stos
loop
and
jle
aad
shlb
or
pop
stos
push
xchg
insl
mov
pop
push
mov
stos
test
add
jne
inc
repz
mov
pushf
std
pop
popf
bound
pop
imul
xchg
fistps
pop
cld
stos
sub
mov
mov
cwtl
call
xor
inc
cmp
movsl
xchg
sub
sub
xlat
test
jmp
cmp
pop
stos
shl
sahf
outsl
in
addr16
mov
scas
lcall
cmp
pop
stos
sub
lds
inc
mov
fst
stos
lret
jmp
jne
ret
int
stos
jle
add
cmp
pop
pop
daa
xchg
in
mov
adc
cmp
outsb
stos
gs
rclb
imul
scas
fisubrs
stos
sub
loop
pop
add
inc
int3
adc
movsl
inc
stos
cmp
sbb
cmp
and
movsb
push
mov
push
pop
mov
test
mov
jmp
push
jnp
ret
testb
push
fisubrl
testl
dec
out
cs
wrmsr
pop
mov
xchg
inc
lods
mov
movsl
and
add
xor
push
stos
add
cmp
cltd
dec
movsl
test
adc
and
pop
clc
pusha
push
pop
out
xchg
cmpsl
into
cltd
dec
mov
stos
pop
ljmp
iret
arpl
pushf
pop
outsb
pop
mov
fildl
jmp
or
pop
push
inc
imull
or
leave
xchg
fmul
roll
sbb
stos
int3
aad
xor
mov
stos
lcall
pop
jmp
icebp
subb
add
push
outsl
movsb
mov
shrl
adc
out
push
cmp
pop
dec
jmp
jno
and
addr16
and
jns
jge,pt
sub
stos
clc
notl
add
leave
mov
cwtl
sub
aam
push
mov
pop
jbe
sub
and
pop
dec
mov
aaa
stos
xor
ret
loope
daa
stc
mov
pop
mov
stos
xchg
imul
mov
stos
mov
push
ljmp
hlt
mov
xor
pop
stos
or
hlt
stos
dec
adc
sub
cld
ljmp
and
scas
add
adcb
jo
xchg
aaa
arpl
rcl
sub
push
or
stos
add
out
arpl
dec
pop
mov
lret
mov
in
test
push
mov
mov
jge
pusha
fnstcw
test
push
mov
inc
ret
sbb
mov
aas
jmp
popa
mov
cmc
imul
into
xor
scas
bound
aad
inc
push
dec
test
cs
pop
pushf
cmp
sti
mull
xchg
or
movsb
adc
in
pop
test
pop
lock
pop
jno
jbe
mov
cmc
stos
jb
or
mov
mov
int
and
sub
notb
xchg
fadds
cmp
lods
mov
pop
aas
fildl
pop
stos
mov
xorps
and
cmp
dec
incb
dec
or
stos
orb
xor
lret
push
stos
repnz
xor
lahf
int3
mov
cmp
out
pop
mov
push
sub
fcomip
pop
cld
cmpsb
lea
and
sub
sbb
mov
jg
add
stos
adc
subl
lock
in
test
lds
mov
das
sbb
ljmp
sub
les
hlt
mov
fldcw
int
jns
stos
adc
movsb
push
lds
loop
or
xor
xchg
stos
fcomps
out
mov
stos
cmp
jae
stos
int3
cld
outsl
and
inc
stos
movzbl
add
imul
stc
int3
xor
push
mov
and
ljmp
mov
test
cmp
loop
loope
ret
test
jnp
inc
stos
jnp
lds
dec
pop
imul
mov
pop
jno
mov
stos
outsb
mov
faddp
stos
xchg
mov
sahf
or
lea
cmp
pushf
stos
in
xor
std
adc
out
jne
mov
fwait
sub
mov
pop
aad
test
stos
stc
or
pushf
test
lods
mov
xor
mov
stos
and
mov
js
mov
add
es
mov
cli
pop
jmp
dec
ficomps
jl
mov
push
stos
xchg
nop
mov
orl
and
mov
scas
sbb
stos
ljmp
popf
and
jl
fimull
out
stos
dec
cmp
jp
xchg
adc
jmp
fs
pop
dec
pusha
into
xchg
mov
sbb
mov
adc
test
adc
or
xorb
lock
daa
xchg
scas
cwtl
loop
adc
jle
pop
xchg
into
mov
mov
inc
cmp
shl
mov
mov
cmp
xchg
or
push
insl
imul
and
jns
xchg
mov
pop
jmp
shll
movsl
cwtl
xchg
dec
mov
data16
loopne
aas
xor
stos
fs
sub
arpl
in
decb
mov
stos
in
dec
xor
mov
arpl
hlt
mov
push
ljmp
mov
push
stos
adc
and
sub
jp
shrl
je
mov
xchg
fisubrl
sbb
fsubr
jbe
push
icebp
outsl
cmpsb
xchg
push
stos
or
mov
push
ss
lods
xchg
lcall
pop
data16
cwtl
xor
test
cmpsb
mov
repz
mov
stos
mov
mov
lds
test
rorl
sub
cwtl
xor
in
mov
jmp
jmp
sub
cs
stos
inc
rorb
and
mov
lock
pop
iret
push
insb
in
cs
jae
cmp
imul
in
dec
lods
mov
aam
loopne
push
mov
jae
xor
stos
cmpl
sbb
adc
and
mov
repz
xchg
jecxz
insb
daa
mov
jl
lret
fwait
cmpsl
pop
sbb
and
outsb
cmp
cmpsl
xchg
data16
dec
xorl
fucom
or
push
mov
push
mov
add
imul
stos
mov
pop
ficoms
stos
dec
scas
in
adcl
repz
adc
cmp
push
push
mov
cli
mov
stos
mov
jge
stos
mov
mov
push
mov
lods
pop
mov
addr16
pop
mov
mov
jge
sub
aad
nop
jb
stos
push
arpl
push
stos
xchg
lret
and
cmp
dec
cmp
xchg
sub
aad
pop
xchg
inc
cmp
mov
shlb
inc
loop
ja
or
push
imul
movb
mov
cmp
in
pop
jo
adc
leave
xor
mov
hlt
push
popf
jp
xchg
lret
test
xor
mov
mov
sahf
lcall
cmp
stos
loop
mov
leave
fimuls
in
jb
pop
movsb
stc
sub
cmp
stos
hlt
stos
jecxz
jo
xchg
or
dec
inc
jmp
nop
and
cli
mov
stos
fcoms
lahf
stos
les
add
pusha
sub
push
fnstsw
fwait
inc
mov
stos
push
and
mov
push
imul
sbb
sub
loop
scas
lods
adc
push
mov
xchg
push
outsl
stos
ds
cli
dec
stos
aaa
clc
fsubl
push
incb
or
cmc
jmp
scas
mov
jmp
xchg
movups
das
loope
cmp
mov
in
xchg
outsb
stos
or
jb
loope
stos
jp
push
mov
movsl
inc
rep
in
ret
sub
mov
pop
stos
ret
sbb
les
inc
addl
sub
out
mov
call
or
stos
xchg
xchg
adc
dec
xchg
cmp
and
cld
or
mov
outsb
pop
inc
inc
in
mov
jbe
lds
imul
mov
imul
adc
cld
xchg
lcall
dec
xchg
sbb
pop
jecxz
mov
inc
sbb
cmc
inc
loop
jbe
lea
sub
dec
pop
and
lock
dec
int
hlt
stos
insb
sbb
shlb
cmp
ja
repnz
unpckhps
mov
stos
xor
jbe
or
push
pop
mov
cwtl
mov
loope
dec
mov
stc
adc
dec
xchg
dec
sbb
inc
lret
iret
jl
js
scas
adc
pop
lods
pushf
add
dec
pop
hlt
mov
iret
push
adc
arpl
jle
cmp
xor
ja
in
stos
dec
out
sub
mov
xchg
js
out
imul
xchg
push
mov
into
ja
stos
scas
addr16
sub
dec
das
imulb
jns
mov
out
out
ret
jg
sahf
dec
and
pop
insl
jmp
dec
ja
popf
das
inc
bnd
js
sub
nop
mov
aas
stos
addb
push
in
push
pusha
loope
xor
icebp
add
push
inc
jl
dec
mov
imul
push
mov
sahf
iret
stos
gs
cwtl
repnz
stos
xor
loop
shrb
lods
lds
fwait
mov
push
pushf
dec
cmp
pop
int3
pop
sbb
push
jle
adcl
push
shrb
add
jne
xchg
or
inc
aam
stos
mov
mov
pop
jmp
push
leave
cmpb
int
xchg
push
and
movsl
pop
lods
mulb
gs
mov
es
pop
lcall
sub
stos
mov
cs
adc
lods
pop
stos
mov
outsb
and
movsb
inc
or
imul
sbb
jmp
daa
sub
cwtl
fcmovnu
stos
add
push
mov
jg
stos
push
divb
dec
shll
repnz
mov
ret
sbb
jo
ss
mov
icebp
cs
subb
mov
inc
fcom
js
pop
jo
into
adc
stos
or
sbb
and
ljmp
mov
in
les
push
xor
jl
cmpsl
popf
repz
inc
cmp
jge
sbb
jae
in
sbb
sahf
stos
ror
insb
inc
scas
xchg
clc
repnz
sub
xor
les
and
ret
inc
add
movsb
sub
push
sub
add
add
jmp
shlb
lods
std
ret
xchg
sbb
adcl
mov
cmp
loopne
adc
push
ret
push
lret
arpl
stos
mov
jmp
test
jnp
cld
add
out
aam
sbbl
ljmp
mov
lret
shrb
clc
dec
inc
std
rcrl
mov
divb
fstpt
mov
int
icebp
outsb
mov
in
lods
dec
sti
dec
movsb
push
arpl
push
aas
or
stos
pcmpeqw
jo
loope
dec
push
sbb
xor
mov
add
rorb
pushf
stos
lret
test
stos
pop
xchg
call
sbb
jbe
mov
nop
mov
jno
fs
push
faddp
stc
std
sti
stos
leavew
or
mov
mov
movb
insl
movsb
xor
call
jbe
xor
sub
adc
or
push
jno
imul
addl
mov
xchg
lock
xchg
xchg
repnz
out
fimuls
inc
les
cwtl
aam
nop
stos
inc
mov
test
cmp
mov
xor
pop
ja
pop
mov
push
push
add
stos
jnp,pt
imul
dec
xchg
cmpsl
stos
push
mov
addr16
int3
jmp
jbe
inc
shr
repnz
call
ljmp
sub
xchg
shll
mov
add
outsb
mov
add
hlt
mov
stos
aad
mov
push
loopne
jmp
jnp
es
mov
push
inc
mov
stos
dec
xchg
stos
xchg
pop
sahf
xchg
test
jb
stos
fdivrl
rcrb
movsb
dec
ret
inc
repnz
xchg
stos
push
add
adc
push
ljmp
jno
adc
ds
out
ja
mov
popf
dec
iret
lea
mov
mov
addr16
mov
or
xchg
mov
stos
sti
insb
adc
bnd
movsb
das
cld
inc
mov
inc
sub
out
or
stc
mov
int3
jl
stos
xchg
jp
stos
xor
je
pop
das
les
xchg
mov
sbb
sub
and
in
in
xchg
lret
imul
cld
aam
sbb
inc
mov
add
out
scas
cmp
push
jno
int3
ljmp
sbb
mov
push
in
ret
mov
lods
stos
cmp
mov
mov
mov
sub
dec
jae
test
or
mov
fisttpl
popf
or
scas
sahf
in
movsb
lods
mov
xor
xor
lcall
push
stos
frstor
xchg
mov
dec
fwait
int3
lds
out
sub
stos
and
shlb
mov
mov
aaa
cmpsb
cli
in
push
fsubrl
stos
mov
xchg
leave
jnp
hlt
insl
ljmp
adc
and
fisubrl
scas
add
jns
dec
jge
xchg
jmp
daa
nop
andl
adcl
mov
loopne
insb
inc
popf
enter
fs
shr
js
mov
mov
adc
xchg
dec
push
loopne
sbb
sbb
add
in
jmp
cmpsl
xchg
jne
shr
icebp
subl
xor
sub
mov
lret
and
pop
xor
testl
adc
pop
sub
push
stos
push
adc
ljmp
stos
inc
mov
daa
pop
pusha
negl
call
scas
popf
mov
lods
aam
jno
push
mov
pop
movb
mov
add
stos
xchg
iret
mov
xchg
popf
stos
pop
mov
add
je
xchg
mov
dec
push
insb
cmpb
adc
loopne
sub
sub
or
jp
jnp
les
ret
cmp
ss
mov
push
inc
in
stos
ret
pop
ss
sub
test
addl
push
sub
sub
test
rolb
fs
jo
jno
movsb
addr16
sub
ds
pop
pop
aam
test
mov
outsl
sub
cmc
test
mov
test
jne
or
push
shll
jg
test
xchg
popa
movsb
inc
inc
jmp
ljmp
push
mov
jnp
sbb
mov
push
and
jbe
mov
sbb
rcr
mov
out
mov
icebp
stos
jo
out
lods
or
js
stos
fistpll
mov
stos
cli
ss
dec
in
out
stos
loope
insl
je
xlat
dec
sbb
call
fstpl
push
mov
lahf
inc
aaa
push
stos
lods
or
pop
pop
stos
dec
repnz
insb
orb
mov
shll
mov
lret
stos
xchg
jecxz
mov
inc
mov
into
xlat
and
adcl
push
lahf
test
adc
mov
add
inc
cmp
sub
sub
mov
xor
stos
mov
imul
lods
stos
mov
ljmp
insl
jne
xchg
sub
xor
mov
pop
inc
stos
lods
jg
dec
ss
imull
mov
loopne
dec
sahf
insb
xchg
aaa
stos
fisubrs
pop
dec
lds
idivl
repz
xlat
adc
stos
daa
ljmp
movsb
jge
jle
roll
les
inc
aaa
call
xorl
icebp
pop
shlb
push
cs
jp
mov
fimull
mov
or
daa
pop
push
mov
fwait
mov
mov
add
dec
pop
repnz
xchg
jb
fsubrl
into
mov
and
push
cli
inc
xchg
jns
shrl
stos
lock
insl
xor
stos
dec
and
jle
movsb
jbe
test
stos
adc
cwtl
inc
add
aaa
mov
pop
cltd
fwait
mov
jnp
lds
and
je
xor
dec
inc
clc
xchg
xchg
lods
stos
aas
push
leave
outsl
cmp
xor
mov
jb
sahf
repnz
pushf
mov
arpl
lret
lock
push
movsl
stos
xchg
pop
aad
pop
pop
or
into
inc
ds
repnz
xchg
cli
adc
int
lahf
mov
fst
jns
and
stos
cmp
ret
sub
das
lret
je
jmp
jbe
jge
call
aam
xchg
mov
ja
mov
movsb
cmpsl
and
xor
mov
stos
cmp
sbb
stos
cmp
fsubrp
insb
in
push
mov
imul
lcall
dec
mov
xchg
loop
pop
stos
xchg
loopne
lods
jge
lea
repnz
xor
int3
xchg
in
inc
add
jle
jmp
mov
inc
lcall
jl
popf
mov
inc
stos
mov
xor
jmp
lea
mov
mov
rcrb
out
testb
out
stos
in
xchg
push
and
push
or
add
sub
stos
jno
stc
cmp
mov
cmc
push
adc
stos
lret
pop
imul
jge
mov
inc
add
fisttpl
mov
mov
stos
movsl
in
sarb
sub
mov
mov
std
dec
jmp
mov
or
xor
xchg
cli
sahf
stos
imul
pop
or
cmc
push
push
pop
stos
rcr
adc
sub
xor
mov
sbb
inc
cli
cmp
stos
cmpsl
pop
aam
scas
xchg
addr16
adc
jne
inc
xchg
jno
sbb
imul
scas
mov
repnz
jae
stos
enter
test
jns
stos
int3
mov
sbb
jno
mov
shlb
and
push
imul
movsb
popf
xchg
sbb
cmp
pop
xchg
clc
stos
sbb
dec
mov
dec
fld
stos
push
outsb
xchg
dec
insb
ja
dec
arpl
int3
xor
sub
or
xchg
rcrb
lea
or
cmp
loopne
jecxz
sti
jmp
popf
and
mov
jbe
out
adc
das
or
incb
xchg
ljmp
pop
ja
xchg
out
lret
mov
fmul
pop
fdivs
mov
adc
je
arpl
and
das
push
es
out
lock
add
jp
test
lea
or
stos
add
pop
xchg
and
push
mov
pop
test
pushf
dec
lds
cmp
in
inc
rolb
push
xor
std
stos
out
fwait
inc
cltd
test
imul
rolb
sub
xchg
dec
adc
push
mov
inc
sub
in
pop
lret
stos
das
fs
aad
inc
or
pushl
xor
fsubr
lods
jnp
cmp
hlt
add
sub
fsubrl
sahf
nop
pop
push
inc
jns
push
ljmp
push
add
bound
in
dec
in
js
mov
jmp
push
ja
mov
ss
add
stos
xchg
push
jb
inc
mov
stos
sub
pop
and
stos
mov
add
fs
stos
xchg
mov
dec
xchg
push
dec
in
mov
stos
push
xor
test
ss
push
rolb
sub
imul
aam
mov
in
push
nop
add
mov
aam
mov
pop
cmpl
scas
pop
stos
iret
and
imul
inc
xchg
mov
imul
div
adc
ficomps
jecxz
ja
mov
loopne
js
iret
dec
stos
cmpsl
out
sbb
stos
push
inc
push
imul
dec
mov
fisubrl
push
sub
sahf
xorl
mov
shlb
stos
mov
or
arpl
lds
fs
push
mov
and
insl
sub
push
cltd
ds
imul
pop
xchg
mov
mov
stos
dec
jne
cmc
fcomps
mov
fwait
mov
pop
dec
cmpsl
add
push
xchg
and
test
push
fistps
enter
rcl
jmp
stos
jecxz
dec
pop
and
gs
adc
pop
push
cltd
std
insl
ljmp
inc
out
insb
stos
inc
pushw
rcrl
imul
dec
shrl
enter
ljmp
pusha
xor
iret
sbb
nop
mov
mov
add
stc
mov
movsl
push
std
push
sti
stos
mov
data16
sbb
add
loopne
ss
and
sbb
outsl
cmpsl
push
xchg
movsl
shrb
popf
fs
rolb
inc
loope
fistpl
fwait
test
int3
bound
mov
adc
xor
stos
mov
mov
cs
dec
jb
mov
je
inc
adc
cmp
out
outsb
addr16
mov
xchg
inc
xchg
xor
hlt
mov
addb
rcrb
mov
or
stos
and
pop
pop
sbb
inc
sbb
and
mov
mov
stos
mov
xchg
sbb
cltd
cmpb
dec
ljmp
stc
xor
stos
out
adc
fildl
mov
cmp
stos
add
inc
les
xor
pusha
ficoms
aam
nop
scas
add
clc
mov
mov
popa
fimuls
sub
int
xor
add
xor
into
inc
stos
lds
push
mov
in
or
mov
clc
stos
and
jo
int3
xchg
push
inc
stos
imul
sbb
stos
and
testl
int
out
jo
scas
loop
stos
or
outsl
daa
add
jmp
mov
loopne
das
mov
push
push
adc
adc
daa
das
ficompl
movsl
xchg
sub
movsb
arpl
stos
pop
jecxz
pop
or
stos
push
push
cs
stos
pop
cmpsl
and
das
stos
test
jb
push
shl
insl
sub
outsl
jmp
mov
fstp
xor
cmpsl
xor
arpl
and
outsb
stos
fistpll
stos
dec
nop
sbb
xchg
dec
push
ljmp
jb
add
rcl
imul
mov
sbb
daa
cs
lret
pusha
fwait
call
stos
ret
or
notb
or
and
sub
and
out
pop
into
fs
pusha
bound
nop
enter
out
adc
xchg
das
pusha
pop
xchg
ja
adc
dec
lods
sbb
stos
pushf
lret
bound
xchg
dec
xor
mov
cmp
xchg
cmp
stos
push
jne
lcall
push
push
test
pop
add
leave
mov
adc
xchg
loopne
lods
stos
sub
fidivl
jmp
mov
sub
aam
xchg
dec
xchg
stos
imul
mov
push
jge
cmp
ljmp
das
jno
push
loope
lods
jl
pop
shl
add
dec
das
or
xchg
lret
mov
repnz
jb
cltd
stos
mov
call
ret
std
cwtl
ljmp
lret
dec
jb
fs
mov
dec
popa
xchg
lcall
sbb
push
aas
stos
in
inc
and
call
scas
shll
stos
iret
mov
inc
push
stos
in
push
out
mov
sahf
sbb
lock
dec
xchg
stos
movsl
lea
cmpsb
push
icebp
stos
and
std
test
fwait
inc
stos
fadd
lea
adcl
pop
push
test
cmp
pop
mov
daa
sub
pusha
lea
dec
movsb
jge
stos
xor
cmp
mov
add
testl
and
inc
ret
pop
scas
push
in
adc
and
and
mov
jnp
mov
stos
cs
inc
jo
xchg
sbb
stos
insb
fwait
daa
dec
orb
cmp
jle
or
push
sti
cli
sbb
cmp
inc
mov
sub
sbb
mov
sub
jg
dec
add
jmp
cmc
fcomp
mov
lods
stos
xchg
pop
and
cmp
jmp
test
adc
imul
pop
stos
jb
mov
js
movsb
iret
dec
subb
jno
and
add
daa
jle
mov
aad
fldt
or
xchg
inc
stos
jns
lods
into
loop
sti
pop
stos
jo
repz
dec
and
stos
cmc
push
sub
inc
stos
adc
xor
mov
outsl
jbe
fdivs
scas
xchg
cwtl
pop
push
mov
stos
sti
out
or
stos
movsb
push
in
loope
repnz
add
int3
stos
push
popa
fidivl
sub
and
stc
pop
sub
mov
pop
inc
xor
or
pop
push
jmp
dec
into
test
notb
mov
pusha
dec
mov
shll
sahf
dec
stos
js
aas
fs
inc
in
push
adc
pop
sub
scas
cmp
dec
daa
ljmp
push
adc
xchg
mov
adc
repnz
iret
fmull
popa
jecxz
stos
cltd
loopne
xlat
adc
push
out
sbb
cmpsl
insb
repz
lods
imul
xchg
push
out
outsb
push
stos
jg
jge
xchg
xor
mov
inc
pop
add
stos
iret
loope
mov
in
stos
jnp
and
or
xor
mov
out
repnz
out
je
fwait
add
stos
mov
fcoml
xor
xchg
stos
or
pop
xchg
push
aas
jno
jmp
xchg
inc
shrb
daa
data16
dec
push
leave
mov
pop
sbb
stos
loope
sbb
or
fidivrl
mov
stos
mov
test
push
arpl
fisubrl
mov
lds
lock
adc
cmp
mov
jmp
shll
pop
xor
scas
inc
xchg
adc
sbb
shlb
mov
add
push
pop
stos
sub
adc
inc
add
or
stos
movsl
daa
dec
mov
bound
stos
in
shll
cmp
pop
stos
mov
xchg
mov
mov
add
xorl
outsb
mov
mov
mov
sbbb
popf
xchg
dec
mov
pop
push
lahf
cwtl
cs
in
nop
stos
dec
movsl
push
lods
add
movsb
test
sbb
popf
mov
nop
bound
in
xchg
jecxz
mov
cli
mov
fucomi
sub
loope
cmp
mov
out
xchg
push
mov
fwait
sahf
hlt
in
negb
fwait
pop
sbb
fadds
ret
leave
jo
cmpsb
xchg
imul
pop
push
fwait
int
cld
adc
sbb
addr16
ret
repnz
das
stos
xchg
cltd
shlb
cmp
jbe
pop
mov
cld
clc
mov
jmp
fiaddl
int
pop
das
in
mov
sbb
mov
jnp
stos
test
mov
mov
stos
xchg
jb
xchg
aas
fwait
testb
cmpb
fists
pop
aaa
stc
jae
int3
aad
mov
jne
in
cmpsl
fldt
stos
mov
adcl
sub
jmp
mov
lods
cltd
mov
xchg
sbbl
or
in
shl
les
addr16
mov
ffreep
jmp
xor
xorb
xor
jnp
mov
jnp
lret
xchg
orl
xchg
pop
stos
sub
sarl
xor
scas
jg
insb
add
add
icebp
cmp
mov
in
mov
fwait
adc
ret
pop
int3
xor
dec
icebp
lahf
stc
pusha
stos
pushf
ss
xor
sbb
stos
pop
dec
sar
enter
stos
jge
fld1
movsl
sbb
xchg
pop
pushf
cmpsl
inc
sbb
jne
fstenv
mov
add
scas
shrl
imul
pop
push
push
repz
jge
enter
mov
sbb
aas
imul
pop
xchg
stos
orl
pusha
stos
push
and
and
mov
xor
std
sub
mov
into
stos
aam
addb
xchg
pop
aad
rclb
dec
adc
ret
lods
xor
cmp
add
ret
xor
dec
test
inc
out
and
pop
push
mov
scas
adc
push
lods
inc
dec
lods
inc
pop
enter
daa
inc
xchg
push
test
lods
jmp
in
mov
arpl
testl
sub
repz
sub
jb
rcr
pop
stos
roll
fldl
mov
stos
imul
xchg
stos
fisubs
push
xchg
jnp
stos
call
sub
nop
stos
mov
aam
loopne
or
out
sbb
rorl
repnz
and
jbe
xchg
in
push
daa
adc
stos
leave
pop
dec
jo
movsl
cmp
mov
std
sbb
lock
stos
add
imul
cmp
lods
std
stos
in
dec
mov
fs
mov
jmp
ja
mov
stos
movsl
jb
and
sub
das
lret
aas
add
push
mov
daa
jmp
mov
gs
cmpsl
inc
in
add
ljmp
xchg
popf
cmpb
pop
int
sub
imul
mov
je
in
arpl
es
rolb
stos
jno
xlat
mov
lods
enter
mov
in
mov
or
mov
sti
jmp
stos
ret
or
int3
jmp
fldln2
push
xlat
lods
stos
adcl
imul
stos
shrb
rcrb
cmc
jns
popf
or
in
leave
lea
xor
mov
in
sbbb
stos
scas
push
mov
jmp
ror
or
lcall
jmp
xchg
inc
stos
push
cltd
lret
push
stos
and
cmp
cmpsb
sub
lods
je
xchg
bts
imul
and
scas
adc
adc
mov
ret
add
and
mov
lret
dec
sbb
jl
mov
fcmove
scas
push
stos
rorb
sub
stos
out
scas
pop
inc
sub
aas
push
push
jbe
and
stos
jp
inc
lods
ljmp
icebp
jl
sbb
insl
jmp
mov
cmp
or
vcvttpd2dqy
jns
test
cli
xor
and
and
stos
dec
hlt
pop
mov
pushf
mov
sub
sub
stos
mov
test
jb
imul
sbb
dec
push
pusha
clc
stos
xor
push
call
shl
mov
ljmp
stos
xchg
int3
cmpsl
pop
adc
icebp
sub
push
rcl
sub
fiadds
scas
stos
jp
test
sub
xchg
fwait
scas
adc
imul
in
ss
or
xorb
aad
push
push
stos
mov
jmp
push
sub
out
sub
sbb
sbb
lahf
jae
imul
xchg
xor
outsb
add
mov
out
stos
mov
ror
push
stos
xor
lea
lods
or
aam
es
and
mov
jmp
fsubrl
loopew
insl
dec
lods
in
flds
sub
push
int3
pop
sahf
stos
pcmpeqw
pop
mov
stos
xchg
pop
mov
inc
push
test
adcb
enter
or
mov
stos
sbb
mov
rcrl
adcb
inc
dec
stos
mov
push
sti
or
xchg
sbb
popf
jg
and
movsl
mov
adc
jecxz
cs
and
add
jl
cmp
inc
imul
fwait
test
leave
push
mov
lock
mov
pop
stos
mov
push
lahf
dec
stos
or
mov
mov
push
xchg
push
push
aaa
gs
push
mov
stos
stos
push
mov
sub
stos
jl
jp
insb
leave
outsb
inc
push
push
sub
subb
xchg
js
mov
in
xchg
jmp
fwait
xchg
cli
adc
jge
lcall
xlat
push
xchg
sub
lods
lea
dec
fabs
sub
adc
fsubrl
in
dec
sub
and
mov
cmpsl
lcall
dec
push
lahf
pusha
mov
sbb
xchg
addr16
test
jae
jb
cli
sub
mov
pusha
stos
icebp
mov
loop
xlat
inc
imulb
ret
and
or
jnp
movsl
outsb
mov
push
jns
add
imul
stos
cmpsl
hlt
out
pop
jnp
mov
adc
es
clc
loopne
jb
js
fwait
hlt
mov
cmpl
push
cmp
xchg
mov
mov
xlat
stos
sarl
jl
in
adc
fwait
in
ret
or
sub
xchg
addr16
stos
or
pop
cmp
movsb
mov
fisubrl
scas
adc
inc
ljmp
mov
stos
jmp
pcmpgtw
xchg
stos
sbb
sub
inc
shrl
dec
jnp
and
andb
adc
push
nop
stos
push
xorl
inc
lods
sbb
jmp
int3
push
sub
stos
push
dec
lea
stos
pushl
push
add
mov
mov
sbb
cmc
fbld
mov
in
xchg
hlt
mov
lahf
fwait
dec
cltd
popf
mov
mov
push
ljmp
cmpsb
mov
rcll
lods
ja
das
pop
imul
sbb
or
enter
push
in
pop
mov
sub
fldt
scas
test
push
xor
mov
pop
push
shll
stos
or
or
push
adc
stos
subb
add
stos
dec
push
daa
insb
lods
sub
adc
stos
xorl
rclb
sub
mov
stos
add
fisttps
stos
pop
mov
pop
icebp
jmp
sti
out
int
addr16
pop
adc
inc
adc
stos
dec
test
inc
mov
mov
por
mov
lods
rorb
movsb
clc
add
xor
mov
xchg
add
sub
cld
dec
sbb
lcall
stos
dec
push
cmp
mov
mov
ljmp
outsl
movsl
jnp
cmc
stos
xchg
sub
stos
dec
cmp
test
test
out
fdivrl
cmp
sahf
shrb
jne
xchg
mov
stos
cmp
fsubs
jnp
mov
mov
aad
aam
mov
sbb
adc
mov
stos
add
addl
call
daa
push
mov
ret
dec
dec
mov
subb
fs
mov
movsb
xchg
mov
mov
stos
push
mov
jmp
stos
cmpsb
and
cmp
pop
xchg
stos
inc
jne
insb
or
imul
std
int
jo
xor
sbb
cwtl
lea
push
pop
xor
adcb
push
mov
dec
sahf
lahf
lret
xor
ja
in
pop
inc
loop
xor
dec
aaa
sub
fwait
gs
jne
fldt
adc
cmpsl
cli
stos
and
mov
stos
lea
call
and
lock
mov
stos
stc
sahf
sub
mov
inc
stos
push
daa
inc
pop
stos
jp
shrb
jae
xchg
int
mov
cmpsl
mov
adc
jae
movsl
mov
int3
jmp
scas
je
xor
mov
imul
inc
xlat
xchg
addr16
mov
add
fst
stos
vmwrite
and
pusha
leave
stos
mov
sbb
stos
sarb
test
or
xlat
xchg
mov
popw
push
movsb
inc
cmp
push
sbb
mov
stos
mov
xchg
in
sub
jnp
imul
pop
loop
das
out
stos
xor
popa
adc
stos
fisttps
add
stos
xor
loope
mov
pop
xor
arpl
jno
ret
sub
les
or
push
fwait
xchg
iret
stos
or
xchg
jne
mov
or
mov
repz
stos
out
sahf
pusha
in
ja
stos
arpl
jb
shll
stos
and
mov
clc
shr
jg
adc
pop
jmp
or
lods
lcall
lret
sbb
shlb
outsb
dec
stos
push
inc
push
xchg
test
mov
pushf
cmp
pusha
jo
mov
cmp
mov
fsubr
in
stos
aam
jno
into
mov
push
mov
pop
lahf
inc
stos
inc
sub
shll
fidivs
imull
stos
cmpsl
jle
inc
outsb
aas
add
mov
xchg
pop
xchg
push
rcrl
iret
stos
dec
xchg
ja
inc
cwtl
cli
jge
mov
pop
in
sbb
stos
adc
dec
je
push
inc
mov
push
inc
addr16
outsb
xchg
jae
stos
push
xchg
js
sub
gs
cld
push
push
stos
mov
int
stos
mov
cmp
mov
js
in
setne
scas
call
lods
xchg
inc
test
gs
jns
or
jno
std
push
mov
or
mov
fiaddl
jmp
in
or
nop
xchg
jecxz
stos
lock
adc
mov
push
stos
and
pop
cli
stos
jno
jae
imul
int
xor
and
loopne
push
xlat
enter
popf
lcall
pop
adc
shrb
xchg
movsl
push
mov
pop
cs
sti
inc
or
xchg
cld
cmp
and
pop
icebp
xor
jne
push
inc
xchg
pop
mov
gs
shll
dec
adc
dec
or
jle
mov
xor
mov
push
xchg
scas
lds
imul
pop
xchg
add
stos
testl
sbb
stos
or
stos
jae
xchg
les
paddusw
not
or
lret
adc
mov
xor
out
fucomi
lods
ficoml
into
insb
mov
mov
jge
stos
cmp
push
or
test
decl
movsl
daa
cmc
jl
push
push
ret
popf
sbb
and
pop
add
jno
mov
push
push
mov
cld
and
xchg
inc
pop
stos
mov
xor
dec
daa
xor
fisubrl
sub
aas
mov
sti
scas
stos
or
mov
pop
shl
stos
or
ret
pushl
adcl
jmp
cmp
daa
mov
cmp
xchg
adc
popf
mov
cmp
cltd
mov
jge
ficomps
out
stos
sbb
jno
jmp
loop
cmp
shlb
adc
xchg
mov
in
stos
out
sahf
jno
je
add
data16
adc
sbb
mov
scas
or
xchg
jmp
addr16
insb
ds
mov
stos
rclb
stos
sub
and
nop
daa
stos
xor
cmpsb
xor
loop
mov
fdivr
adc
mov
sub
addr16
pop
xchg
dec
jae
imulb
clc
sbb
fcompl
test
stos
pop
ds
xchg
mov
pop
stos
dec
cmpsl
das
push
xor
mov
aad
fwait
lret
aas
xlat
in
stos
inc
or
sub
dec
stos
xchg
outsb
mov
jno
loop
push
imul
dec
mov
jmp
jb
and
xor
ds
ljmp
jg
shrl
cmp
in
pop
cmp
inc
imul
jle
cwtl
lods
stos
push
fisubrs
jl
mov
rolb
mov
jmp
out
push
orl
fsubrl
divl
cmp
add
and
sbb
aaa
ja
mov
cs
movsl
dec
mov
in
cmc
mov
xchg
jmp
jmp
iret
mov
pop
cmp
stos
stos
mov
jp
rolb
mov
stos
jno
lods
cmc
pop
cwtl
mov
repnz
push
daa
mov
popa
stos
xor
sbb
pop
push
add
arpl
mov
cmp
nop
bound
scas
xchg
mov
stos
fcoml
into
mov
mov
push
ljmp
pop
imul
adc
rorl
mov
repz
sub
mov
imul
add
lods
shll
jnp
ret
add
test
push
int3
mov
mov
add
pop
jl
or
and
xlat
lret
or
add
cmpsb
fsubs
repz
stos
icebp
inc
mov
dec
push
cwtl
pop
stos
adc
fstpt
int3
imul
mov
dec
push
sub
mov
xlat
jge
lods
popa
adc
aad
subb
add
loop
cmp
push
mov
sub
hlt
mov
jecxz
cltd
in
or
push
cmp
xchg
mov
ret
and
call
push
ds
fwait
mov
int3
pop
stos
or
cmpsl
mov
stos
fs
push
cmpsb
push
stos
call
jp
lcall
cmovl
or
lods
std
xor
or
push
sub
popf
scas
jmp
jmp
pop
nop
jl
stos
je
add
test
cwtl
dec
rcll
stos
inc
or
push
pop
test
sub
subb
mov
mov
xchg
mov
arpl
and
push
mov
dec
inc
stos
or
jmp
popf
loope
mov
inc
arpl
sbb
or
jl
or
fs
es
xchg
pop
out
cmc
stos
ret
inc
sub
mov
imul
push
pushf
cld
sub
mov
push
jae
push
daa
sbb
mov
stos
out
adc
cmp
pop
dec
adc
mov
pop
add
dec
xchg
in
lret
mov
bound
imul
jg
ds
repz
jecxz
fwait
xchg
sbb
jge
and
xchg
add
cmp
add
cld
xor
pop
xchg
inc
xchg
stos
jecxz
inc
or
repnz
pop
loope
push
stos
xchg
cmp
sti
das
jmp
mov
out
xchg
lock
and
inc
mov
mov
pop
insb
mov
rclb
jb
test
sub
adcl
arpl
jno
push
roll
adc
ja
inc
mov
fldenv
shrl
dec
jae
mov
cli
fwait
or
arpl
sbb
imul
stos
mov
cs
cmpsl
adcb
xchg
stos
sbb
aas
sahf
push
sbb
addr16
xorl
addr16
sbb
xor
stos
mov
lcall
and
dec
jmp
jle
cld
or
enter
mov
xor
popa
jmp
mov
cmc
and
bound
adc
sbb
les
dec
scas
push
dec
std
pop
xlat
fdivrl
mov
push
mov
shr
aaa
or
adc
stos
xchg
out
test
stos
mov
cs
scas
stos
mov
dec
in
inc
xor
jmp
ljmp
nop
adc
mov
rol
mov
adc
dec
das
adc
push
and
iret
in
mov
or
lret
data16
stos
repnz
into
or
cli
push
fs
sbb
stos
enter
out
mov
subb
in
sub
stos
arpl
pop
sub
and
dec
aaa
jge
sbb
imul
add
cld
orb
lock
popf
cmp
popa
std
inc
ljmp
mov
scas
movsb
les
cmp
out
mov
mov
out
lds
jl
xchg
xor
aad
sbb
sub
add
outsl
sub
movsl
jmp
cs
pop
aaa
movsb
mov
ret
int
stos
lret
movsb
mov
inc
mov
test
call
stos
cmp
pop
push
mov
stos
adc
test
sbb
push
add
icebp
pusha
pop
jb
and
pop
in
jecxz
xchg
dec
stos
mov
push
add
cmp
daa
dec
or
xchg
movsl
dec
sti
stos
xor
add
repnz
stos
fisubl
and
stos
push
outsb
mov
inc
jg
stos
int
mov
in
jmp
mov
add
and
mov
push
xchg
pusha
jmp
and
and
test
outsb
stos
je
inc
sti
out
pusha
mov
test
fdecstp
push
scas
push
stos
cmpsl
adc
mov
jp
movsl
jg
imul
das
daa
xor
xor
add
stos
dec
cmp
push
imul
stos
adc
or
mov
inc
insb
xchg
sbb
pop
mov
aad
lar
or
ljmp
pop
stos
xorb
insl
das
outsl
movsb
in
lods
aas
out
inc
adc
fwait
scas
fsubl
out
pop
repz
jnp
mov
jp
stos
xchg
mov
push
faddl
adc
jl
adc
stos
call
movsb
stos
xor
dec
dec
jns
shrl
std
mov
mov
xchg
icebp
inc
fstpl
sbb
mov
jns
lods
push
cli
cmp
adc
lods
outsb
std
stos
loopnew
mov
subb
mov
cmpsl
stos
dec
out
mov
pop
sbb
test
mov
enter
shrl
clc
loop
in
scas
and
addr16
pop
fwait
xchg
fisttpl
imul
add
inc
cmp
pusha
stos
sbb
aam
int3
scas
shl
nop
mov
es
sti
out
pop
inc
pop
ljmp
or
mov
aas
and
cs
outsl
inc
stos
jp
xor
loop
push
jns
enter
jle
fildll
and
repz
jns
ret
add
in
xchg
rcrb
ret
sub
xchg
daa
sbb
stos
inc
mov
test
mov
stos
dec
mov
imul
mov
mov
movsl
iret
xchg
sbb
lcall
stos
roll
push
pop
stos
je
mov
or
mov
lds
add
sub
or
stos
cwtl
ror
or
cmc
adc
mov
mov
nop
fs
push
mov
jmp
inc
sub
mov
mov
out
ss
mov
and
idivb
repnz
stos
ss
push
add
inc
xchg
and
nop
mov
dec
xchg
or
cmp
fwait
loope
push
in
imul
mov
mov
push
push
fdivrl
out
dec
push
add
stos
mov
push
pop
and
jmp
pushf
sub
sti
inc
sbb
fsubrs
stos
dec
mov
or
dec
addr16
sub
stos
push
jb
iret
stos
sahf
jecxz
lahf
inc
pop
aad
stos
fcmovbe
inc
xor
xchg
cmp
mov
insl
test
stos
fldlg2
insb
push
cltd
int3
cmpsl
stos
out
dec
lods
fwait
das
cmp
mov
repz
cltd
lock
popf
sahf
push
cmpsb
fwait
add
adc
cmpsl
scas
push
pop
int3
shrb
imul
shrl
add
cs
push
les
das
test
insl
lahf
clc
rcrb
inc
arpl
in
dec
mov
bound
jg
daa
mov
mov
cmp
mov
stos
shrb
fdivrs
inc
stos
cltd
sbb
pop
ss
cwtl
inc
stos
sub
adc
lcall
mov
mov
ljmp
lods
stos
divl
mov
hlt
mov
imul
sub
jecxz
and
xor
push
mov
stos
push
call
iret
in
andl
mov
inc
ja
adc
fxch
or
je
mov
jae
xor
sbb
roll
shlb
pop
xor
lcall
jnp
cmp
out
xchg
stos
das
pop
xchg
dec
mov
fmuls
and
dec
pop
xchg
pop
movsl
stos
dec
jbe
ret
in
imul
push
iret
xchg
stos
out
push
mov
stos
ss
mov
lock
das
ljmp
mov
movsl
and
incl
xlat
inc
lahf
loope
jecxz
cltd
xchg
adc
jno
cs
fisubs
lds
xchg
aam
stos
negb
jle
rcrb
push
test
and
fmuls
stos
jecxz
iretw
xor
lret
sahf
pop
fwait
jg
add
stos
ficompl
sub
pushf
inc
jmp
or
push
xchg
andb
mov
addr16
addr16
pop
divl
mov
push
cmc
inc
push
jg
addl
rorl
xor
sub
testb
stos
popa
mov
arpl
in
int
mov
jne
lods
das
std
dec
gs
stc
jb
repz
rcl
mov
aad
and
or
add
stos
es
jecxz
stos
xchg
mov
adc
dec
push
stos
push
cmp
popf
sbb
arpl
test
sub
mov
fcmovne
pop
mov
stos
addl
push
pxor
add
das
mov
xchg
inc
sbbl
push
ljmp
fsubl
adc
imul
flds
fidivrs
lods
mov
imul
jns
pop
stos
mov
andps
jmp
inc
xor
ret
data16
ljmp
test
leave
stos
and
adc
fiaddl
lods
mov
aad
mov
cmc
insb
test
cmp
sbbl
mov
inc
scas
stos
inc
fs
jmp
xor
fwait
pop
mov
dec
ljmp
adc
mov
xor
sub
dec
xlat
fs
xchg
cmp
sub
cmp
xchg
sbb
and
lock
xor
push
xchg
lods
sbb
stos
fisttpll
jne
jle
and
pop
cltd
popa
and
or
fildll
stos
out
inc
push
adc
pop
stos
sub
decb
sarl
cmpsl
push
cmp
mulb
cmpsb
stos
cltd
lock
jge
cmp
stos
mov
shlb
stos
dec
in
xchg
out
stos
push
xchg
stos
shll
stos
pop
imul
push
mov
mov
shlb
jge
jnp
inc
lods
mov
dec
jno
xchg
xchg
into
stos
stos
leave
mov
pop
stos
jb
push
out
inc
repnz
jle
jge
ret
mov
mov
cli
sarb
stos
rcrl
dec
fwait
sbb
xchg
js
cmp
push
mov
mov
shlb
xor
or
dec
clc
popa
aam
pushw
mov
push
in
fwait
cltd
mov
dec
cmp
xor
iret
mov
or
cmpsb
lcall
rclb
inc
ljmp
outsb
dec
adc
stos
insl
or
xchg
or
mov
xchg
mov
sahf
sub
cld
mov
lods
cmpsl
and
pop
mov
das
and
stos
jnp
idiv
xor
mov
fimull
out
pop
int3
dec
filds
leave
fs
test
insb
cmpsb
mov
mov
dec
sbb
push
icebp
cmpsl
popa
xchg
pop
scas
dec
stos
xor
subb
fnsetpm(287
jae
test
pop
stos
add
push
nop
stos
insb
mov
pop
shrb
mov
adc
in
daa
mov
ds
add
scas
fs
sub
mov
aas
push
arpl
test
ja
stos
pop
dec
push
inc
stos
adc
xchg
cmc
jecxz
jne
mov
xchg
mov
fmull
cmp
aas
xchg
mov
sbb
loopne
push
rep
cltd
enter
in
pop
stos
lods
mov
js
or
mov
xchg
cld
sbb
stos
lahf
lods
pop
and
aaa
mov
ret
cli
imul
fisubrs
repnz
test
aam
dec
fwait
dec
mov
sti
sub
adc
mov
pop
into
sbb
fcompl
in
pop
mov
lods
aam
in
stos
lret
add
jns
xchg
arpl
sub
mov
scas
pop
dec
loop
adc
decb
aas
mov
sarb
stos
cmpxchg
fs
add
mov
neg
mov
adc
outsl
ret
xor
lods
stos
sahf
shll
inc
stos
repz
out
adc
pop
push
mov
adcl
xchg
incl
push
xor
fwait
push
and
repz
clc
out
std
cmpsl
cld
es
dec
push
in
scas
decl
cmovae
xchg
cmpb
scas
xchg
dec
stos
jge
daa
ficompl
aaa
stos
outsl
sbb
adc
stos
mov
jmp
insl
vpcmpeqw
cwtl
out
push
imul
mov
dec
inc
inc
mov
stos
sbb
sub
pop
popf
fs
jae
mov
stos
adc
std
or
popf
subb
hlt
repz
and
jno
stos
int3
mov
push
stos
lret
daa
ss
stos
shrl
shll
test
or
push
jbe
jb
arpl
mov
mov
or
jmp
sub
cmp
fcmovne
xchg
xchg
imul
or
cli
cmp
and
daa
push
mov
inc
dec
aad
ljmp
in
push
addr16
mov
push
mov
fiaddl
jbe
xchg
xchg
loope
aaa
jl
jne
xor
inc
lahf
ja
stos
xor
insb
mov
enter
cmp
call
stos
iret
ret
sbb
sub
fsubs
push
stos
mov
pop
or
inc
movl
imul
cmp
mov
dec
add
adc
fldcw
js
xchg
imul
jmp
stos
ja
xchg
push
stos
xor
cs
jbe
daa
fwait
mov
mov
or
mov
mov
jae
mov
loope
clc
ret
stos
add
hlt
inc
call
cmp
fstps
jns
rol
mov
lock
popf
je
jecxz
faddp
notl
push
out
xor
or
arpl
sbb
xor
lds
push
xchg
testb
sub
scas
add
lods
cmp
pop
or
mov
repnz
stos
icebp
in
adc
in
or
add
fidivl
stos
and
sub
and
cmpsl
cld
addr16
enter
ja
mov
js
ljmp
sub
fs
sub
sbb
cmc
and
xlat
or
xchg
pop
stos
sub
pop
sub
out
cmpsl
test
movsl
xor
call
push
outsb
sahf
mov
popf
stos
mov
mov
stos
mov
mov
rorb
push
sahf
xchg
jmp
rorl
mov
sub
jl
pop
jbe
paddd
jle
stos
xor
leave
sbb
xchg
fildl
sub
push
sbb
mov
pop
or
pushf
rcl
sbb
hlt
bound
stos
aad
call
stos
and
stos
pop
cld
imul
sti
stos
pop
ficoml
sbb
movsb
push
add
stos
mov
pusha
cld
mov
mov
jmp
jno
repnz
je
testb
ljmp
cli
stos
out
stc
testb
xor
stos
cwtl
ror
lock
leave
test
imul
stos
daa
pop
push
jmp
daa
dec
mov
mov
mov
dec
fsts
pop
mov
adc
stos
xor
xorb
stos
int
cs
cmc
clc
stos
std
dec
lock
jecxz
dec
dec
jmp
imul
mov
jmp
push
enter
xchg
stos
aam
in
fldl
push
ds
mov
pusha
ret
outsb
cwtl
movsb
pop
nop
cmpsl
movsb
setnp
fwait
pushf
lods
mov
hlt
stos
pop
fisubrl
cmp
rorl
adc
stos
clc
arpl
dec
sub
sbb
mov
stos
jecxz
jbe
or
mov
popa
pop
loopne
xchg
and
mov
movsl
pop
xchg
sti
pop
stos
push
ss
push
das
mov
lods
push
pop
leave
mov
jmp
call
mov
xchg
in
ret
stos
xor
pop
mov
push
cmp
addr16
and
add
clc
iret
mov
push
push
std
mov
sub
mov
xchg
mov
dec
xchg
jle
sar
ret
subl
icebp
cmp
cmp
pop
orl
lcall
scas
fwait
lods
rclb
int
scas
das
stos
xchg
and
cli
or
imul
cs
jmp
cmp
test
popf
sbb
js
and
movsl
lcall
dec
or
arpl
mov
mov
fisubrs
mov
push
pop
inc
jo
lea
imul
mov
cmp
iret
mov
imul
int3
outsb
call
inc
jo
add
stos
xor
lret
adc
add
cmpsl
into
mov
test
mov
stos
paddq
icebp
imul
or
mov
or
hlt
ret
adc
jmp
int3
and
fldl
cltd
int3
imulb
jnp
outsb
daa
lret
cld
test
mov
push
or
lcall
ret
push
lds
mov
mov
je
negl
scas
xchg
jle
inc
stos
xor
push
imul
les
inc
mov
cltd
sbb
stos
pop
aad
in
pop
mov
fs
xchg
decb
push
cwtl
mov
push
sub
lea
jg
stos
sub
dec
aad
sbb
cmp
xchg
inc
pop
mov
jg
mov
ret
push
pop
jae
xlat
xchg
lods
jg
mov
stos
push
subl
inc
pop
mov
repz
cmpsl
xchg
xchg
stos
xchg
xchg
lods
js
push
mov
stos
cmp
gs
xor
mov
push
mov
popa
pop
repnz
outsl
add
push
imul
push
repz
idivb
stc
mov
lret
loope
jmp
pusha
mov
mov
mov
loopne
push
xchg
sbb
das
jmp
cmc
stos
movsb
loope
popf
sbbb
stos
insl
mov
out
push
sub
cmp
adc
pop
push
adc
adc
mov
inc
sub
stos
mov
lods
mov
dec
ljmp
insl
fbld
jb
das
mov
mov
stos
sub
jae
rorl
sbb
in
out
imul
imul
aaa
icebp
std
fwait
and
shl
mov
lods
stos
xchg
lahf
lods
xchg
add
sahf
jecxz
lret
xlat
jae
jb
nop
fsubrl
sub
jno
and
add
pop
addr16
subl
mov
adc
stos
fsubr
lods
fdivrl
shll
stos
pop
or
sbb
gs
sub
mov
repnz
fcompl
mov
aam
adc
imul
jl
push
movsb
sbb
adc
fisttpl
pushl
push
and
das
sbb
int
fsubp
mov
nop
xchg
mov
stos
cmpsb
sqrtps
jo
adc
lret
xchg
mull
dec
daa
ret
pop
cmp
jl
pop
sub
pop
add
cmp
push
mov
lods
mov
or
lods
mov
sub
push
cs
pop
dec
sbb
dec
and
aad
xchg
or
test
xchg
or
push
movsw
xor
out
arpl
push
scas
call
pop
jmp
arpl
daa
or
push
stos
mov
mov
sbb
dec
repz
push
imul
sbb
aam
fwait
test
outsb
stos
sub
or
cmovp
cld
push
stos
xchg
sbb
mov
int
stos
xchg
mov
ret
cmp
jnp
out
cmp
mov
jecxz
sti
cmc
stos
sbb
ret
xor
incb
jmp
aaa
add
push
imul
add
arpl
lahf
or
in
orb
call
sbb
mov
ljmp
sub
cwtl
dec
mov
andb
mov
mov
movsb
mov
xor
cmp
dec
jmp
in
int3
add
adc
jmp
fs
rorl
cwtl
and
xchg
loope
stos
jecxz
or
bound
out
pop
mov
aad
push
lock
stos
pop
mov
inc
xlat
and
inc
stos
fs
dec
in
ficoml
movsb
add
pop
or
dec
addl
mov
stos
pushf
in
pop
pop
into
pop
stos
je
int3
xchg
int
add
pop
xchg
or
imul
iret
push
pop
sub
adc
and
hlt
dec
ficoms
mov
cmp
gs
test
adc
repnz
push
lods
lods
sub
mov
shl
mov
and
mov
mov
mov
stos
push
clc
mov
push
jg
cmc
sbb
sbb
push
jno
mov
repz
scas
stc
stos
dec
int
sub
pop
sbb
or
pop
jmp
lods
int3
and
stos
es
loopne
pop
rolb
sub
out
sub
xchg
ljmp
jnp
or
in
cltd
les
daa
movsl
negl
stos
mov
mov
stos
fdivp
fstpl
nop
gs
les
fcompl
xchg
or
stos
pop
call
sbb
mov
stos
add
or
stos
mov
dec
push
shll
cwtl
in
inc
pop
fildl
in
sete
in
xchg
pusha
enter
jecxz
scas
lods
aad
fcmovnbe
or
adc
jns
test
xor
lcall
add
mov
and
mov
adc
addr16
lcall
xchg
stos
adc
sahf
pop
sub
mov
test
fisubl
sub
pop
sbb
hlt
fcmovnbe
fwait
dec
sub
lahf
adc
mov
pop
xor
daa
mov
es
sbb
adc
clc
fldcw
stos
adc
pop
dec
adcl
fisttpl
stos
lahf
push
aad
cld
popf
lret
ja
cmpsb
icebp
movsl
mov
and
mov
dec
push
stos
cmp
dec
or
xor
daa
dec
adc
in
mov
inc
mov
add
jp
lahf
stos
xchg
mov
aas
dec
xor
sub
cmp
push
aam
cmp
sbb
adc
test
mov
daa
gs
sbb
fwait
jg
push
mov
mov
mov
loop
jl
sub
or
cmpsb
insb
pop
push
outsb
mov
mov
inc
test
mov
insl
cmpsl
cld
iret
xor
sbb
fstl
imul
inc
in
mov
inc
sbb
movsb
mov
cmp
stos
xchg
or
push
adc
sub
loop
aas
imul
ljmp
enter
mov
pop
mov
dec
pushf
stos
out
add
mov
lods
popa
out
xchg
cmp
sbbb
mov
mov
xchg
mov
lods
or
jmp
rcll
in
cli
scas
cmp
jl
loop
inc
or
aad
ret
stos
clc
cmp
mov
nop
xlat
or
adc
fwait
push
inc
stos
lret
sbb
stos
jle,pn
push
cmp
in
and
fimuls
push
rcr
or
int3
nop
xchg
pop
stos
xor
xlat
inc
jb
jg
mov
and
inc
into
adc
lret
pop
add
jns
dec
in
lahf
vandps
stos
cmp
ja
jmp
not
push
mov
and
ret
cmp
jecxz
mov
flds
adc
xchg
push
mov
jo
and
or
dec
inc
mov
xor
lcall
jmp
adc
scas
sub
loope
jns
sti
xchg
add
fdivrp
enter
stos
cs
adc
jmp
mov
fwait
lcall
add
ja
daa
les
xchg
and
jo
stos
dec
inc
sbb
mov
int
cmpb
and
mov
stos
sti
mov
pop
stos
mov
xchg
stos
jp
mov
shrb
ds
stos
repnz
jnp
stos
adc
push
andl
add
inc
in
stos
fdivrs
lret
push
stos
pop
inc
push
out
mov
test
pop
pop
add
fmuls
xchg
stos
aas
testl
in
mov
shlb
flds
xchg
pop
cltd
and
push
dec
stos
xchg
xor
ret
lret
stos
mov
dec
jl
ret
in
std
int
add
xchg
mov
movsb
push
jnp
rolb
stos
jg
popf
faddl
jl
stc
lret
cmp
sub
add
mov
push
stos
lock
ret
xor
push
pop
push
addr16
mov
dec
or
and
jp
stos
inc
mov
popf
push
mov
and
add
push
cmp
maskmovq
testl
jmp
xlat
inc
stos
inc
stc
jmp
mov
shr
mov
xchg
stos
pop
mov
push
jecxz
adc
in
cltd
addr16
add
int
fwait
ljmp
push
jp
lock
cltd
imul
mov
incl
jecxz
fucomp
mov
ljmp
mov
es
sbb
out
hlt
stos
stos
cmp
sahf
loopne
dec
ficomps
mov
mov
add
and
fwait
xchg
rorl
orb
loop
xor
dec
insl
mov
push
sub
cmp
lds
inc
mov
push
loopew
and
aaa
cmpsl
int
jno
xchg
mov
mov
push
clc
sbb
ficomps
add
mov
jbe
test
stos
orb
gs
cltd
xor
cli
fcoml
aas
sbb
testl
add
stos
cmc
add
enter
in
sti
inc
data16
imulb
pushf
push
mov
xor
mov
aas
shll
in
stc
cli
push
rcll
xor
sbb
jae
test
or
stos
xor
mov
inc
dec
push
subl
popa
pop
lcall
cmc
lock
adc
jnp
mov
stos
enter
and
outsl
fldpi
out
push
mov
and
xor
ljmp
add
xchg
arpl
scas
pushf
and
outsl
push
mov
jnp
adc
out
sub
popl
mov
adc
bound
jp
stos
jl
inc
pop
jge
pop
sbb
push
or
sub
sub
stos
adc
lods
or
lds
ja
inc
add
cld
push
mov
ljmp
adc
pop
daa
stos
arpl
fildll
stc
or
pop
test
xor
leave
aas
adc
mov
xchg
cltd
jg
movsb
popf
add
pop
mov
mov
lret
test
mov
int
out
arpl
leave
add
lret
pop
imul
scas
stos
repz
fcom
cwtl
xor
icebp
lcall
xor
sbb
lods
popf
add
mov
cmpsb
ss
and
popf
sti
mov
inc
sub
in
fxch
stos
ret
push
ret
add
push
mov
insl
cmp
stc
cwtl
mov
mov
ret
std
mov
stos
mov
pop
in
outsb
stos
jp
mov
inc
stos
rcl
lahf
mov
add
cmp
jmp
lods
add
jmp
ljmp
outsl
mov
mov
pop
add
jl
xchg
sahf
jle
popf
lock
notb
outsb
mov
cmp
sub
pop
jno
imul
in
stos
sub
push
es
mov
jl
mov
fsubs
nop
pop
and
mov
adc
andl
push
sbb
mov
pop
gs
sbb
jmp
fisubl
push
and
xor
shll
stos
sbb
xchg
mov
orb
lock
loopne
and
mov
and
mov
pop
int3
or
add
adc
push
stos
mov
push
popa
stos
xchg
cmp
addb
push
stos
outsl
xor
mov
fucomip
sbb
push
stos
mov
insb
xor
mov
subl
daa
mov
push
subl
mov
int3
cmp
outsb
dec
and
mov
lret
mov
stos
xor
jecxz
dec
jmp
cmp
xor
xchg
std
lods
and
sbb
test
push
enter
cmp
mov
inc
nop
into
repz
mov
shrb
stos
f2xm1
lahf
mov
stos
xchg
pop
loop
stos
xchg
sbb
pushf
push
jae
dec
push
or
add
cwtl
ret
stos
ja
and
push
lds
dec
pop
xchg
sbb
inc
jns
cwtl
lds
movsl
cmp
or
mov
inc
in
mov
mov
jno
lret
roll
sub
mov
fisubrl
cli
and
jbe
jns
sbb
push
scas
pop
ljmp
ds
aam
xor
insb
nop
pop
inc
and
push
cmp
shll
xchg
sbb
movsb
fdivl
xor
lahf
adc
mov
stos
adc
sub
sub
cltd
ljmp
cmp
movzwl
sti
or
mov
sub
jmp
cltd
outsb
outsl
fiaddl
fistps
stos
cmpsb
sbb
add
dec
jb
pop
stos
jno
pop
imul
sti
dec
movsb
mov
fisttpl
jno
mov
movsl
stos
and
test
cld
imul
orl
lret
into
jne
mov
and
bsr
cmpsb
arpl
mov
imul
mov
pop
movsb
stos
mov
add
inc
popa
fwait
push
inc
pop
mov
xchg
stos
pop
js
push
mov
bound
fcoml
and
inc
rcrb
mov
push
mov
scas
aas
fsubrs
or
test
mov
or
push
lret
loop
or
or
enter
sbb
push
lfs
cmp
jmp
shll
lcall
popa
mov
cmpl
cwtl
cmp
cmp
add
pop
cmpsl
addl
jnp
lock
pop
fucomp
and
pop
std
adc
pop
xlat
push
xor
mov
jbe
mov
cltd
repnz
push
or
shl
push
ret
pop
inc
sub
mov
addr16
cwtl
loopne
aas
mov
loope
out
insl
mov
push
pop
idivl
stos
and
adc
cmp
addr16
and
lods
xchg
hlt
addb
stos
gs
xchg
adc
inc
mov
xor
stos
jb
adc
add
shrl
xor
insl
and
xchg
push
xlat
cmpsl
inc
mov
mov
test
add
int
fmul
stos
cmpsl
mov
ds
mov
mov
pop
stos
arpl
lods
dec
xchg
stos
sub
lods
outsl
int3
xchg
jmp
adc
lods
mov
in
mov
sbb
add
orl
inc
xchg
pop
stos
sub
cmpsl
stos
or
pop
fbld
xlat
push
lods
subb
aas
in
stos
les
inc
outsb
stos
mov
jl
test
or
jns
clc
mov
daa
pop
mov
sbb
call
adc
stos
dec
cli
push
sbb
mov
mov
cmp
jnp
or
test
out
stos
subl
add
lea
pop
fsubl
fnstenv
pop
test
pushf
xchg
and
jne
push
adc
js
mov
mov
fs
lcall
stos
sbbl
xor
push
into
dec
inc
dec
push
cltd
inc
movsl
iret
stos
push
lret
loopne
arpl
stos
mov
jecxz
fsubr
xor
mov
outsb
xor
aas
ljmp
push
inc
push
sahf
mov
xchg
stos
iret
dec
adc
sarl
stos
xchg
inc
adc
ljmp
in
fcmovne
stos
pop
sub
mov
xor
mov
jns
scas
cmp
push
movsl
cmp
push
in
daa
fmuls
add
movsb
data16
mov
dec
jecxz
stos
filds
dec
icebp
rclb
dec
pop
stos
in
sub
jnp
mov
ds
cmpsl
dec
dec
sbb
or
ja
fsubp
mov
imul
gs
test
xor
fisubrl
rorl
xchg
aaa
stos
pop
mov
push
fimull
scas
mov
ds
pop
xchg
jmp
inc
jp
fmul
loop
push
stos
pop
jmp
mov
pop
es
jae
mov
inc
stos
sub
push
stos
push
xchg
ret
cli
sub
lcall
push
dec
mov
jp
mov
pop
xor
xchg
ja
mov
stos
mov
lods
sub
mov
pop
jle
inc
push
jg
inc
test
inc
in
out
pop
cwtl
sbb
push
dec
mov
pusha
stos
sub
je
shrl
fstpt
sub
test
aam
xchg
insl
aad
popa
pop
lret
ud1
pop
xchg
mov
push
mov
ss
pop
fwait
int
stos
std
filds
xor
push
lcall
aad
inc
jcxz
mov
stos
negb
ds
imul
xchg
out
sbb
stos
in
arpl
jge
mov
pop
sbb
xchg
rcrl
out
stos
or
lret
lcall
inc
hlt
cmpsb
stos
arpl
xlat
sbb
inc
stos
cwtl
mov
shll
inc
and
xchg
fsubs
cmp
mov
or
push
xchg
dec
dec
pop
cwtl
aad
jb
mov
std
inc
out
add
rcrl
mov
xchg
jle
out
stos
cwtl
js
inc
lret
cli
push
xor
sbb
pop
cmp
cmp
xlat
pop
mov
ljmp
in
aas
adc
addr16
test
jp
sbb
adc
mov
daa
pop
jecxz
adc
ljmp
lds
shlb
lods
push
mov
ret
stos
adc
popa
cld
stc
mov
cmp
repnz
dec
arpl
pop
test
fwait
cs
ljmp
push
push
sub
dec
stos
pop
nop
mov
outsl
stos
inc
ret
rcrb
cltd
enter
inc
or
sub
clc
push
imull
xor
stos
cwtl
stos
xor
sub
xchg
stos
call
inc
xorb
shrl
rcr
pop
push
mov
imul
pop
cld
mov
insb
nop
add
stos
jnp
fnstsw
mov
and
inc
push
stos
cmp
fbstp
mov
movsl
mov
and
mov
cld
xchg
and
movsl
xor
mov
sbb
stos
xorl
xchg
xor
fildll
insb
and
adc
xor
ss
mulb
loopne
imul
push
and
xor
xor
mov
test
movsl
mov
mov
testl
cs
js
jns
arpl
xorb
aaa
inc
call
xor
aam
push
stos
mov
inc
pop
in
insl
xor
push
sbb
xchg
and
xor
xor
stos
call
xor
arpl
shlb
stos
cmc
or
fstl
push
lods
inc
stos
adc
daa
mov
push
daa
fwait
jne
adcb
pop
dec
inc
mov
push
push
xchg
adc
popf
xchg
push
daa
and
clc
incb
icebp
jne
lock
int3
cmpsl
dec
lret
xor
insl
daa
cmp
jle
fsubl
in
sbb
stos
repz
sahf
mov
add
lret
inc
stos
jp
and
xchg
stos
cmc
jb
pop
fcompl
sahf
and
neg
pop
adc
push
fimull
pop
xchg
scas
sbb
mov
mov
sbb
orl
mov
repnz
rcr
xchg
jno
inc
std
mov
pop
dec
mov
xchg
cs
sub
lahf
sbb
and
ja
test
and
stos
out
xor
push
loope
stos
out
test
and
cmp
in
mov
imul
mov
stos
insl
adc
stos
popf
jl
pop
insb
lock
stos
cmpsl
js
pop
cli
leave
pop
cld
lods
cmc
push
inc
mov
fwait
rcrb
or
adc
fs
insl
xchg
ja
stos
cltd
pop
xor
in
mov
in
rep
push
lret
push
scas
out
and
imul
xchg
mov
mov
push
push
out
aas
outsb
rcll
cmp
stos
or
jle
inc
inc
lret
add
scas
das
mov
jg
out
jo
mov
mov
test
gs
loope
pop
xchg
jne
fidivs
imul
iret
cmpl
call
stos
cmp
pop
stos
movsl
lcall
rsqrtps
scas
arpl
movsb
jmp
cmpsl
ret
push
push
xchg
stos
inc
push
xchg
testl
mov
sub
push
xchg
das
mov
add
xchg
cmpsl
mov
mov
jno
fisubrs
pop
lds
js
scas
xlat
sbb
fisubrl
rclb
xchg
test
mov
out
stos
push
fcoms
sbb
or
loopne
idivb
popf
lret
stos
xlat
repnz
dec
loopne
xchg
bound
jge
or
mov
cmp
sbb
imul
pushf
mov
sbb
sub
icebp
cmp
adc
stos
sbb
pop
aam
xchg
scas
lock
test
xchg
mov
pop
mov
addb
imul
rcrb
add
adc
stos
ss
cmpsb
popf
jns
movsl
pop
jmp
jecxz
jge
ljmp
xchg
xchg
push
pop
jle
stos
rcll
mov
mull
add
daa
popl
mov
mov
fisubrs
loopne
inc
xor
or
lret
jle
ss
stos
imul
mov
dec
cmc
stos
and
lahf
scas
push
fdiv
stos
cli
pop
sarl
adc
xor
add
addr16
rolb
mov
andb
xchg
gs
je
insl
js
stos
mov
dec
stos
orl
sub
sbb
mov
mov
scas
ds
mov
nop
int3
into
jae
in
mov
xor
fdivr
stos
xchg
xchg
out
pop
mov
std
movsb
gs
int3
rcl
dec
mov
jne
cmc
mov
push
adc
sub
xchg
cltd
or
stos
cmp
push
xchg
movzbl
mov
mov
imul
out
inc
or
outsb
test
push
arpl
mov
stos
cmpsb
repnz
or
cmpb
fsubrl
jg
loop
ljmp
shl
dec
stos
or
push
imul
aam
mov
stos
xchg
mov
mov
arpl
je
cltd
imull
mov
test
shlb
mov
incl
adc
in
int3
cmpsl
push
push
stos
add
mov
shrb
in
cmp
sbb
outsb
enter
dec
adc
fwait
adcl
clc
inc
stos
fstpl
mov
stos
cmpsb
jmp
push
fdivs
stc
int
decb
ret
sbb
sbb
stos
mov
subl
les
xchg
xchg
lret
call
dec
or
fisttpl
cs
push
pop
sbb
push
cmp
out
popf
ljmp
lods
mov
add
ret
push
cmpsb
add
mov
and
lea
add
or
stos
mov
lods
jle
cmp
test
push
or
sbb
repnz
fcompl
out
mov
aad
jo
sarb
sbb
bound
mov
stos
push
push
pop
add
mov
push
arpl
mov
mov
shrl
stos
imul
ret
jge
push
les
push
inc
into
stos
sub
fwait
lret
xchg
dec
inc
stos
enter
ret
xchg
mov
pusha
and
cmpsl
fdivrs
sbbl
dec
inc
and
andl
xchg
add
jae
and
dec
inc
xchg
and
mov
jbe
ja
iret
rcll
or
sub
and
pop
xchg
stos
ud2
popa
arpl
pushf
jge
stos
xor
movb
lds
lods
ja
jmp
xchg
arpl
xchg
and
shlb
sbb
stos
lea
jp
stos
inc
mov
ds
idivb
stos
loope
negl
add
das
aaa
mov
andl
pop
sbb
push
ljmp
scas
cltd
push
inc
add
cmp
mov
push
stos
iret
and
inc
inc
testl
pop
ljmp
dec
aaa
cs
and
stos
aam
xor
jns
or
stos
scas
jno
js
xchg
out
shrb
sbbl
stos
out
adc
sub
mov
loopne
outsl
hlt
cmpsl
dec
clc
rcll
out
cmp
fisubl
jecxz
stos
mov
cltd
into
cmpb
bound
arpl
stos
cmpl
lret
jecxz
popa
fwait
stos
out
daa
xchg
rolb
mov
stos
movsb
inc
out
inc
mov
popf
cmp
mov
scas
stos
stos
mov
in
push
and
sarb
mov
nop
hlt
xchg
stos
sub
xchg
jae
inc
and
cli
mov
mov
out
stos
push
lea
popf
out
cwtl
mov
shrl
sbbl
ja
je
orl
fldt
push
or
out
lahf
rorb
addr16
xchg
cwtl
stc
mov
mov
subl
pop
out
scas
mov
icebp
call
xchg
jne
xor
mov
push
push
inc
push
pop
inc
pop
xchg
in
cltd
xchg
jecxz
pusha
jb
aad
scas
dec
jge
push
dec
jns
stos
loopne
stc
cmp
fsub
push
iret
test
push
bound
or
ja
mov
fsubrs
mov
dec
xlat
shrb
fwait
dec
pop
adc
jb
sbb
add
sub
ljmp
xchg
mov
mov
mov
loop
scas
jg
test
stos
cmpps
cmp
sub
fdiv
shrl
cmp
xorl
push
iret
dec
ret
stos
adc
pop
repz
repnz
jecxz
shll
inc
into
sar
cmp
jbe
pop
rolb
fwait
add
stos
jnp
icebp
push
adc
inc
mov
pop
xor
lret
dec
stos
int3
stos
push
sub
push
mov
js
stos
sbb
cmp
xchg
bound
cmpsl
loope
or
push
fmul
mov
stos
in
leave
xchg
je
jae
and
sub
or
imul
mov
lods
das
imull
push
jg
out
out
fmul
inc
mov
sbb
stos
mov
mov
loop
pop
xchg
outsb
push
dec
sbb
stos
bnd
and
nop
mov
inc
xchg
mov
push
das
sbb
xor
xlat
add
stos
mov
lahf
sbbl
push
inc
or
adc
sbb
fisubrs
pop
or
mov
add
pusha
sahf
xchg
jno
mov
pop
xor
stos
in
xchg
inc
or
mov
push
mov
push
fsubs
xchg
mov
int3
jmp
cmovne
mov
mov
stos
ljmp
jnp
loopne
jne
lret
jmp
push
insl
xchg
pop
push
jns
scas
fdivrl
xor
std
pop
aad
cmp
mov
jl
xchg
idivb
mov
call
loope
stos
cwtl
sti
ds
mov
adc
add
rcrl
loope
cmp
mov
mov
push
aas
fnstsw
pop
mov
out
xor
adc
jge
add
stos
adc
into
ljmp
jg
add
jmp
outsb
or
test
stos
imul
dec
loopne
in
test
stos
pop
push
mov
dec
sbb
fistpl
xchg
push
lods
stos
aam
fistpll
mov
icebp
js
adc
xchg
jo
xchg
fdivr
xor
movsb
dec
cmpsb
lock
and
sub
mov
mov
and
sub
stos
pop
fldt
adc
cmpsl
sti
push
push
icebp
fsubr
lcall
rclb
out
repz
stos
adc
jne
mov
stos
sbb
stos
arpl
jp
outsb
clc
or
stos
push
and
mov
mov
lahf
cli
mov
imul
cltd
fmulp
pop
stos
sub
dec
imul
xor
fwait
pop
hlt
insb
mov
ds
mov
jae
lea
mov
stos
nop
loopne
lcall
push
mov
lret
lods
shrb
add
add
mov
outsb
xchg
cwtl
stos
xor
xorb
mov
scas
scas
lods
mov
stos
out
ss
stos
es
push
or
std
mov
push
cmovp
add
xchg
pop
popl
repnz
and
mov
jmp
movsb
leave
pop
or
xchg
shrl
mov
ss
inc
imul
jl
sbb
dec
add
stos
test
xchg
imul
mov
pop
faddl
xchg
dec
stos
jnp
add
xchg
int3
in
stos
mov
ja
pop
stos
mov
mov
mov
jmp
adc
sub
ljmp
stos
aaa
out
pop
push
test
daa
icebp
arpl
fucomi
cmp
push
mov
pop
clc
daa
cmpsl
or
je
sub
add
in
repnz
mov
mov
jae
sub
pop
movsb
into
test
in
stos
lahf
popf
push
int
mov
dec
inc
and
imul
mov
imul
add
and
or
mov
push
stos
cmp
dec
pop
loope
pop
imul
ds
in
lahf
jbe
jbe
adc
fwait
addl
aas
ljmp
or
int3
cmp
cwtl
loopne
int
imul
mov
ljmp
stos
sub
test
sub
and
jle
je
mov
pop
aas
mov
out
scas
mov
je
shl
cmp
push
xchg
pop
sub
in
inc
outsb
popa
jge
sub
jns
fwait
jae
in
mov
stos
and
adc
pop
out
je
fists
stos
cmp
aam
push
mov
add
repz
icebp
fwait
add
stos
cli
aaa
imul
in
jns
imul
outsl
call
stos
jno
das
pop
sub
sub
cwtl
push
imul
leave
sub
stos
dec
jl
shrl
dec
xor
add
pop
mov
pop
mov
icebp
mov
dec
data16
and
mov
xchg
stos
in
pop
movsb
mov
adc
enter
add
pop
xor
outsb
stos
inc
xchg
in
int3
jbe
mov
xchg
arpl
loope
fldz
jae
lret
sbb
mov
aaa
cwtl
shr
arpl
cmpl
rolb
mov
xor
dec
fwait
mov
hlt
sbb
daa
jmp
rcl
mov
test
xchg
stos
ljmp
jl
pop
in
stos
add
sahf
mov
frstor
stos
loop
imul
cli
out
and
jge
pop
xor
arpl
sub
adc
ja
cmp
stos
call
popa
cmp
daa
aam
test
mov
adc
dec
jle
sub
pop
std
shrb
jmp
cld
outsl
stos
or
push
test
mov
pop
stos
pushf
mov
inc
aam
or
push
push
insl
std
push
push
xlat
jb
mov
add
nop
insl
stos
push
ffreep
mov
stos
and
mov
dec
lahf
in
into
or
addr16
leave
xchg
repnz
mov
mov
lahf
or
add
mov
cmp
test
repnz
stos
or
push
addr16
mov
aaa
sbb
pop
sbb
cltd
lahf
insb
aam
popf
pushf
dec
or
lret
shrb
and
aam
mov
daa
dec
jp
out
decl
nop
rorl
jbe
pop
shll
stos
and
cltd
dec
addr16
stos
rolb
sub
mov
mov
mov
pop
inc
xchg
cmp
adc
and
aas
imul
insl
pop
jge
ja
ss
mov
mov
loop
and
dec
mov
inc
xchg
push
pop
imul
cld
sub
inc
mov
stos
mov
sbb
scas
xor
mov
mov
and
imull
mov
aad
ds
add
stos
in
push
test
pop
movsl
push
enter
lea
mov
xor
pop
cmp
rclb
popf
adc
push
repnz
or
fstpl
stc
fsub
pop
mov
and
stos
sbb
pop
cmp
mov
fisttps
push
nop
into
cmp
fsubrs
movsl
push
fldenv
jmp
sub
stos
dec
ljmp
mov
lret
stos
push
out
jmp
push
stos
pop
ror
jnp
mov
incl
xchg
xchg
cwtl
gs
rcll
pop
push
dec
jnp
dec
aas
lcall
lods
or
dec
popa
stos
adc
pop
pop
repnz
xchg
imull
or
lock
lret
mov
push
push
mov
stos
movsl
add
test
cmpsl
sbb
stos
push
mov
push
iret
push
mov
movsb
and
stos
pop
and
xchg
out
and
jbe
and
orb
sub
lret
fdivrs
jp
sbb
and
in
rorb
jg
xor
stos
fsts
icebp
mov
push
mov
mov
push
push
xor
loopne
lcall
add
lods
push
stos
adc
jl
push
and
xchg
push
cmpsb
lret
mov
mov
sub
stos
cld
inc
push
pop
divb
scas
adc
aam
sbbl
sbb
add
or
dec
stos
in
push
scas
in
or
lahf
mov
ret
stos
add
das
scas
xchg
notl
in
push
xchg
popf
push
pop
aam
push
sub
and
cmpsb
test
xor
cmp
jmp
in
push
sbb
je
adcl
lret
aad
sub
lret
xor
das
in
jmp
sub
mov
adc
nop
in
cmpsl
stos
fbstp
and
imul
cmc
mov
stos
test
jp
stos
mov
or
jle
cmp
sub
stos
mov
xchg
adc
jbe
or
inc
in
mov
cmp
adc
stos
inc
xor
push
jb
out
stos
lods
adc
pop
xor
stos
push
mov
xchg
add
insl
flds
push
popf
inc
mov
adc
sub
lods
lea
push
ljmp
xor
nop
fs
aas
nop
cmc
outsb
repz
jg
stos
pop
pushf
popf
xchg
or
mov
hlt
cmp
popa
dec
add
mov
dec
imull
stos
rcrl
mov
mov
sub
cmp
or
mov
sbb
mov
movsb
push
mov
jecxz
fmuls
stos
popf
adc
sub
and
rolb
mov
ja
shrl
jl
imul
add
aaa
lahf
jnp
mov
fdivr
aas
push
mov
dec
stos
inc
pop
xchg
je
inc
sti
or
addr16
add
and
mov
imul
cmp
adc
sbb
add
sbb
adc
stos
add
mov
push
das
cs
repnz
scas
je
pop
stos
les
inc
pop
fldl
notb
jle
xchg
cmp
cld
push
mov
shrl
push
jbe
stos
lods
repnz
xchg
jp
stc
subl
and
fwait
aam
out
fwait
mov
and
loopne
sbb
xor
stos
inc
fs
sbbb
out
cmp
mov
loopne
and
xor
or
in
pop
jo
std
cwtl
xchg
data16
popa
cmp
jl
stos
jne
dec
adc
aas
push
mov
push
push
add
fisttpl
and
lds
dec
fwait
pusha
and
xchg
sahf
jmp
stos
repz
lds
popf
mov
stos
adc
pop
repz
stos
mov
fildl
xchg
cmp
mov
loopne
mov
stos
jl
xchg
aam
ss
xchg
leave
pop
rorl
jae
es
and
stos
call
aas
adc
stos
xchg
inc
pop
sub
sbb
jecxz
add
mov
sub
pop
sub
push
jno
jmp
xor
xchg
ja
stos
jnp
movsb
or
pop
mov
mov
jae
add
int3
push
inc
stos
imul
test
imul
les
mov
out
daa
fidivs
lahf
mov
popf
sbb
or
push
jns
lcall
sub
ret
aad
stos
fwait
cwtl
xor
pop
pop
and
stos
fcompl
and
test
stos
cmc
lock
jno
inc
add
stos
inc
xor
sub
mov
in
mov
ss
daa
dec
jbe
or
or
xchg
inc
push
lock
lods
jnp
or
or
mov
aaa
jne
sbb
frstor
jecxz
push
scas
cvttps2pi
imull
insl
xor
sbb
push
mov
in
shll
stos
aad
push
mov
imul
mov
and
jge
test
add
out
mov
mov
or
dec
stos
sti
dec
fadds
imulb
sbb
stos
mov
adc
stos
pop
std
or
pop
stos
adc
jecxz
push
mov
xchg
mov
mov
cmp
mov
push
sbb
int
mov
adc
into
call
push
sahf
das
stos
out
lods
and
push
stos
and
cwtl
xlat
nop
imul
sbb
fwait
dec
pop
stos
push
addl
lret
test
sub
xchg
test
fwait
xchg
mulb
and
outsl
inc
dec
dec
pop
jl
mov
push
outsb
stos
inc
add
mov
adc
sbb
movsb
mov
fldl
iret
push
jp
lea
js
mov
add
and
gs
push
test
cmp
stos
fsubrl
mov
or
pop
lcall
add
aad
in
stos
jmp
mov
outsl
mov
iret
xlat
xchg
cltd
bound
sbb
sbb
sbb
mov
mov
stos
mov
das
mov
jb
mov
pop
rcrb
push
repz
stos
mov
dec
js
in
inc
leave
out
ficoml
or
mov
cmp
add
or
stos
imul
xor
cld
adc
adc
stos
add
mov
lret
or
mov
push
orb
stos
jl
mov
xchg
imul
mov
jbe
stos
lcall
lret
out
cs
icebp
inc
stos
fcoms
leave
jmp
mov
inc
xchg
incb
stos
pop
add
icebp
xor
xchg
jns
ss
dec
cmp
aam
lahf
sbb
fnsave
sub
outsb
jne
lea
andl
jmp
pop
out
lods
pop
xchg
jl
stos
scas
outsb
sbb
cld
inc
insb
stos
mov
push
movsl
stos
dec
orl
lods
xchg
push
stos
push
cmp
sbb
mov
dec
xchg
cmpsl
pop
stos
popa
loope
rcr
pusha
and
sub
mov
orl
xchg
stos
sbb
pop
mov
lahf
inc
stos
or
or
lahf
stos
xchg
xor
pop
pusha
pop
mov
stos
lea
bts
ret
and
mov
push
sub
imul
jnp
add
std
popf
fisubrs
mov
jmp
sahf
push
jg
ret
mov
fcompl
pusha
mov
cmc
call
cwtl
pop
sub
push
stos
push
ret
push
lds
mov
push
mov
mov
xchg
cld
adc
mov
lea
enter
mov
xor
sbb
mov
cmpsb
test
cli
scas
fiaddl
stos
pop
mul
aaa
push
fidivs
sbb
test
sub
mov
jne
testl
and
rclb
or
fsubs
addr16
push
jg
das
push
out
xchg
movsl
stos
inc
add
bound
mov
in
aas
popa
mov
fisubrs
stos
xchg
add
dec
push
mov
andb
lods
xchg
and
es
push
test
push
test
xor
jg
dec
arpl
stos
push
jno
push
nop
push
xchg
mov
call
arpl
dec
into
pop
sbb
enter
int3
inc
lcall
mov
pop
mov
scas
gs
ja
xor
rclb
das
xor
stos
pusha
cmp
test
imul
mov
imul
mov
fwait
je
aad
adc
jmp
fisubs
pop
mov
lret
or
mov
cli
mov
int3
adc
pop
data16
jmp
sub
out
xchg
jl
fistpll
dec
cld
dec
xor
shll
push
divl
fsubr
fs
add
stos
or
popf
mov
cld
je
lret
ret
in
mov
ss
and
jae
xor
mov
stos
repnz
mov
jne
jmp
stos
xor
jns
dec
pop
mov
les
ret
mov
out
xor
xor
mov
jb
xchg
cli
clc
loopne
xor
stc
int
mov
stos
test
dec
pop
stos
add
sti
inc
cmp
inc
ficoms
mov
shll
fcompl
jmp
aad
lret
sbb
ljmp
pop
xor
repnz
out
or
arpl
cmp
dec
xor
sbb
popa
pop
stos
subl
mov
inc
rorl
xchg
orb
cmpsb
mov
repnz
shll
stos
fnstsw
push
adc
jae
ja
fimuls
lret
addr16
cmp
mov
cli
adc
dec
sub
add
lds
mov
mov
daa
lahf
rorb
fwait
outsb
imul
ljmp
add
arpl
xor
xchg
or
rcrl
loop
je
jecxz
repz
push
mov
lahf
push
stos
jbe
cmp
and
push
imul
dec
daa
push
mov
cmp
push
dec
fstpt
pop
or
add
stos
push
xchg
adc
xchg
daa
leave
es
test
mov
lret
popf
rclb
rep
sub
std
jge
out
aad
xorl
xchg
push
stos
nop
mov
inc
test
call
sbb
jmp
xchg
adc
stos
xchg
push
xor
stos
jecxz
jle
mov
mov
ljmp
push
adc
xchg
mov
sbb
or
das
mov
and
mov
cmp
mov
pop
mov
lods
sub
fcmovnbe
xlat
bnd
lahf
jmp
pusha
lret
cmpsl
loopne
xchg
scas
stos
push
push
mov
pop
xchg
stos
imul
cltd
subb
mov
adc
jnp
je
dec
cmp
pop
sbb
cmp
sub
adc
and
into
orl
push
or
inc
cmp
stos
shrl
cmp
mov
stos
fimuls
testl
and
jo
test
stos
mov
jp
lret
adc
test
mov
scas
push
imul
jnp
mov
fwait
jb
arpl
xchg
lcall
cmpsl
fwait
xor
popl
xor
filds
in
cmp
pop
into
mov
xor
in
jg
ljmp
pop
mov
and
shrl
push
sbb
lock
mov
cwtl
mov
ss
in
lock
stos
mov
push
sbb
add
popf
stos
out
sahf
pop
xchg
leave
in
sbb
frstor
outsb
aas
jno
inc
adc
jae
stc
stos
jmp
fldcw
jmp
shrb
aad
iret
ja
int3
stos
out
mov
cli
sub
dec
push
and
jnp
xchg
in
pop
dec
mov
sub
ljmp
movsb
push
jne
xchg
and
mov
adc
xor
cmc
xchg
sbb
es
in
fbld
xchg
sbb
xchg
sti
in
outsb
jp
adc
sarl
push
cmp
loop
adc
jl
xchg
xchg
jne
orl
sti
iret
sbb
sub
xchg
ret
adc
imul
or
rcrl
addr16
cmp
lea
subl
cltd
mov
arpl
xor
stos
in
ret
sub
dec
daa
insb
rcrl
test
fcmovnb
pusha
mov
pop
stos
popa
sti
lcall
push
jne
or
xchg
in
imul
les
dec
stos
leave
jge
sbbb
lods
sbb
addr16
sbb
aaa
jmp
lds
add
jmp
push
enter
sbb
popa
rcrb
addr16
stos
pop
pop
xchg
jmp
jne
xchg
sub
mov
xchg
out
fsubrl
movsb
and
dec
stos
inc
jle
cmpsb
xlat
outsb
adc
pop
sub
push
pusha
mov
les
sbb
fsubrp
stos
sbb
repnz
idivb
stos
aas
or
cld
fdivrl
xchg
fcoms
sbb
rcrb
cmp
and
push
xchg
clc
push
mov
cmc
add
add
inc
insl
rcrl
add
subl
adc
mov
movsb
add
jecxz
add
xor
and
notl
imul
cwtl
test
bound
fisubrs
int
and
lock
fwait
xchg
pop
sarl
aas
orb
fsubrs
je
stos
sub
jl
sbb
adc
stos
mov
scas
loope
cmp
outsl
mov
inc
inc
scas
pop
xchg
sbb
sub
rorl
stos
clc
mov
loopne
stos
lea
push
xor
cmp
jg
cmpb
cmpsl
movsl
cmp
stos
into
xlat
div
lret
jmp
dec
push
jp
lcall
and
sbb
stos
add
iret
sub
jno
dec
pop
jns
cld
out
cmp
push
in
jbe
cs
test
int
mov
stos
lods
mov
fwait
cli
or
out
pop
sti
pop
stos
jbe
loope
aaa
hlt
aas
mov
sub
in
jp
movsb
add
xchg
nop
dec
es
lret
sub
or
adc
pop
dec
inc
inc
incl
arpl
or
mov
sub
testl
stos
mov
cmpsl
in
pop
mov
iret
into
adc
stos
and
cld
mov
mov
fldl
pop
xchg
out
daa
jecxz
pushf
or
pusha
jmp
dec
mov
imul
scas
fsubrs
push
adc
ret
dec
push
adc
hlt
shr
stos
popl
xbegin
push
push
sub
inc
push
sub
or
mov
and
enter
inc
mov
mov
fidivl
stos
rorb
sbb
jmp
cwtl
test
ss
mov
enter
push
jmp
mov
stos
push
xchg
nop
mov
xchg
lea
pop
and
arpl
ja
in
stos
popa
xchg
push
insb
adc
add
adc
sarb
adc
xchg
popf
mov
das
mov
imulb
push
xchg
out
stos
sub
xchg
scas
int
xor
cmp
stos
lods
and
mov
xchg
pop
iret
pop
scas
imul
lock
jl
ficomps
cmp
pusha
sbb
data16
daa
popf
lea
repnz
mov
cmpsl
push
xor
pushf
push
sbb
movsb
imul
insb
dec
arpl
mov
jmp
or
out
xchg
adc
stos
sbb
nop
sbb
stos
pop
scas
stos
loop
xor
das
gs
mov
sbb
ret
xchg
push
les
lcall
ljmp
aad
cmp
imul
pop
es
xor
stos
inc
pushf
nop
mov
stos
sub
or
stos
ficoms
dec
shrl
or
les
addr16
mov
addr16
fstpt
rcll
stos
mov
dec
xchg
stos
mov
std
fs
cmp
dec
dec
sub
gs
xchg
test
or
mov
dec
xchg
push
adc
pop
dec
adc
stos
inc
jg
jle
mov
mulb
or
iret
mov
mov
outsl
push
mov
lret
mov
inc
stos
xchg
pop
mov
cmp
inc
js
xor
dec
cs
and
mov
sbb
leave
lock
test
sbb
dec
fdivrs
stos
mov
lret
pop
mov
mov
cmpl
mov
dec
test
movsb
add
in
sub
nop
stos
inc
lret
stos
jbe
push
sbb
cwtl
dec
lret
inc
adc
stos
je
or
push
mov
sahf
stos
fnstenv
iret
ljmp
movsl
inc
rcrb
aam
arpl
jo
jb
push
mov
aad
insb
inc
iret
sbb
mov
out
push
shrl
stos
pushf
sbb
mov
stos
mov
xchg
in
ljmp
jns
sarb
lret
and
loope
scas
mov
movsb
adc
mov
daa
fs
inc
repz
mov
lds
pop
mov
iret
mov
push
dec
adc
ds
dec
adc
mov
dec
push
or
adc
stos
lods
dec
or
and
repnz
mov
std
stos
jb
out
call
mov
movsl
mov
jmp
jno
jp
stos
sbb
push
xorb
jb
mov
adc
shrb
mov
xchg
daa
int3
xchg
mov
jnp
cmc
stos
sbbb
outsb
imul
cmp
or
mov
push
adc
lret
xchg
ss
lods
das
stos
aas
pushf
pop
loopne
clc
or
stos
pop
popa
xchg
mov
sub
call
push
daa
stos
sahf
mov
cmp
dec
mov
pop
enter
fisubl
scas
outsb
xchg
stos
and
insb
ret
xchg
stos
pushf
in
dec
mov
pusha
sbb
mov
or
orb
dec
and
dec
stos
mov
fildl
imul
xchg
scas
or
add
das
in
int
adc
imul
xchg
xchg
xorb
les
repz
dec
pop
fwait
imul
outsb
push
stos
shll
cmpsb
inc
xchg
dec
lret
loop
jmp
ret
and
push
or
test
lods
dec
fidivrs
stos
pop
movsb
add
cmc
jge
aam
je
daa
stos
and
and
pop
push
pop
stos
lahf
jle
adc
imul
aas
lea
pop
xor
add
stos
xchg
arpl
test
subb
sub
loope
fwait
repnz
stos
xchg
ret
push
mov
stos
fnstcw
inc
add
loop
xchg
sahf
xchg
ss
sub
stos
and
and
mov
arpl
lods
jbe
clc
adc
sahf
and
addr16
jmp
rolb
stos
xor
imul
outsb
inc
cltd
mov
andb
ds
cmpl
nop
jb
stos
or
xchg
pop
stos
test
outsb
sbb
mov
jmp
stos
jecxz
inc
dec
stos
inc
lds
mov
xchg
test
test
mov
jb
clc
mov
jge
dec
sbb
jmp
pop
or
insl
xor
lods
stos
and
jmp
js
or
scas
fcmovnbe
dec
stos
outsb
iret
jne
lret
inc
lods
pushf
stos
test
mov
mov
stos
adc
stos
jb
pop
cmp
das
jg
test
pop
adc
jle
mov
adc
xchg
lods
out
int
rolb
sub
or
xchg
adcl
hlt
in
ja
clc
scas
lcall
adc
xor
ja
sub
cmpsb
nop
popf
loope
call
pop
mov
xor
mov
adc
jmp
orl
sbb
lret
iret
or
mov
dec
sbbl
stos
jbe
cltd
shlb
aaa
jmp
nop
pop
insl
out
testl
test
nop
dec
jl
sbb
pop
mov
loop
addr16
jnp
out
xchg
in
xor
push
stos
pop
cmp
pop
data16
and
mov
jo
aam
xchg
mov
shrb
mov
cmpsl
adc
mov
dec
or
pop
repnz
fildl
mov
pop
push
jge
pop
jb
jle
mov
mov
cmp
xchg
stos
inc
imul
or
in
push
xor
gs
sub
add
pop
loope
mov
sub
adc
xchg
dec
data16
adc
pop
inc
fists
std
lahf
pop
mov
xor
fdivrl
dec
xchg
mov
stc
fs
mov
stos
mov
sub
stos
and
rolb
sbb
scas
rorl
notw
stos
mov
popf
in
stos
popa
ja
xchg
in
pop
gs
stos
sub
add
push
jns
fistps
das
xor
stos
or
out
inc
dec
cmc
jp
push
mov
jg
stos
mov
cmp
nop
stos
imul
or
daa
dec
jo
inc
jecxz
cmp
stos
out
mov
lods
jns
dec
out
or
repnz
stos
mov
ret
scas
push
stos
aas
and
imul
mov
test
adc
stos
mov
out
dec
jl
arpl
repnz
jmp
stos
mov
inc
jne
scas
mov
jl
dec
add
out
push
daa
jo
pop
and
dec
jno
or
fwait
js
add
rcll
xchg
arpl
push
scas
push
xor
stos
mov
push
mov
cs
loope
mov
fisttpl
stos
inc
jg
inc
xchg
imul
jmp
sbb
cmpsl
stc
adcb
scas
fs
in
push
sarl
push
pop
popf
adc
cmpsb
stos
fbld
pop
mov
shrb
pop
mov
dec
push
aam
add
sbb
inc
jo
pop
inc
daa
imull
dec
stos
sub
es
js
mov
cmpsb
stos
movsb
inc
shll
mov
mov
and
aas
sub
imul
repz
push
lea
dec
cmp
sub
xchg
cmp
mov
mov
stos
add
lock
addr16
cltd
movsb
xor
lods
arpl
pop
mov
jp
dec
enter
mov
stos
ret
sub
pop
mov
lods
fwait
mov
adc
mov
inc
jbe
or
stos
or
jg
roll
mov
insl
and
call
sub
in
cmp
data16
in
stos
popa
stc
xchg
mov
aas
lods
lock
repnz
xchg
es
mov
nop
or
popf
out
stos
jmp
mov
test
insb
jp
push
stos
out
int
mov
dec
icebp
jmp
push
pop
flds
push
dec
adc
outsb
mov
test
imul
ret
pop
cmp
or
stos
and
xchg
xor
mov
in
arpl
xchg
inc
fwait
xchg
inc
adc
push
pop
sub
cmpsb
xchg
xchg
push
addr16
outsl
out
sbb
subl
fwait
inc
xlat
ret
xchg
jge
sub
or
stos
jge
push
or
fisttpll
fistpll
mov
and
cmp
mov
xor
imul
mov
stos
inc
push
mov
xchg
or
lret
pop
pop
xlat
idivb
jmp
xor
push
imul
mov
jp
pusha
adc
in
sub
or
mov
push
subb
flds
jns
push
sub
push
in
clc
jmp
adc
mov
xchg
pop
lret
ret
add
cmpsb
lods
cmc
add
push
clc
lea
aaa
je
mul
stc
jne
jmp
xchg
ja
into
sbb
aad
jmp
sbb
ret
xchg
pop
mov
adc
push
sub
push
mov
stos
imul
stos
into
adc
sbbl
mov
roll
fldl
pusha
cltd
mov
loope
out
gs
and
lea
sub
push
iret
stos
sub
dec
sbb
ror
sub
loop
xchg
lcall
jp
imul
ficompl
ss
das
or
scas
mov
shrb
roll
adc
add
fucomi
mov
jo
das
cmp
mov
in
repz
stos
inc
fdivs
xor
addr16
into
mov
inc
and
pop
pop
stos
adc
inc
adc
add
mov
mov
push
xchg
adc
lods
inc
mov
mov
jecxz
and
stos
mov
sbb
pop
mov
fucomi
cmp
ja
pop
stos
scas
cmpsb
cmp
push
jmp
test
loope
add
xchg
push
push
fldl
xchg
stos
sbb
inc
into
jno
stos
mov
mov
pushf
mov
xchg
add
stos
aad
sbb
into
shrb
bound
dec
jmp
je
imul
and
pop
jae
mov
fsubs
aaa
and
mov
test
stos
mov
xlat
pop
cmp
xchg
movsl
dec
orb
push
inc
adc
icebp
push
mov
mov
xchg
cmp
adc
and
add
xor
stos
aad
stos
div
dec
push
inc
sub
mov
xchg
dec
loopne
imul
mov
stos
xchg
lret
mov
stos
mov
sub
push
jne
stos
fs
aas
cmpsb
sbb
lock
rorl
mov
push
inc
mov
subl
jmp
jp
xchg
and
xlat
fwait
mov
lea
cmpsb
stos
pop
or
fcom
push
push
scas
push
aad
mov
inc
stos
add
inc
rolb
stos
andb
ja
fsubrs
pop
pop
and
sub
stos
push
xor
or
xor
sbb
jl
mov
test
out
sub
xor
xchg
pop
push
pop
fcomip
lahf
iret
mov
andb
or
jle
pop
icebp
inc
jg
dec
mov
lods
fdivs
loop
jmp
popf
xchg
sbb
or
popa
iret
and
imul
mov
xor
inc
stos
adc
icebp
cmp
imull
cmpsl
js
stos
test
sbb
add
stos
inc
and
and
stos
sbb
sti
pop
dec
mov
xor
add
inc
scas
inc
xchg
fwait
or
fwait
sub
stos
icebp
popf
mov
test
mov
mov
pop
fisttps
sub
mov
push
aam
fldt
push
xor
stos
jg
xchg
fisubrs
mov
ss
mov
pusha
inc
mov
sub
stos
inc
jmp
insl
cmpsb
int3
mov
data16
in
sub
mov
add
in
data16
lret
sbb
std
aaa
cmp
push
add
xchg
xor
mov
xlat
out
sbb
stos
ret
nop
jns
sub
inc
pusha
pop
popf
mov
mov
xrelease
pop
aam
imul
pop
push
adcl
cmpsl
cs
xchg
push
ret
hlt
mov
xor
cli
mov
scas
mov
xor
in
mov
ret
or
iret
ljmp
pop
insl
cmpsl
stos
es
fistpll
push
call
pop
push
movsl
dec
pop
xor
imul
scas
stc
cmp
icebp
jb
ret
imul
stos
sub
dec
lret
imul
xor
jno
jmp
mov
int
sub
aad
add
shll
lret
iret
shlb
xchg
jg
inc
cmp
es
or
aaa
popa
jl
xor
cld
pushf
mov
pop
cmp
sbb
mov
adc
stos
push
scas
aaa
sub
mov
xchg
fsubr
test
add
push
test
xchg
shr
cmp
cli
sar
shrb
stos
fistl
add
daa
lcall
mov
cltd
test
stos
dec
pushf
xlat
fcmovne
xor
mov
ljmp
mov
stos
sbb
faddp
lods
out
xchg
das
addr16
bnd
int
mov
push
daa
mov
xor
sub
cs
stos
inc
arpl
cmp
jge
sub
push
insb
stc
fsubr
or
iret
xchg
stos
pop
loope
scas
lods
pop
push
stos
mov
lcall
xor
fiaddl
shll
call
adc
and
stos
test
push
dec
cmpsb
pop
sub
add
sbb
sbb
fprem1
mov
test
inc
mov
push
and
xchg
sub
stos
push
or
jmp
andb
cmp
mov
adc
pop
hlt
dec
dec
mov
mov
inc
or
insl
popa
push
jmp
cli
iret
sbb
shrl
arpl
pop
inc
sub
nop
push
imul
stos
daa
in
insb
and
movb
adc
jecxz
stos
fwait
ljmp
iret
mov
cwtl
test
dec
fnstsw
push
stc
test
inc
xor
mov
out
lock
jne
daa
inc
or
paddd
and
pop
fwait
scas
dec
mov
mov
mov
cmp
inc
xchg
add
pop
cmp
dec
lods
and
aaa
push
stos
sub
sub
inc
xlat
in
stos
push
add
stos
jnp
shrl
jle
lret
mov
sti
cmp
mov
dec
sbb
lds
stos
out
mov
das
mov
jg
scas
xor
mov
scas
cmp
cmc
or
xchg
stos
outsb
sub
cmp
mov
xor
cld
xchg
xchg
mov
mov
rcrb
push
stos
dec
loop
inc
mov
pop
lock
movsl
daa
loope
lods
push
mov
fsubl
imul
xchg
js
sbb
sbb
shr
xchg
mov
mov
inc
or
movsl
pop
add
imul
stos
add
stos
in
aaa
sbb
stos
inc
or
sbb
ja
stos
mov
sub
cs
mov
lea
stos
mov
insl
sbb
stos
xchg
mov
or
xchg
xchg
cltd
cmp
mov
mov
stos
pop
dec
loop
xchg
bound
xchg
dec
mov
cld
lods
mov
mov
push
add
push
repnz
sbb
insl
enter
arpl
mov
stos
fdivrl
mov
adc
jnp
loope
cmp
cmpsl
cmpsb
pop
fldt
xchg
lahf
mov
jbe
pop
push
pop
pushf
scas
clc
in
es
mov
sysexit
stos
jbe
xlat
shll
cmpsb
lret
or
rorb
xchg
or
hlt
pusha
or
mov
xchg
stos
dec
xchg
stos
jecxz
cmpsb
hlt
les
push
in
xor
pop
mov
jno
mov
fldenv
xor
mov
xchg
aam
fildll
xchg
push
es
xchg
fs
and
jecxz
add
lret
jnp
sub
cmc
popf
out
pusha
jl
in
movsb
jecxz
cltd
xor
lcall
stos
xchg
hlt
test
fs
stos
push
jle
xor
add
lret
jbe
mov
adc
xchg
adc
inc
adc
arpl
subb
push
call
sarl
stos
es
les
dec
fwait
xchg
sahf
jb
das
xchg
in
repnz
mov
daa
sbb
add
leave
dec
jecxz
imul
adc
sub
or
testl
add
cli
mov
bound
or
jne
imul
in
negb
cmp
bound
and
jbe
scas
xchg
call
jns
jae
stos
mov
or
out
fwait
cli
push
jmp
ds
jo
fwait
aam
stos
mov
xor
stos
rorl
sbb
dec
push
and
add
fidivl
aas
adc
mov
fwait
outsb
jle
jmp
dec
stc
jo
or
xor
sub
stos
mov
adc
cli
in
in
stos
imul
stos
dec
sub
cmpsb
inc
mov
mov
mov
not
rcll
xlat
adc
mov
lock
or
stos
out
fimuls
add
xlat
or
fisubrl
xor
add
stos
ds
lods
fbstp
test
dec
rol
out
stos
lea
bound
repz
jae
aas
cwtl
push
xchg
and
sub
inc
mov
inc
xchg
push
sub
pusha
ret
cwtl
mov
lock
push
ljmp
rcl
jb
fmull
pop
pusha
mov
lcall
stos
pop
pop
out
push
cmc
stos
xorl
fsubs
mov
daa
mov
rorb
stos
xchg
int
jmp
dec
mov
push
lahf
std
jp
stos
iret
popa
pop
cltd
sbb
cmp
shr
out
lea
mov
out
aaa
mov
jmp
cmpsl
stos
std
nop
sbb
xor
pop
sub
mov
jnp
sahf
negl
mov
int3
cmpsl
mov
jnp
out
sbb
shll
xchg
add
fwait
mov
jno
mov
ljmp
loopne
adc
aad
dec
jp
cmpsl
pop
sahf
inc
cmp
enter
in
inc
mov
mov
push
sub
jecxz
mov
scas
jle
in
lods
cmpsl
mov
inc
xchg
stos
pop
jl
ljmp
mov
lock
into
pop
test
mov
and
loope
fisttps
stos
cmpsb
xlat
push
dec
je
out
push
mov
int3
or
mov
xchg
or
inc
leave
sub
shll
mov
jnp
scas
stos
mov
scas
nop
es
push
stos
sbb
and
push
mov
push
mov
shrl
jno
jo
stos
and
pop
xchg
scas
push
lods
out
js
add
lcall
sbb
jmp
test
mov
inc
pop
sub
xchg
das
jecxz
scas
icebp
fisubrl
mov
ds
jns
xchg
pop
stos
pop
add
cmc
adcb
movsb
stos
jmp
fisubl
jne
icebp
ret
jl
fisubrs
sbb
arpl
shlb
js
mulb
sub
icebp
stos
sbb
cmp
mov
or
jb
cmp
mov
xchg
mov
dec
inc
mov
jge
stos
mov
adc
arpl
xchg
orb
call
push
fs
cwtl
imul
mov
fcmovb
shrl
testb
repz
stos
cmp
dec
ds
and
dec
push
int3
loop
aaa
mov
or
cmc
data16
dec
push
mov
xchg
icebp
push
mov
dec
std
stos
into
inc
fsubl
stos
mov
lods
repz
addr16
push
sbb
pop
pop
xchg
inc
or
jmp
loop
add
mov
add
in
push
mov
stos
andl
stos
stos
jl
jns
ffreep
mov
stos
cmpsb
aam
mov
stos
cwtl
cmc
pop
cmp
push
adc
out
jne
xchg
sub
mov
ljmp
sbb
in
inc
cmc
stos
mov
stc
jne
lahf
xchg
scas
arpl
xchg
and
push
push
mov
es
fnstenv
mov
mov
xchg
daa
xchg
les
sub
pop
mov
cmpsl
lea
leave
adc
sbb
scas
ds
jbe
push
imul
stc
and
and
dec
cld
sub
mov
fists
dec
push
inc
ret
lcall
ret
add
fisttpl
cmp
stos
lods
sbb
mov
sti
dec
popf
push
xchg
test
fstpt
xchg
pushf
xchg
xchg
outsb
call
test
mov
jmp
dec
shlb
out
stos
adc
das
xchg
sub
sbb
test
test
stos
jo
pop
gs
adc
dec
clc
push
stos
ret
loope
shrb
adc
nop
insl
cmp
jno
bound
out
in
sbb
fs
andb
aad
push
fwait
cmp
stos
dec
outsl
xlat
add
stos
stos
loope
pop
jl
mov
stos
clc
pop
mov
test
data16
or
mov
push
fsubr
imul
push
cld
test
mov
mov
mov
stos
lods
bnd
scas
mov
stos
mov
enter
fsubrs
arpl
cmpsl
or
lds
rcll
dec
outsb
daa
pop
cmpsb
adc
out
jae
adc
mov
jg
sbb
lds
fisubrs
mov
sbb
pop
or
mov
and
out
xor
add
stos
mov
push
cmp
jae
add
fstpl
les
stos
lods
es
into
lret
outsl
ljmp
cs
or
pop
pop
int
mov
aaa
adc
sub
fildl
setbe
cld
jne
mov
push
stos
add
es
xor
in
ja
push
cwtl
stos
xor
mov
sub
sub
imul
mov
mov
les
sbb
add
xchg
sbb
jle
xor
fisubrl
int
out
std
add
int3
mov
call
shlb
cwtl
xorb
int3
popf
xchg
rclb
mov
and
faddp
mov
or
mov
mov
loope
in
adc
stos
jp
xchg
addr16
stos
ss
shl
and
aad
arpl
xchg
mov
sti
loop
popf
data16
stos
fstpt
lods
in
jp
stos
jge
or
movb
fidivs
ljmp
add
insb
test
in
jle
fwait
lahf
xchg
lcall
hlt
outsl
inc
jbe
pushf
sub
mov
repnz
addr16
out
or
movsb
das
subb
clc
xchg
sub
fstpl
dec
xchg
jmp
out
and
shl
daa
idiv
sub
push
adc
pop
and
stos
push
inc
stos
subl
cmc
cmpb
sahf
dec
jns
mov
test
pop
popa
dec
xchg
hlt
scas
imul
call
xor
stos
xor
enter
fldt
push
mov
subl
xor
subb
test
lcall
stos
jp
sub
and
fadd
lock
dec
shr
adcb
fs
cltd
push
stos
mov
jge
cwtl
stos
jnp
jl
mov
push
mov
dec
push
dec
mov
sbb
jnp
hlt
loopne
popf
mov
xor
dec
stos
pop
mov
cmpsb
sbb
push
ret
pop
mov
stos
ret
push
jae
xor
or
xchg
mov
cmp
les
jo
mov
and
or
pop
xchg
mov
jge
ret
sub
inc
loop
rcrb
int3
lods
stos
mov
jno
das
int
jmp
repz
lods
add
iret
test
imul
and
jns
mov
mov
mov
jo
xor
shlb
mov
jno
inc
stos
xor
mov
or
stos
xor
loop
cltd
xor
movsb
xor
adc
in
xchg
stos
xor
jb
dec
cld
pop
popa
stos
mov
adc
mov
lret
add
test
daa
cmp
xchg
adc
div
jle
jp
jno
aad
xlat
sub
ja
les
movsl
pop
sahf
cld
stos
or
lahf
mov
daa
add
jge
lret
iret
xchg
fisubrl
xchg
sbb
add
popf
push
repnz
daa
es
mov
xchg
sub
stos
mov
sbb
push
xorl
addr16
pop
jle
das
stc
stos
inc
cmp
jecxz
stos
jge
or
stos
mov
dec
push
cwtl
add
cli
sub
and
pushf
add
gs
pop
and
mov
mov
or
lods
fisubrl
stos
adc
sbb
je
sub
movsl
cmp
sub
outsl
pop
fwait
pand
cmp
adc
xchg
stos
das
lds
js
scas
outsb
stos
fsubrl
jnp
stos
fs
movsb
aad
jmp
dec
jmp
pop
daa
addl
stos
pop
push
leave
xor
or
scas
mov
dec
test
fcompl
imul
and
jge
xchg
repz
xchg
pop
inc
and
leave
sbb
inc
dec
xorl
addr16
lret
and
cld
gs
inc
or
inc
adc
pop
rcrb
stos
insb
sbb
dec
jmp
sub
sbb
in
mov
add
sahf
nop
insl
push
xchg
dec
lock
in
xor
test
stos
lods
fadds
pop
xchg
xchg
addr16
out
jg
mov
mov
jns
imul
xor
rolb
mov
jle
adcb
movsl
dec
out
stc
stos
xchg
sti
lret
jnp
lcall
add
cmp
jo
dec
loope
fsubs
imul
adc
shll
stos
fidivl
mov
testb
cs
mov
hlt
push
insl
pusha
loopne
inc
lahf
inc
sbb
out
mov
cmp
add
mov
push
push
outsl
jl
test
jp
inc
mov
lahf
lods
stos
das
repz
sbb
xor
xor
loope
mov
add
xchg
mov
cmc
sbb
stos
mov
cmp
into
jmp
test
lcall
push
jb
mov
add
mov
sbb
mov
lahf
mov
leave
sbb
push
mov
test
push
jge
pop
popf
or
stos
rorl
adcl
arpl
fwait
sbb
push
stos
shlb
mov
daa
mov
mov
in
xchg
pushf
inc
cmp
pop
stos
cltd
adc
stos
testb
imul
fisubrs
dec
add
outsb
subl
imul
xchg
mov
loop
add
imul
out
sub
pminsw
xchg
cmpsl
popf
sub
shll
mov
ss
push
push
cwtl
int
xchg
sub
push
mov
ret
sub
test
in
mov
test
add
cmp
std
into
pop
dec
mov
js
mov
pushf
in
push
lods
add
das
mov
adc
xchg
cs
sub
int
stos
mov
das
xor
pop
roll
rcrb
jb
daa
out
movsl
aaa
add
push
jl
mov
pop
adc
stos
mov
jecxz
scas
stos
pushf
push
aad
repnz
mov
stos
int
xchg
lret
popf
xchg
add
jae
sti
pop
subl
xchg
test
jmp
xchg
and
scas
add
xor
cld
js
imul
jl
xchg
adc
sub
stos
lds
test
push
std
push
and
popf
cmpsb
pop
stos
push
popl
push
ret
fsts
out
shll
inc
stos
cmp
stos
mov
xor
pop
enter
mov
js
adc
stc
jae
dec
aaa
rorb
enter
mov
arpl
jmp
push
idivb
stos
mov
jns
mov
in
ret
sar
gs
sbb
repnz
and
mov
fwait
hlt
xchg
imul
stos
jge
cmovne
std
es
lret
aam
sub
stos
mov
les
fmull
sub
fs
push
mov
aam
stos
and
adc
jne,pt
stos
fbld
scas
pop
stos
inc
fdivl
jmp
insl
popf
cs
push
jmp
mov
shll
mov
cmp
subb
clc
int3
test
dec
jne
sub
xor
dec
sub
mov
mov
imul
scas
xor
jmp
sub
outsb
or
lods
mov
mov
mov
jge
int3
fldcw
add
shrl
jnp
movsb
dec
mov
inc
jmp
es
rcrl
test
arpl
stos
subl
or
stos
sub
cli
mov
scas
outsl
stos
sub
mov
xor
push
test
sar
pop
sti
sub
mov
ret
fidivrs
mov
inc
xchg
stos
dec
pushf
stos
xchg
jae
jno
or
gs
xor
leave
loopne
cwtl
stos
ljmp
mov
push
outsl
pop
stos
cli
sbb
pop
mov
cs
xchg
or
sbb
ficoms
stos
loope
xlat
scas
lea
sub
adc
xchg
mov
mov
xor
int3
rclb
sbb
stos
pusha
fdivs
push
mov
and
mov
mov
xor
xor
inc
popw
mov
daa
or
sub
lret
inc
mov
leave
sahf
mov
bound
ret
mov
jle
arpl
stos
mov
pop
cli
add
sbb
stos
lea
jae
lahf
test
cltd
mov
xlat
imul
shl
stos
ret
loope
incb
mov
jl
mov
popf
std
stos
lret
xlat
xor
xchg
lahf
sub
cmc
and
addb
stos
xchg
jle
pushf
ja
push
fisubrl
xchg
pop
cmpb
xorl
cmpsb
cmc
fwait
lods
xchg
adc
sub
shlb
out
aad
stos
cld
adc
push
push
mov
pusha
inc
jne
aam
mov
lahf
imul
stos
push
jb
int
and
stos
jp
xchg
pop
xor
adc
pop
scas
das
je
dec
inc
mov
bnd
mov
xor
sbb
dec
jns
ret
testb
repnz
and
push
add
mov
jg
xorl
sub
pushl
jmp
and
cld
mov
sahf
nop
sub
and
mov
or
into
outsb
mov
sbb
popa
push
out
add
out
frstor
mov
stos
lcall
inc
cld
cmc
sbb
add
xor
and
in
push
sub
out
jb
sbb
dec
xchg
lock
or
sbb
sub
add
cmp
popf
movsl
stos
in
adc
jmp
mov
mov
cwtl
fiadds
int
insb
shrb
push
cmp
addr16
dec
cmp
enter
xor
jge
stos
popa
push
push
scas
iret
data16
jp
inc
dec
enter
lds
jo
iret
push
js
mov
pop
nop
cld
aaa
sbb
call
pop
inc
stos
in
and
and
dec
push
test
stos
push
jg
lea
shl
imul
outsl
cmp
stos
data16
mov
inc
mov
and
push
stos
push
scas
add
hlt
push
dec
mov
add
notl
mov
scas
stos
stos
jae
jmp
mov
in
sbb
add
loope
sahf
mov
les
fdivrp
outsb
or
mov
mov
and
jmp
notb
push
inc
stos
jecxz
add
cltd
popf
fisubs
and
mov
jne
pop
leave
stos
gs
scas
ds
fiaddl
add
ljmp
pop
dec
ss
xchg
enter
mov
cmpl
pop
stos
jae
aam
in
fs
mov
dec
jp
jmp
mov
jp
stos
jns
test
sbb
cmp
lret
fldt
mov
mov
out
or
fwait
gs
mov
add
dec
sbb
aas
stos
std
lahf
xorl
test
outsl
sub
stos
mov
inc
stos
shll
stos
pop
filds
push
lock
sbb
push
cmp
inc
cmc
jp
xchg
add
daa
xchg
xchg
and
push
je
fildll
bound
inc
loope
or
stos
jp
fdivrs
push
sub
add
mov
push
stos
pop
in
cmp
jle
mov
mov
mov
hlt
js
stos
popa
fsubrl
ja
or
jmp
mov
push
addr16
arpl
std
inc
pop
mov
sub
xchg
stos
pop
lahf
mov
mov
repz
in
pusha
shrb
std
dec
outsl
jne
les
pop
jae
mov
lds
pop
in
dec
mov
mov
imul
adc
mov
fpatan
mov
stos
in
test
stos
andb
cmp
mov
stos
inc
stos
push
iret
mov
stos
cmp
jae
popa
dec
stos
cli
ds
cmc
mov
mov
aad
ljmp
push
outsl
call
pop
fldt
pop
jmp
sbb
adc
lock
stos
or
fisttpl
stos
adc
cmp
rorl
fnstsw
cmpsl
lods
xorb
test
ja
dec
daa
imul
mov
sbb
in
incb
negl
fcmovnbe
mov
call
jge
stc
mov
lret
stos
scas
push
leave
aad
imul
scas
imul
mov
or
mov
jmp
mov
dec
jne
in
xchg
mov
loopne
mov
dec
push
out
dec
mov
push
idivb
stos
in
test
jnp
jne
stos
leave
pop
aad
ljmp
xchg
fbld
aas
sub
pop
mov
mov
sbb
stos
movsl
arpl
xor
stos
dec
push
push
inc
pop
out
popf
stos
sub
inc
adc
inc
cli
insb
xchg
stos
mov
pop
mov
sub
daa
and
jecxz
xchg
add
jo
and
loopne
sbb
out
and
pop
aad
dec
sub
push
stos
fidivl
call
stos
cmp
rorb
lods
enter
jge
repz
sbb
stos
xchg
addr16
ror
mov
test
mov
cmp
xor
pop
aam
cli
mov
xchg
mov
fwait
mov
imul
mov
stos
lcall
sbb
into
stc
mov
or
in
stos
test
pop
es
stc
call
cmp
push
inc
dec
movb
loopne
jle
clc
movsl
xor
xor
stos
adc
mov
mov
cmp
fldenv
dec
scas
pop
popa
mov
inc
aaa
lods
es
js
mov
push
adc
xor
add
xchg
stos
pop
mov
test
lock
cli
outsb
push
int3
movsb
jb
mov
cld
cltd
cmc
inc
mov
fldl
sub
adc
adc
sbbl
add
xor
mov
xchg
adc
sub
dec
stos
repz
pop
insb
stos
mov
das
rcl
in
inc
mov
mov
push
call
or
inc
stos
fs
push
ljmp
pop
mov
cmp
xchg
push
data16
push
out
stos
outsl
imul
stos
xchg
inc
xor
arpl
mov
push
stos
cld
and
xor
daa
cmc
push
cmp
cmpsl
sub
lock
pop
mov
scas
aam
add
xlat
bts
loopne
stos
xchg
in
push
lret
jle
repnz
test
lds
stos
dec
cmp
stos
pop
dec
bound
or
shlb
pushf
mov
imul
mov
sbb
jmp
or
ljmp
or
repnz
sbbl
fcmovu
outsb
stos
sbb
aad
cmp
call
mov
and
fs
ljmp
insb
stos
shll
into
stos
leave
mov
lahf
movb
test
adc
in
popa
loopne
and
int
loop
mov
stos
out
std
cmp
push
test
daa
leave
push
mov
fsubl
rcrl
addr16
in
arpl
mov
adc
stos
sbb
pop
dec
push
add
insb
xor
mov
sub
pop
stos
pop
insl
enter
out
mov
flds
out
mov
jg
and
jmp
stos
inc
mov
mov
stos
shl
dec
sti
pop
ja
into
sub
mov
sub
sbb
pop
xchg
xchg
lret
fwait
add
arpl
pop
cmp
in
mov
rorl
jg
in
xchg
fwait
inc
in
pop
pop
push
pop
jle
aas
ret
sbb
outsb
pop
sub
dec
imul
repnz
in
aas
dec
insb
sbb
sub
and
scas
or
mov
add
push
xor
sbb
loop
adc
sahf
pop
out
dec
stos
mov
sarb
push
jl
add
xchg
sub
adc
popf
pop
js
stos
lea
lods
pop
and
repz
je
cmc
inc
stos
mov
pop
sbb
pop
adc
sbb
stos
scas
mov
dec
inc
lret
ss
scas
loopne
loope
stos
push
out
fistl
or
pop
pop
pushf
rcrl
add
outsb
adc
jp
lcall
push
mov
adc
xor
mov
and
mov
pop
push
sbb
ret
push
sub
leave
stos
dec
sub
pop
inc
fucomp
add
pop
sub
push
mov
xor
cwtl
jno
jns
insb
push
or
cmp
in
shlb
jmp
jae
adc
lret
jnp
jns
stos
rclb
loopne
push
pop
cmp
ds
roll
in
dec
mov
lods
insb
clc
add
mov
jge
inc
add
dec
jb
divl
ret
rep
test
cmpsb
mov
sbb
and
aam
insl
dec
stos
insb
xchg
enter
mov
pushf
and
stos
mov
mov
fiaddl
loope
pop
jbe
sbb
pusha
inc
test
cld
fwait
push
imul
stos
lahf
adc
scas
xchg
insl
adc
enter
cmp
mov
test
stos
fnstcw
xchg
test
lahf
in
daa
cmp
movsb
packsswb
cmp
mov
ret
sbb
adcl
scas
movsb
aas
aam
mov
js
stos
les
cwtl
mov
and
push
adc
je
xchg
mov
pop
pop
mov
cs
stos
jp
inc
or
adc
aas
imul
shrl
xchg
in
cld
xchg
jns
sub
jle
push
sbb
aad
leave
test
sbb
dec
aas
ret
stos
xchg
mov
push
mov
arpl
in
dec
jmp
mov
aam
bound
inc
xchg
int3
lcallw
pop
cmp
adc
or
sub
push
mov
push
push
int3
dec
mov
lret
out
icebp
add
stos
repz
mov
inc
mov
stos
andl
jmp
int
adc
add
fildll
ljmp
pop
lcall
mov
dec
imul
bts
xor
xchg
or
lds
mov
test
roll
push
cmp
jecxz
sbb
out
lret
mov
mov
and
stos
dec
mov
test
into
jmp
jne
faddl
lcall
enter
into
ret
cmpsb
outsb
stos
add
adc
shlb
jmp
xchg
push
cmc
cltd
filds
fstpl
dec
icebp
mov
push
mov
stos
jbe
sub
mov
mov
and
adc
shl
les
pop
cs
rorl
add
aas
addr16
and
jecxz
pop
mov
jnp
mov
cmpsl
gs
leave
or
call
sub
sub
xchg
out
stc
push
push
inc
push
fwait
imul
push
stos
sbb
ret
stos
adc
and
mov
stos
inc
jae
repnz
out
std
push
mov
lods
ljmp
sti
and
popa
scas
xchg
jmp
mov
imul
setb
dec
mov
jmp
hlt
push
rorb
stos
push
adc
stc
stos
cmp
adcl
pop
bnd
jecxz
adc
dec
sbb
mov
pop
stos
xchg
mov
sahf
push
fld
scas
pop
stos
fcomps
sub
dec
stos
into
sub
adc
sub
sti
inc
cmpsl
stos
inc
insb
popa
lar
repnz
pop
cmp
mov
iret
in
fs
mov
std
xor
mov
lea
es
andb
daa
cmp
leave
pop
push
repz
aad
aam
fisubrl
jb
popa
dec
stos
sti
pop
mov
imul
stos
push
popa
jl
aad
or
insb
ljmp
pop
std
ds
mov
movsb
loopne
mov
bound
stos
sti
fbld
subl
xor
cld
scas
gs
lahf
aad
push
std
inc
cmpsb
mov
cmp
cld
sub
push
pop
sub
add
add
jno
push
pop
jns
loop
xchg
cltd
sbb
push
pusha
mov
stos
sub
adc
stos
inc
hlt
jp
xchg
ret
push
arpl
lds
or
mov
and
in
lock
sub
js
mov
sahf
push
int3
loop
mov
and
mov
lods
lahf
push
stos
push
aas
es
xor
jmp
mov
stos
jae
fldl
test
pop
outsl
out
adc
jno
jp
and
stos
cmpsl
iret
add
in
sbb
stos
xor
jb
jne
inc
mov
subb
repnz
inc
loope
dec
pop
stos
sub
fsubrp
sbb
out
imull
jnp
out
jmp
push
outsb
xchg
sbb
into
stos
rorl
xor
xchg
ds
dec
inc
movsl
xor
stos
inc
inc
add
lahf
stos
mov
into
icebp
std
stos
adc
adc
sahf
int
stos
xorps
nop
stos
mov
fnstsw
adc
jmp
mov
imulb
mov
shlb
fldt
mov
pop
fstps
or
xor
rcl
add
mov
ljmp
or
popa
stos
add
gs
pop
mov
addr16
fidivrs
lock
fwait
jnp
jb
xor
push
xchg
mov
push
pop
sub
inc
jmp
stos
pop
mov
jg
jp
fdiv
lods
scas
jno
xchg
fdivl
int
jmp
out
sar
push
lret
lahf
js
shl
arpl
movsb
adcb
or
leave
mov
mov
mov
test
xor
push
stos
sbb
mov
das
push
mov
lcall
mov
js
mov
adc
lock
mov
daa
lcall
adc
jmp
in
mov
sub
xchg
shld
jmp
test
cwtl
add
stos
push
sbb
jp
dec
push
stos
sti
push
mov
add
lret
push
lahf
or
sub
stos
mov
jns
cltd
add
sub
xor
lods
aaa
das
jmp
jp
jmp
out
decl
in
and
imul
or
mov
cltd
and
jp
mov
jae
xchg
mov
stos
mov
pusha
out
stos
arpl
inc
insl
imul
bound
sbb
cmp
cwtl
aaa
inc
test
dec
lahf
sbb
inc
lahf
rolb
mov
mov
daa
ds
das
mov
vpmacsdqh
sbb
dec
lret
xor
aaa
cwtl
xchg
sub
sub
outsb
or
popf
dec
push
adc
add
hlt
imul
out
mov
jo
inc
push
data16
mov
dec
aad
mov
hlt
daa
pop
ljmp
sarl
sti
xchg
jmp
inc
add
or
xchg
dec
add
cld
rep
mov
and
test
leave
jne
xchg
add
pusha
xor
jecxz
mov
mov
cmp
mov
sarb
jecxz
dec
cmp
pop
stos
pinsrw
stos
sbb
scas
dec
loope
dec
fidivs
arpl
sarb
xchg
or
mov
xchg
mov
and
push
cwtl
daa
sub
mov
outsb
ljmp
push
out
dec
mov
xchg
nop
stos
jmp
jne
orl
dec
je
std
cli
aaa
stos
xor
lcall
push
push
out
mov
push
mov
mov
push
stos
push
addr16
pop
daa
dec
lcall
mov
push
pop
push
pop
stos
into
xchg
outsb
sub
adc
push
rol
stos
jg
sub
sbb
sub
sbb
stos
mov
xchg
xchg
mov
sub
sbb
mov
les
fwait
cmp
subl
jmp
fs
cmp
jle
fadd
dec
mov
popf
in
add
cs
loopne
mov
inc
xor
push
inc
sub
stos
les
jne
push
inc
shrb
jnp
cmp
sub
pusha
cmp
and
push
push
fwait
sbb
pushf
xor
adc
out
frstor
mov
mov
mov
sub
into
push
push
mov
icebp
stos
lods
push
mov
shll
pop
dec
por
mov
das
lcall
fistpl
xchg
inc
fwait
shlb
loop
in
scas
int3
xor
cmp
lds
sbb
sbb
int3
pop
fsts
pop
mov
inc
sbb
aam
int
stos
rcl
dec
inc
loope
imul
scas
push
sbb
dec
scas
cmpsl
and
mov
addb
mov
push
pop
or
sti
stos
dec
dec
jmp
dec
xor
dec
adc
addr16
fdivrs
mov
cmc
inc
push
cltd
mov
clc
adc
stos
mov
sbbb
jns
nop
stos
mov
fstl
outsl
loop
pop
push
mov
push
dec
push
or
push
mov
loopne
sbb
iret
add
mov
push
stos
and
cmp
arpl
ljmp
das
pop
mov
in
insb
fwait
cmp
xchg
push
cltd
sbb
lock
sub
arpl
mov
test
enter
inc
shlb
pusha
push
and
cmovg
mov
int
xor
mov
sbb
daa
xchg
addr16
jmp
cmp
dec
xchg
sbb
xchg
in
lods
cmpsb
stos
shll
repz
cmp
pop
push
lods
les
stos
insl
mov
push
cmp
lods
jo
mov
inc
ret
xchg
pop
dec
fwait
mov
stos
adcl
xor
pop
nop
or
xchg
mov
out
pop
xchg
fimull
lret
adc
sbb
push
xor
adc
sbb
imul
add
imul
in
stos
sub
mov
jmp
shl
aas
orl
dec
sub
fprem1
lcall
adc
cmp
lahf
adc
sbb
xchg
jbe
mov
lcall
in
xor
inc
stos
inc
jno
dec
mov
les
aaa
xor
daa
gs
enter
ret
stos
sub
inc
leave
xor
mov
daa
cmp
jg
fwait
pop
and
enter
fs
sti
popa
lods
pusha
lock
shrl
test
cmc
scas
imul
sbb
scas
call
sti
jle
push
cmp
cwtl
sbb
andl
lods
dec
jl
sub
cmp
outsl
pop
fwait
in
repz
xchg
mull
cmp
xor
scas
pop
adc
mov
mov
stos
or
add
add
dec
push
jo
popa
into
jle
scas
sti
stos
pop
mov
cs
mov
stos
imul
clc
les
xor
into
imul
mov
scas
mov
adc
cld
xchg
pop
pusha
or
pop
or
lock
adc
ljmp
vcvttss2si
xchg
xchg
xchg
ja
push
stos
jae
js
or
xchg
lret
cmc
mov
jo
stos
cmp
cmpsb
rolb
test
lds
sub
cld
sbb
ds
mov
add
loopne
stos
pop
inc
scas
jge
lock
xchg
mov
shrb
stos
int
pop
xor
xor
push
stos
dec
xchg
mov
repnz
pop
call
js
ja
aas
movsl
mov
ficompl
in
xor
lods
pop
add
ja
mov
adc
push
in
fstps
adcl
jg
faddl
es
fwait
inc
scas
popf
cmp
push
stos
gs
arpl
imulb
mov
xor
fldenv
push
stos
adc
stos
lret
xchg
insl
pop
orl
pushf
stc
xchg
stos
pusha
jns
inc
lret
leave
stos
gs
sahf
lock
repnz
add
sti
stos
add
adc
popa
call
lods
mov
dec
rorb
mov
cmp
pop
inc
dec
mov
mov
mov
add
push
inc
lahf
ja
test
mov
aad
js
fwait
movups
sub
pop
fisubrs
cli
fmul
in
sub
adc
out
rclb
popf
sub
frstor
adc
fwait
neg
and
cmc
jmp
add
out
mov
stos
clc
rolb
add
and
aad
scas
shrb
sbb
xor
cld
push
push
cmc
xchg
pop
push
sub
mov
ja
stos
jmp
lods
pop
out
jns
in
pop
pop
fcomi
xor
sbb
jb
sbb
mov
xor
imul
stos
push
loope
cld
mov
inc
subl
push
jg
jae
ficompl
xor
jp
repz
lods
pop
lahf
mov
test
outsb
push
pop
test
shrl
pushf
dec
push
enter
fisubrl
stos
ja
dec
sub
stos
jecxz
inc
sbbb
movb
and
insl
or
cmp
cmpsl
jmp
out
aad
mov
lcall
aaa
mov
sarb
aad
idivb
outsb
call
mov
test
xchg
stos
mov
les
sbb
xlat
inc
jmp
mov
call
outsb
fs
and
sbb
ja
inc
xchg
test
mov
mov
dec
mov
shrb
int3
and
scas
dec
imul
lahf
jecxz
fsubrs
mov
xchg
pop
stos
rcrb
divl
mov
or
enter
stos
lcall
sbb
repnz
test
stos
xor
cmc
adc
pop
stos
push
push
hlt
imul
mov
leave
stos
cmp
jg
stos
jae
fsubp
popa
jbe
dec
push
imul
xchg
pop
scas
dec
inc
jmp
xchg
mov
mov
and
mov
mov
mov
scas
stos
cld
and
sub
stos
sub
mov
popa
fistpl
mov
sub
push
push
daa
js
add
fildll
fldenv
les
sbb
es
fwait
add
xor
stos
sub
cli
inc
add
push
sbb
push
imul
and
jb
lahf
adc
jg
pop
push
sub
adc
leave
xchg
in
cmp
les
mov
xchg
or
in
jmp
imul
mov
test
add
mov
cmp
out
ret
les
out
jae
dec
int3
push
cltd
push
mov
stos
dec
subb
pop
subl
mov
rolb
lahf
mov
jp
stc
cmp
push
cmp
jmp
push
jnp
pop
in
movswl
dec
ljmp
and
inc
push
adc
push
cld
push
xor
inc
stos
mov
push
cmp
mov
cmc
xor
add
sbb
sbb
les
lret
inc
add
popa
pop
ficoml
jl
sbb
bound
stos
insl
xor
aas
inc
stos
inc
dec
xchg
fwait
mov
cmp
xchg
lods
stos
jge
popf
dec
jae
cwtl
in
pop
ja
xchg
test
xor
les
stos
mov
mov
jle
stos
xor
jo
cmp
popf
stos
stc
cmp
stos
fincstp
and
adc
cmc
pop
stos
daa
sub
jae
mov
test
xadd
test
mov
scas
and
adc
insb
movsl
hlt
inc
dec
icebp
in
jmp
jb
jmp
movl
scas
sbb
xchg
push
int
jle
cli
ja
imull
cs
mov
repnz
mov
or
stos
nop
in
dec
add
cmp
jl
les
pushf
pop
mov
in
fnstenv
inc
movsb
pop
xchg
imul
inc
addr16
das
sub
movsb
xchg
stos
adc
je
push
mov
mov
adc
inc
jmp
sub
mov
lahf
fs
aad
stos
pxor
std
sbb
stos
jecxz
repz
push
addl
ljmp
out
lds
aas
pop
stos
cmp
movsl
movsb
stos
ret
xlat
inc
mov
insl
stos
pop
push
imul
loopne
inc
pop
out
lock
test
les
mov
cwtl
es
mov
inc
orb
test
push
push
scas
cs
xchg
jmp
adc
int3
mov
cmpsl
lcall
mov
stos
lock
mov
dec
ds
sbb
or
rep
lar
fisubrl
daa
mov
jmp
lock
mov
ss
fistl
outsl
and
add
dec
int3
mov
in
stos
cmc
sti
daa
dec
sub
inc
stos
das
inc
test
push
or
xor
pusha
xchg
out
mov
mov
cmc
push
lret
nop
pop
stos
or
sub
inc
xchg
stos
xor
pop
dec
pop
or
adc
sub
loop
push
jo
fs
repnz
jg
sbb
stos
stos
mov
cmc
cmp
add
jl
stos
and
mov
out
push
test
aad
movsl
sbb
pop
adc
in
fcmovne
sub
stos
scas
jno
jl
mov
and
mov
mov
pop
loopne
leave
dec
jmp
push
cmp
pop
lret
bound
addb
scas
lret
stos
movsb
lahf
mov
add
sub
es
and
and
mov
mov
outsl
stos
cmpsl
pop
inc
hlt
and
lea
stos
aad
pop
mov
stos
push
add
mov
mov
mov
lret
inc
pop
imul
movsb
add
pop
mov
adc
xor
mov
int3
dec
xchg
stos
dec
dec
mov
fisubl
cmpsl
lcall
cmc
adc
pop
xchg
je
or
cmp
mov
dec
stos
jp
pop
out
es
gs
scas
push
movsl
sbb
sub
xlat
push
int
adcl
xchg
cmpsl
call
mov
jmp
popa
push
xor
in
inc
add
and
jge
fsubp
cmp
data16
push
dec
mov
xor
cmp
jmp
pusha
rcl
ret
lahf
or
stos
xchg
cmp
loope
daa
jo
fstl
rorl
xchg
test
jnp
and
scas
stos
lahf
or
out
and
cli
dec
jne
inc
adc
test
test
imul
push
xchg
loop
jne
pop
mov
mov
mov
mov
xchg
enter
mov
gs
shrb
xchg
xchg
pop
jle
in
pop
stos
js
shlb
xchg
in
imul
mov
xchg
xor
sahf
pop
repnz
data16
cmpsl
or
push
mov
rcrb
stos
aas
mov
test
pop
lcall
jnp
scas
loopne
or
fmuls
stos
out
mov
lock
mov
aad
addr16
stos
xchg
push
xlat
and
roll
and
cmp
jle
push
xchg
xor
in
jnp
insl
lea
test
push
mov
les
ret
cmp
aaa
pop
int3
sarl
stos
clc
aad
imul
mov
mov
icebp
stos
inc
repnz
test
push
jl
movsb
push
ljmp
and
pop
inc
negl
cltd
dec
xchg
adc
es
jno
and
inc
jne
jp
imul
lods
mov
and
fwait
mov
xchg
movsb
stos
sbb
mov
sarl
dec
pop
clc
lea
aam
or
adc
andl
mov
in
arpl
dec
mov
xchg
pop
dec
xchg
jp
fldenv
xchg
pop
loope
cs
push
enter
call
add
outsb
dec
lods
stos
aaa
into
mov
inc
scas
notl
repnz
mov
add
es
cmpsb
aaa
iret
stos
cmp
push
mov
sbb
dec
imul
mov
stos
icebp
cmp
mov
mov
mov
cmp
sbb
cmp
jmp
jmp
xchg
shlb
sti
ficomps
dec
mov
push
and
add
pop
loope
cmpsb
fldt
inc
pusha
rcrl
push
stos
adc
arpl
stos
enter
andl
int
shrl
int3
stos
sti
push
mov
stos
xchg
lods
pusha
rcr
sahf
sbb
enter
movsb
push
pop
ja
jecxz
dec
sub
xorb
jb
jmp
xchg
mov
jne
stos
popa
jno
inc
sahf
jecxz
mov
or
dec
fs
sbb
stos
pop
movsb
fisubs
out
stos
add
add
mov
stos
or
push
cwtl
fwait
hlt
daa
fmull
mov
cs
cmp
jp
fiadds
xchg
repz
mov
mov
mov
lods
mov
lahf
stos
sub
cmp
stos
int
ds
or
sti
ret
stos
cli
jb
cmp
pop
or
xor
divb
arpl
mov
xor
and
stos
mov
addl
rep
std
ja
lahf
inc
dec
xchg
xorb
mov
cmpsl
subl
insl
fstl
jmp
fmul
xorb
out
xchg
inc
add
ficompl
shrb
push
xor
push
sub
rol
xchg
inc
mov
pop
push
lock
cli
sbbb
mov
sbb
iret
inc
push
jge
lock
lods
mov
stos
cmp
xor
scas
mov
daa
stos
add
push
cmpsb
xchg
out
sbb
xor
mov
cwtl
push
push
out
in
xchg
xchg
mov
dec
sbb
clc
pusha
sub
xchg
xchg
fwait
dec
pop
mov
sti
out
mov
shrl
dec
dec
fsubl
jle
in
test
mov
xor
iret
cmpsl
stos
aaa
xchg
das
data16
bound
stos
xchg
cmp
adc
mov
insl
xchg
cmp
insb
adc
test
int3
imul
xor
cwtl
jae
push
stos
int
inc
jecxz
sub
stos
push
enter
movsb
into
leave
stos
mov
flds
filds
and
iret
jno
dec
daa
fnstsw
add
mov
aaa
or
push
pop
jg
xchg
imul
mov
cmp
xlat
lods
mov
je
mov
into
sub
inc
leave
mov
pushf
jg
and
mov
fdivr
cwtl
loope
cmp
inc
stos
adc
inc
stos
xorl
aaa
stos
lcall
add
mov
adc
mov
mov
es
cwtl
xchg
stos
loopne
push
mov
pop
adc
inc
jo
out
ss
and
pop
or
das
aas
add
rcr
in
stos
cmp
push
jp
dec
test
or
sbb
xlat
adc
lods
mov
jle
insl
clc
adc
mov
cltd
std
stos
je
outsl
cld
test
lahf
mov
mov
mov
sub
ret
movsb
imul
jne
push
pop
dec
out
dec
shrb
stc
mov
sbb
push
movsb
lcall
cmpsb
mov
cs
in
pop
popf
inc
out
push
jmp
mov
jge
jb
stos
lods
dec
sub
sbb
repz
sub
lahf
movsb
lods
out
stos
mov
test
mov
xchg
jo
stos
sbb
mov
sbb
stos
xchg
movsl
push
out
sub
arpl
inc
mov
dec
cwtl
adc
dec
lea
jae
pop
les
fwait
js
stos
jecxz
outsl
sbb
iret
fldcw
or
ficoms
mov
mov
xchg
and
shrl
stos
rclb
mov
stos
mov
fnstsw
inc
imul
mov
stos
push
cwtl
inc
mov
mov
stos
bound
xchg
nop
cmp
stos
std
dec
xchg
lock
daa
leave
sub
stos
out
jbe
ljmp
dec
inc
es
sbb
std
rolb
xchg
jmp
ss
pop
enter
pop
cld
jl
dec
clc
or
lret
add
fistps
sub
rcr
xlat
pop
xor
stos
lds
das
pop
stos
pop
daa
dec
push
mov
mov
jmp
mov
stos
out
lods
icebp
mov
adc
das
stos
outsl
sti
xchg
pop
stc
mov
lock
mov
insb
mov
fmuls
stc
das
mov
sub
outsb
test
test
and
inc
adc
cltd
sub
jge
add
lods
lret
int3
loope
aad
out
dec
mov
rep
test
addr16
in
imul
jbe
sub
fildll
lds
mov
outsl
mov
fmull
stos
iret
push
push
mov
adc
mov
fwait
test
sub
or
jl
stos
sahf
add
sti
and
mulb
lds
mov
mov
shlb
daa
xlat
into
push
gs
stos
mov
sub
pop
stos
xchg
lea
pusha
loope
sub
pop
jno
sub
and
fistl
mov
dec
stos
xchg
cmp
mov
jmp
xchg
scas
aad
and
cmpsl
sbb
nop
stos
push
popf
push
imul
inc
pushf
cli
imul
iret
popf
shrb
pop
sub
xchg
addr16
inc
jae
movsb
fwait
int3
add
stos
or
xchg
sub
inc
dec
js
in
into
lret
stos
ficompl
jae
cmp
lods
outsb
mov
dec
out
or
mov
cmp
stos
adc
mov
sub
scas
push
cltd
inc
xor
lea
ret
mov
inc
or
shr
mov
aas
cmp
mov
lret
fcomp
push
imul
mov
pop
cmpsb
mov
ja
sub
cmp
and
test
pop
ljmp
lret
loop
test
push
arpl
cld
out
and
adc
shll
cs
lret
das
stos
es
out
inc
stos
xor
gs
adc
sahf
shll
hlt
inc
outsb
in
mov
ret
scas
push
jge
inc
int3
cmpl
repnz
jbe
inc
xchg
mov
sub
cli
ret
stos
push
dec
mov
stos
shlb
pop
lret
out
subps
add
xor
call
pop
arpl
xchg
inc
and
xchg
pop
out
movb
das
loop
dec
cs
stos
iret
mov
notb
mov
outsl
push
into
inc
lods
jecxz
adc
mov
sbb
inc
cli
test
stos
enter
sub
stos
adcl
or
and
mov
in
test
mov
aas
in
mov
mov
xchg
add
shlb
cmp
outsb
cmp
loope
inc
sub
sub
add
xchg
mov
mov
jl
jecxz
adc
cmp
mov
shll
loope
daa
adc
nop
fadds
mov
inc
sbb
dec
ja
stos
jl
fstl
sub
leave
push
test
inc
scas
jmp
stos
cmp
push
mov
cmp
jp
dec
xchg
lock
jmp
shll
xchg
jle
addl
scas
ror
jge
push
stos
mov
cwtl
mov
stos
test
dec
aad
inc
loope
stos
xchg
not
popa
mov
push
dec
mov
jmp
movsb
add
inc
aad
xor
stos
scas
mov
arpl
xchg
out
stos
xor
sub
cltd
test
int3
mov
cmpsl
stos
loope
or
stos
cs
movsb
scas
enter
mov
inc
inc
pop
jae
jns
xchg
add
push
xor
jle
dec
push
jb
mov
ret
adc
test
push
clc
and
dec
lcall
sub
jo
cmc
rclb
clc
lea
sub
les
pop
ja
mov
ljmp
aam
pop
das
hlt
test
or
iret
leave
cmp
decb
mov
stos
or
mov
sbb
push
loope
inc
lods
xor
xlat
stos
pop
mov
int3
push
scas
inc
stos
add
add
push
stos
mov
inc
mov
movsb
mov
sarl
lret
popf
stos
jo
adc
pop
push
movntps
pop
jge
fwait
bnd
aam
aam
xchg
les
jmp
and
cmp
orpd
or
push
jmp
jmp
rcrb
jno
mov
clc
push
stos
stos
dec
jae
std
movsl
push
xchg
stos
test
and
stos
orb
ljmp
imul
imul
push
in
dec
in
stos
sbb
xchg
xchg
out
stos
push
pop
lock
stos
add
jge
mov
mov
sub
sub
jp
fwait
cmc
sahf
adc
mov
add
jmp
xor
sub
and
nop
and
stos
add
rcl
subl
js
dec
and
sahf
stos
repz
daa
jmp
and
lcall
jp
mov
imul
xlat
xchg
pop
ljmp
mov
out
movsb
jg
inc
mov
je
push
stos
sub
lcall
cmp
pop
adc
in
cmp
out
push
in
push
add
icebp
stos
mov
adc
lock
inc
test
sbb
pop
mov
fstl
mov
fadd
jl
int
adc
pop
push
stos
into
pop
sub
in
nop
xchg
mov
xchg
inc
stos
jo
or
into
mov
cmp
xchg
adc
push
fldenv
aas
or
arpl
xor
cld
out
adc
data16
subb
push
pop
fs
sbbl
icebp
pop
inc
dec
jns
stos
idivb
cmc
subl
sbb
lahf
es
dec
jbe
das
mov
and
rclb
dec
mov
stos
add
and
pop
mov
mov
adc
addr16
out
jg
stos
mov
cs
imul
repz
dec
mov
pop
mov
jge
sti
in
pop
lods
repnz
mov
pop
mov
testb
ret
pushf
stos
cmp
mov
rorb
mov
pop
pop
jnp
inc
stos
cmp
aam
jns
mov
popf
stos
imulb
popa
add
mov
fwait
stos
imul
dec
stos
jmp
push
in
jo
sub
mov
xor
xchg
dec
rcll
jns
imul
jno
and
cld
lods
es
imul
push
and
jno
std
dec
imul
lret
daa
mov
cmp
in
pusha
or
mov
inc
cld
hlt
fwait
pop
into
mov
pop
je
adcb
leave
data16
mov
dec
or
movsb
cli
movsl
cmc
stos
mov
das
sub
ret
imul
arpl
in
and
stos
inc
les
aas
imul
inc
test
and
mov
mov
sbbl
jns
in
scas
je
xchg
sub
es
pop
ja
mov
mov
xchg
inc
sub
in
stos
pusha
je
outsb
xor
xorb
and
mov
imul
xchg
mov
cmp
add
insb
cmpsl
imul
mov
xchg
and
push
jmp
sbb
cmc
inc
out
xchg
or
inc
scas
sarl
mov
lahf
out
cwtl
test
movsl
or
add
aas
stos
cmp
imul
adc
jne
test
or
xor
int3
adc
std
mov
stos
loope
les
stc
push
sbb
mov
xor
loopne
cwtl
adc
test
mov
jnp
and
je
mov
iret
pusha
subl
pop
stos
frstor
push
stos
inc
lret
mov
daa
dec
movsb
stc
pop
loop
out
jmp
mov
imul
mov
daa
ds
jns
mov
iret
je
les
cmp
loope
addr16
repnz
lds
fs
and
add
cmp
enter
call
and
sbb
les
daa
or
mov
stos
dec
in
or
pop
pushf
fcmovb
sar
roll
int3
mov
mov
lea
mov
cmp
jo
stos
mov
pop
lods
sti
inc
dec
dec
movsb
aas
out
loopne
jmp
push
stos
fistl
mov
mov
ret
dec
pop
inc
outsl
scas
mov
fwait
loopw
loopne
cmp
shll
arpl
pop
jmp
mov
mov
lods
inc
dec
mov
es
out
stos
pop
ds
je
sub
stc
pop
mov
pop
mov
dec
cmp
arpl
xchg
or
jecxz
adc
pusha
aam
jmp
add
jnp
bound
mov
mov
dec
adc
sub
gs
or
std
or
xchg
in
lods
addr16
adc
jecxz
cmp
adc
hlt
sbb
lods
stc
imul
pop
inc
addr16
in
jne
mov
adc
out
xchg
stos
fs
stc
es
enter
lret
int3
pop
pop
pushf
cmp
or
mov
adc
cld
hlt
aam
jbe
sbb
aas
jmp
inc
cmp
lea
pop
gs
sti
sbb
mov
inc
pusha
jle
and
dec
sbb
test
loop
mov
sarb
in
jb
pushf
out
ret
scas
clc
xor
stc
mov
mov
pop
cmp
stos
push
repz
lahf
icebp
inc
stos
sbb
imull
imul
mov
mov
sub
stos
cltd
mov
push
imul
out
int
mov
iret
jmp
popa
ds
sub
xchg
pop
jbe
aas
imull
sbb
clc
ret
imul
std
out
mov
sbb
imul
cmp
stos
xor
sub
adc
cmp
imul
mov
out
inc
xchg
stos
jno
sbb
out
xor
lret
jl
jb
mov
dec
stos
test
mov
mov
stos
mov
pop
repnz
adc
stos
les
lds
insb
mov
int
adc
adc
pop
clc
scas
xor
cmc
int
es
fs
hlt
stos
or
jns
adc
cmp
subl
push
stos
cmp
lcall
xor
push
aad
test
mov
ljmp
xchg
leave
imul
add
int3
sbb
xchg
repz
movsb
mov
stos
cli
imul
stos
shlb
imul
fiaddl
xor
inc
add
idiv
lea
int3
stos
stos
imul
cmp
or
cmp
dec
push
cmp
int3
stos
and
add
int
dec
imul
mov
call
xchg
mov
or
std
sub
push
bnd
lds
popf
push
mov
out
stos
sbb
lret
inc
loope
nop
and
dec
ds
jecxz
dec
pop
and
push
mov
sbb
test
loope
jmp
adc
int
lods
jecxz
stos
push
inc
add
insb
iretw
jbe
loopne
shll
sahf
out
add
std
stos
sarl
rolb
xchg
aaa
push
xchg
add
jle
orl
sbb
mov
adc
push
arpl
push
mov
scas
sub
insl
sub
sbb
popa
xchg
and
adc
push
push
mov
arpl
movsl
adc
xchg
push
jge
push
pop
pop
popf
popf
dec
cli
mov
inc
or
mov
subl
dec
jae
nop
pop
cmp
adc
mov
movsb
mov
xchg
jmp
lret
mov
adcl
mov
std
jno
popf
loope
push
add
mov
stos
loop
mov
jo
fisubs
ror
cmp
adc
int3
cltd
mov
or
cmp
jle
int
adc
xchg
sub
stos
adcl
scas
pop
shrl
jecxz
out
sbb
hlt
js
inc
jae
pushf
push
stos
lock
jp
push
je
adc
pop
stos
popa
out
dec
mov
fdivrs
pop
movsb
lret
stos
add
xchg
mov
sbb
lods
nop
pop
fisubrs
int
cmpsb
stos
or
cmp
popa
pushl
adc
sbb
pop
dec
insb
xor
out
stos
in
dec
stos
sbb
scas
sub
stos
sti
mov
clc
mov
xor
sub
out
stos
outsl
cmc
cltd
and
xor
out
mov
insl
and
cmpsl
inc
repz
cltd
xchg
mov
das
pop
sahf
jmp
insl
inc
les
and
lods
sbb
fwait
jnp
aam
outsb
fldcw
scas
and
leave
lods
stos
in
hlt
ljmp
xchg
push
sub
lahf
int3
jae
mov
subb
cmp
fs
sbb
or
pop
mov
inc
sbb
scas
xor
dec
inc
fisubrl
pop
call
and
out
xchg
cli
test
testb
and
push
das
mov
shrb
in
pop
push
inc
push
enter
or
aam
andb
sti
fidivs
cmc
and
pop
popf
cld
fwait
out
push
jnp
pop
daa
stos
adc
xor
cmp
cwtl
push
shrb
addr16
xchg
push
sub
lods
and
adc
insb
push
in
shrl
mov
fnstsw
sbb
in
dec
jne
arpl
test
mov
adcl
scas
js
stos
xchg
lret
bnd
cwtl
and
add
adc
inc
cwtl
xchg
stos
loope
push
ds
popa
lahf
jl
jb
jae
rep
jnp
inc
clc
dec
push
stos
xchg
mov
popf
sti
stos
mov
out
cmp
stos
and
int3
mov
in
aam
aas
jmp
sub
stos
gs
xchg
enter
dec
test
adc
or
or
fsubl
inc
xchg
inc
or
movsb
movsb
pop
pop
mov
and
sarl
insb
jge
mov
stos
adc
aam
xchg
jbe
add
out
arpl
jg
ret
data16
push
jo
insl
sti
jecxz
aam
cwtl
flds
jns
xor
adc
and
sbb
lcall
subb
pop
outsb
push
stos
jl
jg
bound
xchg
stos
lock
pushf
pop
insb
lods
in
sarl
push
cld
pusha
push
stos
or
adc
mov
dec
pop
std
pushf
ja
stos
adc
js
sbb
dec
andb
or
cmp
adc
push
sub
and
pop
test
xchg
stos
mov
sub
sub
sti
push
pop
jl
scas
stos
dec
mov
sub
sbb
and
stos
adc
pop
add
stos
outsb
or
dec
pop
cs
stos
scas
scas
lds
out
lods
std
stos
loope
shrb
stos
mov
bound
dec
xchg
cmpsl
push
push
push
jne
icebp
xchg
sbb
lahf
hlt
cmpsb
movsb
test
jg
popf
mov
adc
xchg
jmp
push
mov
in
dec
iret
mov
aas
in
stos
mov
cmpsl
insl
out
pop
test
xchg
mov
adc
test
or
pusha
pop
stos
dec
lcall
jmp
aad
imul
jmp
iret
push
dec
aas
fimull
xchg
shl
inc
and
dec
fcomp
mov
insl
mov
mov
ljmp
sub
and
stos
jnp
je
dec
lock
fisubrs
push
cmp
xor
push
sbb
or
not
push
stc
stos
sbb
inc
popf
or
xchg
mov
mov
pop
stos
pop
aaa
pop
lcall
cmpl
adc
ss
xor
movsl
ljmp
pop
xchg
xchg
out
jle
jno
sbb
lret
dec
xchg
stos
test
xor
imul
fdivs
fisubrl
stos
jg
or
mov
mov
and
fwait
enter
stos
pop
in
xor
aaa
xor
mov
dec
je
inc
daa
push
mov
add
lcall
stos
test
jl
xchg
mov
subb
in
jno
movsl
adc
xor
mov
push
pop
add
stos
bound
rolb
and
push
stos
and
sti
push
ret
pop
push
sahf
adc
mov
pop
mov
movsl
insb
or
xchg
cmp
stos
push
fisubs
leave
lock
hlt
or
push
mov
stos
sahf
jl
add
lock
in
pop
mov
mov
xchg
add
das
push
stos
in
mov
xchg
sub
ja
stos
pop
cwtl
xchg
xchg
xorl
jmp
mov
mov
xchg
jbe
js
loop
sbb
mov
xor
daa
push
sbb
lahf
rolb
stos
jl
xor
and
scas
daa
xor
stos
mov
loope
push
dec
mulb
movsl
aas
mov
mov
xchg
pop
mov
jne
jo
push
imul
stos
jle
xchg
inc
and
enter
daa
adc
sahf
pop
cmp
push
imul
stos
sti
inc
xor
mov
daa
stos
and
lret
sahf
push
xor
xor
lods
push
aad
fisttpll
fwait
dec
clc
sub
stos
mov
ds
pusha
stos
push
cmpsb
jo
inc
add
dec
jmp
xchg
enter
pop
cltd
pop
jne
mov
arpl
pop
push
stos
std
or
inc
mov
push
add
sub
push
daa
sbbl
repz
aas
stos
xchg
sbb
xor
cmp
xchg
lcall
sbb
jns
xor
cld
stos
push
push
push
fimull
jl
sti
mov
or
stos
dec
mov
lods
ss
rep
push
push
das
div
cmp
stos
mov
shlb
push
mov
push
jg
push
mov
lahf
test
jno
cli
xlat
inc
stos
fwait
add
sub
mov
in
inc
fisubrs
cld
jb
inc
out
lahf
icebp
out
and
mov
dec
stos
ret
loope,pn
je
stos
adc
lea
pushf
push
leave
arpl
js
fidivrl
add
stos
fsubl
das
repz
dec
repz
add
ljmp
xchg
mov
stos
cmp
int
jge
les
sub
cmc
lds
xchg
stos
shl
push
mov
jnp
cmp
orb
fisttpll
push
inc
outsb
cmp
and
push
and
xchg
scas
mov
popf
mov
jmp
xlat
jge
clc
mov
cmp
xchg
stos
andl
add
xlat
sti
mov
cmp
leave
addr16
adc
sub
insb
into
lea
stos
inc
lods
adc
cwtl
fdivs
in
pop
and
insb
stos
mov
mov
cmpsl
lods
shr
mov
ljmp
nop
jno
stos
scas
adc
test
stos
sbb
inc
xchg
push
fwait
test
sti
daa
lea
jno
xchg
sbb
pop
icebp
add
push
or
lods
xchg
daa
fldenv
mov
inc
jp
addr16
lahf
xor
enter
pop
in
mov
lock
fildll
inc
popf
dec
mov
insb
sbb
fnstsw
stos
mov
in
pop
or
sbb
dec
cmp
pusha
lahf
mov
addr16
leave
dec
push
pushf
icebp
scas
add
enter
sbb
or
jmp
and
lcall
stos
hlt
sub
adcl
dec
stos
repz
jnp
and
popa
add
or
fs
cmp
stos
or
add
mov
in
loopw
les
or
stos
add
push
push
mov
cmp
sub
sti
inc
jno
stos
lcall
mov
xchg
mov
jmp
pop
inc
mov
mov
push
push
daa
pop
jle
insl
subl
jae
add
jl
enter
dec
xor
push
push
mov
sbb
dec
xchg
test
pop
or
ds
push
dec
cld
jbe
sub
jmp
pushf
stos
dec
std
dec
xchg
shlb
mov
cmp
sbb
inc
stos
imull
cmp
enter
push
xchg
mov
dec
xchg
lea
cltd
arpl
cs
lret
or
es
cmp
dec
out
bound
aaa
pop
subb
pop
lock
faddl
scas
test
int3
das
arpl
stos
outsb
mov
push
sbb
cltd
cmp
xor
pop
or
es
imul
pop
stos
inc
jb
shll
mov
in
out
sbb
loop
stos
and
out
or
sub
adc
mov
add
stos
lret
imul
stos
cmp
jno
xor
ror
push
sub
mov
in
stos
push
movb
mov
cmp
xchg
stos
insb
sbb
test
jg
movsl
aas
cmpl
icebp
stos
pusha
xchg
std
imul
fildl
mov
add
lea
stos
dec
dec
xchg
xor
psrld
imul
xchg
imul
sub
ljmp
xchg
mov
jl
mov
rcrb
mov
push
inc
sub
jmp
in
cmp
cltd
int
pusha
mov
pop
sbb
sbb
std
imul
add
mov
stos
shr
sub
push
or
or
test
add
mov
jg
clc
insl
cmp
sbb
xchg
mov
xchg
jne
nop
and
xchg
cwtl
mov
mov
jbe
daa
lret
comiss
sbb
mov
arpl
inc
mov
fsubrs
cli
jae
test
in
imul
cmp
dec
mov
mov
orb
stos
sbb
xorl
movsl
or
mov
rol
pop
dec
in
stos
cs
xorb
xor
mov
punpckhwd
sbb
les
mov
stos
repz
das
loope
fistpl
pop
outsl
std
scas
sbb
xchg
push
inc
mov
or
loopne
mov
mov
fdivrs
jbe
add
mov
sub
inc
mov
push
lods
imul
fcompl
addr16
stos
add
jg
loop
push
aaa
ljmp
push
cltd
push
jmp
stc
scas
jmp
out
ljmp
test
cmp
dec
ret
stos
mov
movsb
dec
data16
mov
xchg
mov
sub
push
jle
stos
inc
xor
adc
aaa
sub
lcall
leave
jmp
jns
xor
jle
repz
inc
cmp
stos
cmpl
in
mov
xchg
mov
stos
ljmp
sub
mov
fistps
lahf
pop
push
mov
imul
stos
negl
dec
or
and
mov
js
jnp
icebp
stos
rep
dec
aas
mov
push
in
in
stos
mov
dec
imul
and
mov
push
je
fwait
xchg
dec
sti
jns
roll
stos
mov
into
pop
stos
iret
lahf
and
pop
stc
xchg
mov
insl
pop
into
dec
jmp
cs
in
mov
jg
jecxz
dec
cld
jne
movsb
push
xchg
sub
mov
mov
jo
jecxz
mov
in
add
cmpsb
cmp
push
stos
lea
imul
xchg
clc
xchg
in
mov
stos
addr16
in
scas
daa
push
xchg
push
scas
xor
jne
mov
cmpsl
push
and
jge
push
insb
mov
mov
inc
mov
inc
sbb
arpl
popf
lock
xor
std
dec
mull
inc
addr16
xchg
mov
ja
stos
cmpsl
jo
jnp
loope
gs
adcl
and
or
mov
adc
popa
jb
lret
nop
je
pop
jbe
jp
sub
stos
push
jecxz
mov
pop
mov
in
jo
and
fmul
mov
mov
fucomip
aad
mov
js
mov
sub
mov
out
stos
imul
test
sbb
insb
stos
sub
mov
es
ja
stos
into
aas
pushf
cwtl
push
inc
pop
xchg
and
fistpll
xor
aam
in
mov
fwait
sub
test
loope
in
rorb
mov
lahf
imul
mov
scas
stos
scas
push
lret
pop
and
ret
cld
add
lds
pop
mov
movhps
ds
sub
mov
and
daa
inc
pop
add
mov
arpl
xor
pop
sbb
nop
rclb
adc
mov
jecxz
dec
xor
shlb
daa
and
push
mov
mov
pop
rorb
stos
or
push
pop
jnp
inc
subl
fbstp
mov
jbe
out
stos
lret
dec
fcomi
xchg
addr16
sarl
mov
or
stos
and
subl
ret
in
pushf
addb
mov
mov
idivl
jmp
xor
pop
scas
jno
and
xchg
cmp
add
xchg
dec
leave
lods
xor
lret
lcall
jge
sbb
aam
in
stos
dec
lret
jp
jbe
arpl
in
mov
jnp
leave
sub
jo
inc
mov
mov
cld
in
push
movb
add
call
imul
push
cmp
sub
push
test
cmp
add
imul
or
cmp
push
xor
cmp
scas
stos
mov
sbb
mov
sub
gs
stos
ljmp
cwtl
imul
adc
mov
mov
pop
jne
negb
fcoms
add
rep
adc
cwtl
cmp
jmp
fldenv
xchg
ljmp
xchg
ret
sub
shll
sbbb
push
iret
push
orl
mov
xor
int3
loop
pusha
dec
mov
addr16
xchg
sub
rorl
daa
stos
sub
dec
add
imul
push
popf
shrb
inc
jnp
mov
jp
cmp
lcall
and
stos
add
lret
cmc
test
in
jmp
xchg
sbb
add
push
popa
in
sub
mov
bound
inc
sub
movsb
mov
imul
inc
mov
stos
sahf
stos
dec
lea
cmp
lcall
das
das
jo
ret
fadds
loopne
in
cwtl
xchg
mov
aad
inc
bound
pop
xchg
shrb
mov
aam
dec
lds
dec
xor
add
sbb
into
sbb
stos
sbb
inc
daa
mov
shrb
xchg
pop
cmpsl
cmpl
fwait
jae
roll
dec
xor
fisubrs
xchg
lahf
lret
xchg
mov
js
push
imul
lods
push
movsl
daa
sub
xchg
mov
dec
stos
mov
movsb
movsb
cmp
pusha
test
sbb
gs
pop
lret
push
sti
and
test
cmp
push
xchg
jnp
lcall
fsts
pushf
mov
stos
jno
shrb
pop
lahf
in
mov
leave
ss
stos
push
add
adc
in
jns
xlat
xor
add
repnz
inc
adcl
push
rcrl
mov
movsl
mov
inc
sub
mov
stos
enter
cmp
sbbl
stos
in
mov
inc
xlat
mov
cmp
stos
xor
add
out
jp
jo
add
fdivrs
je
fnstenv
and
pop
stos
test
pop
and
fwait
and
fwait
js
push
add
stos
dec
testl
fisubrs
cmp
mov
icebp
loopne
xchg
lea
stos
push
fs
jae
push
loopne
stos
push
and
and
xor
jb
mov
adc
jnp
mov
dec
lcall
lret
sub
pop
push
std
add
lahf
je
cmp
jg
es
insl
adc
inc
mov
mov
pop
mov
scas
icebp
pusha
xor
cltd
sbb
stos
cmp
mov
scas
call
stos
mov
iret
pop
cs
cli
push
test
je
inc
xchg
insb
arpl
mov
aaa
test
mov
inc
dec
xchg
stos
xor
int
fsubs
push
push
hlt
int
mov
js
cmpsb
xchg
mov
aas
ljmp
repnz
inc
or
pop
inc
clc
cmp
push
subl
test
dec
stos
push
sub
jmp
mov
sub
mov
or
dec
hlt
adc
pop
cmp
push
subl
popw
roll
jmp
lods
aad
mov
ljmp
in
stos
test
roll
mov
lock
cs
lahf
mov
push
sarl
and
xchg
lret
stos
aaa
fsubs
sbb
xchg
movsl
shrb
scas
and
pop
mov
stos
bound
pop
add
dec
movsb
stos
dec
push
xchg
push
aaa
mov
jl
test
inc
push
fwait
call
ljmp
sub
mov
aad
mov
mov
add
lret
xchg
and
stos
mov
pop
mov
stos
fwait
cli
jmp
addb
mov
mov
jl
mov
stos
mov
or
stos
fiadds
add
stos
mov
movsb
push
lods
stos
clc
hlt
leave
pop
lret
daa
sarb
stos
das
fnstsw
idivl
pop
test
outsl
imul
mov
lods
test
jo
mov
mov
adc
stos
mov
es
shll
or
lods
xchg
lock
mov
rolb
jp
push
and
xchg
jo
sbb
mov
add
stos
cltd
je
jecxz
addr16
icebp
mov
into
mov
cli
stos
pop
xchg
cmc
fadds
lret
icebp
hlt
into
mov
stos
cld
inc
jbe
fwait
mov
pop
stos
test
adcb
jne
inc
insl
add
bnd
in
lds
lret
imul
stos
mov
insl
call
add
xlat
adc
imul
cmp
cmpsb
cmp
stos
aaa
xchg
aas
loope
gs
stos
sub
pop
pusha
mov
cmp
or
sub
aam
add
out
jb
hlt
je
xchg
mov
cltd
lods
fildll
mov
stos
mov
jae
insb
stos
adcl
fsubrs
dec
les
out
imul
push
mov
bts
mov
jl
pushf
xchg
test
ljmp
fld
fsubrs
aad
scas
sbb
aaa
mov
mov
hlt
lds
jno
xor
jle
aam
xchg
push
iret
mov
sub
loope
pop
nop
adc
jmp
inc
stos
call
mov
jmp
pop
sbb
push
icebp
stos
gs
adc
stos
call
aaa
movsb
cmp
outsb
jmp
popf
hlt
subb
cltd
xchg
push
pop
push
xor
xchg
stos
push
or
in
loope
jno
and
mov
pushf
imul
hlt
mov
lods
cmp
add
push
addr16
cmp
sub
addr16
into
mov
jnp
stos
call
cmp
jl
fadds
dec
adc
lret
xchg
stos
pop
mov
inc
xchg
daa
add
sarl
cmp
test
adc
or
sbb
movsb
xor
mov
stos
ja
shll
add
add
insb
sub
test
xchg
xchg
sahf
dec
stos
jmp
inc
lahf
lods
push
fnstcw
push
lds
imul
fnstsw
sbb
clc
outsl
stos
pop
pushl
in
insl
and
mov
push
cs
stos
xor
enter
pop
je
addr16
mov
imul
lods
mov
adc
fsubrs
jns
subw
push
xchg
sbb
mov
dec
inc
std
int3
lods
cmp
imul
jno
push
das
in
cmp
fwait
mov
jecxz
fildll
sbbl
in
popa
inc
scas
cmpsl
into
shrb
add
push
stos
pushf
nop
xchg
ljmp
scas
sub
xor
xor
not
pop
mov
in
stos
hlt
mov
filds
stos
lods
outsl
fisubrs
cmp
jo
stos
xchg
arpl
test
dec
fstp
mov
push
pop
push
dec
fists
dec
xor
rol
mov
inc
lds
pop
repnz
inc
cli
ja
push
daa
stos
out
mov
aas
mov
int3
stos
cltd
aaa
xor
outsl
sbb
bound
dec
stos
mov
fwait
jl
cmp
xchg
ret
or
out
psadbw
sbb
sbb
je
adc
mov
shr
insl
and
inc
mov
or
pop
inc
and
stos
push
aad
push
xor
outsl
insb
stos
dec
sub
cli
push
daa
sub
mov
mov
sub
insb
lock
ja
xchg
sbb
je
imul
lahf
cmp
mov
sub
and
stos
push
push
je
jecxz
movsl
imul
pop
pusha
ja
out
jb
movsb
mov
stos
xchg
imul
stos
cmpsb
mov
outsb
inc
stos
lea
cmc
jl
push
orb
jmp
iret
in
mov
stos
pop
movsl
xchg
insl
add
sti
testl
xchg
ret
stos
std
call
jns
cltd
cwtl
shrl
sub
lahf
stos
jle
jb
sbb
repnz
xchg
orl
pushf
mov
jmp
mov
xchg
sub
lods
mov
mov
dec
movsb
mov
test
fwait
mov
paddusw
movsb
addl
repnz
xor
mov
std
and
xchg
out
push
jne
in
push
popa
out
jns
scas
mov
xor
imul
movl
sbb
mov
lds
push
fs
stos
ljmp
push
stos
add
inc
push
mov
cmpsb
cmpl
mov
lods
in
stos
mov
out
jecxz
sub
call
or
add
loope
jg
std
mov
push
and
imul
stos
inc
adc
mov
in
dec
rcll
cmp
pop
sti
movsl
ds
fldt
or
lret
sahf
sar
push
stos
sbb
adc
jb
gs
popa
out
addr16
adc
mov
sub
dec
fwait
sbbl
push
sub
xchg
pop
push
hlt
stos
fildl
sti
and
add
gs
cwtl
mov
stos
xor
sub
shrl
sub
mov
adcl
les
inc
adc
mov
cli
mov
arpl
cmp
out
inc
push
mov
mov
inc
dec
lea
aaa
ds
subb
sbb
mov
inc
std
mov
sti
sbb
cmp
xlat
inc
stos
stos
push
push
sbb
jns
out
clc
iret
and
in
and
pusha
stc
stos
movsb
mov
stos
sub
cmp
fwait
jbe
dec
and
loopne
mov
cld
or
xor
xchg
nop
push
out
into
aas
lret
or
sbb
sarb
pop
pusha
or
pop
stos
inc
cmp
cmp
inc
shrb
test
xchg
xchg
dec
stos
pop
scas
fwait
xchg
dec
repnz
mov
jle
icebp
test
movsb
inc
std
movsl
lret
orb
outsb
xchg
inc
mov
mov
stos
aam
dec
icebp
mov
cld
loop
sbb
or
dec
pop
cmp
or
mov
imul
mov
in
scas
jmp
out
xchg
fs
mov
jmp
and
push
xchg
stos
add
enter
xor
and
dec
stos
cmp
push
repnz
daa
xchg
bound
push
inc
xchg
stos
aam
inc
sub
in
gs
mov
cmp
lods
stos
jnp
adcl
mov
pop
jl
pusha
cmpsb
je
scas
dec
sub
cltd
jmp
popa
xchg
sub
out
and
inc
sbb
and
dec
push
sub
in
jmp
jnp
stos
and
xor
dec
or
in
imul
xchg
rclb
lahf
cmpsl
insb
dec
fs
les
mov
ss
popa
cld
mov
jmp
fstp
adcb
push
dec
ja
shrb
sbb
jmp
jl
add
mov
push
jecxz
shll
push
cmc
stos
das
push
add
jnp
adc
inc
and
std
sbb
mov
jne
out
lock
mov
push
stos
cmp
xchg
cmpsb
jecxz
daa
iret
dec
pop
mov
insb
daa
sbb
inc
inc
xchg
or
out
lahf
push
outsl
stos
adc
mov
stos
dec
mov
pop
ds
push
or
inc
push
loopne
lods
dec
sub
mov
stos
jecxz
pop
xor
xor
arpl
es
subl
mov
stos
popf
mov
jg
push
clc
stos
xchg
aas
dec
loope
sub
jae
hlt
mov
xchg
std
mov
stc
scas
adc
imul
imul
lock
sbb
mov
and
stos
mov
adc
pushl
jg
insl
adc
or
sbb
neg
popf
fldt
loope
dec
jb
inc
add
loop
out
sbb
mov
adc
and
adc
les
addr16
mov
bound
cmpsl
jmp
std
or
fs
lcall
mov
mov
fistpl
add
stos
or
sahf
inc
cmpsl
in
jne
mov
push
mul
rol
stos
getsec
mov
inc
adc
fisubs
push
jbe
movl
outsl
into
adc
mov
mov
fisubrl
test
inc
jnp
xchg
pop
mov
pusha
and
or
fcmovbe
inc
jmp
stos
or
xchg
lcall
stos
pop
das
mov
jl
ds
add
sub
mov
in
mov
sub
lock
ficoms
cmp
in
andl
xor
mov
pop
popf
xchg
shr
aas
out
ljmp
cmp
jp
cwtl
movntq
icebp
jl
fwait
xchg
es
cmp
push
push
dec
stos
and
dec
mov
sub
xor
xor
movsb
cld
push
dec
test
push
or
cmp
cmp
lods
ffreep
insl
inc
jne
popa
lcall
push
xorl
pop
xchg
push
adc
sbb
test
stos
icebp
xor
gs
add
or
stos
inc
adc
aad
lret
stos
dec
jl
xchg
xchg
stos
out
imull
xor
stos
rcrb
icebp
cmc
sbb
cld
scas
fisubs
jle
stos
js
fs
sbb
les
mov
mov
adc
dec
push
xor
stos
rolb
inc
sub
mov
iret
icebp
ja
fldt
fldcw
aas
popl
jle
xor
mov
jmp
push
call
shll
cwtl
push
loope
xchg
sti
leave
stos
icebp
jno
scas
cmp
stos
testb
popa
imul
dec
cmc
daa
push
ret
sbbl
sub
sbb
stos
xor
push
push
xchg
stos
rcrb
loop
ljmp
enter
cmp
add
shrl
or
test
js
inc
push
adcl
or
stos
mov
xor
xlat
stos
ret
arpl
in
cmp
xor
stos
or
mov
imul
pop
cmpb
xor
sbb
add
add
xchg
push
es
add
xor
stos
gs
add
mov
int
stos
in
fisttps
data16
xor
leave
mov
jb
push
or
imul
stos
jecxz
and
sbb
sub
shlb
stos
adc
outsb
hlt
aad
fldt
addl
stos
xchg
addr16
mov
arpl
cs
imul
dec
std
insb
cmpsb
mov
dec
iret
dec
ljmp
adc
nop
cmc
inc
adc
imul
pop
jns
pop
push
mov
gs
jge
cmp
and
add
xchg
jno
stos
xchg
adc
xor
stos
xchg
xchg
mov
or
imul
aad
out
stos
cmp
cs
stc
and
into
xchg
xlat
in
out
cwtl
shll
push
test
lods
xor
andb
sbb
cmp
push
sub
pop
in
jne
pop
jmp
mov
push
rcrb
lahf
in
sarb
pop
cmpsl
lds
outsl
movsb
out
mulb
adc
stos
adc
movsl
mov
inc
pop
stos
cltd
jns
sbb
mov
daa
mov
mov
enter
sti
inc
outsl
lret
adc
movsb
stos
adc
fwait
inc
jae
xor
js
mov
jmp
cltd
push
jmp
mov
scas
push
pop
jl
jbe
pop
call
sbb
xchg
in
cmp
iret
push
fneni(8087
imul
test
icebp
leave
sbb
adc
stos
test
mov
mov
add
cmpsb
stos
mov
xor
adc
inc
fisubrl
mov
dec
loopne
mov
scas
clc
loop
sub
lods
fcompl
jb
or
stos
shl
mov
push
stos
jae,pt
jne
leave
mov
aad
mov
sbb
stos
ficomps
dec
ss
sbb
cmc
test
mov
stos
mov
add
dec
xor
scas
stos
and
dec
scas
call
cmpsb
stos
mov
xchg
adc
int3
ret
jp
cltd
mov
push
mov
jecxz
sbb
arpl
mov
stos
add
jae
adc
icebp
subb
pop
int
imul
cwtl
or
and
std
mov
mov
stos
aam
loopne
pop
sti
sub
mov
imul
fs
jl
push
mov
stos
call
mov
movsl
sub
loope
fwait
js
pop
stos
push
mov
xchg
inc
jbe
stos
adc
dec
lds
mov
cld
stos
scas
in
add
popf
fsubrl
sub
mov
ljmp
jle
sbb
stos
inc
inc
inc
scas
lock
push
or
add
mov
mov
stos
or
mov
scas
cmp
push
nop
mov
iret
or
adc
mov
in
jp
mov
sbb
mov
stos
dec
cmp
ja
aam
adc
lcall
jp
xchg
mov
sbb
stc
arpl
in
aam
push
fwait
push
orl
dec
iret
fwait
adc
in
adc
jnp
pop
inc
les
cmc
insl
iret
and
or
jno
add
xchg
or
in
stos
xchg
dec
push
insl
int
and
test
cs
sbb
stos
ds
cmp
jl
das
push
stos
aad
push
stos
push
xor
inc
inc
push
or
sbb
adc
xor
mov
ret
mov
je
mov
inc
jb
lret
addr16
cli
dec
sub
mov
andb
aas
or
lea
rolb
stos
and
popa
test
and
pop
sub
push
jmp
xchg
cltd
xchg
insl
lret
lock
dec
movsl
in
stos
dec
jmp
mov
int3
repz
in
inc
push
pop
icebp
mov
stc
fdivrl
stos
pop
sarl
jmp
jl
pushf
bound
cwtl
nop
test
push
xchg
lcall
rcrl
sub
mov
stos
addr16
ja
cmpsb
lahf
out
stos
test
outsl
stos
pop
out
lock
and
jmp
mov
xchg
mov
jnp
add
mov
insb
stos
clc
cs
jl
pop
sub
out
mov
stos
mov
cmpsb
push
imul
mov
stos
sarl
jns
sub
mov
pusha
stos
xchg
popf
stos
int3
pushf
xchg
dec
add
fsubrl
sahf
mov
cmpsb
and
cmpsl
mov
pop
dec
cmp
sbb
stos
aad
test
cmp
gs
iret
mov
ret
jle
inc
push
outsl
mov
or
fwait
stos
xchg
fs
jg
sbb
insb
cld
hlt
cli
stos
inc
xor
mov
leave
outsb
popf
out
jg
ret
ds
stc
es
inc
jmp
shrb
nop
jg
je
stos
adc
xchg
xor
jmp
pop
xor
shlb
sub
dec
cmp
rolb
push
sub
dec
cwtl
mov
and
jmp
and
arpl
test
inc
sbb
lock
pusha
xchg
mov
test
loopne
jnp
or
cmpsl
loope
push
dec
movsb
inc
test
scas
stos
insl
test
rclb
cmp
mov
stos
out
imul
movsl
xchg
gs
pop
and
sahf
sti
sub
stos
jbe
push
ficoms
dec
mov
sub
fst
jno
imul
in
je
sbb
pop
out
or
and
mov
jbe
push
pop
adc
stos
mov
ret
lods
push
iret
aaa
lds
add
xchg
andb
mov
sub
xor
addr16
mov
test
dec
je
mov
stos
int
mov
xchg
imul
mov
stos
insl
xchg
or
mov
repz
or
fistpl
sub
xor
push
cmp
rorb
ret
xchg
mov
stos
xchg
leave
add
xchg
in
xor
dec
loopne
cmp
pop
nop
push
sbb
push
mov
pop
push
adc
adc
xchg
scas
sbb
mov
push
and
cmp
stos
cmc
adc
mov
aad
sarb
mov
hlt
pushf
dec
test
dec
pop
stos
adc
es
sub
test
lods
sub
or
call
pop
fs
and
adcl
adcl
cwtl
inc
stos
inc
js
mov
pop
mov
xchg
cmpsl
lods
jmp
pop
outsl
lret
xchg
xchg
jg
mov
xor
stos
addr16
fwait
sub
imul
xchg
loopne
lock
push
mov
mov
gs
cwtl
sbb
jg
sub
stos
xchg
xor
xchg
mov
scas
push
inc
push
ds
fsubrl
jbe
loope
mov
cltd
pusha
gs
shll
aaa
jle
mov
push
mov
fnstenv
push
and
sub
inc
std
inc
leave
stos
cmc
aaa
jmp
and
stos
cmp
inc
repz
test
pop
xchg
push
mov
xor
fsts
sub
inc
lret
insb
lods
sub
daa
mov
in
fsubrl
stos
xchg
xchg
mov
dec
adc
test
in
mov
imul
mov
jbe
dec
push
stos
mov
xchg
int3
stos
pmaxub
sub
fs
imul
sbb
or
push
mov
scas
into
xchg
mov
das
push
in
es
arpl
out
xor
ljmp
fs
inc
or
lea
test
adc
jbe
ret
stos
mov
popa
mov
stos
jns
or
sarb
lahf
xchg
dec
jae
cwtl
xlat
lahf
cmpsb
lea
xchg
imul
subl
stos
movsl
int
cld
sti
inc
mov
stos
sarb
cmpl
stos
loopne
lret
cltd
jmp
outsb
mov
cmpsl
sub
test
mull
push
stos
clc
movsl
mov
mov
jno
inc
push
pop
cmp
stos
test
stos
xchg
cwtl
jne
outsl
sub
stos
or
xor
lcall
mov
out
imul
divl
mov
stos
inc
fsts
add
icebp
mov
in
xchg
sbbl
mov
sbbl
sub
out
cmc
andl
mov
das
mov
push
cmp
add
je
or
jecxz
les
xchg
mov
rolw
dec
popa
inc
lods
scas
mov
in
push
clc
sub
xchg
in
fs
inc
stos
aad
mov
jmp
int3
mov
stos
xor
push
ljmp
pop
inc
cmpl
and
test
nop
subb
mov
push
stos
std
mov
dec
pusha
stos
sbb
call
sbb
inc
stos
out
cmpsb
test
mov
les
pop
jmp
adc
and
and
movsb
mov
stos
sbb
mulb
pop
fs
imul
sbb
sbb
adc
xchg
movl
std
push
push
jg
gs
mov
iret
dec
shrb
xchg
mov
lds
jle
lods
sbb
testl
mov
dec
mov
inc
mov
leave
hlt
or
and
cwtl
lods
xchg
stos
adc
mov
aaa
dec
into
stos
push
xor
mov
ljmp
cld
jmp
stos
loope
sub
inc
mov
stos
loope
fstpl
stos
iret
nop
push
ret
fmull
pop
lods
mov
ja
lods
mov
dec
jo
call
sti
das
jge
sub
enter
outsl
gs
sub
mov
cmp
mov
int
stos
cmp
add
stos
sbb
mov
xchg
stos
idivb
mov
mov
cli
jo
clc
inc
stos
or
in
insl
sarb
pushf
js
popa
ljmp
xor
xchg
lock
flds
cltd
mov
ss
mov
and
stos
into
sub
lret
stos
and
shrb
or
pop
xchg
pop
int
stos
stos
jge
push
jl
test
sub
pop
stos
jle
fildll
scas
sahf
stos
add
ds
adc
mov
or
insb
stos
inc
push
fdivs
or
out
jnp
mov
jmp
xchg
sbb
cwtl
sbb
and
push
mov
jmp
pop
loopne
dec
in
test
inc
push
xor
popf
dec
mov
adc
stos
sbbb
loope
test
fstpt
pop
movsb
or
push
mov
test
popf
sub
and
stos
and
ret
fistpll
mov
dec
nop
jp
popf
stos
push
into
je
adcb
mov
std
mov
mov
std
jl
subb
add
inc
subl
stos
scas
enter
add
push
icebp
aad
cmpsl
pop
test
jmp
and
sbb
xor
add
test
pop
dec
fldenv
int
js
adcl
rcrb
add
decl
rcrl
mov
sub
mov
pop
mov
ficoml
cmp
lret
adc
sub
cltd
jg
pop
stos
insl
cli
dec
icebp
fbld
jbe
fstpt
lahf
sub
cli
mov
daa
sub
in
or
addl
lock
mov
cmp
stos
mov
xorl
inc
xchg
les
fld
stos
xor
lcall
in
cltd
jge
mov
adc
mov
roll
cmp
jae
lea
std
mov
jno
jbe
sbb
inc
inc
mov
fwait
cmpsl
add
es
jp
push
sti
mov
xchg
mov
aas
sqrtps
mov
jmp
out
aad
pop
loope
orl
js
andl
adc
mov
stos
ds
mov
pop
adc
xchg
loopne
jnp
pop
mov
push
cmp
xchg
shrl
imul
mov
cmpsb
cld
stos
cmp
dec
pop
ror
repnz
sub
ja
rol
or
mov
pop
cld
inc
xchg
jne
pop
pop
mov
cmpsb
pushf
stos
adc
jb
cmp
adc
arpl
push
jne
jae
jmp
sub
stos
fdivrl
cmpsl
mov
dec
sahf
stos
adc
jl
jnp
out
push
sbb
add
daa
movsb
stos
xchg
inc
sub
sahf
jnp
mov
out
sti
stos
mov
push
pop
jle
test
loopne
jnp
out
stos
test
push
les
mov
push
xchg
repnz
stos
mov
test
push
mov
stos
fmulp
imul
setae
mov
shrb
xlat
decl
stos
ss
dec
cmc
stos
cmp
addr16
push
jnp
push
jb
inc
adc
sbb
lock
in
mov
aad
sub
adc
pop
dec
jbe
stos
or
int3
sbb
ret
inc
addr16
and
js
es
ss
cmp
dec
int
popa
adc
push
test
mov
sbb
push
stos
pop
jae
idivb
jmp
stos
jecxz
ret
cmp
adc
cs
stos
push
jbe
push
bound
imul
mov
fnstenv
mov
imul
movsl
out
and
xor
nop
sar
pop
addr16
lret
jl
cltd
jp
stos
dec
mov
xchg
push
sub
jge
aam
aaa
adc
stos
lock
mov
or
inc
adc
test
lock
xadd
lods
jp
faddl
movsb
cmp
iret
and
enter
stos
int
ficomps
pop
fcompl
push
stos
sub
jmp
xlat
clc
int3
addr16
xchg
in
stos
jecxz
lahf
outsb
leave
stc
test
xor
js
xchg
push
in
mov
sub
gs
push
notb
jp
jbe
out
inc
dec
movb
stos
cltd
movsb
dec
sarb
outsl
xor
push
push
lds
push
sub
mov
sbb
and
stos
pop
cwtl
mov
shrl
or
stos
leave
jge
mov
and
xchg
loop
out
jecxz
int3
gs
xchg
mov
ret
add
arpl
cli
adc
in
stos
movsl
cmp
pusha
stos
js
mov
inc
cmp
repnz
pop
sbb
cmpsl
sub
insb
jg
or
enter
lods
bound
mov
stos
js
pop
stc
cmpb
sarb
jnp
mov
pop
sub
in
movsb
loop
stos
mov
mov
movsl
dec
stos
sarl
fisttpll
jl
into
lret
test
dec
popf
jns
lods
pop
cmpsb
stos
pushaw
xchg
mov
mov
fs
insb
inc
push
ds
stc
ret
hlt
pop
sub
stos
and
jle
outsb
push
lcall
or
stos
mov
cmpsb
jo
jne
out
popa
xchg
incb
loope
xchg
cmp
jmp
inc
mov
adc
mov
and
mov
lret
aaa
jo
fwait
enter
inc
or
push
in
push
stos
mov
cmpsl
jmp
xchg
xor
js
test
fcoml
push
xchg
inc
arpl
stos
orl
out
jmp
daa
nop
mov
cmpl
test
mov
cmp
pop
jmp
push
inc
pop
imul
lcall
ja
and
stos
pop
shlb
in
push
cmp
add
test
and
dec
xchg
insl
cmp
jecxz
fcmove
stos
cmp
mov
push
push
std
das
into
push
xchg
xchg
nop
pop
daa
lahf
ret
jns
xchg
mov
and
shr
leave
mov
les
fxam
imul
cs
mov
mov
daa
add
xchg
bound
stos
test
in
sub
imul
fildll
enter
mov
sub
mov
mov
inc
pop
jecxz
push
lds
push
ljmp
push
fwait
mov
fwait
xchg
pop
mov
xor
lahf
je
cmp
adc
mov
mov
gs
push
pop
lods
in
xchg
dec
jp
stos
lret
pushl
push
fbstp
fwait
jo
outsb
mov
lods
mov
sub
jp
stc
and
dec
mov
adc
xchg
stos
and
mov
inc
and
lds
jbe
inc
sti
mov
push
pop
test
xor
aas
mov
imulb
xor
scas
inc
andl
cmp
jns
xor
ret
loope
fstpl
or
out
mov
aaa
and
stos
push
inc
add
jmp
cmpsl
adc
jecxz
xchg
das
adc
jb
sbb
push
int3
pop
leave
ja
shrb
iret
sbb
stos
and
scas
add
imul
jne
sbb
xchg
stos
shll
dec
sub
mov
mov
and
stos
enter
and
lock
stos
mov
pop
aam
add
subb
mov
xlat
stos
lea
les
arpl
inc
cmp
and
lret
notl
push
mov
mov
push
cmpsb
inc
xlat
xchg
inc
xchg
sub
stos
cltd
push
fisubrs
call
pop
add
pop
movsl
xchg
xchg
cmc
xchg
stos
mov
sbb
pushf
sbb
es
xchg
push
mov
pop
mov
inc
stos
stc
mov
ret
cmp
mov
mov
idivb
mull
adc
js
in
xchg
xchg
mov
enter
stos
stos
ljmp
cmp
pop
xlat
cmp
mov
cs
sbb
testl
jb
stos
xor
in
xchg
xlat
pop
mov
pop
lcall
aam
sub
jne
pop
stos
cmp
xor
inc
loop
lock
data16
mov
jmp
dec
subb
popa
shrl
jmp
pusha
arpl
or
mov
scas
push
loope
mov
cmp
subl
pop
out
or
jle
stos
sbb
push
mov
fisttpl
in
mov
adc
loope
addr16
mov
mov
stos
push
stos
mov
xchg
lods
stos
add
aad
xor
fwait
pop
cmp
dec
enter
arpl
mov
mov
xchg
mov
jmp
fbstp
dec
xchg
sbb
imul
add
dec
xor
mov
inc
dec
push
mov
jmp
mov
stos
idivb
in
dec
lret
fmull
jp
orb
and
cmpsb
sti
mov
inc
imul
lret
cmp
jmp
stos
inc
pop
cli
and
push
ja
stos
negl
test
or
sub
and
sbb
jo
scas
loope
test
nop
fimull
pop
adc
mov
dec
mov
stos
ja
pop
scas
jmp
movsl
push
stos
xlat
in
out
shrb
mov
dec
pusha
decb
xchg
and
icebp
mulb
or
dec
sub
push
fldcw
or
stos
int3
or
xchg
jg
and
and
rorl
pop
xchg
addb
movl
jmp
sbb
sbb
fisubrl
rcl
stos
jb
mov
push
xor
shr
stos
pusha
hlt
jb
mov
mov
push
xor
add
out
dec
dec
push
xor
mov
mov
sarb
daa
push
stos
add
dec
xchg
shrl
jbe
pusha
xchg
lds
or
nop
imul
popf
movsb
gs
rcrb
sub
xor
and
mov
data16
lock
dec
sbb
push
es
stos
aas
xchg
push
fnstcw
xchg
inc
xor
test
jns
jmp
scas
sbb
scas
xchg
add
sub
mov
mov
or
push
scas
push
dec
aas
pop
xor
xor
xchg
pop
sub
stos
das
push
sbb
push
clc
out
in
jb
repnz
push
cmp
fdivl
mov
mov
stos
stos
xor
jae
push
xchg
mov
jne
out
mov
pop
add
xchg
addr16
imul
js
stos
aad
jno
pusha
mov
outsl
stos
adc
cmp
push
cli
fwait
ret
xchg
cltd
and
pushf
push
adc
orl
dec
xlat
add
stos
pop
rcll
sbb
add
pop
pusha
in
cwtl
mov
xlat
push
fwait
mov
sahf
or
or
sub
xor
cmp
dec
inc
mov
mov
fucompp
xchg
pop
stos
mov
mov
fwait
mov
fisttpl
in
shr
stos
xchg
lea
scas
stos
inc
cmp
dec
pop
rclb
jo
push
xchg
dec
push
fldcw
sbb
adc
inc
lret
mov
stos
push
ret
jl
fcomps
int
push
fbstp
ret
lcall
mov
in
or
sub
adc
xor
cwtl
jg
inc
stos
das
add
push
stos
or
push
cmp
nop
pop
stos
nop
xchg
jle
js
insl
cmpsb
lea
stos
inc
dec
dec
je
daa
insb
jns
bound
lock
xchg
pushf
gs
out
inc
int
jmp
out
mov
cltd
pop
ret
add
mov
mov
jnp
je
movsl
cli
shr
pop
xchg
pop
stos
outsl
cwtl
or
cmc
stos
sahf
inc
rcll
and
push
fidivrs
mov
stos
lret
ss
xchg
pop
cltd
xchg
fsubrs
repz
cmp
jno
gs
hlt
pop
pop
imul
xchg
xchg
repnz
cltd
cmc
mov
inc
pop
inc
lret
sub
or
jmp
lods
jae
add
test
cwtl
cmp
loopne
adc
cld
gs
filds
adc
sub
dec
jl
stos
mov
inc
fisubrs
pop
stos
insl
dec
pop
cmpsl
es
stos
ret
lret
push
lret
loopne
into
out
ret
xchg
adc
sub
push
push
lds
rcrb
xor
outsb
sub
add
push
loop
fldcw
cltd
scas
jnp
incb
or
adc
push
xchg
mov
xchg
dec
push
stos
loop
xorl
fwait
cs
sub
stos
push
mov
mov
aas
lods
inc
mov
adc
aam
into
mov
xchg
mov
ret
lret
lcall
jmp
mov
add
jo
stos
push
pop
mov
call
jge
mov
cs
out
aam
sbb
mov
lahf
scas
mov
mov
das
sahf
xchg
push
sbb
cmp
shl
out
cmpsb
fcmovnu
stos
pop
inc
in
scas
mov
pop
fwait
lods
push
scas
cmp
push
jmp
inc
mov
int3
dec
stos
jmp
aad
push
xchg
push
cmp
mov
dec
ljmp
fdivl
decb
sbb
and
mov
xor
imul
jmp
repnz
hlt
or
lcall
imul
inc
stos
mov
or
in
int3
daa
out
jmp
xchg
adc
les
std
cli
fimull
addr16
push
dec
cmp
imul
cmp
arpl
inc
push
pop
jmp
dec
xor
xor
fidivs
test
out
xchg
push
adc
bound
cwtl
cli
or
sub
js
xor
ret
cmp
retw
inc
mov
jmp
insb
mov
push
lea
not
stos
adc
imul
pop
stos
popf
push
insb
jle
cmpsl
in
stos
add
test
jb
push
and
sub
or
stos
xor
in
jno
cmpl
pusha
stos
pop
mov
int3
inc
int
stos
mov
sbb
mov
sbb
loopne
arpl
hlt
mov
sub
stos
jno
divb
stos
in
shlb
lea
xchg
xor
mov
pop
pop
stos
mov
push
and
and
rclb
jp
iret
xor
divb
dec
xchg
addr16
xor
jmp
jle
jl
enter
out
cltd
fwait
inc
and
fs
clc
dec
sub
scas
neg
dec
adc
mov
das
rorl
repz
jb
add
stos
or
sub
xlat
stos
and
ret
fdivl
and
cmpb
adc
cmp
inc
lret
enter
lcall
xor
sub
cld
mov
ljmp
dec
jp
imul
addl
push
lock
xchg
and
push
in
dec
int3
mov
dec
scas
sbb
pop
andl
dec
mov
out
sahf
stos
sbb
mov
xchg
out
sub
pop
mov
cld
mov
push
pop
ret
stos
shrl
stos
mov
das
add
adc
lret
or
cltd
scas
mov
jbe
inc
jl
outsl
lret
addl
jne
jecxz
jno
mov
pop
cmp
mov
out
in
test
stos
mov
aam
dec
stos
daa
inc
test
push
icebp
loope
sti
and
lds
js
adc
cmp
loopne
stos
int3
jb
sub
xchg
iret
mov
cmpsb
mov
loope
cmc
stos
pop
aaa
jno
gs
bnd
cmp
mov
lock
mov
xor
out
xchg
out
dec
stos
in
add
subl
stos
arpl
cmc
mov
daa
jne
push
and
xchg
cld
sub
stos
popa
repnz
rolb
xchg
testl
fnstenv
push
js
es
pushf
fidivl
or
or
enter
lcall
arpl
stos
subb
pop
adc
in
push
fsubs
and
jns
std
dec
or
daa
dec
jnp
add
xor
push
es
mov
sbb
stos
test
scas
pop
stos
bound
int
stos
daa
loope
pop
push
xor
clc
outsl
inc
cmp
or
flds
test
push
repnz
fwait
pop
lods
insl
mov
into
out
mov
gs
inc
stos
adcl
lret
pop
test
sbbb
btr
les
enter
pop
and
mov
cli
lahf
mov
stos
xchg
pop
adc
cmp
fisttpl
cmp
imul
jbe
push
sarl
stos
and
inc
je
sub
fstps
inc
xlat
jl
lods
stc
mov
push
mov
xor
stos
pop
outsb
nop
pop
repz
and
insl
int3
scas
stos
daa
pop
in
lods
mov
subl
stos
adc
popf
sub
sbb
or
fwait
nop
icebp
ds
pop
lds
pop
mov
inc
and
inc
gs
dec
dec
xor
mov
stos
mov
das
pop
in
ljmp
adc
decl
stos
movl
mov
lds
in
add
fwait
lcall
and
imul
mov
sub
stos
jbe
sub
js
cmp
push
gs
or
xchg
loop
jecxz
repnz
daa
stos
cli
in
xlat
jmp
jl
stos
push
dec
mov
xor
scas
fwait
adc
es
pop
mov
cmp
mov
mov
fwait
andl
push
push
sub
into
fwait
mov
jb
adc
cmp
dec
pop
stos
jbe
mov
push
leave
or
sbb
cmp
sub
out
in
das
faddl
inc
cwtl
sarb
mov
addr16
adc
enter
pusha
imul
push
into
inc
popf
jle
mov
sti
adcb
stos
mov
push
test
fistl
add
fiaddl
fwait
cmp
test
jmp
pop
aas
xor
sbbb
push
sub
or
iret
mov
adc
xchg
add
fsubrl
pop
inc
mov
xor
popf
jmp
aad
mov
sbb
stos
xor
stos
cmp
cmpsb
sub
and
daa
out
add
shrl
fstpl
pop
xor
stos
shll
test
add
cltd
in
call
xchg
or
xor
flds
push
push
xor
stos
cli
jp
ret
insb
mov
stos
andb
stos
sub
repz
stos
push
lret
outsb
xchg
jle
xlat
bts
dec
mov
inc
push
xor
stos
dec
push
ja
scas
cmpsl
sbb
add
fwait
aam
inc
fwait
xor
lods
mov
jge
mov
imul
es
int
dec
js
scas
cld
sahf
lahf
pop
sbb
mov
sbb
pop
aas
jl
fidivs
popf
dec
stos
mov
pop
or
das
fwait
push
stos
cmp
pop
les
test
dec
outsb
xchg
xchg
mov
aam
sar
pushl
mov
nop
pop
mov
mov
test
fbstp
cmp
out
imul
int3
jmp
stos
adc
inc
pop
lahf
dec
push
lea
sbb
add
adc
pop
sti
xor
fldcw
test
cmp
stos
fcomi
in
bound
scas
test
cmp
add
das
adc
jno
mov
mov
stos
aas
inc
mov
jl
inc
push
mov
sub
dec
mov
cmp
mulb
mov
push
push
dec
push
call
xchg
imul
lds
loopne
or
lea
iret
pop
fwait
outsb
stos
fmulp
jnp
loop
cmpl
dec
dec
jp
stos
xchg
fadds
out
imul
xchg
in
pop
stos
xor
mov
in
stos
test
movsl
fs
stos
call
push
notb
int3
mov
sub
pop
lahf
and
push
stos
std
dec
xchg
sbb
lret
imul
imul
aaa
loop
or
xchg
xchg
in
inc
mov
icebp
fistpl
imul
xor
test
push
daa
pusha
in
pop
and
push
add
and
mov
stos
inc
jnp
ds
jne
pushl
pop
outsl
stos
add
aas
je
popa
js
jmp
push
xchg
or
cwtl
jge
inc
xchg
jmp
mov
mov
mov
adc
bound
inc
stos
inc
sub
dec
shl
daa
mov
mov
pop
or
mov
lea
jmp
jle
outsb
inc
shrb
mov
adc
mov
jnp
addr16
fldpi
lahf
dec
stos
xchg
inc
gs
rorl
les
loope
clc
movsb
stos
xchg
hlt
aam
and
mov
arpl
cmp
out
sub
loope
mov
fldcw
cmp
mov
sub
test
sti
add
cmp
and
or
jg
mov
xchg
adc
es
mov
xor
aad
pushf
mov
int3
movsb
lcall
jge
mov
loopne
fwait
subb
bound
sbb
stos
leave
stos
cmp
pusha
repz
and
push
mov
stos
cmovbe
pushl
xchg
mov
cmpb
in
add
imul
push
sub
bound
sahf
dec
stos
inc
stos
xor
and
es
mov
push
mov
stos
notl
aas
adc
xlat
stos
outsb
mov
out
stos
lods
ret
adc
stos
jne
mov
xchg
adc
stos
mov
aas
push
sti
pop
xlat
add
les
mov
stos
fcmove
mov
ss
mov
push
rep
jno
lret
adc
cmp
cli
imul
and
jecxz
mov
mov
lret
push
imul
sbb
cmp
test
xor
movsl
imul
mov
daa
stos
pop
out
int3
ljmp
lret
adc
cmp
dec
inc
push
fists
push
ja
cmp
sub
lock
movsl
inc
repnz
sbb
and
test
mov
jl
orl
bound
mov
or
lods
xchg
stos
les
ja
mov
test
movsb
push
mov
int3
fs
push
jg
pop
and
repnz
and
imul
sub
movsb
fisttpll
pop
xchg
push
sbb
imul
fildll
inc
das
xchg
xor
fsubs
sub
stos
xchg
cmp
std
int3
dec
fldt
jnp
xor
jbe
jge
xor
orb
inc
loope
mov
mov
lock
ljmp
xor
mov
sbb
stos
cli
dec
hlt
iret
xchg
inc
dec
or
push
fwait
outsb
and
stos
test
shlb
inc
jns
jae
mov
push
jge
adc
mov
adc
add
cltd
lods
mov
stos
int
imul
imul
xchg
iret
push
stos
inc
aaa
inc
lods
mov
sub
cmp
fisubrs
arpl
cltd
ds
scas
cli
sbb
jmp
mov
addr16
cmp
stos
push
dec
out
decb
mov
pop
mov
mov
lock
push
jecxz
test
cli
and
frstor
addr16
jne
cmp
outsl
in
cmpl
ja
cmp
popa
push
or
mov
or
mov
xor
stos
push
sub
sbb
daa
imul
dec
adc
stos
xchg
xchg
adc
rorl
mov
push
pop
stos
sub
push
sbb
cmp
push
jnp,pt
and
mov
stos
or
push
ss
out
addl
stos
bound
push
mov
and
push
stos
mov
push
pop
ret
sahf
ds
xlat
pop
jmp
xchg
dec
lods
push
sbbl
xlat
xor
andb
loop
insb
xchg
arpl
popf
mov
cmp
xor
daa
mov
stos
push
pop
dec
into
dec
data16
pop
jo
sbb
ret
stos
daa
xchg
lea
xor
fisttps
test
xchg
cmp
xor
xor
fdivrs
stos
xchg
mov
ret
in
popf
jnp
push
aaa
orb
mov
mov
mov
sar
lods
dec
adc
imul
daa
clc
imul
push
repnz
jge
lods
jae
ss
loopne
xchg
cwtl
dec
jmp
lods
mov
mov
mov
call
cmp
sbb
mov
or
add
lret
jecxz
add
out
test
in
js
aad
jbe
push
xchg
jnp
loope
in
dec
stos
mov
dec
cmp
adc
mov
fdivl
addb
pop
cmc
push
pop
push
sbb
stos
mov
or
mov
jge
inc
shll
mov
movsl
sbb
jo
ja
mov
lret
adc
sub
adc
pushw
in
fcompl
dec
jmp
fisubrs
cli
mov
sbb
ja
jae
scas
jnp
decb
xchg
xor
push
into
sub
or
cltd
stos
dec
adc
rorb
xlat
cmp
lods
lret
inc
imul
divb
mov
sti
push
addr16
icebp
xorl
lock
mov
cs
push
mov
stos
pop
fisubrl
sahf
or
cwtl
push
mov
jmp
mov
xchg
fst
fmull
mov
aaa
std
or
scas
mov
xchg
stos
fimull
rorl
mov
jmp
pop
gs
pop
or
xchg
rorb
rcll
out
stos
imul
jle
fstpl
mov
mov
stos
adc
push
adc
insl
or
lahf
inc
sbb
stos
xlat
jae
shrl
mov
shll
pusha
popa
std
daa
xor
and
stos
mov
scas
inc
scas
mov
ljmp
dec
sub
stos
adc
lret
dec
lods
stos
push
push
xor
pop
gs
nop
and
mov
push
stos
mov
adc
add
loope
dec
cmp
jl
and
stos
cs
pop
xlat
pop
jo
jmp
jns
repz
shrl
test
cmp
imul
subl
out
not
stos
add
lret
adc
jle
mov
aaa
mov
cltd
imul
fwait
gs
pop
mov
scas
les
xchg
pmuludq
xchg
sbb
add
xor
and
shll
dec
shrl
fbstp
cwtl
or
lock
sub
in
sub
mull
inc
stos
fwait
test
xchg
cmp
mov
push
jg
add
xlat
or
imul
mov
stos
jae
mov
cmp
jo
pop
lret
push
push
imul
insl
addr16
fisttps
adc
call
adcb
stc
cmpsl
movsb
mov
fwait
arpl
clc
in
out
or
push
and
mov
cld
scas
inc
incb
fidivrl
hlt
sahf
mov
jno
fiadds
stos
add
or
das
stos
jb
lret
add
fistpl
mov
loopne
stos
or
lea
xchg
stos
fidivrs
cltd
cwtl
insb
push
ja
std
or
mov
mov
jl
test
aam
stos
push
scas
ss
icebp
movsb
pushf
push
sbb
shrb
outsl
xor
pop
aad
mov
jg
loop
adc
ds
stos
pop
insb
pavgw
stc
inc
stos
in
jmp
divb
imul
lods
mov
mov
jns
push
aam
inc
outsl
stos
cmp
lock
pop
sub
xor
ljmp
jge
and
out
stos
movsb
das
pop
stos
cltd
in
fucomip
sub
stc
mov
jb
stos
aad
sub
cltd
test
inc
rcll
gs
add
stos
cmc
shll
stos
fadd
and
stos
loop
pop
sbb
mov
mov
adc
int3
dec
or
popa
aas
or
push
lahf
stc
push
outsb
mov
adc
das
push
mov
test
mov
ret
cs
stos
push
mov
ds
pop
shl
sbb
insl
stos
incb
jmp
mov
push
mov
icebp
dec
dec
xor
mov
mov
sub
xlat
bound
aaa
jecxz
cwtl
stos
adc
stos
mov
data16
movsb
enter
mov
pushf
mov
cmp
imul
test
adc
push
or
xchg
adcb
sub
test
mov
mov
stos
sbb
jae
jmp
jg
and
addr16
dec
mov
fwait
lods
xchg
mov
in
ficoml
push
mov
aad
addr16
push
addb
mov
stos
xchg
imul
cwtl
push
insl
adc
test
icebp
jae
std
adc
cmp
push
push
inc
xchg
ret
lock
stos
pop
mov
mov
lods
outsl
mov
enter
pop
ficompl
inc
jecxz
or
stos
int3
incl
sbb
sti
adc
inc
les
loope
push
mov
lret
aas
popa
fwait
addr16
out
mov
daa
stos
adc
cli
inc
and
push
sbb
enter
mov
and
stos
pusha
nop
mov
mov
pop
stos
test
bound
add
push
out
jmp
jb
mov
nop
cwtl
pop
mov
jns
notb
adc
stos
dec
fldl
cld
ror
xor
mov
addr16
or
mov
push
stos
in
int
cmpb
lods
dec
in
push
mov
mov
xor
xchg
out
loop
jnp
adc
add
sub
pusha
mov
add
sbb
es
movsl
stos
add
pushf
lea
jmp
cld
cmc
push
out
sub
shlb
insl
outsb
jbe
stos
sbb
push
cli
orb
stos
push
xchg
insb
repnz
stc
mov
xchg
jmp
aas
sub
xlat
cmp
or
and
push
daa
jmp
or
xchg
scas
daa
jge
jp
cmc
flds
movsl
stc
jae
add
stos
and
test
xchg
sar
sbb
push
xor
std
fidivl
xchg
push
je
ja
ss
mov
ret
movsb
xchg
jecxz
stos
enter
xchg
repz
clc
stos
add
out
pop
ja
or
insl
push
jne
lods
stos
lods
sub
ja
mov
fwait
ljmp
pop
mov
xchg
mov
push
lds
ds
inc
stos
lret
inc
push
mov
add
jne
mov
xchg
out
jg
lahf
jmp
sub
stos
mov
push
mov
cli
adcb
int
enter
stos
jne
inc
push
pop
inc
jmp
outsb
insb
jecxz
cmp
mov
inc
sbb
cmp
push
xor
addr16
jmp
mov
push
mov
in
nop
adc
les
stos
xor
dec
pop
mov
movsl
movsb
fcoml
cmc
jns
shll
aad
stos
add
sub
daa
xchg
pop
push
lret
in
arpl
mov
lock
ljmp
ret
mov
mov
in
dec
stos
test
sub
fwait
outsb
enter
cmpsl
mov
cs
mov
xor
add
aaa
outsb
imul
out
push
mov
shrl
cmp
stos
imul
or
pop
enter
mov
lahf
pop
pop
mov
cmpsb
cmp
sub
push
stos
fcmovnb
dec
adc
xchg
stos
pop
lock
adc
seta
das
fsubrs
out
add
in
cli
lret
sub
shrb
in
inc
stos
sub
gs
push
jmp
mov
xor
imul
jmp
stos
jle
shr
add
lcall
stos
lahf
bound
mov
push
jp
push
xchg
ret
imul
arpl
leave
stos
xchg
inc
inc
lahf
mov
cmpsb
push
loope
cmp
stos
out
stc
mov
data16
cmp
xchg
cld
subb
add
movsb
stos
push
lods
xor
fistpl
jb
push
imulb
jge
jb
fimuls
stos
pop
add
test
daa
scas
in
xor
repnz
pop
mov
stos
ret
popf
ljmp
cmp
jo
lods
or
inc
cmpsl
add
daa
and
dec
scas
andl
sbb
stos
clc
sbb
cld
push
stos
cmpsb
dec
mov
addb
test
fs
mov
inc
mov
mov
cmp
pop
jmp
jg
push
pushf
mov
or
or
loop
fistl
jg
pop
in
push
and
xchg
ss
stos
sub
ds
idivl
mov
xchg
jp
add
mov
dec
xchg
mov
cmc
pop
xorb
push
stc
stos
sti
add
addl
lock
std
sbbl
loopne
mov
add
pop
or
xchg
mov
imul
add
outsl
jl
stos
mov
sub
mov
xor
sti
stos
jns
inc
fstl
sar
sub
or
mov
cmp
stos
cwtl
test
mov
mov
mov
stos
jo
push
scas
out
enter
cmp
stos
aad
popf
das
in
xor
and
xchg
adc
popa
stos
leave
and
ret
arpl
pop
sub
inc
out
cld
les
and
xchg
xchg
loop
cmp
sbb
rorl
fildl
lock
lret
mov
and
rdpmc
sub
ds
stos
sub
mov
jl
pop
mov
xchg
push
stos
and
sahf
add
jl
dec
aad
ljmp
adc
std
out
stos
jno
push
int3
out
outsl
stos
test
mov
mov
inc
push
cmp
xor
sub
test
ret
pop
stos
xchg
push
and
decb
sub
fs
fldcw
push
push
mov
mov
add
lret
leave
push
test
popf
andl
jge
lcall
into
cltd
aad
mov
pop
inc
data16
fldcw
sbb
outsl
stos
sub
cld
pop
sbb
dec
jmp
lcall
cld
aad
pop
mov
or
stos
jge
scas
arpl
popf
jecxz
push
adc
stos
or
and
bound
sub
push
fwait
lods
xchg
mov
fisttps
sbb
and
ja
jns
push
jmp
adc
in
xchg
je
or
mov
test
in
pop
decb
add
ljmp
mov
clc
stos
and
addr16
test
test
stos
pop
add
aaa
test
mov
mov
sub
jmp
pop
fidivs
in
push
inc
adc
loopne
lahf
push
sahf
dec
stos
or
lret
cli
or
mov
or
xchg
push
dec
push
in
pop
repnz
stc
imulb
rcrl
add
and
test
stos
mov
jl
in
stos
test
jno
mov
mov
sub
test
bound
or
daa
inc
sub
push
mov
stos
out
mov
mov
jae
nop
orl
test
mov
sub
push
lret
stos
aas
mov
shll
adc
jle
stos
roll
xchg
or
stos
inc
jg
xchg
sti
lret
dec
push
mul
mov
into
add
adcb
stos
or
sub
inc
jnp
pop
cmp
stos
inc
inc
lcall
mov
sti
jae
inc
xchg
push
pop
sbb
push
xchg
push
add
popa
adc
mov
jnp
aas
lods
stos
dec
xor
bound
movsb
xchg
stos
sbb
xchg
mov
mov
jns,pt
fwait
sub
repnz
pop
jb
fmuls
outsl
hlt
jae
sbb
scas
stos
cmc
jne
lcall
addr16
inc
out
aam
xchg
jnp
addl
sub
mov
jbe
push
popa
stos
jle
fsubl
cmp
imul
cmp
dec
jecxz
stos
movsl
pop
out
mov
inc
cmp
add
jge
sub
std
adc
out
les
add
xchg
cmp
mov
sbb
int
adc
imul
xchg
xor
and
mov
pop
ret
cld
es
sbb
stos
push
pop
mov
cs
sbb
sbb
adc
and
inc
adc
adc
stos
push
push
shr
dec
leave
imul
outsl
adc
aaa
stos
jne
mov
or
hlt
fs
cmp
addb
push
jge
dec
inc
stos
enter
add
sub
and
dec
aad
imul
push
cmp
stos
mov
or
jle
cwtl
lret
enter
cmc
jbe
push
mov
add
mov
inc
push
je
cmp
push
fwait
jge
stos
mov
jno
les
ljmp
sarl
es
inc
in
jb
stos
push
sbb
lcall
xchg
xlat
into
into
mov
inc
cltd
ljmp
test
je
hlt
xchg
rclb
stos
mov
int3
addr16
sbb
stos
mov
mov
sub
pop
adc
aas
xchg
or
push
push
insb
sub
adc
sahf
mov
mov
stos
mov
add
xor
pop
sbb
fcomi
mov
stos
push
movb
inc
cmp
inc
push
shll
mov
in
adc
iret
or
fwait
sbb
dec
sub
and
and
jmp
insb
cltd
xchg
cmpl
cmp
adc
jge
cltd
and
fsub
loop
fwait
outsl
mov
and
inc
lret
jb
adc
ds
repz
pop
adc
imul
stos
test
jecxz
push
cli
shll
shlb
sbb
aam
movsb
stos
pop
dec
out
in
dec
addl
jg
rcrb
shrl
xchg
cmc
mov
and
pop
and
mov
ret
push
std
sarb
jle
test
in
xor
mov
adc
aaa
sti
repnz
and
sub
decb
stos
jbe
data16
lcall
fucomi
mov
bound
sub
stos
dec
jae
es
lret
push
dec
jmp
icebp
clc
fwait
mov
stos
stos
xor
imul
pusha
cs
xchg
cltd
repz
lret
dec
stos
jnp
sub
insb
repz
stos
or
aaa
ret
stos
push
add
or
xor
dec
mov
aad
stos
cmp
adc
mov
dec
lds
stos
enter
dec
test
push
inc
sub
mov
mov
in
repz
push
sub
inc
pop
push
xlat
les
stos
movsl
daa
or
mov
xchg
and
outsl
push
stos
sbb
sub
stos
test
std
adc
push
daa
mov
xchg
nop
mov
mov
lea
mov
cwtl
jns
push
scas
mov
xchg
adc
stos
mov
pop
sbbb
adc
mov
and
mov
add
rol
fsts
mov
in
mov
sub
push
pop
movsl
jmp
shll
test
imul
cmpsb
mov
stos
cmp
jmp
aam
lcall
inc
xchg
mov
rcl
sub
stos
xchg
mov
stos
inc
stos
loopne
aas
xor
jg
pop
in
mov
inc
pop
stos
fwait
data16
mov
jmp
stos
unpcklps
loope
jbe
rcrb
rcll
add
jle
stos
lret
fistps
cmp
pop
cltd
cwtl
mov
and
movsl
add
sub
stos
inc
pop
and
adcl
rol
jge
lahf
cmp
push
and
sbb
xchg
xor
push
leave
mov
xchg
arpl
cld
lret
imul
and
xchg
mov
mov
sbb
test
stos
cmp
scas
and
cwtl
pop
jmp
mov
shlb
test
movsb
dec
movsb
fs
pop
lods
repnz
xchg
jno
stos
loop
loope
jp
shr
hlt
fisubrs
pop
jmp
cmp
stc
or
inc
mov
push
gs
xchg
jbe
xchg
pop
jecxz
mov
bound
movaps
xor
mov
int3
xchg
das
jl
mov
aaa
stos
mov
mov
jmp
es
imul
cmp
and
jb
or
inc
push
and
imul
mov
das
outsl
bound
icebp
shlb
stos
sub
xchg
sbb
mov
pop
lds
add
out
dec
in
cmp
lea
cmpsl
jb
stos
adc
aas
scas
mov
data16
dec
xchg
repz
stos
jnp
sbb
dec
push
loope
stos
xchg
jo
jge
push
hlt
mov
addr16
cmp
push
stos
lock
pop
or
or
std
push
xchg
imul
mov
pop
daa
xor
stos
fldt
popa
push
and
adc
xchg
movsb
cwtl
filds
inc
sbb
add
mov
and
xor
jno
mul
mov
scas
lods
fldt
subb
ficompl
hlt
sbb
stos
dec
sahf
cmp
inc
ret
xor
stos
adc
out
pop
pop
stc
adc
in
adc
inc
stos
mov
push
jl
fwait
int
shrb
stos
int3
and
and
stos
movsb
bound
sbb
stos
xor
dec
aas
lret
movlps
int
fcmovnu
xor
jne
push
xor
or
jae
mov
push
sub
xor
jmp
mov
testl
into
mov
and
xor
dec
or
and
sub
cmp
xchg
mov
ds
cltd
aaa
mov
movsl
mov
loope
out
jmp
xchg
subl
stos
roll
push
aad
mov
je
jae
add
cmpsb
in
dec
aaa
stos
inc
xchg
das
stos
jg
icebp
mov
push
mov
int
and
mov
jecxz
ja
rcrb
push
jnp
hlt
xor
stos
in
adc
push
stos
dec
cs
sbb
sub
stos
out
movsl
test
and
fldpi
inc
insl
jne
push
ffree
xchg
push
enter
shrl
push
in
pop
sub
sub
and
cmpsl
xchg
push
out
xchg
jl
mov
stos
fucomp
sbb
stos
jb
pop
ss
and
stos
mov
jnp
jmp
jmp
cmp
mov
pop
shrb
fmuls
ds
icebp
imul
stos
test
in
pop
jl
out
jge
pushf
adc
mov
lret
mov
or
hlt
es
stos
pushf
mov
lock
mov
jbe
adc
mov
cmp
dec
int
fbld
xchg
adc
mov
ret
clc
insb
scas
shrd
sbb
and
test
sub
mov
mov
pusha
push
stos
loope
push
ds
cmp
cmc
sbb
pop
bts
out
outsl
mov
inc
jge
int
mov
stos
data16
mov
stos
sub
xor
in
in
xor
fstpl
arpl
mov
jne
iret
std
push
insb
mov
ret
push
xor
fs
gs
mov
lods
imul
sti
sarl
push
pop
popf
and
jmp
stos
pop
leave
mov
popf
push
stos
bndldx
push
rclb
testb
aas
mov
stos
ds
dec
sub
push
stos
mov
fwait
loope
in
mov
fbstp
testl
cmc
and
stos
lods
scas
and
pop
stos
test
xchg
shrl
sbb
scas
iret
dec
nop
mov
in
xchg
les
lods
imulb
fs
dec
stos
loopnew
js
sub
lock
scas
jnp
xchg
enter
stos
sbb
xor
adc
dec
loopne
hlt
lcall
movsl
lcall
or
les
jle
mov
sub
ljmp
mov
ja
fbld
mov
scas
stos
mov
rol
dec
push
jmp
mov
or
gs
stos
jo
sahf
adc
imul
pop
mov
and
xchg
mov
stos
andl
mov
xor
fsubl
cmp
inc
daa
fstpt
mov
mov
jno
pop
stos
cmp
les
mov
stos
sti
movsb
test
in
xchg
mov
mov
decl
mov
sbb
enter
stos
roll
js
stos
leave
mov
test
xchg
stos
mov
fbstp
sub
ja
repz
sti
mov
nop
jae
jnp
xchg
add
loop
mov
mov
lods
pop
rclb
add
xor
add
leave
mov
mov
call
inc
shll
mov
push
aam
stos
jb
fwait
inc
cwtl
xor
pop
daa
outsb
arpl
pop
mov
in
gs
and
add
test
fnsave
imul
stos
fsubs
mov
adc
fwait
jnp
and
jmp
sub
iret
and
push
insb
add
sti
pop
scas
sub
flds
mov
jb
or
in
inc
xor
cmp
jnp
shll
dec
xchg
push
pushw
stos
and
xor
cmpl
dec
popf
adc
rcrl
cmp
imul
xchg
and
rorb
aad
mov
xor
fstl
insb
inc
and
mov
lcall
stc
xlat
daa
and
jle
or
sub
and
stos
dec
dec
aas
mov
and
int3
jg
cmp
lods
stos
or
xchg
lods
inc
xor
cltd
or
stos
in
mov
sub
dec
and
into
adc
push
fcoms
ljmp
or
lahf
out
stos
loope
out
jae
mov
sbb
sar
mov
std
jb
nop
pop
stos
faddp
adc
pusha
push
push
or
inc
ds
stos
dec
inc
test
subl
out
out
mov
sbb
mov
mov
or
loop
or
cmpsl
xchg
cltd
xor
adc
stos
push
fneni(8087
or
and
lahf
mov
mov
fwait
xchg
add
dec
stos
jo
fwait
lea
dec
stos
das
inc
cmc
lock
mov
mov
sub
subb
seto
clc
push
pop
dec
xchg
jae
pop
jmp
stos
roll
jne
xchg
xlat
xorb
cltd
outsl
cwtl
es
pop
sub
xor
test
mov
out
mov
or
fwait
mov
xor
sbb
and
push
dec
mov
and
adc
pushl
out
inc
cwtl
lret
mov
out
cmp
sub
xchg
addr16
fbld
out
lods
push
lods
cmp
cmp
test
stos
out
in
sub
sahf
std
cmp
stos
sbb
scas
ret
cwtl
mov
test
loope
out
stos
pop
test
jge
in
lods
pop
scas
and
jno
add
fwait
and
mov
lods
and
sbb
push
shrl
push
mov
stos
sub
xchg
jl
mov
ljmp
int3
es
and
lods
orb
stos
or
cmp
movsb
jae
jo
arpl
cmove
in
shrl
add
rorl
movsb
stos
mov
inc
xchg
lods
daa
jmp
int3
adc
cs
stos
mov
mov
int
sub
jae
ja
stos
insb
mov
push
add
mov
mov
hlt
mov
test
xchg
push
imul
fwait
pop
dec
out
adc
and
popa
imul
lahf
addr16
in
ljmp
mov
push
test
stos
int3
insl
mov
scas
sbb
push
je
stos
jnp
add
dec
dec
leave
imul
fimuls
shrl
sarl
stos
dec
push
xchg
jo
adc
lahf
stos
in
xorb
and
lret
nop
xchg
xlat
cltd
push
add
pop
ljmp
repnz
stos
das
sbbb
stos
mov
popl
cmp
lret
stos
flds
xchg
stos
lods
pop
push
arpl
sti
xchg
cs
cld
xchg
js
out
xchg
sub
lds
mov
es
xor
test
xchg
cmpsb
aad
xor
and
dec
stos
jne
pop
loop
int
stos
cltd
sub
pop
fdivl
in
add
addr16
sbb
rolb
es
or
mov
jmp
ds
xor
cwtl
out
stos
into
pop
mov
shrb
dec
fsubs
jmp
cmp
dec
jne
pop
scas
sbb
adc
xchg
fs
push
stos
aad
in
push
or
scas
mov
in
mov
stos
pop
push
fstp
push
push
mov
push
push
cmpsl
sti
mov
xchg
loopne
mov
stos
add
stos
inc
sbb
xchg
icebp
es
daa
lret
test
adc
cmc
stos
inc
fdivrl
inc
inc
hlt
lea
push
cltd
jnp
pushf
xchg
out
cmp
inc
mov
lahf
mov
stos
inc
push
push
test
imul
scas
lods
and
lods
cltd
jo
mov
pop
pop
or
mov
pushf
inc
imul
outsl
jb
cmp
stc
stos
xor
push
adc
lea
add
jl
mov
lock
mov
das
bts
xchg
cmp
mov
xlat
cmp
mov
push
cmp
data16
pop
rcll
imul
sarl
notl
sbb
jg
push
mov
stos
frstor
shlb
lahf
aad
stc
mov
daa
dec
jmp
jp
lds
ficompl
xchg
in
pop
popf
fisttpl
imul
sbb
out
stos
je
jae
mov
bound
sti
mov
clc
jne
aad
js
push
fcoml
lret
fistpl
stos
add
aaa
cli
jne
addr16
mov
inc
adc
jl
enter
outsl
stos
loope
aas
mov
and
mov
imul
mov
push
jae,pn
stos
dec
xorb
mov
stos
into
popa
pop
jb
xlat
enter
inc
aaa
jne
ret
scas
mov
jle
jae
and
mov
lahf
sbb
stos
stos
icebp
mov
xor
pop
stc
push
mov
dec
cmpsb
cmp
xchg
stos
adc
xor
stc
sbb
mov
stos
mov
sahf
insb
dec
stos
dec
int3
aas
loop
outsl
mov
mov
js
pop
test
add
stos
es
stos
mov
out
jnp
pop
lea
push
fsubrs
in
stc
lds
fwait
data16
lahf
xchg
adcl
sbbl
mov
mov
inc
loopne
lahf
jp
push
cmp
dec
sbb
push
add
xchg
inc
mov
rcrl
push
addr16
mov
imulb
daa
shlb
push
enter
lret
cmpsb
xor
mov
imul
dec
mov
stos
xor
xlat
loop
ds
fwait
ds
addr16
pushf
jl
bts
cld
rorb
pop
loop
bound
or
xorl
fdivrs
pushf
stos
cmpsb
repz
or
stos
mov
psubusb
iret
adc
gs
and
mov
lret
sarb
fwait
jne
push
dec
sbb
repnz
xchg
push
outsl
pop
jle
mov
idivl
aam
mov
cmp
das
push
arpl
cmp
jne
mov
stos
jle
cltd
repz
or
icebp
push
push
cmp
cmpsb
push
cmp
mov
test
pusha
xor
jmp
js
shll
mov
mov
mov
nop
pop
push
adc
jbe
pusha
push
mov
into
xchg
scas
stos
push
daa
or
cli
das
xchg
stos
cmc
rorb
xor
sbb
leave
mov
pop
test
insb
out
xorl
add
stos
popf
sahf
movsl
adc
push
cwtl
dec
cld
cmpsb
lds
add
push
jge
jb
ds
notl
jne
stos
mov
jno
dec
cmpsl
jae
lock
xchg
or
loope
in
stos
cmp
mov
stos
sbb
push
lret
inc
stos
nop
adc
jb
cmpsb
mov
mov
das
out
pop
sbb
daa
ss
cld
mov
aam
stos
aad
inc
ret
insl
sbb
add
pop
xor
subl
ja
sub
cmp
cs
lret
pop
imulb
xchg
je
stos
aam
movsb
test
scas
inc
enter
inc
out
ret
inc
rcrl
dec
jne
xchg
stos
das
call
cmpsb
iret
adc
hlt
lods
inc
sub
xorl
and
fs
inc
push
add
je
add
xchg
pop
mov
stos
dec
aaa
and
pushf
in
imul
sbb
test
insb
push
fdiv
adc
stos
mov
aam
sub
clc
stos
xchg
cmp
dec
jle
insl
rcll
jp
fisubs
fildl
rolb
adc
adc
negl
adc
gs
pop
outsl
fwait
daa
cmp
cs
lcall
push
lods
xlat
out
ljmp
stos
dec
shll
adc
sbb
inc
xchg
stos
inc
sbb
add
jbe
jmp
fadd
mov
push
cwtl
jl
mov
adc
enter
stos
xor
and
lahf
adc
movsl
mov
or
adc
ja
pop
stos
jmp
lock
adc
testl
les
pop
mov
xchg
dec
push
pusha
cli
out
fwait
push
aas
stos
lahf
aaa
add
or
mov
dec
mov
loop
mov
daa
repnz
stos
icebp
push
sbb
ds
xlat
push
xor
decb
sahf
xchg
sub
jne
imul
cmpsl
mov
xchg
or
or
out
dec
test
adc
and
lds
and
stos
xchg
dec
enter
inc
jmp
inc
and
push
xor
cmc
mov
mov
mov
dec
stos
fisubl
sub
pop
stos
fdivrl
pop
xlat
pop
shrl
ljmp
stos
xchg
inc
and
add
jo
xlat
daa
pop
stos
sti
ja
cmpsl
lcall
fstps
fstpt
mov
idivb
inc
into
stos
mov
pop
stos
enter
mov
add
shll
ds
stos
repnz
es
stos
pusha
lahf
fsubs
sbb
les
xor
stc
out
pop
fistl
xchg
inc
cld
adc
xlat
ret
inc
outsb
in
cmp
ds
in
lahf
stos
roll
imul
pop
fcomps
into
push
mov
and
lahf
cli
lea
aad
mov
push
or
outsb
stos
in
faddl
mov
add
and
mov
scas
cmpl
xchg
jb
stos
sbb
fs
pop
sbbl
lods
adc
mov
mov
cmpsb
dec
dec
outsl
hlt
sti
imul
dec
push
xchg
fistl
nop
xchg
rclb
pop
dec
addl
or
stos
mov
rclb
or
jmp
stos
lods
xorl
xor
inc
aaa
jb
inc
push
jae
int
call
dec
test
jle
mov
jmp
xchg
mov
pushf
fwait
add
sub
in
loope
push
xlat
inc
clc
mov
sub
and
cmp
push
mov
outsb
adc
imul
xchg
mov
adc
mov
mov
insb
pop
incb
ljmp
arpl
loope
iret
cmc
sub
sarb
mov
stos
dec
sbb
mov
loopne
mov
fwait
shr
rclb
stos
arpl
mov
orb
sub
stos
adc
test
stos
incb
or
stos
ret
mov
mov
neg
sbb
stos
das
and
cmp
in
outsb
mov
shrl
fwait
lahf
jno
movsl
cmpsb
inc
imul
mov
stos
outsb
arpl
icebp
jge
fs
sub
and
inc
les
clc
into
mov
das
push
iret
add
call
data16
add
out
lods
mov
pop
xor
fsincos
jb
cmp
sub
cmp
inc
stos
pandn
mov
stos
or
cmp
les
bound
cld
push
dec
stos
in
mov
mov
stos
pop
aad
add
jnp
cmpsb
sti
mov
popf
and
jmp
xchg
flds
mov
push
je
jmp
ds
out
or
outsl
jbe
or
imul
imul
imul
stos
jno
lret
mov
stos
ljmp
mov
fcmovnb
dec
popa
loop
aam
inc
xor
and
adc
lods
mov
mov
gs
sub
inc
stos
lods
ljmp
stos
loopne
loope
filds
cli
stos
test
push
fsubrl
pop
xchg
ss
cmc
mov
out
out
mov
lret
ja
stos
and
adc
jmp
lock
sar
scas
lods
in
loopne
push
sub
xor
fs
stos
popf
and
enter
pop
stos
dec
lahf
insl
xlat
lods
inc
sarb
call
jo
call
fwait
sbb
mov
adc
pop
stos
call
mov
lret
xor
pop
mov
xchg
test
xchg
scas
stos
sub
andl
add
cmp
in
mov
pop
adc
pop
adc
aad
inc
push
stos
dec
jae
jno
neg
cmp
enter
mov
jnp
ljmp
test
lret
xor
or
and
jns
xor
or
xor
mov
insl
popf
stos
mov
lds
test
sbb
sub
ret
mov
js
mov
stos
mov
xchg
icebp
pop
movsb
stos
int
in
nop
pop
mov
cmp
sub
cltd
insl
cmc
rcll
mov
popf
mov
repz
inc
adc
lahf
mov
ret
cmp
stos
jo
pop
pushaw
lcall
sbb
movsl
xor
stos
inc
out
cltd
mov
lret
cwtl
imulb
arpl
stos
push
or
int
cltd
bound
sub
sub
adc
xchg
std
stos
ds
ret
cmpsb
or
stos
mov
sub
fsubrl
stos
xlat
pop
push
jle
lock
mov
bound
stos
xchg
mov
inc
cs
jmp
cmp
mov
push
sbb
cltd
test
dec
shrb
cmpsb
cmp
loopne
push
repz
clc
hlt
aaa
stos
gs
dec
mov
sbb
fxch
out
mov
jge
sbb
sub
cmp
stos
mov
mov
mov
push
outsl
lods
or
pop
dec
stos
aad
jnp
or
cli
aaa
into
inc
mov
jmp
mov
pusha
push
cmp
fldcw
imul
repnz
test
out
hlt
mov
stos
insl
pusha
sub
addb
and
in
mov
dec
jecxz
pop
stos
xor
xlat
or
sbb
test
push
jns
stos
and
addr16
cmp
mov
call
push
das
sub
xchg
fwait
or
arpl
sub
fdivs
ss
dec
mov
mov
jp
xchg
pushf
scas
mov
push
mov
jg
mov
mov
dec
fwait
gs
orl
jge
aaa
mov
nop
jle
add
xlat
jb
movsb
pop
adc
fs
sbb
or
in
ljmp
inc
push
mov
dec
lret
push
add
pop
cmpsl
sub
lret
out
dec
rclb
jnp
jo
add
mov
xchg
sub
mov
mov
xchg
stos
jmp
dec
and
stos
std
pop
fiadds
xor
push
stos
data16
ja
lock
fnsave
dec
jo
divb
stos
mov
lds
lcall
pushf
ja
lods
leave
stos
push
cmp
stos
add
or
fwait
jnp
and
cmc
lahf
test
pop
aas
jg
adc
mov
and
xchg
test
das
mov
stc
xor
ret
scas
cmp
repnz
sbb
in
sbb
sub
insl
stos
mov
push
shrl
stos
pop
bound
dec
enter
imul
jnp
rcrl
xor
daa
stos
pop
std
add
and
or
lds
xor
pop
mov
add
rclb
stos
mov
push
aam
sub
xchg
push
test
shrl
insb
jne
jp
scas
and
pop
stos
and
and
mov
push
gs
push
lcall
es
adc
pop
aam
sub
iret
inc
scas
push
fidivrs
stos
inc
xchg
and
pushf
cli
mov
das
jg
aaa
imul
lea
pop
xchg
dec
xchg
leave
into
sahf
stos
mov
mov
scas
out
mov
and
push
cmp
ret
stos
pop
push
cmpsb
stos
sarl
fists
mov
jmp
das
stos
push
jno
or
xchg
shrl
out
jns
test
jmp
jp
xchg
pop
in
iret
int3
xchg
jg
sub
scas
imul
mov
or
mov
sahf
lcall
test
aam
loopne
push
rcrb
stos
jo
mov
or
movsb
popf
mov
std
movsl
iret
daa
mov
jmp
stos
scas
pop
mov
sar
xor
fsubrs
cmc
stos
mov
ss
stos
add
pop
push
xchg
jbe
stos
push
sti
stc
push
jl
jge
out
or
stos
pop
mov
or
cmp
cmpsb
es
lretw
stos
leave
test
out
cmp
stos
cmp
jns
sbb
mov
pop
stos
add
xchg
cmp
add
enter
in
sub
mov
sub
icebp
dec
sub
push
add
mov
push
cltd
imul
mov
push
push
lds
stc
lret
push
mov
dec
out
inc
pop
xor
addr16
xor
xchg
push
stos
pusha
enter
add
mov
adc
test
sub
inc
lods
scas
stos
dec
mov
mov
iret
inc
xchg
jb
mov
shrl
loope
gs
xor
mov
stos
mov
ss
lret
stos
jmp
xor
pop
adc
in
dec
nop
xor
aam
int3
test
inc
mov
cld
addr16
daa
cmpsb
mov
pop
test
movsl
aam
cmp
pop
inc
stos
jb
mov
mov
ja
mov
stos
jb
jnp
in
pop
push
stos
fwait
and
dec
out
xor
mulb
dec
xchg
je
lods
rorl
lods
mov
shrb
jmp
sbb
addr16
push
xor
aaa
ss
sub
xor
les
cmp
jne
inc
mov
rcrl
fcom
imul
xchg
cwtl
fists
iret
fisubrs
or
push
cmpsl
popf
inc
sub
pop
jbe
xor
in
ret
xchg
lods
cli
sbb
adc
out
insl
jecxz
inc
aaa
stos
fisubs
sub
movsb
loop
outsl
push
stos
mov
sbb
popa
imul
mov
ds
sub
xchg
and
ss
pop
stos
lds
scas
test
leave
sbb
mov
inc
stos
imulb
js
cmp
ds
adc
push
mov
dec
nop
stos
iret
imul
and
sub
dec
hlt
mov
sub
repz
mov
mov
or
mov
ret
dec
sbb
push
mov
jge
push
sbb
pop
and
sahf
xchg
cmp
xchg
sbb
call
mov
imul
adc
rorb
pusha
data16
cmp
or
in
dec
xor
lahf
outsb
jmp
mov
xchg
stc
decl
sbb
bound
dec
cmp
jg
adc
sahf
xchg
out
out
pop
xchg
mov
aas
dec
push
inc
stos
int3
lret
pop
cmp
in
xor
stos
push
inc
lock
jl
fwait
dec
aad
std
and
jl
out
dec
repz
mov
mov
mov
lret
stos
push
xchg
push
outsb
loopne
jmp
stos
cmp
shll
inc
jb
sub
mov
mov
sar
mov
sub
xchg
lcall
divb
enter
sub
cs
dec
xchg
mov
mov
mov
sbb
scas
or
decb
jp
jns
inc
lcall
stos
mov
or
xor
jle
inc
or
lret
test
push
push
loope
push
ret
lahf
sub
pop
mov
scas
arpl
out
scas
fbld
daa
lahf
add
xchg
or
pop
out
iret
pop
sub
pushf
imul
mov
loopne
pop
add
js
popf
inc
stos
negl
out
cmp
sub
sub
lock
int3
fcmovne
lret
subl
stos
or
icebp
outsl
into
lods
outsb
daa
sub
sar
daa
ljmp
add
lcall
xchg
out
or
imul
loopne
mov
mov
pop
fs
push
mov
xor
lods
pop
stos
pop
mov
jae
pop
pop
jmp
mov
in
mov
add
daa
pop
lahf
fwait
out
mov
or
mov
push
ret
sub
das
adc
jg
adcb
inc
out
push
js
xchg
or
arpl
int
aam
dec
stos
subb
scas
push
stos
push
pusha
bound
mov
fsubrl
ret
stos
xchg
mov
testb
inc
test
jmp
in
stos
ficomps
cli
mulb
rol
enter
jmp
stos
loope
in
pop
dec
jns
stos
inc
orl
movsl
shlb
mov
loope
jg
mov
js
adc
loop
sbb
repz
jns
imul
pop
sbb
mov
jmp
cltd
xchg
in
push
in
push
lock
sahf
push
aaa
hlt
inc
stos
sbb
jmp
sub
pop
push
push
stos
pop
shrl
das
mov
inc
xchg
pop
mov
call
out
insl
cmc
sbb
in
mov
iret
stos
into
pop
xchg
xor
mov
imul
andl
inc
inc
outsb
push
inc
stos
test
xchg
sbb
sti
stos
popf
dec
sub
dec
xchg
movsl
jge
clc
ret
in
out
int
out
daa
xchg
inc
ds
push
jge
scas
sub
arpl
and
call
outsb
test
xchg
aaa
mov
gs
cmp
add
and
pop
pop
and
cmp
aaa
scas
sub
xorb
das
rorl
std
mull
rep
ret
pop
lods
and
lret
ror
or
or
stos
rorl
inc
cld
xchg
push
push
stos
jb
pop
adc
add
stos
ss
iret
sub
out
sub
push
xchg
mov
fisubs
adc
test
xor
jl
xchg
loop
stos
lods
add
sub
pop
cmpsl
ret
stos
out
mov
dec
add
xchg
data16
xchg
pop
xor
mov
shll
jge
and
fwait
push
test
je
arpl
int3
mov
mov
adc
mov
cmp
mov
in
add
aam
xchg
gs
sub
arpl
enter
fildl
stos
fs
jb
add
out
stos
mov
cmpsb
inc
jle
fcomi
or
shrl
sbb
cmpsl
inc
out
mov
les
pushf
stos
divl
mov
stos
and
gs
popf
adc
stos
mov
dec
inc
jnp
jne
sub
movsb
stos
and
mov
mov
int
fadds
adc
js
enter
cltd
in
or
daa
or
icebp
pop
fwait
sbb
inc
cmp
aam
xorb
dec
adc
loope
push
cmc
imul
jp
imul
mov
shrb
stos
cli
sub
pop
inc
push
fwait
stos
jg
roll
jmp
popa
mov
cltd
icebp
xchg
les
cmp
mov
rcr
cmp
daa
add
mov
mov
negl
mov
inc
in
or
and
xor
push
ret
jmp
push
pop
in
adc
mov
sarl
push
dec
movsb
arpl
adc
stos
pop
add
xor
in
inc
inc
mov
in
push
shrb
or
mov
orb
mov
mov
mov
into
stos
xchg
outsl
xor
add
xor
sub
movsb
fucomip
or
dec
out
xchg
xchg
adc
stos
adc
jmp
mov
cmp
mov
divb
arpl
js
rorl
xchg
in
data16
push
stos
push
insl
mov
movd
imul
test
xchg
outsb
dec
adc
testb
ret
inc
pop
int
xchg
int
daa
push
je
test
inc
stos
fsubr
jecxz
into
dec
fcmovnbe
scas
test
stos
out
lcall
mov
imul
jnp
fldt
aad
in
push
stos
std
mov
stos
ret
in
adc
mov
gs
cld
loope
into
add
dec
ljmp
or
adc
in
mov
mov
jmp
scas
jne
mov
sub
stos
icebp
sub
outsl
test
adc
jge
cltd
andl
mov
cmp
fcomps
lahf
xchg
jae
jnp
hlt
nop
fwait
lret
loop
or
inc
mov
cmp
push
imul
stos
sti
stos
rcll
inc
sbb
mov
lea
push
cwtl
pusha
or
xchg
cmc
pop
pop
sahf
push
mov
cli
push
stos
out
sbb
lret
add
and
inc
movsl
sub
jns
xchg
mov
inc
mov
adc
data16
inc
jbe
stos
rcr
cli
mov
shlb
add
inc
gs
stos
out
mov
rol
stos
mov
pop
push
adc
pop
ss
imul
mov
and
push
test
ljmp
test
into
stos
jne
xor
jmp
xor
push
mov
cmp
mov
pop
les
stos
clc
hlt
jne
jb
dec
push
jmp
xchg
rorl
imul
and
cmp
stc
jmp
subl
jns
mov
das
sbb
inc
push
aam
cmp
sub
hlt
clc
sub
mov
stos
cmp
xlat
mov
in
jo
loopne
mov
jecxz
es
jnp
jbe
movsb
faddl
cltd
stos
push
mov
add
pop
or
xchg
fwait
jp
stos
mov
cli
jo
stos
insb
push
arpl
stos
in
xor
shlb
andl
cld
int
fmulp
repnz
add
jne
orb
mov
stos
int
cmp
shll
stos
or
bound
stos
into
lock
push
aaa
mov
imul
iret
in
mov
lods
xor
inc
stos
rcl
cmpsl
into
daa
lcall
inc
aad
mov
or
cmpsl
mov
imul
aam
jle
jmp
xchg
pushf
std
stos
push
push
cmc
jnp
or
lret
orb
jmp
bound
stc
stos
fisubl
push
insb
pop
jge
add
js
or
das
mov
adc
in
dec
push
mov
xchg
test
iret
jmp
mov
add
xchg
repz
mov
adc
nop
jp
jmp
pop
pop
mov
int3
pop
xchg
sti
loop
sbbb
pop
cli
xor
stos
mov
and
test
inc
test
sbb
les
stos
ds
mov
inc
mov
mov
sbb
shrb
outsl
cmp
stos
clc
mov
popf
ds
in
out
push
fwait
fs
les
mov
pushf
rorl
and
cmpb
push
into
jno
add
adc
mov
out
sbb
imul
mov
stos
jnp
push
or
mov
sub
je
mov
push
jnp
jne
stc
dec
cmpsb
dec
shrl
add
sub
dec
loope
mov
jecxz
int3
stos
cmp
stos
jno
add
sbb
pop
sbbb
stos
nop
test
lahf
mov
cs
bound
into
mov
imul
stos
cmp
pop
imulb
push
and
push
mov
lods
or
cmp
sets
mov
dec
pop
js
push
insl
fucom
enter
aam
xor
stos
mulb
mov
pop
lret
stos
nop
pusha
push
clc
pop
xchg
jge
mov
outsb
jmp
jg
sbb
or
stos
mov
push
dec
pop
das
and
push
push
mov
mov
fwait
mov
fisttps
and
pusha
jl
loope
dec
stos
xor
inc
stos
mov
jbe
ss
cmp
push
mov
xlat
outsl
push
insb
sahf
aas
fsubl
cltd
mov
shlb
lods
lret
inc
movsb
shrl
arpl
aaa
xlat
call
daa
fwait
aas
jo
mov
cmpsb
xor
pusha
pop
add
xchg
scas
xchg
jmp
call
cwtl
xor
cmp
jae
test
or
pop
mov
ret
mov
and
insb
stos
in
push
xchg
pop
hlt
or
stos
push
jp
mov
adc
sbb
mov
outsb
sub
test
mov
cmp
je
sbb
add
push
sub
jmp
or
stos
sahf
and
lea
test
stos
or
lds
mov
mov
repz
les
add
mov
mov
lock
bound
push
shrb
sub
jecxz
aad
xchg
cli
hlt
arpl
imul
andb
in
mov
aad
sbb
lret
cmp
sahf
dec
std
popf
shrb
sbb
or
xchg
push
pop
sub
shlb
mov
in
mov
hlt
cmc
scas
push
insb
stos
pop
push
jae
mov
testb
pop
pop
xor
int
stos
sub
xchg
xor
xlat
lods
sbb
mov
scas
ja
lcall
mov
addr16
and
jp
subl
xlat
stos
push
in
jl
testl
fldt
out
daa
cmpsl
sub
fwait
mov
fcoml
enter
ja
mov
stos
sub
scas
mov
or
sbb
push
in
pop
pop
xchg
dec
pushf
stos
jbe
in
mov
ret
js
xor
push
and
jo
push
stos
mov
cmc
ss
fildl
fisttpll
stos
mov
cltd
inc
mov
pusha
out
scas
lret
sbb
or
push
mov
cmp
push
push
mov
inc
daa
loop
pushw
shrl
out
or
push
stos
subb
stos
lea
js
inc
jmp
stos
lahf
shlb
stos
cmp
psubd
sti
xor
aas
inc
ret
bound
cmp
or
mov
push
jne
scas
testl
sahf
jecxz
mov
fwait
stos
faddp
mov
sbb
stos
enter
inc
push
imul
dec
movlps
inc
sub
sbb
push
mov
stos
nop
ljmp
stos
test
sub
popf
push
inc
sub
and
bound
xchg
push
stos
inc
in
sbb
push
stos
loope
rclb
ss
xchg
add
xlat
pop
filds
cmp
fsubrl
jns
lret
stos
mov
sbb
push
xchg
in
cli
lods
int3
jo
jg
inc
sub
xor
mov
lret
mull
fbld
sub
lret
mov
das
cmp
push
addr16
mov
mov
jle
fistpl
fwait
cli
dec
lods
fisubrs
push
pop
and
cmc
and
fsubs
jae
loope
repnz
mov
xchg
cmp
or
or
fisubs
pop
inc
nop
push
add
repnz
cli
push
stos
push
ljmp
jmp
push
in
jge
stos
inc
pop
mov
in
mov
pop
stos
dec
pop
dec
cli
push
es
xchg
cmp
cmp
jnp
ljmp
mov
or
pop
stc
sahf
stos
xor
in
adc
push
lock
leave
movsl
int3
loopne
test
stos
daa
or
cmp
push
jne
pop
dec
fbld
xor
ss
inc
fnstsw
jp
mov
push
arpl
ror
push
fists
stos
gs
mov
stos
imul
cmp
push
mov
sbb
xchg
dec
ja
jnp
mov
stos
loopne
ljmp
out
push
arpl
mov
push
pop
pop
jbe
jle
sahf
daa
insb
scas
push
stos
mov
lods
fisubrs
sub
scas
inc
push
add
shll
mov
aas
mov
lea
adc
nop
loopne
push
jne
scas
push
loope
ds
inc
es
fidivl
add
stos
xchg
imulb
cld
xchg
push
dec
stos
sub
pop
xor
jmp
cli
adc
xlat
test
int3
out
scas
test
mov
push
mov
mov
mov
sbb
iret
adc
dec
dec
push
stos
jbe
jae
cmp
inc
shlb
pop
ret
jne
or
pop
into
fldcw
ds
and
stos
cmp
lahf
ljmp
jnp
movsb
daa
flds
daa
out
push
dec
jne
and
into
cmp
sub
mov
cltd
dec
lock
stos
jmp
or
popa
mov
fisubs
adc
stos
mov
pop
add
dec
sbbb
push
ret
insl
jmp
and
nop
lods
std
stos
mov
outsb
in
stos
mov
sbbl
fisubrs
les
ljmp
inc
mov
stos
pop
lret
test
stos
add
ss
iret
mov
in
fwait
movsb
pop
mov
inc
push
inc
subb
xchg
inc
jmp
rclb
cltd
lea
ss
rclb
inc
fwait
ljmp
repnz
test
lret
movsl
mov
popa
dec
les
xlat
rorb
subl
stc
sbb
jmp
out
and
fcomip
sub
test
cltd
fstps
push
lahf
es
inc
inc
push
dec
daa
jle
imul
andl
dec
stos
cmpsb
or
jl
push
clc
shll
aas
pop
mov
cmp
divl
into
sbb
cmc
mov
pop
push
pop
stos
or
mov
movsl
fcoms
push
push
xchg
pop
jle
imul
fwait
stos
mov
scas
mov
and
pop
mov
movsl
rorl
stos
xor
push
sbb
stos
aam
mov
subl
gs
in
mov
pop
sbb
rep
into
lea
stos
mov
clc
cmp
mov
sahf
mov
push
enter
sub
test
imul
sub
mov
mov
mov
cmp
in
pop
outsl
push
mov
mov
mov
pop
push
scas
mov
mov
scas
adc
jl
subl
and
mov
imul
shlb
push
sbb
stos
cltd
mov
xor
lahf
daa
call
push
outsb
xchg
inc
fisubrl
adc
adc
dec
daa
and
mov
ror
sbb
mov
int3
adc
push
in
stos
jle
jl
loope
insl
mov
mov
pop
push
inc
icebp
pushf
and
mov
dec
aaa
xchg
mov
lods
xchg
stos
dec
outsl
stc
and
sub
mov
ret
xchg
mov
push
arpl
mov
xchg
push
push
insl
shll
cmp
cmp
cwtl
jb
cmp
inc
mov
stc
out
mov
les
xchg
or
addr16
insb
push
adcl
sbb
movsl
popf
xor
mov
mov
and
std
cmovbe
jne
out
int
sub
arpl
mov
stos
test
xchg
js
enter
arpl
int3
pop
or
stos
hlt
outsb
fisubs
lahf
mov
mov
scas
dec
jae
repz
stos
mov
arpl
bound
jne
orl
popa
adc
mov
xor
pop
cmp
stos
xchg
cmp
stos
lock
loopne
push
sub
stos
fs
jo
test
sub
add
xchg
or
cli
jle
and
test
sbb
push
pop
iret
les
mov
mov
mov
popa
cli
pop
mov
into
xor
and
divb
lea
push
pop
cmp
add
sbb
inc
sti
sub
insl
adc
or
push
sbb
push
ficoml
mov
stos
mov
jbe
and
loope
sub
addr16
pop
push
sub
pop
mov
sbb
cmpsl
mov
imul
out
stos
js
sbb
inc
xor
stos
sbb
xchg
sub
scas
jae
push
push
sbb
ljmp
sbb
icebp
jg
imul
stos
cmp
jne
push
sbbl
mov
mov
mov
sbb
push
stos
in
push
daa
int3
cmp
mov
dec
and
sub
daa
fdivrl
xchg
mov
push
aad
shrl
clc
stos
cmpb
popf
xor
pop
xor
sub
inc
inc
outsb
sbb
fistpl
dec
cs
sahf
ja
in
stos
or
es
jl
dec
pop
stos
rcrl
mov
adc
mov
mov
fnstcw
adcl
inc
add
frstor
dec
test
push
mov
incb
testb
or
int3
sbb
mov
shrl
subl
cmc
fbstp
jge
adc
stos
xchg
push
sbb
mov
lcall
pop
push
popa
test
cmp
jb
jmp
aam
or
fnstsw
les
out
sub
push
and
andl
push
jle
lock
mov
outsb
inc
into
lea
sub
hlt
fwait
jge
mov
cld
pop
lods
xchg
mov
mov
sub
cmpsl
add
hlt
shl
daa
ss
push
push
add
ja
shrl
lret
fwait
mov
sahf
in
sbb
mov
add
cmp
fwait
dec
cli
lea
stos
sub
test
popf
dec
cs
cwtl
loope
les
mov
mov
xlat
adcb
aaa
out
stc
sub
aas
inc
add
shlb
fsubs
and
cld
sti
inc
dec
dec
daa
jb
inc
push
jns
iret
jmp
fisubs
xchg
jmp
into
add
stos
mov
imul
outsl
inc
sbb
std
loop
sub
jg
xor
or
jmp
mov
test
stos
lea
inc
orb
stos
idivb
neg
adc
popa
xor
mov
arpl
xchg
pop
call
pop
loop
gs
stos
inc
xlat
inc
mov
stos
movsb
add
aam
jbe
pop
mov
mov
add
xchg
cmpsl
xchg
jl
pop
push
cmp
fcmovnbe
mov
sbb
cwtl
inc
mov
mov
cmp
movsl
jmp
jne
xor
bnd
sbb
xor
ss
out
pop
lret
int3
jmp
jnp
repnz
lods
test
aad
xchg
sbb
jmp
adc
stos
sti
decb
xchg
inc
imul
mov
stos
inc
lahf
setb
in
std
dec
mov
or
add
push
push
stos
stc
inc
aad
divl
pop
mov
xchg
dec
dec
out
xor
push
adc
addl
jecxz
fwait
insb
int3
cmc
fwait
sti
aad
push
sbb
cmp
push
out
xchg
imulb
add
and
dec
sahf
stos
lret
popf
xchg
cmp
lahf
int3
stos
cld
xchg
bound
nop
adc
pop
daa
cmp
pop
add
addr16
push
scas
subb
stos
sub
xchg
pushf
pop
push
scas
stos
push
stc
pop
pop
stos
xchg
sbb
in
push
cmp
stos
xchg
lods
adc
cmp
cld
iret
add
jecxz
adc
imul
cmpsl
mov
xchg
sub
scas
and
daa
xchg
jge
popa
mov
daa
rolb
cmp
mov
movsb
pop
dec
rcl
push
scas
push
sub
and
adc
je
adc
mov
sarb
dec
xchg
stos
mov
sahf
xchg
lret
js
stos
arpl
in
imul
push
sbb
idivl
pushf
rcll
stc
hlt
jmp
sbb
pop
rolb
dec
mov
sbb
sti
mov
stos
fstpt
stos
cmc
ja
and
push
fistpll
out
iret
into
pop
stos
lods
aaa
sbbb
xchg
pop
gs
mov
xor
es
dec
and
adc
push
call
xlat
mov
shrl
mov
pop
stos
fstpl
pop
dec
out
mov
cmp
loopne
pop
push
add
add
cmp
stos
scas
pop
insl
andl
cs
add
mov
aas
jmp
pop
int3
arpl
mov
pop
and
inc
pop
and
jg
daa
stos
fistl
mov
xorl
decl
pop
mov
mov
mov
mov
loopne
jb
inc
push
xor
lahf
push
int3
xor
stos
mov
xchg
xor
iret
lods
mov
mov
and
or
stos
jae
gs
inc
das
outsb
stos
xchg
lods
dec
rolb
mov
das
lret
std
jb
fisttpl
stos
pushf
xchg
fs
stos
push
mov
pop
xor
loop
cmpsl
sub
add
cmp
rol
rorl
inc
jmp
dec
addb
stos
movsb
ds
push
cmp
sub
stos
pop
pop
jne
and
jp
stos
push
andb
dec
lea
xchg
mov
push
xor
jmp
mov
jmp
dec
into
fwait
or
push
mov
repnz
incl
test
mov
sub
repz
xchg
stc
stos
rorl
loope
stos
pop
ror
push
pop
and
arpl
arpl
stos
lea
stos
subl
cmp
and
sbb
sarl
jo
clc
dec
mov
jmp
jno
mov
insl
adc
movsl
push
cmpsb
cld
stos
and
xchg
sbb
inc
xorb
pop
jmp
cmp
addr16
stos
sub
push
in
enter
decl
and
int3
sti
jmp
xlat
sbb
data16
xchg
aas
mov
clc
xchg
sub
jae
dec
and
push
frstor
ret
addr16
sti
in
jo
adc
je
movsl
std
stc
test
fwait
movsb
dec
mov
dec
cmp
jmp
stos
mov
or
sub
mov
jb
orb
inc
mov
jno
stos
push
int
fcomip
dec
pop
jnp
pop
xorb
rolb
pop
dec
dec
scas
loop
stos
es
xchg
jle
and
stc
ret
fildl
mov
cmp
add
stos
push
arpl
pusha
jbe
and
stos
fildl
lret
loope
mov
cld
adc
dec
int3
and
mov
and
sub
clc
jmp
push
ja
enter
sub
mov
dec
dec
jl
adc
add
pop
stos
mov
inc
rorl
adc
mov
cmp
repz
arpl
fmulp
fwait
stos
nop
pop
rorb
stos
mov
out
cld
int3
out
xchg
mov
loopne
and
popf
push
jge
jl
pop
rorb
dec
dec
stos
gs
shlb
sbb
add
add
mov
stos
mov
mov
inc
in
movsb
sub
push
adc
pop
cltd
sbb
loope
stos
jmp
enter
xor
sub
cmp
mov
iret
stos
mov
fdivp
mov
dec
jle
add
mov
into
mov
lea
in
stos
mov
rcrb
jp
dec
mov
int
xchg
mov
mov
dec
fdivrl
rcrl
and
jmp
rcrl
imul
or
test
imul
stc
data16
lea
add
fwait
or
test
mov
jecxz
insl
int3
jne
lods
lahf
cmp
inc
xchg
ds
sub
xchg
sub
adc
push
fwait
lock
bound
insl
shr
into
stos
sbb
and
aam
and
mov
call
stc
mov
push
stos
cltd
fistpll
mov
shl
mov
jmp
jne
xor
lods
inc
pop
stos
les
daa
fcmovb
stc
pop
aas
jmp
scas
push
or
divb
lcall
jp
add
inc
aas
movsl
dec
xlat
cmp
das
insb
stos
push
xor
lods
fs
mov
shrl
cmpsb
in
cmp
mov
outsb
clc
stos
fldcw
cltd
push
cmp
mov
hlt
mov
and
jno
mov
bts
adc
vpackuswb
out
jmp
mov
fwait
outsb
and
cmp
insl
jg
std
stos
out
mov
aad
stos
mov
mov
lret
and
mov
mul
cld
pop
stos
sahf
mov
shlb
pop
js
xlat
stos
je
mov
stos
sbbb
mov
outsl
ret
mov
adc
std
mov
das
pop
or
sub
cmpsb
inc
sub
shll
and
pop
mov
stos
cmp
pop
fiaddl
stos
movsb
cmp
test
lds
out
movsl
es
aam
dec
pop
das
mov
stos
lock
std
fst
dec
jnp
stos
sahf
jg
gs
pop
pop
stos
lahf
adcb
jmp
jg
out
js
mov
mov
rol
ds
or
sub
stos
mov
jbe
stos
mov
mov
push
xor
pop
stos
les
nop
icebp
cmp
fbld
bound
jmp
push
rcrl
xchg
or
aad
icebp
test
mov
arpl
push
nop
loope
mov
push
add
xchg
stos
test
inc
leave
inc
lods
loopne
addr16
repz
mov
xor
cwtl
hlt
insl
stos
ret
in
fisttpll
push
mov
push
push
test
outsl
stos
pop
in
std
cmp
popa
stos
mov
dec
fxch
push
stos
insb
je
cltd
std
add
scas
addr16
mov
jmp
xchg
into
mov
cmp
scas
mov
sub
imul
cmc
fisttpl
inc
daa
inc
in
xor
scas
loop
cwtl
fs
scas
sti
or
stos
pop
jne
pop
xchg
mov
xorl
ror
jp
xchg
xchg
and
inc
popa
ret
stos
push
cld
cmpsb
xor
out
adc
arpl
lcall
out
movsb
sbb
fwait
mov
iret
sti
nop
mov
mov
push
xchg
push
addr16
mov
dec
push
shll
insb
fs
mov
popf
sub
aaa
cltd
pop
hlt
cmp
stos
repz
addr16
ror
aam
and
daa
dec
test
stos
int3
jp
push
rcrl
iret
stos
fadds
and
frstor
add
stos
mov
mov
pusha
jmp
mov
push
scas
and
out
jl
ss
jmp
push
mov
or
stos
jne
xor
mov
aaa
dec
test
cs
enter
mov
fldt
dec
ret
sub
xchg
fdivp
cmp
daa
test
sbb
cmpl
into
popf
or
stos
dec
jne
std
push
mov
mov
mov
stos
add
in
repnz
cmpsb
push
aaa
icebp
shr
das
xor
fwait
or
stos
and
and
nop
mov
inc
test
mov
sub
sbb
stos
insl
lock
lcall
ss
jle
pop
aas
lea
cmp
mov
push
stos
dec
mull
pop
inc
xorb
ds
push
xor
pop
shrl
mov
xchg
stos
pop
jl
mov
mov
push
stos
push
pop
pop
pop
jmp
dec
xchg
outsb
imul
and
mov
lret
stos
out
sub
add
arpl
ljmp
mulb
cmpsl
xchg
cli
dec
ds
mov
wrmsr
mov
out
cmp
xlat
jbe
imul
mov
dec
lcall
ret
stos
faddl
enter
call
cli
stc
push
inc
scas
ss
dec
insl
sub
fadd
stos
mov
sub
dec
in
jmp
outsl
pop
mov
xor
adc
lods
in
popa
int
add
add
je
xchg
mov
xorb
or
das
stc
pop
dec
subb
shlb
lock
stos
jnp
mov
leave
stos
inc
pushf
xor
xor
dec
push
pop
arpl
xor
sbb
mov
and
inc
mov
jmp
pushf
stc
out
loopne
xchg
push
inc
and
shrb
fdivrl
inc
push
push
loop
addr16
sbb
mov
inc
stos
ljmp
stc
insb
push
js
in
xlat
sbb
es
sub
daa
push
repnz
mov
sub
sti
arpl
pop
or
cld
jnp
cmp
mov
jmp
xor
imul
adc
push
sbbb
popa
nop
add
pop
sub
mov
scas
dec
stos
and
dec
jmp
dec
stos
stos
pop
xchg
ds
stos
xor
jp
popa
sub
cmp
and
sub
push
outsb
les
dec
subl
xor
mov
dec
dec
mov
pop
or
sub
jne
dec
cmp
testb
or
stos
push
inc
dec
lahf
ss
loop
xchg
adc
movsb
jne
pop
ret
jge
mov
aad
int3
jmp
mov
inc
stos
arpl
out
mov
dec
jg
gs
imul
cmc
sub
imul
stos
mov
adc
or
xchg
movsb
pop
sti
imul
mov
push
lods
ja
xchg
mov
shrb
fcomp
subb
jmp
pop
stos
lea
inc
pop
mov
stos
cmp
pop
test
into
dec
mov
scas
inc
pop
js
pop
inc
bound
sub
push
arpl
xchg
mov
sbb
mov
adc
call
push
arpl
mov
cltd
and
mov
pop
xchg
pop
addr16
idivl
mov
mov
add
push
imull
jecxz
outsl
fwait
sbb
ja
stos
loope
shll
stc
jp
mov
dec
cltd
or
add
and
aaa
stos
push
jle
sub
inc
stos
call
inc
push
cltd
jnp
jno
sbb
dec
stos
and
popf
cmc
cmpsl
cmp
sub
jns
std
sbb
mov
ret
adc
sub
lods
push
ljmp
and
mov
std
test
xor
mov
sbb
mov
sub
add
xchg
push
lds
mov
negl
rcrb
stos
in
or
fsubl
cli
stos
push
and
popf
sbb
mov
push
out
mov
daa
hlt
loopne
lret
lahf
je
push
out
loope
das
and
pop
out
gs
aas
stos
mov
aad
mov
gs
lock
and
push
fiadds
and
je
imul
jae
pop
add
lock
push
xchg
mov
stos
stc
jne
mov
int
sbb
sub
imul
cs
ficompl
and
jge
mov
out
insl
dec
push
inc
jns
lahf
out
fldl
dec
stos
mov
loop
push
movsb
mov
push
fisubrs
mov
lret
sbb
cwtl
jg
jle
repnz
sub
pop
adc
std
fnsave
movsb
int3
mov
je
lock
or
jmp
outsb
sub
xor
int
loopne
outsl
aad
test
lds
arpl
stos
cmpl
xchg
jnp
push
mov
fwait
add
dec
mov
mov
or
jmp
push
mov
mov
gs
xor
daa
jp
sbb
sub
mov
add
mov
and
notl
out
inc
outsb
inc
movsb
test
sub
es
cmpsl
mov
cli
cld
xor
sub
jb
repz
cwtl
jne
stos
repnz
add
push
xchg
jp
cmp
jecxz
aas
xchg
out
push
icebp
test
stos
imul
stos
mov
inc
mov
out
or
cmp
mov
push
sub
int3
cltd
xchg
repnz
dec
fcomps
jecxz
out
imul
or
pop
dec
mov
adc
dec
test
push
mov
xchg
stos
push
sbbl
cwtl
cmp
cmp
dec
cmpb
dec
movsb
movsl
inc
dec
and
xor
outsl
test
enter
mov
out
sub
daa
mov
cmc
lods
mov
aam
pusha
stos
mov
push
dec
out
cmp
jae
xor
lret
andb
pop
ja
imul
les
stos
leave
mov
mov
pop
cmpsl
inc
and
rcll
jmp
scas
mov
stos
push
jmp
out
xor
xchg
sub
loop
je
or
inc
push
aas
sub
scas
fldenv
int
pushf
fwait
stos
out
daa
insb
pop
loope
stos
call
xchg
mov
into
pushf
xchg
sbb
int
jo
fwait
loop
ljmp
daa
cmp
sete
dec
stos
sbb
sub
mov
pop
cmc
mov
mov
stos
pushf
ds
inc
stos
adc
push
cmp
aaa
pop
lcall
lea
xchg
pushl
pop
scas
xchg
les
mov
mov
mov
pop
xor
imul
mov
sub
sub
jns
shrl
lods
xchg
mov
loop
ficoml
adc
xchg
stc
addr16
pop
scas
mov
ss
sbb
mov
cli
sahf
jge
stos
dec
repnz
scas
rorl
fwait
adc
jmp
icebp
cmp
xor
enter
inc
das
stos
pop
cmp
jmp
xor
andl
aaa
mov
js
cli
cs
loope
test
in
das
int3
dec
push
cld
push
jbe
cmp
data16
sbb
stos
xchg
push
and
xor
inc
fucomi
aam
out
jno
stos
inc
lcall
stos
enter
mov
dec
sbb
mov
cwtl
fldl
std
adc
stos
data16
jns
stos
lock
jp
addl
adc
mov
push
push
lahf
jle
sbb
imul
leave
enter
push
or
jae
fisttpl
add
out
sbb
push
mov
or
jno
je
mov
in
sub
mov
dec
adc
xor
stos
jle
pop
adc
add
lcall
or
cwtl
scas
stos
xchg
lea
mov
jnp
jg
push
cmp
push
cli
jmp
lcall
lods
sti
dec
push
stos
and
les
sub
or
xchg
mov
jl
stos
push
pop
cmpsb
sbb
mov
xchg
stos
fmul
icebp
lcall
test
mov
mov
or
cmp
pop
mov
push
fucomip
pop
xchg
into
dec
push
daa
popa
or
decb
mov
jb
negl
ljmp
xor
jg
les
push
jl
and
xchg
mov
stos
arpl
inc
cli
push
mov
lods
xor
mov
imul
cwtl
stos
ficoms
pushf
jmp
test
imul
jo
lret
out
stos
sbb
pop
jno
inc
in
stos
outsb
gs
xor
in
xor
adc
addr16
xchg
lahf
xchg
adc
cli
insl
cmp
dec
fdivr
lods
push
sub
add
insl
xor
and
stos
and
mov
jmp
jl
dec
bound
xchg
pushf
or
sub
xchg
lods
cmp
adcl
stos
jmp
add
fwait
push
ret
in
mov
mov
jnp
stos
jb
lock
jl
mov
xor
xor
jae
push
xchg
stos
xchg
dec
lea
sub
adc
adc
mov
mov
xchg
mov
mulb
and
stos
pop
ja
sbb
fs
sbbl
stos
cmp
mov
stos
xlat
lret
sub
je
xchg
mov
leave
sub
stos
push
in
test
or
inc
les
sub
and
mov
or
jmp
or
imul
popa
ret
rcr
rorb
mov
es
je
xor
out
test
clc
stc
mov
push
adc
add
scas
xchg
jp
fwait
stos
xor
test
xor
mov
fimull
jnp
adc
stc
jl
cli
push
stos
pop
cmpsl
icebp
pop
ss
and
scas
stos
aad
or
ja
push
mov
push
daa
mov
and
add
faddl
imul
aaa
sti
cmp
addl
test
sub
cmp
jg
sbb
mov
shlb
mov
push
jne
daa
cmp
clc
mov
stos
mov
mov
stos
pop
xchg
mov
fnsave
or
movsb
ja
shrb
test
mov
mov
out
mov
stos
outsb
orb
jp
or
mov
xchg
cmp
sub
jns
inc
mov
lret
lcall
scas
push
fisubl
stos
addr16
sahf
pop
pop
add
and
popa
sub
inc
jmp
inc
movups
hlt
jnp
push
sub
in
mov
or
jge
adc
das
cmp
dec
inc
loopne
lods
stos
pop
push
push
adc
out
fldt
mov
pop
fildll
xchg
popf
stos
test
fnstsw
stos
pop
ret
loopne
mov
ret
ds
or
aas
fs
stos
in
xlat
pop
in
adc
xor
iret
ds
pop
cmpsl
les
xchg
pusha
add
into
fbld
jo
int
sub
lahf
int3
stos
push
xchg
divl
stc
out
dec
dec
stos
xor
insl
jg
pop
adc
rorl
imul
std
scas
stos
mov
es
stos
sbb
sbb
pushf
stos
ret
adc
jge
dec
in
shrb
mov
es
js
cs
movsl
dec
adc
xlat
insb
jmp
ljmp
mov
and
aam
pop
ret
stos
add
cld
cmpb
imul
inc
pop
nop
xchg
pop
xchg
cli
pushl
in
and
mov
popa
mov
bound
popf
sbb
std
stos
mov
add
mov
xor
xchg
jge
ljmp
sub
adc
daa
xchg
int3
push
and
jle
jno
data16
out
push
xchg
jmp
daa
sbb
nop
push
imull
sti
pop
ret
dec
test
stos
fadds
pop
and
loop
adc
push
fwait
lcall
adcb
jg
xor
sahf
pop
sbb
bound
stos
jno
aam
mov
and
stos
mov
cwtl
jmp
in
mov
pusha
fstps
stos
sub
in
imul
pop
push
lds
jnp
loope
and
fistpll
mov
lcall
sub
imul
sbb
mov
push
sub
les
aad
lods
lea
mov
mov
stos
cld
sbb
insl
rcll
sub
fistps
and
mov
dec
push
or
fstpt
mov
lds
jmp
xor
mov
jmp
out
andl
stos
inc
cli
test
scas
or
and
cmpl
push
jmp
cmp
daa
mov
incb
leave
sub
xchg
push
cmp
add
pop
ds
sbb
fistpl
stos
add
nop
adc
stos
mov
or
push
xor
mov
test
ret
mov
sub
stos
cwtl
leave
out
dec
or
into
jmp
mov
bound
das
movsl
sub
stos
dec
sub
dec
fwait
xchg
pop
mov
std
lods
lock
mov
stos
loopne
ljmp
stos
stos
insl
cmp
stos
call
in
adc
push
sub
mov
scas
std
mov
add
clc
imul
jmp
mov
jecxz
mov
cld
add
dec
fs
stos
pop
add
mov
stos
and
push
adc
lds
push
dec
xor
dec
aad
adc
pop
mov
shlb
lods
sbb
pusha
xchg
jmp
lret
lods
les
stos
popa
pop
rcl
fwait
pop
bts
sub
mov
cmp
xchg
xor
lods
stc
movsb
jecxz
jae
and
adc
cld
scas
jnp
jmp
data16
push
inc
scas
mov
repnz
mov
test
xchg
pop
cli
sub
stos
arpl
push
xchg
stos
push
shlb
das
inc
sbb
dec
pop
pop
jmp
inc
stos
sarl
jg
das
inc
mov
mov
jae
sbb
imul
push
inc
mov
imul
sub
sub
mov
lods
mov
and
mov
mov
lret
push
or
adc
mov
mov
cmc
addb
mov
in
icebp
jle
jg
ficoms
pop
xlat
ss
xchg
xlat
cmc
or
jo
out
popa
shr
insb
inc
jge
stos
jmp
nop
jne
stos
xor
enter
ficompl
jmp
icebp
inc
imul
mov
ds
mov
mov
dec
decb
aam
push
addl
int
nop
xor
outsl
stos
pop
test
and
push
repnz
icebp
xchg
cmpsb
jl
scas
out
out
outsl
push
lret
shlb
shrl
pop
scas
aas
pusha
out
xchg
stos
jg
loopne
popf
sub
or
frstor
inc
cmp
pop
jmp
daa
out
jbe
push
mov
push
stos
or
fbstp
mov
cmp
pushf
and
outsl
mov
in
push
jp
adc
push
cmp
lret
movsb
adcl
jno
pop
jmp
push
cmp
mov
int3
fwait
stos
push
aas
in
out
call
or
mov
stos
dec
cmp
sbb
and
jne
out
data16
push
xchg
jmp
jno
lods
in
stos
xor
mov
push
stos
cmp
inc
and
ljmp
jmp
ss
inc
sub
stos
xchg
add
xor
jb
xchg
icebp
sbb
stos
in
dec
cli
nop
stos
sbb
jmp
shlb
in
jge
and
fs
add
int3
shl
mov
daa
dec
pop
imulb
clc
cmp
or
mov
stos
outsb
aam
inc
push
mov
inc
stos
push
sbb
add
xor
cmpsl
sub
inc
jbe
es
lahf
push
push
inc
xchg
pop
popf
jne
or
dec
dec
fisttpll
mov
push
enter
sub
xor
rcrl
into
das
pop
outsb
stos
mov
mov
cmp
dec
push
repnz
xor
inc
adc
lcall
cld
stos
pop
xchg
lods
stos
in
out
cmp
shrl
mov
stos
adc
sbb
enter
mov
std
mov
push
mov
dec
fistpll
push
mov
lahf
sbb
sub
add
fwait
sti
mov
push
push
scas
addl
add
arpl
mov
sub
mov
mov
dec
inc
push
add
ljmp
xor
add
push
mov
cmp
stos
push
cmpsl
loopne
cld
lcall
mov
push
sbb
dec
sub
in
sbb
inc
mov
fsubrs
or
adc
lcall
cmp
cmpsl
inc
jp
mov
ja
lea
lahf
mov
or
ja
adc
jmp
sub
stos
xchg
pop
inc
jb
aas
das
fwait
xchg
pop
lods
cmc
stos
pop
fidivl
inc
cmp
inc
jae
inc
jmp
scas
jg
out
fs
leave
adc
rcr
test
stos
jg
or
fcoms
daa
daa
cmpsl
out
gs
pop
dec
int3
nop
sub
xrelease
das
sar
std
sub
sbb
daa
ret
mov
insb
push
xchg
subb
xchg
add
in
mov
sbb
stc
xchg
out
mov
push
xchg
ss
xlat
adc
mov
push
adc
push
sbb
stos
push
das
inc
std
pop
and
inc
stos
xchg
jle
inc
pop
sub
mov
mov
pop
movsl
pop
stc
stos
fdivs
out
stos
cld
les
lea
mov
jmp
les
jecxz
orb
scas
mov
repz
push
stos
insb
lods
jg
fldenv
out
adc
and
bound
pop
and
pop
stos
pop
add
into
inc
fwait
stos
loop
xchg
addl
mov
mov
push
mov
cwtl
add
stc
aas
subb
mov
movsb
mov
scas
int3
pop
inc
loop
hlt
sub
jmp
xor
stos
add
cmpsb
in
enter
stos
push
add
in
inc
addr16
push
jecxz
sub
stos
pop
imul
mov
sub
mov
lods
and
push
and
xchg
pop
and
adc
jns
stos
sbb
inc
lea
scas
pop
jecxz
stos
adc
sbb
lock
shlb
movb
fisttpl
or
push
inc
cmp
mov
dec
push
addr16
stos
in
sarl
sahf
mov
lret
mov
in
lock
loopne
hlt
ss
pusha
imul
xor
ja
stos
aas
pop
xchg
loope
andb
out
stos
cmc
fimuls
dec
aaa
xor
shr
shlb
pop
out
jae
mov
xchg
dec
jecxz
adc
shlb
stos
add
fwait
negl
stos
mov
in
sbb
loopne
pop
push
stos
xor
sti
cmp
ljmp
cmp
sbb
mov
cmp
fwait
sbb
jmp
inc
mov
dec
jmp
movsl
rolb
das
push
mov
cwtl
stos
pop
or
inc
adc
push
outsb
mov
aaa
push
outsl
sbb
xchg
call
push
das
push
mov
shll
movsl
fs
xchg
jo
adc
mov
les
push
lods
sahf
push
push
adcl
gs
in
sub
add
mov
adc
dec
xchg
imul
nop
mov
rcrb
jle
mov
add
mov
repz
roll
xchg
sub
pop
cmpsb
jl
test
test
adc
stos
mov
fwait
sub
pop
icebp
loope
xchg
dec
addl
mov
imull
stos
loope
pushf
xor
inc
dec
jnp
rorl
lret
test
or
fwait
mov
adc
mov
xchg
stos
add
mov
daa
push
or
pmulhuw
xor
es
push
stos
clc
push
pop
cmp
fwait
stos
push
add
fadds
jne
cltd
out
push
jp
subb
fadds
cs
div
pop
xchg
leave
inc
stos
mov
les
stos
mov
ljmp
sub
pop
mov
stos
dec
js
add
sub
stc
cli
adc
std
out
imul
xor
stos
xchg
ja
lods
mov
inc
mull
insb
mov
xchg
cmp
fwait
les
mov
mov
adc
pop
push
jbe
push
push
pop
inc
push
mov
out
imul
sub
stos
lock
and
mov
fmul
stos
daa
rolb
das
je
mov
test
sti
inc
stos
xor
jno
subb
mov
mov
nop
daa
gs
mov
sbb
inc
jmp
insb
dec
push
sbb
scas
jbe
stos
mov
and
fimull
popa
cmp
inc
jmp
and
aas
cmp
and
sub
stos
sbb
jb
mov
mov
call
shlb
and
ds
pusha
cs
iret
arpl
in
movsl
inc
iret
mov
push
movsl
or
lcall
pop
mov
sub
xor
bound
lods
and
fs
test
mov
mov
add
out
jb
xchg
sub
loopne
pusha
adc
stos
aad
and
bswap
stos
sbb
sub
je
scas
shl
sub
cld
andb
sub
jcxz
mov
fnstenv
stos
leave
push
cltd
js
dec
and
bound
nop
or
fdivrl
jmp
fisttps
rorb
jo
insb
cs
fsubrs
mov
int3
loop
es
movsb
pop
cmpsl
xchg
mov
sbb
aam
ds
aas
movsb
inc
fisubs
xor
std
stos
xlat
int
push
inc
outsl
gs
sahf
in
hlt
xchg
ljmp
sub
mov
push
xchg
in
push
out
push
mov
repz
cwtl
xchg
stos
dec
cs
hlt
addb
pop
movsl
jbe
push
stos
mov
lock
adcl
stos
pop
test
loope
mov
out
push
adc
sub
fsubl
je
stos
pop
xor
iret
dec
stos
scas
bound
adc
ss
outsb
pop
lods
stos
jmp
mov
sbb
mov
push
cmp
xchg
or
ljmp
add
call
add
lret
lock
xor
js
imul
mov
stos
inc
arpl
mov
pop
sbb
ror
int3
add
daa
and
stos
ljmp
loopne
movsl
or
push
xor
rcll
jmp
rclb
movl
or
aad
addr16
es
sub
cmp
jns
out
push
jbe
shrb
mov
imul
mov
rcrb
daa
std
enter
add
jne
push
stos
in
into
push
arpl
cmp
xchg
mov
jge
jb
je
into
lds
stos
fwait
imul
nop
ret
stos
lds
das
pop
mov
loope
lods
xchg
mov
popa
mov
cmp
mov
push
mov
shlb
sbb
out
fldcw
stos
cmc
sub
inc
mov
shll
push
jno
lock
shr
pop
dec
in
loopne
jnp
jge
jbe
xor
stos
loope
ljmp
jp
ljmp
lds
stos
out
inc
shrb
mov
stos
sub
cmpb
sub
stos
mov
pop
ret
stos
sti
jne
in
or
fsubrs
popa
xchg
pop
shll
adc
leave
hlt
sub
dec
int3
stos
add
pop
jle
jge
dec
icebp
mov
aam
stos
scas
xor
mov
fcompl
stos
xchg
sbb
sub
stos
sub
inc
fldcw
dec
pop
stos
xchg
imull
pop
call
lcall
sahf
adc
loop
loopne
cmp
adc
int3
mov
adc
add
loope
stos
add
sub
arpl
dec
mov
jo
dec
enter
subl
mov
stos
push
lods
andb
or
iret
jnp
divl
adcb
xor
and
sbb
stos
xchg
pushf
adc
inc
sub
fs
xchg
jnp
mov
jno
mov
stos
push
arpl
add
cld
je
ljmp
and
stos
aas
dec
lret
push
arpl
cltd
stos
ret
cmpl
pushf
popa
sbb
dec
jo
in
add
adc
push
mov
stos
and
xor
gs
outsl
adc
in
or
stos
out
jnp
je
icebp
ja
aam
push
pop
pop
call
stos
arpl
mov
push
add
sbb
jle
adc
push
dec
jmp
pop
imul
inc
stos
les
dec
push
push
cwtl
loopne
inc
sub
adc
out
iret
adc
mov
sub
je
push
dec
mov
sbb
jle
jns
mov
xchg
mov
popf
rcll
lret
fwait
cltd
movsl
mov
sub
pop
xchg
stos
repnz
push
dec
inc
andl
int
out
xlat
stos
imul
cmp
sub
stos
add
jnp
mov
stos
cmp
or
sahf
pop
stos
lods
enter
test
test
ja
push
dec
sbb
roll
stos
addr16
pushf
cli
jl
cmp
sub
push
xchg
fdivl
in
addr16
stos
bound
stos
dec
add
xor
xchg
stos
dec
into
cmp
stos
outsb
dec
lods
mov
push
mov
dec
dec
xchg
insb
inc
scas
iret
rep
adc
lahf
stos
enter
and
and
sbb
mov
mov
insl
sbb
push
mov
sub
inc
sbb
adc
jns
mov
aam
loop
cmc
nop
mov
sub
jnp
movsl
inc
or
hlt
in
adc
pushf
xchg
aaa
test
sbb
push
out
mov
arpl
lods
stos
and
in
out
loope
leave
add
dec
push
ficomps
lret
shll
sahf
jl
popf
in
mov
fwait
jmp
int
dec
mov
les
pop
call
or
xor
cwtl
pop
notl
jmp
pusha
stc
and
call
imul
aaa
jg
push
leave
int3
sub
cltd
jns
repz
fisttpll
dec
stos
mov
jg
jnp
repz
stos
lcall
ss
negl
pop
test
lods
push
das
stos
rcrb
ror
ficomps
test
pop
mov
fldl
dec
daa
jbe
sbb
outsl
aaa
fwait
add
cmp
loop
aas
movsb
xchg
inc
stos
push
inc
hlt
orb
add
daa
sbb
fsubrs
jns
out
scas
movsb
mov
xor
lret
out
add
sub
js
mov
push
int
in
notb
inc
addr16
leave
ja
push
stos
movsb
or
inc
lahf
daa
stos
fiaddl
push
aad
in
mov
dec
adc
mov
dec
outsl
stos
xchg
ret
out
or
cld
jecxz
mov
fidivs
add
or
push
stos
pop
dec
insl
cli
pushf
mov
data16
stos
loop
popa
mov
jb
je
mov
fisubrs
dec
cmp
movsb
push
fwait
daa
dec
xchg
pop
clc
scas
cmp
cmpsb
xorl
bound
xchg
stos
pop
push
mov
shrb
cli
xchg
mov
jo
fdecstp
inc
stos
ds
lods
pop
xchg
xchg
mov
cld
cmp
js
mov
test
movsl
stos
lock
insl
out
stos
mov
and
popf
sbb
mov
imul
stos
dec
pop
pop
mov
stos
push
repnz
ret
popa
xlat
pop
stos
pop
lods
loopne
mov
call
xchg
jns
iret
add
pop
jnp
dec
stos
xor
loopne
scas
psubd
xor
xor
mov
sbb
sbb
sar
pop
sub
mov
jae
cs
jnp
in
rcrl
test
cwtl
imul
adc
test
mov
arpl
pop
dec
stos
fwait
mov
stos
xor
imul
ret
test
test
xor
repnz
mov
ljmp
dec
pop
push
gs
pop
loope
fdivrl
pop
sbb
jns
lcall
and
push
adc
xor
adc
stos
pop
mov
mov
mov
ret
mov
in
sub
sbb
mov
dec
int3
stos
cmp
ret
fistpll
daa
sar
xor
stos
dec
cs
fs
add
sbb
call
pop
outsb
decb
mov
mov
xchg
repz
push
loop
lods
xchg
xchg
sbb
push
lret
push
jne
inc
in
scas
xchg
push
imul
xchg
mov
test
iret
mov
idivl
fwait
jnp
cmpsl
repz
jecxz
stos
mov
xor
stos
outsl
or
cmc
sub
pushf
icebp
sub
sub
int
jg
jo
ret
aaa
or
cli
daa
shl
enter
adc
repnz
in
pop
nop
mov
imul
mov
pop
js
fisubrs
addr16
inc
call
loop
dec
cmp
cli
lock
mov
or
sbb
cmpsb
inc
test
or
cld
sbb
sahf
and
ret
hlt
stos
jg
into
out
fidivl
daa
cld
inc
mov
adc
sbb
js
xor
cmpsl
sub
pop
pushf
stos
cmp
movb
stos
and
sti
jp
push
mov
mov
mov
sbb
std
sub
es
xor
and
shr
fildll
mov
add
dec
jo
adc
fcomps
mov
stos
test
js
repz
or
stos
lock
mov
enter
lods
imul
loopne
loope
jp
fistpll
stos
ja
xor
out
cmp
enter
stos
sub
xchg
dec
test
scas
mull
insl
push
int
cmpsb
xchg
and
imul
popa
ucomiss
lods
in
and
fcomip
jmp
shll
dec
jne
lcall
dec
jecxz
dec
adc
add
pop
pop
sub
shl
ja
mov
movsb
push
mov
stos
rcrl
mov
jmp
xor
shrb
jb
imull
dec
pop
movsl
outsb
roll
lret
int3
sbb
dec
mov
add
sarb
jo
stos
dec
int
mov
sbb
xlat
jns
stos
inc
pop
cmp
popf
repz
push
sbb
mov
jno
xor
xchg
addr16
adcl
push
mov
ss
and
shrb
dec
xorb
test
xor
sbb
jl
cmp
scas
fucomp
mov
inc
ret
aas
in
ja
stos
xor
pop
call
addr16
imulb
loope
into
xor
mov
insl
test
stos
mov
ljmp
jbe
mov
jae
push
insl
orl
mov
stos
mov
loope
cmp
in
fisttpl
out
addr16
rclb
jmp
pop
push
lods
add
mov
out
add
and
inc
pop
cmp
stos
int
sub
xor
cltd
mov
add
std
adc
dec
jmp
sbb
pusha
aas
or
jo
xchg
mov
sbb
xchg
hlt
in
stos
addl
mov
sti
xor
imul
mov
pushl
inc
stos
je
nop
cmp
mov
aad
sub
js
fistl
pop
jg
stos
fimull
enter
stos
jae
clc
pop
out
mov
daa
inc
in
or
sbb
sbbl
sbb
rclb
push
and
jl
stos
or
and
ss
daa
stos
adc
pop
flds
movsb
data16
and
scas
or
cmpb
out
or
test
jmp
inc
xabort
push
or
add
imul
or
cmp
mov
or
outsl
movsb
mov
xor
sbb
inc
stos
fneni(8087
mov
arpl
fcompl
push
leave
xchg
mov
sub
in
ret
jbe
aaa
aad
mov
mov
les
fisttps
ljmp
xchg
lret
and
mov
add
insl
es
stos
mov
jno
or
int
stos
icebp
lock
push
aaa
inc
xor
mov
cmp
jmp
adc
mov
jl
ljmp
imul
out
cmp
sbb
es
and
hlt
mov
shlb
mov
stos
into
daa
pop
aam
xchg
fs
stos
clc
mov
or
cld
ljmp
daa
das
mov
imul
xchg
xchg
adc
pop
mov
push
jb
stos
inc
cmp
test
decl
shrb
dec
jbe
and
and
xchg
cmp
int3
arpl
fwait
mov
lds
test
popa
inc
sub
in
xchg
mov
test
es
lock
and
stos
testb
xorps
std
mov
stos
fisubs
fs
shr
adc
mov
push
inc
xlat
lods
mov
push
mov
add
in
testl
daa
add
addr16
scas
ss
or
and
or
filds
loopne
lods
stos
dec
inc
pushf
std
add
mov
rcll
mov
pop
stos
dec
clc
outsb
dec
imul
xchg
out
and
movsb
stos
enter
stos
hlt
cmp
jnp
adc
mov
push
out
test
add
jbe
mov
clc
jmp
lock
push
shlb
test
imul
jl
ja
stc
in
std
enter
inc
imul
int
repnz
lods
push
sub
or
mov
inc
sub
aam
fwait
adc
jno
xor
jle
rcrb
scas
jl
pop
leave
mov
test
mov
pushf
dec
and
pop
stos
out
cmp
in
xchg
adc
stos
adc
lea
stos
ss
push
stc
mov
or
aaa
stos
cmp
mov
rcrb
push
dec
aad
jnp
inc
frstor
insb
imul
lods
iret
dec
ficomps
inc
xchg
dec
pop
out
arpl
pop
sbbb
enter
jg
fadds
arpl
xchg
lods
mov
stos
push
lcall
mov
sbb
fdivrl
jmp
sub
inc
arpl
stos
fisttpll
js
stos
lea
in
stos
mov
imul
pop
shrl
fistps
aas
cs
mov
mov
js
push
pop
stos
xchg
stc
add
cmc
inc
cmpl
sub
out
jbe
mov
xchg
or
int3
and
ss
in
jb
xor
mov
out
nop
xchg
aam
adc
pop
push
adc
dec
sbb
pop
push
out
mov
stos
aad
mov
sti
stos
mov
inc
cmp
in
enter
mov
dec
pushf
pop
lods
cli
stos
mov
rclb
outsb
mov
dec
stos
ds
int3
pop
jge
test
xchg
cmp
dec
faddl
cmp
ret
imul
stos
fsubrs
scas
stos
jnp
popl
xchg
ret
repnz
sub
push
rcrl
adcl
cmc
sti
push
loopne
xchg
dec
stos
xchg
inc
sbb
dec
aad
in
rorb
pop
aam
jmp
cltd
pop
or
sbb
imul
mov
adc
loop
sbb
ljmp
int3
jp
addr16
and
ja
and
pop
cmc
stos
sbb
add
gs
clc
stos
aas
ds
dec
sbb
or
jb
iret
scas
or
data16
xchg
cmp
mov
cmpsb
mov
stos
lcall
xchg
loop
dec
sahf
xchg
mov
dec
sbb
aas
shll
loope
lahf
mov
stos
cmpsl
push
stos
aad
arpl
popa
adc
lock
pop
jmp
stos
imul
adc
sub
push
out
sbb
scas
popa
xorl
xchg
adc
push
stos
mov
push
stc
out
rcll
or
xor
mov
pop
stos
sbb
sub
data16
stos
ret
int3
dec
push
stos
mov
sub
or
fisubrs
and
xor
pop
jp
xchg
ljmp
mov
cmp
incb
in
xchg
in
stos
rorb
imul
outsb
out
dec
jnp
cld
pop
clc
pushf
mov
or
test
mov
push
stos
mov
mov
mov
ret
jne
pop
xchg
inc
lret
int3
adcl
stos
cltd
sbb
ds
stos
sub
mov
adc
cmpsl
jmp
sbb
icebp
xchg
push
cwtl
add
push
stos
in
out
push
dec
clc
addr16
je
jo
stos
in
jle
and
cld
sbb
mov
mov
je
jne
cmc
xor
add
addr16
movsb
lcall
mov
mov
stc
jae
inc
push
jmp
mov
add
lock
xor
jne
andl
incl
ret
push
shlb
lret
stos
cmpsl
iret
add
jmp
xor
jecxz
imul
cmpsb
stos
mov
mov
cmp
popa
or
sbb
and
add
xchg
es
xor
nop
scas
mov
or
add
push
pop
lret
inc
adc
or
dec
xor
add
cmp
fcmove
add
xor
add
jae
shrl
lea
push
cmp
ret
lret
lahf
mov
lahf
pop
int
mov
ljmp
mov
jne
cmpl
stos
push
imul
stos
sarb
add
scas
insb
dec
shrb
jmp
std
xchg
scas
dec
xor
mov
idiv
movsl
adc
imul
push
test
jne
jmp
fmull
adc
and
cli
jb
xor
rcll
loop
and
jp
mov
rolb
inc
mov
xor
outsl
pusha
fwait
cmp
pop
jmp
sub
jle
movsl
mov
add
cli
pop
pop
sti
lds
xor
stos
stos
or
mov
fisubrl
inc
stos
jmp
xor
inc
stos
mov
jg
mov
add
pop
imul
adcb
cwtl
arpl
aam
sbb
stos
call
outsb
and
mov
leave
sbb
bound
pop
test
lock
xchg
fsubl
push
cmpsl
sbb
aad
stos
jmp
mov
lret
loopne
adc
in
add
pop
mov
aad
test
mov
cwtl
mov
mov
mov
in
mov
nop
mov
ret
stos
add
sub
push
jo
andl
fmuls
sub
push
fstpt
ljmp
xchg
adcb
scas
push
les
fbstp
cs
push
in
fistl
push
cld
scas
inc
mov
icebp
arpl
jmp
pop
out
dec
cli
lods
sbb
lret
stos
inc
push
adc
adc
lahf
imul
addl
aaa
sub
fstps
adc
ljmp
adc
test
loopne
pusha
movlps
lahf
stos
mov
mov
out
loopne
inc
adc
sbb
cld
adc
fsubrl
push
inc
mov
stos
xchg
inc
or
fcmovnu
mov
ljmp
mov
pop
stos
cmp
pop
xchg
push
cmp
test
roll
stos
and
adc
pusha
or
in
stos
xor
and
dec
lods
push
lcall
insb
sub
xchg
sub
fsubrl
adc
add
fstl
inc
fimuls
stos
jmp
sbb
imul
dec
ljmp
push
xlat
lock
jp
xchg
xchg
movsl
xorl
nop
push
pushf
nop
inc
push
stos
jmp
mov
adc
and
mov
stos
cmc
mov
add
ljmp
sti
repz
lahf
cmc
pop
xor
and
xchg
adc
into
mov
aas
adc
mov
cltd
in
jmp
sti
push
push
stos
xchg
cmpsb
mov
mov
add
pusha
mov
and
in
movsb
jge
imul
loopne
bound
subl
mov
into
stos
inc
mov
fwait
mov
stos
loop
les
mov
push
std
ja
stos
cmp
jmp
stos
pop
pop
pop
test
jns
xchg
inc
decb
test
nop
or
std
sub
aas
in
mov
out
xor
sub
daa
pop
leave
cmp
lods
xchg
dec
add
lea
push
cmp
add
out
rolb
inc
cmp
or
pop
sub
sbb
stos
hlt
mov
fsubrs
std
lret
push
imul
lea
subb
loopne
mov
push
or
shr
add
xor
jp
or
xor
jge
orl
popa
mov
dec
xor
or
or
or
xor
and
pop
dec
adc
stos
jmp
hlt
lahf
stos
stos
mov
or
inc
stos
aaa
inc
int3
xchg
cmp
stos
mov
sub
inc
insl
js
mov
and
in
stos
ret
cmp
daa
ljmp
cs
fwait
gs
inc
pop
aad
lods
dec
dec
scas
push
mov
sub
lods
pusha
pushf
stc
mov
stos
sbb
sub
push
pop
iret
loopne
divl
xchg
jbe
test
shr
fisubrl
jl
je
aaa
in
ret
loope
rorl
xchg
addr16
imul
jmp
pop
and
ds
stos
xor
lret
nop
movsl
push
pop
jns
subl
push
sub
lods
sbb
lods
movsl
clc
mov
mov
mov
iret
push
test
sti
xchg
sahf
add
sbb
addr16
mov
mov
push
mov
clc
pusha
stos
flds
stos
popf
pushl
int
loope
pop
addr16
xor
cmp
stc
push
mov
stos
hlt
sub
mov
movsb
xchg
stos
xor
sbb
inc
jle
pop
movsb
mov
push
mov
cli
bound
and
insl
lods
sahf
adc
sub
shll
xor
lds
stos
inc
and
lcall
or
inc
jmp
jp
fldt
nop
scas
pop
xor
xchg
jmp
sub
or
lds
daa
stos
adc
movsb
pop
ss
outsb
shl
jmp
int3
add
and
sub
mov
mov
test
dec
sbb
xor
stos
and
mov
imull
ds
xchg
stos
sbb
and
mov
test
sub
pop
icebp
xorb
mov
in
xchg
push
cmp
add
dec
rep
les
loope
pop
popa
addr16
shlb
jp
aas
fstps
out
scas
pop
push
sti
stc
mov
cmp
faddl
push
sbb
cmpsb
into
stos
dec
cmpsl
imul
mov
jg
mov
pop
stos
xchg
pop
sub
jmp
aaa
mov
ret
nop
add
stos
out
pushl
into
test
in
loop
inc
cmp
mov
rcl
sub
popf
scas
lcall
stos
inc
sub
jle
lea
stos
sbb
jae
xchg
stos
push
lock
das
jb
ds
cli
fwait
sbb
dec
mov
mov
into
dec
test
stos
jnp
jo
or
pop
shrl
jae
push
jle
xchg
push
pop
mov
cmc
cmpl
outsb
xchg
std
stos
scas
mov
int3
stos
mov
sbb
xor
push
or
cmpsl
daa
add
clc
nop
cli
ljmp
adc
jno
sahf
xor
les
imul
nop
or
cwtl
in
mov
push
mov
out
out
stos
subb
sarb
test
int
jnp
mov
notl
add
cld
xor
cwtl
mov
mov
inc
mov
lds
dec
stos
lret
xchg
and
inc
adc
xchg
pop
ret
dec
inc
lret
mov
or
jecxz
or
stos
jbe
jp
not
ret
out
xor
test
dec
mov
daa
int3
fildll
jg
cmp
push
pop
lret
icebp
inc
xchg
lods
rsm
ja
mov
mov
push
stos
fnstenv
rclb
scas
std
mov
jne
in
out
lahf
jl
or
pop
cwtl
aaa
mov
pusha
int3
pop
stos
xor
arpl
fwait
mov
xchg
xchg
jg
stos
iret
mov
sahf
repnz
dec
jmp
lds
std
and
je
jne
stos
cmp
mov
scas
sbb
mov
sub
and
fwait
ds
cmp
mov
lods
push
stos
pop
hlt
add
sar
or
xor
sbb
push
loop
bound
aas
addr16
xchg
push
jmp
sarl
dec
rcll
or
int
stos
mov
or
jecxz
xchg
pop
adc
xor
fcomps
lods
dec
stos
nop
xchg
adc
jp
mov
xchg
stos
int3
shlb
cmp
movsl
jmp
inc
fwait
aad
adc
lds
jmp
loope
cmp
cmp
dec
cmp
jae
fstpl
pop
cmp
mov
and
lret
cwtl
jp
mov
adc
daa
aas
sbb
sub
xchg
add
pop
mov
pushw
dec
lods
cmc
lea
scas
outsl
stos
mov
xchg
xor
lcall
outsb
stos
add
xchg
icebp
sbb
inc
mov
xchg
inc
xchg
stos
leave
lods
and
or
in
aad
push
mov
sti
jge
sahf
cmp
cli
push
stos
je
fistl
lret
repz
push
stos
stos
and
adc
adcb
stos
fldenv
fwait
out
pop
or
xchg
mov
stos
jle
subb
clc
lahf
xchg
jmp
jae
stos
push
push
pop
adc
jb
push
stos
dec
add
stos
popa
repnz
mov
stos
movsb
fbld
inc
jbe
jmp
inc
push
lods
int3
mov
adc
add
push
in
add
int
xchg
sbb
cs
or
jnp
js
push
inc
mov
lahf
rolb
inc
stos
shl
push
add
inc
add
sbb
push
mov
aaa
mov
adc
add
icebp
push
sub
adc
stos
andb
mov
fs
stos
xchg
jo
cld
xor
test
nop
loopne
mov
push
int3
mov
sub
into
mov
add
jmp
jle
rcl
mov
pusha
cmp
add
stos
nop
or
int3
xchg
movsb
mov
xor
adc
leave
push
stos
pop
jo
test
cmp
add
fwait
lods
lret
popf
inc
stos
out
cltd
pop
and
and
stos
push
or
fidivl
mov
push
lock
or
push
lahf
into
mov
fidivl
xchg
enter
stos
mov
jnp
cmp
mov
stos
add
mov
int3
dec
imul
scas
out
icebp
and
add
push
jo
ret
imul
stos
cmp
pop
push
stos
roll
pop
fs
and
daa
push
dec
add
ljmp
cltd
int
stos
and
xchg
mov
imul
int3
inc
adc
xchg
ljmp
mov
insb
xorb
adc
shr
xchg
push
in
or
inc
adc
push
lock
ljmp
jg
cmp
cmp
std
daa
incb
lahf
test
ret
mov
jnp
inc
stos
adc
loop
and
repnz
push
add
fists
and
dec
lock
push
adc
dec
xor
sbb
and
adc
mov
jbe
dec
push
outsl
stos
fisttpl
push
cwtl
das
insl
stos
jno
enter
mov
pushf
gs
mov
xor
jmp
or
pop
scas
stos
sbb
test
stos
out
mov
sbb
add
addr16
cmp
push
cmp
push
jmp
test
stos
add
fucomip
jp
xchg
stos
or
call
shrb
out
mov
xchg
std
cmp
mov
xor
xchg
sbb
popf
sbb
scas
adc
popf
add
inc
mov
push
stos
mov
lock
cmpsb
or
stos
rclb
sbb
adc
fsts
stos
push
scas
inc
pop
jmp
imul
call
lds
fwait
pop
fdivrl
sbb
xchg
xor
fs
sbb
dec
mov
mov
cmc
push
test
mov
lret
xchg
pop
sub
pop
mov
subl
test
int3
mov
lahf
cs
lods
push
pop
stos
pop
fidivs
ss
ret
mov
fdivrl
pop
pop
and
pop
imul
pusha
dec
sbb
cmp
mov
stos
out
lea
adc
or
into
mov
mov
xor
jb
mov
add
xchg
outsb
inc
pop
std
daa
dec
imul
popf
add
insb
aaa
xorb
stos
adc
xor
inc
lea
push
xchg
sbb
xchg
jle
stos
out
adc
add
jl
inc
sbb
xor
adc
das
pop
insb
stos
cmpsb
mov
dec
cmp
iret
mov
leave
stos
insb
sub
aaa
sub
dec
xchg
dec
daa
fcoml
add
pop
iret
dec
je
push
stos
insl
out
ja
popf
stc
pop
out
lods
sub
stos
shrl
dec
cltd
pusha
push
add
dec
rclb
insl
nop
ds
cmp
pushl
add
sub
stos
mov
loopne
mov
popa
stos
sub
add
movsb
push
inc
imul
and
push
imul
jmp
mov
xchg
jnp
stos
cltd
jmp
mov
stos
sar
xchg
int
add
stos
mov
repnz
dec
xor
dec
arpl
lahf
stos
fs
jns
inc
addb
test
lret
ljmp
imul
mov
mov
push
pop
loopne
out
lcall
leave
mov
push
cld
fists
ja
scas
and
sub
pushl
addb
mov
repz
shll
or
and
fwait
les
xchg
xor
mov
lods
stos
or
xchg
cli
aam
inc
stos
add
pop
cs
rorb
ret
stc
stos
mov
cmpsl
inc
dec
jae
lods
jmp
loopne
jno
outsl
push
cltd
add
cmp
cmp
imul
imul
dec
pop
mov
pop
push
call
daa
in
sub
cmp
xor
mov
adc
mov
lock
push
test
movsl
cmp
ss
sub
push
ja
and
stos
mov
mov
lea
mov
clc
aas
lods
inc
stos
rcrl
insb
xor
or
and
aad
cs
arpl
movsb
sbbl
jnp
sub
mov
cmp
stos
mov
pop
and
jae
cwtl
stos
adc
push
stos
or
sub
and
add
mov
xchg
test
addr16
mov
rep
adc
ret
out
test
stos
jo
lahf
sub
out
mov
cmp
cmp
push
mov
fwait
out
push
into
loop
sub
addr16
outsb
adc
jnp
mov
and
dec
cmp
mov
xor
orl
xchg
and
les
push
xchg
into
pop
fcompl
mov
leave
setnp
stos
push
xchg
stc
test
jns
add
imul
mov
mov
xor
or
stos
cwtl
mov
rorb
leave
movsl
inc
and
xchg
sbb
insb
shl
jp
mov
fucompp
pop
jge
call
int3
and
pop
outsl
orb
jp
addr16
xchg
add
stos
cltd
push
iret
adc
add
xchg
mov
gs
inc
xchg
stos
push
or
stos
pop
inc
add
icebp
stos
xchg
imull
aaa
loopne
lret
inc
les
mov
imulb
xchg
in
mov
js
scas
mov
addr16
mov
add
add
xchg
or
mov
scas
and
gs
add
test
daa
xor
cmc
or
mov
arpl
jno
popf
push
clc
test
leave
stos
sub
lret
adc
jmp
std
or
cmp
lods
sbb
sub
call
jmp
inc
test
ljmp
scas
cs
mov
flds
sub
stos
pop
xchg
sub
pop
cmp
imul
jnp
push
call
add
cmp
test
stos
sub
cltd
mov
daa
in
sahf
mov
imul
jne
and
pop
sub
push
out
mov
les
stos
mov
jne
lods
stos
mov
outsb
mov
pop
push
mov
jmp
adc
or
xor
dec
pop
stos
jno
lds
stos
cwtl
imul
mov
inc
in
stos
add
stos
mov
ja
xchg
insb
or
cmpsb
lret
int3
sbb
pop
or
ljmp
sub
sbb
xchg
stos
iret
mov
in
test
inc
movsb
ljmp
aad
inc
push
int
stos
orb
mov
pop
stos
inc
mov
sbb
sub
js
push
hlt
stos
cmp
into
cld
mov
fidivs
push
jl
cmp
std
cwtl
sub
sub
imul
jne
sub
in
adc
pop
jno
fidivs
cs
push
es
push
int
dec
cmpl
sahf
loop
add
mov
xor
aas
stos
jg
stos
sbb
fidivrs
pop
ret
aad
push
cwtl
in
popa
stos
xor
or
push
cmc
pop
pusha
loop
push
lret
and
cmp
xor
or
loopne
cs
mov
fldt
out
adc
lahf
in
pop
test
loop
add
scas
xor
lret
stos
cmpl
push
imul
jge
stos
sbb
pop
adc
sub
scas
mov
add
xor
data16
nop
jecxz
xor
into
packuswb
ja
cli
sub
stos
pop
pop
inc
xor
stos
mov
ret
pop
pushf
repnz
mov
sub
imul
pop
xchg
stos
push
pop
shll
stos
adc
fwait
xchg
adcb
mov
cmp
adc
jecxz
push
xor
mov
inc
icebp
push
stos
inc
stos
sahf
or
mov
sti
mov
fbstp
xor
mov
imul
add
imul
es
imul
pop
shrb
cmp
dec
jmp
aad
pop
sti
lock
cmc
xchg
jo
stos
cmpsb
add
imul
push
loope
and
lret
stos
out
push
es
rorl
pop
cmp
pop
mov
add
arpl
lds
pop
aad
and
pop
sbb
jmp
sub
mov
and
mov
xor
and
mov
lds
incb
xchg
je
movsb
sarb
nop
jmp
mov
lcall
mov
mov
lret
imul
xchg
mov
mov
sub
mov
push
dec
add
es
nop
stos
cmp
out
xor
add
sahf
fists
stos
sbb
add
mov
dec
std
int3
jbe
cmpsl
sti
das
add
daa
stc
mov
movaps
fldt
xchg
dec
bound
clc
sbb
fucomp
ret
pop
nop
lea
mov
add
lahf
sbb
lret
mov
dec
aam
out
sbb
cli
push
leave
clc
xchg
imul
stos
push
cmp
rclb
cmpsl
loope
and
shlb
mov
xor
gs
fcmovnbe
stos
mov
push
xchg
stos
imul
ja
imul
mov
and
imul
fldcw
in
adc
xchg
sub
stos
lret
into
sti
and
rcll
sbb
in
repz
stc
frstor
stos
xchg
outsb
jno
test
lods
test
arpl
int3
sub
mov
push
jp
jns
push
or
xchg
nop
icebp
stos
adc
adc
cmpsb
xchg
xor
daa
lods
mov
jmp
jne
ret
das
lods
pop
adc
ds
shrl
pop
mov
pop
cmc
fwait
sbb
out
push
push
cs
push
jg
adc
imul
stos
sti
std
xchg
shlb
imul
in
stos
lret
test
cmpsb
adcl
hlt
sbb
stos
pop
add
push
imul
sub
fcmovnbe
fwait
cld
cwtl
repz
aam
sti
mov
dec
stos
cli
pusha
or
lods
xchg
add
and
fistps
leave
adc
xchg
xor
dec
test
cmpsl
or
adc
add
xchg
rolb
data16
or
int
mov
push
icebp
rol
subl
not
in
stos
das
push
sahf
out
jl
xchg
gs
push
sti
pop
stos
in
les
in
addr16
daa
icebp
in
sbb
mov
aaa
cmpb
std
mov
stos
jmp
push
sub
rorl
mov
jmp
add
sbb
popf
stos
jmp
or
stc
stos
xchg
dec
mov
push
inc
inc
jl
mov
dec
add
lret
stos
out
add
adc
arpl
ja
leave
adc
jle
mov
mov
int
jmp
ret
mov
push
push
loope
sbb
jl
jle
stos
adc
rorl
xchg
inc
stos
push
scas
or
lahf
cmp
int3
jl
xor
aas
mov
pop
icebp
mov
cmpsl
stos
ja
mov
push
sbb
add
xor
filds
lea
and
stos
addr16
lods
add
xchg
fisubl
cld
stos
lahf
pop
icebp
loop
pushf
test
stos
mov
ret
dec
push
stos
cmp
sub
push
xlat
imul
pop
subb
fwait
out
out
xchg
fcmovnb
stos
or
and
jg
aas
mov
stos
test
cmp
ljmp
je
popa
frstor
stos
push
aas
test
cltd
adcl
push
imul
push
insl
scas
rcrl
mov
push
fnsave
stos
test
rorb
imul
jge
xchg
xchg
jns
movl
pop
in
mov
jg
ds
int
lods
add
stos
shlb
stos
mov
repnz
or
adc
mov
imul
cmc
addr16
jne
fwait
aam
mov
sbb
jb
push
pop
sub
cmp
stos
xchg
test
add
add
jle
pop
lcall
stos
inc
aas
sub
imul
xlat
fsubl
lock
stos
mov
arpl
and
stos
call
jecxz
xchg
xchg
bound
fmull
test
daa
inc
mov
pop
andl
in
movsb
cmc
sub
xor
mov
xchg
jb
lcall
out
call
lret
or
lahf
adc
mov
outsb
sbb
dec
mov
movsl
out
jbe
jge
dec
idivl
out
outsl
mov
scas
sbb
mov
cmp
loopne
cmp
adc
pusha
imul
jb
hlt
add
stos
sub
pop
adc
fsub
ficoms
into
lock
stos
push
data16
xchg
mov
xor
lret
out
and
push
sub
outsb
test
rclb
mov
les
add
add
add
in
fwait
mov
stos
adc
fcmovu
loope
ret
or
stos
lret
cmc
and
data16
pop
and
out
cmpsb
mov
or
mov
mov
sub
xor
sbb
mov
cld
loopne
out
loope
int
pop
xor
pop
cmp
mov
xchg
or
jmp
push
imul
test
test
lods
sahf
and
stos
mov
leave
lret
adc
nop
cmp
loope
and
add
inc
push
jmp
popa
pop
jns
mov
mov
inc
add
xchg
lahf
mov
mov
std
stos
in
xchg
push
fstpt
jl
mov
pop
ljmp
mov
loope
pop
dec
jb
pop
stos
stos
add
fbld
addl
std
inc
jbe
xchg
xchg
dec
xor
inc
push
xchg
push
mov
seto
mov
inc
mov
insl
stos
bound
or
add
sbb
jecxz
pushf
inc
mov
lahf
sub
sbb
jbe
nop
cs
lea
adc
stos
stos
adc
and
xor
imul
sbb
jmp
aad
stos
mov
mov
repnz
mov
mov
loop
gs
outsb
sub
stos
push
jno
cmp
fwait
stos
mov
call
mov
stos
cmpsb
mov
xor
stos
jae
jl
push
dec
stos
pop
dec
in
cltd
adcl
mov
sub
xor
cmp
icebp
cmp
mov
add
idivl
in
adc
andl
jecxz
aaa
lahf
cld
mov
data16
mov
fwait
cmp
dec
mov
fwait
lods
push
mov
inc
or
mov
aaa
cmp
imul
mov
jmp
xchg
jmp
ret
nop
pop
push
gs
dec
xor
stos
test
arpl
rorb
test
les
out
mov
xchg
inc
push
mov
cmp
mov
in
stos
ficomps
shll
xchg
stos
ret
and
stos
sub
es
orb
adc
add
cmp
mov
add
outsb
cmp
sbb
movsl
int
in
je
mov
aaa
pop
in
cmp
xor
daa
arpl
mov
js
movsb
push
in
mov
pop
stos
push
dec
mov
mov
shlb
cmp
jmp
out
and
inc
mov
loope
jl
pop
stos
lcall
aas
inc
inc
insl
stos
popf
cld
call
test
andb
pop
push
sub
xchg
stos
fidivl
and
aaa
mov
add
cmpsl
int3
ds
xchg
adc
scas
daa
pop
dec
cmp
in
xchg
xor
stos
add
jnp
mov
mov
stos
sahf
sub
es
cwtl
and
outsb
or
popa
adc
sub
xchg
cmpsb
mov
lret
cmc
mov
lods
fldcw
mov
fisubrl
mov
enter
cld
mov
mov
xchg
daa
scas
jnp
xor
adc
ficompl
jmp
cmp
rcrl
or
jl
jmp
mov
pop
js
push
fcoms
stos
pop
fs
sub
dec
into
mov
jp
int
add
sbb
repz
sbb
roll
lahf
imul
mov
stos
xor
pop
sbb
ret
adc
mov
add
addr16
cli
push
lock
xor
xor
jno
push
add
test
scas
xchg
mov
sub
in
add
cmp
enter
sarb
sub
and
stos
in
lahf
iret
stc
outsl
repz
loope
in
test
lods
jmp
jns
cmp
out
inc
mov
bound
or
outsb
dec
mov
stos
pop
das
cmp
daa
xor
movsl
xchg
pop
cmpsb
outsb
sbb
cmp
ljmp
jg
inc
fsts
lret
out
and
shlb
mov
stos
sti
add
lret
mov
sbb
inc
mov
inc
stc
and
ja
cmpsb
and
jns
addr16
repnz
or
sub
scas
push
pause
shrl
out
fldt
test
push
mov
daa
fwait
push
xor
inc
test
or
fnstsw
in
aam
gs
mov
adc
mov
mov
pop
js
cmp
xor
stos
inc
and
sub
test
scas
stos
jb
jg
fistl
mov
mov
stos
addr16
test
es
dec
cmpsl
rorb
stos
cmp
ds
mov
fwait
jmp
in
cltd
and
xor
mov
jns
lahf
mov
js
or
lea
outsb
or
stos
pop
hlt
mov
jno
clc
or
jb
cmp
mov
notb
xchg
addb
inc
fwait
loop
mov
fldt
jbe
out
mov
lahf
mull
stos
xor
or
push
or
int3
xor
stos
gs
rorl
xchg
aad
sub
scas
adc
addl
stos
leave
data16
cs
fdivrs
outsb
mov
scas
dec
jecxz
mov
mov
and
loop
daa
shrb
cmpsb
jle
lret
xchg
rcrl
add
stos
push
push
cmp
pop
ret
daa
test
xchg
iret
stos
outsl
inc
mov
stos
je
mov
adc
int3
jo
pop
int3
dec
sbb
and
lods
ret
rolb
ficompl
adc
xchg
in
fbld
fiadds
negl
ss
pusha
jns
push
mov
clc
stos
xor
stos
aam
push
push
stos
pop
mov
cwtl
bts
addr16
xchg
mov
and
das
testl
popa
dec
data16
aas
stos
mov
sbb
sub
ret
cli
test
mov
les
sub
sahf
je
cmpb
stc
stos
lret
fbld
imul
push
std
xchg
mov
and
sbb
out
iret
dec
mov
cmc
stos
bound
pusha
dec
stos
mov
jo
jg
adc
add
add
mov
insl
xchg
sbb
jo
push
mov
cmp
mov
ja
mov
pop
imul
fisubl
loopne
stc
xor
sub
cmp
shrb
bound
stos
mov
xchg
add
stos
adc
jnp
xor
jmp
jb
addr16
stos
into
inc
sbb
mov
shrl
sub
into
fwait
nop
loopne
andnps
jmp
push
orb
xor
test
push
mov
mov
iret
cwtl
xchg
inc
xor
stos
imul
hlt
stos
push
mov
test
int3
pop
test
mov
add
loopne
and
dec
jmp
sub
add
dec
cmp
fidivrl
les
stos
ret
ds
sbb
push
call
fcoms
pop
xchg
mov
nop
mov
test
sbb
xor
mov
pop
mov
outsb
lods
stos
fs
dec
shrb
loope
sahf
sbb
lods
xchg
pop
jnp
stos
nop
mov
fildll
add
and
imul
pop
mov
sub
sub
sarl
imul
sbb
mov
jmp
es
inc
sbb
push
jmp
add
push
and
mov
ss
lods
out
cmpsb
adc
dec
xchg
mov
stos
ret
sub
mov
sbb
fs
test
pop
xchg
maxps
push
call
aam
je
outsl
add
aas
cld
roll
lret
xchg
pushf
loop
or
in
movsb
test
stos
inc
mov
ss
push
jmp
dec
outsl
jge
js
jnp
fs
xor
paddd
dec
jp
sub
fwait
push
movsb
mov
push
mov
push
stos
outsb
lcall
stos
dec
mov
add
into
lea
stos
rorb
mov
dec
std
stos
dec
dec
inc
lcall
jnp
call
adc
shrl
adc
xlat
fidivrs
int3
cmp
push
insb
sti
or
pop
or
jmp
jmp
cltd
test
adc
jle
pop
cld
mov
or
mov
stos
dec
sarl
hlt
lret
les
mov
dec
aam
jmp
pop
sbb
inc
mov
leave
stos
sbb
xchg
push
xchg
stos
outsl
imul
bound
adc
f2xm1
sbb
stos
pushf
adc
xchg
mov
lods
jmp
or
mov
mov
xor
mov
sub
je
add
loop
rorb
cld
dec
cmp
rclb
mov
scas
popf
leave
inc
mov
fsubrl
push
inc
call
mov
cmp
adc
iret
fwait
xor
cmp
movsb
adc
pop
stos
idiv
dec
fstpl
xor
jl
lahf
mov
and
pop
cmp
push
ficomps
xor
mov
insl
xchg
test
pushf
and
popa
push
sbb
inc
repnz
stos
mov
ret
mov
repnz
mov
movsl
lock
pop
les
es
shrb
std
jge
nop
ljmp
cmpsb
arpl
ds
aad
js
xchg
stos
mov
push
arpl
and
inc
jle
jp
adc
jb
or
jmp
xor
imul
xor
or
lods
cmpsb
dec
test
add
pop
in
mov
shrl
xchg
test
fnstcw
aas
mov
push
movsb
stos
and
aam
stos
xchg
sahf
push
stc
in
jno
addr16
outsb
test
pop
dec
add
stos
sub
sbb
js
sti
sub
lahf
lret
push
movsb
push
push
mov
fldenv
das
mov
mov
jecxz
mov
inc
mov
cltd
mov
lret
cld
or
dec
stos
pop
sub
inc
icebp
test
out
and
adc
mov
cmp
push
cli
mov
or
repnz
push
add
addr16
inc
jmp
mov
push
ficoml
fildll
sub
inc
addr16
jmp
mov
pop
aad
pop
stos
add
ret
inc
sbb
add
out
fnstenv
pop
push
outsl
jno
sarl
push
dec
arpl
adc
sti
mov
dec
mov
pusha
lock
rcrb
mov
xchg
loope
stos
cs
mov
xor
imul
int
cwtl
stos
sti
out
fimull
cmc
inc
mov
stos
adc
push
cmp
cmp
sub
mov
push
dec
daa
mov
sar
out
jns
and
stos
xor
add
mov
movsb
imul
lds
inc
inc
sti
stos
adc
in
in
mov
lcall
stos
cld
jnp
or
mov
icebp
outsb
mov
sub
xchg
movsb
arpl
das
pop
and
push
jecxz
mov
xlat
pop
stos
andb
inc
cmc
push
mov
les
mov
out
lret
cltd
cmp
stos
into
adcl
rsm
mov
rorb
jmp
scas
addr16
jne
pusha
fsubr
cmp
bound
fwait
adc
aam
imul
pop
mov
cwtl
xor
dec
out
call
mov
in
fldt
imul
popf
xor
stos
scas
pop
xor
sbbl
insl
in
jo
pusha
push
sbb
subl
xchg
leave
dec
stos
inc
loop
cmpsb
sbb
js
stos
sahf
call
cmp
mov
shr
push
out
les
repz
and
stos
push
dec
push
in
aas
imul
dec
sbb
stos
and
push
inc
shlb
cmp
ja
pop
shrb
testl
aaa
or
jne
mov
inc
jnp
mov
sets
stos
mov
jmp
imul
adc
mov
inc
out
cld
xchg
stos
out
cmp
insb
mov
jne
and
pop
cmpsb
jmp
mov
sbb
add
cmp
outsl
sbb
mov
pop
shll
stos
ret
cmp
adc
xchg
out
mov
stos
push
cltd
inc
imul
cmp
jecxz
shrl
iret
fdivs
stos
add
mov
outsl
stos
in
test
loop
push
icebp
shrl
fdivs
das
or
xlat
repz
in
fs
insb
and
mov
add
cmp
int
push
inc
adc
xchg
in
inc
stos
jg
in
add
add
stos
push
sub
dec
lea
stos
jge
lret
add
push
xchg
ret
adcb
nop
sbb
sahf
and
jle
pop
test
adc
in
shrl
daa
pop
pop
jge
mov
clc
and
test
jmp
pop
mov
stos
or
fsubp
testl
lcall
push
ret
shlb
jge
test
ja
push
jmp
test
add
xchg
cmp
mov
jge
push
cmp
add
cmpsb
mov
ds
rclb
addr16
lcall
inc
cmp
inc
stos
mov
mul
out
mov
pop
mov
in
in
mov
xor
ret
stc
imul
stos
sbb
add
imul
mov
dec
outsb
clc
stos
sbb
and
pop
and
mov
mov
ljmp
sbb
inc
imull
ss
aas
fucomip
xor
cli
out
dec
ret
cmpsl
nop
jmp
adc
fldenv
push
xchg
xchg
stos
hlt
and
or
xchg
and
mov
int
sti
ja
stos
outsl
add
inc
mov
repz
divb
inc
xor
shlb
insl
sbb
ds
xor
mov
jbe
stos
in
rolb
or
jecxz
inc
cltd
cmpsb
movsl
jo
nop
bound
call
pop
fwait
iret
test
xchg
push
stos
fildl
mov
popf
sub
xor
jns
arpl
xlat
insl
cs
mov
aaa
pop
stc
inc
xchg
lods
stos
in
mulb
inc
stos
aad
incl
and
jno
shll
and
xor
loope
test
mov
mov
loopne
xchg
dec
pushf
stos
leave
push
mov
lea
sub
cltd
out
scas
stos
test
push
dec
mov
out
mov
mov
mov
xor
iret
mov
loope
add
adc
push
cmc
shrl
aas
mov
lret
dec
pop
xchg
mov
scas
push
stos
xor
aad
daa
jne
cltd
jmp
xchg
fsubrl
cmp
stos
sahf
imul
fidivs
or
repz
stos
jno
mov
jle
xchg
lock
lret
add
jae
sub
aad
xchg
adc
cmp
sahf
js
outsl
cmp
loopne
aaa
jmp
fsubrl
inc
xchg
popf
out
xlat
push
inc
xchg
dec
daa
imul
xchg
mov
mov
adc
daa
pop
leave
ljmp
xor
dec
stos
das
test
rcl
stos
lds
inc
pusha
cli
stos
lods
inc
ja
jo
lahf
stc
stos
jmp
mov
out
stos
sbb
cmp
pop
and
ljmp
cmp
sub
stos
in
xor
sub
test
push
mov
jmp
dec
pop
mov
je
ret
pusha
add
push
mov
sub
push
stos
lods
rcrb
inc
add
adc
ja
scas
adc
sub
stos
sahf
xchg
mov
and
pop
sbb
xchg
stos
int3
xor
movsb
adc
cmp
jb
mov
stos
add
lock
inc
xchg
and
jb
shl
fidivrl
stos
pop
push
lret
out
jmp
lock
loopne
in
jbe
bound
push
dec
push
stos
scas
insl
add
sbb
call
lret
jmp
in
fsts
aas
and
lock
das
decb
stos
repnz
cmp
add
xor
mov
int
adc
stos
insl
fistpl
jg
push
andb
test
add
adc
fcmovne
arpl
mov
movsl
mov
sbbb
mov
xchg
pop
outsl
sbb
pusha
insb
int
imul
push
stos
mov
rcll
test
clc
into
jno
lock
push
int
add
mov
stos
adcl
sbb
pop
stos
iret
loopne
xchg
push
or
sub
or
jle
cli
scas
adc
fadd
or
stos
inc
adc
jmp
push
pop
ss
outsl
pop
lret
jle
cmp
mov
imul
clc
mov
dec
in
insb
decl
stos
pop
in
push
push
fnstcw
pop
nop
mov
mov
or
push
ljmp
stos
ds
dec
scas
out
test
xor
and
js
sub
push
scas
push
xor
xor
loop
test
stos
inc
arpl
jp
stos
dec
imul
pop
fcomi
sbb
dec
jecxz
dec
in
xchg
stos
imul
testl
sbb
xchg
cmc
mov
and
xchg
mov
test
mov
stos
add
mov
daa
lahf
jg
and
mov
mov
fisubrl
lahf
shll
stos
int3
xchg
mov
cmp
sbb
mov
stos
add
xchg
stos
inc
das
ret
push
pop
push
sub
cmpb
push
mov
in
loopne
adc
sub
cltd
push
pop
sbb
pop
int
std
inc
stos
push
jecxz
out
in
icebp
stos
stos
pop
sub
ja
bound
imul
scas
xchg
mov
loop
inc
out
sahf
outsb
lcall
iret
mov
popa
push
stc
xchg
mov
xor
out
popa
mov
adc
pop
int3
outsl
scas
mov
push
fwait
lret
jecxz
movsb
add
mov
push
or
mov
and
imul
inc
xor
mov
into
inc
inc
add
dec
js
in
ret
jmp
test
in
ljmp
push
mov
add
rclb
lods
mov
sub
stos
frstor
gs
jmp
scas
daa
imul
xchg
fnstcw
fistps
jo
mov
inc
fstpt
stos
mov
jae
add
stos
inc
out
inc
inc
inc
call
sbb
dec
xchg
ret
icebp
jmp
subb
outsb
mov
sub
imul
clc
mov
jmp
mov
push
int
mov
adc
cmp
into
cmpsl
mov
jns
jo
sbb
outsb
sbb
cmc
mov
ret
stos
xchg
rorb
pop
cltd
cmp
mov
push
jmp
icebp
pop
imul
mov
int
stos
stc
dec
xchg
inc
cmp
mov
loop
mov
mov
pop
test
stos
rclb
xchg
repz
jecxz
popa
mov
in
mov
push
and
cltd
fisttpll
ljmp
in
out
inc
jecxz
pop
jl
test
fwait
and
dec
inc
or
jp
or
stos
test
lahf
dec
ret
cltd
stos
imul
stos
jmp
cmc
cmp
rolb
push
mov
push
shr
or
sbb
mov
stos
sbb
pop
mov
add
in
dec
in
and
stos
inc
mov
inc
and
lea
adc
xor
cmc
or
loop
pop
xchg
stos
cmp
enter
xor
adc
push
ret
dec
lret
cmpsl
pop
and
nop
mov
push
pop
sub
mov
out
stos
cs
sbb
repz
stos
imul
cmp
lods
stos
jge
push
mov
push
or
stos
pop
sbb
es
and
inc
stos
inc
je
scas
lea
stos
and
push
imul
stos
addr16
sarl
cmpsb
imul
adc
add
jmp
repz
test
push
xchg
ljmp
lods
aas
jns
stos
adc
xchg
inc
fmulp
out
cli
pop
jl
adc
add
orl
in
subl
or
mov
sub
iret
movsl
clc
jp
mov
mov
daa
mov
mov
pop
scas
test
insl
ret
fldcw
xchg
rclb
mov
stos
loope
and
or
stos
and
jno
ret
test
aad
push
or
jae
mov
daa
loop
jp
and
stc
test
lea
stos
loopne
mov
stos
subl
mov
cmpsl
add
xor
xchg
sub
add
push
out
pop
test
lret
mov
in
inc
stos
or
cltd
or
mov
jl
pop
mov
and
or
push
in
inc
push
stos
sub
jo
jg
les
pop
pop
xchg
jae
sbb
fldenv
inc
xchg
cmp
test
or
stos
xor
nop
cmp
jmp
int3
in
test
ret
test
dec
stos
fsub
pop
fucomp
mov
mov
or
xchg
fnstenv
jb
xor
stos
inc
adc
push
mov
push
mov
in
cmp
jns
xchg
aas
in
lea
xchg
into
push
mov
xchg
cli
xchg
stos
insl
push
inc
stc
mov
add
repnz
fistpll
cltd
fidivl
lahf
mull
out
in
push
jle
iret
mov
sti
xor
aaa
push
cmpsl
pop
mov
push
jle
div
and
rclb
pushf
addr16
jmp
repz
gs
pop
mov
inc
inc
xchg
inc
roll
stos
adc
out
cmpl
xchg
insb
add
push
lret
decl
les
xchg
push
test
out
push
cmpsb
stos
jp
mov
stos
lods
je
add
adc
sarb
aas
lods
repnz
callw
add
rolb
pop
mov
dec
mov
xchg
mov
pop
cmp
pusha
cmpsl
into
jmp
testl
ret
aad
stos
test
mov
les
scas
sbb
pop
sub
stos
mov
and
lock
mov
mov
cltd
rclb
lcall
lods
inc
stos
lret
xor
lods
movsl
in
decl
jns
into
ss
mov
mov
or
mov
popf
mov
inc
repnz
xchg
dec
sbb
xor
mov
sub
stos
bound
pop
stc
enter
lods
jae
add
loopne
out
scas
mov
and
sub
stos
mov
sub
enter
mulb
aas
mov
fwait
jle
imul
daa
bound
pop
xor
rcrb
adc
cmp
outsb
jnp
stos
fcomip
push
and
dec
bound
mov
push
sub
lods
xor
sbb
aaa
stos
lock
lods
pop
inc
addr16
popf
and
adc
scas
ljmp
rorl
pop
mov
adc
sub
stos
mov
scas
insb
dec
cmpsb
stos
xchg
outsl
pop
inc
fistps
cs
stos
rcrl
arpl
xor
cli
ss
stos
leave
int3
jns
and
xchg
cmpsl
add
xchg
roll
pop
imul
sub
and
loopne
sub
hlt
div
mov
out
dec
fld
scas
cld
adc
lea
inc
daa
add
mov
sbb
test
add
adc
bound
test
jne
enter
dec
fstpt
mov
stos
pushf
and
adc
sbb
int3
dec
and
mov
stos
sub
adc
sub
stos
ss
sub
orl
fwait
xchg
cwtl
mov
xor
add
adc
fcmovb
iret
sbb
call
jp
and
xchg
stos
adc
push
mull
jmp
ja
mov
sbb
mov
stos
cmpsl
add
pop
dec
stos
hlt
cmc
xchg
push
ljmp
loopne
xchg
and
stos
int
cmc
fisubrs
pop
jb
stos
fdivrl
mov
push
sub
out
inc
enter
fadds
jmp
sub
dec
out
xchg
mov
or
inc
fsubs
pop
ja
xchg
mov
mov
shll
dec
or
sbb
sub
mov
arpl
dec
jo
out
push
xchg
imul
fcomp
call
jno
jns
mov
iret
mov
cltd
mov
out
ljmp
clc
xchg
orb
push
test
push
push
fidivl
rorl
add
icebp
xlat
xor
mov
mov
jle
ljmp
mov
dec
lret
into
std
inc
stos
or
mov
inc
and
gs
ret
lahf
or
stos
jbe
ret
idivb
xor
cli
jg
or
mov
mov
stos
sbb
cld
adc
js
pushf
sbb
dec
sub
dec
mov
subl
push
mov
mov
inc
or
stos
add
and
out
and
xchg
in
dec
mov
mov
lcall
sbb
nop
test
inc
pushf
fsubs
daa
in
xchg
mov
dec
les
sbb
dec
iret
rclb
adc
add
out
dec
icebp
ror
fmuls
and
mov
sbb
mov
repz
push
test
jno
lahf
pop
stos
lods
mov
arpl
lods
xchg
imul
scas
in
stos
movsl
cmp
pop
fstps
inc
stos
out
cmp
fs
jmp
sub
addr16
sahf
cs
aad
out
jmp
adc
stos
cmpsb
imul
xor
push
sahf
daa
stos
cli
mov
jo
arpl
add
push
lods
jbe
or
lret
nop
inc
jnp
inc
mov
sar
cmp
ss
jmp
jmp
mov
test
xor
xchg
gs
repz
inc
push
lds
fisttpl
sarb
mov
sub
inc
xchg
mov
je
sub
xor
jmp
dec
inc
aaa
repnz
stos
jle
rcll
imul
stos
sbb
dec
das
xor
dec
sub
ss
xchg
gs
stos
mov
and
popf
stos
cmp
iret
stos
or
inc
popf
and
mov
lcall
ja
in
sub
and
flds
add
les
dec
js
imul
in
popa
lahf
stos
lds
xor
cmp
rol
pop
mov
xchg
fldt
sbb
push
or
divb
xor
lods
pushf
daa
icebp
addr16
push
popa
pop
xchg
adc
stos
sub
inc
push
int3
mov
andb
mov
icebp
add
jl
xchg
mov
mov
push
jne
sbb
mov
daa
mov
inc
popa
imul
insl
sti
mov
int
stos
jb
xor
aaa
or
jnp
ret
or
mov
add
jmp
roll
mov
xchg
nop
push
aam
adc
xor
lahf
mov
cmpb
sbb
daa
aaa
or
rol
stos
jecxz
xor
sub
ret
pop
stos
gs
mov
cs
lret
cltd
scas
add
cmpsl
in
stos
xor
dec
fucomip
lret
test
test
cli
jl
les
push
adc
fwait
addr16
movsb
sbb
add
stos
push
adc
cwtl
inc
lods
repnz
daa
and
inc
sbb
push
mov
stc
in
push
repz
and
loope
cwtl
cmp
adc
xor
es
icebp
into
dec
inc
out
stos
mov
dec
cmc
stos
andb
xchg
jle
std
sub
mov
jp
sbb
je
jl
jb
adc
inc
into
test
mov
arpl
insb
xchg
fwait
jg
stos
xchg
loopne
mov
stos
push
push
icebp
insl
js
xlat
popf
stos
rclw
inc
stos
or
mov
or
test
jns
jg
lods
aaa
fistl
clc
push
xchg
pushf
sahf
mov
sub
arpl
mov
stos
cmp
adc
clc
jl
adc
jmp
out
pop
or
sub
sbb
in
and
mov
jns
stos
outsb
push
call
fsubrl
imul
stos
add
mov
sbbb
clc
or
pop
setae
stos
out
dec
out
fistps
jb
ret
movb
jae
mov
jle
stos
push
xor
lock
jmp
mov
adc
sub
mov
aaa
imul
stos
decl
jns
pop
mov
scas
jle
cmp
fistpll
sti
out
mov
jmp
or
mov
push
notl
outsl
adc
push
mov
imul
mov
stos
mov
insb
adcb
cmp
notb
stos
fcoml
jbe
jmp
aas
rclb
dec
popf
cs
in
fwait
lahf
lock
frstor
scas
mov
and
jmp
adc
jmp
jp
lods
dec
add
ds
xchg
pop
stc
push
jg
mov
xor
or
in
stos
dec
fwait
sbb
mov
in
push
mov
enter
or
push
in
cmp
stos
push
sub
hlt
movsb
aas
outsl
pop
addr16
imul
das
stos
jne
push
sbb
and
daa
cs
adc
stos
pop
dec
xor
ficoms
stos
imull
fnstsw
insb
out
lahf
dec
stos
fidivs
push
mov
xchg
nop
test
dec
cmpsb
lds
mov
insb
stos
sub
out
xor
push
mov
loopne
pop
int
jmp
sbb
lcall
popf
mov
movsb
clc
inc
mov
test
stos
aam
mov
cmpsl
stos
mov
es
push
popa
std
inc
mov
sub
stos
add
and
arpl
mov
loop
stos
divl
test
clc
das
jnp
xor
push
sub
and
mov
sbb
stos
xchg
adc
adc
dec
ljmp
xchg
lds
mov
rolb
add
mov
and
fucomi
mov
add
cmc
fisubrs
add
pushf
inc
fldcw
mov
mov
lods
and
mov
mov
mov
rcll
push
jmp
jp
mov
sbb
xchg
pop
mov
repnz
out
stos
mov
imul
fnstsw
stos
rorb
sub
pop
aas
ss
stos
sbb
js
cwtl
pop
cmp
stos
and
pusha
push
int3
mov
outsl
mov
dec
push
stos
jp
push
dec
jnp
ss
mov
xchg
js
jae
and
std
mov
imul
inc
sti
mov
cmp
cltd
nop
data16
fldt
xchg
and
ret
cmpsl
inc
cmc
jmp
cmp
imul
add
jbe
arpl
jns
pop
fldcw
test
sti
in
mov
jbe
sbb
orb
mov
movsb
sti
cmp
insb
and
loope
and
xor
jbe
scas
and
mov
or
sbb
in
cwtl
cld
xlat
stos
loop
aaa
fidivrl
mov
in
xor
aam
push
sarb
xchg
leave
sub
mov
dec
or
and
scas
sub
jmp
pushf
push
pminub
stos
cmpl
fadds
scas
lahf
xor
and
stos
mov
add
jecxz
imul
mov
mov
mov
repz
mov
aad
add
and
mov
stos
and
fdivrs
mov
mov
rorl
test
dec
sub
stos
add
out
jmp
and
jb
jecxz
sub
call
xchg
aaa
push
jmp
push
or
xchg
dec
jne
xchg
push
mov
adc
insb
movsl
xchg
mov
test
lret
fstl
daa
loope
sub
out
dec
cs
jne
xchg
push
mov
cmpsb
call
fwait
mov
pop
stos
xor
icebp
xchg
sub
pop
sbb
xor
out
mov
pop
jl
sub
in
and
fdivr
inc
mov
outsb
sahf
pop
xchg
push
int3
loopne
cmc
adc
push
pop
cwtl
push
xchg
sti
loopne
stos
dec
or
lret
or
aas
jp
add
mov
gs
mov
mov
stos
test
std
mov
and
and
sub
cmpsl
mov
cmp
int
mov
pop
mov
lods
mov
inc
stos
push
mov
push
xchg
push
mov
cwtl
insb
add
stc
js
test
sub
add
jb
cltd
and
cmp
sbb
stos
int
faddl
and
out
iret
scas
fwait
out
sbb
mov
stos
inc
das
scas
in
xchg
jg
addr16
add
mov
jnp
stos
lds
shlb
cld
jle
add
or
imul
pushf
pop
push
xchg
or
push
cs
stos
rcrl
sbb
fisubrs
mov
adc
push
lods
fwait
pop
sub
stos
cmpsb
xchg
pop
mov
hlt
stos
push
sbb
inc
adc
or
cmpsl
ds
mov
push
arpl
inc
mov
insl
or
jae
stos
lret
mov
fmulp
sahf
mov
stos
test
jecxz
or
add
ss
dec
ss
subl
adc
in
or
lahf
fs
cwtl
jne
xlat
stos
cmpl
or
add
inc
jns
stos
mov
hlt
inc
cmp
sub
imul
jle
xor
nop
stc
lods
test
incl
stos
cld
sub
mov
jl
enter
loop
jp
rcrb
into
fldt
mov
sbb
pop
nop
push
mov
cmp
stos
pusha
ret
imul
xchg
aam
ja
movsb
stos
lahf
mov
aad
stos
inc
mov
push
inc
stos
inc
test
movsb
add
mov
imul
pop
dec
mov
and
ret
push
fldt
mov
movsl
stos
inc
xchg
scas
mov
xchg
loopne
push
inc
aaa
jbe
mov
and
inc
std
pop
cltd
stos
adc
ja
aaa
inc
stos
in
push
or
scas
mov
in
mov
ret
stos
mov
out
test
int3
and
test
mov
dec
lahf
or
stos
scas
jmp
add
push
jno
xchg
jecxz
xor
jmp
insl
ret
in
ss
mov
lods
sbb
and
mov
fildll
xchg
imul
mov
push
sub
inc
and
jnp
sub
sub
pop
stos
mov
jmp
ljmp
mov
mov
cmp
dec
addl
test
fwait
dec
mov
xor
fs
xchg
mov
dec
jl
ljmp
ss
push
mov
cmpsl
stos
andb
fld
lea
stos
pop
sub
jne
arpl
mov
add
lods
test
into
sub
mov
imul
je
aam
dec
mov
xor
movq
push
scas
mov
pop
inc
ja
adc
adc
popa
stos
add
cli
fwait
xchg
stos
dec
and
xor
imul
orl
loop
popa
imull
inc
mov
xor
stos
je
and
mov
pop
fisttps
je
stos
test
adc
mov
stos
push
xor
stc
or
ljmp
mov
sbb
inc
or
xchg
push
xchg
arpl
mov
jmp
pop
addr16
int3
faddl
xchg
sub
and
push
fwait
cmpsl
mov
stos
dec
ficoms
push
stos
js
in
cmpsl
ss
mov
mov
lcall
xor
fnstsw
rclb
stos
jg
fstps
xor
lcall
push
stos
movsl
cmpsl
xchg
or
stos
ja
push
imul
mov
inc
jg
int3
out
jns
dec
sbb
stos
mov
bound
stos
fwait
jle
lret
push
mov
jo
cmpsl
test
repz
inc
sub
ljmp
push
xor
sub
enter
sub
pop
cwtl
mov
sti
test
mov
dec
sbb
jns
mov
dec
mov
xchg
arpl
cwtl
mov
dec
dec
loope
mov
fdivrl
dec
xchg
pushf
lods
add
push
scas
stos
aad
loop
push
lahf
daa
stos
cmp
imul
stos
add
pushl
jp
mov
jb
aas
push
push
aam
stos
sub
fs
or
fwait
add
mov
sub
mov
push
arpl
stos
dec
je
movsl
mov
add
stos
aaa
fistl
popa
xchg
stos
and
push
dec
pop
testl
in
mov
sbb
out
mov
daa
lea
scas
aam
icebp
adc
lcall
dec
cmp
mov
dec
lock
mov
xor
or
mov
stos
sub
push
test
add
xlat
pop
stos
lds
adc
adc
mov
arpl
or
outsl
and
inc
stos
dec
pushf
sbb
stos
xor
push
jle
int
aas
fs
data16
adc
cmp
mov
data16
and
loope
push
icebp
sub
insb
jno
mov
pop
push
jle
mov
bts
sub
xor
fcoml
aam
push
icebp
cmp
mov
mov
stos
into
mov
mov
cmpsl
jb
out
cmp
stos
test
lock
stc
xchg
test
clc
subb
xor
inc
imul
inc
jns
stos
pushf
cmc
jecxz
in
arpl
sub
out
jmp
fstl
jnp
repnz
sbb
pcmpgtb
stos
adc
or
sbb
dec
stos
add
or
push
mov
rclb
mov
stos
outsb
sub
dec
add
stos
xor
cmp
cmpsb
aaa
jne
stos
das
insb
add
sub
xor
mull
sarl
pop
dec
cwtl
orl
nop
cli
jp
xor
stos
add
movsl
jl
cwtl
sub
stos
xchg
sbb
dec
fxch
and
xor
cmpsb
xchg
outsb
mov
lret
ficomps
pop
add
negl
daa
lret
pop
lods
cmp
push
shr
mov
mov
inc
sbb
xchg
test
sbb
mov
idivb
iret
pop
nop
out
push
mov
sbb
and
mov
xchg
pop
out
call
add
lea
or
cmpsb
stos
xchg
or
inc
in
push
das
aam
xor
jge
dec
cli
mov
push
add
int
push
xchg
mov
fistl
sub
jb
xchg
movsb
push
dec
sbb
jmp
insb
fsubl
mov
or
mov
dec
dec
push
inc
jae
pushf
push
stos
dec
lds
add
mov
stos
mov
dec
movsb
push
cmp
xchg
jl
sbb
hlt
mov
sub
add
or
jecxz
mov
sbb
mulb
push
and
ljmp
mov
mov
inc
loopne
stos
dec
outsl
pop
loope
sbb
aaa
or
popf
mov
push
mov
lahf
jp
cltd
xor
inc
gs
add
out
mov
jmp
in
push
xchg
cwtl
or
loop
pop
cs
mov
jp
mov
mov
and
lahf
mov
stc
push
add
xlat
into
mov
mov
out
cmpsl
aam
or
dec
pop
cs
int
lcall
scas
cld
fwait
pusha
push
stos
pop
pop
dec
jge
lods
repnz
popa
fisttps
in
mov
loop
imul
dec
dec
push
shrl
push
bound
fdivs
inc
mov
dec
sbb
push
adc
scas
xchg
nop
cwtl
stos
xor
bound
sbb
add
mov
shl
xchg
pop
mov
jo
xorl
mov
add
fs
adc
stos
cmc
push
adc
lods
fwait
aaa
push
lret
cmpsb
imul
add
movsb
sbb
xchg
jo
pop
incb
push
pop
push
xor
notb
or
add
in
and
sbb
test
xor
popf
and
mov
stos
mov
xor
push
sub
xchg
nop
out
jge
int
mov
adc
insl
stos
js
lods
cmp
lods
in
dec
mov
enter
icebp
jmp
or
push
sahf
dec
sub
cmp
sahf
aas
daa
js
fsts
and
stc
xchg
lret
hlt
out
cltd
lcall
stos
add
mov
xchg
dec
fidivl
mov
jle
shlb
xor
stos
sbb
ja
pop
mov
stos
loopne
xchg
icebp
xchg
mov
push
loop
add
movsl
mov
sbb
stos
fldl
and
mov
adc
cwtl
xchg
jmp
in
je
imul
pop
fwait
insl
scas
pusha
dec
push
or
sbb
decl
negl
jmp
fs
cmc
dec
rcrl
mov
jnp
stos
adc
inc
xor
outsl
sbb
jl
jmp
pop
pop
pop
popl
addr16
insl
loopne
in
shlb
mov
stos
inc
andl
stos
cmp
and
pop
decb
stos
scas
adc
mov
sub
loop
push
shlb
sbb
fisubrs
cmp
dec
mov
xor
jb
call
in
dec
arpl
pop
ja
stos
xchg
ffreep
mov
lods
inc
sbb
cs
mov
and
fsubrs
addr16
sbb
push
pop
push
xchg
cmc
and
mov
stos
dec
adc
das
push
stos
nop
negl
add
fiadds
cli
sti
stos
add
cmp
lods
push
daa
add
aam
test
hlt
mov
xchg
stos
push
and
adc
jnp
arpl
mov
push
dec
mov
mov
xchg
aaa
pop
mov
inc
imul
jecxz
dec
std
fmulp
pushf
mov
inc
xchg
push
mov
dec
stos
push
hlt
add
lret
in
cmpsb
push
jl
mov
ljmp
add
out
cmp
mov
ljmp
aaa
jns
aaa
stos
les
mov
mov
inc
stos
mov
insb
shll
out
bound
jb
in
dec
sub
stc
lods
insb
cmp
ja
loope
pop
push
xor
movsl
das
pop
jmp
in
dec
nop
pushf
fwait
jns
mov
ds
mov
fisubs
imul
adc
stos
mov
mov
stos
xchg
cmp
stos
push
push
rorb
sbbl
fdivl
daa
in
pop
dec
stos
mov
xor
stos
pop
mov
sbb
stos
jmp
sub
push
cmp
fwait
imul
stos
jbe
mov
push
jmp
ret
dec
cld
xchg
stos
or
pop
fucomip
push
adc
sub
stos
mov
or
mov
stc
stos
inc
test
mov
mov
xchg
mov
mov
xchg
fldt
sbb
adc
mov
adc
xlat
es
insb
xor
lea
stos
sub
loopne
add
sub
dec
in
cmp
mov
test
orl
push
movsb
dec
mov
push
movl
cld
adc
pop
das
inc
push
pop
push
xchg
je
stos
mov
into
xchg
lea
aas
scas
andl
je
fwait
mov
lods
stos
and
add
stos
and
inc
movsl
cmp
mov
stos
inc
lock
imul
ret
xor
aad
push
shrb
shrl
sub
add
je
xor
xchg
jnp
push
insb
lret
mov
int
stos
mov
or
push
addr16
imul
movsb
dec
add
loope
test
xchg
sbb
stos
cltd
sub
enter
stos
mov
dec
ret
cmpsl
xchg
cmp
stos
aad
lods
shll
insb
stos
add
rcrb
stos
jae
dec
cs
mov
mov
fucomip
jg
stos
hlt
mov
pop
and
dec
stos
test
dec
adc
push
cmpsl
and
aaa
int3
mov
mov
gs
xchg
lds
andb
stos
test
push
push
imul
sbb
stos
sahf
jle
xor
push
scas
shr
icebp
inc
es
jecxz
xchg
mov
cwtl
xor
dec
push
stos
jae
int
popa
leave
mov
lds
pop
scas
fistl
xchg
mov
jb
xchg
mov
es
jp
stos
xor
and
cld
sbb
mov
inc
xchg
pop
stos
sub
and
stos
xor
pop
stos
and
pop
sbb
stos
or
ficoms
jnp
sbb
stc
sub
push
xor
inc
repnz
xor
mov
sbb
imul
push
push
stc
stos
outsb
dec
lods
pop
pop
sub
xor
lea
push
mov
stos
in
xchg
or
test
adcb
imul
xor
movsb
stos
addl
leave
stos
jo
dec
push
mov
dec
in
out
std
popa
push
stos
jnp
fdivrp
jmp
popa
es
adc
cld
call
je
fnstenv
add
or
stos
adc
loop
mov
jns
dec
mov
dec
mov
jno
stos
adc
fisttpl
xchg
ljmp
xor
and
or
stos
leave
mov
cmc
mov
fwait
test
repz
jmp
stos
jne
je
lods
push
movsl
nop
in
out
inc
mov
and
jno
or
rorl
lcall
ret
sti
mov
xor
mov
adcl
xor
loop
jmp
or
xor
stos
cld
xchg
cltd
adc
jecxz
mov
fs
mov
cmp
cmpsb
mov
sbb
cmp
inc
dec
adc
and
mov
rcrl
push
push
shlb
cltd
xchg
enter
xchg
lods
sbb
les
and
and
lea
imul
mov
sub
jo
mov
mov
cmp
aad
stos
aaa
jae
out
shlb
stos
sub
or
stos
decl
sub
xor
stos
or
push
fisttpl
leave
lods
cmpl
add
cltd
repz
sbb
push
lcall
inc
mov
stos
mov
clc
push
pop
stos
ljmp
adc
push
push
mov
xlat
dec
mov
mov
adc
addr16
mov
push
xchg
or
stos
stos
in
inc
imul
dec
mov
sub
test
xchg
stc
fwait
stos
jnp
add
pop
xor
push
jbe
stos
jnp
mov
ljmp
add
mov
sbb
or
pop
loope
push
jmp
jnp
icebp
cmp
stos
adc
push
cmp
jmp
sbb
pop
gs
inc
mov
stos
rcr
sub
out
stos
out
dec
adc
xchg
adc
push
xchg
add
xorb
or
scas
addr16
movsl
push
add
lret
stos
dec
arpl
stos
jle
sub
inc
stos
cpuid
xchg
icebp
pusha
sbb
mov
jmp
stos
ds
adc
fldt
jnp
stc
push
stos
dec
push
pop
sub
stos
sahf
cmp
outsb
sub
jno
out
stos
scas
int3
cs
outsl
push
stos
testb
xchg
mov
mov
es
enter
lods
popa
mov
push
mov
push
rcr
scas
xchg
subl
mov
xor
lahf
movsl
and
rclb
inc
or
mov
pusha
shl
dec
testl
pop
imul
imul
lret
mov
adc
lahf
pushf
shll
inc
dec
shlb
aam
mov
or
arpl
and
mov
cmp
xchg
pop
sub
stos
ret
test
stos
or
je
mov
inc
movsb
mov
js
mov
mov
in
test
adc
fsubl
stos
and
jae
ret
lahf
stos
adc
push
jno
stos
cwtl
ss
add
enter
lds
arpl
fstpt
mov
inc
mov
inc
push
mov
cmovg
pushf
stos
push
stos
push
xchg
lods
sbb
daa
dec
cmp
xchg
xor
mov
inc
dec
rcl
shl
jb
lock
jae
lret
mov
xor
xor
jno
ja
fwait
xchg
movsb
rcll
scas
mov
xchg
mov
jns
xor
push
mov
jnp
cld
std
dec
mov
jl
dec
xchg
mov
cmc
repz
mov
call
scas
not
push
out
sub
hlt
mov
mov
loopne
fcomi
rcrb
imull
xchg
sbbb
xchg
push
inc
cwtl
repz
stos
mov
iret
jge,pt
jnp
sub
sub
add
mov
dec
call
pop
xor
xor
inc
rcrl
sub
cmc
mov
cmpsl
sahf
cltd
adc
pusha
stos
loope
mov
rorb
cmp
mov
dec
xchg
or
repz
divb
ljmp
and
repnz
inc
stos
jp
push
lret
pusha
cwtl
stos
test
in
pop
and
sbb
push
lret
dec
mov
dec
stos
and
jmp
out
push
fidivs
xchg
xchg
stos
iret
jp
adc
div
aam
test
dec
fadds
arpl
push
lods
ja
mov
adc
stos
ja
test
movsl
into
ss
outsb
pop
stos
add
jl
lds
or
push
mov
stc
mov
out
push
outsb
push
xchg
iret
cwtl
pusha
stos
mov
dec
aaa
mov
jo
call
and
jmp
stos
rcrl
lods
setge
pop
inc
stos
repnz
mov
cli
js
dec
stos
out
mov
or
jl
in
push
bound
daa
gs
push
cmp
psubsb
cmp
xchg
jge
pop
jl
inc
lret
ja
fwait
inc
dec
mov
mov
test
mov
stos
mov
jge
push
bound
and
fsubl
fwait
dec
add
stos
pop
cmp
ficoml
mov
stos
aaa
jle
jae
add
sub
stos
add
adc
arpl
in
cltd
stos
or
dec
and
or
stos
jp
mov
loopne
cmp
xor
into
test
pop
in
into
cmp
xor
xor
push
mov
ficomps
andl
repnz
mov
inc
std
fnstsw
std
insl
fs
lock
lods
arpl
fisttpl
inc
dec
cld
dec
push
cmp
stos
lahf
loopne
mov
xchg
jmp
sarb
gs
inc
xchg
jnp,pn
imul
xchg
mov
cmp
mov
stos
dec
dec
ljmp
fwait
ss
pusha
aaa
repnz
daa
adc
dec
and
mov
js
insb
lods
xor
mov
shr
push
cmpsb
ret
arpl
mov
mov
cs
clc
stos
pop
jp
jg
test
out
dec
orb
dec
repnz
or
push
mov
rcrl
fs
xchg
pop
lock
test
je
xor
mov
inc
loopne
addl
fwait
popa
and
adc
jne
push
addl
stos
inc
mov
lds
mov
nop
pop
fidivrs
fmuls
hlt
mov
mov
cmp
mov
sub
push
push
stos
daa
push
dec
les
jnp
cltd
adc
xchg
xor
ljmpw
sahf
ret
xchg
xchg
fisubrs
aad
mov
jmp
insl
sbb
outsl
imul
or
mov
or
sbb
test
std
mov
insl
mov
xor
or
scas
fidivrs
nop
stos
push
dec
mov
aas
push
int3
stos
dec
jle
dec
pop
jg
ja
das
out
stos
enter
mov
stos
ret
xchg
or
jmp
mov
scas
jne
fmull
stos
pop
pushf
add
xchg
insb
add
cli
cmp
fidivl
lea
mov
sbb
pop
test
dec
ljmp
lock
stos
xlat
stos
mov
fimuls
add
test
or
sub
ja
hlt
stos
dec
aad
out
mov
xchg
test
shll
mov
push
inc
ret
es
jnp
stos
enter
mov
sbb
pusha
push
ja
mov
sbbl
inc
popf
cmpsl
arpl
es
inc
mov
xchg
xor
imul
dec
lret
jae
rolb
mov
outsl
push
cmp
mov
in
jmp
pop
push
cmp
add
fstl
add
or
stos
jl
inc
loopne
mov
sub
sub
negb
and
mov
pop
icebp
xchg
or
pop
inc
mov
aad
sbb
adc
jns
je
stos
lea
jp
adc
mov
jecxz
iret
ret
stos
cmpb
cltd
add
mov
movsb
dec
dec
lcall
sbb
daa
cld
xchg
es
mov
push
sbb
mov
ds
mov
sub
xor
xchg
loop
mov
adc
icebp
test
neg
stos
call
bound
imul
pop
stos
or
int3
push
jle
cmc
loopne
cld
or
mov
mov
addr16
in
cmpsb
mov
ret
sti
mov
stos
sbb
cmc
rol
lcall
or
in
mov
mov
es
stos
testl
icebp
cmp
pop
xchg
pop
sub
scas
mov
popf
or
js
insl
pusha
icebp
xlat
sub
sub
jo
stos
dec
mov
xchg
stos
ja
cmp
or
les
sub
jns
loop
fsubrs
cmc
subl
or
es
cmp
mov
jle
iret
scas
stos
ret
mov
jne
stos
adc
addb
adc
and
pusha
and
das
lahf
je
mov
aaa
mov
xchg
xchg
mov
stos
js
or
rorb
push
stos
sub
sbb
mov
cli
out
mov
adc
push
dec
imul
lcall
dec
xchg
fstl
xchg
or
std
scas
ljmp
xor
mov
lock
icebp
inc
iret
ds
mov
test
jne
cli
popf
add
mov
sub
rorl
stos
fidivs
fs
rorb
xchg
loope
fsubrs
lds
or
mov
clc
fstl
cmc
add
test
imul
mov
jnp
fisubrs
jae
mov
stos
jl
outsb
repz
pop
stos
hlt
test
out
and
xchg
cs
ds
call
dec
sub
test
addr16
sahf
xchg
mov
mov
cmpsb
and
sub
ljmp
jne
lret
sub
in
jnp
xor
aas
pop
xchg
jae
inc
pop
jmp
cmp
mov
or
pop
stos
daa
and
hlt
sub
mov
push
adcl
add
dec
subb
outsl
sub
rcrl
xor
imul
aas
mov
stos
in
add
jb
mov
xor
stos
aam
push
mov
jne
nop
test
stos
sahf
and
and
ds
stos
add
mov
jns
je
scas
ja
sbb
mov
dec
mov
dec
xchg
test
imul
and
push
mov
adc
xorl
mov
sbb
imul
arpl
cmpb
fldcw
imul
stos
fisttps
push
outsb
gs
mulps
mov
dec
push
pop
and
std
subb
mov
mov
call
into
movsb
cli
andb
xor
xchg
movsl
mov
int
test
repnz
fs
stos
fisttps
dec
stos
dec
jns
sub
mov
ja
les
or
lret
iret
mov
repz
xchg
cmp
in
cmovb
add
xchg
xor
cltd
push
push
push
lods
test
lds
dec
cmpsl
jns
in
jmp
fsubs
scas
mov
sub
fbld
mov
in
les
repnz
xchg
stos
xchg
lods
and
cs
stos
fwait
or
pop
jmp
sub
nop
adc
outsb
xchg
push
xchg
gs
sbb
imul
rcrb
sbbl
push
push
pop
push
dec
mov
xchg
push
out
mov
dec
shrb
sbb
mov
push
in
pushaw
rclb
popf
pushf
mov
rorl
stos
stos
data16
arpl
mov
cmp
mov
add
lret
xchg
test
pop
stos
inc
jg
dec
lcall
xchg
notb
cld
fwait
test
mov
out
cmove
mov
gs
mov
imul
adc
mov
cmp
add
insb
mov
aam
cli
dec
iret
sub
out
std
lahf
push
jo
jmp
xor
add
sbb
pop
loop
inc
imul
ja
cmp
test
xchg
and
sub
addr16
jb
dec
addl
sbb
xchg
pushf
stos
jb
call
xchg
xchg
les
mov
arpl
test
imul
xchg
gs
and
xchg
jns
jae
xchg
clc
xchg
sbb
inc
cmpsl
int3
insb
dec
daa
stos
or
mov
xchg
lea
sub
out
inc
pop
push
inc
lahf
jmp
out
int
mov
stos
pop
add
outsb
add
dec
stos
push
fcmove
js
inc
push
add
xor
adc
scas
push
stos
lea
sub
shlb
mov
into
mov
popa
in
xchg
adc
sti
sbb
stos
test
and
and
cld
ror
cmp
loopne
sub
popa
fnstenv
add
scas
push
jmp
fiaddl
xchg
shlb
mov
push
push
jmp
and
call
cmp
mov
sub
push
fwait
xchg
movsl
cld
stos
int
jl
pop
mov
lret
test
insl
and
fdiv
stos
mov
test
or
jg
mov
lods
cli
je
jne
xchg
in
cmpsl
cmpsb
aas
inc
xor
std
inc
hlt
cmp
stos
ja
mov
mov
loopne,pn
fwait
jmp
ret
jne
out
mov
xchg
xor
or
sub
dec
push
stos
jl
mov
insb
mov
or
mov
and
fsubrs
or
xor
roll
lahf
cmp
scas
pop
pushf
scas
js
stos
dec
dec
push
andl
popa
jo
lahf
gs
cmp
ret
or
cmp
fsts
inc
outsl
cli
inc
lahf
jge
cmp
hlt
idivl
mov
and
inc
imul
lea
mov
fldt
sub
in
inc
gs
test
sub
cmp
jne
fwait
xlat
addl
push
pop
mov
loop
btr
cmpsb
out
imul
lods
mov
stos
xchg
scas
xor
push
sbb
mov
sti
xchg
cmp
mov
inc
iret
or
push
dec
cmpsl
jbe
mov
lock
cmp
adc
and
insl
pop
add
sbb
pop
stos
repz
imul
lcall
mov
push
pop
fimuls
stos
jnp
mov
dec
sbb
je
mov
shrb
out
enter
insl
aas
mov
mov
clc
push
pop
mov
mov
and
fldl
aad
je
pop
push
out
and
stos
fwait
shrl
fldt
aad
fmull
loop
out
mov
stos
or
es
mov
add
adc
arpl
jl
rorb
sub
fcoms
notl
lods
and
sbb
and
and
inc
js
cmp
sub
mov
xchg
fidivs
sub
mov
clc
test
add
arpl
stos
in
xchg
sbb
mov
dec
iret
pop
stos
les
mov
ret
test
stos
xchg
push
aaa
sbb
add
sub
arpl
mov
daa
add
rcll
das
ljmp
lahf
mov
pop
stos
mov
inc
sarb
stos
adc
or
push
mov
pusha
lea
aam
stos
adc
rcll
or
fistpll
jbe
loopne
pop
lcall
in
inc
mov
imul
mov
mulb
mov
jp
les
pop
inc
pop
stos
icebp
pop
sbb
stos
mov
scas
xchg
dec
stos
pop
or
and
mov
push
cltd
rorb
outsl
jns
inc
add
outsb
pop
cmp
int3
jp
aas
lods
xchg
aaa
or
fidivs
arpl
xchg
add
jle
push
mov
aas
stos
mov
mov
mov
insl
stos
fidivrs
jae
adc
pop
push
xchg
xchg
xor
stos
hlt
mov
jl
outsb
adc
in
or
sbb
mov
jl
sarl
out
pop
sub
insl
stos
push
in
push
pop
push
movsb
mov
stos
inc
dec
or
dec
data16
mov
mov
std
mov
inc
imull
xchg
insl
jns
jmp
stos
pop
push
testl
cltd
stos
cmp
push
xor
insl
adc
int
mov
addr16
lahf
sbb
mov
in
insb
shrl
cmp
daa
sub
xor
icebp
stos
bound
jmp
cmc
xchg
mov
jle
je
xlat
stos
xor
flds
pop
dec
scas
jp
mov
jae
loop
mov
add
outsb
sub
repz
aaa
jle
mov
mov
push
add
jl
dec
stos
inc
loopne
test
out
repnz
arpl
sbb
and
faddl
test
xchg
outsb
iret
cli
call
loopne
pop
dec
or
sbb
mov
ds
data16
push
adc
loop
rolb
sub
pop
or
stos
aad
imul
jo
out
sbb
mov
xchg
cld
in
sti
pmulhuw
stc
ficompl
lds
push
out
xor
jg
mov
or
in
mov
push
jno
mov
fsubrl
nop
dec
out
pop
xor
cltd
mov
lret
xchg
jno
push
pop
jns
push
xchg
stos
and
or
stos
cmp
xlat
inc
enter
stos
subps
push
stos
shr
mov
rep
lock
and
sbb
jb
or
sti
mov
out
jmp
mov
and
imul
pop
or
adc
inc
ss
fwait
push
mov
push
jnp
sbb
push
add
stos
sub
jnp
stos
ret
xor
adc
hlt
push
nop
cmp
or
cmp
mov
mov
int3
stos
lret
pop
decb
lcall
stos
jmp
jae
pop
jl
shrb
inc
inc
pop
int3
gs
pop
stos
or
jo
adc
stos
adcl
lock
jmp
or
insl
push
fwait
sti
and
hlt
cmc
addr16
aaa
mov
orl
stos
jecxz
and
push
stos
sub
inc
inc
in
fmul
and
add
push
add
xchg
lret
shrl
loopne
mov
sub
ds
add
orb
iret
sub
stos
ljmp
imul
ret
inc
jo
jnp
cmp
imul
iret
mov
jmp
pop
arpl
shll
sub
stos
pop
cmp
test
fcompl
jns
lret
pop
je
clc
stos
imul
cmpsl
movsb
cmp
out
xchg
adc
mov
nop
loope
iret
cmp
out
test
into
dec
stos
int3
xor
jecxz
cld
xlat
arpl
xchg
mov
mov
sarl
mov
ljmp
sbb
imul
mov
shll
jecxz
cmpsl
pop
icebp
jl
add
mov
fldcw
adc
sub
repnz
mov
cmc
sbb
jl
inc
cld
push
xchg
addr16
mov
xchg
mov
out
lret
jmp
repz
or
dec
scas
stos
jg
add
fs
stos
sti
pop
pop
es
adc
sahf
aam
arpl
mov
stos
adc
insl
iret
test
jmp
xchg
stos
fwait
jno
les
or
fincstp
ret
andl
outsl
xchg
je
jecxz
jmp
icebp
dec
sbb
cs
outsb
stos
inc
out
lahf
and
xchg
stos
ja
movsl
inc
add
xor
lea
std
out
stos
pop
push
ret
dec
mov
pop
stos
lahf
test
sub
aaa
mov
mov
sahf
mov
jg
dec
daa
push
xchg
aam
stos
loopne
call
add
cmp
add
in
stos
inc
cmp
std
mov
shll
lds
push
movsl
stos
adc
dec
dec
pop
fwait
mov
push
jns
shl
imul
stos
enter
imul
and
cli
sub
or
xor
mov
cmp
stos
movsb
inc
cwtl
insb
push
ficoml
mov
pop
loopne
outsl
stos
cmp
repnz
or
outsb
jae
scas
shlb
daa
and
ret
pop
or
stos
movsl
subb
mov
aas
dec
or
je
add
lret
stos
sti
mov
ds
lods
hlt
sub
dec
stos
pop
pushf
adc
loopne
xor
mov
stos
jbe
cs
imul
stos
mov
cltd
loop
stos
adc
pushf
incb
arpl
jo
test
xor
push
push
dec
xlat
push
xchg
mov
out
lods
jnp,pn
pop
rep
jg
lret
aaa
bound
push
xor
mov
mov
das
clc
stos
arpl
lock
stos
scas
xchg
xchg
xor
sbb
insl
xchg
inc
in
cmp
lods
imul
push
jmp
mov
iret
lods
inc
dec
stos
jge
mov
and
mov
cmc
nop
into
and
jge
data16
xor
adc
add
mov
in
mov
and
mov
xor
and
jmp
stos
sti
fmul
iret
jg
mov
loopne
out
repz
mov
js
mov
pop
cmpsl
lods
jg
les
sbb
stc
or
cmp
dec
jge
popa
push
fwait
mov
lahf
add
outsb
dec
sbb
insb
mov
js
inc
icebp
pop
shrl
lds
jmp
inc
push
movsl
dec
lods
push
scas
xchg
stos
ret
mov
push
mov
mov
aaa
data16
xor
mov
mov
dec
inc
stos
data16
orb
mov
lods
out
and
dec
jle
mov
or
sub
movsb
addb
xchg
mov
push
add
dec
fldt
mov
sbb
sbb
or
fisubl
mov
fwait
movsb
jl
mov
cmpsl
mov
adc
add
dec
fnstcw
test
int
stos
pop
es
mov
mov
dec
fucompp
jp
xor
jmp
push
adc
cmp
int
mov
and
fsts
dec
in
hlt
adcl
jle
adc
popf
test
daa
fmuls
int3
lcall
sti
shrb
popf
xchg
jo
stos
pop
sbb
arpl
js
jnp
pop
pop
lea
jbe
ljmp
dec
sbb
mov
mov
push
sub
dec
cmpsl
popa
insb
and
and
dec
movsl
lret
cmp
adc
sub
xchg
stos
repz
lds
or
lods
js
xor
mov
lahf
stos
ljmp
mov
enter
sbb
mov
and
es
jecxz
gs
shl
scas
rorb
movsb
inc
das
xor
fwait
imul
pusha
mov
mov
mov
jmp
push
js
dec
adc
xchg
and
jnp
dec
fwait
imul
mov
pop
push
loope
fdivl
addl
fistl
out
pop
xor
arpl
push
sub
mov
adc
cs
lahf
sbb
adc
test
xor
les
or
pop
cmc
mov
hlt
inc
mov
push
lcall
in
idivl
inc
in
filds
mov
push
jnp
add
or
subl
imul
mov
stos
sbb
inc
jl
jg
push
fs
mov
adc
jmp
nop
imul
lret
xor
dec
or
stos
pop
mov
lock
cltd
in
jnp
inc
ss
lahf
stos
xchg
fimull
or
stos
jno
mov
pop
icebp
popf
and
xchg
or
lock
data16
lods
out
stc
stos
or
jae
scas
je
stos
add
shlb
sahf
inc
icebp
jbe
in
push
or
cmp
imul
inc
ficoml
stos
adc
stos
sbb
and
popf
pusha
pop
imul
js
out
xchg
bound
setnp
sbb
add
cmp
das
mov
mov
inc
mov
xor
add
xor
daa
fsincos
test
lods
fwait
lret
cmp
dec
and
arpl
cltd
stos
lock
ja
lods
sub
cmp
push
stos
ds
cs
hlt
add
sbb
pushw
stos
push
dec
lods
push
lock
outsl
stos
popa
and
addr16
sub
mov
mov
lcall
lahf
test
xchg
inc
popf
fwait
cltd
sbb
jb
out
addb
mov
or
push
rclb
jp
sub
xchg
jo
sbb
mov
xchg
cmp
push
cmc
add
call
jl
int3
cmpsl
xlat
pop
stos
pop
add
dec
cwtl
push
test
and
popf
xchg
inc
ret
stos
popa
fldt
push
sub
pop
jno
and
jb
cmp
mov
adc
add
fnstsw
mov
xchg
dec
xchg
dec
jmp
imul
xor
sahf
sbb
mov
add
xor
adc
test
imul
fwait
and
jno
jmp
sbb
fisubrl
mov
cmpsl
or
push
fs
stos
stc
xor
mov
rcr
xchg
int
xchg
subl
stos
and
stc
fistpll
imul
xor
fsubs
sbb
into
insl
adcl
sub
in
popf
inc
ret
insb
and
insb
dec
xchg
jb,pn
cmp
insl
stos
sub
scas
sub
pop
pop
leave
fwait
popf
dec
cs
arpl
add
sub
pop
xchg
rcrl
arpl
imul
out
aaa
push
sbb
dec
mov
or
mov
jns
xchg
out
ja
push
pop
mov
or
stos
push
xor
out
jp
xchg
adc
stos
and
std
imul
mov
add
sahf
cwtl
movsb
jecxz
jb
outsl
pop
inc
pop
sbb
fadds
xor
xchg
call
jb
mov
enter
imul
mov
stos
das
adc
inc
inc
cmp
push
call
pop
stos
je
or
xchg
dec
loopne
mov
pop
stos
inc
dec
mov
mov
test
jl
dec
arpl
xchg
xchg
mov
fsub
das
jg,pt
xor
jp
fisubrl
pop
scas
pop
pushf
stos
clc
pop
repnz
cmpsb
out
or
not
and
ljmp
subb
sub
nop
mov
mov
xor
mov
jb
sub
push
inc
stos
push
cmc
pop
loop
mov
mov
adc
daa
pop
push
stos
ja
fwait
push
or
inc
cmp
mov
shrb
nop
cmc
cmpsb
stos
add
das
mov
mov
inc
xorb
cltd
or
stos
je
outsb
icebp
outsl
and
and
aas
aaa
dec
cltd
push
stos
dec
cld
mov
push
movsb
hlt
fsubrs
faddl
out
dec
stos
les
sti
xor
fs
mov
sbbb
xchg
pop
push
push
sub
test
sub
and
cmpsb
fwait
mov
int
adc
jle
ficoml
sbb
outsb
stos
jmp
scas
stos
out
shrb
pusha
push
xchg
inc
stos
pop
decb
or
mov
int
sbb
test
sbb
push
scas
add
das
and
lcall
sub
popf
cmp
sbb
pop
cmp
sub
inc
dec
cld
stos
ljmp
outsl
stos
scas
xor
mov
sbb
popa
cmpsb
in
jmp
andb
clc
incl
imull
mov
ret
int
inc
and
cmp
xchg
les
mov
aam
idivl
fnstenv
sbb
int3
rcr
clc
scas
stos
lret
lret
jmp
nop
orl
popf
xrelease
mov
loope
mov
subl
mov
lock
mov
fs
inc
mov
imul
aaa
scas
inc
fbstp
mov
fsubrl
pop
and
jmp
pushf
lret
ss
dec
lahf
fistl
stos
push
andb
push
insl
push
stos
loop
andl
sarb
lahf
dec
xchg
pop
stos
inc
imul
out
mov
xor
pop
clc
mov
aam
imul
mov
stos
dec
inc
inc
in
pushl
and
cmp
push
pop
push
cmpsb
scas
add
push
stos
adc
insl
xchg
pop
mov
cmp
stos
rcl
adc
shlb
adc
jo
push
mov
stos
loopne
out
mov
roll
xchg
mov
std
pop
nop
movl
shll
cmpsb
add
mov
ds
lds
sbb
data16
into
pop
ljmp
and
loopne
jns
repnz
sub
or
adc
add
stos
push
loop
test
sbb
jl
push
cltd
cmpb
inc
std
push
sub
into
ljmp
pop
les
lret
pusha
xchg
sub
inc
and
mov
subl
xor
jmp
or
lahf
push
push
inc
push
cmp
jmp
testl
in
xchg
dec
sahf
loopne
ret
fsubs
stos
out
or
test
in
mov
fisttpll
stos
cmp
mov
dec
or
xchg
fwait
mov
dec
rcrb
imul
fcomi
inc
and
inc
cmp
jecxz
lcall
sbb
xchg
mull
pop
rcl
add
arpl
or
stos
decl
mull
mov
dec
jg
int3
mov
mov
shll
lea
jne
xchg
dec
imul
inc
mov
cmp
std
mov
stos
call
sbb
add
mov
iret
push
hlt
pop
subl
xchg
fnsave
testb
mov
lret
cld
cltd
shrl
int
or
stos
mov
pop
dec
dec
imul
ds
inc
inc
iret
ret
dec
push
negb
mov
test
stos
pusha
mov
xchg
std
in
mov
fisttps
pop
push
and
mov
xchg
adc
int
mov
sbb
xor
mov
stos
divps
dec
mov
fldt
in
and
daa
decl
ficompl
add
xchg
sbbl
inc
dec
test
test
mov
nop
jne
je
stos
jo
add
aaa
jmp
cmp
into
movsb
and
add
lret
addl
je
out
incl
sub
rclb
shll
or
jo
pop
push
adc
push
stos
mov
idivl
mov
and
dec
mov
inc
jne
stos
flds
mov
testb
mov
out
cli
cld
sub
clc
in
xchg
jb
lods
mov
inc
and
lods
scas
stos
shll
dec
ja
cmp
stos
gs
in
cmp
sti
aas
mov
jnp
adc
push
lea
jae
in
add
jbe
jle
je
lahf
pop
repz
xchg
je
sub
and
cmp
add
cmc
enter
out
pop
adc
daa
push
iret
adc
lods
popf
cli
dec
stos
pop
out
icebp
push
fiadds
sbb
mov
test
stos
add
inc
imul
add
cmc
imulb
pop
mov
xor
and
imul
iret
rclb
rol
jge
push
loope
jnp
pop
mov
stos
out
mov
ljmp
repz
inc
and
outsl
dec
or
stos
rcrl
rclb
popf
arpl
hlt
imul
push
pop
add
cmp
push
or
sbb
mov
or
popf
addl
sbb
popa
lcall
icebp
aas
sbb
in
rolb
popf
shlb
mov
lahf
outsl
jge
sbb
pop
mov
in
imul
fcmovbe
push
out
ss
aas
popf
cmp
fwait
push
ret
sbb
cmp
daa
lods
mov
arpl
cld
cltd
sub
or
mov
stos
lret
mov
dec
push
mov
pusha
movsb
xchg
lahf
stos
int
jbe
adc
stos
add
cmpsl
or
mov
loope
dec
add
push
cld
lea
cmpsb
pop
adcl
sub
int
stos
jp
jb
repz
imul
sahf
or
mov
sbb
lea
stos
xchg
clc
xor
add
xlat
pop
outsl
jae
adc
stos
shll
mov
xchg
jmp
sbb
xchg
jne
daa
xor
cltd
lret
mov
daa
lods
push
inc
cwtl
mov
subl
dec
sub
stc
cmp
stos
int
xlat
lods
dec
add
jmp
inc
subb
or
stos
jnp
jle
test
mov
jecxz
inc
adc
hlt
xchg
mov
lahf
xchg
daa
les
mov
stos
or
mov
in
stos
cmp
and
out
enter
lea
pop
cwtl
mov
clc
mov
or
add
adc
ja
sarb
jno
dec
inc
mov
push
mov
or
fiadds
lcall
push
add
sbb
xchg
fwait
in
int3
xor
push
int
dec
enter
jge
jl
cmpb
sbb
push
mov
xor
push
enter
ljmp
das
out
mov
lods
lahf
xchg
fsts
and
into
mov
stos
fisttps
adc
jns
insl
sti
mov
out
sub
adcl
pop
pushf
mov
inc
into
xor
repnz
stos
jb
jl
mov
xchg
cmp
dec
pop
pop
mov
add
lahf
mov
stos
ret
sub
mov
stos
sbb
lods
push
mov
out
inc
sub
jmp
idivb
dec
mov
sub
stos
adc
int3
aaa
pop
mov
xchg
or
outsb
enter
lret
sti
sub
ret
aas
cmp
aaa
push
cwtl
shr
sub
sub
mov
add
fucomp
jmp
sbb
imul
test
mov
mov
stos
ljmp
mov
insb
outsl
jl
sbb
and
and
xor
popf
pop
movb
icebp
fucomip
out
sti
ja
xchg
mov
add
xchg
sub
dec
icebp
lret
jb
mov
mov
cmp
stos
ljmp
fsubrl
sbb
xor
aas
fimuls
test
and
mov
adc
bound
and
imul
outsb
cwtl
int3
bound
rolb
mov
inc
add
cmp
jb
fsubl
ljmp
mov
scas
mov
stos
xchg
mov
xchg
push
adc
cmp
sbb
add
imul
mov
stos
jp
push
push
push
xchg
ss
in
adc
adc
mov
stos
mov
out
xor
stos
sub
xchg
xor
mov
fs
pop
bound
js
loopne
and
rorb
mov
hlt
fwait
repz
or
pop
and
push
pop
xchg
mov
stos
inc
jl
insb
push
cmp
sub
int3
aas
cmp
imul
xchg
xchg
sub
mov
push
nop
mov
sub
in
add
push
jg
loope
dec
mov
xor
and
xlat
stos
shl
mov
ja
pop
test
bound
jno
xor
jg
mov
mov
sub
stos
iret
xchg
mov
test
pop
stos
push
cmc
inc
fcomps
cmp
mov
in
in
bound
enter
xchg
lods
int
stos
mov
lea
js
jecxz
popf
push
sub
mov
ret
stos
jl
cli
add
les
lods
stos
cmc
cmpb
jge
test
in
shrl
fistpll
vmovsldup
or
mov
popa
push
adc
mov
mov
mov
in
stos
mov
pop
js
iret
mov
sub
push
mov
and
stos
jne
scas
inc
push
sub
rorb
int3
inc
daa
push
push
push
in
pop
stos
push
in
add
das
mov
scas
flds
pop
enter
stos
stos
invd
ss
in
icebp
addr16
mov
sub
int3
inc
mov
faddl
pop
mov
rorl
subb
outsb
xchg
push
stos
xor
mov
in
adc
dec
xchg
shl
mov
hlt
stos
cmp
shrb
stos
push
andl
adc
dec
pop
push
mov
icebp
sti
jmp
inc
push
push
das
nop
fsubr
xchg
pusha
xchg
xor
xorb
pop
mov
push
stos
int3
outsl
push
dec
out
mov
jmp
stos
mov
pop
push
push
stos
push
jns
jl
ljmp
inc
test
imul
sub
sarl
mov
leave
fsubp
loopne
mov
jmp
inc
arpl
movsb
xchg
fcmovne
mov
stos
int3
nop
adc
js
push
stos
xor
jg
stos
andl
pop
imul
repnz
ds
sti
xor
jmp
imul
xchg
and
pushf
stos
aad
dec
mov
xchg
mov
repnz
xor
stos
xchg
add
xchg
push
jnp
test
aad
inc
stos
fsubr
xchg
mov
mov
adc
cmp
inc
rclb
movsb
pusha
xor
cmp
ljmp
arpl
add
ficomps
xchg
dec
movsl
out
stos
out
js
or
push
fwait
mov
stos
jne
xchg
in
inc
xchg
inc
stos
mov
xchg
or
pop
mov
icebp
sub
lods
dec
stos
jmp
movsb
or
stos
fiaddl
jp
int
movsb
roll
and
jb
ret
xor
jp
cmp
adcl
add
stos
dec
xor
pop
pop
push
and
and
stos
ja
sahf
sub
out
call
mov
imul
dec
icebp
in
push
stos
fstpt
xchg
addb
jecxz
add
lahf
dec
insb
jg
xchg
add
inc
imul
stos
adcl
enter
repz
stos
sbb
cld
stos
ljmp
stos
je
mov
and
push
mov
das
pop
or
ljmp
cmpsl
lock
sbb
inc
mov
pushf
jae
cli
cmpsl
sub
stos
dec
fldenv
jge
mov
out
addr16
pop
mov
lods
test
push
mov
push
cwtl
les
push
mov
stos
inc
scas
ret
jb
sub
mov
lahf
arpl
pop
orl
stos
push
adc
pop
inc
inc
out
std
outsl
jb
fsubrs
sub
stos
dec
pop
cmpl
mov
xor
stos
cmc
sbb
jmp
sub
add
mov
dec
mov
insb
dec
adc
insl
into
dec
addr16
arpl
mov
repz
cmpsl
xchg
ss
andb
repz
jne
fdivl
mov
stos
push
into
pop
jns
ljmp
fsts
mov
jle
mov
sahf
add
xor
ja
push
stos
or
fldcw
repnz
shlb
fisubrs
xchg
popa
hlt
insl
push
fstp
xchg
mov
xchg
stos
jecxz
push
cmp
popa
sbb
lods
sub
mov
testb
jmp
xor
pop
add
out
dec
stos
jb
and
inc
add
fs
xor
fst
mov
scas
push
cmp
sub
push
leave
cmp
adc
fldt
int3
mov
mov
mov
jge
imul
lcall
movsl
mov
stos
in
xor
sub
adc
jmp
or
cmp
xlat
ror
sub
adc
xor
push
stos
mov
pushf
cmp
subl
xchg
pop
stos
mov
shrl
or
aaa
repz
subb
roll
dec
and
addr16
mov
nop
pop
fbld
outsl
repnz
pushf
and
sbb
and
in
xor
mov
insb
push
pusha
movsl
mov
jne
cmp
xor
add
pop
aad
cmc
gs
je
mov
cmp
pop
stos
fnstsw
jecxz
xchg
addr16
aas
push
xor
dec
pop
movsl
daa
test
das
ss
js
or
pusha
add
stos
adc
ret
lahf
or
stos
push
cwtl
and
movsb
mov
dec
imul
rolb
push
outsl
or
out
popa
loopne
ret
rcrl
add
imul
mov
mov
adcl
jge
add
es
je
stos
cltd
fistpll
jecxz
aas
ja
cmp
mov
xchg
add
inc
jne
fst
imul
pop
out
js
pop
stos
add
popf
imul
or
js
xchg
je
stos
in
daa
inc
mov
adc
rdmsr
or
std
mov
leave
adc
jns
cmp
cmp
jne
mov
addr16
jg
stos
push
arpl
sub
stos
subl
dec
stos
das
inc
loop
push
mov
mov
mov
add
test
fs
out
jg
xchg
lds
jnp
iret
lods
cs
xchg
daa
jnp
push
push
out
daa
push
pusha
xchg
pop
jae
lods
stc
cmp
das
stos
mov
adc
mull
lahf
in
bound
mov
mov
xor
stos
ds
lret
loopne
stos
or
jo
pop
mov
dec
movsb
inc
mov
jne
mov
jl
mov
cmp
xchg
add
imul
fwait
mov
imul
mov
xchg
cmc
or
stos
mov
mov
stos
jge
sub
imul
mov
cs
sub
adc
sahf
das
push
bnd
sbb
dec
cltd
fwait
stos
pop
pop
cmp
lods
stos
roll
xchg
fsubrs
lret
mov
shlb
es
inc
jl
sahf
cmpsb
lret
dec
dec
sti
pop
daa
pushf
cltd
add
mov
out
cmp
stos
cs
in
sbb
mov
outsl
pop
gs
in
sahf
ljmp
fnstsw
lods
pusha
cwtl
jb
mov
jle
icebp
push
ljmp
mov
jge
outsl
out
sub
stos
repnz
aaa
jp
inc
ljmp
jecxz
mov
jl
imul
movsl
push
iret
shll
and
xchg
mov
mov
add
mov
daa
jmp
push
ss
std
dec
mov
in
rcrl
loope
pop
stos
lds
enter
hlt
push
in
cmp
mov
sub
bound
cmp
xchg
pushf
insb
dec
js
fwait
imul
stos
rclb
pushw
fisubrs
ss
mov
sbb
mov
loopne
stos
mov
stc
sbb
scas
pop
leave
jmp
add
inc
push
lods
and
xchg
mov
adc
std
inc
xchg
xchg
cli
stos
stos
lods
ret
jns
pop
stos
cmp
jae
call
movlhps
mov
test
stos
add
test
cmpsb
xchg
xchg
adc
lret
stc
sti
push
jns
icebp
stos
mov
out
adc
iret
mov
stos
test
jge
aad
nop
mov
mov
dec
mov
jl
ret
mulb
cmp
std
popf
adc
stos
outsl
fadds
insb
pop
xor
bound
scas
jge
sti
stos
mov
lahf
mov
outsb
imul
cltd
inc
xor
jmp
xchg
push
xchg
dec
mov
and
cmpsl
stos
insl
xchg
lret
jmp
stos
push
bound
stos
andl
testl
lods
fs
in
ja
inc
out
stos
enter
lret
jp
xlat
push
lret
mov
xchg
or
mov
mov
xor
inc
daa
std
andb
cwtl
in
stos
xor
lds
push
xchg
pop
loopne
and
mov
repnz
scas
inc
pop
stos
arpl
cmp
push
test
dec
stos
iret
mov
xlat
test
dec
push
repz
fsubrs
bound
data16
lcall
cmpsl
jp
mov
pop
cld
int
push
mov
leave
jg
les
nop
mov
xchg
jnp
cli
rcrl
xor
xor
int
stos
cmp
xchg
lcall
pop
fsts
mov
inc
adc
stos
cmpsb
shrb
lcall
in
into
lret
rcrb
inc
das
incl
dec
out
stos
pop
in
jb
pop
lret
and
out
fsubrs
mov
xchg
xchg
push
lret
and
mov
insb
stos
add
jno
fucomip
and
mov
sub
dec
imul
xchg
lods
inc
stos
and
lcall
into
mov
or
mov
jae
lret
movsb
dec
imul
push
stos
jle
repz
sub
stos
cmp
int3
jmp
pop
or
adc
daa
aas
loop
call
xor
into
add
mov
inc
lret
sti
std
sub
stos
add
loopne
popf
push
sub
call
imul
cmpsl
movsl
pop
scas
dec
mov
jno
dec
cs
int3
jb
cwtl
xor
stos
mov
dec
test
pop
jmp
mov
fs
lods
xchg
xchg
adc
push
nop
inc
mov
icebp
xchg
imul
mov
and
movb
stos
lret
lret
or
fildll
or
mov
outsb
sahf
and
std
adc
sbb
fwait
jge
xor
dec
sub
mov
scas
lret
mov
cmpsb
cs
fwait
arpl
xchg
stos
pushf
sub
idivl
repnz
jmp
in
dec
nop
aaa
jecxz
xchg
add
xchg
clc
push
cmp
cltd
les
stos
mov
push
mov
movsb
outsb
add
aaa
push
repnz
test
push
cli
adc
in
rcrb
stos
out
or
pushf
mov
jecxz
sbb
xor
int
sbb
and
pop
push
jg
sbb
adc
rep
sub
test
mov
pop
pop
mov
notl
fwait
push
xchg
ljmp
add
fsubrs
inc
cmpsl
sbb
dec
ficomps
cmc
pop
stos
lret
mov
sub
mov
stos
mov
xor
sbb
jbe
pop
scas
mov
movsb
popf
nop
stos
push
sbb
pusha
stos
cld
adc
xor
icebp
sbb
sub
aaa
mov
cwtl
xchg
or
movsb
rcr
sysexit
ja
mov
dec
leave
adc
and
jmp
dec
lods
stos
test
bound
stos
xor
and
subl
test
loop
test
fcmovb
fwait
jns
mov
pop
shlb
cltd
in
jmp
hlt
mov
add
stos
loop
ds
out
stos
icebp
mov
stos
cmpsb
xchg
add
and
mov
jmp
call
int3
movsl
mov
std
stos
push
mov
xor
stos
dec
aas
adcb
mov
push
mov
add
push
cmp
cmpl
mov
add
cmp
lds
xorl
movsb
ljmp
pop
pop
xchg
icebp
lock
xor
stos
mov
mov
push
push
mov
xor
out
adcl
jns
mov
xor
stc
mov
stos
arpl
cmp
xchg
data16
addr16
addb
sub
pop
mov
sarl
push
cmpsb
icebp
adcb
aad
in
ds
or
stc
mov
mov
jge
jae
jg
xchg
push
insb
stos
xor
enter
mov
stos
jp
mov
adc
push
aad
lahf
jb
pop
stos
xorl
fisubrs
pop
mov
scas
mov
bound
ret
stos
xchg
jmp
xchg
add
push
pop
stos
repz
add
test
xor
mov
or
div
stos
movsl
icebp
sbb
cld
iret
shll
stos
xorb
repz
test
je
push
sub
shrb
sub
mov
stos
insl
sarl
xor
stos
cltd
cs
in
inc
cmp
hlt
sub
sub
addl
movsb
cmp
stos
jge
adc
stos
pop
stc
cmp
stos
repnz
test
and
push
ljmp
in
and
mov
jp
lock
mov
test
mov
in
int
mov
fildll
aas
lret
stos
or
ret
inc
jmp
jg
xor
test
es
stos
lcall
fildll
pop
add
inc
jecxz
dec
les
stos
or
int
adc
mov
into
daa
mov
pop
jmp
and
cmp
stos
lcall
sub
and
nop
xchg
push
pushf
mov
lock
loope
stos
sahf
dec
push
xor
lret
scas
cmpsb
lea
jp
shrl
pop
jns
adc
push
seto
jge
call
push
xlat
clc
out
jmp
pop
xchg
pusha
fwait
cmp
rclb
lods
ret
push
scas
sar
mov
mov
insl
jmp
ret
or
scas
out
xchg
stos
in
popa
subl
xchg
adc
imul
inc
cld
subb
aam
cmp
sbb
jp
lods
or
pop
int3
mov
and
pop
sub
stos
cld
in
dec
cs
aam
imul
xor
jmp
pop
stos
inc
mov
movsb
stos
insl
test
mov
pop
xchg
inc
fs
mov
lret
dec
movsb
mov
dec
mov
stos
and
xchg
sti
stos
das
or
adcl
stos
imul
mov
xor
popl
stos
nop
aas
mov
repz
stos
lret
cmc
mov
stos
imul
stos
xor
filds
subb
xchg
aaa
das
push
stos
adc
inc
roll
mov
jae
lret
int
inc
aas
jg
out
and
xor
mov
push
stos
test
dec
outsl
dec
or
mov
inc
lret
test
xchg
mov
stos
int3
push
cmp
lods
or
lea
popf
push
or
adc
aad
mov
jl
fistl
fimuls
and
mov
stos
xchg
outsl
sbb
in
loop
push
pop
enter
leave
stos
repnz
lock
stos
add
or
std
adc
mov
mov
das
stos
mov
mov
stos
mov
mov
stos
mov
push
jae
add
stos
inc
leave
cmp
lea
inc
stos
mov
push
subl
imul
xchg
stos
push
popa
movsb
xchg
daa
scas
mov
je
mov
dec
jp
and
shrd
cwtl
sbb
mov
cld
mov
cmp
in
mov
xchg
sbb
jl
pop
stos
sub
hlt
aas
stos
xchg
add
ss
inc
data16
faddp
call
stos
lods
cli
mov
adc
aad
stos
out
mov
or
imul
adc
push
std
mov
xrelease
mov
in
movsb
or
cmp
sub
jge
pusha
mov
push
rolb
cld
cmp
add
jle
popf
addr16
pushf
stos
aas
pop
call
dec
das
ljmp
movsb
mov
or
in
jo
imul
pop
shlb
stos
dec
ja
xchg
sub
in
ss
or
test
mov
imul
mov
enter
adc
jb
pop
popa
dec
push
jmp
out
dec
cmpsl
sub
lahf
fdivl
pushf
rorl
inc
call
push
fsub
sar
les
adc
mov
out
rorl
mov
dec
jecxz
jbe
aam
mov
cmpsl
addr16
xor
stos
pop
push
out
pop
adcb
and
push
cli
icebp
add
cmp
stos
repnz
push
out
jp
sbb
mov
outsb
mov
subl
scas
out
lret
stos
pop
cwtl
gs
cmp
cli
mov
stos
rcll
test
xchg
cmp
sub
push
jl
or
movsl
mov
ss
jo
rorb
mov
faddl
push
mov
imul
cmpsb
inc
negb
movsl
lahf
mov
add
ljmp
dec
aas
jmp
nop
stos
mov
inc
and
mov
stos
push
push
sbb
cmp
pop
lods
sub
mov
scas
ljmp
mov
inc
or
push
stos
test
popa
and
xchg
add
or
lods
dec
int3
sti
imul
inc
xchg
stos
xor
or
sbb
lods
and
rcll
hlt
or
stos
add
stc
jne
gs
sahf
repnz
mov
js
mov
mov
ja
in
mov
cmp
sbb
mov
lods
fnstsw
cmp
mov
arpl
out
fwait
int
mov
push
stos
cli
les
stos
cltd
adc
or
stos
loope
pop
scas
push
stos
mov
cmc
pushf
pop
mov
push
ja
inc
mov
stos
ret
cmpl
stos
das
test
pop
addr16
push
in
inc
in
push
clc
mov
addr16
stos
pushf
aaa
ret
loop
jmp
pop
aas
mov
xchg
std
out
stos
loopne
cmp
rorl
mov
mov
ret
jmp
push
incl
dec
push
stos
xor
rorb
stos
xchg
push
enter
mov
pop
xchg
loop
test
mov
std
out
subl
cmpsl
stc
stos
leave
push
stos
es
cltd
or
loop
sbb
out
mov
stos
cmpb
jb
push
jmp
push
insb
inc
mov
clc
stos
repnz
insl
jmp
ficoms
loope
cmc
push
jmp
add
aas
outsb
clc
lods
imul
mov
inc
addr16
clc
sbbl
stos
icebp
addr16
mov
fists
xchg
ss
mov
clc
mov
push
call
scas
cltd
pusha
adc
xchg
in
aaa
stos
or
shlb
shlb
jl
scas
push
stos
mov
test
lods
jns
jbe,pt
mov
stos
sub
int
stos
test
mov
stos
push
jle
xor
and
jmp
call
daa
dec
lret
stos
cmc
repz
xchg
or
add
pop
and
fildl
inc
mov
mov
push
cltd
stos
xchg
fsubl
imul
les
sti
dec
scas
jae
inc
movsb
subb
div
inc
daa
repz
jecxz
mov
icebp
pop
mov
push
jmp
call
sub
jg
add
dec
jmp
inc
xor
into
adc
stos
out
hlt
jno
xlat
jge
cmpsb
cld
and
cmpsl
or
dec
roll
pop
inc
xchg
and
aaa
jle
add
adc
ud0
push
or
clc
pop
jmp
inc
jmp
ja
lock
adc
push
insl
nop
clc
sub
and
jl
fmuls
or
hlt
inc
dec
jmp
stos
loopne
jp
jae
xchg
lods
daa
fildl
std
jl
cmc
cmp
stos
jns
cltd
in
imul
test
dec
xchg
shlb
cmpsb
movsb
test
cs
push
xor
gs
fldcw
jb
mov
xor
sbb
dec
jmp
in
stos
jb
mov
and
std
mov
clc
rcrb
lds
movsl
add
sub
and
lret
sbb
stos
notb
shl
stos
leave
scas
test
fisubs
int
push
cld
movsb
lods
test
cmpl
push
stos
jns
dec
dec
scas
pop
and
sbb
sbb
xchg
out
or
jp
stos
adc
mov
or
jnp
sbb
mov
loope
dec
daa
loopne
mov
insb
loop
cmpsl
je
push
add
stc
and
pop
xchg
xchg
aas
fisubrl
iret
lcall
xchg
stos
push
sub
pop
in
pop
or
out
jbe
lret
cmpsb
sub
daa
jno
jns
cmc
push
add
test
xchg
mov
push
mov
mov
cltd
pop
fsubrl
push
aaa
popf
fistps
mov
push
xlat
jle
loop
test
mov
cmp
stos
adc
cmpsb
push
negl
lea
das
test
sti
stos
fistl
ds
sub
stos
fimuls
je
and
jnp
out
cmp
pop
push
into
mov
mov
pop
inc
aaa
cwtl
adc
orl
js
nop
popa
stos
jecxz
mov
mov
f2xm1
stos
mov
or
stos
loope
and
add
pop
add
mov
loope
popa
or
mov
addr16
out
sub
xor
fldt
ljmp
sbb
test
in
fwait
rolb
jmp
sub
pop
scas
enter
add
mov
daa
mov
inc
or
or
pop
jmp
push
icebp
out
repz
mov
rorb
andl
movsb
mov
fwait
mov
mov
sarl
dec
xor
jmp
stos
in
fnstenv
mov
pop
stos
sti
dec
xchg
xchg
jl
insl
push
loope
push
and
xchg
ffreep
fldcw
or
aas
js
imul
cltd
mov
call
cmp
dec
push
fwait
scas
sub
push
xchg
cmp
push
sti
clc
ss
stos
cli
mov
lea
imul
stos
jno
jle
add
dec
les
loope
sbb
out
sbb
dec
mov
pop
mov
cmp
pop
outsb
scas
scas
leave
stos
sub
add
jmp
fsubrs
mov
jno
or
fistpll
lods
scas
xor
xchg
xlat
push
cmp
test
imul
stos
fcompl
xchg
and
pop
cmpb
clc
inc
mov
cmpsb
or
stos
sbb
bound
das
jbe
icebp
jmp
sbb
sarb
mov
test
stos
data16
xor
mov
jg
aas
rorl
jbe
pop
push
sarl
fidivrs
mov
xchg
fwait
daa
mov
and
cli
sub
fidivrl
or
mov
shlb
scas
push
cwtl
jo
or
imul
xchg
cli
push
loopne
imul
xchg
push
push
stos
jg
mov
data16
and
inc
fnstcw
push
outsb
lds
push
cltd
stos
enter
cmp
pop
stos
mov
fwait
add
fstp
stos
in
lods
and
andb
call
jge
test
leave
es
or
mov
dec
adc
aaa
cld
repnz
sub
xchg
pop
mov
hlt
jnp
shlb
stos
or
jg
addr16
push
cmp
mov
pop
out
mov
mov
sub
dec
call
and
adc
push
pop
mov
in
add
jp
pop
sar
jecxz
lret
fwait
xor
push
idivb
fwait
in
in
mov
repnz
adc
add
clc
insl
daa
lock
and
push
push
imul
dec
add
movsb
push
mov
mov
imull
push
inc
xchg
xor
cmpsl
stos
scas
pop
push
loop
shrl
add
cmp
stc
xlat
stos
addl
sbb
aam
mov
stos
shlb
stos
je
dec
out
inc
pop
sub
stos
inc
xchg
nop
dec
lahf
dec
stos
sub
dec
leave
stos
rclb
adc
xor
xlat
and
dec
popf
sub
sbb
gs
and
lret
stos
into
and
data16
push
push
hlt
negb
jg
inc
jle
stos
lods
dec
mov
mov
inc
dec
add
push
adc
pop
mov
movsl
stos
push
sub
popf
stos
call
push
ret
adc
mov
mov
jmp
pushf
aas
push
push
outsl
mov
xchg
dec
scas
imul
stos
add
push
pusha
stos
xchg
or
dec
or
mov
test
mov
jge
lea
adc
push
xor
xor
arpl
stos
dec
gs
sbb
lret
lea
sahf
icebp
dec
lods
and
jo
popf
je
and
mov
enter
jl
in
stos
js
je
fimull
xor
imul
enter
lahf
jmp
add
pop
xchg
fbld
mov
push
dec
sti
dec
add
stos
movb
fcoml
stos
jo
enter
out
stos
adc
sub
cli
push
mov
and
leave
adc
sbb
mov
jg
inc
xor
jae
add
xor
out
rorl
cltd
lret
repz
add
inc
jmp
xor
sbb
pop
repz
mov
rcrl
ljmp
int
xor
pop
add
jp
insb
jnp
push
movsl
movsb
mov
test
push
add
adc
stos
sub
sub
enter
test
in
xor
int
es
jle
fcoms
ss
jl
or
imul
jmp
inc
add
jnp
pop
test
addb
cltd
aad
popf
pop
stos
std
adc
das
stos
jecxz
mov
mul
dec
stos
aas
jno
imul
mov
das
or
mov
sbb
sub
xor
sub
fsubl
cmp
adc
mov
dec
cmpsl
add
sub
push
xchg
imul
lret
stos
jle
and
adc
pop
call
pusha
mov
stos
inc
sbb
ret
lcall
mov
mov
adc
popa
or
jle
fisubs
mov
icebp
insl
imulb
stos
push
sub
mov
jo
mov
into
pop
test
inc
or
test
andl
bts
fs
sahf
sbb
jmp
jbe
inc
push
inc
mov
or
int
outsb
pop
dec
mov
daa
xlat
jo
xchg
mov
adc
in
add
int
loop
cmpsb
notl
aam
aaa
pop
mov
faddl
mov
or
in
mov
adc
or
dec
cmp
cmp
repz
mov
fisttps
jo
hlt
scas
enter
push
mov
outsb
stos
mov
sub
adc
xor
js
mov
inc
stos
push
mov
repz
stos
dec
fidivrl
cltd
addb
sbb
xor
mov
xchg
out
xor
jmp
xchg
imul
fdivr
aam
sub
add
push
jne
stos
out
sub
xchg
inc
test
das
adc
hlt
pop
pop
jbe
test
adc
cs
pop
stos
mov
xor
in
adc
add
cmpl
bound
jmp
stos
aaa
dec
or
xchg
fidivrl
and
jae
jbe
rolb
call
imul
stos
leave
mov
dec
sub
sbb
inc
popa
inc
addr16
stos
andb
stos
aaa
cmp
sbb
cld
ds
movsl
data16
dec
push
mov
cs
mov
mov
lea
popa
jge
lods
inc
aam
stos
mov
repz
ds
jp
fucom
push
cmp
lret
lahf
or
and
addb
nop
xlat
mov
stos
fidivrs
xchg
mov
sub
shl
mov
push
mov
sub
loope
add
mov
xchg
movsl
in
inc
insl
mov
xchg
adc
push
cmpl
iret
arpl
sti
rcr
add
jecxz
imul
movsb
arpl
lret
out
sbb
xchg
nop
push
jl
pop
dec
hlt
imul
stos
stos
cmp
popa
push
inc
jmp
popf
adc
jb
jge
mov
mov
mov
in
add
mov
mov
std
pop
dec
pushf
sub
ss
xchg
stos
data16
lods
stos
pop
outsb
test
xchg
inc
dec
lock
push
sbb
rcll
jmp
sub
int3
test
daa
test
and
bound
stos
hlt
cltd
ficompl
ljmp
lret
scas
dec
xor
out
pop
cltd
push
dec
data16
ret
lock
adcb
add
data16
int3
js
dec
push
jp
or
jo
mov
xchg
jnp
adc
cwtl
cmp
mov
scas
fwait
cmp
sub
add
xchg
call
mov
inc
stc
movsl
subb
aaa
pop
imulb
add
movsl
push
add
outsl
xor
sbb
push
addr16
xchg
xchg
dec
sbb
lret
insb
push
leave
mov
and
inc
xchg
push
insl
imul
mov
loopne
test
lahf
mov
inc
stos
ds
or
shlb
stos
icebp
in
fcompl
iret
mov
imul
dec
stos
fs
out
hlt
push
sbb
stos
icebp
push
or
mov
call
cwtl
sbb
sbb
stos
dec
in
test
xor
adc
jne
fnstcw
jmp
daa
adc
fs
add
aaa
xlat
iret
xchg
test
pusha
ljmp
ja
fndisi(8087
add
stos
inc
add
xor
jo
sti
das
lds
cld
lea
or
push
js
sub
std
out
in
test
test
arpl
jmp
aas
jo
insb
stos
dec
pop
ficoml
inc
icebp
mov
lods
adc
pop
daa
cmp
push
xor
aas
fisubrs
daa
fidivrl
push
pop
xlat
adc
icebp
mov
cmp
xchg
cmp
and
scas
addr16
fbld
inc
xchg
nop
stos
call
mov
jl
push
js
xchg
setae
sub
pop
xor
inc
xchg
xchg
jecxz
sbb
or
int3
test
dec
sbb
add
sub
mov
sbb
mov
stos
lret
fidivrs
mov
mov
mov
stos
sub
ljmp
pop
pop
fiadds
arpl
jae
jbe
mov
fwait
js
and
push
inc
movsl
loope
stos
add
inc
inc
das
xchg
es
les
pop
push
stos
std
lcall
push
sub
test
imul
adc
idivl
and
add
lahf
stos
mov
ljmp
ficompl
lods
xchg
mov
jne
imul
stos
cs
inc
nop
cli
fldenv
stos
testl
or
mov
nop
mov
aam
mov
xor
testl
stos
stc
int3
faddp
sub
mov
push
imul
pop
incb
js
push
add
or
fidivl
jge
stos
loopne
mov
adc
mov
lods
stc
push
notb
push
cmp
scas
les
mov
stos
jl
mov
push
lcall
arpl
sar
out
or
mov
cmp
add
andl
sub
aam
mov
xchg
jle
stos
das
and
data16
arpl
in
adc
dec
je
mov
and
jne
subb
repnz
lock
xchg
rorl
mov
mov
int3
adc
subb
mov
and
punpckhwd
stos
faddl
inc
imul
jno
mov
and
xchg
lea
or
jl
inc
mov
ss
push
scas
jae
in
stos
adc
rcrl
pop
xchg
push
addr16
je
mov
loope
sub
mov
inc
daa
subb
mov
inc
mov
cli
mov
mov
xchg
addb
xchg
inc
std
fdivrl
lods
clc
ret
mov
adc
stos
imul
loopne
inc
sbb
and
movsb
js
mov
fwait
shrb
mov
sti
dec
ret
cmp
or
cmp
iret
stos
loop
jo
and
sub
stos
testl
jl
stos
xlat
std
shr
and
mov
stos
xchg
xchg
mov
mov
add
add
pop
test
adc
cmp
stos
fdiv
pushf
rol
mov
xchg
mov
sahf
add
stos
hlt
pop
cmc
mov
dec
sbb
jmp
mov
push
pop
mov
subb
or
push
iret
in
push
jbe
lcall
adc
stos
ja
jbe
mov
or
in
rcrl
scas
aaa
xchg
jb
lds
sub
sbb
js
mov
xor
dec
and
leave
cmp
movsl
dec
pop
test
cld
or
and
inc
or
cltd
dec
fisttpl
push
gs
mov
sbb
stc
cmp
daa
xor
sbb
xor
imul
popf
aas
cmpsb
pop
stc
cs
jl
stos
int
test
in
or
mov
xchg
ret
fwait
xchg
stos
cmc
nop
fmull
stos
mov
adc
sti
cwtl
pop
jo
pushf
mov
mov
inc
dec
jmp
dec
push
cmpsl
mov
gs
pop
fiaddl
in
scas
insl
sbb
mov
es
stos
mull
scas
push
push
xor
sbb
out
sbb
stos
imul
push
aas
ss
je
imull
lea
jno
sar
test
sub
jmp
mov
cmp
push
jmp
sub
cltd
xor
cmp
lahf
mov
fwait
inc
cmp
dec
pop
std
xchg
lret
aaa
aas
aad
mov
mov
xlat
loop
and
mov
loopne
nop
icebp
lea
add
sub
xor
mov
inc
das
hlt
sub
popa
mov
insb
dec
and
lahf
mov
jmp
mov
adc
cwtl
xchg
ss
leave
les
sbb
cmovne
xchg
xor
lret
sub
arpl
ret
add
or
inc
aad
int3
push
ljmp
outsl
in
stos
mov
jns
cmc
stos
mov
dec
xchg
std
std
xor
sub
push
scas
push
clc
push
stos
adc
test
ret
les
mov
pop
or
or
add
jo
stos
in
cmpl
stos
sub
xchg
inc
cs
adc
int
cmpsl
cwtl
stos
sbb
push
pop
aad
or
fisubrs
lods
rclb
insb
imul
data16
popf
inc
in
stos
jge
add
push
dec
mov
cmp
ret
stos
inc
xchg
jl
inc
xchg
add
and
arpl
push
dec
dec
lcall
stos
inc
push
xor
popf
xchg
fadds
pop
aas
sbb
fadd
mov
lods
in
push
imul
daa
insl
sub
notl
mov
int3
mov
enter
xchg
mov
push
pop
fistpll
call
pop
out
sub
aad
sar
mov
stos
xchg
loop
jl
scas
or
stos
or
dec
outsb
jae
dec
adc
jns
pop
ret
sbb
xor
mov
dec
push
jle
push
cltd
addr16
andl
repnz
and
test
repz
ds
sbb
mov
mov
or
stos
sbb
fmulp
adc
or
gs
push
jge
sbb
cmp
shrb
stos
imul
push
movsb
pop
ljmp
nop
in
je
js
push
lea
sub
aaa
popf
push
bound
xchg
push
push
fildll
xchg
mov
sbb
stos
pushf
cld
cs
inc
cltd
xchg
and
mov
xchg
lea
imul
mov
sahf
pop
sbb
stos
jmp
fsubrl
and
fsts
out
rclb
ja
stc
iret
stos
pop
mov
test
movsb
lods
outsb
stos
mov
aam
push
inc
fsts
or
arpl
mov
movsb
jns
push
cmp
inc
or
stos
rcrb
xchg
imul
lahf
sti
mov
sbb
cmpsl
mov
mov
jl
stos
jbe
xchg
adc
adc
dec
arpl
dec
pop
xchg
and
cmpsb
and
fs
sahf
subb
xchg
jg
dec
mov
pop
das
stos
xchg
lods
mov
cmpsb
insl
or
mov
fcmovne
pop
mov
stos
pop
cmp
mull
or
addr16
aas
imul
stos
repnz
jae
fwait
loope
punpckhwd
or
movsl
fs
xchg
into
stos
pop
xchg
xor
inc
stos
mov
arpl
fcomps
push
lods
and
xorl
inc
std
out
push
out
addl
pop
sub
or
in
mov
pop
loopne
stos
or
fdivp
jp
iret
mov
rorb
andl
mov
mov
repnz
and
sahf
inc
mov
mov
cmp
push
xor
fsubr
jb
or
loope
scas
popa
subl
mov
xchg
or
js
fldenv
mov
cmpsl
mov
outsb
jno
lods
adc
push
insb
in
imul
es
jg
sub
inc
add
jl
push
push
mov
jge
fwait
lret
adc
cmp
out
pop
lcall
aaa
stos
mov
in
mov
inc
xchg
insb
mov
push
pushl
mov
xor
jmp
test
jge
xchg
icebp
xchg
mov
stos
daa
mov
pop
in
push
aam
dec
push
les
mov
inc
mov
out
imul
dec
mov
jmp
mov
leave
stos
xor
push
pop
fwait
pop
add
int3
or
inc
and
mov
mov
dec
dec
data16
mov
in
jmp
xchg
adc
insl
stos
icebp
mov
ss
aad
sub
adc
stos
or
push
jne
jp
aas
mov
cmp
decl
mov
repz
lret
cs
loopne
mov
push
dec
stc
stos
fmuls
push
call
shrl
mov
mov
jl
cwtl
iret
scas
addr16
jno
adc
pop
push
mov
sbb
xchg
inc
scas
imul
scas
repz
jmp
jmp
in
test
lods
xor
stos
popa
negl
xchg
stos
push
adc
mov
add
and
sahf
inc
sbb
and
movsb
inc
pop
fwait
mov
xchg
xchg
push
stos
andb
mov
punpckhdq
cmp
dec
fidivl
stos
add
sub
outsb
into
pop
stos
shl
push
pop
xchg
jp
cmp
fcompl
out
fwait
out
test
rcrb
imul
xor
push
lock
sarl
mov
stos
jl
cli
xor
std
cmp
test
and
and
stos
mov
xor
mov
stos
adcl
cs
cmp
xchg
and
out
mov
add
sub
lds
add
cmp
xlat
or
and
pop
rcll
stos
out
lea
inc
mov
fwait
aaa
inc
mov
xchg
repz
int3
lahf
or
repnz
sbb
mov
mov
stos
sbb
jg
push
stos
sub
xor
dec
cmc
stc
stos
imul
push
test
int
gs
jp
stos
and
mov
sti
movsl
std
mov
ja
stos
cs
pop
lea
mov
in
mov
imul
pop
xor
sti
out
mov
stos
mov
popf
shrb
jge
lcall
sbb
dec
enter
out
insl
stos
push
xor
mov
into
pop
jmp
lahf
and
les
iret
pop
inc
mov
ror
jmp
dec
jle
testb
scas
mov
or
mov
jmp
pop
out
stos
or
enter
or
dec
lcall
stos
cmp
es
mov
and
outsl
stos
or
push
pop
adc
mov
aad
stos
mov
nop
cmp
mov
lcall
jbe
and
in
call
stos
mov
inc
mov
pop
fcoml
mov
xchg
es
xchg
fistps
push
stos
repz
bound
aas
adc
js
aaa
shlb
iret
mov
sbb
or
sti
add
std
stos
cs
sub
aam
mov
inc
xchg
jl
jbe
push
lret
add
lcall
ja
sbb
mov
xlat
mov
hlt
adc
dec
enter
mov
test
loop
rcl
stos
lds
pop
into
sub
sahf
stos
push
mov
ret
nop
aam
add
testl
stos
outsl
jno
aad
jb
cmpsb
stos
mov
rclb
mov
pop
and
mov
aad
stos
mov
jp
bound
jae
imul
mov
xchg
movsl
sub
sub
orl
inc
or
dec
jbe
mov
add
add
stc
adc
in
iret
mov
mov
adc
stos
rcrb
pop
cmc
aam
jle
imul
stos
je
mov
pop
lret
loope
daa
test
push
sbb
cmp
icebp
scas
mov
cmp
or
int3
lret
inc
and
or
xor
dec
and
sub
fidivrs
ret
fwait
insl
es
and
stos
outsl
mov
leave
xchg
cmc
test
out
stc
push
shrb
and
or
or
mov
push
mov
shrl
pop
mov
ret
loope
clc
addr16
add
lcall
push
jge
or
stos
ror
hlt
shll
outsl
fcomp
movsb
dec
pop
je
sub
lods
mov
xorl
push
sahf
inc
add
stos
paddsb
pushf
adc
pop
stos
pop
adc
jae
clc
lea
sbb
push
test
call
jbe
aas
arpl
std
jle
fwait
inc
cmp
mov
cld
outsl
push
mov
ficoms
stos
xchg
inc
jae
mov
insb
dec
add
xchg
sbbb
sub
sahf
stos
aaa
int3
lods
xchg
ret
movmskps
inc
aad
dec
stos
add
mov
mov
cmpsl
inc
movsb
jmp
daa
mov
pop
cmp
movsb
xchg
dec
jle
cmp
xchg
jl
inc
addl
or
imull
mov
jmp
shlb
test
xor
movsl
add
hlt
sub
xor
cmp
mov
or
stos
or
das
push
sub
test
or
and
pop
inc
push
ret
xor
das
js
pop
jmp
mov
aam
fstpl
mov
cmpsl
test
mov
stos
xlat
loopne
movb
ljmp
adc
xchg
add
stos
clc
sbbb
push
cmpsb
pop
ljmp
ficoml
das
imul
jo
dec
imulb
ds
scas
imul
nop
xchg
into
stos
xor
adc
xchg
in
cmp
add
shrb
mov
stos
sahf
test
aaa
inc
stos
js
daa
xor
mov
mov
fidivs
stc
fwait
ret
jp
jae
stos
int3
pop
aas
repz
stos
push
push
mov
pop
out
add
and
icebp
cmpsb
outsb
mov
stos
call
xor
xor
jae
lods
ljmp
xchg
ss
mov
xor
aaa
jne
pop
xchg
mov
jns
jbe
dec
stos
push
add
jl
fwait
push
stos
cmp
enter
mov
cld
sub
stc
jge
clc
test
loope
mov
sti
mov
jg
lea
mov
stos
movsl
pusha
jo
xchg
iret
dec
repz
jmp
adc
stos
js
aam
adc
xor
repnz
mov
push
stos
mov
fldl
fsubrs
mov
mov
mov
mov
dec
scas
sub
aam
scas
fisubl
stos
sub
in
or
fs
inc
mov
ljmp
fcmovne
stos
negl
shr
jecxz
outsb
test
cmp
rorl
lods
push
push
aas
adc
sub
cwtl
cmpsb
fwait
cmp
and
in
cmp
dec
xlat
dec
subb
inc
mov
push
stos
repnz
pop
popa
or
repz
aaa
xor
stos
in
js
pop
sub
stos
into
imul
jmp
sbb
xchg
aam
mov
icebp
je
stos
mov
mov
sarb
imul
ficompl
cltd
push
imul
movsl
stos
lods
int3
mov
out
xor
and
imul
dec
stos
push
out
roll
stos
or
pop
push
cwtl
and
test
mov
ret
dec
add
fsubs
add
mov
jo
sbb
pop
test
adc
loopne
xlat
pop
stos
roll
sub
stos
pop
arpl
das
adc
pop
mov
sbb
add
xchg
out
push
sbb
pop
in
xor
out
fs
pop
dec
and
jbe
and
stos
sbb
mov
stos
push
jne
dec
shrl
mov
cmpsb
fucom
inc
push
xchg
addb
adc
adc
stos
push
pop
or
dec
xor
lds
add
lea
adcl
cmpsl
adc
sahf
mov
int3
lret
sbb
pop
mov
cmp
adc
jmp
ds
fsubrp
mov
xorl
cmp
inc
pop
mov
shrb
stos
imul
xchg
scas
fisubl
stos
pop
daa
call
jmp
jne
pop
fdiv
dec
out
imul
lahf
mov
js
stos
mov
push
cwtl
mov
stos
xchg
pusha
dec
bound
mov
mov
fisttpl
mov
dec
cmp
add
dec
cmp
inc
cs
sbbb
stos
dec
mov
loope
imull
sbb
sahf
mov
stos
and
fsub
stos
stos
aas
das
or
out
fs
mov
ja
ljmp
xchg
int
sbb
jmp
scas
xlat
add
jo
xchg
xor
cld
ja
imul
push
in
bound
enter
or
scas
lods
sti
jae
stos
test
insl
psubsb
rol
dec
js
mov
stos
fisubrs
lahf
subl
out
xchg
stos
mov
jae
out
dec
loopne
cmp
scas
or
pop
in
fwait
movsl
inc
mov
push
push
andl
fisubrl
push
nop
push
xor
pop
pushf
shlb
das
jl
adc
js
and
or
xchg
xor
lea
adc
stos
mov
in
mov
out
cmpsl
fnstsw
andl
mov
add
imul
lods
out
sub
stos
adc
insl
outsl
xchg
mov
push
in
mov
js
aam
jle
fstl
daa
insl
fwait
xor
xchg
jb
add
ucomiss
cld
add
leave
push
xlat
cwtl
scas
cmp
sbb
int
cmp
inc
mov
stos
adc
neg
test
mov
orl
stos
inc
mov
sub
cld
nop
ret
xchg
repnz
inc
stos
notb
clc
out
cmp
stos
sub
nop
pop
gs
shrl
cmp
mov
vshufps
dec
pop
stos
push
cli
inc
daa
add
mov
stos
jl
jns
inc
in
punpckhwd
inc
clc
jle
adc
sub
cld
sub
pop
mov
std
adc
jae
inc
int
dec
stos
rol
inc
xor
adc
mov
sbb
sahf
ds
jmp
jle
outsl
mov
push
xchg
mov
clc
cwtl
dec
repnz
stos
das
arpl
and
dec
dec
mov
inc
mov
and
fwait
and
dec
addb
stos
mov
shlb
daa
dec
pop
mov
adc
or
push
xchg
add
imul
xchg
scas
mov
outsl
mov
call
daa
es
sbb
dec
int3
dec
stos
repz
popa
xor
leave
mov
scas
stos
inc
js
jge
iret
pushf
mov
push
std
cs
in
xchg
jnp
stos
scas
test
mov
jbe
cmpsb
cmp
stos
mov
jmp
subb
mov
ds
loopne
cmp
mov
ret
adc
sub
xlat
sub
mov
sbb
stos
stos
rcl
mov
stos
mov
cltd
hlt
mov
dec
stc
mov
add
cmpsl
inc
mov
loope
jns
adc
data16
inc
mov
stos
mov
pop
cld
sub
mov
das
mov
fsubl
nop
rolb
xchg
or
pop
jmp
into
jno
shrb
dec
mov
leave
cmp
bound
inc
stos
popf
mov
imulb
sti
add
arpl
dec
stos
sbb
jl
inc
stos
mov
lahf
or
std
mov
repz
enter
mov
push
lea
mov
test
xor
or
lahf
test
push
cmc
test
insl
scas
jns
jnp
push
stos
pop
jmp
inc
mov
sbb
stos
bound
fcomps
dec
test
mov
sub
data16
test
push
std
aaa
sub
neg
and
outsb
pusha
pop
cld
push
iret
ds
js
inc
jbe
aam
dec
stos
shll
popa
sbb
cwtl
fnstcw
or
inc
mov
mov
insl
stos
testb
in
nop
out
sti
add
or
test
stos
aas
loop
sti
jge
dec
out
and
dec
or
iret
cmp
in
in
stos
leave
pop
test
pop
push
repnz
sbbl
es
sbb
push
icebp
bnd
stos
mov
cmc
cmp
lahf
out
push
call
fwait
inc
iret
sbb
outsl
test
test
and
mov
arpl
lock
mov
cmp
ss
xor
enter
stos
pushf
sub
and
lret
test
call
pop
fistpl
stos
dec
xor
popf
stos
xchg
dec
mov
dec
mov
mov
shll
ljmp
mov
lcall
inc
xchg
or
mov
push
xor
xchg
push
mov
int
mov
insb
arpl
iret
mov
mov
and
pushf
jbe
and
mov
mov
cmp
scas
int3
mov
mov
in
int
testb
mov
and
mov
movsl
push
nop
jmp
xchg
dec
xor
scas
xlat
rcll
pop
pop
imul
and
or
cmpsl
sub
xor
mov
inc
sahf
pop
mov
mov
lods
movsl
cmp
aas
lock
mov
das
stos
dec
pusha
mov
in
into
outsl
mov
arpl
fwait
stos
dec
inc
fxtract
mov
lret
nop
and
imul
or
cld
dec
std
mov
jecxz
fisttpl
pop
add
leave
xchg
lahf
stos
jnp
jge
test
mov
fnstcw
stos
cld
xchg
jne
jno
pop
stos
loop
fs
adc
fildll
and
mov
and
or
movsb
cmc
std
arpl
daa
stos
int3
pop
dec
fistpll
mov
xchg
shlb
hlt
jno
xchg
and
mov
cwtl
test
jno
stos
add
and
adc
daa
test
sbb
mov
andb
xchg
push
andl
xor
test
or
push
call
and
jg,pn
scas
inc
sarb
stos
ljmp
subl
addr16
enter
lret
imul
outsl
movl
add
aaa
stos
push
std
sbb
inc
xchg
stos
rolb
ja
rorl
js
decb
data16
mov
mov
loop
sahf
out
jg
ljmp
xchg
cmp
mov
insb
out
sti
mov
es
cmpsl
rcll
pop
adc
mov
add
stos
neg
jmp
adc
lret
xchg
mov
cmp
mov
enter
adc
call
mov
sub
cmp
mov
test
mov
fldt
bsr
lock
xor
and
inc
ljmp
sbb
movsb
out
cmp
adc
fstps
aad
std
xchg
inc
add
cmp
inc
jl
stos
es
pop
xor
testl
add
mov
aam
mov
leave
add
fsts
lds
pushf
jmp
ret
sbb
xchg
shrl
xchg
xor
aaa
sbb
lds
stos
nop
xchg
or
sub
repnz
mov
jns
xor
ret
cs
stos
outsl
inc
in
imul
pop
scas
cmp
gs
or
bound
dec
rep
adc
enter
xchg
lret
mov
or
push
imul
lcall
sub
inc
outsb
data16
movsb
aam
stc
push
stos
adc
mov
xchg
insb
stos
call
andl
cmp
fildl
push
or
sbb
push
cmp
sbb
stos
mov
jl
movsb
mov
push
stos
jecxz
stos
inc
mov
stos
andl
loop
push
outsb
stos
sbb
jo
hlt
fwait
test
add
xchg
pusha
jmp
jl
je
xchg
cmpsl
xchg
lea
pop
add
or
aam
adc
cmp
push
ja
push
stos
add
inc
mov
stos
mov
std
mov
sbb
jmp
lret
into
mov
add
and
lock
ljmp
and
push
test
rcll
mov
out
pop
stos
cmp
pusha
push
or
addr16
fimull
stos
aam
sarb
fwait
stc
and
jmp
cmpsl
ja
cli
jl
lods
mov
stos
outsl
cmp
pop
mov
jmp
test
rcll
pop
push
stos
cs
lock
adc
sbbb
cmpsl
inc
adc
pop
add
sbb
dec
adc
and
imul
jmp
fists
xchg
inc
jno
arpl
lock
jmp
sub
dec
test
lods
jo
stos
out
inc
repz
in
and
fiaddl
subl
stos
mov
insl
inc
subb
cmp
jmp
rorl
dec
es
popa
fnstenv
add
test
lods
ja
mov
mov
aaa
pop
shll
pop
and
adc
mov
add
fidivrs
arpl
sub
hlt
xor
stos
ret
and
divb
or
xor
rclb
js
sub
stos
sbb
in
cmp
xchg
add
cmp
sub
add
xchg
adc
lret
mov
iret
mov
fs
orl
stos
fimuls
dec
push
and
or
sub
sbb
jg
lods
stos
shll
data16
and
push
pop
stos
pop
aas
int3
mov
or
shrl
or
or
ljmp
push
std
mov
mov
push
in
stos
xorb
xchg
inc
movsb
fstpl
or
stos
push
mov
pop
and
inc
mov
push
mov
xchg
cmp
jae
pop
xor
and
lcall
pushf
mov
stos
xchg
or
mov
adc
testb
cs
mov
aaa
push
das
jns
test
repz
xor
push
lcall
sbb
adc
sub
shrl
jno
push
insb
imul
pop
stos
aad
movsb
sub
or
mov
nop
scas
out
cmp
and
cmp
mov
lock
testb
mov
fcmove
out
inc
shlb
or
inc
fstps
adc
std
add
cltd
xchg
and
lods
stos
scas
test
cs
dec
loope
stos
mov
add
sbb
mov
nop
xchg
mov
pop
int3
jnp
push
lods
lea
push
or
stos
cmpsb
and
cltd
xchg
stos
adc
xchg
and
or
sbb
imul
call
lcall
stc
mov
sbb
in
mov
loop
mov
xchg
or
mov
stos
popa
add
mov
mov
adc
and
xchg
jg
movsl
stos
out
push
jae
xchg
xchg
and
pop
ljmp
dec
out
xchg
push
fldcw
scas
movsl
lahf
shlb
pop
stos
iret
cmc
inc
and
stos
mov
outsb
stos
std
mov
in
push
pop
and
xchg
fxch
cmc
arpl
fmulp
push
inc
loopne
sub
fwait
popa
mov
mov
fisubrs
loopne
inc
mov
push
push
in
push
pushf
sbb
out
cltd
imul
stos
or
cmpsb
mov
push
stos
add
cmpsl
stos
aad
cs
push
outsl
adc
jmp
leave
fwait
imul
shlb
inc
popa
jne
sti
daa
xchg
lret
cld
ror
mov
arpl
imul
call
xor
xor
ja
sub
jae
cltd
xor
ror
or
fcoml
pop
ret
dec
jmp
fnstsw
mov
out
sub
jp
nop
push
add
movsb
add
adc
cmp
add
adc
xor
or
jo
dec
daa
xchg
pop
pop
add
cwtl
std
mov
jmp
mov
in
push
cmp
ljmp
aad
jle
push
test
test
xchg
lret
mov
cmc
add
sbb
int3
ret
fsubs
cld
jecxz
mov
sub
lods
or
stos
jne
inc
int
test
dec
xchg
add
icebp
or
mov
jl
xchg
xchg
stos
jmp
mov
addr16
dec
adc
stc
in
in
pop
dec
lcall
fs
stos
dec
shll
push
push
pop
aaa
xchg
dec
les
stos
rcl
loope
cwtl
sub
arpl
scas
fwait
mov
xchg
add
or
pop
stos
scas
lods
pop
negl
je
shrb
xor
mov
or
xor
pop
jge
push
bound
jo
pop
sbb
jg
fisubrl
test
ss
int3
stos
xchg
mov
mov
xor
imul
and
mov
int
mov
dec
mov
push
push
jmp
insb
aam
and
popl
cmp
std
or
jns
stos
pop
fwait
push
cmpsl
ss
push
mov
pushf
xor
cmc
popa
stos
and
xor
movsl
push
fwait
or
test
jmp
mov
cmpsb
sub
arpl
or
push
xorl
repnz
mov
ds
and
mov
pop
cmpsb
shrb
pop
xchg
dec
and
daa
and
xor
stos
mov
stos
xor
cmovle
mov
mov
stos
add
inc
rorl
lea
lcall
push
xchg
cmp
stos
add
bound
and
jbe
stos
in
sub
pop
movsl
out
xchg
cmp
imul
or
jmp
loop
stos
mov
mov
jmp
adc
and
cmp
or
loopne
xchg
mov
es
pop
stos
jae
out
test
mov
pop
ret
sbb
mov
daa
pop
lods
or
aaa
repz
js
mov
fmuls
jmp
push
es
cmc
mov
subl
sub
jg
cmp
jl
out
pop
subl
loope
shrl
stos
mov
fidivrl
out
jecxz
jne
mov
mov
push
dec
test
add
stos
dec
inc
mov
xchg
or
ds
repz
jne
or
ret
lahf
xchg
stos
pop
fcomps
mov
test
in
fnsave
add
aaa
sub
stos
aas
out
insb
inc
pop
call
pusha
imul
push
mov
jl
pop
stos
lret
xchg
ss
mov
std
pop
adc
pop
cld
test
cmp
push
xchg
iret
jg
jno
into
std
stos
jecxz
cli
jo
add
das
dec
cmp
mov
fcompl
lret
cmp
jg
ret
stos
mov
stos
fsincos
stos
adc
mov
stos
pop
out
and
sbb
sub
pop
cmp
ds
popa
jecxz
mov
out
xchg
xchg
dec
stos
outsb
leave
push
pop
pop
adc
cmp
pusha
cmp
mov
sub
push
inc
stos
adc
jle
or
das
stos
xlat
jg
jmp
stos
dec
imul
add
test
int
fildl
jl
xchg
jle
stos
inc
jbe
mov
mov
imul
inc
rorl
adc
adc
dec
push
pop
jb
clc
arpl
in
push
cld
sub
cmpsb
mov
cwtl
dec
xchg
cmp
cmp
push
mov
mov
pusha
jbe
lds
dec
adc
adc
jne
sbb
ret
and
pop
stos
fisubl
jns
pop
cmp
push
mov
cltd
mov
stos
mov
inc
mov
jae
stos
add
dec
movsl
jge
cmp
mov
jg
insb
stos
icebp
into
sub
repnz
mov
push
int
mov
sbbl
stos
and
hlt
js
jnp
xchg
in
cmp
out
mov
cmpsb
stos
pop
jg
test
cld
jns
outsb
fidivrs
imul
dec
cld
fwait
pop
stos
repz
ds
sub
jbe
gs
inc
dec
mov
mov
stos
push
idivl
insl
out
cld
mov
and
dec
in
stos
adc
push
into
mov
fdivr
loopne
hlt
mov
ljmp
cmp
cli
stos
sub
shlb
ja
dec
stos
dec
scas
outsb
mov
lcall
mov
pop
or
in
imul
sbb
sbb
ja
mov
xchg
dec
xlat
pop
dec
add
outsl
xor
cmpsb
mov
jp
adc
inc
test
xor
mov
xor
stos
mov
dec
sbbl
cmp
fld
scas
push
into
cmpsl
jmp
inc
cmp
jmp
xchg
ja
xor
adc
addr16
pop
loope
xor
cmp
lahf
shll
pop
orl
fstpt
cs
pop
cmp
fmull
aaa
jp
arpl
sub
ret
push
aad
jae
mov
popf
xor
adc
mov
rcrb
pop
outsb
stos
aaa
mov
in
mov
mov
cmp
stos
add
dec
outsl
es
fldpi
adc
cwtl
dec
xchg
or
pop
dec
test
xchg
push
stos
pushf
jb
mov
das
test
fsubrp
rcrb
jmp
adc
or
mov
in
stos
dec
push
ss
push
fsubrs
subb
jb
push
mov
scas
int
enter
fcoml
cmp
sub
xor
push
sub
je
fucomip
push
stos
mov
dec
test
clc
cmp
push
mov
add
push
add
and
popf
fildll
in
mov
jl
or
or
stos
add
arpl
enter
jmp
push
lcall
sarb
jne
lret
stos
xor
stos
data16
rclb
jecxz
jmp
imul
push
xor
lods
jns
add
xchg
sub
stos
adc
leave
add
scas
rorb
cmpsl
inc
in
stos
outsb
out
sbb
shlb
pop
xor
insb
arpl
lret
mov
lds
movsl
mov
sub
sbb
jmp
cmp
mov
mov
cmp
repz
mov
arpl
mov
clc
sub
iret
ljmp
stc
cli
aas
lods
stos
fs
and
incb
cs
add
dec
xor
or
jns
mov
stos
mov
and
test
adc
fcmove
iret
xchg
sub
pop
stc
mov
push
lret
stos
add
adc
dec
cmp
fwait
stos
pop
mov
stos
lret
pusha
bound
or
andb
std
xor
xchg
dec
lea
adc
and
stos
push
mov
jmp
stos
and
addr16
imul
lret
nop
pushf
sub
sbb
clc
loop
in
imul
outsb
aas
lods
mov
nop
mov
insl
sahf
lea
sub
mov
cwtl
cld
adc
shlb
pushf
stos
xor
dec
iret
jmp
loope
imul
inc
test
fcmovnbe
jns
sti
push
lret
stos
pop
inc
xor
fisubs
push
daa
lock
gs
stos
cltd
inc
dec
pop
push
ljmp
repz
mov
rcl
pushf
mov
mov
inc
pop
sarl
cmpsb
xchg
les
stos
dec
and
inc
insb
rclb
into
jp
jnp
notl
sub
test
pop
xchg
imul
mov
movsb
and
jmp
adc
xchg
nop
fbstp
and
adc
pop
push
daa
leave
push
xchg
aaa
cmp
pop
das
stos
cmovo
xor
push
lcall
pop
cmp
push
or
stos
lods
inc
jns
shlb
inc
iret
sbb
push
xchg
xor
dec
adc
stos
xchg
mov
lret
fwait
insl
lods
xor
mov
dec
push
dec
stos
ds
xchg
cmp
scas
mov
test
adc
and
sub
pop
test
mov
xchg
lret
pop
sub
mov
inc
mov
jae,pt
fidivl
insb
jmp
inc
test
cs
add
out
nop
cli
xor
inc
data16
stos
sbb
or
push
iret
es
stos
mov
addr16
jne
dec
nop
push
stos
or
xchg
movb
cli
stos
fs
sub
outsl
push
mov
mov
out
stos
fmul
or
dec
sub
inc
cltd
mov
pop
stos
xchg
repz
mov
jg
mov
jmp
outsb
and
movsl
pop
insb
xchg
fs
or
mov
fistpl
sub
stos
bound
jno
mov
je
mov
push
cmc
push
and
lds
in
sbb
lcall
sahf
jle
ss
test
mov
mov
pop
and
adc
fdivrl
add
mov
mov
cmp
js
pop
mov
pop
xchg
push
sahf
sub
hlt
mov
int3
or
adc
fxch
lds
imul
push
mov
mov
stos
xor
pop
subl
popl
sbb
aaa
pop
loop
stos
fnstenv
mov
mov
stc
jp
movsb
fistpl
xchg
aam
stos
mov
in
inc
icebp
stos
or
push
shrl
lahf
or
jno
sub
mov
xchg
clc
stos
push
jo
fsubs
lahf
stos
inc
or
cmpsl
mov
stos
lret
test
popf
fwait
sub
xor
sbb
int3
neg
shr
movsl
ljmp
clc
sbb
dec
shrl
aaa
popa
in
and
inc
stos
sub
push
xchg
jp
xor
movsl
stos
cwtl
inc
sar
push
stos
shll
lea
and
or
outsb
imul
ljmp
add
clc
xor
inc
data16
stos
mov
das
push
imul
push
xor
icebp
aad
pop
in
push
cmp
dec
xor
mov
lock
inc
adc
mov
sub
inc
out
mov
stos
je
sbb
into
cmp
or
pop
mov
xchg
stos
pop
rorl
stos
ret
js
mov
pop
imul
pop
imul
cli
add
inc
sub
add
rorb
hlt
fsubrs
repnz
leave
mov
pop
gs
aam
fld
stc
dec
jl
je
aaa
in
jge
ret
pop
xchg
mov
inc
ja
stos
adc
gs
mov
nop
xor
xchg
dec
stos
roll
test
clc
out
adc
inc
popa
push
fwait
arpl
pushl
mov
mov
xor
hlt
dec
or
lods
sbb
scas
stos
xchg
rcpps
stos
mov
or
dec
stos
mov
or
movsb
repz
xor
push
js
sahf
and
pop
stos
sbb
cs
fsubs
repnz
leave
jb
cwtl
js
and
stos
negb
pop
arpl
cmp
movsl
xor
fidivrl
jle
inc
leave
xlat
xchg
add
movsb
pop
fwait
mov
fdivp
mov
testb
or
daa
xchg
and
imul
scas
outsb
arpl
sub
push
push
jmp
sti
mov
push
mov
mov
or
std
mov
je
mov
and
xlat
in
stos
lret
jl
out
jge
shrb
es
inc
xor
or
sbb
ljmp
shlb
xchg
inc
pop
stos
out
or
fiaddl
inc
in
loop
popf
push
push
mov
in
stos
mov
ljmp
push
jmp
adc
cli
inc
push
in
stos
sar
mov
cld
out
xchg
arpl
test
add
and
fs
stos
jns
aaa
js
xor
add
pop
xchg
mov
xor
scas
pop
xchg
stos
stos
mov
rolb
stc
mov
in
mov
hlt
xlat
mov
icebp
stos
lods
push
adc
test
popa
cmpl
xor
insl
stc
push
icebp
scas
stos
test
add
mov
mov
stos
push
imul
mov
bts
in
movsb
stos
dec
dec
mov
xlat
stos
sub
jp
out
scas
sti
jo
rorl
inc
mov
jl
enter
mov
scas
orl
sar
dec
mov
add
sbb
ss
xchg
adc
loopne
jnp
inc
mov
mov
imul
mov
mov
insl
nop
in
stos
shl
and
push
mov
stos
sbb
push
and
subb
xchg
es
stos
jb
fimull
loop
adc
mov
pop
mov
sar
cmp
fs
add
cmp
cli
sub
xchg
ja
ret
rorl
mov
adc
stos
mov
stc
aas
les
pop
gs
arpl
sbb
stos
in
cmp
sub
pop
imul
in
testb
adc
push
pavgw
push
pop
stos
mov
ret
popa
sub
fadd
stos
pushfw
mov
mov
cmp
adc
mov
and
test
in
stos
lods
push
lods
lds
jp
stos
out
push
popa
aas
mov
pop
fsubrs
jae
cld
mov
or
push
pusha
sub
xor
jns
mov
push
arpl
repz
jmp
or
inc
mov
adc
push
loop
int3
daa
adc
leave
subb
push
mov
xchg
xor
xchg
in
dec
negl
pop
sub
push
xchg
lock
dec
pop
scas
xchg
pop
sub
xchg
pushf
movsb
lahf
loopne
mov
mov
jb,pt
imul
and
out
loope
gs
leave
bound
loopne
fcoms
jecxz
adc
fldt
sbb
imul
in
aaa
inc
cmp
and
push
addb
outsl
adcl
clc
stos
pop
lods
jp
push
int3
in
mov
je
int
movsb
xchg
mov
cmpsb
cld
cmp
xor
inc
scas
lret
and
jno
xchg
imul
out
arpl
cmpb
mov
shll
mov
and
shl
fsubl
cli
cmp
cltd
sub
pop
mov
shrb
mov
rcrl
cltd
xchg
jmp
jle
mov
jnp
mov
iret
aam
ds
fidivl
xchg
jbe
cmpsb
xor
orl
xor
in
aaa
mov
dec
into
and
sti
xchg
push
stos
jge
xor
icebp
mov
je
mov
bound
inc
sahf
stos
imul
add
push
test
or
stos
dec
out
pop
out
fistl
xchg
shlb
ds
stos
dec
add
or
mov
xchg
mov
push
stos
mov
xor
mov
push
cwtl
add
fwait
stos
lret
ret
pop
xchg
and
fwait
popa
sbb
mov
stos
mov
je
cmp
lret
arpl
fwait
in
or
cmp
dec
imul
add
fcmovu
ss
mov
push
xchg
lods
aas
push
fsubs
mov
stos
fimuls
xor
mov
nop
negb
inc
adc
dec
lcall
and
xchg
xchg
cld
imul
scas
data16
mov
pop
jns
call
fldenv
test
ja
jmp
push
int3
ret
or
popl
fdivrs
mov
mov
jb
xchg
sbb
int3
daa
les
mov
shrl
cmp
and
pusha
sub
repnz
jb
adc
cmp
xchg
subl
inc
enter
adc
call
insb
stos
jmp
mov
addr16
xchg
dec
mov
and
xor
or
fwait
mov
xor
orb
push
rep
movsb
lods
jne
stos
pushl
in
dec
aad
mov
stos
out
cmpsb
cwtl
popf
mov
lods
mov
les
push
loopne
into
movsl
jnp
push
cmp
das
stos
sti
mov
cmp
dec
scas
lret
test
sub
adc
stos
bound
dec
jb
cmc
or
les
jge
movsb
lcall
das
or
mov
stos
mov
cmp
pop
stos
popa
xchg
push
dec
jnp
adc
push
xor
and
movsl
xchg
in
mov
nop
rcl
out
add
mov
mov
mov
mov
sub
pushf
jg
stos
fsts
or
stos
ret
cs
and
out
lahf
jmp
inc
inc
push
aad
loopne
or
cli
out
mov
icebp
add
mov
hlt
je
inc
or
add
pop
cs
fsubrl
jne
in
sbb
or
jl
dec
jmp
insl
or
stos
add
cmp
stos
lea
inc
xor
fwait
mov
inc
stos
pushf
enter
sub
lock
ret
inc
jle
movsb
dec
cmpsb
fsubrl
lds
lahf
arpl
outsb
inc
movsb
es
ret
in
xor
jl
inc
stos
fstps
fdivrs
adc
add
in
xchg
and
jnp
jmp
xchg
inc
cli
inc
movb
lret
into
je
jmp
out
sub
xor
cld
addr16
adc
sbb
orb
mov
out
push
mov
loopne
xchg
fwait
and
clc
addr16
rclb
cmp
push
mov
cmpsb
xor
nop
rep
add
pop
ljmp
orb
sub
aad
mov
pop
and
mov
ret
addb
or
push
sub
push
add
stos
repz
mov
push
mov
mov
mov
stos
into
xor
ljmp
dec
fdivs
pop
ret
push
xlat
stos
incb
outsb
mov
and
addl
jl,pt
lods
xchg
mov
repnz
addr16
add
sbb
repz
stos
xchg
imul
stos
in
inc
mov
cmpsl
sahf
xchg
movsl
stos
test
dec
jmp
std
cmpsb
xchg
sbb
xchg
es
movsl
lods
jecxz
shrl
cmp
adc
sub
fstl
push
add
inc
rol
popf
std
mov
cmc
xorl
movsb
lods
sbb
lock
sub
push
in
out
jb
push
inc
mov
stos
jne
popf
imul
fwait
out
cmp
iret
enter
push
popf
stos
cmp
mov
sahf
add
xor
or
stos
fs
call
xchg
outsb
push
mov
ja
pop
or
lahf
test
jno
movsl
imul
adc
xchg
pop
lahf
mov
scas
stos
pop
outsb
xchg
pop
mov
stos
mov
dec
push
inc
stos
and
out
mov
stos
loope
pop
in
cwtl
fstps
stos
add
jo
jecxz
lret
sahf
jg
mov
imul
imul
and
mov
jmp
stos
jns
push
adc
cmpb
mov
push
mov
xchg
add
aam
stos
xchg
xchg
and
jmp
add
cs
cmp
inc
or
lahf
jecxz
movsl
push
fidivs
repnz
sti
sub
mov
in
addr16
pop
xchg
ljmp
out
adc
mov
inc
lret
jmp
stos
fsts
jno
push
pop
subb
mov
addr16
mov
cs
aas
les
fdiv
push
mov
mov
mov
sub
mov
stos
xchg
push
mov
sbb
or
inc
fidivrl
popa
shrd
shrl
imul
mov
dec
gs
imul
lods
stc
or
cmp
sahf
sub
fstpt
mov
and
sub
mov
jle
jnp
push
iret
pop
shrl
fdivrp
mov
cli
dec
pcmpeqb
inc
les
loopne
ret
and
mov
push
ss
lahf
cltd
stos
adc
loop
stos
std
dec
popf
jge
mov
and
popa
push
repnz
ljmp
stos
scas
stos
or
stos
fsubr
add
stos
incl
rolb
je
icebp
stos
lret
pop
test
insl
xor
repz
pushf
push
sub
es
mov
stos
stc
movsb
ds
stos
clc
adc
leave
stos
sub
mov
test
push
out
sbb
test
or
shll
fldcw
pop
cltd
mov
and
mov
es
dec
rep
into
lds
cs
sub
sbb
dec
stos
push
inc
xchg
loopne
maxps
int3
outsb
out
stos
inc
sbb
jg
jp
in
mov
push
leave
sub
stos
push
jmp
fldcw
pop
ljmp
in
lods
sbb
push
jns
ficoms
test
push
arpl
int
inc
ja
xor
push
jle
bound
xchg
rdmsr
hlt
int
stos
push
pop
adc
imul
jnp
out
sbb
cmp
xor
iret
movsl
scas
push
data16
push
jno
and
lcall
movsb
dec
pop
setb
cmpsb
xor
inc
stos
fsts
mov
mov
pop
leave
inc
repnz
cmp
mov
ss
sbb
sub
xor
jbe
xchg
in
xchg
sbbl
stos
sbb
fisubl
enter
push
jae
mov
xchg
or
jno
orl
imul
push
stos
or
cmpb
test
or
daa
mov
movsb
stos
adc
std
pop
repnz
mov
sbb
cmpsb
jbe
push
push
sti
pop
stos
adc
pop
cld
scas
jne
loop
mov
dec
sub
into
jae
dec
lcall
dec
roll
stos
mov
testl
stos
ds
adc
xchg
pop
imul
ret
sub
mov
mov
jl
mov
mov
fistl
arpl
push
or
sbb
lods
adc
mov
stos
jb
push
fwait
add
outsb
xor
stos
push
aaa
mov
mov
insb
fimull
or
daa
testb
add
ljmp
push
movsl
fildll
mov
jbe
stos
mov
add
xor
movsl
imul
cmp
mov
subb
lods
xor
dec
stos
sbb
nop
and
sbb
mov
mov
jge
rcl
sbb
mov
stc
push
ds
cmp
fs
lcall
stos
in
mov
das
inc
movsb
dec
lods
mov
cmp
roll
imul
fdivrl
test
push
stos
push
add
addr16
jmp
add
pop
mov
popa
jg
xchg
push
mov
mov
cli
daa
sub
xchg
lret
insl
push
lock
mov
inc
out
adc
mov
aad
jbe
mov
cmp
mov
sub
daa
stos
jp
mov
pop
pop
stos
jmp
dec
insl
or
imulb
lods
pop
arpl
dec
jno
pop
stos
mov
addb
ret
xor
mov
push
shll
inc
ds
test
stos
sbb
mov
shll
mov
xchg
je
or
punpckhdq
sub
fs
lock
daa
in
and
jg
stos
push
mov
and
jge
movsb
adc
jbe
mov
jmp
les
movsl
fistl
repz
jae
sub
stos
xor
adc
ret
std
xchg
mov
or
stos
and
mov
dec
pop
addl
push
adc
mov
jmp
fmull
pop
or
xchg
stos
push
xor
push
jmp
xchg
mov
and
ljmp
cmc
ss
push
adc
dec
in
xor
cmpsb
dec
sub
in
jge
movsb
fldenv
mov
cmp
cmpsl
mov
lret
or
inc
mov
stos
ss
loope
sub
xchg
dec
and
mov
jne
jne
mov
aad
fbld
jmp
cli
cs
mov
mov
sub
pop
sub
jae
mov
jle
inc
fwait
pop
push
xor
stos
jg
and
stos
cmp
sti
xor
lahf
pop
dec
xchg
fsub
cltd
popa
pop
stos
es
pop
inc
sbb
dec
packuswb
pop
movsl
fwait
sub
mov
ss
fwait
pop
jnp
jmp
mov
inc
mov
jp
aas
iret
stos
dec
mov
ljmp
xchg
lods
xor
idivl
add
out
push
sub
mov
test
xchg
push
push
inc
xchg
imul
stos
jbe
xchg
popa
in
xchg
and
push
cmp
insl
fwait
sub
stos
adc
sub
inc
mov
mov
call
cmp
stos
dec
sub
and
fwait
xchg
stos
mov
fnstenv
fwait
subb
ds
and
ret
and
inc
out
pop
cmp
andl
lods
stos
push
out
add
or
icebp
stos
pop
sbb
out
in
mov
xor
jmp
lock
mov
adc
shlb
aaa
je
pop
push
or
mov
stos
out
or
and
mov
push
imul
dec
out
pop
mov
xor
stos
push
int
icebp
or
stos
mov
std
or
stos
inc
cli
sub
jo
sbb
scas
jecxz
mov
repnz
cmp
and
or
dec
loop
and
pop
stos
ficomps
dec
leave
stos
loopne
mov
dec
in
mov
fwait
cwtl
lea
pop
out
imul
jmp
sub
cmpsb
stos
add
mov
or
push
mull
mov
or
ljmp
adc
callw
and
stos
enter
daa
jno
sbb
pop
inc
mov
push
jge
insb
lods
cmpsb
lret
je
in
nop
flds
fisubs
sub
mov
std
dec
jo
sti
insl
inc
pop
stos
jbe
lds
stos
sbb
mov
pop
stos
mov
push
mov
mov
adc
lea
jnp
jne
stos
adc
mov
inc
std
jmp
add
fwait
out
aaa
lods
stos
sbb
jo
cltd
mov
ja
jl
fsubrl
mov
jmp
pop
ret
in
cmc
ljmp
cld
mov
mov
add
jb
jl
mov
xchg
stos
cli
adc
jp
jo
das
stos
pop
rclb
push
stos
sub
xchg
push
shll
outsl
inc
call
je
test
loopne
stos
mov
adc
insb
pop
fldcw
sbb
daa
movsb
pushf
incl
out
stos
mov
sub
stc
js
andl
pop
jg
addl
cmpsl
stos
aaa
dec
adc
jne
ret
cmp
in
sbb
or
ss
int3
stos
mov
mov
icebp
imul
xchg
aaa
push
adc
rcl
scas
stos
call
jg
sbb
jno
mov
scas
and
test
push
jl
push
and
cmp
lret
mov
iretw
sub
dec
scas
jp
stos
mov
and
inc
and
dec
cmp
scas
imul
xchg
mov
xchg
lar
pushf
cmp
mov
shlb
aaa
or
stos
ljmp
ret
addr16
mov
lods
pop
stc
pop
sahf
inc
stos
inc
xchg
and
push
pop
stos
mov
push
cmp
push
stos
mov
or
jmp
mov
mov
lret
jnp
insl
push
cld
pop
sahf
test
daa
stos
incl
leave
and
or
jp
xchg
fwait
dec
xchg
shlb
lret
pop
rcrl
xchg
outsl
imul
cmp
mov
test
imull
cmp
mov
pushf
adc
movsl
dec
or
sahf
xor
or
je
movsb
push
stos
and
clc
insb
sahf
rcr
inc
push
mov
movsb
add
sbb
pop
enter
daa
xor
mov
and
repz
xor
xor
push
stos
clc
lcall
out
lcall
in
stos
push
jg
sbbb
stos
pusha
mov
sbb
stos
xor
adc
and
shlb
test
cwtl
xchg
xchg
push
stos
or
pop
sbb
push
insb
imul
and
mov
sub
mov
mov
aas
jg
xchg
dec
and
in
pop
pop
fadd
fwait
inc
cmp
mov
loope,pt
jp
adcl
jle
push
and
cmp
mov
stos
fsubs
push
in
leave
lret
adc
jp
insb
and
ret
bts
sub
ds
mov
fidivrl
shlb
jg
mov
sbb
mov
cwtl
xchg
test
lret
sub
ja
pop
mov
rorl
rcll
mov
add
sub
push
pop
roll
fwait
out
sub
dec
add
jmp
loop
mov
sbb
xor
sub
fwait
stc
or
mov
push
mov
loope
imul
inc
pop
stos
flds
inc
push
stos
push
std
jns
ror
jmp
or
aaa
and
mov
repz
icebp
stos
lock
mov
jle
sti
es
pusha
in
arpl
inc
and
fucomp
stos
popa
cwtl
push
push
xor
pop
call
xor
loope
push
stos
jb
js
cmpl
inc
or
je
ja
scas
or
stos
lret
xor
ret
cs
mov
dec
jno
mov
inc
mov
inc
cmpsb
or
mov
add
stos
mov
pop
add
push
mov
sbb
add
add
jnp
repz
push
push
mov
mov
sub
or
xchg
stos
xor
mov
int
jmp
add
push
cltd
adc
popf
daa
imull
sub
xor
imul
mov
stos
cmp
jg
adc
sub
sti
decl
mov
insb
insl
pop
cltd
js
stos
int3
mov
loope
sub
call
mov
push
xchg
stos
mov
push
dec
lahf
in
sub
fcoms
cmpsl
lcall
and
sbb
and
cmpsl
leave
int
inc
mov
in
jmp
mov
xchg
lds
inc
stos
ljmp
dec
cmp
testb
mov
jle
jno
in
dec
fsubrl
roll
jb
add
fildll
pop
mov
cmc
adc
dec
cwtl
and
push
push
mov
sbb
xlat
es
xchg
stos
jo
mov
push
stos
fldl
mov
sub
push
cld
mov
sbb
es
mov
mov
fwait
jnp
lods
mov
push
sbb
jp
subl
aam
stos
shrl
xchg
lods
sbb
sub
xchg
jne
stos
jo
mov
jecxz
pop
push
shl
or
stos
add
jp
adcl
leave
lods
sub
int3
stos
sbb
fcos
loopne
cmpl
push
in
aaa
stos
xor
pop
or
cmpsb
stos
addr16
jb
fincstp
test
or
push
cmpsl
or
cwtl
add
xchg
stos
xchg
pop
jge
das
bound
cld
pop
mov
add
inc
jmp
nop
stos
es
pop
lea
aas
stos
in
inc
xchg
push
std
or
lahf
daa
stos
push
ja
je
push
stos
mov
leave
mov
sahf
sbb
jg
out
inc
pop
mov
movsl
jns
nop
xcrypt-cfb
cmpsl
mov
add
adc
stos
notl
mov
and
and
mov
or
add
les
clc
jge
mov
sahf
ret
push
stos
sbb
xor
push
fimull
shl
rcrl
cwtl
loop
add
mov
mov
cmp
ljmp
jns
mov
and
shr
mov
xchg
fldenv
jb,pn
adc
pop
ja
shrl
mov
adc
pop
inc
insb
add
cmpsb
shlb
xchg
js
jl
pop
dec
mov
cs
jmp
loop
mov
cld
in
fsubrs
sbb
jle
lods
into
xor
test
add
stos
stc
test
xchg
dec
into
xchg
dec
jge
cld
stos
jle
repnz
xchg
test
add
cmp
call
mov
add
cmpsb
lahf
dec
jo
dec
jmp
mov
mov
or
dec
stc
sbb
stos
jbe
ficompl
loop
ja
xor
mov
mov
jp
lock
into
adc
stos
sar
sub
stos
cmc
xchg
mov
test
adcb
stos
int
mov
rorb
and
and
jbe
lret
push
imul
mov
nop
jl
sarb
nop
sbb
pop
sbb
sbb
sarl
loope
pusha
fwait
xor
fnstsw
add
or
xor
sub
xchg
std
sbb
push
sbb
out
shll
mov
xchg
inc
stos
popf
push
stos
inc
in
je
dec
jmp
jg
push
mov
cmc
jl
pop
xchg
push
adc
sbb
xchg
daa
in
cli
negl
mov
mov
iret
push
outsb
in
scas
stos
popf
mov
pop
stos
sbb
push
hlt
mov
jg
push
loop
inc
in
scas
adc
sub
mov
clc
pop
fwait
mov
stos
mov
cmc
arpl
aaa
mov
pop
xor
aas
xchg
pop
adc
pushf
ficoms
dec
stos
es
mov
stos
push
mov
pop
scas
movsb
hlt
fimuls
jns
movsl
outsl
mov
pop
mov
pop
out
mov
push
insb
nop
mov
adc
dec
shlb
mov
cmpsl
pushf
stos
jb
popa
out
lahf
cld
movsl
push
rorl
fcomps
icebp
adc
aam
inc
dec
mov
outsb
sub
stos
sbb
jmp
rorl
in
dec
sbb
sbb
cwtl
pop
mov
stos
xchg
push
push
in
jnp
mov
movsl
bound
xchg
stos
jb
out
sahf
jmp
ljmp
rcrb
test
or
xchg
sbb
sbb
xor
mov
xor
xchg
or
pop
adc
mov
cli
int
jns
cmpsl
push
js
mov
mov
stos
lahf
dec
pop
stos
pop
push
or
aas
or
dec
stos
ljmp
cld
test
stos
nop
int3
repz
subb
femms
aad
test
stos
mov
sub
out
adcl
add
dec
out
mov
lcall
sahf
dec
stos
lret
in
sbb
jge
movsb
pop
stos
jle
enter
or
pop
lea
cmp
push
jl
stos
sbb
fwait
dec
sub
fdivrl
inc
mov
fdivrp
stos
ds
fwait
mov
out
xor
or
cmp
call
rclb
push
fs
pop
lahf
stos
jo
inc
out
fwait
or
lds
jno
push
lahf
mov
fistpll
pop
sub
adc
mov
popf
jbe
in
stos
scas
xor
addr16
and
shrb
lods
inc
movsl
mov
je
inc
stos
mul
or
jno
shlb
cmp
movsb
int3
xchg
mov
jne
sti
push
movsb
lds
mov
clc
subb
push
mov
stos
mov
pop
adc
sti
ljmp
inc
dec
xor
aam
aaa
push
inc
mov
stos
jo
test
xchg
stc
stos
xchg
out
push
sbb
sahf
bts
jg
mov
inc
jl
jmp
das
sti
mov
jl
add
popa
scas
jne
mov
lcall
movsl
push
repnz
ja
inc
test
inc
inc
fs
xchg
and
xor
or
cmp
jo
in
pop
lahf
mov
movsb
dec
cmp
pop
mov
push
call
mov
test
xchg
into
stc
stos
cmp
mov
jmp
xor
push
stos
and
push
jno
jecxz
sbb
cmp
addb
adc
mov
adc
dec
or
lea
out
stos
add
jbe
lods
enter
daa
jo
addb
lock
setne
es
scas
cmpsl
stos
mov
cmp
stos
push
push
into
test
stos
mov
and
mov
mov
sub
daa
andl
pop
iret
lods
das
jle
in
mov
lock
sti
xor
pop
stc
imul
popl
mov
mov
es
xchg
jno
mov
pop
out
repnz
add
push
sbb
mov
mov
push
clc
mov
add
fwait
mov
and
inc
lret
stos
adc
dec
jno
add
jne
stos
aad
and
je
imul
rol
jle
mov
push
stos
cmp
mov
pop
pop
aas
cmp
icebp
scas
mov
cmpl
stos
movsl
mov
sub
out
mov
fldt
enter
shll
jg
je
andb
rol
mov
inc
jecxz
enter
pop
imul
fsts
dec
jl
push
iret
push
mov
xor
add
div
fidivrs
pop
or
add
dec
pop
jg
jge
outsl
shll
cmp
sbb
movsl
push
adc
xchg
mov
jnp
xor
sub
insl
xchg
mov
pop
movsb
push
incb
jp
mov
xchg
stos
dec
test
das
sub
jg
clc
cmp
stos
aaa
adc
push
test
std
pop
stos
imul
stos
or
and
dec
mov
out
ja
add
lahf
das
mov
loopne
push
jb
sbb
pop
push
sub
lahf
adc
dec
mov
imul
loopne
das
rclb
xor
push
into
clc
stos
loop
jp
lret
push
jnp
cmpsl
mov
lcall
xchg
mov
addr16
stos
aad
cmpsl
jmp
mov
sub
sub
xor
jge
test
loopne
xlat
pop
and
jae
pushf
push
inc
mov
xor
xchg
addr16
test
or
mov
jo
stos
repnz
andb
and
push
push
pop
lcall
jne
popf
add
xchg
mov
pop
ret
stos
in
dec
jb
push
insl
cmpsl
mov
adc
imul
cs
and
mov
stos
rolb
add
jmp
stos
mov
stos
imul
mov
addr16
aam
test
clc
sub
stos
rolb
movsl
scas
movsb
stos
fidivs
mov
or
and
xchg
xchg
stos
ret
pop
jb
stos
rcrl
mov
fwait
inc
mov
pop
mov
jns
fnop
adc
stos
repz
mov
push
push
andl
xor
jbe
int
jmp
push
in
out
dec
pop
xchg
push
stos
jp
ret
fptan
stos
imul
test
clc
imul
mov
and
cmp
stc
aad
sbb
nop
inc
stos
sbb
dec
mov
mov
cmpsb
inc
stos
mov
and
mov
push
movsl
dec
scas
iret
jns
sub
sub
push
xchg
mov
stos
sbb
push
jmp
jae
js
dec
sar
int3
fnstenv
dec
jnp
test
adc
fwait
pushl
mov
jp
mov
or
fdivrp
sub
repz
fmul
mov
stos
mov
or
sti
pop
pushf
jo
outsl
fisttpll
jmpw
ficoml
adc
fiadds
stc
jmp
stos
outsl
pop
mov
popf
insb
orb
pop
gs
ds
xor
ss
stos
cmp
xchg
pop
fisttpll
cmp
ficomps
stos
adc
fwait
push
mov
mov
stos
cmp
rcrb
xchg
push
fs
pop
fdivp
cmp
fwait
mov
test
das
sahf
lahf
add
clc
inc
jg
add
mov
pop
daa
lahf
or
shll
mov
push
inc
adc
shll
stos
out
jge
jnp
imul
inc
xchg
cmp
aad
pop
ja
pusha
imul
pop
outsl
mov
dec
dec
idivb
scas
mul
fwait
cmp
dec
mov
jp
dec
sbb
pop
stos
and
mov
arpl
pop
mov
outsl
or
addr16
imul
nop
call
mov
out
mov
popa
push
cmp
call
pop
push
cmp
ljmp
add
jle
mov
xor
loope
jno
sbb
push
stos
cmpsl
sub
xchg
pop
sub
or
lahf
ja
lea
stos
jmp
imul
dec
rorb
stos
pop
and
ret
sub
jb
test
xor
lea
stos
add
mov
xchg
dec
int
stos
sub
pop
cs
scas
pop
pusha
ljmp
or
jle
stos
lock
stos
cs
push
roll
mov
push
sub
mov
and
sbb
or
fmuls
pop
cmp
out
stos
test
jns
push
outsl
fldt
stos
pop
jo
addr16
popf
repz
pop
arpl
mov
daa
xchg
in
jbe
fwait
pushw
lock
pop
cld
testb
or
cmp
test
jae
pop
xchg
shrb
pop
mov
push
push
rcrb
jle
mov
cmp
mov
sub
mov
stos
push
test
inc
xchg
decb
jle
jge
mov
xchg
mov
clc
lret
or
stos
push
sub
test
ret
test
jae
mov
rcll
mov
loopne
pop
test
xor
lods
popf
add
mov
aas
jg
jo
stos
xor
sub
stos
and
pop
inc
jmp
xor
out
and
fwait
xor
std
cmp
add
dec
jns
repz
mov
push
sbb
out
xor
imul
scas
push
cmp
in
mov
mov
mov
orb
in
in
dec
add
das
and
add
jnp
ja
in
xorl
xchg
out
sub
stos
cmc
popa
mov
adc
cmp
mov
sti
xor
dec
pop
stos
cwtl
std
or
ljmp
cltd
pop
sbb
pop
lods
jnp
or
mov
mov
aas
mov
stos
xchg
in
pop
adc
mov
int3
imul
or
adc
push
mov
stos
and
jb
dec
xor
stos
push
lea
popa
stos
ja
pop
xchg
pop
xor
xchg
movsl
mov
rep
adc
ljmp
mov
adc
in
daa
lea
stos
dec
rsm
imul
shrb
xor
mov
mov
imul
jno
data16
shr
or
mov
flds
jmp
push
xor
jno
iret
pop
xchg
mulb
rolb
inc
cmpsl
mov
movsb
fstpl
imul
push
lods
hlt
imul
dec
fmul
jmp
stos
lahf
adc
jno
lds
xchg
imul
test
gs
mov
jno
jg
mov
mov
mov
push
lea
mov
cmp
pop
sbb
xchg
xor
les
stos
fidivl
je
stos
or
movsl
xchg
mov
and
pop
mov
iret
scas
stos
stos
fdivl
repz
test
shr
xchg
or
test
jmp
push
clc
mov
aaa
or
stos
pop
cltd
ucomiss
gs
mov
sti
push
imul
fimuls
push
xchg
imul
push
sub
add
jne
mov
stos
lret
cwtl
scas
inc
aam
stos
mov
xchg
stos
lods
jg
mov
nop
imul
scas
pop
push
jmp
mov
xchg
jo
xor
sub
pop
stos
stos
out
outsl
push
inc
ret
addr16
popa
int3
mov
dec
mov
cmp
test
or
mov
xchg
dec
ss
add
cmp
sub
rorb
mov
dec
sub
jg
stos
imul
sbb
add
pop
outsl
ficoml
stos
ss
sbb
stos
jns
and
xchg
push
in
shll
stos
and
test
xchg
addb
decb
je
xor
mov
jmp
int3
cmpsb
sti
fstpl
stos
sub
sbb
xor
nop
cwtl
out
jle
iret
stos
or
mov
dec
jmp
es
pop
nop
xor
sbb
mov
sbb
stos
aaa
negb
add
fisubl
cmc
rclb
test
xorl
push
jmp
shl
sub
lcall
nop
mov
nop
pop
out
pushf
stos
dec
fsubs
mov
scas
mov
jbe
fisttps
and
test
mov
jp
and
mov
add
ja
add
out
movq
addr16
cmp
pop
sbb
stos
stos
loopne
jmp
dec
mov
sbb
inc
addr16
and
decl
insb
jo
inc
xchg
mov
and
jl
sahf
xchg
outsl
xor
insb
jge
sbb
hlt
rorl
stos
add
sti
add
out
lods
cwtl
jmp
cli
div
repnz
pop
xchg
pop
ret
gs
and
pop
stos
pop
lcall
push
int
or
stos
das
daa
or
and
push
stos
mov
jmp
mov
xchg
jmp
cmp
cmp
ss
aaa
sahf
movsb
adc
stos
lds
jecxz
mov
push
pop
stos
stos
sahf
xor
in
ror
sbb
mov
fstpt
cli
dec
test
nop
mov
adc
repnz
fwait
push
xor
stos
cmpsl
out
xor
add
mov
lahf
push
shl
fldcw
add
repnz
mov
pusha
xchg
stos
cmp
jle
lret
movsb
mov
mov
faddl
daa
test
rcr
mov
jmp
push
mov
sbb
ret
arpl
push
sbb
inc
xchg
and
mov
addr16
into
idivb
and
mov
int
stos
iret
out
mov
stos
pop
sti
jmp
xchg
pop
mov
jmp
rcll
xchg
stos
divl
aad
jmp
int
stos
mov
xchg
xor
cmp
mov
test
dec
lret
push
stos
cs
xchg
bound
dec
daa
fwait
out
aad
lahf
outsl
insl
inc
and
add
bound
mov
cmp
stos
loopne
icebp
ds
add
adc
xchg
fs
stos
decl
jne
call
pop
or
cmpb
push
jo
iret
pop
stos
xchg
addb
stos
and
xchg
jg
mov
xor
push
stos
cs
cmp
or
jnp
mov
push
xchg
sbb
pop
outsb
jmp
mov
xchg
subl
xor
ss
ret
stos
and
xor
dec
xor
lea
mov
stos
or
cs
mov
rcll
push
mov
je
pusha
aas
imul
stos
and
mov
push
sub
sub
stos
dec
mov
ss
xchg
aam
add
imul
jl
stos
jg
imul
stos
mov
insb
jbe
jmp
clc
iret
insl
enter
call
push
push
lret
dec
les
inc
jg
jne
inc
into
jno
lret
pop
stos
mov
fdiv
aam
icebp
sub
fcmovnbe
pop
pop
into
inc
push
mov
pop
dec
rcr
in
stc
stos
xchg
dec
andl
ds
inc
pop
dec
stos
movsb
testb
or
stos
lods
frstor
inc
mov
mov
cmp
inc
stos
xor
dec
sbb
push
push
je
fcoml
shll
add
lcall
adc
jl
jo
or
sbb
adc
clc
sub
ret
movsl
sbb
mov
pop
sahf
or
jmp
adc
ret
test
imul
repz
in
jmp
xchg
mov
stc
jg
test
stos
jbe
adc
mov
or
push
xchg
je
jnp
push
imul
movsl
stos
adc
mov
and
inc
mov
std
aam
stos
data16
in
adc
mov
inc
sahf
insb
jmp
mov
stos
stc
test
jle
inc
imul
push
fbstp
fsubl
sti
loope
stos
inc
sub
stos
xor
jbe
sbb
fidivrl
mov
push
sbb
sub
add
imul
push
cli
stos
inc
xchg
jmp
adc
mov
pusha
jp
stos
add
fsubrl
push
mov
dec
je
stos
cwtl
push
add
arpl
push
jo
sub
adcl
jb
movsb
imul
into
inc
stos
aad
jo
loope
iret
into
sub
push
xchg
stos
cmp
push
inc
ja
out
stos
lret
cmp
imul
push
cmpb
or
add
add
mov
jg
jno
or
mov
cmp
shrb
imul
dec
sub
push
in
inc
mov
pop
stos
lods
clc
movsl
rcr
scas
test
stos
or
leave
dec
xchg
jns
stos
add
mov
adc
jg
xchg
mov
xor
pop
mov
imul
stos
ljmp
xlat
lahf
cld
dec
cwtl
or
movsl
lret
notb
push
out
test
inc
mov
stos
push
push
ffreep
shlb
xchg
nop
xchg
lds
out
lahf
addr16
push
add
mov
mov
fisubrl
and
mov
je
xchg
rorl
into
xchg
in
adcb
scas
dec
xchg
and
xchg
stos
std
inc
lock
stos
sub
mov
add
or
stos
xor
js
jl
test
adc
outsl
insb
push
imul
cmp
aaa
mov
std
stos
ret
mov
cmp
xchg
int3
nop
jmp
xchg
pop
pop
rcl
jecxz
lods
lods
rep
mov
jae
out
fwait
adc
xchg
sub
cmpsb
mov
lea
daa
sbb
sub
pop
stos
rolb
xchg
push
pushl
mov
movzbl
mov
out
add
jmp
test
cmp
mov
dec
mov
das
push
stos
dec
outsl
sub
cmp
pmullw
mov
mov
xor
sub
stos
lcall
stos
xchg
xlat
fsts
scas
ja
sbb
push
add
cmp
dec
fcmovnb
imul
pop
mov
lret
getsec
cmp
jge
lods
stos
and
incl
mov
mov
sbb
add
dec
stos
nop
push
fcoms
repz
loope
jns
sbb
test
dec
xchg
push
sbb
pushf
mov
gs
mov
inc
cmp
jge
cmpsb
addr16
mov
pop
push
in
mov
push
stos
or
mov
stos
pop
int
fisubrl
gs
mov
dec
packuswb
bound
test
add
sub
outsl
sbb
push
sbbl
inc
adc
stos
fmuls
pop
cmp
ret
mov
add
bound
enter
and
mov
or
stos
std
sub
push
and
xchg
das
imul
jae
adc
std
out
adc
add
xchg
jb
fildll
push
stos
push
ret
and
jbe
dec
pop
cmpsl
jae
or
jle
or
std
subl
xchg
dec
aas
add
arpl
mov
sbb
stos
add
dec
je
les
in
sti
cmpsl
into
push
stos
jb
sub
sub
xor
fnsave
xchg
adc
jge
jp
stos
mov
leave
or
add
pushf
or
cltd
cmpsb
stos
in
or
loop
pop
aam
inc
imul
or
jmp
lea
loopne
pop
jle
pop
bts
dec
cli
push
out
lock
jb
pop
adc
int3
xlat
stos
imull
repnz
in
setnp
stos
sub
and
jl
sub
repnz
and
ret
loope
dec
sti
adc
push
das
fistl
and
mov
pushf
inc
add
mov
stos
cwtl
jge
pop
jmp
shrl
cli
stos
ret
repnz
dec
mulb
jge
ljmp
arpl
and
cmp
lret
or
stos
push
mov
xor
addl
xchg
push
shlb
es
push
and
cs
ja
or
mov
out
aaa
or
ljmp
addr16
jecxz
in
cli
aam
fiadds
or
lods
fildll
pop
and
inc
dec
push
mov
in
and
mov
cmc
cmpsl
clc
or
jbe
hlt
sti
mov
push
sbb
je
and
aaa
mov
adc
cmp
cmp
mov
repz
jae
pop
addr16
mov
push
pop
mov
daa
and
fwait
pop
push
dec
subb
jno
ja
imulb
incb
sbb
daa
mov
shlb
dec
leave
xchg
out
test
adc
sbb
mov
stos
into
jno
pop
daa
sbb
pop
stos
mov
push
mov
cld
dec
mov
jp
stos
push
lret
xchg
loope
mov
lea
jmp
mov
aas
scas
popf
leave
xchg
add
or
js
and
mov
mov
ficomps
mov
xchg
jb
pop
stos
sub
mov
aas
inc
push
addb
jne
push
je
imul
adc
sub
into
jl
xor
mov
and
cmpsb
je
mov
lea
sub
pop
sbb
xor
sub
mov
pop
inc
or
push
and
dec
cmp
mov
pextrw
and
std
xchg
sti
stos
xchg
fildll
mov
mov
scas
push
ljmp
ret
adc
inc
mov
push
stos
cmp
in
shll
inc
cmp
jecxz
and
or
xchg
shrb
loop
mov
or
sti
jo
pushf
bound
dec
cmpsb
pop
push
stos
lahf
sbb
inc
or
stos
xlat
push
xchg
xor
and
leave
test
mov
jmp
dec
out
mov
in
lret
cmp
test
xor
stos
lcall
jbe
jge
push
iret
lods
fs
mov
sub
cmp
out
mov
je
jbe
jg
aaa
and
call
stos
mov
push
xchg
stos
mov
push
add
scas
je
pop
stos
or
pop
shll
loope
lret
and
test
lds
dec
cs
stos
fcomps
stos
leave
jp
movsl
subb
aad
cli
sahf
adc
fwait
sub
push
data16
pop
hlt
mov
stos
xchg
ficoml
sbb
mov
pop
sbb
decb
xor
arpl
movsb
jae
test
pop
and
xchg
sub
popf
sub
or
or
jmp
cwtl
inc
int
pop
stos
mov
xchg
fs
gs
lods
sub
mov
cwtl
out
rcll
adcl
dec
push
inc
stos
mov
adc
mov
add
stos
xor
fwait
push
lahf
push
fsubrs
les
push
cli
icebp
dec
or
lahf
sbb
jecxz
and
orl
ljmp
test
insl
stos
repnz
adc
xor
sbb
xchg
push
xchg
push
cmpsl
stos
stc
je
sub
mov
xor
cmpb
xchg
cs
imul
mov
cmpsl
push
or
or
das
rolb
jmp
mov
mov
aas
push
mov
jno
sub
in
cmp
dec
test
inc
push
mov
pop
pop
jae
dec
xchg
push
or
test
mov
stos
mov
inc
or
lods
add
mov
pop
sub
cmp
stos
ficompl
ja
mov
mov
sub
mov
je
mov
out
mov
push
mov
adc
sahf
adc
or
stos
jge
leave
movb
les
loopne
adc
outsb
cli
jmp
lcall
ljmp
xchg
or
adc
stos
sbb
mov
adc
sahf
enter
sub
mov
adc
popf
dec
nop
lock
cs
mov
adc
cmpsl
adc
pop
xor
and
int3
mov
sbb
fisubrs
js
pusha
xor
sub
cltd
loope
stos
stos
mov
jb
cmpsl
mov
jmp
bound
push
fldt
leave
jg
aas
stos
lea
xchg
sub
imulb
aad
xchg
cmp
lahf
sub
mov
data16
xor
out
sub
imul
addr16
xchg
dec
or
cltd
pushf
test
pop
fwait
out
into
inc
cwtl
stos
xchg
outsl
jecxz
sub
lret
fdiv
nop
and
test
xor
push
iret
int3
xchg
and
stos
int
fs
in
cli
repz
mov
sti
xchg
iret
sbb
jle
stos
jo
cmp
addr16
inc
xorps
lock
mov
cmp
mov
sbb
insb
stos
lcall
fsubl
cmp
pop
jns
lahf
mov
cmp
mov
ljmp
or
popa
xchg
nop
sbb
jmp
push
in
lret
out
xor
pop
stos
inc
pop
jmp
test
xor
out
gs
push
stos
mov
pop
stos
gs
arpl
push
mov
js
or
pop
outsb
out
neg
ss
rcl
mov
stos
cli
sbb
popa
jne
jns
cwtl
sbb
adc
pop
xor
shll
stos
mov
stos
jns
xor
dec
stos
pop
push
repnz
add
and
push
jmp
add
mov
stos
adc
mov
out
jecxz
lods
jmp
aad
arpl
repnz
imul
iret
push
es
in
js
out
pop
dec
test
mov
add
xchg
outsb
test
and
fdivl
sbb
das
jp
cmpb
ficomps
nop
xor
stos
ds
insb
push
mov
out
fstpl
addb
out
stos
jae
jp
dec
mov
fsubrl
mov
std
add
ljmp
xchg
ret
lods
or
push
cmp
stos
mov
push
dec
out
pop
stos
or
xchg
loopne
adc
pushf
stos
rorl
daa
ljmp
sahf
mov
sbb
cmp
stos
xor
inc
push
push
das
jnp
stos
sub
sub
test
sub
mov
add
out
negb
and
dec
stos
popa
xor
cmc
enter
jmp
pop
sbb
sub
test
or
std
adc
cmpsb
lock
mov
and
xor
xlat
loope
fbstp
or
xchg
cli
push
add
inc
fistpl
jg
hlt
scas
push
lea
sbb
in
xor
inc
test
xchg
stos
or
scas
dec
outsb
adc
dec
test
pop
mov
sahf
push
jmp
iret
inc
push
pop
inc
mov
xchg
mov
mov
ja
fsts
pop
mov
enter
cwtl
scas
scas
es
inc
fidivs
pop
lods
jo
sub
jg
inc
adc
stos
fwait
lret
rcrb
iret
insb
and
in
aaa
inc
std
cs
xchg
or
filds
inc
call
stos
call
mov
push
decb
pop
stos
inc
fistpll
popf
dec
outsl
cwtl
add
cmp
aaa
shrb
pop
mov
stos
fdivl
adc
inc
xchg
mov
imul
mov
and
xchg
je
jno
stos
js
push
xchg
inc
lock
movsb
imul
mov
add
mov
jns
ret
int
push
stos
lock
stos
mov
les
fxch
lahf
imul
push
insb
xchg
mov
pop
fmull
sub
outsl
stos
movsl
xchg
daa
pop
out
stc
stos
test
mov
stos
inc
fldt
fcoms
mov
arpl
cwtl
stos
prefetch
in
loope
push
dec
stos
add
daa
pop
stos
jne
pushf
xor
mov
stos
arpl
sub
stos
js
sahf
dec
xor
cmpl
out
cmpsb
shl
fsubrl
fsubrp
shll
xchg
scas
push
mov
xchg
dec
cltd
stos
hlt
mov
push
out
stos
ljmp
jno
pop
push
fnstenv
in
mov
jl
xchg
stos
loop
mov
xchg
les
cmp
sub
lret
inc
or
in
cmp
stos
pop
enter
fwait
ljmp
fadd
add
in
cmp
mov
ficompl
fmuls
pop
mov
stos
sbb
jb
cmp
je
stc
inc
out
or
push
out
sbb
dec
loopne
fwait
in
iret
repz
aaa
loop
xor
stos
inc
jne
mov
or
jae
arpl
mov
mov
sub
imul
xchg
push
dec
jmp
movsb
shll
inc
mov
jns
sbb
sbb
stos
lods
arpl
jbe
xchg
mov
movsl
sti
sti
xchg
scas
mov
repz
scas
pop
fiaddl
xchg
push
insb
and
stos
xor
or
stos
das
ss
inc
and
cli
push
dec
bound
pop
jl
stos
sbb
fcmovnbe
push
cmpsl
inc
jmp
fcomps
inc
mov
fs
sub
fsubr
das
pop
stos
add
mov
cmp
add
jmp
out
into
call
stos
xor
mov
mov
testl
in
inc
movsb
aad
ja
jmp
stos
out
mov
mov
es
xchg
ljmp
aam
adcb
mov
or
stos
mov
leave
mov
mov
shrl
imul
lods
xlat
idivb
pushf
addr16
push
mov
popf
fisttpll
js
lea
dec
repz
xchg
pop
xchg
out
stos
push
xchg
or
add
mov
adc
stos
mov
mov
stos
aas
mov
jae
stos
into
popa
inc
sbb
addr16
push
or
xchg
stos
rolb
cmp
mov
pop
mov
jl
mov
push
stos
iret
frstor
jle
add
call
xchg
fisubl
inc
aas
fisubrs
mov
xchg
fadd
in
fsubrl
push
mov
daa
sub
push
test
sbb
mov
push
adc
aas
in
sub
arpl
jecxz
and
scas
xchg
sub
fbld
lock
bound
hlt
test
jmp
scas
xlat
clc
pop
rol
xchg
pop
jae
xchg
mov
sbbb
inc
and
insb
mov
xor
mov
or
push
in
icebp
mov
push
mov
dec
pusha
into
fildll
bound
pop
sbb
and
mov
mov
stos
dec
cmp
xorl
loop
std
stos
aaa
mov
lret
and
pushf
pop
cltd
aas
ds
mul
sub
jnp
icebp
gs
adc
int
stos
lods
testl
fwait
mov
mov
xor
sahf
mul
xorl
mov
pushf
add
stos
push
jns
fisubrl
xor
negb
jmp
je
cltd
pop
push
out
lods
in
hlt
pop
pop
jmp
dec
popf
pop
scas
iret
push
in
lds
mov
cmp
xor
fnstsw
push
movsb
icebp
outsl
mov
sub
xchg
cli
jbe
iret
roll
in
cmpsl
scas
or
stos
mov
stc
cltd
xchg
pop
jne
stos
movsl
ss
sbb
stos
jno
enter
loope
je
xor
mov
inc
push
dec
shll
and
cld
push
xorl
push
cmp
subb
shl
dec
push
stos
js
in
loopne
stos
int3
call
hlt
fsubrl
inc
add
xchg
daa
in
pop
and
dec
je
in
subl
aam
xchg
imul
inc
xchg
lock
mov
mov
es
xchg
sub
xor
stos
std
pop
nop
sub
stos
mov
jbe
shr
sub
or
sbb
add
sbb
jno
ret
mov
cmp
loop
fists
inc
sub
sbb
popa
cmp
sub
mov
stos
xchg
loope
pop
orb
pop
fcompl
sbb
stos
in
sahf
xchg
jo
mov
mov
std
out
pop
xor
scas
sub
int3
pop
or
stos
fwait
rorl
sub
push
jecxz
pop
ja
notb
vmovmskps
pop
es
add
cli
stos
roll
out
stos
sbb
jns
sub
stos
popl
sub
fimuls
data16
push
push
fwait
xor
stos
push
call
stc
sbb
lahf
mov
fs
add
stos
jge
inc
add
push
jp
ret
stos
sahf
cmpb
sti
scas
pusha
stos
test
movsl
test
pop
lahf
pop
push
stos
jb
fcoms
xor
dec
imul
stos
jl
bound
stos
test
jne
mov
push
cmp
testl
xor
stos
addb
sbb
push
pusha
shr
cmc
ja
cmpsl
fsubrl
scas
adc
stos
into
and
addr16
mov
inc
add
adc
in
popf
lret
mov
sarb
mov
mov
test
lret
add
pushf
outsb
push
popf
cwtl
pop
outsb
stos
sub
add
sbb
dec
dec
lods
das
mov
ret
push
adc
repz
stos
inc
jecxz
xor
xchg
popf
je
cmc
sub
test
je
inc
xlat
push
shrb
adc
push
ja
lods
mov
cmp
jmp
mov
test
push
lret
enter
rorb
xchg
inc
je
stos
dec
adc
and
sbb
sbb
aas
mov
loopne
imulb
rclb
or
shrl
xchg
inc
stos
lcall
xchg
mov
stos
xor
stos
xchg
mov
stos
cmp
jg
or
push
roll
mov
shlb
xchg
push
insl
outsl
gs
jne
fmulp
adc
add
sti
pop
loopne
mov
lods
and
pop
xchg
xor
push
pop
popa
es
sti
mov
mov
cmp
jl
sbb
cmp
iret
mov
in
movsb
jo
into
imul
mov
stos
imul
jl
stos
fdivl
or
aas
js
fisubrs
adc
test
xor
mov
xchg
nop
jmp
dec
mov
sarb
add
shll
sbb
movsb
out
push
bts
movsl
aaa
or
adc
inc
in
inc
stos
xchg
xor
adc
lds
dec
fadds
flds
aam
mov
in
out
mov
ja
stos
repz
out
insl
in
lea
push
mov
and
rdtsc
imul
pusha
dec
aas
imulb
push
shrl
imull
add
imul
sbb
pop
mov
pop
dec
test
test
dec
stos
xchg
add
jl
je
and
mov
pop
pushf
gs
sbb
jne
int
fildll
pop
incb
or
and
test
push
mov
jb
stos
out
sti
ret
adcl
mov
sti
or
ret
jge
mov
stos
test
outsl
lods
push
in
xchg
xchg
stos
jmp
and
lret
jmp
mov
mov
fsubl
add
mov
push
xchg
cmpsb
or
loope
hlt
sub
enter
jnp
add
lcall
and
lods
enter
adc
stos
int3
xchg
fucomi
insb
mov
mov
testl
jae
xchg
cmpsl
mov
jnp
push
push
test
outsb
xor
mov
stc
inc
inc
dec
push
or
inc
xor
iret
mov
mov
sub
sub
push
lock
push
ja
dec
xchg
ret
stos
mov
pop
mov
stos
popf
push
or
mov
cmova
and
jo
jmp
ds
cmpsb
jmp
loopne
pop
repz
fwait
adc
sub
imul
mov
stos
hlt
push
outsl
repz
xchg
mov
aam
movsb
stos
test
mov
sub
mov
stos
lcall
ret
loopne
aaa
hlt
test
lods
insb
call
lds
arpl
mov
pop
or
and
lock
pop
jns
sbb
or
out
adc
xchg
dec
or
push
adc
fildl
pop
fwait
dec
inc
dec
stos
mov
adc
mov
iret
sbb
jl
xor
fninit
mov
icebp
mov
pop
imul
lcall
sub
add
lahf
popf
movsb
stos
and
xor
arpl
push
mov
stos
cmpsl
add
pop
iret
mov
ljmp
sub
dec
xchg
subb
mov
repnz
scas
js
mov
sbb
add
arpl
adc
or
cmp
dec
dec
ja
xchg
repnz
daa
ss
daa
mov
in
test
and
or
dec
stos
inc
dec
pop
add
mov
xor
cwtl
push
pop
jg
sub
sbb
dec
mov
push
pushf
xor
adc
imul
scas
rorb
fstl
insb
imul
arpl
stos
pop
movsl
add
dec
mov
stos
pop
out
insl
ret
jns
sbb
arpl
inc
mov
cmp
sbb
loopne
popf
cli
fisubrl
jns
mov
sbb
bound
pushf
sub
dec
stos
btr
pop
adc
mov
push
push
inc
lock
dec
push
push
jge
dec
stos
out
xor
push
push
fwait
mov
sti
ljmp
ja
sub
stos
mov
fimuls
mov
inc
pop
jns
xchg
fs
inc
enter
xchg
pop
aas
std
insb
push
stos
int
sub
add
sbb
popl
pop
mov
cltd
repnz
in
adc
pop
fstps
pusha
std
jmp
xchg
cwtl
clc
stos
fsubrs
daa
les
stos
xlat
incl
jmp
sub
push
das
xchg
addr16
push
jnp
adc
cmpsl
fs
shrl
out
outsl
stos
fsub
mov
in
stos
fdivp
rcll
xchg
out
scas
stos
stos
add
mov
mov
nop
lahf
int3
xchg
rorb
inc
les
call
xchg
movsb
sub
dec
stos
mov
movsl
mov
stos
add
sub
sahf
mov
push
stos
ds
das
pop
mov
loopne
xor
shll
mov
jl
mov
fucomip
jo
stos
xor
sub
ds
leave
push
int
inc
cmp
and
sbb
pop
bound
rorb
mov
cmpsl
mov
sub
push
inc
out
jmp
xchg
mov
push
es
push
xchg
in
sti
dec
cld
daa
aas
stos
nop
je
fnsave
mov
dec
fwait
sub
std
test
addb
xchg
stos
mov
pop
aaa
addr16
in
mov
jae
mov
push
lods
inc
aas
jl
jns
cmpsl
pop
mull
into
add
push
call
in
mov
movsb
fidivl
repz
sub
sub
sub
inc
adc
dec
fucom
mov
subb
fstps
adc
mov
xor
addr16
cltd
pop
cmp
loop
mov
sub
push
stos
das
dec
cmc
in
out
ret
xchg
stos
imul
aaa
stos
pop
xor
dec
xchg
es
cmpsl
xchg
in
inc
loopne
mov
out
sarb
mov
mov
ss
mov
ret
repnz
push
adc
or
sbb
stos
adc
mov
jo
in
stos
xor
ror
je
xchg
scas
mov
push
push
and
sub
jbe
adc
int
cmpsb
into
adc
mov
push
lretw
cmp
in
cmpsb
lock
sbb
stos
sar
clc
ret
xchg
bound
andb
mov
nop
fwait
push
stos
sub
pushf
push
adc
adc
and
stos
sbb
outsb
pop
loopne
repnz
and
push
cmp
scas
dec
sahf
es
add
pop
inc
mov
das
shrb
jecxz
pushf
mov
lcall
cld
stos
mov
xor
daa
cli
rorb
xchg
push
mov
out
mov
xchg
stos
sbb
into
repnz
stos
xchg
add
sub
cmp
leave
inc
dec
dec
clc
stos
in
push
pusha
push
movsl
mov
das
stos
push
lahf
jo
dec
xchg
test
movsb
inc
stos
xchg
add
pushf
stos
mov
out
add
bound
and
mov
pop
mov
push
aam
mov
test
in
push
ret
stos
jbe
call
nop
outsl
xchg
sub
imul
stos
es
mov
lret
stos
int
pop
ja
adc
stos
sub
lret
stos
sbb
lahf
fimuls
xchg
cltd
stos
sarb
lods
pop
mov
aas
xchg
jmp
mov
push
or
imull
dec
rorb
sub
cmpsl
call
lods
std
push
sti
mov
stos
insb
aad
adc
lcall
cmp
stos
jl
inc
pop
loop
lcall
pop
stos
mov
popf
and
stos
movsb
call
push
push
stos
adc
xchg
adc
pop
jnp
xchg
insl
mov
cmp
xchg
stos
add
popa
xchg
stos
dec
ret
fcmove
gs
xbegin
inc
loope
sbb
imul
dec
gs
addr16
jnp
rcl
xor
and
daa
out
add
adc
push
cltd
jo
shrb
iret
xor
stos
cmp
cmpsb
stos
es
ret
mov
stos
dec
jmp
jle
push
dec
stos
fwait
aad
sbb
pop
lret
out
cwtl
or
stos
popf
sti
test
out
inc
mov
xor
add
jnp
jae
popl
into
or
imulb
test
push
inc
je
pushf
out
jb
mov
stos
jp
mov
xchg
push
in
push
mov
fsubl
bound
cmp
mov
pop
test
stos
lret
jbe
arpl
mov
cwtl
pop
xor
push
ficomps
fucomi
sti
cmp
aas
cmp
stos
and
cs
fldenv
mov
ret
jp
mov
xor
sub
leave
aaa
jnp
rcr
lds
jg
lods
shrb
xchg
jle
imul
dec
je
pop
stos
scas
test
fsubs
push
loope
lods
lock
loop
push
in
cmovne
mov
pop
fsubrl
xchg
xchg
jle
jne
repnz
and
into
in
stos
cwtl
call
sahf
sbb
das
out
rolb
popf
adc
stos
in
jne
inc
addr16
les
jmp
sbbb
cmp
sbb
pop
fildl
cmc
ss
sbb
jmp
lods
subl
stos
cmp
cld
dec
cmp
mov
rcrl
push
mull
fisubl
pop
aam
inc
movsb
xor
xchg
arpl
cmpsl
mov
rorl
stos
xchg
imul
lea
and
push
imul
pop
mov
mov
das
cli
mov
push
push
stos
shrl
xchg
push
inc
sub
stos
sub
cmp
cmc
dec
pop
stos
repnz
add
imul
cmpsl
adc
ds
in
xchg
jno
adcl
test
lods
inc
into
int3
xchg
dec
adc
adc
pop
add
cmpb
imul
cmp
mov
ror
push
into
cltd
inc
sub
repz
and
aam
push
stos
enter
lea
add
lock
insb
out
or
stos
sub
mov
or
mov
mov
stos
pop
cmpl
ljmp
das
jno
lahf
stos
xor
and
mov
repnz
add
and
jmp
mov
imul
scas
andb
imul
scas
icebp
lea
sub
leave
nop
stos
addr16
bnd
out
pop
pusha
add
stos
inc
lds
jecxz
mov
sti
ja
lods
out
mov
sbb
movsb
imul
data16
insb
vpsrlq
cli
jp
xorl
push
andl
stos
mov
push
pop
jl
pop
mov
scas
nop
stos
adc
orb
sub
lret
jnp
and
mov
xchg
arpl
stos
xor
out
push
stos
mov
pop
sbb
stos
add
pop
imull
xchg
inc
jnp
and
mov
jo
in
inc
clc
and
jmp
data16
mov
adc
nop
mov
jae
xchg
pop
stos
sub
mov
pusha
outsb
fsubl
pop
mov
xlat
es
rorl
add
dec
stos
cmp
insl
cmpl
jmp
rorb
push
mov
std
ficompl
mov
adc
and
cwtl
fcmovne
lock
mov
int
or
mov
and
orb
stos
ja
adc
jo
lea
ds
test
mov
in
sbb
mov
and
ret
cli
stos
lods
fstl
pop
stos
out
sub
add
xchg
loope
jmp
add
pop
adc
push
stos
inc
sbb
add
test
inc
pop
lds
mov
sbb
adc
add
inc
stos
and
dec
pop
lret
scas
jle
leave
mov
push
dec
cmp
sub
stos
enter
inc
cltd
sbb
nop
movsl
stos
out
pop
ds
xchg
mov
sub
and
or
stos
pop
std
lods
cs
je
mov
sahf
mov
jbe
pop
xchg
test
out
mov
sti
std
cmp
mov
mov
adc
testb
stos
subb
push
sbb
in
sub
push
ds
fcmovb
cmp
mov
dec
jp
dec
stos
jmp
xor
push
dec
mov
js
cmp
jge
icebp
cld
sbb
pop
movsb
or
push
add
jmp
mov
sub
xor
aad
out
sbb
fistpl
dec
rcll
test
imul
cmpsb
push
sbb
ds
or
push
mov
cmp
in
and
scas
xor
or
or
nop
lahf
push
inc
pop
sub
jge
jb
push
mov
push
std
sbb
xchg
fstp
aas
xchg
fsubrl
mov
sbb
clc
push
mov
incb
or
imul
mov
pop
pop
cmp
leave
or
std
insl
adc
add
cmp
in
dec
pop
out
mov
lock
fsubrl
imul
stos
mov
imul
mov
aas
imul
daa
cmpsb
bound
inc
fsubl
dec
stos
stos
sahf
imul
jns
stos
out
dec
lret
pop
sub
dec
xor
mov
daa
loop
lea
and
lods
add
jae
ljmp
and
and
scas
or
push
into
push
mov
xlat
cltd
enter
sbb
mov
xor
or
int3
add
mov
pop
sbb
xchg
mov
mov
int
mov
in
push
loop
imul
iret
stos
pusha
or
icebp
lret
jns
fsubrl
in
test
add
movsb
push
sbb
jo
push
pop
divl
and
outsl
xor
jmp
mov
mov
inc
imul
add
mov
cmp
mov
outsl
hlt
push
jmp
cmp
imull
aam
mov
out
jp
imul
gs
adcb
ljmp
inc
pop
dec
subb
cmp
into
mov
cld
or
mov
loopne
stos
xchg
sbb
inc
pusha
xor
aaa
stos
add
add
js
int3
push
jmp
stos
or
xorl
xchg
mov
imul
dec
adcb
aad
mov
push
stos
mov
adc
sbb
pop
stos
cld
push
mov
push
xchg
or
bound
arpl
movsb
shlb
and
mov
hlt
pop
test
ljmp
push
jge
subb
insl
add
imul
es
loop
test
int
pushf
mov
data16
stos
jns
sub
scas
into
mov
push
jne
xchg
test
int3
mov
jmp
arpl
dec
xchg
out
xor
jne
nop
and
gs
iret
cld
stos
popa
popa
call
shlb
adc
ror
aam
stos
imul
shll
daa
fcompl
inc
xchg
in
jmp
inc
jns
mov
movsb
nop
leave
or
mov
cld
rcrl
stos
ret
js
sbb
fwait
addr16
pop
mov
outsl
shrl
stos
out
inc
mov
pop
les
sahf
sti
dec
popa
outsb
stos
ja
cmp
or
loopne
stos
push
insb
out
mov
jne
stos
inc
ljmp
stos
xor
lods
adc
das
push
in
popf
and
lahf
push
subl
adc
xchg
inc
pop
cmp
frstor
test
mov
js
add
stos
es
pop
xor
jl
push
stos
mov
nop
xchg
arpl
jmp
mov
sub
sbb
cmp
jbe
mov
pop
in
shlb
stos
cmp
and
or
ljmp
leave
sub
scas
mov
iret
mov
fs
add
movsb
sbb
cmp
mov
aam
push
stos
push
push
ja
fists
dec
mov
pop
daa
fsubr
insb
pop
sbbl
pop
in
inc
int3
mov
adc
and
lahf
das
pop
sub
cmc
dec
jo
pop
mov
sub
cmp
mov
xchg
mov
icebp
stos
mov
in
ds
adc
xor
lods
lcall
testl
cmc
aad
lret
lock
ficoms
test
stos
jle
mov
push
imul
jne
xchg
cwtl
jge
pop
dec
es
sub
and
push
and
mov
inc
dec
inc
lahf
sub
sbb
mov
xchg
pop
cmp
subl
popf
pop
ss
pop
mov
rclb
xchg
xchg
mov
fisubrl
mov
xchg
add
jno
mov
push
pop
or
lds
test
into
punpckhwd
push
add
add
sbb
out
sbb
or
mov
dec
movsb
xchg
adc
stos
rorb
ja
mov
jge
in
cmp
pop
stos
xchg
xor
orl
cli
int
sub
adc
fisttps
mov
fwait
les
ret
stc
imul
pushf
xchg
and
push
je
and
sahf
jl
test
push
cmp
mov
lods
repnz
pop
movsl
ljmp
sahf
add
jge
ds
lods
iret
cmp
push
stos
imul
dec
cmp
int
lods
sahf
stos
sub
repz
testl
jmp
mov
cs
stos
outsl
mov
repz
lock
stos
mov
and
cmp
pop
inc
jo
and
push
ss
sub
xor
aas
mov
jmp
fidivs
inc
mov
subl
in
sbb
push
cwtl
daa
and
hlt
stos
int
stos
sub
pop
push
xchg
popw
push
stos
mov
push
pop
iret
lret
adc
leave
in
hlt
stos
inc
jnp
cmpl
stos
mov
dec
adc
subb
xor
push
dec
stos
lcall
in
cmc
aam
and
int3
test
stos
mov
xchg
dec
push
popf
imul
sahf
pop
int3
stos
mov
cmp
xchg
stos
ret
push
push
arpl
inc
mov
lods
stc
xchg
stos
cmp
iret
aaa
mov
sub
out
imul
imul
stos
push
fsubs
hlt
scas
jmp
xor
jnp
cmp
gs
aaa
stos
push
and
cmp
or
cld
xchg
sub
shl
dec
mov
fmuls
loope
test
add
stos
xchg
mov
cmp
sub
stos
movsb
mov
loop
mov
ret
stos
int3
mov
jno
jnp
cmp
decl
stos
jge
and
mov
push
push
adc
out
and
mov
pop
subb
aad
shr
outsb
inc
shr
inc
jns
adc
iret
pop
sbbl
adc
jle
and
stos
stos
or
jns
cld
lret
xor
lea
mov
push
cmp
movsb
xor
jp
rcrb
pop
add
stos
cmp
sbb
push
in
mov
dec
jno
jnp
mov
test
dec
fsts
inc
jl
das
xchg
push
mov
mov
mull
pop
cmpsb
jge
dec
mov
out
dec
dec
mov
push
inc
shlb
popf
cmc
out
cld
xchg
and
inc
push
ret
das
stos
loope
aas
sbb
mov
mov
mov
xlat
mov
mov
fildll
cmpsl
stos
stc
pmaddwd
repz
cmp
add
ljmp
inc
push
adc
jmp
push
or
ja
adcl
pop
xor
pop
stos
pop
mov
inc
inc
stos
test
scas
andb
push
sub
stos
xchg
decl
push
sahf
jmp
out
sub
or
adc
in
push
stc
xchg
jmp
xchg
in
mov
dec
mov
sbb
outsb
repnz
mov
stos
ret
outsl
dec
pop
lret
xchg
orl
test
call
out
lock
mov
sbb
mov
incb
push
sti
add
lret
pop
xor
inc
fldt
mov
mov
mov
sarl
stos
out
aad
and
pop
xor
mov
shrb
sub
cmpsb
lcall
fbld
test
sub
mov
mov
nop
jl
stos
rcr
sahf
in
sbb
push
addr16
xchg
add
stos
out
mov
loope
sbb
out
xchg
stos
das
cmp
adc
stos
or
xchg
inc
sbbl
pop
inc
pop
jmp
sahf
mov
adc
repz
rclb
add
xchg
scas
es
stos
daa
out
pop
and
ret
mov
mov
incb
lock
lcall
out
xchg
arpl
fwait
aad
pushf
mov
stos
sub
dec
in
push
xchg
sbb
stos
ja
mov
idivb
sbb
rcrb
imul
xchg
aas
ss
sbb
adc
subb
jae
or
in
roll
bound
adc
out
mov
lahf
mov
and
stos
popf
and
fldt
lret
stos
inc
lods
in
aad
rolb
cmp
xchg
jno
xchg
loopne
stos
sahf
mov
xchg
in
mov
push
addr16
mov
fwait
das
lock
xchg
stos
lods
movsb
add
cmp
fsubl
pusha
adc
xchg
stos
mov
je
dec
stos
inc
and
cmp
add
mov
popf
int3
inc
in
sub
fwait
sub
dec
arpl
pop
jnp
jl
stos
cmp
xor
adc
push
jmp
mov
mov
cmp
loopne
sub
stos
out
add
jecxz
pop
ljmp
stos
movsl
nop
fs
cmp
or
stos
lods
mov
stos
dec
mov
adc
adc
mov
nop
push
jb
loope
xor
jo
mov
stos
and
sub
or
sbb
daa
ret
xor
jne
imul
mov
fcoms
or
fwait
aaa
insb
ljmp
inc
jnp
lock
arpl
rorb
mov
cmp
imul
daa
fcompl
dec
or
jmp
sub
cs
imul
add
das
je
test
push
jo
stos
xchg
addb
sub
jmp
out
sbb
mov
leave
or
std
pop
loop
cmp
and
mov
and
popf
mov
add
hlt
mov
mov
mov
movsb
inc
mov
jge
fwait
or
and
mov
xchg
andb
lods
push
jbe
hlt
sbb
daa
mov
fwait
adc
stos
outsb
sarb
test
mov
cmp
js
cmpsl
and
inc
stos
ret
in
int
and
mov
add
ja
mov
mov
mull
jge
ljmp
jb
mov
cmpsl
mov
stos
dec
xchg
xchg
addl
stos
pop
cld
js
mov
movsb
scas
xchg
stos
jne
outsl
add
mov
sub
add
mov
or
pop
sub
mov
mov
aaa
popa
add
daa
push
push
divb
lods
mov
scas
adc
xchg
push
lods
xchg
arpl
fdivrs
sarb
pop
aas
in
mov
pop
stos
pushf
ret
ud2
xchg
xor
es
xchg
jecxz
andl
cmp
mov
push
push
mov
xchg
jnp
dec
hlt
sbb
daa
or
adc
lret
xor
sarl
inc
stos
repz
push
jbe
stos
test
lds
sbb
aas
bound
data16
loop
in
stos
or
xchg
push
mov
je
stos
mov
cmovbe
or
jp
push
jg
fsubr
es
and
in
outsl
lods
aad
xchg
sub
sti
jle
stc
mov
mov
xor
jns
movsl
scas
cwtl
sub
loop
mov
adc
lahf
and
ds
addr16
test
mov
in
test
ds
fwait
pop
loop
pop
xor
or
push
testb
lds
cli
jno
xlat
aad
jbe
add
cmp
test
xchg
insl
clc
movsb
pop
dec
dec
stos
mov
inc
les
or
add
stos
dec
scas
inc
add
pop
or
fs
stos
ret
stos
mov
ja
or
adc
cwtl
jl
stos
cld
sahf
stc
xor
add
xchg
iret
aas
push
inc
bound
pop
mov
pop
int
xor
and
cwtl
cmp
mov
movsl
stc
imul
push
pop
aad
dec
das
outsb
addr16
cltd
mov
adc
jb
mov
stos
insl
cld
in
inc
aad
popa
stos
mov
push
push
lods
cmp
xor
lret
int
xchg
fnstsw
loop
pop
mov
arpl
mov
std
lahf
cmc
push
cmpsl
dec
dec
inc
fldl
mov
pushf
jl
popa
daa
push
stos
or
mov
jb
scas
push
jg
rcrl
scas
xor
stos
add
dec
cmp
mov
rorb
mov
adc
std
imul
xchg
test
add
popa
cwtl
enter
pop
mov
sub
xchg
stos
xchg
pop
add
jecxz
jp
stos
push
jns
xchg
inc
cltd
mov
pop
call
pushf
xor
jno
sub
inc
subl
gs
and
jecxz
inc
insb
xchg
mov
iret
sbb
mov
dec
and
pusha
es
ret
push
pop
mov
jmp
ljmp
fwait
xlat
sbb
push
sub
nop
mov
ljmp
dec
cltd
mov
xchg
aam
ficoms
mov
stos
aas
es
sub
mov
sub
mov
or
add
lods
mov
stos
inc
mov
jecxz
dec
cli
stos
pushl
test
dec
pop
inc
jne
dec
and
nop
mov
mov
shll
mov
loopne
cwtl
dec
mov
ret
cld
stos
xlat
push
dec
cltd
jle
lahf
call
push
shll
test
mov
iret
pop
stos
cs
push
call
test
and
sbb
aas
push
jl
pop
jmp
int
rclb
fwait
mov
stos
or
in
dec
stos
sub
xchg
dec
and
adc
dec
sbb
push
cs
rorl
or
jno
push
add
dec
out
mov
stos
fists
xchg
xor
rcll
pushf
scas
adc
pop
push
mov
or
and
rolb
icebp
fisubrl
dec
repnz
repz
jae
mov
imul
es
movsb
int
lret
sub
cmpsl
sahf
dec
pushf
dec
mov
jp
aam
sub
xor
mov
insl
stos
je
xchg
daa
mov
add
scas
mov
sbb
jno
stos
pop
push
and
jo
sarb
xor
adc
mov
xor
cwtl
popf
mov
sub
fwait
push
and
jle
cmpsb
loopne
stc
push
out
mov
outsl
mov
stos
dec
lahf
xchg
fsubrl
stc
subw
push
mov
stos
jne
es
fmuls
lea
subb
jns
push
mov
jg
push
stos
pusha
inc
subb
pop
jne
stos
cmp
sub
dec
push
dec
stos
lods
scas
pop
sbbb
xor
orl
push
and
jno
jp
xchg
dec
enter
in
stos
negl
xchg
fwait
jge
outsl
or
std
inc
pushf
mov
push
mov
inc
fsubrs
repnz
jno
xor
fdivrp
push
xchg
sub
lahf
loope
cmp
push
sub
jecxz
xchg
popa
jp
iret
shrb
xchg
inc
mov
int3
imulb
aas
lods
jge
stos
mov
adc
add
push
mov
add
push
inc
pop
es
adc
pop
and
repz
push
rclb
jl
fwait
dec
scas
movsb
jb
push
mov
pop
mov
das
cltd
cmp
stos
mov
mov
xor
das
imul
jae
xchg
and
xor
stos
enter
js
scas
mov
loopne
jmp
jl
xor
repnz
test
ret
jne
xor
in
stos
pop
loope
repz
xchg
ja
jnp
jns
and
mov
push
cli
pop
mov
mov
jecxz
or
xchg
sarb
and
mov
cmpsl
mov
dec
les
stos
xor
stc
jl
cmp
js
fwait
adc
addr16
pop
aad
mov
out
mov
jb
push
hlt
aaa
push
movsl
mov
test
mov
imull
fisttpl
dec
stos
fisubs
inc
fidivrl
hlt
sub
sti
aam
xchg
mov
xchg
out
stos
mov
xor
push
mov
xchg
dec
adc
push
cmp
jg
out
or
fs
sub
fildll
jnp
repnz
addl
cmp
xor
movsl
scas
dec
in
pop
xchg
xchg
cwtl
movsb
or
movsb
inc
daa
stos
push
mov
cltd
test
and
mov
insl
lds
sbb
mov
cld
cwtl
pushf
add
cli
jmp
mov
mov
or
stos
xorl
or
mov
push
into
je
mov
or
adc
adc
imul
xchg
movsl
sbb
mov
xor
cs
mov
push
lcall
mov
mov
ror
movsb
stos
xor
jne
aam
dec
subl
stos
xchg
movsl
idivl
lret
ljmp
xchg
stc
jmp
pop
aam
popa
push
mov
mov
movsl
dec
jge
movsb
jg
stos
lock
pop
hlt
adc
adc
aas
inc
idivl
stos
insb
sbb
and
pop
mov
imul
ret
sbb
cmp
or
jns
in
add
mov
jbe
sahf
lds
stos
pusha
lret
sub
xchg
stos
repnz
icebp
and
popa
push
jno
inc
mov
stos
cmp
rorl
xor
es
fcmovne
cmp
sub
nop
cmp
in
lret
lods
aam
xor
aad
xchg
in
fwait
sub
scas
and
stos
inc
les
imul
rcrl
out
jmp
fs
stos
imul
ret
in
pop
jo
popf
call
stos
int
xorb
cmpsb
sub
stos
mov
mov
mov
jb
mov
xor
adcb
bound
jbe
fwait
out
stos
int3
in
cmp
pop
setne
imul
jge
mov
lods
sahf
push
push
xor
test
int
ret
data16
stos
lcall
xor
inc
jne
cmpsl
adc
add
or
clc
jae
pavgw
push
das
mov
lahf
sbb
push
dec
jmp
popl
icebp
mov
inc
jmp
and
outsl
lods
xlat
add
jl
dec
inc
std
popf
pop
testl
mov
or
es
stos
and
lcall
lahf
insl
dec
push
xchg
and
mov
stos
idiv
jecxz
mov
outsb
fwait
int
sahf
xchg
call
shll
adc
inc
pop
jo
jns
stos
sahf
out
cmp
stos
push
js
incl
cmc
inc
cmp
ds
push
xlat
sub
inc
test
mov
imul
mov
push
cmp
sub
adcb
shll
inc
inc
popa
ds
dec
mov
iret
stos
rorb
imul
gs
stos
push
xchg
jg
lods
stos
aad
mov
subb
jl
push
ljmp
xchg
cwtl
jle
lea
cmc
arpl
push
nop
mov
xchg
pop
jg
adc
jns
cs
pop
xchg
stos
cmp
xor
stos
sbb
aad
dec
or
clc
stos
shrb
mov
imul
mov
dec
call
clc
add
mov
mull
mov
jl
addr16
arpl
push
fwait
pop
in
in
xchg
dec
mov
cmp
dec
xchg
fwait
pop
inc
es
xchg
ljmp
sbb
cmp
inc
mov
add
and
mov
jecxz
jbe
bnd
mov
ficomps
fldcw
sub
adcb
enter
ja
fistpll
cld
je
add
addl
std
scas
pop
stos
and
mov
mov
enter
pop
jbe
add
mov
test
in
xchg
mov
mov
sbb
mov
pushf
xor
or
movsl
stos
stos
sbb
and
push
js
rcrb
xchg
pop
pop
call
out
cmc
xor
pop
push
mov
stos
dec
and
ficoms
jae
pop
sbb
xor
cltd
mov
cmp
imul
cwtl
aam
push
xchg
rcrb
outsl
ror
out
xchg
dec
popf
push
inc
stos
mov
or
daa
test
cmp
and
mov
stos
cltd
sahf
stos
lods
mov
out
mov
fsubrl
sub
das
inc
push
adc
fs
sbb
cmp
add
imul
or
inc
stos
aam
ss
lods
stos
call
outsb
jecxz
push
repnz
and
xchg
mov
fnstcw
mov
sub
dec
push
lret
xor
pop
jo
mov
stos
fcoml
mov
stos
xor
jle
daa
ret
int3
sub
es
mov
in
mov
push
jb
and
icebp
fidivrl
inc
adc
pop
scas
mov
add
and
dec
mov
stc
gs
dec
push
stos
mov
nop
add
fildll
xor
jmp
sub
data16
adc
imul
xchg
inc
mov
stos
push
inc
addr16
fmuls
pop
aas
inc
xchg
inc
mov
fistl
mov
pop
cs
cmpsl
inc
push
push
cmpl
movsb
xchg
daa
ss
xchg
push
pop
sub
jge
adc
pusha
fnsave
fiaddl
mov
aam
xchg
xchg
in
inc
sub
out
addl
or
fwait
jnp
lds
sti
inc
arpl
or
scas
jge
mov
stos
jnp
aad
pop
test
mov
and
dec
idiv
add
push
cmpsb
sub
mov
int3
fisubl
outsl
xchg
lret
popa
stos
mov
inc
pop
aad
push
pop
xchg
and
xor
scas
lds
cmp
frstpm(287
jmp
mov
and
adc
mov
addr16
mov
je
stc
aaa
mov
inc
cmp
inc
pushf
cltd
rolb
fwait
mov
cli
stos
arpl
insb
lea
mov
sbb
fstps
stos
or
adc
test
ficoml
mov
aas
sub
mov
aad
dec
mov
inc
nop
movsb
inc
movsl
jp
sub
data16
mov
pop
mov
ja
std
imul
pop
in
in
and
sub
mov
mov
push
addr16
cwtl
jmp
cs
sbb
dec
adc
xchg
dec
cmp
loope
fsts
scas
shll
popa
and
std
imul
fndisi(8087
push
stc
or
sub
push
movq
inc
xlat
mov
stos
pop
sub
aaa
stos
pop
xor
pop
push
push
sub
stos
aam
mov
out
jp
test
and
stos
lea
sahf
xrelease
clc
add
stos
push
dec
mov
jl
cs
repz
testb
dec
cmp
scas
sub
outsl
mov
stc
mov
stos
iret
sbb
inc
les
mov
stos
jno
sbb
add
insl
cltd
mov
push
inc
ret
sbb
adc
stos
xchg
mov
pop
in
call
sbb
sub
mov
enter
pop
clc
mov
loop
sub
jge
xlat
mov
stos
ret
pop
jne
je
pop
sub
rcl
aas
js
fs
adc
xchg
stos
jnp
jno
outsl
ja
pop
stos
pop
cltd
pop
int3
add
jbe
ds
push
and
stos
ss
push
cwtl
cld
imul
insl
mov
xor
loop
or
and
push
add
mov
add
leave
imul
dec
arpl
test
cmpsb
scas
bts
sbb
bound
push
mov
jle
mov
or
in
out
popf
jg
cmpsl
sub
push
insl
pop
daa
or
aaa
hlt
pop
and
scas
xor
movsb
mov
ficomps
sub
mov
aaa
iret
lret
dec
cmpl
adc
cmp
inc
jnp
ds
xchg
mov
hlt
cld
jp
fs
mov
gs
roll
jo
cmp
icebp
xchg
call
in
xlat
rorl
loopne
and
push
dec
sub
fwait
sub
arpl
mov
mov
in
cltd
mov
jne
adcl
stc
push
insl
stos
sti
pop
dec
shlb
lods
push
push
push
lea
idiv
ror
sti
mov
sub
inc
mov
hlt
fs
lds
dec
aaa
pop
push
push
lods
sub
jl
inc
stos
mov
jae
sbb
in
mov
jmp
cmp
stos
shl
pop
dec
lea
push
adc
jmp
les
stos
aam
xor
lcall
xorb
jg
call
fwait
pop
int3
push
mov
out
loopne
stos
les
push
jmp
push
adc
fcomps
lods
jmp
or
jecxz
jae
stos
mov
mov
sub
sbb
fnstcw
or
jmp
ja
adc
mov
xchg
and
sub
clc
cmp
sub
pushl
push
stos
or
dec
mov
stos
jl
inc
push
rol
movsl
ljmp
sbb
xchg
fucomp
pop
stos
clc
and
loopnew
fsubrl
xor
mov
adc
adc
jl
sub
ds
mov
lods
jmp
int3
stos
jl
ds
stos
xchg
pop
movsl
inc
xor
cmp
mov
mov
stos
shrb
cld
dec
pop
sbb
cmp
xor
push
and
push
sahf
mov
jne
and
dec
pop
mov
in
or
pop
insb
insl
pop
stos
in
cltd
push
lcall
orl
xchg
sub
pop
stos
jnp
iret
pop
pop
sti
pop
inc
jl
shrl
push
and
aam
xorb
jb
test
and
subb
push
into
stos
push
enter
ret
in
adc
push
stc
mov
clc
push
sti
jl
ja
cmpb
add
push
stos
add
mov
sub
mov
js
and
mov
xchg
outsb
stos
pop
fstl
lds
test
mov
jae
insb
fildl
mov
jo
stos
lock
int
jmp
sub
stos
es
cmc
dec
dec
pop
xchg
imul
or
jno
mov
stos
loope
xor
dec
out
out
adc
dec
scas
cmp
xorl
test
push
jnp
jmp
adc
pop
cmp
andb
jno
test
push
stos
push
out
jecxz
sub
mov
stos
inc
inc
nop
adc
stos
aas
xlat
mov
cmp
cli
jmp
mov
dec
xchg
mov
dec
adc
push
inc
sub
stos
imul
mov
push
pop
addr16
cwtl
mov
sub
scas
out
mov
jbe
std
push
outsl
dec
add
push
lods
xchg
xor
lods
jge
ss
aas
push
jmp
sub
les
pop
fstpt
aad
addl
mov
loopne
cmp
rorb
stos
jno
mov
hlt
test
sub
cmpb
insb
lods
stos
pop
pop
shrl
lds
mov
push
js
cmpsl
cli
stos
or
jbe
movsl
or
fmuls
scas
inc
mov
imul
dec
add
mov
cmpsb
pop
stos
insb
mov
lea
lods
jl
xor
icebp
stos
jp
dec
loope
mov
cmp
in
xchg
lea
ss
xchg
jno
loop
addl
int3
stos
mov
inc
test
stos
pop
mov
loop
stos
mov
xchg
in
jmp
insl
push
inc
scas
adc
xchg
orl
xlat
adc
scas
mov
dec
ret
xchg
stos
int
inc
loop
nop
subb
clc
mov
fisubrl
sarl
adc
jmp
ja
mov
sub
jge
mov
xchg
loop
stos
shll
ss
and
call
lods
jmp
subl
imul
jg
fisubrl
mov
pop
jmp
lds
insb
stos
xchg
xchg
push
add
stos
pop
push
xor
out
data16
repz
xchg
sbb
mov
fwait
push
jmp
por
jmp
lret
jo
xchg
pusha
xchg
push
and
stos
bound
int3
push
lods
lods
inc
aad
xchg
call
pop
inc
dec
pushw
mov
sbb
inc
outsb
lds
pop
cmp
int3
stos
or
dec
cwtl
sub
cmpsb
cmp
fimull
imul
pop
mov
das
lock
int
jle
adc
shll
movsl
pop
add
mov
in
xchg
jecxz
repnz
mov
push
stos
pop
xlat
xchg
mov
xor
sbb
mov
dec
mov
xchg
dec
pop
stos
inc
xor
jnp
push
stos
fistpll
aaa
jp
or
cltd
inc
hlt
push
and
cmp
aas
stos
lea
adc
jecxz
xchg
lcall
dec
lret
mov
les
into
dec
imul
push
stos
ja
pop
push
xchg
dec
rep
and
adc
sub
mov
jb
cmp
push
xor
add
movsl
xchg
stos
mov
int3
insb
sbb
jnp
dec
inc
nop
inc
add
stos
inc
bound
sbb
aaa
fisubrs
fs
lea
jmp
dec
sahf
and
jmp
sbb
mov
add
pop
je
mov
sti
stos
loopne
ret
frstpm(287
jmp
mov
popf
inc
out
scas
imul
pop
dec
mov
sub
xor
stos
inc
orb
leave
cmp
out
and
fsubl
dec
mov
mov
jae
in
inc
xchg
and
dec
aad
int3
xchg
outsb
pushf
test
sub
dec
mov
enter
lea
push
ljmp
xchg
mov
lock
stos
jl
roll
jbe
out
out
inc
mov
in
jae
cltd
push
popf
test
mov
icebp
sbb
xor
in
iret
scas
pop
mov
shl
xlat
cli
cltd
ljmp
push
sbb
cmp
jg
dec
push
clc
arpl
stos
sub
in
sub
test
jmp
int
imul
mov
sbb
stos
lods
fildl
cld
lock
push
dec
push
xor
dec
lds
add
xchg
xchg
jge
cli
fstps
cld
xchg
and
and
mov
das
adc
stos
leave
int3
out
hlt
std
inc
outsb
adc
ljmp
cmpsb
stos
in
aad
lgs
jmp
imul
mov
cld
ds
insl
stos
push
jmp
and
cmpsl
stos
mov
mov
stos
adc
pop
xchg
lds
xor
pop
imul
sbb
gs
or
mov
fwait
add
push
sbb
add
cmpsl
mov
push
stos
or
popa
adc
pusha
fisubl
xchg
xchg
call
adc
popf
mov
dec
ja
sbb
sahf
stos
clc
mov
adc
stos
push
cwtl
jnp
push
das
mov
dec
sbb
movsb
bts
jmp
pop
jns
mov
dec
adc
imul
and
xchg
cmp
jmp
inc
stos
sub
sub
dec
dec
pop
stos
lock
loop
orl
push
adc
jno
push
bound
cli
gs
mov
adc
adc
or
push
std
jnp
stos
sub
lcall
aad
sbb
les
in
mov
call
dec
mov
lods
dec
sahf
cmpl
pop
cmp
rorl
inc
push
jecxz
lods
xor
rcrl
lea
in
loop
shrl
stos
addb
cmp
and
xor
adc
shrl
push
adc
sbb
sbb
nop
cld
pop
lods
adc
sub
stos
pop
movsb
jne
mov
imul
sbb
xchg
sub
in
pop
out
xchg
mov
mov
clc
ror
adc
fwait
jo
loopne
dec
xchg
sbb
jb
lods
pop
push
pop
stos
imul
popa
sahf
nop
pop
cld
mov
scas
push
ljmp
xchg
imul
sbb
adc
fldt
xor
fldl
jb
jl
cmp
xchg
add
stos
jbe
pushf
cmp
push
aas
stos
inc
shl
mov
and
sub
in
mov
icebp
andl
mov
adc
and
inc
xchg
es
imul
shll
push
cwtl
loop
sbb
test
stos
xor
fildll
insb
mov
jg
scas
mov
sbb
mov
test
jle
lahf
jp
imul
xor
mov
nop
mov
inc
cmp
jae
pop
es
push
clc
mov
into
loop
jb
bnd
imul
stc
stos
mov
add
lea
test
int3
pop
adc
stos
adc
out
subb
push
xchg
aas
orl
push
and
stos
adc
push
imul
mov
inc
subb
rcrl
adc
stos
icebp
or
mov
fldcw
imul
testl
scas
mov
sbb
dec
or
fwait
jl
fidivs
out
stos
daa
mov
lods
xor
ss
stos
in
inc
out
cs
jmp
in
setge
gs
jo
and
imul
dec
ljmp
jb
xchg
sub
cli
insb
ss
inc
stos
mov
mov
sub
cwtl
add
adc
mul
ss
cmp
stos
adc
cmc
stos
test
mov
movsl
stos
sub
rclb
test
addr16
out
orl
into
es
addb
add
dec
stos
mov
jne
fdivrs
pop
inc
dec
pushf
stos
inc
sbb
mov
rcll
andb
movsb
in
xchg
jb
in
inc
enter
add
jo
stos
aad
and
inc
stos
inc
jns
cwtl
fnsave
int
insl
aad
pop
xchg
xor
cs
add
or
adc
insl
loopne
mov
adc
ret
leave
cmp
pop
jg
add
cmp
pop
mov
outsb
sub
cmc
jno
xchg
mov
hlt
inc
mov
stos
sub
add
in
in
mov
xchg
fldcw
adc
sub
sti
addr16
xchg
jns
dec
mov
pop
sub
mov
add
in
ljmp
push
jne
into
int
aad
gs
jmp
lods
xor
inc
mov
mov
sub
movsl
clc
mov
cltd
je
xchg
xor
pop
or
sub
in
mov
adc
addr16
pop
imul
roll
xchg
sbb
out
outsl
jbe
fsubr
xchg
or
pop
cmp
jmp
sub
cmpsl
dec
xor
push
cltd
popa
and
stos
or
sub
jecxz
pushf
fwait
pushf
imul
aam
mov
or
mov
xchg
int
xor
jg
and
inc
scas
mov
sub
add
loope
push
repnz
ds
shrb
pop
dec
inc
sbb
stos
mov
scas
push
sub
shl
enter
addb
aad
cmp
cmp
arpl
outsl
mov
sbb
rcr
jne
xchg
addr16
fsubrp
cmp
data16
test
into
sbb
sbb
pop
int
mov
push
dec
mov
sbb
push
shrl
push
mov
mov
mov
fmuls
nop
xor
stos
sbb
fimuls
stos
mov
arpl
ss
imul
aad
push
lods
loop
stos
xchg
fwait
insl
cs
add
cs
mov
lret
xlat
cmp
lds
jecxz
mov
sub
push
orl
ss
add
pushf
out
jp
stos
push
outsl
sub
das
jl
fildll
stos
enter
ret
stos
or
mov
push
add
in
xchg
or
in
sub
xchg
cmp
stos
xor
out
pop
add
lcall
stos
dec
in
adc
inc
sbb
icebp
mov
fcom
rclb
push
and
insl
decb
adc
outsl
push
imul
stc
nop
lcall
cmpsb
jle
stos
xor
sub
jbe
mov
lcall
lret
adc
jl
stos
pop
and
sub
enter
mov
ja
es
inc
push
or
imul
stos
fwait
pop
add
pop
arpl
adc
aas
mov
ret
stos
xor
shrb
jp
sbb
int3
in
mov
adc
ds
adc
ss
test
stos
lcall
xlat
dec
bound
jmp
jbe
mov
out
xchg
les
adc
sbb
or
xchg
pop
divl
hlt
flds
outsb
imul
mov
cld
or
mulb
mov
leave
rol
cmpsb
lock
adc
sub
loope
lret
inc
dec
popa
inc
into
je
imul
xor
cmovo
loopne
dec
cmpsb
pop
pop
push
lea
sub
jmp
loop
std
nop
jp
mov
jmp
stos
inc
lock
shlb
adc
mov
out
fwait
das
cmp
stos
inc
addr16
and
fs
jle
andl
push
imul
ret
dec
pushl
jmp
fldcw
stos
fidivs
insl
repz
loop
popf
imul
ficoml
jecxz
xchg
stos
shlb
dec
out
ds
popa
inc
cmp
outsl
xchg
mov
dec
aam
mov
mov
lock
jg
cld
and
push
pop
fstps
mov
push
in
call
pop
mov
mov
jb
mov
adcl
mov
jb,pt
test
in
xor
stos
fisttps
aad
arpl
lret
inc
outsl
stos
and
stos
pusha
andb
shrb
rcrb
mov
inc
nop
cmpsl
sbb
adc
mov
jb
insl
stos
push
lret
incl
fldenv
jmp
loopne
ret
mov
lods
push
stos
fidivs
fdivs
cld
jnp
xchg
call
stos
inc
rorb
push
loope
and
xchg
pop
push
insb
dec
push
roll
pusha
push
mov
mov
and
ret
fwait
rorl
stos
loopne
xor
mov
mov
inc
rcrb
imul
stos
inc
cmp
jns
stos
push
sahf
xchg
sbb
lds
test
daa
out
adc
jg
mov
and
sbbl
jp
cmp
mov
pop
jl
cwtl
ss
test
test
aad
mov
andb
stos
sbb
mov
mov
mov
xchg
inc
xchg
test
bound
push
jmp
std
pop
and
subl
addr16
stos
push
cmpsb
push
xchg
lea
stos
mov
into
xchg
mov
ss
ljmp
lcall
popl
pop
jl
stos
push
push
mov
push
fwait
pop
mov
mov
aaa
fsubrs
mov
mov
fildl
and
imulb
in
lods
xchg
scas
lea
stos
rcrl
les
sub
mov
stos
ds
push
loope
pop
pop
pusha
dec
jae
andb
in
stos
sarl
maskmovq
testl
fdivrl
lret
mov
xor
stos
jecxz
push
add
aam
stos
push
arpl
lods
push
inc
mov
mov
movsl
insb
pop
stos
pop
add
out
mov
stos
sub
js
rclb
push
imul
stos
xchg
jnp
aad
pop
je
enter
cmpsb
lahf
mov
loopne
arpl
repnz
lret
fwait
out
scas
xchg
lock
stos
mov
jg
sub
movsb
mov
stos
sarb
testb
imul
out
rcll
add
mov
scas
sub
mov
imul
lahf
int3
mov
jmp
mov
lods
sbb
outsb
sub
or
stos
jne
inc
pop
jmp
pusha
test
aaa
insl
xchg
push
push
daa
inc
push
mov
pop
inc
cmc
stos
jmp
sbb
es
stos
call
lds
stos
lock
or
cmp
mov
es
nop
pop
push
dec
mov
ljmp
sub
and
push
pop
stos
push
pop
popa
xor
mov
jmp
jg
fwait
stc
out
mov
imul
inc
jns
add
jbe
in
fs
mov
push
sub
int
push
dec
mov
stos
movsb
cli
xor
insl
ss
rcrl
stos
call
pop
or
cmp
stos
jmp
mov
xchg
mov
or
xchg
pop
ja
stos
mov
dec
fwait
add
shrl
jp
push
fs
xor
mov
das
push
addr16
mov
push
inc
lods
js
int
cmc
iret
and
push
sahf
push
inc
mov
jl
dec
pop
insl
xor
mov
outsl
stos
dec
mov
dec
int3
shlb
push
inc
scas
mov
jnp
in
mov
aad
jno
pushf
aas
push
mov
out
jg
fwait
das
and
mov
pop
js
sub
inc
stos
daa
push
lea
sbb
mov
push
stos
fldcw
in
out
fwait
xchg
rolb
xchg
callw
dec
inc
xor
add
std
push
nop
imul
aaa
incb
add
push
ret
into
dec
cltd
and
lods
jge
shrl
push
or
or
xchg
mov
stos
mov
push
push
imul
lcall
push
into
imul
mov
add
mov
sbb
sbb
lock
xchg
test
ja
pop
stos
sbb
std
jae
imul
das
push
mov
ljmp
mov
and
xchg
ss
sarb
mov
mov
call
adc
shl
jmp
std
in
push
add
dec
pop
stos
pop
outsb
ficoml
xor
xor
loopne
adc
adc
fisubrs
shlb
aam
inc
mov
or
loope
adc
fcmovnbe
roll
pop
lods
inc
stos
out
call
pop
popa
stos
pop
lea
jno
stos
add
dec
in
ret
sbb
int3
in
movsl
nop
fwait
jnp
xchg
stos
movsb
cmpsb
push
insl
adc
dec
dec
mov
mov
push
arpl
xchg
pop
fbld
push
rcrb
addr16
xor
daa
mov
test
push
mov
xchg
mov
sub
push
test
mov
ret
insb
mov
pop
cltd
stos
sbb
orl
mov
mov
mov
in
or
fdivs
jae
jge
push
fwait
pop
or
and
stos
adc
popf
in
or
mov
jb
sbb
cld
mov
add
and
stos
rorb
xchg
pop
iret
stos
out
mov
dec
ficoml
dec
shll
cmpsl
popf
push
inc
in
stos
push
adc
int3
jp
jb
int3
and
fdivrl
aad
test
bts
mov
and
xchg
and
int3
fwait
jmp
idiv
or
dec
add
imul
out
or
inc
inc
repnz
push
xchg
outsb
popa
ljmp
xchg
ss
xchg
pop
mov
jmp
xchg
nop
add
mov
pop
stos
cmp
push
lds
jno
sbb
mov
stos
in
jb
stc
jb
inc
adc
xchg
mov
cmp
mov
dec
stos
jecxz
enter
sbb
mov
inc
fwait
stos
jmp
push
fcomip
xchg
or
dec
mov
ret
arpl
imul
xlat
sti
in
stos
xchg
adc
add
int3
mov
imul
stos
outsb
jne
mov
stos
hlt
andl
xorb
fnstcw
or
push
mov
push
dec
stos
push
testl
stos
push
adc
and
stos
mov
jp
mov
rcrl
stos
mov
out
ja
xchg
and
pop
xchg
lahf
and
lock
push
cwtl
ror
mov
cmc
push
test
aaa
je
mov
scas
das
scas
leave
stos
enter
inc
fsubr
xchg
cmp
loope
pusha
push
out
subb
shll
stos
ss
jnp
jae
ljmp
je
xchg
sbb
inc
and
sub
adc
imulb
cmc
mov
xor
mov
shrl
pop
daa
and
mov
fildl
test
cld
push
xchg
or
out
add
add
std
rcrb
mov
sbb
sbb
leave
cmp
pop
xlat
mov
stos
test
push
pop
mov
sbb
jecxz,pt
push
rep
inc
ret
stos
inc
btr
jo
ljmp
lds
mov
das
clc
mov
cmpsl
js
cmp
lahf
jnp
in
lret
jg
outsb
scas
arpl
pop
pop
and
lea
jge
scas
pop
pop
cli
rcrb
loop
test
nop
pop
gs
and
mov
lods
lret
nop
xor
stos
addr16
jns
sub
lret
in
cmp
movsb
scas
leave
fwait
stos
xor
fidivl
mov
push
dec
add
fs
xchg
or
dec
mov
ja
cmp
inc
sbb
stos
data16
scas
cmp
ret
testl
fwait
imul
std
in
movsb
mov
idivb
inc
dec
xchg
aad
mov
stos
jmp
shlb
roll
stos
and
out
stos
adc
adcb
sub
fdivrl
xchg
xchg
mov
test
fwait
movsl
dec
push
push
sbb
stos
cmp
or
push
stos
xchg
dec
clc
cmpsb
jecxz
stos
shlb
and
jmp
jle
mov
sub
xor
jmp
mov
je
loopne
stos
xor
push
mov
rolb
icebp
int
loop
xchg
nop
jno
xchg
adcb
stos
lret
out
cmp
stos
pop
mov
cmp
stos
int3
jmp
jge
dec
jbe
lods
in
sub
stos
bound
pop
fstps
lcall
mov
sub
stos
cmp
loop
stos
out
and
scas
jbe
adc
lcall
jp
mov
popf
out
xlat
scas
mov
into
cltd
mov
xor
cmpsl
sti
lock
pop
mov
mov
and
pop
inc
imul
pushf
fwait
xchg
mov
arpl
cmp
mov
test
xor
loope
insb
cmp
push
mov
xor
dec
push
stos
add
jne
aam
mov
scas
sbbl
mov
loopne
cmp
arpl
ja
arpl
pop
stos
roll
xor
out
stos
pushf
dec
adc
cmc
iret
mov
arpl
fwait
add
in
lcall
push
scas
stos
adc
stos
inc
loopne
stc
es
imul
xchg
mov
pop
jge
cli
mov
fwait
call
int3
mov
ds
fwait
sti
mov
aad
stos
lds
in
sar
mov
dec
stos
pop
aaa
in
fcoml
iret
dec
jl
addl
les
lds
or
dec
bound
enter
pop
lahf
idivl
stos
inc
dec
out
sub
movsl
daa
stos
sub
out
addr16
rcrb
mov
fwait
fwait
mov
jo
mov
or
inc
daa
mov
mov
mov
mov
ljmp
xchg
movsb
addr16
subl
inc
push
mov
lahf
sti
je
fwait
jae
in
stos
inc
cs
pop
in
popf
jno
imul
loopne
jp
scas
test
dec
dec
jo
pop
ljmp
loope
cmpb
add
subb
or
stos
cmp
int
sub
mov
mov
test
stos
inc
xchg
decl
cld
sub
into
xchg
push
jge
mov
lcall
daa
ret
mov
sbb
xchg
jmp
fsubl
scas
nop
popa
imul
jne
dec
jmp
adc
imulb
loope
xor
mov
dec
mov
pop
push
cmp
sub
cmpsb
and
mov
jo
sub
sarl
jne
cmp
push
lock
pop
stos
mov
popf
adc
fst
sub
lock
mov
dec
mov
daa
out
notb
andb
js
xchg
mov
test
fwait
dec
or
arpl
rolb
jle
mov
out
pusha
cmpsl
lea
pop
jo
fsubrl
gs
stos
cli
xchg
ret
or
cld
mov
inc
lds
aaa
test
mov
ret
push
adc
jl
cmp
jmp
fidivl
leave
or
nop
pop
sbb
add
add
es
int
jmp
pusha
lret
mov
stos
daa
or
xchg
fdecstp
iret
pop
mov
push
xchg
outsl
ret
stc
nop
mov
negb
stos
rol
sbb
sbbb
rcll
sub
stos
push
sbb
sub
test
imul
push
addb
les
sbb
or
stos
pop
mov
js
stos
inc
and
stos
add
push
push
lods
pop
mov
mov
sbb
out
in
inc
stos
mov
xchg
xor
add
daa
sub
aas
in
push
scas
mov
xchg
sub
jno
int
or
mov
push
sarl
mov
push
pop
stos
mov
stos
sbb
xchg
imul
or
sahf
sar
xchg
test
pop
into
in
sub
sbb
sub
mov
in
fisubs
gs
mov
andl
aas
cmpsb
daa
mov
ljmp
call
mov
stos
jge
repnz
inc
sbb
mov
mov
pop
out
sub
insl
dec
pop
stos
fisttpl
addr16
std
ss
jmp
mov
sahf
jp
or
aad
ret
sub
stos
jg
jp
pop
adc
jmp
out
or
pop
in
inc
mov
push
enter
cmpsl
popf
add
pop
in
mov
je
mov
mov
lods
mov
pop
jl
decl
daa
hlt
jl
add
mov
mov
add
dec
addr16
testl
lret
test
pop
mov
stos
mov
lret
stos
sti
rol
test
clc
or
mov
push
jbe
or
movsb
push
popf
push
mov
cmp
push
adc
inc
fwait
test
push
stos
lcall
jbe
out
popf
movsb
or
pop
xor
mov
aaa
sti
sbb
stos
hlt
and
in
jle
pop
test
gs
jno
add
fstps
scas
xchg
pop
add
in
or
dec
push
hlt
and
mov
mov
inc
stos
inc
jge
adcb
inc
push
stos
mov
pop
dec
int
rorb
xchg
xchg
adc
add
insb
fdivrp
lcall
pop
outsl
and
shlb
test
ret
ljmp
push
lods
push
cmpsl
in
in
push
stos
mov
rorb
fdivs
and
xor
dec
sbb
scas
hlt
pop
or
stos
add
ljmp
lods
fisubrl
pop
mov
mov
or
mov
push
dec
repnz
xchg
test
rclb
and
test
imul
cli
xor
stos
in
jl
leave
loop
stos
sbb
pop
rolb
out
movsb
cmp
mov
stos
std
repz
sti
stos
inc
mov
fs
stos
dec
mov
pusha
dec
stos
rcrb
jge
cmp
push
push
xor
in
stos
adc
sbb
xchg
jo
fs
jb
and
stos
adc
dec
sub
jge
xchg
stos
sbb
imul
subb
lret
lret
js
mov
stos
sbb
sbb
push
stos
rclb
mov
add
lahf
stos
sbb
repnz
subb
das
pop
sbb
mov
subl
sbb
movsl
mov
fs
int3
push
mov
mov
lods
repz
cmp
cmp
arpl
jmp
stc
mov
pop
std
mov
pop
jl
loop
jbe
fisubrl
pop
negb
lock
and
and
dec
pop
xor
lahf
arpl
shrl
mov
icebp
lret
rol
fs
mov
pop
pushf
and
stos
lahf
lods
xchg
ret
xor
popa
mov
lods
out
stos
push
or
stos
das
dec
push
xor
mov
jnp
add
addr16
cmp
xchg
popfw
cltd
fnstcw
xchg
stos
add
ss
daa
cmp
mov
stos
scas
cmp
push
orl
push
out
sub
mov
dec
in
sub
jmp
add
lret
stos
xchg
pop
rcl
sub
lahf
mov
cltd
and
lods
stos
aam
xchg
cmp
test
push
adc
xor
inc
cmpsb
movsb
nop
cmp
stos
movb
dec
dec
fsubrs
inc
push
aaa
mov
mov
stos
jmp
jo
loopne
ja
popf
les
jle
enter
inc
rorl
mov
xor
push
xchg
lods
inc
std
push
nop
js
fildll
sub
stos
add
in
add
jne
mov
xchg
jmp
xor
and
cmp
mov
add
arpl
pop
cmpsb
stos
mov
pop
popf
fisubl
call
imul
sahf
movsb
addr16
sub
dec
pop
xor
ret
jl
arpl
xchg
int
stos
hlt
inc
pop
inc
xor
xor
jae
pushf
outsl
mov
les
adc
cmc
das
in
stos
xor
bound
imul
xchg
mov
sbb
loop
add
dec
mov
or
shll
stos
inc
ja
xchg
cmpsl
jns
dec
push
stos
outsl
fcoms
adc
adc
inc
mov
in
xchg
cld
jnp,pt
or
xor
in
or
icebp
inc
dec
movsl
movsb
xchg
mov
dec
stos
fadd
push
sub
iret
jnp
stos
insb
add
jo
sub
inc
es
leave
out
mov
xchg
pop
fisubl
nop
mov
stos
es
xor
lcall
aam
cmp
daa
bound
dec
cld
pop
jae
pop
and
les
ja
stos
in
push
stc
loopne
add
cmp
es
sub
mov
outsl
add
stos
mov
xchg
call
sbb
push
jae
dec
push
pushf
test
mov
push
shr
call
lock
cmpsb
jbe
jno
cmp
nop
pop
stc
adc
sub
sub
shll
and
xor
jns
add
mov
icebp
in
xor
jne
and
stos
shll
mov
addr16
sbb
xchg
mov
and
jle
lea
ret
jmp
xor
push
scas
or
into
dec
and
fbstp
mov
ss
stos
cmp
repnz
dec
wbinvd
stos
adc
cld
into
mov
push
pop
outsl
push
stos
testl
jmp
and
popa
or
add
arpl
xchg
inc
jmp
mov
stos
sbb
pop
dec
mov
sub
popa
arpl
mov
dec
jo
mov
mov
mov
jno
sub
inc
ds
stos
cmp
push
add
or
inc
stos
cmp
push
xchg
into
ds
mov
xchg
xlat
ljmp
mov
cmp
inc
fs
dec
filds
shrl
into
pop
sbb
ja
addr16
mov
xor
xor
aam
shlb
jmp
push
clc
cmpsb
push
scas
pop
and
repz
test
loop
push
mov
cmpsb
gs
adc
pop
in
fcomip
jg
push
inc
shll
cld
imul
and
xchg
stos
sub
imul
subl
push
xor
xchg
jno
jns
xchg
scas
stos
dec
cmpsl
dec
mov
popa
sbb
xlat
xchg
sahf
aaa
or
stos
xchg
notb
mov
ss
mov
je
fwait
stos
stos
pop
outsl
dec
aaa
cmp
inc
fdivrl
lds
jge
or
int3
stos
lahf
cmp
outsl
leave
repz
lds
mov
mov
pop
pop
stos
push
cmpsl
ss
inc
dec
jmp
xchg
sbb
lods
cmp
stos
xor
sub
dec
add
xchg
sbb
aam
xchg
faddl
mov
aad
jne
out
xchg
and
mov
pop
xchg
addl
icebp
data16
loop
adc
hlt
fwait
adc
test
and
aam
imul
lret
fldt
les
push
addr16
daa
push
push
jecxz
pop
fcmovnb
mov
repz
cmpl
lock
push
lret
stc
insb
stos
xor
sbb
mov
test
imul
fwait
mov
cmp
xchg
sub
loopne
xchg
add
std
xchg
mov
stos
fdivrs
cmpsl
stos
mov
inc
lods
or
inc
pop
lods
sbb
cld
push
int
lods
fwait
paddusw
in
push
mov
xchg
stos
add
jne
push
xor
cmp
or
jnp
stos
push
mov
leave
pop
xchg
sti
lods
push
cwtl
adc
scas
cmpsl
push
stos
inc
rorb
in
fstl
stos
repz
ret
push
stos
mov
jnp
subl
stos
mov
test
aad
outsb
loope
mov
mov
pop
subl
lds
xchg
pop
add
jb
mov
dec
adc
jmp
lcall
pop
xchg
or
dec
imul
xchg
iret
cmp
imul
sub
outsb
push
stos
iret
jno
frstor
insl
xchg
cmpsl
sub
cltd
jge
sub
mov
adc
nop
or
pusha
stos
dec
jb
add
dec
mov
into
push
mov
pusha
inc
les
imul
subb
xchg
jmp
stos
jecxz
mov
mov
jg
subl
in
test
scas
inc
push
xchg
jb
and
aam
xor
mov
xchg
xchg
or
mov
add
inc
xchg
fsubrl
mov
adc
iret
aaa
bound
mov
in
add
pop
xchg
das
pop
ljmp
pushf
adc
pop
stos
inc
xor
push
cmp
mov
mov
ret
sub
cwtl
mov
xchg
add
xchg
pop
outsl
add
jp
and
mov
dec
stos
ss
sbb
jl
jns
insl
pop
repnz
test
xchg
out
bts
test
sbb
stos
pop
dec
mov
mov
jo
adc
mov
jl
test
daa
inc
push
das
and
mov
and
subl
cmp
in
les
lcall
out
lods
pop
sbb
dec
ds
shrl
adc
imul
test
push
mov
test
jno
mov
jmp
ljmp
lsl
mov
lahf
test
jecxz
ds
push
subb
xor
daa
jb
je
mov
es
pop
pop
mov
inc
inc
dec
stos
cmpsl
testl
loop
cmc
stos
imul
mov
popa
sub
stos
daa
sbb
mov
stos
mov
leave
and
jnp
cmp
push
es
stos
xchg
sub
stos
mov
stc
ja
stos
sbb
cmpsl
dec
adc
fdiv
stos
xchg
movsb
rorb
out
test
push
cmp
inc
dec
sub
dec
into
sbb
mov
ljmp
or
fistpll
mov
rcr
dec
arpl
rorl
pop
mov
stos
stos
sti
fwait
push
imul
lahf
stos
jne
sub
test
std
das
add
dec
scas
or
jl
sahf
movsl
rcll
dec
xor
aaa
fistps
fmull
stos
mov
out
push
iret
push
pop
popa
rolb
js
dec
stos
jne
jge
bound
and
add
imul
mov
add
push
xchg
or
addr16
pop
loope
test
push
mov
cmpsl
in
subb
pusha
and
mov
mov
rolb
aas
test
stos
dec
lock
add
stos
adc
pop
dec
fwait
jecxz
stos
mov
adc
stos
arpl
and
stos
xchg
jb
into
ds
add
adc
in
cmp
xor
addl
or
stos
lahf
adc
aas
pop
inc
xchg
cmpsl
stos
mov
dec
aad
jl
sub
outsl
push
mov
pop
xor
adcl
mov
addr16
shl
mov
aad
fucompp
mov
adc
orb
stos
push
jmp
add
sub
daa
je
mov
cmp
scas
inc
sti
into
mov
cmc
mov
addr16
fwait
adc
cmpb
gs
cmpsb
stos
jmp
lret
mov
sbb
adc
xchg
pop
daa
ret
jno
ss
dec
jl
stos
jns
out
test
sub
mulb
movsb
aad
stos
popf
cmp
stos
jl
pop
inc
int
daa
fisubrl
faddl
je
mov
push
mov
mov
imul
dec
mov
hlt
leave
jbe
insl
mov
icebp
stos
lock
ss
jnp
popf
lret
or
out
into
inc
lods
mov
inc
imul
or
bound
inc
das
call
and
cmp
cwtl
fisttps
lahf
jg
sbb
mov
xchg
test
mov
ret
daa
add
lret
push
adc
or
mov
sti
in
cmpsb
pop
rcll
adc
mov
lcall
testl
mov
popa
test
mov
mov
dec
cwtl
jmp
jbe
int
xchg
lea
mov
cmpsb
mov
pop
stos
insb
push
lret
loope
stos
mov
jp
xchg
mov
inc
loopne
in
adc
sbb
xchg
call
mov
fmuls
xor
stos
sub
push
aam
fmuls
stos
mov
mov
imul
stos
aad
jns
fwait
daa
pushf
lcall
push
mov
stos
sbb
pop
pop
ljmp
xchg
mov
xchg
stos
sbb
mov
sti
xchg
xchg
stos
dec
jns
add
lods
stos
mov
stc
pop
test
xchg
stos
or
out
stos
push
jbe
push
push
jl
test
add
into
int3
xlat
ss
mov
xor
fidivs
cmp
mov
stos
outsb
decl
push
mov
xchg
stos
rcpps
jge
popa
cmpsb
jmp
mov
mov
fldenv
mov
or
aaa
test
test
stos
push
jae,pn
repz
inc
xor
icebp
mov
cld
fdivp
mov
pop
sbb
pop
or
adc
shr
mov
jl
in
rorl
fwait
sub
push
fimull
rcl
jge
repnz
lahf
and
mov
or
xor
adc
cmpsb
addl
aad
arpl
fucomip
sub
lahf
loop
aaa
xor
sti
ljmp
dec
xor
stos
cli
sbb
add
xchg
push
and
pushf
push
cltd
stos
mov
mulps
popa
jmp
mov
mov
sbb
stos
sti
test
mov
stos
jne
dec
shlb
add
shlb
frstor
adc
stc
add
fwait
mov
push
sub
stos
pop
push
mov
lcall
push
xchg
les
sub
xchg
fsts
inc
push
gs
int
shrb
xchg
fcomps
pop
int3
call
stos
xchg
or
popf
dec
push
sub
fs
cltd
in
jmp
scas
imul
push
stos
mov
or
imul
out
lea
scas
inc
das
add
stos
xchg
push
xlat
testb
add
aad
push
ljmp
sbb
xor
fwait
mov
cld
mov
push
stos
adc
xchg
dec
shrl
ljmp
imull
out
xlat
outsl
stos
inc
fcomip
cli
pop
and
dec
sahf
stos
push
into
cmpsl
leave
or
jle
pusha
pop
sbb
stos
into
test
std
and
test
fwait
jmp
clc
sub
push
stos
outsl
jl
cli
lock
pop
filds
stos
add
lcall
insb
stos
cmc
push
lret
add
pop
popf
je
push
push
lret
mov
dec
adc
arpl
imul
fwait
lcall
push
sti
sarl
stos
and
das
jge
and
stos
jp
movsb
or
les
stos
cmp
dec
xchg
mov
xchg
pop
mov
add
xchg
ret
out
or
jmp
push
xchg
sti
int
stos
mov
out
imul
stos
fistps
jg
mov
lds
mov
mov
push
sub
inc
sub
jo
fwait
push
push
add
or
daa
and
dec
cs
das
aas
loop
mov
aam
dec
mov
mov
pop
scas
adc
sarl
clc
or
fistl
fstps
xchg
stos
jecxz
test
stos
add
dec
adc
xchg
or
nop
shrb
sub
jle
in
jp
adc
fidivs
or
xchg
cld
pop
add
jmp
pop
pop
or
sub
les
xchg
push
stos
dec
into
mov
lods
cld
adc
lahf
jmp
insl
pop
fs
sub
in
out
pop
mov
decl
jmp
and
ret
xlat
popf
stos
test
jb
inc
stos
lret
push
test
imul
cmpsl
stos
push
sub
sub
stos
xor
jbe
popf
mov
mov
not
jae
mov
dec
push
jmp
inc
mov
lcall
out
fsubs
stc
jl
pop
mov
push
push
out
and
pop
jle
pop
repnz
jmp
push
pop
aaa
or
es
hlt
sbb
xor
dec
cmp
in
sub
cmp
mov
pop
cmc
lods
addr16
bound
jle
jmp
stos
test
fcomip
int3
pop
xchg
add
push
dec
mov
pop
aas
inc
push
xchg
xor
mov
xchg
mov
jnp
jne
ret
popf
stos
int3
and
and
xor
jo
mov
sub
inc
cmp
fwait
dec
and
clc
xchg
or
in
int3
fsubrl
push
imull
stos
dec
adc
adc
mov
sbb
fs
in
lods
shrl
adc
enter
stos
mov
xor
mov
popf
ja
mov
mov
cli
addb
dec
stos
jno,pn
cmp
stos
add
or
mov
push
cmp
mov
ja
mov
pop
push
idivl
dec
test
insl
xor
je
push
push
stos
scas
lea
jno
sahf
ss
push
das
jns
lcall
stos
leave
stc
sub
inc
dec
jb
jmp
mov
in
enter
adc
dec
inc
mov
pop
mov
cmpsl
mov
mov
repnz
fwait
les
lret
outsl
push
lods
out
push
mov
in
loop
pop
adc
sub
lods
aad
out
jle
leave
fildll
mov
push
and
and
popf
pop
mov
stos
cltd
in
adc
jl
push
outsb
push
pop
rcr
mov
addr16
decb
ljmp
jge
test
dec
xor
add
adc
xchg
push
dec
push
stos
or
add
stos
inc
add
inc
cmpsl
mov
subl
les
test
rcll
dec
sub
dec
inc
in
fildll
sarl
push
loopne
mov
insl
popf
addr16
cmp
enter
je
dec
daa
fwait
xchg
xor
mov
sbb
inc
mov
inc
stos
fwait
sbb
insl
stos
imul
mov
inc
add
cli
lahf
mov
test
stos
scas
loopne
or
cmp
clc
stos
or
inc
push
mov
xchg
scas
mov
fildll
mov
inc
xchg
stos
pop
ss
lcall
outsl
lods
cmp
mov
adc
lret
xor
bound
jge
mov
sbb
stos
lret
fwait
aad
xchg
addr16
sub
jne
scas
sarl
lret
jge
loope
and
stos
inc
fiaddl
sbb
xchg
adc
cmp
js
ljmp
jge
or
int
cmpsb
notl
lret
stos
sub
mov
push
call
or
lcall
dec
test
jno
push
pop
ficoml
jo
xor
ret
loope
mov
mov
or
nop
pop
sahf
enter
fisubrs
push
test
cs
lret
and
push
xchg
js
jno
enter
stos
stc
push
scas
xchg
movsb
push
pushf
imul
mov
lds
ds
inc
sub
stos
jmp
add
jmp
popa
ljmp
in
jmp
xchg
adc
xchg
or
dec
decl
pop
pushf
scas
sub
in
adc
stos
push
cmpsl
pop
scas
push
xchg
cmpb
in
ss
xchg
lret
sub
es
add
jmp
filds
popa
cltd
pop
fldt
loop
gs
adc
mov
lcall
insb
outsb
xor
inc
adc
stos
mov
or
call
stos
pusha
in
mov
rorb
jns
jnp
outsb
jmp
xor
xchg
sub
sbb
mov
sub
outsl
shlb
xchg
std
out
pop
jb
xchg
push
aad
lods
loop
jmp
jae
lock
mov
scas
xchg
xchg
inc
jo
pop
scas
lods
cs
fildll
or
jnp
stos
clc
or
xorb
das
dec
insb
push
stos
and
mov
into
outsl
sub
sarl
add
xchg
pop
daa
jle
cmp
push
dec
cmp
and
push
testb
stos
dec
inc
in
fcmovne
in
test
stos
inc
jge
test
stos
mov
xlat
jo
adc
xchg
dec
pop
jb
cmpsl
stos
lcall
mov
pop
stos
push
stos
sbbl
jge
mov
mov
push
minps
pop
stos
es
shlb
stos
mov
test
inc
stos
test
sub
stos
sub
in
int3
loope
sahf
iret
jnp
mov
push
pop
movsb
repz
stos
ret
ljmp
stos
sbb
cmp
addr16
sub
mov
insb
push
subb
push
arpl
stos
sbb
int
or
dec
xchg
mov
pop
cld
mov
mov
adc
ror
ret
jmp
jno
scas
insb
stos
out
xchg
pushf
xlat
dec
pop
loopne
stos
adc
inc
aad
jnp
mov
jg
in
sbb
push
jo
sub
xchg
jmp
stos
inc
fsubr
dec
mov
xchg
lahf
push
mov
mov
mov
mov
add
sub
and
mov
stos
les
in
jno
bound
stos
and
hlt
out
jmp
dec
mov
pop
dec
xor
pop
stos
ret
fnstenv
pop
jnp
stos
add
mov
push
imul
and
test
fiadds
loope
icebp
mov
les
jne
daa
mov
stos
xchg
xor
mov
lahf
shrb
push
loope
jns
sarl
adcl
fwait
popa
insl
pop
adc
stos
lret
push
daa
incb
shrl
outsb
jbe
push
mov
mov
lock
pusha
leave
jl
sbb
sbb
sub
lods
fldt
jae
mov
jg
sbb
mov
mov
push
mov
js
fwait
stos
inc
or
in
dec
or
jge
or
jnp
pop
aam
sbb
stos
xchg
cmpsl
loopne
shlb
jbe
stos
mov
ss
lret
imul
lahf
pop
fdivl
arpl
clc
stos
mov
dec
dec
pushf
stos
int3
adc
cmp
pop
shrl
xchg
and
push
sbb
test
hlt
add
mov
fidivrs
sbb
into
repz
cmc
icebp
pop
lea
cmp
inc
imul
pusha
pop
or
movsb
and
cmc
imul
mov
and
pop
push
mov
lret
cmp
xchg
sti
push
push
cmp
fxch
mov
idivb
mov
jnp
ljmp
iret
int3
dec
and
mov
cmp
std
lock
mov
aam
sub
sarb
inc
xchg
lcall
push
out
mov
loopne
leave
sbb
lea
stos
sbb
inc
stos
rcrl
aaa
stos
jne
outsl
addr16
mov
cmp
pushw
and
loop
sarl
stos
dec
dec
dec
sti
add
mov
aaa
jl
pusha
lahf
rcll
out
clc
js
push
scas
jae
addl
cmp
cmp
cwtl
push
fsts
andb
scas
add
cmc
cmp
jge
pop
shrl
in
lock
jl
icebp
add
xchg
cmp
mov
pop
out
iret
popa
stos
xor
into
or
sbb
sbb
mov
push
push
imul
aam
xchg
test
enter
out
idiv
sbb
insl
lock
jle
lahf
xor
imul
xchg
dec
mov
subb
les
fnstcw
addr16
jmp
inc
push
or
xchg
cld
cltd
push
addr16
fs
test
js
stc
and
fwait
out
mov
je
jb
pop
bnd
xor
int3
fwait
pushf
add
cmp
ljmp
mov
sbb
pop
ja
stos
imul
stos
inc
movsl
stos
inc
xorb
jmp
aad
mov
jb
xchg
sti
and
xor
mov
jmp
jae
mov
stos
out
sbb
daa
push
push
push
in
fwait
sub
leave
stos
mov
imul
dec
movsl
mov
sub
mov
repz
inc
andl
jp
push
mov
out
jl
stos
movb
insl
lea
es
outsl
std
mov
int
jb
mov
shrb
lods
or
lock
rcrb
stos
jl
xchg
stos
outsl
sub
cmp
pop
cmpl
dec
sbb
inc
fisttps
fmull
pusha
fwait
addr16
pop
adcb
sbb
mov
js
add
cltd
add
xchg
movsl
imull
stos
push
mov
sub
mov
imul
fwait
rcll
popa
cmp
sbb
out
stos
push
sar
das
inc
push
cmpsb
inc
adc
imul
call
mov
pop
jne
outsb
push
and
fwait
jl
daa
push
test
popl
xor
imul
mov
stos
xorb
cmp
test
cmpl
out
pop
shll
and
ret
adc
fwait
sahf
sti
fdivr
stos
push
outsl
imul
mov
xchg
stos
dec
mov
push
loopne
daa
push
mov
sbb
pop
inc
pop
stos
xchg
pop
push
xchg
jle
orl
into
cli
adc
pop
stos
pop
scas
hlt
or
cmp
out
jae
inc
fstpl
nop
std
stos
mov
cs
test
xlat
or
aaa
sbb
clc
dec
adc
push
daa
mov
jmp
pop
mov
iret
arpl
adc
test
cmpsl
adcb
stos
adcl
sbb
inc
pop
xchg
xchg
lcall
jnp
xor
mov
or
push
sti
mov
imul
out
stos
inc
push
popf
mov
iret
mov
jo
mov
mov
sub
clc
movsb
sahf
xchg
aad
fwait
sub
stos
ret
mov
stos
sbb
rcr
pop
es
and
mov
and
pop
pop
xchg
pop
dec
mov
xor
push
jl
sbb
scas
stos
sti
xchg
loopne
ss
roll
add
jne
mov
xchg
imul
lock
into
js
adc
stos
or
mov
stos
out
icebp
cmp
pop
fdivs
into
popf
cli
lahf
cltd
mov
xchg
es
sub
fnsave
fsubrs
cmp
jp
jl
test
cmp
jle
punpckldq
ljmp
sub
ds
jae
imul
mov
or
cmpsb
xor
aad
xchg
sbb
xchg
std
jp
mov
and
imul
cmp
add
sbb
cmp
pop
addr16
out
dec
dec
testl
stos
mulb
xchg
dec
shrl
aam
cli
popf
sub
inc
repz
adc
pop
push
pop
cmpsl
adcl
addr16
stc
and
xchg
jmp
mov
jge
jae
stos
mov
pop
add
stos
lcall
daa
stos
mov
inc
mov
lock
dec
bound
imul
xchg
orl
mov
arpl
sbb
stos
sub
push
or
loope
dec
mov
xchg
stos
repnz
sub
jle
add
and
sti
push
nop
inc
stos
sub
clc
out
pop
add
jp
mov
or
push
mov
push
mov
enter
mov
stos
int3
fdiv
notl
cmc
bound
cmp
ss
push
inc
mov
stos
xor
dec
repz
jno
push
loope
xlat
bound
push
popf
and
les
sbb
push
stos
dec
mov
cmp
add
out
and
fmull
push
push
xchg
scas
adc
xlat
out
mov
inc
adc
dec
mov
out
stos
int3
clc
repnz
movsb
cmp
stos
sbb
loope
and
inc
or
ja
ljmp
pop
addb
das
mov
es
and
sahf
or
xor
out
pop
insb
daa
push
push
popa
add
imul
xor
lahf
jbe
movsb
movsl
cwtl
lds
xchg
insb
rorb
lods
sub
lret
push
inc
sahf
xchg
outsb
xchg
push
or
fldl
call
gs
subl
pop
jb
shrl
test
cli
adc
mov
outsb
stos
sbb
int3
fcmovbe
jmp
add
adc
imul
stos
jl
adc
loope
or
stos
icebp
pop
inc
push
mov
sarl
lods
dec
xor
stos
sbb
loopne
xchg
shrb
dec
adcb
cwtl
inc
rcr
aaa
rcll
cmpsb
cmc
ja
dec
xor
push
xchg
xchg
xchg
cs
stos
pop
mov
inc
adc
jge
lods
lods
andl
ljmp
add
aas
xchg
mov
cmp
leave
add
lret
dec
jg
sbb
push
sahf
mov
sbbb
stos
stc
cld
test
pop
or
mov
imul
cmp
xchg
jmp
fstpl
jno
cltd
mov
bound
test
cmc
sbb
sub
stos
lcall
test
nop
xchg
sahf
mov
loope
push
imul
fnsave
mov
int
lods
mov
jns
pop
repnz
stos
or
cmpsl
push
xchg
mov
jb
stos
sbb
pop
mov
mov
push
inc
and
mov
insl
rolb
fucomp
fisttps
cmpsl
and
lcall
imul
mov
cwtl
pop
cmp
pusha
mov
insb
xchg
in
adc
inc
mov
mov
stos
jo
xor
push
adc
sbb
test
js
push
clc
pop
stos
sbb
fnstcw
push
mov
jo
adc
sbb
jmp
iret
test
enter
out
jmp
fwait
xchg
js
mov
mov
or
stos
mov
push
push
lds
or
xor
pushf
inc
xchg
shrl
repz
push
adc
sbb
and
repnz
jb
jg
sarl
push
stos
outsl
add
mov
stos
addb
clc
sub
cmp
jno
pop
shrb
jnp
loope
jg
xchg
test
fildl
xor
stc
stos
and
out
sub
into
stos
push
adc
pop
insl
cs
stos
or
aad
add
add
in
stos
scas
repnz
gs
mov
test
loop
and
shlb
jnp
mov
stos
fwait
push
mov
add
mov
push
insl
mov
stos
or
xchg
cmp
inc
scas
adc
lea
xchg
sub
jmp
addl
fsubp
sub
test
movsl
stos
int3
in
or
xchg
pop
sbb
repz
jmp
dec
sbb
loopne
mov
lock
mov
fsub
stos
mov
stos
outsl
cltd
adc
lods
subb
inc
sub
pop
shll
mov
shrd
lods
stos
push
js
stos
insb
jne
addr16
jge
fidivrs
mov
adc
jl
cmp
icebp
add
cltd
push
dec
fldcw
lcall
jl
iret
sahf
fsubs
imul
in
out
add
push
or
jb
cli
mov
xchg
lret
stos
jp
push
mov
adc
scas
iret
stos
popf
add
fldl
jne
mov
push
push
sbb
mov
arpl
stos
push
mov
bound
mov
stos
cs
test
in
pop
loop
mov
xor
cltd
fwait
pushf
mov
push
jae
xchg
adc
mov
xchg
sets
pop
push
cmp
ja
mov
addb
cld
jns
lock
pop
stos
sub
test
stos
sub
mov
and
inc
stos
or
les
and
test
push
mov
or
sub
out
sbb
in
jle
adcl
sub
cmpsb
mov
loopne
inc
jnp
cli
fwait
dec
dec
lods
cmp
notw
ljmp
shll
in
stos
loopne
sbb
sarl
frstor
push
push
push
xor
mov
dec
xchg
dec
sbb
int3
fsubrl
cmpsb
push
xchg
lahf
add
stos
cmp
std
and
push
stos
jne,pt
or
or
pop
insb
mov
cli
push
mov
pop
push
add
les
lods
jb
mov
pushf
popa
sub
and
xchg
or
stos
push
lea
pop
mov
mov
mov
adc
xchg
subb
hlt
pop
nop
add
adc
xchg
sbb
stos
cwtl
dec
xlat
jae
xor
stos
jo
inc
sahf
jmp
jl
cmpsl
push
in
push
pop
mov
add
dec
cld
das
sarb
inc
mov
jbe
xor
dec
out
iret
cmp
addr16
nop
mov
stos
mov
jno
das
cmp
lea
in
cmp
jle
sbbl
cmpsl
lret
leave
stos
xchg
sbb
cwtl
xor
mov
in
imul
addr16
push
test
mov
cmp
stos
jo
roll
jl
mov
fwait
iret
imul
and
xor
mov
inc
sbb
lock
loopne
mov
imul
sub
mov
pop
adcl
mov
addr16
jne
test
stos
aad
dec
ds
call
xchg
mov
in
cmp
testl
mov
xchg
fs
inc
pusha
mov
pushl
stos
inc
shl
push
cmp
stos
mov
or
cmp
loope
icebp
stos
and
stos
cli
push
jmp
sbb
adc
jno
stos
mov
popa
jl
or
stos
fists
xchg
cwtl
jmp
andl
mov
xchg
loope
lea
call
stos
aam
cmp
add
jb
stos
sub
mov
stos
arpl
add
shll
push
cli
adc
stos
sbb
shr
push
mov
mov
stos
mov
int3
xchg
stos
orl
lods
push
ss
stos
imul
roll
pop
mov
daa
in
mov
xchg
add
rorl
test
ret
pop
sub
mov
shll
scas
data16
jbe
cmp
add
jo
out
stos
add
flds
push
fwait
rorb
push
loop
lods
imull
repz
shrb
std
xchg
mov
pop
stc
fsubl
inc
mov
xor
and
mov
movsb
pop
jp
fcoml
call
sub
stc
mov
addr16
mov
xchg
stos
lods
shl
in
into
ljmp
loop
push
xor
test
dec
aaa
out
inc
stos
or
js
jo
mov
fists
push
mov
push
mov
shlb
push
stos
ds
cmc
mov
fimull
stos
icebp
test
jae
addr16
rolb
inc
and
sbb
and
dec
lds
cmpsb
pop
sub
sub
lock
dec
es
xchg
or
pop
jo
push
push
mov
int3
pop
stos
push
push
clc
stos
ret
loopne
fs
dec
stos
cmp
or
out
icebp
inc
or
sub
mov
stos
push
mov
and
stos
inc
scas
lea
lahf
rolb
push
mov
stos
xor
fistpll
ljmp
or
push
stos
repz
inc
gs
sub
and
push
mov
stos
jmp
xchg
stos
sub
add
stos
fistpl
inc
adc
movsl
jl
dec
mov
stos
pop
daa
rcll
cld
jb
push
rcr
cmp
add
stos
in
orl
stos
mov
sbb
outsl
movsl
dec
fsubs
mov
fs
xchg
loop
stos
mov
cwtl
and
jmp
test
lods
mov
sbb
daa
xchg
add
stos
divb
sbb
push
data16
stos
jnp
dec
pop
mov
mov
stos
sub
xchg
dec
sbb
and
out
and
stos
add
aaa
clc
mov
cli
cltd
dec
stos
and
mov
push
push
addr16
xchg
push
fldt
mov
mov
pop
adc
cs
mov
fcomps
jp
xor
bts
imulb
insl
lea
mov
in
xchg
int3
fistps
jmp
fimull
sbb
test
mov
ret
call
or
movl
jo
push
xchg
jmp
popf
xorl
int
push
cmp
outsl
stos
and
fsubrs
adc
add
xchg
fiaddl
mov
pushf
aaa
or
jnp
out
ret
dec
pushf
jmp
mov
sub
xlat
mov
and
pop
stos
jl
cmp
stos
mov
adc
pop
jmp
daa
mov
sub
lock
cwtl
add
mov
or
add
lcall
xchg
xchg
imul
inc
inc
push
stos
adc
jnp
jb
fwait
or
out
rdmsr
xor
cmpsl
and
or
and
andl
sub
neg
loop
movsb
or
mov
imul
mov
lock
stos
lods
mov
enter
stos
lret
push
xor
push
jp
loop
adc
jmp
aam
in
mov
loopne
movsl
mov
pop
mov
gs
cld
mov
or
cli
ljmp
pop
xchg
fwait
mov
out
fisubrs
adc
arpl
adc
repnz
stos
add
subl
imul
idivl
xchg
mov
shrl
mov
push
imul
cmpsl
and
dec
stos
lods
and
aam
stos
in
add
scas
adc
loopne
rorb
mov
stos
jle
jb
add
icebp
dec
inc
jmp
shl
loop
or
nop
subl
enter
lret
ret
xchg
int3
mov
nop
js
out
pop
add
icebp
xor
imul
sbb
push
bound
insl
movsl
outsb
sbb
jns
fiaddl
jmp
jmp
std
and
mov
stos
dec
xor
divb
jnp
popf
mov
add
inc
push
dec
dec
sub
pop
rcl
mov
popf
lea
and
je
mov
pop
mov
out
jbe
mov
iret
dec
jmp
add
xor
cmp
sar
imul
rep
xchg
mov
loop
addr16
xor
mov
lret
std
adc
adc
lods
stos
inc
push
jmp
cmp
lahf
cmp
pop
sbb
int
pop
cli
stos
xor
mov
add
insl
adcb
cld
aaa
fsubrl
xchg
mov
ss
test
icebp
aad
test
xchg
xor
repnz
out
inc
push
cli
rcl
leave
mov
jmp
mov
dec
nop
mov
adc
stos
mov
xchg
xor
stos
leave
push
fadds
repnz
stos
ficomps
push
sub
fistpl
in
out
int
push
jo
dec
cmp
dec
xlat
dec
adc
cmpsb
pop
lret
rclb
and
mov
in
stos
ljmp
int3
mov
pop
loopne
enter
lret
scas
and
dec
fldcw
inc
test
pop
xchg
and
xchg
ret
jmp
cmp
xor
out
xchg
enter
mov
fwait
cmpl
adc
stos
inc
jbe
sbb
stos
mov
in
pop
arpl
leave
pop
stos
les
xorl
mov
iret
jg
stc
test
leave
fcomps
mov
int3
mov
inc
lock
test
daa
sbb
je
or
in
cmpb
stos
inc
lea
repz
cmp
adc
in
and
mov
cmp
xor
adc
adc
inc
dec
lods
jmp
outsb
jmp
aad
mov
mov
iret
push
in
pushf
insb
mov
roll
sbb
in
stos
cwtl
dec
and
setae
sbb
adc
sub
fidivl
stos
in
addr16
pop
das
stos
out
jge
pop
imul
sbbl
xchg
das
repnz
cmp
stos
scas
mov
xchg
xchg
mov
aam
pop
or
shr
mov
js
xlat
adc
stos
fs
nop
mov
stos
ljmp
mov
push
xchg
lret
xor
lods
out
mov
stos
fnsave
bound
adc
scas
mov
stos
xchg
pop
repz
inc
pop
mov
sti
sbb
iret
and
ja
pusha
push
jge
jae
push
or
xor
lds
ret
mov
cmp
stos
lods
gs
xchg
sub
stos
pop
test
sbb
mov
std
mov
mov
sbb
stos
cmc
xor
push
daa
movsb
jb
cli
fnstcw
stos
popa
dec
in
arpl
stos
sahf
jg
scas
out
std
xor
mov
mov
mov
mov
xchg
push
stos
out
cli
and
jle
std
mov
cmpsb
sbb
incb
insl
shll
les
add
scas
inc
roll
aam
aas
in
lock
push
and
inc
iret
sbb
jbe
stos
xchg
xlat
pop
cmp
int
sub
das
mov
mov
jno
rolb
aaa
push
cmp
dec
mov
sub
enter
xor
mov
arpl
stos
pop
cmc
mov
mov
insl
incb
mov
add
rcl
sub
jae
ljmp
jp
repnz
or
lea
daa
into
mov
call
mov
xor
and
testl
jle
stos
std
sub
stos
or
test
mov
jmp
insl
shl
push
xchg
push
xchg
push
jns
pop
js
mov
enter
jecxz
push
xor
inc
sub
cmp
jmp
icebp
or
stos
fwait
clc
ss
seta
xor
mov
adc
aaa
stos
lcall
loop
jl
lods
mov
stos
push
arpl
adc
fs
jp
cmp
mov
mov
or
icebp
mov
xchg
gs
cmp
pop
mov
mov
movsb
insl
jmp
loope
fists
popf
mov
mov
stos
fldenv
movsb
notl
test
in
mov
jle
or
lahf
inc
stos
insb
jmp
in
stos
test
or
ds
fadd
push
dec
std
shrl
jbe
stos
mov
movsb
fists
jmp
aam
sti
aas
insl
jns
cmp
addr16
sub
mov
and
insl
mov
jl
pop
daa
inc
pop
imul
adc
mov
push
add
aad
stc
in
inc
or
sbb
stos
pop
add
jo
sar
sbb
push
push
stos
cmpsb
and
sbb
lret
bound
adc
cwtl
stos
add
sbb
jle
push
jmp
gs
xchg
dec
mov
test
popa
stos
cmp
mov
lock
jecxz
mov
sbb
lret
and
and
sub
lods
cli
leave
stos
outsb
cmpsl
cmp
mov
shrb
mov
mov
stc
or
push
mov
inc
sub
adcl
xchg
xchg
cmpsb
mov
js
jg
mov
mov
enter
fdivr
stos
mov
imul
xchg
shr
push
in
sub
shlb
stos
xchg
mov
push
cs
fcoms
lods
xor
and
lock
fwait
stos
frstor
dec
mov
call
push
sbb
push
or
shll
cmpl
movsb
sbb
aam
hlt
mov
push
pop
adc
daa
mov
lods
rolb
dec
cltd
inc
jge
sbb
iret
mov
push
mulps
in
add
enter
dec
mov
or
xchg
mov
rclb
aad
push
pushf
test
push
std
cltd
sbb
lods
arpl
sbb
xchg
mov
stos
sub
or
sub
mov
stos
jp
outsb
add
xor
int
xchg
sbb
and
mov
pop
adc
pop
cmp
nop
mov
stc
fs
mov
and
data16
stos
icebp
aaa
mov
stos
jnp
push
aad
divl
stos
mov
ja
mov
mov
bound
test
pop
lret
pop
test
imul
pop
sub
in
stos
lret
jb
cwtl
adc
cltd
mov
ss
lret
mov
sbb
add
repz
jo
sbb
lea
sub
imull
xor
lret
out
pop
sub
push
xchg
push
repnz
mov
call
xor
add
cmc
ljmp
adc
fs
mov
and
mov
ret
scas
jge
nop
stos
pushf
adc
sub
jo
lea
enter
cmpsl
aad
stos
cmpsb
and
mov
jbe
stos
rorl
mov
stos
jno
shlb
stos
jecxz
stos
ja
je
popa
stos
cli
aaa
out
pop
mov
mov
aas
sub
stos
cli
and
icebp
inc
stos
int3
shrl
sbb
imul
xor
je
adc
stos
imulb
addr16
push
pop
daa
pop
and
jecxz
jg
into
xchg
jp
and
mov
sbb
cmc
test
pop
ljmp
loope
lret
stos
loopne
inc
pop
push
xor
jne
imul
mov
test
imull
pop
xchg
sub
popa
scas
dec
push
push
jl
xchg
stos
outsb
ds
stc
mov
jno
inc
repz
stos
push
test
imul
cmp
inc
scas
adc
xor
cmp
xorb
stos
cmpl
mov
stos
lds
jno
stos
repnz
mov
nop
inc
dec
adc
xor
loope
sub
sbb
scas
adc
gs
pop
stos
add
cmp
push
adc
jmp
je
or
mov
pushf
mov
mov
ds
dec
stos
fdivrl
or
xchg
out
xor
rcll
pushf
nop
stos
test
repnz
or
stos
aaa
push
loop
or
sub
sbb
imul
mov
inc
movd
push
je
fs
enter
or
sub
jg
cwtl
mov
lock
adc
cmp
dec
loope
pop
mov
popf
cmp
in
sub
mov
mov
idivl
lcall
cmp
jg
xchg
or
dec
ret
xor
xchg
sub
push
mov
push
mov
xor
sbb
push
inc
adcl
xchg
test
push
negb
sti
rorb
cltd
pop
inc
in
orb
test
pushf
pop
jmp
push
imul
or
xchg
sub
pop
mov
jbe
push
stos
dec
dec
fsubrs
stos
stos
iret
dec
sub
lea
push
stos
xlat
lcall
stos
test
jnp
mov
xchg
adc
dec
dec
add
stos
aad
rcr
sahf
cwtl
push
push
or
or
shl
loop
push
push
sub
add
roll
shll
sub
mov
aas
popa
and
cmp
repz
pop
stos
jmp
fwait
out
stos
jae
jno
popa
les
xchg
or
mov
mov
mov
jnp
in
inc
dec
push
stos
pop
leave
dec
and
mov
clc
push
enter
jns
xchg
aam
cmp
stos
push
cmp
les
cmp
nop
andl
sub
ja
addr16
mov
data16
sbb
cs
in
mov
out
jno
mov
stc
test
sbb
sub
outsb
push
stos
xor
dec
add
test
mov
jmp
sbb
xor
mov
stos
fimull
pop
pop
cli
int
stos
gs
pushf
push
or
ret
stos
jmp
push
jno
lahf
adc
stos
loopne
rcr
xchg
mov
sbbb
mov
xchg
sbb
stos
iret
sub
outsb
les
in
sbb
cs
adc
and
pop
cmp
jb
into
jecxz
xor
xchg
and
arpl
imul
insb
scas
in
ja
jle
cmp
rclb
add
add
xlat
stos
repnz
jo
sti
lods
loopne
pushf
stos
cmc
jae
add
push
pop
pop
mov
cltd
sub
out
xchg
fbld
popf
pop
sub
stos
scas
xchg
mov
enter
cmp
out
dec
push
stos
icebp
and
push
mov
out
mov
lret
insb
push
pop
push
stos
arpl
or
stos
es
nop
jle
inc
sbb
daa
and
mov
lods
inc
pop
or
cmp
adc
add
dec
movsb
pop
mov
stos
bound
and
int
sub
stos
inc
mov
mov
stos
and
popa
xchg
jno
sub
stos
lods
mov
lods
lods
jl
add
inc
dec
xchg
hlt
xchg
pop
or
fisttpl
inc
cld
and
jmp
stos
mov
test
add
pop
sub
stos
cmp
mov
aad
lret
mov
fwait
popf
cmc
stos
jecxz
fadds
int
cmpsl
mov
pop
es
stos
js
cmp
stos
sbb
dec
lret
dec
out
jmp
xor
dec
xchg
inc
scas
fxch
iret
pop
stos
es
sti
jne
fsub
pop
stos
pushw
push
clc
fucom
pop
jmp
fildll
roll
mov
jbe
aaa
jo
lret
outsl
add
movsl
imul
stos
aad
jnp
jbe
sbb
sbb
push
fwait
adc
icebp
mov
movsb
enter
dec
adcb
out
sbb
push
xchg
add
xlat
push
ds
dec
sti
stos
xor
adc
stos
in
jle
sarb
leave
addr16
insb
stos
xor
adc
stos
lahf
jl
aad
mulb
stos
out
cmp
test
subl
fisubrs
or
push
scas
push
mov
fwait
icebp
insl
lock
rclb
lret
mov
in
int
mov
mov
mov
stos
ficoms
scas
in
outsb
adc
test
push
xchg
push
das
daa
push
stos
repz
mov
std
stos
push
aas
push
mov
and
pop
jge
sbb
std
mov
fsubrs
inc
stos
lahf
inc
shlb
mov
out
dec
cmc
stos
push
lahf
in
dec
sub
cmp
out
and
mov
lock
stos
adc
sbb
jno
in
sub
jmp
sbb
jo
fwait
mov
adcb
push
out
inc
mov
icebp
bound
outsb
pop
xchg
stos
mov
xlat
stos
mov
nop
repz
jae
fsubrs
lock
stos
sbb
int
ret
test
pop
stos
bound
mov
xchg
jle
inc
jmp
xlat
xchg
je
and
sbb
lods
stos
and
push
add
stos
lock
push
pcmpgtd
mov
mov
jno
aad
xor
imul
jmp
and
add
jmp
outsl
lahf
cmp
ja
fwait
js
sub
test
data16
scas
out
imul
mov
xchg
dec
stos
xchg
pushl
imul
fsubrl
dec
mov
fldt
loopne
cmp
ret
push
stos
mov
adc
int
inc
adc
mov
aaa
jmp
sub
cmp
daa
stos
add
fidivrl
mov
jne
pop
sbb
mov
jp
jmp
push
imul
adc
setnp
adc
pop
fwait
push
fdivrs
add
sub
mov
imul
repz
out
or
sbb
in
mov
or
push
sub
outsl
rcrl
test
dec
popf
mov
jns
pop
js
push
dec
gs
jno
lret
cld
xchg
pop
popf
sub
faddp
xchg
daa
add
sub
xor
inc
and
inc
scas
ja
jb
stos
rcrb
push
cmp
add
cld
rorl
addr16
sub
mov
gs
xchg
sbb
lret
jge
xlat
int3
scas
lods
xor
enter
jmp
jmp
pop
lcall
sub
xor
subl
push
mov
mov
dec
sbb
aam
je
addr16
cmc
xor
bts
mov
in
jl
dec
jp
mov
and
outsl
dec
stos
outsb
daa
mov
push
sbbb
jecxz
cmc
sti
add
jg
jae
dec
repz
in
xor
scas
loop
mov
jo
mov
aaa
jmp
mov
fsubs
rorb
scas
push
imul
out
adc
stos
fdivp
sub
jae
insb
pop
imul
inc
rorb
cmp
xchg
gs
adcl
lods
inc
fwait
and
jae
cld
hlt
call
push
stos
imul
aad
cmp
cmp
dec
stos
in
xchg
loopne
adc
test
push
mov
mov
vorps
lock
xchg
mov
stos
xlat
xchg
cltd
out
andl
ret
jmp
addr16
push
cmpsl
lcall
stos
dec
cmc
neg
mov
and
adc
and
lods
xchg
jns
call
test
in
icebp
cltd
push
ss
or
ja
adc
stos
jmp
sub
adc
sub
jp
testb
mov
int3
es
stos
push
mov
jmp
cmc
arpl
jl
xlat
aas
xchg
adc
daa
fs
popf
popf
push
cld
jmp
imul
xor
fstps
lods
jecxz
dec
idivb
mov
fsub
mov
insb
mov
imul
mov
adc
jne
sbb
or
and
in
stos
xchg
mov
sub
stos
orl
push
cmpsl
mov
int3
lea
pop
mov
mov
jo
popf
das
push
dec
in
addr16
or
sbbb
stos
push
lods
sub
mov
jbe
cmp
popa
xchg
stos
sbb
rorb
and
stos
mov
xor
mov
imull
lds
jmp
mov
inc
in
loope
movsl
imul
mov
stos
popf
mov
mov
daa
xchg
fsubp
sahf
into
xchg
int
aas
insl
inc
and
dec
mov
sbb
stos
xlat
add
lock
mov
stc
adc
das
jl
iret
xchg
and
mov
pop
mov
xchg
mov
jl
les
xchg
mov
pop
mov
cmp
orb
ja
stos
mov
xchg
data16
mov
stos
mov
fldcw
and
shrb
stos
push
or
fisubrl
sbb
addr16
fsub
inc
pop
stos
flds
shlb
scas
jmp
stos
dec
and
add
in
hlt
jge
cltd
aaa
lret
in
mov
cmpsl
cmp
scas
dec
insl
lahf
or
test
xchg
stos
jo
xchg
stos
mov
jae
fsubrl
popf
and
subl
mov
stos
mov
pop
aaa
and
aad
sub
push
test
mov
xchg
leave
adc
add
or
lahf
cmp
jl
cmp
mov
imul
shrb
inc
dec
push
cld
aam
scas
adc
mov
add
sarl
outsl
stos
es
mov
bound
stos
adc
push
ja
fldenv
stos
stos
xor
sub
push
jp
pop
jl
inc
sub
mov
xor
jmp
push
nop
shlb
inc
fwait
lret
das
jecxz
cld
mov
popf
adc
and
xchg
or
stos
or
sub
addr16
stos
xchg
fdivl
and
or
add
push
imul
inc
push
iret
xchg
cmpsb
lods
sar
xchg
pop
sbb
arpl
movsl
out
stos
push
sub
push
inc
gs
mov
dec
sub
lret
mov
aam
sub
in
imul
xchg
stos
xchg
insb
call
adc
push
sbb
into
push
rolb
lret
loopne
xchg
mov
or
xchg
push
data16
gs
test
and
rolb
shll
inc
xchg
mov
popaw
cmp
fwait
test
dec
icebp
pop
lods
jnp
sbb
lods
push
push
pop
hlt
xchg
aam
fwait
pop
mov
adc
xor
jne
incl
dec
xchg
jmp
push
push
dec
mov
cmpsl
cmp
lea
ja
pop
stos
daa
fstps
add
jae
stos
xchg
pop
mov
stos
mov
dec
dec
scas
outsl
jne
cmpsl
mov
sbb
sahf
jecxz
mov
fsubrs
push
adc
stos
pusha
shrl
loope
or
dec
inc
lret
mov
icebp
cmpsb
jmp
pushf
cltd
shlb
stos
mov
sbb
movsb
stos
jo
jmp
and
das
stos
test
adc
mov
cmc
mov
fistl
xchg
out
push
stos
pop
mov
in
jmp
hlt
cmp
divb
jle
adc
mov
push
adc
imul
sbb
repnz
mov
sub
fldt
inc
repz
or
insb
sbb
add
push
cmc
stos
cmp
add
stos
fnsave
cmpb
into
imul
mov
leave
mov
mov
mov
xchg
mov
xchg
in
jle
dec
inc
sub
mov
fwait
sbb
mov
sub
mov
or
mov
ljmp
inc
mov
lods
adc
cmp
fistpl
jmp
cmp
dec
add
lods
mov
ljmp
cmc
jae
das
sti
mov
sub
shrl
xor
mov
jnp
stos
aas
push
mov
push
jecxz
fwait
stos
add
xchg
das
imul
push
pop
je
and
sbb
cmp
add
pop
test
movsl
lock
mov
imul
adc
jge
stos
lock
adc
jbe
xor
addr16
in
stos
ja
xchg
adc
stos
rol
xchg
ret
add
dec
and
imulb
pop
inc
sbb
adc
push
adc
les
clc
or
cli
push
lods
daa
pop
jb
pusha
mov
es
mov
andb
hlt
gs
xor
sub
inc
loop
stos
shl
mov
mov
inc
out
fsubrl
jmp
xor
fsubs
cmp
int
cmp
adc
stos
cmpsl
sub
pop
sub
add
stos
mov
ret
and
lods
mov
rcrl
cmp
or
sbb
push
sub
inc
adc
cltd
repz
sub
cwtl
push
cmp
stos
and
test
addr16
lea
rorl
stos
arpl
icebp
push
pop
fisubrs
subb
loopne
in
arpl
push
arpl
mov
xchg
xchg
test
xor
dec
loop
stos
xor
movsl
daa
popf
sbb
mull
inc
out
icebp
stos
dec
rcr
fadds
rcrl
stos
mov
std
and
ret
shl
daa
xchg
push
les
loop
mov
and
out
aad
fs
stos
rcl
mov
stos
jge
lea
jmp
lret
divl
jg
jnp
das
cli
test
or
mov
ljmp
inc
sub
mov
stos
enter
or
cwtl
clc
stos
fistl
xor
imul
mov
stos
roll
xchg
lcall
pop
outsl
push
sti
dec
inc
mov
stos
jne
push
enter
lcall
insb
xchg
popa
or
xor
pop
stos
inc
loope
stc
subl
mov
sub
daa
xchg
adc
xchg
stos
xchg
lahf
mov
repz
cmpsb
xlat
jmp
es
jne
cmp
aas
rcl
cmp
dec
nop
dec
movsl
or
lods
scas
mov
inc
sub
sti
xor
lea
mov
stos
ja
mov
lock
xchg
cld
aam
adc
shl
push
jge
stos
lret
cmp
fwait
mov
test
jmp
std
sub
stos
in
mov
pop
adc
mov
sub
mov
mov
xchg
stos
xorb
les
xor
shll
jmp
pop
fs
clc
cmc
inc
xchg
dec
js
test
test
sete
leave
int3
stos
ret
lock
aam
jmp
stos
fwait
or
jb
mov
movsb
inc
nop
cmp
jp
js
and
jmp
adc
pop
push
push
lods
clc
dec
stos
jmp
mov
add
cwtl
stos
cmp
and
stos
jge
stos
ret
stos
aas
in
jg
mov
mov
mov
fisttps
cmc
adc
stos
jl
cmp
stos
ret
out
stos
mov
dec
xchg
stos
lea
sarb
push
jmp
loop
sub
sub
sub
mov
mov
ja
jg
sbb
dec
mov
mov
and
stos
mov
cltd
lds
adc
or
test
inc
stos
loop
pop
js
test
stos
arpl
mov
stos
shr
sbb
out
push
inc
jb
add
sar
xor
xorb
adc
or
cmp
mov
mov
mov
lahf
pop
iret
pop
xchg
lods
jge
gs
imul
cmp
cmp
aad
mov
insl
insb
dec
addr16
adc
xchg
addl
inc
cltd
ds
mov
mov
mov
xchg
stos
js
sti
xor
out
or
stos
mov
dec
mov
and
aaa
adc
in
aad
cs
lret
div
push
ja
push
push
js
dec
sbb
stos
lea
inc
jno
adc
mov
and
jge
jmp
int
pop
mov
mov
push
movsb
adc
lods
mov
jecxz
dec
insb
pop
in
stos
sub
les
mov
daa
and
push
sbb
push
cwtl
aam
xchg
dec
lahf
stos
adc
stos
cmp
pop
movsl
es
mov
repnz
cmpsb
mov
pop
shr
mov
cmp
test
stos
pop
das
inc
test
fldenv
cmp
and
les
cld
cmpb
push
stos
shlb
add
daa
fcomps
stc
jae
stos
icebp
mov
stos
sub
aam
mov
mov
and
sub
ret
stos
pop
xchg
pop
and
and
pop
cmc
repnz
xchg
rcrl
lret
out
xor
push
pop
aad
adc
mov
stos
push
xor
stos
mov
movsl
not
addr16
aad
mov
sub
std
sub
jae
stos
adcb
pop
scas
xchg
sbb
sbb
lods
lret
stos
cli
outsl
jno
por
ret
cmp
xchg
and
mov
dec
push
dec
push
not
mov
movsb
cmp
adc
lret
cvtps2pd
sbb
mov
mov
imulb
cltd
shrb
fists
cwtl
inc
hlt
jb
jne
shlb
ss
js
scas
insb
cld
stos
fiadds
nop
push
mov
jno
pop
movsl
pop
cmp
adc
inc
inc
shlb
in
sub
jmp
push
mov
mov
mov
gs
shll
jecxz
pop
lret
scas
cli
popf
stos
xor
push
daa
cmpsb
in
arpl
mov
loope
rcll
mov
daa
xchg
stos
fdivs
push
ds
inc
pop
std
shr
mov
dec
mov
imul
mov
jle
sbb
fwait
lcall
or
stos
cmp
mov
push
insb
add
lret
scas
xchg
jae
xchg
sbb
mov
cmp
pusha
dec
stos
sub
inc
add
sbbb
into
scas
sti
stos
ja
sub
pusha
cmp
out
insb
adc
mov
stos
loopne
jmp
stos
cmp
repz
movsb
push
int
lods
lcall
imul
jp
into
out
or
cmp
stos
pop
out
xchg
dec
ret
mov
mov
xorb
mov
les
stos
xchg
test
adc
stos
or
jp
daa
stos
inc
ret
repz
dec
pop
jg
notl
xor
dec
push
stos
xchg
cld
or
das
jg
stos
ret
adc
pop
arpl
inc
pop
stos
xchg
imul
imul
imul
mov
xchg
cwtl
mov
stos
jno
jb
mov
lret
fldl
or
imul
mov
movsl
cmp
mov
and
shlb
test
jb
repz
jl
out
cs
je
inc
xorl
cmp
jne
or
pop
dec
push
xor
shl
or
push
cmc
jmp
into
mov
sahf
jmp
stos
out
jo
mov
or
add
sbb
adc
mov
sub
jl
mov
stos
test
ret
stos
jne
ja
jae
decb
xchg
inc
adc
inc
xlat
lret
push
mov
stos
fists
test
insb
push
fsubrl
xchg
and
mov
pop
sbb
cmpb
mov
jge
dec
lcall
fidivl
stos
mov
addl
stos
outsb
push
insb
movsl
sub
cmp
stos
cmpsb
mov
or
enter
xchg
xchg
stos
mov
push
rcl
das
xchg
xor
in
movsb
stos
mov
sub
fsubl
stos
jb
inc
jl
inc
xchg
les
xor
push
xchg
insl
jle
jge
aad
popa
stos
jbe
or
stos
cmpsl
std
lahf
lea
xchg
enter
sub
and
addl
stos
jle
movb
fcoml
mov
ds
push
shll
in
stc
fs
push
jecxz
adc
dec
add
ljmp
jb
cli
mov
jge
leave
and
and
iret
lods
outsl
push
fidivrs
stc
xchg
inc
clc
fpatan
imul
js
mov
bound
stos
lock
popf
or
insl
push
xlat
repnz
insb
arpl
stos
jno
mov
xchg
sub
insl
push
aad
mov
in
jnp
test
ror
mov
jno
ret
adc
nop
jge
aas
addr16
test
adc
push
jne
xchg
sbb
ret
in
stos
cltd
and
mov
mov
cs
xor
fimull
stos
lods
imul
nopl
jbe
mov
sub
mov
stc
pop
jo
shrb
cltd
stos
bnd
push
fdivr
inc
mov
mov
shr
sbb
hlt
nop
sbb
adc
xor
push
popa
cmp
xor
sbb
cwtl
aad
mov
cmp
sbb
pop
xlat
mov
jge
outsb
add
stos
inc
into
cmp
shrb
xchg
mov
jbe
imul
dec
and
push
cmc
sub
stos
add
jge
mov
dec
mov
or
inc
cld
ret
stos
cmp
and
and
insb
mov
outsl
dec
dec
stc
lahf
imul
stos
aad
push
xor
cmp
lcall
pop
or
imul
cltd
inc
stos
outsb
ds
mov
mov
mov
push
mov
jnp
fisubrl
icebp
dec
out
push
stos
mov
or
jl
dec
stos
jo
cwtl
je
xor
stos
push
cmpsl
sub
stos
ljmp
pop
push
inc
ret
cli
sub
cltd
enter
dec
shlb
loop
dec
js
addr16
insb
test
pop
imul
cmp
dec
inc
mov
repnz
leave
push
popa
shll
dec
pushf
mov
xchg
ljmp
and
pop
mov
jmp
incl
fdivrs
std
mov
push
stos
mov
sub
pop
dec
fidivl
mov
cs
das
mov
pop
stos
mov
pushf
dec
xchg
pop
movsl
push
push
fmuls
leave
mov
stos
or
push
cld
cmp
mov
jle
push
mov
scas
add
stos
pop
sub
scas
jl
adc
xlat
xchg
scas
mov
add
mov
inc
xor
lock
shrl
stos
cmc
xor
pop
out
mov
or
push
hlt
xchg
mov
pop
jb
loop
mov
inc
stos
fst
movsl
xchg
inc
daa
mov
stos
ss
jecxz
inc
lods
cld
stos
fidivrl
repnz
inc
lods
sbb
adc
sub
fdivs
test
or
popa
mov
xor
jo
xor
insl
mov
stos
scas
xor
push
mov
out
cmp
fistpl
dec
pop
stos
in
ror
adc
movsl
rep
xchg
cltd
clc
jb
pusha
jge
addr16
mov
fld
mov
mov
jg
enter
and
js
stos
xchg
popa
cld
mov
jmp
jnp
outsl
add
enter
mov
cmpsb
movsb
insl
pop
xlat
stos
jle
inc
and
into
rcrl
cmp
pop
mov
repnz
pop
sub
push
xor
push
scas
addr16
cli
inc
stos
jo
cld
dec
xchg
cmp
scas
stc
add
xchg
or
mov
add
insb
mov
add
jae
stos
xor
sti
stos
mov
lret
stos
adc
mov
mov
inc
xchg
scas
xchg
mov
sub
ret
push
imul
or
fcoml
arpl
push
stos
sbb
jb
xor
jg
stos
fsts
inc
pop
stos
or
add
sbb
add
push
mov
lahf
shrl
addr16
pushw
xor
cmp
cwtl
inc
cld
dec
adc
mov
xor
jp
or
cld
iret
sahf
inc
adcl
out
mov
incb
mov
ret
or
loopne
sub
in
cmp
sahf
cmc
sbb
adc
inc
xor
stos
lcall
xor
mov
add
jmp
jns
xor
sbb
jnp
scas
mov
loope
stos
loopne
or
stos
fmulp
call
xor
adc
sub
cmp
shrb
pop
rol
stos
jne
fsubs
xor
lret
shrb
cmp
rcll
add
out
mov
bound
adc
cmp
push
out
add
cmpsb
jle
inc
movsb
or
ficompl
daa
xchg
xor
aas
push
mov
add
mov
jg
imul
lret
mov
xor
enter
clc
daa
ret
loopne
jae
test
mov
mov
out
scas
shrb
sub
xchg
push
inc
xor
stos
and
gs
xchg
adc
push
add
ret
push
in
mov
mov
leave
out
jp
movsl
mov
fsubrl
add
je
scas
dec
cmpsl
in
pop
mov
outsl
sbb
ljmp
xchg
imul
loopne
mov
jge
push
mov
cmpsb
hlt
sti
dec
orl
int3
mov
and
inc
adc
clc
jl
adc
comiss
iret
add
stos
xor
les
mov
stos
sub
inc
clc
sbb
imul
mov
add
stos
or
push
cs
lret
jae
mov
pop
pop
mov
mov
fisttps
push
imul
jl
mov
aaa
xor
cli
or
add
dec
mov
dec
lahf
pop
gs
cmpsl
add
mov
aam
sbb
xor
xchg
loope
movsl
stos
fimull
sbb
iret
push
push
stos
scas
xor
mov
push
add
jae
inc
mov
fsub
stos
pop
nop
pop
mov
rorl
lock
jb
xchg
jge
jmp
push
pop
stc
in
es
sbb
shl
arpl
aas
repz
jbe
stos
sub
mov
cmpsb
adc
mov
fidivs
nop
hlt
es
out
xlat
enter
sub
fcompl
dec
outsl
lds
insb
xchg
sti
rcrb
lock
fucomi
loope
loop
in
cmc
dec
gs
sbb
adc
leave
mov
stos
xchg
test
mov
add
in
jae
inc
mov
xor
ss
test
jecxz
jne
xchg
and
stos
out
addr16
bound
mov
sbb
inc
xchg
stos
in
sub
push
stos
or
int3
jmp
sbb
mov
mov
jmp
push
jnp
sub
xor
push
lods
or
xchg
cld
xchg
mov
mov
in
cli
std
lods
test
and
mov
idiv
xchg
jp
adc
jnp
outsb
ja
jmp
fs
mov
stos
iret
inc
scas
push
mov
repnz
mov
or
pop
lea
adc
jecxz
lds
push
sbb
in
jmp
enter
sub
xchg
pop
sub
pop
xchg
das
mov
imul
push
repnz
cs
imull
int3
sarl
loop
or
lret
inc
dec
add
testb
and
xchg
push
js
mov
lret
imul
jge
mov
push
shufps
mov
xchg
xchg
test
mov
int
es
xchg
fwait
inc
or
jo
out
push
push
xchg
cmpsb
into
mov
stos
xor
std
fwait
ja
mov
outsb
stos
out
gs
inc
fs
and
pop
add
adc
addr16
mov
xor
xchg
jl
push
push
inc
adc
sub
call
or
ret
sub
push
decl
dec
add
xchg
and
stos
repnz
inc
inc
in
push
jae
test
jnp
xchg
ljmp
mov
pop
stos
pop
push
xchg
stos
jg
sub
stos
or
loopne
push
jne
dec
sbb
punpcklbw
stos
or
fwait
jl
mov
subl
popaw
daa
sti
stos
pminub
test
push
xlat
dec
fildll
arpl
lahf
imull
out
and
jmp
xor
mov
push
jbe
gs
stos
pop
mov
and
stos
pop
push
inc
push
adc
xorl
out
stos
cmc
add
subl
push
push
stos
repz
out
cwtl
lcall
lret
int
stos
inc
pop
lahf
sbb
mov
jns
daa
call
mov
lods
es
jmp
push
mov
jecxz
stos
pop
fs
shlb
les
int3
jbe
add
mov
mov
stos
shlb
mov
test
push
inc
imul
xor
and
and
jne
stos
dec
push
mov
mov
sbb
jnp
jae
insb
xchg
dec
push
daa
dec
hlt
shll
pusha
jmp
lods
enter
lahf
popa
dec
loopne
xchg
inc
cmp
es
imul
ffree
stos
pop
mov
stos
ret
mov
push
stos
lret
jno
lcall
xor
pop
xor
test
stos
pop
outsb
jecxz
sarl
push
lods
sbb
fs
out
sti
or
std
mov
rcrb
jl
insb
add
jmp
sub
mov
ja
insb
fcoml
mov
mov
lods
push
cmp
jecxz
jns
xor
ror
stos
imul
lahf
fildll
test
cs
pop
stos
or
xchg
push
gs
das
stos
push
rorb
cmp
jmp
scas
stos
push
push
jnp
sub
mov
add
lods
add
in
mov
jnp
stos
adc
add
stos
testl
inc
push
stos
mov
adc
stos
inc
addr16
aaa
icebp
cli
xchg
stos
test
hlt
and
shrb
and
dec
stos
or
jg
push
xchg
subb
fcoml
stos
and
inc
lcall
mov
cltd
pop
ds
inc
shr
cmpsl
cmp
in
add
iret
imul
dec
stos
in
pop
lcall
or
jmp
push
sarb
mov
leave
xor
pop
or
mov
outsb
popa
jno
adc
repnz
in
stos
fsubrs
mov
stos
sub
push
outsb
imul
pushf
pusha
cmp
fadds
pop
stos
imul
xchg
jmp
dec
arpl
pop
push
or
loopne
test
in
or
adc
jmp
add
cld
inc
xor
dec
nop
movsb
cmp
mov
jle
push
and
scas
sub
roll
insl
fcomps
jbe
push
jae
dec
rep
imul
mov
lods
xor
mov
shl
shlb
hlt
xchg
adc
stos
jns
adc
cltd
frstor
jmp
xor
or
imul
dec
push
mov
sub
dec
lret
inc
push
cmc
lea
into
xchg
cmp
lahf
mov
mov
or
in
lcall
mov
mov
fisubrl
popf
cmpl
ret
sti
mov
cmp
mov
xor
jp
stos
xchg
push
addr16
adcl
mov
mov
hlt
shr
pop
stos
pop
fwait
aaa
mov
stos
and
das
mov
mov
test
add
mov
inc
stos
daa
movsb
mov
mov
dec
stos
fs
cmp
mov
and
stos
cmp
popa
inc
jb
mov
jge
mov
daa
mov
jmp
pop
icebp
xchg
leave
lret
jmp
mov
jmp
mov
not
cmc
mov
sub
push
push
lds
xor
test
dec
push
scas
push
mov
lods
push
pop
lods
shlb
push
jne
lret
out
outsl
leave
xor
sbbl
nop
into
stos
arpl
sub
addr16
sbb
fwait
loope
std
test
imul
mov
imul
arpl
xor
scas
lret
mov
push
sbb
fsts
mov
push
sub
xchg
aam
xchg
loope
mov
xchg
mov
pushf
jle
enter
jl
inc
imulb
and
inc
leave
stos
pop
jo
jno
mov
ljmp
sub
repnz
xchg
lods
sbbb
mov
outsl
les
inc
mov
movsl
inc
jbe
cs
emms
stos
fists
lret
daa
dec
nop
and
stos
movsb
addr16
add
jne
in
or
mov
jecxz
fwait
orl
hlt
ljmp
xor
mov
repnz
imul
or
imull
xchg
pop
stos
sbbb
mov
mov
jo
and
cli
ja
inc
dec
test
int3
cmp
fisttps
leave
shr
jno
stos
mov
cmp
jle
mov
cmpsl
cwtl
rorb
xchg
scas
cmp
into
ds
lea
pop
fnstenv
rol
cltd
and
or
mov
adc
stos
in
push
rclb
mov
xchg
xchg
cwtl
nop
jno
scas
mov
inc
call
adc
stos
xchg
popa
sub
pop
dec
imul
jno
mov
stos
iret
fcompl
popa
stos
cs
and
or
inc
andl
pop
stos
fsubrs
faddl
movsb
inc
mov
xor
xchg
xchg
pushf
lcall
sub
in
jmp
push
sub
inc
push
mov
shr
push
mov
rcll
outsl
lcall
mov
stos
xor
pop
mov
sbb
test
stos
or
mov
lcall
icebp
mov
push
cmp
inc
mov
xor
lods
adc
in
cmp
push
mov
outsb
das
fcompl
cmpsb
stos
scas
push
inc
sbb
daa
in
pushf
stos
xchg
std
xor
inc
sub
mov
fdivs
scas
jle
push
jecxz
mov
pop
push
xchg
pop
sub
stc
rcll
stos
mov
lret
ja
jns
sbb
and
mov
adc
inc
shlb
add
lods
dec
sub
mov
fnsave
adc
push
lds
jbe
test
jp
pop
stos
popa
and
push
int3
xlat
xor
mov
clc
lahf
fsubr
stc
sub
addr16
stos
arpl
cs
inc
mov
sahf
hlt
dec
std
mov
stos
xor
pusha
mov
stos
pop
cmc
cmpsb
jbe
cmovbe
stos
jp
les
clc
test
lahf
bound
add
cmp
cli
insb
cld
add
and
mov
sub
jmp
insb
sbb
mov
adc
mov
push
add
and
cld
pop
int
fidivrl
es
sahf
or
lea
rcrb
cmpsb
call
mov
sarl
in
sbb
push
in
sub
ret
pop
sub
andl
jns
xchg
xchg
mov
push
scas
adc
xor
fldenv
xor
fistpll
and
scas
cmp
mov
test
pop
bound
push
enter
cmc
mov
daa
lds
in
pop
pop
xchg
push
add
or
addr16
and
addr16
mov
push
orb
xchg
sti
lock
jo
lods
mov
sub
fisubl
push
mov
xchg
stos
outsb
push
xchg
icebp
stos
mov
inc
hlt
test
leave
adc
ss
adc
mov
pop
jl
sahf
xchg
pop
adc
leave
mov
xorl
inc
aaa
stos
cld
movsl
jae
fcmovbe
stos
aad
sbb
cmpsl
pushf
push
xchg
sub
add
jo
repz
push
jle
lods
cwtl
push
or
xchg
add
stos
mov
aad
popf
stos
in
cmpsl
mov
stos
les
hlt
mov
popa
lcall
push
cmpl
addr16
mov
push
bound
stos
add
lret
lods
pop
jae
imulb
mov
xor
mov
and
push
fsubrp
sarl
and
push
repz
mov
lods
fs
mov
sarb
test
sub
jg
out
xchg
jecxz
outsb
in
add
aam
push
mov
xor
cmpsl
sub
mov
fsubs
push
xchg
stos
or
into
sbb
ljmp
scas
das
xor
or
js
out
xchg
mov
dec
roll
lret
jmp
mov
push
xor
stos
jnp
outsb
mov
add
push
lret
arpl
addl
stos
movsb
jge
sub
cld
es
lret
sbb
mov
divb
outsb
sbb
xor
ljmp
xlat
mov
les
imulb
and
test
clc
mov
daa
stos
movsb
lahf
or
jp
fisubl
pop
test
dec
data16
stos
and
popf
sbb
loope
adc
mov
adc
dec
push
xchg
loopne
adc
loop
cld
push
pop
inc
pusha
push
addr16
dec
push
mov
mov
test
sbb
stos
xor
rcll
les
daa
dec
aad
imul
jl
jnp
leave
adc
pop
and
in
stc
and
cmp
outsl
movsb
mov
lds
mov
stos
leave
test
pop
cwtl
roll
out
ljmp
push
popa
mov
subb
add
dec
icebp
repz
test
adc
popa
push
mov
xchg
aam
sbb
icebp
jg
dec
mov
jp
ret
mov
lahf
out
push
daa
push
je
pushf
jae
fs
cmc
or
stos
mov
fwait
cmp
imul
jne
cmpsl
mov
insl
fdivrs
push
xchg
inc
mov
mov
int
stos
push
jmp
pop
icebp
stos
test
add
mov
movsl
add
jmp
out
xchg
jle
sub
xlat
sbb
addr16
add
sbb
js
imul
dec
push
fistpl
mov
sbb
dec
femms
sub
cwtl
stos
add
mov
out
stos
iret
cld
jp
mov
jmp
mov
mov
fwait
lods
jne
insl
mov
outsl
dec
mov
ret
icebp
lods
hlt
stos
pop
xor
push
lahf
pushf
jno
adc
mov
mov
mov
cld
lcall
add
int3
scas
sub
mov
adc
lds
stos
sahf
cmp
fcomip
dec
stos
rolb
cmpsl
xlat
stos
mov
push
lds
mov
and
cmp
jge
xchg
xor
or
je
push
repz
dec
frstor
into
ret
ret
jbe
imul
scas
paddq
mov
adc
push
and
stos
lcall
sbb
repnz
jl
sahf
stc
ja
scas
push
ret
jmp
in
xchg
jmp
sbb
add
stos
dec
scas
fstpt
xchg
stos
or
mov
arpl
sbb
pop
test
sub
xchg
and
cmpsl
subl
pop
data16
jge
ret
or
stos
aam
or
lods
daa
push
pop
stc
push
jb
mov
stos
pop
dec
add
scas
and
mov
ss
mov
xchg
jne
subb
popf
shll
push
add
dec
sub
inc
stos
fnstsw
xchg
inc
jmp
aam
mov
scas
mov
stos
jns
jae
mov
xchg
mov
fldt
sub
mov
sti
sbb
pop
jecxz
int3
out
daa
push
pop
mov
sbb
xlat
rorl
ret
mov
out
scas
jge
pop
fidivrs
sahf
add
mov
push
mov
leave
sbb
cltd
mov
mov
dec
imul
in
and
mov
sub
sbb
lahf
mov
jmp
fmull
cwtl
adc
fisttps
lock
aas
arpl
out
mov
hlt
stos
mov
fisubrl
cmp
stos
shlb
int
sbb
xchg
xorb
inc
adc
jns
add
pop
xchg
ret
adc
xchg
cmpsl
ljmp
stos
xchg
xor
lods
aad
push
stos
ret
sarl
stc
pop
inc
popf
adc
push
mov
ret
or
mov
fwait
cmpsl
rolb
shlb
stos
das
arpl
push
push
mov
sub
xchg
dec
divps
sub
stos
incb
lods
or
xchg
fldt
aam
stos
jb
out
inc
fnstcw
and
stos
andb
xor
pusha
mov
fwait
sbb
mov
sbb
movl
or
cmp
mov
test
xchg
ss
sbb
xchg
adcl
pop
stos
inc
hlt
jne
mov
xor
popa
xchg
testb
test
jmp
stos
into
mov
fistpll
ds
je
mov
pop
dec
cltd
in
stos
into
add
sub
stos
pushf
jmp
push
or
jnp
push
insl
or
call
or
ds
into
mov
mov
orl
xor
add
stos
mov
je
jle
test
sub
xchg
xchg
pop
stos
xor
push
leave
mov
dec
popf
fwait
cmp
lods
out
stos
out
bound
out
stos
sub
outsl
dec
jae
popf
stos
jbe
mov
mov
add
add
enter
andl
shlb
ss
mov
mov
sahf
aas
mov
pop
or
push
sbb
call
xor
push
cwtl
stos
mov
iret
mov
popf
adc
mov
pop
sub
cmp
aas
daa
stc
shrb
inc
mov
shll
jo
jnp
imul
shl
stos
mov
mov
mov
adc
addr16
jo
stos
inc
outsl
repz
stos
rcll
fsubrl
out
stos
sbb
popf
aas
adc
inc
stos
cmp
pop
jb
subb
cmp
mov
cmp
dec
cwtl
int
daa
xchg
insl
bound
stos
fists
pop
data16
pushf
loopne
add
dec
mov
mov
ds
jmp
das
xchg
imulb
adc
cld
mov
sub
or
mov
xchg
dec
stos
mov
mov
nop
push
cmc
cli
lcall
stos
loopne
xchg
cmp
sub
adc
cmpsb
jae
bound
ja
imul
add
xor
fs
cmp
xchg
sub
mov
pop
stos
and
clc
sbb
jp
cld
mov
mov
subl
shrb
aaa
cld
or
stos
push
popf
sti
in
mov
enter
pop
xchg
sub
ret
jmp
mov
sbb
icebp
mov
stos
pop
mov
pop
jmp
stos
mov
rorb
stos
and
xlat
cmc
and
hlt
imul
adc
xchg
jecxz
dec
mov
std
fidivs
ret
jmp
sub
mov
jecxz
and
inc
je
or
mov
test
xchg
adc
jo
sub
ret
xor
inc
retw
xchg
fildll
ss
lret
sbb
rorb
lea
push
sub
mov
stos
push
sub
loope
cmp
cmp
mov
gs
es
mov
xchg
lock
xlat
pop
dec
loop
stos
adc
out
stos
call
sub
cmpsb
mov
test
mov
lds
stos
mov
pop
leave
jp
movaps
xchg
aad
push
dec
mov
cwtl
int
and
sub
inc
xchg
push
movsb
or
adc
inc
icebp
int3
push
jmp
movsb
lock
sub
push
stos
popa
cmp
stc
mov
xchg
daa
mov
xchg
add
xor
jns
mov
pop
xor
push
sti
or
mov
jns
dec
stos
into
sub
and
or
inc
fistpl
insb
adc
mov
fldl
push
mov
stos
scas
test
shlb
jmp
les
lods
and
jne
adc
stos
stc
inc
imul
mov
adc
lahf
lds
mov
mov
jmp
cmp
repnz
push
mov
cmp
mov
out
test
cmp
stos
test
call
int
stos
pop
das
inc
inc
in
imul
pop
inc
fwait
scas
pop
scas
push
push
lea
xchg
gs
sti
in
into
or
mov
loopne
sbb
stc
jl
ljmp
xchg
cltd
mov
stos
add
fidivrs
stos
xchg
ret
es
loopne
jno
jle
aam
popa
int
and
mov
mov
push
lret
and
sti
rorl
push
stos
or
repnz
sub
stos
and
jmp
adc
les
mov
stos
lock
sbb
inc
arpl
mov
pop
int3
lds
stos
es
outsl
cld
addl
ficompl
fxch
out
cmpsl
pusha
cs
mov
mov
sti
test
cltd
jmp
inc
cmpsl
sub
jge
lods
scas
or
imul
lods
das
stos
movsb
test
dec
mov
in
inc
pop
jp
fwait
mov
addr16
loop
aad
hlt
cltd
mov
stos
push
push
fildll
mov
push
mov
jnp
mov
stos
hlt
pusha
pop
sbb
repnz
cs
lods
in
test
mov
jb
dec
mov
mov
stos
faddl
and
jge
stos
ret
xor
add
cmp
negb
pushf
xor
stos
pop
pop
cld
dec
clc
ljmp
or
scas
push
xchg
ljmp
jns
inc
jne
rcll
aam
stos
std
jmp
cld
xor
testl
daa
sub
mov
mov
subb
mov
in
cmp
ret
mov
stos
add
mov
ss
mov
sbbb
clc
daa
insb
cli
jle
stos
jb
in
mov
ret
stos
jp
sbb
nop
sti
stos
mov
in
add
or
sub
and
jnp
ss
fsubrp
push
in
fmull
lret
cmc
js
and
lods
inc
dec
push
pop
adc
into
cmc
test
jmp
ret
out
fstpl
push
out
cmpsl
mov
mov
cmp
lea
dec
push
dec
mov
adc
rcrb
pop
fs
daa
push
lds
xor
xchg
sbbl
adc
jmp
dec
gs
stos
inc
xor
imul
add
dec
sbb
adc
inc
dec
mov
repz
and
ljmp
sahf
cmp
mov
mov
rclb
in
adc
add
inc
scas
add
iret
nopl
rorl
jg
cmp
stos
sub
xor
stos
sti
xchg
jnp
ds
add
ret
mov
pop
lret
stos
lea
lahf
das
fistpll
dec
push
jmp
and
and
cmp
stos
xlat
sub
in
mov
and
mov
push
sbb
xchg
ficomps
in
icebp
scas
nop
jmp
adcb
xorl
adc
das
stos
fwait
pop
fsts
stos
push
out
cmpsl
out
and
clc
jmp
dec
repz
filds
scas
sub
cmpsb
in
and
scas
pop
push
lods
scas
stc
mov
enter
in
in
stos
popf
xchg
dec
inc
xlat
stos
mov
fists
stos
jae
outsl
mov
fisubrs
and
xor
mov
call
arpl
mov
lret
add
pop
cmp
sub
mov
sub
gs
pop
stos
or
mov
stos
sti
adc
add
jbe
das
fldl
lcall
leave
dec
hlt
fcoml
push
fadds
loope
stos
jno
push
daa
or
dec
pop
mov
pop
lea
cs
mov
loope
xchg
mov
lahf
inc
sub
mov
push
sbb
cli
xor
mov
push
leave
xor
push
stos
jle
pop
pop
inc
mov
inc
mov
dec
lods
xchg
stos
or
xchg
jbe
jmp
mov
rclb
sbb
inc
subl
cli
mov
push
stos
jns
ror
sub
inc
mov
xchg
mov
dec
adc
mov
fbld
xchg
in
jno
shl
sub
ficompl
cli
and
stos
aas
jl
pop
mov
test
insl
movsb
xchg
stos
pop
clc
sbb
shll
in
and
stos
pop
stc
mov
pop
jmp
outsb
aam
jne
push
fwait
iret
jle
insb
popf
add
mov
je
mov
adc
cpuid
push
stos
adc
hlt
push
shrl
or
loope
pop
jo
xchg
lahf
mov
sub
adc
test
stos
add
jbe
cmp
jnp
push
std
iret
mov
shr
stos
jae
mov
sub
imul
adc
jo
mov
test
jmp
outsl
scas
and
imul
cmpsl
stos
pop
into
xchg
stos
in
sub
movsb
sbb
pusha
xchg
mov
inc
push
test
shll
in
push
xchg
mov
push
fists
shll
mov
cmc
ja
stos
mov
inc
mov
xor
ja
jae
popf
push
test
cs
cmp
out
pop
mov
aaa
sub
lcall
pop
xor
int
aas
stos
das
mov
pusha
or
dec
popf
fidivrl
stos
xchg
fisubs
add
pop
cltd
daa
add
popf
imul
insl
pop
lcall
dec
stos
dec
call
adc
stos
adc
lret
add
sub
sbb
popf
ret
cmp
imul
out
sub
xlat
js
ds
cmpsl
add
sub
lcall
hlt
jmp
stos
xor
jp
pop
cmp
stos
ficomps
test
repnz
je
push
jbe
iret
stos
ljmp
rcr
mov
xchg
pop
fidivrs
push
dec
mov
sbb
adc
mov
sbb
cmpsl
jno
adc
jo
push
stos
imul
pop
cmp
and
mov
outsb
sbb
aas
adc
arpl
fsubl
xchg
ds
ret
lea
mov
stos
push
aad
sub
and
inc
push
cmp
jmp
lods
not
jne
mov
add
test
xor
hlt
stos
mov
js
cltd
xchg
fildll
xchg
aam
testb
jg
outsb
data16
ret
cmp
jmp
sbb
jge
push
mov
add
loop
gs
or
cmp
stos
xchg
xchg
xchg
xchg
mov
ror
push
inc
fdivrs
or
or
enter
fdivrl
cmp
shlb
in
or
aad
xlat
rcrb
jmp
mov
aas
scas
pop
scas
or
stos
addr16
jnp
cmp
push
stos
adc
sahf
xorb
stos
xchg
inc
rclb
push
repz
stos
sub
jg
ret
dec
stos
daa
push
mov
enter
dec
mov
mov
mov
fidivrs
mov
out
das
lock
push
xor
cmpsl
test
adc
cld
pop
les
adc
js
xchg
pusha
stos
leave
pop
popa
mov
stos
lret
push
pop
shrb
testb
adc
popf
push
xor
xchg
stos
sub
test
and
jmp
cld
push
fs
jnp
sub
lods
or
in
jle
loope
jnp
xchg
pop
loopne
or
into
mov
std
xlat
sub
mov
shrl
arpl
push
cmp
xchg
cmp
sarb
lods
sub
jp
or
inc
xchg
xchg
stos
sub
xor
repz
stc
or
sbbl
insb
inc
and
mov
cld
push
bound
dec
jl
sub
push
neg
adc
cmpsl
out
es
cld
fistpll
or
xchg
incb
popa
mov
ss
mov
dec
pop
cmpl
fptan
outsl
insb
popa
add
stos
movsb
inc
mov
push
fdivrs
rorl
inc
popf
in
mov
mov
cld
flds
dec
loop
push
and
pop
xchg
inc
push
mov
mov
insb
or
stos
aad
cmpsb
cmp
push
mov
jge
mov
stos
mov
xchg
or
xchg
sub
sbb
ret
inc
imul
sbb
mov
les
adc
adcb
mov
jne
dec
dec
or
test
imulb
stos
xchg
mov
rclb
stos
popf
adc
jge
int
sub
push
jmp
xor
and
scas
add
stos
adc
dec
inc
popa
jns
stos
xchg
or
xchg
stos
pop
mov
lods
stos
std
ds
adc
stos
orb
int
and
nop
popf
mov
xor
or
add
xor
arpl
sbb
stos
rcrb
add
push
pop
out
sbb
call
test
mov
sub
in
les
push
stos
icebp
mov
addl
and
push
push
sub
stos
scas
roll
shrb
mov
out
jmp
movsb
xchg
loop
lea
dec
test
lcall
stos
adc
and
enter
mov
push
out
repnz
fistps
cli
std
imul
inc
lea
push
xor
xlat
jmp
sahf
test
lcall
mull
or
and
bound
cmp
stos
les
daa
sub
fwait
push
stos
jg
lcall
mov
mov
fldlg2
or
mov
jecxz
lock
daa
in
dec
sub
xor
jle
xchg
stos
lret
dec
popa
pop
stos
jns
push
pop
pop
inc
jg
and
js
dec
loopne
stc
cmc
inc
stos
imul
jmp
stos
stc
daa
mov
or
fistl
fwait
mov
push
fwait
add
aad
fisttpll
nop
adc
push
test
cmpl
dec
inc
stos
mov
loop
xor
lret
xchg
cltd
outsb
out
cmp
stos
dec
cmp
push
sti
jge
std
mov
or
stos
xor
dec
push
dec
pop
out
inc
arpl
into
js
sbb
stos
or
ljmp
xlat
push
mov
fdivl
lcall
push
mov
aaa
les
mov
mov
mov
mov
xchg
scas
out
mov
lret
mov
push
aam
in
mov
push
negb
mov
addr16
mov
stos
xchg
cmpsb
mov
lahf
jne
shrl
inc
ss
stos
sub
jge
in
jb
stos
mov
mov
push
stos
movsb
aaa
sbb
mov
mov
cs
inc
mov
fcmovnbe
test
jg
les
stos
movsb
sahf
cmp
mov
mov
daa
scas
push
shrl
mov
cmp
xchg
fisubrs
and
push
mov
leave
xchg
loopne
pop
fsubs
mov
in
out
repnz
cmp
stos
aad
or
shl
push
pop
dec
or
repnz
fsubrl
sahf
mov
iret
stos
out
jne
or
cmp
xor
xor
mov
mov
pop
ret
mov
imulb
adcb
fdivs
stos
scas
and
stos
movsb
mov
pop
lret
lret
and
xor
out
mov
les
cmpb
mov
clc
js
sub
stos
fmuls
popa
mov
stos
and
jmp
or
jmp
jp
cmc
iret
fbld
aad
shll
into
stos
out
jne
mov
dec
or
ficomps
in
stos
loop
mov
push
jmp
movsl
test
add
mov
out
inc
fsubrs
js
jg,pn
xchg
roll
icebp
sub
push
notl
lahf
add
js
mov
adc
jbe
add
aad
repz
xchg
rcr
stos
inc
sbb
mov
repnz
xor
push
mov
cwtl
fldenv
inc
stos
push
sarl
ret
dec
jmp
mov
or
fs
add
xchg
or
mov
imul
xchg
jp
clc
fsubs
sub
mov
push
arpl
jmp
stos
xchg
loopne
jg
xchg
mov
sub
in
pop
lcall
mov
add
in
jae
mov
shl
shrl
jbe
das
xor
dec
sub
mov
pop
push
mov
pop
dec
repz
mov
mov
stos
jnp
add
lret
stos
push
loope
pop
xlat
dec
ljmp
mov
pop
jg
repz
push
mov
push
into
scas
stos
es
dec
add
out
mov
pop
fldenv
lret
outsl
dec
pop
stos
push
jp
cli
in
sti
inc
lret
fwait
std
lods
push
cltd
ret
aad
stos
push
loopne
aam
insl
dec
daa
stos
cwtl
dec
and
xor
in
sbb
adc
imul
in
shrb
pop
mov
add
je
fldt
leave
or
in
add
mov
pusha
mov
sbb
mul
push
pop
clc
dec
mov
por
fstl
das
stos
aas
add
pop
and
jp
stos
je
sbb
mov
lcall
sub
pop
dec
pop
stos
and
sbb
aas
pop
mov
sahf
inc
pop
xchg
out
mov
aad
xor
pop
mov
xchg
cltd
popf
add
xchg
stos
pop
fcoms
mov
in
add
stos
loop
pop
jecxz
sbb
jo
add
pusha
sarl
decb
adc
loope
xchg
mov
push
pop
add
mov
imul
fs
mov
sub
or
or
cmp
jbe
test
adc
inc
lods
xchg
or
imul
stos
or
cmp
pusha
inc
cmpsl
sbb
insb
mov
lods
scas
movsb
imul
scas
sti
dec
cmp
arpl
lds
and
push
xchg
shrb
inc
mov
dec
iret
imul
mov
lods
adc
pop
int3
insb
pop
stos
jge
mov
hlt
adc
stos
mov
sti
jne
stos
xchg
push
or
subb
stos
jae
jno
or
mov
adc
iret
ds
cmp
es
or
xchg
data16
stos
sbb
outsl
add
push
inc
push
push
cmp
adc
jnp
adc
ficompl
fwait
stos
xorb
lock
test
ljmp
jp
vandpd
les
sbb
push
cmpsl
movsl
pop
pop
std
dec
mov
dec
xor
shr
subl
cltd
add
jns
data16
mov
cmp
cltd
shlb
push
fistl
xchg
hlt
sub
dec
mov
pop
pop
aas
fsubr
lea
inc
shl
lahf
sbb
mov
dec
fstpl
clc
test
insb
shrb
es
dec
scas
pusha
push
push
jo
ficoml
in
or
xchg
dec
stos
pushl
mov
loope
daa
inc
nop
out
test
sbb
dec
cmp
push
insb
pushf
or
lahf
daa
out
mov
push
stos
sub
inc
mov
inc
add
pop
dec
stos
push
and
fs
pop
insb
adc
mov
out
pop
mov
adcl
mov
xor
cltd
jnp
sub
pusha
es
dec
shrl
pop
jle
xchg
cli
mov
stos
ficomps
pop
stos
sbb
movsl
sbb
stos
dec
sub
sub
fldcw
fistl
xor
nop
std
mov
stos
loopne
xchg
test
test
arpl
jb
dec
mov
loop
fwait
adc
out
adcl
imulb
dec
cs
addl
adc
js
and
push
jl
in
or
test
pop
mov
in
dec
xchg
int3
cs
jmp
inc
or
das
push
sub
cld
pop
mov
dec
cmpsl
xchg
and
in
stos
dec
loope
dec
mov
imul
xchg
cmp
arpl
sub
dec
lods
repnz
push
je
jmp
adc
or
mov
mov
fwait
test
loopne
fisubl
in
push
out
out
sub
xchg
xchg
popf
mov
stos
lahf
inc
sbb
and
or
ds
call
aam
stos
mov
jb
push
js
pop
xchg
push
andl
push
jns
stos
mov
or
fwait
xchg
cltd
lret
cs
pop
ss
push
and
aad
add
mov
adc
cltd
push
stos
call
outsl
fwait
cmp
fisttpll
mov
icebp
ds
test
in
push
mov
mov
pop
mov
stos
rorl
ljmp
fildll
rolb
or
std
inc
jo
btc
pop
and
xor
insl
jmp
leave
pop
adc
mov
popa
ljmp
dec
pop
sbb
stos
std
cmp
sahf
mov
adc
jne
cltd
enter
mov
jecxz
into
bound
inc
pop
xor
outsl
test
sub
sub
mov
xchg
iret
mov
test
lods
stos
or
adc
fwait
jge
mov
popf
cld
mov
sub
cli
inc
icebp
dec
sub
iret
in
stos
bound
out
push
push
or
lea
lahf
leave
stos
stos
les
inc
loopne
inc
iret
sub
jnp
rclb
icebp
jae
sub
mov
or
mov
inc
fwait
daa
sbb
vpmadcsswd
data16
push
test
test
lock
imul
mov
add
push
push
stos
popa
mov
sub
test
stos
in
fsubs
sub
jmp
mov
sti
pop
movsb
inc
mov
xchg
stos
add
push
daa
jb
movsb
mov
jecxz
stos
jnp
lods
shlb
mov
jmp
subl
stos
aaa
pop
cmpsl
test
iret
mov
push
stos
push
add
imul
in
cmp
add
and
pop
pop
fstpl
popa
jmp
inc
and
mov
pop
imul
push
xor
jne
xchg
ja
inc
mov
repz
imul
mov
mov
lahf
mov
xlat
orl
push
clc
fwait
sbb
or
jbe
lcall
lret
dec
arpl
stos
push
or
push
dec
cmovae
inc
int
ror
adc
mov
sarl
mov
or
xchg
dec
rcrl
add
pop
mov
iret
call
stos
lods
jno
sub
int
daa
stos
scas
mov
jg
testl
cmp
adc
mov
sub
or
cli
mov
ret
sub
in
cltd
inc
stos
aad
xor
sbb
adc
lret
and
and
sti
stos
sub
mov
inc
mov
pop
dec
stos
les
aam
sub
popa
pop
stos
jecxz
xor
bound
dec
pop
fbstp
in
mov
jle
jp
test
xor
mov
jg
ret
aam
sub
rorl
stos
dec
outsb
lock
movsl
ret
hlt
xor
pop
dec
mov
jno
in
pop
subl
mov
cmpsl
push
insl
cmp
mov
mov
stos
dec
pop
test
jno
es
sub
push
neg
push
mov
std
aam
xchg
pop
imul
cmp
dec
stos
sbb
rorl
adc
pushf
icebp
es
jg
stos
clc
sub
adc
fbstp
inc
push
popf
xchg
add
shlb
pop
sbb
xor
mov
stos
imul
cltd
cmp
pop
jmp
mov
mov
pusha
lcall
push
push
pop
push
xchg
or
mov
scas
int
mov
sub
adc
stos
mov
mov
cmp
outsl
pusha
stos
popa
mov
cmpsl
or
jle
and
pop
sub
rolb
mov
push
and
xchg
fcmove
aam
sub
push
stc
stos
inc
mov
add
or
stos
lcall
jecxz
jae
mov
adcl
stos
xchg
jne
cmpsl
call
aad
repz
popa
gs
dec
xor
cmpsl
mov
das
pop
stos
push
test
lret
stos
loop
add
cmp
or
sub
and
stos
mov
and
scas
stos
lods
mov
lock
jno
xchg
adcb
bound
sbbl
dec
xchg
inc
mov
cs
sbb
pop
out
pop
cmpsb
loopne
cmp
and
fsubs
in
cmpsb
or
or
jb
jmp
or
xor
mov
leave
mov
mov
jnp
or
out
sbb
mov
dec
mov
jns
ja
mov
in
xchg
dec
sahf
addr16
dec
fwait
fwait
mov
mov
test
mov
rclb
and
add
mov
enter
dec
cmpsl
iret
dec
jmp
mov
xchg
or
stos
jmp
jae
out
sbb
adc
ret
test
enter
dec
jns
xchg
add
or
pop
cmp
sub
mov
fstps
lods
lret
push
mov
stos
loop
insb
push
stos
std
stc
xchg
lret
jmp
adc
stos
jo
sub
int
cs
ret
sbb
adc
xor
ljmp
jmp
imul
je
dec
and
lcall
mov
fisubrs
ds
push
orl
pop
xchg
mov
stos
scas
je
add
xor
or
gs
mov
jg
push
adc
or
arpl
sahf
xchg
mov
or
sbb
xchg
in
stos
int
shl
xchg
popa
out
mov
mov
stos
jno
arpl
enter
mov
leave
stos
popa
push
or
out
insb
ror
lcall
imul
out
add
xor
push
sbb
sti
fisubrl
mov
movsb
mov
sub
lods
cwtl
jb
iret
stos
popf
out
push
jp
or
in
inc
rcrb
aas
stos
jae
jle
outsb
sub
stos
push
jno
out
js
es
test
or
fisubrl
rorl
mov
cli
dec
jg
stos
jb
inc
and
lcall
jl
mov
cltd
xchg
cmp
gs
stos
jns
js
add
pop
in
xor
pop
fmull
xor
shrl
bound
ss
xor
lahf
es
pop
or
mov
loope
mov
data16
stos
cld
insb
mov
pushl
dec
out
adc
test
adc
stos
xchg
jecxz
adcl
adc
ret
clc
mov
inc
lods
sahf
jecxz
sbb
mov
inc
gs
es
rcrb
cmp
inc
stos
mov
lcall
dec
fildll
jnp
jae
insb
xchg
test
mov
inc
dec
sub
cmp
push
scas
xlat
stos
xchg
sub
adc
stos
gs
imul
push
dec
sub
test
cli
and
stos
sbb
and
sub
dec
test
pushf
mov
scas
jmp
xchg
add
mov
push
cmp
mov
mov
nop
mov
flds
and
cmp
pop
sbb
call
cmp
sti
inc
mov
or
stos
mov
push
in
cmpsl
loope
sub
stos
mov
scas
aas
stos
sub
xlat
mov
xchg
in
or
and
add
and
out
ds
in
pushf
loope
push
push
xchg
xchg
aaa
inc
daa
stos
movsl
or
push
es
jb
mov
mov
rcrb
icebp
aad
setnp
lcall
movsl
add
sub
arpl
sbb
pop
xchg
add
jne
jmp
mov
ds
adc
leave
into
lahf
imul
psllq
nop
stos
je
jno
bound
in
pushf
loopne
or
xorb
jg
out
outsl
mov
lcall
fisttps
out
jae
fsubl
stos
xchg
popa
xorl
fisubrl
shlb
sahf
lods
adc
dec
jns
inc
int3
adcl
sbb
pop
insb
push
into
xchg
xchg
test
das
loope
mov
inc
pop
xchg
je
popa
add
jl
enter
in
stos
mov
jge
shrl
push
lock
sub
testl
dec
pop
stos
mov
clc
mov
addr16
repz
aam
jle
jmp
xchg
dec
dec
inc
ds
pushl
fwait
repz
sbb
xor
in
stos
fdivrs
xchg
mov
sub
mov
addr16
popl
mov
jle
stos
jns
rclb
sub
lea
jp
lods
jl
test
push
adc
cmpsb
push
jecxz
popa
xor
push
dec
test
aam
stos
xor
lods
addb
movsl
ret
lret
fsts
sbb
fnstsw
sub
loope
std
mov
xchg
add
dec
aas
vcvtsi2sdl
fcom
mov
es
fidivs
in
sbb
stos
xchg
jnp
inc
mov
mov
sbb
or
mov
sarl
sti
pusha
rol
inc
mov
data16
stos
add
jb
pop
cli
dec
lods
push
and
sti
out
lods
in
leave
stos
mov
cmp
stos
push
cmp
pusha
insl
xor
sbb
cltd
stos
inc
pop
jno
aad
and
jmp
cld
sbb
dec
adc
xchg
mov
xchg
jp
stos
js
adc
inc
and
sbb
mov
cmp
or
xor
jb
lods
mov
dec
stos
and
mov
cld
ljmp
das
push
and
jnp
jbe
stos
dec
mov
sub
insl
jle
xchg
xor
jmp
and
jmp
cmp
lcall
sti
pop
jmp
add
sub
push
stos
imul
imul
cmp
and
add
push
test
pop
cmp
lods
into
mov
jnp
stos
jle
pop
lods
xchg
jne
pop
stos
lcall
dec
push
pop
jb
es
mov
mov
mov
popf
sub
pop
rcrb
imul
mov
jmp
push
and
fists
in
fsubl
xchg
xlat
cltd
jg
in
cmp
movsb
and
xor
push
pop
inc
stos
adcb
lret
mov
test
popf
js
sub
movsl
push
push
aad
add
and
stos
dec
dec
pop
repz
mov
pop
sub
insb
stos
adc
iret
rorl
sub
stos
push
or
imul
jb
loopne
cli
cltd
clc
stos
jge
fnstenv
stos
scas
jae
mov
lret
stos
cmpsb
add
jne
pop
into
rcrl
lahf
stos
jbe
inc
add
and
mov
push
leave
sarl
stos
sbb
adc
movsl
and
in
jmp
and
sbbl
stos
adc
repz
stos
out
movsb
insl
pop
mov
std
and
stos
inc
jmp
popa
push
int3
push
repnz
xor
sbb
out
push
jp
mov
inc
sti
arpl
fdivrs
jmp
xchg
adc
sub
mov
stos
imul
fdivrl
in
mov
xchg
mov
test
pusha
stos
out
pop
rorl
or
add
fidivrl
sub
push
and
mov
mov
pusha
xchg
and
sbb
popf
jl
aas
jg
ss
fcoml
call
subl
dec
adc
mulb
stos
das
pop
jnp
rclb
insb
pop
stos
push
lods
adc
xlat
pusha
dec
dec
stos
scas
jns
js
popf
movsb
jmp
add
pop
test
adc
repz
jle
dec
dec
in
add
sub
roll
fisubrl
fstpl
xor
stos
les
lretw
and
stos
je
dec
sub
jl
cwtl
stos
mov
sub
jo
xor
icebp
outsb
push
sub
xchg
in
mov
into
push
mov
arpl
stos
repz
mov
in
ljmp
sub
stos
stos
push
dec
pop
lea
cmp
adc
jg
subb
lcall
out
and
pop
xchg
mov
jmp
addl
add
stos
or
sbb
cmpsl
sahf
mov
jge
xchg
inc
push
popf
pushl
ret
inc
mov
das
leave
stos
mov
jle
stos
cli
out
sub
lea
and
sbb
stos
jo
aaa
pop
ret
cmp
imul
pop
cltd
jno
stos
jmp
loope
shrb
adc
leave
stos
xchg
lods
dec
sub
mov
aad
out
stos
mov
or
jmp
gs
lock
loop
mov
xchg
mov
repz
fs
stos
jb
mov
push
jmp
mov
xchg
pop
data16
lret
movsl
mov
mov
loope
pusha
stos
sysexit
fimull
stos
aas
xchg
mov
test
fwait
rorb
mov
stc
xchg
dec
inc
jmp
mov
jns
push
fcom
dec
cwtl
insb
fbld
stos
jno
outsl
lods
mov
stos
add
sub
stos
arpl
sbb
cmp
imul
mov
mov
movsl
mov
out
stos
mov
pop
bound
sbb
xor
jg
push
les
adc
stos
pop
lret
pop
xchg
stos
out
xchg
ret
enter
cmp
mov
mov
xlat
cmp
mov
jg
or
add
add
lret
inc
movsl
lock
ss
pusha
pop
mov
addr16
adc
ljmp
mov
in
fdivs
xor
pop
inc
pop
dec
sbb
inc
ljmp
xchg
stos
lahf
jle,pt
bound
rol
mov
loopne
xchg
stos
adc
inc
addl
movsl
imul
insl
out
mov
add
xchg
inc
adc
lcall
dec
sarb
and
pop
mov
fld
mov
push
ret
jmp
push
mov
js
lock
in
xchg
rorb
adc
mov
stos
dec
or
cmpsb
shrb
adc
dec
lret
scas
xchg
stos
cmp
xchg
lahf
movsl
inc
shrl
inc
out
add
in
push
popf
fwait
or
stos
sahf
ds
test
xor
sub
ja
jl
out
stos
mov
mov
xor
fmul
stos
dec
and
or
stos
repz
lcall
mov
popf
loope
inc
imul
jmp
pop
je
sub
movsb
push
xor
stos
xor
sub
pop
int3
jno
push
daa
mov
cmc
cmp
add
mov
lahf
xchg
stos
push
filds
sahf
cmp
outsl
jmp
mov
out
lds
int3
or
lods
pushf
addr16
xchg
push
push
stos
or
pop
cmp
push
jp
fwait
int3
xor
stos
xchg
inc
xchg
loopne
jb
jbe
mov
adc
in
lea
stos
jmp
les
sbb
jmp
imul
add
daa
cmp
das
imul
dec
stos
into
dec
cltd
shrb
or
movsl
or
stos
and
loopne
sbb
cwtl
push
xchg
sarl
call
push
pop
in
cmp
into
sahf
lods
dec
jmp
inc
lret
loopne
rep
add
dec
je
cmp
icebp
dec
jnp
sarl
inc
add
and
dec
cmp
int3
mov
stos
fildl
xor
adc
testl
sub
popf
imul
pop
lods
mov
decb
mov
dec
stc
outsl
test
jp
push
cmp
dec
stos
ds
push
mov
add
mov
in
aam
push
pop
fsub
in
mov
iret
enter
pop
outsl
sahf
xchg
imul
pop
in
xor
imul
in
push
mov
inc
stc
scas
sti
or
stos
nop
mov
jmp
arpl
incb
jmp
ds
movsl
or
xchg
popa
stos
push
add
mov
mov
jae
push
mov
idivl
cmc
stos
aad
jle
pop
and
aam
loopne
jnp
scas
fldl2t
mov
mov
mov
or
ret
das
adc
jnp
dec
mov
xchg
mov
arpl
in
cmp
pop
out
pcmpgtb
xchg
push
mov
stos
into
pop
mov
out
inc
cmc
mov
sar
out
stos
mov
xor
jb
xchg
addr16
clc
jo
or
int3
mov
jbe
pop
sahf
xchg
stos
cmp
sbb
mov
cmp
jno
jle
stos
in
jp
aad
cmpsl
dec
pusha
and
fistl
rcl
data16
leave
clc
gs
imul
lds
jno
ja
hlt
xchg
iret
or
aas
xchg
outsb
pop
inc
movsb
stos
popa
cwtl
sahf
jg
cmp
stos
fisttpl
lds
jne
or
imul
xchg
out
push
cmc
stos
and
out
jnp
in
push
loop
xchg
callw
out
stos
mov
mov
mov
dec
mov
dec
jmp
imul
jns
sbb
pop
or
imul
hlt
add
stos
xor
pop
aad
stos
push
cli
inc
rcrl
test
gs
stos
xor
inc
stos
and
out
jmp
xchg
jb
arpl
jp
stos
jmp
jmp
in
xchg
movsb
sbb
addr16
inc
das
stos
sbb
dec
out
movsb
sub
xlat
xor
sti
test
jns
jmp
and
into
and
push
stos
mov
xchg
imul
cmp
out
add
fcmove
stos
push
icebp
ret
and
dec
cwtl
imul
stos
aam
sub
stos
aad
hlt
or
xchg
outsl
cmp
daa
stos
out
pop
stos
and
mov
jbe
sub
add
fwait
es
iret
scas
repz
mov
inc
pop
cmp
cmp
xchg
push
div
xchg
dec
dec
xchg
stos
xor
jns
ret
jnp
int3
mov
push
lock
or
stos
jle
cmpsb
adc
or
pushf
shll
nop
mov
roll
dec
in
fdivl
stos
cli
xor
je
stos
insl
mov
ret
sub
stos
ss
stos
test
out
out
and
cmpsl
adc
xchg
add
testb
xor
pop
mov
push
dec
lret
jnp
movsl
cltd
dec
stos
adc
mov
loope
jecxz
sbb
stc
cmp
in
notl
fildll
sbb
dec
xchg
sub
jp
das
stos
jg
in
mov
push
mov
stos
daa
dec
xor
iret
push
stos
mov
icebp
pop
or
inc
mov
sbbl
mov
scas
push
in
jns
call
fsubs
jne
xchg
jno
stos
jb
push
sub
mov
stos
add
jbe
fnsave
stos
push
stos
je
xor
shrl
imul
jne
imulb
sub
mov
stos
dec
jno
ror
insb
lret
push
hlt
push
nop
stos
notl
dec
mov
stos
pop
mov
ljmp
aaa
cltd
pop
mov
adc
fucomip
xor
into
dec
xchg
sbb
insb
and
push
int
fmull
dec
daa
stos
mov
xor
icebp
mov
aas
mov
imul
mov
jle
add
das
stos
sbb
and
push
out
sar
shrl
imulb
stos
mov
xchg
outsl
and
stos
stos
pop
imul
push
inc
inc
in
loope
mov
test
push
sub
movsb
mov
subb
imul
out
push
pop
pop
adc
lcall
stos
hlt
cmp
sub
jp
scas
jb
imul
sub
push
stos
push
into
mov
scas
inc
imull
and
mov
stos
out
cltd
stos
mov
ljmp
xchg
aaa
shr
hlt
cmp
mov
lret
pop
repnz
jb
push
imul
mov
push
cmp
stos
fcmovb
add
mov
test
xor
aas
nop
or
and
pop
mov
orb
sub
stos
xchg
adcl
stos
push
push
sahf
dec
enter
jae
shrl
stos
leave
dec
xchg
and
fmuls
outsl
pop
mov
cmp
mov
add
stos
icebp
pop
cmp
pop
mov
adc
fs
cmp
jb
rorb
inc
dec
dec
stos
popl
push
test
pop
lea
outsl
cbtw
sub
insb
shlb
and
xor
stos
orl
cmpsl
imul
pop
mov
xchg
pop
jecxz
movaps
push
stos
fs
test
cltd
stos
insb
dec
icebp
stc
push
leave
or
stos
int3
adc
sbb
pop
data16
mov
fwait
sub
aad
mov
shrl
data16
fwait
xor
mov
mov
stos
lahf
or
inc
stos
fsubl
jb
pushf
dec
sub
jo
maxps
or
daa
mov
hlt
mov
and
jge
stos
sarb
inc
push
scas
repnz
cmp
into
pusha
stos
sub
rcll
es
mov
filds
pop
stos
lods
lods
inc
inc
sbb
shrl
lret
and
ror
fildll
cmp
cmc
dec
mov
ljmp
sti
cmp
mov
addr16
ljmp
orb
or
fs
xchg
stos
dec
mov
lock
call
cmc
les
das
movsl
xchg
inc
xlat
jp
xchg
stos
jg
fldenv
or
loop
enter
cmp
stos
and
jge
stos
mov
xor
push
inc
cs
stos
mov
repnz
in
jle
stos
hlt
xlat
in
dec
out
push
pushf
sbb
sbb
cmp
lea
rcrb
mov
pop
int3
popf
xchg
stos
jle
xchg
add
dec
jmp
sbb
lahf
jnp
hlt
adc
sti
sbb
push
lods
mov
jle
push
daa
sub
jns
sub
push
push
xor
les
mov
xchg
out
addr16
outsl
orb
cmp
sahf
mov
scas
push
dec
into
lcall
call
mov
sub
jp
adc
out
rclb
sbb
pop
dec
and
mov
cs
mov
in
sub
inc
pop
sbb
adc
and
add
add
cmp
mov
xchg
sub
mov
push
aam
leave
sbb
stos
out
in
mov
lea
cmp
mov
iret
shlw
int3
addl
test
jns
cmp
mov
cmpl
in
sbb
mov
sub
test
fisttpll
ljmp
xchg
dec
ljmp
loopne
pop
cmp
mov
test
scas
ss
stos
lret
push
loope
mov
stos
dec
loopne
cwtl
cli
ret
stos
in
loop
mov
push
fcoms
sahf
cld
push
stos
imul
cmp
mov
hlt
stos
std
iret
xchg
mov
mov
dec
out
sbb
dec
test
and
xor
push
push
stos
aad
mov
hlt
push
push
stos
fisttps
xchg
stos
jne
enter
pop
pop
stos
test
xchg
push
cmpsb
stos
data16
cmpsl
adc
sti
and
stos
nop
mov
ret
pop
stos
je
jns
addr16
fs
xchg
fistps
sbb
imul
fwait
mov
stos
push
push
inc
xor
sub
push
decb
or
jp
pop
stos
loopne
loope
stos
fwait
int
add
push
jns
jmp
add
jl
sbb
inc
stos
push
sub
test
push
mov
pusha
dec
mov
insb
stos
jecxz
mov
loop
pop
shrl
dec
shll
or
in
je
or
stc
stos
push
cmpsl
aas
out
stos
daa
and
aaa
int
xchg
jnp
mov
wbinvd
rcl
stos
bound
pop
jo
lcall
mov
sbb
stc
rorl
cmp
mov
inc
scas
mov
stos
xor
ret
sti
cmp
xchg
stos
repz
xchg
adc
int3
stos
or
imul
xchg
pop
stos
xor
and
cmp
mov
cmpsb
jno
xchg
push
repz
mov
stos
shl
dec
mov
stos
icebp
adc
push
jmp
mov
sbb
mov
stos
mov
leave
hlt
mov
aas
sbb
ficompl
in
cmp
pop
mov
leave
mov
call
mov
sub
faddp
cmp
mov
dec
insl
outsl
mov
fbstp
pop
test
sub
pop
cmp
stos
adc
add
stos
imulb
mov
stos
push
add
or
or
outsl
stos
gs
arpl
movsl
ljmp
lea
sub
cwtl
push
pop
subb
mov
decb
mov
loop
pop
je
sub
dec
fldt
xchg
arpl
stos
insb
aam
pop
mov
mov
mov
mov
dec
stos
xchg
lcall
stos
xor
pop
sub
in
insb
out
lret
pop
mov
mov
ret
lea
test
stc
mov
rclb
lea
iret
rcrb
minps
push
stos
pop
xchg
dec
inc
or
mov
xor
push
stos
cmp
pop
fidivl
jne
std
jb
mov
stos
sbb
xor
fmull
rcrl
imul
stos
ja
add
shrl
fs
test
or
pop
xor
cld
sub
out
pop
rorl
out
jle
adc
xor
scas
subl
insb
stos
inc
mov
xchg
repnz
roll
xchg
addr16
ds
cli
sbbl
fistl
pop
mov
mull
push
sbb
lds
arpl
adc
rcrb
mov
arpl
fwait
jge
mov
inc
and
outsb
jl
ss
push
stos
lds
sub
nop
dec
mov
fs
push
fmull
jae
add
scas
jle
xchg
mov
mov
sbb
stos
aam
push
push
stos
arpl
mov
xor
call
in
dec
jmp
mov
and
pusha
imul
mov
scas
ret
stos
mov
xor
and
loope
stos
stc
pop
test
mov
jge
pop
mov
jb
mov
and
xchg
test
mov
adc
loopne
inc
lret
mov
ror
jecxz
xchg
and
stos
or
push
jne
and
aam
dec
or
fcomps
jmp
mov
stos
xchg
jae
push
stos
sbb
jg
push
aam
jmp
cmp
sbb
in
shll
icebp
scas
push
xchg
mov
sub
mov
out
stos
ret
inc
movsb
sub
xchg
stos
js
out
repz
dec
ja
stos
nop
adc
ret
aas
xchg
pop
dec
xchg
or
or
xlat
mov
imul
or
cli
jmp
fcompl
push
ljmp
xor
add
jnp
cli
fstpl
xor
add
ret
andl
add
aad
xchg
jl
inc
dec
stos
lcall
icebp
jno
push
hlt
outsl
ret
dec
xchg
movsb
cld
pop
stc
daa
lret
adc
std
mov
jmp
sbb
es
dec
arpl
aas
cmp
shrb
mov
ds
fisttpll
nop
jmp
pop
dec
xchg
aam
sbb
repnz
jnp
hlt
daa
dec
ljmp
data16
cmc
aad
addr16
lcall
cmp
sub
arpl
mov
addr16
xchg
mov
mov
or
enter
in
ljmp
insb
mov
or
jmp
rclb
push
ret
xchg
into
in
in
xchg
test
addr16
mov
fwait
mov
fldcw
sbb
push
test
shll
lea
dec
stos
mov
push
mov
repz
dec
adc
sbb
add
mov
scas
sahf
xchg
rcl
iret
pop
and
push
testb
test
sub
cmp
roll
loopne
adc
pop
rcrl
test
xor
insl
sbb
arpl
cmp
stos
arpl
mov
xchg
in
lock
ja
scas
adc
stos
push
call
jmp
stos
and
xchg
and
movsb
xchg
movsl
push
idiv
stos
sub
lea
add
cmpsb
es
stos
push
ds
mov
pop
ret
imul
xchg
or
andl
cmp
inc
in
cmc
shrb
dec
jnp
outsb
das
je
xchg
cs
jbe
mov
inc
stos
cmp
mov
pop
aam
mov
aad
sub
mov
mov
push
adc
push
stos
daa
in
repnz
stos
push
imul
sarl
mov
xchg
in
add
pop
adc
rolb
dec
stos
fistpll
cmpb
dec
pop
jmp
jp
mov
cli
xchg
mov
negb
dec
ret
push
lahf
stos
fimuls
push
xor
mov
xor
pop
inc
inc
fsubs
xor
stos
dec
imul
cmpsl
xor
test
repz
jge
dec
and
stos
fbld
jl
xlat
js
pop
mov
fwait
insb
mov
stos
imul
nop
push
or
aaa
sarb
mov
or
inc
cmpb
or
and
xor
jge
inc
stos
mov
icebp
xor
cmp
mov
cmp
xchg
adc
pusha
mov
lahf
sub
stos
cvtps2pi
sti
stos
imull
mov
nop
je
addl
sub
add
lods
into
adc
pop
mov
mov
xchg
movl
outsb
int3
stos
movsb
jg
jo
repz
stos
xor
xchg
js
mov
lock
mov
cld
mov
in
jmp
cmp
mov
je
lds
xchg
outsl
cwtl
pop
mov
movsb
mov
push
daa
ss
dec
inc
sbb
xchg
jle
in
cmpsl
xchg
jo
je
insl
daa
scas
mov
mov
stos
scas
mov
fnstsw
mov
pop
scas
in
daa
in
into
aaa
cmpl
mov
push
xchg
movsl
stos
pop
pushf
xor
fxam
in
xlat
stos
pop
inc
and
in
jo
arpl
enter
movsb
or
mov
aam
stos
cmp
out
jbe
lret
cmp
dec
sbb
jae
and
insb
sti
fisubrs
cmc
repz
lods
lret
xchg
out
mov
stos
loopne
xchg
and
in
xor
bound
xor
loopne
xchg
xchg
cld
lods
mov
jecxz
fsubrl
stos
dec
adc
dec
mov
arpl
daa
bnd
icebp
ja
fwait
mov
arpl
and
ds
stos
mov
scas
cld
mov
stos
mov
inc
pop
jmp
addr16
clc
call
pop
and
cwtl
mov
stos
sub
adc
int3
or
stos
xor
out
mov
loopne
pop
sarl
adc
sbb
sub
jecxz
dec
pop
stos
cmc
rorl
and
repnz
popa
roll
cmp
lcall
sbb
mov
xor
rolb
xchg
cmp
mov
and
adc
push
xchg
xor
icebp
test
scas
mov
sbb
sub
sbb
es
dec
mov
or
in
cmp
xchg
xchg
xchg
lock
jle
adc
jo
and
mov
jno
ss
cmp
shrb
stos
ds
sbb
sbb
mov
jmp
int
cmp
andb
lock
loopne
and
mov
xchg
mov
daa
cli
mov
ja
mov
lods
push
stc
add
sbb
pop
jne
sahf
lret
stos
jbe
push
xchg
sbb
insl
pop
and
stos
push
pop
movsb
dec
jmp
data16
mov
lret
test
push
int3
cmpsl
in
outsb
jmp
add
stos
sub
add
ljmp
or
stos
xorb
inc
into
pop
stos
insb
and
ret
jge
xchg
jmp
add
lret
pop
push
mov
or
pop
bts
sahf
outsb
dec
cld
mov
mov
stos
lret
arpl
ja
aam
dec
stos
loop
mov
pusha
pop
or
ret
sbb
dec
lcall
add
xchg
sub
adc
aam
stos
xor
push
sub
sub
pop
adc
in
jbe
mov
mov
in
or
xchg
push
test
int3
push
stos
sbb
xchg
leave
pop
stos
mov
lods
push
pop
or
aas
cltd
adcl
mov
imul
or
mov
mov
call
stos
sub
test
mov
daa
pop
test
call
aas
sub
fbld
insb
je
shr
lds
adc
xor
iret
mov
add
outsb
sub
dec
xchg
push
addr16
dec
pop
push
pop
int3
cli
stos
icebp
dec
sbb
mov
sbb
mov
lods
sti
shrb
mov
lcall
scas
adc
jnp
les
pop
jl
stos
cld
sub
dec
cs
setbe
xchg
into
sti
stos
cmp
add
mov
cli
lods
cmove
mov
jmp
xchg
xchg
cmp
stos
mov
enter
stc
inc
ljmp
aaa
mov
mov
cmp
pop
cli
stos
sub
lea
cmp
jp
inc
outsl
sub
stos
cmc
sub
rcrl
popa
ret
xor
adc
xchg
stos
popf
sub
or
leave
push
stos
sub
int3
xchg
or
jne
mov
pop
in
jmp
out
mov
insb
and
push
xchg
les
stos
xchg
pop
push
mov
imul
push
cmpsl
or
leave
mov
loopne
pop
jns
lahf
jo
sub
stos
das
enter
xor
stos
mov
ret
popf
push
stos
fstpl
rcll
mov
pushf
stos
jle
mov
xchg
add
test
inc
push
cwtl
stos
hlt
push
push
push
je
mov
dec
test
stc
push
adc
push
or
outsb
cmp
dec
stos
lret
sub
jo
mov
jmp
pushf
mov
int
clc
xchg
outsl
add
xor
pop
inc
outsb
daa
dec
xchg
cmp
mov
stos
pop
stos
jg
lret
outsl
push
cmp
xchg
shrl
add
mov
daa
sahf
ret
call
mov
jg
psubusb
jns
shrl
mov
aas
arpl
add
test
mov
jmp
sbb
incb
sub
movsb
cld
or
inc
icebp
je
push
stos
cli
and
add
out
imul
xor
sbb
js
stos
pop
arpl
int
aam
out
loop
push
testl
lds
dec
imul
xlat
dec
mull
lds
les
ds
ljmp
outsb
aad
movsb
mov
xor
stos
sub
sbb
xor
aas
jl
loopne
lods
sub
dec
push
stos
fnstsw
fs
inc
aad
jno
or
xchg
test
add
popf
stos
mov
jae
dec
stos
pusha
and
mov
scas
mov
xchg
sub
cltd
add
stos
addb
pop
ucomiss
stos
dec
dec
inc
jnp
cmp
stos
mov
mov
ret
arpl
pushf
cmc
dec
icebp
stos
loope
mov
jecxz
out
stos
sbb
fsubrs
mov
pop
stos
cltd
scas
sub
xchg
ds
ror
test
out
jle
fwait
push
inc
adc
pusha
sub
out
pop
jb
inc
fiaddl
int3
test
aaa
stos
sbb
jo
repnz
mov
idiv
sbb
cwtl
stos
mov
sub
jmp
mov
stos
icebp
rolb
out
iret
cltd
mov
push
add
data16
xor
fwait
jmp
mov
bound
cld
cld
adc
cmp
mov
sbb
or
sub
or
stos
dec
inc
data16
popf
stos
inc
frstor
aas
push
test
stos
lcall
xchg
mov
leave
test
cmp
sarl
adcb
xchg
adc
in
imul
mov
out
mov
call
cld
leave
mov
ljmp
lcall
push
mov
int3
cmp
rcrb
andl
iret
jmp
stos
sbb
add
pusha
jle
cmpsb
pop
into
pop
pop
mov
stos
xchg
adc
pop
sub
imul
jmp
push
stos
pop
addb
jg
rorl
fcom
push
sub
adc
jns
out
lds
les
jmp
and
pop
mov
sub
jno
stos
bound
xchg
xor
sti
adc
stos
call
jmp
mov
jge
mov
sbbb
aas
stos
mov
push
test
stos
fbld
push
mov
setge
dec
in
mov
xchg
stos
shl
aas
addr16
mov
scas
dec
daa
sar
nop
orl
mov
lcall
and
mov
xchg
call
mov
push
ret
xchg
push
push
aam
cli
inc
mov
mov
sub
outsb
stos
inc
cwtl
xchg
fnstcw
xor
mov
push
xchg
inc
vmovaps
ficomps
jmp
stos
adc
outsl
xor
std
pop
xlat
dec
clc
push
test
and
imul
pop
jecxz
add
mov
mov
or
xor
orl
fimull
inc
mov
xor
sub
aad
xchg
push
mov
mov
or
or
jmp
and
cwtl
push
je
mov
or
inc
mov
in
loopne
mulb
mov
dec
sbb
mov
cltd
sbb
loope
jge
cmp
lahf
mov
aas
stos
inc
adc
push
mov
enter
pop
or
leave
fidivs
daa
ret
movsb
mov
fldcw
jo
push
or
xchg
ficomps
insl
pusha
push
aad
ret
stos
add
xor
adc
mov
imul
cmp
test
sub
inc
dec
dec
dec
mov
cmpsl
sarb
or
pop
sub
mov
ret
lret
add
jo
in
push
mov
stos
lcall
adc
aaa
js
jmp
push
push
adc
add
nop
stos
mov
and
lock
xchg
jmp
movlps
xchg
pop
nop
cmp
jnp
movsl
stos
jle
ret
arpl
cmpsb
and
lods
stos
iret
add
clc
add
stos
mov
adc
or
mov
xor
stos
xor
xor
jge
mov
and
jg
jnp
or
lds
dec
rclb
cmp
rcll
mov
popf
icebp
sbb
mov
std
cmc
sub
test
add
stos
aaa
xchg
mov
icebp
and
stos
xor
test
leave
ss
sahf
loope
ret
fwait
inc
or
stos
xchg
push
testl
nop
test
mov
mov
ret
stos
es
ret
out
ljmp
stos
das
jmp
push
popf
ss
rcrl
fucomp
jb
dec
ds
clc
stos
xor
mov
out
sbb
jae
daa
je
mov
xlat
icebp
stos
sbb
and
jle
shrb
jg
push
pusha
stos
imul
xor
shlb
xor
stos
xor
jl
ror
test
push
ror
jg
push
fwait
lock
loop
cmp
xchg
js
stos
int
test
ffreep
sub
stos
enter
fdiv
push
imul
stos
or
lods
into
xchg
mov
jne
inc
xor
pushf
adc
sbb
shlb
cmpsb
dec
mov
mov
mov
jo
rolb
or
enter
aad
stos
xchg
movsb
mov
stos
pop
loop
sub
mov
int
push
stos
sbb
jmp
jns
xor
aaa
shr
dec
stos
imul
xchg
stos
ljmp
xor
or
stos
xchg
mov
repz
into
cs
movsl
add
mov
pop
popa
push
and
stos
or
cmpb
daa
xor
aas
push
stos
lea
rorl
adc
sub
iret
lods
sub
cmp
push
jge
push
or
sbb
in
inc
cmp
andb
pop
cmp
lock
inc
pop
jo
std
or
pop
xchg
outsb
fisubrs
xor
mov
nop
cld
stos
repnz
sub
stos
push
jp
cltd
dec
cmpsb
jns
stos
das
nop
stc
add
stos
push
inc
movsl
scas
mov
adc
sbb
ss
xor
subl
mov
outsl
jns
xor
sub
sub
mov
js
lahf
pushf
aaa
dec
fwait
xchg
xchg
xchg
stos
jl
push
adc
mov
inc
or
out
cld
or
fsubp
dec
data16
xor
fldcw
stos
add
cmp
dec
inc
cs
cmp
mov
daa
xchg
in
push
dec
out
fwait
xor
movsl
fcmove
mov
sbb
push
lods
pushf
pop
sarl
push
cmp
negl
fcmovnu
in
mov
cmp
ljmp
inc
dec
std
filds
push
stos
pushf
lcall
and
stos
ja
or
movsb
stos
pop
jae
jne
jecxz
ljmp
inc
mov
sub
lock
out
std
cmpsb
stos
rcl
lret
and
add
cmpsl
stos
adc
pop
jnp
outsl
xchg
popf
lret
test
mov
stos
div
lods
rolb
cld
xor
cmpl
repnz
in
inc
pop
popf
or
jae
pushf
adc
lahf
cld
and
push
xchg
dec
and
mov
loopne
add
cmp
push
lds
mov
inc
loopne
inc
or
mov
in
dec
dec
and
in
out
out
stos
div
jno
or
sbb
xchg
fsts
jmp
xchg
nop
stos
jle
xor
les
xor
js
pusha
jne
cld
stos
xchg
stos
ljmp
stos
push
pop
lahf
loop
in
push
sub
cmp
nop
mov
stos
mov
mov
je
ret
out
cli
int
ret
jecxz
les
stos
xchg
out
std
jmp
pop
loope
rolb
mov
cld
stos
bound
roll
decb
rcl
mov
pop
lcall
fadd
push
popf
mov
sbb
xchg
daa
js
bound
in
fmuls
cmc
mov
aad
jmp
pop
roll
outsl
mov
xchg
aas
jae
test
in
lcall
out
addl
stos
mov
mov
xchg
insl
negb
orl
test
test
gs
push
sahf
or
in
add
dec
inc
push
pop
mov
pusha
and
adc
stos
cmp
adc
and
stos
aam
pop
lret
stc
les
fucomp
pop
cwtl
mov
add
mov
xchg
popa
pusha
fildl
mov
xor
add
shr
pop
cld
test
out
stos
stc
dec
int
iret
adc
arpl
rol
cmpsb
ret
stos
cld
into
movsl
xor
mulb
inc
test
ljmp
pop
adc
stos
inc
movsl
cmp
push
and
lret
gs
test
stos
inc
push
fildl
shlb
scas
stos
dec
pop
add
xchg
jmp
int
pop
mov
addr16
bound
stos
xor
lahf
inc
frndint
push
outsl
lret
mov
jno
stos
xlat
pop
lods
xchg
sarl
lcall
stos
pop
xchg
lret
mov
or
push
stos
enter
add
mov
xor
mov
fwait
push
jne
push
stos
daa
mov
push
push
aas
push
xchg
xchg
dec
lods
stos
mov
pop
push
nop
mov
popa
mov
lret
sub
sti
inc
imul
stos
ret
pop
dec
pop
subb
jge
inc
cmpsl
jne
adc
mov
fwait
or
and
fs
loop
hlt
stos
add
pop
fchs
clc
les
lahf
insb
push
stos
mov
movsb
pusha
mov
stos
jnp
movsb
mov
pop
xchg
stos
mov
jecxz
xor
cmp
mov
jnp
lcall
mov
dec
xchg
mov
lret
dec
pusha
dec
add
mov
and
push
mov
push
cmpsl
sub
cld
mov
stos
xor
aas
or
mov
into
stos
pushf
xlat
xchg
pop
xchg
sub
stos
popa
out
inc
push
stos
ljmp
mov
stos
inc
movsb
pop
das
add
out
stos
gs
mov
xorl
call
mov
mov
jmp
aam
ja
scas
jmp
lods
and
lret
sub
pop
inc
stos
ret
ljmp
lods
mov
fwait
daa
adc
inc
sbb
mov
jns
mov
stos
cwtl
or
xor
mov
dec
int3
movsl
stos
or
jp
dec
xchg
aas
push
and
xor
loopne
data16
mov
mov
mov
fistpll
dec
inc
xchg
sub
mov
stos
jb
xchg
stos
loop
push
mov
inc
adc
mov
insb
call
adc
jno
inc
stos
cmp
loop
loopne
xchg
rcrl
stos
pop
adc
and
imulb
add
mov
jle
and
outsl
xchg
push
in
jmp
sbb
ficomps
ss
mov
xchg
cltd
pushf
add
xchg
popa
movsb
mov
fwait
repnz
call
xchg
gs
cmp
into
xchg
mov
mov
pop
gs
mov
arpl
fcomps
adc
sbb
stos
repnz
outsl
xchg
inc
inc
in
push
and
imul
cwtl
ljmp
sti
push
jno
stos
in
mov
jmp
pop
cwtl
popf
cmp
lret
nop
dec
or
fwait
and
imul
push
stos
mov
aaa
hlt
jo
jae
enter
xchg
lods
xchg
fisubrs
cmp
imul
xchg
cmp
sbb
add
pushf
repz
stos
sbb
xchg
insl
cmc
cmp
repnz
mov
add
jmp
mov
adcb
mov
repnz
and
mov
mov
inc
cmp
sti
stos
dec
bound
push
push
pop
jge
adc
imul
stos
cli
call
stos
dec
dec
clc
lcallw
lahf
imul
and
jmp
int
test
int3
out
enter
or
push
in
jmp
sbb
inc
leave
and
in
sbbl
and
jle
clc
das
jg
pop
sbb
es
mov
mov
lods
pusha
fnstsw
mov
pop
jns
and
stos
and
fcmove
stos
cltd
lcall
sub
stos
inc
pop
mov
bound
and
lcall
and
add
mov
stos
push
fisubl
je
rorb
lods
push
mov
push
stos
mov
ja
popa
and
and
push
and
mov
mov
cmp
mov
js
stos
pop
addr16
ds
enter
mov
add
sub
push
mov
in
and
insb
cmc
fwait
jp
out
fcmovnu
sti
imul
pop
cmp
stos
cld
mov
sbb
or
movsl
in
arpl
sub
mov
rcr
dec
add
sub
aad
das
inc
stos
mov
lea
imul
sub
mov
and
push
test
repnz
pop
mov
inc
mov
stos
out
add
or
into
xchg
imul
mov
fcomps
test
sbb
outsl
jae
jp
sub
mov
dec
cmpsl
add
in
movsb
mov
mov
in
adc
ds
jo
xchg
in
mov
loopne
test
xchg
mov
ds
gs
xchg
or
lods
cmp
dec
mov
push
es
addr16
rorl
imul
lret
fsubp
negb
pop
js
dec
or
jg
sbb
pop
mov
adcl
adc
sarb
push
stos
leave
in
scas
jns
fldcw
push
push
adc
sarl
fs
stos
add
push
mov
cld
ljmp
add
dec
fwait
loop,pn
inc
and
mov
stos
sub
fs
stos
jb
push
sub
sub
jl
xchg
mov
imul
ss
cld
mov
cmpsl
fldcw
dec
xchg
ficompl
pop
mov
and
mov
pop
lret
adc
stos
xor
test
add
or
mov
push
xlat
xchg
adc
lret
adc
mov
cltd
jns
stos
loop
sub
nop
aas
xor
dec
mov
stos
loope
pop
cmp
push
pop
push
sahf
push
ss
stos
sbb
mov
push
lock
or
xchg
pushf
push
xchg
sub
jne
xchg
loopne
shl
int
popa
mov
mov
jb
daa
out
addr16
popf
mov
loop
loope
stos
fucomp
cltd
sbb
push
cmp
mov
jp
push
and
jns
dec
push
mov
jl
js
iret
push
fistpll
lods
mov
jle
enter
stos
std
and
aaa
stos
pop
lret
pop
roll
shrb
daa
gs
sbb
int3
xchg
mov
pop
pop
add
or
xor
xchg
lock
bound
mov
les
pop
mov
stos
add
jne
xlat
mov
add
aad
push
sahf
stos
jae
dec
mov
addr16
cmp
xor
pop
adc
sub
scas
cli
cld
mul
lret
std
and
jl
pushf
dec
jns
stos
add
mov
stos
in
pop
out
pop
loop
inc
aaa
stos
or
or
test
lods
scas
stos
and
dec
mov
stos
add
cwtl
test
mov
mov
jnp
push
fwait
cmp
sbb
and
out
dec
dec
adc
idivl
stos
test
or
adc
jmp
imul
or
inc
xor
dec
stos
outsb
aad
mov
stos
fdivs
and
mov
adcb
ds
lods
pop
repnz
mov
into
inc
mov
shll
lods
adc
dec
movsl
sbb
xor
insl
jmp
jp
js
mov
call
or
stos
mov
ljmp
add
cmpl
fistl
jns
and
adc
stos
cli
fimuls
stos
xchg
in
fimull
repnz
cmp
rcrl
das
aad
ss
or
and
into
mov
stc
stos
idiv
aas
add
dec
insl
fcomps
sub
sbb
pop
imul
test
mov
xchg
stos
in
and
jmp
jae
movsl
push
mov
or
push
xor
ljmp
test
ja
aas
inc
int
stos
cld
xor
sti
fnsave
jl
lods
jge
in
movsb
btc
push
pop
sti
sbb
test
xor
xchg
call
inc
scas
jmp
pop
sub
push
inc
or
stos
jbe
mov
movsl
mov
outsb
stos
sub
push
movsb
pop
mov
sbb
xor
jp
pop
xchg
stos
jmp
movsb
or
inc
ljmp
ror
fwait
dec
adc
jmp
aam
pushf
cmp
jo
mov
pusha
push
or
xchg
jmp
push
xor
imul
paddusb
sbbl
jmp
pop
sbb
add
jbe
dec
mov
mov
and
lods
dec
movsb
pop
gs
loop
jbe
add
lret
mov
sub
dec
bound
shr
push
jbe
cmc
fsubs
xchg
fisubs
sbb
negl
stos
xchg
adc
mov
arpl
fucomi
jae
stos
leave
jp
outsl
lcall
int
lea
nop
jecxz
jmp
mov
push
mov
mov
in
xor
pusha
pop
aad
stos
mov
pop
lods
fsubrs
pop
imul
lods
sub
ficoml
xchg
fbstp
imul
mov
imul
iret
pop
push
inc
loop
cwtl
or
jl
push
xchg
nop
jmp
out
mov
xchg
std
jnp
imul
xor
mov
or
push
fisttpll
movl
aaa
xchg
mov
jmp
push
sbb
andb
mov
dec
dec
sub
stos
jae
icebp
std
roll
gs
lods
shr
insl
mov
stos
add
lea
lods
test
and
dec
adc
arpl
test
shr
inc
clc
mov
stos
mov
into
mov
cltd
stos
xchg
xchg
or
dec
and
push
daa
out
insl
xchg
fsubrs
push
stos
add
mov
das
mov
cmp
out
std
data16
sub
jp
mov
movsb
stos
mov
sub
dec
stos
or
push
jge
mov
stos
bound
sub
imul
aas
xchg
mov
into
jno
push
push
int3
shlb
pop
or
insl
mov
ss
jmp
stos
adc
dec
mov
out
imul
clc
push
push
stos
dec
pop
add
dec
rep
out
fwait
ljmp
scas
stc
cld
adc
pop
imul
in
clc
and
and
jmp
outsl
adc
in
dec
into
xchg
stos
lahf
popa
jle
and
imul
mov
stos
fstpt
push
adc
stos
arpl
bswap
or
mov
xchg
xchg
daa
mov
or
stos
xor
mov
mov
dec
mov
mov
flds
roll
iret
stos
loop
inc
jge
out
int
jecxz
stos
cli
imull
dec
and
cmpl
add
xchg
popa
mov
jmp
in
cld
jno
addl
jbe
xor
outsl
call
sub
data16
mov
dec
jge
stos
lret
bound
arpl
mov
test
repz
xor
cmpsb
mov
cli
mov
dec
into
iret
lods
out
call
jmp
mov
mov
stos
lods
aas
push
es
sub
and
and
clc
movsl
pop
in
xchg
mov
sub
jae
je
loopne
fwait
sbb
stos
ret
or
inc
in
rcrb
scas
mov
int
xchg
and
adc
mov
daa
xlat
pop
xchg
pop
or
add
stc
addr16
sarl
xchg
mov
xchg
adc
mov
stos
imul
add
jmp
add
cmp
dec
scas
push
aad
imul
sub
daa
cmp
ss
inc
and
repnz
mov
push
xchg
sbb
adc
repz
inc
and
orb
jg
jmp
jmp
pop
adc
mov
pop
cmp
lahf
test
repz
sub
loope
out
mov
pshufd
into
sub
iret
cmp
jb
push
clc
mov
inc
dec
jo
mov
xorb
jmp
xor
mov
lcall
mov
lods
dec
stos
or
inc
mov
scas
jb
addr16
cmpsl
jo
stos
sahf
xchg
ffreep
mov
leave
mov
repnz
adc
stos
sub
fldl
cwtl
les
fsubrp
jns
call
out
adc
in
scas
push
gs
inc
fldenv
sbb
pop
movsb
aad
jge
mov
mov
loope
xchg
push
stos
lahf
cs
push
mov
int3
mov
jae
mov
fbstp
or
inc
xor
lods
mov
xor
fwait
sahf
mov
xchg
jmp
insl
cmpsl
cmp
add
ljmp
stos
dec
mov
popf
js
hlt
stos
mov
add
notl
out
outsl
sbb
push
cld
cmp
aaa
pushf
imul
sub
mov
lret
jb
xchg
push
stos
add
fwait
fs
add
lret
sub
out
daa
sub
adc
cmp
dec
push
scas
jae
movsl
cmp
mov
jmp
aam
mov
stos
fildll
or
push
push
jg
fwait
shl
call
push
ja
push
arpl
imulb
jbe
in
cmpsl
shrl
adc
sbb
hlt
popa
add
scas
mov
filds
ret
push
test
push
aam
pop
add
push
and
push
or
stos
mov
mov
scas
mov
xchg
addr16
movl
sub
mov
xor
jmpw
hlt
jo
fwait
sbb
sbb
mov
test
mov
leave
xchg
aas
iret
mov
adc
sub
imul
loop
and
stos
rolb
int
mov
lds
nop
stos
xor
add
pop
fisubrs
xchg
test
mov
xor
imul
arpl
pop
fwait
mov
out
stos
mov
call
jmp
andb
fsubs
test
mov
push
xchg
xchg
ja
nop
scas
stos
in
std
lods
sti
xor
repz
bound
loopne
cvtpi2ps
lods
in
cmp
lock
cs
dec
jb
call
mov
stos
inc
cwtl
lds
sub
jns
pop
std
dec
or
or
mov
cmpsl
xchg
push
xchg
jne
frstor
movsb
imul
jnp
mov
push
jbe
clc
sbb
cmp
pop
cmp
stos
call
mov
stos
jno
in
push
xchg
push
mov
mov
and
out
cmp
test
lods
fisubrs
sub
jl
rorb
mov
aas
sbb
stos
mov
sbb
dec
stos
lods
and
pop
stos
or
pop
dec
cs
adc
and
cld
cmpsl
and
mov
call
mov
arpl
ret
scas
add
add
sub
fs
push
popa
mov
mov
clc
sbb
mov
lahf
rorb
stos
xor
or
jno
loope
sbb
mov
mov
mov
xor
mov
pop
pop
into
xchg
xor
mov
lcall
mov
cld
add
mov
stos
loop
jge
ret
icebp
addr16
jg
rorb
and
xchg
fisubrs
shrb
sbb
scas
out
add
aaa
stos
int
int3
lds
adc
push
mov
lock
js
jecxz
fildl
stos
loop
pop
mov
sub
aam
xor
dec
lods
pop
jmp
into
rcr
fwait
push
outsl
sub
xor
xorl
sarb
enter
jnp
dec
mov
mov
cltd
cltd
lds
lret
stos
out
sub
cmp
cmp
mov
mov
scas
sbb
imul
sbb
imul
repz
xchg
mov
push
fstl
stos
sahf
dec
dec
lea
pop
cld
cli
stos
inc
adc
jp
popa
and
stos
inc
jo
or
push
and
popf
push
add
enter
scas
or
xchg
into
cmp
repnz
push
js
out
sbb
dec
pop
lahf
sub
lahf
cmpsb
cli
mov
fcoml
movsbl
outsb
movsl
es
xchg
xchg
into
mov
xor
xor
mov
or
lret
imul
stos
push
pop
mov
xchg
stos
dec
jnp
incl
push
jne
jae
lock
cmp
sub
rorl
sub
xorl
fistpl
add
stos
sub
inc
xor
adc
stos
rorb
push
pop
stos
jbe
mov
and
sub
sub
shll
jl
mov
mov
inc
pop
iret
stos
mov
in
push
lea
addr16
push
cs
pop
xchg
pusha
add
sub
repnz
movb
stos
sbb
and
cmp
xor
cwtl
xchg
popa
in
fadds
push
in
lahf
xor
sti
std
dec
fildll
test
lock
jge
add
mov
ja
adc
addr16
dec
mov
add
push
mov
int
and
stos
push
or
out
mov
sbb
scas
cmp
push
lcall
fs
mov
stos
xor
add
jmp
mov
call
sub
sub
out
in
stos
stos
jbe
ds
pop
imul
pop
push
push
push
dec
dec
popf
add
xchg
push
add
jp
xchg
push
jae
std
fldl
test
sbb
pop
mov
adc
xor
add
xchg
stos
ret
faddl
sub
stos
inc
ret
jmp
and
xchg
add
ljmp
out
xchg
stos
adc
lods
sbb
dec
movsb
stos
test
and
cmc
stos
pushf
out
pop
hlt
nop
lds
jnp
movsl
push
loop
stos
adc
decb
jns
mov
je
xchg
cmpsl
mov
shlb
popf
ret
adcb
mov
mov
jp
pop
or
loop
mov
or
push
stos
aas
adc
pop
movsb
int3
sbb
iret
xor
dec
jno
and
mov
lods
mov
test
imul
stos
dec
and
or
incb
movsb
mov
divb
into
movsb
arpl
pop
repz
mov
adcl
pop
imul
jl
xor
lcall
jmp
inc
sbb
inc
jle
shlb
imul
fisubrl
add
lcall
mov
stos
sarb
xor
mov
testl
pop
push
push
push
adc
dec
cwtl
fwait
sbb
sub
cmp
inc
inc
pop
adc
scas
stos
add
xchg
lret
bound
subb
and
inc
push
jae
call
in
cmp
arpl
int3
mov
jmp
std
pop
mov
and
imul
shr
jl
jle
mov
shll
push
mov
mov
mov
lock
mul
scas
mov
repnz
mov
clc
mov
dec
lcall
push
xor
stos
outsl
push
out
xchg
xor
arpl
and
push
test
mov
jbe
push
push
fldt
popf
cmp
adc
sbb
jmp
mov
icebp
aad
mov
cmp
cmpsl
les
ss
push
mov
les
lret
push
das
sub
ds
ds
lahf
jge
fisubs
xlat
stos
int
push
push
add
mov
aam
fwait
or
dec
mov
adc
pop
dec
stos
mov
push
jnp
mulb
mov
xchg
stos
xlat
xor
jp
cvtdq2ps
stos
flds
pop
stos
fisubl
mov
mov
iret
stos
mov
jno
sbb
scas
int
push
stos
xchg
sub
fnstcw
std
xchg
movsb
into
pop
loopne
mov
push
mov
fsubrs
stos
fwait
les
imul
cmpsb
jns
je
jg
jno
cmp
in
adc
xchg
stos
or
shl
lret
sub
lods
sub
stos
arpl
mov
sub
push
divb
rorb
scas
dec
jnp
loope
cli
mov
ficoml
push
push
hlt
mov
fists
stos
clc
es
lret
pop
mov
dec
xor
or
xor
daa
mov
imul
xor
fdivrp
pop
xor
mov
incl
or
out
lods
fwait
push
out
cmp
bswap
imul
stos
or
dec
inc
fisubrs
stos
das
pop
pop
sub
stos
mov
div
inc
arpl
pop
jecxz
inc
jnp
enter
push
jb
test
mov
dec
lock
add
int3
cs
adc
data16
movsl
and
inc
xchg
pusha
cmp
stos
cld
aad
sbb
push
xor
ficomps
fsubrs
xchg
lods
enter
xor
mull
icebp
stos
ss
xchg
in
mov
and
clc
sbb
out
cs
inc
call
adc
jp
btc
jmp
or
ret
cmp
jmp
out
xchg
inc
roll
mov
xlat
push
and
imulb
xchg
add
ret
bound
add
mov
xor
pusha
stos
and
cwtl
fwait
or
add
inc
inc
cmp
stos
nop
xlat
ret
dec
ja
insl
jne
mov
mov
cwtl
add
stos
dec
push
rolb
stos
addr16
call
ljmp
nop
sti
jecxz
dec
jmp
xchg
in
fwait
imul
into
and
add
loop
stos
push
add
mov
in
int3
cld
fisubs
fisttpl
jmp
pop
xchg
jecxz
adc
xchg
sub
stos
sub
jg
mov
pop
sub
hlt
adc
or
jmp
xor
inc
es
mov
hlt
popa
in
stos
push
xchg
sbb
out
mov
and
stos
stc
rcll
or
adc
ret
or
imul
mov
dec
mov
stos
loopne
sbb
lcall
test
push
iret
cmp
sub
fiadds
add
xor
dec
push
stos
pop
mov
xor
stos
jge
xor
aam
aas
xlat
stos
jg
and
mov
sarl
icebp
jmp
test
cmp
sbb
sbb
pop
jbe
xor
fisttpl
stos
add
cmp
ret
fwait
ret
setae
mov
imulb
int
loopne
stos
faddl
xchg
mov
stos
daa
xor
cmp
adc
stos
sub
fmuls
stos
mov
inc
imul
scas
mov
cli
test
dec
adc
fiaddl
in
imul
pop
negb
push
mov
push
cmp
arpl
mov
cwtl
stos
js
jne
xor
mov
popf
movsb
mov
or
xor
fldenv
inc
pop
mov
stos
loopne
mov
inc
das
cmpsl
stos
mov
inc
aas
push
stos
in
dec
jae
pop
lret
jo
push
adc
inc
js
cmc
in
orl
ljmp
fcmovb
mov
adc
or
sub
adc
mov
cli
enter
pop
fcompl
mov
adc
cmp
out
push
jnp
cmp
test
in
hlt
lds
and
mov
xor
cli
pop
sahf
sub
outsl
jnp
dec
ljmp
movsb
stos
aad
mov
leave
stos
xchg
les
aas
mov
push
mov
jns
rorb
sub
pop
pop
stos
imul
sub
mov
pop
dec
or
lcall
sbb
mov
jno
lahf
jg
fidivs
stos
aas
push
jmp
scas
adc
repnz
add
inc
stos
push
mov
stos
dec
mov
adc
pop
mov
in
cmp
mov
outsl
adc
ja
cmp
imulb
push
movsl
mov
mov
packssdw
in
mov
dec
mov
cmp
push
jne
inc
push
shll
pop
test
fdivl
add
int
scas
dec
sbb
xor
mov
out
cwtl
mov
push
adc
ja
push
orb
dec
mov
enter
cltd
xchg
stos
sub
aad
stos
push
push
push
mov
imul
push
jns
and
lock
xchg
jge,pn
sbb
imul
mov
stos
fldl
push
imul
stos
test
mov
cltd
stos
xor
and
loope
add
bound
and
jae
or
jb
sub
call
mov
lcall
out
sbb
push
lods
and
shl
pop
or
das
imulb
push
ror
jg
icebp
dec
std
fwait
das
jns
stos
inc
mov
dec
push
aad
lcall
stos
test
dec
mov
imul
stos
std
sysexit
push
stos
pop
mov
out
stos
cmp
test
sbb
push
mov
lahf
js
faddl
pushf
pop
stos
fsubp
or
sbb
sub
pop
js
push
and
ja
into
lds
ljmp
pushf
push
jmp
add
cmp
aaa
lock
aad
push
shl
icebp
scas
mov
jnp
sub
les
dec
rorb
sbb
cmp
push
scas
and
dec
lock
in
mov
aas
mov
sti
mov
dec
mov
movsl
mov
push
fisttpl
mov
or
cmp
sub
adc
stos
mov
add
mov
dec
xchg
shrl
icebp
mov
outsl
dec
xchg
stos
sub
mov
loope
imul
mov
hlt
insb
jo
mov
stos
paddusw
lock
fcomps
fsubp
js
negb
outsb
stos
in
cmpsb
jg
ljmp
sahf
sub
repz
fisubl
inc
in
stos
loope
sbb
mov
dec
jle
or
sub
stos
dec
addr16
and
out
jmp
fisubrs
ss
cmp
mov
mov
or
or
nop
ret
stos
mov
pusha
lret
stos
or
cs
aaa
test
push
jecxz
pop
xchg
jns
xchg
cwtl
inc
jmp
mov
lcall
loope
test
dec
imul
and
cli
cmp
mov
push
stos
push
ljmp
movsl
fisubrl
out
mov
out
movsb
rcrl
jl
js
pop
sbb
xchg
cmpsb
mov
iret
mov
or
mov
push
stos
nop
xor
push
xchg
imull
inc
test
fs
jmp
sbb
push
enter
mov
in
dec
ret
push
cmp
fimuls
out
idivb
repz
subl
sub
or
and
movsb
xchg
aam
mov
sub
dec
lods
fwait
or
inc
ret
push
stos
mov
push
fwait
inc
xchg
movsb
popf
sbb
mov
negb
push
push
add
xchg
stos
orb
loop
pop
add
xlat
mov
stos
cwtl
inc
xorb
sbb
stc
jge
sbb
fdivr
stos
lret
movsb
mov
lcall
test
sub
popa
or
rcll
lcall
mov
stos
mov
inc
push
dec
in
jnp
jno
jl
pop
push
shrb
push
xchg
jns
lcall
cwtl
adc
push
arpl
sub
push
xlat
rcll
hlt
xchg
pop
adcb
pop
stos
dec
mov
xchg
les
jg
pop
push
mov
jns
clc
and
fwait
stc
lea
dec
cld
and
stos
ret
hlt
jmp
jge
xlat
dec
int3
jl
xchg
push
test
add
dec
jge
loop
stos
stos
cmp
imul
fiaddl
sti
sub
sbb
std
dec
arpl
cld
dec
ljmp
inc
mov
xchg
xchg
dec
push
stos
insb
mov
mov
push
adcl
lods
shrb
mov
xchg
or
inc
xchg
dec
mov
andb
stos
and
imul
adcl
ljmp
inc
sbbb
stos
icebp
sarl
ret
std
dec
jbe
cmp
test
jl
mov
jecxz
push
insb
movsb
sti
sbb
stos
mov
push
xor
push
scas
xor
lea
or
pop
mov
lret
mov
inc
rolb
outsl
stos
sbb
mov
enter
scas
cli
xchg
mov
inc
cmp
out
cmp
stos
push
add
xchg
mov
lods
into
inc
jnp
test
stos
inc
cwtl
sbb
sbb
sub
inc
aad
stos
iret
testb
push
jmp
mov
jbe
es
cmp
movb
gs
insl
test
cltd
or
test
stos
lret
popf
loope
sbb
inc
stos
imul
push
stos
inc
dec
leave
aad
lret
stos
test
in
stos
or
cld
pusha
andl
pushf
sbbb
cltd
adc
arpl
int
jg
ret
jmp
jl
push
pop
dec
inc
mov
fucomp
out
jae
add
test
mov
adc
pop
push
mov
jmp
sub
gs
ja
stos
lret
jns
push
mov
lods
negb
popa
stos
arpl
lret
lea
movsb
mov
leave
lcall
pop
mul
push
popf
mov
mov
inc
or
hlt
test
push
push
imul
and
test
daa
in
mov
repz
pop
fwait
imul
fwait
and
sub
int
fstpt
push
lcall
aad
stos
xchg
nop
pop
shr
cs
imul
stos
sbb
stos
aaa
push
in
sbb
out
push
imul
cmpsl
lds
inc
stos
repz
mov
cld
stos
pushf
push
daa
nop
xchg
push
cmp
nop
sbb
ljmp
adcb
dec
sahf
scas
adc
stos
or
cltd
mov
add
ficompl
dec
or
mov
stos
test
cmp
and
push
and
insb
xchg
lock
les
cmc
into
stos
clc
sub
daa
stos
sub
push
shrl
push
ljmp
stos
int3
lret
test
xchg
stos
imul
xor
insb
or
xlat
out
stos
ret
mov
pop
daa
push
cmp
sub
gs
stos
or
sbb
push
mov
loop
stos
and
xlat
or
lods
std
xchg
sub
popa
dec
add
mov
sub
xchg
mov
xor
push
add
mov
scas
stos
inc
push
or
and
or
stc
lahf
mov
cmp
lret
mull
rorb
ljmp
inc
inc
add
stos
push
jne
imul
cli
shll
dec
std
adc
cmp
out
mov
loope
jl
outsl
rorl
mov
sub
cmp
neg
xchg
sbb
leave
ret
push
fwait
push
xchg
sahf
stos
cmp
mov
adc
idivl
pop
inc
dec
push
or
stos
addb
popf
push
stos
jecxz
shrb
push
mov
lahf
mov
fistl
stos
dec
pop
or
inc
or
fstl
into
fwait
adc
jmp
outsl
push
repnz
push
add
xor
stos
mov
test
inc
inc
cmp
int
imul
xchg
cli
cwtl
mov
stos
jne
jbe
push
push
jl
jb
mov
pop
stos
push
ret
pop
aaa
stos
cltd
xchg
std
mov
out
mov
fcom
push
cmpsl
aas
stos
enter
cmp
xor
pop
mov
dec
mov
jbe
scas
mov
or
adc
addr16
test
stos
aad
inc
or
jo
loop
push
cli
jg
adcl
dec
mov
pop
mov
imulb
cmp
in
push
arpl
push
cmp
jl
scas
sbb
into
sub
jmp
aad
adc
std
les
dec
das
jge
lds
out
lods
and
push
notl
repz
mov
out
sti
xor
mov
stos
mov
aaa
daa
ss
adcl
fwait
lea
adc
xchg
pop
gs
imul
cltd
stos
scas
sarl
in
int3
jmp
fwait
cli
shlb
iret
stos
sub
add
xchg
lds
sbb
in
testl
jmp
pop
pop
jp
jo
fwait
scas
mov
mov
lret
cmp
dec
je
push
sub
inc
adc
jnp
mov
stos
js
adcb
jo
lahf
lds
fs
out
and
xor
pop
inc
stos
dec
xchg
push
stos
popa
jb
mov
stos
aam
andl
xlat
inc
hlt
ror
fstpt
inc
in
push
cltd
mov
cltd
lock
arpl
cmp
jbe
leave
stos
jge
add
mov
jb
ljmp
sub
aam
add
loopne
std
cltd
imul
fcomps
mov
stos
push
mov
push
xchg
fsub
inc
dec
rcrb
dec
mov
push
inc
in
ljmp
add
or
fistl
ja
ss
sub
das
pop
stos
inc
gs
int
sbb
mov
xor
fisttps
lahf
add
lods
stos
bound
cmpsl
int
sbb
sub
sar
rcll
cmp
mov
adc
pop
xchg
stos
addr16
and
cmp
mov
xchg
rcrb
sub
enter
inc
cmp
into
lcall
jo
and
push
mov
popf
add
mov
data16
sub
clc
mov
pop
in
push
stos
mov
fs
add
push
stos
ja
or
mov
push
add
mov
pop
mov
stos
push
pop
hlt
scas
iret
xor
jmp
addr16
sbb
pop
cltd
or
imul
mov
stos
jl
and
cmpsb
inc
ja
mov
sub
dec
mov
push
neg
stos
ret
daa
add
out
shrl
leave
dec
lea
arpl
fisttps
mov
ljmp
bound
sub
xlat
pop
sar
jae
mov
inc
lret
dec
test
push
xchg
sub
arpl
paddd
imul
mov
stos
scas
cmpsb
mov
inc
stos
daa
adc
test
lcall
add
sbb
stos
pop
mov
push
jmp
cs
jne
lret
mov
icebp
xchg
out
call
repnz
pop
xor
sti
xchg
popf
dec
and
lods
popa
sbb
jg
stos
test
and
cmpb
pop
xchg
pop
push
movsb
stos
jnp
lods
mov
push
or
mov
xor
dec
mov
add
pop
stos
enter
outsl
xchg
aaa
lret
mov
sbb
adc
xor
imul
mov
stos
mov
js
sbb
pop
adc
sub
sbb
loop
daa
popf
fstpt
in
test
or
xchg
sbb
push
pop
jns
or
mov
push
ret
fidivrs
imul
stos
jmp
cwtl
inc
lods
and
sbb
stos
push
iret
sbb
int
popf
pop
cmp
cmp
stos
mov
xor
mov
outsb
cmp
icebp
nop
jle
rcll
ret
cmp
mov
pop
out
xor
mov
push
or
enter
push
add
and
loop
addr16
popa
punpckhwd
mov
stos
test
adcb
lods
lret
inc
sbb
xchg
push
mov
in
call
test
mov
mov
pop
fldcw
dec
add
dec
sbb
push
sub
mov
ret
xchg
pop
cmp
popa
mov
ret
imul
rcll
pop
into
sub
lods
leave
std
mov
cmp
test
imul
xlat
addr16
cmp
add
mov
push
jle
das
cmc
int3
imul
fidivl
adc
js
push
shlb
jp
fwait
lret
jmp
js
out
mov
xchg
outsl
ret
inc
push
mov
push
lods
mov
scas
inc
outsb
jbe
mov
sub
lahf
fiadds
push
xchg
add
les
fcmovb
fldl
mov
arpl
imul
jle
ljmp
test
in
fwait
popa
or
call
dec
mov
stos
adc
je
mov
scas
mov
jb
aas
cs
stos
cmpsl
jle
int
aas
stos
push
in
idivl
mov
xor
test
cld
shl
mov
cmp
mov
dec
fbld
cli
imul
xchg
std
out
pop
pop
sub
ljmp
adc
mov
jo
mov
pop
pop
push
data16
xor
push
outsl
movsb
dec
pop
push
dec
mov
ja
cmp
xchg
shl
into
mov
push
aas
push
fmuls
outsl
mov
sub
pop
movsb
int
adc
inc
stc
stos
inc
std
out
dec
sub
mov
jns
push
leave
xchg
jecxz
das
lods
dec
and
cmp
xchg
popa
sti
jg
mov
aam
xor
xor
push
mov
arpl
fwait
cmp
push
adc
push
data16
mov
dec
xchg
cwtl
sbb
stos
push
push
xchg
pop
inc
adc
push
stos
cltd
inc
ficompl
rcr
sub
loopne
sbb
je
inc
shlb
int3
mov
mov
frstor
in
jmp
ja
push
pop
xlat
sarb
sub
shrl
test
pop
stos
cmc
incl
dec
mov
popf
ret
fwait
xchg
daa
pop
xor
pop
add
and
cmp
les
jmp
mov
xchg
xlat
dec
addr16
stos
shl
xchg
insl
cmp
sahf
mov
loopne
jl
test
stos
push
fmul
push
ficompl
ljmp
stos
pop
test
and
stos
cld
jnp
sti
push
cltd
mov
jmp
test
pop
js
mov
xor
xchg
fcomps
or
es
pop
imul
ss
jo
xchg
jbe
and
pop
xchg
sub
fildll
cld
add
dec
stos
cli
jne
iret
jns
sti
pop
cs
stos
xchg
add
sbb
das
xchg
stos
insl
mov
pop
push
pop
add
lods
adc
flds
out
pop
pop
dec
add
data16
mov
sbb
dec
subl
in
mov
daa
dec
test
mov
repnz
xchg
pusha
mov
hlt
shll
loop
gs
jmp
mov
cmp
or
pop
ss
daa
sbb
test
cli
and
push
add
jnp
push
in
xchg
inc
jb
inc
jnp
sahf
stos
jae
xlat
inc
add
add
nop
jo
fs
fsubs
inc
mov
stos
xchg
fwait
ja
push
push
sahf
mov
pop
mov
in
in
pop
mov
push
out
fsubr
stos
nop
cmp
fsubr
pop
push
xor
xchg
mov
hlt
adc
xchg
lods
cmpsb
stos
xchg
push
je
fxch
cmp
clc
pushf
jge
dec
movsb
mov
adc
inc
mov
sbb
nop
pop
ja
and
xchg
testl
pop
xchg
mov
push
mov
or
push
stos
pusha
jno
pop
negb
cld
shrb
and
xchg
cmp
stos
mov
imul
jnp
push
jmp
mov
push
add
int3
push
lods
mov
sbb
mov
xor
push
and
xchg
mov
or
loope
movl
cs
pop
mov
inc
fcomip
cmp
test
fs
jmp
aad
cltd
lock
fwait
in
stos
scas
ret
popa
popf
or
cmpsl
xor
cld
js
xor
jno
add
pop
mov
cmpsb
dec
test
mov
stos
jno
pusha
xchg
add
cwtl
dec
push
ret
dec
dec
cmpsb
lea
inc
xchg
insb
std
cmp
out
jmp
les
sahf
stos
mov
shl
in
stc
xor
mov
cltd
mov
pop
stos
dec
mov
sub
stos
adc
shrl
inc
es
or
mov
loopne
add
stos
sti
cwtl
mov
dec
stos
sbb
or
mov
mov
pop
repz
aam
ret
cmpsl
push
sub
xchg
or
jne
outsb
int3
sbb
stos
loopne
add
xor
sbb
xchg
movsl
inc
mov
nop
in
orl
adc
pop
xor
adc
sbb
lods
lret
int
mov
mov
mov
jbe
push
lcall
sub
and
and
cmp
stos
insb
imul
push
loop
pop
push
aad
dec
or
sahf
fstl
pop
leave
stos
dec
xchg
adcl
push
jge
fmul
not
jns
xchg
ds
dec
aad
jo
imul
out
inc
adc
mov
stos
aaa
pusha
cwtl
push
movsl
and
dec
pop
or
adc
jno
xor
lods
adc
hlt
dec
fwait
testl
pushl
push
fwait
sahf
sub
ljmp
pop
mov
pop
gs
pushf
jle
in
fwait
pop
pop
dec
fisubl
stos
push
in
and
lret
dec
inc
out
xchg
jno
ds
fwait
in
lea
lock
jmp
sub
mov
jbe
push
push
movsb
nop
hlt
jne
mov
aaa
mov
pop
mov
adc
stos
inc
ds
aam
lcall
mov
imul
stos
jmp
jecxz
roll
es
loope
stos
negb
stos
addr16
daa
dec
int3
or
inc
addr16
out
bound
stos
ds
shll
cli
ljmp
or
mov
mov
popa
gs
incl
xchg
aam
mov
pop
arpl
mov
inc
movsl
jmp
sahf
and
hlt
push
mov
sub
xchg
fcoml
aas
dec
sbb
stos
cmp
inc
sub
fbld
push
sub
frndint
xchg
ret
dec
pop
mov
push
mov
sbb
add
sub
test
fbld
mov
cs
aaa
lods
jge
sub
loope
cmpb
hlt
xor
mov
mov
imul
push
gs
jb
push
and
outsb
jmp
lret
stos
sarl
stos
adc
loop
cmpsl
data16
cld
mov
mov
stos
test
or
jg
jecxz
shrl
cmp
push
stos
cld
pop
and
xchg
adc
stc
stos
pop
inc
pop
add
mov
or
push
jecxz
cmp
push
sbb
pop
mov
lds
add
xchg
add
and
pop
mov
int3
stos
sti
ja
sarl
jl
adc
pop
imul
jmp
cmpl
aad
shrb
adc
pop
push
repnz
outsl
clc
inc
pop
push
mov
pushf
or
sub
mov
pop
outsl
insb
inc
addr16
jp
xor
enter
loop
stos
into
inc
fdivl
negb
push
jnp
mov
xchg
insl
jne
lds
push
stos
jl
popf
inc
in
arpl
stos
sub
sbb
outsl
cli
ja
addr16
push
test
iret
mov
lcall
aaa
xchg
cmp
std
nop
aas
imul
mov
push
mov
jl
cmp
push
int3
out
jmp
inc
lods
jno
cmp
adc
pop
bound
push
push
mov
xchg
push
stos
xchg
mov
push
gs
in
stos
or
xor
push
mov
iret
stos
mov
mov
jl
icebp
sub
leave
push
shll
das
cmpsl
divb
movsl
std
rcrb
mov
xor
movsb
mov
mov
ljmp
mov
mov
outsb
nop
and
mov
das
stos
push
pop
lahf
aaa
or
push
inc
pop
adcl
sarb
xchg
stos
inc
ljmp
stos
sub
outsl
pop
push
mov
daa
notb
pop
lret
cmp
in
mov
xchg
mov
add
rorl
stos
aas
push
adc
or
mov
stos
mov
stos
lock
push
lret
push
stc
or
subb
pop
test
stos
mov
ja
cld
loopne
pop
test
int
xor
stos
add
push
push
fwait
gs
loopne
cld
ftst
jg
jae
mov
daa
fsubrs
pop
loopne
test
jno
add
ret
scas
dec
pop
pop
xchg
sbb
add
into
aas
push
jb
or
add
pop
cs
movsb
cmp
mov
stos
jo
mov
push
stos
add
call
adc
cmp
dec
and
mov
mulb
out
inc
pop
push
rolb
jns
das
or
scas
inc
adc
stos
fiadds
stos
js
adc
stos
dec
stos
dec
add
pushf
xor
stos
lds
pop
shrl
lret
jns
stos
inc
leave
adc
out
mov
ljmp
jb
push
mov
lds
lods
stos
rolb
adc
inc
test
or
dec
dec
mov
aas
push
dec
add
aam
test
fwait
stos
test
es
stos
and
loopne
std
mov
stos
into
les
lds
stos
repnz
pop
popf
out
dec
in
stos
xchg
cmp
iret
inc
test
xorb
pop
js
jno
stos
adc
add
add
dec
mov
mov
adcl
aas
xchg
arpl
adc
shll
jns
stos
sub
push
push
push
pop
stos
mov
repz
mov
and
cltd
ja
cld
lods
cld
stos
test
fs
fisttpll
pop
or
dec
dec
idivl
jo
repz
stos
pop
or
mov
cwtl
stos
inc
shl
mov
das
enter
stos
lods
gs
sbb
and
out
leave
cmc
enter
xchg
pop
inc
sti
fbld
stos
outsb
rol
in
test
push
jmp
push
and
adc
mov
out
imulb
xchg
xchg
lods
nop
in
sub
stos
rcrl
bt
or
fwait
mov
cmp
lahf
stos
mov
push
cmp
sbb
nop
push
loopne
stos
lds
outsl
fwait
dec
je
addr16
pop
faddl
ja
stos
xchg
push
shrl
je
rcrl
inc
lds
repz
fsubrp
addr16
xor
inc
mov
fsubrs
lahf
popf
xchg
xchg
stos
sub
enter
xchg
ljmp
mov
test
stos
mov
inc
sub
stos
mov
xor
add
xchg
lods
jnp,pt
push
std
adc
push
js
mov
jbe
push
stos
imul
shrb
adc
daa
add
je
and
div
push
stos
mov
fsubr
push
add
and
loop
xor
cltd
clc
icebp
mov
test
dec
arpl
dec
popa
inc
add
inc
jmp
cmpsb
mov
sarl
mov
sub
mov
repnz
outsb
xchg
sbb
cmp
imul
mov
mov
cltd
inc
xorb
mov
cwtl
lds
sbb
aaa
and
mov
fimuls
add
dec
cmp
push
mov
xchg
jbe
stc
dec
stos
sbb
test
enter
xor
push
jnp
daa
dec
cs
dec
mov
and
mov
es
out
fcomi
sbb
and
pop
and
test
in
stos
hlt
add
scas
jg
and
inc
mov
fildl
in
mov
inc
sub
mov
test
xchg
leave
or
sbb
scas
jg
push
mov
shl
outsb
jmp
roll
inc
fcmovnbe
xchg
mov
loop
dec
xor
mov
push
jmp
out
stos
sub
dec
xchg
xchg
jge
push
xorb
insl
xchg
aaa
add
sahf
add
mov
ret
icebp
dec
scas
jns
stos
repz
sub
out
dec
andl
or
xor
stos
push
jmp
les
xchg
add
popa
fisubrl
popf
push
sub
stos
dec
fwait
mov
pop
mov
ljmp
pop
cmpsb
add
adc
jno
ret
cmp
cwtl
sbb
pop
gs
pop
nop
mov
out
stos
cmp
add
stos
xor
push
clc
stos
sti
xlat
hlt
aam
ficomps
fcmovu
mov
stos
cmpsl
mov
pop
xor
jno
lock
stos
aaa
cmp
out
stc
adc
and
pusha
sbb
inc
lahf
dec
xchg
scas
mov
xchg
aaa
jg
loope
jne
jmp
and
adcl
mov
mov
push
sub
pop
aad
mov
mov
mov
fildll
and
xchg
gs
out
clc
stos
sub
or
pop
stos
sbb
loope
mov
add
stos
lock
cmc
popf
mov
rcll
cmp
in
xor
shll
push
aam
jns
jnp
stos
in
xchg
sti
repz
aaa
push
inc
mov
rclb
ret
jmp
adc
pop
mov
mov
push
sbb
xor
pop
in
subb
mov
movsb
ljmp
aaa
dec
lea
into
loop
stos
insl
adc
in
mov
popf
cmc
out
adc
mov
pop
jae
sarb
movsb
popa
stos
fwait
pushf
aad
and
stos
mov
adc
stos
lcall
stos
ret
add
out
mov
imul
movl
xchg
cmp
incb
dec
push
xor
xor
xchg
jae
xorb
adc
into
mov
pop
stos
mov
pop
adc
jl
jbe
mov
imul
or
or
stos
popa
mov
sub
stos
aad
dec
mov
lret
add
stos
int3
and
cmc
bsr
aas
adc
add
pop
adc
mov
movsl
xor
stos
mov
xchg
bound
inc
fldcw
jge
xchg
fndisi(8087
out
jl
sbb
lock
lahf
push
insl
imul
stc
hlt
push
ret
xlat
loop
mov
shrb
in
loopne
dec
stos
sbb
sub
ja
fs
fbld
ss
fldl
daa
pop
jmp
sub
stos
xlat
cli
push
xchg
ljmp
dec
cmpl
cmpsl
and
mov
stos
orb
hlt
pop
mov
and
jnp
pop
daa
fsubrs
xchg
orl
fs
xlat
push
and
out
mul
inc
lret
mov
ljmp
mov
mov
xchg
repz
adc
adc
dec
enter
stos
setno
sbb
cltd
cld
jne
stos
insl
sub
fsubs
add
inc
inc
dec
dec
test
xchg
daa
aad
pop
stos
jne
mov
mov
push
loop
int3
les
xchg
stos
push
int
push
in
stos
std
cbtw
adc
ljmp
stc
mov
nop
mov
adc
stos
inc
gs
mov
je
subl
mov
call
jle
adc
ret
mov
arpl
test
stos
mov
lret
sbb
nop
stos
xor
cmpsl
aas
inc
in
shlb
daa
adc
int3
stos
gs
push
out
xor
mov
jo
stos
aaa
xchg
je
lea
stos
in
xchg
stos
int3
insl
jb
mov
cld
stos
pushf
and
mov
push
xchg
adc
stos
outsl
sub
ja
or
xchg
aam
cmp
dec
stos
daa
repnz
stos
lahf
popa
dec
repz
ds
stos
dec
sub
xchg
rcrl
stos
xchg
iret
or
cmp
dec
jne
sub
or
stos
je
ds
push
dec
mov
pop
mov
cmp
mov
cld
xchg
out
xchg
fcompl
lret
push
push
mov
shl
stos
mov
lret
adc
jl
scas
stos
mov
or
inc
enter
test
subl
mov
test
call
stos
pop
mov
mov
pop
cwtl
mov
jo
adc
cltd
dec
stos
cmp
iret
mov
push
shlb
stos
mov
adc
stos
gs
sub
or
shlb
push
mov
pop
decb
aaa
fwait
into
repz
aas
xlat
in
adc
mov
shrb
xchg
push
sub
into
popf
push
stos
dec
les
xchg
scas
cmp
jmp
fs
lock
push
jle
jne
xlat
movsb
inc
cmc
mov
adc
stos
jecxz
repz
jo
xchg
fwait
dec
icebp
stos
xchg
add
lods
imul
mov
push
ss
jae
cmp
pop
js
xchg
in
stos
and
addb
es
stos
adc
dec
pusha
inc
and
push
cs
and
aaa
mov
add
jb
sub
sub
popf
or
sahf
jl
addb
icebp
nop
push
in
test
pop
shlb
hlt
push
outsb
dec
stos
dec
cmc
pop
je
add
scas
stos
std
push
add
xchg
sub
mov
mov
lret
ja
shrl
lock
stos
or
rol
pop
les
repnz
fsubrl
divb
mov
out
push
and
mov
lods
out
mov
outsb
popf
mov
daa
stos
popf
dec
or
daa
mov
decl
dec
mov
stc
fwait
mov
push
mov
xlat
xor
xchg
and
stos
jnp
pop
in
movsl
xor
push
sub
push
rolb
sub
scas
push
xor
push
cmp
sub
cmp
rcr
cmp
stos
aas
dec
mov
cmpb
stos
leave
ret
add
fs
push
fwait
test
xchg
lahf
sbb
sub
stos
fs
dec
push
or
adc
mov
out
out
stos
es
xor
and
push
cwtl
repnz
lret
cmp
mov
outsl
xchg
stos
jmp
sub
mulb
mov
ds
loope
leave
and
or
mov
mov
lcall
icebp
pop
insl
jne
pusha
jbe
mov
arpl
out
ss
aad
pop
fs
daa
sbb
out
ss
negb
addr16
and
adc
ss
jb
push
inc
fwait
addl
cltd
cmpsl
mov
daa
int3
xorb
push
fisubl
rorb
scas
sub
mov
fildll
mov
sub
in
daa
mov
cmp
pop
aam
and
stos
add
cmp
sbb
mov
mov
shl
mul
cmp
sbb
xchg
and
xchg
aam
adc
jmp
mov
mov
xor
divb
jo
and
xor
daa
loopne
fimull
or
add
stos
repnz
push
adc
xor
fldcw
es
in
in
popf
jno
in
fisttpll
icebp
cli
inc
mov
adc
shlb
xchg
adc
rorl
pop
nop
cmp
pop
or
scas
stos
xchg
roll
dec
and
idiv
or
in
fisubrs
ds
and
addr16
stos
sub
insb
pop
jbe
cwtl
fidivrl
stos
enter
dec
sub
stos
mov
mov
push
xchg
add
and
inc
and
xchg
cmp
dec
stos
mov
xchg
test
xchg
mov
ficoms
cmpsb
adcb
push
stos
in
aas
or
adc
scas
mov
das
pop
scas
mov
ds
loop
addr16
cmp
adc
dec
stos
out
adc
icebp
push
sbb
mov
in
imul
test
stos
jae
push
sbb
arpl
jne
dec
pop
jbe
movsb
hlt
cmp
sbb
sbb
mov
jl
pop
adc
lcall
inc
push
sbb
gs
xor
lcall
fidivrs
daa
mov
leave
sbb
loop,pn
xor
or
inc
push
push
mov
mov
jge
jmp
stos
int
push
push
enter
push
mov
pop
dec
hlt
push
pop
stos
call
sbb
and
stos
fs
and
and
loope
stos
ja
sub
mov
fidivl
inc
adcl
cmp
xor
rol
std
adc
push
ds
pop
add
xor
jnp
leave
stos
imul
lds
add
mov
mov
sbb
rcr
dec
mov
sbb
cmp
int3
stos
addr16
inc
add
scas
fsubrs
cld
in
and
imul
mov
push
aas
rorb
cli
subb
push
test
std
mov
mov
cmp
and
pop
arpl
je
mov
mov
mov
pushf
ret
dec
fmul
xor
xchg
mov
xlat
stos
sub
adc
dec
sub
inc
mov
cmpsl
stos
dec
in
cmp
or
and
insb
push
rorb
call
or
call
sbb
jmp
pop
jo
arpl
mov
shlb
popl
je
xchg
nop
cmp
sbb
cmp
add
int3
fwait
neg
ds
and
push
mov
out
test
jb
mov
adc
stos
sub
pop
lea
dec
lods
sub
bound
push
nop
mov
sbb
iret
xchg
stos
loope
loop
ljmp
stos
test
jne
jl
mov
add
aas
scas
lret
sub
cmp
dec
nop
sub
stos
sub
fiadds
mov
aas
stos
test
mov
stc
jp
imul
push
mov
fwait
lahf
fsubrs
sbb
add
adc
outsl
stos
orl
cltd
adc
add
pushf
stos
cmp
rcrb
cmp
fisubl
mov
in
mov
bound
stos
push
lea
jne
dec
rorb
aas
xchg
rcll
lret
stos
popf
push
pop
test
jo
jne
mov
add
cmp
jl
or
jmp
in
jbe
out
cltd
xchg
jp
std
stos
pop
mov
insl
imul
push
icebp
xchg
aam
sbb
bound
addb
mov
inc
push
lahf
pop
sbb
bound
push
add
int3
stos
repnz
pop
rcrb
jbe
outsl
push
jmp
mov
out
stos
insb
and
add
inc
incb
int
stos
xchg
rcr
rcll
cld
jo
or
sub
or
test
mov
jmp
jae
aam
je
adc
cld
push
lods
mov
inc
lret
inc
stos
gs
cmc
pop
push
lods
pop
mull
stos
hlt
mov
push
aad
stos
int
xchg
arpl
popf
shrl
dec
adc
lods
stos
fwait
xchg
out
mov
test
jnp
cmc
loop
imul
imul
or
push
out
imul
imul
push
mov
popf
cwtl
pushf
mov
stos
imul
in
xor
stos
mov
loope
lds
sbb
dec
mov
jmp
sbb
xor
sahf
iret
inc
stos
xorb
ljmp
pop
pop
mov
outsl
xchg
stos
mov
ljmp
mov
dec
jo
inc
push
adc
subl
mov
popf
sbb
repnz
stos
jle
or
cld
scas
push
stos
outsl
test
inc
pushf
popa
mov
daa
test
jg
fwait
sub
int
and
lret
or
aaa
scas
inc
or
imull
outsl
bound
cmpb
cmp
mov
or
adc
xor
xor
ret
xchg
js
sub
cmp
fwait
mov
push
stos
aam
repz
and
sbb
pop
xor
in
out
jns
pusha
push
bound
mov
mov
cmp
fiaddl
stos
xor
and
inc
push
lret
xchg
pushf
push
stos
xchg
add
jb
movsb
mov
pop
jmp
cmp
xor
mov
vpunpckhdq
leave
call
stos
cmovns
subb
inc
cs
dec
mov
scas
xchg
stos
add
lock
stos
outsl
repnz
lahf
xchg
outsb
stos
pushf
jo
mov
stos
movsb
sbb
adcb
call
xor
shrl
jecxz
mov
stos
mov
push
inc
sub
add
lcall
pop
sahf
insb
shlb
dec
jo
stos
out
ret
mov
mov
push
cmc
rclb
and
ret
cmp
mov
or
sub
es
adc
push
jb
into
fnstsw
mov
and
sbb
in
cmpb
xor
jecxz
enter
xchg
dec
inc
push
xlat
or
ffree
mov
sbb
jl
das
stos
xchg
xor
xor
mov
dec
jp
push
xor
adc
inc
cmp
shrl
loop
mov
aaa
mov
call
jb
sub
cmp
mov
jbe
mov
in
or
adc
out
enter
pop
mov
sbb
push
test
in
test
push
mov
lds
fisttpl
mov
mov
jnp
xor
mov
fbld
pop
cmp
orb
adc
dec
lds
jnp
mov
test
frstor
inc
pusha
sbb
stos
xchg
imul
mov
cli
adc
stos
adc
data16
xchg
stos
lods
shl
sbb
stos
dec
sub
pop
fwait
jl
mov
inc
scas
push
pop
stos
in
test
stos
ss
cld
fsubs
mov
stos
xor
test
and
je
or
push
in
shll
sarb
and
stos
aaa
aad
test
push
andl
mov
lea
add
mov
int
push
imul
in
lret
cwtl
out
stos
ret
mov
xchg
inc
out
adcb
jnp
dec
jl
stos
mov
cmp
in
xor
sar
stos
inc
hlt
sub
std
add
ret
sbb
test
dec
inc
mov
jg
and
sbbl
dec
xchg
dec
push
mov
or
es
xchg
test
stos
dec
sahf
pop
fldcw
lea
movsb
pop
lock
inc
imulb
xchg
adc
pushf
mov
cmc
ds
pop
xor
popf
iret
fcoml
mov
inc
fldcw
es
subb
je
jge
inc
jns
cmc
inc
fwait
stos
jmp
mov
jb
repz
imul
cmp
cmp
rolb
fwait
loopne
push
mov
aad
xchg
test
dec
jle
clc
push
mov
dec
sub
ficoms
pop
sbb
es
out
inc
test
dec
stos
push
in
mov
xor
stos
jo
imul
daa
inc
jge
inc
xchg
inc
shr
jne
movsb
mov
addr16
pop
js
mov
push
aaa
mov
cmc
push
nop
outsb
push
cltd
push
popf
pop
stos
xlat
mov
mov
stos
pop
push
fld
adc
inc
sub
xor
movsb
cmp
jmp
cli
mulb
pop
enter
jecxz
mov
or
cli
mov
outsb
sub
stos
jne
shr
addr16
int
adc
stos
pushf
inc
add
ds
imul
dec
in
stos
xchg
test
sub
in
sub
dec
stos
and
adc
push
xchg
stos
mov
jg
pop
mov
imul
adc
data16
xchg
cltd
stos
in
fldl
loope
pop
insl
stos
pop
jbe
pop
pop
js
sub
sub
shlb
pop
daa
minps
loopne
data16
stos
out
imul
push
jnp
xchg
stos
inc
fdivr
fildll
xchg
inc
addr16
jge
pop
xchg
imul
inc
mov
xchg
dec
lock
stos
pop
insl
mov
cmpsb
fdivs
test
ds
jmp
adc
xor
sub
sti
popa
mov
lock
xchg
inc
loop
pop
dec
sahf
imul
cmpsl
pop
sub
test
dec
out
icebp
pop
inc
popf
add
cmp
out
stos
iret
cmp
icebp
jne
sahf
lcall
iret
mov
scas
scas
movsl
sub
sub
pop
dec
stos
jmp
ror
sbb
cmc
mov
mov
fs
shrl
scas
repz
mov
mov
xor
gs
test
inc
stos
pushl
or
movsl
arpl
sub
pop
inc
cmp
stos
leave
gs
push
cmp
mov
pop
push
mov
sbb
test
sub
das
jge
aad
stos
jg
jae
push
add
lahf
test
and
xchg
loop
fwait
inc
in
inc
dec
cli
aam
fnstcw
or
cmp
and
mov
sbb
imul
sub
adc
stos
push
mov
lea
cltd
and
mov
inc
cmpsb
roll
xor
int3
and
inc
stos
xchg
and
test
pop
cs
dec
stos
or
repz
cmp
xchg
stos
ljmp
int3
stos
xchg
loopne
adc
push
inc
rcll
sub
mov
repnz
mov
andb
mov
outsl
insl
ss
mov
dec
xchg
movsb
shrb
outsb
cmp
cs
lea
fwait
push
sbb
movsb
sbb
aas
es
pop
xchg
and
hlt
test
mov
outsl
stos
stos
xchg
sbb
and
stos
sbb
shrl
cmp
fstps
mov
subl
fisttpl
pushl
fists
jle
mov
stos
jne
or
stos
jg
xor
ret
pop
lcall
or
or
out
and
sub
jmp
push
mov
jne
lds
mov
stos
aad
pop
pushf
imul
and
sbb
fwait
iret
jecxz
sbb
stos
push
lods
lds
mov
lret
std
mov
mov
sbb
lods
jb
dec
clc
push
push
je
push
hlt
lods
cs
jp
lret
mov
and
jbe
aam
andb
js
aad
sub
outsl
inc
stos
cltd
pop
stos
subl
sbb
gs
in
xor
test
push
cmpsb
jmp
mov
ja
mov
pop
sbb
lods
push
aam
jge
leave
pusha
cmp
clc
movsb
pop
dec
cmpsl
dec
repz
push
cltd
outsl
xchg
aas
jno,pn
ret
pop
in
adc
pop
jp
mov
aaa
cwtl
mov
push
cmp
arpl
push
lods
ljmp
push
dec
lds
stos
inc
popa
sbb
mov
pushf
jecxz
shrb
fwait
push
lods
inc
stos
mov
push
push
out
inc
out
cld
cmp
stos
std
xchg
and
push
or
fsts
lock
dec
mov
cmp
rorb
stos
sbb
mov
mov
xchg
fwait
pop
xchg
out
loope
loopne
pushf
stos
mov
xchg
cmp
push
lods
and
sbb
stos
mov
lret
jp
mov
xor
nop
pusha
sbb
daa
and
cmpsl
pop
ret
popf
pop
aas
ror
arpl
hlt
sub
stos
push
sub
inc
sbb
stos
add
jno
imul
imul
dec
stc
outsl
dec
lods
push
mov
adc
leave
movsl
jo
push
inc
fistpl
jge
stos
push
add
sub
pop
mov
imul
adc
stos
add
lahf
fisubrl
stos
inc
xor
in
fcomp
imul
hlt
stos
xor
stc
cwtl
mov
ja
imul
mov
stos
andb
outsb
imul
es
xchg
dec
nop
lcall
jo
loope
mov
fwait
stos
dec
mov
mov
fs
test
sub
fucomip
loopne
push
ds
popf
ss
stos
jmp
clc
or
push
jb
xor
sub
int
stos
or
jo
jns
and
jmp
mov
mov
xchg
sbb
jl
add
mov
mov
int3
jae
ljmp
xchg
ss
test
addr16
fbstp
fucom
fsubs
sbb
imul
xchg
add
stos
adc
insb
xor
movsb
enter
popf
inc
mov
arpl
ret
xchg
inc
push
test
enter
lods
add
stos
inc
pop
mov
inc
lods
loopne
stos
movsl
sahf
inc
push
adc
push
pushf
int
inc
call
ret
inc
imul
push
sub
cwtl
dec
mov
enter
fs
in
orl
arpl
jo
or
subl
mov
lods
ret
jmp
stos
outsb
adc
add
cs
js
push
stc
lahf
cli
pop
movsl
push
cwtl
push
sub
mov
sub
adc
jmp
mov
jns
and
mov
dec
daa
pushf
push
outsl
mov
adc
xchg
xchg
or
inc
adc
dec
adc
out
mov
inc
mov
subl
scas
popa
jecxz
jmp
faddp
mov
in
push
sub
mov
stos
popf
sahf
cltd
icebp
xchg
sbb
sbbb
scas
hlt
inc
pop
stos
dec
cld
inc
fists
fwait
and
stos
imul
cmp
stos
add
add
stos
cli
and
insl
addb
cmp
mov
push
sbb
mov
stos
ficompl
inc
push
jmp
ljmp
xchg
jmp
cmc
and
xor
jge
subl
pop
stos
xchg
or
push
lods
push
add
pop
outsl
cld
sbbl
mov
jmp
and
fwait
pop
addr16
iret
cmp
lds
mov
repz
xchg
xor
push
mov
jecxz
insb
test
cli
stc
arpl
dec
mov
bnd
sbb
and
mov
sbbl
lret
jne
sbb
xor
jo
fisubs
bts
cltd
pop
aas
movsb
lds
push
int
xchg
jge
cmpsl
mov
adc
mov
fld
mov
and
xor
fmull
xor
fs
inc
outsb
cs
int3
pop
stos
movsl
in
xor
iret
loopne
jmp
mov
and
ljmp
or
inc
xor
push
stos
cwtl
adc
orb
mov
arpl
into
iret
lock
stos
sub
aam
rorb
lahf
pop
pop
cmp
push
or
test
push
aas
loopne
mov
out
add
enter
or
inc
std
lahf
into
stos
test
dec
xchg
es
mov
stos
imul
cmp
flds
test
test
sarb
dec
fsubr
mov
stos
roll
pop
test
push
or
das
imul
mov
stos
sbb
js
pop
push
and
mov
dec
inc
pop
outsl
cmp
mov
mov
bound
repz
stos
shlb
mov
xor
dec
xchg
inc
dec
jl
fucomip
es
push
push
stos
dec
pusha
popf
mov
sbb
test
addr16
jo
and
push
sti
add
imull
mov
cmp
and
sahf
cwtl
dec
mov
or
inc
adc
sub
mov
stos
add
sub
shr
adc
nop
in
stos
push
mov
and
and
insl
hlt
or
ret
sub
cs
in
xchg
xchg
jmp
and
mov
cmp
enter
stos
mov
mov
jae
aam
stos
pop
cmp
jmp
inc
cmp
jbe
sub
mov
xor
and
ds
push
inc
and
lods
xchg
xchg
lret
mov
jno
fidivrl
xchg
and
xchg
lcall
jecxz
or
stos
xchg
mov
rol
stos
xlat
pop
and
leave
frstor
les
dec
popf
pop
push
jl
lds
in
fwait
movsb
pop
aam
jnp
mov
fdivs
out
sbb
sarb
mov
and
mov
sub
pop
loope
adc
into
jae
pop
or
stos
es
pop
pop
push
adc
jno
mov
and
jge
or
mov
stos
pushf
ror
ss
loope
stos
adc
aaa
je
adc
adc
jbe
fisubrs
cmp
pop
scas
cwtl
stos
jp
fmul
mov
outsb
add
fwait
xchg
dec
jge
add
lret
xchg
ja
popf
jno
repnz
sahf
stos
lods
fsubrl
mov
imul
mov
or
daa
xlat
jbe
ljmp
mov
int3
mov
mov
outsl
lcall
test
sbb
test
cltd
leave
mov
dec
sub
jmp
jmp
lods
not
cmpsb
lret
mov
sub
xchg
popf
iret
and
push
addr16
pop
mov
leave
int
stos
sbb
mov
sbb
mov
jl
cmp
mov
movsb
push
cmp
gs
and
loopne
andb
and
stos
cld
pop
fsubl
pop
fnstsw
int
jmp
inc
les
inc
xor
dec
sahf
stos
aas
icebp
sub
ljmp
jb
fistpl
xchg
pop
dec
push
lret
aam
or
cmp
or
mov
dec
xorb
dec
dec
andl
dec
stos
cltd
lds
aam
or
ja
int3
adc
int
lret
out
push
stos
popf
cmp
mov
push
outsl
bound
inc
dec
stos
mov
aad
jno
push
shrb
fisubrl
ret
mov
out
jbe
scas
sbb
les
jg
cwtl
fisttpl
sbb
ficomps
repz
and
sub
adc
inc
shlb
mov
iret
das
adc
imul
inc
or
notl
sub
and
stos
inc
pop
push
notb
mov
sub
enter
pop
jae
rorb
stos
test
repz
cs
mov
std
xchg
stos
push
stc
dec
in
addr16
and
jnp
stos
inc
add
or
mov
cmp
stos
jge
fisubrs
inc
mov
or
in
std
and
stos
inc
cld
popf
rolb
xor
scas
and
test
adc
adcb
add
aas
sti
sahf
test
fsubrs
cld
mov
in
jl
inc
stos
imul
out
adcl
mov
jecxz
push
sub
stos
mov
cmp
out
xor
sbb
mov
mov
pop
inc
stos
in
jbe
and
stos
aad
shrl
shrl
pop
mov
idivb
mov
shl
push
sarb
dec
xor
push
xlat
ds
pop
test
pop
cld
sub
stos
sub
test
jb
cmpsb
push
cmp
adc
outsl
and
pop
mov
decl
stos
push
fs
xchg
dec
xor
add
daa
out
std
fcmovnbe
stos
mov
imul
or
mov
movsl
pop
adcl
stc
dec
fwait
sbb
repz
or
stos
xchg
sub
stos
jne
fldcw
lahf
jge
lods
scas
cld
cltd
loop
lock
leave
and
xchg
xchg
jecxz
aaa
in
repnz
mov
mov
in
inc
fs
push
inc
mov
push
stos
jnp
adc
repnz
xchg
jmp
xor
or
sti
xchg
push
push
inc
sahf
xchg
mov
stos
aad
dec
fadds
pop
ljmp
lods
pop
mov
jg
mov
xchg
ss
xlat
iret
std
jae
mov
icebp
cwtl
stos
jbe
or
inc
stos
mov
adc
mov
je
jecxz
test
arpl
shlb
adc
test
stos
popf
les
sahf
lods
pop
fisubrs
mov
push
mov
mov
stos
aas
pop
pop
jb
dec
in
stos
dec
and
movsb
mov
mov
jp
jmp
sbb
cmp
call
dec
sarl
xchg
enter
mov
arpl
add
leave
mov
outsl
call
cmc
mov
cld
dec
je
jmp
stos
jmp
xchg
adc
sbb
arpl
test
sub
and
xchg
jmp
jge
mov
fwait
sbb
stos
cmpsl
out
sahf
imul
or
or
mov
stos
mov
out
in
or
dec
repz
dec
cmc
jne
nop
mov
inc
mov
or
stos
fistps
sbb
mov
adc
in
add
stos
push
cmp
dec
aad
jns
stos
dec
movsl
mov
xchg
push
mov
xchg
mov
sbb
jle
add
xchg
mov
jbe
pop
aas
or
scas
repz
repnz
lret
in
shrb
out
sbb
daa
inc
aas
mov
add
xor
mov
lods
mov
stos
movl
leave
jmp
outsb
mov
xchg
or
imul
stos
es
sbb
imul
insb
mov
mov
stos
pop
sbb
sbb
in
inc
fsubl
or
stos
adc
enter
adc
sbb
in
or
push
mov
xchg
push
stos
mov
pop
mov
fs
mov
imul
scas
sbb
out
fbstp
cmpl
xor
adcl
testl
mov
stos
mov
pop
adc
stos
jb
xchg
add
pushf
scas
dec
cmp
mov
mov
subl
repnz
out
mov
or
mull
sti
out
lods
mov
jns
or
adc
push
mov
cmp
mov
jo
stos
inc
mov
sub
leave
xchg
stos
sub
shl
fisubs
push
push
xchg
pop
lahf
cmp
mov
mov
stos
mov
fildl
stos
mov
xchg
jg
test
jmp
test
test
stos
cwtl
test
movsb
mov
push
dec
popa
sbb
mov
push
xor
adc
mov
insb
arpl
dec
sti
jl
mov
xor
add
adc
cmpsl
pushf
mov
fldcw
xor
sbb
mov
mov
sti
outsb
out
mov
sbb
repnz
mov
cmc
xor
jnp
loope
and
xchg
sub
out
inc
pop
aad
mov
mov
push
xchg
xchg
movsl
stos
inc
out
mov
data16
add
or
pop
stos
xor
shlb
jecxz
rcrl
fs
stos
or
mov
stos
push
sbb
imulb
xlat
sbb
scas
push
shll
je
mov
pop
in
dec
push
xchg
pop
les
inc
fisubrl
mov
int3
icebp
adc
stos
mov
js
mov
inc
mov
scas
into
stos
lock
mov
in
mov
ret
in
cmp
jmp
inc
pop
test
into
pusha
fwait
aad
stos
insb
sarl
pop
and
xor
mov
iret
adc
dec
cmp
repnz
iret
mov
add
popf
cmpsl
push
stos
movsl
outsl
dec
ret
imul
xor
stos
cld
jb
les
push
imul
adc
imul
sbb
cmc
or
stos
sub
das
sbb
call
in
imul
jne
mov
cmpsl
stos
dec
jmp
int
stos
jne
popa
mov
lods
push
mov
push
psubw
stos
sub
xchg
mov
lods
frstor
mov
inc
mov
ret
xor
pop
mov
xchg
pop
stc
stos
sub
mov
popf
and
xchg
mov
adcl
sti
cmpsb
jecxz
imul
jno
dec
push
mov
stos
pop
push
outsl
mov
push
pop
clc
std
mov
popf
loopne
cs
daa
sub
mov
ss
mov
stc
push
adc
mov
stos
scas
daa
lods
dec
mov
movsb
sar
xor
push
arpl
repnz
pushf
in
sub
xchg
xor
add
jns
sysret
adc
lret
inc
jmp
jne
std
imul
scas
jmp
push
dec
jns
adc
jb
gs
mov
and
push
push
sbb
hlt
mov
jnp
pop
mov
push
stos
rcrb
imul
movsl
bnd
pusha
into
mov
xor
cmp
mov
stos
pop
adc
gs
sbb
adc
cmc
stc
call
leave
popf
sbb
call
nop
fadd
jg
inc
stos
jp
xchg
clc
mov
xchg
repz
and
negl
jns
mov
push
fwait
inc
dec
repz
stos
popa
cli
jecxz
outsb
mov
dec
mov
sbb
in
xor
inc
addl
dec
xchg
ss
fwait
dec
or
ret
xlat
mov
iret
mov
lahf
test
dec
stos
rorb
jno
mov
stos
cld
xor
sbb
pushf
mov
lods
stos
loope
sti
test
nop
pop
mov
jo
push
inc
sbb
xchg
aam
mov
xchg
iret
fisttps
stos
insb
insl
ja
addr16
mov
add
adc
sub
leave
outsl
dec
adc
sub
xor
xor
cmp
out
add
lcall
leave
fcmovnb
fwait
add
pop
jle
dec
call
test
mov
fsubrs
or
adc
jp
mov
out
adc
cmp
jne
arpl
push
inc
xor
je
ficomps
pop
sbb
pusha
sti
or
cmp
cmp
loope
notb
iret
enter
xor
pop
imul
stos
xchg
sar
pop
adc
and
dec
shrb
add
xchg
jmp
mov
push
out
mov
pop
lea
mov
jmp
cmp
les
repnz
and
xor
mov
xor
mov
mov
stos
hlt
repz
mov
xor
xchg
in
rcr
cld
xchg
jne
pushf
stos
mov
outsb
adc
jl
cs
and
pop
stos
push
ss
adc
dec
and
pop
or
daa
fsubrl
pop
sub
push
xchg
aad
xchg
mov
push
adc
stos
mov
inc
jae
or
enter
jbe
lds
lahf
and
pop
xlat
cmpsl
or
stos
lcall
test
lret
movsl
push
push
mov
imul
outsb
push
lods
and
stos
out
jb
pushf
and
loop
aam
push
push
xorl
insl
scas
dec
jl
mov
adc
sbb
insb
mov
xor
pop
pushf
lods
nop
push
ljmp
dec
popf
push
out
pop
cmp
mov
outsl
stos
adc
and
lods
aad
inc
lds
nop
add
hlt
jmp
xchg
pop
add
push
movsb
test
xor
aad
scas
stos
gs
and
mov
and
jl
jcxz
movsb
lcall
add
decl
inc
in
shrl
pop
xchg
cwtl
jmp
fmul
xchg
xor
inc
clc
pushf
xchg
popf
mov
lahf
testl
pop
repnz
stos
movsb
dec
cmp
adc
ja
push
mov
scas
inc
mov
jl
mov
ljmp
cmp
fsubrl
rclb
insb
fldenv
stc
fwait
imul
add
imul
xchg
insl
inc
sbb
stos
test
test
mov
adc
daa
mov
test
fs
call
inc
test
loope
scas
incl
movsb
push
mov
stos
outsl
dec
jmp
pop
stos
ficomps
pusha
ja
lret
pop
mov
or
cmp
je
mov
lock
sbb
lahf
or
mov
fs
dec
mov
outsl
jg
sbb
ja
mov
xchg
orb
test
mov
stos
rcrl
stos
test
insb
stos
jae
adcl
jmp
imul
fwait
or
lods
test
mov
pop
jecxz
orb
stos
push
std
mov
pop
daa
out
pop
xchg
call
pushf
stos
push
and
dec
xchg
stos
popf
shlb
xor
jle
into
xlat
lret
fwait
mov
lahf
test
pop
call
mov
sub
stc
pusha
stos
loopne
mov
imul
je
stos
test
add
insb
push
test
dec
adc
jl
jmp
pop
ret
popf
js
push
lahf
pop
xchg
rcll
mov
arpl
jae
cs
lret
sahf
push
cmp
imulb
cmp
mov
sbb
nop
in
scas
repz
jmp
rorl
imul
jbe
outsl
fwait
mov
fst
inc
lea
push
leave
mov
mov
or
sbb
mov
push
pop
dec
cltd
in
in
push
popa
mov
cmp
shrb
lods
decl
stos
mov
add
stos
adc
mov
xchg
stos
clc
mov
pop
mov
mov
mov
hlt
xchg
push
inc
stos
push
out
xor
rcrl
fs
or
lock
stos
cmp
in
jns
sbb
mov
repz
mov
aam
adc
push
pop
pop
pusha
iret
leave
sub
mov
fs
dec
stos
in
ja
subb
and
mov
cmpsb
ja
addl
ret
pop
adc
sub
jmp
fucomip
repnz
ficompl
cmpsl
or
dec
sbb
adc
fucomi
inc
lds
mov
stos
cmpsl
dec
pop
sub
lds
ljmp
jecxz
clc
cmp
movsb
mov
jae
loope
sbb
pop
xchg
stos
sbb
mov
stos
stc
inc
ljmp
jl
push
stos
mov
lods
dec
stos
aad
push
mov
std
inc
inc
sbb
pop
int
push
stos
aam
out
call
sbb
adc
arpl
mov
gs
sub
fistpll
xchg
cwtl
xor
xchg
cmpl
mov
arpl
sahf
lret
fwait
shrb
ret
pop
cmc
dec
pop
dec
adc
mov
stos
adc
negb
mov
jmp
or
adc
movsb
sub
fisubrs
lods
xor
stos
test
insb
pop
dec
lret
mov
stos
loop
cld
dec
daa
in
stos
mov
sbb
and
test
fbld
cmp
mov
loope
push
stos
out
ljmp
loopne
mov
jmp
mov
stos
fisubrs
xchg
nop
xor
in
stos
cwtl
xor
xchg
scas
dec
stos
inc
shll
cmp
push
cwtl
xchg
xchg
stos
push
sbb
ljmp
push
ss
fs
scas
pop
xchg
jmp
sub
jne
movsb
pop
push
or
xchg
and
das
lahf
and
push
xor
jmp
xchg
mov
stos
dec
inc
out
jb
lret
mov
stos
test
arpl
imul
sbbl
mov
adc
and
roll
in
js
into
mov
mov
loope
mov
sub
lcall
fs
addr16
jle
add
stos
sarl
jmp
xchg
bnd
iret
cmpsb
inc
jns
adc
es
and
push
sti
sub
xor
cld
xorl
push
push
scas
dec
push
lds
sahf
xchg
mov
stos
push
rorl
xchg
pop
stos
hlt
cld
leave
push
inc
stos
mov
or
jle
mov
pop
push
sub
loopne
jno
shll
push
jl
push
stos
sub
cmpsb
stos
cmp
sti
mov
imul
cs
test
xor
cmp
xchg
xchg
std
pop
imul
pop
and
jmp
popl
stos
mov
and
push
stos
cmpb
cmp
pop
lret
mov
add
hlt
test
pop
push
ret
mov
mov
adc
stos
int
sbbb
lock
jp
push
jo
outsl
xor
daa
push
push
push
pop
aam
sub
stos
arpl
cs
scas
dec
xchg
in
outsb
push
mov
cli
stos
insb
lret
adc
mov
sti
lea
ror
push
and
xchg
cwtl
out
add
ss
xchg
addl
jp
stos
push
sbb
nop
xchg
cmp
jecxz
cmp
add
test
xchg
cwtl
mov
xor
bound
push
stos
outsb
and
add
pusha
dec
sub
stos
mov
and
jmp
dec
dec
add
mov
xor
rclb
into
stos
leave
add
jge
das
pop
scas
imul
dec
scas
fistpl
stos
jbe
sub
and
mov
or
std
popf
cmp
mov
mov
je
fistps
lea
aad
mov
stos
inc
sbb
pop
mov
pop
or
jns
add
stos
aaa
xchg
push
cltd
xor
leave
lret
test
int3
sub
fs
sub
scas
iret
gs
and
xor
add
jge
lret
jle
jmp
xlat
rorl
js,pn
int3
cmp
jae
adc
mov
xchg
ret
rcl
jmp
insb
push
push
fwait
xor
and
sbb
sahf
stos
xchg
out
cli
inc
add
cmp
lahf
inc
xor
aaa
sub
mov
sub
or
mov
negl
cmpsb
aas
in
xor
aad
inc
mov
inc
cltd
lret
stos
or
sbb
shl
scas
mov
adc
or
test
xchg
xchg
rolb
in
adc
fcomp
bound
add
sbb
lahf
insb
add
out
lods
pop
stos
inc
jge
dec
and
cmp
inc
imul
jmp
jns
adc
into
mov
mov
stos
and
xchg
sub
testb
xchg
cmp
xchg
int3
fs
js
sub
lods
sbb
cmp
and
mov
nop
addr16
push
push
jl
mov
shlb
call
mov
sahf
orl
cs
rorl
out
cmp
push
in
fs
cmc
aas
incl
adc
mov
int3
shrl
stos
popf
xor
mov
sbb
sbb
stc
scas
stos
imul
nop
jle
jp
js
or
mov
cmp
mov
xchg
mov
lods
jo
push
push
pop
mov
mov
stos
fisubrl
xchg
push
mov
add
in
sbb
dec
inc
xchg
sbb
clc
scas
jb
lods
mov
sub
je
and
fildll
cmpsb
stos
sub
cs
cmc
adc
lods
fidivrl
ljmp
mov
test
mov
cmp
inc
inc
stos
lea
mov
jge
mov
xchg
xchg
mov
pop
push
mov
dec
in
xor
out
inc
daa
mov
adcl
fs
xchg
fwait
dec
fisubrl
jnp
das
popa
push
xor
xchg
cltd
jle
aas
jecxz
test
cmc
stos
or
lods
ljmp
shll
outsl
and
gs
fildl
mov
mov
scas
mov
inc
fcomp
cmp
stos
in
js
sub
shl
aas
dec
mov
xor
stos
and
adc
xor
cld
stos
pop
je
xchg
inc
cwtl
stos
mov
mov
push
stos
or
icebp
and
stos
mov
jnp
adc
out
stos
push
arpl
push
or
push
call
cltd
roll
loop
imul
stos
sti
movsb
std
push
mov
jmp
mov
daa
stos
int
roll
dec
add
rcll
mov
mov
outsb
add
std
and
in
adc
imul
jge
xchg
cli
add
into
adc
test
xchg
shlb
stos
mov
aam
test
add
fadds
cmp
lods
xchg
push
addr16
les
cld
iret
adc
insl
mov
pop
stos
ret
jo
ljmp
mov
mov
cltd
addl
jb
pop
stos
imul
punpckldq
jnp
cmpsl
adc
mov
repnz
ret
xchg
in
mov
stos
cmp
or
jbe
je
dec
stos
mov
stc
aam
cld
inc
dec
stos
scas
sub
mov
cmpsb
inc
cmp
fldcw
ljmp
stos
xor
and
mov
xchg
xchg
stos
mov
mov
fsubl
jecxz
push
adc
xor
lahf
sub
add
mov
iret
push
dec
cmp
pop
andl
or
or
or
push
movsl
pop
xor
xchg
xchg
push
stos
mov
push
aad
stos
stc
outsl
std
gs
shll
sub
adc
lods
or
mov
loopne
scas
xor
inc
stos
sub
pop
out
xchg
sbb
stos
mov
cmpsb
subl
jl
lcall
cli
and
test
pop
push
stos
xor
lea
out
inc
mov
ja
or
dec
xchg
stos
lahf
pop
mov
test
imul
aas
jle
xchg
fildl
das
or
xchg
lds
push
imul
fwait
int3
mov
pop
cwtl
bound
xchg
jmp
call
icebp
inc
stos
cmp
sbb
pop
repz
xchg
in
ljmp
stos
sti
test
xchg
test
dec
cmp
std
inc
arpl
push
pop
stos
ljmp
stos
es
xor
or
loopne
scas
sbb
icebp
lahf
cwtl
xor
mov
push
xchg
pop
imul
arpl
lods
fwait
sarl
inc
sub
loope
xchg
ds
idivl
arpl
jl
popa
and
movsl
jo
mov
insl
call
inc
dec
subb
in
jbe
addr16
in
call
xchg
stos
cmp
gs
mov
cld
fstl
push
pop
jl
stc
in
stos
out
negl
lea
dec
popf
stos
add
lahf
jg
inc
xor
mov
mov
imul
cmp
mov
ret
pop
inc
mull
and
fisubrl
cli
sub
rcrl
ficomps
mov
cltd
jmp
or
jno
lea
daa
gs
test
mov
jnp
jmp
or
jbe
fisubl
leave
scas
and
stos
xor
js
mov
xchg
in
jmp
std
sbb
add
cmp
adc
stos
pop
pop
add
stos
push
lahf
mov
and
int
xor
fwait
pop
jge
mov
cmp
je
stos
mov
loope
pop
sahf
cs
mov
sub
insl
fnstcw
out
stos
out
and
test
daa
mov
mov
fildll
inc
jle
inc
xchg
shlb
stos
ret
lods
sbb
mov
adc
mov
gs
cmpsb
cmp
sbb
divl
stos
mov
test
push
sub
mov
mov
jmp
aad
lret
dec
lea
mov
flds
call
imul
mov
xor
or
and
push
sti
xchg
stos
mov
outsb
jp
or
dec
movsb
ret
push
adc
lret
inc
scas
adcl
js
pop
jecxz
sub
and
push
or
and
mov
xor
jb
scas
outsl
dec
shr
push
inc
jmp
sbb
push
test
ja
push
pop
mov
mov
enter
xchg
aad
outsl
movsl
push
popf
loopne
lahf
inc
or
or
inc
repnz
lret
nop
es
ret
stos
cs
loope
popa
add
aam
add
jl
jle
mov
lods
std
pop
push
sub
sarl
or
pop
dec
jmp
cld
enter
stos
push
lds
scas
cmpsb
data16
lods
sbb
enter
in
mov
outsl
iret
and
add
xchg
shr
jbe
imul
stos
pop
cmp
mov
nop
in
loop
cmpsb
or
mov
insl
mov
mov
subb
mov
push
sub
test
je
shlb
stos
inc
sub
pop
mov
mov
mov
adcb
sub
xchg
xor
and
adc
push
insl
subb
cltd
pop
pop
into
sahf
stos
xchg
rclb
inc
jo
addl
mov
sub
into
imul
inc
adc
stos
sbb
and
cmp
rolb
cmp
jmp
mov
andb
test
stos
jg
loope
out
cltd
mov
xchg
pop
arpl
jno
test
push
and
adc
stos
lock
xor
inc
in
ret
fistpl
test
jg
pushf
sbb
push
or
movsb
stos
mov
imul
iret
out
lret
xchg
pop
add
jno
mov
push
mov
dec
cmc
mov
leave
jg
jno
stos
xchg
add
mov
stos
and
xchg
fimull
movsl
iret
jge
mov
jns
out
fwait
inc
and
pop
stos
mov
and
repnz
push
adc
stos
jbe
mov
mov
fstps
std
enter
sbb
adc
stos
dec
adc
iret
push
sub
loope
pop
setne
dec
in
stos
inc
sbb
jo
les
xchg
xor
jg
xchg
xor
gs
in
les
jp
loopne
jmp
stos
addr16
jnp
scas
add
cmp
into
loop
or
sbb
mov
ret
push
or
icebp
cltd
xor
jmp
stos
mov
push
pop
cmp
mov
inc
jnp
data16
xor
jp
pop
lret
shrl
cwtl
decb
dec
sub
stos
in
push
rclb
negl
jge
mov
sti
in
mov
imul
imul
mov
or
add
cld
cvtps2pd
mov
mov
jns
stos
cmc
or
not
rcll
outsl
stos
scas
push
clc
xchg
cmp
add
add
push
mov
xchg
and
adcb
mov
scas
ja
loope
inc
sub
sub
xchg
scas
xchg
gs
mov
pop
jge
stos
push
mov
daa
stos
dec
pop
cmp
mov
cli
imul
cmp
pushf
stos
adc
pop
stos
imul
lock
cmp
movsb
sbb
xlat
mov
lock
jle
adc
xchg
or
aam
and
or
push
mov
pop
mov
xor
dec
cmpl
push
das
movsl
scas
push
mov
cltd
daa
cwtl
jle
hlt
daa
in
push
ja
mov
sub
push
stos
int
cmpsb
and
daa
rolb
lds
xchg
movsl
cld
rorl
mov
mov
stos
sub
flds
addb
jecxz
das
mov
jbe
xchg
fwait
dec
stos
add
iret
dec
cltd
idivl
stos
lods
fdivp
fs
xlat
cld
imul
and
pusha
pop
imul
xchg
lret
jmp
push
mov
cld
cltd
dec
les
data16
mov
mov
loopne
call
cs
push
movsb
sub
mov
jbe
daa
pop
sti
xor
repz
movsl
ret
cmp
stos
push
aaa
leave
jae
jl
push
lods
pop
stos
push
jb
add
sbb
push
pop
pop
xor
xchg
inc
shl
mov
mov
movl
xor
ss
stos
cli
jns
lock
add
stos
inc
ficoms
hlt
mov
xchg
fwait
addl
outsl
addl
mov
jmp
cli
mov
push
nop
sbb
mov
out
mov
mov
lock
adc
pusha
push
push
or
mov
ds
cmp
stos
mov
leave
sbb
jecxz
push
imul
mov
stos
mov
xor
movsb
mov
push
mov
in
cmp
movsl
fldt
sub
pop
clc
insl
in
int
lret
nop
cmp
nop
mov
pop
inc
out
mov
mov
int
sar
jmp
insb
lods
pop
mov
mov
js
xchg
cld
popf
stos
jg
inc
dec
mov
jmp
loope
sub
aam
cmp
jo
push
jmp
dec
lea
lret
imul
jmp
stos
cmc
mov
sub
stos
or
push
or
or
es
mov
loop
mov
jb
push
mov
xor
inc
daa
daa
adc
mov
jle
jbe
mov
push
arpl
push
je
stos
mov
clc
daa
lret
lods
sbb
xchg
push
sbb
imul
xchg
mov
stos
xchg
scas
scas
test
test
nop
stos
outsl
out
test
dec
and
stos
push
lahf
gs
stos
jecxz
test
stos
adc
loope
jg
int
jmp
cld
and
xchg
repnz
and
mov
hlt
leave
adc
enter
stc
push
inc
out
mov
inc
imul
inc
lret
inc
into
popf
and
inc
call
push
push
je
jg
jp
lcall
aam
dec
stos
out
jl
xchg
or
ljmp
sbb
std
scas
mov
fidivs
xchg
xchg
shlb
scas
push
pop
gs
xchg
add
cmpsl
dec
movsl
inc
into
stos
xchg
add
push
sbb
mov
jb
and
push
jecxz
mov
stos
lahf
inc
or
sub
fldcw
rcl
xchg
inc
stos
push
or
scas
adc
cmp
sub
gs
stos
iret
mov
loop
pop
in
lahf
stos
mov
pop
test
stos
jne
fsubs
mov
int
jmp
adc
cli
lea
rcll
les
lds
mov
rep
xor
push
and
lea
dec
addr16
cmpsb
jae
stos
sub
lods
mov
or
rcll
mov
sub
push
mov
cmp
test
inc
out
xchg
aas
add
xchg
lods
fwait
and
outsb
stos
jb
pop
mov
ds
iret
rcrb
stos
cld
lahf
cmpsl
inc
lea
ljmp
push
add
stos
cmp
adc
gs
sbb
mov
out
rcrb
mov
push
mov
outsb
sti
ror
je
xorl
push
hlt
lods
adc
cmpsl
les
cmp
sbb
cmp
xor
xor
inc
stos
and
repz
inc
cmc
push
inc
stos
mov
sub
clc
jno
cs
andb
xchg
cmp
shrl
fstpt
js
nop
jmp
dec
adc
je
cwtl
inc
enter
mov
or
cld
arpl
cmpl
and
jno
out
dec
ret
mov
add
cmp
addr16
adc
imul
xchg
jle
lret
scas
jne
inc
push
adc
jae
add
out
outsb
lahf
imul
stos
xchg
dec
mov
arpl
into
jecxz
lret
sbb
dec
mov
jp
push
and
and
sbb
sbb
push
stos
adc
cs
aaa
xchg
mov
add
push
cli
lahf
jno
push
dec
nop
aas
xor
add
movsl
out
aaa
inc
or
scas
mov
into
mov
cmp
push
mov
jae
stos
add
fstps
test
adc
iret
popf
and
stos
clc
sbb
mov
in
dec
stos
out
cmpb
push
mov
das
test
mov
ficoms
stos
pop
xor
adc
adc
or
pop
rcr
jmp
arpl
xor
repnz
cmp
mov
cli
and
roll
push
pop
stos
inc
mov
mov
stos
aas
js
cmp
popl
xchg
fistpll
and
stos
aaa
cmp
loope
xor
imul
cmc
cld
aam
sub
cmp
das
iret
clc
mov
fwait
xorb
dec
subl
stos
testl
imul
jp
jle
in
xchg
leave
or
stos
xchg
and
mov
repnz
cld
xorb
push
dec
inc
and
pop
stos
sti
inc
cmc
pop
mov
jl
imul
xchg
inc
jge
and
sbb
mov
sar
pop
insl
adc
fmull
sbb
mov
or
mov
sub
sbbb
out
mov
pop
xchg
and
gs
mov
mov
stos
pop
jae
dec
lret
and
adc
mov
xchg
dec
stos
iret
mov
rcl
dec
imul
sub
aas
insl
mov
pop
stos
jl
addl
xor
rcrb
arpl
lret
cmp
cmpsb
stos
jb
in
push
insl
aad
push
mov
das
adc
dec
dec
lds
stos
mov
mov
stos
and
sahf
xor
jg
stos
incb
pop
or
cmp
testb
js
lret
add
pop
lods
clc
stos
or
mov
in
leave
insl
iret
and
mov
xchg
xor
hlt
xchg
les
or
addr16
stos
xchg
add
fdiv
jp
cwtl
les
lcall
js
fsubrl
pushf
and
sub
orb
mov
pop
xchg
mov
sbb
arpl
stos
nop
jle
sti
push
insb
test
pop
loope
add
sub
imul
mov
cmp
inc
movsl
cmpb
imul
fsubrp
sub
mov
sub
xchg
push
inc
cld
loopne
stos
pop
pop
push
pushf
test
stos
adc
mov
aad
or
scas
push
dec
stos
add
fistpll
stos
lock
push
push
lea
mov
or
pop
push
mov
mov
dec
cmp
nop
mov
loopne
insb
lea
in
or
jno
push
ja
psrad
adc
std
test
and
popl
push
lods
add
cmpsl
push
push
mov
jl
jns
and
mov
push
xor
loopne
repnz
mov
jmp
add
js
fwait
psubusw
shrb
mov
cmpsl
sbb
mov
push
push
cmp
mov
xchg
ficoml
stos
int
xchg
dec
cwtl
mov
mov
jmp
movhps
push
scas
outsb
cmp
dec
add
daa
lret
cmp
test
xor
scas
jmp
fcompl
cld
and
inc
stos
in
outsl
test
imulb
bswap
pop
mov
popf
std
jae
lods
gs
stos
sub
mov
pusha
stos
sbb
js
fiaddl
stos
stos
dec
pop
jnp
imul
sbb
movsb
daa
mov
flds
add
pop
xchg
sti
leave
lcall
push
xchg
clc
fadds
or
stos
iret
outsb
sahf
rolb
jg
mov
mov
out
inc
addr16
push
sti
lret
fwait
add
adc
dec
out
js
aam
mov
push
push
jecxz
lds
mov
popf
push
stos
fs
xchg
mov
fwait
jns
movsb
cmp
es
or
mov
mov
add
jmp
push
jmp
and
fsubrl
jg
stos
sub
rorl
iret
pop
stos
in
pop
iret
loope
mov
mov
push
sbb
das
out
fyl2xp1
roll
lods
xchg
mov
rcrl
mov
call
stos
cld
jp
xchg
mov
movsb
jo
in
mov
jl
std
ljmp
xchg
add
pusha
das
push
or
cld
mov
dec
or
xchg
inc
jnp
stos
xchg
or
fisubrl
pop
pop
sub
mull
push
fwait
xchg
scas
fiaddl
stos
mov
dec
sub
jle
in
stc
popa
mov
and
xchg
lea
aaa
cwtl
pop
cmp
insb
jo
sarl
sbbl
leave
ljmp
jmp
inc
pop
mov
stos
idiv
shlb
ja
mov
dec
xor
mov
dec
cltd
cmp
and
mov
xor
es
jo
fiadds
xor
stos
cmp
fucom
stos
or
mov
mov
cmp
in
test
stos
sbb
jl
sbb
sbb
push
mov
popf
cmpsl
stos
mov
inc
call
addl
pusha
adc
adc
stos
jmp
inc
dec
cmp
or
push
mov
adc
std
pop
stc
mov
ds
inc
loope
stos
and
cmc
fcos
stos
mov
sub
pop
xor
addr16
clc
push
lret
push
inc
sbb
insb
imul
xchg
mov
into
mov
jnp
pop
stos
fnstenv
cmp
jmp
js
hlt
pop
cli
and
arpl
pop
or
pop
mov
inc
stos
in
imulb
cmp
ror
ljmp
imul
xor
fidivs
cs
in
ret
out
stos
inc
andb
stos
lods
cmp
xchg
dec
addr16
in
adc
mov
sbb
fwait
call
arpl
std
stos
xor
sbb
stos
mov
and
pop
push
clc
stos
adc
ljmp
setns
faddl
pop
push
subl
mov
xchg
test
sahf
or
out
aam
cmpsb
in
jle
xor
rcl
sti
sbb
pop
mov
stos
inc
jno
xor
mov
sbb
scas
push
mov
cmpsb
mov
cwtl
outsb
cmp
arpl
loope
nop
jmp
jns
jge
xor
lea
mov
push
and
push
cmpsb
adc
jge
lret
mov
cmp
inc
cmp
js
rorl
xchg
add
lcall
sbb
jnp
cmp
cmp
cli
cmp
mov
jae,pn
adc
xor
and
inc
sti
das
dec
stos
ds
in
addr16
sub
cmpl
rol
jge
stos
ret
xor
mov
lods
mov
out
adc
mov
mov
xchg
xchg
in
stos
push
fdivrs
jmp
jmp
adc
filds
sbb
stos
lahf
es
inc
jl
lods
movsl
adc
stos
mov
jle
rcrl
mov
rcrb
adc
stos
mov
inc
xor
insl
into
mov
in
jnp
mov
rclb
pop
sub
stos
and
inc
xor
and
xlat
test
stos
push
stos
pusha
xor
add
test
fwait
out
jg
ret
sbb
out
mov
shrl
lea
test
imul
xchg
fwait
cld
sarb
stos
or
fcmovnbe
mov
dec
xchg
insb
stos
ret
adc
test
ljmp
sub
add
out
mov
cltd
push
mov
into
adc
aad
dec
int3
add
sbb
xor
mov
into
fdiv
stc
loope
stos
sbb
mov
rcrl
push
cmp
push
and
stos
jl
cmpsl
mov
adc
jbe
and
frstor
stos
and
inc
sbb
scas
xor
in
stos
sub
or
arpl
ret
dec
push
sbbb
roll
push
jnp
ja
mov
stos
lahf
cmp
in
stc
cmp
test
fdivp
popa
and
scas
cmp
mov
loop
mov
call
mov
ljmp
bound
faddp
mov
pushf
xchg
stos
lds
into
sbb
clc
jbe
ja
sbb
xchg
fs
stos
mov
mov
jne
stos
test
push
lret
xchg
jbe
std
dec
jl
xor
and
imul
lcall
in
inc
sbb
stos
push
popa
insb
out
aaa
mov
jae
lret
outsl
pop
in
and
sub
mov
movsl
fiaddl
mov
mov
push
icebp
stos
xchg
sbbb
xchg
sub
pushf
inc
stos
or
jmp
xor
adc
sub
cltd
sahf
lds
jnp
rep
pop
es
dec
jmp
imul
push
add
xchg
roll
jmp
lcall
in
and
shll
xchg
pop
fwait
cmp
push
in
negl
add
jp
sbb
or
out
inc
mov
stos
mov
imul
fwait
stos
jb
movsb
jmp
adc
push
pushf
xor
xchg
mov
push
cmc
bound
cmpsl
das
and
jne
stos
into
xor
subl
leave
push
stos
and
ret
mov
add
mov
std
pop
cmp
lcall
stos
lea
stos
in
icebp
bound
gs
loope
stos
ja
jbe
xchg
sti
pop
cmp
mov
jl
cs
or
push
xchg
jo
test
mov
stos
mov
or
stos
mov
popf
jecxz
stos
js
jbe
dec
and
jno
jp
xchg
loope
jns
xchg
stos
ds
xor
pop
pop
in
mov
inc
mov
and
fwait
and
sbb
je
pop
mov
xchg
addr16
add
pusha
out
aam
jae
cmp
push
and
std
imul
ja
ss
stos
cmp
in
popa
jle
fisubrs
sub
ret
lea
scas
loope
jp
dec
inc
nop
push
stos
aam
push
inc
fsubrs
js
outsb
aaa
or
xor
daa
lahf
mov
push
cmpsl
shrb
xor
scas
mov
cmp
stos
call
lods
or
lods
stos
stos
mov
sbb
fists
add
inc
mov
subb
data16
in
movsb
aam
mov
xchg
shrb
pop
jns
jl
push
fldt
test
sbb
push
movsb
pop
mov
add
mov
pusha
and
lods
pop
mov
mov
xchg
xor
stos
pop
ficoml
xchg
add
stos
rorb
sbb
mov
mov
jmp
or
sub
fadd
mov
stos
fidivrl
cmpsb
xor
cltd
mov
and
and
adc
movsb
adcb
cmpsl
movsl
jmp
pop
push
xchg
dec
sti
stos
aam
pop
push
xchg
test
rol
stos
loopne
lahf
cmp
stos
xchg
inc
test
mov
mov
std
loop
jge
and
cltd
stos
adc
pop
stos
out
dec
nop
iret
aad
pushf
mov
jle
mov
into
out
dec
jmp
dec
ret
mov
sbbb
inc
loop
int3
fnsave
call
shrb
push
xchg
pop
popa
cmp
sub
add
shr
fdivl
stos
inc
add
dec
lret
lods
stos
mov
mov
jge
mov
leave
adc
out
xchg
into
call
push
add
xchg
push
and
or
mov
stos
out
inc
mov
stos
decb
dec
dec
and
xor
fucomip
in
sub
ja
stos
std
imul
stos
in
fadd
and
add
jns
mov
pop
gs
test
xorl
popa
pop
jmp
rolb
mov
stos
aam
ror
pushl
inc
xchg
cmpsl
aaa
lods
test
loopne
push
test
daa
stos
pop
das
xchg
or
add
loop
push
mov
stos
mov
adc
or
mov
and
jnp
lcall
fldenv
cmc
movsl
out
adc
mov
in
js
xchg
push
sbbb
mov
scas
mov
mov
xchg
lds
movsb
cmp
cmpsl
daa
adc
mov
punpcklbw
pop
cmc
stos
cli
mov
cmp
sub
into
push
jl
testl
stc
loope
lods
push
mov
push
pop
dec
aaa
jecxz
in
cmp
mov
adc
mov
push
add
cmpsl
cmp
imul
stos
push
sub
std
arpl
int
stos
rcll
movsb
out
cltd
dec
cmpsb
icebp
adc
pop
in
mov
mov
sbbl
cmp
jae
loopne
push
stos
inc
outsb
mov
addr16
stos
imul
fbld
or
push
pop
movsb
or
add
cmp
lret
mov
rorl
xchg
xchg
jl
in
or
sub
dec
scas
outsl
imul
add
pop
test
ror
stos
aad
popa
lret
mov
iret
stos
cmp
add
jne
subb
icebp
fs
lds
arpl
stos
rorl
shrb
and
shlb
push
imul
sub
sub
xor
arpl
into
mov
jae
xlat
adc
stos
lds
mov
mov
fwait
dec
addr16
nop
adc
stc
stos
mov
xor
pop
pop
xchg
enter
xchg
fs
add
mov
addr16
xor
dec
dec
repnz
xchg
subl
stos
sti
xchg
stc
iret
push
xchg
inc
mov
stos
arpl
dec
and
push
sti
es
pop
stos
out
mov
stos
movsl
push
or
mov
cmc
movsb
push
sub
push
and
in
dec
loope
into
pop
out
loopne
mov
jbe
inc
mov
pushw
mov
mov
loope
out
sarb
cli
xchg
rep
das
ret
sub
into
push
pop
inc
mov
xchg
hlt
popa
xchg
lods
stos
js
mov
dec
loopne
cmc
sub
stos
cmp
dec
xlat
jmp
jne
mov
pop
add
data16
out
stos
mov
dec
cmp
addr16
lcall
mov
stos
fisubrl
int
imul
and
mov
stos
movsl
cltd
cs
shrl
jae
dec
jmp
stos
andl
mov
stos
mov
xchg
jg
mov
jge
mov
push
leave
fistl
pop
sti
xor
cwtl
adc
ljmp
pop
cmpsl
fnstcw
jnp
stos
aas
push
xchg
adcb
and
mov
push
in
daa
lods
cmp
sub
stos
jl
or
cld
fisubrs
fwait
mov
imull
outsb
sub
repz
lock
mov
cmp
pusha
aaa
hlt
pop
mov
icebp
scas
loope
inc
int3
stos
sub
add
ds
out
adc
lock
jno
inc
cmc
push
adc
mov
xchg
mov
lcall
bound
xor
int
stos
sti
test
cld
jecxz
fsubrl
andl
call
cli
lret
jl
mov
mov
mov
add
stos
pusha
dec
mov
scas
or
movsb
sub
outsb
mov
rcll
shll
dec
jle
test
xchg
loopne
xlat
jge
not
stos
mov
push
imul
nop
xchg
test
pop
cltd
push
mov
test
stos
xor
mov
stos
imul
fsubrl
lods
sub
je
mov
pop
outsl
cmp
pusha
out
std
rorb
dec
lcall
inc
adc
jnp
ret
scas
inc
movsb
sub
aam
push
scas
sbb
push
stos
xchg
fadd
jmp
stos
or
inc
cmc
pop
stos
xor
sbb
inc
daa
xchg
push
push
sbb
sbb
out
dec
cmp
shrl
hlt
cs
addr16
mov
popf
mov
dec
movsl
stos
jo
dec
push
inc
fnstenv
clc
stos
sbb
mov
scas
jge
mov
stos
mov
and
in
jmp
and
lds
mov
xor
xchg
jb
xchg
scas
lahf
ret
outsb
and
test
xor
xchg
cmp
dec
jmp
lods
push
cltd
clc
movsb
stos
lds
call
loope
fstl
mov
daa
mov
xlat
fimuls
add
test
dec
aas
mov
xchg
mov
and
sbb
jg
xchg
cwtl
sub
mov
scas
xchg
stos
mov
pushf
dec
dec
push
sbb
cltd
fadds
push
shrl
stos
push
xchg
jo
xlat
mov
ljmp
pushf
mov
adc
jmp
inc
mov
les
ja
mov
test
stos
fisttps
insb
repz
mov
sbb
mov
fnstcw
hlt
stos
in
into
mov
stos
sbb
xlat
mov
stos
adc
lcall
sub
test
xchg
sub
pop
hlt
cmp
add
jae
mov
ret
inc
test
dec
xchg
test
sbb
stos
repnz
stos
add
das
push
cmpsl
in
arpl
iret
movsb
fs
pusha
mov
inc
xchg
or
sub
ficomps
adc
insb
jmp
add
mov
stos
pop
xor
inc
mov
push
push
testb
and
stos
pusha
push
mov
adc
fistl
imul
stos
idivb
into
and
sti
lods
xchg
lods
inc
xchg
jae
ret
outsl
addr16
push
mov
testl
lret
ljmp
dec
push
mov
inc
push
inc
stos
clc
decb
pop
mov
jmp
lahf
jle
jecxz
in
fwait
mov
mov
stos
mov
pop
mov
icebp
rcrb
data16
cwtl
in
xor
or
xchg
pop
movsl
stos
sbb
jns
push
test
mov
in
movsb
xor
cwtl
icebp
sbb
mov
stos
adc
or
fisubrs
jge
mov
or
pop
push
xchg
sub
shr
mov
mov
pop
push
jnp
mov
jbe
in
mov
pop
add
stos
push
fstp
fistl
mov
js
dec
and
testb
xchg
dec
pop
shrb
fstpt
in
leave
pop
cmp
scas
popa
xchg
and
stos
pop
mov
xor
lds
inc
mov
ret
into
pop
ja
inc
pop
dec
stos
sub
cmp
std
lods
and
jne
scas
outsl
sub
lods
xlat
stos
push
dec
or
xor
fisubrl
adc
push
into
or
jecxz
movsb
fs
imul
cmp
std
stos
or
inc
dec
fsubrl
jle
xchg
ljmp
test
outsl
add
repz
dec
fisubrl
pop
mov
stc
cmc
dec
jle
je
ljmp
mov
outsl
mulb
mov
stos
aam
push
es
insl
aad
ljmp
jecxz
loopne
jo
fsubrl
or
mov
push
daa
dec
mov
jl
cmpsb
add
adc
xor
pop
sub
lods
cwtl
stos
fchs
les
push
xor
and
jl
jle
push
xor
std
sub
inc
ret
mov
aaa
xchg
dec
es
mov
stos
push
and
je
mov
cld
clc
movb
loope
aad
in
ja
jo
adc
inc
dec
stos
mov
das
inc
xchg
push
mov
or
int3
adc
xchg
push
or
movl
leave
movsb
pop
fld1
addr16
repz
or
mov
push
aaa
xchg
xor
or
dec
stos
cmp
mov
stos
mov
int
aam
enter
push
add
sbb
mov
cltd
push
xor
lahf
subl
mov
mov
add
pushf
fwait
cmc
out
sbb
stos
imul
lahf
fsubl
int
and
mov
push
cld
out
lret
push
or
nop
dec
push
decl
lea
jb
fnstenv
xchg
jae
je
or
imul
pushf
jle
jnp
inc
dec
sahf
dec
mov
mov
adc
cmp
xor
sahf
xlat
movsb
mov
ret
inc
mov
sbb
cld
stos
loop
pusha
sub
cmc
mov
repnz
or
sbb
mov
jno
or
pop
lea
jbe
stos
imul
or
xor
lcall
mov
nop
add
push
movsb
scas
int
lods
cwtl
or
or
or
adc
out
sub
jmp
pop
pushf
push
mov
lods
mov
in
aam
inc
test
jl
mov
push
scas
sub
jecxz
fs
mov
sbb
stos
arpl
or
xor
jg
push
add
and
mov
jl
mov
mov
inc
dec
mov
in
rorb
stos
pop
hlt
nop
and
fldcw
fisubl
nop
pop
stos
jp
rcrl
add
mov
cmpsb
ja
test
arpl
sbb
and
jl
adc
xchg
push
sub
movsb
sbb
push
mov
stos
inc
stos
lret
testl
gs
cli
jne
xchg
popf
in
in
mov
add
test
lahf
cmp
xor
mov
lock
pusha
push
iret
outsl
lret
movsl
push
cmp
xor
jae
fnstsw
sub
sti
lcall
cwtl
cmp
stos
imul
sub
mov
push
in
mov
mov
lcall
cmpsb
pop
cltd
test
in
das
stos
pusha
aaa
xor
aad
mov
add
pop
gs
mov
mov
movsl
fnstcw
push
addr16
pop
dec
sbb
stos
xlat
mov
cwtl
xchg
fildll
jmp
mov
jmp
mov
sub
inc
repz
sub
stos
pop
dec
and
mov
push
fst
inc
push
adc
cmc
icebp
shrl
sbb
push
jns
mov
sub
sbb
xor
in
xchg
sbb
cmpsb
pop
or
ret
stos
inc
jl
fcmovnu
sbb
add
or
or
in
adc
inc
shrl
sti
mov
jmp
mov
bt
imul
dec
stos
dec
fsubp
pop
hlt
push
movsb
xchg
lock
bound
arpl
imul
mov
cmp
jge
mov
stos
lea
clc
cwtl
cmp
sub
imul
bound
dec
stos
mov
cmpl
lods
andl
clc
mov
cmp
add
jmp
mov
push
movsb
and
bound
fwait
adc
jl
stos
dec
mov
mov
int
dec
lods
or
lcall
filds
stos
cmp
xchg
scas
xchg
push
paddsw
icebp
xor
or
mov
xchg
lret
cwtl
sbb
cmp
push
mov
inc
imul
dec
push
lea
insl
mov
stos
jecxz
mov
mov
es
sbb
imul
push
in
inc
mov
les
mov
pop
cwtd
popf
add
sub
pop
adc
fcomps
mov
jbe
loopne
iret
into
inc
in
jb
imul
and
xorb
cmp
stos
ja,pt
or
dec
or
fists
js
mov
enter
lea
inc
mov
into
cmp
lahf
jp
fcmovbe
mov
stos
fsubrl
jb
stos
cmp
dec
inc
push
push
test
push
sbb
inc
mov
cmpsb
xchg
sub
shlb
or
stos
and
fsubl
fstps
xchg
add
aad
fsubl
insl
out
fs
imul
inc
sbb
xchg
inc
sub
add
je
and
xor
inc
stos
bound
mov
mov
inc
inc
inc
mov
stos
cmp
mov
inc
das
shrb
ds
stos
xchg
mov
xlat
sub
or
imul
sbb
pop
stc
stos
cmp
mov
jle
jo
fcomps
test
iret
xchg
pop
adc
sub
add
jae
cwtl
notb
stos
popa
dec
into
imul
dec
mov
hlt
push
jg
scas
pop
push
out
mov
jge
mov
sbb
stos
js
jne
pop
scas
jl
addb
in
pop
add
faddp
dec
push
stos
insb
sbb
mov
stos
lock
add
sahf
add
xchg
mov
stos
fldcw
imul
ret
and
and
stos
xor
dec
outsl
fwait
aad
shll
adc
aaa
je
mov
push
cmpsb
push
jns
dec
mov
sbb
je
dec
loop
test
mov
lods
daa
in
mov
jns
in
stos
stc
jecxz
imul
or
stos
lret
cld
out
jnp
cmp
stos
and
testl
mov
cmpl
lock
cmp
rolb
mov
add
arpl
dec
scas
sub
stos
inc
mov
pop
and
mov
adc
jle
test
fwait
in
sub
iret
mov
adc
stos
cld
rclb
pop
xchg
add
ljmp
mov
xchg
stos
push
pop
pop
sub
imul
loop
cmc
scas
shrb
out
xchg
sbb
pop
cmp
addl
pop
and
jge
jl
mov
inc
xchg
pop
out
mov
fisubrs
cmc
pop
xor
ret
mov
stos
add
lods
pop
push
iret
stos
shlb
jg
lds
data16
jp
add
cmpl
pop
stos
xchg
xchg
outsl
imul
mov
xchg
test
jo
jge
shrb
mov
daa
clc
dec
xor
jmp
mov
xchg
cs
add
in
andb
xchg
jmp
dec
daa
fs
scas
rorl
out
int
fildl
jnp
into
ja
push
stos
hlt
dec
mov
and
fs
mov
jmp
or
shlb
pop
mov
popa
sub
xor
stos
testb
out
bound
push
stos
dec
fwait
or
outsb
and
mov
lock
cmp
mov
and
inc
imul
stos
mov
inc
enter
stos
test
sbb
pusha
mov
fiaddl
cli
scas
and
stos
lcall
pop
inc
and
cmp
loope
cltd
xchg
out
shll
mov
subb
adc
loopne
jmp
mov
and
push
das
repnz
push
data16
jbe
mov
iret
cmc
popf
sarl
add
mov
mov
sbbl
cmp
sub
insb
sbb
pop
pop
mov
adc
dec
mov
pop
xor
push
stos
push
ret
ss
aad
add
fstp
subl
stos
imul
mov
xchg
add
cmp
fimuls
stos
dec
inc
lea
outsl
push
mov
sub
ret
hlt
aad
adc
stos
push
ss
cld
pop
cli
int3
stos
mov
nop
fsubrs
or
mov
rorl
lods
aam
mov
stos
xor
and
ret
add
mov
sub
hlt
fwait
jmp
lcall
popf
aad
or
out
jnp
insb
push
pop
mov
stos
xchg
and
xchg
out
std
mov
dec
dec
jns
daa
test
cltd
addl
or
mov
loop
lods
ret
out
lahf
lea
pop
std
mov
mov
sbbl
xchg
subl
and
es
pop
xchg
pop
in
punpckhwd
push
push
xor
pop
imul
lret
aaa
and
stos
jl
imulb
out
test
stos
rolb
or
mov
inc
movsb
sub
imul
pop
test
jmp
xchg
bound
mov
pop
cmp
sbb
and
aam
stos
and
xchg
stos
sbb
aaa
jnp
add
stos
mov
xchg
xlat
cmp
mov
sub
jmp
outsb
addr16
adc
lcall
insb
dec
pop
lods
mov
movsl
cmpsl
ja
mov
les
push
push
jnp
cmpsb
stos
rclb
mov
ja
adcb
push
mov
js
stos
push
pop
icebp
pop
mov
and
stos
loop
test
scas
xchg
stos
popf
test
xchg
fldt
stos
hlt
enter
rcll
mov
add
iret
ss
sbb
push
pushf
bnd
stos
sub
sub
ret
in
in
and
push
xchg
das
xor
adc
jmp
cmp
jmp
pop
mov
je
pusha
xlat
inc
outsb
inc
loopne
jbe
imul
movl
movsl
aaa
insb
fnstcw
out
idivl
inc
repnz
sub
xor
in
imul
mov
jno
cltd
aam
decl
in
jmp
xchg
mov
lods
and
not
add
pop
lods
push
and
inc
sub
lcall
dec
leave
call
add
icebp
in
xchg
repnz
loop
xchg
pop
aam
int
stos
pop
fsts
stos
and
jl
jno
jp
test
dec
lock
push
mov
jmp
and
cmc
inc
stos
cmp
mov
rcl
adc
sub
fsubs
insl
inc
stos
outsb
sub
dec
fsubrp
jnp
xchg
outsb
stos
dec
mov
and
jge
stos
push
xchg
je
mov
nop
dec
fistpl
inc
arpl
ficomps
out
inc
dec
mov
mov
mov
and
jbe
int3
xchg
dec
mov
xor
cmp
sub
por
mov
fwait
push
lahf
stos
mov
mov
arpl
fwait
jg
movsb
pop
push
enter
push
jmp
jecxz
call
xchg
add
jge
mov
adc
nop
inc
xchg
mov
add
cld
fsubr
sub
outsl
xor
sbb
sbb
inc
dec
stos
imul
mov
adcl
cs
pushf
imull
push
push
pop
imul
into
xlat
shrb
mov
bound
mov
add
mov
stos
cmp
rorl
cmp
push
mov
adc
bound
stos
mov
or
sub
cli
add
or
jne
sub
xor
pushf
cmp
stos
test
inc
icebp
push
sar
push
les
and
pop
or
ss
adc
imul
push
lret
push
push
rorl
and
je
xor
fwait
icebp
sbb
iret
pusha
stos
or
pop
pop
arpl
fwait
or
xchg
mov
bound
push
fs
and
out
and
mov
lret
arpl
data16
andb
scas
shl
push
fwait
add
mov
xchg
xor
xchg
aad
xchg
fldt
and
mov
adc
mov
repnz
or
mov
sar
pop
fucomp
sarl
lret
pop
jp
dec
pusha
inc
les
lahf
push
dec
nop
arpl
or
xchg
dec
loope
dec
add
mov
int3
sub
outsl
fldcw
jmp
mov
xor
xchg
out
imul
fimuls
sub
dec
mov
xorb
jp
std
push
call
sbb
gs
mov
stos
or
push
mov
mov
push
adc
cli
mov
stos
mov
rorl
mov
movl
stos
cmp
ja
adcb
sub
adc
sbb
pop
stos
push
imulb
pop
loop
push
lods
xchg
daa
ret
xchg
scas
nop
sub
ja
and
pushf
jmp
repz
push
lret
and
stos
jge
add
mov
mov
sub
xchg
insb
test
sub
movups
stos
mov
or
sub
stc
dec
cltd
cs
cmp
daa
xor
loop
mov
popf
mov
pcmpgtb
sbb
ljmp
inc
mov
xor
insb
mov
stos
mov
nop
mov
xchg
sub
insb
pop
mov
movsl
cld
or
int
ret
lret
add
imulb
sub
lock
lahf
popa
pusha
icebp
cmpb
add
push
or
xlat
das
mov
inc
adc
in
mov
movl
in
push
mov
repnz
cmp
mov
xor
ficoml
pop
xor
rcll
int3
add
stos
push
test
push
stos
fwait
lock
testl
movsl
cmc
xor
mov
cmpsb
test
scas
bound
sub
push
xchg
aam
and
inc
in
sbb
rorb
or
adc
mov
mov
stos
sbb
xlat
inc
inc
les
pop
loopne
scas
addr16
and
sbb
clc
push
mov
dec
lret
stos
inc
jae
dec
adc
lret
popf
mov
repnz
mov
push
pop
stos
ds
fs
fistpll
stos
or
adc
inc
bound
dec
adc
ret
push
imul
mov
and
stos
inc
push
aam
mov
inc
in
call
jmp
push
xor
jg
jp
mov
sub
push
cmp
sbb
adcb
hlt
insl
scas
xchg
stos
mov
sarl
test
inc
popa
pop
sub
fwait
stos
lcall
xchg
xchg
stos
aam
adcb
insl
das
shrl
xchg
dec
pop
shr
js
mov
sub
pushf
stos
xor
stos
ret
jge
imul
push
or
ljmp
push
and
pop
imul
shrb
mov
and
sub
imull
sub
mov
jmp
fimuls
int
in
cmpsl
xlat
jecxz
jmp
push
je
stos
stc
cmp
xchg
popa
stos
jae
repnz
push
lcall
stos
js
or
jno
pusha
scas
jmp
mov
xchg
fwait
cmp
sub
stos
fdivrl
mov
daa
add
loopne
cltd
stos
in
js
mov
outsb
ja
insb
xchg
rolb
stos
rolb
stos
sti
mov
and
stos
push
mov
in
iret
and
lods
sbb
mov
lods
add
xchg
mov
lds
arpl
ja
xor
fldcw
jno
mov
pop
stos
daa
into
in
nop
hlt
mov
push
pop
pop
dec
push
lods
out
and
scas
mov
stos
jp
out
movsb
es
stos
adc
cmc
cmp
sti
jl
sbb
ret
adc
in
cmpsl
or
adc
aaa
adc
lds
mov
push
mov
popf
mov
stos
insl
jle
int
cmpsl
sub
jb
add
fstpt
mov
sub
mov
stc
mov
mov
leave
aas
cmp
mov
xchg
push
lret
scas
ljmp
push
mov
lahf
inc
rorl
jnp
push
or
xchg
sub
imul
jb
inc
mov
xchg
mov
add
xor
in
jo
sub
inc
test
push
xchg
pop
fadd
lahf
stos
ret
xchg
cmp
iret
clc
inc
stos
fwait
test
pop
stos
out
lret
mov
leave
cmp
inc
xchg
jns
push
sbb
pushf
xchg
sub
je
xchg
jo
and
sub
imul
rorb
jl
push
daa
cmc
ret
mov
loope
ja
pop
leave
jb
stos
dec
push
mov
sbb
stos
adc
xchg
inc
test
jmp
in
pop
push
jb
cwtl
pop
daa
stos
pusha
ret
ds
inc
sbb
imull
jne
and
jp
xchg
push
pop
incb
stos
xor
cmc
daa
fwait
lods
xchg
cmpsb
mov
sub
push
xor
or
cmp
cmpsb
dec
sbb
cmp
dec
sub
cs
and
cmp
popf
es
pop
pusha
push
cli
stos
les
ffreep
out
add
xchg
shl
push
lcall
jmp
push
stc
mov
in
pusha
insb
pop
and
push
mov
lcall
pusha
mov
cmc
add
mov
stos
and
push
pop
shll
lock
test
mov
test
sub
aaa
pshufw
xlat
out
lock
out
loope
xchg
test
stos
aam
imul
cmpb
fwait
ja
xor
jnp
mov
jge
mov
sub
shlb
xchg
stos
xchg
sub
dec
push
fs
stos
mov
cmp
push
repz
or
lret
popf
lods
call
cmp
into
mov
adc
add
jbe
cmpb
pop
dec
test
dec
mov
mov
ja
sbbl
popa
adc
cmpsl
sbb
stos
shll
jl
mov
imul
stos
add
jnp
inc
arpl
cmc
xor
jle
arpl
bound
or
inc
stos
repnz
ret
enter
ss
sbb
jl
sbb
xchg
xor
je
jmp
xlat
das
jo
fwait
xchg
mov
stos
outsb
add
mov
stos
es
jg
stos
jne
or
fstp
int
stos
pop
ja
and
cmp
push
popa
sub
into
inc
stos
or
es
sbb
je
scas
daa
dec
lret
into
xchg
int3
mov
mov
cwtl
inc
stos
push
dec
mov
xlat
pop
dec
xor
addr16
test
imul
xor
stos
int
jnp
insb
pop
xor
stos
xchg
xchg
push
ss
dec
mov
aaa
aam
loopne
mov
shll
lcall
or
stos
scas
insb
inc
push
add
ljmp
cmpsl
inc
and
js
pop
adc
jno
xor
adc
sbb
add
lds
adc
push
ljmp
rorl
int
mulb
insl
out
or
cltd
popf
in
stos
pusha
mov
lds
insl
pop
lods
lahf
push
stos
xchg
popf
arpl
test
add
hlt
pushf
cltd
aas
or
stos
aaa
and
mov
leave
sub
lea
lret
mov
repnz
jno
add
test
inc
mov
sbb
aad
dec
js
or
and
jp
push
stos
xor
nop
xor
xchg
stos
mov
jno
scas
imulb
mov
cmp
stos
shrb
repz
fsubl
mov
out
pop
mov
jle
xor
adc
clc
repnz
adc
jmp
mov
or
mov
lret
stos
outsl
mov
aas
pop
inc
cli
shrl
bound
mov
fwait
xor
dec
mov
sub
ss
xchg
jnp
sub
mov
fbld
push
pop
jg
mov
movsb
orb
cmpb
fwait
jmp
stos
push
add
cmp
shll
ret
push
push
shrb
mov
adc
les
mov
stos
fsubs
and
out
in
inc
jno
in
xchg
in
lods
scas
sub
push
nop
lcall
stos
sbb
push
sti
lret
mov
mov
mov
dec
ret
add
push
xchg
imul
stos
pusha
movsl
mov
and
xchg
stos
cmp
in
cmpsb
push
push
jmp
sub
push
mov
add
gs
imul
rorb
int
jmp
adc
adc
jle
cmpsb
inc
dec
repz
aam
loope
stos
mov
test
out
cltd
ret
mov
movsb
and
rol
adc
cmp
stos
rorb
mov
mov
jmp
iret
push
stos
xor
fldcw
stos
nop
fisubl
fs
out
or
fwait
jnp
stos
rclb
push
pop
js
imulb
sbbl
stos
jg
mov
cwtl
divl
xchg
push
xchg
imul
mov
stos
rcr
push
add
stos
jmp
cmc
fildll
add
movsb
sbb
je
inc
sub
das
stos
adc
xor
addr16
mov
or
mov
xchg
mov
dec
xchg
jo
add
adc
and
shlb
inc
imul
pushf
inc
scas
mov
stos
das
inc
cmpsb
test
jmp
stos
call
mov
icebp
daa
jp
jge
mov
out
lds
stos
sub
xchg
push
pop
jge
inc
int
shll
mov
xorl
fsubrl
sub
movsb
daa
stos
cmpsl
or
cld
push
mov
xor
lret
push
stos
bound
push
addr16
mov
stos
arpl
cs
mov
jne
stos
mov
cld
inc
loopne
jl
pop
stos
shlb
xor
imul
lcall
dec
stc
cmovo
stos
xchg
jb
push
lret
addr16
lcall
int3
lahf
in
stos
add
pop
adc
fldenv
mov
cltd
repz
mov
inc
idivb
and
stos
das
mov
ds
test
mov
cmp
xchg
dec
bts
mov
add
ss
jnp
shlb
aam
stc
lahf
xor
das
imul
mov
jmp
mov
in
cltd
sub
push
or
cld
cmpsb
icebp
jl
lock
inc
mov
jecxz
fildll
and
adc
pop
enter
stos
add
dec
fildll
or
test
insl
mov
mov
jge,pn
and
pop
dec
stos
popa
pop
push
mov
lahf
pop
push
cmpsl
pushf
sbb
jp
adc
and
fs
loop
mov
pop
test
dec
daa
hlt
pop
mov
mov
dec
stos
aaa
mov
or
mov
das
inc
mov
cli
test
xor
jmp
fbstp
imul
out
testb
mov
in
xchg
mov
test
xchg
fs
pop
mov
jbe
test
mov
add
outsl
daa
rcll
mov
and
pushf
push
je
ffreep
movsl
lods
test
jl
cmp
jnp
or
add
pusha
sub
fwait
cltd
int3
insl
stos
or
xor
iret
dec
clc
into
daa
out
lods
jecxz
stos
jge
pushl
shlb
dec
xchg
mov
stos
jno
cltd
mov
push
inc
push
jecxz
adc
pop
push
dec
data16
scas
jl
adc
push
push
adc
fidivs
fisubl
jno
movsb
jmp
stos
jbe
mov
xchg
stos
int
mov
lahf
stos
cs
inc
pushf
inc
dec
mov
lret
rol
ret
jl
into
mov
jmp
xchg
inc
xchg
jmp
rcll
adc
cmp
dec
stos
sarl
hlt
stos
sarl
xchg
xchg
xor
stos
call
sbb
stc
pusha
int3
lods
leave
in
add
cli
lock
imul
jnp
outsl
pop
push
repnz
popf
aas
mov
adc
scas
xlat
stos
jb
add
sbb
cld
mov
sub
stos
jo
cmp
cmp
jb
cmp
mov
std
xchg
mov
je
int
dec
in
or
push
xchg
test
filds
adc
mov
mov
push
mov
mov
adc
push
cmpsb
mov
xchg
fdivrl
and
push
data16
dec
insl
cld
js
mov
out
mov
pop
test
stos
int
push
ss
stos
rcr
and
loop
push
mov
lret
enter
arpl
int3
int
dec
nop
push
stos
mov
daa
xchg
cli
stos
xchg
shrb
test
std
cmp
fisttpll
adc
jge
hlt
rcrb
sahf
cmp
push
aas
add
fwait
dec
pushf
dec
stos
xchg
mov
movsb
fimuls
nop
sub
outsl
stos
mov
cmp
mov
or
ss
sahf
jmp
pop
js
xchg
or
stos
inc
adc
xchg
jno
scas
into
ja
jle
test
fdiv
xchg
jmp
aaa
fs
add
into
std
sbbl
pop
push
movl
gs
pop
sub
jp
imul
mov
cmp
stc
stos
adc
in
rorb
lfs
sbb
cmp
ret
insb
sbb
fists
stos
push
cmp
or
stos
rcrl
pop
stos
xlat
mov
mov
stos
lea
ret
arpl
mov
or
sub
sahf
cld
stos
push
sbb
imul
mov
push
fcoml
pop
and
inc
push
lock
and
jne
and
outsb
sub
lock
lea
stos
push
dec
and
call
dec
outsl
test
sar
mov
and
rcll
mov
add
push
push
push
fwait
loopne
pop
iret
add
imul
mov
push
inc
push
lds
push
stos
inc
jle
das
insl
sub
hlt
stos
add
jae
stos
call
dec
cs
popa
pop
andb
or
shll
jns
nop
and
ret
fidivrs
inc
pop
out
popa
xchg
mov
dec
pop
fdivrs
aaa
jnp
adc
loope
xor
xchg
sub
ja
xor
sub
stos
mov
bound
or
ss
test
in
popa
sub
cmp
pop
adc
mov
divb
je
cmp
xchg
stos
adc
iret
outsl
or
scas
daa
stos
data16
jg
adc
sub
je
enter
outsl
cltd
call
push
ss
adc
rclb
inc
lods
dec
stos
loopne
repz
cmp
jne
jl
sbb
lret
mov
sbb
cli
int3
mov
fcoms
inc
sub
stos
popa
rcrb
push
aam
and
pop
scas
stos
and
sub
out
cmpsb
mov
xchg
or
cmc
loopne
xchg
lock
jbe
or
test
pop
repz
loopne
xor
rolb
lock
sub
inc
ljmp
lret
mov
sbbl
push
and
testl
jo
pop
pop
mov
stos
sub
add
mov
pusha
inc
stos
cmp
xor
addr16
xor
sub
lcall
sarl
stos
cld
add
shrb
icebp
jmp
mov
stos
mov
aad
stos
rcll
fidivs
pop
mov
popf
jp
into
bound
adc
sbb
mov
scas
adc
lcall
mov
mov
mov
jmp
inc
adc
sub
cs
stos
adc
jmp
xchg
jns
pop
dec
xchg
nop
inc
stos
in
adc
data16
stos
sbbl
push
jp
xchg
xor
push
jno
rep
cmpsb
iret
sarl
or
sbbb
lahf
jle
stos
adc
jge
push
js
fsubs
cltd
insl
into
hlt
dec
aad
mov
push
sbb
iret
xor
dec
addr16
ss
outsl
add
jo
fdivrs
or
inc
rcrb
sub
dec
adc
xchg
loopne
cmp
shr
scas
push
shrb
imull
addr16
sub
fldl
add
lods
jnp
fimull
sub
lea
mov
push
inc
in
iret
add
push
std
jo
mov
sbb
lret
xchg
stos
adc
ffree
xor
sub
jbe
sbb
stos
sub
or
iret
imul
scas
clc
sbb
dec
push
ss
sti
push
stos
scas
aas
sub
popf
addr16
xchg
repz
ret
cmp
dec
iret
push
xchg
movsb
or
and
or
stos
xchg
pop
pushf
jg
add
lret
stos
sbb
and
sub
sub
mov
push
fwait
dec
mov
stos
int
call
push
mov
leave
and
sbb
cmp
fwait
lods
shll
xchg
pop
out
ss
jnp
mov
mov
ds
or
arpl
xchg
jns
dec
cmp
or
and
shll
sub
test
push
fdivl
mov
push
andb
and
mov
adc
sti
push
xchg
nop
xchg
jle
dec
leave
mov
pop
mov
inc
jb
mov
cmpsl
arpl
add
adcl
cli
arpl
stos
jb
insl
daa
and
sub
inc
fstpt
jae
daa
das
rorb
add
jne
arpl
pushf
or
lock
xchg
mov
jmp
fisubs
stc
iret
mov
dec
lcall
addb
rorb
push
stos
movsb
lods
pop
xchg
pop
fwait
mov
out
xchg
push
stos
popa
cmp
jle
fucom
mov
xchg
dec
and
dec
push
lods
mov
sub
outsl
dec
mov
cmp
stos
sub
xchg
pop
movsl
mov
pop
jnp
repnz
cmp
cmp
inc
stos
iret
cmp
fimuls
xchg
int3
add
addr16
stos
popa
out
bound
dec
fwait
pop
into
xchg
stos
iret
scas
sub
cs
stos
jl
and
jge
mov
push
add
inc
mov
loope
stos
and
mov
stos
lea
cmp
out
sahf
push
idiv
mov
mov
stos
mov
pop
pop
arpl
lret
adcb
shrl
lcall
xchg
push
xor
inc
movsl
mov
test
mov
ret
repnz
shrb
add
daa
push
stos
push
aam
push
add
pop
icebp
jmp
popa
add
xchg
and
lods
cmp
and
fnstenv
loop
cltd
xlat
shr
stos
xor
repz
fwait
or
sbb
and
jmp
out
sbb
enter
int3
daa
stos
dec
dec
rcrl
bts
inc
push
sub
mov
push
xchg
stos
call
jl
inc
daa
sbb
mov
lcall
test
xchg
lods
or
fwait
mov
push
int3
or
pop
cmpsl
popw
stos
jnp
or
imul
xchg
decb
notb
ljmp
sub
adc
dec
add
hlt
jbe
fmuls
into
fcmovnb
or
scas
sub
mov
pop
adc
stos
mov
ret
les
stos
imul
inc
out
push
mov
xlat
loope
pop
mov
stos
dec
push
leave
push
imul
mov
sti
stos
cltd
xor
and
xlat
lret
shr
outsl
jle
push
lods
dec
ss
stos
sub
add
jg
or
test
pop
cltd
in
test
filds
xor
jge
stos
in
leave
shlb
sub
aam
inc
push
and
mov
imul
jp
fcomi
stos
icebp
shl
mov
cli
push
addr16
fs
sti
shll
arpl
pop
fisttpll
bnd
add
subb
jo
xlat
mov
mov
imul
fwait
ret
or
dec
stos
mov
shll
cli
stos
jae
loope
jg
sub
and
cld
cmp
cmpsl
stos
outsl
sbb
mov
sub
stos
ficoml
mov
fwait
jb
fs
mov
imul
aas
pop
lods
mov
imul
gs
sub
stos
cs
cld
add
cli
mov
push
lret
stos
shrb
mov
jb
push
imul
adc
and
loope
mov
xchg
sub
stos
mov
aam
sub
inc
stos
arpl
push
push
add
mov
test
xchg
xchg
icebp
js
xchg
pop
stos
mov
jns
push
stos
jno
add
mov
pushf
push
int3
mov
cltd
sbb
sub
or
sbb
stos
xor
test
stos
inc
ljmp
stos
aad
and
cmp
push
pop
ret
decb
push
stos
addr16
imul
imul
int3
mov
fistl
outsb
add
push
xor
push
outsl
lret
sbb
xchg
mov
sti
jae
fstps
xchg
imul
jp
ret
jecxz
and
jge
and
adc
dec
sub
jnp
xchg
stos
jp
outsb
sub
xchg
rorl
stos
dec
push
dec
adc
aas
jge
pop
mov
out
jmp
push
daa
mov
cmp
mov
inc
and
adc
daa
das
xor
lea
pop
pusha
pop
or
ds
outsb
or
stos
out
lret
mov
fldl
js
je
xor
ror
push
test
lds
pop
add
dec
ret
add
xchg
sti
jle
jmp
xchg
orb
enter
cltd
ds
xor
outsl
add
mov
pop
push
test
jo
xor
std
mov
and
ss
stos
push
mov
pop
stos
jno
cmp
in
jge
jo
jae
stos
cli
push
sub
lods
cvtps2pd
daa
mov
loopne
test
sub
xchg
test
movsb
sti
ljmp
popf
int
lea
roll
push
pop
mov
out
popf
stos
aad
pop
mov
push
jecxz
std
imul
cmp
sbb
cwtl
subl
jno
scas
xor
ljmp
subl
repnz
es
stos
mov
mov
stos
leave
divb
fstp
daa
pop
xor
out
decl
repz
cld
loope
sbb
sbb
push
ja
pop
xchg
pop
fsubrs
mov
in
sahf
gs
test
rcll
inc
inc
fldt
xlat
jae
mov
out
mov
lock
call
jl
loop
adc
and
jnp
cmp
mov
jmp
jmp
decl
sbb
stos
je
mov
pop
aas
nop
dec
mov
add
test
pushf
lods
jecxz
mov
stos
lret
ret
dec
xchg
stos
push
rorl
loopne
pop
push
pop
aaa
xchg
pop
es
data16
dec
and
stos
imul
mov
adc
push
sahf
or
movsl
xor
leave
jge
in
loope
mov
popf
jmp
cmpsb
imul
dec
adc
xor
sbbb
ret
lahf
adc
movsb
or
jne,pt
insl
rep
push
pop
cmp
icebp
pop
stos
dec
adc
xchg
jb
in
sub
sub
dec
stos
cs
inc
lds
sbb
sub
sbbl
jae
pop
inc
mov
xchg
mov
bound
sub
and
adc
aas
in
cmp
jp
sub
ret
sub
lods
inc
inc
cmpsb
call
xor
aam
test
sbb
jns
pop
ljmp
dec
int3
xchg
fnclex
cmpsl
sub
cmp
and
dec
cwtl
aas
dec
jno
shrb
and
xor
pop
stos
xchg
sahf
inc
jl
sbb
push
clc
scas
ss
pushf
jmp
push
mov
push
sub
dec
jbe
dec
and
cmp
mov
cwtl
in
imul
fwait
add
xorb
iret
mov
cmp
stos
mov
and
lcall
mov
sbb
jmp
jl
addb
push
stos
in
jae
xchg
aam
mov
cmpsl
dec
fimull
add
loopw
stos
cmp
lods
dec
inc
stos
stc
adc
push
inc
stos
adc
pop
push
int3
gs
arpl
daa
xor
scas
inc
cwtl
enterw
jns
andb
outsb
test
shlb
mov
jge
loope
int
stos
fs
pop
shl
andl
or
xchg
inc
add
mov
and
cmpsl
loopne
lock
jge
mov
lret
xchg
pushf
pop
xchg
call
sbb
lea
mov
int3
mov
jns
cmp
gs
pop
fcoms
pop
sti
xchg
rcr
cmp
ds
cmc
push
sub
ja
lods
push
xchg
cmp
inc
fwait
jle,pn
mov
dec
mov
andl
lcall
div
inc
scas
aam
dec
stos
lods
cmp
mov
adc
ss
nop
mov
lret
dec
stos
loop
add
inc
daa
xchg
stos
jb
divb
cmpsl
mov
call
push
frstor
or
mov
cmpsl
pushf
lret
stos
fcmovne
add
mov
xlat
cmc
stos
fnstsw
fwait
lea
sbb
xchg
shll
add
stos
dec
dec
pop
mov
or
or
test
mov
jecxz
imul
xchg
cmpl
cltd
outsb
mov
mov
int3
jnp
ljmp
daa
add
xchg
push
sbb
stos
push
mov
xor
stos
test
mov
jmp
test
push
dec
outsl
stos
lock
aad
dec
mov
adc
cs
lahf
sbb
inc
xchg
jne
lret
or
adc
fsubrs
out
popf
and
cli
mov
dec
adc
jl
pop
or
pop
pop
mov
mov
in
das
cmp
and
xchg
mov
stos
sbb
pop
mov
scas
fdivrs
stc
fdivs
pop
inc
stos
sub
jl
mov
xchg
jmp
test
or
jae
mov
leave
cmpsb
inc
je
xor
jnp
mov
out
jecxz
mov
cmp
outsb
out
movb
stos
daa
pop
insb
mov
jmp
mov
xor
ja
sarb
in
out
cmp
sub
into
mov
xor
aam
lahf
fwait
jg
ficoml
ds
or
in
loope
das
xchg
adc
scas
mov
ffree
stos
add
push
stos
cmpsb
sub
mov
jg
lcall
xchg
adcb
out
bts
ret
sub
stos
popf
jg
movsb
xlat
sub
stos
jge
aaa
push
lods
sub
leave
stos
xor
sarb
gs
jmp
cli
cmc
pushf
fwait
jle
mov
mov
subl
rclb
stos
adc
jecxz
stos
adcb
mov
cmp
fildll
pusha
lcall
icebp
cmp
jl
sub
movsl
push
jns
and
shr
rcr
jge
and
mull
jno
mov
xchg
add
push
aas
test
pop
xor
xchg
xchg
sbb
sbb
mov
mov
repz
insb
push
jmp
out
rorl
gs
push
mov
add
push
popf
stos
cld
arpl
jmp
pop
cmp
mov
dec
xchg
push
or
jp
fs
pop
mov
add
dec
adc
mov
stos
and
pop
cmpsb
inc
pop
cmp
xor
aas
shrb
xchg
xor
push
add
outsb
push
cltd
mov
stos
xor
sub
xor
out
stos
sub
arpl
daa
push
rol
mov
ret
ss
push
mov
in
int3
ljmp
mov
jno
pushf
stos
mov
push
mov
push
hlt
jmp
and
jle
ret
pop
imull
or
inc
fldenv
jb
fwait
sbb
xor
or
shlb
cmp
jns
and
push
shl
or
test
es
pop
cli
leave
decb
rclb
mov
shll
daa
and
adc
push
aam
mov
jae
jo
es
mov
cmpsl
fwait
push
jp
mov
negl
xchg
into
dec
jmp
adc
cmp
cwtl
in
imul
xchg
mov
and
repz
out
lock
in
push
stos
test
mov
cmc
hlt
in
stos
dec
mov
cmp
lods
out
mov
subb
xor
mov
push
aam
dec
daa
mov
subb
icebp
jo
mov
push
pop
mov
xchg
cltd
stos
fdivp
mov
in
push
stos
ret
fbstp
fwait
adc
loop
push
stos
jecxz
mov
lcall
mov
mov
xor
andl
sub
les
mov
or
lea
xchg
ljmp
lret
xlat
filds
sbb
cmp
lret
mov
stos
bound
in
repnz
jmp
or
inc
adc
xchg
jmp
add
rol
sti
pop
fwait
sbb
stos
pop
xchg
daa
stc
mov
dec
sub
ss
outsb
lcall
pop
cmp
std
stos
cmp
and
mov
mov
or
xchg
aam
pop
stos
mov
hlt
sbb
pop
or
and
adc
pusha
stos
sbb
mov
sbb
mov
sahf
icebp
xor
pop
xchg
mov
mov
stos
mov
ficompl
lods
pushf
push
movsb
cwtl
push
dec
icebp
subl
inc
inc
cmp
adc
imulb
dec
mov
mov
repnz
movsb
cmp
shrb
add
dec
stos
out
cld
pop
and
roll
imul
mov
stos
xor
into
mov
adc
jl
lcall
lret
sbb
nop
xchg
stos
cmp
enter
and
hlt
sbb
call
nop
cmc
rorb
fldcw
jns
lahf
in
push
es
jae
jo
xchg
sbb
scas
lret
stos
fucom
inc
mov
cmp
jp
pop
jmp
sbb
call
dec
stos
cs
or
stos
and
jb
into
stos
popf
mov
fdiv
sbb
mov
xchg
dec
add
stos
sub
fisttps
and
out
stos
sbb
stc
push
test
dec
sub
pop
test
jmp
insl
call
mov
stos
outsl
xchg
and
shrl
mov
adc
rclb
jo
rcl
out
jmp
loope
lods
fldenv
inc
cmp
lret
insl
stos
mov
int3
pop
rcll
xchg
cld
adc
mov
movsl
add
jmp
mov
mov
mov
sub
aad
subl
cmp
mov
ror
push
imul
or
mov
in
std
stos
frstor
mov
push
push
inc
pop
stos
dec
nop
jo
push
xor
loop
mov
arpl
jle
inc
add
xchg
fmul
fldenv
xchg
mov
repz
insl
jmp
dec
xor
stos
mov
fildl
push
stos
mul
jg
hlt
cmp
push
fwait
aaa
mov
pop
test
sbb
ja
cmp
sbb
xchg
jmp
stos
rcr
sbb
mov
pop
jmp
mov
mov
popf
mov
mov
or
das
inc
pop
xchg
push
rclb
daa
and
stos
dec
movsb
lods
das
or
mov
add
fcmovne
into
stos
repz
addl
fbstp
mov
fwait
push
jne
mov
sub
mov
les
or
inc
xor
lahf
adc
mov
stos
mov
jge
and
dec
test
sub
adc
mov
pushf
stos
inc
mov
data16
xchg
stos
sbb
fst
and
pop
sub
xor
xchg
movsb
push
aad
mov
mov
adc
adc
lds
repnz
fldcw
jne
shrl
sub
loop
rclb
jmp
sahf
pop
adc
stos
cmpsb
std
push
das
out
movb
cmp
ljmp
push
push
aad
insb
in
xchg
or
inc
jns
sbb
pop
xchg
out
hlt
lods
cmp
filds
pop
stos
lods
xchg
int
outsl
nop
stos
out
test
mov
xor
daa
jp
jns
dec
sbb
push
insl
cmpsl
fsubrl
push
or
jp
aas
ljmp
popa
loop
aaa
pop
dec
add
addr16
pushf
adc
push
or
lret
sub
xchg
sbb
push
stos
fsts
loop
fistps
push
stos
mov
jmp
movsl
mov
insl
aas
sub
stos
das
cmpsl
mov
inc
cmp
out
dec
movsb
sarl
stos
cmp
add
shrl
mov
jle
aad
lods
int
stos
insl
sub
outsl
loop
push
shll
xor
fisttpll
gs
or
pop
inc
stos
sbbl
decl
stos
test
sahf
gs
push
inc
lea
lcall
adc
stos
xchg
dec
push
inc
xchg
bound
pushf
xchg
jno
lea
inc
cmpsl
addb
imul
add
ret
sbb
scas
cltd
mov
add
lods
add
fwait
nop
lods
xor
pop
leave
mov
stos
xor
lahf
fdivrs
fnstenv
stos
inc
lcall
inc
push
mov
rcrb
inc
insb
adc
fs
stos
test
sbb
stos
aad
sbb
sbb
cmpsb
cmp
scas
push
and
in
sub
fldcw
push
mov
add
je
testb
fwait
adc
ss
test
pop
jne
xchg
add
stos
add
xor
pop
push
scas
and
lock
push
gs
pop
addr16
sub
or
jo
out
pop
call
stos
push
xor
adc
inc
dec
movsb
sbb
mov
imul
scas
call
pop
sti
add
jmp
cmp
jae
popf
scas
test
mov
int3
xchg
call
or
shll
jo
adc
stos
popa
sub
faddl
shll
pop
shrl
mov
pushf
sbb
jle
jg
pop
push
inc
stos
and
clc
push
xor
mov
jo
test
sub
lock
cmp
and
ret
dec
inc
std
inc
pop
sub
orb
xchg
sub
fwait
lods
popf
xchg
push
jmp
stos
imul
inc
imul
or
sub
insb
jmp
inc
xchg
adc
mov
mov
add
subb
sbb
fwait
add
and
xchg
add
je
push
mov
and
stos
fcoms
gs
cmpsb
mov
mov
mov
pop
fwait
pop
aam
cld
fs
arpl
sub
mov
or
mov
cmp
add
stos
cwtl
lock
or
test
xchg
stos
sub
xchg
jnp
not
jg
repz
mov
dec
stos
sahf
push
mov
shll
addl
inc
mov
repnz
das
mov
add
enter
push
int3
jmp
mov
and
cmpsb
cs
movsl
dec
jmp
mov
outsl
nop
xor
iret
adc
stos
push
xchg
jmp
push
outsb
stos
ds
xlat
call
sub
je
cwtl
mov
xchg
movl
aam
mov
mov
push
and
mov
mov
lods
shrb
pop
ss
ljmp
jb
ljmp
pusha
test
stos
sti
mov
sahf
loopne
sbb
pop
clc
insb
aad
inc
fnstsw
repz
mov
add
push
inc
fisubs
xchg
stos
cmp
jbe
add
sub
nop
fisubrs
ret
std
loop
stos
stos
outsl
cmc
push
pop
xor
ds
add
or
shlb
sub
call
andb
jg
sub
xor
pop
aad
xchg
push
or
adc
scas
mov
adc
mov
inc
icebp
stos
repz
dec
mov
stos
push
mov
xlat
xchg
loop
mov
adc
scas
sub
stos
cmpsl
ja
xchg
bnd
stos
lahf
aaa
movsb
dec
inc
jmp
call
jl
xchg
dec
sarb
pop
stos
dec
mov
jecxz
and
imul
cmpsl
xchg
insl
mov
inc
fsubs
jbe
cmp
inc
lods
xchg
mov
mov
mov
ljmp
or
bound
cmp
sti
xor
mov
add
cmp
ret
jb
jae
xchg
push
out
and
stos
inc
pusha
cmc
fdiv
cwtl
stos
mov
mov
repz
push
daa
cmc
popf
or
cmp
nop
ljmp
fwait
pop
aad
and
leave
mov
fs
and
push
or
adc
push
icebp
call
adcb
push
orl
jae
inc
lea
xor
nop
scas
clc
xchg
stos
cmp
cmp
cmp
fbld
dec
xor
sahf
fs
jg
cmp
dec
pop
test
add
stos
dec
mov
and
xchg
mov
mov
cmp
xchg
fcompl
dec
mov
pop
push
inc
stos
sub
jo
in
lods
cwtl
stos
lcall
mov
gs
pop
mov
stos
jae
mov
and
pusha
mov
xchg
test
mov
arpl
imul
cmp
leave
stos
cmp
cmp
movsb
ja
mov
mov
stos
xor
ret
mov
sbb
sub
popf
add
xchg
push
xchg
push
add
or
in
sub
iret
jl
jne
dec
stos
jge
jbe
rcr
pop
stos
mov
frstor
or
mov
addr16
or
mov
in
stos
std
jne
xchg
mov
and
sub
test
or
hlt
repnz
loop
lret
sub
stos
mov
leave
daa
add
clc
jle
push
mov
out
pop
out
rcrl
sti
decb
jmp
enter
es
hlt
xor
inc
xor
pop
fdivl
pop
adc
jae
dec
movsb
inc
cltd
lock
stos
dec
or
pop
rolb
push
sub
je
xor
test
sbb
dec
xor
lahf
popf
sbbb
fsubrl
xor
mov
mov
mov
scas
mov
mov
fldcw
aam
js
lea
stos
push
je
jge
repnz
sub
sub
sub
pop
pop
xchg
je
jge
mov
mov
adc
stos
stos
mov
int3
mov
stos
out
xchg
mov
stos
icebp
mov
mov
xor
push
or
mov
mov
lea
in
add
cmp
nop
inc
js
add
jecxz
stos
out
jge
mov
push
jg
xlat
scas
jnp
push
mov
adc
cmp
mov
icebp
nop
or
push
sbb
mov
dec
mov
rcll
pop
dec
stos
add
popa
mov
gs
xchg
push
imul
cmpsl
mov
add
adc
movsb
jbe
nop
adc
inc
push
imul
ret
xlat
stos
add
into
mov
stos
shl
inc
mov
adc
sbb
pop
mov
adc
adc
hlt
jp
pushf
xchg
mov
mov
fidivs
repnz
addr16
sbbl
shll
mov
jp
bound
mov
je
xchg
popa
pushf
ret
daa
andb
pop
js
push
push
into
aaa
mov
mov
adc
out
push
and
stos
imul
cli
lea
stos
outsl
or
cwtl
leave
dec
xor
movsl
jne
jl
test
adc
repnz
iret
mov
stos
push
enter
adc
test
pop
or
push
subl
or
shll
add
xchg
mov
pop
sbb
dec
stos
popf
test
xchg
out
jns
jmp
mov
push
push
push
pusha
xlat
adc
mov
out
movsb
mov
idivb
pop
addr16
inc
push
mov
movsb
jmp
lea
lcall
and
daa
xchg
inc
or
pop
aaa
or
std
mov
pop
rcrl
popa
push
xchg
cld
stos
mov
or
out
subl
inc
mov
jl
push
adc
push
jmp
loopne
loope
std
ret
insb
stos
mov
mov
adc
stos
sahf
inc
in
sub
pop
fldcw
mov
test
imul
mov
imul
stos
sub
sub
jmp
sbb
scas
cltd
rcll
dec
mov
lret
stos
out
xor
mov
js
pushf
lahf
rorb
sub
inc
adc
push
stos
and
pop
push
fldcw
cmpsb
out
mov
stos
fildll
inc
cwtl
test
adc
push
and
js
xchg
repz
pop
mov
mov
in
cmp
sbb
insl
jae
push
mov
mov
pop
mov
inc
inc
inc
sub
ljmp
sub
aaa
rolb
or
push
call
or
mov
fwait
push
dec
stos
int
mov
pop
addr16
push
cmp
es
pushf
mov
mov
std
loopne
jl
add
push
and
mov
les
stos
enter
shl
push
stos
sbb
clc
pop
inc
movsb
scas
cs
std
inc
sub
insl
push
pop
add
repz
cmp
stos
pushf
fbstp
lea
lods
mov
outsb
pop
mov
mov
jg
mov
cld
stos
push
fdivp
iret
mov
mov
pop
jl
out
popl
mov
lods
test
inc
repnz
push
or
out
imull
daa
push
sub
cwtl
jne
mov
arpl
push
push
stos
in
xlat
mov
addr16
cmp
adc
call
pop
stos
push
lcall
or
pop
jne
stos
adc
fstpt
xchg
fldln2
xor
inc
in
mov
pop
jl
fidivl
scas
mov
inc
in
or
jmp
sub
pop
pop
jmp
nop
jecxz
rcl
lcall
cmp
and
jmp
stos
mov
ss
lds
ret
or
sub
ljmp
in
outsl
aas
pop
pop
fildll
push
xchg
stos
arpl
movhps
mov
mov
int3
stos
insl
rcrl
movsb
push
add
mov
insb
cmpsl
idivb
sbbl
in
or
dec
leave
dec
stos
mov
dec
repz
inc
call
add
add
stos
and
fs
sub
aas
stos
lods
mov
popf
sub
ss
mov
mov
test
shll
xchg
and
jae
loope
sbb
clc
mov
popf
int3
stos
aad
gs
mov
dec
push
pop
stos
je,pn
mov
stos
push
pop
mov
sbb
sbb
stos
inc
fs
or
les
mov
cwtl
fstp
mov
jecxz
lcall
icebp
or
pop
pop
stos
inc
hlt
dec
lahf
movsb
jmp
or
pop
push
mov
lret
stos
push
xchg
scas
fnstcw
pop
rorl
std
jp
stc
movsb
mov
inc
cs
idivl
fistpl
repz
or
adc
int
mov
and
mov
jne
in
mov
lret
scas
cwtl
stos
outsl
add
rcr
and
sub
sbb
xchg
aaa
fsubrs
lods
lcall
fwait
pop
insl
mov
ret
shrb
mov
in
mov
add
je
mov
sub
enter
cltd
stos
fisubrs
xchg
xor
pushf
stos
out
add
and
in
sbb
add
sbb
loop
fsub
dec
xor
mov
fistl
imull
dec
imul
mov
cmp
xlat
scas
add
test
fwait
push
cmp
sbb
shrl
xchg
inc
jns
stos
and
jb
jge
loope
jnp
push
stos
fdiv
add
cmp
out
stc
stos
pushf
mov
sub
or
jae
sub
pop
fs
xadd
jp
out
gs
adc
addr16
inc
stos
mov
shll
jg
das
add
sti
mov
push
xor
lahf
cmp
popa
stos
imul
xor
sbb
repz
mov
mov
repnz
pop
pop
stos
pop
jg
add
adc
mov
fldpi
sub
imul
pusha
lods
ss
and
sbb
stc
stos
xchg
jecxz
in
cmp
or
enter
stos
in
out
xor
call
test
cmp
cmpsb
in
insb
fwait
adc
cs
stos
into
in
je
int3
and
adc
popa
xor
mov
rcrb
push
repz
adc
test
std
test
inc
inc
cmpb
push
out
push
inc
fistps
stos
and
sub
fwait
pop
stos
aad
rol
inc
sub
popf
sbb
mov
jg
rcrl
sbb
push
or
lods
inc
std
pop
stos
xchg
in
push
cwtl
clc
and
mov
enter
imul
stos
push
clc
push
test
stos
ljmp
popa
jmp
mov
dec
add
repz
adc
mov
or
xor
mov
stos
mov
movsl
stos
mov
xor
mov
sahf
stc
ss
cmp
sbb
outsb
mov
lahf
or
or
mov
xchg
sarl
call
cltd
sub
stos
out
fbstp
stos
pop
inc
fimuls
jg
mov
jmp
std
jmp
xor
leave
xor
push
mov
dec
inc
sbb
stos
push
add
jecxz
gs
int3
stos
adc
cmp
shrl
sub
scas
jbe
aaa
jae
or
into
dec
mov
sbb
sbb
stos
leave
in
insl
iret
sub
sub
push
sbb
std
adc
push
ss
mov
stos
stc
jb
bound
lret
aam
or
shlb
push
inc
push
jmp
iret
stos
loope
movl
stos
xchg
in
stos
cmp
jne
js
xlat
cs
enter
shrb
rcrl
dec
lds
loope
jmp
bound
imul
cli
push
je
mov
mov
adc
push
sahf
inc
push
faddl
cli
movsb
aas
das
lret
cltd
and
sub
bound
lcall
ret
add
pushf
dec
pop
or
ss
sub
mov
xchg
jnp
push
cmp
adc
popa
ja
sub
pushf
pop
outsb
and
dec
stos
das
dec
out
push
mov
sbb
push
scas
stos
les
cltd
out
or
stos
inc
stos
mov
sub
mov
adc
cltd
shll
stos
in
mov
inc
aaa
stos
std
xchg
mov
ja
lods
test
adc
sarb
cmc
push
jl
dec
dec
stos
add
call
imul
dec
inc
stos
fwait
cld
xor
inc
adc
mov
lock
das
fcompl
andl
insb
stos
jnp
push
jae
sti
les
stos
div
sub
inc
call
adc
jl
xor
or
stos
fs
add
or
mov
sub
sub
sbb
lcall
das
mov
stos
clc
sbb
sbb
pop
les
mov
xchg
testb
jmp
shrl
test
lcall
fwait
jne
out
stos
stos
cmpsb
frstor
and
jmp
mov
rcrl
xchg
mov
xor
mov
in
mov
xchg
inc
je
cmp
and
cmc
adc
fstl
jmp
push
and
sbb
sub
test
mov
add
mov
fs
mov
mov
sub
inc
sub
lea
and
pop
stos
lcall
int3
movsb
jbe
js
bound
and
stos
fwait
sub
rorl
insb
and
aas
lcall
cmpsb
jo
pushf
test
aaa
stos
pop
adc
scas
insb
sub
shl
call
clc
cmp
sub
scas
xor
stos
test
daa
pusha
mov
sahf
out
mov
and
insb
sbb
lods
xchg
movsl
cmpl
out
jmp
xchg
xchg
ss
xchg
pop
mov
jo
mov
in
inc
pop
stos
lock
movsl
inc
insl
imul
icebp
addb
mov
rolb
xchg
jmp
cmp
xchg
fcompl
dec
sbb
aas
insl
mov
stos
rcrb
stos
xor
mov
lret
sub
popf
cmp
and
repnz
mov
mov
mov
lods
or
or
cmpsl
pusha
sbb
or
pop
lahf
jae
aaa
xor
sub
loopne
jnp
imul
int3
and
lret
ds
cmpsl
arpl
jno
mov
jecxz
lods
icebp
in
jne
fwait
ret
ficoml
mov
mov
mov
inc
fdivrl
fxtract
fwait
mov
in
lods
jl
idivl
stos
loopne
push
inc
sbb
inc
out
push
ss
shll
fdivr
dec
jecxz
out
das
push
jnp
add
fcmovu
jb
cmpl
mov
ja
das
jmp
dec
add
scas
sbbl
and
stos
cltd
dec
fimuls
push
stos
jl
jne
mov
or
leave
xor
dec
data16
xor
sbbl
mov
movsl
and
cmp
add
fdivrl
or
mov
fisttpll
das
movsb
ljmp
lcall
inc
lods
push
xchg
mov
jmp
lahf
stos
paddb
jb
dec
sub
call
stos
push
ja
sbb
shrb
pop
cmp
adc
xchg
stos
ss
push
pmaxub
stos
lods
cld
pushf
mov
stos
jg
imul
lahf
daa
mov
out
xor
rorl
xchg
adcb
mov
pop
repnz
push
gs
in
outsl
and
push
push
jg
ret
iret
add
cmp
stos
pop
movsl
das
scas
push
aas
push
stos
mov
incl
mov
xor
cli
mov
cmp
jnp
pop
stos
ficompl
mov
arpl
test
xchg
jb
das
mov
in
mov
mov
cld
stos
or
add
lock
push
ss
jae
test
and
std
imul
out
pop
jbe
lcall
push
test
xchg
stos
mov
fdiv
lea
aam
icebp
stos
push
mov
dec
jecxz
jo
mov
pop
stos
fprem1
mov
dec
jmp
out
iret
repz
bound
inc
push
mov
adc
stos
mov
mov
add
sbb
dec
test
sub
add
stos
and
push
mov
mov
sub
pushf
pop
shrl
in
icebp
test
mov
mov
adc
or
stos
mov
fstps
and
das
lds
sub
pop
lods
rclb
outsl
loopne
mov
jle
lock
mov
out
hlt
lea
mov
mov
pop
add
jb
mov
sbb
xchg
adcl
out
hlt
xor
cmp
cmp
into
imulb
cmc
inc
xor
inc
push
fcoms
dec
adc
mov
mov
stos
jecxz
dec
mov
adc
test
addl
mov
mov
jecxz
sti
sub
push
sbb
nop
mov
sbb
stos
fidivrl
mov
mov
test
xlat
mov
or
jge
notl
xchg
dec
out
into
cmpsl
test
dec
inc
in
lahf
sarb
xchg
pop
enter
push
dec
jp
stos
bound
pop
enter
stos
mov
mov
std
stos
fwait
mov
xchg
stos
mov
and
inc
les
cltd
in
push
jno
mov
xchg
mov
sub
xlat
lods
adcl
fimuls
stos
inc
jo
pusha
dec
lods
dec
cld
sahf
daa
jmp
xchg
or
mov
xchg
outsb
test
fisubrl
xchg
sbb
into
cltd
or
ret
ret
push
dec
aaa
lock
pushf
lods
and
iret
cmp
das
xchg
inc
stos
jl
pop
sbb
pop
inc
inc
sub
ret
sub
nop
xchg
aad
aas
stos
mov
dec
stos
out
mov
jo
stos
in
in
loop
jp
mov
mov
inc
stos
and
loop
ja
lret
arpl
xor
or
lds
outsb
cmc
stos
pushf
and
mov
sub
arpl
dec
daa
mov
aas
jb
or
lgs
mov
test
dec
jae
int3
jl
xor
add
mov
stos
cmp
mov
dec
jle
add
xchg
sbb
jb
push
scas
or
stos
icebp
xor
out
pop
push
stos
aam
add
movsb
cmc
or
xchg
push
mov
movl
add
mov
inc
xor
stos
ret
stc
popa
dec
inc
out
les
test
or
cmp
lahf
arpl
sbb
stos
or
aad
test
cs
inc
push
push
jp
lahf
mov
cltd
into
stos
jecxz
aas
arpl
jbe
das
stos
sahf
mov
test
stos
adc
pop
push
jle
adc
mov
and
mov
pop
mov
xchg
loopne
mov
adc
jg
push
mov
push
jbe
adc
aas
popf
gs
cli
stos
shl
mov
mov
mov
cmp
adc
pop
daa
ss
pop
lret
stos
xchg
popf
push
fwait
inc
insb
stos
dec
mov
jecxz
dec
mov
pop
mov
adc
rcr
jl,pn
in
nop
fs
add
cltd
adc
loopne
or
stos
cmp
mulb
addr16
jns
xlat
cmpxchg
enter
fidivl
xchg
call
divl
out
lds
leave
addr16
jle
inc
mov
mov
shlb
xor
out
cli
iret
popf
sub
in
sbb
das
cmpsb
pusha
ret
aad
pop
mov
fwait
xor
movb
test
subl
adc
int
stos
outsl
adc
std
push
test
lahf
mov
and
mov
sub
cmp
pop
cltd
int
call
xchg
dec
mov
aaa
daa
push
jge
mov
jbe
subl
in
xchg
subb
sub
jmp
dec
popa
stos
and
push
stos
inc
cmpsb
pop
inc
jge
push
cwtl
stos
pop
xorl
jne
stos
dec
fcomps
fs
stc
lock
mov
test
or
cmpl
shrb
add
addr16
call
mov
mov
stos
adc
pop
stos
cmp
pop
js
daa
cs
mov
add
mov
dec
mov
ss
stos
xchg
push
test
in
push
fidivrl
outsl
hlt
das
cmp
test
stos
mov
ss
adc
shll
add
sub
sbb
cmp
mov
mov
sarb
add
cmpsl
stos
xor
loopne
mov
jp
jbe
push
aaa
mov
sti
ljmp
or
cmp
cld
jle
stos
repz
stos
inc
test
test
lret
je
clc
xchg
adc
mov
loop
test
mov
jb
out
aad
dec
sbb
cmp
inc
rorb
and
inc
mov
in
cmc
shrb
mov
xlat
stos
pop
sbb
cmp
pop
inc
orl
ds
mov
addr16
inc
jmp
xchg
jmp
stos
mov
popa
js
in
adc
mov
push
adc
dec
xchg
xchg
aas
inc
and
mov
or
popl
aaa
jmp
xrelease
cld
sub
cmc
hlt
adc
mov
sarl
sbb
pushl
dec
jb
cmpb
test
test
push
jl
iret
mov
stos
cmc
xor
push
mov
jl
xchg
stos
imul
push
aad
mov
stos
and
fldlg2
lcall
mov
sbb
lea
out
loopne
mov
dec
fdivrl
mov
xlat
mov
and
jmp
cmp
stos
pop
xchg
fwait
mov
stos
add
dec
das
inc
movsb
je
sahf
pop
aas
in
push
mov
testb
adc
cmp
stos
pop
daa
push
popf
add
xor
dec
mov
inc
push
sub
inc
xlat
dec
add
mov
ficomps
mov
inc
sub
jbe
andb
jno
mov
adc
sub
leave
stos
sub
ljmp
dec
outsb
dec
outsl
or
xor
stos
ljmp
stc
sti
xchg
adc
or
cmpsb
fistpl
outsb
mov
mov
push
outsl
inc
cli
dec
pop
lahf
push
adc
ret
mov
insl
aaa
stos
jo
loop
enter
stos
pop
mov
lea
imul
push
mov
adc
dec
into
mov
imul
ja
imul
stos
sbb
mov
add
insb
sub
dec
movsl
mov
popf
stos
movsb
xchg
jb
into
or
stos
and
sahf
stos
rcrl
sarb
stos
inc
out
aad
das
push
sbb
stos
fnsave
sbbb
add
sbb
sub
xchg
or
or
mov
in
fucom
mov
sub
loopne
stos
push
cmp
popa
stos
inc
sbb
pop
push
pushf
rcr
sbbb
int
pop
adc
cmp
in
or
jecxz
cld
mov
pop
stos
pop
stos
add
repnz
push
jnp
inc
dec
mov
dec
cld
sub
lret
cmp
xchg
mov
jbe
sub
adc
call
mov
stos
js,pt
mov
stos
xor
lods
pop
orb
stos
rorl
dec
dec
fstl
stos
jns
pop
push
sbb
sbb
movsb
or
adc
std
test
in
xchg
stos
inc
cmpsl
scas
cmp
nop
adc
lds
xchg
cmpsb
stos
ret
das
ds
push
and
jmp
jg
pop
out
insb
add
daa
scas
fucomp
cmc
pop
mov
stos
cmp
adc
inc
stos
insl
or
pop
cmp
lret
pusha
add
dec
mov
stos
inc
call
inc
jne
dec
iret
imul
nop
lcall
pop
lret
mov
pop
jmp
cmpsl
leave
add
into
stos
aas
cmp
fisubrl
insb
out
jge
mov
inc
add
addr16
mov
je
xchg
add
mov
mov
jbe
sbb
cwtl
jmp
sarl
fisubrl
cmovae
sbb
push
lahf
ret
xchg
jle
stos
push
mov
jae
xchg
push
cs
pushl
les
push
pop
iret
and
pop
std
stc
jnp
loope
jg
rcr
stos
imul
cmp
lret
push
jbe
loopne
sbb
mov
int
and
xor
stos
div
sub
dec
push
sub
fiadds
std
and
xchg
push
stos
pop
add
movsl
cs
xchg
adc
jmp
fcoms
pop
push
loop
sub
xchg
aaa
femms
jmp
inc
int3
xchg
sub
jge
stos
int
js
addl
stos
mov
bound
das
shrl
adc
out
daa
sub
add
mov
pop
stos
cmp
fs
jle
ret
and
cmp
cli
stos
xchg
adc
aad
xor
int3
mov
cmp
inc
decl
stos
cli
icebp
jbe
xchg
add
bound
pop
jg
fidivrs
sbb
cld
mov
fwait
xchg
loopne
push
dec
mov
lock
ds
adc
add
dec
test
out
and
inc
inc
inc
gs
or
mov
stos
dec
sbb
xchg
aas
mov
leave
and
fistps
aam
fs
loopne
jne
push
jmp
fucom
push
inc
xchg
cmp
stos
addb
in
xchg
icebp
mov
in
lret
mov
stos
insb
sahf
clc
cmp
inc
cmp
ret
dec
clc
mov
mov
sbbl
in
push
bound
test
jnp
xchg
and
mov
movsb
stos
ja
sahf
sbb
cmp
mov
cli
out
and
adc
call
cmc
sbb
mov
test
out
inc
dec
jg
stos
imul
inc
stos
fstl
lcall
push
stos
pop
lds
out
or
in
push
cmp
fldcw
jmp
test
loopne
shrl
popf
mov
xchg
stos
jno
cld
enter
dec
stos
jo
push
mov
fildll
repz
out
push
add
sbb
leave
imul
mov
or
pop
int
js
mov
stos
xchg
out
leave
icebp
jo
dec
adc
imul
mov
sahf
mov
mov
inc
mov
in
rcrb
add
dec
lcall
xchg
dec
lock
inc
loope
or
jb
popa
jg
xor
lds
in
cmp
sbb
loope
mov
rorl
insb
jge
sarb
mov
stos
jno
imulb
stos
dec
testl
stos
addl
dec
stos
mov
or
stos
mov
aam
cld
sbb
stos
sbb
xchg
lea
cmp
pop
or
loop
inc
mov
jmp
inc
cs
scas
sbb
daa
mov
or
mov
push
subl
push
mov
sub
insb
gs
je
stos
aam
dec
loope
push
and
stos
std
data16
xchg
mov
lcall
or
cmp
arpl
fwait
mov
xor
aas
push
jbe
mov
clc
ret
sub
mov
sub
sbb
data16
stos
push
xor
iret
mov
mov
cmp
push
xchg
xchg
fistpl
mov
jl
pop
loope
inc
and
jnp
pusha
jmp
lret
in
push
jmp
mov
dec
leave
push
bound
mov
dec
pusha
in
sub
std
call
test
rcl
xchg
int
mov
stos
in
mov
add
mov
test
lods
mov
push
mov
sub
aad
mov
sarl
sub
jl
xchg
stos
call
sbb
inc
and
sbb
aaa
stc
mov
popf
pushl
in
js
imul
stos
xor
or
or
push
pusha
in
dec
dec
aas
inc
xor
or
cltd
xor
jo
lea
loope
pop
jge
lds
dec
or
rep
enter
ret
mov
pop
or
or
shr
cwtl
xchg
xchg
dec
cmp
cltd
mov
fwait
xchg
lds
xchg
popf
test
scas
cmpsl
jmp
xchg
das
icebp
add
sub
stos
pop
and
xchg
testl
jmp
pop
xor
cld
stos
adc
and
add
sub
xchg
sub
cltd
jecxz
shll
adc
jle
orb
lea
jo
inc
jne
xchg
pop
adc
rcrl
mov
cli
sub
stos
adc
jno
imul
xchg
inc
lds
repnz
imul
or
mov
fwait
mov
xchg
stos
hlt
mov
and
imul
mov
addr16
add
fwait
cmp
icebp
call
xor
pusha
mov
popf
xchg
popa
fwait
inc
movsb
mov
mov
inc
lret
sub
lods
sbb
fidivl
mov
xchg
jnp
es
or
jecxz
dec
enter
jb
lods
mov
movsb
daa
sub
push
stos
pop
test
out
jo
push
xchg
roll
stos
xchg
jns
imul
test
cmc
lods
inc
stos
mov
popw
inc
pushf
inc
stos
mov
push
inc
stos
xor
mov
sub
test
mov
popa
pop
jge
into
movsb
stos
jo
aaa
push
cmp
mov
out
clc
mov
es
cld
xchg
jo
iret
insb
mov
gs
nop
xchg
jmp
leave
loopne,pn
sbb
mov
insl
mov
in
adc
xor
popa
les
lds
push
sbb
sub
test
stos
push
popf
sbb
jns
scas
pop
jmp
sub
xor
leave
nop
rolb
cwtl
insb
insl
xchg
xchg
xchg
xchg
pop
hlt
les
pop
loope
movsl
mov
stos
cmp
mov
adc
sub
lahf
nop
aad
pusha
outsl
in
mov
iret
divb
hlt
dec
push
popa
arpl
sbbb
push
jno
fwait
orl
lock
inc
scas
mov
stos
push
clc
in
shrl
push
jmp
vprotw
das
hlt
stos
sub
icebp
pop
addr16
mov
mov
lods
repz
ss
inc
xor
lods
add
xchg
stos
cvtps2pd
jb
sbb
push
clc
pusha
lds
stos
mov
scas
aas
test
in
je
icebp
mov
pop
pop
cwtl
fmull
mov
add
sbb
mov
xchg
movsl
sub
fwait
or
jmp
test
ret
push
stos
xchg
cmp
cltd
inc
scas
pop
sub
ja
test
mov
pop
xchg
stos
dec
inc
and
pusha
cwtl
pop
adc
lds
adc
sbb
lahf
sub
cltd
addr16
lahf
stos
fdivrs
pop
add
mov
xor
test
call
stos
ljmp
mov
cmp
and
rolb
stos
pop
mov
bound
scas
mov
inc
mov
bound
mov
call
stos
fcom
sbb
es
inc
lcall
mov
pop
lcall
push
cmpsb
cmpsl
test
addr16
adc
add
stos
test
leave
mov
stos
iret
fsubr
sub
dec
and
stos
test
aas
fdivrp
ja
icebp
jmp
in
inc
repnz
push
xchg
cmp
sub
jmp
xchg
mov
lods
enter
jno
and
cmp
fwait
mov
jmp
xor
stos
insl
sub
add
adc
jnp
or
stos
test
mov
jbe
cmp
test
popf
pusha
fists
data16
imull
fs
adc
js
sbb
jp
cli
stos
fs
mov
mov
mov
pop
repnz
addr16
mov
jae
leave
pop
sub
mov
rorl
push
fdivr
stos
out
mov
mov
shrl
ret
inc
stos
inc
arpl
pusha
sbb
insl
shrl
ret
xchg
aad
cmp
or
in
shrl
add
stos
nop
pusha
ret
fwait
xlat
mov
mov
stos
icebp
imul
jle
xor
xor
pop
fbstp
stos
pop
cmp
inc
in
mov
or
mov
cmpsl
hlt
xchg
pop
cli
mov
adc
jne
lret
or
scas
mov
cmp
fsubrl
aas
stos
repnz
dec
repz
mov
sbb
fwait
test
scas
stos
fwait
cmpb
pusha
and
call
or
dec
insb
mov
stos
mov
dec
add
test
fnstenv
lea
cmp
cltd
dec
fstps
stos
mulb
xchg
lds
inc
push
sub
stos
dec
mov
add
jmp
cmc
stc
push
jo
popl
push
stos
test
ret
sub
or
mov
pushf
fwait
sbb
xchg
jmp
mov
js
mov
pop
sbb
dec
stc
jle
mov
stos
daa
test
outsb
sub
stos
mov
cli
lods
cmp
js
popf
inc
or
rorb
roll
std
in
jb
popa
aas
stos
xchg
pusha
or
pop
stos
je
leave
aad
and
mov
lret
jbe
imul
inc
adc
jle
push
xor
fisubrs
lcall
cli
cmp
rcr
inc
xchg
stos
and
push
jl
push
mov
mov
outsb
imul
pop
popa
sbbb
in
mov
aam
dec
and
cmpb
xchg
int3
dec
insb
cmp
stos
cmp
mov
pushf
addr16
fcompl
mov
xor
push
adc
stos
outsb
jge
jns
out
add
mov
push
dec
int3
stos
aam
lcall
shll
jb
xchg
addb
ljmp
stos
stos
mov
mov
stos
sub
mov
movsl
cmp
sub
mov
push
pop
addr16
or
fiadds
subl
jo
xchg
xchg
test
cmpsb
ss
mov
es
xor
test
sub
cmp
and
addr16
movsb
outsl
dec
stos
mov
insl
inc
js
and
mov
addr16
movsb
sti
imul
out
pop
mov
fwait
jp
lret
adc
frstor
inc
xlat
es
stos
mov
data16
or
ret
stos
push
pop
fwait
out
add
cmpl
into
sti
xchg
dec
movsb
ja
dec
mov
pop
sub
and
jl
adc
bound
stos
xlat
adc
xchg
mov
mov
mov
sub
jecxz
lods
lods
adc
cld
pop
or
xchg
mov
stos
sahf
sbb
loop
push
mov
cmp
call
sub
stos
sbbl
test
mov
lods
or
add
mov
fldl
xchg
xor
adc
inc
dec
inc
ss
lock
push
out
in
cli
fldt
jbe
and
or
mov
mov
scas
stos
sbb
imul
flds
mov
and
push
pop
pop
stos
scas
daa
lock
stos
adc
movsl
jle
inc
xchg
or
mov
outsl
add
mov
test
pop
xchg
jb
bound
stos
fs
test
inc
and
lock
stos
ret
sub
icebp
nop
clc
stos
sahf
jns
leave
call
hlt
dec
imul
loopne
mov
add
lcall
pop
aas
cmpsb
stos
adcl
jne
sbb
enter
fists
jp
adc
in
push
mov
cmpsl
mov
call
jbe
scas
sbb
imul
scas
jmp
sbb
mov
add
cld
sub
mov
or
lret
das
cmp
push
icebp
stos
data16
in
mov
mov
aad
sahf
lods
int
or
mov
loope
xchg
movsl
cmp
test
xor
inc
test
stos
testl
fsubrs
pop
call
inc
push
out
sub
stos
aaa
mov
aam
ffreep
mov
shr
testl
ss
repz
lret
lock
mov
mov
adc
jle
cltd
pusha
jmp
jecxz
iret
in
xchg
ljmp
fisubs
sahf
stos
out
xchg
add
sbb
push
cmp
push
pop
stos
imul
sub
xchg
rcr
adc
cld
push
ja
add
test
dec
mov
xchg
add
cmp
inc
cmp
stos
adc
push
cs
mov
xor
jmp
int
mov
test
cltd
test
jmp
mov
push
jl
stos
sbb
aam
cs
push
push
stc
adc
mov
lcall
pop
sbb
adc
movsb
jne
inc
fwait
in
push
dec
or
cli
test
daa
xor
and
mov
mov
fwait
mov
clc
aam
push
stos
idivb
mov
stos
mov
adcl
das
mov
pop
pop
jmp
and
mov
es
fwait
movsl
sahf
popa
stos
xor
mov
fnstenv
leave
repz
adc
mov
push
imul
jecxz
and
outsb
xchg
mov
subl
fsubs
divb
jno
sbb
sub
in
mov
mov
pop
dec
jmp
sti
aas
sbb
mov
scas
jnp
pop
push
and
and
mov
adc
inc
out
pop
std
xor
ss
or
out
inc
stos
aam
sti
cli
push
inc
jg,pt
xchg
dec
mov
aaa
arpl
sub
sbb
adc
lock
sbbb
cwtl
mov
push
inc
iret
mov
push
outsb
mov
jmp
int
inc
je
std
loope
or
mov
int3
jmp
add
xchg
sub
jmp
aaa
pop
xchg
mov
jb
int
out
fdiv
sub
stos
cmpb
jns
js
popf
jmp
pop
jne
loopne
fs
push
add
mov
enter
ret
mov
sahf
xor
pop
jnp
ret
add
lods
imull
add
in
in
mov
push
stos
roll
ljmp
jne
in
test
ret
lea
push
jnp
rep
mov
inc
arpl
dec
daa
jmp
stos
scas
scas
jle
add
inc
sbb
xchg
and
sub
xor
sub
stos
fcoml
sbb
fnstsw
jp
xor
adc
sbbl
repnz
stos
shll
pop
aad
out
clc
or
pop
xlat
stc
cld
cmp
stos
push
icebp
test
es
push
je
les
popa
cld
jmp
jp
lock
mov
inc
add
clc
xor
fwait
and
iret
stos
add
mov
stos
das
subb
addr16
and
rorl
push
mov
jbe
aam
into
mov
ljmp
xlat
cmc
movsl
data16
dec
jmp
dec
nop
out
sub
iret
jl
pop
cs
arpl
and
adc
clc
xor
stos
pop
and
mov
mov
int3
movsb
pop
dec
stos
insb
jg
aaa
lods
pop
pop
jb
ljmp
movsb
xchg
js
int
jge
aad
pushf
dec
movsb
in
in
mov
stos
in
aad
mov
mov
cmpsl
imul
cmpsb
test
popf
fwait
stos
rorb
jmp
and
xchg
stos
lret
imul
aaa
cmpsl
pop
jnp
sbb
fldt
adc
xchg
inc
push
sub
push
insl
adc
mov
stos
inc
mov
xchg
stos
es
dec
mov
cmp
push
add
mul
push
push
xor
adc
jns
stos
xchg
mov
xchg
dec
movsl
es
xor
or
mov
cmp
dec
in
stos
stc
push
xchg
pop
les
mov
mov
push
stos
inc
ficomps
and
stos
pop
popa
or
stos
cli
imul
faddp
daa
lcall
pop
sbb
jns
jnp
loopne
and
test
ficoms
sub
popf
cmpsl
stos
lcall
nop
jmp
fnstcw
addb
cltd
test
pop
jns
mov
xor
and
stos
xor
sti
sub
mov
addr16
push
mov
movsb
xchg
sub
adc
out
push
fsubrl
out
push
outsb
aam
fildl
int
adc
jno
sub
sahf
aaa
jne
and
daa
xchg
pop
insl
test
fcom
stos
pop
cmp
push
mov
sbb
movsl
cmp
mov
stos
xchg
cmp
and
lea
sub
pop
adc
push
int3
cs
pop
jb
cmc
stos
lahf
inc
fldt
and
ret
inc
scas
scas
addr16
lods
out
jge
push
mov
dec
loop
movsl
jne
add
ja
icebp
cmp
dec
dec
mov
jl
int
fdiv
test
add
cli
cmpsb
nop
fnstsw
or
mov
mov
shll
fildl
cmp
shll
cli
lcall
mov
stos
das
mov
inc
lret
stos
mov
pop
negb
jmp
xchg
arpl
in
icebp
movsl
cmc
dec
stos
add
popa
jno
xchg
push
mov
push
mov
push
push
sarl
stos
cmp
into
adc
loopne
pop
pop
xor
mov
xchg
mov
pusha
enter
or
fstl
outsl
mov
sub
jmp
mov
shrb
addr16
mov
pop
dec
sahf
bound
sub
stos
adc
mov
or
push
andb
fs
push
std
and
test
cmpsb
fsubs
inc
dec
fs
cli
or
stos
push
pop
sbb
mov
inc
shrb
lret
jle
push
dec
stos
ja
pushfw
pop
stc
and
in
mov
out
adc
sar
pop
cwtl
in
popa
mov
push
popf
pop
stos
mov
clc
loope
stos
cmp
out
pop
int3
stc
gs
outsb
inc
or
stos
sbb
mov
aam
shr
cltd
lds
cs
clc
imul
inc
cmpl
fldenv
addl
lahf
sbb
lcall
loope
pushf
jno
fmull
in
cmc
popf
inc
mov
jne
sub
jmp
stos
add
test
orl
insl
add
xchg
mov
frstor
test
xchg
aaa
stos
int3
push
sub
pop
bound
jmp
sub
call
das
and
scas
popa
test
cld
add
push
test
mov
rcr
jle
pop
shrl
call
jg
int3
popw
sub
scas
lret
stos
adc
mov
iret
mov
stos
and
daa
pop
stos
xchg
add
add
mov
stos
mov
lret
std
inc
fmulp
dec
mov
mov
scas
jp
xor
mov
inc
das
xlat
cltd
pop
stos
cmp
sub
jmp
in
push
or
jb
scas
xchg
leave
shrb
push
jnp
int
out
pop
out
inc
xor
sub
shrl
add
jmp
dec
mov
nop
jmp
inc
inc
xchg
icebp
lahf
lods
push
je
and
mov
aad
cmp
call
addr16
xor
aas
pop
sbb
jmp
mov
rorl
xchg
xchg
lds
xchg
fdivr
push
sub
or
jmp
xchg
out
movsb
pop
mov
repnz
cmc
es
arpl
scas
push
pop
sahf
cmp
pop
mov
fisubrl
jmp
dec
mov
cmp
or
into
add
stos
mov
mov
push
sub
in
mov
out
int
sub
push
lret
fwait
xor
stos
dec
jecxz
addl
mov
cmc
testb
stos
sbb
mov
pop
adc
sub
addr16
bound
out
jmp
mov
add
stc
ljmp
mov
inc
daa
xchg
stos
popa
sub
outsb
push
mov
mov
push
inc
cmc
cmp
inc
add
mov
in
aaa
cmp
add
jbe
addr16
cmpsl
movsl
sbbl
cltd
pop
mov
es
or
popa
out
xchg
das
icebp
stos
lods
in
jb
faddl
lds
dec
cld
mov
push
push
pushf
mov
cmp
das
xchg
xor
int
adc
cltd
stos
and
sub
mov
fsubrs
sub
or
addr16
mov
jle
ss
cs
and
adc
mov
shll
outsl
icebp
push
stos
scas
aad
fs
test
stos
loop
sbb
fwait
dec
std
stos
xchg
adc
mov
pop
stos
outsb
cmp
int3
cld
cmp
stos
pop
push
jge
adc
icebp
test
mov
lcall
xchg
inc
ret
adc
fwait
and
sub
pop
cmp
aam
push
iret
jb
and
lret
sbb
pusha
cmp
jge
rcrb
popl
stos
xchg
push
pop
mov
sbb
pop
mov
or
insb
popf
dec
lahf
sub
in
jb
mov
repnz
stc
mov
push
stos
mov
dec
andb
stos
jnp
icebp
sbb
std
push
cmp
mov
fsubr
add
xor
pop
stos
sub
cmc
push
sub
repnz
arpl
test
and
xchg
xlat
jbe
cmc
xor
push
and
movsb
insl
push
jns
out
into
cmp
cmp
xor
ret
outsl
das
pusha
adc
and
xchg
or
loop
js
pop
xor
fbstp
repz
sbb
sub
fcoms
inc
add
or
dec
xchg
shrb
repnz
imul
stos
cmp
imul
aad
pop
and
push
cwtl
sbb
jae
stos
xlat
in
or
or
stos
in
mov
xchg
pop
stos
fs
loop
test
push
or
sub
in
int
sahf
push
xchg
aad
arpl
sbb
addr16
lods
add
out
out
and
adc
sbb
dec
leave
xor
das
ds
cltd
loopne
sub
push
arpl
ja
stos
decl
icebp
adc
data16
dec
stos
fiaddl
lods
cmp
stos
mov
icebp
sahf
dec
stos
pop
add
push
rorl
jmp
mov
inc
imul
in
pop
dec
imul
lods
arpl
stos
cmpsb
adc
add
int3
sbb
je
stos
dec
outsb
push
in
daa
fsubrs
pop
xchg
mov
cmp
push
stos
mov
les
add
addb
dec
lods
mov
shrl
in
outsb
insb
stos
cmp
test
lret
mov
in
xchg
push
xchg
mov
jg
aas
clc
sub
fwait
into
in
pop
in
sbb
stos
in
cmp
stos
or
test
jecxz
jg
stos
iret
inc
and
outsl
stos
or
dec
push
mov
enter
push
inc
das
or
daa
aaa
sbb
ja
cmpsb
inc
and
popa
ljmp
call
jne
jb
lds
sub
lcall
test
xchg
rorb
inc
subl
mov
stos
decl
and
gs
jl
adc
xlat
jns
stos
cmp
std
lock
rcrb
in
popf
fisttpll
mov
pop
mov
cmp
fwait
stos
aas
xchg
mov
lods
pop
fwait
stos
push
adc
std
stos
sarl
cmpsb
cmp
repz
andb
inc
mov
int
fwait
mov
repnz
call
mov
subl
sub
test
stos
sub
xchg
aaa
sbb
les
xchg
jle
stos
or
add
xor
insb
add
mov
incb
stos
xchg
xchg
ret
and
pop
cmp
push
mov
stos
cwtl
mov
mov
xchg
push
stos
in
mov
cltd
mov
and
mov
js
xchg
jbe
sbb
std
jge
inc
int3
into
mov
mov
pop
add
cmp
jmp
and
mov
lds
xlat
scas
movsb
xchg
fstpt
stos
movsl
or
les
cmp
stos
ficomps
cmc
out
sub
test
or
dec
jmp
shlb
cmp
jne
stos
adc
popf
fildll
mov
stos
cmp
xchg
mov
fisttpll
inc
jns
mov
daa
mov
push
push
mov
stos
dec
clc
jge
mov
dec
sahf
addl
push
jmp
mov
sbb
pop
je
fwait
pop
stos
fldt
daa
mov
push
js
das
fwait
push
leave
sub
pop
cmp
stos
or
pop
test
sub
push
xchg
shrl
stos
and
fwait
or
bound
shr
mov
jno
stos
mov
add
fisubrs
push
xor
or
push
push
out
push
test
imul
mov
xchg
cs
dec
aaa
jb
jl
cltd
inc
sbb
sarl
push
push
stos
sahf
inc
js
adc
mov
imul
stos
outsl
jns
lds
movsb
mov
inc
jb
or
clc
jmp
mov
arpl
sub
pop
mov
xchg
imul
dec
incb
pushf
lcall
outsl
jae
dec
push
push
aas
dec
rorb
mov
jne
jbe
jp
aaa
stos
inc
xchg
ja
pop
clc
stos
cmp
jg
sbb
repz
dec
mov
inc
incl
xchg
mov
addl
fyl2x
dec
mov
mov
addr16
sub
jnp
lods
ffree
add
stos
add
ja
or
xchg
mov
lods
or
pop
mov
push
xchg
add
je
roll
cmpsl
insb
mov
xor
stos
jg
in
push
ret
stos
lret
sub
pop
aaa
in
mov
test
daa
icebp
xchg
daa
inc
fwait
mov
jl
xchg
stc
cli
and
mov
aaa
xchg
call
xor
mov
aam
arpl
jle
dec
dec
push
stos
test
imul
rep
sub
in
cmp
push
or
loop
int
fsub
push
enter
hlt
pop
dec
fidivrl
test
inc
dec
xchg
or
add
pop
ret
mov
sbb
ss
bound
scas
xchg
imul
xor
sbb
pop
js
lds
mov
in
test
xchg
ret
mov
leave
stc
mov
xor
dec
dec
mov
stos
pop
pop
mov
out
xchg
mov
pop
repz
xor
aad
int3
xchg
imull
jecxz
stos
cmp
or
fistl
das
mov
movsb
notl
inc
or
xchg
rcrb
mov
cmp
dec
pop
movsb
stos
lds
mov
sbb
sbb
sub
xchg
or
sbb
iret
cmp
sbb
sbb
push
dec
and
aaa
cli
pop
inc
mov
fwait
outsb
cmp
lahf
int3
and
nop
mov
inc
jae
xchg
xor
imul
icebp
stos
mov
push
and
imul
inc
stos
add
jne
loopne
mov
stos
cmpsb
fcmovbe
ds
inc
mov
mov
inc
jno
stos
add
mov
mov
lock
ret
pop
aam
xchg
aad
sbb
cld
lods
cltd
in
scas
mov
sub
stos
shr
push
push
and
sub
stos
repnz
pusha
insl
stos
sub
cmpsb
and
insb
stos
lods
sub
bound
stos
call
jb
leave
cld
mov
mov
jmp
movsb
int3
repz
inc
mov
out
jmp
mov
aam
ljmp
jo
in
repnz
popf
mov
sbb
data16
push
mov
loopne
daa
hlt
pop
inc
jle
shll
in
add
clc
test
das
jns
stos
in
sub
scas
fnstenv
xchg
divl
stos
inc
xchg
adc
out
loop
inc
pop
push
popa
inc
ret
jl
jbe
stos
xor
and
test
enter
pop
movsb
data16
insl
orb
rdpmc
imul
add
mov
push
inc
jl
lds
xor
mov
push
mov
neg
xchg
adc
pop
popa
mov
xchg
mov
jecxz
jmp
lret
pop
insb
mov
ljmp
shrl
adc
fldenv
pusha
fstpl
roll
aas
pop
xor
movsb
push
mov
inc
sbb
inc
gs
sbbl
adc
dec
fwait
or
and
in
je
fwait
sub
addb
jmp
mov
cli
jbe
in
push
mov
es
push
cmp
cmpsl
xlat
mov
test
lds
xchg
movsb
lret
xchg
stos
cltd
jge
xchg
sarl
lret
int3
jmp
ror
sub
cmp
je
test
stos
push
mov
loope
pushf
out
pop
stos
mov
xchg
loop
stos
incb
mov
dec
ja
stos
fucomi
imul
stc
ficoms
stos
mov
xchg
cmc
addr16
xorl
mov
inc
les
jnp
mov
js
aad
pop
cli
stos
add
ss
xor
mov
xchg
cmpsl
jg
paddq
inc
lcall
sub
mov
push
fdivrl
shlb
push
loop
out
push
mov
ret
push
cmp
push
mov
adc
stos
xor
and
aas
mov
sbb
stos
fistl
jns
jp
ds
addr16
push
and
xchg
jmp
repz
lcall
mov
clc
push
addr16
fwait
cwtl
fcmovnbe
lods
cld
cli
arpl
mov
and
push
mov
and
lahf
add
movsl
jne
push
fisubrl
push
in
arpl
repz
into
xor
inc
stos
pushf
ljmp
or
adc
inc
jp
lds
fs
lods
pop
push
in
mov
cmp
jmp
inc
subl
sahf
fcmovnu
jmp
stos
dec
xor
lea
jp
aas
mov
sahf
push
dec
add
loopne
push
scas
jo,pn
sbb
dec
fdivp
mov
stos
cld
xlat
notl
popf
sub
in
daa
or
and
adc
dec
push
repz
sbb
add
std
adc
in
stos
cmp
out
stos
push
fidivl
xchg
lret
stos
mov
loope
test
in
imul
rcrb
scas
stos
retw
pop
inc
pusha
sbb
sti
xorl
adc
and
dec
mov
or
inc
cmp
mov
sub
push
std
adc
pop
lods
adc
sub
imul
mov
dec
popf
jmp
stos
arpl
mov
jg
or
in
mov
pop
sub
push
lods
stos
comiss
xchg
sub
int
stos
xor
stc
xchg
loope
dec
sbb
fs
outsl
lcall
mov
mov
nop
mov
test
xchg
cmp
dec
inc
add
dec
clc
notb
push
fldcw
adc
mov
xchg
dec
sub
pop
mov
stos
inc
in
mov
stos
pop
divl
imul
jmp
iret
cwtl
jg
hlt
sub
cmp
ja
stos
add
mov
dec
cmpsl
adc
dec
scas
inc
mov
popf
or
push
jmp
stos
adc
cmp
in
stos
imul
cltd
mov
pop
push
stos
inc
sbbb
movsl
dec
aas
sbb
lods
xchg
ljmp
scas
and
sub
push
cmp
or
push
jne
and
stos
sti
aam
mov
cld
hlt
mov
subl
stos
int
adc
mov
add
addr16
mov
outsb
popf
jp
pop
jmp
push
mov
je
and
dec
hlt
inc
pop
stos
jg
sti
out
cwtl
or
stc
imul
xchg
rcr
ret
xor
jnp
out
stos
fs
jne
dec
jbe
outsl
stos
mov
cmp
pop
or
in
or
stos
cltd
push
int
sti
push
and
stos
xchg
shl
sub
or
jge
inc
in
or
shrb
pop
les
arpl
mov
ljmp
lcall
sbb
mov
add
leave
testb
dec
int3
test
std
sarb
inc
stos
sbb
insb
mov
insl
loope
iret
jmp
in
arpl
repnz
cmpsl
stos
test
xor
stos
les
cltd
imul
stos
enter
cmc
mov
fimuls
loop
xlat
lret
mov
jnp
in
pusha
shrb
mov
mov
insl
das
xchg
push
cwtl
daa
adc
jge
xchg
or
push
fwait
xor
mov
pushf
lods
insl
fwait
rcrb
or
and
pop
jmp
add
dec
mov
std
addr16
subb
lret
add
clc
mov
jmp
jmp
test
inc
push
xchg
daa
xor
jmp
mov
sti
push
out
lcall
adc
pop
add
xchg
ret
fs
test
stos
in
inc
repz
icebp
inc
mov
addr16
daa
cmp
stos
ja
pop
and
xor
lods
into
and
pop
unpckhps
push
or
push
test
xor
cmpsb
stos
cmp
cld
subb
jns
in
pop
mov
jbe
das
xchg
cmp
aad
jbe
std
pop
sub
cwtl
sbb
mov
es
xor
enter
stos
xor
add
lret
lds
sti
mov
scas
adc
cmp
out
jae
fcoms
sbb
and
filds
mov
and
mov
lret
push
ljmp
fwait
jns
ficoml
test
cmpsl
data16
mov
xchg
arpl
stos
sub
test
mov
dec
mov
dec
dec
cwtl
aad
xchg
or
stos
sbb
roll
jge
stos
ss
mov
fistl
lret
stos
jbe
cmpl
outsl
jmp
sub
jno
pop
mov
movsb
test
push
sti
rcrb
stos
mov
pushf
daa
in
nop
lahf
jp
lock
xchg
test
dec
pop
mov
jecxz
aas
cs
inc
sub
sbb
adc
or
xchg
xlat
ret
xor
fiaddl
lock
stos
jecxz
ja
out
repz
stos
dec
inc
xchg
into
lods
pusha
push
jmp
enter
out
in
or
movsl
jae
insb
mov
cmc
add
jno
cmp
shlb
jl
mov
xor
pusha
mov
aam
leave
fldenv
std
pand
clc
sbb
xor
rclb
sbb
adc
adc
sub
js
scas
test
mov
stos
fs
push
sahf
jnp,pt
outsb
and
mov
mov
jl
lcall
pop
iret
lret
aas
outsl
jb
lods
imulb
and
test
out
dec
out
xor
orl
xor
test
sbb
inc
mov
hlt
lret
xor
stos
and
movsb
add
test
imul
in
cmpsl
ja
jo
test
stos
sbb
push
iret
adc
cli
roll
mov
dec
leave
pop
addr16
stos
mov
or
movsl
stos
cs
rolb
stos
inc
arpl
xor
sbb
enter
int
mov
sbb
adc
mov
mov
pop
mov
or
add
bound
movsl
cmp
lea
stos
xchg
adc
aam
stos
loopne
sahf
test
sub
mov
enter
std
pop
insl
out
arpl
mov
mov
aas
push
dec
push
mov
jl
dec
sub
stos
add
in
sub
shrb
and
pop
mov
icebp
stos
mov
int
imul
pushl
subl
mov
shrl
stos
sub
and
nop
test
xchg
push
mov
imull
rcrl
icebp
jmp
xor
jnp
and
sbb
mov
stos
cmpsl
adc
xchg
pop
mov
xchg
push
lods
lcall
insl
fwait
xor
icebp
mov
stos
test
lock
mov
out
inc
jcxz
jmp
js
enter
and
push
insl
stos
jnp
or
and
out
cmp
stos
das
sti
pop
or
pop
push
pop
push
mov
push
and
mov
lods
lret
jmp
mov
out
xchg
stos
or
push
arpl
cltd
jmp
xchg
stos
data16
mov
jmp
stc
int3
jo
sbb
daa
dec
js
adc
cli
stos
gs
fs
add
mov
imul
add
mov
mov
pop
push
push
mov
adc
test
test
loopne
stos
hlt
adc
in
and
xchg
jae
notb
mov
mov
imul
addr16
pop
es
add
jp
addl
and
sbb
inc
mov
dec
pop
mull
fldenv
push
cmp
pop
mov
push
pop
pop
sarl
fwait
test
int3
iret
jb
sub
mov
bnd
mov
sbb
sbb
cmpsb
sub
sbb
adc
push
gs
fidivrs
pop
stos
sahf
cmp
mov
jns
stos
mov
cmpsl
sbb
sbb
stos
ds
fnstsw
dec
xor
jmp
jmp
add
scas
xchg
int3
out
cmp
and
xchg
xchg
testl
mov
insl
xchg
fwait
das
lcall
fwait
sahf
orl
adc
aam
stos
sbb
or
mov
pushf
stos
xchg
cltd
repnz
imul
jge
adc
mov
shr
outsl
or
fwait
dec
imul
cmp
sub
sub
fbstp
pop
stos
mov
pushw
aad
add
mov
imul
jae
enter
jg
jne
or
stos
inc
jge
jle
inc
add
stos
mov
scas
pop
loop
xchg
cmp
stos
arpl
js
ljmp
cmp
mov
stos
in
add
dec
adc
arpl
insb
xor
pop
scas
mov
add
dec
shlb
cli
cmp
ror
inc
xor
xor
cmpsl
gs
lahf
cs
xchg
int
mov
popa
pop
mov
xchg
push
subl
push
push
xchg
lret
mov
stos
pop
mov
mov
xchg
cs
popf
xchg
stos
in
jle
ror
shlb
shlb
addl
sub
add
call
bound
stos
mov
popa
pop
popf
jmp
ja
adc
cli
stos
xchg
mov
cmp
adc
int3
cmpsl
push
loop
scas
js
clc
hlt
stos
and
lds
out
stc
out
dec
adc
dec
push
imul
jmp
iret
pushf
stos
movsb
jno
push
and
loope
stos
andb
stos
inc
or
popf
dec
adc
xchg
subb
test
stos
iret
lods
push
mov
mov
ljmp
in
movsb
stos
cli
jecxz
sbb
loopne
jmp
lcall
ljmp
sub
mov
stc
aas
jmp
iret
cmp
push
stos
xchg
test
in
sbb
push
xchg
mov
mov
jnp
mov
or
ret
stos
outsl
insb
mov
ljmp
arpl
icebp
loop
popf
ret
stos
into
shl
dec
jmp
jecxz
mov
xchg
fmull
stos
and
add
jbe
enter
xorb
in
xlat
loope
or
lods
jle
outsb
jae
push
ja
mov
mov
call
loopne
repz
cmp
inc
xor
scas
repnz
push
ror
pop
stos
addr16
jmp
pop
jp
xchg
and
das
add
lcall
mov
xchg
in
inc
imul
xor
inc
shlb
jae
sbb
pop
arpl
stc
shlb
lret
fwait
scas
push
and
stos
xchg
std
fs
mov
inc
mov
mov
bound
dec
test
lahf
stos
inc
ljmp
stos
xchg
cmc
jae
repz
test
jns
in
fcmovnbe
stos
xor
jecxz
inc
dec
push
stos
mov
popf
sahf
daa
les
jle
fsubrs
mov
xchg
mov
add
mov
or
dec
mov
lea
add
push
mov
adc
mov
sbb
popa
mov
xchg
out
adc
sub
sub
mov
cli
dec
cwtl
les
stos
mov
add
addr16
xchg
pop
jle
std
xchg
fmull
into
stos
jo
dec
and
test
fs
sti
sbb
inc
stos
pop
pop
ret
movsb
fstl
pop
lock
enter
push
bound
lods
adc
inc
mov
cmp
in
xlat
xchg
push
adc
and
stos
cltd
mov
push
sbb
cltd
cwtl
aaa
jmp
loop
inc
movsb
ficomps
pop
mov
sahf
xchg
cmp
pop
stos
pusha
and
cwtl
out
cmp
cltd
sub
xchg
xor
jecxz
adc
stos
mov
sub
frstor
aad
mov
mov
mov
inc
dec
int
jae
int3
xchg
mov
leave
fists
inc
push
out
imul
cli
mov
jbe
mov
cs
mov
daa
lret
or
pop
dec
lea
mov
sti
push
stos
push
xchg
dec
popa
out
icebp
in
int3
js
fwait
jne
xchg
inc
fadd
dec
cmp
jg
stos
dec
lret
shrl
inc
mov
shlb
hlt
movsl
ja
and
ret
jns
loopne
dec
rclb
xor
or
sub
fs
push
test
dec
cld
and
xor
dec
arpl
push
fwait
and
sbb
ret
test
dec
dec
in
mov
stos
cmp
or
dec
fstps
dec
sub
mov
gs
sub
int
dec
sub
subl
and
pushf
xchg
jmp
scas
and
jecxz
es
ss
dec
cmc
mov
in
popa
add
sub
movl
pop
sbb
roll
aas
loop
xor
in
rorb
outsb
stos
push
mov
xor
insb
push
mov
test
out
mov
stos
mov
cmp
lea
pop
out
jb
adc
fs
sti
iret
stos
fisubrs
push
xchg
stos
repz
enter
insl
stos
and
inc
jmp
adc
lock
sub
push
adcl
cmc
xchg
mov
pop
pop
push
xchg
xor
xor
out
lock
arpl
stos
das
and
jae
mov
cltd
push
hlt
and
xacquire
cld
sub
mov
add
cmp
cmc
pop
xor
or
es
imul
lret
sub
int
mov
call
rclb
lds
cmpsb
leave
push
lods
xchg
pop
mov
or
cmp
ds
lea
jg
mov
pop
movsb
test
lds
rclb
movsb
stc
in
xor
push
inc
pushf
mov
add
mov
adc
xchg
add
stos
outsw
mov
ret
into
inc
sti
insb
jle
xchg
push
int
sub
jns
mov
add
stos
imul
incb
mov
test
mov
scas
es
rorb
fldt
insb
std
mov
ds
sub
cli
xchg
push
xchg
das
ljmp
scas
cmpb
and
lahf
dec
inc
popf
cld
stos
icebp
ficomps
pop
xor
jae
in
int3
or
cmpsl
lahf
ret
ljmp
shll
cmp
and
mov
cwtl
arpl
insl
fwait
mov
pusha
xorb
shlb
cwtl
sbb
ret
sub
dec
dec
jmp
xchg
inc
adc
xor
jp
dec
faddl
test
jge
rcll
enter
movsb
in
popf
fistps
add
das
stos
mov
fs
pop
jg
xor
xor
ss
jns
xchg
jo
jmp
mov
push
xchg
lcall
mov
sub
mov
sbb
cli
lods
jmp
daa
inc
ret
pop
imul
mov
movsb
sub
mov
dec
pop
stos
xchg
jecxz
push
xor
jno
cmp
gs
cmp
push
fnsave
in
pushf
aad
xchg
out
dec
sbb
shrb
das
jmp
imul
mov
stos
shr
inc
aas
sbb
shrb
fldl
stos
in
bound
xchg
cltd
and
aas
mov
push
sub
mov
mov
imul
scas
ds
stos
dec
out
or
outsl
inc
stos
add
xor
rorl
adc
mov
push
xlat
lods
cmp
mov
vsqrtsd
je
and
stos
jno
inc
xor
or
imul
mov
icebp
call
pusha
lret
test
inc
xor
xchg
mov
stos
ds
xor
sbb
cvtps2pi
sbb
shll
pusha
fwait
arpl
push
lea
jg
or
push
dec
push
and
lahf
cmp
test
jmp
imull
xor
ds
cmp
jae
cmp
inc
in
insb
inc
jmp
or
xchg
movsl
jne
jbe
jns
adc
mov
dec
loop
mov
stos
jecxz
shl
mov
pusha
sub
xchg
sbb
jmp
loope
repnz
lock
jp
daa
stos
sti
pusha
or
push
cld
mov
stos
scas
mov
sub
push
pop
pop
push
push
xor
pop
fwait
mov
hlt
inc
mov
stos
aas
jo
out
test
or
push
cmpsb
jbe
cmp
popf
popl
xchg
push
adc
jmp
test
ficoms
pop
sub
cli
stos
jno
and
jmp
dec
jmp
cmp
cld
out
lret
pop
stos
insl
jns
pop
sub
and
pop
in
jge
lea
xchg
dec
stos
sbb
call
das
stos
inc
jne
mov
incb
cmpsl
stos
xchg
pop
scas
lods
aaa
pop
jl
jecxz
mov
push
gs
xchg
stos
scas
mov
add
movsl
xchg
cld
lds
lret
mov
mov
test
mov
ljmp
aas
and
mov
lods
jne
stos
jo
loope
xor
popa
or
ljmp
mov
mul
fyl2xp1
mov
std
stos
mov
outsb
inc
out
stos
lds
fidivs
sti
inc
add
adc
mov
add
mov
mov
out
pop
cmc
add
stos
jae
cmp
imul
stos
mov
ljmp
mov
sub
sahf
jno
subl
stos
mov
daa
and
stos
cs
test
fcompl
std
and
pop
lock
decb
lock
sub
fcompl
stos
insl
stos
jbe
scas
test
jl
xor
popa
pop
addb
int3
stos
and
mov
lahf
in
sbb
test
stos
inc
pop
push
mov
stos
sbb
pushf
xor
jno
pop
adc
pusha
xchg
stos
mov
jle
ds
push
add
fadds
sub
stos
inc
inc
or
and
js
stos
sub
sbb
shrb
add
stos
mov
fwait
outsl
pop
into
jg
mov
ljmp
mov
mov
loop
and
stos
lcall
addr16
daa
xor
movsl
jecxz
stos
jnp
cmp
and
scas
repnz
call
jbe
push
mov
sbb
into
add
lods
cltd
xchg
sarb
mov
out
rclb
or
enter
mov
rcrb
stos
mov
xlat
sbb
insb
dec
or
stos
lock
xchg
enter
negl
lret
fisubrs
subl
addr16
xor
ja
mov
popf
jnp
mov
sbb
movsl
push
into
adc
imul
nop
insl
loope
fdiv
mov
aas
lahf
and
jle
out
add
movsb
and
dec
jmp
push
xor
popa
push
jl
je
rcll
mov
fldcw
stos
inc
pushl
ss
arpl
mov
push
call
cmp
sub
sub
stos
vrcpss
or
ret
fistps
or
and
es
sbb
lea
jnp
stos
cmp
push
mov
or
dec
inc
clc
stos
fisubl
aad
xlat
add
jb
out
repz
or
ljmp
movsl
cmpsb
test
les
pop
adc
out
iret
mov
int
mov
andb
movsb
fiaddl
sbb
cmp
jp
jl
inc
insb
test
push
pop
sahf
imul
popf
ljmp
les
loop
stos
shll
subl
xor
and
dec
iret
hlt
or
mov
xchg
dec
mov
lds
pop
fchs
cmc
pop
cltd
and
outsb
cmpsl
xchg
fists
stos
jmp
out
popf
test
jbe
sti
pop
lds
test
push
gs
fldenv
stos
add
cmp
loopne
lahf
es
scas
inc
movsl
loope
in
cmpsl
and
sub
sub
push
xchg
add
jp
stos
cmpsl
mov
lods
xor
daa
cltd
mov
pop
mov
stc
stos
pusha
xchg
mov
ds
cmp
fsubl
pop
xchg
xor
fwait
mov
leave
stc
ljmp
add
daa
test
sub
loope
stos
jl
fimull
das
and
daa
xor
leave
lea
mov
adc
test
dec
add
push
lahf
xchg
push
aad
jecxz
and
stos
stos
inc
fcomip
cmp
cmp
push
popa
scas
imul
mov
xor
dec
dec
jmp
push
jmp
cmpsb
enter
mov
pusha
out
mov
mov
push
and
sbbl
in
fldt
into
jle
xchg
inc
dec
fwait
xchg
clc
adc
mov
jge
stos
insl
or
sub
mov
sahf
push
test
and
or
sub
inc
fwait
xor
daa
insl
mov
xor
ret
mov
movsb
xor
outsb
mov
movsl
fsubrs
fmull
test
cld
add
pop
daa
and
mov
lock
mov
pop
fsubrl
es
sbb
aas
xchg
pushf
dec
out
pop
stos
mov
xor
ret
imul
dec
loope
add
and
cli
push
int3
sti
ficoml
sub
js
mov
ret
andb
cli
ficomps
sbb
xor
push
hlt
cwtl
or
push
fwait
pop
ja
fsubrl
xchg
lea
jmp
cmc
imul
add
xchg
shll
fidivs
add
insl
stos
inc
test
sub
stos
mov
insb
xchg
ret
movsb
leave
sub
pop
add
scas
push
outsb
fildl
mov
sbb
pushf
cltd
rcrl
lahf
pop
movsb
bound
mov
or
sbb
enter
sbb
push
aam
fwait
imul
xlat
push
xor
pop
push
enter
sub
out
pop
dec
movsb
mov
pusha
mov
or
clc
adc
mov
aam
hlt
dec
xchg
jbe
xor
and
sub
ficoms
pop
push
lods
stos
mov
das
adc
jg
mov
sbb
test
inc
sbb
adc
stos
bound
pop
mov
jne
imul
xchg
mov
sti
adc
push
mov
mov
in
xorl
cmp
stos
bnd
das
stos
xlat
jle
mov
mov
xchg
cmp
push
and
jl
stos
add
fwait
push
jmp
cld
push
and
mov
stos
scas
repnz
and
cmpsb
jmp
mov
inc
stos
mov
popf
leave
arpl
fs
jmp
add
es
mov
pop
shll
stos
ja
in
add
das
sub
loop
adc
mov
add
and
adc
ljmp
fcompl
sub
sahf
mov
addr16
pushf
or
jne
insb
mov
inc
pusha
mov
sar
js
inc
test
xor
inc
xchg
dec
imul
pop
fsubr
stos
call
je
inc
stos
js
das
mov
mov
or
enter
xchg
mov
lds
sbb
aas
dec
shl
mov
and
popf
mov
stos
pop
sbb
dec
sbb
sub
xchg
stos
out
fimull
js
mov
das
sub
xchg
cltd
arpl
mov
dec
cs
sbb
dec
mov
fsubl
dec
mulb
sbb
mov
test
pop
in
xor
insl
scas
stos
pushf
imul
gs
xor
stos
jno
push
adc
std
or
mov
and
xchg
cmp
cmpsl
shrd
or
dec
lret
loop
test
stos
pop
cmp
pop
fisubrl
push
or
or
adc
lods
outsb
imul
lcall
mov
cwtl
cmpsb
mov
jb
stos
sahf
jno
fsts
movsl
jae
sarl
push
mov
xchg
push
leave
jg
les
mov
and
mov
aad
iret
aas
jg
in
mov
adc
out
je
stos
repz
and
inc
cmp
addb
mov
inc
jno
je
stos
pop
xor
inc
js
push
scas
cmp
stc
xor
stos
add
cmc
sub
mov
add
stos
das
sbb
loopne
shll
stos
and
cmp
in
lds
fwait
cmp
jb
repnz
stc
ss
outsb
stos
mov
ja
popf
cmp
and
pop
cmp
jg
xchg
sbb
xor
stos
pop
sahf
pushf
mov
ret
pusha
dec
jns
aad
jno
or
or
jl
dec
mov
popa
or
push
loope
addr16
iret
xchg
insl
cwtl
sub
stos
inc
lcall
jl
jno
mov
push
lea
out
xchg
pusha
mov
sti
mov
sub
mov
adc
xchg
pushf
lahf
test
lea
shrb
dec
test
stos
cmp
and
mov
or
mov
into
clc
rcll
xlat
xchg
imul
out
mov
pop
adc
aaa
nop
sbb
out
ljmp
sub
mov
jns
stos
fdivp
push
xor
mov
or
xchg
stos
mov
hlt
push
adc
cltd
cmp
jl
mov
jns
lods
je
nop
add
adc
fwait
in
push
pop
mov
and
jbe
jne
cs
stos
aaa
das
clc
mov
jae
repz
sbb
pop
cmp
ja
sbb
iret
test
jmp
popf
daa
mov
and
scas
and
pusha
mov
pop
mov
mov
loopne
leave
stos
mov
sbb
add
sub
out
push
arpl
xchg
xchg
stos
mov
in
stos
fnstcw
shrl
push
xor
clc
addr16
cmpl
pop
stos
loope
or
jns
stos
inc
enter
adc
xchg
jnp
or
add
clc
lods
repnz
lods
xor
mov
push
xchg
stos
mov
or
out
fidivrs
inc
stos
mov
repz
adcb
rol
test
mov
scas
std
stos
inc
mov
jp
negb
dec
imul
adc
push
stos
jmp
sahf
rclb
cmpsl
test
mov
adc
adc
cmp
in
stos
xor
in
fnsave
stos
sbb
js
stc
ret
add
xchg
xor
mov
subl
pusha
pop
mov
mov
sub
ljmp
xor
daa
imul
jno
cmc
negb
dec
add
hlt
call
call
lods
push
imul
lahf
add
mov
icebp
es
subl
add
xchg
dec
add
in
cmpsl
movsb
adc
stos
sub
aam
mov
xchg
cmp
push
daa
or
outsl
stos
pop
mov
lret
dec
jecxz
cltd
stos
mov
jge
mov
or
popf
addr16
and
dec
xchg
nop
stos
data16
jmp
shll
add
clc
stos
push
std
pop
lret
inc
sbb
xor
cmp
stos
call
inc
sub
dec
pop
cmp
arpl
into
scas
addr16
fstpl
add
rclb
pop
dec
sbb
sbbl
add
repnz
aas
incl
mov
mov
cmp
fwait
cmpsl
out
scas
jmp
and
jne
or
cwtl
or
jp
xchg
sub
stos
daa
mov
pop
sbb
popf
outsb
stos
aaa
xor
xor
repnz
stos
js
lods
sub
add
stos
sub
and
stos
and
pusha
xchg
inc
stos
cld
enter
cmpsl
stos
and
adc
mov
mov
sub
shll
repz
cmp
stos
xor
int3
test
mov
xchg
sub
push
stos
mov
dec
mov
adc
xor
add
in
mov
stos
sub
int3
insl
jne
lock
dec
jae
cmp
mov
dec
stos
mov
movsl
sub
lret
or
and
jmp
cmp
outsl
push
mov
xlat
in
add
lret
sub
xchg
out
pop
pushf
pop
or
into
fwait
adc
lahf
mov
push
jecxz
leave
clc
stos
adc
push
push
sub
cmpsb
xchg
cmc
sbb
push
aad
test
mov
pusha
stos
pop
or
lods
imul
cmp
rcrl
mov
movsl
loope
shl
mov
repz
test
xor
lds
gs
cltd
stc
jp
stos
ja
inc
sub
lahf
push
pop
dec
cmp
leave
or
stos
fsubs
fisubrl
or
aaa
push
jnp
inc
lods
cld
add
dec
daa
xor
mov
cmp
or
cld
iret
mov
stos
lods
sbb
lds
mov
and
aam
fwait
push
jmp
mov
xchg
arpl
stos
lret
add
jecxz
stos
jno
inc
fdivl
pushf
orb
sbb
mov
lds
cmp
stos
ret
inc
lcall
push
sbb
in
mov
iret
mov
jns
xchg
add
nop
inc
stos
insl
lret
ret
js
sarl
scas
cmp
shll
add
iret
bound
xchg
jg
je
jb
fs
adc
leave
nop
aam
daa
cs
addr16
ret
sbb
ret
call
sahf
xchg
sub
adc
mov
stos
cmp
jecxz
cmp
pop
stos
adc
sbb
inc
inc
pop
push
stos
ljmp
inc
stos
lahf
clc
push
hlt
pop
ds
stos
fiaddl
cltd
or
xchg
repnz
adc
jmp
cld
outsl
push
mov
aam
pop
loope
cltd
xchg
stos
jnp
pop
dec
jl
leave
jb
imull
stos
loope
dec
lods
push
mov
into
ss
adc
lahf
lods
sahf
scas
stos
addr16
push
push
dec
sub
leave
test
addr16
xchg
mov
xchg
stos
clc
push
jg
sub
outsl
cmc
xor
stos
fadd
test
stos
jge
int
pop
pop
cmp
cs
mov
shlb
nop
cmp
jg
sub
stos
inc
inc
ds
int3
or
jmp
pushf
fwait
mov
lahf
xchg
loop
out
orl
push
xor
add
cmp
sti
ret
or
xor
inc
int
stos
dec
lock
pop
fs
les
or
sbb
cmp
xor
adc
ficoms
popa
mov
push
inc
ss
inc
daa
mov
dec
fucomp
jns
mov
outsl
push
leave
in
xchg
inc
sub
lret
jae
pop
sbb
and
fcmovb
stos
push
mov
out
fsubl
imul
data16
xor
mov
or
push
xchg
mov
loop
sub
rorb
jbe
pusha
into
sub
jb
and
test
cwtl
adc
loop
push
adc
mov
ret
sbb
jle
cli
stc
cmp
cmpsb
xor
mov
jnp
test
test
insl
sbb
inc
jmp
js
add
shrb
adc
ds
sbb
add
stc
stos
je
out
pusha
movsb
jecxz
nop
or
jmp
rcrl
stos
sahf
mov
add
cmp
pop
xchg
and
push
jns
sahf
les
stos
ja
shrl
cmpsl
jmp
sub
imul
xchg
push
xor
xchg
leave
mov
dec
gs
jge
int
push
jmp
mov
daa
jg
jo
int3
ljmp
in
xchg
stos
cs
aas
mov
lahf
pop
stos
mov
add
jg
or
nop
cld
cmp
fwait
movsb
repz
dec
add
fidivrs
cmp
loop
imul
xchg
add
jbe
or
test
sub
and
popf
sti
filds
push
xchg
sarb
xchg
inc
popa
lgs
stos
push
xor
cmpsl
stos
pop
ja
std
test
jecxz
or
stc
stos
gs
dec
pop
inc
sub
mov
mov
cmp
mov
stos
adc
sub
dec
bound
fwait
stos
or
mov
mov
push
sbb
inc
fwait
xor
in
stos
imulb
andl
jge
xor
jno
push
sub
xchg
adc
shll
xchg
sarb
xorb
fisttpl
in
icebp
jmp
jmp
lret
data16
pop
lds
lods
ret
scas
cmp
sti
ja
repnz
imulb
std
aad
das
out
stos
mov
mov
cmp
dec
stos
test
mov
jae
adc
cmc
sub
and
out
dec
or
stos
cli
cmpsl
outsl
pop
loope
ret
pop
adc
jmp
mov
xor
add
jg
sub
jno
adc
pop
shll
adc
mov
cmp
stos
ja
dec
sub
push
cld
into
jnp
or
sti
xor
leave
dec
mov
sub
pushf
das
movsb
imul
sub
adc
push
push
stos
stos
mov
incl
sub
daa
adc
fsubr
addr16
movsb
fs
xchg
loop
test
dec
dec
mov
jae
int3
out
add
cmp
dec
sti
pop
inc
mov
ja
mov
mov
orb
and
jmp
add
lret
fldt
push
je
sbb
xchg
scas
sbb
push
xchg
mov
lods
fistl
mov
roll
dec
mov
jmp
mov
mov
lds
subps
inc
jo
mov
scas
ret
mov
ret
jmp
push
mov
in
mov
pop
sbb
fcmovb
pop
adc
xchg
sub
scas
aam
sub
and
jb
add
imul
loop
pushf
std
scas
mov
stos
pop
ja,pt
cmpsl
add
or
and
cmc
fildll
sub
cmpsl
int3
adc
ret
stos
mov
adc
inc
mov
dec
jmp
aaa
stos
shll
stos
add
jp
jmp
adc
stc
addr16
out
stos
jmp
test
fnstcw
stos
add
sbb
xchg
add
maxps
lcall
mov
stos
jge
int3
jae
xlat
cmp
pushf
sbb
or
and
orb
dec
push
mov
roll
add
push
shlb
mov
mov
jle
pop
cmp
xchg
or
adc
push
sub
mov
inc
filds
ja
dec
scas
add
mov
mov
pop
sahf
push
sbb
test
mov
cmpb
movsb
jecxz
ja
sarl
mov
stos
jnp
pop
inc
mov
imull
jno
std
ror
lods
add
sbb
mov
out
jmp
insb
cmp
xchg
lock
push
aas
mov
ss
xor
mov
stos
cmpsb
jl
cld
fmull
hlt
push
push
inc
sbb
fwait
adc
ficompl
fwait
mov
stos
xor
mov
sub
popa
cmp
or
or
pop
push
adc
insb
xchg
pop
dec
stos
in
and
ja
jo
stos
popa
jno
js
fbstp
and
push
sub
inc
out
jb
stos
add
mov
out
xor
mov
xor
scas
pusha
dec
lret
out
stos
pmulhw
cs
adcl
stos
mov
sub
loopne
test
adc
fcoms
stos
and
xor
push
mov
inc
in
popa
xor
dec
push
and
mov
in
xor
sbb
movsb
sub
mov
adc
push
in
test
xchg
sbb
sub
xor
icebp
out
lds
loop
xchg
jmp
or
or
or
cltd
sub
xchg
icebp
add
movsl
repz
inc
mov
add
loopne
or
repnz
inc
hlt
shrd
stos
push
push
mov
in
mov
test
push
shrb
or
mov
or
stos
jnp
mov
lcall
push
int3
stos
sub
cmp
mov
aam
ja
je
test
push
inc
adc
jle
hlt
leave
lods
dec
and
jle
rolb
stc
lahf
pop
stos
aaa
aad
lahf
shrl
adc
adc
and
mov
jmp
out
dec
nop
leave
push
pop
xchg
inc
lods
stos
enter
push
xchg
jge
stos
ja
dec
incl
call
add
stos
mov
jmp
das
shll
aam
jae
push
ficomps
xchg
js
movsb
pop
aad
stos
sub
add
lahf
adc
fcoml
cmpsb
adc
lds
leave
xor
mov
stos
mov
xchg
out
jne
push
mov
mov
sbb
imul
decl
les
addr16
fxch
mov
and
dec
or
jae
lds
or
xchg
dec
adc
mov
les
xchg
adc
add
pop
sub
stos
jns
push
je
and
stos
test
shrl
aam
imul
sub
xlat
arpl
dec
dec
rorl
inc
ret
daa
or
std
in
stos
hlt
add
stos
imul
pop
adc
mov
int3
lret
mov
mov
xchg
scas
lock
lret
inc
stos
clc
or
sbb
addr16
push
subl
xchg
rcll
sub
jae
insl
cmp
mov
rcll
or
inc
arpl
cmp
xchg
out
stc
fwait
mov
push
lcall
stos
fucomi
push
lods
pop
push
and
pop
fmull
arpl
dec
xchg
push
imul
inc
mov
push
out
and
stos
in
out
dec
ss
stos
sbb
mov
das
mov
mov
fsub
inc
pop
out
stos
mov
loopne
pop
stos
mov
enter
subl
imul
scas
aad
cltd
call
mov
stos
movsb
lds
and
stos
mov
xchg
and
cli
call
cltd
cmp
unpckhps
xor
mov
scas
sbbl
cmp
insb
adcb
ljmp
imull
stos
or
fld
xor
stos
jbe
sub
stos
in
test
xchg
xchg
std
and
imul
fdivs
pusha
in
ss
fwait
sbb
push
mov
int
add
mov
adc
jnp
lods
push
inc
jb
xchg
inc
stos
lret
pushf
and
in
add
aaa
iret
bound
rclb
pop
adc
jmp
stos
out
mov
in
jmp
mov
insb
insl
mov
add
sbb
cltd
shrb
test
jnp
mov
sahf
adc
stos
jmp
sub
in
adc
cmp
stos
sbb
lcall
jno
ficoml
cmc
mov
lods
cli
pop
xchg
repnz
xchg
mov
cs
push
sub
imulb
jo
mov
push
aas
push
xor
xchg
das
jae
sub
popf
inc
std
loopne
stos
pop
cwtl
fistps
push
movsl
push
mov
roll
movsb
mov
int
mulb
gs
fwait
xor
je
lods
mov
cltd
mov
sub
cmp
sbb
scas
and
inc
movsl
stos
ja
cwtl
jnp
ucomiss
movsb
into
add
stos
out
scas
jmp
cmp
mov
popf
sub
lcall
sbb
jmp
stos
dec
mov
xor
out
lret
int
push
stos
cmpsb
cs
aaa
stos
push
cmc
incb
dec
cmp
cld
cmp
stos
in
sti
sbb
or
cmp
dec
leave
stos
mov
loope
push
cmp
repnz
fst
or
ret
pop
stos
scas
rolb
call
stos
jb
fcmovu
test
pop
sbb
cs
out
sub
mull
or
sbb
mov
roll
dec
xchg
or
or
sub
fisubrs
jmp
xchg
es
test
xchg
lret
push
dec
nop
stos
call
inc
ja
stos
lods
xchg
dec
lcall
jno
dec
pop
das
int3
sahf
stos
or
adc
xchg
loope
mov
movsl
add
stos
arpl
xor
rcrl
push
mov
pusha
xchg
jno
ljmp
pop
xor
adc
stos
mov
ret
imul
pop
stos
push
fcomps
xchg
test
push
shlb
inc
or
lods
xlat
fwait
stos
mov
xchg
ljmp
jno
xchg
jp
dec
stos
jbe
xor
cs
into
mov
gs
mov
adc
sub
pop
dec
fnstsw
push
jp
test
test
test
inc
mov
adc
jg
push
jmp
sbb
fimuls
lahf
pop
ds
stos
flds
jp
shll
or
gs
lret
xchg
blcs
xchg
jbe
inc
sarl
xchg
mov
orb
adc
stos
cmpsb
or
stc
imul
xlat
mov
or
push
loope
fs
lcall
adc
iret
and
int3
outsl
aas
scas
xchg
ds
jno
nop
fimuls
push
hlt
mov
scas
fs
in
jecxz
ljmp
add
jmp
arpl
stos
and
mov
push
es
stos
mov
xchg
and
aaa
push
clc
add
mov
repnz
nop
lds
stos
jns
cmc
insl
xchg
adc
stos
jne
pusha
cmp
adc
adcb
dec
stos
jge
dec
mov
data16
push
cmp
cmp
outsl
fwait
cmpsl
jns
inc
xchg
repnz
sub
imul
das
in
xor
stos
push
jne
and
jmp
sti
mov
cltd
xor
push
out
iret
sub
dec
fistps
xchg
adc
ret
ljmp
inc
jmp
inc
fisttpll
mov
add
hlt
adc
les
xchg
test
addr16
clc
scas
das
repz
fsubs
imul
cmp
sti
stos
add
jmp
xor
dec
mov
or
jle
mov
lcall
sbb
bnd
mov
repz
add
mov
adc
push
int3
in
mov
pop
repnz
jns
dec
scas
pop
stos
das
mov
in
shrl
mov
mov
test
stos
jno
fdiv
loop
lock
sub
daa
and
ljmp
pop
jnp
inc
stos
cmp
fmuls
imul
mov
dec
sub
clc
pushf
outsl
push
xchg
repz
test
fstpt
adc
sbb
mov
cmp
add
insl
subb
jo
in
repz
pop
test
ror
xchg
out
loope
push
lahf
push
repnz
popl
leave
fiadds
arpl
and
fs
xchg
icebp
imul
imul
stos
lods
mov
call
lcall
lock
and
inc
cwtl
test
xchg
push
clc
in
inc
mov
stos
loop
and
dec
xor
outsl
fwait
cmp
movsl
jmp
stos
pop
jae
mov
xchg
pop
mov
fidivrs
stos
sarb
inc
or
movsl
jmp
out
dec
gs
outsl
test
stos
pop
mov
mov
or
lods
or
jg
stos
repnz
jb
addr16
pop
sub
sub
xor
test
int3
cwtl
push
aas
stos
xchg
xchg
pop
mov
loopne
into
imul
stos
cli
xor
xchg
xchg
out
shlb
dec
fsubrl
aas
mov
add
sbb
stos
hlt
mov
lcall
jns
popa
xchg
stos
jno
aaa
aas
shl
pop
iret
dec
lods
dec
test
int3
repz
mov
cmp
ror
aaa
sub
fstpt
movsb
push
sub
adc
popa
outsl
inc
cwtl
mov
push
sbb
or
neg
dec
push
pop
push
and
adc
push
jo
scas
sub
stos
inc
sub
out
frstor
cmc
xchg
adc
outsl
ljmp
mov
cmpsl
ret
jecxz
insb
clc
jmp
xlat
inc
push
stos
test
xor
stc
sbb
dec
imul
jne
mov
push
pushl
push
inc
add
mov
mov
sub
fidivs
xor
out
les
cs
sbb
lret
std
xchg
jl
stos
out
adc
mov
or
arpl
dec
lea
stos
adc
jns
xchg
dec
dec
stos
push
fisttps
stos
leave
rol
lock
stos
fs
dec
push
repz
outsl
stos
push
add
xor
dec
rorl
scas
jb
push
sti
push
sarb
clc
lret
rclb
loopne
mov
outsb
mov
lret
stos
in
fsubrl
sbbl
sub
mov
dec
pop
arpl
pop
xchg
xchg
mov
in
out
shll
in
and
pop
jecxz
mov
dec
fcom
imul
pop
fcmovne
dec
dec
sub
inc
pop
xor
push
jle
pop
loopne
ret
adcl
xchg
xchg
popa
lahf
bound
adc
addl
int3
push
ret
dec
or
xor
xchg
rcrb
movsb
lea
mov
fldenv
sub
iret
push
in
and
in
test
stos
jbe,pt
push
xor
mov
ret
or
push
out
pop
stos
out
out
inc
imul
fadds
fwait
ret
loope
or
adc
sahf
jl
js
xchg
stos
and
sbb
daa
cmp
ret
mov
test
imul
cmp
mov
jns
inc
test
stos
rclb
mov
insl
movsb
mov
mov
push
and
popl
xchg
sbb
sub
jb
stos
jp
jne
lds
in
int3
xorb
scas
repnz
mov
stos
sub
lcall
fwait
leave
cmp
sbb
push
loope
sbb
jae
or
pop
into
sub
or
cmc
jmp
xchg
jb
jecxz
test
rorb
fwait
mov
sarb
imul
ljmp
fdivs
sti
in
jo
push
nop
xchg
loop
jl
imul
xlat
std
jg
dec
cltd
xchg
nop
ja
push
daa
cmp
in
push
out
inc
nop
mov
test
push
aaa
dec
imul
sub
out
mov
xchg
outsb
or
jmp
mov
aad
xchg
imul
mov
lahf
push
in
arpl
iret
mov
cmp
pop
pop
pop
stos
frstor
jbe
mov
mov
inc
adc
xor
lods
mov
lock
mov
loope
jl
sbb
in
adc
sbb
inc
or
cmp
pop
sbbb
cli
jecxz
lahf
fwait
or
jg
add
stos
jno
dec
daa
adc
and
and
ret
test
ja
fwait
pop
xor
rorb
data16
stos
cltd
ret
fsubrl
mov
mov
loopne
fidivl
xor
jne
push
sub
push
mov
rcrl
cmpsl
bound
ret
cmc
stos
aaa
dec
fsubs
daa
adc
sbb
xchg
or
popf
mov
push
cwtl
add
sbb
stos
adc
add
jmp
imul
add
mov
popa
rcrb
test
xchg
fistl
gs
pop
in
lahf
dec
jb
nop
cld
cmpsb
out
xchg
and
mov
adcl
stos
and
jnp
stos
or
mov
pop
pop
sub
xchg
rcrl
incl
fwait
sub
jno
push
leave
lds
xchg
lahf
in
xchg
mov
push
stos
mov
fcompl
into
and
sub
je
adc
xchg
test
stos
xchg
enter
sbb
add
xchg
sub
sub
mov
push
stos
into
cwtl
jbe
jp
or
leave
ret
mov
popa
test
xchg
movsb
sbb
sbb
inc
dec
addl
imul
adc
dec
mov
fbld
loop
fldt
mov
sbb
mov
sbb
ds
xor
aaa
rclb
sub
inc
inc
stos
xor
add
adc
xlat
xchg
adc
loop
ss
and
scas
cmp
fcmovnb
ret
fwait
lcall
cmpsl
jno
shlb
imul
dec
in
jmp
mov
loopne
scas
out
stos
mov
sti
inc
and
inc
push
gs
xchg
mov
in
xchg
mov
out
add
inc
das
sbb
xchg
cmp
adc
stos
pop
xor
adc
xchg
cltd
fs
imul
inc
pop
scas
mov
sbb
pop
xchg
xchg
add
mov
bnd
fisubrl
mov
xchg
stc
xchg
imul
jae
xchg
mov
out
jmp
out
ljmp
xor
iret
test
notb
jle
lods
add
jae
lods
or
stos
fs
cld
rcl
fwait
jle
xchg
int3
stos
fsubs
out
insl
sbbb
test
mov
out
pop
int
daa
mov
ljmp
insl
xor
dec
aad
or
and
jns
xchg
out
dec
lret
jmp
repnz
ja
sub
mov
cmpsb
fsubrl
clc
in
stc
stos
adc
outsb
or
stos
test
out
arpl
or
push
sbb
loope
scas
mov
and
stos
nop
adc
jg
adc
adc
cltd
or
mov
stos
ret
xor
in
pop
stos
jae
jl
pop
push
lret
push
stos
jmp
lcall
sub
frstor
jmp
mov
stos
xchg
mov
imul
xor
pop
movsb
mov
in
dec
cmp
inc
jecxz
or
pop
mov
js
jmp
push
dec
or
stos
xchg
adc
jp
xchg
dec
movsb
jge
mov
test
cld
pop
stos
es
jbe
stos
pop
mov
loopne
sub
push
push
testb
test
in
enter
lds
sub
adc
imul
cmp
fbld
adc
cld
dec
rclb
and
lcall
sar
mov
push
lidtl
push
insb
stc
mov
in
stos
and
jae
cmpl
and
lds
pop
shrb
in
aam
push
or
out
add
push
mov
scas
adc
pop
dec
pop
outsb
arpl
stos
cltd
lcall
stos
push
jbe
adc
dec
popa
outsb
stos
std
lds
popf
stos
cltd
jb
xor
adc
in
xchg
lods
shl
or
cmc
push
stos
lods
pushf
push
cmpsb
ljmp
inc
loopne
sahf
jne
in
out
fwait
cs
dec
fcomps
ja
cs
sub
in
jge
inc
stos
hlt
imul
stos
or
das
in
or
and
pop
andb
and
stos
or
int3
repnz
sti
pop
or
jbe
fstpt
xor
stos
mov
jl
mov
xor
stos
or
adc
adc
adc
repz
insl
subl
add
xor
push
mov
dec
mov
mov
je
xchg
jp
mov
sbb
jns
rcll
push
xadd
pop
push
xchg
or
sbb
add
ljmp
decb
addr16
sbb
das
mov
push
dec
sub
pop
in
jmp
xchg
cwtl
mov
sbb
add
jle
push
cmp
adc
add
jne
dec
fistps
stos
and
shll
lods
stos
mov
stos
rorb
mov
stos
jmp
ret
stos
outsb
loop
xchg
into
movsl
mov
nop
push
stos
loope
dec
jno
inc
mov
stos
cmp
xorl
dec
aas
pop
imul
mov
out
gs
or
ret
jno
jnp
xchg
lahf
dec
insb
cmp
stos
mov
dec
jge
stos
jmp
push
lock
or
xchg
mov
insb
out
stos
and
lods
sbb
subl
stos
es
lds
stos
rcrl
cmp
aad
mov
or
push
or
stos
or
bound
stos
fs
xor
ret
mov
cmpsb
jge
mov
cld
xchg
scas
sub
stos
mov
stc
push
and
dec
mov
popf
adc
pop
mov
gs
mov
jne
fwait
push
insl
add
stos
int3
nop
mov
lea
jno
push
shlb
inc
jnp
orl
dec
je
leave
movsb
xchg
push
stos
inc
push
inc
mov
or
mov
ret
jl
test
fs
insb
stos
xor
insl
lods
push
out
mov
scas
push
enter
data16
sbb
sbb
addl
push
mov
stos
add
shlb
in
mov
pushf
nop
jmp
xorl
fwait
push
xor
sub
push
inc
stos
xor
or
sar
stos
mov
sub
cmp
mov
add
sbb
or
stos
rorl
cmc
jmp
mov
xchg
icebp
in
inc
pop
mov
xor
dec
and
xchg
popa
in
xchg
cmpb
stos
sub
jb
jmp
je
sbb
out
fisubl
loope
dec
or
mov
insl
data16
mov
mov
sub
xlat
bnd
or
stos
mov
lret
rol
xor
stos
das
xor
lds
mov
inc
dec
fnsave
fucomi
jne
call
arpl
stos
cli
mov
pop
hlt
inc
and
incb
cmp
mov
cmp
imul
cmpsl
mov
mov
daa
jmp
mov
sub
jnp
stc
ss
mov
das
aad
jge
sbb
jmp
and
test
stc
sbb
mov
sub
dec
imul
push
and
push
scas
add
or
lds
xchg
mov
call
jbe
ret
imull
stos
cltd
pusha
dec
scas
shrl
imul
mov
test
movsb
int3
pop
mov
cld
cmpsb
dec
imul
prefetch
je
jbe
stos
lahf
push
jle
les
andb
repnz
out
sbb
pusha
inc
xchg
or
adc
jb
sbb
cmc
popa
jl
jmp
mov
sub
mov
stos
mov
mov
icebp
stos
ja
xor
imul
fistpll
fidivrs
cmp
jb
arpl
insb
cltd
repnz
daa
lds
cmp
push
fs
dec
stos
cli
add
arpl
jns
stos
aam
cmp
stos
out
adc
and
jmp
stos
xor
inc
stos
mov
inc
cmp
sub
int
stos
ja
out
mov
xchg
in
stos
lock
jl
jns
push
dec
mov
push
cwtl
jmp
mov
mov
mov
or
iret
movsl
int3
stos
jnp
imul
scas
jl
inc
imul
imul
addr16
mov
dec
insb
sub
stos
int
xchg
arpl
dec
fisubs
sub
mov
sub
lods
in
dec
fs
sbbl
fadd
xchg
cmp
pusha
push
mov
cs
sahf
scas
sbb
in
stos
fwait
aad
pusha
pushf
pop
pop
stos
psubd
gs
cmp
stos
subl
adc
push
imul
cmc
loope
sti
stos
cs
adc
in
mov
movsl
add
inc
and
mov
push
daa
cltd
shl
stos
push
outsb
stos
iret
xchg
fwait
addr16
xor
call
daa
add
imull
subb
pop
arpl
pop
mov
sbb
stos
mov
in
inc
mov
imul
xor
dec
jae
fwait
das
pop
iret
pop
stos
and
xor
push
call
cmp
int
lcall
mov
repnz
mov
sub
mov
adc
stos
push
jl
jbe
xor
mov
ds
push
addl
orb
stos
stos
ret
push
stos
daa
push
push
xor
adc
mov
mov
shlb
loop
xchg
stos
roll
add
pop
es
scas
imul
xor
imul
stos
xchg
popa
mov
hlt
push
mov
pop
jae
test
in
loopne
or
dec
mov
pop
pop
sbb
into
jp
aam
lcall
loop
dec
adc
scas
out
std
xor
push
xor
hlt
and
and
mov
pop
imul
mov
jmp
movsb
data16
stos
xchg
les
enter
stos
movsl
lret
or
push
stos
ja
xor
mov
fbld
stos
sub
dec
insl
cmpl
dec
mov
jecxz
mov
add
into
stos
je
outsl
std
pop
stos
xadd
dec
stos
pop
or
sub
inc
outsl
or
stos
add
lock
push
sbb
xor
jb
lahf
mov
mov
test
and
out
inc
and
xchg
jns
xchg
loope
sahf
ljmp
cmc
and
negb
test
xor
int3
and
stos
popf
cld
xchg
imul
pop
mov
and
jmp
mov
xchg
in
jle
dec
dec
pop
xor
dec
add
lcall
dec
jbe
fldt
pop
dec
mov
dec
mov
xor
jnp
or
insl
jmp
pop
push
mov
lods
lret
xchg
clc
imul
xchg
dec
jmp
lods
pop
out
ds
push
jae
mov
mov
fisttpll
mov
jmp
sub
sbb
xor
into
mov
scas
pushf
cmpsl
mov
pop
pop
or
stos
pop
adc
cmp
fwait
dec
iret
adc
pop
stos
in
enter
sub
mov
fimuls
mov
stos
push
pop
or
cld
stos
pop
out
in
adc
nop
stos
jno
iret
rcrb
add
enter
in
movsb
mov
out
addr16
clc
mov
push
cmpl
movsl
stos
shrl
ss
push
test
fiadds
scas
std
popf
popf
pop
stos
xchg
in
add
mov
roll
dec
stc
test
xchg
jns
or
stos
jl
jno
and
jmp
inc
mov
fimull
orb
lret
stos
pop
int
push
jmp
test
pop
xchg
xchg
ret
pop
mov
cmp
fldt
repz
or
mov
add
stos
mov
ret
stos
mov
push
or
stos
xchg
mov
xor
stos
pusha
dec
daa
add
in
jmp
pop
mov
hlt
jno
rorl
filds
xor
jp
jle
push
cmp
fisttpll
or
cmpsb
subl
jmp
in
jle
shll
cmp
sub
decl
pop
lds
scas
test
inc
pop
gs
incb
scas
orb
stos
dec
or
inc
jmp
fsubr
outsb
insb
andb
inc
stos
jl
jecxz
in
jno
pop
stos
pop
ja
inc
into
cmpsb
mov
stos
enter
xchg
inc
mov
lret
imul
mov
and
xchg
dec
mov
push
popa
cli
stos
pop
mov
mov
test
xchg
xor
jmp
nop
adc
daa
adc
cli
adc
incl
jecxz
jo
jge
jmp
popf
inc
and
xchg
in
stos
sbb
imul
fnstcw
mov
leave
and
sti
xor
pop
aaa
cmp
mov
and
shlb
pushf
adc
imul
inc
xor
popf
mov
repnz
js
imul
mov
fstps
cld
xchg
rol
and
pushf
stos
sbbb
stos
cmp
add
iret
nop
repz
daa
aaa
push
pusha
loope
cmpsl
stos
mov
outsb
leave
in
xchg
or
stos
and
out
arpl
dec
subb
xor
icebp
scas
mov
and
cwtl
mov
push
stos
movsl
stc
xchg
dec
jge
pop
pop
stos
addr16
jae
cs
stos
adc
mov
and
cmpsb
shrb
jg
xchg
push
stos
aad
sub
fildll
test
loop
stos
xchg
mov
cmp
cmpl
mov
insl
ljmp
lcall
cld
stc
dec
mov
xchg
mov
mov
pop
imul
arpl
repz
cmp
cltd
jmp
push
sub
repnz
cmpsb
sbb
stos
adcb
inc
stos
xchg
push
jae
popf
mov
andb
cmp
imul
pop
mov
stos
scas
or
dec
cld
stos
aam
sub
cmc
into
test
ror
lods
mov
sub
stos
fsub
mov
add
mov
stc
xchg
in
pop
testb
daa
and
or
lock
scas
sbb
nop
mov
ficomps
xlat
incl
test
fnclex
and
bound
gs
enter
mov
in
test
jne
mov
pop
inc
je
mov
and
pop
adc
dec
fisubs
stc
stos
mov
hlt
lret
pop
and
stos
dec
jno
insb
and
fdivrs
cmpsb
jecxz
push
lcall
cmp
lret
mov
push
xchg
inc
das
stos
xchg
sahf
std
repz
mov
inc
fwait
cmpsb
loopne
mov
stos
jp
add
inc
stos
jbe
jae
enter
stos
jg
insl
sub
cmpl
daa
xchg
mov
push
fwait
out
adc
stos
ret
xchg
add
jmp
mov
in
lods
out
shlb
cli
aam
outsl
stos
repz
mov
mov
jmp
rcr
push
bnd
dec
adc
insl
insl
int
popf
sub
into
paddq
xchg
stos
jmp
mov
lock
ret
or
dec
subl
out
cli
inc
xchg
call
stos
fisttpl
test
xchg
js
xchg
inc
lods
je
or
cmpsl
rclb
mov
mov
clc
shr
dec
dec
push
mov
sub
mov
and
lahf
lds
mov
sahf
adc
in
mov
push
sub
stos
lods
mov
mov
nop
out
outsl
or
stos
loopne
mov
mov
iret
jmp
arpl
mov
in
stos
icebp
aaa
jns
mov
xor
pop
sub
pushf
loope
stos
push
adc
jmp
stos
cmc
adc
int3
repnz
popa
jg
ss
cld
outsb
cmp
out
sbb
sub
ret
stos
sbb
es
jmp
sbb
mov
pop
dec
sti
jge
xchg
sub
xchg
and
stos
outsb
test
mov
mov
stos
lods
xchg
js
cli
outsl
mov
gs
sub
bound
fwait
jge
imul
xchg
jns
daa
add
push
es
xchg
ljmp
pop
dec
gs
stos
xchg
test
psllq
mov
outsl
pop
push
mov
or
mov
and
gs
pop
pop
mov
das
jecxz
popa
add
dec
lods
jmp
stos
jo
ds
in
stos
mov
clc
aaa
and
pop
loop
adc
xchg
and
push
pop
lods
je
imul
mov
rol
push
dec
pop
orb
repnz
add
xchg
sbb
gs
movsb
lret
fsubp
pop
fdivs
popf
stos
mov
mov
and
jmp
xor
mov
stos
jb
aaa
pop
add
adc
js
mov
cli
and
daa
pop
sub
shl
stos
ret
lahf
lret
push
mov
push
xchg
push
push
jns
xchg
icebp
sbbl
test
ljmp
mov
inc
mov
stos
pop
pop
bound
clc
lds
xor
outsl
pop
xchg
repnz
or
mov
ja
jge
push
lcall
leave
adc
hlt
stos
std
jns
scas
in
sub
dec
dec
cmp
mov
movsb
jg
and
insl
stos
sti
or
mov
mov
test
cmp
xchg
aad
jb
shll
stos
data16
adc
adc
adc
out
das
inc
mov
jl
cs
scas
mov
je
jns
gs
stos
push
jae
aad
push
int
stos
out
je
aas
in
dec
movsb
mov
xchg
aaa
clc
out
adc
popl
xchg
dec
or
fwait
pop
lcall
jb
pop
out
outsb
or
cmp
push
or
inc
xchg
pop
lret
cmp
lods
bound
orl
out
in
xor
mov
imul
dec
dec
add
mov
pop
adc
stos
leave
shlb
mov
cld
push
inc
add
cwtl
add
imul
mov
stos
call
add
adc
and
push
pop
jo
popf
mov
sub
stos
fcmove
mov
inc
mov
adc
stos
je
push
mov
jmp
mov
ja
inc
jl
lcall
cmp
push
stos
xor
jle
cmpsb
stos
mov
loope
call
decb
sbb
and
repnz
fstps
mov
lret
fsubrl
call
pop
pushf
outsb
stos
cmp
xor
xchg
sbbb
cld
clc
movsl
movsb
cli
pop
push
fwait
mov
adc
pop
movsb
adcl
mov
pop
stos
stos
xor
inc
inc
and
stos
add
movsl
adc
stos
mov
push
rcll
and
in
cltd
mov
sub
mov
stos
and
imul
inc
std
shrl
aad
insb
stos
cmpb
cmpsl
aam
pop
stos
mov
mov
les
dec
jbe
mov
mov
adc
mov
or
ja
cmpsb
sub
mov
xlat
push
lods
call
leave
shrl
les
stos
inc
or
ljmp
pop
mov
jp
inc
jae
push
mov
test
stos
mov
cmp
mov
and
scas
insl
sbb
test
xor
stos
adcb
repnz
push
stos
push
mov
paddusb
loop
cmp
stos
jp
sbb
dec
stos
mov
fdivrp
pusha
jbe
sub
stos
or
nop
or
stos
test
cmp
sub
jmp
mov
and
addr16
mov
icebp
sub
xor
dec
movsb
lahf
mov
or
stos
pop
outsb
xor
mov
rolb
imul
sbb
inc
subl
xchg
push
jmp
or
mov
sbb
fwait
repz
stos
mov
mov
in
xchg
or
dec
fnstcw
ret
ds
out
sub
mov
stos
stos
cmp
add
test
push
push
or
fwait
cmp
incl
adcb
mov
pop
sub
mov
pushf
sahf
push
push
bound
xchg
stos
es
loop
test
int3
sbb
popa
insb
xlat
sbb
adc
sbb
shl
jb
test
xor
mov
add
cmp
idiv
lret
lea
mov
in
cltd
adc
aad
repz
sub
stos
xchg
cmp
icebp
jg
cltd
stos
mov
jne
jge
shlb
les
loope
or
push
adc
and
sbb
sbb
rclb
stos
js
and
lret
mov
sub
dec
mov
mov
imul
stos
pushf
sub
js
inc
cmp
divb
das
mov
stos
popf
iret
push
dec
fimuls
stos
jns
loopne
xor
mov
or
pop
adc
fwait
xor
mov
dec
stos
sub
mov
push
subb
repnz
push
dec
or
and
cs
adc
test
and
ret
jmp
mov
dec
inc
xor
mov
push
sbb
sti
bts
ret
popf
enter
stos
rcl
fs
leave
push
fwait
jo
mov
adc
stos
xchg
insl
and
push
loop
stos
add
mov
dec
or
push
stos
shlb
pop
imul
lods
fmuls
out
dec
not
jl
xor
mov
hlt
imul
push
or
fsubl
jecxz
subb
sbb
stos
mov
cmp
mov
pop
sti
mov
insb
sbb
arpl
jp
sbb
jnp
inc
inc
or
mov
mov
fmull
lods
adc
stos
cmp
sub
test
fistps
lea
mov
popaw
xchg
jge
iret
test
push
pop
dec
add
ja
shlb
xchg
stos
pop
aad
imul
lods
stos
test
out
push
jae
jmp
cmp
aaa
push
js
cwtl
lcall
sbb
shr
jno
ret
inc
insl
sub
in
scas
stos
or
out
mov
cmp
cmp
stc
popf
or
pop
out
jle
xor
shrl
xchg
gs
cmp
aas
mov
jecxz
aaa
mov
iret
xchg
xor
xchg
inc
call
dec
icebp
adc
pop
xlat
out
jle
fwait
ljmp
in
scas
adc
gs
sahf
stos
push
aad
dec
stos
pop
shll
pop
sbb
por
mov
and
mov
adc
and
sub
lcall
jb
jmp
dec
out
jp
fldt
sub
dec
sbb
push
push
inc
mov
cwtl
and
clc
daa
adc
stos
pop
out
ljmp
stos
out
icebp
je
push
jo
movsb
cmc
incb
pop
cmp
lock
cmpsb
jae
or
cmp
outsb
push
mov
mov
pop
add
pop
sbb
outsl
movsl
test
lods
mov
sub
stos
push
bnd
xchg
stc
pop
mov
or
mov
adc
stos
daa
sbb
xor
mov
ja
mov
cwtl
into
movsb
sbb
mov
cmp
and
gs
faddl
sbb
cmp
loop
lea
imul
cs
scas
fstpl
cmc
xor
leave
xlat
mov
stos
cmp
push
and
into
lds
or
cmp
dec
imul
clc
mov
mov
inc
sub
cmp
mov
shll
mov
xor
cmp
mov
insb
fs
inc
cmpsb
es
daa
gs
dec
cmp
mov
add
mov
jp
lahf
and
jbe
test
loope
xchg
imul
mov
stos
xchg
mov
xchg
jmp
int
ds
loopne
mov
sahf
insb
stos
imul
loop
adcl
sbb
mov
jno
mov
outsl
sub
stos
or
add
das
xchg
and
dec
sub
mov
test
jmp
leave
pushf
xor
mov
dec
mov
jg
xor
pop
out
aam
lock
stos
popl
test
stos
andl
lods
pop
cld
sahf
cmp
call
jns
stos
iret
or
daa
pop
cli
jae
addr16
xchg
stos
pop
adc
shrl
cwtl
mov
sub
inc
xor
push
bound
mov
sarl
pusha
std
push
loopne
dec
inc
xchg
stos
gs
insl
cmp
stos
sub
std
jnp
pop
mov
mov
mov
xchg
ret
cmp
insl
data16
imull
mov
pop
dec
push
pop
cltd
mov
adc
or
aad
in
shll
aam
cli
out
test
stos
mov
mov
movsl
stos
or
mov
pop
sbb
or
pop
loop
lock
stos
sti
loope
mov
dec
adc
int
cmp
stos
int3
or
fstps
loope
adc
or
lahf
cmc
stos
xor
inc
pop
sub
push
mov
inc
adc
imul
mov
arpl
mov
fnstcw
in
jb
imul
sub
xchg
pop
mov
fs
addr16
jg
mov
stos
cmp
mov
dec
mov
stos
in
and
movsb
dec
jae
stos
notb
inc
fildll
ret
mov
mov
outsb
sahf
mov
jle
mov
daa
mov
pop
jp
mov
stos
daa
outsb
test
xor
push
cmp
iret
cmp
cmp
ret
test
pop
dec
imul
jmp
lret
shrl
push
movsb
jmp
fistpl
push
nop
or
sub
mov
xchg
jo
scas
aaa
stos
push
push
cltd
xchg
scas
aas
mov
xchg
pop
push
jmp
cs
xor
pushf
push
stos
popa
adcl
and
add
fdivs
cmpsl
stos
pop
push
popf
sbb
mov
push
test
mov
addl
sub
sbb
mov
movsl
stos
mov
mov
push
lahf
nop
pop
stos
pop
pusha
and
data16
shrl
fstl
cltd
repnz
mov
fimull
xor
jo
enter
or
test
pop
int
mov
pop
enter
lea
stos
mov
pop
xchg
dec
cmpsb
xchg
or
icebp
fimull
stos
repz
push
les
adc
enter
xchg
out
pop
jmp
daa
fldl2t
lahf
mov
stos
int
lds
and
mov
xchg
jle
stos
and
aaa
stos
sub
jmp
stos
and
adc
sbb
inc
stos
and
shl
sbb
cmp
mov
gs
loope
mov
sub
xchg
lods
movsb
jmp
and
jmp
fdivl
rorl
stos
mov
jne
sbb
mov
stos
sub
mov
stos
sub
cmp
dec
push
sub
stos
mov
sub
mov
das
std
jmp
stos
jecxz
vmwrite
aaa
lret
inc
xor
dec
stc
sbb
push
mov
push
push
cwtl
and
rcl
stos
jbe
jb
mov
pushf
test
push
test
sbb
push
dec
pop
dec
add
push
aaa
bound
adc
adc
into
mov
pop
stos
xchg
add
gs
add
ljmp
andl
pop
dec
iret
stos
std
xchg
or
and
es
xchg
inc
out
stos
adc
add
adc
sbb
aaa
clc
hlt
push
mov
lahf
in
fcmovnbe
out
call
stos
mov
movsb
fbstp
bts
xchg
xor
and
lock
fsubrs
cmp
fwait
shlb
imul
dec
stos
pop
mov
sbb
stos
xchg
aam
js
ss
xor
cmp
mov
and
jmp
sahf
addr16
mov
cmpsl
jl
adc
jmp
jno
cli
stos
out
sub
pop
stos
fucomi
push
in
mov
push
shrl
aad
adc
jb
dec
stos
add
js
cmp
inc
ret
mov
mov
lret
mov
add
inc
fdivl
pop
inc
mov
dec
inc
pop
movsb
cmc
mov
test
insb
xchg
adc
sbb
rsm
lods
jmp
xchg
xchg
sub
cmpsb
push
cmc
inc
jmp
or
in
dec
push
mov
sbb
pop
aad
lods
xchg
jno,pt
jne
test
mov
mov
daa
dec
shrb
jae
ret
cmpsb
mov
inc
mov
pop
sahf
push
or
xchg
mov
aam
mov
xor
stos
jae
shrb
adc
jmp
test
fnstsw
mov
mov
xchg
stos
rcrb
aaa
and
out
stos
add
out
jbe
stos
adc
sahf
icebp
push
mov
cltd
outsb
aam
xor
jbe
push
push
push
mov
fcompl
push
jo
push
fwait
push
scas
sar
stos
icebp
hlt
lock
xchg
push
add
jne
test
or
inc
cmpl
stos
jl
pop
fucom
andb
jl
std
stos
shrl
test
popf
stos
daa
inc
pop
bound
ss
jp
mov
enter
data16
and
sti
xchg
std
cmp
jns
aad
lea
mov
mov
aam
mov
jecxz
fwait
dec
iret
pop
and
addr16
lcall
jl
scas
daa
inc
mov
xor
mov
pop
mov
mov
adc
push
sbb
stos
jb
or
cltd
ret
sub
adc
jbe
aaa
test
pushfw
stos
or
adc
push
dec
cmp
jns
lret
dec
xor
cmpsb
xor
inc
std
ljmp
push
leave
aad
sbb
call
and
or
in
pusha
test
icebp
fstpt
add
cmp
or
stos
cmp
push
dec
shlb
xor
xor
mov
inc
dec
or
popf
iret
stos
mov
fs
jae
sti
xor
ret
int
mov
stos
pushf
lea
and
sub
inc
cmp
xchg
aas
iret
filds
dec
pushf
mov
jmp
stc
sbb
cmpsb
push
mov
add
jecxz
fwait
sbb
xor
jmp
mov
sbb
or
scas
jbe
sbb
mov
out
imulb
push
push
out
and
add
stos
and
outsl
insb
bound
mov
push
inc
dec
movl
aaa
inc
enter
shl
lea
cltd
imul
xchg
cmpsl
sub
mov
dec
daa
and
or
jnp
lods
xchg
push
xor
in
sub
xchg
jne
sub
insl
arpl
stos
shrb
addb
rorl
lahf
inc
mov
jmp
stos
dec
popa
pushl
daa
pushf
stos
sub
cmpsb
mov
icebp
mov
or
xchg
mov
push
push
or
mov
cltd
adc
fdivrp
mov
inc
sub
mov
dec
stos
leave
movd
stos
arpl
push
push
std
lods
out
mov
mov
inc
stos
and
fnsave
pop
and
xchg
xchg
or
and
icebp
out
xlat
aam
call
push
dec
repz
stos
xor
bound
fnstsw
movb
daa
stos
ret
data16
xor
mov
into
dec
stos
fs
or
sub
divb
stos
lret
sbb
lea
mov
clc
outsb
xchg
jns
daa
xorb
push
cwtl
and
stos
enter
push
push
add
mov
aam
sbb
cmp
scas
sbb
push
test
sbb
out
stos
inc
jae
das
mov
stos
shr
adc
movsb
jp
mov
fdivrs
dec
es
or
repz
or
cwtl
sahf
adc
push
cli
ds
xchg
stos
mov
mov
stos
mov
repz
mov
shrl
dec
jmp
iret
mov
addr16
stos
repnz
fwait
adc
cmp
cmpsb
inc
or
clc
jle
mov
pop
pop
outsl
mov
stc
push
daa
sub
sbbb
push
inc
cmp
push
fisubrl
imul
xor
shl
xor
out
fwait
stc
outsl
adc
push
inc
stos
or
cld
popf
arpl
mov
mov
adc
sub
stos
arpl
add
rclb
leave
stos
mov
add
stos
push
xchg
ja
add
out
mov
or
sahf
leave
or
stos
push
cmc
cs
dec
pop
imul
lret
cli
es
xchg
jge
stos
sub
fimull
jns,pt
les
filds
adc
shrl
jmp
fisubl
cwtl
sub
pop
testl
cmpsb
pop
mov
or
sub
js
sbb
in
cli
frstor
inc
xor
aas
cli
sub
mov
sti
jge
stos
lret
imul
or
sarb
stos
and
inc
popl
stos
push
aad
sarb
cld
jmp
mov
adc
mov
hlt
fsubrs
ficomps
cs
mov
adc
cmpsl
cmp
sbb
insl
stos
adc
dec
stos
bound
mov
mov
clc
lret
cmp
mov
lea
push
xor
iret
xor
popf
gs
daa
stos
xchg
sbb
mov
stos
stos
bound
cmpsb
xchg
stos
pop
jge
xchg
add
ficoml
ror
jmp
jnp
sub
xor
aam
lcall
mov
add
stos
dec
sbb
cmpsb
stos
dec
imul
cmp
mov
sub
outsl
stos
test
inc
jmp
mov
pop
shll
push
xchg
pop
arpl
push
jmp
inc
cmp
pop
stos
pop
cld
cmp
push
mov
lods
mov
rcrb
test
out
xchg
rorb
cmpsl
cmc
lret
jnp
push
sub
inc
mov
imul
stos
push
call
aad
stos
rolb
icebp
cmp
xor
fs
mov
cmp
inc
ret
mov
inc
mov
shrb
pusha
or
and
pop
lret
lock
stc
cwtl
stos
iret
inc
aam
mov
push
pop
fcoms
dec
stos
or
add
adc
pop
cmpl
stos
sub
sub
lods
jmp
rcl
push
insb
js
ss
stos
les
jp
inc
add
daa
icebp
pop
popf
ds
cwtl
push
imul
mov
addr16
add
inc
ret
fwait
sbb
sub
mov
lock
add
imul
arpl
scas
icebp
mov
push
sahf
mov
add
inc
mov
mov
mov
adc
ffreep
xchg
int
testl
dec
stc
lods
movsl
aaa
clc
sahf
jb
dec
xor
pop
mov
popf
sbb
cli
dec
adc
mov
into
jo
sub
or
sub
out
and
adcl
cmp
mov
dec
xor
aas
and
int
lret
mov
dec
and
das
pop
jns
xchg
in
adc
inc
push
popf
stos
mov
xchg
xchg
outsl
pop
push
stos
pop
in
sbb
xor
lods
stos
in
mov
cmp
fs
cs
repz
and
imul
jno
cmp
or
push
in
dec
add
mov
inc
in
cmp
aam
repz
testb
pop
jne
jle
cmp
and
xchg
jbe
lods
scas
xorl
cli
loope
aad
stos
cmc
leave
popf
pop
std
lret
xchg
cmpsl
imul
add
inc
stos
ljmp
ljmp
push
xor
pop
das
mov
mov
out
xor
mov
sbb
cmp
ja
jo
aad
fisubrs
cmp
test
cld
fisttps
cmp
neg
cmp
pop
std
setle
sub
mov
dec
addr16
sub
add
add
aaa
stos
pop
sbb
adc
stos
shlb
cmpsb
mov
xchg
sub
arpl
push
mov
stos
test
outsl
daa
sub
xchg
or
fwait
sbb
cmp
mov
stos
shlb
adc
push
lret
mov
mov
add
mov
or
hlt
mov
popf
dec
stos
push
js
insl
leave
mov
je
shlb
sub
and
loope
jge
inc
lcall
std
push
sbb
xchg
jl
dec
mov
pop
adc
xor
imul
xor
xchg
imul
stos
std
pop
sub
or
cmpsb
stos
mov
add
aaa
loopne
loope
divb
xchg
jp
xor
jne
and
popf
mov
add
sbbl
ret
and
add
cmp
xor
in
mov
xchg
cmc
das
push
scas
dec
stos
out
jb
jge
mov
stos
pop
mov
push
adc
xor
bound
decl
into
lods
push
ret
xor
sahf
xchg
stos
andl
daa
shll
mov
popf
test
add
jae
dec
lds
and
sub
dec
imul
pop
stos
pop
mov
mov
cmp
aaa
push
in
mov
stos
mov
in
mov
divb
cmpsl
cmp
pop
mov
nop
insb
repz
dec
das
std
stos
js
jle
mov
stos
fidivl
push
sub
scas
es
rclb
shll
out
movsb
push
sbb
mov
dec
imul
inc
popa
aad
stos
fs
insl
xchg
aas
fisubrl
inc
mov
push
fwait
test
mov
data16
push
mov
ret
hlt
and
cmp
dec
push
inc
jae
rcll
int3
xor
jb
cmc
stos
loope
enter
xor
stos
xchg
movsl
loopne
testl
pop
stos
jecxz
mov
pop
stos
adc
inc
xchg
push
jnp
lock
and
mov
dec
lds
push
sub
mov
ds
shrb
popa
adc
xlat
push
loopne
shll
ret
or
cli
insl
je
scas
stos
and
loope
add
leave
xchg
ret
mov
int
or
cmp
insl
inc
dec
ret
xchg
mov
xchg
cmp
push
mov
int3
and
add
stos
cmp
jg
or
inc
xchg
jge
xor
int3
stos
stc
not
mov
ror
popf
je
mov
test
scas
cs
sub
sub
pop
push
popl
mov
mov
stos
sbb
mov
jle
pop
mov
inc
movsl
cmp
nop
stos
leave
orl
test
mov
cmp
fldcw
xlat
stos
roll
hlt
pop
imul
mov
stos
pop
in
ja
sbb
jne
push
mov
scas
xchg
jge
sub
stos
xchg
mov
sub
stos
arpl
dec
inc
sbbb
stos
inc
adc
jne
jge
cmpsb
stos
ror
sqrtps
iret
mov
xchg
fstpt
xor
jl
jle
ret
push
jmp
xor
testb
jo
mov
jecxz
daa
xor
std
test
dec
ljmp
xor
imul
sbb
in
imul
mov
pop
push
les
mov
cmp
mov
xchg
lahf
xchg
js
mov
movsb
dec
mov
push
ss
push
xchg
test
stos
xchg
rcrb
cmp
mov
or
stos
idiv
pushf
cli
inc
push
dec
stos
out
out
sbb
stos
sbb
icebp
iret
test
stos
ffreep
mulb
jae
int
out
cltd
xor
or
ljmp
mov
xchg
sub
or
ret
stos
inc
outsl
in
inc
mov
stos
mov
mov
subl
adc
push
adc
aam
es
add
pop
add
and
xor
jecxz
hlt
sbb
add
inc
gs
test
stos
fcmovbe
mov
testl
sahf
imul
inc
sub
xchg
inc
push
sti
add
in
es
rol
sbbl
pop
inc
fcoml
nop
dec
in
mov
ss
aas
pop
adc
mov
gs
fdivs
or
jecxz
stos
pushf
jg
mov
push
inc
push
movsb
std
sub
jns
xchg
inc
lahf
in
add
mov
push
dec
cmp
push
xor
je
fistpll
xor
jl
jecxz
dec
pop
stos
lds
int3
push
scas
mov
xchg
das
faddl
stos
inc
mov
xor
mov
xchg
push
ret
out
stos
loopne
enter
mov
stos
aaa
mov
jae
mov
push
jmp
std
mov
push
dec
mov
aas
push
lahf
mov
ljmp
xchg
daa
xor
in
jne
stos
lock
aad
lahf
jbe
pop
jl
lds
les
dec
scas
mov
mov
stos
cmp
leave
or
in
stos
mov
mov
xlat
out
lea
xor
lods
sbb
adc
lcall
pop
and
sbb
nop
stc
xchg
dec
loop
movsb
mov
adc
lds
push
mov
mov
roll
aaa
and
stos
ss
loopne
inc
out
stos
int3
js
pop
stc
xor
inc
ret
xchg
into
pop
stos
dec
or
inc
insb
sub
xor
push
in
shrb
mov
xchg
aaa
fildll
mov
or
xchg
and
in
push
stos
and
aad
stos
mov
mov
punpckhwd
outsl
inc
lods
btr
cmpsb
mov
or
and
inc
and
movsb
mov
fnstsw
shrb
xchg
dec
stos
sbb
mov
pusha
daa
rcl
dec
xor
js
jp
in
cs
jg
lret
outsb
decl
adc
stos
repz
stos
fucomp
push
inc
in
cmp
mov
icebp
jb
xor
leave
pop
mov
cmp
stos
sahf
out
pop
in
aas
and
mov
sbb
pushf
arpl
jns
cli
loop
stc
xchg
subl
into
or
adc
stos
push
jne
pop
dec
inc
mov
xchg
mov
mov
inc
cli
mov
loop
add
jns
fmul
dec
stos
mov
jecxz
push
pop
nop
push
imul
scas
test
push
and
dec
sti
mov
push
and
or
sbb
and
jno
jbe
test
pop
arpl
std
stos
jge
ret
cmpsl
fwait
mov
daa
addr16
fnstcw
pop
push
out
je
lret
xor
push
int3
inc
add
jmp
jae
pop
jge
push
mov
ret
jne
jl
loopne
xchg
in
sub
test
pop
fmull
xchg
push
stos
or
or
stos
jno
lods
mov
stos
jge
rclb
scas
test
push
sub
mov
adc
outsl
mov
scas
dec
xchg
xor
leave
xor
mov
mov
stos
mov
jno
stos
xchg
mov
xchg
xchg
aaa
rorl
cmpsl
xor
incl
std
pushf
inc
cwtl
fdivrp
jb
mov
lds
or
jecxz
xchg
cmp
fsubrs
xor
push
jae
pop
jno
or
mov
out
pushf
stos
mov
mov
stos
and
insl
adc
stos
lret
fisubl
sbb
mov
out
sbb
dec
push
icebp
clc
xchg
pop
dec
cmp
mov
push
or
and
jge
stos
push
mov
stos
cwtl
js
mov
dec
in
sbb
movsl
adc
mov
add
jmp
fwait
cmpsb
rorb
daa
outsl
cwtl
mov
imul
imulb
int
push
mov
sbb
mov
xchg
lea
pop
push
fdivrs
stc
scas
push
stos
mov
stos
cmp
test
inc
inc
shrl
cmp
sahf
insb
lods
push
push
dec
fstl
out
stos
lret
rcl
mov
cmp
jns
cmpsl
imul
sub
xor
sti
adc
and
inc
js
stos
cli
enter
fisttps
ret
xchg
arpl
popf
jp
jnp
xchg
popf
hlt
cmp
stos
inc
pminub
adc
jl
rolb
sbbl
lret
scas
lcall
xlat
pop
sbb
mov
mov
jmp
push
cmc
xchg
shll
int
inc
mov
icebp
fisttpll
in
test
scas
mov
outsb
movsl
mov
dec
mov
nop
data16
fucomp
clc
xchg
xchg
ljmp
lods
test
inc
pop
fbstp
stos
int
jp
mov
adc
stos
dec
mov
ja
dec
sar
divb
stos
cmpsl
ds
and
int3
adc
imul
jnp
outsl
jbe
jns
loopne
lock
push
pop
lods
sbb
lret
mov
jae
ljmp
fisubl
fnstsw
stos
jae
mov
je
outsl
imul
stos
aas
outsb
paddb
mov
add
repz
fimull
xor
add
in
orb
mov
cli
pop
xchg
sub
mov
xchg
test
stos
std
les
xchg
cld
mov
repz
fldl
js
popf
out
pop
lcall
jnp
push
stos
sbb
and
or
jne
movsl
test
dec
inc
cs
stos
movsb
jmp
pop
daa
dec
jno
jns
push
cmpsl
mov
mov
pushf
mov
ror
stos
jnp
mov
sbb
jmp
xor
jmp
pop
cmp
fistps
stos
aad
pop
sbb
pop
stos
jg
xor
cld
lret
mov
sub
aaa
repz
lods
out
addr16
bound
inc
push
stos
mov
std
adc
in
mov
mov
jmp
cld
ljmp
jl
in
stos
xor
adc
sti
cmpsb
pop
testb
stos
cmp
push
xchg
mov
stos
mov
aaa
sar
push
adc
int3
mov
stos
add
out
shl
push
pusha
adc
stos
mov
and
fimull
stos
or
xor
add
subb
push
add
inc
shl
mov
jb
ljmp
inc
iret
scas
mov
neg
or
leave
mov
pop
adc
adc
push
stos
out
fmul
xchg
cmp
movsb
mov
insb
sbb
lcall
loope
test
pushl
push
iret
cld
loop
mov
test
cmc
push
lods
add
bound
sbb
add
js
je
jmp
inc
aad
mov
pop
mov
sub
mov
lret
dec
mov
jl
lods
and
ds
cmp
inc
push
xor
or
insl
pop
stos
push
loop,pn
xor
popf
mov
mov
lret
xchg
sub
stos
sbb
pop
jp
ds
inc
stos
adcl
cmp
or
mov
push
xchg
dec
outsl
arpl
in
jnp
xchg
mov
test
aas
cmp
xchg
add
mov
cwtl
cltd
fadd
and
daa
mov
dec
push
stos
mul
add
bnd
test
int
notl
adc
push
jmp
lcall
and
stos
and
stos
out
ja
jg
mov
or
or
dec
push
in
jb
mov
fbld
stc
sub
push
stos
insb
and
mov
mov
stos
cmpsb
and
imul
push
inc
mov
xchg
pop
je
cmp
mov
adc
pop
test
stos
fmul
aad
push
push
out
pop
mov
insl
test
adc
push
mov
push
jns
test
xor
xchg
out
ror
stos
pop
jg
mov
imul
and
pmuludq
and
dec
xchg
movsb
pop
mov
iret
mov
xchg
ffree
stos
dec
cmp
xlat
or
xchg
fcmovnu
movsl
stos
out
repz
xchg
lret
stos
xlat
aas
and
shlb
lcall
sbb
jle
jmp
lret
stos
dec
mov
icebp
stos
xchg
jo
cli
into
inc
ja
stos
mov
sbb
cmpsb
jne
stos
xor
sar
or
stos
lods
cs
mov
cmp
stos
rcll
imul
sub
std
stos
ret
jae
pop
clc
stos
lcall
inc
sub
js
inc
inc
adc
pop
xchg
es
in
rcrb
mov
jae
leave
dec
mov
lock
xchg
xchg
mov
addl
stos
adc
test
xchg
data16
pop
and
xchg
mov
dec
push
or
shl
shll
addb
stos
subb
ja
ss
mov
hlt
std
or
fmuls
cmp
xchg
and
movsb
mov
ret
lea
or
movsl
jne
cmp
in
sub
stos
and
mov
pop
ror
loope
iret
icebp
sub
add
int
addr16
inc
mov
pusha
insb
imul
ljmp
xchg
mov
jmp
cltd
mov
dec
pop
xor
push
popa
push
stos
mov
add
test
push
cltd
sub
stc
stos
xchg
iret
sub
push
pop
dec
stos
mov
sbb
fsubrl
repz
mov
es
mov
mov
sti
jns
pushf
loope
cmp
outsl
mov
in
dec
or
sbb
cmp
mov
daa
fwait
push
stc
inc
cmpl
pop
es
cmpl
divb
add
fistpl
test
mov
stos
xchg
into
push
push
sub
imul
shrl
jae
dec
push
lret
and
movsb
out
xchg
mov
pop
mov
cmp
sbb
movsl
lar
add
in
push
sub
mov
stos
or
lret
sub
mov
push
push
adc
mov
stos
add
imul
adc
xchg
cwtl
aam
lcall
xchg
pop
mov
pop
pop
sub
jmp
addr16
jle
subb
lds
test
repz
daa
push
imul
xchg
cltd
cld
stos
ljmp
pop
stos
dec
mov
jbe
movsl
sub
stos
arpl
xchg
stos
aam
xchg
cltd
fsubrs
sbb
mov
xor
adc
mov
stos
ljmp
inc
stos
aam
scas
aas
ffreep
stos
lods
fldcw
inc
stc
jbe
nop
stos
mov
mov
lret
stos
fidivs
clc
stos
dec
jmp
scas
mov
push
mov
jne
add
xor
mov
push
jp
js
mov
nop
subb
gs
or
dec
pop
dec
lahf
scas
dec
nop
repnz
shrb
stc
dec
dec
inc
lahf
or
int3
mov
cli
stos
sbb
cmp
mov
lods
pop
inc
out
fisubrl
lcall
pusha
dec
inc
and
and
fs
jmp
in
pop
arpl
lods
cmpsb
shrl
pop
loope
pop
stos
xor
insl
push
pop
adc
stos
loop
jb
sub
mov
mov
into
dec
stos
in
imul
pop
and
stos
sarb
scas
stos
test
push
jb
out
stos
clc
loop
xor
ljmp
enter
jmp
mov
jo
iret
dec
stos
pop
and
andb
sbb
sub
rcrb
inc
push
xchg
ret
stos
xchg
xchg
sbb
mov
lock
dec
mov
dec
bound
mov
pop
outsb
ljmp
fs
dec
stos
cmpsl
xchg
sub
pop
add
mov
pop
clc
fcoml
das
pop
stos
mov
mov
loop
fwait
push
repz
call
jecxz
sbb
mov
mov
imull
or
dec
icebp
or
imul
sub
jg
push
nop
stos
es
testb
push
daa
dec
das
jno
mov
mov
xor
jmp
jp
push
cld
stos
adc
cmp
stos
sbb
scas
mov
ja
std
mov
xchg
stos
daa
sub
stos
sbb
hlt
jle
sbb
shlb
ret
out
jmp
mov
jbe
jae
xchg
inc
sbb
inc
stos
and
xor
jnp
adc
inc
mov
ljmp
jge
aas
in
adc
stos
test
call
xor
jnp
daa
push
mov
dec
sbb
fsubs
inc
adc
clc
andb
rcrl
test
stos
xchg
add
jge
jbe
stos
mov
gs
sub
jmp
out
mulb
dec
mov
scas
sbb
in
lret
adc
aas
arpl
je
stos
inc
fs
add
lahf
mov
test
adc
notb
stos
or
lahf
cltd
xchg
stos
dec
movsl
add
test
jp
sub
mov
jle
std
popf
out
dec
mov
inc
push
stos
mov
out
mov
stos
mov
cld
andl
mov
stos
sub
xor
inc
into
xchg
sbb
lods
aad
mov
popa
int3
stos
fnstenv
scas
pop
stos
test
and
mov
push
add
cwtl
ss
pushf
stos
inc
pop
lock
out
xchg
pop
cmp
fstp
in
mov
add
push
es
ds
sbb
callw
dec
repnz
stos
or
xchg
fucom
das
daa
stos
inc
ja
pop
inc
push
enter
mov
jmp
arpl
shrb
inc
stos
cld
mov
outsb
sub
adc
leave
mov
loopne
cmpsb
xchg
stos
sub
cmp
fsts
je
jg
fsubl
mov
ja
int
popa
call
xor
lret
push
adc
gs
sbbl
stos
cmpsb
scas
clc
insl
adc
jmp
cld
imul
jne
imul
stos
cmp
js,pt
xor
xchg
stos
cwtl
xchg
gs
stos
shll
push
inc
mov
ret
pop
sub
fmulp
and
cltd
add
lock
cmp
inc
inc
ror
mov
mov
inc
cmp
int
stos
cltd
inc
jb
mov
dec
popa
and
fdivl
cmp
stos
mov
cs
fsin
fdivl
stos
outsl
mov
push
jle
sbb
mov
or
jmp
sub
sbb
fsubrs
push
mov
jno
movsb
ljmp
outsl
stos
jne
push
lret
movsl
imul
or
nop
je
lods
cltd
stos
popa
in
mov
imul
xchg
stos
push
int3
sub
inc
inc
sbb
lret
pop
ret
pop
stos
imul
push
stos
out
xchg
and
popf
xchg
sahf
sbb
xchg
cmc
in
ljmp
dec
loopne
xchg
fcom
mov
and
push
movsl
bound
add
sub
cmp
xor
mov
xchg
and
inc
loop
inc
stos
lock
fdivs
add
jo
stos
gs
call
lret
stos
iret
mov
push
fisubs
test
adc
cmp
push
notb
out
cltd
push
cli
in
push
into
push
popa
dec
ret
scas
cmp
stos
jge
lret
cltd
sub
add
pop
lock
daa
push
pop
stos
add
cmp
and
and
and
mov
stos
cmp
dec
add
adc
imul
mov
inc
call
jmp
test
lahf
dec
leave
fucomi
mov
cmp
jge
mov
imul
fldt
or
stos
jle
mov
addr16
loope
in
sub
mov
insb
nop
stos
pmullw
popa
arpl
stos
jo
into
cld
inc
mov
divb
fsubrs
sub
stos
xlat
inc
sti
in
dec
adc
inc
stos
add
loopne
and
leave
dec
mov
shr
out
mov
insb
lret
adc
imul
or
push
xlat
jns
nop
mov
mov
popa
push
movsl
xchg
jmp
addl
inc
ljmp
add
sub
sbb
xchg
enter
arpl
sub
adc
stos
cmp
mov
add
outsl
clc
xor
lret
or
xchg
repnz
imul
sbb
add
sti
sub
jg
mov
ss
stos
std
sub
or
push
xor
mov
addr16
push
fstl
add
imul
pop
arpl
lcall
adc
imul
mov
mov
xor
push
and
inc
lea
mov
stos
adc
std
add
out
stos
es
cli
xor
ret
arpl
mov
stos
mov
and
andl
stos
adc
inc
or
jns
stos
xor
cmp
push
cltd
xlat
sti
adc
pop
jl
or
mov
ficoml
lock
lea
cmpsl
inc
and
icebp
in
jecxz
leave
xor
jle
rolb
push
xchg
fildll
stos
mov
inc
xor
jmp
scas
orl
xchg
flds
repnz
sub
shrb
loop
mov
sub
stos
mov
push
pop
aam
add
jge
dec
mov
pop
test
jbe
into
fwait
mov
adc
stos
stc
sti
and
leave
stos
fcoml
mov
cmc
mov
cmp
dec
into
aaa
ljmp
push
popf
jle
mov
lds
dec
int
lods
mov
push
cmp
adc
loope
stos
in
frstor
mov
stos
pop
dec
fcoml
cmp
stos
cmpsl
add
stos
mov
cmpsb
repz
cmovg
rcrb
sbb
stos
cs
notb
xor
aad
dec
mov
test
addr16
lahf
mov
cmpsl
mov
inc
jg
mov
ja
mov
jge
add
mov
nop
loop
mov
lea
rcr
push
jmp
mov
and
mov
xor
sbb
jmp
stos
pop
pushfw
mov
rcll
dec
push
jnp
popf
stos
sbb
mov
cltd
mov
sub
lea
mov
pop
stos
pop
sub
mov
into
test
in
mulb
ret
mov
repz
adc
pop
xorl
fisubrs
xchg
in
int3
stos
dec
jge
xchg
movsl
adc
cmpsl
shll
mov
add
call
jae
jmp
aas
push
test
stos
adc
dec
stc
cmpsb
in
cmp
inc
pop
fwait
pop
push
lds
sbb
lret
sub
stos
push
push
mov
ss
stos
fcmovnu
jb
add
inc
stos
pop
int
xchg
jp
cmp
pop
in
out
in
or
push
test
mov
add
loope
inc
imul
xchg
pop
jnp
js
shl
test
mov
std
xchg
std
stc
decb
inc
out
dec
stos
mov
inc
or
xchg
mov
stos
cmpsl
pop
fldt
into
jne
inc
in
fwait
psraw
cmp
in
pusha
jb
xor
adc
clc
shll
shrl
inc
aam
xor
stos
jnp
shl
movzbl
cltd
fsubl
adc
stos
out
xchg
jbe,pn
mov
mov
sbb
fimull
popf
inc
and
mov
popa
outsl
imul
jge
rcll
movsb
pop
and
cmp
sarl
dec
push
mov
dec
psadbw
dec
sub
xor
xlat
mov
imul
mov
stos
and
add
jb
adc
mov
lret
push
mov
hlt
pop
out
pop
stos
ret
iret
add
push
pushw
fs
mov
rorb
stos
dec
pop
gs
add
scas
add
cmc
push
and
jecxz
out
popa
es
fisubrl
add
adc
stos
cli
and
hlt
xor
mov
jmp
dec
and
lods
rcr
stos
inc
fwait
inc
jns
out
test
stos
mov
xor
dec
mov
stos
adcl
adc
mov
test
add
adc
filds
and
paddq
movsl
dec
pusha
shl
lods
or
stos
mov
push
sub
inc
add
jb
xlat
sbb
daa
adc
js,pt
mov
xor
inc
sub
mov
ret
movsl
fwait
test
stos
pop
cmp
js
and
mov
std
les
jo
clc
lods
pop
mov
jle
add
lcall
out
aas
push
imul
inc
add
stos
pop
mov
push
add
stos
xorb
push
push
outsl
mov
jb
stos
inc
push
xor
test
pop
in
fisttpll
cmp
mov
in
pop
stos
push
add
aaa
mov
jp
cmpsl
cmp
stos
jns
pop
xor
fidivrl
xchg
test
or
jmp
jae
shrb
cmp
and
stos
mov
inc
push
insb
or
add
mov
negb
fisubrs
pop
out
xor
mov
int
stos
in
cmp
out
and
xor
lret
dec
mov
sahf
stos
mov
cmc
pushl
jb
nop
shr
and
or
fwait
inc
out
pop
stos
pop
iret
add
or
xor
int
sub
xchg
mov
inc
lcall
mov
inc
std
stos
mov
and
xor
add
insl
lcall
stos
inc
mov
inc
mov
lret
jg
mov
sbb
mov
int3
repz
cmp
stos
ljmp
xor
sarb
sbb
stos
lea
test
jbe
push
dec
fwait
push
cmpsl
popf
push
or
cltd
imul
es
xchg
cltd
cmp
sbb
sub
test
scas
out
es
add
sahf
iret
data16
mov
mov
out
stos
pop
ret
enter
cltd
stos
add
mov
test
fldl
aad
shl
es
stos
mov
or
daa
stos
and
testb
scas
sub
mov
rorl
shrb
xchg
filds
popf
cmp
in
lahf
nop
mov
mov
pushf
and
out
aad
addb
bound
mov
sub
jmp
jns
mov
jne
mov
jge
sahf
cld
dec
and
scas
dec
jmp
xor
jae
dec
sub
sbb
imul
jle
cli
in
movb
sub
in
add
bound
push
adc
clc
push
ret
aaa
and
out
stc
lret
cmpsb
sbb
mov
imul
lahf
lcall
cmp
cmp
push
push
mov
mov
fs
stos
xchg
pop
lea
shrl
in
mov
push
push
dec
dec
ja
adc
add
or
mov
push
stos
insl
aad
jbe
mov
xor
out
fistl
outsl
rcrl
stos
push
cmc
sub
ret
rolb
lcall
and
mov
aam
loop
fbld
inc
sub
mov
fisttpl
daa
add
popa
hlt
stos
fstps
jns
jmp
incl
cltd
jle
int
stos
mov
pop
dec
ret
mov
pop
jmp
pop
stos
push
mov
je
stos
repz
jg
push
inc
cwtl
stos
std
sbb
inc
push
sub
mov
mov
or
mov
xchg
mov
sbb
mov
lods
mov
push
mov
or
das
or
push
add
xor
mov
mov
sahf
icebp
mov
sbb
xor
push
jno
addl
stos
insb
cmp
in
stos
adc
aam
pop
jmp
sti
lods
inc
movsb
dec
lcall
bswap
cmp
je
rcr
pop
sub
inc
bound
jae
test
outsl
stos
sbb
mov
stos
mov
mov
push
push
push
sbb
mov
stos
jmp
mov
xchg
into
lock
cli
popf
pusha
stos
mov
or
cs
insb
stos
adc
cmp
movsl
cmp
mov
sbb
xchg
iret
fldl2e
stos
fs
cmpsb
pop
jns
outsb
xlat
mov
ret
xchg
push
cwtl
enter
fwait
adc
movsl
les
mov
sahf
or
out
jb
stos
inc
sbb
sub
or
popa
and
fiadds
sbb
push
mov
clc
mov
ljmp
push
cmp
sbb
into
jmp
inc
scas
push
es
test
stos
xlat
mov
jnp
mov
stos
popa
sbb
jno
or
cmp
arpl
mov
int
mov
xor
pop
stos
test
fwait
adc
sub
sub
rol
insb
stos
hlt
dec
cmp
dec
push
dec
stos
sub
subb
psrlq
lods
xor
lret
outsb
fbstp
and
popa
shlb
pop
push
sub
ja
xor
mov
stos
nop
cli
stos
dec
fmulp
test
mov
mov
push
mov
or
test
pop
push
rcll
and
clc
stos
ds
stc
mov
test
mov
orb
pop
mov
inc
repz
scas
out
insl
scas
mov
outsl
pop
mov
and
mov
movsl
jmp
dec
lock
movsb
stos
lods
subb
fildl
call
push
xchg
xor
cmc
fsubrs
les
sbbl
mov
cli
roll
jecxz
std
loopne
and
mov
ljmp
ljmp
or
inc
dec
inc
inc
ljmp
jnp
or
sub
add
fistl
mov
stos
or
mov
and
push
inc
aas
stos
inc
add
das
cwtl
je
push
stos
popf
outsl
leave
imul
out
ljmp
hlt
xchg
xor
jg
cmp
mov
std
int
and
inc
stos
mov
mov
add
pop
cmc
jmp
push
add
xchg
sbb
xchg
and
jb
add
sti
flds
xchg
push
mov
jnp
mov
cltd
int3
es
mulb
jne
cmp
jns
xchg
insl
fsubl
mov
int
push
aas
cld
movsl
pop
les
stos
ds
sar
cwtl
stos
loopne
in
mov
lret
cli
movsb
or
mov
outsl
sbb
fldcw
arpl
push
lods
orl
lea
xor
movsl
stos
mov
cli
out
addr16
lock
ret
andl
inc
fsub
movsl
testb
stos
xor
lahf
or
imul
mov
arpl
call
stos
shlb
cmp
lods
in
mov
push
cmc
pop
stos
jmp
fcoml
adc
mov
clc
ret
stc
cmp
es
ljmp
ret
dec
xrelease
inc
nop
add
dec
push
test
ja
enter
push
xchg
in
test
dec
in
stos
fcoms
push
jnp
je
and
mov
stos
orb
cmp
sbb
xchg
xchg
inc
xor
sub
fs
sub
inc
mov
repnz
and
adc
das
in
jge
cwtl
and
stos
and
fistps
sahf
pushf
push
or
jnp
lods
mov
shrl
jbe
mov
mov
or
mov
mov
mov
jno
insl
pop
and
stos
jne
dec
push
mov
arpl
stos
push
push
daa
shl
sub
adc
stos
addr16
rorl
add
jbe
inc
subb
sbb
pop
add
int3
into
stos
insl
mov
ret
jecxz
rcll
ret
and
stos
xchg
adc
sub
stos
insl
cmp
shll
cltd
inc
imul
arpl
xchg
test
and
mov
and
incl
mov
bound
sub
rolb
js
je
imul
adc
rclb
gs
sahf
in
sub
in
push
xor
add
dec
cmc
mov
xchg
negb
loopne
jecxz
cmpsl
push
stos
and
xor
mov
cmp
mov
mov
or
mov
stos
iret
lods
and
stos
push
mov
mov
fldcw
stos
mov
mull
stos
pop
mov
enter
sub
fwait
jns
in
addr16
cli
dec
cmpsb
mov
cmp
fst
sbb
cmp
or
push
fildl
stos
imul
fcoms
dec
jmp
jecxz
les
push
add
pop
outsl
mov
std
mov
arpl
sbb
rclb
das
push
cmp
mov
mov
mov
sbb
sbb
imul
mov
mov
addl
movsb
ficoms
lahf
mov
fisttpl
mov
sub
pop
push
jmp
fidivs
xchg
push
out
cltd
mov
std
xlat
fsts
stos
add
sub
es
cmpsl
lret
stos
shl
pop
insb
or
pop
dec
movsb
add
cmp
mov
out
jae
inc
push
sbb
mov
ja
push
fwait
sub
xor
mov
orl
lcall
pushf
sub
in
dec
aaa
jb
data16
sbb
loop
and
fisubrl
idiv
aas
pop
xchg
pop
push
pop
mov
and
leave
stos
lret
lahf
ljmp
loope
lea
mov
mov
sti
jg
lahf
push
stc
scas
out
cmc
cmp
les
fistpll
inc
jmp
std
add
inc
adc
add
pop
pop
stos
test
xchg
or
mov
scas
mov
mov
dec
xchg
jns
cmp
movsb
sbb
out
in
push
xchg
and
and
mov
jae
stos
xor
inc
loop
and
mov
fwait
xchg
push
mov
push
pushf
stos
neg
ds
pop
stos
dec
loop
sti
iret
jmp
cmp
mov
adc
arpl
addr16
inc
stos
data16
jmp
or
mov
jecxz
pop
and
packssdw
divb
rorl
test
imul
mov
mov
mov
and
jmp
or
jae
xchg
jmp
add
dec
jge
lret
xlat
and
mov
jle
leave
jmp
jne
test
das
lea
mov
or
je
dec
stc
movsl
lods
stos
leave
fwait
imul
adc
xchg
push
push
pop
xchg
shrb
xchg
push
mov
lods
jne
mov
and
pop
scas
bound
jns
cmpsl
sbbl
jne
or
cmp
loopne
pop
mov
lret
aad
aam
sbb
or
add
xchg
dec
in
xchg
cmpl
in
std
in
pusha
dec
adc
shl
dec
jmp
add
lret
xchg
popa
ret
inc
aad
jl
mov
test
cmc
std
push
xchg
and
aaa
mov
inc
xchg
into
or
dec
cli
adc
out
stos
fbld
mov
cmp
aad
jecxz
mov
mov
out
lods
stos
mov
in
loop
sbb
mov
push
js
dec
sub
scas
fsubrp
stos
cmp
lret
inc
std
fcmove
stos
and
pushf
pop
stos
mov
cmp
mov
repz
push
mov
sbb
outsl
pop
pop
daa
in
xor
popa
iret
xor
movsb
lods
mov
in
sbb
imul
cmpsl
mov
sbb
jbe
sbb
fnstcw
testl
and
stos
pop
pop
xchg
stos
add
or
ss
fwait
outsb
stc
int
add
push
cwtl
movsb
loope
mov
xor
pusha
das
stos
lods
test
pop
xor
sbbl
aas
xor
stos
divl
xchg
fadds
adc
and
push
xchg
push
xchg
stos
cli
push
popa
inc
popf
mov
pop
pop
ret
xchg
mov
divb
or
pop
sahf
aam
mov
jl
andl
mov
jno
add
out
and
aaa
lea
mov
outsb
pop
scas
loopne
fdivl
sbb
pop
subb
push
fildl
ja
lret
imul
sub
bts
xchg
mov
inc
mov
stc
stos
or
push
mov
iret
and
rclb
mov
xor
mov
add
xor
mov
inc
cmpsb
jl
inc
stos
and
aaa
ss
leave
insl
lea
dec
inc
std
jo
sub
xor
stos
ret
lock
out
cwtl
mov
push
stc
rclb
add
inc
xlat
pop
mov
push
daa
dec
lock
imul
pop
or
jbe
mov
push
pushf
scas
stos
add
inc
inc
ds
xchg
leave
mov
popa
push
lods
inc
mov
mov
xor
mov
jecxz
mov
movsb
aaa
popf
insb
popf
jle
mov
mov
dec
subl
lahf
jae
stos
inc
cmp
push
push
mov
ret
bound
xor
std
mov
add
stos
aam
dec
xor
lods
mov
cmp
pusha
out
loop
addb
or
cltd
ds
stos
pop
aaa
xor
into
sub
add
cmp
mov
insb
fwait
xchg
mov
ret
imul
xlat
andl
cmp
mulb
test
dec
orb
mov
imul
cmc
arpl
lahf
push
pop
imul
jae
sbb
sbbb
fs
dec
je
mov
or
push
js
mov
cwtl
fwait
add
movlps
addb
jg
dec
movsb
mov
mov
lods
push
imul
mov
stos
or
mov
push
stos
movsb
cmpsb
cmp
js
dec
mov
stos
add
xorb
and
cmp
js
test
fwait
or
xor
push
jp
iret
push
sub
addl
sbb
cmp
adc
bound
push
sub
test
and
mov
mov
daa
mov
dec
fcmove
inc
and
push
fsubs
jmp
pop
mov
enter
cmp
aam
cs
ret
subl
push
lahf
rcll
int
das
jo
jge
arpl
test
sbb
stos
icebp
jle
fiadds
scas
add
mov
test
loope
dec
hlt
jmp
mov
xchg
push
cltd
fisttpll
lret
jmp
mov
adc
ss
insl
pop
aam
test
dec
test
stos
mov
ret
sub
pop
repnz
fsubrs
pop
cli
mov
push
stos
mov
inc
sti
fisubrl
mov
pop
into
xchg
mov
mov
dec
stos
dec
gs
loopne
fwait
shrl
out
rcl
stos
int
dec
je
loop
push
loopne
jecxz
and
fimuls
stos
push
jmp
faddl
push
fnstsw
pop
fsubrs
jmp
cmp
sub
stos
xor
shlb
pop
or
test
mov
xchg
or
and
or
out
shrb
sub
arpl
cld
test
mov
orl
jle
lods
popf
popaw
push
imul
jle
push
push
mov
push
notl
pop
mov
pop
inc
mov
gs
mov
jmp
fwait
mov
push
adc
lods
xor
inc
sub
enter
cli
icebp
mov
jp
add
mov
mov
sub
enter
dec
pop
or
sbb
cmp
daa
push
sbb
mov
lds
cs
mov
stos
loop
mov
inc
stos
aad
mov
rcrb
arpl
bound
xchg
fwait
iret
fldt
stos
rclb
outsb
test
daa
je
rolb
jmp
mov
and
and
jae
push
dec
sub
pop
mov
mov
jnp
mov
pop
rcrl
lcall
mov
inc
popf
cmpsl
push
jne
push
sti
fwait
popf
pop
inc
mov
in
xor
xchg
loop
xlat
cld
xchg
sub
cmova
pop
pop
cmp
int
jecxz
js
cmp
push
dec
in
jmp
sub
jae
in
pop
jne
stos
clc
pop
daa
ds
inc
aas
mov
iret
repnz
outsl
push
stos
icebp
mov
stos
int
xor
and
lret
out
stos
rcl
xorl
ret
stos
out
mov
jmp
rolb
test
bswap
sub
outsl
sub
inc
sarl
cwtl
push
in
dec
mov
push
and
xor
mov
adc
mov
jge
mov
ja
mov
shl
add
ret
add
scas
test
lret
gs
pop
data16
int
and
and
xchg
inc
xchg
add
pop
or
clc
je
xor
fsubrs
ror
fnstsw
shll
and
stos
sahf
pop
popf
inc
pop
add
daa
mov
ss
adc
xchg
frstor
imul
adc
jle
imulb
push
ss
sti
mov
mov
sbb
sbb
dec
lods
ds
or
cs
inc
stos
mov
xor
cli
test
in
stos
xlat
out
lea
call
add
cli
jne
stos
or
into
push
mov
sti
cmp
scas
fiaddl
and
mov
pop
leave
jae
ds
mov
xor
pushf
stos
mov
push
adc
les
cmp
clc
sbb
pop
iret
mov
ss
or
add
stos
cmp
stos
mov
loop
sub
mov
inc
stos
sub
inc
ds
je
ss
push
xor
shll
dec
es
push
xor
lds
ds
mov
mov
jecxz
mov
push
leave
daa
and
mov
inc
scas
lret
push
stos
push
jmp
rcrl
jmp
jle
mov
inc
je
and
stos
pusha
pop
ficomps
clc
arpl
int3
lcall
stos
repnz
adc
leave
xchg
aas
stos
push
lret
xchg
dec
sbb
push
stos
arpl
jmp
push
data16
stos
int3
jbe
mov
xor
into
push
sbb
in
stc
iret
stos
or
dec
mov
stos
aas
test
test
mov
stos
aaa
stos
je
adc
pop
pop
daa
aas
jl
subl
stos
push
daa
lods
imul
jmp
mov
push
lock
inc
or
sbb
stos
int
subl
jl
scas
cmp
stos
push
xor
sub
push
cmp
lods
mov
lock
imul
push
mov
xchg
clc
xchg
out
stos
xlat
pop
push
pop
dec
imull
xchg
scas
sub
stos
cmp
jae
stos
mov
mov
xor
out
bound
fsubl
shr
je
es
nop
cltd
stos
ja
sbb
imul
lret
fisubl
jp
stos
mov
cmp
fstpt
lret
mov
xor
xchg
lea
adc
xchg
xchg
cli
shrb
inc
mov
pop
pop
lahf
jnp
jbe
or
les
push
ss
stos
inc
call
stos
clc
sbb
je
mov
ds
sub
dec
test
xchg
pop
cmp
push
add
pop
inc
out
stos
js
fdiv
mov
dec
jmp
sbb
xchg
mov
scas
shl
movsl
outsl
cwtl
notl
and
cmpsl
int
stos
pop
dec
dec
jle
xchg
les
test
and
cld
inc
loop
mov
cs
stos
ja
xor
sar
pop
mov
sbb
call
jnp
in
pop
enter
jno
or
jmp
stos
insl
jae
test
les
inc
xchg
xchg
movsl
stos
mov
loop
mov
ds
push
test
repz
and
add
mov
ljmp
jns
repnz
aad
xchg
jno
dec
cmp
scas
test
mov
sub
mov
in
stos
xor
push
push
test
ja
push
ficomps
xor
adc
mov
outsb
lret
shr
pusha
in
daa
rolb
jae
pop
add
stos
sar
xor
aad
imul
jmp
stos
pop
cmp
das
or
hlt
stos
inc
outsl
shlb
jb
out
add
pusha
jecxz
imul
dec
adc
xchg
clc
ficoml
fdivp
out
jbe
push
or
lahf
mov
jecxz
rorl
das
pop
stos
xor
jne
or
stos
arpl
mov
cmc
sbb
dec
in
lahf
jmp
or
mov
lods
inc
mov
int3
pop
iret
mov
lret
jecxz
stos
icebp
xchg
and
stos
inc
pusha
insl
sbb
xor
stos
inc
cmp
cltd
lahf
pop
push
stos
data16
out
sub
xchg
enter
sub
xor
stos
cmp
ret
mov
nop
stos
scas
ja
movsl
xor
and
insb
pop
mov
shrb
xor
scas
dec
lea
andb
push
jecxz
fidivrs
and
lcall
stos
rclb
mov
ja
dec
sub
pop
or
stos
jle
fildl
stos
mov
jp
decl
push
cmp
mov
inc
shl
pop
sti
out
xchg
cmpsl
mov
cmp
stos
stc
bnd
loop
adc
xchg
sbb
loope
movsl
out
sub
jmp
pop
push
push
dec
aam
xchg
pusha
xchg
lods
lahf
cmp
mov
sbbb
stos
pop
hlt
mov
or
mov
jle
orl
pop
das
or
cld
pusha
cmp
imul
ss
mov
fwait
inc
sbb
lcall
fcomip
fidivrl
fdivrl
and
imul
and
mov
stos
cmc
adc
sbb
repz
xorb
xchg
or
and
test
mov
stos
fistps
lret
lods
add
sti
push
jno
or
repz
dec
mov
ss
hlt
mov
or
shrl
xor
ljmp
fbld
popf
jg
loopne
fnstsw
je
ficoms
and
pop
mov
sub
imull
adc
push
lods
int
add
dec
add
and
fdivr
mov
stos
scas
add
jge
aad
daa
and
jp
mov
subb
pop
mov
pop
xchg
dec
lahf
inc
push
push
addr16
addl
mov
nop
add
xchg
cmc
les
stos
and
fcmovbe
stos
jle
in
movsl
dec
movsb
or
push
mov
sarl
icebp
in
fidivs
stos
pop
jo
cmpsl
mov
sub
fld
and
imul
xor
mov
fwait
or
xor
jmp
or
xchg
pop
pop
stos
mov
pop
orl
mov
xor
push
add
stos
scas
ret
mov
std
mov
cld
inc
mov
mov
mov
mul
mov
insl
mov
mov
in
outsb
push
mov
xor
cltd
jecxz
out
mov
mov
stc
add
xchg
stos
sub
lods
push
inc
addr16
out
jo
push
xor
add
jne
stos
bound
jae
jnp
jmp
lret
sub
push
mov
mov
and
mov
mov
fbld
mov
or
push
repz
daa
popa
jl
mov
rorl
cwtl
fistpll
sbb
push
pop
out
xchg
sub
jmp
xor
stos
pushf
xchg
and
into
sub
pop
sbb
stos
lcall
sub
pop
in
xor
cmpsl
jb
rcrb
push
jmp
adc
addb
mov
pop
jne
lret
jecxz
test
mov
xchg
push
add
or
stos
dec
ds
add
das
push
mull
sub
lock
fisubrl
sti
xor
daa
jmp
jmp
cmp
cltd
test
movsb
cmp
stos
lret
sub
ds
and
das
aam
aas
fsub
jmp
mov
dec
xor
dec
imul
stos
pusha
decl
push
hlt
mov
cmp
mov
mov
or
xor
fisubrs
mov
arpl
pop
cmp
xor
aas
cmc
stos
inc
mov
popf
mov
mov
fcmovnu
mov
inc
stos
cmp
jle
jb
mov
aas
lcall
xchg
or
push
jmp
mov
cmp
arpl
cmp
clc
mov
fst
xchg
shl
aam
push
sub
shll
lret
movsb
fstpl
xchg
loopne
mov
mov
jns
lods
subl
in
inc
pop
fwait
xchg
out
jle
aaa
stos
test
ret
pop
cmpsl
mov
or
push
xchg
pop
rcr
stos
jmp
jae
xchg
icebp
lods
jp
inc
mov
adc
mov
xor
push
fwait
test
stos
stos
dec
imul
stos
loop
mov
push
jge
push
mov
lahf
and
adc
icebp
mov
dec
jb
cs
test
mov
test
dec
stos
loop
cmc
xor
xchg
cmp
aaa
inc
or
pop
stos
mov
sahf
xchg
dec
or
cwtl
dec
lret
adc
in
repnz
js
cs
stos
sbb
mov
mov
sub
inc
test
rcr
jmp
rcrb
stos
lods
adc
lods
movsl
cmpsb
xlat
jecxz
and
mov
stos
in
scas
pop
cltd
pop
loope
std
jle
sub
sub
xor
mov
jae
push
int
popa
xor
scas
rorl
inc
fsubr
ljmp
add
arpl
xchg
add
stos
into
fs
xchg
ja
aad
imul
dec
fwait
idivl
or
mov
rorl
pop
mov
les
push
lds
ret
bound
test
add
cwtl
stos
in
mull
aad
jl
mov
mov
mov
jmp
imulb
mov
lods
xchg
ljmp
or
in
loop
and
xchg
and
push
mov
pusha
orb
stos
stc
or
jns
mov
mov
fldcw
stos
jae
js
adcb
stos
sub
jns
stos
add
js
je
lea
adc
push
dec
stos
lock
rol
cmpsb
pushf
pop
stos
aaa
add
inc
subl
subl
ret
xor
lea
push
jns
pop
stos
adc
cmp
sbb
push
fsubrs
les
shrl
xor
mov
in
mov
mov
ret
push
fsubrl
xchg
inc
rorl
pop
fstpl
xor
mov
cs
push
dec
mov
sub
es
test
push
pop
inc
sbb
das
sbb
dec
pop
jg
mov
out
loopne
jns
lea
fcompl
out
lods
sbb
adcl
in
imul
mov
cld
subb
xor
mov
jbe
cmp
jp
mov
stos
mov
divb
imul
imul
stos
shlb
cmp
jb
ja
push
pop
mov
iret
lcall
mov
jbe
mov
jae
push
mov
and
push
rep
or
sbb
adc
add
rcll
xor
mov
or
inc
div
daa
rep
stos
inc
inc
js,pn
test
sbb
mov
test
jae
pop
rolb
add
jo
sbbl
je
adc
fisttpll
jmp
dec
sub
repnz
inc
fcmovnb
pop
out
cmp
popf
xor
inc
in
outsl
pusha
rorl
lods
inc
jbe
pop
sbb
jle
stos
das
aaa
icebp
mov
stos
mov
dec
nop
mov
out
dec
push
or
mov
jnp
cmc
adc
inc
xor
sub
scas
mov
aad
mov
push
push
xchg
movsl
adc
dec
pcmpeqb
mov
shrl
cld
hlt
inc
fwait
stos
outsl
xlat
stos
xchg
call
jne
imul
cmc
mov
imul
mov
or
outsb
sbb
push
mov
daa
mov
mov
sub
dec
push
lock
or
stos
mov
out
xor
jmp
fdivs
mov
add
inc
mov
cmp
iret
in
mov
mov
jmp
sbb
adc
cltd
pop
subb
sub
test
push
lcall
stos
or
push
mov
call
dec
mov
mov
sub
stos
pop
fdivl
js
fsts
movsb
cltd
stos
mov
loop
mov
lds
ret
jno
stos
dec
inc
movb
mov
push
xor
out
test
int3
dec
daa
sub
or
stos
push
clc
pop
inc
cmp
push
jmp
push
scas
loope
stc
imul
xor
pop
stos
jno
mov
mov
es
pusha
in
mov
dec
sahf
push
sbb
cmp
push
addr16
sub
add
dec
lea
fisubl
inc
stos
outsl
insb
push
or
push
fs
nop
and
add
rorb
test
lods
adc
cmp
lock
stos
dec
push
ljmp
sub
cmp
mov
jae,pn
arpl
fwait
and
shlb
in
pusha
sbb
jecxz
popf
stos
ret
outsb
and
mov
xchg
dec
push
movsl
xor
lods
je
addr16
or
mov
and
mov
jmp
sbb
mov
pop
sbb
pop
aad
bound
push
or
fwait
movsb
and
std
inc
pusha
or
sub
cmovae
loopne
mov
sub
outsb
das
roll
lods
daa
ds
insl
push
repnz
stos
add
xlat
movsb
jmp
add
arpl
stos
mov
addr16
mov
scas
les
popa
mov
jge
jl
sub
fsubp
push
or
and
stos
imul
ret
sub
mov
and
dec
loope
decl
popa
sbb
xchg
dec
aaa
stos
sub
je
ljmp
xlat
test
stos
mov
leave
sub
loope
loopne
adc
push
das
mov
cmpsb
mov
rclb
stos
adc
inc
mov
filds
dec
inc
mov
add
stos
pusha
sub
adc
lods
stos
jne
arpl
jmp
and
jbe
test
stos
dec
insb
ret
sub
rcl
jmp
dec
push
je
push
stos
push
cltd
mov
push
pop
stos
adc
push
dec
sub
je
pop
test
das
sbb
out
stos
dec
mov
jne
and
sbb
mov
arpl
adc
test
out
int3
or
xor
lret
xchg
fists
fiaddl
sbb
mov
shrb
or
andb
nop
cs
int
stos
inc
mov
or
push
popf
pop
shlb
jle
stos
jge
ja
pop
addb
in
lds
cmp
add
pop
popf
mov
stos
test
stos
lret
add
jno
les
js
orb
adc
stos
pushf
gs
add
or
sbb
pop
std
cmp
stos
jmp
daa
and
mov
stos
shl
mov
jmp
mov
call
adc
inc
and
push
std
mov
push
mov
in
push
and
and
or
xor
xor
xchg
data16
test
cld
jns
in
jo
sahf
dec
adc
outsl
stos
popa
or
sbb
adc
add
stc
jbe
stos
sti
jns
test
pushf
in
push
rcrl
fldcw
imul
lock
stos
inc
push
cwtl
pop
popf
add
insb
pop
push
cli
les
and
stos
das
int3
mov
push
stos
sub
orb
add
pop
out
xchg
in
loopne
stos
shrb
sub
aaa
into
inc
in
mov
addr16
sub
dec
imul
dec
ror
stos
nop
and
sti
sub
jmp
stos
test
imul
xor
imul
mov
insl
rcll
and
imul
stos
popa
fadds
stos
and
mov
outsl
insl
mov
lods
imul
xchg
jb
int3
cmpsb
stc
stos
pop
jae
aam
fstl
lret
stos
cmpsl
add
jbe
lea
and
mov
jae
movsb
and
add
outsl
stos
leave
push
inc
stos
ret
sbb
jns
adc
jbe
outsb
sahf
mov
add
je
lds
clc
icebp
nop
scas
stos
sbb
sbb
sub
or
cld
mov
push
arpl
adc
imul
xlat
insb
sti
push
xchg
mov
push
mov
js
xor
stos
mov
dec
inc
dec
adc
scas
sub
pop
xorl
mov
mov
jg
mov
jbe
shrl
mov
scas
stos
or
sbb
xor
clc
ds
in
lret
lret
adc
jp
sahf
fcompl
xchg
inc
gs
je
sbb
push
push
test
fwait
sbb
dec
mov
xchg
mov
cs
sub
aaa
stos
pop
jnp
in
and
xchg
std
mov
fwait
pand
stos
pop
or
xor
aam
add
mov
stos
sbb
add
cmp
and
inc
call
nop
pop
pop
stos
pop
mov
nop
aaa
stos
pop
cld
xor
xchg
xchg
jmp
stos
test
loope
add
rorb
popf
push
cmpsb
push
stos
pop
mov
inc
mov
test
add
and
adc
add
and
mov
stos
scas
mull
cmpxchg
jp
negb
push
in
test
fwait
push
dec
jae
lods
stos
test
inc
jnp
sub
test
int
daa
push
jno
pusha
stos
push
xchg
add
stos
into
aaa
dec
inc
loop
stos
sbb
cli
and
mov
std
push
mov
outsl
jmp
xor
rcl
mov
mov
xchg
jge
push
inc
dec
mov
lcall
stos
jo
fsubl
inc
stos
xor
or
or
jo
bound
sub
sbb
stos
inc
push
mov
push
sbb
mov
sub
divl
out
shlb
jmp
out
mov
dec
stos
xor
idivb
or
inc
int3
add
mov
ds
out
dec
or
decl
icebp
adc
mov
cmp
stos
imul
jns
or
leave
pop
loope
adc
mov
std
test
sub
stos
je
mov
ret
or
mov
mov
shlb
stos
shlb
xor
addr16
sbb
rolb
ljmp
push
pop
cltd
ds
push
in
lods
fwait
inc
cmc
inc
sbb
cmp
popf
imul
pushf
es
ret
mov
rclb
pop
cmpl
fcomi
push
mov
scas
test
stos
adc
out
sbb
jns
std
mov
mov
in
or
stos
jmp
jae
nop
pop
shrb
inc
add
pop
stos
push
mov
outsb
pop
cld
shlb
nop
inc
and
dec
popf
jne
push
push
push
das
std
addl
stos
sbb
movsb
sub
dec
leave
subl
into
mov
mov
sarl
loopne
push
hlt
sbb
out
test
xlat
pop
stos
cmp
mov
pop
inc
in
daa
or
pop
and
mull
push
lods
jmp
lods
xorb
xorb
mov
mov
jno
fldt
dec
cmp
fwait
icebp
stos
xchg
mov
inc
and
push
stos
cmp
imul
sahf
aam
push
jle
xchg
js
cltd
cmovp
xchg
fs
ffreep
xchg
popl
inc
mov
xchg
mov
out
in
mov
in
out
cmpl
xor
cs
stos
add
pop
add
mov
cmp
sub
std
jecxz
xchg
pop
cmp
cmc
stos
mov
and
sbb
xlat
fsubp
popf
shl
pusha
push
mov
iret
stos
aas
cmp
cmp
xlat
xchg
cld
stos
shld
ds
dec
das
jmp
pop
mov
cwtl
cwtl
sbb
and
icebp
fs
jp
std
outsl
mov
fisubrl
adc
sahf
sbb
out
mov
stos
fwait
inc
mov
jmp
jae
mov
stos
add
call
push
mov
mov
push
jbe
stos
movsb
mov
shrl
stos
sub
xchg
add
in
mov
mov
dec
dec
fsubp
or
stos
popa
xchg
repnz
adc
cmp
fcmovne
mov
or
mov
pusha
xchg
pop
stos
mov
std
sub
lock
mov
je
pusha
in
shl
cs
mov
test
mov
xor
mov
mov
push
mov
cltd
pop
xchg
stos
inc
sti
and
frstor
stos
inc
test
xchg
jno
sbb
lds
aaa
push
pop
xor
shrl
aaa
and
cmp
or
loopne
fwait
xlat
into
xlat
stos
cmpsb
call
sub
xor
jl
xor
stos
ljmp
adc
push
in
xor
stos
adc
test
or
jmp
enter
sbb
push
sbb
mov
out
cmp
cmpsl
and
stos
pop
out
jg
les
sub
scas
out
sbb
movsb
daa
cmp
popf
or
stos
jl
add
sub
idivl
imul
or
push
sbb
mov
fadds
stos
rorl
popa
add
addr16
out
sub
mov
sbb
negl
lock
mov
rdpmc
xchg
jnp
ss
add
jns
mov
or
je
stos
sbb
or
and
into
out
cld
lret
out
test
popf
inc
stc
dec
aaa
stos
sub
icebp
fidivs
test
neg
jb
sub
clc
xor
jae
mov
pop
stos
lahf
add
repnz
or
movsb
push
or
mov
mulb
dec
fdivrp
mov
pop
or
jbe
push
daa
addl
stos
or
leave
add
add
mov
in
mov
aam
stos
jnp
ljmp
sbb
xor
pop
stos
loop
mov
fisubrl
hlt
and
movsl
add
movsl
stos
imul
shrb
lret
push
stos
jmp
xor
adc
nop
addr16
dec
loop
cmpsb
ljmp
add
mov
mov
jmp
out
sub
cwtl
ljmp
icebp
pop
stc
fldenv
scas
add
dec
cmp
push
mov
push
sub
jg
or
int3
mov
dec
sbb
mov
stos
pshufw
pop
and
dec
cmp
jle
stos
mov
push
xchg
dec
adc
xor
xchg
pop
ja
std
cwtl
stos
daa
aas
orb
dec
dec
mov
repnz
mov
and
jmp
push
jns
aam
gs
push
imul
scas
dec
jne
jmp
push
and
or
and
loopne
mov
mov
dec
mov
test
fwait
xchg
jne
jmp
sahf
test
sbb
dec
xchg
adc
arpl
push
mov
sub
stos
push
sarb
push
or
mov
xlat
lock
stos
add
insl
das
xor
lds
add
add
jmp
stos
jo
pop
pop
loopne
jg
rcll
cs
lahf
mov
stc
test
prefetchw
mov
mov
push
out
mov
and
push
stos
jae
xchg
sub
jp
lds
mov
popa
sbb
dec
std
sar
aad
stos
mov
fists
pushf
mov
add
sbb
in
repnz
icebp
int3
movsb
mov
dec
cmp
out
shrl
stc
and
cld
clc
cli
and
std
movsb
xor
cmc
ds
add
test
popf
stos
sbb
xor
clc
pushf
out
rcll
out
adc
stos
pop
out
jmp
jle
mov
sar
in
stos
jp
sbb
loopne
push
mov
scas
repz
stos
lahf
push
adc
jo,pt
pop
stos
loop
insl
sti
dec
leave
adc
jle
sbb
fwait
les
test
out
clc
pop
push
lcall
fcmovnb
xrelease
xchg
lods
mov
jge
imul
orl
pop
fistps
dec
mov
jg
test
and
popa
popf
in
insl
xlat
jnp
mov
push
xchg
stos
stos
cmp
fs
sbb
ja
movsb
mov
mov
mov
xchg
or
mov
mov
jno
push
aad
ss
leave
inc
loop
push
or
push
pop
cmp
stos
mov
ret
mov
xchg
pushf
sub
shl
lods
es
sbb
fucomp
call
cmp
inc
jg
ja
xor
pop
jecxz
andb
stos
or
mull
pop
aad
cld
xchg
imulb
mov
stos
adc
pusha
or
lret
xchg
scas
adcl
repnz
jg
ja
mov
xchg
pop
jge
sub
rclb
sbb
cli
pop
sub
lcall
hlt
push
icebp
stos
sub
and
insb
and
adc
sti
ret
pop
inc
movsl
push
stos
ja
dec
and
loop
out
mov
push
push
lret
inc
add
insb
pop
cmpl
dec
xlat
negl
dec
stos
and
cmpsb
mov
add
dec
or
ds
xchg
inc
mov
push
pop
orl
pop
stos
nopl
mov
pop
mov
ljmp
dec
xor
or
lods
hlt
cltd
fisubrl
xchg
push
jne
add
mov
arpl
popf
stos
decb
loop
data16
stos
and
jl
fs
test
repz
stos
inc
xor
mov
jmp
outsb
jecxz
mov
lock
lods
push
xor
xor
xor
mov
pusha
sbb
lds
sub
or
cmc
leave
xchg
mov
aas
clc
fisttpl
cmpsb
stos
jecxz
mov
mov
cmp
fisttpl
mov
jb
lock
iret
dec
stos
fs
lret
shlb
push
stos
sbb
pop
cmp
lds
jo
lods
push
xchg
sbb
pop
cmpl
cltd
out
loope
insb
sbb
xchg
stos
repnz
aas
add
lods
inc
sti
flds
adc
or
fistl
mov
sbb
inc
imul
sub
cmp
add
xor
dec
imul
push
xchg
mov
jmp
ljmp
lret
pop
mov
aas
add
stos
mov
in
inc
inc
jl
mov
sub
push
je
fnsave
stos
push
arpl
insl
xor
lahf
insl
stos
xor
dec
cmp
in
stos
rcrl
mov
stos
or
bound
in
cld
stos
jge
stc
rorb
or
xchg
xorl
jmp
mov
pop
or
fninit
jns
sti
mov
fisubrs
pop
or
mov
jmp
stos
adc
in
fs
cld
das
scas
stos
pop
int
incb
pop
cmpsb
stos
and
in
mov
push
and
popa
loope
mov
mov
insb
stos
mov
clc
lcall
stos
mov
loop
fcompl
js
jb
cmpsb
and
in
dec
std
pusha
stos
xchg
nop
cmp
stos
dec
jo
mov
lods
inc
mov
stos
notl
shll
aas
int
pop
sub
xor
stc
mov
sti
add
ds
jp
or
scas
jo
cs
or
xchg
jne
stos
mov
dec
sbb
and
xchg
fldt
popl
stc
stos
rcr
loope
pop
test
inc
inc
jl
cmc
stos
sbb
ds
mov
push
addr16
mov
push
push
stos
dec
pop
push
mov
ds
add
out
ss
stos
fucomi
insb
mov
jo
shlb
arpl
jmp
ds
and
pusha
call
cmp
push
stos
sarb
jg
lcall
call
inc
push
aas
jmp
mov
inc
jmp
outsl
pop
ja
mov
push
mov
xchg
pushf
sbb
stos
push
cmp
into
mov
mov
push
enter
pop
push
rolb
es
cmp
xor
in
mov
movsb
add
pop
fsubs
cs
sahf
outsb
stos
lea
dec
cmc
dec
sbb
out
iret
ror
das
imulb
out
xchg
in
jnp
js
dec
mov
lods
movsl
stos
mov
or
xchg
mov
stos
loopne
mov
push
rolb
pop
pop
xchg
js
mov
or
inc
cli
ret
sahf
sub
imul
xchg
fidivrs
mov
addr16
add
call
cmc
fstl
daa
mov
stos
jmp
sub
and
std
jae
mov
push
stos
mov
or
inc
neg
mov
jo
lock
dec
dec
stos
fadds
popf
out
mov
loope
shrb
or
inc
sub
fwait
mov
je
pop
push
cmpsl
stos
or
test
jg
rorb
inc
cwtl
add
leave
inc
stos
cmp
push
stos
lds
cwtl
dec
int
cmp
or
pop
in
stos
or
jle
mov
pop
outsl
icebp
popa
mov
pusha
mov
daa
push
push
push
jg
and
fimull
push
xchg
dec
mov
js
aas
sbb
inc
push
test
in
pop
fcompl
mov
or
daa
iret
rcl
mov
mov
in
outsb
daa
int3
push
repnz
test
inc
or
sbb
jb
clc
leave
scas
lret
in
xor
outsb
pop
not
stos
or
and
stos
or
bound
into
fimull
notb
clc
test
inc
bound
sub
or
stos
inc
je
mov
mov
mov
and
stos
and
mov
movsb
mov
stc
cmp
dec
inc
mov
cmp
add
sbb
add
stos
in
repnz
lcall
mov
lds
inc
es
sbb
and
xor
jo
lea
stos
jnp
xchg
dec
lret
stos
repnz
push
and
mov
ja
movsb
cli
push
fstp
std
stos
fldcw
or
xor
stos
jo
gs
push
xor
in
adc
stos
dec
test
xlat
or
js
dec
insl
cmp
xor
push
fnstsw
mov
sub
stos
inc
cmp
push
imul
jbe
nop
test
popa
stos
adc
fnstenv
cld
ljmp
stos
mov
jecxz
outsl
stos
mov
and
insb
int
cmpsl
ret
dec
aas
mov
stos
pusha
cmp
scas
and
adc
fnsave
cmp
jg
mov
jmp
mov
stos
jge
ljmp
cs
xor
push
jb
mov
sub
add
jb
out
clc
lods
adc
xor
push
or
mov
stos
pop
addr16
dec
and
stos
pusha
movntps
stos
fwait
mov
inc
stos
sbb
sbb
dec
mov
cmp
shll
hlt
cld
mov
adc
stos
lock
gs
and
inc
insb
sbb
mov
jno
stos
mov
ret
fmuls
sahf
xchg
inc
jb
adc
stos
cltd
loopne
push
and
cmp
aas
jp
jae
xor
mov
jns
fwait
cmpsl
enter
inc
mov
fdivrl
imul
dec
xor
stos
out
nop
jnp
push
mov
pop
sub
aam
movsb
push
test
adc
popa
daa
inc
pop
fmull
push
in
mov
sbb
add
dec
stos
addr16
sub
pop
fwait
inc
lods
aad
stos
adc
push
push
or
sub
xchg
or
mov
data16
xor
stos
dec
gs
cltd
mov
cmp
mov
cmp
aas
pop
jl
add
stos
popa
push
add
mov
or
xor
stos
imul
call
lret
sub
push
and
bound
pop
addr16
ret
mov
inc
shr
mov
insb
test
movb
cltd
and
mov
xchg
jo
aas
aad
sbb
in
stos
inc
and
pop
stos
icebp
push
arpl
cld
dec
jne
sbb
sahf
push
pop
test
repnz
pop
fstpt
adc
push
ds
xchg
leave
movsb
movsl
xchg
popf
jne
in
xor
bound
mov
lcall
sbb
movsb
daa
sbb
inc
mov
shrl
mov
dec
stos
and
loope
push
outsb
stos
mov
jo
sub
stos
pop
lahf
mov
sbb
icebp
jmp
fnstsw
or
stos
sub
pusha
xchg
xor
xor
stos
jb
mov
inc
ljmp
mov
or
stos
mov
aad
xor
push
push
sbb
mov
inc
mov
shll
or
popf
dec
stos
or
sub
adc
imul
inc
sahf
fildll
add
inc
adc
popf
xchg
jmp
cltd
sbb
mov
stos
andb
fs
cmp
mov
mov
jle
stos
push
ja
mov
call
mov
scas
es
cmp
push
xchg
imul
test
or
dec
push
ljmp
jp
dec
inc
int
stos
push
cli
imul
mov
push
mov
loop
cltd
cmp
aas
xor
jg
daa
pusha
bound
sbb
int3
xor
cmp
jno
js
xchg
xor
inc
cmp
cs
stos
add
test
cmpsb
aas
hlt
mov
addr16
adc
sub
ds
out
stos
push
ret
mov
scas
mov
inc
mov
into
push
mov
cmp
addr16
inc
ss
call
cmp
stos
jb
rcrb
add
inc
fdivrs
push
xchg
out
inc
fld
lods
test
sti
stos
inc
arpl
xchg
mov
sbb
enter
stos
push
outsl
and
pop
stos
sbb
inc
mov
jo
push
lds
hlt
sub
push
and
ss
rcr
jo
les
fstpt
mov
xor
test
mov
loop
adc
mov
into
in
jl
fistps
jnp
cltd
dec
arpl
sbb
xlat
cs
or
jmp
in
sahf
stos
push
push
cmp
stos
rorb
jns
stos
imul
scas
adc
pop
stos
jno
mul
jmp
lods
xchg
imul
push
iret
int3
jge
dec
stos
cmp
pop
ss
dec
stos
mov
in
cwtl
mov
addr16
xor
push
stc
pusha
test
dec
xchg
addr16
pop
pop
mov
stos
andb
psrlq
loope
xchg
xor
and
pop
cmpsl
stos
aas
les
test
nop
mov
divl
loopne
lret
stos
add
fs
rolb
cmp
xchg
dec
aam
ret
mov
sub
popf
inc
stos
mov
lock
pop
outsl
xchg
and
add
and
or
inc
inc
adc
std
adc
addr16
ja
in
mov
add
das
clc
mov
jno
repnz
popa
mov
shlb
cltd
imul
sbb
ja
xor
stos
stc
cwtl
in
pop
iret
pusha
mov
push
mov
stos
hlt
pop
rcrb
fwait
xchg
mov
sub
jmp
ss
jecxz
mov
and
sahf
ljmp
fisttps
out
pop
dec
lods
movsl
les
shl
inc
mov
stos
rcl
stc
lods
xchg
xor
dec
mov
push
mov
cmp
dec
xor
outsb
out
mov
stos
inc
daa
cmp
stos
xor
adc
fwait
sbb
popa
cmp
aad
push
jbe
mov
scas
gs
imul
inc
arpl
adc
dec
stos
pop
in
call
scas
stos
lret
int3
out
jb
mov
sbb
or
fistps
mov
cmp
dec
aas
mov
push
insb
addr16
mov
mov
outsl
sub
imul
arpl
fsubrp
in
sbb
dec
and
aam
jle
dec
jb
fisttps
fidivs
mov
fwait
push
call
pop
adc
dec
xchg
or
push
stos
pop
or
mov
dec
cmp
xchg
enter
mov
mov
and
mov
lret
insb
xchg
loop
cmc
xchg
mov
cmp
xor
stos
inc
cltd
pop
pop
adc
cmc
adc
notl
dec
lock
hlt
pop
popa
push
mov
cmpl
scas
shlb
int
xchg
lods
jge
jne
test
ret
fs
es
or
jl
mov
in
jae
jno
jmp
scas
inc
add
or
xchg
out
andb
fwait
stos
add
cmpl
popf
xchg
in
inc
pop
xchg
sbb
or
mov
mov
adc
xchg
sub
push
popf
dec
insb
push
mov
stos
mov
jg
les
negl
int3
and
cmp
dec
xchg
adc
add
pop
sbb
jge
outsl
lods
repnz
dec
cwtl
stc
stos
xchg
sbb
push
cld
mov
std
fstpt
xchg
ljmp
cmpsb
lods
stos
add
lahf
scas
mov
jns
pusha
push
je
sbb
cmp
pop
fsubs
add
xchg
mov
aas
mov
ret
call
pop
out
aaa
or
dec
and
xor
mov
jno
xchg
pop
clc
icebp
pop
bound
or
lret
jmp
push
mov
mov
mov
sarb
inc
ss
test
or
scas
push
je
bt
pusha
clc
fisubl
lds
sbb
xchg
push
daa
inc
sub
mov
out
icebp
jmp
mov
insl
stos
sahf
or
sbb
sub
lods
stos
aam
xlat
loopne
movsl
cmp
ljmp
js
jns
cltd
es
xor
leave
xor
js
outsl
push
dec
call
jo
and
lret
cmpsl
fnstcw
mov
mov
test
ds
and
jo
mov
dec
in
stos
xchg
pop
test
mov
xlat
xchg
lds
stos
mov
roll
jmp
ficomps
lock
adc
push
popf
in
imul
stos
jl,pt
cmpl
jne
int3
mov
mov
mov
add
jcxz
sbb
push
jp
xchg
or
mov
cmpsl
push
into
mov
lret
xchg
add
in
mov
cltd
stos
bound
stos
lret
mov
push
ds
pop
aam
mov
mov
test
ret
mov
out
xchg
pop
stos
jle
jne
pop
push
je
stos
inc
sbb
mov
imul
push
mov
pop
pusha
jb
stos
data16
push
cmp
sbb
dec
jnp
jno
sbb
jb
pop
push
stos
inc
test
add
int3
out
stos
nop
adc
mov
fdivl
je,pn
mov
stos
bound
dec
sub
adc
and
cmp
jo
stos
int3
test
fiadds
jmp
pop
cs
xchg
flds
adc
iret
std
movsl
sbb
lcall
mov
in
xor
orl
stos
mov
jb
shrl
jne
cmp
push
pop
stos
sbb
sub
stos
outsb
sub
and
iret
mov
push
mov
mov
mov
push
or
in
repnz
dec
rcrl
push
mov
mov
stos
orl
stos
das
dec
xchg
push
std
dec
pop
stc
jnp
mov
loop
push
fwait
pop
ret
stos
and
fwait
aam
add
xchg
mov
out
pop
or
es
std
aas
int3
mov
ljmp
out
loope
inc
fisubs
sub
stos
push
daa
cmp
pop
es
fsubs
aad
fnsave
push
pusha
imul
mov
xchg
sbb
jno
popl
pop
je
fisubrl
out
fimuls
and
hlt
and
cld
jmp
pop
cli
aam
testb
lcall
mov
cmp
xor
stc
ficomps
push
stos
push
cmp
jmp
sub
lods
dec
inc
mov
inc
mov
xor
pop
test
sub
aam
push
stos
ja
jbe
fimuls
dec
xchg
stos
ret
je
rcrw
mov
or
iret
cmp
mov
sti
inc
cmp
repnz
imul
mov
lock
jl
ds
daa
xor
xchg
xor
jo
lahf
cwtl
sub
loopne
les
cmp
sqrtps
fnstcw
mov
fadd
stos
cmp
or
or
push
stos
repnz
outsl
mov
int3
mov
inc
mov
mov
pop
or
scas
repnz
test
stos
dec
hlt
xchg
aam
movsb
adc
or
and
add
ss
push
xor
lock
stos
cmp
mov
leave
lcall
jbe
jb
jne
nop
jae
mov
xchg
das
cmp
xchg
daa
out
mov
jns
mov
jecxz
mov
inc
sar
data16
jne
daa
xchg
lods
push
stos
pop
cmp
lea
pushf
add
xchg
fldt
dec
mov
push
push
mov
pop
insb
popa
pop
es
loopne
pop
cmp
cmc
sub
fldl
mov
ljmp
ret
iret
aad
movsb
stos
mov
xchg
adc
stos
mov
fstpt
lret
test
fiadds
jecxz
into
add
xor
popf
push
stos
jge
loop
fldl
mov
in
stos
lock
mov
inc
inc
dec
push
and
adc
stos
rcll
sub
cmpl
or
mov
stos
stos
dec
xchg
or
addr16
loopne
mov
int
cmp
cs
aam
outsb
ljmp
insl
daa
sub
in
lret
dec
clc
pusha
out
or
pop
mov
and
adc
stos
jne
jbe
cmp
sbb
shrl
orb
popa
out
arpl
push
rclb
stos
loopne
adcl
xor
mov
pop
push
dec
out
mov
xchg
addr16
add
cld
push
fmul
ja
fistps
insl
mov
jp
test
fs
mov
cmp
lcall
test
subl
and
subb
sbb
adc
cli
cmpsl
stos
je
mov
scas
sbb
stos
xchg
int3
fadds
mov
sub
mov
and
xchg
or
incl
xchg
xchg
pusha
ja
mov
nop
xor
loopne
das
mov
dec
mov
loope
fsubrl
movsb
lret
xor
imul
push
int
lea
aam
dec
stos
push
daa
pop
pop
jmp
mov
gs
fwait
xor
cld
stos
mov
sbb
mov
pop
xchg
cmp
stos
push
xor
xor
adc
cltd
stos
cld
negl
in
ljmp
rcrl
mov
xor
mov
cmp
lret
inc
stos
pop
ss
push
fs
stos
ffree
shrb
cmpsb
and
push
out
rorl
jo
dec
movsb
les
mov
push
fsubrs
popa
adc
daa
stos
dec
sahf
inc
fisubl
mov
dec
push
scas
xor
stos
shr
or
stos
in
sub
cmp
stos
aam
lock
ss
or
addr16
push
lods
bound
into
push
ret
adc
gs
sbb
adc
pop
fwait
mov
xchg
cwtl
stos
mov
jge
inc
stos
call
dec
je
mov
sbb
inc
push
xor
dec
fcompl
push
cmp
imul
mov
fiadds
test
call
stos
mov
repnz
stos
jp
test
out
jae
inc
stos
mov
inc
scas
inc
stos
add
pop
push
arpl
insb
leave
lret
push
das
fwait
js
sbb
add
pop
fwait
sbb
pusha
add
jno
std
mov
jae
pop
out
mov
xor
ljmp
arpl
out
xchg
xchg
push
pop
out
pop
test
push
addr16
mov
nop
inc
push
push
xchg
adcb
mov
cs
and
jns
sub
push
mov
out
repnz
or
adc
mov
dec
sbb
bts
push
loope
jnp
add
lds
pop
cs
inc
sub
addr16
mov
cs
stos
sbb
fdivrl
cmp
stos
insb
jnp
scas
stos
xorb
roll
imul
imul
fnsave
adc
faddl
stos
pop
push
jns
pop
or
std
mov
xor
jmp
mov
cmp
stos
mov
sub
dec
aas
shlb
add
stos
push
lret
xchg
inc
sbb
inc
test
stos
nop
test
sub
mov
in
cmp
inc
xchg
int3
stos
iret
xchg
push
stos
jns
popa
jp
push
and
imul
fwait
imul
addr16
adc
mov
inc
test
jmp
jge
mov
pop
insb
xchg
jae
jmp
leave
pop
mov
in
dec
xchg
into
dec
ja
xchg
pop
add
dec
dec
bound
ds
mov
add
and
fsts
lahf
sub
stos
mov
mov
imul
fwait
scas
das
cmpsl
subb
xchg
jbe
jmp
popf
into
add
mov
pop
adc
loop
push
add
sub
fimull
and
lods
stos
test
sahf
dec
int
mov
or
sub
jge
bts
nop
sub
dec
and
pop
mov
stos
pop
in
and
adc
test
push
mov
loope
inc
mov
lods
fadds
dec
push
idivb
xor
xchg
mov
mov
pop
lock
adc
loop
fcomps
leave
stos
stc
add
add
dec
xor
push
push
adc
imull
push
stos
bound
fsubp
add
aas
addr16
ds
fwait
lock
addr16
in
mov
rcrb
incl
jb
adcl
jmp
addr16
out
mov
sub
lds
jnp
pushf
add
sbb
push
xchg
lods
push
inc
pop
inc
stos
repz
lods
pop
std
xor
outsl
sbb
push
xchg
mov
or
stos
xor
popf
notb
testl
iret
xchg
stos
add
repnz
stos
lea
xchg
insb
stos
iret
fcoms
adc
sti
mov
mov
stos
xchg
ret
jp
dec
cmp
mov
fstpl
stos
out
xor
out
daa
int
xchg
imul
pop
mov
dec
outsl
mov
enter
sub
pop
jne
cmpsl
cmc
cmp
nop
mov
int
push
je
dec
dec
imul
stos
aaa
and
sbb
cmp
pop
les
fwait
lcall
stos
call
loop
in
lret
sahf
push
fdivrl
ljmp
test
mov
push
cmovns
adc
je
dec
movsl
stos
stos
xor
cli
inc
cmc
fnsave
xor
sbb
icebp
daa
es
xchg
mov
sbb
push
scas
jne
stos
jo
iret
cmp
xchg
popl
ss
xchg
pop
pop
cwtl
insl
jmp
fmulp
sbb
bound
imul
gs
test
mov
push
lahf
ljmp
imull
jmp
iret
or
sbb
push
jae
stos
bound
leave
add
cmp
popa
idiv
jo
add
pop
rcl
adc
dec
push
push
dec
push
xor
cld
sub
mov
mov
sub
mov
jne
stos
and
rcl
data16
fbstp
mov
testb
sub
sbb
lods
imul
pusha
stos
rolb
stos
ja
inc
xor
stos
rcrl
jmp
mov
dec
sti
pop
push
push
mov
cmc
xor
adc
daa
icebp
or
cmp
int3
test
stos
mov
cs
or
mov
sub
and
jge
shlb
stos
call
sbb
arpl
mov
stos
pop
xchg
orl
adc
jmp
cld
lods
js
xchg
sti
lahf
stos
jae
nop
jg
iret
test
jmp
xchg
push
push
dec
pusha
mov
or
xlat
mov
xchg
test
stos
addr16
xor
push
mov
or
mov
shll
mov
push
cltd
push
sub
pop
stos
pop
fs
sbb
daa
aaa
pop
shll
stos
adc
mov
les
out
daa
je
lret
repnz
popa
mov
test
mov
sub
mov
dec
shlb
dec
les
add
push
add
lcall
loopne
adc
mov
sub
popa
pop
mov
jg
arpl
sbb
add
xchg
jbe
pop
and
and
stos
les
pusha
mov
jne
arpl
sahf
dec
adc
mov
jecxz
dec
fistl
sbb
push
cld
adc
push
jl
push
add
and
mov
stos
jecxz
cmp
and
cld
stos
pop
mov
cmc
cli
mov
cwtl
stos
xor
addr16
mov
rclb
nop
push
jmp
or
fistps
jg
js
popf
cltd
stos
arpl
mov
les
stos
jne
sbb
cs
cmp
lods
jle
out
inc
inc
push
adc
ds
test
lods
dec
adc
mov
cmpsl
hlt
xchg
ds
xchg
lcall
insl
jmp
pop
cmp
dec
dec
lahf
jle
stos
xchg
lods
sub
push
push
stos
sahf
mov
int3
dec
cmp
add
lret
stos
xchg
xchg
or
inc
mov
stos
xchg
xchg
inc
sbb
add
sbb
stos
subl
stos
dec
jnp
mov
gs
stos
mov
jnp
fs
outsl
imul
fldt
push
sbb
jl
fadds
cmp
inc
mov
out
shll
sbb
bound
xchg
stos
pop
lea
push
xorb
push
gs
jmp
dec
mov
icebp
cmp
stos
cmp
cmpsb
push
xor
xchg
loopne
or
sub
cld
inc
in
rol
sbb
and
into
test
stos
pop
cwtl
mov
xchg
mov
and
jae
xor
cmc
movsl
fwait
stos
xor
ss
or
daa
bound
pusha
movsl
push
xor
xor
and
clc
movsb
stos
cmc
add
mov
fldt
notl
cld
ret
scas
mov
scas
sub
loope
jmp
lock
outsl
or
sub
repnz
jns
xchg
push
fimull
repz
out
push
lock
sti
or
lret
add
sub
sbb
cmp
push
pop
movsb
loope
adc
jnp
stos
dec
mov
clc
orb
stos
je
mov
xchg
pop
jge
mov
mull
fwait
dec
xor
aas
cli
mov
in
mov
push
stos
dec
cmp
mov
xchg
popa
insl
jne
icebp
jge
in
addr16
lock
das
sbb
test
stos
movsb
or
stos
xchg
pusha
andl
xchg
sub
cmp
pop
repnz
ficoml
ficomps
or
stc
stos
sbb
and
popf
mov
ja
das
mov
stos
pusha
imull
loopne
cmp
add
xchg
in
stos
in
in
add
push
imul
sahf
aam
in
mov
mov
sub
stos
test
orl
outsl
jmp
xchg
adc
pop
scas
mov
ja
add
nop
pop
movsb
out
cmovnp
push
sub
js
mov
stos
sbb
push
inc
pop
pushf
pop
popa
stos
and
inc
movsb
rorb
jle
push
and
and
xor
mov
stos
in
mov
mov
outsb
pop
call
lahf
sbb
fadds
push
mov
jbe
fsts
adc
fbld
add
loop
mov
dec
stos
mov
ja
xor
xchg
mov
jno
inc
xchg
jecxz
lods
stos
nop
cmp
fdiv
out
aad
push
repz
stos
ss
adc
stos
push
adc
stos
mov
sub
lret
jl
stc
add
fucomip
stos
mov
sbb
sbb
cmp
mov
int
jg
or
mov
test
daa
aad
add
jg
andl
jbe
das
push
pop
in
mov
mov
mov
xchg
test
iretw
mov
je
mov
xor
jo
mov
inc
mov
pop
cmp
mov
pop
adcb
pop
stos
jno
push
push
xchg
aad
lods
stos
negb
mov
lea
scas
xchg
cmp
stos
in
lcall
stc
xor
jg
jb
out
cld
mov
mov
popa
mov
jge
and
mov
mov
fimuls
mov
inc
leave
ja
lock
inc
loope
mov
int
repnz
or
dec
push
es
jbe
mov
jmp
xchg
mov
sub
leave
pop
aad
and
cmp
stos
pop
out
xorps
sahf
in
enter
mov
jmp
repnz
cmp
add
mov
dec
fcomp
stos
lds
pop
stos
xchg
or
pop
mov
mov
call
fwait
jne
jo
jnp
out
stos
cwtl
lcall
arpl
jae
fwait
push
test
aam
lock
scas
rorl
push
pushf
jle
xchg
mov
push
scas
test
stos
jecxz
out
adc
cli
dec
imul
ret
push
in
xchg
push
cmc
stos
sub
cmp
mov
aad
outsl
stos
xor
jmp
frstor
scas
in
cld
stos
es
movsl
and
in
sub
shrb
jmp
fidivrl
sub
mov
hlt
sbb
leave
xor
adc
or
mov
mov
mov
imul
xchg
lahf
mov
mov
mov
xor
popf
stos
jae
repnz
cmc
xlat
jnp
lods
insl
mulb
jnp
mov
sbb
add
xchg
popa
xchg
xchg
pushf
push
mov
mov
popf
gs
mov
outsb
fsubrs
push
int3
pop
mov
ret
inc
aam
outsb
outsl
xcrypt-ofb
cmpsl
lods
inc
scas
sahf
add
cli
in
add
cmc
test
imul
jmp
nop
negb
stos
xor
gs
dec
mov
sub
aad
stos
push
arpl
lcall
int3
cmp
mov
outsb
add
cmpsb
mov
pop
sub
xor
fnstenv
dec
mov
fwait
test
xor
cld
jb
insb
jmp
push
inc
sub
rcll
push
rorl
fwait
in
test
jnp
cmp
lret
pop
outsl
stos
mov
mov
lcall
cwtl
repz
stos
mov
mov
out
xor
in
arpl
cmpsb
stos
movsl
pusha
ret
scas
jne
stos
pop
js
cld
or
lret
stos
mov
rcl
mov
xlat
divb
sub
cmc
xchg
mov
cmpb
leave
cmp
fwait
sbb
ljmp
sbb
sub
les
adc
add
outsl
xchg
sbb
imul
xchg
fisubl
mov
mov
test
outsb
xchg
jo
cmpsl
stos
mov
or
insb
stos
fcmovnbe
xchg
scas
push
ss
sbb
lods
lret
stos
mov
xchg
repnz
fistpll
stos
movsb
sbb
cltd
mov
icebp
cmp
stos
pushf
popf
enter
mov
inc
add
push
sbb
in
xchg
xor
lret
cmc
loop
fcmovnu
stos
inc
cltd
push
xchg
mov
daa
sbb
push
jmp
inc
dec
adc
icebp
or
adc
out
ficoms
loopne
stos
push
andl
nop
sub
jae
and
sub
stos
mov
cwtl
jns
mov
loopne
ds
sbb
push
mov
xchg
cmp
or
cmpsl
int
or
nop
dec
adc
sub
and
and
loopne
repnz
sti
fwait
test
sub
pop
push
push
push
stos
mov
fistl
jle
mov
enter
aas
fsubr
insb
mov
stos
sub
mov
push
and
xlat
stos
adc
shrl
jmp
fucomi
xchg
shlb
push
mov
cmp
sub
es
dec
fwait
push
imul
sbb
mov
ja
insl
aaa
mov
adc
dec
fwait
lahf
imull
test
jnp
jae
stos
dec
ja
ud2
ficompl
stos
mov
mov
and
sub
pop
xor
stos
lahf
cmp
lret
xchg
jp
lods
push
stos
clc
sahf
adc
add
stos
bound
lcall
pop
mov
stos
pusha
jge
mov
push
mov
pop
arpl
mov
repnz
sbb
jns
push
stos
imul
inc
stos
sarl
adc
jge
fisubs
inc
filds
add
leave
clc
loope
sub
push
movsl
sbb
sub
arpl
mov
mov
data16
inc
or
inc
xchg
xchg
mov
or
mov
arpl
mov
andb
mov
jmp
xor
push
jmp
add
jae
popa
xchg
ss
loop
enter
negl
or
add
and
das
nop
xchg
fldt
stos
test
arpl
stos
psubusb
mov
stos
xchg
pop
push
or
mov
cmc
push
mov
mov
lea
shlb
lret
test
xchg
xlat
addr16
cmp
fwait
rol
push
stos
clc
in
mov
xchg
sub
fwait
sub
cld
mov
sarl
lods
sahf
stos
jp
leave
dec
pop
mov
xor
mov
or
shrl
inc
inc
ljmp
out
out
test
rclb
mov
lahf
jle
addr16
pop
or
dec
das
add
pop
ja
aas
adc
mov
jmp
push
adc
sub
loope
xchg
inc
cmp
int3
test
xchg
dec
sub
jno
into
pop
mov
xchg
repz
push
mov
lods
imul
or
push
sti
test
sub
xchg
xchg
pop
dec
mov
movsb
popf
stos
add
data16
cmp
inc
out
mov
jbe
jl
jmp
test
cli
ret
pop
dec
int
cmp
mov
ljmp
add
stos
les
fstpl
jge
mov
dec
stos
push
add
dec
stos
out
bound
stos
mov
mov
leave
adc
and
decl
stos
and
xor
xor
movsl
mov
adc
add
dec
mov
stos
inc
pop
out
mov
xchg
sahf
lcall
pushf
adc
and
mov
inc
dec
cmpsl
mov
int3
stos
rolb
adc
outsl
mov
stos
add
js
fisubs
mov
jno
inc
xchg
pop
mov
or
in
stos
int
neg
je
insb
lret
and
pop
js
lcall
cmp
adc
jo
adc
xor
pop
push
stos
insb
xor
mov
repz
je
push
adc
push
dec
ja
inc
and
add
mov
xchg
cmp
stos
test
rcll
insl
cmp
pop
ret
mov
stos
outsl
xor
xor
xor
shrd
cbtw
jbe
andb
xchg
mov
fmulp
daa
addr16
add
mov
xorl
loop
sbb
pop
add
in
int3
xchg
andb
fsub
jmp
imul
pop
mov
stos
inc
pushf
cmpsl
and
mov
jno
push
imul
mov
imul
addr16
jmp
ja
and
cs
ret
mov
or
cmc
sbb
mov
sub
and
imul
repnz
loopne
cmp
shrb
das
xchg
mov
pop
push
sub
inc
subb
mov
pop
mov
mov
subb
adc
mov
stos
xor
add
out
shrl
inc
ljmp
xor
xchg
fwait
mov
add
dec
fidivrl
or
mov
sub
call
inc
jo
stos
test
mov
call
das
stos
cmp
xchg
pop
stos
movsb
pop
lahf
jae
xchg
cmpb
dec
mov
mov
and
stos
inc
movsl
and
rorb
mov
jns
inc
adc
out
pop
stos
dec
loop
js
cmp
mov
sbb
negb
pop
pop
fdivrl
dec
cmp
mov
adc
test
push
loope
xor
aad
repz
mov
jno
mov
stos
orl
adc
xor
pop
ss
and
adc
stos
push
inc
push
lret
std
fnstsw
int
sub
push
mov
out
push
jbe
lcall
stos
js
aaa
sub
ficoms
mov
dec
inc
int3
cli
mov
mov
sub
cltd
mov
mov
out
pop
stos
push
mul
mov
aas
jmp
sub
sub
xor
sub
pop
pusha
das
stos
iret
les
fdivrl
leave
push
mov
sbb
and
xchg
ret
lcall
fucomi
xchg
adc
adc
fdivp
xorl
cmp
xor
adc
xchg
sub
cmp
lea
fisubl
sub
pop
scas
jecxz
stos
arpl
add
push
shrl
mov
stos
repnz
ret
stos
mov
lods
mov
cld
cmpsl
arpl
mov
adc
mov
mov
daa
mov
mov
loope
pop
sub
xchg
adc
jmp
aaa
mov
fsubp
daa
scas
call
sahf
adc
push
test
push
ja
pop
stos
sti
popf
or
sbb
clc
stos
sbb
push
cmp
mov
push
inc
cld
mov
stos
cmp
push
ret
cmp
mov
add
adc
push
sbb
inc
jo
mov
jge
outsl
pop
xchg
xchg
push
inc
outsb
stos
cmpsb
pop
or
push
movsb
pusha
lret
or
push
idivb
nop
sub
lds
int
or
into
jnp
into
dec
jp
ja
sarb
stos
insl
cmpsb
dec
aas
imul
sub
test
xchg
cmpsl
inc
stos
cmc
xor
mov
mov
stos
inc
cmpsb
pop
cmp
dec
mov
subl
stos
add
and
inc
sub
add
dec
xchg
add
cmpsb
sub
dec
stos
fs
adc
inc
pop
or
insb
mov
pop
stos
mov
movsb
push
mov
cmpsw
fadd
jmp
sbbl
dec
stos
lods
sub
stos
popa
jns
mov
or
loop
push
in
scas
scas
lods
or
jle
loopne
bound
or
sub
idiv
das
xchg
inc
or
call
mov
mov
push
pop
ja
xorb
mov
fbld
out
adc
arpl
aas
bound
mov
loop
in
pop
adc
lds
mov
fwait
cmp
xchg
mov
or
in
dec
sbb
fwait
daa
ds
mov
stos
sahf
pop
xchg
lods
stos
loop
bound
xor
fincstp
stos
xor
or
stos
ja
adc
cmc
movsb
mov
jl
popa
es
push
daa
jg
ret
dec
std
stos
ret
sub
inc
add
cmp
sub
ret
adcl
add
dec
addl
stos
icebp
mov
dec
inc
mov
push
stos
shufps
mov
fsub
cmc
sub
adc
lea
stos
xchg
sbb
sbb
pop
push
fwait
mov
mov
stos
xor
jg
push
dec
outsb
jbe
mov
in
daa
jo
inc
mov
cmp
adc
mov
mov
leave
popf
fldcw
xchg
cmpsl
and
iret
repnz
fildll
call
stos
sarb
loope
fisttpl
std
push
mov
mov
test
je
scas
and
sbb
mov
xchg
sub
pop
ljmp
add
lds
adc
mov
stos
mov
fistps
cwtl
dec
lahf
dec
sahf
into
xchg
stos
xchg
adc
inc
outsl
xchg
jne
stos
js
out
pop
je
sahf
push
push
mov
mov
gs
ret
cmc
inc
stos
xor
or
lock
aad
fwait
inc
movb
loop
and
inc
in
sbb
stos
enter
lea
pop
pop
daa
add
sbb
stos
loope
xchg
xchg
sub
fucomip
mov
fnsave
js
xor
xor
test
flds
stos
ss
bound
jl
mov
mov
and
stos
testl
xor
inc
mov
gs
stos
xchg
push
mov
cmc
mov
fcomps
cmpsb
cltd
pop
push
add
xchg
and
out
push
xchg
repz
mov
sarb
cmpsl
push
inc
push
andl
insl
xchg
mov
stos
in
sub
in
cmp
cld
push
test
pop
xchg
add
push
out
stos
dec
jb
aam
call
lock
mov
mov
popa
loope
mov
scas
push
mov
xchg
pop
test
add
shll
xor
in
pop
stos
sbb
lret
jno
test
daa
add
sarb
fs
or
mov
movl
adc
pop
stos
orb
ds
sub
adc
addr16
sbb
stos
pushf
or
mov
jns
cmp
outsl
stos
mov
mov
xor
in
fistpll
int
call
sbb
push
imul
jecxz
loope
push
xchg
mov
test
push
int3
jae
mov
stos
fwait
gs
xchg
dec
cmp
popf
int
push
negl
jecxz
push
mov
mov
outsl
es
cli
cmp
dec
xchg
stos
cltd
jg
aam
mov
nop
stos
push
jl
jp
outsl
ret
test
imul
js
pop
mov
push
add
std
sub
dec
mov
sub
data16
call
push
push
das
stos
pop
mov
xlat
mov
vprotb
push
or
std
and
inc
lcall
div
jp
aas
pusha
mov
iret
test
jns
inc
push
or
cwtl
push
xorb
mov
stos
fisttps
jno
mov
out
aam
arpl
lods
loopne
or
insl
cltd
cli
ret
cmp
and
sbb
or
stos
xor
inc
stos
push
or
sub
loop
sbb
shll
adc
mov
repz
pop
test
sbb
push
mov
and
push
mov
lods
pop
ret
mov
cmp
out
stos
mov
jno
sbb
clc
imul
shrl
movsb
imul
dec
loope
rclb
in
pop
mov
shrl
or
mov
dec
adc
push
xchg
xchg
test
xchg
notl
mov
mov
das
lods
mov
ja
xlat
int
cli
clc
jmp
fbld
stc
pop
rcrb
pop
mov
stos
imul
cmc
xchg
shll
fwait
mov
stos
int3
or
xchg
out
add
iret
mov
daa
icebp
adc
jbe
cli
lret
fwait
xchg
cmpsl
jmp
push
std
test
stos
dec
mov
enter
ror
cmp
jno
leave
int3
mov
stos
sbb
mov
popf
sti
je
stos
dec
jl
cmp
shrb
pop
jo
push
mov
sahf
das
shrb
out
loopne
out
push
psllw
jmp
add
pop
pop
test
xchg
leave
or
inc
adc
add
jno
xchg
nop
mov
cltd
fmulp
mov
lods
mov
xchg
sbb
mov
dec
int
mov
lret
cld
test
dec
pop
stos
test
xor
jno
sub
xchg
test
stos
insl
insb
and
and
inc
mov
adc
aad
jno
adcb
arpl
jnp
xchg
jmp
stos
jne,pt
subw
sub
dec
xchg
stos
mov
rorl
stos
ret
shrb
adc
lock
fisttpl
jg
mov
stos
mov
loop
pop
jbe
jmp
lcall
subl
cmpb
imul
jge
jl
push
scas
jmp
pop
in
mov
stc
stos
xchg
xor
aad
pushf
push
mov
sub
mov
pop
mov
insb
in
in
cld
in
mov
call
lds
ss
or
cmp
daa
ja
stos
pop
aad
gs
mov
push
outsl
jmp
ret
lret
popf
dec
scas
rcr
stos
cmp
add
sbb
or
sub
outsl
lods
push
sub
xchg
sbb
or
lahf
mov
stos
pushf
ror
js
inc
stos
jb
xchg
inc
cmp
fistpl
jae
stos
test
push
cltd
stos
inc
andl
inc
or
add
mov
es
mov
in
mov
add
mov
insb
or
cmp
std
stos
cmp
fisttpl
push
and
or
and
and
das
xor
cmc
sub
cmpsb
dec
mov
movsb
sbb
adc
adc
pop
xor
imul
pop
ljmp
imul
lahf
inc
nop
stc
sub
mov
shr
mov
in
jle
mov
fildl
inc
sbb
stos
loop
dec
repnz
push
stos
adc
mov
lcall
adc
int
jae
loope
jbe
hlt
inc
stos
shlw
stos
and
in
stos
pop
mov
jbe
stos
inc
and
out
dec
out
xor
stc
lret
clc
sub
imul
xchg
stos
pop
inc
out
pop
gs
push
stos
inc
lock
scas
mov
lods
stos
pop
xor
and
in
mov
push
add
sti
mov
loopne
add
enter
ficompl
ret
push
cld
imul
test
jmp
movd
xor
cltd
push
stos
lahf
cmp
jg
add
push
imul
add
fnstcw
or
inc
aam
dec
shlb
in
cmp
stos
xchg
mov
hlt
stos
adc
sti
fldcw
mov
dec
stc
stos
xchg
cmp
out
jmp
jecxz
xor
cmpsl
imul
xor
xor
imul
bound
mov
mov
ss
inc
in
mov
pop
or
sbb
mov
data16
inc
and
fcomps
movsl
and
lahf
jl
mov
xor
pop
cltd
xchg
leave
andl
xchg
aaa
push
xchg
daa
cld
cmpsb
in
push
stos
out
ss
mov
test
add
cltd
pop
xchg
xchg
pop
out
in
stos
push
and
test
jmp
jnp
fwait
and
xchg
dec
xchg
stos
mov
mov
mov
push
movsl
popf
add
sti
inc
fnstenv
jl
mov
imul
sub
push
movsb
faddp
pop
sub
nop
cwtl
shrb
xchg
adc
gs
or
stos
adc
mov
jge
lret
stos
xchg
sub
scas
cmpsb
mov
stos
and
es
shrl
sbb
aad
cmp
scas
and
sbb
jl
addr16
lahf
icebp
out
mov
xor
xlat
out
push
out
fwait
push
mov
pusha
jg
clc
push
mov
mov
sub
pop
pop
xlat
xchg
arpl
jmp
sbb
pushf
jle
stos
xor
bound
stos
sbb
je
in
dec
lods
xor
inc
xchg
dec
subl
test
inc
mov
fcoms
sub
stos
les
cwtl
mov
jno
iret
xchg
dec
stos
out
subl
inc
xchg
mov
mov
popa
mov
sub
stos
cs
xor
dec
fildl
or
push
mov
stos
adc
pop
mov
ret
cmpb
mov
aam
adc
lods
ljmp
out
mov
or
xchg
stos
pop
lds
into
fisubrl
and
mov
mov
imul
xchg
outsb
xchg
loopne
stos
lea
neg
into
bound
lahf
daa
dec
ficompl
sub
sbb
or
out
inc
test
or
jmp
loop
fwait
jp
xor
dec
xor
mov
fcoms
or
mov
nop
cwtl
lcall
push
push
mov
xlat
push
cmp
in
xchg
jecxz
xchg
in
daa
push
movsl
aaa
test
insb
leave
movsb
adc
cmp
stos
mov
jmp
xor
pop
jp
gs
stos
add
xor
pop
pop
pop
jl
xor
stos
mov
inc
jle
lods
sub
in
xchg
movsl
sub
idivl
xor
stos
inc
xor
sahf
rcrl
ljmp
mov
shrl
push
mov
xor
lcallw
pop
xchg
fwait
jo
out
sbb
jg
pop
xchg
imul
orl
out
fisubrs
fisubl
cld
sub
add
addr16
and
pop
mov
aaa
loop
xchg
mov
xchg
icebp
xor
popl
and
cwtl
stos
inc
jl
add
push
xchg
jle
mov
fs
push
je
ja
pushf
push
stos
xchg
xor
insl
insb
lret
sbb
stos
sub
mov
sahf
call
fcomip
mov
into
mov
push
jle
les
xchg
ja
shrl
adc
bound
stos
push
mov
mov
stos
fcmovu
and
out
stos
push
push
sub
out
das
shrl
mov
mov
lods
jg
xchg
push
mov
dec
push
in
dec
jge
clc
sbb
inc
push
cmp
mov
sbb
hlt
push
stos
ficompl
dec
ficoms
sub
mov
push
push
mov
adcb
cmpsb
lahf
pop
mov
lcall
pop
mov
fiaddl
mov
loop
or
xor
add
xchg
lods
stos
and
xchg
jmp
xchg
jg
cmp
adc
stos
cltd
ret
mov
fmuls
stos
dec
mov
jmp
jmp
mov
or
ja
in
mov
xchg
cmp
xorb
mov
movsl
lock
gs
or
out
in
shlb
sbb
push
add
loopne
or
push
repnz
sbb
fwait
dec
xchg
pop
mov
mov
xchg
jb
das
jmp
lret
mov
mov
xchg
push
add
popa
jnp
pop
sarb
jg
mov
xchg
stos
add
jmp
adc
xchg
in
shr
mov
cmpsl
and
popf
push
ss
mov
add
jmp
mov
and
xor
int3
stos
sbb
pop
push
adc
mov
das
rorb
mov
pop
xlat
push
jmp
jo
sbb
nop
pop
imul
mov
stos
xchg
addr16
pop
sub
mov
and
out
insl
xchg
stos
rolb
xchg
jmp
stos
sub
xor
push
adc
jns
adc
insl
push
cmp
mov
xchg
out
fmuls
stos
and
fs
cmp
add
adc
lods
stos
arpl
xor
clc
stos
sub
mov
enter
add
add
mov
imul
and
push
xor
jb
imul
mov
cmp
stos
stc
cli
scas
ret
mov
xchg
stos
mov
sbb
and
test
subb
inc
sbb
lock
das
pusha
adc
xor
cwtl
push
popf
jb
xor
in
inc
cld
in
dec
add
jne
stos
mov
xor
addr16
sub
pop
lret
dec
cmpsb
inc
sbb
fidivrs
enter
stos
testb
xchg
stos
test
inc
call
stos
in
orl
or
xchg
movsb
stos
outsl
into
shrl
notl
movq
je
xchg
mov
xor
loop
fcmovnu
xchg
push
xchg
dec
xor
jge
jns
imul
mov
push
dec
out
dec
xchg
cmpsb
adc
stos
mov
ss
sbb
out
xchg
daa
fsubl
lods
mov
std
xchg
cwtl
stos
nop
cltd
and
rcll
mov
iret
and
pop
jmp
mov
and
inc
add
push
xchg
xchg
jmp
lds
jl
repnz
sbb
aaa
cwtl
inc
scas
das
sbb
insl
gs
mov
mov
inc
cli
loope
jecxz
dec
mov
mov
inc
icebp
in
fadds
or
push
hlt
les
lock
fisubrs
jmp
outsl
cmpsb
jmp
adc
aad
js
dec
cltd
stos
in
sub
lahf
mov
jl
popf
add
imul
stos
cmp
push
pop
push
lock
sbb
xchg
dec
dec
inc
stos
add
data16
repnz
ret
jp
xor
dec
dec
movsl
dec
cmpsl
mov
fisubrs
lahf
mov
pop
pop
xchg
jl
bts
mov
jmp
xchg
dec
adc
dec
xchg
push
into
or
dec
xchg
js
jmp
and
int3
filds
shrb
lods
int
stos
mov
ret
stos
push
lret
inc
or
cmp
icebp
sub
stos
xchg
insl
jmp
mov
lahf
stos
arpl
pop
rcrb
lret
dec
movsb
stos
xor
loopne
push
lock
stos
add
jmp
push
mov
push
jp
stos
and
push
xchg
xor
ss
stos
and
or
daa
test
push
mov
xor
dec
dec
mov
data16
xor
js
sbb
xorl
sbb
jae
jns
xchg
je
stos
inc
sub
int
stos
push
push
mov
nop
stos
mov
imul
adc
jae
bound
fidivrl
cli
lods
lret
cld
mov
movsb
movsl
mov
loop
pop
pop
in
mov
jmp
lcall
jmp
iret
out
xor
scas
inc
and
in
out
in
xchg
inc
add
loopne
shrl
insl
sbb
mov
ja
sub
lods
inc
adc
stos
jbe
loope
imul
bound
out
push
mov
xor
iret
or
nop
stos
fs
cmp
arpl
add
push
lock
lret
xchg
enter
int3
ret
sahf
sbb
lret
pop
subl
mov
dec
aas
stos
and
inc
je
xchg
adc
imul
popl
sub
aaa
push
cltd
lahf
arpl
mov
add
test
mov
and
jecxz
adc
mov
lods
nop
stos
inc
sub
xchg
daa
loopne
push
dec
xorl
test
in
xor
fisubrl
popf
xchg
pop
cld
dec
mov
push
cli
push
jge
cs
jmp
inc
push
mov
adc
mov
mov
dec
les
sbb
mov
sub
pop
mov
and
stos
inc
xchg
pop
scas
fdivl
mov
in
adc
jl
scas
and
pop
stos
xor
ret
lock
stos
lea
stos
mov
sti
rcl
jb
push
stos
inc
mov
push
fs
stos
iret
pop
mov
push
addr16
pop
cli
js
ret
loope
stos
push
pop
aas
hlt
sbb
or
ret
add
scas
sbb
xlat
stos
and
cltd
jl
jmp
fwait
mov
sub
leavew
xchg
and
scas
jae
daa
repnz
lds
in
stos
call
cmp
mov
mov
and
movsb
or
jae
jmp
or
mov
dec
decb
and
inc
pop
pop
push
stos
fistps
aaa
inc
xchg
fwait
and
ret
movl
pop
mov
cld
or
stos
adc
jno
mov
jge
bound
cld
jo
loopne
push
cmp
movsb
pop
sbb
push
icebp
cmpsl
scas
pop
mov
lds
bound
add
stos
das
std
inc
int
aaa
cld
sub
push
sub
mov
or
stos
jae
iret
mov
push
pop
out
xor
pop
jmp
pop
leave
add
repnz
inc
imul
mov
stos
adc
ret
out
add
cmp
dec
insb
xchg
push
stos
loop
xlat
or
aad
jnp
push
jo
stos
sbb
inc
imul
out
xchg
jecxz
mov
jle
xor
cmp
adc
iret
hlt
sub
pop
inc
sbb
lods
addr16
or
outsl
stos
test
arpl
stos
inc
movsb
aas
jge
xchg
insb
cmp
inc
bound
stos
test
imul
stos
push
in
inc
test
jno
pushf
fs
add
lea
lods
jge
pop
rorb
stos
or
adc
mov
xor
sub
add
inc
test
cmp
stos
or
rcrb
inc
stos
adc
jl
mov
xchg
ret
dec
outsl
stos
jmp
js
or
leave
jno
sub
mov
es
addr16
mov
jg
scas
push
lahf
dec
int3
jnp
mov
dec
inc
lahf
insb
ljmp
loopne
mov
imul
xchg
xor
fldt
jo
add
std
sbb
mov
dec
xchg
inc
lods
dec
mov
stos
test
mov
jo
fdivl
cwtl
dec
inc
cld
lahf
stos
xor
shrb
cmp
ljmp
adc
sub
test
cs
cmp
or
das
bound
stos
imul
cmp
jmp
lret
dec
xor
lea
repz
stos
cmp
mov
push
add
xchg
pop
jmp
adc
out
sub
enter
out
stos
jg
jl
push
pusha
cld
stos
les
cwtl
mov
in
jl
xchg
hlt
ret
jecxz
or
mov
mov
loopne
stos
adc
popa
stos
rcrl
cmpsl
cmp
jge
test
addr16
out
mov
ret
inc
sbb
das
jg
and
lret
jp
lcall
or
xchg
stos
jo
shll
sbb
stos
rol
mov
lcall
xchg
outsl
xchg
cmp
stc
stos
pop
cmp
stos
andb
imul
fdivl
dec
mov
xchg
into
cmp
stos
test
repnz
scas
jns
stos
ret
mov
mov
stos
pop
rcrb
fdivr
mov
lds
stos
lods
xchg
repnz
sbb
stos
je
arpl
pop
outsb
stos
dec
inc
xchg
nop
pop
mov
adcl
stos
add
xor
pop
or
push
dec
je
inc
dec
lcall
pop
cmp
stos
fistl
pusha
je
ja
lcall
xlat
jmp
jp
and
push
and
or
decb
mov
add
mov
in
lea
xor
cwtl
push
xor
sbb
add
aad
mov
mov
pop
push
aam
stos
push
sub
hlt
repz
pushw
loopne
push
sbb
adcl
ds
mov
in
mov
xor
or
xor
adc
fwait
push
cmpsb
gs
mov
cmc
push
inc
sub
mov
jbe
scas
and
mov
jmp
cld
or
sarb
push
jp
jecxz
xchg
popa
jmp
mov
arpl
pusha
scas
sub
call
pop
cld
cmpsb
addr16
sub
test
pop
fidivrs
mov
leave
ljmp
dec
sub
xchg
push
adc
movsl
jecxz
dec
xor
stos
rcrb
stos
in
int3
sub
imul
pop
mov
stos
mov
pop
ja
fcompl
mov
aaa
or
cwtl
stos
dec
sbb
pop
push
mov
adc
xchg
mov
mov
mov
lods
lret
sub
add
in
pop
loop
sub
sbb
sti
test
mov
mov
test
test
jg
stos
mov
mov
sub
test
ds
cld
mov
push
test
and
nop
sbb
lds
or
shlb
pop
mov
hlt
fstpl
adc
mov
stos
cmp
sub
stos
cld
lods
mov
gs
mov
pop
sbb
mov
fldt
in
and
and
int3
jmp
xlat
aaa
repz
fdivrs
mov
lcall
es
imul
das
test
stc
xor
mov
shlb
sbb
mov
or
stos
mov
sub
mov
test
jmp
loopne
and
sub
adc
xchg
in
fs
fxch
mov
push
xchg
xor
stos
push
jge
pop
aaa
punpckhbw
jecxz
push
fsubrl
pop
xor
stos
fisttpll
imul
shl
jns
in
cmp
push
sbbl
stc
xor
fistpll
cmp
pushf
sbb
mov
jo
fwait
jns
add
lock
mov
pop
push
rep
jno
and
mov
test
push
repnz
daa
fdivrl
out
fwait
jne
call
mov
pop
mov
stos
in
insb
xchg
cmpsb
cs
xchg
lods
clc
arpl
sub
cmp
adc
inc
pop
fcmovu
shrb
stos
je
xor
leave
cmova
inc
stos
cmpsw
stc
dec
mov
scas
aaa
lahf
imul
cmp
jae
lods
test
fld
sbb
cmpsb
xor
stos
in
inc
push
pop
add
stos
aaa
and
mov
push
das
dec
add
rclb
inc
pop
or
mov
fadd
jns
inc
or
cmp
push
mov
hlt
sbb
jle
ret
imul
xchg
test
add
adc
dec
stos
pop
sub
push
test
adc
les
stos
sbb
stos
sbb
lret
cmp
mov
mov
mov
xchg
ret
lcall
pop
jae
jl
push
mov
pop
sbb
aas
adc
ficompl
enter
sti
in
mov
lods
js
push
xchg
sbb
nop
iret
mov
xchg
cmp
int3
jmp
lahf
adc
scas
int
stos
js
lods
aaa
push
inc
dec
adc
fcmovnb
popf
loopne
icebp
hlt
jb
stos
scas
mov
das
stc
stos
test
sbb
lret
jns
cmpsl
arpl
aaa
cmp
sar
adc
adc
xchg
enter
loope
push
sub
stos
mov
call
fists
leave
daa
mov
mov
push
lret
jo
xchg
jl
stos
iret
loopnew
sub
sti
stos
mov
sbb
popa
loop
stos
inc
jp
xor
xchg
in
icebp
sub
mov
pop
pushf
mov
ret
jge,pt
nop
flds
sti
adc
ficomps
xchg
mov
into
jecxz
fadds
sbb
cmpsb
int3
mov
dec
pushf
or
sti
jp
dec
popf
mov
mov
rorl
clc
inc
push
stos
mov
fldcw
push
sub
and
add
sarl
imul
decb
and
push
xchg
dec
jae
stos
push
push
icebp
loop
ss
inc
ljmp
out
ret
adc
pop
dec
jnp
push
in
jno
arpl
testl
scas
sub
stos
xor
packsswb
enter
jns
mov
dec
ss
jle
dec
jae
cmp
icebp
stos
pop
imul
dec
add
push
test
int3
stos
jp
es
push
clc
stos
into
scas
imul
les
out
dec
xor
lods
pop
inc
daa
cmpb
movsb
push
mov
mov
aam
xchg
stos
adc
shll
popa
stos
add
jb
cwtl
cli
ret
adc
push
xchg
pop
hlt
sub
out
insb
repz
stos
lock
pop
fisubrl
mov
xor
ret
scas
lods
sbbb
dec
mov
mov
ljmp
scas
inc
fs
aas
bound
arpl
std
out
sbb
xchg
andb
cmp
xor
in
push
ffreep
push
jbe
stos
lods
gs
sti
lahf
mov
pusha
clc
int
sbb
jns
popa
fdivrs
stos
xlat
sub
shrl
jne
push
push
stos
pusha
dec
and
xchg
fwait
mov
aas
add
imull
mov
sbb
or
inc
and
jmp
xchg
icebp
fmuls
jp
in
pop
pop
insl
xchg
push
shr
sub
pop
aas
lods
ret
imull
repnz
shl
jmp
or
xchg
lods
push
mov
in
loopne
push
mov
insl
jne
ret
dec
and
adc
arpl
stos
adcl
int
sbb
stos
sbb
loope
mov
inc
push
mov
stos
hlt
ret
mov
mov
sbb
rcr
dec
int3
imul
xchg
fidivrl
inc
pop
dec
jle
mov
stos
cs
pop
jnp
fmull
in
subb
bound
xlat
sub
sti
pop
stos
pop
repnz
inc
cmp
incb
mov
mov
stos
xchg
ficomps
push
int3
fisubrl
ds
sub
shr
enter
ljmp
cmp
mov
out
pusha
in
sti
mov
pop
xlat
stc
pop
int
stos
mov
cli
stos
push
ds
stos
xchg
inc
push
fwait
adc
sti
int3
sub
movsb
or
in
xor
fidivs
stos
les
enter
cs
stos
mov
jnp
dec
jno
loop
xchg
scas
out
mov
imul
daa
add
mov
lock
and
jnp
jne
stos
and
push
mov
xor
jmp
fiaddl
insl
add
stos
and
push
push
stos
xchg
jecxz
xor
cmp
push
std
repnz
dec
sub
stos
cmp
xor
push
mov
pusha
and
adcl
lret
mov
fwait
out
mov
push
and
cmp
mov
cmp
add
daa
ljmp
mov
packuswb
arpl
outsb
daa
mov
and
pop
ds
iret
repnz
mov
stos
js
xor
cmpsb
pop
daa
stos
adc
mov
xlat
iret
cmpsl
stos
sarb
xchg
push
fldcw
stos
rolb
scas
push
push
mov
add
sbb
mov
jmp
sub
sbb
xor
fildll
das
loope
cltd
stos
shll
div
stc
push
test
xlat
xchg
mov
inc
stos
out
ret
pop
dec
add
cltd
stos
jno
add
mov
stos
xchg
sbb
mov
sub
xchg
pop
aaa
cmp
jp
mov
stos
push
mov
popa
sbb
adc
add
mov
cmpsl
and
xchg
and
cmp
mov
mov
cmp
arpl
imul
daa
lods
stos
mov
scas
xchg
dec
data16
xor
imul
adc
mov
mov
stos
sbb
mov
pop
loopne
jno
fmull
adc
mov
pushf
arpl
pop
stos
mov
lods
inc
pop
js
in
pop
outsb
mov
stos
imul
out
pop
jl
dec
outsl
stos
add
fisttpll
stos
mov
pop
lahf
fs
push
or
inc
test
mov
mov
xor
fcomps
test
or
fnstcw
adc
adc
addr16
push
xchg
mov
cli
xchg
sub
sti
jl
xchg
dec
punpckhdq
stos
in
subl
stos
faddp
fistpl
std
xchg
and
pop
dec
or
add
mov
scas
aaa
or
cmp
stos
pop
cltd
test
inc
das
mov
loop
in
cmp
cmp
dec
divl
or
rcll
lods
fimull
inc
xchg
insb
mov
in
stos
push
lret
mov
pushf
add
push
out
mov
add
push
test
inc
mov
lods
int
into
jmp
fwait
fs
lret
cwtl
jo
stos
and
sbb
mov
inc
pop
xor
nop
pop
cwtl
lahf
out
clc
daa
fisttpll
pop
xchg
and
xchg
pop
jbe,pn
stos
cmp
mov
push
sbb
push
lock
stc
or
loop
mov
xchg
out
sbb
loope
pushf
rep
jae
test
sbb
ja
pop
inc
dec
adc
mov
cmp
stos
leave
cmp
je
cmp
lret
stos
outsl
test
sbb
add
xor
lret
notb
inc
sub
sti
das
stos
movsb
lea
stos
ja
in
xlat
xchg
stos
aad
fnsave
push
adc
inc
movsl
popf
clc
sti
cmp
out
popf
shrl
dec
imul
stos
testl
fcmovbe
push
xor
loopne
scas
add
push
mov
test
stos
xchg
pop
dec
adc
pushf
out
stos
xor
add
imul
movb
lods
mov
inc
or
add
mov
stos
ret
cmp
stos
xchg
das
lods
fsubrl
sbb
imul
mov
data16
pop
imul
data16
and
out
pop
sub
pop
in
sar
jo
jne
stos
pop
fisttpll
clc
sub
jmp
jl
mov
xor
push
pop
mov
cld
fdivr
xchg
mov
mov
sbb
sbb
mov
xchg
and
clc
daa
psubusb
xchg
mov
test
inc
testb
sub
and
pushf
mov
aaa
fidivs
notb
mov
mov
mov
cli
mov
sbb
stos
stos
cmp
lahf
test
jbe
stos
ljmp
arpl
pop
daa
enter
pop
popf
mov
hlt
or
mov
stos
mov
daa
pop
and
jo
and
sbb
and
jnp
mov
xlat
inc
lds
shll
rorl
pop
sbb
stos
movsl
push
lods
icebp
pop
sbb
sbb
mov
jmp
dec
cmpsb
stos
xchg
push
add
movsb
mov
inc
jmp
das
fidivrl
adc
xlat
jecxz
add
stos
bnd
rclb
xchg
imul
std
mov
stos
inc
jmp
cmp
loopne
cld
and
outsb
pop
std
jae
xchg
shlb
jns
sbbl
adc
cmp
jmp
jmp
xor
movsl
xlat
pop
push
sbb
stos
sbb
cmp
mov
in
mov
and
imul
pop
inc
stos
inc
in
xchg
insb
nop
xchg
and
push
jle
loope,pt
dec
push
ret
mov
mov
orb
pushf
push
fldt
mov
xorl
stc
inc
imul
push
stos
mov
mov
stos
dec
cmpsl
les
lock
push
stos
into
gs
dec
out
or
lods
insl
addr16
fwait
pop
push
mov
lea
ljmp
push
ret
xchg
xchg
mov
mov
cmp
ljmp
test
push
int
std
fmull
cmp
rcrl
jge
dec
stos
rclb
xor
mov
js
ja
dec
rcrl
test
shll
repnz
test
cmp
outsb
mov
mov
mov
test
ja
sub
push
xchg
aaa
ja
mov
popf
aad
in
xchg
je
stos
jns
sub
pop
jne
enter
mov
xor
push
rorl
stos
sbb
sbb
loop
mov
xchg
adc
pop
push
aam
in
push
stos
pop
push
mov
jge
lret
fwait
mov
inc
mov
jle
xor
in
loope
cltd
jge
xor
lcall
adc
sbb
sbb
cmpsl
push
xchg
test
dec
lea
fwait
test
data16
lahf
dec
insb
cmp
and
nop
nop
ds
and
mov
stos
mov
sub
imul
stos
pushf
inc
push
or
cwtl
jmp
lret
or
push
aad
push
repnz
xor
shl
movsb
add
mov
push
xchg
cld
enter
cmp
mov
dec
sub
shll
fsts
stc
inc
adc
push
dec
frstor
adc
jg
stos
cmpsb
dec
push
mov
jo
je
stos
mov
rorl
pusha
stos
mov
stc
push
stos
ss
xchg
shl
and
jmp
jmp
mov
mov
cmp
or
fld
movsb
cmp
xor
ss
pop
mov
hlt
stos
mov
ret
jne
sub
test
into
js
xchg
mov
mov
mov
and
and
addr16
movsl
aas
es
sbb
cltd
daa
in
js
mov
popf
xlat
fwait
pop
stos
or
inc
daa
jno
push
cmp
shr
jne
add
dec
xchg
mov
fmull
sub
pop
stos
gs
mov
imul
xchg
jg
sub
jns
xor
fwait
mov
int
stos
sub
xor
test
ret
xchg
enter
xchg
and
cwtl
pushf
into
lock
sub
inc
imul
out
adc
int3
std
jnp
stos
pop
outsb
jmp
stos
jmp
cmp
sbb
push
iret
stos
loop
inc
push
sub
pop
cmp
mov
mov
mov
in
adc
mov
stos
mov
cmp
into
sbb
push
sbb
or
orb
adcb
pop
lea
mov
cmp
shl
jnp
push
sbb
dec
stos
xor
movsl
dec
push
imul
mov
mov
cmp
stos
xchg
pop
ss
pop
mov
jne
out
mov
xor
ret
repnz
sub
inc
stos
and
call
mov
mov
lods
insb
mov
push
stos
outsb
pop
xchg
or
add
push
mov
cmpsb
outsl
in
xchg
cmp
stos
cld
repnz
add
xchg
in
incb
das
insb
jmp
jg
or
daa
in
lcall
sub
xchg
stc
mov
push
lret
add
out
inc
mov
int
es
repnz
xchg
pop
out
les
lret
dec
lahf
xchg
inc
and
xchg
xorl
and
inc
inc
pushf
jo
cmp
popa
sbb
aas
push
insb
and
int
cs
mov
pusha
testl
jae
jmp
cmp
hlt
jno
test
mov
or
add
push
mov
mov
lret
stos
int
and
pop
hlt
fdivs
lcall
in
cmp
pushf
sbb
adc
stos
popa
rclb
inc
stos
cmp
dec
or
addr16
mov
mov
stos
pop
jecxz
aaa
notb
lods
iret
adc
fsubrs
test
popa
rcll
stos
in
mov
or
sub
decl
adc
dec
cmpsb
mov
add
stos
cwtl
inc
xchg
inc
adc
mov
stos
cmp
outsb
or
fs
pmulhw
cmp
or
mov
sub
xchg
jb
add
inc
cmp
sub
add
stos
mov
adc
mov
sub
or
sub
push
mov
pop
mov
adcl
ret
add
in
movsl
xchg
cmc
xor
fisubl
push
int3
or
insl
in
mov
adc
arpl
mov
test
mov
arpl
lods
adc
ficoml
stos
fildl
addl
loopne
inc
lcall
arpl
imul
jle
sbb
pushf
dec
jae
lahf
out
or
aam
fwait
sbb
jne
dec
jmp
and
shrb
mov
cmpb
push
mov
outsb
std
lahf
stos
mov
ds
push
fwait
int
stos
bnd
icebp
mov
add
stos
hlt
sti
outsl
inc
jg
push
stos
inc
sub
add
or
jae
xchg
and
stos
addr16
rorl
xchg
xchg
xor
sti
adc
stos
sub
loop
inc
shlb
inc
adcl
inc
dec
or
call
jnp
push
push
ss
sbb
gs
pop
icebp
stos
jae
mov
jp
rorl
or
add
push
stos
push
inc
fistps
push
bound
inc
push
ljmp
orb
mov
jns
stos
jl
imul
jno
mov
jns
dec
lock
je
addr16
fsubrl
divb
xor
shrl
ja
sti
test
out
nop
sbb
inc
jb
jp
pop
mov
cli
stos
ficoml
es
jno
notl
sub
push
in
mov
nop
adc
ret
add
jge
test
scas
jl
stos
xor
sbb
adc
mov
mov
mov
or
lahf
cmc
add
fmul
test
hlt
scas
ret
sub
in
dec
icebp
xchg
stos
ss
mov
test
imul
sbb
cmp
cmp
dec
scas
subb
std
data16
stos
out
test
sub
pop
orl
sti
sbb
or
addr16
dec
cmp
and
sub
daa
pop
jnp
xchg
sbbl
push
xor
inc
imul
dec
mov
push
dec
mov
fdivs
mov
stos
std
pop
lea
mov
nop
in
cltd
cltd
das
mov
stos
aaa
xchg
daa
mov
iret
mov
pop
js
imull
pop
sbb
fldenv
insl
stos
xchg
pop
lcall
mov
inc
xor
inc
add
mov
stos
dec
mov
enter
mov
jp
mov
push
or
cmpsl
pop
mov
sub
stos
imul
jnp
cmpsb
fidivs
ds
ja
adc
stos
aas
lcall
stos
sbb
andb
and
stos
push
sbb
leave
stos
sub
cltd
mov
jnp
repz
mov
iret
out
shlb
divl
xchg
mov
out
dec
push
pop
and
dec
stos
push
jmp
daa
adc
sbb
jmp
sbb
add
repnz
sbb
xchg
xlat
imul
mov
pop
mov
lds
lret
cmp
and
push
pop
push
xchg
arpl
rcrl
cmpsb
stos
xchg
mov
cli
pushf
stos
daa
pop
xchg
movsb
pop
loope
mov
and
xchg
stos
inc
test
mov
stos
loope
push
in
xor
repnz
xchg
mov
loop
stos
imul
add
stos
aam
sti
insb
cld
adc
sbb
jbe
cmp
aas
enter
xchg
push
jp
mov
rep
mov
rcll
stos
inc
dec
dec
fistpl
jecxz
ret
stos
fisttps
stc
mov
pop
cmp
sub
cltd
adc
stos
lret
push
jmp
scas
lahf
add
sub
jmp
inc
test
xchg
xor
stos
call
sahf
ret
pop
pop
pusha
sbb
movsb
jbe
popa
stos
fwait
je
sub
xchg
jmp
add
ret
cltd
outsl
fwait
ja
stos
mov
sbb
rcrl
in
fidivrs
dec
iret
stos
inc
or
jge
adc
fsubrl
push
add
out
sarb
cld
xchg
mov
sahf
mov
cltd
adc
stos
inc
mov
ror
push
mov
or
sbb
orl
stos
fisubrs
xor
push
pop
aam
add
lret
cmpsb
or
pop
scas
lret
lahf
dec
cltd
add
stos
xchg
aas
hlt
shll
jne
jp
clc
push
lods
mov
stos
andl
std
mov
into
sub
lock
in
in
and
std
and
popa
push
insb
inc
sbb
mov
adc
stos
mov
cmpsb
stos
dec
fnstcw
imul
leave
cmp
stos
lods
xor
jnp
imul
aad
cmp
mov
gs
cmc
push
adc
jl
push
js
int3
adc
stos
jae
addl
gs
pop
add
pop
sbb
ret
mov
ss
cwtl
stos
das
loopne
push
sbb
imul
stos
cmp
adc
cli
dec
stos
and
mov
push
xlat
gs
sbb
pop
stos
cmpsb
push
insl
jecxz
pop
daa
shrb
mov
xchg
sbb
inc
fisubrs
jo
adc
rcrl
test
push
jmp
out
mov
imul
stos
mov
mov
stos
cmc
es
dec
or
arpl
and
push
int3
rclb
push
cmp
mov
cmp
sbb
and
adc
adc
fwait
push
loopne
mov
call
inc
add
or
loop
lods
mov
rorl
fwait
inc
orb
in
in
xchg
mov
and
lea
stos
jb
ja
or
inc
sub
fwait
jl
or
jl,pt
dec
ror
sub
sub
stos
push
add
jecxz
bound
cld
addr16
daa
jns
pop
jns
xchg
push
pop
xchg
fwait
insb
stos
mov
xchg
pop
loope
dec
test
mov
sahf
testb
inc
inc
cltd
mov
pop
pop
pop
xchg
adcb
cmp
xor
or
or
fs
add
ljmp
sbb
loope
xor
cltd
daa
mov
mov
adc
mov
stos
mov
cs
addr16
daa
pop
inc
pop
in
cli
movsb
ret
sbb
fwait
and
inc
xor
into
and
jnp
enter
push
add
xchg
outsl
rorb
into
inc
jns
fldt
mov
stos
leave
in
out
insb
push
mov
adc
lock
ror
stos
repz
subb
inc
mov
dec
xchg
addr16
stos
jl
out
scas
jb
mov
test
jae
sbb
jnp
or
mov
and
push
negb
xchg
adc
mov
mov
icebp
add
xchg
add
push
adc
xchg
mov
and
je
xor
pushf
adc
jo
in
jmp
pop
rcrb
push
sbb
das
ljmp
flds
xchg
stos
orb
mov
jl
inc
sti
mov
stos
and
cmpsl
in
ret
clc
push
dec
cmpsb
shll
mov
add
mov
enter
fdivs
insb
lods
test
outsb
stos
adc
es
or
jl
xchg
inc
subl
stos
call
sbb
stos
andb
add
or
add
in
mov
push
insb
lret
or
push
dec
jnp
subl
mov
ficoms
stos
jg
ds
pop
lret
inc
stos
xor
mov
sahf
stos
int3
iret
sub
jbe
stos
mov
and
cmc
stos
sub
shrb
inc
stos
arpl
adc
cmc
pop
jne
or
jmp
xchg
mov
cmp
jmp
jae
js
pop
mov
add
and
xlat
imul
cmp
stos
mov
movsb
push
jmp
bound
lods
pop
cld
gs
adc
jnp
push
sub
mov
lock
push
cli
out
loop
clc
lahf
fldenv
cmp
iret
push
sub
add
jmp
stos
xor
mov
stos
ja
lea
mov
xor
fsubrl
das
icebp
imul
mov
sbb
add
fnstenv
lods
leave
xor
arpl
loope
lret
and
imul
insb
stos
pop
sub
pop
pop
xor
out
in
mov
mov
stos
xor
fwait
jmp
fcoml
add
orb
in
out
dec
jle
stos
sbb
or
loop
mov
cld
push
fwait
cmp
adc
add
lahf
popf
mov
int
push
js
and
push
dec
scas
lods
stos
pop
outsl
in
cmp
stos
adc
mov
or
push
cmc
stos
sbb
dec
iret
sub
xchg
gs
jp
jnp
out
dec
push
pop
stos
mov
xchg
or
arpl
dec
movb
test
xor
jo
jae
in
xchg
sub
ficompl
pop
std
mov
dec
fistpl
stos
in
in
in
sahf
jne,pt
jge
out
jecxz
fwait
jmp
test
sub
sbbl
dec
mov
pop
arpl
rcrl
and
ljmp
adc
adc
lods
iret
out
stos
sbb
shll
xchg
imul
and
dec
inc
stos
arpl
cli
rcrl
pusha
dec
fdivr
scas
lock
setnp
mov
add
mov
ja
mov
out
mov
repnz
lcall
or
cmpsb
sbb
xchg
cmp
mov
aad
outsl
stos
lods
add
mov
popf
loopne
adc
js
mov
lret
fwait
dec
dec
dec
outsl
scas
lret
pop
xchg
jmp
mov
out
and
xchg
subb
fisttpll
dec
jp
cmp
lods
xchg
adc
jmp
negb
mov
mov
test
cwtl
ljmp
dec
stos
std
rol
aaa
add
pop
mov
mov
jne
movsb
stc
push
loop
shll
negl
add
loop
mov
ret
dec
movsb
movsl
push
cmpl
in
insb
push
adc
int3
cmpsb
cmc
fldcw
fcmovnbe
in
lret
mov
stos
sub
jne
pop
mov
mov
mov
loop
lods
stos
movsl
insl
xor
push
repz
dec
cmpsl
dec
pusha
in
insb
adc
mov
sub
imul
mov
jbe
jns
push
loopne
jno
gs
cmc
add
sub
cmp
popf
cmp
iret
push
addr16
mov
cmp
mov
outsl
push
stos
sbb
push
inc
cli
shrl
push
stos
mov
dec
movsb
imul
pop
shl
stos
popa
mov
inc
lods
stos
and
out
inc
jecxz
add
shrb
pop
jl
dec
stos
inc
cli
mov
adc
ds
testb
jno
mov
sub
pop
pop
outsb
xchg
xor
mov
add
cmp
lcall
stos
adc
xchg
pop
into
xor
movsl
stos
jns
mov
fsubp
and
out
loope
ja
stos
pop
xchg
cli
rorb
lods
fsubrs
mov
enter
loopne
jnp
lcall
jge
xchg
sbb
in
push
mov
daa
push
jne
adc
lahf
lods
xchg
sarb
fsubr
sbb
in
mov
aam
leave
lahf
mov
mov
sub
rorb
inc
mov
xchg
lret
sub
stos
sub
mov
iret
mov
cmpsl
and
out
test
lcall
stos
imul
add
pusha
lods
mov
cmp
xchg
leave
loop
stos
pop
in
and
out
xor
stos
jg
pop
fildll
add
cmp
rcll
xchg
stc
insb
push
fisubrs
inc
pop
dec
adc
mov
aad
sbb
cwtl
inc
sub
cmpsl
movsl
mov
loopne
sub
mov
lock
lods
shll
add
jmp
xlat
ja
stos
xor
push
mov
sti
sbb
cmp
in
int
stos
xchg
out
cmp
mov
icebp
xor
stos
movsl
in
jmp
stos
jb
arpl
xchg
jg
sub
cltd
scas
cmpsl
subl
out
and
stos
add
stos
mov
fdivp
mul
iret
xchg
stos
mov
lds
cltd
jle
arpl
daa
or
stos
in
add
inc
lods
sbb
jge
inc
mulb
adc
inc
dec
jae
add
pop
shl
outsl
cltd
xchg
mov
leave
jnp
and
xor
cmp
cli
stos
iret
lods
or
in
sub
insb
data16
stos
cltd
jmp
fwait
dec
orl
add
js
loopne
stos
dec
outsb
jp
xchg
jl
es
imul
lret
xchg
jmp
xchg
mov
scas
fwait
mov
xorb
in
dec
ret
imul
sub
stos
xchg
pop
cwtl
and
pop
addr16
aas
es
arpl
nop
cmc
pop
jmp
pop
mov
arpl
dec
pop
stos
mov
rolb
pop
call
bound
aas
push
inc
call
jmp
into
iret
mov
or
push
adc
add
jg
dec
or
subb
mov
mov
xor
xchg
inc
ret
push
in
into
stos
jp
je,pt
in
stos
aad
inc
js
insl
idivb
stos
pop
stos
in
out
mov
pop
stos
push
pop
sbb
adc
add
jg
mov
xchg
push
and
xchg
xchg
and
mov
pop
cmp
into
fildll
call
fcomi
lock
test
xor
inc
xchg
call
stos
jge
nop
movsl
add
cld
das
ret
stos
out
scas
in
pop
jmp
pop
mov
xchg
sar
cld
xchg
lock
stos
or
dec
mov
mov
dec
sbb
stos
imul
dec
pusha
and
jo
mov
movsb
daa
mov
cld
xchg
data16
std
xchg
mov
es
popa
pop
add
arpl
add
sub
out
sbb
push
push
int3
subl
stos
xchg
test
sti
stos
inc
push
sbb
lock
dec
daa
jmp
aad
mov
addl
jo
addr16
dec
lcall
jp
or
in
stos
pop
push
aad
dec
jmp
adc
push
testb
stos
mov
mov
xlat
mov
pop
stos
stc
adc
clc
rorb
lret
xchg
xor
ret
jge
imul
ljmp
incl
arpl
shlb
push
shrb
cmpsb
jmp
push
test
pusha
xor
ds
push
push
loope
js
mov
fildll
movsb
out
jle
imul
pop
cmp
pop
stos
push
sbb
push
stos
and
push
sbb
call
cltd
jo
in
dec
stos
lock
add
imul
push
inc
sub
es
or
xchg
sbb
cmpsl
stos
ljmp
pushf
stos
jg
mov
jb
test
xor
adc
test
scas
pop
rclb
aad
andl
aaa
sti
xlat
nop
fdivp
stos
test
loop
out
mov
clc
inc
and
inc
iret
stos
les
daa
sub
mov
call
sbb
jecxz
inc
lock
in
hlt
pop
mov
ret
lcall
pop
push
je
dec
pop
lea
pop
pusha
sbb
fwait
and
push
out
stos
fiaddl
stos
fwait
test
mov
daa
inc
jl
in
jne
ljmp
test
and
mov
rclb
mov
jns
mov
stos
sub
dec
es
cmp
imul
jbe
movsb
adc
cmp
mov
shrl
les
adc
inc
and
pop
cmp
mov
arpl
push
mov
xor
adc
cmp
jecxz
mov
movsb
imul
jbe
dec
test
push
mov
mov
mov
push
notb
pop
cmpl
mov
xor
and
xchg
test
stos
and
dec
aaa
cmc
fwait
stos
sub
pop
fisubrl
in
insb
out
stos
jmp
xchg
jg
stos
in
repz
inc
inc
imul
enter
xchg
sub
and
xchg
xlat
mov
mov
mov
stos
cli
jae
jmp
dec
in
les
in
je
stos
repnz
aam
dec
push
aad
data16
mov
in
lds
mov
xor
stos
push
inc
xor
ds
mov
popa
iret
nopl
cmpsb
stos
mov
dec
loopne
push
mov
mov
aam
rclb
stos
xor
imul
jge
scas
mov
lods
test
adc
xchg
divl
scas
stos
cwtl
lret
push
in
repnz
jno
adc
stos
xchg
jae
push
and
jge
or
fwait
stos
and
dec
in
push
lret
add
lret
ret
jns
xchg
loopne
lea
loope
lods
adc
push
pusha
adc
arpl
js
mov
jl
jo
jb
add
in
sarb
pop
lods
das
fwait
in
pop
lock
mov
sbb
mov
stos
sarl
sahf
ljmp
mov
add
ret
jo
and
daa
xchg
cmc
inc
dec
mov
pushf
stos
das
xor
and
aas
stos
mov
fcoml
test
loop
cmp
arpl
jns
xchg
and
divb
add
lcall
lcall
test
dec
int3
sub
pop
stos
insl
popf
sti
jle
push
shrl
xchg
loopne
stos
std
fimuls
outsb
stos
xchg
mov
rclb
inc
test
fisubrl
jns
rorb
stos
pop
cmc
out
stos
dec
inc
stos
jb
cmp
push
or
ss
fildl
dec
fldenv
stos
and
mov
adc
icebp
or
sbb
je
pop
adc
and
inc
in
stos
jae
imul
mov
xchg
test
enter
xchg
cld
xlat
sbb
mov
push
scas
xlat
insl
or
xchg
sbb
stos
imul
movl
mov
lret
fucomip
stos
xor
fdiv
add
push
jmp
ss
out
stos
jmp
mov
sbb
rep
or
mov
rcr
lret
int3
or
pushf
popf
popl
xchg
pop
in
mov
cmp
sub
and
sti
mov
jnp
fwait
in
mov
mov
stos
scas
mov
imul
stos
popf
rcrb
fistl
stc
add
pushf
push
les
cmp
mov
add
mov
jbe
stos
lods
outsl
andb
inc
hlt
daa
sub
mov
jo
stos
mov
lcall
cmpsb
roll
mov
rcr
std
lahf
daa
lods
add
mov
add
push
out
xchg
push
out
lods
out
cltd
pop
arpl
scas
test
dec
sub
sub
fisttpll
xchg
jecxz,pt
pop
stos
cmpb
mov
arpl
rcll
insb
movsb
fwait
fwait
outsl
dec
and
stos
cmp
jnp
mov
outsb
adc
jg
inc
pop
loop
mov
loopne
stos
cld
push
jo
xchg
xor
stos
ret
sub
enter
stos
jl
or
xchg
jo
pop
mov
or
test
das
push
rcll
xor
movsl
orl
jmp
stos
bound
ss
stos
mov
push
jb
stos
jo
dec
loopne
frstor
mov
mov
loop
daa
sbb
mov
stos
stos
push
sub
push
add
add
mov
outsl
jmp
dec
dec
fs
xlat
fistl
les
scas
jns
pushf
jmp
popa
mov
divb
and
sahf
lea
incl
popf
sub
sbb
pop
std
stos
hlt
arpl
mov
ret
stos
push
shll
jl
lcall
inc
call
sub
in
das
push
int3
push
jmp
leave
cmp
cwtl
arpl
lods
movsb
jg
fxch
andl
inc
gs
xchg
cmp
adc
lods
xorl
push
xchg
lret
mov
stos
sbb
insb
pop
lahf
mov
push
imul
out
stos
rcl
dec
movups
xchg
in
outsl
sub
pop
adc
xor
fisubrl
pusha
mov
movsl
xchg
adc
jne
push
pop
jmp
lret
sbbb
pop
push
push
cmp
mov
leave
gs
out
mov
test
arpl
xadd
stos
xchg
push
mov
ja
shll
cmc
mov
xchg
repnz
sub
cld
sbb
stos
xlat
mov
dec
mov
lea
jp
jmp
sbb
outsb
cld
lods
gs
lock
stos
std
cmp
mov
jne
adc
jmp
mov
dec
add
mov
imul
stos
in
mov
scas
stos
imul
js
outsl
fwait
in
ret
add
stc
push
stos
inc
mov
jns
mov
stos
lcall
enter
fs
std
adc
stos
sub
gs
int
sub
iret
xchg
sti
nop
divl
cs
push
loop
lret
arpl
push
dec
or
in
push
repz
push
test
scas
pop
mov
or
jo
xchg
lods
xor
sbb
cli
lret
mov
in
push
test
push
or
sub
imulb
mov
aas
out
lret
or
mov
sub
stos
xorl
pop
ja
dec
jmp
cmp
std
das
pop
cmp
stos
int3
iret
inc
mov
stos
ja
lods
sti
les
cmpsl
dec
loope
mov
sub
cmp
cmp
ret
stos
inc
xchg
push
xor
jb
cmpsl
stos
adc
int
rcrb
mov
lcall
add
aam
pusha
pop
in
pop
rcrb
stos
push
xchg
xor
cmpsb
stos
std
mov
xchg
stos
cmpsl
adc
dec
mov
and
scas
push
imul
es
movsl
imul
mov
pop
hlt
jno
mov
mov
mov
add
mov
lret
adc
lret
push
rcl
movsb
add
stos
lds
or
je
ljmp
loope
and
xchg
stos
addb
add
notl
pop
lahf
ret
cmp
enter
sbb
fdivs
bound
cmp
fsubrl
push
jge
lea
loope
xchg
sub
mov
mov
sbb
lcall
aaa
pop
xchg
stos
hlt
mov
scas
push
lock
stos
ret
icebp
mov
xchg
xchg
or
add
mov
ljmp
or
xor
and
shl
lea
imull
add
mov
scas
mov
enter
push
aam
jge
imul
cwtl
stos
sahf
ja
pop
pop
lods
dec
or
aas
add
jb
and
sbb
orl
add
js
test
arpl
mov
lcall
das
mov
into
xor
sub
inc
jne
sub
cmp
cmpsb
les
je
mov
mov
mov
push
and
aas
insb
gs
repz
inc
sarl
mov
mov
xchg
xlat
push
sub
imul
sbb
jmp
mov
pop
and
adc
stos
es
stos
add
stos
adc
cmc
mov
stos
in
xchg
ret
enter
stos
sub
mov
xchg
popa
imul
xor
lods
mov
mov
xor
mov
stos
shr
out
fsub
int3
push
stos
inc
in
sub
or
stos
aaa
push
or
lahf
outsb
stos
clc
fwait
mov
and
mov
mov
jp
mov
add
int3
subb
sarl
push
inc
or
outsl
insb
ret
clc
in
xchg
addb
fs
arpl
pop
in
aas
iret
cmp
stos
pop
push
rol
jl,pt
daa
lret
push
sti
or
test
cmpsb
in
ljmp
fs
hlt
out
stos
mov
push
cmp
xor
fsubrl
push
stos
xor
ljmp
hlt
aam
aad
sub
stos
ret
mov
jecxz
loop
pop
adc
scas
pop
and
stos
mov
cmp
pop
popf
xchg
stos
dec
dec
test
rcrl
test
or
adc
insl
push
xchg
clc
loop
mov
inc
sbbl
int3
js
stos
mov
mov
push
cld
dec
fmuls
scas
stos
bound
rorb
in
stos
jmp
test
mov
inc
cmp
pop
testl
sahf
mov
inc
dec
leave
dec
and
and
adc
jle
sbb
adc
push
push
cld
cmp
xchg
xor
mov
loop
lock
push
adc
pop
stos
add
dec
repz
stos
jl
subb
adc
mov
dec
mov
stos
xchg
inc
xor
stos
sbb
movsb
jbe
cmp
or
stos
fnstcw
and
xchg
inc
stos
push
mov
push
in
cltd
daa
mov
outsl
push
adcb
in
or
xor
lret
insl
stos
popf
sbb
clc
fiaddl
nop
adc
inc
pop
aam
stos
iret
cltd
add
in
ret
or
ret
mov
movsb
xchg
in
pop
mov
outsl
push
cmpsb
aaa
cmp
mov
push
jle
sub
add
jp
xor
adc
and
xlat
sbb
out
sbb
jp
mov
add
xchg
jl
subl
lret
out
rcrb
cmc
push
in
andl
and
inc
daa
bound
inc
call
inc
stos
sbb
inc
or
mov
sarl
loope
sbb
rorb
test
jmp
movsb
movsb
xchg
push
in
xor
mov
adc
pop
in
adc
stos
cmp
xor
movsb
cmp
sbb
add
xchg
jp
jmp
mov
mov
pop
movsb
decb
loope
stos
xor
icebp
sti
rclb
iret
xor
mov
mov
enter
addr16
xchg
stos
xchg
jo
dec
bound
shrl
xor
outsb
mov
out
popf
repnz
js
rorl
stos
aas
xchg
mov
imul
stos
push
dec
mov
fisttpl
jo
lods
jae
xor
stos
icebp
push
ficoml
jle
stos
pushf
scas
insl
mov
cmp
lahf
in
jnp
xchg
mov
lea
xor
lret
adcl
xor
mov
into
cmp
lods
pop
es
jl
or
or
out
int
adc
pop
cmp
aaa
stos
mov
lds
add
jp
dec
adc
daa
dec
faddp
cmp
mov
jbe
insb
loop
imul
mov
xchg
pop
ljmp
sbb
fisubrs
and
push
sbb
hlt
lods
leave
push
dec
pusha
stos
std
inc
inc
cmc
ss
aad
adc
or
cltd
and
stos
aas
sub
cwtl
jl
aaa
shrl
push
out
adc
nop
out
std
stos
out
and
in
fcoml
stc
inc
push
mov
pop
loop
icebp
mov
pop
sub
dec
pusha
inc
stos
sub
push
sub
imul
iret
insb
fildl
rep
mov
stos
push
unpckhps
mov
mov
mov
jo
mov
sub
ss
xchg
cmp
push
jg
mov
stos
push
adc
pushf
jl
adc
lods
mov
roll
push
ficomps
xchg
stos
repnz
ds
imull
out
dec
push
into
sbb
iret
mov
sbb
insb
rorb
cld
and
pop
in
add
mov
imul
stos
and
lds
stos
lret
mov
sub
mov
jbe
imul
mov
xchg
bound
rcll
stos
in
repz
xor
or
stos
loopne
fwait
add
adc
loop
mov
or
sbb
sar
jae
push
mov
jmp
sbb
stos
call
dec
outsl
jo
pop
fldcw
xchg
jmp
inc
add
aad
lea
adc
jnp
mov
xor
pop
loopne
setle
mov
enter
cli
push
push
scas
je
aas
push
jg
and
jne
mov
mov
adc
xchg
leave
popa
arpl
mov
enter
stos
stc
pop
sti
lods
lret
ret
stos
pop
movsb
push
es
pop
pop
stos
addl
insl
jnp
add
aad
mov
mov
cmp
in
shrl
pushw
jmp
pusha
cmp
adcb
daa
insb
iret
mov
mov
sahf
fadds
mov
dec
stos
or
cmp
imul
add
add
mov
jnp
js
shl
lret
push
insl
mov
sbb
leave
out
or
stos
or
mov
jb
out
repz
cmp
jmp
in
loopne
pop
idivb
mov
cmp
xor
shll
xchg
lcall
sbb
scas
push
adc
jmp
cmp
hlt
inc
mov
repnz
push
adc
mov
in
jne
mov
lret
rcrl
stos
ja
push
jne
sbb
lock
and
mov
lds
jle
test
xchg
fs
mov
push
outsl
push
int
fsubrl
cmp
mov
in
xor
lcall
add
js
push
stos
fsts
mulb
or
stos
jmp
sbb
jae
push
int
stos
aam
or
and
sbb
into
pop
fistpl
jns
dec
mov
pop
sbb
jbe
cli
fisubs
mov
sahf
jae
rorl
scas
es
lcall
aad
stos
movsl
jno
test
out
push
push
xchg
fimuls
dec
push
mov
ljmp
jp
int3
add
into
repnz
out
lock
enter
popf
adc
mov
cmp
stos
stos
jno
cmp
stos
cmpsb
into
out
jmp
mov
sahf
mov
leave
dec
and
mov
stos
in
lea
cmp
dec
outsb
aam
adc
jno
mov
add
sub
repz
jmp
data16
fdivp
mov
shrb
roll
scas
bound
cmpsb
sub
push
in
and
clc
add
ret
fimull
test
sti
xchg
mov
adc
ret
inc
inc
scas
mov
sub
cmp
stos
xchg
bound
add
xchg
mov
aad
stos
mov
inc
mov
cmc
leave
or
pop
sti
mov
dec
aas
sub
mov
cld
mov
shll
stos
mov
adc
lahf
arpl
inc
dec
jae
ja
push
imul
jo
jecxz
nop
stc
icebp
xchg
sbb
stos
xor
dec
outsl
stos
popa
adc
adc
lods
pop
ret
mov
stos
lea
jmp
ljmp
cmpsl
pop
xchg
xor
aaa
out
adc
stos
in
push
or
xor
in
rorb
fidivl
sbb
enter
fsts
mov
cltd
inc
mov
mov
and
negl
mov
popl
dec
and
add
sub
stos
xchg
cmpsb
dec
pop
sahf
pop
jb
jmp
push
fisttpll
xchg
lods
out
iret
mov
lods
and
push
dec
cmpsl
jns
mov
sub
stos
hlt
jecxz
sbb
aas
and
xchg
jne
loopne
mov
lret
shlb
aad
cld
xlat
stos
add
xchg
pop
push
lods
stos
sahf
mov
xor
test
push
cmp
mov
fwait
sub
stos
aaa
push
roll
dec
cs
ret
xchg
out
add
cs
ret
cwtl
or
mov
inc
and
jle
bound
mov
adc
int
or
loop
rolb
jg
arpl
xor
clc
repz
mov
inc
and
and
sbb
in
sbb
mov
cmpsl
loopne
mov
into
jecxz
mov
aam
in
stos
pop
add
fsubrs
pop
inc
sbb
inc
cmp
std
lods
jecxz
push
stos
outsb
fmull
leave
push
stos
mov
jle
test
jmp
or
addr16
mov
lahf
lods
scas
fst
adc
push
jno
stos
mov
fsts
push
mov
stc
movsb
xchg
stos
adc
dec
xchg
mov
add
js
fs
mov
dec
lahf
stos
mov
jge
ret
xchg
insb
jmp
sti
push
clc
jbe
and
out
test
lds
stos
andl
stos
sar
cmc
pop
push
test
lea
or
pop
lret
into
aas
movsb
mov
fwait
into
iret
fnstenv
mov
jbe
test
gs
fiadds
scas
jnp
scas
hlt
push
daa
stos
clc
ret
and
and
mov
je
js
push
push
orl
cli
sti
stos
mov
cmpsb
test
and
divl
fisttpl
bound
popa
jo
mov
lods
lret
ds
jne
dec
ja
outsb
incb
pop
pop
stos
ja
xor
leave
lods
mov
cmp
adcb
pop
je
or
stos
jno
rorb
mull
mov
aaa
mov
pop
jle
fwait
punpcklbw
imul
cmc
sub
cmp
fldcw
cmp
fwait
add
inc
stos
icebp
cmp
shrl
xorb
mov
push
jg
hlt
ljmp
mov
xchg
sbb
pop
ja
cmpb
adc
call
adc
or
mov
sbbl
or
popa
dec
sub
xchg
cmp
mov
fsubs
stos
adc
out
call
stos
sub
adcb
mov
rorl
mov
mov
stos
adc
leave
mov
cmp
jg
out
scas
pop
jne
loopne
jno
pop
lods
add
sub
imul
std
scas
jns
push
lock
mov
dec
xchg
add
lods
push
inc
mov
dec
xor
pop
inc
sbb
stos
jp
hlt
leave
repnz
or
pop
imul
add
incb
mov
sub
movsb
stos
test
sbb
imul
cmp
xchg
movsb
jb
stos
jge
inc
andb
stos
sti
js
std
cmp
icebp
mov
and
push
xchg
stos
pop
out
shrb
push
jmp
fisubrl
xorl
cltd
stos
or
fistps
mov
mov
out
push
cmp
pop
lods
leave
mov
jns
lock
jg
movsl
imul
mov
adc
cmp
push
repnz
sub
adc
jl
in
mov
call
push
addl
stos
ss
dec
sbb
incl
or
int3
or
mov
sub
stos
ficoml
inc
jmp
clc
call
dec
aas
mov
pop
out
cwtl
adc
imul
xlat
iret
sub
negl
jge
sbb
mov
and
mov
xchg
lcall
mov
sbb
push
cmp
xchg
jg
sbb
inc
stos
testb
cmp
stos
lods
add
repz
stos
aas
sbb
push
stos
jl
je
ja
pushf
mov
push
movsl
add
dec
cli
jg
mov
mov
lret
in
and
cld
xchg
inc
das
test
mov
bts
addb
arpl
or
push
mov
xchg
mov
stos
and
shlb
mov
and
xchg
xchg
addr16
xor
das
lcall
jne
pop
mov
adc
ret
inc
jmp
mov
out
cwtl
subl
cmp
or
subl
add
pop
call
mov
xchg
jmp
lea
xor
mov
in
je
jp
test
cmpsb
stos
jg
push
idiv
xchg
mov
pop
stc
lods
xchg
movsb
movl
inc
and
or
outsl
iret
pop
mov
je
cmp
pop
dec
fiaddl
or
jnp
jmp
std
scas
or
cmp
jae
mov
mov
dec
add
int
mov
fs
sbb
pop
stos
sbb
sbb
mov
dec
push
cli
dec
sbb
movsl
aad
ss
add
stos
dec
in
scas
mov
mov
mov
mov
imul
cmp
inc
je
and
sub
push
jbe
sbb
sbb
mov
mov
popf
pusha
push
clc
or
or
mov
push
mov
loopne
test
mov
add
or
cmp
scas
jns
enter
bound
sarl
ja
mov
mov
or
mov
test
stos
testl
clc
aam
ret
cmp
inc
scas
stos
in
mov
sub
stc
cmpsb
or
add
insb
dec
iret
stos
hlt
push
cltd
push
ja
stos
jle
in
lods
sub
stos
xchg
and
pop
sub
test
sahf
pop
pusha
arpl
sub
jecxz
fldcw
add
xor
in
call
sbb
push
inc
sub
or
pop
mov
cmp
mov
mov
popf
push
dec
outsb
lds
or
lret
andl
stos
test
sti
push
loopne
sbb
xchg
sbb
bound
mov
out
sub
pop
stos
jge
xor
int
hlt
cmpsl
stos
cmp
mov
push
and
push
mov
or
or
fs
outsb
into
stos
cmp
notl
push
cmp
in
dec
pop
cmp
cmp
pop
add
popa
pushf
mov
fsubrs
cmpsb
insl
loop
fsubrl
lcall
mov
stos
sub
in
mov
xor
rclb
push
ficoms
arpl
push
into
xor
fnsave
scas
push
xchg
stos
icebp
lea
addr16
cwtl
push
xchg
int
dec
imul
cmp
xchg
sbb
stos
cli
mov
mov
xchg
cmc
aas
mov
ljmp
sti
xor
movsl
mov
dec
stos
mov
adc
lret
mov
adc
pop
mov
inc
inc
or
xor
xchg
stos
mov
jns
stos
nop
jecxz
aad
mov
imul
jle
dec
insl
and
shr
sti
xchg
test
mov
lea
pop
mov
push
lahf
aas
rol
loop
ljmp
mov
inc
xlat
loope
add
pusha
xchg
loop
clc
or
and
ljmp
sbb
mov
das
sub
stos
or
pusha
xchg
aad
stos
clc
jmp
jl
ljmp
or
hlt
cmp
addr16
testl
push
fcmove
cltd
jnp
stos
xor
push
popf
gs
mov
pop
inc
dec
sbb
stos
add
and
mov
mov
lods
hlt
subb
stos
xchg
adc
ljmp
inc
jge
imul
stos
push
pop
jnp
adc
mov
fmulp
dec
or
stos
xchg
test
xchg
mov
frstor
sbb
mov
inc
jbe
faddl
mov
xchg
popa
fldcw
aaa
xchg
xchg
or
mov
mov
push
out
jae
lds
ja
mov
out
xchg
stos
bound
jno
movsb
fcmovne
xor
sub
add
xchg
fwait
imull
cmpsl
aas
dec
les
xor
sub
mov
clc
xor
or
and
leave
pop
stos
les
and
xor
lods
jp
lahf
or
dec
mov
aaa
pop
fisttpll
into
addr16
xor
jb
in
sub
imul
faddl
jbe
stos
test
mov
cmp
push
add
neg
imul
cmpsl
mov
inc
andb
mov
or
sti
xchg
js
and
stos
cltd
inc
cmc
dec
adc
loope
stos
hlt
ja
in
inc
mov
stos
test
mov
daa
stos
hlt
push
jns
stos
subl
stos
mov
jge
jo
clc
sub
in
mov
push
jle
loope
sub
insl
dec
mov
in
stos
cmp
inc
stc
bound
iret
mov
mov
mov
hlt
xor
jp
lods
out
mov
das
loop
out
jns
xchg
sub
fadd
mov
scas
adc
xchg
add
icebp
stos
out
inc
adc
ficoml
in
stos
daa
mov
mov
stos
mov
aas
stc
dec
addr16
int3
bound
sbb
stos
inc
ret
xchg
push
adc
daa
ret
xor
mov
je
insl
stos
jl
cli
and
mov
divl
add
mov
dec
push
mov
das
in
mov
or
cmp
lret
stos
xchg
lods
xor
sub
lock
fs
stos
jmp
pop
or
stos
push
dec
and
lret
stos
leave
jecxz
dec
rcrb
jg
jno
inc
or
and
pop
mov
psubw
out
out
into
stos
inc
inc
adc
xchg
and
mov
cmp
inc
mov
mov
ljmp
addr16
ja
lods
jl
adc
ret
xchg
pushf
les
sti
xchg
cmp
fistps
test
inc
shrb
adc
pop
repnz
mov
scas
add
icebp
das
inc
addr16
or
xlat
mov
push
stos
mov
int3
xor
hlt
inc
aad
std
jmp
stos
jmp
inc
push
lea
cmp
in
push
repnz
xor
jge
push
imul
jmp
cmpsb
sub
lea
push
fwait
into
mov
jnp
mov
pop
or
int3
movsl
rcr
xchg
repz
mov
mov
pop
adc
testb
in
xchg
pop
mov
outsl
and
fwait
jp
stos
clc
in
sbb
pusha
mov
int3
fsubrl
xor
pop
sub
fwait
mov
mov
adc
push
mov
gs
push
pop
stos
fstp
xor
pop
xchg
stos
gs
add
or
xor
pop
scas
xchg
insb
push
pop
jno
pop
jecxz
jae
mov
mov
pop
in
inc
mov
jbe
mov
fisubs
xchg
dec
loop
xchg
test
aaa
loope
dec
jp
sbb
sub
mov
sbb
pop
cmp
imul
ret
inc
pusha
sbb
rorb
mov
cwtl
popf
xchg
mov
push
loop
mov
adc
add
mov
cmovp
or
pop
imul
sub
stos
negl
mov
in
stos
or
in
stos
loope
mov
stos
xor
repz
in
xchg
dec
xchg
pushf
stos
mov
cmp
shrl
sbb
mov
sub
imul
test
xchg
mov
fwait
dec
jl
or
cmp
mov
add
mov
rorb
lcall
scas
jno
mov
lcall
mov
push
out
jns
ficompl
and
lcall
subb
jnp
outsb
fisttps
dec
pop
movsb
ds
pop
rep
out
or
lret
in
lods
lcall
adc
push
xor
push
stos
popa
and
add
xchg
and
push
stos
cmp
dec
shll
iret
hlt
stos
adc
mov
test
ja
stos
in
or
imul
add
nop
stos
pop
adc
jecxz
push
adc
stos
fwait
mov
dec
gs
mov
sub
jae
push
xor
push
stos
jge
std
xor
cwtl
lock
cmc
jg
rcl
sahf
fs
stos
mov
data16
arpl
add
sub
movsl
inc
jl
lcall
movsl
test
dec
stos
cmpsb
aad
nop
and
jo
mov
jle
push
movsl
arpl
fsubl
and
out
aad
andl
subl
imul
insb
jg
mov
lock
mov
jmp
cmc
test
add
test
sbb
in
cmc
pop
stos
pop
dec
mov
add
nop
stos
fisubrl
aas
mov
stos
ja
movsl
dec
sahf
xchg
pop
push
stos
mov
pop
mov
enter
orl
mov
stos
pop
xor
sahf
jno
jo
push
ret
add
std
iret
xchg
bound
test
fwait
stos
inc
mov
dec
xor
xor
jns
adc
mov
stos
scas
push
ds
xor
stos
rolb
lock
cmp
dec
stos
lea
fisttpll
push
adc
sub
mov
jle
out
mov
mov
xor
inc
fisttpll
fsubr
cmp
jle
mov
xchg
stos
sub
or
adc
sbb
stos
inc
jecxz
mov
arpl
dec
fwait
xchg
jmp
pop
mov
mov
dec
stos
repnz
test
jmp
stos
mov
adc
adc
mov
dec
push
insl
adc
popa
subl
mov
mov
std
xlat
cvtpi2ps
fisttps
xchg
stos
mov
and
xchg
lods
mov
ds
mov
stos
sbb
adc
stos
dec
es
jb
push
stos
ljmp
mov
add
push
mov
pop
mov
mov
cmp
pop
xchg
lods
sbb
mov
bound
leave
ja
jp
cmp
pop
int
xlat
dec
jne
lcall
add
movsb
cld
xor
add
cli
shl
andl
mov
std
xor
jmp
or
add
inc
jbe
jo
and
mov
and
nopl
dec
lahf
stos
cld
jl
cs
orl
pop
lds
aam
aas
jbe
stos
push
fsubrl
mov
addr16
stos
jecxz
cmc
add
movsb
stos
pop
icebp
add
add
xchg
int
dec
stos
push
mov
dec
ret
stos
aad
xor
pop
in
imul
and
sahf
inc
outsl
pop
aam
int
imul
or
pushf
cmp
imul
ljmp
mov
mov
jl
into
in
sbbl
mov
or
push
sahf
dec
negl
test
lock
mov
incb
cltd
mov
mov
xchg
mov
push
push
dec
lret
rcrl
xor
mov
or
mov
adc
daa
test
mov
iret
scas
addr16
xor
jmp
sti
xchg
pushf
ret
pop
cmp
adc
in
sarl
fistpl
sub
popa
add
data16
ljmp
aam
subb
sti
inc
loop
push
scas
out
ljmp
xor
repnz
fs
sbb
push
or
push
lods
ret
stc
popf
or
rorb
aad
adc
daa
add
push
inc
movsb
xchg
data16
cmpsb
stos
and
push
ss
sti
shlb
sbb
xrstors
or
repnz
lret
dec
sub
lret
shrb
lahf
dec
cmp
cld
xor
pushf
stos
sbb
ds
jae
stos
cmp
mov
sub
add
ljmp
shll
pop
lods
loop
nop
jge
stos
jo
inc
or
cmp
xlat
xchg
imul
stos
sbb
add
stos
aas
xor
xchg
add
cwtl
stos
add
sarb
mov
stos
das
xor
push
xchg
jle
pop
stos
push
jo
inc
adc
cmc
stos
dec
jno
sbb
stos
or
shll
iret
or
mov
push
jae
loopne
dec
dec
mov
jmp
es
popf
jmp
cmp
ss
cli
rcrb
cs
xor
mov
popa
ds
or
inc
sbb
stos
cmp
enter
xor
lods
clc
xor
mov
cmc
cld
repnz
inc
lods
pop
inc
inc
imul
je
les
leave
cmp
push
jne
and
stos
xchg
fidivrl
dec
stos
push
ret
add
lret
xchg
nop
aaa
stos
push
sub
lods
movsb
and
mov
mov
push
insb
mov
ret
stos
cmp
and
arpl
dec
ljmp
loope
jecxz
cltd
pop
and
xchg
xor
cmpsl
cmp
stos
rclb
xchg
mov
pushf
dec
sti
stos
pop
add
or
or
pop
stos
stos
xchg
dec
push
cmp
jne
clc
xchg
stc
mov
stos
nop
lds
imulb
stos
sarl
inc
lret
addl
imul
mov
adc
stos
lock
stc
lods
dec
adc
jae
sub
stos
fsubs
cmpsl
xor
mov
out
les
imul
clc
stos
js
push
pusha
add
stos
sbb
sbb
imul
aaa
push
fnstsw
jno
pop
fwait
ja
int
mov
adcb
add
xor
dec
movsb
ja
jle
call
loop
aas
sbb
jne
mov
cmp
sub
sbb
jb
stos
call
in
in
imul
pop
mov
mov
jb
pop
mov
div
push
or
dec
jle
addr16
push
cmp
sbb
xchg
cltd
cmpsb
addr16
jnp
jae
push
iret
call
jl
cs
add
punpckhdq
push
sbb
lret
int
imul
aas
ret
mov
xor
xor
shl
cwtl
call
mov
and
test
cmpsb
stos
push
into
mov
mov
stos
push
fsub
cmpsl
mov
pop
push
mov
xchg
or
addr16
enter
or
rcrl
int
dec
mov
aad
aas
movsb
and
push
or
test
cmp
test
scas
mov
stos
into
in
pcmpeqb
or
rolb
add
out
mov
jl
ficomps
outsl
cmovg
xchg
mov
ja
sub
sbb
xchg
jo
les
rorb
mov
stos
push
dec
mov
sub
sub
in
mov
out
shlb
sub
rep
mov
gs
and
xchg
addr16
fisubrl
in
xor
in
rclb
sub
stos
test
aad
mov
mov
jmp
sbb
jmp
mov
les
mov
inc
push
mov
sub
adc
pop
ljmp
sahf
shr
xchg
stos
test
andl
adc
mov
pop
fwait
cli
xadd
inc
and
sbb
mov
cwtl
xchg
mov
daa
mov
push
or
mov
mov
jp
add
cmpsb
mov
mov
fidivrs
pusha
mov
pop
pop
sub
mov
stos
aam
xchg
faddl
andb
clc
cmc
mov
fsubr
xor
pop
imul
subl
notl
stos
inc
in
sub
fcmovu
je
stos
mov
imul
jmp
repnz
add
adc
pop
adc
push
xor
mov
pop
ljmp
mov
sub
cmp
pop
stos
jbe
push
leavew
stos
xchg
sarl
mov
aam
sbb
dec
xor
stos
add
div
imul
mov
mov
mulb
aas
pushf
insl
pop
jbe
mov
gs
movsb
add
mov
imul
iret
mov
stos
rclb
adc
stos
sub
jmp
stc
out
cld
insb
and
lods
icebp
testb
shrb
mov
cmp
inc
stos
stc
lret
clc
addl
nop
mov
push
inc
pop
loopne
add
sbb
cmp
notb
cmp
push
inc
xor
lods
sub
stos
mov
add
stos
push
rcll
stos
inc
mov
ret
xchg
fbstp
data16
cmp
stos
mov
inc
fldt
adc
sbb
sbb
add
aad
jbe
out
adc
fstpl
push
and
add
mov
add
std
cmp
sub
mov
ret
adc
dec
and
imul
xrelease
mov
out
pop
xchg
mov
test
push
dec
sbb
stos
fistps
out
mov
inc
cmp
add
mov
pusha
inc
or
fs
int3
sbb
jb
jmp
lods
sbb
or
mov
stos
fmuls
jno
js
mov
stos
xlat
adc
bound
dec
stos
add
and
test
inc
xor
ret
mov
push
fsubrl
loope
insb
pop
and
lods
xor
rclb
imul
nop
mov
mov
sub
lods
stos
fwait
lret
je
adcl
mov
ret
cld
jb
push
sahf
sub
adc
stc
adcl
ficoms
movl
xchg
int3
push
dec
cmpsb
movsl
mov
sbb
push
arpl
test
stos
aaa
into
pop
inc
add
or
and
jbe
pop
fmull
dec
nopl
stos
js
pushf
je
mov
pop
stos
dec
in
inc
push
mov
and
test
fimull
inc
shrl
dec
sbb
lea
in
pop
cld
mov
fs
jg
push
sbb
pop
int
push
mov
sbb
int3
ret
js
ror
ljmp
pop
cwtl
cmp
dec
sub
stos
sbb
cmpsl
inc
lock
pop
push
popf
xor
clc
jmp
stos
cmpsl
out
mov
adc
std
aas
imul
adc
fisttpll
or
sub
sti
pop
sbb
stos
add
and
stos
test
mov
fidivrl
hlt
mov
test
adc
pop
arpl
jmp
stos
ja
adc
stos
add
push
cmp
mov
or
ds
scas
mov
stos
cmpsl
push
xor
into
inc
pop
arpl
inc
cwtl
pop
inc
das
insb
scas
cmp
jb
ficomps
in
lock
out
or
stos
es
push
jnp
mov
cmc
outsl
cmp
push
mov
adc
jns
push
jge
stos
xchg
sub
and
int
add
in
sub
and
sbb
inc
xor
subl
scas
or
adc
add
xor
push
cwtl
mov
arpl
aaa
mov
ljmp
in
jle
pushf
stos
lods
push
rclb
mov
daa
leave
out
fildl
sbb
xchg
push
movsb
sbb
sub
sahf
stos
mov
ja
push
aaa
push
stos
pushf
mov
mov
mov
add
dec
push
inc
push
mov
mov
insb
std
inc
mov
stos
jecxz
mov
xchg
cmpsb
stos
sub
mov
test
dec
aaa
mov
add
or
cld
pop
sti
mov
addr16
cwtl
rcl
hlt
pop
stos
cmp
in
loop
lods
mov
scas
adc
jmp
stos
out
cs
stos
or
jb
imul
cs
jp,pt
jns
sbb
test
stos
push
std
popf
adc
enter
insl
mov
jge
stos
outsl
and
cli
mov
jne
mov
sbb
xor
xchg
stos
mov
lahf
cmc
xchg
stc
inc
pop
sarb
lcall
or
inc
ds
in
les
sub
js
lds
add
fildll
inc
mov
notb
xchg
or
sbb
fsub
push
imul
push
cmp
stos
adc
inc
jo
sbb
pop
stos
or
inc
mov
mov
stos
adc
in
pop
adc
in
mov
mov
ret
sti
xchg
stos
sbb
lods
std
stos
roll
stos
xor
mov
add
mov
shr
xchg
arpl
xchg
sbb
stos
cmp
lock
cmp
jae
adc
mov
imul
jnp
insb
mov
test
lods
push
xor
fs
sti
push
andl
sub
jl
pushf
stos
in
xchg
mov
add
xchg
jnp
gs
enter
fxch
lcall
imul
sub
xchg
in
dec
add
into
push
jl
cmp
jb
icebp
jp
ja
jns
jmp
push
pop
nop
sarb
pop
cmp
stos
inc
inc
xchg
or
fs
jge
add
stos
dec
add
sahf
stos
cmpsb
mov
pop
cmp
clc
mov
cmc
fnstsw
lods
xor
xor
push
jge
and
sarl
lahf
pop
and
dec
rcll
dec
push
sub
push
cmc
fsubrs
jmp
and
shll
lcall
fsubl
pop
lds
mov
divl
test
outsl
mov
jmp
pop
push
nop
shl
stos
inc
xchg
lds
adc
or
movsb
push
out
mov
mov
jo
movsb
xchg
inc
mov
loop
dec
lds
or
popf
lods
fsts
stos
mov
cltd
pop
mov
test
mov
jmp
cmpsl
xor
sub
daa
lret
mov
xchg
mov
xchg
cmp
pop
test
sub
adc
mov
adc
or
adc
movsl
imul
aad
shll
sub
add
xchg
cmp
decl
dec
scas
bound
dec
and
jle
fwait
adc
imul
stos
dec
lahf
push
js
inc
movsb
inc
jmp
call
xlat
jae
mov
sub
mov
jae
int
cmp
mov
aaa
daa
jge,pt
gs
push
pop
imul
mov
push
stos
inc
pusha
mov
ljmp
cwtl
jg
mull
popf
xchg
fwait
aad
sahf
addr16
stos
ret
stos
jno
xor
daa
cmp
inc
add
xchg
mov
icebp
mov
cmp
push
popa
stos
mov
in
jns
and
daa
dec
push
sbb
stos
or
mov
loopne
scas
test
jno
outsb
mov
test
lret
mov
in
stos
pushw
hlt
stc
mov
jge
dec
mov
enter
xchg
sti
stc
mov
adc
mov
inc
push
cmpsl
loopne
clc
es
lds
add
jnp
addr16
ss
mov
sub
pop
jne
loop
mov
rcll
cmp
mov
sbb
stos
jge
jb
jae
or
daa
sub
imul
scas
mov
daa
cmc
xchg
mov
aaa
lods
ret
dec
pop
and
adc
mov
stos
rorb
mov
fistpll
mov
int
stos
cmp
cld
in
stos
and
call
pusha
adc
sarb
mov
clc
ret
xchg
pop
or
std
adc
cli
in
bts
lret
cmp
inc
stos
into
ret
sbb
adc
or
dec
fisubrl
add
out
push
jecxz
mov
mov
or
xchg
inc
cld
test
push
add
stos
adc
xchg
and
xchg
inc
jge
into
xchg
sbb
lcall
imul
mov
daa
and
ljmp
xchg
nop
jmp
repnz
imul
test
cmp
nop
cwtl
push
in
mov
shlb
push
shl
lods
in
addr16
cmp
xor
fucomip
sbb
mov
xchg
jnp
scas
mov
xchg
and
and
lds
sub
out
stos
add
mov
fwait
outsl
push
aam
pop
pop
stos
push
iret
das
cmp
jo
rcll
add
sub
addr16
xor
add
cs
fldcw
mov
inc
mov
fsubs
pop
mov
lea
jno
mov
push
scas
mov
stos
sbb
push
add
jge
lahf
stos
loope
rclb
mov
imul
xchg
pop
movswl
adc
mov
daa
jmp
mov
jo
mov
aas
cltd
enter
push
lods
test
and
stos
pushf
aaa
jmp
xor
fwait
idiv
xor
icebp
in
pop
pop
mov
pop
or
stos
fidivrs
test
rcrb
cli
or
xor
dec
mov
fsubr
aam
jmp
arpl
pop
scas
ds
cmpb
dec
stos
pop
jo
jl
xchg
stos
outsb
out
js
mov
add
mov
and
test
adc
sti
pushf
mov
stos
push
movsb
daa
mov
sub
jle
sub
ss
cmp
je
or
fdiv
xchg
das
ja
cs
dec
or
sub
fsubrs
ret
cmc
sub
xchg
mov
imul
fistpl
add
imul
cmp
push
stos
inc
mov
mov
mov
xchg
insb
cwtl
test
pop
pop
bound
lret
lods
jle
inc
in
mov
ror
xchg
pop
jno
cmpsl
inc
push
das
subb
icebp
nop
inc
stos
outsb
mov
imul
xchg
sbb
cmp
fcmovbe
xorl
push
cmp
rsm
sub
xchg
adc
dec
push
dec
pop
sub
xchg
adc
dec
mov
call
push
inc
cmp
cmp
stos
push
imul
hlt
cmpsb
outsb
pop
dec
xchg
ljmp
call
fadd
mov
inc
jmp
clc
fstpt
stos
cmp
and
imul
std
sbbb
stos
enter
fdivl
mov
call
stos
adc
js
pop
daa
jns
stos
mov
fbstp
add
stos
loope
xchg
jecxz
clc
cmp
sbb
xchg
push
gs
dec
sub
mov
mov
cmp
push
fidivrs
insl
cmp
or
mov
outsl
inc
xor
scas
bts
ret
xchg
andb
jae
sub
xor
jmp
stos
cmp
daa
bound
cltd
in
rcll
movsl
sub
mov
jmp
leave
and
mov
xchg
jnp
imul
inc
mov
stos
xchg
cmc
xor
pop
xchg
mov
mov
into
repnz
and
outsl
les
and
movsb
stos
mov
adcb
insb
xchg
or
test
inc
in
lret
or
nop
imul
ljmp
jecxz
xchg
push
in
or
cmp
fisubrl
push
inc
or
mov
leave
xor
xchg
inc
jbe
stos
pop
cs
adcl
das
aad
sub
push
sub
lret
or
jecxz
fstp
cmp
add
xchg
mov
cmp
dec
std
sahf
adc
xchg
mov
and
pop
or
jnp
sub
jnp
insl
out
stos
sub
in
mov
jmp
add
es
xor
rorl
imul
stos
addr16
std
cmp
scas
and
jns
aad
cmp
xchg
sbb
stos
repnz
dec
jne
mov
jo
pop
outsl
pop
leave
arpl
outsb
push
adc
stos
xor
add
adc
cmpsb
jne
mov
outsb
popa
stos
imul
aad
stos
pop
stos
loopne
cltd
xchg
rcrb
adc
or
pushf
out
mov
in
push
sbb
inc
xor
jecxz
cmp
imul
push
cltd
xchg
stos
pop
call
pop
lock
rcrl
pop
xorb
je
stos
mov
sbb
imul
test
push
int
pop
sbb
push
inc
fwait
or
or
stos
fidivrl
aaa
mov
jecxz
stos
out
je
xor
mov
fnstcw
mov
xchg
test
stos
and
and
or
or
push
cltd
jecxz
nop
clc
stos
cwtl
xor
shrl
push
je
xchg
add
push
jnp
pop
push
lea
loopne
leave
fsubrl
ja
add
movsb
cwtl
lds
arpl
repz
inc
sub
mov
dec
loop
stos
or
test
mov
rolb
and
daa
xchg
cmp
and
ljmp
fwait
aam
nop
jg
stos
dec
mov
popf
jl
lret
int
mov
sti
clc
sbb
stos
cld
out
pop
rcll
js
cwtl
stos
ret
int
or
push
call
pop
ja
jb
jo
xor
cmp
mov
out
stos
xor
pop
out
stos
lret
xchg
loope
xor
stos
insb
mov
ja
stc
mov
sub
testb
gs
sti
jl
cmp
arpl
in
sub
scas
cli
stos
xchg
add
dec
nop
xor
xor
frstor
sub
fisubrs
jno
mov
inc
xchg
call
pop
pop
inc
push
inc
mov
or
mov
and
imul
movsb
insl
xchg
imul
pop
stos
sbb
mov
bts
ss
imul
stos
xor
mov
stos
mov
and
stc
clc
ficoms
jae
push
int3
ret
stos
mov
inc
jle
jnp
loope
adc
ja
fs
rorb
dec
hlt
jno
pop
test
cs
out
jl
stos
xchg
push
mov
stc
stos
lret
mov
pop
call
xchg
xchg
mov
into
dec
stos
cmc
mov
jne
cmpsl
stos
testb
stos
imul
sbb
stos
dec
nop
arpl
cmp
adc
test
in
push
je
fsubrs
stos
lds
xchg
stos
or
addr16
repz
fmull
jmp
mov
push
pop
pop
test
and
jmp
mov
add
cmpsl
xor
es
bound
testb
les
fistpl
mov
lock
enter
inc
inc
into
dec
or
push
or
fwait
xor
and
test
out
stos
cmc
jns
fwait
ss
or
stos
mov
test
pusha
mov
stos
xchg
fistps
mov
aam
arpl
mov
stos
push
fldenv
mov
stos
sub
pop
icebp
mov
fsubs
jp
mov
stos
addr16
fcmovnu
mov
pusha
addb
repz
stos
or
ret
dec
mov
andl
pop
push
add
cmc
xchg
pop
imul
jb
stos
pushf
sub
dec
push
ss
xchg
in
lods
dec
dec
scas
stos
loop
aad
pop
jae
mov
mov
pop
or
adc
sbb
xchg
mov
stos
xchg
push
imul
lea
jecxz
scas
sahf
cwtl
mov
xlat
pop
rcr
cltd
jbe
xor
and
data16
sti
or
in
cmpsl
jnp
mov
fwait
clc
xchg
dec
test
movsb
add
mov
xchg
scas
xchg
mov
xor
adc
imul
cwtl
ret
dec
jmp
stos
jb
inc
pushf
mov
jae
std
cwtl
mov
fiaddl
lret
push
mov
sbb
stos
cmp
cmc
enter
adc
stos
push
sub
mov
inc
stos
jae
pop
fisubrl
pushf
add
mov
stos
in
ja
mov
pop
dec
stos
dec
inc
xor
fnstcw
or
mov
in
icebp
push
iret
stos
inc
xlat
fcmovnbe
pop
movsb
push
fisubs
pop
test
ss
xchg
add
pop
sub
stos
push
dec
or
stos
xchg
lcall
stos
lock
negl
cmp
test
or
jnp
mov
imul
push
notb
pop
sbbb
andb
stos
inc
idiv
push
dec
addr16
hlt
pop
sbb
or
mov
imul
and
xchg
adc
adcl
jne
int
std
xchg
std
stos
insb
lahf
es
inc
mov
mov
mov
sub
lea
push
stos
loopne
xchg
inc
pop
push
jmp
dec
roll
ret
stos
sub
cwtl
dec
pop
stos
pop
or
or
push
lcall
aad
mov
mov
scas
adc
or
mov
fucomp
lret
add
jmp
jnp
mov
mov
jmp
pop
shrb
shrb
jp
sub
or
jge
jmp
push
xchg
cltd
xor
mov
andb
cmpsb
lds
mov
inc
push
jge
fdivr
call
gs
sub
push
push
movsb
xchg
fists
mov
bswap
mov
mov
clc
adcl
fs
pop
cs
pop
jg
stc
ror
stos
push
fbstp
cld
aad
test
in
mov
mov
in
daa
popa
jmp
xor
stos
adc
cltd
and
es
cmp
arpl
jmp
in
shrl
js
imul
orl
cltd
jno
or
xchg
or
dec
in
stos
xchg
jecxz
push
sbb
jae
stos
push
mov
push
sub
inc
insl
addl
rolb
stos
les
mov
mov
icebp
jbe
std
fwait
fs
mov
fstps
shlb
stos
xor
mov
pushf
xor
out
in
je
pop
push
sarl
ljmp
mov
pushl
stos
clc
xchg
loop
out
mov
mov
add
fistl
jle
lea
xor
lds
fwait
addl
loop
cltd
xor
dec
xlat
aaa
inc
fsubrs
pop
or
daa
and
and
stos
mov
xchg
or
push
mov
sti
cmc
adc
add
in
stos
je
popa
dec
sub
in
kaddb
xchg
or
jmp
stos
cld
and
sub
imulb
daa
sub
mov
test
movsb
dec
jb
lods
stos
xchg
shll
outsb
xchg
mov
and
push
xchg
stos
and
dec
pop
mov
add
mov
jo
aad
mov
and
mov
ljmp
or
stos
pop
xchg
ret
stos
cmp
jp
sahf
ljmp
imul
and
out
aas
jmp
pop
stos
fldcw
rorb
lock
popf
ret
xlat
lcall
adc
push
add
mov
test
loop
push
xor
scas
and
dec
arpl
push
stos
ss
add
movsl
fldl
jo
ret
push
or
imul
xchg
and
lds
cld
xchg
leave
jbe
nop
call
xchg
stos
test
iret
mov
mov
mov
subl
out
jns
addr16
xor
mov
inc
stos
addb
and
jne
fcomi
sbb
push
xorl
fisttpl
pop
lods
cmpsb
bts
fdivl
sbb
dec
stos
push
push
stc
int
cmp
mov
popa
shlb
inc
dec
fildll
fsubr
push
stos
ljmp
inc
mov
mov
jmp
mov
imul
push
lret
sbb
imul
xor
stos
icebp
xor
rorl
dec
mov
lea
enter
stos
cli
push
fwait
inc
int
stos
dec
clc
and
or
push
dec
lret
int
stos
mov
pushf
rclb
dec
loopne
dec
jnp
icebp
lds
insl
sbb
sbb
jcxz
pusha
add
and
jmp
xchg
stos
inc
out
xor
lret
stc
jns
cmp
loopne
shll
mov
movsb
cltd
stos
leave
push
ficoml
stos
psubb
lea
out
addr16
repnz
arpl
mov
mov
aas
xchg
sbb
inc
lds
imul
enter
lcall
mov
xchg
stos
sbb
mov
jne
fdivrl
int
xchg
push
lret
pop
sbb
stos
outsl
mov
jbe
jne
outsl
xchg
iret
lcall
mov
cltd
rep
cs
adc
jmp
arpl
mov
ficoml
stos
lock
dec
fs
add
stos
xchg
btr
jmp
imul
xorl
fisttpl
cmp
roll
ss
test
stos
mov
cli
xchg
jp
jl
mov
scas
loop
hlt
push
add
xchg
or
xor
cs
stos
ror
dec
sub
hlt
jns
mov
mov
mov
std
fimull
test
and
jb
sub
xchg
stos
divb
pop
inc
sub
stos
mov
jnp
addr16
jns
test
fwait
rclb
or
jmp
ret
or
inc
sbb
push
push
andl
cltd
subl
mov
insb
movsb
cmp
outsl
mov
stos
cmpsl
in
outsb
xchg
cli
sub
repz
and
dec
ljmp
lods
arpl
addr16
stos
in
scas
mov
pop
stos
es
pop
lret
add
stos
stos
cmc
add
pop
sbb
rol
mov
imul
jb
sbb
adc
add
stos
mov
sub
ret
push
ja
das
daa
add
leave
shll
add
in
stos
mov
or
xchg
hlt
es
inc
push
popf
pusha
lret
cld
out
outsl
mov
push
aam
add
cmpsb
xchg
pop
stos
jle
cmpsl
movsb
jp
arpl
xchg
mov
notb
fwait
je
or
aam
jle
adc
adc
sbb
sbb
pushf
imul
lret
mov
int3
dec
int
aas
sbb
adc
hlt
mov
jno
stos
enter
pop
orl
mov
shl
rcl
es
jmp
dec
jbe
stos
mov
in
cli
bound
stos
pop
dec
add
addr16
stc
imul
fmull
jnp
pop
jae
mov
xor
dec
dec
stos
jmp
ret
or
and
sub
pop
les
test
dec
jmp
cmpb
xchg
pop
cmp
out
lds
lret
shll
and
aad
dec
ljmp
add
and
f2xm1
data16
mov
popa
out
jnp
and
movsb
leave
jb
fwait
or
inc
clc
mov
movsl
dec
mov
pop
or
xchg
mov
push
arpl
test
dec
xchg
stos
enter
mov
add
sti
mov
addr16
and
xor
lcall
fwait
jmp
bound
mov
mov
test
push
lret
stos
roll
imul
fyl2x
sub
mov
jo
outsb
mov
mov
xor
xor
inc
cmp
hlt
fstl
scas
cmp
stos
sub
into
lods
add
scas
insl
stos
inc
mov
loopne
stos
ljmp
xlat
add
addr16
lods
leave
aad
shr
xchg
inc
mov
push
stos
outsl
lock
adc
cmpsb
add
fisubl
jbe
stos
pop
sub
repz
mov
clc
dec
out
lock
xor
xchg
scas
into
inc
bts
jmp
ljmp
mov
repz
stos
scas
sub
stos
xchg
mov
cmp
fs
pop
aas
push
xor
mov
xchg
rcr
dec
stos
cmp
out
add
jbe
insb
jge
shlb
or
inc
and
pop
jns
std
adc
popa
pop
fwait
xor
xchg
pop
aad
fadds
inc
adc
pop
stos
sub
push
pushf
stos
lahf
cmpl
or
jmp
lcall
shrl
inc
xchg
adc
push
ja
mov
stos
sahf
and
out
shrb
call
fdivrl
push
lret
aad
stos
mov
push
pop
sbb
dec
stos
jecxz
lds
sahf
mov
jmp
sub
jmp
or
sub
adc
sarl
mov
xchg
ret
fistpl
movsl
and
cwtl
popf
lret
push
or
in
cmp
jns
iret
sub
sub
dec
mov
pop
jp
pop
out
mov
or
ss
iret
daa
jle
sub
enter
dec
xor
int3
icebp
scas
or
add
mov
add
out
xchg
pop
test
stos
add
mov
jge
inc
daa
sbb
pop
pop
adc
lcall
inc
mov
movsb
lahf
hlt
fwait
stos
in
in
pop
js
mov
mov
mov
in
scas
imul
sbb
jle
je
inc
test
ret
mov
dec
mov
mov
js
or
addr16
stos
inc
add
fs
bound
jmp
pop
pop
mov
or
scas
out
imul
stos
add
fstps
jmp
ficoml
xchg
gs
stos
movsl
aaa
jb
in
test
and
cmpsl
lret
jecxz
mov
les
inc
fisubrl
mov
jmp
dec
std
sarl
stos
in
jle
jbe
mov
ljmp
fwait
and
dec
mov
push
jae
dec
adc
in
mov
stos
jp
dec
cmpsb
into
movsb
jnp
lret
cld
inc
data16
cs
jmp
cwtl
mov
scas
push
js
push
mov
lret
popa
dec
les
xchg
sbb
daa
xor
jg
dec
adc
xchg
std
lods
sub
daa
cltd
test
pop
aad
sti
lahf
test
stos
inc
xor
in
out
and
jle
out
inc
xor
inc
sub
dec
addr16
out
enter
push
mov
sub
push
adc
xor
dec
and
fisubrs
adc
sbb
add
ja
pop
stos
dec
lods
cmp
int
inc
add
scas
or
lcall
mov
fxch
orb
fistpll
stos
jg
mov
push
popa
adc
xchg
into
je
xchg
mov
lods
cmp
push
mov
xlat
and
ja
stos
mov
dec
xor
es
lea
je
movsb
xchg
gs
xchg
loope
aaa
add
cmp
sahf
xchg
push
sub
in
inc
sub
pop
xchg
push
and
cmpl
out
push
xchg
popa
stos
dec
movsl
lock
inc
lods
mov
iret
fsubrl
xchg
sub
sub
nop
addr16
in
jl
push
gs
idivb
and
lods
subl
dec
stos
sub
lds
das
mov
or
mov
int3
xor
movsl
stc
and
rcrb
fwait
shl
jnp
mov
ja
fcomi
or
stos
sbb
bound
xchg
in
xchg
int3
mov
into
sub
and
addr16
gs
loop
jp
mov
sbb
mov
sbb
into
mov
push
stos
sub
int3
mov
int3
mov
out
mov
and
lods
jg
movsb
mov
pop
test
xchg
addb
out
insl
lret
xchg
nop
outsl
and
fwait
dec
mov
mov
mov
stos
mov
insb
push
movsw
ficoml
push
stos
dec
aas
jl
fisttps
movsb
jo
lods
pop
cli
addr16
cmp
or
sub
iret
jb
fwait
pop
xchg
stos
or
enter
or
jl
cltd
add
mov
test
stos
andl
adc
inc
dec
push
out
push
sbb
or
aad
mov
pop
add
test
fwait
aam
clc
out
and
imul
cmc
dec
dec
movsb
rorb
or
adc
fwait
imul
sub
jns
les
stos
add
stos
mov
mov
in
stos
inc
aaa
roll
inc
fists
shrb
and
stos
mov
nop
adc
push
sahf
stos
cmp
inc
stos
ds
add
je
adc
ljmp
adc
icebp
sub
jae
iret
push
stos
mov
jmp
imul
and
fmulp
addr16
xchg
and
pop
loop
fnstsw
sub
test
addr16
scas
mov
fists
xchg
stos
adc
test
push
sub
mov
jmp
stos
sbb
mov
mov
xchg
xchg
insb
mov
bound
pushf
clc
stos
pop
repnz
addr16
decl
adcb
int
cmpsl
xchg
lods
or
xchg
stos
or
pushf
aas
pop
fists
stos
sub
daa
in
sbb
scas
xchg
xor
daa
je
rorl
lahf
repnz
in
xor
in
stos
cmc
jge
subb
ret
stos
dec
add
addr16
jmp
push
inc
scas
into
and
mov
daa
add
push
aaa
sti
sarl
scas
pop
in
cltd
mov
pop
mov
push
addr16
jne
sub
add
adcl
dec
inc
add
jnp
dec
xchg
rclb
fnstsw
cmpsl
out
in
daa
repnz
push
jb
sub
cmp
stos
hlt
xchg
cwtl
pop
adc
loop
daa
cmp
push
jl
dec
clc
lret
shrb
push
mov
into
test
fcomps
xor
or
mov
jbe
aad
in
stos
in
out
jmp
jmp
inc
pop
xor
and
sahf
lahf
add
push
rorb
sub
push
jo
jnp
daa
and
jmp
aaa
cmp
mov
mov
mov
movsl
mov
ret
inc
jg
aad
stos
cs
xchg
dec
pop
push
mov
rcrl
aas
imul
cmpsb
add
in
push
push
add
stos
adc
push
cmp
pop
pushf
and
stos
add
add
or
fildll
mov
in
stos
jecxz
adc
mov
jne
add
lret
bound
stos
cld
jecxz
jl
add
imul
xchg
mov
jb
stos
xchg
pop
xchg
fcmovb
out
push
daa
jnp
dec
sbb
imul
cld
cwtl
push
mov
push
jo
xchg
jb
pop
cs
push
sub
cs
push
cltd
imul
jmp
jnp
inc
xor
stos
out
xchg
imul
shll
mov
xchg
bound
stos
nop
pushf
daa
test
aad
add
enter
data16
xor
pop
jge
test
and
roll
and
dec
incw
fistps
stos
repz
dec
cmp
scas
sub
stos
iret
inc
sub
stos
mov
push
sbb
mov
mov
sub
insb
xor
xchg
sub
popf
jmp
int3
cltd
std
cmp
inc
stos
es
test
cmp
mov
in
pop
mov
arpl
add
jo
mov
movsb
lds
call
pop
xor
adcb
imul
stos
test
jmp
or
xchg
jmp
fbstp
jbe
movsb
fildl
mov
mov
inc
mov
jo
stos
mov
mov
mov
imul
mov
out
jb
pop
pop
fwait
fs
add
imul
orl
sbb
adc
pop
stos
shlb
outsb
inc
lea
mov
push
push
xchg
pop
stos
popa
aas
pop
lcall
mov
cld
shrl
adc
add
std
jns
mov
stos
mov
pop
test
sub
sub
sub
or
and
insb
ret
mov
hlt
dec
mov
mov
lcall
mov
outsb
clc
dec
ljmp
sbb
das
test
mov
inc
pop
fcmovnbe
jne
sub
addl
jns
add
cmp
sub
mov
and
xchg
xor
xchg
sarl
mov
dec
imul
imul
sub
mov
je
hlt
stos
lcall
stos
bound
insl
sahf
fwait
stos
in
sbb
data16
sub
pop
sti
test
jle
cmp
lods
fsts
mov
dec
insb
xchg
mov
stos
mov
sub
pop
addr16
jp
cmpsb
dec
push
in
cltd
cltd
in
stos
sbb
aaa
adcl
jmp
pop
jbe
dec
sbb
jns
addr16
push
cmp
sbb
scas
dec
adc
push
mov
stos
in
push
icebp
mov
ja
ss
xchg
jno
push
push
jge
xchg
dec
fcompl
loop
and
js
and
sahf
mov
popf
mov
push
stos
xchg
sub
lods
loop
ror
stos
pop
test
gs
pop
push
mov
jae
es
push
mov
jbe
and
fiaddl
sub
dec
sub
sub
sub
mov
negb
sub
inc
stos
leave
and
ljmp
loope
fimuls
jo
sarb
cmc
pushf
mov
mov
adc
stos
and
test
stos
in
xchg
adc
sub
stos
movsb
fiaddl
fildl
push
sub
jno
xchg
xchg
mov
mov
inc
stos
xchg
data16
stos
outsl
andl
jo
ret
fsubl
mov
push
stos
jl
xchg
push
bound
shrb
push
cwtl
fwait
inc
or
ja
outsl
notl
lods
hlt
stos
movsb
adc
mov
imul
arpl
sub
stos
push
in
sti
test
ret
loop
inc
hlt
lret
xchg
in
std
stos
rcll
mov
stos
rolb
in
sub
lahf
mov
hlt
stos
insl
pop
lods
mov
in
imul
repz
jb
jae
pusha
push
mov
mov
stos
ret
cltd
out
fimuls
stos
lods
push
inc
jo
mov
fsts
dec
push
jmp
jmp
mov
and
stos
jbe
imul
lret
out
or
ljmp
jg
pop
fnstenv
stos
movsl
inc
pusha
push
lret
test
inc
int3
shrb
and
out
pop
stos
mov
push
imul
mov
movsl
icebp
rcrb
jae
stos
xorb
shrb
notl
sar
insl
int
pop
jle
addr16
stos
in
mov
lahf
stos
inc
mov
xor
hlt
mov
or
fwait
sub
sarb
in
cld
out
imul
in
mov
mov
stos
inc
jb
std
es
push
jae
shlb
push
mov
sub
jmp
lods
fldt
jno
rorl
mov
sbbb
jo
push
mov
jne
xchg
stos
mov
ficomps
cli
stos
sti
hlt
add
sbb
adc
stos
push
paddusw
lods
pop
lods
gs
nop
mov
mov
arpl
loop
mov
jb
stos
stos
or
cmpsl
push
cmp
movl
adc
xor
daa
mov
push
mov
stos
inc
ret
pop
iret
rclb
xor
xorb
stos
mov
leave
je
stos
inc
inc
sub
stos
rclb
jmp
js
jae
out
aam
subl
cmpsl
adc
cltd
stos
fmuls
lds
aad
or
mov
pusha
pop
stos
inc
out
jnp
pop
mov
stos
cltd
aaa
cmp
rcrl
icebp
test
or
adc
inc
xchg
int3
icebp
mov
movsb
pop
stos
or
cld
js
popa
add
push
sbb
adc
pusha
sub
ds
mov
mov
xor
inc
movsb
add
lods
shrl
mov
mov
adc
adc
mov
in
jl
stos
mov
dec
outsl
packuswb
idiv
adc
int3
stos
popf
scas
xor
pop
push
das
xchg
daa
mov
test
cmpsb
sbb
sbb
aaa
test
jno
aad
inc
stos
inc
insb
pop
xchg
mov
add
dec
inc
xor
in
rcrl
adc
leave
in
sub
push
aas
mov
enter
mov
stos
nopl
sub
inc
xchg
push
aam
aaa
xor
cltd
into
jmp
jmp
stos
js
cmpsb
out
aam
inc
stos
iret
fists
stos
sbb
aad
pop
stos
imull
movsb
pop
cmpsl
mov
lea
pop
push
or
jg
cmp
outsl
mov
pop
test
mul
or
push
xchg
adc
es
lcall
arpl
add
xchg
mov
push
pop
cltd
jnp
enter
push
cmc
push
mov
stos
xchg
sub
leave
cld
iret
mov
data16
lret
jge
stos
xchg
cmp
dec
and
pop
jecxz
xchg
sbbl
stos
in
inc
sar
inc
and
stos
mov
jl
mov
dec
add
and
pop
mov
and
stos
mov
shll
cmp
inc
stos
std
inc
jae
repnz
inc
lods
adc
sahf
popf
sbb
add
or
and
mov
stos
cmp
aas
push
fst
xor
jmp
in
fistpll
out
outsb
stc
jmp
cmp
orl
movsl
mov
mov
sub
xor
inc
ucomiss
and
out
dec
push
stos
push
rcll
ds
mov
ffreep
jle
xchg
lods
or
popa
test
inc
xchg
mov
insl
push
mov
adc
sub
adc
cmpsb
outsb
bound
push
or
stos
push
or
flds
pop
or
cmc
pop
cld
out
mov
loopne
movsb
mov
sahf
mov
cmpsb
stos
adc
dec
inc
xchg
stos
insl
push
shlb
mov
roll
test
fdivl
lcall
hlt
mov
jnp
rcrb
mov
cli
in
mov
adc
daa
adc
out
mov
and
xchg
xor
xor
xlat
sbb
cmc
xor
popf
mov
inc
lods
adc
fidivrl
mov
in
mov
jge
out
jns
mov
pop
jecxz
cmp
stos
push
fidivrs
sahf
test
cltd
repz
js
xorb
fs
in
cmpsl
xchg
stos
in
je
push
adc
dec
stos
mov
test
stos
cmp
inc
add
or
pop
cs
enter
ljmp
jecxz
xchg
stos
fisubrl
pushf
cmp
stos
bound
xchg
in
sbb
xlat
mov
inc
stos
jb
dec
mov
das
iret
push
cmp
pop
subl
faddl
ftst
fadds
test
cwtl
inc
and
stos
mov
mov
inc
jbe
mov
orb
movsb
inc
mov
xor
inc
je
stos
push
sbb
mov
icebp
mov
mov
pop
sub
int
jg
jne
lods
xchg
stos
mov
pop
in
sahf
repnz
test
dec
mov
inc
gs
cs
fidivs
mov
pop
fcompl
stos
jb,pt
mov
out
mov
mov
test
sarl
adc
les
cwtl
xor
lahf
fcoms
jbe
loope
pop
mov
adcb
pop
dec
mov
cli
add
add
push
adc
incl
js
push
mov
dec
sbb
stos
and
sbb
xchg
lods
stos
fistpll
leave
les
divl
pop
cmpsb
inc
ds
jae
mov
cwtl
or
fiadds
cmpsl
sub
pop
mov
stos
ljmp
or
movsb
mov
sarl
adc
jnp
mov
mov
stos
ss
icebp
mov
iret
xorl
leave
mov
test
stos
lods
call
mov
stos
push
pop
pop
pop
scas
add
xchg
lods
mov
sub
popf
dec
aam
xorl
stos
mov
add
inc
cs
in
jge
out
mov
push
xchg
xor
mov
mov
leave
jmp
or
mov
stos
add
sub
stos
jnp
sub
adc
jmp
add
cli
stos
push
lret
inc
inc
pop
mov
pop
or
inc
inc
jnp
mov
push
bound
rcll
in
scas
imul
loopne
int3
stc
minps
lret
add
fisttpll
jle
popa
lahf
test
repnz
in
jmp
xchg
or
stos
pop
inc
stos
mov
add
scas
jmp
mov
into
push
nop
and
dec
mov
adc
xchg
pusha
mov
imul
mov
pop
sahf
pushf
aaa
out
push
jnp
push
lret
mov
ja
ljmp
lods
mov
mov
test
movb
aam
or
pop
stos
std
addr16
xor
push
loope
mov
or
mov
lods
cmc
in
add
popf
mov
or
push
pop
dec
mov
xlat
out
es
popa
les
fcmovu
jg
fistl
add
aam
xchg
fwait
jne
aas
cmpsb
pop
adc
movsl
sti
push
push
lcall
dec
imul
stc
jecxz
cwtl
mov
pop
push
sbb
in
mov
jp
std
stos
xor
les
stos
sbb
push
iret
xorb
mov
and
mov
fmulp
out
imul
mov
shll
lahf
call
jmp
push
add
jl
mov
jmp
push
sub
stc
aam
mov
loop
mov
push
jno
out
test
es
push
adc
lods
call
mov
sbb
mov
push
sbb
jg
fmull
int
mov
stos
xor
fs
ficomps
add
stos
inc
push
int3
test
push
je
sub
jae
stos
js
xor
xchg
jp
mov
lods
dec
rorb
sub
imul
aas
in
jne
add
inc
mov
stos
push
popf
loop
inc
lds
mov
sbb
pop
push
jmp
pop
adc
pop
adc
dec
jnp
scas
xlat
popf
sbbl
shrb
std
dec
stos
icebp
gs
xor
pusha
jle
stos
fistpll
enter
daa
mov
sbb
fstenv
imul
jmp
push
popf
pop
aaa
jb
jmp
xlat
jecxz
push
test
mov
in
mov
fdivrs
retw
orl
stos
sub
xor
lods
scas
xchg
stos
loop
ss
push
and
mov
mov
rcll
popf
sbb
imul
scas
sub
cwtl
pop
adc
jmp
int
stos
rcl
mov
push
cmp
dec
repnz
imul
mov
stos
in
rcr
push
inc
outsl
cmp
outsb
ret
and
fs
or
nop
pop
arpl
push
mov
hlt
andl
inc
loope
adc
mov
pop
mov
cmp
mov
stos
jge
bound
ss
ds
dec
adc
pushf
ret
pop
lods
daa
xchg
dec
ljmp
cli
mulb
stos
sub
adc
sub
push
gs
add
push
xchg
repnz
push
fmulp
or
pop
stos
outsl
jle
xor
jecxz
mov
jb
inc
aaa
inc
insl
xchg
mov
jmp
js
mov
sub
imul
outsl
test
push
and
shrl
xchg
xchg
out
sub
fs
adc
scas
imul
mov
mov
stos
jo
mov
movsl
adc
mov
sbb
mov
push
jmp
into
insb
stos
sbb
dec
lea
add
aaa
rol
sbb
add
jle
inc
xchg
stos
nop
std
in
testb
xchg
cs
jmp
mov
daa
jmp
stos
inc
fimull
call
mov
shlb
xor
outsl
shll
mov
jmp
imul
pop
ja
insl
inc
pop
imul
mov
pusha
das
hlt
imul
daa
ds
pushf
in
mov
lret
stos
push
jae
mov
stos
rolb
insl
dec
stos
xor
shll
lods
cmp
sub
sbb
stc
imul
xchg
sbb
sbb
stos
cmp
out
pop
nop
pop
jb
fwait
and
in
push
mov
stos
shlb
inc
lods
iret
and
lea
stos
xchg
inc
test
fsubrs
add
insl
nop
scas
lret
pop
stos
popf
xchg
subb
icebp
imul
mov
stos
stc
out
mov
inc
mov
stos
les
push
push
in
xor
in
enter
xlat
lock
in
adcb
jns
out
jmp
mov
xor
jne
push
cmp
mov
add
mov
aam
stos
loopne
xor
xor
jmp
lcall
std
cmp
loope
or
pextrw
push
add
jnp
sbb
dec
in
cmp
mov
xchg
push
ds
in
insl
jo
nop
sbb
outsb
inc
mov
in
sub
stos
push
mov
sbb
or
pop
jecxz
dec
nop
cmpsl
pop
ds
xor
dec
js
imul
xchg
shrb
outsb
xchg
jmp
xchg
jnp
jno
lea
outsl
jno
inc
fwait
xchg
mov
or
out
mov
mov
and
adc
imull
mov
in
push
cwtl
or
xor
xor
stos
inc
or
push
add
stos
aas
mov
mov
push
sbb
stos
fs
mov
les
sbb
outsb
xchg
dec
dec
sub
sub
mov
stos
adc
jl
sar
add
sub
mov
and
ret
in
lahf
push
cld
xchg
adc
stos
push
shrl
and
or
stos
inc
pop
cmp
repnz
pusha
push
scas
test
pushf
stos
or
cmc
call
adc
stos
pop
mov
adc
incb
imul
outsb
out
shl
mov
and
adc
insl
xchg
mov
xchg
les
stos
jae
ljmp
mov
mov
cmp
cs
pop
push
adcl
mov
cli
jle
mov
adc
ret
hlt
stos
imul
pop
jmp
imulb
mov
adc
xchg
ljmp
push
in
and
stos
lds
and
mov
cli
ret
or
stos
clc
rclb
mov
adc
fildl
sub
roll
lcall
xor
adc
or
pushf
dec
and
lods
xor
stos
sub
push
ljmp
adc
insb
jecxz
mov
hlt
mov
lahf
fsubl
stos
jns
pusha
enter
stos
jnp
xchg
and
stos
pop
popa
dec
pop
sbb
fwait
test
pop
aam
mov
stos
fisubs
push
lds
sbb
fdivs
pusha
scas
subb
dec
sbb
fimuls
stos
adc
pop
mov
sbb
mov
lea
scas
sbb
dec
and
ficoms
fwait
lret
sbb
sahf
cmpl
adc
xorb
and
stos
out
iret
mov
je
inc
stos
sub
cmp
adc
stos
adc
xchg
fldenv
pop
adc
xor
notb
adc
addl
subl
stos
int
add
test
repnz
and
sbb
xorb
adc
or
das
push
movsl
ja
addr16
psraw
fs
std
xor
ljmp
sbb
subl
or
xor
insl
pop
bswap
fwait
aam
das
stos
inc
and
mov
movsl
jmp
dec
mov
movsb
jl
and
mov
add
and
test
xchg
mov
adc
and
push
sbb
loop
pusha
sbb
mov
push
jmp
lods
popa
push
insl
sub
and
mov
stos
dec
arpl
sub
int
es
inc
push
pop
pop
stos
into
das
in
adc
xor
pop
dec
stos
xchg
cmp
loopne
fsubrs
das
mov
imul
in
or
stos
out
pop
cmp
cli
jg
stos
add
sub
dec
ret
rcr
and
mov
mov
mov
sahf
mov
jmp
dec
cmpsl
xor
bound
cld
jne
mov
mov
pop
adc
arpl
ds
pop
outsl
lods
dec
mov
jl
leave
push
cld
cs
stos
aad
add
and
push
pop
int3
fidivrl
std
and
mov
dec
push
mov
and
lods
mulb
call
fistpl
and
push
adc
cltd
aaa
sti
sarb
scas
pop
adc
fnstenv
mov
popf
sbb
lret
mov
and
aam
sbb
dec
dec
mov
xchg
bound
fadds
dec
aas
xor
pop
imul
iret
stos
nop
jae
mov
mov
jmp
pop
jmp
insb
push
xor
pop
ljmp
sub
mov
insl
lret
loop
fwait
pop
jbe
mov
adc
adc
mov
mov
stos
fists
add
cmp
icebp
jmp
ret
dec
xor
xchg
xchg
imul
xor
push
push
or
mov
movsl
int
and
cwtl
test
cmp
movsl
push
push
addr16
ret
sbb
rcrl
clc
imul
in
dec
push
stos
mov
lea
stos
leave
pop
ja
xchg
std
pop
adc
shrl
lahf
fistpl
xor
stos
movsb
bound
push
mov
xchg
ja
daa
xor
fsubrs
add
sbb
addr16
in
pop
loopne
lods
or
inc
sub
out
orb
cmp
mov
stos
sti
ds
xchg
push
push
dec
repnz
fwait
jmp
outsl
sbb
jle
sbb
push
daa
insb
push
lea
xor
scas
inc
mov
sub
mov
adcb
mov
pop
jns
cmp
dec
imul
add
push
stos
test
adc
xlat
jp
dec
mov
mov
mov
mov
fwait
add
ds
out
sbb
mov
outsl
xor
stos
lock
repnz
add
adc
in
es
popf
aam
add
xor
stos
das
jg
inc
outsb
imul
lods
xchg
out
inc
xchg
jle
outsl
repnz
js
frstor
sub
stos
out
dec
jae
in
int
pushf
inc
xchg
insb
inc
mov
stos
fdivl
arpl
orl
mov
call
ficomps
xchg
mov
movsb
aad
dec
xor
daa
adc
dec
xchg
jnp
mov
imul
inc
mov
sti
sub
and
cltd
jmp
push
push
jns
fildll
repnz
mov
xchg
les
outsb
xchg
stc
ret
and
sub
cwtl
or
stos
or
pushf
push
add
xor
mov
mov
stos
cltd
aam
scas
adc
mov
test
test
pop
addb
pop
arpl
or
in
or
or
jmp
add
lcall
stos
outsl
loopne
jmp
dec
cmpb
fsubrs
sub
push
push
sub
xchg
lahf
ret
add
test
shl
lods
popl
mov
dec
call
xchg
push
add
scas
mov
jo
cmpsl
adc
xor
push
push
xchg
insb
out
pop
imul
jge
fs
lret
and
push
sub
js
test
pusha
loop
inc
mov
ret
cltd
pop
jmp
sub
mov
and
adc
enter
scas
fdivl
lock
pop
mov
xchg
cmpsb
loope
add
lods
sbb
mov
inc
stos
dec
lcall
jmp
ret
in
push
out
int
or
adc
repnz
stos
mov
mov
cmp
stos
rcll
fsubp
sub
mov
and
jno
push
sti
pop
ja
dec
aam
dec
imull
adc
xchg
fs
dec
jae
sub
incb
jno
stos
dec
sbb
push
cmpsl
mov
mov
mov
jmp
mov
cmpsb
mov
stos
xor
push
sahf
mov
xor
mov
stos
xchg
lret
mov
pop
pop
xchg
push
lods
mov
mov
das
push
stos
imul
nop
stos
push
add
fisubs
cmpsl
loopne
iret
dec
cmp
jmp
dec
or
repz
test
xchg
test
xchg
mov
push
inc
sub
mov
xor
cld
pop
test
lret
sar
cld
sub
stos
lds
lahf
jge
popf
sub
inc
test
and
lret
jbe
sub
fists
adc
dec
xchg
mov
pop
lea
mov
sbb
fdivs
pop
mov
repz
jl
inc
stos
cmc
dec
lock
aas
imul
push
push
xor
dec
mov
stos
dec
sbb
mov
std
les
mov
imul
adc
add
fs
sbb
andps
and
lahf
mov
xor
fiadds
fsubrl
cmp
or
push
push
push
inc
push
ret
insl
test
lods
push
push
cltd
stos
push
push
movsl
jmp
mov
xor
mov
lahf
lcall
push
loopne
cltd
jnp
daa
arpl
bound
inc
ret
imul
jae
dec
push
or
add
iret
xchg
ret
stos
divl
mov
ret
jnp
dec
stos
xor
gs
and
or
lahf
adc
jecxz
cmp
push
test
sti
scas
dec
stos
sahf
mov
pop
push
xor
or
rol
pop
cmp
pop
dec
adc
dec
ljmp
xor
lods
sub
inc
cli
xchg
cmp
fisubl
jbe
cmp
adc
stos
push
fwait
lea
pop
lahf
test
adc
sub
xchg
cmp
pop
mov
jnp
fcoms
cltd
jp
es
adc
lock
shrb
mov
and
mov
arpl
jmp
dec
clc
mov
jmp
stos
iret
fcomps
enter
sub
fcompl
mov
enter
gs
shll
scas
mov
mov
or
rorb
cmc
stos
cmpsb
stc
daa
mov
stos
push
jg
mov
adc
inc
fstps
and
pusha
fwait
jmp
sub
mov
imul
mov
add
das
inc
stos
rol
adc
mov
and
sub
mov
stos
jno
ss
mov
and
fucomp
jmp
shll
xchg
bound
mov
mov
mov
adc
or
and
adc
fwait
jae
xor
cmp
pop
stos
popa
xor
cmp
add
roll
stos
add
cli
int
cmp
stos
test
pop
xchg
scas
stos
lods
stc
push
pop
repz
jno
push
ret
and
pop
popf
test
lret
xchg
andb
pop
stos
and
fs
inc
stos
movsl
movsb
mov
mov
enter
sti
stos
fs
push
jne
imul
nop
xchg
jmp
xchg
lods
call
dec
lcall
xor
adc
jne
inc
lods
std
sbb
stos
or
pop
not
movsb
mov
jmp
fxch
dec
jl
cld
mov
inc
lods
inc
rsqrtps
out
sub
push
mov
in
test
mov
fdiv
stc
stos
sahf
das
lahf
sub
call
popf
sub
or
xor
add
fcomi
jnp
xchg
and
cmp
scas
lods
and
int
adc
arpl
or
mov
out
lods
mov
and
cmp
fmul
jmp
test
shl
push
rorb
push
push
imul
dec
pop
mov
and
stos
or
and
inc
subl
iret
jge
mov
or
repz
stos
sub
sahf
sbb
add
fdivl
mov
lahf
xchg
cmp
sub
cli
clc
xchg
sub
popf
cld
ret
jns
inc
xchg
pop
jo
pop
in
adc
lret
test
sbb
xchg
repz
add
pop
cmpsb
xchg
cld
xor
adc
and
stc
call
shrl
jge
add
and
imul
adc
push
aas
lea
test
lds
or
flds
rcrl
add
mov
je
mov
shrl
lcall
push
jmp
jle
nop
jp
push
lods
add
sub
sbb
fisubrl
sub
lock
cltd
jmp
push
stos
ror
rorl
in
fisubrs
repz
xor
stos
pop
daa
les
pop
lods
xchg
jmp
out
mov
mov
jmp
iret
xchg
cs
aas
mov
arpl
sub
daa
ss
adc
push
lahf
mov
stos
adc
sub
lret
lods
les
and
cmpsl
loopne
jmp
push
outsl
cmp
cwtd
xchg
sahf
jno
jbe
sub
adc
scas
int3
scas
mov
push
and
push
stos
mov
jle
stos
mov
imul
rorl
outsb
inc
mov
stos
jl
or
stos
in
leave
imul
aaa
xchg
lock
or
stos
mov
sbb
test
pusha
nop
cltd
shrb
insl
ret
stos
fsubrl
andl
mov
js
std
orb
test
sub
out
data16
adc
mov
stos
or
mov
add
test
ret
fwait
cmp
iret
stos
mov
hlt
mov
adc
push
out
addl
sub
das
sti
outsl
lea
les
xchg
adc
lret
mov
sub
imul
enter
lods
xchg
add
ss
sub
mov
test
mov
repnz
xor
dec
arpl
cwtl
stos
mov
adc
dec
stos
cmp
jmp
xchg
fsubp
out
fldenv
popf
stc
adc
jb
push
or
inc
push
fcmovnbe
lods
ds
mov
stos
int
xchg
scas
fsubs
add
addr16
sarb
mov
mov
pop
add
arpl
daa
cmp
lret
xchg
in
mov
jmp
xchg
lcall
mov
jle
mov
cmp
or
stos
movsb
out
jp
mov
mov
xchg
test
pushf
movsb
xor
ret
sbb
adc
lods
mov
mov
dec
cmpsb
mov
xor
add
ja
inc
test
stos
xchg
xchg
jge
push
and
and
cmpsb
loopne
sbb
and
xchg
mov
popfw
jmp
stos
jl
xor
pop
movsb
das
inc
push
pusha
sub
mov
sub
fxch
fmul
fwait
sar
stos
mov
dec
into
sbb
movsb
push
sarl
stos
lods
inc
out
dec
xchg
mov
jb
cmp
stos
xor
in
cmpsb
stos
icebp
add
test
push
arpl
out
dec
pop
inc
mov
sub
xchg
je
inc
nop
cli
sub
dec
and
and
dec
les
test
push
popf
push
movsb
stos
aam
xor
and
xor
stc
push
jge
pop
xchg
les
jo
aas
stos
mov
flds
stos
dec
inc
gs
cmpsb
outsb
test
pop
xchg
jp
xchg
mov
dec
xchg
fwait
mov
jg
adc
sbb
mov
jb
scas
scas
rcll
jb,pn
iret
xor
jge
sbb
sbb
mov
or
xchg
cmp
out
enter
mov
loop
push
iret
stos
or
and
fisubrl
aad
mov
hlt
mov
adc
push
insb
jge
inc
adc
scas
push
add
jmp
cwtl
push
stos
jnp
mov
arpl
clc
rcrl
mov
sub
and
mov
stos
xchg
insb
jl
outsl
ret
movsb
push
repnz
mov
cwtl
aaa
sbb
iret
fwait
std
outsb
cld
sub
int3
jne
or
adc
loopne
and
cwtl
cli
nop
xor
daa
insb
es
adc
je
pop
pop
mov
mov
popa
das
mov
out
xor
mov
shr
mov
dec
stos
fldenv
jge
in
mov
push
inc
mov
js
in
push
data16
sbb
or
int3
stos
mov
sbb
imul
pop
movsb
outsb
roll
scas
int
stos
fistl
mov
stos
stc
and
xchg
insb
std
sub
iret
mov
in
sbb
repz
mov
outsb
stos
xchg
inc
mov
shlb
nop
ficomps
push
mov
outsl
dec
jnp
lods
jmp
sub
inc
push
push
cmp
in
movb
and
or
jno
cmp
xchg
dec
scas
fldcw
push
dec
pop
cmp
xchg
stos
jge
stos
mov
dec
stc
sub
push
test
pop
pop
push
xchg
xchg
popa
stos
cltd
sbb
and
enter
pop
ret
adc
movsl
gs
xchg
push
jo
xchg
mov
stos
or
movsl
out
push
stos
pop
std
mov
leave
popf
push
stos
adc
les
insl
jl
lcall
psrad
dec
leave
pop
jmp
mov
ja
or
stos
cld
loope
iret
sub
nop
das
aam
aad
pop
xchg
js
pop
popa
movsl
clc
fwait
std
btr
add
call
out
xchg
xchg
jge
arpl
xchg
pop
out
jmp
mov
popa
bound
pop
or
xchg
jg
nop
lea
push
je
adc
adc
pop
arpl
jmp
call
std
mov
orl
and
mov
mov
stos
enter
out
fldl
lcall
mov
loop
xlat
fiadds
inc
fbstp
xor
and
push
push
fs
add
stos
cmp
jo
jle
daa
movsb
inc
xor
rclb
pop
into
or
testb
or
push
xor
mov
lock
dec
push
repnz
adc
loope
jg
pop
sbbl
enter
insl
or
movl
test
pop
hlt
adc
xchg
dec
stos
rolb
in
ret
jmp
sbb
lock
fldcw
stos
ss
mov
bts
mov
jecxz
stos
or
xor
das
inc
cltd
cmp
sbb
dec
xor
popf
stos
movsb
imul
popf
fwait
jmp
adc
and
mov
lods
inc
movsb
mov
cmpsl
mov
popa
pop
push
xor
xlat
aas
call
mov
mov
stos
xor
adcb
std
in
or
pop
xchg
shlb
int3
mov
sbb
inc
mov
mov
sub
filds
xor
and
mov
or
stos
cmp
fdivp
add
mov
dec
push
and
int
testl
mov
mov
cmp
stos
repz
jnp
and
rcl
stos
xor
xchg
jl
orb
inc
push
jno
std
jnp
aam
stos
scas
mov
mov
mov
loope
mov
ud2
imul
in
sahf
ljmp
cld
out
in
scas
sub
mov
imul
dec
mov
mov
ljmp
rcrl
mov
mov
stos
das
fcomip
pop
enter
stos
push
xchg
mov
cltd
imul
push
fwait
pushf
stos
and
add
sub
mov
pusha
xchg
pop
stos
cmp
aad
imul
in
into
adc
xchg
sub
mov
lcall
cmp
lcall
in
lods
or
lret
clc
mov
and
dec
pop
mov
stos
data16
imul
imul
lahf
jle
das
flds
insb
cmp
xchg
mov
sbb
mov
pop
shrb
jp
gs
stos
push
pop
out
cmp
mov
rol
scas
xor
loop
sbb
push
mov
fisubrs
mov
adc
cld
mov
inc
inc
push
push
mov
mov
movsl
test
xor
movsb
pop
push
in
test
scas
jge
loope
mov
dec
fldt
xchg
and
scas
cld
rcrb
inc
shlb
cmp
and
sbb
sub
aam
fcompl
stos
mov
int3
fucomi
fwait
nop
and
adc
stos
addr16
and
mov
fisubrs
inc
sbb
push
push
js
imul
adc
sahf
je
es
xor
sbb
add
sub
stos
mov
lea
push
movsb
je
push
dec
mov
push
sub
xchg
xchg
stos
jbe
or
mov
aaa
stos
nop
mov
add
mov
cmp
dec
mov
insl
stos
xor
cmpsl
orb
out
ss
into
pop
lea
shrl
stos
iret
mov
call
stos
jle
cwtl
mov
xchg
inc
test
ja
cmp
test
jle
stos
sbb
xor
stos
lea
pop
sub
jg
stos
and
jno
xor
mov
stos
mov
call
push
out
mov
push
repz
scas
push
faddl
lret
push
dec
sti
and
mov
dec
cmp
stos
xchg
mov
and
lahf
leave
std
mov
mov
inc
xchg
in
testb
xor
mov
cmp
aam
push
nop
ds
test
sub
icebp
jns
or
sub
jb
inc
or
pop
les
pop
stc
dec
int
cmp
in
sbb
loope
into
jge
mov
push
icebp
pop
stos
jae
add
and
ljmp
pop
xchg
les
movl
clc
cvtps2pi
or
mov
stos
or
xchg
stos
mov
mov
and
test
pop
or
dec
fiaddl
into
sbb
stos
test
ja
js
pop
lds
stos
cmp
add
stos
dec
push
mov
jmp
call
push
sti
lahf
es
stos
rorl
push
jo
into
fs
test
cmp
sbb
shrl
mov
repz
loop
push
outsl
xor
push
jge
mov
in
cmp
jmp
xor
stos
cmp
push
cmp
xor
pop
das
stos
gs
shr
neg
dec
stos
fsubrs
add
int
cld
xor
jmp
pusha
xor
imul
xor
xor
mov
fiadds
mov
or
stos
sub
add
ds
jb
xlat
mov
daa
imul
movsb
pushw
fcmovbe
imul
xor
stos
pop
jnp
divl
push
mov
mov
stos
or
sub
mov
cmp
stos
aas
xchg
imul
stos
sbb
adc
xchg
sbb
cmpsl
out
fsubrl
mov
dec
cld
xchg
lret
mov
imul
lahf
pop
xor
mov
subl
addr16
sbb
mov
fsubp
stos
jle
push
and
aaa
xor
scas
mov
stc
or
mov
sbb
mov
stos
xchg
mov
sahf
or
testl
xlat
insb
xchg
and
enter
cmp
sbb
pop
leave
xor
and
arpl
or
lods
mov
lahf
mov
push
mov
inc
lods
es
sahf
sbb
xor
mov
push
mov
test
push
xchg
cld
add
mov
pushf
sub
sahf
mov
into
iret
mov
and
push
stos
aas
divb
adc
push
stos
outsl
test
insl
lcall
testb
test
popa
jge
adc
cmc
cmp
insb
imul
stos
or
stos
scas
icebp
push
aaa
adc
stos
scas
xor
cmp
push
xchg
in
pop
pop
outsl
aad
popa
inc
movsb
mov
or
cld
add
xchg
mov
push
sbb
aad
stos
xchg
xchg
adc
inc
js
stos
rorl
fcompl
outsb
dec
sbb
loopne
loope
sbbl
je
decb
hlt
sub
push
jle
jo
pop
xchg
mov
push
inc
call
stos
jns
lods
mov
stos
dec
out
sbb
stos
mov
pop
in
daa
dec
pop
cmp
loopne
xchg
add
arpl
lods
xor
inc
mov
ss
mov
xchg
sub
cs
scas
xor
push
add
negl
stos
mov
dec
ss
out
push
popa
cmp
or
fwait
add
inc
inc
aam
dec
xor
mov
daa
out
jb
and
in
xlat
into
stos
mov
add
shll
int
jne
mov
xor
jecxz
mov
popa
lea
stos
xchg
pop
mov
xchg
stos
pop
pop
cmp
and
xchg
cwtl
mov
xchg
jne
sti
mov
mov
mov
inc
std
jno
fwait
imulb
xchg
repnz
int3
dec
adc
jno
mov
lea
mov
imul
scas
mov
cmp
mov
stos
and
pop
arpl
jmp
stos
cmp
stos
addl
outsl
push
stos
dec
shlb
cmp
push
in
sbb
fstl
pop
add
xchg
sahf
cli
imul
stos
or
nop
lret
pop
push
stos
xchg
mov
xchg
cltd
test
stos
repnz
and
std
pop
out
xchg
in
ss
hlt
enter
add
out
fdivrp
sub
loopne
sub
jp
stos
ja
pop
dec
mov
adc
xlat
mov
stos
sub
test
fisubrs
test
jecxz
stos
jae
sub
lcall
dec
gs
fs
add
jbe
addr16
in
pop
stos
mov
cmp
xor
aam
and
sarb
inc
stos
gs
or
test
jb
mov
into
stos
mov
cli
push
push
pusha
xchg
sti
mov
mov
stos
les
cwtl
aam
stos
orb
addr16
clc
insl
stos
push
mov
stos
scas
loopne
pop
les
sbb
sbb
dec
loope
inc
mov
adc
ljmp
mov
shrl
jbe
adcb
sahf
data16
adc
scas
mov
stos
lahf
fs
xlat
sub
and
jp
lahf
sarl
bound
lods
stos
fs
jle
in
jbe
jmp
cmc
pop
xor
iret
nop
jmp
stos
call
adc
xchg
stos
fldl2t
mov
aad
aaa
pop
add
cli
fstps
ret
js
cmc
popf
and
pusha
jae
push
push
shlb
cltd
mov
movsl
xchg
dec
mov
aas
push
sub
stos
adc
scas
jnp
iret
mov
lods
cs
test
lcall
xchg
mov
test
fnstsw
xor
scas
lock
jmp
xchg
and
stos
lahf
adc
or
cwtl
shrb
icebp
mov
js
imul
imul
call
mov
out
addb
les
add
leave
bound
mov
imul
cmpsb
xchg
aas
ja
add
pop
lea
icebp
jmp
jno
mov
pop
enter
cli
stos
js
mov
shrb
es
stos
aad
movsl
mov
pop
cmp
push
dec
leave
cwtl
xchg
in
movsl
out
orb
push
cmc
dec
pusha
enter
or
lock
lret
cmp
adc
sahf
cmp
adc
pop
mov
push
jb
subb
xor
xor
into
sub
adc
aam
stos
cltd
or
repnz
push
sub
push
ret
lock
cmpsl
jns
shrl
adc
jb
stos
adc
pushf
stos
pop
lahf
mov
cmp
imul
lock
pop
sarb
fadds
cmp
mov
gs
and
testb
inc
testl
or
in
or
mov
xchg
sbb
push
push
loop
orb
cmp
adc
stos
call
push
cld
stos
sub
mov
arpl
int
stc
sub
clc
dec
and
push
cmpsb
mov
popf
mov
jb
sar
mov
mov
and
fs
mov
fisubl
mov
and
test
movb
ljmp
je
mov
xchg
int
push
stos
test
jno
or
dec
sub
fistpll
inc
stos
sahf
jnp
das
xor
mov
into
jle
inc
xchg
inc
mov
fsub
mov
push
ja
mov
pop
mov
out
stc
xchg
jno
jmp
adc
stos
mov
ss
lds
int3
or
in
xchg
sbb
sub
lret
loope
mov
fsub
sbb
stos
icebp
push
std
andl
iret
imul
int3
sbb
shll
lahf
jnp
addr16
lods
push
jb
std
nop
mov
mov
cs
mov
mov
dec
stos
pop
lret
movl
add
push
mov
jns
cmp
arpl
sub
call
fwait
dec
or
push
adcl
inc
mov
jmp
cmp
aaa
out
sub
cmp
sbb
mov
test
ljmp
outsb
mov
cmpl
ja
sbb
outsl
cwtl
stos
mov
jmp
scas
mov
fildll
int3
xchg
bound
push
testb
stos
sbb
push
mov
xchg
lret
xor
pop
stos
stos
push
push
cmp
adc
xchg
dec
or
cmc
int
and
or
stos
in
lret
imull
mov
daa
xchg
stos
and
je
cmp
cmpsb
adc
and
lret
inc
insb
add
mov
stos
push
cmp
xor
sbb
stos
adc
lcall
inc
adc
mov
dec
cmpsb
cmp
xlat
pop
fwait
stos
add
icebp
fistl
cmp
mov
fists
mov
mov
stos
cmp
mov
stos
out
mov
push
pop
movsl
jno
push
mov
scas
mov
mov
inc
test
jnp
push
sbb
xlat
sbb
sub
dec
lea
stos
mov
out
push
clc
mulb
pop
jecxz
sub
rorb
jno
ds
cmp
stos
push
aas
inc
je
dec
shrl
iret
or
cwtl
icebp
add
cmp
mov
daa
lds
xchg
cmpl
push
jmp
push
jle
push
mov
sub
xor
push
push
dec
mov
cmc
cmp
les
jp
lret
bound
sub
inc
sub
in
jne
fwait
push
push
movsb
sti
add
mov
or
stos
add
or
stos
jo
push
fcoml
mov
jbe
stos
mov
dec
mulb
inc
imul
push
sub
mov
mov
stos
fimuls
sub
pop
inc
cmpsb
movsb
cmp
mov
mov
mov
push
cmp
stos
popa
gs
int3
jmp
insl
jl
enter
scas
jecxz
jmp
push
cmpsb
xchg
dec
or
adc
push
inc
cwtl
jae
mov
int3
adc
mov
je
es
movsl
sarl
cld
push
fisubs
test
mov
mov
jo
stos
push
xor
cli
ja
ret
stos
shlb
fbstp
stos
movsl
xlat
notl
stos
insb
pop
inc
loopne
mov
push
ljmp
lahf
jb
call
es
fwait
ja
icebp
mov
insl
test
divl
xchg
add
push
xchg
lods
fwait
dec
push
loop
mov
stos
jl
cmpsl
movsl
sub
xlat
dec
push
inc
lea
mov
xchg
mov
fs
and
rorl
pop
push
daa
repnz
pushf
loopne
dec
and
sub
adc
loop
popa
stos
ljmp
lea
sbbl
test
lahf
dec
lock
jge
push
pop
mov
xchg
fmulp
movsb
xchg
jl
or
stos
popa
lret
aaa
sahf
addr16
loopne
xor
xchg
push
fwait
mov
adc
push
imul
pop
mov
gs
add
pusha
dec
stos
mov
call
jl
decl
lea
mov
out
cmp
mov
addr16
push
mov
mov
push
fucomi
icebp
xchg
sbb
xchg
inc
stos
sub
aad
rcrl
int3
add
lea
lods
xchg
idivb
test
stos
ja
cmp
inc
mov
stos
dec
mov
pop
and
pop
movl
into
cmp
xor
xor
adc
jnp
or
cltd
add
mov
dec
xorb
sbb
adc
stos
in
push
xor
jp
fistps
push
decb
mov
sarl
mov
mov
xor
pop
add
push
hlt
mov
sub
sbb
and
fsub
stos
xor
mov
xor
loopne
jns
stos
mov
test
inc
stos
sbb
xor
sbb
fdivrs
and
in
stos
mov
out
jmp
pop
sub
adc
daa
mov
sbb
mov
stc
fldl
orl
inc
inc
or
stos
loopne
xchg
dec
adc
dec
cmp
sbb
sub
stos
jno
jle
mov
daa
stos
leave
push
push
cmc
fcomps
cmpsl
jmp
lods
push
call
sub
arpl
xor
jge
mov
adc
mov
iret
dec
and
xchg
stos
enter
sbb
mov
mov
lds
mov
jmp
sbb
in
inc
inc
repz
out
scas
stos
andl
push
hlt
aaa
cli
movsb
fwait
or
sub
dec
bound
clc
mov
lock
sbb
sub
xchg
xor
imul
stos
in
add
mov
add
jge
xchg
adc
dec
popl
pushf
stos
xchg
sbb
xchg
lods
ja
stos
addr16
clc
mov
xchg
cmc
push
insb
pop
stos
xchg
loopne
fdivl
aad
mov
mov
stos
pop
adc
sub
stos
mov
stos
adcb
enter
rep
aad
test
push
xor
dec
stos
add
jnp
cmc
aam
test
dec
cmp
xchg
pmulhuw
bound
fildl
lea
call
rorl
cwtl
pop
stos
or
insb
pop
mov
mov
dec
call
dec
in
sub
scas
xchg
adc
int
stos
mov
ja
sbb
or
in
je
stos
subl
mov
pop
nop
and
fcompl
loopne
jns
sarb
mulb
jmp
jge
aam
cld
pop
sub
xchg
shlb
scas
ret
push
stos
push
mov
fs
stos
inc
test
scas
inc
or
aad
lods
roll
cmp
xchg
mov
leave
or
js
pop
xchg
pop
jnp
xchg
sub
dec
clc
mov
push
mov
xor
xchg
es
mov
fsubl
stos
mov
lods
sbb
push
or
lahf
inc
sbbl
shrl
popf
jl
rep
mov
pushf
imull
filds
mov
stos
scas
ja
jle
push
mov
negl
push
push
rcll
aam
test
pop
stos
vmovaps
daa
sbb
adc
mov
shrb
negb
add
lods
loopne
fsubrs
mov
xchg
jae
ret
inc
jnp
rcl
mov
mov
dec
stos
jecxz
sbbb
mov
mov
mov
imul
imul
stos
push
outsl
lods
scas
sub
jo
repnz
mov
or
pop
cmp
stos
xor
jo
jg
jl
cmp
cmp
cmp
push
mov
imul
dec
mov
js
cltd
ss
mov
pusha
stos
rdpmc
testl
xchg
mov
dec
cwtl
adc
xchg
lcall
jne
pop
rclb
ljmp
adc
xchg
mov
adc
in
inc
jnp
inc
shll
les
and
jnp
insl
imul
jno
mov
stos
mov
lock
rorl
jns
cmp
jo
lods
cmp
testl
out
mov
cmp
addb
mov
out
and
shrb
inc
jl
push
add
sub
stos
jmp
push
stos
gs
inc
push
out
or
imul
ss
jnp
stos
decb
sarl
test
inc
or
push
call
je
mov
sub
imul
cmc
dec
jmp
jns
and
xchg
add
sbb
push
arpl
lock
xchg
stos
testb
fidivl
cmp
pop
enter
or
jge
mov
push
mov
test
cs
inc
cltd
jmp
cmp
insb
and
mov
fwait
orl
jle
jge
mov
cmpsl
pop
mov
mov
mov
xchg
enter
add
inc
in
jmp
ret
lahf
jae
lret
xor
add
test
faddl
xchg
and
movsb
sub
jle
subl
orl
fwait
sbb
and
adc
push
jecxz
stos
xor
mov
mov
push
mov
jle
aam
dec
pushf
cmp
shr
mov
add
pop
test
push
inc
xchg
das
scas
stos
mov
mov
mov
mov
cmp
mov
fcmovnb
rcrb
cmc
stos
repnz
pop
and
lea
arpl
push
call
push
dec
stos
stos
add
fnstsw
fisubrs
jo
sub
push
xchg
sub
in
lock
and
sub
fwait
nop
subl
cmpsb
fnsave
and
leave
xchg
pop
or
inc
scas
pop
mov
stos
loope
mov
dec
and
outsb
ja
jno
aad
stos
dec
jle
cmp
das
fwait
or
mov
sub
pop
or
and
stos
jno
xchg
and
cmp
xchg
push
mov
xchg
push
dec
push
sbb
and
imul
push
in
adc
fwait
sub
jmp
daa
iret
push
cmp
in
test
into
stos
add
enter
fists
stos
aaa
daa
inc
mov
add
imul
mov
imul
fwait
imul
decl
test
cs
xor
loop
mov
loop
jmp
dec
cli
orb
fstpl
push
push
sbbb
xor
sbb
dec
test
xchg
adc
jecxz
addr16
mov
cli
xchg
lock
jo
stos
outsb
xchg
add
push
stos
mov
lahf
inc
repz
dec
fsubrs
and
orl
or
add
aam
stos
clc
push
cmpsl
mov
ljmp
dec
movsl
jne
stos
int3
outsl
push
stos
and
cltd
xchg
xchg
inc
imul
cmp
stos
and
sub
dec
out
stos
rcr
clc
push
test
out
lods
int3
jmp
lods
stos
push
clc
jecxz
push
pop
xchg
jne
subl
dec
pop
cmp
xchg
in
inc
jecxz
stos
cld
jmp
cltd
std
aas
pop
add
and
pop
jecxz
push
inc
lahf
pop
jle
stos
jae
sub
lods
test
stos
and
sbb
sub
mov
cmpb
ret
push
and
push
mov
or
stos
sub
lods
adc
pushf
jo
jecxz
adc
push
test
scas
push
sbbl
lret
push
jne
jg
push
popf
pop
dec
jl
in
mov
dec
cmpsb
mov
adc
movsl
int
iret
sti
or
stos
xchg
shlb
push
mov
push
mov
lock
xchg
stc
mov
ljmp
enter
sarb
bnd
xchg
stos
xor
cmp
popf
add
inc
sbb
fwait
testb
std
cld
iret
nop
mov
test
mov
test
jae
int
lcall
sbb
imul
call
jmp
mov
into
stos
dec
mov
dec
hlt
stos
cli
andl
and
ret
test
push
cmp
popa
into
mov
ds
mov
stos
mov
mov
stos
inc
sbb
jnp
dec
mov
xchg
faddl
mov
sub
in
stos
jb
testl
stos
bound
sub
jo
addr16
ss
xorl
and
cmp
cld
pushf
out
inc
mov
add
fwait
inc
push
stos
lcall
mov
stos
sub
mov
daa
arpl
lds
aas
stos
cmp
test
and
imul
pop
push
test
popf
aam
fsubl
pop
xor
xchg
loop
mov
movsb
std
mov
pop
stos
fnstenv
cmpsb
dec
pop
mov
cmp
mov
jl
jge
addr16
sub
inc
pop
xlat
shlb
hlt
push
aas
subb
pop
fincstp
cltd
negb
sub
cmpsl
mov
pusha
mov
pcmpgtw
stc
and
test
jo
or
mov
xchg
std
cmp
out
or
jmp
sahf
imul
in
and
mov
mov
test
and
jmp
cmp
push
sbb
ret
movsl
les
xchg
into
pushf
stos
out
xor
mov
pop
daa
stos
or
inc
gs
jle
or
arpl
inc
stos
imul
mov
push
adc
jns
push
jl
pop
xorb
cld
stos
movsb
pop
sbb
jecxz
scas
jae
push
stos
add
enter
and
in
mov
push
ljmp
cli
push
push
int
cmp
cld
lret
and
insl
pop
stos
adc
dec
xchg
fwait
in
test
cli
pop
loopne
stos
mov
repnz
mov
xchg
xchg
push
jmp
cmpsl
ret
out
shrl
lret
cltd
ds
stos
cwtl
rcrb
pop
jmp
out
mov
mov
stos
sub
add
mov
pop
ss
lret
sti
enter
xor
stos
clc
cmc
pop
jmp
dec
lods
push
aaa
fwait
test
jge
xchg
imul
std
leave
mov
jae
or
sub
push
lods
imul
es
sub
cmp
aam
sbb
int
inc
ficoml
dec
stos
insl
clc
aas
cld
imulb
jp
test
adc
fisttps
imul
inc
stos
jl
frndint
mov
cmpsb
cmp
lahf
subb
iret
pushf
imul
enter
subl
pop
and
daa
movsb
add
xchg
clc
mov
mov
stos
xchg
or
mov
stos
addr16
stos
inc
dec
test
push
stos
push
int3
dec
ror
sub
xlat
test
mov
or
mov
fnsave
xchg
rcr
inc
loop
icebp
mov
push
dec
ja
sub
je
push
pop
cmp
scas
fisttpl
daa
movsb
mov
xor
or
stos
jmp
cmp
xchg
stos
fldcw
push
push
stos
sbb
andl
dec
lret
and
cs
jb
insl
inc
mov
jmp
call
enter
sbb
loop
jmp
stos
cld
rclb
or
stos
ret
out
sub
or
or
imulb
jp
idiv
stos
push
aaa
sbb
push
iret
pop
xor
cmp
daa
mov
jno
sahf
xchg
push
mov
in
dec
les
lea
jmp
test
mov
in
mov
jle
or
jg
and
idiv
adc
push
rcrl
or
stos
fwait
cltd
mov
out
cmc
addl
jg
mov
mov
sub
rclb
adc
jp
xor
stc
jbe
stos
xor
data16
stos
xchg
in
cmpb
arpl
gs
xchg
out
xor
inc
ret
aas
adc
shr
int
mov
mov
push
rol
stos
cmc
adc
outsb
push
mov
iret
ror
jmp
fdivl
xchg
lahf
mov
mov
repz
push
sbb
pop
adc
pop
lret
cld
test
stos
mov
jecxz
insl
dec
push
js
test
sahf
scas
shlb
cmc
stos
mov
xor
stos
push
std
mov
adc
stos
arpl
cmp
pop
and
and
cmc
push
xchg
cmpb
push
ljmp
aad
xor
andl
ljmp
lods
das
rorb
push
add
jmp
inc
stos
pop
outsl
sbb
push
inc
imulb
fsts
shlb
mov
push
mov
out
loopne
jl
dec
lret
in
jecxz
icebp
ja
repnz
cmpsb
push
stos
jbe
mov
jg
xchg
test
or
push
push
mov
jns
addr16
loope
ljmp
test
stos
mov
or
xor
stos
iret
and
mov
dec
leave
stos
push
incl
scas
xchg
pop
cmpsl
and
sahf
xor
in
sub
fldcw
stos
and
dec
movsb
shll
fldenv
adc
ljmp
mov
dec
imul
xchg
jae
pop
popf
cmc
arpl
fadds
push
push
jge
mov
mov
mov
stos
imul
jnp
movl
xor
ret
stos
insl
shrb
or
add
mov
jb
dec
daa
jmp
push
rorl
add
stc
pop
sti
dec
cmp
aaa
inc
dec
loopne
cmp
add
jecxz
mov
sahf
popa
and
xchg
push
xchg
adcb
negl
xor
pop
stos
das
out
insb
mov
jecxz
pop
loopne
adc
add
sub
int
and
pusha
jnp
imul
into
jo
pop
stos
orl
jbe
popa
push
stos
and
or
mov
lods
mov
fisubrs
clc
stos
sub
or
stos
dec
loope
adc
pushf
iret
and
push
xor
inc
mov
scas
je
jl
and
movsl
test
loopne
jns
ret
sbb
in
lcall
bound
sbb
les
mov
cmp
and
aaa
stos
jmp
adc
ljmp
xor
fisttpll
inc
sbb
pop
inc
xchg
out
test
jp
xchg
add
mov
cld
je
out
mov
in
jb
xchg
les
inc
ljmp
stos
ja
adc
addr16
xor
dec
test
and
stos
push
or
xchg
int
stos
sub
imul
mov
nop
test
mov
mov
mov
ret
adc
stc
je
xchg
push
mov
fs
xchg
loopne
sti
stos
mov
jne
shll
sbb
fnstsw
pop
jmp
sti
cmp
int3
xchg
xor
pop
xchg
arpl
stos
cmpsb
sub
loopne
dec
push
dec
jge
push
adc
gs
arpl
mov
jg
movsl
icebp
jb
rcrl
lods
popf
sbb
pop
sub
push
mov
aad
test
mov
or
out
loopne
hlt
push
inc
and
mov
and
fldcw
test
mov
addl
mulb
pushl
minps
cmpb
lods
mov
fiadds
inc
push
jmp
add
lcall
in
test
sbb
stos
jo
loope
mov
lods
add
xor
stos
shll
dec
and
pop
mov
imul
mov
xor
in
mul
orl
sub
pop
lret
mov
mov
ds
out
adc
stos
dec
loop
xor
out
rcr
mov
mov
or
mov
lods
xchg
imull
and
ret
shrb
addr16
out
xor
xchg
push
in
test
ret
lret
lret
xor
sbb
push
mov
ja
xchg
or
stos
data16
push
dec
pop
stos
mov
fs
stos
popa
imul
dec
push
cmpsb
inc
xor
insb
sub
lock
nop
jmp
adc
js
into
sbb
push
pop
arpl
clc
scas
jg
insb
lods
mov
push
fistl
lahf
adc
inc
jmp
mov
push
lds
xchg
call
stos
rcrl
leave
loopne
stos
mov
cmp
mov
addr16
out
jo
cltd
adc
stos
pop
orb
loopne
jmp
fwait
fs
in
stos
dec
xor
mov
push
mov
icebp
stos
iret
push
jmp
es
clc
sub
xchg
jns
cmp
push
mov
mov
jl
sub
outsl
icebp
xchg
cmpsb
adc
jecxz
pop
jmp
shr
push
push
adc
imul
jmp
add
clc
repz
mov
jne
and
bound
cwtl
push
dec
int
mov
stos
aas
outsb
pop
inc
sbb
clc
lods
ljmp
test
push
mov
popa
aad
push
in
mov
lods
outsl
in
mov
sbb
jg
pop
jo
cmp
lods
movsl
inc
xor
push
mov
jge
pop
bound
pushf
push
cmp
sbb
sbb
nop
cmp
daa
outsl
lahf
mov
fwait
mov
xchg
inc
mov
dec
insl
fistpll
testl
fwait
call
cmp
xchg
and
imul
xchg
sbb
loop
stos
hlt
mov
popa
cli
sub
dec
and
test
mov
push
mov
jb
dec
or
stos
ret
loope
gs
stc
jecxz
add
scas
lods
stos
push
lcall
mov
pushf
scas
mov
std
pop
test
sbb
xlat
subl
pop
sub
push
ret
mov
daa
xchg
cmpsl
jp
mov
stos
test
cmp
stos
repz
sarl
xchg
jne
mov
rcrb
ret
xor
data16
add
sub
adc
stos
jl
in
fdivr
in
out
jnp
push
mov
or
test
dec
add
jb
cmc
sub
or
mov
xchg
xchg
lock
jno
mov
imul
or
stos
je
jecxz
cmc
std
imul
int3
es
cmp
xchg
adc
cmpsl
stos
sbb
mov
and
xor
sbb
or
add
sub
imul
lret
stc
lahf
sbb
loop
stos
push
fildl
std
push
xchg
ret
lret
addr16
dec
adc
outsb
sub
xor
jg
mov
in
aaa
stos
pop
dec
test
cmp
xchg
mov
stos
mov
test
ficompl
lock
mov
mov
test
push
adc
xchg
lods
cmp
leave
jg
pop
mov
mov
fs
adc
bound
xlat
mov
stos
lds
ret
cli
adc
or
lret
mov
push
into
stos
ja
outsl
fwait
xor
aas
aam
mov
out
or
jno
jmp
pop
adc
fwait
sub
test
cmp
pop
scas
sbb
ss
mov
pop
movsl
mov
aaa
rcrl
aam
xchg
push
stos
mov
sbb
loope
push
cli
mov
stos
rcl
xorl
stos
xlat
mov
fsubrp
sarl
out
movsb
loope
sub
repnz
popf
cmp
loop
xchg
addr16
bound
imull
stos
addb
cmp
xor
imul
outsl
jb
inc
enter
cmp
adc
sub
mov
xor
stos
jp
sbb
lds
stos
inc
fs
lods
mov
xor
das
ljmp
shll
inc
sbb
or
gs
stos
les
stos
mov
daa
imul
or
ret
push
imulb
jecxz
xchg
sbb
pop
push
in
and
mov
jle
fisubrl
pop
scas
cmc
push
stos
test
aad
stos
dec
aaa
push
out
clc
adc
cmp
lret
mov
xchg
pop
out
hlt
stos
mov
mov
stos
sbb
outsl
into
mov
xor
inc
pushf
jnp
arpl
ds
dec
stos
xlat
scas
shl
push
stos
cmpsl
shrb
jne
push
stos
adc
dec
push
xchg
mov
and
stos
leave
ljmp
stos
sub
dec
xor
aas
xchg
mov
sub
cwtl
insb
lahf
js
xchg
je
outsl
mov
jecxz
jmp
das
sbb
into
sub
aaa
in
inc
inc
daa
lahf
cmp
or
movsb
stos
fistl
sub
mov
inc
loopne
pop
inc
and
pop
stos
dec
jp
cmc
xchg
sub
push
mov
xchg
in
jae
int
adc
lods
ror
xor
imul
popf
pop
xchg
lret
adc
mov
xchg
mov
out
stos
add
loope
lods
stos
xor
cmp
and
popf
repnz
push
popf
out
lret
xlat
mov
stos
mov
mov
push
stos
mov
and
sub
bound
jge
movl
push
xchg
fadds
pusha
scas
stos
ror
inc
mov
imul
sbb
popa
subb
dec
dec
stos
ja
daa
pop
push
imulb
pop
mov
stos
dec
jcxz
shrb
xchg
add
xor
add
push
stos
das
mov
add
out
sbb
adc
dec
lods
outsl
lods
pusha
or
loop
inc
jns
stos
pushf
push
movsl
jl
imul
sub
enter
popf
and
les
cmp
in
test
add
imul
adc
insl
in
inc
imul
jnp
push
or
mov
mov
and
xor
push
pop
loop
std
ja
stc
mov
scas
pushf
stos
int3
cld
pop
shlb
mov
mov
stos
push
push
mov
dec
cmpb
mov
xor
into
jge
es
call
cltd
and
cs
clc
ffree
out
pop
stos
xor
xor
and
loope
lret
mov
sub
scas
xor
xchg
pop
call
add
out
scas
shll
xchg
aas
and
int3
lods
pushf
stos
roll
mov
jmp
push
in
mov
aam
iret
test
cmp
ljmp
imul
adc
jge
jno
mov
add
xchg
insl
mov
pop
stos
xchg
pop
inc
dec
push
dec
mov
mov
sbb
pop
lret
inc
mov
jle
stos
aad
loopne
dec
jl
or
dec
movsb
mov
popa
stos
adc
push
orb
xor
dec
and
mov
stos
loopne
add
call
stc
sahf
stos
outsl
pop
pop
dec
arpl
xchg
subb
dec
mov
stos
sbb
in
test
movsl
or
stos
inc
cmc
mov
cwtl
sub
inc
push
push
lock
add
aaa
mov
mov
jno
dec
add
mov
dec
cld
movsb
jl
dec
dec
inc
and
cmp
push
stos
or
stos
add
push
mov
orl
add
stos
and
adc
jns
push
push
movsl
or
fbld
imul
and
push
mov
enter
push
lods
out
stos
bound
adc
push
imul
pop
mov
aam
test
adc
or
stos
mov
jl
pop
mov
xchg
flds
xchg
mov
ret
lcall
loopew
pop
jbe
aad
dec
test
imull
xor
ret
xor
stc
sub
pop
sbb
imul
and
lahf
mull
das
stos
sub
xor
nop
stc
loopne
test
lahf
repz
jns
pop
ficompl
xchg
and
das
bound
and
mov
les
insl
lahf
dec
lcall
mov
popf
dec
icebp
stos
scas
loope
shrb
faddp
lret
mull
and
test
pop
cmp
stos
xchg
mov
out
arpl
pmaddwd
xchg
nop
stos
xor
lahf
xchg
test
pop
lret
test
das
loop
dec
xor
jbe
enter
cltd
test
jecxz
and
sbb
mov
iret
or
cmp
ret
cltd
inc
out
xor
roll
int3
add
stc
cmp
scas
ss
insl
repnz
stos
rclb
in
popf
fsubrs
adc
jb
lcall
dec
stos
lahf
mov
jne
mov
imul
mov
jb
cmp
fldenv
cmpsl
stos
hlt
mov
jmp
stos
addr16
fidivs
mov
in
ret
mov
cli
push
stos
lret
xchg
repz
xor
movsb
stos
iret
mov
bound
adc
fistpll
js
stos
jp
arpl
cmp
pop
stos
ljmp
out
push
stos
xor
cmc
xchg
xchg
les
jge
inc
pop
stos
fcoml
int
cmp
jg
imul
push
fldcw
push
stos
and
push
and
stos
inc
out
daa
or
pop
xchg
pusha
repnz
repz
std
jl
push
stos
cmp
loop
call
mov
adc
sub
mov
mov
jge
shlb
sub
stos
mov
sbb
stos
xchg
add
cmp
fadds
jle
pushf
dec
inc
in
stos
sub
cld
push
sub
sbbl
mov
add
pushf
cwtl
jl
or
push
push
into
outsb
stos
or
pop
sbb
insl
sbb
shrl
lods
push
sbb
subl
popf
gs
xchg
ss
test
test
mov
cs
cmp
sbb
mov
mov
cmp
mov
mov
addr16
xrstor
add
xor
cs
fcomps
stos
jno
push
xor
jmp
stos
adc
jle
outsb
jmp
sti
mov
fcom
scas
or
stos
sub
sub
push
cwtl
in
push
xchg
stos
outsb
xor
fidivs
or
movsb
adc
sub
leave
fnstenv
stos
aad
out
out
adc
xor
jno
cmp
stos
nop
mov
stos
test
add
stos
cmp
mov
xor
int3
rcrl
or
bound
inc
sub
push
mov
lock
lds
lret
cmp
aas
jno
adc
or
mov
test
or
mulps
loope
mov
dec
pop
aad
sbb
jnp
or
xor
mov
mov
and
stos
cmp
daa
data16
std
push
mov
in
pop
daa
xchg
inc
pop
pop
xchg
stos
or
and
loop
hlt
mov
sbb
mov
repnz
or
lahf
push
stos
lret
add
les
add
lods
mov
fwait
mov
cmc
out
pop
ljmp
xchg
ljmp
std
test
es
cmp
mov
inc
xorb
and
aas
push
jge
cmc
lods
pop
mov
stos
adc
mov
les
lds
mov
dec
stos
dec
push
aas
pop
int3
sub
or
lret
shl
stos
cmp
xchg
add
push
repnz
ljmp
stc
loope
mov
jnp
push
sub
shrl
jmp
ficoml
stos
or
iret
nop
jp
cmp
inc
dec
stos
mull
and
out
pop
cmp
popf
outsl
jg
scas
js
inc
cmpsl
lods
stos
push
dec
in
in
sbb
push
mov
sub
adc
lret
mov
aam
outsb
and
push
jl
lds
pop
mov
lods
and
cmc
add
jg
adc
js
add
push
jnp
jl,pt
mov
add
xchg
fucomi
or
adcl
sub
insb
scas
ret
fwait
add
inc
xor
mov
xchg
push
cmp
mov
ret
xor
std
aad
stos
clc
push
cmpsl
and
in
stos
inc
xor
push
mov
dec
js
xchg
fwait
mov
paddq
lcall
add
xchg
mov
clc
scas
stos
lock
test
mov
push
das
pop
dec
sbb
xchg
xchg
sar
jecxz
sub
pop
push
popf
in
xchg
push
fwait
outsb
std
stos
xchg
lret
scas
adc
into
arpl
fidivs
cmp
stos
imul
pop
mov
fcompl
scas
mov
popf
shrb
push
cmp
xorl
xor
leave
push
outsb
jmp
lahf
loope
fldt
jb
ds
inc
shlb
jnp
inc
daa
mov
mov
sub
les
xor
xchg
sbb
xor
jp
stos
push
cld
mov
out
mov
sarb
jecxz
movsb
stos
daa
in
subb
mov
xor
int3
mov
int
testb
das
inc
jle
dec
stos
adc
jmp
jmp
adcl
sahf
fwait
mov
stos
lods
sub
sbb
dec
outsb
mov
shl
packuswb
nop
stos
mov
push
jae
jmp
sbb
stc
mov
xchg
sub
into
mov
mov
scas
int
xchg
sub
aad
jbe
mov
push
jo
mov
xchg
mov
pop
mov
xchg
mov
lea
push
jg
in
xchg
dec
pop
xor
stos
scas
leave
bound
add
add
adcl
mov
call
xor
xor
pop
ljmp
jbe
adc
stos
imul
out
inc
aam
mov
stos
mov
fisubs
lret
shl
xchg
test
sub
cmpsb
scas
cmp
stos
outsl
mov
jbe
pop
stos
out
ss
or
dec
mov
add
mov
xchg
fwait
jo
cmp
mov
es
pop
sub
lods
pop
jmp
mov
xchg
add
in
dec
inc
push
stos
fists
push
bts
add
sbb
out
daa
push
inc
popa
sub
mov
stos
adc
fninit
ss
jmp
sub
gs
jns
stos
xchg
nop
shlb
jb
cld
imul
test
xchg
ljmp
sub
adc
xchg
jnp
push
jecxz
gs
push
inc
sub
dec
jmp
in
int
jge
xchg
mov
jnp
inc
mov
and
xor
lret
stos
fsubrs
out
mov
int3
test
pusha
aaa
mov
stos
ja
ss
insb
pop
lock
mov
movsl
cmp
mov
push
xchg
andl
lahf
xchg
subb
and
stos
aas
pop
jg
shlb
or
pminsw
test
shlb
jno
cmpsb
push
and
out
stos
and
popf
aad
mov
lcall
fdivl
xor
mov
or
pop
stos
shll
xchg
push
push
sar
stos
sub
stos
insl
popa
inc
push
push
stos
dec
xor
xchg
fldt
pop
or
mov
mov
loope
jb
nop
cli
stos
cmp
xchg
ds
stos
push
jg
stc
mov
pop
jmp
xlat
mov
stos
pushf
push
xor
jle
push
jmp
dec
lods
inc
clc
and
pusha
dec
shll
xchg
sbb
dec
xchg
in
sti
rcr
lds
and
push
pop
xchg
adc
das
xchg
sub
sub
je
nop
jbe
daa
in
rorl
fwait
or
mov
mov
cmpsl
push
add
mov
push
insb
sahf
push
mov
cmp
sub
and
push
mov
mov
dec
test
dec
jge
ljmp
push
jb
fsubrl
int3
push
test
inc
movzwl
cmp
xchg
push
xchg
stos
bound
sbb
mov
xchg
stos
mov
push
jns
faddp
stos
fsubrs
adc
xlat
jp
inc
test
mov
sbb
call
das
pop
and
fiadds
xlat
push
movsl
xor
and
movl
leave
scas
shll
rcrl
dec
xchg
and
imul
xlat
pop
mov
or
stos
dec
mov
ljmp
mov
test
push
xchg
nop
fdivrl
stos
and
jbe
and
test
xchg
jge
ret
mov
jp
in
sbb
mov
dec
and
pushl
fnsave
aam
call
clc
sarl
dec
jmp
ret
out
cmp
xorl
cltd
int
je
push
mov
in
scas
shrl
mov
leave
movsb
mov
stos
xchg
andb
lds
push
std
ss
mov
stos
popf
insl
pop
cld
pop
sub
push
adc
cmp
loopne
jne
shrl
jge
cltd
rorl
push
adc
stos
and
ret
add
lret
stos
test
pop
stos
pop
rcr
rorb
out
popa
imul
push
je
stos
repnz
sub
inc
push
push
sub
push
mov
or
sbb
push
cmc
popa
popf
cli
xchg
cwtl
fsubrs
aas
mov
out
add
aaa
iret
push
stos
push
aam
adc
jge
push
idivl
lods
or
mov
mov
sub
popf
adc
cmp
scas
imul
scas
lods
es
adc
filds
mov
out
stos
stos
mov
psubsw
jne
sub
xor
rorl
pop
xchg
sbb
stos
and
mov
ljmp
push
leave
sahf
pop
mov
daa
xchg
lahf
jb
sti
xchg
cmpsl
mov
inc
push
add
cmp
stos
cmp
cmp
fimuls
lods
mov
xchg
stos
and
push
call
in
mov
bswap
fsubrs
lret
or
in
pop
stos
lahf
push
xor
push
xchg
out
pop
dec
push
xchg
add
cmc
scas
push
or
scas
fstp
jae
ds
pop
stos
shr
ljmp
adc
mov
sbb
shrl
fisubs
cmp
jae
andl
pop
sbb
enter
jg
mov
fldt
hlt
jp
out
bound
stos
sub
jl
xor
fwait
jae
iret
pop
orl
mov
dec
lcall
int
cmpl
xchg
cmp
stos
xor
xchg
stos
jle
mov
fisubrl
pop
loop
xchg
in
insl
push
fwait
addr16
in
add
cs
dec
loopne
mov
adc
sub
fimull
stos
daa
xchg
sbb
or
mov
iret
ds
es
jmp
aaa
dec
xor
and
jbe
sti
mov
pop
xchg
sbb
lock
pop
fldcw
and
and
mov
push
stos
adc
dec
cmpsl
ja
stos
lods
sbb
cwtl
insb
adc
in
mov
shrl
sub
push
int
cld
xor
adcb
cmp
out
sbb
sub
fdivrl
mov
movsb
push
mov
pop
clc
stc
aam
ja
xchg
pop
movb
orl
mov
xchg
pop
mov
pusha
lcall
mov
test
sbb
mov
lds
push
mov
sbb
inc
push
mov
repnz
stos
test
in
push
xchg
and
daa
loopne
stos
mov
subb
std
xchg
dec
aas
adc
jbe
stos
pop
out
mov
stos
cmp
cmc
sub
inc
inc
loope
dec
push
mov
push
sbb
jns
pop
jnp
sub
pop
icebp
xor
push
dec
cmp
ds
imul
fwait
in
sub
push
or
lea
xchg
lcall
pop
sbb
lods
cld
stos
mov
push
jecxz
daa
mov
mov
outsb
stos
in
sbb
pop
mov
ljmp
stos
jle
es
outsl
popa
xchg
arpl
int
imul
pop
stos
xchg
or
pop
movsl
sbb
sub
movsb
sti
push
stos
mov
adc
stos
arpl
stc
dec
mov
fsubrl
imull
mov
sahf
mov
ret
scas
jp
aad
das
mov
mov
mov
stos
popf
shlb
mov
push
das
sub
gs
hlt
and
and
cmp
mov
ficoml
jne
daa
sub
or
pop
mov
mov
pop
stos
add
out
sahf
test
inc
pusha
fwait
mov
sbb
addr16
pop
stos
mov
sbb
sbb
inc
adc
sub
arpl
push
xor
cli
lods
jno
add
mov
push
cmpl
gs
popf
xchg
stos
mov
nop
adc
scas
sub
add
outsb
or
stos
cld
jns
xchg
add
bound
mov
cmpsl
mov
orb
sub
movsb
pop
fwait
test
pop
test
stos
rclb
mov
mov
xor
and
mov
inc
fwait
mov
xchg
push
stos
mov
cli
aam
stos
mov
mov
nop
stos
inc
cs
adc
or
jno
jnp
add
and
inc
lret
xchg
cmp
push
loope
ljmp
daa
in
test
dec
hlt
inc
stos
mov
push
and
cmp
daa
out
mov
icebp
dec
cmp
rorb
pop
adc
add
mov
mov
lock
mov
shrl
es
mov
cmp
repz
mov
stos
push
fcoms
into
mov
lahf
es
lcall
aas
xlat
addr16
jmp
subl
sbb
inc
jge
shrb
mov
jae
iret
xchg
negb
dec
jbe
test
mov
sub
sub
fists
cmp
stos
cli
subb
imul
xchg
sarb
mov
leave
cmpsb
aad
fiaddl
mov
cs
mulb
inc
xchg
xchg
subb
mov
jmp
ljmp
out
mov
stos
int
imul
and
lods
lods
mov
bound
push
jg
in
cmpsb
std
cmp
stos
mov
cs
xchg
mov
sub
scas
call
aam
in
fcomps
adc
mov
repz
cmp
and
cmp
mov
stos
es
xchg
push
icebp
add
ds
fstpt
jne
clc
flds
icebp
or
stos
sbb
cmc
jecxz
not
hlt
stos
xor
mov
jae
pop
clc
pop
pop
stc
inc
dec
push
jmp
insl
sbb
pop
shrb
outsl
mov
jmp
push
xchg
lcall
stos
sub
cmp
add
stos
bswap
inc
sbb
xor
das
adc
or
ss
fdivs
filds
push
aas
sbb
stos
and
cmpsl
xor
in
imul
mov
mov
or
add
mov
es
rcl
dec
hlt
adc
stos
jmp
lahf
aaa
mov
in
jg
pop
lret
in
inc
mov
adc
push
and
pushf
mov
push
mov
or
roll
sbb
xchg
cli
adc
add
lods
jmp
xchg
movsl
test
stos
adc
fisttpl
stos
pop
addr16
icebp
jmp
or
xor
pop
xchg
and
imul
xchg
xchg
push
push
fs
imul
push
or
cmc
jnp
int3
pop
subl
xchg
popf
addb
js
push
rolb
pop
jl
insl
loop
push
xchg
stos
mov
cli
pop
pop
iret
jns
stos
dec
and
sub
jecxz
dec
xchg
ret
fistpl
sbb
adc
and
add
push
xchg
int3
xchg
and
cmp
roll
jecxz
add
stos
imul
mov
jmp
xchg
pop
fldl
incl
lock
mov
dec
enter
repz
int
pop
decl
mov
pop
mov
sub
mov
or
push
ret
mov
dec
repz
bound
ss
xchg
and
pop
lock
inc
pushf
stos
push
inc
gs
cmp
fdivp
or
daa
stos
daa
sbbb
mov
xor
jge
or
stos
out
sub
xor
jl
lret
stos
xchg
scas
scas
imul
mov
cmp
movsl
jns
stos
mov
push
ss
out
inc
stos
push
xchg
inc
jge
jp
mov
mov
fwait
xor
jg
mov
inc
and
fistl
pusha
inc
dec
add
cmp
stos
push
and
in
fsubrs
pop
xor
mov
fistl
aam
sbb
test
cmp
lds
shrl
mov
or
mov
jecxz
daa
divl
into
mov
subb
rorl
adc
insb
stos
leave
inc
and
popa
arpl
stos
sub
jo
add
pop
push
push
add
cld
stos
jle
ss
mov
cmp
dec
add
push
lahf
and
add
mov
popa
cmp
pop
jge
stos
sti
ljmp
stos
sbb
add
mov
stos
pop
sbb
fbld
je
dec
cld
ljmp
xor
cld
test
mov
and
inc
add
adc
int3
xor
pop
xchg
jno
push
dec
outsl
push
stos
add
push
xor
pop
and
mov
jns
pop
ljmp
rcrl
mov
mov
addr16
xor
rcl
addb
sahf
fwait
and
sbb
inc
jmp
cmpb
mov
push
xchg
ljmp
aas
sbb
ja
testl
imul
mov
sub
outsb
mov
dec
push
stos
in
inc
xchg
jle
push
cmpsb
jmp
inc
mov
test
stc
stos
and
inc
sub
les
adc
mov
mov
cmp
aaa
xor
imulb
aas
stos
push
adc
xchg
jbe
stos
mov
mov
xchg
and
jmp
repz
shrb
mov
push
aas
adc
leave
xchg
stos
cld
nop
insl
sbb
inc
sub
xchg
insb
test
icebp
fstps
fcomps
fstl
stos
or
inc
mov
adc
stos
icebp
add
scas
push
imul
and
popf
xchg
mov
mulb
and
push
ja
out
push
in
xchg
arpl
icebp
enter
scas
adc
dec
bts
subl
daa
xor
je
dec
subb
outsb
in
pop
inc
fwait
ret
rcr
or
jmp
add
xchg
addb
fimuls
movsb
stos
in
nop
jbe
pop
fwait
cmp
mov
ja
mov
sub
loope
lods
lret
fmuls
add
in
pusha
loopne
pop
out
push
fwait
xor
stos
pop
xchg
idivl
movsb
hlt
jmp
sub
xchg
adc
sbb
push
in
fsts
jae
mov
xor
dec
cs
addr16
pop
outsb
stos
iret
lret
push
in
mov
orl
lea
test
nop
stos
push
stc
and
jne
lods
mov
push
or
add
in
jae
cmp
addb
cmpsl
loopne
fists
mov
jp
lods
mov
adc
test
adc
ss
test
in
in
push
mov
jbe
stos
adc
jnp
lret
inc
scas
es
dec
aas
cltd
ljmp
mov
rcll
pop
and
mov
stos
out
movb
aaa
cmp
mov
fs
out
icebp
rclb
stos
dec
lds
ja
mov
into
insb
add
mov
das
pushf
test
daa
sbbb
mov
xchg
xor
pop
xorb
jnp
and
add
js
inc
pop
sarb
lret
xchg
add
mov
inc
loopne
stos
cmp
sbb
out
xchg
stos
popf
jno
leave
data16
shll
stos
test
xchg
icebp
bound
pop
stos
push
push
jns
push
mov
or
in
cmp
out
in
add
stos
mov
sbb
stos
cmovs
inc
and
push
ss
add
stos
xor
addr16
mov
pop
jne
mov
mov
sahf
loopne
xor
stos
popf
jns
cmc
add
or
loopne
push
stos
sbb
xor
lods
into
xchg
stos
mov
out
sbb
pop
mov
lea
aad
repnz
xor
fwait
neg
ljmp
xchg
imul
or
cmp
and
in
in
daa
sub
fdivrl
cmpsb
in
fnstenv
or
sarl
sub
xchg
jne
lods
pop
stos
bnd
lock
aaa
push
pop
stos
aas
into
icebp
scas
ficoml
or
adc
pop
cmp
jle
push
iret
insb
mov
xlat
mov
pop
fwait
aas
orl
cmpsb
xor
cltd
push
sti
incb
cmc
jmp
push
add
and
sbb
daa
xor
mov
mov
popa
jmp
and
insb
push
repz
jmp
mov
and
stos
lret
dec
mov
inc
push
pushf
mov
sbb
mov
addr16
fsubl
ret
push
imul
jecxz
xor
lods
test
nop
push
stos
cmp
or
push
add
xor
in
imul
mov
shrl
push
mov
mov
into
lock
or
and
push
fwait
sbb
xchg
call
mov
arpl
sub
movsb
scas
data16
mov
sub
sti
ljmp
out
mov
mov
hlt
adc
mov
jmp
mov
mov
mov
scas
mov
adcl
stc
add
fstpt
out
add
stos
jge
rcrb
cmpsb
cwtl
shrl
push
dec
push
mov
int3
dec
push
arpl
lret
xchg
mov
xorb
popf
lods
fadds
icebp
cltd
js
sahf
test
das
inc
cmp
stos
mov
push
aaa
xchg
clc
pop
dec
stos
mov
adc
mov
fdivrl
mov
shl
stos
lret
or
jno
mov
and
out
jnp
sub
stos
subb
mov
push
sub
cwtl
scas
pop
fsubrs
sbb
cmp
mov
or
enter
pop
movsb
xchg
or
cmpsl
cmp
adc
mov
or
dec
dec
xor
gs
imul
data16
cmp
loopne
addr16
and
lcall
inc
jns
xchg
movsb
test
adc
repz
iret
daa
popf
gs
sti
stos
jb
sbb
inc
add
mov
xchg
or
and
out
rolb
lcall
push
sub
scas
inc
and
roll
stos
rcrb
dec
out
mov
pop
out
scas
dec
jmp
jnp
ret
xor
mov
mov
out
add
gs
lea
xor
stc
jl
ret
cmp
fcomip
dec
js
inc
xor
jo
in
aas
dec
mov
repnz
mov
shl
mov
cli
stos
divl
rolb
push
int3
stos
pop
vmovq
push
push
pop
stos
data16
ss
fst
imul
and
mov
daa
dec
test
leave
stos
loop
lret
xor
stos
add
add
xchg
fwait
icebp
aaa
cld
cld
xor
and
pop
or
ficoml
dec
mov
sub
xchg
jb
adc
adc
fnstsw
mov
lock
jl
test
cmp
fstp
fucomp
dec
pop
xchg
or
stos
ret
inc
insl
and
std
pop
fimuls
or
gs
sub
das
fwait
add
mov
xchg
jp
cmp
and
adc
and
fdivs
mov
mov
shlb
sbb
jp
xchg
mov
cmp
xor
shr
stos
inc
adc
bound
enter
popa
add
add
adc
add
stos
aad
jo
push
mov
in
mov
enter
cmc
outsl
stos
mov
out
out
push
les
and
scas
lcall
cmp
iret
cld
cs
icebp
stos
sub
cmpsb
test
stos
jle
pop
sub
cmp
jl
in
movsl
pushf
mov
push
inc
jg
sti
mov
inc
pop
sub
in
fidivs
test
mov
xchg
out
xchg
jl
aas
stos
dec
call
movsl
adc
xchg
sub
inc
gs
push
aas
pop
stos
or
mov
cld
ret
sub
stos
in
dec
cli
stos
mov
dec
enter
xor
stos
jmp
inc
push
lods
inc
stos
in
inc
int3
cmp
mov
pop
stc
dec
push
mov
sub
mov
fbstp
pushf
divb
and
inc
pusha
imul
xchg
jle
mov
mov
xchg
mov
movsl
sbb
push
in
add
add
fisubrl
leave
dec
jnp
fwait
xor
dec
jb
pop
iret
call
push
push
and
add
daa
gs
stos
mov
sahf
mov
and
add
ds
lret
inc
in
shl
push
and
mov
fsubr
xlat
loop
pop
xchg
mov
imul
imul
bound
mov
push
mov
std
cmpsb
mov
hlt
mov
xchg
imulb
cmpsl
dec
inc
lret
out
das
lea
pop
push
pop
insl
dec
shrb
stos
dec
sub
jno
xchg
ljmp
pop
jmp
xor
add
push
stos
add
es
add
push
stos
lahf
ret
dec
sbb
loopne
stos
scas
in
not
fs
stos
les
pop
stc
fstpt
stos
fidivs
iret
daa
aas
jo
xor
stos
mov
xor
sti
add
jo
sbb
lret
fld
cmp
clc
lcall
mov
inc
mov
fidivrs
dec
dec
cmpl
jp
ret
addr16
push
sbb
ss
jecxz
push
or
hlt
stos
imul
insl
add
inc
ja
push
stos
andb
mov
and
add
push
stos
pop
and
xor
mov
int
loope
mov
mov
or
dec
pop
movsb
lcall
jmp
inc
dec
fdivrs
dec
or
stos
mov
xchg
std
add
iret
lock
out
imul
mov
sub
inc
ret
lods
adc
ljmp
pop
rcrl
cld
xchg
or
es
int
mov
ss
movsb
dec
inc
bound
and
and
mov
adcl
stos
add
xchg
gs
push
or
xor
test
aad
sbb
addr16
inc
sbb
xor
shrl
ds
scas
stos
xchg
mov
cs
lea
stos
mov
sbb
fbstp
stos
xlat
sbb
fldenv
sub
or
xor
cmp
or
outsl
jnp
data16
push
stos
lahf
jbe
xor
dec
jge
mov
cld
pop
std
lock
sub
arpl
in
mov
stos
jecxz
dec
test
pop
call
jb
cld
mov
sti
je
mov
data16
into
fwait
js
lods
mov
out
inc
add
bts
jno
jecxz
jp
or
mov
imul
xrelease
dec
mov
in
dec
cwtl
push
mov
xchg
add
stos
mov
fsts
inc
jmp
inc
push
fadd
mov
sub
sub
stos
fsubrs
je
leave
add
in
addr16
fwait
adc
xchg
inc
and
test
sahf
jmp
xchg
xor
mov
jmp
imul
jmp
nop
jl
jp
ret
out
das
lea
mov
loope
imul
mov
sti
lods
adc
and
jge
dec
xchg
stos
jbe
sbb
stos
and
cmp
imul
das
stos
mov
jae
push
roll
pop
jne
inc
pop
cmpsl
in
xchg
sub
pop
cwtl
mov
xchg
stos
aam
nop
rcl
pushf
or
pop
ficomps
jo
pop
jmp
int
xchg
inc
pop
das
scas
adc
stos
mov
lret
xlat
cmpl
scas
adc
stos
mov
inc
cmpsl
mov
jmp
mov
pop
jecxz
mov
jne
xchg
sbb
mov
mov
pop
inc
adc
les
xchg
xchg
jbe
pop
stos
addr16
xor
mov
stos
mov
stos
dec
fstpt
cltd
xchg
mov
jge
shrl
or
pop
gs
sbb
cwtl
xchg
in
fisttps
lods
loope
popa
push
push
stos
jge
fmuls
sahf
xchg
jmp
stos
int
xorb
lcall
lock
mov
cwtl
addb
inc
sti
mov
subl
and
push
fwait
stos
jl
sub
push
nop
or
lea
sahf
scas
sub
push
les
pop
mov
push
bound
xchg
stos
loop
inc
popf
or
stos
adcl
mov
push
in
repnz
subb
into
mov
inc
add
scas
mov
fidivl
pop
std
pop
stos
xor
sbb
or
ljmp
push
xor
and
stos
sbbb
jmp
mov
or
adc
imul
mov
daa
cmp
jmp
lahf
mov
std
and
mov
arpl
cwtl
sbb
stos
fstpt
adc
insb
lahf
mov
push
or
in
ljmp
adc
and
mov
lods
jo
mov
pushf
mov
fwait
dec
call
mov
xor
pop
add
idivl
popf
sub
rcr
xor
stos
les
popf
inc
imul
sub
out
dec
dec
loopne
jbe
mov
cld
das
es
mov
xchg
and
jp
mov
mov
xor
sbb
repz
in
xchg
jno
stos
out
xlat
xor
stos
xchg
fildll
shrl
mov
icebp
stos
lds
pusha
sbb
mov
push
pop
mov
mov
lret
xor
xchg
cli
stos
pusha
cmpsb
cmp
cmp
sub
je
ret
mov
shll
stos
xchg
notb
or
sbb
stos
fistpl
or
lcall
iret
lret
mov
add
call
mov
mov
sub
stos
in
dec
jbe
mov
pop
pushf
adc
stos
aad
gs
iret
xchg
cltd
stos
data16
movb
pop
bound
or
stos
pop
cld
insb
adc
in
fwait
or
imul
push
hlt
stos
clc
push
es
stos
dec
sbb
jl
lret
fs
sbb
push
xchg
fiadds
loope
jbe
cltd
add
xor
push
fwait
mov
in
stos
rol
stos
xchg
mov
lret
mov
outsl
jae
stos
sarb
leave
mov
pop
or
lock
sbb
mov
inc
inc
jno
test
shr
shrb
rolb
stos
jne
sbb
pop
std
pop
stos
pop
in
add
adcb
jae
ret
loop
fsub
or
outsb
sub
arpl
jnp
lods
orl
mov
fstpt
data16
inc
dec
testl
mov
stos
pusha
dec
push
adc
push
divb
je
inc
jmp
mov
stos
pop
pushf
in
mov
stos
andb
out
or
movsl
push
mov
outsb
addr16
jp,pt
loop
testb
pop
mov
mov
inc
mov
aas
push
pop
dec
stos
sbb
add
ds
std
ljmp
xchg
adc
inc
fwait
jcxz
stos
clc
es
pushf
and
lea
sti
sbb
push
je
xchg
pop
inc
out
test
mov
cmp
dec
mov
jecxz
jbe
mov
mov
jo
call
fsubr
mov
scas
mov
cmpsl
adc
stos
outsl
aad
nop
fildl
or
mov
stc
fldcw
mull
stos
clc
loopne
or
mov
push
ljmp
push
ja
xchg
ds
insb
pop
sbb
lds
or
stos
or
cld
cmp
scas
mov
mov
cli
popa
and
inc
mov
pop
pop
and
sbbl
hlt
das
in
aam
aaa
stos
sbb
jbe
jecxz
loop
stos
mov
pop
sahf
lea
or
xor
mov
push
push
add
fwait
mov
dec
stos
out
jle
fldcw
imul
or
lods
mov
into
out
adc
leave
lock
dec
stos
aad
pop
xor
stos
sub
out
inc
les
jnp
sti
dec
outsl
movsb
mov
mov
pushf
ret
xchg
dec
xor
out
clc
jle
fbstp
nop
push
and
movsl
cmp
sbb
mov
cmpsb
int
js
daa
pop
mov
push
ret
dec
push
mov
adc
aad
daa
push
orl
pop
add
mov
stos
std
fucomi
xchg
rcr
cmpsb
mov
mov
cs
xor
ljmp
adcl
and
xchg
fidivrl
jae
shrl
scas
std
loop
stos
enter
iret
inc
push
sbb
add
jmp
int3
and
loope
jle
stos
std
cmp
stos
testb
xchg
mov
push
cmp
sarb
fdivrs
bswap
xchg
cmp
stos
std
jae
test
jo
call
loop
imul
jne
jp
orl
addr16
movsb
cmp
mov
orl
ljmp
xor
insl
inc
and
sbb
fmull
rep
fistps
mov
stos
pushf
mov
xchg
mov
push
jnp
in
sub
add
sbb
stos
push
and
xchg
fwait
jg
cmpsb
jns
imul
inc
mov
jecxz
stos
jmp
fisttpll
int3
lahf
pop
stos
insl
xchg
mov
add
fidivrs
mov
and
pop
std
adc
outsb
dec
dec
cmpl
xchg
sub
dec
out
ret
negb
stos
clc
fs
sub
jl
xor
xchg
out
out
ret
movsb
ror
cs
cwtl
lcall
enter
imul
in
out
je
stos
neg
jbe
inc
daa
jne
stos
adc
gs
les
lods
scas
push
stos
movsb
orb
pop
inc
inc
sahf
stos
sub
sub
jo
ret
popf
push
stos
icebp
adc
cmc
fwait
popa
pop
push
lret
sub
test
cmpsl
aam
jmp
sub
push
add
fldt
sahf
inc
test
mov
stos
pusha
arpl
mov
jmp
push
stos
loop
inc
pop
and
pop
or
push
xchg
xor
xor
pop
jmp
out
popf
shll
add
test
or
out
in
push
push
popf
lea
mov
clc
pop
stos
test
subl
xor
addr16
mov
lock
push
stos
and
xor
fstl
mov
scas
jnp
xchg
mov
push
cmp
testl
fdivr
mov
mov
or
xchg
inc
mov
outsl
loopne
in
adc
lea
imul
dec
stos
mov
fs
add
stos
insb
push
push
jmp
push
stos
orb
push
dec
ja
mov
adc
in
sahf
and
xchg
adc
jecxz
outsl
sbb
aad
loop
mov
dec
xor
inc
and
or
mov
sub
cld
cmp
mov
jae
fcmovnb
outsb
stos
pop
sbb
scas
or
mov
ljmp
pop
mov
dec
and
sub
push
les
daa
scas
xchg
push
jae
stos
int
mov
pop
stos
jmp
mov
xor
scas
xchg
rcrl
push
inc
lods
test
stos
aad
push
mov
jbe
fs
in
stos
mov
ret
movsb
cli
movsb
shll
mov
pop
push
pushf
jnp
and
cmc
arpl
add
ljmp
and
lock
push
or
xor
mov
imul
lret
in
fcmovnu
mov
dec
jge
stos
sub
and
fwait
mov
ss
imul
stos
fcoml
inc
addr16
or
int3
stos
and
imul
jbe
shrl
mov
xchg
add
es
popf
adc
addr16
jnp
ljmp
jbe
dec
jmp
stos
xchg
addr16
fimull
pop
stos
int
cltd
mov
stos
xchg
xchg
dec
dec
cld
cmc
dec
cmp
sub
sub
mov
sbb
rep
pop
inc
mov
xchg
out
sub
xchg
repz
or
push
cli
popf
aad
or
push
mov
into
inc
stos
out
push
cmp
fsub
jmp
jmp
jle
push
inc
stos
sbb
jbe
sti
adc
xlat
xchg
in
int
xchg
dec
xchg
mov
imul
mov
into
jae
lea
adc
stos
fs
aas
insl
mov
adc
idivl
loope
fists
sub
xchg
iret
mov
rclb
xchg
or
jl
xor
inc
jle
adc
jb
movsb
cmc
pop
fwait
cwtl
psubw
icebp
shrb
adc
pop
mov
stc
andl
movsl
mov
stos
pop
inc
insb
popf
sub
cmp
push
push
icebp
out
fisubl
jno
lods
xchg
jmp
cld
or
xchg
lahf
stos
mov
and
jo
mov
je
jbe
stos
neg
lret
and
imul
inc
nop
enter
xor
xchg
in
lock
pop
pop
push
inc
mov
divl
loop
mov
movsb
pusha
mov
inc
push
dec
xor
mov
and
dec
fisttpl
imul
ret
dec
js
out
cmp
push
mov
aad
stos
or
pop
stc
xorb
stos
mov
jge
mov
out
leave
inc
cld
push
or
jbe
cmp
push
stos
icebp
pusha
lods
imul
imul
inc
mov
popf
cwtl
and
mov
xor
stos
xor
js
lret
stos
inc
lret
inc
push
dec
lahf
adc
lcall
fs
cmp
mov
mov
push
adc
xor
adc
push
lcall
cmpsl
pusha
stos
jno
aad
xlat
mov
mov
mov
shlb
sub
movsb
dec
cmp
pusha
mov
popf
out
stos
push
inc
sub
pop
mov
sub
mov
jp
push
sbb
xlat
mov
pop
stos
out
lock
stos
inc
pushf
lret
xor
lret
xor
fwait
jno
stos
repz
add
push
xor
xchg
pop
stos
pushf
stc
inc
jno
imul
push
mov
mov
test
jmp
stos
rolb
xor
push
sbb
in
das
stos
andb
fisubrs
pop
insb
data16
call
stos
lahf
and
inc
push
cmp
icebp
cmp
mov
jp
stos
sub
clc
mov
or
push
leave
xor
xor
lret
push
jmp
push
xchg
push
in
hlt
cmpl
addr16
inc
mov
sub
jp
or
addr16
scas
dec
xchg
test
imul
sbb
xchg
clc
inc
mov
cmp
stos
les
and
mov
cmp
and
sbb
shlb
mov
sbb
stos
adc
cmpl
jbe
or
sti
stos
clc
call
ljmp
jns
pop
stc
adc
or
jno
nop
sub
imulb
rcrl
mov
pop
enter
and
push
xchg
shlb
push
pop
add
xchg
add
out
into
jnp
xor
js
sub
leave
mov
pop
jg
stos
in
popa
aad
data16
ljmp
add
jmp
pop
xchg
mov
nop
and
dec
insl
xchg
stos
jp
pop
aas
push
jmp
mov
stos
sub
mov
out
stos
pop
dec
test
hlt
std
icebp
or
sub
shrb
int3
fbstp
stos
mov
fldt
mov
data16
inc
and
jg
mov
lods
nop
add
adc
insb
push
sub
shrl
icebp
das
mov
inc
xor
mov
in
imul
stos
sub
push
mov
mov
add
andl
stos
mov
push
dec
ds
cld
push
sarl
call
xorl
stos
lea
call
scas
mov
stos
adc
enter
sti
fidivrs
push
xchg
or
bound
jbe
ficoml
adc
pop
or
hlt
roll
idivl
scas
jo
inc
test
mov
into
je
xor
mov
stos
ss
jle
xor
cmpsl
bound
bts
sbb
pop
mov
subl
sub
mov
pop
dec
andl
fistpll
std
mov
push
out
mov
xor
lea
cld
mov
mov
jp
inc
pop
and
in
lock
jmp
vmwrite
inc
mov
imul
scas
add
popa
push
or
lea
test
lcall
stos
add
aad
and
in
imul
and
dec
jns
es
mov
jbe
int
rorb
mov
jl
inc
add
out
cmp
pop
inc
xchg
jne
dec
push
jmp
cmp
test
cwtl
sbb
push
mov
adc
stos
xchg
xor
jno
mov
in
inc
jne
xchg
push
inc
pusha
mov
mov
jb
subb
shll
stos
sbb
mov
push
jb
mov
stos
into
mov
pop
ret
and
inc
mov
insb
adc
arpl
mov
mov
jnp
xchg
outsb
pop
stos
add
push
push
mov
adcl
sub
fwait
jmp
adc
lods
lods
into
inc
imul
scas
inc
test
or
call
inc
mov
in
stos
repnz
cmp
subb
pushf
test
jmp
jg
fstpl
dec
std
xchg
scas
sub
mov
mov
out
cmp
ret
mov
adc
xor
sbb
sbb
stos
sti
and
jmp
pop
jecxz
xchg
mov
mov
pop
lds
inc
mov
inc
mov
jne
out
push
stos
xchg
loopne
lods
mov
cmp
stos
mov
xor
arpl
sub
jno
aad
push
dec
leave
sub
pop
xchg
add
jge
lahf
mov
sti
js
les
fmull
mov
pop
scas
iret
imul
inc
mov
jle
add
in
cmp
iret
pop
lahf
jbe
xorl
add
cmpsb
frstor
jmp
sbb
aas
outsb
push
popa
stos
enter
mov
inc
loope
loop
xchg
outsl
dec
stos
imul
outsb
mov
stos
nop
movsb
sub
push
aam
or
or
insb
stos
sbb
dec
mov
pop
scas
stos
roll
insl
gs
pop
fisttpll
adc
mov
and
cltd
lds
add
lock
mov
dec
loope
jmp
sub
sub
data16
fldt
test
repz
loopne
mov
adc
xor
cli
lcall
stos
pop
cmpb
imul
adc
jge
cld
add
push
popf
dec
mov
dec
mov
lea
fiadds
and
push
stos
adc
sub
rcl
mov
jmp
xchg
xlat
pop
mov
inc
sar
mov
stos
mov
aaa
mov
cmp
aad
mov
sub
push
mov
inc
sti
cwtl
adc
mov
pop
int3
stos
xor
movsb
xor
add
ficomps
cmc
addb
adc
mov
ja
clc
loopne
stos
lcall
call
sub
or
mov
scas
lahf
stos
out
pop
inc
jg
xor
stos
insb
dec
and
outsl
stos
push
fdivs
mov
sub
xor
xchg
int
xchg
or
test
cwtl
inc
push
cltd
mov
pop
stos
cvtps2pd
outsb
decl
sarl
out
js
imul
mov
xchg
stos
push
adc
sahf
cmc
stos
addb
mov
je
mov
add
xchg
outsl
repnz
lcall
shrb
sub
fsubrp
jae
pop
cmp
shlb
das
stos
sbb
push
in
jnp
jmp
out
int
lods
out
aam
or
push
push
std
clc
fwait
aad
push
stos
xchg
addl
mov
ljmpw
imul
shll
xchg
push
jae
xchg
jl
mov
mov
insb
addr16
or
pop
xchg
roll
imul
xchg
cld
xchg
or
imul
and
and
jmp
and
scas
shrb
pop
aad
data16
push
stos
stos
add
fwait
xchg
mov
mov
das
lds
push
test
pop
sub
lcall
cmp
cltd
imul
movsb
jnp
stos
xchg
jne
rcrb
je
and
push
aas
stos
jno
fsubrs
push
fildl
xchg
adc
add
push
pop
test
jmp
xchg
inc
stos
mov
or
stc
adc
inc
mov
lret
mov
xor
mov
mov
in
dec
mov
dec
leave
cmp
movsb
imul
rclb
mov
sub
sub
add
stos
arpl
pop
or
sbb
aaa
add
push
notb
inc
stos
mov
add
insb
icebp
mov
jl
sbb
pushf
push
and
aad
inc
fisttpl
add
popa
mov
jge
lret
fnstsw
jae
xchg
std
jmp
or
sti
in
lds
rorl
dec
jmp
out
insl
sar
pop
mov
ret
push
repz
ficompl
cmp
stos
cmp
lds
test
lcall
jmp
or
jle
in
aaa
aas
stos
mov
lahf
pop
pop
stos
dec
std
lret
sbb
lcall
lret
stos
mov
pusha
int
sub
and
adc
xchg
arpl
shrb
mov
mov
mov
mov
push
push
mov
cmpsl
cli
xchg
mov
sbb
push
insb
fistpl
les
push
mov
fldcw
in
cmpsb
sub
popa
dec
mov
stos
sub
mov
cmpsb
add
add
arpl
imul
pop
jbe
mov
fidivrl
push
mov
and
out
push
xchg
stos
lcall
sbb
cmpsb
imul
stos
stos
repnz
ds
ss
imul
lea
in
jno
xorl
adc
popf
pop
aas
mov
stos
loope
stc
cmc
push
xchg
jmp
push
push
insb
lea
push
test
scas
ror
or
push
inc
lods
dec
imul
stos
and
jmp
int
stos
push
push
out
xlat
cmp
stc
add
or
scas
mov
cmc
mov
lock
lds
jne
stos
sbb
pop
repz
cmp
sbbb
sub
dec
xchg
cli
frstor
stos
or
add
stos
outsb
test
sub
in
pushf
or
cwtl
jmp
and
dec
cmp
xor
adc
sub
xor
mov
pop
stos
mov
dec
adc
stos
mov
in
or
and
mov
sub
sub
inc
push
push
mov
xor
stos
repz
push
stos
and
or
leave
pusha
cmp
lret
iret
xor
scas
dec
xor
dec
pop
push
outsl
arpl
xchg
mov
daa
or
xor
mov
lods
stos
mov
popa
mov
xchg
dec
stos
pop
or
and
mov
dec
loope
inc
int3
ss
pop
scas
in
vpshab
insl
imulb
call
sbb
mov
push
push
mov
aad
imul
mov
adc
fldenv
sub
stos
jo
ret
pop
or
adc
and
popl
icebp
cmpl
loop
adc
cli
jmp
lock
stos
test
pop
mov
jmp
mov
pop
xor
lret
imul
push
stos
das
test
out
mov
ret
push
xchg
mov
mov
loopne
rorl
gs
jg
mov
iret
fidivrl
adc
push
sbb
pop
mov
insl
sbb
dec
pop
push
jno
jmp
mov
popa
imul
mull
cld
adc
mov
jae
xchg
mov
lods
mov
inc
fimuls
cmp
iret
adc
mov
imul
mov
pushf
cmpsl
mov
jns
stos
dec
jno
int
stos
ds
lea
add
and
inc
divl
jl
sub
js
ss
inc
fs
push
add
mov
jg
imul
insb
and
push
push
xchg
ljmp
and
inc
jmp
stos
jl
sbb
mov
push
std
or
adc
jp
stos
adc
sbb
stos
test
jmp
lods
push
fwait
mov
sbb
loop
push
popf
cli
xchg
imul
test
shrl
scas
or
cmp
dec
dec
inc
fnstenv
outsl
mov
push
mov
jnp
mov
aam
stos
push
fisubrs
daa
inc
cmpsl
pop
jl
mov
xor
cmp
or
jmp
orl
xor
cli
adc
pop
int3
mov
stos
xchg
jne
adc
mov
mov
inc
xor
dec
mov
dec
das
pop
push
subl
mov
scas
outsl
movsb
scas
jo
mov
out
jl
jg
sahf
mov
cmpsl
lods
cwtl
jl
stos
jmp
ds
and
imul
mov
loope
stos
jae
ds
and
stos
pop
pop
adc
ret
or
icebp
subl
movsbl
lods
push
stos
mov
xchg
js
out
test
mov
stos
cld
loope
subl
jne
lods
pop
adc
stos
test
imul
je
pop
push
and
inc
subl
stos
mov
push
aas
imul
add
iret
clc
jmp
repnz
outsb
xchg
push
cmp
mov
mov
clc
or
insl
mov
movsb
daa
dec
jbe
inc
ret
iret
mov
mov
sbb
jl
dec
leave
mov
hlt
test
addr16
call
adc
loopne
out
adcb
sub
cmp
cmp
lea
std
inc
sbb
ret
dec
out
xchg
xchg
bound
enter
add
dec
mov
mov
fcomps
sbb
pop
xor
popa
scas
out
aad
cmp
stos
les
daa
push
add
test
out
mov
stos
mov
out
cmp
pop
stos
pop
imul
or
daa
popa
jge
pop
ds
and
int3
add
xor
cmp
adc
rorb
stos
add
or
jmp
mov
sub
stos
leave
xlat
add
fsubrs
push
add
movsl
push
cmp
aam
call
push
jnp
xchg
mov
scas
sar
mov
push
push
mov
mov
mov
in
jo
bound
inc
fstpl
insb
imulb
lret
stos
xchg
sbb
xchg
pop
mov
mov
mov
std
arpl
mov
jl
fbstp
mov
aam
std
jo
inc
lahf
jno
xlat
aad
out
jmp
int
mov
xchg
inc
stos
lods
xchg
mov
pop
jmp
pop
sbb
or
lds
inc
nop
mov
pop
push
push
cld
mov
rorl
mov
sub
ds
stos
xchg
jecxz
adc
jns
test
sub
mov
sbb
mov
push
mov
pop
clc
fmull
pop
sbb
daa
push
out
sub
push
daa
mov
pop
xchg
jge
jecxz
hlt
movsl
sub
inc
scas
add
daa
push
ja
out
dec
or
subl
mov
test
mov
sbb
js
lcall
pop
sbb
in
test
push
add
lahf
fists
jnp
pusha
mov
repnz
sarl
loope
cmpsl
test
dec
mov
sub
jmp
jmp
mov
shll
cli
idivb
mov
stos
subb
jns
stos
xor
sub
out
push
aad
sub
pop
js
adc
mov
cmp
push
adc
inc
push
test
daa
and
ja
imul
xlat
clc
xchg
pop
xor
cmp
lcall
adc
repz
mov
inc
stos
ds
add
stos
add
ss
xor
and
mov
mov
insl
pop
shll
cmp
sbb
stos
fidivrl
xchg
mov
arpl
adc
stos
adc
mov
inc
jmp
test
add
ja
stos
mov
pusha
dec
cmpsl
mov
mov
xor
imul
xchg
push
repnz
jmp
scas
pop
icebp
inc
mov
mov
pushf
dec
jae
sub
cmp
es
add
xlat
dec
lea
push
xchg
das
pop
stos
addr16
int
stos
gs
fsts
push
pop
movsb
and
mov
mov
pop
pushf
stos
in
ret
cmp
stos
bound
dec
cltd
movsb
shrb
mov
test
outsb
ljmp
loopne
lahf
stos
shlb
cmp
jg
adc
iret
inc
fdivrs
xchg
xchg
in
mov
and
pop
mov
stos
push
loop
std
test
in
push
ret
popf
pop
insb
insl
dec
stos
lret
mov
stos
add
addr16
jo
test
jecxz
gs
cmp
mov
push
push
xor
xchg
add
stos
mov
mov
jnp
or
sbb
sub
lahf
sar
push
jecxz
mov
push
mov
push
inc
js
xchg
xchg
cmp
icebp
test
or
jecxz
ss
in
xchg
xchg
imul
add
mov
aam
stos
mov
test
fwait
inc
ljmp
sbb
cld
pop
sub
dec
scas
or
add
mov
dec
mov
lret
push
cld
repnz
dec
dec
decb
dec
push
mov
and
mov
push
arpl
dec
stos
enter
lret
mov
mov
cmpsb
fucom
jmp
pop
pop
sbb
sub
stos
xor
mov
xor
add
fwait
xor
out
scas
xchg
mull
stos
lds
xor
dec
nop
dec
lods
or
inc
sub
jg
add
mov
jb
stos
xchg
xor
jmp
and
jp
jge
lock
mov
mov
mov
sbb
mov
lretw
stos
jno
hlt
dec
cmp
dec
inc
jmp
stos
and
sub
jo
sub
mov
sahf
enter
sbb
imul
stos
sbb
push
pop
push
dec
addl
aad
cmc
mov
cmp
sbbb
pop
stos
mov
jne
test
stos
pop
insb
sub
lahf
loop
aam
add
aaa
mov
popf
sub
daa
or
push
addr16
sbb
stos
lods
aas
stc
stos
pop
and
mov
cld
push
lds
iret
sbb
out
stos
xor
cmpsl
mov
pop
push
sbbl
mov
jnp
lret
pushf
fwait
adc
stos
addr16
insb
pop
ljmp
add
push
bound
or
xchg
scas
sbb
sub
jo
dec
mov
popa
les
subl
imul
scas
dec
fimuls
enter
xor
add
imul
and
addl
pop
fwait
das
adc
mov
bound
mov
hlt
sub
ljmp
sub
push
clc
cmp
insb
mov
adc
stos
repnz
leave
push
mov
xor
out
test
dec
xchg
stos
xchg
cmp
es
pushf
xchg
lds
aaa
adc
sbb
mov
rolb
loope
jno
adc
lds
mov
aad
xchg
adc
imul
arpl
ds
xchg
sahf
mov
jmp
push
hlt
xor
stos
lahf
shl
xchg
sti
bound
and
in
mov
inc
and
dec
mov
fwait
popa
stos
and
leave
sub
imul
xor
lds
xchg
ret
sarl
jl
pop
sti
xlat
and
xchg
int
imul
ja
lret
fisubrs
mov
mov
push
in
xchg
and
int3
mov
stos
fs
cmp
push
daa
andl
mov
leave
outsl
stos
bound
imul
stos
add
cmp
bound
sbb
mov
fcoms
jb
dec
iret
jbe
push
js
cmp
xchg
mov
mov
imul
lods
sahf
stos
jns
sti
scas
sbb
popf
stos
mov
shl
iret
imul
xchg
mov
test
icebp
dec
movsl
jmp
lret
and
scas
nop
aam
das
cmpsb
imul
jecxz
xchg
sti
jl
loop
push
into
mov
lods
sub
jno
fwait
shll
addl
subl
out
test
imul
xchg
cmp
push
jb
jbe
popf
fmull
jecxz
pop
jne
clc
lahf
stos
incb
mov
stos
sbb
dec
dec
inc
imul
push
xchg
insb
or
jmp
jge
cs
xchg
jmp
rcll
stos
cltd
outsl
aam
imul
add
stos
inc
xchg
in
xor
and
cld
test
popa
cmpsb
mov
adc
pop
imul
scas
mov
cmp
out
icebp
xor
inc
xchg
incl
or
stos
shll
pop
sub
xchg
testl
loope
cwtl
stc
lret
mov
mov
fists
movsl
or
add
stos
call
lock
and
mov
add
sub
push
insb
movsl
lcall
out
lret
cmpsb
aas
jb
into
mov
pop
push
push
sbb
out
dec
adc
lock
or
fstpt
stos
dec
scas
int
arpl
xlat
lods
stos
cmc
cmpsb
fsubs
ret
stos
ffree
pop
mov
stos
fxtract
popf
bound
push
pop
sbb
imul
stos
dec
inc
xchg
push
fcompl
je
xor
daa
loopne
sbb
test
or
push
and
negb
jmp
mov
nop
outsl
gs
pop
dec
add
sbb
std
les
dec
push
fidivs
jmp
mov
aad
scas
dec
test
dec
or
in
mov
adc
inc
inc
cmpsl
and
jmp
pushf
xor
push
fwait
pop
xchg
stos
lret
call
jmp
mov
fwait
push
icebp
sbb
scas
jnp
add
mov
cltd
repz
push
push
jbe
arpl
pop
fstps
pushf
inc
xchg
cmp
xchg
xor
dec
push
repz
mov
arpl
jl
rorb
out
sbb
pop
andb
xchg
sub
xchg
ds
mov
ret
add
push
or
cmpsl
fs
rorl
arpl
test
cmp
ret
lock
mov
aas
mov
stos
outsb
xchg
push
add
sub
stos
jno
sahf
mov
sub
in
jmp
out
in
push
cmpsl
dec
xchg
or
data16
cmc
je
bts
fwait
adc
sub
pop
stos
mov
jge
and
jmp
stos
lock
int3
push
jae
adc
xchg
into
cmp
andb
pop
test
leave
mov
fistps
or
cwtl
arpl
or
aam
arpl
das
int
aad
or
scas
and
cmpsl
add
mov
pop
mov
cmpsb
stos
xlat
inc
jg
ljmp
jo
lods
sub
xchg
ja
jne
xor
sbb
xchg
movsb
and
or
and
pop
jmp
loop
xchg
mov
int
mov
mov
or
mov
xor
dec
stos
sub
push
adc
fs
fsubl
sbb
jo
mov
dec
inc
stos
push
bnd
xchg
scas
lods
fdivl
mov
neg
mov
mov
data16
jnp
sbb
cltd
loopne
loop
negb
shrl
stos
jmp
cltd
cmp
and
test
push
js
jbe
call
test
leave
inc
fcoml
and
sbb
stos
jg
pop
mov
mov
or
out
mov
push
jbe
pushf
sbb
push
imul
pop
addr16
jmp
xchg
insl
push
push
dec
mov
imul
jae
aam
and
scas
lds
ror
push
mov
pusha
lods
loop
push
dec
hlt
andb
mov
add
sbb
sbb
push
out
jmp
repnz
sahf
stos
aas
adc
das
jle
and
mov
pushf
outsl
cltd
sbb
stos
shrb
dec
popf
imul
leave
stos
pop
mov
push
subl
stos
or
outsb
sub
stc
popa
cmc
cld
cli
iret
dec
inc
adc
sbb
scas
stos
test
fisubs
push
fldenv
or
shrl
das
stos
aam
ljmp
stos
insb
pop
lcall
sbb
and
mov
imul
daa
pop
dec
mov
xchg
adc
das
jmp
sub
sbb
mov
inc
shrl
shrl
push
lock
decb
stos
mov
pusha
mov
add
mov
imulb
adc
xlat
stos
pop
mov
mov
aaa
pusha
andl
cmp
sar
mov
jg
sbbl
mov
ss
in
mov
pop
jmp
lea
jecxz
or
add
mov
mov
and
ja
out
daa
mov
mov
stos
dec
push
inc
or
popf
into
stos
test
lods
pop
mov
stos
and
adc
mov
jns
int
sub
xor
xchg
cmp
loopne
cli
mov
xchg
stos
cltd
sub
sbb
and
movsl
mov
inc
data16
stos
xchg
arpl
imul
pop
lea
add
jmp
push
jle
mov
push
xor
mov
dec
adc
popf
pushf
cmp
es
dec
adc
subb
lcall
mov
jp
stos
mov
pop
sbb
dec
or
std
leave
jae
jnp
in
outsb
add
dec
lds
ffree
stos
push
cmp
mov
stos
add
jb
fisubrl
jne
out
aas
scas
jae
jmp
mov
stos
sub
pop
std
pop
rorb
sti
gs
lret
nop
insb
sub
stos
pop
jmp
test
jno
scas
stos
sahf
outsl
ficomps
stc
xor
wbinvd
lahf
into
xchg
jp
lret
and
mov
jg
adc
subl
repnz
pop
dec
out
test
jmp
xchg
mov
scas
jl
stos
je
aad
int3
dec
mov
and
arpl
or
mov
dec
push
sub
je
mov
push
aad
add
jno
mov
mov
mov
fildl
ja
fucom
inc
ret
lea
arpl
in
stos
mov
sbb
jge
ror
inc
fsub
push
stos
lods
jg
fstps
or
stos
dec
leave
lahf
imulb
aad
jmp
lahf
cmp
fmull
test
xchg
jmp
xor
data16
lret
loop
arpl
cltd
mov
stos
pop
sub
sub
outsb
ret
ds
stos
or
jg
daa
mov
popf
stos
xchg
pop
mov
jle
sub
stos
xor
adc
clc
das
push
aas
or
stos
out
push
mov
add
and
mov
sub
daa
mov
xchg
mov
out
cmp
mov
add
outsb
imul
fwait
mov
pusha
adc
mov
mov
loope
dec
sub
fimull
sub
jl
pusha
mov
ret
mov
stos
sub
xor
mov
push
fsubrs
test
push
jnp
mov
iret
jno
aad
mov
out
cltd
push
dec
or
xor
mov
popa
dec
mov
jle
lods
inc
fucomip
repz
mov
mov
lods
std
or
cmpsl
lcall
std
sti
mov
push
jg
jecxz
push
and
scas
imul
int
stos
mov
cmp
pop
stos
dec
imul
pop
loope
and
cmp
or
je
jmp
int3
pop
mov
xor
stos
mov
sbb
lods
mov
es
int
clc
popa
dec
cmp
loopne
pop
fsubrl
dec
inc
jo
stos
popa
int3
test
jl
imul
int
jo
mov
push
inc
iret
xor
mov
stc
add
pop
sbb
test
stos
out
xchg
daa
imul
xor
or
xor
and
adc
adc
mov
push
jg
stos
pop
or
add
mov
xchg
pop
loopne
imul
lods
movsl
mov
addr16
jb
sub
ss
fidivs
nop
fstps
sti
cmpl
mov
into
aad
es
stos
mov
test
insb
mov
mov
cmp
and
mov
jle
addr16
movsb
push
lock
scas
inc
jp
cmpsl
in
je
dec
rorl
int
inc
gs
mov
int3
std
push
mov
stos
jg
adc
jo
aas
xchg
das
lret
stos
in
sar
repnz
mov
popa
inc
cmpsb
lahf
pop
stos
or
jo
aad
xor
sti
or
int
testl
roll
popa
dec
sub
xlat
sub
jmp
aam
xchg
adc
inc
sub
rcr
sbb
mov
sbb
pop
rcrl
cmp
stos
fnstsw
dec
sti
outsl
add
stos
and
fildll
cld
in
push
mov
stos
or
sbb
rorb
xchg
and
xlat
stos
add
cmp
and
ficompl
lock
fld
insb
adc
test
leave
fwait
jno
stos
pop
dec
sbb
mov
subb
mov
or
mov
sub
and
stos
imul
in
testl
xchg
xor
stos
or
cmc
cmp
aam
pop
mov
mov
inc
mov
adc
xchg
fmul
mov
mov
lea
mov
inc
stos
stos
stc
pop
outsb
push
or
jmp
mov
push
mov
fldcw
inc
insl
xor
push
inc
dec
lds
pop
daa
mov
jmp
stos
pop
cmpsb
movsw
js
addl
shrl
cmpsl
shl
addr16
insb
in
lea
mov
mov
xor
mov
hlt
fisubrl
xchg
mov
test
icebp
lea
gs
dec
stos
add
jns
in
stos
pop
enter
int3
addl
pop
clc
dec
pop
imul
pop
decl
jb
in
dec
jle
mov
fsubrp
ret
pop
mov
js
jl
stos
mov
mov
stos
cmp
fwait
xor
and
fnsave
dec
mov
mov
ljmp
call
clc
or
out
in
aad
in
cmpsl
push
fwait
adc
add
mov
lret
xor
pop
sahf
and
cwtl
push
call
mov
loope
sbb
dec
adc
xor
lods
jg
ljmp
jae
dec
ja
stos
mov
pop
out
pop
shl
xor
cltd
incb
cld
sub
loopne
inc
js
fbstp
in
cmp
pushf
mov
icebp
insl
mov
mov
pop
xor
jmp
lds
in
nop
repnz
xchg
xchg
daa
xchg
cli
daa
pop
outsb
push
push
inc
adc
mov
lock
xor
stos
out
ljmp
sub
dec
filds
push
stos
jb
push
or
das
sar
jp
push
or
mov
ja
in
stos
push
inc
mov
jle
scas
and
adc
movsb
scas
xchg
push
sub
fisttpll
test
inc
bound
inc
sbb
xchg
aam
or
push
stos
ret
lret
or
dec
stos
loop
pop
aas
xchg
push
stos
inc
add
or
stc
add
addl
clc
cld
adc
addl
fdivl
or
pmulhuw
jbe
push
xor
fs
imul
mov
jle
movsl
mov
fcoml
out
sub
stos
xchg
arpl
push
outsl
pop
adc
andb
mov
mul
sbb
mov
or
cmpsl
mov
mov
addr16
std
repz
stos
in
roll
and
dec
jns
imul
sti
stos
sbb
jne
xor
jecxz
xor
jp
mov
int3
in
ret
push
jns
test
mov
adc
cvtdq2ps
mov
shll
sarb
xchg
fwait
mov
inc
dec
icebp
out
subb
mov
movsb
adc
inc
pop
push
dec
inc
push
arpl
or
or
shlw
mov
int3
outsb
rdpmc
and
jecxz
sbb
inc
in
icebp
xor
stos
mov
or
jnp
leave
ss
cmc
dec
stos
shrl
imul
imul
lahf
loop
cs
into
sbb
lcall
aam
or
or
pop
xchg
sbb
pop
jmp
ljmp
push
inc
inc
sbb
pop
scas
pop
sub
mov
xlat
test
xor
sbb
scas
jecxz
test
outsl
jle
push
and
fs
mov
cs
imul
pop
inc
aad
sub
dec
daa
pop
imul
pop
cwtl
lret
stos
push
mov
adc
insl
add
addr16
or
fwait
push
xor
inc
dec
in
sub
cmp
or
cmp
dec
mov
fs
mov
jno
test
push
cmc
stos
sbb
in
inc
insl
or
mov
call
jns
ja
imul
fstps
dec
and
xchg
cmovno
adc
jmp
fnstcw
cmp
jno
enter
stos
js
mov
pop
pop
aas
lods
stos
xor
xor
aaa
add
mov
out
jmp
andl
and
xchg
or
pop
mov
sub
mov
shrb
mov
lds
sbb
cs
mov
stos
jle
decb
dec
and
push
mov
sti
lds
sahf
stos
cmp
stos
sbb
dec
jne
sub
mov
lods
es
ret
stos
hlt
arpl
mov
jne
stos
scas
cmp
mov
stos
in
in
pop
daa
cmpsb
jmp
mov
mov
movb
enter
out
cmp
stos
out
mov
stos
repnz
jl
shrl
call
dec
pop
adc
aad
push
pop
jmp
aas
enter
inc
pop
sbb
scas
fildll
aaa
mov
mov
cmpb
sbb
push
pop
jb
xchg
clc
xchg
int
lahf
add
negl
xchg
inc
sub
xor
scas
pop
in
rcll
mov
xchg
stos
inc
lods
call
nop
sub
shl
shlb
test
mov
in
and
addr16
xor
rclb
jb
jecxz
shlb
or
and
sub
cli
fwait
sub
pop
adc
jnp
sub
testb
inc
xor
jae
xchg
aam
test
lock
sub
pushf
stos
and
mov
mov
in
sbb
repz
dec
popl
stos
pop
adc
or
jge
bound
xchg
and
lret
imul
cmpsb
sti
mov
clc
push
inc
cs
pop
or
xchg
stos
mov
jbe
mov
sbb
or
and
jb
inc
dec
push
aad
sbb
ds
fnsave
mov
pop
jno
stos
push
cmp
in
mov
and
sbb
mov
stos
or
scas
xchg
push
mov
xchg
stos
movsb
fisubs
dec
pop
ss
mov
ficompl
data16
repnz
mov
adc
arpl
mov
test
imul
ds
dec
cmpsb
dec
sbb
jmp
mov
xchg
int
inc
lods
cmp
sub
lret
lods
addr16
insl
stos
pop
fnstsw
loopne
dec
cs
and
mov
cmp
stos
rolb
dec
out
push
or
test
mov
in
jmp
adc
sti
mov
outsb
subl
pop
ret
sahf
out
stos
mov
cmp
pop
stos
or
sbb
sub
test
mov
sub
movsb
subl
jne
jae
pop
imul
cmpb
mov
cmp
into
jnp
cmp
mov
add
imul
mov
sbb
iret
mov
popf
xchg
xor
ret
add
mov
xlat
insl
mov
scas
cld
and
movsb
and
jp
pop
sbbl
stos
pop
int3
enter
xlat
push
stos
mov
sti
pop
stc
lahf
ljmp
pop
gs
jno
jnp
ss
xor
jle
pop
out
mov
lds
xor
pop
nop
xlat
inc
cltd
sub
inc
and
dec
jo
sarb
jge
stos
js
cli
movsb
les
sarl
daa
rorb
test
mov
mov
xchg
out
rorb
xchg
push
popf
xchg
push
push
xchg
sub
ja
pop
fcoml
jae
mov
xchg
add
rolb
stos
cmp
push
inc
scas
cmp
stos
lds
cld
pop
cmp
lahf
stos
iret
xchg
stos
cwtl
fstl
fs
vaddsd
test
mov
fcom
sbb
mov
call
frndint
lods
nop
push
xor
adc
and
sub
add
arpl
xlat
in
push
scas
or
stos
push
cmp
inc
cs
pop
pop
jbe
inc
stos
push
test
jmp
int3
mov
outsb
je
out
mov
sahf
imul
dec
stos
sbb
andl
add
mov
mov
jl
pop
jle
test
orb
stos
scas
pop
test
jns
push
loop
mov
dec
sub
clc
stos
shll
lahf
ljmp
in
mov
shl
lahf
sbb
mov
add
mov
dec
scas
xchg
jp
cmp
data16
into
add
push
push
and
js
and
or
aad
mov
xchg
bound
mov
push
inc
adc
sar
dec
mov
fwait
mov
fadd
mov
popf
and
stos
es
cmp
inc
lret
jns
cmpsl
popf
loope
jle
fiaddl
imul
dec
popf
adc
int
xchg
sub
cmp
in
push
sub
pop
add
mov
push
jne
jmp
jnp
mov
fiaddl
mov
cmpsl
inc
stos
lret
mov
stos
leave
cltd
stos
sub
fnstcw
movsb
xchg
xchg
stos
cmp
pushf
not
lock
push
dec
add
stos
push
shll
adc
sub
push
aas
aam
ret
fwait
cmp
mov
outsb
fsts
adc
push
xchg
cmpsb
pop
fwait
sub
out
data16
dec
mov
icebp
cltd
int3
sbb
fldenv
push
into
stos
clc
test
je
jg
push
stos
in
or
jmp
cmp
mov
dec
addr16
jmp
xchg
jmp
lods
nop
mov
mov
test
stos
cmc
add
icebp
push
pop
mov
push
das
fs
jmp
cli
lods
sub
int
roll
in
fwait
mov
or
pop
pop
stos
adc
xor
cmc
push
scas
sbb
and
xchg
and
push
mov
jmp
dec
xor
mov
int3
ret
popa
push
jmp
mov
cmp
cmp
ja
xchg
and
lods
mov
movsl
stos
div
dec
call
stos
cld
push
insb
dec
js
lods
xchg
stos
int
test
pop
jno
sub
xor
aam
push
dec
addr16
in
stos
dec
loop
pop
das
xchg
lea
and
sbb
pop
push
mov
xchg
dec
pusha
testb
and
xor
push
daa
cli
mov
mov
cmc
xchg
push
jle
add
xlat
loop
pop
stos
inc
sti
sbb
clc
shrl
xchg
or
sub
xchg
mov
and
push
test
out
test
inc
sbb
stos
dec
lods
std
mov
test
dec
cmp
scas
mov
clc
add
js
push
aad
sub
fists
pop
stos
mov
movsl
ret
push
xchg
adc
stos
pop
mov
xor
aas
mov
dec
jge
mov
test
cltd
mov
outsl
out
fdivr
push
stos
mov
fwait
jecxz
and
hlt
subl
aam
aam
stos
pop
adc
in
mov
adc
or
stos
fisttpll
inc
es
mov
clc
xlat
aam
mov
arpl
sub
or
mov
in
xlat
int3
stos
lea
push
stos
mov
or
mov
cmpsl
mov
iret
repz
xchg
les
dec
mov
sub
and
inc
cmp
stos
ficompl
adc
stos
add
hlt
xor
stos
ss
add
xchg
adc
adc
pop
inc
xchg
shrl
inc
jl
xchg
mov
lock
xorl
out
mov
add
lcall
hlt
stos
in
jb
mov
push
push
jnp
outsl
aas
addr16
test
testb
stos
sbb
jb
sbb
imul
mov
lea
addr16
sahf
daa
movsl
xchg
test
dec
cltd
mov
stos
xor
and
dec
rcl
stos
and
jns
addr16
movsl
sub
inc
xlat
popf
idiv
adc
fs
scas
xor
sbb
stos
aam
inc
mov
out
stos
add
cmpb
sub
mov
daa
stos
mov
jle
lods
cs
es
insl
pop
stos
push
jge
ret
push
mov
enter
pop
stos
inc
addl
cltd
push
sub
dec
adc
stos
in
out
repnz
mov
jecxz
jb
jbe
inc
and
push
addr16
push
cmp
aas
ljmp
and
push
xor
mov
sbb
xor
or
or
out
insb
sub
mov
jg
inc
adc
cmc
roll
in
lahf
jmp
movsb
les
test
pop
in
aad
mov
cmp
inc
adc
pop
in
stos
lods
sarl
pop
and
imulb
fwait
idivl
stos
popf
mov
jns
cmc
hlt
cmpsl
addr16
lods
mov
in
lock
outsb
in
inc
xor
mov
dec
stos
es
pop
add
int3
xchg
in
sbb
sarb
mov
add
stos
sbbb
mov
dec
jl
int3
adc
and
stos
cld
cwtl
test
fiaddl
jmp
dec
pop
fisttpl
stos
cmp
adc
xchg
stos
mov
or
mov
xor
sub
adc
shrb
out
mov
and
add
add
popa
sbb
cmc
mov
cmpsl
cmp
pop
out
daa
mov
inc
sub
mov
push
or
lock
shrl
lret
and
cmpsl
cmp
inc
fldt
loopne
mov
sbb
fdivl
and
xchg
lret
in
mov
dec
ljmp
in
cmp
add
or
imul
mov
mov
into
add
xor
lahf
and
loope
stos
sub
cmp
cwtl
add
mov
clc
ss
pop
xchg
push
jbe
dec
fcomp
mov
imul
or
mov
push
xchg
lock
out
pushf
and
mov
mov
int3
dec
jnp
dec
outsl
test
mov
and
lods
xor
cli
xchg
sbb
jno
mov
pop
out
stos
aad
in
add
shlb
sub
mov
jo
and
or
lcall
and
add
push
adc
ret
pop
cmp
popa
pop
sub
adc
or
ds
mov
jge
sbb
aaa
add
pop
mov
mov
inc
push
pop
movsb
jle
sub
or
movsl
and
in
mov
in
mov
push
dec
sub
repz
adcl
push
mov
insb
jmp
push
xchg
fdivr
rcrl
xchg
or
aas
lods
push
mov
dec
and
int3
xor
cltd
out
jb
xchg
adc
cltd
pop
nop
cmpsl
stos
pushf
ljmp
jnp
add
push
lods
stos
out
fstpl
pushf
jb
ret
add
pop
aaa
mov
jl
bswap
stos
sub
in
cmpsl
dec
push
cmp
sub
cmp
stos
and
scas
outsb
add
bound
push
hlt
jnp
stos
mov
jecxz
push
stos
pop
lcall
int
stos
inc
es
push
push
dec
clc
insl
cmpsl
cmovae
out
sub
jecxz
iret
aaa
ljmp
outsl
and
ret
stos
mov
pop
push
xchg
push
pop
stos
rep
or
inc
ja
xchg
pop
stos
mov
cmpsb
orl
sahf
hlt
test
rcrb
into
insb
xchg
inc
adc
stos
outsl
sbb
in
repnz
mov
jnp
inc
mov
sub
or
sbb
outsb
stos
xor
enter
std
add
jmp
into
mov
lods
bts
mov
int
mov
mov
into
mov
jge
outsb
ljmp
lcall
push
aam
sbb
iret
out
mov
dec
inc
dec
and
jecxz
xchg
pop
sbb
stos
mov
cld
clc
sub
xor
in
nop
mov
jb
test
sti
addr16
fwait
inc
orb
xchg
jp
add
mov
or
imul
ret
adc
ret
push
add
cli
mov
pusha
push
psllq
mov
adc
stos
mov
loopne
adc
jne
stos
cwtl
stos
cmpsl
frstor
gs
xchg
mov
mov
sti
adc
aad
or
imul
mov
stos
mov
in
mov
push
jno
xor
stos
inc
sbb
cmp
jle
stos
cmpsl
lret
or
inc
stos
arpl
rcrl
and
or
daa
nop
test
xchg
stos
into
sbb
arpl
xor
subl
ret
mov
lock
dec
cmp
mov
jg
push
dec
pushf
loopne
int3
movsl
adc
lods
je
and
popf
scas
or
inc
leave
lret
js
mov
stos
and
adc
ja
dec
xchg
and
mov
fmul
imul
insl
mov
cmp
dec
rolb
clc
in
imul
mov
cltd
cld
ss
mov
lds
inc
mov
les
adc
data16
mov
icebp
dec
stos
pop
movsb
test
stos
mov
cltd
xor
fsubl
std
imul
icebp
cwtl
lahf
dec
scas
lret
stos
test
adc
jmp
add
xchg
push
out
aas
cmpsb
push
iret
and
xchg
imul
xchg
cmpsl
pop
daa
jns
lods
sbb
jmp
aas
cli
xchg
fs
sbb
dec
cmp
mov
xor
pushf
icebp
in
data16
lods
adc
stos
push
sbb
fcmovnbe
or
je
lret
sbb
add
sbb
popl
dec
xchg
jg
inc
cld
inc
cmp
imul
cmpsl
dec
bound
dec
test
sti
stos
in
or
push
stos
sbb
dec
fwait
pop
lea
cmpb
mov
mov
in
fistpll
adc
or
ss
test
out
inc
xlat
nop
fs
jae
shrl
mov
pop
push
fidivrs
fs
out
shrb
jae
push
subb
je
and
adc
pop
ret
push
push
cmp
addr16
inc
lods
mov
stos
push
test
xlat
or
pop
dec
jecxz
test
pop
lea
mov
push
ficomps
lret
shl
imul
inc
arpl
push
jns
cld
or
lods
rclb
subl
in
pop
lods
pop
inc
jns
cs
stos
cmp
cmpsb
adc
inc
imul
mov
cmp
jmp
pop
repz
and
scas
push
rclb
xchg
ljmp
imul
stos
sbb
cmp
ficompl
sub
xchg
mov
cmpsb
mov
notb
shl
stos
fwait
cwtl
ja
pop
sbb
stos
mov
mov
push
stos
fstps
jne
cs
punpcklwd
dec
xor
mov
fst
add
test
imul
xchg
mov
xor
stos
mov
and
sbb
mov
lds
stos
adc
cmpsb
aad
mov
jo
jecxz
stc
add
cmpsb
js
incl
add
int
jnp
into
jl
xchg
mov
xchg
dec
rcrb
and
or
jmp
fsubrs
rorb
add
dec
repz
stos
fwait
and
lret
bound
mov
push
mov
pop
cmp
xor
sbb
jmp
call
cmp
pop
jbe
int3
or
stos
fwait
lods
shll
enter
mov
repz
fisttpll
stos
cs
and
dec
ror
movsb
ds
sbb
imul
ret
dec
jae
inc
jge
xchg
mov
adc
and
xor
fsubrs
pop
dec
sub
sbb
stos
jb
inc
lods
mov
push
mov
jae
sub
loop
mov
popa
fwait
outsb
movsb
fldcw
das
dec
add
sbb
mov
push
pop
jmp
fdivp
dec
lods
test
stos
and
inc
dec
std
inc
mov
sub
scas
daa
mov
jnp
movsb
subl
jmp
pop
pop
sub
test
sub
dec
mov
dec
mov
jle
cmpsl
stos
filds
lcall
into
pop
shlb
and
gs
lahf
jmp
in
push
inc
ret
test
pop
cmp
sub
and
mov
aam
push
push
imul
mov
sarl
gs
stos
mov
and
mov
and
fwait
dec
daa
gs
push
mov
cmpsb
test
stos
sbb
ror
mov
in
sahf
xchg
sub
stos
shl
cmp
loopne
gs
jmp
mov
and
ret
idivb
xchg
test
sub
aad
fwait
scas
mov
or
sbb
stos
fadds
inc
cmpsb
test
sub
int3
jbe
scas
pop
outsb
call
lds
pushf
sbb
jae
das
out
daa
lcall
pop
movsb
dec
stos
xor
fisttpl
stos
or
in
lahf
inc
stos
aad
out
andb
stos
sbb
cmp
es
outsb
ss
pop
lods
popf
xchg
mov
aas
pop
sub
int3
fidivs
xor
nop
jmp
jo
test
or
int
aam
stos
mov
sti
mov
lods
out
dec
jnp
sub
add
cmp
rcrb
and
fstps
cltd
sub
int
xchg
inc
dec
nop
cmp
test
add
test
bnd
insl
xorb
and
idivb
stos
data16
xchg
mov
xchg
cmp
or
xor
stos
jge
or
adc
mov
int3
mov
ret
mov
test
arpl
mov
outsb
adc
dec
lods
stos
push
loop
lret
cmp
in
das
xchg
cmpsb
fsts
cmp
lods
fst
in
and
stos
and
pop
mov
jg
sbb
inc
inc
stos
ror
scas
mov
or
xor
jg
je
bnd
cld
insb
loopne
xorb
nop
push
stos
push
mov
jae
push
xchg
int3
sti
add
push
popf
shr
inc
gs
lods
jecxz
mov
jmp
dec
sarb
inc
jle
cmp
sahf
mov
iret
and
popa
popl
stos
push
lcall
push
mov
movsl
scas
stos
mov
addr16
inc
sub
mov
data16
mov
stos
jns
and
mov
pop
jecxz
sub
fisubrl
cmp
fwait
addb
and
xchg
mov
subl
lret
and
test
push
xchg
adcb
jae
cld
push
lea
pushf
xchg
push
stos
xchg
pop
mov
xchg
int3
push
pusha
clc
mov
movsl
pop
stos
mov
sub
inc
or
jmp
xor
adc
enter
clc
stos
jo
rcl
xor
shl
cmp
movb
push
xchg
mov
sbb
addr16
add
xchg
mov
inc
push
out
pusha
cmp
jle
fistl
xor
jnp
dec
mov
add
test
cmp
and
dec
punpckhwd
mov
mov
daa
scas
add
in
sti
fs
xchg
jmp
aas
xchg
jno
js
stos
xchg
sbb
shlb
inc
stos
ljmp
das
push
mov
jae
add
imul
stos
fdivrp
loopne
in
scas
push
hlt
stos
popl
sub
movsb
fisubs
ljmp
bndldx
addr16
sub
les
sub
test
fidivl
int3
addr16
testb
lock
jl
sub
insb
idivl
cli
xor
stos
es
push
and
cmp
push
stc
int
stos
mov
sti
imul
jmp
xchg
push
sub
xchg
mov
mov
add
mov
iret
cmp
mulb
dec
stos
mov
xchg
stos
or
add
es
imul
in
movsb
int3
call
pop
repnz
fwait
stos
lods
popf
inc
fisttps
lret
in
testb
mov
insb
fildl
idivb
dec
xor
dec
jmp
xor
xchg
out
mov
sub
addr16
nop
mov
or
mov
xlat
loopne
std
mov
ljmp
mov
mov
int
xchg
cmp
in
imul
mov
or
inc
mov
loope
outsb
mov
sub
stos
inc
imul
stos
cmp
aas
int3
lock
jae
push
pop
test
stos
cmp
scas
aam
cli
subl
outsl
mov
push
add
loop
or
and
stos
fldt
push
push
sub
mov
xchg
sbb
inc
jnp
ljmp
and
mov
ja
sarb
xor
subb
mov
sub
cmp
mov
pop
loop
mov
stos
sbb
sub
idivb
xchg
mov
xor
xchg
push
movsl
jle
mov
les
or
lret
sbb
push
repnz
inc
mov
imul
sub
fwait
jb
dec
stos
icebp
cld
mov
outsb
ret
lret
push
popa
mov
pop
dec
stos
imul
jmp
jns
mov
inc
xchg
sbb
stos
fsubs
jo
stos
ss
sbb
mov
dec
fs
and
sarb
cmp
mov
sti
in
fists
adc
mov
das
mov
xchg
dec
les
jge
mov
jg
stos
cwtl
lods
ss
stos
decb
xchg
in
jb
jmp
inc
cld
sub
bound
cmp
pushf
stos
stos
arpl
gs
mov
mov
mov
mov
cmp
xchg
repz
dec
or
popa
mov
and
movsb
pusha
lahf
jmp
push
sub
xchg
stos
sahf
jo
mov
stos
push
je
pop
cmpsl
or
jl
dec
mov
stc
pop
stos
lock
out
add
mov
int3
push
lret
nop
fldenv
pop
cmp
shlb
push
push
fbstp
test
stos
lret
jo
ficoms
lods
inc
sub
mov
jmp
cmpsl
add
push
jnp
cmp
sub
jmp
inc
das
mov
fisttpll
xchg
push
adc
stos
cmp
dec
jbe
insb
cs
inc
and
mov
stos
cmp
sahf
in
push
mov
add
adc
mov
cmp
mov
std
stos
dec
mov
pop
xor
add
bound
or
mov
ds
in
pop
mov
aam
fld
sub
cld
mov
cmp
sub
ret
inc
add
cltd
jp
stos
outsl
lret
mov
and
in
lahf
xchg
dec
stos
and
loopne
lea
js
jle
stos
jnp
pop
or
xchg
fwait
movsl
stos
cmc
pop
stos
jg
and
adc
sti
jp
mov
out
stos
push
mov
lods
mov
jbe
loopne
dec
fwait
shll
movsb
and
daa
mov
sub
stos
rclb
fimuls
adc
pushf
mov
fwait
popf
push
push
xchg
stos
xchg
or
jno
mov
call
mov
push
add
xchg
inc
stos
dec
in
lret
sahf
cmc
mov
jmp
lahf
jecxz
testb
push
leave
jl
lds
cltd
push
mov
mov
dec
lods
stos
fldz
inc
sbbl
ror
sub
inc
jecxz
daa
aam
xor
cmp
inc
clc
nop
jae
stc
lods
add
ret
addl
mov
ds
add
int3
clc
fisubrl
out
push
mov
pop
jnp
mov
ret
imul
jl
xchg
shrl
ja
sbb
dec
out
xchg
jae
or
popa
scas
push
sub
stos
inc
fiaddl
xchg
stos
pop
sti
loopne
in
pop
sbb
and
cmp
test
stos
popa
lea
push
int
es
rcr
notl
ret
sahf
stos
inc
nop
sbb
stos
mov
ss
stos
mov
add
sbb
pop
in
mov
ds
insl
sub
inc
push
and
cs
jnp
stos
in
cmp
adc
cmc
jecxz
movq
xor
mov
mov
cmpsl
adc
dec
sub
pushf
push
xchg
repnz
push
mov
sahf
or
mov
xor
cltd
divb
lret
add
stos
in
cmp
in
leave
lods
sti
adc
lea
xchg
xor
movsb
sti
in
stos
xlat
xchg
cmp
ja
xor
jl
and
add
imul
push
cwtl
inc
inc
cmp
dec
stos
and
dec
push
stos
test
dec
daa
clc
inc
cmc
imul
mov
insl
push
sbb
scas
addl
jmp
stos
movb
aad
pop
xlat
stos
lods
xchg
sahf
in
dec
xor
stos
repz
add
and
nop
pusha
hlt
stos
jo
jnp
push
sub
push
and
daa
mov
mov
push
jne
and
sub
lahf
stos
mov
jp
adc
jecxz
stos
pop
repz
push
add
std
or
add
sub
and
andb
mov
nop
jmp
enter
or
jmp
icebp
sbb
adc
sub
add
xchg
xchg
sub
and
xor
mov
in
stc
stos
and
adc
cmp
stos
xchg
out
mov
xor
mov
jmp
pop
cmp
lea
out
lock
daa
and
and
gs
sbb
inc
mov
pop
sbb
add
sahf
stos
pop
jbe
fdivl
stos
mov
sub
loopne
mov
aaa
push
fdivl
or
jnp
xorl
mov
pop
mov
adc
jae
addr16
das
loope
push
stos
daa
ret
neg
scas
sbb
mov
stos
dec
pop
pop
in
inc
fldt
xor
pop
sahf
imul
imul
outsl
test
add
cld
repz
mov
pop
insl
stos
popf
mov
mov
je
adc
push
nop
mov
xchg
and
mov
sub
pop
inc
movsb
lcall
xchg
xlat
or
ja
arpl
mov
xchg
lods
bound
fidivs
in
adc
stos
mov
lcall
jnp
orb
and
push
inc
add
cmp
enter
add
stos
lock
int3
shll
push
insb
dec
adc
add
cltd
pop
stos
jp
ret
stos
xor
in
rol
jmp
sbb
movsb
das
rorl
stos
popf
into
mov
fwait
stos
iret
pop
cmc
adc
rorb
subl
daa
jge
inc
push
call
inc
andb
ja
push
mov
leave
cltd
mov
stos
push
cld
mov
ljmp
dec
clc
adc
imul
push
sarb
mov
or
xchg
or
mov
push
inc
stos
jle
pop
lock
mov
lds
std
sub
xchg
cmpsl
dec
xor
mov
sub
in
mov
call
jnp
lods
lret
out
imul
and
cltd
stos
call
arpl
leave
mov
xlat
push
ss
push
fsub
stos
inc
clc
ret
out
mov
sbb
imul
stos
xchg
imul
bound
popf
sbb
jns
insl
mov
movsb
les
or
imul
pop
mov
stos
adc
lret
clc
lea
out
outsl
call
adc
cmp
sbb
out
jge
mov
xlat
addr16
adcb
insb
inc
daa
movsb
out
roll
in
stos
add
sbb
jp
mov
stos
inc
int3
mov
pop
sub
sbb
mov
imull
and
sti
cld
clc
dec
cmp
mov
lds
sahf
test
mov
js
xor
dec
dec
pop
cwtl
xchg
cs
mov
icebp
scas
rclb
mov
and
cmpsl
stos
in
bound
imul
mov
cld
addr16
aas
jg
stos
jle
nop
add
ljmp
pop
add
xchg
push
mov
xor
mov
mov
addr16
cli
enter
push
cmpsl
test
cltd
or
mov
jnp
jb
cs
jbe
test
bound
std
shrb
sbb
adc
and
jl
aaa
xor
cltd
or
shrb
sbb
jp
adc
test
mov
ljmp
jnp
filds
iret
stos
mov
adc
push
and
xor
stos
cli
rclb
mov
mov
aad
jg
xchg
paddsb
push
emms
std
push
fldl
sbb
ds
dec
data16
inc
jae
es
lcall
jne
mov
push
sub
mov
inc
pushf
in
add
loope
daa
icebp
cmpsl
dec
xor
xchg
pop
sbb
nop
push
jns
mov
mov
xor
cmpsl
sub
jmp
stos
mov
cltd
test
push
mov
fwait
jnp
dec
stos
or
lods
fsubl
addr16
enter
pushf
inc
xchg
fs
lods
movsb
lret
icebp
out
loope
inc
cmpsb
pop
inc
addr16
cld
lods
xchg
dec
mov
push
jmp
xchg
cmc
or
jnp
dec
daa
pop
inc
arpl
lods
sub
cmp
stos
scas
lcall
mov
jle
loopne
xchg
stos
cmc
mov
fwait
jns
shll
ss
scas
sbb
stos
pushf
xor
stos
repnz
rcrb
cmp
push
mov
cmp
dec
jb
loopne
movl
mov
fcmovnu
and
inc
pop
lock
jmp
in
mov
stos
les
mov
xor
cmp
mov
iret
stos
adc
ficoml
scas
sbb
lock
inc
and
stos
push
lods
cs
dec
pop
jg
mov
pop
ds
leave
xor
dec
mov
xchg
mov
mov
pop
lods
push
xor
shrb
sub
popf
imul
cmp
mov
je
push
stos
out
fstp
sahf
leave
jno
stos
mov
nop
mov
sub
push
movzbl
stos
lods
ret
in
dec
out
pusha
subb
test
dec
mov
mov
and
mov
push
adc
pop
out
es
mov
nop
jno
stos
shll
jmp
dec
lea
mov
jmp
stos
rorl
sub
stos
cmp
cmp
jmp
cltd
std
lods
aas
mov
xor
int3
jl
sub
stos
mov
xor
shrb
sahf
pop
xchg
popf
lcall
push
jecxz
rep
dec
sarl
jnp
cmpsl
stos
shrb
stc
je
stos
decb
in
add
cmpsl
mov
pop
push
push
repz
push
xchg
mov
dec
jns
sbb
loope
inc
push
pop
cltd
sti
data16
in
mov
lods
ds
stos
dec
adc
pushl
mov
fistpl
sub
imul
int3
jmp
stos
xor
out
or
movsb
fsubs
in
adc
mov
inc
xchg
call
push
or
int3
xor
les
mov
fstpl
cmp
sub
dec
fwait
incl
inc
into
fidivl
stos
in
mov
loope
push
xchg
in
inc
cmpsl
sbb
cmp
pop
repz
mov
ds
lds
xchg
out
xor
ljmp
hlt
in
cmc
lock
xchg
imul
nop
or
sub
ret
subb
jne
stos
jae
ss
lret
or
stos
daa
mov
das
mov
jge
jle
push
mov
in
and
sbb
ret
in
cmp
popa
xor
push
stos
or
and
stos
cmp
mov
push
dec
cmc
sbb
jae
adc
xchg
cmp
and
stos
xor
adc
dec
stos
call
pusha
rcl
lods
jmp
pop
enter
adc
add
mov
bound
in
or
out
xlat
and
add
push
mov
or
jg
stos
mov
mov
push
mov
ret
lods
mov
in
dec
inc
int3
xchg
lods
mov
inc
mov
inc
xchg
incb
and
das
mov
movsl
in
stos
add
adc
aad
outsb
sub
adc
mov
lea
xchg
push
lcall
push
fmuls
jl
subl
or
and
sub
cltd
aas
mov
loop
imul
mov
arpl
mov
aad
lods
stos
add
cmc
cmpsb
dec
adc
push
sti
and
leave
fwait
and
test
into
inc
cmp
xchg
adc
mov
fistps
arpl
inc
mov
xor
fxch
dec
and
mov
stos
lahf
mov
or
mov
sub
xchg
stos
jbe
movsl
adc
loopne,pn
stos
setge
jle
scas
mov
adc
dec
lods
mov
or
ja
stos
xchg
cmp
dec
cmp
clc
out
leave
sbb
mov
outsl
stos
shlb
aad
stos
push
mov
insb
jno
push
data16
cld
dec
movsl
fwait
lret
adc
pop
mov
mov
lds
sub
and
popf
pop
movsb
jae
and
data16
xchg
xor
adc
lcall
pop
loop
jmp
fadd
jns
es
mov
cmp
xchg
push
adc
iret
jno
sbb
shlb
loope
out
stos
pop
mov
scas
fsubr
stos
je
repnz
dec
test
adc
test
stos
xor
inc
jb
loope
sub
pushf
cmp
in
pop
cld
stos
mov
sub
stos
lret
and
xchg
lea
stos
adc
push
aaa
addl
stos
or
nop
aas
stos
mov
cwtl
dec
lds
pop
test
adc
inc
and
rcll
xor
lahf
sbb
std
insl
scas
out
imul
fwait
ret
mov
imul
enter
sbb
fdivs
push
cmp
stos
pop
adc
xor
outsb
cli
stos
adc
shlb
fwait
sub
lcall
xchg
add
stos
mov
cmp
stos
in
mov
inc
test
mov
fdivl
bound
in
outsb
cwtl
das
imul
xchg
pusha
mov
out
stos
pushf
mov
cmp
xchg
dec
ja
nop
es
and
push
sbb
mov
sti
mov
test
insb
jo
xor
cmp
stos
mov
push
mov
xor
das
dec
push
stos
pop
jo
xchg
iret
negb
imul
scas
jne
shr
push
push
adc
in
loop
dec
xchg
in
call
dec
sahf
outsl
and
jg
out
mov
fucomip
aam
xchg
inc
jle
mov
xor
push
test
imulb
bound
cmp
cmpsb
stos
dec
cs
mov
push
stos
mov
inc
and
stos
lods
test
arpl
insl
xchg
stos
lock
ficoml
mul
pop
stos
data16
dec
loopne
push
imul
sbb
xchg
jmp
sar
mov
jmp
mov
int3
adc
lcall
test
cmpl
repnz
sbbb
int
stos
xchg
in
mov
push
cmc
les
ljmp
cmpsb
pop
out
or
cs
icebp
mov
stos
mov
xor
sti
pop
mov
stos
nop
xchg
fwait
imul
cmc
stos
rol
fldl
enter
pop
int
ret
notrack
insl
or
stos
movsb
jmp
or
push
stos
add
xchg
xchg
push
push
sbb
and
xchg
cmp
stos
add
movsb
cld
lret
stos
sub
imul
stos
mov
hlt
sbb
push
cwtl
push
xor
int
jecxz
into
mov
flds
mov
fsubrl
hlt
fwait
cltd
push
lahf
iret
push
jge
push
push
mov
insl
xchg
shll
stos
sub
sbb
cld
inc
xchg
stos
lret
sbb
out
mov
mov
stos
xchg
jmp
xchg
aad
iret
adc
and
stos
bound
iret
mov
jmp
xor
js
push
xchg
mov
fisubrs
loop
sbb
push
pop
push
xor
stos
test
pop
les
into
xor
clc
push
sub
pop
imul
fnsave
shl
sub
sbb
mov
push
lods
ret
stos
sub
push
push
jp
mov
mov
stos
jg
sbb
dec
dec
mov
orl
ljmp
dec
rcll
mov
stos
movsl
adc
mov
push
push
sub
out
mov
fisttpl
nop
adcb
shrb
push
loope
cmpsb
bts
sub
mov
xchg
inc
rcrb
fisubrs
int
mov
hlt
stos
lods
mov
jns
lods
inc
add
jb
test
stos
and
je
stos
popa
daa
xchg
jg
cmp
inc
stos
testl
jmp
jge
inc
dec
mov
ret
fwait
xchg
and
mov
stos
loopne
mov
fsubrl
scas
xor
mov
insl
jmp
ret
adcb
inc
mov
dec
adc
in
push
test
push
pop
js
xor
out
scas
push
shlb
cmpsb
mov
add
fildl
stos
sbb
adc
fdivrp
stos
adc
cltd
fsubr
icebp
shll
sub
andb
lods
dec
dec
stc
repz
bound
dec
mov
xor
xchg
inc
dec
pop
pop
push
jmp
or
push
lcall
push
dec
ljmp
push
mov
add
pop
or
lods
insl
imul
push
cmp
in
jecxz
sub
jg
and
mov
pop
shrb
mov
mov
add
xor
sub
mov
das
stos
cmp
cli
adc
inc
clc
dec
stos
dec
movsb
je
lahf
or
and
xchg
xor
jge
fsubs
cltd
insb
stos
ljmp
ss
and
push
sub
adc
sbb
add
stos
mov
fcomip
dec
test
test
call
mov
jnp
stos
gs
imul
dec
call
pop
sub
adc
mov
lret
stos
fnstsw
adc
aaa
call
add
push
rorl
xchg
lahf
mov
push
imul
iret
sbb
xor
repnz
fisubrl
xor
sbb
insl
sbb
nop
jb
cmpsl
pop
ds
push
jp
pop
addr16
rol
mov
test
or
mov
stos
jge
popa
packuswb
add
aad
dec
cld
lea
stos
jno
add
adc
sbb
push
ret
mov
pop
out
lods
stos
dec
ds
fisubrs
mov
mov
stc
stos
stos
dec
rclb
pop
or
jl
dec
fidivrl
dec
imul
xor
ss
pop
in
call
or
or
pop
popl
xor
mov
jg
jae
and
test
xor
add
jp
stos
fisttps
sbb
cmp
adc
add
jecxz
pop
add
lock
stos
mov
iret
push
mov
stos
test
std
jle
push
or
enter
lods
dec
repz
idivb
and
inc
jb
stos
js
push
xor
iret
mov
stos
mov
cwtl
jno,pn
xchg
ljmp
mov
adc
jmp
fsubrl
cs
das
xchg
iret
inc
rcr
lods
pusha
mov
and
sbb
push
xor
stos
inc
mov
repnz
stos
les
fdivrl
pop
xor
xchg
cmpsl
imul
push
dec
jno
and
xchg
push
mov
jne
ljmp
rcrb
sbb
xchg
ret
or
and
stos
push
cli
aam
dec
stos
jmp
decb
stos
adcb
sbb
mov
add
inc
test
stos
outsb
imul
dec
add
pusha
mov
jl
stos
jb
push
popf
cmc
imull
pop
inc
aaa
mov
cs
imul
ret
push
popf
xor
xchg
add
stos
shl
test
mov
pop
push
in
adc
cmp
pop
stos
inc
or
dec
cli
and
movsb
bound
sub
dec
repz
pop
mov
push
clc
aaa
xlat
xchg
movsl
lods
jbe
cs
mov
xchg
inc
loope
shrb
jne
popa
dec
scas
push
stos
ds
mov
bnd
mov
mov
jp
sub
ret
nop
jmp
stos
jmp
test
jl
test
fldt
mov
lret
mov
sub
mulb
popa
ljmp
lea
hlt
sti
out
or
mov
test
pop
stos
fsubp
mov
inc
arpl
cmp
test
out
popf
pop
mov
jmp
rolb
das
jb
fst
outsl
std
popa
mov
stos
arpl
inc
mov
movsb
push
aas
je
dec
sub
stos
xchg
or
pop
rorl
xchg
imul
push
aas
jb
cld
mov
stos
pop
cmp
inc
stos
in
adc
and
pop
stos
mov
cmp
cltd
lea
or
in
ds
add
dec
stos
mov
push
aad
mov
mov
cmp
scas
push
jbe
sub
jmp
stos
lcall
imul
push
mov
adc
sbb
lea
push
popa
jbe
push
imul
adcl
mov
inc
fsts
lahf
pop
lret
stos
adc
jbe
pop
push
sub
out
mov
pop
mov
push
jp
or
xor
add
cmpsl
aaa
nop
test
test
or
incl
push
cvtps2pi
stos
fcomps
lock
mov
cmc
mov
lods
ja
mov
stos
rep
cmp
jae
incb
loope
mov
push
mov
jmp
pop
fsubr
mov
mov
or
stos
or
jnp
loop
add
arpl
jecxz
jae
das
rcrb
and
aaa
sub
push
and
xchg
stos
mov
jle
pop
std
cmpsb
loopne
jno
sbb
out
jae
and
jmp
mov
arpl
fbld
or
xrelease
js
std
rclb
xchg
aaa
mov
jno
stos
cmp
jae
and
fcmovbe
fyl2x
jle
pop
stos
mov
inc
mov
fstl
call
clc
pop
pop
mov
push
arpl
adc
insb
stos
dec
and
mov
xor
push
in
clc
xor
mov
mov
jo
and
stos
aam
and
pop
in
stos
xor
add
ret
jmp
rolb
xchg
mov
scas
push
adc
push
xchg
push
call
add
jbe
add
push
popa
cwtl
subl
rcrl
push
test
js
pop
push
inc
test
ficompl
popa
lods
stos
stos
daa
xor
mov
in
cmp
mov
cli
stos
inc
jl
cmpsl
xchg
and
arpl
int
mov
shll
pusha
jge
or
shrl
pop
outsb
das
sub
lock
arpl
push
mov
and
int3
adc
lret
lods
fldt
jg
rolb
pop
lret
stos
pop
fsubs
les
mov
sbb
dec
arpl
les
jbe
rcll
cmp
loopne
push
jmp
add
popa
cwtl
aad
stos
push
ljmp
stos
dec
inc
mov
ja
cld
inc
adc
or
xchg
imull
stos
out
into
nop
stos
addr16
mov
enter
imul
stos
stos
nop
add
xchg
scas
sub
push
test
add
fists
mov
or
imulb
mov
mov
sbb
xor
add
xor
fildll
stos
outsl
adc
loop
and
jle
fwait
repnz
cli
xor
fstpt
pushf
mov
stos
adc
mov
subl
stos
xchg
cmp
fs
push
adc
xor
mov
stos
sti
push
adcb
cmp
fistpl
sub
xor
push
aad
inc
dec
add
int
push
sbb
and
shr
stos
mov
cmp
sbb
lea
mov
mov
jle
into
cmp
stos
inc
fcomps
inc
dec
push
outsb
mov
aad
xorb
xchg
lea
mov
mov
jbe
sub
xchg
cltd
imul
push
add
scas
das
test
loope
sub
add
jle
xor
imul
adcl
out
stos
mov
fdivrs
pminsw
lahf
adc
mov
inc
sbb
adc
fcompl
fwait
enter
sub
fldenv
fisubrl
sub
test
xor
xchg
imul
out
xchg
mov
ja
adc
push
add
mov
adc
sub
fisubrs
mov
mov
sub
cld
pop
aam
pop
mov
fxch
leave
and
jmp
jge
mov
in
mov
lods
push
xchg
xor
int
stos
cmpsl
pop
out
push
xor
rcrb
sub
jbe
xor
stos
dec
xchg
lods
mov
dec
adc
or
push
jmp
inc
es
cwtl
rclb
aam
pusha
pop
loopne
pop
cltd
sub
stos
xchg
call
insl
ret
fdivr
or
or
mov
add
xchg
sub
iret
dec
mov
subl
out
out
mov
movsl
stos
js
push
mov
xor
mov
cld
fsubrl
insb
stos
dec
push
stos
ljmp
je
fwait
cmp
imul
xchg
imul
stos
lock
sbb
pop
ljmp
xchg
sbb
int
xchg
jmp
push
push
pop
insb
scas
stos
dec
mov
fdivr
mov
jge
cmp
push
pop
mov
mov
stos
jne
jnp
cs
adc
or
stos
cld
pop
cmp
orl
pusha
cltd
es
jle
jbe
and
inc
ljmp
mov
xchg
fbld
mov
stos
je
icebp
mov
sbb
outsb
or
or
xor
sbb
xor
mov
movsb
pop
add
roll
ja
jp
and
jb
jecxz
or
sub
push
sbb
lret
test
hlt
lret
std
fisubl
push
fwait
mov
addb
ljmp
jbe
imull
popf
adc
lods
mov
int3
and
push
push
cmp
lahf
pop
mov
ja
movsl
push
lea
sahf
inc
jp
jmp
scas
xchg
movsl
shrl
xor
inc
es
inc
xchg
pop
and
insl
cmp
rcr
xor
imulb
out
ret
sahf
lret
stos
or
cwtl
jae
int
and
add
inc
push
cmpsb
pop
xchg
jecxz
mov
stos
xchg
sbb
adc
sub
mov
mov
mov
stos
push
xor
and
insl
cmp
int3
into
cmp
lret
cmp
inc
daa
cmpsb
daa
mov
pop
lcall
sub
pop
lahf
rorb
and
jecxz
out
xchg
repnz
repz
or
sub
mov
int3
data16
adc
sahf
aad
cwtl
imul
xchg
mov
xor
sub
xchg
sub
xor
fwait
add
sbb
mov
pop
stos
dec
notl
xchg
mov
ds
jg
fwait
stos
sub
pop
mov
daa
rorb
xchg
leave
mov
movsl
mov
jge
or
mov
mov
pusha
jnp
adc
cmpsl
lods
cmc
dec
lds
aad
push
mov
xchg
call
es
out
loopne
movsl
and
stos
fisttps
and
jg
paddusb
iret
add
mov
fsubrs
push
sbb
nop
jae
stos
gs
jmp
cmp
popf
filds
ss
inc
into
sub
mov
iret
lds
lahf
cmp
jae
mull
enter
std
daa
xchg
and
jns
adc
xchg
stos
jge
in
clc
aaa
arpl
stos
in
mov
inc
sub
mov
rorb
insl
adc
push
push
cs
mov
xchg
jg
pop
stos
arpl
fistpl
pop
sti
fwait
int3
aad
test
add
stos
xchg
push
into
dec
lock
outsl
jbe
xor
ds
stos
push
mov
fmuls
inc
leave
mov
lds
sub
dec
cld
cltd
xor
test
mov
stos
dec
adc
cmp
mov
mov
ja
mov
xlat
sub
push
pop
arpl
ret
or
in
add
outsl
mov
jno
mov
xchg
mov
jle
cmp
daa
jp
arpl
pop
sbb
jno
scas
lock
mov
stos
xchg
cwtl
cmp
cmpsb
lds
mov
cmpsl
dec
std
jmp
push
call
add
stos
scas
mov
sub
mov
lret
into
scas
insl
fcomps
stos
inc
cmp
sarl
je
push
sti
cmp
mov
jbe
int3
or
add
and
je
sbb
sahf
fildl
mov
jo
out
xchg
jp
fwait
loopne
pop
mov
outsl
xor
js
stos
push
mov
jle
lock
das
stos
lahf
mov
jmp
stos
call
scas
xchg
push
or
stos
mov
push
std
into
jl
inc
stos
call
scas
push
push
dec
mov
jb
xchg
pop
sub
cmp
dec
inc
mov
add
xor
stos
loopne
jo
int3
and
fldcw
cmp
jg
adc
stos
xlat
enter
jp
push
jnp
push
mov
push
stos
aas
or
jns
in
mov
aas
stos
push
sbb
imul
test
jnp
cmpsb
je
jb,pn
jne
cmpsl
fcom
sub
popf
ret
std
repz
dec
xchg
push
mov
or
jmp
enter
mov
test
aaa
daa
cli
and
mov
adc
jo
add
stos
cs
in
push
push
xchg
jne
cmp
xlat
loop
sub
xchg
pop
rcll
fisttps
push
and
pusha
std
jl
mov
push
inc
jmp
or
sbb
leave
fisttpll
and
xor
stos
movsl
loop
fnstenv
les
jne
test
fs
subb
mov
int3
jmp
scas
das
xchg
arpl
adc
sub
adc
xorl
pop
shr
jmp
and
pop
loopne
in
stos
cmpl
in
cld
aam
ljmp
cmp
shr
mov
into
call
mov
lret
pop
mov
push
pop
ljmp
mov
pop
sbb
sub
aas
mov
mov
stos
shrl
xor
addr16
stos
xchg
ret
jge
mov
icebp
jmp
imul
xchg
ds
jg
hlt
mov
sbb
fsubrl
shl
out
mov
adc
arpl
int
insb
out
movl
cs
mov
xchg
fistpl
adc
out
sbb
lret
xlat
lods
pop
push
mov
imul
enter
stos
inc
ljmp
stos
mov
push
push
cmp
int
call
mov
jp
inc
cmp
pop
stos
xor
test
dec
stos
into
sbb
pop
std
adc
jp
or
stos
imul
and
pusha
scas
stos
sbb
mov
scas
jmp
jg
cwtl
cs
sbb
cld
std
xchg
pop
mov
mov
loope
jns
push
daa
cltd
insl
lea
out
gs
rorl
stos
lods
fistpl
std
push
mov
xchg
stos
ja,pn
insl
xchg
push
enter
add
das
loope
ret
stos
call
loopne
push
stos
sub
rolb
clc
lahf
mov
out
or
stos
ret
insl
cmp
and
pop
mov
out
out
jg
sub
addl
mov
sub
testb
arpl
adc
mov
loope
ficoml
xchg
jae
push
stos
movsb
push
ss
sub
cli
imul
stos
fistl
enter
mov
sub
or
imul
scas
lahf
imul
test
leave
adc
add
push
push
sub
jle
fldt
mov
insl
into
adcl
cs
add
loop
adc
test
daa
sub
pushf
xor
lods
fld
stos
movswl
lds
pop
sbb
adc
mov
push
mov
stos
jb
ljmp
sbb
loopne
test
mov
sub
rcll
and
mov
fwait
jnp
xchg
mov
xchg
stos
mov
cmpsl
jb
jg
mov
add
mov
in
mov
sub
popf
imulb
stos
rcrb
outsl
daa
jne
lea
adc
cmpsl
or
pop
out
mov
stos
inc
or
insb
jae
rol
imul
mov
ljmp
cmc
cmpsb
mov
cld
jmp
adc
scas
jg
stos
inc
mov
mov
mov
imul
xchg
push
hlt
scas
fstl
mov
sbb
xor
andb
cmp
mov
fnstcw
stos
and
leave
inc
inc
mov
testl
test
xchg
fs
xchg
pop
stos
mov
jnp
xchg
jb
bound
cmpsb
mov
rorl
lds
inc
mov
xor
push
int
and
lock
pop
mov
out
jnp
insl
adc
mov
clc
scas
cwtl
stos
adc
sub
cmc
icebp
and
dec
push
cmp
insb
ljmp
fisubs
mov
cwtl
and
stos
out
outsb
jecxz
cs
loopne
in
push
fmul
stos
stc
jl
es
push
sti
int3
lret
sub
stos
mov
dec
pop
sub
rcr
je
sbb
sub
pop
in
or
cmpsb
insl
mov
jbe
fsubrl
test
fistpll
mov
cld
adc
insl
data16
push
xchg
enter
mov
sbb
push
pusha
gs
inc
jnp
mov
stos
sahf
mov
mov
mov
inc
mov
stos
dec
rcll
add
insb
or
push
pop
adc
dec
mov
push
popa
stos
xor
jbe
out
stos
movsl
out
cmpsb
jb
push
mov
or
jle
and
mov
lret
mov
enter
jo
add
test
daa
mov
mov
pop
cwtl
stos
imul
stos
int
xchg
ficomps
xchg
addr16
push
pop
xlat
mov
in
repz
stos
mov
pushf
cmc
stos
mov
cmp
and
push
stos
lea
xchg
adc
test
or
call
into
jns
add
gs
stos
mov
aaa
push
stos
xchg
jae
jge
push
out
jmp
aas
or
fldenv
imul
imul
pop
push
or
daa
arpl
xchg
push
sub
mov
lods
mov
add
xor
scas
sub
int
imul
stos
shlb
sub
shrb
or
loop
imul
sub
movsl
arpl
adc
aaa
fwait
testl
stos
cltd
or
xor
mov
movsl
pop
scas
sbb
dec
mov
pop
stos
outsb
mov
popf
push
mov
xor
insb
xchg
dec
lcall
dec
add
pop
stos
add
sahf
and
stos
xchg
daa
mov
das
scas
in
lea
fstpt
fisubs
push
sub
lock
mov
stos
jp
add
mov
mov
mov
mov
mov
mov
aam
xor
push
into
pushf
je
mov
jecxz
ss
jae
xlat
out
gs
notb
icebp
pop
mov
ret
daa
inc
adc
xchg
sbb
lock
xchg
jo
insl
mull
stos
sbb
test
jge
xchg
dec
adc
icebp
cmp
lret
or
push
push
fdivrs
ss
mov
xchg
push
xchg
add
and
jb
popf
sahf
and
lea
jnp
cli
xor
ret
int3
hlt
mov
xor
scas
jp
iret
mov
xchg
inc
add
fxch
stos
jl
jecxz
icebp
cmpsb
jp
pop
jne
jmp
xchg
xchg
sti
jae
js
stos
sub
jp
sub
scas
shll
fisubrs
sarb
mov
xchg
js
jne
test
or
push
adc
cmp
fxrstor
cmp
cmp
jo
stos
mov
daa
js,pt
call
cmp
mov
sub
stos
and
sbb
scas
stos
lods
das
or
xchg
jmp
imul
inc
xchg
dec
inc
and
mov
xor
xchg
or
sub
das
push
cmp
shrb
repz
out
addr16
aad
adc
stos
xchg
lret
imul
mov
adc
cmpb
jns
mov
jle
ficoms
or
add
pop
dec
lahf
mov
and
movsl
cli
aas
xchg
icebp
add
jg
xor
mov
pop
mov
dec
xor
sub
pop
or
shll
mov
scas
stc
stos
cld
addl
out
xchg
cltd
sub
popf
shll
lret
mov
inc
or
stos
mov
or
clc
stos
inc
sbb
movsl
mov
fstpl
arpl
jbe
stos
dec
jmp
stos
xor
xchg
xor
lea
stos
pusha
jno
in
test
cli
cmpb
fisubrl
nop
fsubs
jo
ljmp
mov
sbbl
jb
divl
pop
cmp
or
push
and
int
or
mov
xchg
push
stos
stc
andl
stos
jne
jl
sub
pop
jmp
mov
xchg
sbb
xor
jo
mov
jnp
push
mov
inc
or
sahf
jge
mov
pop
xchg
test
js
std
inc
jg
dec
add
movsb
lods
mov
in
xor
je
sbb
inc
push
outsb
jge
out
cltd
jecxz
jnp
ficomps
mov
push
or
into
jge
movsb
dec
shrl
stos
pop
jmp
stos
jge
or
mov
lahf
enter
adc
in
mov
ret
lahf
dec
js
adc
or
xor
xchg
mov
in
mov
adc
movsb
into
dec
stos
in
dec
sub
push
cli
js
pop
jne
pop
sub
cmp
lahf
stos
dec
xchg
roll
lret
add
addr16
mov
mov
cmp
jo
pushf
adc
xchg
int
add
subb
imul
jne
hlt
lods
add
inc
sub
cmp
and
aam
adc
stos
sub
mov
outsl
jp
loope
mov
cmp
xchg
out
inc
stos
mov
and
js
stos
aam
je
test
jmp
out
jmp
cltd
push
stos
dec
test
xor
repnz
stc
clc
cmp
sahf
addr16
lret
mov
outsl
imul
or
loope
in
repnz
fs
lods
nop
movsb
stos
outsb
push
ja
jne
cmp
jmp
cld
adc
inc
push
ss
xor
cmc
aas
mov
xchg
nop
cmp
imul
pop
hlt
and
popa
and
xchg
dec
inc
daa
add
xchg
fdiv
mov
mov
jecxz
ret
sbb
mov
shrl
and
pop
mov
mov
dec
stos
gs
adc
mov
dec
lea
mov
insb
dec
or
cwtl
push
mov
mov
ret
stos
jg
stos
pop
adc
and
dec
cmp
jmp
popf
or
add
dec
scas
outsl
inc
or
xor
push
cs
movsb
add
mov
popf
mov
imul
push
std
sub
jo
jmp
fstl
cmp
imul
xor
push
jmp
inc
mov
out
xchg
out
out
data16
inc
mov
push
call
popf
data16
cmp
xor
stos
test
mov
bnd
movsb
mov
jne
inc
xchg
pop
jae
dec
adc
in
lret
or
in
ret
sarl
call
cmpl
pop
mov
xchg
mov
pop
stos
jo
outsl
dec
mov
sbb
xor
jno
outsb
dec
jns
mov
stos
and
mov
adc
push
push
jne
gs
ljmp
sub
adc
xor
push
xchg
mov
xchg
subl
stos
mov
inc
push
in
stos
hlt
xchg
neg
ror
loop
in
jl
addr16
jp
mov
cmp
inc
addr16
orl
clc
lods
adc
lds
scas
or
push
dec
aas
arpl
repz
mov
dec
pop
stos
sbb
push
ja
mov
pop
mov
push
pop
dec
sub
pop
pop
je
sub
ss
mov
ret
movsl
xor
js
xor
lock
mov
add
sbb
and
jge
jne
mov
mov
scas
fcomip
push
xchg
push
pop
stc
push
stos
inc
data16
mov
adc
sbb
out
fwait
jle
or
out
push
test
insl
daa
mov
daa
sub
dec
mov
imull
loop
leave
push
es
test
mov
int3
fs
jl
pop
stos
cli
and
arpl
jno
xchg
movsb
and
lret
pusha
add
imulb
mov
cld
leave
mov
xchg
fstps
iret
push
pusha
adc
stos
aas
xor
cmpsl
jne
xor
loopne
xchg
mov
jge
outsl
jb
into
jns
sti
lods
stos
inc
push
movsb
inc
dec
push
and
out
jbe
mov
stos
movsb
cmp
imul
lahf
rcll
cld
sbb
stos
and
fisubl
cmp
lods
mov
push
sbb
push
jp
fwait
out
popf
mov
std
or
stos
ds
add
scas
hlt
stos
inc
jb
cwtl
cli
and
aaa
int
mov
stos
out
xchg
mov
mov
cmpsb
mov
lock
sbb
pop
jmp
insb
out
scas
fwait
pop
pushf
imul
mov
scas
inc
stos
sbb
icebp
add
jne
loope
jmp
adc
imul
stos
push
mov
sub
jmp
cwtl
or
inc
jno
mov
stos
cmp
pushf
stos
sbb
ds
sahf
cmp
pusha
aad
pop
stos
xchg
adc
mov
jmp
mov
jbe
sbb
movsb
jg
jns
or
pop
mov
gs
repz
mov
movsb
add
inc
xor
or
stos
mov
cli
mov
stos
inc
iret
dec
pop
movsl
dec
xor
fwait
inc
lock
xlat
hlt
cmp
out
leave
pop
mov
addr16
lret
sbb
es
pop
mov
lahf
lods
or
inc
stos
pushf
outsb
xchg
jl
mov
stos
icebp
adc
repnz
scas
cmp
stc
shrb
xchg
add
inc
inc
adc
adcb
popf
daa
push
leave
sub
je
outsl
and
dec
aas
pop
test
xchg
popf
scas
xor
ljmp
xor
call
or
lcall
ja
pushf
xchg
add
lods
stos
sarl
sti
ja
xor
test
lods
inc
jmp
sub
iret
andb
and
pushf
mov
cltd
fildll
mov
fs
idivb
cmp
sub
mov
addr16
mov
test
push
fcoms
stos
cltd
out
roll
adc
stos
popa
into
out
dec
subl
mov
imul
adc
push
aam
jg
jl
ficomps
mov
jl
fildll
aaa
or
stos
mov
cwtl
xchg
sbb
mov
lods
mov
mov
movsb
mov
or
and
stos
xchg
sahf
push
hlt
sub
push
das
fisubl
fsubs
mov
sub
test
roll
xor
push
cs
mov
or
nop
and
mov
dec
cmp
sub
mov
xor
fwait
in
push
ja
out
cmpl
gs
add
leave
test
or
mov
cs
push
xor
cmpsl
jle
ror
stos
lods
call
out
pushf
dec
jne
ficoml
sub
stos
test
adc
cli
sub
sub
inc
xlat
or
in
mov
nop
das
push
decb
insb
aad
test
push
stos
xchg
dec
mov
scas
xor
adc
push
clc
push
imul
addr16
gs
imul
mov
not
and
mov
pop
repnz
lahf
stos
iret
push
leave
popf
adc
add
loope
inc
push
xchg
inc
insb
lret
test
test
xchg
push
aam
cmpsl
adc
cld
das
in
mov
notb
fiaddl
mov
xor
test
sub
pop
lea
arpl
shrl
test
mov
aas
scas
popa
inc
in
mov
adc
imul
insb
mov
mov
jno
pop
je
in
mov
mov
xlat
dec
inc
xchg
movsb
out
stos
push
sbb
sbb
popf
cltd
push
xchg
mov
stos
nop
aam
mov
movsb
cmp
adc
daa
push
rcll
stos
xor
ljmp
or
push
push
fbld
in
mov
mov
insl
stos
pop
orl
or
outsl
dec
jg
es
into
jae
imul
ljmp
arpl
stos
outsl
mov
out
xchg
sbb
sub
mov
and
and
aas
or
ja
stos
jmp
cwtl
loope
cmp
frstor
clc
mov
rolb
call
lret
mov
int
lahf
lods
loop
xchg
out
jp
inc
test
xchg
pop
bound
sub
pop
jns
hlt
xchg
insl
icebp
dec
push
push
and
fisttps
jg
gs
stos
inc
test
cmp
imul
lahf
push
push
mov
add
jb
test
scas
xchg
hlt
subb
adc
aam
fistl
sti
stos
mov
push
loop
adc
jmp
stos
cmp
mov
pop
xchg
adc
xchg
testl
stos
jns
repz
mov
fwait
cs
jl,pt
dec
sub
test
jo
je
pop
lds
stos
jle
mov
subb
mov
xchg
cmpsb
xchg
scas
mov
stos
xchg
or
fs
xchg
and
and
stos
or
push
xchg
jcxz
add
out
mov
adc
push
aam
jle
or
stos
inc
mov
lcall
sbb
pushf
jno
sub
xlat
pop
les
sti
iret
int3
fisttpl
cwtl
fmull
mov
stos
xor
xor
sbb
stos
pushf
iret
cltd
jne
or
sti
stos
adc
inc
stos
xor
mov
rcll
push
xchg
lods
stos
xchg
adc
sub
sbb
stos
or
mov
cmc
lock
sbb
jg
push
ja
insl
movsl
test
push
faddp
pop
xchg
mov
stc
imul
push
stos
aam
jge
sub
push
mov
icebp
out
jmp
outsb
mov
stos
loope
push
test
js
pop
stos
dec
jns
mov
jmp
idiv
test
or
xor
clc
movsl
filds
test
cmp
fdivrl
push
stos
inc
les
shrb
ret
push
inc
stos
loope
insb
and
lock
stos
cli
in
sub
stos
les
int
jmp
cld
rorl
stc
mov
push
in
dec
inc
dec
jge
icebp
sub
test
mov
imul
je
and
cmpb
stos
adc
pusha
xor
xchg
lret
mov
imul
or
in
mov
sbb
mov
fwait
xlat
js
xor
stos
cmp
push
movsl
stos
adc
or
mov
fistl
insl
stos
in
pop
lea
test
leave
stos
and
roll
mov
mov
test
sbb
mov
scas
add
push
push
iret
add
push
push
push
das
xchg
dec
dec
rcrb
fstpt
cmpxchg
divb
xchg
adc
test
scas
lea
pop
dec
mov
aad
add
mov
imul
jno
mov
int
add
sbb
pusha
xchg
jecxz
jne
jae
stos
add
call
mov
adcb
mov
adc
hlt
pusha
sbb
imull
jmp
sbb
mov
stos
mov
ds
pusha
fidivs
sbb
inc
jecxz
out
xor
push
mov
arpl
fwait
stos
pop
xchg
bound
or
insb
test
test
stos
inc
pop
out
mov
stos
add
mov
rclb
mov
pop
push
mov
pop
or
insl
sbb
subl
outsb
jnp
in
jecxz
stos
imul
sub
je
xchg
call
xchg
mov
pop
cwtl
bound
imul
sbb
xchg
lret
stos
dec
pop
cmc
cwtl
std
aaa
sbb
stos
insb
bound
inc
call
mov
mov
push
aad
xor
xlat
ror
sub
xchg
cltd
or
cmp
aam
lds
inc
mov
lret
out
cwtl
shll
stos
negl
js
pop
ss
pop
fwait
mov
lcall
pop
cmp
rorl
lds
push
icebp
mov
sbbl
lcall
stos
mov
mov
lahf
push
rclb
imul
stc
inc
mov
dec
push
js,pn
dec
stos
cmp
movsb
cmp
or
mov
arpl
xor
shr
jl
pop
daa
and
hlt
in
mov
xor
into
aas
push
or
in
orl
mov
adc
pop
pusha
pop
repz
adc
mov
jg
jge
xchg
scas
ljmp
jnp
xor
sahf
rorb
scas
cmp
sub
scas
xchg
xchg
stos
test
insl
push
sbb
dec
fwait
jne
or
and
adc
stos
add
fdivs
int3
loop
icebp
xchg
jnp
jl
adc
js
cmpsl
sub
stos
in
int
cmp
adc
push
add
stos
xorl
stos
out
insl
lods
push
cltd
xlat
sub
mov
out
cmp
subl
mov
xlat
jno
xor
fs
dec
stos
mov
test
ret
mov
xchg
ret
popf
repz
stos
xchg
mov
inc
or
cmp
mov
ss
stos
push
or
xchg
add
lahf
into
repnz
jmp
rol
out
mov
outsl
fwait
push
insb
mov
add
push
iret
fdivl
and
gs
push
xor
mov
push
or
iret
jp
adc
shrb
outsb
xor
arpl
fcompl
and
in
push
cmpl
dec
std
stos
pop
push
cld
and
stos
fs
and
jg
stos
mov
ja
mov
imul
jge
imul
lock
mov
out
int
and
pop
pushf
inc
scas
lret
xchg
sbb
popf
ljmp
mov
inc
insl
cmp
ja
arpl
pop
mov
push
loopne
jb
fstpt
sahf
outsl
pushf
and
and
stos
cld
fmul
aad
daa
pop
lea
pop
dec
inc
ljmp
rorl
push
sub
aam
ds
add
cmpsl
sti
fwait
sub
lea
daa
out
dec
int
int3
pop
xor
inc
stos
jnp
adcb
imul
mov
testb
out
add
fwait
mov
lds
mov
jp
jle
stos
mov
push
mov
and
xchg
dec
xchg
and
mov
cmp
and
adc
int
repnz
sbb
loop
lahf
jbe
pop
or
stos
in
in
stos
popf
cmp
dec
jb
inc
out
cmp
mov
pop
jns
mov
cmpsb
push
imul
jmp
add
sub
adc
lds
inc
ljmp
ss
sti
stos
mov
hlt
mov
adc
pop
cld
jl
mov
mov
stos
rcrl
out
or
stos
cmp
insb
push
fucomip
fwait
cmp
lahf
lods
jle
scas
dec
stos
pop
xor
fisubl
jmp
mov
jne
mov
mov
stos
pusha
inc
push
mov
push
mov
sub
xchg
mov
lret
stos
inc
xor
sub
adc
lcall
mov
dec
ret
cli
stos
test
pop
inc
mov
pop
inc
sbb
ret
lret
cltd
shlb
cwtl
add
fdivrp
into
or
mov
xchg
inc
stos
movsb
mov
stos
cld
cmp
bound
mov
clc
xchg
xor
xchg
and
pop
test
stos
add
or
cmp
aad
stos
mov
stos
ret
es
and
ja
stos
idivb
out
aaa
cmp
lcall
rsm
mov
mov
sbbb
aas
sahf
in
mov
and
adc
pop
lods
addl
mov
imul
adc
cmp
in
stos
or
out
icebp
lret
adc
stos
pop
cltd
mov
addr16
xchg
in
mov
and
or
lock
mov
sbb
stos
add
testl
mov
add
jg
lods
sahf
into
jmp
mov
shrd
cwtl
stos
dec
pop
inc
push
stc
imul
adc
pop
dec
lret
in
fwait
out
jge
lret
dec
stos
sbb
lods
out
aad
push
and
data16
push
push
insb
mov
lods
xchg
call
push
stos
pop
std
mov
jl
ja
gs
adc
push
dec
stos
arpl
xchg
pop
ror
int
lock
fisttpl
push
rorl
sbb
cs
mov
stos
xchg
fistpll
ljmp
sbb
inc
mov
jnp
fldenv
lods
sbb
call
xchg
xchg
mov
adc
mov
adc
shrl
push
int3
ds
sub
add
mov
popa
enter
stos
popa
sub
jmp
jl
stos
xchg
push
lea
dec
cmp
js
add
stos
out
stc
mov
push
in
mov
inc
and
pop
cmp
mov
movsb
inc
mov
pusha
mov
and
xchg
flds
push
in
iret
cmp
or
ss
mov
cmp
stos
xchg
pop
adc
add
stos
pop
and
dec
out
fwait
stos
mov
jb
subb
inc
jo
push
push
mov
loopne
imul
pop
int3
mov
pop
nop
mov
jecxz
jmp
sahf
dec
addb
jbe
mov
inc
les
mov
stos
mov
lret
movsl
testb
stos
cli
fimull
mov
adc
xchg
cmp
push
les
or
stos
loop
jmp
bound
out
outsl
and
mov
test
imul
loope
popa
orb
je
mov
ja
adc
stos
pop
fidivrl
xor
gs
push
inc
mov
stos
lret
repz
xchg
js
daa
test
add
mov
or
dec
test
fists
stos
add
push
mov
sti
pushf
out
addr16
fwait
jne
cmp
in
ficoms
popa
shll
jle,pn
iret
lret
shlb
add
stos
pop
cltd
mov
stos
jns
pop
ss
sti
les
imul
sbb
dec
jbe
into
pop
movsb
stos
vcvtpd2psy
stos
mov
lods
jae
and
adc
stos
mov
adc
into
add
sbb
mov
stos
ret
pop
and
sbb
lods
jnp,pt
jns
mov
es
mov
push
sub
outsl
stos
sub
stos
jbe
pop
ja
jnp
les
sbb
cli
cltd
push
sbb
xchg
arpl
fidivl
pop
sti
xor
mov
xchg
stos
test
clc
test
and
xchg
stos
test
clts
pop
stos
or
pop
fisttps
call
sbb
shrb
pop
gs
stos
popf
cmp
stos
jno
mov
rcr
ljmp
dec
rol
xchg
ret
inc
stos
je
in
cltd
push
mov
adc
scas
shrb
inc
adc
cld
call
nop
lock
pop
out
or
aad
mov
fwait
minps
add
and
push
jne
js
xchg
lods
scas
imul
imul
ret
mov
inc
sti
push
xchg
or
stos
adc
pop
or
or
push
or
popf
jl
test
and
or
push
mov
lods
out
cmp
stc
std
xchg
lcall
or
dec
outsb
push
inc
mov
ret
dec
hlt
push
jl
in
jge
lahf
jmp
mov
add
daa
dec
insb
mov
xor
xor
sbb
aad
mov
cld
pop
mov
jne
stos
ljmp
jle
dec
mov
mov
adc
gs
mov
les
ljmp
mov
cltd
push
and
cmpsl
dec
fwait
mov
das
or
jmp
add
dec
in
dec
xchg
xorb
push
lea
xor
mov
and
stos
pusha
out
insl
arpl
sub
cmp
mov
daa
loope
dec
leave
sbb
jno
add
cmpsl
shlb
scas
push
in
mov
mov
in
les
cld
aam
stos
fstl
jbe
jno
push
stos
and
dec
cltd
mov
in
das
imul
mov
stos
js
cld
ret
xchg
test
adc
jmp
lcall
jnp
scas
aam
stos
lret
push
add
fstpl
shr
mov
push
mov
jno
lods
fucom
mov
mov
inc
stos
sub
call
xchg
stos
pop
xor
test
jns
sub
push
sarl
xchg
mov
adc
fistpll
stos
rcrb
std
xor
imul
loop
mov
enter
daa
pop
inc
cs
daa
mov
cwtl
cmp
std
dec
and
jmp
enter
mov
mov
imul
data16
jbe
stos
xchg
adc
stos
push
sbb
stos
cmpsl
inc
cmp
add
lea
sti
pop
pop
xlat
stos
mov
mov
sahf
stos
or
fnstsw
adc
dec
jne
mov
cs
lods
cmpb
loop
mov
pop
stos
mov
into
xchg
stos
enter
mov
in
jmp
jns
ja
test
dec
fildl
xchg
or
jno
std
hlt
fdiv
pop
cmpsl
stos
mov
dec
jle
stos
int
iret
jb
xor
daa
cmp
xlat
leave
cmpsl
rep
in
add
stos
push
nop
movsb
push
daa
adc
jno
and
stos
cld
adc
fsincos
jae
mov
js
imul
mov
stos
xchg
fldenv
insb
out
enter
sbb
sub
or
insl
movsb
sbb
test
pop
rolb
pusha
stos
push
lock
push
stos
shll
jg
mov
mov
out
add
lahf
aam
aad
lea
outsl
in
data16
fwait
and
leave
loop
out
jge
pop
sbb
xor
mov
stos
xor
cmp
nop
pop
aaa
ss
mov
add
movsb
mov
stos
pop
inc
push
orl
clc
dec
push
and
fdivrp
push
adc
jl
add
add
loopne
or
out
xor
or
std
lds
in
ja
movsl
add
stos
inc
and
adc
fldcw
mov
pop
cmp
push
and
test
lods
ljmp
jl
imul
jmp
add
sbb
stos
outsl
in
notb
cmpsb
scas
cld
jmp
shr
insl
out
clc
cltd
movsb
mov
orb
pop
push
jb
add
call
sbb
stos
mov
rclb
mov
imulb
aad
jb
mov
ja
stos
loopne
sub
aas
fistpl
cmp
add
jb
push
push
orl
xchg
pop
jo
jmp
pop
mov
inc
pusha
je
lods
enter
cli
sub
js
mov
stos
add
push
cmp
and
jmp
xchg
in
mov
sbb
adc
sub
pop
push
stos
push
jnp
sub
cmp
mov
adc
xchg
cmp
push
xchg
call
mov
xchg
or
stos
rcrl
lods
xor
sti
lea
jmp
fdivrs
mov
pcmpeqw
cs
inc
stos
mov
dec
pop
jbe
dec
and
insl
cltd
sub
hlt
mov
popf
outsl
inc
push
adc
pop
pop
jnp
nop
dec
push
stos
adc
ss
es
scas
shll
inc
pop
mov
mov
into
stos
mov
xor
mov
imul
es
loopne
inc
scas
push
jmp
mov
xor
mov
mov
stos
pop
aas
and
xchg
jb
stos
ds
mov
cmp
sbbl
add
data16
imul
sbb
mov
jge
stos
push
jb
aas
adc
pusha
lods
stos
pop
dec
cwtl
mov
daa
lcall
pop
repnz
outsl
stos
mov
jnp
inc
push
inc
lahf
stos
outsb
aam
leave
pop
dec
in
imul
fwait
mov
jb
sub
pushw
aas
mov
mov
mov
mov
lahf
mov
add
inc
sbb
and
xchg
ret
movsb
jge
jo
fnstcw
xor
mov
pop
scas
jecxz
scas
pop
sub
stos
into
push
test
cld
sub
jns
shrb
push
into
stos
cs
push
xor
repz
xchg
test
test
ret
imul
mov
jmp
aaa
pop
add
xchg
in
mov
js
inc
mov
sbb
jmp
popa
xchg
sti
ljmp
lcall
je
stos
movsl
call
clc
sbb
jne
in
mov
mov
jle
stos
inc
dec
mov
sbbl
shll
sub
ds
or
into
mov
es
jle
repz
sti
jp
inc
cmp
mov
hlt
mov
push
jl
pop
in
stos
sub
mov
loopne
enter
lahf
add
stos
push
leave
popa
inc
cmp
jg
addr16
dec
xchg
adc
cmp
rcrb
inc
sti
insb
stos
in
notb
movb
stos
pusha
and
fcmovnb
jl
cld
stos
pop
pop
add
stos
in
stos
and
repz
xchg
mov
sub
push
fs
bswap
mov
pop
push
stos
adc
aaa
test
aad
and
dec
pop
in
stos
fisttpl
repnz
fstpl
popa
ficomps
jmp
mov
and
add
xchg
and
cmp
in
outsl
push
push
pop
sub
in
fwait
aad
lea
imul
sbb
mov
mov
mov
ss
pop
inc
aas
jmp
mov
push
aas
stos
lcall
aas
jnp
adc
in
repnz
in
add
inc
fwait
mov
stos
les
xchg
out
mov
jae
movsb
adc
stos
lock
test
call
stos
dec
shll
or
ret
stos
or
xchg
push
iret
jle
repz
ds
jo
int3
cmp
cltd
shl
xchg
adc
lea
and
lcall
mov
add
call
divl
es
adc
sbb
adc
rorl
repnz
xchg
jb
mov
add
push
dec
pushf
stos
loop
int3
sub
insl
or
shl
in
lods
xorb
fwait
incl
xchg
cmp
and
dec
stos
mov
cli
mov
jg
mov
rcl
popa
push
imul
mov
stos
jl
test
addr16
xchg
xchg
jmp
jne
bound
jle
xchg
sbb
movsl
stos
mov
cmp
aad
ficoms
in
ljmp
jmp
roll
je
pop
mov
addr16
pushf
shl
mov
jle
jge
fs
dec
sbb
add
test
ret
cmp
add
stos
repz
sub
mov
addr16
or
xchg
push
pop
rolb
outsb
pop
stos
xor
sahf
push
sub
xor
cmpsb
inc
mov
cli
je
gs
fcoml
std
xchg
or
adc
addr16
fcomip
sub
mov
cmp
shll
stos
xor
movsb
xchg
enter
jecxz
cmpsl
and
aad
out
sub
or
mov
ljmp
clc
and
push
mov
cmp
arpl
adc
sub
bound
cmp
mov
loopne
sbb
mov
hlt
fimuls
add
lock
mov
dec
stos
fucom
repnz
dec
or
sub
stos
add
arpl
insb
stos
sbb
xchg
ja
mov
pushf
hlt
fisubrl
pop
pop
jae
daa
adc
lea
jnp
rcrb
stos
sahf
or
mov
aaa
dec
bound
mov
jp
daa
xchg
adc
jmp
xchg
add
les
scas
or
out
xlat
iret
adc
jnp
cmpsb
ret
cmpb
imul
inc
and
sarl
stos
inc
jae
pop
sub
sub
xchg
fistps
dec
test
les
jmp
test
and
data16
jle
out
in
stos
jg
xor
fwait
pushf
cmp
mov
aad
mov
pop
shll
lods
jo
cmp
ljmp
and
dec
cmp
adc
mov
lods
stos
xchg
push
jle
int
lock
push
outsb
push
aam
repz
inc
mov
or
test
jb
jp
int
fwait
adc
sub
pushf
nop
dec
add
cmp
mov
xadd
fdivl
in
int3
insb
es
mov
int3
pop
cmp
xchg
std
test
or
xchg
icebp
gs
adc
fidivrs
pop
out
shlb
lret
stos
xor
cmc
lahf
into
scas
out
adc
push
stos
dec
push
jae
daa
or
rol
cmp
jb
aas
scas
les
inc
out
inc
jns
push
or
lods
jae
mov
jg
or
test
jmp
ljmp
cmp
scas
jl
scas
xor
push
cmp
push
ret
mov
fbld
fstl
rcl
pushf
xor
stc
stos
add
pop
sbb
stos
dec
cmp
sub
ds
fwait
in
pushl
leave
fsubs
push
add
sti
cmpsb
and
cld
aas
xchg
mov
inc
pop
jb
addr16
dec
lods
fnsave
enter
dec
xchg
in
stos
es
add
pop
das
imul
adc
jmp
or
push
popa
in
lods
inc
lcall
xor
xchg
cmp
out
mov
aad
mov
dec
in
sub
jns
ljmp
or
or
cmp
imul
shrl
xorl
jmp
xor
xchg
sbb
add
xor
push
dec
sti
inc
jmp
ljmp
fwait
insb
xchg
call
bswap
mov
test
cmpsl
stos
es
mov
stos
cmpsb
mov
add
fsubrs
mov
push
inc
mov
std
fisttpll
stos
cmp
cmp
jmp
sub
push
jmp
jnp
cmp
pop
mov
dec
pop
les
in
repnz
nop
outsl
mov
push
inc
lahf
stos
stos
adc
lret
xor
cld
orb
cmpsl
pop
outsl
jecxz
icebp
imul
imul
mov
mov
pop
ret
or
inc
inc
getsec
dec
fwait
movsl
fcompl
addl
add
stos
imul
cmpsl
scas
outsb
daa
test
mov
lods
cmp
ljmp
cmp
dec
fmuls
stos
xor
mov
stos
clc
aad
mov
stos
ljmp
mov
xchg
stc
mov
mov
sti
jmp
push
mov
sub
aaa
mov
push
stos
je
inc
jo
std
sub
mov
daa
push
mov
sub
pop
ret
push
push
fwait
mov
stos
adc
cmp
push
xchg
adc
stos
movsl
cld
daa
adc
jae
stos
call
aaa
popa
cmpsb
stos
xor
inc
or
mov
mov
mov
dec
ficomps
inc
cmp
into
cmp
jecxz
and
lock
pop
iret
mov
scas
sub
push
leave
shrl
inc
rclb
and
repnz
push
sbb
popa
imul
and
xchg
xor
push
loope
cli
dec
gs
and
sbb
aas
sbb
testl
clc
cmpl
stos
cmp
pop
xor
stos
push
js
les
shlb
jg
daa
or
jno
jo
push
stos
das
xor
test
push
xchg
push
sub
jl
lods
sub
and
inc
sub
pop
stos
loopne
mov
mov
cmp
aaa
lret
xchg
inc
out
rorl
push
imull
pusha
fdiv
jne
inc
fwait
insl
jnp
add
sahf
xlat
mov
popf
xchg
dec
int
fadd
jne
jns
jg
inc
jmp
mov
or
popa
lcall
inc
imul
jp
out
xorl
stos
iret
mov
add
push
shlb
mov
pause
xchg
inc
es
scas
subb
lret
fistpll
popf
fs
inc
enter
out
jns
add
push
and
scas
dec
lods
mov
push
dec
cwtl
adc
das
and
mov
cli
fsubrl
dec
jmp
sub
into
cmp
xor
int
lret
or
xchg
ja
repz
mov
mov
jo
mov
mov
push
call
push
aam
imul
lahf
lods
or
dec
jmp
sub
ds
std
xchg
cld
iret
mov
sbb
es
push
pop
mov
push
movsl
push
stos
bnd
jnp
inc
adc
stos
and
addr16
pop
jbe
addl
stos
test
sub
int
ja
stos
test
xchg
movl
push
arpl
jge
mov
inc
insb
pop
call
repz
mov
aaa
out
xchg
and
sub
stos
test
inc
leave
mov
stc
jo
push
lret
push
push
lahf
sbb
mov
ja
stos
lods
mov
bound
in
hlt
inc
push
js
stos
xchg
mov
push
imulb
loope
or
mov
pop
stos
xchg
adc
test
shrl
scas
xchg
xchg
push
dec
shr
cmp
lds
mov
sbb
cs
test
sbb
popa
nop
stos
and
inc
lods
fwait
lahf
ljmp
cmp
push
fnstsw
add
pop
sub
and
in
ret
stos
popf
mov
or
cmp
stos
js
and
addr16
push
jp
mov
stos
add
popa
adc
mov
inc
or
pop
clc
stos
in
int
jle
xchg
xor
jmp
inc
dec
or
cmp
jns
pushf
and
push
bound
lock
sbb
mov
roll
mov
stos
daa
lret
ret
pop
int
stos
in
jp
popa
dec
mov
cmp
add
push
mov
in
stos
cmp
adc
dec
push
mov
cmp
push
dec
daa
adc
insl
mov
cltd
stos
nop
push
lret
xlat
sbb
sbb
dec
inc
testb
push
adc
fwait
xchg
out
cmpsl
stos
cmp
mov
test
notb
iret
mov
lods
pop
rcrb
call
pusha
data16
inc
mov
ljmp
xchg
jne
ss
jp
popf
push
mov
fcoms
test
and
addr16
sahf
dec
stos
add
mov
out
daa
out
adc
ds
inc
push
stos
sbb
jns
jnp
dec
outsl
mov
lret
stos
jb
nop
fmull
xlat
stos
cs
xorl
stos
sub
movsb
push
adc
js
sbb
xor
insb
and
stos
clc
push
arpl
stos
daa
aam
decl
lret
ss
jmp
sti
mov
in
imul
imul
fadds
icebp
add
test
test
inc
ret
stos
fcompl
scas
mov
add
xchg
stos
cmc
dec
aad
or
lods
stos
inc
imul
daa
sub
pop
notb
xchg
stos
shlb
mov
push
jge
test
sbbl
movntps
mov
imul
add
mov
cmc
mov
cwtl
jmp
stos
nop
jbe
dec
gs
ljmp
ja
outsb
iret
std
stos
lcall
jp
mov
mov
int3
mulb
sub
loop
sbb
and
stos
or
sbb
stos
xchg
xor
xchg
jmp
out
mov
mov
ror
decb
imul
mov
mov
and
in
insb
mov
cmp
mov
sar
scas
frndint
pop
popa
hlt
into
lods
stos
mov
mov
jmp
mov
ret
cmpl
mov
lods
fstp
arpl
minsd
imul
jnp
mov
push
rcrb
xor
aas
stos
int
es
mov
xchg
stos
and
or
and
je
or
loop
mov
push
fsubrp
add
les
xor
mov
sbb
push
adc
imul
mov
push
inc
neg
push
inc
fistpl
sahf
xchg
xor
inc
dec
mov
lahf
cmp
ja
outsl
ljmp
insb
jmp
filds
rcrb
into
xchg
dec
mov
cmp
enter
xor
push
jno
repnz
cli
mov
addr16
scas
or
lea
rcrl
insl
arpl
add
mov
movsb
mov
push
repz
addr16
inc
inc
inc
xchg
or
jp
mov
dec
sub
fwait
sbb
out
mov
cwtl
inc
push
fistl
jecxz
push
stos
gs
popa
out
int3
jl
xchg
and
mov
and
ja
fmulp
mov
cwtl
imul
scas
arpl
movb
shlb
stos
mov
xchg
sti
popf
add
stos
dec
sub
std
sahf
or
sbb
add
stos
sub
or
jl
mov
loop
adc
cwtl
push
lea
fwait
xchg
pop
aad
mov
mov
movsb
stos
pop
or
fdivl
test
dec
xchg
roll
add
orl
cmp
inc
xlat
mov
lods
stos
shll
mov
fnsave
sub
push
and
adc
loope
lret
stos
sbb
lds
add
test
stos
xor
push
ja
stos
xchg
std
ficoml
mov
mov
inc
and
inc
and
dec
popa
xor
stos
sbb
adc
je
jmp
ret
stos
in
out
add
test
cmp
push
sub
outsl
test
pop
cmp
mov
and
push
inc
pop
push
out
sub
dec
sub
mov
stos
lahf
pop
pushf
sti
mov
pop
cmpl
mov
lock
lret
cli
sub
mov
into
push
stos
js
fstpt
in
addb
movsl
xchg
stos
xchg
push
into
jl
shrl
jp
test
lods
inc
stos
enter
and
outsl
cld
add
mov
jbe
xchg
movsl
dec
fwait
mov
mov
lods
rol
fwait
and
add
stos
dec
out
mov
mov
lret
mov
ret
cltd
jns
push
mov
imul
push
jno
push
mov
jb
nop
mov
jmp
stos
pop
adc
into
pop
stos
pop
in
dec
jle
rcl
punpckhbw
dec
push
stos
je
nop
add
jnp
xchg
mov
pop
adc
fsub
stos
push
inc
ficoms
jae
imull
pop
push
cmp
imul
or
xchg
std
icebp
in
daa
mov
out
fwait
pop
loopne
jle
stos
dec
pop
add
or
pop
sbb
call
mov
mov
iret
bound
stos
ret
fwait
pop
add
out
bts
mov
xchg
cmp
lock
push
lret
in
dec
cmp
shlb
cmp
sbb
mov
push
mov
clc
mov
das
xchg
lret
loope
mov
xchg
and
jge
test
stos
dec
push
loope
dec
fadds
and
xchg
int3
es
movsl
arpl
shrd
insb
xchg
mov
push
gs
or
sub
sub
inc
mov
addr16
subb
mov
dec
fdivrl
mov
mov
mov
pop
rorl
add
cmp
pusha
push
sahf
pop
addl
or
mov
ss
stos
fwait
dec
lcall
cmp
jae
mov
lods
jns
cmp
insb
sbb
stc
cltd
sub
inc
xchg
jnp
or
stos
mov
mov
cld
mov
movsl
jl
enter
dec
stos
xchg
stos
je
sti
test
and
sub
push
add
xor
fisttpll
out
stos
iret
in
fists
test
fldl
repz
pop
imul
and
pop
ljmp
mov
ja
stc
jb
adc
cwtl
mov
lods
jp
stos
lret
jns
dec
fstl
sbb
jne
push
jle
mov
lea
adc
cmp
pop
jnp
stos
jge
lods
test
mov
pop
dec
std
rolb
aad
adc
clc
stc
sahf
icebp
dec
sub
popf
stos
xor
pop
js
push
insl
bnd
mov
movzwl
push
lods
lahf
nop
mov
pop
hlt
stos
out
das
enter
push
addr16
rol
cmp
and
pop
mov
jb
dec
and
bound
sub
xchg
pop
out
jmp
mov
fs
push
fwait
testb
pushf
pop
mov
cwtl
mov
cmpsb
jmp
xlat
adc
cli
push
sbbl
shl
inc
lahf
xchg
sub
add
cmp
inc
mov
xchg
stos
xchg
mov
out
jl
jle
xchg
in
jnp
pop
push
xchg
mull
mov
mov
jbe
cmp
or
stos
lock
or
insl
adc
dec
cltd
in
lods
jmp
nop
xchg
ror
dec
pop
adc
xor
cmpl
lcall
stos
lds
push
cmp
cmp
jb
push
xchg
test
adc
in
adc
add
jnp
and
pop
sti
je
sub
dec
ss
movsl
imulb
pop
jmp
cwtl
call
sti
fistpll
mov
mov
dec
jo
cmpsl
ds
test
and
pop
mov
mov
out
inc
mov
and
push
arpl
and
push
pop
shlb
xlat
ret
jno
and
aaa
or
mov
xchg
jg
xchg
arpl
stos
dec
cmp
jne
out
adc
lahf
loope
mov
test
xor
stos
test
xor
mov
call
cli
pop
lret
fsubs
push
fisubl
in
std
pop
inc
xchg
mov
stos
repnz
frstor
movsl
jl
pop
inc
push
add
fld
cld
cmp
mov
dec
stos
lcall
cli
sub
bound
jle
xchg
shrb
pop
push
xchg
xchg
xor
cmc
bound
jmp
sbb
icebp
fwait
imul
scas
adc
mov
or
outsl
pop
insl
xchg
cmpsl
in
stos
clc
mov
add
dec
ss
repnz
cmc
jbe
dec
out
pop
movsb
mov
and
xor
pop
stos
xor
fsubs
stos
mov
jg
cwtl
mov
lds
mov
shr
icebp
dec
and
cltd
scas
imul
fstpl
cmpsb
fwait
xchg
cmp
mov
jmp
jno
ret
stos
add
clc
push
mov
and
stos
popf
leave
std
mov
daa
and
rorl
sbb
stos
or
push
pop
leave
cmp
test
or
pusha
sub
stos
pop
jne
sub
shll
mov
fsubrs
jnp
in
push
sbb
push
js
das
sbb
ja
scas
scas
std
mov
sub
push
inc
out
in
xorl
mov
fldl
add
mov
loope
push
repz
popa
pop
negb
enter
lahf
jge
xchg
and
lock
mov
mov
push
cmc
js
jbe,pt
add
sub
daa
movsl
push
jle
mov
fsubl
sbb
jnp
cmpsl
xchg
jl
jne
test
out
cld
imul
pop
add
stos
pop
insl
jmp
cmp
stos
cld
or
fs
jne
stos
fmuls
insb
testl
cmp
cmp
and
jno
mov
outsb
cvtps2pi
addb
pop
les
or
outsl
xorl
dec
daa
xor
loopne
daa
jecxz
xchg
jl
xlat
sti
shll
jae
inc
stos
mov
cli
sub
inc
sti
stos
mov
adc
pop
jne
int
xor
arpl
and
lods
iret
icebp
sub
xor
fldcw
mov
cs
jle
in
es
stos
add
fstpt
stos
lods
push
pusha
mov
jmp
mov
push
mov
stos
daa
rcrl
ljmp
or
add
xchg
or
xchg
ja
das
dec
stos
mov
in
dec
cmp
cwtl
stos
adc
hlt
xchg
and
mov
out
stos
push
mov
inc
out
stos
and
inc
mov
jo
jmp
stos
sub
jmp
mov
push
adc
add
int
stos
cltd
pop
mov
mov
or
pop
push
stos
and
shr
sub
stos
jno
sub
pushf
ret
cmp
push
mov
test
and
stos
adc
scas
xor
jp
ds
push
insb
aad
mov
or
mov
jle
mov
xlat
cld
inc
cli
jl
push
js
in
xor
loope
popa
call
pop
cmc
cmp
arpl
or
stos
inc
mov
pop
inc
cmp
cmpsl
bnd
stos
shlb
mov
mov
negl
es
fisubrl
stos
aas
xlat
sbb
dec
sub
stos
enter
mov
sub
adc
in
aas
fildll
out
stos
int
ja
fnstsw
push
insb
xor
test
stos
xor
dec
xor
sub
ret
push
test
mov
dec
mov
and
test
hlt
stos
mov
pop
leave
arpl
xchg
aam
push
sbb
lret
stos
mov
mov
cmpsl
add
stos
push
fstl
push
stos
hlt
mov
orb
push
stos
inc
aas
dec
adc
inc
stos
and
insl
movsl
jb
scas
fwait
stos
dec
enter
aam
or
das
mov
xchg
pop
push
mov
stos
stos
js
in
ret
and
mov
mov
es
or
mov
sub
mov
push
in
into
or
or
adcb
aad
stos
xchg
add
fs
add
cmp
mov
arpl
mov
jge
lret
cli
push
js
or
cmc
sub
stos
xorl
and
stc
repz
leave
inc
bound
stos
cmp
push
stos
sbb
or
cmp
daa
clc
pop
push
mov
or
stos
inc
xor
stos
or
adc
jg
aad
mov
test
dec
sbb
mov
push
ljmp
popf
shrb
jecxz
mov
ljmp
cmp
xchg
jbe
subb
xor
xor
mov
or
shl
jmp
cld
push
adc
fisttpl
lods
push
push
xchg
rcll
or
mov
fs
mov
push
and
mov
stos
inc
jnp
clc
subl
call
sti
mov
stos
les
cmp
adc
gs
mov
mov
lret
sarl
das
push
iret
imul
stos
add
lret
out
nop
dec
push
test
adcb
stos
jnp
cmp
testb
stos
fisttps
ljmp
mov
push
fldenv
stos
jg
mov
out
jle
in
imul
stos
sbb
push
loope
cmpsb
inc
sti
stos
mov
push
push
xchg
dec
cmp
xlat
pop
and
in
dec
aaa
mov
hlt
iret
push
mov
ja
movsb
loop
push
loopne
push
dec
push
mov
mov
pop
adc
test
popa
cmp
mov
lahf
add
mov
gs
dec
scas
test
ja
lods
mov
sbb
push
mov
bound
nop
stos
mov
mov
decb
adc
in
stc
mov
cmp
or
imul
jnp
js
mov
or
adc
lcall
je
popf
xlat
inc
dec
cmp
out
lods
dec
daa
lods
lock
fistpll
add
popf
repz
addr16
cs
popf
push
test
daa
rolb
int3
mov
arpl
sub
fdivrl
mov
lock
or
pop
stos
xchg
shrl
iret
mov
pusha
xchg
and
dec
mov
insb
and
arpl
roll
or
std
mov
int
enter
movsb
or
jae
es
jle
pop
sbb
mov
and
lock
dec
mov
data16
stos
xor
push
cmp
jge
pop
pop
and
adc
add
mov
mov
movsl
jmp
stos
aad
push
rclb
xlat
push
xchg
jne
lret
out
xchg
pop
stos
jae
push
adc
inc
imul
movsb
mov
or
fstps
xor
inc
mov
mov
pop
scas
add
sbb
test
out
sbbb
stos
arpl
mov
stos
cli
data16
cmp
lds
cmp
mov
xchg
dec
pop
mov
dec
in
jmp
or
xchg
lcall
adcb
lahf
inc
cmp
js
nop
mov
push
cmp
jp
test
xchg
stos
imul
push
stos
add
mov
lods
arpl
xor
jne
stos
adc
jmp
bound
xchg
xchg
xchg
jne
stos
cld
add
sbb
pop
adc
jmp
mov
and
adc
stos
fdivrs
out
stos
inc
data16
or
or
xchg
stos
dec
mov
inc
xor
fsts
stos
ret
pop
xorb
adc
fs
call
sbb
pop
stos
dec
jne
sarb
xchg
imul
xchg
push
sbb
dec
inc
into
movsb
lods
outsl
stos
mov
mov
or
inc
xchg
inc
lods
lods
push
xor
sbb
fmull
lods
lret
fsubrs
insb
enter
cmp
movsb
cwtl
gs
fcmovbe
movb
ret
aaa
xor
mov
decb
lods
inc
xchg
stos
adc
lods
subb
popf
push
mov
jp
adc
ds
mov
push
mov
push
lock
push
popf
add
push
imull
and
test
mov
loopne
push
stos
add
inc
fisubrs
into
pop
stos
mov
jecxz
adc
push
imulb
stos
and
xchg
icebp
cs
ja
push
sbb
sub
dec
jge
clc
stos
fwait
lret
ljmp
xchg
test
cmp
call
test
or
xchg
xor
xchg
out
push
pop
stos
dec
mov
adc
or
cmp
pop
mov
test
adc
pop
bound
or
fadds
jmp
into
lret
pop
fwait
and
pop
cwtl
inc
in
out
out
imul
mov
lea
sub
sub
mov
sbb
xlat
call
cli
in
xchg
mov
add
sti
xor
cld
stos
mov
mov
mov
xor
repz
jmp
sbb
sbb
cs
jne
popf
in
shrb
and
in
outsb
jge
stos
in
or
adc
xor
cmc
popf
and
outsl
or
and
sub
xorl
sbb
sbb
in
mov
stos
cmp
mov
outsl
dec
lahf
in
imul
stos
mov
sub
pop
jb
stos
jmp
lret
push
lea
push
fmulp
mov
push
mov
cli
xchg
incl
pop
inc
sbbb
outsb
xchg
pop
cmpsl
pop
sub
mov
stos
fucomi
jge
in
add
lret
cltd
repz
aam
fwait
clc
inc
jno
aaa
in
dec
sub
movsb
adc
xchg
push
subb
repnz
ret
adc
jmp
cltd
gs
cli
imul
lods
jle
jle
and
int3
fstl
stos
mov
movsb
jg
daa
mov
bound
daa
jmp
mov
lcall
inc
and
push
mov
jp
cld
dec
cltd
xchg
xchg
mov
adc
inc
loop
into
stos
les
repnz
cmpsl
enter
popf
sbb
setae
mov
popf
push
stos
out
aam
sbb
ret
dec
push
stos
outsl
xchg
ss
lock
mov
pop
adc
lret
push
mov
xlat
jns
das
mov
sti
int3
mov
insl
sub
xor
cld
stos
pop
inc
dec
sbb
push
jecxz
push
mov
push
stos
mov
div
pop
cld
lahf
add
inc
xchg
sti
mov
adc
fistl
xor
cmpb
mov
push
lea
xor
pushf
lret
stos
mov
std
push
idiv
clc
out
stos
test
xor
addr16
xchg
jbe
mov
and
cmpsl
dec
mov
insl
cmpl
stos
pop
imul
sti
test
jno
inc
mov
stos
mov
xchg
sbb
stos
jo,pt
xchg
push
push
jmp
jnp
lahf
aad
int3
xchg
dec
lock
mov
mov
push
call
adc
daa
sub
mov
inc
cmp
and
jmp
or
jmp
pop
popf
jnp
hlt
sub
or
inc
cmpb
push
xchg
mov
cmpsb
mov
andl
lods
xchg
outsb
test
or
cmp
or
pop
cmp
test
mov
clc
lahf
jmp
dec
cmp
xchg
stos
mov
push
in
ret
movsb
xchg
ljmp
dec
call
std
pusha
pop
stos
mov
aas
std
psubsw
cmp
or
xlat
stos
push
stos
dec
mov
pop
mov
pop
and
bound
dec
aam
loope
stos
sub
lret
xchg
stos
std
lahf
stos
mov
aaa
rolb
decl
jo
or
mov
mov
and
mov
push
xor
cmc
lahf
jmp
push
dec
imul
xchg
jle
lods
and
xchg
cmpsl
sbbl
xor
stc
stos
sub
mov
insb
jmp
inc
mov
lcall
clc
mov
push
idivb
test
test
xchg
jle
xbegin
std
xchg
shlb
mov
inc
xor
push
cmc
dec
jl
jle
out
jl
push
jp
cmp
inc
pop
mov
jnp
push
sbb
jecxz
stos
sbb
adc
into
mov
jnp
cld
xchg
bound
jbe
repz
mov
adcb
mov
pop
cmc
mov
xor
push
sub
pop
push
or
cmpl
stos
out
mov
ret
push
or
push
mov
leave
mov
bound
cli
jns
mov
cmp
jmp
mov
ret
jmp
aaa
das
adc
inc
stos
std
in
mov
stos
xor
cs
sbb
pop
sub
push
xchg
inc
std
xor
cmpsb
fwait
inc
fmulp
xor
jge
xchg
in
inc
sbb
stos
jnp
inc
js
out
push
mov
push
xchg
pop
mov
cmp
shll
mov
add
jno
pop
pop
fsubrs
js
inc
and
shl
cltd
stos
add
into
dec
lahf
jo
lret
test
outsb
push
xor
das
xchg
ljmp
jno
inc
cltd
and
stos
push
cli
aaa
hlt
mov
or
test
stos
cmp
lods
scas
xchg
sub
cmp
dec
xchg
sbb
xchg
stos
pop
sub
sub
cs
xor
mov
cmp
pop
sub
cmp
imul
mov
divb
sarb
sub
mov
sbb
out
or
daa
call
cmpsl
lret
shrl
pop
push
in
xchg
stos
rcll
pop
popf
stos
call
jp
fimuls
into
std
cmp
stos
push
adc
or
stos
pushf
loop
cmp
lcall
add
stos
jmp
fidivl
js
leave
sub
mov
lcall
ret
rcl
fidivrs
ds
enter
dec
lcall
mov
lahf
xchg
add
or
fwait
jmp
cmp
push
inc
cmp
mov
and
sub
scas
mov
and
or
out
pop
sarl
stos
ljmp
push
inc
jno
je
loopne
jle
ljmp
sub
jae
xchg
pop
sbb
inc
cmp
push
lret
mov
rol
and
nop
dec
xchg
cmp
mov
jne
xchg
or
dec
lods
stos
mov
xor
stos
das
or
insb
mov
stos
lret
mov
jno
and
pop
lods
in
inc
fs
int3
push
in
aad
dec
mov
push
sub
xor
insl
out
fisubrl
data16
jmp
cmpsb
subb
push
mov
into
fbstp
stos
pop
pop
iret
jo
sub
cltd
imul
push
sbb
xchg
cmpsl
stos
inc
xchg
rorl
mov
subb
lods
sbb
mov
nop
addr16
stos
jno
out
sub
arpl
push
popa
inc
pusha
inc
add
xor
stos
mov
outsb
or
mov
jns
lds
pop
lcall
subb
dec
stos
push
xchg
push
aaa
inc
cmpsb
stos
xor
arpl
inc
ja
imul
lret
and
mov
jp
add
stos
pop
sub
stos
imul
das
jp
xchg
stos
lock
or
js
add
mov
sahf
loopne
stos
loope
rorl
dec
jmp
inc
movsb
pop
sub
jns
sbb
sub
or
or
adc
addr16
pop
mov
outsl
cwtl
fimuls
dec
push
loopne
test
xchg
lds
mov
fwait
icebp
mov
stos
repz
jmp
sub
jge,pn
push
xchg
jbe
stos
fdivrs
ds
out
not
stos
cli
rcrl
jmp
mov
cmp
push
inc
dec
stc
imul
cwtl
stos
jae
shl
in
sti
inc
shrl
addr16
or
jle
xor
scas
hlt
cmp
test
mov
jg
jmp
out
outsb
push
inc
xchg
push
repz
sbb
stos
mov
xchg
jmp
in
dec
jnp,pt
dec
stos
or
mov
paddd
mov
add
stos
ljmp
movsb
and
dec
inc
mov
mov
mov
mov
leave
or
mov
stos
lods
mov
adc
stc
or
stos
icebp
loopne
ret
add
test
jns
sahf
pusha
sub
popf
pop
stos
dec
cld
xchg
cmp
add
or
scas
push
cli
test
stos
outsl
clc
mov
loope
add
imul
jecxz
out
sbbl
stos
xchg
mov
sbb
mov
push
mov
jbe
pop
jnp
mov
stc
and
insl
stos
mov
cmp
mov
adc
sbb
loope
mov
mov
cltd
leave
mov
sbb
cmp
push
stos
cmp
xor
stos
out
rclb
ret
mov
and
int3
nop
add
daa
adc
subl
push
pop
stos
xchg
pushf
fwait
out
aaa
sub
stos
aam
out
sbb
stos
loope
inc
jb
cmp
adc
jnp
js
or
jae
jb
mov
xchg
cmpsl
popa
ja
clc
das
movsl
push
arpl
gs
popf
pop
aam
stos
jl
out
std
sbbl
jge
repz
cmpsl
insl
daa
stos
xchg
lret
mov
mov
popf
hlt
stos
jp
xor
cmp
push
mov
jle
insb
addr16
les
shlb
gs
stos
adc
xchg
stos
xor
movsl
mov
stos
push
jae
lods
lods
dec
sahf
adc
sar
loope
stos
mov
je
in
outsl
push
stos
insl
jno
xor
stos
ja
test
and
div
stos
jns
push
sub
cmp
stos
mov
test
rorl
or
xchg
pop
push
jge
dec
xor
jnp
ret
lret
in
push
sbb
or
insb
lret
clc
stos
xchg
push
mov
dec
lds
fs
and
mov
stos
mov
pop
push
cs
imul
out
xchg
lret
ss
icebp
aaa
test
mov
rorb
imul
scas
mov
or
les
xchg
dec
out
mov
jl
pop
adc
xchg
subb
xchg
stos
ss
jge
or
out
daa
xchg
int
sbb
inc
iret
test
mov
shll
stos
ljmp
stos
fs
add
dec
cwtl
clc
stos
test
int
lods
fcoml
loope
imul
sub
or
or
ss
stos
pop
dec
fwait
out
jns
push
adc
test
xchg
and
cmp
pusha
mov
or
leave
cmpsb
scas
add
adcl
mov
lret
stos
sbb
aaa
jp
lods
xchg
mov
add
cltd
sub
jl
mov
je
mov
mov
stos
adc
icebp
mov
stos
ret
aad
push
sub
in
sub
stos
into
jg
and
add
fucomip
xchg
sub
daa
pop
cmp
pop
mov
cmp
sub
call
add
push
ds
xchg
mov
adc
nop
cwtl
lds
imulb
std
stos
pushf
pusha
adc
mov
sub
cmp
cwtl
adc
mov
sub
jge
iret
mov
outsl
aaa
xchg
xlat
popa
std
loopne
stos
addr16
dec
sbb
cmp
int3
stos
cs
outsl
in
scas
cmp
or
stos
clc
dec
test
out
fidivl
jp
pop
jmp
sub
aam
lahf
movsl
inc
daa
mov
popf
int3
mov
scas
stos
lret
sub
pop
stos
push
fst
stos
leave
cltd
and
cmp
stos
daa
cmp
adc
jb
loope
stos
in
mov
mov
push
sbb
lret
inc
cli
adc
movl
or
scas
or
daa
stos
and
loope
leave
lds
stos
sbb
es
cmpsb
jmp
fwait
scas
stos
jb
std
push
fwait
subb
dec
lods
je
sub
mov
push
cmpb
sub
fsubp
stos
add
stos
adc
fst
push
push
mov
inc
addb
lcall
stos
imulb
pop
out
stos
fs
xor
mov
push
xchg
les
lods
stos
dec
mov
cmp
mov
lea
mov
aam
xchg
xor
pushl
or
jo
mov
js
es
adc
stos
nop
jmp
nop
sub
mov
or
gs
nop
cmpsl
sti
or
aam
bound
decl
ljmp
mov
or
arpl
stos
lret
clc
into
inc
inc
and
out
cwtl
add
dec
push
mov
dec
jbe
sub
sub
add
adc
add
jo
in
push
sbb
stos
inc
out
jp
out
jmp
jmp
test
insb
inc
daa
mov
push
popa
mov
push
lahf
jmp
dec
cltd
shr
lcall
popa
shll
add
aam
pop
sbb
jle
sahf
in
lods
loop
add
sub
mov
mov
sub
rcll
jmp
iret
bound
orb
push
stos
ja
bnd
xor
sbb
or
leave
lret
mov
int
repnz
jmp
aam
setns
jns
mov
inc
add
mov
frstor
imul
fwait
addr16
cmc
daa
cmp
fwait
push
lds
aas
ja
rcrb
stos
enter
pop
xchg
sub
lret
cmp
sub
stos
jbe
enter
int3
or
jb
mov
jl
stos
test
or
sbb
or
adcb
and
xchg
aad
test
into
ss
pop
sbb
sbb
std
xor
movsb
xor
mov
adc
lahf
sbb
cmp
jl
loopne
in
lds
and
xchg
mov
mov
xchg
movsl
dec
aad
pop
xor
mov
xchg
fucomp
jmp
mov
sub
insb
or
out
test
jmp
mov
notb
sub
rcr
stos
cmp
stos
mov
xor
push
cmp
push
test
pusha
ret
stos
adc
ja
insb
jl
jns
jmp
lret
stos
mov
adc
insl
aas
xchg
and
rorb
cs
popf
xchg
pop
in
dec
mov
dec
out
lret
add
stos
repz
mov
js
stos
lock
andl
stos
xor
loope
sti
cmp
mov
dec
push
jmp
les
rcl
xchg
loopne
stos
cmp
inc
ds
test
sub
jmp
pop
or
mov
jmp
arpl
iret
pop
lcall
mov
dec
fs
std
dec
and
jb
stos
sub
xchg
stos
cmc
insl
out
mov
bound
mov
stos
rcl
inc
icebp
ds
xchg
jns
aam
pusha
mov
inc
cs
stos
test
xchg
dec
mov
in
js
inc
stos
cli
cld
stos
jle
and
adc
rol
incb
dec
sbb
dec
das
cld
icebp
enter
pcmpgtd
stos
ljmp
cmpsb
dec
xor
push
stos
jbe
xchg
iret
xchg
sub
sub
cltd
mov
stos
mov
dec
xorb
stos
mov
inc
xor
scas
pushl
jno
pushf
das
test
ret
stos
inc
cli
jp
mov
and
inc
add
adc
arpl
xor
movsb
jmp
mov
loope
gs
popf
fs
pop
xchg
or
stos
mov
mov
std
lods
sub
sub
adc
pop
cltd
mov
add
mov
xchg
pop
repnz
cmp
xor
lret
std
out
inc
mov
fs
adc
pop
addb
and
stos
pusha
adc
adc
jae
nop
imul
mov
stos
mov
mov
mov
add
test
push
xchg
stos
jg
out
jbe
xor
in
and
lret
daa
and
mov
stos
iret
jmp
jno
jmp
pop
pop
xchg
pop
and
cltd
jge
stos
out
shlb
xor
jns
stos
jp
fists
add
mov
sub
arpl
mov
stos
cs
lahf
fstps
pusha
stos
les
ljmp
sbb
outsl
mov
mov
stos
mov
inc
or
add
dec
fildl
gs
xlat
gs
aas
mov
imul
adc
subl
popa
lcall
lods
leave
xchg
ret
stos
push
and
jecxz
xor
sti
push
inc
movsl
sbb
xchg
stos
push
mov
icebp
stos
xchg
roll
movsb
cwtl
hlt
sbb
or
dec
inc
shl
dec
cltd
test
fwait
popf
imul
out
call
add
jmp
ds
lcall
xlat
addr16
jae
adc
je
test
stos
iret
stos
hlt
or
imul
imul
xchg
pop
jl
sub
mov
lret
adc
push
scas
mov
repnz
add
adc
mov
xchg
mov
lea
fwait
scas
testl
das
ljmp
add
out
stos
dec
pop
jl
sbb
subl
into
shrb
mov
xor
ss
cmp
pop
sub
inc
cmp
xor
fldcw
inc
mov
xchg
jo
lock
clc
xor
stc
cs
push
rcl
inc
js
xorb
jmp
mov
stos
in
or
aaa
stos
xor
jne
jg
and
adc
addr16
sarb
pop
pop
sbb
in
pop
adc
adc
cmp
gs
sub
xchg
stos
imul
scas
iret
cld
inc
push
stos
mov
mov
loopne
lods
jl
in
stos
jno
shrb
cmp
loopne
scas
mov
jg
outsb
push
fistl
movsl
stos
inc
jle
test
es
stos
push
adc
jne
mov
pop
stos
add
daa
setp
icebp
sbb
add
mov
jg
pop
or
int
js
lret
sbb
push
into
adc
stos
inc
mov
sbb
stos
scas
push
pop
inc
lods
aam
not
fwait
outsl
sub
add
inc
stos
mov
mov
outsl
cmp
push
and
pop
pop
mov
mov
inc
pop
rclb
imul
test
push
mov
mov
arpl
js
stos
adc
adc
imul
lahf
cmpsb
fwait
mov
movsl
aaa
imul
mov
jg
testl
ds
hlt
iret
mov
dec
or
push
stos
pop
push
mov
insl
pop
pusha
stos
test
mov
sbb
inc
stos
ficoml
sbb
stos
adc
fbld
mov
push
daa
in
cmp
pop
mov
pop
stos
stos
mov
fchs
dec
and
xor
lds
daa
loopne
clc
pop
mov
arpl
push
sti
fstpl
repnz
movsl
mov
js
fstpt
iret
lock
and
push
sub
cmp
mov
jmp
xor
jecxz
push
stos
cmpsl
pop
outsl
adc
ljmp
mov
imul
stos
adc
fsts
mov
stos
rcrl
push
inc
js
and
negb
add
stos
hlt
add
out
mov
or
and
stos
cld
xor
push
pop
cmp
and
daa
and
outsb
sahf
or
add
shrl
jmp
jge
xor
cltd
shl
stos
sub
inc
sti
daa
sub
aam
jns
ja
aas
fadd
add
mov
test
dec
fimull
inc
push
push
stos
xchg
push
sbb
sub
dec
cs
dec
sub
movsl
fs
and
and
and
push
jno
mov
push
leave
dec
adc
fldenv
shrl
or
cmpsb
fwait
enter
pmaddwd
insl
ret
jl
stos
or
out
dec
push
in
inc
pop
movsl
xchg
psraw
aad
dec
xchg
fldcw
stos
test
mov
cmovb
push
stos
gs
xchg
pop
in
xor
lahf
push
adc
pop
in
jae
movsb
loope
ror
into
xor
mov
nop
sahf
mov
gs
and
sbb
pop
cltd
daa
pop
stos
movb
xor
and
xchg
loope
test
pop
in
decl
call
frstor
jns
cmc
imul
xchg
stos
sub
push
xorb
fwait
mov
insl
mov
adc
out
sbb
mov
std
loopne
fisttpl
xchg
cltd
cmp
stos
pop
sbb
adc
imul
sub
in
dec
cli
jmp
mov
or
mov
pop
fs
add
lret
scas
stos
bound
pop
mov
mov
push
add
xchg
jle
adc
stos
jmp
push
inc
in
fsub
stos
or
cld
jne
jg
aas
push
dec
lahf
mov
push
stos
mov
push
push
sub
push
sub
lods
mov
cwtl
and
inc
mov
arpl
inc
stos
gs
xchg
mov
dec
movsb
pop
lods
mov
xchg
test
sbb
repnz
pop
stos
pop
add
ret
xor
pop
movsb
dec
jp
sbb
stc
jmp
dec
imul
pop
xchg
cmp
cld
xchg
mov
imul
xor
and
hlt
out
jl
push
xchg
xor
in
imul
outsl
mov
loope
lret
jbe
stos
push
inc
add
sbb
push
cmp
sbb
mov
fdivr
fs
nop
and
dec
stos
xor
out
adc
pop
or
lods
lahf
pop
repnz
sbb
pop
pusha
popf
cs
mov
jecxz
mov
pop
jnp
sbb
xchg
repz
pop
mov
movsb
imul
shlb
mov
push
mov
out
dec
xchg
movsb
faddl
stos
pop
ja
or
adc
xor
into
insl
and
stos
inc
stos
add
fisttpl
stos
inc
push
icebp
push
jp
loop
test
stos
mov
mov
das
xor
ljmp
mov
xchg
and
jbe
sub
hlt
xchg
adc
mov
fwait
ja
xchg
imul
idivl
je
xor
and
stos
and
pop
jg
mov
jns
mov
jae
mov
xor
outsl
stos
pop
push
orl
loopne
leave
lods
shrb
jne
mov
cld
lcall
outsb
xlat
inc
addr16
push
int3
or
imul
mov
inc
xchg
test
xchg
or
rol
stos
bound
dec
gs
into
pop
xlat
xchg
mov
jmp
inc
pop
pop
cmp
xchg
imul
mov
gs
test
mov
jp
stos
das
sahf
adc
jnp
and
stos
test
or
mov
out
ret
mov
and
inc
inc
or
mov
cmp
dec
gs
js
adc
imull
stos
adc
scas
inc
test
dec
shrb
fistpl
imul
ljmp
jp
pop
stos
or
and
stos
sbbl
in
lods
push
pop
mov
aad
scas
or
negl
jnp
mov
xlat
icebp
nop
pop
stos
push
adc
xchg
sub
shl
lcall
xor
mov
imul
stos
bound
jl
fstl
stos
pop
mov
adc
mov
ficoms
stos
or
lds
iret
adc
gs
xor
mov
xchg
stos
push
cs
cmp
dec
mov
lock
stos
xchg
xlat
or
fsubp
mov
mov
ret
mov
je
xor
xor
in
mov
scas
jg
fildll
xchg
push
dec
out
out
adc
mov
adc
rorl
xchg
imul
jnp
imul
jbe
enter
mov
mov
lcall
push
jno
pop
dec
jp
jnp
push
xchg
testb
push
lahf
out
int
dec
out
pop
cs
xor
mov
loope
icebp
push
mov
push
imul
mov
ds
test
sbb
stos
cld
xchg
je
inc
mov
hlt
lcall
cmp
sub
push
es
stos
ljmp
stos
sub
dec
mov
test
stos
jp
jl
pop
mov
push
adc
stos
mov
jmp
xlat
add
push
and
xchg
xchg
in
stos
or
push
daa
push
ret
jns
mov
cmp
nop
movsb
xchg
call
adc
xchg
arpl
stos
sbb
or
stos
notb
push
jmp
gs
stos
sti
mov
sub
mov
mov
shll
leave
mov
nop
adc
pop
adc
sbb
pop
xchg
nop
gs
jbe
jmp
or
sbb
movsb
insb
ret
pop
sbbl
xchg
mov
das
adc
xchg
cli
add
fisttpl
xchg
inc
pop
cltd
cmp
adc
das
and
dec
pop
scas
mov
stos
inc
insb
into
mov
imul
inc
repnz
add
shlb
call
pusha
cmpb
adc
inc
mov
xchg
dec
push
xchg
cmp
dec
and
stos
stc
or
pushf
imul
addr16
jmp
imul
cmpsl
pop
lcall
cmpsb
sub
stos
in
jl
jg
sub
cli
cmp
stos
flds
arpl
sub
mov
dec
mov
test
fisubrs
pop
stos
popl
add
lret
fsubl
imul
mov
repz
mov
sub
cli
mov
dec
mov
iret
outsl
jb
mov
sub
stos
stc
xchg
aas
jecxz
and
adc
mov
movsb
rcrl
mov
pusha
leave
cmp
popf
add
sahf
out
mov
xchg
test
iret
cmpsl
lods
mov
outsl
lcall
xor
sub
push
inc
pop
lods
xchg
jmp
push
mov
mov
mov
stos
imul
ljmp
add
add
push
jb
push
das
cmp
fwait
test
adc
inc
aad
stos
ja
out
jae
test
fmuls
dec
push
inc
mov
enter
sub
daa
pop
es
cmp
mov
mov
lret
shrl
data16
out
stos
jmp
dec
and
pop
sub
stos
js
jbe
lods
stos
sbb
push
xchg
pop
rcll
mov
outsl
stos
das
lahf
push
shrl
ret
stos
push
iret
pop
xor
idivl
out
daa
lret
inc
test
lock
push
xchg
ljmp
fcoms
loope
mov
lret
inc
push
icebp
push
stos
addr16
dec
idivb
test
or
mov
out
insl
jp
mov
incb
stos
sti
lret
mov
stos
in
inc
cwtl
out
mov
stos
mov
and
call
rolb
aas
mov
stos
xlat
inc
pop
icebp
or
stos
cmp
xor
xor
xchg
adc
fdivr
fwait
jl
imul
lret
mov
or
std
out
xchg
stos
mov
mov
stos
popf
aaa
addb
sbb
imul
mov
ja
nop
cmpsb
int
adc
movb
dec
or
jle
mov
dec
jmp
mov
mov
sub
pop
mov
les
aas
outsl
stos
add
mov
push
stos
or
mov
imul
xor
into
fisubrl
hlt
imul
lods
lret
test
push
cmp
and
shrb
aam
out
lret
push
mov
mov
ret
lea
mov
nop
and
shll
push
or
cmp
xor
test
gs
roll
mov
in
dec
fildl
outsl
xor
stos
scas
dec
aaa
sub
add
add
mov
stos
jb
incb
adc
dec
stos
dec
jae
out
shrl
dec
mov
dec
or
inc
jge
xor
inc
and
rcrl
cs
stos
scas
jle
out
mov
mov
cmp
xchg
icebp
mov
arpl
lret
stos
push
xlat
cmpsl
mov
shrl
cld
stos
iret
popf
push
fwait
lret
jnp
sub
inc
int3
out
insl
into
mov
stos
adc
push
das
stos
lret
fs
gs
sub
popa
push
pop
pop
ret
and
fdivs
clc
gs
jp
enter
mov
sbb
lds
inc
leave
jl
stos
mov
xchg
stos
pop
icebp
mov
cli
rolb
dec
scas
sbb
loopne
xor
cmp
xchg
fnstenv
mov
jnp
stos
in
xchg
fwait
mov
cld
out
and
movsl
lahf
pop
into
pop
or
lock
add
sbb
or
fwait
jne
cmp
mov
dec
fbld
ret
cmp
sar
add
popa
pushf
cltd
jmp
int
sbb
imul
fiaddl
in
xor
mov
into
mov
jmp
stos
adc
or
and
push
into
jns
jmp
stos
or
xor
hlt
mov
dec
addr16
aas
jmp
add
insl
jb
in
aaa
cwtl
jbe
stos
push
pop
loope
dec
in
push
movsb
cs
aam
pop
add
mov
jl
stos
mov
sbb
stos
imul
sub
gs
or
stos
cmp
in
or
jbe
push
push
cld
cmp
jmp
stos
adc
pop
lock
xor
cmpsl
shlb
gs
pop
out
jb
sbb
sub
test
inc
inc
jns
mov
xchg
xchg
mov
jo
iret
and
test
stos
data16
sub
inc
dec
stos
popa
nop
adcl
dec
mov
pushf
into
lahf
aam
push
stos
imul
add
iret
imul
in
test
js
jl
stos
and
stc
mov
stos
adc
int
stos
cmp
mov
icebp
stos
iret
mov
or
call
daa
je
aaa
add
ljmp
js
sbb
ficoml
push
pop
stos
jp
jo
sbb
xor
js
push
xchg
loop
stos
fcomps
aam
mov
shrl
jb
cld
aad
lods
stos
xor
add
jp
repz
xchg
sub
mov
in
and
into
gs
jne
adc
xchg
ss
stos
add
out
jnp
and
mov
xor
jge
fmuls
stos
and
pop
psubq
aas
stos
mov
mov
loop
sbb
cmc
es
pop
out
xchg
scas
adc
in
xorl
mov
addr16
pop
scas
mov
sbb
cmp
xchg
dec
mov
shr
cmp
stc
stos
mov
lret
add
mov
cwtl
addr16
jbe
test
jo
jp
cli
scas
fdivp
subl
stos
fs
std
ror
and
push
push
mov
fwait
bound
and
int3
push
mov
inc
sti
fwait
daa
in
sbb
jp
jp
push
pop
adc
xor
dec
dec
cmp
mov
stos
test
stos
dec
cmpsl
popa
and
pop
push
push
or
in
push
jae
pop
cmpsb
mov
jg
lcall
scas
fisubl
jno
jns
push
into
mov
stos
inc
daa
ljmp
aas
loop
nop
and
add
inc
xchg
movsl
sbb
mov
jecxz
fwait
push
jle
cmp
mov
fistl
or
loop
inc
xlat
stos
test
cwtl
mov
pop
stos
fdiv
mov
aaa
stos
pop
add
stc
add
mov
mov
fisubrl
js
jnp
stos
into
sub
mov
sub
mov
jo
xor
stos
cmp
mov
adc
imul
xor
sub
es
cmp
stos
add
mov
sub
push
std
loopne
cld
fisttpll
stos
jne
push
jecxz
pop
call
push
sub
out
mov
notl
lahf
stos
in
pop
test
mov
fcoml
mov
lahf
inc
cmp
dec
stos
and
xor
insl
repz
or
add
mov
inc
iret
xor
sub
pop
mov
stos
add
or
rorb
xchg
mov
aaa
imul
stos
push
lret
mov
sub
mov
aaa
stos
or
ret
lea
stos
mov
dec
cltd
xchg
icebp
jbe
jp
xor
xchg
das
into
mull
fsubrs
imulb
and
inc
xchg
mov
lahf
imul
add
stos
mov
andl
out
rcll
mov
mov
jle
push
les
xchg
dec
repnz
daa
fcmovnbe
dec
lea
scas
jb
stos
cmp
or
push
sub
stos
fwait
testl
push
and
pop
mov
xchg
lret
shl
jl
sub
mov
xchg
arpl
adc
pop
cmpsl
jno
stos
push
add
add
movsb
lahf
jne
out
or
inc
cmp
or
out
xchg
loope
lahf
leave
hlt
dec
jo
test
jbe
js
std
lods
add
sarl
xchg
ret
fistpll
or
stos
loopne
std
imul
and
adc
repnz
arpl
cmpsb
hlt
push
mov
test
repz
sahf
pop
outsl
jnp
insl
push
hlt
mov
in
scas
jl
pop
stos
pushf
sbb
push
jmp
nop
cmp
mov
call
lahf
enter
fucomi
push
outsb
popf
or
andb
stc
mov
add
lret
cmovs
lods
xor
xor
dec
mov
fs
mov
inc
mov
addr16
cmp
fisubrs
lods
pop
adc
jmp
out
iret
xor
shll
fidivl
sub
lahf
sbb
stos
cmp
fstpl
stos
xor
pushf
fadd
push
lahf
stos
cmp
xchg
je
cmp
jg
push
xchg
push
stos
dec
call
add
xchg
call
orl
stos
sbb
pop
jb
stos
cmp
out
es
outsb
ret
in
loope
jbe
stos
pop
mov
adc
orl
and
mov
sub
in
clc
dec
fwait
imul
and
test
stos
inc
imul
je
stos
jb
subl
push
mov
outsb
cmp
xlat
filds
or
icebp
pop
push
iret
stos
loopne
std
or
xchg
mov
cmp
inc
pop
pop
lods
stos
sahf
stc
xor
xor
push
mov
stos
or
repnz
add
sbb
cmp
orl
pop
outsb
push
xor
jge
stos
mov
pop
mov
mov
cld
push
and
push
inc
jmp
cmpsl
mov
mov
cmp
dec
jbe
jl
xchg
push
push
inc
jle
cmp
mov
push
sub
pop
mov
fistpll
arpl
lahf
xchg
jno
daa
mov
gs
or
and
out
cmpsb
in
mov
test
int3
rcl
lock
jle
stos
cmp
scas
in
les
cmpsl
cmc
inc
sub
stc
addl
xor
xchg
aas
jp
lea
jb
dec
ljmp
mov
jecxz
cli
pop
xchg
xchg
add
mov
push
imul
and
xchg
enter
loope
sbb
sub
cmp
mov
add
mov
add
mov
test
rep
lret
inc
sub
mov
aaa
int
stos
ficompl
mov
inc
nop
pop
mov
stos
lods
es
out
rol
gs
push
xor
xlat
ret
lods
jno
cmp
adc
push
das
xchg
cmp
add
dec
mull
pop
testb
scas
sbb
and
mov
cmp
push
sbb
shl
loope
adc
push
fildll
paddusb
stos
add
bound
stos
mov
add
das
repnz
inc
xchg
mov
mov
sub
xchg
int3
cmp
mov
push
cmc
jle
sub
xor
mov
fyl2x
in
iret
sbb
or
iret
push
cwtl
ljmp
and
and
cmp
stos
sbb
adc
sti
imull
outsl
xchg
dec
cs
stos
and
mov
pushf
cmp
gs
ret
mov
shr
mov
or
lcall
adc
cmp
dec
icebp
lahf
into
out
and
fsubs
gs
stos
push
lods
inc
xor
mov
sti
mov
jp
jg
jmp
lret
adc
and
stos
and
lods
mov
stos
fcomps
data16
aad
ljmp
hlt
imul
jo
push
stc
rcr
das
aam
and
xor
stos
cmc
and
or
mov
es
xchg
mov
popf
pop
inc
nop
and
mov
scas
fwait
lcall
and
cmp
stos
sub
shrb
aas
int3
jge
jmp
sub
cld
push
cmpl
dec
push
imul
imul
fwait
push
cmp
or
sbb
sbb
cmp
lret
and
push
xchg
mov
imulb
add
add
pop
mov
adcl
test
sbbb
outsb
pop
and
bound
xlat
cli
rorb
lds
xchg
insb
je
push
fneni(8087
xlat
rorl
and
cwtd
ret
inc
in
push
pop
sbb
or
mov
aad
adc
adc
shll
test
or
sub
int
and
into
jle
mov
dec
out
pop
mov
cltd
mov
inc
enter
fxch
loope
test
imull
cmp
lret
and
shll
stos
loope
test
sub
test
fwait
inc
fiaddl
xor
jb
cmc
sub
stos
pop
iret
rorb
fsubrs
mov
push
stos
push
fidivrl
cmp
movsb
in
mov
mov
addr16
pop
arpl
jmp
mov
lds
stos
cmp
jns
imul
int3
pop
sbb
or
stos
jle
cmp
mov
or
xchg
mov
xchg
cmp
imul
rorl
lods
xchg
push
or
mov
stos
dec
test
lea
sbb
nop
cltd
sub
mov
cmp
stos
inc
adc
pop
imul
mov
push
cmp
sbb
xchg
mov
push
fildl
stos
neg
cmpsb
movsb
leave
add
cld
stos
push
jnp
cmp
fcomps
push
lds
jl
jg
frstor
mov
ljmp
xor
imul
fldenv
repz
adc
int3
cmc
xchg
lret
pushf
pop
and
cmpsb
fistpll
adc
dec
pop
je
mov
push
stos
jl
xor
outsb
fldcw
add
adc
mov
push
stos
xor
sub
push
ljmp
mov
add
enter
jb
clc
xchg
sahf
pop
sub
pop
cltd
mov
and
popa
iret
mov
xor
stos
jg
mov
jecxz
dec
daa
mov
stos
sarl
pop
lcall
push
mov
inc
lds
sbbl
mov
imul
push
push
xchg
out
jg
mov
cmp
out
xchg
in
test
xchg
loopne
xchg
stos
mov
push
int3
fisubrs
jmp
scas
hlt
arpl
daa
xor
pop
stos
mov
jp
por
mov
cmp
dec
orl
jg
inc
adc
fwait
ljmp
bnd
jno
in
cli
stos
je
inc
sbb
and
imul
mov
leave
jo
dec
lcall
or
mov
add
sub
stos
popf
int
mull
mov
cmp
push
jb
lahf
sbb
jb
inc
loop
nop
xchg
negl
mov
xorl
push
and
cmp
outsb
in
and
jecxz
lea
stos
rcll
test
test
stos
xchg
push
sar
mov
inc
dec
push
stos
mov
loope
or
sahf
sbb
dec
out
cmp
jo
stos
lea
fs
negb
sbb
mov
or
in
cltd
repz
mov
xlat
dec
fwait
jp
dec
push
and
cmpsb
mov
jmp
inc
push
mov
das
push
loope
sub
pushf
mov
cli
jns
fbld
sbb
shl
xchg
jae
sbb
mov
ljmp
dec
xor
stos
insl
jge
out
xchg
loopne
or
dec
ret
jb
cwtl
add
sub
adc
mov
stos
push
mov
je
daa
push
cmc
iret
jl
dec
pop
popf
mov
mov
mov
push
mov
leave
mov
mov
iret
mov
js
outsb
xor
icebp
or
sub
adcl
xor
cltd
pop
repz
mov
mov
xchg
jge
jmp
stos
mov
cmp
xor
and
push
stos
mov
mov
pop
stos
mov
push
popf
mov
cmc
xchg
test
jmp
mov
stos
das
mov
icebp
mov
lock
scas
pushf
addl
or
stos
jns
ret
mov
nop
stos
popf
cmpl
loope
push
sub
jmp
inc
inc
icebp
lods
cltd
fdivrp
daa
mov
cmovns
pusha
stos
push
inc
gs
out
ss
sbb
xchg
test
lods
clc
cwtl
jbe
jmp
push
pop
xor
out
stos
lret
lock
push
push
xor
stos
mov
and
jnp
aas
and
stos
or
stos
jle
mov
pop
daa
push
mov
lret
dec
mov
rorl
scas
mov
dec
cmpsl
push
sarl
test
stc
je
or
enter
std
xor
inc
push
xchg
cmp
jmp
push
push
scas
mov
mov
cltd
mov
fwait
sub
stos
or
enter
lea
jne
cmp
mov
inc
or
lock
ret
sub
xlat
inc
inc
fisttpl
je
imul
lahf
shll
mov
out
loop
mov
sub
xor
mov
stos
insb
sbb
adc
xlat
sub
stos
and
icebp
gs
dec
shrl
movsl
dec
out
and
adc
xor
je
xorb
dec
outsl
push
cmp
popf
ds
mov
or
or
stos
jnp
dec
and
mov
push
mov
in
jmp
fucomip
adc
subl
stos
faddp
fwait
pop
mov
pop
imul
cli
mov
ret
cs
dec
std
sbb
push
stos
inc
test
shrb
or
stos
popa
nop
dec
jge
mov
push
jbe
add
and
inc
stc
inc
lcall
jae
add
adcl
pop
lds
adcl
adc
jbe
into
adc
out
xlat
cmp
inc
xor
cltd
inc
mov
outsl
out
sub
cmpsl
loop
jmp
and
mov
cmpsl
js
arpl
ja
lods
push
stos
test
leave
stos
repnz
mov
mov
mov
stos
jne
add
mov
lea
xlat
outsb
pop
cmp
test
jns
sbb
aam
xor
enter
mov
mov
stos
ret
dec
jg
xor
dec
shrl
lahf
nop
mov
ljmp
arpl
add
imul
stos
inc
pop
mov
stos
sub
test
jle
inc
iret
ficoml
add
mov
and
inc
shll
stos
sub
in
aaa
xchg
pop
call
fcompl
pop
rorb
or
jnp
jecxz
outsl
cwtl
mov
mov
stos
std
sub
testl
push
mov
stos
loopne
cli
push
push
mov
adc
cwtl
and
subb
icebp
hlt
int3
mov
mov
xor
xchg
fbld
gs
into
fcoms
bound
repnz
xor
cmp
subb
cmpsl
enter
fsubs
push
stos
inc
hlt
sahf
dec
pop
pop
rol
int3
test
dec
pop
jg
pop
ret
gs
sub
mov
aad
push
stos
push
daa
or
stos
pusha
sbb
lret
imul
stos
out
in
sbb
cli
stos
push
xor
mov
stos
add
mov
mov
outsb
xchg
or
sbb
scas
or
adc
out
pop
lods
cs
stos
jns
sar
insl
xor
stos
jecxz
or
sahf
mov
cli
pop
movsb
mov
jb
mov
sbb
es
cmpsl
jge
in
les
frstor
daa
jecxz
ljmp
repnz
in
and
mov
jl
in
scas
or
or
push
imul
cmp
xchg
je
aaa
insl
ficomps
stos
sub
pop
lea
push
mov
xchg
das
lods
mov
sbb
and
stos
in
add
mov
push
mov
out
mul
xchg
inc
mov
or
mov
stos
imul
push
js
popf
stos
fdiv
ret
xchg
cmp
aas
in
xchg
adc
dec
orb
stos
or
ficomps
mov
aad
popf
cmp
xor
test
stos
xlat
mov
faddl
imul
inc
mov
out
stos
jg
dec
sub
mov
mov
mov
aad
clc
movsb
cmp
xor
mov
dec
imul
mov
pop
push
movsl
and
jmp
mov
add
pushf
in
push
stos
fwait
pop
shrd
jmp
stos
mov
cmpsl
dec
stos
jns
rcrl
mov
outsb
notl
mov
stos
push
or
mov
jo
scas
stos
sbb
jg
pop
loope
or
lcall
jmp
aaa
stos
adcb
mov
hlt
push
stos
inc
cmp
aam
or
test
gs
xor
pop
rcrl
popf
pop
push
sbb
adc
aam
cmp
mov
loope
mov
jbe
xchg
sbb
inc
cli
imull
ret
leave
xor
jb
xchg
fsubl
push
js
test
shrb
sbb
stos
inc
sbb
je
ds
or
insl
clc
stos
addr16
mov
outsl
stos
add
insb
mov
dec
icebp
movsl
stos
pop
xchg
or
rorb
jb
jno
inc
xchg
cs
bswap
stos
rorl
lods
xchg
stos
jns
mov
or
daa
stos
push
mov
or
popa
scas
dec
pop
mov
xchg
stos
cmp
add
and
test
pop
fdivrl
stos
test
in
dec
popfw
push
jmp
dec
inc
inc
call
lret
into
push
and
push
xchg
insb
shrl
inc
mov
pop
nop
je
stos
adc
test
cmp
gs
inc
stos
aad
sbb
xchg
cmp
push
xor
or
mov
test
xchg
jmp
mov
ficomps
and
cmp
xor
or
pop
stos
push
jo
push
sub
adc
je
ret
ret
bound
imul
xor
and
stos
in
scas
add
stos
xorb
dec
stos
and
dec
out
pop
add
movsl
dec
cmc
roll
imul
mov
std
cmpb
popf
pop
stos
jle
shrl
adc
xor
dec
fsubrl
xchg
mov
icebp
popa
push
jmp
push
inc
dec
scas
in
dec
xchg
jge
stos
hlt
repnz
aaa
fnstcw
fisubrs
xchg
icebp
in
push
test
mov
xchg
xorb
shll
mov
imul
lds
scas
lret
and
inc
jmp
jmp
leave
cld
jbe
in
or
inc
xlat
pop
rcrl
or
inc
lahf
arpl
pop
cmp
mov
jl
stos
fstl
fisttps
outsl
pop
int3
stos
js,pt
push
test
mov
leave
mov
sar
idivb
pop
push
cltd
mov
lahf
adc
sbb
xchg
aam
sub
pop
jb
jns
cmp
shll
addr16
ljmp
pusha
clc
mov
mov
mov
xor
and
pop
stos
push
add
addr16
xor
insl
cmp
jl
stos
mov
sarl
dec
push
pop
adc
movsl
lahf
ds
inc
inc
xchg
pop
or
pushf
outsl
inc
pop
rep
mov
sarb
mov
mov
inc
ljmp
addr16
xchg
int3
imull
cmc
or
aas
scas
fisubrl
cmp
outsb
mov
and
insb
mov
jg
sbb
xchg
movsl
test
imul
mov
bound
les
mov
mov
inc
dec
lahf
subl
aad
inc
test
or
ds
adc
cld
adc
into
test
ljmp
sub
adc
or
adc
jno
xor
sub
test
roll
addl
sub
jae
xorl
stos
sbb
and
xorl
imul
mov
test
stos
mov
mov
stos
cmp
lds
push
imul
jmp
mov
mov
lds
ret
stos
hlt
ret
add
stos
imul
aad
loopne
stos
idivb
addr16
ja
ljmp
xlat
stos
shl
data16
jnp
imul
jecxz
mov
movsb
ja
push
xor
mull
jge
stos
test
into
in
stos
es
dec
add
stos
and
test
inc
stos
clc
mov
add
mov
les
pusha
xor
out
aam
fs
sahf
imul
ljmp
mov
shll
mov
add
int3
pop
sti
repnz
mov
mov
jmp
pop
mov
aad
lods
dec
sub
in
xor
hlt
scas
jmp
and
test
mov
push
movsl
pop
jl
cltd
mov
jmp
mov
add
add
ss
inc
aas
xchg
adc
hlt
dec
push
and
pop
jp
add
lods
scas
xchg
stos
xchg
loope
test
cmp
jmp
lea
xchg
pop
xor
in
fidivrs
pop
stos
pop
dec
add
adc
es
daa
jns
shrl
jge
leave
push
or
jae
sarb
pop
push
dec
stos
nop
repz
sbb
lock
aam
cld
pop
adc
cli
jbe
lahf
js
inc
stos
and
lock
stos
add
leave
pop
stos
inc
cwtl
stos
aas
addb
xor
inc
bound
cltd
icebp
cwtl
jae
pop
stos
push
mov
repnz
mov
push
mov
xchg
sbb
push
out
jge
sarb
lods
mov
arpl
imul
mov
stos
push
cmp
lret
les
sub
out
jl
xor
and
insb
scas
stos
stos
adc
jns
adc
jecxz
dec
imul
add
inc
and
sbb
push
push
stos
pop
pop
nop
or
stos
psubq
jmp
cld
pop
dec
jbe
cwtl
in
into
mov
add
adc
push
stos
pop
hlt
and
and
int3
adc
mov
sub
jb
out
jge
lods
mov
aaa
sahf
dec
xchg
popa
sarl
out
stos
int3
mov
xor
sarb
nop
cmpsb
mov
add
and
filds
ret
pop
arpl
mov
stos
loop
sub
cld
pop
sub
mov
aaa
enter
mov
data16
jle
in
jmp
xchg
jl
and
mov
out
dec
stos
ds
scas
popf
jno
xchg
ret
sbb
dec
pop
sbb
jmp
jmp
inc
lcall
xor
enter
cmp
jmp
push
mov
cli
imul
mov
stos
cmp
fcmovnbe
cmc
push
add
mov
test
test
pop
xor
arpl
enter
mov
mov
xchg
and
pop
mov
jg
iret
loopne
adc
ficoml
pop
jne
imul
lds
sub
ja
dec
mov
cmp
fimull
mov
jge
sbb
call
icebp
popf
push
outsb
stos
jmp
inc
imul
push
inc
cmc
mov
cmp
xchg
or
push
loope
fwait
cltd
dec
push
adc
insl
xchg
jle
push
cmp
test
in
jo
lock
stos
insl
addr16
pusha
pop
xchg
jl
sub
addr16
lcall
sub
test
int
mov
jmp
push
scas
xlat
cmpsl
gs
mov
jecxz
dec
lock
and
inc
std
mov
int
sti
adc
es
shrl
out
popf
xchg
addl
mov
inc
in
sbb
or
inc
clc
mov
ret
sti
les
push
cld
lea
mov
fdivrl
stos
mov
cmc
sub
stos
cwtl
xor
xlat
out
jbe
arpl
xor
mov
jg
sub
cmpsb
mov
sarl
rorl
adc
leave
mov
lods
sahf
mov
clc
pop
jno
imul
mov
sub
sub
imul
fcmovu
cmp
jl
xchg
mov
pop
into
clc
push
xchg
js
das
stos
mov
movsb
fisubrl
ret
sahf
mov
stos
jns
roll
decl
add
mov
pop
add
fsts
push
stos
xlat
int
fidivrl
stc
adc
dec
and
and
stos
mov
jbe
aam
mov
popa
jl
xor
lea
dec
or
cmp
test
adc
sbb
mov
rorl
std
cld
aas
stos
ficompl
enter
stos
lods
jp,pt
cmp
lock
fnstsw
leave
mov
mov
lea
test
imul
daa
pop
adc
jns
mov
mov
idivl
xor
jne
cmp
out
mov
aam
ret
add
pop
sbb
cmc
sub
fwait
addr16
jp
lret
pop
xchg
outsb
bound
test
into
xchg
shlb
adc
stos
in
pop
xor
stos
push
repnz
aam
aaa
stos
fdivr
pop
pop
test
or
sub
mov
sbbb
mov
movsb
dec
jecxz
movsb
mov
lcall
mov
mov
or
outsb
xchg
insb
test
sub
stos
jno
sub
lret
in
je
pop
xor
loope
pushf
into
lea
test
leave
stos
stos
dec
push
or
xor
outsl
je
inc
mov
ja
rolb
daa
test
aas
sbb
andl
insl
mov
xchg
xchg
sbb
inc
mov
daa
ljmp
adc
xor
inc
shlb
fwait
jmp
xchg
loopne
push
repz
sub
data16
jns
stos
out
dec
mov
jo
shrl
loop
jp
jmp
stos
pop
push
leave
cmpb
addr16
inc
mov
xchg
arpl
adc
push
push
movsl
lods
in
xor
mov
jp
push
dec
loop
dec
mov
cmc
pop
outsb
sub
pop
stos
mov
in
jns
jmp
test
nop
jnp
stos
pop
adc
test
add
stos
pop
sahf
bound
dec
aaa
aam
daa
adc
or
cltd
xchg
push
push
push
jo
jmp
xor
lahf
adc
jnp
jnp
xchg
mov
dec
and
push
dec
out
fists
push
icebp
mov
popf
adc
sbb
sub
fnstcw
data16
call
pusha
sarb
add
into
mov
imul
insl
push
les
mov
mov
shll
sub
jp
xor
push
cs
std
test
scas
sbb
stos
addr16
mov
leave
stos
jo
je
in
xor
mov
pushf
ljmp
stos
or
sub
ds
rcr
stos
lahf
lock
mov
out
test
sbb
lds
test
pop
jo
mov
outsb
jmp
push
jg
adc
and
sbbb
ret
addr16
xchg
loop
lea
enter
sbb
add
ljmp
outsl
or
or
sub
cmpl
xchg
inc
dec
pop
in
sar
push
xchg
sahf
inc
sub
ds
jbe
lea
jmp
mov
dec
push
out
iret
push
stos
fstl
dec
mov
jmp
cmp
inc
ds
nop
mov
stos
sub
push
je
adc
push
repz
int3
stos
adc
stc
add
cmp
in
les
stos
rorl
fwait
push
stos
add
mov
xchg
shlb
mov
dec
outsl
or
loopne
stos
mov
in
das
stos
test
inc
stos
test
out
push
stos
and
add
mov
mov
jmp
cmp
push
xchg
test
jmp
stos
imul
dec
pop
lret
mov
cmpsl
fdivrp
cwtl
push
lret
mov
sbb
xlat
rolb
movl
gs
dec
mov
push
lcall
push
mov
insl
push
iret
stos
sbb
jecxz
xchg
inc
dec
xchg
movsb
pop
aad
jmp
jl
test
test
punpckhwd
mov
sbb
addl
shrl
mov
jae
clc
jb
fmuls
pop
fisubs
hlt
aad
cmc
outsl
imul
addr16
lods
xchg
pop
aam
das
cld
movsl
rclb
stos
xchg
scas
aaa
add
scas
pop
inc
incl
pusha
stos
push
inc
pushf
out
jg
mov
imul
inc
cld
loopne
addr16
jne
dec
mov
arpl
shll
clc
cmp
stos
jo
cmp
xchg
sbb
repnz
sbb
add
push
cmp
jnp
xlat
hlt
stos
roll
aad
test
popf
cmp
mov
or
mov
lock
inc
mov
icebp
pop
sahf
stos
sub
inc
push
jne
stos
push
xchg
cltd
aaa
in
xor
ds
dec
mov
test
movsl
imul
mov
xchg
popa
int3
mov
aaa
rep
stos
cmp
sub
push
out
stos
jl
insb
in
imul
fistpl
mov
imul
pop
stos
mov
scas
mov
stos
add
mov
je
hlt
cli
xor
cmp
ds
lret
out
idivl
imul
movl
popf
ja
and
aaa
mov
out
and
cld
sub
stos
ds
cmpsb
mov
test
push
lret
cmp
scas
push
daa
ljmp
stos
std
repnz
dec
push
mov
in
mov
cmp
lret
lods
pop
pushf
stos
inc
mov
cmpsl
push
jmp
loopne
mov
movsb
les
rol
dec
scas
pop
lret
jg
subl
mov
int
cmp
push
sti
sbbb
insl
jge
jmp
stos
addr16
dec
lahf
pop
mov
lahf
dec
stos
sti
fldcw
xchg
jecxz
sub
insb
imul
popf
stos
pop
rorl
or
fdivrl
in
fisubrs
pop
aad
scas
sbb
ret
add
jmp
stos
and
js
mov
outsl
imul
add
sahf
jnp
xchg
stos
cmp
push
scas
stos
lods
mov
movsb
add
xlat
and
ret
lahf
jns
movsl
or
mov
push
rorb
int3
jb
andb
std
nop
pop
jecxz
add
mov
sbb
lea
xchg
insb
fidivrl
iret
mov
sbb
stos
inc
addr16
sbb
sbb
adc
xchg
ljmp
adc
mov
jmp
jnp
aas
xchg
pop
adc
and
jae
mov
lods
loop
adc
inc
fwait
nop
lds
mov
sbb
arpl
lcall
test
ret
push
repz
fs
or
dec
inc
sahf
push
mov
xchg
in
inc
and
ficomps
jae
cmp
push
cmc
insb
jmp
in
adc
mov
stos
addl
pop
sti
or
push
jp
and
mov
pop
repnz
leave
ja
push
or
popa
stos
push
call
stos
push
xlat
adc
mov
std
xchg
stos
push
mov
cmp
in
nop
cmp
sbb
sarl
pop
mov
pop
incl
fcompl
dec
or
pop
cmpsb
pop
cld
mov
movsl
idivl
push
pop
push
stos
leave
nop
das
iret
jmp
divb
andb
pop
push
push
push
jmp
shl
and
jae
ficompl
mov
mov
or
pusha
mov
dec
adc
add
or
push
fxch
cmc
inc
adc
cmp
cmp
lods
jmp
mov
stos
sbb
xchg
dec
and
cmp
xor
stos
jg
in
mov
mov
out
std
fwait
or
sub
cltd
stc
mov
lcall
gs
outsb
lcall
loope
sarl
xlat
stos
sub
sti
inc
lahf
mov
stos
loopne
cmp
adc
movsb
mov
xchg
out
sub
ret
mov
jae
es
mov
hlt
cmp
xlat
fwait
mov
push
cmpsl
xchg
aam
ja
aad
lcall
subl
and
mov
fcoml
sahf
bound
inc
pop
mov
hlt
je
sbb
and
das
ficoms
or
push
arpl
push
stos
add
lock
stos
adc
cmc
adc
ljmp
in
xchg
inc
adc
test
out
jnp
stc
stos
imul
xchg
jno
xor
jl
outsl
fildll
and
ret
ss
aas
icebp
insl
cwtl
in
mov
push
pop
push
adc
jb
fwait
cmp
rorl
cmp
stos
push
flds
sub
cmpsb
mov
stos
lret
push
mov
mov
or
pop
inc
js
repnz
dec
dec
into
push
pop
das
mov
pusha
pop
addr16
sub
jno
adcb
and
mov
pop
scas
cmc
in
cld
stos
push
pop
loope
in
idivl
popa
insl
pop
add
and
rcrl
xchg
ficompl
xor
push
fwait
clc
popa
push
movsb
and
cmp
dec
imul
push
lea
shl
jo
es
mov
jne
sub
gs
pop
shrl
imul
ret
adc
test
lret
mov
lcall
mov
push
shll
pop
and
bound
repnz
imul
push
lahf
stc
test
mov
daa
leave
scas
push
stos
mulb
mov
sbb
or
adc
mov
push
mov
push
xor
mov
fidivs
xchg
stos
out
mov
and
mov
and
inc
jae
leave
stos
mul
sarb
ficoms
xchg
cli
gs
add
std
push
and
stos
mov
dec
decb
sahf
xor
aad
shlb
and
stos
lods
push
dec
out
xorl
inc
jne
mov
sbb
in
aas
push
lea
push
pop
mov
lock
add
inc
loopne
pop
mov
js
add
xchg
mov
pusha
mov
out
xchg
ljmp
pop
mov
cmpsl
and
xchg
dec
std
lahf
cli
loopne
test
mov
stos
imul
mov
das
cmc
adc
adcb
fdivs
insb
xchg
jmp
mov
cmp
pop
stos
sbb
and
mov
imul
mov
push
stos
add
adc
imul
and
push
ret
addr16
push
mov
dec
mov
mov
stos
pop
add
adc
push
jb
mov
inc
stos
push
enter
inc
sub
mov
mov
iret
adc
push
int3
push
stos
movsb
call
or
dec
jno
jns
or
stos
pop
jp
fiaddl
push
stos
aad
cmpsb
xor
or
or
push
in
lds
push
inc
imul
loope
mov
inc
push
fwait
dec
outsl
gs
subb
in
add
sub
aas
and
imul
cmc
mov
lods
jmp
insl
mov
or
add
mov
and
lods
in
pushf
lret
lret
pop
iret
and
or
mov
pusha
inc
out
mov
xchg
pop
je
xchg
fiaddl
stos
mov
js
fldt
scas
sub
stos
add
lds
jecxz
add
stos
sbb
mov
in
stos
sbb
lcall
jmp
out
addr16
loope
xchg
xor
stos
jo
add
xchg
pusha
push
out
movsb
icebp
and
out
stos
movsl
lahf
and
insl
ja
in
stos
pop
pop
mov
stos
outsl
add
iret
jle
dec
sub
sarl
movsb
lcall
mov
out
sub
push
pop
stos
xor
fidivl
loope
ds
adc
inc
repz
and
and
in
add
into
cld
add
sub
mov
out
sub
pusha
and
fstpt
mov
fbld
stos
out
popf
sbb
lret
xor
jle
mov
pop
cmovge
fisubrs
lahf
mov
arpl
stos
pop
jbe
adc
mov
xchg
jl
mov
add
fcoml
setp
xchg
scas
mov
loop
shrl
mov
dec
jne
xor
xor
push
mov
pop
xor
stos
enter
mov
adc
jp
sub
imul
mov
jle
stos
mov
lret
out
insl
mov
stos
dec
jg
clc
test
into
adc
xorb
test
shr
ret
call
jb
shrl
out
xorb
xor
inc
in
rclb
mov
inc
cmp
fadd
push
add
pushf
stos
addr16
pop
xor
mov
ret
inc
stos
cmpsl
int3
inc
mulb
mov
int
stos
pop
xchg
les
fisttpll
scas
pop
pop
loop
stos
or
add
into
incb
mov
mov
xchg
scas
scas
mov
loopne
mov
clc
inc
or
arpl
jnp
jle
imul
adc
stos
xchg
repnz
pop
inc
jo
jmp
inc
cs
sbb
mov
gs
push
stos
cmpsl
pop
lcall
adc
mov
mov
xchg
pop
pop
sbb
or
mov
xor
sub
fnsave
test
stos
sub
add
lahf
stos
cmpsl
stos
daa
pop
std
pop
push
or
pop
jecxz
loop
int
lods
fs
call
cmpl
pop
popa
mov
xchg
nop
xchg
fwait
lahf
pop
in
and
add
fwait
rcr
jae
xor
out
les
aam
mov
std
lds
mov
lods
dec
ja
ficomps
mov
jae
push
pop
jmp
lea
cmp
sti
and
stos
and
movsb
je
xor
stos
test
int3
imul
mov
xchg
or
jnp
mov
stos
sahf
push
call
stos
pop
stos
push
xor
adc
stos
sti
cmpsb
imul
ljmp
push
cmpsl
mov
out
adc
movsb
fldt
cmpsb
mov
fs
in
fmull
jo
scas
sbb
push
ret
jbe
test
lret
sub
orl
jns
dec
lret
mov
clc
jmp
sub
into
es
fcmovnu
nop
mov
pop
push
mov
loope
pop
xchg
and
sbb
adc
or
pop
idivb
es
inc
xchg
andl
cmp
or
stos
jno
push
adc
dec
xchg
mov
repnz
cmpsl
inc
jnp
xchg
imul
mov
lods
testl
mov
shlb
pop
push
sbb
push
repz
mov
stos
cmp
arpl
xchg
pop
jbe
outsb
stos
test
push
mov
xchg
mov
pop
pop
mov
and
mov
hlt
gs
stc
xchg
adc
xor
add
ja
scas
inc
mov
xchg
jl
cli
mov
cld
cmp
es
fimuls
cmp
mov
mov
clc
out
push
xchg
stos
dec
mov
adc
insl
inc
mov
xchg
cmpsl
or
sub
lahf
fwait
dec
push
bound
mov
out
xchg
stos
push
sub
mov
pop
popa
or
pop
clc
stos
lret
sub
ret
and
mov
xchg
stos
shlb
into
loopne
sub
and
adc
fidivrl
sub
lods
stos
repnz
test
and
fisubrs
mov
sbb
arpl
stos
add
push
icebp
fstps
stos
mov
mov
jne
mov
outsb
repnz
leave
stos
into
loope
sbb
mov
stos
adc
subb
test
imul
cld
stos
sbb
lahf
or
popf
mov
and
aas
out
jno
cmp
sbb
movsb
call
pusha
stos
ds
sbb
or
xchg
lods
pop
daa
adc
stos
mov
pop
push
xchg
repz
lret
and
xchg
inc
repz
cltd
sti
cmp
xor
pop
imul
mov
lods
cmp
mov
cmp
pop
fldt
popf
into
add
fnstcw
sub
push
arpl
jle
inc
das
sub
stos
jns
sub
popf
stos
sub
lds
fdivr
dec
adc
vcvtps2uqq
and
cltd
addr16
stos
jecxz
dec
sti
test
mov
fildll
pushl
push
aam
fidivl
cld
xchg
shrb
pop
push
or
xchg
pusha
push
fs
mov
or
stos
fucomp
mull
stos
lret
dec
fwait
mov
outsl
decb
cwtl
nop
stos
dec
xchg
xor
repz
in
add
add
test
roll
inc
les
js
shlb
xchg
stos
adc
mov
or
jae
xchg
xchg
repz
push
add
fwait
cli
in
xchg
fisttpl
cmp
decb
test
mov
sub
lods
xorl
mov
call
int
or
jge
shrl
or
scas
add
stos
mov
xor
pusha
xchg
and
fyl2xp1
or
mov
jl
pop
mov
icebp
popf
sbb
adc
xchg
add
mov
aad
shll
xchg
arpl
fisttps
out
or
xchg
sbb
sub
int
lcall
mov
xor
or
pusha
cmp
stos
gs
and
inc
lods
xor
mov
add
push
or
adc
pop
or
jmp
jne
xchg
test
xchg
stos
adc
and
mov
test
and
stos
inc
aaa
mov
nop
aas
inc
mov
insl
mov
int
popf
test
xchg
jno
xchg
mov
stos
pop
add
aaa
adc
insl
stos
repnz
popa
jg
stos
notl
test
test
pop
mov
inc
test
push
rol
push
mov
cli
bts
ret
jle
rcll
add
adc
push
xchg
and
stos
add
fbld
push
popl
dec
cmp
fs
and
mov
stos
jae
addr16
ret
add
fnstcw
cmp
inc
inc
std
aad
mov
movsb
jp
dec
lret
cmp
stos
lahf
fistpl
sahf
xor
dec
ret
push
mov
rcrb
fwait
adc
bound
stos
pop
aad
jne
nop
repz
push
clc
repnz
ficoml
push
stos
loop
xchg
mov
push
enter
scas
sub
inc
jo
xchg
lret
push
sbb
scas
inc
mov
push
pop
jmp
pop
mulb
push
xchg
add
cmpsl
call
ljmp
push
addl
loopne
mov
push
stos
ret
call
stos
add
xchg
inc
movsb
jns
inc
stos
cwtl
jl
and
or
cs
dec
mov
mov
mov
stos
scas
insb
mov
jo
stos
pop
adc
or
mov
fs
outsb
jnp
xchg
mov
data16
lret
test
jno
mov
bound
into
inc
dec
int3
sti
mov
stos
imul
mov
daa
loop
cwtl
mov
leave
fwait
scas
adc
jno
sub
subb
jmp
pusha
sub
aad
xchg
out
sbb
add
jge
jecxz
lods
push
push
jmp
test
cld
stos
sub
ljmp
es
mov
insl
xor
test
jns
aad
popa
mov
stos
add
inc
mov
addr16
sub
push
insl
ds
and
mov
xchg
in
stos
cmp
pusha
stos
int3
pop
sbb
aaa
push
jbe
dec
es
mov
outsb
push
popf
inc
xchg
sub
jbe
push
mov
push
cld
pop
stos
fs
jb
pop
pusha
mov
pop
push
mov
out
adc
xchg
inc
stos
xchg
push
test
pushf
mov
pop
stos
mov
add
ja
or
clc
in
fsubs
pop
mov
pop
scas
ret
mov
inc
test
mov
add
stos
xchg
dec
mov
repz
mov
sub
daa
stos
out
icebp
push
mov
stos
mov
test
sbb
push
dec
loopne
stos
add
frstor
pop
repnz
jle
inc
ja
jl
mov
pop
stos
scas
cmc
ret
lret
fimuls
sbb
movups
std
mov
fisubrl
mov
jno
stos
dec
jne
sbb
out
sub
stos
mov
cmp
and
push
int3
mov
push
pusha
mov
leave
imul
xchg
mov
out
xor
mov
adc
loopne
orl
pushf
stos
xor
mov
rcll
xchg
inc
pop
fnstcw
cmp
test
mov
fsubrs
repnz
imul
movsb
jno
subb
loop
dec
jnp
push
stos
lahf
pop
sub
aam
std
stos
xchg
stos
test
add
not
stos
sub
lahf
lret
insl
jge
pop
push
jbe
or
stos
fnstsw
test
stos
call
lods
subl
out
lret
push
jl
in
shlb
fwait
clc
stos
pop
xchg
xor
adc
stos
jae
xchg
mov
lock
icebp
outsb
mov
in
inc
es
subl
xchg
addr16
bnd
shlb
into
sbb
cmp
stos
int
sarl
cmc
pop
test
jmp
vpshab
iret
cmp
lods
stos
push
xlat
cmp
dec
je
inc
sub
lods
fildll
mov
jg
outsl
xor
xchg
add
test
ss
enter
aaa
jg
jne
push
jno
bound
nop
lock
imul
jmp
loop
pop
movsl
dec
cli
dec
mov
push
push
ss
jmp
insb
or
mov
mov
xor
clc
adc
lds
jbe
ret
mov
xchg
add
daa
push
fmuls
sub
ljmp
cmp
adc
stos
sbb
pop
xchg
imul
js
insb
loop
pop
jne
mov
rorb
stos
scas
pop
push
xchg
lcall
in
fwait
sbb
stos
mov
dec
fcoml
stos
mov
psubusw
push
push
andb
in
pop
mov
adc
insl
jle
pushf
push
incb
int3
sbb
jns
rorb
movsl
adc
xor
aad
ljmp
fisubl
mov
stos
mov
jge
es
sub
fpatan
or
outsl
mov
dec
mov
add
push
jb
ss
inc
out
je
movsb
stos
sub
push
int
push
push
mov
in
in
cld
xchg
xorl
push
pop
cwtl
test
cmp
stos
jecxz
fwait
cmpsb
mov
jo
xchg
add
xchg
mov
cmp
nop
sub
push
sti
jle
sub
or
jne
mov
and
stos
xchg
andb
scas
sub
insb
cld
xchg
xchg
pushf
jl
inc
stos
aaa
lret
shrb
in
sbb
fwait
mov
lret
mov
das
loopne
fidivl
stos
dec
mov
faddl
pop
test
jbe
push
roll
insl
cmp
stos
aam
sub
xlat
inc
xchg
push
stos
hlt
xchg
repnz
out
in
iret
mov
jbe
leave
sbb
mov
enter
mov
std
mov
adc
adc
lods
push
div
sbbl
add
pop
adc
xchg
inc
fdiv
imul
dec
inc
mov
add
fdivrl
hlt
jae
mov
je
inc
stos
popa
xlat
js
stos
dec
or
or
icebp
stos
jne
insb
xor
jle
fs
divl
lock
test
stos
mov
orb
mov
inc
jecxz
std
xchg
mov
xchg
fidivs
adc
inc
aas
stos
sbb
add
push
xchg
cmpsl
loop
lea
outsb
cmp
shll
int
push
sbb
inc
clc
pusha
fwait
stc
mov
stos
inc
xchg
jl
or
stos
mov
aas
sbbb
fbstp
out
aam
enter
stos
call
inc
jp
stos
ds
mov
push
outsb
push
cmpsb
mov
pop
xchg
mov
movsb
sbb
fisttpl
sub
jnp
jl
stos
add
dec
movsb
out
addps
fmulp
jg
stos
insl
lds
xchg
std
cmp
sbb
or
leave
push
dec
push
mov
xchg
test
int
mov
xchg
inc
push
dec
mov
leave
jnp
inc
js
rcrl
daa
iret
out
stos
outsb
sti
subl
mov
jmp
add
xchg
stos
das
js
inc
adc
daa
fs
ss
fiaddl
mov
mov
enter
arpl
test
push
jecxz
mov
mov
into
sub
ss
cltd
stos
mov
mov
aaa
stos
je
in
cmc
fdivrs
dec
addr16
add
cmpsb
inc
xchg
mov
lahf
stos
and
pushf
aad
pop
stos
lret
outsb
imul
leave
jl
xchg
pmulhuw
mov
clc
add
adcl
push
clc
insl
jnp
add
sub
aam
mov
mov
cmp
mov
rorb
stos
pop
decl
fldcw
iret
and
adc
jae
into
stos
cmp
cli
dec
add
sbb
mov
or
xchg
adc
stos
push
gs
mov
ljmp
out
in
sub
xchg
test
arpl
inc
mov
repnz
xchg
xchg
add
push
sahf
xchg
jecxz
inc
or
pop
iret
inc
addr16
push
mov
add
shll
repnz
sub
mov
stos
push
gs
cmp
xor
push
sub
sti
sbb
repz
push
or
testl
jnp
stos
sbb
jne
mov
jbe
stos
add
sbb
popf
xchg
mov
lcall
add
int3
es
stc
addr16
hlt
adc
enter
cs
pop
mov
sbb
jae
push
fsubrs
test
ljmp
mov
loop
push
data16
add
inc
jb
cltd
push
stos
fs
daa
aam
dec
iret
test
xor
js
lret
ds
pop
cld
pusha
mov
cmp
cwtl
int
mov
aam
mov
sbb
idivl
sbb
dec
push
jp
out
mov
stos
notl
adc
mov
inc
stos
cld
and
mov
sbb
movsl
jg
negb
pop
shrl
dec
pop
stos
push
mov
adc
push
dec
dec
test
lahf
or
and
clc
rorl
xchg
pop
fisubrs
mov
or
inc
mov
js
mov
cmpsb
stos
loop
dec
mov
jge
cmp
shlb
mov
jns
ret
xor
jl
cmp
cwtl
arpl
jo
dec
mov
mov
or
mov
sub
mov
stos
mov
repz
jno
mov
pop
insb
sbb
rorb
push
js
cmc
stos
sbb
add
push
lcall
dec
pusha
int3
xchg
std
fucom
xchg
dec
lahf
sub
das
and
xor
xchg
jmp
fidivl
sbb
stos
scas
mov
fmul
stos
pop
lods
stos
test
or
divl
mov
add
mov
je
xchg
xor
inc
xchg
ja
mov
sub
stos
add
jo
cmp
fwait
cmp
push
add
loop
sub
sub
ficoml
cmpsb
sbb
ret
xchg
lcall
lods
into
mov
fisubrs
call
lods
push
push
stos
xchg
scas
add
inc
mov
push
sbb
add
push
push
mov
stos
ret
cmpsl
cmp
stos
xlat
outsl
cmc
mov
sbb
cs
lods
cltd
sbb
insl
or
sarl
lds
cmp
mov
lcall
or
mov
push
mov
xor
push
cmp
sbb
cmp
enter
xchg
pop
pop
xor
cs
stos
mov
push
out
cmc
aas
imul
stc
out
xchg
push
inc
push
or
jg
lea
xchg
scas
nop
arpl
roll
loope
out
sar
sub
outsl
sub
adc
add
mov
and
adc
movsl
pop
xchg
cli
mov
cltd
aaa
inc
mov
shlb
stos
push
mov
jecxz
imul
jnp
sbb
mov
stos
xchg
and
jmp
movsb
loopne
jne
fs
bound
sti
stos
pop
cmpsb
ficoms
cltd
and
stos
sub
cmp
jo
outsb
xor
movsb
xor
mov
inc
ficompl
fstps
pop
sbb
add
les
or
daa
lret
jae
in
in
outsl
pop
pop
stos
cmp
pop
stos
push
sub
cld
lcall
loopne
adc
add
xor
xchg
push
sarl
cld
mov
inc
test
shll
stos
lods
cmp
inc
jmp
subb
pop
scas
adc
pop
les
in
sub
jnp
mov
mov
stos
adc
mov
into
int3
test
or
xor
mov
add
jp
sub
mov
lods
cltd
sub
movsl
inc
shrb
cmp
outsl
loop
mov
sbbb
lods
push
stos
sub
std
xor
dec
cmp
push
daa
shrl
stos
shll
out
pmaxub
fstps
mov
lods
repz
xor
in
inc
pop
lcall
push
sub
xchg
jle
jecxz
sub
xchg
sub
adc
iret
inc
xor
jl
es
mov
dec
mov
adc
and
dec
or
sbb
gs
decb
push
push
xor
push
or
cmp
rcrl
sub
aaa
or
pop
stos
pop
in
jl
fsubs
push
adc
nop
pop
stos
es
rorl
ja
ds
pop
xlat
lods
add
push
sbb
cmpsl
dec
stos
in
push
xlat
sbb
xchg
pusha
ds
int3
cs
and
mov
dec
fisubrs
jg
sub
ljmp
pop
stos
es
cmpsb
sub
dec
cmp
stos
test
test
pusha
inc
das
pushf
stos
daa
add
stos
in
loope
jo
sub
stos
add
aam
mov
inc
popf
stos
fwait
or
pop
jmp
push
jae
push
cs
cwtl
sbb
jl
movsb
cltd
jnp
or
push
in
dec
mov
xor
sub
mov
mov
pop
loope
lret
inc
sti
push
xchg
jns
stos
adc
fucomip
stos
xchg
add
mov
or
dec
and
cmp
fwait
sub
imul
cmc
sbb
stos
push
inc
dec
cmp
xlat
out
stos
dec
leave
movb
mov
aas
pop
fcomps
xchg
xor
sbb
push
daa
lea
stos
mov
cmpsl
mov
sbb
jmp
in
loopne
test
and
push
and
sbb
sbb
xor
adc
js
cs
stos
or
out
jmp
lahf
mov
cmpsl
pop
jmp
cvtpi2ps
push
mov
cmp
in
adc
push
mov
jnp
sub
stos
mov
in
jne
out
inc
test
jecxz
lods
jg
stos
aam
dec
imul
lods
push
out
sub
addr16
sbbl
sbb
rcrb
jo
mov
daa
daa
mov
rcrb
inc
fistl
stc
pop
stos
cmp
mov
in
pop
pop
jg
push
daa
stos
and
and
jno
orb
xor
outsb
push
enter
fistl
pop
push
jp,pn
testb
mov
inc
add
mov
cmp
cltd
das
stos
repnz
push
imul
cld
sbb
in
subl
scas
jnp
cli
sub
test
sub
jle
push
xchg
sbb
les
stos
mov
adc
stos
mov
in
out
pop
mov
popa
es
sub
enter
push
inc
jp
aad
xchg
xchg
stos
aas
cwtl
cld
jmp
addr16
das
xchg
mov
push
add
jnp
arpl
js
rcrl
daa
addb
mov
mov
imull
stos
ret
mov
mov
test
stos
in
mov
mov
rep
pop
cli
push
mov
stos
mov
dec
shlb
mov
stos
mov
push
pop
sbb
in
popf
int3
cmp
arpl
mov
fs
lcall
stos
test
or
es
rcrl
or
dec
mov
daa
push
call
cmpsl
stos
popf
mov
test
push
test
daa
pop
cs
mov
adc
pop
jne
rol
lret
xchg
inc
stos
into
jbe
push
leave
mov
lcall
sub
enter
stc
outsl
stos
push
mov
dec
push
out
adc
and
stos
xchg
lahf
and
jp
lahf
enter
jbe
stos
push
cwtl
adc
push
shll
push
mov
dec
or
movsb
xchg
inc
aas
pushf
mov
cmp
movzwl
stos
jecxz
inc
icebp
pusha
pop
push
cltd
stos
mov
mov
aas
stos
imul
mov
push
pusha
add
cmp
mov
mov
int
ja
mov
xchg
icebp
adc
pushf
mov
adc
negb
lret
xchg
loop
cmp
stos
sub
jle
out
in
stos
mov
cs
mov
and
xchg
lret
out
les
pop
xchg
sub
mov
jnp
orl
or
mov
adc
sbb
les
stos
jb
xchg
mov
stos
test
lret
push
stos
stos
xor
add
adc
es
inc
sti
pop
add
stos
repnz
int
xor
daa
incl
push
xchg
pusha
cs
push
lods
imul
test
push
lea
idivl
jl
pushf
inc
jo
hlt
push
js
stos
outsl
push
sarb
mov
xlat
popa
lds
sbb
out
mov
testl
ds
stos
or
inc
addr16
mov
ljmp
cmpsl
in
push
test
xchg
icebp
add
lea
loopne
mov
cmp
mov
stos
or
xchg
stos
pop
fwait
dec
inc
cltd
mov
cmp
xchg
mov
inc
sub
jae
mov
ja
push
mov
sbb
arpl
js
mov
cmp
and
stos
roll
push
add
inc
mov
out
push
cmp
fidivs
cmpb
mov
andb
mov
jge
cwtl
das
xor
scas
inc
stos
adc
dec
push
jmp
and
es
mov
mov
add
ja
into
or
mov
xchg
fisubrs
sbb
jns
imul
xchg
fcmovnbe
in
push
in
sbb
sbb
loop
mov
mov
lahf
sbb
stos
outsb
fmuls
into
cltd
mov
add
jno
push
cli
mov
lahf
gs
shlb
jmp
mov
movsl
loope
ficoms
cmp
stos
fisubrl
lea
fbld
cmp
ljmp
stos
ret
int
add
pop
stos
jle
and
dec
scas
and
repz
aam
or
mov
inc
sub
jb
cmp
scas
jmp
dec
cltd
ljmp
add
test
pop
bts
das
fmull
popf
lret
jmp
nop
mov
or
scas
sub
sbb
arpl
std
xchg
xor
stos
popf
jo
mov
hlt
fstpt
jmp
sub
in
test
add
test
add
imull
loope
cmp
lret
mov
stos
fmul
mov
sti
fdivr
sub
imul
mov
xor
adc
sub
test
push
aaa
mov
pop
and
scas
xchg
adc
pop
mov
stos
push
adc
das
mov
cltd
jle
imul
sbbl
out
lret
push
push
inc
mov
xor
ds
mov
inc
mov
inc
push
inc
stos
sbb
cmp
mov
dec
test
out
push
mov
stos
sub
cli
sbb
or
jg,pn
out
jne
int
dec
xchg
mov
fsubrl
idivl
jl
rorl
out
mov
mov
loopne
imul
cmpsl
jae
jmp
mov
mov
mov
jmp
fidivrs
mov
imul
call
mov
rcr
ss
jge
xchg
dec
stos
jae
cli
sbb
push
mov
fwait
sbb
sub
xchg
shll
nop
push
stos
pop
or
in
pusha
push
movsl
push
daa
cmc
stos
inc
cmpsl
hlt
test
notb
andl
sub
int
push
mov
movsb
xor
inc
inc
or
pop
push
mov
aas
cli
loopne
stos
in
pop
jecxz
mov
sbbb
icebp
push
popf
add
mov
xchg
cld
sbb
pusha
imul
cs
fwait
cwtl
sub
popf
sbb
shrb
and
test
test
scas
xchg
out
jo
sbb
pop
mov
ljmp
icebp
negb
cmp
addr16
lds
cmp
lea
sub
adcl
add
mov
clc
test
in
ljmp
pop
stos
daa
inc
mov
into
xor
fsubl
sahf
inc
je
jmp
push
dec
xorb
arpl
mov
xor
aad
ret
fildll
test
arpl
lret
and
repz
stos
mov
xchg
mov
stos
jmp
dec
gs
pop
hlt
ljmp
jp
icebp
or
popf
dec
push
daa
stos
aas
pop
push
push
in
mov
mov
pop
mov
inc
inc
mov
stos
pop
lcall
jmp
cmp
mov
fsubr
leave
pop
xlat
insb
stos
xchg
dec
push
sub
enter
bnd
jno
mov
nop
cmpsb
fwait
jle
js
jnp
scas
push
xor
ja
stos
test
sub
jb
test
mov
mov
ficoml
xor
add
lods
shrb
imul
stos
in
jns
repz
repnz
hlt
outsb
arpl
xlat
jmp
and
pop
gs
cmpsl
dec
addr16
mov
cmpsb
mov
dec
lds
dec
mov
aas
xor
xchg
mov
movsb
jae
xor
faddl
cmp
adc
pop
cltd
rcrb
sbb
fwait
adc
push
fs
inc
das
adc
fdiv
mov
test
jno
or
lahf
inc
je
cmp
dec
add
sarb
sahf
push
arpl
gs
push
or
stos
scas
ficoml
mov
lods
adc
adc
push
xchg
push
inc
stos
jge
aam
or
repz
stos
xor
ficoms
aad
aas
pop
hlt
movsb
lahf
xchg
stos
loop
gs
mov
stos
icebp
mov
push
mov
push
xchg
mov
mov
cmpl
mov
sar
inc
mov
arpl
cwtl
je
jecxz
arpl
cld
leave
and
mov
test
subb
dec
call
xchg
mov
xchg
jne
push
sbb
out
inc
out
add
xchg
stos
into
xor
lret
cmp
stos
pop
es
and
fildl
sub
sbb
mov
mov
add
or
inc
jmp
call
aam
jl
arpl
repz
lret
and
fwait
mov
pop
stos
inc
inc
dec
xchg
pop
sbb
cmc
icebp
out
fsts
inc
and
std
pop
stos
data16
and
add
or
stos
add
mov
mov
jmp
adc
mov
xchg
rorl
jae
mov
inc
stos
inc
jnp
jp
ds
ret
stos
mov
xchg
dec
pop
inc
xor
jno
xchg
iret
mov
sti
std
stc
stos
lods
sbb
sbb
jg
or
adc
movsb
mov
enter
pop
inc
and
stos
icebp
push
mov
push
stos
or
movsl
iret
jae
sbb
push
scas
inc
mov
or
loopne
mov
ds
lret
fwait
inc
rcr
xchg
jo
jmp
lcall
daa
mov
stos
dec
scas
enter
in
cld
lods
adcl
add
push
ss
and
stos
out
push
add
mov
mov
fbstp
fsubrl
jecxz
in
or
stos
loop
jbe
pop
cmpsl
inc
push
sub
jae
ja
mov
adc
popa
xchg
cmp
cld
pop
mov
aas
mov
inc
mov
push
cmpsl
push
fwait
push
sub
mov
lea
jl
loop
dec
xor
cmpsl
popa
mov
dec
cmpsb
adc
popf
cli
xchg
jae
jb
mov
mov
sub
and
iret
movsb
sbb
jns
xchg
je
cmpl
jne
pusha
clc
jbe
mov
stos
iret
sub
insb
dec
cmp
jmp
or
lods
pop
lds
test
inc
push
jb
xlat
sub
fistl
out
cltd
flds
xchg
and
add
ret
push
pop
hlt
dec
out
jle
and
sbb
adc
xor
mov
jmp
mov
sbb
jge
pop
jbe
push
and
arpl
mov
sbb
jmp
aad
pop
aas
xchg
aaa
xchg
xlat
lret
jmp
cmp
adc
inc
orl
stc
stos
es
jp
adc
push
jae
dec
sub
leave
lahf
lret
stos
mov
mov
scas
inc
dec
mov
stos
jge
xchg
xchg
decb
es
mov
add
das
push
movsb
negb
pop
pop
stos
pop
out
cwtl
fsubs
ss
repnz
adcb
cmp
stos
jae
mov
js
lods
stos
out
mov
cs
xchg
push
popf
mov
movsb
frstor
mov
lahf
das
stos
aas
fdivrs
test
shrb
pop
stos
sub
jl
sbb
xchg
jmp
clc
add
xchg
je
stos
ss
pop
mov
aaa
enter
sub
lahf
cmp
jne
stos
lods
and
inc
sti
cs
mov
pop
inc
enter
stos
outsb
dec
and
jbe
dec
jns
loopne
push
xchg
mov
ds
fwait
and
lods
popf
leave
xchg
arpl
lods
shr
xchg
pop
mov
sbb
adc
add
outsl
addl
cmp
push
xor
mov
nop
test
sarl
dec
push
and
mov
incb
dec
int
daa
push
jo
mov
cmp
mov
pop
sbb
ret
push
push
fwait
lods
in
imul
mov
daa
popf
jmp
xorb
push
push
mov
data16
fwait
push
pop
jnp
stos
and
or
adc
mov
and
sub
fmulp
dec
movsb
adc
test
xor
lea
sbb
inc
cwtl
pop
dec
stos
pop
xchg
xor
cmp
dec
imul
test
jbe
pop
mov
fcmovne
loop
cmp
jae
sti
cmpsl
cmp
push
and
or
pop
addr16
fidivrs
fwait
jbe
push
push
lahf
stos
add
push
in
add
sub
orl
xchg
pop
push
add
enter
push
push
je
pop
jne
stos
dec
in
dec
repnz
sarb
int
cmpsb
je
imul
jp
cltd
pop
push
cmpsb
or
pop
orb
add
cmc
fstpt
and
stos
aaa
mov
in
mov
mov
mov
ds
pop
push
xchg
jo
int
mov
ds
imul
add
stos
rclb
ja
mov
mov
sub
pop
mov
stos
je
xchg
cmp
outsb
subb
mov
in
rorb
shrl
int
test
dec
lret
stos
push
jbe
hlt
iret
mov
mov
dec
cltd
out
call
and
push
scas
dec
dec
stos
or
lret
stos
faddl
icebp
push
imul
into
stos
mov
out
mov
stos
enter
rsm
out
stos
in
test
scas
imul
insl
test
daa
dec
out
fbld
stos
sub
push
inc
shlb
cmp
lods
stos
push
mov
ja
or
mov
inc
fidivrs
imulb
outsl
rorl
sbb
inc
jb
jmp
aas
stos
psrlq
xor
pop
stos
add
mov
addl
jl
shrb
enter
push
lret
sbb
xor
or
sub
mov
pushf
scas
int3
jmp
xor
push
pusha
xor
nop
aas
fsubl
xchg
ds
popa
and
fwait
pop
fimuls
stos
mov
xchg
mov
mov
mov
xchg
pop
fwait
stos
movsb
push
and
add
scas
lock
stos
push
sub
mov
push
jg
mov
xchg
ror
pop
xchg
push
lods
aad
in
fists
stos
das
mov
insl
subw
aad
fwait
mov
out
stos
cmpsb
cld
mov
xchg
dec
push
stos
cmp
push
and
mov
lds
inc
inc
stos
push
pop
daa
xchg
pop
add
enter
mov
imul
lcall
ret
mov
add
jmp
jge
out
leave
and
or
ret
mov
fwait
and
jge
mov
and
mov
add
mov
je
xor
stos
cld
mov
shrb
mov
jge
lds
or
xor
jbe
aaa
inc
cvttps2pi
movsb
mov
les
inc
stos
xchg
daa
mov
pop
dec
cmp
and
jl
mov
xchg
add
imul
sbb
dec
stc
lods
repz
jg
stos
ret
sahf
cmp
mov
mov
stos
sub
daa
pop
dec
pop
xchg
stos
cwtl
lock
add
out
mov
stos
inc
ss
inc
int
push
stos
sbb
sbb
mov
das
lds
stos
xlat
cmpsb
mov
fisttps
ljmp
xlat
xchg
sub
cmpl
or
dec
mov
ds
out
enter
sbb
stos
cmp
xchg
push
jmp
cs
mov
mov
mov
ds
mov
jle
xchg
xchg
lahf
stos
push
cmp
pusha
ljmp
adc
shl
push
in
push
mov
int3
shll
fisttps
gs
ret
sub
cld
cmp
faddl
adc
pop
dec
sbb
adc
sbb
data16
imul
cmc
adc
stos
aam
inc
int3
jle
jae
stos
out
lock
ret
call
mull
leave
jg
gs
stos
cmp
js
push
std
mov
jb
shll
jecxz
repz
mov
fs
inc
fiadds
adc
and
lret
xchg
jp
std
and
push
scas
or
mov
jmp
shr
sub
or
mov
xchg
xchg
int
shl
dec
stc
push
push
stos
adc
sbb
cmp
adc
xor
mov
mov
in
loop
pop
sahf
pop
xchg
inc
xor
cmc
mov
cmp
sbb
stos
into
test
push
hlt
iret
stos
int3
mov
loope
inc
mov
stos
xchg
xchg
and
ror
stos
push
mov
sbb
imul
and
and
jno
mov
adc
stos
push
mul
pop
rorb
push
xor
movsl
fwait
test
mov
stos
jmp
jae
mov
xor
lret
lds
mov
xchg
ljmp
jmp
daa
jno
les
xchg
xor
stos
movsb
in
mov
clc
stos
sub
jb
gs
mov
scas
pop
sbb
mov
cltd
lret
ss
xchg
cmp
stos
pop
cmpsl
jle
stos
xchg
cmp
ljmp
mov
pop
adc
stos
aad
in
pop
test
fsubrs
insl
outsl
stos
lahf
sub
xor
mov
arpl
cltd
jno
xor
jg
push
add
or
sub
cmpsb
in
add
mov
mov
add
subb
mov
popf
xchg
push
call
stos
int3
mov
and
ret
out
enter
repz
push
outsb
cmp
in
push
je
fdivrs
mov
cltd
arpl
in
fwait
js
and
fwait
stos
xchg
mov
sub
stos
sub
pop
jo
mov
pop
movsb
push
icebp
add
iret
pop
imul
lahf
add
adc
stos
xor
xorb
leave
hlt
adc
iret
repnz
bound
jb
mov
daa
stos
lea
sahf
leave
inc
and
sub
fsubrs
cs
pop
movsl
sub
movsb
pop
xor
mov
push
aas
ljmp
testl
decl
loope
cmpsb
fnstsw
fildl
adc
add
mov
stos
je
push
out
mov
fidivs
cmpsb
out
pop
movsb
shl
adc
xor
xchg
int3
arpl
pushf
fwait
dec
xlat
cmp
push
xchg
addr16
repz
pop
or
push
int
imul
test
xchg
aas
dec
movsl
sub
lret
roll
stos
pushf
out
add
aam
ds
repnz
aad
into
test
mov
mov
js
fisubrs
pop
clts
fsubrs
jecxz
jl
push
insb
xchg
pop
rol
stos
fiaddl
dec
in
or
cmpsb
dec
movsl
in
or
daa
push
jae
in
pusha
mov
or
int
bound
imul
inc
cwtl
cmpsl
jmp
fcompl
xchg
stos
leave
inc
pusha
jge
push
cmp
and
divb
mov
xchg
mov
cmpsb
pushf
lcall
test
aad
cmp
push
or
add
movsl
stos
push
or
out
jno
xchg
xor
insb
push
jmp
mov
xchg
sub
stos
pushl
ds
stos
movsl
lcall
stos
pop
adc
or
and
mov
add
fpatan
fdiv
push
roll
daa
movsb
je
movsb
in
test
outsb
dec
jl
subb
addr16
adc
and
in
dec
push
or
dec
mov
shrb
aas
adc
xchg
ja
testb
push
pusha
xor
and
dec
cmp
jne
stos
sbb
loope
fwait
test
stos
adc
sbb
jge
adc
sub
or
mov
inc
daa
les
inc
stos
jp
add
pop
push
jg
pop
loopne
popf
and
stos
cli
mov
jae
repnz
sbb
mov
mov
stc
icebp
mov
pop
stos
lods
cli
push
div
mov
or
mov
xorb
stos
imul
or
or
stos
mov
push
push
pop
push
int
adcl
inc
lret
cmp
add
push
dec
adc
ficoms
shrl
cltd
pop
iret
stos
push
pushf
in
into
insb
cmp
xchg
and
sub
pop
dec
js
sub
jmp
inc
in
sbb
xchg
subb
mov
hlt
push
stos
sub
inc
cmp
push
push
jns
mov
ror
or
jnp
jae
jp
mov
push
xchg
push
mov
andl
stos
jmp
rcr
stos
mov
lahf
xchg
sub
lods
out
pop
int3
mov
popa
std
xor
stos
mov
iret
mov
call
std
xchg
mov
jnp
push
stos
xchg
and
push
mov
jecxz
or
lahf
dec
popa
std
fdivl
aam
scas
add
mulb
loopne
test
test
lea
push
movsb
sub
or
aam
dec
xor
stos
or
out
mov
dec
lods
stos
inc
mov
test
xchg
mov
stos
ljmp
jl
in
add
xor
cmp
lds
fcoml
jmp
pop
pop
test
repnz
mov
daa
dec
mov
inc
stos
pop
rorb
fisubl
sub
stos
in
cmp
pop
pop
fmuls
add
mov
pop
push
adc
stos
cmpsb
shr
jge
jl
push
stos
mov
fisubrl
stos
add
repnz
sub
adc
loope
push
les
leave
and
add
stos
sbb
ljmp
aad
push
mov
sub
adc
mov
mov
inc
jb
es
sbb
stos
imul
dec
leave
sub
xor
adc
push
fnstenv
movsb
aad
sbb
dec
mov
sbb
mov
push
mov
sub
dec
sbb
xchg
lods
xor
popa
push
insl
fldt
fs
lds
mov
pop
mov
pop
xor
out
and
xchg
sub
push
cmp
loope
inc
outsl
jae
sbb
lret
push
push
aas
jb
insl
cltd
out
mov
in
in
xchg
mov
stos
adc
and
aaa
arpl
in
aas
push
bts
push
in
mov
jmp
mov
icebp
aam
adc
push
rorl
inc
dec
scas
or
and
fldenv
stos
in
arpl
push
or
aam
jnp
cmpsb
int
mov
dec
or
fistpl
cmp
sbb
adc
cmpsb
or
sub
or
lret
shrl
push
pop
mov
stos
cld
lock
dec
loope
daa
in
xchg
lods
jmp
fimull
cmc
xchg
aas
scas
and
rolb
jo
in
rcrl
jg
inc
xchg
jmp
jmp
jb
jle
stos
je
fwait
mov
jmp
xor
decl
fidivs
sti
mov
or
data16
inc
out
push
rcrb
dec
xchg
jle
decl
mov
arpl
pop
cmp
dec
pushf
stos
adc
lret
dec
daa
ss
sbb
xchg
mov
mov
int
stos
nop
hlt
repz
jmp
scas
lret
push
imul
bound
imul
inc
mov
add
xchg
aad
push
and
xchg
cmp
sti
iret
psadbw
or
push
cmc
data16
pop
stos
test
adc
js
stos
lods
push
add
stos
or
call
push
stos
addr16
push
in
jbe
xor
and
sbb
pusha
dec
mov
dec
dec
sub
cli
stos
scas
fidivl
in
rclb
pop
in
or
aad
add
cmp
outsb
movsl
popa
jle
int
add
enter
inc
or
repz
mov
mov
cmp
and
mov
lret
dec
shr
jl
add
mov
adc
sub
sahf
insl
stos
sbb
imul
push
add
xchg
sub
ja
je
mov
in
cmp
iret
stos
aas
mov
jbe
jo
mov
ja
popa
nop
mov
pop
je
loop
sbbl
stos
mov
shl
arpl
stos
push
nop
out
adc
or
jmp
mov
stc
imul
push
dec
fistps
aas
adc
scas
cmp
loopne
aaa
dec
sbb
leave
stos
out
imul
add
lcall
lret
jp
cmp
sub
push
stc
push
sbb
mov
and
dec
xchg
mov
cld
push
cmp
out
ret
std
adc
fdivrl
sbb
outsl
scas
je
jmp
imulb
mov
inc
addr16
jns
fistpl
stos
stos
push
cmp
rcrl
outsb
sarl
ds
popf
xchg
popa
in
lahf
dec
stos
push
cltd
dec
cmp
inc
loopne
inc
neg
pop
xchg
cmpsl
lret
movsb
mov
inc
push
ret
stos
inc
sbbb
jae
sti
stos
mull
jle
cmp
sbb
cmp
dec
fsubrl
in
add
xchg
ret
and
add
mov
or
jl
lods
mov
stos
lods
cld
pop
add
cmpsb
stos
xchg
adc
push
dec
jl
jg
testb
dec
jle
stos
xchg
pusha
push
in
add
rcrb
xchg
ljmp
das
inc
stos
cmpsb
jnp
sbb
stos
les
inc
stos
inc
iret
xor
loope
jb
stos
out
mov
add
lret
jl
lods
sbb
loope
test
dec
dec
stos
push
roll
imulb
rolb
mov
push
and
lahf
mull
sbb
out
push
xchg
cmc
stos
jmp
push
lock
mov
negb
in
scas
and
push
cmp
lret
sub
pushf
insl
mov
les
jmp
cli
stos
fstpt
cwtl
sub
pop
mov
cmp
dec
out
xchg
mov
xor
mov
dec
movsb
dec
and
mov
and
rcll
addl
jne
stos
enter
sub
aam
or
ljmp
lds
clc
xchg
and
jmp
popf
add
adc
adc
stos
femms
fidivrl
icebp
ds
dec
aam
aas
cmp
pop
add
dec
mov
dec
mov
mov
add
insb
add
fs
sti
stos
mov
dec
sub
or
nop
push
ds
jns
aaa
fcoms
mov
testl
push
jno
push
jns
es
or
stos
mov
repz
stos
xor
nop
push
lret
clc
cmc
sbb
insl
mov
jnp
enter
repz
push
pop
lret
push
xchg
xchg
mov
jmp
push
mov
mov
and
or
icebp
jl
popf
sti
sbb
lds
xor
xlat
add
int
mov
lss
mov
mov
test
jg
or
sub
aas
pusha
fldcw
sti
cmp
mov
xchg
push
or
imul
test
push
adc
cmp
loope
out
sbb
shlb
push
stos
fwait
dec
pop
pusha
mov
sbb
out
add
mov
into
sub
push
jl
sahf
stos
movsl
mov
lock
jmp
daa
call
mov
add
mov
lcall
inc
rcrl
jmp
mov
and
xor
addr16
mov
int3
bound
xor
lret
std
xchg
stos
scas
stos
mov
xchg
add
jns
jnp
xchg
mov
stos
hlt
cmp
stos
jg
jb
sbbb
stos
or
das
xchg
dec
fsubs
mov
mov
and
dec
ds
xor
mov
movb
stos
cmc
dec
hlt
and
cltd
jb
jmp
movsb
es
cmp
xchg
addr16
add
bound
icebp
mov
mov
jmp
pop
mov
jg
cmp
ret
push
xchg
dec
fwait
stc
add
in
or
stos
int
pop
shll
data16
cld
stos
xlat
or
movsb
ret
fwait
out
cmp
inc
lock
js
into
stos
loope
cltd
es
cmpsb
mov
jae
out
cmp
xor
pop
stos
jmp
dec
data16
scas
mov
daa
sbb
dec
mov
dec
stos
or
xchg
jmp
stos
add
cmp
outsb
imul
sub
lahf
dec
jg
stos
bound
das
inc
xor
xor
pusha
int3
jmp
sub
and
mov
xchg
jmp
jmp
lahf
jno
or
loopne
stos
dec
cwtl
or
push
and
je
dec
cmp
out
and
rorl
add
pop
adc
or
sbb
dec
mov
stos
leave
aaa
mov
xchg
or
ja
stos
fwait
inc
stos
xor
cmp
les
jge
stos
push
xor
and
inc
stos
sub
dec
push
adc
lock
outsb
cli
stos
dec
pop
push
or
clc
imul
jl
pop
mov
xchg
in
sahf
and
popa
jo
sub
jnp
pop
daa
push
fwait
jge
mov
mov
jl
test
lock
mov
aaa
leave
mov
es
popa
insl
imul
pop
test
push
cltd
stos
pop
adc
stos
movsb
pop
xchg
mov
mov
test
mov
dec
adc
cld
and
lret
test
xchg
cld
data16
dec
sub
das
mov
stos
test
adc
mov
cmpsl
stos
cmovnp
andl
xor
popl
xchg
stos
mov
fstpt
stos
mov
fiadds
pop
pop
inc
or
xchg
sub
mov
lods
pop
mov
cmp
stos
adc
cltd
cmp
stos
cmpsl
aaa
shlb
subl
or
stos
push
push
test
or
popf
dec
mov
dec
shrb
add
outsb
lds
cmpsl
iret
dec
jge
bound
pop
aaa
stos
lcall
inc
adcb
inc
jge
jmp
dec
jo
pop
aaa
jnp
inc
shrb
sbb
das
shrb
mov
lahf
push
stos
repz
dec
ds
idiv
inc
rolb
adc
jp
mov
jl
cmpsl
scas
xchg
les
cli
stos
repz
push
pop
shr
lods
cmpsb
mov
imul
jne
mov
and
bound
mov
xchg
push
inc
inc
push
mov
xor
mov
jmp
mov
push
je
jae
adcl
jecxz
xchg
ja
stos
nop
arpl
mov
aad
imul
std
fiadds
jl
sub
mov
mov
or
dec
cmc
test
push
and
aas
add
sbb
cltd
stos
add
mov
sahf
stos
inc
inc
cld
std
fadd
sub
and
mov
repnz
xchg
dec
popf
stos
jmp
hlt
popf
shld
jns
stos
xorl
mov
xor
sub
xchg
adc
xor
and
pop
scas
mov
xchg
xchg
insl
stos
out
fnstenv
lcall
and
leave
in
jl
stos
cmp
test
xor
jb
imul
jl
mov
shll
fwait
lcall
mov
inc
push
stos
and
aam
cwtl
stos
lea
pusha
lds
xchg
test
cmp
xchg
out
stos
push
jno
dec
jmp
and
inc
xor
mov
lcall
jne
push
daa
ljmp
out
mov
ficoml
push
sub
sbb
stos
add
js
dec
cmp
mov
aam
mov
sub
pop
dec
add
lcall
stos
fdivrl
mov
stos
iret
mov
stos
lock
pop
aam
es
leave
lea
roll
stos
jns
sti
xlat
in
adc
xchg
stos
dec
movsb
dec
push
cli
add
push
lods
and
fwait
lret
stos
fsts
dec
mov
out
stos
inc
mov
jno
stos
aad
test
mov
xchg
ss
mov
sti
xor
imul
mov
ds
sbb
jmp
lret
out
fwait
adcl
cmc
sub
cmp
cmp
fwait
mov
repz
stos
or
or
lahf
dec
out
xchg
in
dec
xchg
or
jbe
push
adc
push
inc
jg
push
push
sub
imul
imul
xor
xchg
mov
mov
sub
push
fs
jge
or
xor
push
inc
jmp
sbb
lds
scas
jle
movsb
xchg
sbb
ja
stos
dec
mov
xchg
sub
sbb
mov
fbstp
xchg
mov
shrb
pop
ljmp
mov
inc
jg
jmp
jmp
stos
out
stos
sub
inc
push
stos
cmp
aas
dec
add
dec
js
xchg
mov
mov
movsb
jbe
jmp
enter
or
stos
into
adc
mov
cli
rcl
stc
outsl
fisubrs
adc
stos
xchg
xchg
ret
idivb
mov
xchg
and
sarl
scas
mov
adc
mov
cmpsl
cmpsb
fimull
mov
shll
inc
aas
into
roll
inc
and
mov
mov
bound
cmp
sti
or
stos
jne
xchg
push
adc
jb
mov
and
int3
pop
stos
ljmp
mov
mov
mov
cmp
in
mov
pop
imul
adc
mov
in
xchg
hlt
repz
mov
stos
rcrb
mov
insl
loope
sbb
test
call
inc
mov
imulb
orb
pusha
scas
push
gs
mov
stos
in
js
mov
lds
sub
in
lahf
jmp
stos
jae
into
lods
jbe
sub
push
push
outsl
xchg
jne
addl
push
mov
push
mov
xchg
inc
subb
fwait
lods
in
sub
mov
xor
pop
stos
jne
or
jno
stos
add
call
cmp
or
pushf
push
movsb
lds
scas
xchg
xchg
andb
add
push
push
stos
sub
in
rcrb
aaa
mov
dec
mov
jb
sub
stos
mov
jp
mov
mov
fwait
push
xchg
inc
insl
addr16
idiv
cwtl
mov
in
stos
xor
mov
mov
lret
cwtl
jmp
stos
popf
mov
out
sub
dec
fisubrl
or
mov
jb
in
pop
loope
stos
fs
xchg
scas
stc
mov
push
pop
fsubs
mov
sbb
jecxz
dec
xchg
push
test
aaa
and
jbe
adc
bnd
outsl
imul
mov
stos
shr
mov
stos
test
mov
outsb
decl
push
mov
imul
and
pop
rcll
inc
pop
mov
imul
clc
stos
shrl
loope
jmp
dec
lods
nop
test
push
and
add
int3
xlat
stos
sbb
cli
aaa
movsl
dec
subl
pop
lods
xchg
cmpsl
adc
hlt
addr16
or
iret
fwait
data16
test
stos
in
repz
shlb
xor
hlt
int3
pop
dec
xchg
sbb
mov
gs
fisttps
sbb
iret
stos
pop
in
mov
xchg
cmp
cmp
bts
jge
jno
shrl
out
or
xor
imul
out
push
xchg
add
stos
pop
or
fidivl
in
dec
js
std
add
in
sbb
jne
stos
leave
test
stos
inc
and
and
pusha
stos
aaa
in
ss
or
cmp
in
xor
lret
add
inc
mov
in
shrl
addb
adc
hlt
or
dec
sub
daa
popa
sub
mov
lahf
stos
cltd
lret
pop
testl
dec
or
pop
mov
stos
inc
repnz
dec
jg
sub
lods
dec
inc
xlat
stos
lret
adc
cmp
push
pop
sbb
scas
inc
shrb
push
jb
mov
pushf
imul
jbe
lahf
mov
stos
xchg
jle
loopne
in
loop
adc
ss
cli
sub
stos
scas
cmp
jmp
push
les
out
xchg
jp
stos
inc
int
mov
sub
addr16
aas
jle
pop
sub
sub
pop
imul
fwait
jecxz
gs
daa
scas
cmpsb
mov
sbb
sbb
jmp
shrl
sahf
xchg
hlt
lahf
loopne
xor
jo
stos
jnp
dec
cmp
jmp
test
cld
mov
lret
adc
inc
mov
mov
les
pop
xchg
loop
jp
cltd
jmp
mov
or
std
pop
xchg
aam
push
stos
mov
push
subb
inc
shrb
fisubrs
imul
iret
stos
inc
mov
imull
dec
into
or
mov
mov
pop
fnstcw
test
popl
mov
jbe
aam
ret
stos
xor
xchg
in
pop
inc
in
or
repnz
outsb
mov
lock
mov
lea
and
cmp
xchg
jnp
stos
pop
push
mov
cli
cmp
mov
outsl
lret
mov
movsb
stos
popf
shrl
arpl
or
xchg
mov
ljmp
mov
dec
xchg
or
inc
pushf
pop
inc
in
das
cmp
push
add
mov
pop
push
cmp
mov
rcll
popa
js
add
cwtl
lahf
xchg
stos
mov
mov
inc
cmpsl
sbb
mov
adc
adc
mov
inc
imul
cli
test
stos
lea
xchg
shrl
push
xchg
jo
mov
push
stos
daa
push
inc
jbe
jge
stos
xchg
sbb
das
and
cmpl
in
mov
push
or
xchg
push
stos
test
cmpsl
adc
push
sahf
push
stos
imul
mov
stos
clc
aaa
add
push
push
stos
xor
popf
fiadds
mov
mov
stos
sbb
sbb
pop
stos
mov
inc
daa
iret
jns
dec
stos
adc
int3
loop
and
push
pop
jmp
inc
lods
addb
mov
shlb
imul
mov
stos
jns
test
dec
xchg
inc
stos
pusha
push
out
mov
or
mov
cwtl
gs
xor
push
loop
icebp
xor
movsb
rcl
lret
bound
push
das
adc
ret
dec
xor
push
mov
incl
add
jno
xor
or
popf
jmp
daa
loopne
sbb
push
xchg
fildll
stos
std
push
ss
out
dec
stos
add
cmpsb
outsl
dec
out
push
scas
stos
aaa
sbb
xchg
add
popa
stos
and
andl
add
addr16
sub
or
or
stos
xchg
inc
xor
xchg
push
pop
xchg
addr16
sub
adc
stos
xlat
jle
push
and
ja
rcll
dec
in
and
ds
pusha
imul
insl
dec
or
add
enter
out
movsl
push
push
push
or
lods
loopne
stos
sahf
icebp
mov
push
or
and
mov
mov
pop
out
call
pop
xchg
fwait
add
shrb
stos
xchg
xchg
and
out
sub
out
inc
pop
dec
add
add
xchg
shrl
ret
inc
push
loop
jae
jo
or
outsb
arpl
pop
push
sub
xchg
cmp
jmp
in
test
test
rorl
or
ljmp
mov
sbb
ffreep
inc
stos
push
lret
shl
xlat
cwtl
mov
imul
shll
push
xor
sbb
mov
test
stos
xor
push
pop
adcb
mov
cmpsb
mov
cmc
push
scas
and
inc
sbb
enter
imul
sbb
lods
jmp
cltd
scas
sub
mov
xchg
stos
outsl
stos
cmc
and
orb
lea
hlt
mov
sbb
push
stos
mov
rorl
push
adc
cmpsb
lea
dec
stos
jb
ret
enter
in
stos
leave
rcll
or
cltd
aaa
es
stos
js
bound
push
ds
sbb
xchg
pop
mov
das
push
push
push
adc
pop
stos
mov
mov
stos
mov
mov
pop
imul
cmp
pop
imul
in
fnstcw
push
mov
sti
leave
stos
gs
and
xchg
jnp
enter
push
out
dec
rcrb
iret
mov
stos
icebp
sarl
dec
or
std
pcmpeqb
int
lock
pop
stos
stos
sub
jmp
xchg
add
mov
mov
dec
stos
out
sbb
or
jb
stos
and
inc
push
jecxz
or
stos
jne
sub
mov
stos
mov
xor
fcmovne
popf
sub
btr
mul
xor
mov
or
inc
xchg
into
aad
jp
mov
mov
sub
popf
test
and
add
or
inc
sub
sarl
mov
push
movsb
xchg
sub
mov
fcmovu
mov
cltd
sub
stos
enter
and
cli
lods
xchg
push
mov
fstps
stos
test
subb
xor
mov
or
jg
xchg
idivl
jns
js
mov
hlt
aas
add
sub
lods
stos
jne
jg
cltd
stos
sbb
pop
or
push
clc
loopne
imul
inc
sahf
jnp
mov
dec
mov
mov
adc
or
fnstenv
or
repnz
xchg
push
push
fisubl
sub
push
add
xchg
ljmp
enter
xchg
shr
addr16
adc
cmp
outsl
and
cltd
into
fwait
repnz
ret
lcall
stos
cmp
add
popf
jnp
out
jne
stos
adc
in
stos
mov
in
jecxz
pop
inc
adc
mov
mov
pop
cwtl
fimuls
les
push
testb
mov
push
loope
sbb
xor
inc
seta
ret
cmp
dec
jne
addr16
scas
dec
cmp
cmpsb
push
mov
scas
std
xor
cmp
jns
gs
mov
or
stos
xchg
fldenv
sub
jo
mov
stos
leave
mov
mov
daa
inc
push
push
dec
cltd
mov
stos
and
sahf
lcall
push
jns
push
dec
xchg
or
mov
leave
ficompl
push
aas
jmp
aaa
loopne
mov
cmpsl
popl
popa
or
mov
sub
add
jle
jmp
pop
jae
pop
xchg
gs
stos
mov
lds
repz
pushf
push
push
dec
adc
repnz
push
xchg
mov
add
jns
scas
sub
decl
push
sti
in
dec
mov
adc
insw
dec
stos
enter
mov
xor
daa
adc
push
mov
cltd
stos
fistpl
mov
dec
iret
dec
jecxz
sub
push
pop
stos
or
xor
and
ljmp
mov
push
stos
insb
lcall
mov
adc
loope
es
movsb
mov
fildll
stos
cmp
lods
lea
mov
es
stos
push
loopne
std
push
fisubrl
in
ret
popa
loop
rorb
adc
movsl
inc
inc
mov
lods
stos
out
je
test
mov
loopne
pop
mov
xor
xor
scas
out
ret
icebp
shlb
pop
js
mov
rol
cmp
andl
aaa
inc
cs
aam
daa
mov
xchg
stos
dec
mov
pop
je
ret
mov
xchg
out
add
push
stos
pop
jne
cwtl
add
inc
stos
mov
jmp
xor
loope
movsl
loop
lret
add
mov
fisttpl
mov
adc
jp
xor
mov
imul
mov
inc
std
add
mov
lods
aas
pushf
mov
in
cs
sbb
cmp
orl
cld
aaa
pop
sti
xor
pop
cmp
fistpl
stos
dec
loopne
sub
lods
push
jl
mov
inc
jg
imul
mov
out
stos
mov
les
sub
cmpb
xor
mov
add
daa
data16
inc
loop
add
mov
arpl
jmp
mov
lret
mov
or
sbb
push
sbb
push
jl
lret
pop
and
and
cld
mov
or
add
mov
adc
mov
ljmp
or
cmpsb
rclb
mov
adc
sub
imul
adc
rol
jg
ljmp
sub
sub
mov
stos
iret
jae
insl
jbe
imul
testl
lret
jg
test
cmpl
inc
pop
mov
pop
ds
push
movsb
or
cmpsb
xchg
dec
sarl
iret
cmpsl
scas
jle
adc
or
pop
sub
mov
lods
out
xchg
mov
jle
pop
outsl
dec
stos
pusha
fldl
mov
add
adc
cltd
cmp
lcall
stos
subb
loope
adc
mov
mov
in
xchg
in
scas
stos
shll
or
jl
icebp
mov
insl
jns
push
mov
lcall
daa
or
popa
push
xor
aas
mov
cmp
scas
xor
and
fs
bound
rclb
js
stos
lea
sar
test
mov
stos
push
sub
xchg
decb
lods
xor
push
cmpsl
inc
cmpsb
outsb
pop
xchg
and
stos
add
push
jmp
stos
mov
fdivrs
lcall
pop
loop
or
les
out
mov
mov
bound
sbbl
daa
xor
adc
lret
int3
sub
test
pop
dec
and
jg
or
out
mov
fld
xchg
cwtl
cmpl
fadds
push
xchg
rep
in
dec
in
test
and
push
incb
aas
inc
imul
mov
lahf
inc
fwait
adc
mov
add
out
push
stos
push
cmpsl
and
or
mov
mov
in
push
inc
dec
pop
std
insl
cmp
mov
and
shrb
lods
mov
cmp
es
jae
stos
cmp
xor
scas
sub
or
pop
pop
es
stos
repnz
push
cmp
lea
lcall
and
testl
cwtl
jnp
mov
int3
stos
mov
popa
aam
jmp
add
or
pop
xchg
dec
test
stos
jo
pop
out
pusha
sbb
mov
adc
sub
divl
adc
stos
or
jle
notb
sbb
in
cmp
stos
inc
lds
addr16
ljmp
in
xchg
adc
pop
iret
and
lahf
pop
nop
mov
jmp
mov
je
mov
in
or
stos
loopne
ret
rorl
dec
push
bound
jnp
lock
mov
and
cmp
ret
push
mov
push
mov
stos
loope
pop
sub
mov
push
dec
jl
adc
loop
dec
stos
mov
loope
mov
pusha
xchg
inc
stos
sti
jno
jle
je
mov
mov
fs
or
cmpsl
mov
pop
gs
xchg
sti
xor
mov
mov
cmp
ret
push
mov
fs
xchg
inc
jne
mov
pop
stos
jmp
sub
mull
adc
jle
jno
cmpsl
out
jecxz
dec
scas
fisubrs
or
stos
in
sbb
stos
jp
xchg
je
push
xchg
imull
hlt
scas
pop
inc
in
repz
ja
mov
sbb
pushw
cmp
stos
enter
pop
mov
outsb
cmpsb
ss
cs
and
and
stos
xor
fmul
sub
add
xchg
cmp
scas
test
cwtl
push
stos
cmc
cs
ret
stos
jle
push
jp
js
jg
lcall
shlb
and
pop
stos
pop
cmp
jp
add
mov
cmp
xor
addl
stos
xor
clc
outsl
inc
xchg
cmpsl
repnz
out
mov
outsb
dec
imul
push
mov
lods
or
jmp
adc
pushf
fwait
ds
add
xchg
mov
push
pop
cmpsl
add
stos
clc
popf
pop
dec
mov
sbb
mov
std
push
scas
insb
push
aad
loope
ret
lret
xchg
sti
xchg
ljmp
inc
xor
mov
ss
jl
clc
or
xchg
test
fldt
stos
sub
mov
pop
ficoms
or
stos
mov
fldl
out
pop
imul
clc
nop
imul
xchg
pushf
test
lea
push
inc
stos
xor
decl
cmpsl
jno
mov
pop
mov
lods
ds
arpl
and
stos
add
inc
jg
stc
stos
test
xchg
mov
stos
imulb
nop
cmp
sub
into
inc
int3
cmpsl
xor
or
stos
mov
mov
loope
cs
jl
daa
pushf
in
gs
cmpsl
add
jno
stos
mov
iret
mov
dec
movsb
fwait
leave
popf
push
mov
or
sub
dec
mov
stos
adc
mov
cmpsl
aaa
push
insl
stos
mov
push
fsubrs
mov
lahf
movl
mov
mov
lcall
pand
gs
lcall
hlt
xchg
shll
stos
repz
jle
sub
lods
mov
push
cmp
sub
testl
cmp
daa
loop
pop
xchg
xchg
stos
mov
push
mov
adc
dec
fistpl
and
mov
push
jmp
idivb
inc
or
adc
stos
pop
or
addr16
sub
stos
nop
les
mov
dec
jp
xchg
ja
or
pop
push
mov
or
push
testl
pop
push
or
ret
mov
jg
mov
pusha
loopne
addr16
stos
aas
mov
add
push
and
stos
xor
pop
int3
shrl
jbe
mov
inc
rep
addr16
and
in
cs
jecxz
cmp
ljmp
scas
mov
sbb
stos
push
mov
dec
ds
dec
out
cmc
int3
xchg
stos
ret
cmp
mov
in
or
nop
dec
jmp
or
imul
jp
ljmp
lods
divb
daa
or
and
out
imul
rorb
bound
jg
fcmovnbe
stc
or
inc
sub
movsb
jo
push
pop
divb
cmp
stos
loopne
ficomps
stos
int
fwait
into
cld
mov
adc
daa
add
xchg
lret
xor
adc
enter
decl
outsb
mull
adc
jg
pop
mov
or
addr16
les
pop
pop
or
dec
stos
in
mov
clc
stos
sbb
pop
ljmp
shrl
dec
jl
cmp
cmc
test
stos
fisttpl
and
add
dec
and
enter
or
js
stos
gs
inc
dec
sub
adc
mov
mov
xor
mov
ds
loope
arpl
test
rcr
xor
sti
or
jnp
and
aam
push
mov
out
stos
outsl
or
daa
dec
int
mov
xor
out
test
mov
push
mov
shrb
shrl
mov
rcr
lea
es
addr16
imul
mov
mov
mov
data16
rolb
pminsw
mov
cmpsl
loop
iret
inc
inc
fildll
stos
mov
aam
les
fimuls
negb
ret
jno
pushf
pop
es
adc
stos
push
cld
mov
daa
cmpsl
ja
pop
fwait
mov
push
daa
repnz
test
sahf
jmp
cwtl
movsl
movsb
cli
cwtl
adc
sub
stos
out
fstps
xlat
sbbb
daa
mov
in
sub
in
ljmp
push
jmp
mov
pop
daa
dec
arpl
ss
js
or
jmp
dec
push
hlt
xchg
into
mov
cli
and
mov
dec
rcrl
lcall
jns
shrb
inc
mov
mov
inc
jbe
xor
dec
xchg
scas
pop
sbb
pop
adc
xchg
stos
movsb
push
cmp
push
lret
daa
adc
popa
scas
fistl
stos
pop
psllw
push
mov
push
mov
xchg
push
mov
or
stos
jg
mov
mov
rolb
bnd
add
xor
scas
mov
cli
jge
xchg
mov
xchg
mov
dec
sub
add
xchg
jp
stos
aad
lock
call
mov
xor
stos
xor
jg
subb
pop
and
stos
sarb
popa
fists
jmp
cmp
xchg
sbb
scas
mov
arpl
fs
lds
add
push
dec
mov
add
and
or
imul
xchg
mov
addr16
stos
xchg
inc
mov
lahf
push
cmp
mov
shr
push
test
inc
mov
icebp
mov
imul
sbbl
into
imul
and
sahf
sub
sub
or
jge
loopne
mov
decl
stos
andl
int
jmp
aad
movsb
test
jp
scas
mov
pop
and
push
fnstenvs
les
add
popa
jbe
ja
fdivrs
xlat
stos
iret
jecxz
push
arpl
inc
lahf
sub
jmp
and
lea
cmp
dec
cmp
stos
jnp
and
bound
lock
call
jo
lods
adc
fnsave
je
add
dec
lret
jo
cmpsb
sbb
cmp
pop
movsb
iret
ret
mov
jl
xor
mov
ret
push
shrb
mov
xchg
cli
add
cmpsl
int
ficoms
lahf
stos
dec
jmp
cs
xchg
xlat
outsl
pusha
notb
call
stos
cli
int3
cmc
cmp
imul
sbb
ljmp
int3
push
scas
and
xchg
adc
addl
xor
arpl
xchg
xor
xor
fistps
daa
enter
or
stos
ss
repnz
inc
mov
in
cmpsb
xor
packuswb
int3
xchg
push
into
daa
push
mov
sbb
stos
sbb
adc
push
stos
ja
cmp
ficomps
aas
and
sub
cltd
xor
mov
jg
shrl
popf
mov
sbb
call
fcmovb
test
push
into
push
xchg
mov
lahf
sbb
xor
pop
imul
js
es
cs
push
sbb
or
int
cmp
stos
in
dec
xchg
mov
mov
sahf
cmp
jmp
out
mov
adc
xchg
repnz
mov
fcmovnbe
fidivrl
imul
loopne
lret
sbb
add
inc
inc
pcmpeqb
repnz
sbb
xor
and
sbb
pop
insl
aad
cmpsl
mov
push
or
jmp
out
icebp
mov
add
mov
and
stos
mov
fwait
cmp
stos
outsb
das
inc
jne
out
pusha
subb
push
dec
stos
adc
xchg
mov
stos
jae
ljmp
adc
push
add
or
mov
pop
inc
jecxz
push
mov
xchg
mov
stos
aam
jns
fs
ja
dec
mov
xor
mov
sbb
jl
stos
xchg
push
dec
je
ret
mov
stos
xlat
cmp
in
pop
leave
out
stos
jb
rcr
das
loop
iret
sub
sbb
popf
xchg
cmp
mov
rcll
fists
mov
cmp
imul
dec
mov
pop
mov
dec
pop
sbb
sub
stos
aam
or
outsb
add
push
inc
pop
jmp
jne
test
sbb
dec
je
add
and
cmpsl
jg
stos
push
in
mov
push
mov
jmp
stos
push
imulb
out
push
stos
mov
pop
sub
lcall
sbbl
and
jnp
dec
movsb
pop
push
jmp
lods
ja
test
cmc
in
stos
fcomps
sub
test
jmp
mov
stos
dec
into
jp
dec
pop
pop
inc
stos
popf
fimuls
cld
mov
out
cmp
lds
fwait
mov
movsl
loopne
jmp
arpl
adc
pop
int
fadd
sbb
out
scas
cmp
jbe
and
scas
mov
jl
adc
lods
out
test
imul
mov
arpl
fisttpl
adc
jmp
stos
adc
cmp
jmp
jne
int
jae
ja
stos
movsl
pop
pop
adcl
jmp
dec
arpl
stos
daa
pop
shll
jmp
sbb
and
xchg
push
sub
sbb
and
stos
cmp
test
cmp
insb
cli
inc
pop
in
stos
imul
data16
mov
sbb
aam
inc
dec
stos
shrl
cmp
shrl
xchg
stos
inc
popf
fisubl
mov
or
sbb
adc
lret
fsubs
fdivr
subl
cmpl
sub
push
sahf
dec
sbb
scas
sub
cmp
cmp
nop
stos
lock
and
sub
lcall
xchg
stos
imul
test
f2xm1
bound
stos
arpl
push
cmp
jp
sbb
dec
idiv
gs
fisubrs
jmp
ja
ror
movsb
dec
mov
push
mov
icebp
xor
mov
dec
stos
xor
ljmp
push
ds
iret
xchg
push
loop
mov
popf
push
cmp
mov
stos
outsb
pusha
icebp
decb
frstor
pushl
push
fcompl
push
mov
loope
sbb
inc
lea
add
dec
aam
cmp
add
fidivs
mov
add
push
and
xchg
sub
adc
jne
cwtl
xor
movsl
stos
jmp
in
aas
dec
inc
stos
cmc
mov
sbb
mov
repz
aaa
sbb
jbe
je
push
cld
adc
inc
push
mov
push
insb
ret
in
rolb
mov
pop
scas
hlt
sahf
jnp
sarb
cmp
inc
outsl
push
test
gs
mov
adc
jbe
adc
ret
lods
subl
adc
stos
add
mov
push
stos
jecxz
ss
in
aam
stc
stos
jno
enter
mov
dec
aaa
mov
add
mov
mov
or
and
cld
adc
xchg
fimuls
test
sbb
xor
jmp
fmuls
xchg
cmp
ret
cmp
es
rclb
imul
cld
fstl
andb
dec
jmp
dec
ret
ret
xchg
inc
mov
mov
and
stos
std
cmp
xlat
hlt
lcall
pop
push
cmpsb
jnp
sbb
mov
imul
mov
or
fmulp
jge
jmp
pop
pusha
lahf
pop
inc
addr16
imul
ljmp
adc
stos
js
test
xchg
idivb
stos
mov
imull
mov
les
loopne
or
lods
out
cmp
arpl
rclb
or
fwait
icebp
adc
stos
lods
pusha
adc
iret
inc
mov
stos
xchg
jp
je
sub
loope
stos
nop
or
aad
stos
push
stc
adc
lock
fs
notl
cmp
adc
push
mov
sub
adc
cmp
cs
repz
mov
xchg
mov
stos
adc
fwait
mov
pop
or
sub
fisubs
stos
ss
mov
mov
cmpsl
inc
pop
fsubs
add
insb
xor
inc
dec
stos
out
inc
mov
sbb
outsl
xchg
fcoms
jno
mov
gs
xor
mov
push
xchg
xor
pop
push
mov
xor
sti
jle
add
or
push
xchg
dec
test
scas
subl
cs
pushf
dec
cmpsl
stos
sbb
pop
test
stos
pop
outsl
dec
and
shr
stos
cli
repz
xchg
lret
stos
push
cmp
inc
out
jmp
inc
imul
push
lahf
nop
or
stos
mov
repz
stos
cmc
inc
lods
push
jmp
or
insb
aad
mov
ljmp
mov
stos
popf
aas
jmp
stos
scas
bound
stos
pop
clc
mov
int3
imul
jbe
jb
add
sub
ret
xchg
iret
stos
pop
add
mov
repnz
imul
ret
stos
lods
xchg
test
stos
cmpsl
add
jne
and
mov
xchg
pop
faddl
addr16
sbb
mov
xchg
adc
fs
mov
mov
cmp
mov
faddl
mov
push
stos
mov
jl
add
jae
and
push
cmp
inc
mov
push
arpl
lds
fwait
insb
in
dec
loop
imul
lahf
stos
mov
mov
or
lcall
inc
adc
inc
imul
cld
pop
mov
dec
jecxz
lahf
movsb
inc
push
jb
scas
test
mov
mov
adc
adc
pmuludq
daa
xchg
test
mov
enter
std
and
clc
jne
icebp
arpl
push
sbb
fidivrl
mov
sub
sub
stos
inc
sbb
and
stos
or
aad
jb
popf
pushf
jmp
push
pop
cmp
je
fs
into
pop
hlt
jmp
aas
lret
push
sbb
push
mov
aaa
dec
stos
leave
mov
adc
cld
sbb
adc
jno
push
push
stos
cs
popf
pop
stos
mov
xor
stos
in
sarl
jo
imul
sub
pop
fistpl
mov
push
inc
adcb
es
lret
stos
mov
push
jl
pop
inc
or
aam
aad
stos
cwtl
xchg
sbbl
sub
stos
ffreep
in
stos
es
jno
mov
dec
out
stos
jl
repnz
pop
sbb
mov
mov
cmp
inc
stos
cs
dec
mov
and
pop
inc
cld
xchg
add
jp
mov
adc
mov
stos
dec
push
out
testl
pop
call
stos
mov
push
imul
lea
in
imul
rol
repnz
stos
ficomps
clc
dec
stc
sub
stos
xchg
in
insb
cwtl
rcll
mov
push
in
out
mov
pop
arpl
jns
stos
dec
lock
xor
inc
mov
mov
xlat
ret
cmp
daa
das
or
fldt
jmp
addb
out
xor
jae
sub
stos
leave
fsubrp
cmpsl
in
sub
out
daa
outsl
lods
cmp
mov
stos
ds
fwait
inc
adc
roll
sbb
and
and
inc
test
aam
pop
addb
cltd
jns
and
or
mov
stos
sub
lret
aas
adc
insb
std
cmp
mov
and
aaa
add
addr16
cli
push
stc
in
stos
imul
mov
cmp
ja
mov
and
dec
push
mov
das
push
stos
lea
gs
mov
mov
jne
adc
gs
rcl
lahf
mov
js
dec
fildll
mov
sbb
pop
push
stos
push
ja
xchg
sti
xchg
lcall
inc
mov
out
dec
outsb
stos
das
xor
fstl
inc
fsub
orb
inc
xor
stos
stc
adc
dec
adc
lahf
mov
and
mov
leave
stos
mov
fldcw
pop
adc
jmp
jp
push
mov
out
stos
cmp
ds
and
out
xchg
jle
jns
cltd
mov
inc
scas
mov
mov
jmp
and
pop
lods
stos
mov
pop
mov
out
jp
add
mov
outsl
stos
add
or
jmp
nop
ret
cmp
imull
enter
into
and
sti
loopne
mov
stos
pop
cli
sbb
pop
sbb
stos
mov
add
dec
lds
xchg
out
cs
loope
jmp
jae
hlt
stos
repz
or
sbb
stos
test
js
call
lret
pop
mov
mov
jge
loope
stos
andl
lea
mov
and
jae
xchg
fldpi
stos
add
ficompl
shrb
in
lret
lcall
push
sbb
data16
push
arpl
mov
stos
xor
push
cmp
push
jl
xor
in
mov
dec
sahf
test
icebp
lods
into
stos
ja
xchg
lcall
dec
adc
lds
les
sbb
cmpsl
lret
pop
mov
imul
add
adc
push
dec
xchg
jne
fwait
pop
dec
rclb
mov
xchg
imul
adc
out
repnz
mul
stc
push
pop
dec
mov
mov
lods
xchg
std
arpl
int3
fwait
push
add
inc
stos
pop
xlat
sub
mov
add
mov
jg
jmp
addr16
mov
xadd
jp
outsl
es
stos
pusha
fwait
and
add
cmpsl
stos
mov
dec
enter
ds
scas
jp
fsubrl
add
cld
and
mov
jg
es
ret
das
int
jmp
jmp
push
or
xchg
lret
nop
iret
repz
sbb
inc
inc
mov
stos
adc
push
push
sub
xor
push
fdiv
fsts
stos
adc
arpl
ljmp
sbb
pop
icebp
add
add
sbb
jae
stos
adc
rclb
add
inc
stos
loope
loop
adc
sbb
stos
insb
push
ret
pop
subb
mov
jb
cmpsb
cmp
pop
lahf
pop
fwait
aas
daa
ret
mov
pop
pusha
pop
mov
xchg
jae
mov
stos
test
lds
sub
mov
add
adc
inc
andb
sbb
mov
stos
push
mov
and
in
xor
stos
cmp
jne
pop
stos
pop
cwtl
test
or
movsl
mov
stos
ja
or
xor
fiadds
sbb
lahf
mov
jo
leave
dec
stos
mov
loopne
xor
mov
stos
mov
out
or
stos
xchg
lea
cli
fwait
ss
cmpsb
mov
mov
cmp
std
repz
cmpsl
push
mov
cmc
leave
stos
add
sbbl
cmp
mov
xchg
in
lods
icebp
jle
sbb
lret
stos
adc
push
shrl
sbb
dec
movl
fmuls
sbb
fnstenv
sub
pop
and
iret
bound
and
and
mov
xchg
jge
pop
adc
jbe
pop
bts
or
stos
mov
xor
dec
stos
outsb
sbb
enter
cmp
mull
fsubrs
pop
sub
xchg
andl
test
jl
dec
stos
add
and
jge
mov
cmpsl
lahf
push
add
movsb
test
adc
loop
or
pop
roll
int3
repnz
push
and
pop
stos
iret
lods
push
jo
add
imul
inc
int
or
out
adc
arpl
out
inc
xor
lds
xchg
dec
clc
add
mov
jb
rorl
and
and
loop
sti
pusha
out
rcrb
or
test
xor
imul
mov
sub
mov
pop
outsb
outsl
xchg
aas
xchg
fisubrs
or
jmp
inc
or
es
lods
mov
leave
fwait
adc
gs
addr16
jg
adcl
mov
mov
pop
stos
sub
inc
aas
cmp
clc
jns
call
scas
das
test
stos
mov
mov
int
addr16
xchg
stos
xchg
lcall
setno
lcall
push
mov
ret
data16
xor
stos
ror
repz
lret
je
inc
xchg
jne
or
push
into
cmp
xchg
sbb
negb
mov
fwait
test
mov
or
bound
xlat
ret
in
in
ret
cmc
data16
stos
pop
xchg
fs
jmp
mov
inc
stos
add
out
xchg
out
movsb
add
ret
push
sbb
lods
loopne
mov
pop
and
lods
mov
scas
daa
stos
dec
mov
lods
mov
arpl
adc
stos
jo
xor
gs
mov
in
sbb
rorb
stos
xor
fidivrs
sbb
lret
add
fcmove
popf
subb
jge
sub
mov
in
push
mov
xchg
push
test
andb
xchg
add
add
add
jp
in
inc
pusha
sbb
jle
scas
icebp
dec
js
jmp
outsb
xor
dec
and
push
lods
jmp
sub
stos
std
ret
sbb
cmp
fildll
pop
xor
stos
cmpsl
cmpl
mov
pop
push
loop
std
decl
dec
push
sub
push
lds
xchg
inc
jmp
stos
jle
sbb
stos
rolb
shrl
dec
sub
mov
inc
stos
ja
mov
stos
jl
adc
daa
and
stos
aad
pop
cmc
push
test
inc
jmp
fwait
xor
dec
push
mov
sar
stos
jp
jecxz
mov
pushf
or
aad
pop
ret
imul
xchg
pop
gs
xor
lret
jmp
mov
rcrl
pop
icebp
sub
push
mov
push
stos
sbb
dec
out
movsb
stos
in
inc
mov
fisubrs
xchg
dec
fadd
iret
movsb
stos
es
jns
cmpsl
lcall
sbb
out
pop
js
jnp
scas
cmp
adc
jl
in
pop
xchg
ret
test
cmp
mov
in
in
into
mov
out
cmc
xchg
clc
adc
push
test
add
aad
and
scas
xor
in
cltd
dec
nop
sub
in
das
fidivrl
stos
es
cmp
inc
push
lods
out
sbb
or
cmp
sbb
lods
pop
dec
mov
mov
stos
or
fwait
icebp
mov
sub
imulb
xor
pusha
fwait
fs
and
lock
xlat
jmp
stos
rcrb
push
inc
ja
mov
pop
sahf
les
mov
sub
shl
movsb
in
stos
sub
dec
out
out
add
jns
inc
addl
lret
pop
stos
into
sbb
jecxz
nop
mov
xor
daa
loopne
dec
jle
and
push
stos
stos
movsl
pushl
add
and
add
adc
scas
imul
sub
insb
data16
pop
pop
push
mov
int3
and
mov
xchg
outsl
push
ja
sbb
xchg
jae
jmp
fwait
inc
jbe
stos
mov
ret
jns
repnz
pop
mov
pop
mov
adc
jp
filds
fcmovbe
fstl
jmp
ja
sarl
fwait
sub
push
stc
add
jnp
push
jmp
inc
shrl
xchg
addr16
mov
fistpl
leave
stos
idiv
xor
stos
sarb
sub
jns
imul
jp
push
adc
pop
lcall
mov
adc
push
leave
mov
mov
cmpsb
stos
and
inc
jmp
fwait
mov
mov
or
sub
push
mov
mov
cs
inc
jmp
and
pop
xchg
movsl
subb
pop
push
stos
push
jmp
sbb
adc
push
add
pop
in
stos
out
test
mov
cs
aam
fwait
int
mov
popa
jno
xchg
stc
mov
sahf
cmpsl
inc
jnp
in
cltd
imul
repnz
stos
mov
outsl
or
mov
jmp
dec
outsb
bnd
inc
inc
nop
dec
test
imul
cmpl
mov
repz
pop
repnz
xor
jge
shrb
mov
add
data16
or
cmp
stos
aas
push
sarb
out
rcll
popf
xor
lahf
push
lret
hlt
xchg
ffreep
cmpl
popf
popw
movl
lods
mov
stos
inc
mov
imul
jmp
xchg
inc
mov
insl
cld
out
adc
outsl
adc
outsl
add
push
push
xchg
repz
call
push
adc
stos
xor
fwait
add
dec
mov
js
lret
adc
or
jb
mov
repnz
pop
fists
stos
shlb
adc
dec
pop
push
stos
jmp
or
loopne
cmpl
sysexit
mulb
jp
outsl
popf
int
xlat
stos
adc
insl
push
jno
cmc
pop
pop
scas
add
mov
push
inc
sub
ficomps
push
ljmp
inc
jno
cltd
xlat
jo
jns
push
or
and
add
imul
mov
stos
loopne
xor
and
mov
mov
mov
push
stos
and
push
ss
fisubl
pop
sub
add
nop
and
stos
out
in
pop
push
popa
dec
out
jmp
gs
mov
jmp
adc
push
mov
xor
out
test
dec
fxch
shrl
sub
repnz
outsb
push
sub
add
mov
stos
jae
sti
adc
mov
inc
movsb
mov
xchg
stos
fbstp
lods
movsb
inc
sbb
icebp
jb
test
mov
in
ret
cs
push
mov
mov
or
int
push
xchg
push
test
mov
outsb
cmp
imul
loope
adc
stos
stos
icebp
mov
cmp
out
or
mov
and
add
mov
insl
pop
cmpsb
cmc
mov
sub
mov
push
xlat
jnp
fldenv
cmp
cmp
lods
andl
daa
in
movsl
mov
stos
add
xor
sbb
andb
lods
pop
daa
push
xchg
mov
dec
cmp
inc
imul
cmpl
in
push
popa
stos
dec
ds
repz
fsubr
inc
scas
lds
jo
mov
movsl
int3
popf
mov
pop
stos
xchg
ss
jo
scas
stos
sub
mov
rcll
in
push
stos
int3
add
jmp
push
stos
sbb
dec
popa
sti
stos
jmp
push
stos
movsb
daa
push
shl
push
and
jae
lods
subl
cmp
adc
mov
popf
mov
aas
lods
lret
imul
lock
dec
fs
or
imul
inc
push
jbe,pn
push
xor
insl
clc
cltd
aas
sbb
stos
js
addr16
stos
fsubrl
jp
stos
enter
lahf
or
clc
mov
mov
mov
push
xchg
xor
pop
out
lods
rdmsr
ds
push
lods
jp
mov
mov
and
xchg
pop
aaa
stos
inc
punpcklbw
stos
push
popa
les
nop
ljmp
mov
stos
push
daa
arpl
stos
ret
lea
cs
xchg
unpckhps
popa
or
loope
jns
cmp
repz
into
cmp
add
jmp
dec
lock
flds
mov
into
mov
stos
xor
add
push
ljmp
insb
mov
dec
push
stos
ret
test
leave
sub
and
xchg
int3
adc
call
add
cmpsl
mov
and
fisubrl
pop
add
jnp
das
mov
ja
call
adc
hlt
inc
push
ds
mov
inc
ljmp
mov
lret
addr16
adc
or
or
in
sbb
shrb
stos
mov
and
mov
in
repz
repnz
imul
cmpsl
jno
daa
subl
stos
cmp
adc
je
mov
lahf
shll
sbb
shrb
adc
dec
loop
xor
sti
xor
mov
fsubrl
lret
jle
popl
mov
test
cmp
xchg
and
mov
out
imul
cld
adc
subl
stos
call
pop
adc
dec
or
jne
dec
out
jns
js
inc
outsb
pop
dec
mov
scas
pop
xor
aaa
test
stos
xchg
sbb
push
inc
hlt
icebp
and
and
scas
stos
mov
fdivl
and
pop
inc
mov
mov
in
jnp
inc
stos
xchg
push
jl
sbb
int3
mov
adc
stos
inc
in
leave
dec
fildll
pop
push
stos
push
ret
mov
arpl
stos
nop
scas
push
stos
mov
jo
jl
pop
int3
stos
mov
lret
push
dec
xchg
stos
dec
stos
pop
mov
cltd
js
stos
adc
push
iret
jmp
mov
test
and
fdivrs
inc
movsb
stos
jbe
lcall
adc
mov
cmp
aam
mov
ds
out
sbb
pop
push
lea
outsl
add
fsubrs
addr16
dec
test
adc
xor
jge
and
scas
shr
ss
sub
popf
dec
xchg
hlt
stos
xor
fsubrl
lea
stos
in
mov
pop
inc
dec
stos
loope
arpl
iret
icebp
push
dec
stos
cmpsl
jmp
jno
dec
aaa
lret
stos
jmp
and
stos
jge
in
and
jp
xlat
lea
imul
lahf
cs
xchg
test
out
int
orl
loopne
mov
stos
sbb
cmp
xchg
stos
shrl
in
and
or
testl
push
sub
ljmp
leave
stos
cmp
enter
or
sub
mov
inc
push
shlb
dec
push
mov
dec
in
cmp
stos
jge
movsb
and
outsl
fldt
fstpl
aam
stos
aaa
or
push
testb
lods
and
jne
cld
or
stos
fucomi
add
xchg
pop
repz
stos
fwait
loopne
mov
stos
int3
mov
jne
addl
lods
mov
cwtl
jo
stos
jbe
stos
jl
imul
cmpsb
add
mov
pop
subl
and
fwait
mov
stos
inc
adc
xchg
cmp
xchg
test
xchg
xchg
shrb
and
aas
stos
das
mov
fnsave
fwait
push
fs
and
mov
lret
jecxz
jns
or
out
subl
mov
mov
leave
je
out
mov
loopne
cmp
lock
and
and
or
sbb
cmpsl
xor
sti
stos
mov
fs
in
push
daa
pop
stos
leave
out
jno
scas
pop
inc
push
xlat
dec
cmp
mov
or
sbb
nop
es
nop
jnp
xchg
shrb
movsb
mov
push
imul
ficomps
mov
or
dec
adc
loop
push
or
jne
push
cltd
aaa
inc
push
adc
push
adc
mov
sbb
pop
stos
xlat
xor
pop
cld
mov
stos
adc
lahf
pop
push
lods
sbb
stos
xor
or
jle
cld
sub
loop
mov
mov
push
movsl
xchg
push
fucomp
stos
das
mov
jnp
sub
mov
in
test
aaa
jl
je
addr16
fcoms
jns
stos
cmp
gs
imulb
movsb
stos
cmp
popa
inc
stos
stos
mov
jne
cli
push
xchg
ljmp
fadds
stos
test
pop
sarl
mov
mov
imul
std
mov
icebp
or
in
stos
out
or
xchg
sbb
enter
stos
cmpsb
popl
popa
or
cmpsl
cli
jmp
adc
and
les
incl
stos
sub
dec
mov
rcl
cli
stos
pop
aas
sbb
adc
pop
test
inc
inc
sub
stos
mov
in
pusha
or
jns
pop
jnp
push
sahf
push
jmp
mov
jecxz
cli
popa
fwait
in
gs
or
popf
mov
je
stos
sub
xchg
lock
inc
stos
mov
pusha
sbb
mov
fcoml
push
stos
xor
sbb
jge
xor
cmpsb
jecxz
cli
jmp
shr
mov
rcrb
notb
cmp
xchg
or
sbb
pop
ret
push
stos
mov
ret
cmpsb
stos
jae
loop
test
ret
sarb
jnp
xchg
cmp
stos
xchg
test
ret
dec
clc
mov
and
cmp
mov
mov
adc
int3
fildll
or
sub
adc
fisttpll
mov
lahf
int3
loope
pop
mov
add
shrl
nop
sarl
stos
mov
notl
stos
inc
adc
jno
mov
add
add
mov
cmp
or
jno
jmp
stos
inc
loopne
int
lcall
insl
jl
lret
mov
and
xor
fildll
pop
or
stc
jb
sbb
sub
sbb
movsb
jmp
jne
push
jb
insb
roll
xchg
xor
lock
ss
pop
es
adc
addr16
ja
insb
fwait
and
orb
or
dec
cmp
push
stos
or
imul
add
mov
jo
cmp
and
xchg
cmc
stos
fidivs
adc
call
daa
push
xchg
cltd
jmp
mov
push
sub
stos
mov
lret
cmp
xchg
loopne
gs
stos
mov
mov
bound
xchg
stos
js
push
pop
pop
addb
imul
or
stos
sbb
fistpl
iret
sbb
scas
stc
xchg
push
cwtl
pop
call
sub
mov
int3
mov
sbb
rcr
stos
call
dec
cld
lret
imul
xor
in
loopne
push
stos
adc
rorl
sbb
sub
cmc
or
stos
fcompl
adc
mov
xlat
addr16
push
stos
das
insl
xchg
sbb
push
and
cmp
popf
stos
pop
lret
and
iret
imul
fwait
cwtl
mov
stos
add
mov
adc
push
push
pop
mov
fwait
push
pop
xor
or
dec
mov
push
add
pop
pop
mov
into
pop
mov
stos
sbb
jl
mov
aas
jmp
adc
enter
push
dec
adc
ret
adc
adc
stc
inc
mov
mov
out
push
loop
movsb
test
and
mov
adc
adc
shr
dec
jns
jmp
dec
addb
add
pop
cmpsl
mov
loope
and
cmp
pop
les
scas
stos
sti
xchg
cmp
cmp
stos
es
inc
leave
sbb
mov
out
stos
ret
into
out
mov
jbe
stos
inc
push
aas
or
and
fildll
insb
test
loopne
and
xor
push
xchg
xchg
shll
ja
imul
scas
cmp
xchg
mov
popf
cmc
imul
fwait
or
dec
xchg
inc
lret
testb
cmpsl
out
or
sbb
xor
stos
test
push
mov
or
jecxz
and
pop
ja
lods
stos
add
ljmp
mov
cmpsl
mov
sarb
fs
mov
dec
lea
lods
or
scas
xchg
mov
and
mov
inc
arpl
lock
int
jnp
int3
dec
orb
pop
iret
icebp
mov
cltd
xor
inc
sarl
jmp
jmp
into
aad
pop
mov
xchg
ja
das
stos
stc
push
pop
jmp
cmpsb
sahf
mov
fcomps
add
sbb
ret
push
push
push
stos
xor
lods
pop
cld
mov
stos
jmp
stos
int
xlat
pavgw
adc
mov
hlt
fsubr
cwtl
mov
icebp
adc
or
and
xor
adc
jmp
icebp
add
insl
cmp
push
pop
rcr
xchg
push
stos
std
sbb
push
cli
sbb
dec
push
cmpsl
daa
mov
or
xorl
sbb
pop
push
push
jnp
adc
mov
int
test
pop
testl
stos
clc
ret
ficoml
pop
dec
fldt
inc
xchg
loope
pop
out
sbb
gs
mov
mov
cmc
and
test
xor
mov
jecxz
scas
dec
out
gs
int
sub
mov
movsl
stos
push
popa
mov
loop
xchg
cmp
hlt
jae
mov
mov
mov
icebp
push
jae
out
cwtl
stos
daa
and
and
and
imul
mov
xchg
aad
cmp
imul
ja
dec
addr16
or
inc
push
mov
imul
stos
pusha
jp
arpl
xchg
fsubrl
pop
call
iret
xchg
sbb
dec
lahf
stos
xchg
or
in
inc
inc
push
mov
imul
mov
xor
mov
test
dec
aam
push
test
sbb
xor
mov
cmp
mov
fs
xchg
jge
pop
jmp
mov
scas
or
inc
lea
ljmp
enter
inc
cmp
mov
jge
fdivrs
outsl
cmc
adc
stos
outsb
mov
sub
jmp
lret
jg
rcl
inc
mov
mov
jmp
ja
les
inc
in
out
loop
clc
inc
mov
pop
stos
or
fistl
scas
and
sub
imul
push
stos
scas
bound
lea
dec
imul
daa
pop
xchg
shl
mov
or
std
fsubs
stos
push
dec
mov
inc
pop
adc
or
pop
in
imul
scas
decw
stos
das
push
ret
and
fildl
arpl
jmp
fisubrs
jl
cld
aas
mov
stos
push
xchg
dec
aaa
dec
mov
daa
not
stos
cmpsl
ss
adc
stos
or
cmp
dec
sub
mov
adc
cld
gs
jnp
cmp
pusha
adc
pop
rep
call
stos
enter
push
roll
stos
lret
inc
and
daa
sahf
int3
pop
mov
cmp
sub
sti
mov
aas
fwait
mov
mov
and
cltd
out
cmc
dec
pushf
loope
loop
jo
std
or
mov
ss
jae
jnp
push
mov
mov
ljmp
movsb
cld
stos
dec
scas
add
lds
push
adc
mov
or
add
cmp
sti
imul
stos
lret
add
insl
xlat
adc
daa
xor
sub
pop
fnstsw
stos
dec
ds
jl
xor
aad
ret
pop
push
and
xor
in
inc
test
cmpsl
pop
xchg
dec
sbb
ret
sub
inc
cmp
fwait
and
bound
sub
femms
sahf
ds
mov
cwtl
es
jg
cmp
cmc
mov
add
mov
xchg
xor
sub
rcll
sub
fdivrs
inc
iret
adc
adc
imul
xchg
cltd
fs
push
mov
rep
sbb
pop
and
stos
es
xor
inc
adc
ret
pop
sbbb
mov
or
jo
push
or
push
fwait
xchg
out
daa
in
cmp
jle
stos
jmp
rcr
and
add
mov
fsubrl
mov
cmp
in
cmp
and
stos
or
sbb
pop
push
loopne
mov
adc
scas
inc
add
pop
movsl
lods
jnp
sti
pop
popf
xlat
xor
scas
stos
mov
xchg
dec
cwtl
adc
pop
jo
lret
xchg
popa
sub
push
push
and
shl
out
pop
pop
cltd
pop
outsl
stos
in
pusha
push
outsb
test
push
pop
movl
jp
imul
cmpsl
inc
lret
fidivrs
jne
mov
cld
jp
stos
call
sahf
push
stos
cmp
out
mov
in
xchg
stos
mov
sbb
or
stos
fstps
xor
dec
mov
adcl
jge
call
gs
xchg
mov
xchg
pop
adc
test
cmpsl
subl
stos
sub
push
sbb
es
stos
movsb
aas
mov
frstor
push
adc
jb
jae
mov
repnz
outsb
and
add
inc
call
stos
add
jno
stos
mov
enter
push
dec
stos
lods
mov
sarl
dec
mov
add
jge
mov
cmpsl
push
cmp
sbb
xchg
mov
stos
movsb
out
outsl
in
fisttpl
jmp
dec
jecxz
lock
in
call
cltd
mov
outsb
pop
in
pop
mov
ja
xor
test
test
adc
aaa
stos
xchg
jge
fs
fnstcw
stos
jnp
out
push
fcoml
add
mov
stos
mov
mov
pop
fsubl
jle
outsl
pop
stos
loopne
insb
sub
push
out
movsl
daa
mov
cmc
sub
mov
and
stos
mov
dec
jmp
mov
fstl
sbb
fbld
aas
stos
mov
xchg
jo
pushf
pop
shrl
outsl
mov
ljmp
push
test
or
mov
jmp
mov
mov
add
xor
rcrl
push
mov
mov
or
stos
or
arpl
pop
in
aam
mov
pop
jns
push
push
enter
adc
xlat
in
push
cmp
inc
fstps
lods
cmpsl
addr16
inc
rorl
jmp
push
mov
loope
inc
lret
mov
sub
outsb
stos
imul
jmp
stc
mov
and
mov
stos
int3
ret
and
stos
mov
mov
inc
add
outsb
and
test
sti
mov
jo
stos
mov
pop
mov
in
fsts
xor
das
sub
add
mov
dec
sub
add
scas
je
cmp
inc
enter
push
stos
jge
dec
decl
pop
mov
cmp
cmpl
cmpsl
fbld
scas
popf
lahf
xchg
pop
stos
stos
sub
stos
xchg
stc
pop
xor
int
jmp
sub
xchg
sbb
stos
test
ror
jg
iret
jmp
andl
dec
jbe
cltd
mov
inc
lahf
stos
push
gs
fstps
pusha
mov
push
imul
cmp
lds
xchg
jae
mov
in
imul
push
cld
and
mov
add
fcmovbe
fidivs
adc
pop
and
das
sub
shl
xchg
cmpsb
stos
mov
adc
jp
pop
sub
daa
push
xor
cmp
push
xchg
lds
add
cltd
out
push
arpl
fldl
dec
adc
stos
shlb
outsl
sub
stos
xchg
jnp
cmp
sub
stos
scas
mov
imul
jmp
or
mov
stos
stos
shl
movsb
push
adc
mov
push
stos
mov
sub
mov
stos
and
cmp
lahf
hlt
push
lahf
into
xor
pop
push
xchg
adc
pusha
xchg
lods
test
stos
hlt
pop
xchg
int3
pop
push
popf
or
sbb
mov
iret
adc
add
aaa
pop
mov
pop
push
adc
sub
leave
addr16
insl
push
jmp
mov
outsb
cwtl
pop
sar
lods
mov
cmpsb
insb
jns
mov
stos
mov
ja
mov
and
cmp
inc
inc
in
inc
mov
in
xchg
movsl
cld
add
stos
mov
stos
pop
xlat
mov
and
add
sbb
stos
and
xorb
pop
stos
movsb
psubsb
stos
enter
adc
movsl
inc
decb
mov
stos
cmpsl
fisttpl
jns
jo
sbb
pop
pop
add
stos
or
mov
punpckhwd
pop
test
stc
add
cmpsl
in
out
lods
lods
pushf
stos
mov
push
std
je
ljmp
out
pop
scas
shll
sbb
push
leave
stos
inc
cmp
xor
call
jmp
dec
fmull
and
stos
fwait
xlat
inc
xchg
shr
scas
mov
std
push
lea
or
pushf
arpl
push
lahf
stos
inc
sahf
test
int3
roll
stos
ret
mov
mov
shlb
push
sub
insb
in
dec
mov
pop
stos
inc
fsubl
xchg
mov
push
stos
aad
loop
or
inc
xor
xchg
ljmp
or
dec
stos
ret
dec
jg
xor
xchg
jmp
in
fisubrs
sti
idiv
or
mov
jl
and
or
int
gs
stos
mov
xorb
sub
test
sub
rcll
add
fbld
popf
jo
push
cs
mov
loopne
fcmovnb
repz
or
popf
scas
push
jns
sbb
adc
adc
mov
sub
lcall
int
or
cmpsl
das
and
test
out
hlt
lahf
stos
jmp
jno
jmp
mov
or
and
xchg
dec
xor
jl
popa
mov
incl
jp
jnp
sbb
loope
dec
lret
and
mov
pop
movsb
jno
adc
call
jl
stos
sahf
add
stos
sub
ja
aas
dec
hlt
test
jge
mov
sbb
or
xor
mov
mov
pop
sbb
bound
sub
xchg
or
adc
shrl
fildll
fs
arpl
test
stos
sub
mov
cmp
stos
pop
push
dec
mov
test
xor
xchg
movsb
lds
mov
push
xlat
cmc
xor
outsb
push
stos
mov
push
stos
inc
sti
fidivrl
or
pop
cmp
push
sbb
cmp
mov
xor
popa
scas
push
imul
jmp
movb
fdivrp
adcl
sub
rcll
ret
bound
stc
repz
jge
adc
mov
lret
cmpsl
hlt
push
stc
scas
arpl
cmp
aas
adc
jmp
insl
shrb
push
mov
ljmp
frndint
mov
cmp
stos
je
outsl
mov
inc
iret
sub
jl
or
push
imul
cmp
inc
inc
sahf
loop
int3
stc
stos
xchg
xor
movsb
sbb
dec
mov
sub
lea
xor
jns
imulb
and
int3
stos
push
mov
mov
sub
xchg
out
pop
mov
ja
sbb
xor
subl
xchg
js
popa
fdivrl
cld
jnp
pop
loop
nop
or
stos
nop
mov
neg
stos
pushf
mov
xchg
test
mov
mov
movsb
stc
in
fwait
pop
ret
mov
mov
push
mov
pop
pop
mov
stos
push
int
adc
in
inc
aad
aas
pop
test
inc
pop
testl
aam
fwait
mov
mov
jo
leave
cmp
ja
fsub
addr16
sbb
stos
xor
testb
adc
push
mov
push
sbb
scas
stos
rcrl
movsb
shlb
inc
sbb
es
lods
pop
stos
sub
stos
jo
fs
mov
stos
rclb
jge
fistl
jmp
and
loopne
out
xchg
lahf
jbe
add
cmpsl
call
cmp
ljmp
push
add
imul
push
std
bound
push
lret
stos
outsl
mov
cmp
fsubrl
fwait
adcl
mov
mov
xchg
mov
sub
lods
call
dec
mov
out
jae
jl
sbb
ret
test
stos
jg
mov
jp
inc
push
dec
stos
sbb
imul
cld
lret
xchg
xor
stos
sarl
push
push
jmp
jno
in
nop
loope
fcoml
cmpsb
jns
movsb
std
jmp
push
pop
out
mov
add
ret
dec
xchg
jnp
pause
add
aas
add
out
daa
popa
mov
and
or
fisubrl
xchg
and
dec
lock
scas
loope
sub
sub
je
cmp
les
sub
sar
cli
mov
stos
shrd
stos
loope
test
imulb
mov
insb
mov
scas
cli
push
rcll
rorb
push
xor
mov
dec
rclb
sub
aam
mov
fsubrl
into
add
mov
mul
pop
stos
sbb
mov
push
int3
dec
popf
stc
xorb
call
daa
pop
in
jmp
and
mov
add
stos
popf
jecxz
jno
test
lahf
stos
fmull
call
rolb
mov
stos
xchg
add
sub
xor
or
pop
jo
addr16
loope
sub
sbb
jmp
insl
stos
or
mov
daa
stos
xor
jne
cld
ret
movsb
int
in
mov
lahf
and
or
aaa
push
xchg
std
jnp
pop
pop
movsb
scas
in
leave
ss
pusha
stos
inc
cmp
cmp
mov
sahf
cltd
dec
adc
daa
scas
mov
push
push
mov
mulb
sti
fildll
je
push
dec
mov
lds
stos
xchg
out
dec
mov
xchg
sti
pop
stos
pop
mov
push
cmp
enter
sub
xorl
pop
fstps
adc
movsl
stos
inc
xor
in
shll
fwait
mov
xor
pop
int3
dec
cmc
daa
enter
mov
push
stos
mov
xor
and
int
stos
fimull
sub
stos
xlat
mov
xchg
popa
stos
mov
push
mov
mov
stos
and
test
xchg
mov
leave
aas
pop
std
stos
cmp
xor
popa
loope
test
sub
fisubrs
or
popa
test
xchg
mov
stos
mov
xor
dec
stos
xor
bound
adc
test
stc
or
scas
cmp
mov
and
xor
fwait
jbe
and
cmp
push
aam
mov
or
imul
mov
fcoms
cli
movq
lock
in
enter
mov
stos
shlb
call
mov
cmp
iret
push
mov
xchg
cmp
push
push
sbb
in
pop
imul
mov
xchg
cs
add
repnz
stos
jnp
aam
nop
jne
mov
cltd
xor
js
mov
fwait
jg
test
stos
addr16
sbb
jnp
into
mov
cmp
mov
fldcw
imul
test
incl
cmc
jo
stos
xchg
or
in
stos
int3
or
addr16
stos
pop
add
shlb
pop
cmp
in
cltd
sbb
arpl
mov
lock
mov
push
lods
jb
stos
cmp
and
pop
arpl
frstor
jmp
sbb
aad
fcoms
imul
xchg
ficoms
push
clc
mov
mov
mov
xchg
call
sahf
pushl
pushf
gs
scas
loop
push
xor
jnp
outsl
mov
and
sub
or
pop
jmp
push
cmp
aaa
push
aad
xchg
popf
into
loope
sub
cmpsb
fisttpl
lods
insl
mov
lock
repnz
stos
jle
addr16
pop
mov
lea
or
ja
pop
mov
cmp
in
xchg
xchg
sub
add
mov
xchg
sub
aas
scas
jmp
xchg
lret
sub
das
push
shrb
push
dec
test
clc
gs
aas
mov
xchg
push
cmp
inc
insb
lods
stos
jl
dec
lret
or
or
lds
push
sahf
shrl
pop
mov
stos
rcrl
bound
stos
inc
lret
push
ja
mov
and
mov
xchg
in
adc
mov
and
rcrb
stos
jl
enter
out
sub
xor
mov
pop
mov
sbbl
pop
jecxz
lret
stos
in
push
dec
cs
mov
mov
bound
mov
lahf
lds
pop
test
cmp
mov
lods
add
xlat
sub
fildl
cmc
mov
daa
stc
sub
jns
lods
inc
mov
stos
fisttps
lcall
sbb
cmp
cld
mov
cvtdq2ps
adc
lret
push
imul
adc
xor
repnz
stos
jne
mov
out
enter
cmpsb
mov
lcall
fs
pop
lods
jmp
cli
divl
movsl
arpl
sbb
aas
jp
inc
mov
mov
push
sbb
push
stos
jo
ja
subl
push
dec
dec
lea
dec
push
mov
fmull
lock
loope
packuswb
and
jmp
sub
sbb
and
aas
xchg
sub
stos
stos
cmc
mov
mov
or
stos
dec
insb
test
shl
les
add
mov
repnz
rorb
sbb
add
stos
jno
mov
imul
shll
out
and
jle
es
lea
repz
push
and
push
stos
loop
mov
hlt
mov
inc
gs
call
jmp
cmpl
out
xchg
or
pop
adc
leave
andb
and
lods
out
int
stos
mov
xchg
stos
mov
rolb
cld
movsl
bound
pushf
push
cmpsb
std
stos
sub
aas
shr
and
mov
xchg
adc
inc
cltd
sahf
sub
push
inc
call
scas
in
sub
stos
add
stos
jg
imul
leave
push
hlt
mov
stos
xchg
dec
rclb
ficompl
push
xchg
stos
popf
or
cwtl
daa
in
inc
repnz
mov
stos
adc
outsb
cmp
sahf
xchg
stos
and
std
or
shll
stos
pop
pusha
in
imul
inc
ds
dec
push
scas
or
xchg
mov
popa
and
mov
add
mov
arpl
imul
or
jbe
scas
inc
xchg
xor
sub
push
movsl
mov
or
add
push
jbe
jae
stos
lahf
inc
or
stos
push
push
imul
loope
push
pop
stos
mov
push
mov
mov
sub
jp
push
xor
and
cmp
push
xchg
or
and
mov
bt
stos
push
lret
aam
adcl
cli
jp
mov
push
ljmp
scas
adc
stos
xchg
dec
sbb
lcall
rclb
clc
mov
mov
mov
out
xchg
int
stos
dec
bnd
mov
inc
stos
js
jg
dec
sbb
loope
add
shlb
lds
hlt
fcmovnbe
add
xor
xchg
pop
stos
sbb
pop
stc
jb
stos
fsubp
lea
or
and
inc
fs
out
add
nop
fnstenv
stos
adc
pop
es
xor
inc
mov
stos
outsl
sbb
pop
lds
sarl
sbb
dec
scas
adc
imulb
das
or
dec
sub
adc
xor
and
cmp
iret
mov
mov
push
xchg
nop
stos
mov
mov
mov
pop
inc
bswap
jmp
popf
inc
jl
xchg
aam
int
stos
das
scas
popa
xchg
outsl
dec
out
sub
ljmp
fmull
push
or
jg
add
jmp
mov
xor
pop
add
push
pusha
adc
into
cltd
xchg
fimuls
mov
imul
lahf
jne
jae
stos
jmp
inc
push
xchg
call
push
push
or
dec
adc
adc
stos
bound
push
into
jg
sti
std
or
cld
pop
ds
adc
imul
mov
and
jnp
lahf
cmp
mov
lods
jne
or
sbb
and
cmp
fwait
lods
mov
xchg
xchg
cmp
add
loope
and
sub
outsl
decb
cmp
push
std
scas
mov
loope
inc
adc
imul
xlat
stc
sub
lods
xor
or
mov
stos
or
push
loopne
lods
fwait
adc
loope
push
cmp
psubsw
jle
arpl
out
pop
jbe
out
arpl
push
jb
fs
insl
mov
or
add
xor
mov
js
popa
ja
lret
mov
xor
pop
xchg
cmpsl
mov
sub
or
mov
sub
test
and
or
stos
enter
add
das
push
fsubl
stos
add
out
cld
cmp
daa
and
loop
dec
stos
cmpsb
cmp
rolb
sub
in
adc
xchg
daa
mov
scas
push
fsubr
sbb
clc
stc
cltd
bound
cmpsl
dec
xor
mov
mov
fbstp
cmp
adcl
add
lret
shrl
insb
stos
mov
dec
or
inc
test
cmp
daa
rolb
pop
subl
repnz
ret
mov
ret
jnp
push
cmp
out
xor
sbb
mov
mov
xchg
inc
mov
bound
pop
daa
les
pop
inc
sbbl
pcmpgtw
xlat
sti
js
adc
lds
jecxz
push
mov
inc
mov
or
mov
into
mov
sbb
dec
das
xor
out
xlat
inc
sti
or
movsl
orl
sub
mov
loopne
aad
dec
in
mov
mov
add
jle
stc
add
xchg
cmp
pop
cmp
stos
fistl
daa
stos
add
fildll
or
cld
stos
mov
loop
cs
int
add
stos
xchg
gs
ja
in
stos
cmpsl
out
rorl
fldl
cmp
imul
cmp
fldt
mov
loope
fs
in
jle
lahf
movsl
vmulps
jno
mov
stos
mov
push
mov
xchg
sub
push
leave
pop
cmp
mov
push
popf
fildll
lea
fsubrl
imul
mov
sbb
adcl
xchg
pop
test
or
fsubl
sbb
movsb
mov
pop
inc
sbb
xchg
xor
fisttpl
lea
sbb
dec
jno
mov
mov
and
and
test
testb
hlt
and
mov
aad
mov
xchg
xor
stos
sarl
pushf
dec
mov
cmp
xor
cmp
fsubrs
sbb
and
push
sub
fistps
jmp
adc
out
lods
xchg
das
pop
stos
cli
add
pop
inc
bound
or
sahf
adc
mov
ss
jle
mov
dec
push
push
stos
mov
mov
mov
out
mov
mov
pop
dec
aas
stos
sub
out
inc
adc
jne
nop
cmpsl
cli
testl
push
outsb
sahf
cld
stc
stos
xchg
pop
rcrl
cmp
ret
stos
imul
xchg
rcrl
scas
inc
jns
cmp
xchg
in
sti
xlat
sub
scas
xchg
daa
sbbb
sahf
mov
packsswb
into
stos
idivb
jecxz
push
stos
inc
mov
cwtl
add
mov
inc
lahf
fdiv
bound
add
add
shrl
mov
inc
pop
lods
pop
adc
stos
mov
loop
add
jne
or
pushf
js
popf
ret
xor
jno
inc
push
jnp
xchg
sbb
mov
aas
sbb
mov
out
add
fimuls
and
mov
ja
mov
shrl
pop
xchg
cwtl
sbb
scas
daa
test
cmp
push
jmp
inc
mov
inc
lods
fwait
out
inc
rol
and
mov
stos
shr
sahf
add
stos
daa
aaa
dec
shld
mov
lahf
mov
mov
insb
subl
inc
jae
in
outsb
test
push
stos
jbe
std
cmp
cmp
xchg
mov
lds
pop
arpl
bts
enter
imul
lahf
subl
scas
lret
pop
mov
lods
and
pusha
sbb
jmp
mov
inc
incl
or
cmp
or
jns
inc
mov
test
in
or
popa
imul
mov
pop
stos
or
xlat
adc
stos
ss
dec
mov
aad
lods
stos
hlt
xor
inc
shll
push
je
fwait
lret
ss
inc
lea
sub
push
loopne
div
mov
in
clc
repnz
movsb
stos
mov
jmp
mov
pop
mov
std
daa
jecxz
mov
xchg
js
jg
stos
int
aad
es
std
xchg
imul
and
pop
cs
sub
popa
sbb
sbb
inc
pop
dec
adc
imul
fisttpl
sub
stos
movsb
push
in
cwtl
lahf
jecxz
stos
push
pop
test
mov
dec
stos
dec
mov
lock
mov
xchg
push
repnz
push
sub
dec
cmp
cld
jge
lods
std
cmp
adc
hlt
aad
in
dec
xchg
dec
mov
in
popa
or
jnp
cmpsl
jno
cmpsl
shlb
imul
mov
in
mov
jge
pop
push
outsb
fsubrs
dec
shrb
fwait
dec
hlt
dec
je
sub
icebp
cmpsl
rcll
or
lcall
inc
push
insb
lods
shll
pop
push
inc
xchg
and
stos
add
mov
stos
inc
push
mov
cld
mov
adc
mov
cli
imulb
stos
nop
or
mov
repnz
xchg
stos
loope
out
arpl
sub
shlb
lahf
ja
dec
xchg
xchg
lret
add
fs
aas
inc
neg
sub
in
jae
and
aad
mov
scas
push
stos
cmp
inc
dec
insb
xchg
imul
imul
mov
divb
pusha
stos
outsl
sbb
pop
jns
or
jmp
or
push
and
in
mov
jl
xchg
jg
push
cmpsb
push
push
fcompl
inc
adc
das
sub
mov
pop
lds
add
xchg
cmp
mov
std
ret
adc
stos
add
sub
jo
loopne
stos
jmp
test
fsubrl
xchg
mov
adc
mov
xchg
mov
stos
and
cmpsb
xchg
xchg
cmp
lret
sbb
pusha
insb
addr16
js
pop
mov
mov
shrl
lock
jl
mov
roll
fwait
push
loop
dec
lds
fwait
sarl
add
stos
mov
fnstenv
fstl
aad
push
pop
scas
test
adc
arpl
adc
xor
adc
in
out
lret
nop
rcrb
or
and
adc
xchg
ret
dec
mov
cmp
sbb
shr
cltd
imul
and
out
stos
faddl
mov
cmp
stos
add
or
xorl
jne
inc
adc
loop
mov
push
add
sbb
daa
cld
orb
add
mov
mov
xor
jae
lahf
es
scas
test
mov
lret
adc
stos
sub
cmpsb
jne
stos
pop
rorl
sub
andl
inc
mov
mov
stc
jbe
cmp
mov
stos
cmpsl
mov
sub
fst
pop
daa
stos
aad
sub
fsubrl
mov
aas
cmpsl
push
stos
jns
adc
hlt
repnz
scas
stos
mov
imul
or
xor
mov
jae
cmpl
fwait
hlt
les
aas
imul
or
call
cmp
out
lret
push
pusha
in
add
lods
fldcw
imul
mov
jle
daa
lcall
mov
in
stc
test
push
jbe
jnp
mov
loopne
adc
addl
jnp
cmp
stos
push
sub
stos
sbb
add
adc
and
fucomp
call
stos
jo
gs
mov
iret
stos
stc
in
pop
mov
int
idivb
inc
mov
lea
sub
loopne
std
stos
mov
sti
add
xlat
push
aad
lea
stos
xchg
push
lea
stos
add
and
and
xchg
stos
scas
mov
cmp
stos
lret
in
xchg
loope
aaa
cmp
push
insb
and
inc
pop
int
fs
stos
loop
fsubs
stos
fstps
adc
inc
jmp
push
pop
rorl
pop
nop
jo
stos
xchg
adc
and
sbb
cmc
stos
adc
mov
lods
xchg
enter
imul
fdivrs
lahf
jg
lock
jecxz
imul
jge
stos
scas
mov
sahf
stos
aam
dec
lcall
mov
sub
push
add
sub
int
push
scas
xchg
insb
addr16
in
adcb
fisubl
jno
ret
jl
in
shll
dec
mov
das
arpl
push
fwait
sbb
bound
xor
shlb
inc
mov
hlt
jmp
in
push
scas
mov
test
arpl
pop
inc
cwtl
pop
stos
xchg
xlat
adc
in
jns
sti
xor
stos
leave
out
mov
dec
xchg
loop
iret
scas
cli
stos
outsb
jnp
aad
or
sbb
xor
fcomps
jne
push
rcll
stos
hlt
test
jbe
push
lret
pop
int
adcb
cld
ljmp
cmp
mov
rcll
mov
stc
and
xor
jno
inc
jb
and
mov
or
ljmp
jecxz
ret
stos
sahf
xchg
add
cmp
fldt
je
push
arpl
and
scas
in
aad
pop
lret
dec
insl
lea
lods
mov
push
cmp
jmp
push
jb
mov
jge
into
and
fiadds
fwait
enter
adc
mov
ss
stos
mov
mov
xor
gs
adc
jmp
lock
out
mov
gs
push
stos
sub
mov
mov
into
stos
cmp
add
sub
cmpb
test
stos
shlb
movsl
stos
stos
loop
icebp
leave
daa
sbb
data16
add
das
imul
fisubl
ss
sbb
pop
bound
lods
test
push
shrb
fldt
xchg
jmp
push
xor
movsb
xchg
inc
das
jmp
xchg
push
scas
ds
popf
cltd
addl
sbb
sti
movsl
lock
sahf
scas
shrl
fwait
std
mov
lcall
add
cmpb
cmp
xchg
mov
icebp
add
jmp
dec
ljmp
push
and
pop
and
dec
loope
cli
jne
aad
stos
xor
imul
frstor
stos
jmp
lock
imul
mov
stos
inc
test
fldenv
cmp
rol
add
or
xor
or
or
pop
sbb
adc
xchg
adc
jo
in
std
and
and
fmuls
arpl
stos
outsl
sbb
test
xlat
stos
outsb
addl
xor
mov
sahf
rcll
lods
dec
mov
mov
stos
sub
inc
push
lods
out
mov
inc
or
stos
push
test
nop
pop
adc
movsb
mov
fwait
dec
pop
fiadds
lret
adc
popf
stos
cwtl
lea
add
push
pusha
jb
nop
sub
mov
xchg
add
and
stos
lds
cs
icebp
pop
lea
add
lcall
adc
shrb
jns
lret
mov
imul
rorb
add
test
cvtps2pd
data16
adc
cmp
aam
pop
sahf
mov
pop
xchg
pop
pop
push
xor
mov
push
shrb
popf
in
lods
mov
rol
loope
add
xchg
ja
pop
jbe
mov
out
stos
cmpsb
mov
push
movsb
into
cmc
ljmp
leave
sbb
pop
arpl
and
mov
mov
cld
or
xchg
scas
stos
push
push
lahf
inc
enter
movsb
jo
fcomps
fcomi
nop
stos
cmpsl
dec
or
cmp
push
stos
enter
mov
push
or
dec
mov
int
stos
jo
or
rol
scas
stos
lea
sbb
jne
mov
aaa
sbb
stos
cld
mov
cmp
stos
testl
inc
or
and
stos
lods
movsb
frstor
mov
or
stos
clc
pushf
jmp
cmpsb
sub
mov
cmp
fstps
jl
int
ret
xchg
xchg
mov
stos
dec
nop
in
fisubrs
jge
arpl
mov
pusha
sti
std
pop
xchg
sub
xchg
mov
sub
jmp
fwait
sbbb
ja
decl
scas
mov
sbb
stos
aam
mov
dec
enter
in
dec
rcrl
jns
int
stos
xor
adc
stos
in
movsl
das
sub
pop
in
xorb
lcall
add
iret
mov
cmp
xchg
repnz
imul
cmpsl
pop
push
outsl
fs
dec
jo
testl
insb
mov
sbb
ja
stos
jmp
inc
dec
aaa
xor
stos
inc
adc
jbe
inc
pop
push
fsubr
xchg
subl
fsts
cmc
push
adc
negb
dec
mov
sub
rclb
sbb
cmp
stos
xor
movsl
jmp
sbb
outsl
cmp
divb
ret
jg
pop
popf
fs
xchg
cmp
ja
xor
stos
mov
and
push
aad
push
sub
ret
loope
jns
mov
ja
sub
cs
xor
daa
imulb
push
insb
push
ljmp
add
aaa
lods
sub
test
xor
popf
lock
lods
in
sbb
fidivrs
stos
cmp
shr
sti
cmp
imul
in
xchg
push
dec
incb
in
fldenv
dec
cwtl
mov
jae
stos
repnz
and
jp
aaa
pusha
cmp
into
iret
gs
dec
das
cmpsb
stos
aam
out
je
and
enter
pop
mov
fisubrl
stos
inc
adc
mov
add
data16
mov
xchg
imul
mov
cwtl
mov
std
push
pop
push
mov
stos
in
aam
inc
out
cwtl
sub
das
fdecstp
shlb
cmpsb
pop
cli
mov
daa
lret
mov
and
jae
outsl
imul
add
pop
repz
sub
test
std
stos
popa
xchg
mov
mov
adc
lea
xor
or
stos
xor
dec
sub
push
ffreep
stos
and
sbb
lock
fsubrs
rcrl
or
lea
xor
push
push
cmp
test
dec
es
jmp
insl
xlat
aam
jge
push
bound
leave
lds
cmpsl
addr16
stos
mov
and
clc
mov
loop
shrl
add
sbb
cltd
loope
rcr
jl
cmp
imull
je
mov
xchg
iret
mov
pop
and
loope
stos
fstpl
mov
pop
jg
adc
dec
xor
sti
lahf
shrl
and
std
dec
and
sub
adc
inc
xor
jno
outsb
jg
repnz
inc
xlat
xchg
lret
sub
or
stos
pushf
gs
mov
pop
das
jmp
pop
rclb
std
daa
xor
push
out
push
stos
stc
int3
scas
xor
popf
mov
sub
js
cltd
xor
ljmp
and
dec
fiaddl
push
arpl
push
jmp
lods
push
mov
xchg
loop
imul
pop
mov
ja
sbb
sub
mov
js
mov
or
xchg
cwtl
jo
inc
adc
lret
push
sub
sbb
inc
inc
cltd
mov
das
push
push
out
push
mov
inc
in
adc
add
clc
pop
push
sub
adc
mov
sub
mov
imul
leave
and
mov
int3
cwtl
stos
ret
xchg
int3
adc
xchg
fldenv
xchg
push
aaa
lods
xchg
mov
push
and
xchg
dec
or
dec
stos
arpl
scas
loopne
ret
je
fwait
jne
or
push
loope
inc
call
fwait
arpl
sbb
ss
xor
jp
cmp
dec
mov
in
stos
hlt
inc
or
push
daa
mov
aas
sbb
stos
repz
stos
clc
aad
or
insl
stos
push
push
xor
stos
lds
femms
adc
mov
xor
stos
ficoms
loope
inc
push
int
stos
jbe
xor
imul
jbe
mov
fld
bound
sbb
jae
ja
popa
add
jmp
push
jg
scas
or
stos
sahf
scas
shl
adc
mov
jecxz
sbb
sarl
inc
xor
mov
cmp
fsubrs
xchg
and
jns
mov
jl
pop
cmpsl
fldenv
xchg
in
add
cmp
mov
and
or
mov
pop
orl
push
loope
jle
stos
mov
and
out
mov
add
imul
mov
mov
dec
jmp
adc
xchg
fwait
loop
xchg
jae
or
mov
jecxz
test
sub
mov
lock
gs
sbb
sbb
sbbb
lods
icebp
pop
pop
sub
sub
mov
jecxz
out
jns
pop
xlat
pop
add
js
stos
push
xchg
mov
mov
and
xlat
jae
fwait
subl
cli
mov
xchg
inc
shlb
push
stos
cmp
ret
in
cld
sbb
cmpl
cwtl
xchg
arpl
lds
cmp
push
pop
movsb
mov
xor
or
push
enter
js
add
or
stos
mov
and
jno
imul
push
xchg
out
mov
mov
and
xor
mov
stos
daa
dec
movsb
xor
std
xchg
push
dec
mov
stos
sbb
jg
and
xlat
adc
xchg
push
loop
stos
xchg
inc
ja
hlt
add
loope
push
cwtl
pop
mov
jl
xor
push
inc
mov
test
out
call
xor
adc
dec
in
repnz
sti
xor
ss
mov
and
sub
mov
push
xor
pushf
subb
in
push
subb
test
aam
xchg
lcall
xlat
das
mov
xor
jmp
sbb
or
pop
popf
stos
jge
mov
stos
repnz
jne
dec
cmp
gs
bts
in
mov
fistpll
sbb
and
mov
aas
out
enter
xchg
cmp
lret
imul
mov
stos
pusha
sub
test
mov
aaa
stos
pop
test
aas
inc
insl
pop
stos
push
add
mov
subl
jnp
std
lret
loopne
jno
add
stos
jecxz
testb
mov
insb
jae
push
inc
ja
adc
jbe
sti
and
xchg
add
mov
sub
insl
push
movsl
push
les
ds
push
and
movsb
dec
insb
std
mov
sub
mov
and
shrl
jg
insb
jno
fabs
stos
scas
cli
fs
movsl
mov
xchg
mov
stos
bnd
testl
jle
lahf
xor
lods
adc
ret
popf
inc
stos
add
test
enter
cmc
daa
and
mov
in
mov
xchg
fbstp
test
or
jnp
add
stos
sub
or
iret
sti
mov
stos
and
mov
clc
stos
jno
pop
fstpl
mov
rorl
mov
and
dec
scas
fcoml
dec
and
insb
outsl
pop
cmc
mov
stos
cltd
fdivrl
sahf
mov
mov
in
in
cmp
push
ljmp
pop
jge
scas
xchg
and
sub
stos
outsl
jae
arpl
add
stos
xor
imul
inc
in
test
dec
into
stos
adc
push
inc
jge
inc
pop
cmp
dec
dec
sub
push
stos
adc
jno
mov
int3
clc
stos
sti
jne
jb
xor
sub
mov
mov
mov
std
in
adc
stos
mull
jg
popl
mov
pop
fidivl
jnp
xor
push
aam
fwait
daa
mov
jmp
xor
lods
hlt
inc
mov
fwait
stos
popf
adc
sarb
pusha
stos
inc
or
and
sub
aad
insb
sbb
add
sahf
xor
jae
stos
inc
mov
rcl
jnp
lods
mov
stos
mov
imul
xchg
and
inc
sbb
sbb
pushf
push
sbb
inc
lods
or
int
rcrb
ds
jo
je
es
jecxz
ljmp
xchg
jle
xchg
mov
int3
outsl
ljmp
jne
push
mov
mov
jp
inc
add
stos
sub
bound
fwait
add
mov
sbb
out
in
mov
popa
dec
pop
dec
fstps
or
in
insb
ret
inc
cmp
adc
sub
dec
lods
out
fucomi
dec
push
imul
mov
push
punpcklwd
scas
aam
mov
push
xor
xchg
jp
pop
adc
add
jmp
fstps
sbb
ljmp
andb
mov
out
mov
sub
daa
mov
jp
push
push
lahf
repz
mov
pop
lods
mov
cld
pop
and
inc
rcl
clc
stos
lods
les
sbb
inc
or
jns
and
loope
add
ja
pop
lahf
stos
lock
jmp
jge
jo
sbb
stos
xchg
lcall
test
xchg
push
aas
jmp
bound
pusha
xchg
mov
dec
jnp
mov
xlat
dec
cs
sbb
inc
repz
push
xchg
ret
sub
mov
jnp
or
enter
cmp
es
dec
shrb
jns
pop
sbbl
pop
popf
ja
push
xor
cli
dec
push
leave
lcall
pop
outsb
pop
stos
cwtl
imul
xchg
nop
pusha
cmpsb
hlt
sbb
mov
outsl
xchg
aam
push
push
pop
cmp
xor
dec
dec
fwait
testb
add
mov
stos
out
call
push
xchg
fwait
ja
add
push
xor
leave
dec
into
and
mov
add
leave
jno
xacquire
adc
stos
in
sub
aad
mov
rorb
stos
icebp
daa
xchg
push
lcall
dec
std
scas
pop
cwtl
fwait
int3
sbb
stos
pushf
mov
test
mov
dec
andb
arpl
out
adc
sahf
adc
stos
and
or
nop
pop
lods
je
stos
lret
sub
jp
jg
rorl
stos
and
aas
push
xchg
mulb
mov
insl
mov
jns
pop
xor
adc
jnp
imul
sub
stos
pop
repz
jp
gs
jmp
stos
stos
push
scas
icebp
or
dec
pop
and
sahf
sub
push
imulb
inc
dec
mov
mov
jmp
xchg
or
inc
test
pop
fs
inc
in
mov
jmp
xor
jo
mov
dec
xchg
dec
idiv
mov
stos
rcr
aas
out
sbb
pop
out
ljmp
sub
into
mov
ljmp
adc
imul
movsb
mov
adc
fmulp
and
lcall
pop
in
stos
dec
in
cs
stos
adc
push
sub
stc
pop
mov
adc
in
or
leave
fcom
xchg
addr16
gs
addr16
lret
and
stos
cmpb
cmp
sub
test
scas
outsb
lods
stos
stc
lds
ja
jae
stos
popf
leave
xor
dec
cmpsl
stos
sbb
call
inc
stos
mov
mov
out
jmp
movsb
sbb
mov
jnp
vsubps
arpl
pop
sub
iret
xchg
outsl
out
xorb
cmp
stos
data16
mov
stos
jg
push
lret
xchg
mov
nop
lods
test
call
sub
pop
stos
repnz
aam
sbb
loopne
mov
cmc
leave
push
aaa
cmp
or
lahf
cwtl
sarb
mov
imull
and
mov
aas
out
ss
pushl
dec
jnp
mov
adc
xchg
mov
mov
pop
push
ja
fwait
lret
andb
xchg
jae
cli
stos
clc
sbb
lret
frstor
int3
fcomps
stos
mov
sbb
xchg
jecxz
sbb
jb
stos
push
mov
dec
in
ja
inc
aam
sahf
test
xchg
and
enter
xor
xor
outsb
mov
adc
xchg
mov
inc
dec
out
mov
mov
sti
cwtl
jge
pop
stos
mov
or
and
mov
cmp
pop
mov
in
call
jg
xor
aam
pop
cmp
push
int
es
cmpb
jnp
cmp
inc
out
ljmp
stos
mov
push
sahf
addb
pop
rcl
mov
fcompl
or
mov
decb
pop
push
sbb
lods
mov
cs
dec
mov
cmpsl
bts
out
in
addr16
ret
push
mov
inc
push
push
or
cmpl
std
jno
stos
xor
jmp
jb
adcl
notb
sub
pop
stos
in
or
inc
les
adc
and
and
leave
push
adc
es
and
arpl
pop
insl
jge
out
daa
ja
mov
mov
mov
inc
xor
lock
popf
push
xchg
cwtl
sub
xchg
mov
iret
cmpsb
clc
xchg
push
stos
hlt
enter
adc
outsb
and
nop
jp
out
mov
xchg
stos
lret
adc
mov
icebp
cli
cmp
not
movsb
scas
je
stos
mov
movsl
xchg
int
data16
adc
push
fnstsw
lcall
sti
inc
sbb
loope
fs
xchg
fidivs
lods
scas
scas
stos
out
cld
in
enter
stos
push
clc
add
add
fdivrp
stos
and
aam
notb
stos
adc
mov
mov
lret
lods
in
pop
fiadds
sbb
pop
mov
mov
shlb
stos
dec
adc
pop
movsb
jmp
stos
jge
dec
in
lods
jae
add
in
stos
sub
sahf
pop
mov
mov
jg
push
dec
shlb
aad
mov
lcall
stos
out
xor
in
cmp
repnz
stos
jge
ret
sub
cmp
cmpsb
stos
lret
mov
stos
je
jp
xor
and
aas
add
clc
mov
mov
sbb
sub
stos
int3
movsl
ficoms
add
cmpsl
stos
mov
rorl
mov
aaa
pop
mov
jne
fsubrl
push
aad
stos
push
ret
sub
stos
mov
pop
stos
test
fwait
int3
add
mov
shrl
and
imul
mov
shll
pop
stos
out
cs
and
movsl
xchg
into
cmpsl
pop
popa
fsubrs
imul
pusha
out
mov
inc
cltd
or
cmp
imul
stos
fisubl
xor
stos
xlat
in
jecxz
leave
dec
lods
pop
mov
mov
inc
rcl
cli
jg
movsl
push
mov
adc
outsl
inc
lods
stos
sub
lods
lret
loop
xor
leave
sbb
add
jmp
int3
out
into
mov
lods
lds
adc
test
scas
jne
stos
shlb
in
pop
or
mov
xor
lods
sub
repz
push
stos
xchg
mov
push
movsb
cmp
jmp
xor
and
or
imul
stos
mov
ljmp
or
arpl
xor
cmp
clc
xor
mov
cs
das
dec
fs
stos
cli
adc
cmp
addr16
add
push
shrl
and
popf
or
fs
movsl
xchg
lcall
cmp
rorb
sub
add
mov
dec
sub
add
cmp
ja
cmp
cmp
xchg
cmp
hlt
add
pop
add
jmp
jecxz
cmpsb
jno
mov
lahf
dec
or
cmp
lock
popa
stos
mov
jae
test
test
dec
pop
fimull
dec
clc
bts
mov
scas
add
aad
jae
imul
xlat
pusha
std
sbb
stos
nop
out
iret
bound
hlt
je
sub
jne
mulb
sbb
push
mov
pop
xchg
aad
enter
andb
cli
jns
pop
stos
push
mov
mov
call
push
icebp
jmp
jle
push
scas
xchg
outsl
mov
sub
lods
jg
rcll
in
movl
ja
ljmp
stos
repz
popf
loope
inc
push
xor
inc
int
mov
push
xchg
sub
inc
and
rcrb
sub
cmp
call
stos
lret
repnz
cmc
jp
out
jns
sub
mov
xchg
xchg
stos
mov
les
lods
jecxz
into
xchg
xchg
xchg
mov
pop
lret
inc
aaa
push
fcmovnb
iret
sbb
mov
hlt
cmp
jnp
xchg
test
cmpsb
pop
call
imul
stos
in
addr16
cmp
pop
stos
test
sub
sbb
pop
imul
sbb
insb
lret
jmp
lret
add
icebp
shr
mov
xchg
adc
ljmp
push
in
xor
sub
dec
add
push
scas
xchg
stos
xchg
int
std
and
aas
in
xor
inc
jmp
cld
push
dec
xor
jb
outsl
mov
repnz
addr16
dec
cmp
pop
fidivrs
clc
inc
adc
stos
mov
adc
push
jp
pop
cmp
lods
mov
mov
cli
jl
shll
jae
cmp
sub
xchg
aam
pop
je
push
mov
outsb
add
mov
stos
dec
sbb
cld
lea
stos
dec
sbb
sbb
sub
and
stos
xlat
loope
mov
stos
shr
pop
push
cmp
mov
cmp
push
cltd
push
pop
pop
int
popf
xorl
push
pushf
xlat
stos
imul
inc
and
int
outsl
lcall
imul
pop
stos
faddl
iret
dec
mov
addl
mov
push
stos
adc
test
push
cwtl
mov
pop
cmp
stos
cmp
enter
pushf
push
imul
dec
lret
int3
lods
add
xchg
adc
sub
fildll
test
mov
xchg
int
testb
scas
jmp
pop
pop
aad
les
inc
inc
jle
push
mov
sub
leave
adc
stos
push
add
loopne
popa
shl
cs
pop
loope
getsec
mov
xor
aas
stos
call
adc
out
mov
inc
mov
sub
mov
lret
xor
mov
dec
stos
sub
xchg
adcl
mov
stos
test
outsb
jp
std
les
loope
xor
in
xchg
xchg
fstl
enter
xor
mov
jg
in
pop
add
icebp
imul
aas
mov
push
sbbl
fwait
add
stos
inc
xchg
and
mov
adc
lods
ds
aad
cmp
stos
or
imul
add
nop
cmp
xchg
or
stos
jnp
sarb
imul
xchg
scas
mov
sbb
mov
punpckhdq
stos
cmpsb
mulb
nop
loop
xchg
popf
stos
inc
sub
inc
jmp
fidivrl
rorl
push
mov
cmpl
xchg
xor
jmp
inc
adc
xchg
sub
int
stos
jae
rol
xchg
sub
mov
xchg
cmp
jne
stos
gs
cmp
aas
scas
mov
jmp
push
dec
xchg
jl
ret
xor
stos
into
xchg
rorb
stos
scas
lcall
sub
loop
inc
mov
mov
mov
inc
sbb
stos
xlat
gs
mov
add
pop
mov
and
stos
mov
popa
and
out
mov
jne
dec
mov
enter
sbbl
movsb
out
stos
inc
aam
fimull
xor
subl
push
dec
in
sbb
pop
stos
dec
mov
movsb
shrl
jl
mov
mov
and
rclb
lods
int3
stos
in
cmp
rcl
fdivl
sbb
arpl
add
cs
sbb
mov
xchg
push
pop
out
add
out
fistpll
jle
mov
adc
inc
mov
fcom
push
popf
jno
mov
fwait
sbbb
add
and
mov
mov
pop
add
mov
sub
rcrl
sub
inc
popa
shrb
or
lods
mov
arpl
ret
xchg
std
mov
gs
icebp
daa
fisttpll
push
outsb
xor
decl
imul
je
int
stos
rclb
cmp
movl
pushf
nop
jmp
jl
push
aad
mov
ljmp
jmp
xchg
out
jnp
jmp
jbe
sub
adc
xchg
popa
fs
mov
and
dec
stos
push
aad
in
cwtl
mov
arpl
sbb
dec
jp
arpl
sbb
sbb
and
mov
fwait
stos
mov
lahf
jnp
jecxz
stc
stos
mov
in
mov
das
push
xor
scas
inc
icebp
mov
pop
inc
fiaddl
gs
and
popa
subb
pop
inc
xor
xchg
dec
adc
loope
xchg
push
outsb
call
add
rorl
xchg
and
cld
mov
out
jl
int3
mov
dec
in
daa
aad
subb
pop
clc
push
and
loop
adc
daa
xchg
pop
mov
mov
test
addr16
insb
jmp
aam
adc
popf
int3
rorl
into
addl
sub
insl
movsb
stc
mov
fwait
sbb
or
dec
push
mov
mov
jnp
stos
jge
repz
pop
stos
add
mov
add
js
jmp
mov
dec
xchg
lcall
inc
add
inc
stos
pop
repz
push
xor
jbe
mov
sahf
popa
xchg
orb
and
dec
mov
loopne
sub
mov
pushf
scas
fldcw
push
xchg
jns
repnz
and
or
push
cmc
dec
stos
in
mov
out
mov
mov
xchg
lods
or
xchg
rorl
addr16
mov
shrl
stos
test
test
fwait
mov
jl
lods
mov
xor
pop
or
es
fwait
dec
sbb
jmp
add
divb
add
xchg
stos
push
dec
pop
push
xchg
xor
jecxz
xchg
daa
push
xchg
pop
mov
jl
int3
sahf
shrl
jne
jns
rep
push
cwtl
ficompl
mov
int
xchg
inc
and
stc
xor
cmp
mov
xchg
cmp
add
into
pop
hlt
xor
jp
stos
sub
leave
and
push
mov
push
stc
jmp
mov
and
shr
stos
cli
and
inc
mov
daa
push
mov
sub
mov
cmp
out
dec
cmp
fucomi
je
sbb
dec
hlt
fwait
or
std
adc
arpl
pop
ret
xchg
sbb
bound
je
xchg
out
stos
scas
push
aad
mov
adc
jmp
rolb
jecxz
nop
loope
push
lods
pop
sub
jnp
js
xor
push
cld
fwait
dec
adc
sbb
mov
cli
dec
mov
push
lea
fadd
stos
mov
sub
stos
or
mov
es
sbb
jmp
stos
or
jno
mov
ja
push
jge
sbb
xchg
mov
imul
fwait
js
pushf
xchg
mov
jmp
xor
cs
clc
stos
xchg
aam
loope
and
add
int
iret
lahf
cmp
push
stos
rolb
sbb
pop
jmp
stos
adc
shrb
ret
adc
push
scas
aam
push
jmp
ficomps
jmp
mov
scas
cwtl
ret
stos
push
lods
into
or
and
imul
std
int
jo
out
jns
xchg
or
stos
and
sti
mov
inc
xlat
test
add
jbe
xchg
stos
dec
or
and
xor
mov
loope
scas
stos
jnp
lock
mov
pop
leave
stos
xor
adc
inc
in
rorb
stos
jb
ret
mov
add
mov
xchg
or
stos
xor
sub
outsb
stos
adc
jnp
sbb
stos
mov
inc
out
stos
pusha
bound
push
dec
out
stos
xchg
sbb
sbb
dec
jle
pop
sbb
pusha
xchg
js
stos
roll
xor
insb
sbb
add
aas
ss
stos
cmp
cmpsb
lret
nop
dec
and
popl
movsb
daa
jmp
ret
cmc
arpl
mov
adc
aaa
shl
xlat
ret
icebp
imul
cwtl
test
movsl
loop
stos
mov
cltd
inc
ret
js
ret
mov
jnp
stos
lret
push
daa
sbb
stos
mov
adc
dec
sbb
push
jmp
mull
jl
push
xor
cs
scas
nop
xchg
xchg
lock
push
mov
je
lds
add
adc
shll
push
repnz
push
hlt
test
xlat
push
mov
ljmp
inc
loope
pop
cmp
pop
cld
stc
mov
lcall
in
push
lret
push
jg
fistpl
xchg
mov
mov
test
imul
stos
cmp
jmp
mov
push
mov
hlt
test
popa
xchg
psubb
adc
adc
or
cmpb
test
xchg
jmp
lock
inc
rcl
inc
xchg
mov
sub
stos
jae
test
stos
stos
les
gs
es
and
fwait
mov
fnsave
stc
dec
sti
xchg
adc
scas
imull
xchg
mov
adc
push
stos
jnp
repz
lcall
mov
mov
pushf
into
jo
pop
sbb
stos
push
test
adc
mov
mov
jle
inc
and
das
xchg
adc
call
notb
cmp
jmp
fimull
pop
setb
les
sahf
int
stos
and
lret
leave
pop
push
imull
xchg
push
push
lahf
or
rorb
cmpsl
mov
jmp
pop
jle
dec
mov
stos
leave
mov
mov
flds
adc
inc
mov
and
lret
addb
mov
mov
jmp
push
xchg
add
lahf
into
sbb
lcall
inc
and
push
ljmp
adc
lea
stos
ljmp
lds
xor
xchg
xor
lea
and
mov
xorb
jns
fwait
pop
pop
cmpsl
shrb
lret
push
loope
adc
xchg
and
rcl
push
inc
aas
loop
fstl
cli
sub
lods
cmp
adc
stos
dec
lahf
adc
jle
sub
inc
xor
testb
or
addr16
xor
sub
ljmp
js
stos
cmpsl
int3
fimull
and
inc
stos
lret
sbb
dec
and
daa
fdivrl
push
aaa
insb
xchg
inc
pushf
stos
sbb
mov
xchg
cld
dec
mov
push
push
push
sbb
pop
dec
mov
jge
mov
xchg
andb
aaa
push
leave
push
out
dec
data16
xchg
js
shrb
pushf
adc
stos
insl
xor
cltd
sbb
xchg
loop
cmp
stos
push
mov
adcl
xchg
imul
scas
pop
xchg
xchg
xchg
push
stos
mov
into
test
int
imul
dec
out
mov
call
inc
dec
loop
jecxz
adc
sbb
lret
es
movsb
xlat
stos
in
inc
sbb
mov
stos
ss
pop
mov
data16
add
out
push
call
lret
mov
inc
and
mov
or
lods
push
stos
or
xor
out
stos
mov
rcrl
mov
mov
popa
stos
nop
xchg
push
fcomps
xchg
push
stos
cs
jmp
outsb
stos
and
push
sbb
arpl
loop
outsl
mov
stos
and
pusha
sbb
stos
movsl
sbb
add
std
push
aad
jo
dec
xor
inc
aam
push
lret
pop
jg
lods
lods
jns
aaa
stos
and
inc
mov
cmpsb
dec
lret
in
add
adc
jns
mov
xorl
sbb
sbb
fs
outsl
hlt
arpl
inc
mov
in
stos
lahf
aas
inc
clc
cmc
or
shrb
test
sub
stos
scas
call
xor
push
daa
stos
pushf
or
jb
xor
pop
mov
mov
and
pop
stos
inc
test
testl
and
shl
add
testl
imul
stos
loope
cmpsl
lock
dec
xor
push
mov
test
and
sbb
insl
cld
in
pop
lods
mov
jle
or
cmpsb
stos
imul
dec
dec
std
addr16
and
mov
xor
mov
aaa
jge
inc
cmp
and
and
cltd
cli
imul
ljmp
aam
and
fdivs
cmp
push
jae
decl
xor
stos
ljmp
ret
mov
push
sub
xor
dec
cmp
dec
cmp
xchg
stos
out
add
xchg
cmpsl
adc
movsb
dec
js
fwait
and
popa
or
int3
inc
stos
loopne
push
and
lea
mov
xchg
movsl
stos
fdivrp
xchg
sub
insl
les
stos
push
push
pop
arpl
push
push
xor
dec
pop
scas
shl
stc
lahf
stos
cmp
inc
jge
movsb
ljmp
mov
sti
mov
dec
dec
sbb
stos
push
cmp
mulb
pop
jl
das
cmpsb
stos
dec
cmp
cli
jmp
xchg
stos
repz
dec
mov
push
mov
mov
and
ret
xor
call
fistpll
push
ljmp
xchg
sarl
sbb
mov
shlb
add
mov
imul
adc
sub
mov
sti
lds
cmovo
cmpsb
pusha
stos
sarl
xchg
jle
add
sub
rcll
mov
fwait
pop
lea
imul
stos
dec
adc
and
push
loopne
cmp
inc
xchg
mov
fwait
pop
xor
hlt
subb
test
mov
aaa
jnp
out
stos
ret
jo
jne
scas
adc
daa
sbb
pop
cmc
addl
negl
leave
jl
mov
in
nop
out
sbb
sub
lods
mov
sahf
popf
lods
xchg
mov
cmp
movsl
movsb
mov
stc
inc
repnz
ljmp
add
icebp
stos
jmp
adc
dec
mov
push
ljmp
pop
out
in
shlb
sub
gs
pop
fildll
cs
int3
ret
push
inc
or
fldcw
add
add
pop
stos
push
fdivrs
into
xchg
or
or
jne
mov
xchg
punpckhdq
push
outsb
addr16
adc
adc
jne
es
mov
movsb
lret
scas
cmpsl
or
push
inc
cmp
aad
fwait
hlt
daa
pop
stos
adc
cmpsb
or
mov
add
popf
aaa
xchg
cmp
adc
sbb
dec
lcall
mov
repz
in
out
mov
sub
stos
push
xchg
mov
out
push
pop
into
enter
pushf
add
cs
inc
mov
stos
fistpll
cwtl
bts
cmpl
inc
inc
sub
stos
or
out
xchg
sbb
lock
push
clc
lcall
stos
pop
aaa
mov
insl
add
btc
repnz
mov
cmp
mov
je
movsb
sub
fistl
or
jmp
cmp
cltd
stos
divl
xchg
andl
lahf
cwtl
ja
imul
push
xchg
stos
jle
pop
push
adc
stos
jae
cmp
push
push
enter
add
nop
mov
leave
shl
daa
cli
and
cltd
mov
pop
push
in
movsl
pop
or
inc
out
stos
sbb
xor
cld
popf
inc
scas
or
inc
and
jle
sub
lds
mov
jp
arpl
adc
js
cmp
push
fwait
xchg
call
test
shl
inc
pop
and
scas
mov
clc
xor
cli
out
int3
arpl
mov
dec
jmp
mov
pusha
sub
or
scas
sbb
jns
dec
daa
cmpsl
jmp
rorb
cwtl
hlt
loop
adc
data16
in
lods
fwait
ds
daa
rol
push
mov
and
push
ret
push
stos
test
pop
xchg
imul
fs
jge
jne
push
xor
je
push
hlt
sti
mov
dec
xor
pop
insb
dec
pop
jmp
stos
jecxz
mov
adc
stos
add
push
xor
dec
stos
ja
imul
stos
lret
push
loop
mov
lock
arpl
dec
dec
std
shl
dec
mov
stos
xor
enter
push
fstpl
dec
pop
jmp
and
adc
adc
adcl
stos
mov
jg
or
aam
jmp
mov
mov
sub
lods
cmp
cmp
outsl
lret
movsl
fstpl
mov
dec
jle
mov
daa
stos
mov
orl
lods
out
cwtl
xlat
add
daa
enter
stos
add
mov
movsb
mov
sub
fsubrl
shll
cmp
mov
inc
sbb
test
lcall
lods
push
xlat
stos
cld
ljmp
stos
cmpsl
inc
cli
pop
mov
jnp
fisubs
filds
jne
jge
inc
and
inc
cmp
sarl
stos
ret
push
into
unpckhps
outsb
icebp
stos
fisubs
add
or
and
pop
mov
clc
lcall
xchg
hlt
insl
jbe
stos
mov
stos
sahf
xor
pop
int
je
jl
mov
lds
xchg
repnz
pop
xchg
jge
jns
test
mov
jae
jl
jmp
add
jno
pop
mulps
addr16
scas
fdivl
cwtl
cld
or
jmp
pop
stos
shr
out
shll
sub
mov
cmp
dec
push
pop
mov
mov
pop
stos
sbb
int
or
sbb
stos
mov
push
mov
pop
ret
adcl
jmp
stos
xchg
test
in
scas
xchg
sub
fcompl
stos
rclb
inc
add
stos
lcall
xchg
stos
ss
clc
fnstcw
add
xchg
rcll
stos
js
shll
stos
sbb
inc
cwtl
mov
and
lahf
push
inc
and
inc
adc
mov
and
cmp
cmc
jmp
dec
es
cwtl
js
and
adc
iret
xchg
inc
bound
dec
imul
pop
or
mov
lea
decl
nop
sub
sti
dec
and
arpl
ds
cld
cmp
jle
add
pcmpgtb
test
stos
int
into
iret
cmp
sub
sarb
mov
loop
inc
jge
stos
pusha
push
inc
mov
xlat
sarb
test
push
mov
test
push
rclb
cvtpi2ps
pushf
scas
and
fwait
stos
adc
scas
test
pop
jno
stos
cmc
aam
mov
int3
insl
lods
jle
jmp
pop
sbb
cs
ficompl
or
add
mov
cmp
xor
cmp
xor
cmp
insb
add
loope
adc
or
les
mov
enter
jmp
xor
out
adc
stos
out
test
daa
popf
cmp
xlat
sub
sub
mov
arpl
mov
cmpsl
push
ljmp
outsb
push
movl
popa
out
inc
stos
jne
push
mov
xchg
in
in
stos
cmp
mov
popf
dec
addl
pusha
dec
stos
das
pop
popa
lods
pop
xor
sub
iret
jle
mov
daa
jnp
stos
cmp
push
sahf
icebp
xor
mov
cmp
shll
push
dec
popa
mov
xchg
cltd
jns
stos
or
mov
cmpsb
xchg
push
mov
mov
enter
xchg
push
sahf
test
mov
cmpsl
pop
dec
stos
jno
xlat
jg
stos
mov
push
mov
imul
stos
mov
push
sub
mov
popa
daa
movsb
stos
mov
push
stos
pop
es
sbb
and
pop
enter
fwait
sbb
arpl
movsl
aad
mov
ljmp
or
sbb
push
and
mov
sbb
loope
daa
daa
fildll
cwtl
mov
mov
sarb
and
and
sub
stos
aas
xor
jne
mov
pop
sub
testl
lods
cmpsw
stos
roll
xor
test
lret
xchg
mov
idivl
enter
pop
fisubrs
push
xor
sbb
ss
movsb
dec
xorb
xor
mov
shlb
loopne
lods
inc
mov
imul
mov
stos
pop
xchg
jg
xchg
fwait
mov
mov
push
xchg
xlat
dec
nop
aaa
decb
mov
sti
sbb
sbb
andl
inc
sahf
add
xor
sub
test
pop
ret
mov
scas
ret
jno
dec
adc
es
pop
jmp
jbe
add
mov
sub
stos
pop
xchg
gs
jo
mov
insl
xchg
jb
stos
pop
adc
es
pop
insb
dec
sub
dec
inc
aas
in
push
imul
mov
stos
outsb
bound
jmp
lahf
sbb
lret
xchg
aam
mov
pop
les
jl
jecxz
rcrl
sbb
mov
mov
jo
and
ss
mov
push
loope
or
xor
mov
mov
or
dec
push
rclb
mov
sahf
mov
sbb
cmpsl
scas
pushf
cmp
fisttpl
repnz
stos
in
xor
and
jo
call
lcall
jbe
pop
lods
mov
imul
stos
outsb
testb
pop
pop
xchg
shrl
pop
in
imul
dec
mov
arpl
add
mov
cmp
add
ja
sbb
push
cwtl
stos
jnp
adc
lcall
scas
pop
nop
shrl
cmpsb
cmc
xor
movsl
push
adc
sub
gs
jmp
mov
dec
lods
sub
mov
mov
pop
inc
push
arpl
mov
push
or
inc
dec
mov
aam
stos
xorb
stos
imul
rclb
roll
stos
jge
pop
cld
jns
mov
push
stos
xor
adc
enter
das
jge
xor
sahf
xor
stos
js
xorl
jmp
aad
cmc
push
bound
loope
stos
sub
lret
cli
push
mov
pop
test
roll
imul
idiv
or
push
xlat
fcmove
dec
mov
sbb
aaa
add
aam
stos
inc
in
idivl
out
mov
lods
mov
add
inc
jmp
adc
sbb
stos
out
cmp
ds
add
mov
xor
xchg
cmp
outsl
out
les
mov
rcrb
push
sbb
stos
test
ds
rolw
adc
cmp
cs
stos
decl
cmc
lcall
test
jns
lods
push
imulb
xchg
pushl
pop
mov
xchg
repnz
pusha
cld
rcrl
and
mov
push
cmp
std
push
ljmp
jge
fistpl
or
push
xchg
cmp
fisubrl
lods
push
imul
scas
fnsave
adc
test
test
and
or
xor
andb
or
loopne
and
ret
push
lods
and
inc
imul
outsb
lds
scas
out
or
mov
jl
ret
popf
xchg
aas
jp
jg
lds
stos
test
packsswb
pop
sub
mov
cmp
fstpt
inc
es
es
lcall
or
addr16
out
mov
imul
lret
stos
jecxz
popa
scas
aaa
daa
jmp
sub
pop
and
jo
loop
ret
cmp
stos
xor
jp
cmp
test
outsb
sahf
sub
sub
ljmp
ds
cli
fcomps
adc
adc
inc
push
fs
sahf
sub
jo
mov
xor
adc
sti
enter
sub
cmp
add
outsl
inc
add
daa
jmp
lds
rep
xchg
xchg
lcall
pusha
fwait
xchg
rcll
xchg
stos
insl
and
jnp
enter
imul
mov
mov
and
mov
and
push
movsb
sbb
orb
fsubl
pop
stos
ret
imul
inc
test
test
stc
leave
in
fldt
subb
xchg
mov
xchg
push
pop
aad
pop
daa
dec
mov
xor
xor
mov
inc
call
mov
push
xchg
adc
mov
jp
out
imul
rcll
cld
test
pop
stos
aad
xor
jmp
lret
adc
lret
frstor
dec
mov
jae
and
fldt
adc
insl
das
mov
arpl
enter
or
lods
js
loope
push
adc
mov
stos
aam
cltd
jo
cmp
stos
jbe
decl
stos
push
sub
ja
inc
fs
push
add
addb
mov
adc
cmp
and
xchg
nop
push
fisubl
fst
movsl
sub
and
js
lock
mov
inc
repz
push
pop
ss
xchg
pop
mov
xor
cmp
dec
rclb
lds
stos
xchg
add
sub
push
push
int
lret
sbb
inc
add
subl
pop
fldenv
addr16
loopne
fwait
pop
fidivs
or
jnp
ds
mov
rclb
jg
arpl
or
movsb
int3
inc
inc
push
mov
xchg
mov
inc
ss
push
pushf
lcall
fcoml
stos
addr16
loope
fbstp
and
xchg
cmpsl
xchg
jns
stos
mov
jecxz
mov
pop
lea
cmc
xor
stos
fwait
inc
sub
pop
push
data16
fs
stos
push
jnp
roll
lock
or
stos
ljmp
movsb
fnstcw
enter
imul
or
mov
insb
add
dec
adc
stos
pop
sub
dec
inc
xor
mov
sbb
in
jae
inc
nop
jmp
inc
cmc
add
xor
add
xchg
mov
popf
pop
daa
jecxz
icebp
mov
sub
xchg
stos
imul
jge
flds
inc
stos
test
lds
stos
mov
cli
add
cwtl
and
bts
leave
xchg
int
mov
sbb
shrb
push
aam
stos
ret
jb
and
jmp
mov
mov
ss
addr16
lock
mov
sbb
iret
js
push
negb
movsl
fildl
push
jg
cmp
roll
fwait
rcr
pop
mov
xchg
icebp
stos
add
jp
xor
add
in
sbb
repnz
enter
movsl
cld
stos
in
ds
push
jle
jno
lds
data16
stos
jo
dec
rolb
lock
mov
popa
clc
pop
pop
xchg
rorl
and
cltd
shrl
or
lcall
fisubs
int
pop
fwait
fwait
inc
les
jo
into
movb
stos
and
fs
push
mov
ret
inc
cmp
mov
nop
scas
test
test
push
inc
mov
leave
mov
btr
add
aam
adc
lods
rorb
dec
stos
repnz
xchg
sub
stos
push
xchg
mov
pusha
pop
sti
pop
das
imul
dec
or
and
mov
sub
out
inc
pusha
mov
and
xchg
nop
xchg
stos
mov
loopne
mov
aad
or
sbb
pop
dec
clc
pop
push
xchg
rcrl
mov
pusha
and
loop
repz
addr16
cs
sbb
lcall
inc
aas
bound
jge
jno
test
movb
test
outsl
push
push
div
ret
or
fwait
stos
movsb
add
data16
xlat
mov
push
stos
push
iret
int
xor
add
lcall
enter
stos
cwtl
push
pop
aas
jo
sub
mov
stos
cwtl
faddp
repnz
push
stos
roll
sahf
xchg
or
shrl
and
dec
xchg
ffree
mov
ds
mov
and
push
add
addr16
fsts
mov
jecxz
and
jae
test
xchg
mov
imul
sub
stos
rorb
xor
orb
jbe
mov
xor
nop
out
push
stos
fdivs
shl
lahf
cmc
stos
in
xlat
xchg
pushf
or
add
and
mov
ret
in
ljmp
fs
jp
sub
jbe
stos
testb
or
jmp
fbld
cs
stos
add
or
stos
add
fscale
jecxz
sbb
clc
mov
cmpsl
jbe
loop
fsts
jns
dec
push
ds
mov
mov
fld1
inc
jmp
mov
xchg
xchg
add
clc
jl
stos
pop
aas
xchg
mov
lret
jg
sub
cmp
sub
ret
loop
push
leave
or
stos
shr
or
in
cmp
push
mov
mov
inc
stos
add
fdivl
rorb
push
mov
lock
stos
and
orb
addr16
xor
mov
jbe
add
xchg
stos
push
fs
subb
cmc
dec
jg
and
rcrb
mov
shll
stos
int
xchg
in
stos
lret
pop
clc
or
xor
stos
and
push
jae
loop
stos
sub
jnp
in
mov
clc
ret
xlat
neg
xchg
lods
jmp
out
sar
lret
pusha
stos
gs
loopne
and
stos
pop
push
sbb
stc
mov
jge
adc
sbb
icebp
mov
pop
xlat
xorb
ret
jb
and
dec
stos
sbb
xor
or
aam
push
scas
movsw
mov
stos
int3
lahf
xor
int3
mov
push
xor
mov
movsl
es
push
and
insl
in
cltd
insb
sbb
jl
cmpsb
pop
repz
fwait
insl
stos
js
adc
ret
das
and
adc
ds
push
pop
lret
fstpt
mov
stos
rolb
pusha
data16
std
iret
sbb
rcll
and
sbbl
sub
stos
xor
mov
movsb
stos
out
addr16
xchg
mov
xchg
push
pop
mov
cmp
cmpsl
mov
lahf
aam
mov
fildll
cld
push
int3
enter
dec
cwtl
dec
out
loope
mov
adc
jb
mov
mov
inc
push
mov
jns
repz
sub
mov
daa
orb
fwait
jb
xchg
add
loopne
xchg
and
mov
inc
cmp
add
push
push
int
xor
lcall
in
stos
mov
movsb
dec
hlt
loope
xchg
imul
xor
push
adc
jmp
sub
cwtl
sbb
dec
mov
mov
jno
stos
into
or
push
cmc
imul
scas
pop
mov
in
push
sbb
jecxz
mov
aaa
xlat
adc
stos
sub
add
sub
aam
test
leave
push
dec
adc
or
insl
xchg
mov
sbb
mov
push
stc
mov
les
ret
das
sub
arpl
aas
imul
ret
jg
aaa
or
jmp
push
mov
xor
mov
adc
cmp
stos
jp
popa
arpl
inc
xchg
stos
mov
cmpsb
xor
stos
push
fwait
iret
aas
sbbb
mov
ficomps
mov
out
or
sub
jmp
lahf
and
pop
and
scas
pop
lret
mov
add
jge
or
or
jb
stos
add
pushf
ljmp
addr16
and
mov
xorl
gs
or
leave
push
xor
jo
stos
dec
push
mov
jp
sub
jl
scas
adc
imul
mov
aam
andb
xlat
dec
xchg
fildll
je
sub
jecxz
fwait
push
jne
push
jo
js
jae
adc
stos
aaa
mov
int3
push
and
daa
push
add
ret
dec
pop
xlat
out
dec
inc
mov
hlt
xchg
ss
and
push
ficoms
mov
xor
movsl
popf
xor
jb
insl
into
jg
inc
sbb
int3
lods
stos
mov
rorl
leave
and
ficoml
push
jmp
mov
daa
jmp
add
fwait
imul
aad
stos
loope
mov
mov
add
mov
xchg
subl
jle
int3
stos
xchg
add
stos
sbb
ja
cmpsb
int
stos
adc
fldpi
xchg
pop
addr16
lret
inc
rclb
scas
mov
sub
fmull
xchg
stos
pop
add
jae
subb
stos
test
xchg
rclb
xor
xchg
leave
stos
push
jo
sub
mov
fisubrs
inc
stos
int3
test
jle
adc
int
roll
stos
dec
pop
test
ljmp
lret
push
pushf
xchg
stos
push
loop
clc
test
push
dec
daa
cmp
and
call
cmp
orb
cmp
jmp
and
mov
or
xchg
sar
sbb
cmp
fisubrl
mov
clc
call
jns
mov
mov
fwait
hlt
push
ljmp
push
stos
push
push
in
mov
xor
xor
jmp
filds
rorl
pop
arpl
mov
fwait
vmaxps
inc
mov
lods
pop
cltd
jns
pop
pushaw
xor
pop
push
sub
sbb
rorb
mov
dec
pop
out
add
or
lock
mov
sub
pop
dec
push
cmp
cld
inc
stos
sti
std
je
arpl
fs
adc
dec
adc
inc
mov
fwait
xchg
and
mov
jl
push
pop
xchg
arpl
stos
push
popf
sbb
stos
mov
andnps
mov
adc
outsl
stos
inc
pushf
inc
test
stos
test
sbb
repz
stos
add
lahf
add
loop
inc
stos
scas
and
std
lock
test
mull
les
xor
stos
imul
movsl
and
jecxz
shrl
xchg
movsb
cld
mov
popa
sti
mov
mov
fisttpl
fcoms
in
outsb
inc
sbb
enter
adc
lock
stos
cmpsl
push
fildll
and
xlat
in
ja
stc
fldt
sbb
mov
idivb
cmp
ja
push
cmp
push
mov
repz
cmpsb
lahf
mov
cmp
shrb
adc
stos
inc
or
stos
inc
adc
fiaddl
inc
sbb
mov
outsb
xor
bnd
bound
jmp
adc
dec
push
mov
ss
stos
sbb
pop
in
imul
push
adc
fwait
sti
xor
stos
jb
push
and
push
and
dec
stos
addr16
pop
nop
adcb
mov
dec
stos
fmull
xor
imul
in
xchg
sbb
mov
stos
push
ljmp
mov
jecxz
and
int
std
call
xchg
mov
or
jo
cmp
das
stos
mov
daa
subl
add
or
stos
cs
sbb
in
je
sub
mov
dec
lret
lods
sub
push
push
ljmp
in
pop
je
xchg
mov
pusha
stos
push
scas
dec
sub
dec
pop
in
fidivs
xchg
shlb
sti
aaa
add
xchg
xor
mov
scas
mov
push
imul
xchg
lods
push
add
jge
mull
rcr
fadds
pop
std
or
das
xor
fs
lret
addr16
rcrb
dec
das
push
push
mov
pop
imul
lret
stos
xchg
xchg
cmpsb
in
in
rcll
xchg
sbb
stos
fnstenv
fwait
mov
inc
inc
stos
sti
ret
push
mov
and
sbb
mov
cmp
ficompl
in
out
mov
outsb
out
sub
mov
or
dec
call
push
xor
stos
lret
loop
adc
pop
rclb
inc
out
pop
sub
mov
sub
lods
jnp
sti
cmp
xor
pop
push
arpl
stos
cs
adc
test
cli
out
scas
mov
in
mov
aam
pop
das
xchg
lock
jmp
ficoml
outsl
pop
popf
scas
mov
stos
ds
dec
add
nop
mov
fisubs
stos
enter
jae
cmp
push
clc
sbb
push
fistl
xchg
into
cltd
js
mov
mov
repnz
shrl
push
lret
mov
ror
mov
stos
jmp
sbb
and
lock
push
dec
push
rorl
hlt
pop
xchg
mov
sub
lea
inc
mov
mov
stos
test
mov
and
orl
push
shrb
mov
sub
arpl
add
stos
popa
sbb
mov
or
imul
in
sbbl
cmpsb
int3
rcll
inc
stos
sbb
loop
subb
imul
fs
sub
xchg
stos
pop
clc
pop
je
push
xlat
stos
sahf
aad
orb
stos
sub
mov
push
xchg
dec
out
iret
jne
sti
mov
xchg
adc
or
xor
pusha
jns
cmc
lahf
push
sbb
stos
and
inc
ss
pop
mov
push
test
das
shrl
imul
jp
sarb
imul
loope
ret
popa
adc
cwtl
jo
xchg
mov
stos
rclb
pop
and
and
fidivrs
or
fnsave
inc
int3
stos
cltd
in
adc
xchg
pop
sub
jecxz
jne
xchg
xchg
je
mov
push
sbb
lret
into
mov
bound
jl
add
cltd
scas
mov
pop
cmpsl
fwait
xor
mov
inc
pop
notl
icebp
mov
or
loop
cltd
or
stos
xor
xchg
mov
fmull
jl
lret
and
insl
stos
cmpsl
inc
push
std
popf
fisubrl
shlb
stos
pop
dec
dec
stos
shrd
stos
fs
movsb
repnz
push
mov
mov
mov
stos
add
pushl
stos
sbb
dec
mov
push
pop
fmulp
xchg
lea
mov
shl
xchg
jns
fldt
dec
dec
dec
adc
mov
stos
lret
adc
stos
jns
inc
movsl
out
push
xchg
xchg
scas
mov
xor
stos
mov
getsec
push
push
lahf
scas
stos
jg
sub
inc
mov
adc
daa
test
push
stos
testl
push
aad
jns
add
lea
pushf
add
adc
push
lods
mov
addr16
cmp
stos
inc
out
mov
scas
daa
lea
mov
iret
popf
push
test
sarb
push
cld
test
mov
xchg
xor
jge
push
enter
mov
stc
adc
stos
dec
add
mov
daa
dec
sub
sbb
inc
push
loop
and
stos
or
xchg
push
pushf
out
std
sub
clc
popa
les
mov
pusha
stos
ds
jp
mov
adcl
sbb
popf
stos
movhps
adc
shrl
adc
cltd
stos
xor
mov
lds
and
xlat
cmc
pusha
divl
stos
jmp
les
jmp
movsl
inc
pop
stos
in
rclb
hlt
inc
sahf
js
xchg
cmp
mov
sbb
enter
add
in
outsb
stc
jae
push
jge
xchg
je
xchg
fbld
les
and
mov
xchg
mov
push
out
pop
xchg
aaa
jnp
out
lea
mov
inc
stos
stc
cmpxchg
stos
mov
jo
arpl
stc
xor
fmull
add
loope
sub
stos
mov
imul
push
es
stos
pushf
jae
lods
add
enter
adc
daa
pop
sti
jmp
add
jb
flds
fisubrl
shlb
out
mov
pop
add
stos
push
sahf
jno
rcrb
cmp
popl
cltd
imul
rcl
fcmovbe
lcall
dec
enter
push
jle
movsb
fs
mov
xor
cs
sub
inc
ret
xorb
imul
test
ja
fwait
pop
outsl
imul
stos
test
mov
iret
stos
pop
inc
in
mov
stos
mov
push
loop
stos
arpl
stos
pusha
call
movsl
outsb
push
cmp
and
stos
cmpsl
adc
jnp
daa
push
ss
dec
xchg
cwtl
fwait
mov
mov
mov
inc
pop
fmuls
stos
sub
adcb
aam
jmp
sub
dec
xchg
dec
cmp
cmp
pop
arpl
mov
bts
mov
fs
cmp
xchg
dec
inc
mov
ljmp
mov
xor
scas
mov
ja
mov
sbb
stos
sub
sub
dec
mov
lods
jo
push
int3
movsb
lods
xchg
pusha
fwait
jge
lea
jl
aaa
sahf
push
cmpsb
rclb
pop
shrl
mov
push
stos
adc
es
insb
xorb
js
or
stos
xchg
pop
mov
out
lods
lcall
jb
mov
add
cmpsb
sbb
rcrb
stos
cmc
lods
sub
stos
mov
repnz
outsb
loop
pop
lock
pop
cmp
popf
push
mov
stos
jg
lods
jmp
cmp
sar
sub
mov
arpl
push
mov
test
stos
mov
mov
jl
jmp
mov
mov
xchg
imul
jne
dec
or
and
jmp
mov
or
notl
xchg
adc
cmp
dec
cmp
popf
push
mov
adc
lods
jne
xor
stos
dec
call
mov
mov
and
cltd
mov
scas
dec
pop
nop
sub
mov
cmp
aad
sub
xor
sub
stos
sub
mov
rclb
jl
and
lea
mov
cli
ljmp
dec
inc
push
and
dec
sub
cmp
jno
fwait
xchg
mov
adc
outsl
mov
das
mov
es
es
stos
out
data16
mov
push
outsb
dec
adc
popa
lret
mov
out
xchg
sub
ds
ljmp
fwait
mov
sub
jecxz
xchg
cmp
mov
xor
cltd
loop
popf
mov
gs
stos
and
xchg
popa
test
dec
nop
lods
faddp
daa
mov
pop
push
mov
in
push
lods
sbb
test
jle
add
dec
stos
pop
in
ret
das
mov
jno
cmp
outsl
stos
faddl
hlt
aam
in
sbb
fs
mov
pushf
lret
xchg
stos
dec
push
add
stos
movsb
out
mov
stos
push
into
int3
cld
jecxz
xchg
outsb
lods
inc
stos
dec
fwait
push
or
lcall
cli
gs
aad
push
imul
sub
aas
ss
inc
in
jae
mov
fnstcw
push
pop
iret
lahf
cltd
es
arpl
mov
push
aam
in
stos
enter
jne
fnstcw
out
adc
mov
stos
pushf
and
mov
pop
call
add
std
iret
push
fnstenv
stc
test
and
mov
dec
xchg
push
sbb
xchg
xor
stc
add
mov
shrb
imul
sbb
sarb
cmpsl
mov
stos
in
stos
es
fists
push
inc
lcall
pop
cltd
ljmp
movsl
das
ss
js
mov
popa
pop
lret
sahf
imul
sub
stos
or
adc
lret
jmp
push
adcl
mov
push
inc
push
jnp
mov
sahf
fisubrs
jge
stos
gs
dec
imulb
daa
mov
and
stos
jg
fisubl
add
jo
sbb
pop
dec
and
cmp
orl
lcall
ret
sub
movsl
cmc
add
int3
adc
xchg
mov
adc
and
das
stos
stos
jecxz
lret
insb
shl
mov
lock
es
stos
mov
jo
cmpsb
stos
adc
inc
in
xchg
stos
pop
xchg
dec
les
add
stos
lret
and
imul
dec
sub
cmp
jmp
add
push
cmp
adc
out
jp
imul
jmp
aad
xor
inc
push
andl
adc
lods
into
dec
lods
clc
shrl
pop
lds
cmp
mov
fsqrt
mov
stos
stos
clc
ret
xchg
lods
jmp
mov
scas
mov
into
stos
adc
cmp
or
out
dec
stos
jo
push
ficoms
orb
cli
in
movsb
stos
dec
pop
jb
cwtl
mov
stos
cmc
pop
cmp
stos
adc
sub
popa
imul
push
sbb
stos
push
jg,pn
aad
jmp
mov
cmp
jne
xlat
in
pop
xchg
sub
xor
or
and
in
mov
adc
or
adc
insl
inc
into
in
fs
push
inc
and
mov
jecxz
xor
mov
cmc
dec
cmpsl
mov
mov
inc
sbb
jae
loop
sbb
repz
pop
jle
nop
lret
dec
stos
mov
rcl
jl
sbb
cmp
adc
sub
jnp
in
sub
cmp
je
xor
lret
dec
and
add
stos
mov
xor
ljmp
xor
push
jo
movsb
in
fbstp
jl
loopne
mov
jmp
push
stos
sbb
pop
stos
add
subps
adc
stos
xor
int
movb
cmp
or
jno
adc
cwtl
shrl
and
jle
dec
scas
enter
sub
fwait
mov
sub
xor
and
mov
fisttps
sub
sub
ficomps
out
ret
jo
pop
xchg
cmp
into
push
lcall
dec
sub
mov
dec
xor
push
imul
fistps
in
call
das
in
adc
jae
rcrl
iret
and
adc
fildll
ja
addb
iret
adc
xlat
stc
jecxz
xor
leave
dec
push
sub
jle
stos
mov
pop
cwtl
pushf
jo
jl
aaa
int
loopne
inc
daa
xchg
stos
adc
mov
mov
xchg
pop
mov
pop
xchg
push
jnp
shrb
inc
push
or
cltd
mov
les
dec
mov
fildl
cli
mov
out
jo
popf
nop
imul
imul
into
mov
rclb
xchg
pusha
sub
scas
leave
sub
call
scas
mov
inc
stos
cmp
add
pusha
stos
push
lods
jae
stos
pop
push
inc
fwait
inc
mov
shr
sbb
sahf
nop
fisubl
adc
aaa
pushf
mov
nop
mov
pop
cmp
or
sub
stos
insb
icebp
dec
sahf
es
stos
nop
mov
int3
je
call
mov
cmc
outsb
movsb
add
cmp
xchg
stos
lds
mov
dec
pop
fstpt
xor
in
push
imul
add
aaa
and
xorb
ficompl
mov
or
mov
xchg
push
fst
stos
ljmp
dec
les
pop
stos
stc
push
aam
xor
cmpsb
call
leave
dec
iret
paddusb
out
jp
push
adc
mov
xor
scas
orb
sbb
arpl
dec
popf
adc
stos
adc
sub
and
push
shrb
cmp
pop
jle
mov
pop
stos
add
aam
jns
out
lahf
clc
stos
cmp
push
out
mov
call
pop
inc
xchg
ja
daa
mov
xchg
or
mov
push
push
outsl
loopne
aad
cwtl
nop
mov
cmp
dec
popa
lret
pop
loop
aam
test
lahf
xor
mov
pushf
outsw
loopw
adc
jg
mov
inc
mov
xlat
fwait
lods
aam
jnp
sbb
mov
shlb
lds
mov
out
jle
xor
xchg
aam
mov
mov
pop
push
mov
leave
stos
sub
or
movsb
mov
xor
outsb
rep
pop
sub
adc
daa
xchg
sbb
sar
stos
lods
cmp
stos
xor
mov
and
pop
stos
das
insb
push
adc
mov
pop
and
subb
bnd
negb
into
jmp
mov
stos
aaa
cs
es
stos
arpl
cli
mov
xor
xchg
js
stos
stc
dec
add
ds
xchg
sti
inc
xchg
mov
adc
sbb
aas
stos
loop
push
stos
jp
ljmp
sbb
out
stos
inc
notl
xchg
stos
pop
popa
das
data16
scas
outsb
mov
scas
test
mov
movl
push
stos
mov
stos
or
pushl
mov
pushf
imul
and
fwait
in
nop
or
stos
fisubs
daa
into
movsl
add
iret
sub
jno
out
xor
sbb
loopew
jnp
push
cmp
jle
call
stos
cltd
hlt
inc
fsubrl
or
mov
push
inc
mov
ljmp
xor
in
stos
ja
pop
lock
adc
iret
addr16
in
pop
shrl
jmp
addr16
dec
out
mov
sub
or
scas
push
push
adc
stos
aad
jo
push
loop
jecxz
xchg
xchg
sbb
ljmp
fimuls
adc
pop
cmc
lcall
jbe
int3
cmp
andl
fisubs
push
push
add
popa
xor
enter
inc
shl
pop
les
jmp
push
imul
ret
sbb
jb
cmp
mov
sbb
call
xor
mov
out
out
sub
stos
dec
out
rclb
mov
sub
aas
sub
mov
fdivs
pusha
stos
lcall
inc
imul
sbb
cmp
ja
stos
mov
aad
stos
in
lcall
mov
test
loope
xchg
out
mov
cmpsb
or
jb
fs
jnp
in
mov
pusha
cmpb
xor
push
add
jmp
mov
mov
test
sbb
push
stc
sub
mov
stos
test
dec
insb
subl
js
cmp
int3
mov
stos
ja
or
or
sbb
push
sub
mov
pop
imul
jl
mov
call
jbe
xchg
mov
stos
cs
xor
mov
push
negb
or
repnz
cmp
je
pop
push
mov
mov
lods
pop
stc
stos
push
dec
test
mov
iret
imul
cmp
sbb
int3
fldt
in
cmp
in
pavgw
lods
adc
daa
fldl2e
pop
adcl
mov
pop
sub
mov
addr16
sbb
ljmp
in
inc
jmp
stos
pop
mov
loop
cmovbe
push
mov
leave
fsubs
jge
les
mov
imul
stos
push
xchg
dec
shl
bound
daa
xor
stos
fwait
and
pop
sub
mov
ret
jmp
mov
sbb
enter
dec
xchg
sbb
stos
add
outsl
aad
mov
dec
stos
cmpsl
adc
stos
imul
je
mov
stos
sbb
jge
mov
inc
xchg
mov
and
adc
adc
roll
aad
ljmp
das
shll
movsl
daa
scas
pusha
std
stos
and
mov
pop
and
jmp
xor
pop
inc
or
bound
ljmp
adc
out
stos
popa
jge
push
jmp
shr
stos
rcrb
repz
xlat
stos
add
nop
dec
jnp
lods
stos
jne
imul
cmp
jbe
movsl
stos
xor
jl
inc
jmp
inc
fcoml
mov
sub
fidivs
stos
lahf
push
insl
adc
std
add
hlt
nop
xchg
lret
cmpl
stos
jae
int
mov
mov
push
push
stos
adc
cltd
movsl
addr16
cld
xchg
jb
outsb
lods
sub
xchg
sub
shrb
pop
mov
push
les
ret
mov
jnp
lcall
shrb
movsb
dec
stos
or
jb
pop
jg
mov
pop
jle
xchg
repz
stos
pop
mov
addr16
daa
stos
add
and
jle
leave
and
gs
sbb
lods
mov
test
stos
mov
mov
cmpsb
cmp
add
ljmp
mov
or
add
ret
pop
fsubl
int
imul
xchg
xor
push
cmc
mov
stos
arpl
or
daa
mov
test
loopne
mov
ror
in
mov
jmp
pop
cwtl
jp
push
and
jno
test
pop
adc
cmp
inc
mov
cmp
adc
aaa
push
mov
movsl
stc
mov
jno
scas
xchg
in
jp
stos
pop
push
pushf
pop
dec
sti
stos
adc
lock
jl
jne
rorb
xchg
popf
sub
jae
pop
cmp
xor
or
fldpi
int3
inc
dec
mov
out
sub
mov
jmp
dec
push
lcall
popa
clc
xchg
or
dec
adc
in
push
mov
dec
push
stos
lea
jb
pusha
and
fs
add
jbe
mov
jmp
jle
in
xchg
pop
fsubrl
adc
lahf
xchg
or
adcl
repz
push
xor
subl
inc
lcall
jmp
test
push
xchg
push
fdivrl
out
mov
xlat
mov
push
xor
fcomip
xchg
jmp
jbe
or
xchg
push
cmp
dec
stos
popf
icebp
movsb
pop
test
mov
cld
push
cmp
or
jne
mov
push
jle
cmpl
stos
test
test
loop
jmp
int3
fwait
aaa
mov
pusha
fmuls
clc
push
pop
lds
push
imull
inc
data16
daa
push
xor
cltd
outsl
mov
lret
orb
dec
imul
push
popf
es
sbb
fidivl
outsb
cmp
loop
jge
mov
xchg
imulb
xchg
cmp
stos
push
test
cmpsb
dec
int3
sahf
stos
jnp
gs
insl
leave
js
sbb
shrl
stos
inc
cli
cld
sbb
dec
lods
jmp
mov
adc
insl
jno
add
or
sub
stos
push
xlat
push
jecxz
outsb
out
daa
stos
jbe
inc
mov
shrl
cmp
pushf
sub
xor
iret
jge
test
sub
gs
and
lret
shlb
mov
or
stos
je
aad
ljmp
mov
pop
xor
sub
cltd
fwait
xor
mov
roll
mov
stos
hlt
mov
out
sub
stos
stos
ss
inc
jp
arpl
pop
mov
lahf
and
scas
and
mov
xchg
and
andl
dec
jl
dec
cmp
push
inc
adc
sub
loope
aam
insb
mov
cwtl
sub
fsubs
xchg
stos
adc
stos
stos
ret
lret
cmc
subb
out
shlb
lahf
dec
stos
mov
stos
call
lret
push
or
cltd
push
lahf
sbb
push
stos
mov
mov
push
shrl
cmp
sbb
and
ljmp
adc
sarl
push
ds
mov
out
cltd
inc
stos
fwait
xchg
dec
adc
inc
ficoms
cmp
and
call
inc
pushf
movb
mov
sub
sbb
jns
rcr
adc
sbb
daa
dec
stos
les
dec
inc
sahf
sub
sub
adc
cmp
inc
mov
aas
sbb
or
stos
sahf
outsb
lods
std
or
xor
cmc
jb
inc
cld
sub
arpl
mov
das
push
add
mov
popf
stos
sbbl
mov
xor
orb
das
inc
pusha
scas
or
jnp
mov
push
iret
stos
sub
cmc
fcomi
stos
mov
pop
add
fs
xchg
or
inc
ficompl
inc
jl
lea
xchg
jecxz
xchg
pop
jmp
ret
jp
out
sbb
ljmp
and
push
xor
into
or
imul
popa
and
stos
scas
jmp
xchg
out
mov
sub
mov
lock
fwait
cmpl
inc
lods
dec
clc
jmp
jnp
cmp
mov
mov
stos
cmp
pop
and
out
fsubrl
or
scas
mov
subl
stos
push
lret
or
das
rclb
incb
cmp
sub
fstpt
mov
jecxz
stos
add
fsubrl
dec
test
fisubrl
mov
or
dec
mov
mov
push
lret
jae
lods
cmp
lahf
call
lods
add
dec
stos
xchg
mov
jecxz
in
movsb
je
ffreep
lds
imul
push
mov
xor
dec
jmp
data16
pop
insb
and
mov
xor
in
fstl
add
xchg
aas
cmp
adc
and
out
jne
sarl
pop
fmul
stos
mov
inc
addr16
pusha
sti
movsb
js
arpl
test
lahf
pop
stos
push
or
test
in
sahf
repnz
call
imul
mov
stc
je
and
dec
sub
fcmovu
pop
sub
into
push
stos
rcll
cwtl
rolb
int
sub
mov
test
mov
and
fwait
mov
push
shrb
cmp
pop
dec
loop
inc
and
xchg
cld
mov
daa
leave
orl
mov
lods
cld
bound
stos
cmp
test
sti
cmp
sbb
push
ljmp
cmp
stos
mov
inc
or
sub
dec
inc
fs
xor
test
pop
sub
ffree
fwait
mov
gs
ja
cmp
adc
sub
add
mov
stos
rol
pop
dec
insb
dec
movsb
pop
mov
mov
fwait
imul
aaa
stos
xor
and
mov
mov
mov
xor
daa
mov
pop
stos
push
fnstcw
data16
notl
lds
test
cmpsb
and
mov
stos
test
xchg
mov
mov
stos
and
push
add
movsb
test
int
imul
push
jmp
or
cmp
xor
dec
addr16
pop
add
mov
out
frstor
jmp
bound
shrl
leave
push
xchg
mov
cmc
sub
mov
xor
iret
movsl
pop
adc
cmpsb
das
cmc
in
jo
pop
stos
dec
pop
mov
aam
outsl
mov
fidivrl
xchg
sub
pop
xor
aaa
inc
push
sbb
xchg
stc
lcall
jne
add
insb
mov
in
test
in
push
in
cmc
lods
mov
jnp
sti
mov
mov
push
jnp
ret
aam
mov
loop
jne
repnz
mov
and
sbb
out
and
out
shr
shrl
adc
xchg
pop
stos
out
lcall
pushl
stos
fwait
hlt
inc
out
add
and
stos
cmp
lods
mov
in
and
fwait
shrl
popf
shrl
sub
scas
into
mov
pop
xor
mov
ret
xor
fisttps
cli
add
jecxz
cmpsb
push
aam
into
test
xchg
cwtl
mov
shll
lock
imul
outsb
sub
imulb
jge
lret
push
pop
cmp
pop
into
test
ja
aas
movsl
stos
sahf
push
je
jae
lret
hlt
mov
dec
mov
push
sbb
das
jg
dec
call
cltd
subb
and
bound
test
stos
call
add
imul
scas
push
xchg
xchg
pop
fisubrl
imul
rolb
cmovo
push
stos
jmp
sub
imul
sub
push
stos
adc
inc
mov
adc
mov
dec
test
std
xchg
add
fisubrl
jno
or
daa
xchg
mov
sub
test
in
and
sub
imul
xchg
addr16
adc
rorl
stos
adc
addr16
lret
int
hlt
jecxz
int3
orb
push
cmp
dec
fidivrl
stos
cmpsb
sub
fists
mov
dec
addr16
inc
adc
stos
add
mov
pop
mov
xchg
stos
sub
aam
push
stos
mov
dec
roll
cwtl
jno
mov
rclb
mov
fs
inc
arpl
inc
rcrl
adc
lcall
xchg
adc
stos
jecxz
jo
frstor
sub
sbb
scas
push
repz
xchg
add
sub
dec
pop
adc
xchg
sahf
sbb
push
mov
and
add
and
shrl
inc
lods
loope
dec
test
dec
aaa
or
pushf
pop
mov
int
rclb
test
jmp
mov
sub
jne
jae
stos
push
xor
cmp
movsb
inc
fsubr
pop
cwtl
clc
enter
out
imul
mov
ja
lods
xchg
mov
stos
jo
mov
push
bound
stos
push
sub
loopne
or
stos
cmp
outsl
insl
ret
dec
test
mov
decl
jb
lea
jo
in
fwait
cmp
stc
push
popf
pop
sub
fistpll
stos
and
mov
mov
aas
add
or
stos
orl
dec
push
and
stos
mov
pop
inc
cld
es
stos
loopne
pop
loope
sarl
sti
jno
push
int3
or
mov
stos
scas
push
jnp
jge
xchg
jp
add
fwait
pop
stos
dec
dec
das
jne
sub
mov
push
xchg
jb
push
mov
pop
mov
adc
stos
jmp
jl
mov
push
int
shlb
jae
sbb
cmpl
mov
and
and
pop
mov
and
rcrl
icebp
stos
sti
cli
mov
cmp
outsb
stos
mov
pop
hlt
cmp
inc
xchg
push
test
or
fldenv
and
dec
mov
lret
cmp
stos
faddl
imul
xchg
rcrl
mov
add
mov
cld
stos
pop
daa
call
jecxz
imul
pop
xlat
test
jp
cmp
pop
lods
xor
stos
adc
popa
mov
fists
and
push
lock
ss
cmp
xlat
fsubl
stos
decl
fiaddl
add
in
loopne
adc
stos
lods
mov
subl
fldl
inc
jnp
cmp
mov
mov
fistl
popf
std
add
outsl
xchg
adc
dec
stos
or
jno
adc
push
inc
insl
pop
xchg
inc
fcoml
cmp
ds
xchg
mov
mov
sbb
iret
fildl
mov
xlat
and
or
jae
in
fistps
mov
test
xchg
dec
push
stos
out
mov
pop
in
xchg
stos
mov
dec
lea
ficompl
mov
test
add
addl
out
or
aad
sub
jmp
adc
sti
sbb
ds
stos
or
and
mov
push
lcall
lock
aam
jecxz
jo
mov
mov
stos
cmp
aaa
movsl
dec
xor
cwtl
jmp
fwait
dec
lods
or
pop
stos
add
push
jmp
xchg
jns
popf
icebp
inc
mov
aas
and
or
cmp
sub
jbe
test
mov
adc
push
mov
movsb
cmpsl
stos
push
aaa
andl
pop
sti
adc
clc
push
mov
lcall
xchg
pop
stos
or
push
imul
jmp
mov
ror
stos
or
jg
stos
mov
jae
pop
sub
mov
sub
push
and
ljmp
test
scas
stos
pop
mov
mov
cmpsl
adc
rep
add
mov
stos
into
cmpsb
clc
mov
sbb
adcl
andl
jl
stos
cli
fadds
xchg
cmp
data16
pop
pop
jmp
sbb
push
insb
xchg
lret
or
cmp
add
jp
mov
adcb
cwtl
push
jns
iret
mov
stos
repnz
mov
and
int3
xchg
aad
xchg
mov
mov
mov
sbb
popf
in
mov
ret
push
or
mov
cmp
jecxz
mov
stos
daa
jmp
sub
sub
stos
pop
cmp
add
or
push
in
bound
out
xchg
mov
loope
cs
pop
in
mov
jns
movsl
ss
mov
clc
out
ficoml
add
mov
imul
out
sbb
imul
stos
icebp
fs
mov
sub
aam
inc
adc
popf
lods
imul
push
mov
arpl
adc
lret
stos
bound
data16
scas
std
pop
add
fcoml
jmp
jnp,pn
adcb
aas
fsubs
stos
je
add
cmp
push
adc
mov
insl
lods
je
jae
stos
jecxz
popl
push
in
xor
or
dec
sti
test
fnstcw
stos
mov
insl
scas
push
mov
mov
push
stos
insb
je
sub
notb
mov
pop
jnp
or
lcall
adc
sub
int
imul
xchg
cmp
fwait
vsubpd
loopne
stos
cmpl
mov
stos
pop
dec
scas
cltd
xchg
stos
adc
jl
mov
ret
addr16
js
rclb
aaa
sarb
fs
cmp
pop
jno
subps
dec
xchg
or
insb
push
sub
leave
stos
sar
hlt
mov
add
push
stos
mov
prefetcht1
enter
ja
and
movsl
repz
mov
add
stos
pop
pop
arpl
icebp
sbb
xor
fmul
mov
pop
mov
stos
or
stos
pop
fwait
iret
or
jl
inc
cmpsb
loop
and
test
add
lcall
push
pop
pop
push
push
xchg
scas
lds
fnstenv
or
mov
repnz
jnp
js
cmp
inc
adc
daa
sbb
jno
mov
lods
xor
inc
and
aaa
add
mov
ret
aad
mov
stos
sti
push
push
cs
lds
pop
in
add
aad
sbb
xor
loop
pop
cmp
mov
je
shlb
clc
loope
sub
sub
stos
or
dec
stos
loop
shrl
mov
cmp
lret
jne
stos
out
adc
inc
aaa
stc
das
jmp
pop
adc
xchg
add
stos
jns
scas
jge
mov
fs
mov
add
jl
test
stos
push
sub
mov
xor
inc
stos
stos
cmpsb
push
lcall
ret
xchg
jge
lahf
sbb
stos
xor
sar
stos
mov
xchg
jmp
outsb
push
rolb
bound
ljmp
inc
pop
sbb
adc
pop
push
lret
shl
mov
hlt
stos
xor
pop
push
daa
or
xlat
ljmp
xchg
rep
push
cmpsl
movsl
lods
xchg
aas
fisubrl
lcall
mov
into
dec
shrb
lret
xor
xchg
push
in
mov
arpl
push
add
int
sub
cli
push
fs
pusha
in
int3
push
cltd
mov
stos
xchg
cwtl
cmp
mov
ja
lds
out
aam
test
push
stos
xor
jae
addr16
popa
mov
jmp
imul
pop
pop
xorl
pop
mov
iret
lahf
stos
shll
mov
xor
dec
xchg
sub
xor
or
xor
jge
adc
jbe
push
loopne
fwait
sub
lcall
pop
int
pop
das
test
cwtl
push
out
jb
mov
mov
stos
adc
push
int
cmp
sub
es
mull
add
lds
and
push
jg
loopne
jl
jp
xor
inc
lahf
push
icebp
sbb
stos
add
pop
mov
sahf
stos
mov
fsubrs
push
sbb
cwtl
stos
mov
leave
stos
das
sti
sarl
and
daa
or
std
and
sbb
cmp
xchg
mov
stos
lea
mov
scas
add
jmp
inc
xchg
pop
sahf
arpl
cmpsl
loopne
fwait
test
xchg
push
subl
stos
xchg
pushw
pop
subb
test
push
loop
mov
addr16
or
jg
into
sbb
std
mov
outsb
addr16
pop
mov
sub
fstpt
inc
mov
ret
ftst
xchg
iret
sub
test
or
loop
jge
shr
mov
mov
stos
in
js
lods
xchg
stos
mov
out
inc
arpl
ds
imul
rcrl
jge
dec
jno
sub
stc
stos
or
loope
pop
dec
pusha
sbb
jecxz
sub
xchg
jmp
and
xor
pop
cmp
mov
mov
jecxz
mov
ss
movsb
jmp
ret
cltd
ljmp
and
mov
es
fdivrl
lea
in
xchg
movsb
xchg
mov
push
or
mov
stos
jmp
iret
leave
and
hlt
pop
mov
adc
xor
iret
sarb
push
xchg
das
outsb
test
dec
lods
shrb
pop
std
stos
ror
pop
mov
xor
lods
in
and
mov
xchg
inc
stos
jecxz
mov
outsl
lds
mov
or
fidivrl
fstl
adc
and
dec
push
stos
add
dec
popa
lea
mov
inc
out
xchg
popa
sbb
stos
jns
cli
in
repz
stos
sbb
mov
clc
cmc
aas
stos
ja
in
mov
inc
adc
fisubrl
xchg
push
push
xchg
js
mov
bound
and
xchg
xchg
or
jmp
jle
stos
into
pop
dec
push
or
arpl
xchg
pop
jl
addr16
or
mov
mov
add
shrl
std
stos
lods
in
cwtl
bound
jle
add
dec
shll
std
jnp
inc
aad
stos
lret
mov
sti
sbb
cltd
fcmovnb
mov
sub
stos
cmp
test
aam
stos
rcl
push
movsb
int3
in
das
stos
xorl
push
shlb
lcall
adc
xlat
test
xchg
dec
lods
xchg
pop
lods
push
jmp
sub
xchg
sub
lret
sub
stos
outsl
jo
movsb
xor
jmp
xor
cmp
cmpsb
adc
pop
inc
mov
pop
xor
mov
or
repnz
lcall
sbb
addb
xlat
ljmp
xor
sub
cltd
pop
xchg
dec
stos
fidivrl
stos
cmp
aas
add
std
out
stos
mov
pop
xor
fcmovnbe
insl
jmp
xchg
xchg
xor
sbb
mov
jns
xchg
stos
ljmp
mov
out
or
loope
rorb
jae
sub
and
jge
mov
pusha
jbe
in
push
xlat
stos
xchg
pop
leave
push
fwait
jno
stos
lret
lahf
mov
xor
mov
cmpsb
jae
cmp
or
push
mov
mov
sarb
inc
mov
daa
movsl
mov
sub
stos
xchg
ret
xchg
addl
test
lret
ret
sbb
pop
mov
stos
ljmp
popa
movsl
add
and
sub
dec
dec
xchg
jl
call
xchg
stc
pop
mov
push
inc
inc
xchg
ret
int3
mov
mov
inc
subb
ret
enter
pop
push
xor
mov
sbb
pop
mov
imul
cmpsb
adc
les
int3
sub
mov
dec
into
mov
xchg
add
or
pop
xor
fwait
pusha
shll
loop
mov
xchg
mov
pop
test
cmp
mov
dec
in
fwait
add
sbb
mov
cwtl
icebp
nop
dec
sbb
add
push
or
stos
inc
xor
xacquire
subb
mov
lds
mov
daa
mov
cmpsl
mov
call
mov
shrb
stos
bound
push
mov
push
adcb
inc
into
addr16
or
and
push
stos
ret
sbb
fmulp
ljmp
xor
mov
ds
stos
in
cwtl
add
jle
push
enter
pop
sbbl
mov
daa
int
filds
stos
push
and
jmp
lahf
adc
dec
mov
cmp
dec
mov
sbb
aaa
pusha
jo
scas
iret
or
or
mov
push
cmc
pop
and
ja
or
cmp
and
lock
mov
movsb
test
inc
stos
add
or
out
ret
stos
clc
shrb
mov
jne
jge
das
inc
out
dec
and
out
add
js
mov
jbe
mov
and
les
ja
stos
xchg
mov
push
jecxz
dec
cmc
push
push
lahf
je
cmp
mov
outsl
mov
sbb
stos
mov
lods
ss
sub
imul
std
xchg
cmp
jmp
ret
bound
push
jnp
xchg
and
jmp
movsb
mov
test
fistpl
in
aam
adc
xchg
ljmp
jno
popf
and
lods
gs
shl
ljmp
lahf
add
fsubl
int3
stos
mov
lretw
lock
test
inc
mov
dec
cmp
in
pop
or
adcb
mov
pop
bnd
rolb
mov
es
cltd
inc
jp
aas
stos
ljmp
xor
cmp
sti
jmp
adc
insb
and
testb
scas
stos
aas
jo
jg
sub
imul
test
stos
stos
aam
sub
movsl
xchg
cmpsb
or
loope
sub
out
shlb
sub
cmpsl
mov
test
stos
pop
dec
mov
enter
fwait
in
xorb
sar
mov
mov
jecxz
inc
sub
stos
lahf
movsl
or
jno
or
jnp
xor
jmp
cmp
stos
adc
loope
inc
add
xchg
cmp
outsl
jmp
lods
andl
inc
cmp
ffreep
pop
or
iret
push
in
lock
call
cld
jb
jmp
pop
enter
mov
stos
js
pop
or
inc
mov
jge
jmp
inc
addl
jne
loope
adc
insb
test
out
test
xor
fwait
cmpsl
fsubrl
jge
pop
cmp
dec
repz
xchg
cmpsb
out
imul
jle
rcrl
das
adc
fildl
fisubrl
sub
and
pushf
into
push
dec
mov
cmpsb
cmp
addr16
pop
mov
jecxz
pusha
dec
push
adc
movsl
jnp
add
mov
sub
cmp
push
aad
sub
mov
xorb
scas
and
jle
stos
xchg
push
xchg
lock
and
stos
pop
sub
sbb
xor
stos
test
dec
lret
jnp
mov
arpl
fistps
repz
sub
xor
stos
push
add
rorb
or
push
ret
mov
aad
int
sub
pop
stos
jae
rorb
clc
fisubrl
push
push
mov
xorb
xchg
mov
pusha
push
cld
push
mov
mov
roll
xor
sub
popf
ljmp
lcall
std
inc
push
mov
mov
adc
xchg
popa
stc
jg
sbbl
orl
mov
outsb
mov
std
imul
xchg
iret
fisttpl
mov
lahf
adc
stos
dec
mov
xchg
pop
stos
shr
loope
hlt
gs
stos
out
bound
movsb
stos
dec
sbb
mov
dec
pushf
inc
inc
aam
movswl
nop
lods
enter
stos
aas
shr
icebp
and
lods
and
in
hlt
stos
test
stos
lcall
lods
xchg
ret
or
and
cmpsl
pop
xchg
and
jl
push
out
or
and
es
and
in
xchg
dec
push
mov
fnsave
stos
ds
and
dec
stos
rcl
enter
xchg
jmp
sbb
daa
cmp
mov
cmpsl
loope
lea
cwtl
in
and
jns
inc
add
mov
mov
stos
sbb
loope
xor
mov
sub
lea
mov
mov
jnp
jns
imul
xchg
cmp
repnz
mov
jge
ret
clc
xor
jecxz
jbe
pop
jae
cmp
mov
add
pop
cmp
fsts
pop
insl
ret
cs
scas
rclb
sbb
mov
inc
lret
and
ret
mov
xorps
push
pop
gs
stos
jbe
sbb
lret
push
in
jg
inc
adc
add
stos
jl
rcrl
xor
shrb
lahf
jmp
add
mov
mov
stos
lods
jge
jle
in
mov
inc
mov
fistpl
stos
daa
in
clc
sub
add
stos
lock
lret
mov
dec
sub
and
jb
mov
fadd
arpl
jmp
inc
cmp
xor
stos
popf
jns
inc
push
push
repz
lods
cmpsl
push
in
or
ss
fidivrs
stos
or
hlt
add
xor
mov
into
loop
out
jbe
jns
mov
mov
stos
adc
sbb
mov
loope
jle
stos
imul
stos
clc
or
rol
and
sub
xor
loope
stos
mov
adc
rcll
jmp
add
loopne
xchg
and
stos
or
loop
adc
je
stos
cmp
popa
jnp
xchg
xchg
stos
jne
pushf
adc
mov
or
in
jns
aad
out
data16
stos
cmp
rorl
mov
cmp
push
stc
mov
shrl
mov
dec
daa
add
xchg
mov
push
pop
inc
and
data16
xor
push
push
and
add
popa
jecxz
incl
sbb
stos
cmp
push
mov
scas
lock
add
bound
jmp
mov
dec
pop
pop
sbb
jno
loopne
push
adc
mov
cmc
sub
mov
xor
ds
dec
pop
in
sti
xchg
mov
outsb
xor
stc
clc
repz
cmc
add
or
stos
out
xor
mov
mov
lock
dec
or
stos
ret
jae
mov
stos
jno
faddl
add
or
ljmp
sub
mov
out
je
stos
pop
cmp
insb
int
mov
dec
fisttpl
mov
adc
ret
jecxz
roll
xlat
imulb
inc
mov
push
jb
stos
mov
and
add
icebp
fs
sub
cli
xor
stos
mov
arpl
mov
and
sub
sub
add
xor
or
int
fistpll
aam
xor
or
jg
stos
push
mov
or
cmp
ss
sbb
dec
stos
jmp
push
xchg
stos
and
push
aam
cmp
xor
aad
scas
in
nop
out
jnp
push
mov
test
xor
mov
icebp
pop
push
xchg
add
vpmullw
sub
popa
xor
inc
dec
leave
shrl
pop
adc
ss
mov
lahf
into
shll
stos
mov
pop
xchg
sub
aad
lods
js
pop
nop
in
stos
jae
sbb
stos
clc
push
movsb
xchg
fmulp
in
sub
std
fwait
pop
out
lcall
ja
dec
stos
or
mov
jmp
lret
scas
pop
jp
xchg
cmc
xor
sub
pop
std
cld
subb
es
ficomps
pop
cmp
in
inc
jp
or
cltd
sub
je
shlb
stos
sub
dec
stos
mov
lret
std
addr16
inc
test
xor
insl
and
jmp
fwait
mov
jecxz
stos
cmp
jle
mov
insb
xlat
fildll
enter
pop
cmpb
add
jmp
push
and
hlt
mov
call
pop
mov
mov
addr16
dec
stos
mov
cltd
loop
sub
and
mov
or
mov
sub
aad
cmp
shrb
ja
rcl
cmpsl
js
es
std
mov
outsb
lret
mov
cmp
jb
stos
cltd
and
pop
nop
lahf
mov
cmp
testl
ja
iret
jns
jg
jb
push
add
push
xchg
jecxz
dec
stos
dec
popa
mov
les
fisubs
mov
stos
add
addr16
stos
mov
cmovnp
fwait
mov
xor
dec
cmp
mov
sbb
sbb
stos
inc
dec
lods
cmp
sbbb
stos
pop
imul
dec
mov
jmp
mov
stos
sbb
mov
pop
insb
mov
push
stos
lds
loopne
stos
and
ja
stos
cmpsl
in
movsl
sub
or
push
addr16
sub
dec
stos
into
jbe
movsl
hlt
cmc
pop
stos
push
xchg
cwtl
jmp
mov
stos
arpl
or
add
ljmp
sbb
repnz
stos
cmp
fnstsw
push
outsl
mov
inc
sarb
cmp
mov
xchg
subb
xor
add
push
loop
out
gs
loopne
jmp
fidivs
mov
adc
loope
jmp
cmp
xchg
adc
stos
or
push
lock
lahf
testb
stos
shrb
cmp
cmp
scas
mov
jnp
daa
addps
mov
pop
mov
mov
jo
sub
test
adc
lea
xchg
mov
inc
cmp
cmp
lahf
stos
sub
test
mov
sbb
mov
and
sbb
xchg
stos
movsl
loop
xor
mov
jl
cmp
addr16
in
dec
stos
es
jecxz
sub
stos
jno
test
sarb
pop
fdivp
out
inc
pushf
cmpsl
imul
lahf
sub
push
inc
mov
shlb
pop
int
imul
stos
mov
test
repnz
stos
shll
or
mov
jle
insl
cwtl
fisubrs
test
repz
lcall
or
cmp
stos
or
and
jge
in
inc
popf
add
out
stos
rcr
ljmp
rcll
in
mov
out
cmp
shrb
int
stos
in
dec
mov
ljmp
iret
xor
iret
stos
outsl
lcall
stos
mov
push
aam
iret
stos
pop
adc
data16
mov
push
and
or
inc
dec
xchg
lods
inc
mov
outsl
addb
dec
insl
ds
fs
cmp
sub
push
push
jmp
push
daa
xchg
adc
in
scas
xchg
inc
inc
icebp
int3
imul
cmpsl
enter
ljmp
mov
imul
ljmp
stos
mov
xor
jmp
push
adc
popf
loopne
sub
push
insb
push
stos
inc
rolb
jge
jmp
pop
stos
out
inc
sbb
or
sti
scas
and
jmp
mov
mov
xchg
outsl
xor
mov
shlb
aad
daa
pop
or
pop
jno
cmp
sub
stos
lea
or
jl
sub
ja
ret
es
sub
in
loopne
addr16
or
jo
inc
stos
push
shld
and
ja
sub
aad
and
jl
add
pop
sti
xchg
add
push
xchg
rcrb
and
mov
rorl
stos
into
lods
or
stos
lret
cwtl
das
loope
subl
mov
loopne
ljmp
xchg
pop
inc
stos
mov
mov
sub
sub
cs
or
ror
aas
stos
out
leave
lret
xchg
lock
pushf
and
or
cmpsb
fwait
and
jmp
xchg
mov
mov
hlt
jmp
scas
divl
sbb
cmpsb
arpl
aaa
mov
jecxz
inc
std
lods
add
sbb
int3
stos
dec
mov
mov
stos
imul
xor
loopne
fisubl
cmp
dec
mov
stos
mov
dec
je
inc
xlat
mov
sub
xchg
inc
cmp
fwait
stos
popf
and
out
and
inc
xor
sti
jp
sbb
jb
push
es
inc
mov
cmp
sahf
imulb
mov
xor
out
stos
cmc
or
es
jp
daa
int
pop
mov
xchg
inc
xchg
cmp
popf
mov
daa
jne
lea
push
mov
movsb
lods
call
pop
dec
rcr
sub
push
mov
jl
pop
mov
cmp
fcmove
test
sub
stc
subb
mov
or
fidivrs
xchg
xor
mov
cmpsl
and
adc
stos
lods
inc
in
mov
jmp
mov
sub
cmc
stos
es
popa
xor
stos
adc
aam
sbb
stos
loope
push
xchg
and
push
push
ret
xchg
iret
call
sub
inc
rol
mov
popf
push
push
jo
outsl
dec
mov
leave
jae
nop
fdivrl
sahf
xchg
add
pop
daa
xor
stos
cmpl
jecxz
jp
jle
stos
xor
sub
dec
stos
cmp
ljmp
cmp
jge
push
cmp
jecxz
mov
mov
inc
xor
xchg
cmp
xchg
cmpsb
lea
fwait
out
pop
iret
xchg
xor
jg
clc
cmp
subl
push
stos
fcoms
or
ret
mov
adc
push
cs
jmp
and
lcall
inc
je
mov
dec
stos
rcrb
inc
adc
lcall
adc
jmp
or
test
lods
sub
and
jbe
or
pop
shrl
ljmp
imul
fmull
sbb
cmpsb
mov
jecxz
enter
and
in
sub
in
loope
aam
faddp
fldcw
xchg
cmp
gs
int3
dec
or
sub
xchg
pop
imul
mov
repnz
stc
pop
jmp
ljmp
std
fsubl
stos
fisubrs
das
push
stos
icebp
and
addr16
out
into
in
mov
test
fs
sbb
mov
sbb
mov
hlt
and
mov
jle
daa
shl
push
mov
ret
test
add
stos
arpl
shr
hlt
cli
ljmp
jg
das
cld
popa
mov
xchg
jno
and
dec
xor
push
cmpsb
lods
pop
test
std
jmp
mov
lea
movsl
sarl
jo
dec
stos
pop
out
sti
inc
mov
mov
stos
sub
push
xor
shll
repnz
cmp
cmpsb
xchg
stos
cmpsl
sub
inc
mov
call
aaa
cmp
push
mov
xchg
adc
stos
push
sahf
push
and
jne
or
inc
inc
lret
xchg
imul
dec
mov
or
lea
mov
mov
mov
shrb
ret
xchg
mov
sbb
stos
lods
pushf
dec
and
mov
ljmp
addr16
mov
das
mov
aaa
stos
ds
hlt
movsl
xchg
loopne
scas
sub
stos
and
stos
fdivp
dec
fwait
mov
push
stos
push
aaa
cmp
rcrl
stos
pop
es
cld
inc
mov
lock
push
mov
jnp
iret
mov
aas
jno
add
xor
fwait
daa
or
out
ljmp
fs
cmp
addl
js
test
outsl
cwtl
dec
cmc
mov
add
into
add
bound
stos
nop
enter
dec
push
jnp
stos
cmp
mov
cmc
mov
pop
in
mov
popf
jmp
fldt
aaa
mov
rcl
push
push
js
ss
pop
sti
dec
arpl
into
push
stc
jnp
adc
stos
sub
out
aad
mov
daa
add
lret
cltd
hlt
adc
stos
aam
test
mov
loop
ret
outsb
out
adc
mov
in
jle
mov
stos
sbb
inc
xchg
mov
jnp
add
push
or
lcall
mov
mov
xchg
add
cmp
leave
cwtl
inc
dec
mov
aad
adc
mov
inc
inc
gs
push
movsl
jnp
push
sarl
cwtl
xchg
in
stos
add
and
stos
mov
subl
popf
cmc
cmp
ja
dec
and
push
add
sbb
outsl
movsb
cmp
and
adc
pop
sbb
test
cmp
sub
test
es
push
jnp
stos
call
mov
mov
or
cmc
stos
outsb
dec
test
je
mov
scas
popa
sub
pusha
js
jmpw
int3
ss
arpl
les
jmp
xchg
stos
loop
mov
in
mov
xchg
xor
in
fimull
mov
push
sbb
mov
stc
stos
sbb
hlt
jbe
stos
dec
jp
inc
inc
mul
adc
mov
and
lret
subb
jb
jnp
shrb
ja
sub
add
into
pop
mov
lret
fisubl
es
fwait
push
and
pushf
stos
mov
lea
or
jae
push
sbb
idivl
nop
and
stos
pop
cld
idivb
inc
das
int3
into
sub
mov
es
call
stos
or
in
mov
fbstp
arpl
push
ds
mov
sub
stos
lock
mov
inc
jl
pop
addr16
int
dec
lods
stos
bound
cmpsb
imul
stos
rcrl
adcb
push
fs
sub
mov
pop
lret
or
aam
js
imul
jnp
enter
scas
mov
push
or
bnd
mov
inc
mov
adc
pslld
add
sub
shrl
jo
pop
stos
pop
clc
pop
mov
dec
jp
mov
pop
ds
xlat
scas
jne
rcrb
rol
stos
fwait
xchg
dec
mov
stos
cmp
dec
xchg
cmc
int3
out
mov
mov
daa
mov
add
cli
call
fwait
ss
cmp
jle
iret
scas
or
adc
out
das
stos
adc
imul
pop
mov
xlat
fbstp
mull
daa
fwait
cmc
adc
sti
cmp
rolb
mov
dec
in
add
pop
stos
mov
jecxz
ljmp
mov
xor
arpl
xchg
fsts
cmpsb
push
stos
sbb
cmpsb
out
sub
push
test
fisubl
imul
loope
sbb
lea
inc
stos
stos
dec
mov
sub
lret
fimull
movsb
inc
mov
cmp
movsl
adc
or
push
fwait
mov
aam
jb
pop
pop
icebp
jle
xchg
fmul
leave
sbb
js
lds
lock
mov
stos
inc
xchg
lods
xchg
ret
imul
xchg
xchg
push
addb
incb
push
in
jge
stos
popf
nop
fwait
push
orl
sbb
mov
cmp
repnz
ficoml
daa
stos
push
inc
pop
arpl
je
cmc
ds
into
mov
imul
inc
lret
mov
stos
pop
jnp
stc
or
push
mov
stos
xchg
adc
jbe
mov
push
mov
clc
or
mov
subl
stos
xchg
scas
adc
icebp
in
pop
jbe
sbb
in
push
sub
jne
cli
insl
movsl
cmpsb
imul
cmpsl
mov
flds
stos
or
lods
pusha
pop
fbstp
and
cmp
push
lds
push
gs
mov
pop
out
sub
or
and
stos
jle
inc
push
add
in
shrl
sub
pushf
sub
out
fcompl
int
test
leave
stos
iret
cld
dec
xchg
mov
add
es
daa
mov
cmp
mov
cs
xor
fistl
add
push
ds
ljmp
jp
mov
xchg
stos
adcb
mov
dec
ret
orl
imul
lahf
sahf
mov
dec
mov
dec
mov
cmc
push
stc
stos
add
les
stos
cmovnp
push
pop
sahf
clc
mov
mov
fidivs
aaa
push
sti
mov
xchg
fucomip
jl
lods
int3
xchg
sub
es
rolb
mov
fbld
test
jp
xchg
mov
fs
cmp
fcmovne
jo
xorl
jmp
into
xchg
cmp
pop
outsb
push
stos
jne
xchg
add
pop
sti
fs
rcr
mov
push
insb
pop
stos
jo
xchg
imul
mov
cmp
mov
lods
sbbl
cs
mulb
inc
or
dec
push
cmc
data16
mov
decl
xchg
jmp
nop
dec
xchg
std
ds
insl
push
stos
dec
push
add
imul
cmp
cmp
mov
pop
loope
int
stos
mov
dec
out
daa
add
adc
mov
inc
cld
inc
jmp
mov
fidivrl
mov
mov
stos
addb
and
inc
and
fadds
mov
hlt
fwait
shlb
mov
push
test
mov
pusha
out
ljmp
out
cmp
in
adc
stos
cmp
dec
mov
xchg
stos
fwait
mov
call
ds
xchg
jns
gs
push
repnz
xorl
jl
dec
sub
jp
inc
add
loop
or
ror
sti
popf
xchg
cmp
or
stos
arpl
and
cmp
aad
add
adc
add
push
fs
xchg
cmp
ja
dec
inc
stos
cmp
imul
setae
ds
jl
std
fistpll
and
and
mov
push
rcr
push
pop
cs
dec
fldcw
popa
nop
jnp
mov
std
pop
ljmp
mov
stc
or
mov
pop
jne
dec
pop
push
push
xlat
out
add
dec
fisubrs
push
cmp
stos
pushf
mov
xor
push
imul
fidivs
fsubrl
or
push
sbb
xchg
fstps
jb
push
data16
stos
mov
dec
idivl
xchg
stos
aas
outsb
inc
dec
dec
ja
iret
imul
subb
pop
dec
ret
addr16
in
call
out
das
push
stos
pop
shld
stos
mov
sub
add
repnz
sub
mov
jo
or
ljmp
xlat
call
xchg
adc
push
pop
sbb
mov
repz
mov
mov
mov
aaa
cmp
rep
dec
mov
in
stos
mov
aaa
jo
cmp
into
push
sbb
sti
or
cli
jp
lret
aas
scas
shll
fcomip
hlt
xorl
add
int3
pop
adc
stos
pop
les
xor
stos
cmpsb
mov
mov
and
ljmp
and
test
jo
cmp
add
cmc
iret
stos
fsubr
ficoms
or
stos
xchg
test
hlt
repnz
push
xor
sbb
pop
pop
jno
stos
pop
mov
or
mov
movsl
lods
cmp
or
enter
add
push
mov
xchg
mov
stos
enter
sti
push
jecxz
clc
mov
in
xor
adc
xorl
cmc
mov
mov
add
fildll
or
int
imul
pop
jo
dec
mov
stos
add
cwtl
pop
lds
stos
or
stos
mov
xor
xchg
or
mov
sub
jbe
sub
addr16
inc
inc
mov
push
stos
ss
xchg
into
inc
and
mov
sub
sub
sub
stos
scas
jne
mov
stos
or
sti
cmp
gs
lods
stos
aam
in
jae
std
jns
scas
sbb
dec
xor
ja
push
stos
add
push
inc
dec
xor
adc
adc
stos
jp
lea
sbbb
pop
fs
add
imul
mov
out
mov
fsubl
pop
insb
sub
cmp
mov
dec
jl
call
outsl
pop
iret
cmp
xchg
fs
mov
add
mov
ret
bound
pop
mov
mov
cwtl
inc
fs
mov
adc
pop
pop
les
dec
ljmp
jecxz
mov
mov
mov
cmp
daa
pop
fwait
sbb
adc
fwait
iret
push
shrb
pop
sub
mov
inc
mov
jbe
cmp
cld
and
lods
in
adc
fwait
sub
mov
movsl
mov
fwait
mov
cld
add
sub
iret
adcb
pop
add
adc
xor
shr
repz
jecxz
pop
mov
lret
mov
push
mov
faddp
lahf
xor
sub
add
jne
inc
stos
push
inc
in
leave
in
jge
aas
xor
loopne
mov
mov
int3
fwait
push
shll
repnz
stc
push
mov
sub
loop
add
call
subb
stc
fldcw
push
inc
cmp
popa
mov
cli
xchg
out
das
imul
cmpsl
and
lds
and
xor
dec
add
ljmp
ds
push
fs
lock
stos
lret
into
push
push
fimull
sbbb
aas
mov
ljmp
out
xor
movsb
mov
hlt
cmp
jno
mov
in
ljmp
lret
mov
stos
hlt
cmp
sbbb
stos
jb
jno
leave
push
test
iret
stos
add
insb
js
out
lahf
scas
aad
pop
jno
mov
adc
stos
std
dec
aad
ret
data16
into
imul
mov
and
or
xlat
ljmp
jmp
decb
pop
fidivrl
dec
stos
sub
stos
fimuls
pop
fdivs
mov
mov
push
imul
mov
mov
stos
xor
divb
ss
enter
sbb
popf
or
stos
jmp
lock
ds
dec
mov
icebp
cwtl
mov
adcl
pusha
stos
clc
ret
lods
in
pop
out
stos
mov
shll
add
lret
arpl
movsl
mov
jns
adc
xchg
sahf
jnp
dec
jmp
mov
push
imul
cmp
call
movsb
push
out
xchg
mov
in
int3
hlt
stos
mov
dec
lock
stos
incl
repnz
xchg
jg
stos
insl
adcl
or
nop
sbb
pop
mov
dec
xchg
in
jb
sub
stos
fwait
mov
pop
sbb
fidivs
and
es
ljmp
stos
bound
xchg
pop
cltd
imul
mov
xchg
es
mov
stos
mov
and
stos
cld
imul
mov
cmp
adcl
mov
imul
mov
mov
xor
jnp
cmp
pop
sub
popf
jge
dec
add
das
es
cs
jle
pushf
loop
mov
mov
fisubrl
cmc
sub
aaa
fildl
call
fwait
push
into
pop
int3
mov
pop
or
popf
add
sub
fwait
lods
imul
mov
stos
mov
loope
mov
push
push
jge
jmp
xor
test
xor
and
lea
hlt
fstps
scas
stos
mov
aaa
dec
cmc
and
imul
or
push
inc
out
idivl
stos
test
pop
mov
movsb
xchg
es
dec
sub
stos
ret
cmp
mov
lods
fisttpll
das
sbb
and
pop
daa
clc
aas
stos
jb
add
jg
outsb
mov
repz
mov
sar
loop
stos
cmp
adc
mov
sbb
cmp
jl
dec
mov
jne
sarb
fistl
fisubrs
xchg
ss
stos
lret
jge
dec
cmc
and
std
adc
add
push
mov
inc
in
nop
dec
out
ret
mov
and
stos
andl
push
jbe
pop
je
push
stos
ret
push
cmp
js
pop
stc
daa
push
test
xchg
xchg
xchg
pop
cmp
mov
mov
mov
cmp
jmp
test
lret
dec
lea
add
in
imul
sub
clc
cmpsb
mov
imul
les
mov
sbb
stos
sbb
sbb
mov
aaa
and
hlt
mov
inc
sbb
call
pushl
stos
xchg
cs
daa
leave
cmp
scas
fadds
jbe
lret
jl
mov
rol
call
lods
lret
stos
in
pop
cmp
arpl
outsl
sarl
hlt
lret
cmp
mov
fildll
push
dec
add
stos
xor
or
sub
mov
lods
cmp
sub
push
jecxz
stos
and
addb
mov
std
mov
push
inc
ja
add
inc
mov
jmp
dec
push
add
pop
pop
loopne
scas
out
mov
xor
pop
or
adc
and
mov
stos
push
dec
into
jbe
rcr
mov
sub
pop
movsb
pop
std
push
cmc
mov
pop
fxch
jb
int
add
mov
pop
xchg
mov
fnstsw
gs
or
aas
add
cli
cmp
cltd
fwait
enter
push
jge
or
stos
scas
jo
push
push
pop
loope
daa
dec
cmpsb
aam
repz
clc
subl
arpl
fsubrs
jle
xor
daa
inc
inc
mov
stos
or
sbb
mov
in
stos
cmp
fld
xchg
popa
fsubr
aas
mov
test
popf
andb
cmpsb
ljmp
add
addr16
jo
xabort
stos
int
mov
dec
stos
int3
call
add
sub
lock
sub
mov
and
xchg
push
arpl
or
notb
iret
imull
jecxz
insl
and
mov
std
fwait
adcb
jo
jb
int3
pop
inc
loope
cmpsl
cmp
stos
jae
in
xor
imul
clc
popf
fsubl
jp
fnsave
into
cmc
stos
push
movsb
das
lds
rcll
stos
loope
pop
call
imul
mov
mov
fwait
dec
je
add
push
leave
cld
mov
xor
stos
shlb
pop
cmpsl
je
jle
stos
sbb
ret
push
xor
stos
jp
or
mov
lods
int3
dec
stos
lock
imul
dec
xchg
add
stos
mov
jl
xchg
stos
out
outsl
insb
push
jae
scas
in
imul
and
adc
mov
dec
data16
jmp
push
repnz
cmp
xchg
inc
push
jnp
mov
dec
movsl
out
ja
push
test
xchg
insl
test
add
fsub
gs
dec
lret
ret
imull
pop
out
push
std
mov
sub
stos
add
mov
repnz
mov
shlb
fwait
pop
in
movsb
push
rcrb
sbb
push
mov
pop
jecxz
mov
sahf
xchg
sbb
jmp
stos
sbbb
push
and
ja
rcll
mov
test
lods
inc
sbb
xchg
jns
dec
in
lods
sub
mov
or
xchg
sbb
push
xchg
xor
out
jnp
ror
xchg
ja
aam
sub
and
jo
aaa
jmp
je
jnp
dec
and
test
stos
jl
mov
add
test
pop
rcr
mov
addr16
imul
mov
fstps
in
and
mov
stos
pushl
dec
in
or
scas
pop
add
stos
and
mov
lds
adc
stos
je
fxch
push
and
dec
xlat
stos
dec
push
xchg
or
hlt
shr
mov
push
jmp
mov
mov
add
icebp
clc
mov
stos
mov
dec
jnp
stos
jae
jecxz
pop
scas
loopne
mov
stos
or
loop
int
stos
bound
cmp
out
lods
jmp
fisubrl
xchg
lcall
stos
or
jmp
sub
gs
xchg
pushf
jb
jae
pop
test
add
loopne
insl
fidivs
mov
sti
pop
adc
push
cltd
cli
cmp
inc
jmp
out
fs
stos
bsr
xchg
lea
stos
push
inc
sahf
nop
add
inc
test
cmpsl
pop
stos
clc
mov
fildll
sarl
bound
lods
inc
jns
rcll
stos
cmp
test
pushf
pop
jmp
sbb
jae
jge
add
adc
ja
inc
add
insl
or
into
scas
std
stos
dec
imul
push
fisubrs
cmp
or
test
mov
pop
sbb
jg
mov
or
in
vmovntps
mov
and
stos
pop
mov
and
insb
test
ljmp
pushf
outsb
sbb
dec
mov
jmp
mov
lods
pop
lret
daa
fsubl
mov
sahf
sub
dec
aad
test
jmp
xchg
and
stos
sbb
sahf
ds
inc
jle
jmp
or
mov
push
aaa
stos
sbb
mov
pushf
push
lret
cmp
push
cmpsl
fwait
call
ss
cmc
stos
test
mov
jns
push
stos
imul
mov
lahf
lds
stos
js
mov
and
pop
scas
ljmp
shrl
jmp
scas
inc
sub
mov
and
mov
in
mov
sbb
decl
cmp
mov
or
push
stos
inc
mov
sub
inc
and
dec
pop
scas
inc
stos
imulb
sbbb
mov
mov
push
add
in
stos
iret
jmp
shll
imul
bound
inc
stos
sbb
movsb
enter
push
addr16
mov
stos
and
in
sub
push
mov
sbb
mov
sub
mov
pop
push
stos
mov
out
cmp
xchg
lret
mov
out
iret
sub
popf
stos
popa
orb
shll
jmp
cmc
xchg
adc
add
push
stos
sub
xchg
into
leave
or
mov
cmp
js
jno
push
jecxz
aam
test
sub
push
pop
addr16
and
xor
pop
inc
adc
dec
xchg
inc
stos
cmpsl
fidivs
lahf
out
out
stos
movsb
mov
pop
movsb
xchg
xchg
cmpsl
aaa
roll
xchg
mov
stos
pop
leave
jno
sti
stos
xchg
jp
inc
mov
mov
stos
shll
or
popf
shrb
aad
inc
imul
inc
ja
addl
lahf
xor
ss
and
cltd
inc
stos
icebp
mov
push
lret
or
std
sti
mov
dec
stos
sbb
adc
adc
enter
mov
xchg
mov
bound
xchg
and
sub
push
rep
std
push
lods
and
mov
int
dec
lea
pop
sub
jne
lcall
mov
inc
stos
ss
sarb
icebp
xchg
nop
ja
xchg
fists
stos
or
dec
and
and
inc
fwait
add
jecxz
test
stos
iret
imul
adc
mov
cmp
add
mov
int
xchg
lock
xor
adc
fwait
daa
fisttpll
cmp
push
xchg
jg
in
fcmovne
mov
cmc
imul
cmp
fmull
dec
sub
in
mov
sbb
xchg
jbe
xchg
jl
aam
sbb
lea
inc
add
xchg
das
dec
inc
mov
stos
push
mov
aas
aam
sbb
arpl
fisubrs
test
stos
aad
adc
stc
in
pushf
inc
fcompl
stos
imul
mov
icebp
inc
out
add
push
xor
mov
pop
int3
pop
stos
aam
and
mov
sbbb
enter
test
jge
stos
cmp
stos
subb
sbb
inc
sub
loopne
xchg
loop
call
mov
nop
fnstcw
test
adc
cmp
sar
jbe
fisttpl
jp
xchg
stos
movsl
filds
clc
add
xlat
stos
and
pop
imul
sbb
int
stos
jg
push
into
jmp
sbb
ljmp
dec
xor
sti
mov
outsl
mov
sub
es
inc
stos
test
add
jg
pop
mov
adc
jbe
ret
mov
push
dec
push
in
addr16
cmpsb
imul
outsb
stos
or
push
xchg
repnz
and
adc
stos
mov
sbb
bound
sbb
lcall
rcrb
stos
js
loopne
xchg
xchg
in
fldcw
fisttps
mov
sub
or
daa
fld1
and
adcl
das
lcall
mov
mov
mov
stos
xchg
jne
mov
and
sahf
or
andb
cmp
loope
push
iret
sub
insl
ljmp
inc
stos
mov
mov
jl
sahf
add
inc
jo
loopne
cmpsb
std
call
mov
mov
cmpsb
stos
pop
subl
inc
mov
cld
cmp
pushf
jo
mov
mov
stos
loop
add
jl
ret
push
lret
push
push
fnstenv
xchg
ja
inc
in
sbb
call
out
mov
dec
stc
stos
and
in
stos
push
dec
sbb
je
mov
stos
negl
in
pop
lods
dec
push
and
xchg
sbb
mov
loope
fidivrs
clc
mov
and
stos
cmc
leave
cli
fdivrp
ljmp
cld
mov
mov
stos
dec
mov
xor
out
ss
pop
push
cmp
loop
mov
in
daa
mov
adc
jbe
xchg
xchg
loopne
mov
add
dec
stos
lret
jp
dec
mov
pop
lock
inc
in
mov
shrb
mov
insb
xchg
mov
sub
mov
pop
cmc
stos
test
xor
pop
out
dec
lods
loop
inc
stos
mov
or
cmc
ret
lcall
stos
mov
and
mov
mov
or
stos
xchg
push
lock
add
dec
adc
mov
adc
jle
cmp
jns
fwait
in
leave
stos
cs
bound
sbb
subb
dec
imul
ret
or
fwait
js
cmpsl
push
push
xor
test
push
dec
pop
arpl
in
enter
stos
cs
fbld
xchg
inc
adc
mov
ljmp
icebp
mov
lock
cli
inc
iret
popf
subl
popf
mov
mov
int3
cmp
inc
divb
stos
mov
xchg
lahf
jp
push
stos
nop
roll
sbb
shll
das
pop
icebp
stos
loope
inc
stos
ret
mov
xchg
stos
jb
cld
sub
lock
js
or
sti
lcall
stos
adc
shll
imul
arpl
lret
sub
pop
mov
insl
popa
js
les
stos
fidivrl
or
stos
ss
adc
insb
jne
aam
mov
gs
imul
pop
out
out
lods
pusha
jecxz
stos
arpl
sbb
stos
mov
mov
loopne
bound
cmp
mov
inc
outsb
loop
dec
test
inc
in
mov
add
jmp
movsb
pop
mov
loopne
ds
cmpb
push
loope
jbe
mov
outsl
adc
pop
pop
xor
push
lock
cmp
pop
scas
xchg
push
addr16
loopne
sahf
xchg
mov
test
and
addr16
mov
aas
mov
stos
icebp
addr16
jo
into
adc
and
daa
dec
pop
stos
inc
sahf
mov
int
jbe
stos
loopne
nop
outsl
shrl
mov
mov
push
arpl
cltd
pop
scas
cltd
cs
icebp
stos
call
push
and
mov
outsl
mov
leave
mov
pop
xchg
mov
jo
sub
fidivl
mov
xchg
mov
outsb
mov
fwait
and
icebp
sarl
xchg
jae
stos
sub
pop
add
inc
rclb
jl
push
leave
inc
jmp
cmp
lret
inc
js
jnp
stos
pop
in
int
and
sub
repz
xlat
imul
lcall
test
mov
fldt
push
dec
cmpsb
lds
cmp
add
loop
adc
inc
mov
mov
lods
cmpsl
into
je
ds
call
push
cmp
fldenv
jno
add
jnp
mov
mov
in
daa
ljmp
stos
shlb
or
lea
inc
jg
aas
dec
cmp
xchg
jns
xor
call
fsubp
shrb
hlt
pop
mov
inc
out
popf
inc
stos
sbb
mov
push
jns
fdivrl
mov
add
add
lods
mov
jns
sub
testl
xchg
scas
inc
call
jae
stos
sti
mov
xlat
xor
adcb
lock
sbb
out
repnz
mov
mov
fisubs
xor
lahf
popa
add
stos
sub
filds
movsb
lahf
sub
mov
daa
lret
dec
in
cmpsb
mov
cmp
stos
push
adc
or
out
repz
stos
push
and
popa
test
cld
das
cmp
aas
imul
sbb
stos
shrl
mov
stos
add
scas
xchg
adc
sti
jo
iret
inc
mov
cmp
mov
outsb
ret
stos
pop
adc
or
xor
in
loope
stos
push
scas
fnclex
stos
adc
jmp
sub
mov
mov
stos
add
xchg
jle
xchg
daa
into
ret
and
fdivrs
mov
icebp
stos
xchg
aaa
ja
mov
cmpb
and
cmp
nop
add
add
sbb
jg
stos
fwait
sbb
jmp
pop
adc
push
movsb
outsl
les
popf
ret
sbb
lret
stos
jb
cwtl
sub
jnp
cmp
stos
aaa
sbb
mov
imul
cmpsl
int3
xor
jmp
inc
cmp
cltd
push
mov
dec
test
jno
and
xchg
sub
jle
push
push
arpl
mov
popl
sub
test
outsb
int
insl
imul
in
fs
fstpt
mov
std
dec
and
stos
cmp
mov
mov
cmp
mov
lret
jp
cltd
je
insb
and
or
lea
mov
cmp
push
nop
xor
lret
sub
inc
cs
mov
cld
lods
cwtl
stos
popl
mov
out
imul
xchg
cmp
test
imul
gs
ljmp
fdivs
xchg
mov
mov
daa
push
insb
hlt
mov
cli
fdivl
pop
sub
stos
xchg
inc
jp
ds
test
es
daa
sbb
addr16
lock
cmp
push
pushf
stos
jb
mov
push
stos
push
loopne
sub
mov
insl
xor
push
inc
mov
push
or
add
mov
cmpsb
les
stos
pop
and
or
sub
jnp
sub
dec
xchg
decb
leave
ljmp
es
pushf
sub
outsb
jecxz
fldl
insl
stos
pop
repnz
daa
xchg
lock
xor
sub
pusha
stos
or
in
jno
stos
fscale
jae
mov
adc
stos
aas
add
cmp
add
addr16
int3
pop
int
pop
lret
xor
cmpsb
stos
js
xchg
jp
insl
gs
loopne
fwait
add
fwait
adc
or
jne
xchg
bound
test
pushf
fildll
cmp
lahf
pop
lret
stos
push
popa
icebp
xor
xchg
mov
pop
push
dec
push
stos
xor
sub
dec
mov
das
sti
pop
xor
inc
imul
leave
and
cvtps2pd
icebp
xlat
je
daa
ret
data16
jno
addr16
jmp
lods
jle
push
xor
dec
cmc
inc
cld
testl
stos
pop
ja
cs
adc
gs
xlat
add
push
stos
stos
mov
adc
movsb
lods
cmp
add
addr16
in
xchg
aad
push
out
stos
dec
mov
lds
in
xor
rcrl
movsbl
lret
pop
add
push
jno
ficomps
das
and
movsb
stos
sahf
xchg
daa
adc
push
pop
mov
xchg
add
cmp
cmc
inc
cld
pop
cmp
push
sub
arpl
scas
sbb
ds
movb
stos
rcl
test
sbb
cmp
ficomps
jp
scas
addr16
stos
cmp
push
gs
stos
outsb
cld
and
stos
mov
addr16
das
stos
sub
inc
inc
jns
pop
mov
stos
lds
sub
stos
xchg
aam
mov
push
xchg
jae
jno
sub
push
mov
mov
cmp
inc
jmp
repnz
scas
sbbl
jne
push
stos
es
test
leave
adc
stos
mov
inc
sub
repnz
leave
subb
pop
mov
stos
ds
xor
gs
stos
int3
jno
mov
push
push
ficoms
imul
shrl
adc
enter
inc
jmp
xchg
mov
add
sahf
mov
stos
out
dec
cmp
xchg
mov
xor
rcrb
xchg
subl
adc
mov
fs
lea
lods
ds
push
push
orb
lahf
inc
mov
sub
jl
mov
aaa
orl
ret
xor
ljmp
imul
lret
cmc
push
or
jno
mov
push
negb
xchg
mov
inc
cmp
addl
aas
stos
shlb
dec
cs
subb
mov
cmp
in
cwtl
stos
data16
shl
cli
mov
stos
xchg
push
pop
xchg
sub
stos
mov
dec
cmp
popf
and
pop
xor
orl
stos
out
pop
fcomp
movsb
xchg
ja
cli
xchg
std
add
stos
adc
xor
jmp
pop
xlat
cli
sub
into
xchg
enter
push
insb
arpl
fwait
pop
scas
in
sbb
not
cmp
stos
lea
in
cmpl
in
fbld
push
out
popf
sbb
repz
mov
push
sbb
add
adc
inc
and
int3
sub
shlb
cs
cmp
dec
mov
in
jecxz
mov
rcrb
lods
lret
gs
xchg
sub
pop
push
shrl
popf
add
and
into
ret
stos
aad
dec
shrl
push
std
in
stos
xchg
insl
movsb
aad
mov
das
mov
fcoml
lods
nop
fildll
mov
sbbb
orl
pusha
jmp
leave
xor
sub
rcll
inc
mov
cmpsb
lea
addr16
sar
mov
ljmp
fwait
mov
mov
addl
jmp
fisttpll
test
stos
mov
jg
inc
hlt
inc
cwtl
stos
inc
add
push
xchg
jno
imul
movq
stos
loopne
pop
xchg
movsb
or
fildl
movsl
cmp
dec
imul
xchg
hlt
imul
test
mov
mov
pop
mov
mov
les
lcall
pop
stos
push
lds
push
mov
lret
subl
stos
push
xchg
pushf
ret
imul
cltd
cmc
mov
mov
lahf
or
mov
cmp
dec
shrl
cmpsb
lea
stos
jno
and
outsl
into
add
stos
stc
jbe
lret
mov
stos
dec
out
xchg
xor
popf
stos
mov
ret
stos
xchg
cmp
stos
shll
xchg
popf
shlb
cmpsb
jle
mov
lret
fwait
hlt
fwait
imul
stos
iret
xchg
push
jmp
aaa
dec
out
mov
jle
stos
test
mov
mov
mov
movsl
ret
xor
lret
push
stos
sub
roll
out
mov
or
push
inc
aaa
xchg
sarb
stos
jne
clc
pop
pop
or
jmp
xchg
stos
cs
mov
xor
or
jmp
dec
test
pop
imul
or
stos
dec
hlt
call
mov
pop
dec
push
shrl
pop
das
imul
stos
pop
fucomi
inc
dec
aas
dec
xor
scas
dec
dec
int
stos
sub
in
lret
add
cmpsb
and
imul
clc
int
loope
test
jp
add
lahf
pop
cmp
sbb
mov
mov
xor
add
and
cmp
push
subl
and
aam
sub
adc
ret
xchg
dec
insb
push
pop
stos
sub
cmp
imul
push
push
in
stos
jge
loope
popw
pop
fldcw
xchg
mov
shrl
popf
je
imull
jge
mov
cmpsl
divb
mov
jnp
hlt
mov
xchg
mov
jb
scas
xor
shlb
xchg
or
mov
xchg
push
jns
mov
stos
jmp
sub
dec
dec
int3
adc
inc
cmp
push
mov
jmp
xchg
daa
adc
cwtl
fmull
xor
add
enter
xchg
ja
mov
dec
mov
stos
mov
out
push
out
cmc
test
cmpsl
gs
cmp
enter
scas
mov
and
adc
pop
das
mov
xchg
out
addr16
pop
mov
or
lods
aaa
ret
sbb
lcall
repz
stos
cmpsb
add
stos
insb
outsb
nop
and
shrl
jmp
xchg
fwait
stos
push
in
imul
pop
and
test
mov
leave
push
cmp
int3
addr16
repnz
test
scas
lret
jge
mov
pop
stos
inc
pop
pop
push
loopne
sti
sbb
jae
cmc
xor
mov
ljmp
xchg
fistps
icebp
rol
aam
stos
in
test
out
int
stos
add
fwait
cmp
push
stos
inc
aas
xchg
xchg
in
movl
aaa
stos
xor
push
push
inc
cs
or
pop
jns
or
stos
inc
int3
lahf
iret
fisubrs
mov
xor
sbb
pop
lock
add
xchg
and
stos
pop
sti
xchg
test
pushf
push
push
inc
push
inc
stos
inc
mov
leave
push
or
addr16
mov
scas
das
jge
cmp
stos
bound
cs
fisubrs
popl
mov
jmp
lret
arpl
mov
test
xor
inc
mov
mov
popf
imul
ficoml
andl
popa
pop
into
jmp
rcl
call
sbb
sti
std
add
cmpsb
stos
cmp
pop
cli
bound
add
sub
adc
jl
xchg
in
stos
xor
mov
arpl
cmpsl
dec
dec
leave
stos
and
sub
insl
aad
jnp
lahf
into
cli
mov
outsb
stos
push
in
shrl
jb
fdivs
bound
adc
cltd
stos
xchg
inc
jl
loopne
lar
cmpsb
jnp
and
stos
ja
and
ret
jge
rolb
mov
sbb
fisubrs
test
scas
jge
fxch
addb
pop
mov
dec
mov
dec
and
inc
nop
xchg
fwait
xor
fimull
imul
xor
jmp
lahf
mov
in
dec
inc
xchg
inc
stc
stos
ss
pop
push
mov
or
fwait
push
cmp
das
xchg
mov
divb
stos
or
lahf
adc
mov
jmp
mov
lcall
jmp
jb
pop
push
xchg
insb
and
fists
sbb
imul
inc
mov
cmp
inc
mov
jp
adc
cmp
orl
cltd
into
leave
in
test
clc
jle
daa
out
pop
mov
mov
in
sbb
fldenv
inc
outsl
push
call
mov
bound
icebp
add
push
sub
ret
in
jmp
jae
mov
cmc
cwtl
fisubrs
stos
imul
mov
gs
stos
jnp
adc
pop
insb
mov
dec
or
push
dec
pusha
mov
push
and
fs
jo
push
stos
icebp
inc
jle
aad
fmuls
in
push
sub
push
stos
mov
push
imul
sbb
fildll
adc
jmp
rcrl
mov
pop
mov
shl
pop
es
mov
jmp
negl
inc
fcoms
stos
xchg
mov
stc
loope
sahf
lods
adc
dec
mov
sub
cmp
push
fistps
jecxz
ds
enter
adc
stos
mov
stos
scas
mov
test
and
lea
mov
int3
cmp
daa
and
ficomps
lods
jmp
testl
xchg
cmpsl
fwait
stos
mov
aaa
mov
pop
repnz
aad
dec
xchg
es
xor
ret
subb
mov
daa
enter
bound
aam
or
sub
cmp
getsec
or
bound
mov
jmp
push
jl
pop
mov
addr16
mov
push
and
add
int
inc
stos
xchg
xchg
out
sbb
mov
xchg
jbe
and
or
push
pop
jmp
mov
stos
cmp
hlt
cmc
stos
rorl
xchg
int3
inc
jae
in
stos
push
or
jo
cmp
sbb
and
xchg
push
stos
cmp
jae
jmp
arpl
sub
inc
fwait
mov
inc
ret
into
loop
xor
jne
xchg
stos
xchg
out
mov
popf
push
stos
stos
mov
pop
sub
and
jbe
or
xlat
sbb
push
push
repz
or
cmpsl
and
inc
cli
push
pop
je
test
int3
sbb
arpl
aad
mov
iret
mov
mov
jb
test
jle
mov
push
outsb
dec
shlb
jl
adc
cmp
pop
add
movsb
nop
loopne
lods
add
aaa
dec
lcall
arpl
xchg
or
mov
xchg
adc
xor
sub
das
mov
cs
scas
add
test
xchg
cli
push
jmp
lret
fwait
arpl
pusha
jno
shlb
in
mov
js
mull
mov
dec
mov
pop
loopne
stos
jecxz
sbb
xchg
ror
movsb
ja
cli
fisttpll
in
pop
pop
push
movsl
fisubs
mov
jb
jmp
dec
mov
inc
sbb
xchg
in
push
fmull
push
imul
mov
sub
inc
cmp
add
jmp
ja
sbb
dec
or
test
negb
std
stos
icebp
inc
aam
push
xorl
jg
mov
pop
mov
xchg
nop
stos
pop
jno
jne
out
add
jle
lock
inc
mov
aas
addr16
jno
fcmovbe
sbb
or
adc
push
iret
push
mov
outsb
scas
stos
mov
das
sbb
std
movsb
adc
mov
call
aaa
and
test
out
push
inc
pop
aam
pop
iret
sbbb
mov
mov
inc
stos
cmp
push
orb
or
das
in
cmp
fisttps
pop
out
stos
mov
fnstcw
stos
jne
mov
shrl
incl
sub
stos
cmp
icebp
push
gs
mov
fucomip
or
fst
inc
xor
in
shrd
sub
scas
adc
stos
inc
mov
push
xchg
or
jle
fnstsw
fwait
pushf
pop
stos
outsl
loopne
setne
es
cld
enter
xchg
cmc
in
stos
or
xchg
daa
cmp
mov
mov
and
fldcw
mov
loopne,pn
xchg
test
daa
xchg
int3
adc
pop
and
push
xor
rcr
jnp
repnz
push
sbbb
ss
stos
inc
insl
lds
test
push
stos
push
mov
push
in
sahf
inc
ret
sbb
xchg
les
inc
sbb
and
call
imul
outsb
pop
lods
mov
push
or
inc
popa
rorb
xor
sbb
cmpsb
fwait
stos
jo
jae
push
ret
aas
inc
fistl
mov
dec
stos
mov
out
push
fistpll
das
stos
test
jge
stos
mov
int3
xchg
out
stos
mov
ss
sub
xchg
outsb
movsl
out
mov
push
pusha
mov
xchg
mov
adc
aas
cmp
in
gs
or
add
mov
pop
xchg
ret
sbb
stos
and
xchg
sbb
push
push
out
xchg
push
or
in
imul
mov
pop
mov
notl
mov
sub
mov
mov
jb
dec
jmp
std
cmp
fisubl
repz
neg
jmp
pop
mov
lods
loope
nop
inc
push
stos
dec
enter
sbb
xchg
push
add
fisubrl
jmp
inc
orl
pop
xchg
stos
add
xor
gs
mov
daa
dec
and
pushf
mov
ret
das
gs
sti
add
stos
jl
jp
push
adc
and
iret
xlat
stos
in
mov
mov
push
fistps
mov
or
xor
push
add
dec
sub
xchg
daa
cs
stos
fcoml
xchg
sahf
stos
cmp
out
mov
xor
ja
jmp
insb
xor
xchg
xor
stos
push
test
mov
sbb
int
std
cltd
add
jge
out
stos
enter
outsb
imul
stos
push
cmp
inc
sub
adc
scas
stos
scas
pop
cs
or
insl
jmp
enter
adcb
xlat
gs
addr16
or
fsubrl
in
stos
push
gs
std
addr16
popa
nop
ljmp
stos
jl
repz
pop
or
fisubrl
out
shrl
xor
push
leave
pop
andl
xor
mov
jg
xor
fcomps
sub
sbb
rcrl
repnz
outsb
adc
stos
xor
sbb
push
addr16
sub
mov
bound
pop
and
jnp
cltd
fstps
fcoml
add
clc
xchg
mov
or
xchg
cmp
outsl
xchg
cmp
jp
stos
xchg
xor
jb
bound
stos
lock
ljmp
lret
jmp
dec
fldl
fwait
or
lahf
jns
rep
push
or
sub
xchg
clc
stos
inc
jmp
adcb
add
adc
icebp
stos
out
adc
mov
addr16
gs
mov
push
jnp
mov
stos
xor
xlat
cld
mov
dec
gs
xchg
mov
stos
fisttps
pop
stos
adc
push
inc
movsb
sbb
jmp
push
pop
std
adcl
fsub
aas
xchg
stos
xor
insl
aam
pop
pop
jo
jg
jmp
push
aas
icebp
sti
sbb
cmp
inc
stos
in
add
push
cmc
inc
out
data16
push
stos
pushf
xchg
jle
sbb
les
sub
push
mov
push
stos
pop
fmul
mov
inc
aas
xor
inc
stos
pop
in
cltd
out
jae
fldcw
dec
xchg
call
nop
jmp
in
push
pop
scas
fstpl
inc
mov
push
shrl
lret
xchg
xchg
cmp
fwait
sub
pop
mov
sub
in
inc
cld
andb
gs
lcall
stos
and
jo
addb
je
mov
add
fwait
shll
inc
or
stos
push
lea
mov
sub
fisubl
push
cld
cmp
xchg
sub
lds
mov
cmp
stos
or
leave
mov
xchg
sti
sub
xchg
cmpsl
sub
dec
mov
sbb
cmp
dec
mov
adcl
fst
and
in
jp
sub
cmc
pushl
add
stos
ja
pop
ljmp
popa
addr16
fwait
push
leavew
or
ret
push
cmpb
push
dec
xchg
push
xchg
fwait
out
adc
jno
push
aaa
xchg
jp
or
stos
mov
push
mov
in
push
ret
rcr
movsl
sarl
push
lret
dec
inc
sbb
out
sub
ds
aad
jle
adc
jno
es
sti
inc
sbb
jne
ds
stos
test
jmp
pop
stos
dec
xchg
jae
arpl
jg
insb
adc
mov
and
lret
push
or
push
jmp
fldt
cmp
stos
rcll
out
dec
mov
push
in
mov
dec
stos
adc
jl
mov
and
add
dec
sub
loop
loope
ja
lret
cmpsl
out
test
stos
jge
lods
clc
scas
aas
stos
mov
int
aaa
movsb
loopew
stos
inc
insb
cwtl
jns
mov
movsl
sbb
popf
mov
xchg
lods
jne
mov
pop
mov
jbe
or
inc
jmp
adc
clc
test
push
subl
imul
aaa
jl
out
add
out
loop
es
imul
arpl
rorb
adc
stos
mov
das
mov
stos
in
cli
fldt
push
mov
out
stos
mov
lea
lods
xor
adcl
int
call
sbb
xchg
xchg
xchg
jle
jmp
cmpxchg
outsb
or
ljmp
and
sub
jmp
and
inc
add
push
ror
and
mov
rcr
push
adc
mov
insl
xchg
lods
stc
outsl
in
arpl
std
or
mov
stc
stos
iret
xor
inc
stos
cmpb
in
pop
mov
stos
inc
jne
sbb
mov
adc
lret
cmp
xor
inc
jns
pushf
mov
int3
cld
sub
jmp
push
jmp
mov
and
repnz
faddl
arpl
stos
mov
outsl
stos
scas
out
cltd
stc
ja
sahf
inc
daa
sbb
es
daa
fmull
test
and
pop
stos
fs
movsb
inc
popf
mov
push
imul
inc
stos
add
das
sarl
mov
je
mull
subb
orl
enter
insb
adc
mov
or
jp
sub
jns
mov
inc
add
xor
stos
scas
loopne
repz
mov
fwait
aad
jle
xchg
push
jecxz
dec
sub
or
inc
sarb
mov
jle
sub
aad
cmp
mov
inc
insb
hlt
outsb
push
enter
xchg
lret
adc
xor
scas
stc
movsb
and
stos
hlt
pop
adc
dec
mov
ds
pop
stos
int3
call
mov
xor
inc
gs
stos
or
mov
icebp
stos
jbe
pushf
and
inc
push
stos
push
push
clc
inc
into
and
mov
stos
jb
lea
lahf
cmp
ss
xor
lret
jae
stos
cmpsl
fs
push
test
mov
xor
mov
fisttpl
mov
pusha
and
movsb
jl
hlt
lcall
das
dec
push
cs
ss
insb
xor
nop
int3
cwtl
std
xchg
inc
jo
adc
fwait
stos
and
filds
stos
aaa
and
inc
mov
sahf
push
mov
sbb
ficomps
mov
inc
lcall
push
cmp
inc
stos
adc
lahf
dec
mov
test
pop
lcall
lret
mov
mov
adc
stos
call
es
shrl
outsb
dec
loope
mov
sub
icebp
xchg
test
mov
andl
sub
in
push
jmp
fbld
mov
les
cld
stos
jecxz
xor
jns
xlat
stos
loopne
sub
push
stos
xchg
jle
fsubr
mov
jecxz
loope
ret
in
popa
outsb
stos
mov
adc
inc
stos
lods
negl
cli
stos
scas
xlat
add
xchg
loope
cld
jp
pop
jecxz
fstpt
fs
mov
mov
cltd
stos
pop
ds
gs
fs
push
stos
sub
or
sbb
inc
int
aaa
xchg
es
orb
push
ja
sub
les
or
inc
shrl
loop
stos
mov
add
stos
mov
lcall
ja
js
aad
stos
pop
fwait
mov
aam
xchg
in
mov
sahf
jmp
add
xor
sub
lods
mov
inc
mov
gs
inc
adc
cltd
add
je
lcall
mov
sub
dec
inc
adc
pop
nop
lahf
jo
jecxz
rcll
maxps
add
stos
mov
gs
imul
scas
cltd
fs
sub
stos
test
mov
out
add
stos
pusha
and
stos
movsl
pop
push
add
pop
sub
mov
cmpsl
adc
inc
in
sarb
int3
push
lock
mov
sub
orl
sbb
in
cld
pop
mov
jbe
and
stos
jle
sub
daa
and
push
xchg
cmp
cmp
mov
mov
imul
stos
sub
sbb
jmp
pop
ret
fadds
nop
inc
mov
stos
inc
movsl
xchg
xor
sarl
cli
out
push
int
inc
xchg
jnp
xor
pop
mov
ljmp
stc
mov
daa
fwait
dec
and
test
mov
xchg
push
adc
loopne
jg
and
mov
and
mov
mov
bound
jo
andl
arpl
lods
mov
test
dec
cmpsl
stos
or
lea
stos
fcmovnb
ret
jecxz
push
xchg
cmpsb
ljmp
mov
stos
into
mov
dec
sahf
insl
scas
cwtl
or
ljmp
mov
nop
sarl
data16
frstor
mov
dec
ret
lods
mov
stos
or
imul
and
fdivs
rolb
stos
jns
fs
stos
sbbl
push
ffreep
mov
dec
lods
and
mov
std
stos
adc
and
pop
lret
stos
subl
mov
inc
sub
adc
and
cli
scas
stos
daa
push
fists
les
cmp
xchg
cmpsb
ljmp
jno
cld
dec
std
int
stos
add
mov
stos
repnz
jns
xor
dec
jo
loopne
popa
daa
and
xchg
sbb
push
pop
movsl
sub
push
lcall
mov
jno
aaa
pop
lret
pusha
lock
int3
xchg
ret
fwait
cs
or
inc
xor
pop
stos
add
aad
mov
out
jno
test
movsl
sub
push
adc
daa
lret
out
dec
dec
aas
fdivrs
stos
nop
add
jecxz
fdivrl
stos
leave
jne
xlat
sbb
movsl
out
outsb
fnstenv
xor
stos
pop
cmpsb
push
lcall
insb
int
scas
dec
inc
mov
mov
sub
jbe
xchg
stos
mov
mov
mov
stos
int
ljmp
popf
xor
ret
daa
dec
add
sbb
adc
lret
in
test
sti
repz
arpl
sbb
push
or
sarl
leave
stos
push
pusha
movsb
stos
and
push
dec
xor
int
push
jl
iret
insl
mov
dec
repnz
cli
es
hlt
lea
xor
jge
or
sahf
daa
int
xchg
popa
stos
push
inc
addr16
push
hlt
and
cmpsl
vphadddq
xchg
lret
ret
mov
pushf
or
sbb
fwait
cld
xchg
mov
push
in
mov
xchg
mov
lret
mov
mov
stos
mov
cmpl
add
stos
rolb
adc
cmp
cmp
inc
insb
xor
stos
pop
xchg
or
jp
daa
stos
xor
subb
push
jns
scas
sub
xchg
push
xchg
push
pop
pop
pop
test
ja
outsb
or
iret
pop
push
stos
popf
sbb
pop
add
loopne
les
dec
stos
or
sub
jl
rolb
xchg
stos
ds
cmpsb
sarb
and
hlt
orl
or
lret
mov
ljmp
mov
ret
inc
cmpb
iret
adc
lods
mov
stos
inc
loope
xor
or
dec
sub
pop
mov
push
stos
ja
cmpsb
imul
leave
stos
daa
pop
bsf
stos
or
or
hlt
movsl
xchg
movsb
mov
dec
ds
imulb
or
xor
scas
mov
fadd
aas
test
and
mov
inc
imul
or
pop
lods
and
cmp
sti
mov
mov
mov
and
daa
lcall
mov
stos
jmp
pop
or
std
sbb
cmp
stos
icebp
mov
jmp
test
aad
mov
xchg
push
out
daa
stos
add
lods
dec
idivl
mov
ja
stos
clc
cwtl
sahf
or
mov
sbb
out
dec
insl
imul
xchg
pushl
out
icebp
push
gs
ficoms
adcl
xchg
mov
sbb
jmp
loopne
or
and
and
stos
dec
shll
or
mov
xor
outsl
stos
cltd
test
adc
bound
xor
push
dec
xchg
fisttpll
cmp
sub
and
stos
sbb
jmp
or
fildl
inc
pop
mov
aas
stos
into
dec
push
sub
lock
sub
stos
dec
addr16
xchg
mov
lods
dec
mov
stos
mov
xchg
sub
enter
orb
xlat
jo
pop
cltd
jae
in
out
sbb
into
add
iret
stos
pop
lock
jle
sub
rclb
and
test
jmp
lods
push
adc
in
stos
mov
cld
adc
imul
shlb
xchg
stc
stos
pop
mov
ja
mov
pushf
outsb
xchg
sti
inc
adc
pop
stos
jae
mov
jnp
inc
push
pushf
aas
dec
xlat
xor
and
in
call
cli
mov
cwtl
pop
stos
sub
shrl
push
fdivl
pop
mov
stos
fwait
icebp
into
dec
xor
scas
imul
xor
adc
xchg
sbb
ret
in
or
xor
jg
stos
loope
jae
stos
jecxz
push
sbb
mov
xorl
addl
into
std
das
mov
sarl
or
pop
xchg
stos
mov
sbb
mov
dec
lock
fstps
imul
mov
shlb
jmp
mov
test
jo
mov
gs
xchg
loop
pop
shrl
add
jecxz
mov
imul
pop
push
movsl
in
outsl
lods
mov
test
add
incl
mov
stos
pop
insl
push
jno
loopne
xchg
stos
xor
push
inc
jae
xadd
rol
decb
aas
cli
out
stos
lods
in
xchg
or
stos
add
out
stos
insl
cltd
sbb
xchg
jmp
dec
stos
push
dec
out
jge
inc
daa
es
and
pop
cld
lods
mov
andl
roll
mov
test
movsl
stos
xlat
js
sub
jo
mov
mov
xor
fwait
neg
add
insb
xchg
test
push
mov
mov
sbb
stos
repnz
js
xor
stos
fsub
je
push
ret
stos
mov
lock
movsl
shl
sub
mov
stos
xlat
pop
in
jle
pop
xchg
and
stos
aaa
pop
adc
lahf
xchg
cmp
sub
int3
lahf
lods
cld
push
mov
pop
imul
xchg
stos
or
lock
sbb
add
dec
enter
leave
inc
xchg
push
mov
adc
push
pushf
push
sub
cld
xchg
jo
sbb
scas
pop
rclb
subl
mov
arpl
fidivs
cmp
add
adc
xor
orl
stos
test
lahf
inc
mov
push
mov
mov
add
jp
imul
cmp
adc
icebp
stos
lret
cld
bound
stos
orl
xorl
xor
test
xchg
pop
stos
and
mov
movsl
or
push
fdivl
mov
lret
push
lods
fimuls
cwtl
ss
mov
pop
xchg
mov
xchg
stos
mov
jo
dec
mov
sub
xor
jb
stos
mov
xchg
push
pop
adc
dec
mov
add
outsl
repnz
mov
stos
push
jae
inc
gs
or
dec
in
and
sbb
imul
cli
push
mov
ret
dec
stos
sub
cltd
jle
stos
jne
aad
mov
mov
outsb
aad
fbstp
xchg
fcomi
mov
sbbl
fnstsw
jle
xor
outsl
pop
rcrl
in
mov
or
daa
ja
jae
stos
push
sarb
xchg
sub
sub
loop
lds
xchg
sub
cmp
stos
ljmp
out
stos
cmc
std
call
mov
stc
in
mov
push
xchg
mov
fwait
mov
xchg
lods
mov
xlat
daa
popa
mov
mov
mov
adc
pusha
or
in
in
xlat
ljmp
dec
lods
mov
scas
stos
jae
aam
mov
dec
fs
sub
inc
jne
stos
jno
push
das
in
insl
mov
sub
in
daa
cmp
inc
cmp
lahf
mov
call
sub
adc
stos
push
pop
fstl
sbb
push
ds
push
cmp
pop
int
lods
stc
dec
stos
mov
push
out
test
or
insb
xchg
push
xor
stos
in
ffree
fadds
scas
add
cs
mov
lods
testl
mov
inc
shl
push
cs
and
dec
loope
cld
jle
pop
mov
add
bound
imul
iret
pop
call
xchg
stos
cmp
inc
cmp
dec
jg
mov
clc
shlb
arpl
push
or
stos
dec
xchg
mov
insb
fmul
mov
sub
cltd
sub
pop
push
mov
lcall
jmp
cs
pop
mov
icebp
scas
popa
lea
dec
call
mov
push
outsl
popf
mov
push
mov
gs
inc
jno
cmp
stos
cmp
ja
sub
popf
fwait
jns
dec
stos
stc
xor
jmp
das
aad
mov
mov
movsb
sbb
in
adc
stos
pop
int
dec
lcall
fwait
jecxz
stos
repz
dec
aas
mov
or
orb
xor
push
xchg
sti
jp
mov
mov
lock
inc
sbb
add
arpl
in
lahf
mov
stos
or
enter
inc
sbb
stos
jns
dec
adc
push
lret
popa
xlat
inc
stos
mov
in
and
push
add
jp
sahf
jge
sbb
sti
sub
xor
cwtl
lock
mov
test
jae
mov
pusha
mov
jmp
lods
mov
mov
bts
clc
cwtl
jecxz
cmp
jle
mov
jbe
cmp
scas
xor
or
mov
push
or
mov
in
std
jl
mov
mov
dec
jo
imul
xchg
stos
sub
cmc
movb
cmp
stos
fbld
out
hlt
stos
pop
insl
loopne
jmp
arpl
jmp
inc
js
inc
jo
cltd
pop
shrl
mov
out
iret
xchg
rorb
jne
xchg
add
daa
stos
adc
loope
stc
xor
stos
sbb
xor
lock
lea
popa
adc
push
cmp
test
mov
fldcw
lcall
repnz
and
ret
ja
mov
mov
and
fs
mov
sarb
test
push
ret
stos
lcall
fdivrl
in
stos
and
dec
xchg
and
adc
mov
lods
roll
xor
scas
or
leave
lods
or
dec
jp
jbe
imul
nop
loopne
sub
stos
std
push
sbb
jmp
lods
or
mov
sub
xchg
imul
push
xor
cmp
scas
pop
xor
popf
mov
mov
lods
mov
xor
aam
mov
repnz
fwait
mov
stos
cmc
mov
aad
repz
ret
inc
fwait
push
popf
fdivrl
inc
stos
cld
aam
cmp
stos
xlat
in
jo
sbb
in
mov
inc
addb
pop
push
push
mov
icebp
popf
xchg
fistpll
stos
cmp
sti
imul
cmp
and
scas
js
stos
and
outsl
daa
sbb
jb
mov
in
add
stos
rolb
faddl
and
test
stos
mov
dec
repnz
add
push
mov
shll
cmp
call
test
or
jnp
fistl
cwtl
stos
sub
xchg
subl
jmp
jnp
pushf
mov
stos
mov
ja
stos
mov
shrb
jnp
scas
ja
mov
les
xor
mov
subl
stos
sbb
orb
cmp
mov
cld
sub
inc
insl
dec
mov
mov
stos
rcll
sbb
mov
stos
into
jge
scas
mov
inc
mov
sti
pushf
mov
stos
test
adc
stos
das
push
push
adcl
fimull
es
jmp
mov
adc
stos
imul
jne
fwait
andb
jnp
int3
pop
mov
ret
cwtl
xor
repnz
shl
clc
sub
das
mov
das
out
jmp
push
test
popf
bswap
xchg
add
stos
dec
cmp
dec
push
je
jmp
popa
inc
ja
orl
js
icebp
jecxz
outsb
cmpsb
pop
cmp
stos
cmp
xor
inc
movsl
dec
lahf
pushf
stos
jp
je
inc
dec
idivb
dec
fisubrl
aas
jo
lock
mov
xchg
out
mov
push
push
in
imul
aas
stos
jne
and
mov
out
stos
vpminsd
imul
pop
dec
movsl
or
imul
daa
int3
inc
dec
adc
xor
movsb
xchg
inc
fildl
insb
andb
add
dec
rcrl
int3
fwait
push
cs
cmp
leave
dec
bound
sbb
out
cmc
jb
pop
jp
xor
mov
push
mov
js
outsl
and
pop
ljmp
insl
mov
or
in
inc
or
int
adc
out
movsl
and
xchg
stos
jo
dec
cmp
outsl
jae
mov
hlt
dec
js
pop
mov
add
stos
flds
mov
addr16
stos
enter
mov
or
xchg
dec
insb
ljmp
jno
xchg
cmp
push
imul
add
mov
sahf
lahf
add
stos
push
pop
ret
psubb
mov
mov
sbb
xor
ror
imul
jge
xchg
xchg
fsubrl
gs
xchg
ss
pop
sub
and
cs
fldcw
mov
sbb
imul
dec
cmpsl
and
in
sub
stos
mov
cmp
xor
adc
insl
mov
outsb
data16
xchg
out
cmpsb
orl
in
inc
stos
push
pop
or
stos
scas
sbb
mov
push
jge
aad
ret
dec
cltd
push
mov
inc
out
stos
stos
pop
jge
movsl
loop
psubsw
dec
mov
cmp
lods
xchg
sub
push
sub
fwait
divb
addr16
mov
std
mov
addb
push
stos
mov
inc
ja
inc
out
mov
jb
sarb
fwait
nop
stc
cmpsl
fstps
mov
daa
pusha
out
push
stos
out
add
mov
loop
lock
stos
jnp
or
dec
mov
mov
movl
mov
adc
xchg
cmp
stos
inc
cmp
mov
sub
mov
sub
shr
dec
stos
inc
sbb
fwait
rcl
aas
xchg
stos
fsubrs
push
adc
pop
arpl
notb
fwait
and
or
int3
stos
mov
repnz
mov
mov
pop
lods
cmp
mov
pop
xor
and
pop
xlat
movsb
xchg
pop
rol
xchg
cmc
stos
xchg
mov
jns
adcb
mov
cwtl
lret
mov
xchg
into
mov
xchg
xchg
test
inc
sbbb
jge
stos
cmp
push
mov
lahf
push
sti
mov
sbb
cmp
mov
jecxz
sub
aad
daa
repnz
mov
xorl
sarb
daa
stos
jns
test
xchg
push
stos
xor
sti
adc
mov
aas
and
push
push
das
mov
inc
cmpsl
repnz
stos
push
loope
push
sbb
lea
imul
stos
rcrl
jno
test
jns
inc
and
inc
fsubrl
pop
int
hlt
adc
stos
repz
cld
jmp
icebp
shlb
inc
dec
in
lret
psubsw
hlt
nop
stos
inc
rsqrtps
outsl
fldt
jae
mov
mov
and
mov
sub
xor
ds
stos
cs
mov
adc
fwait
cs
push
xor
inc
add
pop
popf
cmp
mov
mov
push
push
rcrb
inc
push
jne
push
cmp
adc
stos
jae
mov
popf
xchg
mov
cld
imul
outsb
inc
cmpsl
test
cmc
push
sub
and
icebp
cmp
and
cmp
scas
fwait
mov
stos
sub
xlat
push
in
add
iret
sti
stos
popa
in
add
ds
rorl
stos
push
dec
xchg
push
push
call
pop
mov
lods
mov
sub
stos
mov
dec
mov
inc
lcall
push
out
mov
aam
dec
ficoml
addr16
shlb
xor
stos
hlt
adcb
cmc
jle
stos
data16
cmpsb
mov
iret
scas
push
mov
pop
stos
aas
lea
lock
lcall
xor
adc
jnp
stos
push
fstpt
jmp
out
add
dec
aad
lods
jmp
cmp
lods
movsl
cltd
stos
push
lcall
stos
faddl
loop
push
push
lret
sbb
xor
mov
std
js
popf
sbb
addr16
add
ret
push
clc
or
pop
icebp
sub
lods
iret
xchg
stos
pop
nop
jp
lret
xbegin
arpl
test
adc
jne
mov
xor
push
sub
mov
jmp
stos
inc
mov
das
push
push
xchg
xchg
sub
test
hlt
ja
imul
ficoml
in
scas
mov
cmp
xor
lock
jne
stos
loopne
das
mov
in
add
push
xchg
dec
stos
xor
mov
stos
pushf
hlt
cmpsb
adc
or
stos
cs
inc
mov
pop
cmp
add
das
inc
dec
stos
inc
push
sub
stos
shrl
mov
pop
sbb
mov
push
mov
stos
xor
push
or
addr16
mov
cmp
loopne
in
sti
xchg
add
aas
es
dec
or
pop
xchg
clc
shrl
inc
cmp
mov
add
pushf
and
pop
jne
fsubrs
pop
lret
sbb
movsb
mov
test
in
imul
stos
popa
lds
mov
fsubrs
mov
stos
cli
xor
jns
and
fwait
stos
add
mov
push
stos
je
push
mov
pop
loop
stos
pop
xchg
cmp
flds
dec
imul
stos
pop
add
push
xchg
sbb
mov
pop
xchg
int
fld
aam
mov
adc
pop
xchg
vmovups
cs
mov
out
movsb
lea
push
std
stos
loopne
aaa
dec
lock
test
cld
jae
push
or
stos
sbb
cltd
nop
lcall
jmp
pusha
mov
imul
arpl
idiv
stos
leave
sbb
xor
outsb
sbb
stos
and
fiadds
test
xchg
stos
aaa
es
pushl
lock
mov
cmp
das
arpl
loope
adc
sub
cmp
rorb
jo
pop
dec
xchg
fildll
and
mov
mov
mov
mov
int3
stos
and
dec
dec
adc
daa
xchg
mov
hlt
mov
jmp
jo
or
and
lret
inc
xchg
cmpl
enter
mov
gs
adc
add
mov
jnp
fdivrs
mov
mov
pop
imul
cmp
ficoms
cltd
hlt
dec
xchg
popa
stos
xchg
pushf
sub
mov
aam
sub
stos
lods
xor
inc
jecxz
fwait
imul
fwait
and
scas
pushw
imul
add
xchg
in
adc
push
adc
cmpsl
add
and
inc
out
popf
arpl
dec
dec
xchg
or
jne
outsl
adcb
sbb
cmpsl
cmc
mov
stos
xchg
inc
push
add
pop
testl
dec
and
add
cmp
sbb
lods
lods
ret
stos
or
inc
mov
inc
stos
add
xchg
and
mov
mov
lock
xchg
pushf
push
cmc
cmp
cli
jmp
lret
popa
pop
or
popf
cmp
inc
jle
movsb
movsl
addr16
dec
aaa
loope
stos
mov
jmp
mov
or
pop
outsb
int
stos
fcomp
or
inc
push
stos
rorl
xchg
scas
or
jmp
les
popf
mov
mov
and
pop
fistpl
mov
in
mov
stos
fistps
repnz
pop
sbb
and
arpl
mov
out
pushf
sub
stos
aaa
sbb
sbb
sub
int
pop
pop
xchg
daa
movsl
cmc
mov
popa
xorb
ljmp
cwtl
ljmp
pop
mov
mov
sub
pop
nop
in
cltd
enter
lds
int
push
fwait
adc
shr
rcll
push
nop
dec
pop
push
cld
xchg
jge
imul
mov
add
scas
icebp
dec
ret
pusha
pop
stos
ja
jmp
jno
fcoml
xor
add
push
inc
cmp
pop
jmp
arpl
std
mov
cld
xchg
ss
mov
pop
js
imul
mov
icebp
xlat
jle
xchg
sbb
jo
hlt
stos
test
mov
stos
sbb
sbb
call
ret
stos
dec
scas
sub
daa
mov
aad
jg
jge
cmp
inc
jae
xor
mov
xchg
stos
mov
in
insl
stos
mov
mov
fldenv
jmp
xchg
jecxz
aam
xor
stos
xor
dec
stos
mov
loopew
xor
imul
or
sbb
mov
adc
adc
jp
fwait
mov
jns
adc
xchg
out
xchg
lahf
gs
je
sar
aas
xchg
roll
mov
jne
ret
and
dec
jae
nop
xchg
test
xchg
mov
stos
fcmove
adc
adc
sub
lods
punpckhwd
pushf
jl
movsl
push
xchg
mov
xchg
lods
push
push
jbe
xchg
std
jns
and
cld
call
pop
push
inc
fistpl
stos
jne
mov
rorl
and
pop
adc
mov
js
xor
add
fists
aas
sbb
mov
cmp
pop
out
dec
fimuls
stos
pop
xor
movsb
mov
xor
add
stc
push
iret
fdivrs
push
andl
notb
gs
mov
jmp
xor
enter
cwtl
pop
out
daa
add
lock
imul
jl
xchg
sbb
and
lds
and
adc
fwait
dec
cmp
pop
mov
test
jg
jno
neg
xchg
in
popa
push
or
jmp
stos
aad
sbb
sbb
loope
stos
mov
lret
stos
sub
popf
cmp
jecxz
loop
data16
inc
lods
lahf
jle
mov
movl
pop
stos
lds
mov
movsb
insl
cmp
mov
fnstenv
xchg
leave
stos
push
scas
pop
push
out
mov
lret
cmp
loope
daa
iret
and
daa
bound
stos
lea
or
stos
jbe
jmp
ja
xchg
push
stos
pop
es
mov
lds
lock
test
ret
xchg
xchg
js
sbb
or
movsl
ret
cmp
mov
sub
popf
ljmp
pop
aaa
ss
add
or
or
cmpsl
dec
sbb
or
jle
jmp
push
jbe
loopne
fsubl
lcall
push
pop
ficoms
and
pusha
in
add
ds
loopne
shrb
outsb
add
movsb
push
stos
dec
jl
loopne
jb
xchg
mov
je
stos
inc
push
leave
test
xor
mov
addr16
jmp
pop
pusha
cmp
stos
cmp
inc
mov
leave
aad
xor
inc
icebp
mov
dec
stos
jnp
int3
or
ret
sub
fistpl
cmp
mov
add
pop
sbb
stos
xor
es
mov
pushw
inc
andb
push
arpl
mov
xchg
je
jbe
les
mov
aam
stos
xlat
lret
iret
sub
adc
cwtl
js
inc
pop
add
xchg
rcrl
int3
mov
or
stos
pop
mov
mov
add
xchg
mov
mov
mov
or
fmul
arpl
sub
jno
mov
stos
fisubs
or
sarl
stos
push
xorb
outsb
imul
sub
aad
jno
add
daa
inc
out
repnz
fildll
pusha
dec
js
imul
cmp
add
add
fstps
test
dec
jo
icebp
stos
adc
fldt
add
leave
fucom
daa
ljmp
xchg
mov
shrl
xor
imul
stos
xor
negb
rcrb
cs
pop
test
stos
ljmp
xor
adc
pop
mov
movsb
stos
jmp
fwait
repz
lcall
sub
push
stos
mov
and
sub
sub
imul
fsubp
pause
xor
push
mov
ja
popa
and
dec
mov
jmp
movsb
xor
or
dec
stos
sub
xchg
lcall
and
imul
jle
mov
xchg
mov
shll
mov
in
ds
mov
dec
push
loop
les
jmp
pop
fnsave
sbb
pop
insl
into
ficoms
push
stos
test
mov
add
loope
fisubrs
cmp
pop
aaa
sbb
mov
lea
imul
ljmp
stos
daa
add
ja
cmp
dec
mov
jno
sahf
lods
mov
stos
mov
dec
sub
scas
out
cwtl
daa
sahf
xor
out
mov
adc
pop
xchg
push
mov
sahf
dec
stos
inc
lods
aam
sti
fimull
cmp
jb
mov
pop
outsb
das
out
sub
roll
and
fs
add
imul
xchg
mov
inc
add
les
jno
add
jmp
and
in
xchg
cs
and
mov
fcomps
cmp
fwait
outsl
test
nop
stos
or
shrl
lea
mov
dec
and
push
mov
stos
cmc
lahf
loope
sub
call
dec
sbb
push
jge
adc
sub
mov
out
mov
loope
pop
and
and
lcall
pop
in
add
and
cmp
stos
imul
xchg
call
sbb
and
imul
addr16
lret
push
in
lds
push
lret
out
mov
adc
sub
push
pop
push
fwait
imulb
xchg
push
scas
push
stos
pop
inc
arpl
imul
test
mov
dec
or
mov
stos
cli
xor
pushf
pop
data16
push
out
ds
push
stos
daa
pop
dec
push
inc
xor
stos
jp
out
adc
adc
loopne
pushf
stos
ret
xor
mov
xchg
in
lock
adc
stos
dec
and
jns
adc
jb
jo
cmpsl
insl
stos
adc
outsl
xorb
inc
fwait
repnz
adc
add
fiaddl
lods
or
cwtl
push
push
sub
cmp
dec
mov
shll
xor
mov
enter
iret
dec
sbb
stos
jmp
es
imul
movsb
sbb
cwtl
stos
mov
push
stos
cmp
or
fsubrl
ret
in
jnp
stc
fwait
pop
jecxz
shrb
inc
lock
cltd
clc
sahf
mov
pop
shrb
stos
mov
xchg
and
rclb
test
xchg
clc
mov
cmpsb
rcll
stos
out
cmp
cmp
push
jns
repnz
add
xor
or
inc
push
dec
cmp
adc
add
inc
rcll
dec
pushf
imul
rolb
pop
xorl
shlb
cmp
das
push
fidivl
ljmp
dec
int3
scas
and
xchg
rorl
cmp
jnp
and
aad
inc
mov
sub
mov
leave
loope
popa
stos
push
push
jmp
dec
loop
xlat
stos
or
test
je
mov
stos
sbb
push
cwtl
mov
nop
leave
lahf
push
stos
gs
pcmpeqw
sbb
stos
sub
test
into
mov
or
stos
mov
cmp
cltd
push
call
cmc
stos
cli
or
xchg
jge
and
nop
and
pop
jo
movsl
pop
rclb
and
js
pop
sub
ljmp
lret
in
adc
mov
add
and
mov
xchg
xchg
stos
pop
xchg
push
jne
adc
pop
push
imul
xlat
dec
xor
stc
inc
jmp
mov
mov
loopne
mov
sti
and
xchg
pop
xchg
xchg
sub
stos
xor
mov
test
adc
push
add
cmp
push
xchg
sbb
sahf
jb
aaa
lahf
dec
lods
dec
cmpsl
imul
mov
xlat
stos
movsb
push
das
add
imul
xchg
stos
cli
jmp
or
mov
cmp
mov
mov
or
sub
jbe
inc
jle
add
stos
out
push
std
or
lds
stos
sub
icebp
push
or
lods
andl
inc
adc
cmp
movsl
das
xchg
xchg
xor
cmp
pusha
mov
push
pop
inc
cmc
addr16
sub
stos
andb
cmp
lcall
test
inc
fisubs
imul
mov
stos
fists
test
jp
jle
jb
mov
data16
fisubrs
and
adc
jmp
stos
inc
dec
xchg
pop
movsb
add
inc
stos
mov
sbb
stos
lcall
adc
punpcklbw
test
rclb
sub
or
jp
stos
daa
inc
sub
dec
rcrl
stos
std
mov
subl
mov
or
push
pop
cltd
or
xchg
push
mov
repz
into
lods
mov
and
jmp
es
push
stos
mov
clc
push
adc
sbb
stos
jle
scas
sub
add
add
mov
les
pop
and
sarb
arpl
sub
cmp
jbe
lods
stos
dec
cmpsb
jecxz
inc
xchg
icebp
and
sub
mov
fs
stos
mov
or
stos
or
js
cmpsb
hlt
push
mov
xchg
cmp
and
inc
daa
jnp
or
fmul
sub
lods
in
xchg
scas
andl
test
sub
stos
pop
out
push
push
out
xor
sub
and
jecxz
add
push
jmp
loope
xor
and
lcall
jmp
dec
mov
jp
mov
int3
sahf
xchg
cmpsl
lret
or
call
lods
xorl
popl
xor
mov
sbbl
mov
mov
add
imul
sub
in
pop
insb
and
jp
mov
in
movsb
stos
hlt
lret
adc
mov
xor
les
stos
and
dec
and
aas
mov
mov
sbb
stos
xchg
test
int
or
addl
jle
pop
sbb
sti
inc
stc
adcl
xchg
xchg
cld
cmp
pushf
cmpsb
stos
jmp
adc
or
jecxz
repz
add
xchg
nop
cwtl
cmpsb
stos
out
test
sub
enter
stos
pop
inc
aas
push
fisubrl
and
pop
add
mov
fs
sub
sbb
mov
jmp
shll
out
dec
dec
xchg
inc
add
scas
cli
and
aas
std
push
sahf
pusha
pop
xor
cltd
daa
adc
bound
mov
scas
xchg
out
test
clc
sbb
add
out
push
and
sti
xor
xchg
xchg
ss
scas
out
negb
push
mov
jg
or
nop
stos
xor
fwait
push
stos
pop
jnp
inc
xor
mov
hlt
cli
lods
out
stos
int
stos
cmp
pushf
fstpt
movsb
xchg
push
imul
dec
imul
lahf
leave
adc
mov
pop
cmp
push
addr16
insl
jnp
mov
stos
bound
fdivrp
jae
sbbb
mov
es
xchg
lea
push
lds
ficompl
imul
xchg
mov
enter
dec
fsubrl
fldz
sarl
mov
xor
and
in
xchg
ds
xchg
subl
mov
stos
sub
je
xchg
jl
stos
cmp
arpl
jmp
mov
cmp
lea
xor
xor
stos
push
add
clc
adc
stos
into
rclb
fstpt
mov
rol
xchg
xchg
mov
pop
xor
cli
mov
imul
lahf
cltd
mov
stos
jmp
sahf
dec
pop
xchg
push
and
fs
lahf
pcmpgtd
inc
mov
dec
push
ja
aad
push
aaa
mov
sub
fs
lea
sbb
pop
popf
or
sti
stos
xor
stos
andb
pop
pop
stos
outsl
scas
fdivp
insl
dec
bound
stos
outsb
lret
aad
push
andl
mov
sbb
or
insb
add
adcl
push
add
xor
push
dec
xor
cmp
ror
stos
je
dec
sbb
mov
orb
fnstenv
lret
push
ret
je
mov
inc
mov
orb
jecxz
add
shr
stos
rcrl
stos
stc
fisttpll
insb
push
stos
inc
cwtl
pop
data16
xchg
push
fldcw
outsb
add
or
cmc
adcl
mov
sahf
dec
push
mov
int3
in
insl
nop
pusha
enter
dec
sti
or
imul
imul
daa
rcl
mov
leave
clc
cwtl
pop
stos
push
push
ljmp
stos
lret
das
sub
push
stos
out
xchg
pop
cs
test
stos
sti
fsubl
mov
jl
push
sub
ljmp
inc
stos
cltd
dec
fdivl
pop
rorb
jg
stos
jno
xlat
loope
mov
imul
repz
pusha
stos
leave
adc
or
ljmp
mov
sbb
dec
enter
stos
icebp
push
cmp
and
stos
mov
mov
or
xchg
stos
push
jnp
dec
add
push
stos
ret
xchg
mov
jl
push
cwtl
mov
scas
std
mov
jle
mov
dec
es
jnp
repz
jl
mov
dec
scas
lret
imul
jnp
stc
push
test
idivb
sbb
pop
jecxz
mov
int3
cmpsb
and
stos
jae
xor
dec
and
out
push
mov
aad
sbb
jmp
movsb
sbb
scas
mov
fistl
lock
pop
das
and
pop
adc
shll
lds
lret
stos
sub
add
inc
inc
fwait
sub
hlt
dec
jmp
movsl
and
rcrb
sbb
in
mov
mov
lcall
popf
inc
in
adcb
stos
and
push
addr16
stos
aas
push
mov
icebp
xchg
pop
ret
lds
iret
dec
jge
aam
ljmp
lcall
push
cmp
jmp
cs
mov
push
pop
xor
in
sub
mov
jle
pop
shrl
outsb
scas
mov
movsb
or
lcall
cmpsl
cmp
cmc
xor
push
aam
lds
push
int3
lcall
notb
mov
das
mov
lret
aas
mov
lods
scas
cltd
push
arpl
stos
out
cmp
sbb
stos
rorl
cmpsl
sub
fildll
fs
pop
stos
sub
or
pusha
stos
xor
adc
cld
and
movsl
nop
js
lret
cltd
stc
jne
pop
cli
sub
outsb
test
mov
imul
out
inc
outsl
clc
dec
jns
xchg
add
scas
sti
add
data16
movd
stos
adc
shrb
orl
stos
fs
xchg
jns
add
std
xchg
or
and
jb
popf
fisubrl
xchg
and
sub
mov
xchg
push
xchg
mov
lret
xchg
test
out
mov
stos
mov
push
lods
int
andb
movsb
in
jae
nop
inc
jecxz
popa
xor
stos
pop
fldln2
mov
stos
cs
notl
push
in
jo
push
fdivrs
xchg
adc
inc
mov
push
fidivs
outsl
stos
cmc
outsb
sbb
xor
lret
mov
lds
lahf
inc
sub
imul
mov
nop
jbe
sub
xchg
pop
mov
lods
rorl
sbb
jbe
nop
xor
stos
inc
shll
sbb
push
jg
mov
jmp
xchg
sbb
mov
cmpsb
clc
orb
stos
jmp
int3
into
stos
les
adc
stos
pop
stos
adc
pop
inc
shrl
sub
inc
stos
sub
sbb
mov
das
mov
xor
bound
daa
mov
fimull
push
jno
les
jae
les
stos
lcall
or
mov
mov
scas
mov
stos
orb
add
sahf
adcl
jecxz
inc
addr16
stos
bound
pop
cmp
jnp
js
xor
xchg
jg
daa
not
pop
shll
and
or
stos
sbb
js
jb
aaa
ss
jo
test
jp
sti
cmc
pop
push
mov
and
idivb
enter
or
mov
lcall
dec
std
xchg
cwtl
jb
sar
mov
jmp
popa
push
sub
sti
stos
aas
inc
push
cmpsb
imul
mov
push
out
dec
testb
add
int
fisubrl
mov
mov
pop
mov
sbbb
in
ss
stos
ljmp
sbb
add
out
sub
testb
jnp
sbb
fisubrs
outsb
mov
jle
xor
pop
stos
push
lea
cmpsb
xor
lcall
mov
mov
xchg
out
sbb
mov
mov
fdivl
stos
ljmp
leave
stos
mov
and
cmpl
ljmp
fnstsw
sub
stos
sti
stos
jecxz
and
mov
sbb
js
xchg
arpl
mov
cmc
jle
or
cld
push
mov
test
or
aas
inc
or
or
lods
int
xchg
jnp
mov
xchg
outsb
xor
dec
cmp
cwtl
in
cmp
or
ds
xchg
jl
stos
dec
dec
sbb
jo
dec
test
push
cmpsl
mov
shrl
jecxz
imul
lahf
mov
dec
aad
fidivs
pusha
mov
ds
cmpsl
sub
fdivr
lret
or
inc
insl
xchg
loope
or
dec
pop
mov
popf
shrl
stos
jge
jno
or
popf
shrb
dec
mov
mov
stos
cmpsb
inc
je
outsl
push
jmp
push
les
dec
pop
fstpl
fists
add
sbb
lahf
pop
xorl
ljmp
pop
in
lock
shlb
jmp
pop
hlt
arpl
in
push
push
sti
dec
test
jle
lods
mov
stos
mov
pop
jp
addr16
fsubrl
dec
ret
ljmp
jg
mov
push
sub
insl
jmp
jge
dec
mov
cli
testl
inc
adc
lahf
int
dec
lret
in
rolb
xchg
hlt
jno
stos
sub
call
xor
push
cltd
add
jp
lods
sbb
ret
push
push
jmp
push
cmp
arpl
aas
jg
pop
inc
iret
fwait
jecxz
popf
stos
dec
xchg
decl
push
xchg
shll
ds
xchg
mov
enter
pop
adc
pushf
repz
sub
dec
adc
in
and
adc
dec
or
sub
lcall
iret
or
outsl
mov
mov
mov
push
data16
shrl
mov
stos
jbe
or
stos
cmpsl
leave
jnp
dec
push
lea
mov
dec
test
or
xchg
test
popf
mov
shr
mov
out
or
jl
add
and
adc
push
dec
pop
jle
dec
and
jns
push
stos
popa
and
sub
stos
ret
xchg
das
scas
mov
pop
data16
scas
repnz
adc
fcoml
jmp
imul
jmp
stc
cli
in
das
xor
lret
rcrl
jl
add
xor
stos
xor
sub
rcll
int3
xchg
imul
gs
mov
int
jns
mov
pop
sbb
fs
das
and
fbld
int
sub
jbe
stos
add
sti
andl
mov
push
mov
rcll
xchg
cmp
xor
and
mov
mov
sahf
js
adc
aad
in
movsb
dec
pusha
stos
das
mov
push
stos
ret
enter
imul
jo
subb
ljmp
popa
ds
xchg
sbb
fs
xor
sub
fistpl
dec
mov
popa
bound
mov
int3
loope
lsl
xchg
and
pop
xchg
scas
insl
push
out
or
sbb
sbb
icebp
fisubrs
xor
xlat
cld
adc
sbb
jnp
bound
test
sbbl
outsl
popf
addr16
mov
fistl
movsl
xchg
cmpsb
in
sub
mov
popa
inc
mov
bts
cmp
gs
lods
mov
movsb
imul
lahf
addr16
out
mov
fiadds
mov
dec
jnp
dec
daa
testl
mov
nop
xchg
xchg
mov
stos
mov
stc
adcb
mov
and
sbb
jnp
nop
jne
jmp
xchg
fidivrl
mov
sbb
test
adc
arpl
scas
pop
loopne
mov
pop
out
mov
mov
and
loope
adc
or
inc
push
xor
test
lcall
or
fwait
adc
mov
dec
mov
icebp
push
mov
mov
mov
fwait
imul
or
out
bnd
in
cmp
or
pop
jmp
push
xor
lahf
stc
ja
in
stos
cmp
decb
ficoml
rcl
stos
xchg
sbb
mov
mov
test
jg
xchg
insb
testl
jbe
lahf
out
stos
jg
push
push
sbb
test
and
aaa
lret
cld
xchg
push
stos
stc
addr16
scas
movsl
lcall
mov
jmp
inc
scas
stos
in
mov
stos
pop
inc
cld
cmp
jnp
imull
xor
sarl
lcall
sub
dec
lock
ljmp
inc
or
lods
jl
nop
stos
out
das
data16
mov
or
int
rorb
fadds
add
stos
inc
adc
lret
stos
push
aas
int3
inc
sbb
fsubrs
insl
jl
adc
sarb
sbb
fidivs
mov
inc
xor
lcall
sub
dec
stos
push
jae
out
mov
lahf
repnz
cmp
int3
cmp
pop
stos
cs
inc
pop
adc
imull
mov
in
ljmp
add
fwait
xchg
cltd
stos
bound
xchg
jmp
mov
in
pusha
cltd
stos
pop
cmp
push
stos
mov
sub
arpl
js
cld
stos
test
pop
hlt
in
pop
push
stos
movsb
jge
pop
adc
and
stos
cwtl
xchg
add
jnp
xor
pop
sti
xchg
ljmp
jl
push
lods
pop
stos
mov
mov
stos
insb
pusha
inc
and
ljmp
fwait
mov
stos
test
lahf
adc
stos
mov
or
cmp
jl
jle
daa
rolb
fcompl
stos
js
movsl
bound
pop
jecxz
sarb
cmp
stos
mov
mov
stos
lods
ljmp
stos
xchg
inc
lahf
cmp
jb
stos
nop
or
int3
iret
pop
cltd
stos
mov
imul
xorl
daa
inc
pop
pop
adc
aad
xlat
lods
dec
sub
fwait
pop
cmp
cmpsb
stos
ljmp
stos
dec
sub
mov
repnz
fwait
daa
mov
rcr
dec
stos
divb
push
mov
stc
mov
xchg
loopne
leave
sbb
xor
add
andl
nop
pop
stos
add
inc
ret
push
adc
dec
cmp
rclb
fisubl
mov
push
xchg
aas
stos
clc
outsl
repnz
jmp
imul
pusha
jo
fstpl
data16
js
dec
mov
pop
xor
je
enter
stos
jbe
pop
mov
das
sub
icebp
cmpsl
repnz
stos
pop
aam
ja
loop
xor
popf
inc
jb
stos
pop
sub
pop
in
xchg
mov
and
sub
pop
cwtl
push
stos
jecxz
add
fcmovu
fs
hlt
lea
pop
stos
daa
pop
int3
ss
out
add
es
mov
rcrb
inc
insb
and
jbe
adcb
add
es
jge
stos
or
mov
imul
mov
pop
insb
and
stos
nop
xchg
pop
jns
pop
fadd
stos
lock
cmp
mov
mov
stos
dec
ficomps
mov
int3
cmp
imul
push
stos
pop
sbb
lcall
gs
je
jo
jbe
jnp
mov
jmp
stos
adc
setno
sub
insl
sub
pop
fsubl
das
dec
stos
sbb
jbe
ror
stc
daa
push
mov
ja
lods
gs
jl
push
mov
stos
xor
imul
push
mov
loope
stos
js
sbb
jns
dec
xor
gs
enter
sbb
adc
pmullw
and
ret
leave
push
lds
cmp
lea
sbb
sub
dec
stos
repnz
and
sbb
stos
pop
fsubr
jmp
adc
add
dec
adc
push
mov
ss
add
ja
clc
stos
sti
fs
rcr
in
popa
stos
rcll
jno
mov
or
push
scas
mov
inc
stos
fwait
imul
cmp
dec
ror
sub
pop
xchg
stos
shlb
adc
rol
push
insb
sub
bound
ret
adc
xchg
jmp
lret
xchg
xchg
fucomp
push
push
imul
xchg
mov
xchg
stos
in
dec
sub
rorb
std
add
pop
sbb
cmp
arpl
cmp
subb
jl
popf
stos
xchg
mov
mov
scas
push
stos
jo
xor
mov
pop
in
jmp
shlb
dec
sbb
inc
out
jo
addr16
and
stos
div
leave
pop
call
pop
cld
fwait
ds
and
jbe
mov
push
stos
or
cmp
test
mov
lret
mov
mov
daa
xor
lahf
adc
push
xchg
stos
ljmp
xchg
and
adc
jnp
stos
and
pop
sahf
std
jns
stos
je
push
push
daa
hlt
and
stos
test
cmpsl
sbb
cld
daa
scas
dec
addr16
pop
dec
stos
push
xchg
fildll
pop
add
decl
stos
xor
aas
es
jmp
mov
jbe
ss
sarb
stos
xchg
push
jae
mov
push
adc
xor
stos
jge
subb
pushf
mov
xchg
pop
mov
mov
adc
pop
in
lret
xchg
es
mov
int
mov
stos
out
jl
rclb
cmp
add
mov
insl
into
nop
stos
push
iret
mov
or
dec
lret
ret
mov
sub
mov
test
xchg
stos
notl
es
mov
sub
fistpl
jno
outsl
jg
sbb
std
mov
fisubs
stos
jno
mov
stos
dec
xchg
fsubr
push
hlt
stos
lahf
in
fdivrp
sub
add
mov
aas
addl
mov
fsts
scas
pop
sub
nop
stos
cmp
adc
hlt
movsb
adc
stc
or
xchg
xchg
cmc
cmp
subl
arpl
dec
fwait
jp
stos
xchg
js
cmc
out
mov
jmp
inc
sbb
scas
inc
dec
mov
imul
pop
mov
stos
xchg
inc
nop
bound
roll
loope
loop,pn
sbb
jbe
sbb
ja
loopne
addr16
add
sbb
ret
xor
inc
mov
inc
stos
iretw
rol
mov
inc
xchg
lret
out
out
subl
adc
orl
fsubrl
stos
addr16
es
pusha
adc
ljmp
jg
jns
stos
out
inc
in
adc
pushf
aaa
mov
dec
push
mov
shll
ret
ret
imul
mov
and
stos
jle
int
push
xlat
stos
sarb
pusha
stc
fdivs
mov
ds
sbb
cmp
jae
jp
nop
stos
xchg
lret
enter
add
sub
and
in
ret
stos
movsb
mov
mov
test
cmp
push
fwait
test
xchg
lret
mov
jmp
pop
rcll
mov
stos
cmp
mov
fs
jl
add
mov
xor
lods
scas
stos
imul
fucomi
mov
stos
out
jge
sbb
cmp
jmp
leave
mov
lods
data16
jmp
and
fnstcw
arpl
int3
fwait
cmp
stos
push
xor
xor
icebp
push
push
mov
stos
cmpsb
pop
inc
and
stos
outsl
in
sub
jle
inc
stos
push
in
mov
outsl
pop
setnp
sbbl
test
sub
stos
insb
das
rolb
test
adc
xchg
mov
call
sbb
xchg
add
mov
jbe
out
stos
roll
and
pop
testb
lahf
stos
push
mov
sub
pusha
ss
daa
push
dec
or
pop
stos
cwtl
jp
cmp
xchg
aam
push
stc
jb
sarb
or
inc
test
imul
mov
push
movsb
dec
mov
cmp
pop
imulb
inc
pop
stos
xchg
lods
repnz
dec
popf
sbb
jb
sub
and
jp
mov
ss
cmp
mov
jns
mov
fisubrs
cmp
lcall
inc
push
jl
add
xchg
jg
stos
nop
mov
out
cmpsl
cld
icebp
dec
mov
lahf
pushf
les
dec
mov
arpl
cmpsl
jnp
xlat
dec
dec
adc
and
aad
nop
mov
dec
call
xchg
sarb
les
fld
xchg
lret
pusha
adc
mov
lea
adcl
aam
xlat
movsb
cmp
xor
dec
mov
push
sbb
cmp
or
aam
ret
stos
mov
rolb
stos
or
pop
js
jle
imul
push
aad
outsb
adc
addl
xchg
mov
stos
popl
xor
dec
ficoms
pop
dec
mov
scas
stos
rorl
test
test
inc
ret
cli
stos
fidivs
lret
int
adc
stos
dec
in
stos
xchg
aad
frstor
mov
ja
xor
cmpsb
fisubrs
mov
adc
jl
bound
or
cli
stos
dec
popa
sbb
mov
lock
stos
inc
rorb
pop
push
push
inc
stos
add
adc
call
mov
push
mov
mov
xchg
test
pop
stos
add
push
mov
or
jb
aam
std
leave
mov
pop
mov
stos
ror
pop
adc
nop
fcmove
stos
inc
scas
fs
rcll
push
pop
stc
mov
adc
mov
stos
addr16
and
cmp
and
push
push
cmp
aaa
addr16
fnstenv
in
fdivl
cmpsl
push
cmp
stos
adc
push
rcll
imul
xor
mov
sub
repnz
dec
xchg
lods
and
jae
mov
nop
mov
stos
inc
xchg
sbb
imul
mov
jno
stos
dec
add
xchg
sahf
stos
pusha
bound
lock
dec
xor
xchg
sbb
and
out
int
popa
jns
js
push
adc
stos
xchg
jge
adc
stos
outsb
mov
sub
sub
orl
addr16
lock
popa
stos
mov
in
add
cmp
mov
icebp
movb
imull
stos
jo
jnp
mov
inc
loopne
dec
shlb
fstpl
cmpsb
addr16
ja
mov
dec
stos
pop
or
sbb
cmp
ds
inc
repnz
stc
sub
inc
pop
add
xchg
je
add
imul
pop
stos
adc
or
movsb
lods
addr16
stos
inc
add
arpl
insl
leave
in
mov
lcall
scas
ret
stos
xor
or
lods
dec
push
in
inc
pop
inc
rcrb
je
mov
out
pop
ljmp
stos
dec
jmp
mov
stos
js
mov
lock
bound
adc
pop
or
fnstsw
les
testb
fbld
hlt
lods
shrb
mov
inc
fldt
xor
and
lea
xchg
cmc
mov
add
add
fwait
rol
fisubs
adc
outsb
pop
mov
gs
test
push
addr16
stos
mov
pop
fistpl
pop
dec
mov
xchg
dec
stos
stos
and
jle
bound
mov
xchg
repnz
mov
mov
add
addr16
sti
pop
mov
push
ljmp
popf
mov
pushf
sub
je
cmpsl
neg
mov
push
stos
idivl
sub
stos
fisubrl
mov
loop
lret
xor
sub
adc
cmpl
cmp
test
jmp
cli
sub
pop
jmp
cmp
push
fisttpl
cltd
xchg
scas
mov
lea
mov
mov
stos
mov
add
xor
xchg
lcall
mov
imul
sbb
or
imul
mov
xchg
daa
fildll
mov
pop
fwait
das
jo
stos
js
scas
int3
mov
xor
xor
clc
ja
push
outsb
test
ljmp
xchg
pop
arpl
sub
xlat
movsl
mov
in
scas
cmp
testb
jmp
inc
ret
adc
jl
pop
jnp
mov
adc
stos
lods
sub
xor
mov
sub
stc
jle
mov
mov
imul
inc
cld
push
mov
inc
xchg
std
cmp
inc
es
xchg
into
fcmovne
push
stos
imul
push
test
xchg
dec
popf
movsl
fisttps
xchg
push
stos
test
or
mov
ret
push
cs
adc
negb
lea
addr16
lea
pop
inc
mov
xchg
lret
stos
add
sub
repz
ficoms
arpl
rcrl
mov
movsb
sub
outsb
xchg
aas
sti
mov
xchg
mov
addr16
mov
pop
or
cld
mov
add
daa
imul
xor
int
ret
stc
mov
add
stos
pusha
fs
mov
fwait
daa
and
jecxz
push
bound
jl
jge
mov
dec
adc
inc
cmp
pop
or
fwait
popf
dec
inc
scas
bound
jl
jmp
shll
xchg
sub
pop
lea
jne
push
cltd
leave
xor
mov
imul
jge
scas
cmp
mov
sub
stos
mov
and
int
push
stos
out
xlat
inc
push
loop
dec
pop
stos
test
iret
sbb
int
stos
pop
addb
stos
push
jp
mov
ja
sub
popf
mov
push
or
xor
or
jl
aam
sbb
in
dec
mov
pusha
out
sbb
aam
or
add
arpl
and
dec
ss
test
stos
loopne
mov
in
jmp
mov
js
push
lcall
push
cmp
xor
inc
ret
dec
stos
lds
push
ds
pop
mov
cmp
mov
and
or
inc
stc
mov
stos
mov
adc
stos
pushf
push
inc
mov
stos
pop
pop
jle
jb
int3
sbb
shll
and
pop
or
stos
cwtl
movsb
out
jmp
mov
sahf
sub
fcomps
jl
push
xor
mov
pop
fsubs
stos
inc
outsl
into
fistpl
mov
mov
sub
mov
push
xchg
sub
xchg
cli
stos
jno
or
inc
rcrl
push
push
jp
mov
lahf
mov
ret
ljmp
rolb
jmp
xchg
repz
dec
jmp
cs
loop
xchg
pop
scas
les
leave
ds
or
xchg
jne
scas
dec
int
cwtl
pop
adc
loop
or
stos
cltd
sbb
stos
repz
loop
jne
push
stos
sbb
fistpll
adc
cmp
jns
test
sub
gs
cmp
or
add
jge
stos
pop
jne
daa
out
stos
dec
movsb
mov
add
shlb
jmp
mov
mov
xor
and
leave
dec
dec
lods
push
stos
into
xor
and
stos
mov
jecxz
stos
inc
and
jo
jae
out
push
mov
xor
stos
mov
aad
stos
or
lahf
jg
jns
mov
divl
xchg
push
stos
push
mov
and
adc
inc
in
fildl
daa
push
jp
mov
mov
mov
mov
outsl
inc
loopw
movsl
ret
fwait
scas
jns
jle
stos
lea
out
outsb
push
movsb
and
ja
loopne
xchg
out
dec
test
jmp
inc
pop
imul
mov
rorl
jmp
loope
stos
aas
jo
nop
pop
leave
std
sbb
mov
mov
stos
and
subb
mov
push
stos
xor
bnd
stc
mov
mov
js
lea
push
popa
dec
dec
jae
fwait
lds
mov
pop
sub
fwait
mov
jg
jecxz
mov
sbbb
push
mov
arpl
daa
xchg
lret
fnstenv
mov
sub
stos
mov
adc
xchg
stos
sub
and
sahf
mov
ret
aam
add
stos
dec
push
gs
daa
pop
out
stos
enter
xchg
rol
stos
sub
fwait
test
inc
cmp
push
pop
inc
and
cltd
shll
outsb
pop
mov
nop
lret
or
rcr
cwtl
mov
or
daa
push
mov
repz
sub
call
inc
imul
xchg
jbe
push
lock
mov
test
sbb
cmpsb
je
push
push
sub
shr
mov
sbb
add
data16
fwait
sbb
imul
addl
ss
push
push
call
xor
pop
xchg
stos
rorl
arpl
cmp
mov
in
pop
pop
iret
or
or
add
pop
lret
je
add
int
stos
cmc
out
gs
xor
push
stos
dec
cmpsl
sarb
sub
loopne
sbb
inc
pushf
stos
popa
mov
data16
mov
imul
mov
mov
stos
push
push
mov
jmp
dec
je
push
stos
les
lret
mov
xchg
in
stos
mov
add
lea
stos
or
cmp
stos
jb
lret
mov
jne
xchg
stos
jmp
andl
dec
fnstcw
sti
lods
sbb
jecxz
cld
stos
mov
js
inc
loop
in
test
and
cmp
xor
stos
pop
jne
pop
clc
fcmove
dec
stos
mov
sbb
lods
mov
stos
inc
lea
push
add
jp
aas
stos
jmp
ret
or
mov
jbe
jl
mov
stos
lods
lods
hlt
cmpb
push
cmp
dec
stos
negb
lods
sbb
stos
jge
and
cmp
daa
ss
push
push
cmpl
dec
mov
cmp
push
lret
mov
inc
pop
stos
rol
jle
mov
or
fsubrl
fwait
xchg
repnz
push
mov
xchg
jnp
push
imul
fdivrl
mov
xchg
daa
push
ret
cmp
mov
stos
adc
mov
jecxz
cltd
inc
cmp
cmp
call
stc
stos
pusha
andl
imul
add
mov
ja
jae
mov
icebp
imull
fbld
lock
fmul
std
cld
rclb
pushf
jnp
push
jg
fwait
aas
hlt
out
xor
notb
xorb
adc
inc
jecxz
add
pushf
or
rorb
popf
testl
adc
mov
int
jle
xchg
cmp
cmpsl
xor
stos
lret
mov
cli
jg
push
pop
add
fists
pop
stos
sub
push
mov
daa
inc
rcl
pop
add
fneni(8087
and
or
inc
imul
stos
jg
ja
outsl
push
xor
pop
int
cmp
jecxz
adc
mov
xor
add
sub
stos
mov
sub
jbe
sahf
pop
pop
arpl
sub
dec
test
xorl
daa
outsl
test
push
inc
jns
int
ret
sub
mov
insl
mov
mov
stos
sbb
cwtl
push
stos
mov
loope
jle
std
stos
aad
mov
mov
fsubl
int
inc
jae
fwait
push
mov
jl
xchg
mov
or
ror
cmp
bound
and
mov
stos
subb
and
daa
sti
insl
cwtl
iret
pop
mov
sbbl
imull
xor
cld
pop
fmuls
xchg
sub
sti
mov
and
xchg
xor
xchg
mov
mov
out
or
pop
stos
insl
push
or
stos
repz
xchg
jno
mov
daa
stos
fsubrp
mov
and
jp
into
int3
stos
call
jle
stos
push
mov
call
xchg
mov
xor
mov
adc
iret
mov
dec
xchg
in
push
mov
sub
sbb
sbb
sbb
sub
lret
daa
sbb
stos
cmp
hlt
xchg
ds
stos
popf
lods
push
mov
add
xchg
shrb
mov
and
fistl
or
stos
pop
addr16
ljmp
jp
ficomps
xchg
pop
sbb
adc
into
shr
popa
insb
jmp
add
addr16
lods
inc
adc
sub
sarl
pop
cmp
fstps
int3
insl
mov
out
test
stos
inc
xchg
mov
xchg
mov
stc
stos
dec
insl
lods
sbb
stos
sub
jg
mov
push
ss
sahf
cmp
sub
imul
push
mov
movsb
stos
and
test
and
and
xor
adc
repz
data16
sbb
dec
fwait
popf
push
stos
and
and
dec
mov
addr16
pop
cmp
subb
ja
jge
imul
sub
stos
mov
shrb
imul
or
xor
stos
int3
xchg
mov
dec
insl
ljmp
mov
stos
adc
cltd
xlat
fisubrs
stos
lods
mov
push
stos
pop
mov
sti
cmpsb
or
lret
or
out
fwait
sbb
stos
pop
sub
scas
cld
mov
pushf
fcmovnb
stos
cmp
cli
and
mov
call
les
push
dec
lock
arpl
stos
mov
stos
adc
push
scas
adc
mov
sbb
fsubrs
fucomi
shrb
push
xchg
clc
loop
aad
sbb
jo
roll
jne
rcrb
inc
dec
sti
xor
hlt
push
push
pop
adcl
xchg
test
loope
cmp
push
jl
ds
mov
pop
ja
popf
and
stos
lea
lods
call
imul
dec
nop
inc
adc
insl
inc
xor
stos
fdivrl
movsl
push
imul
mov
add
jbe
push
cwtl
inc
push
rorl
sub
push
test
push
repnz
lods
dec
inc
bts
jge
js
in
iret
jae
fcomps
mov
dec
and
roll
mov
inc
pop
fldl
shrl
test
int
mov
jg
mov
mov
push
inc
jnp
dec
in
jo
sbb
push
xchg
push
adc
xchg
stos
xchg
mov
mov
jle
cmp
in
sub
or
inc
add
jns
lret
inc
xlat
cmc
mov
bound
add
rorl
add
je
sbb
mov
jnp
lods
mov
cmpsb
mov
adc
stos
nop
sbb
test
stos
fdivp
mov
sub
and
and
test
mov
es
je
int
loop
xor
mov
pop
sub
pop
stos
aam
out
imul
sahf
scas
inc
jmp
enter
icebp
lods
dec
cmp
or
dec
push
push
scas
mov
bound
pop
pop
and
loope
dec
mov
aam
addr16
int3
lahf
test
mov
mov
adc
imul
stos
inc
push
add
adc
out
stos
adc
test
addr16
push
jmp
adc
test
aas
jno
or
les
pop
ljmp
mov
movsb
psubusw
pop
in
cmp
or
aaa
rcrl
push
sub
arpl
and
adc
stos
in
push
lret
cltd
movb
mov
pushf
jmp
mov
pop
repnz
cmc
imul
iret
inc
clc
stos
xor
jbe
mov
inc
or
push
shrl
out
into
scas
lea
imul
rolb
idivl
ljmp
pop
jno
dec
xchg
sbb
jmp
fwait
add
call
fimull
mov
out
cmp
add
mov
jecxz
adc
xchg
push
inc
imul
stos
dec
push
xchg
movsl
imull
mov
sub
negb
gs
int3
xor
stos
cmp
dec
pop
mov
xchg
pop
stos
mov
and
repnz
dec
xchg
stos
lahf
pop
mov
lcall
cmpsl
ja
push
js
sub
outsl
adc
lret
xor
popa
push
daa
inc
pop
or
shrl
ret
dec
cmpsl
stos
in
mov
in
xor
add
pop
xchg
hlt
jmp
das
mov
jo
add
push
adc
stos
iret
dec
lock
inc
dec
jmp
push
movsb
dec
and
imul
xchg
cmp
cmp
mov
hlt
adc
imul
aad
leave
stos
lods
ret
cs
mov
cmp
insl
xchg
add
ret
push
jle
pop
inc
fldt
add
stos
test
es
and
movsl
mov
jae
addr16
pop
hlt
mov
mov
fisubrl
icebp
lea
imul
xchg
sti
adc
xchg
imul
and
arpl
cmc
fs
fstps
xchg
adc
jmp
bswap
pop
xor
xchg
jp
stos
iret
pop
scas
push
pop
pushf
in
mov
pusha
lods
lock
scas
pop
push
adc
jno
push
test
mov
std
les
into
fwait
loopne
fldcw
pop
and
cmp
bound
xchg
or
jmp
ljmp
lcall
enter
push
ljmp
and
shrl
ret
pop
stos
pop
popw
enter
arpl
jmp
andl
cli
push
adc
jmp
lock
cmp
add
cwtl
lret
jo
mov
push
xlat
or
cmp
in
dec
mov
decl
mov
fstpl
push
stos
sbb
ret
pop
push
xlat
mov
out
mov
das
insb
loop
adc
mov
xchg
dec
adc
cwtl
mov
stos
cmpb
push
cmp
addr16
xor
stos
into
push
mull
and
adc
cmc
test
cmp
sub
add
arpl
dec
mov
stos
xchg
fadds
mov
in
push
popa
add
icebp
cmpl
stos
out
xor
fs
ja
pop
adc
mov
adc
or
stos
cmp
pop
je
push
outsl
or
out
push
imul
out
xor
lret
sub
pop
rol
adc
das
and
data16
jae
cmpsl
sbb
or
dec
mov
jecxz
stos
and
in
fisubrs
mov
cmpsl
mov
mov
loopne
mov
inc
jnp
mov
dec
sub
inc
jl
jne
mov
ret
xchg
pop
daa
push
add
sub
fsubrs
sub
cmp
or
mov
sahf
stos
in
push
push
inc
lret
jo
stos
dec
adc
mov
gs
stos
push
xorl
fwait
jae
test
loopne
dec
shrb
popa
mov
stos
rcll
mov
stos
mov
sub
jmp
imul
pop
jbe
lea
jge
sbb
sbb
aaa
ret
les
mov
daa
jo
stos
gs
es
adc
lods
in
data16
andb
dec
inc
sti
mov
add
stos
mov
push
mov
imul
cmp
clc
stos
inc
adc
xchg
pop
in
rep
inc
push
dec
inc
push
aad
stos
cmpsb
lret
sbb
lahf
shrb
int
lret
push
mov
daa
xchg
sub
push
stos
xchg
out
shl
aas
iret
dec
stos
lcall
loopne
stos
xchg
out
add
sarl
hlt
pop
mov
dec
pop
out
mov
pop
into
adc
and
fisttpl
das
daa
stos
enter
or
mov
xchg
cld
xchg
movsb
push
adc
xor
stos
mov
shlb
stos
bound
inc
dec
addr16
cld
mov
xchg
stos
fcmovnb
aaa
enter
xchg
stos
imul
das
sub
roll
add
nop
mov
ds
xor
jmp
cmp
orb
sbb
push
test
fldt
rolb
stos
les
leave
out
adc
mov
insl
stos
push
loopne
and
movsl
xchg
das
lods
and
jle
inc
divl
stos
fstpt
lcall
jge
dec
add
fildll
imul
lahf
push
and
sub
es
inc
stos
pusha
aas
in
mov
notb
sbbl
repz
adc
and
adcl
xor
xchg
mov
addr16
shrl
stos
lods
adcl
leave
lahf
test
add
add
and
stos
jecxz
and
popf
stos
pop
jmp
test
in
and
dec
push
in
sub
cmp
fstpt
dec
mov
stos
sub
imul
fisubrl
mov
adc
or
jmp
stos
adc
mov
pusha
inc
mov
xchg
jnp
mov
insl
adc
imul
jb
inc
stos
sbb
in
lods
stos
jo
aam
insb
inc
in
stos
ret
jp
add
adc
call
leave
xor
scas
stos
jmp
sub
movsb
pop
pop
nop
and
sbb
bound
std
lea
and
inc
bnd
stos
and
inc
sar
and
mov
mov
jge
scas
sti
push
into
sbb
popf
test
cmpsl
ret
mov
insl
mov
aaa
inc
lcall
ljmp
fwait
addr16
mov
stos
or
sub
mov
jg
nop
dec
shlb
or
mov
and
fistps
add
stos
cwtl
cld
sbbb
stos
push
cs
push
cmpl
jo
packuswb
inc
sub
jg
stos
and
imul
pop
mov
jo
mov
cld
out
mov
div
sub
imul
mov
rclb
stos
pusha
scas
imul
xor
dec
pushf
sub
stos
outsl
shll
xchg
sub
push
sarl
movsb
es
push
cmp
repnz
stos
fcomp
mov
mov
jg
stos
jno
add
sub
mov
cmp
jb
pop
stos
mov
mull
pop
adc
in
imul
loop
xor
test
stos
mov
sub
xchg
and
pop
test
lea
mov
stos
lock
mov
pop
stos
mov
adc
out
fstps
jae
add
and
out
lds
sub
mov
lret
mov
rcll
cmp
push
sbb
sbb
je
iret
test
xchg
scas
fldcw
adc
dec
nop
test
xor
mov
xor
outsl
dec
stos
push
sub
sub
pop
stos
cmpsb
jbe
mov
data16
stos
jnp
scas
mov
inc
dec
mov
sahf
fwait
sbb
in
imul
lahf
push
mov
ljmp
loopne
and
inc
xor
data16
add
jl
lods
jmp
add
lods
mov
pop
xchg
sbb
stos
pop
bound
sub
adcl
lea
stos
imul
xchg
scas
jl
icebp
lcall
stos
add
inc
das
push
pushl
xlat
mov
test
push
xor
mov
pop
stos
enter
push
jle
fisubs
dec
lods
cmp
xor
cmc
movsl
outsl
loope
sub
clc
js
sti
xchg
mov
stos
and
scas
ret
test
sbb
stos
jb
icebp
call
add
xchg
xor
insb
stos
pop
enter
xchg
fwait
push
out
cmpsl
cmc
lds
xor
mov
pushf
stos
daa
fld
xchg
push
mov
lods
stos
stos
insb
out
mov
arpl
cmc
mov
adc
mov
in
xlat
pop
rorb
bound
cs
divl
adc
xchg
stos
xor
imul
or
les
out
sbb
xchg
pushf
jns
stos
and
pop
in
stos
pop
out
das
sub
stos
cltd
jp
mov
scas
mov
movsl
or
push
pop
mov
mov
stos
sub
pop
fwait
scas
stos
test
negl
mov
stos
adc
idivb
in
dec
loop
mov
popf
stos
xor
xchg
pusha
sub
cs
mov
out
stos
dec
pop
inc
mov
test
sbb
scas
adc
ret
mov
test
jl
xlat
sub
or
jg
daa
ret
subb
pop
in
je
push
inc
das
popf
mov
sbb
adc
stos
lahf
and
xchg
fisubrl
notb
orb
lea
std
jl
dec
xor
inc
outsb
mov
stos
dec
pushf
orl
clc
push
add
mov
aas
mov
stos
in
xor
push
idivb
inc
xchg
repz
mov
adc
mov
stos
xchg
stos
xor
repz
push
sbb
daa
pop
jae
imul
jb
sbb
stos
stc
scas
cmp
jecxz
push
mov
mov
insb
arpl
jno
pop
in
hlt
xlat
fsubrs
mov
mov
rep
imul
sti
jl
stc
mov
dec
leave
push
jb
into
pop
push
lahf
stos
pop
dec
stos
arpl
mov
cwtl
dec
inc
sub
push
mov
mov
and
sbb
xlat
leave
out
mov
hlt
inc
jmp
stos
jl
or
aad
pushl
daa
je
xchg
stos
pop
mov
push
jmp
mov
xor
fildll
mov
repz
jns
and
imul
outsl
mov
sbb
roll
stos
popf
stos
fldt
sub
cwtl
sub
inc
cs
adc
add
push
and
stos
ret
or
stos
push
mov
mov
stos
orb
push
stos
jl
xor
and
ret
jb
insb
jecxz
cmp
in
xor
push
jle
mov
and
xchg
fdivs
stos
sbb
test
mov
jecxz
stos
mov
or
cltd
data16
shlb
sti
or
inc
repnz
push
scas
jecxz
adc
mov
mov
sub
cld
and
or
popa
stos
fbld
inc
out
rclb
add
cli
dec
mov
into
xor
ss
inc
mov
mov
hlt
imul
xchg
jne
dec
sahf
fimuls
mov
push
and
sar
lds
stos
fistpl
mov
xor
stos
les
loope
lock
ja
sub
add
stos
stos
dec
add
stos
xor
push
std
out
fs
add
jns
xchg
push
cltd
stos
clc
shl
stc
enter
imul
mov
xorb
jecxz
mov
stos
xchg
add
mov
arpl
jmp
popa
outsb
cs
rolb
leave
sti
stc
sub
mov
daa
dec
xor
pop
mov
stos
cmc
add
push
enter
pop
stos
add
sbbb
cmpsl
aas
sahf
pushf
mov
pop
mov
jb
xor
mov
push
stos
movsb
loope
mov
sbb
into
subb
mov
stos
fwait
jno
aad
jle
pslld
lahf
pop
xchg
jecxz
and
inc
data16
push
mov
sbb
mov
xor
lds
mov
push
mov
ljmp
stos
jecxz
lcall
movsl
out
fisttpll
scas
cmc
push
gs
stos
push
stos
sbb
scas
jl
test
xor
in
inc
imulb
hlt
mov
ljmp
mov
cmp
stos
pop
xchg
push
shr
mov
cmp
ret
mov
leave
sbb
loop
sbb
jge
pusha
repnz
je
xor
mov
xorb
or
jb
stos
pop
iret
shr
pop
push
lods
push
mov
stos
leave
cmp
aam
lock
mov
xchg
mov
mov
mov
xor
insl
stos
nop
pop
pop
rolb
jl
idivb
dec
mov
pop
mov
mov
sub
leave
imul
push
daa
sub
popf
movsb
scas
imul
mov
stos
xchg
xor
nop
add
in
mov
or
sti
or
fsub
push
test
imul
inc
sub
adc
push
sbb
fistpl
cmc
stos
mov
icebp
imul
xor
jge
sub
sahf
fsubrs
pusha
xor
inc
inc
xor
stos
fstl
stos
shll
mov
out
orl
ret
jo
mov
addr16
popf
mov
cmpsb
mov
mov
push
push
aad
mov
sub
in
sahf
popf
pop
in
xchg
test
xor
push
push
sub
push
push
mov
movsb
leave
fwait
pop
cmp
rclb
push
dec
sub
cli
stos
cmpsb
cmc
and
mov
jno
stos
sahf
xlat
add
mov
sub
ss
sub
imul
stos
mov
iret
push
fnstsw
mov
cmp
pop
pop
add
mov
pop
push
and
notb
mov
pop
leave
xchg
mov
imul
sarb
je
test
dec
push
mov
rolb
pusha
stos
xchg
inc
movsb
stos
es
push
mov
add
stos
jmp
ja
arpl
push
sub
dec
push
stos
jl
or
mov
and
xchg
jae
insb
stos
dec
and
xor
out
and
leave
push
sbb
cmc
inc
fsubr
xchg
mov
dec
xchg
mov
js
lds
les
cmp
shlb
stos
imul
jns
adc
or
ret
stc
lods
sbb
in
pop
in
gs
jle
inc
pop
add
adcl
xchg
movsl
stos
xchg
aad
mov
rcl
add
das
xchg
push
movsb
stos
in
cmp
aas
es
jge
mov
sub
mov
dec
xchg
mov
repz
jo
std
adc
imul
dec
lea
rorb
imul
push
iret
std
int3
add
dec
sti
and
sbb
rorb
notl
jnp
dec
sub
mov
push
rcl
jmp
push
pop
daa
mov
stos
push
sub
jbe
sbb
sbb
xor
mov
cli
push
adc
scas
stos
mov
or
mov
mov
stos
pop
out
inc
mov
stos
std
pop
andl
push
sub
and
push
imul
fldcw
sbb
lea
pusha
fstpl
push
lret
sti
es
or
pop
insb
inc
fstpl
loop
stos
sbb
scas
sbb
jnp
test
mov
mov
stos
adc
mov
mov
cmpsl
pusha
mov
push
mov
test
mov
fstpt
xchg
sti
adc
push
gs
push
out
ljmp
and
in
xchg
sub
cmp
sarb
mov
stos
out
add
and
stos
pusha
loope
jns
jmp
cmp
sbb
shlb
pop
cld
jge
mov
loopne
adc
cmp
sub
jecxz
dec
add
test
repz
iret
mov
bound
inc
mov
and
stos
cli
xor
outsb
fsubrs
adc
push
mov
sysexit
mov
xor
mov
cltd
int3
or
xor
mov
popf
push
stos
icebp
dec
aad
jns
stos
cwtl
aaa
outsl
call
stos
adc
test
pop
cmpl
fwait
gs
cmpsb
ret
enter
mov
lock
dec
stos
fstpt
add
jo
push
add
xlat
cmp
stos
sbb
pop
and
jns
xchg
test
rclb
addr16
arpl
cmp
pop
ret
stos
dec
imull
lock
sub
mov
mov
andb
test
cmc
sbb
jp
stos
adc
lock
inc
stos
fimull
stos
xchg
orb
lcall
inc
popl
xor
xchg
stos
lods
xchg
fidivl
in
movntq
addr16
mov
mov
fstpt
xchg
xchg
xchg
iret
dec
stos
dec
sub
inc
gs
cmp
mov
mov
add
mov
dec
rcrl
stos
xor
sbb
dec
cmp
and
insl
stos
cs
aam
jp
pop
sub
in
pop
xchg
stos
ss
push
add
sub
es
scas
mov
pop
gs
mov
push
aad
xor
mov
ret
or
ds
addr16
jg
call
stos
xchg
sahf
jmp
pop
push
loopne
push
sub
mov
jae
inc
lds
xor
xchg
icebp
mov
sarl
dec
xor
movsb
bound
cmp
stc
sub
test
sarb
out
jo
outsb
cs
lea
enter
sbb
stos
jg
lods
popa
cmc
ljmp
dec
lds
ret
jno,pn
imul
imul
and
mov
out
test
enter
inc
roll
jge
stos
xchg
mov
imul
jnp
lods
push
stos
cltd
fistpl
aas
push
fucomp
xor
mov
sbb
sub
mov
fsubs
dec
lods
movsb
adc
mov
hlt
stos
sub
mov
stos
std
clc
imul
jns
mov
push
add
rclb
out
push
stos
iret
ja
cmp
std
pop
jmp
lock
xchg
push
sbb
push
add
aaa
cmp
pusha
ljmp
sti
insl
leave
movsl
push
inc
push
fs
cmp
fwait
mov
arpl
or
daa
int
ret
mov
addr16
add
cmpsb
push
mov
daa
stos
add
mov
mov
xor
outsb
rcrb
stos
xchg
jle
adc
movsl
stc
lahf
stos
cs
cmp
inc
hlt
pushf
jmp
cs
stos
mov
cmp
add
lahf
cmc
stos
xor
and
nop
stos
dec
gs
adc
iret
jbe
stos
arpl
dec
jecxz
fldcw
fwait
push
ja
stos
xlat
cmpsl
outsb
and
ficomps
stos
ss
or
scas
hlt
add
movsl
dec
iret
inc
inc
jmp
stos
inc
inc
mov
in
int
in
out
or
dec
stos
cmc
stos
adc
stos
mov
and
mov
repnz
push
mov
pop
loop
push
std
stos
xor
outsb
cltd
dec
xor
sti
stos
push
adc
push
sub
push
les
inc
stos
test
push
pop
push
mov
xor
xchg
pop
push
stos
fs
push
stos
pop
mov
in
out
adc
mov
cmpl
sub
pop
imul
xchg
stos
orl
add
pop
aam
sbb
scas
mov
outsl
mov
xchg
sub
sub
mov
pusha
or
xchg
or
mov
xor
imul
mov
jns
mov
adc
sub
jae
sub
xchg
sub
mov
mov
add
sbb
clc
shl
cmp
sbb
lret
or
incl
hlt
cltd
stos
scas
pusha
js
in
imul
daa
sti
cmp
hlt
fdivrs
scas
not
imul
jae
inc
inc
push
in
jl
push
repz
cmc
lods
xor
adc
loop
jge
scas
js
xor
pop
mov
cmpl
pop
andl
mov
xchg
sub
lret
inc
iret
dec
int3
xchg
push
repz
xor
pop
cs
sbb
repnz
xchg
push
stos
or
fidivrs
xchg
outsb
in
stos
cmp
inc
pop
imul
roll
shlb
stos
sbb
dec
in
inc
jecxz
fwait
nop
xlat
popw
and
mov
jmp
inc
in
adc
stos
push
lods
clc
and
sbb
int
and
gs
jmp
xchg
pop
stos
cmp
sbb
xor
cmp
sarb
cltd
mov
imul
icebp
and
xchg
pop
cmp
adc
jbe
stos
mov
pop
adc
push
and
mov
and
lods
sbb
les
stos
notb
pop
stos
sbbl
aad
pop
push
stos
aam
mov
popf
add
out
dec
jb
loope
aas
mov
jbe
push
adc
adc
lret
sbb
xor
ja
sub
sub
mov
mov
arpl
mov
sti
mov
inc
jl
add
jnp
subb
or
pop
shr
stos
js
lret
stos
fmull
pop
jo
ja
mov
fwait
mov
mov
lods
mov
fiaddl
or
into
aad
jo
sub
xchg
or
movsl
sbb
and
inc
daa
cmp
stos
mov
movsl
loope
stos
pop
lock
xchg
dec
xchg
in
ds
mov
lret
nop
push
pop
stos
dec
scas
mov
movsb
insl
inc
jg
in
cmp
mov
push
cmpsl
arpl
outsb
lods
shl
xchg
insb
mov
dec
pop
or
jns
pop
xchg
mov
cmpsl
icebp
aas
loopne
stos
jb
jno
push
mov
inc
pop
cld
cmpsb
sbb
inc
popf
sub
jmp
push
pop
dec
out
cmp
xchg
jb
stos
loopne
fcomip
mov
das
rorl
mov
lcall
xor
lds
mov
fwait
push
adcb
jmp
cmpsb
xlat
imul
jnp
cmc
mov
stc
dec
push
pushf
ss
pop
stos
lds
sub
push
in
test
cmc
stos
jle
cmp
rolb
cltd
jnp
xchg
lahf
push
out
dec
lds
scas
pop
jbe
int3
lcall
jmp
mov
pop
popa
lods
jp
adc
adc
stos
ret
mov
stos
lods
ja
fidivrl
xchg
add
in
mov
subl
stos
mov
sub
xor
mov
sub
sub
mov
stos
jp
fldenv
mov
or
pop
cmp
imul
mov
push
jmp
clc
adc
mov
xlat
and
pop
xchg
movsb
push
stos
mov
outsl
xchg
push
daa
sbb
sbb
aaa
ljmp
lcall
scas
stos
stc
mov
lds
popl
or
sub
daa
int
cli
sbb
repz
mov
rcrb
xchg
in
xchg
pusha
jns
stos
je
mov
idivl
rcr
scas
enter
xchg
push
imul
mov
stos
sbb
test
cs
stos
mov
movsl
ret
adc
or
stos
sbb
add
push
lods
fxch
inc
stos
lahf
jae
push
stos
lods
ss
sbb
scas
xchg
cmp
sbb
scas
sub
xchg
xchg
mov
add
or
imul
sti
pop
adc
xchg
cmp
movsl
xor
aas
lods
and
sbb
or
lahf
dec
cmp
stos
pop
push
jmp
push
add
cwtl
sti
inc
xchg
jae
cmp
lcall
inc
repz
sahf
lret
jge
xchg
cwtl
cmpsb
stos
sarb
xchg
stos
ljmp
dec
addr16
popa
dec
in
mov
les
mov
xlat
cli
loope
or
pop
subl
cmc
cmp
inc
pop
fdivs
stos
andl
cmp
sbb
stos
mov
mov
test
out
xchg
stos
lock
call
stos
bound
and
add
stos
inc
or
inc
flds
mov
jnp
jmp
stos
jbe
mov
mov
popf
lret
add
sar
stos
adc
jge
out
shr
add
xchg
in
outsb
stos
or
add
daa
xchg
mov
lods
sbb
jo
push
inc
pop
sub
stos
push
fdiv
adc
mov
cmp
movsl
lret
mov
ja
popf
inc
gs
add
cltd
mov
stos
shr
loop
sbb
popa
xchg
mov
mov
ret
stos
push
or
aas
std
push
and
popf
push
xchg
sbb
xor
out
mov
sub
cmc
and
adc
push
fsubp
push
cmc
into
int
leave
push
nop
popf
cmp
in
lret
lds
out
adc
out
fwait
ja,pn
cmp
xchg
mov
fldcw
inc
inc
cmp
cmp
dec
sbb
jno
push
mov
jmp
addr16
rcrb
jecxz
add
jp
shrl
enter
adc
add
mov
in
loop
das
pop
sub
stos
mov
push
adc
out
cmpsb
cwtl
ss
jmp
ja
dec
lcall
dec
adc
stos
pushf
sti
neg
fs
sub
lds
cmp
cmp
cmp
pop
jmp
fbstp
ret
shrl
icebp
xchg
lahf
bound
test
repnz
jns
in
xchg
inc
mov
rcl
repnz
out
pop
or
jnp
xor
pushf
mov
mov
or
lahf
add
push
addr16
mov
imul
bts
in
inc
fucompp
sbb
sti
adc
movsb
out
inc
je
and
mov
addb
call
push
push
or
outsb
sub
cmp
mov
jmp
push
add
leave
push
movsl
dec
add
stos
push
rcl
outsb
sub
xor
mov
stos
dec
iret
imul
movsl
mov
mov
mov
push
pop
mov
dec
push
lahf
mov
outsb
mov
stos
xchg
adc
adc
rcll
into
lock
fs
push
imul
jne
sahf
movsb
outsb
scas
fcmove
mov
push
sbb
loope
cmp
mov
inc
into
or
jl
and
push
ja
cmp
adc
and
pop
push
push
out
test
xchg
stos
sub
dec
xor
xor
or
stos
ficomps
ja
jmp
andl
ret
dec
mov
sahf
leave
insb
lods
add
in
pop
or
mov
cmp
mov
in
scas
push
loopne
hlt
popa
sahf
test
ret
jge
stos
cmp
repnz
push
stos
adc
mov
imul
popa
cmp
stos
pushf
sub
xchg
add
imul
scas
sub
mulb
sarb
dec
lods
jmp
int3
adc
push
or
sbb
stos
cli
dec
push
movsb
dec
and
pop
cli
mov
sbbl
fldt
cmpsb
cmp
sbb
sub
sub
jge
cmp
xchg
cmp
stos
rcrl
dec
subl
mov
inc
push
or
stos
pop
nop
sbb
in
xchg
cmc
shrb
adc
arpl
sbb
nop
jns
inc
lahf
test
jne
in
or
inc
cli
xor
roll
dec
jmp
cld
bound
cmpsb
mov
sbb
mov
cmp
lods
mov
cltd
adc
mov
fcompl
fwait
lds
iret
pop
orb
sbb
pop
fwait
dec
mov
pop
jb
iret
mov
add
int3
mov
sbb
sub
out
jg
xor
sti
ficompl
or
je
mov
movsl
jl
out
adc
jbe
push
and
mov
shlb
pop
dec
inc
lret
jp
out
ret
ljmp
sbb
gs
fwait
dec
aad
fisubrs
out
pushf
into
mov
jmp
cwtl
or
call
jle
stos
mov
mov
stos
mov
arpl
mov
dec
mov
cmp
out
jmp
les
in
xor
stos
sbb
mov
neg
xor
sub
lods
push
sahf
rcrb
leave
in
cld
fwait
lea
xchg
xor
sbb
adc
aas
mov
dec
adc
sub
xchg
sbb
stos
imul
rclb
mov
mov
rcll
sahf
int
jl
lret
jnp
stos
jmp
outsb
ljmp
cmp
sbb
in
jmp
sbb
mulb
fwait
movsl
in
stos
sub
sahf
imul
fdivrp
stos
push
ja
iret
jne
ds
stos
or
lds
sahf
lret
sbb
loope
push
mov
stos
and
push
xlat
stos
mov
out
xor
aas
dec
je
rcr
or
jnp
push
stos
addr16
fwait
cmp
jmp
jecxz
inc
xlat
add
out
dec
push
add
xchg
ret
fmull
jns
add
in
cmp
cltd
pop
mov
push
cmpsb
jo
data16
mov
idivl
mov
gs
xor
or
xchg
into
mov
arpl
mov
cmp
push
xchg
adc
jecxz
jmp
out
and
pop
negb
sarl
in
jne
aad
xchg
cmpsl
mov
or
dec
mov
adc
out
shll
adc
loopne
scas
mov
mov
mov
pop
adc
jbe
mov
add
roll
out
cltd
in
cwtl
stos
mov
arpl
pop
stos
jl
ja,pt
and
stos
scas
add
sti
xor
or
stos
mov
fsubr
dec
xchg
mov
shll
lcall
pusha
jno
je
jbe
loop
mov
dec
push
fwait
mov
sti
fiadds
dec
push
sbb
arpl
xlat
xchg
sahf
shrl
icebp
jnp
stos
leave
sub
pop
repz
add
sbbb
enter
mov
jbe
lea
inc
dec
xor
cli
in
movsb
loope
inc
stos
xchg
or
gs
jbe
jmp
add
shrb
mov
and
mov
mov
jp
stos
addr16
mov
inc
jmp
subl
stos
fs
filds
inc
xchg
imul
sub
nop
enter
push
stc
xchg
int3
jo
fisubrs
mov
sbb
fidivl
or
iret
lahf
sahf
xchg
jmp
mov
xchg
jnp
jae
and
jge
insb
or
pop
push
dec
cmpsl
or
addr16
lretw
xchg
cmpl
shrl
xchg
stos
or
mov
push
mov
mov
daa
stos
xchg
sbb
dec
stos
inc
jmp
mov
push
insl
lods
fdivrl
leave
mov
cwtl
into
loopw
add
jecxz
in
sub
das
hlt
cmp
lcall
sarl
sub
ja
cmp
test
jno
js
iret
and
pop
ret
mov
jmp
ret
movsb
mov
mov
adc
call
sub
xchg
das
shll
xchg
mov
pop
scas
mov
dec
push
mov
inc
jnp
xchg
lret
pop
outsl
inc
rorb
mov
loop
xor
or
and
cmpsb
lods
mov
inc
cmp
addl
cmp
dec
scas
mov
lcall
xchg
cmp
jbe
dec
inc
jb
xor
mov
adc
dec
stos
mov
sbb
push
or
out
sub
jbe
cmpsb
dec
cmp
in
pushf
mov
mov
mov
mov
jg
js
in
les
test
stos
or
lcall
test
fcomi
cmp
stos
addr16
out
xchg
mov
inc
stos
inc
lods
std
mov
daa
pop
mov
stos
and
mov
or
xchg
push
mov
mov
xchg
pushf
mov
xchg
stos
inc
adc
ljmp
repnz
add
lods
jbe
mov
movsb
loope
stos
fimuls
xchg
popf
aam
and
stos
pop
in
mov
or
add
test
pop
stos
ds
xor
shr
stc
stos
repz
mov
or
subl
stos
dec
jae
pop
xchg
pop
lods
stos
xchg
lods
mov
addr16
dec
xchg
push
sub
sbbl
stos
add
inc
out
fsubl
in
iret
fwait
mov
jo
cli
adc
fsts
stos
enter
pop
in
pop
mov
inc
adc
push
push
mov
stos
sbb
jae
in
xchg
iret
fwait
push
pop
or
aas
mov
imul
notl
add
mov
cli
mov
loope
scas
push
shrb
inc
out
dec
stos
xor
pop
into
lcall
jge
inc
pop
out
xor
lahf
test
lret
cld
push
or
xor
outsb
stos
fwait
dec
int
mov
push
es
and
daa
push
pop
stos
ljmp
and
mov
hlt
jmp
repz
lea
daa
and
jg
xchg
mov
add
sti
in
and
push
stc
pop
and
sbb
test
mov
fwait
inc
mov
mov
aas
xchg
push
cmpsb
leave
or
mov
or
ljmp
iret
dec
and
daa
les
shll
fisttpll
mov
stos
imul
cmp
xor
fstp
stos
pusha
xchg
add
sbb
sub
popa
lret
dec
sbb
add
mov
les
mov
xchg
inc
or
xor
dec
ljmp
ss
push
add
es
pop
mov
dec
les
scas
sub
outsb
lcall
test
jle
stos
xor
shlb
add
addl
ss
fsubl
sbb
stos
test
sub
push
inc
inc
jo
or
out
stos
adc
mov
in
xchg
imul
addr16
cmp
stos
mov
jns
pop
movsb
test
xor
or
in
dec
cmpsb
call
mov
arpl
ljmp
lods
cli
stos
shl
out
pop
cmpsb
into
xchg
xchg
stos
mov
cmp
xor
jg
frstor
adc
in
push
and
jp
mov
cmp
xchg
mov
push
repnz
cmpsl
imul
dec
stos
jne
xor
cltd
fbld
stos
ja
sbb
bound
insl
les
adc
inc
popa
or
in
adc
stos
jmp
xchg
fistpll
lods
mov
cs
stos
rcll
push
mov
bound
sub
pop
stos
sbb
jno
pusha
push
pop
sbb
test
js
jo
mov
stos
fstpl
mov
push
ret
in
xchg
mov
jno
add
ljmp
cmpsl
jne
movsb
jge
cs
cmp
adc
les
fwait
pop
xchg
stos
and
inc
imul
rolb
xchg
or
jge
fst
dec
stos
in
xor
in
sbb
xor
testb
cmp
mov
inc
ljmp
stos
rcrb
cmp
add
jle
dec
dec
out
je
in
dec
and
std
fwait
fs
inc
test
aad
adc
inc
inc
popf
stos
fldcw
add
dec
push
and
bts
bound
out
pop
mov
mov
stos
lret
and
dec
enter
out
push
pop
imul
sub
mov
stos
add
sbb
outsb
inc
stos
push
dec
sbb
scas
lret
stos
out
jne
sbb
jle
cmp
mov
lea
icebp
es
dec
dec
stos
ficoms
push
fmul
pop
pop
sarb
and
inc
push
test
or
jp
xchg
jl
xchg
in
into
fs
xorb
stos
loop
popa
jae
ret
push
push
test
lahf
adc
data16
add
in
and
dec
cltd
addl
ficomps
mov
mov
xchg
adc
decb
loopne
inc
stos
pop
and
pop
inc
hlt
imul
mov
sbb
ss
mov
aas
xchg
pop
cmp
shll
imul
jno
mov
inc
push
inc
outsb
pop
mov
outsl
stc
clc
stos
testb
push
enter
add
sbb
xor
and
mov
mov
inc
jmp
inc
sahf
xchg
iret
jne
cwtl
sbbb
jno
das
xchg
xor
and
outsb
mov
test
mov
lahf
mov
loop
xchg
mov
adc
xor
cli
cmp
or
add
mov
ss
out
xchg
xchg
pop
and
outsl
repz
adc
js
call
aaa
fcmove
jp
stos
adc
xchg
mov
movsb
pop
scas
jmp
in
int
fsubs
mov
fwait
push
scas
or
leave
ds
pop
sbb
frstor
shrb
mov
movsl
or
inc
sbb
cltd
or
sbb
lods
sub
pop
adc
je
push
dec
in
stos
push
leave
stos
imul
fcomp
and
nop
les
js
adc
pop
scas
mov
adc
js
fs
jp
mov
pop
cld
mov
pop
out
adc
stos
pop
add
lds
mov
stos
sahf
in
xchg
lahf
inc
stc
stos
setbe
mov
push
dec
test
js
mov
xchg
fwait
adc
mov
sub
add
fsubrs
movsb
cltd
arpl
cwtl
push
negb
jle
lahf
jo
movsl
add
imul
out
cmpsb
stc
nop
sbb
stos
inc
mov
dec
stos
jge
xor
adc
jae
inc
xchg
repz
xchg
daa
xor
popf
loopne
add
stos
popf
sbb
adc
pop
push
test
or
pushf
inc
add
adcb
dec
stos
call
cld
negl
stos
ja
inc
movsl
mov
stos
negb
lahf
popa
stos
lock
jmp
ret
mov
mov
jb
and
out
mov
ds
fcomip
stos
movsl
call
arpl
aad
imul
xchg
pop
stos
dec
es
inc
xchg
iret
mov
cmpsb
dec
mov
stos
sub
xchg
dec
imul
lret
out
test
stos
std
imul
sbb
imull
and
daa
pop
test
cltd
jmp
push
xchg
out
test
jns
ficoms
cld
or
jb
or
pop
jmp
xchg
iret
sti
lea
bound
sarb
mov
cld
enter
scas
fs
mov
add
mov
cwtl
ss
push
sub
sahf
and
xchg
mov
add
in
in
repnz
jns
adc
aad
stos
sub
bound
jmp
sarl
pop
and
movsl
mov
mov
and
hlt
dec
mov
outsl
stos
and
sti
mov
mov
cmc
stos
divl
mov
mov
sub
test
inc
gs
lods
mov
cmp
test
fstpt
and
fs
pop
sub
adc
mov
jns
lds
ret
xchg
sub
mov
das
push
jge
aaa
sahf
insb
fwait
test
lods
mov
push
pop
mov
lret
add
dec
mov
pop
lods
inc
daa
sub
jge
mov
imul
push
int
jmp
push
mov
xor
lds
jecxz
movsb
adc
imul
stos
sub
flds
ja
mov
push
cs
ljmp
xchg
mov
mov
xor
and
sub
inc
jmp
and
cmp
shrb
out
sub
stos
jp
mov
test
pop
mov
fldcw
repnz
addb
jle
add
cmpsl
stos
jg
mov
cmp
inc
out
jmp
mov
jns
mov
sbb
addr16
dec
and
stos
not
gs
test
roll
xchg
xchg
add
mov
pop
sbb
jbe
cmp
test
in
jp
fdivr
adc
push
jo
jecxz
loop
roll
iret
cltd
pop
mov
cmp
ds
mov
aas
jmp
push
sbb
in
mov
xchg
cmp
add
cmp
sbb
sub
insb
push
daa
stos
ja
incb
sub
jns
fcmovbe
push
fldenv
imul
xchg
xchg
lret
fists
adc
cli
push
addr16
into
es
mov
push
mov
lds
jmp
stos
jb
sub
mov
and
sbb
lods
mov
and
lods
mov
movq
push
mov
push
fwait
inc
jae
jnp
or
leave
inc
push
jmp
fdiv
sbb
lret
cmp
and
or
cltd
sbb
scas
jb
ret
lret
std
out
mov
mov
cmp
fwait
pop
or
jmp
fists
inc
cmp
push
stos
mov
push
cmp
xchg
jmp
push
push
jmp
adc
sbb
xchg
scas
jmp
mov
stos
leave
repnz
lahf
mov
dec
stos
popa
add
outsb
jmp
or
out
inc
mov
stos
jmp
or
stos
dec
js
aaa
xchg
fnstsw
mov
xchg
mov
cmpsb
inc
fwait
les
stos
incl
ret
and
mov
xchg
les
stos
inc
inc
fbstp
data16
sub
cmp
cmpsb
dec
inc
bndstx
cmp
pop
es
fwait
or
out
fwait
jbe
jle
xor
fwait
outsb
clc
rol
imul
fldt
cmp
pop
xchg
dec
pop
arpl
push
mov
lock
sub
lods
push
and
sbb
dec
sub
jp
xchg
out
jne
pop
sbb
mov
add
stos
pop
inc
dec
sbb
mov
cmp
mov
movmskps
popa
into
subb
cmp
jmp
xchg
in
sub
add
mov
jg
les
pop
punpckldq
fsubrs
push
dec
lret
xor
js
test
out
loop
push
mov
xor
adc
mov
pop
mov
xchg
stos
cmc
sbb
add
push
fisubrl
dec
stos
inc
adc
or
xor
and
lds
lcall
push
in
push
fiaddl
mov
fwait
and
stos
mov
stos
ficoml
jb
push
pop
fildl
adc
loopne
cmp
out
aam
insb
xor
pop
mov
cmp
imul
push
mov
mov
rorb
mov
js
das
in
push
stos
sbb
test
ljmp
mov
lds
cmp
test
mov
or
jl
stos
cld
adc
mov
ss
jb
lret
xchg
cmpsb
stos
add
fisttpll
inc
mov
mov
enter
fabs
pop
movsb
mov
xchg
or
or
rol
cmp
stos
xor
inc
mov
call
mov
leave
enter
into
jns
flds
push
out
sbb
dec
stos
mov
pop
les
fstpt
jmp
lret
pop
outsl
inc
push
rclb
push
jmp
dec
jns
inc
jmp
fldt
repnz
adc
sbb
jno
movsb
sbbl
sub
popf
lret
ret
nop
or
stos
dec
dec
lret
arpl
sti
cwtl
mov
pusha
lea
fs
xlat
stos
rorl
pop
lds
jmp
stos
or
hlt
jecxz
daa
lea
je
pop
jle
stos
add
pop
pop
xor
clc
das
cmp
stos
test
mov
mov
out
jg
dec
mov
mov
repnz
aam
adc
push
add
stos
add
int3
pop
dec
test
fsincos
sub
fwait
lret
das
stos
cmc
mov
neg
repz
rcrb
test
pop
xchg
add
js
outsl
int
inc
stos
jmp
add
arpl
movsl
stos
mov
adc
xor
xchg
bnd
add
push
ret
stc
jne
mov
nop
lea
and
add
fidivrl
clc
aad
stos
movsb
push
cltd
inc
sbb
mov
dec
sbb
lahf
and
stos
adc
inc
jge
std
pop
pop
cld
ss
daa
mov
sub
arpl
adc
mov
xchg
pop
das
stos
adc
stos
push
into
sub
mov
push
fistps
mov
xchg
popf
loop
or
cltd
mov
ret
rol
cwtl
sub
pop
stos
fisubl
mov
loopne
bound
test
sub
add
loopne
adc
jmp
lret
subl
pop
mov
cltd
in
lret
in
stos
push
fisubl
lock
cmc
rcll
push
sbbl
hlt
sbb
mov
and
dec
aad
stos
push
addr16
cmpsb
sbb
jge
inc
mov
in
mov
lahf
es
cwtl
mov
imul
in
daa
addr16
je
or
adcb
push
rorl
sbb
and
lods
stc
stos
adc
fadds
mov
dec
das
pop
and
icebp
stos
daa
fisubs
push
lds
push
jae
adc
addr16
add
mov
lods
stos
xchg
sbb
bsr
cmc
jmp
stos
add
aas
cld
mov
and
stos
mov
adc
repnz
stos
setb
cmp
jle
or
bound
lahf
mov
addr16
adc
ljmp
push
sub
fs
nop
test
movsb
std
ret
mov
lea
icebp
or
ret
lods
xchg
and
jecxz
add
into
push
out
stos
or
inc
xor
sub
push
add
mov
jbe
adc
dec
push
stos
cmp
aam
fstl
dec
es
jae
sub
add
pop
test
ja
add
stos
and
xor
jmp
imul
sub
or
adc
and
or
jns
shlb
xor
stos
xor
out
inc
dec
and
sub
mov
push
mov
arpl
arpl
insb
stos
adc
into
stos
xor
ljmp
movsb
push
sarl
jecxz
popa
addr16
mov
popl
pop
mov
pop
scas
xchg
sbb
jbe
jp
mov
in
inc
cmpsb
fmull
stos
xchg
sub
adc
lods
test
add
jbe
sti
cmc
pop
mov
outsb
mov
push
test
fstpt
out
dec
stos
inc
mov
xchg
jmp
jo
jno
clc
pop
xchg
adc
stos
sti
ret
mov
cmp
stos
adc
mov
lods
ja
adc
loop
pop
mov
stos
into
clc
inc
inc
dec
mov
inc
loopne
mov
in
stos
aad
fisubrl
xor
sbb
mov
or
rolb
dec
fistl
adc
sbb
leave
cmp
stos
inc
dec
mov
icebp
jnp
in
mov
aad
imul
lods
mov
pop
add
out
stos
lcall
mov
xchg
push
ret
hlt
stos
or
into
leave
sub
push
out
gs
insb
mov
stos
pop
add
fs
sahf
test
and
stos
push
xchg
add
xchg
jo
addr16
stos
adc
mov
mov
adc
stos
sbb
mov
pop
inc
fcmovne
mov
dec
cmp
sub
or
inc
sahf
jle
fst
mov
lds
les
daa
push
inc
insb
test
xchg
aaa
mov
ficoms
mov
es
push
dec
xchg
inc
gs
xor
out
stos
fisubrs
push
cmp
dec
mov
push
adcl
fcomps
pop
fdiv
test
cmpsl
xchg
cwtl
add
stos
ret
fwait
jns
or
sub
popa
lcall
push
aad
or
arpl
outsb
js
rorb
les
mov
push
call
enter
stos
push
sbb
lods
stos
xchg
xor
sub
push
ret
rcrl
cli
addr16
lods
testl
fisttps
inc
iret
mov
jns
dec
popf
fistl
push
imul
stos
xchg
jne
xor
push
stos
in
jo
and
xor
hlt
inc
mov
stos
jg
mov
mov
lret
out
stos
sub
add
stc
nop
sub
imul
pop
fwait
mov
mov
add
sub
adcl
fwait
scas
test
fsubrl
mov
xor
int3
inc
stos
xchg
adc
dec
mov
cltd
movsb
dec
les
stos
inc
push
insl
insb
cmp
cmp
sub
lods
add
or
pop
mov
sub
pushfw
dec
stos
js
out
notb
push
stos
outsb
cs
bound
mov
jg
imul
loop
lahf
push
popa
mov
mov
mov
in
stos
lods
stos
and
cmp
push
sub
cli
push
jae
les
xor
and
pop
stos
ja
push
sub
aas
mov
xchg
stc
xor
jb
rclb
mov
jmp
fs
or
pop
arpl
pushf
dec
adc
jp
xchg
mov
mov
addr16
jno
aam
sbb
xchg
cltd
or
cli
sbb
stos
and
je
jmp
inc
jmp
add
mov
ret
cmp
stos
mov
jge
cli
stos
mov
mov
cwtl
popw
testb
xchg
cld
inc
inc
mov
loopne
stos
andl
stos
ret
jecxz
mov
mov
add
iret
stos
addr16
add
adc
scas
ljmp
xchg
stos
filds
mov
mov
xchg
add
imul
pushf
cmc
imul
stos
xchg
test
enter
jmp
imul
pop
stos
jno
nop
mov
stos
fs
out
arpl
loop
mov
stos
dec
jecxz
rcrl
fcmovne
movsb
adc
daa
stos
and
lock
ja
por
es
xchg
sbb
imul
in
pop
lds
or
ss
stos
pop
call
jbe
push
mov
or
and
scas
jmp
sbb
mov
xchg
int3
imul
add
ret
arpl
into
pusha
test
stos
dec
xor
rcll
lds
xor
mov
jle
notl
jb
xchg
push
cld
pushf
repz
test
jge
lahf
cmp
dec
loopne
adc
daa
and
add
pop
lods
mov
pop
imul
dec
sbb
sub
mov
push
fwait
lcall
mov
addr16
fstl
call
enter
and
testl
pop
cmp
test
sub
dec
lea
push
xchg
xchg
push
movsb
cmp
mov
ja
mov
scas
pop
push
jbe
mov
insl
or
stos
add
clc
inc
mov
imul
push
sti
pushf
fcmovb
mov
stos
mov
jb
mov
arpl
les
stos
fldt
jb
call
fdivrl
movsb
push
xchg
mov
stos
imul
outsb
add
fstpt
dec
xchg
inc
pop
and
mov
xchg
ljmp
fisubrl
insb
imul
lahf
cmpsl
je
dec
mov
dec
sub
mov
mov
mov
cwtl
jnp
add
mov
add
cltd
mov
imulb
mov
mov
sbb
lods
popf
jnp
movsl
dec
mov
stc
test
stos
xor
dec
cmp
stos
pop
adc
xchg
in
shrb
mov
or
aaa
aam
rclb
in
fsubrs
and
dec
pop
or
leave
add
int3
and
or
xor
jecxz
sti
lret
xlat
lahf
adc
jb
sub
mov
and
das
test
scas
ss
mov
popa
aaa
cmp
push
jecxz
loop
stos
xchg
xlat
cmpsl
loopne
insb
repnz
fs
pop
je
cli
cmp
daa
jne
mov
jge
adc
stos
pusha
sbb
sti
stos
hlt
movsb
push
enter
in
stos
test
out
leave
inc
mov
in
xchg
xchg
inc
outsl
xchg
cmpsl
add
jecxz
icebp
lret
stos
pop
adc
and
pop
daa
inc
ljmp
mov
pop
test
inc
mov
mov
inc
adc
test
push
sti
in
iret
xchg
daa
jo
dec
adc
jb
sub
dec
jnp
inc
mov
push
es
jns
mov
mov
sub
xorl
push
push
jb
pop
push
dec
imul
xchg
fdivrp
arpl
cli
mov
loopne
stos
lahf
xchg
add
mov
mov
addl
stos
shll
adc
fnstcw
stos
xchg
lds
jb
arpl
int
hlt
mov
cmp
cmp
adc
arpl
cmp
enter
es
mov
lret
ss
xchg
stos
out
push
out
mov
sub
xchg
cmp
subl
xor
adc
stos
mov
cmp
xchg
cmp
jl
div
mov
lods
mov
jge
stos
xchg
xor
mov
jnp
je
out
mov
test
stos
das
pop
xchg
dec
adc
inc
mov
ds
xor
stos
aad
dec
mov
add
jns
hlt
stc
or
stos
test
sbb
out
shll
add
mov
cld
jno
cltd
jae
std
stos
push
ds
loope
lret
filds
add
xchg
outsl
pusha
xchg
xor
rcll
orl
xchg
stos
push
mov
inc
loop
pop
addr16
js
stos
fstl
mov
repnz
jge
cmp
push
out
sahf
xorl
add
out
out
and
cmpl
sub
lods
jl
aad
movsl
pushf
dec
sbb
cwtl
in
divl
push
stos
dec
mov
sub
push
stos
repz
and
in
cmp
stos
imul
mov
ficompl
repz
shl
out
xor
xchg
mov
stos
push
mov
xor
xlat
loope
and
cmp
xchg
bswap
pop
adc
stos
sub
jae
cmc
cmp
test
pop
pop
jg
xor
loop
subl
jo,pt
jns
dec
sbb
bound
andl
rol
dec
xchg
shr
xchg
aas
stos
or
ss
cmp
lea
xor
mov
pop
stos
call
jl
fsubrl
outsb
fisubrl
cmpl
stos
mov
jbe
jge
mov
test
sbb
mov
sub
xchg
fs
pop
ret
xchg
stos
mov
mov
inc
stos
repz
pop
sub
ret
xchg
mov
movsb
addr16
test
mull
in
repnz
gs
outsb
xchg
sbb
movl
push
add
inc
xor
stos
iret
cmpsb
sub
out
hlt
in
int
std
fdivl
stos
cld
and
jmp
fs
std
inc
xor
stos
mov
xor
mov
sub
ss
cld
movsl
stos
rorl
mov
add
dec
push
aad
mov
lret
mov
rorb
pop
stos
ss
mov
int
or
add
xchg
and
pop
fwait
inc
popf
stos
lcall
jae
in
test
jb
lods
push
out
lea
in
or
xchg
mov
ret
dec
xchg
aas
sbb
stos
jmp
out
mov
adc
sub
stos
hlt
mov
pusha
repnz
loope
cmp
mov
stos
push
fsubrl
and
std
pop
mov
jbe
add
push
das
loope
mov
push
mov
mov
xchg
jmp
jnp
cmp
mov
sub
cmp
mov
lret
mov
imulb
stos
out
scas
mov
cmp
sub
push
sub
mov
xchg
and
cmp
dec
and
jmp
rorb
test
or
pop
cmp
adc
inc
add
das
mov
insb
lods
scas
mov
stos
hlt
xchg
jne
out
and
int
mov
mov
xor
repz
mov
fstpt
nop
gs
and
pop
xchg
out
mov
imul
movsl
sbb
lahf
test
jae
stos
push
jp
pop
sti
aaa
mov
leave
icebp
out
in
jns
jmp
movsl
xor
loope
stos
adc
mov
fbstp
cmp
mov
mov
icebp
stos
push
mov
sahf
push
shrl
in
jmp
and
fisubrl
pop
test
jg
inc
stos
sbb
bound
push
xchg
cmc
popa
das
pop
stos
cmp
testb
imul
clc
jge
sub
pop
push
or
sbb
daa
fst
rcrb
push
xchg
test
add
arpl
lods
rorb
fwait
pushf
sbb
and
mov
mov
cmp
mov
and
scas
fsubp
popf
fwait
cld
ds
stc
sbb
fidivrl
jo
or
or
repz
pop
inc
iret
daa
popa
cmp
cltd
mov
test
push
jg
fiaddl
pop
cmp
xor
addl
xchg
into
stos
add
inc
cmp
lahf
xlat
mov
imul
loop
mov
insl
or
dec
bound
push
or
stos
mov
subb
jno
fmul
lret
stos
jp
mov
stos
and
and
push
xchg
sub
stos
cmc
sbb
xlat
fcmovnu
jl
stos
mov
cwtl
pushf
or
sbb
pop
and
call
arpl
stos
sbb
out
pop
jmp
stos
test
cmpsl
mov
in
call
or
push
or
sub
lahf
mov
out
xor
or
dec
mov
movsl
mov
popf
and
ss
jmp
mov
lods
cmp
mov
jmp
sbb
jbe
push
scas
fimuls
lods
loop
addr16
add
lahf
adc
mov
pop
push
sarb
add
xchg
sub
fsubr
mov
xchg
mov
xchg
stos
popf
hlt
jne
insb
movsl
gs
lods
nop
stos
cmpsb
lret
mov
fcoml
add
dec
mov
imul
sbb
mov
out
stos
sbb
pushf
inc
aad
cmpl
mov
imul
pusha
adc
and
fadds
jmp
mov
xchg
je
stos
xchg
loop
jge
push
stos
or
jno
fdivs
pop
mov
mov
pop
fs
andb
jmp
popf
pop
cmp
push
push
imul
cld
idivl
iret
add
xchg
mov
stos
xchg
sbb
shlb
sub
or
dec
sub
and
ret
or
push
adc
mov
cmp
popf
add
cmpsb
daa
adcb
mov
mov
sub
pop
mov
aam
jmp
inc
mov
push
cwtl
addr16
cmpl
in
stos
loopne
shlb
outsb
push
fwait
add
stos
jnp
push
adc
lock
mov
xchg
xchg
mov
sti
push
mov
stos
mov
bound
xor
stos
icebp
test
mov
stos
mov
stos
jne
or
or
in
gs
inc
inc
xchg
sbb
jbe
jg
push
leave
mov
test
orl
jl
add
or
cmc
sbb
ja
fwait
xor
lods
add
adc
scas
ss
mov
repnz
lock
mov
dec
es
stos
adc
mov
cmp
add
mov
cli
push
loopne
push
scas
loope
mov
stos
and
add
stos
push
sti
call
push
lods
pop
into
xchg
rorl
insl
stos
clc
or
test
or
ficomps
cmp
aad
out
repz
arpl
push
stos
leave
in
mov
cli
stos
out
adc
in
outsl
repz
pop
sbb
roll
push
je
lods
xor
iret
ficoms
xlat
enter
cmp
int3
xchg
aas
popa
shl
es
sbb
out
insb
iret
lock
stos
jne
in
cwtl
call
les
xor
cli
stos
jge
add
popa
aad
push
daa
jae
adc
std
test
int3
out
cwtl
jl
adc
lahf
push
sbb
fnstsw
add
aad
dec
insl
ret
stos
pop
mov
in
fisubrl
push
cmp
and
stos
adc
mov
cs
lret
stos
mov
jbe
push
jle
add
ret
jmp
inc
lret
addr16
movsl
push
pop
xchg
test
pusha
stos
out
leave
mov
stos
hlt
adc
loope
mov
pop
dec
xchg
pop
stos
jno
sbb
stos
xchg
or
in
mov
xchg
stos
imul
imul
aas
push
dec
mov
cli
pop
ss
or
fistl
stos
adc
stos
ja
imul
lcall
cmpsl
mov
js
nop
mov
fisttps
push
arpl
inc
cmp
stos
inc
inc
cmp
pcmpeqb
add
les
xor
sbb
mov
pushf
and
push
in
stos
ret
fisttpll
aad
mov
sbb
jnp
lret
sub
lea
popa
scas
adc
jp
fwait
call
popf
idivb
loope
mov
shrb
inc
testl
repz
and
xor
repnz
inc
adc
jg
xor
popa
cmp
stos
in
mov
movsl
scas
mov
sub
jge
stos
inc
mov
fwait
jmp
pusha
sahf
in
xchg
imul
arpl
mov
stos
mov
aaa
loop
dec
jmp
mov
int3
scas
cmp
movsb
insb
sbb
stos
push
adc
dec
sub
aam
jl
push
push
stos
sbb
adc
stos
gs
cmp
adc
das
pop
stos
popl
movsl
out
adc
and
or
rcll
mov
xchg
dec
mov
mov
xchg
ffreep
sub
iret
and
fxch
testb
js
std
mov
jmp
push
imul
mov
cmp
pop
insb
outsb
icebp
push
ja
data16
sub
jl
jns
stos
pand
and
push
pushf
mov
in
test
dec
inc
out
inc
addr16
jle
fsubrl
mov
mov
inc
stos
mov
cmp
imul
sub
aaa
inc
sbb
dec
sub
xchg
sub
adc
xchg
inc
insl
stos
push
jbe
xor
push
xlat
xchg
and
popa
adc
stos
leave
xchg
and
mov
mov
out
push
lcall
xchg
pop
mov
imul
mov
fsubrl
addr16
pusha
movsl
subl
aam
xchg
and
mov
mov
and
sub
subl
call
xor
fdivrl
popl
out
xrelease
mov
stos
leave
iret
cmpsb
pop
repnz
stos
popf
cmp
cmp
stos
nop
shll
repz
xchg
fisubrl
xor
addb
push
jbe
cwtl
repz
jge
ror
cld
out
jnp
sbb
imul
push
mov
push
out
flds
cmpsl
out
mov
insb
bound
loop,pt
mov
shrl
in
jmp
jge
call
jns
stos
dec
sub
sbb
jne
mov
stos
fcoml
imul
xchg
addr16
add
fwait
push
mov
sub
jno
or
ret
mov
call
outsb
jo
popa
out
scas
mov
inc
mov
jg
pop
cli
ljmp
lea
jge
push
pop
in
stos
lods
mov
stos
mov
mov
lret
aas
xchg
adc
sbb
stos
push
in
fmul
and
into
test
sti
pop
gs
imul
lods
dec
sbb
xchg
fs
lahf
stos
mov
and
es
fldcw
dec
pop
stos
and
inc
jp
pop
xchg
lahf
jnp
jmp
inc
xor
aad
mov
push
loopne
xchg
dec
lods
sbb
popf
sbb
xchg
and
lcall
dec
insb
inc
in
xor
aas
out
adc
sbb
stc
stos
gs
mov
mov
xor
rorl
inc
out
ss
stos
jge
cld
xor
stos
or
adc
or
sbb
mov
cli
ja
stos
in
fs
stos
sub
out
inc
mov
dec
cwtl
add
ja
mov
mov
cmovb
call
push
push
hlt
mov
dec
jge
frstor
ds
mov
fsubr
xchg
pop
subb
fmulp
add
clc
mov
jmp
outsl
xchg
sub
and
cwtl
test
inc
or
pop
and
dec
xchg
adc
mov
and
test
stos
mov
idivb
dec
ljmp
loop
mov
jmp
jb
stos
movsl
sbb
shrb
das
push
jmp
pop
test
std
nop
int3
or
jge
pop
jmp
jmp
pop
outsl
call
lcall
loope
mov
pusha
out
mov
fwait
out
stos
cmpsl
pop
sbb
out
stos
cli
jle
sarb
inc
push
pop
pop
fldl
push
popa
dec
call
out
loop
mov
xlat
stos
cld
adc
ret
xchg
dec
gs
les
stos
cli
outsb
mov
sbb
andl
cmp
pushf
jle
aad
daa
stos
jbe
popl
orb
stos
push
pop
xor
je
xlat
aad
js
fwait
shlb
lods
push
mov
arpl
leave
clc
mov
repnz
sbb
stos
loopne
shlb
lret
data16
call
out
lcall
cli
popf
outsl
mov
mov
add
stos
testb
jnp
xor
mov
jmp
shll
xchg
mov
pushf
repnz
cmpsl
outsb
jmp
or
iret
mov
ret
ljmp
das
inc
ljmp
jmp
stos
pop
inc
mov
daa
movb
cmc
out
stos
push
cli
outsb
insb
iret
mov
aam
add
mov
xor
inc
xchg
mov
cmp
mov
stc
adc
sbb
rcrl
xchg
and
push
cmpsb
fbld
addr16
lret
bound
mov
lods
dec
jnp
jecxz
test
ret
inc
cmpl
fildll
jbe
lea
loope
jb
mov
movsl
inc
adc
js
jl
adc
stos
in
lret
inc
loop
pushf
nop
stos
pop
pop
lods
mov
xchg
daa
paddb
clc
mov
cwtl
stos
mov
mov
int
mov
test
mov
cwtl
xchg
mov
or
sub
ss
dec
sub
rcll
icebp
sub
cli
rorb
jmp
push
movsl
cmp
ds
add
js
sbb
ror
xchg
stos
jmp
imul
stos
mov
call
xchg
cmc
mov
inc
out
stos
scas
jb
movsb
jo
ds
arpl
call
aad
dec
hlt
shrl
dec
push
in
jbe
stos
cs
pop
lcall
clc
stos
ss
jnp
stos
mov
cmpsl
dec
adc
into
or
out
mov
cs
dec
xchg
pop
stos
mov
mov
stos
mov
inc
jmp
jge
popa
movsl
sahf
pop
push
xchg
pop
aam
stos
add
cwtl
leave
or
push
lock
add
xorl
xor
fwait
out
mov
inc
pop
mov
leave
xchg
xchg
push
mov
add
popf
xor
stos
aas
xchg
bound
mov
add
cmp
sub
cmp
sub
in
fildl
mov
stos
sub
sub
adc
stos
js
cmp
mov
stos
mov
lahf
test
adc
ficoms
pop
push
pop
mov
lcall
sbb
stos
in
xchg
repz
and
stos
pop
int3
icebp
dec
mov
mov
leave
pop
enter
push
mov
mov
stc
sbbb
push
add
push
fildll
push
stos
xor
mov
mov
cmp
test
sub
mov
stos
inc
and
ja
mov
addr16
js
stos
jmp
sub
inc
stos
arpl
mov
arpl
dec
sbb
pextrw
stos
push
inc
mov
fbld
aas
xchg
cwtl
test
adcb
out
repz
sub
insl
roll
jbe
stos
mov
mov
xchg
mov
push
adc
movsl
inc
sbbl
cltd
inc
rcrb
xchg
stos
cwtl
xlat
pop
mov
stos
mov
or
stos
inc
dec
pop
ds
push
push
sbb
lods
aas
lcall
xchg
push
orl
jns
jmp
push
cmp
sbb
cmpsb
addr16
call
mov
adc
jecxz
scas
aaa
lcall
fwait
out
fmuls
shrl
pop
stos
jle
shrl
dec
imul
dec
mov
ss
ret
dec
les
inc
add
jns
cmp
dec
das
stos
fwait
mov
je
mov
sub
xchg
stos
mov
cmp
pop
adcb
lea
stos
pop
inc
inc
and
stos
into
jb
arpl
and
scas
test
push
stos
cltd
fistps
lods
stos
add
popf
jnp
dec
sub
cmpsb
cmp
sub
sub
jns
inc
and
jmp
jle
stos
pop
imull
push
pop
shl
imul
mov
stos
sbb
xorl
stos
fxtract
or
sub
cmp
stos
mov
mov
and
addr16
sub
nop
jns
shrb
or
jne
sub
daa
add
les
sbb
imul
pop
mov
les
or
lcall
imul
xchg
cmp
shrl
dec
filds
hlt
push
cmpsb
scas
xchg
movsb
out
imul
in
test
fcmovnu
and
lods
xchg
sub
int3
stos
adc
xor
dec
stos
xchg
out
dec
test
imull
lods
movsl
mov
xchg
test
int
push
out
push
mov
mov
inc
mov
call
jae
fwait
adc
imul
mov
pop
mov
pop
xchg
shrl
pusha
in
push
stos
dec
mulb
jg
cs
dec
pop
jge
adc
mov
stos
mov
xchg
je,pt
add
cmp
lahf
lods
dec
sahf
stos
dec
test
push
js
mov
mov
sbb
pop
nop
sbb
adcl
mov
clc
mov
movsb
xchg
aad
cmp
sub
out
daa
mov
rorb
popa
sbb
lcall
inc
es
ss
sbb
lock
jp
das
lret
jns
loopne
stos
or
add
repnz
cmpsb
arpl
cmovl
push
mov
mov
out
push
jne
stos
fwait
dec
test
shrb
sahf
add
or
rcll
mov
jo
cs
cld
out
push
ds
adc
rol
adc
lea
cmp
scas
pop
sub
mov
mov
stos
xlat
sub
mov
lock
stos
je
jb
scas
push
js
lret
int3
shrl
sbb
shll
jnp
jg
das
stos
gs
and
mov
int3
cmp
outsb
jns
sahf
sbb
dec
mov
sub
cltd
dec
xor
push
ss
cmpsb
out
mov
xor
push
cmp
mov
or
stos
mov
scas
lods
jae
pushf
cmp
push
mov
pusha
imul
pop
mov
inc
adc
lea
cld
std
push
pop
insb
stos
pop
inc
aad
sbb
inc
loopne
cmpsb
ljmp
outsl
sub
insb
mov
jecxz
adc
or
lahf
xor
add
stos
push
sub
mov
cmc
push
hlt
inc
mov
dec
sbbb
aaa
dec
inc
inc
jb
in
scas
lods
mov
rolb
mov
pushf
pop
test
imul
sub
imul
les
addr16
std
int
fisubs
test
testl
imul
mov
stos
add
test
xchg
lret
push
jnp
or
stc
xor
lea
jge
pop
jnp
addr16
stos
les
scas
adc
xchg
subb
shl
out
adc
sbb
cmp
stos
ret
push
jg
int3
repnz
das
mov
mov
sbb
aam
push
mov
stos
scas
mov
je
add
pushw
dec
fwait
inc
mov
stos
cmp
imul
inc
in
movsb
and
cmp
stos
stos
out
data16
pop
stos
int
pushf
mov
jecxz
sbb
sti
popa
xor
daa
mov
leave
dec
fwait
lret
push
fs
xchg
xchg
mov
in
dec
psllq
sahf
cmp
into
pop
jmp
test
xchg
mov
ljmp
mov
ret
imul
das
pop
and
sub
je
mov
inc
out
stos
lret
cmpsb
add
pop
clc
flds
sub
lods
les
jb
sub
iret
mov
adc
add
cmpsl
push
xor
int3
shrl
xchg
mov
fwait
pop
sbb
stos
adc
and
mov
mov
ficomps
jle
sbb
jmp
mov
ret
in
push
lret
sbb
sub
popa
mov
jbe
lea
out
sub
idivl
inc
das
lahf
cwtl
stos
lea
mov
sub
lcall
xchg
and
leave
adc
mov
xor
adc
mov
daa
dec
popa
push
mov
or
jmp
cmp
add
stos
sbb
aas
xchg
adc
jl
addr16
loop
bound
repnz
sbb
push
push
in
rorb
lock
pop
xchg
sub
js
xor
rorb
out
jnp
and
repz
stos
cmp
push
stos
pop
sbbl
mov
push
cltd
stos
pop
dec
testb
adc
xchg
cli
xor
sti
stos
mov
sbb
iret
stos
hlt
insb
mov
in
jmp
filds
cld
xlat
ret
add
int
add
xchg
psubb
lcall
cs
sub
fwait
push
stos
movsb
mov
adcb
loopne
adc
cltd
fldcw
test
inc
imul
adc
push
fwait
insb
pop
push
cmp
or
rol
stos
mov
jo
jge
lods
xor
and
popa
and
ljmp
add
mov
stos
xchg
movsl
das
xchg
stos
fld
cwtl
push
cmpsl
in
sti
mov
aas
inc
inc
fimull
mov
idivl
stos
lcall
jo
mov
push
xchg
adc
stos
ja
ffree
push
outsl
fdivrs
in
mov
push
mov
shll
je
add
stos
push
mov
push
xrelease
dec
stos
inc
cmp
cmp
stos
push
test
add
jp
inc
xor
xchg
test
popf
pop
dec
push
stos
aad
das
cmp
jnp
stos
push
stos
repz
adc
imulb
mov
out
popf
xchg
gs
cmpsl
cli
adc
xchg
fcmove
stos
in
lds
dec
pop
imul
mov
ret
xchg
andb
inc
adc
mov
jle
lcall
mov
lods
adc
daa
inc
fwait
push
push
in
leave
stos
repnz
popf
xchg
sub
mov
sub
mov
and
pop
dec
jo
insl
xor
pop
fldt
push
loop
mov
andl
aas
imul
push
mov
jbe
cmp
popf
je
mov
hlt
push
mov
jmp
test
jecxz
adc
addr16
dec
sbb
imul
rcll
aam
dec
pop
stos
fistps
data16
shlb
imul
cs
lahf
mov
fwait
push
pop
hlt
or
ds
sub
cmc
leave
std
test
inc
pop
mov
push
orl
minps
popa
xor
mov
fldcw
shrl
stos
sarl
inc
push
sti
lods
lock
and
repz
je
mov
sbb
jle
sub
xchg
dec
test
scas
pop
test
dec
stos
sub
ret
scas
xor
cli
fistl
ljmp
xchg
vmovaps
jnp
sahf
stos
cs
xchg
imul
mov
mov
les
add
pop
xor
sub
mov
stos
lds
cmpsl
je
pop
outsl
mov
xchg
cmp
stos
cmp
stos
adc
stos
sub
fs
leave
mov
divb
push
jnp
stos
mov
sbb
sub
fisttpll
arpl
or
add
scas
stos
cwtl
insl
mov
pop
sub
inc
mov
fiaddl
jmp
ds
add
lret
arpl
add
dec
stos
int
xchg
cmp
cmpsb
mov
out
popa
lret
stos
lea
xchg
fwait
xorl
inc
gs
mov
aad
inc
sub
test
fidivs
dec
nop
mov
mov
mov
pusha
loope
dec
std
cld
ret
mov
clc
or
stos
fimull
cmp
popa
xchg
stos
divb
pop
ds
iret
out
and
js
inc
mov
gs
adc
in
xorl
movsl
inc
xor
shrb
mov
push
xchg
mov
gs
mov
stos
cli
lret
out
sbb
cld
stos
loopne
ret
in
cmp
idivb
clc
stos
aaa
push
pop
mov
cvtdq2ps
mov
pop
test
adc
fwait
xchg
stos
stos
fsubl
insl
cmpsl
jmp
mov
mov
xchg
pop
aad
cmc
stos
aas
xchg
xchg
xchg
vmwrite
sub
repnz
jmp
push
test
dec
fldenv
jns
gs
sbb
xor
out
arpl
xlat
stos
iret
sbb
push
jg
stos
scas
addl
cmp
insb
dec
imul
es
sbb
push
mov
jp
mov
iret
scas
stos
xor
xchg
pop
stos
push
insb
repnz
cmp
popa
sbb
out
sub
inc
dec
jae
lock
stos
adc
repnz
add
cwtl
or
jb
fsqrt
pop
stos
mov
pop
imul
mov
stos
pop
lods
shll
push
dec
pop
stos
lret
jmp
mov
pusha
and
mov
out
int
movl
fisubs
das
sahf
push
lret
inc
push
xchg
inc
stos
std
pop
cmpsb
into
xor
pop
shrb
or
pop
sub
cmp
inc
push
fstl
push
or
inc
dec
incl
xchg
out
sub
inc
mov
pop
lea
pop
adc
mov
call
stos
shlb
out
mov
stos
jmp
jb
pop
and
xor
inc
test
lret
add
mov
xchg
cmp
pop
pop
pop
pushf
stos
lock
pop
inc
aas
sbb
stos
xor
mov
scas
or
pop
rcll
stos
fs
jp
and
mov
es
mov
jg
mov
jno
inc
fsubrs
cbtw
iret
stos
and
mov
mov
lret
call
adc
stos
mov
fwait
mov
jnp
fisubrs
and
shrl
pushf
movl
enter
fstpl
mov
outsl
stos
cmp
push
sub
mov
imul
jno
fwait
rorb
pop
lods
imul
aaa
xchg
inc
movsb
js
pop
fisubl
int3
cmp
or
es
or
mov
xchg
int
xor
push
das
dec
lods
mov
jno,pt
adc
lods
daa
shrb
push
xchg
and
dec
sbb
add
push
fimuls
mov
movsl
xchg
jmp
xchg
adc
imul
mov
iret
jnp
lods
out
stos
js
shll
push
dec
fildll
adc
insb
sub
lahf
pop
in
xchg
and
cmp
stos
push
mov
pop
popf
jge
std
sbb
les
mov
shrb
lea
faddl
repnz
imulb
mov
out
push
daa
push
mov
or
mov
fsubrp
push
jnp
mov
in
or
insb
pop
out
mov
cmpl
and
xchg
jmp
fwait
mov
bound
pop
stos
xchg
push
pop
insb
daa
sahf
push
imul
xchg
sbb
stos
push
xchg
pop
mov
in
fildll
bnd
fsubrp
test
lahf
mov
sub
aad
fcoml
in
cmp
jmp
push
out
xchg
lret
stos
sub
or
add
xor
cmp
xchg
pop
fwait
mov
adc
lock
and
and
imul
stos
or
scas
inc
imul
scas
mov
fwait
fs
dec
stos
xchg
lods
inc
stc
mov
pusha
bnd
lock
scas
mov
ds
fwait
xchg
pop
adcl
out
jnp
mov
sub
push
jno
shll
fcomi
cmp
insb
mov
mov
mov
mov
push
test
insb
mov
stos
daa
xlat
sbb
sub
in
dec
stos
pushf
mov
push
dec
fbld
into
cmp
mov
sbb
push
push
sub
in
les
or
aaa
arpl
stos
sar
inc
shll
fidivrs
jo
xchg
jle
test
stos
rorb
xor
sbb
lea
jb
rorl
and
xor
jmp
xor
cwtl
lahf
out
sub
push
out
mov
mov
push
call
mov
push
dec
stos
js
les
shrb
xchg
scas
lods
lahf
xchg
fwait
add
insb
jge
cltd
mov
adc
mov
push
sbb
repnz
pop
flds
stos
xchg
jg
dec
mov
stos
fidivrl
pop
push
or
test
xlat
lret
mov
add
push
addr16
push
cmp
scas
add
xchg
leave
ds
pop
cltd
imul
adc
ja
or
flds
imul
cmc
das
outsb
loopne
mov
stos
aas
sbb
leave
and
stos
xor
xchg
out
fbld
leave
mov
pop
push
pop
stos
mov
stos
iret
cmc
lcall
loope
or
sti
sub
outsb
ficoms
dec
xchg
sbb
out
pop
imul
pop
lods
mov
scas
movsb
mov
push
stos
iret
mov
loop
stos
pushf
sub
int3
xor
mov
fwait
jmp
lcall
inc
jmp
fwait
outsb
in
daa
push
addr16
dec
es
fwait
hlt
cwtl
sti
aad
push
jge
or
xchg
mov
ret
shll
sbb
and
cltd
movsl
mov
pop
dec
stos
int
fcomp
cmpsb
stos
xor
pop
sbb
stos
sbb
lret
lcall
stos
add
sbb
imul
cmp
cmpsb
inc
sub
jle
stos
shlb
pusha
pop
stos
loope
xchg
imul
lds
jge
stos
in
loope
and
sub
or
imul
dec
fwait
mov
stos
das
stos
and
ljmp
in
mov
jnp
adc
pop
and
stos
icebp
cs
lea
stos
mov
dec
mov
jl
std
mov
aad
fisttps
xchg
orb
ret
in
xchg
mov
adc
arpl
pop
icebp
inc
es
popa
push
cmpsb
and
in
xchg
add
xor
mov
xor
cwtl
sbb
xchg
popf
rcll
js
push
and
in
sub
das
cmp
repnz
lahf
lods
adc
aam
cwtl
inc
mov
popf
nop
mov
call
cmp
mov
adc
in
leave
jmp
adc
xlat
cmp
add
mov
push
inc
pop
add
mov
addl
jl
in
in
cmp
and
sti
je
rclb
mov
and
nop
sbbl
pop
fdivl
dec
dec
stos
scas
sbb
and
cmpsb
sub
loopne
aaa
dec
sub
and
addr16
mov
stos
icebp
jmp
orl
pop
ret
stos
cmp
fwait
xlat
add
in
shlb
pop
or
lea
push
mov
lock
clc
pop
push
fs
imul
xchg
stos
out
sti
xlat
jbe
pop
lret
stos
dec
jp
mov
stos
addl
push
repz
jns
xor
popa
or
addr16
nop
stos
lcall
arpl
xchg
mov
mov
mov
sbb
push
cmp
stos
dec
into
out
enter
in
repz
mov
xor
out
xchg
cltd
stos
pop
aaa
lods
sbb
push
imul
repz
cltd
test
stos
push
loop
mov
movsb
sarl
sbb
fwait
stos
ficoml
daa
fiadds
jne
xchg
xchg
push
stos
add
mov
push
stos
rcrl
sbb
jno
cmp
stos
dec
mov
mov
fwait
insl
jl
sarb
arpl
mov
push
push
daa
inc
hlt
dec
nop
pop
xor
mov
loope
stos
mov
fs
les
mov
das
jmp
imul
cmc
mov
and
int
ret
jle
jge
mov
cmp
add
xchg
stos
dec
dec
push
mov
or
gs
xor
push
fldenv
mov
add
daa
or
dec
mov
jmp
cmp
push
scas
lcall
mov
jp
xor
push
push
popa
mov
faddl
xchg
ret
lock
stos
add
mov
inc
stos
nop
mov
xchg
mov
dec
pop
stos
push
mov
je
cmpsb
mov
cmp
int
adc
pop
lahf
mov
and
inc
test
push
loope
stos
sbb
lahf
mov
stos
les
mov
stos
lret
fs
dec
cmp
aad
into
ljmp
out
xchg
imul
fldt
mov
dec
mov
stos
std
inc
inc
jb
daa
or
test
fs
cmpsb
sbb
popa
ja
add
pop
leave
mov
inc
stos
cwtl
js
dec
or
mov
test
mov
imul
lahf
add
push
test
lods
xchg
bound
int
pop
pop
out
add
mov
jmp
stos
jg
xor
or
lret
or
pop
stos
sahf
jns
mov
into
cmp
dec
xchg
and
mov
stos
out
sbb
mov
addb
stos
fldl
pusha
js
sbb
lea
xchg
repz
divb
cmc
pop
into
stos
pop
sbb
insl
push
lea
xor
dec
test
sub
sub
add
stos
pop
cli
sub
adc
cmp
test
mov
pop
out
push
adc
stc
movsl
sub
adc
ret
insb
sub
pop
clc
lret
xlat
push
push
incl
lods
jecxz
push
movsb
and
fists
stos
lods
adc
aad
mov
fnstcw
sbbl
mov
inc
stos
dec
pop
add
fwait
xchg
cmp
jl
stos
nop
lahf
scas
jmp
adc
clc
mov
es
loopne
movsb
xorb
leave
push
in
sbb
loop
cmp
stos
dec
movsb
fiaddl
xor
nop
lret
pop
mov
shlb
jo
andb
das
mov
filds
jnp
sbb
mov
mov
int3
sub
sbb
imul
in
fbld
bound
int
xchg
loop
lods
out
dec
jbe
add
adc
adc
call
or
out
add
sarb
jp
mov
mov
xor
test
mov
mov
jnp
sbb
stos
out
fwait
je
in
jg
fldcw
xor
divl
or
call
push
aaa
stos
shlb
stos
cmp
or
inc
int
in
or
fwait
insl
addb
mov
or
xor
rolb
stos
lds
aaa
mov
stos
nop
dec
sarb
xchg
out
sbb
xchg
pop
mov
pop
mov
adc
mov
mov
shrl
pop
push
fidivrs
movsl
xchg
clc
jmp
stos
dec
push
mov
sbb
cltd
dec
cmpsl
mov
push
lds
cmp
pop
mov
sub
outsb
pop
daa
lret
int3
in
mov
subb
jne
in
mov
stos
inc
push
mov
movsb
in
inc
stos
lods
push
fadds
enter
xlat
ja
stos
push
inc
jle
popa
out
mov
mov
mov
sub
pop
lea
xchg
push
lret
out
popf
jns
push
sub
xor
mov
xchg
mov
jae
insb
out
add
stos
out
or
adc
int3
xchg
jno
fstl
stos
in
lea
adc
push
or
stos
sarl
xchg
popa
stos
adcb
mov
outsb
jg
xchg
aad
sub
ja
inc
pop
aas
stos
lea
jg
arpl
adc
jmp
sbb
dec
stos
mov
lret
jmp
mov
ja
movsb
or
stos
mov
popa
pop
adc
sub
xor
jo
mov
inc
sub
ss
stos
inc
add
lock
xchg
rcrl
inc
mov
nop
imul
fldcw
ljmp
pop
mov
jns
mov
shrb
push
out
imul
scas
loop
adc
adc
xchg
mov
mov
fstl
xor
lods
into
call
mov
inc
test
or
mov
jb
stos
ss
mov
xchg
push
in
adc
add
mov
mov
daa
rcrb
repz
fsubs
xchg
xchg
push
xchg
int
xchg
cli
xorl
in
idivb
push
aaa
jae
out
xor
jle
push
mov
pop
sbb
cmp
xchg
inc
repnz
mov
stos
inc
pop
sub
pop
cs
push
incb
leave
mov
pop
lock
lret
lods
stos
es
or
mov
in
push
push
out
pop
roll
sub
movsb
cmp
jle
insb
lea
rolb
dec
dec
icebp
xchg
out
xchg
and
stos
or
jge
lock
mov
adc
adc
stos
data16
nop
out
adc
lahf
in
and
sbb
or
ja
lods
push
inc
xchg
jnp
movsb
lret
rorb
mov
push
mov
xchg
into
adc
jmp
in
hlt
das
push
cmp
stos
cmp
stos
jo
pop
lods
enter
dec
int
sub
sar
fs
in
inc
imul
stos
push
insl
xor
jmp
xchg
outsl
jbe
js
outsl
scas
std
push
mov
mov
or
xchg
loope
push
sub
lcall
sbb
sarl
cs
xchg
stos
aam
and
jnp
push
cli
jmp
pop
mov
je
stos
int
ljmp
out
mov
xchg
stos
jl
mov
enter
out
cmpsl
inc
mov
dec
dec
xchg
push
popf
int
mov
push
daa
test
mov
sbb
mov
imul
xor
movl
es
xchg
pop
sub
stos
push
ja
jno
data16
lds
push
xlat
stos
cli
fsts
cmp
cs
stos
jbe
lea
xchg
test
pop
lcall
mov
aad
out
mov
test
out
loopne
imul
stos
gs
mov
add
adc
dec
shlb
add
or
mov
sbb
dec
xchg
sarl
std
mov
push
inc
mov
pushf
in
ljmp
jne
repz
sti
mov
dec
cmp
cs
or
stos
mov
mov
nop
arpl
arpl
scas
or
int3
aam
daa
cmpsb
filds
mov
cmp
sbb
mov
pop
fidivrs
inc
pop
xor
xchg
jecxz
imull
mov
ja
push
sahf
shl
leave
cmpl
push
xor
xchg
jp
fwait
hlt
mov
add
fs
loopne
iret
mov
dec
enter
jns
jbe
adc
stos
inc
pop
outsb
push
mov
out
insb
push
and
scas
arpl
sub
mov
outsl
xlat
out
mov
mov
and
stos
scas
test
pop
mov
stos
jbe
lret
sbb
mov
inc
fwait
mov
jae
xor
or
adc
ret
pop
nop
stos
nop
mov
fldt
outsb
mov
imul
into
mov
push
outsb
cmp
scas
int
add
lock
cmp
div
shll
jecxz
dec
push
or
jp
iret
pop
sub
scas
and
stos
jae
adc
imul
sti
dec
inc
sbb
insl
dec
jmp
push
and
jmp
dec
sub
mov
repz
pushl
fs
push
sub
adc
enter
dec
pop
or
mov
sub
fcoms
aas
xchg
jb
stos
xor
cmpsl
aas
xchg
jnp
mov
or
push
stos
sub
int
cwtl
inc
add
stos
repz
stos
loopne
nop
or
push
inc
push
push
jg
cltd
dec
loope
mov
cmc
inc
pushf
inc
rol
mov
mov
fs
pop
xchg
and
mov
stos
dec
inc
das
sub
jb
or
pop
insl
leave
xchg
mov
sbb
inc
stos
minps
xchg
rorb
cmp
stos
stos
cltd
jb
sub
sub
aam
xor
add
jmp
pop
enter
movsl
sub
push
mov
roll
xor
and
push
lret
test
mov
stos
xchg
xor
pop
jnp
imul
scas
sbb
mov
mov
jmp
sahf
push
insl
scas
xchg
mov
xchg
addr16
notl
xchg
mov
push
xchg
stos
inc
cltd
sub
stos
mov
sbb
stos
clc
xchg
loopne
xchg
mov
por
jbe
dec
out
mov
pop
push
lea
ret
insl
stos
cwtl
sbb
push
loope
outsl
or
imul
push
xchg
ljmp
mov
jno
call
mov
sub
push
xchg
loopne
fwait
movsl
push
sbb
mov
sub
enter
inc
stos
add
or
and
push
fs
pop
test
cli
test
shl
xchg
push
rclb
iret
jo
cmpsb
stos
and
test
xchg
jnp
push
mov
stos
outsl
hlt
sbbl
aad
sahf
mov
addr16
stos
shlb
cltd
mov
mov
out
adc
loope
add
outsb
ret
push
mov
inc
jmp
test
mov
cli
jno
or
lret
ja
ret
adc
test
inc
stc
ljmp
xchg
and
jns
sbb
and
shll
stos
xchg
or
lret
stos
mov
mov
insl
scas
leave
daa
rorl
mov
imulb
push
mov
fucomi
into
ds
in
sub
nop
dec
imul
stos
push
push
dec
je
push
scas
daa
movsb
pop
or
fwait
mov
jle
cmp
sub
push
jg
pop
dec
adc
stos
ret
sub
sub
add
add
xchg
rcrl
scas
push
cmpsb
out
cli
insl
in
inc
dec
adc
testl
dec
and
and
mov
pop
pusha
enter
cld
push
cltd
xor
testl
sbbb
shll
in
repz
cmpsl
sbb
mov
sbb
xchg
push
in
fsubs
icebp
insb
jnp
jns
clc
mov
pop
int
stos
jo
add
push
mov
push
stos
in
arpl
stos
insb
pusha
and
lock
test
push
gs
fwait
xchg
int
stos
lods
jmp
jg
aam
push
mov
sarb
mov
mov
mov
int3
sbb
mov
jecxz
adc
movsl
mov
ljmp
adc
imulb
or
add
push
jnp
faddp
push
sbb
xchg
cmp
xchg
subb
pop
stos
sub
xchg
mov
mov
imul
jle
sub
stos
cmp
inc
xor
mov
sar
sbb
mov
mov
dec
ret
fdiv
mov
stos
fcoml
mov
adc
jb
lock
fsubr
pop
scas
and
mov
stos
andb
mov
out
sub
lea
xor
push
aaa
stos
popf
and
ret
stos
xor
inc
imul
xchg
adc
iret
or
mov
ja
je
ret
jne
pop
mov
stos
mov
sbb
enter
imul
mov
or
pop
lock
js
xchg
sub
stos
je
out
adcb
stos
test
arpl
repnz
out
ljmp
sti
jno
sub
and
xchg
out
add
lods
shll
cltd
xor
aas
sub
or
push
jecxz
dec
rorb
push
push
jne,pt
push
fsubrs
sbb
in
push
pop
stos
les
stc
jmp
sub
lahf
stos
enter
mov
and
jnp
fisttpl
fimull
push
loop
sub
lock
int
enter
mov
testl
cs
stos
lcall
mov
clc
push
jb
adc
jnp
push
xchg
hlt
stos
je
and
stos
jne
insl
ret
sbb
sub
push
stos
pushf
adc
out
stos
das
ja
xchg
lret
mov
stos
add
sub
inc
push
adc
xor
roll
arpl
je
sti
xor
pop
int3
mov
jg
aad
add
imul
and
cmpl
sbb
cli
lock
cmp
fsub
dec
nop
mov
pop
stos
jl
lock
pushf
and
dec
push
adc
and
and
add
mov
xor
xor
bound
push
stos
xchg
push
push
push
xchg
inc
xchg
mov
ljmp
aam
xchg
and
outsb
je
xchg
imul
cmc
mov
std
push
in
pop
inc
jle
fwait
cs
and
dec
inc
mov
cwtl
inc
sub
mov
imul
pop
lods
fnstsw
rorb
fcom
cwtl
sub
push
les
inc
lock
xor
mov
and
enter
sub
test
rorl
ds
push
mov
loope
inc
push
dec
stc
stos
jns
jl
xchg
xor
mov
daa
push
sub
xchg
ret
mov
xchg
and
ljmp
lcall
mov
add
and
stos
iret
shrb
hlt
sub
stos
das
int
mov
push
mov
stc
jae
lods
mov
lods
stos
dec
cltd
xor
int
xor
stos
sar
pop
loop
es
mov
idivl
stos
insl
xor
xchg
sbb
xchg
cmp
cmpsb
pushf
packsswb
mov
sar
sbb
and
stos
mov
daa
xor
stos
fnstsw
lahf
sarb
aam
outsl
lock
rclb
pop
clc
mov
xchg
pop
iret
cwtl
stos
insl
push
int3
inc
mov
es
stos
or
xor
add
jl
dec
cmc
adc
mov
sbb
sub
mov
xchg
out
aas
sbb
jle
sub
stos
test
mov
jmp
push
addr16
xchg
int3
imul
stos
scas
pop
xchg
fbld
adc
sbb
jl
jno
shld
xor
mov
arpl
or
ficoms
dec
mov
mov
movsl
out
arpl
adc
stos
mov
popa
pop
push
stos
movl
ret
stos
loopne
out
and
mov
push
and
stos
bound
arpl
arpl
jo
fwait
mov
test
sahf
imul
mov
push
fdivrp
jp
pusha
scas
gs
stos
pop
fwait
ljmp
mov
jmp
lret
imull
xchg
xchg
adc
dec
and
rep
push
inc
mov
adc
xor
pop
test
repz
mov
mov
sbb
mov
cmp
lods
cmp
cs
stos
cmpsb
push
js
fucomip
adc
leave
xchg
or
or
cmp
stos
xor
inc
faddp
shll
jns
hlt
cmp
lcall
in
inc
mov
icebp
jne
bound
mov
aas
adc
fldcw
subl
xor
lret
jecxz
repz
outsl
cs
mov
xchg
xor
cmp
push
mov
jle
and
stos
jns
sub
cmc
push
dec
das
nop
fidivs
xchg
jno
stos
aas
cmp
mov
imul
test
fwait
popa
movsb
mov
mov
jnp
pop
mov
imul
inc
cltd
scas
cmpsb
subl
stos
pop
pop
popf
mov
dec
repnz
mov
clc
jp
sub
mov
and
sbb
enter
stos
test
loop
add
inc
out
push
fisubrl
add
fsubrl
add
arpl
out
dec
mov
stos
js
pop
mov
gs
push
imul
add
add
pop
movsb
stc
ljmp
xchg
or
in
stos
xor
daa
inc
insl
cmpsl
sub
xchg
shrb
mov
lret
jo
stos
jl
adc
mov
jbe
decb
stos
cmp
stos
pop
pop
aaa
into
add
std
mov
mov
mov
or
or
mov
gs
stos
jp
and
lock
pop
in
stc
mov
int3
addr16
push
mov
sbb
stos
movsl
sbbl
aaa
jbe
cli
jb
rcll
sub
lret
aam
stos
imul
xchg
mov
aad
pop
push
test
repz
mov
iret
stos
cld
jne
mov
stos
dec
push
ret
dec
xchg
scas
mov
mov
pop
lret
popf
dec
daa
jae
loopne
orl
ds
and
sub
cs
xor
mov
sub
fcoml
es
insb
stos
movsb
arpl
sub
out
push
mov
jo
push
les
dec
sub
mov
cmp
std
cli
push
fmuls
mul
in
and
fsubl
in
stos
adc
bound
mov
pushf
xor
add
mov
sbb
sub
popf
stos
mov
adc
xchg
mov
lret
call
mov
pop
cmp
or
scas
xchg
mov
ds
out
aad
and
push
inc
stos
scas
dec
mov
lcall
shrb
jbe
xchg
fnstcw
test
out
or
push
jnp
imul
push
jmp
inc
aas
fwait
loope
jle
jmp
and
and
lock
sub
sbb
xor
stos
scas
push
pop
lods
mov
inc
lcall
push
lock
cs
push
push
mov
movsl
in
es
pop
aas
aam
leave
fwait
push
cmpl
in
fwait
stos
lods
aam
adc
repz
setg
gs
jle
cmpsl
mov
jo
stos
test
scas
enter
fs
fistpl
lock
mov
stos
add
stos
dec
xchg
data16
cld
in
push
pop
pop
xchg
clc
scas
shll
xlat
into
call
filds
subl
jo
cld
or
inc
test
cltd
pushf
adc
call
leave
adc
inc
stos
sub
mov
xchg
jmp
dec
aas
test
stos
pop
into
insl
jne
push
stos
shrl
add
sbb
mov
jns
movl
stos
movsl
or
es
mov
cmp
stos
rclb
sub
pop
mov
xchg
cmp
stos
adc
mov
push
stos
loop
mov
scas
stos
test
xor
fisttpl
xor
negb
stos
mov
cmpsb
scas
cltd
aad
dec
outsb
stos
in
int3
int
bnd
push
es
ljmp
mov
push
aam
or
fiaddl
stos
fmull
xchg
lcall
mov
roll
stos
push
aaa
mov
and
test
mov
sub
aad
push
mov
xchg
sbb
cld
xchg
push
fisubs
inc
jmp
cs
stos
rol
or
cmpb
repz
movsb
je
and
stos
fwait
cld
fld
test
jbe
cmp
cmpsl
and
stos
and
lahf
sbb
xchg
adc
popf
dec
stos
orl
nop
pop
leave
adc
xor
xor
sbb
mov
inc
sbb
stos
das
mov
in
xlat
stos
cmpsl
dec
and
dec
adc
inc
ljmp
sahf
sub
add
xchg
mov
sub
stos
mov
add
push
int3
inc
cmp
das
mov
in
jne
les
pop
inc
add
jmp
cmp
sbb
ljmp
daa
andl
mov
fwait
mov
push
int3
test
stos
sti
push
xor
ret
in
into
stos
sub
xchg
jg
or
mov
cmp
xchg
lahf
push
sahf
mov
xor
mov
jge
andl
mov
stos
in
les
push
mov
inc
and
cmp
addr16
fwait
movsl
cmc
mov
shrb
inc
add
fwait
mov
mov
int
stos
inc
movsb
das
dec
lods
paddb
std
cmc
or
lret
mov
push
and
stos
shr
adc
jb
pop
push
roll
aam
stos
mulb
add
pushf
fwait
out
push
stos
or
cmp
stos
cmp
pushf
adc
jge
popa
loop
jns
mov
pop
dec
cld
stc
test
les
mov
xchg
add
pop
or
imull
shl
fldcw
orb
push
pop
add
dec
test
jg
test
int
xor
xchg
push
mov
in
mov
mov
stos
jo
outsl
insb
cmp
pop
push
stos
cmc
jne
lcall
xchg
aam
stos
addr16
repz
popf
cmp
je
sbb
stos
stos
sub
jae
ljmp
inc
mov
lcall
push
setnp
ss
ret
fidivrs
rolb
jecxz
xchg
sub
sahf
movsl
mov
dec
mov
stos
mov
movsb
inc
sub
adc
stos
mov
mov
and
fnstsw
pushf
ret
daa
xchg
push
adc
gs
test
push
cltd
push
out
mov
push
arpl
out
int3
stos
sti
insb
scas
aas
cmp
jge
mov
stos
jmp
stos
cs
or
jmp
or
nop
jo
stos
mov
xlat
cmpsb
dec
jmp
outsl
xchg
cld
int
scas
mov
mov
or
lds
mulb
stos
movsb
pop
aas
add
mov
stos
jmp
dec
arpl
stos
xchg
std
es
int3
test
xchg
or
gs
xchg
movsb
or
stos
push
inc
mov
test
xor
je
fisttpl
stos
mov
insb
adc
mov
mov
dec
jg
add
sahf
pop
push
out
mov
out
sbb
test
aas
addr16
int
xchg
and
mov
fldenv
sahf
pop
stos
mov
pop
das
lcall
or
insb
add
stos
dec
mov
sbb
int
loop
add
inc
mov
pop
mov
rolb
stos
add
push
adc
sub
adc
cmp
popl
test
mov
jmp
push
shrl
lock
imul
mov
cmpsb
inc
stos
mov
pop
sti
adc
daa
fstps
stos
mov
adc
imul
mov
stos
out
ret
aas
insl
mov
int
je
mov
shrl
inc
mov
js
push
ljmp
jo
arpl
stos
mov
mov
loope
mov
jnp
insb
stos
icebp
or
loop
pop
subb
cld
js
jmp
stos
and
cmp
fwait
adc
pop
inc
stos
fucomi
ljmp
cmc
xchg
stos
cwtl
adc
aam
xor
cltd
mov
arpl
sub
jge
scas
sbb
shll
aad
popa
mov
stc
push
les
jmp
dec
pop
int
push
inc
push
adc
mov
addl
add
stos
popa
lock
push
mov
mov
xor
dec
out
daa
insb
push
fcompl
jmp
jnp
adc
jbe
or
stos
movsl
dec
data16
jns
mov
xchg
sbb
fcoms
jbe
jb
and
insl
xor
cli
stos
mov
mov
aad
push
and
inc
xchg
stos
pusha
adc
in
push
jae
stos
dec
cmpsb
inc
popf
or
mov
mov
stos
inc
mov
cwtl
shrb
jp
dec
stos
mov
jno
andb
pop
stos
js
inc
out
call
stos
cltd
jecxz
inc
call
movsl
inc
daa
sub
push
or
fiaddl
cld
ljmp
das
ret
outsl
subb
jecxz
out
imul
dec
stc
mov
movsb
xchg
sbb
test
jo
xor
cli
subl
ret
adc
cmp
jmp
icebp
mov
inc
nop
push
and
rolb
mov
mov
xor
fs
cmp
out
dec
stos
inc
movsl
flds
pop
shlb
imull
test
cs
xorb
icebp
jbe
movsb
ja
and
mov
cmpsb
jno
inc
xor
mov
stos
mov
scas
mov
loopne
pop
inc
mov
or
lea
sub
in
or
xlat
jno
mov
sub
xchg
jmp
xchg
fwait
std
repnz
mov
movsl
pushf
js
pmuludq
push
jge
mov
xchg
lret
lods
push
inc
andb
sub
mov
popa
stos
por
add
stos
pop
mov
fsts
enter
test
popf
inc
xor
mov
fcmovnbe
xlat
scas
jge
sub
sbb
outsl
push
stos
lods
adc
xchg
lahf
bound
aas
stos
stos
imul
fisttpl
test
leave
popa
stos
push
mov
mov
daa
shrb
add
mov
insl
sbb
cmp
pushf
mov
dec
adc
xchg
dec
mov
fsubl
pushf
mov
push
in
stos
mov
lret
je
xchg
push
daa
stos
mov
mov
movl
inc
fidivrl
stos
movd
stos
orl
lea
mov
stos
sub
daa
nopl
stos
xor
dec
aad
cmp
sti
popf
fldenv
adc
les
sub
lods
lret
pop
test
pop
jns
shrl
subl
jle
outsl
mov
jl
adc
cmc
dec
es
rep
add
adcb
stos
inc
jmp
pop
imul
insb
fwait
pop
into
adc
jge
scas
dec
mov
and
or
test
or
mov
inc
mov
fstps
push
push
add
mov
in
dec
dec
pop
aaa
inc
aad
lea
cltd
xchg
xor
push
loopne
fadds
jae
stos
out
or
xlat
add
mov
repnz
scas
fisubrs
sub
fwait
dec
xchg
stos
mov
movsl
xchg
mov
xor
stos
sbb
sub
in
cmc
fldcw
rorb
sub
stos
fcmove
inc
stos
adc
js
mov
movsl
jl
faddl
aaa
mov
cmpsl
aaa
xlat
nop
or
sbb
sbb
iret
mov
in
fcomi
mov
pop
jns
js
dec
pushf
sbb
imul
mov
or
mov
push
mov
dec
jp
aas
sub
jmp
les
std
fbstp
lods
mov
dec
inc
stos
popa
xchg
sahf
das
fs
stos
xchg
dec
mov
adcl
in
mov
inc
js
stos
xor
cmp
lret
pusha
stos
lea
test
stos
mov
aam
xchg
les
inc
jg
stos
ja
out
pop
data16
push
stos
outsl
push
scas
mov
je
mov
adc
pop
daa
sbb
sbb
push
jg
mov
hlt
xchg
jecxz
pop
cmpsl
adc
pop
xchg
mov
lahf
inc
std
xchg
xchg
sbbb
push
mov
dec
mov
cltd
shlb
mov
push
mov
add
js
add
test
nop
mov
and
arpl
jbe
and
xchg
in
stos
xchg
mov
es
mov
mov
mov
push
scas
stos
lcall
outsb
imul
push
xchg
addr16
imul
mov
cli
shrb
xor
sbb
add
lods
push
add
stos
and
mov
dec
loopne
in
xchg
popf
stos
inc
jl
inc
dec
lds
add
jbe
sar
ljmp
add
or
push
cmp
ret
mov
lods
adc
dec
dec
sub
sbb
push
mov
je
lcall
or
stos
movsl
shl
clc
shrb
orb
incl
adc
mov
add
stos
add
inc
ficoms
aas
stos
jl
insb
pop
xlat
repnz
stos
test
test
cld
mov
jmp
or
fstps
std
inc
cmp
stos
in
xor
data16
jl
sbb
js
pop
fwait
xchg
push
stos
popa
adc
les
push
pop
inc
mov
test
cs
mov
out
stos
mov
cmp
jmp
pop
sub
push
add
xchg
and
xor
mov
jl
inc
stos
push
loopne
add
imul
jnp
fldenv
xchg
int3
xlat
lods
fcomi
stos
imul
pop
adc
mov
subb
jl
incb
gs
imul
stos
add
and
stos
jmp
and
jl
outsb
js
pop
scas
mov
xchg
cmp
xchg
dec
sub
lcall
int
stos
sbbl
insl
mov
jo
adc
xchg
cs
and
shlb
sub
and
mov
lahf
pusha
push
dec
leave
clc
sbb
cli
adc
and
repz
movsb
int3
sub
out
imul
mov
cmp
lea
pop
and
dec
push
xchg
into
sub
mov
cmpsb
js
cmp
shll
push
popa
cwtl
mov
aas
std
das
dec
add
mov
lret
pusha
orb
icebp
in
jnp
jno
insl
and
int
leave
lock
stos
push
dec
cmp
cltd
dec
jno
sub
arpl
leave
xchg
call
jg
out
out
jl
mov
test
mov
imulb
cmp
jmp
outsl
xchg
dec
sbb
sub
pop
dec
fmuls
subl
orb
sub
mov
rcl
cmc
jmp
insl
mov
test
stos
or
inc
inc
xchg
stos
dec
mov
inc
push
mov
sti
mov
inc
mov
dec
add
mov
aam
sbb
sub
in
xchg
mov
arpl
xchg
cmp
push
fwait
in
dec
add
mov
movsb
push
aam
lods
mov
jo
stos
int
sub
push
mov
jl
inc
mov
pop
stc
leave
sub
inc
test
pop
add
jmp
and
div
inc
push
mov
dec
xlat
dec
sub
mov
push
aaa
stos
scas
inc
test
insb
mov
call
and
mov
xor
sbb
cmp
repnz
push
stos
ret
pop
imul
lahf
jecxz
sbb
imul
xlat
fisubrs
dec
mov
roll
stos
call
jmp
sbb
jns
mov
lds
stos
sahf
or
in
data16
xchg
stos
xor
imul
push
and
stos
pop
mov
mov
int3
cmpsl
stos
aaa
loop
mov
sub
sbb
sahf
mov
push
pop
adc
xor
imul
test
adcl
jb
mov
stos
push
shrl
pop
xor
jnp
in
stos
cs
decl
cmp
shrl
stos
aaa
jne
mov
stos
mov
xchg
js
or
rolb
mov
aas
out
stos
sbb
je
jae
adc
shll
adc
sub
push
inc
dec
std
into
stos
xorb
insl
stos
das
xchg
popf
pusha
scas
ss
stos
or
sar
jns
sub
pusha
mov
push
stos
xchg
ds
testl
and
cmp
movsb
xlat
xchg
mov
stos
jbe
or
inc
sbb
stos
cltd
push
push
lret
and
cli
and
mov
pop
bound
adc
adc
cmp
imul
stos
stc
pop
les
push
imul
mov
jmp
inc
mov
sbb
xchg
clc
push
stos
shl
es
nop
lret
rclb
insl
rclb
sub
mov
or
decl
mov
ds
jmp
adc
fucom
sbb
push
jle
stos
xchg
cmp
adc
ucomiss
call
mov
aam
and
push
jmp
aaa
stc
rcrl
xchg
mov
mov
stos
hlt
xor
push
stos
or
push
mov
movsb
pop
ds
jmp
jmp
ret
fdivs
sub
movsb
shlb
sub
cmp
fimuls
nop
or
scas
cli
push
stos
push
cmpl
stos
into
inc
mov
fsubrl
or
sbb
out
arpl
movsb
out
pop
pop
mov
sti
xchg
mov
mov
fdivp
dec
lods
stos
adc
jb
fisttps
jbe
sahf
pop
lods
add
enter
ret
push
stos
test
xor
outsl
mov
cmp
call
sahf
outsl
cmpsl
stos
rcl
xchg
push
icebp
int3
mov
mov
imul
jmp
adc
push
mov
mov
imul
mov
test
and
mov
fldt
cltd
push
cmp
stos
or
inc
xchg
mov
sahf
jge
pop
stos
add
mov
pop
xor
shl
dec
enter
in
stos
mov
inc
stos
sbb
lds
cmc
insl
lea
mov
mov
mov
sub
mov
inc
addr16
jb
in
cmp
or
stos
inc
mov
dec
xlat
cld
mov
adc
jmp
push
mov
inc
stos
fisubrl
pop
or
shrb
adc
out
imul
rorb
mov
out
pop
xor
outsb
loopne
stos
lods
imul
xchg
mov
stos
jge
mov
xor
daa
jmp
jae
rolb
inc
push
das
xchg
adc
dec
xchg
enter
mov
add
jge
mov
stos
loop
xchg
or
mov
loopne
repz
sbb
stos
xor
lock
mov
sbb
jmp
mov
sbb
or
stos
cli
push
ds
mov
cmp
frstor
cmpsb
inc
stos
dec
add
jg
imul
stos
mov
bound
mov
dec
and
xchg
jns
cmpb
stos
nop
dec
sub
push
imul
pop
xchg
and
scas
insb
outsl
stos
into
imul
cwtd
xchg
cmpsl
mov
lret
fmul
adcl
pop
lcall
add
rorl
mov
mov
stc
push
push
add
push
aaa
lcall
xchg
cmpl
push
fs
sub
iret
stos
jnp
add
inc
imul
mov
pop
jo
test
orl
daa
stos
mov
jp
jge
ljmp
push
stos
je
cmp
stos
mov
fwait
shr
imul
jno
cmp
stos
mov
aas
xchg
jb
iret
mov
insl
pop
add
andl
sbb
in
loop
adc
dec
sub
inc
sub
jnp
loope
xchg
in
mov
fwait
mov
pop
jb
dec
xchg
lahf
iret
mov
negl
xor
or
movsb
je
add
pop
jl
adc
mov
cmp
push
xor
xchg
lods
out
xchg
stos
sub
add
sarb
cmp
out
sbb
ret
inc
ss
mov
pop
popf
or
imul
out
pop
add
add
lcall
ss
test
pop
mov
adc
ficoml
add
test
stos
inc
add
xchg
xchg
stos
inc
push
mov
mov
iret
out
es
or
stos
xor
push
testl
sbb
add
xlat
or
popf
pop
stos
stos
lds
push
jbe
icebp
cmp
inc
or
loop
insb
addr16
mov
mov
daa
jg
push
lock
pop
fwait
mov
mov
xor
mov
xchg
dec
jl
xchg
call
in
mov
cmpsb
inc
mov
rep
ss
stos
pop
pop
cmp
pop
add
mov
enter
mov
daa
or
scas
mov
and
popf
movsb
mov
stos
dec
ljmp
fimuls
pop
adcl
push
adc
repz
or
scas
or
scas
pop
scas
scas
stos
push
push
push
adc
mov
divl
push
cmpsl
jmp
inc
push
scas
adc
stos
pop
fs
pop
stos
inc
pop
and
add
mov
jp
xlat
test
stos
repz
lret
stos
jno
or
lock
mov
ror
push
stos
jmp
push
sub
leave
push
jl
nop
xlat
pusha
push
mov
scas
aaa
jge
in
clc
xorb
stos
sbb
push
xor
mov
push
add
stos
out
inc
xlat
inc
pminub
call
cld
shl
stos
bound
shlb
sub
stos
adcb
jae
sti
cmp
sarl
fldt
add
cmp
cmp
imul
xchg
pshufw
fistl
mov
add
or
daa
mov
rolb
stos
inc
cli
inc
repz
lret
mov
mov
fildl
adc
push
xchg
push
lods
stos
js
inc
dec
stc
divb
pop
cmp
cmpsb
jae
pop
inc
out
xchg
jmp
in
lds
lret
fcmovne
add
xchg
or
mov
cmp
leave
lods
pop
and
into
or
stos
pop
mov
xor
push
stos
sbb
ljmp
stos
bndldx
inc
or
jl
cmpsb
cmp
stos
idivl
fwait
dec
adc
cwtl
bnd
stos
leave
xchg
jno
xchg
inc
stos
and
mov
ss
out
stos
push
xor
pop
push
ret
or
inc
daa
mov
xchg
sbb
dec
xor
aam
cwtl
jne
scas
pop
faddl
sub
shlb
aad
test
xchg
stos
dec
mov
imul
cltd
orl
fidivrs
rcrl
cmc
add
movsb
cltd
fwait
xchg
insb
stos
filds
rcll
stc
fwait
mov
jge
dec
shrb
out
push
stos
pushf
lret
or
stos
push
mov
shll
test
fcmovb
stos
fcoml
pop
fildl
fxch
stos
mov
std
in
or
sbb
int3
insb
dec
lods
jg
imul
fisttpll
dec
jmp
xor
xor
xchg
ret
ljmp
mov
sub
ja
cmpsl
push
add
inc
mov
dec
dec
lock
and
jmp
stc
movsl
out
xchg
stos
adc
pop
lods
xchg
stos
jnp
mov
mov
movsl
stos
fdivrs
or
pusha
jbe
mov
dec
adc
pop
imul
mov
cmp
pop
fnstcw
int
xchg
push
popf
sub
jle
pop
push
xchg
inc
loopne
stos
add
mov
mov
sbb
adc
cwtl
or
push
stos
xchg
cltd
jbe
xor
mov
sub
stos
sub
mov
ds
mov
orb
lods
jmp
jnp
stos
scas
int3
rol
in
dec
xor
adc
cwtl
and
add
cmp
popa
subl
xor
jecxz
inc
sub
mov
adc
jmp
xchg
stos
sub
frstor
inc
sub
and
sub
mov
clc
test
popa
or
jnp
cmpsl
pop
stos
rcll
incb
call
mov
pop
fldcw
mov
dec
aad
mov
mov
aaa
jmp
iret
xchg
test
stos
js
nop
ljmp
test
fdivrp
stos
jl
fldl
stos
push
in
mov
mov
cwtl
stos
sbb
inc
leave
pop
sub
repnz
xchg
push
shlb
das
pop
add
adc
add
subl
imul
jbe
outsl
daa
sbbl
dec
stc
subl
fcomps
data16
movsl
xchg
out
or
loope
pop
fisubrl
roll
push
repnz
push
movsl
mov
jne
xchg
loope
sbb
out
aas
into
scas
dec
stos
cmpsb
jle
add
aad
mov
mov
dec
sarb
stos
sub
ja
insl
xchg
add
stos
add
mov
sbb
jmp
stos
pop
lods
out
fists
push
das
cwtl
cmp
dec
imul
je
rcrb
sub
fidivrs
mov
mov
addr16
stos
jns
adc
mov
into
movsb
stos
insb
testl
cwtl
pop
daa
cmp
test
mov
fisubs
cld
stos
aaa
push
mov
mov
movsb
pop
adc
stos
ret
scas
xchg
adc
out
push
movsb
pop
add
pop
mov
divb
mov
push
sbb
test
jl
xchg
and
gs
test
rol
dec
fisttpll
stos
cs
mov
addr16
sub
out
jecxz
decl
jg
xor
jnp
lret
lahf
outsb
mov
stc
scas
sbb
inc
jmp
mov
push
xchg
mov
cmp
cld
pop
sbb
cmp
sti
arpl
cmp
shll
ret
js
sbb
and
add
pop
stos
cmp
fstpl
or
mov
cmpsb
into
in
stos
mov
mov
ss
dec
inc
adc
xlat
stos
mov
sbb
out
leave
xchg
dec
testl
ficoml
lea
dec
hlt
fdivl
mov
stos
into
xor
mov
add
xchg
repz
sarb
int3
lods
dec
push
rcl
xchg
or
xor
stos
loope
sti
push
cmp
cltd
sub
out
push
test
adc
jb
out
mov
stos
testb
mov
cs
mov
mov
xor
mov
jmp
pop
fcomps
leave
pop
pushf
mov
scas
stos
sub
xchg
out
add
xchg
add
stos
daa
inc
mov
dec
imul
lcall
stos
scas
or
xchg
dec
sub
movsb
and
test
mov
aas
adc
pop
stos
scas
push
jg
jno
jle
int3
push
lods
loope
out
jo
rol
pushf
sbb
sbb
iret
stos
cmp
mov
add
shrl
pusha
sbb
cli
push
mov
call
subl
push
popa
mov
jns
lret
cs
stos
lock
push
pop
cwtl
test
ss
in
cmpsb
mov
push
iret
mov
adc
mov
sub
mov
rcl
dec
and
daa
enter
xchg
jl
pop
sub
stos
je
mov
clc
and
stos
cmp
inc
pop
movl
popf
mov
into
dec
or
jne
pusha
daa
dec
outsb
pop
adc
xor
pop
ja
and
lret
add
pop
mov
stos
ficoms
and
cmp
outsb
sub
stos
pop
int
mov
cmp
pop
cmp
pop
adc
test
push
push
xchg
pushf
stos
adc
notl
stos
scas
sub
jg
stos
adcl
repz
fists
imul
bound
in
jb
jecxz
dec
outsb
clc
pop
mov
iret
lret
cmpsl
sub
xor
mov
inc
insb
jmp
das
iret
movsb
fwait
pop
adc
jp
stos
and
sbb
dec
cmp
fildl
inc
pop
mov
push
insb
or
mov
outsb
or
lods
mov
dec
fwait
sbb
cmp
stos
lds
std
mov
adc
add
inc
loopne
mov
stos
mov
inc
int3
stos
mov
jle
sbb
sub
mov
imul
stos
sti
fwait
push
mov
addl
pop
push
pushf
mov
arpl
imul
or
push
pop
pop
and
jmp
lods
shl
or
push
cwtl
mov
sub
xor
push
stos
jns
out
xchg
stos
pusha
addr16
pop
push
test
rep
mov
or
dec
stos
xorb
xchg
loopne
and
mov
push
add
jns
mov
pop
inc
scas
stos
rcl
jae
mov
sbb
pop
pop
mov
subb
shl
lods
bound
mov
xor
aas
sbb
jge
fcom
aad
and
bound
sahf
dec
in
outsl
cmp
xchg
adc
loope
xor
stos
sysret
gs
icebp
and
jmp
and
push
pop
sbb
jl
push
or
fisubrl
jo
stos
jb
mov
xchg
lods
fcomi
test
mov
flds
cs
setp
loopne
pusha
stos
pop
sub
std
sub
push
push
sub
pop
mov
fcom
dec
push
pop
stos
movsb
mov
and
push
cmp
fwait
mov
mov
mov
lock
or
xor
lds
scas
mov
push
cmp
addr16
cmp
pop
pop
add
mov
lret
in
jl
adc
xlat
inc
push
sub
js
imul
mov
xor
mov
std
stos
sahf
cmp
out
xchg
stos
or
dec
movsb
das
cli
cmp
stos
and
std
sbb
mov
stos
add
stos
loopne,pt
push
stos
adc
cs
xchg
jmp
stos
cmp
daa
arpl
pop
or
push
je
push
sub
popl
int3
pop
pop
sub
cli
add
mov
lcall
test
daa
xchg
sbb
std
mov
pop
adc
jno
in
mov
jg
sub
sbb
pop
aam
xchg
stos
loope
jg
imul
sbb
dec
xchg
call
ja
cld
sahf
mov
movsb
jmp
sbb
sbb
fwait
bound
xchg
mov
enter
mov
push
xor
jno
mov
std
sub
add
mov
mov
jge
push
mov
add
stos
mull
stos
cmp
mov
sbb
stos
mov
pushf
mov
push
out
sub
hlt
push
pop
inc
popa
mov
sbb
cmc
into
pop
mov
stos
sbb
xchg
push
in
es
jl
test
lods
push
jg
dec
push
std
imul
ficoml
jnp
fcompl
dec
adc
outsl
nop
stos
arpl
popa
movsb
lea
je
cmp
addl
stos
dec
fwait
push
in
or
fisubrl
sbb
push
lcall
dec
insl
nop
sbb
push
mov
mov
stos
aas
add
leave
rcll
jno
mov
dec
mov
jne
adc
aad
in
sbb
sahf
movsb
push
jecxz
stos
pop
mov
test
lret
jno
int
enter
fld
fs
xchg
sbb
inc
addl
daa
jne
jns
subb
xchg
iret
and
repz
aam
addr16
mov
sub
out
scas
leave
clc
cltd
fadds
stos
mov
hlt
fwait
insl
xchg
push
adc
mov
jge
xchg
std
mov
jg
adc
ficoml
roll
pop
stos
enter
ja
mov
jns
sahf
stos
notb
scas
jecxz
pop
adc
loopne
gs
mov
pushf
std
mov
cmp
cmpsb
and
shrl
mov
mov
mov
das
popa
push
test
pop
fst
aad
pop
xchg
mov
lahf
lods
mul
and
repz
mov
mov
push
and
stc
fldl
insb
stos
mov
jnp
std
jg
inc
test
imul
fidivrl
and
imul
orb
jp
sub
aad
push
jbe
popa
ss
shlb
sbb
movsb
sbb
push
or
add
push
cmp
nop
jbe
stos
cli
pop
sub
mov
add
out
cmp
je
fildll
jnp
sub
stos
adc
mov
jmp
lods
jne
pop
xor
push
xchg
mov
stos
pushf
mov
cmpsl
xchg
int3
push
stos
mov
imul
lea
jmp
push
dec
dec
jle
cmp
outsl
push
mov
mov
mov
loop
das
adc
and
cli
cltd
mov
aas
mov
cmp
repz
pushf
lahf
mov
xor
mov
inc
jbe
ljmp
mov
lods
movsb
outsl
mov
fwait
insl
dec
push
scas
or
stos
xor
test
and
hlt
jnp
mov
or
scas
inc
sti
cmpsb
or
or
xor
rcrl
mov
das
and
pop
push
je
cmpsb
adc
outsl
stos
mov
in
loopne
adc
mov
daa
movsb
js
xor
add
fisubs
inc
pop
dec
les
xor
and
push
fsubl
pop
push
daa
xchg
mov
lret
fisttpl
jo
xchg
shlb
stos
insl
cli
push
fsubs
das
mov
std
or
pop
fwait
adc
movsl
clc
mov
push
imul
or
addr16
sub
lret
lret
jmp
pop
adcl
int3
mov
in
popa
popf
mov
icebp
xchg
xor
fwait
and
arpl
mov
xchg
xchg
push
push
stos
add
add
jnp
enter
lods
mov
cmpsl
inc
mov
daa
call
rclb
es
inc
stos
cmc
cmpb
clc
fsubrl
data16
pop
stos
mov
inc
pop
add
xor
adc
ljmp
cmp
push
outsl
lods
lahf
pop
fs
subb
dec
mov
cmpsl
jg
mov
push
xchg
push
push
push
jns
xor
daa
xchg
negb
imul
jmp
lret
movsb
cmp
sub
mov
rorb
xor
lds
xchg
pop
js
stos
inc
adc
out
mov
jns
xor
jge
inc
pop
mov
mov
ljmp
cmp
inc
jmp
mov
js
arpl
lods
repnz
sti
add
les
stos
int
xchg
adc
fcomps
lds
pop
cld
push
lea
nop
xchg
stos
pop
xchg
scas
push
shll
orb
cmpsl
rcr
or
mov
imul
mov
arpl
inc
jg
int
insb
mov
mov
cwtl
dec
popa
jb
stc
xchg
or
addb
aam
pop
rolb
push
push
jnp
mov
or
xor
mov
mov
lret
loop
add
jp
scas
testl
nop
mov
pop
outsb
dec
xchg
fidivl
jae
stos
repnz
dec
stos
inc
sti
ljmp
mov
push
loope
sbb
sub
cmc
pop
fimuls
lret
pop
fs
je
mov
les
or
cli
je
das
mov
lret
stos
sahf
lock
jmp
cmp
xchg
popf
lahf
or
dec
in
xor
nop
in
testl
loop
insb
cmp
xor
cmp
dec
stos
subb
movsb
dec
mov
push
jmp
xchg
and
out
xchg
insl
xchg
movsb
loope
or
mov
push
arpl
call
cli
icebp
sbb
fwait
in
xchg
das
movsb
jl
fisubs
fisttpll
mov
add
xor
cltd
das
repz
bound
es
push
mov
inc
jbe
out
imul
mov
std
jmp
mov
daa
mov
xchg
or
scas
cltd
iret
outsl
stos
adc
xchg
pop
mov
jne
sub
mov
in
rcr
stos
adc
shrb
stos
arpl
mov
pop
jmp
jne
outsl
and
adc
mov
cmp
mov
adc
out
sub
mov
mov
stos
lods
jle
add
xor
mov
fnstsw
imul
add
mov
mov
jmp
int
or
arpl
xchg
lea
push
inc
mov
mov
xchg
jb
cld
icebp
jnp
nop
sbb
cmp
out
addr16
pop
sahf
bound
mov
push
mov
data16
pop
stos
and
ret
mov
mov
mov
mov
jl
cmp
xor
fwait
add
in
jg
int
stos
push
pop
ret
loop
pop
sub
stos
xchg
push
sbb
pop
loope
xor
mov
xor
mov
das
stos
xlat
dec
movsl
lea
data16
lcall
cmp
stos
xor
test
stos
mov
enter
in
stos
xchg
cmc
mov
stos
lea
int
nop
ljmp
xor
int3
cmp
bound
and
stos
je
clc
lods
rorl
fucomip
mov
stos
push
out
loope
cmp
pop
imul
xchg
xor
mov
jnp
mov
repz
popf
fnstenv
mov
lds
lcall
out
in
test
cmpsb
std
jnp
aad
dec
ljmp
sbb
xchg
and
stos
les
push
lods
inc
jcxz
mov
and
cltd
cli
xor
push
test
add
cmp
dec
push
cld
adcl
daa
pop
xchg
dec
aad
addl
mov
xchg
repnz
jnp
nop
stos
fadds
adcb
es
dec
jb
subl
aaa
adc
stos
and
nop
push
decl
dec
mov
sub
inc
push
cmpsb
xor
xchg
stos
push
mov
sub
stos
es
scas
pop
outsl
xchg
stos
push
stos
mov
mov
fcmovnbe
push
xor
push
pop
aaa
loopne
es
scas
stos
stos
imul
arpl
stos
addl
stos
jnp
arpl
push
add
inc
stos
xchg
shll
inc
stos
icebp
mov
xor
daa
fdivs
pop
xchg
mov
movsl
or
enter
fs
sub
lods
sub
jmp
inc
incb
je
xchg
fcoms
lods
xchg
cwtl
adc
mov
leave
xchg
pop
jno
lods
mov
xor
mov
pop
xor
push
fmuls
orb
fidivrl
jecxz
sub
and
lahf
imul
cwtl
xchg
and
leave
jmp
cli
movsl
loopne
mov
xchg
pushw
sub
jmp
sbb
xorb
mov
jle
fstpt
mov
or
ljmp
cld
mov
out
cld
lods
ds
push
int3
imul
decl
por
fisttpl
js
stos
movsb
pop
fs
dec
mov
add
xchg
push
scas
sbb
mov
mov
cs
stos
pop
test
outsb
int
in
loopne
xor
lds
stos
add
repnz
cmp
xchg
pop
call
in
push
inc
jnp
daa
pop
mov
mov
lds
or
std
and
stc
sbb
ss
xchg
cmpsl
mov
pop
jmp
jge
stos
ss
fldl
push
shrl
fadds
pusha
stos
lods
xchg
out
pop
imul
mov
arpl
rorb
loopne
hlt
lods
rcl
loop
sbb
jg
stos
leave
pop
jl
push
bnd
stos
adcl
or
daa
jg
xor
wrmsr
stos
push
loopne
and
lds
adc
ljmp
dec
dec
fsubrp
xchg
sbb
imul
repz
pop
mov
and
cli
fiadds
rcrl
stos
lods
nop
dec
xor
es
pop
stos
stos
cwtl
lret
xor
sbb
push
shl
stos
jae
ja
jge
ds
add
leave
and
push
cmpsl
movsl
ja
jle
mov
jmp
dec
das
push
cmpsb
xchg
sbb
jmp
insl
cwtl
jns
jg
setnp
sbb
and
popa
mov
lret
int
data16
lret
adc
jmp
and
dec
xchg
ss
int3
repz
sub
and
sbb
lods
dec
jnp
inc
pushw
add
add
gs
js
mov
pop
stos
scas
dec
dec
mov
sbb
stos
ljmp
outsb
jmp
mov
into
pop
inc
xchg
cwtl
loopne
cmp
mov
add
mov
add
xor
sbb
stos
mov
pop
in
mov
xlat
push
mov
xor
pop
mov
mov
rcrl
xor
or
daa
adcl
mov
or
mov
xchg
cmpsl
stos
int3
inc
mov
dec
xlat
xchg
or
sbb
lock
fwait
mov
push
test
hlt
fmull
js
pop
sbb
xor
xchg
cmp
jl
inc
rol
and
out
stos
push
f2xm1
mov
xlat
loope
sbb
daa
mov
rcl
inc
fwait
xchg
orb
leave
insb
jnp
jns
add
lea
shll
fwait
cmp
aas
add
mov
leave
testl
pop
sub
adc
xchg
stos
es
mov
mov
and
repz
push
in
das
pop
stos
mov
loop
mov
dec
and
ljmp
bound
pop
mov
or
or
pop
cwtl
mov
xor
dec
dec
xchg
jmp
jns
pusha
fcoms
icebp
adc
cmp
xor
loop
jge
call
mov
stos
sar
jp
into
inc
lods
insb
stos
in
jne
lods
lcall
lea
or
loopne
cmp
push
dec
stos
push
add
mov
pop
daa
sub
xchg
adc
xchg
stos
xchg
sub
mov
cmc
jl
adc
rolb
stos
adc
mov
stos
mov
pusha
dec
cmp
gs
ret
push
mov
mov
sarl
stos
ljmp
push
repz
enter
push
ret
inc
push
fmulp
stos
sarb
stos
mov
dec
mov
sahf
cmpsl
mov
xor
jns
addr16
sbb
imul
jle
dec
push
push
fwait
iret
xchg
imul
and
rolb
aaa
jmp
fisubs
add
stos
push
push
enter
arpl
in
mov
sub
popf
stos
stos
sahf
or
stos
push
mov
mov
xchg
ljmp
sahf
shr
cmp
and
inc
pop
cmc
testb
xchg
dec
mov
pop
addr16
out
addr16
push
imul
pop
sti
idiv
in
mov
xchg
lcall
adc
jb
sub
pop
mov
js
daa
hlt
dec
mov
sbb
popa
test
jo
adc
fldcw
je
lock
rcll
in
xchg
addr16
imul
scas
into
jl
subl
lcall
or
mov
stos
insb
loope
or
dec
mov
cmp
stc
scas
mov
cld
sbb
mov
cmp
mov
int3
loop
outsb
int3
mov
test
xchg
inc
mov
scas
cmp
xchg
mov
mov
fs
shrl
dec
push
pop
mov
lods
movsl
add
push
add
pusha
std
outsb
dec
stos
dec
fisubrs
jmp
add
enter
and
cwtl
test
loop
gs
add
dec
loopne
mov
stos
pop
cmpsl
and
xchg
pop
inc
dec
jo
mov
cld
cmpsb
enter
mov
shll
das
insb
jns,pt
push
popa
jg
sbb
lcall
or
and
call
xor
stos
pop
mov
ljmp
fstl
mov
and
mov
jne
xchg
in
mov
mov
jg
inc
mov
mov
adc
stos
jno
xor
add
and
adc
cmp
daa
push
dec
xor
cmpsb
nop
ret
stos
out
jmp
adc
push
inc
mov
in
mov
mov
sub
push
xchg
stos
je
adc
push
or
test
inc
mov
stos
mov
cmp
imull
lret
cmp
xchg
in
push
cmp
mov
fwait
ss
push
add
adc
lods
cmpsb
xor
decb
jmp
in
stos
data16
sbb
or
push
in
xchg
rorb
xchg
or
inc
add
imul
xchg
addr16
dec
call
fwait
adc
sub
nop
mov
push
jno
pop
lods
ret
push
in
push
cmp
stos
imul
into
addr16
pop
inc
adc
mov
dec
stos
divb
nop
sub
pop
pop
add
negb
lea
push
stos
imul
test
imul
imul
mov
stos
mov
pushf
xchg
mov
mov
and
hlt
std
sbbl
add
popf
sbb
adc
push
cmp
scas
imul
out
inc
inc
xchg
cltd
je
jmp
mov
mov
jae
mov
stos
dec
mov
push
cwtl
stos
mov
mov
dec
xchg
out
sbb
mov
out
fwait
daa
xorb
xchg
fnclex
add
repnz
adc
stos
and
addr16
mov
subb
add
lret
addr16
jp
mov
dec
mov
cwtl
outsl
fwait
xchg
in
pop
dec
std
push
jmp
push
cmp
fidivrs
sbb
pop
push
mov
lock
icebp
jns
mov
lods
stos
pop
or
add
xchg
cmp
and
lea
inc
inc
lods
stos
imull
adc
das
sti
mov
dec
out
mov
bound
adcl
cs
stos
rcll
lcall
stos
and
clc
mov
or
mov
and
and
lods
out
mov
pextrw
mov
rcrl
mov
push
testb
test
cli
ja
adc
stos
xchg
pop
mov
test
mov
int3
adc
std
mov
and
es
std
xchg
daa
stos
ret
mov
ss
add
mov
adc
sahf
das
mov
mov
fisubs
dec
stos
out
cli
sub
addb
es
gs
pop
mov
sbb
mov
stos
test
jmp
out
xchg
cld
and
mov
jns
repz
repnz
addl
stos
dec
lahf
push
cmp
stos
jle
and
mov
push
sbb
out
idivb
fs
adc
and
mov
nop
addr16
jbe
mov
test
mov
fbld
mov
dec
mov
lahf
jg
pop
stos
or
nop
add
cmc
lret
sub
adc
insl
dec
and
fsubr
lods
xchg
loopne
ret
and
popf
test
jecxz
stos
dec
sub
cmp
js
enter
dec
stos
sbbl
imul
repz
mov
pop
out
stos
aas
add
push
cwtl
daa
fnstsw
test
jecxz
jnp
pop
out
sbb
mov
mov
or
loop
push
and
sahf
stos
sbb
fcoml
xchg
stos
fcmovbe
xor
addr16
add
fwait
pop
or
scas
pop
stos
stos
lods
xchg
and
xchg
dec
or
stos
cmp
add
into
mov
repnz
addr16
mov
jno
imulb
jns
loop
movsb
test
stos
mov
and
inc
stos
sbb
stos
gs
mov
stos
adc
add
ret
and
jmp
js
repz
sbbl
into
inc
dec
stos
lahf
ljmp
stos
xchg
cli
in
lret
push
xchg
sub
add
or
stos
movsb
mov
jmp
inc
daa
icebp
subb
into
xor
sbb
xchg
xorl
bound
pusha
stos
rol
add
hlt
push
sbb
inc
pop
mov
or
stos
int
cmp
js
sub
sub
pop
nop
stos
gs
xor
inc
mov
rorb
popf
mov
nop
aad
stos
scas
xor
jns
outsl
inc
arpl
mov
xlat
stos
andl
shrb
adc
push
or
sarb
pop
nop
lret
pop
stos
mov
xchg
mov
push
or
add
aad
dec
test
adc
subl
push
out
push
scas
popf
push
inc
add
and
ds
lock
aaa
xchg
out
mov
nop
jo
sub
xchg
dec
cwtl
jmp
or
test
lahf
je
stos
add
jbe
mov
pop
adc
dec
stos
mov
test
nop
stos
or
xchg
jmp
dec
imulb
test
mov
xor
sti
stos
popa
cld
jne
mov
idiv
sar
mov
ja
push
dec
cli
cmp
cmpsl
jl
push
stos
movsl
call
add
fwait
clc
push
xor
dec
jno
mov
stos
das
daa
mov
cli
or
test
pop
adc
dec
stos
mov
mov
stos
ja
imul
pop
adc
jae
lret
xchg
sbb
scas
bound
ja
sbb
in
fwait
das
mov
icebp
stos
and
push
sub
cltd
cmp
sub
outsl
fistps
aad
push
adc
jns
mov
ret
adc
jmp
push
in
push
in
xchg
sub
xchg
pop
cmp
lret
mov
movsl
push
jecxz
imul
imul
mov
add
and
cli
insl
mov
push
mov
lds
mov
in
mov
add
arpl
inc
xor
mov
jae
mov
stos
ffreep
out
ret
jl
push
sub
dec
adc
or
stos
movb
int3
cmp
shrl
cli
cs
movsb
sub
int3
dec
sbb
scas
xchg
jne
jb
and
cmp
stos
or
pop
pop
mov
scas
and
and
cli
mov
inc
bound
push
sub
or
cmp
stos
jl
mov
subb
dec
gs
ja
test
jo
gs
ffree
or
push
push
popa
lret
clc
xorl
stos
pop
sbb
stos
in
sub
stos
mov
adc
aas
test
pop
scas
out
mov
enter
test
fwait
cmp
push
fsts
mov
in
add
stos
sbbb
and
mov
outsb
out
stos
push
in
je
rorb
sub
test
and
push
in
jmp
xor
scas
int
stos
outsl
push
out
adc
mov
stos
std
sub
fsubrs
pop
sahf
jge
jmp
sbb
pop
xchg
bound
pusha
mov
jmp
cltd
inc
adcb
stos
in
push
loop
jne
mov
sahf
cmp
movsb
shrl
test
inc
lret
es
jmp
stos
sub
mov
and
stos
imul
ficompl
sub
xlat
xor
das
outsl
loop
mov
and
mov
js
sbbl
xchg
stos
mov
fwait
popa
nop
cmpsl
popf
mov
outsb
push
lods
lea
mov
or
pop
xor
push
inc
das
stos
lea
mov
sub
jnp
and
pop
fsts
lret
stos
push
jmp
adc
stos
inc
mov
push
inc
push
fs
mov
fidivrl
outsl
in
pop
mov
dec
icebp
jnp
out
mov
fmull
in
stos
xchg
pushf
bound
stos
cld
out
adc
xchg
jnp
push
imul
dec
into
sahf
xor
jne
or
xchg
mov
pusha
sub
dec
mov
movsl
cwtl
negb
add
inc
fistl
stos
xor
shll
test
sub
push
out
xor
lods
iret
vmovups
stos
in
pop
and
xor
cwtl
jmp
arpl
stos
ret
out
pop
mov
jmp
nop
stos
popf
push
dec
mov
movsl
retw
imul
stos
mov
adc
jmp
inc
fbld
mov
or
sub
cmpsb
mov
xchg
dec
cmp
f2xm1
ljmp
and
mov
pushf
mov
loopw
sbb
inc
or
iret
into
movsb
les
jmp
adc
fnstcw
inc
inc
xor
mov
rorl
xchg
xchg
pop
mov
jcxz
dec
push
fwait
adc
iret
jbe
stos
insb
movsl
rorb
test
mov
stos
sbb
enter
or
mov
idivb
pop
stos
dec
sar
jecxz
and
insl
and
xchg
jno
es
jbe
push
dec
stos
jmp
dec
mov
xor
in
adc
aas
and
ret
movb
rcll
dec
ja
test
out
and
add
push
pop
mov
jl
pop
cmp
cs
sbb
mov
cmp
adc
sti
xor
jl
add
lock
bound
xchg
lahf
lods
loop
scas
fisubs
mov
or
cmp
stos
and
inc
and
mov
js
push
fsubs
leave
fcompl
outsl
fs
lcall
movsb
add
inc
xor
fdivl
pusha
stos
fadds
and
outsb
nop
aam
mov
sti
stc
out
xchg
sub
daa
and
cs
rcrl
stos
dec
lea
jp
test
stos
ret
mov
mov
les
lcall
xlat
lea
stos
push
push
je
mov
loopne
stos
sub
aaa
sbb
pop
sbbb
add
sub
jmp
jns
imul
cmpsb
mov
mov
into
xchg
imul
dec
icebp
jbe
adcb
stos
lret
mov
aaa
inc
fsubrs
jb
pusha
mov
bnd
movsl
adc
adc
push
push
lods
pop
xchg
stos
mov
dec
jae
jnp
xchg
and
les
stos
repnz
repz
inc
adc
stos
cmp
outsb
push
dec
cltd
lahf
sub
sbb
mov
data16
push
sub
out
xchg
sbb
je
push
loop
aam
adc
pop
data16
inc
push
or
loope
mov
lods
lods
jecxz
test
ja
and
add
enter
lods
popa
stos
fidivrs
mov
enter
jl
stos
xchg
mov
pop
iret
stos
divl
cli
les
inc
mov
sub
mov
scas
nop
enter
and
mov
call
imul
insb
or
stos
aas
lret
and
rorb
test
ror
fwait
adc
in
insb
mov
popa
iret
pop
or
push
pop
adc
int
adc
mov
mov
sbb
in
sbb
mov
jmp
pop
sub
jb
pop
adc
ss
xchg
int
push
xchg
fiadds
or
sub
adcb
stos
aad
loop
cltd
lea
mov
stc
fidivrs
adc
push
mov
push
lods
inc
inc
adcb
mov
in
pop
add
stos
push
incl
sub
shl
jnp
hlt
iret
test
lock
les
sub
xchg
pop
sti
ficomps
cmp
mov
mov
and
pop
call
xor
pop
inc
arpl
stos
imul
aad
xchg
nop
insb
enter
sub
pop
std
lock
stos
dec
jae
xchg
pop
mov
xchg
loopne
mov
mov
and
addr16
push
fxch
mov
stos
es
dec
insb
xchg
out
movsb
xchg
fiaddl
jae
and
in
stos
add
lcall
push
inc
sub
daa
or
test
ret
stos
mov
clc
jp,pn
aad
lret
imul
sarl
mov
iret
out
push
stos
or
rolb
xchg
dec
cmpb
cld
sbb
dec
sub
insl
hlt
imull
lods
cmpsb
cld
push
mov
mov
gs
adc
inc
fisubs
sbb
je
js
and
pop
out
jge
pushf
stos
jg
lock
stos
cmpl
insl
andb
stos
call
mov
jmp
push
pop
lret
or
cmp
sub
push
cwtl
mov
stos
test
rol
insl
mov
ret
sbb
mov
stos
fsts
sub
iret
mov
mov
out
gs
shrl
cltd
mov
mov
adc
cmpsl
fucomp
lods
leave
push
pushw
sub
adc
movsb
mov
in
push
jecxz
aam
pop
fwait
mov
and
jmp
or
cmp
sub
cmp
and
fwait
repnz
addr16
xchg
add
jge
ficoms
xor
or
add
mov
shrl
fs
pop
stos
xor
fwait
add
ja
jp
mov
mov
and
in
adcb
xlat
call
mov
cmpsb
mov
lock
dec
mov
jmp
shrl
lods
sti
push
add
mov
addr16
pop
sbb
dec
dec
out
jl
pop
loope
stos
cmp
and
sti
mov
and
popf
sub
scas
stos
sub
gs
stos
cmp
popa
cmp
insb
lahf
scas
pop
ret
mov
je
jecxz
repz
sbb
mov
aas
adc
mov
rcll
dec
dec
mov
repz
stos
incl
jbe
outsl
cld
jmp
push
pop
xchg
xchg
adc
add
adc
jns
inc
jle
shrl
mov
fwait
mov
mov
lret
iret
lods
mov
sub
push
and
dec
cld
pop
aaa
js
sub
fimuls
xchg
add
add
stos
mov
adc
leave
stos
in
test
sub
jae
xor
sub
js
std
negb
and
ficoml
mov
aam
mov
jbe
mov
dec
xchg
mov
notb
add
movd
stos
push
dec
iret
rclb
int3
stos
in
jle
cmpl
mov
fcoml
mov
or
cmpsb
push
repnz
dec
and
add
lret
push
mov
scas
test
fs
stos
push
jo
cs
cmp
fsubrl
aas
inc
es
daa
std
test
pop
inc
ret
jp
jmp
cmpsl
xchg
icebp
cmp
out
add
int
xor
test
add
jmp
push
jmp
mov
jns
sub
mov
xor
stos
fcoms
decb
jmp
cli
sub
sahf
fsubrs
jmp
lahf
in
mov
fwait
mov
dec
imul
std
insb
jmp
cmp
arpl
mov
mov
lret
jae
mov
andl
dec
or
addl
mov
mov
lods
data16
or
in
jge
test
pop
mov
rclb
mov
xlat
movsb
sbb
mov
push
push
mov
dec
int
out
mov
mov
xchg
imul
inc
push
pusha
xor
cmp
xchg
std
je
mov
pop
jle
rcrl
mov
sub
jge
jmp
int
push
inc
xor
lods
out
fldcw
push
pop
in
stos
jo
ja
add
dec
stos
imul
xchg
pop
adc
pusha
dec
andl
dec
push
add
jp
mov
pop
fdivrl
stos
and
leave
add
fwait
roll
mov
cmp
inc
xchg
mov
fstpt
jae
lcall
fwait
mov
mov
jns
jmp
mov
sbb
movsl
xchg
jle
ljmp
lret
out
stos
xchg
into
mov
shrl
insl
jl
daa
cld
lea
inc
out
fucomi
push
and
push
sbb
cmp
mov
add
dec
stos
sub
adcl
mov
inc
jo
push
mov
stos
dec
push
test
dec
jmp
stos
fidivs
shll
icebp
fimuls
jp
mov
scas
arpl
stos
fdivs
test
mov
and
mov
fidivrl
add
loop
insb
fsubl
fs
scas
jl
movsb
pop
mov
xor
das
loopne
in
call
or
lcall
or
cld
cmp
sub
mov
jg
and
mov
cmp
mov
fdivl
mov
xchg
dec
stos
mov
pop
gs
daa
inc
stos
cmp
jb
and
jmp
aam
pop
scas
lfs
add
inc
imul
stos
push
psubsb
pop
cmpsl
shrl
mov
mov
rcrl
sub
nop
daa
xchg
mov
inc
mov
lahf
nop
mov
sub
enter
jmp
jnp
iret
sub
add
lock
and
jnp
sub
sbb
mov
into
int
out
lds
clc
xchg
xlat
cltd
rep
es
or
mov
stos
mov
adc
inc
aam
lods
stos
add
clc
mov
inc
xor
push
pop
cmc
push
fwait
in
push
jb
ja
jno
fcmovu
stos
xchg
lahf
pop
xor
imul
orb
mov
insb
clc
mov
fstpt
stos
mov
add
testl
stos
fs
fisubrs
xchg
repnz
push
into
andl
and
mov
movsl
lcall
popa
mov
daa
inc
int
xchg
ljmp
fisubrl
out
mov
stos
jl
pop
xorb
shrb
inc
sbb
lds
sub
cwtl
idivb
jle
stos
icebp
fcoms
inc
stos
pop
pop
cmp
lret
dec
sub
mov
hlt
std
stos
jo
mov
sub
loop
mov
dec
or
and
xchg
inc
stos
jb
int
adc
ja
fwait
cmp
lea
pop
add
imul
mov
es
stos
popf
pop
sbb
xor
push
imul
fwait
mov
hlt
sbb
push
pushf
xchg
ret
xor
inc
add
mov
mov
mov
out
fisttpl
std
add
or
stos
cltd
insb
cli
cs
in
mov
dec
adc
push
inc
lahf
sub
pop
adc
push
addr16
movsb
stos
pushf
stos
into
dec
lcall
loope
pop
xlat
outsl
stos
int
hlt
push
xchg
mov
cld
lods
sbb
mov
addr16
ficomps
sahf
xchg
ljmp
cld
cltd
mov
push
mov
scas
cmp
jb
lret
xchg
jnp
stos
and
ja
jne
pop
outsl
arpl
jl
mov
add
aam
call
xor
mov
inc
mull
xchg
mov
jbe
inc
xor
fcomps
jno
xchg
or
stos
xchg
pop
stc
and
jl
inc
sub
ds
jne
mov
stos
daa
xor
xor
data16
movsl
aas
mov
xor
sub
lahf
iret
shl
adc
div
sbb
stos
out
xor
push
sub
stos
xchg
scas
in
mov
or
stos
aaa
and
sahf
shrb
notl
mov
jae
int
stos
sub
xchg
xor
push
adc
mov
shl
fcoml
xor
les
stos
hlt
push
xchg
mov
stos
sbb
xchg
pop
jmp
popl
push
pop
icebp
mov
out
jmp
scas
test
sbb
pop
xchg
cli
cmp
das
cmpl
xor
push
xchg
push
cli
nop
test
cmc
stos
fisttps
lods
pop
jbe
mov
stos
adc
inc
stos
or
bound
adc
fdivrl
jbe
fs
push
or
cmpb
sub
inc
cmp
sbb
mov
popa
pop
lods
xchg
sub
stos
int
push
loopne
or
insb
test
xchg
add
jmp
sub
clc
std
stos
sbb
test
orb
push
dec
std
stos
rclb
iret
jae
mov
int3
stc
fiadds
test
addl
out
and
jno
pop
dec
sub
out
lods
jne
xchg
pop
pop
arpl
in
in
or
pop
and
xchg
fsubrs
jno
push
fcomi
cmp
mov
daa
test
lds
stos
mov
fldt
pop
je
xorb
inc
jne
aaa
adc
jnp
push
mov
ljmp
adc
pop
insl
stos
lcall
adcl
adc
fwait
sub
addr16
imul
cwtl
jbe
stos
mov
sbb
icebp
cmp
pop
js
stos
or
addr16
pop
adcb
pushf
inc
test
sub
std
fsub
ret
pop
xor
push
into
pop
outsb
test
push
xlat
jb
call
in
xchg
rorl
cmp
jb
xchg
out
fdivrs
dec
es
fwait
dec
mov
ss
divb
imul
xor
or
out
push
daa
outsb
xlat
imul
mov
scas
imull
or
fwait
jbe
dec
shrl
out
mov
cld
ss
outsb
mov
or
test
cmp
xor
stos
adc
shr
push
hlt
ja
stos
push
mov
lds
fsub
es
loop
shrl
scas
sub
mov
sbbl
stc
push
dec
mov
add
stos
pop
push
jecxz
incl
repz
or
and
imul
mov
hlt
sub
subb
jbe
lds
std
adc
xchg
jmp
xlat
mov
outsl
mov
dec
fisubrl
xchg
out
imul
movsl
sub
scas
loope
inc
jnp
adc
popa
out
imul
dec
cmpsl
lods
mov
cmp
setb
jmp
mov
cs
bound
and
fisubrl
sbb
cwtl
pop
addr16
pop
sbb
mov
mov
add
arpl
mov
mov
jmp
xchg
jg
test
test
jmp
pop
lahf
dec
xchg
imul
mov
or
fiaddl
loop
push
adc
and
fnstsw
xor
stos
mov
add
or
stos
movsl
cmpsb
js
cmp
int3
into
stos
loop
inc
inc
mov
dec
scas
stos
push
push
stos
stc
push
dec
aaa
xchg
lds
mov
sub
stos
fwait
cli
pop
popa
sti
xor
mov
stos
mov
jbe
ljmp
cmpsl
sbb
jecxz
mov
or
fst
and
xor
push
stos
jo
aas
insl
out
mov
test
add
stos
pop
adc
loope
popf
sub
inc
cmp
fs
mov
and
fcmovb
push
sub
fwait
stos
adc
jecxz
jo
idivb
xchg
aas
mov
adc
xor
sbb
jl
cmp
xchg
inc
cmpsl
jmp
sbb
jns
fcmovne
ret
jmp
fmuls
adc
aam
lods
cmpb
shrl
cmp
lret
mov
repnz
scas
fsubrp
sub
push
mov
xchg
iret
jge
addr16
inc
mov
scas
in
hlt
ret
out
xor
stos
push
mov
pop
pop
xchg
jecxz
xor
xchg
and
sub
addr16
xor
sbb
mov
out
add
sub
push
mov
les
loope
jnp
push
jo
iret
mov
sub
adc
jne
mov
bound
push
or
lock
push
add
inc
adc
lods
pop
stos
outsb
xchg
cmpsb
stos
add
push
je
add
mov
aad
imul
out
outsl
stos
out
xor
fimuls
add
push
leave
push
imul
mov
das
mov
xor
std
mov
stos
aaa
fistpl
dec
sub
sbb
fidivs
cmp
cmpsb
jmp
or
clc
stos
mov
leave
mov
xchg
cmp
mov
scas
fwait
int3
cwtl
sub
xchg
stos
add
sub
mov
pusha
cmpsw
pop
popa
stos
cwtl
movsb
in
pop
stos
ss
loopne
jo
std
add
imul
mov
cmpsb
cmc
sub
ss
pop
mov
push
cmp
jb
jmp
mov
cli
movsb
xor
int
stos
or
ret
aas
test
imul
and
xorb
sub
mov
mov
rcl
adc
and
ds
lcall
dec
push
stos
mov
sarl
stos
pusha
decb
or
cmp
inc
dec
outsl
pop
sbb
adc
dec
das
stos
nop
sbb
fbld
and
aam
or
adc
shrl
xor
jmp
prefetcht1
es
lods
js
stos
lds
call
xchg
jl
inc
addr16
pop
inc
xchg
push
bound
lcall
negl
cmp
sbb
and
push
xlat
sti
pop
stos
lahf
lret
mov
xchg
fldcw
popa
leave
stos
push
sbb
xchg
mov
jo
inc
stos
icebp
inc
xchg
je
dec
stos
cld
cmpsl
dec
mov
jns
jmp
in
stos
jae
ds
xchg
xchg
sbb
ljmp
jmp
pop
insl
xchg
cltd
mov
fstps
pop
mov
cmpsb
cmp
test
sub
aad
mov
ret
sahf
mov
mov
cmp
xor
scas
mov
cmp
sbb
loopne
stos
fisubrl
cmp
repz
dec
cmp
push
or
jae
and
scas
shll
inc
inc
sahf
push
pop
xchg
pop
enter
jmp
push
xchg
dec
push
jl
cmp
jae
mov
js
mov
sub
cmp
stos
pop
or
inc
subl
into
popa
push
es
xor
push
iret
aaa
fstps
jbe
call
xchg
pop
jb
xor
add
stos
xchg
repz
ljmp
add
cmpsl
xchg
xchg
cmp
pusha
std
or
jno
imul
loope
mov
jnp
xchg
pop
jmp
sbb
test
imul
imul
jg
cmpsb
loop
test
daa
mov
daa
inc
ss
cwtl
rol
xorl
inc
xor
pop
sbb
loop
out
mov
lret
push
push
and
cmpsl
clc
lods
cmp
mov
add
sub
stos
out
imull
js
je
int
mov
xchg
push
dec
lds
xorl
arpl
clc
enter
pusha
or
pop
mov
loope
dec
stos
and
inc
icebp
fadds
cmp
cmpb
xchg
cs
xor
add
add
stos
add
adc
stos
je
int
movsb
mov
xor
pop
subl
addr16
data16
mov
mov
xchg
js
out
or
subb
std
push
fimuls
stos
je
mov
push
dec
adc
stos
call
xchg
or
cld
push
in
ret
and
jo
push
adc
iret
mov
jno
lods
pop
lret
fxam
je
outsl
insl
mov
mov
scas
mov
xor
pushf
and
movsb
sbb
cmp
inc
sub
push
stos
int
cmpsl
push
push
pcmpeqd
adcl
stos
out
push
out
add
cmp
add
mov
lahf
mov
addb
stos
stos
out
add
notb
and
mov
daa
pop
stos
test
iret
cmp
pop
sub
aam
inc
enter
xchg
cmp
inc
loop
sahf
adc
pop
push
and
hlt
shll
imul
ret
pushl
jnp
enter
cmp
cmp
push
testl
inc
and
cmp
loope
outsl
insb
mov
mov
sti
xor
sub
and
push
daa
in
faddp
mov
jbe
and
fsubrl
insb
xchg
outsb
subb
dec
inc
jg
mov
mov
pop
arpl
imul
mov
mov
add
stos
sub
popa
jmp
test
mov
addr16
sub
insl
stos
mov
inc
adc
ja
sub
push
je
test
mov
cltd
test
mov
loopne
aaa
lock
stos
xlat
mov
or
and
shrl
sarl
xor
inc
cmc
xchg
jno
test
pop
xchg
jl
out
mov
add
xor
loopne
scas
push
cltd
mov
mov
mov
mov
imul
clc
jns
or
lods
sbb
outsl
and
pop
daa
jb
ss
stos
push
and
icebp
stos
pminub
stos
adc
ljmp
mov
push
sub
cmpsb
mov
mov
jge
mov
clc
mov
mov
out
or
xor
mov
addr16
jb
cwtl
mov
push
icebp
stos
adc
mov
cmp
stos
adc
rcll
mov
js
xorl
mov
jo
jbe
mov
and
jmp
rdmsr
fldcw
adc
cld
xor
fwait
enter
stos
xchg
jns
hlt
sti
sbb
stos
sub
jg
cmpsb
iret
stos
inc
cmpsb
test
aam
stos
sbb
out
cmc
pop
sub
cmp
js
jmp
jl
inc
test
jg
jmp
cmp
adc
test
adc
fwait
movsl
cmp
push
push
jle
scas
sub
adc
mov
stos
aad
pop
rorl
jg
fwait
cmpsl
cli
jbe
loop
adc
dec
jmp
sub
stos
add
cmp
arpl
cmp
jl
sub
stos
push
xchg
pop
fnstenv
call
or
fisubl
fs
inc
pop
jb
sti
mov
dec
sub
stos
fwait
mov
ja
sub
xchg
cli
xchg
popf
add
lods
repnz
ds
sbb
cltd
dec
cld
pop
mull
jns
xor
jbe
mov
sub
cltd
xchg
push
xchg
jp
push
pop
push
outsb
ljmp
sbb
cmp
jnp
outsl
sub
xchg
sbb
imul
scas
inc
dec
jge
stos
scas
push
adc
movsb
jnp
jmp
pop
cld
xchg
inc
adc
imul
mov
xor
cmpsl
movsl
and
hlt
push
lret
shlb
cmp
xor
out
mov
lock
cmp
cmp
hlt
cmp
imul
sub
push
adc
in
adc
scas
pop
testb
stos
dec
adc
rcrl
roll
outsb
imul
inc
daa
stos
stc
xor
mov
adcl
int3
cmp
mov
xor
sub
das
push
push
and
daa
call
push
rcrb
stos
ficoml
iret
pop
mov
into
fdivrs
das
add
push
sub
pop
pop
icebp
jmp
mov
dec
inc
lcall
pop
popa
push
push
sub
imul
adc
mov
or
scas
jne
adc
or
dec
inc
sbb
js
xchg
or
mov
push
stos
adc
xlat
call
pop
jb
jo
faddl
sub
cmp
add
ret
pushf
mov
mov
jg
or
push
xor
mov
adc
cli
xchg
pop
insl
stos
shrb
or
aad
add
stos
rcll
jb
jg
pop
stos
cmpsl
nop
stos
es
pop
sub
push
sbb
test
rclb
push
push
nop
push
in
loop
inc
jmp
cltd
push
fisubrs
ja
xchg
jne
movsl
out
mov
dec
mov
call
jnp
xor
inc
dec
add
mov
lret
nop
mov
xchg
iret
lahf
std
and
mov
or
mov
bt
scas
and
add
push
out
mov
rcrl
jle
test
arpl
push
loope
and
jmp
xchg
mov
xlat
nop
mov
mov
clc
and
mov
dec
cmpsb
ss
hlt
lods
imul
jmp
push
inc
sub
or
icebp
out
mov
andl
sarb
repz
stos
push
add
mov
add
push
lods
stos
inc
ljmp
mov
aam
xchg
inc
pop
mov
or
fdiv
stc
mov
cmp
add
push
jb
in
mov
mov
adc
jne
imul
mov
stos
mov
pop
sub
repnz
fisubrs
ret
cmp
popf
cwtl
stos
pop
or
in
sahf
dec
imul
cmp
aad
sub
imul
jge
scas
addr16
shrl
mov
clc
popf
or
je
outsl
bound
mov
in
jg
data16
lahf
inc
lods
loope
dec
cs
sbb
test
mov
cmp
push
or
rol
push
xor
dec
addr16
mov
jle
repnz
fidivl
stc
dec
jge
push
push
jae
sbb
lahf
loope
stmxcsr
lret
mov
data16
pusha
or
orb
mov
cmp
addb
sahf
stos
cmpsb
dec
push
mov
jnp
stos
lods
idiv
ljmp
fdivl
mov
testb
mov
cmp
jmp
inc
jnp
daa
lods
push
ljmp
iret
cmp
xchg
hlt
stos
mov
ficomps
push
mov
stos
dec
in
push
jbe
in
adc
adc
dec
mov
ret
jae
stos
pop
inc
loope
add
and
push
inc
pusha
movsl
lret
push
data16
imul
rorb
or
xchg
jo
test
loop
mov
aas
xor
xchg
jge
out
cmp
add
std
in
outsl
jle
sbb
scas
mov
enter
arpl
addr16
stos
xlat
bound
pop
decb
stos
inc
mov
mov
push
enter
push
inc
gs
sahf
pop
sub
rclb
jb
mov
std
in
sti
inc
dec
inc
mov
pop
call
into
rorl
insl
cmc
lods
and
adc
mov
idivb
inc
stos
pop
into
pop
jecxz
outsb
das
lahf
stos
sub
outsl
aad
xchg
stos
sub
pop
push
add
stos
std
jbe
repnz
push
stos
adcl
add
daa
cld
mov
push
outsl
aas
mov
rclb
loop
xor
or
lods
fstp
sub
cmp
mov
sti
leave
mov
adc
mov
testl
add
inc
mov
loopne
test
push
insl
stos
fidivrs
xor
dec
mov
dec
inc
mov
push
dec
jnp
and
movsb
loopne
pop
cmp
stos
xchg
and
inc
jge
rcrl
push
and
fists
xor
mov
sbb
push
arpl
pop
cmp
add
or
jnp
in
cmpsb
out
and
dec
mov
dec
stos
test
xchg
pop
aam
imul
mov
mov
andl
cltd
les
arpl
fldcw
fimull
xor
jp
mov
out
add
or
iret
lcall
push
mov
xchg
adc
xchg
mov
jbe
mov
stos
stc
popa
xlat
fs
inc
stos
xchg
loope
out
push
or
inc
stos
jp
dec
hlt
divl
shrb
stc
pop
aaa
dec
lahf
cmc
outsl
mov
push
ds
inc
out
mov
stos
leave
fldl
std
inc
cli
stos
add
aam
jmp
mov
sahf
xchg
lret
sbb
and
into
rorl
mov
sub
cmpsb
mov
sbb
xor
data16
mov
adc
dec
or
mov
jns
xchg
je
jle
leave
stos
ljmp
cmpsl
cmc
loope
ret
aaa
movl
mov
ja
mov
stos
push
aad
cld
movsb
scas
mov
push
dec
dec
mov
mov
rcr
push
scas
jecxz
int3
cmpsl
loopne
imul
lods
das
stos
negl
xchg
out
xchg
push
and
std
and
sub
push
stos
jmp
sub
popf
out
cld
pop
fcmove
mov
outsb
cmpsb
pop
fwait
dec
jle
push
xchg
stos
in
hlt
cwtl
cmpsl
inc
xlat
push
aam
mov
rolb
fs
aas
mov
into
enter
xchg
jae
lock
push
std
sbb
add
jmp
sub
les
xor
pop
subl
mov
dec
stc
fbld
push
stos
icebp
push
cs
mov
aas
sahf
and
int3
arpl
ret
xchg
movsb
sub
enter
jbe
and
xor
outsb
mov
mov
dec
adc
lret
es
loopne
lret
mov
adc
dec
cli
mov
enter
mov
xor
lds
imul
in
popf
insb
stos
loopne
iret
mov
stos
mov
jg
lds
insl
lods
jle
sbb
mov
pop
loop
xchg
jno
add
shrl
vmovntdq
lahf
inc
add
push
stos
dec
mov
out
mov
jp
cmp
nop
dec
daa
test
loopne
xor
fs
mov
fnsave
mov
stos
cmp
xchg
gs
decb
loop
cs
inc
test
subb
push
stos
cmp
out
mov
lock
test
jmp
stos
push
cld
cmpsb
int3
dec
stos
out
push
arpl
cmp
aas
fildll
fisubrs
jge
repnz
mov
into
jnp
dec
xchg
adc
in
sub
or
stos
cmp
sbb
and
into
cmp
adc
arpl
icebp
pop
dec
jnp
mov
int3
add
imul
int
popa
pushl
pop
pop
test
imul
jbe
clc
xchg
jmp
or
fcomps
cmpsl
add
adc
js
xor
pop
in
add
daa
adc
stos
push
sub
imulb
daa
cmp
sti
subb
inc
ret
cmp
outsb
cmp
xchg
mov
push
jno
adc
rcr
test
cmp
aad
inc
add
push
aas
scas
cmp
imulb
in
add
lret
pop
mov
stos
repnz
dec
inc
pop
inc
mov
adc
stos
loop
fisttpl
stos
adc
and
faddl
rclb
in
cmc
cmpsl
outsl
pop
test
or
in
scas
addr16
sbb
adc
stos
outsb
cmc
inc
or
clc
in
push
jmp
test
cmpsb
or
lods
mov
xor
sbb
lods
add
insl
mov
icebp
jge
push
mov
mov
imul
popa
cmp
rorl
jne
push
or
cli
popa
xor
jge
cwtl
inc
cld
call
stos
addr16
or
sbb
cmp
gs
cmp
cs
and
popa
incl
sbb
pop
cltd
fwait
mov
pop
hlt
xor
int
pop
sti
sbb
stos
test
jg
inc
stos
xor
add
cltd
addr16
add
out
mov
sub
xchg
daa
xor
std
or
add
ret
sahf
js
fdivrl
jno
insl
call
leave
jp
lret
enter
rcr
cwtl
sub
inc
pushf
xor
jecxz
sub
xchg
mov
jno
sub
lods
scas
add
movsl
cs
stos
lock
cwtl
in
out
imul
imul
jmp
lcall
or
fmul
mov
rorl
xchg
ss
cmc
cmp
stc
xor
cld
pusha
cs
jl
push
stos
inc
jo
lret
push
add
stos
fmull
inc
and
outsl
and
mov
movsb
pop
fadd
mov
aad
stos
cs
stos
push
inc
jmp
jb
daa
cmc
idiv
mov
xor
lds
xchg
xchg
push
mov
jbe
scas
sub
mov
xor
je
push
mov
sbb
cmp
and
sahf
mov
xchg
mov
mov
jmp
icebp
jl
and
jbe
pop
negl
cmp
stos
les
cmp
fsubr
lret
jo
scas
and
mov
add
lods
push
ds
mov
or
cmpsb
xor
xor
rorl
sbb
mov
jno
inc
sbb
push
fcmovbe
repz
sarl
dec
dec
mull
mov
xchg
inc
mov
xchg
orl
stos
cltd
mov
mov
hlt
lahf
jp
or
fistpll
dec
out
xchg
imul
gs
mov
cwtl
jae
scas
int3
out
push
jmp
xchg
sub
and
xor
jmp
dec
int
adc
xchg
sbb
and
jo
fwait
jb
cli
repnz
stos
add
mov
mov
fldl
push
lret
stos
or
adc
fisttps
out
orb
stos
mov
nop
adc
and
dec
and
push
stos
and
scas
loopne
cli
out
lea
jo
lahf
or
in
mov
and
mov
push
stos
lea
cmpsl
call
jmp
pop
push
mov
stos
push
inc
cli
mov
xchg
bound
sbb
xlat
fwait
stos
push
xor
cmpb
push
and
xchg
cmpsb
out
stos
sahf
es
push
stos
sbb
aam
loopne
mov
pushf
mov
xlat
dec
sbb
adcb
stos
push
or
stos
pop
dec
xchg
iret
fnstcw
outsl
lods
xor
fldl
stos
cmp
dec
or
cmpsb
mov
and
les
mov
mov
std
and
stos
cwtl
mov
das
mov
stos
cmp
mov
pop
jmp
adc
or
test
arpl
je
stos
sub
mov
cmc
addl
sbb
xor
and
fwait
xor
sbb
sub
lcall
leave
dec
mov
das
hlt
fisubrs
mov
push
cmp
sub
mov
dec
mov
clc
cmp
sub
sarb
and
push
jmp
call
out
pop
dec
loope
jmp
sbb
in
je
stos
mov
pop
mov
stos
jmp
mov
adc
outsl
cmc
lods
stos
dec
jge
out
in
or
pop
stos
dec
mov
stos
mov
cmp
insw
testb
push
dec
inc
fcmovbe
inc
aas
and
jnp
stos
cltd
imul
or
fsin
outsl
mov
mov
mov
lods
in
push
sub
fwait
movsb
xchg
fldt
mov
stos
fsubs
xor
mov
mov
xchg
sub
mov
inc
sub
orl
aam
movsl
orl
pop
push
lcall
push
scas
or
stos
push
cmp
out
les
scas
int
sub
cmp
daa
es
cmc
stc
mov
jge
out
push
sbb
xchg
mov
mov
fisubl
insb
push
stos
mov
sbb
aaa
daa
and
stos
inc
push
mov
jl
data16
dec
fisubrl
lret
subl
ja
shrl
and
mov
out
stos
push
cli
xchg
or
lret
or
int3
mov
daa
stos
and
fwait
test
loop
mov
inc
mov
or
pop
ss
inc
clc
je
mov
aam
mov
mov
jmp
stos
sub
bound
mov
push
xor
stos
test
clc
jge
inc
dec
mov
sbb
pop
fs
rcll
sub
loope
inc
adc
sub
mov
push
stos
sbb
mov
or
jno
stos
pop
popf
roll
lret
push
test
cmp
push
or
dec
in
stos
inc
mov
jp
leave
mov
stos
popf
xor
repnz
mov
jg
cmp
xchg
jecxz
push
dec
xor
inc
outsb
fcoms
jne
and
cmp
and
jbe
cmpb
stos
popf
pop
cmp
jns
jecxz
lods
gs
sar
sub
sub
add
and
imul
sub
pop
stos
outsl
mov
xchg
icebp
movsb
imul
sbb
out
cmp
int
fucomip
or
dec
stos
mov
xchg
jno,pn
cmp
loope
out
nop
jo
stos
popa
pop
sbb
das
and
add
push
jge
mov
mov
jl
cmp
stos
lods
les
dec
jns
fstl
stos
sbb
rcll
or
mov
adc
stos
push
loop
test
mov
adc
cmpsb
cmp
stc
sbb
dec
mov
xor
inc
pop
xchg
add
jp
fwait
push
rcl
lea
jbe
push
enter
stos
mov
push
lret
aas
stos
xor
cld
jns
pop
mov
movsb
movsl
mov
jmp
adc
xchg
pop
cmp
sahf
push
std
mov
stos
clc
mov
inc
xor
inc
dec
xchg
mov
les
jle
outsb
stos
roll
and
xor
jns
fsubrp
cld
jecxz
xchg
cmpsl
pop
stos
insb
push
mov
adc
jo
out
lock
jl
xor
or
add
pop
jge
mov
lea
xchg
repnz
stos
fcomi
inc
dec
call
arpl
add
stos
pop
add
pop
push
mov
xorb
pop
repz
stos
mov
jbe
sub
sbb
push
add
mov
xchg
cmp
out
test
add
xchg
aam
dec
add
cmp
push
push
stos
jno
cmp
push
mov
ret
xchg
xor
imul
adc
push
movsb
mov
scas
mov
sbb
mov
or
lods
dec
iret
inc
stos
movsb
mov
sub
andps
int
ds
push
inc
fisttps
js
adc
addb
jge
pop
out
mov
popf
test
out
xor
cmp
ret
sbb
xchg
push
arpl
adc
sti
sub
fldcw
mull
cltd
stos
dec
add
out
int3
xchg
stos
data16
das
scas
xor
pop
outsb
pop
idivb
leave
or
or
or
loopne
xchg
imul
sub
lahf
xchg
jmp
inc
hlt
push
cmp
dec
stos
xor
loopne
aas
mov
xchg
stos
mov
mov
pop
mov
out
push
xchg
mov
adc
lods
jmp
inc
and
jae
in
insb
mov
xchg
stos
nop
jne
lret
ret
mov
jnp
stc
sub
xchg
jnp
mov
les
add
and
dec
dec
nop
cld
stos
lahf
rorl
out
dec
jecxz
pop
jmp
dec
jg
fidivs
popf
push
loopne
scas
mov
movsb
xlat
push
fwait
dec
stos
idivb
mov
loop
stos
lret
loopne
into
push
xchg
cs
ljmp
jae
mov
xchg
stos
aam
and
mov
fstl
jbe
adc
push
shll
int3
stos
mov
push
fsubs
int3
in
cli
and
xor
test
lock
daa
push
jns
das
pop
push
xlat
or
movsl
mov
mov
mov
mov
xchg
lods
sub
mov
fldcw
and
lret
mov
fwait
xor
stos
in
cmpsb
out
fbstp
movsb
dec
xchg
in
stos
and
js
mov
imulb
cmp
in
stos
cld
pushl
push
mov
inc
sub
leave
ds
cs
fld
push
or
popf
push
cwtl
cmp
lret
push
pop
and
test
mov
dec
cmp
test
ja
cli
ljmp
test
insb
mov
clc
and
mov
bound
xchg
stos
jbe
daa
sti
aad
out
sub
fisubl
pushf
jecxz
inc
addr16
fistps
cmp
in
mov
jmp
cmp
imul
pop
push
dec
aas
mov
adc
lret
cmp
mov
cmp
xorb
repz
popf
push
in
das
mov
push
stos
das
xchg
mov
rep
xchg
insb
sub
stos
sbb
cmc
or
aas
lret
or
out
inc
sbbb
sti
xchg
jns
jle
lods
and
cmp
and
push
add
in
stos
leave
or
add
ficoms
inc
stos
push
pusha
pop
mov
imul
stos
cmp
pop
call
int3
cmp
cmpsl
sahf
lcall
sub
gs
stos
mov
sti
push
mov
pushf
push
stos
daa
mov
popf
jl
and
jmp
add
xchg
lods
adc
stos
js
shr
dec
stc
xlat
cmp
stos
das
xor
ja
dec
xchg
jbe
dec
call
repnz
push
jmp
jnp
scas
xor
adcl
xchg
in
movsl
sub
sub
mov
xchg
lods
push
jmp
xor
cmpsb
daa
xchg
mov
xlat
jnp
mov
push
xchg
data16
stos
mov
jae
cmp
movsl
jbe
push
out
push
xchg
stos
push
fmul
pop
stos
inc
cltd
mov
cli
jbe
js
in
fwait
out
push
lock
mov
test
imull
in
xchg
jns
aas
lods
push
lea
cmpl
fbstp
jnp
lods
cmp
sub
fwait
ja
outsb
xchg
insb
gs
cwtl
stos
xchg
inc
push
add
gs
jmp
icebp
stos
outsl
pop
stos
pushf
dec
dec
jno
repz
stos
add
mov
and
sbbl
insb
and
lret
cld
jno
aaa
enter
sahf
mov
icebp
lahf
or
lea
stos
lds
stc
push
dec
add
push
rorb
lods
dec
adc
mov
incb
stc
or
push
cltd
lods
lock
mov
lret
jp
mov
lods
sbb
sub
stos
inc
mov
daa
les
cmp
mov
push
hlt
mov
lret
xchg
stos
mov
repnz
cwtl
mov
mov
in
mov
stos
subb
scas
jecxz
scas
enter
sbbl
cld
dec
inc
stos
mov
and
stos
repnz
lret
or
pop
addl
imul
scas
ret
pop
mov
ror
scas
sub
shr
hlt
cli
ss
adc
push
xchg
dec
mov
jle
sbb
es
pop
push
lds
and
out
lods
sbb
loop
call
mov
stos
stc
cmp
xchg
sbb
dec
stos
inc
cmpsb
movsl
sub
mov
stos
imul
lcall
push
cltd
pop
dec
pop
jno
clc
xchg
mov
inc
js
or
das
ret
ds
mov
mov
fidivs
andb
std
call
shl
mov
out
fbstp
pop
stos
pusha
mov
rol
test
stos
js
or
outsb
cltd
mov
imul
stos
jl
inc
in
stos
popf
sub
dec
dec
sub
pop
cmp
add
test
neg
roll
xor
sub
xchg
jmp
or
cli
cmp
movsb
cld
mov
aas
xorl
jecxz
push
add
nop
sub
mov
fwait
fs
push
rep
js
scas
test
pop
fistpl
mov
push
lret
aas
lods
and
in
movsl
mov
mov
bound
and
and
inc
and
push
fwait
ja
stos
xor
and
pop
fwait
add
xchg
iret
and
stos
pop
add
push
stos
pop
in
shl
out
std
mov
nop
shlb
incl
xchg
in
stos
popa
cmpsl
jbe
mov
pop
pop
mov
subb
adcl
ja
xchg
xor
push
pop
popa
imul
stos
out
out
cltd
icebp
push
dec
mov
stos
and
jns
and
stos
mov
loopne
subl
add
pop
out
ret
xchg
hlt
stos
idivb
mov
inc
stos
sub
rclb
cwtl
je
in
mov
sub
pop
mov
mulb
stos
add
push
dec
stos
mov
and
insb
lea
adc
sbb
stos
xor
stos
call
scas
push
inc
xchg
call
add
mov
ror
nop
mov
jge
mov
pop
fs
cmp
jbe
mov
adc
arpl
rep
push
or
cmpsl
out
je
cmp
dec
mov
test
jmp
push
stos
mov
xor
sbb
pop
mov
stos
push
mov
mov
cmpl
xchg
loopne
aad
add
push
jnp
or
jecxz
xlat
pusha
mov
mov
mov
ljmp
test
mov
outsl
cmp
push
rcrl
dec
jae
mov
inc
cmp
and
jge
jmp
mov
and
and
jg
stos
sub
cmc
push
imull
mov
mov
mov
or
andl
xchg
mov
outsb
loop
clc
rorb
jo
add
ret
imul
xorl
sbb
mov
mov
fwait
mov
and
icebp
jb
dec
adc
xchg
sub
mov
adc
out
mov
subl
sahf
fs
sbb
fistpl
out
push
dec
pop
mov
stos
mov
fwait
push
push
das
lcall
mov
or
or
dec
inc
xchg
pop
stos
lret
xchg
ret
aam
mov
cmp
mov
sbb
pop
xor
xchg
dec
adc
mov
std
fisttpl
ret
xchg
ja
daa
dec
sub
and
jmp
push
jmp
popf
sbb
movsb
jbe
push
cmp
mov
sbb
mov
xor
insb
adc
dec
push
sbb
ss
xchg
cmpsb
push
mov
cmovl
jmp
aad
call
aaa
xchg
and
incb
in
inc
adc
sub
andl
fiadds
jg
dec
das
jns
enter
fisttpll
push
mov
push
xor
test
add
stos
dec
lock
stos
cmpsl
xchg
iret
pop
sbb
sub
mov
push
sbb
cs
aad
fimull
outsl
out
add
stos
mov
dec
in
stos
std
dec
mov
cmp
int3
sub
mov
mov
add
nop
xchg
mov
mov
pushf
fcomip
and
stos
shlb
int
mov
and
or
and
shrb
and
sub
addb
jmp
stos
test
cmpsl
sub
daa
pop
inc
sub
cmp
loopne
lahf
jmp
mov
or
inc
jecxz
xchg
and
lahf
pop
mov
pop
cmp
cmc
xchg
fdivl
mov
fldenv
mov
jb
xchg
stc
in
add
jl
nop
pop
mov
mov
mov
leave
imul
fistl
test
pop
xchg
adcl
jl
fmull
frstor
inc
stos
xor
enter
stos
inc
inc
add
popw
mov
cmp
fildll
cmp
lcall
push
add
popa
test
daa
stos
roll
fcompl
push
out
sti
setnp
repnz
pop
jl
movsb
out
sti
xchg
ficompl
stos
mov
dec
sbb
mov
and
and
dec
push
fsubrl
adc
test
clc
imul
pop
notb
stos
adc
mov
inc
xchg
shrl
jecxz
cmp
stos
shll
ja
call
leave
jo
imul
inc
movsb
jge
mov
inc
cld
cltd
leave
and
es
xchg
pop
lcall
dec
mov
mov
out
mov
cmp
scas
sbb
sub
pop
dec
stos
push
mov
jge
sarl
pop
out
add
hlt
aas
jbe
or
mov
in
or
mov
mov
sub
cmp
pop
and
rcpps
cmp
sbb
or
addr16
mov
cld
lea
mov
push
inc
stos
int3
imul
and
fcmovbe
ret
mov
add
inc
push
sub
cltd
lcall
xchg
dec
sub
stos
adc
cmp
in
jmp
fiaddl
pop
popf
xchg
andb
loopne
jne
aaa
xor
call
lahf
jo
shll
sti
fldenv
push
xor
stos
cwtl
les
dec
cltd
adc
stos
aas
cmpsb
mov
xor
push
fbstp
ds
mov
mov
sub
aad
aaa
ficoml
jmp
adc
test
push
xchg
stos
icebp
push
adc
leave
lea
das
mov
mov
xchg
push
mov
stos
jns
adc
jmp
and
jmp
stos
and
out
mov
pop
mov
aas
out
shrb
fwait
sbb
fbld
cmp
aaa
jg
mov
inc
lds
movsb
outsl
cltd
outsb
jp
loop
add
xor
xchg
xor
mov
mov
xchg
xor
xchg
cmp
dec
dec
or
or
imul
cs
out
push
fwait
pop
stos
sbb
mov
jmp
pop
std
stos
and
leave
sarl
shrl
stos
arpl
mov
dec
insl
or
inc
icebp
test
stos
xor
movsl
lret
insb
stos
fistl
ljmp
xor
stos
cmpsl
das
insb
xchg
jp
sub
stos
jne
dec
call
stos
jecxz
inc
or
js
dec
idiv
stos
loope
xchg
imul
cmp
or
aam
clc
jmp
adc
jns
stos
les
push
xchg
cli
sbb
xchg
mov
popa
sbb
sub
nop
dec
sub
stos
dec
inc
jmp
mov
mov
subl
pop
push
cwtl
stos
add
xchg
push
jmp
call
int
or
stos
inc
mov
push
adc
fs
xor
nop
leave
scas
push
cmp
and
mov
push
mov
nop
jns
or
pop
fsubs
arpl
cmp
sub
pusha
das
cmp
push
inc
sub
loopne
mov
jmp
push
or
dec
mov
hlt
sub
outsl
push
mov
rcll
popa
iret
stos
pusha
cmp
xchg
stos
mov
sbb
stos
dec
shrd
call
ss
sub
test
jl
repnz
lahf
inc
pop
leave
stos
xchg
fstpl
push
mov
sub
bound
shl
push
stos
sbb
ljmp
dec
sbbb
xor
mov
loope
xlat
and
fistl
out
cmpsl
out
mov
or
mov
in
mov
mov
bound
mov
scas
scas
pop
out
stos
jg
and
stos
adc
test
sahf
dec
cltd
shrl
xchg
stos
xchg
ret
sbb
arpl
inc
aaa
addr16
mov
outsb
lret
pusha
xor
loop
cli
int
stos
js
cmpsl
mov
sbb
push
add
adc
cmp
mov
popa
fwait
rolb
mov
lods
bound
and
dec
hlt
inc
sbb
mov
ds
mov
inc
test
mov
or
push
lods
out
sub
fldcw
xor
shr
inc
stos
daa
sbb
sub
xor
dec
jae
inc
es
shrl
daa
add
xchg
mov
mov
fcomps
clc
stos
aad
or
mov
in
fists
and
clc
pop
push
in
cmpsb
push
mov
aas
pusha
mov
jnp
or
dec
rol
es
stos
outsb
xchg
popf
stos
lahf
into
imul
lods
push
mov
and
int3
sbb
mov
or
shrb
jnp
xchg
imul
jae
fisubrl
enter
jl
decb
push
test
movsb
mov
mov
gs
or
stos
sub
fwait
ret
or
stos
aaa
mov
jb
adc
stos
xchg
ljmp
enter
nop
fwait
adc
stos
adc
or
stos
lods
test
mov
mov
arpl
xor
aam
jl
sub
stos
mov
loopne
xchg
dec
stos
outsb
in
fisttpl
and
adc
ja
int3
je
stos
inc
push
lock
addb
adc
dec
popf
push
movsb
movsb
pop
lock
mov
inc
lahf
sub
xor
mov
mov
mov
dec
rol
stos
addb
xor
push
pop
adc
test
pop
mov
adc
dec
shll
mov
push
mov
and
mov
movsb
pop
dec
push
aaa
xchg
outsb
imul
fucom
or
sbb
es
add
out
enter
imul
outsb
mov
insb
movsb
cmp
lea
sub
out
xchg
fcompl
lret
pop
sub
inc
stos
data16
in
push
cli
stos
push
or
arpl
and
push
mov
xchg
movsb
add
or
jp
mov
pop
cwtl
mov
mov
cmp
leave
dec
out
push
mov
xchg
jnp
sub
jle
mov
or
mov
mov
jge
stos
mov
loopne
in
rcll
pop
xor
cmp
ret
push
into
add
sbb
leave
mov
and
jns
pop
je
call
ds
int3
adc
imul
xchg
sbb
daa
and
fisubl
data16
in
daa
lods
mov
in
push
push
fcomps
xchg
mov
push
stos
or
mov
xlat
inc
lds
cmpsl
mov
push
stos
nop
add
dec
mov
push
inc
mov
mov
stos
cs
fcomps
roll
cmc
cld
push
outsb
roll
push
shl
idivl
stos
dec
not
sub
mov
icebp
xchg
gs
stos
jbe
mov
dec
cltd
stos
out
xchg
mov
sbb
or
sbb
mov
dec
ss
jae
jo
cmpsb
sbb
lcall
jge
scas
mov
dec
in
jl
cwtl
lds
out
mov
sbb
jnp
dec
inc
stos
and
in
into
or
mov
scas
fwait
jl
inc
ret
jnp
inc
dec
adc
les
stos
cmp
out
xor
or
jle
addb
mov
lcall
and
test
push
imul
xchg
stos
inc
repnz
shlb
mov
xchg
in
push
fadds
cld
mov
stos
add
es
jbe
leave
in
push
jp
cli
jl
inc
sbb
fwait
js
xchg
xchg
xor
out
bound
stos
aad
xchg
repz
jnp
outsl
stos
mov
push
push
or
stos
dec
popf
inc
pop
inc
lret
sbb
jmp
mov
sub
mov
cltd
fistl
push
fwait
or
repnz
ja
jmp
cmpsb
shrl
nop
sahf
jns
fs
mov
test
stos
push
adc
sub
stos
fisubrs
mov
imul
stos
or
jge
cli
movsl
pop
stos
add
ja
mov
mov
imul
gs
cmp
fidivrl
lods
jge
jbe
rol
pop
or
cld
sbb
dec
push
dec
int3
inc
sub
mov
mov
pop
loop
into
in
sbb
pop
rcll
notl
cmp
das
shlb
cmp
pushf
nop
mulb
and
inc
jnp
stos
loop
mov
jp
test
xchg
movups
jbe
cmp
jno
or
adcl
jae
ljmp
in
mov
repz
mov
push
imul
cld
sub
imul
mov
imul
push
stos
xorb
jl
mov
daa
inc
inc
mov
stos
cmp
mov
gs
jae
xlat
ret
movsl
stos
pop
cli
adc
pop
push
pop
pop
imul
xor
jl
jne
pop
stos
in
cltd
les
cmpsb
jmp
and
sti
cmp
lcall
mov
add
out
imull
mov
loop
sub
mov
sbb
sub
dec
sbb
xlat
lret
sub
jg
mov
add
or
dec
cmpsl
jno
mov
test
jecxz
jle
aas
xor
mov
stos
fldenv
sahf
subl
pop
nopl
push
xor
stc
or
sub
or
and
pusha
in
fildl
push
jmp
jmp
push
mov
es
fldt
shlb
enter
lret
cmp
dec
imul
stos
xlat
push
ja
mov
adc
mov
mov
pop
movsl
cmpsb
add
jp
fists
push
stos
pop
repz
loop
xchg
leave
stos
ret
inc
jg
loopne
test
hlt
push
scas
sbb
xchg
mov
add
xchg
xor
sub
pop
movd
popf
icebp
das
mov
imul
leave
adc
lcall
or
dec
push
adc
push
stos
fs
inc
cmp
les
aad
and
or
push
pushf
push
idivb
aam
xchg
add
adc
stos
insb
cld
ret
add
scas
dec
les
nop
lcall
mov
stos
test
or
lcall
popf
cmp
stos
or
call
inc
mov
cmp
jecxz
cmp
xchg
subl
jo
scas
push
cld
jg
adc
pop
stos
lahf
cwtl
inc
fisubrl
cmp
mov
stos
loope
mov
ss
dec
cmpsb
jmp
jp
movsl
or
mov
subl
aaa
or
add
into
inc
in
cs
loope
inc
test
mov
insl
mov
mov
xchg
ret
out
xor
xchg
fiaddl
sub
sti
mov
jp
out
repnz
insl
pop
jl
scas
stos
shll
stos
adc
cs
pop
push
add
std
mov
or
adc
stos
mov
stos
cmpsb
fimuls
imulb
push
lret
stos
sub
movsl
and
xor
or
nop
push
rclb
mov
jmp
aad
mov
out
in
and
mov
pusha
cmp
add
xlat
lret
jb
push
stos
es
fidivs
addb
sbb
lock
and
sub
xor
mov
loopne
stos
push
jg
cmp
cmpsb
pop
scas
stos
jo
xor
xchg
mov
insl
mov
mov
mov
fidivrl
sbb
lcall
stos
xchg
xlat
inc
add
sbb
sbb
jmp
xchg
lret
inc
mov
sub
je
aas
stos
nop
bound
stos
xchg
cmp
xchg
lahf
xchg
addr16
mov
cld
fisttpll
sub
jbe
mov
ljmp
xchg
mov
dec
jecxz
jp
cmc
addl
mov
lds
jle
popf
dec
stos
fs
popa
clc
outsl
fadds
enter
push
test
jb
xchg
cli
outsb
int
jnp
sbb
aam
lret
nop
cld
icebp
jp
fldt
arpl
mov
jg
int3
stos
inc
iret
mov
push
popf
call
pushf
pop
mov
xchg
inc
add
negl
or
push
mov
imul
stos
in
dec
popa
ret
inc
fdivrs
mov
arpl
adc
fs
mov
mov
push
jmp
adc
rcll
xlat
stos
xchg
aad
sbb
and
stos
jecxz
add
repnz
gs
sti
sbb
enter
push
stos
stos
outsl
push
mov
mov
mov
repz
loopne
or
std
adc
jle
ds
mov
je
push
fwait
mov
aam
aad
push
call
mov
stos
adc
es
push
movsb
roll
mov
mov
gs
mov
pusha
jmp
push
sbb
mov
xor
inc
stos
iret
mov
movsl
das
jg
call
push
stos
push
xchg
inc
push
out
loope
and
pop
stos
lahf
test
movsb
mov
mov
sub
mov
pop
cmp
jnp
mov
test
ret
pop
ljmp
sbb
stos
dec
stos
shrl
loop
jp
stos
cmp
das
mov
movsb
lcall
dec
addr16
or
cltd
imul
dec
stos
std
js
mov
push
inc
lock
sub
outsb
mov
imul
xlat
pop
cmp
stos
cs
rcl
repnz
add
fistpl
pushf
test
stos
inc
dec
aas
pop
sub
pop
ret
nop
jns
popa
pop
pop
adc
aam
jp
orl
xor
lea
or
les
mov
or
popa
dec
pop
clc
das
test
pop
je
movsl
imul
lods
add
enter
mov
rorl
xchg
arpl
movsbl
xchg
feni(8087
pop
outsl
stos
fildll
mov
mov
stos
xor
add
dec
repz
pop
push
cli
jno
hlt
push
stos
insl
int3
jp
inc
inc
add
subl
jecxz
pop
mov
fsubrs
rsqrtps
jae
pop
jne
xor
idivl
push
mov
cmpsb
in
xor
stc
ret
sub
fbstp
stos
dec
xchg
xchg
mov
dec
insb
push
movups
sahf
inc
popf
xchg
jmp
std
lock
repnz
arpl
jae
mov
push
mov
xor
data16
cltd
stos
sahf
pop
stc
mov
xchg
stos
inc
pop
pop
cmp
adc
stos
cld
lret
dec
xchg
jnp
daa
jp
xor
ficomps
insb
fstps
push
xor
lahf
mov
jmp
adc
mov
mov
xlat
lds
mov
mov
stos
ss
xor
stc
loope
sbb
in
push
inc
mov
xchg
popa
stos
cs
ss
mov
cmp
imul
inc
xor
mov
sub
jp
rolb
sub
push
aaa
mov
sub
icebp
out
mov
mov
stos
out
sarl
add
aad
inc
mov
pop
lahf
stos
ret
sahf
pop
mov
jl
int
test
mov
xor
ja
dec
sbb
push
adc
test
mov
cmp
loope
lods
rclb
inc
addr16
xchg
lcall
cmp
dec
outsl
mov
fs
loope
jne
push
stos
sub
dec
ja
cld
mov
std
imul
pop
mov
into
and
in
stos
ret
popf
xchg
sbb
das
push
stos
mov
fisubrl
mov
daa
lea
lods
test
stos
and
pop
push
aad
xor
insl
mov
lahf
and
or
mov
clc
stos
repz
inc
lea
setno
imul
xchg
pop
sbb
mov
jno
in
shll
xchg
stos
xor
lods
outsb
stos
les
shrl
xor
jmp
ljmp
sti
cmp
outsb
lcall
push
jno
mov
in
xchg
shrl
fcoms
test
push
rorl
xor
sub
into
lretw
fwait
int
add
sbbl
imul
fwait
ja
mov
cli
call
xchg
imul
inc
stc
fildl
outsb
xchg
addr16
jmp
mov
mov
or
stc
mov
jl
es
loope
jge
insb
aaa
cld
packssdw
fisubrl
xchg
adcb
jns
adc
sbb
and
loopne
bndstx
sub
adc
xchg
jnp
push
push
loop
mov
in
xchg
or
jl
adc
pop
shl
mov
sahf
xchg
ja
shll
cmp
or
mov
pop
adc
xchg
into
jle
pop
decl
lds
mov
xor
mov
in
mov
sbb
jb
cmp
sbb
mov
stos
int
push
mov
arpl
and
jne
mov
bts
sub
adc
fcmovnu
pop
test
push
adc
repnz
cmp
sarb
push
jns
lods
cld
je
jmp
mov
xchg
sbb
mov
add
sub
push
sub
out
lret
pop
cwtl
or
xchg
stos
mov
mov
in
outsl
fdivrs
fldt
push
mov
imul
xchg
jecxz
jp
int3
xor
xor
stos
lods
mov
mov
mov
pop
stos
pushf
das
sub
mov
int3
icebp
jmp
stos
pop
push
dec
xor
les
mov
fwait
and
loop
add
mov
xchg
in
fs
lea
in
push
dec
subb
mov
add
loop
sbb
and
pushf
mov
jl
aas
stos
notl
mov
scas
ss
shlb
mov
sub
movl
aas
jle
repz
or
jl
stos
lock
insb
jp
pop
cmpsb
subl
das
sbb
fbld
fstpl
stos
lahf
mov
lcall
dec
and
lock
push
push
das
arpl
andl
imull
stos
and
jb
out
jecxz
scas
and
mov
stos
sbbl
mov
adc
stos
xor
dec
fidivrl
pop
stos
push
sarl
addr16
pop
inc
mov
jecxz
xchg
subb
insl
dec
aad
dec
inc
sahf
jo
and
std
mov
lret
cmpsb
pop
jbe
jno
shlb
icebp
push
stos
stos
out
xor
mov
cmc
push
mov
sbb
fwait
push
push
sarl
cmp
push
addr16
cmp
stos
add
push
push
mov
test
xor
popa
arpl
sub
aam
filds
imul
jp
mov
lret
fwait
dec
dec
and
mov
scas
or
rol
cmpsl
mov
stos
ja
stos
incb
mov
jmp
arpl
outsl
sub
enter
mov
mov
sub
stos
sbb
popf
aam
cmp
sub
mov
push
sbb
loopne
push
std
cs
stos
jns
push
lcall
sbbb
fwait
stos
adc
fsts
stos
jmp
scas
and
stos
fidivs
push
mov
or
xor
push
dec
and
adc
mov
scas
test
mov
stos
mov
popf
dec
fsubrs
shld
test
jne
leave
jmp
fwait
rol
test
bound
mov
mov
cmpsl
stos
and
sahf
insl
dec
and
adc
jns
lea
xor
inc
fs
lock
es
ret
inc
sub
pop
pop
xor
stos
in
jle
jb
push
cwtl
stos
ret
into
outsb
xor
inc
movsb
mov
sub
popa
or
cmp
jno
mov
inc
cmp
cli
fsubrl
dec
jp
xchg
stos
hlt
xchg
loopne
or
scas
cmp
push
in
xor
arpl
iret
jge
sti
xchg
dec
stos
lret
mov
stos
xchg
mov
stos
push
andb
mov
dec
dec
inc
jno
in
fldenv
xorl
dec
lock
aaa
cmc
pop
mov
je
push
jge
cmpsb
inc
stos
mov
clc
shl
xchg
je
mov
push
pop
push
pop
stos
js
jo
push
mov
call
sbb
mov
stos
les
test
cwtl
mov
rcrb
dec
jp
inc
and
fcmove
mov
and
aad
es
inc
lds
out
fs
jle
mov
xchg
mov
imul
dec
fwait
test
cmc
pop
push
add
lods
out
jecxz
lahf
mov
test
push
stos
sahf
pushf
cmp
push
aas
mov
xchg
hlt
cmp
inc
sub
mov
push
or
sub
in
lret
mov
jmp
or
fdivl
adc
dec
addl
sub
sbb
sub
push
add
push
cmp
stos
cmp
lcall
popw
imul
sub
les
jg
sub
pop
popf
lods
repz
jecxz
mov
or
icebp
or
mov
imull
jmp
cmp
dec
pop
or
sub
repz
ret
inc
add
js
xchg
sbb
sahf
inc
imul
pop
mov
mov
mov
in
xor
scas
imul
lds
test
adc
push
dec
inc
sub
inc
inc
xchg
js
cwtl
fidivrs
jge
roll
cmp
jg
and
sub
insl
pop
dec
lods
in
insl
cwtl
leave
mov
sahf
adc
or
rorb
mov
or
lahf
cmp
and
inc
popl
sbb
sti
xor
push
stos
push
loop
dec
xchg
jbe
pop
xchg
in
into
clc
lods
push
ret
pop
or
scas
xor
dec
stos
xchg
sub
mov
jg
mov
jge
xchg
movsb
sbb
loopne
sbb
and
cmpsb
fdivr
stos
and
rcll
lret
stos
out
sub
out
fstps
stc
dec
mov
aaa
dec
or
test
fnstsw
movsl
ss
cmpsl
mov
lea
push
jl
test
loope
stos
inc
mov
push
fwait
stos
xchg
flds
mov
daa
shlb
cmc
mov
add
lcall
andb
mov
popa
shrb
ljmp
dec
mov
sbbl
sbb
mov
addr16
stos
mov
push
or
pop
fidivs
hlt
addr16
out
rcrb
lds
jecxz
icebp
imulb
lret
sbbl
stos
and
cmpsl
push
dec
stos
dec
push
mov
leave
stos
ja
sbb
popa
and
enter
dec
test
inc
mov
out
cmp
stos
test
int3
movsb
jae
mov
stos
out
jp
into
sbb
xor
imul
jns
cmp
stos
push
dec
nop
icebp
fs
add
stos
dec
rclb
mov
mov
dec
call
push
lods
mov
subb
jb
mov
addl
daa
stos
into
or
scas
and
ss
mov
sahf
jns
int
push
rorb
mov
imul
andl
in
push
pusha
imul
sbb
scas
loop
xor
gs
clc
dec
out
stos
jns
loopne
xlat
jmp
dec
stos
fdivrp
jo
cmp
sbb
mov
stos
repz
pop
or
out
stos
push
mov
gs
lods
scas
jne
mov
stos
pop
ret
in
jbe
bnd
aam
rolb
inc
jb
add
push
aam
aas
fwait
push
cltd
dec
addr16
cmpsb
xor
ljmp
out
in
popf
mov
adc
add
mov
out
inc
adc
add
mov
cltd
enter
push
loop
fdivrl
cmpsl
subl
aas
scas
sbb
std
stos
pop
xchg
jns
and
add
pop
pop
scas
jb
mov
xor
pop
jmp
jmp
or
je
add
aas
push
shrl
ficomps
mov
ljmp
bound
stos
into
test
lock
loope
stos
rcrb
or
ss
dec
adc
push
stos
jp
stos
popf
or
shrl
lea
sbbl
xchg
and
imul
sti
scas
test
mov
nop
pop
mov
stos
int3
mov
lds
imul
outsb
cmp
pop
sub
imul
adc
addl
aaa
push
addl
jmp
imul
mov
fstpl
sbb
hlt
gs
jmp
shlb
fldenv
das
pop
lods
cld
jno
stos
popa
dec
mov
ret
mov
pop
lahf
arpl
mov
movsl
insb
je
test
lods
popf
cmp
xchg
cmp
and
ljmp
mov
jmp
rorb
xor
mov
jb
dec
jbe
push
sarl
stc
mov
testl
lret
mov
dec
cli
fidivrs
lahf
xchg
push
fnstsw
lcall
out
fwait
imul
fidivrl
push
and
dec
pop
cmp
mov
and
daa
fsubrp
ffreep
mov
dec
add
imul
inc
stos
outsl
pop
and
xor
int
sub
sub
ret
stos
inc
mov
sub
cmp
movsb
push
mov
mov
stos
mov
je
add
jne
and
scas
mov
adc
cli
and
jmp
sbb
xchg
sti
fs
xorl
inc
aam
ds
pop
cld
sbb
imul
push
mov
or
stos
out
movsl
addb
push
lds
sub
js
loop
and
pop
or
mov
dec
nop
jp
daa
mov
cmp
fwait
sbb
adc
lods
stos
sti
sbb
xchg
sahf
sub
jmp
mov
daa
mov
stos
sbb
add
dec
mov
lahf
int3
cmp
rcrl
in
dec
xchg
stos
jno
dec
popa
call
cmp
seta
loopne
clc
jne
pop
in
call
mov
pushf
test
mov
mov
push
sub
xchg
push
stos
xchg
cmc
out
xchg
popa
fwait
add
pop
sub
sbb
or
icebp
jnp
xchg
jb
bnd
aas
cmpb
shrl
in
ret
sub
rcrb
stos
dec
sub
test
jle
mov
pop
daa
sub
cmp
adc
into
scas
jp
push
stos
or
ficompl
inc
xchg
lds
xchg
adc
mov
jp
lret
frstor
stos
cmpsl
test
cwtl
cmp
hlt
leave
xlat
dec
lods
xor
daa
fwait
shrb
dec
stos
mov
daa
ficompl
cmpsb
xchg
mov
shll
pusha
xchg
stos
jl
in
cwtl
stos
arpl
pushw
xchg
leave
or
jo
fdivs
mov
push
dec
idiv
fwait
in
sbb
mov
lods
sub
mov
maxps
mov
ss
lcall
jmp
aam
stos
push
sbb
stos
fmull
cmp
lods
xor
int3
shrl
fidivrs
scas
in
std
lds
roll
cld
add
ljmp
jbe
nop
mov
fs
xchg
adc
mov
mov
and
fcomi
mov
lahf
add
pop
jecxz
push
scas
ds
imul
xchg
sti
dec
xor
xor
call
fadds
sbb
or
inc
stos
adc
iret
mov
popl
in
mov
push
stos
or
adc
sub
mov
mov
xchg
push
push
aas
test
mov
jge
popa
aad
lret
fldt
xor
jl
lcall
xchg
in
fisubrl
xchg
mov
stos
push
lea
xor
fsubrl
pusha
cmp
dec
sarl
add
mov
jns
shrb
inc
stos
sbb
push
movsb
popf
cmp
gs
mov
cmpsl
inc
inc
push
loop
pop
mov
stos
push
jbe
push
cmp
lahf
in
inc
pop
std
sbb
xor
fsubr
aas
sbb
pop
das
mov
in
subb
int3
out
dec
stos
adc
jge
jecxz
fisubrl
aas
aad
stos
push
dec
ror
push
and
jge
jl
test
test
push
stos
add
nop
outsb
je
lcall
pop
lds
xchg
sub
xor
or
jg
xchg
es
jle
and
nop
lods
inc
stos
mov
fnstcw
mov
pop
jo
das
push
aam
stos
adc
pop
stc
push
mov
pop
lcall
xchg
xorl
stos
movsl
or
pop
xchg
idivl
or
pop
das
mov
cli
dec
push
cmp
daa
stos
xor
jmp
jmp
sub
or
mov
push
xor
pop
and
mov
lock
pushl
mov
jmp
mov
ljmp
xchg
ficomps
rorl
aas
dec
int3
xchg
dec
stos
gs
adc
fwait
push
imull
add
sub
jmp
mov
fnsave
repz
xchg
xor
mov
in
stos
xchg
jge
cld
add
stos
mov
iret
sub
inc
jl
stos
mov
inc
lds
jnp
add
stos
dec
daa
fwait
mov
jl
fildll
or
sub
stos
push
shl
inc
cld
fcom
mov
ret
cmpsl
xor
stos
cmp
out
lods
mov
mov
pop
mov
daa
mov
sbb
sub
mov
adc
sbb
fxch
mov
or
and
out
pop
nop
mov
stos
jne
test
or
addr16
roll
stos
lret
imul
mov
add
dec
inc
fsubrs
mov
bound
sarl
push
imul
std
bnd
mov
in
arpl
mov
loop
shll
int
out
inc
in
adcl
ljmp
je
push
push
stos
or
insb
stos
out
adc
cwtl
stos
mov
js
and
and
adc
add
push
daa
in
in
inc
fwait
adc
hlt
push
jmp
jecxz
fwait
clc
pop
sub
out
bnd
addr16
les
mov
push
push
lea
aaa
pop
stos
and
insb
sbb
and
fidivrl
repz
mov
sub
out
push
inc
enter
mov
and
jmp
sti
pop
pop
jl
xchg
scas
aam
jmp
das
jmp
cmp
sbb
jbe
addr16
xchg
push
arpl
pop
inc
xchg
into
xor
pop
mov
inc
jne
mov
ds
stos
push
push
add
insl
jo
xor
or
sbb
jl
in
es
add
insl
sub
ds
mov
mov
dec
inc
sbb
daa
std
lock
push
push
stos
mov
push
stos
fisttps
mov
mov
push
stos
mov
aas
add
sbb
xor
fistl
mov
sti
cmp
pop
outsb
xlat
inc
pop
add
stos
push
pop
cmpl
mov
lods
vfrczss
fsubrl
lea
stos
icebp
movsl
test
mov
cmp
jl
adc
jo
rcll
cmp
movsb
in
or
cmpb
xor
hlt
stos
sbb
movsb
push
sbb
jecxz
shrl
add
mov
and
aaa
rolb
imul
inc
dec
iret
mov
in
loop
add
adc
sub
mov
jmp
cmp
in
pop
enter
adc
gs
ja
prefetcht2
inc
leave
and
daa
popf
mov
jecxz
loope
push
icebp
pop
call
or
stos
push
stc
inc
out
out
scas
subb
pop
xor
adc
stos
pop
jl
test
scas
loope
sub
jmp
stos
icebp
ret
pushf
inc
je
scas
mov
leave
sbb
dec
push
jmp
sar
adc
dec
rep
mov
mov
fsubr
loope
lcall
sbb
daa
inc
aam
scas
xchg
stos
cli
stos
xchg
and
xchg
jmp
stos
mov
stos
insb
jae
xor
iret
mov
push
ja
mov
or
push
mov
jo
xchg
test
mov
mov
cmc
sub
jmp
mulb
in
mov
fidivl
and
test
sub
les
push
cmp
scas
std
loope
stos
bound
hlt
xchg
mov
insl
dec
out
xor
scas
sbb
inc
out
and
in
subb
lahf
sbb
mov
clc
xorl
stos
in
test
fsubrl
fcomps
ret
jmp
mov
addl
cmp
iret
stos
inc
call
jmp
in
cmp
fnstenv
fldenv
xchg
inc
mov
adc
mov
or
adcl
ja
pop
ret
sbb
cmpl
push
frstor
aas
add
adc
sub
sub
dec
stos
lahf
sub
ss
mov
jmp
mov
cld
mov
pop
loopne
add
mov
mov
stos
dec
out
ret
insb
mov
add
leave
add
stos
mov
orl
push
jb
xchg
pop
or
or
movsb
jg
mov
jnp
sti
inc
adcl
daa
in
mov
inc
int3
stos
je
fcomip
xchg
iret
sbb
or
stos
jle
adc
stos
add
adc
incl
popf
adc
out
jecxz
xor
dec
pop
mov
stos
push
in
mov
out
mov
mov
push
addr16
sbb
mov
stc
dec
mov
loopne
imul
sub
jno
stos
fcomps
testb
sub
test
pop
repz
jnp
in
stos
call
fnsave
mov
adc
push
stos
in
inc
xchg
xor
add
stos
stos
jmp
test
insl
sbb
dec
mov
dec
sbb
xlat
jg
push
outsb
cld
inc
stos
cmpsl
mov
sti
pop
imul
stc
mov
fwait
imul
mov
out
push
and
adc
xchg
sbb
mov
stos
lahf
les
inc
push
or
cmp
int
mov
stos
sbb
xchg
jno
arpl
push
icebp
jne
inc
insb
orl
stos
test
shr
stos
imul
sub
pop
push
sarl
push
stos
sbb
mov
stc
aad
mov
xchg
stos
leave
mov
outsl
xor
lahf
push
add
sbb
mov
jne
xchg
mov
les
xchg
fxch
jmp
mov
jb
pop
daa
stos
fcomp
dec
adc
inc
mov
xchg
cmc
stc
sbb
stos
rcr
lds
les
stos
jne
mov
cld
stos
std
pop
mov
ss
mov
xor
popf
loope
dec
push
xchg
jmp
jbe
stos
cli
xor
push
stos
xchg
sbb
es
stos
xchg
pop
leave
aad
mov
lcall
cli
sub
stos
testb
aam
stos
jg
push
idivl
add
lock
jae
aaa
sub
fdivrl
inc
adc
int3
adc
inc
sub
stos
mov
mov
ljmp
pop
stos
movsl
insl
mov
cmp
mov
int3
push
stos
mov
jg
and
or
stos
gs
daa
stos
dec
pop
mov
es
into
stos
xchg
lds
dec
xor
stos
icebp
xor
repnz
or
push
jns
inc
push
adc
nop
sbb
stos
mov
jge
and
push
arpl
stos
sahf
add
or
pop
add
das
movsb
lret
in
sbb
and
test
xchg
push
ror
mov
in
adc
nop
xchg
das
or
stos
jl
cwtl
lcall
in
jmp
insl
add
sub
pop
xchg
sub
bound
dec
mov
pop
xor
dec
lods
imul
mov
inc
adc
stos
mov
pop
cmpsb
daa
stos
sbb
or
fisubrs
mov
mov
andl
stos
hlt
dec
mov
outsb
enter
data16
je
xchg
pop
ds
cmp
mov
sbb
loop
add
stos
mov
lods
dec
mov
lods
stos
push
inc
xchg
xlat
cmp
stos
inc
cmpsb
data16
mov
push
xchg
in
dec
pop
icebp
stos
push
insl
rorl
arpl
stos
xchg
xchg
imul
mov
dec
or
outsb
sub
push
in
fwait
mov
sbb
stos
or
pop
mov
stos
fcom
test
movsl
push
jns
pop
or
shrl
or
in
stos
sub
jo
stos
and
enter
in
sbb
and
cmp
or
and
or
jns
mov
jl
add
pop
lret
pop
stos
dec
out
idivb
stos
loop
iret
stos
mov
out
cmpsb
outsb
arpl
sub
dec
lds
xchg
xchg
and
into
sbb
xchg
arpl
repz
imul
adc
fcmovnb
jl
mov
lahf
mov
cmp
jns
inc
stos
ds
xchg
ljmp
imul
scas
stos
inc
sbb
icebp
pushf
stos
mov
xchg
push
stos
test
ja
pop
push
push
mov
mov
stos
xor
rcl
lret
stos
xchg
xchg
sbb
fwait
dec
in
stos
adc
cs
icebp
xchg
xchg
ret
jl
xor
leave
in
push
imul
xchg
adc
int3
stos
and
mov
aaa
mov
push
add
adc
scas
sub
test
jno
mov
stos
arpl
mov
stos
or
inc
adc
stos
dec
push
push
xchg
pop
test
pusha
insb
mov
sbb
scas
cltd
stos
xor
push
or
stos
dec
xor
dec
push
jmp
stos
mov
stos
loope
sub
fwait
sbb
mov
mov
cli
inc
fisubrs
lret
cmp
stos
out
pop
cwtl
mov
shll
push
sbb
mov
insb
mov
xchg
pop
stos
aam
repz
stos
inc
mov
and
inc
sub
push
xor
xchg
fnstsw
dec
call
jecxz
inc
nop
xor
aaa
mov
mov
arpl
aas
imul
notb
xor
stos
xor
andb
dec
sub
pop
xor
xchg
and
sarl
sbb
xchg
stos
jp
out
shll
inc
adc
nop
in
jmp
mov
in
repz
ds
lahf
add
jmp
in
out
ljmp
movsl
stos
mov
xor
jbe
jmp
ficoms
xchg
stos
lea
pushl
pop
xchg
std
inc
mov
jnp
and
subl
push
cld
mov
stos
sbb
cmp
stos
push
push
movsl
mov
stos
in
les
out
sbb
stos
adc
lods
cs
stos
daa
xchg
lahf
lcall
or
int
xchg
stos
mov
mov
pop
stos
adc
pop
dec
mov
sbb
stos
jae
mov
lock
sub
jge
gs
cld
stos
fwait
xchg
pushf
adc
push
pop
jne
jo
xchg
sbb
or
popa
psrld
mov
and
and
sarl
jno
loopne
fldcw
mov
fs
scas
data16
loop
jae
xor
stos
pop
shl
push
sub
subb
xor
mov
pop
std
cs
push
jle
lcall
mov
fs
mov
inc
cmp
inc
iret
lea
push
cmp
mov
insl
iret
push
stos
iret
mov
shr
adc
add
and
stos
data16
movsl
xchg
push
stos
lods
and
icebp
cld
push
mov
fbld
bound
pop
dec
sbb
mov
ret
stc
test
stos
lods
int
test
fisubrl
addb
jmp
inc
pop
inc
stos
jno
loope
in
pop
inc
stos
cmp
add
fcmovu
jae
lret
sbb
fwait
xor
mov
int3
loop
xchg
frstor
ss
xlat
out
ja
negl
aam
insl
scas
or
stos
hlt
push
cmp
sti
push
mov
sbb
push
inc
pop
daa
and
imul
xchg
mov
stos
ds
or
pop
sub
loope
enter
cltd
ficoml
adc
stos
in
loop
shr
lret
out
rorb
pop
lds
sbb
stos
push
jl
pop
ja
add
cltd
fldt
xor
adc
mov
cmp
stos
test
pop
mov
ret
mov
or
stos
jbe
jns
xlat
mov
mov
pop
rcrl
bts
lods
sbb
add
icebp
mov
stos
in
inc
fisttpl
sbb
scas
aad
arpl
sbb
sub
jae
aaa
sub
fwait
push
or
dec
push
stos
outsl
loope
sahf
mov
repnz
stos
inc
gs
mov
stos
xchg
xor
enter
mov
lock
inc
fldcw
dec
sbb
xchg
jmp
push
mov
mov
das
push
jmp
inc
stos
lock
scas
aam
fs
daa
push
stos
xchg
shll
cs
leave
mov
add
shlb
jmp
pop
cwtl
stos
pop
push
push
xor
xor
jg
lods
bound
adcl
inc
stos
dec
mov
jo
mov
ds
repz
movsb
pop
pop
mov
jecxz,pn
test
mov
hlt
out
sti
cmp
jp
mov
mov
and
jo
cld
xor
jl
cmp
filds
sahf
stos
in
adc
loope
jmp
cltd
mov
adc
xchg
dec
jp
popf
cmp
dec
adc
dec
jns
stos
push
movsb
ja
xchg
pop
add
fisubl
ljmp
inc
dec
stos
mov
pop
ret
lret
lods
daa
icebp
fistps
xchg
jns
or
xchg
enter
incb
imul
aaa
push
mov
popf
xor
mov
das
adc
cmpsb
xchg
outsb
les
stos
jmp
add
inc
daa
testb
mov
sbb
push
cmpsb
pop
lahf
insb
stos
frndint
mov
sub
sub
mov
out
lret
pop
shlb
inc
inc
fsubrl
cmc
icebp
cmpsb
cli
ja
fisttpll
sahf
and
fmulp
xor
into
loop
fdivrs
clc
mov
xor
aam
rcrb
xchg
jmp
mov
insb
movsb
sbb
imul
mov
inc
push
add
loopne
dec
adc
fsubs
cmp
adc
stos
push
jle
xor
dec
xor
in
and
push
xchg
push
rol
ljmp
pop
adc
stos
xchg
daa
or
jo
scas
leave
push
sbb
pop
mov
imul
mov
stos
push
or
sub
jge
insb
add
xchg
jmp
addr16
repz
or
dec
push
movsb
jle
mov
cs
sbb
cmp
out
mov
stos
fildl
dec
sti
out
in
aas
stos
jo
push
xchg
adc
les
stos
pop
lods
mov
mov
sbb
lock
pushf
bound
roll
stos
lcall
dec
stos
scas
sahf
xchg
repnz
cmp
and
sub
out
dec
es
add
xlat
mov
pop
pop
adc
outsb
scas
mov
cmp
stos
in
test
mov
stos
sahf
lea
out
xor
imul
xor
into
scas
jle
out
fldenv
lcall
and
movsb
negl
add
clc
shrb
adc
lods
mov
pop
mov
push
stos
mov
dec
inc
mov
jmp
stos
fisttpll
mov
xchg
stos
xor
jg
scas
stos
jbe
ret
inc
outsl
ss
pusha
fldl
aam
stos
mov
repnz
dec
push
scas
inc
xchg
mov
lret
jle
lods
in
lock
sahf
sub
shll
push
inc
sbb
sbb
stos
outsl
test
xorl
pushf
fdivr
adc
add
stos
insl
mov
lds
add
int3
lea
mov
xlat
decb
pusha
stos
mov
int3
std
nop
test
push
stos
mov
cmp
in
inc
xchg
mov
imul
cli
inc
adc
es
out
xor
add
popa
xlat
cmp
mov
mov
xchg
orl
test
pushf
xchg
lods
sub
aas
imul
mov
fidivrl
shrb
push
cmp
cmp
push
adcl
dec
add
cltd
and
lea
mov
mov
cld
loop
es
stos
push
adc
jno
mov
stos
pop
add
adc
imul
stos
xchg
xor
mov
outsl
dec
fwait
xchg
pusha
cmp
sub
xchg
jns
pop
sahf
aad
notl
lods
fnstsw
stos
pushf
in
xor
push
cmp
subb
dec
mov
std
das
jno
movsb
ljmp
ds
add
jecxz
xchg
repnz
and
adc
inc
test
fdivl
push
vmwrite
pop
stos
jg
push
mulb
or
ret
dec
xchg
dec
stos
push
jmp
adc
stos
cmp
dec
stos
add
xchg
shrl
addr16
jne
xlat
mov
pop
stos
lret
or
push
movsb
inc
cwtl
subl
and
scas
push
lds
push
stos
fwait
aas
rcrb
mov
sbb
mov
add
jmp
stos
push
out
test
or
mov
mov
imull
sbb
inc
jge
aas
jmp
mov
mov
hlt
clc
stos
pop
mov
dec
and
stos
aaa
inc
or
scas
dec
stos
leave
lds
fsubrl
loop
cmp
jl
repz
rorl
xchg
int3
stos
sub
sti
xor
jae
ds
fwait
mov
stos
mov
subb
test
push
mov
adc
pop
lret
xor
loop,pn
sub
adc
ja
mov
scas
sbb
stos
dec
push
jb
pop
cmp
aam
aad
and
xchg
addr16
pop
ret
shrl
push
stc
outsl
test
pop
mov
leave
stos
cmp
lods
aaa
mov
xchg
aaa
jmp
sbb
mov
addb
nop
xchg
stos
or
pushf
sub
or
and
fs
fstl
lock
mov
aam
jmp
stos
stos
cwtl
push
push
mov
out
les
mov
stos
cmp
inc
cmp
enter
pop
das
inc
movsl
fsubrl
sbb
in
int3
adc
pop
jmp
imul
insl
fcmovbe
nop
mov
push
ja
mov
mov
fmuls
mov
cmc
mov
xchg
and
pop
pop
ret
pop
sub
in
add
dec
mov
sbb
movsb
mov
jmp
icebp
pop
or
xchg
mov
lock
sbb
imul
xchg
xchg
mov
fwait
xor
jbe
inc
data16
imul
add
mov
adc
das
ret
or
enter
ret
mov
scas
lea
jle
imul
aas
gs
sub
hlt
fsubrl
in
jle
stos
popa
jp
inc
push
lea
stos
int
sub
psubusw
cmpsl
xor
mov
mov
push
aad
addr16
int
stos
adc
movsl
int
std
fisubrs
test
add
push
leave
xchg
int3
xchg
fldl
or
imul
stos
lahf
loopw
fldlg2
push
mov
insb
gs
rcll
mov
inc
cmp
cmp
mov
sub
stos
pop
bound
das
js
push
sub
mov
adc
leave
sbb
movsb
mov
ljmp
sbb
nop
in
cwtl
xor
and
xchg
jbe
push
cmp
xlat
aaa
mov
stos
mov
cltd
imul
xorl
push
cmp
in
stos
mov
nop
pop
lods
cmp
test
cmpsb
inc
push
outsb
inc
ljmp
and
popa
push
into
pushl
mov
xchg
add
jg
movzbl
imul
fistps
xchg
pushf
clc
stos
rcrl
or
pop
mov
jbe
ret
and
mov
jge
mov
enter
insl
in
in
lods
fnsave
cmp
cmp
sub
stos
xchg
lret
aad
aam
mov
in
cmp
imul
mov
sbb
sti
inc
jmp
xchg
clc
mov
leave
jo
jno
stos
or
add
add
or
mov
test
xor
cmpl
mov
inc
push
jle
inc
data16
shll
cmp
cmp
leave
fwait
jecxz
cwtl
jno
pusha
daa
and
dec
fcomps
sub
test
test
andb
inc
cli
ds
lret
jmp
mov
mov
daa
cmp
dec
sub
subl
pop
jne
or
or
mov
arpl
insl
jp
jae
xor
push
stos
and
or
jle
imul
fs
ret
cmpb
fcompl
adcl
rorl
stos
aad
push
sub
lods
mov
and
mov
nop
sti
stos
mov
or
pushf
stos
cmpsl
orb
xor
loop
mov
mov
popa
fsubrs
add
daa
bound
sbb
stos
cmpsl
insb
push
sahf
sbb
stos
clc
cmc
inc
mov
stos
stc
dec
cmp
xor
sbb
push
stos
fiadds
xchg
lret
mov
stos
test
hlt
push
sub
pop
stos
lret
insl
mov
repnz
gs
aaa
pop
sub
jmp
push
imul
in
dec
cli
mov
out
and
dec
inc
addr16
outsl
andl
adc
fsts
and
inc
test
fwait
das
dec
adc
xor
dec
jne
push
loope
jae
sbb
or
and
dec
cmp
in
inc
pop
cli
jo
insb
fwait
icebp
and
mov
adc
fs
or
ficompl
stos
inc
push
rcrb
pop
mov
xchg
mov
stos
jmp
dec
rolw
mov
addr16
nop
and
pop
pushf
loope
mov
xchg
loop
ret
sub
stos
mov
pop
movsb
add
fwait
fwait
addr16
imull
scas
addb
cmp
sbb
jno
dec
inc
jmp
push
stos
aas
dec
inc
lods
pop
ljmp
xchg
mov
daa
cld
mov
cmc
outsb
rcll
out
test
push
add
push
pop
xchg
dec
cld
jmp
xor
cmpl
or
iret
subl
cmpsl
dec
imul
or
jecxz
in
jae
inc
or
jmp
jmp
fldt
xchg
shl
pushf
sti
pop
insb
cmc
repz
stos
cmp
js
aam
insl
shl
jbe
iret
lods
jo
test
sti
sub
mov
adc
fwait
loopne
dec
cmp
cwtl
dec
les
lahf
pop
jnp
lret
push
xchg
jmp
mov
inc
mov
nop
cmpsl
daa
iret
jecxz
rolb
dec
inc
in
dec
mov
add
call
nop
stos
test
mov
xchg
xor
stos
rcll
fsubrl
mov
cld
stos
sub
cmp
enter
push
or
sub
call
lds
inc
sbb
mov
mov
pop
sub
stos
test
xlat
stos
push
movsl
add
stos
or
sarl
inc
jb
cmc
data16
call
xchg
cmpsb
cmpsl
nop
hlt
push
stos
cmp
cmp
loopne
xor
orl
push
xchg
push
inc
jno
jae
dec
shrl
scas
stos
pop
arpl
xlat
cmc
sbb
cmp
fs
imul
imul
xchg
subl
call
adcl
pop
sub
mov
mov
fcompl
lahf
stos
push
pop
inc
xchg
xor
inc
or
bound
shrb
stos
mov
jns
sub
pmaxsw
pop
addr16
fcoml
xchg
cmpsb
sbb
jno
lock
pop
inc
mov
data16
dec
movsl
subb
cmp
or
mov
xchg
jne
mov
out
in
loop
sbb
cmpsl
pop
cmpsb
jmp
jns
mov
nop
stos
mov
jnp
insb
rolb
gs
inc
filds
imul
mov
or
stos
push
das
xchg
stos
adc
pushf
jbe
icebp
ret
js
mov
lret
xchg
shrb
imul
fisubl
rclb
pusha
dec
xchg
jb
fisttpl
and
mov
fbld
fsin
insl
xor
fwait
mov
shll
ficomps
jo
lret
cmp
roll
and
arpl
stos
mov
cmp
leave
stc
inc
stos
scas
ljmp
stos
adc
pushf
daa
xchg
stos
cli
jne
mov
push
sub
popf
cmpsb
push
mov
jns
stos
test
ljmp
insb
sbb
int3
out
stos
sub
stos
stos
and
in
cltd
or
popf
stos
fsubr
xchg
scas
mov
or
mov
stos
xchg
or
insb
stos
aam
sti
sarl
stos
lahf
into
in
pop
dec
fs
stos
push
jecxz
sbb
push
fs
and
enter
mov
sub
cmp
loop
mov
sarb
mov
sbb
data16
aad
sbb
inc
pop
lahf
fwait
stos
mov
mov
stos
into
daa
in
test
adc
out
xchg
fxch
mov
or
scas
mov
test
ja
pop
dec
stos
aas
stos
mov
add
out
pop
insb
inc
stos
ja
dec
ret
pop
aas
stos
push
pop
dec
sbb
repnz
stos
push
mov
sub
xchg
mov
sbb
nop
mov
push
jp
arpl
lea
stos
mov
push
or
mov
ljmp
jno
add
stos
adc
popa
or
stos
std
std
arpl
push
movaps
scas
adc
cwtl
insb
pop
movsb
sti
push
xor
jbe
leave
outsl
add
aam
adc
imul
pop
mov
arpl
push
sbb
insb
pop
pop
mov
xchg
stos
stc
test
add
stos
enter
cmc
inc
ds
cld
into
insl
outsb
adc
mov
pop
sbb
mov
pop
out
cs
frstor
pop
jmp
insb
or
shrl
loope
jl
stos
into
jb
cmpsb
push
ja
andl
js
xor
jne
mov
xchg
fisubrl
dec
or
xor
je
xlat
push
pushf
xchg
adc
add
xor
stos
out
push
push
test
xor
jno
pushf
cmp
fildll
fs
jge
and
jecxz
and
add
mov
dec
test
add
stos
cmp
inc
xor
and
ficoml
cld
jae
cld
ror
lret
mov
arpl
cltd
mov
push
aad
push
adc
aaa
add
ljmp
popa
fnstenv
imul
add
mov
int
xchg
andl
movsb
imulb
insb
jge
pop
and
ja
mov
test
imul
add
xchg
cmp
jae
fwait
imul
fcoms
stos
xor
mov
scas
outsb
pushf
int3
dec
fwait
add
mov
stos
hlt
fmull
push
nop
je
adc
cli
sub
cmp
push
xor
stos
jle
test
xlat
lcall
jo
push
or
ss
xor
mov
pushf
push
imul
push
jecxz
enter
addr16
stc
cmp
add
aad
daa
andl
in
cld
stos
xchg
jp
push
mov
jb
sub
movsl
dec
add
stos
rolb
mov
xchg
stos
icebp
fcmovnb
or
dec
loopne
stos
cmc
inc
or
xor
mov
sbb
jle
xor
clc
inc
xchg
jle
stos
jmp
cmpsb
jmp
mov
jmp
fwait
sahf
jmp
jmp
sub
mov
jno
repz
mov
cld
xor
or
in
fsubrl
jle
dec
mov
aas
iret
call
mov
ret
xchg
iret
les
imul
out
into
push
lahf
cmpsb
lds
cmp
and
cmc
mov
loop
mov
add
mov
lret
mov
sub
sub
popf
daa
jecxz
push
test
bound
pop
sub
bound
clc
mov
push
mov
jp
test
sbb
lcall
mov
jno
mov
mov
shr
cmpsb
xchg
cmpsl
test
shrl
idiv
dec
jmp
adc
mov
dec
xchg
jb
aam
mov
mov
jmp
daa
jle
mov
call
in
inc
popf
dec
mov
pop
xor
pop
jmp
jo
jmp
mov
cmpsl
and
test
and
cli
mov
dec
dec
loop
fisttps
js
mov
out
add
inc
sub
and
pop
stos
aam
arpl
mov
lods
xchg
or
stos
adc
clc
mov
aad
testl
stos
pop
sub
clc
loop
dec
mov
mov
cmp
jmp
xchg
dec
call
repz
cmp
push
ret
stos
xor
xor
and
mov
in
or
je
nop
test
or
sbb
cmpsl
push
sbb
adc
imul
icebp
sub
scas
dec
inc
stos
xor
out
push
stos
inc
sbb
lcall
sti
lock
stos
inc
outsl
cli
sbb
stos
mov
xlat
sub
jne
push
stos
xchg
ficompl
das
mov
add
adc
imul
imul
cmpl
ja
lea
sub
lock
jnp
mov
bound
mov
jmp
addl
leave
arpl
rcrl
arpl
imul
or
push
cmpsb
scas
inc
or
sbb
mov
xor
jnp
adc
stos
fcmovu
int
dec
cmpsl
orb
jle
imul
stos
xchg
mov
sub
mov
push
jecxz
push
int
pop
in
repnz
xor
js
or
mov
stos
jo
pop
sbb
stos
add
stos
cmpsl
ljmp
mov
imul
xchg
gs
mov
leave
adc
stos
dec
stos
nop
cli
and
mov
les
jae
int3
xchg
stos
mov
icebp
sbb
mov
dec
cmp
xor
dec
and
push
loopne
in
stos
aad
pop
test
push
fistpll
stos
leave
adc
in
je
dec
imul
fildl
xor
mov
pop
jle
daa
leave
fisubrs
cmp
and
jecxz
mov
ss
adc
adc
stos
inc
jne
push
inc
sub
lods
stos
and
or
into
scas
jecxz
mov
push
insb
mov
mov
stos
sub
fs
jb
lds
add
stos
movsb
mov
incb
dec
stos
roll
stos
aas
or
sub
and
stos
inc
mov
int
stos
push
loop
mov
daa
je
aaa
mov
ja
stos
pop
adc
lds
lods
aam
cwtl
out
mov
mov
daa
push
int3
dec
sarb
stos
xchg
divb
pop
int3
shrl
dec
cmpsl
lcall
mov
dec
repnz
int3
or
out
jbe
sbb
xchg
xchg
and
cmpb
push
mov
stos
arpl
fstpl
stos
test
lds
test
mov
mov
test
lock
shlb
and
out
ljmp
jmp
dec
std
cmp
dec
iret
scas
mov
adc
pusha
ret
cmp
movsb
jbe
stc
incb
jno
cmp
lods
imul
and
sub
cmpsl
cmp
or
das
scas
mov
xor
stos
aad
call
cmpsl
stos
pop
insb
cmp
popf
stos
ffree
jns
sub
or
push
mov
inc
push
jno
add
stos
fidivrs
out
stos
cmp
enter
stos
aas
iret
popa
dec
adcl
adc
cmp
jbe
hlt
sbb
cltd
add
fimull
lods
mov
mov
sub
ret
mov
push
into
ljmp
stos
mov
aam
stos
pop
lret
movsl
fdivrl
lods
inc
inc
stos
xor
mov
xchg
sbb
push
add
neg
cmpsb
std
sarl
repz
in
mov
stos
push
and
adc
cmpsl
mov
cmp
mov
stos
fcompl
or
dec
mov
pop
out
stos
add
inc
jae
sub
je
clc
sub
xchg
jo
jecxz
in
xchg
test
stos
outsb
adc
lods
lret
stos
adc
push
add
push
jmp
out
mov
mov
add
and
xor
repz
stos
xchg
aas
xor
mov
sbb
stos
sahf
rcpps
cwtl
adc
cmp
or
dec
stos
cmpsl
push
cmc
outsl
add
jge
call
or
add
cli
sub
pop
aad
sti
mov
xchg
xor
test
fcomps
xchg
daa
dec
mov
mov
mov
movsb
mov
mov
jp
xchg
add
xchg
inc
dec
repnz
mov
or
out
mov
and
andl
in
pop
lret
mov
outsb
imul
push
std
out
stos
sub
jp
mov
mov
mov
pop
ds
pop
sub
mov
je
leave
bts
xchg
dec
add
aaa
jmp
ret
pop
testl
out
pop
cli
arpl
push
add
cltd
pminub
in
adc
mov
adc
stos
dec
jp
mov
jmp
addb
test
ja
pop
mov
or
imul
and
xchg
mov
cli
mov
ficomps
mov
stos
out
lock
enter
or
xchg
and
pop
jmp
mov
out
cmp
fwait
int3
and
push
es
je
imul
pop
mov
in
xchg
outsb
loopne
dec
scas
clc
sbb
pop
das
lds
or
lahf
push
inc
mov
stos
inc
mov
xchg
ss
xor
leave
cmp
lahf
mov
lcall
inc
cld
xchg
stc
push
jb
inc
stos
std
shrb
sbb
sahf
shrl
es
cmpsl
stos
xchg
testl
pand
push
mov
rcll
das
mov
dec
stos
ret
aas
pushl
repz
adc
mov
ficoms
stos
rcl
add
enter
lds
mov
inc
ljmp
mov
lods
in
stos
xor
push
es
and
stos
pop
push
xchg
pop
push
shlb
int
push
stos
add
add
cmpsb
adc
ret
mov
divb
xchg
jae
mov
call
int
stos
sti
sub
xchg
out
mov
jnp
jp
fisttpll
mov
fiadds
jmp
lea
das
loopne
xchg
scas
pusha
stos
adc
ja
sub
in
stos
xor
push
jns
push
sti
adc
push
inc
lret
mov
nop
inc
stos
ljmp
out
push
mov
test
movl
lea
mov
pop
push
dec
std
je
in
stos
cs
mov
sub
setnp
mov
inc
stos
inc
push
adc
repz
mov
mov
rcrb
nop
push
mov
jno
mov
imull
outsb
ss
sub
je
mov
ret
cmp
mov
inc
or
and
cld
fwait
int3
call
orl
ret
ret
sbb
lds
push
jno
mov
fwait
xchg
jne
xchg
push
jbe
loope
pop
orl
mov
inc
fisttpl
inc
sub
mov
push
mov
xor
ljmp
icebp
mov
pop
stos
pop
clc
mov
movsl
movsb
pop
push
sti
xchg
in
cmpsb
mov
bts
pop
sbb
stos
mov
lcall
mov
lods
aaa
arpl
ret
mov
testb
in
stos
jno
data16
inc
gs
sub
mov
or
mov
xchg
ljmp
out
ja
mov
mov
mov
shll
xchg
mov
imul
fwait
loopne
aas
andb
test
dec
dec
mov
loope
sbb
ja
cmp
sbb
stos
add
mov
inc
scas
sbb
clc
es
cmp
inc
sahf
jmp
jge
xchg
sub
xchg
jo
and
jae
es
pop
fiaddl
insb
stos
movw
push
pop
and
loopne
das
push
fsubrl
xor
inc
push
mov
jne
in
fucomi
jbe
push
and
cld
mov
stos
imul
dec
mov
mul
in
test
ja
subl
call
je
outsb
lock
add
sbb
mov
mov
hlt
xor
cmp
or
push
jle
sub
stos
sbb
subb
xor
adc
jecxz
stos
insb
int3
sbb
mov
ljmp
jmp
cs
push
jl
pushw
add
xor
imul
mov
adc
repnz
sbb
fwait
mov
sub
pop
popa
xchg
cmp
out
adc
popf
dec
jno
pop
ljmp
enter
stos
repnz
pushf
rcl
stos
xor
rclb
mov
cmp
xcrypt-cbc
cmpsl
xchg
aas
adc
leave
mov
in
frstor
fwait
rcrb
repnz
dec
stos
cwtl
fwait
jo
hlt
test
psrlw
push
daa
mov
mov
xchg
push
pop
inc
jmp
add
cmp
bound
cmc
rorb
jnp
mov
ljmp
sbb
ficomps
cltd
jns
pop
pushf
mov
test
mov
lcall
dec
shr
pop
arpl
push
popf
je
adc
mov
cmp
pop
scas
fsubrl
jmp
sbb
jno
mov
pop
stos
test
daa
jns
mov
stos
pop
add
pop
sbb
add
into
fmul
and
mov
sahf
fwait
jge
lahf
pop
adc
xor
incl
add
mov
lods
cmp
dec
stc
gs
inc
daa
lret
mov
les
hlt
mov
jle
mov
ljmp
imul
inc
mov
sub
add
add
stc
movsl
aam
xor
lods
mov
shll
xor
stos
jecxz
fisubl
mov
inc
stos
in
mov
jl
mov
das
mov
push
movsb
cmp
adc
stos
mov
cmc
jl
ret
movsb
add
stos
sar
lods
sti
outsb
subl
stos
cmpl
in
gs
mov
mov
mov
mov
dec
stos
cmp
mov
popf
pusha
mov
dec
popa
jmp
sbb
push
jle
xchg
stos
imul
xor
shll
fisubrl
fsubl
stos
sahf
mov
adc
stos
in
or
dec
cld
popa
push
push
imul
pop
arpl
pop
stos
sub
nop
cld
lahf
cmp
push
fwait
test
jge
out
jmp
lock
call
outsl
stos
cli
cmp
loope
cld
pushf
inc
mov
test
push
cmp
jbe
sbb
sbb
mov
fcomp
dec
addr16
push
mov
mov
xchg
stos
push
adc
cli
push
mov
push
mov
adc
data16
addr16
loopne
stos
and
or
sub
xchg
mov
pop
shl
push
lds
shlb
clc
icebp
shrb
xor
insl
mov
jae
stos
mov
or
cmp
into
stos
daa
je
adc
ret
jns
stos
sbbl
push
stos
pop
pusha
mov
lds
pop
hlt
addb
in
fmull
repnz
xchg
dec
movsb
cmpsb
bound
mov
inc
and
xor
sub
test
sub
ljmp
inc
add
stos
loopne
lea
fistps
cli
push
sub
repnz
pop
add
into
pop
pop
push
ret
aaa
jbe
xor
stos
and
lods
dec
dec
rcll
push
je
enter
stos
jae
jne
jbe
cmpsl
bound
into
cmc
mov
dec
xchg
jno
mov
dec
add
and
in
sbb
mov
cmp
sub
rol
stos
mov
sub
addr16
xor
jmp
push
pop
mov
call
popa
idivl
scas
push
inc
cmp
je
ds
stos
mov
sbb
jnp
dec
xor
cli
push
adc
test
iret
add
fwait
push
and
clc
or
stos
mov
stos
mov
cmpsb
inc
imul
and
cmpl
stos
jp
or
leave
arpl
rcr
cmp
mov
inc
bound
mov
daa
test
mov
inc
addr16
call
loop
mov
stos
sbb
nop
fstpt
addl
or
inc
sbb
mov
xchg
in
cli
stc
stos
fisttpll
add
call
aaa
icebp
mov
fildll
lcall
xor
sub
pushf
imul
inc
xlat
pop
leave
popf
popa
mov
xchg
fwait
lea
dec
pusha
scas
add
xchg
jae
add
xchg
shlb
imul
pop
and
rcrb
lahf
xchg
fwait
stos
loopne
daa
or
frstor
push
mov
fsub
inc
fwait
xchg
les
stos
cmpsb
pop
cmp
mov
xlat
sub
sbb
xchg
inc
sub
mov
inc
hlt
insb
stos
repz
sbb
pusha
stos
enter
mov
dec
mov
sub
arpl
cmp
clc
mov
jae
and
dec
addr16
mov
and
fcoms
or
popf
stos
sarb
adc
add
and
js
decb
and
fwait
push
pop
pop
and
inc
stos
ja
mov
adc
into
loope
fwait
mov
push
pop
xor
fwait
cs
mov
jle,pt
mov
add
mov
lock
stos
pop
push
pop
mov
stos
xchg
dec
ljmp
sbb
pop
test
stos
fdiv
mov
pushf
bts
pop
imul
stos
sbb
pop
mov
mov
mov
and
add
sbb
or
cmp
xor
push
adc
lock
sbb
adc
ljmp
or
rcrl
push
idivl
lahf
adcl
stos
xlat
mov
xchg
fildll
lcall
lds
loop
imul
mov
insl
les
test
fcomps
popf
and
pop
xchg
fidivrl
fdivrl
stos
test
in
push
pop
pushf
xor
xor
loope
mov
jns
mov
sub
xchg
xor
lds
mov
add
add
or
mov
cmp
push
scas
cmp
stos
shl
xchg
jge
stos
xor
mov
dec
inc
nop
jp
mulb
cmpb
adc
jmp
imul
mov
fimuls
cmp
xor
sub
push
les
call
rcll
cs
es
mov
repnz
add
push
fcomps
int3
mov
out
xchg
mov
xchg
xchg
cmp
cmp
jmp
sbb
cltd
add
ret
sub
outsb
dec
xor
pop
jg
shrl
sub
shr
or
stos
scas
xor
test
bnd
stos
test
lret
stos
fisubl
or
inc
mov
das
ljmp
pop
xor
xchg
fisubrl
mov
aam
sbb
dec
inc
mov
adc
lahf
jl
push
and
ds
push
push
pop
sarl
add
mov
iret
insl
stos
push
mov
adc
push
jmp
fnstsw
lods
and
mov
cli
pop
or
mov
mov
jmp
enter
and
or
lcall
stos
pop
lock
and
dec
add
je
imul
dec
call
sub
aaa
dec
pop
pop
movsb
in
mov
adc
arpl
jecxz
cs
cwtl
scas
dec
mov
testb
ss
imul
xor
sbb
xor
ja
pop
movsb
subl
mov
push
add
gs
mov
mov
test
je
outsl
loop
mov
xor
pop
inc
std
test
dec
xchg
popf
rorb
cld
insb
cmp
out
push
mov
incl
inc
out
pop
stos
imul
or
lahf
addr16
push
pop
mov
stos
jmp
xorb
pop
sub
dec
push
ret
loopne
ret
jp
inc
rclw
cmp
adc
push
arpl
mov
stos
add
mov
aas
push
ret
pop
xor
mov
ret
dec
test
popa
dec
pop
push
stos
jno
adc
pop
out
imul
fwait
push
mov
rorb
fcompl
shrb
je
bound
scas
cmp
push
inc
cmpsl
jmp
mov
jmp
stos
xchg
mov
mov
enter
lods
addr16
inc
mov
hlt
dec
daa
xchg
movsb
and
les
daa
incb
sbb
stos
push
imul
xchg
and
cmp
jmp
or
cltd
mov
or
push
xchg
ja
stos
sub
icebp
aas
sub
pop
testb
outsl
je
or
fwait
enter
cld
call
mov
mov
dec
or
shrl
push
rep
adcb
stos
lea
cwtl
push
ljmp
into
insb
push
sahf
sub
in
pop
ljmp
ret
les
call
mov
daa
addb
mov
pushf
rorl
stos
inc
lods
add
stos
fdivrl
jo
stos
push
into
int
jp
pushf
aam
inc
xchg
jmp
cs
mov
adc
subb
ja
stos
dec
xor
insb
sbb
lock
nop
jmp
fistps
inc
xor
test
fs
mov
sub
in
xchg
mov
add
jo
xor
push
mov
aaa
jecxz
insl
test
xchg
stos
push
dec
adc
mov
cmc
pusha
adc
xchg
dec
test
cli
adc
jmp
mov
outsl
mov
mov
ret
jae
jno
ret
pop
dec
stos
test
notl
das
imul
insl
std
cltd
sbb
stos
es
call
test
test
imul
add
stos
mov
jno
leave
stos
pop
dec
or
push
mov
stos
sbb
push
popa
push
ljmp
cmp
sbb
xor
ror
jb
shlb
lds
mov
loopne
stos
or
mov
jae
std
mov
test
mov
mov
jbe
scas
add
imul
jno
stos
aam
pop
lock
sbb
mov
negl
pop
loop
jmp
aaa
iret
movsl
lds
jne
js
stos
cmp
loope
stos
loop
mov
in
imul
cmpsl
cmp
out
imul
mov
adc
cmp
shlb
xor
cltd
sub
stos
sbbb
push
jmp
repnz
aam
lcall
addr16
mov
or
sahf
cmp
push
cmpl
cmp
imul
rcrb
push
push
mov
pop
stos
ds
gs
fildl
test
ficompl
stos
push
lret
inc
xor
stos
jb
sahf
mov
cmp
dec
push
test
lahf
rclb
rcrb
sub
and
stos
cmpsl
mov
xchg
lock
in
pushf
mov
push
int
sub
add
imul
stc
das
pop
repz
lock
loope
gs
mov
mov
fldcw
mov
rorb
inc
lods
stos
sub
mov
lahf
stos
clc
jnp
jno
lods
xorb
nop
push
faddl
mov
test
cmp
and
dec
test
cld
and
sbb
mov
mov
int3
pushf
lcall
mov
sbb
dec
dec
decl
in
inc
shrb
scas
jne
xchg
ds
subb
stos
leave
jae
cmp
les
sahf
cld
inc
inc
scas
loop
ret
inc
imul
cmp
rcll
scas
inc
jns
mov
stos
daa
mov
hlt
xchg
movsb
inc
fcmovb
stos
bound
sub
repnz
push
cmp
clc
mov
jno
mull
add
aad
mov
mov
mov
sbb
push
aaa
lret
out
adc
aas
and
imul
addr16
es
jg
or
stos
jb
add
into
ret
jmp
mov
dec
je
cmpsl
xchg
es
dec
xchg
stos
jbe
movl
adcl
rorb
lret
cmp
subl
shrl
pop
and
jmp
sti
mov
lods
imul
fwait
jp
negl
add
xlat
das
xchg
lcall
leave
cmpsb
jns
stos
pop
lcall
stos
jo
outsl
xor
mov
jle
xchg
repnz
adc
adcb
sub
pop
dec
push
stos
mov
sbb
stos
mov
std
sbb
stos
scas
dec
or
lea
jmp
push
sbb
dec
and
sub
cmp
jnp
mov
jg
nop
dec
test
sbb
xor
mov
mov
stos
in
fdivr
sarb
enter
sub
push
loopne
jmp
movsl
adc
ficoml
jmp
cld
push
jb
ss
stos
dec
xchg
pusha
out
cmp
lea
push
les
stos
mov
cmp
or
das
xchg
movsl
popa
and
pop
cmpsl
imul
das
sbb
mov
lods
jmp
popf
stos
xchg
and
mov
out
add
frstpm(287
stos
shlb
mov
jmp
iret
pcmpgtd
jl
fcompl
repz
inc
rcll
push
hlt
stos
lods
mov
ja
stos
adc
push
rcrl
jnp
mov
adc
pop
sbb
stos
test
mov
pushf
jb
pop
push
mov
push
jne
sub
in
pop
push
ss
stos
int3
out
jb
movsb
sub
cs
cmp
xchg
lret
orl
ret
repnz
aam
test
daa
xchg
imul
push
jl
ss
mov
in
adc
test
push
inc
cld
pop
mov
mov
add
pop
cmp
jb
dec
mov
notb
mov
mov
jle
stos
pop
mov
jmp
jmp
adc
mov
or
sar
icebp
sbb
xchg
test
fidivl
bts
dec
pop
sbb
loopne
jne
stc
push
rorb
cmpsl
and
add
stos
jl
mov
daa
fisubs
inc
loope
and
sbb
pop
fldcw
mov
test
stos
push
or
sub
imul
in
sbb
mov
mov
stos
and
push
stos
stos
daa
sarb
insl
adc
add
stos
xor
pushf
subl
test
stos
in
dec
pop
dec
orl
pop
or
lahf
xlat
ljmp
mov
js
or
xor
stc
pop
fwait
jp
repz
mov
stos
es
mov
xor
movsb
push
adc
fwait
push
inc
dec
aam
xchg
stos
dec
ljmp
test
pop
or
mov
shrl
or
xchg
or
stos
movsb
ds
dec
add
pop
push
shll
rclb
inc
int3
lea
jle
add
mov
jl
lods
adc
stos
ret
xchg
cmp
inc
sti
pop
sbb
cmpsl
mov
mov
nop
fsubrl
xor
sub
adc
les
out
mov
jg
lea
int
repnz
inc
and
pop
xchg
sub
mov
mov
shlb
inc
lahf
or
stos
ljmp
dec
scas
aad
test
test
jo
stos
dec
mov
and
pop
pop
stos
cmp
adc
stos
or
adcb
mov
aad
inc
pop
or
cs
dec
test
lea
stos
call
jecxz
push
stos
inc
lock
lret
lret
iret
mov
xor
dec
stos
leave
pop
daa
cmp
dec
scas
mov
mov
in
imul
fsubp
jmp
mov
add
pop
mov
pop
stos
jmp
xchg
mov
scas
mov
fucom
jno
popf
fistpl
inc
sbb
push
inc
or
xchg
mov
sub
pop
int
add
xor
mov
pop
and
stos
enter
rorl
test
mov
xchg
mov
repz
jne
mov
mov
xchg
cmc
mov
movsl
mov
jo
imul
cwtl
rorb
push
stos
ret
push
mov
aam
stos
imul
mov
sub
int
lret
enter
mulb
outsl
pop
sub
mov
xor
lret
xchg
adc
stos
test
mov
push
lods
outsb
pushw
aad
sbbb
cltd
addr16
sbb
std
push
xchg
jne
stos
lock
xor
add
movsb
enter
stos
filds
fsts
jmp
mov
scas
xchg
sub
mov
stc
imul
ret
xor
stos
sub
jb
push
pop
das
jecxz
cli
popf
sbb
cmp
lcall
xchg
cmc
mov
sbb
leave
sbb
xchg
cmpsb
out
stos
and
cmp
xchg
sub
mov
pop
push
scas
push
subl
fnsave
mov
cmpsb
mov
push
cwtl
stos
mov
sub
xchg
lods
xchg
test
stos
mov
in
sbb
mov
sub
clc
dec
fwait
sbb
mov
stos
xor
fdivl
loope
out
imul
not
sarb
sub
jmp
add
fistpl
xchg
xchg
stos
xor
push
jmp
push
mov
out
mov
std
cwtl
shll
jnp
xor
jno
cmpsl
sub
mov
pushf
loope
jbe
je
pop
adc
stos
in
mov
jb
lods
stos
aad
adc
sub
mov
data16
push
mov
pop
mov
into
insb
stos
fwait
cltd
movsl
xor
aad
cli
adc
cmp
dec
stos
lods
cmp
lahf
daa
fidivs
mov
fsubrs
push
test
mov
stos
scas
add
nop
jb
lahf
lea
shrb
out
mov
test
arpl
lods
jne
stos
hlt
jmp
mov
stos
and
inc
insl
mov
pop
popa
cmpsb
out
fsubrl
loop
adc
insl
in
dec
mov
mov
jg
scas
jl
pop
adc
mov
push
sbb
stos
movsb
add
insl
xchg
xor
stos
out
or
jl
push
fnstenv
sbb
pop
aaa
mov
mov
shrl
out
and
pop
adc
dec
cmp
in
add
jl
add
push
add
push
and
fidivrl
push
stos
push
cwtl
jae
cmp
xchg
dec
stos
push
add
push
add
stos
jne
stos
addr16
pop
les
xchg
mov
ds
jnp
mov
and
inc
stos
xchg
add
jmp
xchg
mov
test
sub
outsb
jle
fwait
in
movsl
mov
cld
jge
mov
fdivs
scas
mov
xchg
mov
es
test
in
movsl
inc
aam
mov
lods
and
shrl
xchg
inc
aam
imul
fsubrl
aaa
stc
cltd
popa
push
movsb
inc
pop
and
lahf
aad
jge
sbb
lea
mov
jo
inc
pop
inc
cmpsb
fwait
stos
sub
jbe
mov
fists
das
xchg
sbb
sbb
je
xchg
stos
jle
pushf
in
pmaddwd
push
sub
dec
stos
mov
adc
xor
sub
lea
gs
jo
mov
cmp
jbe
mov
inc
stos
movq
imul
les
dec
or
movsl
das
mov
in
cltd
andl
inc
jl
xchg
mulb
stos
loop
sti
xchg
cmp
mov
test
mulb
sbb
cmp
adc
rep
xchg
fsts
les
adc
stos
pop
lea
mov
jmp
jmp
mov
mov
stos
dec
jne
sub
and
pop
out
mov
xchg
push
jge
cwtl
sbb
dec
sbbl
adc
shrb
or
mov
mov
loop
lcall
aas
mov
dec
addr16
lahf
or
sbb
and
into
loop
bound
cmp
inc
sub
stos
lahf
lcall
stos
or
lods
loopne
addr16
push
loope
mov
gs
mov
ljmp
sti
and
jle
hlt
int3
stos
adc
cli
sub
into
jno
mov
ret
daa
gs
cmc
mov
cwtl
adc
imul
ja
cmp
lcall
stos
fwait
jnp
xor
shrl
icebp
inc
dec
sti
stos
into
sahf
mov
stos
xlat
ljmp
stos
mov
pop
push
xchg
fdivl
inc
stos
leave
adc
or
push
and
out
adc
jmp
movsl
in
pop
xchg
pop
adc
dec
sub
xchg
mov
and
sahf
out
mov
mov
sub
mov
lret
popa
mov
and
es
shrb
pusha
xchg
arpl
cmc
or
cmp
arpl
inc
insb
js
push
push
pop
or
pop
lahf
jb
xor
push
out
fldt
cli
in
hlt
cmc
stos
xchg
test
cmp
inc
dec
jno
inc
and
mov
mov
arpl
sbb
add
and
xor
stos
dec
push
xor
jb
lea
mov
in
stos
lods
rcrb
int
jns
dec
outsb
stos
icebp
pop
les
xor
pop
imul
scas
sbb
or
fstl
sbb
mov
jns
dec
jmp
stos
push
lcall
stos
iret
dec
inc
aaa
or
jg
sub
stos
sub
cmp
pop
or
push
fmull
xchg
scas
fidivrs
jmp
cli
ret
test
mov
stos
mov
in
sbb
sahf
add
dec
addr16
into
clc
fwait
jbe
aam
push
stos
or
or
ljmp
ds
scas
out
fadds
push
sbb
je
cmpb
pop
jb
testl
out
cli
jl
imul
inc
aaa
mov
call
inc
sub
dec
cmp
push
stos
out
inc
andl
jmp
pop
out
adc
pop
or
dec
nop
pop
stos
cmpsl
scas
lret
sub
cmpl
daa
mov
iret
adc
cmp
sub
mov
daa
cmp
or
push
stos
mov
jg
mov
pop
sbb
addb
stos
and
imul
jl
fbstp
jns
xor
push
xor
mov
xor
pusha
xor
ds
fs
stos
pushf
inc
jg
jmp
mov
push
stos
sub
dec
stc
stos
inc
es
adc
inc
mov
xchg
aas
add
or
mov
jl
stos
sbb
decl
stos
enter
movsl
push
aas
insl
ljmp
out
push
cs
xchg
aaa
out
stos
fstps
jp
mov
xorl
movsb
stos
add
xor
sbb
daa
imul
sbb
pop
sub
pop
sahf
test
int
mov
inc
push
xor
lret
dec
stos
popf
jns
adc
mov
movsl
fistl
bound
mov
fcompl
push
jg
inc
mov
lods
mull
dec
adc
cltd
je
push
stos
sub
xchg
dec
cwtl
ficompl
lea
cmp
sub
scas
xorl
add
test
imulb
inc
mov
sti
in
xchg
inc
dec
jns
lock
and
nop
jge
lahf
call
es
pop
sbb
sbb
pushf
stos
sub
mov
push
mov
sub
aad
xor
sbb
mov
std
stos
lret
jne
push
rol
decb
icebp
jbe
inc
lds
sbb
and
in
xchg
cs
dec
mov
pop
xlat
mov
lods
lock
add
push
sub
mov
lods
outsb
cmp
insl
xchg
shlb
lcall
add
pop
xchg
mov
pop
cwtl
sbb
stos
cmp
dec
shrb
imul
xor
stc
mov
jge
dec
dec
fsts
mov
adc
pop
test
stos
cmp
shrl
stos
and
addb
cltd
sub
ja
lahf
imul
clc
loopne
mov
xchg
mov
fwait
mov
lahf
pop
add
pusha
jb
mov
mov
sbb
xchg
hlt
es
mov
out
ss
repnz
sub
jecxz
das
add
dec
push
stos
fnstcw
outsb
mov
mov
xor
data16
add
imul
wrmsr
mov
lret
push
mov
cmc
lds
lea
inc
xchg
jnp
mov
loope
fwait
repz
stos
push
adc
fnsave
aas
pop
or
pushf
stos
cmp
mov
jnp
push
and
push
dec
push
sbb
push
jmp
jbe
sub
popf
mov
es
jle
out
bound
fiadds
cmp
cmpsl
mov
or
pop
jb
stos
icebp
cmc
xchg
xor
stos
jnp
cmpsb
lahf
adc
cwtl
cmp
je
or
fstpt
data16
stos
pop
dec
arpl
push
pop
sbb
or
and
cmp
aas
subl
or
stos
pop
add
pop
or
fildl
jmp
enter
icebp
stos
jae
jecxz
mov
sub
and
mov
add
jmp
scas
cmp
mov
ficompl
gs
stos
cmp
hlt
das
into
fwait
add
fldt
stc
pop
jecxz
add
push
rep
lods
lock
xchg
out
popf
movsb
xorl
push
xlat
and
cmp
and
subb
push
dec
ja
pop
cmp
fcomps
inc
scas
lcall
lods
movsl
stos
or
cmp
imul
fwait
or
cmp
inc
insl
jae
stos
shl
daa
pop
ss
and
jmp
stos
adc
push
insl
stos
mov
inc
cmpsb
push
push
adcl
lea
fnstcw
loop
sbb
in
test
rcrb
xor
xlat
push
bound
and
xchg
popf
jecxz
fistps
loopne
in
repz
mov
cmp
cwtl
add
xchg
sub
push
mov
mov
pop
mov
stos
das
push
mov
jle
popw
aad
mov
or
inc
out
dec
jbe
mov
stos
fwait
lods
sbb
jg
leave
mov
xchg
add
and
mov
mov
pop
mov
ret
flds
inc
or
mov
fadds
xchg
shrl
cmpsl
or
jb
dec
and
lea
imull
adc
cld
and
mov
sbb
lods
insl
scas
mov
movsb
inc
lahf
inc
sub
ljmp
cs
movsl
adc
stos
cli
call
mov
sub
push
mov
cmp
stos
sbb
jo
insl
aaa
push
dec
scas
mov
lods
sbb
into
xor
cmpsl
arpl
inc
stos
cwtl
lods
sub
or
xchg
lock
push
lcall
into
sbb
mov
xlat
mov
aaa
mov
lcall
das
jp
sbb
fsubrl
cmp
mov
xor
in
stos
add
cmp
rcrl
in
sbbl
xchg
jnp
mov
xchg
cltd
stos
imul
popa
js
aas
daa
loopne
ja
mov
enter
das
pop
stos
pop
test
out
stos
sbb
push
sbb
adc
imul
shll
icebp
sbb
into
jns
sbb
test
xchg
ds
push
jle
stos
pop
fabs
mov
imul
int
repnz
jnp
pushl
xor
adc
in
xor
push
call
out
test
outsb
jnp
ljmp
popa
mov
lret
ret
and
dec
aad
add
int
push
add
stos
imul
imul
xlat
inc
clc
in
cltd
ja
and
cmpl
adcb
ret
das
or
fldt
or
leave
cmp
mov
gs
imul
xor
loopne
jmp
dec
pop
imul
jmp
jecxz
adc
mov
scas
insb
stos
xor
bt
fiadds
jle
xor
sub
stos
addr16
or
test
mov
push
mov
dec
stos
inc
mov
sti
es
jbe
addr16
out
or
mov
jnp
sbb
pop
stos
xor
push
jae
ss
stos
fcomps
inc
mov
xchg
mov
xor
add
xor
sbb
and
stos
std
leave
jl
xchg
scas
bound
mov
cwtl
insl
push
imul
clc
cmpsb
mov
ss
jge
push
insb
mov
mov
mov
cmp
push
lods
stos
mov
jmp
rcr
lods
and
and
push
or
adcb
jmp
out
bnd
gs
push
xchg
ret
insb
stos
imul
push
xor
mov
or
ljmp
lods
cltd
andl
fsub
stos
out
mov
bts
xor
add
idivb
sahf
mov
rol
mov
iret
imulb
inc
cmpsb
stos
or
xchg
fsts
int3
out
xchg
pop
addl
add
div
mov
jbe
sub
push
movsb
dec
xchg
xchg
inc
fwait
stos
push
mov
jg
cs
stos
xchg
pop
pop
mov
stos
nop
lds
push
cwtl
daa
shrb
ret
jbe
inc
xorb
nop
push
jnp
pop
lret
and
jo
stos
pushf
lea
movsb
sub
pop
stos
dec
sub
rorl
cmp
clc
fbstp
xchg
sub
jne
lds
cwtl
stos
pop
icebp
adc
imul
insl
sub
jp
scas
mov
mov
mov
stos
stos
xchg
cmp
fs
jns
into
fimuls
lods
fisubrl
es
imul
jle
xchg
inc
aam
les
scas
jge
loope
bound
movsb
sbb
test
stos
mov
jg
cld
jmp
stos
or
shll
pop
or
jmp
fisubl
fistl
stos
cmp
add
in
popa
push
adc
push
xor
stos
es
and
test
push
stos
mov
adc
addr16
sub
je
js
xchg
push
mov
ret
xor
push
jno
add
mov
mov
das
stos
movsb
push
xchg
repz
and
or
frstor
enter
mov
push
add
cwtl
sti
xchg
addl
sub
mov
jecxz
mov
or
adc
sub
pop
fwait
or
stos
xor
mov
xchg
les
xchg
xchg
jns
out
jle
adc
iret
pop
stos
or
mov
ljmp
adc
or
adc
repz
scas
enterw
mov
add
icebp
jnp
ss
mov
lods
into
shr
and
in
dec
mov
nop
mov
pop
in
push
push
mov
and
mov
lahf
lret
daa
gs
or
pop
shrb
and
enter
es
jmp
pop
setns
mov
mov
hlt
stos
fwait
std
xchg
pop
ds
jp
pop
push
xor
jmp
inc
out
movsl
push
gs
lds
stos
cmp
and
insl
dec
ret
adc
lea
jo
xorl
jne
xchg
add
addl
xchg
stos
sub
int
iret
jp
in
imul
fisubrl
dec
aad
ret
stos
cli
lds
loop
adc
cmovs
inc
xor
call
inc
xchg
aam
cld
hlt
push
stos
adc
icebp
stos
stc
dec
and
cmp
scas
stos
and
jnp
jae
lahf
inc
mov
push
and
inc
pop
in
mov
sarb
push
lods
push
mov
adc
imull
or
mov
stos
mov
jg
fsubrp
shll
xor
sbb
psllq
std
cmp
movsb
dec
push
pop
stc
adc
and
or
xchg
lcall
adc
mov
movsl
mov
mov
sbb
stos
adc
arpl
shlb
stos
inc
mov
pxor
inc
jcxz
stos
cmc
repnz
add
stos
divb
outsb
shlb
xchg
push
mov
popf
fsubrl
and
mov
sbb
pop
stos
dec
outsb
mov
inc
stos
ljmp
pop
daa
dec
pop
fcmove
stos
into
cmc
xchg
adc
repz
add
xor
add
pop
or
pop
int
out
pop
mov
xor
cmp
iret
imul
mov
mov
lods
fwait
iret
sub
xchg
cmc
inc
stos
pushf
cmp
push
out
arpl
stos
jno
mov
pop
data16
stos
push
add
call
fnstsw
add
ret
jmp
sbb
inc
sahf
jp
mov
stos
aad
or
leave
pop
outsl
or
push
fmul
stos
arpl
int3
xchg
sbbl
dec
add
push
push
outsl
or
aad
ffreep
ret
xchg
stos
pop
inc
lods
jl
mov
jecxz
fists
and
ljmp
push
ret
pop
xchg
dec
subb
fiadds
push
insb
dec
xor
mov
gs
pusha
pop
inc
mov
rcrb
in
pop
cmp
adc
jns
adc
jg
xchg
pop
xchg
push
sub
sti
inc
stos
xchg
mov
stos
idivl
mov
stos
stc
mov
loopne
stos
jge
jp
fcmovb
cmp
stc
data16
out
stos
xchg
ret
cmc
aas
mov
mov
shrl
cmp
add
adc
stos
test
push
in
ljmp
mov
je
mov
pop
in
arpl
std
lds
xchg
mov
cwtl
stos
inc
sbb
loop
jl
mov
mov
jp
stos
xlat
sbb
subb
dec
and
jg
subb
pop
mov
mov
inc
push
out
mov
xor
jle
cs
aam
mov
jmp
pop
nop
rclb
mov
bound
add
pusha
cwtl
adc
popa
push
and
mov
fsub
jb
sub
dec
aas
cwtl
nop
dec
mov
pop
jae
fwait
stos
imul
outsb
movsw
mov
mov
jns
push
xchg
outsb
cwtl
dec
pop
popa
ret
sub
mov
and
div
cmp
rcr
cltd
mov
arpl
pop
and
push
jmp
xor
mov
leave
scas
stos
and
arpl
mov
cs
push
and
call
iret
stos
jmp
inc
cld
pop
push
popa
aas
pop
sahf
test
inc
cmp
fstpl
sub
fwait
ror
and
mov
imul
pop
es
jo
sbb
sbb
xchg
xchg
sahf
xchg
push
cmpsb
mov
lahf
adc
mov
inc
orb
dec
sbb
jle
mov
addr16
push
sub
lret
adc
sbb
movsb
jbe
fsubrl
fs
cltd
rcll
jl
testb
stos
mov
sub
leave
stos
inc
lret
pusha
inc
push
fs
jmp
in
insb
sub
sub
xor
and
movsb
movsb
adc
lahf
mov
cli
imul
push
cs
daa
stos
sub
sbb
push
fsubr
and
push
inc
cmp
repnz
mov
mov
stos
repz
cld
dec
and
pop
stos
xchg
arpl
jo
jge
jp
insb
sti
inc
out
xchg
stos
or
lods
rolb
cwtl
in
dec
stos
jae
mov
stos
enter
mov
add
fucomi
xchg
shlb
xor
mov
fnstsw
rorb
or
popf
sub
pop
iret
jbe
pop
fwait
shrl
stos
pop
xchg
jg
ds
imul
pop
ret
andb
jmp
mov
call
adc
mov
cmpl
push
and
sub
add
stos
mov
aad
mov
fmul
stos
lods
lahf
push
sbb
xchg
insb
sbb
js
stos
and
das
cmp
pop
mov
xchg
pop
mov
pop
loopne
lods
out
or
add
aam
aaa
push
movsl
cmpsl
cmc
pop
xor
jmp
pop
mov
scas
mov
aas
jl
xchg
jae
stos
xchg
ret
sti
shrb
xchg
leave
mulb
stos
call
imul
das
add
cwtl
push
push
sbb
lahf
addl
cld
sbb
fwait
push
inc
test
jmp
sub
stos
xchg
outsl
pop
jecxz
xor
stos
mov
int
xlat
stos
xorl
imul
mov
lods
xchg
jne
stos
and
fucomp
adcb
lret
gs
fwait
aaa
pop
je
stos
push
dec
stc
sub
test
shrb
inc
bound
mov
scas
dec
subb
jp
adc
mov
subl
mov
shl
sub
cld
dec
mov
out
or
and
jle
shll
mov
sbb
imul
stos
jge
pop
outsb
orb
pushf
loop
stos
popf
scas
pop
sbb
enter
mov
and
insb
adc
and
test
stos
jnp
test
mov
ret
mov
arpl
pusha
mov
mov
stos
mov
das
push
lods
stos
sub
into
or
cmc
in
jo
int
movb
mov
out
aam
invlpg
cwtl
mov
mov
aas
fwait
add
inc
add
add
incb
and
ss
mov
pusha
pop
or
push
sub
stos
fwait
ret
sbb
mov
rcrb
es
sub
mov
fwait
jmp
lods
push
mov
lock
mov
inc
add
or
aam
jle
stos
test
xor
jmp
cmp
cmp
setle
adc
and
sti
rorb
mov
xchg
jmp
je
int
jp
xchg
fildl
jae
negb
icebp
cmp
shl
jmp
out
fbld
xchg
lahf
sub
aad
dec
adc
pop
xchg
pop
stos
in
mov
sub
mov
rclb
mov
aas
lahf
shrb
push
cs
stos
inc
mov
stc
testl
hlt
stos
js
enter
fcomp
stos
push
push
mov
pop
and
fwait
icebp
fwait
shlb
std
push
movsb
dec
xchg
les
shrb
inc
sarb
jg
push
jns
orb
test
sbb
pop
mov
stc
mov
cld
stos
mov
mulb
dec
stos
cli
and
arpl
stos
dec
hlt
sbb
adc
sbb
cwtl
xor
cmc
pop
fwait
negb
xchg
stos
scas
adc
loop
push
imul
jg
in
stos
jmp
sti
and
stos
jo
lea
jae
jne
stos
out
imul
aam
call
in
je
fs
jl
roll
hlt
cmp
jne
jmp
addr16
push
rcrl
push
leave
stos
pop
stos
sub
or
push
xchg
pushl
sahf
stos
xchg
adc
fisubs
sbb
es
push
sub
stos
mov
sub
cmp
push
or
push
sub
dec
imull
sti
iret
add
leave
jnp
std
mov
sub
xor
add
jne
out
ret
lods
cmp
stc
mov
rcrb
outsb
dec
jb
xor
mov
push
imul
mov
add
fs
leave
stos
orb
lods
or
fisubrl
movsl
cmc
add
push
xor
jg
cmp
cmpsl
adc
lods
sub
cmp
dec
push
ror
jmp
insl
loope
movsb
test
xchg
pop
xchg
stos
inc
pop
xor
aaa
xor
std
rol
jmp
jns
xor
es
shll
cmp
inc
sbb
fdivr
adc
scas
cmpsl
mov
sub
push
jnp
mov
jne
std
or
stos
fs
je
push
loop
sub
popa
insl
fwait
lcall
xchg
pusha
pop
or
stos
jno
cwtl
jbe
jb
push
imul
daa
rorl
xchg
andb
test
std
ret
sub
popf
xor
ficoml
sahf
and
cmp
and
jno
int3
dec
jg
pop
jl
mov
das
dec
imul
lahf
mov
outsl
mov
push
scas
stos
dec
subb
stos
xchg
xor
outsl
subl
scas
push
test
cmp
or
mov
stos
lods
in
xor
pop
rcrb
stos
jg
popa
push
roll
jnp
mov
pop
and
ss
cli
mov
sti
jno
inc
push
inc
popf
pop
and
pop
fcoml
xchg
inc
std
sti
xchg
sub
lods
mov
sub
hlt
and
out
pop
loope
sahf
cwtl
pop
push
sbb
lea
sbbl
fldpi
fs
and
imul
icebp
stos
int
mov
pop
stos
push
enter
decb
stos
cltd
loope
popa
pop
mov
repnz
sbb
push
movsbl
lret
mov
adc
lcall
inc
call
ljmp
adc
pop
pop
mov
scas
int3
xchg
jmp
xlat
xor
rclb
into
cmpsb
stos
xor
cs
scas
mov
mov
pop
mov
aas
ret
or
pop
jle
addr16
push
cmpsl
xchg
lahf
pop
push
stos
cmc
jl
test
or
lret
cld
mov
stos
divb
out
cmpsb
les
je
pop
imul
cmp
add
lock
stos
je
inc
mov
addr16
mov
or
mov
push
adc
push
jmp
insl
enter
fcomi
and
and
push
imull
out
sti
dec
xchg
stos
jmp
movsl
adc
scas
decl
stos
and
or
in
push
test
test
cltd
inc
push
pop
stos
subl
popf
stos
in
in
scas
int
ljmp
data16
mov
xchg
xchg
and
int3
jecxz
pop
xor
mov
jae
imul
ljmp
add
mov
push
pop
call
popf
arpl
jne
cmpb
mov
aad
jb
outsb
sub
dec
xor
push
inc
stos
or
testl
add
data16
xchg
xor
scas
mov
iret
sub
add
dec
cwtl
jno
sbb
push
fisttps
nop
into
fnstsw
scas
ljmp
ficoml
aam
jnp
test
add
data16
pusha
mov
adc
cmp
dec
cmp
movb
mov
sub
pop
xor
or
sub
movsl
and
bound
adc
lods
sbb
sti
addr16
push
fisubrl
insl
test
cltd
jmp
jnp
mov
gs
std
shlb
sub
xor
mov
nop
cmpsl
insl
jo
cs
mov
inc
test
adc
push
stos
cmpsl
icebp
pop
movsl
adc
mov
stos
ds
into
sub
mov
mov
xor
xlat
stos
and
fcoml
adc
add
aam
mov
scas
cltd
dec
ret
add
stos
inc
add
mov
dec
stos
cmpsl
mov
cs
xchg
outsl
loope
out
mov
cmp
loopne
mov
mov
ret
jmp
mov
mov
jo
insl
in
jle
mov
jmp
mov
leave
js
sarb
stos
sbb
stos
shlb
repz
test
jns
daa
sub
mov
xor
sahf
mov
or
mov
mov
pop
mov
adc
push
out
xchg
push
int3
inc
mov
in
mov
leave
jmp
add
sbb
mov
jmp
std
shl
jmp
ficomps
cmpsb
loopne
mov
fs
jmp
clc
pushf
test
popf
xchg
mov
stos
cmpsb
mov
inc
dec
or
xor
adc
mov
push
subl
fs
enter
popf
push
lods
insb
rclb
xchg
shl
mov
addr16
sub
or
mov
jmp
test
test
inc
out
lods
mov
adc
push
popa
sbb
call
mov
push
pop
sbb
mov
mov
cmp
xor
mov
ljmp
lret
div
mov
xchg
inc
jne
inc
mov
cmpsb
stos
and
jno
mov
lods
fldcw
adc
push
pop
push
mov
lods
fsubrl
in
aaa
sbb
scas
lea
pop
nop
lret
push
sub
cmc
scas
loop
sbb
pop
test
mov
fs
mov
or
adc
dec
addr16
lcall
jecxz
stos
test
push
inc
mov
repz
fwait
sbb
into
cwtl
push
push
push
adc
outsl
insl
stos
shlb
jno
stos
or
movsl
clc
out
stos
xchg
push
mov
stos
xor
or
adc
dec
adc
stos
sbb
in
mov
add
sahf
pop
movsb
pop
addr16
push
and
mov
stos
cmpsl
jg
mov
jmp
sbb
fiaddl
je
cmpsb
sub
lds
nop
pop
stos
sbb
cmpsb
xchg
dec
adc
das
mov
pop
dec
mov
hlt
mov
cmp
mov
stos
jne
push
pop
aad
push
into
jle
sbb
fstpt
nop
stos
fs
lahf
and
stos
inc
mov
in
stos
icebp
dec
popf
dec
testl
lret
inc
xlat
cs
push
shrl
imul
xchg
in
and
cmc
call
outsb
or
lods
rorb
cmpsl
push
inc
xlat
cmpl
fists
outsl
stos
or
out
pop
xor
cmpb
mov
add
shll
mulb
addr16
sub
sub
iret
mov
mov
adc
mov
fsubrs
shrl
popf
push
std
mov
jnp
dec
es
arpl
in
and
faddp
scas
inc
movsb
xchg
insl
lods
stos
mov
sub
gs
daa
lods
mov
stos
push
add
jnp
dec
stos
jne
push
aam
fldcw
sub
add
lods
add
sub
mov
cmc
jmp
or
mov
stos
lea
mov
repz
fnsave
outsb
push
aam
pop
xchg
mov
popf
jns
repz
popa
call
ret
test
fwait
test
sub
mov
push
jnp
popf
repz
xor
stos
dec
cltd
xlat
fnsave
jne
stos
inc
xchg
mov
push
stos
xchg
dec
int
outsl
jo
cld
stos
dec
mov
in
repz
mov
daa
push
dec
scas
and
fisttpl
inc
push
stos
pop
or
mov
stos
mov
xor
push
out
push
add
pop
cwtl
jo
inc
test
pop
pop
xor
xchg
stos
hlt
int
test
std
daa
pop
dec
fidivs
mov
loopne
pop
stos
add
adc
imul
clc
sbb
mov
jno
push
outsl
cmp
cwtl
jne
stos
mov
mov
pop
adc
sbb
inc
adc
mov
xorb
mov
lods
or
int
dec
add
cmp
inc
fbld
push
mov
mov
cmc
js
sbb
in
mov
lret
ja
outsl
push
cmp
dec
sub
stos
dec
ror
repnz
mov
outsb
stos
in
stos
sti
enter
jne
negb
push
xor
push
stos
or
pop
cmp
jl
mov
pop
js
imul
sub
repz
sbb
xlat
ret
pop
or
stos
push
jbe
adc
jnp
nop
jecxz
mov
add
in
dec
cs
std
les
stos
cmpsb
add
leave
in
pusha
jl
pop
dec
adcl
int3
adc
mov
pop
daa
push
cmp
cwtl
popa
mov
scas
jb
and
push
stos
add
mov
out
cwtl
shl
dec
sbb
jl
xchg
stos
rclb
mov
into
stos
push
movsb
mov
bound
jnp
and
pop
or
out
dec
outsl
push
stos
scas
fisttps
inc
pop
ljmp
jmp
and
movsb
mov
cltd
or
pop
dec
daa
xlat
icebp
test
loop
pop
stos
lods
mov
xchg
push
or
stos
add
imul
out
mov
xchg
ljmp
arpl
insl
jmp
jmp
xchg
push
subps
jnp
mov
stos
decl
push
out
stos
ret
inc
fcmovnbe
test
sbb
lret
stos
xchg
movsb
fdivr
jmp
in
andl
in
push
jl
mov
mov
pop
and
pop
sub
push
adc
inc
inc
lahf
push
rorb
jns
loopew
jo
and
stos
nop
insw
add
mov
bnd
fwait
in
mov
stos
cmp
push
ds
lock
stos
dec
scas
mov
shrl
repz
repz
fwait
and
fnstenv
push
mov
outsl
add
or
cld
sbb
jmp
sbb
jb
scas
jns
cli
loopne
mov
stos
adc
js
mov
xchg
les
jge
insl
stos
int
and
int
arpl
xchg
fwait
inc
pop
sub
in
stos
loop
push
push
movsb
mov
or
lea
push
add
lods
pusha
pop
pop
xor
lcall
enter
xchg
inc
inc
jnp,pn
pop
inc
and
adc
ss
or
add
inc
push
stos
add
jae
stos
fdivrl
addb
std
sbb
mov
repz
adc
jl
and
fs
or
icebp
into
sbb
stos
mov
jmp
scas
sbbl
inc
arpl
loop
fwait
outsl
xorb
shrb
xor
int3
mov
imull
fwait
imul
lret
arpl
xchg
sbb
jl
pop
inc
mov
cmc
cmp
out
mov
pop
mov
xchg
stos
jecxz
es
cmp
dec
jne
mov
mov
aas
popf
imul
test
stos
fistpll
jbe
out
mov
es
data16
mov
imul
flds
add
pop
stc
aaa
push
lea
dec
add
inc
stos
pop
cs
xor
mov
out
mov
xchg
stos
and
cmp
fidivrs
push
cmp
fwait
sub
cltd
rep
adc
test
shll
mov
pusha
ret
dec
stos
xchg
cmc
lcall
repnz
add
adc
sarl
clc
fwait
push
dec
pop
outsl
lcall
jmp
es
iret
enter
push
cld
lods
mov
das
cmp
jecxz
add
lods
cmp
jmp
iret
inc
mov
icebp
shrl
jle
popf
cld
stos
mov
mov
mov
jg
inc
pop
jne
mov
xchg
mov
inc
imul
xchg
xor
addr16
cmp
sbb
das
xchg
push
movsl
inc
lahf
rcll
push
sub
lock
js
cmp
pop
mov
pop
pop
testb
shlb
lret
mov
mov
lahf
mov
add
push
or
mov
push
pop
lcall
jmp
inc
mov
lcall
clc
jnp
push
mov
pop
nop
insl
stos
neg
loop
call
jno
or
arpl
add
jne
stos
push
mov
stos
add
push
lds
xchg
adc
imul
xorl
sub
jl
clc
xchg
stos
je
xchg
stos
repz
out
and
pop
dec
inc
mov
jnp
cmp
mov
ljmp
mov
push
mov
add
fstps
inc
int3
xchg
or
mov
or
add
mov
stos
cmpsb
push
int
push
notb
or
cmp
test
and
push
sahf
stos
or
or
mov
jle
push
mov
loop
nop
mov
xor
sbb
jmp
cmp
and
daa
jo
add
stos
loope
mov
aaa
dec
int3
lret
imul
jle
sub
jo
stos
repnz
cltd
stos
mov
cmp
dec
cli
xchg
subl
imul
xchg
movb
gs
bswap
sub
mov
inc
or
pop
mov
push
xor
mov
js
es
fwait
jns
insl
push
andb
arpl
lcall
jmp
stos
icebp
mov
dec
test
xor
stos
push
push
mov
stos
adc
into
adc
cs
pop
push
cmp
mov
shrl
inc
inc
idivl
jecxz
in
aaa
mov
sbb
scas
jne
sub
mov
sub
sahf
stos
out
mov
mov
aad
mov
xchg
aas
sahf
mov
stos
cmp
push
dec
pop
pop
aam
stos
out
dec
inc
ror
dec
ret
jmp
xchg
mov
mov
add
imul
mov
je
out
pop
or
test
stos
pop
or
jno
gs
adc
in
mov
mov
cmp
jmp
jmp
add
pop
xchg
loopne
push
mov
inc
test
mov
bound
aad
xchg
xor
stos
cmc
out
mov
xchg
fwait
xor
in
les
pop
jnp
cmp
or
mov
xor
mov
stos
dec
aas
sbbl
test
enter
stos
jmp
les
mov
push
fistps
addr16
fiaddl
fwait
xchg
pushf
sub
dec
stos
jae
dec
fimuls
addr16
stos
mov
ret
daa
jge
aaa
push
loopne
movsl
sbb
adc
push
mov
out
dec
cwtl
sbb
dec
imul
dec
jmp
mov
xor
and
mov
js
or
andb
xchg
push
fildll
je
sbb
sti
xor
or
nop
jle
jl
ss
adc
inc
xorb
jecxz
sub
pop
xchg
cmp
mov
and
xor
cli
pop
stos
in
arpl
push
into
jo
stos
rorb
xor
daa
and
shlb
lods
stos
push
movsl
sub
cmc
pop
jns
shl
xchg
inc
mov
lods
inc
adc
and
movsl
jb
adc
hlt
idivl
mov
lods
or
mov
pop
and
or
cli
stos
cmc
sbb
repz
bound
fldcw
sub
in
lahf
mull
mov
xor
xor
pop
fcomip
bound
aam
movsb
lret
mov
insl
adc
pop
movups
imul
cmp
sahf
int3
pop
stos
pusha
and
push
add
stos
cmp
nop
lcall
xchg
movsl
movsb
or
dec
stos
in
popa
xchg
dec
rcl
stos
adc
and
insl
add
lock
in
push
mov
push
or
stos
mov
test
sbb
fwait
jp
out
or
shll
mov
insl
lods
push
out
aaa
push
mov
stos
ljmp
xor
mov
lods
xor
stos
mov
movsb
movsl
aad
mov
lret
divl
xchg
repnz
mov
outsb
fwait
sbb
sub
das
orl
repz
aad
sbb
pop
stos
and
in
cmp
mov
ss
hlt
rcrb
mov
push
jp
stos
pop
adc
fsubrl
cmp
add
outsb
lahf
or
addr16
enter
pop
cmp
push
inc
fldenv
sub
test
push
mov
xchg
jbe
mov
mov
sub
mov
stos
lds
btl
outsl
xlat
xor
jmp
jle
shll
pop
stos
and
in
je
xchg
push
inc
repnz
pop
lods
mov
std
stos
jo
sahf
sub
pop
fmuls
stos
push
stc
mov
inc
jnp
sbb
bound
or
scas
pop
add
ljmp
fcmovnb
push
stos
in
scas
mov
push
jl
stos
mov
movsl
hlt
imul
loop
pushf
mov
stos
ret
cmp
cmp
sti
or
inc
jecxz
mov
add
pop
enter
and
or
stos
adc
test
cmp
scas
pusha
cmpsl
scas
in
lods
mov
outsl
shrb
inc
idivb
jns
cmpl
outsl
imul
cli
fwait
jno
stos
jnp
mov
rep
leave
mov
rcrb
xchg
stos
xchg
lret
ljmp
movsb
mov
out
cmp
scas
dec
sub
stos
push
dec
push
pop
iret
jmp
jne
movsl
mov
xchg
xchg
idiv
stos
pop
sub
push
jmp
adc
xor
pop
imul
add
mov
mov
das
cmpl
sbb
xor
mov
adc
ret
xchg
stos
push
jg
adc
dec
push
nop
stos
and
sahf
ror
bts
rcr
aas
jmp
ss
or
xchg
or
imul
mov
jmp
stos
in
rcll
push
xchg
inc
jge
sub
je
loopne
sbb
cld
ljmp
xor
pop
jne
push
push
divl
xor
in
adc
movsl
inc
xchg
add
mov
adc
lret
aaa
jmp
lcall
stos
fistps
jge
fwait
ret
rolb
sbb
sub
push
jbe
lahf
and
push
and
andl
test
stos
push
jbe
xchg
sbb
dec
or
stos
push
pop
ja
lahf
dec
sbb
mov
adc
lods
stos
std
xchg
fcoms
jg
add
mov
aad
fwait
insb
jb
stos
ret
dec
sbb
ret
inc
pop
pop
mov
adc
xor
fnstsw
rcr
out
dec
mov
cmp
enter
stos
mov
aas
xor
cmp
rclb
mov
shrl
or
pop
lods
jns
or
xor
fbld
cmp
add
mov
nop
movsl
clc
push
andb
mov
xlat
testl
add
push
std
enter
mov
addr16
mov
iret
jns
cld
stos
mov
pop
das
cltd
sahf
or
dec
lods
pop
clc
stos
les
orl
lahf
daa
cwtl
pop
sbb
fldt
scas
int
dec
ds
adcb
std
or
cmp
jnp
mov
cld
push
add
sbb
cmc
xchg
jmp
mov
stos
mov
hlt
inc
dec
lret
out
xor
outsb
xchg
aas
and
or
cli
icebp
mov
push
push
inc
addr16
stos
pop
cmp
ror
stos
scas
push
insb
lret
cmpsl
ja
or
inc
rcrb
stos
cmpsl
mov
lea
gs
pop
cmpsb
stos
cmp
push
xor
inc
fldt
sbb
ret
adc
mov
aad
addr16
mov
sti
lods
fwait
rorl
imul
push
stos
jecxz
rcrb
shrl
cmp
mov
mov
or
add
jl
scas
jge
idivb
loop
lahf
adc
out
jo
bound
hlt
add
scas
and
push
xor
sub
and
imul
bswap
inc
and
and
adc
out
scas
sub
pop
lods
mov
test
jae
sub
stos
push
fisttps
jo
imul
push
test
mov
adc
loopne
inc
inc
mov
scas
leave
je
data16
daa
sub
jp
and
xor
jns
fisubs
pop
jl
xchg
scas
int3
sub
mov
das
into
sub
test
mov
push
dec
xchg
mov
addr16
pop
push
inc
stos
xchg
mov
stos
lods
push
mov
movsl
aam
addr16
es
cmp
leave
ds
mov
sub
cmp
or
push
cmp
enter
mov
jmp
stos
mov
mov
mov
and
fcompl
daa
aaa
leave
test
andl
mov
jl
in
cltd
bound
fnstcw
fdivrs
test
loope
mov
jbe
aad
xchg
iret
ss
sbb
add
repnz
fldt
jbe
pop
popa
mov
stos
xor
push
jae
cmp
jno
stos
call
xor
stos
fwait
jns
sub
fists
arpl
hlt
push
add
sahf
subl
mov
out
stos
ds
sub
scas
popf
imul
cmpsl
xchg
pop
leave
mov
scas
cmp
push
movsb
inc
xchg
stos
insl
xor
xor
addl
add
stos
adc
push
stos
jne
mull
stos
pusha
in
mov
imul
xchg
and
push
stos
push
adc
data16
icebp
stos
mov
cmpsl
jae
stos
outsl
psubd
mov
lds
adc
lret
daa
test
adc
pop
push
stos
and
dec
test
jno
pushf
stos
gs
dec
jl
stos
sti
pop
in
push
cmp
and
fisttps
aad
push
lods
addr16
jno
pop
xchg
pop
lahf
xchg
inc
adc
push
ss
push
pop
cmp
adc
lret
sub
popf
scas
lret
xchg
int3
sub
pop
xchg
lock
or
stos
and
addl
sbbb
cld
lock
xchg
in
das
decl
jle
jmp
push
stos
popa
mov
test
loopne
shrb
mov
sub
xchg
add
mov
stos
rcrl
arpl
les
ret
xchg
or
adc
ret
stos
out
out
push
fs
fdivs
mov
jo
movsl
mov
imul
adc
mov
cmc
sahf
roll
push
inc
mov
cli
ljmp
push
pop
add
jg
mov
out
int3
mov
inc
push
add
fidivrl
stos
movsl
mov
aas
cwtl
jp
push
dec
mov
out
cmp
xchg
fldcw
dec
ja
cmpsb
mov
add
pop
dec
and
les
in
int3
xor
cmp
push
stos
and
dec
jmp
scas
ja
and
add
cmp
movsb
fwait
push
xor
cmp
inc
inc
jns
shll
and
dec
orb
stc
loop
dec
mov
test
paddusb
insl
cmp
stos
xchg
pop
push
mov
jmp
stos
int
push
adc
insb
scas
lahf
sahf
movsb
arpl
mov
dec
jecxz
stos
popf
popa
xchg
stos
mov
imul
fstpt
outsl
or
stos
les
lods
sti
inc
fisubrs
xchg
dec
mov
insb
data16
push
add
adc
or
and
push
addr16
roll
mov
std
mov
dec
cmpl
stos
hlt
add
push
push
repnz
lcall
or
jmp
loop
jae
push
ret
imull
push
xchg
popf
stos
mov
lret
dec
and
jecxz
scas
cltd
inc
fnstsw
cmp
fwait
pop
repnz
test
call
cmpsb
mov
inc
xchg
leave
subl
and
scas
stos
punpckhdq
cmpb
jl
rorb
sti
jecxz
stos
xchg
and
and
stos
push
int
gs
jle
stos
lods
ficoml
add
aam
mov
or
leave
icebp
cld
xor
xor
mov
sahf
mov
inc
mov
rclb
imul
mov
stos
mov
movsb
jbe
and
mov
mov
arpl
mov
dec
dec
sbb
fst
stos
push
pop
xchg
movsl
push
jecxz
leave
in
or
mov
xbegin
test
xchg
and
jge
pop
ss
xor
mov
les
stos
test
sub
mov
stos
ficoms
pop
adc
das
mov
cmp
sbb
scas
xchg
stos
pop
jmp
jge
lret
jl
stos
add
imul
popa
xor
nop
test
lds
jae
adc
std
xorb
mov
stos
fs
ljmp
jmp
out
mov
adc
stos
push
inc
push
sub
xor
add
daa
jne
repz
lahf
mov
lcall
std
pushl
pop
and
cmp
stos
push
test
xchg
push
mov
add
loope
leave
xchg
addr16
xchg
dec
fwait
hlt
sbb
inc
and
rcr
std
stos
dec
aam
imul
push
stos
mov
push
cmc
out
push
pop
push
or
outsb
je
lcall
clc
dec
or
in
daa
sub
cs
xchg
and
dec
jl
xchg
mov
stos
push
mov
mov
lcall
xchg
fwait
jmp
leave
fwait
xchg
gs
int
mov
xchg
stos
jge
sub
iret
jae
adc
jbe
stos
test
inc
xor
push
xchg
std
frstor
push
repz
pop
xchg
cmp
icebp
imul
out
stos
sbb
mov
arpl
iret
data16
mov
xor
shrl
imul
stos
lds
or
pop
add
stc
stos
icebp
fcmovu
xchg
subl
sarl
lock
mov
sbb
mov
mov
leave
stos
stc
repnz
je
inc
add
popf
cmp
push
sbbl
mov
push
push
pop
fistl
repz
push
mov
mov
stos
push
aad
into
pop
stos
js
inc
push
sub
and
add
pop
jmp
mov
pop
mov
add
cld
add
or
or
xchg
hlt
in
stos
lret
add
push
and
jmp
pushf
add
xchg
mov
adc
stos
scas
hlt
addr16
mov
cmp
sub
mov
adc
mov
sbb
lds
lock
fs
ret
lret
loope
jbe
into
stos
subl
fwait
test
jnp
out
dec
xchg
cmp
fcom
sbb
stos
mov
cmp
pop
insb
mov
outsb
fsts
std
lods
fwait
and
stos
test
cmp
das
cmp
push
nop
dec
xor
stos
xchg
mov
scas
sahf
lcall
aas
mov
pop
sub
call
or
mov
out
rcl
inc
mov
jmp
mov
dec
mov
mov
mov
sbb
jb
stos
bound
sti
and
nop
fidivl
xlat
cmp
sub
xchg
xor
push
mov
out
jp
lahf
mov
stos
lret
sub
mov
cmp
mov
scas
imul
sbb
ror
pop
movsb
stos
mov
and
jmp
sub
push
loope
inc
stos
mov
int3
xchg
shrl
rcl
fs
stos
dec
jmp
or
mov
js
xchg
xchg
aas
stos
fs
pop
daa
and
inc
mov
xchg
xlat
popa
dec
subb
mov
lahf
popl
movsb
imul
imul
fwait
decl
ret
mov
int3
cmp
stos
mov
push
mov
das
stos
fimuls
sti
mov
stos
sbb
ret
sbb
cmpsb
cld
icebp
shlb
shl
imul
pop
fwait
stos
xchg
pop
mov
and
clc
cmp
stos
out
insb
xor
imul
nop
subl
push
aaa
stos
enter
mov
stos
sbb
in
adc
test
stos
xchg
xchg
in
jle
or
aam
jmp
mov
inc
mov
in
and
stos
inc
xchg
jo
or
je
jmp
jg
fwait
pop
out
xchg
fisubl
leave
push
call
shrl
mov
pop
jle
mov
addr16
pop
aam
shlb
cmpb
mov
outsl
jbe
shl
mov
jno
int
repnz
or
dec
mov
adc
dec
push
mov
push
pop
push
ret
movsb
dec
cmp
test
xchg
cmp
and
xor
fwait
mov
in
add
sub
scas
lods
sub
inc
sub
out
sbb
sti
dec
push
xchg
push
aas
mov
js
mov
daa
or
and
sbb
mov
cmp
out
gs
pushf
stos
and
ds
in
mov
insb
inc
scas
fcoms
aaa
inc
cltd
nop
stos
push
bnd
fsubl
cmc
dec
inc
pop
js
out
scas
and
fwait
adcl
lods
sbb
lret
add
sti
mov
popf
mov
and
inc
scas
ret
pop
sub
mov
push
roll
adc
xchg
jno
mov
fldl2t
stos
daa
test
mov
stos
dec
jge
scas
pop
cs
dec
adc
pushf
divb
push
push
fsubrl
jbe
push
js
ficomps
mov
daa
out
rorl
mov
cmp
sub
out
inc
iret
sbb
jg
stos
cmpsb
enter
push
lods
nop
stos
subb
aaa
adc
dec
jne
mov
les
sbb
push
push
aam
nop
stos
pusha
fwait
jmp
addr16
cmp
jmp
enter
in
pop
stos
mov
or
stos
and
imul
lods
cmpb
dec
inc
mov
xor
sub
arpl
jmp
cltd
int3
pop
clc
ret
or
mov
add
mov
movsb
repz
call
adc
xchg
nop
xchg
mov
test
sub
xlat
stc
cmp
push
clc
loopne
xor
and
stos
and
mov
les
pop
pop
pop
sbb
add
adc
dec
stos
ficomps
xchg
push
je
sub
mov
sahf
int
jecxz
stos
movsb
div
sbb
stos
mov
fsubrs
fwait
sub
and
pop
stos
mov
out
cmpb
adc
stos
mov
cli
aas
push
movsb
out
pop
addr16
xchg
dec
stos
lea
dec
pop
mov
mov
shlb
cmp
inc
or
rcrl
pop
xlat
sbb
stos
js
sub
dec
stos
cli
cmpsl
sti
xor
jae
mov
cmpsb
scas
xchg
test
loop
and
xlat
lods
or
sub
inc
stos
fcos
into
sets
outsl
popf
push
cmp
or
fldt
adc
cli
shll
ss
popa
imulb
mov
xchg
pop
mov
stos
jmp
jbe
inc
test
jle
icebp
dec
popf
cmp
mov
jmp
sbb
stos
or
mov
pop
xor
stos
pop
mov
fcoml
ljmp
adc
mov
xchg
shl
cmpsb
add
or
cmp
stos
fcmovb
popa
xlat
add
dec
orb
mov
mov
stos
repnz
pushf
je
ja
cs
adc
cmc
call
into
mov
pop
xorb
push
rep
iret
cmpsl
stos
outsb
lret
or
add
xor
stos
cmp
add
stos
dec
hlt
cmc
sbb
repnz
dec
and
inc
xor
mov
stos
cwtl
loopne
or
xchg
xchg
sarb
push
jns
stos
jl
lds
mov
xchg
fstps
insl
in
mov
inc
xchg
mov
stos
popa
or
jb
and
pop
jmp
pushf
lret
jmp
mov
fcmovnu
dec
pop
sub
stos
fadds
push
out
mov
mov
mov
inc
ja
mov
cmp
adc
push
in
imul
lahf
pop
lods
divl
frstor
pushf
lock
imul
sub
stos
lret
pop
dec
adcl
ljmp
adc
jmp
or
mov
xchg
imull
rcrl
repz
adc
xchg
imulb
rcll
sbb
imul
lea
adc
mov
push
mov
xchg
outsl
add
cwtl
push
inc
stos
mov
mov
aas
cmp
add
jmp
adc
fists
movsb
mov
ds
cmpsb
pushf
xor
xchg
mov
orb
jge
cltd
scas
lods
dec
andl
ret
mov
dec
stos
jmp
and
in
add
jno
fwait
popf
mov
orl
push
fidivrs
add
mov
stos
out
stc
pusha
dec
cltd
mov
stos
xchg
xchg
sub
or
or
stos
fadds
adc
stos
lret
add
addl
cmp
lock
jb
addr16
push
arpl
imul
mov
sbb
adc
shll
stos
push
xchg
insb
cmp
stos
nop
iret
in
pop
movsl
fiaddl
ljmp
cmpb
pop
das
in
into
shll
lds
xor
pop
push
lret
jle
int
int
stos
pop
pop
push
mov
mov
dec
nop
mov
pop
test
addl
pushf
mov
pop
rolb
mov
subb
stos
pop
fstl
cmpsb
aam
inc
mov
aas
ret
lret
test
cmp
pop
jnp
insb
stos
cmp
xor
subl
cmp
push
out
push
xchg
mov
stos
adc
outsb
xor
scas
jae
fmulp
push
jle
push
push
imul
fs
jmp
mov
stos
pop
jp
jae
adc
clc
popa
insl
xchg
mov
daa
adc
mov
stos
mov
jl
in
int3
pushf
in
add
cld
sbb
aas
out
mov
stos
mov
mov
arpl
lea
icebp
pop
jmp
dec
push
mov
stos
movsl
pop
mov
mov
mov
jp
cmp
inc
mov
push
js
jecxz
xchg
xor
stos
into
inc
shll
in
ds
es
cmpsb
lcall
movsb
inc
test
das
cs
loop
dec
jo
dec
pop
lahf
aaa
mov
movsb
lods
inc
daa
popf
mov
mov
inc
push
stos
es
fs
addr16
mov
in
cmp
xchg
lret
push
pop
push
push
adc
test
xor
aaa
add
outsb
push
sub
add
daa
cmp
mov
stos
xchg
sti
cmp
pop
fwait
scas
enter
push
stos
lret
aas
inc
imulb
test
lcall
fcoms
mov
cmp
test
dec
bound
adc
and
jmp
div
dec
jo
icebp
xchg
sahf
out
imul
outsb
mov
inc
mov
addb
loopne
jns
dec
mov
inc
or
jno
push
jl
scas
xchg
daa
dec
push
adc
pusha
jo
inc
pop
outsb
cmp
movsl
dec
in
aam
sbb
stos
dec
in
movsb
xor
popf
xchg
ret
mov
xchg
les
divl
sub
pop
repnz
cltd
nop
adc
or
daa
pcmpeqw
jmp
or
mov
pop
mov
hlt
repnz
fmull
ja
aaa
mov
stos
ljmp
sub
and
mov
mov
sbb
ret
insl
mov
add
xchg
stos
jle,pn
int3
xchg
subl
sub
stos
push
inc
add
add
fsubs
jge
mov
mov
mov
popa
or
jmp
clc
and
lock
cwtl
shl
jb
dec
shlb
lahf
push
addr16
push
sti
inc
je
push
lods
mov
jo
xor
stos
lds
pop
mov
jmp
sbb
adc
or
popf
pop
mov
dec
stos
hlt
and
shlb
scas
inc
pop
push
add
stc
push
lahf
push
out
mov
popa
stos
fistpl
in
or
aas
fwait
xchg
stos
push
mov
pop
dec
pshufw
insb
stos
sar
orl
notl
fs
imul
les
cmpsl
pop
sahf
movsb
stos
fiaddl
loope
jmp
jecxz
pop
dec
mov
in
sbb
test
jno
stos
and
add
mov
mov
nop
sarb
push
mov
fcom
int3
daa
or
loope
test
mov
inc
out
mov
daa
stos
js
gs
insl
test
stos
dec
aaa
cltd
shlb
stos
push
ss
jne
lock
sbb
movsl
in
mov
pop
push
sbb
mov
mov
pop
inc
xchg
xlat
aam
lahf
jle
pop
pop
sub
cmp
pop
stos
mov
cmp
mov
orb
stc
cmp
ljmp
jp
xchg
sub
fistpll
cmpsb
mov
stos
mov
xor
mov
pop
mov
in
xchg
adc
stos
into
push
orb
ret
inc
stos
inc
xlat
imulb
sub
nop
dec
cmc
push
jle
hlt
add
sbb
das
bound
mov
sub
leave
aam
adc
lret
flds
fwait
cmp
arpl
orb
or
loopne
jae
stos
xor
enter
mov
jmp
or
fimull
and
cmp
stos
pop
les
add
cmpsb
stc
int
scas
call
sub
stos
aam
or
icebp
sbbl
dec
stos
dec
fldt
enter
push
ds
mov
out
repnz
mov
call
sub
or
pop
xchg
mov
mov
jl
xor
mov
cld
or
pop
xor
stos
in
jns
iret
pop
stos
test
clc
movsl
xor
lds
stos
call
js
jecxz
push
jns
adc
or
and
leave
push
pusha
stc
outsl
popa
sub
out
pop
dec
lahf
jmp
jo
aad
je
daa
rolb
stos
ficomps
mov
outsb
adc
inc
mov
jno
push
cltd
and
cli
hlt
in
outsb
sub
imul
mov
mov
jb
sbb
mov
aam
stos
sub
dec
dec
mov
pusha
xor
and
sahf
out
stos
push
cmpsl
mov
xchg
movsb
jp
call
cmp
loop
outsl
stos
sub
std
aaa
xchg
out
inc
mov
dec
subb
mov
mov
xchg
mov
lret
lahf
cmp
stos
test
mov
sbb
sub
orl
ret
pop
gs
mov
lods
push
stos
js
mov
jle
ret
or
and
stos
cmp
push
push
in
and
push
mov
inc
scas
les
fdivrs
iret
rorl
icebp
clc
pop
cli
data16
mov
add
into
stos
movsb
in
out
call
out
outsl
in
mov
pop
mov
adcb
imul
imulb
int
or
cltd
cli
test
jmp
test
inc
call
add
data16
jmp
icebp
cmpb
mov
add
jecxz
addr16
push
cmpb
fwait
sbb
cmpsl
mov
add
dec
out
xchg
cmp
aam
ss
jp
sub
stos
adc
test
cmpsl
shlb
out
cmc
pop
cld
sub
mov
jg
push
add
jae
jecxz
cmp
xchg
xchg
leave
fs
push
bound
xor
cltd
outsb
arpl
loopne
push
ljmp
push
jmp
dec
shlb
es
pop
subb
or
push
xlat
mov
cwtl
ficomps
sarb
stos
inc
mov
jecxz
les
add
stos
sti
outsb
xchg
test
arpl
sbb
lock
cmp
shl
mov
aaa
jmp
iret
mov
jg
xorb
inc
xchg
bound
roll
sbb
cld
pop
push
mov
aad
dec
dec
out
movsb
mov
scas
xorb
fists
mov
sahf
rclb
inc
add
nop
daa
stos
out
mov
mov
add
sbb
sti
stos
cmp
and
sbb
hlt
out
mov
dec
ss
jb
jp
mov
mov
push
cmp
dec
mov
sub
fisubrl
jnp
pop
stos
push
es
inc
inc
imull
and
aad
mov
cmp
push
popf
gs
in
enter
cwtl
daa
sub
stos
mov
testl
enter
in
sub
pop
xlat
out
add
push
dec
xchg
pop
and
imul
inc
jp
loop
and
stos
xchg
movsb
cs
rorb
stos
repz
xchg
gs
pushf
sbb
jmp
stos
push
pop
or
mov
imul
cmpsl
pusha
negl
stos
fildl
adcl
leave
cmpsl
iret
cmp
dec
movsl
stos
xchg
outsb
lret
in
lock
stos
ds
scas
or
dec
dec
jmp
mov
ror
xchg
ja
imul
lcall
adc
popa
mov
imul
fisubs
pop
add
push
aas
mov
insb
pop
inc
pop
std
cmpsb
stos
mov
movsl
adc
add
lods
jno
mov
mov
daa
jl
das
push
dec
cmp
mov
into
stos
outsb
inc
nop
popf
imul
aas
mull
pop
add
sub
add
and
add
gs
imul
shrl
imul
mov
stos
les
sub
stos
push
ror
insl
test
cmpsl
movsb
mov
insb
xchg
sbb
in
jbe
lock
adc
xchg
lds
subb
mov
inc
mov
outsb
xchg
stos
in
out
divl
lods
stos
in
out
pop
je
shll
faddl
stos
out
ja
test
cmpsl
jmp
add
xor
mov
push
mov
mov
arpl
dec
outsb
adc
lahf
stos
cmp
cmp
add
ljmp
mov
stos
in
push
aad
adc
test
cld
xlat
fldcw
cmp
jae
lcall
dec
and
pusha
stos
mov
lgs
int
aas
stos
dec
int3
mov
pusha
stos
add
mov
out
push
in
mov
shl
shlb
stos
out
loopne
xchg
int3
adc
insb
sbb
aad
jne
shlb
mov
stos
mov
sub
lret
and
mov
fadds
sbb
js
dec
push
stos
stos
scas
cmp
push
mov
pop
pop
sti
mov
mov
add
xchg
mov
int3
dec
mov
mov
stos
adc
sub
sbb
subl
mov
inc
ds
stos
mov
cmpsl
and
lods
lods
subl
stos
aaa
and
add
stos
and
clc
ja
adc
stos
enter
mov
sbb
xchg
dec
mov
inc
jb
mov
movb
loopne
adc
mov
pop
pop
lea
or
mov
fldcw
or
outsl
pop
popf
mov
mov
pop
sub
push
stos
xlat
adc
jg,pn
testl
and
pop
push
mov
int
mov
insb
sub
stos
scas
sbb
ljmp
push
scas
and
les
add
test
mov
xchg
inc
scas
pop
lea
dec
stos
mov
push
dec
stos
repz
stos
xchg
rcrb
roll
lods
stos
aaa
gs
lret
mov
es
mov
inc
stos
xchg
and
int3
stos
mov
add
pusha
push
fimull
and
stos
mov
xor
cmp
fsubrs
aad
push
mov
sbb
push
jb
inc
mov
mov
cmp
stos
dec
sub
cmp
mov
setno
xchg
or
push
pop
mov
push
scas
xchg
es
aaa
inc
mov
pop
stos
or
mov
mov
lods
imull
cmc
and
cld
inc
push
push
xchg
ja
in
fsubrl
jp
stos
jle
mov
xchg
aas
jp
mov
je
cli
mov
push
scas
jno
jg
xchg
ja
adc
stos
pop
mov
arpl
sub
inc
fisubl
mov
xchg
in
das
iret
mov
xchg
aad
mov
dec
xchg
sbbl
or
xchg
add
jmp
imul
stos
fidivrs
in
stos
fistps
loop
mov
pushf
mov
stos
sub
stos
jmp
out
xor
into
add
push
out
popf
and
jno
idivl
sub
les
into
mov
ds
xor
push
int
mov
pop
pop
mov
push
or
imul
movsb
xchg
adcb
or
test
stc
inc
into
ss
pop
roll
loopne
xchg
mov
push
jp
out
add
loopne
mov
fcmove
int
stos
sbb
je
jnp
popa
xchg
mov
stos
jecxz
fmul
mov
arpl
inc
stos
fmuls
jl
xchg
dec
sti
sub
enter
push
mull
push
bound
sahf
xchg
shlb
push
int
pushf
stos
sbb
out
add
and
popf
xchg
mov
stos
dec
pop
and
or
cmp
test
mov
adc
divb
rcll
jns
fdivrl
push
add
dec
fwait
shrl
cwtl
adc
aaa
cmpsl
or
pop
cs
ljmp
psubw
add
xchg
xchg
push
sub
jmp
iret
dec
outsl
les
add
ficoms
adc
fisttpl
stos
sbb
jg
test
out
mov
data16
adc
sti
jl
sbb
in
int3
mov
je
ds
adc
jecxz
push
pop
lret
pop
cmp
pop
push
or
popa
bound
stos
aas
mov
dec
jle
adc
ret
out
enter
sub
out
mov
fcomps
jmp
mov
call
push
aas
jae
mov
lahf
daa
bound
loop
mov
jecxz
call
stos
enter
jne
lea
stos
jle
adc
inc
cmpsl
imul
lret
stos
push
push
mov
js
out
daa
jmp
adc
loop
stos
mov
outsb
xchg
push
clc
mov
hlt
jmp
ja
sub
inc
ret
mov
jns
stos
sub
stc
xlat
aad
mov
mov
push
lcall
stos
and
jne
sbb
push
pop
ljmp
pop
fdivrl
lea
icebp
mov
pop
lods
stos
in
mov
lock
sub
out
mov
cld
inc
mov
loop
stos
repz
sti
mov
js
cwtl
xor
sub
and
addr16
mov
sarb
iret
outsb
mov
inc
add
sbb
xchg
and
gs
fcoms
sub
popa
or
int
stos
sbbl
inc
sbb
stos
je
aam
push
daa
push
stos
xchg
inc
enter
iret
push
stos
lds
jecxz
xor
js
icebp
jge
cmp
stos
sub
dec
or
andl
stos
mov
les
pop
xchg
stos
cltd
mov
add
stos
ds
mov
inc
stos
pop
sbb
mov
and
mov
ficoml
push
stos
and
sub
stos
cwtl
sarb
mov
mov
mov
sub
stos
mov
sbb
ljmp
mov
stos
jb
pop
sarb
cmp
and
mov
inc
add
rol
inc
mov
mov
repnz
and
ljmp
testl
daa
aas
sbb
sbb
subl
and
in
stos
test
mov
push
outsb
lret
jmp
out
push
xchg
mov
stos
and
scas
sbb
lret
xor
stos
imulb
cmc
dec
int3
bts
jl
push
sbb
lcall
adc
aaa
and
imul
dec
add
push
movsl
test
inc
jecxz
enter
mov
test
stos
cmp
mov
jmp
imul
fwait
popf
and
into
sbb
push
add
mov
add
jmp
lods
cmc
pop
lahf
fsub
mov
stos
pop
test
popf
cli
test
clc
stos
mov
dec
pop
mov
xchg
movsb
jne
out
inc
imul
or
sbb
adc
mov
stos
lahf
roll
imul
mov
stos
sti
fdivp
push
repz
inc
jle
fistpll
inc
ret
push
dec
mov
call
mov
lods
jle
jmp
data16
xor
jecxz
mov
jo
push
inc
in
pop
das
dec
shrb
call
mov
dec
and
das
pop
hlt
loope
push
stos
mov
dec
xchg
inc
sub
jmp
mov
iret
adc
jmp
lods
cmpb
fadds
stos
pop
xor
push
stos
mov
sbb
lods
in
xchg
ss
enter
add
scas
scas
xchg
mov
jg
xchg
mov
rcll
movsb
add
in
or
jecxz
and
stos
lahf
cld
and
jno
and
pop
and
mov
mov
mov
stos
fdivr
stc
addl
jmp
mov
add
rorl
dec
fildl
lds
mov
je
stos
inc
sti
rcrl
imul
push
cmpb
jne
pop
js
xchg
out
arpl
ljmp
mov
int
push
inc
decl
adc
out
and
pop
rclb
stos
mov
cwtl
mov
jl
mov
stos
pop
pusha
test
fstpl
inc
and
fcmovb
imul
mov
movb
fisttps
mov
jns
arpl
pop
pop
xchg
cmc
jo
bnd
or
ja
and
cs
popf
test
data16
enter
in
test
bound
jg
xorps
imul
fidivrl
mov
cmp
add
add
dec
pop
daa
cmp
fwait
in
ds
es
dec
add
and
xchg
xchg
in
pop
daa
stos
mov
movsl
fnsave
aam
stos
cs
incl
push
inc
sbb
pop
pusha
cltd
mov
js
jnp
mov
aad
in
fldt
int3
imul
mov
cmpsb
les
pop
pop
sub
mov
inc
in
push
fcmovnbe
fsubrs
xchg
mov
push
js
push
ror
cmc
stos
jb
lret
cmp
sbb
std
xor
into
jg
pushf
arpl
push
shrl
pusha
cmpsl
lahf
xlat
aaa
lea
mov
out
js
mov
jno
jg
lods
pop
dec
add
cmpsl
add
sahf
mov
sti
sub
pop
test
ljmp
punpcklwd
or
imul
mov
xchg
xchg
bound
or
mov
iret
or
pop
cmp
xchg
lea
sub
sarb
cs
and
arpl
enter
test
adc
popf
push
mov
popf
hlt
dec
or
stos
xor
rcrl
xchg
inc
add
and
stos
aam
sub
loop
push
subb
mov
stc
push
cmpl
aaa
stos
jmp
in
out
and
cld
jnp
mov
xlat
adc
adc
iret
jle
loope
add
outsb
xor
stos
mov
stos
std
and
jno
adc
pop
xchg
stos
movsb
xchg
lcall
fiadds
jno,pn
push
sub
sbb
jmp
xor
fldt
xchg
mov
pop
push
or
mov
inc
mov
fwait
sbb
mov
les
stos
into
xor
stc
mov
pushf
cmp
imul
push
mov
jecxz
stos
out
sbb
xchg
icebp
jle
stos
test
xchg
ljmp
stos
pushf
rcr
push
xchg
sub
insb
scas
sahf
out
jecxz
mov
push
adc
daa
shl
xor
lods
addl
clc
stos
mov
lret
cwtl
push
aaa
push
stos
ds
je
mov
stos
cmpsl
push
jnp
mov
lret
aam
popa
sbb
les
bound
stos
jb
in
ss
stos
push
insb
cmp
fsubrp
fldt
mov
and
imul
mov
andb
ret
jp
mov
aad
stos
or
pop
subl
push
stos
in
jo
in
gs
cltd
leave
stos
pop
add
neg
pop
xchg
aam
ret
test
inc
push
sbb
pop
test
lret
mov
mov
or
jecxz
stos
and
shlb
stc
lahf
test
pop
push
jp
fisubrl
rorb
dec
stos
sub
call
jmp
repz
loopne
outsl
xchg
push
sti
mov
inc
xor
cld
mov
addr16
dec
cltd
repnz
xchg
jns
daa
cs
mov
lcall
xchg
mov
jae
movsb
sbb
sub
jns
xchg
add
ljmp
dec
popf
imull
pop
ja
imul
out
xchg
stos
push
ljmp
stos
pop
mov
cmp
sub
insl
and
aas
stos
repz
imul
pop
and
fwait
je
mov
jb
stos
push
xorl
mov
addl
test
out
jecxz
nop
inc
push
stos
and
jp
sub
and
push
scas
stos
jnp
fs
jmp
das
stos
sub
lret
cmp
and
test
in
xchg
bound
aam
adc
push
jbe
idivb
add
jp
mov
mov
xor
sub
sub
lret
ficompl
hlt
lods
adc
sbb
popf
mov
adc
xlat
mov
subb
bound
ret
test
vpor
xor
cmpsb
popf
mov
jmp
or
outsb
into
adc
xchg
lock
pushf
out
push
sub
sub
outsl
mov
inc
stos
pop
test
mov
add
mov
pop
xchg
bswap
mov
jmp
test
andb
sub
push
stc
flds
and
sub
stos
push
xor
adc
scas
mov
cmp
push
into
int
dec
or
xor
push
in
pop
mov
clc
lret
jl
pop
mov
pop
out
into
aam
mov
enter
ret
mul
push
stos
inc
sbb
pop
cli
dec
xor
enter
in
imul
cwtl
es
stos
rorb
ret
sbb
sbb
cmp
shll
ds
mov
xchg
and
inc
jae
test
addr16
in
pop
stos
icebp
cld
loopne
and
ror
jp
or
add
stos
ja
push
lods
je
pop
mov
pop
lret
sub
cmc
test
fsubrs
stos
in
push
aad
outsl
jp
scas
mov
mov
icebp
adc
jle
rclb
das
stos
cmp
stos
mov
sbbb
lret
inc
sub
stos
daa
leave
mov
dec
cld
hlt
lds
and
int3
gs
sar
pop
rorb
scas
jns
or
lea
sti
cmp
sbbb
ficoml
mov
sbb
and
xor
lcall
shll
test
imul
shlb
in
insb
push
sbb
sub
push
mov
add
stos
dec
addr16
push
bound
add
push
push
lret
dec
clc
and
xchg
fucomp
push
mov
cltd
and
xlat
stos
sub
push
or
adcb
mov
cltd
in
int
jbe
cld
ds
jae
in
lea
mull
lret
in
cmpl
xor
testb
push
dec
lret
cmpl
add
adc
stos
pusha
gs
pop
lcall
aaa
in
shrl
icebp
jecxz
shlb
sbb
mov
and
or
dec
push
mov
xchg
stc
dec
filds
sub
stos
adc
dec
stos
inc
add
bound
lods
clc
cld
xor
cmp
pop
mov
sub
jge
repz
popf
push
lcall
and
add
nop
imul
pop
jnp
sarl
sub
stos
adc
sti
outsb
adc
add
in
fbld
ljmp
xlat
scas
push
insl
nop
lods
stos
dec
mov
mov
int3
xchg
or
mov
test
mov
cmc
flds
js
cmpsl
push
std
fnsetpm(287
pusha
or
mov
fwait
push
jmp
movsb
adc
movsb
movsl
popf
sbb
mov
cmp
cmp
arpl
xor
or
mov
sbbb
fstl
aad
add
add
or
jle
cmp
push
mov
decb
xchg
ss
das
and
aad
daa
ds
in
popa
push
jbe
stos
adcb
jo
pop
mov
fdivr
das
push
stos
and
push
rorl
pop
test
data16
stos
sub
add
addr16
pusha
xor
test
dec
mov
orl
sub
imul
insb
gs
dec
int
mov
incl
mov
cwtl
repnz
das
inc
imul
test
push
push
stos
insb
leave
movsb
xchg
lods
adc
stos
xor
mov
in
sub
cmpsb
sbb
int
daa
mov
in
mov
repz
ss
or
fmul
mov
call
test
stos
xchg
sub
call
add
aaa
stos
inc
addb
or
mov
pop
and
addr16
dec
sbb
stos
xchg
outsl
cwtl
jge
mov
clc
mov
inc
pop
imul
xor
imul
sbb
sub
push
addr16
xlat
dec
cltd
fwait
les
mov
aad
rclb
je
movsl
stos
inc
dec
jmp
add
mov
cld
sbb
stos
popf
les
xchg
mov
fld
scas
cmpsl
dec
sub
jmp
adc
test
xchg
ja
jmp
push
xlat
stc
jno
fstl
test
mov
cmc
loope
lret
sbb
int3
sub
mov
dec
adc
rcl
mov
push
jmp
stos
and
out
insl
nopl
mov
mov
pop
fwait
pop
in
stos
stos
jbe
imul
stos
lahf
sbb
push
stc
stos
subl
inc
xor
add
subl
out
sub
adc
mov
dec
cmp
loop
int3
mov
mulb
cmp
hlt
cmp
xchg
sbb
fdivrl
adc
loop
push
fiaddl
out
ficoms
test
out
aad
loopne
mov
jecxz
inc
lock
and
stos
dec
sbbb
stos
dec
pop
or
stos
call
jnp
cmp
jp
out
jo
and
lcall
xchg
movsl
and
fwait
xchg
inc
push
stos
pop
lea
pop
test
outsb
stos
xor
cmpsl
fcmovnu
mov
mov
mov
jae
mov
jmp
ret
sbb
mov
popf
das
mov
pop
sub
imul
mov
stos
cmp
or
daa
jb
push
lods
mov
fildll
dec
loop
subl
push
jp
xchg
jb
xor
cmp
enter
xchg
ficomps
push
mov
push
or
lcall
lret
xor
inc
ljmp
test
mov
xor
fadds
sahf
stos
dec
es
cmp
sbb
mov
pop
xchg
add
xor
mov
stos
jb
popa
sub
dec
adc
jmp
stos
or
stos
insl
adcb
stos
xchg
dec
mov
push
mov
cld
sbb
adc
sub
mov
out
sbb
cmp
jmp
lock
and
stos
xor
or
jne
cli
lods
stos
adc
dec
lds
dec
pop
xchg
and
push
movsb
movsl
inc
fsubrl
mov
or
sub
stos
pop
fisubs
mov
inc
in
repnz
loopne
jp
pop
addr16
jg
cmpsl
imul
fwait
stos
mov
ficoml
lret
jecxz
aaa
xor
xchg
jle
sbb
je
stc
xchg
ss
enter
in
pop
rorb
jle
sub
dec
dec
hlt
stc
lret
push
popf
aam
cmp
mov
int
jmp
mov
popf
sbb
jl
jo
mov
stos
and
or
pop
in
test
push
addl
stos
ja
push
imul
popf
data16
pop
orb
jp
faddl
mov
jecxz
cmpsl
dec
arpl
stc
and
sub
stos
or
cmpsl
daa
imul
stos
ljmp
stos
mov
lods
xchg
cmpsb
addr16
mov
cs
mov
jle
mov
xchg
mov
fcompl
das
inc
mov
outsb
xchg
or
stos
pop
push
mov
insb
xor
sub
cmpl
fidivrs
test
arpl
pop
add
and
xchg
mulb
sub
imul
stos
adc
mov
stos
test
insl
sbb
xor
das
stos
push
mulb
cltd
xor
btr
inc
rcr
mov
mov
test
jle
aas
or
inc
insb
arpl
mov
push
aam
xchg
jb
pop
push
fstps
adc
insb
stos
xor
repnz
stos
out
cmp
mov
mov
stos
leave
les
mov
mov
mov
stos
test
pop
sub
xchg
mov
push
sbb
add
ja
in
scas
jecxz
push
stos
insb
es
adc
ret
int3
repnz
insb
mov
stos
es
les
lret
out
dec
xchg
cs
mov
outsb
mov
and
cmp
push
jae
xchg
add
stc
fisubrs
dec
pushf
push
jmp
sub
pop
add
lods
stos
test
outsb
push
ljmp
pop
fdivrs
xchg
xchg
insl
mov
ret
dec
icebp
movsb
in
cmp
push
stos
jecxz
loope
mov
test
fwait
mov
cmc
fisubrs
lahf
dec
dec
mov
adc
mov
fstpt
push
pop
stos
test
pop
subl
or
cltd
cld
push
mov
push
cmp
mov
in
mov
pop
stos
jne
test
cwtl
stos
mov
addr16
daa
jmp
push
adc
aas
lcall
insb
popf
cmp
sub
push
jae
test
cmp
mov
cwtl
sub
insl
xor
xchg
roll
mov
xchg
xchg
push
scas
sti
mov
mov
dec
stos
imul
aad
sbb
sti
jnp
cs
ret
out
inc
pop
jno
stos
bound
repz
jmp
in
push
mov
add
cltd
mov
imul
dec
fisubl
fstpt
scas
test
stos
and
cmp
mov
and
add
stc
or
out
adc
dec
scas
daa
push
jmp
arpl
add
fimull
sti
stos
or
outsl
cld
mov
push
aaa
daa
add
mov
mov
lods
and
inc
subb
movsb
mov
ret
jmp
into
mov
out
xor
repz
push
mov
push
pop
jle
in
sbb
xchg
pop
aad
mov
inc
stos
jl
dec
xchg
mov
cmp
sbb
std
lods
flds
xor
push
dec
mov
mov
iret
stos
lret
fdivs
jno
aad
loope
aas
mov
subl
mov
insl
ja
push
push
or
inc
sbb
stos
dec
push
jno
xor
shrl
jo
lret
push
mov
mov
add
imulb
xchg
xor
xchg
pop
notl
stos
imul
cmpl
fisubrl
std
lcall
in
mov
stos
push
sub
enter
outsb
sbb
sub
stc
stos
test
roll
adc
lret
add
push
out
std
pop
mov
or
jb
add
nop
lcall
jle
stos
xchg
adc
out
std
stos
push
cltd
jge
dec
mov
pop
stos
idivl
shlb
or
insl
push
sbb
cltd
test
stos
or
fbld
addr16
pop
sbb
pop
in
stos
mov
xor
dec
stos
ds
mov
push
or
lahf
in
cld
mov
fwait
outsl
hlt
jmp
or
jo
jle
sub
mov
rcl
and
jge
sub
andl
ret
push
stos
adc
aad
scas
pop
stos
test
and
arpl
mov
jo
daa
jb
or
push
push
aam
jbe
icebp
ret
cmp
stos
popf
and
pop
cmp
xlat
mov
sub
mov
aaa
fistpl
rorb
cmp
sahf
mov
cmpb
sub
fmull
cmpsb
jmp
sti
jnp
jp
popa
cltd
xor
pop
xchg
fidivl
xor
jbe
arpl
inc
ja
jge
jo
xchg
jmp
imul
rorb
ljmp
std
fsubrl
stos
mov
daa
pusha
push
stos
ret
stc
jns
mov
fadd
stos
push
jno
pop
xchg
adc
stos
mov
arpl
jle
xchg
pop
mov
jmp
aaa
sub
mov
push
mov
xchg
pop
divl
sub
imul
decl
push
mov
aaa
sub
ljmp
pusha
adc
mov
outsl
and
mov
addr16
mov
adc
test
rcll
movsb
mov
stos
les
adc
sub
mov
add
lret
stos
loop
out
iret
jno
sub
cmc
pop
mov
inc
push
adc
add
int
sbb
mov
test
xor
sub
cmp
stos
aas
jecxz
adc
int3
cmpsb
stos
jp
out
orl
test
imul
mov
filds
stos
mov
pop
test
stos
xchg
rol
pop
pop
iret
pop
imul
mov
push
mov
sbbl
imul
mov
and
stos
pop
xor
addr16
dec
sub
sahf
jmp
in
add
lahf
repz
cmc
dec
stos
fdivrl
je
inc
dec
stos
xor
jle
out
cmp
stos
orb
jecxz
mov
xchg
repz
fildl
sub
cmpsl
mov
jmp
lock
lahf
add
dec
xchg
pop
mov
mov
aad
mov
sub
push
push
out
stos
pop
lcall
movsl
xchg
add
adcb
cltd
inc
inc
inc
stos
jae
cmc
popa
sbb
lock
std
lahf
jmp
push
and
cmp
dec
or
pop
pop
jg
imul
push
stos
enter
sar
sub
push
jnp
and
lods
sbb
ljmp
popf
stos
xchg
das
pop
test
std
pop
mull
cmpsb
push
cwtl
mov
ds
pop
loop
xor
mov
fisttpl
ret
stos
popa
fdivrs
inc
mov
dec
sbb
cld
dec
mov
daa
mov
pusha
mov
xlat
mov
cmpsl
xor
push
aas
pushf
sub
stos
cs
cmp
subb
imul
mov
mull
mov
inc
stos
pop
jne
stos
mov
in
xlat
xor
dec
mov
inc
ljmp
push
xor
sub
adc
and
cmp
sub
in
pop
fs
lahf
or
push
xchg
and
inc
fcompl
iret
push
les
loope
xchg
mov
lahf
mov
and
inc
stos
inc
shlb
ss
dec
fs
nop
gs
jbe
stos
dec
aad
testl
stos
xor
les
mov
shlb
fwait
rolb
jmp
sbb
jecxz
push
jb
sbb
and
jp,pt
leave
mov
xchg
test
sbb
inc
adc
fstps
imul
lods
leave
cmpsl
sub
movsb
adc
rcrb
mov
fwait
dec
cmpsl
xchg
sbbl
xor
imul
adc
pushf
ret
mov
or
and
cmp
lahf
movsb
test
push
sbb
test
dec
icebp
daa
loop
xor
xchg
jnp
xchg
orb
andl
pop
icebp
or
sub
ljmp
popa
inc
jae
stos
cmp
xor
in
adc
and
repnz
pop
pop
into
rolb
cld
and
pop
inc
movsb
fldt
cltd
xchg
mov
sub
dec
mov
xor
xchg
popa
fwait
pop
popf
or
lds
push
sub
mov
and
and
fdivrp
sbb
pop
gs
push
sti
adc
dec
jbe
dec
fldcw
nop
push
dec
stos
pop
pop
shr
test
cmp
add
stos
sarb
pop
cmp
mov
jmp
jg
dec
or
mov
loopne
or
testl
pop
stos
push
pushf
adcb
insl
fsubrs
out
in
icebp
stos
aas
daa
clc
mov
stos
cld
inc
test
fwait
lret
inc
fsubrl
clc
jecxz
frstor
cli
push
stos
out
lock
mov
mov
stos
mov
les
lahf
out
push
lods
lret
and
push
adc
mov
stos
or
adc
je
pop
stos
fldt
int3
dec
dec
lods
das
stos
sbb
popf
jle
rcrl
push
jcxz
jnp
cmpl
inc
and
cmp
lcall
js,pt
loop
out
and
rcrl
mov
fsubrp
jbe
jp
lods
inc
xchg
pop
out
sbb
pop
andb
pop
jbe
and
stos
in
jmp
push
clc
xlat
rcl
dec
xchg
out
stos
and
cmpsb
inc
push
in
sub
scas
pop
cmc
aad
xor
lcall
stos
and
pop
jp
movsl
fidivl
popf
nop
xchg
xlat
xchg
and
retw
lods
xor
or
lods
xor
or
or
call
cli
fwait
inc
jne
inc
or
push
test
outsb
mov
jns
shlb
jb
add
push
fwait
lcall
push
cs
ja
bound
add
pop
mov
mov
test
test
pop
ds
movsb
inc
pop
mov
xchg
lods
jae
adc
adc
cmpb
repnz
stos
int
pop
mov
inc
mov
aad
roll
stos
jmp
fildll
in
push
mov
stos
lods
ja
and
fcoml
lods
ret
stos
outsb
scas
out
pop
aas
push
xchg
jno
adc
push
fists
lahf
sub
sbb
ret
mov
push
jg
out
inc
or
daa
dec
inc
scas
mov
cmp
iret
xchg
jbe
cmp
mov
add
sub
iret
and
les
mov
xchg
cmp
inc
pop
stos
rcrl
mov
stos
pop
mov
dec
ljmp
lock
dec
js
aam
ret
and
push
lds
fmulp
loope
xchg
stos
push
pusha
cmp
pop
push
lea
dec
out
bound
cmp
pop
es
or
and
mov
adc
popf
arpl
dec
and
pushf
lods
ret
mov
pushf
clc
ss
fildl
ljmp
imul
ja
into
mov
lea
mov
dec
mov
loope
lock
cmpsl
stos
or
adc
push
aaa
aad
mov
mov
inc
pop
dec
pop
imul
ficoml
clc
mov
testb
and
inc
data16
test
cmp
sarl
dec
stos
and
mov
fstpt
xchg
sbb
imul
stos
xchg
out
adc
stos
pop
mov
daa
push
and
push
fs
arpl
push
sbb
cld
cmp
dec
add
repz
imul
mov
nop
stos
dec
push
inc
or
push
fisubrs
lcall
popl
pop
xchg
xchg
cmc
hlt
stos
pop
mov
insl
pushf
pop
jae
data16
outsb
fisubrs
jl
stos
mov
cmp
int3
jp
out
jae
fnstsw
es
cmpsl
xchg
mov
pop
sbb
std
xchg
ljmp
sbb
lcall
icebp
rolb
sbb
cwtl
pop
fisttpll
mov
mov
or
pusha
cmp
stos
add
mov
icebp
and
stos
das
out
fsubrl
imul
xor
mov
cmpsb
lahf
sub
cmp
lret
fwait
push
shll
jmp
and
push
leave
in
xchg
xchg
push
stos
in
pop
dec
dec
push
test
jmp
cmp
insl
dec
add
adc
pop
xor
lods
int
stos
inc
les
mov
pusha
scas
ret
sbb
iret
xchg
cmp
inc
jl
sahf
jge
icebp
in
stos
fcomip
or
cmp
data16
insb
mov
inc
stos
add
sub
mov
sarb
stos
mov
push
int
popf
out
hlt
push
dec
dec
mov
incb
std
nop
aad
lods
arpl
in
ret
cmp
jmp
lcall
inc
push
scas
aam
ss
xchg
imul
movsb
fisubrl
fwait
jbe
push
mov
stc
sub
gs
xchg
stos
add
js
div
jp
imul
pop
adcl
lea
xchg
dec
in
jmp
jno
cmp
jle
cwtl
xchg
imul
add
pop
cli
adc
jns
pop
mov
and
add
fwait
rorb
addr16
negl
and
call
jp
shlb
pop
iret
mov
and
in
testb
shrl
mov
repz
push
rorb
test
imull
andnps
lods
stos
loopne
xor
cmpsb
cld
stos
jno
sbb
mov
jb
fimull
lods
mov
stos
pop
add
test
jg
lods
cmp
sub
sbb
xchg
in
push
stos
cltd
negl
stos
sub
cwtl
pop
push
inc
mov
in
fwait
lods
cmp
cmp
mov
xchg
dec
or
cmp
aam
stos
repz
icebp
inc
stos
jae
adc
sbb
rcrb
test
in
add
dec
dec
dec
adc
dec
cmpsl
leave
sbb
sbb
mov
fcmovnu
push
dec
in
xorl
dec
pop
mov
mov
dec
xchg
jae
dec
xchg
jnp
out
jle
mov
pmaxsw
repnz
sub
leave
ljmp
xlat
in
mov
stos
andl
dec
in
imul
cld
push
cmp
test
and
fdivs
and
xchg
stos
mov
in
inc
stos
sahf
sbb
clc
cmp
jge
stos
out
or
hlt
stos
fdivs
adc
stos
aad
sub
xchg
mov
and
scas
or
mov
push
jbe
sbb
and
and
cmpsl
push
leave
cld
lahf
lea
int
lret
scas
mov
push
cli
xchg
mov
in
xor
or
in
cli
mov
fs
add
out
xchg
in
sbb
testb
cltd
inc
divl
mov
push
daa
sub
outsl
test
or
mov
sahf
gs
adc
mov
push
in
sub
sub
lea
mov
ror
stos
and
pop
xor
xchg
mov
sbb
pop
jecxz
adc
je
adc
loope
negl
lahf
jp
push
push
mov
int
sub
mov
in
add
ljmp
mov
je
stos
pop
rorl
dec
or
stos
scas
pushf
jns
pop
dec
lahf
loop
push
mov
addb
imul
and
bts
add
movsl
lock
stos
xlat
mov
dec
stos
mov
stos
faddl
push
add
jle
add
pop
sbb
add
cmpsl
cwtl
lock
in
and
sbb
inc
dec
push
scas
stos
xchg
xor
stos
jp
and
pop
imul
leave
mov
insb
fsubr
jb
gs
inc
mov
jmp
lret
test
test
mov
push
mov
mov
stos
cmp
test
push
cltd
adc
stos
shrl
jl
dec
aaa
stc
and
sbb
stos
inc
lcall
rolb
adc
xor
lahf
jns
xchg
jle
pop
pop
push
push
lds
xor
mov
xchg
xchg
iret
stos
inc
insb
stc
push
pop
sbb
add
aad
xchg
or
or
stos
outsl
push
cmp
mov
stos
push
sbb
and
cmp
mov
lret
pop
and
xor
js
push
mov
mov
into
xchg
hlt
ret
lock
and
dec
xchg
scas
iret
stos
dec
icebp
adc
jne
jp
cmp
xchg
push
stos
pop
shrl
popa
daa
movsl
movb
pop
out
imul
inc
lahf
cmpsl
sub
imul
xor
push
push
test
cmp
stos
push
fmull
push
pop
jge
stos
push
scas
inc
imul
bound
jb
cli
jmp
jle
stos
insb
inc
cmp
mov
es
adc
stos
jne
les
fstps
shlb
push
jns
mov
dec
js
push
cmpsl
mov
xchg
sub
jg
jp
outsb
xchg
add
mov
inc
xchg
insb
cmpsl
sub
stos
mov
inc
xor
sub
stos
ret
push
mov
std
lock
rcrb
inc
scas
stos
xor
out
movsl
out
out
xchg
mov
test
cs
mov
scas
cmpsb
stos
mov
adc
cmp
fs
pop
cld
std
es
lock
movsl
mov
fisubrs
orl
adc
clc
sbb
add
popf
or
mov
cld
add
repz
pusha
cld
cmpsl
lods
mov
and
xor
int3
imul
nop
ror
stos
nop
mov
jmp
mov
arpl
popa
jg
mov
rcrb
clc
aam
scas
jmp
stos
cmpsl
inc
or
mov
adc
push
mov
stos
dec
add
pop
stos
ds
es
sbb
jmp
dec
or
lret
stos
aad
bound
mov
push
jmp
fwait
in
add
dec
mov
mov
orb
or
push
mov
xchg
aaa
stos
cmp
and
push
push
or
loop
mov
fldcw
mov
sub
es
test
mov
push
sbb
inc
pop
out
xor
lds
jl
cld
lods
clc
ficoms
stos
add
cmp
jne
push
stos
cmp
xor
mov
mov
xor
fsubrl
push
xchg
sahf
rorb
sub
stos
push
shll
outsl
int
jnp
cs
rcrl
xchg
stos
nop
test
stos
push
sahf
jg
mov
mull
jb
mov
or
jnp
js
mov
aas
arpl
int
mov
jle
stos
or
nop
das
and
mov
and
push
fmul
nop
and
inc
add
fisttpl
push
push
hlt
cmpl
pop
mov
stos
jmp
push
cwtl
stos
pop
fsubrs
jmp
stos
jecxz
shr
mov
das
clc
mov
push
adcb
pushf
sub
mov
in
jb
mov
dec
ja
pusha
incb
stos
imul
imul
and
mov
mov
push
jno
sub
and
stos
or
xchg
xchg
add
pop
daa
sub
int
mov
js
dec
stos
loop
cmpsb
test
sti
pop
stos
ret
jbe
int
fisttpll
imul
stos
insl
xchg
inc
push
stos
mov
adcb
and
stos
mov
cld
push
ret
mov
xchg
out
flds
test
push
ret
jmp
faddl
imul
call
add
dec
test
push
xchg
mov
jg
cmp
out
fprem
inc
inc
sahf
push
pop
mov
data16
in
mov
cmc
push
pmuludq
out
mov
and
adcb
stos
xor
xlat
lods
stos
or
mov
pusha
dec
std
enter
pushf
mov
div
push
or
aad
out
mov
and
lock
jns
dec
aas
stos
xlat
loope
fldt
mov
stos
lret
adc
mov
movsb
push
ja
mov
repnz
jmp
adc
movsb
mov
mov
adc
pop
or
stos
push
idivb
outsb
stos
test
mov
enter
insb
clc
insl
dec
mov
daa
xor
sahf
stos
mov
in
xchg
movsl
jmp
aaa
push
dec
push
xchg
pop
mull
or
or
dec
stos
pusha
inc
mov
sub
outsl
dec
stos
inc
imul
xchg
cmpsl
xchg
in
add
fcoml
stos
test
jle
test
sti
sbb
aaa
inc
movsl
mov
mov
pop
fisttpl
repz
int3
out
stos
fiaddl
leave
xchg
jns
sbb
lods
push
in
pop
xchg
inc
fstpt
jl
stos
jge
add
dec
or
push
aam
and
popf
fisubrl
in
jmp
mov
aam
inc
imul
fisubrl
xor
inc
fldcw
adc
and
lods
pop
sub
cmpb
dec
mov
inc
xchg
sub
aam
fsub
xor
shrl
and
insb
xchg
pushf
aam
pop
xlat
decl
pop
xchg
mov
dec
outsb
nop
loopne
pop
xchg
std
mov
mov
adc
inc
sti
xor
mov
sbb
das
inc
adc
lahf
sub
xchg
jae
repnz
fldl
in
movsl
mov
sub
inc
std
stos
je
ljmp
mov
in
les
push
jmp
jl
pop
arpl
push
shrl
jae
inc
jl
lcall
ret
fisubrs
fmull
inc
stc
pop
orb
lea
adc
cld
test
loope
shr
jl
adc
sbb
sahf
mov
and
xchg
popa
cmpb
adc
stos
es
bound
mov
pop
movsl
pushf
daa
ret
sub
jecxz
mov
xchg
push
sarl
adc
call
nop
cwtl
jl
movsl
jecxz
pop
sbb
fwait
stos
ja
fidivs
dec
jle
movsl
mov
popa
mov
mov
rol
jmp
jle
cmp
mov
pop
push
fwait
and
jmp
lea
fwait
lods
fwait
stos
sub
imul
cmpsb
jae
popf
mov
nop
cmp
add
outsl
mov
adc
mov
test
stos
or
sub
stos
xchg
test
mov
fists
hlt
xlat
mov
imul
mov
repz
xchg
stos
inc
add
stos
jl
or
inc
xor
or
jmp
fsubrp
inc
sbb
lods
fmuls
mov
adc
ret
sub
stos
in
sbb
inc
clc
mov
inc
stos
or
jp
stos
popa
aas
mov
sbb
add
push
stos
pop
ljmp
mov
das
pushf
mov
stos
lret
sub
adc
out
mov
sahf
loopne
mov
shl
mov
pop
push
lds
in
xchg
jmp
or
xor
outsb
stos
outsl
jnp
mov
inc
cmc
or
fildl
imul
xchg
dec
jecxz
or
mov
and
push
sbb
push
fdivs
scas
sbb
or
add
test
jne
mov
xchg
stos
push
test
loope
cmp
dec
imul
lods
push
pop
fsts
xchg
xor
stos
sahf
inc
out
dec
shlb
pop
cs
pop
mov
in
adc
add
popf
inc
jp
push
daa
cmpsl
cltd
sbb
mov
and
xchg
or
cmp
movsb
gs
icebp
stos
push
mov
cmp
xchg
inc
pop
fcompl
fsubrs
je
cmp
xor
pop
push
xchg
stos
mov
mov
dec
jl
frstor
and
fmuls
fidivs
mov
sbb
push
push
fists
aad
std
outsb
xchg
shrb
or
icebp
adc
ljmp
ret
outsb
push
add
fdivrs
jne
and
test
movsb
call
push
mov
add
cld
xor
xorl
xor
pop
xchg
loop
cmp
test
sbb
out
jae
sbb
fistl
dec
jmp
sahf
or
sbb
inc
stos
out
mov
in
mov
je
ret
stc
sbb
sbbl
jl
jns
sub
pop
add
mov
cltd
scas
fmull
push
jns
repnz
mov
or
fwait
cmp
xchg
mov
xor
mov
js
stos
push
aas
imul
lahf
enter
stos
leave
loopne
xchg
out
adc
adcl
and
and
push
leave
iret
pop
xorb
cmp
xor
sbb
mov
lods
test
nop
add
mov
sbb
cwtl
jp
jle
dec
cmp
stos
hlt
pusha
xor
into
mov
sar
cmp
cmp
je
daa
lea
mov
stos
jmp
cltd
push
nop
jl
fisttpll
jno
sbb
push
addr16
hlt
mov
data16
mov
xchg
orl
loopne
mov
fwait
mov
int
and
mov
test
xchg
xor
jp
or
js
xorl
stos
lea
repnz
xor
stos
push
mov
or
aaa
jg
adc
add
movsb
stos
adc
lock
mov
stos
mov
pop
jge
mov
sbb
stos
add
imul
in
shrl
popl
cmpsb
int3
adc
iret
adc
jmp
sbbb
pushf
negb
jbe
xchg
inc
into
push
loope
and
mov
stos
or
or
xor
andps
int
out
mov
xchg
cmp
popf
stos
sub
fcmovb
stos
pop
addr16
mov
and
icebp
xchg
fsubrs
jno
jge
addr16
loopne
mov
cmp
jb
mov
popa
push
mov
stos
xchg
lock
pop
pop
sub
fsub
cmp
push
fcmovu
ljmp
nop
int
movsb
insl
pop
cli
arpl
fwait
mov
lahf
jg
jmp
mov
shlb
int
sub
or
inc
push
leave
jnp
stos
inc
cmpsl
pop
jle
loop
out
jmp
fbld
sub
xchg
xchg
mov
test
push
repz
jmp
push
xor
sbbl
pop
fsubrl
jo
imull
call
pop
add
or
mov
mov
push
subl
jmp
mov
mov
mov
sub
inc
out
inc
addr16
xchg
les
stos
push
xchg
cmpsb
mov
dec
imul
pusha
orb
nop
ds
pop
and
je
loopne
imul
stos
mov
inc
sub
mov
in
xlat
jle
mov
aas
cmpsb
inc
adc
stos
push
push
push
xchg
inc
aad
stos
imul
xor
sbb
enter
xchg
jle
sub
testl
fwait
xorb
xor
cmpsl
cmp
imul
mov
stos
movsb
aaa
popa
mov
cmp
call
or
int
jmp
fs
push
add
push
xchg
or
jge
mov
jns
std
pop
stc
popf
filds
stos
cmp
lret
daa
mov
pop
out
nop
fcompl
xchg
sub
gs
stos
mov
push
stos
adc
jo
loop
mov
stc
push
mov
dec
int3
xor
imul
xchg
mov
cmpsb
or
push
in
imul
sbb
xchg
cmp
mov
fwait
aaa
push
insl
mov
stos
mov
xchg
pop
fstpt
lea
and
dec
imul
cmp
xor
outsl
adc
inc
stos
add
cwtl
fdivrs
std
call
cltd
iret
dec
cs
mov
adc
into
int3
stos
dec
frstor
into
cld
lcall
mov
push
js
cmp
movsb
xor
call
icebp
sbb
add
lret
mov
hlt
push
mov
repz
stos
test
push
leave
les
cmp
pop
jmp
pusha
hlt
nop
push
lods
pop
stos
test
add
rep
mov
mov
jmp
imul
mov
neg
std
aas
stos
pop
shll
stos
or
stos
pop
inc
in
add
jno
stos
clc
jmp
into
lahf
stos
std
xchg
stc
rclb
in
stos
wbinvd
inc
jp
mov
out
stos
dec
insl
mov
cli
and
xchg
das
inc
inc
lret
pop
push
stos
subb
xchg
cmc
jne
push
outsl
adc
mov
or
loop
out
stc
jmp
mov
inc
sub
xor
outsb
xchg
jno
loopne
and
stos
mov
test
mov
pop
std
or
push
out
shrl
xchg
ss
mov
frstor
scas
mov
adc
stos
out
xor
outsl
jl
outsb
stos
stc
mov
cmpsb
lea
push
cmp
mov
out
imul
mov
xor
stos
cmp
add
and
cltd
out
pop
je
push
mov
xchg
or
movsb
or
stos
xchg
sbb
repz
iret
stos
xor
mov
cltd
shrl
pop
arpl
ss
arpl
mov
adc
shlb
cmp
gs
outsb
xchg
jmp
xchg
hlt
push
into
scas
mov
stos
push
ljmp
xchg
fidivrs
and
enter
stos
ja
mov
ds
or
mov
bound
lods
sub
int
push
into
test
xchg
xchg
lea
stos
or
add
std
jnp
and
mov
stos
inc
sub
xchg
test
jnp
mov
adc
outsl
push
xchg
sbb
dec
dec
fwait
imul
imul
mov
popl
insl
fwait
mov
cs
push
cmpsb
dec
mov
sarb
push
test
cltd
push
stos
xchg
loopne
mov
adc
pop
lret
fdivl
stos
add
dec
add
scas
insl
shrl
and
push
mov
jae
fldcw
shl
mov
cmp
stos
xorl
jbe
pop
insl
add
or
push
dec
jb
lahf
sahf
sti
lret
cmp
mov
stos
pop
inc
mov
out
fwait
cmp
push
push
and
or
stos
les
xor
adc
mov
jo
pop
mov
mov
jnp
jle
dec
dec
stos
hlt
subl
add
push
stos
jl
mov
je
fistpl
nop
xchg
stos
sub
aam
test
adc
stos
imul
arpl
js
jbe
imul
xchg
mov
fsubr
and
stos
cmp
jne
std
bound
jle
pop
add
jb
shl
cld
push
and
lret
jne
stos
jbe
lods
mov
outsb
mov
daa
int
mov
imul
inc
pop
aas
adc
mov
fimuls
stos
sbb
shl
jns
xor
sbb
fxtract
push
xchg
mov
into
and
mov
jbe
pop
adc
sub
loope
les
mov
or
stos
xor
imul
lret
mov
push
dec
xchg
xchg
xchg
in
shlb
mov
adc
push
xchg
mov
add
xor
sti
gs
shl
sub
mov
rorb
mov
xchg
mov
inc
sbb
pop
stos
in
jp
xor
movsl
sub
fwait
cmpsb
aad
push
mov
test
xrelease
jmp
cmpsl
push
ss
cmp
iret
pushf
stos
stc
mov
jno
push
lahf
jecxz
inc
mov
pop
push
lcall
push
dec
push
cmpl
ret
outsl
stos
stos
sbb
rcll
cld
std
stos
adc
out
sbb
dec
pop
stos
adc
loope
push
jecxz
imulb
or
pop
out
mov
jmp
jnp
mov
imul
mov
rcrl
orl
mov
inc
test
push
stos
into
ljmp
lea
mov
xchg
popa
std
xchg
stos
inc
inc
cmp
jp
divl
popa
dec
jmp
jns
push
rorb
xchg
fstl
loop
lcall
inc
sbb
fstpt
xor
mov
xchg
mov
arpl
scas
pop
popf
stos
jbe
pop
aad
mov
out
sub
sbb
xchg
cmc
gs
push
clc
or
aad
mov
arpl
sahf
int3
push
call
loop
imul
pop
ljmp
cwtl
sub
jge
dec
xor
stos
and
pushf
cwtl
mov
xchg
mov
mov
subl
stos
xchg
lret
lahf
incl
stos
mov
xchg
in
push
cmp
xor
ljmp
ja
push
jl
inc
stos
popf
xor
lret
xor
mov
stos
pop
in
mov
inc
xchg
or
sbb
inc
leave
cli
adc
rcrb
fsubrl
add
rorl
ret
es
mov
in
push
mov
xor
push
and
stos
mov
fdecstp
mov
out
cmpsl
loope
jg
push
call
outsl
pmaddwd
dec
aas
sbb
jno
jecxz
bound
mov
into
mov
sub
cltd
dec
std
scas
iret
cmpsl
imul
bound
int3
stos
mov
mov
jno
dec
rep
add
ja
fs
lea
nop
mov
stc
ret
test
mov
mov
stos
sbb
cmp
dec
fisubs
sbb
xchg
mov
xchg
leave
pop
stos
sarl
adc
push
xor
test
mov
stos
sbb
insb
pop
jne
cmove
mov
mov
jmp
lds
mov
iret
scas
xor
push
addr16
sub
xchg
xchg
lds
pop
push
jecxz
movl
aad
stos
inc
pop
rcr
sub
add
jno
mov
lret
cmp
pusha
roll
fwait
jne
addr16
mov
jb
mov
ret
mov
and
stos
sar
pop
aas
cwtl
sub
or
stos
and
out
jns
pop
daa
std
mov
and
or
mov
daa
push
and
fldl
lods
stos
push
jl
int
pop
push
out
jmp
inc
in
adc
pop
xchg
or
scas
mov
jmp
fnstenv
mov
mov
and
mov
pop
jb
loop
xchg
cmp
sbb
in
sbb
mov
mov
push
stos
push
dec
ret
nopl
inc
mov
jb
bound
or
orb
aad
jp
mov
pop
jmp
out
pop
stos
mov
imul
sti
out
or
movsl
or
jecxz
jno
ret
addr16
js
fsts
sahf
xchg
sub
shlb
push
addr16
pop
sbb
mov
gs
sbb
pop
imul
mov
es
imul
fwait
push
sub
push
jmp
stos
sbb
data16
jns
dec
repnz
xchg
stos
ja
add
cmpsb
pop
pop
jo
int3
stos
mov
test
lahf
stos
push
sub
dec
mov
jo
int
out
mov
in
arpl
push
stos
in
mov
loopne
iret
or
rcr
push
pop
repz
out
adc
jb
scas
testb
jp
fwait
daa
inc
xchg
push
mov
jmp
or
xor
push
jb
xor
push
cmpl
jle
ret
shrl
xor
stos
bound
push
sti
sbb
mov
or
mov
push
ljmp
mov
jecxz
bound
xchg
xchg
test
cmp
sub
xor
push
jnp
mov
es
push
stos
xor
pop
out
sbb
fildll
cmp
mov
jle
enter
daa
or
mov
or
cmp
negb
stos
fadd
test
popf
jge
imul
cmp
stos
lret
sarb
fsubrs
movsl
add
inc
stos
jmp
insl
adc
fstps
bsf
mov
cmp
shrb
xlat
sbb
cli
push
imul
call
adc
int
sti
int3
outsl
jg
mov
push
dec
mov
or
scas
pop
mov
dec
leave
ss
sbb
imull
fstl
stos
in
xor
bound
cli
sub
xchg
jl
sbb
mov
test
cld
addr16
xor
scas
imul
push
insl
push
scas
cwtl
push
stos
jo
movsl
repz
stos
fwait
js
sbb
fimuls
insb
stos
lock
fld
andb
in
push
bound
xchg
out
stos
dec
sub
shrb
stos
aas
fildl
gs
or
nop
stos
pop
in
xor
insl
cmp
xor
sub
mov
push
inc
and
xlat
xchg
mov
dec
gs
mov
popf
stos
lret
dec
adc
daa
leave
clc
rcrb
push
sub
pop
shlb
mov
std
adc
mov
jmp
or
bound
xor
sti
mov
lea
xor
sbb
data16
jle
ja
mov
sti
fcomp
test
push
mov
sub
cmp
push
lahf
push
ljmp
sbb
and
adc
mov
jecxz
xchg
cmpb
mov
mov
das
mov
xchg
push
jmp
xor
sahf
scas
mov
into
add
insb
jmp
popl
imul
shl
jecxz
ja
in
push
aam
xor
cmp
sub
mov
mov
jecxz
and
jnp
and
mov
stos
fwait
in
sti
xchg
add
stos
xchg
push
dec
test
das
mov
lods
test
xchg
gs
test
leave
xchg
pop
pushf
out
cwtl
mov
mov
idivb
stos
adc
pop
cmp
sarl
cmpb
pop
das
aad
add
jmp
ss
out
test
call
shll
stos
fiaddl
xchg
cltd
out
ret
scas
arpl
stos
pop
stos
outsl
pop
sub
shl
inc
rorb
sub
pop
jl
pop
stos
mov
mov
and
pusha
sub
addr16
pop
dec
out
mov
movsb
clc
ja
mov
stos
pop
shlb
mov
or
sbb
cmp
ljmp
std
test
dec
imul
push
and
pop
fsubl
stos
xchg
push
in
dec
xchg
jae
cmpsb
fwait
ds
push
pop
lret
or
mov
jae
ja
stos
inc
rol
or
loopne
push
push
mov
dec
jmp
sbbb
mov
push
lods
nop
cmpsl
mov
je
push
ss
movsbl
xor
jge
sbb
movb
inc
mov
adc
enter
mov
js
ds
and
mov
stos
sbb
mov
push
bts
icebp
lods
add
into
orl
mov
xchg
xrelease
sbb
add
inc
test
or
es
stos
shll
jns
stos
lods
cmp
outsb
stos
cmc
test
mov
into
sbb
hlt
out
lea
sub
mov
iret
ljmp
push
push
aas
push
aaa
clc
add
inc
adc
add
dec
stos
test
movsl
push
mov
mov
arpl
in
push
subb
mov
sahf
jnp
stos
mov
lods
scas
subb
test
lahf
mov
dec
cmp
out
stos
sbb
jae
and
xchg
mov
aas
xor
jg
jmp
cmpsb
rcrl
mov
lret
jle
clc
dec
stos
sbb
mov
sar
stos
lds
out
or
and
stos
sbb
inc
gs
xchg
stos
inc
push
jbe
xlat
out
repnz
cmp
pop
sti
subb
sbb
xchg
stos
in
sbb
cs
xchg
outsb
stos
cmp
mov
stos
adc
mov
stos
cmp
in
jl
icebp
add
js
stos
mov
fdivrl
lahf
xlat
mov
add
push
aas
mov
in
imul
mov
mov
mov
jnp
out
stos
pop
cmp
stos
je
dec
rorb
icebp
fldt
pop
out
add
hlt
jns
orb
test
daa
mov
stos
jnp
dec
pop
lahf
sti
out
stos
sbb
icebp
psllq
jae
sub
mov
cmp
push
ljmp
xchg
mov
out
xor
insl
stos
jl
pop
xor
inc
mov
outsl
mov
mov
push
mov
stos
inc
call
mov
out
push
pusha
data16
lods
stos
daa
mov
addr16
sbb
or
mov
fwait
leave
or
cmp
out
loop
xchg
incb
xor
outsb
pushf
arpl
pand
hlt
popa
pop
cmpsl
nop
stos
pop
cmp
fisubrl
push
out
mov
aaa
aas
jmp
dec
stos
addb
adc
lods
stos
movsl
lea
cmp
aas
sti
stos
sub
add
jns
insl
push
test
hlt
adc
sahf
sub
arpl
xchg
cmp
rcl
test
inc
xchg
imul
lahf
les
imul
stos
jmp
sar
fucomip
push
addl
mov
xchg
push
lock
push
add
pop
stos
jbe
fs
cld
loope
imul
lahf
dec
rorl
cwtl
mov
cmp
and
jge
repz
push
mov
faddl
dec
jb
daa
insl
adc
rolb
bts
sahf
cmpl
jmp
stos
cld
icebp
outsl
and
and
lods
cmp
iret
dec
ljmp
addr16
pop
lods
mov
jl
mov
stos
ss
in
scas
jbe
in
ds
inc
fcmovnu
imulb
and
aam
ret
xor
mov
stos
fwait
cli
mov
shrb
pop
xchg
jg
std
lea
in
ret
sbb
xor
xor
mov
or
stos
pop
outsl
mov
cld
cmp
cmpsb
mov
js
je
pop
rcrb
stos
push
in
and
stos
ss
clc
mov
push
jmp
or
xor
sub
add
stos
pushf
fnstenv
gs
push
push
leave
fwait
movsl
rcrl
pop
adc
out
dec
xchg
jae
sbb
loopne
sbb
jmp
adc
stos
lods
ss
in
add
mov
repnz
mov
test
std
sub
adc
ss
mov
loop
stos
popf
in
xchg
or
daa
xor
push
adc
and
sub
xlat
scas
rol
and
or
arpl
jmp
mov
daa
push
xchg
push
test
add
lock
cmp
sti
fcom
stos
xchg
movsb
pop
cld
xor
ja
stos
mov
insb
jnp
pop
mov
jns
scas
mov
stos
cmpsl
shr
xor
adc
ljmp
cld
sub
sbb
icebp
sarl
fmull
enter
lret
inc
xchg
dec
pop
fwait
sbb
xchg
lcall
or
push
mov
into
stos
xchg
dec
popf
orl
sub
loope
inc
aad
stos
mov
lock
sub
cmp
adc
mov
and
add
pop
shrl
xchg
mov
test
xchg
daa
push
xor
loop
mov
mov
aas
in
mov
mov
dec
push
cmp
pop
add
xor
push
push
fstl
sub
mov
dec
outsb
cmp
out
mov
add
sbb
and
inc
ljmp
push
mov
mov
jae
sbb
fwait
pop
lock
xor
scas
nop
jl
sub
repnz
fld
out
in
lahf
cmp
mov
aaa
stos
int3
leave
mov
addr16
daa
test
jns
mov
sahf
jb
jg
pop
imul
sysexit
in
mov
push
aam
sub
nop
mov
xchg
fsubrl
cmp
cmp
sahf
mov
sub
xchg
xor
lods
idiv
add
mov
pop
sbb
mov
iret
stos
pop
aam
mov
mov
aaa
stos
cwtl
sub
cld
or
daa
bound
into
and
push
dec
stos
push
imul
loop
stos
inc
jnp
enter
stos
and
add
push
jno
insb
mov
das
xchg
stos
outsb
sbb
and
int
push
scas
push
jmp
cmp
add
loope
stos
aam
ja
lret
add
push
and
jnp
imul
or
je
stc
fwait
js
stos
jmp
jl
cmp
xchg
mov
fmuls
stos
std
insl
das
jns
mov
out
pop
test
and
and
scas
stos
pop
lods
jmp
pop
jmp
push
setns
xchg
shll
lods
into
rcl
fwait
inc
mov
inc
fnstsw
jae
inc
loop
dec
iret
test
stos
popf
mov
cmp
jp
xchg
stos
ficoms
lcall
insl
xor
notb
mov
add
dec
push
mov
xchg
bound
rcrb
stos
daa
mov
mov
stos
mov
inc
pop
scas
jmp
imul
jae
sub
jp
dec
jo
lods
sbb
sbb
loope
push
stos
jbe
xlat
cmp
push
dec
mov
hlt
xchg
test
mov
sbb
aaa
sub
mov
inc
aam
cmp
stos
mov
inc
push
inc
jmp
mov
inc
scas
cmpsl
xor
das
out
cmp
xchg
push
xchg
rcrb
xchg
sbb
in
imul
inc
or
scas
sub
insb
lock
das
mov
jmp
adcl
imul
mov
stos
shl
xchg
sub
and
sub
stos
mov
xchg
jecxz
cld
test
mov
add
sarb
inc
sub
and
push
fnstenv
mov
test
mov
or
add
lcall
add
mov
stos
mov
fistl
or
jl
add
push
stos
aad
arpl
stos
enter
add
cmp
xchg
push
xchg
push
add
cmp
jae
std
fistpl
mov
gs
adc
xlat
pusha
stos
sbb
push
pop
xorl
lods
mov
loop
repz
stos
xchg
mov
mov
leavew
insl
scas
ljmp
fldt
stos
fnstcw
test
addr16
pop
mov
inc
out
sbb
jle
lods
ds
mov
lods
adc
aas
mov
xchg
mov
loope
idivl
insl
push
xlat
in
sbb
frstor
aas
test
inc
mov
sti
mov
ret
dec
insb
test
xchg
lock
js
fimuls
in
dec
sub
pop
push
push
add
xchg
ret
jmp
jno
stc
xchg
rorb
xor
inc
subb
shrb
scas
int3
jl
stos
inc
dec
sarl
xchg
cmp
sub
xchg
push
push
rol
mov
mov
mov
cs
lds
push
mov
fistpl
mov
stos
fcompl
std
lahf
ljmp
scas
pop
dec
lock
stos
ret
cmpsb
movb
shrb
sub
mov
mov
test
mov
js
cli
add
call
shl
xchg
mov
out
inc
mov
nop
xchg
sub
stos
test
pop
adc
ss
addr16
mov
inc
cld
xchg
add
mov
pop
adc
jge
lock
stos
lods
daa
out
xor
stos
aas
les
mov
xlat
jmp
imul
mov
stos
pop
add
es
or
sarb
mov
stos
cmc
ds
insb
dec
fisubl
ficomps
stos
sbb
mov
icebp
and
dec
xlat
mov
nop
push
clc
leave
cli
scas
int3
stos
xchg
fistpll
lds
ficomps
mov
pop
icebp
and
stos
cvtpi2ps
xchg
or
mov
jmp
sbb
xchg
jmp
dec
scas
xor
fwait
mov
stos
ret
das
mov
loop
cmp
and
mov
stos
push
adc
push
fcmovu
mov
stos
jge
sahf
mov
fisttps
negb
test
out
loope
inc
sub
int3
out
or
jbe
negb
mov
stos
adc
out
pop
and
aas
dec
imul
popf
sub
jmp
ret
cltd
inc
jns
jns
stos
xor
and
jmp
mov
insb
aaa
cmp
mov
mov
imul
or
movsl
fldcw
dec
imul
push
fs
outsl
jmp
fildll
jl
push
dec
xchg
loop
icebp
jecxz
push
jb
fld
push
orb
add
sahf
lahf
in
dec
pop
push
mov
movsl
push
xchg
add
and
xchg
xchg
jbe
std
sbb
sub
inc
ret
mov
pushf
mov
xor
push
andl
stos
push
mov
xlat
dec
and
sub
cmp
arpl
fisttps
fwait
xor
daa
in
fwait
test
cmpsb
adc
imul
arpl
pop
mov
mov
lret
cld
inc
mov
out
mov
ret
je
loope
cld
stos
cmp
insb
lahf
enter
std
sub
mov
nop
rclb
stc
pop
daa
stos
dec
lret
mov
in
outsl
push
stos
or
clc
dec
stos
shlb
rcrb
xchg
decl
and
insl
mov
push
mov
add
or
jecxz
aas
scas
lahf
in
pop
jmp
mov
lods
daa
ret
movl
loop
in
sub
jno
sbb
adc
and
mov
push
stos
dec
test
jmp
bound
mov
xor
repz
sub
mov
loope
push
loop
mov
jmp
out
adcl
loop
sbb
out
cmp
fs
xor
pop
stos
and
cmp
ds
out
or
lods
stos
int
pop
mov
stos
adc
adc
ss
sub
mov
pop
stos
fxch
ror
mov
ljmp
pop
dec
cmp
ja
sub
pop
lods
aad
sbb
rcrb
dec
stos
add
xor
jmp
fbld
mov
mov
insb
cld
adc
or
stos
imul
cli
test
push
pop
movsl
jp
shll
and
scas
dec
stos
cmpsb
ret
mov
adc
or
jnp
es
mov
stos
int
jo
xchg
add
movsl
stos
test
cwtl
aad
pop
cs
shl
jns
push
enter
jmp
popa
inc
adc
push
out
pop
test
dec
stos
shl
or
stc
fstp
mov
adc
pop
jbe
mov
mov
mov
rorb
xor
lea
jne
jmp
fwait
sahf
lock
test
jmp
cwtl
xor
mov
test
cmp
cmp
das
mov
fimull
ljmp
insl
mov
stos
es
sbb
outsb
xchg
adc
push
in
out
imul
cli
fwait
ja
sarl
push
repnz
scas
sbb
stos
mov
and
xchg
fwait
lret
jb
jbe
stos
adc
mov
or
adc
sbb
stos
lds
dec
mov
insb
test
ss
std
lret
leave
les
cmpl
leave
fstpl
out
stos
dec
xlat
sahf
sbb
scas
cmpsb
push
or
daa
outsl
jnp
fwait
jg
sub
push
pop
inc
push
aam
ds
cmp
hlt
das
and
std
lcall
pop
mov
adc
ds
inc
cmc
les
aam
add
mov
adc
xorl
mov
cmp
or
out
xchg
fsubrl
addr16
push
repz
stos
hlt
je
pop
dec
pop
ja
stos
cmp
pop
in
and
inc
out
cmp
mov
cli
and
lea
or
fwait
jb
mov
cmp
add
cwtl
sarl
cld
push
cmp
mov
inc
push
ja
sub
push
jge
test
insl
shl
jmp
insb
mov
sub
out
js
stos
xor
inc
ds
cmp
scas
sub
inc
decl
push
mov
mov
arpl
dec
mov
add
xchg
sub
mov
fildl
fwait
aad
std
add
mov
int3
dec
jo
mov
pop
push
pusha
stos
jmp
addl
int3
pop
aam
cmp
xor
popa
clc
xchg
or
test
jle
inc
lret
dec
jnp
int3
stos
push
mov
mov
xor
fstpt
sahf
lcall
int
mov
xchg
lods
stos
pop
loopne
xchg
cli
icebp
sbb
and
adc
inc
xchg
stos
out
les
jns
inc
daa
mov
mov
or
lock
mull
dec
push
mov
xchg
push
pushf
imul
mov
sbb
jo
push
lahf
cwtl
add
jne
notl
in
cmc
stos
repnz
out
loop
rorb
jnp
leave
mov
mov
les
mov
lock
out
xchg
inc
push
test
cmp
fwait
inc
dec
dec
iret
imul
dec
movsb
inc
stos
clc
repz
mov
xchg
push
push
test
orl
daa
aad
or
push
nop
shl
imul
mov
push
scas
jnp
test
dec
call
lds
lods
jl
inc
in
mov
mov
outsb
stos
repnz
and
pop
cmpsl
dec
stos
pop
or
xor
insb
outsl
add
int3
aas
stos
ret
adc
nop
in
cmp
xlat
icebp
out
imul
ljmp
into
in
cmpb
mov
cmpsb
xor
fcmovbe
stos
push
or
xor
mov
das
inc
and
cmp
mov
hlt
pop
dec
scas
movsb
xor
inc
sub
mov
pusha
xchg
xchg
mov
mov
xchg
lock
xchg
negb
mov
jae
pop
xchg
rorb
test
loope
pop
sarb
stos
in
and
mov
stos
das
ss
in
out
scas
sbb
mov
mov
cmp
lods
push
fnsave
test
movsb
cwtl
mov
fwait
mov
icebp
lods
cmp
pop
add
mov
gs
out
bound
inc
aaa
sarb
inc
int
push
lods
pop
stos
movsl
insb
loop
int3
andb
mov
fmull
and
lock
cli
movsb
loope
pushf
mov
and
fucomi
mov
lods
out
xorb
xchg
mov
push
mov
js
das
xchg
rcrb
ss
dec
mov
mov
mov
mov
dec
cmpsl
nop
stos
inc
enter
orb
adc
shr
cmpb
xchg
insb
fidivl
into
je
mov
lods
or
cli
mov
sbb
mov
stos
pop
jle
lock
xchg
push
outsb
xor
out
mov
jle
cmp
mov
mov
lret
sbb
or
xchg
test
stos
sub
mov
hlt
adc
fmul
movsl
in
iret
es
xchg
idiv
iret
jnp
jecxz
test
stos
fldl
sub
sbb
popa
xorb
addr16
inc
lods
iret
test
loopne
push
stos
jo
icebp
lea
xor
mov
movl
leave
fidivrs
and
aad
lahf
cmp
pusha
add
pop
popf
mov
jg
movsb
add
jecxz
stos
xchg
outsb
jno
repz
jnp
fisubrl
add
sub
stos
jns
sarb
xor
in
lcall
mov
xchg
test
add
mov
lods
mov
pop
xor
in
mov
mov
pop
pop
fisubl
shrb
dec
shufps
hlt
cs
neg
push
add
jmp
out
jecxz
ss
in
rep
cmp
adc
imul
xor
add
pop
or
cmp
inc
loopne
aad
stos
loop
sub
push
in
cmp
mov
fs
fsubrl
inc
daa
cmpsl
stc
sub
fsubrs
popf
stos
jecxz
xor
in
lret
stos
mov
xor
imull
add
aas
imul
mov
stos
push
mov
aaa
scas
jg
stos
int
icebp
sbb
stos
xchg
hlt
sub
mov
push
int
xor
std
cs
scas
out
mov
xor
leave
pmuludq
xorb
push
clc
or
imul
jno
pop
stos
loopne
mov
push
stos
mov
lds
mov
lret
subb
add
mov
inc
stos
xchg
fcmovb
lods
jo
fmull
stos
outsb
add
hlt
movsb
repz
je
fisubl
push
cmpsl
and
stos
movd
jecxz,pt
jmp
push
aas
loop
mov
sbb
fbstp
and
pop
cmpsl
xchg
pop
stos
fwait
ja
cs
mov
enter
mov
jno
pop
loopne
lods
shr
movsl
stos
fsubr
adc
sub
cmp
cmp
xchg
mov
bound
dec
push
inc
stos
stc
imul
mov
insb
jmp
dec
push
or
mov
movsb
stos
add
aad
aaa
xor
stos
test
cmp
lods
pop
jbe
dec
mov
into
cmp
stos
xchg
scas
test
cmpb
ljmp
push
add
shrb
mov
popa
mov
xchg
test
out
pop
jno
dec
pop
and
inc
pushf
mulb
jl
imul
mov
stos
push
lcall
add
xor
mov
pop
stos
adc
sub
mov
roll
mov
fwait
jns
push
es
mov
stos
les
loope
lea
inc
aam
fisubs
stos
std
das
test
xlat
jo
xchg
cmp
push
mov
or
or
cmpl
add
push
or
dec
dec
jmp
rcr
ret
dec
cli
xchg
jmp
in
fincstp
xchg
mov
push
or
or
mov
stos
jns
lea
in
fcoml
push
push
repz
sub
sbb
ds
cmp
jns
aad
inc
int
stos
push
mov
sbb
and
jmp
mov
stos
jno
adc
fidivs
inc
adc
stos
mov
jne
aaa
lods
fsubl
jb
stos
jnp
cltd
pop
lds
push
jae
mov
cmpsl
and
stos
nop
cmp
inc
cmp
gs
inc
aas
or
stos
mov
sti
cmp
add
mov
push
out
aad
scas
stos
cmpsl
into
inc
sub
mov
xchg
cld
mov
enter
js
stos
imul
incb
hlt
sub
call
je
mov
and
inc
pop
stos
xchg
mov
test
aas
sbbb
fwait
loop
in
xchg
cld
insb
scas
or
mov
in
jne
mov
out
jb
mov
pop
inc
cmp
out
scas
and
fucomi
dec
cltd
pop
or
stos
rorl
push
stos
mov
mov
stos
jge
sub
insb
in
mov
test
ds
js
xchg
mov
push
lret
stos
xor
mov
xchg
sbb
bound
jb
fnstcw
sub
xlat
ret
sub
jmp
aad
ret
xchg
test
pop
cwtl
subl
cmp
mov
jb
mov
fiadds
loope
test
js
stos
or
inc
inc
in
rorb
stos
test
sub
mov
fidivrl
jnp,pt
outsb
int
mov
stos
xchg
sub
jno
sbb
adc
repnz
pop
inc
movb
nop
jne
sub
loope
mov
xchg
stos
cwtl
addr16
add
into
std
jmp
hlt
lcall
xor
jmp
fiadds
test
fwait
sbb
in
stos
gs
in
push
push
pop
sbb
cmpsb
cs
push
stos
clc
nop
out
lahf
test
insl
pop
sbb
sbb
adc
dec
in
stos
pop
call
mov
or
xor
mov
dec
outsb
adc
mov
jmp
leave
xor
adc
lds
mov
jns
ds
or
stos
mov
enter
xchg
nop
push
outsl
pop
mov
test
stos
popf
int
mov
int3
sub
stos
add
xchg
inc
or
jg
lahf
das
xchg
call
movsb
aad
les
sub
cmpsl
mov
dec
fstps
cmc
enter
popf
mov
cmp
sbb
cmp
ficoml
inc
jmp
repz
clc
ljmp
imul
es
sub
pop
sti
xchg
or
movsl
cmpsb
push
inc
out
stos
cmp
cmc
dec
xor
lret
aas
and
into
sbb
cmp
cli
stos
push
les
loopne
lret
add
cmp
xorl
inc
mov
and
xchg
inc
outsb
jle
mov
xor
xchg
imul
int3
push
cmp
aad
adc
js
adc
addl
sar
repnz
dec
bound
push
push
ds
xchg
movsb
dec
xor
lock
test
fwait
mov
mov
fmulp
fsubrl
sbb
stos
add
pop
pop
pop
adc
lcall
mov
repnz
push
lea
push
sub
dec
and
push
int
imul
ljmp
jmp
aas
ret
lods
enter
adc
or
test
xchg
mov
mov
addr16
xlat
push
cmp
rolb
mov
ljmp
mov
jl
stos
test
mov
das
addr16
lea
xor
jae
stos
xchg
xchg
sub
inc
cld
bound
xchg
test
cmp
mov
stos
dec
mov
jne
mov
push
imul
daa
or
out
xchg
xrelease
jp
stos
mov
push
jae
inc
imul
ficomps
clc
enter
shll
andl
mov
and
gs
and
xchg
lahf
mov
int
shlb
stos
dec
xchg
mov
mov
call
cltd
sub
xor
ret
std
jno
and
mov
stos
jmp
notl
add
mov
inc
mov
imul
push
stos
or
aaa
push
in
mov
ljmp
stos
leave
rcrb
sarl
sub
ljmp
inc
icebp
scas
sbb
in
mov
sub
mov
mov
inc
stc
lds
sbb
push
stos
add
adc
cmp
cmc
lds
lock
mov
sub
call
stos
and
cmovl
into
loop
out
fidivrl
dec
rorl
int
add
mov
jmp
push
and
mov
fs
stos
aad
hlt
fwait
aam
mov
xchg
in
xchg
sti
loopne
test
sub
ficoms
pop
lods
imul
hlt
sarl
sub
fisubs
enter
cs
fnsave
and
and
ret
fwait
mov
test
les
imul
push
fisttps
xor
sub
sahf
jbe
sarb
pop
inc
xchg
int
stos
jp
xor
test
mov
sbb
jns
dec
scas
adc
mov
add
test
mov
lret
jmp
mov
rcrl
popf
dec
imul
ds
mov
jns
loope
inc
mov
push
notb
pop
lret
ficoms
xlat
rolb
mov
lcall
xor
stc
leave
cmc
mov
jns
adc
outsb
inc
ja
stos
pop
mov
ss
movsl
idivl
jle
mov
xchg
mov
imull
movb
sub
fstl
stos
inc
in
test
push
imul
or
cmp
push
out
pop
jnp
cld
stos
mov
xchg
mov
ja
mov
jnp
stos
std
adc
jle,pn
ret
stos
out
iret
adc
mov
pop
fiadds
ret
cltd
stos
and
xor
hlt
clc
stos
mov
push
push
stos
jo
or
test
jne
ja
push
data16
sub
mov
shlb
or
stos
aad
sbb
pop
addr16
shrb
std
stos
call
lahf
or
out
mov
out
insl
pushaw
in
xchg
stos
pop
test
cmc
stos
rcrb
xadd
lcall
stos
fiaddl
lods
movsb
pop
xchg
dec
stos
in
lods
arpl
cmp
mov
fisttpl
stos
xor
jmp
ljmp
dec
push
stos
divb
pusha
stos
or
cmpsl
jb
test
dec
mov
rolb
mov
bound
stos
lret
mov
stos
jl
ffreep
push
negl
mov
sbb
adc
sahf
inc
in
or
fcompl
les
jmp
in
inc
lea
mov
inc
dec
xor
inc
stos
fldl
mov
cmp
mov
dec
sahf
jl
stos
insb
enter
pop
stos
add
sbb
push
in
mov
aas
aas
sbb
xchg
sub
ret
notb
mov
sbb
jae
shrl
jmp
mov
mov
inc
xchg
push
jno
and
nop
cltd
stos
pop
std
mov
pop
jp
das
stos
sbb
lods
inc
cwtl
gs
jg
shll
jmp
fs
lahf
es
test
xchg
stos
push
pop
xor
mov
cmp
stos
sbb
mov
stos
xchg
adcl
lea
rol
movsb
imul
stos
addl
and
cmp
stos
outsl
inc
fmull
dec
iret
mov
insb
fiaddl
xor
xchg
and
stos
idiv
inc
jbe
outsl
fwait
daa
push
adc
shlb
jp
push
push
test
jno
jae
punpckhbw
and
fidivrl
cmp
adc
loop
push
cltd
scas
sub
fisubrl
jp
or
addr16
jbe
outsb
test
mov
sub
pop
ret
push
dec
xchg
stos
cli
jno
xor
or
cltd
xchg
dec
enter
cmp
jge
stos
icebp
dec
dec
dec
or
mov
pop
popf
stos
xor
lcall
in
stos
xchg
aad
inc
sbb
inc
mov
stos
push
out
or
jb
out
cmp
inc
jbe
rorl
pop
pushf
pusha
mov
push
fildl
mov
or
cmp
ljmp
mov
jge
inc
jae
adc
enter
jns
stos
fbld
mov
dec
dec
and
orb
mov
movsb
stos
dec
xlat
xchg
test
cli
lods
ljmp
movsl
fwait
sarb
dec
outsb
pop
addl
popa
cs
pop
pop
addl
pop
arpl
stos
test
push
add
pop
xchg
popf
scas
adc
cmpsl
adc
add
jecxz
sbb
xor
imul
nop
lahf
sub
xchg
stos
xchg
out
mov
loop
mov
push
sbb
cmc
stos
idivl
clc
ljmp
mov
in
stos
repnz
ds
stos
mov
int3
scas
push
mov
and
nop
xor
outsb
sbb
arpl
ljmp
iret
mov
cmp
sub
stos
mov
inc
ss
mov
stos
stos
jno
cld
vpsrlq
stos
cmp
push
in
iret
out
ja
int3
cmpsb
fldcw
add
jge
stos
and
mov
lcall
mov
stos
push
in
jnp
cli
mov
stos
ret
mov
popf
ss
cld
stos
cmpl
or
xor
lcall
xor
mov
fimuls
scas
aas
lods
enter
idivl
orps
aad
mov
stos
enter
lcall
adc
sbb
mov
or
test
addr16
sub
stos
outsb
fcmovb
mov
xchg
xchg
pop
jb
stos
pop
data16
xor
ds
mov
fwait
adc
pushl
xor
call
fdivrs
push
ja
cld
and
mov
inc
lcall
push
adc
jmp
stos
mov
aam
xor
insb
cwtl
cmp
imul
jmp
push
or
mov
arpl
rcrb
lcall
or
stos
out
les
fmul
outsl
sbb
jbe
pop
shrb
pop
mov
dec
lds
ret
and
rcrb
push
adc
cld
lock
sub
push
or
aas
sbb
mov
stos
mov
inc
imul
imul
aam
or
dec
pop
stos
test
sub
mov
xorb
sub
ja
ds
test
adc
pop
mov
faddl
inc
nop
lock
or
push
mov
mov
pop
ja
sti
pop
lea
adc
xlat
test
and
aas
mov
lahf
stos
xor
fdivs
xor
xor
adc
jnp
jl
mov
mov
daa
cld
mov
stos
aad
pop
cmp
daa
pop
and
jmp
inc
mov
adc
enter
stos
std
out
ljmp
stos
ljmp
iret
cmpsb
test
push
dec
mov
push
ret
insl
and
shll
repnz
sbb
fwait
mov
mov
popa
stos
mov
dec
mov
les
and
iret
mov
and
hlt
test
pop
loop
mov
jmp
stos
push
scas
ror
popa
or
bts
sub
mov
inc
fdivl
dec
xchg
push
int3
dec
xor
mov
rcrb
jne
ss
mov
cmp
imul
inc
outsl
mov
cmp
adc
sahf
dec
stos
int3
add
movsb
test
mov
ret
lahf
mov
stos
repz
iret
aad
mov
cltd
or
rolb
icebp
push
scas
jecxz
xorb
enter
sbb
jbe
leave
push
mov
test
mov
adc
mov
xor
imul
cltd
push
pushf
popf
arpl
in
pop
imul
stos
mov
shlb
stos
pop
out
int
dec
sub
pop
inc
bound
adc
cld
cmp
aaa
push
daa
inc
mov
cmpl
jg
push
mov
gs
cs
cmp
fbld
push
scas
dec
mov
enter
stos
js
rolb
sbbl
mov
imul
ds
outsl
in
stc
adc
jle
lods
pop
stos
ja
mov
and
subb
xchg
fwait
int3
filds
jl
or
lods
mov
aaa
addl
inc
push
lods
jb
lods
xor
cmp
pop
add
mov
jmp
bts
int3
fimuls
scas
loop
sahf
addl
mov
clc
xlat
mov
pop
arpl
or
lret
inc
mov
stc
nop
lds
scas
insl
mov
leave
cltd
int3
arpl
flds
in
inc
mov
std
mov
dec
jae
shrl
push
mov
stos
ljmp
nop
stos
mov
lahf
outsb
inc
xchg
mov
imul
xor
add
rclb
push
and
xchg
cltd
xchg
scas
lock
push
sbb
stos
test
loopne
push
in
push
adc
xchg
inc
popf
mulb
jge
and
stos
jb
movsl
int3
cmp
jne
stos
es
sub
or
addl
sahf
jae
pop
mov
imul
cmp
mov
xor
divl
pop
cmpsl
stos
hlt
xchg
mov
mov
push
stos
push
sub
xchg
stc
mov
cld
sub
or
int3
outsl
jmp
mov
fnsave
pusha
xchg
fcompl
and
add
ljmp
into
mov
fcoms
dec
imul
push
fisttpl
ljmp
inc
stos
popl
arpl
xchg
lods
stos
add
pusha
or
jae
das
stos
je
mov
test
cli
xor
data16
imul
popa
stos
pop
lea
mov
hlt
push
outsl
addl
in
stos
nop
mov
sub
stos
dec
or
mov
jnp
dec
mov
jmp
aas
ja
shrl
loop
xchg
movsl
or
negb
repnz
mov
xchg
fs
mov
int3
mov
xchg
mov
mov
ret
mov
arpl
sub
shl
push
pop
mov
in
insb
xchg
stc
pop
mov
jne
dec
popf
xor
arpl
cmpsl
fidivs
hlt
mov
and
mov
dec
ljmp
jle
adc
js
add
sub
int
scas
stos
push
popf
movsb
stos
mull
daa
and
xchg
fisubrl
mov
push
stos
pop
cmc
add
stos
mov
mov
dec
stos
cs
leave
pushf
loope
fwait
inc
mov
jmp
out
insb
and
sbb
aaa
inc
cmc
xchg
in
dec
cmp
mov
scas
jmp
mov
fcoms
addr16
cmc
aas
js
clc
stos
ret
dec
loopne
jg
stos
mov
adc
stos
push
sub
xor
push
sub
lods
mov
stos
lea
mov
jbe
push
enter
iret
mov
fst
mov
dec
pop
push
stos
enter
lret
jne
adc
add
das
stos
jp
jns
jmp
imul
incb
adc
stos
shr
sub
cltd
cmp
mov
fisubrs
pop
mov
lea
mov
and
stos
das
lcall
xchg
push
stos
jo
cld
fadds
inc
scas
jns
iret
out
dec
imul
xchg
cmp
push
mov
mov
stos
lds
jg
stos
pop
movb
xlat
inc
leave
mov
in
pop
lods
mov
rolb
data16
addr16
xchg
notl
mov
out
pop
outsl
rolb
mov
iret
sti
add
ret
lret
inc
aam
mov
gs
ljmp
sbb
dec
ficoms
jno
push
inc
stos
jbe
jae
xor
and
test
sub
inc
aas
cmpsl
repz
mov
addr16
decl
data16
inc
ja
jnp
cmp
sbb
jmp
jecxz
stos
push
xchg
jge
adc
dec
fldt
lock
pop
out
stos
hlt
xlat
in
or
pop
stos
and
sub
dec
mov
adc
imul
hlt
sti
testl
push
jmp
dec
cmc
push
mulb
xchg
pop
int
repnz
xchg
aad
filds
push
adc
repz
or
loop
fwait
ljmp
xchg
fisubrl
cmpsl
nop
in
mov
aaa
pop
mov
sub
mov
and
mov
dec
stos
fldt
faddl
dec
stos
xor
lds
imul
sbb
jecxz
jg
push
pop
pop
fadd
and
gs
sbb
es
add
or
dec
sub
and
inc
insb
mov
sti
cmp
testl
mov
or
aaa
gs
ljmp
mov
cwtl
arpl
in
sbb
and
repz
stos
add
aam
lret
push
push
mov
jno
pop
out
mov
jns
insl
fdivl
xchg
sbb
mov
ljmp
mull
pushf
and
add
stos
out
jge
xor
xchg
mov
out
in
ljmp
jmp
dec
sbb
and
rorb
movsb
mov
mov
mov
iret
stos
test
jno
inc
fcoms
sub
test
mov
aas
and
pop
xor
fldl2e
jno
mov
rorb
adc
mov
fwait
idivb
shlb
lock
dec
mov
dec
jno
iret
xchg
leave
scas
into
adc
adc
loopne
xor
popf
fwait
daa
js
add
xor
cmp
pushf
mov
movsb
xlat
fisubrl
pop
mov
ss
bound
lea
xchg
stos
mov
shll
inc
and
sarl
dec
stos
nop
adc
or
dec
loope
adc
dec
mov
jb
stos
pop
lcall
adc
call
or
push
mov
mov
lret
add
adcb
stos
mov
aaa
jle
mov
sbbl
or
stos
inc
push
inc
stos
adc
xlat
sub
xchg
adc
add
or
push
add
push
ret
addl
xor
jnp
add
dec
lea
in
dec
popf
mov
stos
stc
mov
imul
xchg
pushf
push
cltd
stc
imul
stos
mov
rorb
mov
pop
xchg
stos
push
cli
jl
sub
cmc
adc
mov
pop
stos
out
fisubrs
loope
push
sub
xor
and
call
jbe
shrl
or
dec
xchg
stos
mov
fs
push
fucomip
stos
stos
test
imull
push
add
or
inc
mov
mov
rclb
xor
gs
stos
cwtl
cs
and
pop
and
aad
lret
cmp
push
mov
dec
insb
jmp
mov
mov
daa
adc
arpl
cmp
daa
push
xchg
insl
fwait
sub
push
lret
inc
ds
mov
in
ljmp
cmpsl
cs
sbb
inc
in
lahf
dec
pop
test
mov
out
cwtl
mov
xor
xchg
mov
stos
aaa
rep
pop
std
sub
push
in
sbb
jns
sahf
sub
xchg
mov
push
stos
test
or
lock
pop
imul
fs
or
lea
jbe
inc
mov
stos
loop
imul
push
lea
mov
call
jae
cwtl
push
test
data16
aam
outsl
add
xchg
xchg
in
stos
jno
or
lock
fmuls
sbb
jae
and
mov
push
jns
add
test
outsl
xor
jae
xchg
aam
xor
ljmp
stos
fimuls
int3
and
dec
test
sbb
add
stos
xchg
jecxz
xchg
mov
stc
xchg
addr16
mov
stos
movsl
addr16
sbb
dec
mov
pop
pop
xchg
lcall
mov
sub
fisubrs
lock
inc
aaa
push
jmp
jae
xchg
aaa
test
sarl
xor
imulb
pushaw
mov
bound
jg
fstpt
in
mov
and
std
stos
enter
cltd
loopne
dec
loop
pushf
lods
mov
mov
je
xchg
stos
sbb
ljmp
mov
push
stos
mov
sub
jnp
xchg
stos
imul
inc
imul
mov
stos
mov
out
cld
jno
lea
iret
jne
mov
cwtl
test
mov
mov
sbb
ret
or
imul
ss
fimuls
jmp
fnstcw
clc
lcall
adc
add
imull
jbe
ja
stos
mov
test
jp
add
sahf
fsubp
sbb
jmp
xor
push
dec
jl
scas
enter
jne
inc
mov
push
je
lock
test
jns
les
push
xchg
push
dec
push
pop
pop
clc
fwait
scas
imul
hlt
movzbl
ret
or
out
idiv
in
or
stos
inc
sti
sub
xor
mov
je
mov
mov
dec
std
jg
popf
pop
mov
dec
jne
mov
sbb
ljmp
xor
mov
xchg
adcb
jb
adc
mov
adc
das
push
push
imul
stos
adc
repz
push
insl
addb
pop
jmp
mov
nop
arpl
push
mov
pop
gs
cmc
or
sub
lret
mov
adc
cmp
xchg
jmp
adcl
pop
mov
sub
mov
xchg
iret
aaa
sub
mulb
stos
jbe
sub
jno
icebp
or
pop
add
dec
mov
dec
stos
cwtl
clc
inc
xchg
or
sbb
jno
pop
arpl
pop
stos
sbb
mov
sbb
add
fwait
fwait
and
push
stos
and
dec
in
imul
fwait
mov
mov
fldcw
lret
andl
sub
inc
jp
push
xor
cltd
sbb
in
mov
cmp
sub
pop
sub
hlt
xor
mov
andl
insb
adc
xchg
mov
stos
outsl
cmpsb
aaa
mov
mov
stos
rclb
fnstenv
or
adcb
ljmp
outsb
push
mov
sub
dec
mov
mov
in
je
sub
fwait
stos
cltd
jmp
lret
leave
push
pop
pop
stos
xlat
mov
mov
daa
test
cmp
out
sarl
cwtl
bound
lret
and
adc
stos
test
or
stos
adcb
mov
inc
pusha
leave
stos
je
push
push
xor
jp
stos
mov
iret
xor
add
xchg
or
sub
in
mov
xchg
imul
cltd
andl
lods
xchg
mov
jns
clc
repnz
push
push
cmp
cmpl
pop
loope
xchg
jge
mov
ret
and
jno
out
add
pop
stos
pusha
sbb
add
insb
sub
insl
mov
idivl
jg
bound
push
stos
cmpsb
mov
decl
push
inc
mov
int3
xchg
jp
imul
mov
mov
shll
push
mov
push
and
inc
push
push
and
sbb
pop
lock
push
imul
push
out
cmpsl
or
add
bound
xor
insl
mov
outsl
and
cmpsb
andb
lds
stos
inc
xchg
leave
or
sub
mov
push
dec
arpl
int3
clc
outsb
and
in
js
pop
xchg
pop
stos
iret
xor
pop
push
popa
sbb
dec
cmp
pop
ljmp
dec
mov
jne
ret
mov
pop
pop
mov
aaa
mov
test
mov
lea
cmpsb
mov
mov
fcoms
jg
rolb
mov
daa
idiv
int
cwtl
push
inc
movsl
cmp
xchg
stos
jne
cld
dec
addr16
adc
fwait
xor
jb
mov
jnp
cmp
imul
mov
scas
push
push
lret
fstl
stos
mov
inc
stos
out
loope
push
sti
push
pop
popf
nop
add
stos
daa
cli
add
stos
sub
repnz
aam
mov
cld
pop
je
sbb
mov
add
pop
stos
push
pushf
pusha
ja
push
adc
aas
stos
fs
sahf
push
imul
ret
je
rcrl
push
mov
test
loop
xlat
xchg
mov
xchg
ret
add
dec
stos
adc
je
repz
xor
pop
addr16
xchg
xchg
ss
dec
mov
cmp
lock
mov
mov
in
add
add
mov
daa
sbb
jecxz
inc
or
arpl
jb
xor
xlat
pop
sbb
shll
jecxz
test
mov
imul
stos
adc
fistpl
stos
fiadds
scas
repnz
adc
clc
shr
push
fwait
psadbw
stos
xchg
pop
mov
stos
add
sbb
xchg
jbe
loopne
lea
test
and
stos
push
jge
sub
and
inc
or
inc
sarl
mov
push
bnd
stos
dec
insl
movsb
and
pop
cmpsb
pop
loopne
dec
aam
stos
or
jg
mov
add
sub
push
gs
leave
xchg
cmpsl
or
jne
mov
sub
mov
stos
add
push
sti
mov
and
xchg
adcb
cmp
fstps
out
rcrb
jmp
xor
lods
int3
mov
mov
call
stc
push
cmp
stos
and
and
loopne
adc
or
popf
iret
jae
icebp
sbbl
and
inc
stos
adc
sarl
stos
aas
cmpsb
sarb
gs
stos
and
clc
mov
xchg
jbe
lret
jne
lods
push
mov
xchg
xorl
nop
je
mov
aam
cwtl
jno
mov
test
ljmp
shrb
fcmovnb
xchg
and
bound
cmp
popl
inc
and
sbb
ja
out
mov
adc
inc
mov
push
into
jb
inc
insl
and
push
testb
mov
adc
stos
fildl
fadd
ret
jne
stos
xchg
mov
mov
stos
hlt
aad
std
loopne
dec
sub
push
lcall
stos
jg
out
pop
insb
adcl
jmp
and
mov
stos
pop
dec
mov
dec
pop
sbb
mov
fcomps
stos
jae
pusha
inc
and
or
push
in
cmp
ret
cmp
imull
inc
pop
pop
stos
popa
or
push
mov
aam
rorb
ret
paddw
pop
mov
mov
dec
cli
std
sub
mov
rcrb
stos
cmpsb
arpl
push
sub
inc
dec
addr16
mov
rclb
pusha
stos
rclb
movsb
mov
fwait
std
dec
imul
and
cld
mov
adc
mov
add
and
into
jne
stos
repnz
fisubrs
cmc
jb
stos
insl
push
loopne
adc
ret
xor
std
or
and
ja
int
stos
dec
lahf
mov
iret
repz
push
sbb
xchg
push
subb
sub
xor
cmp
std
sub
outsb
cmpsb
or
into
aad
push
scas
dec
inc
mov
lret
add
cmp
mov
stos
inc
mov
shrb
subb
jmp
sub
in
je
lcall
mov
cmp
push
stos
cmp
pop
inc
lahf
xor
cmpsb
sbbl
xchg
jmp
roll
sti
enter
xor
daa
mov
pop
lods
mov
xor
sub
stos
add
jo
gs
cmp
xchg
mov
in
jl
add
je
stos
cmc
and
out
adc
stos
rcrl
push
adc
xchg
stos
fldt
mov
stos
add
cwtl
sbb
in
popf
into
xchg
imull
add
rcrb
cmp
sbb
fwait
movsl
das
sbb
pop
stos
popa
adc
insl
adc
stos
lcall
aas
pusha
mov
in
es
prefetchw
add
and
jbe
push
inc
push
sti
dec
jnp
imull
mov
jge
stos
push
pop
mov
in
cmp
rorl
push
adc
loope
clc
pop
cmp
mov
aam
addr16
sub
adc
jl
jg
push
jmp
sbb
and
das
xor
mov
pop
mov
lds
in
sti
hlt
adc
std
stos
cli
add
jnp
adc
mov
lahf
addr16
and
pop
stos
cltd
lret
std
and
fildll
pop
jg
sbb
adc
stos
push
leave
bnd
fldcw
cmp
pop
mov
bound
adc
jae
mov
stos
imul
pop
test
inc
xor
cmpsb
stos
pusha
push
jno
mov
ja
lcall
cmp
hlt
and
dec
pop
adc
fidivrl
sub
xchg
stos
in
in
jge
pop
and
imul
jle
pop
fwait
stos
pushf
dec
ja
jae
adc
and
test
pop
xchg
sahf
inc
in
mov
or
fucomip
pop
mov
jge
scas
nop
mov
shrb
hlt
pop
subb
outsl
cmpsl
movsb
adc
pop
pop
stos
push
bound
out
stos
ror
xchg
shl
pop
test
mov
ret
arpl
dec
xor
lret
sub
scas
mov
jle
mov
stos
sbb
mov
stos
jmp
ret
out
xor
cs
inc
jmp
dec
sbb
dec
xchg
inc
or
bound
mov
pop
or
std
and
cmpsl
jmp
in
mov
pushf
scas
jnp
xor
shlb
dec
push
inc
adc
cltd
movsb
adc
lret
lahf
or
stos
jnp
xchg
jge
push
repz
or
xchg
and
iret
cmp
int
jl
mov
daa
aam
test
or
js
lods
cld
stos
pop
arpl
cli
mov
nop
sub
push
push
lock
in
or
dec
faddl
loop
sub
cwtl
je
divl
adc
jmp
movsl
xchg
int3
es
cmpb
and
adc
mov
push
xor
scas
int
imull
pop
xchg
fsqrt
scas
leave
sti
mov
and
stos
mov
lock
mov
fiadds
mov
fsubr
fs
rcrb
xchg
lret
and
pop
fldenv
scas
daa
xchg
std
sarb
enter
push
jnp
orb
xchg
dec
pop
stos
ret
adc
cmp
fmull
dec
adc
cmc
mov
xchg
and
sub
push
ret
fcompl
lods
adc
jp
mov
mov
leave
fistl
stos
and
xchg
jae
add
xor
in
fwait
sahf
and
cwtl
jne
lods
push
stos
or
pop
into
xchg
jecxz
loope
call
adc
sub
into
sbb
mov
rep
pushf
sub
sbb
stos
or
jge
shrb
xchg
lahf
dec
xchg
adc
sbb
mov
or
test
pop
mov
clc
test
sti
stos
mov
sbb
push
mov
iret
imul
sub
dec
xchg
stos
popl
mov
es
fwait
addr16
pop
or
mov
push
rcrb
push
movsb
cmp
movsl
repz
stos
shl
jp
mov
leave
fsubrs
xchg
dec
push
and
jmp
push
mov
push
in
jecxz
pushf
lods
cli
mov
js
jno
inc
sbb
fwait
jcxz
mov
xor
dec
mov
inc
xor
xchg
add
mov
add
dec
test
stos
sbbb
in
cmc
push
fldcw
mov
push
daa
stos
dec
xchg
test
jmp
iret
mov
adc
imul
das
adc
es
jo
xchg
stos
enter
les
xchg
pop
es
xorb
stos
xchg
mov
stos
mov
inc
mov
mov
andb
mov
mov
daa
push
fildl
jge
insl
daa
sub
cmp
es
xor
cmpsb
insl
jmp
outsl
dec
sbb
xor
and
lea
or
add
jns
cli
stos
in
mov
add
adc
xchg
or
cmc
and
xlat
movsb
xchg
pop
stos
push
stc
mov
cld
fisubl
jl
stos
xchg
mov
lea
xchg
jle
imul
jecxz
cs
aas
nop
and
mov
out
stos
fmuls
sbb
lcall
stos
insl
popa
add
test
mov
bound
sub
inc
mov
mov
and
mov
jae
lcall
mov
jge
jp
call
addr16
bound
xchg
fisttpl
inc
mov
shll
test
daa
xor
bound
mov
adc
jbe
sbb
shl
inc
cmpsb
das
ljmp
fmull
stos
insl
ja
push
adc
mov
stos
cmp
push
into
mov
and
or
pop
xchg
stos
jp
adc
fsubrl
cmp
inc
or
test
addb
mov
fwait
mov
stos
mov
jg
pop
stos
pop
sub
cmp
les
orb
or
out
push
mov
xchg
or
jmp
clc
fs
call
cmpb
stos
xchg
jg
jnp
ss
or
dec
orb
mov
lock
das
clc
push
jmp
mov
loop
sub
stos
mov
lret
inc
sbb
lea
repnz
scas
aas
sbb
inc
test
mov
mov
mov
nop
ljmp
adc
in
sarl
test
sbb
push
stos
lahf
outsb
orl
hlt
hlt
stos
stc
rorl
out
sub
daa
cmpsb
push
adc
mov
mov
stos
rorb
xchg
xor
sbb
push
xlat
popa
ss
mov
cld
add
pop
mov
adc
mov
mov
stc
cwtl
stos
jecxz
cli
ss
mov
stos
cmp
inc
dec
add
data16
dec
sbb
loop
adc
scas
fcmove
add
jbe
jecxz
cmpl
cs
stos
mov
aas
jmp
lods
stos
popl
cmc
imul
and
sub
add
and
jle
mov
out
movsl
stos
mov
aaa
call
and
stos
dec
inc
rcpps
cmp
in
cmp
mov
jmp
sub
fs
stc
mov
fbld
pop
adc
dec
ljmp
test
movsl
mov
call
mov
and
clc
sub
mov
or
stos
ja
lock
in
jle
add
out
aad
stos
lea
xchg
sbb
add
fcompl
sahf
jmp
add
rorl
stos
int3
out
bound
cmp
push
movsl
data16
pop
test
mov
sahf
sbb
mov
sub
mov
mov
stos
hlt
fdivrl
push
mov
mov
dec
inc
in
or
in
sub
out
nop
push
fwait
xorb
sbb
push
ss
jl
stos
pop
adc
loop
mov
jp
mov
inc
ss
add
mov
imul
ds
pop
xchg
rclb
fcom
insb
hlt
ret
or
stos
inc
jno
iret
jle
mov
test
out
lock
lret
mov
adc
xlat
movsb
fs
lret
in
movsb
outsl
pop
pop
cmp
outsb
mov
stc
imulb
xchg
dec
push
fbld
mov
cs
test
aaa
jg
xor
imul
std
cs
arpl
inc
mov
xchg
test
popf
push
in
out
inc
pop
xor
pop
stos
xchg
pushf
adc
pop
rcr
inc
stos
cmpsl
arpl
subb
inc
ret
adc
jbe
push
mov
mov
stos
out
iret
pushf
mov
stos
ss
push
jmp
sbb
lahf
pop
mov
jg
clc
push
push
or
mov
sbb
imul
scas
adc
or
cmc
and
lods
mov
mov
cmp
pop
or
pop
stos
roll
fisubl
mul
clc
cwtl
inc
jmp
and
sti
inc
in
mov
outsb
enter
rorl
lret
notl
xchg
sbb
imul
scas
xorb
aaa
popf
mov
daa
jge
add
ds
cli
iret
push
mov
stos
xchg
mov
cmpsb
inc
lods
pop
and
loopne
sbb
push
and
lea
aaa
nop
rorl
pop
inc
ret
push
in
pop
xor
dec
cmp
popf
sbbl
pop
outsb
lcall
mov
jge
jae
sbbl
stos
stos
insb
test
outsl
mov
fisubl
mov
lods
pushf
stos
in
test
dec
mov
fstpt
not
cld
repz
sub
stos
fstp
mov
jge
or
stos
sub
or
insl
scas
pop
stos
pop
adc
mov
test
mov
pushf
add
aam
es
mov
mov
jbe
stos
or
js
cmp
sbb
stos
mov
cmp
imul
push
mov
sub
ljmp
push
sbb
lahf
ja
aam
mov
in
adc
jb
or
mov
and
pop
movsl
rorl
and
sbb
add
cmp
ss
stos
dec
xor
out
jecxz
ret
stos
mov
call
push
stos
idivl
dec
xor
fdivs
mov
sti
mov
icebp
jno
pop
sbb
lret
cs
sub
push
into
orl
or
arpl
je
daa
cld
mov
inc
cmpl
mov
ret
stos
divb
in
xchg
ja
and
adc
jg
jnp
daa
popf
lcall
hlt
stos
sub
sbb
stos
lds
sbb
jp
in
xor
xor
pusha
fildl
or
dec
stos
xor
adc
adc
addr16
les
pop
dec
fwait
int3
pop
das
xchg
push
stos
int
dec
cltd
mov
add
mov
sub
out
js
sbb
mov
jb
push
xchg
popa
xor
rorb
js
stos
test
aam
stos
add
and
mov
push
xlat
push
in
adc
cmpsl
push
movsb
ret
fwait
pusha
repz
lock
aaa
cmp
mov
es
mov
mov
adc
cltd
cmp
add
or
out
add
pop
pushf
pop
sbb
inc
bound
aas
xor
ficompl
jle
stc
xchg
cld
stos
out
int3
mov
std
and
mov
push
outsb
mov
movsb
mov
mov
sbb
jmp
stos
les
jnp
ficompl
bswap
push
stos
push
adc
dec
cmpsl
stos
es
fistpll
insl
cmpsb
adc
xor
sub
dec
mov
mov
mov
test
jecxz
icebp
cmp
mov
ud2
sub
mov
pop
add
repnz
or
mov
scas
ficoml
xor
sbb
mov
lods
call
test
ljmp
xchg
jp
les
imul
daa
sbb
loop
int3
mov
mov
push
pushf
cmp
and
jns
pop
daa
cmc
adc
inc
rcrl
imul
stos
stos
fwait
mov
pusha
ss
cld
stos
mov
cwtl
icebp
sub
stos
rcll
cld
sub
stos
ret
jns
lret
lea
fldenv
pop
int3
stos
push
orb
sbb
je
gs
cs
dec
subl
cmp
ds
mov
ficomps
xchg
aam
jge
mov
pop
stos
mov
add
mov
insl
add
loope
scas
mov
sub
out
loopne
cwtl
pop
stos
xor
fdivrl
push
jmp
stos
jmp
cld
or
out
dec
and
push
sbb
sbb
hlt
stos
movsl
mov
jne
stos
cmc
xor
lds
clc
sub
xchg
push
addr16
push
sbb
adc
dec
xor
mov
sub
dec
cmp
aas
rolb
mov
sub
daa
bound
mov
rclb
mov
rolb
xchg
fcoms
imul
test
pop
cld
mov
sti
fwait
in
mov
out
pop
xchg
fwait
add
push
scas
stos
xchg
bound
or
clc
xor
mov
pop
push
loopne
xchg
xor
pop
aad
scas
stos
mov
sbb
push
cwtl
or
pop
mov
pop
dec
dec
lock
je
push
cmpsl
push
pop
cmp
dec
stos
pop
das
shl
out
mov
into
loopne
and
mov
pop
dec
sub
scas
lahf
cmpsb
in
mov
xchg
push
xchg
daa
loope
insb
mov
data16
dec
lcall
out
repnz
ljmp
xchg
sub
and
dec
mov
lods
sbb
lods
enter
adc
adc
mov
fisubrs
push
out
shrb
pop
pop
jg
inc
addr16
add
xor
aad
adc
mov
inc
fidivs
test
dec
fcmovnb
lea
cli
lock
xchg
xor
push
push
push
shrb
cmp
inc
sub
bound
mov
leave
clc
fcomps
stc
mov
sub
pop
loopne
xchg
push
or
sti
adc
push
and
lahf
stos
push
jmp
int3
stos
dec
stos
roll
stos
inc
pop
test
dec
fcmove
sub
cmp
test
jns
clc
cmp
das
orb
xchg
enter
sub
sub
movsb
sbb
jecxz
scas
push
out
sarl
dec
mov
add
stos
shll
adc
addr16
daa
in
push
xchg
inc
xchg
enter
push
pop
jmp
stos
mov
stos
cs
mov
cmp
mov
aaa
jg
cmp
add
fmulp
daa
sbb
ljmp
xor
jno
add
push
and
fimull
stos
andb
push
pop
les
stos
xchg
push
lret
adc
sub
stos
mov
into
imul
and
lret
mov
in
and
jmp
cmpsl
push
cwtl
cwtl
sbb
icebp
mov
mov
cld
aad
cmc
cmp
out
mov
adc
sti
dec
sbb
jno
push
push
xchg
lahf
daa
jmp
jmp
sbb
rcrb
mov
out
xchg
lods
shrl
xchg
mov
sti
stos
not
and
adc
movsl
shrb
bound
inc
cmp
cltd
cmp
mov
lret
out
stos
mov
bound
dec
pop
push
out
or
movsl
leave
les
outsl
fidivrs
cmp
and
sub
pop
xor
jmp
jnp,pt
mov
push
loope
or
rorl
xchg
adc
fldt
sbb
sbbb
fisubrl
mov
mov
mov
xlat
mov
or
jg
jmp
mov
stos
pushf
jmp
add
push
jmp
outsl
mov
cmpb
xchg
dec
mov
jbe
scas
lea
icebp
cltd
xor
jmp
jnp
adc
pop
mov
stos
push
mov
jbe
push
stos
lock
adc
xchg
loopne
cli
mov
sahf
dec
ret
test
pop
lds
movsb
inc
cli
lods
mov
cltd
shlb
movsb
xlat
cld
adc
pop
aaa
xchg
arpl
mov
mov
xor
push
dec
out
pop
sub
jbe
pop
push
lods
push
lcall
cmp
stos
xchg
ja
ljmp
ds
mov
stos
xchg
push
aaa
nop
fisubrs
loop
ret
push
lods
mov
daa
loope
sti
decb
stos
in
hlt
out
call
fdiv
int
dec
testl
jo
and
dec
gs
push
repnz
xchg
sub
stos
in
jle
stc
lret
dec
clc
stos
mov
and
das
stos
jp
dec
pushf
push
gs
mov
dec
xchg
push
xor
mov
cmp
pop
imul
mov
stos
sahf
pop
shlb
stos
leave
push
xchg
test
fstp
jae
mov
push
jno
jecxz
ss
xchg
jbe
clc
fnstsw
pop
out
xor
lock
rclb
adc
cmp
out
xlat
adc
xchg
cmpsl
sub
stos
push
sub
fs
mov
imul
addr16
dec
adc
test
jnp
stos
mov
adc
mov
arpl
popf
int
pop
stos
jo
fdiv
and
adc
hlt
or
mov
in
in
pop
dec
jg
mov
cld
fs
adc
mov
jp
inc
out
fwait
mov
lcall
or
test
or
shlb
sub
call
cli
pop
test
xor
mov
js
or
cmp
push
sub
dec
push
pop
mov
inc
cwtl
lret
out
mov
xchg
mov
dec
sub
push
ss
and
into
xor
aad
cmpsb
adc
arpl
lret
push
xchg
idivb
sbb
dec
rolb
gs
jecxz
and
mov
jmp
dec
je
out
cmp
movsb
or
in
mov
fwait
jl
mov
stos
inc
push
cmc
notb
pusha
mov
ret
adc
imul
sti
iret
mov
xchg
mov
ljmp
cmp
xchg
cltd
xor
add
stos
inc
rolb
and
xchg
int3
lea
stos
fidivrl
sbb
lods
sub
adc
xchg
test
in
mov
adc
sbbb
ret
stos
pop
cmc
movl
hlt
lods
je
push
mov
popf
into
stos
mov
mov
and
cmp
lahf
cli
ja
insb
mov
pop
push
mov
xchg
add
push
aad
bound
or
mov
das
mov
mov
into
cmp
xchg
add
mov
iret
nop
push
jg
xor
or
stos
add
sbb
js
mov
stos
or
imull
mov
inc
rcrl
les
mov
xchg
out
fildl
xchg
rorl
jmp
std
stos
cmp
lods
xchg
clc
hlt
sbb
inc
mov
xor
mov
idivb
push
mov
dec
stos
push
or
dec
fdivl
fsubrs
dec
adcb
lods
jge
cld
shrl
fsubrl
stos
lret
loope
push
rcl
add
out
shll
pop
jb
outsl
add
stos
and
lcall
shrl
pop
stos
test
and
in
shlb
add
pop
in
stos
cmp
adc
negl
pop
stos
cmp
xchg
aad
cmp
pop
pop
into
cmp
test
mov
fwait
pop
cwtl
imul
popl
mov
stos
in
pusha
lahf
out
mov
xchg
xchg
idiv
lds
outsb
and
mov
xor
sub
jb
insb
dec
inc
int
stos
lcall
dec
cs
ss
xlat
xchg
stos
dec
inc
or
out
dec
stos
test
addr16
and
in
cltd
test
lods
pop
mov
stos
pop
int3
jb
pop
cli
add
loop
hlt
jno
lods
test
xchg
nop
ret
loopne
dec
sub
mov
jecxz
push
fs
cmp
adc
lods
or
pop
sbb
hlt
cld
lock
sub
rcll
addr16
jo
jl
fmull
mov
ficomps
mov
inc
inc
push
and
xchg
rorl
out
subl
lock
push
xchg
js
or
nop
xor
dec
stos
jo
xchg
mov
mov
mov
ret
adc
stos
test
pop
cltd
mov
cld
lods
jmp
mov
imul
adc
popf
hlt
inc
daa
push
xchg
inc
ds
imul
push
ljmp
fwait
aad
ja
data16
mov
test
push
xchg
pop
stos
xor
push
mov
jp
bnd
mov
jge
dec
xchg
stos
rcl
cmc
ja
mov
test
stos
or
js
rep
mov
inc
push
mov
cmp
cmp
cmovp
imul
xchg
jns
inc
imul
add
aam
int3
fucom
fimull
nop
scas
ret
jge
sub
xor
or
stos
and
jmp
add
repnz
dec
add
pop
lcall
dec
js
clc
je
mov
stos
stos
cwtl
cmpsb
shl
addb
mov
xchg
mov
sub
cld
sub
sub
insl
jg
les
in
mov
sub
aam
mulb
xchg
inc
les
or
xchg
stos
scas
out
dec
orl
imul
shr
mov
lret
hlt
push
mov
pusha
enter
cmpsb
int
rorl
sti
movsb
jl
int3
pop
adc
mov
mov
cmpsb
sub
popa
inc
dec
xchg
stos
or
in
sti
xlat
add
imul
jle
push
stos
shr
aas
ljmp
push
leave
je
sbb
adc
xor
rcrb
or
mov
out
stos
mov
nop
jno
addr16
mov
mov
pop
or
add
xchg
inc
shrl
xchg
gs
in
imul
pop
sbb
lret
xchg
lcall
inc
xor
int3
pop
stos
push
repnz
mov
add
xchg
and
xchg
mov
stos
xchg
xor
push
int3
mov
push
push
repz
sbb
in
adc
leave
out
mov
stos
mov
js
into
or
lds
aam
jnp
addr16
xor
rcl
iret
cmpsb
cwtl
stos
jno
pop
popa
cs
repz
mov
movsb
xor
pop
xchg
loope
adc
adc
lods
mov
in
out
ss
add
jno
outsb
sub
and
xchg
fwait
mov
inc
lods
jmp
xchg
push
in
jo
arpl
orl
testl
and
and
sbb
imul
stos
div
mov
sbb
imul
stos
pop
add
pop
pop
stos
aam
and
addl
sbbb
or
sub
lock
and
fists
mov
imul
leave
arpl
dec
loopne
lds
inc
xor
hlt
daa
mov
xlat
stos
or
shrb
rorl
sbb
xor
stos
cmpsl
inc
repz
lds
stos
fldlg2
mov
fisttpl
cmpsb
cmp
mov
mov
adc
stos
faddl
call
flds
ret
jnp
stos
fildll
xor
mov
and
stos
pop
out
insl
push
sarb
daa
int3
popf
cltd
inc
xchg
add
jbe
lcall
push
dec
data16
dec
mov
stos
xchg
pop
or
cltd
insb
adc
aas
xchg
and
fucomip
dec
sbb
add
add
and
stos
mov
mov
stos
dec
insl
insb
dec
xor
ret
loop
jae
addr16
loopne
lds
or
xor
and
lret
lds
es
scas
dec
fwait
dec
stos
adc
cli
xor
mov
sub
in
sbb
outsl
jnp
call
push
add
mov
aaa
neg
ljmp
pop
fldt
call
in
mov
insb
imul
push
stos
mull
cwtl
dec
xor
lret
sti
inc
stos
jle
inc
lcall
sub
pop
icebp
jbe
mov
hlt
cltd
jo
mov
jb
adc
stos
sbb
sbb
cmp
sbb
or
sbb
cmpsl
xor
outsb
mov
imul
push
imul
fwait
jno
dec
mov
js
stos
mov
scas
stos
sub
pop
repnz
push
mov
es
mov
cmp
and
push
cltd
out
adc
and
add
lods
mov
sbb
xchg
jmp
add
xchg
jns
inc
mov
icebp
das
nop
repz
stos
insl
xchg
imul
cmp
adc
or
xchg
add
mov
stos
push
int3
sbb
cmp
outsl
mov
mov
fcomps
pop
les
lods
mov
xchg
xor
pop
push
mov
stos
pop
fsubrl
and
stos
std
push
adc
push
in
clc
stos
or
or
xor
fmulp
mov
cltd
cmp
pop
stos
test
fildll
push
dec
pop
inc
stos
mov
movsl
lret
out
stos
pop
jl
loop
cmp
lahf
jl
lea
out
mov
loopne
cwtl
push
adc
cld
lcall
pop
push
imul
ljmp
mov
mov
mov
and
cmpsl
sub
jl
lock
stos
sub
decl
dec
inc
fisubrs
sub
cld
jge
xorl
dec
fwait
jle
sub
lcall
dec
movsl
mov
push
jbe
sub
jl
test
aas
or
stos
pop
popa
jno
cmp
leave
push
mov
sahf
orb
pushf
gs
jmp
xchg
add
xlat
mov
stos
ss
cmp
mov
popf
mov
jge
jae
leave
sbb
mov
pop
ds
stos
and
xchg
pushf
ficoms
stos
sbb
sub
stos
mov
and
xor
pop
stos
mov
pop
into
pop
and
push
popf
xor
and
xchg
mov
push
mov
loopne
sub
jmp
mov
adc
jnp
xor
subb
sub
xchg
cwtl
mov
or
jmp
cmpsl
aad
ds
sar
push
pop
cmp
faddl
xor
stos
inc
stos
das
sub
in
cmpsl
stos
lds
pop
ds
ret
inc
jp
stos
in
xor
xchg
aas
mov
out
inc
push
ret
lods
mov
mov
pushf
mov
and
ljmp
int
mov
inc
stos
pop
shl
out
dec
sbb
fistpll
sar
mov
stos
das
push
cs
jne
mov
hlt
cmp
mov
daa
das
sti
repz
fwait
imulb
ret
push
mov
add
xchg
stos
add
mov
mov
stos
popf
rcrb
stos
or
sahf
loopne
stos
shr
fdivs
repz
test
jecxz
sub
push
push
add
and
xchg
adc
pop
mov
mov
or
or
outsb
lahf
mov
fnstcw
push
imul
stc
xchg
rol
mov
lods
mov
mov
cli
stos
es
xchg
xor
stos
loop
cmp
lods
mov
inc
and
push
imul
or
loopne
mov
pop
shrb
mov
aam
sub
shrl
lcall
les
out
or
mov
stos
push
mov
inc
fsubs
xchg
sub
jp
inc
mov
stos
cmp
mov
stos
mov
or
icebp
jmp
fwait
in
aas
pushf
adc
fstps
cli
andl
cmp
push
inc
iret
jp
stos
add
pop
or
xlat
arpl
stos
mov
cltd
ret
sbb
or
sbb
in
imul
ficoml
mov
scas
idivl
out
andl
lods
or
jb
jmp
mov
pop
jno
or
mov
cmp
sbb
push
mov
cld
mov
jmp
add
in
mov
ljmp
pop
fnsave
notl
inc
mov
test
push
scas
mov
jmp
sub
stos
xor
hlt
dec
mov
aad
inc
xchg
mov
xchg
shrl
sarl
push
in
dec
mov
mov
leave
lods
and
inc
out
test
or
aaa
stos
lea
jns
stos
add
or
stos
mov
arpl
cmpsl
and
imul
decl
out
lods
jp
jecxz
hlt
dec
enter
popf
push
in
mov
div
lahf
push
cmpsl
clc
stos
lods
cmp
xchg
fildl
fs
js
mov
cmp
test
inc
inc
and
out
stos
loop
pop
lods
js
ret
inc
arpl
daa
mov
cld
lahf
rclw
call
fcoms
addr16
cmpsl
aas
jp
stos
call
push
popf
loop
cmp
adc
cmc
enter
adc
mov
push
stos
adc
pop
sarb
lods
mov
adc
xor
adc
add
aad
pop
js
lods
mov
pop
in
mov
inc
popf
jmp
mov
stos
rcll
adc
inc
adc
push
jle
jl
and
push
sbb
adc
js
dec
push
pop
hlt
stos
imul
stc
imul
cmpsl
dec
or
les
stos
int
pop
pop
stos
gs
nop
incb
stos
and
sbb
push
stos
xor
xchg
jns
cmp
iret
leave
pushf
xchg
mov
mov
and
push
dec
pop
jae
lods
mov
mov
pushf
pop
jnp
mov
adc
sbb
jno
sub
fcomps
push
loop
shrl
sbb
stos
fwait
adc
and
add
fldt
loopne
cltd
arpl
jbe
cmp
test
cmp
mov
lahf
sub
inc
jmp
rcll
outsb
scas
stos
pusha
mov
in
call
add
fwait
iret
jmp
inc
mov
out
or
daa
xor
xchg
inc
arpl
insl
scas
sbb
ss
mov
in
fwait
or
lds
stos
jecxz
mov
sbb
inc
xchg
mov
imulb
aad
bound
cs
inc
lods
pop
stos
fadd
out
xchg
mov
std
leave
pop
stos
cld
xor
lret
mov
sub
mov
xchg
pop
fsubrs
inc
inc
lahf
stos
inc
out
cmp
push
cmp
stos
daa
push
jecxz
ja
jl
std
xchg
and
or
cmc
les
or
fisttps
popa
dec
add
mov
sbb
mov
jmp
jle
sbb
mov
xchg
stos
mov
out
imul
out
cmpsl
and
jl
mov
adc
lahf
sub
cmp
stos
popa
fisubrs
jl
imull
jno
imul
inc
mov
mov
fldt
inc
std
mov
cwtl
mov
xor
sbb
in
xchg
nop
xchg
mov
jno
push
mov
mov
sub
ja
or
rcl
daa
shl
in
js
iret
pop
and
xchg
mov
sbb
lea
stos
inc
aad
add
cmp
in
into
and
jmp
jmp
or
mov
ret
mov
std
mov
add
xchg
stos
loopne
push
scas
cmp
je
stos
cmp
mov
or
jbe
clc
stos
rcrb
jmp
xor
cltd
das
ret
jnp
pushf
js
sbb
stos
push
push
sahf
push
or
lock
mov
stos
and
cmpsl
inc
hlt
stos
mov
mov
loopne
push
lods
lret
adc
mov
loop
inc
daa
or
mov
jmp
stos
mov
aad
bts
add
fstpl
xchg
push
fisubrl
je
scas
lret
mov
fwait
mul
sub
mov
movsl
cmpsb
mov
and
shrb
jmp
pop
dec
stos
jg
pop
gs
cmp
stos
pop
enter
xchg
mov
loope
and
imul
stos
add
jo
mov
mov
cmp
mov
and
out
pop
xor
or
int3
or
stos
push
push
test
xchg
mov
fldl
subl
shrb
xor
pop
stos
mov
jno
aas
mov
cmp
stos
in
fnstcw
adc
xchg
mov
arpl
cld
hlt
fwait
lods
sub
adc
xchg
insb
push
xchg
xchg
or
stos
mov
sub
lock
test
jno
rcl
push
jbe
gs
mov
jl
iret
sbb
rcrb
xchg
dec
lea
sub
mov
xchg
idiv
mov
mov
or
mov
xchg
push
movsb
jne
insb
mov
and
add
mov
cltd
rep
and
xchg
jge
cld
sub
shlb
add
stos
dec
popa
or
push
ds
rcll
jmp
stos
lods
mov
outsl
pop
stos
ljmp
rep
xor
leave
es
in
cld
adc
jbe
add
or
stos
mulb
orl
test
enter
mov
add
cwtl
and
add
mov
push
mov
mov
push
stos
mov
fmul
inc
inc
xchg
xor
xor
push
pop
imulb
sbb
cmpb
jb
dec
jmp
cld
pop
lock
sarb
insl
fcomps
adc
sub
cwtl
loopne
loop
fs
stos
cmpb
std
stos
adc
ret
pop
stos
imul
push
movsb
outsl
pop
rorl
pusha
int3
xchg
fildll
pop
and
out
stos
insb
cmp
outsl
sub
sub
test
cmp
xchg
scas
cmp
ror
stos
dec
fiaddl
in
fwait
or
push
out
pop
adcl
add
lock
cmp
sarb
ldmxcsr
cmpsb
mov
pop
push
scas
jbe
mov
mov
push
push
repnz
stos
arpl
cmp
in
stos
aam
stc
mov
and
fstpt
test
jb
pop
xchg
ret
sbb
adc
in
mov
add
lods
pusha
jae
mov
xchg
push
jo
inc
mov
jnp
adc
pusha
rcll
loope
scas
pop
mov
ret
or
rcrl
mov
aas
stos
pop
sbb
push
imul
dec
stos
es
pop
inc
mov
pop
pop
xchg
sbb
adc
add
xor
pop
stos
bound
int
jae
ret
shlb
sub
outsb
movsw
mov
sub
das
ljmp
stos
repz
cli
xor
out
sub
jae
movsb
out
std
and
in
add
push
dec
subl
imul
fwait
aas
gs
scas
cmp
movsl
addr16
rclb
stos
cmp
popf
cs
mov
sahf
or
and
add
stos
loope
mov
jne
xor
cmp
aad
addr16
or
push
stos
mov
dec
in
iret
por
mov
shll
or
push
arpl
and
dec
popf
mov
or
out
lcall
or
pop
mov
mov
stos
in
movl
jl
inc
movsb
jg
mov
push
cmpsl
dec
dec
cmp
jmp
dec
mov
mov
mov
mov
stos
push
or
daa
jne
mov
lahf
rorb
cmp
out
cmp
and
jno
test
mov
mov
call
pop
mov
insb
test
xchg
and
mov
inc
andb
cltd
scas
rcrl
divl
jb
lods
cmpsb
leave
jmp
add
inc
sti
std
jnp
jbe
stos
imul
nop
lahf
mov
data16
jmp
fwait
mov
add
mov
push
sahf
cmp
stos
jge
fimull
mov
hlt
jns
stos
inc
jle
mov
jb
lods
jne
add
mov
xchg
mov
lock
mov
stc
movsb
xchg
push
adc
push
push
shrb
mov
shrl
lds
repnz
iret
fnsave
dec
stos
sub
and
outsl
mov
lods
inc
stos
insb
pop
daa
cmc
ja
in
cld
sub
lahf
enter
xchg
ds
jne
and
js
fwait
stos
cs
xchg
lcall
jp
jge,pn
in
or
cmc
imul
shrb
enter
imul
cwtl
jmp
notl
mov
push
dec
xchg
cmpsl
repz
aaa
mov
sbb
mov
xor
xchg
imul
adc
cld
stos
dec
pop
add
stos
or
fwait
movsl
loopne
pop
adc
and
pop
arpl
popf
add
xchg
jge
mov
leave
mov
mov
stos
sub
in
sar
mull
imul
fisttpll
xor
lds
pop
lock
dec
push
mov
hlt
inc
lcall
jle
out
pmullw
fisubrs
xchg
cmpsb
sub
stos
mov
dec
stos
push
inc
push
ljmp
jmp
cmpsb
nop
push
mov
and
dec
stos
and
inc
cltd
es
arpl
and
adc
jmp
cmp
insl
sub
stos
sub
cmp
push
sub
scas
mov
dec
jbe,pn
mov
stos
nop
lds
mov
iret
stos
dec
and
push
stos
lret
pushf
push
push
dec
lcall
inc
xchg
clc
sbb
cmpsl
mov
mov
movsl
subl
inc
push
fwait
repnz
sub
jmp
mov
cwtl
rorl
cmpb
cmp
xchg
mov
stos
jb
pop
or
cmp
xchg
mov
mov
push
pop
loope
mov
xor
in
ja
sbb
out
fwait
sub
dec
outsb
lret
mov
or
jns
push
mov
xor
stos
dec
mov
insb
fstpl
cmp
adc
cmp
inc
mov
stos
stos
decb
test
arpl
push
stos
or
cs
stos
aam
dec
jne
xchg
sub
stos
sbb
sahf
call
xchg
pop
or
add
stos
aas
test
out
aam
push
sbbl
imull
arpl
mov
stos
popa
repz
enter
sub
dec
jae
cli
ljmp
cmpsl
sbb
mov
xchg
insb
stos
imulb
nop
add
orl
xchg
add
dec
out
rcr
mov
lret
or
add
sub
out
mov
inc
jmp
or
add
mov
outsb
pushf
add
pusha
sub
sahf
mov
xchg
xor
jl
rep
je
scas
mov
cmpsb
push
pop
ds
test
mov
cmc
mov
mov
scas
std
jecxz
jne
jle
stos
add
dec
inc
cs
stos
adc
insl
subb
push
lahf
dec
stos
sub
cmp
stos
push
fnstsw
data16
lret
ficomps
dec
shll
dec
lods
sqrtps
js
shl
mov
xorb
add
jo
stos
push
sub
xchg
cld
test
stos
je
cmp
stos
fwait
aam
cltd
push
pop
cmp
stos
pop
in
outsl
stos
lret
rcr
mov
stos
pcmpeqw
adc
lock
jmp
mov
lods
dec
das
stos
jecxz
and
shrl
and
cmp
xor
pop
mov
out
mov
mov
lds
or
jecxz
xor
jns
enter
dec
addr16
mov
fisubs
jno
lret
fwait
out
repnz
nop
stos
jb
dec
or
xchg
loopne
stos
push
cmp
jne
stos
fisubl
mov
pop
lret
and
push
inc
mov
scas
push
adc
lea
ret
lods
sub
sbb
mov
loope
pop
lret
stos
pop
rolb
lods
call
fwait
xchg
out
mov
jecxz
std
jns
mov
jmp
inc
xor
in
xchg
push
jmp
sti
orb
or
neg
xor
mov
hlt
fsubs
jnp
stos
push
aas
fwait
sub
adc
imul
cmp
fdivl
xor
pop
dec
inc
stos
idivl
cmp
push
lret
adc
adc
xchg
mov
adc
stos
fistps
in
push
sub
jmp
outsb
sbbl
scas
movsb
xchg
xchg
add
cmp
dec
repz
in
fwait
push
mov
mov
stos
jns
loopne
xchg
insl
nop
in
ret
cltd
fistpl
xchg
mov
mov
stos
xor
movl
out
test
push
mov
loope
shrl
and
inc
div
jp
fs
stos
pop
dec
or
adc
ficompl
out
stos
push
lea
arpl
cmp
or
mov
js
cli
sub
leave
clc
arpl
and
sub
mov
adc
sti
xchg
pop
xor
jge
xorl
stos
pop
sbb
int3
roll
imul
sub
dec
mov
and
mull
adc
stos
or
test
cmp
xchg
imul
xchg
sbb
jne
and
or
jmp
sbb
dec
cwtl
mov
push
loopne
xchg
pop
insl
dec
addr16
loope
adc
hlt
xchg
mov
std
and
stos
ds
jmp
stos
int
mov
or
mov
sbb
lret
fs
add
xchg
mov
stos
in
or
pop
stos
fldl
push
sub
lcall
pop
mov
mov
xchg
add
xchg
cmp
add
sbb
rcr
and
in
sub
mov
stos
mov
push
push
push
arpl
xor
in
lcall
or
inc
stos
xchg
mov
adc
int3
sbb
mov
mov
scas
divl
adc
incl
or
and
cli
xor
jns
push
arpl
fistpll
in
sbb
pop
scas
lods
negb
push
mov
pop
les
andl
stos
sbb
push
stos
adc
jo
and
js
imul
xchg
loopne
int3
add
aam
pop
sbb
outsb
xchg
loope
mov
push
aas
xor
scas
push
fimuls
sbb
stos
addr16
movsl
dec
dec
mov
stos
cld
scas
sbbb
push
mov
es
mov
jmp
and
rolb
push
mov
fisubrl
ja,pt
xchg
stos
in
gs
stos
xor
mov
inc
xlat
cmp
stos
imul
cld
in
inc
cmp
std
sub
mov
mov
stos
jbe
data16
xchg
or
xchg
adc
jmp
jl
pop
xchg
inc
or
mov
xchg
and
stos
sub
in
sti
pop
lods
stos
inc
add
cmpsb
jl
insl
mov
mov
stos
push
inc
aaa
sub
rcr
push
stos
xchg
leave
jbe
inc
fadd
stos
sbb
insl
pop
in
shrb
push
cli
adc
popa
loope
dec
jecxz
stos
jbe
data16
and
xchg
and
fucomi
cmp
shrl
add
xor
test
cmp
add
push
adc
inc
imul
test
ds
stos
pop
lret
add
pop
push
js
stos
cmpsb
xor
lcall
pop
push
sbb
stc
outsb
cmp
mov
xchg
xor
push
mov
stos
rolb
xchg
push
or
mov
cwtl
insb
decb
sbb
stos
pop
mov
and
stos
mov
xchg
add
stos
adc
imul
sar
jmp
aam
stos
dec
outsl
mov
fwait
mov
cmp
in
mov
clc
xchg
data16
cmp
adc
stos
or
mov
mov
xor
pusha
mov
jb
mov
cmp
mov
mov
stos
in
push
bound
addr16
rclb
stos
or
cmp
imul
ljmp
lods
fildl
stos
xchg
pop
out
cmp
mov
in
mov
mov
dec
pop
push
cmc
add
mov
lods
lds
gs
test
push
icebp
sub
mov
fcomps
out
lret
daa
pusha
nop
loopne
mov
rcll
and
mov
jle
mov
cmpsl
daa
mov
icebp
stos
in
fisubrl
fistpl
int3
mov
mov
and
loope
movsl
nop
hlt
stc
int3
ds
ret
iret
xor
adc
jge
stos
pop
dec
mov
ds
ret
or
push
dec
stc
stos
aaa
jle
js
add
outsl
lds
push
jecxz
jb
cmp
xchg
cmpsl
xor
mov
adc
inc
lret
or
pop
xchg
add
in
addr16
imul
pushf
stos
sti
outsb
mov
pusha
sbb
xchg
jne
repnz
popl
shrb
add
pop
push
pop
add
add
jmp
sbb
xchg
stc
stos
sbb
push
pop
stos
pop
insl
aas
roll
dec
jbe
stos
add
in
fsubs
lods
sub
xor
push
jmp
stos
movsb
mov
jge
popa
hlt
out
ds
stos
mov
add
jp
pop
mov
lret
ja
adc
movsb
mov
pop
stos
jg
repnz
fscale
rolb
test
mov
add
or
mov
adcl
fidivrl
stos
inc
add
call
adc
out
jmp
insb
cli
mov
sbb
cmp
iret
sbb
mov
mov
stos
mov
push
push
or
dec
hlt
stos
cmpsl
dec
inc
cmp
outsb
loop
subb
push
and
dec
inc
or
push
nop
cmpl
xchg
adc
insl
imul
nop
stos
pop
sbb
clc
jns
xchg
test
addr16
add
scas
sti
jne
stos
jmp
adc
flds
stos
xchg
mov
stos
pop
jge
and
jl
stos
sbb
xchg
aam
dec
mov
xor
stos
inc
scas
in
mov
cmpsl
mov
ljmp
cli
or
cmp
adc
popa
inc
fs
idivl
push
jns,pn
out
xchg
aaa
and
dec
cmc
jl
xchg
xchg
cmpsb
mov
mov
dec
test
mov
stos
stc
mov
xlat
addr16
inc
push
stos
ret
rcrb
or
mov
cmp
stos
mov
imul
stos
sbbl
rol
cmp
add
and
or
stos
or
fcmovnbe
mov
cltd
mov
loop
stc
jecxz
adc
mov
jmp
stos
pushf
int
cld
xchg
stos
push
adc
sbb
stos
xchg
fwait
mov
in
movsl
in
xor
mov
out
jmp
and
xor
loopne
lods
cmp
enter
mov
xor
xchg
xchg
subb
xchg
vpmacsww
add
mov
xchg
aas
fisubs
cmp
int
push
es
cmpl
stos
dec
mov
fsubrs
and
filds
sub
jb
sbbb
js
xchg
fsubl
sbb
stos
jno
icebp
mov
stos
adc
sahf
scas
int
fscale
jo
lret
lock
stos
dec
ljmp
adc
sarb
inc
cld
mov
cs
xor
stos
dec
adc
mov
mov
xchg
xchg
dec
scas
dec
leave
stos
inc
jp
vcvtpd2dq
inc
push
pusha
ss
ficoms
dec
fistpl
imull
popa
stc
inc
rolb
jge
xchg
mov
fmuls
call
sub
es
icebp
das
popa
xorl
mov
mov
rcrb
jmp
dec
fimull
ret
scas
stos
inc
jmp
add
add
xchg
sub
orb
mov
xchg
test
arpl
add
xor
es
or
fnstsw
sub
stos
into
cs
pop
incb
inc
cmp
stos
insb
or
add
stos
mov
and
inc
ficoms
sbb
adcb
mov
xchg
fdecstp
jae
bound
clc
pop
ret
rep
dec
in
mov
fsts
dec
or
cmp
adc
mov
dec
mov
sub
push
inc
lret
sub
mov
dec
iret
negb
push
push
add
or
xchg
cmp
insl
jb
mov
loopne
push
jbe
scas
add
imull
mov
icebp
ret
inc
stos
jmp
dec
fs
and
jl
test
ret
clc
leave
pop
xchg
in
push
add
xchg
icebp
mov
mov
shrb
scas
or
nop
lods
pop
scas
xchg
stc
mov
arpl
mov
jbe
and
xor
lods
xchg
inc
fistpl
stos
out
and
jne,pn
xchg
frstor
in
imul
das
xchg
sti
shr
mov
mov
lret
fiadds
stos
jmp
inc
ss
gs
roll
or
xlat
ljmp
jno
xor
stos
mov
in
xchg
pop
inc
jmp
stos
xor
lds
mov
pop
leave
out
fwait
adc
mov
mov
add
test
cmpsb
sti
mov
outsb
cli
or
jp
stos
movsb
jmp
or
adc
pop
in
inc
stos
xchg
test
inc
sbb
js
sub
es
roll
mov
lcall
fs
lds
pop
lock
fnstsw
stos
and
arpl
mov
rorl
lock
aam
test
fimull
jge
testl
outsb
mov
lahf
hlt
popf
sbb
xchg
aam
add
pop
stos
sub
cmc
gs
jp
daa
stos
cltd
dec
cmpsb
fisubrl
mov
pop
mov
cwtl
in
xor
lea
dec
jae
jecxz
cmpl
jp
mov
xor
pop
imul
addr16
sarl
pop
push
in
sbb
dec
adc
xchg
xchg
add
fs
add
test
mov
mov
jl
cld
cmp
scas
mov
lret
xchg
xor
or
sub
jge
jmp
in
or
pop
xor
jmp
push
pop
xchg
pop
callw
sbb
jl
in
stos
push
adc
dec
sbb
imul
dec
inc
fldt
or
dec
mov
mov
xor
sub
xchg
or
bound
aas
popl
xchg
ljmp
rcll
jmp
sub
cltd
testl
cmp
cmp
xor
lea
mov
stc
pop
mov
ljmp
lea
xor
movsb
dec
es
decl
jbe
decb
inc
hlt
arpl
adc
sub
in
sbb
test
lds
push
mov
xchg
loop
hlt
pop
addb
stos
insl
jp
fs
sub
xchg
outsl
adc
pop
stos
mov
fadds
cltd
dec
imul
and
cmp
insb
stos
or
adc
jb
outsb
cltd
and
push
mov
push
mov
add
pop
or
mov
mov
gs
hlt
inc
roll
cmc
lea
out
xchg
imul
mov
shrl
stos
jb
push
mov
arpl
std
fsubr
stos
mov
int
stos
pop
sbb
orb
stos
lds
mov
gs
pop
mov
pushf
stos
loopne
push
inc
pop
stos
add
add
xor
mov
popa
fwait
adc
xchg
mov
dec
mov
rcl
stos
push
cmp
in
ds
xor
arpl
xor
lcall
mov
stos
cwtl
rcll
jmp
sub
loopne
sbb
sub
in
adc
xor
lds
cld
dec
daa
mov
push
insl
lcall
and
stos
aaa
out
xchg
mov
stos
mov
sbb
hlt
jno
add
dec
mov
test
ds
lea
daa
fwait
incl
fwait
push
out
mov
sbb
mov
sbbl
lahf
pop
ret
sub
push
int3
rep
lea
or
cmp
nop
dec
int3
dec
stos
sub
jecxz
leave
scas
adc
stos
sbb
gs
dec
rol
add
xchg
jge
sub
xchg
arpl
mov
dec
jns
pop
xchg
fwait
inc
inc
ljmp
ja
add
stos
xchg
and
insb
sbb
mov
stos
sbb
sub
jle
cmp
test
jmp
lock
cmp
inc
jmp
leave
cld
das
adc
rol
mov
mov
in
add
pop
or
in
lea
stos
or
sub
repz
shrl
ret
sub
test
mov
daa
mov
mov
stos
nop
call
inc
int3
push
push
and
mov
add
lret
js
cmpsl
stos
test
xchg
cld
lcall
leave
and
ret
xor
stos
int
dec
cld
mov
gs
adc
movsl
pushf
movsl
test
stos
sahf
adc
cmp
or
mov
mull
dec
jbe
pop
movsl
stos
dec
adc
rolb
pushf
add
pop
mov
sub
scas
sbb
stos
dec
add
movsb
jmp
inc
or
sahf
leave
out
shlb
push
lods
cli
test
mov
std
jmp
xchg
je
sbb
pop
dec
punpckhdq
sbb
ret
les
int3
ja
pop
rcrb
jl
xor
dec
xchg
inc
arpl
jae
jns
stos
outsb
mov
popl
jb
in
lret
or
shlb
push
mov
stc
xchg
int
push
sti
cltd
jno
push
cmpsb
insl
mov
sub
je
push
nop
pop
cmp
loopne
addr16
pop
and
cmp
mov
pop
out
jbe
mov
mov
in
cmp
mov
aad
iret
sti
in
stos
jge
daa
push
dec
clc
scas
jecxz
lds
test
and
lods
mov
sub
inc
push
stos
movsb
and
inc
fwait
push
in
xchg
stos
lahf
lods
das
ljmp
stos
es
cmpl
in
xor
stos
cmp
mov
push
pop
pop
cltd
fnstenv
dec
jmp
cmp
adc
outsl
cs
dec
inc
pop
or
aad
jle
insl
outsl
stos
fcmovnb
push
cmp
xor
aas
sbb
mov
int3
dec
pusha
sbb
lods
out
dec
stos
or
fwait
sbb
rcr
je
mov
ss
outsb
into
inc
cmp
sbb
cmp
pop
fisttps
cld
stos
jle
mov
pop
stos
jmp
enter
xchg
or
fisttpll
mov
js
xor
stos
dec
sbbb
loope
rcrl
jl
lret
inc
dec
bound
ret
sahf
in
adc
stos
xor
mov
ss
push
lods
int3
mov
dec
iret
stc
and
ljmp
adc
pop
sbb
inc
inc
int
stos
fimuls
add
outsl
mov
loopne
mov
push
lahf
into
jb
ds
stos
adcb
rorl
cli
stos
adc
push
mov
pushf
es
or
ljmp
xor
sbb
xlat
push
or
dec
dec
pop
lret
mov
pop
aad
jmp
inc
mov
xchg
mov
shll
xor
outsl
subb
or
xchg
imul
mov
stos
sub
in
adcl
stos
mov
xchg
dec
js
sbb
and
lods
xchg
push
jno
mov
in
dec
pop
loop
test
jne
inc
clc
in
and
ds
ss
sub
pop
outsl
push
aam
mov
or
dec
ss
lret
sti
shrl
cmpl
jmp
sbb
imull
cmp
mov
arpl
inc
int3
sbb
xchg
jl
hlt
sbb
sub
xchg
mov
add
dec
mov
imul
mov
inc
in
std
xorl
pop
data16
les
mov
rcll
cmp
push
stos
out
jle
imul
pop
sub
fwait
jno
xor
inc
arpl
loope
inc
pushf
and
jae
aam
stos
cmpsb
cmpsl
lods
clc
jno
mov
jl
pop
mov
or
ss
stos
jl
out
jp
inc
shll
xchg
push
rorb
cmp
es
adc
xchg
fistpll
mov
mov
fisubs
add
jecxz
xchg
in
mov
jge
sbb
aad
jns
stos
stos
clc
sti
outsb
add
jge
addr16
mov
mov
stc
out
pusha
mov
rolb
bound
fidivrl
stos
mov
sbbl
shlb
mov
out
inc
stos
mov
inc
mov
push
lock
inc
fisttpl
cwtl
in
aad
jmp
popa
mov
mov
cld
cmp
pusha
lret
scas
mov
or
cmp
xor
das
dec
jno
pusha
fwait
add
jmp
shlb
add
jp
pop
xchg
pushf
xchg
in
out
daa
sub
inc
sbb
cltd
add
lds
and
mov
stos
int3
and
loopne
es
jl
push
push
cltd
aaa
mov
pop
pop
add
stos
dec
jle
inc
sub
xchg
in
adc
cld
xchg
ds
dec
xchg
movsb
stos
addr16
test
pop
icebp
sub
dec
jl
stos
sbb
sbb
rorb
stos
jp
lods
jb
daa
sub
stos
push
add
dec
adc
add
cltd
xchg
sahf
insl
stos
sar
and
out
jecxz
mov
out
pop
push
ljmp
mov
mov
sub
push
dec
jge
stos
insl
jp
mov
cmp
aas
nop
lret
xor
dec
push
mov
add
push
inc
xchg
mov
add
movsb
in
rcr
mov
sbb
mov
lahf
or
addr16
fnstsw
xchg
es
adc
movsbl
and
movl
dec
in
mov
imul
add
lcall
int
out
jo
xchg
arpl
add
aaa
xchg
loop
push
movsl
add
imul
pusha
lahf
cmp
stos
mov
sbb
or
leave
gs
or
scas
lods
xor
fildll
jmp
sub
push
push
in
movsb
fwait
inc
mov
dec
pop
shrb
stos
add
inc
into
push
inc
rcl
mov
cmp
stos
les
xchg
xor
push
jo
sti
fdivrl
jae
add
jb
lret
ret
jecxz
push
push
stos
mov
jnp
stos
pop
imul
stos
mov
fsubl
lahf
xor
icebp
pop
xchg
lds
stos
push
or
cwtl
jo
add
stos
es
cli
sti
or
ret
xor
add
cmpsl
repnz
stos
lock
insb
push
jo
movsl
mov
sbb
xchg
sub
ret
lret
stos
out
cwtl
mov
je
test
pusha
cltd
xchg
stos
add
fnstsw
lahf
testl
add
cli
mov
arpl
push
adc
sub
dec
jmp
mov
out
out
and
mov
iret
pop
pop
fwait
adc
add
ds
push
mov
orl
xor
add
test
pop
mov
loopne
push
dec
inc
dec
lret
mov
lcall
fisttpll
mov
scas
push
stos
jnp
in
push
cmpsb
shll
mov
aam
test
mov
adc
or
mov
cmp
xchg
das
pop
addl
pusha
mov
or
and
mov
xchg
imul
mov
xlat
adc
mov
stos
xchg
sbb
int
gs
cmpb
imul
mov
mov
imulb
in
fiaddl
addr16
push
mov
daa
stos
and
sub
lahf
mov
jmp
mov
in
es
and
lret
xchg
fistpll
mov
sahf
int3
stos
adc
mov
ficoml
lds
cmp
push
xchg
popf
xchg
pop
out
push
insb
sahf
and
mov
mov
leave
xchg
aam
jmp
mov
movsl
lcall
clc
call
pop
and
in
pop
inc
stos
in
mov
lods
gs
fisubrl
mov
pop
and
cmp
fwait
cmc
xchg
pop
in
test
outsl
ss
imul
test
xchg
xor
or
popf
xchg
xchg
fs
stos
and
sbb
rcl
push
stos
xlat
and
scas
repz
xor
repnz
rclb
clc
adc
in
xchg
movsl
jmp
add
add
test
stos
and
out
xor
addl
push
scas
out
fucom
mov
std
daa
clc
mov
inc
sbb
mov
imul
movsl
mov
stos
jne
mov
xchg
stos
jns
lock
addr16
leave
stos
mov
push
pop
jl
cli
xchg
push
lret
push
das
stos
arpl
jb
adc
out
sbb
or
inc
stos
lahf
push
push
sbb
loopne
jmp
cmpsb
popf
outsl
push
lcall
and
scas
push
stos
out
ror
insl
cmp
into
stos
in
lds
mov
stos
push
pop
sbb
xchg
cmp
inc
push
add
fs
adc
mov
xchg
dec
les
inc
fidivrs
jnp,pt
aad
xchg
test
push
outsl
cld
jp
inc
int
adcl
nop
lods
loop
sbb
mov
pushw
dec
push
sub
rclb
mov
outsl
sub
add
testb
aaa
ja
and
xchg
pushf
inc
jb
sbb
mov
stos
and
jnp
mov
popa
subl
fs
cld
stos
test
in
mov
ret
in
repz
adc
cmp
cmpsb
inc
add
push
and
lods
stos
jo
mov
sahf
or
mov
push
jmp
adc
dec
xor
aas
jnp
inc
stos
jl
int3
mov
pop
or
stos
out
xor
mov
rorl
hlt
in
cltd
and
subl
push
fisttpll
stos
rcll
pop
popf
stos
mov
sbb
adc
in
popa
and
loop
xor
and
or
push
call
mov
je
add
adc
xor
jmp
int3
stos
jecxz
jmp
fldcw
xor
jo
mov
sub
adc
pop
movsb
jae
stos
add
lahf
fiaddl
stos
int3
jl
das
add
mov
notl
push
push
sub
dec
dec
sub
mov
or
stos
cmp
cmpsl
cmp
enter
stos
mov
in
sbb
sar
stos
sbb
push
orl
aad
cwtl
pop
dec
pusha
out
pop
notl
sub
sub
in
dec
stos
pop
inc
lahf
push
jge
pop
stos
xchg
dec
jbe
sub
leave
adc
inc
mov
stos
lret
pop
or
jecxz
mov
mov
xchg
jmp
shlb
inc
push
shrb
in
or
pop
cmpsl
test
push
stos
lahf
inc
jb
outsb
pop
ss
int
jnp
js
xchg
pop
mov
fwait
inc
shrb
andl
imul
test
andb
mov
imulb
loopne
aaa
adc
mov
hlt
ljmp
stos
jmp
ljmp
adc
dec
push
stos
xor
movsb
mov
jae
and
fistpl
mov
push
mov
rclb
rolb
xor
subb
test
xchg
jmp
dec
daa
push
stos
cmp
xor
movsl
jmp
mov
add
and
push
dec
stos
mov
xor
sbb
add
imul
lock
dec
or
stos
sbb
in
mov
mov
jl
sahf
arpl
xor
ljmp
movsb
and
stos
xor
pop
jle
test
into
or
js,pt
cmp
fmuls
mov
xchg
lods
inc
and
mov
lahf
xchg
lock
in
into
pop
mov
stos
adc
call
mov
sbb
es
stos
je
cmpsl
cmp
dec
add
cmp
out
push
stos
test
add
outsb
fstp
xor
stos
push
mov
js
stos
sub
mov
cmp
test
scas
sub
jno
add
stos
insl
hlt
jnp
pop
or
sbb
cmp
mov
mov
and
mov
rcrb
data16
stos
sub
mov
pop
fwait
add
sub
stos
int3
sbb
xor
mov
stos
sahf
cmc
xchg
mov
push
sbb
test
jmp
sbb
mov
ljmp
xorl
iret
and
jle
mov
cmp
in
xchg
or
mov
push
into
xchg
adc
or
popl
filds
mov
inc
jbe
jmp
rolb
adc
in
cli
lds
popf
add
sub
push
sbb
data16
pop
gs
daa
and
cmc
outsl
vmovntps
mov
sti
and
push
faddl
jl
xchg
imul
fidivl
xlat
push
leave
ja
lcall
shlb
jno
dec
inc
jle
stos
loope
in
push
xor
mov
sbb
stos
sbb
nop
mov
sub
mov
dec
xchg
rcrb
addr16
sbb
and
mov
inc
sti
mov
stos
fmuls
arpl
pop
xchg
jmp
in
sub
jecxz
xor
push
dec
mov
push
cs
imul
or
xchg
imul
xorb
out
sbb
stos
imul
divb
mov
jp
sub
fdivrs
in
inc
xlat
ljmp
fwait
pop
sbb
lret
test
push
and
test
stos
jno
ret
sub
fs
sbb
or
stos
cmp
hlt
mov
repz
popf
outsb
stos
xchg
adc
sahf
mov
out
stos
add
pop
cmp
ret
in
stos
sbb
adc
daa
cmp
bound
aam
into
loopne
rcrb
lods
stos
adc
pop
pop
in
pop
stos
cmp
int3
sub
lods
jl
fimuls
arpl
fldl
mov
push
push
add
stos
int
into
sub
pop
mov
stos
insb
xchg
sbb
outsb
mov
lcall
mov
mov
mov
sub
and
mov
and
or
xchg
sub
test
jmp
nop
mov
or
xchg
xchg
shl
dec
lahf
stos
fstps
fsubrl
inc
mov
dec
jns
fnstcw
shrb
lods
test
pop
mov
ss
mov
add
cwtl
dec
fsubs
add
popf
mov
push
push
pop
dec
daa
insb
stos
push
lret
cmp
pusha
xor
xchg
inc
and
in
lods
dec
cwtl
int
stos
test
fnstcw
fucomp
jmp
insb
mov
stos
jbe
xchg
jmp
sub
adc
mov
mov
les
ret
stos
cli
xlat
fdivl
insb
cmc
xchg
movsb
shl
mov
inc
or
mov
mov
or
and
bound
in
out
cld
leave
cwtl
mov
sbb
std
iret
push
in
mov
shlb
aas
outsb
mov
push
jle
mov
stos
mov
loope
daa
and
cltd
dec
mov
test
and
mov
jb
popa
mov
mov
pop
out
lds
dec
jnp
adc
test
mov
mov
cmpsb
jge
cmp
or
cmp
inc
outsl
xchg
or
pop
push
insl
mov
hlt
and
sub
fwait
cwtl
add
stos
jbe
gs
orl
es
lret
fs
inc
xchg
lahf
xchg
push
cs
stos
fsts
jbe
stos
nop
adc
cmp
mov
lahf
out
or
inc
push
xchg
faddl
stos
es
xor
push
ret
into
imul
lods
push
push
ljmp
sbb
push
fimull
add
xchg
jge
sub
pop
sbb
cmpsl
aas
dec
jae
xor
push
fists
and
adc
test
stos
xor
cmp
pop
and
inc
xchg
js
add
jbe
xchg
or
shlb
sbb
fcoms
pop
aas
ret
popf
fisubrl
in
in
inc
bound
push
add
stos
jnp
cmp
xchg
cmp
sub
call
cmp
ja
stos
orl
outsl
adc
insb
adc
shl
stos
lcall
dec
dec
dec
out
sub
sub
es
xor
lds
mov
subb
mov
stos
dec
adc
ret
cmp
jb
outsl
bnd
pop
sub
rorl
or
mov
mov
movsb
in
and
mov
das
in
imul
stos
jl
inc
mov
loope
cmpsl
bound
rolb
std
or
stos
pop
cmp
mov
jmp
aam
sar
arpl
adc
out
dec
bound
sti
movsl
stos
pop
out
jae
mov
jmp
popf
jno
ja
dec
rcrb
out
stos
xchg
stos
push
test
push
xor
push
and
outsl
inc
add
jne
daa
ret
mov
aam
push
and
fstpl
test
push
pop
mov
mov
jno
push
jmp
stos
cmp
test
sub
sbb
lahf
into
sbb
jae
in
stos
lret
xor
sbb
mov
add
js
sbbb
sub
lret
xchg
cltd
leave
cs
and
and
cmp
ss
fsubrl
sub
sarl
stos
fildll
cmp
and
insb
stos
inc
xchg
lea
fdivs
stos
mov
cmc
dec
push
je
lods
imul
mov
push
in
pop
popf
and
test
xor
fstps
stos
aam
pop
arpl
jecxz
outsl
cmp
ljmp
mov
jb
fs
outsl
adc
and
test
fwait
stos
cmpsb
pushf
sbb
scas
stos
push
mov
rcrl
or
out
sti
push
scas
jo
js
or
stos
add
mov
les
jmp
stc
and
or
add
sub
add
dec
mov
mov
cmpsb
mov
push
pop
popa
pop
jmp
add
daa
dec
bound
fisttpl
inc
fisubrs
stos
scas
dec
push
or
out
xchg
dec
sub
scas
mov
and
in
dec
sub
sub
movsb
call
ret
xor
sahf
stos
shl
outsb
dec
mull
or
imul
ljmp
xor
or
mov
jo
cmp
aas
stos
out
cmc
mov
pushf
in
packuswb
dec
sub
add
or
xchg
mov
mov
mov
xor
ret
dec
nop
stos
pop
cmp
cwtl
push
imul
and
stos
outsl
ja
or
push
stos
mov
sub
lahf
in
imul
xchg
push
mov
inc
or
stos
adc
data16
in
or
int3
mov
jne
sarb
xor
cmp
jmp
dec
imul
xchg
cmp
mov
and
dec
adc
cltd
mov
pop
mov
dec
ss
mov
rcr
test
iret
mov
push
lret
adc
jmp
outsb
fwait
stos
jg
mov
pop
mov
pop
je
rcl
pushf
adc
dec
push
mov
sbb
adc
popa
sti
mov
stos
pop
insl
mov
add
lahf
lods
pop
mov
add
leave
push
mov
xchg
mov
les
xlat
xor
inc
sti
xchg
xchg
jmp
dec
test
imul
stos
inc
in
mov
add
fst
fstps
cmpl
or
add
insb
inc
in
stos
push
daa
dec
mov
xchg
cmp
dec
in
imull
pop
add
jbe
addr16
xor
xchg
mov
stos
or
fldenv
inc
cmpsb
mov
mov
add
sub
stos
decl
outsl
imul
pop
sub
xchg
sbb
loope
jbe
ret
andb
sbb
fnstenv
in
push
imul
lret
ss
push
or
pop
addr16
pop
out
outsb
dec
in
xor
mov
cmp
cld
and
mov
test
push
dec
popf
insb
mov
stos
out
loope
mov
mov
into
jecxz
imul
insl
jo
mov
sub
mov
imul
or
popf
stos
mov
rcr
inc
xchg
push
stos
push
cmp
push
clc
aam
stos
jg,pn
jns
out
aaa
movsb
ljmp
fdiv
movsb
mov
sub
out
stos
and
cmp
stos
dec
jp
fwait
loop
sbb
insl
adc
mov
xor
out
inc
push
test
jno
lods
sub
stos
inc
mov
mov
stos
xor
dec
xchg
lcall
add
adc
stos
xor
dec
jle
mov
enter
sub
jl
sub
bts
sub
loope
or
mov
in
or
pop
movsl
rep
dec
pop
dec
cmpsl
sub
cltd
je
mov
insb
imul
leave
lret
pusha
push
stos
arpl
xchg
and
jg
sahf
in
and
xchg
jnp
pusha
pop
rorl
add
or
mov
pushf
or
cmpsl
jl
stos
in
push
movsb
add
stos
jge
cld
add
adc
sub
mov
int3
jns
cmp
out
cwtl
pop
push
sub
testb
inc
fwait
stos
or
xchg
mov
push
adc
push
add
or
dec
adc
jle
stos
pushf
mov
dec
out
popf
sub
add
test
jne
lret
test
sti
imul
in
pop
imul
push
push
mov
stos
cmp
rolb
xchg
stos
pusha
lcall
nop
and
call
unpckhps
jg
cmp
add
xchg
sub
jno
std
xor
jnp
cmp
loope
das
xchg
mov
xchg
sahf
mov
xor
ror
cmp
pop
sub
dec
mov
enter
xor
pushf
repnz
lahf
fisttpll
insb
lods
andb
xor
dec
aas
push
add
mov
call
stos
sub
out
pop
loop
add
dec
nop
data16
jp
xlat
shrb
cmp
pop
test
call
ret
sbb
inc
mov
jmp
shrb
insb
adc
sbb
dec
les
loope
je
das
xchg
popf
mov
test
cwtl
add
push
xchg
stos
test
adc
hlt
stos
orl
mov
jecxz
and
fwait
mov
in
xor
stos
push
pusha
repnz
dec
cmp
ret
mov
fwait
lcall
stos
test
fadd
aam
pushf
ja
add
xchg
mov
xchg
cld
stos
pop
scas
jle
rorl
out
in
adc
loope
bts
fimuls
mov
rclb
push
mov
jo
test
push
jp
xchg
jae
pop
js
lahf
loop
stos
outsb
mov
or
inc
mov
mov
shrb
popf
sbb
imul
das
cs
cmc
stos
sbb
mov
stos
insb
mov
sbb
ds
sahf
xor
push
loop
jb
mov
push
loop
xchg
fsubrl
push
mov
dec
xchg
dec
ja
or
fiaddl
pusha
sbbb
jl
aam
fmuls
icebp
hlt
popf
cmc
imul
add
or
pop
jne
inc
insb
cld
sti
inc
mov
cwtl
mov
shlb
clc
pusha
adcb
in
fildl
sub
sbb
notl
dec
push
mov
sbb
test
xor
sub
sub
dec
and
cmpsb
stos
or
inc
jp
fs
jne
jl
sbb
adc
imul
sub
cmp
cmpsl
daa
sarl
cmpsb
jg
stos
and
xchg
out
mov
aam
fwait
and
pop
push
pop
nop
clc
ljmp
jp
ljmp
movsl
ss
stos
jnp
push
pop
xchg
out
stos
and
push
mov
stos
xor
ficomps
js
sahf
push
in
scas
and
aaa
pop
repz
mov
mov
daa
mov
add
lcall
cmp
fs
fisttps
inc
and
daa
popf
cmp
lods
inc
mov
mov
inc
scas
dec
jg
xor
push
fsubr
jecxz
pop
xchg
and
mov
or
stos
xchg
sub
nop
cmp
push
mov
sub
ret
test
mov
inc
add
pop
mov
add
sub
inc
push
stos
pop
sbb
xchg
mov
xlat
mov
push
mov
inc
stos
pop
addr16
sahf
fstpt
xor
hlt
cmp
fcompl
dec
stos
inc
mov
aas
jmp
icebp
stos
loope
pop
sbb
ljmp
lds
push
es
je
lds
cmp
sti
cmp
stos
loopne
xchg
jl
sbb
int
push
jmp
jmp
hlt
cld
fsubr
xchg
and
dec
xchg
stos
mov
jno
stos
push
pop
pop
push
push
adc
addr16
xorl
out
stos
ss
stos
aam
dec
lcall
into
dec
cmp
push
adc
fistpll
stos
lock
mov
rorb
lret
adc
rcrl
mov
cld
test
imul
mov
into
dec
push
imul
cmc
mov
ret
dec
jbe
xchg
push
mov
jle
mov
or
jmp
loopne
jbe
mov
or
rorl
lret
stos
mov
or
jge
cwtl
ds
les
loope
or
push
gs
push
fcomps
jnp
adc
cli
xor
add
js
pop
stos
mov
push
cmp
sub
stos
xorb
fwait
in
push
lea
sub
lahf
mov
cmc
nop
push
stos
lods
xchg
mov
adc
pop
movsl
mov
iret
mov
pop
imull
fsqrt
mov
inc
dec
lock
mov
cmp
dec
ja
notb
jmp
dec
movsb
rclb
sbb
mov
stos
mov
into
stos
rclb
imul
xorb
addr16
xchg
mov
push
cmp
and
xor
pop
ja
rcl
mov
addb
cmp
xchg
xchg
ret
gs
mov
or
sti
jge
shrb
jmp
pop
int
mov
mov
xlat
push
push
stos
jb
lds
adc
mov
es
stos
dec
mov
andl
stos
lcall
ljmp
push
test
sbb
mov
dec
fsubrs
fldenv
int
mov
or
out
scas
push
mov
xchg
jb
fcoms
pusha
fistpl
cmpsb
das
adc
movsl
adc
adc
and
or
mov
jecxz
stos
sbb
je
push
jbe
stos
jl
add
pop
dec
jo
adc
mov
rcrb
xorl
and
aas
ljmp
orl
xchg
ss
enter
js
sub
lock
mov
idivb
addl
rol
xchg
push
cld
divl
push
arpl
cmp
xchg
mov
xchg
fidivs
mov
jmp
test
mov
addr16
addr16
and
jbe
sbb
stos
repnz
sbb
pop
add
mov
xchg
arpl
stos
loop
je
lss
sahf
mov
cmp
stos
sub
xchg
mov
imul
pop
mov
xchg
push
imul
fwait
inc
cmp
mov
mov
lods
xor
popa
lds
cs
xlat
adc
push
stos
in
jecxz
popa
inc
xor
mov
and
stos
lret
xor
jbe
stos
push
dec
js
cmpsl
jge
sub
idiv
pop
lea
stos
sti
aaa
add
add
in
in
fs
or
pop
out
scas
pop
or
sahf
es
add
xchg
idiv
stos
and
push
int
stos
pop
pop
add
imul
xchg
jne
push
fisubrl
mov
in
test
outsb
stos
imulb
add
or
jmp
cmp
dec
cmp
lock
enter
cmp
mov
add
sahf
xchg
inc
push
int
fdivrs
fwait
mov
subl
stos
shrb
sub
jae
stc
cmpsb
in
pop
jp
fs
comiss
cmp
push
pop
xchg
adc
add
lahf
xor
mov
jg
out
pop
rcr
cli
inc
mov
clc
ror
jnp
mov
lds
xor
das
inc
add
stos
and
cltd
ffreep
mov
mov
in
or
jle
mov
push
stos
iret
mov
xchg
repz
sub
xchg
aaa
das
std
insb
cltd
push
pop
daa
vorps
push
inc
rorl
jp
fistpl
add
aam
mov
stos
mov
stos
cld
push
or
mov
mov
pop
orl
in
push
movsb
outsl
push
and
mov
leave
enter
sbb
jmp
mov
inc
cmp
aas
pop
push
idivb
shrb
stos
fstpl
mov
jle
add
into
xlat
inc
int
stos
or
in
das
mov
push
repz
mov
scas
dec
arpl
pushf
push
daa
pop
sahf
mov
and
pusha
jp
mov
imul
mov
and
mov
mov
dec
stos
add
jnp
push
add
xchg
mov
nop
dec
movsb
mov
xor
push
sub
cmp
pop
adc
adc
lods
jne
push
ljmp
cltd
jp
hlt
adc
stos
mov
rcrl
pop
mov
stc
popf
stos
jge
aas
inc
cmp
mov
mov
push
push
cmp
hlt
jp
es
popa
cltd
push
xchg
stos
pusha
or
loopne
aam
ret
mov
in
mov
leave
xorl
cwtl
lcall
stos
imul
xchg
in
and
push
outsl
ficomps
mov
sub
nop
inc
stos
adc
mov
inc
push
cld
fcmovbe
jnp
into
or
stos
jge
add
jns
or
push
xor
shrb
dec
mov
xor
lahf
dec
cmpsl
imul
jmp
gs
mov
lock
xor
jne
outsb
xchg
ja
test
dec
out
cmc
or
gs
jnp
leave
jmp
testl
insl
stos
test
into
push
pop
cmpsl
mov
repnz
nop
push
test
aas
sbb
addl
jmp
or
dec
test
push
cmp
mov
js
les
fstl
mov
inc
xor
adc
fwait
adc
lods
out
shlb
jnp
inc
cwtl
mov
push
cmp
fsubrs
mov
js
pop
stos
push
mov
out
push
shll
adcl
aas
inc
stos
ret
fcoml
cs
push
or
add
sub
cmp
dec
mov
stos
mov
mov
stos
mov
pushf
jno
push
bound
add
mov
stos
sub
xchg
jnp
xor
lds
pop
movsb
stos
or
popf
testb
ljmp
sbb
imul
repnz
sub
ja
lea
mov
mov
stos
cmp
addr16
jbe
pusha
mov
lea
push
fisubs
push
jns
leave
ret
in
adc
cmp
sub
imul
shr
jmp
leave
jg
test
mov
cmp
daa
or
jae
dec
pop
xchg
xchg
inc
es
add
fisubl
xchg
stos
out
sti
sbbb
notl
inc
loopne
outsl
jno
movsb
push
stos
adcb
jbe,pn
loop
daa
mov
add
stos
adc
or
xchg
mov
stos
call
push
ljmp
mov
stos
inc
xchg
clc
aam
jle
sbb
stos
shr
repz
cmp
xor
cmpsb
push
das
jge
lea
idivb
jp
jl
mov
add
scas
lret
stos
mov
sub
push
stos
movsl
aad
test
arpl
inc
mov
hlt
js
xor
loop
outsl
shrb
pop
mov
adc
stos
rcr
add
or
les
cmp
arpl
fxch
inc
xchg
shlb
cmp
inc
ljmp
daa
jl
bound
add
cmp
flds
jecxz
int3
push
punpckhbw
faddl
stos
pusha
adc
adc
sbb
stos
aad
and
int
add
adc
sub
stos
aas
mov
cmpsb
stos
mov
outsb
dec
xor
gs
push
or
xchg
dec
stos
jno
cwtl
sarl
lds
xlat
imul
insl
sbb
stos
ja
dec
jb
mov
pop
cmp
sub
pop
or
dec
or
stos
insl
adc
mov
mov
inc
push
xor
xchg
or
sub
lods
adc
pop
cmp
mov
pusha
stos
or
inc
cmpsl
test
cmp
pop
fidivl
daa
xchg
mov
subb
imul
mov
aam
stos
adc
cwtl
xchg
cld
add
stos
sub
and
stos
mov
ds
lret
nop
test
sbbb
cwtl
dec
mov
dec
xchg
pop
stos
mov
in
mov
mov
mov
insb
jg
test
ret
cli
cmpsb
sub
addr16
fwait
stos
push
pop
iret
pusha
sub
mov
cmpsb
stos
call
stos
pop
inc
aaa
popf
inc
les
stos
and
xchg
ss
cltd
das
lds
jmp
dec
jmp
xchg
push
stos
shlb
jnp
clc
fbld
test
addr16
jl
mov
push
push
mov
mov
into
rorb
les
and
pop
imul
cmp
cli
inc
push
push
ss
scas
mov
add
lods
mov
mov
jae
movsb
push
push
mov
cmp
cld
ljmp
inc
ret
mov
xorl
push
stos
pop
fwait
xchg
clc
sub
cmp
pop
insb
mov
aaa
stos
leave
sbb
out
or
adcl
dec
mov
scas
leave
stos
out
cmp
adc
dec
aaa
test
stos
xchg
inc
stos
test
xchg
mov
jecxz
mov
lret
aaa
xchg
loop
cmp
add
cmp
jns
mov
add
loop
jecxz
xchg
fidivl
add
imul
insb
mov
fs
mov
adc
cmp
outsl
inc
pop
idiv
scas
lods
and
sub
cmc
je
jo
sti
add
popa
movsb
stos
ficompl
cld
lcall
xor
ficomps
cs
enter
jmp
shll
push
add
mov
xchg
jo
sub
stos
jne
push
pop
cmp
stos
fdivrl
rcrb
imul
jmp
cmc
sub
jmp
dec
stos
inc
or
and
fiaddl
dec
int
stos
jns
push
add
mov
pop
mov
stos
adc
gs
movsb
loop
inc
mov
in
stos
adc
or
fldt
stos
inc
xchg
mov
maxps
and
pushf
rorb
push
pop
icebp
push
mov
mov
jbe
xor
or
sub
out
sbb
xchg
push
or
jmp
inc
ret
cltd
cmpsl
mov
aam
stos
outsl
dec
push
movsl
je
ret
mov
stos
xchg
xlat
daa
and
icebp
or
adc
rep
fwait
sarl
xchg
in
or
push
stos
mov
adcb
and
dec
std
in
inc
imul
rorl
outsl
jnp
mov
icebp
repnz
stos
ss
int
shr
jl
lods
sub
pop
test
popf
or
lods
stos
std
loopne
pop
inc
or
mov
pop
das
ret
push
cwtl
shrl
stos
or
cmp
cmp
daa
dec
xchg
mov
xchg
xchg
mov
cmp
mov
stos
push
inc
xchg
jae
in
pushf
fldt
dec
jge
push
mov
arpl
addr16
repz
stos
or
pop
sbb
scas
aam
pushf
pop
dec
stos
push
arpl
int3
and
repnz
jmp
mov
jno
shrb
add
shr
mov
stos
jmp
inc
repz
mov
out
lahf
sahf
pop
mov
jno
stos
dec
jns
push
adc
sub
scas
cmp
jnp
push
pop
jne
sbb
mov
inc
arpl
xchg
push
mov
call
sti
adc
mov
movb
daa
or
mov
stos
mov
or
and
mov
push
in
cmpsb
or
imul
in
clc
lret
shr
dec
add
sbb
and
and
pop
data16
mov
cmp
les
stc
ss
xchg
cs
mov
cwtl
loope
mov
mov
jle
ja
inc
sbb
cltd
mov
addr16
daa
jnp
sub
and
scas
and
stos
iret
sbb
lock
daa
dec
arpl
and
leave
movsb
in
aam
pop
ficomps
or
imul
imul
fdivrl
cwtl
inc
xchg
out
push
fwait
icebp
daa
test
mov
pop
mov
arpl
stos
xchg
inc
xor
push
movsl
jp
push
outsl
xchg
cwtl
sub
lock
push
lahf
cmp
pop
or
add
scas
lcall
add
stos
dec
jo
push
or
mov
xchg
stos
fsubrs
out
test
movsb
imul
aaa
adc
xchg
xchg
sub
cmp
pop
inc
mov
stos
push
test
or
jne
jno
outsb
xor
movsb
stos
push
inc
pop
addb
pop
sub
es
repnz
popa
lock
or
stos
add
pop
add
mov
cld
test
mov
lods
cmp
jmp
push
lcall
pmulhuw
sub
stos
xor
stos
aaa
mov
inc
or
add
jmp
loopne
testl
sub
notb
mov
and
sbb
test
stos
cli
ja
imul
add
mov
jo
mov
lret
lods
xchg
add
inc
xor
cmp
or
lock
add
pop
jle
push
mov
and
push
int3
int
into
stos
or
arpl
stos
in
sti
pushf
push
fstps
adc
cmp
popf
push
mov
stos
jmp
add
outsl
xchg
dec
popf
adc
je
add
stos
push
sbbb
push
aam
push
out
and
push
xchg
mov
stos
std
mov
pop
push
lea
test
stos
xor
inc
test
adc
cli
data16
scas
sbb
sub
jge
or
pop
sbb
stos
push
push
mov
rcrb
imul
arpl
bound
movb
add
leave
or
hlt
mov
mov
mov
stos
outsl
sub
xor
add
add
arpl
int3
popa
stos
std
pusha
stos
dec
cmc
mov
inc
dec
jmp
popf
jmp
mov
inc
in
cmp
lods
ljmp
clc
push
jl
imul
mov
jmp
fcoml
push
cmp
mov
lods
ror
out
push
stos
jnp
add
sub
or
cmp
stos
test
pushl
in
jnp
stos
sub
xchg
ds
adc
push
stos
fdivrl
fimull
call
test
cmpsb
mov
out
arpl
dec
dec
ss
stos
xor
xchg
xor
and
lret
inc
jb
call
mov
or
and
loope
mov
shrl
lcall
adc
jp
andl
ljmp
repnz
push
sub
adc
popf
lahf
stos
dec
out
and
jg
mov
jmp
mov
cs
daa
mov
gs
sbb
sbb
mov
stos
adc
inc
or
jb
jns
push
xchg
xorl
repz
sub
lods
push
xchg
pop
mov
cmp
movsb
jno
test
jge
cwtl
enter
ret
add
mov
pushf
sub
push
or
ljmp
leave
pop
stos
stos
call
cmp
pushf
xor
xchg
out
push
jle
dec
inc
jl
in
mov
mov
in
lcall
dec
mov
ret
cmpsb
nop
jmp
inc
stos
dec
repz
mov
push
cmp
mov
dec
mov
adc
inc
adc
lcall
mov
rolb
stos
xor
mov
mov
add
jmp
jae
mov
or
push
jl
add
fwait
and
xchg
mov
mov
ljmp
inc
and
stos
addr16
popf
jecxz
adc
push
loop
sbb
xor
mov
fists
enter
mov
cmp
pop
stos
inc
mov
and
stos
outsl
sbb
js
pushf
stos
fmull
xlat
into
stos
mov
testb
adc
push
pop
stos
mov
je
mov
jno
mov
dec
cmp
mov
ja
aad
test
jne
sbb
call
jle
mov
sti
or
mov
jmp
arpl
in
dec
lret
mov
pop
imul
stos
push
or
je
xchg
dec
loopne
adc
mov
negb
cmp
fldenv
dec
sub
and
fistl
outsl
stos
les
xchg
adc
ljmp
outsb
aaa
push
movsl
test
stos
inc
es
clc
cld
jl
fisubrl
mov
mov
inc
mov
aaa
adc
cli
or
sub
push
mov
insl
lds
xchg
jo
sub
stos
push
lahf
add
inc
jbe
cld
pop
daa
add
sahf
fucomip
mov
sbb
jb
inc
cmp
in
stos
ljmp
insl
stos
hlt
pusha
pop
flds
sbb
mov
sub
data16
iret
xchg
stos
clc
or
mov
lods
popa
pushf
cltd
cs
xchg
call
cmp
or
mov
inc
stos
xchg
js
add
adc
dec
rcr
enter
je
xchg
inc
mov
adc
jb,pn
sub
insl
add
clc
stos
jnp
mov
xchg
cltd
daa
sub
xor
pushf
and
mov
outsl
jmp
mov
les
pusha
sub
sti
sub
aam
ficompl
cmp
lds
sbb
daa
jne
pop
test
cmpsl
in
push
aaa
mov
cmpsl
or
scas
cmp
sbb
bts
jmp
rcrl
stos
movsl
test
aas
mov
cli
in
xchg
jl
daa
sub
mov
fdivp
aaa
mov
push
mov
jae
jo
clc
mov
lods
inc
mov
mov
out
cmp
mov
and
lahf
ss
daa
inc
sbb
pop
shll
jno
mov
cs
adc
in
jge
stos
jmp
adc
mov
inc
aam
stos
sub
add
jne
xor
xchg
cmp
sbb
mov
data16
mov
vmovsldup
cmp
jns
and
adc
scas
lret
daa
icebp
outsl
int3
cmp
sub
mov
mov
add
xchg
pop
mov
iret
jne
mov
add
sbb
sbb
icebp
ficompl
or
mov
mov
imul
and
or
pop
in
popa
mov
daa
push
jecxz
notb
rorl
aaa
adc
inc
aad
lret
stos
out
cli
enter
lret
xor
xor
dec
stos
loopne
shll
stos
lret
pop
mov
xchg
stos
lret
repz
scas
add
pusha
xorb
sbb
cmp
enter
jecxz
mov
push
mov
mov
xchg
inc
xchg
pop
push
lcall
jge
stc
mov
pop
inc
stos
xlat
inc
jmp
sti
cwtl
icebp
ljmp
fldl
inc
push
imul
das
ds
dec
jg
lds
mov
jno
popa
inc
stos
mov
push
push
mov
sahf
inc
inc
test
stos
jno
and
xlat
jge
fs
jecxz
jp
jg
stos
cmc
xchg
inc
inc
and
mov
mov
mov
iret
push
sarl
lea
push
pop
mov
movsb
stos
jae
mov
cmp
xchg
data16
xchg
or
aad
sbb
mov
mov
sti
inc
mov
mov
add
sahf
xchg
push
and
jno
or
js
jmp
jne
sub
xchg
clc
or
mov
iret
inc
lcall
xchg
xor
imul
shrb
out
jne
add
stos
fld
or
lock
rol
sub
pop
mov
xchg
dec
popf
inc
leave
pop
xor
inc
fldt
imul
popa
mov
jno
mov
xchg
imull
cmp
fcmove
xchg
test
roll
in
stos
push
push
cmpsl
ret
pusha
cmpb
mov
push
lds
push
fwait
mov
push
movsb
mov
dec
mov
rcl
sti
divl
scas
add
xor
push
daa
lods
lret
mov
leave
or
insb
sbb
fwait
add
sbb
jne
jbe
xchg
sub
addr16
popl
aad
cwtl
sbb
sahf
test
push
jmp
jge
scas
push
stc
leave
fwait
or
stos
inc
mov
pop
es
cli
sub
stos
push
jne
jl
mov
and
or
add
mov
lcall
jo
mov
lret
sub
mov
aaa
add
and
sub
sbb
xchg
scas
sbb
dec
fldt
pop
hlt
cmp
stos
scas
xchg
adc
stos
xchg
jo
cmc
sub
stos
lock
cmp
test
popf
xchg
and
xchg
cmp
mov
stos
or
dec
mov
push
pop
cs
inc
add
push
stos
push
out
negl
dec
fldcw
daa
mov
inc
xor
cmp
out
stos
dec
scas
dec
mov
movsb
imull
mov
pop
xchg
fwait
xchg
test
out
subl
gs
adc
stos
mov
xchg
int3
ljmp
sub
push
ja
and
fildll
sub
stos
xchg
xchg
test
pop
add
out
lret
fsts
and
cmp
pop
stos
rcrl
fsub
stos
or
adc
xchg
add
stos
jmp
test
push
cmc
push
stos
mov
jl
imulb
mov
cltd
out
in
stos
jmp
pop
mov
mov
mov
push
ss
mov
push
fbld
lret
sahf
stos
cwtl
sub
dec
stos
inc
adc
cmp
pop
test
gs
shll
dec
jns
shlb
mov
adc
stos
mov
fimuls
stos
add
sub
sbb
and
out
fstl
jge
dec
dec
ret
jo
jae
out
cmpsl
stos
xchg
push
or
data16
cmp
jno
dec
addr16
jp
ficompl
mov
bound
dec
lcall
stos
mov
bound
xchg
imul
xorl
stos
pop
inc
pop
or
test
lods
jo
cli
test
addr16
jae
stos
xor
jns
dec
cmp
mov
sahf
stos
into
push
sbbl
mov
loope
lahf
idiv
fs
xor
or
ficompl
pop
mov
cwtl
jne
hlt
stos
pop
mov
and
xor
scas
sbb
dec
stos
push
popa
cmpsl
mov
loopne
pop
jmp
and
xchg
inc
into
mov
inc
popf
sub
fs
fdivrl
rcll
ss
scas
fcomp
std
stos
mov
psrlw
lods
imul
lahf
scas
outsl
cmp
ds
daa
leave
stos
rclb
push
cmp
jo
jno
mov
mov
sahf
push
ljmp
add
mov
pop
push
stos
out
loope
jl
inc
cmp
fisttpl
lcall
fwait
lds
inc
inc
mov
bound
jl
js
nop
dec
ljmp
arpl
cld
iret
bts
or
ja
or
push
arpl
popa
mov
adc
stos
rorb
stos
fisubs
mov
add
in
adc
cmc
dec
pop
stos
push
xor
adc
push
xchg
jb
stos
dec
jmp
rolb
stos
inc
int3
loopne
das
iret
lea
dec
shlb
stos
cmpsb
out
aas
inc
push
pop
jb
adc
mov
pop
xchg
out
repz
stos
add
das
jmp
lock
jmp
stos
mov
sub
mov
and
arpl
push
sti
mov
inc
insb
stos
mov
inc
repnz
test
incl
pop
stos
xor
testl
mov
stos
pop
inc
into
aam
add
mov
fmuls
mov
mov
and
push
mov
pop
movsb
mov
push
jmp
sbb
pusha
adcl
or
adc
push
in
stos
lods
push
int
ret
in
pusha
aad
je
xchg
push
mov
stos
inc
stos
cmpsb
cwtl
outsb
push
mov
xchg
jl
test
mov
mov
std
xor
mov
xchg
movsl
or
mov
stos
addr16
pop
in
mov
cmpsb
into
sub
mov
fimull
repnz
pushf
mov
jl
stos
mov
cmp
or
in
xchg
lods
lahf
fildl
mov
lcall
movl
push
sbb
xchg
mov
xchg
stos
jmp
dec
mov
push
mov
dec
js
stos
outsb
xchg
dec
jge
cmc
or
add
test
popa
stos
mov
cld
dec
inc
sti
push
push
push
cmp
scas
sarl
test
cmpsl
imul
sub
arpl
mov
cltd
adc
stos
fs
repnz
shll
cmp
nop
ss
jo
xlat
add
push
mov
inc
xchg
inc
cltd
je
adc
roll
push
mov
test
xor
push
popf
sub
mov
pop
insb
add
cmp
mov
stos
inc
lcall
shll
inc
push
cmpsb
jae
sub
xchg
ja
cwtl
int
fwait
jge
dec
movsbl
roll
fsubrs
sub
shrb
sbb
stos
pop
cmpsl
call
cmp
jecxz
stos
inc
sub
lret
mov
bound
or
push
stos
mov
push
lahf
mov
or
jp
ja
ret
xchg
and
mov
sahf
pushl
xchg
sbb
std
in
ljmp
enter
pushf
fadds
stos
xabort
repnz
stos
ljmp
xor
push
popf
lods
stos
cltd
sbb
dec
dec
stos
icebp
push
jns
jg
push
or
pop
flds
call
adc
faddl
rolb
mov
mov
rep
xchg
inc
mov
push
stos
aad
lahf
mov
sub
in
mov
and
sub
cmp
mov
add
sbb
and
sahf
stos
dec
cmp
inc
aaa
mov
lret
push
cmpsb
cli
test
test
dec
xchg
rol
imul
ja
xlat
mov
dec
stc
xchg
dec
movsb
sub
stos
fwait
xor
push
push
inc
sub
push
scas
enter
sarb
stos
jns
ret
adc
divl
add
stos
jl
pop
popa
push
sub
push
lret
pop
adc
fcompl
ljmp
stos
cmp
adcb
je
pop
imul
and
popa
pop
fwait
shlb
or
jmp
popa
sub
addr16
sub
dec
stos
mov
adc
cmpsb
mov
dec
out
and
stos
enter
pop
fsubrs
mov
add
in
cld
inc
xchg
mov
out
mov
subb
adc
xchg
stos
push
mov
pop
outsl
stos
xor
fs
inc
add
imul
lock
test
and
sub
inc
sti
add
pusha
fldt
push
dec
inc
sbb
scas
imul
out
stos
hlt
mov
mov
data16
fdivrs
addr16
mov
out
mov
add
inc
movsb
xlat
sub
add
cmp
mov
push
cmp
or
mov
stos
push
cmp
xor
fdivr
inc
adc
ljmp
mov
lret
nop
dec
sub
adc
xchg
dec
inc
dec
mov
xchg
dec
aaa
adc
mov
je
or
xchg
fwait
ss
mov
xchg
mov
ltr
cmpsl
js
jle
ret
stos
jg
pushf
int3
cmp
push
mov
andb
jb
movsb
mov
fwait
adc
stos
aad
mov
dec
pop
subl
pop
inc
mov
stos
adc
andl
xchg
test
shlb
dec
xchg
imul
andb
aam
mov
mov
mov
jmp
outsl
or
cltd
xchg
or
xor
stos
jnp
lret
push
icebp
xor
imul
jb
sub
stos
pop
sub
mov
stos
xor
arpl
stos
jmp
mov
cmc
xchg
les
add
push
add
xor
stos
stos
xor
stos
fcoms
and
and
aas
ss
ret
xchg
scas
mov
mov
test
mov
push
adc
xor
sbb
pop
fdivrl
stos
sbb
push
jae
stos
mov
ljmp
roll
pop
daa
cmp
movsl
dec
lret
gs
cs
cwtl
add
arpl
jbe
sub
stos
adc
xor
cmp
xchg
and
aaa
das
xchg
mov
mov
fistl
pop
xor
cli
std
stos
aam
sbb
add
jge
stos
jg
mov
repnz
repz
jno
call
adc
loopne
add
dec
cmp
pop
gs
stos
hlt
pop
push
popf
dec
fnstsw
stos
jne
adc
outsb
add
jmp
stos
sbb
and
mov
xlat
in
insb
adc
stos
adc
cmp
shl
adc
sub
push
mov
test
clc
sub
mov
mov
out
loop
mov
mov
add
mov
push
cli
pop
dec
xchg
nop
stos
jge
dec
cmpsb
negb
fisubrs
repz
pop
inc
stos
add
jecxz
shll
cli
adc
mov
sbb
stos
push
xor
mov
xchg
cmpsl
stos
push
repnz
movsl
in
inc
outsl
stos
jecxz
cmpsl
fwait
pop
clc
fisttpl
sbb
xchg
shlb
loopne
dec
stos
sbb
in
pop
pop
cmp
lods
mov
fisubl
xor
lcall
sbb
outsl
stos
xor
clc
pop
jns
xor
inc
dec
pop
cld
stos
in
push
push
dec
add
add
std
cmp
inc
pop
imul
loope
dec
scas
int3
icebp
imul
or
mov
ret
mov
mov
lret
pusha
adc
faddl
rcll
cs
dec
sbb
cmp
sarl
popa
fdiv
stos
sti
inc
pop
fs
rorl
popf
movsb
adc
and
ret
in
inc
push
stos
test
push
inc
cmc
adc
xor
jge
adc
jecxz
mov
jl
sbb
dec
sbb
test
pop
push
sub
push
in
imul
cltd
test
jmp
mov
xchg
into
insb
cmp
cmp
jne
pop
stos
daa
cmpsb
icebp
jnp
test
push
mov
divb
xchg
dec
nop
mov
xchg
sbb
or
sbb
adc
cmp
popf
jmp
addr16
pop
push
push
daa
aad
push
mov
jmp
xchg
mov
mov
pop
cli
daa
and
data16
aaa
daa
popf
adc
mov
mov
arpl
jbe
xor
out
fildl
enter
test
daa
dec
imul
stos
dec
fwait
sub
sub
jbe
ljmp
mov
adc
sbb
test
mov
mov
mov
cmpsb
mov
push
test
dec
and
or
mov
addr16
mov
sti
dec
xchg
jle
test
mov
fistl
jmp
lret
testb
movsl
mov
mov
mov
aas
test
lock
lahf
mulb
pop
sbb
aam
lcall
loope
mov
xchg
mov
lods
ljmp
sub
leave
cli
or
xchg
scas
cmp
nop
fisttpll
mov
jmp
icebp
fwait
xchg
sub
movsb
dec
or
mov
enter
daa
mov
lret
hlt
pop
sbb
mov
push
pop
cli
sbbl
xlat
test
enter
adc
rcll
clc
push
mov
mov
test
call
sub
sub
test
scas
notb
ret
sub
and
loope
jns
pop
leave
cltd
enter
ljmp
enter
sub
inc
and
jne
loope
int
sub
inc
adc
xchg
test
clc
lds
xorl
mov
xchg
mov
scas
nop
mov
std
inc
mov
push
stos
stos
sub
mov
push
leave
decb
repnz
stos
shll
or
jl
sub
jnp
fsub
out
sub
mov
sti
mov
cmp
ficompl
sbb
in
sbbb
mulb
mov
lds
mov
out
sub
dec
test
mov
adc
std
pop
mov
adc
xor
jns
adcb
pushf
xor
and
sbb
out
out
mov
cmp
adc
aas
mov
cmp
aad
repz
loop
rclb
jns
loop
xor
dec
ss
mov
iret
adc
add
jecxz
test
mov
adc
mov
loope
fidivrl
xchg
mov
jb
pusha
lret
test
fs
fmulp
imul
push
fwait
lret
cmc
sub
or
mov
data16
mov
ljmp
out
adc
xor
test
xchg
sbb
sbb
add
push
push
shr
in
test
repnz
jns
lcall
scas
or
dec
inc
movsb
push
pop
cli
pop
sahf
cmp
mov
mov
popa
inc
rcll
jecxz
test
xchg
ljmp
jecxz
lahf
inc
flds
bound
jle
mov
loope
mov
inc
popf
sub
leave
mov
neg
mov
lahf
into
xor
stos
dec
mov
mov
pushf
mov
enter
cltd
mov
push
and
push
lock
mov
in
adc
dec
clc
mov
or
dec
mov
mov
or
lea
mov
and
pop
jmp
es
xchg
push
add
cwtl
and
stos
sar
mov
sub
jmp
fisttpll
cmpsl
push
push
inc
pop
xor
sbb
or
sub
test
cmp
jno
out
jmp
dec
mov
cld
mov
mov
aam
push
add
sti
bound
sti
mov
std
cmp
mov
mov
add
mov
sub
and
test
adc
push
out
out
sbbb
jmp
mov
into
out
or
xchg
mov
mov
inc
dec
push
ljmp
aaa
push
imul
add
mov
imulb
shrl
out
mov
mov
jg
test
and
js
mov
push
and
lahf
cmp
pop
repz
sbb
gs
int3
push
fwait
add
cmpsb
test
and
imul
mov
sub
mov
inc
mov
inc
movsl
into
sbb
fsub
stos
push
xor
mov
mov
jmp
jl
push
cmp
lods
cmp
cltd
rorl
mov
rorb
sub
mov
in
jmp
in
imul
sbb
mov
adc
dec
cmp
mov
xchg
test
popa
mov
mov
cwtl
movsb
mov
bt
mov
insb
dec
ret
fistpll
mov
sbb
sbb
dec
fldt
std
cltd
dec
jae
fbstp
movsb
push
negl
sub
cmp
pop
daa
mov
jecxz
dec
xorb
mov
addr16
or
sbb
jecxz
loope
or
jmp
push
pop
daa
fwait
dec
sub
mov
and
das
aad
mov
mov
daa
hlt
push
lods
xor
test
mov
mov
cwtl
mov
fnstenv
lods
insl
mov
or
mov
dec
jmp
jnp
into
cs
lods
or
stos
imul
mov
jmp
leave
stos
pop
pop
ljmp
push
jmp
sahf
mov
sbb
jmp
mov
mov
in
movb
xchg
leave
push
jne
cs
mulb
and
dec
fwait
and
mov
dec
sbb
xor
and
mov
or
incl
fidivrl
sub
pop
scas
xsaves
lcall
mov
stos
jbe
scas
enter
cmpsl
mov
mov
jge
mov
repz
mov
dec
nop
rcl
add
or
in
aaa
sub
mul
mov
mov
imul
mov
mov
jecxz
aaa
xor
call
out
daa
ja
aaa
jecxz
mov
mov
sbb
sbb
test
sbb
sub
lods
mov
orl
jno
cmpsl
mov
repnz
mov
jmp
inc
lcall
jp
lock
sbb
test
mov
pop
fisttps
call
mov
and
test
out
mov
lock
aaa
sti
mov
les
out
mov
sahf
cmp
mov
sbb
xchg
or
mov
xor
pop
decl
and
mov
jmp
xchg
out
popl
sbb
mov
pop
daa
mov
cmp
push
mov
adc
movsl
popa
leave
cwtl
repz
cmp
loope
int
push
mov
cmpsb
jle
mov
ds
test
xchg
loopne
test
mov
sub
mov
mov
stc
cmpsl
mov
jecxz
mov
mov
pusha
ja
sbb
scas
ss
mov
aas
push
fstpt
lds
mov
mov
repnz
into
clc
mov
and
cmpl
xor
mov
xchg
xchg
mov
iret
jbe
adc
orl
mov
cmp
out
xor
cmp
lahf
movb
mov
lcall
in
lcall
cmpsl
cmp
jo
mov
sub
jmp
jmp
sbb
mov
movsb
xchg
pop
jns
bound
test
ss
adc
mov
ja
xor
mov
ljmp
clc
jbe
inc
adc
mov
push
inc
idivb
mov
icebp
xor
rcrb
jns
mov
mov
imul
mov
xor
into
repz
jb
frstor
dec
daa
cmp
lock
jno
add
mov
outsl
push
cmp
movsb
cmovle
cmpsl
out
jg
mov
aas
lret
ss
das
lods
mov
testl
jmp
xor
mov
jmp
mov
mov
test
cmpsl
mov
enter
loope
mov
cmp
cwtl
out
loope
cwtl
out
mov
es
lea
inc
mov
es
mov
addr16
out
and
mov
or
lcall
xor
fistpll
jmp
test
cmpsl
daa
mov
es
out
inc
int3
jno
ret
call
into
mov
mov
outsl
arpl
xor
repz
call
addr16
push
cmpsl
fnstenv
test
ds
sub
dec
test
jbe
addr16
testb
out
push
adc
xor
sub
or
in
subb
jno
cmp
pusha
daa
clc
das
daa
cmpsl
mov
clc
or
sub
lea
movsl
fwait
lret
jne
mov
xor
pop
clc
repz
pop
mov
mov
sub
sbbl
mov
jmp
lea
aas
mov
int
mov
adc
mov
sti
mov
out
jmp
pushf
add
push
or
sti
mov
stc
cmp
mov
xor
sub
and
subb
fldcw
outsb
cmp
and
in
adc
jbe
stos
cmp
or
pop
cmpsb
fsubrs
iret
adc
jne
xchg
sahf
cmc
mov
jmp
add
cli
es
push
loopne
jp
sub
mov
ljmp
adc
mov
jmp
push
xchg
xchg
dec
lods
jbe
sub
mov
inc
cwtl
inc
ds
into
ljmp
sbb
adc
jecxz
push
xchg
xor
jnp
sbb
sub
pop
std
dec
lods
pop
insl
sbb
test
in
jno
fstpl
ljmp
stos
push
imul
into
nop
imull
lods
mov
sub
push
jne
dec
std
sub
ljmp
mov
lods
jns
in
ret
stos
mov
xchg
add
lahf
sub
jo
xchg
inc
hlt
jmp
sub
fldenv
push
xchg
loop
movsb
sbb
jecxz
jae
dec
jmp
xchg
stc
sub
xchg
sub
pop
fwait
scas
lods
imul
mov
mov
push
ljmp
in
es
lods
or
jecxz
stos
cmp
push
fwait
inc
sub
mov
pop
arpl
imul
mov
sub
in
lods
lods
in
in
cld
in
dec
jmp
push
mov
push
scas
and
sti
jmp
sub
imul
pop
test
test
jmp
and
inc
mov
lods
loopne
in
xchg
mov
sub
dec
push
push
push
push
shlb
dec
push
inc
pop
pop
sub
std
xchg
out
lods
fisubrs
cmpsb
cltd
imul
cmp
mov
not
shrb
mov
sbb
mov
and
mov
negb
push
jb
adc
xorb
mov
movsb
xchg
insb
cltd
lret
enter
jbe
sbb
lea
lods
dec
sub
popa
fbstp
push
jnp
push
popa
jno
sti
cmp
sub
adc
push
jmp
leave
addr16
test
mov
std
jmp
mov
sub
ljmp
daa
shrl
in
sub
lods
mov
fsubrl
adc
loope
adc
lods
in
fisubrs
out
mov
stos
lds
fsubr
push
pop
imul
sub
loopne
jg
pop
stos
lods
daa
adc
rclb
ret
push
lods
test
ljmp
div
nop
sbb
sub
jge
jno
es
and
or
sub
push
outsb
andb
inc
lods
aam
jns
imul
addr16
out
push
outsb
mov
pop
mov
push
lret
push
pop
pop
sbb
xchg
sub
sub
insb
xchg
es
jo
lods
stos
sub
pop
rcrl
cwtl
aad
nop
sti
imul
sub
insb
mov
pop
daa
xchg
jbe
inc
stos
test
cmpsl
ds
gs
in
in
arpl
fs
or
cmpsl
xor
dec
shll
into
imul
subl
out
push
cs
fbld
scas
adc
stos
nop
pop
adc
aad
lea
push
rcll
add
popf
mov
inc
fdivrs
ljmp
shl
movsl
imul
fwait
arpl
bound
cld
and
or
ds
test
sub
and
mov
sub
insl
or
das
inc
rorb
mov
out
xor
pop
xchg
rcl
xchg
jo
xlat
push
or
and
xchg
adc
das
test
arpl
call
jle
in
cld
movsl
into
adc
and
dec
into
xchg
and
push
stos
call
push
inc
stos
aam
push
out
subl
in
dec
push
xor
xlat
rcrb
adc
adc
xchg
shll
push
dec
push
out
cmpsb
jno
pushf
inc
dec
mov
outsb
lods
pop
outsb
xchg
or
test
mov
int
shrl
out
lods
or
in
jecxz
add
cltd
nop
dec
push
mov
fwait
pop
shrb
push
jne
xchg
scas
popa
imul
adc
scas
or
scas
iret
stos
gs
xchg
out
mov
dec
jge
lcall
sub
in
inc
jecxz
sub
cltd
sahf
sub
or
stos
je
daa
lods
fs
outsl
stos
mov
adc
ficoms
add
jmp
dec
stos
shll
insl
daa
inc
imul
in
jp
sbb
jmp
push
mov
sub
xchg
lods
and
outsl
lods
insl
imul
int
dec
aaa
and
sbb
das
popa
mov
ret
push
pop
mov
aam
aad
xchg
push
out
lahf
or
mov
mov
sbb
fldenv
cmpsb
ficoml
and
sbb
cmpsl
cld
sbb
cmp
mov
pop
stos
xchg
adc
insl
jl
sbb
call
and
movsl
mov
movsb
lods
push
mov
outsb
mov
add
xor
fbld
adc
hlt
addr16
adc
int
or
arpl
out
inc
int
movsb
lret
in
call
movsl
xor
addr16
data16
insl
lahf
stos
mov
in
sti
nop
std
addr16
imul
sub
out
stos
out
mov
push
movsl
adc
stos
nop
sub
adcb
push
packuswb
mov
cmp
adc
and
pop
and
mov
repz
mov
or
push
ljmp
mov
mov
add
sub
outsb
sar
rcrb
mov
aam
aad
xchg
cmp
add
dec
outsb
ljmp
xchg
cmpsb
dec
gs
push
movsl
cmp
jle
mov
mov
out
dec
repz
add
imul
jnp
test
stos
sub
insl
mov
aaa
adc
push
pushf
and
inc
inc
imul
scas
lcall
or
xor
cmpsb
and
nop
add
iret
std
addr16
pop
rorl
sub
mov
inc
push
ret
in
ret
daa
jb
stos
dec
jmp
stos
fs
loop
stos
rorb
loopne
aad
xchg
jne
negl
int
daa
adc
das
mov
gs
lods
in
push
aaa
in
out
xchg
mov
test
mov
data16
imul
call
jns
ret
cltd
scas
insb
das
in
stos
inc
scas
cltd
adc
mov
pop
lock
push
mov
cmp
imul
sub
stos
out
push
push
loop
fldcw
sti
adc
nop
mov
cmp
subl
push
fiaddl
push
push
dec
in
or
fwait
es
stos
adc
dec
jmp
jnp
push
loop
cwtl
lods
test
stos
mov
out
sub
mov
cmp
xor
scas
call
add
push
les
sub
or
jmp
movaps
sahf
cmp
push
stos
aas
push
sub
cs
push
fcmovnbe
insl
xchg
fists
lcall
add
cmp
stos
clc
call
inc
ja
nop
pop
or
cmpsl
cmpsb
lret
lahf
test
mov
mov
sub
inc
push
mov
fisubs
mov
mov
pop
imul
pop
insb
push
mov
stos
in
fprem
lcall
lods
adc
and
cltd
test
je
jge
mov
xor
lods
stos
mov
sub
sub
imul
lods
cmpsb
lcall
fnstenv
shll
push
fucomi
sbb
mov
cwtl
sub
das
mov
or
mov
outsb
adc
xchg
mov
xchg
ret
std
lcall
jl
insb
push
and
fs
jmp
stos
nop
jmp
in
cmp
sub
mov
cmpl
mov
cld
lret
mov
aaa
stos
cld
call
rclb
int3
xchg
inc
aad
cwtl
stos
pop
pop
xchg
push
push
push
hlt
imul
jne
std
cltd
ret
movsl
jmp
push
jmp
inc
sub
push
fwait
sub
xchg
imul
jecxz
sub
imul
call
lods
scas
stos
std
push
test
xchg
cmp
stos
inc
pop
or
adc
imul
loop
inc
popa
outsb
and
and
mov
stos
mov
push
test
jmp
jmp
rcl
fwait
daa
sub
imul
adc
scas
icebp
rorl
aam
push
push
jmp
cwtl
sub
mov
pop
push
popf
imul
stos
mov
mov
inc
aas
adc
sbb
pop
mov
cltd
out
push
lahf
into
stos
adc
cld
shlb
fldcw
sub
jecxz
push
xchg
nop
sub
pop
xchg
sahf
and
in
fwait
loop
jmp
cmp
sbb
add
fwait
sbb
jmp
inc
cltd
aam
sub
stc
mov
cmp
mov
sub
aam
adc
imull
mov
sub
jmp
daa
push
es
fsts
xchg
call
or
movsb
out
jno
stos
jne
aam
mov
mov
shll
insb
stos
jle
pop
mov
stos
out
in
push
bound
inc
or
xchg
rcl
cmc
and
mov
sub
cmp
stos
and
pop
dec
mov
and
mov
jmp
sub
insl
sub
xchg
in
fwait
cwtl
std
je
or
daa
push
adc
popa
stos
andl
push
cmp
shll
popf
es
stos
fs
inc
xchg
popf
push
outsb
adc
sub
out
addr16
test
lcall
movsl
ds
movsb
mov
fwait
fs
mov
popf
xlat
ds
js
inc
pop
stos
call
test
mov
cltd
jns
mov
jecxz
daa
scas
insb
mov
hlt
imul
jecxz
lahf
in
lcall
shll
lods
bound
mov
mov
and
sub
stos
out
adc
push
pusha
fnstenv
scas
push
arpl
lods
aam
test
aaa
ds
jl
mov
cmp
stos
jbe
mov
aam
adc
xchg
sbb
les
out
push
pop
fwait
in
xor
jmp
and
int3
mov
stos
daa
push
stos
call
push
ss
iret
adc
pop
leave
pushf
lds
repz
stos
ljmp
sarl
stos
xchg
jl
sti
dec
ds
mov
cmpsl
sub
stos
mov
xchg
xor
push
and
adc
leave
push
jne
jle
mov
mov
stc
pop
lahf
aad
push
stos
pop
test
in
cmpsb
ror
stos
adc
adc
jp
sbb
dec
lcall
es
std
adc
jns
mov
mov
jnp
sub
push
out
aam
push
adc
fistpl
rep
xchg
loop
imull
and
das
sbb
loopne
mov
jmp
stos
test
insb
add
fcomp
fnstenv
pop
jge
cmp
popf
mov
in
imul
stos
bound
cmp
jp
jge
cli
push
arpl
and
int
jnp
mov
xor
cmpl
ljmp
sbb
pusha
ljmp
jge
mov
and
adc
stos
xchg
mov
push
sbb
pop
call
imul
push
data16
add
adc
adc
in
stos
imul
subb
rorl
sub
push
aas
push
stos
fisttpl
arpl
out
mov
jle
jge
mov
movsb
dec
test
insb
pusha
xchg
bound
cltd
and
bnd
subb
jmp
jecxz
pusha
imul
mov
ja
aam
mov
outsl
movsb
cld
adc
xchg
iret
push
jne
xchg
jle
xchg
sarl
dec
push
int
test
rcl
daa
jl
mov
gs
imul
je
jp
dec
fwait
lods
stos
sahf
xchg
ffree
stos
sub
aad
jne
lret
daa
cld
loop
jae
fs
xchg
sbb
lods
pop
scas
das
push
in
adc
adc
in
push
xchg
mov
pop
aad
das
xor
stos
in
mov
sbb
cmp
cmp
cltd
sub
out
push
fcmovbe
lret
sbb
dec
popf
loope
mov
or
std
arpl
scas
cmp
dec
mov
in
mov
loope
gs
mov
fldt
xchg
sbb
push
pop
adc
dec
stos
pop
xchg
int3
outsl
sti
imul
incb
or
and
gs
xchg
sub
int
push
fsubrs
dec
fimuls
cs
fs
cmpsb
mul
aaa
loopne
inc
cld
shrb
and
jne
cmp
xchg
xchg
adc
push
push
pop
xor
out
push
xchg
stos
add
or
stos
add
out
stos
sub
not
dec
cs
stc
pop
and
fucomi
lcall
push
in
mov
mov
dec
and
sub
mov
out
xchg
xchg
arpl
xchg
cmp
arpl
push
stos
jge
and
stos
jae
cmpb
jg
push
stos
insb
test
out
and
fsubr
jns
das
pop
xchg
rcrb
pop
daa
or
arpl
loope
jg
jnp
cld
dec
cld
jle
stos
adc
sbb
imul
in
push
push
out
fisubrl
mov
adc
inc
xchg
ret
stos
adc
ss
int3
mov
inc
cmp
fldcw
out
xchg
shl
stos
fdivr
fistpl
stos
lcall
call
stos
jge
jp
jnp
ds
aad
in
test
stos
adc
xchg
imul
mov
mov
dec
push
stos
js
or
jle
inc
stos
lcall
aad
mov
jno
lahf
sbb
xor
icebp
sub
in
loope
inc
mov
stc
lea
fs
stos
push
lret
stos
adc
pop
dec
xchg
enter
xchg
sbb
rcll
movsb
sub
movsl
dec
pusha
das
imul
lcall
cmpsl
jno
setae
mov
dec
inc
into
pop
mov
sub
movsl
mov
jmp
addr16
mov
je
push
xchg
cmp
adc
fstps
fcoms
stos
xchg
rcrb
movsl
call
mov
xor
or
fucomp
cmc
shrl
jo
adc
es
hlt
stos
lods
adc
sub
in
dec
loopne
mov
stos
inc
sti
lahf
mov
test
das
inc
shll
imul
xchg
popw
stos
mov
push
movsl
imul
stos
scas
sub
movsb
test
lcall
pop
mov
outsb
sbb
cld
addr16
bound
pusha
jns
cmp
mov
and
test
add
popa
das
stos
and
outsb
xchg
int3
push
aad
jmp
xchg
dec
mov
adc
shlb
and
cmp
mov
scas
loopne
fwait
jns
insb
in
imul
fucom
mov
xchg
leave
in
inc
cmpsl
int3
mov
cld
mov
sub
push
cmp
stos
mov
inc
push
or
aad
fwait
sbb
pop
rcll
push
inc
mov
loopne
ljmp
je
adc
jg
in
sub
stos
pop
call
sahf
fisubrl
xchg
pop
scas
dec
or
stos
loopne
mov
outsb
stos
mov
test
stos
es
insb
inc
rclb
mov
cwtl
sub
cs
sbbb
fs
sub
stos
cmpsl
mov
mov
mov
and
mov
mov
shlb
call
push
cwtl
xlat
lret
stos
pushf
or
inc
lcall
dec
sub
pop
cmp
mov
xor
imul
pop
mov
lret
stos
push
pop
in
mov
inc
stos
pop
mov
mov
cmp
xor
das
lea
mov
add
jno
jns
sub
stos
data16
mov
dec
cwtl
dec
cld
rcrb
xchg
jnp
cmpsl
scas
and
jle
stc
add
mov
cmp
lods
fisubrs
push
adc
addr16
cmc
fndisi(8087
addl
sub
cmp
into
push
outsb
mov
stos
ds
mov
leave
stos
cmp
aas
out
movsb
shrb
insl
mov
pop
xchg
movsb
fstps
fwait
popf
adc
push
lcall
gs
mov
aam
pop
jmp
inc
and
ss
adc
adc
mov
mov
sbb
pop
mov
arpl
push
mov
jge
jns
cld
repz
shll
mov
push
and
inc
push
xchg
stos
pop
ficoml
sbb
popf
pop
stos
pop
lods
push
shrl
icebp
stos
aas
cld
jl
cmp
or
lcall
ljmp
jno
push
jnp
xchg
stos
sub
cli
stos
cld
cmp
mov
loopne
ljmp
out
push
psubusw
es
rcrl
pop
fistpl
cmpsl
stos
pusha
mov
xor
stos
stos
sti
inc
mov
out
cmp
sbb
add
fcompl
jmp
adc
cmp
mov
mov
mov
jl
inc
movsb
shl
pop
scas
lods
adc
addr16
fldl
pop
std
pushf
icebp
stos
jmp
ljmp
sti
xchg
clc
dec
pop
xorb
cld
sbb
roll
xchg
push
fwait
addr16
sahf
xchg
pop
xchg
inc
mov
arpl
push
sub
cmpsl
mov
sar
mov
daa
clc
push
mov
loope
es
or
push
pop
xchg
jae
sub
imul
sbb
inc
and
pop
mov
dec
mov
inc
cmp
arpl
pop
lods
push
mov
fcomps
lahf
sbb
stos
jmp
cmp
xor
ret
xchg
into
mov
in
cmpsb
and
daa
mov
push
les
mov
pushf
pop
je
sbb
scas
add
mov
jns
clc
xchg
test
imul
xchg
imul
and
out
mov
and
stos
mov
lahf
mov
arpl
out
daa
dec
stos
ljmp
mov
imul
pop
pop
jg
inc
ljmp
insl
push
jl
jmp
adc
jle
mov
outsl
orl
imul
mov
jge
mov
jmp
arpl
ljmp
test
push
outsl
add
loop
fcmovnbe
in
adc
stos
xor
movsl
adc
xchg
fcom
addr16
pop
mov
cmp
sti
mov
xor
out
lods
aad
sub
sbb
push
repnz
stos
mov
rclb
sub
xchg
jmp
jle
std
gs
cmp
dec
and
call
insb
out
ficoml
sahf
aad
mov
adc
xchg
push
push
cs
stos
xchg
es
mov
jmp
cld
call
xchg
jns
stos
sub
push
std
sbb
lret
fisttps
xchg
stos
push
scas
inc
push
push
je
sbb
pop
mov
xlat
addr16
ljmp
push
adc
dec
aad
push
inc
movsb
in
les
push
sub
in
mov
stos
and
jle
loop
stos
nop
shl
push
fcomps
sbb
adcl
daa
xchg
stos
jno
jmp
jns
push
lods
xchg
or
stos
bound
sub
mov
into
lods
jp
lods
scas
fwait
outsl
mov
imul
and
arpl
loope
cmp
add
mov
cmp
add
or
stos
jbe
mov
pop
fstpt
xchg
nop
jmp
leave
cmp
jmp
loop
lods
and
shll
inc
in
sbb
bound
lods
fldt
pop
stos
push
out
inc
xchg
enter
xlat
fstl
cltd
or
inc
sub
and
stos
jg
cmp
aas
movsl
mov
imul
stos
sarb
jae
add
fwait
in
movsb
mov
sub
sub
test
adc
daa
push
xchg
scas
cs
push
add
test
push
cmp
mov
shlb
bound
inc
and
out
push
outsl
jg
stc
loopne
pop
adc
sbb
cmc
jcxz
ds
js
mov
cwtl
lret
ret
sub
sub
sub
inc
out
stos
xor
xchg
xchg
adc
push
push
jecxz
lahf
xchg
inc
cwtl
xchg
shrb
les
jnp
mov
psrad
stos
ja
gs
ljmp
out
ret
outsb
gs
fisttps
jmp
inc
gs
xchg
or
add
xor
cmp
xchg
cmp
lods
ja
subb
push
push
in
jb
stos
aam
adc
push
in
stos
xlat
push
push
mov
xor
stos
in
test
push
and
mov
push
test
in
mov
stos
out
in
fsubrp
dec
push
sub
call
mov
ljmp
addr16
push
dec
es
repz
stos
pop
insl
or
test
xchg
stos
sbb
xchg
hlt
sarl
pushf
push
and
cmc
adc
sub
scas
out
mov
aaa
jecxz
loopne
fnstcw
stos
loop
cmpsl
movsb
xchg
addr16
sub
test
lock
shlb
adc
out
push
insb
push
sub
test
addr16
out
and
jl
imul
mov
fucomi
mov
test
mov
adc
rcrb
ljmp
sub
ljmp
repnz
mov
clc
stos
jl
loopne
in
stos
xor
rclb
xchg
and
push
pop
lods
movsb
xchg
and
sbbl
daa
daa
add
stos
movsl
imul
jmp
jp
sub
xchg
stos
fisubrl
xor
adc
test
imul
out
mov
pop
mov
repnz
je
stos
jp
mov
and
sub
pop
push
fsubl
scas
and
xchg
and
movsb
outsl
xchg
jae
bound
mov
stos
jo
push
out
out
cld
sub
xchg
add
xchg
add
popf
pushf
fisubrs
std
add
adc
and
mov
fsubrl
icebp
mov
stos
mov
sbb
sbb
sbb
sub
sub
jmp
fs
dec
popa
adc
inc
scas
mov
clc
imul
push
or
loop
fwait
js
sbb
inc
mov
adc
lods
jg
and
jns
stos
dec
and
inc
push
jle
inc
pusha
fstps
lods
pop
clc
stos
frstor
mov
stos
fmull
adc
test
shl
loop
popl
xor
cmp
xor
xor
adc
pop
ja
in
sahf
fimuls
mov
pop
lahf
xor
push
lds
mov
xor
cli
scas
lcall
jno
icebp
inc
scas
xlat
stos
divb
outsl
stos
adc
jno
xchg
inc
stos
sbb
cmpsl
scas
fsubrs
mov
cmp
cmp
and
ljmp
adc
xor
xchg
pushf
and
ret
ss
xchg
dec
xchg
push
outsb
stos
shrl
arpl
add
push
jns
cmp
jmp
imul
out
mov
inc
sbb
nop
add
out
jl
icebp
push
loope
push
pusha
mov
fwait
arpl
aam
out
cmpsb
inc
sub
sub
sahf
push
xchg
or
inc
stos
aad
xchg
fcom
lock
add
cmpsl
shrb
jnp
sub
add
stos
arpl
mov
or
std
imul
ret
mov
lahf
xor
or
rorb
sub
push
into
gs
data16
test
fs
jmp
test
pushf
insb
jge
scas
in
or
lahf
inc
in
subb
sbb
jp
pop
cs
fcompl
cwtl
mov
int
push
stos
fs
mov
iret
sub
stos
cmc
mov
popf
cmp
insb
xchg
lahf
pop
lea
xchg
sarb
push
cltd
adcl
scas
insb
adc
test
jnp
mull
loop
jg
mov
mov
lods
addr16
imul
scas
mov
sbb
mov
cld
pop
inc
jmp
fwait
xor
and
dec
jl
cmp
xchg
cmp
add
pop
lcall
les
out
push
or
es
sub
or
sarl
ja
aaa
xchg
mov
sub
inc
xchg
push
sbb
icebp
add
push
cmpsl
xchg
xchg
outsb
stos
sub
push
cmpsb
adc
sar
loopne
scas
aaa
add
mov
inc
stos
insl
aas
fisubs
stos
add
add
stos
iret
sarl
pop
add
mov
jnp
mul
fdivs
int
fbstp
mov
ljmp
fmull
shlb
mov
lcall
imul
jns
jmp
sub
cwtl
mov
mov
mov
stos
int
sub
adc
stos
cmp
adc
cmp
xor
or
push
mov
fistpll
in
jnp
aaa
xchg
imulb
fdivrp
shlb
stos
test
mov
adc
stc
flds
stos
jp
leave
xchg
jmp
lret
out
mov
stos
mov
jge
cmc
xchg
sti
lods
inc
stos
cmp
iret
es
in
aas
mov
stos
and
pop
nop
sbb
dec
push
push
fcoml
xchg
push
inc
adc
push
sub
loopne
mov
popa
aaa
push
jmp
sub
inc
test
lods
xor
lods
outsl
nop
pusha
daa
xchg
add
inc
xor
stos
mov
jnp
outsb
imul
lods
fcmovnbe
sub
mov
mov
test
stos
out
and
cmp
mov
and
adc
stos
push
xchg
test
daa
adc
xchg
stos
push
cmp
jnp
popf
dec
or
mov
and
mov
in
jnp
stos
sub
enter
shrb
stos
push
mov
fists
in
outsb
insb
lods
icebp
adc
flds
xchg
inc
shrb
popf
insl
stos
jmp
and
mov
idivb
mov
mov
fisubrl
inc
xchg
or
stos
and
xchg
lods
fsubr
stos
gs
shlb
ljmp
aas
and
arpl
mov
mov
fistl
cli
nop
mov
jmp
das
outsb
xchg
stos
add
fsubrl
sahf
test
insb
mov
icebp
rorb
stos
aam
pop
in
out
sub
and
pop
push
in
add
mov
push
xchg
inc
imul
and
cmpl
adc
inc
negb
ret
sub
out
dec
adc
fisttpl
jp
jnp
add
cmp
adc
xchg
outsb
fcoms
sbb
pop
and
sbb
mov
lock
imul
pop
cmp
stos
push
popf
mov
mov
arpl
stos
aam
pop
sbb
pop
xchg
stos
pop
jmp
aam
push
sahf
jmp
jns
cld
mov
stos
jnp
add
adc
mov
and
cmp
outsl
mov
aam
sbb
lods
push
push
shrl
jecxz
jle
ss
js
cmc
inc
repnz
xor
cli
mov
mov
mov
add
rcrl
mov
mov
push
cmp
mov
stc
cmp
pop
movsb
fwait
call
shrb
adc
cmp
outsl
fiaddl
push
mov
cltd
int3
movsb
lods
out
xlat
lret
shrb
es
push
jo
cmpsb
mov
fidivrl
scas
sti
xchg
cmp
ret
shl
cwtl
adc
sbb
fisubrl
mov
and
pusha
mov
movsb
jae
xor
arpl
and
mov
test
popf
mov
mov
xchg
adcl
lods
xchg
imul
loope
add
imul
jmp
out
push
dec
stos
sub
mov
jmp
and
jg
xchg
nop
popa
stos
imul
push
jmp
cwtl
lret
fidivl
sbb
xor
dec
push
imul
bound
fs
cmpsb
fsubrs
xchg
stos
insb
inc
scas
sub
adc
stos
push
aam
push
fwait
push
mov
fcomps
cmp
es
int
jnp
in
imul
pop
lds
jae
loopne
popa
jns
imul
js
arpl
fxch
xchg
cmc
dec
xchg
stos
push
shrl
add
mov
std
arpl
sub
mov
insb
cld
mov
mov
push
sarl
popa
xchg
test
imul
push
cmpsl
xor
das
dec
daa
outsb
subb
mov
xchg
push
shlb
jg
add
mov
push
rcll
adcb
mov
cmpsb
mov
shrl
cmpsl
stos
lods
cmp
lods
arpl
imul
call
push
xchg
sbb
push
mov
adc
stos
push
push
pushf
sub
imul
and
and
lcall
rclb
fldt
pop
das
mov
aaa
mov
push
daa
outsb
xchg
aam
xchg
mov
stos
push
test
in
hlt
imul
imul
add
push
cmpsb
mov
xchg
mov
scas
push
stos
outsl
aam
rol
adc
scas
stos
ja
fsubr
and
mov
cmpsb
es
sub
inc
dec
inc
stos
sbb
mov
mov
push
mov
fidivl
jnp
arpl
lods
out
mov
sbb
sbb
imul
or
mov
sub
stos
imulb
push
and
mov
mov
in
xor
mov
outsl
in
adc
sbb
add
lahf
mov
stos
mov
fdivrl
mov
in
ret
jbe
sahf
repz
mov
idivb
popa
and
push
dec
xchg
sbb
stos
dec
pop
mov
adc
movsb
sub
sub
jmp
imul
data16
insb
jns
pop
in
xchg
mov
or
mov
nop
aas
in
inc
xchg
mov
pop
aad
cltd
mov
pop
shl
out
stos
mov
enter
mov
mov
cmp
stos
fistl
xchg
push
loope
aaa
sbb
dec
sbb
cwtl
pop
pop
push
jmp
das
push
sub
and
stc
jecxz
and
sub
push
daa
imul
push
push
add
mov
push
sub
roll
xchg
dec
push
ret
xchg
and
nop
test
push
cmc
sub
gs
loop
stos
jle
jnp
ss
xor
jne
jp
loope
es
insb
mov
sub
fldcw
sahf
add
pop
cmpsl
pop
popf
rcll
call
jb
xlat
movsb
jg
sbb
ljmp
in
stos
push
and
mov
mov
out
and
in
repnz
push
pop
loopne
pop
push
cli
push
lea
xchg
sub
shr
mov
adc
sti
dec
mov
stos
repz
pusha
ss
out
movsl
lods
pop
adc
fisubl
add
pushf
lcall
test
mov
push
jmp
ljmp
and
jg
cmp
mov
stos
cmp
jmp
mov
test
cmp
sub
pop
cltd
mov
fwait
in
push
lods
dec
lods
imul
inc
arpl
mov
jnp
jns
imulb
mov
cmp
mov
stos
pop
push
push
fwait
xchg
pop
push
jmp
sbb
lcall
loopne
lods
scas
and
scas
stos
insb
push
sub
stos
mov
add
js,pt
cmp
jmp
push
adc
lds
stos
mov
fisubs
lcall
insl
mov
ljmp
scas
cwtl
stos
pop
movsb
fildll
ds
jle
stos
jp
stc
pushf
std
mov
xor
xchg
fistl
pop
inc
inc
mov
ds
jno
int
push
add
inc
outsb
daa
sub
aaa
cmp
stos
mov
adc
dec
in
mov
push
test
stos
aam
sbb
out
movsb
scas
repz
jmp
sub
test
cld
push
push
out
js
jle
mov
sbb
cmp
ja
aaa
stos
and
sub
out
in
sbb
fdiv
dec
outsl
sub
stos
aas
lods
mov
nop
stos
ja
jp
mov
in
test
test
adc
push
push
enter
stos
subl
outsl
and
mov
sub
addb
adc
jne
imul
scas
shll
test
mov
add
lods
pop
adc
test
lahf
mov
shlb
rcll
stos
incl
cld
cmp
jns
sub
int3
incb
mov
sub
imul
stos
pop
mov
or
ja
jp
lret
aad
outsb
pop
cwtl
xchg
scas
stos
push
insb
sub
stos
jns
in
sub
out
ljmp
sub
push
bound
fscale
je
stos
dec
and
sub
insb
mov
or
and
inc
mov
test
mov
jmp
sub
stos
sbb
sub
lods
or
cmpsb
shll
stos
es
lods
or
aaa
das
cmp
imul
push
fildll
cld
shrb
mov
and
push
imul
cmp
bound
adc
scas
into
adc
fisttpll
push
jns
out
sub
push
mov
xchg
les
shrb
cwtl
push
popa
not
sub
stos
icebp
push
in
and
es
popf
adc
outsl
test
int3
push
je
dec
stos
push
xchg
jmp
xchg
insb
stos
sub
fists
rcrb
stos
fdivl
out
aam
out
arpl
jmp
dec
jl
mov
loopne
es
in
lods
xchg
push
push
stos
inc
adc
outsb
ret
imul
cmpsb
orl
stos
in
out
cs
rorb
mov
bound
or
sbb
sub
xchg
outsb
movsl
sub
inc
mov
bts
dec
push
mov
insl
mov
and
mov
movsb
mov
lret
push
mov
mov
and
pop
adc
sub
mov
sub
insb
mov
jnp
shr
movsl
leave
stos
and
popa
arpl
mov
gs
sub
fwait
outsl
clc
push
adc
push
addr16
jg
je
pop
lahf
mov
fwait
adc
stos
call
cltd
in
stos
loope
cmp
cmp
and
test
jg
mov
cmp
adc
push
add
xor
imul
jl
jmp
sub
push
ds
pusha
daa
cmp
and
pop
out
imul
mov
sbb
lret
fucomp
scas
inc
cs
mov
out
ja
daa
movsl
push
mov
out
adc
ror
jb
mov
stos
jb
scas
jge
aas
pushf
bound
in
mov
fcompl
mov
ljmp
sarl
push
or
test
push
in
and
cmpsb
mov
fsubrs
cmp
pop
dec
sbb
in
test
lods
sub
insb
stos
sub
out
jge
mov
rcll
addr16
xchg
out
stos
xor
push
cltd
xchg
push
js
adc
sub
imul
movzbl
stc
push
mov
lahf
shr
cwtl
stos
jne
add
popf
sub
add
or
and
pop
imul
out
xchg
mov
out
cmpsl
sub
movsb
mov
cltd
mov
jecxz
fildll
xchg
jb
das
pop
pop
push
stos
xlat
aad
aam
rcll
rcl
mov
cmp
cltd
push
adc
xor
pop
jle
cmp
jb
mov
dec
aas
jg
shlb
pop
aad
dec
add
inc
fstps
pop
pop
dec
xchg
ficoms
adc
mov
les
mov
jecxz
pushf
stos
jno
insb
popa
popf
jle
mov
sub
sub
add
xchg
pop
fiaddl
cmpsb
push
xor
mov
jae
aaa
cs
sarb
stos
push
outsb
sub
and
cmp
xchg
cmp
mov
fwait
mov
pop
nop
pop
push
stos
pop
fstl
rcr
lea
cmp
cs
lods
mov
stos
push
gs
movsb
cltd
mov
stos
repz
arpl
bound
out
jg
shl
and
mov
xchg
push
mov
jae
imul
mov
stos
push
xchg
repz
popf
outsl
mov
loope
shrb
mov
and
and
xchg
sarb
cld
ret
mov
jl
mov
fwait
lcall
fucomip
pop
mov
push
iret
outsb
icebp
sub
fs
popa
jns
and
and
cmpsb
stc
out
clc
sbb
aas
daa
or
outsl
sub
push
push
jle
loop
mov
push
aad
stos
cmpsb
xchg
scas
outsl
push
out
mov
adc
sub
hlt
outsb
dec
push
mov
mov
test
push
jg
jecxz
test
stos
jp
dec
cwtl
jge
add
shrl
stos
mov
mov
sbb
clc
and
es
inc
cmpsl
call
sub
sub
jne
mov
lods
in
hlt
out
enter
stos
rcll
add
rcrb
fwait
xchg
stos
sbb
daa
cli
push
ret
es
fnstsw
ljmp
int
bound
cwtl
adc
xchg
js
xchg
push
shrb
out
xchg
sub
icebp
mov
adc
dec
cmpsl
and
mov
sbb
cmp
mov
scas
stos
es
or
pop
gs
popf
ss
scas
push
adc
aam
xlat
outsb
popf
in
cld
xchg
imul
arpl
and
ret
push
pop
mov
cmpsl
xchg
xlat
das
add
jg
pushl
shl
inc
push
das
sbb
xchg
hlt
push
cmp
imul
dec
push
out
lret
out
arpl
movsl
ja
lcall
pop
fsubrs
sub
sub
mov
imul
adc
stos
pop
mov
outsl
push
stos
jmp
cmpsl
in
fistpl
pop
es
sub
popf
cltd
stos
push
jl
jle
push
sub
jmp
push
jnp
imul
mov
lahf
fwait
and
and
xchg
cwtl
lret
jmp
inc
xchg
adc
daa
xchg
mov
xchg
jo
out
ret
rcrb
pop
scas
test
cmpsb
lret
cmp
mov
push
out
sub
scas
mov
outsl
das
push
stos
out
cmpsb
lods
ja
mulb
out
test
jmp
stos
cs
push
leave
push
add
arpl
aad
mov
sahf
stos
and
and
mov
mov
push
and
outsb
cmp
jp
pop
aad
imul
lods
sbb
cltd
stos
inc
cmp
inc
dec
std
imul
insl
xchg
sub
sub
jno
pop
movsb
hlt
stos
mov
adc
jge
jmp
aas
scas
or
imul
in
inc
out
push
sub
push
cmpsl
adc
adc
push
xor
imul
loop
aas
xor
cmp
stos
jl
pusha
add
stos
sub
push
lods
push
mov
stos
adc
push
in
pop
scas
adc
sub
jmp
sub
cmp
stc
mov
sub
inc
mov
jmp
gs
jne
xchg
stos
subb
adc
das
outsl
mov
dec
rorl
shrb
shr
xchg
mov
dec
stos
adc
stos
lods
stos
gs
mov
push
mov
mov
ljmp
daa
fcom
add
loopne
push
jg
ljmp
insb
call
imul
sub
add
mov
inc
movsl
stc
bound
popf
xor
stos
xchg
and
test
sub
push
in
push
cmpsl
aad
xchg
scas
xchg
stos
and
lods
repnz
push
loopne
into
out
pop
shlb
adcb
scas
xchg
stos
inc
in
jb
xchg
test
cmc
cld
add
mov
movsb
insb
stos
ljmp
fwait
jg
test
push
stos
inc
shr
sub
mov
insb
inc
scas
stos
adcb
push
loope
pop
das
aam
sbb
cmp
xor
fwait
lea
jne
lret
sbb
stos
mov
lahf
pop
test
adc
sub
sahf
out
xchg
fisubrl
stos
call
push
repz
leave
lods
aad
cs
test
fsubs
jge
cmp
jnp
push
jns
mov
push
lods
stos
sbb
adc
sbb
fisubrl
rcll
stos
in
push
push
sub
cmp
sbb
lods
pop
stos
mov
xchg
and
ljmp
scas
cmp
pop
stos
loopne
arpl
lret
daa
jecxz
cmpsb
push
sti
xlat
add
push
stos
cmp
jmp
test
data16
stos
stc
insb
mov
xchg
adc
inc
mov
lods
in
sbb
inc
mov
mov
stos
jp
bound
out
pop
push
imul
push
nop
push
imul
addr16
mov
and
jmp
mov
ss
clc
test
stos
movsb
in
loopne
dec
lods
insb
subl
add
out
sub
lds
dec
dec
popa
sub
data16
and
sbb
mov
nop
lea
out
jnp
fucomp
shl
scas
ret
stos
cmp
stos
imul
arpl
imul
bound
aad
push
dec
in
in
stos
sub
push
mov
jg
lods
push
push
movsb
scas
imull
add
sub
daa
push
and
out
stos
ljmp
dec
out
stos
shrb
scas
icebp
lods
mov
cmpsl
daa
ljmp
out
movsl
push
xchg
jo
pusha
push
shrb
push
jno
cmc
pop
popa
xchg
push
out
aad
mov
xchg
cmpsl
pop
movsb
push
mov
xchg
pop
push
call
mov
dec
das
outsb
adc
and
jmp
gs
fisubrs
in
jmp
adcl
shll
push
stos
jmp
in
call
and
cmpsl
loop
mov
xchg
jmp
jle
jmp
cmp
mov
call
xchg
stos
push
lods
dec
out
popa
outsl
mov
movsb
push
push
mov
sahf
shll
dec
test
cmpsb
out
out
fs
sbb
mov
mov
ljmp
sub
fsubs
in
stos
nop
scas
mov
shrl
adc
es
push
jnp,pn
sub
in
stc
push
stos
movsl
packsswb
and
jno
and
sub
stos
shrb
leave
mov
jmp
out
sub
aas
outsl
push
cmpb
scas
xchg
scas
fucomp
mov
stos
adc
rcrb
out
ss
aas
popf
mov
mov
cmp
shrb
in
daa
movl
push
cmp
cld
push
insl
or
daa
push
mov
test
leave
xchg
mov
outsb
sub
mov
stos
cmpsb
fwait
ds
fs
movsb
cmp
arpl
gs
lock
xchg
insb
push
push
add
dec
nop
inc
xchg
add
sub
cmp
cs
std
xchg
sti
mov
fnop
push
push
shr
stos
lods
sub
stos
mov
add
mov
push
insl
imul
jp
add
inc
mov
pop
insb
stos
sub
cmp
subl
add
lods
sbb
jge
jmp
jnp
sbb
stos
insb
push
push
in
dec
insl
jno
mov
nop
jmp
addr16
fwait
mov
cld
sub
stos
fisubrl
fwait
in
adc
das
stc
stos
push
fs
push
ret
addr16
push
imul
lcall
daa
pusha
int
bound
or
xchg
ss
insb
enter
xchg
das
lahf
adc
jmp
mov
jl
int
in
push
dec
in
fucomp
xor
mov
loop,pn
cld
scas
in
sub
mov
xchg
cli
jl
inc
daa
iret
fs
fsts
sub
sbb
shrb
jns
lods
iret
popa
push
scas
and
scas
ljmp
fwait
adc
and
mov
outsl
fldt
fwait
bound
cmpsb
cmp
cwtl
jmp
jb
mov
sub
jo
and
and
fs
movsl
testb
out
xor
or
cmp
pop
mov
jle
lock
push
rep
xchg
cltd
dec
cmpsb
stos
lds
sbb
pop
lcall
cmp
xchg
cmpsb
fs
mov
sub
xor
push
cmp
pop
sub
xor
popf
daa
cmp
inc
in
out
sub
mov
mov
xchg
lods
push
cmp
pop
loop
add
mov
arpl
fs
insb
scas
outsb
stos
lcall
in
jns
mov
pop
stos
push
daa
test
addr16
inc
mov
sub
das
xor
cmp
sub
in
and
movsb
enter
bound
xchg
add
int
out
shlb
das
mov
test
call
lret
daa
mov
mov
push
mov
dec
xchg
jl
adc
push
int3
adc
scas
lea
daa
mov
stos
loope
and
and
and
sub
lret
sbb
lods
std
out
pop
and
mov
push
loope
shrl
scas
dec
addr16
xor
lods
mov
push
arpl
shrb
lea
outsl
sbb
shrl
insl
xlat
in
dec
stos
jmp
push
sbb
icebp
sub
lods
ret
cs
mov
xchg
stos
push
adc
xchg
loopne
int3
stos
roll
rolb
out
data16
popa
sub
cmpsl
xchg
stc
mov
arpl
movsb
dec
and
push
cmc
call
jle
das
in
sub
dec
xchg
jmp
pop
stos
fwait
and
hlt
lods
mov
ljmp
mov
ljmp
in
pop
sub
xchg
jg
xor
lods
subl
lods
mov
push
repnz
adc
or
scas
daa
imul
jmp
inc
sbb
mov
cmp
cwtl
or
xchg
xchg
imul
mov
jmp
jns
fucom
cli
arpl
jae
cltd
in
pop
out
inc
push
aad
mov
add
push
outsb
js
scas
mov
stos
xor
sub
notb
cmp
stos
or
lods
pop
and
std
test
xchg
push
and
daa
add
cmp
cmpsb
dec
jb
ret
sub
scas
out
pop
mov
cs
jp
outsl
inc
pop
xchg
pop
adc
push
pop
in
lea
imull
sub
xchg
pop
ljmp
fwait
and
push
cmp
and
jmp
nop
popa
adc
push
leave
xchg
push
push
push
shrb
dec
sub
mov
sub
or
stos
jo
ret
insl
stos
in
stos
repz
addr16
in
and
loopne
and
popf
jecxz
gs
scas
sub
xchg
pop
adc
addr16
dec
nop
adc
jmp
imul
and
subl
or
out
xor
fcoml
imul
pop
sub
out
leave
cmp
mov
stos
sub
sub
scas
mov
shr
outsl
mov
push
push
lock
push
xchg
lods
nop
mov
sub
xchg
sub
stos
xor
and
jecxz
jmp
cmp
mov
jmp
lods
repz
pop
outsl
inc
xor
fldl
push
scas
aam
adc
lret
sbb
dec
sub
jno
aaa
les
test
shrb
stos
lods
inc
in
sbb
lods
hlt
popf
aas
jnp
jne
leave
movsb
jmp
mov
mov
iret
nop
push
mov
push
adc
xchg
in
xchg
push
inc
stos
out
cmpsl
addr16
and
jecxz
call
sub
mov
xchg
sub
mov
or
sbb
nop
push
les
mov
jns
or
insl
mov
lcall
daa
shr
xchg
test
cmpsl
and
imul
into
push
sbb
lcall
mov
inc
data16
cmpsb
jmp
iret
call
jmp
in
cwtl
sub
shlb
in
cmp
sub
push
or
xor
cmpsl
fucomi
jbe
push
insb
mov
shrb
scas
xchg
cs
dec
stos
in
mov
xor
daa
cmpsl
nop
es
mov
stos
jo
push
mov
lods
push
orb
sub
stos
inc
test
imulb
mov
sub
push
imul
insl
fsubrs
push
sar
shrl
loope
das
mov
sub
adc
stos
data16
and
fs
ret
stos
sub
sub
movsb
scas
pop
scas
adc
jns
mov
xchg
ljmp
call
scas
sub
sub
push
mov
mov
jae
xlat
stos
mov
and
bound
xchg
sub
ds
jmp
push
jecxz
out
in
imul
xchg
insb
jne
std
sub
das
out
pop
mov
insb
cmp
ljmp
jno
inc
cmp
sub
out
dec
mov
mov
out
push
sub
mov
movsb
sub
les
lret
cld
cmpsl
andb
sub
push
mov
aaa
jo
aas
stos
int3
scas
outsb
xor
adc
add
cld
jg
out
stos
mov
outsb
lock
imul
lahf
sub
push
jecxz
lods
out
jo
inc
stos
subl
stos
addr16
loope
lret
scas
lea
adcl
or
jmp
std
sub
imul
jge
rorb
shr
ret
add
ljmp
ja
or
and
mov
in
mov
scas
dec
adc
xchg
test
nop
mov
imul
imul
sub
lods
inc
insl
in
dec
fwait
lock
push
addr16
movsl
mov
push
stos
jecxz
mov
movsb
stos
cmp
ljmp
out
scas
das
xor
jl
insl
add
sub
lods
ret
lods
fnstcw
mov
or
mov
pop
jmp
in
mov
stos
cs
adc
xchg
int3
nop
mov
out
shrd
mov
movsl
daa
gs
xor
or
js
xor
adc
fimull
push
out
lock
loopne
push
stos
xchg
mov
jmp
xchg
jmp
lods
sbb
adc
cltd
mov
int3
popf
mov
sti
dec
movsb
icebp
in
cltd
cmp
and
aaa
daa
ljmp
add
mov
mov
imul
repz
xchg
xor
stos
inc
scas
out
sbb
cs
pop
push
out
cltd
in
mov
call
stos
loopne
in
push
insl
fwait
scas
pop
sarb
mov
lods
ljmp
out
and
out
test
int3
ds
outsl
mov
sbb
std
mov
clc
xchg
arpl
mov
xchg
addr16
test
dec
fldcw
inc
dec
insl
stos
sub
inc
ljmp
out
mov
cmpsb
jle
addr16
sbb
imul
cs
stos
das
sub
insb
nop
shrb
sub
movsb
das
dec
sub
jbe
xor
fbld
lret
std
movsb
fildll
fs
out
xchg
push
imul
push
lret
stos
adc
xchg
pop
adc
adc
stos
outsl
push
sub
jmp
out
and
in
data16
daa
ja
pop
in
or
sub
insb
ret
sub
es
pop
data16
and
subb
push
mov
iret
stos
mov
xor
scas
ss
in
call
es
movsl
in
out
jmp
mov
push
imul
mov
insl
xorb
cs
and
in
and
sub
sub
jmp
outsb
call
xchg
and
daa
fsubr
stos
mov
sub
outsb
arpl
mov
xchg
xchg
test
shrb
sub
call
sbb
pop
addr16
hlt
jmp
push
sub
sub
pop
stos
add
andb
and
in
mov
xchg
jbe
adc
rcrl
add
sub
mov
orl
mov
adc
in
test
pop
outsb
pushf
scas
and
adc
jbe
or
imul
jb
push
sub
mov
in
fld
stos
xor
stos
gs
jcxz,pn
push
int
stos
jb
sub
stos
xor
push
in
stos
popa
sub
and
and
jae
adc
jecxz
in
cmpsb
pop
and
outsl
int3
scas
in
fstps
lret
test
ljmp
lahf
xor
insb
dec
cs
rcll
cmp
std
push
cmp
mov
movsb
mov
lea
stos
iret
out
addr16
adc
and
lods
cmc
fucomi
xchg
pop
stos
push
pop
mov
nop
lea
mov
cli
scas
shrl
push
das
rolb
sub
sub
push
out
data16
push
mov
stos
pop
ljmp
mov
stos
int
iret
adc
xchg
mov
lods
mov
gs
in
arpl
mull
cli
jmp
jl
xchg
cmpsl
jmp
mov
fwait
insb
insl
shll
adc
scas
clc
sub
push
out
popf
scas
lea
dec
rorb
test
cli
outsl
add
sbb
in
test
stos
xchg
ret
daa
and
andl
in
cltd
push
and
daa
mov
sub
add
cmpsl
shl
ss
ret
outsl
out
cltd
out
xor
popf
mov
mov
stos
iret
sub
call
daa
lcall
fwait
das
stos
popa
imul
in
sbb
pop
outsl
nop
lcall
stos
aam
subb
ret
ljmp
imul
ljmp
stos
shrb
sub
push
jmp
imul
or
mov
sub
push
adc
movsb
fnstenv
pop
xchg
std
das
stos
mov
cmpsb
lods
arpl
nop
popa
je
ss
xlat
loop
and
sbb
insl
fwait
sub
insb
jns
or
stos
in
gs
jae
jecxz
mov
sti
adc
fsubrl
stos
lods
hlt
test
std
jecxz
pop
mov
in
addr16
stos
stos
sbb
adc
cmp
rolb
lea
or
cmpsl
pop
je
in
data16
lods
fisubs
daa
insl
jmp
mov
mov
jmp
call
insl
xchg
outsl
pop
stos
adc
xchg
das
adc
push
lods
nop
ds
mov
mov
push
movsl
sbb
cwtl
and
and
call
cltd
daa
mov
add
jmp
mov
imul
lods
fldcw
xchg
sarb
daa
adc
pop
jp
push
outsl
inc
push
mov
push
pop
in
arpl
adc
scas
xchg
push
imul
sbb
rcl
push
out
xchg
push
push
jne
or
into
shrb
scas
imul
stos
stos
ljmp
es
in
push
xchg
adcl
adc
cmp
dec
rclb
popa
adc
ljmpw
daa
out
aam
fidivrl
pop
push
sbb
cld
stos
add
push
and
orb
xchg
imul
jns
add
stos
xor
xchg
inc
push
arpl
pusha
outsl
sub
pushl
test
and
and
mov
daa
adc
lcall
cs
adc
push
push
xchg
add
scas
and
inc
mov
hlt
imul
dec
and
imul
repz
in
cmp
sub
sub
in
inc
sub
dec
movsb
stos
mov
arpl
push
rorb
mov
mov
stos
sahf
jmp
sub
jnp
imul
pusha
jmp
mov
test
imull
out
imul
jo
ljmp
push
mov
jp
in
mov
dec
std
stos
jno
push
push
fwait
or
repnz
test
push
test
call
dec
push
stos
test
insl
out
ficoml
cmp
adc
stos
ja
stos
scas
popa
insb
shlb
lea
push
test
ret
lahf
inc
ljmp
ss
lcall
sub
daa
push
xchg
test
push
xchg
push
sub
jmp
dec
xchg
adc
jg
ficompl
out
mov
insb
jmp
daa
and
push
inc
fnstenv
stos
mov
stos
daa
cmp
cmpsl
jnp
sti
cli
call
ljmp
dec
jb,pn
mov
ja
shr
daa
sub
jp
add
call
cmpsl
pusha
mov
mov
fsubr
sbb
pop
insb
out
mov
std
mov
outsb
add
adc
in
std
xchg
test
js
xchg
cmpsl
cltd
aam
shrb
add
out
in
mull
xchg
jecxz
bound
add
and
sub
insl
stos
out
cs
out
shrb
stos
and
xor
or
mov
inc
jmp
sub
es
stos
xor
mov
test
movsb
sbb
daa
xlat
push
imul
mov
add
mov
iret
cltd
sbb
mov
sub
fwait
xchg
imul
ljmp
inc
mov
aas
leave
cmp
das
push
push
xlat
repnz
mov
iret
push
push
scas
and
aam
push
lret
in
pop
stos
jg
test
xor
mov
or
movsb
out
in
imul
lret
jns
mov
sub
scas
repnz
xor
in
push
xchg
jecxz
adc
fwait
out
shr
stc
outsb
shrl
xor
shl
xlat
and
jmp
in
fdivrs
imul
dec
scas
aaa
outsl
jmp
jmp
adc
lcall
inc
outsl
push
fwait
or
mov
sub
movsb
dec
in
dec
xchg
outsb
and
mov
ds
out
sbb
xchg
movsb
sahf
adc
ffree
fs
into
outsb
stos
adc
mov
std
test
push
daa
and
and
movsl
movsb
movsb
aaa
in
pop
pop
and
mov
fldcw
or
fstl
jmp
push
or
cltd
and
rcrl
fucomp
stos
ds
imul
mov
test
mov
movsb
js
sub
sbb
ljmp
fwait
imul
stc
out
stos
int3
outsl
mov
adc
mov
push
mov
mov
stos
push
test
jle
cmpsl
cwtl
jl
push
and
outsl
sub
push
xor
pop
cs
scas
subb
push
in
xchg
das
mov
sub
scas
stos
mov
bound
stos
lret
call
stos
or
in
and
inc
cmpsl
data16
addr16
push
xor
dec
jmp
cltd
jb
jne
insl
fsubrs
in
shlb
mov
mov
lret
stos
out
xor
subb
fldt
mov
push
rclb
sbb
push
jmp
stos
push
mov
imul
add
cwtl
push
iret
push
in
insb
dec
add
int
jmp
sub
lods
cmp
fld
xlat
rorl
stos
lods
adc
fstpt
fucomi
mov
in
sub
test
daa
push
push
mov
sub
stos
iret
pop
scas
xchg
aas
cs
sub
push
sub
in
scas
lea
lods
imul
xlat
adc
push
out
aaa
test
in
mov
pop
mov
push
lods
test
imul
xchg
insb
or
lods
mov
and
mov
jmp
gs
cld
loopne
enter
es
lods
scas
in
adc
lcall
lods
add
xchg
push
push
nop
ljmp
and
shr
daa
push
icebp
adc
push
xchg
mov
jmp
insl
in
cwtl
jmp
jmp
stc
imul
clc
jecxz
push
jge
fsubl
push
stos
inc
sub
push
adc
cmp
shrb
mov
adc
jnp
xchg
push
or
stos
cmp
sbb
out
lret
sub
mov
cwtl
loop
popa
cmp
mov
jmp
movsl
mov
pop
in
stos
adc
or
test
lods
xchg
push
mov
push
std
or
xchg
shlb
pop
outsl
stos
push
outsb
iret
lods
ds
stos
xchg
test
es
arpl
andl
cli
mov
mov
call
mov
push
aas
shlb
stos
inc
push
dec
xchg
scas
push
cmpsb
adc
cld
popf
stos
adc
out
stos
add
loope
mov
sahf
adc
fs
and
mov
stos
cmpsl
dec
jmp
stos
mov
push
inc
push
nop
xchg
movsb
mov
fcompl
in
xor
rcrl
out
movsb
imul
stos
jg
dec
jmp
and
xchg
and
mov
sub
pop
movsb
and
jb
fwait
or
popf
cmpsb
stos
add
inc
adc
xchg
shll
xchg
nop
xchg
adc
sub
mov
mov
ds
out
xchg
cmp
shr
mov
inc
movsb
stos
mov
test
ljmp
scas
dec
shr
push
add
aam
xchg
std
adc
pop
outsl
push
sub
push
test
mov
push
cli
jne
add
mov
add
das
out
adc
stos
movsl
sub
sub
cs
push
shll
cli
notl
stos
dec
push
or
das
addr16
insl
jnp
imul
jmp
lea
xchg
push
pop
mov
std
and
stos
arpl
and
es
push
int
stos
sub
outsb
rclb
jp
repz
popa
adc
rolb
mov
or
pushf
std
stos
leave
push
add
imulb
mov
cld
addr16
out
dec
cmpsb
pcmpgtd
jno
orl
ljmp
sub
outsl
out
push
mov
xchg
rclb
ljmp
lea
mov
sarl
call
dec
push
imul
cmp
mov
shll
lods
imul
lods
ja
mov
iret
sub
adc
arpl
mov
lods
sub
mov
and
in
fildll
sub
stos
or
ljmp
loopne
gs
and
in
mov
call
push
lods
loopne
jmp
out
int
adc
call
scas
or
dec
into
sub
clc
push
insl
mov
movsl
lcall
sub
mov
stos
jmp
and
in
sub
daa
cmc
jmp
cmpsl
stos
sub
in
inc
lods
out
inc
cmp
idivl
insl
mov
push
cmp
jnp
test
cli
xchg
mov
mov
cmc
stos
jne
cld
jmp
pop
adc
subl
daa
xor
cltd
stos
in
push
in
ds
das
out
xchg
jmp
sub
xlat
scas
repnz
push
xchg
push
rcrb
nop
js
push
adc
jns
shl
push
addl
xchg
sub
xchg
jecxz
and
mov
mov
xlat
fwait
mov
push
lods
out
in
leave
adc
cltd
hlt
shlb
xchg
push
add
xchg
add
jmp
das
cli
and
cltd
sub
sti
push
imul
and
and
insb
loop
and
mov
push
in
fwait
out
xor
mov
dec
inc
fisubrl
out
stos
xchg
jl,pn
sbb
mov
imul
arpl
es
lret
and
mov
stos
inc
daa
lcall
push
insl
jns
leave
mov
xchg
or
push
shr
inc
scas
adcl
xchg
push
sbb
cmp
inc
add
jmp
repz
pusha
push
cmpsb
hlt
mov
mov
and
daa
loop
jecxz
sbb
cmpsl
dec
imul
dec
aam
aad
jbe
mov
cmp
nop
xchg
scas
jle
ljmp
in
addb
xchg
call
gs
movsb
jle
mov
push
push
xor
mov
add
jl
push
push
outsl
and
xchg
push
jmp
adc
xchg
aaa
shll
xor
sub
sub
sub
stos
stos
cmp
stos
movsl
sbb
push
in
and
xchg
dec
nop
pop
stos
and
and
or
ljmp
mov
dec
xchg
lahf
adc
inc
xlat
inc
adc
add
push
rcll
out
outsb
and
lods
fucomi
arpl
leave
imul
push
movsb
cmp
bound
push
popa
loope
xchg
in
stos
and
xchg
sub
add
aad
pop
and
adc
bound
cs
in
mov
addr16
es
daa
out
cmpsl
mov
cmpsb
andl
or
cmp
call
mov
push
sub
sub
sahf
push
stos
jge
or
outsl
stos
push
sub
mov
shl
ljmp
mov
and
fldl
sub
ds
inc
stos
in
add
pop
lods
shld
cs
push
cld
xchg
xchg
int3
adc
shlb
lods
jbe
jmp
sub
jmp
call
jo
and
add
stos
insb
cmp
insl
push
xchg
js
xchg
in
popa
xchg
sub
lcall
lcall
push
sub
cmc
fwait
cmp
lods
nop
dec
scas
test
ljmp
fstpt
jo
lea
stos
sub
scas
in
push
push
xchg
fs
stos
jbe
bnd
imul
or
test
jmp
sub
lods
aaa
mov
call
and
jmp
xchg
lods
cmp
lods
push
lods
push
jp
cmp
daa
out
cli
in
mov
sahf
and
int3
jmp
gs
movsl
out
fwait
addr16
icebp
xchg
jp
inc
sub
stos
sub
push
lods
add
daa
sub
cltd
scas
pop
outsb
inc
mov
subb
push
inc
xchg
xor
xchg
aad
pop
push
mov
in
sub
test
clc
xchg
movsb
push
bound
mov
daa
mov
cmp
shrl
cmc
lret
and
adc
notb
or
mov
xor
lahf
dec
daa
lods
jno
xor
ret
shll
aas
jmp
cmpl
xlat
out
stos
gs
std
movsb
mov
arpl
call
stos
adc
xchg
lods
cmp
push
movsb
adc
aaa
ficomps
aaa
cld
das
pop
mov
std
sub
sub
stos
jmp
icebp
call
imul
in
addr16
and
mov
repz
es
mov
cltd
xchg
movsb
out
shll
mov
xchg
jge
shr
xor
stos
add
lods
repz
cli
mov
sub
mov
cltd
rorb
stos
sub
test
sub
in
in
mov
mov
std
sub
stos
es
inc
out
mov
outsl
pop
push
cmp
cmp
scas
or
push
jmp
stos
lock
imul
push
xchg
stos
sub
popa
jmp
cmp
enter
sti
imul
call
pop
jmp
push
lret
mov
inc
cmp
test
out
arpl
sub
sub
ljmp
mov
adcl
jmp
andl
imul
xchg
lods
sub
mov
sub
mov
cmp
push
test
jmp
jl
in
jge
xor
imul
jnp
insl
stos
lods
jecxz
jp
jl
jmp
addr16
cmp
test
sub
lods
sub
or
adc
stos
rolb
roll
add
stos
mov
pusha
out
and
jl
mov
pop
jmp
sub
sub
out
add
out
stos
fisubrl
lods
mov
test
fld1
std
es
in
cmpsb
dec
mov
imul
and
mov
mov
repnz
scas
xchg
out
and
imul
incb
daa
mov
dec
ljmp
sbb
in
push
testl
dec
sub
push
push
or
jmp
cltd
sub
sub
out
lahf
out
fildll
std
das
cmp
inc
scas
mov
out
fisubrl
jmp
add
sub
test
rorl
sarl
jnp
jnp
jmp
jmp
mov
stos
insb
or
sti
or
xchg
std
push
push
xor
xchg
lods
pop
gs
das
stos
loop
insl
inc
in
into
ljmp
mov
mov
xor
mov
inc
cmp
fldenv
xor
mov
outsb
inc
jge
call
jnp
fsubrs
mov
add
test
sub
mov
jo
sub
xor
stos
add
repz
and
gs
arpl
sub
sub
imul
sub
movsb
in
les
add
fwait
pop
out
xchg
outsb
sbb
movsb
jg
stos
imul
aad
jb
jmp
lods
fwait
in
cs
cmp
sub
ja
mov
out
or
jmp
je
lds
inc
lods
jmp
dec
sub
rep
cwtl
outsl
insl
daa
nop
mov
mov
fstpt
sub
pop
fildll
jge
rorl
jae
std
insl
mov
out
enter
push
arpl
xor
push
sbb
stos
fbld
jns
mov
dec
or
mov
scas
stos
add
sub
in
ljmp
xor
pop
mov
pop
push
shll
test
or
or
out
subl
sub
mov
xchg
xchg
add
imul
mov
mov
cmp
stos
adc
push
mov
imul
insb
pop
lods
xor
test
add
imul
sti
lods
mov
jno
mov
loope
cmpsl
scas
adc
push
out
popf
jno
dec
pop
fwait
dec
jmp
ljmp
push
pusha
mov
shrl
popa
bound
mov
in
mov
stos
movsl
insb
clc
sub
in
adc
sub
lahf
cmp
ss
mov
jmp
sub
xchg
or
or
insb
xchg
mov
loop
mov
jae
mov
sub
imul
inc
mov
lods
popf
mov
stos
lea
test
jmp
mov
mov
pop
inc
pop
imul
xchg
daa
stos
mov
ljmp
out
in
mov
sub
jl
inc
leave
scas
arpl
jo
mov
mov
mov
inc
ljmp
call
shrl
outsb
scas
ljmp
insb
ds
stc
out
int
inc
jns
ret
cs
inc
in
jp
fwait
add
push
mov
ds
out
sub
push
mov
int
enter
cmc
push
cmp
dec
xor
mov
mov
sbb
bound
xchg
test
in
decb
lods
mov
dec
insl
sbb
sub
stc
jbe
imul
scas
push
push
sub
sbb
scas
in
cmpsl
sub
mov
in
das
call
stos
out
push
scas
push
lods
movsb
push
lods
lea
dec
imul
lahf
push
orl
test
not
insl
shrl
xchg
ljmp
sub
insb
lods
lods
test
scas
mov
sahf
fldenv
jb
mov
je
out
popf
jmp
data16
mov
test
or
ljmp
imul
xchg
mov
xchg
pop
daa
jmp
sub
pop
jg
clc
lods
add
insb
mov
push
mov
add
push
imul
das
imul
test
out
mov
push
lea
sub
pop
inc
inc
cmpsb
lcall
push
sub
jmp
sub
rorl
or
or
push
int
fldt
pusha
dec
pushf
jmp
popa
dec
imul
pop
in
pop
stos
call
in
stos
xor
cmp
scas
push
and
or
or
insb
sbb
adc
mov
sub
daa
test
call
pop
aaa
xor
hlt
pop
stos
add
push
imul
jmp
jne
mov
jmp
inc
lods
mov
out
aam
dec
nop
jno
adc
add
out
mov
fcoms
lea
subb
jmp
xchg
sub
mov
call
or
pushf
pop
lea
das
ljmp
mov
cwtl
scas
push
jb
and
out
mov
in
into
sub
jb
lret
arpl
mov
in
inc
les
sbbb
jmp
push
ljmp
push
or
sti
push
in
jmp
jecxz
xchg
lods
imul
add
arpl
imul
jl
add
sub
cld
lea
mov
aam
adc
mov
or
into
push
dec
inc
push
pop
mov
lods
and
ljmp
push
xor
fisttpl
inc
sub
fucomp
pop
mov
imul
xchg
push
std
sub
mov
cmp
mov
out
insb
outsb
pop
cs
mov
int3
aaa
lea
inc
lods
shlb
mov
mov
push
jno
mov
jmp
ja
jl
sub
push
lahf
fiaddl
mov
xchg
lods
or
rcl
rorb
scas
xchg
mov
in
gs
insb
or
imul
mov
sub
stos
stos
dec
ljmp
and
andb
sarb
push
stos
pop
loopne
mov
sub
jmp
mov
mov
mov
and
cmp
aas
sub
inc
sbb
inc
xchg
js
sbbl
sti
in
push
orl
mov
jb
mov
or
mov
mov
adc
lock
jge
mov
imul
fwait
xor
push
fwait
imul
fxch
xlat
aad
sarl
subb
sub
sub
subl
xchg
movsb
daa
in
shrl
dec
inc
and
shlb
stos
lods
mov
xchg
insb
push
lahf
xchg
mov
cwtl
mov
mov
test
sbb
sbb
fwait
mov
jno
das
jmp
mov
mov
sbb
mov
sbbl
sbb
insb
push
jge
ret
jle
mov
push
pushf
insl
inc
jb
sub
mov
jmp
dec
pop
sub
or
daa
bound
mov
test
stos
mov
add
vpunpcklbw
leave
in
mov
inc
or
les
loope
test
stos
sub
aaa
into
pop
push
pop
mov
ret
jno
orl
mov
add
les
mov
mov
sub
scas
lods
sub
pop
lods
xorb
or
push
push
adc
sub
xchg
stos
in
subb
test
push
push
cmpsl
ljmp
rcrb
lods
lods
push
loop
xlat
sub
in
stos
sbb
inc
in
lods
movsb
adc
cli
in
pop
or
repnz
iret
sub
insb
lea
jmp
cwtl
push
xor
fistpl
mov
imul
out
ljmp
js
sbb
and
call
inc
mov
cmp
adc
jb
dec
lcall
lods
loopne
in
bound
mov
imul
and
cmpb
push
mov
xchg
mov
jmp
sarb
xchg
test
cmp
movsb
out
xchg
dec
or
jecxz
stos
cld
fsts
daa
jmp
daa
repz
fnstenv
xlat
gs
mov
cld
daa
jmp
sub
jp
push
inc
mov
push
dec
pop
cli
jmp
jmp
imul
mov
fldt
daa
xor
push
icebp
addr16
ja
leave
mov
mov
repz
scas
shrb
mov
pop
sub
in
in
add
adc
sub
mov
sarl
jl
mov
pop
popa
jae
xor
pop
dec
nop
lret
mov
xchg
adc
and
ja
push
in
mov
sahf
dec
int3
lods
fiadds
adc
dec
mov
adc
push
stos
popf
mov
mov
mov
stos
repnz
sub
out
push
orl
loope
jnp
cmp
mov
sub
inc
jl
jnp
jnp
popa
xor
or
popf
mov
sbb
cvtpi2ps
push
inc
lea
push
pop
movsb
and
or
dec
in
inc
xchg
arpl
jg
pop
push
and
cmp
adc
mov
pop
and
add
adcb
jecxz
and
movsb
add
mov
pop
jge
adc
and
insb
fsubrs
xor
movsb
lahf
sub
mov
pop
arpl
mov
insb
cmpsb
in
fists
mov
sub
fwait
mov
sub
add
mov
sub
iret
stos
lock
sub
xchg
inc
stos
imul
in
ret
std
insb
mov
and
cld
xor
imul
fsts
mov
jmp
aaa
lahf
pop
lods
sbb
sub
stos
adc
pusha
pop
xchg
popa
mov
push
cmpsb
mov
or
cmpsl
in
xor
lods
xor
inc
cmp
cmp
pop
mov
std
mov
in
cs
add
and
sub
cmc
add
mov
lock
pop
lahf
xor
pusha
dec
ret
sub
stc
jle
movsb
popa
jnp
mov
xchg
mov
orl
pop
mov
rcrb
es
mov
enter
mov
sub
lahf
add
in
push
mov
mov
or
xchg
or
push
lret
movsb
mov
pop
std
int
imul
jmp
stos
push
stos
mov
daa
test
roll
push
cwtl
ja
fwait
das
sub
add
imul
and
or
lea
shrl
call
cli
in
add
mov
mov
jmp
sub
andl
les
mov
jns
pop
lret
rcll
addr16
or
inc
jmp
cmpsb
mov
mov
lods
xchg
mulb
insb
push
sub
stc
popa
popa
mov
sti
push
adc
push
xchg
jmp
sub
sbb
stos
mov
xlat
scas
aad
pop
push
jge
pop
add
xchg
sbb
push
jp
sub
xchg
dec
shll
sub
xchg
mov
push
and
jmp
stos
sbbl
gs
or
or
or
xchg
fwait
std
lods
ss
shrb
in
xchg
std
fnstsw
test
cmp
xchg
in
in
push
cltd
dec
jmp
jmp
cmp
adc
lret
aad
rcl
rcll
in
popa
pop
stos
mov
push
imul
movsb
push
int
insl
lods
iret
inc
push
inc
adc
std
lret
std
sub
cmp
daa
jecxz
mov
adc
fs
ja
or
sbb
shll
aas
dec
and
push
inc
inc
inc
rcrb
pop
push
push
imul
and
xchg
cwtl
xchg
cmc
rcll
sub
jg
nop
scas
mov
lahf
ds
xor
les
movsb
lcall
cli
pushf
and
add
sub
push
fstps
push
loope
push
jmp
lea
je
loopne
nop
imul
test
int3
data16
stos
push
jmp
adc
daa
mov
aam
inc
mov
xor
ljmp
or
mov
or
or
lahf
outsb
pop
out
or
cmp
push
movsl
jb
inc
addb
rcll
xchg
cmp
add
xorl
mov
jmp
mov
mov
and
mov
mov
movsl
inc
scas
xor
lahf
xchg
neg
test
or
mov
inc
mov
pop
mov
inc
sahf
inc
push
lea
cltd
sti
movsb
push
imul
inc
mov
psrld
imul
mov
fs
xchg
jl
mov
jnp
mov
std
cmpb
pushf
loop
dec
test
imul
scas
es
loopne
nop
mov
movsb
inc
movsb
jae
imul
jle
ret
outsb
inc
outsb
xchg
inc
icebp
jecxz
mov
loope
pop
mov
js
jmp
rcll
test
jae
aad
fisttpl
sbb
subl
cmp
fucomp
mov
adcl
test
and
ficoml
in
incb
sub
sub
neg
cmp
nop
out
cmp
pmaddwd
cmp
daa
sub
fldt
fisubs
sub
imul
inc
add
fistps
and
jns
jno
mov
cmp
jmp
inc
xchg
or
stos
mov
imul
cwtl
lcall
fcomi
fisttpl
dec
fisttpl
fcomi
fsqrt
xlat
addr16
jecxz
fsts
xlat
lods
aad
in
into
mov
sbbb
cmp
roll
dec
pop
xor
mov
popf
add
mov
mov
jo
addr16
inc
inc
sbb
pop
cmpb
and
and
mov
and
mov
jmp
lahf
aas
xchg
inc
nop
pop
scas
xchg
out
mov
shr
mov
push
cltd
or
mov
mov
xchg
pop
cmp
outsl
icebp
push
ss
push
in
js
daa
test
inc
mov
aaa
pop
jbe
cmp
push
add
push
scas
xchg
push
push
mov
daa
xchg
cli
test
xchg
jmp
or
jl
and
cs
add
cmp
stos
movsb
mov
xchg
mov
in
adc
cmp
aas
push
add
mov
lret
sub
movsb
scas
sub
ljmp
and
std
jmp
mov
and
inc
jb
cs
pusha
jnp
mov
loop
stos
xor
push
stos
loop
scas
outsl
cli
and
in
fcomip
lods
dec
les
push
lret
stc
orl
mov
jecxz
aas
and
jnp
jnp
popl
fcmovne
mov
rorl
repnz
jnp
ds
cmp
dec
mov
push
xchg
cltd
cmpl
movsb
push
ficompl
xchg
mov
xor
sub
arpl
xchg
popa
nop
pop
xchg
or
imul
sub
xchg
jmp
xchg
jnp
lods
aad
push
pop
adc
sub
push
ret
ret
add
imul
xchg
gs
sahf
outsl
es
pop
xor
xchg
adc
sbb
sahf
pop
jae
es
daa
push
std
jp
sub
sarb
xchg
lahf
add
in
jnp
lea
in
or
into
movsb
js
mov
or
movsb
push
inc
and
and
push
add
scas
fisubrl
jp
pop
push
adc
lods
jmp
ja
push
mov
mov
lret
push
fnstcw
imul
lahf
or
aas
or
imul
inc
sub
arpl
sbbb
xchg
movsb
in
cmp
jle
insb
es
cmp
mov
daa
xchg
imul
inc
ret
push
xor
jb
sub
mov
icebp
testb
cmp
movsb
add
stc
popf
sbb
aaa
mov
dec
es
icebp
cs
roll
repnz
imul
imul
sbb
mov
mov
dec
or
cs
leave
adc
lcall
push
loope
stos
adc
pop
or
xlat
xor
mov
pop
out
mov
or
popf
sub
jno
in
fldlg2
or
cmp
cltd
inc
scas
fistps
sbb
lcall
dec
push
or
pop
sub
ljmp
xchg
mov
mov
imul
stos
xor
dec
lahf
stos
cmp
push
add
jbe
pop
inc
mov
mov
inc
ret
xchg
add
jb
cltd
jmp
leave
mov
push
cld
outsb
mov
jbe
jmp
out
cmpb
pop
flds
push
decl
pop
mov
cmpsb
pop
icebp
adc
test
jbe
ds
sub
jno
pushf
daa
mov
outsb
jmp
mov
sbb
mov
or
sub
pop
in
add
and
jle
xor
jae
xchg
hlt
cmp
inc
arpl
cmp
out
add
nop
lock
cli
scas
ljmp
test
mov
mov
mov
cmpsb
lea
mov
mov
fisubl
add
xor
and
movsl
pop
das
daa
push
push
add
das
inc
cmp
fistl
mov
adc
sbb
dec
mov
pop
add
mov
xchg
ret
xchg
in
sbb
mov
xchg
xchg
xchg
push
add
xchg
sbb
scas
cmpsl
jno
mov
lret
mov
push
ss
rcrl
push
add
mov
xchg
dec
mov
mov
pusha
push
ds
pop
fisttpl
mov
mov
daa
sub
xor
and
out
out
lods
dec
sbb
clc
sub
loop
imul
sub
out
lock
push
jle
stos
sbb
dec
mov
scas
ljmp
adc
fildl
jle
adc
cmpsl
sbb
mov
xor
adc
push
sbbb
dec
loop
loope
adc
sbb
fldl2t
pop
cmp
lret
xchg
pop
imul
mov
sahf
mov
es
and
sar
sahf
int
adc
movsb
in
popa
loopne
inc
pop
xor
popa
cmp
push
xchg
clc
stc
inc
nop
and
mov
push
cmp
js
in
cmp
cmpsl
mov
dec
cmp
mov
push
or
cmp
mov
popl
lods
stc
test
mov
andl
add
scas
sub
lds
ds
xchg
push
mov
or
cmp
and
enter
sub
pop
sahf
jg
arpl
scas
outsb
sub
pop
sti
lea
aad
rorl
aas
es
mov
push
cmpsb
fldlg2
roll
rcr
das
repz
loope
cmp
mov
sub
and
jnp
cmpsb
mov
mov
mov
fcmovb
push
or
data16
dec
adc
outsb
jb
xlat
or
and
mov
mov
sahf
jecxz
xor
imul
dec
mov
adc
dec
pushf
xor
mov
lea
xchg
cmp
repz
jns
and
test
xchg
cmp
imul
cmp
mov
rol
scas
push
mov
ret
stos
sbb
les
or
fistpl
jb
and
adc
sbb
stos
push
or
sbb
test
adc
pop
mov
mov
cltd
int3
sub
and
pop
xchg
nop
repnz
js
dec
ret
lahf
or
nop
cwtl
call
dec
push
cld
jge
and
jnp
loopne
mov
hlt
xchg
adc
out
ja
xor
and
subl
sbb
push
xor
leave
cmp
mov
movsl
int
cmp
sbb
mov
mov
cmp
jo
sub
and
movsb
push
in
call
stc
add
push
lea
sti
hlt
cmp
mov
adc
mov
xchg
rcll
mov
lahf
pop
fmull
mov
lds
cwtl
testb
sbb
clc
pop
inc
and
test
repnz
sbb
pop
and
fmull
xor
cmpsb
andb
mov
cld
cld
aas
mov
ds
mov
add
jb
jp
mov
out
cmp
sbb
or
in
and
inc
adc
lods
push
add
jns
add
sbb
in
xor
mov
lea
push
ljmp
mov
shll
repz
add
cmp
in
call
add
stc
or
ss
sbb
and
stc
mov
stos
icebp
push
lods
and
mov
add
in
add
and
ds
cmpsb
pushf
leave
sub
mov
or
scas
aaa
es
mov
add
add
add
cmp
xchg
outsb
imul
mov
adc
mov
push
sbb
lahf
fldl
jnp
loop
lret
push
xchg
inc
xchg
lcall
cmp
push
xchg
mov
stos
movsl
pop
lcall
rclb
inc
enter
sub
jle
ljmp
dec
push
add
push
mov
mov
cli
jbe
vmwrite
ds
mov
pop
cld
mov
push
nop
aaa
mov
add
mov
test
data16
stc
ss
cmc
add
inc
pop
stc
mov
pop
leave
dec
mov
mov
ljmp
mov
sbb
fs
sub
sahf
push
lods
cmp
mov
movsb
mov
mov
dec
add
jbe
mov
ret
cs
adc
test
stc
mov
scas
and
mov
dec
nop
inc
idiv
or
mov
test
je
sub
rep
mov
xchg
mov
pusha
and
cmp
js
ficomps
xchg
sti
push
adc
xchg
fwait
lret
mov
ds
push
dec
or
jnp
sub
outsl
daa
sbb
push
xor
pushf
or
add
sub
jbe
dec
or
lds
and
imulb
aad
adc
or
add
clc
push
stos
ds
testb
mov
and
add
test
cmc
jne
popf
stc
arpl
cmpsl
fdivs
mov
xor
cmp
in
scas
xchg
fstps
repnz
add
rcr
out
fldcw
mov
pop
shl
fs
jmp
push
mov
ljmp
push
sbb
pop
nop
ds
stc
test
lahf
ss
push
mov
jae
stos
mov
cmpsb
mov
scas
mov
xor
cwtl
or
xor
repz
lods
sahf
mov
aas
add
and
mov
shll
lds
pop
jmp
xor
adcb
push
and
dec
cmp
imulb
rcrb
test
jg
xchg
dec
and
dec
inc
pop
int
iret
adc
pop
jmp
mov
stos
jo
movsl
jae
ljmp
repnz
leave
loop
push
add
scas
jle
adc
cmp
clc
std
xchg
ds
jecxz
ds
in
mov
mov
ljmp
mov
lods
addl
call
and
mov
in
xchg
and
xchg
mov
stc
test
push
mov
push
add
add
sub
push
add
and
scas
test
in
js
push
mov
lods
push
mov
mov
aad
xchg
stos
sti
mov
push
js
xchg
jg
sub
cmpsl
addb
and
mov
lock
clc
das
cmp
push
cmp
loope
loopne
ret
mov
mov
lea
imul
jecxz
lods
lahf
stc
data16
stos
xchg
add
xchg
and
xchg
call
jmp
sti
das
aam
xchg
pop
xchg
imul
movsl
roll
mov
cmp
mov
push
lcall
aad
mov
inc
add
jnp
inc
and
push
push
cmp
call
adcl
cltd
iret
adc
cmpsb
out
inc
jmp
lods
and
mov
sbb
loop
out
push
andb
add
mov
les
ljmp
mov
xlat
push
add
lret
xchg
in
clc
mov
ds
ja
cwtl
outsl
fisubl
or
and
stos
fdivs
adc
fcmovbe
xchg
lods
out
xchg
stc
pop
enter
sub
push
or
sub
test
scas
daa
sbb
or
adc
subb
stc
mov
in
rolb
mov
in
aam
push
inc
iret
lods
jge
push
in
add
sar
xchg
fadd
xchg
jmp
scas
outsb
sub
cmc
stos
push
mov
es
and
fsubrl
jno
repz
das
int3
push
movsb
daa
adc
daa
daa
test
cld
out
sbb
pop
stc
mov
call
mov
and
in
mov
push
outsl
enter
leave
sub
mov
xchg
subb
sub
mov
cwtl
loopne
icebp
push
aad
lea
ljmp
stos
in
ds
out
mov
popa
ljmp
mov
add
lods
push
aaa
sub
cmp
les
rclb
test
lods
call
dec
es
repnz
imulb
shrb
push
and
testl
jle
lcall
sub
cmp
popf
mov
daa
sbb
in
pmaddwd
movsl
sbb
jmp
stos
cli
mov
add
std
imul
pushf
lret
scas
jno
ljmp
stc
out
pop
fsts
and
push
in
cs
xchg
pop
push
inc
mov
insl
jnp
push
pop
out
mov
mov
js
bound
pop
jg
cmpsl
mov
inc
mov
mov
cmpsl
mov
ljmp
mov
xorl
out
sub
mov
das
test
mov
lods
sub
and
mov
dec
adc
add
jmp
pop
pop
loope
cld
imull
mov
das
imull
insb
add
jle
or
add
shlb
mov
aaa
xchg
sub
sub
fidivrs
sub
add
orb
stos
out
jmp
mul
pop
and
push
out
in
hlt
test
sub
and
mov
data16
or
xchg
lods
xlat
sub
stos
adc
sub
dec
stos
sbb
out
push
jnp
stos
hlt
imul
sub
add
push
shlb
outsl
aaa
insb
pop
sub
stos
test
dec
sub
mov
cmp
loope
in
mov
cwtl
in
jb
mov
push
adc
mov
jmp
dec
addr16
aam
clc
stos
call
iret
out
adc
in
sbb
adc
nop
lret
out
dec
jmp
fucomip
xchg
sub
daa
cwtl
push
imul
daa
shlw
adc
stos
lods
sub
xor
aaa
push
lret
stos
push
test
fldcw
outsb
push
aad
hlt
push
and
jge
dec
out
data16
stos
cmpsb
enter
adc
pop
mov
and
push
scas
pop
insl
push
mov
sbb
orb
cs
ret
pop
xor
ljmp
imul
orl
sub
jmp
insb
aad
push
mov
in
cmp
outsb
mov
scas
add
cmpsb
sarl
loope
test
xchg
gs
mov
stos
mov
lods
scas
in
subb
jmp
mov
stos
punpckhdq
repnz
jmp
mov
add
sub
sub
jmp
icebp
in
inc
ljmp
lods
jo
nop
in
loop
inc
mov
cmpsb
shlb
adc
push
jmp
stc
jmp
sub
ljmp
jnp
stos
and
mov
sub
addr16
stos
cmc
and
fistl
jb
adcl
test
lret
scas
test
sub
cltd
in
int
loop
and
addr16
enter
sbb
jl
sub
cmp
lods
adc
scas
inc
rclb
cmpsl
push
push
xchg
and
daa
in
pop
push
cmp
sub
out
int3
stos
cmpsl
sub
stos
stos
sub
lods
rcrb
nop
xchg
les
andl
inc
sub
push
pushf
adc
loopne
pop
sub
or
lods
sub
cmp
pop
pop
jge
pop
cs
movsb
std
std
loop
stos
dec
in
call
sarb
mov
jp
sub
call
scas
and
stos
out
xchg
daa
daa
and
or
push
push
fisubrl
jb
sbb
insb
xchg
fwait
stos
imul
addr16
sbb
and
out
in
mov
in
jmp
pop
cmp
test
out
out
in
mov
xchg
inc
mov
push
cmc
shl
cs
addr16
jecxz
jmp
mov
stos
out
insl
sub
sub
pop
add
pop
push
mov
mov
pop
and
and
arpl
jmp
ljmp
jnp
imul
push
sub
lcall
stos
outsb
add
addr16
fs
stos
and
mov
lock
call
xchg
insl
hlt
jg
pop
mov
popf
lods
stos
xchg
out
arpl
sub
mov
fs
jns
imulb
sub
in
jmp
out
ja
or
lods
or
stos
imulb
dec
sarb
nop
lret
cmp
pushf
cmpsb
stos
in
leave
fs
out
mov
sub
and
mov
das
mov
adc
rcrl
shrb
sub
aam
stos
lahf
movsb
cmp
addr16
cmp
inc
insb
lock
data16
stos
movsb
mov
inc
outsb
cmp
movups
adc
cmpsb
push
jo
cwtl
sub
pushf
mov
in
pop
sub
sub
scas
pop
or
adc
xorl
sub
call
in
stos
out
jmp
mov
cmp
mov
lods
das
data16
stos
mov
in
cmp
stos
imul
xchg
movsl
mov
push
xchg
lret
fmul
scas
add
cltd
outsb
insb
adc
push
popf
push
imul
movsl
push
call
push
out
mov
push
xor
sub
insb
mov
call
xchg
mov
out
pop
mov
mov
out
stos
addr16
test
mov
push
jns
in
sahf
sub
mov
xchg
inc
stos
das
cmp
insb
xchg
imul
ss
addr16
dec
lods
dec
mov
in
arpl
adc
jbe
ljmp
adc
mov
out
and
in
imul
push
insb
fwait
lods
aam
adc
scas
mov
rorl
mov
sub
sub
stos
es
movsl
enter
jmp
cld
dec
loope
mov
stos
insl
push
scas
sbb
rolb
inc
fxtract
mov
popf
adc
lods
movsb
inc
xchg
movsl
pop
scas
push
stos
sub
push
imul
scas
mov
xchg
imul
nop
dec
xchg
or
adc
sub
ljmp
and
pop
mov
loop
sbb
pop
xchg
jmp
insb
jae
lods
out
in
mov
push
inc
sarb
sub
insl
add
pushf
int3
and
and
mov
mov
and
sub
in
nop
mov
xchg
lock
ror
adc
sub
call
sbb
cmpsl
movsl
push
int3
sub
stos
in
loope
pusha
icebp
arpl
scas
mov
lea
inc
xchg
jl
adc
push
push
in
mov
adc
pop
stos
js
pop
sub
dec
out
mov
aas
push
hlt
stos
push
pop
xchg
call
stos
in
dec
test
dec
addr16
call
imul
scas
sarb
nop
xchg
add
push
test
rcll
sub
jbe
cmpsb
cld
jg
xor
xor
sub
stos
sub
and
fsubrl
xchg
push
std
push
movsl
xchg
icebp
ffreep
outsl
adc
mov
and
ret
stos
daa
lea
test
pop
sub
lret
mov
rorb
sub
lret
outsl
lods
sbb
sub
cmp
out
pushw
mov
cmpsl
aad
adc
test
shrl
stos
jno
outsl
cs
movsb
popf
push
scas
lret
adc
xor
jmp
pusha
pop
test
daa
mov
jmp
ljmp
inc
adc
rcr
xchg
arpl
nop
test
xor
daa
sbb
imul
mov
xor
stos
xchg
imul
addr16
rorl
shrb
xchg
dec
lods
daa
nop
addr16
adc
lcall
call
fwait
in
ret
mov
test
adc
xchg
popf
mov
test
ret
jb
addr16
call
add
push
push
stos
scas
and
xchg
jns
and
shlb
lods
xchg
push
lret
jmp
inc
fisttpl
pop
xchg
and
arpl
call
imul
rsqrtps
lahf
adc
sub
push
outsl
mov
call
addr16
les
jmp
insl
sarl
xchg
mov
lds
mov
adc
jmp
push
sub
jmp
ret
jmp
adc
mov
pop
insl
arpl
pop
test
sahf
mov
stos
push
in
pop
imul
push
mov
push
test
mov
jmp
fsubrl
stos
in
fsubrl
jecxz
rolb
jnp
int3
mov
sub
mov
test
daa
mov
jae
sbb
inc
scas
imul
dec
adc
xor
mov
in
fisttps
stos
dec
imul
pop
popf
lcall
out
and
rcrl
push
addr16
stc
lods
sbb
test
push
ljmp
mov
and
cmp
ljmp
mov
ret
mov
sub
or
stos
stos
push
jmp
pop
jg
jb
sbb
mov
adc
xchg
push
dec
stos
movsl
nop
imul
and
xchg
mov
dec
sub
dec
inc
gs
add
scas
imul
bound
insl
stos
add
push
daa
adc
fwait
in
arpl
stos
daa
xchg
and
gs
lahf
stos
push
std
das
cmp
xchg
jl
addr16
out
in
and
jnp
bound
stos
imul
call
gs
jl
aaa
xchg
popa
std
jmp
imul
out
arpl
sub
pop
popa
sub
sub
mov
stos
mov
push
sub
stos
es
in
jmp
lock
mov
insl
jbe
loop
add
mov
lods
cmp
ss
es
xor
call
sub
fldt
lret
out
mov
outsb
adc
adc
sub
into
sub
add
gs
mov
daa
loopne
ljmp
xchg
dec
outsl
inc
mov
arpl
insl
jge
jmp
sub
sbb
pop
dec
ds
ss
scas
movsl
leave
out
shlb
jl
cmp
cltd
nop
and
stos
or
mov
in
inc
cmc
push
scas
les
mov
cwtl
push
out
movsl
xor
bound
sub
dec
sub
lods
jmp
sub
subb
or
outsb
mov
stos
in
and
out
cmp
lods
mov
sub
orl
aas
out
inc
sub
lods
pop
and
push
dec
stos
jg
jge
inc
ljmp
mov
lods
xchg
imul
addr16
inc
inc
outsl
cmpsb
adc
xchg
pop
rorb
lcall
mov
sub
push
jmp
jl
sub
push
lods
test
sbb
xchg
scas
push
fwait
scas
movsb
mov
in
sbb
sub
mov
std
out
sahf
jmp
sbb
push
dec
lods
dec
in
sub
aad
xchg
pop
movsb
add
ljmp
jmp
adc
add
fnsave
aad
cld
in
pusha
in
outsl
cmp
pop
jg
lods
xchg
or
or
cld
jmp
push
leave
outsl
sbb
add
xchg
mov
std
cmpsb
cwtl
stos
dec
out
push
sub
sub
in
xchg
dec
fwait
mov
lods
xlat
es
push
jmp
scas
subl
cmp
push
adc
sub
and
arpl
ljmp
popl
in
inc
stos
inc
insl
shrb
sub
adc
scas
and
sub
leave
imul
push
stos
insl
lods
jp
jno
not
loope
lcall
mov
add
pop
xchg
call
xchg
out
stos
push
cmp
inc
jmp
mov
stos
scas
insb
mov
sahf
outsl
sub
add
sbb
lahf
stos
jmp
out
es
add
mov
imul
xchg
cli
inc
rorl
mov
sbb
scas
push
cmpsb
das
cltd
cs
lods
cmp
sahf
addr16
dec
xchg
rcrb
sub
xchg
nop
fwait
fwait
cmp
lahf
jmp
aad
inc
rolb
add
test
or
imul
sub
lods
sub
stos
in
cmpsl
scas
loopne
imul
out
adc
addr16
popa
ret
cmpsb
addr16
cltd
push
sti
xchg
mov
pop
cltd
jo
jae
popf
mov
add
xchg
std
mov
sub
stc
mov
or
xchg
test
mov
shrl
out
sub
lcall
mov
cmc
test
mov
jmp
data16
and
inc
mov
push
out
inc
out
push
stos
das
pop
rcrb
mov
adc
mov
jae
add
stos
pop
lods
inc
xchg
js
mov
test
das
jge
outsb
das
call
out
inc
stos
insb
into
sub
imul
test
and
mov
fwait
mov
xchg
in
fldcw
outsb
pop
fwait
lahf
das
popa
stos
scas
data16
sbb
test
test
mov
ljmp
int
into
scas
daa
stos
sub
sub
mov
mov
stos
inc
dec
stos
or
lcall
sub
in
daa
sub
ljmp
mov
cmp
leave
sub
loopne
adc
pop
push
movsl
mov
repnz
push
sub
imul
jnp
mov
add
imul
mov
mov
scas
mov
and
cmp
add
sbb
test
call
imul
out
movsb
subb
lods
mov
push
stos
mov
testl
imul
insb
aad
sub
stos
stos
insl
outsb
jne
sbb
fwait
movsb
int
js
ljmp
jbe
aas
call
mov
mov
ss
or
jnp
in
scas
xchg
les
pop
and
pop
add
insb
sub
test
imul
lods
fisttpl
addr16
xor
les
cmp
jecxz
push
adcl
sub
imul
pusha
scas
stos
repz
pop
scas
push
add
mov
sti
and
lret
test
push
lret
xchg
out
push
out
xchg
scas
inc
int
scas
xchg
in
jnp
jmp
inc
push
imul
jns
ret
jge
aaa
sti
subl
lock
xchg
insb
ljmp
mov
fldz
mov
hlt
sub
jmp
lods
sub
mov
push
jecxz
sbb
lahf
js
xor
mov
mov
stos
pop
lods
in
sub
mov
imul
sub
sbbb
stos
test
pusha
test
jmp
add
movsb
scas
mov
or
push
stos
or
and
sbb
mov
imul
aaa
stc
push
xlat
mov
sub
fwait
stos
scas
add
push
outsb
cwtl
out
mov
imul
add
imul
stos
arpl
scas
jmp
out
push
and
sbb
xchg
imul
je
fwait
daa
outsl
jmp
imul
mov
scas
push
jmp
leave
in
in
out
std
outsb
scas
scas
mov
pop
lods
mov
fwait
rcll
aas
mov
in
adc
pop
push
adc
mov
daa
outsb
pop
scas
lock
imul
and
popf
gs
sbb
daa
sub
push
or
aas
insl
cmp
stos
subl
and
imul
sub
movsb
pop
jmp
push
sub
mov
sub
sub
insb
push
mov
stos
xor
shrb
push
fistpl
xchg
mov
stos
adc
inc
mov
xlat
add
or
xchg
insl
cmp
sub
ds
or
aas
add
stos
push
imul
scas
cwtl
stos
sub
lods
popf
lods
test
repnz
pop
insl
dec
sub
xchg
fdivp
mov
mov
mov
pushf
gs
popf
and
cmp
in
addr16
dec
std
sub
xchg
inc
jne
xlat
pop
sbb
rcrb
or
imul
push
aaa
mov
addr16
fucomp
enter
sub
test
daa
xor
cvttps2pi
cs
xchg
imul
test
in
lcall
lods
jae
stos
pop
daa
mov
mov
mov
repnz
test
sub
xchg
lods
dec
popa
insb
in
cmp
mov
hlt
arpl
sbb
aaa
test
stos
push
test
push
xchg
out
ljmpw
cmp
insl
cmp
pop
cmpsl
mov
lahf
add
cs
adc
insb
or
test
mov
push
push
and
lods
icebp
arpl
jns
xor
sub
out
test
imul
jmp
in
sub
lods
inc
adc
xor
or
leave
lods
mov
xchg
mov
pusha
imul
or
inc
jmp
pop
cmp
sub
fwait
sbb
and
scas
icebp
pop
pop
sar
mov
sub
push
push
or
jg
lcall
in
mov
repz
insb
cltd
jnp
ljmp
fisubrl
imul
sti
sub
sbb
sub
in
in
or
and
popa
or
insb
ljmp
test
out
jg
pop
xchg
mov
je
andl
scas
fldcw
insl
xchg
mov
dec
jbe
xchg
inc
mov
call
push
in
mov
popf
mov
mov
test
aam
xchg
test
insl
mov
xchg
jmp
push
popa
test
pop
sub
mov
mov
lods
cmc
sub
insl
repnz
adc
lods
sbb
daa
test
pop
in
cmpl
fisubl
or
sbb
add
insb
mov
xchg
sub
insl
mov
cmpl
mov
sub
in
xchg
lods
push
xor
data16
mov
out
pop
scas
lahf
sub
mov
mov
or
mov
fwait
and
xor
push
test
sbb
or
gs
push
sub
insl
or
scas
xchg
xchg
mov
sub
scas
push
insb
push
xchg
loop
sub
sbb
jmp
cmpsl
popa
stos
sub
dec
and
add
sub
cmpsb
test
es
in
push
movsb
pop
arpl
sub
lahf
xor
clc
popl
cmp
mov
imul
cmp
xor
imul
sub
movsl
out
rorw
lods
subb
stos
js
out
inc
sti
sbb
xchg
sub
dec
sub
sub
subl
stos
sub
sub
mov
jl
imul
push
mov
sub
pop
sub
xor
fwait
mov
in
jmp
mov
imul
cmp
push
imul
jae
cmp
cmp
cmp
jb
out
pop
xchg
outsb
out
in
inc
sub
in
stos
cmp
jne
inc
adcl
cld
sub
and
stos
jg
push
out
pop
out
cmp
xor
push
ljmp
sbb
push
xchg
push
bts
ljmp
cmp
xor
stos
scas
loop
int3
lods
ljmp
in
mov
in
sub
push
pop
dec
adc
imul
ljmp
sbb
popa
out
xor
stos
sub
leave
jmp
sub
imul
jmp
ljmp
xchg
xchg
mov
outsl
jge
pop
insl
or
insb
std
sub
imul
ljmp
xchg
cmpsb
push
scas
stos
sbb
popf
outsl
adc
mov
jmp
in
imull
mov
and
inc
jmp
jnp
sub
enter
mov
scas
stos
mov
fsubrs
ret
test
jmp
mov
ljmp
add
scas
mov
cmp
orb
mov
insb
sub
fsubr
mov
add
and
xchg
add
ljmp
aam
scas
sub
scas
into
repnz
outsl
sar
pop
out
rep
cmp
scas
sbb
call
out
mov
ret
inc
imul
jnp
cmp
iret
scas
das
outsl
mov
stc
mov
pop
imul
popa
sahf
dec
fldt
inc
push
mov
arpl
int
cmp
jmp
insb
out
daa
lods
xchg
das
mov
scas
aaa
adc
imul
jno
cmp
inc
aad
iret
mov
sub
xchg
jmp
stos
test
ljmp
sub
push
aad
in
lods
in
mov
adc
sub
scas
and
mov
imul
mov
mov
jmp
mov
in
ret
lods
dec
jmp
stos
mov
xchg
stos
scas
sbb
adc
test
stos
in
mov
sub
inc
mov
movsb
adc
imulb
sub
fwait
xchg
lods
sub
das
or
lods
add
mov
sub
push
test
mov
jle
mov
sub
std
sub
mov
out
sahf
das
mov
adc
stos
mov
cmp
lds
stos
pop
push
inc
loopne
sbb
push
stos
xchg
mov
out
push
push
in
jg
and
pop
lods
dec
mov
ljmp
fildl
lahf
xor
mov
mov
jb
movsb
loope
mov
mov
adc
xchg
xchg
mov
test
aaa
or
iret
imul
outsb
or
arpl
jmp
sub
imul
dec
leave
call
sub
stos
jmp
mov
xchg
or
shrb
and
out
movsb
sub
imul
hlt
in
orl
es
sub
lods
stos
mov
or
mov
and
loop
sti
push
rcrb
xchg
ljmp
add
shr
stos
mov
scas
into
outsl
mov
gs
repz
lods
in
mov
adc
xchg
fldenv
mov
hlt
clc
mov
adc
sbb
ret
sbb
scas
adc
or
sbbb
loopne
nop
xchg
xchg
xchg
sub
mov
jne
adc
xchg
inc
test
in
lcall
jecxz
outsb
fsts
sub
mov
mov
imulb
sub
test
call
clc
stos
stos
sub
inc
insl
mov
cmp
out
mov
sub
jae
stos
imull
sub
push
call
pusha
fwait
imul
lods
out
outsb
add
dec
out
ret
mov
jmp
push
xchg
repnz
imul
out
xchg
sub
pop
add
out
pop
scas
shrb
shr
test
mov
cs
xchg
add
xchg
pop
adc
scas
mov
push
outsl
or
xchg
mov
xchg
loop
sub
outsb
imul
das
aaa
out
xchg
mov
popf
insb
dec
mov
xchg
addr16
movsb
stos
add
in
sub
stos
in
pop
imul
stos
xlat
xor
or
das
aaa
fstpl
xchg
cmpsb
lods
dec
sub
mov
xor
or
jns
adc
das
dec
mov
daa
push
mov
mov
xchg
in
dec
insl
xchg
sub
fildll
jecxz
nop
lods
js
lods
lret
sub
and
leave
cmpsb
jmp
daa
jecxz
fsubr
or
pop
mov
imul
mov
out
stc
imul
jmp
stos
push
ljmp
daa
repz
notl
stos
dec
in
mov
mov
jnp
aaa
imul
stos
xor
inc
push
addr16
stos
popa
test
imul
dec
out
aad
xchg
scas
mov
sub
add
sahf
cs
mov
lods
imul
bound
sub
cmp
add
testb
outsb
mov
in
shl
mov
sbbl
sub
call
subl
mov
mov
xchg
push
lods
mov
jmp
lret
mov
lahf
sub
std
cmpsl
mov
jne
pop
jmp
jmp
lods
xor
fldenv
mov
mov
lods
hlt
sub
sub
int
daa
data16
les
adc
adc
cmpb
out
subb
ss
shlb
xchg
mov
push
call
addr16
stos
push
sub
add
and
jl
and
outsb
stos
mov
push
test
jle
out
jns
lret
mov
mov
lods
cs
out
add
lods
scas
pop
xchg
cmp
loop
and
mov
push
test
addr16
out
cmpsl
movsl
call
jmp
insb
add
arpl
mov
and
nop
in
imul
push
push
test
movsb
lock
inc
das
jmp
stos
or
or
xchg
jecxz
in
sub
stos
push
test
icebp
imul
out
stos
mov
and
fwait
push
in
jmp
lods
sbb
pop
popf
outsb
sbb
arpl
insl
addl
sub
jmp
pusha
addr16
pop
fldcw
cwtl
stos
mov
mov
mov
stos
push
sub
daa
sub
push
nop
jb
imul
imul
imull
pop
addl
fwait
and
and
addr16
daa
icebp
mov
mov
inc
sub
stos
imull
pop
std
scas
addr16
push
out
jge
xchg
xchg
lods
dec
stos
in
jle
in
imul
fildll
out
es
cmpsl
cltd
test
imul
lods
lret
fldenv
sub
cmp
add
in
daa
movsb
out
imul
mov
popa
in
and
stos
jmp
out
nop
scas
jg
fwait
aad
roll
subl
mov
sub
test
out
cmp
sub
sub
insl
pop
xchg
test
cmp
xchg
dec
sub
cvtpi2ps
iret
cmpsl
es
mov
cmp
imul
test
les
arpl
stos
adc
jmp
sub
test
cmpsl
jg
divb
stos
das
jmp
lods
lods
dec
sub
jecxz
jne
test
iret
cltd
sbb
push
xchg
xchg
insb
das
stos
and
shrl
inc
addr16
xor
movsb
sbb
in
bound
insl
pop
jecxz
out
xchg
inc
or
adc
mov
mov
jno
jns
and
out
cmp
mov
pop
jmp
in
xchg
xchg
lods
pop
insl
ja
fwait
add
ljmp
stos
in
mov
shrb
mov
bound
stos
sub
sub
movsb
lods
cltd
sub
dec
lods
aad
pop
fwait
add
mov
subb
stos
push
lahf
push
mov
std
addr16
jbe
stos
jge
fildll
in
pop
sub
mov
ljmp
fidivrl
mov
cmp
fsubl
call
mov
pop
push
test
add
in
lret
sub
jno
cmc
shlb
cwtl
sub
test
cmpsl
lret
mov
aas
stos
pop
stos
into
jmp
imul
lods
xor
adc
aas
lods
cmpsb
pop
stos
test
jg
cmpsl
loop
aas
add
ljmp
add
in
mov
enter
clc
xchg
or
imul
mov
fsubrs
aam
jl
push
mov
sub
imul
out
icebp
xchg
cmpl
stos
add
mov
cmp
dec
lea
out
cmc
sbb
stos
adc
in
shrl
dec
scas
js
cs
xchg
movsb
inc
xchg
out
outsb
imul
call
insl
push
loopne
xor
sub
je
stos
cli
mov
push
addr16
or
jae
ljmp
adc
push
xor
adc
mov
lods
mov
stos
out
imul
dec
scas
out
test
pop
sahf
mov
call
or
and
sti
enter
inc
cmp
cmp
fwait
adc
imul
outsb
xchg
dec
test
mov
pop
imul
sbb
cmp
sub
out
inc
xchg
movsb
pop
add
iret
mov
push
imul
mov
sub
xchg
mov
sub
jnp
cltd
arpl
mov
sub
stos
lods
xchg
sub
std
push
adcl
push
repnz
insb
lahf
aas
outsb
movsb
mov
lea
mov
int3
jg
inc
sub
sub
push
test
imul
lods
jmp
insl
ljmp
scas
negl
sub
push
ljmp
or
popf
sarl
iret
xor
sub
addr16
push
insl
call
subb
mov
ljmp
or
mov
mov
sti
sub
xchg
outsb
inc
scas
add
ljmp
int3
imul
mov
or
push
sub
push
icebp
jmp
mov
push
imul
jns
inc
push
mov
jmp
shrl
imul
cmp
xchg
out
in
scas
push
and
mov
push
movsl
cmp
xchg
aas
xchg
mov
sub
mov
imul
dec
out
test
shl
scas
scas
sub
sbb
lret
sub
flds
xlat
pop
xchg
shrb
test
add
imul
pop
jg
sub
lock
cs
scas
call
in
sub
push
ljmp
imul
mov
arpl
jnp
test
jmp
stos
and
dec
pop
mov
sahf
mov
imul
mov
jecxz
stos
mov
cs
out
jno
div
xchg
inc
cmp
mov
push
push
scas
test
push
push
stos
ret
lods
sbb
adc
or
mov
daa
jp
stos
cmp
mov
sub
push
and
add
int
push
in
ja
jmp
cmp
sbb
out
addr16
sti
pop
or
jne
sbb
jo
test
sbb
cmp
jl
loop
jp
scas
lods
dec
dec
stos
lahf
cs
lods
movsb
push
mov
cmc
fucomip
push
jmp
lea
sub
outsb
jl
inc
lahf
xchg
lods
subl
sbb
mov
push
idiv
popf
cmpb
hlt
sub
std
push
jnp
test
sub
daa
out
subb
aam
shrb
insb
xchg
rcrb
adc
push
stos
xchg
push
lahf
ljmp
sub
sub
jge
jg
sub
imul
xchg
jae
cmp
sbb
stos
add
pop
scas
setb
add
movsl
lods
fldcw
mov
mov
jmp
shlb
dec
jmp
or
sbb
add
inc
sub
mov
xor
mov
and
jbe
aas
push
push
sbb
mov
iret
sub
sub
ds
in
xchg
insb
jbe
add
and
movsb
pop
stos
outsl
sub
pop
test
in
imul
in
daa
in
jmp
sub
clc
xchg
cltd
insb
and
scas
loopne
mov
pop
lahf
or
hlt
push
mov
imul
cmp
jne
int
pop
insb
out
in
mov
mov
sub
stos
cwtl
mov
jmp
sub
xor
pop
insl
adc
xchg
dec
in
lahf
or
cltd
in
cs
das
daa
mov
mov
stos
jmp
jmp
imul
push
insb
mov
jp
in
lahf
xchg
add
fsub
sub
mov
in
les
mov
sub
jmp
fldt
subl
popf
pop
cld
andb
xchg
push
adc
cmp
test
or
fildll
lods
insl
dec
mov
mov
mov
adc
shrl
push
dec
pop
xchg
lret
mov
xor
mov
and
pusha
lahf
lods
sub
dec
jg
xchg
stos
jae
lahf
test
scas
and
ljmp
and
sbb
xchg
lods
mov
movsb
sub
xchg
xor
stos
loop
scas
sbb
pop
stos
mov
mov
jmp
push
mov
pop
jecxz
sub
xchg
push
in
or
pop
lahf
pop
clc
nop
in
jmp
jnp
cli
add
xchg
gs
push
sub
out
sub
insb
out
jae
cmp
out
in
push
loopne
adc
lret
sub
mov
insl
sub
lods
dec
pop
lea
insb
dec
in
imul
aaa
pop
bound
ja
stc
mov
sti
sub
ljmp
lret
sub
hlt
push
mov
and
mov
arpl
jmp
or
or
ljmp
movsl
imul
mov
mov
in
cmp
mov
lods
inc
sub
call
adc
stos
aad
sub
data16
insb
pop
cmp
adc
lods
push
mov
dec
lea
inc
rcrl
arpl
imul
daa
scas
xchg
sub
pop
in
pop
mov
clc
popa
mov
jns
jno
push
pop
insl
push
sbb
ljmp
add
pop
mov
insb
rcrl
repz
pop
mov
and
xchg
add
test
imul
es
lods
rep
lret
inc
addr16
or
pop
xchg
aaa
rcrb
inc
jl
mov
pop
sub
or
scas
lds
and
leave
loop
sub
int3
shll
lods
lods
lods
popf
lods
daa
stos
sub
stos
inc
sub
imul
push
push
insb
xchg
xchg
inc
mov
push
gs
divb
mov
jmp
punpckhdq
dec
ljmp
in
cmpsl
lods
sub
mov
inc
jmp
mov
inc
lods
push
xchg
dec
xor
mov
and
lea
mov
mov
pop
in
pop
xchg
int
jne
mov
lahf
sahf
lods
mov
rclb
mov
pushf
ds
push
xchg
xchg
mov
in
jmp
inc
imul
jmp
in
jmp
or
sti
cwtl
sub
and
xchg
sub
lods
push
dec
mov
leave
sbb
and
and
in
fildl
stos
jg
rolb
mul
ljmp
enter
scas
push
aam
addr16
cwtl
in
sub
in
rcr
dec
jnp
pop
inc
stos
jmp
stos
push
ljmp
lock
cld
mov
mov
sub
or
push
outsb
aam
stos
loope
out
pop
pop
ja
dec
aas
fwait
mov
gs
xlat
push
ljmp
lods
mov
mov
pop
lods
lods
xlat
clc
scas
xchg
pop
mov
pop
sar
jmp
fldcw
les
mov
add
or
mov
and
cs
cmpsb
adc
lea
sub
sub
mov
nop
js
mov
orl
mov
inc
xchg
test
aam
push
add
out
mov
test
push
inc
test
lret
push
adc
std
sub
jl
cld
or
xor
cltd
repz
dec
xchg
punpckhwd
mov
dec
loop
jbe
mov
lcall
ljmp
cld
mov
dec
in
dec
aaa
jns
or
jp
dec
ret
cs
mov
pop
les
sub
sarb
cld
mov
sbb
std
jl
repnz
sbb
and
dec
jg
movsb
sti
lods
rcr
inc
xchg
xchg
sub
or
daa
fldt
daa
push
in
pop
shl
in
mov
sarb
adc
ljmp
sbb
lods
adc
pop
and
data16
popf
sub
cmp
add
lods
jnp
mov
jmp
enter
subb
sbb
adc
shll
je
xor
test
or
jmp
push
repz
mov
stos
test
insl
mov
mov
push
cmp
mov
xchg
shrl
insb
test
jmp
aas
daa
mov
xor
daa
lret
mov
or
xchg
lcall
rcrb
jmp
push
stos
mov
and
add
mov
mov
xor
insb
ret
stc
fisttpll
pusha
or
mov
push
mov
and
test
enter
mov
mov
insb
push
les
subb
add
mov
mov
push
mov
sbb
add
add
add
xchg
in
ljmp
sti
das
push
xor
adc
sub
fimuls
mov
cmc
jmp
sub
sti
pop
ljmp
std
or
lea
or
ja
jg
jmp
stos
out
push
or
repz
cmpb
fmull
test
stc
and
lahf
sbb
pop
xchg
xchg
imul
xor
jmp
fistpl
mov
inc
int3
in
jp
outsb
adc
mov
dec
insb
push
or
and
inc
lods
or
sub
fnstenv
xchg
inc
jmp
dec
lods
mov
lcall
fcmovu
sub
cmp
xchg
lods
movsb
dec
insb
iret
les
add
sbb
inc
movsb
xchg
les
cmp
int
xchg
inc
mov
roll
jl
insb
push
aaa
push
addr16
fwait
in
inc
push
ljmp
adc
daa
imul
lods
addr16
sub
imul
or
insb
incl
addl
fwait
in
lods
jmp
popa
push
repz
sub
cmp
and
cmp
lcall
jge
push
mov
mov
jmp
push
stos
push
out
mulb
cmc
and
xor
rorl
lods
mov
inc
mov
fucomip
mov
sbb
mov
or
mov
aad
push
movsl
sub
lods
daa
lods
shrb
mov
jmp
lahf
cmpl
jl
addr16
aaa
mov
xchg
adc
mov
xchg
fs
adc
xor
daa
sub
inc
repnz
pop
sub
aad
pop
rcll
mov
sub
popa
insb
pop
sub
orb
scas
mov
pop
or
cmp
mov
jnp
cmp
inc
push
xor
fwait
add
lods
pusha
daa
insb
subl
fsubs
inc
lods
or
sub
push
stc
addr16
jae
fwait
jbe
cmp
dec
sub
and
mov
sbb
xchg
or
repnz
push
cmp
decl
mov
js
xor
push
mov
cmp
cmp
jb
movsb
insb
repnz
push
mov
or
cmpb
andb
aaa
movb
aas
jp
out
hlt
outsb
outsl
push
sub
lods
sti
xlat
jl
pop
xlat
and
jne
inc
daa
lret
sub
lcall
jmp
addl
jo
mov
sub
lods
imul
mov
xchg
test
es
out
push
fs
movsb
jge
inc
daa
test
push
insl
out
adc
push
pop
adc
adc
stos
das
in
cld
stos
jb
lret
cmp
sbb
jo
andb
stos
and
arpl
stos
inc
popa
mov
mov
mov
adc
xchg
mov
js
jno
xor
mov
mov
sub
insl
mov
or
jmp
out
and
cmp
lret
shlb
sub
in
adc
pop
inc
adc
xchg
orl
sub
enter
sbb
mov
daa
jno
xchg
in
and
bound
jmp
shrl
nop
jge
addr16
xchg
je
sbbl
mov
mov
movsb
call
jmp
in
in
mov
xchg
sub
pop
out
mov
dec
or
gs
adc
pop
sub
in
test
test
pop
push
stos
cs
pop
and
stos
iret
out
popf
in
pop
test
movsl
shlb
out
ljmp
push
jmp
movsl
mov
lods
and
call
rcrl
push
xchg
stos
cmp
iret
xchg
stos
mov
dec
test
jmp
stos
stc
call
sahf
jecxz
jge
icebp
loope
and
sub
stos
cmc
movsl
ljmp
cwtl
in
cltd
gs
xchg
xchg
jmp
push
push
rcrb
aaa
push
mov
mov
lods
xor
lods
stos
shl
cmp
push
mov
les
sbb
imul
cmp
mov
or
jmp
mov
mov
jmp
cs
imul
repz
fs
sti
xchg
test
stos
jns
jne
ljmp
mov
push
mov
and
dec
shr
pop
sub
lods
xchg
push
push
imul
test
movsl
stos
sbb
ds
mov
test
es
imul
mov
stos
sbb
sbb
ljmp
jmp
outsl
bound
mov
mov
aas
fistpll
pop
mov
out
jmp
shl
adc
inc
xchg
mov
stos
xor
or
out
test
xor
fwait
mov
rorb
adc
adcl
stos
movsl
lods
and
scas
stos
mov
ds
nop
sahf
shlb
mov
dec
adc
out
cs
fwait
mov
sub
adc
jae
imul
push
add
es
fsub
xchg
mov
stos
scas
mov
mov
stos
cltd
outsl
pusha
xchg
int3
xchg
shrl
xchg
das
setp
push
dec
jnp
and
enter
das
rep
fs
mov
mov
mov
popf
lods
pushf
outsl
gs
or
push
mov
xor
xchg
xchg
repz
and
in
stos
nop
mov
enter
cs
stos
push
mov
jg
and
outsl
maxps
jge
push
inc
sarb
stos
add
outsl
mov
add
push
cwtl
push
cmp
push
outsb
arpl
and
mov
loopne
mov
xchg
mov
pop
stos
out
std
adc
mov
pop
pop
pop
aam
inc
inc
ret
scas
lods
push
ds
dec
mov
fs
mov
daa
mov
cmpsl
jb
ljmp
movsb
adc
xchg
push
movsb
mov
mov
sbb
push
mov
sar
outsb
adc
insb
dec
xchg
and
jmp
pop
in
jecxz
cmp
mov
movsb
stos
xlat
gs
inc
call
or
ja
mov
rorb
adc
push
xor
xchg
pop
shr
out
movsl
stos
insb
stc
test
enter
loope
and
lods
bound
and
jmp
xlat
cs
daa
push
outsl
aad
xor
ret
stos
xchg
and
fwait
out
hlt
in
dec
popf
xchg
and
mov
push
popa
dec
mov
pop
stos
sub
insl
mov
std
push
dec
sub
dec
sarb
dec
cmp
fwait
je
push
ljmp
pop
and
subl
ja
mov
mov
push
in
in
cmpsl
mov
lahf
stos
fsubrs
mov
mov
stos
jb
cmp
test
imul
pop
adc
sub
test
out
movsb
scas
bound
mov
stos
ss
arpl
mov
jno
les
adc
stos
mov
sub
adc
scas
sti
sub
stos
push
mov
stos
mov
xlat
mov
fs
out
jmp
lods
fisubrs
std
xchg
pusha
std
shl
sub
pop
adc
mov
xchg
sub
push
out
or
or
addr16
movsl
push
and
xchg
mov
gs
cmpsb
pop
cmpsl
xchg
clc
test
push
mov
stos
hlt
sub
in
fs
xchg
push
nop
add
mov
lds
lcall
push
outsl
sbb
add
stos
loope
push
in
and
mov
and
and
jmp
cwtl
sub
scas
stos
mov
fs
std
outsl
aam
out
xchg
in
imul
xchg
movsb
and
cmp
stos
sbb
in
stos
insl
call
pop
lods
adc
sub
cs
outsl
adc
test
incl
stos
stos
adc
cmp
push
out
fldcw
sub
mov
out
cmp
xchg
xchg
sar
data16
mov
jmp
mov
lods
mov
jmp
cmp
shrl
stc
xchg
mov
dec
inc
stos
shrb
xor
pop
test
stos
popf
and
in
arpl
mov
aaa
test
je
dec
in
mov
lahf
rclb
jne
loope
adc
xchg
lret
push
mov
sub
sub
cmp
bound
std
mov
aaa
mov
imul
push
sub
lret
xchg
mov
mov
outsl
addr16
dec
stos
mov
test
fsubrs
cmpsb
jno
xchg
mov
stos
xchg
addr16
push
sub
shrl
or
sbb
adc
or
icebp
stos
and
popa
sub
es
imul
daa
fs
in
aaa
inc
fwait
and
gs
stos
data16
xchg
stos
je
mov
cmp
push
adc
mov
and
adc
jmp
rep
mov
mov
add
push
cmp
mov
imul
out
addr16
test
in
lahf
out
xchg
adc
xchg
jae
or
lahf
fsubrs
int3
shrb
xchg
sub
xchg
shrl
call
out
shlb
es
stos
mov
cld
sub
imul
xchg
out
out
stos
pop
shlb
adc
xchg
in
rcll
inc
das
jae
xchg
xchg
shr
mov
call
jmp
movsb
push
and
mov
out
stos
dec
test
sbb
mov
push
xchg
xchg
adc
jmp
adc
scas
mov
adc
and
movsb
or
jns
mov
sbb
cmpsl
sub
imul
out
sbbb
push
fwait
mov
imul
iret
imull
xor
insb
cltd
sub
addr16
cmpsb
stos
out
and
fs
xchg
sbb
xchg
inc
mov
xchg
negl
mov
cmc
out
daa
mov
call
fistl
mov
or
or
stos
daa
push
cmpsb
mov
jbe
add
mov
adc
andb
sub
sub
das
int
add
subl
jae
pop
sub
jnp
int
cs
lods
push
ljmp
and
bound
stos
jecxz
movsb
mulb
stos
lods
add
and
andb
adc
xchg
cld
pop
inc
push
stos
jp
out
sti
scas
sub
sub
cs
lds
jmp
dec
addr16
xor
std
sub
insl
mov
outsb
push
out
pop
mov
rclb
mov
outsb
mov
test
sbb
xchg
and
pushf
arpl
stos
data16
xor
lock
test
adc
xchg
mov
nop
inc
rorb
add
adc
push
stos
adc
sub
jnp
es
fsubs
lahf
bound
pop
out
test
mov
out
dec
outsl
dec
shll
popa
and
stos
xor
shrl
jmp
xchg
sub
daa
subl
sub
and
movsb
lds
sbb
xchg
jmp
sub
sub
lods
push
insl
adc
push
mov
xchg
outsb
lret
das
xchg
lret
icebp
add
sub
out
mov
jmp
add
popa
es
pop
movsb
lahf
mov
mulb
sahf
lods
ret
imul
jmp
lods
mov
pop
insl
stos
jbe
cmp
xchg
jmp
shlb
xchg
std
xchg
iret
push
stos
adc
scas
push
fldenv
or
xchg
loop
push
lea
stos
xor
mov
inc
in
popa
outsb
stos
fwait
outsl
ja
push
inc
mov
adc
xchg
je
arpl
mov
outsl
aas
outsb
in
adc
dec
jmp
aad
xor
aam
jne
dec
cmpsl
lock
stos
add
mov
daa
jp,pn
mov
cld
das
cmp
popa
dec
nop
inc
stos
scas
xor
cli
in
cmp
add
test
data16
out
in
in
out
cmpsl
xor
push
std
hlt
jmp
sbb
data16
scas
stos
notb
push
mov
loop
push
mov
xor
fucomp
mov
jmp
in
and
xchg
cmpsb
arpl
jmp
pop
sub
mov
sub
adc
push
int
adc
rcrb
dec
ljmp
and
movsb
pop
adc
cmpsb
cmp
dec
ljmp
and
in
mov
imul
scas
shrl
rcl
xor
lods
jbe
lods
sub
push
cmpsb
std
in
sbbb
stos
and
es
call
stos
jnp
and
sub
stos
adc
add
xchg
xchg
lods
nop
xchg
push
in
insl
fcompl
out
in
and
bound
cltd
push
and
imul
in
lock
es
out
mov
das
fists
xchg
andl
insb
shlb
mov
xor
imul
ja
push
repnz
inc
ljmp
lods
test
dec
lods
in
aas
sub
bound
mov
vandpd
jp
std
mov
xor
jmp
jmp
add
push
out
lods
shrl
push
xchg
test
sub
out
clc
stos
push
mov
xchg
stc
xchg
sbb
outsl
daa
sbb
pop
push
packsswb
pop
push
push
jno
jmp
mov
fwait
arpl
stos
insb
subb
cmpsb
push
repnz
fcmovbe
pop
sub
cmpsb
jmp
gs
andl
fwait
arpl
shrl
imul
jo
sub
in
sub
xor
or
js
mov
out
xor
std
sub
daa
or
jns
cmpsb
mov
add
subb
add
inc
pop
mov
cmp
jne,pn
inc
adc
adc
push
scas
xchg
push
and
out
push
jbe
and
enter
inc
cmpsl
stos
mov
adc
stos
stos
jns
mov
sub
out
dec
add
ss
or
push
sub
mov
ror
daa
test
inc
jmp
insb
daa
movsl
gs
leave
ljmp
add
xchg
cmp
imul
cmpb
pop
outsb
dec
test
sarb
orl
lods
push
daa
fwait
es
rep
test
cmp
mov
daa
jbe
jo
in
xor
stos
in
ljmp
mov
stos
in
shll
mov
es
lods
mov
cmp
xor
mov
jmp
sub
ret
out
iret
ljmp
jge
xchg
and
outsl
imul
scas
jmp
cmpsb
mov
and
jae
int
push
popf
mov
arpl
fwait
pop
sub
cli
insl
sbb
inc
nop
int3
push
int3
lret
or
movsl
scas
out
insb
sbb
add
dec
cmpsl
mov
pushf
call
mov
addr16
mov
jl
push
test
sub
mov
outsb
stos
out
sti
push
cmc
sarb
push
stos
push
dec
xchg
fcoms
out
mov
sub
mov
cmpsb
mov
getsec
mov
ret
out
outsb
fildl
sbbl
imul
outsb
in
jge
push
push
xchg
xchg
mov
testb
pop
lods
out
jmp
imul
mov
xchg
and
push
cmpsl
push
mov
jmp
hlt
imul
adc
xchg
sti
xchg
xchg
push
dec
push
scas
fwait
mov
stos
sub
or
in
test
cmp
int3
add
dec
daa
lea
lds
adc
mov
dec
imul
shll
fcmovnbe
xor
xchg
sub
cmpsb
scas
mov
cs
mov
repnz
and
mov
cmpsb
in
std
xchg
add
sub
lods
mov
adc
adc
and
roll
scas
mov
out
mov
fwait
call
es
in
pop
mov
sub
cmp
sub
test
jmp
out
repz
fwait
adc
rcrb
rorb
dec
in
stos
scas
stos
pop
aaa
std
jmp
ss
mov
shr
icebp
push
push
xor
arpl
test
stos
mov
jnp
shrb
push
xchg
xchg
add
inc
popa
xchg
push
xchg
dec
lods
inc
sub
jmp
sub
jmp
in
jmp
stos
mov
into
or
mov
insb
stos
inc
cs
rorl
jmp
in
aam
movsb
pop
push
mov
xchg
out
mov
lahf
ljmp
leave
addr16
xlat
and
mov
jb
cmp
or
xor
mov
sub
int3
xchg
jg
push
jl
mov
pop
mov
ljmp
push
xor
pop
lcall
fisubrs
addr16
add
cmpsb
outsb
jl
fsubrl
subl
aam
mov
jmp
jmp
push
pop
scas
cld
scas
stos
push
in
cmc
imul
jge
jl
imul
sub
test
cmpsl
jmp
cmpsb
fwait
gs
and
cltd
and
jmp
mov
rcl
push
sub
push
push
das
fucomi
mov
jmp
sub
jmp
pop
mov
mov
dec
stc
es
popa
and
and
lea
inc
rclb
push
dec
xchg
fsubrp
nop
das
lds
imul
loopne
fs
out
xchg
sub
stos
je
mov
daa
and
movsb
cmpsb
cmpb
in
lods
sub
pop
imul
jne
adc
xchg
mov
xor
les
push
std
stos
pop
stos
scas
sub
jmp
mov
and
fs
ja
cmpsb
pop
call
fldcw
and
rorb
stos
xchg
mov
cs
stos
lods
scas
in
subb
xchg
imul
aaa
aaa
outsl
mov
call
out
fs
cmpsb
movl
push
sub
outsb
lcall
fmull
dec
xchg
aaa
stos
sub
xchg
lock
lods
mov
mov
xchg
les
add
push
lods
mov
stos
jle
adc
push
cmp
shll
insb
sub
or
dec
sbb
sub
out
clc
in
or
and
mov
adc
push
adc
inc
push
addr16
xor
lods
xor
and
ret
mov
test
std
inc
dec
out
cmpsb
lahf
dec
ficoml
stos
and
xchg
ret
xchg
mov
push
subl
stos
xchg
lods
or
sub
testb
push
ljmp
call
jnp
mov
lahf
xor
sub
lods
jmp
cs
rorb
stc
fldcw
xchg
fisubrs
insb
shrb
sbb
subl
mov
data16
mov
xchg
fistl
insl
cltd
jnp
lea
out
subb
sub
pop
imul
shlb
push
stos
xor
cld
scas
imul
lahf
mov
das
lea
jmp
insl
push
sub
in
jecxz
xchg
xor
cmp
adc
and
sbb
cmpsl
push
out
cltd
adc
inc
imul
imul
mov
je
rorl
mov
mov
sub
daa
lahf
in
es
jge
loopne
inc
mov
ljmp
and
xor
shrb
mov
fsubrp
mov
push
das
imul
popa
fnstcw
mov
dec
fwait
and
movsl
jmp
sub
stos
jne
mov
stos
daa
mov
gs
xchg
pop
sub
cld
outsb
xor
test
in
adc
stos
out
jmp
gs
mov
repz
cmp
mov
stos
ja
aad
sbb
push
ret
cmpsl
jbe
lahf
pushf
test
jmp
xchg
mov
sbb
xchg
inc
inc
lods
and
in
in
nop
and
and
mov
repz
fcoml
mov
mov
loope
cmp
ljmp
mov
push
nop
jae
or
cmp
cmpl
lods
sbb
xlat
xchg
xor
adc
jmp
xchg
movsl
call
add
jmp
in
ljmp
adc
rorb
mov
xchg
xlat
ja
lcall
add
cwtl
in
mov
stos
push
ljmp
call
repnz
adc
mov
stos
sub
and
dec
xor
xor
inc
ret
fsubrl
imulb
pop
xchg
scas
test
pop
sub
inc
ljmp
cmpsb
enter
xor
dec
push
test
in
xchg
lods
test
outsl
mov
cli
aaa
dec
sbb
scas
cmpsb
push
stos
mov
or
stos
lcall
mov
and
in
or
scas
jp
stos
pop
jmp
sub
out
pop
out
movsb
sbb
mov
outsb
lahf
mov
insl
pop
lods
in
in
mov
mov
adc
mov
daa
imul
lock
sbb
stos
pop
imul
lods
fdivr
sub
xchg
es
mov
arpl
pop
lcall
push
jbe
scas
insl
fldt
jmp
out
cmpsb
shl
push
ret
ja
mov
clc
sub
xchg
sub
mov
cmp
shrb
outsb
fsubrs
xchg
mov
sub
jb
inc
in
xchg
ret
sub
daa
mov
fcmovne
outsb
je
popf
flds
jmp
push
adc
testb
outsl
jmp
pop
sub
lods
lods
imul
sub
ljmp
add
cmpsl
pop
sub
rcrl
aas
sub
imul
lret
inc
insb
scas
fldcw
in
cmpsl
lods
test
test
pop
lahf
mov
stos
sub
imul
mov
and
push
cmp
test
jmp
jmp
sub
push
into
jmp
jnp
mov
les
daa
and
leave
hlt
or
enter
daa
cmpsb
icebp
movsl
jmp
out
fs
inc
daa
stos
insb
test
sub
lods
mov
and
popa
jp
push
outsb
add
lods
push
insl
push
stos
paddusb
imul
repz
ret
cltd
clc
lea
jmp
mov
insb
lods
lea
lret
fwait
dec
in
dec
add
mov
daa
pop
outsl
xchg
sub
adc
shll
mov
stos
inc
test
sub
xchg
imul
push
out
dec
cmp
subb
in
xchg
stos
add
cmpsl
imul
sti
mov
mov
push
imul
in
rep
sbb
movsb
push
outsb
stc
ljmp
mov
jb
arpl
roll
sub
cmpsl
xchg
pop
mov
cmp
icebp
in
xchg
imul
mov
add
das
xchg
inc
sbb
pop
push
aaa
outsb
mov
push
or
sub
sub
lret
test
call
and
cmp
loopne
stos
dec
push
sub
push
sub
stos
mov
sub
sbb
shlb
nop
xor
outsb
fcmovu
mov
test
fisubs
jne
stos
out
call
sub
mov
jmp
sub
test
adc
sub
cs
out
mov
pop
stos
mov
pop
in
mov
stos
mov
aad
rcrl
cltd
stos
xchg
jmp
outsl
daa
and
pop
dec
pop
xchg
inc
daa
mov
lods
xchg
in
stos
insl
iret
scas
out
cs
mov
outsl
lcall
sub
sub
mov
fldcw
mov
in
dec
mov
popf
je
scas
imul
and
adc
mov
jle
nop
ss
cmc
mov
mov
adc
sub
push
mov
sub
sub
fldl2e
sbb
imul
and
mov
mov
jne
dec
or
sub
stos
dec
sub
push
imul
cmp
pop
push
xchg
lods
add
jl
loopne
or
add
bound
lock
scas
daa
outsb
outsl
cs
fwait
add
stos
lods
shrl
sub
jbe
xchg
aaa
fwait
pop
sahf
push
add
inc
mov
fdivrl
clc
xor
mov
popf
xor
popf
sub
push
or
and
lret
stos
xor
jmp
adc
mov
sub
pop
test
mov
jmp
stos
imul
mov
stos
incb
or
xchg
sub
imul
push
or
mov
icebp
ljmp
pop
mov
pop
orps
mov
insl
dec
out
jnp
movsb
aas
outsb
inc
add
sub
lods
subl
pop
ljmp
cli
scas
jge
mov
push
out
mov
inc
xchg
xchg
daa
sub
lods
scas
jbe
mov
nop
shlb
mov
push
mov
add
xchg
xlat
adc
mov
jmp
sub
mov
in
mov
ret
outsb
push
push
fwait
pop
das
mov
out
stos
lods
packssdw
push
ja
add
jbe
sbbl
sub
or
mov
jecxz
xchg
jmp
sahf
and
dec
insl
sub
push
mov
mov
stos
dec
sub
lods
lret
jmp
test
stos
ljmpw
push
push
xchg
sub
add
inc
push
fwait
imul
xchg
es
das
inc
xchg
test
stos
cmp
or
imul
sbb
push
repz
rorl
ret
pop
imul
insl
adc
daa
out
xchg
mov
stos
adc
cs
out
lds
ret
sub
ljmp
stos
xchg
test
xchg
sub
xchg
xchg
pusha
nop
cld
fdivl
and
pop
push
scas
push
call
mov
cs
popa
inc
jns
dec
mov
lods
and
mov
out
adc
xchg
jae
sub
pop
xor
and
sub
adc
ljmp
scas
ja
push
dec
or
in
out
push
lods
pop
imul
or
jmp
xchg
push
pop
push
mov
imul
xchg
lods
lcall
and
cs
lea
adc
enter
or
cwtl
les
xor
in
or
pushf
sarl
sub
cmpsb
inc
mov
lret
or
fwait
loope
mov
and
lods
sub
scas
movsb
sbb
sbbb
imul
lods
mov
inc
mov
movsl
sub
test
test
call
jmp
jecxz
hlt
fwait
mov
cltd
ljmp
test
add
sub
push
sub
ljmp
cmp
xor
xor
sub
sub
in
mov
das
push
je
jne
shr
inc
out
or
or
pop
mov
lods
sub
fbld
mov
pop
pop
inc
xchg
fsubr
sarb
rep
push
dec
cmp
pop
cltd
push
loop
adc
insb
and
add
push
jmp
push
loope
add
push
mov
es
xchg
outsb
cs
jg
out
inc
xorl
lods
mov
frstor
ljmp
cmp
scas
mov
cmp
or
and
sub
in
outsb
scas
jecxz
mov
ja
sub
sub
in
fwait
mov
nop
aaa
daa
mov
inc
stos
add
std
jmp
addr16
xor
cmp
cltd
imul
out
push
outsb
cmp
cltd
sub
cmp
popa
mov
sbb
or
imul
jle
and
aam
jge
push
lods
add
test
sub
scas
fisubrl
mov
cld
outsb
xchg
lahf
lods
sub
add
push
mov
stos
nop
imul
lods
call
and
inc
je
cmp
sub
push
scas
ret
outsl
xchg
fstps
popa
insl
mov
es
sub
imul
pusha
es
add
and
ret
test
xchg
test
inc
dec
lahf
adc
xor
lret
imul
daa
lods
mov
adc
mov
icebp
scas
inc
jnp
xchg
loop
mov
and
in
jmp
stos
xchg
test
addr16
sub
nop
daa
mov
mov
add
dec
out
imul
cli
push
lret
xchg
xchg
popl
xacquire
fwait
mov
js
jmp
test
cmpb
daa
mov
sub
add
lret
cmp
pop
xchg
shrl
dec
sub
orl
or
sub
push
addr16
daa
cltd
pop
xor
fwait
lahf
xchg
jmp
dec
int3
outsb
int3
nop
xlat
pop
xchg
dec
sub
in
data16
aam
imul
mov
inc
sub
daa
mov
mov
mov
stos
sbb
test
dec
out
daa
subl
outsb
enter
insl
cmp
test
aas
pushf
cmp
test
mov
lahf
mov
cmp
out
xchg
test
sub
in
xor
cs
addr16
scas
add
insb
push
movsb
insb
or
pop
ficoms
xchg
cltd
lods
loop
imul
sub
sub
call
aam
add
push
push
inc
or
roll
nop
xchg
adc
imul
loope
imul
and
loopne
arpl
cmpsb
gs
mov
call
sub
mov
sbb
out
arpl
mov
in
jmp
or
dec
xchg
mov
bound
mov
stos
movsb
call
cmpsl
push
in
nop
push
sub
stos
sub
insl
mov
xchg
stc
test
scas
sahf
sbb
mov
xlat
dec
cmp
out
outsl
stos
mov
push
sti
xchg
scas
fsubrl
adc
sub
out
dec
cmp
cli
ret
add
push
pop
mov
insl
adc
imul
jmp
inc
daa
cmpsb
je
jne
push
cmpsl
mov
shll
fwait
insb
mov
out
xchg
outsb
inc
xchg
mov
xchg
fisubrs
cmp
stos
imulb
ljmp
std
imul
cltd
sbb
stos
test
imul
movsl
out
repz
cltd
movsl
insl
lea
or
jl
in
push
imul
lods
mov
in
scas
out
mov
imul
push
jmp
push
out
mov
shll
dec
or
adc
in
mov
scas
mov
popa
pop
dec
push
ja
ljmp
imul
jge
mov
data16
mov
add
stos
loopne
sbb
insb
repnz
lods
sub
les
inc
les
inc
faddl
add
mov
xchg
xchg
imul
shlb
mov
stos
xchg
push
imul
adc
movsb
sub
or
out
xchg
dec
insl
jmp
out
les
cs
xchg
sub
pushf
mov
js
xchg
addr16
or
data16
lcall
sub
sub
mov
popa
sub
outsb
push
hlt
movsb
pop
cs
add
sarw
int3
lods
mov
sub
shlb
out
cmpsb
nop
out
fsubr
stos
jmp
lods
insb
stos
sub
lods
std
sbb
or
sub
scas
aad
and
les
mov
in
mov
xchg
or
stos
imul
cmpsl
nop
addr16
call
cmp
adc
lods
mov
movsb
xchg
mov
xor
subl
fwait
xchg
and
leave
sub
hlt
call
add
andl
popf
ljmp
or
mov
out
pop
outsb
imul
cmp
mov
mov
fldcw
push
imul
dec
cmpsb
mov
cmp
dec
mov
in
pop
fdivl
push
stos
enter
hlt
sub
cs
cwtl
out
sbb
ljmp
mov
and
xor
sub
imul
lods
mov
insb
test
sub
mov
mov
in
mov
mov
stos
stos
xchg
jmp
scas
es
adc
mov
mov
sbbl
jae
jp
xor
xchg
out
lahf
scas
pop
xchg
mov
sub
cltd
push
test
out
es
sub
jae
pushf
es
sub
mov
in
int3
insl
mov
mov
sub
dec
stos
xor
in
mov
adc
movsb
packuswb
arpl
test
scas
mov
sub
mov
mov
scas
and
stc
jecxz
mov
movsb
sub
ljmp
push
clc
fistps
daa
xchg
imul
stos
push
jmp
mov
in
das
sub
in
mov
cmp
mov
mov
push
imul
jmp
pop
pop
out
mov
inc
in
xchg
sub
daa
stos
push
jmp
sub
mov
imul
mov
cs
out
push
stos
adc
shr
sbb
les
call
mov
stc
mov
jmp
jg
inc
xchg
mov
dec
in
xchg
sub
stos
mov
or
jge
lods
fsubrs
mov
test
xchg
push
mov
out
lock
loopne
jnp
cmp
dec
jmp
stos
pop
sub
imul
sub
imul
repz
xchg
lods
and
jl
lods
mov
fs
addr16
cmp
sbb
daa
addr16
xchg
cmpl
cmp
insb
lods
inc
out
sbb
das
xlat
jl
sub
mov
xor
leave
jmp
test
daa
adcb
addl
sub
cli
das
push
mov
in
loopne
xor
mov
jbe
mov
lea
mov
stos
cmp
push
test
daa
xor
mov
pop
add
jmp
push
sub
leave
lods
stos
in
push
fldt
push
pop
mov
scas
mov
stos
in
mov
mov
cs
daa
push
jl
jl
std
stos
pop
imul
or
fsubrs
out
test
cmp
test
std
mov
mov
popa
mov
test
push
call
or
int3
sub
test
xchg
cmc
mov
insl
or
sbb
mov
pop
sbb
stos
in
jmp
mov
jmp
shll
sbb
test
mov
sub
adc
test
lods
xchg
mov
push
pop
outsl
ret
in
xor
or
sub
ljmp
call
or
jmp
ljmp
xor
cmp
mov
or
das
inc
mov
stos
lods
popa
lods
pop
imul
subl
call
xchg
pop
ficoms
cwtl
push
sub
adc
lods
aas
in
iret
sub
and
mov
mov
xchg
in
stos
stos
fildll
and
push
outsb
xlat
mov
push
pop
mov
inc
sub
stos
imul
insl
shrl
scas
outsl
fiadds
xchg
push
adc
mov
add
in
ljmp
test
les
es
das
stos
pop
push
test
sub
stos
test
sbb
stos
out
cs
scas
xchg
das
push
push
or
ds
xor
cmp
leave
std
daa
mov
gs
push
jnp
mov
sub
imul
scas
mov
ljmp
adc
jmp
ljmp
dec
pop
in
daa
adc
mov
lahf
xchg
pop
stos
imul
sub
sub
insl
ja
push
mov
jle
sbb
in
in
mov
sub
sub
add
repz
push
in
and
test
stos
sub
sahf
sub
scas
lcall
add
outsb
fildll
popf
movsb
data16
lahf
mov
stos
sub
call
mov
dec
pushw
fucomi
or
mov
sub
out
addl
test
pop
in
stos
jecxz
pop
ljmp
test
call
push
dec
shrl
mov
stos
cli
jmp
in
fsubr
xlat
sub
out
fldcw
xor
xor
repz
test
push
lods
ljmp
addr16
jmp
fisttpl
sub
adc
sahf
sub
insl
jmp
outsb
ret
outsl
iret
sbb
xchg
subb
jge
ds
push
fbstp
sub
std
cmp
jle
xchg
imull
stos
mov
lret
out
ret
cs
mov
fisttpll
ljmp
call
jmp
jle
ja
outsb
mov
or
fldt
ja
or
sub
out
sbb
pop
out
jge
mov
cld
sub
push
scas
push
sub
scas
sbb
mov
lcall
dec
imul
in
ds
pushf
cs
xchg
push
popf
mov
jb
fildll
imul
lcall
iret
push
lods
shlb
pop
mov
or
push
dec
les
imul
out
lods
icebp
lods
movsb
std
lods
jno
xchg
ljmp
mov
add
fstpl
mov
ljmp
insb
add
outsb
imul
jp
stos
scas
int
gs
addr16
adcl
pop
test
sub
pop
xor
fists
mov
xor
push
fwait
xchg
outsb
aas
mov
les
add
lret
test
cmp
ljmp
and
mov
stos
js
ljmp
sub
insl
mov
mov
cmp
stos
lret
cs
xchg
sub
pop
in
inc
jmp
push
mov
gs
leave
in
and
test
subl
lods
and
mov
xchg
pop
push
mov
push
insl
mov
add
mov
mov
pop
jmp
inc
or
add
stos
jp
repnz
sub
xchg
mov
ljmp
jb
adc
mov
sbb
stos
sub
insb
push
sub
inc
test
mov
push
jae
call
fsubr
cmp
cmp
fwait
sub
sub
scas
mov
jmp
out
xor
fldt
loop
mov
sub
test
inc
add
xchg
out
dec
das
lock
ljmp
pusha
sub
sub
scas
xchg
add
inc
dec
lahf
imul
sub
movsb
cltd
jmp
jmp
jo
shrl
test
xchg
sarl
sti
pop
jmp
mov
daa
ljmp
pop
sub
jmp
mov
push
pop
jg
out
lea
push
mov
sub
imul
add
into
xor
mov
test
das
mov
lods
xchg
lods
ljmp
outsl
inc
popa
je
adc
mov
mov
xchg
stos
jmp
imul
or
mov
lahf
fwait
sbb
imul
sub
and
dec
mov
scas
sahf
cs
stos
out
imul
loope
cmp
sub
pop
test
movsl
scas
push
push
lahf
cmp
in
ds
xchg
mov
in
add
pop
scas
push
push
stos
loope
sbb
sub
jp
mov
lret
mov
sub
test
sbb
scas
xor
xorl
xchg
pop
push
insl
dec
scas
push
out
xchg
scas
push
outsl
push
xchg
stc
bnd
xchg
stos
fldcw
sub
jmp
std
jp
pop
pop
push
sbb
or
ljmp
mov
out
xchg
repnz
nop
xchg
imull
in
lods
mov
imul
or
imul
pop
xor
addr16
pop
cmp
ljmp
pusha
sub
imul
lods
mov
lret
stos
and
mov
in
movsb
lcall
mov
fisubrs
sub
jge
sub
sbb
mov
in
fwait
in
aaa
sub
out
push
mov
imul
xchg
adc
jg
js
stos
mov
test
shll
xor
addl
jg
lock
sub
stos
jbe
mov
insl
addr16
lock
imul
fcmovb
or
mov
fwait
adc
push
push
xchg
xchg
lea
pop
mov
pushf
sub
into
stos
das
ljmp
pop
sub
gs
dec
scas
sub
scas
stos
or
pop
stos
aas
insb
sub
and
pop
stos
mov
jmp
sub
cmp
jl
cmp
sub
stos
bound
insb
mov
mov
ret
outsl
cli
addl
lods
xor
sbb
adc
stc
push
jbe
jecxz
mov
push
clc
stos
stc
stos
cmp
jmp
imul
scas
mov
xchg
cmp
ret
mov
mov
imul
sub
lahf
lahf
adc
popf
mov
cmp
stos
imul
das
in
mov
out
add
jbe
cltd
in
ret
cmp
imul
xlat
test
cmp
jl
mov
test
mov
mov
stos
adc
jg
imul
xor
imul
xchg
out
cmpl
call
jmp
push
sub
insb
es
jmp
outsb
mov
mov
repnz
loopne
push
insb
xchg
sub
ljmp
popf
cmpsl
mov
push
mov
scas
sub
jmp
imul
lods
call
scas
aaa
inc
lods
xor
sbb
push
jmp
dec
push
jmp
mov
loop
pop
xchg
cmc
notl
push
jmp
sub
insb
mov
lds
out
inc
scas
sub
jmp
jecxz
adc
mov
loopne
push
cmp
jmp
ds
rolb
dec
pop
mov
mov
cmpsb
in
aaa
sub
popl
out
adc
add
cmpsl
lods
nop
sub
mov
sbb
ljmp
sbb
ja
pop
cmpsb
lods
and
fnstcw
and
insw
push
les
mov
stos
pop
sub
jbe
stos
ja
leave
imul
inc
cmp
movsb
fildll
inc
shrb
sub
inc
lods
push
sub
insl
lret
xor
test
scas
shrl
or
das
std
push
cmp
ss
out
fmull
add
lock
in
dec
mov
out
adc
scas
jnp
xchg
stos
push
lods
pop
imul
pop
sbb
in
xlat
cmc
mov
sbb
pop
fs
imul
movsb
mov
add
sbb
rorb
mov
jmp
push
add
and
mov
xchg
std
and
push
stos
fldt
add
lods
aaa
dec
out
mov
addr16
push
dec
sub
mov
sbb
mov
sub
push
pop
sub
test
ljmp
in
xchg
sub
lods
stos
ds
mov
fwait
push
insb
hlt
sub
inc
ljmp
or
push
push
fsubrs
daa
lahf
ret
push
xchg
push
stos
jmp
imul
insl
jnp
push
jns
xchg
xchg
imul
aas
sbb
loopne
cmp
lea
and
jmp
jmp
aas
lahf
xchg
hlt
stos
in
fsubrl
insb
test
inc
stos
test
out
aas
in
movsb
lods
lods
scas
mov
push
popa
test
xchg
sub
loop
insb
sub
sbb
ret
pop
or
loop
push
in
jmp
insl
cwtl
out
scas
rcrb
sub
adc
add
test
or
or
loopne
adc
xchg
sub
test
test
out
gs
or
in
jp
mov
mov
es
and
pusha
fwait
and
imul
stos
scas
sub
lods
mov
lret
out
pop
outsb
push
cs
les
lods
push
into
xchg
mov
sub
jmp
icebp
cmp
push
xor
lret
mov
fldt
sub
lods
sbb
ljmp
and
in
lods
sub
sub
mov
xchg
popa
adc
repz
sub
cltd
in
movsl
lea
jg
sub
sub
inc
sub
rorb
cmp
mov
subl
xchg
xchg
dec
scas
mov
movsb
push
sub
push
sub
xor
clc
scas
shrb
or
stos
xor
sub
sub
inc
imul
xchg
xchg
pop
mov
ret
jle
sahf
imul
mov
inc
push
mov
jg
pop
mov
mov
cld
push
cmc
pop
cmpsb
stos
sbb
stos
xchg
mov
sub
shrl
xchg
stos
stos
push
push
jmp
imul
insl
jl
jns
outsb
or
pop
cmp
scas
enter
xor
out
aas
stos
xchg
imul
dec
and
xor
popf
mov
out
imul
sub
mov
and
scas
pop
pop
mov
imul
test
push
xchg
mov
sub
stos
or
push
jecxz
sub
shrb
mov
stos
jle
xchg
out
jbe
adc
insb
shr
jnp
out
stos
mov
std
sub
stc
mov
scas
mov
xchg
ljmp
sub
insb
cmpsl
jmp
sub
stos
push
out
lods
lea
sub
fidivl
repnz
dec
pop
xlat
js
push
rcrl
mov
lret
inc
or
addl
fsubrs
inc
nop
iret
jae
lods
add
es
stos
xchg
fbld
sub
sbb
mov
insb
stos
push
lret
mov
inc
push
sub
jmp
imul
outsl
sub
lods
lahf
insl
xor
rorl
or
jle
cmp
xchg
imul
sub
cmp
sub
mov
stos
or
imul
imul
insl
imul
popa
mov
dec
rcrl
sub
mov
jmp
push
ljmp
adc
nop
adc
fistpl
stos
imul
repnz
fwait
xchg
sub
insb
imul
jne
dec
mov
dec
inc
fwait
pop
sub
in
movsb
and
stos
xor
mov
mov
xlat
push
xchg
ljmp
inc
mov
adc
xchg
push
dec
sub
scas
mov
lods
dec
mov
popa
int
jne
pop
in
ljmp
lods
popa
sub
dec
scas
pop
sbbb
mov
sub
ljmp
pop
xlat
sub
incl
dec
arpl
insl
sub
push
add
pop
cmp
nop
mov
imul
in
add
movsb
fwait
les
in
inc
cmp
mov
xor
sbb
push
push
rorl
lods
out
pop
daa
push
inc
jmp
mov
lahf
cmp
xor
lret
cmp
ljmp
aad
adc
sub
call
scas
xchg
jo
xor
sbb
lods
jmp
in
lahf
sub
and
das
sbb
out
stos
andb
ja
js
push
push
into
loope
push
push
or
imul
mov
in
out
add
cmp
pop
nop
sbb
movsl
sub
and
and
aas
arpl
jmp
sub
dec
lods
cli
sub
lods
jg
outsl
repz
mov
sub
daa
subl
xorl
leave
ljmp
imul
por
cmp
shrl
sbb
addl
cld
sub
mov
insl
jp
push
mov
jmp
imul
call
stos
stos
sub
imul
sub
mov
aaa
dec
dec
clc
loope
add
ret
push
insb
ljmp
sub
jecxz
pusha
scas
xchg
mov
stos
and
lret
test
push
out
scas
inc
lahf
add
cmp
jecxz
flds
xlat
xor
rcrl
mov
sub
xchg
mov
xor
mov
or
stos
fwait
ljmp
xchg
mov
std
sub
sub
dec
xorb
jns
jno
inc
or
mov
addr16
addr16
shrb
imul
sub
test
gs
lahf
mov
int
push
in
sbbl
jbe
push
inc
mov
lods
dec
insb
ficoml
xchg
inc
ds
addr16
imul
cld
sub
sbb
xchg
sub
popa
std
dec
jo
adc
lods
xor
lret
subb
pop
pop
mov
cmp
push
mov
loopne
xchg
xchg
cmpsl
nop
rol
adcb
in
push
lods
enter
out
jl
ss
cwtl
mov
xorb
test
jns
dec
xchg
pop
and
pop
sub
or
inc
in
add
addr16
jmp
imul
cmp
in
in
add
and
fimull
dec
sahf
jno
push
push
lods
xlat
sub
fisttpl
cmp
mov
test
and
lret
mov
cs
xchg
or
lods
mov
mov
jl
and
xchg
push
mov
adc
push
in
xchg
sub
fwait
data16
shrl
sbb
xchg
adc
jmp
pushf
mov
ret
cmp
dec
dec
lea
lods
cmp
inc
dec
scas
in
push
xchg
mov
or
cltd
sub
cmp
pop
push
push
xchg
out
pop
push
push
sub
cmpl
xchg
movsb
xchg
in
mov
loope
or
sub
xchg
in
popa
in
in
add
push
mov
stos
add
negb
jp
mov
mov
xchg
lahf
lret
les
jg
lret
dec
cmp
pop
in
mul
or
lcall
sub
xchg
push
xchg
jmp
out
lods
mov
mov
int
stos
sub
sbb
pop
inc
jns
xchg
xchg
xor
jg
icebp
xchg
mov
fnstcw
pop
aad
rcll
mov
pushf
sub
xchg
arpl
aaa
dec
inc
je
sub
orl
insl
in
sub
imul
mov
pop
jmp
xchg
adc
xor
mov
iret
jmp
in
lock
mov
dec
xchg
lret
sub
lods
imul
jge
add
or
xor
rcll
xlat
mov
std
mov
out
insb
movsb
daa
or
cmp
mov
imulb
inc
add
fisubrl
or
sub
sbb
pop
jae
or
jle
xchg
imulb
push
jmp
imul
cmp
nop
std
and
mov
mov
pop
imul
stos
popf
stc
dec
roll
fwait
lods
push
sub
xlat
mov
or
cltd
jmp
mov
inc
sub
lods
icebp
insl
scas
sub
mov
imul
dec
mov
mov
ret
adc
push
sub
sub
or
js
imul
popa
aad
out
dec
push
rcll
call
mov
mov
mov
add
jo
enter
adc
fsubr
out
shrl
in
dec
fstps
or
and
aad
adc
subl
loop
das
movsl
shl
stos
in
ss
std
adc
mov
insb
cld
test
stos
lods
popa
fstpt
insl
push
arpl
ss
cmpsb
sbb
inc
mov
push
xor
lea
ret
movsb
lods
push
dec
mov
sub
in
gs
insb
filds
dec
ficompl
or
pop
jmp
sub
xchg
stos
mov
dec
jmp
icebp
ret
popf
repnz
add
ss
frstor
mov
adc
int
data16
or
mov
push
and
or
jmp
lods
pusha
in
jo
dec
jecxz
sbb
xorb
jmp
leave
gs
daa
push
ja
push
push
add
push
sub
jne
sub
lods
scas
insl
insb
xlat
das
xchg
jge
or
and
lock
daa
adc
sub
xchg
xchg
sahf
daa
ljmp
or
jmp
loop
adc
pop
lret
and
lods
pop
sub
fwait
jg
push
xchg
mov
jno
ljmp
jne
add
lret
in
test
jns
shrl
sub
sbbb
insl
add
addb
xor
inc
leave
cmp
stos
mov
xor
stos
pop
ljmp
call
sub
lcall
lahf
xchg
xchg
lea
pop
lods
stc
push
lods
adc
ret
imul
lock
sub
stos
pop
stos
adc
imul
xchg
fsubrs
cmp
das
lods
adc
push
sti
mov
mov
scas
fwait
mov
add
and
pop
xor
daa
adc
stos
lret
jmp
sub
mov
hlt
std
ljmp
jp
daa
jmp
jmp
sub
std
insb
cld
cmp
mov
data16
dec
loop
jmp
rcrl
mov
fistpl
mov
movsl
jg
dec
xchg
imul
lahf
mov
stos
add
insb
mov
les
xor
sahf
ds
mov
in
lods
mov
cmp
jmp
stos
ljmp
test
push
jl
mov
mov
sub
shr
movsl
jp
ficomps
xchg
push
xchg
nop
lods
push
xchg
cli
loop
leave
xor
movsb
inc
dec
mov
mov
jmp
push
sub
repz
iret
xor
sub
mov
inc
scas
mov
mov
add
in
mov
subl
sub
push
lods
xor
mov
sbb
cwtl
sub
loope
xchg
imul
ret
or
jmp
cmp
in
cmp
xchg
dec
ds
lahf
sub
jae
xor
xchg
fisubrl
sub
cmpsb
ljmp
push
push
nop
pop
in
mov
sbb
adc
loopne
fildll
movsb
sub
stos
pop
shll
in
jmp
sub
cmc
jmp
mov
fimuls
sub
aam
pop
andl
push
mov
sub
xchg
mov
cmp
out
insb
in
fldcw
sbb
andl
test
das
mov
hlt
sub
fucom
pop
add
lret
mov
mov
imul
lods
sbb
mov
pop
mov
or
sub
mov
ljmp
sbb
adc
mov
jne
adc
outsl
insb
mov
test
enter
ret
fists
lods
shr
dec
imul
dec
sub
push
lahf
or
ljmp
sbbb
fwait
sub
gs
push
sub
in
stos
in
push
lods
push
insb
jmp
pop
in
aaa
jb
xchg
cltd
stos
jae
pop
push
inc
mov
inc
leave
ret
pushf
mov
mov
das
imul
stos
mov
in
pop
lods
push
mov
orl
xchg
sahf
stos
push
stos
dec
sub
pushf
lods
pushw
arpl
mov
push
sub
mov
sub
xchg
xchg
in
inc
ljmp
lods
mov
mov
mov
ljmp
movsl
dec
sbb
pop
imul
jmp
ret
sub
in
iret
mov
sti
mov
xlat
xchg
aad
scas
dec
lods
test
stc
outsb
cltd
stos
out
sub
es
jg
adc
push
dec
sub
xchg
imul
mov
xlat
ja
lods
movsb
insl
push
add
sbb
sub
add
sbb
jb
push
fisubrl
and
aad
scas
xchg
mov
sub
shrb
jmp
test
jnp
stos
pop
lods
mov
loop
test
jmp
push
rorl
decl
and
mov
jmp
push
hlt
imul
xor
mov
mov
sub
dec
insb
or
jnp
nop
movsb
lahf
dec
cmp
int3
popa
dec
clc
test
das
rclb
mov
inc
pop
and
rolb
dec
mov
inc
jo
mov
test
add
jmp
push
stos
dec
ljmp
cmp
jl
cmp
adc
lods
ljmp
xchg
fbstp
mov
mov
lods
sub
loop
ret
lea
stc
stos
fisttps
ljmp
stos
adc
lcall
in
lea
test
jb
mov
lods
sub
imul
dec
stos
jmp
ljmp
addr16
loopnew
fistpl
push
jmp
lahf
movsb
in
jno
std
insl
xchg
sub
push
data16
lods
xor
out
sbb
lea
lods
sub
daa
xchg
lods
push
and
sbb
repnz
test
movsb
cltd
lods
sahf
les
and
repnz
sbb
fisubl
jbe
push
add
shlb
xchg
negb
mov
cmp
xchg
sub
sbb
in
sub
and
stos
adc
cmp
daa
xor
add
fldt
xchg
push
pop
ss
mov
inc
leave
jnp
sub
or
mov
std
lret
mov
and
mov
stos
mov
sub
mov
push
lods
or
fdivrp
sbb
jg
fldcw
in
mov
popa
xchg
sub
ljmp
mov
sub
ss
cmp
xchg
stos
mov
out
je
test
or
imul
sub
push
mov
xchg
mov
mov
add
inc
and
loop
imul
jmp
and
adc
adc
adc
mov
sub
push
sub
push
cmp
add
jne
pop
jnp
push
sub
adc
pop
pop
xor
mov
jmp
xchg
ljmp
fdiv
mov
loopne
xchg
sub
repnz
mov
test
mov
or
jmp
mov
xchg
push
xchg
cltd
jecxz
or
cmpsl
imul
mov
adc
sub
dec
lret
bound
lods
push
popa
or
xchg
xrelease
inc
push
or
imul
les
nop
stos
lret
jmp
imul
and
and
lds
fldcw
in
push
sub
out
mov
mov
loope
sub
inc
mov
pusha
jmp
loopew
xor
pop
fnstenv
hlt
stos
sahf
or
out
push
and
ljmp
or
inc
or
sub
mov
pop
stos
sub
mov
fs
jo
sub
mov
mov
jmp
stos
out
mov
push
test
dec
pop
test
outsb
ljmp
mov
mov
xchg
jg
lods
shrb
fldl
sub
fstpt
jmp
mov
and
xor
jmp
daa
ljmp
pop
jmp
jns
sub
jb
jg
imulb
stos
sub
xchg
and
movsb
sub
add
mov
hlt
rorb
stos
out
push
xchg
nop
xchg
inc
addl
sub
in
repz
and
andl
imul
jmp
mov
lcall
lods
mov
std
sub
push
imul
out
les
subl
mov
leave
imul
loop
push
mov
push
out
push
mov
pop
scas
mov
mov
es
mov
xchg
mov
cmpsb
pop
mov
nop
mov
rcrb
jge
inc
in
lods
ss
adc
fwait
push
inc
sub
inc
lods
xlat
sub
in
push
sub
sub
or
lcall
stos
aad
sub
xor
mov
scas
sub
or
in
lret
insb
inc
in
stos
subb
mov
add
lods
gs
imul
lret
push
data16
mov
ret
or
lret
lods
out
insl
push
dec
mov
lea
inc
in
mov
movsb
fisubrs
mov
xchg
test
pushf
and
movsb
mov
sub
scas
cmpsb
stos
xor
add
dec
imul
aas
leave
insb
sub
push
sub
das
push
mov
mov
dec
stos
fwait
cwtl
js
push
inc
sti
xchg
das
sarl
and
ret
xorb
lods
jae
mov
mov
in
pop
and
jmp
jecxz
out
jmp
mov
add
fwait
mov
and
inc
loop
movsl
ljmp
jmp
in
scas
insb
in
sbb
pop
int3
aas
test
aad
js
sbbl
sub
jae
mov
push
fmuls
mov
jnp
mov
sub
xchg
xchg
insl
lret
push
xor
xor
insb
mov
scas
imul
pop
pop
or
arpl
mov
xor
fadds
mov
sub
in
lods
insl
jne
je
pop
test
fisubrs
fcmovne
in
push
sub
jp
fildll
popa
cmp
cmp
imul
mov
sbb
sub
sti
mov
into
add
mov
or
sbb
daa
push
sbb
jp
fldt
fwait
sahf
jmp
pop
and
xor
std
aaa
jl
mov
sti
stos
lock
xchg
js
sub
push
movsb
popf
lods
pop
inc
arpl
jl
scas
xchg
lahf
test
xchg
push
sub
or
dec
test
xchg
scas
das
data16
in
outsb
mov
push
lods
popl
inc
push
pop
js
out
adc
dec
lea
and
and
stos
jb
das
daa
or
pushf
addr16
hlt
stos
js
es
loop
les
or
lea
or
push
movsl
push
cmp
lods
adc
in
int3
imul
or
fsubrs
cltd
jns
cmp
mov
dec
pushf
mov
jmp
lods
cmc
sbb
push
and
fsubr
and
int
sti
pushf
mov
mov
shll
fildl
mov
pusha
dec
scas
mov
push
mov
jae
stos
movsb
lods
push
and
pop
in
movsl
into
xchg
sub
ret
int
and
xchg
fmul
xchg
sbb
lahf
mov
mov
imul
lcall
gs
insb
out
rcr
xchg
push
push
out
fwait
or
and
sti
mov
ljmp
jmp
jmp
jl
jo
decl
mov
xchg
inc
les
or
out
imul
shrl
test
sarl
push
push
mov
pop
lods
pop
insb
cmp
sub
test
mov
mov
jmp
inc
popl
xchg
mov
test
xorb
subl
mov
jge
lods
lcall
shrl
imulb
lods
fsubrs
fistps
sub
ljmp
mov
js
orl
lods
in
cmp
lods
leave
insl
dec
inc
pop
dec
pop
mov
sbb
imul
mov
sbb
into
cmp
pop
mov
insb
mov
xchg
daa
insl
inc
ja
stos
sub
insb
pop
popa
in
rclb
xor
sub
sbb
or
adc
mov
std
sub
loop
xchg
cmp
jbe
test
insb
mov
pushf
sub
pop
and
orl
mov
sbb
pop
pop
repz
adc
inc
loop
add
mov
repz
mov
lea
adcb
adc
imul
aas
ljmp
lea
pop
push
sub
push
sub
in
mov
in
lods
aam
sub
cltd
sbb
roll
fcmovb
daa
add
mov
and
xchg
pop
scas
std
sub
daa
mov
or
sbb
xor
dec
aaa
jb
push
inc
sub
pop
repnz
imul
mov
stos
mov
mov
and
jecxz
pop
sbbb
stos
and
in
jl
lods
aam
test
xchg
mov
in
inc
fwait
mov
stos
pushf
std
scas
mov
jecxz
cmpb
sub
stos
jnp
idivl
imul
in
add
movsb
shrb
decl
js
test
lret
stos
pop
stos
dec
jecxz
xor
and
or
push
xchg
movsb
pushaw
sub
addb
add
stos
dec
pop
xchg
sub
sub
imul
stos
jmp
or
cmp
pop
dec
cli
aad
mov
or
push
xchg
or
in
mov
jae
daa
or
pop
push
inc
or
mov
test
mov
jmp
add
adc
ljmp
int3
push
sub
je
or
inc
and
jl
cld
or
lahf
xrelease
sub
cmpsb
sub
mov
mov
insl
fisttpl
mov
mov
pop
gs
imul
stos
in
sbb
shll
fists
mov
cmp
stos
fldpi
es
mov
or
in
nop
ficoml
xchg
sub
sbb
in
outsl
jecxz
lods
sbb
cmpsl
in
xchg
mov
js
rcl
push
mov
cmpsl
js
rcrl
cmp
inc
lock
xchg
ret
and
mov
sbb
push
jmp
imul
daa
mov
outsl
es
or
xchg
dec
cmp
ljmp
and
mov
adc
or
sbb
inc
sub
hlt
jmp
cmp
leave
in
jb
lahf
and
sub
push
mov
nop
mov
sbb
mov
sub
sahf
pop
lods
add
insb
sarl
pop
pusha
stos
add
mov
jae
adc
inc
ljmp
xchg
sub
sarl
mov
xchg
shrb
stc
nop
daa
out
repnz
aas
in
dec
cltd
shrl
jmp
leave
mov
sub
loopne
mov
push
lahf
lahf
cwtl
jg
outsb
xor
xchg
lods
arpl
popf
dec
sub
mov
jnp
gs
in
daa
mov
push
loopne
out
dec
andl
mov
jmp
xchg
add
push
lds
sub
cmpsb
lea
push
iret
scas
imulb
or
push
stos
stc
pop
mov
cmp
sti
add
or
inc
jg
push
les
pop
lcall
insb
mov
or
scas
sbb
enter
mov
mov
ljmp
dec
sbb
or
in
or
in
subb
push
mov
xchg
push
push
mov
stos
fxch
cmp
jmp
or
dec
xchg
js
sub
mov
cmp
dec
xor
lods
add
pop
addb
xchg
mov
and
mov
cmp
addb
push
jmp
mov
push
imul
cmpsl
xchg
inc
std
sub
sub
in
rcll
push
xchg
pop
xchg
and
shrb
mov
sub
mov
or
lods
mov
xchg
lret
jmp
mov
test
lahf
lods
push
dec
mov
mov
cmc
lea
mov
nop
sub
cli
jae
xor
mov
mov
cmpb
cmpsb
adc
loopne
sti
aaa
lret
xlat
xor
popa
push
jmp
ljmp
xchg
add
das
clc
xor
push
stc
mov
and
movsl
jmp
adc
sub
in
and
imul
cli
loop
push
popf
xchg
jnp
call
fwait
mov
js
lods
mov
pop
xchg
and
or
sub
and
les
pop
adc
sub
sub
push
inc
push
lret
cwtl
sub
xor
lods
mov
lret
and
or
mov
stos
pop
aas
push
xchg
mov
mov
out
and
jmp
in
jecxz
push
and
mov
mov
xchg
xor
in
inc
repz
or
xor
push
imul
mov
sbb
mov
sbb
scas
mov
es
lods
hlt
fnstcw
jo
mov
les
push
cmpl
aas
aas
jmp
mov
push
fwait
push
xor
rol
sub
jmp
lea
or
aas
add
addr16
dec
jns
jno
mov
lods
and
loopne
jp
xlat
push
xorl
mov
and
imul
xchg
lock
icebp
mov
das
popa
popf
or
test
imul
cmp
ljmp
aaa
dec
pop
mov
sub
cmpsb
es
insb
faddp
adc
cmp
sahf
icebp
add
fistpl
mov
sbb
sub
jmp
mov
push
std
stos
fwait
daa
pusha
ljmp
scas
xchg
cmp
sub
std
mov
aas
ret
adc
mov
in
fnstsw
dec
push
jmp
insb
lret
pop
cld
stos
outsb
jnp
xor
adc
adc
xchg
sub
call
xor
pop
rolb
sub
xchg
es
ja
cltd
addl
and
jmp
repz
sbb
mov
aaa
ja
test
movsl
sbb
push
je
xchg
test
das
fldcw
inc
xor
xchg
sbb
xchg
ds
aaa
stos
cmp
inc
scas
pop
xchg
push
sub
or
rcrl
inc
aaa
data16
push
xchg
scas
sbb
repz
out
add
mov
sub
fsubrl
leave
lea
gs
pushf
add
jmp
xchg
add
insl
inc
and
push
adcb
jmp
imul
lods
aas
pop
insb
sbb
rcll
sub
pop
ss
cmp
cmpsb
pop
popa
rcll
in
fnstenv
daa
cmpsb
int
push
aas
sub
push
sub
sub
daa
lods
in
insb
xchg
xchg
xchg
mov
mov
xor
dec
cmp
or
sub
fucomi
mov
and
push
daa
sub
ret
nop
xchg
loopne
mov
xchg
adc
addl
push
jmp
add
xor
aas
jg
aad
adc
rcl
mov
mov
pushf
sarb
cld
push
movsb
leave
sub
fnstcw
pop
aad
shll
jg
and
adc
mov
xchg
push
imulb
fldenv
xor
mov
sub
sub
sub
nop
pop
pop
push
mov
sbb
mov
push
lods
sub
mov
mov
sarl
sti
push
mov
mov
jnp
test
imul
xor
jg
sar
sub
roll
in
cmc
daa
sub
imul
loopne
sbb
pop
pop
mov
jae
stos
inc
popa
sbb
jo
or
fstpl
imul
lods
mov
cmp
mov
insb
mov
add
jb
fldt
push
fldcw
mov
xchg
xchg
das
fstpt
xchg
in
stos
lea
mov
mov
mov
cli
fistps
jp
scas
icebp
xchg
lods
rcrl
mov
loop
sbbb
add
test
cmp
or
movsb
or
les
ss
mov
mov
cmp
and
movsb
xor
lea
xchg
xor
sub
sub
js
rcr
xchg
cmc
xlat
sbb
int3
rorl
add
call
jmp
jp
inc
mov
lea
or
push
sub
mov
stos
mov
lock
lods
pop
jg
xor
mov
aad
adc
mov
cmp
sbb
xchg
data16
movsb
add
adc
mov
xchg
push
pop
adc
orl
xchg
cwtl
aas
sub
sbb
or
mov
mov
jmp
scas
in
mov
and
lret
mov
daa
pop
daa
addl
loope
sub
sub
mov
xchg
adc
cmp
sub
sbb
sub
stos
loopne
lret
imul
bound
scas
loop
pushf
pop
mov
gs
popf
pushf
aas
and
daa
sub
jp
jmp
mov
imul
inc
in
pop
daa
das
mov
std
inc
mov
mov
mov
imul
pusha
lods
sbb
insl
push
jns
pop
ja
inc
mov
jmp
and
jmp
stc
pop
mov
stos
orb
jno
fwait
or
sub
mov
mov
xor
scas
xor
ljmp
iret
mov
sub
js
mov
xchg
lods
loopne
adc
inc
gs
jmp
add
inc
test
shll
xchg
jmp
mov
pop
xchg
lods
pop
xchg
xchg
push
hlt
in
add
es
fwait
xor
imul
insl
jmp
jmp
pushf
sbb
jp
push
xchg
scas
fwait
nop
xchg
cmpsl
lret
movsl
sub
aas
jmp
push
dec
popa
pushf
cmp
iret
adc
and
cmc
lret
stos
popa
stos
jl
mov
nop
mov
push
das
aas
outsb
jmp
es
cmp
mov
xchg
cmp
ds
sbb
add
push
xchg
orl
add
dec
loopne
mov
daa
test
jne
sub
popl
inc
insb
dec
andb
arpl
mov
add
jmp
lea
cmpsb
std
mov
pop
sub
rorl
cmp
sahf
insb
arpl
test
daa
sub
sbb
adc
pushf
ljmp
inc
cwtl
leave
lods
sub
jo
xchg
repz
xor
sahf
add
fldcw
aas
or
movsl
cmp
imul
mov
or
pop
cmp
sub
repz
aad
cmpsl
mov
ss
sbb
mov
xor
or
and
sbb
loopne
scas
pop
jp
push
cmpl
xchg
push
add
arpl
dec
pushf
and
lods
mov
mov
pop
fwait
mov
movsb
xchg
or
sub
fmulp
aaa
lret
addl
imul
test
cmp
mov
sub
std
aam
cmp
and
mov
fs
adc
mov
jmp
imul
sub
enter
ljmp
jp
xchg
and
mov
aas
fildl
pop
sub
scas
sub
sbb
dec
sub
cmpsb
std
cmp
mov
sub
add
movsl
enter
adcl
imul
mov
and
loopne
mov
jmp
jo
xor
sbb
test
in
outsb
lods
or
adc
mov
cmp
int
jmp
in
jge
and
add
push
cmc
xchg
pop
daa
cs
cmp
and
inc
mov
icebp
cmp
lods
pushf
sbb
movsb
mov
daa
por
aaa
movsb
add
or
aam
mov
xchg
test
mov
xchg
out
insb
push
sbb
mov
ss
jmp
push
push
xchg
aam
rolb
data16
test
push
roll
sbb
mov
mov
cwtl
in
push
xchg
mov
sahf
inc
ss
adc
sbbb
add
xchg
cmp
mov
scas
cmp
push
cmp
jo
cmpsb
jno
xlat
dec
js
sbbb
sub
adc
lcall
xchg
bound
push
adc
push
es
cs
imul
add
sbb
xlat
and
pusha
shll
adc
sbb
repz
pusha
repz
test
inc
repnz
scas
test
jmp
stos
xchg
pop
es
lcall
mov
ljmp
xchg
mov
sub
loop
testb
inc
mov
mov
fwait
lcall
sub
xchg
cli
cld
test
xchg
pop
mov
sub
jmp
jmp
sub
cwtl
loopne
mov
lods
ss
iret
mov
cmp
and
jmp
shl
xchg
cmp
shll
push
cmp
sub
adc
xchg
mov
aaa
sti
adc
dec
in
lods
and
dec
mov
jnp
mov
jo
lock
shrl
sbb
sub
adc
test
adc
ds
or
cmc
inc
cs
sti
imul
ds
sbb
nop
je
sub
stos
or
data16
std
sbb
mov
push
fcom
mov
test
fucom
mov
rorb
mov
cmpb
mov
pop
adc
push
mov
sbb
or
mov
nop
sub
arpl
inc
adc
xorl
pop
or
mov
aas
sbb
stc
xchg
xchg
cltd
dec
push
xchg
popw
jmp
or
punpcklwd
sub
xchg
sub
lcall
aam
lods
iret
sub
test
or
loop
xor
sub
or
jmp
mov
daa
sbb
xchg
and
xchg
xor
daa
add
push
pop
lods
out
push
xchg
stos
cmpsb
jmp
sbbl
movsb
aad
rcrl
pop
sbb
insl
mov
mov
pop
leave
aam
xor
jmp
js
fstps
adc
stos
ret
jmp
sub
xchg
cmp
mov
inc
jmp
pop
dec
or
loop
add
xchg
push
shll
sbb
push
xchg
push
std
sbb
xor
pop
into
or
inc
into
aad
inc
push
addr16
bndldx
outsb
iret
aaa
dec
daa
xor
cmp
add
es
xorl
imul
push
mov
fwait
xor
fstl
insl
jmp
xchg
cmc
mov
mov
xor
stc
or
mov
std
fwait
mov
lret
or
cmpsl
push
flds
aam
js
jmp
or
sahf
xchg
push
cmc
sbb
mov
fdivrl
fnstcw
dec
sub
mov
and
inc
ds
or
shrl
push
imul
lods
in
test
jmp
lods
nop
lods
xor
lahf
imul
out
lods
mov
fsts
jmp
arpl
sbbl
fisubrl
push
aaa
sub
fldcw
adc
incb
jp
xor
adc
pop
stos
icebp
jmp
sbb
cltd
pop
or
cs
adc
out
sbb
add
daa
mov
sub
xchg
xchg
dec
mov
cmp
pop
into
out
sub
sbb
mov
push
mov
shr
cld
sub
test
xchg
and
rcrl
test
add
xchg
aaa
ljmp
sbb
rorl
and
xor
lahf
subl
xor
ss
cmp
fwait
xor
sub
add
sub
notl
mov
push
icebp
insb
gs
ljmp
das
mov
jle
jno
rcll
dec
imul
dec
jmp
adc
adc
test
and
subb
and
leave
adc
adc
movb
mov
jmp
add
sahf
aaa
adc
fldenv
fldt
sbb
imul
jl
test
jae
jns
mov
xor
push
xchg
or
xchg
and
shrb
mulps
pop
cld
jl
dec
mov
sub
fstpt
mov
pushl
jns
adc
js
scas
or
sbb
sbbb
andl
push
mov
in
lret
mov
imul
mov
cmc
mov
cld
popf
cmp
popa
mov
in
gs
pop
scas
push
inc
orl
pop
and
mov
pop
xchg
insb
jmp
inc
mov
xchg
aaa
mov
lock
les
imul
imul
sbb
cs
int3
mov
mov
mov
es
add
mov
lods
hlt
push
aaa
or
or
xchg
lea
fmulp
lcall
push
lods
decb
jmp
or
cmpsb
orb
mov
movsb
mov
test
movsb
pop
test
cmp
push
idivb
and
jmp
xchg
shrl
xchg
lock
mov
flds
pushf
ljmp
mov
cmp
cmp
lahf
cmp
and
mov
xor
cmpsb
sub
loop
adc
pushf
mov
lods
ret
lods
out
xchg
mov
iret
stc
stc
or
adc
mov
or
lods
stc
mov
mov
and
addr16
in
push
jnp
mov
imul
sub
cmovns
push
or
ss
cmp
xchg
mov
push
loopne
jmp
ret
scas
and
insb
dec
daa
push
sub
jmp
xor
mov
mov
std
xor
sub
adc
cmp
mov
scas
mov
jnp
jnp
jnp
daa
and
stc
fidivrl
scas
lret
scas
sbb
mov
lahf
loop
sbb
repz
dec
loop
lock
scas
jne
lahf
xchg
cmpb
insl
add
daa
inc
rolb
dec
inc
std
aam
mov
loop
sti
cmp
f2xm1
push
or
scas
mov
rcll
arpl
cmpsl
shrb
cmp
daa
and
xchg
les
mov
mov
gs
out
add
repz
rcrl
shll
xchg
lods
test
xchg
jno
in
mov
mov
jl
and
or
popl
test
es
in
mov
xchg
jb
add
and
dec
xchg
xchg
xchg
loopne
mov
push
movsl
es
dec
popa
sub
push
leave
mov
and
cmpl
or
popa
mov
movsb
or
mov
loopne
imul
imul
scas
mov
lods
int3
in
cli
mov
lcall
mov
xchg
jge
add
jne
pop
repz
pusha
mov
es
jmp
mov
cmp
or
sub
or
pop
xchg
mov
psrad
fmull
aas
test
into
inc
push
add
dec
ljmp
push
push
xchg
fwait
mov
pop
jmp
lods
add
imul
mov
and
xor
fldenv
in
nop
mov
inc
inc
or
les
mov
loopne
mov
mov
repz
ds
sbb
xor
scas
jle
test
sub
adc
ss
add
inc
ss
sbb
or
imul
xorl
lea
imul
and
mov
and
mov
xlat
and
shll
sbb
jle
ss
xchg
mov
mov
or
inc
xchg
mov
mov
lcall
pop
sahf
or
sbb
daa
stos
repz
mov
cli
fldcw
mov
ret
mov
and
sub
lods
aas
sbb
aaa
dec
sbb
loop
fldt
jge
cwtl
pop
push
adcb
add
dec
cmp
aas
in
sbb
mov
stc
mov
incb
cmpsb
imull
mov
xchg
jle
pop
es
push
lahf
sub
push
or
rcll
mull
sarl
cmp
mov
dec
push
imul
inc
pop
and
sti
scas
adc
cmp
dec
pop
popa
mov
cli
adc
pop
xchg
pop
jmp
daa
fistl
mov
mov
fsubr
mov
into
icebp
add
mov
sbb
cld
rcrl
xlat
cmp
push
mov
scas
inc
mov
mov
test
rcrb
mov
je
lds
jo
addr16
fucomip
out
and
imul
stc
lds
loop
shll
sahf
pop
fiadds
lcall
and
sbb
stos
add
std
lods
xchg
cmp
jno
sahf
lcall
cmp
mov
push
das
cmp
mov
sub
adc
mov
loop
popf
dec
mov
ja
xchg
mov
add
cwtl
into
lret
mov
jmp
cltd
mov
mov
push
scas
movsb
movsl
pop
mov
cltd
add
es
imul
pop
cld
lods
mov
fistl
adc
hlt
xchg
or
adc
xor
ljmp
data16
jmp
into
sti
sbb
mov
pushf
sbb
adc
xchg
cmp
pop
outsb
rep
cmp
sub
xchg
adcl
inc
cmp
and
cmp
xchg
inc
or
adc
xchg
inc
add
adc
mov
popa
xor
loop
pop
or
orl
and
lahf
xchg
or
and
adc
fimuls
and
sub
fstps
sahf
cmp
jl
cld
cmpsb
loop
repz
notb
mov
adcb
repz
repz
sbbb
or
sarl
cmp
push
xor
push
mov
jmp
sub
imul
lret
jl
cmpsb
sbb
cld
inc
dec
sti
xchg
adc
pop
push
mov
daa
cmp
mov
sub
push
xchg
repz
or
pcmpgtw
xchg
mov
sbb
pushf
xchg
mov
aas
addb
cmc
and
inc
test
stos
loop
ljmp
xchg
fistl
mov
sbb
mov
xchg
sbbb
push
inc
gs
fsubrs
mov
add
pop
sub
addr16
adc
fsts
aaa
add
fwait
stos
daa
add
add
in
gs
in
int3
imul
and
sub
xchg
flds
lea
movsl
push
ret
stc
and
fnstenv
or
addr16
mov
and
scas
mov
lahf
xor
lods
aad
movsb
insb
popl
int3
and
adc
cmp
arpl
jae
adc
rcr
mov
or
popf
cwtl
std
shl
shrl
rorl
mov
xlat
mov
das
mov
pop
repz
test
push
pushf
mov
sub
stc
cmp
mov
xchg
mov
adc
aas
adc
lods
adc
xchg
jecxz
jecxz
adc
fldenv
int
mov
cmp
push
jb
testl
inc
in
jbe
daa
lcall
xchg
xor
aaa
mov
cltd
std
imul
sahf
sub
sub
push
jg
and
adc
clc
mov
daa
inc
xchg
negl
xor
or
sub
mov
adc
mov
iret
popf
sub
in
jnp
adc
std
mov
mov
and
stc
int
mov
push
cs
push
sti
adc
cmp
mov
rolb
lcall
pop
and
sbbb
mov
stos
insb
in
lcall
mov
dec
xor
les
or
jmp
ljmp
jns
jns
jno
dec
int3
ficoml
sub
xchg
and
jmp
stos
xchg
adc
mov
or
cltd
fucomi
jecxz
or
shll
push
out
adc
mov
or
or
mov
loopne
imul
mov
jmp
sahf
fwait
in
imul
jmp
movsb
aas
movsb
enter
mov
jns
sub
aaa
jg
push
aam
sub
mov
popa
jp
push
sar
jmp
adc
shlb
fistps
outsb
lea
xchg
mov
or
mov
pop
lods
or
lock
push
stos
add
hlt
sub
push
xchg
mov
ljmp
xchg
cmp
lods
mov
cmp
in
cltd
std
mov
les
daa
cmpsb
imul
mov
daa
mov
icebp
inc
lahf
imul
and
dec
mov
lods
mov
sub
aaa
ret
xchg
xchg
jne
and
jmp
mov
or
ljmp
sub
add
fnstsw
inc
sti
scas
xchg
xchg
lahf
addl
push
xor
push
push
adc
add
lock
cmp
jmp
sti
and
and
jg
mov
push
lods
push
sbb
frstor
inc
add
xchg
stos
mov
mov
and
sub
xchg
lock
push
arpl
sub
aaa
add
mov
and
loopne
pop
mov
mov
pusha
push
ret
inc
adc
xchg
cltd
xchg
stos
mov
movsb
incb
aaa
xchg
cltd
leave
push
push
loopne
rorl
test
pop
ljmp
icebp
mov
iret
jo
fldt
daa
or
push
mov
xor
mov
xor
push
push
gs
aad
stos
mov
insb
stos
xor
push
and
cmp
xor
push
add
rcrb
or
sub
nop
inc
fmull
and
jmp
cmp
pop
xchg
add
mov
push
mov
xchg
mov
dec
ljmp
stos
gs
lahf
das
and
shlb
sub
sti
mov
fistpl
fwait
cmp
and
mov
add
lcall
and
inc
lods
sub
arpl
xchg
lods
mov
xchg
mov
pop
pop
imul
jle
mov
rcrl
mov
imul
sbb
xor
fstps
stos
jecxz
pushl
rcl
sarl
xchg
sbb
stos
xor
xor
cmpsb
fiaddl
fstps
mov
and
pop
popa
mov
aaa
orb
cs
fnstenv
xchg
aad
cmovp
dec
lea
xchg
nop
dec
push
movsb
or
test
rcll
mov
xchg
out
lock
xchg
lods
sbb
scas
repz
mov
movsb
mov
loopne
mov
xor
and
dec
and
ljmp
fistl
out
and
mov
inc
sub
dec
in
adcb
into
arpl
mov
jmp
adc
cmp
cmpsb
sbbl
or
or
push
sub
and
jmp
js
dec
mov
pop
jge
aad
ljmp
sti
mov
mov
add
mov
cli
out
sub
adc
and
les
adc
nop
fistl
hlt
sub
mov
mov
cmp
insl
inc
lahf
push
mov
adc
mov
movsb
sti
add
cmp
mov
aaa
sbb
sub
pop
into
jmp
xchg
xchg
std
dec
aam
jmp
fstl
pushf
mov
and
and
inc
push
mov
ja
adc
clc
in
sti
xor
mov
push
imul
daa
push
sub
ret
mov
and
dec
jo
sbb
mov
xchg
lods
xchg
ss
mov
mov
int3
xchg
ds
xor
mov
xchg
sub
cmp
push
xchg
sbb
lods
pop
push
stos
pop
or
sti
xchg
xlat
lahf
add
pop
inc
test
clc
outsb
addr16
lods
push
movsl
gs
imul
das
cltd
scas
mov
add
clc
test
cmp
jg
push
xor
loopne
test
ret
xchg
aad
xchg
lahf
cmpsl
jl
cmp
je
mov
and
icebp
addl
imul
pop
dec
jae
test
jmp
fldt
repnz
and
xchg
pop
sti
xchg
scas
xlat
neg
inc
mov
stc
adc
mov
lret
data16
pop
or
stos
les
inc
clc
mov
mov
mov
movsb
dec
add
mov
add
cmpsb
jmp
loope
and
cmpsl
xchg
out
adc
repz
mov
xchg
pop
sbb
mov
mov
push
repz
jae
call
xchg
pop
iret
xor
lods
xchg
and
mov
inc
popf
scas
lods
in
stos
pop
lahf
lahf
lea
es
dec
add
xor
pusha
lock
pop
adc
mov
mov
ss
xchg
and
aam
addl
pop
lret
sub
jne
rorl
shll
mov
cltd
dec
sub
or
out
sti
mov
mov
ds
xor
sub
dec
xor
mov
dec
sbbb
add
jmp
js
or
push
and
or
shl
mov
mov
lea
or
jmp
imul
stos
enter
mov
mov
test
push
leave
pop
test
mov
stc
mov
insl
icebp
adc
rcrl
jl
jbe
mov
cwtd
out
adc
cmpsb
sbb
mov
sub
mov
cmpb
iret
cltd
add
dec
daa
mov
ja
mov
stc
fwait
xchg
aam
ljmp
jl
and
cwtl
popl
add
mov
stc
sbb
jae
rep
jl
cmp
roll
std
push
out
ja
int3
fld
loop
cmpsb
dec
and
xchg
int3
stos
xchg
adc
mov
push
add
sbb
in
sub
out
loop,pn
push
xchg
dec
addl
xchg
cmpb
mov
sbb
add
stc
jbe
es
out
add
dec
mov
mov
scas
jo
iret
jp
idivl
out
rcrl
repnz
sbb
and
xchg
jno
xor
jbe
xor
scas
xchg
hlt
adc
scas
sub
pop
call
mov
mov
shl
scas
sub
shr
dec
or
mov
fwait
lret
xchg
adc
mov
and
lock
cltd
scas
lea
mov
push
or
out
sbb
mov
outsb
push
outsb
in
mov
mov
dec
add
mov
mov
fwait
cmp
loopne
orb
cs
stc
movsb
mov
repz
dec
cmp
add
pop
stc
adc
mov
jmp
cmc
inc
test
sbb
mov
pusha
addr16
flds
xchg
sbb
dec
dec
add
mov
ds
xchg
jmp
adc
mov
ds
jo
lcall
cs
fnstenv
stc
mov
and
in
stos
dec
pop
inc
sahf
pusha
or
notb
add
xchg
jne
scas
mov
cmp
mov
pop
push
sub
or
int3
ss
mov
loop
cmp
clc
mov
mov
stos
xchg
in
pop
mov
pop
lahf
addr16
decl
dec
xor
aad
cmp
xor
test
push
and
cmp
movd
icebp
leave
outsb
sarl
mov
movsl
das
scas
or
add
int3
xchg
stc
add
jno
dec
stos
jae
xor
or
xor
sbb
stc
xchg
inc
add
lret
cmp
adcl
data16
sub
or
xor
mov
out
enter
cs
pop
xchg
mov
add
hlt
imul
adc
xor
into
nop
add
lret
xorl
jg
and
add
or
in
stc
jmp
xchg
push
cmp
ds
sbb
popf
stc
mov
test
cmpxchg8b
sub
mov
sbb
mov
sarl
jl
lods
and
mov
mov
cmp
add
dec
daa
mov
xchg
add
mov
repz
jl
mov
cmc
and
loop
push
mov
orb
aad
sub
aaa
pop
add
lret
daa
das
imul
in
scas
mov
sbb
inc
mov
push
jle
std
or
adcl
pop
orl
popa
sub
sub
stc
lcall
push
xor
sbb
mov
push
mov
fnstenv
fwait
jbe
iret
or
mov
or
sahf
mov
or
mov
icebp
mov
inc
orb
xchg
sbb
js
call
mov
jp
jecxz
sahf
xchg
adc
or
clc
add
mov
in
ljmp
mov
loope
xor
lea
sbb
pop
sar
mov
lcall
or
test
lahf
roll
repnz
mov
cmpsb
popa
adc
scas
mov
outsl
xchg
movsb
cli
lods
cmp
iret
fidivs
repz
xor
movsl
add
sbb
dec
mov
mov
mov
push
cmp
or
add
bnd
mov
mov
dec
scas
ja
sub
xchg
adcb
fistpll
ja
iret
lcall
push
icebp
cwtl
repz
divb
aad
ljmp
xchg
fisttpl
shl
mov
test
in
iret
cli
mov
mov
xor
and
into
jbe
or
and
and
add
aaa
out
das
jbe
ror
mov
and
add
icebp
add
xchg
stc
mov
andl
or
stc
and
in
inc
ss
in
scas
cmp
roll
adc
roll
fnstenv
rorb
sbb
mov
push
adc
js
ds
stc
hlt
inc
fnstenv
sbb
orb
mov
add
aas
sbb
sahf
lret
lahf
sbb
lods
and
xchg
ljmp
test
insl
mov
xchg
mov
jb
aam
mov
jnp
fisubl
fstps
or
hlt
ficoml
lahf
clc
jo
mov
repnz
iret
push
mov
mov
pop
aas
pop
sub
and
divb
adc
add
xchg
add
and
or
xor
pop
adc
ret
lods
clc
mov
and
popf
lret
xchg
loopne
sbbl
aam
xchg
mov
pop
xchg
add
test
int3
repz
stc
mov
shll
xchg
leave
fnstenv
int
aaa
xchg
push
jl
mov
ljmp
mov
rcll
adc
rcl
lahf
xor
movsb
xchg
popa
lods
dec
ret
popf
cwtl
mov
xlat
cwtl
int3
test
mov
xchg
arpl
push
mov
cmp
test
mov
push
or
pop
shrl
push
loop
cmp
data16
mov
mov
test
mov
mov
push
loopne
mov
sarl
lahf
xchg
push
loope
lcall
fwait
jmp
nop
add
ds
push
stc
movsl
orl
ret
cmpb
mov
cmp
xchg
andb
mov
ja
mov
xor
lods
movsb
mov
and
divb
push
stos
mov
add
sti
movsl
push
push
aad
stc
mov
loop
jbe
and
mov
xor
pop
stos
push
es
cs
add
repnz
cltd
mov
scas
mov
lock
out
in
lds
mov
popa
sbb
adcb
adcl
sub
orb
jbe
sbb
sbb
dec
sarl
fdivrp
subb
cmc
addb
cltd
mov
loopne
mov
stc
inc
cmpsl
repnz
cmc
ja
mov
out
pop
loop
loope
lret
push
daa
das
lods
mov
push
mov
addr16
adc
inc
dec
pop
stos
pop
mov
cmp
js
cmpsb
dec
in
push
inc
les
stos
cmp
or
cmp
js
jns
test
push
and
inc
xchg
xor
jae
stc
mov
and
xchg
cmp
add
movsl
push
test
xchg
shr
ljmp
mov
xchg
rcll
in
jns
in
mov
test
mov
push
scas
mov
loop
sub
mov
sub
and
push
decl
lcall
mov
inc
xorb
lods
movsl
loopne
dec
sahf
insl
ljmp
pop
mov
outsb
hlt
ds
lock
icebp
xchg
xorb
dec
mov
jmp
xchg
sub
nop
xorb
lds
jno
cld
jle,pt
aam
mov
xor
rcr
rcll
repnz
jg
cltd
mov
cmp
loope
andb
xchg
loop
loopne
mov
mov
lds
adc
dec
push
cmp
ds
lret
andl
add
mov
mov
icebp
aam
dec
aas
and
adcb
aaa
pop
add
inc
jecxz
sub
sahf
inc
ret
push
and
andb
mov
rcll
mov
out
lods
cmp
mov
xchg
xchg
add
and
gs
or
xchg
cli
ret
push
mov
or
ljmp
xchg
add
cmpsb
ljmp
ds
lret
add
sbb
scas
mov
orl
mov
inc
outsl
orl
sbb
ja
aas
cwtl
mov
add
div
add
mov
testl
fisttpl
mov
or
mov
or
mov
test
or
or
or
andl
insb
in
mov
ss
dec
icebp
add
mov
cmc
sbb
adc
or
out
fstps
xor
mov
loopne
out
sbb
mov
push
mov
ljmp
or
ss
popf
add
rcll
iret
mov
popa
in
push
shll
jnp
sbb
mov
pop
push
aaa
mov
and
lcall
nop
add
cmc
jno
repnz
or
add
in
pop
aad
movd
iret
inc
sub
js
loopw
pop
push
mov
mov
adc
lea
aaa
into
stc
jecxz
loop
sti
mov
in
xor
iret
sbb
xchg
addb
fwait
xor
lcall
mov
cmp
add
cmp
jns
mov
push
mov
popa
cmpsl
and
jg
stos
cmpsl
jmp
xchg
test
aaa
xchg
dec
mov
cmp
negl
mov
mov
pop
mov
cltd
js
mov
adc
xchg
outsl
inc
mov
mov
jno
xchg
cmp
leave
aad
sub
xchg
leave
xchg
iret
and
js
in
ret
andl
rcll
jb
mov
mov
nop
mov
lret
push
popf
inc
into
scas
aaa
add
test
es
js
mov
or
stc
aaa
icebp
mov
fnstcw
push
fldl
ret
js
adc
add
lahf
mov
pop
movsl
mov
repnz
xchg
mov
pop
cmp
mov
sahf
daa
mov
cmp
jp
mov
and
push
scas
and
mov
sub
roll
mov
push
fxch
push
push
mov
icebp
jge
xchg
ja
in
dec
roll
or
fwait
xor
push
sti
lahf
add
sahf
xchg
and
add
ljmp
pop
adc
sub
dec
cwtl
cmc
adc
out
adcl
mov
mov
xor
mov
pop
and
cmp
push
movb
xchg
pop
push
sbb
xchg
addb
jle
repnz
cmp
mov
add
addl
mov
clc
sbb
xchg
push
add
adc
mov
mov
ljmp
push
test
lea
cmp
test
add
in
and
scas
sbb
mov
call
push
jp
mov
mov
mov
test
mov
ds
add
mov
aaa
pop
cmpsl
mov
add
fildll
cmp
sbb
jnp
add
sti
stos
fidivl
jmp
sbb
push
mov
ds
out
daa
push
les
daa
push
lcall
inc
sbb
sub
loop
aaa
xor
roll
xlat
add
mov
hlt
push
andl
lods
inc
xchg
stc
xchg
mov
cmp
cmp
and
test
into
js
inc
mov
popf
jno
out
sub
loop
lcall
hlt
adc
aad
es
and
inc
xchg
pop
jmp
lahf
mov
scas
test
movsb
sbb
or
mov
jmp
popa
cltd
imul
cmp
imul
mov
xchg
aam
xor
fdivrs
aam
cmpl
insl
lcall
add
je
test
ret
lret
add
orl
add
jl
jle
aad
loop
jb
cmp
sub
outsb
addb
cmp
pop
adc
cwtl
mov
iret
lods
add
mov
stc
and
sbb
adc
addl
bound
mov
add
hlt
jl
jnp
mov
roll
mov
stos
test
lahf
andl
sub
mov
loopne
adcl
mov
mov
mov
test
cmpsl
lcall
hlt
dec
nop
loopne
lret
push
sub
mov
and
mov
rcrl
xchg
or
push
and
xchg
mov
out
out
fwait
and
mov
cmp
js
mov
clc
int3
mov
enter
or
clc
jae
ds
pop
mov
cli
cmp
lret
xor
pop
xchg
imul
icebp
mov
repz
je
test
rorl
hlt
mov
xor
mov
repz
mov
inc
pushf
push
sar
and
js
cltd
xor
sub
orl
sub
js
in
mov
lret
mov
test
add
repnz
iret
hlt
stc
adc
popa
mov
mov
scas
sti
sbb
mov
adc
inc
out
xchg
fisttpll
adc
cmp
cmc
sub
lcall
cmpsb
cmp
xchg
xchg
inc
sub
mov
inc
push
icebp
roll
vpand
push
mov
cmpl
cmpb
stc
mov
push
stos
mov
or
test
lcall
xor
jl
pop
clc
push
std
sbb
stc
aaa
std
out
jp
mov
xchg
sarb
popl
icebp
add
popf
int3
int
lds
stc
mov
add
mov
jnp
aas
int
mov
push
mov
adc
popa
orl
sub
mov
es
sbb
xchg
push
test
xchg
aaa
sub
jmp
enter
xchg
cmp
mov
fiaddl
or
popa
icebp
cmp
pop
rclb
stos
dec
jnp
push
sbb
test
push
and
in
or
mov
pop
mov
mov
mov
mov
rolb
mov
js
adc
scas
ret
or
repnz
mov
adc
add
aaa
fstps
and
cmpl
nop
ja
imul
mov
sbb
inc
ja
mov
cmp
jmp
lret
pop
jmp
lea
xchg
mov
pop
cli
cmc
movsb
arpl
mov
sahf
mov
mov
hlt
pop
cwtl
and
lret
or
flds
mov
mov
or
cmc
xor
jnp
popa
inc
inc
xor
inc
leave
stc
mov
push
orl
jnp
cmp
adc
mov
xorl
in
and
push
or
xchg
test
lret
add
ss
inc
push
ss
std
xchg
cmp
sub
mov
xchg
or
xchg
xchg
mov
xchg
mov
sbbl
sub
cs
orl
sub
mov
cmp
jo
or
add
add
hlt
mov
cmp
inc
lea
xor
cmp
xor
jmp
mov
lds
sbb
movl
popa
pop
mov
fsts
inc
movsb
jo
rol
mov
mov
adcl
iret
fsts
xchg
test
sbb
add
popa
repz
mov
lods
scas
xchg
add
mov
out
push
sub
adc
push
clc
pop
mov
ret
loop
dec
cmp
dec
mov
xorl
test
addr16
mov
xchg
mov
testl
or
mov
sbbl
pop
pop
shlb
pop
vshufps
mov
mov
cmpl
aam
mov
aaa
das
add
add
push
fildl
xchg
cmpsb
fstl
mov
or
stos
dec
push
push
subb
xor
mov
addl
fldt
rcrb
or
inc
mov
outsb
mov
rorb
clc
imul
xlat
popa
mov
adc
mov
xor
pop
js
testl
mov
popf
repnz
aam
fstl
pop
add
aam
and
les
stc
add
add
out
mov
sbb
aaa
dec
mov
mov
addl
rcrb
push
push
stc
cmpsb
mov
cmp
mov
cmpl
test
sahf
mov
adc
lods
les
leave
divb
mov
ljmp
lcall
repnz
xor
test
sbb
stc
sub
lea
or
mov
addl
fwait
lcall
xorl
cltd
mov
add
stc
pop
aaa
ds
aad
addb
popf
mov
push
flds
out
xchg
out
andl
mov
mov
lock
cmp
and
jne
push
dec
and
test
or
sbb
icebp
cmpl
jmp
ret
dec
sbb
mov
xlat
ret
push
stos
pop
fnstenv
xchg
movsb
stc
aaa
jno
mov
leave
xor
and
out
rol
js
dec
popa
sahf
mov
repz
pop
mov
sbb
ds
sarb
sbb
repnz
fprem1
add
push
mov
jo
or
call
mov
aad
and
xchg
or
ret
stc
xchg
shl
or
mov
xor
repz
push
rcrb
cmp
shrb
xor
mov
and
mov
popa
popa
das
pop
and
pop
jne
xchg
test
loopne
insb
mov
hlt
jge
mov
inc
inc
cs
or
out
test
dec
pop
mov
mulb
sbb
mov
jle
rclb
adc
mov
out
mov
sbb
xchg
mov
inc
mov
in
imul
jb
xchg
notb
mov
cwtl
aad
into
and
shll
or
xchg
enter
fisttps
mov
jbe
or
sti
out
jns
sbb
and
daa
ds
andb
push
cltd
mov
xchg
cld
xor
xchg
add
stc
aaa
fs
clc
or
inc
adc
js
add
hlt
mov
xchg
xchg
push
cmp
mov
xor
mov
test
loope
push
mov
mov
adcb
push
mov
push
push
cmp
test
cmpsb
inc
jnp
mov
fwait
pop
lahf
mov
xor
aaa
xchg
imull
fwait
cmc
popf
aaa
mov
sbb
mov
mov
in
pop
and
shlb
and
jns
pslld
test
adc
jo
mov
test
adc
or
hlt
icebp
sbb
out
mov
and
in
incb
inc
mov
aas
add
lcall
test
or
sub
mov
in
int
mov
bound
xor
repnz
xchg
inc
stc
add
mov
mov
sub
sbb
push
out
imul
ss
xor
sub
cltd
push
call
dec
jle
mov
icebp
sub
mov
jge
mov
js
sub
mov
mov
test
sub
mov
push
or
fstps
mov
cmp
push
adc
add
and
adc
stos
xchg
mov
xchg
mov
cmpsl
xchg
cmpsl
cmc
jp
jnp
mov
hlt
dec
cmc
or
mov
mov
icebp
cmp
mov
add
xor
mov
xor
mov
jns
cmc
xchg
mov
dec
stc
mov
sbb
div
cmpl
mov
loopne,pt
cmc
mov
lret
sbb
mov
or
inc
sbb
addl
lret
and
or
xor
test
dec
loope
sti
xor
xchg
mov
mov
cltd
cmp
adc
ja
cli
dec
mov
scas
shrl
mov
lret
into
xor
mov
ljmp
cmp
adcb
push
movsb
cmp
cmpsb
mov
cmp
push
xchg
mov
repnz
push
push
sahf
rcl
inc
fildl
in
sub
fildll
popa
push
mov
dec
ja
fldcw
shll
enter
jmp
mov
fcomps
pushf
dec
sub
xchg
inc
bnd
dec
mov
nop
push
cmpsb
out
loope
nop
repz
int
xchg
cmp
and
xchg
fwait
into
mov
jae
scas
loopne
mov
loope
scas
mov
mov
mov
popl
xchg
cmpsl
sbb
pmullw
iret
cmc
arpl
inc
mov
sub
or
stc
mov
or
stc
or
and
outsb
stc
les
adc
leave
lods
inc
inc
rcrl
stc
xchg
rcr
mov
pushf
mov
or
push
jno
test
mov
or
subb
sbbb
lods
stos
xor
push
mov
dec
into
mov
push
stc
mov
in
cwtl
rcr
add
bound
add
faddp
scas
sbb
and
cmpb
mov
into
pop
ljmp
and
adc
pop
pop
xor
cmp
cmp
mov
repnz
xor
mov
mov
js,pt
test
xchg
fcmovu
push
sbb
jmp
sbb
and
xchg
mov
mov
or
sbb
add
adc
pop
sbb
pop
sahf
inc
pushf
out
sbb
push
mov
movsb
jmp
mov
add
iret
or
sti
cmpsb
fsts
pop
ss
int
in
lds
push
lock
xchg
fidivs
add
stc
cld
mov
out
push
jbe
or
test
push
pop
mov
xchg
sbb
add
xchg
inc
cli
in
mov
sti
lcall
mov
rorl
stc
pop
frstor
push
xchg
push
push
mov
adc
mov
and
loop
mov
lods
push
mov
xlat
sbb
pop
add
shll
icebp
mov
jnp
cmp
cmpl
pop
daa
mov
cs
vmaxss
ret
push
add
stos
mov
lcall
movsl
mov
jmp
les
lcall
popa
shr
mov
cmpb
cwtl
ljmp
sbb
sbb
andl
popa
mov
ficompl
add
aaa
mov
aad
cmp
mov
addl
sbb
and
xchg
jle
arpl
jecxz
mov
jecxz
sbbl
rcrb
roll
pop
fs
aam
mov
into
jg
sub
in
daa
or
mov
roll
stc
movsb
fwait
mov
add
adc
xor
pop
mov
aad
mov
pop
iret
lea
push
mov
sbb
add
push
shrb
fldcw
and
jmp
mov
xchg
mov
out
jecxz
xchg
mov
fnstenv
cmc
push
loopne,pt
jae
mov
jmp
jle
icebp
mull
popf
mov
mov
arpl
jo
adc
lock
and
push
in
int
rcll
cmpl
add
xchg
lock
push
sarl
adc
xchg
mov
in
imul
call
mov
add
fsubs
test
xchg
mov
adc
sub
push
cmc
xchg
lahf
mov
xor
and
dec
pusha
cmp
stc
sub
repz
bound
mov
aam
lcall
jo
int
repz
scas
dec
lea
mov
push
and
cmp
mov
adc
sahf
cmp
lods
gs
mov
int
push
add
xor
outsl
stc
and
and
xchg
xchg
pop
hlt
sbb
addb
adc
aad
stc
mov
mov
in
cmpsb
lock
mov
push
lea
mov
das
fcomps
icebp
lds
and
mov
out
and
movsl
sub
in
pop
ret
sub
outsb
test
adc
lds
adc
pop
sub
xlat
mov
push
bound
popa
mov
std
mov
out
cmpb
sbb
out
adc
ljmp
xchg
mov
inc
mov
mov
hlt
add
jnp
ds
push
xchg
cmp
mov
xchg
xor
ljmp
xchg
fld
add
out
xadd
cmpsl
mull
jecxz
and
aas
jb
mov
in
rol
roll
mov
into
imul
fstpt
cmp
xor
fstpt
cmp
push
cltd
sahf
mov
dec
lahf
and
xorl
call
adc
shlb
sbb
push
mov
push
sub
or
mov
jae
cmpsl
stc
sub
loop
imul
sub
in
cmp
sub
adcl
sbb
rclb
mov
jmp
mov
xor
jbe
inc
pop
adcb
into
push
inc
lea
pop
sbb
adc
sbb
das
repnz
inc
movsb
arpl
xor
xor
mov
out
mov
push
rcll
rcrl
into
mov
out
cmp
ds
lcall
sbb
rolb
popf
mov
rcll
jne
test
repz
sahf
cmp
or
lahf
xchg
inc
sbb
add
push
dec
popf
inc
and
xchg
lods
popl
fsubrp
add
movsb
clc
adc
aaa
repnz
in
cmc
add
push
loopne
cltd
dec
loop
pop
fdivrs
nop
push
scas
sub
lahf
mov
add
xor
test
ss
fisttpll
test
test
jg
cmp
aad
test
pop
iret
test
nop
and
pop
xchg
jo
pop
mov
out
mov
xchg
cmc
andb
push
popa
subl
xlat
cwtl
bndstx
sbb
mov
lea
stc
cwtl
cmpsb
and
shlb
and
out
aas
jbe
sub
int
jle
fcomps
rolb
inc
add
or
pushf
inc
push
jle
jecxz
std
popa
xlat
jae
pop
icebp
lahf
mov
push
and
or
pop
jno
mov
pushf
and
aas
cmp
scas
xchg
push
xchg
xor
and
repnz
aaa
sbb
mov
imul
loope
arpl
in
lret
fwait
mov
mov
sti
es
sub
out
andb
mov
sub
popf
mov
and
jnp
sbb
aam
xor
ss
scas
mov
push
ds
sti
fabs
in
cmp
push
or
adcb
test
test
movsl
pushf
loop
xchg
push
pop
data16
cmp
jns
jbe
clc
mov
and
mov
mov
inc
rol
jle
fsubp
cltd
jnp
nop
jg
jmp
mov
test
ja
and
sub
cwtl
inc
ror
out
test
push
loop
gs
ret
mov
leave
xor
sub
xor
push
mov
ror
adc
xor
cmp
stc
and
popa
mov
cltd
add
xchg
cmp
in
and
cmp
js
mov
inc
push
fld
lcall
mov
iret
xor
movsb
xor
mov
mov
lods
pop
cmp
incb
aad
xor
inc
ljmp
mov
xchg
mov
orl
push
cmp
adcb
lds
sbb
mov
std
movsb
jp
mov
jb
push
idivl
in
lahf
inc
sub
adc
pop
mov
pop
xor
lds
sub
lods
fldenv
bound
rcrb
int3
xor
xchg
stc
xchg
sahf
mov
mov
rolb
add
lea
mov
je
mov
into
daa
cmp
call
jl
cmp
xchg
sub
lahf
aad
mov
xchg
rorl
or
and
mov
movsb
xor
clc
cltd
cs
in
add
mov
fistl
inc
jmp
xchg
lcall
cmp
jno
movsb
or
adc
js
mov
inc
cmp
or
ljmp
iret
in
adc
xor
ljmp
aas
es
inc
sbb
xchg
ja
push
fldcw
aas
in
rorl
xor
cmp
mov
push
lds
into
inc
and
das
dec
stc
add
fisttpl
mov
pop
aam
dec
icebp
xchg
mov
divl
xchg
aad
mov
repz
cmpl
ja
cltd
mov
pop
jnp
cmc
add
mov
push
iret
in
and
sar
sbb
inc
adc
mov
and
ds
int3
dec
lds
scas
loop
cltd
ja
add
test
in
push
ss
pop
subl
mov
mov
mov
scas
lods
lock
and
mov
sbb
adc
lret
add
jnp
jnp
loop
cli
aas
out
add
mov
jae
ds
lahf
scas
rcll
cmpl
mov
xor
push
mov
mov
icebp
insb
jne
aaa
add
pop
fld
into
ret
add
dec
iret
dec
out
push
mov
into
daa
sub
fidivl
lea
jmp
stc
xor
add
xchg
int3
xor
mov
rcll
mov
pushf
xor
and
push
mov
int3
mov
cli
shlb
adc
inc
hlt
sub
push
ljmp
push
stc
xor
xor
sub
or
and
dec
pop
rorl
cmp
xchg
cmp
cwtl
ds
pop
xchg
mov
repnz
movsl
idiv
andb
loop
xchg
cmp
call
addb
and
jge
mov
xor
mov
out
jbe
xor
test
sahf
fadd
add
aad
xor
rol
rcr
push
adc
cltd
cmp
pop
cmp
out
lods
and
or
mov
mov
cmpb
sbb
add
cmc
dec
push
movsb
clc
or
jno
loopne
ljmp
cld
aam
mov
xchg
mov
xorb
nop
jno
mov
push
xor
clc
mov
xchg
cwtl
roll
mov
repnz
inc
cmp
adc
or
cmp
xchg
adc
mov
test
mov
mov
push
hlt
mov
es
xor
dec
andl
int
out
mov
out
pop
mov
repnz
repnz
xchg
loop
mov
cmp
and
in
ds
aaa
sbb
or
inc
popa
mov
scas
xchg
mov
push
int3
mov
fwait
stc
add
mov
fs
das
aaa
ja
xchg
xchg
lret
pop
enter
xchg
and
stos
dec
mov
push
rcll
push
or
push
mov
mov
mov
fcmovne
sub
or
mov
mov
in
rorb
jmp
and
jb
hlt
pop
loop
testl
push
cmp
fs
ljmp
mov
xchg
popa
xchg
cli
mov
dec
ret
js
movsb
fildl
mov
add
leave
mov
pop
adc
jge
mov
adc
int3
loop
ss
mov
xchg
sub
mov
mov
dec
lods
mov
jmp
sbb
fidivrs
or
stc
mov
or
lods
or
xlat
roll
lds
nop
mov
inc
lds
cmp
shl
jmp
and
xchg
sbbb
sub
addb
mov
add
rcrl
mov
xchg
dec
mov
stc
sbb
jae
subl
or
sbb
out
inc
rcrb
mov
xor
int
cwtl
mov
mov
repnz
xchg
pop
into
int
ljmp
aad
in
add
add
mov
lret
adc
lock
leave
daa
mov
lea
stos
mov
or
push
nop
cwtl
jno
ljmp
mov
test
mov
clc
fmull
add
mov
popa
dec
lcall
mov
mov
or
sbb
adc
lret
add
mov
mov
sarb
inc
scas
xor
repnz
inc
mov
cltd
into
xchg
inc
add
mov
xor
inc
or
test
in
cli
flds
xor
and
jg
xor
pop
rcl
or
lcall
rcrb
js
gs
sub
adc
sti
mov
xchg
cmc
loope
jno
push
loop
mov
add
or
stos
scas
mov
shl
or
mov
leave
cmp
push
jne
mov
sub
mov
mov
xchg
ds
sbb
or
or
mov
xchg
nop
mov
add
mov
test
ljmp
xchg
fiaddl
lea
inc
ja
int
jle
push
fistpl
pop
test
or
int
jle
push
push
sbb
push
mov
sbb
adc
sbb
xor
lds
sub
jecxz
add
xchg
fldl
and
add
xchg
test
push
shrb
cmp
je
iret
psubsw
xchg
scas
sarb
mov
out
add
push
mov
in
xor
jo
lock
fisttpll
xchg
inc
sbbl
rolb
stc
andb
mov
hlt
mov
mov
mov
fsubp
mov
add
add
inc
sub
jno
rcll
sub
rcll
fmul
hlt
aam
xor
jno
rcl
loop
ja
subl
ss
xlat
mov
sbb
jns
and
xor
add
lahf
pop
loope
addb
lea
lock
data16
cmc
sub
ja
jbe
js
leave
sti
loop
lahf
pop
adc
and
lcall
push
aas
je
sub
loopne
cmp
jbe
aaa
and
ja
ja
push
aaa
push
jg
push
ret
xchg
aas
js
cmpsl
mov
shrb
andl
xlat
mov
cwtl
ljmp
iret
lods
addb
inc
or
xchg
stc
movsl
lods
in
push
xchg
sti
hlt
pop
aas
int
scas
vshufps
xor
or
add
fidivs
xchg
stos
popf
xchg
popf
xor
sub
mov
lcall
pop
sub
lds
fdivs
add
or
das
pop
addl
loop
and
cli
cwtl
sarb
jg
ss
lods
cmp
testb
cmpsl
xor
inc
jmp
push
negb
push
in
cmp
and
xor
mov
les
adc
mov
bound
xchg
cmp
repnz
mov
jg
mov
fstl
popf
push
inc
cmpsb
mov
stos
cmpsl
pushf
xchg
lds
aad
cmp
jl
xchg
and
sbb
sbb
sub
test
push
iret
stos
push
sub
mov
movsl
lds
in
out
scas
jg
lahf
roll
mov
call
fcoms
mov
and
push
and
and
cmc
es
adc
fiaddl
lret
adc
into
arpl
fabs
aad
fs
rcrb
adc
adc
pop
xorl
add
imul
jnp
jge
into
mov
nop
xchg
dec
in
pusha
mov
fistpl
pop
add
adc
popf
or
push
mov
add
mov
lds
loop
aaa
insb
push
iret
scas
mov
leave
fdivl
sbb
iret
fnstenv
xchg
scas
adc
fdivp
loop
sbb
jno
and
add
test
mov
pop
in
out
aas
and
jl
cmp
sub
cmp
lahf
push
out
aaa
mov
sub
xchg
cltd
add
scas
lea
cmp
test
and
loop
mov
xlat
pushf
cbtw
cmp
cmp
adc
outsb
hlt
test
jl
jno
sub
popf
sbb
and
rcr
mov
push
lds
xor
sti
or
xchg
or
push
loopne
fucomi
and
sub
mov
push
cs
cld
adc
lock
mov
in
negl
ljmp
cmp
mov
into
loopne
and
scas
or
inc
ljmp
fwait
jmp
jns
push
clc
jbe
scas
sbb
xor
nop
lock
pushf
addl
scas
pop
mov
loop
addb
and
sub
nop
mov
pop
lcall
xchg
xchg
adc
sbbl
repnz
fs
mov
sbb
ds
or
jmp
sbb
sbb
fdivrs
stc
jg
repnz
or
rcll
mov
aam
push
loopne
pop
ljmp
jg
ds
notb
dec
jae
push
shll
cmp
cltd
les
add
adc
pop
mov
ds
fstl
or
ja
pop
pop
out
and
xchg
xchg
adc
sbb
sbb
mov
stos
les
cmc
popf
scas
fldl
add
pop
in
js
adc
xchg
test
aas
mov
xchg
clc
xchg
aaa
out
ds
fildll
sbb
bound
xchg
mov
mov
xchg
jle
or
xchg
cmp
mov
lds
adc
sbb
jmp
stc
icebp
jbe
idivl
adc
inc
cs
mov
test
or
mov
jecxz
ret
xchg
sub
loopne
adc
loope
xchg
inc
fiadds
shrl
xchg
sbb
lcall
xchg
jg
and
jle
mov
movsl
ds
call
cmp
cmp
fdivs
ds
mov
inc
mov
adc
rclb
or
mov
int3
cmp
ljmp
test
fucomip
pop
dec
rcrb
push
aaa
orl
add
mov
cmp
fstpl
orl
add
push
fwait
nop
or
jno
xlat
aaa
sub
ljmp
push
mov
test
repz
push
pop
xor
pop
adc
insb
jb
cmp
mov
mov
divb
sbb
adc
fnstsw
add
test
cli
stc
js
mov
mov
inc
out
add
lahf
fsubl
stc
adc
in
xchg
ja
mov
cmc
out
aaa
inc
mov
add
pop
mov
mov
stc
jmp
cmp
cmp
cli
iret
cmpb
push
or
pop
aad
stos
andb
xor
out
mov
jo
imull
xchg
popf
jle,pt
and
xchg
fxch
shlb
mov
adc
push
sub
sbb
mov
jo
subb
iret
push
neg
adcl
jnp
loope
addl
cli
and
sub
aaa
xchg
arpl
shrl
fidivrs
mov
adc
das
sub
movsl
js
loope
push
jg
cmp
cmpb
mov
lea
shlb
jae
mov
mov
mov
mov
subl
fwait
adc
out
scas
mov
je
xor
push
mov
stos
cmp
mov
mov
das
cltd
sbb
mov
inc
test
sub
mov
add
lret
popf
mov
stos
xchg
cmc
and
jnp
mov
pop
mov
xchg
gs
mov
aaa
mov
call
pop
fistpll
ret
or
mov
aaa
addb
loop
subl
pop
jb
repnz
adc
mov
and
mov
xor
add
sbb
sbb
adc
lds
jl
mov
xchg
push
rcll
adc
mov
mov
xchg
and
mov
mov
stc
xor
scas
cmp
popf
scas
sbb
addl
in
push
std
sub
sahf
jg
lcall
xchg
pop
nop
pop
leave
add
and
xor
mov
test
jno
stos
clc
cmp
adc
sbb
xchg
popl
and
mov
daa
stc
mov
mov
popl
mov
xchg
lret
sub
in
cmp
add
cmp
adc
addl
and
mov
mov
mov
xchg
test
cmp
sub
stos
mov
rcl
int
mov
popl
sbb
movsl
and
loopne
stos
stc
ljmp
cwtl
popa
and
sbbl
xchg
mov
mov
jp
jmp
mov
cltd
ss
cwtl
into
xchg
rcrl
sbb
subb
cmp
aam
andb
mov
fimull
or
cmc
cltd
sbb
lods
mov
out
movsl
xchg
cwtl
cmp
jle
lock
xor
inc
cmp
bound
enter
scas
push
add
stc
or
mov
ljmp
outsl
push
cmp
movsb
fidivrl
cltd
sub
test
test
mov
jnp,pt
and
lods
xor
cmp
add
lret
aad
sub
jb
and
aas
icebp
fstps
cs
adc
push
sbb
xor
out
icebp
cmpsb
cmp
cld
mov
cmp
push
aad
push
pop
fcomps
roll
test
insl
cmp
faddl
add
negl
data16
mov
mov
and
add
leave
xchg
icebp
cmp
jnp
cli
sub
xchg
loopne
mov
xchg
stc
sub
out
pop
inc
ljmp
js
mov
test
mov
mov
out
lock
push
into
adc
add
stos
lcall
sub
xor
cli
mov
push
adc
jne
xor
push
cmp
ss
add
pop
out
cli
and
xor
icebp
cmp
cmpsl
ds
iret
xchg
cmp
pop
inc
mov
hlt
ret
add
call
test
movsb
jg
cmp
rcl
and
push
xor
stc
mov
loop
mov
jl
popf
movsl
jp
loope
xchg
inc
push
jle
fsts
cltd
cmp
adc
sarl
sbb
cmpsb
leave
pusha
mov
js
adcl
xchg
cmc
push
lods
xchg
lods
push
sarl
shrl
cmp
cmp
fldcw
sub
rolb
lds
jnp
mov
lds
aam
ds
inc
adc
mov
pushf
cwtl
aam
push
inc
mov
or
push
ret
loopne
and
cmc
cltd
loop
sbb
rcll
push
lock
loopne
popl
daa
jle
mov
mov
xorl
sti
ror
call
push
mov
add
adc
iret
sub
mov
mov
mov
in
mov
rclb
push
mov
test
push
in
sbb
test
xchg
cltd
pop
test
push
xor
mov
rcl
bound
ss
stos
mov
xchg
loopne
xor
mov
iret
fnstenv
add
push
out
jmp
gs
aaa
popa
movsb
mov
add
jb
mov
xlat
fnsave
rclb
mov
sbb
push
pop
leave
sbb
add
cmp
jge
xchg
cmc
mov
pop
and
bound
stos
fnstenv
sti
mov
add
xchg
add
mov
or
cmp
lds
inc
mov
ss
mov
lret
adc
jb
cmp
cs
sub
sub
lods
leave
pushl
test
insl
aas
lock
icebp
lock
cwtl
orb
sub
mov
sbb
stos
pop
lcall
sub
cmc
loopne
add
cmp
inc
lahf
xchg
insl
or
bound
cmp
dec
out
mov
stos
and
cmpsl
popa
jne
stos
push
mov
imul
xchg
fwait
add
mov
out
jmp
imul
add
xor
lods
mov
imul
xor
popf
mov
and
loopne
aas
xchg
insl
lods
push
out
cmp
lcall
call
js
hlt
test
cmp
push
push
xchg
pop
fcmovbe
push
bound
jmp
and
ja
mov
mov
sub
lcall
push
jecxz
mov
js
loopne
stos
and
sub
lcall
ss
fisubrs
sub
fbld
push
push
fucomi
xchg
xchg
adc
push
cmpsl
in
jecxz
call
out
ret
adc
test
pushf
jno
stos
fs
push
lahf
outsl
jmp
mov
cmp
fwait
push
push
push
cmpsl
insb
sub
mov
call
gs
int
mov
xchg
insl
es
mov
jmp
mov
outsl
xchg
sti
mov
jecxz
in
push
sub
lahf
lods
outsb
ljmp
fsubrs
arpl
adc
dec
in
sub
jmp
or
mov
das
outsb
mov
daa
aam
xacquire
fadds
mov
mov
rclb
fs
gs
sub
lahf
shll
cmpsl
lds
sub
cmpsb
jmp
icebp
popa
sbb
xchg
enter
mov
fwait
mov
rclb
mov
out
icebp
call
sbb
outsb
push
loop
rcll
jle
in
aam
cmc
mov
ss
jmp
xchg
push
mov
and
cmpsl
idiv
fwait
call
out
andb
mov
jecxz
dec
aad
xlat
fwait
ss
xchg
sub
das
pop
sbb
ljmp
adc
xchg
jecxz
aad
mov
in
scas
xchg
cmpsl
cs
pop
lea
arpl
mov
arpl
cmp
out
push
mov
das
imul
loope
pop
pop
popa
push
daa
mov
mov
sub
jg
daa
in
xchg
mov
inc
scas
cmpsl
stos
sub
mov
jns
push
adc
mov
iret
jecxz
call
push
scas
push
sbb
es
imul
mov
push
call
mov
inc
push
xlat
ret
daa
lahf
idivb
push
xchg
mov
clc
out
cmp
imul
add
mov
sti
mov
outsl
jecxz
mov
mov
mov
repz
mov
xchg
mov
pop
adc
mov
mov
mov
bound
adc
ljmp
adc
pop
mov
lea
jmp
ss
loopne
aaa
test
imul
out
fwait
xchg
adc
in
lods
imul
jbe
xchg
adc
mov
inc
les
shr
arpl
jmp
mov
out
sub
jle
aas
movsb
clc
jmp
jecxz
nop
add
in
mov
jmp
fwait
xchg
mov
xchg
data16
scas
mov
mov
cltd
repnz
inc
push
sub
outsl
mov
mov
cwtl
out
jecxz
adc
ljmp
adc
mov
sti
push
arpl
and
xchg
imul
mov
sub
or
push
xchg
insl
bound
sub
in
pusha
push
stos
das
jg
xchg
adc
pop
sbb
lahf
jle
aad
cmp
mov
adc
pop
xchg
push
ds
and
sbb
mov
aas
loopne
test
imulb
scas
cs
stos
outsb
insl
and
bound
push
sbb
shll
fs
mov
ret
daa
push
lock
int3
and
mov
out
push
push
push
sub
add
mov
je
mov
sub
test
adc
stos
pop
daa
cwtl
lret
je
repz
shl
ficompl
subl
test
and
mov
mov
es
stos
out
push
adc
push
test
call
xchg
jmp
xchg
mov
and
xchg
sub
std
loop
mov
imul
jmp
sbb
push
daa
clc
jnp
xlat
pop
out
jmp
jecxz
mov
into
sarb
addr16
in
xchg
cs
push
test
adc
push
fwait
sbb
mov
push
imul
scas
stos
data16
cmpsl
push
imul
arpl
cmp
movsb
je
loop
rcrl
push
xchg
push
sub
inc
xchg
arpl
sub
mov
sub
sti
lahf
je
daa
shrb
call
pop
jecxz
outsl
mov
cs
mov
cld
lods
test
dec
jge
js
push
rorl
pop
adc
cmpsl
and
xlat
fwait
aas
ja
clc
std
push
mov
das
inc
ljmp
pop
shrl
arpl
aas
gs
sbb
and
outsb
push
mov
mov
arpl
mov
push
sub
pop
xchg
out
ds
pop
in
mov
mov
xchg
lcall
pop
shrl
movsb
daa
imul
xchg
out
dec
fwait
jbe
push
or
fwait
sub
loope
cmp
fsubrl
xor
ljmp
ret
cmpsl
mov
mov
sub
test
lahf
pop
adc
push
sti
testl
sub
iret
aas
and
ret
push
pop
out
cmpsl
jae
pop
xor
ljmp
out
out
xor
xchg
xchg
add
mov
cmp
imul
sub
imul
addr16
mov
mov
jecxz
repz
adc
rorb
loop
and
push
mov
jl
addr16
out
jnp
out
xchg
dec
daa
cs
sub
ror
lret
push
test
xchg
mov
arpl
add
xlat
xchg
push
mov
inc
mov
sbb
and
mov
xchg
jnp
iret
pop
pop
sub
push
push
daa
stos
and
mov
push
scas
ja
push
sbb
adc
mov
imul
scas
and
dec
mov
push
add
pop
push
mov
xchg
ja
jle
xchg
lods
adc
inc
fcoms
mov
mov
lods
mov
stos
push
pop
pop
dec
inc
and
mov
xchg
mov
jb
jb
jmp
push
jmp
mov
scas
imull
das
push
adc
cmp
mov
mov
aas
and
push
ret
xchg
mov
arpl
and
mov
push
jecxz
jmp
xlat
cmpl
stc
jmp
in
pushf
aam
outsb
sub
ret
fwait
lcall
mov
sbb
movsb
inc
xor
sub
and
in
adc
cltd
arpl
cmp
fcoms
mov
sub
inc
fwait
jp
mov
pop
scas
test
cmp
and
push
pop
xlat
fistpl
dec
aas
gs
ljmp
jecxz
stos
cmp
xchg
add
xchg
xchg
mov
test
test
push
push
and
fwait
push
scas
imul
jl
sub
lods
push
pop
push
lcall
xchg
push
jge
scas
xchg
jmp
dec
iret
jmp
daa
sbb
lods
sub
sub
shrb
cs
cmpsl
jg
sti
cmp
outsl
xchg
test
int3
ljmp
and
mov
mov
call
in
add
scas
ror
xchg
stos
jecxz
fdivl
ja
fistpl
push
lods
pop
aam
push
bound
jmp
mov
mov
mov
jg
pop
xchg
fisubl
repz
in
cmp
mov
movsb
out
mov
mov
push
out
nop
jmp
pop
lock
fisttpl
cmpsl
addr16
cmp
mov
mov
push
mov
out
fwait
pop
mov
nop
mov
sub
nop
add
in
and
xchg
fwait
sti
call
xchg
cs
mov
jp
ljmp
aam
into
jnp
popl
jmp
lahf
adc
outsb
jmp
jle
mov
xchg
imul
ds
mov
out
movsb
and
mov
movsb
add
push
jnp
cmp
ds
lahf
dec
fwait
ljmp
or
test
movsb
sbb
mov
ds
jmp
sub
mov
ret
scas
push
adc
bound
sub
in
push
jle
in
outsb
xchg
dec
xchg
push
mul
sub
push
stos
std
in
clc
dec
push
fs
pop
xchg
dec
xchg
scas
xchg
sub
mov
lahf
or
pusha
aas
cld
jnp
mov
fwait
scas
stos
adc
fwait
cs
cli
nop
pop
jmp
push
call
decl
xchg
xchg
fildl
push
pop
scas
sub
bound
subl
cmp
jmp
fwait
sbb
iret
push
mov
out
addr16
mul
shrl
stos
mov
sub
rclb
push
add
and
mov
hlt
cwtl
inc
je
clc
sub
cmp
rcll
fs
insl
imul
je
movsb
jmp
cli
mov
aam
pop
call
cmp
push
sbb
mov
aas
movsl
ficompl
loop
outsb
pop
mov
cmpsl
ja
mov
scas
push
shr
adc
mov
outsl
mov
xchg
xchg
test
daa
jge
mov
lcall
hlt
aaa
stos
mov
pop
ret
out
iret
sbb
outsb
data16
ds
subl
sub
loopne
jnp
stos
out
or
shrb
test
es
push
jmp
mov
push
xlat
stos
rcrb
sahf
push
push
bound
in
lds
xchg
sub
mov
outsb
into
xchg
dec
sub
xor
xchg
stos
cmp
sub
cmpsb
outsb
inc
test
mov
cmp
scas
ret
push
fiaddl
jecxz
repz
pushf
cwtl
das
es
loopne
in
es
mov
mov
cld
sbb
push
sub
jmp
push
scas
sar
xchg
fistps
iret
aam
xor
in
sbb
fwait
lret
pop
sub
pop
idivl
shr
and
mov
fcmovbe
mov
jmp
ljmp
mov
call
and
ljmp
bound
sbbl
jmp
sub
mov
mov
pop
lods
push
out
xchg
xchg
dec
shrb
pushf
fs
and
push
popf
cmp
data16
mov
xchg
pushf
push
data16
cmp
stos
mov
pop
add
pop
mov
push
sti
mulb
imul
scas
push
cmp
ja
fistps
xchg
test
jle
mov
lcall
mov
sub
mov
cmp
push
or
iret
and
push
pop
std
push
push
call
mov
adcl
mov
imul
stos
inc
and
xlat
push
es
hlt
int
addr16
ss
mov
jmp
sub
mov
clc
es
aas
addr16
pop
lret
sbb
stos
outsl
fldt
ljmp
es
lods
call
jg
fwait
sbb
xchg
lcall
inc
jg
js
mov
xchg
aam
or
mov
push
inc
push
test
and
lcall
fwait
xlat
arpl
out
sub
adc
lods
jmp
pop
dec
daa
jge
jns
sti
mov
fwait
dec
push
lods
mov
sub
arpl
insl
pop
adc
xchg
lahf
aad
das
adc
mov
ljmp
dec
imul
push
rorb
xchg
rol
out
pop
gs
bound
add
push
fisttpl
movsb
pop
sub
or
push
mov
mov
cmp
and
call
fistl
pop
adc
jbe
sti
cmp
xchg
test
mov
jnp
xchg
jmp
mov
mov
icebp
push
or
jle
shrb
ds
stos
addb
out
mov
in
pusha
sub
adcl
mov
pop
sub
cmpsb
inc
xor
cld
aas
mov
dec
cmp
push
mov
cmp
mov
fmull
mov
mov
push
push
sbb
rcll
cmpsb
sti
mov
notl
push
rorb
mov
sbb
push
dec
test
lahf
rorb
mov
lahf
iret
mov
lcall
mov
pop
rcr
push
scas
iret
jmp
mov
outsw
sub
cmpsl
stc
mov
and
pop
and
mull
xchg
addr16
push
jo
inc
pop
ljmp
sub
arpl
jmp
cmp
adc
fs
jbe
add
sbb
popf
movsb
ja
mov
in
sub
xchg
pop
or
cli
jle
dec
mov
xchg
push
mov
das
sub
data16
pop
sub
inc
inc
scas
push
jmp
jmp
leave
cmpsb
push
add
dec
cmpsb
jae
scas
mov
pop
pop
addr16
xchg
push
sti
out
jmp
fistps
push
jns
push
ret
stos
xchg
jl
call
push
sbb
aam
adc
mov
xchg
imul
psrad
js
and
pop
scas
repz
mov
xchg
test
addr16
cmpsl
push
pop
adc
dec
mov
bound
push
outsl
adc
aaa
loope
in
mov
push
ljmp
sar
jg
adc
lahf
inc
test
fstl
sub
bound
adc
nop
lret
arpl
in
cmp
lcall
xor
in
inc
scas
rcll
ja
dec
arpl
outsl
fistpl
cmp
dec
sub
fs
gs
das
xchg
push
mov
jge
and
lods
jecxz
mov
jge
xor
ljmp
jmp
xchg
es
cmpsb
out
xlat
inc
rcll
cltd
sub
es
std
cmpsb
nop
sub
fcoml
and
stos
shl
xchg
sbb
mov
lods
sub
pop
xchg
movsl
in
mov
jle
sbb
jmp
in
clc
jl
cmp
hlt
mov
es
pop
sbb
stos
fwait
inc
in
in
jl
inc
adc
sub
add
fcmovbe
push
jb
mov
aam
daa
test
mov
jmp
lahf
ret
adc
outsb
shrl
stos
pop
loopne
mov
fsubrl
xchg
jnp
push
cld
cmpsl
jg
sub
xchg
mov
in
stos
stos
push
inc
lret
dec
sbb
mov
insb
mov
pop
xchg
sub
add
rcrl
push
xchg
sbb
outsb
mov
dec
dec
xchg
scas
test
xchg
sahf
dec
lret
xchg
data16
adc
mov
mov
dec
and
aam
outsl
xchg
insb
lods
fwait
cwtl
cmpsb
and
es
sbb
imul
cld
cmp
popf
insl
jmp
sub
mov
loop
mov
xchg
fwait
lahf
mov
in
arpl
outsl
fucomi
fistps
and
shll
es
stos
imul
and
xchg
leave
cmpsl
mov
xchg
jmp
push
mov
fwait
push
imul
cmp
or
ja
mov
aaa
xor
mov
mov
mov
jnp
int3
jmp
jmp
mov
cmp
push
push
movsb
in
scas
pop
pop
dec
sbb
jmp
daa
insb
mov
jmp
adc
insb
cmpsl
inc
das
sub
clc
cmp
mov
pop
es
dec
test
or
hlt
jl
cmp
sub
stos
adc
push
data16
cmpsb
fs
ret
mov
push
in
fwait
mov
fldt
dec
add
fs
dec
stos
ss
jae
push
in
insb
xor
inc
cmpsb
arpl
and
addr16
push
imul
push
push
addr16
scas
cmpsl
sbb
cmpsb
pusha
xchg
mov
adc
jmp
mov
cmpsb
cmpsl
cs
sub
pop
mov
aaa
jl
xor
mov
push
push
outsb
push
ljmp
cmpsl
test
push
sub
clc
sub
mov
jl
sub
mov
movsb
test
fcomps
gs
and
int3
out
fisubrl
pop
jmp
xlat
mov
imul
cwtl
scas
std
es
jmp
cltd
adc
xor
mov
mov
xchg
std
mov
xlat
push
fwait
into
mov
xor
mov
jmp
sub
jp
or
xchg
js
insb
pop
in
jmp
punpcklbw
test
pop
out
adc
cmpsl
jnp
loopne
mov
pop
sub
shll
xchg
mov
pop
push
mov
das
sub
mov
xchg
fcmovb
add
add
stos
imul
test
xchg
add
outsb
dec
and
mov
call
std
loopne
xchg
sahf
stos
ficoms
and
jecxz
fldcw
mov
add
loopne
stos
pop
out
sbb
sahf
mov
xchg
imull
pushl
mov
in
xchg
notl
pop
sub
mov
cmpsb
mov
mov
or
lcall
insl
sbb
jmp
clc
hlt
js
adc
popf
xlat
ja
gs
and
sbb
cmp
hlt
cmp
jmp
lret
push
cs
jmp
mov
movsb
sbb
inc
outsb
sbb
push
pop
mov
aas
cmpsl
test
mov
push
lahf
push
ljmp
xchg
adc
push
clc
and
mov
out
pop
stos
loopw
xlat
pop
push
sbb
xchg
scas
test
mov
push
mov
pushf
adcl
mov
inc
stos
push
shrb
fstpt
mov
pop
in
dec
push
nop
fstps
and
mov
push
jmp
clc
cmp
inc
mov
popf
aaa
lret
and
stos
mov
xchg
das
mov
mov
jae
stc
sub
outsl
pop
jb
movsb
and
push
scas
daa
push
sub
jl
ss
aad
inc
dec
dec
push
call
and
aas
aas
xor
iret
jg
jmp
sbb
push
xchg
ret
lcall
mov
daa
std
xchg
out
scas
mov
mov
pop
mov
mov
xchg
mov
cs
fidivrs
cmp
mov
andb
outsb
adc
adc
jecxz
test
push
or
movsl
push
cmp
push
jns
mov
popf
add
sub
push
in
movsb
adc
push
push
mov
cs
lret
emms
mov
lahf
pusha
xchg
sub
fs
sbb
xchg
fildll
xchg
rorl
lcall
adc
xchg
xchg
adc
xlat
outsb
scas
mov
mov
cmp
xchg
pop
les
data16
xchg
jae
arpl
jmp
mov
jmp
sub
push
fistl
outsb
xchg
inc
ss
lods
sub
daa
lods
out
and
mov
or
pop
pop
out
or
xor
cmp
push
iret
sbb
push
sub
cmpsl
outsb
xchg
pop
stos
lods
daa
or
mov
sub
push
xchg
sahf
adc
xlat
push
bound
loopne
pmuludq
repz
pop
cmp
shrb
cmp
mov
and
jmp
xchg
jmp
pop
out
push
xorl
std
and
push
imul
add
mov
mov
jae
loopne
push
mov
sub
sub
lock
adc
fcomps
setp
scas
mov
mov
aas
lock
mov
pop
push
ljmp
sti
mov
mov
jnp
jbe
bound
xchg
push
xchg
and
shr
cld
or
xchg
pop
pop
dec
pusha
out
push
stos
fldl
shrl
test
xor
mov
scas
dec
fs
cmp
je
sub
scas
fwait
cmp
movsb
stos
and
cmp
shll
cld
fs
mov
daa
pop
fwait
xchg
sub
adc
mov
and
jge
daa
add
and
inc
lcall
mov
cli
loop,pt
rep
subl
xor
fildl
pop
lcall
fcoml
push
stos
out
jle
jecxz
push
call
jmp
ja
out
iret
push
ficompl
sbb
ds
mov
cld
lods
daa
cmpsb
mov
mov
stos
xchg
scas
mov
fdivs
sub
push
mov
xlat
stos
push
adc
out
lcall
aas
dec
bound
mov
fdivl
pop
mov
mov
les
hlt
pusha
aaa
sti
xor
pushf
lahf
test
es
xchg
out
jmp
mov
pop
and
lock
push
ficoml
sbbb
jbe
sti
cmpsl
movsb
and
push
stos
mov
xchg
mov
test
xor
sub
rcr
inc
mov
inc
fisttpl
stos
stos
out
in
imul
mov
addr16
jae
hlt
sbb
sti
sub
loope
mov
daa
std
mov
and
mov
mov
push
inc
ror
inc
and
adc
stos
loopne
jmp
lock
jae
mov
mov
jnp
mov
hlt
jl
dec
or
fcoml
push
ficoml
leave
cmp
clc
xchg
mov
repz
fldcw
sub
pop
mov
mov
mov
nop
test
pop
and
test
hlt
fnstcw
lgs
fwait
push
stos
sbb
push
lcall
mov
aas
mov
movsb
xor
lret
xchg
pop
adcb
mov
ss
stos
into
mov
mov
scas
out
sbb
xchg
push
lret
push
and
mov
lcall
test
fs
js
aas
push
sbb
add
shr
jmp
scas
jecxz
daa
jmp
arpl
and
mov
push
cs
cwtl
jl
ljmp
or
mov
aaa
clc
gs
aas
ljmp
fwait
mov
dec
test
aaa
fwait
xchg
xlat
push
xchg
jmp
jae
aaa
jo
jp
jg
sbbl
mov
scas
mov
pop
push
sub
jmp
scas
addr16
xchg
mov
mov
mov
jle
mov
in
ljmp
pushf
pop
imul
xchg
sub
cmp
imul
shrl
stos
mov
in
in
mov
push
push
xlat
shll
pcmpeqb
into
cmp
fists
adc
pop
xorl
and
sub
mov
cld
mov
stos
pop
xchg
sahf
rclb
adc
stos
sti
ds
cwtl
aam
ljmp
ljmp
pop
addl
pusha
and
addr16
aam
inc
adc
movsb
fimull
pop
push
xchg
pop
sub
adc
cmp
loopne
sub
xchg
test
mov
add
rol
xorb
lods
pop
and
fstpt
out
jp
mov
hlt
cmp
iret
or
cmp
push
push
fisubrl
ljmp
cmp
fwait
push
call
aas
mov
sahf
lcall
lretw
xchg
rorb
xor
cmpsl
xor
push
mov
mov
push
xor
lret
mov
jmp
rclb
in
fs
fprem
mov
jmp
fidivl
notl
or
daa
mov
pop
pop
fimuls
jecxz
ja
sub
mov
push
nop
inc
inc
dec
in
jmp
fiaddl
push
test
adc
cmpsb
popa
fldt
and
test
inc
roll
mov
mov
jmp
push
adc
scas
jmp
imul
cld
mov
lahf
lret
mov
adc
retw
xchg
xlat
jecxz
adcl
lods
in
lcall
pusha
jecxz
xor
aas
data16
in
data16
bound
and
cld
aaa
jl
pop
fisubrl
push
push
pop
scas
and
xchg
and
push
xchg
in
push
mov
cmp
in
xlat
mov
cs
bound
lods
mov
in
lods
call
arpl
adcb
cmpsl
idivl
fs
test
xchg
sub
jmp
mov
lcall
pushl
fsubrl
pop
adc
addr16
jae
inc
jmp
std
mulb
fucomi
jns
sub
movsb
mov
pop
es
out
sbb
test
cmpsb
loop
outsb
sub
js
cld
sbb
mov
adc
mov
mov
nop
js
test
sub
movsb
mov
sbb
jo
stos
push
jnp
movsb
aas
and
daa
rclb
push
sub
mov
push
push
fwait
imul
xchg
and
adc
stos
and
lcall
mov
jl
in
shrb
xchg
loop
ds
cmpsl
and
shrb
aaa
push
jp
push
mov
xchg
incl
mov
loope
mov
cltd
fdivrs
fmul
mov
sub
jp
out
xchg
inc
jg
adc
clc
jo
imul
sbb
push
mov
cmp
ds
es
xchg
push
xchg
jno
mov
aas
scas
ds
adc
pop
es
pusha
inc
jecxz
sub
popf
shrb
sub
lock
sahf
push
sbb
sbb
pop
test
mov
popa
xor
cmp
xchg
ds
jmp
mov
in
sub
mov
mov
repz
and
ljmp
jnp
lods
or
mov
and
shl
test
scas
std
stos
call
pop
cs
mov
push
ds
imul
in
lret
xchg
outsl
aas
fwait
push
mov
sbb
bound
jecxz
jae
mov
movsb
ljmp
mov
mov
data16
inc
lahf
cli
jmp
jg
and
movsb
outsl
pop
cmp
xor
bound
push
popa
xlat
out
das
movsb
mov
arpl
lods
cmp
ficomps
shll
pop
fwait
xchg
imul
js
mov
sahf
sbb
arpl
leave
jecxz
and
sbb
lcall
mov
aas
mov
sarl
push
loope
and
data16
mov
push
mov
aas
sbb
je
push
and
adc
nop
push
daa
sahf
lret
jae
jg
xchg
mov
scas
lret
mov
out
das
nop
push
daa
inc
movsb
xchg
lret
bound
sbb
jecxz
aas
aaa
and
mov
push
lods
je
mov
bound
xchg
ficoml
mov
out
jnp
cld
fwait
add
sbb
shrl
and
out
mov
stos
sub
xor
jg
cmpsl
mov
ret
jmp
or
mov
mov
pop
stos
mov
scas
mov
outsb
cmpb
push
daa
fcoms
cmc
fwait
push
and
or
cmpsb
out
push
push
push
xchg
in
test
mov
call
xchg
lahf
xchg
xchg
mov
aas
mov
adc
cld
mov
call
adc
jmp
mov
lods
rcl
daa
inc
pusha
imul
mov
sub
adc
sbb
movsb
mov
fwait
sbb
sub
mov
fucompp
ret
push
xor
mov
dec
adc
sub
lods
fisubs
inc
sub
sub
xor
mov
js
cmp
jmp
or
das
popa
xchg
sarb
dec
movsl
test
scas
pop
jmp
shll
in
push
repz
daa
sub
push
xchg
jmp
sub
out
sahf
daa
xor
fwait
daa
sti
lods
aam
and
fwait
and
inc
inc
scas
jmp
inc
insl
cwtl
test
cmc
outsl
cmpsb
lahf
push
push
jmp
push
sbb
cmpsl
clc
sar
sub
ja
xlat
stos
cld
cmp
cmpsl
ds
mov
push
popf
movsb
mov
cwtl
daa
out
xchg
push
dec
daa
push
imul
mov
stos
adcl
daa
dec
pusha
imul
push
fldt
push
cs
repnz
jl
and
shr
test
jmp
addr16
push
xchg
andl
mov
jl
xchg
adcl
sub
out
adc
push
adc
and
mov
push
fwait
call
mov
xchg
jmp
push
imul
out
adc
imul
arpl
adc
adc
and
mov
and
adc
add
cmp
push
xchg
pop
and
out
scas
movsb
push
fucomi
inc
arpl
jecxz
insb
nop
push
xchg
int3
test
scas
vmovaps
mov
addr16
emms
cs
call
sub
mov
pop
cmpsl
mov
sub
push
mov
outsb
jecxz
daa
adc
sub
stos
cs
and
insb
out
mov
das
jg
cs
xchg
in
jmp
push
aas
stos
sub
mov
idiv
push
mov
xor
push
and
pop
cmpsl
sar
scas
pop
mov
jecxz
pop
shlb
stos
push
xchg
push
lret
jge
fistl
push
arpl
loopne
push
push
mov
adc
jp
sbb
scas
cmp
sti
cmp
sub
es
fsubrl
and
fucomi
mov
lods
dec
xlat
stos
imul
mov
jmp
mov
mov
cwtl
test
adc
outsb
and
mov
mov
cltd
cmp
mov
lret
ljmp
test
xor
pusha
mov
scas
sbb
cltd
sub
imul
push
mov
push
and
pop
stos
aad
pop
fwait
mov
mov
aas
fbld
jmp
mov
jmp
xchg
cltd
out
xor
lahf
lods
lahf
pop
jmp
mov
addb
mov
fwait
imul
and
xchg
sub
and
mov
mov
hlt
mov
xchg
push
push
sbb
out
test
dec
daa
mov
inc
sbbl
mov
mov
mov
movsb
pop
data16
sub
es
adc
and
jp
jecxz
pusha
inc
cmp
xor
jg
movsb
ljmp
xchg
jae,pn
fcmovnbe
stos
mov
pop
add
pop
lods
push
lods
mov
mov
push
push
mov
arpl
nop
addr16
inc
inc
ja
and
sub
cmp
push
out
sub
mov
mov
sub
jmp
push
mov
mov
push
ljmp
sub
mov
shr
mov
outsl
jmp
mov
push
xchg
xchg
cmpsl
push
repz
push
imul
outsb
mov
mov
add
data16
lock
mov
daa
in
das
test
push
shlb
movsb
dec
fsubr
or
push
rclb
ficompl
mov
out
lea
push
mov
in
mov
lahf
test
or
mov
fidivrl
imul
cmpsl
dec
out
jmp
push
ss
mov
adc
pop
pop
push
adc
cmp
imul
js
push
dec
iret
pushf
mov
out
imul
call
test
stos
aaa
loopne
push
xchg
sbbl
and
arpl
cmp
push
scas
cmp
mov
fbld
fcmovnu
in
jmp
repz
push
in
ja
stos
mov
mov
addr16
jnp
sub
mov
movsb
data16
ljmp
jnp
movsb
pop
sub
shr
lods
jecxz
adcl
mov
mov
pop
in
push
pusha
push
push
pop
ror
dec
in
out
dec
movsb
sbb
aas
mov
mov
fldt
inc
xchg
xchg
imul
xchg
lock
fstps
dec
add
mov
push
jmp
mov
and
jae
jmp
jg
sub
adc
xlat
lods
dec
xchg
lods
xchg
and
and
jmp
arpl
mov
sbb
daa
stos
cmpsb
and
out
stos
movsb
clc
arpl
or
and
outsl
xlat
stos
xor
and
and
outsb
fwait
lahf
cmp
push
outsl
int
popf
pop
movsb
fistps
xchg
push
jmp
shrl
and
inc
jmp
les
jbe
push
push
mov
and
push
es
jae
out
sbb
cmp
pop
fwait
adc
mov
ret
rclb
dec
inc
cmp
jg
aam
ss
loop
jecxz
sbb
add
sbb
arpl
xchg
xlat
cmp
mov
aam
sbb
sbb
push
test
rorb
nop
mov
es
cltd
imul
addr16
shlb
fwait
lock
ljmp
sub
adc
data16
cmp
lcall
mov
daa
daa
scas
push
xchg
pop
adc
sti
dec
pop
pop
jne
call
xor
jecxz
das
shrb
por
daa
addr16
adc
jmp
push
es
sub
mov
clc
test
nop
push
daa
outsl
rcll
mov
xchg
mov
stos
outsb
popa
jle
clc
aaa
mov
sub
arpl
or
out
or
sub
shrb
mov
call
and
outsb
mov
mov
rclb
push
xchg
imul
leave
inc
sbb
fldt
push
test
test
addr16
jnp
out
in
test
xchg
or
push
imul
jmp
push
pop
add
jbe
daa
js
jnp
and
push
adc
dec
add
scas
dec
inc
push
fwait
xor
mov
fwait
cmp
pop
adc
cmp
fwait
push
jae
iret
jg
mov
lahf
push
arpl
out
out
and
addr16
jl
mov
sub
adc
mov
imul
aas
daa
arpl
xchg
adc
in
xchg
pushf
arpl
xchg
data16
xchg
pop
out
cmp
xor
sti
outsl
xor
cltd
jecxz
xchg
out
addr16
mov
idivb
xchg
push
sbb
add
xor
daa
add
pop
adc
pop
es
jmp
xchg
mov
jg
push
jns
sub
insb
mov
aas
mull
data16
or
cmpsb
mov
mov
push
push
out
push
xchg
es
jnp
cld
ud2
mov
decl
movsb
xlat
lret
into
push
ja
mov
int
movsb
popf
scas
in
sbb
xor
ja
in
adc
aaa
mov
aas
mov
sbb
adc
adc
in
mov
stos
xor
jmp
adcl
mov
or
aaa
adc
jg
mov
je
sub
lret
xchg
rcrl
les
cmp
inc
sub
mov
addr16
dec
pop
jecxz
inc
jg,pn
pop
ljmp
dec
sub
jge
outsb
mov
rorl
dec
stos
jnp
mov
sub
addr16
fists
pop
iret
pop
out
sub
jl
bndldx
mov
cltd
xchg
out
es
push
or
push
mov
int3
and
addr16
in
push
adc
clc
dec
jg
aam
fwait
jnp
mull
xchg
push
mov
arpl
mov
lcall
mov
movsb
or
add
sub
ja
popa
outsb
push
push
addl
arpl
mov
imul
xchg
mov
test
mov
imul
xor
loopne
or
popa
scas
rclb
lahf
cltd
adc
stos
lcall
call
xor
mov
jb
xchg
adc
sbb
push
jae
adc
fwait
cs
insb
mov
jle
mov
mov
dec
mov
in
es
jmp
xchg
das
push
pop
mov
rorb
cs
mov
lcall
shrl
sub
repnz
test
cmp
in
lock
push
pop
es
scas
ljmp
mov
mov
push
stos
push
mov
stos
hlt
jge
xchg
push
fcmovne
out
addl
cmpsb
cld
or
mov
test
xchg
test
sub
xor
and
stos
cmp
jnp
arpl
shlb
mov
out
cli
ds
subl
clc
aas
mov
mov
maskmovq
sti
scas
es
pop
xchg
mov
ja
mov
in
dec
outsl
aad
cld
push
shrb
movsl
movsl
call
and
mul
push
mov
push
addr16
xor
daa
jg
hlt
and
cmpsb
jb
or
push
push
repz
xlat
scas
ror
mov
mov
lds
mov
out
ds
cmp
adc
mov
lcall
sub
bound
jmp
mov
out
jmp
mov
data16
scas
add
mov
lock
mov
aas
dec
mov
add
repz
cmp
dec
and
lcall
or
shrl
pop
sbb
xor
cmp
out
mov
sti
lods
sub
pop
fwait
jae
mov
fwait
xchg
insb
aam
jmp
popl
fs
push
fstpt
sti
in
mov
in
xlat
call
ja
fists
pop
test
in
jl
mov
sub
pop
mov
ret
nop
fstpt
out
mov
aaa
xor
jnp
out
inc
gs
cs
and
mov
nop
xor
mov
mov
sbb
pushl
and
lods
and
cmp
cmp
adc
inc
pop
mov
mov
loopne
sbb
inc
cmp
jb
mov
adc
movsb
jp
mov
daa
imul
mov
pop
push
or
xchg
aam
fnstcw
out
cld
mov
mov
sub
movsb
mov
mov
insb
mov
mov
xor
push
or
arpl
pop
or
jecxz
ds
test
pop
stos
rclb
daa
mov
test
loop
lahf
fisttpl
mov
leave
shrb
das
jmp
cmpsb
stos
xchg
sub
mov
jl
popa
test
andb
jg
cld
inc
and
lret
scas
movlps
jmp
in
ret
sub
cld
lcall
sub
mov
jp
add
adc
push
mov
sub
xchg
les
xchg
and
adc
jmp
mov
mov
test
mov
sarl
lret
fwait
out
dec
aas
mov
gs
lods
aam
xor
and
adc
cmp
cmpsl
insb
in
lods
ret
pop
xchg
sub
xchg
jb
cmp
test
call
out
xchg
popf
data16
mov
hlt
clc
dec
mov
fucomp
mov
lahf
xchg
xchg
cs
pop
mov
sub
lock
xchg
test
push
xchg
cmpl
es
sbb
mov
dec
in
xor
aaa
addr16
adc
stos
push
fisubrl
mov
daa
sub
jae
mov
adc
xchg
rolb
es
jb
mov
pop
fwait
push
jnp
sbb
push
adc
aas
fcmovbe
movaps
mov
nop
xchg
or
nop
mov
es
mov
mov
mov
xlat
fcoml
add
jle
decb
mov
ss
cld
xor
inc
or
icebp
jmp
pop
aad
push
mov
mov
stos
jnp
pop
aaa
mov
jae
cmp
imul
out
push
fcmovu
mov
pop
repz
sub
push
push
push
or
shr
aas
test
out
js
cmp
cmpsl
js
lret
jmp
mov
outsb
cmpsl
xchg
push
test
mov
out
mov
out
or
test
stos
ljmp
sub
aam
fcmovnu
bsr
mov
mov
cmpsb
jle
jp
pause
fs
xchg
inc
pop
addr16
js
push
test
xlat
sbb
imull
jnp
test
cwtl
aam
dec
repz
arpl
push
adc
mov
and
push
sub
das
mov
das
xchg
shrl
pop
stos
pusha
test
mov
ret
popf
xchg
mov
popf
lret
mov
jecxz
push
inc
adc
push
cltd
add
cmp
and
inc
fcom
push
lret
push
scas
push
cvttps2pi
push
stos
in
mov
and
daa
test
loop
and
jmp
out
jne
fstpt
push
xchg
mov
push
stos
add
lahf
adc
nop
stos
sub
iret
mov
test
sub
mov
push
repz
scas
sub
mov
pushl
insl
leave
es
sub
mov
push
push
xchg
scas
xchg
sub
and
fs
add
stos
or
out
xor
dec
push
jnp
movsb
stos
aaa
push
push
outsl
xchg
lods
push
xchg
sbb
dec
and
xchg
dec
and
popa
push
push
xor
and
dec
sbb
fwait
and
mov
sbbl
xchg
scas
fistpl
aam
imul
jnp
ja
mov
push
cltd
lahf
add
dec
or
xor
mov
aas
hlt
and
sub
jb
cmp
mov
or
hlt
pusha
mov
nop
inc
mov
stos
and
add
out
mov
cld
fs
daa
sbb
sbb
popl
pop
mov
stc
xchg
int
popf
mov
mov
sbb
push
sbb
or
mov
movsl
xchg
dec
jmp
adcl
ja
cmp
mov
mov
in
sub
stos
and
adc
outsb
xchg
lods
jle
stos
mov
jb
mov
ja
jecxz
lods
call
mov
cmp
pushf
inc
mov
ljmp
cmp
lcall
push
sahf
repz
cmpsb
movsl
or
push
xchg
scas
mov
stos
xchg
out
mov
mov
fidivrl
sub
jge
out
fbstp
test
jo
cld
jo
insb
rcr
xchg
fwait
push
lcall
mov
in
mov
mov
icebp
cmp
out
mov
testl
xchg
movsb
xchg
sub
jmp
sbb
imul
inc
jae
dec
fs
imul
call
fwait
les
scas
call
mov
mov
mov
daa
sub
mov
fdivrs
jmp
mov
sbb
stos
es
movsb
jg
call
fisubs
std
popl
lcall
fwait
mov
call
mov
mov
lds
lret
pusha
mov
movsb
cmp
rsm
outsb
sub
xchg
xchg
dec
xchg
jbe
sub
cld
cmp
add
test
fsubrl
sub
lahf
push
bound
nop
ljmp
jne
xchg
mov
xchg
lret
dec
sub
fldcw
bound
mull
lods
sarb
mov
push
sbb
outsb
sbb
jp
sub
add
lock
jmp
xlat
xchg
xor
mov
in
mov
push
cs
fildl
mov
jmp
mov
cld
mov
pusha
movsb
and
pop
out
adc
push
ja
cld
int3
pusha
aaa
cmp
repz
xchg
mov
xchg
pop
ret
cmp
js
jne
pop
push
mov
stos
popa
and
sahf
pop
test
lahf
jae
jg
aaa
cmp
pusha
adc
out
gs
mov
scas
xchg
loop
sahf
sub
add
imul
insb
in
mov
lods
cmp
jl
mov
aas
mov
sub
mov
outsb
shrl
jnp
cmp
adc
mov
lcall
sub
mov
lods
push
pop
rorb
pushf
lods
orl
sbb
lahf
gs
xlat
jl
or
fwait
xlat
push
ljmp
lods
ds
lods
fsubrl
insb
adc
and
or
mov
lret
mov
das
std
sarb
out
test
mov
imul
xor
mov
push
pop
push
clc
adc
mov
cmp
xor
sub
dec
sub
or
cmc
and
stos
dec
clc
mov
test
dec
pop
sub
lret
sub
sub
xchg
das
movsb
stos
mov
dec
mov
sbb
xor
bound
mov
pop
adc
cmp
pop
cmpsb
jne
jg
cmp
push
jmp
xchg
jo
mov
les
and
movsb
lret
sarb
cmpsl
scas
sbb
sbb
es
mov
stos
cmp
sub
mov
mov
jmp
cmp
arpl
in
shrb
push
sbb
aas
mov
xor
xchg
das
cmp
cmp
lods
in
movsb
sarb
cmpsl
stos
mov
sahf
ljmp
mov
shlb
aad
push
std
push
lahf
in
push
xchg
js
sti
mov
and
jp
cs
cmpsb
stos
mov
lods
in
stos
in
clc
pop
cmp
jmp
lahf
fcmovb
sub
ficompl
fisubrl
cli
dec
and
es
cmp
jg
fistps
adc
mov
xor
jns
out
sub
mov
es
stos
mov
rclb
push
and
clc
lret
aas
xchg
pop
sub
nop
cmpsb
mov
out
push
push
das
in
xchg
daa
out
sti
ss
pusha
and
call
cmpsb
push
push
push
outsb
cmpsb
movsb
fldt
mov
jl
mov
or
outsb
or
xchg
movsb
cmpsl
or
stc
ja
mov
push
daa
mov
adc
insl
push
or
aaa
mov
xchg
adc
mov
mov
sub
mov
mov
xor
pop
es
jmp
push
fildll
out
bnd
repz
pusha
movsb
push
js
xchg
imul
mov
xor
push
jle
mov
xchg
lods
mov
mov
push
push
xchg
loopne
addr16
or
push
arpl
lods
cwtl
scas
mov
ljmp
or
daa
push
fcoml
sub
cs
mov
add
mov
push
mov
jmp
mov
movsb
jecxz
in
fcoms
mov
and
loopne
pushf
mov
ljmp
adc
aaa
push
xchg
outsl
movsb
adc
xor
daa
xchg
out
and
cmp
ja
fucom
cwtl
int
bound
das
imul
outsb
imul
jae
leave
in
aas
arpl
inc
add
adc
xor
sub
cmp
and
pop
sub
outsl
out
sub
sbb
fstps
cmpsl
or
mov
pushf
mov
fistpl
jnp
out
mov
repz
pop
pushf
das
cwtl
loope
inc
push
dec
jp
mov
cld
mov
mov
xchg
adc
loopne
xor
mov
xor
repz
push
dec
test
xchg
add
lret
daa
push
cmpsb
lock
lahf
mov
adc
sub
xchg
push
dec
mov
daa
push
mov
aam
lahf
push
xlat
xchg
lods
jmp
mov
and
pusha
and
scas
mov
and
jle
insb
sub
gs
pop
sbb
scas
or
fildl
xchg
sub
sti
es
cmp
aam
ljmp
and
push
xor
dec
cmp
mov
cmpsl
daa
mov
mov
fstpt
cmp
mulb
jmp
mov
int3
inc
inc
pop
loope
jmp
cmp
sub
adc
ljmp
pop
addl
cld
mov
adc
sbb
cmpsl
std
pop
fidivrl
pop
jecxz
sti
test
mov
addr16
sub
stos
fbld
fwait
lea
mov
mov
iret
sahf
sub
mov
fildl
rcll
ljmp
add
xchg
sub
cmpsb
push
xlat
pop
mov
jle
inc
stos
pusha
fs
pop
push
xchg
mov
outsb
push
out
das
push
popf
scas
ljmp
pop
movsl
and
mov
fwait
mov
fistl
fwait
lea
jmp
mov
rclb
xlat
dec
lahf
push
fsubrs
call
fistpll
cmpsl
adc
data16
rcrl
adc
dec
lock
hlt
or
test
mov
push
outsb
scas
xor
push
sti
imul
aas
lahf
pop
add
fldt
and
in
cmpsl
cmp
fldenv
inc
out
push
push
ljmp
daa
push
test
push
pusha
adc
push
imul
inc
cmp
mulb
or
outsb
adc
mov
push
jecxz
clc
lahf
movsb
mov
dec
cwtl
imul
jge
jne
cmp
cmp
insb
lods
dec
push
out
and
mov
push
lahf
je
mov
test
test
xchg
jmp
leave
out
add
loopne
jae
ss
cwtl
les
insl
cltd
mov
arpl
pop
and
xchg
pop
xlat
mov
sub
es
clc
in
xchg
cmp
mov
movq
fistl
adc
jecxz
pusha
jmp
push
dec
loopne
jnp
stos
adcl
adc
push
cmp
loopne
cmp
outsl
sub
ja
cmp
lahf
pop
pop
lahf
xchg
mov
xchg
enter
xor
jnp
sub
fisubl
cmpsb
inc
mov
mov
mov
jg
mov
add
and
or
jnp
mov
addr16
mov
add
and
arpl
xchg
lahf
jnp
xchg
fwait
mov
push
adc
mov
daa
pop
mov
sub
out
push
pop
xchg
lea
jnp
in
xor
mov
push
sbb
pop
mov
lods
idivl
je
xchg
popa
adc
mov
rclw
push
clc
in
sbb
cmp
inc
cmp
lahf
mov
loopne
and
mov
sub
fisubrs
out
ffreep
and
outsl
sub
mov
or
pop
xchg
pop
jmp
sub
incl
lods
pop
push
xchg
out
sti
sub
xor
or
ret
ljmp
lret
sub
les
pop
repz
mov
pop
jnp
mov
mov
in
push
fistpl
iret
aas
movsb
les
hlt
mov
cmp
jne
xor
xchg
cmp
aas
int3
jo
cmp
adc
mov
mov
fldenv
daa
pop
pop
xchg
sub
inc
repz
js
out
insl
sbb
and
and
adc
bound
add
leave
fimull
push
enter
out
mov
mov
mov
lods
adc
jmp
pop
scas
cs
dec
dec
inc
cmpsl
bound
pop
xor
and
ljmp
out
fucomip
cmp
cmp
sub
xchg
scas
mov
mov
pop
lahf
ljmp
test
lahf
iret
xlat
push
xchg
sbb
cmpsl
jmp
lret
dec
lea
inc
dec
ds
adc
outsb
loop
and
sarl
sub
stos
push
pop
lcall
push
push
jecxz
jg
in
mov
mov
cmp
dec
arpl
jbe
shrb
lods
and
dec
dec
or
xchg
fistps
fwait
sub
imul
mov
fnsave
mov
add
xchg
xchg
jp
aaa
bound
xor
add
movsb
das
lahf
push
adcb
inc
iret
shl
xor
out
clc
jae
push
mov
cmp
stc
xor
cmp
lahf
inc
xchg
mov
xchg
cs
xchg
and
out
and
mov
mov
lods
mov
jl
push
iret
int3
and
pop
jg
shl
or
cli
test
stos
mov
mov
ds
push
mov
fwait
rclb
std
mov
and
jle
popf
sbb
jecxz
ret
aaa
adc
mov
fwait
lock
inc
mov
cmp
fwait
adc
sbb
or
data16
mov
mov
adc
rcl
fstpt
movsl
addl
mov
rorb
fwait
sub
ljmp
cmp
dec
aas
mull
das
or
mov
xlat
push
pop
push
decl
shrb
push
aam
imul
cmpsb
mov
stos
movsb
push
fildl
mov
aas
das
push
nop
fidivrs
adc
fildl
shlb
and
add
outsb
scas
imul
add
popf
jnp
cmpsl
mov
es
xchg
pop
stos
popf
fwait
subl
lods
xorb
rorl
scas
sub
add
test
nop
call
jns
push
movsb
das
adc
and
push
cmpl
fcompl
push
cmp
loop
sbb
es
jns
leave
cmp
imulb
cmp
jo
stos
je
pop
push
fbld
add
loop
dec
cmp
sti
xor
and
pop
push
xchg
sahf
xchg
sbb
lcall
loopne
jl
mov
call
mov
push
sbb
push
aam
mov
jbe
jle
addr16
sub
mov
fcoml
sub
stos
ds
out
lcall
arpl
cltd
lret
ja
xchg
mov
addr16
cmp
and
sbb
je
es
cmp
push
sub
scas
xchg
mov
pop
in
sbb
repz
loopne
sarl
lock
inc
xchg
sub
adc
fwait
sub
in
sub
jnp
push
cltd
jecxz
cmpsl
cmpsb
xchg
loop
mov
and
cs
shrl
lcall
xor
pop
push
cwtl
aaa
movsb
push
out
xchg
push
fistpl
pop
rolb
popa
adc
jmp
test
add
cli
fwait
jp
cmpsl
fistpl
arpl
lods
push
adc
add
aam
push
loopne
ds
scas
sbb
out
popf
sub
adc
mov
gs
and
fisttpl
sub
sub
lods
mov
adc
or
xchg
gs
movsb
and
lret
jle
ss
mov
add
outsb
dec
and
xor
sub
outsl
das
push
mov
leave
sub
mov
jo
push
stc
xchg
cmpsb
arpl
addr16
daa
push
push
ret
pop
xlat
push
cmp
into
es
ljmp
jecxz
jo
scas
sub
lret
inc
push
jp
ds
out
jmpw
sub
mov
adc
in
daa
xchg
shll
jmp
pushl
dec
mov
sub
clc
sub
push
lahf
fistl
inc
inc
xchg
addr16
js
arpl
movss
fwait
adc
cmp
adc
fsubrs
mov
mov
push
mov
lods
popa
js
add
mov
cltd
in
fiaddl
add
xor
ljmp
inc
mov
push
nop
push
mov
outsb
lcall
push
icebp
mov
mov
mov
out
push
stos
xchg
imul
xchg
std
mov
imul
push
data16
imul
movsb
out
test
xchg
xor
push
sub
imulb
mov
shll
outsl
outsb
jmp
push
push
push
adc
cmp
push
push
rorb
and
ret
rclb
xlat
mov
add
mov
dec
stos
out
ljmpw
sub
fsubr
insb
sbb
pop
inc
push
imul
sbb
mov
pop
mov
push
loopne
je
cld
aaa
mov
xchg
popa
xlat
adc
mov
or
mov
xchg
fwait
lahf
mov
js
sub
mov
inc
stos
pop
aas
pusha
addr16
pusha
stos
xchg
sbb
mov
dec
clc
jnp
dec
mov
rcrb
popa
sti
push
push
mov
out
addr16
int3
xor
cmc
mov
pop
das
fldt
mov
sub
shr
mov
lret
sbb
es
jle
out
sub
sub
mov
loopne,pt
lods
lahf
and
mov
fucomi
aas
mov
jae
ret
fisttpl
xchg
mov
mov
dec
cmp
sub
mov
push
call
mov
test
mov
lahf
rcrl
lock
pop
cmpl
movsb
in
getsec
push
arpl
xchg
loopne
ds
xchg
ljmp
push
sbb
mov
or
adc
stos
lods
loopne
fwait
ret
mov
fs
sub
fwait
xchg
andl
jecxz
mov
jae
xor
pusha
in
and
pop
outsl
mov
outsb
and
mov
stos
movsb
loopne
clc
or
out
mov
xchg
fwait
push
fwait
push
cs
stos
cmpsb
jbe
jecxz,pt
in
cmpsb
xchg
mov
mov
mov
adc
lods
jbe
push
stos
sub
aam
xchg
dec
jmp
jle
cs
or
push
xchg
push
fwait
push
jg
je
xor
jp
imul
cmp
and
sbb
stos
jmp
aaa
js
fidivrl
cmpsb
push
inc
ljmp
cmp
and
in
jmp
push
aam
adc
popf
dec
std
dec
pop
cltd
sarl
jb
cltd
mov
das
shrb
out
cs
lcall
mov
and
aas
sub
push
mov
sub
ret
xchg
mov
and
scas
fdivs
aaa
outsb
imul
sti
xor
cld
and
call
fildll
mov
enter
dec
push
mov
imul
xchg
xlat
pusha
in
and
fs
rcll
in
iretw
mov
mov
add
cld
jbe
mov
xor
push
adc
xchg
imul
mov
int3
push
pusha
ret
popf
leave
xchg
imul
fisubrs
scas
movsb
je
js
mov
lahf
mov
xchg
lcall
sti
mov
mov
xchg
out
aam
nop
sahf
xchg
jmp
ljmp
mov
shld
push
lahf
mov
xchg
push
mov
cltd
clc
movsb
or
adc
inc
jp
enter
pop
jae
scas
xor
xlat
fucomip
add
xchg
sub
mov
cld
stc
xor
mov
notl
test
cmp
mov
cmp
fistl
ret
cs
push
movsl
cmpsb
es
loopne
mov
lods
mov
jl
andb
pop
movsb
mov
scas
test
bound
mov
sub
xchg
xchg
and
imul
jmp
and
mov
adc
stos
out
adc
mov
sbb
daa
outsl
pop
ja
jmp
jp
adc
mov
or
jmp
push
xchg
jmp
stos
cmp
mov
pop
loop
dec
push
mov
cltd
cmpsb
xchg
stos
mov
mov
pop
mov
mov
adc
das
scas
and
daa
lock
push
mov
ret
sarl
mov
inc
jle
lret
jmp
cmp
mov
cmp
jmp
push
xchg
imul
cwtl
aas
jl
jmp
sbb
adc
sbb
jg
test
sbb
loop
mov
add
jns
xor
jp
mov
es
mov
movsl
adcb
data16
cmp
mov
xchg
inc
cmp
xchg
std
dec
adc
lcall
ja
jb
cmp
and
add
mov
cltd
ret
mov
sarb
xchg
cli
fistpl
sub
push
ss
mov
ja
mov
rcl
outsb
pusha
xchg
mov
icebp
mov
cmpsb
loopne
jmp
sbb
or
ja
stos
loopne
sahf
loopnew
dec
inc
or
push
mov
pop
adc
fcmovnb
jle
mov
arpl
mov
pop
xchg
fists
stos
pop
cmpsl
aaa
hlt
clc
popf
test
and
push
shrb
cmp
imul
dec
gs
push
out
arpl
repnz
mov
push
rclb
popf
jl
loopne
cmpsb
cmc
dec
test
mov
sub
aam
das
mov
and
adc
in
sub
scas
jne
insb
outsl
xchg
scas
and
mov
add
sub
adc
insb
and
lcall
push
jecxz
out
rcrl
jne
pop
mov
mov
jmp
sub
scas
inc
sub
jmp
clc
mov
dec
pop
jge
pop
test
nop
sbb
push
scas
xor
cmp
movsb
hlt
xor
mov
sbb
lahf
scas
ds
push
out
cs
push
mov
cld
mov
mov
pop
and
data16
hlt
repz
jnp
pop
imul
sub
and
dec
cmp
mov
ror
ret
lods
jle
push
aad
repz
lods
test
mov
and
jle
cmp
fldenv
movsl
loopne
cmp
das
fwait
push
mov
xor
sti
idivl
orl
shl
daa
lea
pop
xchg
push
sbb
mov
mov
mov
insb
jl
push
and
notl
sub
jecxz
aas
daa
addr16
bound
mov
push
sbb
xchg
cmp
jecxz
stos
adc
aaa
mov
jp
mov
xlat
push
push
mov
mov
call
xor
cmpb
scas
mov
mov
sub
fisttps
mov
and
mov
stos
mov
aas
pop
xchg
add
push
gs
push
data16
ret
cmpsb
jbe
fnstcw
add
mov
mov
and
adc
test
or
stos
test
jg
scas
test
xchg
sbb
cmp
arpl
shll
mov
push
test
stos
es
je
imul
mov
pop
push
cs
lods
out
insb
jmp
cmp
xchg
mov
loop
and
xchg
imul
pop
mov
mov
movsb
out
daa
outsl
jb
scas
sub
lahf
outsb
xlat
icebp
pop
and
repz
pushf
daa
sub
sub
xchg
dec
in
daa
dec
mov
sbb
arpl
mov
addr16
xchg
mov
out
es
pop
ljmp
inc
mov
mov
aas
and
add
xchg
dec
leave
xchg
loope
mov
icebp
mov
dec
out
jmp
test
lods
mov
push
xchg
scas
lret
lret
cmpsl
xor
or
scas
mov
lods
sub
out
jp
dec
lahf
fisubs
daa
das
aam
xchg
push
gs
subb
mov
mov
ja
cmp
and
sub
lcall
out
nop
in
aas
loopne
mov
repz
adc
pushf
xchg
push
push
daa
mov
cmp
pop
or
popa
scas
xchg
mov
mov
jb
ret
mov
insb
jae
sub
xor
mov
adc
pushf
sbb
adc
mov
out
cmp
fbld
fwait
cmp
hlt
loopne
mov
icebp
packssdw
and
out
movsl
repz
xor
adcb
jo
or
rcll
imul
flds
pusha
push
mov
sub
ja
lock
pop
xor
sbb
push
daa
sub
mov
xor
out
push
scas
adc
test
mov
les
cmpsb
mov
jmp
xor
push
xchg
mov
scas
and
ret
aad
or
imul
adc
mov
cmp
cld
stos
ficomps
sbb
sub
shlb
and
rolb
data16
sbb
idivl
mov
cmc
loopne
icebp
mov
add
stos
out
out
ss
jmp
mov
push
jp
movl
cli
mov
movsb
cld
cmp
dec
sub
ret
out
outsb
push
inc
ds
sbb
jnp
lret
xor
and
fistpll
pop
lahf
scas
hlt
data16
jmp
mov
cmp
fstpl
and
fiaddl
loop
imul
mov
in
jg
lea
aam
xchg
scas
iret
in
push
inc
cmpsb
and
clc
push
sahf
xlat
pop
mov
mov
cmp
push
pop
ret
jmp
pop
xchg
fidivrs
cmp
test
insb
mov
rcll
or
nop
mov
repz
sbb
push
jl
push
ljmp
js
bound
jb
mov
xor
pusha
mov
sub
dec
jae
adc
test
jmp
mov
popf
adc
sbbl
faddl
mov
data16
ret
nop
divl
fwait
data16
push
stos
adc
dec
inc
movsb
fwait
xchg
pop
ljmp
and
and
ljmp
sbb
mov
cmp
jle
clc
sbb
test
jno
insl
mov
cmpsb
bound
inc
ret
xor
and
dec
addb
mov
mov
sub
xorb
ja
setns
mov
pop
aam
stc
repnz
dec
add
test
jge
test
stos
out
daa
imul
inc
dec
adc
dec
divb
dec
aaa
cmp
ljmp
and
push
jmp
test
ror
imul
adc
pop
xor
sti
pop
dec
lcall
pop
outsl
jmp
xchg
scas
stos
push
sub
scas
xchg
adc
sbb
mov
adc
mov
scas
sub
loopne
mov
xchg
in
nop
xchg
movl
scas
jle
mov
push
repnz
cltd
cmpsl
scas
stos
add
inc
push
lcall
stc
sbb
push
stos
lahf
cld
hlt
in
fdiv
lahf
mov
mov
dec
lahf
fcmovne
push
idivl
mov
rcrb
aam
das
and
test
fucomi
jp
in
inc
jg
scas
push
pop
es
lahf
xchg
cmp
test
aaa
loopne
push
scas
jnp
leave
sub
cltd
test
cli
mov
test
mov
sub
pop
lahf
stos
lahf
xor
in
dec
cmpsl
pushl
sarb
and
mov
push
sub
push
std
sarl
sub
dec
push
xchg
pop
sbb
sub
add
push
mov
cmpb
dec
push
bound
jb
addr16
jecxz
or
ret
outsb
inc
mov
push
lret
lret
stos
nop
aam
mov
stos
inc
lcall
lahf
mov
js
fwait
into
in
nop
adc
jmp
rcrl
mov
movsb
ss
sahf
daa
aam
lahf
mov
fistl
sbb
jmp
adc
add
test
add
xor
popa
jne
sub
xorl
shrb
es
fistps
pop
push
mov
outsb
push
mov
into
mov
je
mov
pop
inc
mov
out
cmp
adc
cli
and
dec
pop
adc
subl
call
jl
movsb
arpl
dec
mov
jge
hlt
leave
test
jecxz
and
jmp
call
adc
and
outsb
enter
test
mov
inc
or
inc
fisubs
sbb
jmp
dec
jecxz
jg
fisubrl
push
mov
test
mov
lea
add
aad
dec
mov
out
mov
xor
jg
pop
pop
mov
outsl
fistpll
mov
jnp
xchg
cmp
jp
dec
mov
ficomps
mov
and
and
and
xlat
sbb
push
sbb
fwait
imul
call
jg
xchg
sub
push
aam
mov
sar
inc
aas
pushl
lahf
cmp
stos
jp
fstpt
popa
pop
movsb
cmp
fsubrs
icebp
data16
mov
fwait
pop
ds
test
mov
ret
pusha
mov
fwait
lcall
adc
sti
out
jecxz
mov
and
lret
leave
outsl
adc
and
mov
mov
cmp
xchg
push
add
inc
rep
jecxz
jg
or
jo
leave
dec
int3
jmp
outsb
aad
cmp
lods
sbb
mov
mov
out
fistpl
pop
dec
shlb
xor
lahf
lds
push
xchg
adc
scas
lahf
test
mov
add
xlat
xchg
pop
sbb
adc
stos
call
lods
jge
jnp
mov
xor
sub
mov
add
fsubrl
sbb
negl
fwait
inc
push
inc
xchg
pop
add
xor
fwait
jle
mov
inc
leave
call
add
mov
mov
mov
imul
push
decl
inc
lds
mov
jg
pop
clc
imul
xchg
xchg
push
scas
or
stos
sbb
adc
cmp
mov
and
sbb
mov
sub
mov
xor
pop
push
fadds
imul
jecxz
push
sbb
repz
cmp
test
hlt
imul
inc
cld
mov
mov
call
out
roll
mov
shll
shrl
xor
mov
imul
xor
ds
mov
xchg
outsb
movsb
sub
pushf
fwait
push
lcall
jmp
cmp
and
sub
mov
out
push
add
pop
push
adc
sub
mov
jb
daa
lock
push
scas
mov
or
shll
sub
dec
mov
jp
mov
stos
out
es
insl
xor
mov
jg
mov
xor
in
pop
enter
stos
arpl
aaa
popf
mov
sbb
loop
enter
dec
push
insb
inc
test
xchg
xor
cmpsb
cmpb
push
ljmp
pop
cmp
mov
in
fsubrl
adc
cmp
and
lods
adc
mov
movsb
insb
cmp
adc
jae
fwait
push
mov
mov
xor
xor
push
xchg
add
cmpsb
mov
cmp
loope
ljmp
cli
rcrb
scas
xlat
ds
ds
lret
jne
pushf
dec
iret
adc
loop
jp
out
sbb
cmpsl
xor
cltd
aas
mov
fcomip
push
stos
jb
js
mov
push
sub
xchg
pop
push
ret
repz
daa
in
rcrl
and
cmp
push
sahf
fsts
lods
jmp
loopne
pop
pusha
mov
ret
push
pop
outsb
mov
aas
mov
or
dec
mov
mov
fisubl
mov
mov
xchg
imul
fists
jle
jecxz
cmpsl
shlb
jecxz
mov
xchg
xlat
push
roll
mov
xchg
jmp
sub
daa
push
jns
lahf
frstpm(287
lods
fstp
stos
movsb
es
cmp
arpl
mov
call
movsb
xchg
out
mov
scas
out
push
xchg
or
xchg
add
lods
dec
cmp
outsb
pop
outsl
cmpsl
lods
in
mov
sub
sbb
push
cmpsl
ds
mov
iret
das
and
sub
jmp
outsb
rolb
leave
mov
stos
pop
aaa
popf
xchg
xor
dec
fisubrs
push
adc
inc
mov
dec
cmp
mov
testb
add
adc
push
xlat
pop
repz
mov
sub
mov
fnstcw
dec
xor
or
enter
lea
rcrl
xchg
push
fildl
es
cmc
inc
sub
nop
xchg
mov
mov
arpl
outsl
roll
fcmovne
arpl
xchg
dec
arpl
pop
and
sub
cmp
jbe
fisubl
mov
in
stc
call
sarl
movsb
dec
inc
jb
idivl
pop
mov
lret
fucomp
outsb
xchg
mov
push
mov
mov
push
xchg
shll
or
mov
xchg
or
dec
sub
mov
sub
hlt
lcall
mov
stos
push
das
jmp
loop
jbe
xchg
sbb
dec
cltd
stos
push
push
mov
adc
shrl
jecxz
mull
pop
movsb
cs
in
pop
or
fwait
xor
ficomps
dec
sbb
jg
adc
pop
shll
mov
sbb
lcall
fcmovb
insb
push
dec
push
out
hlt
pop
jecxz
cmpsl
jp
xchg
aas
lahf
loope
xchg
push
test
lods
jle
push
mov
rolb
sub
dec
mov
fistpl
loop
xchg
jle
mov
sbb
aam
adc
stos
lret
rcrl
sub
loop
aam
mov
test
pop
cwtl
pop
push
fcompl
xor
and
stos
insb
call
jl
nop
pop
adc
adc
mov
jge
in
or
mov
sub
cmp
jbe
test
jecxz
lcall
lcall
xchg
pushl
sti
test
cmp
or
data16
push
xor
jns
pusha
lea
or
scas
clc
cmp
outsl
jmp
mov
adc
jae
fildl
lods
xchg
push
cmpsl
xor
xchg
sub
xor
push
jecxz
insb
xchg
movsb
aam
cmp
inc
cli
loope
sbb
add
divw
lret
dec
pop
das
aam
push
imul
add
out
data16
ss
cld
jg
loope
or
mov
cmpsb
mov
ds
test
cmpsb
mov
pop
nop
fdivrs
popa
xchg
push
popf
mov
dec
mov
push
push
mov
lahf
shlb
dec
fisttpl
xor
mov
out
push
xchg
stos
add
mov
sbb
jg
cmp
pop
in
mov
and
lock
mov
mov
lcall
in
sub
pushl
cmp
ss
in
rcl
pop
and
jae
xchg
shlb
aam
lock
pop
pop
lret
lcall
xchg
mov
pop
cmp
sbb
sub
cmp
daa
xchg
rcrb
mov
in
sub
idiv
add
movsb
rolb
dec
shrb
hlt
adc
repz
hlt
cmpsl
cwtl
shl
dec
add
mov
dec
cltd
xor
xor
push
pop
push
sbb
and
loope
cmpsl
jae
mov
loop
mov
mov
cltd
cli
cmp
fmulp
test
scas
xchg
mov
xor
push
mov
xchg
icebp
das
lcall
bound
mov
sub
test
fsubr
add
lods
stos
push
stos
jbe
cli
or
mov
xchg
sbb
lods
or
xchg
sti
push
sub
negb
nop
out
or
test
dec
jbe
jmp
ljmp
pop
sub
lods
dec
xchg
cmp
inc
xchg
lahf
mov
push
cmc
or
mov
test
movsb
mov
out
mov
inc
sahf
pop
jl
push
pop
sti
test
mov
mov
inc
fbld
lahf
out
sbb
mov
sbb
sar
rcr
repz
addr16
dec
jne
ret
fsubrs
ja
push
jae
repnz
push
packssdw
call
add
mov
mov
inc
dec
into
mov
jmp
cmp
xchg
mov
add
push
lds
jg
mov
fld
cmpb
rcl
je
xor
aas
cmp
cmp
push
mov
daa
pushf
cmpsl
std
push
jge
xor
adc
ds
and
stos
jne
imul
iret
sub
push
jl
jmp
mov
notl
ljmp
add
xchg
ret
adc
xchg
and
ds
and
outsl
movsb
test
inc
sub
cmp
loopne
out
clc
push
and
jecxz
iret
fsubr
xchg
out
adc
mov
xor
push
iret
pop
les
adc
xor
aaa
xor
outsl
adc
cmp
bsr
fucomi
xchg
cmpsl
addb
xchg
cmpb
popa
rclb
ja
shrl
mov
ret
shll
sbbl
lea
leave
sub
xchg
jae
fisttpll
rorl
jecxz
cmp
daa
pushf
hlt
mov
cmp
movq
sub
push
push
fs
mov
in
es
or
or
scas
out
lret
pop
daa
jnp
mov
popf
xchg
pushf
mov
xchg
call
enter
push
mov
shr
outsb
pop
inc
inc
mov
xchg
lods
adc
sub
add
sbb
out
andl
aas
aaa
in
shrl
lahf
pop
daa
outsl
or
push
mov
fwait
mov
out
fsincos
inc
mov
xlat
mov
scas
movsb
xor
loopne
ja
mov
subl
test
lahf
fldenv
mov
cmp
mov
mov
arpl
xor
xor
mov
ja
xorl
push
sbb
iret
jmp
jbe
aaa
pop
and
lea
xchg
mov
fsubrs
into
addr16
xor
iret
push
xchg
pop
and
xor
or
cmp
cs
outsb
add
sbb
scas
xchg
data16
ja
mov
cld
repnz
pop
jg
shll
pop
leave
loope
pop
mov
push
jne
out
mov
fbld
push
out
cs
xchg
insb
sti
rorl
dec
jns
addr16
push
jns
popf
and
mov
stos
add
pop
push
push
daa
lret
test
fwait
push
push
pushf
xchg
shlb
lods
imul
loop
imul
fisttpl
fwait
xlat
add
movsl
mov
jo
xor
dec
mov
jae
mov
sbb
mov
pop
push
jecxz
es
jno
xor
scas
subl
stos
stos
fwait
sub
roll
ss
add
testl
mov
test
in
outsl
xchg
xchg
jecxz
add
ror
daa
bswap
and
cmpsb
es
pop
sti
sbb
and
neg
mov
mov
sub
inc
mov
mov
imul
call
leave
push
pop
lods
push
inc
scas
jne
aad
xchg
mov
adc
repnz
sub
rcll
and
push
pushf
loop
mov
ljmp
lret
frstor
in
push
stos
call
mov
icebp
arpl
xchg
mov
xlat
xchg
movsw
in
in
mov
es
and
jmp
enter
lods
sbb
outsb
test
pop
loopne
shlb
pop
mov
pop
jmp
and
sti
mov
daa
push
mov
out
outsb
pusha
es
xor
repz
inc
call
lret
sbb
cmp
push
shl
jnp
push
es
xor
cmp
rol
stos
mov
dec
push
fsts
sub
push
adc
sub
ret
dec
sbb
cmp
addr16
cmp
xchg
mov
rdtsc
inc
jmp
add
ret
pop
out
pop
pop
xor
and
sub
xlat
adc
push
pop
out
push
sbb
in
stos
adc
insb
fadds
mov
loope
or
xor
cmp
imul
and
pop
inc
or
push
add
sub
cmpl
cmpl
fs
and
cmpsl
mov
pop
push
sub
mov
cmc
shrb
daa
mov
push
cmp
rcrl
adcl
out
and
loop
jb
or
jae
sahf
lret
scas
adc
push
stos
clc
das
sub
or
push
add
mov
cld
popa
addr16
mov
cmpsl
mov
test
add
sti
push
push
mov
xchg
out
inc
outsl
ss
idivb
out
xlat
sub
jecxz
mov
xchg
dec
sub
sub
mov
popa
imul
das
test
fwait
add
lock
stc
shll
mov
push
xchg
pushl
mov
sbb
mov
orl
sbb
test
push
cmpsl
adc
movsb
sbb
cmp
push
aas
inc
dec
and
cli
and
fistpl
jns
loope
mov
iret
leave
mov
or
cmp
sbb
xlat
jecxz
mov
jb
sub
jno
add
gs
subl
mov
pop
sub
test
popf
fnstcw
and
add
or
inc
out
cmpsl
mov
pop
adc
add
fwait
xchg
rclb
fwait
mov
push
sbbl
adc
xor
in
lcall
mov
fbstp
outsl
pusha
and
cmp
xor
sub
xchg
xchg
sarl
mov
and
ljmp
scas
pop
push
dec
in
xchg
repnz
push
std
add
shll
test
ret
leave
daa
mov
popf
icebp
ja
xor
sub
stos
jg
sahf
xchg
lcall
popf
ja
xchg
js
sahf
push
add
and
lret
push
cmp
jne
movsb
and
mov
mov
mull
cmp
pop
xor
dec
imul
call
sub
add
push
jo
loopne
cmp
and
jmp
sbb
inc
sahf
xor
outsb
aaa
incb
xchg
pop
aas
scas
or
jb
les
cld
mov
sbb
mov
sbb
out
push
std
or
adc
cmpsb
cmp
jnp
lahf
std
mov
daa
aaa
arpl
mov
mov
and
pop
add
xchg
test
aas
ja
inc
ret
addr16
mulb
jmp
xchg
mov
cmp
lcall
out
int
dec
iret
and
cmp
and
and
aas
fnstsw
sbb
out
mov
mulps
push
cmpl
pop
dec
jg
je
push
or
repz
incl
xchg
xchg
sahf
cmp
sub
movsb
leave
cmp
jge
pop
mov
mov
mov
jge
clc
in
addb
dec
outsl
clc
lods
fildl
dec
adc
imul
lods
enter
fistl
mov
shll
ds
std
cs
and
mov
mov
add
adc
jmp
mov
mov
jle
leave
fwait
sub
sub
adc
sti
daa
mov
mov
cmp
nop
ds
leave
cmpsl
icebp
pusha
adc
jl
xchg
rol
bound
adcl
adc
cmpsb
add
cld
popl
sub
mov
mov
test
es
sub
mulb
std
and
sbb
sbb
jmp
cmc
and
add
loopne
les
mov
push
fldenv
aas
xor
outsb
pop
lods
insb
cmp
dec
mov
jnp
nop
test
or
mov
and
jmp
xor
jnp
mov
push
rcrb
aaa
sub
cs
aaa
xlat
sbb
mov
and
cli
pop
daa
imul
shll
cmp
call
lods
rcrl
sti
ret
enter
stc
out
jae
in
call
xchg
mov
scas
testb
jg
ret
mov
ficompl
lret
in
ljmp
imul
pop
addr16
sub
dec
out
push
mov
add
push
add
xor
xor
push
mov
cli
sub
cmc
mov
sub
fisubl
mov
inc
stc
mov
adc
fucomi
jecxz
cld
mov
push
iret
sbb
je
xor
pop
fisubrs
scas
mov
ljmp
aaa
jg
push
adc
or
in
inc
das
push
icebp
xchg
in
das
daa
mov
out
lds
mov
inc
cmp
fldenv
out
loop
jb
std
mov
jnp
imulb
xor
call
sbb
add
addl
xchg
in
les
outsl
sahf
fxch
mov
test
cs
sbb
and
iret
mov
push
jo
aaa
pop
mov
pushl
dec
push
add
fidivrs
and
mov
cmp
and
mov
push
pop
push
mov
repnz
sbb
data16
ss
mov
scas
adc
jbe
loop
shll
add
pop
xchg
adc
sbb
xchg
push
add
fidivl
aam
pop
das
popf
pop
inc
fwait
out
insl
xchg
lea
cmp
push
xlat
mov
loop
and
popa
push
mov
cmp
aad
mov
xor
dec
add
or
repz
pop
mov
sub
addr16
cmp
cmp
adc
popa
inc
dec
loope
xchg
cmp
adc
je
scas
push
loopne
test
cmpsl
and
cmp
and
add
add
xor
add
popa
scas
sar
inc
imul
fbstp
lahf
jmp
sbb
push
mov
in
mov
adc
sbb
mov
dec
cmp
cmp
dec
and
jne
test
ljmp
or
out
loope
mov
mov
lock
add
xchg
push
cmp
loopne
stos
cmpsb
shll
gs
out
andb
dec
push
push
push
stc
lahf
loop
jg
shll
test
sbb
jns
fcomps
mov
jg
xlat
loope
movd
outsl
mov
pop
test
rol
mov
jb
daa
jg
xchg
and
mov
cmc
jo
mov
mov
add
out
ljmp
push
rorl
imul
add
icebp
andb
jb
mov
xor
aas
stc
mov
fadds
push
pop
call
dec
incb
push
cmpsl
jmp
xchg
std
outsl
out
lock
inc
add
lret
lret
outsb
lea
adc
out
inc
arpl
ja
jp
mov
add
jg
cmpsb
lds
cmc
push
das
sub
stc
loope
loope
jb
stc
scas
orb
cmc
fidivrl
cmp
cmp
add
push
stos
fisubl
movsb
scas
xchg
and
mov
or
and
int3
push
xchg
pop
in
jg
inc
push
and
test
ss
sbb
int3
sub
push
mov
mov
stos
mov
clc
sbb
negb
sbb
sti
stc
inc
jmp
mov
repnz
push
out
mov
mov
fs
shlb
stc
ret
add
outsl
dec
pop
testb
movsb
loopne
or
dec
push
icebp
add
mov
movntps
sar
sub
in
mov
cmp
loop
cmpsb
gs
mov
sahf
test
cmpsl
mov
inc
mov
gs
fucompp
dec
sbb
jp
insl
inc
mov
arpl
lock
jae
pop
pop
cmp
mov
or
xchg
fs
loopne
imul
cmp
sub
bnd
out
and
mov
jo
xlat
arpl
xchg
mov
test
test
dec
xlat
jmp
cmpsb
jbe
jbe
lock
mov
loopne
mov
mov
call
xor
je
cmpsl
xlat
lock
hlt
ds
mov
inc
mov
mov
lea
or
inc
cmpl
int
jo
xchg
inc
xchg
and
inc
mov
cmc
cmp
xchg
pop
mov
pop
push
mov
pop
sahf
mov
cmp
incl
clc
pushf
cmpsl
xor
and
ucomiss
aad
sub
repz
stos
jge
sbb
push
xchg
ret
mov
xor
xchg
push
in
stc
cli
stc
popf
mov
jmp
mov
daa
arpl
mov
popf
jmp
sub
mov
adc
lock
fxrstor
lods
into
out
in
icebp
dec
sub
dec
mov
pop
sub
sub
sub
leave
xchg
out
xchg
stc
out
outsl
out
xchg
sub
jecxz
push
mov
jb
mov
and
mov
mov
clc
push
cmpsb
or
jmp
test
call
lret
lcall
push
mov
mov
gs
mov
push
call
mov
pusha
jp
test
js
xor
cmpl
test
movsl
shr
aas
shld
and
xchg
test
jmp
mov
cs
mov
mov
cmp
sub
push
mov
xchg
sub
push
sub
and
sti
int3
mov
cmpsl
xchg
push
push
movsb
sub
and
mov
in
push
sti
mov
and
insb
mov
test
loope
sarb
test
sysret
jns
loope
xchg
int
or
test
loope
andl
arpl
sbb
xchg
cs
mov
js
cli
ss
fstpt
push
pop
push
jbe
movsb
push
jecxz
jbe
cli
stos
jmp
jge
xor
call
sub
repz
icebp
xor
xchg
mov
sti
arpl
repnz
mov
fdivrl
icebp
lods
mov
repz
bnd
out
sti
pop
add
lret
cmp
pop
in
cli
mov
addr16
cmp
mov
pop
sbb
rdtsc
scas
push
lock
icebp
rclb
lods
mov
add
mov
mov
mov
xor
jne
sub
or
loop
jmp
test
and
cmp
imul
adc
mov
scas
sbb
dec
fisubl
lret
leave
pop
sub
lret
test
jmp
divb
int
ljmp
dec
fwait
or
icebp
push
mov
add
fnsave
test
mov
sub
dec
cmp
sti
adc
dec
push
dec
jnp
into
sub
and
outsl
mov
dec
pop
stos
int3
lea
mov
push
dec
fwait
jne
jbe
cmp
mov
shl
mov
add
daa
xchg
xchg
je
jae
dec
in
xor
pop
inc
mov
neg
jecxz
rol
pop
lret
cmpsl
dec
aaa
test
insb
sub
jns
push
mov
cmpsb
or
jmp
stos
xor
xchg
test
or
daa
test
pusha
pop
push
leave
imul
adc
cmp
ret
ds
gs
sti
test
lods
lret
pop
pushf
mov
pusha
iret
cmpsl
mov
or
sub
mov
lods
por
sub
int
lods
stc
cmpsl
push
sub
xchg
jle
rorl
xchg
mov
sub
jmp
push
shr
mov
xor
sub
into
push
ret
jmp
and
xchg
sub
mov
shl
mov
xor
test
push
outsb
mov
es
das
testl
adc
jnp
xor
pop
push
stos
xor
out
xor
loop
sbb
outsb
addb
push
outsl
xchg
xor
pusha
jne
sub
je
push
jecxz
stos
jle
or
jl
jp
repnz
xor
dec
stos
or
sub
mov
mov
push
mov
sub
les
push
test
cmpsb
ret
jb
mov
fdivrp
imulb
sub
mov
push
dec
cmp
daa
rorl
xchg
push
in
dec
xor
adc
fadds
mov
aam
jae
push
hlt
mov
push
sbb
addr16
into
ret
cmp
dec
jecxz
xchg
ss
mov
mov
fnclex
mov
sbb
testl
mov
mov
mov
and
lods
insb
and
dec
fisttps
inc
addl
lods
push
mov
dec
lods
pushf
pop
xorl
jecxz
lahf
cmpsl
add
cld
es
lret
insl
into
sti
add
in
mov
in
adc
dec
cmp
mov
adc
mov
shrl
push
xchg
and
mov
andb
xor
dec
test
cli
ljmp
sti
stos
xor
mov
push
push
ljmp
sub
sti
xchg
das
sbb
mov
cs
hlt
sbb
int3
outsl
mov
imull
sti
or
and
or
dec
mov
dec
repz
xor
xchg
sti
stc
mov
ljmp
fscale
push
addr16
test
gs
push
sti
xchg
into
adc
mov
mov
test
push
jne
int
test
mov
xlat
dec
das
stos
push
jl
push
ljmp
jmp
dec
fidivl
adc
scas
lret
sti
mov
mov
clc
into
xchg
hlt
jno
xor
and
loop
pop
mov
inc
stos
ja
jne
pop
std
xchg
sbb
fstpt
fwait
or
mov
fwait
xor
xchg
pop
and
fistpl
ljmp
lret
dec
or
stos
pop
xchg
and
aaa
mov
stos
in
sbb
out
push
push
xchg
stos
daa
push
cmp
ja
lock
xor
inc
test
int3
sub
add
push
or
inc
cmp
arpl
mov
lret
adc
and
lret
jmp
or
ljmp
insl
mov
cmp
sbb
cmp
mov
xor
popf
adc
jae
stos
fldcw
or
test
std
int3
aad
subl
test
mov
fcoml
arpl
jmp
stos
es
cmpsb
mov
lock
stc
setb
mov
inc
addr16
sbb
pusha
je
mov
test
sub
mov
popf
xlat
stos
xchg
repnz
fldt
daa
imul
xchg
and
or
add
stos
xchg
sub
movsb
lret
insb
stos
ret
mov
jne
stos
and
xchg
imul
and
mov
daa
or
addr16
xchg
mov
jo
leave
cmpsl
stos
jmp
push
dec
xor
xor
xchg
pop
ljmp
cwtl
push
lods
andl
xchg
mov
push
mov
fwait
test
mov
ret
data16
add
mov
in
stos
test
mov
jle
popf
mov
ss
mov
cwtl
clc
scas
cltd
sub
mov
and
jb
mov
mov
push
movsb
ljmp
cmp
push
test
clc
mov
xchg
test
roll
or
stos
in
pop
adcl
xor
stos
into
movsl
fwait
xor
cltd
xchg
sub
inc
pop
int3
sub
stos
or
or
cmpsl
mov
test
leave
adc
data16
scas
cmp
repz
jmp
aaa
xor
mov
in
call
or
cmp
ret
movsl
and
push
push
pop
xchg
aas
ret
repz
in
dec
stos
imul
int3
nop
dec
stos
repnz
push
cmpsl
cld
mov
add
fstl
stos
sub
ret
mov
mov
stos
lods
add
or
add
sub
mov
lret
test
or
mov
movsb
xchg
dec
cs
sbb
jmp
jle
adcl
jl
mov
mov
stos
test
add
jg
pop
adc
stos
cli
cmpb
push
stos
xlat
fucomi
cmp
into
mov
mov
mulb
imul
fucomi
jp
in
scas
std
push
or
cltd
imul
cmp
xorb
ljmp
pusha
sti
cltd
or
xchg
aas
lods
shrl
or
fidivrs
in
rolb
aam
mov
mov
mov
sbb
xor
dec
or
aad
out
stos
rcrb
leave
mov
je
stos
xchg
push
xlat
test
les
mov
out
mov
mov
inc
aad
stos
mov
push
mov
cld
or
sub
inc
mov
js
mov
add
lret
xlat
pop
adc
cmp
push
mov
cmp
xor
xchg
xor
aaa
xchg
ljmp
jmp
push
stos
jecxz
sbb
insb
sbbb
cli
cltd
mov
out
sub
push
push
pop
sahf
xchg
push
pop
dec
mov
mov
stos
add
jnp
movsb
sbb
push
test
sti
push
or
jmp
ret
stos
sbb
ljmp
nop
out
lea
addr16
stos
xchg
cli
push
cwtl
dec
psllw
pop
xlat
stos
scas
jb
aas
cmpsl
push
dec
or
or
xlat
scas
mov
xchg
roll
notb
mov
or
int3
pop
lods
sub
inc
mov
mov
add
and
out
or
cmpsl
pop
sbb
mov
push
push
mov
cmpsl
push
enter
fs
sti
jbe
imul
fmuls
fcompl
dec
push
xchg
enter
jne
lods
in
xchg
fwait
push
sub
cmp
mov
xor
and
jle
lret
and
fisttpll
mov
shl
out
and
out
lret
jmp
mov
adc
les
cmpsl
dec
xor
stos
sbb
adc
mov
test
xor
mov
cmp
jne
std
xchg
cmp
and
stos
out
leave
out
sti
xor
popf
dec
xchg
sub
int3
addr16
imul
arpl
push
cmp
push
xchg
cmp
rcll
jl
aam
pusha
stos
movsb
lds
movsl
ss
stos
les
cmp
push
sub
push
push
fcmovnb
iret
adc
add
pop
sub
subb
mov
and
popl
stos
pop
mov
jg
insb
or
stos
idivl
dec
lea
notb
lret
inc
stos
pop
mov
cltd
xchg
add
jg
inc
arpl
sub
addr16
inc
mov
pop
mov
stos
out
subl
xor
xchg
and
mov
push
out
cmpl
adc
subl
stos
fwait
adc
cmp
sbbb
icebp
movsb
mov
cli
fldt
inc
cmp
fcmovb
lods
out
daa
inc
mov
pop
mov
and
mov
lds
imul
fwait
je
sarl
dec
jo
mov
xchg
mov
mov
in
cld
inc
or
stos
ret
jg
sahf
jae
mov
fiaddl
pop
mov
in
cmp
lods
or
push
cmp
or
push
into
sub
cltd
xchg
inc
sbb
dec
rorl
addr16
divl
stos
xor
fcompl
aas
fistps
mov
jmp
stos
aaa
loope
cmp
stos
mov
repz
hlt
sub
sbb
dec
arpl
xchg
mov
and
shll
mov
lahf
push
imul
mov
movsb
cmp
sub
mov
and
or
jl
addr16
stos
sub
push
scas
js
out
push
jmp
jecxz
sub
xchg
xchg
sub
or
push
mov
stos
sbbb
push
bound
jl
jle
inc
adc
stos
push
enter
sbb
enter
dec
fwait
push
stos
bound
jno
stos
add
sub
std
stos
int3
imul
pop
shll
add
stos
dec
int3
jb
and
repnz
mov
gs
sbb
jbe
mov
in
push
add
xor
data16
lret
push
pop
les
jp
mov
xor
ret
cmp
pop
jns
lahf
push
mov
mov
push
pushf
xchg
inc
stos
loopne
fcmovnbe
xor
adc
xchg
sbb
push
adc
into
xchg
xchg
jmp
sub
in
pop
cwtl
idivl
xor
pop
gs
imul
ljmp
stos
rolb
pop
stos
fisttps
addr16
stos
adc
clc
xchg
scas
xchg
cmp
in
and
jae
shl
movsb
mov
scas
xor
stos
inc
inc
mov
or
icebp
jmp
mov
jp
int
mov
nop
mov
cmpsl
sarl
cltd
sub
mov
fcomps
mov
inc
or
push
fwait
push
xchg
cmpb
adc
stos
dec
jns
lcall
xchg
or
stos
or
outsl
jno
pop
dec
push
cmp
mov
mov
xchg
jno
xor
arpl
stos
lret
mov
mov
mov
shrl
pusha
repnz
in
stos
aaa
jb
das
jge
scas
out
arpl
hlt
mov
cmp
stos
cmpl
dec
mov
adc
jmp
dec
inc
cmp
push
stos
xor
movsl
sub
pop
int3
and
fstl
stos
or
lret
repnz
xor
xchg
dec
sbb
hlt
push
nop
icebp
lahf
movsl
inc
ret
mov
jnp
xchg
xor
jmp
shr
sarl
lods
sbb
and
fmul
cmpsl
xor
jo
xchg
sub
inc
xchg
stos
xlat
push
outsb
incb
out
lods
daa
xchg
push
push
ljmp
stos
cli
push
jmp
mov
mov
pop
cmpb
mov
mov
stos
loop
xorl
shll
stos
enter
inc
pop
jp
addr16
fnstcw
ss
pop
loop
jnp
inc
stos
mov
cmp
ljmp
dec
mov
loopne
cli
mov
mov
xchg
dec
stos
add
sbb
ret
arpl
mov
cs
pop
jo
std
stos
neg
cmp
sbb
stos
adc
icebp
mov
lahf
aam
mov
jae
jmp
push
int
push
movsb
test
cli
stos
cmp
es
jmp
push
xchg
jae
inc
xchg
repnz
sti
aaa
mov
bound
std
lods
stos
xchg
adc
or
mov
int3
xchg
std
cmp
mov
push
nop
inc
inc
outsb
icebp
in
and
je
in
roll
jl
rcrb
int
xchg
in
movsb
mov
mov
dec
mov
inc
jbe
inc
lea
sbb
cmp
iret
cmp
mov
push
xchg
stos
sub
lahf
inc
std
or
or
adc
cmpsl
stos
gs
shlb
stos
subb
popa
ljmp
xor
mov
fcomp
imul
mov
mov
popa
cwtl
das
pop
cli
xchg
xchg
inc
loopne
pop
stos
ds
aaa
cmp
stos
mov
adcl
subb
sarb
xchg
pop
push
stos
inc
dec
imul
inc
clc
jmp
mov
push
cmpl
fisubs
xchg
dec
jge
ret
lea
mov
mov
inc
jl
stos
cli
outsb
and
mov
mov
stos
nop
dec
iret
mov
stos
gs
xchg
xchg
fwait
inc
push
dec
jecxz
pop
jne
test
fdivrs
scas
jno
stos
mov
loopne
lds
xchg
outsl
std
pop
stc
fwait
xlat
lret
sbb
dec
or
inc
stos
lock
stos
into
js
mov
stos
xchg
repnz
pop
stos
push
xchg
je
sbb
pusha
aaa
push
imul
and
out
jns
mov
leave
pop
pop
imul
in
icebp
popa
mov
lret
mov
lods
hlt
dec
xchg
leave
push
xor
stos
or
in
mov
xchg
fs
mov
inc
jnp
jmp
outsl
mov
popf
push
fscale
push
and
or
inc
popa
and
dec
stos
mov
dec
fstpl
fildl
stc
sub
les
dec
mov
mov
sub
fcompp
inc
cmpsb
aad
and
jnp
pop
stos
mov
xlat
outsl
cwtl
pop
rep
pop
and
sbb
mov
fdivs
mov
stos
xchg
fsubrl
stos
das
dec
cwtl
pushf
and
add
mov
faddl
test
jns
imul
lret
popa
mov
lock
cmp
loopne
sahf
pop
jbe
stos
mulb
test
into
jnp
push
xor
jmp
add
mov
sbb
ljmp
mov
arpl
cld
mov
inc
add
int
out
mov
mov
rcrl
lods
add
data16
push
mov
mov
cwtl
mov
test
jge
xchg
or
stos
pop
mov
jle
sub
add
subl
push
stos
mov
outsl
and
inc
fimuls
addr16
sti
add
iret
stos
or
mov
sub
imul
pop
push
loopne
adc
and
not
ss
aas
inc
insb
int3
lret
push
sub
and
push
add
mov
and
sub
push
movsl
add
hlt
xchg
test
lret
in
stos
ljmp
stos
add
outsl
fsubs
sbb
mull
inc
dec
stos
ds
fs
into
dec
shrb
inc
add
sbb
stos
in
push
pop
pusha
lods
outsb
aas
mov
cmpsb
cmpsl
jmp
dec
stos
sub
stc
lea
repnz
stos
fimull
popa
xchg
test
les
icebp
push
xor
arpl
aas
mov
out
mov
sbb
mov
int3
jmp
push
rcll
add
in
stos
inc
sbb
mov
adc
xorb
jae
out
inc
stos
add
fcomps
jp
jbe
xchg
lcall
jge
scas
int3
dec
xchg
int
push
cltd
pop
mov
mov
mov
stos
mov
bound
lret
cs
sbb
addr16
arpl
data16
jmp
out
fnsave
dec
repz
push
imul
or
mov
xor
rcrb
pop
stos
xor
loopne
fcomps
cmp
or
push
sbbb
sti
push
popf
jecxz
inc
sysexit
std
mov
out
aas
push
stos
mov
mov
cs
rolb
jge
lcall
add
inc
jmp
xchg
cmc
cwtl
les
xchg
shrl
fld
adc
negl
mov
lret
call
pop
xor
fisttpll
stos
pushf
jne
enter
into
out
ror
popf
sbb
aas
test
fistpll
stos
dec
fisttpll
fcoms
dec
out
adc
in
cmp
cmpsl
cmp
jge
std
enter
dec
stos
or
xchg
mov
push
rolb
call
and
sbb
in
loop
int3
cmp
shrl
clc
pop
mov
ret
stos
mov
in
dec
das
cmp
repz
dec
mov
push
popf
stos
push
sub
pushf
out
rcrb
stos
mov
pop
cwtl
xchg
stos
fidivrl
pop
lock
push
repnz
test
ljmp
stos
stos
repz
jp
mov
dec
stos
fidivrl
push
cld
fisubrs
roll
jne
scas
sub
stc
sbb
mov
adc
inc
mov
xor
dec
xchg
pop
dec
test
hlt
sub
mov
cld
jmp
jmp
or
scas
jecxz,pn
rorb
inc
cmc
xchg
jmp
stos
jl
push
pop
push
dec
aam
dec
inc
cltd
push
inc
das
das
lcall
add
andb
popa
dec
add
cmp
dec
ljmp
fwait
cmp
loopne
out
setge
outsl
lds
nop
into
jmp
jmp
mov
dec
dec
mov
icebp
xchg
out
in
shrl
cwtl
adc
cmp
mov
scas
stos
lods
cmp
mov
adc
cmp
int3
mov
xchg
subl
or
int
stos
jbe
cmp
and
aad
stos
enter
xchg
stos
cli
inc
hlt
insl
push
dec
fwait
pop
arpl
push
mov
mov
stos
sti
mov
jge
ja
mov
push
fcompl
mov
stos
pop
inc
fbstp
and
adc
mov
push
xor
clc
leave
add
push
jl
mov
pop
inc
stos
cmp
xlat
and
mov
adcl
inc
bound
xor
sti
cs
pop
push
in
jle
mov
mov
mov
inc
sti
cmp
sub
xchg
shl
mov
add
xchg
jp
pop
out
xchg
stos
imulb
jbe
and
lahf
stos
mov
pusha
sbbl
aam
mov
in
scas
push
stos
shl
xchg
ret
dec
jmp
out
dec
xchg
stos
push
fs
inc
lret
sub
mov
subb
cmpsb
push
xor
push
loopne
iret
xchg
cli
push
push
scas
xor
call
cmp
cmpsb
lods
rep
inc
add
xchg
sbb
jnp
xchg
mov
imul
arpl
rorb
jge
jbe
stos
sti
push
cmpsl
mov
int
gs
fldenv
jmp
mov
jmp
pop
hlt
ss
jg
dec
sbb
xchg
mov
cmp
int
mov
inc
outsb
adcb
mov
jo
inc
add
xor
es
fstpt
stos
das
insb
ja
or
imul
and
mov
sub
dec
sub
mov
test
add
or
xor
stos
mov
stos
addr16
outsb
jae
stos
repnz
inc
imul
ret
xchg
sub
or
gs
mov
incb
stos
cmp
fs
mov
cmp
popf
mov
jbe
out
jl
stos
sub
test
push
add
sti
jmp
pop
mov
xor
mov
pop
mov
add
es
loop
sbb
sbb
hlt
jge
shlb
setp
enter
imul
xchg
in
xor
pushf
xchg
shlb
pop
jp
adc
jmp
imulb
repz
or
xor
loopne
and
lea
stos
sbb
jo
jge
stos
test
jno
dec
test
mov
push
stos
test
cmp
outsb
stos
outsl
fisttps
pop
mov
mulb
sub
xchg
mov
push
imul
cmpsl
fnstsw
stos
test
jne
dec
sbb
sbb
mov
jmp
stos
out
adc
add
inc
adc
mov
movsb
adc
dec
stos
sbb
leave
popa
lret
imul
xchg
outsl
shrl
or
out
cmp
rorb
mov
adc
cmpsb
push
mov
rclb
cmp
lret
mov
in
gs
movsl
mov
pop
popa
je
xchg
bound
adc
adc
mov
sbb
stos
ds
pop
fldt
std
scas
iret
lods
jns
addr16
stos
shll
mov
pop
inc
mov
cmpsb
das
cmp
bnd
lahf
sub
push
jb
jne
xchg
sbb
addr16
pop
mov
int
lods
push
dec
mov
sbb
pop
pop
jo
leave
stos
mov
adc
hlt
cli
std
inc
stos
cmp
push
cmp
sbb
jmp
movsb
subl
imul
push
leave
stos
mov
fcomps
mov
add
insl
in
xchg
xchg
pop
scas
add
ds
mov
mov
outsl
pop
sahf
pop
stos
cmpsb
and
addr16
sub
mov
test
jl
icebp
sub
mov
stos
in
stos
lods
xor
xchg
imul
jge
xchg
inc
add
mov
sbb
mov
repnz
stos
das
mov
inc
lock
push
xor
xchg
arpl
lds
movsb
sbb
out
daa
and
and
shrl
clc
rolb
pop
adc
xor
mov
mov
ss
adc
push
out
dec
adc
push
or
stos
xor
movsl
or
jp
xor
push
repz
mov
shl
jle
jno
xchg
pop
into
sub
or
dec
subb
inc
dec
test
aaa
cmpsl
lods
jmp
rcrb
pop
mov
stos
repnz
aas
into
lahf
insl
cmp
stos
popa
pop
test
xchg
lods
sub
jo
pop
movsb
arpl
and
mov
mov
or
repz
addr16
pop
cmp
mov
xchg
sbb
adc
cmc
sub
pop
or
or
stos
sbb
outsb
rorb
int3
cltd
stos
push
or
stos
loopne
jl
mov
insb
mov
jp
jmp
icebp
aaa
cwtl
mov
push
fwait
xor
sub
stos
pop
leave
mov
movlps
stos
jp
lods
cmp
loope
mov
xor
pop
out
cld
push
popf
mov
test
xor
cmp
jmp
cmp
sub
in
mov
sbb
out
mov
stos
or
dec
mov
stos
call
fwait
xor
or
push
fcmovne
std
rol
lods
test
jbe
add
inc
stos
jg
jo
cmc
call
dec
pop
mov
test
push
dec
add
out
or
std
pop
lret
sbb
addr16
cmpsb
pop
andl
out
imulb
leave
lock
add
cltd
add
cwtl
int
push
pop
out
push
sbb
sti
mov
xor
ds
fsubrs
cmp
mov
mov
fiaddl
shll
sbb
jp
sbb
stos
cmc
or
dec
out
orl
sbb
das
xchg
loopne
scas
inc
sub
adc
wrmsr
xchg
sarl
pop
xchg
inc
mov
jp
mov
xor
divl
imul
xchg
insb
stos
cmp
ret
js
jmp
loopne
xchg
ss
lea
scas
in
xor
sarb
pop
js
nop
jge
mov
jle
dec
gs
add
push
or
je
or
stos
movsl
daa
mov
out
enter
rorl
nop
insl
and
stos
push
mov
sti
inc
mov
das
and
add
bound
xchg
dec
mov
testb
add
daa
stos
or
mov
andb
es
mov
jno
mov
adc
roll
cli
cmp
sub
cmp
mov
adc
stos
jb
rorb
mov
sub
adcl
push
int3
stos
sahf
lock
cmpsl
loopne
sbb
stos
mov
in
popa
xor
push
fsubs
imul
cmp
insl
pop
push
gs
push
sbb
adc
and
mov
stos
cld
js
and
bts
test
jl
loope
adc
pop
mov
pop
in
stos
dec
xor
mov
stos
aas
movsb
fimuls
stos
sarb
jae
jno
push
mov
in
xchg
mov
mov
cmp
rorl
adc
stos
rolb
loopne
aam
mov
push
insb
dec
push
jnp
fsts
stos
or
bound
jmp
lock
imul
or
adc
int
mov
addl
fldl
in
xor
cmp
cmp
pusha
jo
ja
sub
icebp
dec
inc
dec
stos
stos
or
mov
stos
mov
mov
fcmovne
lahf
dec
stos
orb
xchg
int
mov
inc
push
popf
or
jbe
nop
push
xchg
xor
arpl
jmp
jb
je
inc
pop
subl
add
inc
jae
and
in
pop
inc
push
sti
stos
add
add
xlat
pop
jl
sbbl
mov
add
sub
pop
push
dec
xchg
mov
inc
movsb
rclb
dec
sub
xchg
aaa
cmp
sub
jb
cmpsl
jmp
push
ds
cld
dec
mov
stos
ss
es
dec
adc
xor
sbb
inc
aas
pop
clc
in
stos
and
sub
stos
leave
mov
stos
jl
bound
xchg
daa
pop
jae
cmpsb
loope
stos
pop
sub
push
test
sbb
icebp
xlat
jg
xchg
xchg
in
stos
or
jle
cli
sub
jge
cltd
std
inc
call
stos
lcall
dec
cmp
mov
xor
popa
in
xchg
aad
sbb
lret
sbb
mov
loop
jmp
mov
push
xor
shr
pop
sti
inc
push
stos
fcomp
sbb
pop
scas
mov
stos
add
inc
push
outsl
int
stos
xor
or
push
dec
test
orb
subb
jge
test
xchg
std
mov
stos
ja
ret
lds
add
outsl
push
lods
pop
lods
jl
inc
cltd
lods
sub
jb
lahf
jno
push
stos
jp
ret
lcall
lahf
sahf
cmpsb
sbbb
fs
icebp
cmpl
sub
push
xchg
mov
adc
jns
popf
pushf
add
adc
mov
push
mov
stc
cmp
pop
push
scas
mov
fdivrs
and
xor
mov
ret
mov
xchg
adc
outsb
decb
sub
xor
push
and
inc
rolb
gs
inc
stos
xchg
jecxz
sub
lahf
jbe
loopne
scas
jmp
jge
imul
pop
scas
pop
loop
aam
mov
mov
and
mov
add
cmp
stos
mov
push
fidivrl
and
out
out
scas
clc
xchg
leave
in
dec
mov
jmp
mov
stos
je
dec
or
aad
in
hlt
cmp
pop
xor
stos
fstpl
in
outsl
xor
mov
loope
xchg
stos
mov
das
fiaddl
rcr
lds
mov
shll
aaa
sub
stos
dec
mov
mov
ss
adc
mov
dec
dec
dec
xchg
stos
mov
shll
push
jbe
jmp
sbb
xor
xchg
lret
stos
dec
jle
adc
sbb
dec
nop
outsb
mov
ja
and
sub
pop
cmp
xchg
push
xchg
imul
xchg
jae
sti
dec
mov
pusha
mov
addr16
leave
add
pop
jo
in
call
adc
insl
movsl
mov
mov
stos
xlat
cmp
daa
rclb
in
insl
fisttpll
adc
lds
popf
push
mov
aas
int
mov
je
fnstsw
das
stos
pusha
jns
xor
sub
and
mov
mov
or
stos
and
add
dec
hlt
adc
push
push
test
stos
bound
ret
stos
scas
push
pop
add
mov
cmp
mov
stos
bound
or
mov
or
lods
mov
lods
or
adc
sub
xchg
dec
shll
push
stos
mov
cmpsb
imul
mov
xchg
push
xchg
jp
mov
int3
js
jmp
xchg
stos
xor
mov
icebp
or
mov
mov
and
stos
fwait
pop
jnp
loope
outsl
xchg
cmp
jns
or
ret
stos
pop
or
xor
jb
dec
pop
scas
sub
jge
xchg
subb
pop
dec
and
stos
sbb
jge
sub
adc
ja
jmp
mov
das
xchg
rorl
jmp
cltd
cmp
notl
stos
xchg
jns
inc
jnp
sub
stos
or
push
ror
xchg
test
cmp
dec
push
out
cmp
sbbl
inc
add
cli
stos
mov
mov
sahf
jmp
mov
js
in
xor
xor
add
mov
orl
xor
sbb
xor
ljmp
push
ret
push
fucomp
fsubs
enter
push
dec
push
mov
jno
adc
push
ret
inc
add
xchg
popa
fiadds
hlt
insb
mov
sbb
std
push
insl
sub
rep
dec
adc
push
out
lret
sarb
mov
mov
xchg
outsb
dec
mov
stos
cmp
xor
adc
lahf
dec
repz
xchg
dec
fisubrs
rcrb
xchg
mov
popa
imull
mov
fwait
insl
mov
movlps
ljmp
out
cwtl
bound
cmp
add
outsl
inc
lods
jge
and
subl
jmp
xorl
fildll
decl
mov
and
xchg
rclb
arpl
pushf
dec
mov
fisubrl
icebp
sub
push
cmpsl
lods
inc
sbb
popa
addr16
int
insb
stos
shll
dec
stos
xchg
lds
daa
std
cmc
fwait
adc
dec
outsl
adc
mov
jmp
push
daa
mov
loopne
push
adc
and
stos
pop
nop
inc
push
adc
sti
jg
and
cmc
stos
mov
loop
inc
stos
lock
mov
push
insb
adc
cmp
stos
mov
into
ja
stos
aas
and
nop
cmp
dec
daa
scas
xchg
jl
mov
sbbb
sub
xor
adc
ret
roll
iret
mov
sub
fcompl
ljmp
aas
adc
pushf
arpl
mov
mov
and
mov
jne
test
push
push
pop
lahf
push
loop
xchg
ret
dec
stos
data16
subl
cmp
stos
cmpsl
shrl
mov
push
xchg
dec
pop
popf
in
xchg
mov
stc
inc
fwait
mov
stos
lcall
fdivrl
cmpsl
loope
add
lds
je
mov
pop
stos
shll
cmp
test
icebp
lea
jmp
shll
mov
bound
inc
fwait
pop
addb
sub
push
push
push
mov
push
outsb
jp
mov
std
fdivl
mov
push
cmp
aam
subb
inc
out
sub
mov
sbb
stc
stos
sbb
jnp
addb
xchg
stos
leave
daa
or
out
inc
dec
cmp
jge
jo
stos
push
push
sbb
test
ljmp
idivb
nop
stos
push
cmp
scas
movsb
add
stos
and
fimull
cli
xchg
pop
stc
xor
mov
push
scas
sub
in
aam
fwait
in
push
test
ljmp
sbb
stos
sbb
dec
push
loop
data16
push
sub
hlt
aas
mov
in
cmc
andb
xor
or
mov
lret
adc
fwait
pop
pop
leave
jns
mov
stos
mov
aaa
stos
pop
and
lds
dec
or
stos
sbb
andb
jno
fldl
cmp
pop
or
pop
cmc
mov
mov
push
pop
sub
and
stos
fisttpll
xchg
xchg
sbb
cmp
ja
sub
push
dec
inc
mov
shr
in
fwait
pop
xchg
pop
jb
mov
addr16
stos
inc
mov
mov
cmpsb
sbb
jp
add
leave
mov
es
popa
mov
into
cwtl
stos
aam
dec
xchg
mov
lods
cld
iret
js
mov
adc
insb
pushf
cli
stos
aas
jbe
sub
and
dec
cmp
daa
mov
and
adc
push
ret
inc
rorl
dec
pop
push
mov
lea
clc
in
sub
mov
and
xorb
push
xor
arpl
mov
sar
cmpsl
and
faddl
fidivrs
frstor
dec
stos
hlt
shll
pushf
cmpl
lcall
cmpsl
insl
lret
stos
ja
xor
jge
cli
imul
inc
pusha
jl
stos
pushf
out
sub
mov
mov
outsl
and
xor
push
dec
pop
inc
stos
add
push
int
lods
add
mov
cmp
jne
stos
ljmp
test
popf
outsb
and
stos
lret
pop
push
movsl
std
daa
stos
loop
pop
sub
cmpsl
stos
inc
scas
pop
hlt
lret
out
add
stos
std
pop
inc
or
and
jbe
jnp
scas
das
sub
bound
or
xchg
jecxz
stos
mov
test
or
sbb
cmp
jl
cmpsl
jbe
jb
pop
jecxz
xchg
popa
sub
ja
xchg
fistl
cmpsl
enter
stos
push
jmp
xor
cmp
xchg
pop
shlb
inc
lods
mov
js
je
hlt
scas
in
lcall
dec
movsl
pop
test
stos
idivl
jnp
stos
insl
inc
jp
push
rclb
stos
shlb
xchg
mov
and
ja
stos
sti
adc
insl
push
in
daa
stos
adc
push
pop
jl
cmc
mov
ljmp
mov
outsl
sbb
fwait
lea
stos
stos
jb
mov
jge
and
mov
cltd
stos
daa
dec
cmp
imul
pop
mov
mov
push
sbb
sub
mov
scas
adc
mov
test
xchg
pop
push
inc
fstl
inc
iret
jp
cmpsl
pop
mov
imul
mov
fistps
mov
jp
inc
cmp
outsb
push
movsl
enter
add
sub
mov
stos
xor
es
mov
and
lods
rcrl
mov
lods
sets
adc
xchg
mov
jo
stos
mov
sbb
enter
adc
or
out
stos
addr16
or
les
addr16
into
rcrb
fsubrl
xchg
xchg
arpl
sbb
stos
inc
inc
loopne
mov
jg
xchg
mov
test
lods
xchg
stos
mov
xchg
ret
mov
mov
dec
adc
xor
pop
dec
cs
xchg
mov
cld
pusha
dec
or
stos
add
dec
jecxz
addr16
insl
xorb
stos
cmc
insb
cld
jnp
imul
lea
jl
call
jp
stos
mov
mov
cmp
pop
shlb
enter
fcompl
xchg
movsb
lahf
inc
inc
fwait
leave
mov
jnp
sub
push
in
or
pop
gs
call
add
xchg
mov
and
jecxz
rcrb
notl
stos
das
dec
cmp
jb
test
mov
in
mov
arpl
jne
and
inc
mov
jae
pop
adc
dec
imull
imulb
sti
mov
pop
pop
mov
xchg
dec
out
orl
out
mov
mov
test
stos
cld
pop
pop
xor
dec
and
ret
jns
dec
xor
inc
cmp
test
sub
sub
sub
push
stos
movsl
push
mov
stos
clc
js
mov
shr
push
mov
stc
stos
cmp
aad
orl
mov
cmp
fwait
stos
sbb
and
pop
inc
call
mov
jecxz,pn
push
xor
ret
stos
or
lahf
sti
mov
inc
pop
test
pusha
jae
xchg
cmc
and
sub
or
mov
sub
movsb
repz
fwait
mov
cmc
jb
dec
stos
enter
es
xchg
pop
into
add
adc
mov
or
fnstenv
test
rorb
push
fildll
lock
cmp
mov
and
xchg
das
fstpl
stos
cmpb
daa
lods
pop
add
mov
and
pushf
mov
dec
add
stos
and
mov
stos
mov
sahf
adc
pop
add
cmpsb
test
lods
fsubrs
or
jne
stos
xchg
and
add
and
jns
nop
int
jnp
push
stc
sarl
mov
pop
push
dec
xchg
fmull
ljmp
test
mov
and
dec
int
mov
mov
sbb
lahf
inc
mov
sahf
xchg
mov
pop
mov
stos
loopne
out
ljmp
inc
push
fbld
subb
or
out
cld
sti
stos
cmp
sub
jmp
scas
mov
aad
scas
mov
loop
dec
cmp
or
stos
lret
mov
or
popa
cs
mov
roll
aad
pusha
movsb
jnp
push
xchg
sbb
lods
lds
mov
mov
lcall
aaa
mov
mov
es
movsl
xchg
lcall
cmpsb
push
mov
sub
sbb
jb
repz
pushf
popa
aaa
add
pop
xor
adcb
jmp
test
clc
das
sbbl
xchg
outsl
stos
or
mov
stos
and
nop
xchg
and
pusha
push
mov
test
mov
insl
adc
pushf
daa
ret
pop
adc
mov
repz
cld
scas
std
imul
mov
and
scas
in
mov
push
aaa
test
test
xlat
daa
mov
dec
fwait
sbb
stos
rorb
push
stos
sbb
aad
scas
stos
xlat
aaa
das
outsl
xor
stos
je
pop
int3
jg
pop
xchg
and
stos
mov
arpl
add
lret
hlt
fs
lret
xchg
movsb
fwait
repz
mov
push
cmc
sub
or
sbb
iret
je
addr16
mov
xor
mov
adc
in
adc
inc
mov
punpckhwd
lahf
fstpl
test
jle
dec
into
inc
stos
adc
sub
fsubrl
push
sub
stos
adc
hlt
in
push
orb
std
dec
push
xchg
pop
sub
stos
jns
sub
nop
repnz
inc
inc
push
js
popf
aas
stos
adc
fsub
mov
dec
jle
jmp
mov
stos
scas
scas
sub
iret
cmpsl
stos
mov
push
imulb
lahf
adc
ljmp
inc
cmc
popa
int3
aam
xor
test
adc
mov
popa
push
cmc
pop
stos
sub
lods
xchg
sahf
cmp
test
inc
mov
dec
jno
adc
xor
xchg
out
outsb
push
mov
or
std
roll
stos
mov
or
stos
jge
stos
lods
data16
daa
stos
dec
mov
rcrb
loop
push
std
push
stos
lock
lret
stos
cltd
rep
inc
xchg
or
ret
jmp
scas
stos
jne
test
jle,pn
lret
ret
mov
mov
jmp
test
push
xchg
xor
stos
js
jecxz
lahf
das
jne
add
sahf
fwait
stos
mov
push
das
sbb
lret
and
cltd
add
xor
pop
jb
pop
repnz
pop
icebp
jmp
xor
dec
stc
sub
fwait
mov
test
stc
ja
clc
stos
shll
cmpsl
ljmp
adc
addr16
ret
shrb
xor
mov
mov
jae
stos
in
mov
inc
stos
dec
dec
mov
test
push
daa
imul
hlt
mov
jns
scas
stos
insl
int
cwtl
cmpsl
xchg
and
fsubrl
dec
jb
jmp
cmpsb
mov
xchg
dec
subb
mov
imul
lods
sub
das
je
orl
movsb
arpl
addr16
jp
or
jmp
lret
test
stos
xchg
popf
pop
jno
stos
mov
and
cmp
and
push
mov
and
fs
mov
outsl
and
leave
das
inc
stos
fnstenv
stos
push
lods
call
inc
stos
add
xor
inc
jl
stos
cmp
bound
loopew
or
jp
sbb
fwait
in
subw
pop
mov
inc
repnz
cmp
cli
lahf
mov
scas
ss
je
loop
lds
stos
mov
repnz
jno
or
js
push
and
xor
mov
aas
and
push
stos
mov
dec
sub
mov
xchg
int
mov
mov
subb
inc
imul
push
push
fnstenv
test
es
xchg
sub
xor
mov
dec
mov
and
subl
movsl
jmp
div
jl
int3
mov
ja
push
stos
std
stc
lret
stos
add
lods
or
cmp
lock
stos
xchg
test
cwtl
fsubrp
in
test
mov
jne
stos
xchg
cmp
add
push
cmp
lods
xchg
daa
in
xor
sti
jae
stos
lcall
push
stos
jmp
sub
outsl
imul
pop
stos
sub
pushf
push
in
rorb
cmp
fiadds
int3
imul
mov
in
stos
and
std
in
pop
test
stos
scas
pop
dec
add
stos
test
sub
adc
xor
xchg
mov
pop
test
aaa
xchg
xchg
lods
jecxz
sbb
nop
outsb
dec
es
int3
stos
or
xchg
push
push
sti
loope
mov
adc
add
push
fld
leave
ds
in
inc
inc
sarl
sub
lret
push
pusha
cli
fimuls
std
xchg
jae
jmp
mov
push
pop
inc
jecxz
stos
stos
sub
sti
inc
cltd
and
inc
add
stos
rcrl
pop
stos
cmp
int
notl
stos
or
add
push
dec
xchg
dec
fcmovnu
mov
sarl
cmp
sbb
push
iret
imul
cld
aaa
mov
mov
scas
cld
loopne
xor
sub
iret
daa
fisubl
push
xchg
dec
or
aaa
push
xor
xchg
andb
inc
movsb
sbb
lahf
mov
rorl
subb
push
ja
jp
xchg
mov
add
lret
stos
ret
cmp
jle
stc
rcll
test
add
cmc
mov
mov
scas
iret
sub
ret
xchg
mov
xchg
jnp
imul
xor
cmpsl
daa
lahf
mov
das
ja
sbb
popf
roll
sub
scas
nop
dec
mov
in
jne
stos
fidivrl
stos
add
mov
xor
test
stos
lds
mov
into
sub
xor
movsb
sarl
dec
jp
les
gs
ror
stc
jg
nop
adc
bound
dec
mov
pop
cwtl
fs
nop
stos
fwait
arpl
cmpsb
xor
xchg
mov
jp
movsb
fmull
daa
fisttpl
out
stos
sub
jne
sbb
push
test
lcall
sub
add
jecxz
lahf
stos
stc
mov
pop
ret
outsl
xchg
inc
and
mov
repz
bound
insl
jl
sbb
xchg
movq
dec
hlt
xor
stos
cmpsl
ret
adc
jno
popa
sub
out
es
add
aas
lret
dec
stos
fs
fdivr
les
sub
adc
out
or
jecxz
and
and
push
inc
repz
out
adc
in
stos
enter
jl
adc
add
pop
imul
in
pop
and
insl
xlat
sbb
subl
stos
lds
sub
lret
add
sbb
inc
faddl
lcall
or
mov
cmp
imul
mov
in
stos
xchg
xchg
mov
xchg
lret
pop
movsl
xorl
add
cld
dec
stos
loope
fistps
mov
aas
stos
lret
add
adc
add
or
xchg
jmp
ja
lahf
pop
sahf
jno
loopne
sbb
xlat
dec
fst
test
stos
push
cli
pop
cmp
jle
or
mov
fs
or
push
pop
xchg
cli
mov
mull
mov
xor
or
sbb
movsb
mov
cmc
aad
ret
inc
lcall
push
dec
mov
outsb
lret
cmp
pushf
repnz
dec
mov
cli
lods
std
adc
sbb
jo
and
mov
sub
scas
test
bound
imul
stos
pop
cli
arpl
mov
test
fwait
jae
int3
xor
aas
xchg
mov
xchg
fwait
outsb
mov
jmp
rclb
push
imull
dec
jge
jno
stos
popa
shlb
lcall
sub
ror
jle
out
cmp
rorb
ljmp
pop
sbb
stos
push
stos
cmp
jg
inc
sub
out
cltd
in
cmpl
shrl
jo
cmp
sub
mov
lea
cmp
outsl
or
jae
push
mov
popa
lods
xchg
sbb
ds
sbb
test
mov
mov
adc
add
ds
adc
imul
cld
js
rcll
xor
cltd
adc
mov
adc
aas
jmp
imul
cwtl
dec
pusha
mov
pop
into
movsb
and
pop
stos
mov
cmpsb
dec
outsb
mov
jmp
lock
jl
shll
stos
fwait
cmp
in
lock
test
xchg
iret
imul
pop
xchg
lds
cmp
stos
repz
jnp
jl
mov
lods
and
mov
lahf
push
dec
fs
adc
push
sbb
sub
lea
mov
add
lods
jb
cli
mov
add
pop
into
jmp
mov
push
dec
out
adc
jecxz
stos
lods
ss
jnp
jbe
cmpsl
cmc
jae
test
inc
inc
push
and
ss
mov
imul
mov
mov
stos
test
and
leave
ret
stos
ficoms
xor
adc
mov
pop
test
pop
cmp
pop
icebp
mov
hlt
cwtl
xor
dec
arpl
cmp
stos
push
push
out
cmp
stos
mov
push
xor
daa
and
and
imul
scas
aam
movsb
lods
stos
scas
fsubrs
mov
dec
xchg
inc
stos
mov
nop
outsl
mov
mov
addr16
mov
leave
stos
cmp
and
ret
push
inc
jle
xor
mov
mov
xchg
jmp
cmp
mov
push
je
mov
stos
test
dec
mov
call
jecxz
stc
adc
xor
scas
pminsw
insb
lahf
mov
outsb
inc
jmp
mov
cmc
jb,pt
test
mov
xor
and
stos
push
mov
and
sbb
stos
inc
aad
imul
and
push
in
jb
stos
lods
loope
and
int3
pop
andl
adc
fmuls
scas
ret
aam
mov
in
stos
mov
lret
cmpsb
adc
stos
sbb
mov
cmp
xor
notl
and
push
stos
jp
push
mov
or
nop
in
stos
pushf
lock
adc
idivl
lret
xor
mov
push
add
dec
sbb
and
setno
or
stos
dec
cmpsb
adcb
xchg
xchg
push
jge
mov
push
push
cmpsl
cltd
push
xor
push
mov
dec
test
mov
lock
push
mov
inc
and
hlt
mov
subb
jno
and
xlat
repz
stos
loope
push
push
outsb
leave
pop
aam
sbb
rol
add
mov
push
pop
pop
sub
dec
push
mov
mov
adc
xchg
subb
fs
stos
jb
fcomi
pop
enter
pushf
popf
fildll
ja
repnz
adc
add
mov
lret
and
stos
and
push
xor
adc
imul
stos
pop
inc
mov
fwait
xchg
stos
jno
andb
cmp
jmp
or
aad
aaa
fs
fstpl
icebp
dec
dec
cmp
sub
or
mov
pop
fildll
dec
ds
xchg
insb
stos
pop
loop
dec
shlb
sub
into
xlat
out
push
fdivr
test
jno
pop
cmp
sub
lods
dec
mov
dec
add
leave
js
cmpsb
stos
or
xor
ror
stos
repnz
push
mov
push
sub
push
jmp
jns
rcr
insb
stos
dec
lods
lret
fcmovnb
jno
jp
mov
xor
dec
cmp
add
sbb
test
and
icebp
scas
pushf
stos
mov
ja
in
add
stos
jmp
out
fld
and
add
sarb
xorps
adc
stos
xorb
pushf
stos
ret
in
dec
mov
mov
stos
cmp
movsb
popa
inc
or
mov
icebp
fwait
adc
jae
cmp
es
ja
stos
test
fld
mov
inc
enter
sbb
daa
imul
gs
popa
hlt
or
pusha
xchg
push
shr
sbb
inc
adc
mov
push
push
insb
outsb
lahf
sbb
dec
add
popf
fsubs
test
jmp
in
mov
push
fstpl
lcall
rorl
and
lahf
add
sub
or
jge
stos
out
lcall
push
sbb
arpl
subl
pop
scas
mov
add
iret
lock
dec
popa
lahf
andl
xlat
or
mov
int
sbb
or
push
stos
xor
or
loope
aad
aam
addl
lret
mov
int3
adc
mov
fldt
mov
dec
cmpsb
inc
and
xor
xchg
inc
jmp
xchg
ds
sti
stos
xchg
mov
pop
movsb
test
xchg
sbb
cwtl
xchg
lahf
stos
dec
idivl
stos
pop
adc
pop
push
sbb
pop
stos
decb
and
and
test
aad
popa
out
xchg
sbb
imul
xor
fiaddl
mov
and
sub
sub
dec
sahf
lods
fwait
sub
sbbl
stos
cmpsb
mov
lea
bound
sub
mov
in
push
mov
popf
test
adc
shrl
int
rclb
clc
rcll
lds
aas
pop
fwait
or
push
mov
iret
inc
dec
clc
jge
addr16
jle
adc
push
mov
std
fidivl
shrb
sarb
imul
jmp
jp
int3
adcl
mov
push
gs
add
stos
push
inc
mov
aad
inc
popa
or
jp
es
push
sbb
outsb
mov
fistpll
sub
pop
sub
add
fisttpll
xchg
loope
subl
add
push
xchg
cltd
stos
icebp
out
es
decb
imul
cmpsb
sahf
push
out
stos
xchg
push
das
pop
in
jmp
iret
lds
add
cltd
fs
sub
xchg
stc
in
popf
mov
mov
dec
popa
orb
sub
cmc
stc
add
test
lods
sub
jp
lock
xor
xchg
movsl
mov
stos
xlat
push
fs
data16
and
jle
repz
mov
mov
pop
jbe
out
pop
jmp
ficompl
xchg
leave
adc
fwait
mov
shrl
clc
push
stos
sti
insl
pop
or
xchg
imull
adc
ljmp
inc
inc
sub
mov
pop
stos
adc
inc
dec
lock
loopne
cmp
and
adc
pop
jne
inc
out
dec
imul
in
insl
rcll
test
adc
cmp
pop
aad
fldt
pop
or
scas
sti
mov
stos
dec
mov
xchg
addr16
mov
or
push
popa
dec
lds
xor
push
xchg
stos
rcrl
dec
ss
mov
loopew
mov
das
fwait
or
mov
sbb
call
xchg
nop
jmp
aad
ljmp
xchg
jmp
inc
mov
sbb
enter
pushf
shlb
jp
ss
movsl
cmc
stos
gs
dec
push
repnz
aad
jmp
insb
push
xchg
cmpsl
lds
xlat
push
xchg
stos
xor
fbld
in
dec
lcall
stos
xchg
fincstp
ret
push
and
mov
xor
push
mov
and
xor
fwait
pop
xchg
push
inc
scas
stos
daa
popa
fstl
dec
imul
stos
fs
sub
into
pop
push
addr16
mull
xor
stos
sbb
xchg
and
cwtl
shll
test
dec
mov
stos
in
jnp
lcall
jae
xchg
mov
push
lods
js
stos
mov
outsb
inc
in
sub
xchg
loop
leave
movsb
fbld
lahf
mov
fiaddl
sub
pusha
aam
je
mov
pop
in
imul
lcall
stos
sbb
adc
push
and
dec
inc
jl
addr16
and
push
sbb
hlt
dec
je
fldt
mov
dec
mov
bound
pop
stos
stos
adc
dec
outsl
dec
xchg
adc
stos
sbb
xrstors
movsb
sub
shrl
fwait
mov
scas
std
imul
stos
add
cwtl
jmp
pusha
push
jbe
sub
stos
push
stos
add
pop
lret
cmc
xor
stos
push
gs
bnd
in
std
push
cmpl
stos
inc
fabs
icebp
lcall
daa
insl
aaa
inc
imull
mov
xchg
int
repnz
sti
pop
push
subl
aad
xor
arpl
pusha
int3
mov
dec
aaa
stos
or
lret
and
xchg
js
imull
mov
mov
cwtl
jo
mov
adc
lds
sub
ret
mov
stos
mov
xchg
ret
stos
xor
xlat
mov
lods
push
push
stos
and
lcall
adcl
add
pop
fwait
mov
jp
inc
out
aaa
pop
jmp
sub
loopne
into
mov
daa
int
mov
stos
dec
mov
push
and
and
xchg
ret
sahf
and
jg
add
xchg
xchg
push
rcl
xchg
leave
mov
mov
scas
mov
stos
xchg
mov
dec
stos
inc
out
adc
fwait
test
pop
inc
jnp
cmp
lds
add
adc
cmp
stos
and
dec
sbb
sbb
inc
xchg
xor
fnstsw
sbb
cmp
or
mov
into
mov
call
ss
in
bound
cmc
int3
stos
xor
push
into
jb
or
subl
stos
mov
pusha
sub
arpl
jne
stos
outsb
add
jno
nop
dec
stos
loopne
fs
push
jg
stos
enter
bound
jo
daa
and
lret
dec
jecxz
cmpsl
das
add
scas
int3
push
daa
pop
mov
loop
flds
push
pop
aad
jb
xchg
fmuls
cmp
loopne
aaa
jno
sub
mov
cs
and
lcall
or
inc
test
stos
sbb
sbb
std
sarl
mov
stos
pusha
ljmp
jmp
nop
push
ret
or
scas
inc
add
dec
clc
shl
ljmp
aas
xchg
lock
stos
xor
xor
js
enter
lods
xchg
mov
jae
inc
fcomi
orb
xchg
jnp
testl
shlb
imul
mov
mov
enter
sub
punpckhwd
inc
in
dec
xchg
xchg
pop
mov
adc
inc
hlt
dec
test
jecxz
es
stos
xor
test
stos
int
inc
or
jg
stos
subb
lahf
les
adc
std
out
lcall
stos
aad
add
imul
pop
call
stos
cld
sbb
mov
or
stos
call
cmp
stos
jge
loopne
dec
or
repz
daa
mov
stos
loope
sbb
jl
pop
mov
in
rcll
out
into
in
xchg
nop
push
xorl
jns
or
pop
clc
or
add
fwait
mov
pop
cmpsl
cmp
stos
cld
rorl
out
push
pop
inc
pop
dec
sti
fsubrl
in
or
mul
ja
ss
hlt
sbb
pop
push
es
nop
xchg
adc
and
orl
les
stos
dec
inc
lcall
add
daa
data16
mov
dec
mov
stos
scas
xchg
leave
rcl
ds
stc
xor
jg
or
stos
repnz
idivb
mov
adc
out
xor
inc
add
jbe
test
inc
xchg
fwait
outsb
push
sub
out
divb
lret
pop
cmp
or
dec
popf
test
mov
xchg
cmpsl
mov
jmp
cmc
stos
shrb
ficoml
aas
inc
imul
xchg
push
sub
mov
stos
fisubrs
add
stos
inc
or
push
adc
int3
stos
jmp
mov
std
ds
das
push
out
enter
rcrb
stos
popf
inc
mov
push
mov
fsubrs
add
jns,pn
test
icebp
xchg
jae
jmp
add
shlb
xchg
or
popf
mov
sub
xchg
lcall
fistpll
push
icebp
stos
or
insb
repz
inc
mov
push
mov
gs
inc
ja
test
test
daa
mov
push
xchg
rcrb
add
sbb
sub
mov
stc
mov
addr16
add
stos
mov
sti
cltd
sbb
stos
pop
add
mov
shrb
push
sub
xor
outsb
cmc
cmp
fnstenv
jl
push
pop
push
adc
mov
xor
in
loope
leave
and
enter
adc
ljmp
push
aad
orb
sbb
lods
idivb
jmp
ja
aaa
mov
push
push
ret
push
pop
nop
rorb
mov
push
mov
stos
adc
push
in
jle
pop
stos
xor
inc
jnp
clc
addl
das
mov
lods
nop
sub
sbb
dec
push
mov
xchg
mov
shlb
cmp
xchg
dec
lds
test
fisubrl
push
imul
fsubr
stos
push
mov
pop
xlat
cmpb
sbb
fcmovnu
ds
jmp
pop
xchg
push
ret
jnp
mov
jo
and
test
sbb
test
jle
jns
adc
xchg
push
jl
jmp
inc
loop
imul
adcl
fsubs
push
stc
shrl
das
stos
mov
loope
ss
jae
xchg
in
add
stos
inc
fidivs
jne
push
mov
or
mov
popf
xchg
jno
pop
stos
mov
or
pop
shl
pusha
add
fimull
sub
out
mov
stos
cmp
sbb
jg
shlb
sub
into
push
std
pop
imul
fistps
cmp
repnz
mov
aam
push
scas
int
scas
ret
stos
lahf
jo
xchg
jg
or
xor
imul
stos
add
mov
inc
stos
jne
imul
rcll
xchg
insb
movsl
mov
stos
jns
fnstsw
scas
enter
movsb
rcrb
add
scas
dec
adc
add
mov
xchg
lahf
stc
stos
pop
es
out
pop
stos
ret
or
push
out
pop
stos
popf
lods
movsl
aad
test
push
stos
mov
test
xor
sub
sub
lods
mov
jmp
js
mov
leave
pop
xchg
incl
mov
arpl
dec
lret
outsl
stos
pusha
stos
repnz
fwait
inc
lahf
mov
mov
mov
movsb
sub
pop
fwait
test
dec
jge
addl
stos
fwait
adc
rep
add
rorb
stos
or
notb
icebp
mov
pop
xchg
sub
loope
cmpsb
pop
dec
stos
lds
jmp
mov
jmp
enter
stos
sbbb
stos
fimull
ljmp
pop
sbb
fwait
inc
cmpsl
mov
shrl
les
inc
dec
mov
mov
in
aaa
insl
inc
fsubs
sbb
stos
scas
aaa
ja
bound
and
stos
pusha
dec
pop
cmp
mov
mov
xchg
dec
daa
ja
push
icebp
mov
cmp
push
es
test
ja
and
insl
push
popf
cmp
out
es
stos
mov
inc
cltd
fsubl
jno
fistl
outsb
pop
mov
or
into
aam
mov
push
scas
pop
or
fldcw
movsb
jnp
xchg
sbb
jb
push
stos
jne
mov
loopne
shrl
cmp
stos
xchg
shrb
and
fsubrs
jae
pop
scas
push
clc
insb
into
lods
xor
jo
stos
leave
int
sub
addr16
outsl
fs
inc
leave
jle
lods
fidivs
ss
cmp
xchg
in
stos
cmpsl
pop
rcll
lret
push
arpl
scas
fwait
push
lahf
mov
lcall
lahf
xchg
inc
sbb
adc
pop
repnz
stos
hlt
sbb
cmpsl
add
pop
out
mov
stos
sub
cli
ret
push
jmp
sub
lds
jae
sbb
sbb
rolb
mov
mov
ds
fldt
into
jae,pn
stos
adc
mov
out
stos
inc
rsm
std
sub
stos
fistpll
xor
imul
jmp
in
mov
pop
stos
ret
jp
movb
push
test
das
enter
lret
stos
icebp
stos
bound
sub
mov
or
into
sub
and
pushf
imul
push
stos
dec
mov
stos
jl
lahf
ljmp
arpl
xchg
or
jae
push
stos
jbe
mov
add
adc
pop
incl
lds
pusha
stos
xlat
fsubs
adc
push
shrb
ja
in
pop
lods
cs
dec
stc
sub
out
or
je
loop
adcb
jp
jl
stos
pshufw
lret
xlat
imul
fs
xchg
fsubrl
fistpl
data16
mov
push
daa
or
adc
mov
push
pop
pavgb
xor
adc
sbb
pop
mov
fwait
mov
and
cli
jno
adcl
bound
mov
sbb
cltd
xchg
pop
movsl
aas
test
jg
cmpsb
push
imull
mov
and
jae
clc
and
ljmp
jge
mov
push
xor
or
xchg
popf
notl
fmull
mov
push
stos
mov
lds
daa
mov
and
loop
fwait
or
mov
sub
lods
xchg
jmp
dec
repz
dec
nop
es
cld
call
in
and
xchg
stos
jae
cmp
movsb
jmp
pop
stos
sahf
sbb
shlb
addr16
cmc
and
inc
dec
xor
jmp
mov
sbb
fisubrs
sbb
cmc
shrb
jg
adc
stos
mov
out
push
sbb
ss
push
rclb
ror
movsb
lds
cltd
jae
fstpt
add
or
mov
sub
mov
dec
or
cmp
cltd
into
ficompl
stos
mov
sub
pop
aaa
or
stos
xchg
sbb
cld
push
pop
push
stos
scas
xchg
or
mov
stos
icebp
lods
sub
inc
imul
repz
movsl
repnz
and
addr16
roll
or
scas
fwait
imul
add
leave
in
adcb
lods
je
jnp
lahf
jb
jmp
fnstcw
mov
cs
dec
or
lods
iret
cli
mov
sbb
adc
hlt
and
dec
nop
insl
outsl
popf
and
stos
xorb
push
sbb
mov
insl
cwtl
jmp
fwait
pop
sub
sbb
push
popa
faddl
xchg
stos
aad
cmp
loopne
cmpsl
mov
inc
adc
mov
stos
mov
cmp
jmp
jbe
or
test
inc
mov
sti
or
pop
xchg
gs
add
or
stos
inc
lret
lahf
sub
out
jmp
in
push
or
cwtl
push
addr16
icebp
inc
in
and
sub
mov
test
imul
ljmp
les
pop
dec
enter
stos
sub
mov
insb
push
nop
cmp
sub
movsl
loopne
call
add
jmp
cmpsl
jmp
xchg
stos
lcall
insb
nop
test
add
lods
xor
ficoml
mov
sahf
push
scas
ret
mov
pop
fists
mov
aam
cwtl
js
dec
ljmp
dec
ds
fwait
aad
mov
adc
add
sub
nop
push
sub
xchg
cmc
jnp
xlat
test
push
adc
dec
adc
sub
pop
pop
fsubl
adc
int
xor
out
and
stos
repz
sub
popa
rolb
or
imul
adc
stos
scas
pop
jecxz
roll
stos
dec
cltd
insb
mov
mov
icebp
and
addr16
push
cltd
stos
setb
test
loope
testb
es
mov
dec
inc
pop
fiaddl
cmp
mov
sub
stos
jge
jb
in
shrl
stos
sub
push
fists
adc
add
sub
xchg
push
cmpsb
sbbl
stos
stos
mov
adc
stos
xchg
outsb
push
insb
stos
mov
jno
shrb
or
add
jecxz
stos
mov
cmp
icebp
push
pop
pusha
das
mov
lahf
stos
cmp
inc
sbb
push
mov
sbb
gs
fdivl
mov
sub
mov
inc
data16
jmp
cmp
push
inc
and
fsubr
stos
into
pop
fwait
mov
dec
out
popa
lahf
dec
stos
aad
and
push
in
and
sub
push
xor
add
shrb
pop
fsubl
iret
enter
stos
pop
cmp
jbe
stos
dec
loope
orl
pop
pop
pop
mov
stos
mov
adc
stos
xchg
leave
cli
addr16
cmpsb
mov
jae
mov
dec
pop
sbb
xchg
sbb
scas
daa
pusha
dec
in
stos
and
inc
das
pop
stos
push
sahf
mov
dec
nop
movsb
stos
outsl
adc
pop
push
call
cltd
stos
clc
sub
add
dec
popa
js
jge
adcl
lods
or
or
adc
gs
push
xor
mov
jmp
push
out
mov
lahf
push
mov
jge
call
sahf
sbb
mov
int3
test
dec
xchg
stos
xchg
fistpl
or
mov
jno
cld
push
adc
mov
mov
call
data16
jns
jecxz
in
stos
outsb
push
add
int3
cmp
xor
stos
fisubrl
stos
loopne
out
data16
cwtl
cmp
inc
xorl
jge
cmpl
stos
mov
pop
jne
mov
psubb
shlb
fisubrl
push
and
mov
sub
nop
dec
and
inc
lcall
ret
imul
jmp
cwtl
push
sbb
gs
stos
iret
scas
pop
sarl
stos
in
call
xchg
add
cmpsl
push
iret
outsb
jecxz
daa
mov
jb
std
and
xchg
and
sbb
push
xchg
test
jl
xchg
sub
add
rcl
rep
or
cs
insl
loop
mov
out
roll
push
ss
pop
inc
cmp
cld
stos
scas
mov
lock
test
outsl
daa
or
cmp
test
jge
in
xor
lret
jecxz
and
push
adc
jno
cmpl
sbb
xchg
sub
stos
stos
push
jne
cwtl
pop
pop
inc
pop
stos
push
pop
and
push
cmp
stos
test
aad
stos
imul
pop
mov
lahf
stos
lcall
call
mov
mov
push
xchg
push
data16
repz
imul
push
xlat
sbb
lods
mov
jg
push
cltd
gs
xchg
hlt
imul
mov
cmp
imulb
add
and
cltd
xor
push
xor
ja
sub
push
in
mov
add
jo
mov
dec
arpl
jp
jnp
dec
addr16
mov
and
jo
mov
sbb
jmp
sub
outsb
mov
lods
add
in
mov
popa
dec
and
stos
mov
iret
mov
adc
dec
lods
loopne
nop
daa
mov
or
jmp
dec
hlt
insl
sti
fiadds
push
mov
xlat
jg
imul
stos
cmp
lds
stos
xor
aas
je
push
shlb
xchg
fwait
or
repnz
enter
jle
cmp
int3
inc
stos
test
push
pop
stos
addb
jnp
fidivs
aad
jns
push
nop
add
pop
jmp
dec
loop
or
aad
mov
stos
xlat
test
aaa
sub
xchg
mov
fs
push
sti
adc
cwtl
lea
mov
pop
inc
sub
idiv
cltd
xchg
xchg
sbb
jns
mov
add
imul
out
aas
lret
push
add
leave
mov
add
xor
dec
sub
mov
sbb
push
cmpsb
stos
mov
sbb
test
subb
push
sbb
lods
fwait
divl
stos
mov
mov
push
mov
push
mov
cli
int
aaa
sbb
inc
ljmp
sub
push
and
inc
arpl
mov
xor
push
mov
add
pop
push
push
and
imul
pop
push
mov
arpl
rcrb
insl
and
les
or
mov
sub
jne
pop
jnp
push
lret
gs
fistpl
mov
mov
cmp
jl
dec
jp
rolb
mov
out
dec
jbe
stos
xor
cs
jmp
pop
cwtl
stos
xchg
out
add
shrb
popa
iret
loop
outsb
mov
inc
aaa
push
lods
je
mov
ret
stos
or
mov
stos
lret
pop
movsb
fcomp
int3
stos
out
into
push
sbb
aas
and
lret
stos
add
and
shr
sub
call
rep
cmp
inc
cmpsl
ja
stos
push
inc
dec
mov
mov
flds
stos
int
bnd
mov
add
mov
mov
push
mov
xchg
mov
dec
cli
mov
mov
and
aam
pop
push
daa
andb
neg
inc
mov
pop
inc
inc
mov
sub
ja
or
xchg
sub
fwait
addr16
push
xor
outsb
push
mov
sti
xchg
daa
xchg
mov
xchg
stos
out
loopne
dec
mov
add
test
stos
push
cs
jg
loope
cmp
xchg
add
jae
fildll
insb
repz
sbb
pop
add
in
in
fstps
out
sbb
movb
stos
bound
fs
stos
fmulp
sbb
xchg
stos
icebp
scas
xor
out
aas
imul
test
into
addr16
cmp
testl
mov
arpl
lret
jae
jb
inc
mov
jns
push
jle
popl
and
sbb
push
and
mov
push
sarb
mov
pop
test
push
or
sbb
cmp
dec
aad
sbbb
pop
insb
stos
mov
out
iret
ljmp
cmpsb
prefetch
stos
in
cmc
push
xchg
cwtl
xchg
in
stos
fimuls
adc
stos
daa
or
nop
stos
add
pop
cmpsl
enter
push
mov
inc
dec
xchg
sbbl
sub
addr16
pop
and
lock
std
inc
shrl
xchg
adc
scas
inc
dec
stos
loope
mov
stos
inc
inc
mov
mov
ds
sub
rol
stos
pop
mov
lods
cli
data16
mov
scas
ds
mov
push
dec
dec
sub
mov
cmp
cmpsl
pushf
jge
outsb
stos
in
or
add
stos
jg
scas
xchg
xchg
fdiv
jmp
dec
sti
mov
add
clc
push
and
lds
stos
nop
sbbl
daa
les
mov
mov
idivl
pop
mov
nop
dec
sbb
stos
cmp
jl
test
stos
scas
cmpsl
outsl
test
iret
stos
cmp
xchg
dec
mov
and
into
or
mov
stos
sarb
in
inc
xchg
aam
in
stos
xchg
xor
mov
adc
lret
daa
ret
dec
mov
rcrb
pop
stos
jne
push
xor
cmp
test
jno
mov
cmp
in
ret
mov
cmp
stos
adc
fisttpl
aas
fcoml
into
push
sub
adc
push
jno
pop
lds
mov
xchg
das
aaa
movl
insl
ds
dec
sub
sbb
outsl
jae
stos
jno
fidivs
push
mov
stos
push
fcomps
mov
outsb
jge
ret
push
sub
mov
arpl
negl
mov
dec
aam
xor
loope
js
mov
aad
lds
call
dec
and
adc
int3
loop
push
xchg
lahf
push
push
fs
cmp
sahf
jge
pop
jp
cmp
stos
cld
lret
mov
mov
add
jbe
inc
cmp
fs
or
int3
stc
mov
stos
and
cmp
sub
in
daa
int3
jmp
or
das
inc
dec
cld
xor
jne
stos
out
and
fnsave
jmp
stos
fwait
xchg
movsb
lock
push
les
mov
lods
lods
stos
inc
or
call
jmp
lcall
cwtl
xchg
stos
int3
ljmp
stos
ss
jmp
lods
dec
stos
shrb
mov
stos
mov
sub
cvtps2pi
aas
cs
repz
orb
jmp
scas
ljmp
stos
loop
pop
loopne
add
gs
jge
daa
ds
test
enter
les
mov
mov
fldln2
stos
out
or
pop
stos
push
les
fwait
xchg
sub
divl
xor
mov
sbb
push
mov
sahf
stos
ficompl
mov
xchg
sbb
add
and
adc
xor
jbe
pop
mov
dec
in
mov
mov
iret
bnd
xchg
add
loope
push
push
inc
push
cmp
mov
xchg
jnp
push
mov
mov
push
adc
ja
rdpmc
fimull
jg
fs
stos
pop
jmp
sbb
sti
test
xchg
sbb
subl
jnp
into
mov
cmp
stos
mov
es
stos
cwtl
imul
inc
fwait
ret
pop
adc
xchg
pop
xchg
stos
push
or
xor
testl
mov
jge
in
stos
sub
mov
stos
jb
sarl
sub
dec
cld
add
outsl
mov
loopne
add
je
sub
xor
es
sub
test
xchg
cmp
mov
cmp
cmp
or
xchg
orl
mov
imul
int
ljmp
testb
movsb
push
dec
fistps
icebp
sbb
jmp
arpl
pop
bound
jbe
cmp
call
pushf
jb
jge
imulb
outsb
xchg
pop
js
lods
lea
push
stos
xchg
and
aaa
or
mov
sub
push
sub
iret
stos
imul
mov
das
aas
jl
stos
fldl
rcl
sub
jmp
test
and
bound
lods
stos
jge
push
mov
mov
sbb
lock
mov
xor
dec
sbb
lods
pop
je
stc
stos
mull
add
pop
nop
leave
jge
icebp
repnz
cli
jne
in
stos
aad
cmp
stos
shrb
insb
xor
add
xor
inc
pop
fidivrl
stos
mov
xchg
pusha
stos
int
cmp
shlb
adc
sbb
mov
or
lahf
xor
fwait
dec
xor
mov
hlt
popa
or
fdivr
cs
dec
movsb
xchg
and
in
sbb
int3
dec
lret
mov
aad
mov
fstpt
mov
test
subl
sbbl
push
adc
rorb
int3
or
ret
pop
mov
stos
sub
insl
jg
cli
cwtl
fcomps
enter
and
les
or
in
cmp
out
icebp
in
stos
mov
sub
add
mov
ss
jae
pushf
imul
aam
mov
das
fwait
stos
subl
cmp
stos
loop
jmp
out
push
lods
rol
int3
pop
and
sbb
add
adc
and
mov
call
mov
sub
subl
movsb
mov
jb
imul
movsb
pop
fwait
xor
mov
xchg
and
sbb
stos
test
sbb
pop
inc
xchg
shrb
icebp
cmp
dec
addl
stos
insb
mov
inc
stos
insl
aam
mov
xchg
mov
xor
cmc
inc
dec
test
bound
mov
imul
lahf
clc
pop
mov
mov
push
outsl
push
adc
xchg
scas
stos
lea
bts
fwait
addr16
int3
fbld
mov
mov
fcomps
lret
or
stos
imul
cs
cwtl
pop
mov
lock
stos
or
lahf
or
stos
mov
dec
stos
mov
rorl
pop
out
filds
or
push
loopne
stos
jmp
sahf
loope
xor
push
popa
imul
jno
and
jle
mov
sub
stos
inc
dec
lret
lcall
rcr
sub
scas
pop
or
xor
dec
mov
sub
inc
fld
iret
daa
loopne
mov
das
dec
test
pop
popa
cmp
pop
stos
mov
addr16
lds
jp
jnp
jecxz
and
repz
or
fidivl
stos
inc
xchg
pop
stos
les
movsb
in
sbb
rcl
pop
lahf
add
mov
arpl
repnz
mull
cmp
data16
pop
out
stc
push
loop
pop
cli
lds
cltd
xchg
dec
addr16
dec
jno
mov
into
jmp
std
inc
push
or
xchg
cld
jbe
es
pop
xchg
mov
push
xchg
in
mov
cmp
rcll
out
rclb
jno
mov
mov
stos
cmp
divl
xchg
dec
jno
stos
enter
rcrb
mov
pushf
push
sbb
aaa
std
pop
arpl
int
mov
bound
adc
out
stos
dec
mov
mov
movsb
push
iret
out
lahf
mov
jns
inc
adc
stos
iret
adcb
loopew
outsl
push
hlt
std
push
dec
push
push
fcmovb
mov
stos
xchg
push
sti
not
ljmp
jne
dec
movsb
mov
sbb
stos
pop
push
sub
stos
push
ret
stos
pop
ljmp
rep
jge
xchg
dec
outsl
adc
stos
fisubs
inc
push
stos
ficompl
sub
push
iret
mov
jmp
and
rcl
lods
out
ja
pop
mov
aad
and
shl
lods
jns
loope
daa
push
and
ficoms
jle
shrb
mov
xor
scas
cmp
xchg
test
stos
cld
mov
mov
stos
or
cmp
jnp
int3
stos
pop
mov
rcrl
push
test
popf
cmp
lahf
pop
push
pop
dec
add
aas
orb
cwtl
mov
pop
les
jmp
mov
int
mov
push
mov
and
call
js
test
mov
ds
clc
mov
jle
stos
sbb
inc
xchg
nop
inc
test
and
xchg
xchg
inc
push
stos
arpl
or
std
xlat
decl
repz
inc
adc
neg
cmc
jp
stos
add
arpl
jl
ja
mov
jp
and
mov
inc
das
push
imul
arpl
pop
xchg
mov
or
push
jnp
pop
es
jmp
push
add
push
cmp
inc
pushf
leave
push
sub
mov
aas
fwait
stos
pop
ret
jmp
lods
mov
lret
jecxz
popa
imul
popf
sahf
pop
push
add
cmp
push
imul
sarl
jge
add
xor
push
loope
jbe
scas
sbb
sub
mov
in
sub
xor
cmp
mov
sub
inc
mov
leave
test
fimuls
and
push
mov
and
sbb
leave
inc
out
in
stos
clc
hlt
ror
insb
in
daa
push
and
cmpsb
fimuls
sbb
mov
or
push
mov
push
ret
js
adc
jmp
mov
jl
faddp
jae
sbb
icebp
arpl
int
std
stos
hlt
push
mov
mov
test
in
insb
mov
popf
into
push
mov
cmp
call
and
mov
daa
sbb
pop
push
push
ljmp
mov
xlat
and
in
cli
add
cltd
xchg
adc
stos
xor
inc
pop
xchg
add
rcll
jae
mov
mov
stos
js
lods
hlt
rolb
jmp
adcl
mov
cltd
mov
xor
xchg
aaa
sub
push
xchg
jnp
decl
jg
das
loopne
test
pop
xchg
jb
in
mov
pop
mov
mul
imul
arpl
sub
imul
fcmove
xchg
mov
and
loope
aas
das
xchg
daa
pop
mov
mov
in
imul
aas
cmpsb
jae
daa
ficoml
dec
rolb
mov
stos
xchg
test
and
ss
mov
insb
mov
ja
ret
adc
stos
sub
adc
pop
push
cmp
mov
ljmp
mov
icebp
das
adc
into
mov
cld
stos
stos
mov
inc
add
xchg
xlat
gs
stos
cmc
cmp
adc
mov
xchg
cmp
fsubrs
dec
add
into
pop
out
in
push
dec
pop
and
sahf
jne
mov
repz
mov
lcall
mov
dec
ficompl
adc
int
jecxz
jne
mov
stos
sub
lock
inc
nop
into
les
mov
cmp
jmp
or
sahf
or
lods
inc
sbb
shlb
outsb
xchg
mov
aam
popa
inc
inc
stos
stc
call
push
xchg
mov
icebp
sbb
add
xor
sbb
in
gs
lret
dec
xchg
jge
add
mov
cmp
mov
add
push
inc
and
pop
sahf
mov
fwait
or
stos
inc
jg
push
push
flds
pop
loope
dec
std
dec
ds
jge
sbb
mov
pop
ljmp
repnz
mov
rcrl
shlb
pop
ret
jb
mov
popl
adc
pop
pop
test
stc
inc
imul
pusha
clc
imul
arpl
mov
inc
ds
aam
iret
pop
popf
dec
lods
sub
pop
mov
jo
and
filds
ljmp
out
and
sbb
cmpsl
insl
mov
int
push
pop
js
xor
ss
mov
xchg
inc
stos
stos
add
lods
cld
stos
pushf
mov
test
cmp
outsb
mov
or
mov
popf
mov
add
mov
sub
stos
not
inc
mov
stos
or
icebp
jecxz
in
pop
movsb
stos
cmpsl
imul
xchg
mov
das
push
xor
ret
cwtl
and
rcrb
inc
pop
mov
ja
fisttpll
ds
mov
inc
stos
loopne
xchg
jge
aad
add
lret
fisubrl
mov
xchg
inc
iret
sti
stos
neg
lret
push
xor
and
jge
es
sub
xor
dec
push
leave
mov
pop
subl
stos
sub
out
mov
pop
enter
movsl
std
daa
or
mov
inc
movsb
stos
adc
mov
das
mov
lods
addr16
jl
lahf
or
outsl
dec
inc
test
fwait
cmp
gs
sub
ds
mov
aam
loop
mov
dec
daa
and
cs
cmc
insl
stos
sbb
mov
ret
mov
xor
xorl
repz
cmpsl
push
mov
push
iret
scas
stos
jge
sbbb
aad
lret
scas
enter
xchg
stos
pusha
les
fimuls
lods
stos
andb
dec
stos
xor
nop
insl
xor
stos
xor
jmp
dec
mov
lods
lcall
fisubrl
insl
xchg
mov
lock
pop
and
movsl
xchg
imul
cmp
imul
sub
aaa
stos
sbb
and
mov
stos
xor
stos
jmp
push
xchg
in
in
pop
bound
fwait
pop
inc
jo
sbb
and
stos
mov
jle
pop
scas
enter
sbb
mov
mov
xor
stos
inc
xchg
mov
rcl
aas
stos
lret
xchg
js
cwtl
scas
stos
addl
imul
cld
addr16
imul
cmp
stos
lea
push
in
jno
mov
pop
mov
cli
add
es
rcrl
stos
dec
repz
les
jmp
mov
sbb
scas
pop
pusha
aas
pop
mov
cmpsl
xor
mov
push
fs
push
fildl
ss
and
aaa
stos
push
jb
lret
insl
mov
shl
jle
push
les
ret
push
cmp
jp
cs
movsb
mov
xor
xor
jo
or
dec
lea
daa
movsl
js
xchg
jbe
test
mov
jne
aad
sub
xchg
pop
and
and
jmp
enter
sub
lds
push
out
adc
dec
mov
cmc
popa
cmpsl
sub
jnp
push
mov
movsl
xor
jnp
adc
enter
sub
stos
and
cmpsb
push
iret
jno
cli
mov
jecxz
sbb
mov
sahf
popl
push
stos
lcall
add
aad
sub
add
mov
fiadds
adc
push
hlt
pusha
inc
pop
stos
and
lret
or
stos
and
fs
cld
dec
gs
add
lock
test
pushf
aas
jmp
clc
jns
shl
lcall
imul
push
fmuls
jbe
std
cmc
aam
shr
cmp
data16
adc
scas
xchg
stos
clc
jmp
push
into
stos
out
jno
ret
ja
addr16
mov
lea
xchg
out
jmp
sti
jl
mov
rcll
lcall
mov
mov
lahf
or
jnp
jmp
movsb
fdivrl
xchg
xorb
bnd
pusha
xor
pmaxsw
insl
cmpsl
xor
push
mov
fisttps
push
orl
shlb
stos
cmpsb
adc
inc
stos
test
outsb
pusha
push
pop
lahf
fldt
xchg
test
mov
mov
sbb
add
xlat
shll
mov
or
or
shlb
stos
push
mov
pop
aaa
stos
cwtl
sbb
pop
imul
dec
xor
sbbl
push
dec
jmp
sbb
push
fdivrl
sahf
fnop
cmp
addb
cmp
fwait
cmp
xchg
cwtl
mov
in
mov
stos
ja
sti
cmp
add
daa
sbb
mov
mov
daa
push
mov
add
push
xlat
rcr
lea
stos
int3
movsl
add
stos
add
cmp
loopne
repz
lea
push
or
lahf
mov
mov
xlat
enter
imul
stos
out
sbb
stos
jmp
out
movb
add
loop
in
dec
subl
bound
out
jmp
clc
inc
jbe
repnz
or
aas
rolb
mov
jae
data16
pop
xchg
arpl
pop
movsl
dec
xlat
and
mov
sub
lods
inc
stos
push
xchg
mov
addr16
test
inc
movsl
shrb
inc
data16
sbb
stos
xchg
dec
icebp
xor
sbb
dec
dec
hlt
daa
jno
push
out
push
lods
pop
sub
inc
adc
cmp
popa
sbb
mov
xchg
mov
lret
sarl
xchg
mov
jg
xchg
adcl
sub
cmp
inc
sahf
dec
mov
popf
jo
lods
inc
mov
sub
cmp
and
xchg
mov
stos
mull
cmpl
lock
push
inc
dec
scas
or
pop
daa
sbb
outsl
adcl
push
jmp
ret
repz
fs
lcall
sbb
push
pop
mov
test
idivl
fisttps
pop
mov
cmp
mov
mov
insl
adc
jno
add
mov
es
dec
in
jbe
sub
into
orb
nop
dec
insb
mov
outsb
cmc
fistl
push
stc
lahf
mov
adc
add
xor
mov
aaa
loop
mov
stos
popa
jb
in
out
and
test
cwtl
cmpb
adc
in
and
leave
fwait
out
add
mov
push
iret
sbb
mov
mov
aam
jo
stos
cli
mov
jle
add
ja
adc
jmp
fdivr
xor
mov
sbb
xchg
push
jp
mov
dec
outsl
stos
scas
cmp
movsl
cmp
xor
mov
shl
xchg
or
in
imul
mov
cld
mov
es
adc
out
inc
and
in
pop
in
mov
jmp
stos
loop
mov
pop
mov
push
and
stos
cmp
pop
jp
stos
jb
loopne
adc
cmc
mov
leave
push
stos
lahf
sub
pop
cmpsl
call
repnz
mov
adc
lods
pusha
stos
mov
push
cltd
pmullw
cld
pop
mov
add
inc
jmp
mov
aad
out
in
or
push
or
lods
dec
rorb
in
stos
out
cwtl
sti
mov
idivb
pop
jb
stos
addr16
loopne
popa
and
mov
or
mov
lret
dec
pop
lods
hlt
pop
movsb
std
mov
test
mov
fbld
divl
fsubrp
sbb
clc
xchg
lods
loope
outsl
stos
mov
push
subl
add
push
cld
mov
cmp
xor
add
test
push
stos
pop
jmp
stos
je
xorb
icebp
cs
adc
stos
in
xchg
pop
cltd
and
and
dec
mov
lods
rcll
insb
mov
mov
sahf
insl
cld
cmp
cld
stos
pop
jmp
cmp
mov
cltd
fbstp
mov
inc
jge
push
mov
and
shll
aaa
popf
push
stos
cli
mov
add
jmp
je
lret
lcall
inc
adc
out
stos
decl
test
sarl
lcall
cs
cmpsb
aaa
pop
fsts
pushf
sbb
mov
stos
adc
movl
stos
repnz
cmp
mov
stos
cmp
stos
mov
xor
rcll
cltd
add
inc
mov
add
imul
cmpsl
data16
xor
sti
inc
stos
adc
xchg
inc
mov
xchg
stos
jle
scas
cmp
cmpsl
cmp
push
lahf
mov
ss
stos
bound
inc
add
sub
stos
sbb
or
cmp
and
je
jmp
outsb
stos
xor
xlat
int
mov
stos
pop
push
loopne
mov
push
adc
xchg
lcall
es
mov
jmp
mov
aam
or
cs
ret
mov
xchg
sub
sub
jnp
arpl
xor
adc
mov
jae
mov
cs
cld
mov
andl
loope
push
enter
sbb
mov
stos
mov
dec
xchg
xor
jnp
jmp
ret
test
icebp
xchg
mov
stos
xchg
adc
mov
pop
and
bound
sbb
mov
decl
scas
repnz
shrl
cmpb
jo
push
or
out
stos
lods
dec
loopne
scas
inc
arpl
push
ds
cmp
mov
jns
ret
dec
in
pop
stos
cmp
mov
mov
xchg
jbe
fisttpll
push
xor
int3
fwait
testl
hlt
jae
into
pop
stos
sbb
adc
jge
sbb
lahf
stos
nop
xchg
insl
sub
sbb
adc
hlt
je
filds
imull
jmp
mov
inc
imul
stos
mov
jbe
pushf
shlb
mov
fs
adc
mov
out
dec
inc
aam
cli
sub
sub
sbbb
push
jae
loopne
add
add
test
cmp
push
push
das
fs
or
arpl
jne
xor
mov
xchg
bound
cmpsl
cmp
fildll
stos
push
and
push
ja
rcrb
cmp
dec
in
cmp
xor
add
mov
stos
xor
mov
fsubrl
xor
mov
daa
pop
mov
and
stos
iret
insb
nop
sub
inc
xchg
cmpsl
inc
cmp
test
push
add
fwait
and
int3
fbstp
mov
outsb
xchg
arpl
push
fmuls
pop
stos
mov
add
dec
xchg
arpl
jo
xor
stos
pop
call
and
sub
cmp
fldcw
xor
testb
je
data16
adc
fistl
and
pusha
fimull
jo
pop
ljmp
mov
notb
out
test
push
pop
test
and
and
ss
inc
stc
hlt
cld
in
or
or
sub
inc
stos
ljmp
imul
push
sbb
repnz
jbe
jmp
pop
sbb
xchg
in
add
inc
stos
nop
and
fcom
je
mov
pop
xor
sbb
lcall
daa
imul
xchg
subl
stos
jecxz
lods
outsl
cli
jge
bound
movsl
jo
adc
xchg
sbb
jne
stos
test
add
add
or
sbb
dec
pop
orl
das
cmp
pop
repz
imul
cmpl
cmp
inc
and
mov
xchg
mov
callw
mov
mov
mov
shlb
cwtl
insb
ljmp
pushf
jle
push
out
jnp
pusha
xlat
mov
enter
lahf
ret
xor
sbb
mov
lods
lret
jle
stos
jmp
mov
pusha
and
mov
mov
jg
into
stos
sti
xchg
pop
mov
xchg
pop
cmpsl
stos
popa
lods
push
insb
and
stos
inc
adc
or
rcrl
push
inc
and
fldl
mov
stos
out
stc
pop
push
dec
out
xchg
inc
mov
cmpsl
mov
sbb
repnz
imul
pop
mov
fsubr
lods
sub
in
imul
pop
mov
sub
sbb
mov
nop
jbe
dec
sti
xorb
popa
stos
cld
add
iret
lea
xchg
out
jle
sbb
dec
dec
fwait
stos
loopne
add
stos
lods
jmp
mov
cwtl
roll
mov
stos
fistpll
into
andl
je
in
adc
cmpsl
xchg
dec
and
loopne
cmp
push
fwait
dec
adc
je
cmpsb
sub
aas
sbb
and
stos
mov
mov
jmp
stos
jge
jecxz
in
dec
addr16
add
movsl
xor
dec
xchg
cmp
loope
pop
mov
inc
in
push
mov
sub
and
add
push
jge
xchg
mov
popf
jo
test
inc
or
loop
and
rol
cmp
mov
or
sahf
mov
bound
lods
mov
xor
hlt
aaa
shlb
sub
jne
mov
jmp
lahf
add
jnp
xchg
jo
lret
mov
movsb
stos
pop
jmp
fsubrl
xor
inc
stos
jb
movsb
out
xor
stos
jno
pop
aam
rorl
stos
icebp
ljmp
sub
fidivrs
clc
jae
ja
and
sbb
insb
imul
and
in
stos
add
push
stos
or
adc
inc
xorl
mov
lock
shrb
sub
popf
jmp
inc
cmp
xchg
xor
sbb
daa
add
lret
jmp
stos
mov
cmp
add
sbb
sub
pop
adc
adc
mov
clc
cmp
jnp
inc
popa
sahf
push
stos
mov
push
int
out
loopne
xchg
add
add
cld
jnp
mov
icebp
shrl
ficoml
inc
stos
and
mov
lahf
popf
ret
xchg
pusha
mov
pop
inc
push
jns
mov
std
ret
cmp
jle
aad
std
in
dec
jl
clc
int3
ds
bnd
sahf
dec
mov
enter
stos
fcmovnu
rdtsc
add
stos
pop
popf
dec
mov
roll
test
xor
pop
imul
adc
into
sbb
cmc
mov
es
stos
lret
pop
je
jne
jl
mov
pusha
sahf
inc
adc
mov
lret
test
fidivrs
inc
jmp
imul
push
xor
jne
ja
mov
stos
imul
push
out
in
lock
call
jo
adc
xchg
push
ds
jae
add
mov
dec
mov
fldcw
adc
std
cs
rcl
jmp
push
sbb
cmp
fwait
daa
add
cli
or
syscall
arpl
stos
movl
mov
mov
and
or
jmp
xorl
mov
in
push
stos
adc
test
stos
test
in
mov
or
add
jne
mov
xor
mov
insl
xor
nop
stos
inc
jbe
pushf
or
nop
dec
stos
sub
inc
imul
mov
fistl
mov
roll
jmp
scas
sarl
ja,pn
cmpsb
inc
stos
cltd
ss
lcall
jno
sub
mov
stos
xchg
icebp
or
xchg
in
stos
add
inc
xchg
sbb
lods
mov
mov
and
cld
inc
out
stos
test
int3
push
imul
ret
cli
add
sub
lods
sahf
notl
add
mov
out
pop
add
mov
sub
jmp
cmp
int
stos
and
dec
or
fwait
and
repnz
cmpsl
sub
add
mov
lcallw
jle
or
and
test
xor
sar
insb
cmc
stos
jno
and
stos
dec
imul
popf
or
aas
leave
xor
mov
mov
repz
mov
iret
je
dec
cs
negb
dec
movsb
add
jo
stos
jno
inc
insb
jp
xor
paddd
sbb
cs
cli
stos
outsl
mov
shlb
popa
stos
xchg
cmpsb
pop
jmp
movsl
sub
scas
sub
int3
in
jecxz
fwait
movsb
pop
mov
fmul
or
xor
addr16
lcall
lea
fwait
jecxz
xchg
add
popl
pop
mov
jo
orb
cmpsl
aam
stos
data16
mov
jl
mov
jle
ficoms
mov
int
or
xor
shrb
jge
sub
jo
pop
sub
fnstcw
rorb
xchg
bound
stos
fwait
push
in
dec
fdivp
ljmp
mov
aad
test
data16
mov
jmp
add
scas
and
pop
divb
mov
enter
mov
dec
aam
pusha
out
dec
cwtl
sub
stos
mov
roll
rorb
ficoms
rolb
loopne
pop
mov
xchg
cwtl
or
stos
mov
sub
stos
push
outsb
jnp
push
mov
mov
and
mov
sub
les
je
jl
stos
lahf
ds
dec
jle
xor
dec
xor
mov
jae
sbb
jbe
mov
ss
in
shll
adc
popa
pop
jmp
jge
das
daa
es
iret
mov
cmpsl
stos
lahf
pop
test
test
lret
jg
fwait
loopne
aaa
stos
mov
ret
sbb
hlt
push
leave
ss
and
adc
push
push
cmp
sti
add
mov
stos
movb
ret
stos
outsb
ljmp
stos
enter
or
scas
mov
xchg
jae
stos
outsl
in
enter
das
xor
scas
lods
daa
aad
fwait
leave
shll
cmpsb
and
dec
imul
lods
outsl
jne
clc
lret
mov
dec
mov
iret
push
or
mov
scas
and
stos
int
and
daa
stos
jmp
push
repz
cld
jg
push
imul
mov
stos
mov
out
sub
mov
jbe
popa
mov
aad
rolb
xchg
mov
and
add
or
stos
sub
add
in
or
cmpsb
ljmp
mov
xor
xchg
push
roll
andb
addr16
inc
sbb
mov
xchg
and
scas
je
stos
push
xchg
les
and
cmp
mov
xchg
mov
push
daa
rclb
pop
scas
and
imul
mov
push
test
or
negl
or
mov
mov
lret
dec
xchg
das
int3
lock
sbb
add
and
ror
jmp
pop
sbb
mov
push
cmpsb
je
dec
stc
stos
xchg
sbb
push
push
stos
popa
dec
add
es
test
mov
inc
adc
stos
xchg
push
pop
jae
mov
daa
xchg
hlt
mov
xchg
push
dec
mov
cmp
in
adc
jmp
jae
add
das
lods
sbb
stos
cld
or
jmp
stos
pop
ja
cmpsb
int3
stos
popf
push
pop
iret
mov
ss
addr16
mov
movsl
insb
mov
test
cs
enter
and
fldcw
sbb
movsb
testl
push
data16
ds
push
clc
fs
imull
jg
shrl
mov
dec
sti
add
lods
push
stos
inc
or
stos
sub
and
push
lods
jb
movsl
roll
cmp
stos
sub
fcompl
stos
mov
popf
sub
dec
jl
les
dec
xchg
std
stos
rcll
cs
jmp
xchg
lock
scas
shll
and
pop
xchg
popa
dec
sbb
mov
clc
stos
mov
sahf
xlat
pushf
movsb
orl
adcb
cmp
ret
loopne
outsl
rep
lock
dec
adc
push
aad
stos
arpl
mov
adc
jnp
stos
lret
xchg
cltd
imulb
inc
and
mov
and
xor
addr16
mov
jmp
std
stos
out
ja
lcall
stos
inc
push
dec
mov
mov
ficoml
mov
xchg
in
stos
jns
and
fsts
dec
jo
push
movsl
adc
push
out
mov
cltd
push
imul
pop
pop
mov
mov
dec
stos
dec
lods
addr16
add
xchg
cmp
mov
inc
mov
adc
or
mov
sub
inc
stos
or
lock
jno
iret
movsb
stos
xchg
cs
repz
push
mov
stos
pop
bound
mov
fisubrl
data16
sub
cmpb
push
stos
stos
or
hlt
sub
xor
dec
int3
aad
or
dec
jge
fwait
pushf
inc
push
stos
mov
push
dec
ja
stos
xchg
mov
adc
adc
stos
mov
mov
lods
stos
and
inc
fsqrt
pop
inc
fildll
ss
repz
stos
sub
mov
pop
push
mov
or
mov
jne
mov
cli
sub
lods
ret
icebp
adc
enter
movsb
test
stos
aas
push
xorb
xchg
je
stos
mov
push
inc
pop
sub
jne
out
mul
jecxz
fwait
stos
mov
and
xchg
in
jnp
or
in
fucomi
mov
movsb
xchg
push
adc
outsb
sub
fldcw
cmp
xor
aas
stos
mov
cs
and
cld
jge
adc
mov
and
mov
mov
jle
cmp
cmp
pavgb
mov
stos
add
push
sub
out
test
mov
mov
into
stos
xor
add
stos
test
lret
dec
iret
out
jae
jbe
sahf
stos
sbb
clc
jb
xor
stos
dec
psadbw
lods
sub
aad
push
subl
leave
sbb
push
jecxz
and
inc
push
pop
stos
inc
dec
sahf
jno
fwait
pop
outsb
imul
mov
stos
or
sbb
in
jmp
xor
mov
andb
adc
out
sbb
sbb
daa
mov
cs
daa
loop
pop
push
lret
add
cmp
xchg
lock
xchg
insl
scas
sbb
stos
lea
fcmove
adcb
loope
fsubr
outsb
mov
fnsave
push
dec
jle
xchg
out
sbb
xchg
stos
sbb
push
and
cmp
dec
cmp
or
xor
stos
popa
push
nop
mov
imul
ret
xchg
daa
mov
add
in
cltd
mov
cmp
xchg
add
stos
mov
nop
pushf
or
push
xor
adc
stos
jmp
das
push
lds
pop
roll
roll
in
xacquire
fimuls
test
cmpsl
cmc
jg
dec
cmp
jo
mov
mov
push
xchg
xor
jl
mov
jg
outsb
in
push
jno
test
mov
xchg
js
cmc
aaa
stos
cmp
xchg
push
out
out
ret
aam
dec
inc
fwait
and
clc
push
push
dec
scas
cs
adc
mov
and
cwtl
stos
xchg
xchg
jecxz
and
jno
stos
fstpl
movsw
mov
ret
xchg
mov
jge
xlat
icebp
andl
sbb
rcr
fsubrl
pop
icebp
lcall
aas
sbb
gs
push
push
xchg
movsl
push
pop
or
sub
lcall
ret
movsb
push
cltd
dec
imul
mov
or
hlt
pop
mov
adc
xor
jp
mov
sbb
je
adc
and
insb
pop
jmp
inc
pop
js
into
lret
cmp
mov
shll
subb
mov
adc
fwait
pop
cld
gs
or
popa
je
lahf
hlt
mov
jns
les
inc
fisttpl
pop
sahf
xchg
mov
lret
pusha
xor
push
stos
out
push
inc
fisubl
psubusb
lahf
repnz
mov
sbb
dec
pop
fs
stos
mov
push
adc
sub
das
cld
push
jnp
loope
aaa
lret
arpl
cltd
sbb
fists
and
push
xchg
js
xorl
imul
cmp
cmp
sti
popl
aam
push
ret
out
push
test
adc
mov
xchg
jle
inc
mov
adc
outsb
out
jmp
and
sti
xchg
int
repz
dec
push
cli
fcompl
ficoml
fwait
sahf
dec
out
repz
out
scas
shlb
xor
dec
stos
out
aaa
shr
dec
data16
out
nop
push
stos
test
pop
aad
add
jbe
std
mov
or
nop
aas
or
iret
stos
lock
sbb
mov
mov
mov
and
dec
addr16
add
shrl
bound
lahf
fsubl
stos
out
xor
jle
and
in
insb
dec
or
cmp
ret
xchg
cmp
out
add
adc
mov
xor
inc
lcall
test
js
out
add
jbe
cmpsl
stos
xlat
dec
push
loopne
das
insb
stos
xchg
jmp
mov
mov
sti
sbb
out
add
jae
int3
xchg
lds
xchg
mov
mov
push
in
xlat
pop
test
stos
shrb
lret
stos
insb
and
adc
cld
jl
add
cwtl
arpl
mov
xchg
pop
push
mov
push
stos
in
stc
xchg
shrl
cmp
in
repz
in
mov
ja
iret
cwtl
jmp
aad
cmp
fwait
pushf
xchg
sti
cmc
jns
int3
mov
ljmp
sbb
mov
fmull
jge
mov
cmp
xchg
iret
imul
jle
lods
lret
stos
mov
or
stc
pop
fs
lods
out
lods
mov
mov
xchg
cmp
inc
fildl
test
pop
movsb
mov
cli
stos
sar
pop
mov
test
outsb
fidivrs
mov
test
mov
scas
rcrb
inc
dec
fbld
push
ljmp
outsl
stos
cmp
adc
stos
dec
inc
pop
push
stos
es
push
fwait
adc
mov
lcall
xchg
dec
add
push
call
aad
lods
cmp
js
stos
gs
and
in
icebp
fistl
xchg
lods
push
and
adc
lock
push
pop
movsb
ja
stos
out
ret
cwtl
mov
pusha
inc
stos
push
push
pop
daa
or
adc
jl
insl
mov
notb
outsl
mov
sub
sahf
xlat
add
jne
jmp
lret
push
imul
fldenv
stos
pusha
rolb
daa
push
adc
pop
stos
scas
sub
les
stc
jae
stos
insb
xchg
movsl
ret
push
sbb
pop
xlat
int
stos
inc
and
pop
arpl
push
mov
ficomps
sub
stos
jae
push
sbb
cld
adc
in
push
push
fwait
adc
and
in
dec
cli
jae
jle
jp
scas
aad
pop
in
cmp
mov
insb
lahf
lea
stos
daa
and
dec
jnp
cmp
push
loope
daa
shrl
mov
in
xchg
push
add
mul
scas
dec
ja
scas
cmp
sub
adc
fnstsw
call
mov
fiadds
jo
mov
daa
stos
jmp
fwait
ljmp
mov
xchg
push
stos
pushf
stc
mov
ficompl
dec
std
stos
xor
fs
jmp
jg
mov
push
jl
mov
outsb
pop
mov
in
push
stos
repnz
push
dec
std
cmp
arpl
mov
pop
jno
push
sbb
add
stc
mov
pop
paddb
add
push
stos
sbb
jae
outsl
out
out
xor
push
subb
stos
lock
cs
lret
xorl
push
daa
pop
jmp
jle
cld
popa
cmpsl
mov
rorl
sub
pop
stos
aad
xchg
repnz
jge
pop
ja
lods
enter
push
dec
in
mov
stos
push
xchg
xor
pop
mov
mov
shl
pop
sahf
stos
cmp
jae
data16
mov
or
mov
inc
stos
mov
in
arpl
xchg
lods
jmp
ror
fsubp
cld
xchg
scas
ss
adc
jne
test
push
roll
xchg
inc
stos
shlb
movl
sti
fwait
cmp
mov
mov
stos
int
jne
aas
jl
mov
ret
in
inc
mov
inc
stos
cmp
movsb
pop
out
test
add
add
ja
pop
lcall
mov
pop
lods
stos
scas
jg
push
push
mov
mov
enter
aas
sbb
inc
cli
inc
push
lret
mov
mov
jne
daa
popa
mov
lahf
mov
call
adc
loop
test
imull
cmpsl
ds
cmpsb
lahf
das
sti
push
push
ja
pop
xor
xor
sub
jns
in
mov
jnp
xor
leave
jg
popa
and
xchg
decl
or
je
fcoms
jl
push
push
and
jmp
test
xchg
pop
push
sbb
mov
ret
in
int
stos
lods
scas
outsl
mov
xor
call
aam
xchg
jmp
xchg
out
jmp
lcall
push
sarb
int
js
jmp
je
in
and
stos
pusha
call
and
imul
pushf
cmp
addr16
jno
lock
mov
pop
lcall
stos
push
cmpsl
push
imul
das
je
in
mov
dec
in
inc
stos
cltd
leave
pop
jmp
sbb
jmp
cs
xchg
cld
stos
rcrb
das
fsub
fldt
jmp
jl
xchg
jbe
xchg
fwait
bts
inc
cli
xchg
cmp
dec
mov
rclb
mov
cmp
lods
xchg
pop
stos
nop
in
lahf
push
in
addr16
ja
cmpsl
pop
fwait
outsl
lret
pop
cmp
out
stos
dec
mov
test
pop
sbb
stos
cmpsb
xchg
pop
cmp
sbb
pop
arpl
shl
pop
add
cmp
js
sub
stos
add
lods
dec
or
stos
call
and
stos
fadd
sub
stos
scas
xchg
mov
cld
cli
push
add
xor
mov
scas
push
fwait
cmpsb
inc
ds
xor
cmp
cs
idivl
mov
mov
sub
mov
das
gs
mov
push
cs
lret
addl
stos
mov
notb
cmc
fnstcw
cltd
cmp
sarb
idiv
mov
fimull
and
xor
stos
inc
add
mov
cmp
mov
scas
nop
daa
add
jge
imul
stos
jmp
popf
mov
ja
aaa
jno
nop
in
stos
mov
pop
or
out
sbb
inc
inc
adc
cmp
in
and
aam
mov
adc
stos
push
das
or
rcr
stc
gs
subb
inc
inc
dec
xchg
bnd
icebp
sub
rorb
push
stos
or
cltd
jne
stos
ss
inc
in
adc
mov
stos
sub
xor
sub
pop
bound
je
jmp
cmpsb
xlat
cwtl
mov
data16
loope
push
mov
aam
stos
in
leave
cmp
or
sub
cwtl
mov
adc
lods
lret
mov
divb
jmp
test
lcall
and
shrl
aad
stos
pop
sbb
mov
cmp
mov
add
xchg
mov
lock
in
lea
testb
dec
pop
cmp
mov
add
faddl
movsb
or
cmpsb
push
stos
sbb
xchg
xor
movsl
xchg
push
fdivs
stos
in
aas
and
in
cmp
stos
scas
sbb
fwait
jecxz
aaa
test
add
mov
jbe
adc
dec
xchg
lods
fucomi
inc
fs
add
imul
mov
mov
push
cmc
lret
ja
rolb
iret
adc
mov
jnp
mov
push
std
nop
mov
stos
out
add
movsl
cmpsl
inc
ret
mov
fwait
ds
stos
pop
and
out
xor
bound
add
mov
cli
sbb
lock
ret
push
stos
or
cwtl
sbb
test
mov
xor
cmpsl
mov
scas
cmpsb
sbb
mov
lcall
daa
addr16
aas
fsubs
int
push
mov
arpl
mov
stos
jg
jo
out
xor
xor
push
ljmp
mov
push
test
stos
pop
fldl
in
xchg
ljmp
inc
ds
stos
pusha
xchg
xor
mov
js
mov
mov
xchg
pop
stos
dec
jmp
outsl
xor
inc
xor
pushl
mov
enter
xor
les
stos
add
fdivrl
stos
ret
adc
mov
inc
call
leave
stos
jp
lahf
adc
orb
movsb
popf
stos
mov
cmpsl
add
std
mov
mov
xchg
stos
mov
xchg
push
imul
mov
push
nop
int3
inc
mov
test
ffreep
cmp
inc
outsb
lds
aad
dec
out
cmpsb
push
imul
fcomps
pop
adc
stos
jge
xchg
popf
cmp
nop
mov
add
stos
cli
adc
fsubrl
mov
loop
stos
ret
std
mov
out
cmp
fsts
adc
das
sbb
push
lods
cmp
sub
ss
into
nop
stos
xor
mov
mov
imul
stos
repnz
in
xchg
jae
stos
lret
xchg
push
je,pn
inc
xor
jae
add
adc
fldt
icebp
push
imul
rcrb
scas
fwait
mov
mov
in
stos
add
adc
stos
aad
xlat
jmp
notl
nop
repnz
xchg
cwtl
stos
movb
mov
dec
adc
add
xchg
jnp
pop
push
lds
andl
jae
stos
pusha
test
cmp
icebp
sbb
xor
jbe
inc
jns
or
aam
push
or
pop
or
inc
lret
adc
xchg
stos
aaa
jle
cmc
lret
sbb
mov
sti
fimuls
push
stos
out
lods
pop
enter
imul
stos
daa
lret
fnstenv
dec
inc
in
mov
fwait
stos
sbb
adc
outsl
notb
mov
and
fstl
xor
hlt
mov
sbb
roll
inc
push
stos
mov
dec
xchg
in
sti
pop
dec
cmp
cmpsb
int
cs
stos
shll
pushf
and
movsl
fiaddl
imul
scas
add
cmp
xor
mov
stos
std
jp
mov
push
xchg
jmp
movsb
out
inc
mov
ss
add
scas
daa
xchg
aad
and
jbe
mov
push
push
dec
sahf
das
jp
aaa
iret
out
mov
mov
xlat
mov
out
push
xchg
iret
sbb
adc
inc
std
in
mov
insb
push
mov
popf
stos
std
scas
stos
push
inc
sarb
add
dec
test
mov
or
loop
mov
or
in
imul
xor
in
stos
sarb
pop
subb
or
stos
stos
imul
imul
xchg
and
pop
jbe
not
cmp
adc
pop
int
lcall
jb
ds
popa
lods
mov
add
inc
stos
xchg
arpl
ret
cmp
stos
push
rolb
stos
out
mov
adc
adc
or
dec
inc
mov
scas
clc
daa
lcall
andl
jbe
cltd
daa
push
dec
in
add
push
lahf
ret
cs
stos
shll
nop
or
mov
or
mov
sub
in
arpl
es
mov
shl
dec
out
stos
xchg
push
adc
sub
movsb
sti
cmp
pop
flds
stos
dec
mov
out
adc
or
mov
jns
stos
pop
in
lods
pop
dec
addr16
dec
cmp
adc
in
mov
stos
fiaddl
gs
packssdw
les
mov
xchg
test
pop
insl
sub
and
mov
scas
xorb
xor
movsb
je
test
mov
mov
ds
pop
pop
jg,pn
ror
adc
mov
jg
inc
mov
cmpsb
lret
imull
shlb
test
mov
pop
std
arpl
movsl
mov
ret
stos
orl
sti
jmp
les
jecxz
and
leave
cmpsb
out
pop
stos
mov
arpl
stos
scas
cmp
in
or
mov
add
cmp
fldl
mov
fwait
mov
rcrb
jg
and
xor
loopne
pop
add
lods
push
mov
pop
push
add
sbb
in
mov
mov
push
sahf
mov
test
stos
xor
mov
ss
leave
mov
inc
jecxz
mov
cmc
cli
inc
mov
mov
stos
cld
jge
rorl
gs
fs
jne
dec
mov
fsubl
mov
ss
mov
ljmp
jg
xlat
or
int
mov
and
sub
dec
jb
popf
cmp
bound
push
dec
jmp
stos
stc
adc
scas
stos
adc
stos
faddl
pop
lret
stos
ret
xchg
sub
or
stos
adc
sub
mov
jg
cmc
cmpsb
cmp
ds
les
sbb
jno
addr16
mov
fnstenv
sbb
idivb
aas
pop
cmpsb
push
stos
dec
sbb
stos
add
rclb
ss
stos
pop
lods
or
jecxz
push
loop
fildll
stc
flds
jmp
aad
and
push
mov
mov
mov
push
stos
push
sub
jecxz
mov
stos
adc
orb
mov
in
imul
xor
cmpsb
stos
cmp
shr
xor
and
test
inc
enter
mov
stos
cmpsb
ljmp
stos
addr16
mov
insb
add
stos
fistpl
mov
lret
es
xchg
add
xchg
xchg
push
sbb
push
stc
pop
lret
jb
std
imul
adc
and
lods
mov
ret
xchg
xlat
xchg
clc
pop
push
jnp
fsts
inc
xchg
lods
fmull
ljmp
inc
out
cltd
test
stos
data16
scas
push
and
jmp
and
stos
xchg
pop
dec
data16
sub
stos
sub
xchg
inc
repz
jmp
jno
add
mov
pop
into
lds
xchg
add
stos
std
aad
loope
and
xchg
cwtl
mov
sbb
sti
daa
add
cmpsl
mov
out
mov
stos
jmp
add
loope
xchg
fdiv
jp
stos
ljmp
xchg
stos
sub
pop
jmp
sub
lds
push
pop
pop
push
sti
add
mov
xchg
imul
stos
push
not
fdivrs
pop
das
stos
sbb
rcr
ljmp
cmpsb
stos
sbbl
int3
stos
les
xor
out
cltd
sub
jecxz
imul
sub
push
movsl
inc
rcrb
jns
cmp
jmp
xor
adc
pop
or
mov
nopl
ljmp
adc
aad
stos
push
int3
in
jecxz
out
iret
in
stos
pop
pop
cmpb
add
mov
loopne
sub
aas
cmpsl
enter
notb
jmp
mov
insb
cld
stos
adc
aas
in
iret
push
stos
fucom
dec
enter
stos
jl
ret
mov
mov
mov
mov
cwtl
pop
std
and
repz
hlt
jecxz
pop
test
mov
fwait
aaa
xchg
and
loopne
sub
cmpsl
xchg
jl
lea
sbbb
in
aad
pop
jl
pop
lcall
pop
stos
adc
rclb
stos
iret
enter
dec
pop
stos
adc
inc
sar
loop
stos
ds
push
daa
xchg
xlat
scas
inc
stos
lret
or
jb
push
cld
mov
ss
xor
pushf
jge
jecxz
xor
and
idivb
fsub
stos
movsb
insb
cmc
sub
pop
loope
stos
sub
or
adc
push
repz
mov
popf
movb
shrl
or
stos
in
jg
cmc
mov
mov
pop
lahf
ss
mov
adc
mov
mov
imul
mov
jmp
mov
sub
addl
xchg
jmp
jnp
addr16
cmpsl
mov
psubd
dec
cmp
aaa
sub
inc
push
push
push
ret
daa
outsl
or
lcall
iret
stos
jbe
out
adc
aaa
mov
sti
mov
mov
pop
add
clc
stos
push
push
mov
cmp
stos
mov
repnz
scas
xchg
push
jecxz
call
xor
adc
outsb
daa
xchg
dec
mov
pop
mov
cs
mov
stos
jecxz
sub
and
or
sti
daa
movl
ret
ljmp
ss
sub
pop
test
xor
fwait
and
repnz
stos
out
push
test
fnstenv
mov
jne
inc
pushf
xchg
mov
sbb
mov
rcrl
add
cmp
sub
je
movsb
and
xchg
loope
stos
xchg
push
xor
push
sub
ds
test
inc
leave
fldcw
jo
xchg
inc
negl
std
in
stos
je
pop
pop
sub
stos
cs
cmp
daa
inc
mov
dec
stos
clc
or
mov
repz
shll
scas
cmpsb
jp
outsb
jle
sub
stc
jnp
stos
or
push
xor
stos
lock
mov
rcll
mov
mov
dec
test
xchg
inc
add
and
lahf
or
push
stos
test
aas
cmp
ljmp
js
test
mov
movsb
mov
xor
mov
lods
stos
in
dec
xchg
jmp
nop
lods
insl
jg
imul
cwtl
jb
stos
mov
jmp
insl
pop
stos
std
mov
stos
lods
mov
push
test
sahf
shrb
pop
ret
lods
ljmp
mov
xor
lret
les
test
jmp
outsl
fsubrs
stos
lock
imull
mov
shrl
stos
int3
loopne
out
dec
movsl
icebp
jecxz
lods
xchg
stos
inc
push
or
stos
lahf
ret
aas
add
lods
add
jbe
pop
dec
repnz
or
stos
inc
cmpb
stos
adc
in
insb
stos
orl
xchg
sbb
push
and
sub
hlt
dec
add
mov
test
dec
mov
or
or
fwait
push
aam
fldcw
sti
sbb
movsb
push
jb
scas
pop
mov
jno
sahf
push
stos
pushf
stos
scas
pop
or
cmp
jns
mov
data16
xchg
jge
sub
xor
scas
mov
cmp
jmp
ss
stos
lret
faddp
in
sub
push
mov
in
shrl
clc
add
sbb
adc
shr
gs
dec
xchg
fldt
outsl
xchg
frstor
jl
pop
dec
cmpsl
test
jmp
test
call
es
jne
int3
mov
xor
mov
ret
inc
inc
in
xchg
mov
sub
sbb
sbb
xchg
scas
daa
add
sar
add
in
popa
mov
mov
mov
pop
stos
xor
pusha
xchg
insl
lods
mov
dec
mov
mov
jbe
stos
inc
dec
je
jl
in
stos
add
loope
inc
jle
mov
imull
ljmp
lret
in
mov
dec
cmp
xchg
xchg
jle
mov
push
out
imul
orl
arpl
mov
xchg
inc
lret
xor
and
jbe
mov
cmp
push
lds
cltd
decb
xor
stos
xchg
push
push
push
mov
jnp
stos
xchg
aam
inc
adc
jp
push
out
out
movsb
mov
inc
movsb
cmp
inc
mov
stos
shll
lea
dec
pop
imul
adcl
imul
stos
inc
fbld
loopne
mov
xchg
sbb
mov
cmc
push
mov
daa
pop
pop
pop
shlb
mov
push
cmpsl
sub
fwait
iret
xorl
mov
jecxz
sahf
xor
jnp
push
pop
ljmp
daa
sub
or
fwait
cld
cmpl
add
push
pushf
add
push
mov
arpl
mov
dec
fsts
lret
and
cwtl
push
sub
mov
jecxz
dec
rorl
and
cmpsl
mov
and
insl
sub
sbb
and
lahf
into
xchg
repz
cmp
mov
sbb
xor
jmp
pusha
xchg
movsl
mov
std
scas
pop
fnsetpm(287
dec
decl
shll
add
rolb
fmuls
fstpl
popf
pop
xchg
out
cli
pop
stos
stc
add
je
jns
mov
addr16
sub
mov
jo
pop
pop
mov
andl
mov
shrl
xchg
adc
arpl
xor
adc
push
rcr
fwait
repnz
push
push
mov
cmp
insb
mov
mov
gs
scas
mov
pop
push
outsb
lret
pop
sbb
adc
fwait
stos
mov
add
and
ficoms
lret
sub
lods
stos
jne
cmp
das
sbb
mov
out
hlt
mov
stos
pushf
push
not
jmp
imul
add
inc
lea
xor
aad
stos
mov
sbb
stos
adcb
stos
in
mov
xlat
mov
jecxz
cmpsb
inc
std
subl
and
stos
sub
sahf
imul
or
adc
int3
call
pop
mov
dec
insl
or
push
test
xchg
dec
test
mov
mov
fldcw
cmp
push
push
inc
clc
and
push
mov
ss
or
imul
int3
xchg
dec
xchg
push
inc
popf
adc
lahf
dec
pop
inc
stos
nop
jmp
lds
cmpsb
xchg
sub
mov
enter
push
stos
jbe
cmp
popa
pop
out
stos
push
xchg
mov
jmp
stos
fs
xchg
outsl
push
iret
push
inc
inc
insb
pop
sbb
scas
call
sbb
push
mov
push
add
call
repnz
mov
sbb
stos
in
ss
ret
adc
jg
jno
add
dec
orb
jmp
mov
pop
xchg
mov
mov
sub
push
dec
push
clc
mov
insb
push
cld
stos
lret
shrb
out
stos
mov
inc
or
push
and
fistpll
nop
js
stos
in
insb
scas
inc
ljmp
inc
xchg
dec
stos
out
subb
test
jecxz
aam
stos
sbb
sti
fldenv
pop
fwait
add
mov
cmpsl
outsb
stos
sahf
jge
jne
mov
cwtl
std
xchg
movsb
pop
es
addr16
mov
ret
stos
pop
out
pop
xor
stos
jmp
mov
loop
jno
push
fwait
jmp
mov
cmp
es
in
or
addr16
mov
ja
stos
or
mov
lock
mov
das
fcomp
mov
imul
imul
adc
andb
adc
mov
into
ljmp
frstor
pop
rclb
lock
inc
adc
test
sub
sbb
mov
aaa
mov
nop
sbb
stos
sub
cli
xorb
das
cmp
mov
jge
in
pop
stos
pushf
jl
or
lods
and
pop
xchg
ret
add
popf
cmpsl
stos
mov
jmp
mov
xor
imul
fwait
ljmp
outsb
subl
test
into
daa
push
sub
stos
stos
pop
movsl
lds
mov
push
test
cmpsl
jmp
loopne
loop
sbb
xchg
enter
das
jmp
into
and
jge
lods
dec
mov
pop
push
in
inc
movsb
mov
xchg
xchg
imul
mov
inc
mov
stos
popf
leave
ja
push
enter
jbe
sbb
stos
repz
cmp
sbb
stc
subb
out
out
jecxz
push
stos
into
sarl
push
stos
icebp
lret
or
cmp
jmp
sbb
out
daa
push
dec
je
mov
and
lods
push
lret
pop
popa
dec
cmpsl
dec
scas
fcomps
push
adc
out
and
fstpl
sti
repz
mov
xchg
jecxz
inc
hlt
pop
ds
in
stos
fwait
lods
sbb
xchg
pop
shrl
das
movsb
stos
mov
cli
jo
cld
xlat
jl
mov
jg
stos
dec
scas
cmc
fadd
cwtl
mov
in
add
fwait
mov
test
dec
inc
daa
mov
jae
cmp
inc
sbb
push
mov
jge
cmp
cmp
cwtl
jb
mov
sub
cmp
enter
xchg
cwtl
lds
ja
sbb
stos
xor
mov
test
mov
lods
scas
pop
xor
fwait
push
popa
dec
or
jle
or
stos
xor
test
std
push
add
adc
stos
stos
sub
sub
cmp
and
xchg
out
rep
or
push
loopne
enter
dec
push
loope
mov
test
popf
int3
stos
cmp
fidivrl
jbe
in
xor
shlb
imul
aaa
insb
and
in
cmp
inc
jnp
stos
pop
and
mov
out
xlat
popa
jbe
push
imul
dec
ljmp
iret
jmp
add
pusha
mov
popa
sbb
loopne
push
fists
mov
stos
fs
in
mov
lret
in
push
out
ret
sbb
stos
lcall
jnp
out
sub
into
mov
lods
mov
sbb
mov
pop
jle
fsubrl
fistpll
pop
subb
aad
sti
stos
jmp
mov
mov
shlb
fwait
sbb
sbbb
fisttpll
push
out
mov
ja
fsubrl
sbb
addr16
add
cli
stos
fwait
push
int
xor
sbb
ljmp
fs
sub
scas
imul
mov
insl
imul
fwait
xor
shrb
lods
push
mov
add
call
dec
xor
stos
loope
jge
shr
sub
mov
pop
lods
imul
and
clc
std
daa
je
outsl
lcall
lret
sub
xor
adc
or
data16
inc
cmp
cli
push
jge
lcall
mov
xchg
adc
stos
sub
push
push
xor
inc
mov
pop
setns
pop
sbb
and
dec
xlat
xor
push
or
pop
sbb
jne
not
add
cs
push
push
sub
xor
imul
jns
and
shlb
fwait
icebp
xchg
lods
xchg
cmp
aad
ljmp
xor
nop
cltd
stos
lods
repz
loope
sbb
mov
popf
stos
pop
jae
xchg
cmp
jge
stos
pop
mov
into
fabs
pop
stos
push
sbb
es
pop
ljmp
fwait
dec
gs
rclb
popa
cmp
dec
dec
pusha
repnz
jmp
sub
stos
xor
mov
mov
adc
je
xchg
add
push
aam
stos
xchg
dec
test
ss
push
das
xchg
jle
imul
cmp
sub
clc
xor
dec
or
push
js
jmp
in
pop
neg
scas
lahf
out
add
xchg
int
cltd
cmpsb
or
xor
jne
stos
mov
clc
push
outsl
scas
cmc
xchg
fucom
sbb
mov
mov
je
loope
push
cs
sbb
in
mov
xchg
inc
stos
mov
or
mov
lret
je
adc
push
inc
stos
cmp
cs
push
arpl
addr16
adc
cli
inc
dec
cmp
fwait
movsl
insb
xchg
push
inc
addr16
pop
cmp
mov
mov
cltd
xor
cmpb
push
mov
lret
fsubs
lea
sti
and
icebp
cs
ror
sti
pop
ljmp
pusha
in
stos
orb
add
push
fisubl
mov
jecxz
fwait
add
jnp
loop
stc
stos
sbb
rcrb
ss
cs
stos
mov
shll
popf
scas
fisubrl
popa
nop
push
std
arpl
pop
les
mov
sub
decl
pop
xchg
int3
ss
sub
jmp
pushf
stc
jno
mov
mov
shll
mov
mov
sub
lods
pop
movsb
cs
stos
push
jb
les
das
data16
lret
dec
mov
adc
insl
sub
fsub
subb
std
mov
jmp
or
mov
jg
lods
jle
shll
lcall
iret
jns
dec
out
add
or
cmp
add
fs
aas
ret
out
mov
arpl
pop
push
pop
stos
mov
xchg
in
imul
mov
push
jnp
addr16
dec
xchg
add
pop
stos
xchg
pushf
dec
xor
and
inc
stos
rolb
addr16
xor
mov
ss
mov
stos
inc
inc
leave
mov
stos
jo
shrb
stos
sub
pop
ret
pop
adc
or
and
lcall
fldenv
stos
andl
mov
int3
push
jmp
imul
and
stos
bound
stos
mov
dec
sbb
pop
inc
sub
cmp
mov
xlat
ja
pop
inc
jns
and
mov
jl
leave
cmp
jmp
ret
pushf
mov
stos
adc
stc
jbe
lods
dec
imul
and
sarl
dec
push
dec
lods
sub
mov
xchg
mov
dec
leave
stos
push
fiadds
jl
inc
stos
fsubrs
ret
daa
push
filds
push
and
push
pop
push
cwtl
sbb
xor
stos
pushf
call
das
jb
add
rorb
mov
in
stos
xor
aam
jno
orl
test
inc
jns
mov
stos
cmp
out
lods
stos
fbld
aas
push
pop
daa
repnz
xchg
and
pop
stos
and
adcb
push
stos
scas
cli
mov
popa
pop
cmp
or
add
data16
push
enter
adc
mov
pop
xchg
bound
dec
xchg
stos
pop
jp
addl
pushf
stos
hlt
movsl
mov
inc
stos
and
jecxz
cltd
xchg
stos
dec
xchg
cmpsb
stc
mov
push
addr16
mov
dec
mov
push
mov
call
ja
out
add
mov
push
out
jns
xchg
in
push
shlb
repz
stos
test
out
ret
out
mov
imul
sbb
stos
adc
pop
push
idivl
dec
inc
clc
lret
xor
dec
in
xor
dec
xchg
pusha
jge
mov
jl
dec
shrd
outsb
subl
sbb
stos
loopne
mov
enter
mov
popa
dec
push
sti
and
mov
cmp
cwtl
xorb
mov
push
scas
xor
imul
jecxz
jne
xchg
mov
ret
or
subb
rolb
outsb
mov
stos
mov
jb
imul
cmp
js
cmpsb
mov
jge
and
movsb
fwait
push
out
sub
mov
sub
icebp
inc
push
and
and
or
fidivrs
xlat
mov
mov
and
insl
bound
decl
jl
lods
call
iret
mov
cs
xor
sub
mov
push
dec
jbe
subb
sub
lret
mov
xor
rorb
pop
imulb
das
lock
jmp
mov
push
in
rcrl
jmp
xchg
sub
stos
mov
pop
lds
stos
into
pop
lahf
dec
dec
decl
push
stos
subb
stos
xor
mov
add
daa
aas
mov
sbb
popf
arpl
js
ja
mov
cmp
fldcw
xor
repnz
stos
or
cli
insl
in
xchg
mov
fldenv
daa
int
stos
mov
stos
rolb
bound
imul
mov
lods
icebp
mov
test
and
loope
call
aam
cli
and
ds
add
pop
stos
push
inc
pop
push
bound
xchg
shll
imul
cltd
jmp
out
xchg
push
out
cmpsl
dec
test
dec
jle
pop
shr
push
pop
inc
mov
test
xor
fdiv
mov
mov
mov
outsb
jle
popf
xor
cwtl
xor
jno
jnp
mov
cmp
cld
fnsave
insb
xchg
test
pop
push
adc
jmp
or
lods
sub
mov
stos
push
daa
jmp
ds
push
stos
sbb
inc
sbb
addr16
mov
cld
mov
xor
add
movsl
mov
xchg
stos
pop
jbe
pop
icebp
orl
mov
subb
pop
ja
push
das
mov
xchg
or
mov
xchg
pop
add
hlt
lods
int3
stos
gs
sub
imul
stos
cs
neg
mov
inc
push
sar
add
stos
rolb
leave
mov
call
or
jae
les
mov
dec
stos
icebp
out
insb
mov
mov
stos
cs
sub
dec
jmp
stos
notb
inc
mov
jge
pop
aam
mov
xchg
mov
sbb
in
jne
stos
inc
and
std
jmp
stos
cmpsb
add
inc
mov
mov
das
adc
push
lock
stos
filds
sahf
inc
stos
dec
cwtl
jg
enter
daa
mov
ja
sbb
stos
add
sbb
test
mov
xorl
or
rcrb
outsl
lea
dec
into
sub
stos
popf
insl
add
mov
std
in
cs
push
and
stos
sub
fdivr
faddl
jmp
test
ds
or
sub
sub
jno
mov
in
cwtl
xchg
cmc
stos
jmp
mov
sbb
jmp
push
dec
xchg
or
xchg
pop
stos
out
mov
push
stos
lahf
lock
sbb
inc
imul
cmp
pusha
push
mov
xchg
lds
test
add
xor
cmp
xchg
lea
cwtl
ffreep
add
or
call
repnz
mov
into
fdivp
mov
xchg
adcl
out
and
jnp
movsb
outsl
lcall
inc
in
stos
sbb
and
in
in
or
negl
andb
out
push
lds
xchg
or
stos
pop
mov
push
and
orb
stos
adc
xchg
mov
push
sbb
adc
ljmp
repz
xor
insb
lock
sbb
stos
jecxz
mov
mov
mov
add
loopne
subb
or
fs
stc
add
test
jmp
lahf
mov
push
vfmadd132pd
sbb
fwait
push
jne
dec
out
fsts
popa
jbe
sahf
scas
dec
push
mov
testl
es
sti
xchg
stos
cmp
gs
jmp
mov
fistpl
sbbl
cmp
dec
xchg
nop
cmp
jb
xchg
inc
push
mov
mov
xchg
mov
or
scas
xorb
and
arpl
push
cmpsb
mov
dec
fldcw
stos
push
pusha
stos
xor
jo
ljmp
lock
fsubrl
das
jmp
bts
stc
idivb
cmp
mov
push
lock
mov
sbbl
ljmp
or
xchg
in
repnz
stc
data16
push
daa
adc
or
fnstcw
stos
inc
and
sub
stos
lock
stos
or
push
add
cld
imul
xor
shlb
dec
faddp
orb
pop
stos
insb
push
frstor
repnz
in
xor
dec
in
dec
mov
stos
pop
mov
idiv
in
andl
pop
shrb
inc
xchg
push
imul
addr16
in
mov
fisttpl
cmpsl
push
add
xor
fcompl
popf
or
xor
rcrl
xchg
pop
mov
mov
repnz
mov
mov
aad
int3
lcall
jae
and
mov
dec
and
rorb
mov
ds
lahf
imul
mov
pop
fucomp
pusha
push
mov
mov
data16
stos
repz
shll
cltd
pop
stos
jmp
mov
dec
mov
inc
sub
push
into
subl
shr
stos
call
mov
mov
fisubs
loope
gs
dec
arpl
pop
ljmp
aas
adc
mov
mov
pop
addr16
pop
test
push
loop
stos
cltd
stos
sub
hlt
in
stos
push
js
mov
into
push
hlt
xchg
jp
lods
nop
stos
aad
inc
pop
scas
repz
stos
jnp
insl
or
xchg
xor
incl
gs
je
xor
or
aam
ljmp
lahf
dec
out
and
stos
popf
rcr
push
mov
subb
push
adc
sub
sub
jne
and
scas
jge
stos
or
inc
out
and
ss
testl
jb
sub
stos
adc
xchg
xlat
ret
data16
mov
pop
mov
sbb
adc
in
cmp
or
xor
repnz
xchg
push
stos
das
call
sub
fisubl
push
sub
jne
fnstenv
cmpl
cmp
rcr
xlat
mov
mov
cmp
out
cli
daa
xchg
lods
inc
xchg
xchg
stos
scas
jp
pop
ja
and
adc
lahf
dec
mov
shll
mov
cwtl
ljmp
stos
mov
jmp
and
xchg
mov
das
cmp
cmpsl
sub
lcall
push
xor
add
in
arpl
jbe
pop
jns
bnd
or
test
push
push
or
in
sbb
ds
fistpll
mov
movsb
call
jns
sbb
or
jle
xor
xor
js
shlb
call
lahf
jnp
xchg
mov
sahf
and
inc
mov
add
aam
xchg
jns
stos
xchg
fisubrs
pop
lock
arpl
adc
dec
pop
jg
daa
aas
dec
aaa
lahf
addl
aad
inc
popf
into
push
xchg
sub
addb
nop
xchg
stos
jmp
mov
outsb
in
xor
sbb
ds
sti
xchg
stos
stc
test
icebp
mov
and
negl
std
mov
xchg
push
shlb
inc
push
xchg
jmp
out
aas
insb
adc
imul
stos
notb
pop
mov
lods
insl
scas
out
aam
mov
jmp
or
jnp
fnstsw
mov
aam
add
dec
fsubrl
in
push
arpl
xchg
push
loop
jp
jecxz
cltd
sbb
dec
lahf
test
in
mov
imul
push
dec
jge
fnstenv
jb
sahf
jmp
out
popf
dec
stos
pop
cld
adc
das
ja
xchg
cmc
and
aas
ljmp
stos
shrb
mov
adc
jne
xchg
mov
test
iret
addr16
mov
nop
mov
movsb
mov
call
cmp
js
sub
mov
fxch
or
stos
test
lods
mov
daa
in
adc
test
stos
je
mov
jbe
sbb
sahf
stos
sar
sti
outsb
jmp
ss
fwait
sbb
mov
js
jecxz
push
sti
mov
sub
ret
rorb
iret
fildll
mov
push
and
adc
add
pushf
or
jmp
imul
stos
xchg
add
lcall
push
push
je
lahf
das
pop
xor
push
stos
inc
mov
push
sahf
stos
xchg
adc
push
pop
data16
add
stos
fmull
xchg
sub
dec
stos
mov
adcb
inc
cmp
mov
fildl
in
add
sbb
add
stos
xchg
xor
outsl
mov
xchg
bound
stos
xchg
rcl
sub
pop
stos
adc
cmp
es
lahf
into
push
jmp
cmp
cmp
adc
push
mov
daa
fwait
mov
enter
out
lret
mov
jb
stos
aaa
xchg
notb
or
mov
pop
dec
mov
mov
cmp
mov
or
inc
pop
pop
pop
in
push
stos
lea
xor
xor
jmp
adc
or
xchg
add
xor
stos
and
xchg
loope
xor
sub
adc
mov
leave
out
push
lods
ljmp
pop
fxch
stos
push
mov
inc
lds
sbb
cmpsb
xchg
js
xor
mov
add
add
in
bound
stos
push
popa
cmp
fucomip
fdivrs
ficoml
sub
imul
repz
and
fbstp
xor
jne
inc
stos
lcall
stos
shlb
call
stos
or
lret
test
cmp
pop
cwtl
jg
imulb
test
mov
ja
push
xor
sar
call
push
lcall
lods
xor
dec
imul
push
cmc
ror
cmp
add
stos
pushf
jne
into
scas
xor
xor
jge
dec
adc
pop
std
test
lds
inc
sbb
addr16
pop
xor
jmp
mov
stos
scas
mov
lret
ret
mov
jne
fcoml
popf
aaa
mov
mov
and
mov
and
fldcw
inc
cmp
xchg
lahf
inc
stos
inc
inc
xchg
sub
cli
jp
mov
push
inc
xchg
jo
dec
sbb
sbb
and
stos
add
jno
adc
stos
fisubrs
loope
decl
stos
ss
fwait
adc
les
pop
lods
cmp
push
stc
sub
mov
ss
xor
mov
mov
stos
fimull
push
aam
inc
mov
mov
inc
stos
inc
jmp
pushw
lods
sub
mov
mov
mov
sub
lret
xchg
push
lea
mov
push
cltd
and
sbb
xor
stos
popf
lret
mov
mov
ljmp
pop
scas
test
push
mov
inc
sub
les
test
mov
pop
ds
mov
icebp
jbe
movsb
and
je
xchg
xlat
stos
into
stos
inc
push
mov
xor
fsubrl
int
jl
or
mov
mov
movsb
cld
add
imul
addr16
imul
pusha
jbe
push
scas
dec
dec
arpl
stos
adc
cld
xlat
ja
inc
pop
stos
lea
ret
add
mov
les
pop
lahf
stos
or
in
stos
add
add
push
jmp
test
ret
jno
mov
leave
xchg
xor
stos
hlt
pop
dec
mov
add
sub
xchg
mov
stc
nop
and
in
cmpsl
xlat
jno
add
fisubrs
in
inc
sbb
stos
testl
iret
mov
cmp
push
fistpll
ljmp
imul
xor
xchg
es
inc
jp
in
mov
lods
or
or
insl
sbb
aas
sub
mov
fwait
stos
cmp
sub
imull
int3
pop
stos
adc
pop
aad
push
stos
inc
jmp
data16
push
xchg
fwait
mov
sbb
or
mov
xlat
icebp
cmp
shlb
sub
mov
test
subb
pop
xor
stos
dec
cwtl
mov
dec
decb
in
pop
adc
push
jnp
inc
mov
push
outsl
notb
sarl
xlat
mov
pushl
daa
stos
test
xchg
movsl
cmp
xchg
xchg
test
sub
jns
cs
mov
gs
and
negl
movsb
cmp
stos
aam
xchg
leave
push
mov
popf
out
arpl
mov
pop
mov
sbb
in
movsb
xchg
mov
dec
in
stos
pop
sti
cmpsl
mov
stos
mov
inc
inc
enter
imul
mov
cmp
repnz
js
add
sahf
stos
inc
xchg
shr
in
pop
stos
dec
mov
mov
stos
sbb
xchg
es
inc
lcall
stos
in
xor
mov
ds
cmp
mov
movb
or
fisubs
ret
jge
int3
adc
das
cmp
cmpsb
xor
or
mov
fidivrl
push
sbb
or
sbb
stos
daa
idivb
sahf
cmp
pop
dec
fsubrs
pop
scas
xchg
icebp
insb
stos
lcall
stos
dec
repnz
adc
lods
mov
mov
mov
sbb
xor
lret
xor
jb
and
scas
mov
dec
fcos
adc
bt
cwtl
insb
inc
stos
jmp
jl
subl
stos
repz
fisttps
push
in
loopne
mov
stos
loop
lds
fnstcw
mov
scas
mov
push
stos
jmp
test
stos
lds
sub
stos
jecxz
adc
jb
sbb
int3
xor
shl
mov
leave
push
xchg
stos
push
rcrl
cmpsb
jne
cld
scas
stos
stos
xor
add
adc
xchg
popa
inc
clc
outsl
push
stos
mov
stos
jg
repz
out
fsubrl
test
push
stos
pusha
mov
scas
mov
sbb
xchg
inc
inc
ss
repnz
fiadds
stos
and
arpl
dec
stos
cmp
push
jno
lods
stos
mov
cvttps2pi
in
jbe
xchg
push
les
cs
int3
sbb
test
in
movsl
push
lahf
and
mov
sub
stos
xlat
das
jp
inc
cmp
xchg
rolb
popf
repz
pop
icebp
add
sahf
scas
sub
stc
push
divl
bound
lds
or
out
sti
stos
or
sub
inc
stos
mov
aaa
cmp
xchg
pop
stos
mov
stos
and
daa
jp
mov
mov
test
jbe
stos
lcall
shrb
js
pop
xor
jo
add
movsl
stos
dec
mov
loope
stos
call
xor
lods
cmp
addr16
loopne
mov
fsubs
sbb
lods
or
mov
inc
pop
stos
scas
jg
dec
or
xchg
stos
es
jge
std
testl
add
jmp
clc
cltd
push
pop
jne
mov
cmpsb
call
pushf
mov
fwait
sbb
repnz
rep
fistpll
ja
stos
add
xor
in
pop
and
in
mov
push
imul
sub
shrb
mov
stc
inc
add
int
cwtl
jle
stos
mov
pop
cmp
push
clc
stos
out
std
mov
andl
jecxz
dec
daa
stos
push
xchg
adc
sbb
mov
add
bound
mov
scas
ss
in
arpl
test
mull
xchg
and
and
add
mov
mov
stos
pop
mov
shlb
pop
mov
test
cmpsl
inc
push
mov
mov
mov
cwtl
movsb
in
je
addl
mov
xchg
mov
stos
fstpl
push
jbe
outsb
add
push
das
push
lcall
jge
jg
addr16
xor
ja
cld
jmp
mov
scas
cmpsb
fsubs
xchg
popa
xchg
into
stos
es
add
stos
dec
imul
test
or
add
pop
mov
loop
inc
adc
pushf
insb
stos
cmp
or
stos
mov
iret
fsubrp
stos
xor
xor
stos
sti
lret
divb
mov
cmp
jecxz
scas
rcll
stos
enter
test
mov
dec
aas
mov
cmp
cmp
bnd
xchg
dec
add
push
movb
mov
out
mov
push
rorb
mov
into
stos
mov
xchg
cltd
test
sub
ret
iret
jmp
call
popl
inc
or
and
push
fwait
cmp
and
mov
pop
fwait
sbb
push
push
test
jle
xchg
xor
call
mov
or
push
add
lock
jg
cmp
clc
sub
inc
sub
cmpsl
push
aas
jo
stos
mov
mov
mov
xor
and
mov
nop
adc
stos
mov
mov
jo
bound
cmp
mov
stos
push
push
sub
push
jg
stos
inc
sbb
aad
stos
and
mov
xlat
loopne
loop
push
insl
into
mov
fisttps
repz
and
stos
add
mov
js
xchg
rcll
enter
jge
les
daa
int3
sub
pop
mov
adc
ret
cmpsl
and
sbb
xchg
lds
pop
jae
movsb
fwait
inc
sbb
dec
rorb
hlt
pop
mov
shrl
jne
jmp
orb
stos
cmpsb
inc
pop
and
inc
jbe
lcall
sti
lods
cmp
xor
loope
cmpsb
daa
fldt
mov
sbb
xor
sub
into
idiv
mov
cli
les
sbb
pop
cmp
imul
add
stos
sti
gs
scas
pop
mov
insb
mov
sub
es
ret
xchg
xlat
mov
fsubrs
add
mov
es
cmpsl
shlb
or
add
mov
sub
dec
pusha
mov
pop
cltd
data16
add
xchg
out
notb
xchg
stos
shlb
sub
or
mov
xorb
dec
cmp
push
adc
leave
ss
add
insb
sarb
out
pop
stos
xchg
push
xchg
cwtl
and
aad
popf
subl
pop
fisubs
or
sub
add
or
mov
ljmp
adc
lods
jmp
xor
push
lahf
ja
and
cmp
rcrb
stos
ds
push
inc
pop
xchg
in
jmp
aam
or
int
sbb
pusha
int3
jno
test
ret
leave
scas
jbe
stos
mov
jmp
orl
inc
or
je
push
outsb
sbb
mov
pop
push
int3
out
in
jbe
xchg
xchg
push
out
insl
pmullw
jl
test
add
xchg
fisubs
mov
dec
loop
inc
jnp
cld
inc
mov
je
call
or
es
jnp
mov
and
scas
xor
sahf
fsubr
outsb
pushf
mov
imul
cli
jg
xchg
gs
sbb
mov
stos
xor
loop
cmc
xchg
popa
mov
inc
sbb
ret
xchg
mov
xchg
bound
or
dec
sub
mov
xchg
pop
mov
mov
std
sub
xor
mov
dec
stos
push
or
mov
and
sbbl
stos
fildll
xor
out
incl
dec
mov
sub
fwait
scas
adc
sbb
push
pop
nop
xchg
cltd
ret
jns
mov
cmpsl
aad
mov
lahf
mov
mov
es
cwtl
sub
mov
nop
jbe
sub
fwait
jne
cmpsb
or
addr16
jge
or
mov
in
mov
imul
lahf
lea
sbb
mov
xchg
das
xor
ss
jl
push
daa
mov
adc
stos
dec
cmp
and
push
xor
mov
stos
dec
aam
insb
rorl
stos
pushf
sbb
sbb
xchg
cmp
stos
mov
imul
ss
mov
dec
or
out
ss
mov
adc
pop
cmp
xor
and
int
outsl
movl
push
fwait
mov
jno
xchg
sub
adc
stos
inc
xor
mov
cli
mov
in
inc
lret
mov
scas
xchg
aaa
dec
and
push
inc
mov
out
xchg
jmp
jg
addr16
sbb
test
xchg
and
stos
push
popf
add
mov
stos
or
jmp
jb
add
fcoml
mov
cmp
test
and
stc
stos
or
cmp
cs
pushf
push
push
nop
xchg
dec
popf
aam
cld
imul
pop
rcr
push
push
mov
jl
lea
test
cmp
adc
imul
mov
sub
push
addr16
notl
stos
sub
stos
lea
pop
xchg
xor
inc
outsb
stos
adc
inc
cmp
psubsw
in
or
cltd
fs
and
sub
loopne
xchg
or
pushf
and
push
adc
mov
and
or
fsts
cmp
pop
and
inc
mov
xchg
xchg
loope
and
int3
sbb
push
pop
or
inc
cmp
push
lea
pop
jno
aaa
pop
xchg
psrld
cmp
or
mov
fsubrl
mov
test
adc
stos
add
shl
das
cwtl
push
mov
mov
adc
lods
sbb
mov
xchg
mov
pushf
ss
loopne
adc
sahf
ficoml
pop
movsl
lret
cld
pop
mov
in
in
pushf
aaa
stos
cld
test
sub
scas
icebp
push
jns
repz
call
sub
pop
mov
inc
stos
mov
lahf
lret
sub
stos
test
pop
inc
push
mov
and
jmp
js
mov
inc
daa
stos
pop
sub
in
iret
mov
stos
mov
lcall
mov
pop
stos
sbb
jae
jne
jbe
push
xchg
xchg
cmp
adc
adc
bound
and
in
mov
push
subl
jl
add
int
gs
iret
stc
cmp
mov
std
in
jg
or
jg
mov
pop
fwait
xchg
bound
push
xor
sbb
mov
scas
cs
pop
lea
sti
mov
int
loop
outsl
add
push
mov
pusha
add
lcall
stos
cmp
push
pop
push
mov
sbbb
jmp
add
dec
and
mov
movl
cs
sbb
xchg
cmp
push
inc
mov
aas
xchg
scas
aam
call
out
test
cwtl
mov
stos
bnd
out
pop
cmp
stos
popf
dec
xor
jge
outsb
and
hlt
scas
mov
adc
jns
cmp
cli
xchg
add
xchg
ss
mov
cld
or
test
xchg
std
sbb
mov
and
leave
inc
stos
jge
stc
push
add
dec
sbb
push
mov
ror
xchg
pop
stos
fstps
mov
and
es
sub
xchg
or
ljmp
xchg
stos
xor
les
sbb
inc
add
cmp
out
cmp
adc
insb
adc
pop
add
vmwrite
cltd
jb
fisttps
adc
incl
mov
dec
and
sti
xor
add
ljmp
cs
adc
xlat
stos
cmp
fmuls
imul
adcl
pop
not
imul
stos
sarb
adc
xchg
stos
and
rorl
cltd
push
cmpsb
std
int
mov
sub
fnstenv
push
push
fdivrl
mov
stos
daa
cmp
mov
fldt
xchg
pop
lcall
jb
shrb
push
and
stos
pop
sti
in
call
stc
mov
nop
xchg
ljmp
xlat
aad
lahf
dec
sub
lock
mov
xor
adc
inc
dec
fisttpl
insb
mov
lods
jmp
test
mov
dec
xlat
stos
cmp
xchg
stos
int
stos
mov
and
fisttpl
negl
stos
adc
sub
cmpsl
stc
adc
nop
dec
addr16
mov
and
inc
add
cld
push
leave
sbb
stos
push
dec
mov
inc
cmp
push
int
daa
sub
int3
and
mov
lods
inc
stos
sbb
xor
icebp
jp
push
or
sub
mov
lret
mov
push
cmp
les
stos
jle
adc
sbb
jl
addr16
pop
push
jnp
dec
int3
sahf
dec
mov
xor
jno
std
or
inc
jbe
xchg
enter
je
lods
insb
stos
pop
adc
mov
lock
std
mov
pusha
jmp
out
mov
ds
sbb
cs
push
stos
pop
rcrl
stos
lock
jecxz
add
mov
inc
sbb
dec
imul
in
in
mov
daa
inc
mov
xor
dec
push
filds
stos
mov
sub
push
push
adc
mov
or
dec
outsb
sub
fimull
mov
jmp
sbb
sub
aas
movsb
add
mov
pop
in
call
pop
jecxz
loopne
or
stos
push
ss
aad
jmp
repz
test
inc
xlat
pop
stos
cmp
iret
arpl
sub
sub
stos
out
jbe
pushf
pop
mov
pop
sbb
stos
ucomiss
mov
or
popa
dec
je
stos
or
test
pop
scas
lret
mov
call
in
stos
into
decb
jbe
inc
lds
dec
mov
jne
stos
icebp
scas
std
cld
xchg
add
dec
push
add
mov
out
jnp
stos
push
loopne
icebp
jo
imul
xchg
sbb
orl
pop
jmp
dec
xchg
lea
mov
sbb
push
xchg
mov
xchg
dec
push
mov
sbb
or
out
or
jmp
sub
lahf
cmp
stos
jle
nop/reserved
int3
leave
inc
stos
cld
sbb
std
xchg
xor
mov
hlt
sub
cmp
stos
or
mulb
mov
xor
mov
jle
mov
cmp
xchg
cmp
xchg
add
ds
enter
lods
fisubrs
xor
stos
out
stos
ljmp
in
push
ja
fwait
pop
fmul
insb
push
sub
into
cli
xchg
jo
and
clc
in
shrb
loope
jae
mov
enter
stos
lods
fisubl
mov
xchg
mov
xchg
mov
pop
je
lods
movsl
arpl
adc
cmp
out
cmpsb
stos
filds
stc
popa
lcall
xchg
add
and
in
jp
jp
call
or
mov
xorl
xor
sub
pop
sbb
pop
mov
aas
stos
add
les
hlt
mov
test
cltd
pop
add
cmp
or
sub
in
jb
xchg
dec
aas
sub
xchg
outsl
lock
cld
mov
dec
or
sub
stos
test
mov
sub
sub
adc
or
daa
or
push
in
mov
negl
std
jmp
fs
mov
xor
jg
jns
inc
pop
insb
stos
sbb
dec
add
nop
or
mov
xlat
stos
icebp
dec
push
fstpl
in
fisttps
cmpsb
cmp
movsb
fisubrs
jmp
es
xor
cmp
xchg
cmc
les
mov
cmp
add
clc
stos
xchg
add
mov
int
insl
push
jmp
btc
push
xchg
jecxz
push
mov
das
lret
and
dec
jge
in
push
leave
sub
icebp
mov
into
push
outsl
int3
sub
jp
pop
test
insb
daa
and
sub
stos
adc
cmpl
adc
push
pop
cli
js
and
push
lcall
lea
cmpl
cld
stos
movsb
bound
scas
push
mov
pop
stos
or
and
stos
cmc
inc
loope
stos
stos
loop
scas
xchg
adc
fstpt
or
movsl
cmpsb
call
push
xchg
inc
stos
lgs
pop
push
sahf
pop
stos
outsb
and
ds
adc
push
mov
es
stos
cs
adc
adc
inc
imul
dec
or
mov
or
repnz
xlat
adc
stos
push
add
xor
cltd
sbb
sub
sbb
stos
in
popf
das
pop
mov
loopne
sub
rclb
gs
cmp
loop
xchg
dec
in
push
jmp
test
addr16
daa
out
xchg
sbb
mov
xchg
inc
dec
cmpb
adc
or
push
sub
loopne
pop
xchg
ds
insb
stos
fisttpll
das
xchg
out
andl
push
jae
clc
stos
aaa
cwtl
xor
mov
push
mov
les
leave
mov
into
adc
lret
cs
stos
inc
ljmp
stos
mov
mov
adc
cmp
dec
pop
test
push
js
push
loop
pop
stos
ret
cmpsb
mov
lods
mov
stos
xor
test
insb
xor
adc
jmp
dec
ror
mov
adc
dec
fisubrl
sbb
jmp
imul
into
push
sar
jnp
stos
imul
jmp
mov
pop
mov
lahf
les
test
std
push
stos
test
xchg
lahf
jmp
inc
ret
ss
sbb
cli
xor
adcb
mov
loope
adc
stos
outsb
rcrb
lahf
sbb
jg
mov
ret
cmp
imul
mov
addr16
std
mov
lahf
xchg
mov
loopne
dec
adc
stos
jmp
inc
loope
fnsave
stos
data16
in
jne
pop
mov
stos
mov
jl
xchg
stos
pop
or
mov
aas
pop
sti
fldcw
ljmp
adcb
aaa
stos
lahf
popa
add
mov
pop
imul
cmpsl
mov
jl
leave
xor
jg
stos
ja
outsl
mov
orb
or
stos
sarb
call
pushf
sub
gs
push
mov
enter
jmp
adcb
and
sbb
jb
stos
sbb
jmp
fnsave
cmpsb
decl
push
ja
push
add
inc
dec
cmp
push
lods
sbb
das
movsb
mov
cltd
pop
cli
shll
fwait
inc
add
or
lods
xchg
subb
inc
imul
pop
cmp
stos
pusha
adc
stos
xchg
xor
pushf
dec
nop
test
shrb
int3
cmp
jp
dec
pop
repz
xchg
jmp
jle
inc
cmp
lock
popa
lret
cld
jmp
ror
pushl
aad
push
pop
add
xor
dec
and
leave
dec
testl
test
jmp
stos
push
loope
sbb
cmp
stos
outsb
xchg
rclb
test
popf
daa
stos
sub
xchg
cwtl
cmpsl
iret
nop
xor
xor
stos
insl
add
imul
push
pusha
inc
es
mov
test
test
and
push
stos
gs
lods
fcomi
aas
notl
dec
xchg
or
jg
jne
adc
stos
sub
decb
imul
int3
mov
push
mov
add
mov
xlat
ficoml
test
pop
stos
pop
lret
adc
stos
test
call
stos
jnp
add
sub
loope
test
imul
stos
mov
in
test
aam
xchg
sbbl
cltd
mov
xor
movsl
sub
pusha
or
push
stos
and
xor
in
mov
lret
js
jmp
daa
imul
mov
pop
and
bound
aam
ror
sbb
dec
subb
sbb
mov
push
add
sbb
jg
mov
cltd
daa
cmp
xchg
inc
in
iret
mov
mov
ds
mov
imul
pop
pop
or
imul
mov
and
imulb
sub
dec
xchg
cmp
xchg
mov
mov
xchg
sarl
pop
sbb
cmpb
stos
or
rcrb
stos
and
incl
stos
xlat
jne
sub
pop
test
js
jno
xor
jo
mov
dec
je
inc
mov
mov
add
jno
stos
insl
jbe
repnz
push
jmp
xchg
ljmp
loop
inc
mov
iret
lds
fadds
add
xchg
loope
es
gs
dec
cs
dec
scas
stos
lret
mov
push
xchg
stos
pusha
cmpsl
fucomp
mov
rcrb
pop
out
fildll
jle
out
aad
jg
cmp
dec
mov
inc
insl
mov
xor
mov
jmp
outsb
out
add
inc
stos
jle
mov
out
jg
stos
push
ret
pop
jmp
enter
lods
add
stos
add
inc
loop
cmp
and
imul
xchg
xchg
jae
je
sub
pop
jbe
push
ret
arpl
mov
movsb
scas
int3
stos
fwait
mov
adc
ficoml
jne
aaa
cmp
fisttpll
sub
inc
mov
push
xchg
mov
adc
lea
frstor
shrb
xchg
and
stos
pop
push
adc
movsb
cmp
lock
or
cltd
jmp
ret
inc
xchg
mov
ds
std
mov
test
pushl
jge
jmp
aam
inc
jmp
cwtl
stos
xchg
jo
pop
xchg
scas
dec
imul
stos
lahf
push
xchg
sbb
inc
lea
insb
stos
addb
out
nop
and
jg
cmp
pop
wrmsr
xor
stos
or
pop
and
fs
in
stos
cltd
mov
fnstenv
sarl
aaa
mov
in
or
push
xchg
fstps
push
daa
ds
sbb
dec
lods
push
popf
xlat
xchg
ljmp
adc
int3
stos
jb
movsb
push
sub
jmp
mov
stos
xor
push
gs
dec
stos
adc
add
stos
or
jo
lods
imul
testl
stos
adc
push
inc
xchg
jno
jmp
out
push
outsb
add
cmpsl
or
pop
dec
movsb
xor
inc
sub
stos
dec
js
cwtl
mov
repnz
push
stc
sti
shrl
xor
stos
js
daa
pushf
push
dec
in
jp,pt
pop
mov
mov
inc
fwait
insl
jmp
xchg
dec
fsubr
add
jnp
or
xchg
fwait
sbb
stos
ror
xchg
addr16
mov
icebp
int
xor
xchg
fwait
clc
add
repz
adc
cmpsl
xchg
popa
hlt
stos
pop
orb
loope
cs
stos
dec
aas
stc
loop
mov
lret
stos
push
xchg
repz
aaa
mov
xchg
stos
in
add
cmp
insb
pop
dec
xchg
push
pop
mov
sub
popa
jl
xlat
mov
mov
movsb
aam
loopne
cs
lock
mov
push
xchg
jp
out
stos
and
and
call
sarl
stos
lds
mov
stos
sbb
adc
jnp
out
push
xor
pop
inc
lods
add
aaa
and
stos
cld
dec
adcb
fcmovnb
stos
jecxz
adc
rol
xor
stos
jge
into
in
stos
je
adc
stos
mov
loopne
test
idivl
out
pop
xchg
movb
popf
and
clc
mov
faddl
push
push
aam
mov
inc
stos
pop
jb
fnstsw
cmp
emms
push
fcmovnb
popf
mov
lahf
pop
test
dec
mov
out
inc
lahf
push
stos
int3
xchg
and
movsb
scas
sub
stos
bound
in
ljmp
stos
pop
leave
sub
call
notb
xchg
test
jnp
xor
iret
stos
pop
out
cmp
fmul
aam
jnp
sub
mov
imul
ds
arpl
insl
hlt
sub
lods
stos
cli
sbb
mov
stos
inc
xchg
and
lahf
fbstp
mov
and
pop
sarb
mov
mov
insl
xorl
dec
mov
lcall
push
push
and
jmp
dec
aaa
out
outsl
aam
dec
xor
inc
daa
or
push
xchg
shrb
movsb
stos
mov
or
lcall
imul
xchg
stc
stos
push
repnz
add
sti
or
outsl
adc
add
inc
push
sub
ss
xor
mov
pop
cmp
and
xchg
push
jecxz
arpl
sbb
fwait
loop
push
cld
lods
mov
ds
jl
push
mov
pop
xchg
and
fildll
jno
lds
outsb
stos
cmc
or
mov
push
add
rcrb
fcompl
stos
xlat
aas
or
pop
inc
dec
stos
and
cmp
rol
inc
stos
roll
pop
lret
loop
add
imul
xchg
push
sub
mov
and
jp
dec
jnp
mov
stos
dec
add
mov
in
fldl
fwait
loope
jmp
rcr
mov
setg
push
popf
xor
sbb
stos
or
fs
mov
add
inc
and
daa
shll
int3
inc
repnz
add
movsl
jmp
sub
cmp
jp
cld
jge
cmp
cmpsl
outsb
jecxz
jmp
sbb
icebp
pop
stos
int
inc
repnz
pop
in
stos
stc
int3
decl
cmpsb
hlt
fidivs
jb
cld
sub
test
stos
adc
xor
xor
mov
jp
test
or
stos
loopne
outsl
lret
push
ljmp
dec
push
push
mov
cmp
add
jne
mov
mov
stos
pusha
mov
mov
sub
mov
dec
das
dec
into
stos
add
jp
movsb
or
xor
cmp
stos
dec
or
or
dec
add
lahf
xorl
das
push
mov
sahf
mov
pop
jbe
fists
xchg
jecxz
xchg
scas
push
es
adc
stc
mov
inc
add
mov
insb
push
pop
jg
push
pushf
xlat
sbb
ljmp
pop
testl
jg
orl
mov
push
les
fstpl
std
imul
stos
iret
mov
movsl
push
stos
test
cli
xchg
aad
imul
test
in
dec
lds
mov
stos
push
ja
dec
clc
push
cld
pop
xchg
adc
inc
stos
jp
push
pop
push
xchg
jmp
mov
xchg
out
nop
outsb
lcall
mov
pop
stos
mov
jmp
jmp
cmp
jno
xchg
stos
lret
pusha
cld
ret
stos
xchg
xchg
add
mov
scas
aaa
data16
call
mull
cltd
adc
inc
pop
sbb
xchg
xchg
nop
push
imul
mov
stos
icebp
imul
cltd
jl
stos
ret
and
pop
mov
xchg
arpl
fcmovnbe
scas
jne
lahf
popa
stos
pop
sbb
int
loope
pop
outsl
sbb
stos
jo
divl
jecxz
mov
xchg
sub
stos
dec
mov
inc
add
push
sahf
mov
adc
inc
jmp
fmuls
push
jae
incb
push
mov
stos
repnz
sbb
imul
xchg
sub
imul
stos
mov
loopne
jge
rclb
lahf
xor
nop
stos
lret
mov
cmpb
mov
pcmpeqw
scas
pop
xor
stos
adc
jnp
pop
stos
and
insl
sbb
jo
inc
insb
mov
xchg
sbb
bound
pop
es
js
mov
and
dec
setnp
lods
stos
xor
fistpl
mov
test
fistps
js
adcb
dec
inc
stos
and
repnz
push
push
cmp
push
ret
adc
stos
dec
lock
movsl
lods
mov
xor
sbb
out
icebp
mov
xchg
and
rcrl
push
iret
test
mov
mov
xor
jge
pop
and
jle
add
in
mov
cmp
repnz
sbbl
jns
mov
in
mov
adc
mov
sub
jmp
sbb
lcall
stos
add
loope
stos
mov
leave
jp
aaa
insb
fisubl
lods
push
mov
popl
jg
imul
mov
mov
push
and
shld
inc
fmull
loope
dec
cmpsb
in
xor
add
xchg
ret
stos
pop
jp
pop
mov
pop
stos
stos
popa
jg
mov
or
dec
adc
cmp
call
stos
pop
lods
add
das
les
nop
mov
out
fnstcw
mov
jbe,pt
fwait
mov
adc
fimuls
adc
pusha
loopne
test
test
scas
mov
sti
and
sbb
adc
inc
sbbb
or
aas
jbe
push
imul
fwait
push
adc
imul
stos
mov
push
or
inc
movsl
stos
cwtl
enter
sbb
mov
fstpl
and
or
shl
sbb
push
cmp
sub
push
in
lcallw
aam
mulb
mov
mov
aad
lods
aas
pop
mov
stos
mov
arpl
jne
xor
fisttps
imul
dec
pop
add
std
stos
cmp
mov
test
inc
pop
gs
mov
imul
sarb
fsubs
jnp
in
push
je
xchg
xchg
stos
mov
push
or
insl
dec
mov
pop
xchg
cs
push
jmp
cmp
fsts
sub
insb
push
stos
jbe
fiadds
stos
lods
cmp
in
leave
or
mov
push
add
pop
pop
lea
mov
cmp
mov
insb
enter
sbb
and
mov
stos
lret
mov
jbe
out
dec
sbb
test
stos
push
cs
xchg
cwtl
fldt
inc
jnp
scas
stos
cli
lret
test
push
popa
stos
jo
shrl
js
mov
and
jnp
cs
or
popf
sub
clc
stos
jb
lret
sbb
rorl
dec
sub
in
sub
jno
jp
stos
lods
out
loope
dec
ftst
stos
add
cmp
jmp
je
cmc
bound
stos
or
stc
xor
lea
push
loope
jbe
mov
mov
sahf
enter
pop
hlt
xchg
dec
imul
push
stos
dec
pop
adc
shlb
mov
jne
loope
jmp
xor
scas
ds
data16
imul
push
les
stos
mov
jle
mov
pop
icebp
inc
dec
int
inc
adc
int3
lahf
loope
incl
push
xlat
call
ljmp
and
rcll
push
stos
clc
xlat
mov
fisubrs
sarl
mov
inc
fadd
add
cmpsb
dec
cli
adc
xor
mov
dec
mov
mov
mov
push
test
pop
stos
ss
pop
mov
sub
jecxz
into
cltd
hlt
aam
int3
add
out
pop
jge
fldcw
stos
jne
test
dec
cmp
mov
stos
lahf
adc
stos
sahf
xor
movsb
dec
mov
stos
jp
sub
inc
mov
mov
test
imul
dec
cmp
icebp
mov
jae
les
fsubl
or
push
and
or
pop
xor
lock
add
faddl
push
je
mov
dec
jg,pt
mov
daa
sub
out
add
push
and
stos
sub
mov
adc
or
sbb
sub
or
push
repnz
shll
out
mov
push
and
sti
data16
fimuls
stos
in
andb
repnz
fistl
or
loop
mov
fwait
cmpsl
in
aad
lcall
stos
xchg
stc
aam
subl
jmp
stos
cs
inc
icebp
xchg
add
stos
popf
testl
push
or
inc
ret
dec
sbb
xor
mov
pop
lods
aas
mov
insb
jae
stos
or
aaa
push
inc
sbb
stos
mov
out
pusha
pop
push
add
outsl
push
push
mov
cmp
adc
sbb
pop
mull
xchg
ret
mov
xchg
jle
daa
adc
and
psubsb
mov
sbb
dec
cmpsl
sub
sahf
adc
mov
test
imul
push
imul
mov
push
xchg
cmpl
mov
sbb
stos
xor
push
fdivrl
add
xor
stos
inc
jo
add
stc
mov
or
cs
add
imul
mov
inc
push
mov
jmp
data16
jmp
test
jno
pop
mov
sbb
jg
subb
sub
adc
stos
push
cmp
imul
sub
fiadds
mov
shrb
xchg
xchg
stos
mov
or
call
in
add
jnp
test
dec
stos
dec
sbb
dec
scas
sbb
imul
add
or
adc
mov
xor
imul
mov
icebp
jno
stos
add
in
int3
scas
and
pop
stos
mov
iret
inc
jp
stos
pop
pusha
test
xchg
stos
sti
mov
dec
rcrl
gs
stos
mov
push
clc
push
enter
lea
shrl
shlb
scas
pop
icebp
push
xchg
cmp
dec
rorb
jle
test
pop
push
lods
or
fwait
cmp
cmc
imul
addr16
add
or
lods
or
inc
sti
sub
lock
xchg
pop
outsl
mov
stos
push
movsl
mov
out
and
fildll
stos
mov
jbe
adc
and
fisubs
dec
stos
pop
stos
inc
jbe
push
pushf
inc
sub
in
mov
ja
mov
xor
add
fwait
in
stos
decb
in
jl
or
cmp
ret
shlb
push
mov
in
cwtl
repnz
push
aaa
ficoms
stos
jmp
jmp
popf
jl
or
cmovae
mov
lds
or
lock
subl
dec
jno
or
testb
ret
mov
cmpsl
je
sbb
mov
inc
movsb
stos
fnstenv
ficompl
out
mov
adc
xor
push
addr16
mov
inc
jg
sub
add
adc
mov
mov
pop
fwait
sbb
sbb
xchg
push
mov
scas
pop
lock
cmp
shll
stos
mov
inc
mov
stos
sub
outsl
or
sbb
test
jge
imul
mov
dec
stos
dec
jae
jo
mov
mov
mov
stos
add
fwait
xor
stos
icebp
mov
xchg
push
jp
xchg
xchg
adc
sub
push
xchg
and
stos
pop
xchg
nop
movsl
xchg
pop
pushf
pop
mov
imul
test
cli
pop
xor
repz
nop
insl
stos
xor
jg
stos
pop
call
xchg
stos
js
pop
rclb
jecxz
dec
stos
jo
out
adc
clc
or
jmp
sub
lahf
addr16
int3
dec
stos
and
push
in
sti
mov
pop
addr16
and
push
je
jmp
or
mov
loop
stos
jb
pop
shlb
ret
mov
cmpsb
mov
sub
push
xchg
mov
pop
mov
mov
or
pusha
daa
cmp
push
sbb
or
cmp
xor
clc
sar
arpl
jo
sbb
mov
add
add
mov
adc
in
aas
test
in
outsl
jnp
out
stos
arpl
mov
mov
scas
push
not
sbb
stos
andb
test
shlb
stos
arpl
mov
sti
push
cmpsb
out
data16
insb
cmp
fldcw
jmp
out
pop
sti
mov
nop
xchg
in
jmp
dec
dec
aam
mov
xchg
loope
jmp
in
lret
xchg
xchg
add
cmp
lea
rep
xchg
jle
lods
icebp
sub
pop
stos
popa
xchg
push
adc
push
arpl
dec
cmpl
sbb
or
gs
shrl
in
add
mov
fldenv
stos
mov
mov
shrl
ret
stos
shr
jae
test
pop
mov
mov
arpl
repnz
aam
stos
mov
stos
cmp
or
inc
scas
mov
and
sbb
icebp
xchg
push
sahf
mov
rcrb
or
ljmp
lret
fists
loop
jg
or
xchg
sub
stos
addr16
pop
les
ja
mov
mov
imul
push
icebp
out
jg
adc
dec
fildl
lods
or
mov
mov
stos
je
mov
cmp
stos
daa
xchg
les
out
test
into
sub
mov
adc
hlt
sbb
or
es
call
enter
mov
jb
in
xchg
dec
mov
add
pop
idivl
stc
mov
leave
lods
mov
xor
push
push
jns
rclb
cltd
or
mov
xor
push
mov
or
rorl
mov
adc
mov
mov
subl
or
aas
or
stos
cwtl
popf
fdivrl
jne
dec
les
push
pop
xchg
test
fwait
or
and
shrl
dec
pop
mov
xchg
arpl
push
movsb
ds
xchg
std
lret
inc
das
pop
mov
xchg
test
push
mov
pop
jle
add
stos
jnp
jge
movsl
dec
stos
mov
lret
inc
inc
xchg
stos
mov
or
bound
jp
daa
push
das
insl
stos
inc
xor
popf
jno
inc
loopne
in
ret
stos
in
movsb
xchg
data16
mov
add
adc
rorl
popf
subb
jnp
daa
adc
rcrb
arpl
sub
test
lock
inc
pop
stos
mov
stos
cmc
mov
pop
gs
stos
dec
add
add
das
stos
jnp
stc
add
pop
out
stos
sbb
and
sub
addr16
scas
lret
stos
adc
sub
std
stos
outsb
loope
sbb
pop
mov
stos
jo
test
sbb
dec
aad
cmp
adc
mov
jmp
and
rcrl
mov
stos
mov
push
leave
lahf
inc
push
xor
push
mov
mov
push
and
mov
mov
stos
ja
jbe
arpl
dec
shrl
cmp
stos
inc
sbb
fsubl
icebp
subb
ds
or
xor
lcall
stos
imul
addr16
add
and
sbb
mov
test
or
sub
sbb
xor
int
stos
add
lds
out
std
divl
or
or
mov
stos
gs
xor
mov
loope
pushf
repnz
imul
stos
jae
dec
add
sub
jmp
aad
das
and
pop
nop
shll
div
int3
cltd
mov
cmp
push
rol
out
adc
pushf
xorl
xchg
sub
outsb
and
sub
hlt
mov
jge
inc
cltd
dec
jno
inc
out
ficoms
pop
jnp
cmp
pop
pop
js
imul
cmc
jmp
flds
sub
in
test
out
cmp
gs
pop
cmp
inc
imul
sbb
xor
pop
mov
stc
outsl
ficomps
pushf
jbe
rcll
push
arpl
jns
adc
movsl
sbb
pushf
lock
or
in
push
data16
mov
arpl
xor
clc
aas
fnstenv
sub
sbbl
lcall
add
and
dec
lds
dec
cmp
ret
popf
daa
push
ds
in
xchg
dec
jo
cmp
and
sarb
imul
pusha
int
clc
stos
das
xor
lcall
ficomps
stos
insb
js
push
sbb
xchg
je
loopne
mov
sub
hlt
sub
setp
insl
push
stos
sub
cmp
stos
rcrb
std
fdiv
jnp
inc
stos
xchg
iret
mov
imul
mov
shrb
adc
jnp
loop
cs
jmp
das
idivl
push
and
lret
jmp
movsl
xchg
clc
or
stos
fwait
inc
orl
mov
push
jl
and
iret
inc
xchg
lahf
imul
in
mov
mov
mov
mov
xchg
or
adc
ljmp
aad
fsubs
xchg
daa
movsb
fnsave
inc
mov
sub
mov
sbbb
add
fucomip
pop
scas
popa
lea
sub
add
add
xchg
mov
mov
push
subl
mov
stos
mov
and
stos
mov
sub
in
loopne
xor
cltd
stos
xchg
pop
sub
aas
sub
cmp
mov
adc
std
jmp
mov
add
push
xchg
push
jae
xor
xor
inc
movsb
aas
push
mov
jbe,pn
mov
inc
nop
inc
xchg
gs
adc
popf
mov
out
add
mov
add
mov
dec
gs
ja
xchg
call
and
push
repz
scas
and
xchg
stos
jne
es
repnz
and
mov
daa
call
xor
sbb
add
shll
push
stos
je
pop
cmp
mov
add
and
test
push
nop
out
leave
push
push
out
lock
sbb
jbe
sub
repnz
daa
or
adc
push
mov
mov
push
lret
lea
fwait
mov
pop
out
jecxz
mov
aas
push
jne
xchg
inc
popa
push
push
xor
gs
lahf
je
repnz
fiadds
dec
cmp
mov
pop
loope
inc
or
test
adc
jecxz
stos
mov
mov
popf
dec
stos
repz
mov
xchg
sbb
out
sbb
in
scas
mov
icebp
xor
push
mov
daa
or
fsts
rorb
iret
xor
bound
loop
stos
and
mov
ret
fidivrs
sti
test
jmp
lahf
test
clc
mov
xchg
xchg
adc
idivl
shlb
addr16
sub
mov
jno
or
stos
movsl
pop
cmc
es
stos
mov
push
dec
stos
dec
and
mov
imul
stos
push
pop
imul
in
inc
and
bound
xor
jmp
shrb
das
xchg
lret
fisubs
mov
test
fildll
dec
fwait
shrb
pop
inc
cmp
push
lahf
shlb
fsts
cmp
pop
dec
mov
jns
mov
inc
and
pop
fwait
sbb
sub
int3
xchg
sarl
mov
dec
inc
jmp
push
push
stos
or
inc
ljmp
aam
outsb
stos
cmpsb
mov
sub
stos
in
fisttps
jmp
fcmove
dec
scas
mov
imul
mov
cmpsb
cmp
popf
fsts
lods
stos
ss
mov
stos
int
repnz
jns
push
and
out
mov
pop
mov
dec
int
mov
stos
adc
in
nop
mov
stos
adc
sub
push
pop
es
stos
push
popa
ss
out
and
xchg
mov
ja
mulb
lahf
and
adc
sbb
fbstp
and
lret
dec
lea
mov
stos
iret
sub
mov
jbe
lcall
fistpll
inc
shrb
lea
sub
inc
enter
adc
xor
pop
fisubrl
dec
movsl
rol
stos
xchg
mov
in
stos
pop
ret
inc
test
stos
push
cltd
adc
sahf
sbb
dec
in
add
out
fwait
inc
out
xchg
dec
pop
stos
and
push
inc
add
outsl
inc
push
fmull
notl
subb
lods
add
sbb
cmpsb
in
push
push
pushf
shrb
pop
mov
adc
xor
xlat
lods
lods
out
stos
pop
adc
cs
popa
sahf
nop
movsl
jmp
dec
std
repz
aam
stos
inc
mov
push
lret
dec
mov
stc
mov
mov
xchg
loopne
stos
mull
dec
stos
pop
ficoml
push
ds
leave
std
stos
cmp
xchg
or
lea
in
xchg
testl
imul
scas
cmp
sub
adc
xchg
daa
jnp
sub
fdivrs
add
stos
negl
mov
gs
scas
pop
cmpsb
dec
jb
sub
mov
inc
cmp
sar
adc
push
sub
leave
push
cltd
sub
lcall
mov
dec
stos
or
rcl
and
add
stos
inc
addr16
adc
repz
stos
and
jno
push
xor
inc
stos
xor
jne
in
mov
rcpps
sub
imul
stos
jmp
push
in
stos
dec
enter
inc
mov
cltd
add
jbe
addl
xlat
sub
in
stos
mov
xor
insl
stos
clc
loope
movnti
stos
testb
mov
icebp
lret
lock
int3
inc
iret
push
pop
cwtl
outsl
mov
fcmovnbe
mov
cltd
sti
xor
sbb
jge
or
add
mov
out
negl
cli
into
sbb
popf
mov
dec
bound
into
xorb
mov
test
sbb
stos
mov
xchg
jle
xchg
sub
mov
lcall
dec
insl
mov
stos
cmp
sti
inc
lods
stos
xchg
ret
inc
in
inc
cmpsb
neg
sbb
cli
stos
mov
push
mov
stos
popa
xor
mov
movsl
int
stos
xchg
mov
stos
jle
pop
push
out
mov
imull
sbb
and
imul
jbe
xorb
sbb
mov
dec
xlat
mov
jl
add
mov
lods
and
in
gs
jmp
outsb
push
and
jmp
lods
sbb
inc
movsl
sahf
stos
mov
es
cld
mov
aam
testb
stos
popl
movsl
add
je
jmp
inc
test
imul
xchg
sbb
movsl
call
outsb
xchg
daa
imul
mov
loop
push
sbb
sbbl
and
out
pusha
inc
daa
mov
stos
in
addr16
das
push
stos
inc
jecxz
cmp
faddl
andb
push
mov
jne
inc
mov
imul
jnp
push
jmp
push
dec
fisttpll
cwtl
mov
push
xchg
pop
push
xchg
stos
or
mov
outsb
mov
xchg
in
push
jl
cmpsl
jb
pop
fwait
jge
mov
popa
add
xlat
cmp
xchg
adc
stos
mov
jb
push
stos
dec
insl
jbe
add
xor
iret
mov
ret
ss
push
into
mov
mov
sub
pop
stos
das
mov
jns
stos
imul
divb
sub
enter
loope
and
cli
jmp
mov
lods
pushf
mov
pop
inc
adc
movsl
stos
push
or
fildll
sub
pop
xchg
out
cmp
mov
push
mov
xor
notl
pusha
or
jmp
rcr
mov
inc
fistps
in
mov
xor
cwtl
fs
xchg
and
add
or
cvtpi2ps
mov
in
mov
mov
in
cmp
stos
ds
test
and
mov
sbb
movsb
sbb
or
or
stos
or
pop
repnz
mov
xchg
and
jbe
jge
das
add
inc
adc
scas
xchg
sbb
cmpsl
stos
fs
dec
sub
push
add
mov
fld
stos
adc
mov
stos
ret
push
addr16
out
fwait
movsl
testb
jo
cmp
gs
jno
sbb
addr16
push
pop
jp
fwait
inc
jmp
xor
sub
xor
push
cmc
mov
xchg
pop
stos
cltd
push
addl
cmpsl
imul
pushf
fcmovu
sbb
stos
add
testl
int
imul
mov
push
adc
push
insl
and
jmp
ret
jbe
sub
or
icebp
jne
mov
movsb
or
xchg
jno
add
ljmp
add
push
sbb
dec
push
daa
or
pushf
lea
mov
shrb
out
das
jbe
icebp
bound
int3
mov
pop
lret
jg
sti
xchg
stos
in
rcrb
out
shll
and
mov
mov
cmp
xchg
imul
out
cs
into
inc
lds
fldcw
ljmp
fisttpll
sahf
test
pop
ljmp
rcll
outsb
ud2
inc
cli
stos
arpl
dec
mov
fwait
jae
jmp
and
aad
inc
stos
add
int3
xchg
rol
stos
out
jbe
sub
jge
xor
adc
lret
pop
cmp
xchg
subl
jmp
pop
pushf
jp
xor
inc
adc
push
xchg
push
inc
inc
xchg
rolb
stos
mov
idivl
js
push
sub
add
outsb
pop
lret
mov
xor
pop
mov
mov
jle
adc
stos
lea
jl
stos
test
jge
pop
cltd
aam
xchg
outsl
rcll
popf
stos
xchg
jae
add
pop
cmp
rcll
sub
dec
and
mov
ficompl
stos
les
ja
stos
aam
mov
stos
sub
out
mov
ret
push
push
fnsave
stos
pop
ret
sub
inc
pushf
fs
loopne
jae
jne
mov
pop
lret
pop
aam
adc
popf
pop
orl
xor
in
jmp
cmpsb
sbb
dec
into
je
or
arpl
test
stos
out
dec
shlb
xchg
pusha
in
dec
sbb
jp
div
arpl
cmc
pusha
lods
leave
sarl
add
and
sub
fisubrl
jmp
push
aas
jecxz
lods
pop
sub
and
inc
jl
aam
in
imul
mov
pusha
call
pop
cwtl
std
jmp
adc
xor
xorl
stos
fidivrl
pop
xchg
lret
stos
push
cltd
decl
mov
and
fwait
pop
jnp
andb
mov
sub
stos
mov
stos
jno
sub
sub
in
out
pop
das
jnp
subl
imul
shrl
mov
lods
mov
iret
xchg
int
lods
leave
sbb
mov
stos
jno
cmp
sbb
sbb
icebp
popa
inc
pop
movsb
loope
call
pushf
mov
stos
xor
stos
mov
repz
lods
jmp
out
stos
iret
cmp
mov
ret
mov
mov
movsb
push
movsl
xchg
arpl
stos
popa
mov
jae
push
lahf
sbb
dec
stos
test
sbb
push
jne
clc
mov
mov
inc
aam
stos
mov
outsl
lock
sub
jl
xchg
pushf
ret
mov
sbb
repz
stos
mov
sub
push
pop
mov
and
xor
and
push
rcll
xor
lcall
scas
mov
jbe
mov
push
loope
in
add
push
scas
mov
mov
lret
xor
imul
jl
dec
subb
jge
push
pop
int3
aas
add
fwait
push
inc
mov
outsb
mov
daa
test
mov
xchg
sub
push
imul
mov
dec
xchg
stos
mov
addr16
addr16
lret
sub
push
push
stos
inc
mov
xor
andb
cmp
mov
stos
add
in
stos
jl
gs
fsincos
cmp
and
sbb
imul
fmul
loope
xchg
call
inc
mov
aad
push
stos
lahf
ja
mov
scas
inc
fsubrp
xor
stos
popf
andl
add
and
xor
jp
cmpsb
push
enter
loop
out
push
sbb
pop
dec
cmp
ror
xor
xchg
arpl
mov
mov
or
call
xor
xchg
stos
pop
push
add
push
fdivl
jmp
add
imul
stos
mov
cmp
and
dec
sbb
das
or
sbb
pop
loopne
insl
fwait
jg
in
pop
dec
inc
stos
xlat
sahf
xor
lahf
or
daa
push
aaa
push
ss
adc
lods
dec
stos
mov
lea
pop
pop
aad
pop
mov
or
add
add
repnz
scas
lahf
stos
popf
mov
out
jne
sub
push
cs
es
repz
pushf
dec
jne
and
cmpsb
adc
xchg
mov
pop
stos
loop
cmp
push
inc
inc
pop
stos
dec
and
ja
in
call
insl
adc
push
int3
xor
lea
cs
stos
mov
mov
cmpsl
or
aad
daa
ja
push
sarb
xchg
subb
stos
imul
jle
daa
pop
insb
stos
push
or
xor
sbbl
cmp
mov
outsl
dec
pop
xchg
fidivl
flds
popf
insl
sub
dec
orl
test
pop
psubw
daa
jecxz
mov
push
push
daa
dec
rorl
lcall
stos
cmp
jno
dec
enter
mov
sbb
xlat
pop
jle
test
imul
fwait
sub
sbb
mov
jmp
in
cld
loopne
add
loope
or
std
xchg
std
rcl
mov
mov
loop
mov
add
stos
test
inc
dec
enter
mov
sub
mov
aas
inc
xchg
mov
inc
jmp
push
inc
sbb
fcoml
lcall
test
pop
sub
cmpsb
stos
mov
test
jbe
pop
stos
shl
inc
xlat
imul
stos
push
xor
stos
lcall
scas
stos
addr16
pop
xchg
cmc
in
add
std
jmp
mov
cmpsb
cmp
stos
aam
repz
int3
sti
movsb
bound
push
inc
into
subb
mov
jle
repz
rcrb
scas
loope
scas
add
jg
mov
mov
stos
pop
xchg
inc
xchg
xlat
enter
push
sbb
call
stos
dec
std
push
mov
cmp
xor
mov
jno
push
stos
push
jae
inc
icebp
idivl
sbb
and
sub
jmp
lods
sahf
enter
aaa
mov
sbb
dec
popf
cwtl
xchg
dec
mov
xorl
jg
sbb
scas
xchg
lds
mov
push
hlt
movsl
add
sub
sarl
stos
push
nopl
and
shrb
inc
fidivs
push
lcall
imul
pop
rorb
push
stos
push
or
in
int
addr16
ja
fadds
push
out
and
sbb
test
sbb
push
mov
xor
jle
shlb
jmp
out
mov
push
xchg
imul
mov
js
test
pop
test
fldt
stos
push
mov
stos
mov
pop
inc
daa
stos
dec
xchg
shll
inc
lea
shrb
push
jo
jns
ret
jl
jno
push
adc
or
dec
cmc
stos
das
nop
xchg
hlt
cmp
mov
stc
lea
xchg
pushw
fucomi
test
push
inc
xor
scas
lcall
mov
test
add
jns
inc
sbb
movsb
lods
xorl
in
das
loopne
or
cld
or
out
imul
adc
hlt
push
loopne
mov
movsl
stos
fisubrl
shrl
add
stos
add
mov
cltd
stos
jp
push
cmp
and
les
xchg
ret
fisubs
test
inc
mov
pop
and
ret
mov
adc
das
jnp
and
add
xchg
aaa
icebp
and
mov
push
nop
jae
add
loope
std
sub
jl
add
adc
movsb
rep
xchg
sub
xor
fwait
mov
test
adc
ret
enter
xor
iret
imul
cs
sti
jb
fildll
xor
push
pusha
pop
pop
inc
cmp
and
stos
iret
outsl
enter
lods
sahf
fwait
cs
popf
aaa
adc
dec
jae
stos
jmp
lahf
xchg
mov
call
dec
add
fwait
add
addr16
pushl
cmpsl
jmp
dec
jno
xlat
sar
cmpb
fwait
jl
stos
arpl
ss
sub
mov
scas
aaa
mov
stos
js
or
mov
stos
sbb
dec
loope
mov
pop
ja
bound
stos
mov
adc
sub
push
xorb
xchg
movsb
scas
sub
mov
xorl
pushf
push
sbb
pop
push
push
stos
add
les
sub
push
je
jns
stos
inc
jbe
les
sub
out
adc
imul
andl
mov
and
push
enter
mulb
push
sub
lcall
sbb
lcall
stos
rcrb
mov
xchg
test
mov
push
out
std
cmp
into
fwait
xchg
clc
sub
mov
das
jg
push
sub
sbb
imul
push
mov
dec
out
push
dec
cmp
lock
rcrl
pop
sbb
jne
mov
cld
jg
in
sti
push
mov
sbb
or
jo
sub
fistpll
push
ss
mov
jns
lods
adc
push
cmpsl
stos
mov
sbb
call
js
jae
dec
es
stos
shll
cwtl
into
pop
sub
cli
sub
xchg
xchg
stos
cs
int3
inc
addr16
test
mov
dec
mov
sub
sub
push
aad
stos
shrb
arpl
ja
lret
repz
imul
outsb
mov
xchg
out
lahf
mov
mov
sbb
shll
scas
or
mov
and
adc
clc
xchg
pop
daa
pop
jmp
dec
stos
inc
pop
add
mov
shrl
cmp
mov
push
outsb
jp
or
xchg
xor
mov
invd
popa
mov
sbb
adc
aad
or
adc
dec
push
stos
inc
sbb
popa
jp
ljmp
mov
pop
int
stos
mov
push
pusha
jmp
mov
ljmp
mov
pop
shrl
inc
dec
outsb
cwtl
inc
mov
push
add
xchg
xor
jnp
arpl
cmpsl
mov
sbb
pop
and
sti
stos
xchg
mov
cmp
sub
cmpsb
fisubrl
pop
pushf
add
subb
mov
xor
stos
inc
xor
daa
inc
into
cmp
jg
popf
pop
push
mov
movsb
jb
mov
push
lahf
stos
cltd
insl
xchg
or
jl
inc
stos
idiv
sub
dec
mov
mov
xchg
stos
fdiv
mul
rcl
pop
stos
push
pop
mov
or
mov
call
dec
mov
fwait
xor
lret
xchg
pop
stos
scas
push
mov
xor
lods
test
lods
fisubl
push
stos
in
xor
add
lods
jno
jnp
sub
dec
adc
imul
adc
sub
lds
mov
sbb
stos
jb
ljmp
xlat
loope
in
fucom
dec
jnp
cltd
mov
rolb
idiv
pop
stos
dec
imul
sahf
nop
test
jns
cmp
scas
shl
or
cld
xchg
stos
inc
mov
mov
or
stos
cltd
pop
xchg
sbb
sub
add
shrb
daa
cmpsl
xor
mov
dec
or
mov
movsb
in
leave
pushf
stos
and
push
sbb
stos
testl
jmp
mov
in
out
stos
jp
add
cltd
sbb
mov
mov
pushf
stos
inc
rclb
jmp
test
jp
sub
out
pushf
adc
sbbb
xchg
push
mov
fdivrs
bound
lock
clc
mov
mov
cltd
bound
scas
sbb
dec
stos
push
imul
push
jg
dec
stos
stos
mov
xor
cmp
cmc
ja
loopne
mov
push
adc
stos
out
clc
aas
xchg
add
sub
int3
pop
stos
repz
mov
test
or
pop
pusha
or
xchg
jbe
push
cld
das
cmp
sbb
cmpsl
push
jge
fisubl
stos
xchg
and
mov
out
add
outsl
xchg
xchg
stos
lds
inc
sub
push
fsubrl
sub
cmp
stos
insb
test
jg
test
mov
fwait
lods
mov
subb
adc
sbb
std
xchg
cmc
fidivl
stos
hlt
pop
ffree
ret
ds
sub
push
sti
inc
enter
push
and
add
inc
stos
jns
mov
push
stos
pop
inc
or
mov
lock
sbb
push
arpl
in
lret
stos
or
mov
stos
mov
fs
xor
mov
inc
cmc
fcmovb
imul
movsb
loope
nop
subl
and
cmp
sub
pop
stos
stc
divl
out
and
enter
cmp
pop
jns
movsb
clc
push
xchg
stos
jb
nop
fnsave
and
data16
mov
xor
and
rcrb
nop
aad
jo
adc
lock
cmp
arpl
stc
push
and
stos
fldt
orb
jnp
mov
sbb
mov
stos
outsb
sub
jns
in
push
es
call
cltd
out
movsb
xor
clc
push
inc
mov
in
jae
inc
push
mov
dec
stc
iret
add
prefetchw
or
int
repz
in
push
inc
pop
add
mov
inc
stos
sahf
ja
dec
leave
inc
xor
stos
mov
xchg
fldt
push
xlat
cmp
pusha
cmp
mov
stos
push
push
add
idivl
jg
push
les
lret
adc
pop
stos
mov
cli
pusha
stos
dec
inc
jg
dec
pop
lock
aad
fiadds
stos
imul
insl
into
stos
movsb
sbb
push
push
roll
ja
jge
and
lods
das
stos
mov
enter
out
shl
mov
push
loope
inc
ss
inc
mov
mov
jb
and
and
fwait
lret
imulb
rorl
mov
rep
stc
xor
mov
adc
std
lock
mov
mov
cmp
fidivrs
dec
stos
xlat
gs
mov
pop
push
cmpl
in
add
cmp
dec
pop
std
mov
shlb
mov
scas
jmp
jbe
fidivrs
jmp
and
mov
inc
and
jbe
fcmovnbe
mov
sbb
dec
rolb
cmp
jbe
stos
cmp
ret
daa
pop
mov
cmp
imul
sarl
enter
sub
daa
jp
push
or
lcall
pusha
dec
xor
jmp
iret
repnz
lods
adc
std
loop
int3
daa
xchg
stos
psubusb
icebp
fisubrl
sbb
add
xchg
std
fildll
test
fnsave
stos
sub
int3
cmp
xchg
mov
cld
stos
push
aas
mov
loopne
pop
idivb
mov
jo
out
sbb
cmovb
cmp
pop
xchg
imul
arpl
inc
jl
push
xchg
xchg
clc
call
or
lods
pop
stos
inc
mov
mov
mov
xlat
pop
mov
das
test
pop
rorl
or
loopne
imul
out
fsubs
mov
inc
out
call
ljmp
dec
scas
pop
pop
repz
in
flds
rorb
mov
popf
adc
mov
push
mov
add
jne
iret
hlt
push
fldt
sub
mov
shr
stos
cwtl
stos
jle
arpl
inc
mov
jmp
xchg
aas
ret
mov
jns
mov
sbb
mov
and
jge
ja
jp
pop
cltd
and
lea
add
xor
insb
stc
fbstp
stos
repnz
fldt
and
imul
mov
stos
mov
aaa
pusha
pop
stos
gs
sub
stos
addb
ret
stos
repnz
jno
je
int
stos
dec
push
imul
frstor
sbb
scas
xor
or
ds
push
lret
push
test
stos
aas
outsl
or
pushf
mov
cmp
pop
sti
shrb
xorl
or
jecxz
xor
and
stos
dec
mov
xchg
sbb
or
stos
pop
dec
xchg
pushf
pop
iret
push
mov
pop
jg
es
mulb
xchg
lcallw
mov
orl
sti
stos
pop
cltd
mov
lods
adcb
stos
scas
movups
xchg
xchg
mov
adc
jmp
stos
das
mov
and
stos
cmc
lods
push
ja
cmp
xchg
adc
add
imul
dec
cmp
lock
stos
or
adc
xor
push
std
aam
adc
mov
push
jmp
ljmp
ret
cwtl
stos
xchg
lods
loope
call
xor
mov
inc
sub
cltd
and
mov
imul
pushf
bts
fcos
cmc
loopne
inc
cmp
pop
mov
inc
xor
stos
push
or
test
test
mov
rcll
movsl
pusha
mov
std
or
inc
stos
dec
icebp
jle
add
aad
mov
int3
push
xchg
rcrb
pop
insb
inc
imul
sub
xor
sbb
fs
dec
test
inc
sub
iret
cs
ja
stos
sub
mov
ss
adc
mov
ljmp
and
cmpsl
arpl
nop
cmp
jne
fwait
mov
insl
dec
add
addr16
dec
movsb
xchg
fwait
xchg
imul
sti
lods
xlat
stos
fimuls
lret
stos
add
scas
and
and
xor
cmp
stos
test
outsl
fidivs
into
js
xchg
les
stos
ljmp
in
cmp
mov
add
adc
outsl
push
push
sbb
push
into
lea
mov
mov
les
mov
dec
clc
push
mov
xchg
pop
sbb
shll
stos
imul
lods
stos
aaa
mov
sti
shlb
std
fcompl
jo
test
dec
rep
call
mov
mov
movsb
mov
inc
arpl
data16
jmp
stc
jbe
lea
stos
call
js
pop
daa
out
mov
mov
jge
add
daa
int
rcrl
insb
imul
inc
js
aas
lds
icebp
fcompl
mov
loopne
stos
sbb
fstl
push
fnstenv
sbb
lds
sub
imul
adcl
jnp
lds
mov
add
cmc
stos
add
mov
inc
in
mov
lods
and
into
xchg
nop
mov
loopne
add
stos
dec
or
sbb
arpl
lcall
cli
and
stos
xor
andl
push
je
pop
sti
stos
jmp
jp
rcrb
insl
stos
mov
sarl
icebp
outsl
into
push
stos
inc
inc
push
stc
pushf
rcrl
jbe
sub
mov
scas
dec
inc
mov
je
sub
mov
stos
repnz
fwait
and
or
mov
jne
mov
arpl
mov
iret
mov
lods
lret
mov
add
push
js
aaa
add
push
subl
inc
inc
mov
std
icebp
scas
mov
xchg
lods
rcll
in
ret
mov
mov
xchg
stos
add
js
sets
jmp
mov
xchg
mov
jns
cli
lods
mov
scas
movsl
push
cmc
stos
add
dec
push
cmp
mov
cmp
arpl
mov
mov
jno
ljmp
andb
out
sub
dec
jmp
dec
ja
mov
jmp
test
enter
push
jle,pt
sahf
fwait
and
mov
fnstsw
emms
adc
lea
divl
cld
out
shll
mov
xorb
push
mov
or
aas
aad
mov
jae
rcr
inc
test
lcall
pusha
addr16
shrl
sti
and
xchg
stos
scas
aas
inc
mov
stos
cmp
adc
stos
pop
int
daa
xchg
test
push
jmp
mov
stos
push
inc
sub
lds
pop
stos
outsb
mov
mov
lock
stos
repz
mov
xor
jns
popa
ljmp
cmp
fdivrl
cmp
loop
rep
lds
cmp
mov
cmpsl
sbb
fs
pop
or
shll
loop
pop
pop
mov
lods
stos
jge
mov
or
push
iret
xor
enter
icebp
xchg
inc
lock
fucomi
sub
stos
sbb
jnp
jae
gs
pop
and
imul
out
and
adc
stos
sbb
dec
dec
xor
add
rolb
mov
dec
stos
inc
jp
bnd
in
loope
ds
ret
fbld
popa
cmp
sbb
mov
imul
gs
aaa
jnp
mov
mov
mov
stos
sahf
mov
xlat
pop
jb,pn
fdivp
addb
sbb
stos
fstl
outsb
sbb
jo
stos
mov
pop
cli
aam
adc
xorl
call
lahf
inc
mov
std
js
inc
into
int3
ss
mov
test
stos
hlt
sbb
aas
add
mov
stos
lahf
xor
adc
inc
push
xor
hlt
add
xor
pop
add
stos
sub
or
rolb
je
stos
std
in
adc
test
aad
mov
notl
push
and
stos
adc
jns
shr
das
cmpsb
adc
imul
movsb
xor
stos
sub
lock
or
pop
mov
stos
rolb
adc
sahf
push
pop
mov
into
pop
test
cld
stos
cmp
xlat
push
imul
test
rorb
mov
pop
imul
jne
inc
addr16
mov
mov
dec
in
mov
loop
sbb
stos
lea
insb
test
jo
arpl
sbb
arpl
lds
inc
insb
push
ret
push
adcb
mov
sbb
repnz
stos
mov
ds
clc
cmp
out
xor
sbb
repnz
je
mov
movsb
out
xchg
ror
outsb
fsubl
jecxz
jno
notb
xchg
mov
mov
push
repnz
stos
lods
dec
jbe
fstpt
push
jmp
pusha
das
movsb
mov
in
mov
push
fistpl
nop
leave
clc
stos
pusha
xor
pop
jb,pn
adc
mov
mov
jae
or
inc
cmp
lret
aam
mov
xchg
mov
clc
subl
push
js
sub
inc
sbb
je
in
ror
pop
repz
add
lcall
add
stos
data16
daa
adcb
shll
ret
test
sti
sub
loop
test
dec
stos
xor
sbb
imul
ret
stos
aaa
dec
mov
cmp
pop
popf
lret
mov
test
cmp
adc
into
fwait
lock
insb
cli
rep
imul
lahf
xchg
fildl
jmp
mov
mov
push
add
dec
or
add
push
pop
pop
notl
pop
ficoms
jo
push
outsl
stos
pop
xor
add
jnp
stos
stos
out
scas
xor
orl
mov
stos
sbbl
jg
xchg
pop
stos
mov
imul
stos
push
mov
push
mov
sahf
daa
aad
adc
xchg
stos
and
lcall
push
xchg
outsb
or
stos
testb
inc
cltd
js
in
jecxz
cmp
or
push
gs
adc
das
aaa
pop
nop
adc
cmp
sar
stos
sbb
dec
test
push
add
add
lds
push
cmpb
adcl
dec
jge
mov
hlt
int3
dec
stos
in
mov
aas
int3
lds
sub
lods
sub
lret
fwait
add
outsb
int
stos
or
or
mov
and
pop
leave
mov
imul
mov
inc
bnd
arpl
pop
or
or
int3
jne
out
dec
adc
mov
mov
stos
xchg
pushf
pop
jge
pop
das
mov
out
jnp
stos
cmp
out
and
fidivl
orl
mov
rolb
stos
jb
lock
in
dec
lret
stos
jg
mov
adcl
xor
popf
pop
stos
aad
movsb
dec
lds
std
or
je
adcl
pushf
xor
stos
sub
sbb
push
lahf
ss
aas
cmp
push
push
je
xor
xchg
rol
stos
out
movsb
add
push
stos
stos
lods
sarb
and
mov
cmp
xor
add
lods
mov
inc
shlb
in
stos
inc
xor
cmpsl
adc
jecxz
mov
in
notl
pop
out
push
xlat
xadd
pop
cmp
mov
sbb
xchg
push
stos
mov
daa
or
stos
pushf
mov
fwait
xchg
rcll
jmp
les
inc
popf
movl
test
movsb
in
gs
stos
cmp
loopne
sub
test
mov
aas
mov
adc
mov
stos
push
lret
lock
jb
pop
call
aaa
jle
loopne
stos
mov
cmp
stos
or
push
dec
adc
cltd
imul
scas
das
pop
mov
push
cmp
call
pop
add
stos
push
dec
and
sub
fdivr
xchg
repnz
inc
adc
lods
push
fwait
mov
cmp
lahf
push
imulb
jo
rolb
stos
jecxz
xchg
das
rorl
cwtl
pop
add
push
stc
push
out
daa
mov
pop
cmpl
stos
aam
ds
sub
ja
aaa
shl
jmp
in
in
stos
lahf
xchg
push
insl
push
addr16
outsl
sbb
cmp
sub
and
xchg
fildll
orl
pop
push
call
rcll
stos
out
adc
dec
sbb
lock
xchg
sub
jnp
mov
add
mov
int
iret
stos
mov
test
jmp
scas
or
es
cltd
cmp
jnp
or
loope
xor
fbstp
add
pop
rorl
ljmp
pop
shlb
sti
mov
mov
xchg
and
push
sub
or
stos
pushf
xchg
movsl
push
stos
adc
pop
in
xchg
stos
xchg
push
mov
data16
mov
stos
lock
popf
cld
mov
pop
ret
sub
stc
stos
mov
call
jge
adc
cmp
arpl
stos
mov
faddl
sbb
test
stos
jbe
fadd
arpl
stos
sarb
ljmp
stos
insb
lea
stos
mov
icebp
jae
mov
xchg
or
stos
add
das
adc
mov
testl
sbb
orl
shrb
scas
xor
mov
cmpsb
out
lock
inc
imul
test
lcall
sbb
sbbl
adc
ja
test
cmp
repz
addr16
add
sub
shrl
xchg
pushf
inc
bts
sub
leave
stos
sub
push
push
fwait
cld
pop
push
stos
pop
jno
dec
bound
inc
jle
lret
movsl
test
stos
xor
add
stos
cmp
daa
call
stos
mov
pop
icebp
sub
subb
push
pusha
jae
push
shrl
sub
outsb
mov
mov
stos
pop
push
cmp
stos
gs
insb
push
mov
jge
data16
jl
lret
or
xor
aam
mov
imul
mov
stos
lahf
lods
dec
das
fidivrl
jmp
in
stos
outsb
and
cmp
in
mov
stos
insl
loopne
imul
hlt
xor
stos
lahf
jbe
pop
sub
jo
stos
jl
inc
xchg
push
add
stos
mov
movsb
cltd
mov
mov
pop
movsb
stos
xor
pop
cmpsb
out
push
aaa
std
sub
outsl
test
add
jmp
icebp
push
jne
scas
and
push
sbb
loopne
imul
xchg
ja
pcmpgtb
imul
je
sub
cmpsl
ret
push
lods
imul
fisubrl
incb
mov
dec
sbb
pushf
sbb
scas
leave
lahf
movsl
in
stos
pop
sub
dec
stos
lcall
jo
lea
lds
dec
addr16
dec
mov
mov
pop
clc
xor
stos
hlt
dec
push
mov
stos
jmp
ja
pop
stos
clc
leave
and
cwtl
xchg
dec
movsb
in
out
mov
das
push
xor
sbb
dec
mov
stos
pop
fbld
jle
movsb
popa
add
testb
daa
fldt
push
jmp
ret
clc
enter
jno
stos
and
cmpsl
xchg
lds
pop
stos
insl
dec
push
adc
scas
push
lret
mov
stos
inc
push
sub
push
cmp
mov
imul
popf
or
stos
out
cwtl
daa
mov
mov
push
or
dec
int3
mov
ljmp
sahf
xchg
cs
adc
fwait
xor
nop
add
mov
mov
hlt
xor
in
stos
xor
cmc
stos
insl
cmp
ljmp
stos
test
in
xchg
repnz
dec
adc
cmp
xchg
jle
sub
cltd
pushl
in
adc
xchg
out
pop
loope
and
jecxz
insb
and
adc
dec
pop
popf
and
fimull
inc
stos
sub
cmp
stos
or
movsl
push
fnsave
test
loop
adc
or
mov
xlat
cmp
mov
cmp
leave
jno
adc
jp
sub
jbe
cmpsl
sub
lds
cmp
fwait
dec
jp
test
mov
stos
xchg
dec
inc
mov
push
out
jo
mov
sbb
mov
stos
fadds
out
dec
xor
mov
inc
sub
imul
cmpsb
ljmp
out
sub
into
pop
cs
and
mov
or
ret
pop
mov
push
mov
jae
xchg
pop
add
pop
jecxz
inc
xchg
loope
dec
xchg
mov
add
test
sub
pop
jo
stos
out
std
imul
enter
in
stos
sub
insb
cmpsb
and
dec
mov
mov
repnz
add
das
pop
xchg
stos
les
outsb
push
stos
jbe
shl
int
popf
icebp
jmp
sub
jb
js
cltd
jl
das
jnp
and
mov
stos
inc
jno
stc
add
cwtl
stos
push
lret
mov
jecxz
cmpsl
push
outsl
fwait
ret
ljmp
pop
jmp
mov
add
mov
push
jmp
jmp
push
cwtl
mov
fwait
cs
or
cmp
es
jge
dec
xchg
imul
and
iret
mov
scas
movsb
pop
pop
push
fwait
aaa
jle
and
sbb
addb
call
xor
mov
dec
dec
or
call
shl
fcompl
cld
movsb
adc
sbb
fwait
pop
mov
insb
mov
xchg
ss
mov
cmpsl
add
push
arpl
and
xlat
hlt
clc
stc
mov
imul
push
add
arpl
stos
fstps
jns
scas
sub
mov
cltd
add
jp
jo
jge
push
inc
cmp
stos
jle
call
lods
stos
xor
imul
jge
out
in
sarl
out
push
dec
gs
push
rolb
and
test
xchg
sbb
aam
adc
imul
mov
stos
xchg
push
sub
and
push
stos
push
test
pop
lea
addl
stos
sarl
nop
sub
dec
lret
fwait
cwtl
or
cltd
stos
test
push
xchg
xor
jg
iret
sbb
popl
jne
stos
xchg
dec
mov
fcmovnu
mov
dec
and
ficoms
push
and
iret
dec
stos
hlt
pop
aaa
bound
and
lahf
cmp
cld
addr16
sbb
xchg
stc
daa
subl
cmovp
mov
ror
jmp
xchg
in
xchg
cmpsl
push
stos
adc
cmp
and
and
and
jbe
stos
fwait
sarl
lods
cmp
scas
stos
les
mov
in
lods
in
push
imul
pushf
mov
pushl
andb
daa
das
dec
push
jmp
add
xchg
test
jnp
cmc
int
imul
inc
mov
stos
test
jae
pop
stos
push
enter
push
fcomp
stos
sub
add
sahf
in
shl
stos
ret
loop
inc
sbb
lds
sbb
insl
iret
xchg
push
scas
pop
test
mov
pop
push
lea
stos
hlt
sbb
loope
cmp
and
gs
orl
mov
xor
out
mov
adc
jbe
pop
cmp
mov
cmp
popa
pop
aas
pop
jle
xchg
mov
mov
sub
stc
or
flds
fcoml
add
ljmp
in
std
mov
xor
popa
mov
sub
and
add
sub
jl
imul
repnz
stos
stos
std
mov
shrb
cs
shll
or
movsb
sbb
fwait
inc
cmp
out
pop
inc
cld
jns
movl
dec
hlt
dec
jmp
test
mov
iret
jle
and
jmp
stos
aad
out
ljmp
nop
add
cmp
dec
shll
dec
add
in
stos
iret
aad
and
pop
leave
daa
xchg
dec
stos
push
push
aas
xchg
push
in
andl
test
daa
mov
arpl
insl
sbb
rolb
sub
cmp
inc
cmpsb
push
dec
push
stos
scas
out
incl
pop
sub
aam
push
movsb
dec
stos
fs
rol
stos
xchg
aad
mov
pop
sbb
stos
jge
ror
inc
in
cmp
lea
ret
das
test
aad
stos
mov
shlb
jmp
adc
sbb
push
mov
xchg
nop
stos
out
adc
int3
fstps
push
sub
das
jo
jbe
sub
cmp
mov
mov
cltd
sub
stos
jne
or
xor
dec
sbb
cmpsl
fbstp
stos
mov
testb
cmp
push
inc
outsl
aad
daa
icebp
lahf
dec
stos
xor
repnz
or
mov
mov
inc
pushf
cld
test
stos
nop
jl
bound
stos
outsl
or
and
lcall
push
mul
cmpsl
stos
mov
push
xchg
pop
ja
mov
xchg
inc
add
xchg
stos
cmp
adc
mov
dec
arpl
testl
dec
std
adc
repnz
pop
mov
sbb
jl
sub
and
stos
repz
imul
jbe
pushf
std
cmpl
pop
into
pusha
rorl
sahf
stos
fs
inc
sar
add
cmp
mov
imul
inc
sbb
stos
mov
out
jp
jmp
sar
ja
sbb
xor
lcall
inc
push
hlt
bound
xchg
stos
dec
aaa
xchg
mov
sbb
xor
int
enter
scas
mov
icebp
ds
fistps
adc
mov
adc
add
stos
adc
lods
call
jmp
stos
loop
pop
adc
and
stos
cmp
test
push
stos
jge
dec
fcomip
repz
stos
in
sub
pop
stos
lahf
sbb
sbb
iret
rclb
repnz
push
loope
add
es
lret
stos
inc
xchg
add
cwtl
stos
cmpsb
cmp
push
in
push
push
jp
pop
or
cmp
add
popf
mov
dec
sub
orb
popa
and
xchg
pop
pop
imul
in
testl
xor
loop
fwait
out
pop
adc
insl
stos
xchg
jl
xor
stos
scas
dec
mov
push
mov
adc
push
xchg
add
mov
stos
sbb
lret
test
loopne
int
jl
adc
out
fisttpl
data16
xchg
dec
stos
call
int
shlb
data16
or
mov
adc
in
stos
dec
dec
sub
mov
cs
and
xchg
jp
adc
push
test
pop
push
sbb
daa
add
sub
aad
lods
in
stos
clc
outsb
stos
loop
sub
loopne
pop
stos
add
in
scas
or
test
je
popa
ljmp
fiadds
stc
das
mov
pop
xorb
loope
xor
push
dec
xchg
xchg
orb
or
xchg
xchg
leave
sbb
stos
sbb
and
add
cwtl
ror
xor
incl
or
mov
push
jae
jp
mov
jge
stos
negw
int3
sqrtps
cmc
sahf
stos
and
shl
xlat
test
stos
mov
call
jno
shlb
das
pop
pop
sub
in
stos
enter
lods
push
lods
cmp
adc
movsl
cmpsl
arpl
out
push
subl
cmpxchg
jnp
arpl
faddl
stos
fildl
inc
push
imull
and
push
pop
int
stos
popa
sub
inc
jle
mov
stos
sub
xchg
stos
sbb
push
cmpsb
test
lahf
bnd
and
fsubrp
into
test
xchg
sbb
in
mov
dec
stos
out
test
adc
lret
jmp
fdivl
or
dec
mov
xchg
mov
ret
push
cmp
sub
stos
sbb
sub
push
mov
and
stos
stc
push
pop
popf
push
sbb
xchg
cmp
sbb
or
es
push
mov
clc
cwtl
jg
out
cld
add
outsb
add
xchg
dec
lock
jmp
cld
loop
xchg
cmp
sub
mov
nop
push
repz
lods
sub
lock
adc
stos
cwtl
shlb
pop
cs
popf
jmp
stos
repnz
add
mov
je
test
stos
out
scas
and
add
and
xchg
stos
je
insb
or
mov
mov
xchg
sti
out
mov
push
dec
xor
test
lahf
call
cltd
daa
arpl
push
in
nop
mov
mov
nop
test
or
cwtl
stos
mov
repz
pop
stos
iret
and
nop
daa
je
stos
sbb
neg
sti
loope
and
cmp
push
es
pop
sbb
stos
mov
mov
fs
call
stos
sub
stos
lret
imul
push
add
mov
pusha
pop
push
jp
popf
mov
imul
lds
cmpsb
rcrl
or
sbb
mov
push
test
shlb
pop
cmp
scas
outsl
and
xor
mov
leave
sub
or
xchg
and
cmp
mov
cli
dec
or
js
fs
cmpsl
mov
stos
mov
hlt
adc
clc
rcl
cmp
pcmpgtw
jmp
or
js
stos
pop
fmull
xlat
jmp
mov
stos
cwtl
pushf
inc
mov
call
js
adc
adc
jns
fcompl
stos
mov
inc
aaa
add
lea
add
std
xchg
sti
stos
pop
data16
fldenv
stos
pop
scas
xchg
sub
stos
dec
enter
adc
imul
inc
stos
xor
and
stos
and
lret
cmpsl
dec
movsb
mov
test
insb
es
aas
push
arpl
cs
xchg
add
popa
stc
test
push
rcll
dec
lea
push
jg
push
or
addl
xchg
in
fwait
adc
fadds
je
stos
leave
or
push
stos
mov
icebp
popf
or
lea
popl
sub
or
shr
cmc
repnz
bound
xchg
insl
out
cmpsl
and
popa
jecxz
adc
jnp
xchg
xchg
push
addr16
xchg
mov
inc
sub
repz
lret
sbb
cmp
jno
and
or
mov
mov
decb
inc
sub
daa
sbb
hlt
lods
stos
movsb
dec
int3
xor
imul
pushf
push
adc
xchg
dec
call
pop
push
mov
into
mov
pop
dec
imul
mov
dec
mov
ret
mov
idivb
lcall
push
push
xchg
icebp
fwait
pop
adc
jp
pusha
push
fwait
mov
push
mov
das
lcall
gs
push
jnp
out
in
xchg
xlat
fldcw
cmp
orl
out
push
xor
scas
ss
fwait
push
stos
icebp
inc
mov
add
jmp
sbbb
out
xchg
mov
cmp
rcl
add
cmp
repz
js
push
stos
dec
dec
insb
cmc
sbb
mov
mov
push
imul
stos
adc
inc
mov
ss
stos
dec
mov
mov
popf
cmp
add
xorb
out
cmp
je
rcl
stos
jns
push
das
push
std
loop
xor
mov
xchg
stos
dec
push
jne
repz
mov
iret
cmp
cmc
aas
xlat
sahf
stos
scas
dec
jge
imul
mov
shr
ret
in
sub
sbbb
inc
mov
mov
mov
in
mov
jl
xchg
scas
jle
out
inc
scas
xor
addl
mov
stos
or
decb
xor
cltd
mov
pusha
aad
scas
loope
adc
mov
outsb
jns
jmp
cmp
bound
int
pop
or
in
dec
xor
daa
ja
aad
or
std
stos
mov
inc
adc
push
mov
adc
jnp
xchg
xor
test
mov
and
stos
cmpl
ret
xchg
mov
dec
data16
dec
pushf
stos
scas
jns
dec
sbb
cmp
stos
stos
pop
xchg
adc
sbb
pop
pushf
jae
fstpt
adc
int
lods
push
xchg
xchg
xchg
cmp
stos
test
jmp
sub
mov
scas
xacquire
xchg
push
test
xor
sbb
sub
fsubr
jge
stos
jno
out
ja
mov
or
ret
shrb
xlat
push
mov
loope
cmp
push
jle
int
jns
pop
test
push
ja
mov
push
pop
les
shlb
cwtl
stos
inc
ret
adc
stos
popa
rcll
mov
mov
mov
jno
xor
cmp
stos
lock
pop
fistps
inc
mov
stos
or
cmpxchg
jnp
xchg
dec
stos
pop
rcll
into
outsb
ljmp
fnstcw
js
pushf
add
loopne
xor
fistl
mov
jb
adc
mov
xchg
pop
adc
lcall
arpl
adc
test
fimull
stos
test
dec
mov
jmp
jmp
outsb
xor
lods
cmp
stos
sbb
xchg
das
popf
cmp
imul
pushf
not
les
dec
mov
xchg
stos
incl
and
xchg
jecxz
cmpsb
pop
cmpsl
or
add
jns
pushf
cmp
xor
hlt
idivl
test
or
gs
cmp
stos
cwtl
test
sbb
in
inc
sbb
adc
mov
fldt
out
mov
jbe
mov
scas
fcmove
mov
test
xchg
outsb
out
hlt
push
enter
hlt
add
mov
mov
ds
fs
bound
stos
inc
hlt
jmp
notb
mov
stc
push
insl
out
stos
or
xor
pop
mov
push
outsl
mov
call
mov
nop
fisubrs
jno
jp
push
in
mov
cwtl
divb
xchg
lods
lret
inc
add
mov
in
jns
sbb
in
jmp
mov
pop
aad
cld
movsl
push
push
outsl
sbb
sbbl
movsb
jp
shrl
adc
pop
jne
dec
ret
fwait
mov
fsubl
xor
icebp
mov
scas
scas
mov
adc
rcl
mov
push
lret
stos
mov
aas
add
mov
leave
xorb
xor
push
mov
cltd
cs
dec
sbb
cmp
sbb
loopne
insl
adc
cld
cwtl
fwait
sub
and
and
dec
dec
sbb
mov
rcll
stos
cwtl
daa
jb
xor
andl
mov
popa
mov
mov
or
push
insl
fsubl
in
push
cltd
aas
jle
jmp
mov
rclb
add
aas
inc
push
pop
adcl
sub
rcrl
jge
mov
pop
add
push
scas
aam
imul
pop
sbb
stos
insb
jp
leave
lods
dec
mov
push
inc
or
fldcw
xor
dec
mov
or
stos
jle
popa
sahf
test
icebp
mov
out
test
inc
cmp
sahf
lock
stos
out
insb
pusha
lds
and
sub
outsb
or
inc
lds
cmp
push
xchg
and
lret
pop
mov
inc
je
repz
test
mov
sbb
popf
fs
push
jnp
jp
and
cmpsb
jmp
mov
stos
pop
jle
sbb
or
xor
rep
jne
shll
lret
pop
add
out
push
stos
jle
add
jmp
inc
rclb
scas
lods
mov
popa
sarb
stos
movsl
pop
adc
stos
dec
inc
xchg
movsb
daa
cld
andl
insl
lods
jnp
shrl
xchg
cmp
mov
stos
popf
ds
pop
cli
add
jp
mov
adc
scas
popa
pusha
fisttps
add
fistl
pop
push
shrl
fisttps
nop
in
dec
and
popf
cmp
mov
jnp
stos
add
rorl
stos
bound
adc
call
add
orl
data16
dec
add
sub
mov
cmpl
stos
or
pop
cwtl
cs
stos
cmp
sub
add
stos
lods
data16
cmpsl
xchg
insb
mov
subl
btc
sbb
jae
sub
xchg
or
lcall
lahf
stos
aad
movsb
jmp
int3
and
mov
push
popf
mov
xchg
enter
stos
cld
add
push
insl
stos
out
push
mov
cmp
out
lahf
iret
jnp
insb
cmc
stos
fists
xor
int
lret
xchg
sbb
rcl
cmp
shrl
lahf
push
push
push
stos
fstpl
jge
sub
mov
repz
mov
mov
imul
pop
and
call
rcrb
mov
imul
movsl
stos
sahf
inc
out
lcall
fwait
mov
sub
adc
push
lds
xchg
jnp
nop
lcall
sbb
stos
sbb
clc
adc
push
js
pop
movb
gs
jmp
push
in
cwtl
pop
pop
mov
sub
aaa
popf
stos
or
xor
dec
test
nop
xchg
test
jle
mov
ljmp
aam
mov
and
jmp
sti
xor
enter
sub
cmp
pop
mov
shll
and
stos
mov
fbstp
je
movntps
jbe
dec
mov
mov
adc
add
sbb
lcall
jnp
stos
mov
adc
mov
jb
cld
mov
lods
sar
in
dec
mov
mov
scas
mov
call
outsl
daa
mov
aas
sub
out
push
pop
mov
add
dec
stos
jge
and
bsf
dec
arpl
lret
sbb
insl
movsl
stos
cmp
and
xchg
xchg
cltd
stos
loope
adc
out
add
lock
push
dec
loop
stos
in
cmp
and
nop
stos
lret
push
idiv
mov
or
xchg
repnz
sbb
mov
mov
popf
lea
stos
mov
out
cli
stos
aas
pop
sbb
rolb
imull
xchg
lea
push
subl
mov
mov
mov
scas
cmp
mov
inc
push
cli
mov
ficoms
ljmp
inc
into
lahf
sub
aaa
cmp
repz
mov
sbb
mov
pop
scas
mov
cli
stos
iret
int3
outsl
pushl
andl
das
mov
pop
stos
jb
sbb
mov
or
jl
mov
scas
stos
fistps
dec
std
es
stos
stos
or
sbb
xor
js
daa
std
lret
outsl
stos
push
xchg
cmp
fiadds
xorl
aam
mov
xor
stc
hlt
addr16
les
mov
lret
stos
and
xorb
ja
pop
xor
adc
jns
lret
lea
fwait
aam
ret
xchg
pusha
stos
jg
test
stos
sub
daa
leave
inc
push
dec
cmpsl
jmp
mov
out
cltd
in
mov
bnd
pop
adc
cmpsl
imulb
call
mov
jae
loop
stos
les
loopne
push
push
stos
push
sbb
rcll
mov
imul
dec
mov
jne
jl
stos
lret
hlt
mov
xlat
stos
mov
push
fsubrl
push
add
xchg
and
lahf
adc
sbb
push
pop
push
xchg
dec
stos
repz
xchg
loope
xor
stos
fucomi
xchg
fwait
loop
push
lock
insl
mov
mov
dec
out
and
inc
cwtl
cmp
cmpsl
pop
push
mov
int
mov
inc
jo
sub
stos
dec
dec
fistpll
xchg
mov
stos
xlat
mov
mov
fldt
xchg
andl
cmp
and
fdivrl
sbb
mov
ljmp
dec
stos
ret
jne
hlt
add
cmpsl
push
out
imul
lea
stos
mov
push
nop
lods
cs
gs
mov
imul
stos
shrb
pop
cmp
add
stos
mov
stos
cmpsb
pop
and
push
cld
sbb
dec
lcall
stos
das
and
data16
and
xchg
mov
lock
aad
push
outsl
cltd
test
pop
xor
sub
jbe
cmp
ret
stos
mov
xchg
loope
sub
push
xor
or
inc
cmp
and
xor
xor
mov
or
cmp
jge
xor
pusha
and
stos
mov
jl
xor
dec
sub
xlat
adc
sbb
mov
jmp
lret
or
cwtl
loope
stos
std
lcall
stos
out
and
push
test
dec
adc
jmp
cmp
lock
stos
dec
mov
insl
stos
jnp
fcmovb
in
cmp
scas
lret
jmp
sbb
aad
inc
xor
stos
mov
jae
imul
push
dec
adcl
andl
fadds
inc
repz
xlat
loopne
nop
add
and
push
and
adc
push
inc
cmc
in
gs
gs
jne
mov
xor
cmp
test
pop
sbb
stos
add
imul
stos
loop
or
mov
inc
frstor
outsb
loope
ret
dec
insb
pop
outsl
sub
stc
stos
and
int3
and
and
inc
cmp
mov
lahf
mov
loop
stos
sub
lds
js
xchg
daa
hlt
fxch
ucomiss
fs
imul
jnp
cmp
push
into
repnz
mov
and
sub
inc
jne
stos
mov
lret
xor
shll
loopne
cmc
popa
cmp
sub
stc
sbb
xor
xor
cmp
pop
pusha
xchg
mov
insb
cld
and
jb
nop
arpl
icebp
sub
stos
push
and
out
adc
subb
xor
mulb
push
ljmp
and
orl
mov
in
or
daa
lret
inc
mov
sbb
pop
cmp
test
lret
dec
subb
jg
push
es
fiadds
les
xor
shrw
cmp
cmp
push
leave
dec
lods
daa
stos
or
xor
xchg
pop
in
jmp
sti
add
mov
stos
out
movsl
push
mov
inc
mov
icebp
cmp
mov
add
clc
aam
and
andl
pushf
jae
lods
jo
imul
fstpl
enter
test
jecxz
pop
and
jnp
stos
push
jbe
dec
xchg
sti
pop
lret
mov
fimuls
packssdw
fwait
insl
lahf
or
push
inc
imull
stos
pop
scas
xor
add
aaa
cmp
xor
icebp
push
stos
pop
dec
dec
in
out
sbb
dec
or
jbe
loope
xchg
popf
xor
jle
mov
stos
sahf
sbb
daa
push
jno
cmp
out
cs
mov
std
lds
stos
lret
aaa
jbe
xchg
fwait
lods
stos
dec
inc
scas
fsubp
in
stos
popf
mov
xor
stos
pop
mov
in
shrb
mov
clc
stos
add
mov
cltd
stos
ds
scas
dec
mov
push
std
in
xchg
popa
adc
stos
movsl
fcompl
addr16
mov
sub
jnp
jmp
cmp
cltd
lods
adc
inc
into
fs
or
or
iret
ljmp
and
fcmovbe
push
lcall
ficomps
shlb
punpckhwd
mov
mov
stos
inc
dec
jle
repz
jno
mull
movups
lea
insb
dec
dec
shrb
pop
and
stos
lahf
stc
lods
rorb
add
stos
cmp
rcll
jb
mov
mov
add
scas
dec
shrl
shlb
xchg
inc
bound
lahf
push
push
scas
inc
mov
xor
lods
adc
xor
pop
stos
gs
xlat
and
fsubrl
pop
ss
mov
bswap
cmp
ja
xchg
sub
push
stos
inc
or
js
xor
mov
xor
cs
stos
jmp
push
xchg
jg
movsb
insl
xchg
mov
cs
enter
mov
bound
roll
mov
insb
pop
mov
adc
lods
scas
mov
mov
dec
aaa
mov
stc
stos
in
sub
popf
add
sbb
cmp
mov
scas
cmp
cmp
jno
leave
sbb
mov
cmpsb
push
movsl
fsubs
jecxz
mov
test
daa
cs
stos
jno
add
and
stos
cs
sub
jge
mov
lret
adc
adc
jg
dec
subl
stos
shlb
xchg
dec
lahf
and
movsb
addb
int
inc
and
lcall
dec
mov
add
mov
sub
push
outsb
das
xchg
lods
daa
lds
xchg
jne
push
push
xor
add
sbb
into
incl
stos
std
cmp
stos
jge
xchg
and
mov
xchg
icebp
cmpsb
imul
ljmp
lcall
adc
ja
sti
popa
mov
sub
ss
imul
sbb
gs
daa
lret
subb
cwtl
das
sub
movsb
pop
xlat
dec
gs
pop
popa
mov
stos
push
cli
dec
lret
aaa
testl
adc
push
cltd
ret
imul
orl
imul
sbb
and
sbb
pop
stos
shlb
and
cmp
mov
mov
mov
cld
pop
mov
inc
push
mov
xorl
cmp
mov
stos
arpl
lock
adc
sbb
in
push
lcall
jle
into
sbb
sbb
pop
test
push
subb
mov
dec
aad
mov
cwtl
stos
inc
jmp
inc
jmp
cwtl
imul
fwait
dec
js
mov
dec
push
movsl
xchg
sti
cmp
mov
sahf
dec
cmp
mov
jbe
fistps
add
jnp
pushf
mov
arpl
pop
mov
mov
lret
cmp
xchg
fldenv
orl
jge
bound
mov
lahf
mov
and
mov
stos
pop
xlat
in
movsb
dec
dec
mov
stos
sbbl
int
nop
mov
lahf
out
fsubrs
adc
int
cmp
fisttpll
or
pop
push
adc
cmpsl
stos
stc
mov
ljmp
js
mov
xchg
pop
xor
stos
cmp
and
jmp
aam
dec
lods
or
xchg
mov
lea
mov
push
inc
xchg
dec
pop
hlt
jmp
inc
mov
fistpll
mov
or
jecxz
sbb
inc
add
sbb
lea
adc
inc
sub
xlat
push
lcall
sahf
xchg
sti
ja
cs
addr16
xchg
js
fwait
jl
push
mov
adc
or
lods
jbe
mov
sbb
arpl
mov
pop
outsb
jmp
stos
mov
push
jge
ss
imul
push
add
test
iret
stos
jbe
pop
push
mov
add
divl
push
call
icebp
outsl
stos
mov
push
push
xor
imul
add
stos
fmul
sub
loop
cmp
sbb
ljmp
add
stos
fmull
es
lds
pop
rol
lea
pop
orl
sub
in
lds
dec
mov
fcoms
jmp
push
push
sar
and
pop
xchg
stos
fistl
mov
mov
lret
cmp
lcall
insb
adc
call
xchg
outsl
mov
int
stos
hlt
ss
and
xchg
imul
inc
stos
repz
dec
pop
fdivrl
sbb
imul
stos
dec
ljmp
stos
push
data16
mov
das
push
jg
xor
es
mov
dec
adc
mov
mov
xchg
sbb
cli
stos
dec
xchg
repnz
pop
daa
sub
enter
push
aad
stos
pop
cmpsl
jne
jnp
xor
mov
outsl
adc
pop
jp
jno
test
and
push
ret
jle
daa
cwtl
mov
imul
or
movsb
xchg
imul
repnz
loopne
sarl
sub
in
pusha
in
push
fwait
xor
gs
jae
rcll
sub
out
mov
push
lahf
enter
mov
sub
pop
out
mov
data16
dec
xchg
stos
or
and
xor
mov
xchg
lahf
inc
push
stos
insl
cmpsl
jmp
in
icebp
popf
mov
outsl
lds
pushf
mov
xchg
cmpsb
mull
xchg
hlt
enter
pop
imul
mov
xchg
push
in
mov
fwait
gs
inc
xor
out
iret
rorl
das
daa
mov
mov
push
divl
jmp
rolb
jl
scas
adc
xchg
xorb
stos
mov
loop
mov
sbb
pushf
stos
les
or
jmp
out
cmc
inc
testl
fabs
int3
xlat
stc
push
push
and
xchg
outsl
into
sbb
stos
imul
cmp
inc
push
jnp
and
sub
cmp
dec
mov
call
mov
pop
mov
jge
lcall
push
sub
lods
push
imul
cmpsl
andb
gs
fsub
mov
dec
mov
mov
movsb
into
sub
stos
fstl
xchg
inc
ror
pop
stos
les
out
jl
sbb
inc
mov
jmpw
jmp
fsts
dec
out
push
push
push
inc
push
cld
test
xor
icebp
push
mov
lds
in
ds
inc
stos
aam
mov
pop
pop
outsb
aad
jae
jne
jo
lock
stos
roll
cmp
inc
mov
sbb
fstpt
stos
fnstenv
xchg
xchg
xchg
xor
stc
push
int
adc
stos
cmp
inc
outsl
addr16
lds
ret
daa
add
fcmovu
add
stos
sub
insb
fldcw
cltd
cmp
stos
in
int3
sti
cwtl
movsl
xor
push
stos
addr16
shlb
and
mov
outsb
mov
push
pop
es
addr16
dec
iret
add
mov
fwait
push
sub
stos
adc
add
mov
nop
sub
add
and
lahf
xor
sbb
mov
sbb
in
xchg
gs
jne
xchg
mov
ret
movsl
stos
lock
cld
daa
rorb
mov
lret
mov
or
xor
cmp
das
mov
seto
jp
jbe
xor
sub
mov
xchg
adc
imulb
rclb
movsb
mov
add
push
sub
xchg
and
mov
lods
sbb
sbb
ljmp
repnz
sub
cmp
mov
cmp
push
push
stos
rorl
pop
stc
adc
cltd
stos
movsl
in
aas
mov
sub
mov
mov
lods
adcb
jne
pop
lea
mov
xlat
out
fistps
stos
mov
and
stos
xor
bswap
test
pop
daa
push
jmp
push
dec
inc
stc
push
inc
subl
repz
data16
pop
sub
outsb
loop
lret
mov
insb
adc
push
jmp
in
pop
daa
shlw
mov
aad
ret
xchg
es
cmc
cld
test
into
mov
mov
jmp
movsb
pop
stos
sbb
dec
add
xchg
mov
sbb
stos
and
mov
stos
aam
ret
inc
repnz
stos
call
clc
loopne
jge
je
mov
mov
push
stos
dec
lds
enter
pop
ja
xchg
inc
adc
stos
jge
cltd
test
bound
stos
shrb
push
mov
sub
in
mov
push
stos
pusha
add
pop
stos
lock
sub
cltd
in
stos
add
mov
stos
and
stos
push
jns
test
jge
adc
mov
inc
pop
stos
jbe
mov
sbb
fistps
xor
and
or
stos
je
imul
rcr
stos
cmp
xor
imul
mov
adcl
and
xchg
aas
scas
stos
jae
push
push
mov
aad
add
or
out
stos
xlat
dec
scas
add
jmp
mov
cmp
push
mov
pop
sbb
jmp
push
xchg
push
fcomp
cli
xchg
clc
adc
jge
stos
leave
jae
bnd
stos
pop
scas
mov
push
jmp
jp
repz
mov
out
es
adc
shlb
cmpsl
push
xor
outsb
stos
adc
dec
pop
repz
stos
jae
dec
dec
jo
xor
ret
shrl
pop
mov
jg
xchg
out
pop
or
stos
xchg
adc
int
stos
leave
lret
jne
pushf
mov
jo
or
movsl
jae
stos
into
jbe
jge
pop
jnp
dec
mov
inc
jp
dec
sub
insb
filds
adc
cmp
loope
pop
das
xchg
out
mov
enter
push
xchg
inc
sub
stos
mov
mov
mov
test
imul
adc
push
mov
cld
pop
cmp
xor
ja
inc
addr16
xor
aam
pushf
cmpl
imul
test
cltd
popf
xchg
add
stos
pop
mov
sub
lret
es
pop
insl
repnz
pop
or
out
dec
cmp
addr16
sbb
push
and
sub
ds
sbbb
stos
mov
imul
dec
sub
andb
stos
fsub
outsl
mov
lea
and
test
dec
mov
adc
ds
sbb
aas
pop
or
repz
add
mov
dec
pop
push
xchg
sub
inc
mov
fistl
das
xor
stos
sti
sub
jno
sbb
lret
decl
mov
xchg
jo
xchg
loop
shrl
jne
out
stc
jmp
add
out
sub
in
das
xchg
jae
add
js
pop
sub
dec
stos
mov
push
enter
stos
cmp
mov
cmp
push
popf
leave
mov
cmc
sti
stos
fs
clc
subb
jge
lahf
push
xchg
fistl
das
and
lds
pcmpgtb
xchg
shll
mov
cmp
imul
xorb
sti
iret
aaa
push
hlt
cs
cli
sahf
dec
mov
popf
mov
sbb
pop
mov
dec
outsl
jae
push
stos
imul
test
pusha
sub
cld
cmpsb
inc
and
stos
jp
mov
xchg
stos
push
insb
or
pusha
adc
das
stos
cld
dec
xor
ret
pop
test
cs
jmp
mov
lock
pop
into
jmp
push
fwait
mov
xor
jno
gs
stos
sbb
cs
mov
stos
lcall
lds
incl
cmp
ret
inc
or
popl
mov
pop
stos
cmp
push
mov
stos
jno
dec
pop
push
orb
pusha
sbb
pop
push
mov
jp
and
pop
jecxz
test
out
or
fldcw
pcmpgtw
ja
stos
mov
insl
push
sti
fwait
stos
jne
mov
mov
les
stos
mov
stos
jbe
sbb
test
jge
leave
pushf
push
pop
subl
clc
imul
xchg
stos
sub
add
or
sbb
fidivs
addr16
add
sub
mov
xchg
out
out
lock
pop
stos
mov
cmpsb
dec
add
leave
pop
adc
sbb
sub
ja
daa
add
into
stos
nop
mov
stos
mov
cmpsl
sahf
sub
std
push
je
fs
lret
stos
ljmp
nop
stos
jle
cs
sub
dec
fbld
jne
stos
imul
sti
adc
outsb
mov
xor
add
daa
dec
aaa
pop
add
stos
sbb
jb
movsl
mov
fwait
arpl
cld
loopne
fwait
loop
lds
cmp
mov
pop
out
pushf
push
lret
imul
stos
aas
adc
dec
insb
stos
push
cmpsb
out
cmp
xor
into
stos
dec
test
shrb
mov
dec
stos
aas
cmc
mov
sub
ret
mov
xchg
push
int3
sub
and
stos
and
or
divb
hlt
int
stos
ljmp
fcomps
pop
dec
lods
addr16
adc
int3
les
xor
leave
ljmp
sbb
jl,pn
ret
mov
pushf
loope
inc
sub
movsb
sarb
xchg
push
fwait
jge
mov
push
stos
stos
cwtl
ret
pop
cmc
je
mov
push
lret
xchg
sar
lods
lsl
or
jb
push
dec
mov
mov
push
or
jns
stos
xchg
mov
aaa
pop
jne
mov
mov
inc
dec
push
sub
call
inc
outsb
ret
jns
sbb
mov
push
stos
bound
pop
sub
fndisi(8087
je
mov
pop
enter
xchg
out
fs
daa
mov
imul
pop
fisubrl
test
xchg
jecxz
insl
ljmp
mov
xorl
dec
cmp
xor
stos
sbb
push
repz
cmp
stos
mov
leave
sub
push
add
stos
imul
jle
movl
out
adc
and
xor
in
xor
das
and
or
mov
push
adc
movsb
lcall
popa
std
testb
and
cmc
or
imul
pop
jbe
mov
sbb
popa
loop
lea
imul
orl
pop
push
std
xchg
lea
cmc
xor
scas
inc
mov
movsb
pop
ljmp
repnz
push
stc
or
fiadds
popa
xchg
cs
imul
iret
mov
stos
jle
add
stos
pop
mov
je
rcll
dec
ss
fnsave
push
stos
mov
sbb
std
es
cmpsb
nop
stos
int
xor
loop
stos
xor
je
jmp
daa
bound
in
and
jg
cmp
stos
push
ljmp
stos
cltd
cmpsl
aam
outsb
iret
cwtl
imul
cli
mov
stos
fidivrs
jno
orb
roll
cs
mov
adc
sub
xchg
inc
mov
push
jne
insl
push
aad
mov
push
iret
jmp
or
imul
pop
fdivl
stos
pushf
cmp
xor
push
loope
mov
iret
cld
sub
int
xchg
push
xor
fwait
xor
mov
ja
pop
xchg
and
sub
mov
and
mov
mov
pop
adcb
add
dec
or
mov
stos
mov
unpckhps
fimuls
popa
mov
outsb
addr16
xor
popf
in
sahf
popf
mov
and
mov
inc
mov
pushf
push
cld
stos
sbb
ljmp
cmpb
jnp
mov
mov
or
inc
fcompl
call
mov
stos
mov
xor
push
and
call
stos
mov
inc
lcall
popl
pop
imulb
ljmp
dec
adc
sbb
stos
jl
stc
aad
ror
fldt
xchg
pop
or
inc
mov
mov
add
test
fstp
sbb
pop
lcall
stc
xchg
pushf
test
iret
hlt
add
inc
push
ljmp
mov
stos
sbb
sub
inc
pop
rcll
fisubrl
cmc
mov
jne
inc
add
fisubs
lods
sub
pusha
xchg
in
mov
nop
stos
mov
jmp
hlt
sbb
pop
xor
addr16
stos
loope
into
scas
push
xchg
imul
call
pusha
icebp
stos
mov
cmp
inc
gs
mov
cmpsl
test
push
insb
jge
loop
push
sub
mov
stos
inc
das
movsb
sbb
ret
lods
stos
imul
and
aas
cmpsb
test
rcrl
xchg
popf
mov
pop
daa
orl
stos
out
mov
jmp
aas
stos
mov
js
cmp
push
mov
mov
in
stos
inc
xor
out
inc
pop
stos
outsb
into
push
icebp
pop
inc
sbb
aam
lret
jmp
call
inc
dec
lea
pop
daa
mov
or
loopne
sub
imul
xchg
stos
pop
lret
out
mov
cld
subb
mov
mov
dec
stos
sbb
mov
nop
and
or
pop
inc
sub
mov
mov
add
adc
sub
push
popf
push
mov
push
test
dec
std
mov
stos
les
inc
xor
mov
or
lods
dec
pop
inc
fidivs
aad
inc
bound
xchg
adc
sarl
push
fsubrp
loop
stos
mov
add
mov
and
mov
and
jl
stos
mov
outsb
xchg
arpl
lock
add
imul
stos
scas
aas
int
rcrb
mov
mov
xor
xchg
jo
outsl
mov
mov
add
adc
out
jb
pop
movsbl
inc
fldcw
pop
rcrl
mov
inc
fcoms
outsl
std
fldt
scas
pop
and
lret
fwait
cli
sub
ss
inc
orl
pop
pusha
outsl
cmp
or
loop
mov
cmp
cmp
adc
pop
lret
sub
inc
leave
scas
rep
out
pop
mov
or
jmp
stos
pop
or
pop
fs
stos
or
pushf
or
push
int3
stos
pop
shlb
std
mov
dec
stos
inc
cmp
subb
mov
fbld
jecxz
xchg
jnp
inc
push
xchg
aas
pop
jns
arpl
imul
rcpps
inc
stos
das
push
idivl
xor
mov
or
jbe
bound
dec
adc
mov
divb
sbb
test
fistl
cmp
mov
sbb
movsl
iret
mov
stos
mov
adc
int
jbe
cmpsl
test
mov
inc
jl
call
int3
pop
lea
aaa
or
mov
stos
jo
xchg
out
xchg
dec
inc
stos
or
or
lcall
es
rclb
das
stos
xchg
in
cmovbe
imul
call
mov
stos
dec
jl
fcmovbe
sbb
mov
adc
stos
dec
dec
adc
push
mov
lret
jae
xor
push
cmc
fcompp
push
jg
sahf
movsb
data16
pop
jmp
sbbl
cli
sub
es
or
and
add
push
jecxz
fstl
out
shll
fsubrl
xor
jae
arpl
mov
xchg
inc
jb
push
stos
outsl
arpl
into
inc
test
stos
xchg
cmp
arpl
in
cli
add
dec
mov
addr16
in
lods
fcompl
sub
pop
lahf
gs
pushf
jmp
aam
test
inc
jecxz
das
imull
cld
adc
pop
cmpsb
test
mov
stos
fisubl
daa
std
popf
into
or
int3
adc
jmp
mov
push
mov
lcall
or
loopne
stos
insb
mulb
jbe
ja
push
push
shl
mov
outsb
push
xchg
or
es
add
stos
pop
mov
jp
jo
ud1
pop
stos
loope
test
xchg
stos
and
cltd
mov
stos
jl
inc
cmp
outsl
ret
push
mov
stos
sarb
stos
push
and
cltd
ja
adc
shl
cmp
xchg
sbb
dec
fcoms
hlt
and
test
push
stos
pop
push
imul
inc
stos
lcall
xchg
stos
inc
mov
push
aas
jmp
or
ret
popf
in
mov
mov
pop
popa
mov
lock
dec
sti
lods
ds
js
and
pop
push
popa
mov
pop
mov
jmp
jnp
mov
jae
mov
mov
int
jg
lcall
sub
in
ffreep
fsubrs
mov
inc
fldpi
shrb
mov
sar
xor
repz
stos
pop
aas
xchg
mov
cmp
sahf
stos
ret
xor
xor
inc
dec
stos
and
daa
fisubs
imul
mov
movb
add
gs
pop
cld
dec
daa
cmpb
xchg
cmpb
pushf
adc
popa
fnsave
dec
stc
stos
sahf
ficoml
hlt
jmp
mov
sub
ljmp
stos
jp
dec
mov
hlt
stos
mov
mov
xor
call
and
adc
subb
jmp
je
mov
les
add
cwtl
out
pusha
icebp
jbe
push
mov
adc
xchg
dec
scas
inc
stos
mov
enter
sub
adc
lea
imul
push
or
mov
daa
xchg
popa
jne
adc
xchg
xorl
push
xlat
shrb
stos
lds
out
shll
ficomps
clc
jnp
cmp
fsubl
jmp
add
pusha
mov
mul
iret
cmp
in
das
ret
in
lods
iret
stos
xor
aaa
popf
dec
mov
ss
xchg
scas
push
pop
xor
pop
adc
mov
pop
gs
loop
std
leave
mov
push
daa
dec
xor
imul
hlt
stos
jbe
mov
loope
les
inc
push
clc
fnstenv
xlat
imul
push
stos
inc
xchg
mov
lods
adc
or
stos
loopne
add
dec
testb
mov
and
loopne
and
jp
addr16
jno
pushf
stos
loop
sbbb
stos
ja
dec
lods
fisttps
lds
lock
cmp
sti
adc
add
stos
cs
sub
adc
xor
aas
pop
mov
push
dec
cmp
xchg
scas
sub
jne
imul
mov
sub
stos
addr16
cmp
lock
popa
jl
cmpsl
stos
push
in
mov
addr16
xor
and
out
movsl
xchg
test
mov
bound
sub
in
and
cld
inc
subb
cmp
cmp
jbe
cmp
jmp
jns
and
xchg
inc
jmp
hlt
and
pusha
xchg
rol
adc
test
sbb
adc
inc
mov
jbe
stos
pop
sub
lea
lret
stos
nop
cmp
fcompl
in
lock
inc
and
fbstp
dec
int
sub
pusha
push
stos
sti
pop
adc
jmp
dec
popf
lods
test
xchg
jecxz
scas
add
inc
jl
push
stos
pop
cwtl
adc
xor
add
and
push
mov
les
or
mov
lods
popa
xchg
dec
jno
stos
push
int3
push
cwtl
adc
add
std
stc
stos
fnsave
addr16
lahf
cmp
arpl
rorl
mov
mov
rcrb
mov
cmp
cmp
sub
out
lock
ljmp
cmc
nop
cli
ja
stos
push
mov
and
sub
pop
movsb
cmp
stos
fmuls
xchg
add
nop
jle
mov
add
repnz
stos
pop
cmp
scas
stos
sub
adc
push
addr16
mov
fxch
push
xlat
push
enter
jg
mov
inc
add
xor
cltd
xchg
mov
ss
stos
mov
jo
push
cmp
mov
stos
shll
daa
xlat
xchg
jle
in
jl
int3
stos
sti
mov
je
inc
shrl
lods
inc
jno
pop
out
inc
scas
int
popf
xor
cmp
or
mov
clc
scas
mov
ljmp
xor
mov
cmp
sub
push
cmpb
jg
stos
aam
mov
push
or
push
bound
je
jmp
pop
bound
loopne
xchg
sub
std
ret
es
push
lret
adc
sarl
inc
popf
movsb
lea
mov
dec
psubusw
cmc
push
jmp
or
sub
or
mov
stos
int3
out
pop
adc
sub
adc
jge
fbstp
sbb
inc
mov
in
mov
repnz
rorl
loopne
pop
and
xchg
and
sub
push
cld
jne
stos
sub
lods
mov
fs
ljmp
mov
jnp
adc
notb
idiv
xlat
dec
mov
add
out
jg
lahf
or
add
loope
jae
xchg
dec
inc
vmovddup
mov
mov
fwait
pop
cltd
inc
stos
daa
lea
scas
imul
mov
cmp
stos
cld
popf
jbe
adc
and
inc
pop
or
xor
push
jmp
out
cwtl
movsb
test
ds
jecxz
and
inc
fwait
jo
adc
xor
scas
push
inc
inc
repz
sub
pushf
stos
lods
jg
xor
imul
push
sub
scas
dec
loopne
push
jnp
jg
leave
dec
arpl
cmp
mov
dec
mov
imul
pushf
pop
stos
fucom
inc
pop
rcrb
mov
pop
jbe
imulb
inc
sub
js
std
dec
outsb
adc
subb
xabort
shrb
aas
add
stos
push
call
js
dec
mov
out
dec
jecxz
stos
inc
inc
jge
xlat
jns
cld
or
stos
scas
loope
push
lods
inc
mov
stos
testb
pusha
cmpb
imul
lods
dec
xchg
test
adc
add
mov
stos
push
push
or
lds
lods
adc
addr16
nop
hlt
xchg
xor
pushf
loop
mov
xchg
sub
mov
clc
mov
sub
add
aas
adc
imul
cmp
sbb
arpl
pop
out
xchg
dec
add
xor
pop
mov
movsb
mov
leave
sub
stos
push
data16
cmp
int
in
stos
in
push
adc
mov
adc
iret
pop
stos
lret
add
mov
stos
mov
scas
sub
scas
nop
or
daa
jecxz
lcall
push
stos
or
or
in
cmp
adc
and
xor
pop
imul
inc
jmp
cmp
mov
stos
lcall
sub
stc
inc
loope
xchg
das
jle
stos
pop
pop
pop
cs
movsb
jmp
stos
leave
ret
xor
loope
arpl
dec
shrb
add
jle
xchg
add
aaa
mov
push
add
andl
xchg
push
push
imul
and
sahf
addr16
sahf
add
push
mov
rep
dec
stos
popl
out
or
sbb
lods
and
loop
mov
insl
xchg
hlt
cs
pop
and
dec
mov
or
xchg
shrl
mov
or
sub
add
outsl
sbb
stos
cli
jecxz
push
add
push
mov
clc
into
stos
test
xchg
lret
xchg
shlb
ljmp
fs
add
pop
cld
stos
sbb
jno
fsubrs
or
mov
cmp
ja
sahf
iret
cmpl
sub
cmp
stos
sbb
std
aaa
and
mov
icebp
imul
dec
xchg
sub
lds
out
xchg
arpl
mov
aad
jae
cmp
jmp
sub
push
mov
dec
repz
stos
jno
mov
out
stos
lahf
pop
inc
dec
jl
fldl
lods
sbb
mov
lock
in
lea
stos
jmp
add
stos
fstl
aam
stos
push
cmp
lret
enter
push
ret
inc
fstps
push
and
add
repz
push
mov
pop
push
imulb
mov
mov
pop
sub
int
sbb
pop
inc
shlb
fdivrs
hlt
mov
out
ds
loopne
jnp
pop
push
add
mov
mov
fisubrl
or
aad
pushf
pop
std
dec
movsb
mov
dec
jne
cmp
stos
int3
inc
jle
cwtl
inc
mov
pop
lret
out
stos
or
sbb
push
dec
xor
cmp
popf
or
outsb
stos
inc
pop
sbb
cmp
scas
push
stos
fucom
insb
jl
pop
mov
stos
outsl
xchg
cltd
jbe
dec
shrb
jo
std
loop
add
mov
imul
stos
cmpsb
pop
scas
jno
jp
mov
popa
stos
ficoms
icebp
inc
xchg
push
sub
ret
imul
sbb
jnp
push
dec
stos
std
push
mov
stos
sub
mov
lods
stos
cmpsb
shll
inc
or
ret
fstpt
stos
mov
or
stos
aaa
sub
ljmp
cmp
imul
xchg
popf
ja
and
addr16
mov
cmp
xchg
add
in
inc
sub
or
dec
stos
mov
das
add
inc
sub
add
mov
or
dec
mov
push
adc
xor
push
popf
clc
ljmp
xchg
jno
scas
pop
pop
inc
add
mov
imul
and
cmp
jmp
stos
or
xchg
stos
xchg
and
push
jecxz
js
or
mov
sub
pop
inc
push
push
and
xor
sbb
shr
mov
cmc
stos
test
xchg
xchg
shrb
shrb
fwait
dec
lds
and
gs
imul
test
and
dec
push
pop
popf
sub
sti
adc
sbb
fs
xchg
lret
in
ret
fucomp
stos
push
dec
cmpsb
out
or
sub
dec
push
mov
sbb
inc
stos
mov
mov
adc
outsb
stos
ficoms
cmpsl
sbb
sub
push
dec
jecxz
lock
jmp
out
mov
jmp
lds
mov
imul
pop
imul
mov
dec
stos
in
fs
fidivl
mov
fwait
inc
jns,pt
and
push
xchg
jl
bound
cld
imul
add
int
test
mov
jg
jns
dec
insl
lcall
add
and
addr16
jmp
repz
jl
test
daa
ss
fnstcw
sbb
into
jb
inc
scas
sub
dec
aad
lock
stos
jo
jge
push
mov
xlat
stos
lods
repnz
call
fisubl
push
aam
cmp
jmp
shrb
cwtl
fcoms
or
jle
call
fwait
pop
cmp
sub
scas
roll
xlat
popf
int3
jno
cmp
push
dec
rcll
cwtl
jne
fsubr
lret
pop
add
jno
lods
rcll
pop
xor
stos
sahf
mov
arpl
js
rorl
dec
jl
mov
sbb
jecxz
mov
stos
add
and
stos
adc
arpl
sub
jge
test
cmp
push
jle
sub
push
xchg
mov
stos
loop
jl
jns
xor
stc
bound
push
loope
cwtl
mov
mov
mov
push
mov
push
lret
mov
mov
xor
ja
cmp
inc
cmp
jmp
inc
test
rcll
fwait
stos
lcall
or
xlat
cmpl
push
mov
cltd
es
mov
ja
movsl
push
out
test
mov
ret
sbb
gs
sti
movsb
xchg
xchg
xchg
push
or
daa
into
stos
popf
or
ja
arpl
inc
xchg
mov
mov
daa
sub
pop
loopne
in
movsl
repz
mov
pop
stos
fisttpll
hlt
cmpsb
lock
push
stos
nop
jp
out
jno,pt
jo
mov
lahf
pusha
arpl
pop
les
inc
jbe
cmp
adc
popf
mov
je
pushf
js
dec
jnp
subb
push
xchg
icebp
pop
xchg
stc
mov
or
push
sub
cld
mov
xchg
enter
xchg
dec
imull
lods
and
movsb
mov
stos
movsl
orl
stos
mov
and
push
add
stos
pushf
fwait
das
push
cmpsl
mov
fistpl
push
inc
sub
popf
mov
and
jb
jmp
or
adc
fidivrs
mov
cmpsb
mov
cltd
push
xchg
lds
fnstsw
inc
stc
arpl
leave
sbb
mov
xor
lahf
and
jae
add
push
add
repnz
push
out
rcrb
stos
nop
jno
jmp
pop
add
jmp
je
sub
nop
lahf
mov
movsb
or
inc
leave
or
push
pop
in
jmp
inc
stos
push
fwait
pop
fbstp
push
mov
lret
or
add
mov
push
mov
hlt
icebp
mov
push
jmp
or
out
ret
cmp
dec
or
xchg
xchg
cmp
sbb
mov
pusha
mov
mov
cld
xchg
pop
gs
xchg
stos
mov
mov
sbb
mov
mov
ret
movsl
lods
leave
xchg
daa
mov
mov
fisttps
inc
stos
arpl
ljmp
or
sarl
shl
inc
cmc
daa
cmpb
xchg
ss
cmp
pop
stos
inc
mov
cli
xor
stos
mov
xchg
stos
fidivs
lcall
dec
out
push
mov
xor
andl
pop
and
fisubrs
in
cmp
push
ret
sbb
push
repz
repnz
lds
scas
adc
in
rcrl
add
push
and
adcl
jbe
inc
insb
roll
mov
xchg
iret
add
mov
popa
cmpsb
pop
stos
bnd
mov
sub
xchg
int3
es
mov
adc
fistpl
inc
lock
daa
adc
mulb
mov
icebp
mov
stos
rcl
jle
pop
mov
xor
fwait
aad
js
cld
push
cld
insl
adc
mov
loope
stos
pop
push
push
or
std
setae
lock
jge
and
sbb
add
mov
push
cmpsb
xchg
mov
mov
lret
push
mov
stc
shl
or
fwait
cmp
inc
and
pushf
xor
stos
movsl
enter
or
or
lret
test
arpl
add
jo
stos
lcall
stos
stos
into
or
in
lods
scas
imul
sahf
lcall
js
repnz
mov
dec
stos
mov
pop
inc
push
and
and
inc
sbb
lods
mov
call
mov
mov
jmp
mov
movsl
jmp
jecxz
and
mov
test
enter
or
push
stos
mov
or
mov
idivb
jne
stos
test
mov
stos
mov
inc
jle
imul
leave
stos
dec
cmp
js
cwtl
push
and
aad
mov
push
cmp
lahf
inc
loopne
stos
pop
mov
fisttps
in
fldenv
dec
mov
push
fstpl
cmpsl
cmp
outsb
scas
std
stos
jns
andb
fidivrl
or
pop
scas
dec
xchg
stos
xchg
je
stos
imul
movsb
faddl
cmp
mov
cmpsb
pop
or
lcall
xchg
inc
aam
fcomp
xor
fdivr
jecxz
lahf
mov
imul
out
cwtl
jmp
push
jno
lock
jmp
xchg
xchg
movsb
xchg
subl
add
in
cwtl
mov
push
and
stos
movsl
out
insb
dec
lcall
mov
xchg
jne
stos
pop
push
fsubs
mov
mov
ds
pusha
mov
xchg
imul
fidivrl
mov
pushf
and
lahf
enter
dec
loope
popf
jae
in
adc
arpl
in
fsubrl
lods
pop
dec
stos
mov
sbb
ds
in
mov
pop
hlt
adc
dec
dec
pop
imul
stos
xchg
jno
sbb
stos
fs
mov
fdivp
fsubrs
push
aaa
pop
lods
stos
push
mov
sti
shrb
xlat
mov
in
lahf
push
cmp
stos
and
pop
sbb
xchg
push
mov
mov
test
add
stos
or
xor
fxch
xchg
stos
mov
jmp
out
or
outsb
das
inc
imul
sub
pop
arpl
pop
mov
xor
mov
jp
xchg
imul
mov
cmpsl
xor
ds
jae
sbb
mov
cs
fwait
xorb
jecxz
adc
pop
aas
fcom
pushl
repnz
pusha
das
mov
pop
mov
ret
out
stos
sbb
es
jb
adc
sbb
mov
push
jnp
stos
lret
aam
aas
stos
filds
cmpsb
out
incb
push
sub
sbb
jmp
pop
lret
stos
sub
dec
xchg
and
jmp
mov
icebp
cvttps2pi
sub
stos
adc
cmp
cs
stos
and
in
mov
jb
aam
sub
sahf
xchg
stos
sub
inc
mov
xchg
mov
xlat
call
lods
xchg
loope
rcr
mov
ss
es
xchg
add
push
clc
dec
test
jge
fldpi
push
callw
ret
in
lcall
stos
mov
shlb
mov
sub
inc
stos
pop
jge
push
mov
fwait
sbb
push
mov
das
add
in
dec
test
stos
dec
push
add
pop
or
or
fistpll
fldcw
or
sub
mov
and
fisubrs
outsl
inc
push
daa
scas
sub
fs
mov
stos
les
movsb
and
leave
add
mov
adc
add
mov
out
mov
aas
stos
cli
jp
sbb
and
icebp
push
arpl
or
bound
stos
sub
adc
push
scas
rcll
push
mov
fildll
stos
mov
sub
out
stos
jo
push
popf
cmc
mov
mov
sbb
sub
pop
out
and
push
push
inc
push
cmp
xchg
subl
xor
fadds
js
push
movsb
repz
sti
adc
scas
inc
jge
cmpsl
cmp
mov
cmpsb
xlat
jne
out
jae
xchg
mov
pop
mov
xor
scas
mov
hlt
pop
add
jecxz
push
xchg
inc
out
jl
in
stos
aas
in
iret
ret
daa
loope
nop
stos
xchg
lds
in
pop
scas
lret
outsl
movb
stos
imul
pop
into
jge
stos
jbe
adc
stos
adc
inc
sbb
sub
ja
jbe
fadds
stos
imul
adc
or
test
jo
jno
xchg
fs
into
xlat
in
adc
andl
push
jb
outsb
stos
mov
mov
cmc
sbb
nop
jmp
jmp
insl
inc
les
test
ret
push
sub
mov
shrb
ror
and
ljmp
sbb
stos
push
mov
pop
jmp
addr16
xchg
xor
xchg
cltd
inc
sbb
stos
jo
sahf
add
mov
ret
jg
flds
dec
mov
mov
insb
nop
stos
repnz
push
xchg
les
mov
movb
pop
cli
mov
jns
xchg
test
imul
imul
fnsave
fs
pop
mov
pop
mov
or
lahf
cld
xlat
or
sbb
test
popf
dec
stos
pop
sbb
ret
leave
out
js
imul
inc
data16
int3
xchg
push
stos
mov
add
inc
push
push
push
add
push
adc
cmpsb
add
jo
mov
push
xchg
test
into
xchg
sub
lret
ja
stos
jp
adc
mov
rclb
dec
popf
stos
cmp
aam
stos
cmc
jg
gs
adc
int
jmp
jae
cmc
icebp
sbbb
hlt
std
inc
xchg
movsb
push
mov
fs
pop
lahf
ljmp
loope
push
xchg
push
stos
xchg
push
add
xchg
pop
inc
mov
adc
xorl
push
repnz
sub
fidivrs
jns
cmc
inc
movsl
lahf
into
push
nop
inc
stos
lret
inc
sbb
daa
xchg
xchg
xor
xorl
ss
aas
dec
push
mov
scas
into
stos
jae
xchg
shr
mov
stos
dec
cmp
stos
jo
cmp
rol
mov
popa
dec
stos
cmp
stos
jge
adc
cmp
mov
and
stos
fsubrl
scas
mov
pop
outsb
daa
bound
fbld
inc
stos
push
test
mov
call
cli
sbb
mov
cmp
cltd
mov
imul
scas
jae
subb
mov
rclb
add
sti
xchg
mov
xor
jb
jge
stos
or
cmp
fstps
stos
mov
es
pop
mov
stos
jne
dec
rorl
clc
leave
hlt
cmp
stos
sbb
int
xchg
stos
mov
pop
movsb
lds
test
std
inc
cmp
insl
jo
nop
dec
repz
stos
hlt
mov
repnz
leave
mov
test
mov
out
add
sub
stos
mov
sti
ds
adc
outsl
lahf
jmp
jecxz
fmull
addr16
into
mov
fildl
popa
in
fwait
push
scas
push
mov
xchg
pop
sub
stos
mov
sub
imul
ficoms
fcomp
mov
xlat
repnz
or
fisttps
stos
mov
xchg
sub
cmpsb
dec
lret
inc
mov
mov
xor
gs
imul
scas
sub
push
lock
ss
clc
push
xor
incl
mov
mov
stos
imul
in
cld
dec
jecxz
pop
das
call
nop
sbb
stos
cmp
int3
shlb
add
stos
inc
out
notb
call
jl
stos
pop
or
mov
in
stos
adc
jbe
aas
jns
stos
aam
lods
icebp
clc
ds
movsl
push
nop
xchg
loope
cmc
lahf
addr16
imulb
sub
je
pop
mov
add
mov
add
mov
jle
xchg
stos
mov
xor
push
out
stos
xor
xchg
pop
mov
sub
xchg
push
adc
shrb
stos
push
mov
mov
mov
mov
inc
mov
push
andl
mov
mov
fucomi
or
fnstsw
imul
sub
mov
xchg
push
xchg
mov
stos
inc
divb
inc
jg
xor
int3
xor
bound
in
xchg
or
xor
sbb
movsb
mov
shl
adc
imul
add
lcall
addb
test
jmp
stos
dec
pop
ja
imul
jnp
mov
lods
add
stos
rcr
inc
dec
pop
jl
shrb
lea
cmpsl
sahf
imul
pushf
mov
out
arpl
test
stos
inc
call
sub
stos
fs
dec
jbe
inc
inc
xchg
stos
xchg
and
adc
mov
ja
testl
icebp
adc
push
xchg
nop
stos
xor
jns
dec
push
mov
pop
xchg
push
jb
popa
cs
stos
sub
js
fisubrs
add
xor
xchg
subl
jp
ljmp
stos
insl
xchg
in
dec
xor
out
repnz
daa
cmp
push
jnp
cmp
inc
sbb
mov
int3
sahf
inc
push
xchg
add
dec
pushf
sub
shll
pop
clc
jecxz
pop
ficomps
lcall
cltd
dec
scas
arpl
or
mov
and
jmp
nop
lret
outsb
sbb
jae
xchg
in
mov
push
pop
fcompl
add
mov
add
fldcw
ret
sahf
rcr
jno
and
lods
lret
sti
jmp
pop
inc
rorl
xchg
dec
xor
gs
movsb
call
test
or
fdiv
xor
jb
adc
and
lcall
in
jl
test
jne
dec
dec
decb
je
imul
add
icebp
stos
xor
add
js
imul
int
mov
stos
pop
sub
push
fs
repnz
mov
xchg
mov
arpl
push
sub
imul
or
fistpll
xchg
stos
frstor
sub
fwait
aaa
gs
repnz
stc
xor
push
enter
addr16
daa
fistpl
fwait
insb
xor
sub
inc
mov
cmc
stos
fadds
xor
stos
arpl
fstps
stos
aad
or
mov
jmp
pop
push
mov
call
outsl
stos
mov
inc
aad
dec
jl
sub
mov
stos
cwtl
cmp
punpckhdq
sub
movsl
aaa
xchg
cmp
pop
xchg
stos
sbb
add
sahf
dec
xchg
mov
popf
stos
sbb
and
mov
out
mov
xchg
or
mov
sbb
jl
call
xchg
mov
cwtl
movl
mov
add
push
daa
push
adc
mov
insb
sub
stos
cmp
mov
sub
jmp
lods
cli
and
fwait
xchg
adc
clc
sbb
imul
pop
stos
int3
push
push
mov
and
dec
xor
sbb
cwtl
mov
push
mov
ljmp
mov
inc
adc
mov
mov
pop
lcall
aam
xchg
mov
call
shll
repz
imul
lahf
xor
cmpsl
sub
push
lahf
jno
dec
movsb
mov
repnz
les
stos
sbb
and
dec
push
fucomp
xchg
insb
lods
sbb
jae
push
push
push
sahf
jle
stos
daa
dec
out
and
mov
out
xlat
xchg
movsb
lcall
jbe
mov
mov
jl
andl
cmp
mov
jg
test
xchg
jo
insl
stos
jb
fsubl
sub
outsl
or
loopne
stos
call
mov
and
mov
dec
fsubrl
lret
cmp
into
mov
inc
dec
jg
sbb
mov
xlat
xor
out
aam
scas
das
or
stos
push
addr16
rcrl
stos
clc
jle
gs
xor
movsb
stos
pop
cmp
xchg
xor
add
adc
fnstenv
mov
or
mov
inc
mov
mov
arpl
pop
insb
mov
or
cmp
jg
cs
test
mov
xor
inc
pop
mov
stos
push
xor
punpckhdq
aaa
rorb
aam
divl
movsl
loopne
mov
cld
lods
adc
mov
sbb
outsb
cmp
mov
jg
mov
mov
sbb
jne
jecxz
hlt
sub
mov
push
sahf
pop
int
lds
dec
jae
test
cmp
addr16
inc
mov
pop
repnz
lahf
dec
xchg
xlat
jg
inc
stos
xor
imul
mov
mov
dec
stos
mov
imul
lods
adc
dec
ja
pop
mov
jne
nop
sbb
ss
push
faddp
gs
fs
cmp
and
jmp
inc
ljmp
out
stos
test
scas
or
test
stos
cmp
mov
lea
shrb
xchg
test
stos
sbb
xlat
fldl
pop
andb
repz
fwait
sti
dec
push
stos
cld
gs
pop
icebp
cwtl
cmp
push
stos
popf
scas
mov
scas
stos
test
int3
movsb
mov
mov
subb
fistpll
add
into
addb
and
setl
popa
mov
les
inc
stos
cwtl
sub
scas
jmp
ja
fbld
or
jmp
daa
xchg
dec
jmp
xorb
pop
stos
dec
notl
or
aaa
mov
pop
xchg
lock
out
cmp
stos
or
adc
stos
push
cmpsb
fidivrs
stos
bnd
test
pop
mov
stos
cmp
dec
sahf
imul
iret
mov
sub
jmp
jbe
xchg
daa
int3
dec
push
lahf
ss
jle
lcall
pop
test
shr
insb
stos
movsl
mov
lea
inc
jmp
test
gs
cmpsl
cltd
mov
int
xor
mov
fstp
cmp
fs
sbb
aas
fwait
and
inc
stos
sub
das
jmp
mov
daa
mov
addb
shrb
nop
cmp
xchg
jb
cmpsl
ds
and
shrb
lahf
mov
les
lret
mov
mov
stc
data16
insl
push
cmp
mov
or
jns
cmpsl
stos
mov
mov
cmp
lret
mov
push
lods
jae
aad
mov
jge
adc
jp
mov
testb
les
out
push
push
cmp
inc
flds
mov
lcall
mov
push
daa
clc
mov
xchg
mov
lock
ljmp
cmp
fildll
mov
pop
fsubrs
sub
xor
jmp
jne
fists
daa
lods
addb
xchg
cmp
mov
lds
mov
jbe
bound
or
cmc
cld
andps
ret
push
xchg
jl
push
xor
sbb
xor
cmp
stos
jbe
rorl
add
stos
xor
xchg
and
push
add
and
enter
loop
mov
ss
pop
pop
sbb
cmc
pop
decb
data16
push
xor
or
fstps
xlat
jbe
in
icebp
loope
mov
call
mov
stos
or
add
inc
mov
cmp
jmp
je
lret
jb
das
sub
test
in
xor
sbb
popf
inc
push
lods
lret
sbb
fs
inc
out
stos
stos
rolb
xor
jp
jmp
sub
mov
int3
in
jecxz
adc
movsb
testb
repz
stos
es
jle
sub
stos
les
mov
scas
out
clc
in
stos
fstpl
fidivl
rorl
bndldx
jecxz
cwtl
je
mov
stos
outsb
push
cmp
xchg
sarl
sub
test
pop
adc
mov
into
leave
cmp
hlt
mov
cmp
ljmp
inc
ss
insb
xchg
mov
lds
daa
stos
dec
ljmp
and
addr16
loop
add
pop
subb
andl
pop
mov
ucomiss
stos
pop
mov
or
stos
fisttps
mov
stos
or
mov
mov
int
ljmp
negb
subl
cmpsb
cmp
pop
stos
xor
rolb
dec
icebp
mov
jns
in
ret
scas
cmp
sub
fucomi
pop
sub
mov
cmc
xchg
stos
xor
js
mov
or
scas
aas
subb
ss
stos
dec
push
cwtl
xchg
out
add
pop
ror
leave
cs
fcoms
cmp
stos
out
xchg
push
dec
subb
pop
gs
adc
cld
jmp
stc
mov
scas
mov
add
cld
add
das
mov
nop
mov
aas
sub
out
adc
sti
dec
dec
fucomi
enter
sbb
stos
adc
inc
test
or
mov
stos
sbb
in
dec
add
mov
adc
xor
push
ja
test
aaa
leave
stos
sbb
js
sub
push
inc
aas
stos
mov
xor
push
dec
lods
mov
pop
into
stos
mov
sub
loop
sbb
cmp
xchg
jae
jno
ret
add
xor
aaa
nop
add
push
stos
int
jns
imul
adc
push
stos
and
pop
cld
ficompl
mov
jecxz
stos
jns
adc
mov
and
loopne
xchg
stos
ss
pop
mov
or
sbb
pop
gs
mov
arpl
pop
xor
add
fwait
in
sarb
sarb
sub
cmpsl
pusha
jb
repnz
adc
addl
cli
dec
stos
in
inc
test
cs
es
insl
lea
imul
lcall
aas
sbb
inc
push
mov
sub
gs
in
aaa
mov
dec
stos
jns
xchg
imul
fnstcw
mov
cmp
aam
xchg
or
mov
mov
in
fcmovnbe
push
lahf
push
sbb
jg
or
ljmp
pop
outsl
stos
cld
add
jmp
sbb
in
cltd
xor
fidivl
sbb
dec
cltd
mov
adc
mov
loope
sbb
sbbl
int3
imul
repnz
sub
push
jecxz
and
shr
sti
mov
or
dec
repz
into
and
icebp
sub
or
xchg
push
jo
stos
sbb
jb
movsb
adc
mov
adc
movsl
fisubrs
mov
in
fwait
add
in
lods
xrelease
fiaddl
cmp
inc
stos
outsl
sub
adc
xchg
pop
stos
push
icebp
dec
dec
mov
jb
fs
sbb
std
cwtl
xor
inc
adc
nop
xchg
stos
and
mov
stos
lock
test
fldcw
jg
xor
leave
or
imul
stos
mov
and
xchg
daa
nop
jo
push
lahf
adc
sbb
fsubrs
lret
js
imul
jg
fwait
mov
mov
lahf
add
and
stc
pushf
and
inc
mov
fdivr
or
stos
cmc
ret
or
repz
popf
stos
mov
mov
lcall
fld1
jl
push
sub
xchg
mov
sbb
scas
stc
loope
add
rorl
jo
cmpsl
xchg
movsl
lods
push
sub
pop
jle
xchg
mov
hlt
lods
mov
mov
repnz
push
lret
sbbl
ljmp
ret
stos
add
std
jbe
xchg
fisubs
sub
dec
loope
sub
cmp
and
jle
xchg
in
js
aam
rol
cltd
mov
xchg
cmp
lret
jecxz
je
jge
nop
mov
mov
cwtl
addb
imul
or
stos
dec
scas
sbb
cmp
lcall
mov
cmpsl
fnstenv
int3
stos
mov
stc
pop
and
in
jmp
pop
adc
stos
sbb
sub
test
push
in
ja
mov
sub
lea
fistl
mov
fsubrl
add
xorb
push
popa
mov
xchg
icebp
ret
cs
lea
jmp
stos
insl
out
sbb
cmp
mov
out
cmpsb
dec
imul
leave
int
push
dec
scas
subb
push
addl
movsb
jo
jne
xchg
int3
xlat
in
stos
mov
sarl
push
xor
jmp
adcb
add
xchg
cld
jae
cmp
xchg
xchg
or
sbb
imull
jnp
mov
xor
js
aaa
ss
subl
xchg
xchg
sub
data16
cmp
stos
xchg
push
push
stos
pop
mov
push
dec
push
inc
stos
call
arpl
das
adc
je
daa
stos
stos
sub
or
stos
cmp
dec
out
stos
mov
shl
fldt
loope
ja
sub
es
dec
adc
fcmovnu
or
sbb
icebp
mov
and
pop
stos
call
jbe
lea
inc
inc
jle
in
pop
stos
mov
or
ja
sbb
cld
faddp
push
in
loopne
sbb
or
cli
call
lea
sbb
mov
mov
insb
dec
stos
adc
out
sbb
int3
xor
imul
add
js
dec
jae
das
fst
fists
stos
lods
dec
jle
lds
mov
scas
xchg
je
stos
push
xchg
pop
cwtl
insb
xor
cmp
mov
es
and
in
stos
shrb
scas
cmp
dec
stos
rep
repnz
or
mov
jmp
and
jbe
xchg
xor
add
test
cmpsb
or
mov
jl
or
dec
adc
cmp
dec
mov
int
inc
test
push
or
das
pop
jmp
xchg
push
test
and
mov
cmpsl
stos
stc
int3
mov
xchg
je
dec
jmp
sti
idivb
jns
stos
jp
loope
xchg
popa
sub
scas
cmp
jmp
scas
xchg
aad
and
mov
jne
xchg
mov
lcall
sbb
pop
test
stos
nop
inc
mov
lock
dec
inc
mov
push
stos
fs
sbb
mov
jno
fmuls
stos
jne
jge
sbb
mov
clc
inc
pop
mov
mov
push
movsb
iret
push
stos
lea
xchg
or
dec
xor
xchg
popf
bound
inc
arpl
dec
push
adc
stos
das
test
leave
frstor
dec
addl
xchg
mov
xor
sbb
stos
mul
jle
cmp
mov
fwait
and
jecxz
ret
lahf
in
xchg
pusha
data16
popf
cmp
stos
shlb
popa
outsl
das
cmp
xor
mov
fs
stos
sub
push
xchg
stos
ds
add
jmp
sbb
mov
sbbb
bsf
insl
stos
les
sbb
sub
inc
setnp
or
and
lods
test
inc
addr16
pop
popf
sub
fwait
inc
pushf
ret
cmp
jl
cmc
in
add
adc
cld
cmp
xor
sub
enter
out
xor
jns
lods
stos
arpl
into
push
aam
lret
sar
mov
push
cmpsl
push
xchg
cmp
xchg
out
fwait
stos
loope
pusha
sub
js
mov
xor
dec
jecxz
dec
in
stos
lock
inc
rorl
subb
icebp
mov
stos
mov
aas
loope
imul
push
add
lods
jne
js
dec
adc
cs
dec
dec
sbb
scas
and
jl
jle
jo
lock
repnz
sbbb
jne
sbb
sub
mov
mov
jne
sub
repnz
inc
pop
fdivr
bndstx
adc
hlt
sub
stos
dec
mov
or
stos
dec
xor
jae
das
mov
adc
add
pusha
aaa
sbb
dec
pop
outsl
lcall
std
and
xorl
movsl
jmp
dec
in
pop
mov
push
xchg
cli
stos
stc
out
out
lock
lods
mov
mov
lahf
sbb
mov
or
dec
xchg
movsb
into
xor
cld
jne
lods
mov
rol
ja
cli
lods
cmovbe
fmul
rolb
push
out
stos
rol
ljmp
cltd
in
imul
inc
cli
gs
mov
mov
pop
call
lcall
pop
push
pop
shrb
dec
mov
xchg
push
xor
adc
mov
ljmp
cli
clc
pop
std
cmpsb
stos
xor
mov
stos
adc
cwtl
dec
lcall
imul
imull
mov
mov
les
jl
data16
lods
jmp
mov
lds
ret
inc
fimuls
mov
stos
mov
mov
lock
clc
lahf
cld
stos
insl
js
xlat
lds
and
jp
cmp
stos
dec
dec
mov
stos
inc
imul
stos
cmc
push
jg
rorl
mov
adc
push
cmp
mov
stos
push
loopne
sub
outsb
add
jg
sahf
cmp
dec
add
mov
adc
sbb
daa
rep
mov
pop
pop
jnp
scas
stos
xor
stos
cld
sub
push
cmp
xchg
xchg
cmpsl
stos
push
aas
mov
test
xor
mov
test
movl
mov
nop
xor
xlat
das
aas
mov
inc
jmp
pop
in
fsts
loope
sbb
stos
sbb
mov
sub
aad
pop
xor
stos
or
add
mov
loopne
dec
stos
jl
sub
push
stos
ret
addr16
mov
inc
xchg
subl
jmp
daa
sbb
jb
dec
mov
xor
inc
cwtl
std
outsb
ret
andb
adc
add
mov
ret
imul
mov
mov
mov
mov
inc
and
inc
les
pop
cmp
stos
movsb
js
lea
inc
stos
push
icebp
dec
nop
jo
sub
stos
fcomp
in
push
xchg
das
and
fs
repz
clc
fldcw
xor
ljmp
ljmp
stos
mov
stos
adc
cwtl
or
test
xchg
rorl
stos
mov
jne
push
jg
outsl
test
or
xor
mov
test
in
addr16
mov
loop
mov
cwtl
in
mov
push
jbe
stos
iret
mov
sahf
outsl
imul
fwait
xchg
or
adc
push
movaps
in
sti
fcmovb
push
shrl
jae
movsl
outsb
stos
das
and
dec
icebp
stos
jo
fnstsw
popf
sub
sub
lock
push
out
mov
insl
adc
mov
fldcw
imul
lahf
mov
inc
pop
xchg
inc
mov
inc
cmpsl
sbb
and
stos
add
stos
dec
or
cmp
push
paddq
push
jl
inc
mov
and
imul
jne
xchg
shll
nop
stos
cmpsl
cmp
xchg
mov
mov
jle
sbb
insl
inc
sub
or
ret
jmp
jl
pusha
insb
mov
and
loopne
jae
dec
stos
les
je
mov
out
mov
lock
mov
lea
cmp
test
jge
mov
add
stos
adc
inc
sahf
subb
stos
mov
fwait
push
leave
or
daa
test
fwait
test
add
cltd
fdivs
pop
nop
sub
out
adc
movsl
jnp
inc
cmp
stos
andl
imul
popf
leave
jae
stos
dec
xchg
rcr
mov
xor
insl
lahf
add
stos
repnz
lds
mov
pop
mov
or
xor
aas
iret
mov
stos
inc
fdivrl
clc
jge
es
outsb
sub
sti
sbb
stos
loopne
mov
cld
pushf
test
mulb
jne
stos
xchg
cltd
cmp
stos
inc
pop
mov
shrb
mov
clc
push
sub
loop
adc
push
jnp
inc
daa
aam
mov
sbb
das
cmpsb
stos
incb
out
mov
stos
xchg
mov
lods
repz
aas
iret
xor
and
test
into
mov
jmp
pop
arpl
ret
aam
xchg
dec
frstor
ds
out
and
stos
pmuludq
or
xchg
jo
stos
lods
shlb
mov
or
ret
mov
shr
aaa
mov
imul
lahf
push
inc
mov
xchg
jbe
sbb
pop
data16
outsl
std
mov
sub
cltd
ds
pop
mov
mov
dec
subl
fldt
lods
fidivs
xlat
stos
out
mov
mov
dec
jo
rcl
pusha
adc
fdivs
stos
stc
out
mov
cmp
dec
stos
dec
xchg
push
or
mov
mov
ret
sti
push
and
ror
stos
nop
dec
mov
push
pusha
andl
mov
jnp
into
stos
les
daa
pop
lock
lcall
and
lods
add
pop
cmp
push
lods
add
lea
mov
pop
lea
out
shrb
sub
or
pop
mov
fcompl
xor
clc
cld
adcl
xchg
int
stos
and
out
jmp
inc
loopne
mov
je
push
int
sbb
add
xor
test
mov
shlb
mov
adc
movsl
xor
add
stos
test
std
dec
iret
sti
push
stos
add
push
cmpsl
out
mov
je
cmovge
mov
xchg
sbb
shrl
test
iret
stos
and
cltd
es
aad
sbb
stos
ss
adc
mov
jl
aaa
enter
outsl
or
incl
stos
adc
fs
lods
pop
stos
and
repz
mov
mov
lods
mul
iret
jge
out
lds
push
push
hlt
pushf
enter
or
test
js
ret
repz
jo
mov
mov
movsl
call
lret
mov
sub
hlt
lcall
shlb
mov
cs
dec
xor
inc
push
in
stos
push
dec
clc
stos
mov
mov
stos
dec
jecxz
add
dec
pop
stos
jo
popf
icebp
jae
cmpsb
je
adc
cmp
in
mov
xchg
stos
addr16
mov
stos
mov
sub
mov
xchg
stos
pop
std
js
adc
cltd
or
outsl
xor
ljmp
stos
push
sbb
stos
jmp
sub
mov
sti
outsl
xchg
and
rolb
fsubs
xor
insl
lods
hlt
or
add
push
jp
or
leave
mov
push
sbb
out
mov
mov
clc
inc
jle
mov
inc
xchg
lods
lea
stos
xchg
shrb
mov
jns
push
das
sti
mov
push
repz
dec
xor
stos
jmp
mov
pop
repnz
stos
jno
jle
mov
call
cmc
data16
push
pop
mov
mov
lds
jb
ja
push
shll
stos
dec
ret
test
out
test
loopne
pop
mov
xchg
pop
fnstsw
daa
lret
test
icebp
and
mov
stc
jo
out
sbb
push
test
imul
xlat
mov
call
dec
std
dec
add
cmp
stos
stc
cmp
std
xlat
addr16
mov
add
repz
imul
and
stos
lds
es
mov
pop
ret
stos
inc
or
pop
out
push
adc
in
mov
fs
stos
fwait
pop
push
inc
or
jp,pt
mov
jle
ret
shll
push
and
mov
mov
lret
aam
adc
icebp
stos
and
ds
stos
pop
aad
dec
aam
subl
cmpb
test
push
inc
lds
stos
pmulhuw
pop
dec
imul
mov
adc
and
loop
lahf
rorl
push
push
ss
push
pop
sbb
dec
in
mov
mov
jmp
sbb
jle
in
add
xor
daa
dec
int
stc
stos
cli
xchg
negl
xlat
xchg
into
lods
lea
pop
sbb
mov
mov
ss
adc
hlt
cmp
adc
lods
push
cmp
or
cltd
in
push
out
stos
roll
daa
aas
add
adc
mov
stos
repz
shrl
stos
mov
insb
scas
and
cmp
adc
outsl
stos
lret
gs
lods
mov
in
mov
inc
dec
xchg
mov
cmp
cmp
pop
loopne
iret
out
or
cmpsl
sub
stos
sbb
pop
sub
or
out
inc
stos
daa
ret
adc
stos
test
jle
stos
adc
int
mov
mov
into
sub
popa
add
daa
ljmp
mov
test
andl
clc
add
xchg
addb
aaa
mov
movsb
mov
sub
out
stos
or
mov
scas
mov
stos
jge
insb
or
push
loop
xchg
jnp
testl
stos
push
mov
rcl
stos
add
mov
test
in
filds
add
lea
cmp
scas
inc
push
push
aas
mov
pop
stos
lods
lock
pusha
popa
sbb
ja
adc
jecxz
mov
inc
add
mull
xor
cmpsl
out
pop
xor
stos
cmc
sbb
dec
push
stc
imul
mov
stos
sbb
cwtl
stos
bound
dec
pop
mov
jne
rcrb
or
cs
mov
stos
jge
ljmp
mov
xor
cltd
stos
jnp
ljmp
pop
scas
push
mov
xor
jg
dec
cld
add
push
out
arpl
rcrl
mov
pop
sub
or
int3
fdivr
std
lret
mov
pushf
repz
cmpsl
mov
ljmp
jle
pop
dec
cld
addl
lock
mov
pop
sbb
push
stos
mov
mov
mov
cmpsb
push
sahf
xchg
xchg
js
daa
notb
pop
or
daa
xchg
adc
lret
outsb
xor
add
dec
imul
loope
dec
push
shr
out
stos
insl
int
or
stc
jae
sbb
rclb
fwait
aam
int3
sub
mov
mov
loope
push
in
mov
imul
mov
scas
insl
ljmp
test
jbe
xchg
xor
insl
stos
cmp
in
sbb
stos
into
push
mov
pusha
push
out
sahf
xor
scas
mov
sub
imul
pop
lret
std
sub
mov
rol
ds
dec
lahf
imul
arpl
jmp
stos
xor
sbb
stos
hlt
cmp
mov
jmp
ss
lcall
mov
std
repnz
pop
stos
popf
aaa
mov
rcl
sub
cs
push
mov
out
xchg
data16
xor
add
inc
xor
pop
push
scas
and
mov
sub
iretw
gs
stos
mov
ljmp
sub
pop
xchg
sbb
in
or
push
fidivs
fsubrs
jne
pop
xorl
pop
sahf
cld
leave
test
mov
out
mov
xor
mov
and
stos
mul
push
decl
les
sahf
cmpsl
jg
stos
or
insb
scas
or
xchg
xor
enter
insb
ja
je,pt
or
stos
sbb
and
cmpsb
or
dec
cmp
shrl
sbb
lahf
les
test
jl
mov
push
add
adc
loop
or
aas
inc
ret
fisubrs
adc
add
sbb
mov
into
data16
sub
aad
jmp
popf
out
decb
stos
xor
popa
stos
cmp
test
inc
cmpb
xchg
mov
push
xchg
jo
adc
stos
out
push
cmp
mov
jnp
push
fildl
scas
inc
test
arpl
rcll
fs
out
cmpsb
xor
push
mov
jno
cmpb
adc
hlt
mov
jl
insl
cmove
xor
lea
sub
sub
cwtl
stos
pop
mov
bswap
sbb
jge
lea
aas
adc
repz
mov
cli
jg
sahf
int3
ret
cs
xor
loop
pop
push
mov
call
add
stos
fstpt
xchg
out
insb
cwtl
pusha
dec
arpl
pop
inc
fidivl
decb
test
imul
xor
dec
outsb
stos
mov
orb
cli
repz
xor
and
mov
xchg
push
sub
xchg
dec
xchg
outsl
aam
mov
sahf
sub
test
idivb
xchg
lods
dec
nop
stos
pop
xchg
inc
lret
jae
cli
dec
stos
fucomip
fldl
or
cwtl
lods
push
repnz
adc
repz
xchg
shll
shrl
sbbl
in
cs
sbb
xchg
jns
jmp
mov
mov
enter
pop
in
repz
gs
lea
add
push
xlat
mov
sahf
push
sbb
add
add
aam
in
and
leave
fwait
jl
mov
mov
and
xlat
push
mov
jbe
stos
adc
in
or
es
mov
stos
shll
fwait
jp
mov
sub
fildll
sahf
and
stos
repnz
pop
pop
inc
shlb
ja
stos
adc
adc
jmp
push
sub
shl
mov
stos
out
sti
aas
inc
lahf
gs
stos
int
dec
inc
pop
fwait
lds
mov
cmp
pop
gs
cmpxchg
jmp
mov
movsl
jbe
stos
dec
dec
cmp
mov
sbb
stos
out
loop
in
daa
es
sahf
sbbl
adc
or
shll
pushl
jns
stos
addr16
daa
xchg
mov
mov
xchg
sub
cmp
popa
xor
inc
lcall
mov
xchg
dec
cmp
sbb
cltd
fwait
shrl
mov
lcall
cld
dec
dec
sub
ficoml
mov
stos
mov
clc
lock
cmp
adc
arpl
push
stos
cs
insl
loope
std
stos
loop
scas
push
push
lcall
cli
mov
pop
cs
jo
rcll
pop
jne
xchg
mov
cmpsb
cld
add
push
sbb
sub
pop
xchg
mov
je
ret
jecxz
mov
nop
mov
dec
insl
push
fildll
mov
cltd
xor
push
dec
cmp
mov
stos
and
or
add
lcall
dec
loope
fstpl
and
int
out
pusha
stos
push
jmp
xchg
mov
and
fisubs
fildll
test
add
mov
adc
jmp
mov
int
stos
test
arpl
insl
aad
stos
push
je
out
dec
sbb
lcall
mov
and
sub
std
xor
push
fdivrl
mov
xlat
dec
cmpsl
stos
pop
insb
in
mov
mov
stc
popa
adc
test
stos
shrb
mov
and
into
push
cmc
movsb
pop
xlat
test
inc
mov
push
repnz
jmp
jp
sbb
lea
adc
in
icebp
nop
outsb
inc
movsb
push
cld
sub
pop
xor
jno
out
fwait
stos
out
sbb
pop
stos
mov
jnp
bound
mov
and
dec
daa
out
stos
cmp
pop
lcall
jge
scas
arpl
loop
out
fdivl
sbb
or
add
fistps
sub
test
scas
adcb
pop
xchg
dec
stos
sahf
mov
sub
adc
cmp
stos
rcrl
mov
aad
daa
fisubrl
or
or
int3
lods
xchg
push
stos
mov
cmp
xor
bswap
stos
adc
daa
stos
icebp
mov
mov
stos
aas
xchg
pop
jae
cmp
mov
aaa
lds
rclb
call
cmpsl
popa
cmp
adc
sub
mov
stos
adc
xlat
lret
in
stos
xor
inc
in
jle
xor
fcomps
stos
ss
dec
mov
stos
movsl
mov
test
stos
test
les
mov
fwait
cwtl
or
stos
adc
in
xor
mov
imul
stos
adc
fnstenvs
or
push
scas
jbe
jmp
mov
fstl
push
and
xor
push
mov
faddl
mov
scas
fnstcw
push
jp
sarb
in
addl
stos
mov
ss
es
addr16
divl
mov
mov
ret
xchg
sbb
push
stos
or
ja
pop
mov
push
mov
mov
repz
mov
mov
xchg
xor
mov
mov
ds
jns
xchg
ss
mov
stos
inc
lock
mov
mov
adc
bound
arpl
push
fisubrs
and
or
stos
push
pop
outsb
divb
jge
stos
mov
xor
test
cmp
sbb
lock
stos
mov
fs
sub
jae
cltd
xchg
inc
imul
movsb
fs
pop
daa
mov
in
push
dec
stos
xor
test
dec
outsl
mov
add
insb
inc
inc
shll
shlb
and
xchg
in
stos
mov
xchg
shl
jle
dec
stos
mov
jg
leave
mov
shrb
inc
xchg
xor
add
inc
adc
daa
sti
pop
xchg
mov
mov
mull
jge
shll
popf
stos
fidivrs
jb
mov
bts
inc
out
pop
xacquire
or
push
and
mov
inc
jg
or
stos
je
push
js
popl
stos
in
ficomps
cltd
adc
fs
push
jge
pop
xchg
stos
jecxz
dec
and
cld
fs
cmpsl
hlt
dec
fwait
adc
and
loope
ds
das
loop
dec
dec
cmp
ret
pop
push
dec
pop
xchg
xor
enter
xchg
repz
leave
stos
fstl
cltd
and
addr16
dec
jp
stos
mov
mov
mov
test
ja
push
stos
repz
stos
mov
out
dec
stos
cmp
out
mov
xchg
sub
jg
xor
dec
stos
sbb
pop
mov
rorb
sub
push
stos
testb
xor
vpcmpeqw
test
pop
aad
and
out
adc
imul
mov
pop
stos
xchg
hlt
lods
sub
stos
xlat
daa
stos
jno
insl
clc
mov
jns
popf
mov
inc
js
cli
dec
fldenv
stos
push
les
push
adc
cmp
stos
pop
fdivrl
int3
fiaddl
stos
outsb
xchg
push
in
imul
stos
and
mov
stos
mov
inc
imul
mov
arpl
out
fnstcw
icebp
popa
cltd
rcll
jae
cmc
jl
add
xlat
fnstcw
xchg
sub
cmp
shrb
push
and
xchg
test
inc
jnp
daa
stos
jge
inc
xor
pop
stos
push
inc
outsb
shll
stos
popa
pop
in
xor
addr16
jbe
movsl
daa
lds
movsb
jnp
imul
aad
lock
and
sbb
cmpsl
xlat
sahf
or
js
mov
sub
ffree
cmc
icebp
mov
lock
stos
dec
adc
lds
push
addr16
pop
push
insb
test
cmpl
sub
push
and
jl
movsl
stos
sub
inc
rorl
gs
push
stos
les
out
stos
out
clc
xchg
dec
xlat
jl
stos
mov
popl
adc
xor
cltd
mov
push
fadds
cld
arpl
inc
stos
mov
mov
or
or
mov
cmp
sub
subl
stos
out
insl
sub
push
fwait
mov
sti
inc
arpl
inc
pop
jmp
pop
or
cmpsl
iret
out
xchg
mov
stos
sub
jge
stc
imul
out
pop
mov
js
stos
aas
les
or
or
lret
jmp
js
shrl
jns
shll
xor
inc
mov
dec
in
cmpsl
movsb
int3
stos
clc
sub
push
ljmp
mov
push
outsb
mov
mov
cmp
jns
pop
stos
pop
adc
dec
fwait
mov
stos
sub
push
daa
adc
lcall
imul
push
popf
test
lret
adc
lock
sub
repz
mov
or
cmp
jmp
js
mov
jle
stos
sahf
cmp
aas
push
clc
sub
push
movb
xchg
daa
lcall
jg
insl
je
jp
sub
add
jbe
cli
lahf
dec
mov
pop
lret
int
jp
imul
movsl
jne
stos
mov
out
mov
cmpsb
sub
jmp
mov
rdmsr
sti
adcl
xchg
lahf
ljmp
fwait
outsb
bound
jmp
and
xchg
addb
arpl
int3
jl
subb
mov
dec
jae
xor
stos
aaa
mov
adc
pop
dec
pop
stos
dec
jecxz
ret
movsl
daa
mov
and
mov
scas
sbb
pop
stos
test
or
stos
lds
push
stos
jo
pop
loopne
aad
stc
mov
jbe
scas
rorl
sub
ret
int
push
adc
add
jecxz
scas
test
icebp
xchg
bound
daa
outsl
xchg
xor
xchg
stos
jns
dec
cli
xor
mov
and
mov
mov
or
addr16
xchg
es
xor
loopne
cmc
out
les
aas
das
imul
test
jb
lods
xor
popf
aaa
stos
loopne
lock
mov
dec
cmp
mov
ret
sti
imul
scas
stos
ds
mov
cs
fs
loopne
or
cmp
dec
add
add
pop
cmp
push
stos
pop
and
cmp
mov
mov
scas
stos
out
add
aaa
pop
imulb
jl
clc
ja
mov
mov
adc
push
xor
pushf
inc
loope
lahf
or
movsb
dec
aad
lds
sahf
es
inc
dec
jbe
les
stc
dec
fldt
add
adc
and
push
leave
mov
sub
shl
aam
jbe
pop
out
mov
mov
mov
jno
mov
mov
and
es
cmpsl
dec
mov
cmc
jecxz
mov
mov
mov
test
xchg
cmp
pop
test
mov
mov
imul
mov
and
ljmp
mov
ds
jo
xor
push
mov
stos
fwait
jmp
cs
inc
cmp
out
out
stos
imul
cli
and
imul
and
cmp
dec
sbb
scas
nop
jp
mov
cmp
fildl
pop
sub
lods
rorl
lods
xchg
mov
scas
cmp
out
aam
stos
xor
mov
mov
push
out
push
mov
or
jle
stos
js
jns
stos
fwait
rcr
add
push
movsb
movsl
shll
pushl
add
fs
adc
adc
xor
pop
stos
push
mov
inc
dec
jmp
shlb
mov
xchg
add
stos
daa
cmp
adc
hlt
test
lret
js
sbb
repz
test
hlt
jl
mov
mov
imul
popl
dec
push
stos
jmp
xchg
leave
sbb
dec
lret
or
cmpsb
arpl
nop
in
stos
sub
jbe
xchg
shl
sbb
fnclex
add
jmp
pop
mov
inc
popf
orl
and
mov
andb
xchg
inc
and
aad
loopne
ljmp
adc
jb
repz
scas
push
in
andb
rcll
add
das
xor
push
or
jnp
mov
xchg
cmpsl
flds
hlt
jmp
mov
jno
stos
dec
nop
and
shrl
xlat
shrb
in
pop
mov
push
iret
push
cmpsl
sti
jnp
xchg
jecxz
sub
imul
lret
sub
into
mov
sub
mov
cmpb
cltd
data16
stos
in
and
popa
push
lds
std
adc
rcrl
mov
addl
stos
insb
clc
stc
add
cmp
mul
mov
fsubs
lahf
push
stos
loope
pop
popa
mov
es
lret
push
stos
lock
inc
roll
inc
and
sbb
add
lret
shrl
jp
test
push
in
je
aad
and
cld
xchg
mov
mov
stos
mov
jne
stos
leave
lret
push
xchg
and
or
movsl
bound
shrb
or
cltd
inc
adc
imul
fildl
pop
stos
xor
cs
fisubrs
mov
test
stos
js
and
and
int
pushf
xor
sbb
xor
push
mov
ljmp
in
push
shll
stos
and
bound
stos
mov
arpl
clc
jge
stos
lcall
sub
cmpb
ret
mov
xor
stos
xor
mov
std
mov
inc
mov
push
daa
cmc
jle
adc
sbb
into
xor
lea
mov
mov
mov
stos
lock
test
ss
stos
iret
subl
push
jne
inc
insl
jl
push
sti
xchg
jo
adc
fwait
adc
daa
in
in
fwait
jbe
movsb
sub
imul
test
in
ljmp
cmpl
call
or
fs
jle
pop
push
in
inc
stos
mov
repz
adc
jmp
or
mov
cwtl
in
adc
stos
cmp
xchg
out
jb
push
mov
cmp
mov
jmp
mov
sub
mov
jnp
dec
push
mov
in
xor
mov
xchg
add
lret
cli
repz
push
cld
dec
sti
inc
push
hlt
popa
fwait
subb
rep
scas
sub
or
xlat
fiaddl
aas
outsl
vhaddpd
xchg
addr16
push
stos
out
lahf
dec
mov
sub
xorl
les
sbb
sub
inc
push
xor
stos
dec
xor
dec
scas
mov
shrl
jl
out
stos
mov
cmp
stos
loop
cmc
mov
stos
je
sbb
dec
xchg
pop
or
into
ja
popf
fucomip
arpl
incl
push
mov
fwait
push
xchg
mov
mov
push
add
sbb
out
stos
clc
cld
cmp
stos
mov
cmp
and
lods
dec
out
test
aas
add
adcl
push
mov
sti
pop
push
aad
aam
mov
jp
add
inc
fwait
icebp
arpl
mov
adc
jecxz
mov
mov
dec
push
xchg
pxor
mov
pop
inc
hlt
in
cmp
stos
jle
mov
mov
add
enter
mov
int
cltd
cmp
addr16
jnp
dec
fwait
cmp
jg
arpl
xchg
and
stos
stc
aad
insb
sbb
lea
stos
in
roll
sub
inc
sbb
jmp
jmp
xchg
xchg
andb
pusha
cmp
xchg
lret
sbb
stc
lahf
dec
and
dec
cmpsl
jp
sbb
push
adc
aas
xchg
loope
xor
inc
and
xchg
pop
mov
dec
pop
sahf
dec
jecxz
lcall
xchg
lods
cltd
loope
or
stos
sbb
mov
aas
stos
adc
and
and
sti
stos
adc
jecxz
pop
popf
and
pop
pop
cmpsb
xlat
stos
movnti
and
or
sbb
rcll
xor
cmp
nop
bound
jo
fisubrl
data16
lret
stos
and
xor
mov
or
xorl
add
pop
in
push
je
and
scas
xlat
stos
push
inc
xor
daa
mov
pop
add
stos
mov
ret
lods
arpl
mov
push
and
mov
repz
test
add
adc
mov
ja
pusha
out
and
in
mov
inc
arpl
arpl
in
stos
outsl
push
daa
nop
icebp
inc
stos
insl
in
xor
ss
dec
into
stos
aaa
cmpxchg8b
stos
faddl
loopne
jmp
xchg
jo
out
repnz
push
xchg
loop,pn
mov
cltd
stos
pop
jmp
movsb
aas
mov
xchg
stos
push
dec
add
fs
xchg
test
repz
jnp
aas
xor
pop
jne
mov
pop
inc
ret
cmp
push
in
push
inc
stos
cmp
jmp
xchg
jmp
pop
mov
test
scas
mov
mov
lods
xchg
inc
or
jmp
cmpsb
aas
and
int
xchg
sub
fadds
stos
aam
inc
dec
sbb
sbb
or
dec
hlt
stos
imull
andb
push
inc
stos
mov
nop
lods
stos
shrd
das
jmp
cld
sub
mov
mov
add
cld
les
stos
mov
cmp
push
push
insb
gs
xchg
subl
stos
fisubrs
push
insl
stos
popa
add
mov
jmp
jg
lock
mov
xchg
pop
adc
sbb
test
dec
faddl
lea
loop
hlt
daa
adc
loope
xchg
addr16
jl
xor
pop
in
xchg
push
fisttpll
xor
in
stos
add
nop
sbbb
xchg
stos
orl
arpl
and
stos
dec
xchg
sbb
int3
pushf
stos
sub
xchg
cmp
ljmp
xchg
pop
dec
mov
dec
mov
loop
fwait
stos
rorb
lea
jg
fxch
fwait
inc
adc
and
icebp
gs
mulb
lret
int3
mov
repz
add
jbe
xor
push
dec
stos
ret
and
xor
stc
mov
inc
out
jno
cltd
ljmp
std
add
xor
push
xor
dec
cltd
stos
pop
icebp
daa
and
inc
mov
inc
mov
popf
or
loopne
push
dec
and
push
test
icebp
and
data16
xor
stos
js
jae
adc
stos
daa
inc
scas
mov
daa
cwtl
adc
or
mov
imul
xchg
sub
dec
mov
bound
stos
mov
inc
xchg
push
stos
scas
xchg
sub
pusha
push
nop
stos
jecxz
das
test
dec
and
xlat
lret
xchg
or
sbb
adc
shrb
jmp
rcll
pop
sbb
cmpb
mov
and
pop
jmp
jae
pop
lock
mov
jecxz
or
loopne
jg
rclb
aas
push
lock
out
insb
int3
jmp
or
sub
in
outsl
out
xor
push
loope
nop
test
lahf
xorb
aad
je
lcall
inc
fbstp
sbb
push
icebp
and
push
dec
idivl
add
add
call
xchg
dec
outsl
jge
jo
ret
mull
or
scas
sbb
mov
stos
push
les
mov
add
insl
adc
aam
mov
push
out
cmc
lcall
pop
push
cmpsb
nop
push
pushl
sub
cmc
push
roll
xchg
push
inc
stos
add
in
inc
outsl
inc
sbb
cwtl
mov
jg
test
stos
mov
mov
loopne
outsb
fmul
enter
ss
je
out
stos
xor
jne
dec
push
inc
jmp
les
push
imul
insl
mov
imul
dec
stos
cli
repz
popa
dec
inc
stos
add
cmp
icebp
mov
mov
cmp
stos
sar
jno
or
dec
and
jns
insb
xchg
pop
lods
ja
push
or
or
mov
pushf
dec
pop
sti
jb
xchg
sub
je
iret
inc
ret
enter
test
imul
mov
xchg
sbb
stos
insb
fldl
fsubs
inc
xor
inc
lret
mov
stos
jmp
stos
cmc
jg
xor
push
nopl
dec
xchg
mov
adc
int3
sub
adc
sub
adc
adc
imul
scas
xchg
dec
xchg
jmp
test
xchg
loopne
ljmp
test
imul
lock
in
add
stos
sbb
mov
cs
xchg
fcompl
adc
xchg
jb
and
stos
pop
subb
sub
jge
int3
int
das
add
cli
stos
mov
xchg
and
insb
decb
clc
in
stos
mov
jae
daa
stos
ret
mov
stos
insl
adc
lea
out
jbe
in
or
stos
inc
nop
call
iret
dec
aam
enter
std
lret
and
loopne
fwait
jns
loop
adc
stos
xor
add
sub
mov
stos
xor
fwait
jle
lods
mov
dec
rcll
jg
insl
stos
mov
xlat
mov
and
jge
push
ret
push
pop
scas
les
mov
xor
jl
and
stos
lret
cwtl
sub
js
imul
lahf
data16
mov
imul
mov
stos
or
aaa
cld
lods
stos
test
sub
push
or
and
lods
loope
les
in
and
pop
ret
cmp
mov
jmp
mov
or
stos
inc
or
cltd
frstor
inc
push
hlt
xor
xchg
xorl
push
mov
stos
push
jl
sbb
js
push
stos
cs
shrb
loopne
imul
stos
xchg
sub
mov
imul
mov
stos
mov
add
sbb
inc
or
sbb
jnp
and
sbb
fstpt
sub
adc
xor
or
and
pusha
jecxz
ffreep
or
mov
or
pushf
xchg
jo
in
leave
enter
popf
insb
fwait
test
jbe
sbb
ja
mov
imul
cmpsl
data16
in
adc
es
mov
push
imul
ret
les
xchg
addr16
out
adcl
jg
ljmp
inc
movsb
pusha
notb
in
lds
mov
xor
insb
iret
push
repnz
arpl
add
xchg
outsb
stos
and
loop
dec
mov
dec
mov
cld
push
lods
addr16
rcr
mov
push
mov
clc
pop
mov
out
repnz
adc
cmpsl
stc
xchg
jge
pop
xchg
push
fbstp
xchg
movsl
subb
lret
stos
addr16
adc
stos
adc
or
add
dec
stos
jge
push
dec
out
cmp
push
out
xor
push
jne
scas
inc
sub
mov
cltd
add
mov
fs
mov
mov
adc
add
xchg
and
scas
and
data16
rcll
push
popa
cs
subb
notl
ljmp
js
addl
dec
int3
test
stos
lods
leave
das
aaa
insb
sub
mov
in
push
dec
push
aad
ss
sbb
orl
int
mov
stc
xor
stos
push
push
push
lahf
stos
xchg
rcll
repnz
jnp
stos
dec
xchg
adc
jb
inc
int3
xchg
dec
lahf
hlt
jmp
xor
in
push
stos
pusha
push
mov
stos
adc
xchg
mov
push
sub
nop
sbb
stos
mov
mov
xchg
cmp
jne
sub
pop
stos
pushf
pop
testl
and
jge
mov
mov
stos
xchg
cmp
jo
inc
jbe
sub
loopne
xchg
push
fstps
stos
repz
int
stos
mov
xchg
fsubr
stos
add
add
sbb
add
jbe
jmp
rclb
adc
imull
stc
jbe
es
ljmp
mov
aaa
sbbl
sub
mov
mov
jmp
mov
cmpsl
mov
fadds
adc
in
js
jno
and
divb
decb
inc
mov
xor
adc
nop
test
stos
mov
lds
mov
into
cmp
push
lret
les
mov
xorl
daa
fcmovnu
xchg
test
das
push
stos
fcoms
cmp
testl
loopne
loop
jns
adc
fwait
push
fcoml
or
nop
cltd
stos
lret
aad
xlat
lds
fdivl
sub
fildl
stc
or
rolb
mov
push
stos
lcall
mov
pushf
sti
pop
jno
cmp
popf
cmpsl
stos
fisttps
add
or
stos
iret
xchg
sahf
cmpsb
mov
adc
xor
test
rorl
jle
bound
adc
jne
sub
stos
push
out
mov
and
xor
sub
xchg
mov
pop
inc
arpl
int3
inc
mov
mov
stos
std
push
negl
dec
cltd
stos
inc
add
sub
pop
sub
rolb
addr16
mov
adc
addl
stos
sbb
cwtl
test
mov
dec
lods
popf
loop
mov
fisubrl
jo
cwtl
cmp
mov
std
imul
js
bound
test
das
adc
loopne
psubw
mov
je
stos
shl
push
idivl
xchg
jno
dec
mov
popf
mov
mov
and
mov
push
stos
mov
in
decb
or
addr16
mov
ret
insl
mov
add
punpckhbw
xor
pop
xchg
pushf
insb
stos
movsl
les
push
sub
jmp
cmpsb
aaa
sub
stos
fwait
loopne
xchg
loope
cmp
ds
in
mov
ret
inc
sti
lret
inc
add
mov
cltd
insb
pushf
jmp
shlb
ss
mov
jno
mov
stos
add
orl
test
and
jbe
mov
mov
clc
pop
sahf
stos
lock
inc
adc
je
mov
mov
mov
jmp
push
pop
xchg
sub
jb
loope
stos
fidivs
mov
js
sti
je
andb
outsb
fwait
imul
inc
bound
lahf
and
add
jno
stos
xchg
and
dec
jge
int
lcall
mov
or
sbb
lahf
stos
sub
mov
gs
mov
out
cmp
in
aas
adc
ficomps
frstor
stos
jns
adc
subb
flds
push
inc
add
or
push
cwtl
stos
imul
mov
dec
lds
leave
and
inc
inc
mov
imul
lahf
jns
fimuls
pop
stos
cli
and
push
dec
adcl
outsl
pop
lea
fdivs
or
dec
and
add
mov
int
dec
jne
imul
add
push
mov
pop
ljmp
sub
inc
stos
or
mov
xchg
daa
xchg
shr
adc
mov
stos
arpl
sub
add
aam
fwait
pop
js
fsubrs
fisubrl
out
out
dec
push
daa
sar
cltd
sbb
ja
mov
mov
stos
inc
call
dec
jbe
adc
xlat
scas
ja
stos
and
add
xchg
stos
test
addr16
mov
push
adc
jno
adc
adc
jmp
jmp
scas
popf
lea
stos
adc
ja
pusha
lods
lods
sbb
outsb
xor
pop
stos
lret
imul
adc
adc
outsb
stos
xchg
andb
fldenv
cmp
jp
sti
stos
mov
or
push
out
cmpsl
in
leave
lds
inc
testb
sarb
jle
shrb
sbb
xor
mov
aas
fildll
push
lods
outsb
stos
js
fdivrs
push
and
sub
mov
movsb
and
push
jnp
jge
les
cmp
xchg
or
stos
ss
stos
insb
xchg
shl
in
sub
fwait
dec
xchg
jp
imulb
jns
adc
into
push
sub
cmp
stc
sub
inc
shlb
mov
mov
jmp
and
push
fwait
sub
loop
mov
call
lahf
pop
mov
lods
cli
in
stos
test
mov
rorl
es
pop
pop
mov
fcomps
lock
jbe
test
stos
fldt
gs
push
js
out
cmp
daa
mov
mov
mov
fisttpl
cmpsl
test
sub
dec
inc
jbe
jnp
mov
and
popf
and
xchg
jae
cmp
loop
sub
pop
sbb
sahf
stos
leave
cmp
sub
xor
decl
xchg
icebp
mov
in
mov
nop
mov
mov
mov
outsl
stos
inc
outsb
jne
ja
push
imul
xor
aas
xlat
data16
mov
xor
adc
sub
jo
fdivrp
and
in
les
jp
je
das
test
clc
dec
stos
mov
fcomps
jnp
hlt
dec
pop
std
addr16
xchg
mov
lcall
inc
inc
xor
mulb
mov
fsubrs
pop
pop
mov
mov
pop
dec
sub
pusha
mov
inc
stos
dec
push
lods
fnstsw
mov
xor
mov
stos
scas
addr16
mov
and
stos
jnp
adc
loop
movsb
adc
push
add
int3
stos
cltd
pop
push
cmpsb
stos
mov
fidivrs
mov
cs
data16
notb
stos
and
out
in
add
jb
or
mov
mov
aaa
adc
aam
adc
cmp
je
imulb
lods
dec
cmp
mov
cmp
mov
es
dec
mov
mov
dec
hlt
scas
and
add
sub
sbb
mov
mov
jecxz
mov
pushf
negl
scas
mov
std
in
mov
inc
xor
stos
or
sahf
mov
xchg
stos
fidivrl
push
add
movsl
adc
stos
in
adc
hlt
das
xor
sbb
sti
imul
mov
stos
mov
xchg
cmp
xchg
inc
cmpsl
in
and
ret
mov
pop
cmp
jecxz
outsl
nop
fwait
stos
data16
insl
rolb
mov
cwtl
jno
cli
cmpsl
js
scas
test
inc
ja
xlat
cld
or
sub
cmp
xchg
inc
push
stos
inc
or
sub
mov
push
jae
lds
imul
mov
stc
add
mov
jns
aad
aam
fsub
mov
xchg
stos
mov
loop
sahf
stos
icebp
mov
std
loope
ret
cli
stos
fsts
xchg
xchg
arpl
xchg
outsl
ficoms
and
insb
movsl
movsb
cmp
sti
xchg
int
cwtl
arpl
xor
fwait
push
iret
stos
icebp
shl
jb
xchg
imul
ljmp
out
imul
addr16
fldenv
mov
in
lods
cmpsl
mov
push
stos
pop
push
cmp
inc
fidivl
cmpsl
int
dec
je
stos
fistps
cmp
push
jns
pop
shll
mov
enter
mov
stos
jge
outsb
scas
push
xchg
sbbl
out
or
das
inc
sbb
stos
jnp
lret
mov
nop
add
imul
std
mov
cmp
rcrb
je
scas
fisubrl
or
mov
subb
pop
cmp
jne
ficoms
scas
mov
or
cld
insb
xchg
dec
jno
mov
stos
adc
nop
inc
xorl
dec
sahf
mov
in
pop
stos
xchg
sti
push
loopne
icebp
bound
cmc
outsb
cmp
pop
ret
xlat
mov
pop
pusha
push
rcll
jecxz
adc
lcall
xor
cmp
cmpsl
stos
stos
adc
fisubl
sub
cmp
loope
adc
jg
stc
int3
stos
sahf
fiaddl
push
cli
mov
stos
popf
hlt
popa
add
lods
es
shrb
test
stos
scas
push
mov
stos
and
dec
xchg
out
scas
xchg
stos
add
icebp
aas
push
iret
insl
ss
int3
cmpl
push
rcll
sub
xchg
orl
mov
in
mov
stos
inc
push
xchg
xorb
or
imul
imul
and
das
inc
cmp
imul
fildl
lret
scas
sar
imul
stos
add
push
fs
int
inc
das
mov
enter
mov
stos
push
or
rcl
mov
sub
icebp
aad
fwait
cwtl
stc
in
aaa
or
push
jne
out
ss
and
repz
add
stos
sbb
movsb
idivb
xlat
cmpsb
xchg
test
fstpl
stos
xor
inc
xchg
hlt
imul
lcall
mov
movsb
rcr
ljmp
imul
adc
sub
popl
stos
stc
jno
mov
xchg
adc
mov
mov
jb
dec
stos
lock
in
push
sbb
add
fdiv
shlb
mov
jp
xchg
sub
stos
pop
xchg
mov
push
stos
mov
cmp
stos
add
sarb
and
add
mov
sub
stos
lret
into
push
popa
arpl
xchg
subl
cld
stc
jecxz
sub
xor
pop
push
add
cmp
sub
sub
pusha
lods
or
sbb
dec
xor
pop
frstor
iret
fildll
test
push
mov
xchg
jno
fsubrl
adcb
mov
fistpll
imul
cmpsl
pop
xchg
xor
pop
stos
jecxz
pop
pop
mov
dec
mov
loop
mov
and
aad
nop
stos
pop
lcall
arpl
push
add
in
cmp
cwtd
aam
and
dec
xor
ret
push
pop
mov
mov
insb
jl
xor
fbstp
call
mov
out
adc
shlb
jns
sub
mov
pop
outsl
out
stos
xor
mov
imul
jb
cli
push
dec
ja
cmp
adc
and
addr16
stos
pop
shlb
out
ljmp
mov
pushf
mov
adc
or
mov
stos
xchg
ror
sub
lcall
mov
stos
sbb
rcrb
in
inc
cmpsb
mov
orb
popl
mul
and
stos
mov
adc
cmp
sub
std
mov
mov
push
rcr
cmp
imul
xor
jne
scas
je
mov
fcoms
push
adc
jecxz
stos
enter
jb
lret
stos
scas
xchg
mov
push
int
imull
mov
loopne
xor
mov
aam
jp
mov
jno
addl
insl
imul
mov
mov
incl
push
pushf
out
xchg
xchg
stos
lods
pop
iret
aas
insb
in
jmp
hlt
jge
mov
pop
imul
jmp
jns
scas
addr16
pmuludq
xchg
enter
lcall
add
cmp
rcrb
jmp
adc
xchg
out
fsubrp
movsb
sbb
fldt
add
stos
xor
inc
xchg
out
movsl
dec
scas
lea
movsb
popl
stos
dec
faddp
stc
subb
xorl
pop
sbb
cli
enter
in
cmc
fwait
jge
pop
jnp
jl
or
stos
repz
aaa
pop
pop
mov
les
cmp
repnz
cmp
dec
jle
imul
stos
cmc
cltd
icebp
into
xchg
stos
dec
xchg
ret
imul
mov
cmp
stos
xor
mov
test
xchg
clc
leave
ret
adc
idivb
inc
jnp
mov
mov
call
das
in
aaa
ret
std
bound
sub
jne
sbb
adc
or
sub
or
stos
push
and
stos
inc
or
adc
jno
repz
je
cmp
out
cmp
jge,pn
fldt
xchg
mov
ret
aad
stos
mov
push
dec
aam
pop
stos
xchg
into
sub
lea
mov
enter
bound
lock
mov
dec
imul
cli
xchg
mov
xchg
sarb
sti
loope
out
push
stos
dec
xor
pushf
jmp
mov
fwait
pop
daa
adc
fwait
pop
rorb
outsl
negl
cmpsb
ds
stos
jne
pop
lret
lcall
pop
or
lret
adc
test
movl
add
stos
add
scas
aas
mov
fimull
pop
dec
push
pop
stc
sub
xchg
imul
not
sti
stos
push
sbb
stos
int
and
cli
stos
shl
cmpsl
mov
stos
cmp
xchg
and
stos
shll
cs
push
jmp
stos
fisttps
push
loopne
scas
ret
adc
push
and
mov
cltd
pop
add
jecxz
pop
lret
ja
insl
cwtl
ds
stos
mov
shll
or
jmp
xchg
aaa
push
fwait
aam
xchg
jmp
stos
add
scas
shl
push
call
stos
jo
mov
sub
xor
xchg
pop
mov
outsb
js
cmp
or
test
push
shrl
enter
mov
stos
push
xlat
dec
jnp
jne
mov
cmp
jp
sub
mov
movsb
rcll
int
mov
addr16
pop
cmp
in
cld
push
stos
xchg
out
inc
dec
pop
stos
adc
bound
fdivs
es
cmp
data16
fwait
cmpsl
in
in
popf
das
stos
cmp
sahf
jl
xchg
push
imul
and
fcompl
stos
enter
lret
ds
mov
stos
mov
jp
cmp
imul
sbb
jmp
loopne
jle
add
ss
pop
mov
pop
pop
fs
stos
and
fisttpl
and
stos
cmp
dec
js
adc
lea
stos
cwtl
out
es
mov
jmp
pop
in
pushf
pop
addl
mov
inc
xchg
iret
in
stos
cmp
jmp
pop
stos
inc
dec
pushf
jmp
test
push
psllq
stos
loopne
dec
inc
decl
inc
imul
add
stos
inc
sub
cmpsb
popl
stc
sahf
push
lock
and
stos
lods
cmp
imul
mov
stos
call
xor
into
in
push
inc
mov
pop
sar
xchg
std
popa
inc
stos
add
dec
xor
imul
stc
stos
push
bound
sbb
jmp
and
adc
lea
dec
xchg
jnp
insb
stos
add
outsb
xorb
push
lret
sub
jmp
cmp
jp
jmp
ljmp
mov
dec
jecxz
fistpll
in
mov
cwtl
dec
xchg
lret
or
dec
flds
arpl
in
push
inc
inc
dec
mov
mov
js
stos
pusha
cmp
imul
push
sbb
dec
adc
jno
daa
scas
xchg
stos
in
aaa
mov
fsubrl
addl
push
stos
cmpsb
pop
int3
shlb
inc
imul
inc
test
hlt
clc
mov
mov
scas
sbb
test
imul
xor
jbe
xchg
cli
sub
stos
ficoms
add
testl
test
xchg
lods
ja
lcall
movsl
mov
outsl
test
imul
mov
stos
cmp
xchg
cmpl
loop
fcompl
dec
clc
xor
enter
mov
lret
stos
jo
hlt
adc
push
sbb
imul
mov
adc
rol
mov
nop
outsl
jae
fwait
mov
stos
push
mov
imul
mov
xchg
nop
lahf
mov
and
xor
loopne
mov
cld
and
pop
pop
dec
mov
aaa
dec
ljmp
in
in
shll
mov
iret
cmpxchg
mov
sbb
mov
mov
pushl
and
dec
xor
int3
cmp
addb
in
popl
scas
fisubrl
sub
je
stos
add
jnp
clc
cwtl
mov
in
inc
jmp
jns
mov
xor
std
add
loopne
repz
mov
mov
imul
inc
mov
movsb
dec
test
sti
add
out
jl
push
mov
cmp
je
jbe
mov
push
test
xor
scas
stos
adc
mov
xorl
js
cmp
xlat
mov
sub
fistl
sbb
imul
and
mov
out
jmp
movsb
in
fmull
sti
sub
dec
ret
mov
stos
mov
add
insb
push
push
and
fbld
icebp
xchg
xor
sub
xor
dec
mov
jo
push
xchg
ret
jge
mov
iret
int
push
imul
dec
mov
add
push
test
icebp
sbb
call
dec
stos
mov
jbe
cmp
jle
ljmp
add
jb
sbb
mov
cld
cltd
stos
push
nop
loopne
jmp
aaa
mov
xchg
sar
test
test
in
daa
sbb
iret
jns
jo
dec
stc
scas
aad
stos
ret
mov
jmp
nop
fsubrl
repz
cmpsb
mov
call
into
jo
cld
jb
lahf
cmpsl
stos
cmp
mov
jnp
sub
ret
scas
mov
mov
mov
daa
lods
jb
push
lods
lods
ljmp
xor
cmpsb
adc
add
stos
ds
movsl
mov
dec
lahf
stos
xor
inc
not
loopne
or
mov
jecxz
lods
cmp
cmp
test
fneni(8087
cmc
mov
mov
mov
stos
push
inc
repnz
pop
xchg
test
stos
or
repz
lahf
xchg
stos
jg
shll
stos
data16
dec
aam
adc
in
mov
jmp
mov
cwtl
jo
fcompl
fildll
jno
loopne
xchg
hlt
xchg
jb
mov
mov
fwait
lret
push
int
stos
and
xchg
adc
xchg
loopne
ret
jmp
adc
mov
int
xor
adc
inc
stos
sub
in
aas
dec
stos
arpl
or
or
js
jns
cmp
sub
negb
cmp
stos
clc
addb
or
push
mov
lahf
orl
addr16
hlt
lcall
out
sti
mov
cmp
js
movsb
sahf
lret
or
xor
sbb
addr16
add
xor
and
dec
sub
bswap
stos
mov
or
pop
stos
lahf
aad
fsubrs
mov
jo
loop
dec
adc
stos
aas
and
dec
mov
jg
jne
lds
cmpsb
xlat
mov
xor
sub
and
or
lds
stc
lret
xor
mov
repz
sbb
mov
mov
mov
pushf
stos
rorb
ds
jno
jne
rcll
cmpsl
scas
mov
xchg
stos
lahf
cmp
dec
sub
or
fdivs
sub
lret
insb
xchg
and
pop
ficomps
jns
jne
mov
adc
xchg
inc
stos
stos
lcall
mov
cld
ret
sub
loop
stos
dec
in
inc
xchg
iret
stos
clc
xchg
jp
pop
fsts
mov
addr16
inc
stos
fwait
repz
test
mov
add
stos
push
imul
sbb
stos
dec
sub
xchg
mov
mov
loope
test
outsb
cmp
lods
sub
popf
xchg
xchg
stos
mov
mov
in
stos
dec
add
fs
adc
pop
ret
xor
mov
mov
push
lods
es
stos
xchg
popa
outsl
pop
nop
scas
andb
or
mov
and
mov
sti
shrl
cmp
mov
fstps
xchg
lea
stos
jmp
push
add
and
mov
push
loope
nop
stos
clc
add
roll
fisubrl
cli
xchg
icebp
dec
push
mov
xchg
std
pop
dec
mov
push
inc
and
dec
mov
xor
dec
fsubrl
jp
adc
stos
rol
ja
iret
insl
push
cmp
adc
mov
outsb
and
or
and
jb
fwait
cmp
mov
mov
push
jmp
je
mov
mov
sahf
or
pop
push
aaa
lahf
or
stos
notl
loope
sub
ja
xchg
in
lret
jbe
or
adc
stos
orl
xchg
rcrb
stos
addr16
gs
lahf
mov
pop
stos
aad
into
fdivr
fldenv
jecxz
shll
hlt
popf
xlat
stos
xchg
push
mov
adc
sbb
leave
cmp
es
cmp
call
mov
jnp
icebp
pushl
pop
mov
mov
cmp
fsts
sub
je
pop
cmpsl
jmp
push
das
test
leave
mov
cmp
mov
xor
sub
popf
jp
mov
sbb
sahf
les
xchg
stos
pop
fcmovnbe
pop
or
jmp
fldln2
xor
push
jmp
mov
or
mov
orl
out
mov
imulb
mov
inc
cmp
push
leave
mov
sbb
mov
sbb
in
mov
push
mov
mov
cltd
popf
add
push
jno
jb
ret
jmp
stc
mov
adc
mul
jp
pop
fwait
mov
les
mov
out
stos
adc
popf
sub
in
test
fiaddl
mov
and
sub
or
cld
pop
imul
cld
xchg
sub
pop
ret
jge
mov
stos
xor
aam
sbb
mov
rcr
shrl
mov
out
pushf
mov
daa
lock
xchg
xchg
and
cmp
jmp
pushf
dec
jns
cmp
push
mov
mov
push
pop
test
pop
or
mov
and
sahf
xor
inc
dec
int
outsl
popa
insl
push
xchg
inc
jle
adc
inc
stos
push
xchg
lret
mov
jmp
inc
xchg
loop
push
adc
das
mov
adc
into
ds
lcall
loopne
mov
stos
adc
inc
adc
addr16
sbb
sub
add
mov
pop
scas
movsl
and
stos
fsubrp
jl
clc
inc
jg
imul
pop
stos
adc
stos
repz
lahf
jle
or
jg
stos
lcall
stos
sahf
cld
push
pop
fwait
je
lret
push
aas
add
pop
mov
pushl
outsl
and
outsb
xchg
jl
sbb
insb
shll
or
or
and
imul
xchg
add
loope
jge
add
add
les
push
cmp
push
stos
jg
pusha
push
fmuls
add
xchg
std
add
mov
inc
cmp
ret
xchg
cmp
loope
pop
addr16
out
bound
cmp
les
dec
dec
inc
and
add
es
dec
repz
jo
imul
movsb
stos
inc
mov
jo
jmp
fisubrl
ficomps
dec
add
iret
fstl
mov
jmp
mov
hlt
stos
mov
or
mov
xorb
push
xchg
test
jmp
into
inc
push
addb
sti
arpl
int
stos
dec
fidivrs
arpl
sub
stos
sub
inc
pushf
test
jl
and
scas
add
stos
cli
jmp
lock
xor
xchg
inc
lcall
lret
mov
push
stos
and
jae
xlat
or
xchg
stos
cwtl
xchg
sbb
js
push
sub
stos
ja
shl
mov
lcall
test
orl
push
push
rcll
sbb
daa
and
mov
popa
dec
sub
frstor
stos
or
sub
sbb
insl
mov
stc
cld
inc
sub
add
cmp
lahf
lcall
scas
mov
sbb
mov
iret
cmp
js
arpl
inc
or
cmp
jo
stos
cmc
cmpsb
mov
mov
add
ja
jo
stos
push
sbb
movsl
push
lea
sub
inc
xchg
sti
xchg
iret
int
adc
and
fldpi
xchg
xor
xchg
xchg
loopne
pop
ret
stos
lds
fs
xchg
sub
stos
adc
shl
push
lahf
stos
pop
dec
aas
mov
popf
cmp
daa
sbb
cld
test
loop
adc
stos
pop
mov
cmp
fmuls
movsb
inc
ret
popa
mov
stos
inc
ud0
shll
rorb
outsl
jbe
cmc
pop
stos
hlt
cmpsl
call
dec
stos
lods
xchg
ja
cmpsb
push
movsl
jmp
mov
xor
rcrb
jb
dec
xorb
mov
dec
add
in
pop
xchg
es
imul
int
mov
xor
test
pusha
fisttpll
jmp
push
dec
fs
cmpsl
mov
aas
stos
jb
lock
dec
jp
mov
icebp
loopne
scas
pop
test
jo
cmpsb
pop
pushf
in
sub
xchg
jmp
mov
stos
cmp
cmp
rcl
lcall
aas
mov
stos
in
mov
test
fwait
push
add
addr16
jmp
cmp
stos
sbb
pop
pop
xchg
xchg
addr16
scas
xchg
mov
data16
call
ljmp
add
stos
ds
rcrl
or
inc
xlat
popa
std
clc
outsb
dec
stos
daa
jae
or
or
mov
xor
stos
int3
mov
out
das
stos
mov
or
imul
cmp
stos
pusha
loopne
icebp
and
insl
inc
int
outsl
stos
jp
leave
cli
lahf
jmp
test
mov
push
stos
stos
stos
xchg
jmp
add
stos
cld
pop
fildll
pushf
enter
xor
into
mov
sar
in
mov
dec
mov
aam
in
mov
je
sub
stos
fs
mov
mov
push
call
xchg
and
xor
jmp
movsb
pushf
scas
push
xchg
movsl
pop
xor
pop
mov
lret
pushf
arpl
xchg
stos
es
negl
aam
jecxz
xchg
cs
xchg
dec
les
cmp
pop
insb
stos
ret
xchg
push
mov
addr16
sub
ljmp
push
pop
stos
jae
jle
daa
decb
xchg
stos
negl
mov
mov
scas
subb
xchg
or
imulb
mov
addr16
sbb
mov
in
adc
scas
mov
mov
mov
aad
sbb
cltd
jge
imul
mov
shrl
mov
out
push
add
jge
stos
insl
pop
jl
sub
dec
imul
les
dec
loop
mov
out
jmp
pop
std
xchg
dec
pop
stos
cmp
dec
push
stos
jno
mov
out
fwait
mov
daa
dec
stc
cld
imul
stos
dec
xor
adc
cli
mov
mov
bound
mov
lods
jmp
inc
ljmp
lcall
xchg
bound
nop
fsubrl
idiv
add
stos
mov
xchg
int
arpl
inc
mov
lret
jb
mov
xchg
test
popf
sbb
jno
movsb
xchg
ljmp
dec
pushfw
push
jae
stos
shll
into
fbstp
xchg
stos
or
and
and
lea
popa
in
mov
scas
mov
cmp
fcos
mov
dec
xor
mov
sbb
movsb
xor
mov
insb
xchg
je
frstor
push
push
clc
fisubrs
int3
cli
out
fwait
out
les
scas
dec
daa
inc
mov
push
sahf
int3
sbb
jmp
dec
clc
repz
stos
leave
out
jecxz
jae
mov
ja
mov
scas
int3
mov
cmpsb
push
dec
sub
dec
insl
das
mov
leave
inc
ds
shrl
lahf
gs
mov
rolb
sbb
mov
dec
outsl
pusha
stos
lods
out
sbb
stos
or
xor
inc
mov
add
sbb
scas
sti
ss
imul
cmp
mov
in
orb
lock
mov
mov
inc
push
dec
rorl
imull
outsl
stos
xor
add
sub
pop
addr16
je
push
dec
das
in
pushf
pop
mov
stos
cs
popa
fimull
mov
cmp
and
dec
sub
es
push
stos
imul
xchg
pop
insb
add
dec
aas
xor
imul
inc
mov
rclb
push
mov
pop
cmpl
sub
movsl
in
push
aaa
mov
movsb
or
jmp
sti
sahf
stos
and
mov
or
add
enter
mov
xor
cmp
push
pop
stos
add
dec
xorl
push
addr16
out
fnstcw
mov
pop
mov
push
mov
mov
sub
movsb
mov
push
and
mov
add
out
clc
je
cwtl
jp
stos
adc
jp
call
mov
loope
mov
jbe
push
sbb
xor
push
mov
pop
in
int
imul
mov
ds
mov
dec
mov
mov
sbb
out
stos
sub
mov
stos
psubb
and
stos
sub
pusha
nop
push
repnz
mov
inc
iret
xlat
mov
stos
test
pop
or
clc
jne
dec
inc
cmp
push
addr16
dec
pop
int
adc
xchg
test
mov
adcb
push
push
shrl
inc
out
insl
gs
and
pop
xor
sub
stos
add
insl
test
arpl
orl
stc
push
pop
daa
mov
cltd
jl
adc
outsl
nop
enter
orb
cmp
movsb
xchg
push
rclb
dec
add
sahf
imul
fildll
in
int
mov
scas
sub
sub
mov
jnp
mov
jae
pushf
cmp
insb
cmp
insl
stos
push
pop
xrelease
shll
addr16
mul
xchg
lods
xor
xor
and
in
mov
pop
iret
inc
cwtl
setge
clc
stos
std
mov
ficoms
or
mov
int3
test
fwait
test
dec
and
rorb
test
or
ljmp
cmp
fwait
inc
idiv
jae
adc
push
int
sub
dec
jmp
out
jmp
mov
xchg
xor
jg
mov
pusha
inc
fcoms
stos
insb
mov
push
imul
addl
sbb
ss
pop
loop
inc
lcall
jnp
ja
xchg
nop
aaa
bnd
divb
mov
loopne
addr16
in
sbb
call
push
cltd
push
fsubrl
jb
sbb
xlat
push
loop
pop
stos
rol
es
xchg
mov
movsb
loope
fs
pop
call
addr16
adc
rol
jne
dec
inc
inc
sbb
stos
mov
imul
imul
cmp
rcl
je
jl
mov
data16
adcl
push
stos
lea
jle
gs
add
cltd
pushf
rcr
xchg
int
iret
xchg
lret
addr16
xchg
mov
adc
shrb
mov
ret
ss
and
add
cli
or
sub
ljmp
adc
scas
ret
sbbb
fsubrs
out
imul
pop
stos
shrb
iret
cmp
out
push
andl
adc
pop
xchg
test
add
in
xchg
les
fdivl
mov
jge
mov
outsl
mov
pop
orb
fistl
mov
cltd
stos
faddl
or
stos
pop
mov
pop
daa
dec
test
std
cmpsb
xor
popa
imul
jmp
test
movsl
pop
and
inc
in
test
pop
fwait
add
sub
in
mov
stos
jecxz
in
aas
fsts
stos
imul
scas
mov
sbb
mov
stos
faddl
icebp
stos
call
cmpsb
xchg
xchg
imul
xchg
insl
es
out
stos
pusha
dec
lcall
lea
stos
push
adc
daa
movsl
sub
mov
pop
fdivr
mov
data16
and
push
push
movsb
sub
into
lods
fildll
nop
mov
lods
sahf
jmp
or
adc
int
mov
stc
aaa
stos
popf
xor
mov
fsubrs
pop
lock
in
daa
jmp
pushf
movsl
stos
push
insl
outsl
mov
jp
repnz
fwait
stc
push
loop
and
jne
fstpt
jge
mov
stos
aaa
mov
adc
gs
movsb
sbb
ss
mov
into
push
aas
mov
xor
loopne
cli
jp
jmp
sub
mov
outsb
pushf
push
jmp
adc
lcall
sbb
pop
mov
pop
fisttpl
int3
push
cmp
pop
mov
mov
lcall
jle
loopne
pop
fsts
xchg
fildl
mov
adc
jl
pop
stos
adc
stos
fstl
popf
push
push
pop
cwtl
std
sbbb
and
inc
ret
jge
scas
rcrl
sbb
lahf
pop
adc
ljmp
dec
push
inc
mov
inc
xchg
mov
push
and
dec
mov
ljmp
icebp
jno
cmpsb
stc
and
sub
pop
imul
xchg
sub
sub
arpl
sub
pop
repz
and
aas
mov
and
dec
loope
mov
popa
jmp
cld
mov
outsb
shr
jmp
pop
push
bsr
jecxz
sbb
jmp
imul
xchg
movsb
push
and
sub
ljmp
jmp
in
sub
stos
ljmp
jp
lock
xor
pop
inc
stos
inc
ljmp
sti
or
out
es
sti
sub
rep
imul
mov
out
xlat
push
mov
stos
or
movsl
in
loop
stos
popa
mov
cmp
cmp
mov
mov
fwait
cmpsl
jne
cmc
stos
xor
mov
xor
icebp
stos
xor
into
or
or
mov
or
leave
stos
or
inc
xchg
add
add
inc
add
inc
stos
add
ficomps
stos
push
pop
lcall
sbb
push
xchg
adc
adc
adc
stos
rclb
push
xchg
rcll
out
cs
push
sub
push
xchg
test
icebp
adc
xchg
and
or
xchg
mov
out
mov
sti
imull
iret
mov
mov
push
jmp
scas
out
xlat
adc
loop
push
push
and
gs
or
adc
aad
mov
add
mov
stos
lea
push
rorl
add
inc
jge
fwait
cmp
add
mov
xchg
cmp
in
ss
dec
xchg
pop
cmp
mov
dec
mov
sbb
cmp
out
jno
int
or
ficomps
jb
pop
xchg
out
dec
stos
sbb
jne
push
data16
dec
stos
lcall
sbb
push
ds
cmp
cmp
xchg
xchg
scas
fbstp
dec
into
pop
stos
out
out
sbbl
push
mov
sbb
daa
dec
sbb
xchg
cltd
stos
ja
mov
or
decl
cld
fs
sub
lret
mov
aas
xor
in
push
push
in
or
pushf
jmp
in
mov
mov
popl
pushf
and
scas
push
lods
sub
mov
jmp
fwait
popf
jno
stos
pop
xor
mov
shrl
movsb
and
stos
jnp
add
in
sub
adc
aad
mov
pop
dec
in
mov
push
aad
adc
pop
add
in
sub
pop
call
inc
fimull
mov
push
mov
dec
jmp
ss
xchg
std
xchg
jmp
pop
fwait
jo
sub
adc
stos
popf
xlat
adc
nop
mov
fsubl
ret
lock
jle
cs
add
and
sbbb
orb
pusha
shll
push
jge
das
lods
jnp
shl
mov
push
adc
xchg
mov
imul
pusha
sub
mov
pop
push
jmp
mov
pop
xchg
lcall
jle
les
push
stos
xor
sub
mov
lods
outsb
jl
ljmp
cltd
sbb
xchg
das
stos
subb
mov
xor
stos
insb
scas
loope
int3
inc
ja
stos
mov
jg
cs
inc
test
xor
inc
fs
je
imul
sbb
mov
addr16
push
cmp
orl
clc
push
sub
lahf
mov
lods
stos
xor
loop
xor
xchg
shrl
adcl
roll
fistpl
xorb
rep
loope
roll
das
sub
jecxz
mov
dec
in
stos
jo
and
dec
cld
into
sub
mov
and
test
or
push
inc
mov
call
push
push
mov
jae
out
ja
xor
jno
stos
stos
mov
lock
rclb
pop
xchg
movsl
addr16
outsb
pop
jnp
mov
js
fwait
sub
push
in
mov
pop
cmpsb
sarl
lcall
lock
pop
jmp
scas
lcall
sub
mov
in
xor
lcall
std
movsl
mov
inc
das
clc
fwait
call
push
out
jo
mov
stos
push
out
pop
stos
sub
push
sbb
in
sub
sub
xchg
sti
mov
ds
cli
jnp
aad
push
call
loope
push
pop
mov
pop
cmp
push
mov
jno
push
mov
stos
pop
lock
mov
push
jmp
call
stos
xchg
movsb
cmpsl
inc
sbb
sti
popa
mov
xchg
lcall
inc
fwait
xor
repnz
mov
arpl
inc
ss
mov
popa
mov
add
dec
loope
popl
xor
test
insb
ljmp
dec
push
jno
push
loopne
dec
sub
movsb
scas
add
mov
scas
adc
mov
gs
in
ds
ret
arpl
int3
cmp
mov
fistpl
rorb
jae
out
pop
je
in
bts
ret
sbb
popf
bound
andl
push
dec
sub
cli
inc
push
lods
popf
insl
xlat
xor
sahf
mov
stos
mov
daa
mov
inc
stos
mov
dec
js
stos
mov
aas
xchg
sbb
aad
fdivl
lret
dec
cltd
adc
mov
int
stos
mov
mov
or
jl
jbe
stos
cmp
push
mov
pop
mov
adc
jle
push
pop
aas
push
scas
iret
in
in
sbb
dec
test
nop
fisubrs
fwait
rorl
imul
dec
cmp
insl
stos
and
dec
repz
ret
or
enter
push
adc
js
or
loopne
jnp
pop
movlhps
fwait
and
shr
mov
or
xchg
xchg
ret
adc
lods
fwait
imul
out
stos
ja
xor
in
mov
pop
lock
xchg
aaa
add
stos
adc
gs
sbb
jae
xor
mov
je
or
fdivs
gs
stos
mov
ss
lea
cmp
lods
mov
dec
rcll
stos
hlt
test
add
aas
addr16
lods
adc
sti
mov
xchg
arpl
mov
rorb
stos
push
psrad
or
and
pop
push
pop
pop
stos
mov
xchg
pushf
sub
fwait
inc
ja,pn
mov
adc
cmpsb
fisubs
push
cli
mov
sub
xchg
jns
and
stos
or
out
addr16
ret
pop
jno
inc
mov
pop
icebp
or
mov
cli
stos
mov
mov
push
mov
shr
fdivl
cs
jae
xchg
mov
dec
stos
cmpsb
pop
sahf
insb
jo
adc
movsl
outsb
negb
inc
stos
popa
mov
jmp
stos
adc
dec
fldt
and
mov
je
aas
sbb
cs
jb
jl
push
popa
sbb
lahf
stos
adc
dec
into
mov
pop
call
and
ficoms
xchg
mov
dec
lods
pop
pushl
movb
cmp
stos
jp
or
lods
push
cmp
inc
mov
scas
outsb
stos
xor
repz
pushf
push
filds
mov
push
xchg
inc
ljmp
test
mov
lret
fistps
and
mov
sub
mov
add
ror
pop
cmp
dec
icebp
stos
lahf
mov
stos
jg
fcomps
int3
sbb
xor
mov
cmp
sub
arpl
into
scas
stos
fneni(8087
js
jno
pop
xlat
adc
xchg
sub
dec
fsubrs
inc
inc
stos
jb
loop
mov
movsb
xchg
fstl
mov
lock
mov
js
imul
rcll
sbb
test
pop
push
in
jo
pop
pop
das
lods
outsb
push
push
cmp
leave
mov
stos
inc
mov
pop
cwtl
ljmp
mov
cmp
subb
mov
in
int3
inc
mov
mov
addr16
popf
xchg
mov
mov
or
push
pop
pop
mov
inc
in
das
xchg
push
arpl
lods
mov
test
call
mov
sar
andl
sbb
fbld
in
inc
pop
and
je
pop
sti
repnz
mov
stos
outsl
aam
jnp
adc
ja
das
pop
or
push
rcrb
mov
mov
mov
xchg
and
push
jnp
mov
lea
stos
mov
lret
popf
sbb
or
icebp
dec
movsb
pop
sbbl
add
push
jne
subb
jae
lods
jle
out
adc
add
cmpsb
cltd
je
pop
stos
pop
push
shll
pop
push
push
pop
shlb
jns
das
lods
popa
adc
jmp
sub
rcll
or
mov
rorb
jmp
daa
pop
sarl
mov
sti
out
imul
add
adc
sub
in
rol
std
mov
dec
enter
and
insb
sub
stos
orb
outsl
shl
mov
das
insb
stos
inc
jg
push
push
in
xchg
stos
movsb
add
fwait
inc
xchg
hlt
xor
ja
mov
pop
jo
stos
je
xor
xchg
test
adc
hlt
lods
ljmp
sahf
jns
dec
out
xchg
mov
out
jmp
scas
imul
adc
mov
test
jp
inc
sub
sub
mov
cmp
stos
hlt
jg
gs
sbb
stos
jns
fadds
xor
xchg
stos
xchg
jg
fsubrl
in
fstpl
shl
or
xchg
out
movsb
xor
fs
mov
nop
adc
sub
cmpsl
outsb
xchg
rclb
xor
push
cmc
push
daa
pop
lahf
sub
pop
stos
xor
lods
jl
ror
and
sub
fnstsw
mov
nop
repnz
inc
popf
das
push
std
adc
mov
hlt
cmp
stc
add
shrb
xchg
popf
lcall
in
jp
push
pop
es
cld
cmpsb
lods
scas
ret
mov
addr16
shr
add
mov
jle
aas
mov
clc
stos
loop
hlt
mov
movsb
out
rcrb
test
daa
dec
sub
cmp
sbb
mov
cmpsl
in
and
loopne
test
leave
daa
popa
cmc
xchg
mov
and
or
pop
repnz
sub
cmp
xor
es
lods
test
push
mov
xchg
mov
xlat
xchg
xlat
or
mov
test
js
stc
stos
test
and
mov
jnp
xchg
test
icebp
mov
jno
mov
test
lods
incl
cmpsb
cmpsb
icebp
cmp
jecxz
inc
push
mov
mov
pop
mov
inc
xor
pop
mov
ja
xor
mov
fistpll
ret
mov
mov
cmpsl
inc
cmp
lock
dec
pop
ss
jns
dec
adc
bnd
jno
add
jecxz
shr
cmc
movsb
data16
jmp
mov
push
lret
mov
mov
shr
bnd
lock
test
jbe
out
cmpsb
repz
repz
jp
jns
cmp
push
out
aad
mov
add
cmp
sti
es
and
lock
mov
into
push
scas
mov
mov
popa
int3
es
jno
repnz
repz
insb
add
cmpsb
lahf
cmp
repnz
mov
das
clc
idivl
in
gs
loopne
jmp
or
outsl
mov
mov
imul
stos
jg
dec
or
mov
jg
xor
jp
roll
jns
in
dec
aaa
sub
ret
test
mov
stc
std
inc
sub
test
xchg
lods
xchg
mov
mov
inc
ds
test
or
mov
mov
mov
fisttpll
xchg
sub
mov
stos
sti
mov
xor
jae
clc
push
xchg
das
out
daa
adc
sbb
sarb
hlt
addr16
dec
std
out
mov
sub
inc
jmp
lea
movsb
jmp
push
cmpsl
scas
adc
mov
sti
jne
and
stos
push
icebp
outsb
jb
aam
les
lcall
aam
pop
int
ret
pop
dec
cmpsl
movsb
dec
test
mov
ljmp
jle
push
jecxz
ljmp
stos
div
data16
lret
sub
cmpsb
stos
inc
cmp
out
stos
jle
push
or
jp
imul
out
jb
dec
and
mov
cli
sbb
cmp
adc
cs
mov
outsb
cmp
stos
or
lcall
fcmovbe
shr
xor
add
adc
jno
dec
inc
sub
pop
push
push
insl
loopne
aas
cltd
xchg
cwtl
mov
mov
or
and
sub
jmp
jle
xor
jmp
push
jp
out
lods
mov
lret
imul
lret
gs
idivb
xor
or
sub
das
jmp
xchg
pusha
dec
mov
stos
inc
enter
pop
dec
pop
stos
push
pop
sub
negb
or
sub
test
cmp
mov
insl
xor
jb
cmp
arpl
mov
cmc
xchg
popf
fidivrl
add
mov
ficomps
stos
dec
lds
dec
sarl
addr16
push
nop
bound
lods
mov
stos
dec
xor
loopne
adc
aad
cwtl
jg
or
mov
sub
ja
mov
xchg
push
mov
jmp
aam
roll
out
mov
in
jg
sub
jbe
push
aaa
popa
cwtl
sahf
dec
xchg
inc
fldl
stos
and
jns
push
lods
stos
push
loope
and
stc
mov
test
movsb
xorb
mov
fstpl
or
mov
pop
add
sub
mov
scas
frstor
fistpl
mov
ret
rol
aad
mov
popa
shrb
push
fwait
mov
call
not
das
push
ds
cs
sub
cmp
mov
push
bound
jge
daa
adc
mov
mov
enter
outsl
adc
mov
adc
hlt
mov
jnp
push
stos
xor
push
shll
movsl
fs
or
into
and
gs
repnz
mov
out
mov
inc
es
jbe
in
inc
les
dec
hlt
stos
or
inc
xor
xchg
enter
jg
sub
mov
cld
xchg
jl
stos
popa
push
aas
icebp
scas
fcompl
cld
push
decl
mov
mov
in
aas
fadd
push
sub
mov
adc
stc
xor
mov
cwtl
scas
jecxz
xchg
negb
out
cli
sti
dec
popf
imul
mov
in
mov
dec
mov
inc
nop
mov
mov
test
xchg
and
sub
mov
mov
add
test
sbb
fs
xor
mov
mov
fsubrs
jmp
cmpsl
icebp
dec
stos
shll
mov
in
mov
popa
cmp
cmp
jle
mov
sarb
xchg
stos
orl
ja
sub
stos
cli
out
push
push
cli
sub
push
test
cmpsb
and
pushf
fsubs
nop
cmp
and
lds
sub
push
cs
pop
pop
addr16
outsb
mov
mov
daa
mov
bound
sbb
stos
cwtl
out
ss
sub
out
fnstenv
xor
mov
ss
stc
shll
stos
jo
push
test
adc
stos
call
sbb
scas
jmp
xchg
cmp
hlt
aaa
sub
add
arpl
xchg
dec
inc
test
jmp
stos
xor
stc
inc
jg
push
enter
mov
sub
scas
push
test
shrl
xchg
in
loope
and
fucomip
mov
daa
mov
or
or
inc
jmp
cmc
les
in
test
push
imul
stos
pop
lock
movsb
cs
dec
shlb
fisttpll
lret
lahf
stos
jmp
ss
pushf
movsb
in
mov
stos
cmc
fisubrs
loopne
or
mov
or
add
add
aaa
ljmp
add
dec
subl
stos
jg
daa
jns,pt
cmp
sbb
fwait
sbb
movsl
stos
imul
and
push
stos
push
dec
jecxz
pop
xchg
addr16
lods
or
push
cli
add
jle
mov
stos
push
call
cmp
aaa
dec
push
xchg
push
and
daa
sahf
mov
rcrl
movsb
sub
ret
into
movsb
cmp
mov
jns
jge
mov
cltd
lods
and
ja
dec
insb
imul
or
add
lods
outsl
out
sbb
jmp
hlt
mov
hlt
mov
fwait
dec
popf
sub
push
das
sahf
stos
jmp
pop
push
pusha
push
xchg
adc
fstpl
pop
enter
imul
or
inc
neg
outsl
xchg
dec
test
xchg
adc
aaa
stos
push
add
cmpb
aas
movsb
loop
imul
scas
xchg
jnp
jle
mov
or
dec
test
in
cmp
push
mov
dec
mov
stos
xorl
mov
std
arpl
repnz
rcr
mov
loope
push
imul
cmp
mov
lcall
sub
or
stos
pop
cwtl
pushf
fcompl
sbb
jecxz
aad
pop
ficomps
fwait
sub
xor
and
bound
xchg
stos
mov
gs
shlb
cmp
push
mov
mov
stos
pop
or
xchg
pop
imul
mov
stos
mov
fmuls
xchg
or
xor
in
mov
sti
xchg
adc
repz
jmp
stos
xchg
jnp
bound
push
mov
scas
pop
stos
add
jg
adc
dec
stos
hlt
in
ret
ds
sahf
stos
inc
push
js
icebp
mov
jmp
jle
fsubp
loop
sti
insb
stc
ja
or
sub
xchg
in
dec
cmp
pop
das
stos
out
daa
gs
sbb
hlt
mov
push
xchg
push
pushf
stos
out
int
das
jecxz
mov
sbb
stos
subb
push
icebp
xchg
clc
adc
stos
mov
inc
push
sarb
xor
cmc
jge
push
negl
cmp
push
sub
stos
fidivs
inc
xchg
xorb
in
stos
mov
sti
hlt
cmpsb
mov
pop
stos
int3
mov
xchg
xor
xchg
test
addl
dec
hlt
mov
stos
mov
push
xor
or
test
push
push
mov
cmp
pop
pop
push
std
cs
push
in
or
cli
and
dec
and
mov
or
inc
stos
add
mov
addl
stos
out
push
adc
add
stos
popf
mov
fildll
in
xchg
stos
dec
mov
sar
push
push
mov
add
mov
or
mov
sub
ror
push
stos
lods
subl
stos
cltd
ja
mov
stos
xor
or
movsb
push
test
mov
and
test
sarl
pop
add
stos
push
fsubr
inc
movsl
aad
cs
jnp
ret
ret
sub
mov
adc
mov
in
dec
addb
cs
mov
push
mov
push
fstpl
lds
push
in
out
addr16
stos
lods
insl
int
or
add
mov
cmpsl
stos
shrb
stos
aaa
add
fstpl
xor
adc
pop
out
or
bound
mov
fwait
pop
mov
add
sbb
leave
das
rcll
imul
or
sbb
adc
mov
add
jmp
pop
scas
jb
cwtl
inc
and
cmp
movsb
xchg
fwait
je
sub
jno
hlt
clc
subl
xor
mov
fdivrp
mov
xchg
cmc
stos
mov
outsl
out
mov
adc
jo
rolb
inc
lods
push
stos
nop
push
in
xchg
dec
and
stos
orb
lds
xor
jecxz
jg
mov
or
push
out
and
shlb
dec
scas
stos
sub
mov
lret
fldcw
nop
xor
jbe
sub
mov
sub
and
stos
add
out
push
imull
sub
ljmp
movsb
and
movsl
and
inc
scas
inc
and
pop
fisubrs
xor
stos
xchg
out
ret
daa
inc
dec
stos
icebp
es
shl
pop
shlb
push
fnstsw
inc
and
jno
jle
xchg
cmp
adc
ret
lock
push
stos
mov
icebp
push
and
fcoms
xchg
and
mov
and
push
inc
imul
jbe
cwtl
fidivs
gs
je
aad
in
addb
or
stos
testb
mov
gs
mov
out
lcall
jae
movsb
mov
inc
cmp
mov
xor
jno
sub
push
aaa
int3
out
popf
or
adc
gs
xchg
popa
dec
movsb
mov
stos
inc
in
in
pop
jbe
push
mov
xchg
mov
loop
adc
mov
icebp
in
add
stos
inc
push
fidivs
stos
add
ret
push
je
stos
mov
cmp
sub
push
pop
in
arpl
sbb
fldl
or
inc
pop
and
shl
fsub
imul
mov
push
xchg
adc
enter
popa
dec
sbb
lea
cld
stos
testb
or
adc
adc
jge
dec
fsubl
repz
stos
scas
insl
dec
lret
addr16
es
pop
dec
dec
push
daa
sbb
int3
jne
in
mov
stos
push
cs
push
stos
shrd
ss
cmp
fimull
mov
inc
sub
nop
sub
inc
cmp
sbb
jg
jle
and
shlb
in
rcl
sti
int3
adc
nop
cmpsb
stos
cli
and
adc
sarl
stos
inc
shll
or
data16
sub
mov
stos
loope
jo
loopne
cmp
shrl
hlt
mov
jle
mov
fwait
icebp
ret
daa
test
fstl
cmp
test
sub
xchg
rcll
jnp
decb
pop
ja
stos
push
mov
inc
stos
adc
jmp
xor
push
stos
das
icebp
adc
in
mov
xor
test
cmp
inc
das
pop
mov
shlb
popf
mov
aaa
mov
pop
js
out
cmp
loopne
test
jmp
lock
lods
das
je
sbb
imul
mov
cltd
lds
loope
out
or
fs
insb
inc
std
outsl
mov
enter
mov
pop
mov
push
lret
aaa
push
pop
sti
cs
jge
add
sbb
xchg
or
inc
shlb
mov
cmc
das
in
lahf
mov
add
push
or
hlt
daa
lds
push
jbe
pop
out
xor
imul
pop
mov
gs
sub
pop
outsl
fisubrs
sub
or
pop
jo
xor
stos
scas
nop
fs
add
les
je
jb
stos
mov
adc
scas
nop
stos
pop
push
in
inc
inc
cli
fcmovbe
dec
out
or
push
push
rcrb
and
dec
jmp
push
mov
adc
mov
xchg
cmp
es
stos
shll
mov
cwtl
adc
ret
ret
add
stos
dec
frstor
imul
stos
push
divl
out
test
dec
jae
lret
ror
loop
ret
add
fstl
dec
ret
stos
enter
in
inc
sub
cs
lret
sbb
fwait
mov
ret
adc
stos
push
int3
adc
adc
stos
les
push
dec
icebp
mov
stos
test
shlb
fwait
outsl
push
nop
stos
adc
bound
std
stc
cmp
mov
insl
cmpsl
das
pop
pop
pop
out
adc
lcall
dec
push
mov
dec
hlt
xchg
lods
jp
and
mov
stos
sub
repnz
pop
lock
stos
push
add
inc
out
orl
mov
addr16
inc
and
imul
jl
stos
je
add
js
nopl
mov
iret
outsb
lahf
fiaddl
pop
imul
repnz
imul
mov
pop
movsb
push
lea
dec
mov
es
into
mov
daa
iret
fwait
jae
pop
sbb
fisubrs
or
mov
or
cmp
addr16
pusha
mov
imul
lcall
cld
sub
adc
stos
outsb
cmp
stos
incl
jns
mov
dec
sahf
arpl
ljmp
dec
shr
cmpsb
fwait
idiv
rorl
shll
lods
enter
shl
out
inc
or
stos
mov
and
stos
scas
add
outsl
ds
dec
fists
inc
movsb
in
inc
xchg
fwait
pop
cld
pop
dec
xor
mov
sbb
insb
daa
push
add
cmp
push
push
in
ret
push
xchg
fdiv
xchg
mov
pop
jnp
fs
int3
orl
jg
loopne
insl
mov
pop
pop
dec
test
subl
das
cmp
add
jp
cmp
cli
mov
or
push
stos
sub
xlat
lods
sub
inc
aas
inc
cmp
xor
movsl
in
imul
aad
push
insb
jnp
pusha
scas
daa
push
sbb
push
xorb
call
inc
les
xchg
stos
cltd
mov
push
mov
jns
xor
sub
shll
jg
jmp
mov
testb
push
jnp
enter
xchg
push
hlt
subps
cmp
dec
sbb
push
stos
fadd
cmp
stos
jl
dec
jae
ss
stos
addl
enter
stos
inc
sbb
mov
cmp
je
cmpsl
stos
sbb
sti
sbb
mov
adcl
sub
sub
pop
push
icebp
enter
in
mov
aad
sbb
int3
mov
mov
cmpsb
stos
and
push
shr
push
outsb
jge
and
jmp
mov
mov
out
std
jp
data16
stos
and
pushf
add
sub
in
pop
outsl
insl
adc
xor
stos
xor
cmpsl
mov
fidivl
addr16
mov
push
cs
stos
sbb
mov
sbb
dec
cwtl
test
mov
lods
mulb
imul
cs
rep
std
push
movsb
and
ljmp
and
lock
mov
jl
push
arpl
popf
aaa
sbb
xor
stos
pop
mov
add
icebp
addr16
push
push
repz
cmp
inc
faddl
inc
sbbl
ficompl
dec
stos
mov
insb
das
cmp
out
jo
fwait
cmp
adc
jno
int3
pop
lret
outsb
add
pop
and
mov
mov
dec
stos
mov
or
inc
in
adc
cld
outsl
insb
loopne
idivb
mov
lret
daa
mov
jecxz
xchg
iret
int
jo
aaa
push
xlat
jnp
fisubrs
insb
repnz
stos
sahf
int3
popf
jb
xor
imul
or
jo
mov
divl
es
push
or
ja
xchg
mov
je
insl
movsb
ljmp
mov
sub
lea
cmp
inc
pop
inc
ret
mov
inc
stos
xchg
push
out
loope
sbb
xchg
ljmp
pop
pop
mov
or
lods
xchg
push
mov
sub
pop
fwait
sbb
stos
and
jp
imul
sub
xor
jmp
push
xor
out
xor
stos
sub
call
cmp
inc
push
sbb
mov
xchg
call
inc
or
subl
out
insl
sti
pop
stos
mov
and
div
stos
jl
and
lods
stos
or
adc
stos
xor
xchg
inc
jg
dec
cmpsb
stos
lds
push
out
cwtl
adc
lret
popf
inc
fwait
ss
xchg
rorb
cmp
stos
testl
add
pop
add
jmp
ljmp
lds
sbb
test
imul
repnz
in
ficoms
movsb
adcl
cs
push
fwait
loop
lcall
test
test
inc
test
inc
test
cmpsl
mov
cmpsl
daa
fbld
popf
mov
iret
mov
test
jmp
out
sbb
fucomip
cmp
push
lcall
cmpsb
mov
sbb
push
insl
fwait
xchg
out
aaa
cwtl
mov
adc
mov
fistps
ficoms
mov
pop
lcall
cmpl
fistps
adc
stos
adc
mov
icebp
lss
dec
dec
dec
test
int
repnz
jle
mov
mov
and
jb
js
push
xchg
cmp
adc
sub
jno
int
xchg
jo
repz
and
outsl
jp
addr16
dec
int
into
cs
jno
cmpsb
dec
std
in
xor
jge
jge
in
mov
ds
test
shrb
add
daa
mov
xlat
and
jb
loopne
fsubrl
add
pop
mov
cld
jb
aad
js
sti
fcoml
xchg
lods
push
push
lahf
adc
mov
mov
jo
mov
mov
fwait
shrb
push
ficoms
test
xlat
test
sbb
cmpsl
mov
adc
das
sbb
mov
cmpsl
lahf
es
dec
push
iret
push
fisubl
pop
pop
loope
lods
sbbl
sbb
inc
roll
ret
add
jae
sbbl
pop
fldcw
add
push
xchg
push
fcompl
jno
xchg
cmpsl
sahf
sub
push
sub
insl
sbb
fists
mov
in
mov
cmp
push
repnz
into
adc
mov
frstor
mov
cld
scas
nop
cltd
pop
push
sbb
mov
xchg
push
sarb
in
jmp
adc
mov
stos
fists
cmp
jns
pushf
jge
sbb
fdivrl
pop
scas
pop
inc
mov
cmp
pop
adc
insb
mov
jmp
cmpsl
add
cmp
mov
mov
fst
mov
xchg
mov
and
test
mov
adc
fsubrl
mov
sbb
add
test
fsubs
lea
rcr
cltd
jmp
call
out
xchg
rorb
xchg
fsts
pushf
lahf
mov
scas
mov
sbb
xor
in
sub
mov
mov
and
lods
pop
sbb
xor
push
inc
dec
cmpb
test
scas
mov
dec
lea
movsl
mov
insb
xchg
ror
addb
add
stos
and
push
push
in
push
nop
inc
cld
adc
test
fadd
mov
or
aad
aad
lods
sbb
std
cmp
push
xchg
xchg
push
fcoml
add
xchg
fsts
shlb
push
ret
add
mov
push
bound
xlat
das
xchg
scas
pop
xchg
lcall
and
loop
aam
mov
repz
add
adc
fisubl
in
dec
adc
mov
cld
jmp
mov
jp
mulb
cmpsb
fidivrl
std
lock
sub
add
rorl
pushf
test
stos
jae
psllq
sarb
or
mov
cmpsb
or
gs
add
lock
xchg
add
dec
mov
cmp
test
lfs
dec
sub
rcrb
mov
dec
loope
nop
mov
jbe
mov
adc
fs
cs
leave
aas
lods
ja
lret
and
add
jno
dec
sub
divb
jae
mov
mov
ret
dec
int3
and
aas
stc
push
push
cmp
pop
sbb
push
mov
jae
push
dec
jecxz
cmp
dec
and
mov
jnp
xor
jno
inc
repnz
call
mov
mov
and
mov
jbe
mov
loope
ja
mov
or
add
mov
jge
ljmp
jne
pop
jp
addr16
pop
cmp
fsubl
sti
jle
imul
aaa
mov
mov
push
jle
xchg
cmp
pushf
je
push
mov
imul
mov
xchg
push
jb
cmp
sub
ret
scas
int
push
jnp
mov
mov
mov
test
jmp
popa
mov
mov
mov
jmp
mov
push
mov
add
xor
cmp
sbb
push
or
icebp
sub
lret
mov
aas
call
shr
mov
sub
imull
outsb
dec
out
dec
jae
adc
adc
mov
mov
mov
cli
popa
test
leave
pusha
sub
cmpsb
mov
push
cmp
ljmp
inc
jmp
movsl
test
stos
ljmp
in
push
push
inc
out
cmpsl
in
jmp
mov
mov
in
call
out
movsb
mov
test
jecxz
mov
movsl
aam
xor
mov
shr
aas
push
mov
mov
mov
addl
aas
popa
xchg
jbe
cmp
inc
mov
js
sbb
cmp
inc
repz
orl
jmp
test
mov
stos
pop
sub
nop
inc
ret
test
popl
sub
mov
test
cli
xchg
mov
imul
cwtl
out
loop
call
jbe
jno
pop
test
test
sub
mov
decl
leave
hlt
push
lret
mov
addr16
sub
lcall
repnz
sub
test
in
and
in
fistpl
ret
dec
shrl
cmp
out
stos
in
leave
into
xchg
dec
jnp
lods
mov
jbe
and
jle
fwait
mov
or
xchg
mov
xchg
xchg
mov
mov
mov
xchg
cmpsl
mov
mov
sarl
jl
int3
imul
sbb
sbb
xchg
sub
sub
jnp
adc
in
mov
jge
int3
lods
push
clc
and
adc
movsb
pop
lcall
xchg
or
dec
int3
or
xchg
mov
dec
int3
test
or
popa
cli
loope
jno
push
and
mov
xor
loope
imul
js
sahf
sbb
xchg
adc
dec
imul
nop
in
xchg
lock
xchg
adc
mov
mov
or
stos
movsl
mov
sbb
mov
test
xor
arpl
push
cmc
pop
mov
movsl
xor
jbe
shrl
jp
mov
xchg
mov
dec
mov
mov
mov
xchg
ljmp
mov
test
push
ja
dec
test
push
enter
xor
sub
sub
clc
cs
sub
cltd
push
cmp
dec
mov
mov
fcomps
mov
aaa
test
mov
cmp
js
jbe
pop
fisttpll
mov
jae
or
xor
ss
add
mov
call
pusha
ljmp
aas
dec
adc
pop
sahf
lret
popf
outsl
jp
push
shll
dec
stc
test
mov
add
jo
push
data16
jnp
mov
sbb
sbb
adc
mov
or
enter
xor
fcomip
jl
and
mov
stc
xchg
pop
repz
mov
sub
stc
mov
xor
cli
leave
cmp
imul
mov
mov
test
jbe
dec
mov
mov
enter
jbe
ret
lods
leave
mov
mov
inc
imul
dec
lahf
scas
mov
aaa
sti
dec
clc
mov
stc
jae
out
pop
mov
movsb
inc
jmp
pushf
dec
mov
mov
and
cmp
mov
add
es
xchg
fnstenv
scas
mov
xchg
jmp
mov
jns
cmpsl
and
mov
push
sub
ja
iret
mov
xor
ss
cmp
or
stos
jp
mov
xor
cmp
adc
push
jl
lock
dec
xor
xor
jae
lea
lods
icebp
jle
adc
dec
mov
dec
cmp
fistps
sti
scas
mov
push
ds
ret
mov
fldl
mov
arpl
out
and
xchg
test
jecxz
andl
lahf
pushf
mov
insl
xchg
das
mov
addr16
rcrl
icebp
mov
call
mov
mov
jno
xchg
aam
push
mov
aas
fwait
stc
jne
mov
fisttps
repnz
xchg
jo
outsb
inc
call
mov
push
xor
daa
mov
add
mov
repnz
jbe
mov
rcl
mov
xor
int
mov
mov
pusha
cmpsb
cmp
jmp
cld
ljmp
xchg
mov
arpl
mov
call
push
jne
fisttps
clc
lock
dec
sti
mov
insb
sub
repz
iret
sub
jmp
dec
sarl
or
mov
es
lock
mov
jo
xchg
pushl
jp
lock
mov
into
or
stos
cmp
loopne
xor
aas
pusha
cld
movsl
inc
mov
in
xlat
mov
leave
idivb
jb
push
jbe
bound
inc
test
sbb
sub
push
mov
jle
sub
jp
inc
mov
xchg
pop
cs
addr16
mov
nop
mov
lods
lret
lods
sbb
std
cmp
lea
jnp
jnp
jnp
jnp
push
jge
mov
mov
push
repz
mov
dec
outsb
into
outsb
mov
outsb
ret
outsb
scas
scas
mov
lea
xchg
xchg
lods
push
bound
sub
pop
cmpsl
inc
cs
mov
mov
addr16
enter
cmpsb
test
mov
cs
or
insb
mov
fnstenv
lock
mov
popf
fs
stos
jle
outsl
pusha
test
dec
or
sti
ret
jbe
mov
cli
mov
repnz
in
push
or
call
sub
stos
stc
clc
cli
jp
shl
nop
mov
clc
xor
adc
and
sub
push
sti
cmp
js
xlat
es
clc
xor
jb
pop
and
int3
test
test
daa
push
addr16
into
mov
ds
mov
xor
mov
or
testl
dec
fwait
sub
inc
dec
sbb
movsl
sub
sub
stc
or
pop
insb
inc
scas
jle
dec
int3
mov
lods
scas
inc
add
and
pushf
mov
mov
push
push
stos
or
push
jge
xchg
dec
int
jb
sbb
test
mov
addr16
dec
mov
dec
mov
pop
stc
lock
jl
movsl
push
push
je
arpl
sub
dec
jne
daa
fsincos
xchg
sbb
cmp
stc
aaa
mov
clc
pop
sub
jns
dec
clc
jp
adc
xor
xor
lret
mov
or
js
and
cwtl
xorl
mov
cmpsl
out
add
push
ret
punpckldq
call
inc
lock
icebp
and
push
mov
xchg
js
addr16
jne
and
jne
pop
stc
xchg
xchg
jp
fdivrp
je
into
loopne
pop
adc
imul
popa
aas
jo
lcall
cmp
testb
mov
popa
gs
add
rol
aaa
cmp
aaa
xchg
int
sbb
iret
into
xchg
jmp
dec
xchg
mov
icebp
adc
adc
mov
cmpsl
cwtl
daa
xor
jle
nop
and
cmp
sbb
jbe
jp
rolb
push
repnz
and
and
daa
popa
xchg
stc
or
cmp
cli
cld
and
dec
nop
mov
xchg
loop
xor
daa
sub
dec
add
int3
pop
xrelease
imul
test
mov
sub
mov
or
out
bound
stos
jmp
in
sub
dec
stos
jae
jne
xor
in
daa
es
mov
out
cmpsl
lods
dec
cmpsl
popa
icebp
loopw
jmp
mov
mov
outsl
mov
xor
lods
add
cmpsw
stc
cmpsb
lcall
out
test
jge
lret
es
pop
add
ret
jmp
mov
movsb
test
and
pop
cmpsl
les
xchg
loopne
jecxz
mov
popf
loope
stos
lds
push
arpl
outsl
cmp
bound
or
mov
outsb
test
imull
mov
sub
cmpsl
and
test
and
ja
outsl
inc
cli
mov
mov
int3
iret
enter
inc
int
ret
add
lods
inc
cmp
mov
add
push
pop
inc
push
jnp
add
push
jb
or
inc
test
adcl
lods
xchg
test
and
mov
addr16
mov
and
pushl
mov
test
dec
mov
jno
mov
jb
andl
enter
mov
popa
clc
jae
dec
cmp
mov
mov
arpl
dec
dec
imul
cmp
add
mov
ret
add
dec
push
add
mov
mov
icebp
cmp
inc
cmpsl
loopne
movsl
and
mov
loop
arpl
mov
test
or
popa
or
mov
cmp
sti
and
sbb
movb
sbb
push
pop
stos
fwait
sbb
add
pop
lahf
cmpl
mov
add
mov
rorb
lret
xchg
xor
mov
xchg
into
mov
dec
cmpsl
out
inc
test
sbb
and
cmpsb
inc
int3
movsl
ret
into
scas
and
mov
cmpsl
cld
mov
xor
bnd
inc
xchg
rolb
pop
movsl
mov
sbb
ret
pop
shll
fldl
fcompl
sti
dec
xchg
scas
dec
lret
mov
mov
mov
mov
repnz
data16
xchg
cmpsl
pop
mov
out
andl
dec
andb
pusha
mov
cmpsl
mov
jno
sub
mov
push
or
xchg
mov
sbbl
inc
add
mov
sbb
mov
add
mov
mov
xchg
dec
dec
into
scas
xor
aas
aam
push
test
stos
cmpsb
out
lret
test
mov
test
and
test
incl
mov
popa
xor
cmp
dec
divb
dec
xchg
sbb
jns
cmp
mov
scas
pop
mov
sbbl
push
inc
sub
mov
mov
or
lcall
mov
xorl
call
jmp
repnz
jo
test
jg
mov
into
jno
mov
xchg
andb
test
add
out
mov
pushf
test
mov
add
test
inc
inc
sahf
test
lds
xchg
mov
or
mov
or
fwait
mov
std
addr16
jnp
lahf
jp
mov
movsl
out
mov
lahf
jle
mov
aaa
mov
or
add
add
test
test
movsl
dec
sbb
mov
lods
pop
cmp
mov
and
scas
std
imul
arpl
imul
or
xlat
scas
ss
lcall
lret
xor
dec
popf
jo
mov
xor
cmpsl
or
xchg
test
test
pop
mov
stc
dec
cwtl
and
stos
out
test
mov
cmp
stos
pop
orb
lods
cmpsl
mov
push
orb
mov
scas
dec
or
xor
leave
std
or
xchg
push
pop
mov
out
pop
lcall
ret
mov
int3
mov
jl
sbb
sbb
mov
insb
xor
filds
in
inc
inc
mov
mov
xchg
orb
add
mov
dec
mov
mov
iret
lcall
dec
test
mov
mov
scas
enter
push
dec
xchg
lods
push
sbb
add
call
mov
mov
add
and
out
push
lods
cmpsl
pop
inc
add
stos
les
ret
stc
popf
dec
pop
sahf
hlt
xor
int3
leave
cwtl
popf
dec
in
mov
test
jmp
sarl
scas
dec
or
lret
dec
inc
xchg
test
inc
inc
mov
mov
mov
xchg
or
popf
or
scas
add
repnz
jmp
add
dec
test
push
mov
or
sti
mov
mov
mov
jo
pop
test
mov
xchg
dec
xchg
add
ds
add
les
mov
lcall
pop
add
fimuls
pop
lahf
daa
nop
pop
mov
sti
shrb
dec
mov
aad
test
mov
lret
xchg
lea
test
int3
mov
rcll
or
lea
inc
jp
mov
cmpsl
add
leave
test
lahf
orb
add
test
adc
sahf
sbb
es
subl
xchg
add
addl
dec
mov
xchg
lret
mov
lea
arpl
iret
int3
int3
mov
rorb
xchg
int3
out
jecxz
mov
xor
push
inc
dec
xchg
movl
movsl
add
pop
fwait
inc
xchg
add
rolb
lea
in
pushf
mov
das
fmulp
sahf
mov
sbb
mov
stc
stos
mov
mov
xchg
dec
or
int
mov
cmpsl
dec
test
lods
in
xchg
inc
mov
rcll
aad
jmp
jle
inc
mov
cmpsl
inc
inc
mov
mov
mov
xchg
cmpxchg
push
mov
dec
decl
pop
mov
xchg
or
pop
lods
cmpsb
fisubrs
adc
mov
dec
dec
mov
mov
mov
mov
cmp
add
mov
mov
pop
sbb
mov
jmp
jmp
jle
fisttpll
cmpsl
push
inc
clc
mov
mov
enter
mov
lods
jnp
mov
or
leave
mov
or
cltd
mov
or
pop
mov
mov
inc
ds
les
enter
inc
adcl
out
inc
mov
or
ret
and
scas
dec
lea
movsl
cmpsb
popf
test
addl
push
mov
test
mov
cmpsl
xorl
lods
dec
mov
orb
xchg
inc
mov
pushf
xchg
xchg
add
popf
test
lret
orl
repnz
insl
rorl
inc
or
fmuls
sbbl
test
mov
scas
mov
xchg
mov
outsl
ret
pop
test
ja
test
in
flds
push
xor
movsl
or
jmp
push
test
xchg
mov
jge
mov
test
dec
push
ljmp
subb
and
mov
mov
inc
mov
orb
daa
scas
enter
cltd
mov
add
cwtl
mov
mov
mov
sbbb
mov
lahf
dec
or
mov
xchg
mov
popf
or
fwait
pop
andl
jecxz
andb
cmpsb
stos
cmpsl
pop
sbb
mov
or
lea
test
mov
inc
stos
es
push
sub
iret
dec
sub
popl
lods
test
mov
out
inc
mov
or
mov
mov
les
jno
mov
out
mov
xchg
add
mov
pop
jecxz
clc
mov
mov
mov
xchg
mov
nop
xchg
mov
iret
int
mov
dec
scas
xor
mov
movsl
push
sub
mov
inc
in
cmc
les
jne
mov
mov
mov
push
lahf
int3
ds
mov
inc
loope
xor
mov
mov
lods
pop
test
inc
xorb
dec
or
cmp
xor
mov
mov
mov
std
stc
xor
dec
in
mov
mov
inc
add
mov
jmp
lea
dec
mov
mov
dec
xchg
push
bound
mov
ret
xchg
push
sbb
adc
test
push
subb
dec
lods
or
dec
pushf
push
mov
fsts
mov
jne
xchg
jg
cmp
cli
xchg
push
ret
mov
jp
aaa
je,pt
mov
lret
mov
test
dec
sbb
or
fldcw
sahf
mov
jb
test
lahf
test
ljmp
pop
dec
scas
sbb
mov
sbb
or
loop
dec
stos
sete
jmp
test
mov
stc
mov
jmp
movsl
xchg
repz
mov
icebp
dec
mov
stc
js
stos
jge
aas
or
int
scas
cmc
jae
cmp
mov
xchg
lds
int
nop
cwtl
push
lea
inc
mov
or
or
xchg
xor
arpl
xor
push
mov
or
addr16
xor
mov
mov
mov
and
mov
repz
mov
jle
test
jmp
xor
mov
incl
mov
inc
sub
add
jmp
mov
ljmp
mov
mov
arpl
setne
stos
mov
mov
mov
cmpsl
mov
lods
and
mov
mov
lods
in
xchg
movsb
pusha
cmp
stos
add
xor
scas
mov
mov
cmp
mov
jle
lea
lahf
roll
addl
dec
xor
mov
neg
orl
cmpsb
decl
lret
push
sti
cltd
xor
inc
mov
push
jo
push
repz
lods
sbb
mov
sti
xchg
arpl
mov
subl
adc
in
xchg
and
lods
and
stos
pushl
jb
sti
xchg
repz
mov
mov
mov
xor
mov
mov
pop
int
mov
mov
add
or
xorl
xchg
mov
dec
mov
out
push
or
mov
lret
lcall
mov
jg
mov
mov
cmp
divl
stos
sti
ja
cwtl
mov
popf
xor
lahf
out
mov
cmpsl
mov
fistps
cmp
lods
jle
test
test
xchg
inc
subb
test
mov
pop
jnp
mov
es
mov
mov
lret
push
aas
jg
sbb
mov
mov
jl
test
icebp
test
outsl
dec
mov
in
mov
mov
jbe
cmpsb
mov
in
ss
mov
cmp
lea
pop
add
xchg
inc
and
mov
mov
enter
mov
cmp
cld
sti
jle
mov
lret
mov
sti
icebp
in
mulps
jo
sti
xor
cmp
loope
mov
xor
mov
scas
stos
nop
mov
lret
xchg
cmc
jno
mov
mov
test
jb
mov
hlt
xchg
aaa
lds
je
testl
dec
mov
or
mov
mov
mov
push
lods
mov
inc
sbb
dec
pop
xchg
rorb
mov
test
mov
inc
xchg
testl
jmp
fcoml
dec
negl
mov
stc
mov
xchg
mov
sarl
or
mov
xchg
pusha
test
dec
jmp
cmp
cmpsb
mov
lods
jmp
fists
dec
push
clc
rcl
push
mov
adc
xor
and
stos
imul
fists
pop
sar
mov
test
movsl
in
jbe
add
cmpb
aaa
les
or
mov
and
popa
mov
ss
sahf
aas
mov
jp
aaa
popa
push
cli
popa
inc
sbb
jl
jb
popa
ljmp
mov
imul
adc
fwait
adc
sbb
push
push
adc
mov
out
push
movsl
leave
fwait
and
push
dec
aad
cmpsl
je
lcall
fcomps
scas
xchg
mov
cmp
je
mov
cmc
cld
fs
cltd
sub
adc
ret
arpl
adcl
pop
pop
lock
jb,pn
xlat
push
scas
push
sbb
hlt
mov
sbb
rcll
add
and
mov
inc
mov
bound
mov
cmp
mov
mov
sarb
inc
inc
pop
xchg
cmpsl
ljmp
cs
call
mov
or
pusha
push
xlat
popl
pshufw
and
push
out
and
xchg
repz
loopne
mov
pop
ret
mov
mov
lret
mov
jmp
push
push
or
icebp
mov
cs
push
xor
xchg
add
inc
inc
hlt
test
push
lock
mov
lahf
sahf
out
ret
scas
mov
mov
push
stos
out
aaa
cmp
ljmp
add
mov
jo
lahf
push
push
test
fwait
repnz
ds
andl
clc
ret
test
or
mov
incl
lods
cmpsl
pop
push
mov
ss
mov
lcall
psllw
pop
cmc
test
sub
out
jle
ss
jno
mov
data16
mov
inc
popa
aaa
cmp
inc
dec
cli
sbb
mov
mov
pushf
xor
or
scas
pop
movsb
pop
cwtl
shlb
add
push
lods
mov
push
cmpsb
in
dec
test
xor
mov
mov
jmp
xchg
icebp
fcoml
sbb
push
adc
aas
popf
les
cli
imul
mov
add
xchg
mov
cltd
push
iret
mov
pop
pop
inc
xchg
shlb
mov
xchg
flds
sbb
mov
xchg
sbb
pop
mov
and
mov
aaa
loopne,pt
and
jnp
xchg
push
ss
bound
jno
and
add
daa
pop
jmp
fiaddl
or
cmp
adc
jmp
pusha
mov
loopne
jg
push
sti
movsb
sbb
nop
test
sbbb
mov
cltd
sbb
test
adc
in
cwtl
fdecstp
loope
or
outsb
sub
mov
sub
int
jb
and
lcall
loope,pt
lods
fisubrs
shrl
fstpt
mov
push
cmp
and
pop
adc
jp
xchg
and
sub
test
lods
sti
dec
aas
inc
aaa
cmc
sbbl
test
test
add
adc
or
and
iret
mov
adc
leave
ljmp
mov
mov
es
mov
lock
stos
mov
out
jmp
mov
dec
icebp
iret
lcall
sbb
pop
mov
es
mov
sbb
sbb
jmp
les
icebp
pop
scas
mov
add
sbb
adc
ja
test
gs
arpl
cmp
in
std
and
sub
inc
ficompl
push
jmp
fstps
mull
jnp
js
fsubrl
mov
jmp
inc
mov
adc
push
repz
xor
sub
insl
ja
and
fwait
sbb
ret
lods
imul
mov
mov
pop
or
cmp
push
mov
mov
js
mov
push
push
sahf
mov
mov
mov
pop
pop
pop
add
scas
aas
pop
fld
popa
mov
scas
sub
xchg
aad
cmpsb
inc
sahf
pop
mov
jmp
push
je
ss
inc
ds
arpl
testl
dec
mov
push
gs
xchg
inc
jmp
cmp
xchg
imul
les
cmp
scas
jg
mov
jne
or
xchg
push
ret
mov
shll
lods
decl
repnz
xchg
stos
sbb
in
inc
mov
insb
push
js
leave
sbb
ds
xor
shl
mov
mov
insl
gs
roll
mov
pop
pop
inc
mov
rcll
sbb
insb
jecxz
mov
je
xchg
or
and
jae
outsb
mov
insl
mov
in
aas
sbb
sub
cs
test
sbb
mov
add
push
push
fcmove
aam
flds
mov
mov
shlb
lcall
pusha
sarb
fldt
or
xchg
cli
xchg
jmp
sbbl
stos
cmp
xchg
xor
daa
mov
cmpsl
inc
mov
aas
ficomps
pop
dec
push
inc
dec
fwait
add
xchg
fistpl
mov
es
adc
sub
lods
inc
push
gs
pushf
pop
ljmp
cmp
cmp
adc
inc
push
xchg
push
pop
scas
mov
pop
imul
mov
loop
xchg
ficoms
xor
dec
mov
pop
sub
addr16
ficoml
setle
add
sbb
xchg
es
xchg
pop
outsl
jns
push
pushf
pop
fdivrp
mov
adc
lret
mov
fistps
add
int3
mov
mov
sbb
rcl
push
adcl
test
pop
mov
mov
ficoms
xchg
enter
push
movsb
sti
movsb
mov
pop
xchg
pop
jp
pop
lahf
lods
jb
sbbl
xchg
xor
mov
fstps
cwtl
mov
xchg
cs
in
in
inc
mov
xchg
pop
add
fildl
nop
popf
popf
push
push
in
push
push
bound
js
test
sbb
jns
lcall
jns
scas
xor
xor
lcall
mov
xorb
std
call
xchg
fimuls
ret
call
sub
loope
or
push
andl
mov
stc
xchg
shlb
ret
lock
mov
xchg
push
es
mov
cmpsb
xlat
jae
js
outsl
sub
test
std
mov
shlb
test
jmp
loope
pop
sbbl
adc
nop
cmp
sub
movsb
or
ljmp
and
rorl
pusha
cwtl
jmp
xchg
jmp
mov
in
jmp
jmp
mov
adc
test
aas
in
cwtl
push
adc
pop
sub
pushf
sub
out
pop
sub
pop
test
and
sub
cli
mov
mov
lahf
add
arpl
xor
mov
and
lahf
jns
cltd
addr16
xchg
bound
mov
cli
fsubrl
and
sub
cmpsl
and
jmp
and
call
cmp
dec
sbb
mov
and
cmpsl
jns
xlat
ds
cmpsb
repnz
cmpsb
cmpsb
mov
mov
mov
mov
inc
test
sti
mov
and
lahf
and
xchg
mov
addr16
cmpsl
lcall
jno
std
test
lret
loopne
and
xchg
mov
in
push
mov
movsl
sahf
add
xchg
xchg
xchg
mov
mov
jp
shll
movsl
or
sbb
xchg
dec
mov
outsb
jbe
xchg
mov
jnp
cmc
cltd
push
sbb
lahf
jno
stos
scas
scas
jno
xchg
dec
test
fsubl
test
cs
andl
inc
and
cmp
ds
sub
mov
cmpsl
movsl
jecxz
xlat
into
and
test
jge
out
jbe
ret
orl
popf
aad
sbb
lods
mov
jne
mov
mov
cwtl
mov
movsl
mov
mov
mov
dec
mov
es
int
stos
pusha
inc
cltd
out
out
mov
inc
xlat
mov
dec
mov
lods
xchg
movsb
push
jp
adc
popf
out
imul
sti
ja
enter
scas
popf
mov
mov
int3
loopne
lods
test
movsl
scas
mov
sbb
mov
xchg
movsl
jns
cltd
xchg
ret
jmp
mov
addl
fbld
call
lahf
jns
push
mov
xlat
jmp
adc
out
ret
iret
movsl
cmc
mov
pop
mov
scas
lds
mov
mov
data16
mov
jmp
jmp
or
test
lret
or
fidivl
mov
cmpsl
inc
mov
sub
sarl
sbb
sub
mov
xchg
test
in
inc
ja
mov
inc
lods
inc
dec
fdivrs
popa
stos
test
jmp
xor
arpl
imul
leave
mov
jns
lcall
mov
cmpsl
mov
ret
addr16
cmpl
inc
and
mov
mov
lods
xorl
sarl
cmpl
xchg
fistps
add
xchg
cmpsl
push
gs
cmp
mov
xchg
subb
mov
inc
test
cmpsl
xchg
fwait
rcrl
inc
mov
xchg
cmpsl
sbb
test
mov
stos
dec
xlat
andl
xchg
cs
mov
sbb
popa
mov
iret
scas
dec
xchg
mov
mov
cltd
xchg
xchg
lcall
inc
addl
mov
cmpsl
cmpsl
cltd
loope
mov
mov
cmp
cltd
jnp
cmp
mov
mov
xchg
mov
jecxz
fldcw
sbb
aaa
inc
inc
mov
pop
mov
sbb
popf
mov
andl
or
pop
xchg
iret
dec
les
leave
mov
mov
mov
mov
xchg
das
rorl
popa
mov
jg
push
lods
stos
fwait
mov
lods
mov
pop
sub
out
and
mov
mov
test
push
movsl
bnd
xor
mov
add
mov
adc
mov
pushf
add
fiaddl
popf
mov
andb
lret
jmp
fimuls
mov
fxtract
jecxz
cltd
mov
fisubrl
push
fldl
xchg
popf
jecxz
data16
mov
arpl
pusha
repnz
mov
fwait
fwait
movsb
mov
fisubrl
jne
mov
cmp
mov
cmpsl
jp
cmp
cmp
mov
cmp
cmpsl
fs
cwtl
out
mov
mov
movsl
jp
mov
pushfw
sbb
out
mov
jecxz
jae
mov
add
fsubr
mov
push
mov
xorl
sub
mov
out
test
out
mov
jecxz
iret
mov
dec
pop
xchg
insl
sub
fwait
or
mov
out
cmpsl
pop
lcall
inc
sub
inc
pop
popf
mov
lret
inc
pop
stos
vphadduwd
aam
mov
loope
and
out
jmp
fwait
jecxz
rcll
xchg
sbb
mov
out
sub
test
fwait
push
nop
and
lcall
stos
mov
sub
out
aas
sub
jnp
pop
mov
mov
mov
imul
and
cwtl
imul
adc
xchg
xchg
pop
pop
lea
xchg
mov
xchg
iret
mov
and
mov
xchg
dec
bound
mov
test
lahf
pop
sub
out
out
aad
out
mov
int
xchg
push
cmp
in
addl
mov
mov
cmpsl
inc
stos
dec
xchg
cwtl
xchg
repz
out
lahf
mov
pop
xchg
pop
fldcw
icebp
mov
xor
rolb
lcall
cmp
popf
icebp
xchg
jns
sti
lahf
lret
cmp
adc
xchg
stos
sahf
mov
push
mov
lods
xchg
cmp
mov
inc
jmp
mov
sbb
stos
fucomip
or
sbb
lahf
mov
push
shlb
xchg
lahf
insl
mov
jl
scas
iret
pushf
stos
pushf
mov
movsl
fisttps
and
les
mov
mov
mov
cmp
filds
test
cwtl
mov
xchg
jno
repnz
push
mov
xchg
stos
mov
xchg
mov
lods
cmpsb
xchg
test
sahf
jmp
jmp
xchg
pusha
adc
movsl
xchg
scas
shr
mov
push
xchg
sub
xor
popf
xchg
xchg
test
lahf
push
test
stc
mov
cmp
movl
stos
cmpsl
push
cmp
mov
movsl
push
mov
mov
push
lret
aam
mov
xchg
fwait
adc
xchg
cmp
jnp
sbb
stos
fidivrs
out
jp
xorl
std
sub
jmp
xchg
inc
mov
jns
std
leave
test
dec
or
mov
jmp
jp
je
cltd
mov
jns
test
cli
cmp
or
test
sbb
pop
jl
cltd
mov
stos
xchg
xchg
jo
or
lea
popf
test
icebp
xchg
mov
fnstsw
mov
jp
movsl
leave
sbb
mov
mov
sbb
or
stos
mov
sub
push
movsb
out
imul
sub
and
xor
xchg
push
ret
xorl
mov
bound
adc
mov
scas
mov
mov
repz
cmp
and
test
sbb
mov
iret
mov
xchg
xchg
shlb
ror
xchg
xchg
lods
mov
lahf
fsts
mov
and
mov
mov
or
lea
lea
xchg
sbb
fwait
sbb
xchg
mov
xorb
lahf
mov
clc
sahf
jge
test
popf
test
stos
subb
frstor
cli
repz
gs
mov
dec
out
mov
mov
ss
movsl
cltd
aaa
sbb
mov
movsl
xorb
shll
lea
rcll
add
cmp
mov
mov
cltd
cmp
jecxz
xchg
mov
cs
lcall
push
mov
std
and
shll
pop
cli
cmp
pushf
mov
cmpsl
scas
int
sub
mov
lret
and
lea
lret
vmovaps
jnp
pop
iret
imul
adc
xor
test
leave
mov
in
dec
or
xchg
jge
push
cmp
dec
stos
rorb
les
inc
sbb
aad
mov
sbb
lcall
nop
add
push
ret
mov
fldt
xor
fisttpl
ret
rorl
out
mov
repnz
xchg
xchg
mov
cmpsl
xchg
test
fwait
sub
mov
mov
adcl
mov
loope
mov
mov
push
pop
xchg
fidivl
orb
and
stos
and
je
movsb
lahf
or
mov
or
xchg
popl
lds
int
lea
mov
xchg
cs
lahf
jmp
xchg
scas
ret
xor
cmp
push
scas
cmp
xchg
ret
mov
add
xchg
test
jmp
mov
lea
sub
repnz
iret
ret
and
scas
ret
xor
lahf
test
mov
or
lods
jecxz
inc
mov
mov
test
addl
jnp
lret
mov
sbbl
fistpll
fnstsw
cmpsl
lahf
pop
lods
mov
faddp
push
bound
mov
sub
push
movsl
sbb
test
movsl
push
daa
mov
lcall
sbb
mov
mov
fiaddl
mov
lret
push
dec
xchg
bound
push
mov
and
or
es
nop
aas
cmpsl
xchg
xchg
sub
mov
sub
mov
popa
push
mov
cli
jecxz
insl
inc
loope,pt
and
mov
sbb
out
movsb
and
mov
leave
pusha
mov
xchg
addr16
ds
loop
mov
and
loopne
fistps
sbb
mov
jg
jge
cmp
xor
mov
loope
jg
insb
or
imul
in
jmp
rol
lret
cmp
and
mov
es
mov
mov
mov
fidivl
js
stc
ds
and
dec
lods
dec
xor
push
mov
xor
cmpsl
pop
sub
loopne
gs
mov
cmpsl
jecxz
sbb
pop
jne
mov
mov
mov
xchg
call
mov
dec
movsb
pop
es
jmp
sbb
movsb
push
push
and
mov
sub
pop
push
lea
outsl
xor
jl
imul
pop
mov
not
stos
hlt
inc
push
adc
cmpl
lods
push
addr16
addr16
xchg
imul
mov
pop
dec
stos
inc
ja
dec
mov
mov
push
push
stos
jg
arpl
mov
mov
xorb
jbe
pop
dec
inc
jae
cltd
mov
mov
insb
stos
imul
lea
dec
js
dec
stos
dec
jns
dec
mov
mov
push
fs
stos
popa
push
gs
xorl
jo
je
inc
jno
jne
sbb
cs
daa
pop
cmp
jmp
out
stos
call
cmp
push
stos
pop
aaa
sbb
lret
sti
stos
enter
and
es
stos
aas
das
and
jecxz
out
stos
loopne
in
add
push
ss
pop
lsl
ret
repz
imull
sub
cmp
stos
sub
cmp
in
stos
ljmp
or
or
sbb
int
lret
into
and
and
stos
and
and
aad
loop
out
add
add
stos
add
add
cmc
jmp
dec
pop
cli
stos
xchg
dec
or
cld
imul
outsb
stos
fisubs
js
mov
cmp
rcrb
addl
nop
lea
out
sub
scas
or
dec
lcall
inc
mov
lods
scas
lret
je
push
mov
xchg
adc
inc
push
mov
pop
jns
mov
popl
ja
pop
cltd
test
scas
pop
jecxz
mov
aaa
test
mov
mov
stos
scas
inc
enter
jl
mov
movsl
fimull
orl
xorl
movsb
imul
fisubl
cltd
nop
and
lea
cmpsl
dec
out
movsl
pop
stos
xor
cmp
mov
movsl
xchg
bound
fwait
std
sub
mov
popl
movsl
mov
push
inc
cmp
inc
out
cs
pusha
xlat
scas
xlat
pop
jle
rcll
pop
inc
cmp
stos
xchg
lahf
xor
push
cmp
cmpsl
out
and
andl
push
in
jecxz
mov
lret
scas
inc
jmp
jecxz
icebp
cmpl
cli
pusha
cmp
popf
mov
orl
out
xchg
ljmp
cli
pop
mov
xchg
pop
cli
bound
cs
scas
mov
cli
enter
and
dec
repz
mov
jecxz
int3
repz
lret
mov
roll
mov
mov
mov
icebp
dec
sahf
push
xchg
jge
xor
mov
bound
ja
bound
std
xchg
mov
adcl
lea
int
es
mov
mov
in
inc
movsl
bound
jl
jnp
test
ss
and
cmp
shlb
sar
pop
sbbl
inc
sbb
jmp
mov
in
in
in
cmpsl
or
popf
fs
jmp
cmpsl
pop
repz
movsb
movsb
stos
mov
adc
mov
mov
push
inc
sub
fwait
mov
cmpsl
lock
push
add
movsb
cmpsl
sbb
mov
xor
jmp
jmp
jmp
pop
cmpsl
mov
cmpsl
fwait
push
sub
sbb
jns
xchg
cmpsb
stos
mov
movsl
jmp
rorb
mov
and
and
and
fcoms
stos
ja
adc
repz
xor
mov
ljmp
mov
stc
cmp
push
jecxz
xchg
cmp
mov
mov
mov
daa
mov
cld
inc
push
sub
mov
out
icebp
mov
popf
addr16
push
mov
test
out
ret
and
mov
in
xchg
bound
aam
in
lcall
es
lret
jmp
xchg
cmpsl
sarl
mov
int
mov
jns
mov
test
pop
test
mov
out
lahf
dec
aas
test
or
adc
xchg
fwait
inc
movsl
jns
repnz
int
mov
xchg
imul
jmp
push
cltd
test
mov
mov
stc
jmp
mov
and
xor
mov
mov
out
adc
fs
xchg
icebp
add
pushl
mov
movsl
call
xchg
int
movsb
mov
sbb
repz
iret
mov
test
sub
icebp
mov
repz
cmp
out
inc
jbe
mov
add
xor
and
mov
xchg
jmp
mov
ret
xchg
mov
leave
mov
mov
cmpsb
aas
mov
push
loope
inc
mov
repnz
fiaddl
subl
lods
mulb
mov
ss
dec
mov
inc
cltd
mov
push
sbb
aad
ja
mov
cmc
mov
adc
cltd
mov
test
nop
mov
andb
and
mov
test
jmp
leave
fcmovne
aam
call
scas
pop
out
out
pop
mov
cs
mov
dec
mov
xchg
xor
xor
cmp
and
mov
mov
and
test
movsl
lret
pop
xchg
or
cwtl
and
roll
and
xor
jmp
cmpsl
xor
mov
out
fidivrl
jno
cwtl
stos
push
or
inc
mov
xchg
adcl
dec
pushf
fwait
sbb
in
push
leave
push
push
mov
movsl
mov
inc
mov
test
test
ret
fcompl
jns
mov
cli
popf
pop
fistps
lret
mov
mov
and
cs
xchg
rcll
adc
lds
cmp
cmp
mov
xchg
clc
std
jbe
call
mov
icebp
jbe
cmpsl
jge
mov
sbb
jae
mov
mov
jne
mov
mov
ja
subl
mov
popf
loope
movsl
aad
addr16
mov
arpl
mov
cmp
pop
test
sbbl
mov
lahf
pushf
jbe
jmp
or
repnz
jg
cltd
sub
and
aad
aas
aas
and
sub
es
xor
movsl
cltd
arpl
and
jg
adc
stos
pushf
mov
xchg
xor
or
xchg
fwait
inc
jmp
loope
fsubrs
ja
mov
fiadds
jmp
mov
push
bound
push
test
aad
pop
cmp
sbb
movsl
mov
cmp
sub
sahf
jecxz
call
int3
or
jl
mov
cmpxchg
push
insl
es
int3
in
popa
mov
lock
call
lock
mov
xchg
cmpsb
bnd
icebp
daa
cmpsl
ja
aas
mov
mov
jb
divb
xor
fcmovbe
mov
ljmp
add
adc
les
movb
addb
int3
es
cmpsb
dec
mov
cmp
cld
push
xchg
xchg
es
sahf
enter
stc
push
jl
jp
dec
out
popa
test
fidivl
sbb
mov
adc
mov
int
stc
movsb
pop
push
cmpb
xchg
sbbl
jg
xchg
xchg
cmpsl
dec
in
fs
mov
cmpsb
sub
lods
iret
mov
loope
movsl
xchg
mov
fdivrs
lea
fstpt
into
mov
scas
cli
jbe
mov
jecxz
fisttpl
mov
push
pushf
and
mov
sti
adc
sub
mov
and
jecxz
dec
lcall
test
dec
or
mov
rolb
push
inc
pop
xchg
xor
xchg
data16
cmpb
scas
mov
jno
cmp
xor
aas
mov
gs
in
jecxz
lea
lret
lds
insb
xchg
pushf
arpl
mov
lahf
add
adc
and
in
mov
rorl
sub
out
mov
or
xchg
push
out
mov
lods
icebp
push
sub
cld
mov
test
xchg
xor
icebp
imul
mov
out
jmp
and
out
arpl
mov
xor
pop
mov
mov
lcall
cmp
mov
mov
lahf
cmp
pop
mov
xchg
orl
mov
add
adc
push
stos
jne
mov
pusha
incl
mov
repnz
in
push
repz
leave
mov
rcr
test
mov
popa
incl
pop
mov
mov
pop
in
push
or
inc
push
jp
rorb
inc
mov
cltd
xor
sub
stc
pop
inc
push
js
loope
lods
mov
mov
and
nop
inc
fwait
add
popl
mov
repnz
cmp
jns
test
and
inc
cltd
lahf
and
jns
faddl
xor
adc
jl
lods
test
fildll
icebp
xor
leave
scas
andb
cmc
mov
cmp
pushf
cmpsl
lahf
mov
mov
btc
xchg
jecxz
mov
fisubrl
xchg
cmpsl
ja
lods
adc
icebp
or
cltd
and
inc
iret
stc
outsb
lcall
mov
bound
repz
adc
xchg
mov
pop
inc
cltd
xchg
mov
rcr
or
ds
ret
cs
insl
out
mov
mov
cltd
sub
sub
mov
jmp
test
dec
repz
jmp
jmp
add
mov
adcl
mov
mov
inc
jmp
fwait
cli
mov
push
test
sub
mov
push
stc
mov
test
dec
xor
iret
mov
les
mov
sti
and
fs
or
bound
es
out
dec
mov
or
mov
mov
xor
mov
ret
mov
out
lods
cmp
xchg
cltd
call
add
cmp
jb
pop
shlb
pushw
mov
inc
mov
aas
push
lea
arpl
test
test
mov
push
or
test
lea
mov
jbe
mov
mov
subl
mov
push
push
leave
push
cmc
or
add
hlt
mov
icebp
mov
fldl
nop
mov
cmpsl
cmp
stos
movsl
mov
jg
xchg
lea
iret
xchg
mov
popf
fidivs
dec
or
sub
lock
stc
mov
mov
pop
scas
ds
stos
mov
pop
lods
inc
das
loop
add
jb
xchg
and
mov
mov
repnz
mov
testb
iret
xchg
inc
xor
mov
mov
xchg
stos
inc
mov
jp
mov
test
lahf
call
stos
adc
jmp
stc
clc
mov
lahf
mov
fwait
out
js
in
and
aas
sub
scas
into
mov
cli
jle
pop
mov
push
lcall
in
out
and
mov
out
sub
push
mov
test
mov
xor
push
push
aas
in
lahf
jle
negl
and
push
mov
mov
cmp
test
popf
lock
cld
mov
mov
cmp
inc
cld
xorl
mov
mov
fs
jnp
aad
and
lods
jo
insl
jae
mov
mov
dec
jb
or
repnz
cmp
sbb
iret
test
loope,pn
cmpsl
push
mov
xchg
mov
or
sbb
xor
mov
mov
fbstp
and
mov
mov
jmp
andb
mov
mov
mov
popf
pop
ss
jno
not
jmp
cli
sti
mov
push
ja
and
and
jb
scas
cmpsl
fnstenv
jb
dec
cmpsl
out
lods
and
test
or
xchg
adc
fwait
cmpsb
xchg
jmp
lds
add
test
push
jbe
test
add
cltd
mov
jle
mov
lds
sub
lds
push
int3
xchg
psubq
sub
fsubl
rcl
into
mov
js
cmpsl
xor
je
push
lods
js
mov
icebp
mov
mov
mov
mov
sub
xor
xor
lahf
mov
add
mov
scas
lea
mov
mov
dec
dec
xor
mov
subl
popf
les
sbb
jmp
in
scas
push
icebp
fimuls
mov
mov
inc
adc
aad
sub
adc
mov
cmpsl
ja
jo
js
push
mov
xchg
sahf
sub
sub
mov
add
inc
fpatan
cmpsl
rcrb
cmpsl
stos
mov
mov
lret
jecxz
fwait
test
sbb
jl
lcall
std
leave
sub
mov
test
cmp
mov
add
daa
out
or
cs
out
mov
xorb
and
leave
xchg
mov
fbld
and
mov
mov
and
push
mov
fisubl
mov
and
stc
out
and
mov
mov
icebp
push
cmpsl
test
push
mov
pop
mov
fsubl
mov
and
mov
in
jmp
loopne
js
daa
cmp
cli
mov
out
out
and
stos
mov
xor
std
shll
in
loope
mov
mov
iret
mov
mov
mov
scas
in
pushl
sub
mov
jmp
sub
and
mov
fptan
cwtl
pop
lods
mov
cmpsl
mov
cltd
jmp
mov
mov
push
xbegin
movsl
lea
lcall
adc
orl
inc
xchg
cmp
push
mov
pusha
cli
sub
ja
add
loop
cld
cli
mov
lock
cmp
stos
jmp
jnp
or
lea
fsubl
lea
aad
inc
ffreep
cmpsb
movsb
and
repz
js
mov
mov
fnstsw
fs
mov
cmp
mov
xor
mov
call
das
xchg
mov
dec
mov
push
push
loopne
repnz
lahf
aam
imul
cwtl
mov
data16
jmp
sti
sub
or
jmp
add
shll
mov
mov
sbb
mov
loope
jmp
push
divl
mov
xchg
jmp
and
add
cmp
loope
mov
int
cmp
lea
iret
jne
cwtl
in
mov
mov
cmp
mov
sub
mov
mov
ljmp
inc
mov
xchg
mov
movsb
arpl
jb
jbe,pn
jl
mov
insl
mov
mov
and
cmpsl
mov
mov
icebp
jecxz
out
test
sarb
fwait
ljmp
ret
loopne
mov
mov
jle
mov
negl
dec
and
sbb
outsb
mov
movsb
adc
sbb
movsl
mov
into
negb
mov
mov
xchg
mov
cmp
ret
sub
lar
clc
icebp
repz
xchg
lods
mov
cmp
dec
aam
ljmp
mov
mov
pop
sub
lods
dec
xchg
lret
mov
mov
ds
mov
test
mov
mov
mov
stos
push
test
xorl
xchg
nop
leave
cmpsl
stc
sahf
loope
notl
mov
mov
mov
arpl
mov
repnz
jmp
stos
push
and
mov
loope
andl
mov
ds
lahf
mov
mov
jne
in
jmp
lret
mov
mov
cmp
jp
mov
test
dec
lock
inc
jns
mov
adc
clc
push
call
outsb
jg
loopne
xchg
jb
lock
xchg
dec
jne
test
ja
jnp
push
out
popa
movsb
jno
mov
push
push
xor
repz
jg
out
repz
stos
pop
out
repnz
cmp
push
mov
mov
mov
iret
int
or
mov
add
add
sbb
mov
loope
dec
cmpsb
inc
jne
cmp
movsl
call
inc
sbb
inc
test
mov
mov
imul
pop
mov
fistpll
mov
sti
rcll
xor
jbe
cmp
mov
mov
xor
call
xchg
mov
mov
adc
lahf
mov
stc
daa
dec
add
adc
push
ja
sti
cmp
mov
cmp
es
xchg
out
cltd
add
popf
movsb
popf
test
or
movsb
mov
ss
mov
cmovg
mov
jg
sub
xor
mov
dec
icebp
std
fisubrs
mov
mov
cs
mov
movsl
test
pop
fidivrs
mov
or
mov
dec
jae
mov
push
imul
std
lods
outsb
inc
sbb
mov
int
mov
rolb
fadds
cmpl
nop
mov
and
mov
mov
mov
adc
and
jo
movsl
fucomp
sbb
popf
push
jae
sub
sbb
les
ficomps
and
jge
push
out
jnp
xor
cmp
lock
mov
enter
dec
cmpsb
mov
repz
jno
dec
dec
mov
ret
xor
aas
push
sbb
outsl
and
jp
int3
add
les
je
sahf
sub
gs
bound
pusha
mov
sahf
mov
aam
cli
ss
push
dec
push
cmp
sub
jmp
sti
out
lea
mov
push
sbb
xor
xchg
insl
sahf
mov
js
mov
cmp
rorb
sub
sbb
fnstcw
mov
dec
hlt
add
fwait
add
dec
cmp
int
and
fcomps
loope
lock
movsb
jnp
int
inc
lret
add
cs
loope
mov
jnp,pt
loopne
jmp
sbb
push
punpckhbw
cmp
iret
jae
bound
test
mov
fnstenv
test
sbb
test
or
leave
or
nop
int3
mov
test
add
sbb
cmpsl
in
out
cs
lcall
mov
cwtl
mov
xchg
test
lods
sub
movsl
mov
lahf
pop
xchg
cmc
outsb
movsl
mov
pop
jmp
daa
push
push
cmpsl
dec
sub
stos
cli
sub
cmpsl
mov
mov
imul
arpl
mov
push
adc
call
in
sub
fdivrl
stos
dec
jae
sub
loop
aam
ljmp
jns
test
in
jle
mov
mov
and
jmp
mov
xchg
loop
mov
xchg
add
ret
ds
mov
fldcw
mov
fdivl
jmp
push
xor
mov
mov
add
push
dec
inc
into
mov
cmpsl
inc
rorb
inc
pop
enter
out
sti
out
out
cltd
xchg
push
lahf
andb
jmp
aaa
sti
pop
or
stc
imul
mov
cld
jle
out
mov
dec
imul
xchg
ljmp
int
inc
and
shll
fs
and
in
test
lea
sti
pop
pop
out
popf
or
shrl
bound
rolb
jmp
mov
bound
xchg
pop
and
cltd
cmpsl
outsb
mov
and
test
lods
dec
cmp
dec
test
and
xchg
mov
mov
push
mov
fsubrs
sbb
inc
out
outsl
and
mov
pop
xor
mov
in
movsl
je
pusha
sub
inc
shlb
sub
or
sub
cmp
xchg
shlb
pop
add
cmp
repnz
mov
mov
mov
dec
cmpsl
lahf
fwait
cmp
int
jb
mov
push
stos
jecxz
popf
testl
imul
inc
inc
cmpsl
mov
sub
movsl
xor
sbb
sub
push
stos
dec
xchg
ljmp
cltd
test
sub
push
call
addr16
cmpsl
or
or
cmpsb
arpl
xchg
gs
movsl
in
in
cltd
and
mov
mov
movsl
push
mov
push
xchg
sub
imul
push
mov
and
mov
test
mov
mov
es
inc
scas
scas
adcl
fisubrl
mov
aaa
mov
mov
sub
mov
inc
xchg
or
sub
cltd
cmpsb
mov
scas
cmpsb
sub
out
out
cmpsb
mov
jbe
mov
mov
mov
mov
inc
scas
mov
mov
mov
cmpsl
or
shll
lods
sub
mov
mov
and
xchg
sub
jl
bound
mov
mov
mov
cltd
xchg
les
mov
mov
xor
scas
sub
je
or
test
xorl
notl
xchg
add
cmpsl
movsl
je
mov
mov
frstor
iret
lea
mov
mov
push
popf
out
xchg
int3
sub
cs
mov
orl
testl
cmpsb
ret
mov
sbb
pop
mov
xchg
xchg
outsb
xchg
cmp
xchg
mov
and
jbe
lods
out
mov
sbb
mov
fwait
sarl
iret
xchg
ja
mov
cmpsb
mov
mov
lods
clc
mov
mov
mov
arpl
or
lea
cmpsb
mov
mov
sbbl
xchg
mov
test
cmpsl
jns
xchg
lahf
mov
mov
movsb
popf
mov
cmpl
stos
xchg
cmp
xchg
lds
sbb
cmpsl
in
lret
mov
jbe
mov
mov
sub
mov
aas
in
mov
cltd
ljmp
fisttps
rorb
or
cmpsl
and
and
sub
aaa
mov
mov
jns
xchg
mov
xorl
int3
sub
bound
adcb
mov
leave
mov
or
mov
mov
mov
mov
mov
scas
xchg
xor
loope
cmpsb
xchg
adc
movsl
mov
mov
test
mov
rorb
addl
lahf
xor
mov
ljmp
mov
test
jecxz
ljmp
adc
lock
mov
bound
andl
sub
jl
cmp
add
lcall
inc
cmpsb
pop
fnstenv
lcall
frstor
mov
andl
xor
lods
lahf
add
cmp
je
mov
xor
bound
scas
mov
in
xorl
stos
adc
jbe
cmpsb
and
push
arpl
mov
cmpsb
xchg
cmpsb
sbb
enter
mov
cmpsb
rorl
enter
ljmp
mov
xchg
mov
int3
sub
cs
stos
xchg
loop
cltd
loop
lahf
mov
in
xchg
ja
lcall
mov
mov
fsts
lcall
mov
cmpsb
xor
mov
leave
mov
fbstp
pushf
cli
popf
jmp
xchg
cmp
leave
mov
sbb
and
xchg
mov
mov
or
cmpsl
or
arpl
xchg
ds
jg
stos
bound
cmpsb
sbb
popa
fidivs
sub
cmp
mov
stos
mov
jle
fwait
rolb
cltd
mov
mov
xchg
mov
lods
ja
lcall
sbb
mov
mov
movsl
loope
mov
mov
mov
mov
mov
test
xchg
mov
loope
out
popf
or
andl
xchg
mov
test
popf
dec
adc
mov
mov
mov
xchg
mov
xchg
mov
mov
movsl
mov
ficoml
cmc
xchg
mov
outsl
push
outsb
adcl
test
xchg
mov
mov
push
sbbl
mov
lock
ficompl
loope
cmpsb
xchg
mov
mov
mov
lahf
arpl
push
cli
mov
adc
mov
les
mov
iret
popf
stc
jno
xor
sti
mov
mov
enter
jle
mov
mov
xchg
sub
jl
jecxz
in
andl
scas
sub
mov
scas
dec
adc
out
aas
xchg
sub
pop
int
outsb
cmpsb
sti
lahf
mov
cmpl
mov
lahf
cmpsb
adc
mov
jns,pn
fiaddl
jg
ret
out
jg
sub
jl
and
lock
mov
ja
mov
jp
cs
cmp
mov
in
dec
cmp
xor
loope
cmpsb
xchg
adc
lahf
fiaddl
addl
mov
cmpsb
repnz
jnp
out
pushl
xchg
test
mov
iret
mov
scas
out
mov
mov
mov
cmpsl
or
jg
xchg
iret
fwait
ret
subb
je
mov
mov
test
jo
out
ds
sub
movl
xor
loope
cmpsb
inc
sub
lret
mov
or
stos
mov
add
mov
cmpsl
cmp
mov
inc
mov
push
xchg
xchg
or
mov
fwait
in
mov
mov
dec
jbe
xchg
mov
test
xor
mov
nop
mov
mov
arpl
enter
nop
mov
mov
lods
adc
cmpsl
mov
pop
jns
and
mov
jecxz
andl
push
push
inc
ret
lret
aas
fwait
xchg
lods
mov
cs
or
xchg
xor
jne
subb
cmp
mov
xchg
lods
push
out
popa
mov
movsb
mov
mov
sbb
or
fs
adcl
fwait
mov
cltd
push
sbbl
out
es
add
sbb
add
mov
loope
and
and
bound
dec
bound
mov
inc
mov
jmp
mov
cltd
xchg
adc
lcall
adc
mov
mov
sub
mov
mov
xor
xchg
sub
xchg
mov
loope
ret
movsl
std
xchg
jns
dec
leave
mov
subl
lcall
mov
mov
mov
pop
or
dec
movsb
mov
mov
mov
pop
mov
popl
jbe
test
pop
cmp
inc
andb
xchg
sarl
lret
mov
mov
mov
bound
mov
lahf
fs
dec
out
je
or
cmp
aaa
mov
mov
mov
dec
mov
es
mov
orl
aas
cmpsl
fwait
je
mov
aam
cli
sti
mov
jl
ficoml
mov
test
out
jle
mov
mov
jl
je
dec
bound
jge
cltd
lea
jns
loope
test
fistps
xchg
mov
movsb
jmp
lods
fs
cld
jno
mov
jecxz
cld
lods
mov
test
mov
andl
lea
icebp
test
dec
mov
leave
jno
out
popf
lahf
mov
cmp
xchg
jne
mov
cs
mov
test
scas
xchg
mov
cmpsl
clc
xor
adc
test
mov
mov
jb
mov
cmpsl
or
jns
test
mov
test
jne
dec
out
lahf
pushf
fwait
inc
mov
scas
mov
xchg
cltd
push
scas
es
jae,pn
cmpl
mov
push
mov
cmpsl
cltd
js
push
xor
fidivrs
cltd
jge
xchg
lahf
cltd
popf
rcrb
test
popf
scas
pop
mov
and
lret
sti
fnstsw
out
mov
xchg
shlb
mov
sahf
ja
jb
mov
subl
dec
mov
into
mov
popf
loope
pop
cltd
jmp
sbbl
fisubs
jns
mov
mov
aas
ds
cmpsb
mov
popf
inc
mov
repz
mov
or
jp
es
cld
stos
and
cltd
or
fs
fwait
int
fs
xchg
lea
xor
mov
mov
cltd
mov
mov
popf
fs
mov
iret
bound
jmp
and
test
mov
cmpsb
xchg
mov
sub
mov
data16
movsl
ficoml
jbe
test
sbb
loope
and
cltd
mov
mov
jns
bound
lea
cmp
cmp
adcl
cltd
test
mov
mov
mov
cmpsl
mov
scas
lea
xchg
cmp
jbe
fwait
mov
mov
je
xor
es
mov
andb
xchg
push
ficompl
ds
out
mov
xchg
and
adc
and
repnz
sub
and
cmp
and
mov
es
data16
mov
es
mov
and
mov
adc
cmpsl
sub
and
gs
cli
cmp
popf
cld
mov
shll
daa
pusha
test
mov
addl
dec
es
sbb
jb
lcall
jb
lcall
movsl
and
movsl
mov
movsl
mov
movsl
xor
movsl
mov
movsl
or
movsl
mov
movsl
add
movsl
push
out
movsl
fwait
out
movsl
pop
out
movsl
xchg
out
movsl
adc
movsl
lods
out
movsl
sub
mov
cmpsb
cmp
mov
cmp
ljmp
test
mov
add
iret
mov
mov
jns
cmp
xchg
cltd
jne
mov
cmp
stos
or
cmp
loopne
mov
sti
pop
cmpsl
mov
stos
mov
mov
xchg
icebp
frstor
xchg
movsl
divl
cmpsl
mov
mov
mov
push
in
mov
mov
test
mov
bound
xchg
int
addr16
mov
push
or
mov
lcall
cmp
repnz
out
xor
clc
aas
bound
pop
xor
mov
adcb
cwtl
movsl
out
pop
stos
and
jmp
mov
mov
or
test
or
call
les
loopw
loopne
sub
popf
data16
cmpsb
pop
leave
out
push
mov
out
stos
clc
cltd
cmp
xchg
mov
jo
pusha
es
cmp
sti
xchg
add
test
mov
mov
cli
lds
popa
cmpsl
leave
mov
adc
pop
adc
test
jo
adc
mov
mov
xor
lds
mov
xchg
mov
mov
mov
jns
and
mov
jbe
mov
or
es
mov
jmp
mov
lds
pop
cli
xchg
test
lock
lcall
fwait
jle
test
jns
loope
mov
stos
cmp
mov
xchg
or
mov
xchg
sahf
out
mov
xchg
jo
loope
lea
xchg
loopne
stos
bound
mov
and
mov
push
sub
lret
jmp
js
mov
xchg
lahf
push
test
xchg
xchg
mov
jbe
movsl
and
mov
mov
jae
stos
bound
iret
mov
xchg
mov
mov
xchg
push
sub
add
lahf
and
lea
mov
xchg
mov
xchg
dec
add
mov
xchg
test
jbe
testl
xchg
pop
mov
ret
mov
fs
test
out
movsl
out
or
cmpl
mov
mov
jmp
add
add
mov
cmpsl
cmp
xor
fldl
iret
mov
mov
adc
iret
mov
adc
stos
push
mov
xorl
jmp
inc
mov
add
shl
or
jecxz
xchg
dec
cmpsl
cmpsl
push
adc
push
fwait
and
lea
inc
pop
mov
scas
not
mov
jo
ljmp
loope
mov
lea
call
mov
jbe
test
mov
es
push
mov
repnz
ds
and
dec
test
cmpsl
dec
movsl
fs
cmp
mov
mov
dec
mov
pop
mov
test
push
lds
mov
mov
dec
sub
xchg
jne
pusha
mov
icebp
sub
adc
cmpsl
xchg
pop
cmpsl
mov
mov
scas
xor
cltd
xchg
mov
lcall
cmpsl
mov
mov
movsl
mov
fisubrl
and
cmc
xchg
loop
mov
stos
lcall
mov
mov
mov
sbb
and
dec
mov
xchg
test
pop
orl
lods
mov
subb
mov
popf
add
mov
cmp
mov
jns
and
bound
mov
bound
bound
bound
or
aad
lea
mov
stos
cmp
mov
mov
cs
mov
pusha
cli
test
jne
mov
and
or
in
lcall
mov
mov
ficompl
mov
cmp
pop
out
movsl
pop
out
aas
jle
aad
lods
scas
push
xchg
out
outsl
out
sub
mov
dec
jb
lcall
jb
lcall
jb
lcall
jb
fidivl
dec
lcall
out
test
inc
inc
out
push
out
fsub
mov
and
shll
mov
imul
and
lea
mov
pusha
leave
and
cmp
mov
es
aas
mov
lock
mov
dec
rcrl
roll
mov
pop
fisttpl
aam
pop
push
mov
mov
mov
pop
out
pop
bound
jnp
pop
clc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
cmpsl
pushf
stos
cmc
jae
test
or
inc
push
inc
jecxz
inc
mov
outsb
stos
mov
mov
mov
pop
lret
mov
xor
sbb
add
lods
stos
adc
sbb
int
xor
sbb
xchg
cmpsl
dec
adc
xchg
jge
mov
mov
mov
pavgw
dec
pushf
fwait
dec
movl
jmp
int3
inc
lea
jb
and
jb
fiaddl
cmp
movsl
clc
out
movsl
mov
movsl
jb
movsl
pxor
out
movsl
inc
out
movsl
add
movsl
ret
lahf
add
sbb
xchg
mov
push
lea
fisttpll
xor
xor
cltd
mov
cltd
cmp
shll
jno
leave
iret
stos
lcall
cmpsl
mov
ds
std
stos
es
xchg
xchg
inc
xchg
xchg
popf
bound
and
xchg
jo
bound
xchg
test
jl
mov
movsb
mov
movsl
jbe
test
int3
loope
push
mov
mov
cmpl
or
or
stos
cltd
mov
loope
mov
cmp
test
punpckldq
jge
mov
push
mov
iret
xchg
jecxz
xchg
cmc
popf
fs
adcl
mov
lcall
sarb
hlt
mov
fistps
xchg
in
and
adc
or
test
bound
xchg
xchg
jo
loope
mov
dec
xchg
add
or
scas
push
xchg
cltd
std
push
ja
pusha
mov
cmc
scas
js
bound
out
pushf
mov
or
stos
loop
dec
mov
jno
xchg
mov
cmp
sarb
cmpsl
fnsave
test
and
stos
repnz
stos
lret
dec
mov
mov
in
mov
mov
xchg
jge
lea
popf
mov
fwait
mov
leave
xchg
mov
cmp
adc
out
icebp
adc
cmpsl
jmp
xor
push
mov
jp,pn
xchg
jmp
jbe
jecxz
int
movsb
lods
mov
xchg
xor
lea
gs
jg
xchg
mov
lret
or
fimull
insl
xchg
rcr
insl
movsl
sub
lahf
add
push
mov
mov
stos
es
add
mov
lods
inc
scas
sbb
cmpsl
jnp
ret
xchg
data16
mov
shll
and
cltd
int
fs
xchg
xchg
fs
lahf
lea
push
sub
mov
insb
mov
cmpsl
dec
movsb
cmp
mov
int
bound
movsb
ret
cmpsl
lock
jns
bound
int
movsb
popf
or
sahf
pop
mov
std
stos
and
cltd
scas
xchg
lods
iret
push
mov
out
mov
popw
stos
cmp
bound
stos
leave
mov
rorb
test
bound
bound
cltd
int
movsb
push
xchg
dec
cmpsl
lret
xchg
test
mov
jns
and
cli
call
sbb
cmpsl
adcl
mov
pop
test
loop
xchg
xchg
imul
mov
jae
mov
jmp
iret
in
gs
push
lahf
lahf
dec
mov
ret
cmpsl
or
xchg
xchg
movsl
or
repnz
scas
iret
iret
lcall
mov
mov
iret
xchg
jne
test
inc
mov
testl
mov
jle
leave
lcall
test
movsl
pop
out
aas
jle
fistpl
es
mov
cmp
inc
out
pop
cltd
mov
cmp
mov
cmp
push
xchg
bound
in
stos
cltd
mov
pop
lret
cmpsl
sbb
or
xchg
add
jecxz
lcall
mov
mov
mov
test
mov
cmp
pushf
push
jmp
dec
loope
mov
fstp
jge,pn
xchg
mov
xchg
popf
shrb
test
leave
inc
cltd
test
mov
push
mov
ret
xchg
mov
bound
movl
pop
jns
and
cmp
pop
out
xchg
xchg
and
mov
mov
or
movsl
bound
loopne
lea
mov
sbb
bound
xchg
test
add
cmpsl
popf
mov
pop
stos
into
int
bound
int
bound
int
bound
int
bound
int
bound
cli
mov
test
and
mov
stos
cltd
dec
xchg
bound
cs
mov
jg
movsb
stos
enter
mov
mov
and
sbb
cltd
mov
test
push
push
mov
rol
inc
loope
mov
mov
cli
fnsave
fwait
std
test
inc
fwait
cltd
pushf
scas
ret
cmp
cmpsl
enter
int
mov
enter
leave
mov
int
movsb
lea
movl
lahf
push
popf
lds
cmp
xchg
std
push
js
bound
lods
push
cmpsb
mov
mov
fs
mov
cmp
data16
out
lret
mov
adc
mov
fiaddl
pop
movsb
sbb
cli
mov
subb
mov
bound
lods
ficompl
mov
mov
pusha
lahf
and
out
stos
lcall
mov
popl
mov
push
xchg
and
cs
std
push
test
cwtl
addl
es
mov
pushf
cli
repnz
dec
mov
xchg
cmp
mov
mov
jnp
stos
cmp
dec
bound
movsb
push
andl
adc
xchg
fs
scas
xchg
lods
iret
push
daa
out
or
pusha
cmp
sub
mov
jmp
out
adc
mov
lahf
xorl
inc
mov
pop
add
sbb
jmp
popl
fwait
mov
mov
pop
xchg
movl
std
fwait
movsb
cltd
pop
cmp
cmp
test
mov
pusha
jbe
lea
fwait
out
in
mov
lea
mov
test
mov
xchg
mov
pop
stos
mov
test
ds
std
jmp
mov
xor
movsb
movsl
pop
jns
bound
ja
mov
xchg
enter
decl
or
stos
loope
test
xchg
fdivrl
push
xchg
adc
shll
call
xchg
mov
mov
out
popf
push
mov
adc
bound
inc
cmp
add
fwait
lret
test
mov
lea
mov
stos
push
mov
cmpsb
ret
lahf
pushf
mov
xchg
adc
jecxz
adc
cltd
pop
int
fs
lcall
scas
iret
imul
loop
pushf
scas
jne
mov
inc
repnz
dec
mov
ljmp
xchg
fwait
cltd
jmp
out
mov
stos
mov
bound
loope
jge,pn
movsb
add
mov
and
lret
ret
mov
mov
lea
mov
orl
pushf
sahf
dec
lods
pushf
cltd
dec
pushf
bound
iret
xchg
addr16
xchg
scas
mov
inc
movsb
cmp
fwait
mov
mov
iret
mov
jmp
mov
movsl
scas
movsl
dec
inc
sbb
mov
inc
stos
dec
dec
dec
mov
test
fldl
shrl
inc
movsl
xchg
imull
stos
mov
fxch
dec
xchg
loopne
lea
xchg
cmpsl
clc
test
mov
lea
xchg
add
jns
stos
bound
mov
mov
lods
cmpsl
jns
mov
mov
xchg
adc
arpl
add
scas
pop
mov
xor
test
mov
stos
cmp
shll
cmp
mov
leave
js
loopne
xchg
andl
xchg
mov
pop
iret
lahf
je
sbb
sbb
cmpsl
mov
mov
xchg
subb
jge
fwait
cs
jge
xchg
cltd
push
scas
pushf
xchg
inc
test
lods
mov
test
cmp
std
sub
lea
mov
mov
sbbl
lods
pushf
mov
jp
lcall
mov
mov
enter
adc
scas
or
cli
mov
mov
xchg
mov
xchg
fstl
hlt
pop
movsl
pushf
add
jbe
xchg
sbb
mov
jecxz
xchg
mov
mov
sub
int
mov
mov
mov
pop
jbe
mov
pushf
mov
xchg
xchg
mov
jecxz
xchg
mov
lods
xchg
orl
jge
mov
pushf
mov
leave
dec
lea
adc
xchg
test
test
jmp
mov
fimuls
shl
mov
mov
add
cmp
lods
andl
pushf
cld
adc
xchg
cs
jge
xchg
test
lods
cs
jge
test
iret
xchg
fs
mov
lcall
mov
data16
or
mov
mov
lcall
orb
addl
dec
mov
xchg
psraw
les
mov
sahf
add
cltd
clc
stos
bound
xchg
ret
bound
mov
leave
jno
xchg
mov
inc
rorb
movsl
repnz
mov
arpl
in
cli
repnz
inc
xchg
lea
pop
test
mov
mov
mov
dec
sbb
mov
mov
and
pop
stos
cmp
mov
xchg
cmpsl
jbe
cltd
cltd
lods
adc
add
imul
sbb
add
jo
es
les
lcall
jbe
mov
and
xchg
inc
xchg
mov
add
subl
xchg
out
bound
mov
iret
popf
fs
mov
jbe
jle
or
bound
mov
test
cmpsl
test
scas
jo
bound
int
cmpsb
test
mov
nop
mov
jmp
lds
cmpl
and
test
lds
in
mov
xchg
dec
in
lods
arpl
nop
das
push
xchg
lea
ret
pusha
dec
movsb
jns
jecxz
sub
adc
mov
xchg
add
mov
inc
xor
stos
out
adc
sub
inc
xchg
ror
adc
es
inc
add
jmp
xchg
cltd
popf
adc
cltd
xchg
adc
lcall
mov
push
mov
test
cmpsl
pop
mov
mov
xchg
xchg
mov
test
xchg
sub
mov
les
ljmp
popa
in
scas
movb
xchg
xchg
adc
jbe
mov
lea
and
cmpsl
jmp
dec
cmpsl
add
jp
add
xchg
xor
test
dec
mov
adc
mov
in
mov
add
cmp
mov
sahf
andl
inc
rcrl
dec
test
es
sbb
mov
test
fwait
int
movsb
jmp
scas
je
fldcw
lret
mov
movsb
mov
push
sub
lret
jmp
js
bound
test
sbb
test
push
pop
mov
lahf
out
jmp
and
test
inc
lahf
mov
test
ret
aas
fwait
sub
jnp
cmpsl
lea
inc
jmp
bound
lods
loope
add
mov
pusha
mov
mov
cld
cmpsl
cltd
iret
stos
int
cmpsb
test
ds
movsb
and
mov
xchg
movsl
sbb
test
pop
xchg
ds
mov
xchg
sahf
mov
loope
mov
mov
insb
stos
mov
fiaddl
cltd
pusha
popf
xchg
push
mov
andb
push
stos
mov
xorb
mov
cltd
test
lahf
pushf
lods
dec
xchg
cltd
scas
dec
mov
jnp
mov
arpl
cmpsl
xchg
andl
inc
lahf
leave
push
je
mov
dec
test
mov
cmc
stos
lcall
inc
xor
add
mov
test
int
push
cmp
add
mov
fnstsw
jl
sbb
das
repz
cs
stos
cmp
test
stos
jg
sub
adc
mov
daa
jl
pop
dec
cmp
xchg
pop
adc
adc
enter
xor
inc
push
int
pop
mov
bound
inc
xchg
pop
inc
loop
or
stos
add
cmp
stos
mov
lods
dec
push
sub
xor
clc
ret
mov
pop
stos
fsubrs
add
gs
xor
pushf
xchg
jnp
inc
fmul
stos
and
cmp
jl
das
inc
aaa
adc
leave
lret
stos
cmp
mov
fwait
movsb
arpl
add
mov
stos
pushf
push
push
dec
jnp
sub
jo
adc
loopne
pop
stos
daa
scas
mov
lret
shrl
cwtl
jle
inc
adc
shrl
xor
mov
xchg
dec
addr16
add
out
xchg
cmp
cmp
stos
pusha
pop
fucomip
or
cli
stos
sub
orb
rclb
mov
mov
dec
push
stos
dec
adc
stos
mov
sbb
cld
call
stos
mov
lock
mov
fstpt
and
mov
sti
push
mov
js
adc
cmp
mov
and
stos
adc
sbb
lahf
mov
or
cmp
aad
and
mov
push
or
add
ds
xchg
jmp
test
mov
xchg
iret
scas
jmp
and
mov
xor
or
xchg
es
mov
pop
out
jle
fisttpl
aaa
mov
jg
sti
mov
xor
xor
mov
lcall
stos
jbe
and
jmp
lods
sbb
adc
mov
mov
push
xchg
sbb
sbb
xchg
das
mov
lcall
mov
xchg
mov
es
movsb
and
mov
xchg
leave
sbb
sbb
mov
or
cmp
mov
nop
sbb
mov
mov
mov
scas
sahf
sub
lcall
mov
cmp
mov
sub
sub
mov
lahf
and
lea
xor
mov
daa
mov
push
lret
xchg
es
mov
add
test
es
cmp
out
cltd
jmp
out
and
test
pop
bound
fidivl
mov
mov
es
mov
adc
sub
and
leave
mov
mov
cmpl
das
aas
out
ds
cmp
loopne
inc
mov
ds
jmp
ffree
imul
leave
cmpsb
es
movsl
mov
sbb
sub
xchg
inc
cmpsb
ljmp
xor
xor
ja
mov
cwtl
mov
mov
or
sbbl
push
mov
nop
and
and
mov
mov
or
andb
mov
scas
cmpsl
sub
xor
mov
mov
mov
sub
xchg
pop
leave
sbb
lahf
mov
mov
mov
es
sbb
mov
jmp
and
and
fldenv
adc
xchg
mov
mov
frstor
pop
stos
das
mov
cltd
mov
or
xor
mov
mov
mov
xchg
and
andl
mov
xor
sub
cmpsb
cmp
lds
mov
andl
mov
pop
cwtl
out
jmp
jmp
mov
mov
xchg
es
mov
iret
cwtl
jmp
pop
xlat
lea
cmc
jmp
xchg
mov
cmpsb
cltd
icebp
and
mov
or
xchg
sbb
pop
mov
fldcw
stc
sub
adc
test
mov
mov
xor
push
lahf
xlat
jmp
or
and
fildll
adc
and
pop
insl
jl
and
sbb
push
out
mov
loop
test
mov
dec
and
push
mov
test
fsubr
imul
and
mov
add
mov
out
mov
lahf
xchg
mov
jecxz
mov
sbb
mov
jge
xor
cltd
sbb
sub
stc
inc
call
test
ja
pop
data16
sub
out
js
mov
inc
xchg
imulb
cmpsb
stos
push
add
jge
inc
sub
sbb
sub
mov
scas
push
stos
aad
jp
in
in
push
movsl
mov
xchg
xchg
lock
xchg
add
pop
ss
aas
push
scas
frstor
adcb
mov
jmp
scas
psadbw
subb
cmpsl
jmp
mov
inc
out
cmp
mov
fs
xchg
stos
jno
pop
fisttps
fmuls
mov
fisubrs
popf
stos
lds
inc
stos
nop
stc
sub
cmp
je
fwait
and
adc
stos
stos
mov
in
push
sub
xchg
jbe
and
jmp
push
fs
sti
inc
pop
bound
pushf
repnz
mov
add
lahf
mov
or
int3
mov
mov
dec
aaa
enter
xchg
add
cmp
stos
daa
adc
pop
xchg
out
std
clc
gs
ficoms
addr16
mov
sub
dec
outsb
mov
dec
bound
stos
mov
cs
vcvtdq2ps
pop
mov
call
push
adc
rorb
mov
mov
stos
jb
aas
push
stos
popa
cmpsb
fbstp
lds
test
mov
or
in
test
cwtl
xchg
shl
push
sub
mov
or
cli
ss
ja
bound
cmpsl
xor
es
jno
pop
xchg
test
popa
leave
inc
sub
cmpsb
inc
jmp
cli
stc
out
mov
out
ret
fildll
stos
dec
loopne
mov
push
cli
adc
add
ljmp
pop
cmp
fildl
lds
ja
test
in
sbb
fisubrl
scas
push
loop
imul
dec
les
pop
lea
xorl
mov
adc
and
adc
movsl
lods
aaa
or
out
inc
je
mov
sbb
ret
xor
dec
dec
stos
jecxz
jg
in
mov
jae
inc
popa
mov
fcmove
mov
mov
push
adc
fsubl
lahf
push
push
adc
into
xchg
lcall
inc
jo
adc
stos
and
xor
mov
mov
dec
mov
stos
nop
daa
mov
int3
mov
and
imul
addr16
add
js
stos
out
inc
aaa
loopne
adc
inc
dec
imul
and
stos
jmp
rcl
jno
fwait
or
imul
outsb
pop
inc
into
cmp
sub
jo
jae
imul
in
mov
stos
mov
out
subb
xchg
sub
in
mov
es
rorl
fwait
movsb
scas
mov
aam
sub
mov
mov
xlat
add
out
in
and
pop
mov
aas
test
fildll
stos
xchg
cmp
mov
mov
in
push
stos
bound
mov
push
xchg
in
stos
jae
jno
jne
pop
imull
stc
mov
xchg
adc
test
leave
cmp
in
dec
sub
mov
cmpsl
jp
imul
int3
sub
cli
push
ja
mov
pop
xchg
xchg
mov
jmp
mov
lods
push
movsl
xchg
push
stos
xor
icebp
and
mov
mov
jmp
pusha
sub
shrl
test
jecxz
negb
dec
sbb
pop
dec
adc
jmp
sub
jle
std
popf
mov
mov
stos
inc
lods
sarl
xor
pop
stc
stos
xchg
mov
push
jmp
mov
enter
lret
cmp
cmc
push
mov
mov
mov
sahf
subl
xchg
mov
dec
xchg
jbe
stos
enter
pushl
xchg
push
adc
cmp
or
lds
pushf
sub
cmp
and
loop
pop
fwait
mov
pushf
dec
inc
pop
mov
jae
xchg
lds
add
fimull
mov
test
sub
mov
mov
in
inc
je
sub
enter
cld
mov
popl
sbb
adc
data16
stos
sub
jnp
clc
sarb
jle
cmp
dec
cmp
mov
in
pop
xchg
mov
daa
fidivrs
cmp
and
pop
add
adc
push
mov
pop
stos
mov
lods
popf
test
cltd
popa
mov
fisttpll
outsl
out
jmp
mov
or
iret
jae
dec
sbb
and
cmpsb
cmp
lods
mov
icebp
stos
xchg
pop
cltd
xor
scas
jne
lret
pop
mov
mov
mov
movsl
ficoms
frstor
mov
or
mov
ja
dec
xchg
call
fstpt
iret
and
xchg
mov
mov
stos
sbb
ficoml
inc
nop
sbb
mov
adc
push
imul
push
movsl
scas
cmp
sub
test
and
jecxz
inc
cs
stos
add
push
test
test
sub
jbe
iret
mov
sbb
push
incl
xchg
inc
lea
mov
insb
mov
inc
mov
adc
sub
test
add
pop
jnp
jmp
dec
and
sbb
jmp
in
push
push
jle
xor
fwait
cld
fisubrs
inc
repnz
adc
test
out
xor
push
ds
hlt
imul
out
std
jmp
outsb
mov
add
lock
outsl
cmp
stos
push
push
sbb
in
stos
adc
xorl
jno
ds
sarb
sub
jne
imul
mov
jno
jecxz
xchg
movsl
imul
stos
jg
sbb
push
popf
insl
icebp
lea
mov
pop
jno
mov
xor
mov
jge
mov
sti
xor
jmp
stos
cmp
pop
mov
mov
jmp
sbb
xchg
dec
fdivrs
stos
add
mov
lods
jge
test
push
sarb
movsb
daa
mov
mov
jle
mulb
outsl
sbb
subb
lods
push
in
cli
sbb
stos
sub
and
aaa
mov
insb
mov
out
pop
sub
rorb
inc
mov
movsl
sub
cmpsl
and
xor
repz
adc
adc
repnz
inc
xchg
insb
scas
mov
jge
pop
cmp
aam
push
jae
and
mov
andl
clc
aas
fwait
mov
shrl
mov
cmp
sti
sahf
scas
scas
arpl
ret
dec
movsb
stos
imul
pop
push
mov
jmp
push
sti
test
mov
push
xor
push
cwtl
jg
inc
in
xchg
pop
inc
mov
sbb
push
idivl
jle
fxch
cmp
xchg
mov
lock
pop
loop
add
fwait
andb
jae
mov
mov
xor
xchg
fidivs
jl
mov
add
test
stos
popa
lcall
mov
push
rolb
and
aaa
sub
shll
jmp
insb
fmull
shl
adc
addb
mov
mov
add
cmp
add
lret
mov
mov
outsl
push
jle
or
dec
xchg
push
jg
addr16
xchg
sahf
movsb
jecxz
popf
es
fsubrl
xchg
jmp
loope
mov
xor
lods
push
sub
mov
enter
popf
ljmp
xchg
xchg
pop
xchg
imul
xchg
movsl
in
pop
mov
and
stos
cmpsl
mov
xchg
imul
scas
mov
adc
cs
adc
roll
push
or
mov
cmp
adc
int3
stos
jl
into
push
jno
mov
mov
mov
pop
into
mov
lds
jecxz
push
sbb
notl
and
inc
mov
out
repnz
popa
dec
push
shlb
mov
repz
stos
arpl
push
mov
jno
movsl
jae
shrb
sbb
fldt
dec
pop
xchg
xor
cli
mov
sbb
jnp
ja
add
add
sbb
les
rclb
stos
mov
jmp
mov
mov
or
xchg
imul
stos
mov
xchg
dec
cmp
rcrb
push
test
jl
sbb
xor
cld
and
fldpi
dec
movsl
fcomps
loopne
xorl
stos
mov
fisttpll
cmp
push
cwtl
inc
cld
lds
movsl
aam
mov
dec
mov
mov
ror
add
idivl
cmp
push
dec
cmp
stos
fdivrl
adc
clc
shlb
fnstcw
test
lcall
mov
repnz
mov
add
aas
and
mov
adc
sub
xchg
pop
mov
mov
sub
mov
mov
or
mov
sbb
pop
das
mov
and
jp,pn
lods
nop
subb
int3
insl
or
out
mov
imulb
cmpb
bound
into
pop
arpl
adc
push
mov
jle
insl
mov
out
clc
lods
aam
xlat
addb
push
fistpll
test
pop
movsb
fisubs
cmpsl
jmp
mov
stos
in
ret
stos
jno
ret
test
xchg
xchg
xor
stos
out
and
je
out
pop
lds
mov
loope
stos
adc
mov
or
mov
and
dec
insl
outsl
fwait
mov
mov
dec
out
jbe
nop
lret
xor
fdivrs
out
xchg
rcrl
es
adc
dec
shl
push
idivl
mov
mov
repnz
pop
push
mov
dec
jns
xchg
sti
inc
into
mov
or
push
das
fwait
lret
inc
bswap
fwait
movsb
repz
sbb
stos
mov
inc
shrl
push
adc
mov
mov
and
stos
mov
mov
outsb
xchg
adc
push
gs
mov
xchg
fcmovnb
in
mov
sbb
jno
stos
movsb
in
and
shr
adc
sbb
mov
mov
popf
adc
stc
fcomi
cmpb
fwait
mov
lret
jecxz
and
cmpsl
xor
push
add
out
dec
xchg
xchg
jmp
addr16
xchg
inc
scas
or
mov
jnp
mov
cs
inc
mov
ljmp
je
cmpl
rolb
pop
out
xchg
pop
xchg
push
adc
mov
pop
fucomp
faddp
or
mov
stos
or
xor
fidivs
xchg
pusha
subb
les
ret
inc
popf
cmpsl
stos
dec
mov
fcompl
movsl
mov
shlb
mov
fwait
mov
test
stos
fs
or
movsb
out
out
repnz
addr16
stos
xchg
lea
stos
pop
mov
ret
fwait
and
sub
inc
or
pop
repnz
mov
xchg
fbld
shr
das
movsl
xchg
add
test
mov
jmp
out
xor
mov
fadds
mov
xchg
or
mov
imul
fwait
sbb
lods
or
push
add
cmp
ret
int3
stos
xor
out
icebp
daa
jbe,pt
dec
stos
add
inc
fldcw
push
lahf
push
mov
mov
cmp
arpl
fdivl
insl
xchg
mov
adc
and
scas
adc
adc
daa
fwait
jp
repz
sti
xchg
stos
cmp
push
mov
in
and
pop
or
fwait
xor
pop
dec
cli
das
or
mov
dec
sub
mov
repz
lods
lds
mov
imul
ret
mov
adc
subl
test
jle
jl
imul
push
outsl
mov
aad
imulb
push
and
dec
sub
pop
pushf
das
mov
pop
addr16
dec
stos
or
lods
mov
mov
das
testl
push
mov
mov
mov
cmc
mov
and
es
jmp
inc
stos
xchg
sbb
jecxz
mov
adc
in
repnz
xlat
inc
shll
clc
mov
pop
sbb
jmp
dec
sub
lret
cmp
imul
lret
cwtl
sahf
fwait
lods
movsl
arpl
mov
mov
xor
jmp
jne
push
sub
mov
daa
push
lcall
enter
push
stos
sub
popa
add
ljmp
xchg
or
cs
jne
jmp
push
sub
xchg
mov
xchg
and
scas
jo
outsb
nop
add
int3
mov
sub
mov
lea
ret
jo
mov
insb
dec
stos
les
xor
sub
enter
mov
jmp
mov
xchg
loope
stos
push
lea
js
pop
sub
ja
pop
lea
push
mov
jne
aam
aaa
jb
lock
stos
loop
jmp
fdivl
adc
imul
in
inc
xchg
and
cmp
lcall
xchg
imul
mov
sub
jp
xorl
and
inc
leave
push
hlt
mov
fldcw
iret
sti
bound
cmp
stos
mov
or
sbb
inc
mov
sbbb
stos
rorl
aas
jnp
push
pop
mov
cld
aaa
adc
stos
in
or
cwtl
outsl
subb
push
rcrb
jl
push
orl
add
mov
stos
cmc
fcoml
subb
jl
incb
leave
mov
int3
lcall
pop
xchg
fwait
stc
punpckhwd
dec
mov
pop
sbbl
ljmp
std
lahf
mov
pop
jmp
lahf
fidivrs
mov
push
and
lods
mov
adc
jns
scas
cmpsl
mov
repz
mov
loope
adc
int3
int
pusha
jge
stos
xchg
nop
aam
xchg
lahf
scas
add
xchg
mov
stos
lods
dec
imul
push
gs
push
adc
mov
clc
in
jge
stos
sbb
xchg
cwtl
and
shll
stos
adc
mov
ja,pn
sahf
stc
xchg
add
adc
xchg
pop
imul
icebp
movsb
fildll
mov
fisttpll
call
loopne
flds
shr
mov
lods
cwtl
jnp
cli
ss
mov
outsl
in
std
inc
fcmove
sbb
mov
stos
jo
js
push
gs
pop
pop
mov
lods
mov
mov
cld
imul
mov
stos
repz
jp
imul
fwait
ja
xchg
mov
adc
jae
jge
or
mov
mov
xor
pop
test
and
mov
sarl
dec
inc
mov
cwtl
jb
pusha
mov
mov
das
dec
adc
pop
cmp
mov
rcrb
jl
stos
iret
push
mov
push
js
add
sti
stos
sahf
bound
shr
sbb
push
pop
xchg
add
cltd
cld
aad
imul
outsb
push
or
mov
mov
sub
stos
dec
inc
icebp
mov
jmp
jge
outsb
xor
jl
mov
aas
lock
mov
mov
mov
push
stos
mov
testb
sbb
mov
neg
jmp
dec
lea
mov
adc
dec
movsl
fldl
cmc
mov
cli
stos
or
fs
stc
jo
imul
or
push
or
cs
or
sbb
or
jnp
xchg
test
adc
or
dec
les
jnp
mov
jb
outsl
scas
fsts
mov
bound
and
adc
stos
std
add
mov
or
cmp
fiadds
daa
pushf
mov
jmp
jl
sarl
lcall
sbb
add
enter
pop
mov
mov
mov
stos
mov
cmp
and
popf
out
leave
aas
pop
insb
mov
mov
daa
push
hlt
and
dec
xchg
or
cmp
pop
ret
jns
fwait
adc
adc
lcall
mov
add
jl
xchg
imul
movsb
imul
outsb
ljmp
mov
xor
mov
movsl
lods
test
movsb
push
sbb
jne
ja
js
lods
outsl
fwait
push
mov
sbb
lods
pop
stos
pop
pop
cli
repnz
outsb
cmp
push
ja
adc
mov
fistl
aas
dec
stos
test
inc
push
inc
push
repnz
xor
jecxz
dec
fwait
jmp
subl
or
out
pop
mov
ja
xchg
push
mov
sbb
clc
loopne
cld
mov
xor
stos
pop
enter
mov
add
cmp
xor
xchg
mov
xchg
sarb
cwtl
mov
xchg
scas
fs
mov
fldl
roll
stos
jne
xor
mov
push
and
mov
mov
adc
stos
push
push
repz
pop
aas
jmp
out
xor
loopne
and
aas
rcll
scas
stos
fildl
mov
test
push
rcl
dec
addr16
int3
shlb
mov
repz
arpl
mov
divl
stos
loopne
popl
stos
shlb
jbe
sub
test
add
popa
lret
sbb
xor
or
sahf
push
xchg
stos
mov
inc
roll
std
dec
add
push
jecxz
cmpsb
xchg
jo
sbb
loope
mov
or
sbb
cltd
rcrb
mov
push
push
sub
mov
pop
ss
lahf
stos
inc
mov
cmp
out
or
fstpt
in
movsb
sbb
mov
jp
daa
xlat
cmpl
pop
mov
std
xadd
mov
mov
xchg
adc
cmp
lret
scas
outsb
imul
in
in
ret
mov
pushf
pusha
das
dec
in
mov
movsb
inc
xor
adcl
daa
mov
movsb
in
ss
push
pop
pop
pop
sysexit
pushf
aaa
mov
addb
cmp
clc
cmc
movsb
or
std
stos
test
adc
imul
stos
or
push
inc
dec
push
stos
dec
jbe
daa
xchg
test
xchg
adc
sub
stos
out
xchg
xchg
sbb
hlt
data16
popa
dec
int
jae
mov
lds
pop
pop
xchg
stos
sbb
les
jmp
iret
push
nop
pop
repnz
inc
divl
dec
into
xchg
mov
hlt
push
xor
jae
mov
pop
je
enter
pushf
xchg
stos
sub
outsb
stos
repnz
lret
outsl
cmp
mov
out
jno
sbb
lcall
in
cmpsb
push
xorl
mov
inc
mov
inc
mov
sub
mov
xor
enter
adc
daa
jbe
stos
cwtl
sub
pop
mov
mov
xor
lds
fwait
mov
sahf
push
and
jmp
out
mov
rcrl
stos
jl
pop
je
test
cmp
stos
lods
and
gs
scas
stos
or
dec
mov
dec
mov
or
shrl
inc
hlt
mov
cmp
sarb
testb
pop
std
mov
aaa
repnz
xchg
ds
test
insb
inc
push
mov
insb
fwait
pop
cmpsl
stos
push
and
arpl
imul
xchg
xor
mov
jnp
lea
les
stos
in
adc
imul
rcrl
mov
and
xchg
roll
push
movsl
mov
sbb
push
xchg
and
xchg
push
add
add
jo
fildll
cmpsb
incl
arpl
cs
dec
lahf
mov
sub
mov
add
and
int
sub
push
fcmovbe
mov
pushf
sahf
push
icebp
mov
jns
cmpsl
push
and
stos
fisttps
fdivr
or
xchg
pop
shll
mov
enter
stc
stos
mov
mov
stos
out
xchg
jmp
jmp
fs
sub
pop
and
fwait
add
cmp
sub
loopne
mov
push
sub
sub
jno
out
cwtl
stos
cmp
imul
sub
xchg
nop
adc
jns
fisubrl
or
mov
xor
sub
outsb
xor
stos
stos
mov
loope
mov
out
aaa
xchg
mov
or
mov
out
pusha
stos
sbb
int3
cmp
addl
stos
sbb
pop
mov
push
and
mov
shrb
fldt
scas
sahf
repz
pop
es
dec
movl
jnp
fbld
cmpsb
stos
mov
jb
inc
xor
xor
push
push
cmpsb
stos
das
inc
fcompl
jmp
jb
adcl
into
xor
hlt
cmp
mov
mov
rorb
dec
sbbb
mov
add
and
stos
pop
test
daa
cli
sub
xchg
push
jmp
or
sub
dec
jne
dec
ljmp
stos
fadds
sub
dec
jmp
cmc
or
sbb
mov
sbb
ss
mov
fstpt
inc
add
test
stos
sti
jbe
sub
mov
out
mov
sahf
stos
popf
adcb
mov
stos
lds
fsubl
cmc
add
aad
sbb
mov
add
xchg
jns
push
stos
stc
std
push
ficoms
sub
xchg
into
pusha
mov
sub
xrelease
push
lret
popa
test
movsb
cmp
lods
fcomip
arpl
dec
adc
mov
daa
lock
xlat
mov
movsl
pop
add
insb
sahf
or
xchg
shrl
movsl
stos
enter
lcall
fxam
sub
cmovne
cltd
mov
push
inc
stos
hlt
test
aam
jbe
ret
out
test
cld
mov
stos
into
setae
cmp
inc
mov
cld
fisttpl
stos
and
pusha
xchg
sub
stos
in
xor
popa
dec
dec
rolb
or
mov
stos
or
fadds
sbb
sub
xor
xchg
mov
test
stos
adc
push
mov
daa
xchg
inc
lcall
mov
shlb
fwait
jp
stos
out
cmp
and
fcmovnbe
dec
fst
mulb
fmulp
stos
jle
aas
pusha
sub
push
repz
bound
add
push
aas
stos
adc
movsl
shr
movsb
add
ljmp
lahf
sbb
cli
aaa
data16
stos
adc
lret
movsb
inc
mov
bound
cmp
imul
arpl
mov
repz
outsb
add
mov
stc
data16
dec
mov
inc
lds
jmp
mov
movsb
scas
mov
imul
stos
xchg
xlat
dec
in
dec
xchg
and
sbb
imul
xorb
iret
mov
popf
mov
xor
xchg
push
popa
xor
fwait
mov
imul
pop
lahf
stos
xchg
imul
insb
add
add
or
movsb
aad
test
xchg
stos
das
dec
aam
in
mov
popf
stos
insl
mov
leave
jl
mov
sarl
rcl
subb
stos
dec
stos
inc
or
std
xchg
jns
imul
mov
push
mov
nop
lahf
stos
pop
sub
in
mov
mov
mov
push
lahf
mov
aad
lahf
mov
je
xor
sub
push
jmp
dec
call
loop
movsb
mov
xchg
jl
loope
arpl
push
in
shll
shrl
sub
stc
test
lret
add
or
xchg
jmp
in
sbbl
lods
jno
add
and
imul
xchg
cmp
cmp
mov
mov
xor
mov
jg
or
xor
push
clc
out
adc
adc
and
xchg
pop
cmp
stos
add
cmpsl
lahf
ret
push
imul
cwtl
mov
fisubrl
sahf
add
imul
out
imul
push
stos
sbb
sti
push
rcl
subl
addr16
pop
xchg
inc
outsb
jae
cmp
or
in
jl
mov
jmp
mov
js
pop
stos
cltd
sub
fnstsw
shr
push
pop
adc
imul
rcll
pushl
jmp
orl
sbb
mov
push
fs
in
mov
rcll
xchg
jmp
stos
imul
lret
inc
jle
add
ja
cmp
lds
insb
xor
outsb
push
xchg
pop
stos
loop
lock
das
push
xor
xchg
mov
xchg
stos
inc
jbe
adc
incl
cmp
cmp
mov
push
loope
xor
stos
fildll
inc
shlb
stos
jmp
mov
cmpsb
je
stos
or
fisubrl
cmc
in
outsb
stos
lods
jge
dec
push
stos
sahf
insb
test
rorb
aas
lock
xchg
cmpsb
add
mov
jbe
push
push
sbb
push
push
cmp
cmp
stos
mov
pop
mov
jb
orb
pop
xor
mov
cmpsb
inc
popa
sub
dec
clc
adc
mov
xchg
dec
daa
les
mov
sbb
dec
mov
mov
and
stos
push
jmp
mov
pusha
cmp
dec
bound
sbb
adc
stos
loopne
fxtract
paddd
or
cld
cmp
inc
nop
add
mov
sbb
inc
stos
or
cmp
ljmp
stos
and
repz
lea
push
je
add
scas
shl
adc
nop
fbstp
into
stos
mov
shrl
jecxz
aaa
test
sub
push
xchg
scas
add
mov
xchg
stos
aam
nop
push
fwait
mov
sub
jb
hlt
mov
or
mov
jg
and
stos
popa
lahf
stos
std
pop
stos
pop
sub
pushf
mov
cmp
je
mov
shll
stos
or
in
xorl
lods
fwait
es
lcall
sbb
mov
stos
insb
mov
pop
lret
sbb
lock
adc
stos
pop
xchg
jae
sub
pusha
mov
jb
stos
mov
out
out
popa
jge
stos
or
stos
test
movb
sahf
and
aas
adc
jns
mov
xchg
in
xchg
stos
pop
in
xchg
stc
push
into
xor
xor
movsb
lahf
int3
mov
sub
insl
stos
stc
push
ror
iret
out
xor
push
push
data16
movsb
cmpsb
movsl
pop
call
sub
test
push
daa
mov
test
fidivl
sub
xor
mov
imul
jp
sub
stos
pop
xchg
sub
stc
xchg
movsb
daa
fs
xchg
adc
insl
lock
fists
fldcw
mov
xlat
out
cs
arpl
mov
scas
pop
je
push
stos
aad
addb
mov
inc
jge
and
shll
mov
pop
jno
jmp
push
mov
jecxz
cwtl
pop
xor
adc
das
stos
xor
inc
or
mov
in
push
mov
jbe
jl
and
push
xchg
stos
cmp
imul
insl
jg
dec
stos
or
enter
mov
cltd
hlt
icebp
jb
ret
sbb
sbb
sub
icebp
jb
pusha
movsl
outsb
in
jle,pn
push
jmp
dec
jp
add
movsb
scas
mov
push
lret
add
pop
stos
jp
cli
cwtl
outsb
or
sti
iret
lods
int
cmpsl
push
leave
sahf
into
and
push
cmpsb
cmp
adc
out
adc
mov
and
test
inc
jnp
es
paddusw
jmp
cmc
mov
mov
out
mov
or
mov
bt
cmp
bt
cmp
and
pushf
call
stc
bt
or
mov
lea
je
bts
mov
movzbw
add
rcr
bsf
sub
pusha
dec
shr
sar
sar
mov
bsf
adc
add
and
not
bts
and
add
rcl
bts
mov
jmp
mov
lahf
outsl
sub
xchg
mov
xorl
sbbl
add
jne
pop
cltd
outsb
je
into
xlat
xchg
in
leave
cmp
sub
aam
mov
loopne
jmp
dec
sub
fadd
lds
cs
outsb
repnz
jae
repz
loop
sub
leave
mov
pop
sbb
dec
mov
lock
jbe
dec
add
pop
mov
scas
cltd
jmp
jo
add
fwait
pop
iret
subb
ficoml
fsubl
iret
push
out
aam
inc
int3
sub
jp
sub
mov
sbb
jno
mov
sbb
inc
push
xchg
inc
mov
in
pop
loop
mov
xor
insl
pop
cwtl
lea
jne
movsbw
push
push
movb
movzbw
lahf
mov
lahf
lea
jmp
call
xchg
fwait
inc
push
ja
test
out
xor
mov
icebp
cli
stos
push
sub
ds
mov
out
clc
mov
in
fisubs
push
inc
cmc
adc
js
jl
bound
into
lret
mov
xchg
jp
cli
dec
icebp
fistl
test
cs
ret
mov
or
cmpl
mov
or
lea
call
call
xor
cmc
clc
repnz
pushf
pusha
lea
jmp
stc
shl
not
lods
push
bt
clc
rol
bt
movw
jmp
pushf
push
not
lods
pushl
jmp
or
ficomps
mov
push
or
insl
push
xor
test
jmp
push
push
dec
addr16
sbb
mov
xor
addr16
daa
jmp
add
decb
clc
inc
addr16
mov
sbbl
cmp
fildl
cmpsl
negb
cmp
jnp
and
lcall
mov
shlb
stc
jae
arpl
dec
sbb
mov
xor
cmp
xchg
rorl
add
cli
mov
in
fs
jl
pushf
lea
jne
push
push
mov
movb
call
xchg
sub
jl
inc
or
xchg
push
outsb
push
sahf
call
clc
fs
cmp
cltd
or
jne
xchg
push
in
dec
adc
stc
mov
inc
insl
rcll
stos
in
das
stos
pop
lods
int
fsubrl
cmp
pop
in
cmpsb
in
notl
imul
cmc
jmp
ret
sub
jecxz
and
mov
xor
add
addr16
jb
popa
je
inc
outsl
arpl
insb
gs
outsb
dec
dec
outsl
arpl
jns
gs
dec
in
lret
jle
push
jle
call
xchg
gs
xchg
mov
loopne
push
clc
or
push
dec
out
pop
shl
sahf
jno
fsubrl
xlat
push
add
cwtl
xchg
dec
xchg
out
fnsave
inc
sub
movsl
es
jns
push
xor
cmp
gs
mov
cmp
aad
cltd
and
in
cli
mov
scas
push
sbb
lods
test
and
mov
lcall
sti
inc
and
xor
mov
test
daa
dec
cld
xchg
jae
cmp
sub
inc
mov
xor
insb
sub
mov
or
mov
adc
mov
cmp
xchg
push
dec
sbb
jne
mov
push
mov
xor
or
xchg
nop
mov
aaa
cmp
enter
sbb
mov
mov
xchg
lret
adcl
testb
dec
lret
adc
add
cwtl
sub
mov
xchg
mov
mov
mov
mov
dec
jmp
sub
aas
loopne
test
int3
or
fiaddl
push
sbb
mov
inc
push
ljmp
xchg
int3
aaa
add
jne
sub
xchg
xchg
sub
loope
jb
fstl
inc
xor
sub
nop
xchg
sub
mov
jo
movsb
jecxz
loopne
out
pop
ror
mov
not
push
mov
add
in
xlat
adc
mov
idivl
lret
and
loop
cs
pop
jmp
gs
outsl
fs
gs
popa
outsb
fs
gs
add
and
mov
push
cmp
into
xor
insl
pop
xlat
mov
dec
mov
sbb
stos
movsl
ljmp
cmove
xchg
call
sub
sbb
in
cmp
ss
jmp
dec
stos
ds
mov
dec
dec
lock
xchg
jle
popa
mov
cmpsb
push
or
mov
sahf
pop
mov
scas
xor
mov
fwait
jle
test
insb
fimuls
adc
push
sub
cs
jmp
mov
inc
daa
sbb
xor
mov
mov
fsubrs
jmp
test
fldl
mov
lret
xor
lret
jbe
hlt
mov
cli
out
jae
pop
daa
aam
hlt
test
cli
or
lret
js
cs
jg
add
and
mov
cld
adc
pop
mov
jnp
cs
add
jg
add
dec
and
add
test
xchg
or
bt
cmc
ja
or
push
lea
je
neg
shr
sub
or
shrd
setp
mov
pushf
mov
test
rcl
mov
bswap
shr
bsr
pop
mov
cmc
pusha
or
pushf
lea
jge
push
push
lea
je
pushf
sar
add
add
adc
push
rol
or
sub
adc
setne
bswap
adc
shr
call
jmp
pushl
pushl
sub
test
clc
pushl
popl
cmc
call
loopne
fsts
imul
mov
int3
ljmp
cmp
mov
or
cmpb
leave
xor
push
adc
aam
lds
xchg
xchg
cmp
push
lcall
xor
or
jae
push
inc
adc
and
lret
std
in
sbb
mov
pop
icebp
push
pop
xor
push
mov
mov
push
lds
fsubrs
lods
fucom
in
dec
mov
mov
mov
mov
test
movsl
add
inc
fdivrl
popa
fwait
rolb
ret
xchg
inc
sub
cmp
shlb
int3
xchg
add
xor
je
mov
lcall
adc
push
enter
mov
or
cltd
jg
sub
xor
nop
getsec
test
fidivl
lcall
fsubp
and
sub
pusha
and
mov
jns
test
or
divl
adc
xor
add
cmp
stc
pushf
jmp
mov
and
pop
or
dec
mov
add
pop
ret
out
in
into
addb
push
loop
inc
mov
gs
popl
repz
popa
outsb
addl
and
add
pop
std
dec
cltd
jmp
int3
pop
adc
jns
xor
fstps
mov
adc
adc
adc
sub
inc
adc
ja
jle
mov
xchg
test
sbb
inc
push
lea
mov
icebp
movzbl
lea
xchg
pop
call
mov
and
adc
aad
and
aad
dec
and
gs
mov
int3
xchg
stos
pop
loopne
dec
pop
dec
jg
mov
xor
sti
cwtl
jmp
adc
lea
mov
jbe
scas
dec
std
mov
stos
dec
scas
inc
inc
pusha
add
cmpsb
jne
adc
cmp
pop
mov
add
sub
stc
lea
les
movsl
and
add
movsb
ja
dec
pop
bound
xlat
int
lcall
ret
lock
and
aad
lock
and
or
decl
mov
cmpsl
pop
and
cltd
pop
lcall
mov
loope
or
in
ds
cmp
addr16
rorl
adc
pop
incl
xchg
or
cmp
loop
xor
xor
inc
pop
sbb
popf
mov
insl
inc
push
ret
sub
or
adc
daa
ja
dec
jae
rclb
sub
push
mov
daa
add
mov
ror
mov
shl
clc
mov
cmp
je
bt
test
mov
test
clc
stc
pusha
xor
push
pushl
pushf
jmp
xor
and
mov
call
aas
mov
adc
pop
or
in
xor
sub
push
push
xchg
out
adc
mov
xchg
add
push
repz
xchg
insl
ret
mov
cli
test
mov
or
add
mov
jbe
into
dec
outsl
int
adcl
mov
inc
call
arpl
xlat
mov
loope
and
clc
xor
clc
call
call
pop
mov
push
imul
rorb
outsb
lds
xor
xchg
mov
cli
je
mov
repz
pop
or
fcoms
lret
adc
pop
mov
push
gs
sub
mov
and
in
das
cmp
cmp
adc
aam
and
subb
sbb
rcrb
ljmp
cmc
inc
xchg
push
mov
imul
mov
lret
imul
push
in
mov
cs
add
pop
jle
lret
fistpll
pop
jnp
out
cmp
sti
xchg
es
jge
xchg
insb
push
std
adc
test
test
imul
mov
cmp
add
mov
insb
mov
data16
pop
je
into
add
or
xchg
adc
and
hlt
sbb
ja
cmp
mov
mov
add
adc
movl
pusha
movl
movb
pusha
lea
jmp
pop
cli
ror
in
pusha
mov
sbb
push
mov
mov
add
push
xchg
or
std
jg
imull
in
cmp
sub
or
xchg
stos
popf
cltd
pop
jne
xchg
call
out
xorb
dec
lods
inc
iret
adc
push
movsb
xchg
aaa
fisubrs
push
mov
pop
fisttps
push
les
jnp
xor
dec
jge
scas
push
loope
hlt
xchg
imul
mov
hlt
xor
rcll
pushf
lea
jmp
call
jmp
mov
dec
not
inc
inc
inc
jmp
lret
iret
bound
jmp
dec
inc
mov
sbb
out
lock
aad
mov
jp
scas
stos
push
addl
mov
dec
fsts
xchg
jnp
test
pop
mov
shrl
jns
push
xchg
test
xor
mov
xchg
push
andb
lret
sbb
js
fdivs
loopne
jne
fs
aas
imul
loop
ljmp
ret
jmp
call
mov
ficoms
add
imul
cmp
in
int
lahf
and
pop
cmp
clc
scas
and
cmp
lods
and
pop
call
add
fistps
and
inc
loop
mov
xor
test
popf
js
mov
rolb
lods
std
out
mov
mov
mov
sti
out
jecxz
cwtl
sub
push
jle
sahf
mov
xchg
xchg
cmpsl
out
scas
pop
and
cmpsl
push
nop
sbb
mov
das
cmpsl
jae
sbb
cmpsl
rcll
inc
mov
jae
jmp
and
int
xor
repnz
scas
xchg
loope
clc
fidivrs
lea
ljmp
push
rclb
adc
adc
lods
mov
sbb
js
lods
adcl
scas
adc
das
sub
push
sub
mov
das
mov
sbb
into
out
mov
xlat
jnp
addb
jo
scas
test
inc
jae
bound
lock
push
call
cmp
push
call
or
test
pop
dec
xor
test
std
pop
cmpb
leave
pop
jg
movsl
mov
in
add
jle
daa
add
cli
mov
mov
fbld
add
adc
in
imul
jns
fwait
xor
mov
jno
inc
fsubrp
mov
aad
in
cmpsl
inc
add
sti
dec
add
mov
and
ficoms
pop
jbe
jle
mov
pop
push
shl
mov
clc
jmp
movsbw
call
std
dec
js
mov
in
in
dec
adc
xchg
jb
mov
iret
popa
inc
cmp
xchg
mov
test
cmpsb
jnp
call
pushw
cltd
pop
and
push
pop
sbb
pop
mov
out
xor
inc
insl
jnp
sub
fwait
mov
in
fnstenv
ljmp
nop
insb
std
add
mov
popa
aaa
movsl
xor
mov
mov
shrd
mov
clc
mov
pushf
call
lcall
fnsave
and
cli
or
xor
leave
outsb
lret
xchg
inc
xchg
and
daa
mov
nop
movsl
repnz
mov
add
in
jmp
lods
xchg
mov
jecxz
xchg
scas
test
mov
inc
in
fsubrs
lods
or
inc
lea
lahf
inc
cmc
sub
xchg
mov
rorb
xchg
test
or
and
mov
mov
push
ret
ljmp
cs
inc
add
sbb
add
pop
out
lea
adc
jge
xchg
pavgb
pop
sub
lock
add
cmp
popa
incb
push
fisubrl
adcb
std
into
popa
mov
imul
jnp
cltd
lea
inc
push
nop
popa
mov
mov
popw
inc
je
xchg
int
hlt
pop
loopne
out
mov
sub
xor
xor
dec
sahf
std
lret
jmp
lret
sbb
in
cmpsl
or
insl
mov
xchg
add
mov
call
mov
ret
mov
add
mov
pop
pop
outsl
pavgb
fldcw
or
xchg
aaa
sbb
aam
mov
repz
dec
pusha
loope
daa
add
dec
and
jno
out
out
cmp
pusha
push
out
hlt
mov
dec
jecxz
inc
rcr
cmp
aam
jnp
inc
or
mov
push
outsl
or
icebp
aad
jns
sbb
adc
cmp
ljmp
movl
mov
mov
mov
in
pushf
pop
jmp
push
nop
or
and
xor
cmp
out
gs
push
out
sbb
imul
out
lret
hlt
inc
loop
dec
push
call
sub
add
mov
xchg
aad
dec
pop
cld
inc
and
mov
loop
adc
sbb
mov
mov
jne
bswap
bsr
bswap
movsbw
mov
push
cmc
stc
add
stc
clc
bt
jmp
cmp
popf
ljmp
dec
xor
pop
lahf
cmp
cmpsb
jae
fildll
in
pop
fwait
arpl
sub
mov
test
jns
pop
and
push
push
and
cmc
add
iret
dec
sbb
mov
mov
xchg
into
cmp
movsb
aas
and
aam
xchg
pushf
neg
mov
dec
mov
fisttpl
xlat
lar
mov
test
je
add
mov
pop
lea
movsbw
jmp
lea
jae
movsbw
stc
mov
clc
mov
shl
mov
test
sub
cmp
repnz
push
pusha
lea
jmp
aaa
negb
jge
cmpsb
push
out
int3
pop
xor
pop
mov
lret
scas
fs
push
outsl
mov
pop
and
bound
mov
mov
pop
shr
pushf
pop
std
shll
push
adcl
push
and
aam
push
xchg
in
arpl
push
fcomps
fsts
pop
js
repz
je
loopne
gs
or
cwtl
jae
dec
and
pop
lock
aas
ret
push
push
pop
je
out
test
xchg
lcall
sbb
mov
mov
int3
mov
lfs
test
sub
dec
inc
sub
xchg
mov
lret
dec
jmp
movsb
dec
or
jnp
xor
cmpsb
jmp
fbld
testb
ss
sbbb
cwtl
add
jge
movsb
dec
out
outsb
test
mov
xor
dec
sbb
into
int3
lss
movsb
dec
mov
insb
sbb
mov
lods
daa
or
xor
pop
and
adc
cmpsl
test
xchg
mov
aam
jge
pop
jns
pop
int
and
mov
mov
xchg
mov
and
setne
inc
push
aad
sub
cmp
je
pop
andl
mov
mov
sub
ljmp
and
aaa
daa
insb
lea
or
out
out
mov
mov
pop
mov
or
stos
fsubr
mov
add
dec
sti
addr16
xchg
sahf
xchg
pop
std
fists
mov
mul
mov
int
jno
pop
mov
pop
ja
xor
sahf
mov
dec
js
cs
dec
and
sarl
xchg
jl
lret
fldenv
xchg
pop
jl
pushf
cltd
mov
imull
xchg
ret
xchg
sti
lret
cmpsl
mov
jnp
push
stc
or
cmp
mov
push
test
xchg
jle
inc
icebp
stos
inc
jle
rclb
sub
or
pop
adc
jbe
hlt
repz
js
xlat
daa
scas
mov
shl
and
lahf
mov
jno
mov
adc
fsubp
clc
jo
dec
sbb
jne
xchg
cld
dec
cmp
daa
sbb
mov
lea
xor
popa
pop
sbb
mov
inc
imul
pop
lret
mov
out
sahf
cs
aad
pop
decl
mov
push
jge
cmpsl
fisubrl
pop
mov
sub
mov
adc
xchg
lds
jno
cmp
movsb
and
pop
xchg
jle
jbe
cld
cmp
cwtl
xor
add
mov
jae
ja
sub
pop
outsl
pop
stos
push
imul
fimull
mov
cmp
xchg
call
ret
scas
fwait
pop
jle
or
jmp
jns
and
pop
lahf
jns
cs
or
xor
loop
or
in
test
mov
mov
and
and
xchg
test
jns
push
mov
mov
test
stc
xor
sbb
ret
ljmp
ficoml
push
jecxz
cs
dec
xor
pop
add
leave
shrb
sub
mov
aad
icebp
aaa
or
rorb
adc
pusha
or
mov
test
push
mov
xor
sbb
dec
sbb
sbb
test
lcall
leave
iret
js
int
mov
fdivr
dec
fsubrs
scas
push
addr16
out
call
call
arpl
xchg
push
jecxz
mov
xor
andl
mov
lods
push
clc
push
mov
out
add
add
aaa
dec
daa
jns
sub
mov
mov
aad
dec
aas
bound
loopne
xor
aas
mov
shl
fstpt
xchg
test
xchg
loop
imul
jmp
clc
jmp
mov
and
mov
mov
shrl
sbb
inc
push
push
cs
xor
pop
xchg
sbb
outsl
dec
in
xchg
jle
popa
ds
repz
test
cltd
xchg
rcr
add
xor
or
cmpsl
and
std
ficoml
adc
mov
cmp
adcb
cltd
cmp
jo
addr16
movsb
pop
adc
cs
cmp
fisttpll
scas
mov
loopne
jg
dec
jb
sub
adc
mov
nop
dec
mov
shrb
adcb
out
jg
sub
ret
xchg
sub
enter
leave
xor
and
fstpl
cs
stc
mov
lret
arpl
lock
arpl
and
int
sub
sub
ds
inc
sub
int
sub
pop
dec
pop
adc
pop
test
and
xor
sbb
dec
mov
lock
test
fsubs
scas
add
rclb
shrl
mov
push
inc
cli
in
jae
out
lds
sbb
sti
lea
mov
sarb
mov
inc
gs
js
lock
into
or
aas
divl
mov
dec
inc
and
iret
sub
mov
jecxz
es
xor
xchg
test
push
mov
cs
fstpt
adc
aas
and
sbb
loopne
sbb
sti
sub
fwait
icebp
aam
or
jne
loop
inc
or
inc
repz
ljmp
cmp
jecxz
dec
repnz
leave
jae
aas
mov
subb
std
das
pop
addr16
stos
insb
repz
ljmp
adc
ds
testb
addr16
sbb
mov
xor
xchg
pop
dec
add
test
fnstenv
ds
in
mov
pop
mov
push
sub
lea
mov
xchg
out
test
loope
mov
push
mov
push
out
sbb
arpl
arpl
je
jg
push
mov
out
in
test
jp
fisttpll
adc
int
arpl
xchg
fwait
jmp
pop
mov
and
mov
lahf
dec
movsb
stos
fadd
xor
call
mov
mov
or
ficoms
ljmp
aas
xor
push
push
add
xor
push
push
sbb
jl
lret
mov
cmpsl
mov
ficompl
jbe
cmpsb
scas
pop
inc
outsb
adc
les
aad
and
jbe
mov
and
stc
lea
fs
lahf
cld
dec
ss
call
scas
mov
cmpb
decb
mov
test
push
inc
out
mov
das
mov
insb
mov
cmp
sub
mov
xchg
pop
dec
inc
pop
and
test
push
iret
popa
jbe
push
pop
cmc
sbb
loope
aas
sbb
jl
lods
push
mov
inc
lea
je
bt
add
push
mov
test
stc
cmp
push
lea
jb
cmp
pusha
call
aad
mov
pop
push
nop
test
jg
xchg
cmp
jns
mov
mov
and
clc
fisttps
mov
mov
mov
pop
or
and
add
mov
dec
xlat
or
hlt
and
cmp
mov
cmp
xchg
ds
aam
pusha
mov
lret
adc
les
jno
in
bound
pop
push
in
cmpsb
or
or
lds
xor
cwtl
mov
insl
sbb
mov
add
jmp
jecxz
push
xchg
push
stc
inc
mov
out
movsl
hlt
mov
pushf
cmp
xor
aad
push
aaa
or
clc
cmpsb
jo
and
xchg
mov
inc
and
and
pop
cmpsb
pusha
leave
mov
jle
aad
push
stc
add
cmp
cs
ja
stos
fimuls
adc
jmp
add
stc
push
and
ljmp
insl
or
mov
inc
clc
dec
xor
hlt
lock
std
jmp
mov
dec
repnz
call
mov
sbb
mov
mov
jecxz,pn
mov
add
fwait
cmpsl
jmp
imul
subl
leave
pop
xchg
movsl
call
adc
loop
mov
imull
pop
out
les
sbb
lods
fbld
cmp
adc
inc
cs
test
push
scas
shrb
loopne
mov
push
and
jns
jmp
test
mov
hlt
sti
js
push
mov
rcll
jae
scas
sub
imul
loop,pn
mov
and
inc
inc
cmpsl
loop
roll
jle
xor
movsb
cmp
dec
repnz
cld
addr16
ret
push
inc
lcall
cmp
data16
push
add
adc
lcall
mov
xchg
movsl
scas
loopne
inc
pop
xor
sub
test
pop
mov
push
cs
lret
in
inc
aas
int
loop,pn
jle
pop
iret
arpl
ret
add
dec
cs
repnz
and
mov
lods
push
test
seta
and
jne
aaa
cli
lods
push
jb
push
in
jl
cmpsl
dec
xchg
das
adc
aas
sub
shll
stos
pusha
xlat
call
mov
push
lea
je
push
pushf
pusha
lea
jmp
sub
cmp
cmc
jmp
sub
mov
cmp
lods
stos
adc
mov
dec
jmp
and
push
dec
in
sbb
xlat
lods
dec
loopne
into
or
dec
mov
lods
leave
pop
rcrb
push
les
sbb
lcall
xchg
out
add
dec
inc
dec
jo
jns
inc
popf
imul
xor
jno
mov
test
das
test
mov
loop
dec
sub
dec
xchg
push
ret
mov
pop
mov
push
mov
std
ds
mov
cld
sahf
fdivrs
ds
in
adc
mov
out
inc
sub
rorl
test
xchg
cmp
push
jle
mulw
dec
mov
jno
xchg
jecxz
cmpsl
out
and
cs
movsl
popf
and
ss
clc
popf
mov
jno
ljmp
rclb
mov
and
and
loopne
sub
ret
pushf
sub
push
push
loopne
jecxz
lret
cmpsb
jns
jle
pop
lahf
sar
jmp
xorl
jge
and
mov
add
cwtl
mov
dec
fcmovb
lahf
ret
jp
pop
adc
call
push
sbb
sbb
scas
mov
movsl
pop
ret
and
inc
aad
xacquire
xchg
movd
inc
push
shll
mov
loopne,pn
cli
pushf
pusha
push
mov
push
lea
jne
aas
jmp
jne
sub
test
inc
movsl
addb
sub
or
and
loope
aaa
sbb
inc
fcoms
cmp
lahf
mov
sbb
adcb
xor
jnp
fiadds
sub
js
mov
das
cmp
dec
jne
mov
adc
or
xchg
inc
adc
inc
aad
fadds
add
out
fsubs
xchg
sarb
jp
inc
push
sbb
pop
inc
or
mov
dec
add
sahf
aam
lret
cwtl
mov
sbb
ret
sbb
or
jbe
pusha
iret
mov
ret
lahf
xchg
mov
xchg
iret
dec
cmp
jle
cs
xor
xchg
ja
push
nop
movsl
xchg
int
repnz
jl
dec
idivl
jle
jns
xabort
cmp
pop
popa
lock
sub
mov
dec
inc
mov
mov
or
adc
movsl
and
clc
pusha
mov
mov
jb
test
std
in
and
sub
in
int
mov
out
adcb
pop
cs
lret
bound
adc
push
rcrb
sub
jnp
fisttpll
roll
push
push
repnz
les
mov
arpl
cmp
int3
lret
mov
mov
lea
xor
testl
add
adc
pop
aam
sub
cmpsl
lret
repnz
test
in
fwait
sub
jbe
cmc
and
shrl
push
dec
and
push
sub
push
sarb
mov
rep
dec
lret
mov
mov
aad
cmpb
push
pop
xor
das
cmp
mov
mov
neg
sub
setg
das
call
repnz
loopne
jno
out
es
scas
pop
mov
mov
or
add
in
mov
adc
je
fmull
in
mov
adcb
shlb
sarb
sbbb
add
ljmp
lret
nop
jbe
mov
inc
lods
stc
mov
subl
std
dec
pop
adc
js
fnsave
arpl
sub
lret
mov
fldl
pushf
pushf
call
enter
pushf
and
sub
ret
adc
rcrl
dec
inc
sub
xchg
enter
sbbl
rcll
xchg
enter
cmovno
es
insl
cmpsl
mov
jle
movsl
push
int3
es
bswap
pusha
or
mov
ds
xchg
mov
add
mov
sbb
jns
mov
adc
lods
jge
mov
mov
cs
addr16
fs
cmc
push
incb
out
adc
xlat
test
inc
or
or
mov
aaa
test
loope
sub
push
or
add
cmp
fiadds
outsl
push
xchg
mov
fistl
and
mov
movsb
jmp
cmp
lea
lcall
xchg
ficompl
scas
add
or
cmp
pop
xor
out
dec
rcrb
add
in
outsl
js
cmpsl
mov
add
fsubrl
movb
lea
ja
push
lea
jb
stc
pushf
movb
test
cmpb
pusha
pusha
lea
jne
stc
mov
cmc
clc
push
clc
add
call
lea
call
call
clc
lcall
daa
dec
push
xchg
or
jecxz
jg
dec
fnstenv
jo
insb
sub
movsl
dec
fstpl
inc
jns
mov
das
insb
sub
shr
std
shr
adc
ret
and
pop
rorl
ljmp
in
out
xchg
pop
cwtl
imul
rol
pop
adc
sub
lcall
ds
out
pusha
pop
outsl
xchg
or
stos
sti
mov
outsb
mov
and
mov
sbb
je
sub
fisttpll
cmp
mov
jns
dec
push
jne
test
stc
adc
add
out
dec
pop
movsl
ret
inc
jl
stos
sub
cmp
add
ljmp
pop
lds
movsb
movsl
popl
mov
sub
xor
adc
hlt
mov
les
add
jae
xchg
aas
popa
adc
xor
mov
xchg
pop
leave
in
pop
mov
jae
sub
pop
jle
push
fstpt
xchg
fnsave
mov
sti
sub
clc
push
jmp
fsubrl
scas
xchg
js
dec
ss
and
push
dec
jbe
jae
outsl
test
stc
out
movsl
in
ja
ret
jo
mov
test
unpcklps
sbb
cmp
lods
inc
in
in
cmpb
add
mov
out
lds
sbb
shl
out
insb
in
pop
push
adc
ja
xchg
insb
stc
add
idiv
sub
adc
movsl
mov
dec
and
sub
lock
in
sub
out
jns
loope
test
push
int
popl
cmp
scas
lods
sub
je
or
add
mov
mov
pop
jbe
push
aas
data16
jecxz
and
test
imul
dec
push
jl
outsb
mov
pop
clc
aad
dec
add
clc
sub
mov
xchg
mov
ljmp
push
push
mov
mov
xchg
dec
into
iret
andl
mov
dec
cmp
mov
push
jbe
xor
imul
sbb
xchg
in
aaa
into
lock
pop
out
jbe
loopne
iret
jb
insb
clc
dec
xchg
jecxz
mulb
cmpsl
ficoms
dec
lahf
sbb
icebp
dec
shl
mov
cmp
adc
data16
inc
mov
nop
adc
lcall
mov
xchg
push
pop
jg
mov
cltd
jecxz
sbb
aad
stc
mov
rolb
push
inc
push
dec
xor
cs
insb
add
or
movsl
test
sbb
testb
inc
inc
jne
sbb
jmp
pop
aaa
cmp
mov
subl
ja
mov
rcrl
sbb
pop
movsb
dec
dec
mov
mov
shr
hlt
popa
mov
mov
ds
adc
stos
cmpsb
filds
inc
loopne
cmc
sbb
test
scas
xchg
mov
dec
movsl
jne
xchg
add
inc
ja
mov
jg
sub
lcall
enter
and
test
scas
das
sbb
cmovno
dec
pop
fsubs
push
dec
cmc
dec
lahf
inc
push
rclb
bound
stc
lea
scas
cmpl
subb
jne
push
int3
xchg
sbb
push
mov
movsl
mov
fcomps
or
jmp
mov
das
adc
mov
dec
ja
std
loop
mov
inc
fstl
sub
hlt
xlat
inc
imul
rol
mov
gs
pop
out
scas
cmp
lret
inc
lcall
cmp
jb
scas
xchg
jmp
sub
mov
lods
stc
inc
push
fadd
xor
ljmp
cmpsb
pushf
es
rorl
mov
testl
pushf
push
pushl
ret
stc
clc
pushf
xor
test
jmp
movzwl
cmc
mov
clc
cmp
clc
add
pushf
mov
test
cmc
movb
pusha
test
call
mov
push
pusha
pushf
pushf
pushl
ret
jae
cmp
test
sub
jmp
cmpb
lcall
xchg
dec
or
dec
shl
add
xchg
lcall
adc
cwtl
xchg
outsb
or
pop
push
xchg
std
mov
pop
insl
xchg
push
outsl
or
jge
jl
gs
mov
std
fimuls
xlat
inc
sub
jge
mov
fistl
mov
scas
jl
lock
xchg
mov
sub
xor
cmc
iret
popa
jecxz
adc
mov
cs
inc
mov
outsl
ret
jno
pop
mov
sub
cmp
adc
cld
negl
and
push
ja
mov
sahf
int3
ret
in
push
and
aad
in
scas
mov
and
mov
int
rcrb
icebp
push
ret
iret
adc
mov
xor
loopne
gs
ret
shll
xchg
xor
fidivl
lret
and
outsb
add
sbb
sahf
mov
stc
or
daa
js
xor
sahf
in
mov
push
loopne
push
adc
xchg
scas
add
sbb
add
xor
jae
sbb
in
outsb
dec
and
cld
pusha
movsb
dec
mov
push
push
pushf
lods
sbb
fwait
xchg
pushf
jle
pop
add
repz
push
pushf
stos
dec
aam
push
xchg
andb
addr16
jmp
lret
and
mov
add
loope
push
jns
out
lods
sub
les
adcl
mov
add
add
fsts
sbb
xchg
xor
shlb
stos
xchg
push
frstor
mov
cs
mov
jg
ja
xor
mov
add
sahf
hlt
mov
sbb
ror
mov
cwtl
jo
subl
and
es
or
or
push
add
pop
push
cmp
dec
popf
xor
xchg
daa
pop
mov
imul
xor
sbb
int
jle
fcomps
je
mov
sub
int
xchg
and
in
and
xchg
stc
pushf
push
mov
xor
outsb
shlb
sub
push
xlat
popl
mov
mov
jbe
call
add
adc
add
mov
pushl
ret
lea
ja
dec
adc
sub
bswap
shrd
movzbl
movsbw
add
bswap
stc
mov
setno
cmc
test
mov
pusha
call
clc
shrd
pushf
xor
lea
push
mov
lea
jb
mov
movzbl
pop
pushf
lea
jae
mov
push
mov
bswap
pop
call
fnstcw
cltd
test
lods
ret
andb
pop
das
sbb
cld
sahf
leave
cmp
addr16
jns
mov
imul
lret
xor
mov
scas
imul
sub
repnz
xchg
mov
sub
mov
add
jmp
lds
cmp
in
add
popf
testl
push
push
das
jge
sub
push
aam
dec
cmp
aad
popf
outsl
xchg
adc
fisttpll
xlat
inc
call
pop
mov
cmp
aam
push
call
mov
mov
pushl
mov
pushl
lea
jmp
movl
pushf
jmp
lcall
loopne
mov
mov
pop
js
icebp
es
cld
xchg
in
loope
adc
hlt
jp
pop
jp
mov
jo
mov
or
sub
notl
and
pop
lea
add
stc
xchg
movsb
btr
out
lea
aaa
and
adc
push
ret
decl
outsl
data16
fldcw
lods
aad
sbb
adc
push
fdivrl
cli
push
xlat
xor
cmp
pop
push
mov
filds
xor
and
js
jnp
mov
adc
mov
and
lret
mov
or
or
aaa
dec
dec
test
and
cli
sub
xchg
sub
dec
js
sub
enter
aaa
mov
adcb
mov
lea
add
mov
hlt
mov
clc
mov
cmpsl
and
daa
cmc
xchg
pop
mov
in
pop
push
xchg
scas
shrb
ret
adc
adc
sbb
insb
test
dec
push
insb
jo
ficoms
xchg
ds
adcb
popa
pop
ss
pushf
or
pop
xor
xor
mov
mov
subl
jmp
mov
xchg
xor
mov
push
ret
xchg
cli
sarl
or
cmc
pop
pop
pop
lock
or
mov
dec
push
cmp
jae
sti
imul
sub
mov
shlb
lea
jo
imul
clc
call
fidivl
mov
imul
imull
aas
out
sub
cs
mov
jmp
sbb
call
xchg
pop
dec
fwait
sub
pop
cmc
lds
ja
add
ret
rcrl
cmpsl
out
pop
sub
orb
fsubr
int
mov
or
popa
mov
cmc
test
iret
sub
add
mov
xchg
int3
mov
adc
lea
or
sub
sub
dec
rcr
jne
outsl
gs
jl
stos
pop
push
ja
inc
imul
jl
rolb
or
mov
mov
testl
pushf
or
lods
mov
rorb
cmp
lods
scas
or
mov
outsb
daa
cmp
push
inc
inc
xor
jg
xchg
lcall
ds
inc
inc
push
push
xor
cs
insb
add
jl
adc
lea
jmp
add
bt
not
mov
shl
mov
push
pushl
bt
test
pushf
call
mov
mov
dec
clc
call
loopne
sti
inc
xchg
mov
mov
pop
push
aas
push
mov
out
enter
pop
pop
xchg
adc
test
push
jp
pushf
dec
mov
jl
push
dec
pop
mov
and
dec
int3
mov
or
jnp
pushf
sbb
inc
int
adc
mov
mov
sbb
cmpsl
data16
sahf
sbb
inc
dec
inc
xchg
loopne
xchg
sbb
sub
mulb
or
lahf
add
and
mov
rorb
cmp
test
lock
add
je
inc
and
push
mov
int
divl
fistl
push
adc
lcall
pop
fsubrs
adc
adc
pop
stos
imul
push
pop
mov
nop
xchg
test
pop
sbb
dec
xor
or
xlat
pop
outsl
lcall
loopne
inc
adc
roll
xchg
loope
sub
xchg
and
push
inc
mov
out
cmp
sbb
fldenv
fwait
xchg
sbb
lea
dec
sub
repnz
leave
adc
mov
push
mov
xor
imul
mov
mov
jmp
das
ret
je
inc
adc
pop
fidivl
xchg
sbbb
jno
adc
cld
popf
inc
je
mov
inc
and
std
adc
std
sub
in
cld
fbstp
push
xor
cld
int
lods
and
test
daa
mov
cltd
in
and
sbb
cmp
mov
inc
pushf
inc
mov
ficompl
shl
sbb
adc
and
sub
fildll
mov
rcll
jge
xor
adc
iret
imul
mov
popf
gs
imul
ss
inc
mov
sti
popf
xlat
xchg
ja
ljmp
addr16
fs
cmp
add
imul
push
fs
sbb
sbb
rdtsc
inc
ficoms
and
scas
or
into
jmp
add
and
lea
jae
push
mov
shr
xchg
mov
bts
shr
rcl
shld
mov
cmc
clc
test
sub
call
call
sub
out
cs
in
sub
xchg
rclb
fs
mov
cmc
jb
xchg
dec
orb
lock
add
cmc
dec
mov
popf
cmp
jns
xor
sbbb
push
in
lahf
subl
sub
add
out
push
jmp
xchg
mov
push
inc
xchg
pop
insl
cmp
ds
test
push
pop
into
out
rcrb
mov
cs
and
push
loopne
jno
inc
inc
sbb
out
adc
dec
push
je
pop
out
and
repnz
fimull
jg
je
pop
lods
pop
icebp
into
in
lret
mov
push
ret
bnd
mov
adc
scas
repnz
ret
divb
xchg
sbb
mov
xorl
jle
ret
push
in
in
les
out
fsubp
adc
jmp
jl
rcrl
mov
lret
jmp
and
mov
inc
adc
pushf
lea
jae
push
pusha
lea
jne
push
stos
pusha
lea
jmp
call
rcl
mov
sbb
mov
push
sbb
bts
mov
test
movb
sub
bt
repnz
call
push
push
call
add
inc
gs
jb
jns
jne
jae
jb
and
mov
jnp
mov
das
pop
xchg
mov
loope
test
orb
mov
jbe
dec
loopne
mov
pop
mov
adc
test
xchg
mov
push
or
cmp
mov
inc
and
int3
lea
jne
mov
dec
pushf
shl
mov
push
bt
stc
bt
cmp
call
jmp
pushf
call
lea
ja
not
clc
dec
clc
sub
movzbl
add
shrd
sar
lea
call
pusha
lea
jae
mov
pusha
pushf
mov
push
inc
not
sete
setbe
mov
jmp
add
push
popa
jae
popa
outsb
addr16
jo
add
mov
call
and
cmp
scas
mov
mov
pop
cmp
stos
pop
pop
rcr
and
adc
sub
lods
mov
and
sar
sbb
les
adcl
cmp
stos
stos
mov
insl
fbld
orl
cmp
je
int
std
sbb
mov
stos
outsl
addl
cmp
in
and
push
pop
cmp
js
fdivrs
test
in
sbb
test
cmp
mov
dec
sbb
sub
sub
aas
and
cmp
jns
pop
dec
cmp
and
cmp
outsl
addl
cmp
das
xchg
imul
cmpsb
xor
cmpl
cmp
ja
mov
mov
cmp
divb
mov
mov
adc
lock
enter
and
sbb
or
mov
and
addl
cmp
and
fnstsw
mov
mov
sub
lock
and
jne
outsl
or
int3
and
xor
outsl
xor
enter
cmp
inc
std
fstpl
mov
mov
cmp
cmpl
sub
repz
mov
pop
cmp
mov
rolb
mov
mov
mov
ja
sub
outsl
and
int3
and
popf
push
outsl
subl
cmp
mov
cmp
outsb
outsl
rorb
and
subl
mov
cmp
lret
or
sbb
mov
cmp
cs
fwait
pop
and
fnstenv
stc
lds
fnstenv
out
test
shlb
mov
xchg
sbbb
mov
cmp
jnp
mov
mov
add
inc
imul
adc
cmp
jns
dec
stos
push
sub
jb
loop
cltd
sub
jne
and
and
cmp
or
fisubl
xor
movsl
sbb
pop
pop
leave
mov
dec
cmp
add
pop
scas
and
orl
fnstenv
xor
add
pop
cmp
clc
sub
cli
fisubl
xorl
and
add
bt
jmp
movw
lea
ja
test
push
shl
sub
inc
pusha
shr
stc
lea
add
stc
bt
xor
shl
mov
jmp
lea
jne
push
lea
call
pusha
lea
jmp
lea
jb
test
pusha
cmp
push
jmp
mov
movb
mov
jmp
jmp
xor
jmp
mov
insl
sub
mov
jns
loop
mov
push
aas
sub
pop
mov
addr16
outsl
and
xlat
clc
call
xlat
mov
pop
and
mov
xor
les
out
pop
dec
cld
mov
push
jbe
adc
cli
popf
xchg
mov
stc
insb
add
das
jle
rdtsc
pop
mov
popa
push
mov
xchg
lret
aaa
imul
enter
pushf
lea
je
inc
cmp
cmp
stc
bt
xor
jmp
stos
fldt
xchg
xchg
movsb
pop
test
imulb
rcll
xchg
imul
mov
or
and
and
adc
push
pop
push
sti
xor
xchg
ljmp
sub
push
jecxz
fwait
sbb
mov
cwtl
adcl
xchg
push
call
jge
mov
mov
je
jge
es
imul
fsubl
pop
fistl
push
test
xchg
mov
lods
dec
shlb
sub
sub
or
inc
dec
or
xchg
shll
cmpsl
mov
xchg
inc
mov
arpl
test
mov
les
inc
mov
std
adc
mov
fwait
xchg
adc
fs
ds
mov
dec
jecxz
ret
xchg
std
xchg
stos
fwait
out
push
clc
sub
lods
insl
sbb
push
xchg
rcrl
stos
es
lock
mov
mov
in
shl
movsb
in
test
inc
jns
and
jne
sbb
and
xchg
out
mov
mov
mov
adc
mov
lcall
dec
add
add
loope
jmp
jbe
sub
das
fadds
ljmp
jge
inc
test
lret
jecxz
fcom
cmp
dec
sub
movsb
loop
jne
cmc
in
add
mov
dec
ja
sti
test
dec
sahf
jle
xor
pop
and
xchg
shll
int
mov
dec
cld
cmpsb
fbstp
push
sbb
pop
lahf
test
enter
fwait
ss
mov
sub
in
das
push
mov
arpl
dec
imul
mov
cli
mov
jnp,pt
mov
aaa
adc
dec
add
mov
in
lret
das
add
jmp
sbb
pop
mov
mov
mov
sbb
movsl
addr16
push
sub
inc
sub
enter
cmpsl
xchg
je
mov
dec
pop
lret
nop
subb
insl
stos
push
push
mov
push
inc
mov
sub
lods
mov
das
rcr
into
xchg
loop
pushl
test
stos
mov
pop
push
subl
aad
sub
mov
inc
lcall
add
xchg
cmpsb
insl
xchg
mov
lcall
push
push
neg
rol
cmpsb
mov
inc
jge
rcl
cli
in
or
pop
xlat
jmp
fwait
and
sub
dec
test
mov
mov
aas
rorl
mov
dec
addr16
enter
push
lods
inc
fwait
push
notb
mov
clc
lock
or
add
insl
sbb
int
jb
mov
pop
pusha
aam
shll
mov
fiaddl
jmp
mov
pop
adc
nop
lret
fdivrl
out
test
pop
mov
cmpsb
mov
mov
es
insl
jmp
and
cltd
cmp
leave
lcall
test
jecxz
add
mov
xchg
jb
push
jne
mov
mov
movsb
pop
subb
rcrl
iret
imul
add
and
sub
sbb
inc
mov
sbb
xchg
fcomi
in
lods
cmp
test
push
mov
mov
xor
cli
roll
aaa
ss
inc
mov
inc
mulb
and
mull
pop
lods
stos
mov
push
dec
push
stos
addr16
jno
mov
cmpsl
sbb
jmp
stos
jbe
xchg
jl
or
lret
adc
cwtl
inc
jecxz
sbb
sub
fmuls
xor
mov
aam
mov
shll
inc
or
pop
inc
lret
jmp
and
test
mov
or
mov
popf
out
imul
in
out
adc
and
popa
ret
jbe
movb
int
movb
xchg
shr
jbe
shrb
cld
jle
data16
jb
sbb
or
rcrl
mov
loop
xor
in
cmp
cmp
cwtl
aas
das
mov
repnz
rcll
popf
sti
push
imul
mov
dec
insl
jne
frstor
div
push
dec
insb
sub
and
lods
mov
enter
xchg
out
rcr
pop
fwait
jge
mov
loope
add
push
out
dec
push
ds
mov
push
lahf
add
lods
cmpsb
sbb
mov
xchg
shr
mov
mov
cmp
daa
or
push
adc
mov
ss
push
rcll
xchg
jnp
aad
mov
fisubs
xchg
stos
popl
mov
mov
mov
cmp
bound
mov
xor
test
xor
jb
jge
pop
ss
test
arpl
hlt
xchg
pusha
cmpsb
and
cli
lcall
mov
dec
inc
pop
dec
out
lds
ret
data16
xor
xchg
stc
sbb
mov
movq
xchg
mul
ret
mov
insl
xchg
dec
jne
push
stos
rcr
and
jp
mov
out
push
aad
jmp
aad
rcrl
jbe
lret
call
ret
cmp
jnp
mov
dec
int3
data16
movsl
js
mov
cmp
in
and
addr16
jne
outsb
mov
shrl
pop
jmp
inc
andb
cwtl
ja
ss
push
test
push
cmpsb
sub
shr
xor
andl
cs
outsb
in
sub
push
mov
cmpsb
adc
lods
sbb
jmp
cmpsl
call
cmp
bound
sbb
cmpsl
dec
cmpsb
cmp
jl
pop
popa
mov
pop
mov
repz
das
mov
out
mov
xchg
or
stc
adc
je
fisttpll
leave
or
sbb
rorl
mov
fsubr
cmp
adc
enter
fdivs
and
push
mov
sar
or
mov
push
stos
pusha
sbb
push
vpand
mov
popf
adc
andl
movsb
or
sbb
mov
cwtl
xor
sarb
es
push
imul
jo
inc
jmp
enter
js
pop
leave
push
fwait
popf
push
fwait
outsl
lea
outsb
mov
out
imul
fs
sarl
lds
mov
imul
test
in
and
in
fwait
xchg
ljmp
test
fdivrs
mov
sbb
jecxz
bound
mov
mov
inc
cmpsb
pop
and
jge
je
scas
mov
and
mov
xchg
sbb
mov
test
cltd
adc
sub
pusha
adc
sub
mov
and
rorb
movsl
and
jg
cwtl
fbstp
lahf
jp
xchg
ret
lds
mov
sub
cmpsl
out
push
xor
or
lea
xor
imul
mov
call
ficompl
cmp
cltd
mov
inc
push
test
scas
stos
enter
and
in
lcall
sub
out
cmp
mov
out
and
loopne
enter
dec
xor
aaa
sub
stos
xor
xchg
cs
sub
inc
int
jecxz
mov
mov
loope
pop
shll
out
les
mov
adc
mov
pop
sbb
cmp
jo
jg
sub
mov
jbe
rcrl
rcll
sub
aas
sbb
mov
cmpsb
lret
pop
out
loope
addr16
mov
movsb
test
mov
arpl
cmp
hlt
and
iret
jl
cmpb
mov
mov
out
mov
fisubl
enter
or
or
mov
out
adc
test
lds
and
cli
push
xchg
lahf
enter
fwait
mov
xchg
movsb
inc
test
shrb
mov
xor
lcall
pop
or
mov
mov
jnp
scas
insb
cmpsl
loope
mov
out
repz
mov
jmp
xchg
mov
loope
stc
mov
jle
mov
dec
stos
push
lods
xchg
stc
daa
orl
jne
outsb
orb
dec
mov
xor
arpl
mov
mov
jge
mov
frstor
dec
leave
idivb
fwait
pop
lret
rolb
xchg
test
popa
push
scas
inc
pop
fstpt
insb
xchg
or
jg
push
notb
push
test
mov
add
jl
ror
into
popa
dec
ja
mov
pop
lret
adc
mov
test
jmp
mov
pusha
pop
lcall
pushf
push
sub
mov
roll
xlat
testl
jge
loopne
mov
pop
ret
cmc
lahf
sbb
jne
inc
cmp
cmc
lret
in
mov
out
xlat
mov
dec
loop
mov
loope
cli
xchg
jge
fidivs
out
shl
mov
mov
mov
cmp
cmpsl
push
shrl
cmc
mov
lds
and
clc
movsb
lea
cltd
inc
leave
cmpsl
dec
and
jmp
xchg
stos
adc
adc
imulb
xor
loopne
dec
popf
push
cld
xchg
loopne
in
cmp
or
leave
scas
icebp
mov
mov
adc
scas
jmp
outsl
gs
sbb
mov
or
in
scas
xchg
cmp
fcoml
mov
mov
mov
xor
stos
imul
or
cmp
mov
and
cmp
out
or
push
cmp
out
mov
sti
xchg
xlat
loope
and
in
imul
mov
xchg
clc
imul
jecxz
in
das
mov
mov
mov
outsl
cmp
sub
mov
repz
mov
imul
and
dec
or
sti
sub
and
sbb
push
test
add
adc
lahf
pop
xchg
in
pop
arpl
push
mov
mov
daa
sub
es
push
dec
cwtl
and
call
mov
pop
mov
mov
es
fwait
mov
scas
popf
cmpsb
pop
xor
dec
js
and
cli
mov
mov
cmp
cmp
in
scas
daa
loope
pop
loop,pt
mov
sbb
sub
sub
inc
mov
xor
or
pop
sti
mov
std
cld
xchg
mov
aaa
mov
movsl
xor
add
test
adc
stos
mov
jmp
cltd
push
mov
in
in
in
fcmovnb
fldt
in
call
mov
add
xor
lahf
push
inc
lcall
jl
sub
pushl
inc
movsl
cmp
pop
es
fiaddl
push
imull
sarl
int3
pop
mov
and
stos
int3
add
or
jmp
inc
out
popa
rcll
call
stos
xlat
das
test
ficoml
jbe
test
idivb
cmpl
aas
loopne
sbb
in
push
push
or
loope
jae
ljmp
dec
out
pop
stos
sub
cli
in
jmp
pop
xchg
lods
out
leave
lods
lea
and
repz
inc
mov
rolb
rcll
mov
jecxz
mov
jge
test
pop
hlt
add
cwtl
xchg
mov
mov
dec
mov
cmp
mov
arpl
das
inc
movsb
jecxz
iret
hlt
ss
fnstenv
mov
mov
ror
push
jae
lcall
ret
mov
stos
sub
ljmp
lods
mov
test
popf
stos
cmp
adc
fprem1
aaa
cli
shll
mov
sbbl
cwtl
xlat
ret
inc
jecxz
icebp
dec
popf
jns
cmp
adc
sub
push
icebp
ret
fdecstp
mov
push
xchg
inc
mov
leave
inc
cli
add
test
xor
push
int3
push
mov
loop
imull
or
mov
push
and
xchg
outsb
repnz
outsl
adc
mov
nop
mov
xchg
jmp
daa
lret
inc
pop
loope
dec
add
mov
imul
addr16
stos
test
mov
cli
mov
mov
and
mov
addr16
lds
push
xor
stc
adc
push
fwait
xchg
cwtl
into
out
xor
dec
mov
jbe
sbb
and
sar
push
mov
or
mov
cmpsl
xor
sahf
test
in
xchg
lods
cwtl
xor
ds
std
rcl
nop
lods
insl
xchg
jmp
push
es
movsb
imul
mov
insl
lock
add
in
cmp
cmpsl
sbb
xchg
orl
out
push
js
dec
cmp
mov
insb
xor
popf
inc
jmp
sub
sub
add
in
mov
clc
lods
mov
jmp
inc
out
xchg
scas
jbe
test
lret
lods
dec
mov
mov
xchg
addr16
insb
das
ss
out
jne
add
xchg
call
lea
hlt
sub
nop
outsb
out
les
mov
push
mov
cmpxchg
push
pop
mov
outsb
cltd
addl
or
mov
and
sub
pop
repz
sbb
xor
loope
jmp
pushl
imul
pop
jmp
cs
into
test
rcl
jmp
jbe
pop
mov
sarl
insl
inc
sub
lret
xchg
jp
xchg
shll
push
cmc
cli
leave
ret
cmpsl
push
jge
push
pop
push
frstor
pushf
imul
lahf
push
incb
cmp
push
push
lret
dec
xchg
xor
lods
sbb
pop
jmp
mov
or
stc
stc
cmpsl
push
mov
mov
insb
add
in
mov
clc
stos
mov
xchg
mov
imull
aam
or
cld
nop
addb
fsubs
stc
jle
push
mov
js
cmp
cmpsb
ret
ljmp
loopne
loope
cld
jmp
sarb
repz
lahf
cmpsb
mov
push
xor
sahf
xchg
repnz
add
cli
ljmp
mov
sub
in
sub
and
push
sub
mov
jmp
xor
cltd
sbb
mov
fsubrs
les
in
mov
ror
jmp
mov
call
push
cld
dec
in
sahf
daa
inc
inc
sub
dec
sbb
movsl
sbb
pusha
mov
push
out
addr16
sub
push
inc
test
aam
mov
mov
dec
out
in
in
mov
jnp
cmpsb
xor
push
lret
nop
sahf
les
lds
leave
leave
push
mov
mov
cmp
mov
and
adc
ret
push
xchg
xchg
mov
dec
mov
aam
aad
sub
add
test
mov
xchg
in
sbb
mov
cmp
sub
mov
stc
dec
and
adc
xor
pop
pushl
adc
movsb
ds
cltd
inc
mov
jecxz
mov
xor
mov
and
and
sub
mov
adc
ds
out
sub
orl
mov
pop
sub
not
hlt
and
jne
push
xchg
mov
push
sub
xchg
dec
mov
fiadds
xor
and
xchg
mov
mov
pop
aas
push
mov
mov
es
xchg
sbb
pop
sub
push
and
mov
fldl2e
mov
mov
ja
mov
fnstenv
push
daa
data16
dec
push
pop
and
mov
mov
pop
fwait
cmp
mov
das
test
shll
iret
dec
fstps
mov
sub
rorl
loopne
loope
repz
inc
and
std
testl
lds
call
shll
stc
jmp
xchg
cltd
pop
sbb
jb
push
pop
jbe
jmp
clc
mull
adcb
rorb
lods
sub
inc
addr16
sub
std
aam
jmp
iret
aam
mov
repnz
add
jnp
enter
adc
clc
testl
rclb
cwtl
jns
aaa
cmp
pop
ret
lcall
pop
mov
mov
pop
adc
pop
cmpsb
pop
imul
jmp
mov
mov
xor
xor
scas
test
popf
cmp
jbe
lcall
cmp
rclb
mov
sub
push
mov
and
and
in
mov
std
mov
scas
and
mov
lahf
enter
or
stos
inc
xchg
mov
dec
xlat
push
scas
cmp
aad
and
ljmp
in
xchg
cmp
mov
xchg
push
mov
xor
js
xchg
jb
test
aas
mov
dec
int3
push
jmp
fadd
sti
fdivl
mov
fldt
sub
cmp
scas
int3
scas
lock
or
loop
cltd
mov
loop
movl
sbb
mov
outsb
addr16
xlat
lods
pusha
mov
idivl
mov
mov
cli
aaa
jl
daa
xchg
cmp
loop
mov
jae
adc
insb
out
adc
push
sub
leave
test
pop
fisubs
sti
outsl
pushl
pop
test
or
mov
js
data16
cmp
mov
enter
dec
xchg
scas
xchg
mov
jae
movsb
add
or
in
les
mov
mov
stc
stc
mov
in
stos
stc
mov
inc
jno
sbb
adc
dec
out
add
sti
test
cmpsl
ss
lcall
in
xchg
jb
adc
jmp
sbb
leave
and
mov
mov
mov
jl
out
pusha
leave
daa
stos
push
jb
xor
xchg
scas
inc
cwtl
shll
pop
shll
mov
test
mov
cltd
sti
not
jge
xor
cmp
jecxz
jnp
es
inc
mov
ret
hlt
fwait
xchg
stos
psubsb
dec
mov
pop
pop
adc
and
in
xchg
gs
gs
dec
adc
insl
lock
je
cmc
cli
movsb
jbe
test
stc
test
insl
inc
push
cli
bound
roll
stos
insl
sub
mov
leave
int
lret
inc
sub
shlb
add
mov
sub
inc
aad
adc
mov
shrw
sub
filds
add
jge
std
sbb
or
fsts
push
aad
leave
test
xchg
pop
sub
les
lahf
stos
cltd
lret
nop
test
test
shrb
pop
sub
xchg
mov
orl
add
mov
push
xor
dec
mov
rol
leave
dec
xchg
pop
jecxz
shl
popa
sbb
cmp
aad
adc
and
andb
xor
out
xchg
and
xchg
jne
pop
adc
sub
pop
shrl
xchg
ret
mov
lcall
addb
es
shll
popf
test
cmp
notl
and
lret
addr16
mov
lret
dec
xchg
loope
inc
nop
cmp
xchg
xchg
xchg
push
xor
lret
cmp
inc
and
mov
mov
mov
mov
cmpb
adc
sub
dec
pop
push
sbb
adc
push
out
cmpsl
mov
leave
jmp
jns
mov
cs
mov
sub
sbb
daa
icebp
fmull
mov
cmp
xchg
mov
cs
movsl
push
mov
movsb
in
push
mov
sbb
jmp
add
dec
or
xchg
ret
insl
sbb
mov
xchg
xlat
adc
addr16
stc
add
test
or
loop
or
mov
pop
insl
lcall
clc
adc
addr16
mov
lret
sahf
jp
cld
insl
in
lret
popf
in
jns
push
jmp
shl
je
ret
xorl
xor
xlat
xchg
test
mov
sbb
add
adc
inc
jl
adc
sub
int3
loopne
cltd
mov
out
leave
and
jne
mov
or
lret
inc
in
test
fldt
in
jae
ss
loop
vpsrlw
jno
mov
sub
subl
add
cmp
fcoml
imul
sub
mov
xchg
mov
int
mov
rclb
xor
data16
fs
add
xchg
aaa
insw
mov
cwtl
in
push
lcall
fsubs
fwait
and
cmp
jmp
push
jp
adc
pop
ret
cmpsl
jae
inc
mov
adc
sub
loope
mov
xchg
and
out
cmpsl
rcrl
loop
or
test
enter
aam
in
cmc
out
mov
sbb
rcrl
shrl
lret
xlat
popa
add
fdivs
sub
adc
icebp
pop
add
mov
addl
pushf
lods
cmpsb
mov
aam
adc
push
dec
jp
xlat
xlat
ljmp
push
divl
inc
cwtl
xlat
in
shll
insl
mov
dec
in
aaa
cltd
cltd
or
push
cmp
mov
movsb
cli
mov
cmpsl
sub
scas
add
fisubs
jnp
add
and
cs
fldt
mov
xor
xor
lcall
or
or
std
fwait
mov
and
sub
cmp
dec
std
sbb
scas
mov
scas
mov
roll
xchg
lods
dec
and
mov
es
ja
sbb
je
cmpl
loop
adc
scas
in
and
adc
fsubp
push
jmp
ret
sub
lret
repnz
mov
leave
int
jg
add
mov
icebp
cltd
ds
pop
sbb
add
imul
sbb
jbe
cmpsl
popf
cmpsl
push
lcall
mov
xor
mov
int3
fwait
mov
and
sub
lea
cmpsl
mov
fwait
cmpsl
jb
fcoms
mov
mov
cltd
movsl
and
mov
into
jecxz
mov
mov
arpl
out
and
mov
orl
flds
pushf
jecxz
orl
mov
xchg
mov
out
imul
mov
xor
xchg
fcomps
out
fsubs
in
xor
mov
cwtl
shlb
pop
mov
outsl
pop
xchg
inc
loope
xchg
xchg
cmpsl
out
sbb
sahf
rcll
mov
lcall
cmpl
mov
test
lods
mov
scas
add
orl
inc
mov
xchg
loopne
shl
fcoms
xor
mov
cltd
inc
mov
scas
mov
lcall
clc
mov
lahf
cltd
mov
mov
leave
mov
fstps
xchg
in
jp
cli
lea
sbb
adc
mov
cmpsl
lcall
cmpsl
mov
mov
mov
cmpsw
xor
cmpsl
cmp
jecxz
mov
push
xchg
mov
mov
xchg
jecxz
add
out
cltd
adc
push
mov
mov
mov
mov
mov
xchg
inc
mov
xor
bound
mov
xchg
leave
cwtl
jle
cmp
cmpsl
jmp
mov
scas
leave
pop
pushf
or
adc
xor
add
jae
mov
xor
cwtl
xor
cs
xor
push
adc
xchg
pop
insl
add
cmc
cmp
mov
mov
cmc
xor
jmp
add
sti
push
stc
shl
inc
mov
ja
fs
mov
shll
lcall
popf
jno
xchg
pop
in
xor
popf
loop
mov
pusha
cltd
or
shl
jecxz
fwait
lret
mov
ret
and
xchg
in
hlt
aas
mov
adc
xchg
mov
movsl
xchg
adcl
in
sub
das
xchg
popa
mov
fisttpl
fwait
loope
xchg
adc
lods
fwait
jae
es
mov
dec
repz
out
mov
xchg
in
adc
mov
outsl
inc
aas
xchg
xchg
stos
inc
aaa
mov
pop
sub
into
loopne
outsl
cltd
ds
aam
jg
cmp
jmp
push
jne
lea
sbb
stos
test
lret
mov
test
mov
lret
scas
ja
jg
mov
andl
mov
cmp
adc
mov
stos
mov
mov
addr16
jg
push
mov
sub
sub
add
cld
push
movsb
xor
sub
pop
dec
leave
dec
pop
xlat
xor
mov
in
nop
jo
test
push
lods
inc
and
sub
xchg
mov
push
dec
adc
and
push
push
mov
cwtl
inc
dec
sub
iret
jle
scas
out
stos
sub
push
or
sub
adc
pop
repz
xchg
rclb
jne
cltd
sub
sub
leave
loopne
cmp
mov
mov
leave
jno
pop
movsl
push
mov
sub
inc
pop
xlat
cmc
rcl
stos
xor
mov
orb
roll
pop
aad
mov
xchg
pop
adc
jnp
ret
mov
lret
mov
leave
notb
push
mov
sub
and
mov
test
dec
test
lods
mov
xchg
push
ss
push
scas
lret
cmp
stos
push
mov
fs
sbb
mov
popf
out
loop
push
mov
and
shl
sbb
lods
sbb
repz
jne
add
roll
mov
push
sub
cli
jmp
mov
test
shll
push
dec
mov
lods
fistpl
jmp
orb
mov
mov
adc
mov
mov
xchg
mov
mov
jmp
subl
testl
sbb
pop
and
and
mov
stos
mov
inc
cmp
xor
cmp
xchg
pop
ds
adc
dec
loop
inc
cmpsl
cmp
adc
sbbl
and
inc
imul
lret
xlat
shll
sahf
mov
and
lcall
cltd
xchg
pushf
jb
pop
mov
ljmp
dec
aad
mov
subl
sbb
mov
fwait
popf
cli
inc
mov
and
roll
test
cmpsl
lcall
out
outsb
es
or
jae
xchg
test
sub
fs
aas
cmp
pop
jmp
test
sbbl
shr
or
je
test
mov
test
shlb
cwtl
ss
addr16
es
popf
pop
movsb
mov
mov
aam
sbb
mov
lahf
mov
loop
xor
je
in
xchg
insl
adc
loop
test
arpl
mov
call
dec
shl
push
dec
push
cmp
sti
jb
pushf
lahf
push
mov
js
push
shl
sub
adcb
shrl
outsb
test
cmp
cmc
ja
sti
ss
xchg
cmc
xor
hlt
stc
shrl
sub
push
leave
lret
add
jbe
cmpsb
in
xor
sbb
push
adc
jbe
stos
push
fnclex
inc
mov
push
outsl
inc
inc
mov
adc
adc
mov
or
and
mov
dec
data16
and
scas
and
xchg
push
mov
movsl
cli
sbb
sbb
pop
rcll
lahf
pop
and
cmp
stc
sbb
add
insl
inc
daa
mov
and
icebp
dec
mov
gs
rorl
or
sarl
inc
mov
push
mov
dec
in
mov
push
movsl
cli
aad
xchg
int3
pop
mov
add
mov
lods
lods
inc
pop
push
pop
inc
dec
push
rorl
cmp
js
mov
in
out
dec
jmp
es
cmpl
mov
pop
cltd
push
pusha
mov
mov
cmp
mov
push
subb
cmp
cmp
enter
mov
cmpsb
stc
leave
mov
sbb
add
lock
out
cmp
add
xchg
int3
add
popa
push
sub
ret
and
sbb
and
les
loopne
sbb
addr16
insl
test
outsb
rol
dec
sbb
and
cs
int
mov
leave
sub
lock
test
mov
movsl
fidivrs
loope
mov
fstl
lcall
insb
ss
popf
sti
jmp
mov
addb
jmp
loope
add
fxch
test
xchg
adc
mov
and
ret
inc
adc
ss
aas
mov
mov
dec
pop
xlat
data16
mov
and
mov
sbb
mov
movsl
ror
daa
push
into
int3
neg
pop
popa
adc
sub
mov
lret
xchg
movsb
xchg
sub
cmp
xchg
adc
xchg
out
jmp
jmp
enter
ret
das
push
mov
mov
push
cmp
fwait
divl
mov
decb
mov
adc
lahf
dec
leave
ja
dec
xor
popa
dec
cmp
insl
dec
loope
ret
ds
adc
mov
mov
fs
xchg
pop
rcll
jmp
roll
shlb
and
cmpsl
int
jmp
sarb
cmp
test
enter
pop
scas
mov
frstpm(287
or
xchg
jno
jno
aam
mov
pushf
or
fildl
cmp
cmp
data16
adc
sahf
cmp
mov
cltd
sti
out
movsl
cli
stc
bound
or
loopne,pt
shll
sbb
test
aaa
enter
add
xchg
adc
or
jmp
or
clc
js
shlb
pop
mov
add
xor
or
stc
aas
in
mov
fsubrs
daa
dec
xchg
push
xor
out
push
jmp
lock
pop
jae
add
push
jecxz
fildl
dec
das
xor
mov
push
xchg
lret
mov
lods
int3
add
mov
jecxz
and
mov
mov
jbe
pop
mov
andb
sar
mov
xchg
pop
std
sub
lret
pusha
pop
xlat
cmp
sub
xchg
xchg
test
fnstcw
test
lcall
sub
lods
dec
xchg
sbb
mov
pushf
and
ja
cltd
jb
mov
loope
mov
xor
push
divl
xchg
xchg
cli
sbbl
popa
loop
adc
mov
dec
sbb
pop
mov
lahf
sahf
mov
mov
or
fnsave
int
xchg
cltd
inc
mov
popf
push
out
insb
mov
mov
cltd
add
mov
xchg
inc
ljmp
rcr
clc
cld
pop
rcll
in
jmp
cmc
jne
cwtl
ljmp
mov
aaa
dec
stc
pop
or
xchg
push
es
sbb
dec
cli
popf
rorl
jns
out
and
fisubl
jg
aas
push
mov
mov
jns
in
je
sub
pop
and
mov
inc
mov
pushl
jo
jmp
inc
sahf
push
inc
test
les
mov
jne
rcrl
ss
mov
aas
stos
test
dec
xor
test
sti
sbb
std
divl
pop
enter
or
inc
add
xchg
sar
sbbl
mov
push
cld
push
mov
clc
xor
push
movsl
or
sahf
fucom
fsubs
data16
icebp
lret
addl
mov
enter
cmpsb
inc
out
cmp
mov
movsl
mov
mov
out
insl
mov
xor
stc
cmp
xor
pop
sar
and
stc
mov
inc
adc
mov
je
mov
sbb
daa
pop
out
lahf
aas
testl
dec
js
sub
std
inc
ret
push
ss
adc
mov
inc
ret
idiv
movsb
mov
js
ds
mov
inc
dec
sbb
in
sbb
ja
scas
mov
mov
jmp
cmpl
pop
adc
cwtl
mov
adc
popf
push
sub
pop
orl
cmp
xchg
pop
pop
jge
xchg
add
out
fnstsw
outsl
test
xchg
fidivs
mov
testb
lea
jmp
pusha
jmp
pop
and
sbb
sarl
stos
scas
push
dec
jmp
jmp
adc
sub
cwtl
pop
faddl
jbe
test
movsl
cmp
jmp
loop
mov
sbb
xor
jns
out
sbb
shr
jno
sub
xor
jg
iret
mov
insb
mov
aaa
cmp
xchg
mov
in
lds
loopne
push
push
rcl
adc
adc
inc
fcmovu
std
jmp
push
loope
nop
jge
jbe
cmp
jmp
mov
dec
lea
jg
xchg
sbb
hlt
mov
rorl
pop
icebp
cld
mov
imul
jb
les
jle
aaa
fwait
sub
test
gs
xchg
push
push
xchg
lock
add
decl
jo
sti
imul
lea
and
xchg
popf
std
cmp
decl
mov
fs
pop
push
out
lahf
test
xchg
stos
jne
xor
xchg
xchg
or
stos
ds
and
mov
stos
sti
aam
and
lods
hlt
test
mov
cmp
sti
mov
mov
iret
mov
popa
fwait
jne
ljmpw
cmp
push
repz
mov
cltd
lret
sarl
jmp
cwtl
rcr
test
inc
cltd
add
cmp
xchg
jg
jmp
fsubrl
lahf
fs
notb
sarl
imull
ss
sub
hlt
sbbb
push
jno
adc
and
mov
or
mov
sbb
movsl
mov
or
icebp
push
or
xor
pop
sbb
push
scas
lret
lods
rorl
add
push
dec
iret
jmp
leave
jmpw
subl
shll
jmp
cmc
jp
mov
test
xor
div
push
nop
mov
cmc
sub
inc
xchg
shll
sarl
mov
jmp
mov
mov
or
pop
mul
jp
xchg
cld
aaa
push
jb
ret
mov
stos
setge
sbb
dec
loopne
mov
sub
lea
rcll
shll
xor
add
test
out
add
in
inc
xor
pop
hlt
adc
sbb
sahf
fwait
inc
jo
insl
int3
scas
jns
test
adc
enter
sbb
adc
shll
fidivs
ficoml
js
or
shll
push
ret
ret
ja
xchg
push
jbe
lods
mov
xlat
test
sbb
push
xorb
pop
lahf
ret
test
mov
cltd
pop
jecxz
push
mov
cmpsb
mov
mov
xchg
pop
in
ret
cmp
jbe
mov
or
mov
stos
cmpsb
mov
cld
scas
int
mov
and
xchg
shll
dec
mov
out
mov
push
inc
xchg
js
mov
test
cmpl
pushf
scas
xor
add
ja
xor
dec
data16
adc
and
movb
inc
mov
dec
inc
pop
mov
push
xor
adc
sbb
sbb
pusha
dec
mov
sahf
push
movsl
fsts
out
cmp
inc
adc
aas
shll
mov
sbb
dec
sar
xlat
add
jl
xchg
je
ja
xchg
jge
loopne
insl
pop
dec
rcll
leave
js
cltd
stos
bnd
js
pop
ljmp
xchg
jmp
xor
mov
xchg
iret
jnp
mov
cmpsb
hlt
inc
xchg
jecxz
sub
xchg
adc
shll
add
adc
fs
into
ss
adc
sti
push
push
and
xlat
jp
rorl
pushf
push
sub
jmp
sub
pop
data16
test
cld
pushf
xor
testb
mov
mov
mov
mov
xchg
xchg
iret
push
mov
das
repnz
dec
mov
mov
mov
and
push
popf
rol
mov
cmpsb
inc
dec
cmpsb
sbb
and
leave
add
or
mov
mov
loop
cmp
sarb
and
mov
aaa
mov
xor
inc
orb
inc
mov
add
not
outsl
in
cmpl
xchg
xchg
imul
mov
dec
mov
jbe
xlat
rcrb
pop
push
mov
jmp
and
out
sbb
sbb
xchg
outsl
dec
mov
xor
xchg
add
cmpsb
adc
pushf
stos
mov
incb
mov
and
out
dec
jmp
xor
xor
sub
das
cmp
movsl
xor
push
scas
push
dec
lock
dec
sbb
dec
mov
xor
mov
mov
dec
addr16
jecxz
cli
mov
mov
push
je
jge
addl
add
sarb
lock
sbb
or
sub
mov
subl
ljmp
push
stc
sub
stos
push
adc
mov
dec
fxtract
leave
adc
scas
add
gs
cmpsl
aam
or
fwait
mov
sbb
cmpsl
in
add
cmpsb
adc
add
imul
and
dec
and
movsl
ret
sbb
popa
popa
xlat
sbb
mov
mov
sub
add
shll
insb
mov
mov
popf
lcall
xor
jp
dec
rolw
mov
inc
adc
ja
cli
cli
shr
jg
jb
inc
arpl
xchg
jmp
push
mov
aad
mov
sti
std
jg
mov
insl
jmp
ret
xchg
jmp
cmpsb
pop
movsl
sub
leave
sahf
pusha
mov
sub
push
imul
sarl
jmp
mov
cmp
ds
movsl
and
xor
jge
jae
jae
sti
out
aam
mov
and
fdivl
ret
push
jmp
cmpsl
mov
shll
ds
scas
mov
jno
adc
mov
and
notb
xor
cmpb
sbb
jbe
ret
ja
stos
lret
xor
fisttpl
sub
shr
out
mov
add
adcl
aad
stos
test
mov
rol
add
push
inc
stos
jbe
mov
sub
scas
aaa
push
and
or
loop
addl
push
or
mov
cltd
in
jg
out
addl
fsubl
cmp
mov
sarl
pop
mov
sbb
fcmovb
pop
cmpb
jp
popf
aaa
sahf
and
cmp
cmp
stc
lahf
cs
or
adc
jmp
mov
push
cmp
test
mov
test
xchg
je
and
movsb
das
mov
lea
fisubrs
popa
add
enter
stos
in
pop
popf
and
ja
pop
xor
push
xchg
orb
sub
bound
mov
xchg
and
leave
push
idivl
mov
inc
nop
mov
lds
repz
sbb
adc
sub
xchg
mov
inc
add
test
mov
push
mov
aad
sbb
cmpsb
pop
push
lods
mov
mov
outsb
stos
lahf
pop
dec
mov
bound
jg
and
mov
popa
std
outsb
adcb
and
sub
pop
je
loopne
mov
sbb
insl
cmp
sub
dec
and
pop
mov
sub
bound
inc
ja
out
cmpsb
dec
out
es
xchg
mov
add
nop
inc
inc
loope
stos
xchg
add
in
mov
daa
jnp
out
sbb
push
sbb
leave
and
dec
inc
jmp
test
mov
mov
dec
push
or
lahf
dec
jl
enter
add
jp
xchg
nop
cmp
jno
stos
mov
jb
mov
iret
inc
ja
xchg
scas
and
jo
mov
in
mov
fstpt
mov
es
clc
lret
and
jae
sub
dec
mov
mov
dec
xorl
nop
jmp
or
or
lcall
push
push
and
or
mov
leave
mov
inc
cmp
mov
ss
inc
xor
mov
out
cmp
or
ret
cmpsl
xor
inc
mov
test
cmp
push
cltd
xor
adc
fcoml
xchg
popf
fld
mov
inc
mov
mov
or
sub
aaa
mov
sti
xchg
add
dec
ljmp
js
out
lods
sahf
inc
test
pcmpgtd
fisubs
adcl
mov
mov
orl
nop
xor
shrl
cld
test
mov
pop
jg
mov
push
dec
and
lcall
sub
xchg
xchg
adcb
or
xor
or
mov
test
int3
jp
mov
ljmp
les
push
rol
sub
pop
loop
add
jmp
mov
pushf
push
or
bound
hlt
arpl
xlat
out
mov
mov
inc
mov
jp
mov
rcll
out
and
fstpt
fstpt
movsl
pop
xorl
jg
mov
xchg
notl
out
mov
adc
fwait
mov
pusha
loope
shll
mov
ds
pushf
and
mov
rep
fcmovnbe
outsb
mov
aas
mov
jb
into
inc
push
pop
icebp
jg
cwtl
mov
add
ds
xor
xor
leave
popa
xchg
or
mov
ds
shlb
sarb
pop
jnp
loope
shll
adc
movsb
data16
shrl
sbb
xchg
xor
sbb
xor
js
mov
bound
into
popa
sbb
mov
xor
xchg
jg
sub
or
lea
movsb
sbb
push
repnz
lcall
and
sub
stos
imul
mov
in
and
sbb
push
push
icebp
aaa
arpl
mov
mov
fsubrl
jnp
xchg
mov
std
mov
adc
ret
mov
addr16
dec
mov
popf
mov
aaa
scas
dec
and
sub
adc
popf
lods
xor
in
les
call
cltd
mov
rclb
pop
les
mov
es
leave
stc
mov
sub
mov
aaa
and
push
gs
cmpsl
mov
mov
popa
adc
jo
enter
cmpb
xchg
xlat
xchg
mov
fisttps
mov
mov
and
rclb
and
mov
mov
aam
dec
inc
aam
sti
scas
in
push
pop
xchg
mov
mov
xchg
dec
sbb
in
push
loope
rcrl
and
jb
aaa
lahf
sbb
push
movsl
dec
icebp
cld
mov
pop
dec
stos
xchg
push
mov
cmp
mov
jecxz
add
dec
cmp
mov
pop
adc
adc
ljmp
push
je
mov
lret
xor
lret
jbe
lret
mov
movsl
sub
push
push
jle
and
pushf
pop
ret
push
lret
mov
rorb
sbb
or
and
aas
push
inc
lret
decl
add
pop
pop
test
rol
mov
cltd
push
cmp
not
ret
mov
push
sarb
jae
mov
fcomi
maxps
ljmp
cmp
cmpsl
fsubl
xor
cmpsl
mov
xchg
push
cmp
and
aaa
rol
add
mov
sub
out
into
fmull
cli
stos
call
xchg
xor
fwait
jmp
sbbl
iret
aas
mov
jmp
and
fcoml
insl
jns
dec
mov
je
shl
cs
jecxz
shrl
adc
mov
mov
cmp
mov
and
rcr
fstpt
sub
xor
and
mov
sub
mov
fdiv
out
shlb
loope
jbe
jmp
or
shrl
mov
mov
stos
or
jnp
cmp
mov
sub
inc
sti
mov
test
push
pop
fisubs
mov
adc
testb
cmp
in
inc
xor
addl
lahf
adc
aas
shlb
icebp
loope
aad
popa
inc
xchg
xor
dec
pop
loope
sub
xor
loope
sbb
inc
data16
addr16
xor
sub
inc
xor
dec
inc
ss
xchg
push
mov
ja
movsl
mov
orl
push
fstps
inc
idiv
sbbl
roll
nop
xchg
dec
loopne
xor
xor
mov
add
test
mov
xchg
movsl
sub
sub
shl
stc
dec
add
je
loop
cmp
andb
push
push
test
mov
roll
mulb
scas
addl
mov
mov
lahf
add
popf
mov
leave
pop
mov
loop
mov
out
add
test
es
stc
dec
cmpsb
push
sbb
mov
addr16
sub
sbb
dec
mov
es
loop
pop
cltd
imul
xor
lds
aas
mov
mov
imul
mov
loope
inc
jmp
cmp
inc
repnz
into
ljmp
les
mov
movsb
popf
or
dec
mov
inc
movsb
push
repnz
in
jae
cltd
adc
sti
or
sbb
xchg
out
cwtl
sahf
lods
inc
loopne
loop
imul
out
movsl
test
in
mov
cmpsl
and
out
inc
mov
cmp
adc
adc
cmc
mov
mov
xchg
xchg
insl
xor
das
sub
inc
inc
xor
adc
mov
sub
sub
jno
push
gs
add
xchg
mov
pop
pop
mov
loop
mov
cmp
divb
cmp
enter
adc
icebp
bound
imul
shll
push
jge
xchg
out
mov
jae
ljmp
pop
int
pop
test
ss
ret
je
nop
pop
cmp
not
test
xor
pop
pop
or
mov
cmp
xchg
adc
mov
jb
xchg
sbb
mov
mov
loop
pop
xchg
fiaddl
mov
jmp
inc
xchg
loopne
or
cli
test
xchg
jmp
cmpb
jp
adcl
mov
jmp
mov
subb
cmp
cwtl
pop
clc
xchg
gs
cs
cmpsl
rolb
test
test
test
push
test
ja
cmc
adc
icebp
adc
inc
or
inc
xor
dec
mov
add
loop
dec
mov
lret
lahf
out
ret
push
idivb
dec
sub
inc
lahf
xchg
loop
mov
xor
cmp
into
cmpsb
aaa
out
out
push
jne
xchg
xchg
dec
and
jae
test
leave
adc
test
repnz
popa
popa
loop
test
cmc
int
es
test
mov
add
xchg
ja
mov
xlat
sub
test
nop
ror
xlat
imul
lret
push
jb
and
lods
xchg
in
iret
movsb
add
cld
or
movsl
push
mov
rorl
pop
insl
push
xor
fcoms
cltd
mov
inc
scas
xchg
rcr
or
stc
xchg
push
mov
fists
sti
jecxz
or
cltd
pop
outsb
adc
dec
mov
pop
sti
jge
ss
mov
es
sbbb
fmull
or
in
jns
adc
stos
test
testb
jmp
push
inc
mov
xor
pop
andb
sub
in
fiadds
mov
mov
sti
adc
push
xor
add
mov
mov
jp
sahf
mov
pusha
xor
or
in
leave
loope
ror
ficoms
jle
or
jmp
pusha
adc
dec
popa
mov
das
inc
hlt
sbb
test
arpl
into
mov
inc
jnp
cs
cmp
lock
pop
xor
jb
adc
jo
rcll
push
cmpb
or
cmp
sub
rol
or
insb
pop
sbb
lods
inc
stos
dec
outsl
push
lret
sub
in
mov
leave
aam
int3
xor
xor
call
bound
test
fists
dec
jg
fcomp
insb
jl
fidivrs
loop
sub
add
cmpsl
fcomi
dec
outsb
ds
movsl
cmp
arpl
js
addr16
pop
lods
mov
cmpsb
sub
mov
mov
lea
pop
cmpsl
xor
jb
mov
shrl
cltd
xchg
mov
outsb
ret
stos
shrl
lods
stos
xor
add
shll
inc
out
aaa
mov
ficoms
in
xchg
xchg
lcall
popa
int
mov
sbb
and
and
fistpl
jb
mov
cmpsb
rorl
cld
stos
push
sub
or
pop
lds
sbb
jo
mov
insb
and
cmp
popa
popf
mov
xchg
popa
xchg
stos
sbb
leave
cwtl
mov
mov
mov
test
sahf
fcmovnu
mov
jp
or
imul
test
addr16
pop
push
stos
pop
sub
mov
mov
mov
hlt
fcmovu
scas
mov
cmpsl
jmp
xchg
jge
andl
mov
push
mov
fcompl
cmovge
cmp
mov
imul
addb
mov
stc
test
add
mov
push
bound
push
shll
rclb
mov
stos
xchg
mov
mov
inc
aas
inc
mov
mov
pop
insl
lods
sub
or
push
jae
enter
jno
or
jge
ss
test
leave
outsl
hlt
addr16
add
add
xchg
mov
icebp
inc
xchg
nop
pop
pop
cmp
insl
xchg
popa
xchg
adc
cmp
lret
je
xchg
aas
cld
mov
pop
mov
push
xchg
mov
fdivl
adc
jne
rorb
dec
mov
sti
cmpsl
cmc
mov
sbb
mov
test
xor
ror
sbb
stos
mov
add
in
sbb
xchg
outsb
cli
rcll
dec
xchg
aaa
inc
insb
xor
mov
xorb
ja
sub
mov
ljmp
xchg
addb
adc
mov
jg
jle
fwait
or
es
mov
andb
leave
cmpsb
lahf
jne
out
test
fwait
stos
pop
add
popa
sbbb
gs
jge
jmp
mov
inc
clc
or
gs
stos
sub
out
movsl
mov
sbb
jae
mov
push
ljmp
mov
xchg
cltd
mov
dec
jne
fisubl
pushf
dec
inc
lret
mov
stos
or
fbld
lods
jg
xor
das
ret
lcall
jae
push
jecxz
cwtl
mov
in
mov
mov
cmp
ret
lods
lahf
lahf
mov
adc
sub
adc
stos
mov
mov
mov
fdivl
xchg
inc
movsb
lods
rol
xor
sbb
daa
daa
ret
lahf
mov
imul
leave
sub
or
sub
stos
arpl
fs
popf
jmp
jo
add
sub
xor
sbb
das
shrb
in
les
mov
mov
sub
dec
roll
std
scas
loop
fnstenv
test
pop
ss
loopne
jno
mov
popf
cld
mov
cmpsb
mov
scas
inc
sarl
jne
jmp
mov
ja
sub
add
icebp
pop
iret
mov
mov
add
rorl
mov
xchg
mov
inc
es
mov
pushf
clc
pop
push
ss
jmp
test
subl
cmpsl
mov
into
or
ljmp
pop
xor
pop
icebp
jl
test
dec
cmc
jae
mov
in
push
lcall
mov
push
repnz
xor
mov
insb
add
xchg
in
addr16
idivb
push
mov
inc
push
aaa
push
xor
mov
push
stos
adc
ja
aad
data16
mov
cld
add
fwait
pushw
std
xor
adc
xor
loop
xchg
xor
les
icebp
or
push
xor
loope
mov
mov
test
dec
fstpl
loope
stos
mov
in
leave
out
mov
loopne
sahf
add
xor
mov
sub
add
clc
fisttpl
xchg
mov
pop
stos
addr16
jae
pop
pop
sub
ret
xor
in
add
arpl
add
add
outsl
cmp
mov
push
cmpsl
sbb
repz
aas
fwait
xorb
cmp
mov
xchg
imul
jmp
or
enter
mov
pop
sbb
cmpsb
lcall
cmpsb
inc
movsl
and
ret
cmc
clc
test
mov
mov
or
mov
lret
fnsave
inc
ljmp
mov
mov
mov
dec
enter
out
sbb
scas
push
pop
stos
movsl
rcr
sub
mov
repnz
xor
pushf
or
sti
mov
mov
cmpsl
push
push
test
push
pop
mov
fstps
or
and
or
cli
push
pop
xchg
or
inc
mov
arpl
fldenv
mov
sub
jge
cmc
xor
fisttpll
leave
add
test
test
adc
movsb
ljmp
sub
repz
jmp
push
mov
lret
mov
test
insb
sbb
scas
fists
inc
xchg
test
daa
and
pop
es
mov
mov
gs
sarl
mov
xor
push
push
orb
shlb
jbe
mov
subb
dec
mov
lret
sub
pop
or
push
fsubl
subl
mov
xchg
mov
mov
push
xorl
xchg
repz
mov
sbb
psubd
out
mov
fiaddl
rcll
and
aas
shll
xchg
push
xor
lea
push
push
cmp
stos
mov
inc
popf
mov
mov
lahf
rorb
jmp
rorb
mov
fstpl
lahf
push
or
dec
xchg
cmp
test
or
or
mov
loop
xchg
sahf
repz
add
inc
mov
sub
cld
sub
push
les
btr
and
xchg
sti
fs
dec
sbb
adc
sbb
in
out
push
pushf
xor
aas
fwait
cli
jbe
leave
ss
pop
cmp
stos
mov
push
jne
xchg
wrmsr
sbb
leave
nop
xchg
fsubrl
jmp
fwait
mov
incb
xor
addr16
sti
hlt
mov
out
out
sbb
decb
shl
mov
clc
jmp
push
dec
mov
xchg
out
test
cmpsb
jno
ja
sub
push
loope
push
xchg
scas
ficomps
mov
add
and
jo
mov
int
inc
lcall
mov
jne
test
rorl
push
xchg
xchg
hlt
or
jmp
add
sahf
ret
inc
dec
loopne
aad
xchg
daa
lods
or
mov
add
stc
divl
sub
stos
ret
push
push
jnp
xchg
jnp
pop
jecxz
inc
jmp
mov
mov
pop
mov
jb
cld
jmp
adc
mov
jae
stc
push
and
adc
push
xor
xor
xchg
cli
dec
and
cmpsl
popf
jl
hlt
aam
daa
test
lock
cltd
lcall
rcr
call
out
xchg
divl
mov
lret
ljmp
fwait
daa
fbld
adc
test
and
hlt
fdivs
mov
jmp
push
cmp
pop
subl
xor
push
mov
popf
ret
out
mov
or
shrl
in
stc
imul
cmp
mov
negl
ja
ja
repnz
xor
nop
icebp
mov
jae
sbb
jmp
and
mov
push
std
enter
fmull
rcrl
xlat
adc
insl
dec
loop
gs
xchg
aad
and
mov
outsb
dec
cmp
mov
sbb
sti
cmpsb
xchg
cmp
or
movsb
repnz
mov
pop
shll
arpl
sub
jp
cmp
mov
push
mul
call
pop
fnstcw
shll
cmp
lods
mov
fstl
push
and
je
mov
inc
ljmp
rcr
xchg
adc
mov
out
and
test
jmp
mov
loope
sahf
jmp
hlt
add
das
dec
divl
popa
xchg
mov
cmp
enter
sub
add
imul
dec
adc
jno
dec
movsl
add
dec
jmp
enter
add
pop
ss
lds
and
or
mov
sbb
jns
push
fwait
loop
lods
loop
and
xchg
xchg
xor
mov
or
add
testl
xor
fisttps
divb
in
rorb
jmp
aaa
mov
xchg
add
mov
jne
xor
scas
cs
lods
test
mov
sbb
stc
lea
mov
push
sub
inc
dec
rorl
push
or
cs
mov
mov
push
test
mov
movsb
popa
ficomps
mov
stos
stos
test
sbb
and
adc
xchg
scas
loope
test
out
fwait
in
scas
xchg
data16
and
xor
cmc
mov
sahf
into
stos
pop
jnp
gs
test
inc
in
lods
data16
lods
sbb
dec
aas
xchg
inc
or
jl
lahf
adc
xlat
mov
inc
test
js
test
in
shrb
in
adc
inc
out
btc
add
testb
enter
mov
es
fcomp
dec
jnp
fwait
aad
pop
xchg
mov
mov
jmp
hlt
in
imul
mov
das
and
mov
fadd
xlat
aad
inc
repnz
out
inc
cli
mov
push
aad
loopne
sbb
scas
imull
pop
cmpsb
test
ds
push
leave
mov
xchg
bound
adc
bound
mov
arpl
hlt
clc
sbb
cmpsl
adc
enter
ret
adc
push
dec
notl
or
je
push
mov
test
scas
fidivrs
test
sti
shrb
and
mov
xchg
shll
shl
enter
ss
pop
xchg
aaa
rorl
test
sti
mov
xchg
negb
int3
in
mov
test
outsl
arpl
ljmp
cmp
xchg
lock
inc
fbstp
testb
movsb
sbb
xor
mov
movsb
mov
js
scas
pop
xor
and
popf
mov
xchg
or
cmp
xor
hlt
mov
mov
xchg
xchg
lret
mov
dec
and
movsl
adc
mov
xor
shll
mov
in
and
push
out
jmp
ss
js
rolb
lss
or
aas
pop
ljmp
rorl
sar
mov
jmp
lcall
mov
stos
fmull
pusha
cli
lods
ficomps
xchg
add
pop
shll
sbb
mov
sti
jge
or
rol
push
push
cmp
out
aaa
mov
lahf
dec
aad
fwait
mov
xchg
int3
cli
mov
popf
movsl
gs
mov
stos
mov
or
jmp
dec
mov
xchg
movsb
xchg
psubq
pop
mov
cwtl
xchg
sbb
negb
push
dec
sub
mov
jmp
js
mov
inc
mov
dec
mov
dec
mov
sbb
sbb
mov
popa
sbb
mov
mov
lds
cltd
mov
sbb
mov
push
lods
cltd
pop
mov
loop
fdivl
sub
cmp
shlb
xchg
jmp
adc
push
cmp
lahf
fnstcw
add
stos
data16
sbb
insl
and
inc
jl
fldt
mov
stos
xchg
add
sbb
call
mov
xchg
cmp
xor
enter
test
xor
cmp
push
js
push
roll
mov
fldt
jne
push
xchg
sub
and
leave
int3
jg
mov
add
push
cmp
sti
and
jg
mov
mov
outsb
xor
add
test
imulb
rcll
aad
or
fcompl
mov
mov
outsb
sub
sbb
dec
jne
pop
arpl
rcrb
mov
in
mov
mov
aas
aam
mov
adc
cmc
cmp
sub
in
test
mov
dec
dec
popf
pushf
add
and
dec
mov
or
dec
aam
aas
fprem1
movsl
cmp
cli
inc
shrl
adc
loop
dec
divl
jbe
jb
or
or
in
mov
movsb
add
cmp
lret
push
lret
xchg
mov
or
xor
jmp
ljmp
sahf
cltd
inc
mov
incl
leave
repnz
add
cwtl
cmpsl
pop
add
add
inc
jnp
fldenv
faddl
ss
in
call
mov
mov
addr16
adc
xlat
push
movsl
mov
test
inc
adcl
gs
clc
shlb
adc
push
mov
sbb
xlat
je
sar
xchg
adc
push
outsl
sbb
jmp
and
cmp
cmpsl
rorb
inc
leave
add
imul
sarb
sub
outsl
cs
popa
mov
movsb
inc
mov
push
test
cltd
repnz
les
scas
xchg
dec
xchg
sbb
mov
mov
sahf
add
push
sub
shrl
dec
mov
jo
dec
ss
pop
mov
nop
sbb
mov
out
shrl
mov
sbb
ret
test
lcall
lods
ret
notb
xchg
cmpl
loope
pop
in
fisubrs
pop
aaa
pop
in
js
loop
scas
mov
xchg
jae
mov
ret
dec
add
cmp
xchg
mov
je
data16
xor
stos
xlat
mov
mov
xlat
outsb
jp
pusha
cmp
cs
int
cmp
les
mov
in
jo
negb
stos
sub
cmc
push
imul
lcall
cmpsl
jae
jo
or
adc
or
add
mov
cwtl
lar
cmpsl
shrl
lret
xchg
stos
ret
rorl
dec
mov
arpl
sub
or
xchg
sbb
and
jae
js
adc
jne
fdivrs
jecxz
push
inc
addl
xchg
xchg
int
int3
mov
and
insb
jge
shr
mov
mov
cmp
fbld
xchg
or
mov
push
pop
sbb
mov
xlat
lock
pop
outsb
sub
iret
out
ret
sbb
sarl
pop
add
pushf
push
hlt
clc
pusha
hlt
out
mov
xchg
mov
cld
inc
lret
or
in
sub
xor
ja
xchg
stos
cli
mov
cmp
popf
sub
mov
mov
insb
aas
out
popf
es
pusha
mov
clc
and
xor
stos
jo
scas
mov
sarl
lret
jmp
divb
xor
mov
aam
aam
mov
fcmovne
dec
leave
int3
mov
in
jae
mov
data16
fmull
push
and
sub
inc
push
rcll
add
mov
mov
jo
mov
enter
inc
sub
mov
adc
jp
aas
mov
adc
shl
loop
imul
fmuls
jge
rcll
mov
lret
and
addr16
mov
push
outsb
jne
cmp
jmp
or
and
mov
xor
rcrb
mov
lods
sbbl
and
sub
rorl
stos
cmc
divl
jmp
aas
sbb
fs
mov
test
adc
dec
or
xchg
xchg
aad
aam
adc
sub
pop
dec
clc
iret
push
jbe
xchg
ficompl
inc
inc
or
lea
push
aas
fwait
roll
mov
imul
loop
mov
pop
jp
outsb
mov
leave
adc
mov
scas
int
or
cmp
mov
cmp
and
xchg
sbb
scas
lds
push
push
popf
dec
cmpsl
aaa
jp
xchg
and
xor
cmc
pop
push
cmp
and
pop
jnp
lea
imul
subb
negb
cmp
add
jo
mov
lret
loope
pop
pushf
mov
push
notb
inc
dec
lcall
xlat
gs
push
sbb
dec
jl
rcrl
mov
shrl
xor
addr16
mov
ja
leave
shl
add
add
js,pt
fbstp
cmp
sbb
cld
stos
push
pop
js
enter
in
push
sub
cwtl
cwtl
fisubs
int3
mov
push
jl
adc
sti
cld
loop
mov
es
jbe
pop
fiadds
pop
sbb
cmpl
dec
push
push
push
mov
push
fnstsw
loop
sbb
mov
push
nop
mov
or
xchg
mov
shlb
mov
jb
das
repnz
adc
pop
in
icebp
xorb
push
adc
pop
lods
pushf
jmp
insl
fsubrs
mov
pop
dec
shlb
push
dec
es
leave
sub
mov
and
adc
jb
and
loope
out
jecxz,pt
mov
dec
test
jno
inc
sbb
out
dec
jno
sbbb
or
push
or
jo
mov
out
call
and
ret
das
daa
aad
sbb
push
mov
daa
cmp
les
xorl
jbe
cmp
shlb
pop
stos
test
cmp
cld
mov
pop
mov
leave
fildll
mov
popf
pusha
mov
mov
test
lcall
mov
jae
xchg
iret
leave
sbb
dec
pop
jmp
xchg
dec
fldcw
call
cmc
imulb
shrb
xor
sub
jp
sub
sub
les
mov
aas
sub
dec
mov
sbb
mov
jae
inc
xchg
lret
sahf
dec
push
xlat
loop
jg
adc
lds
shll
inc
mov
xchg
add
stos
mov
pop
mov
repz
adc
xchg
testb
pushf
push
test
aas
inc
dec
fdivl
ret
mov
xor
cvtps2pi
add
dec
push
lret
or
data16
in
pop
cmp
lret
dec
sbb
push
daa
or
or
xchg
cmp
icebp
mov
je
xor
das
rorl
push
mov
mov
sub
xchg
leave
add
sti
dec
mov
push
in
int
sub
pop
or
stos
sbb
add
fwait
mov
xchg
icebp
hlt
ss
mov
pop
cs
sbbl
test
ss
adc
and
dec
and
in
or
mov
fdiv
out
movsl
scas
cli
dec
and
inc
xor
xor
jmp
sbb
add
popf
loope
mov
cmp
lock
pop
subl
imul
inc
sub
ss
xchg
xor
sbb
insl
mov
inc
xor
push
test
push
out
addl
sbb
repnz
call
xchg
and
push
and
aaa
mov
push
inc
jbe
loopne
dec
dec
dec
sbb
pushf
in
divb
sbb
sbb
ret
out
jp
xchg
xchg
stos
jae
int3
leave
mov
inc
icebp
cwtl
popf
int3
cli
add
add
and
hlt
mov
movsl
xchg
or
subb
rol
mov
bound
jnp
cwtl
popa
idivl
and
lcall
push
lahf
or
jbe
xchg
popa
jnp
popa
sti
rolb
or
dec
cltd
roll
push
mov
inc
sub
into
jb
das
mov
nop
repz
jmp
out
add
icebp
das
jp
popf
dec
jae
mov
mov
clc
ret
push
aaa
adcl
iret
push
leave
sbb
nop
popa
data16
sub
cmc
inc
inc
mov
sub
das
subb
mov
xchg
mov
test
sub
push
mov
shrl
mov
cmp
test
mov
movsl
pop
xchg
inc
rcrl
stc
jmp
sahf
adc
arpl
jg
aaa
pop
mov
adc
aam
mov
iret
sbb
popa
and
and
rolb
xor
aad
fimull
or
data16
sub
mov
scas
popf
xor
cmp
mov
xchg
mov
mov
and
xor
or
sti
addb
jl
lcall
iret
je
pop
mov
inc
add
jbe
or
lods
out
pop
repz
mov
imul
idivb
nop
add
popf
add
pushf
inc
and
cltd
push
popf
sub
lahf
pushf
mov
hlt
push
inc
jmp
dec
pop
ljmp
stos
xor
sbb
and
in
je
aas
popa
inc
icebp
in
xchg
addr16
xchg
jnp
movsl
inc
mov
sub
mov
pusha
test
lods
sub
out
inc
xchg
mov
or
mov
lcall
test
mov
add
push
dec
jae
push
mov
shll
sbb
js
cld
xchg
xchg
mov
mov
cmp
mov
out
ds
shll
xor
adc
lret
pop
into
sbb
dec
xchg
cs
sub
dec
push
in
adc
cs
sbb
repz
xlat
pop
sub
and
jno
cmpsb
and
leave
mov
push
push
push
jmp
xchg
arpl
mov
mov
dec
mov
dec
add
jmp
cmp
mov
stos
lock
faddl
push
push
daa
push
adc
push
mov
enter
movsl
add
or
cwtl
pop
fisubrl
jmp
xor
adc
sub
nop
fcoms
dec
cli
mov
xor
dec
xor
lcall
cmpsb
dec
push
cmpsl
push
mov
es
dec
push
insb
aas
pop
das
jle
loop
cmpsl
shl
mov
inc
sarl
int
test
mov
jb
rsqrtps
stc
xchg
mov
out
xor
mov
push
bound
sbb
mov
pop
sub
push
in
nop
mov
pop
jp
lcall
xchg
mov
fldcw
jl
sub
leave
movb
test
sub
cli
fs
push
or
jmp
cmc
stos
inc
xor
fmul
in
mov
bt
roll
pop
xchg
rol
nop
xor
fcmove
cmp
ja
xlat
outsb
mov
test
xchg
out
jne
mov
inc
rcrb
mov
xor
into
fcom
sbb
shrl
or
dec
inc
decb
push
or
arpl
rcl
aas
sub
xor
jg
aam
ljmp
dec
pop
dec
dec
ss
push
std
jo
popf
ds
cmp
mov
rcrl
sub
cmp
xor
and
shrl
cmc
cmp
scas
into
dec
jns
sbb
pop
mov
or
out
mov
loope
and
mov
lods
add
lret
aad
mov
sub
adc
test
cs
pop
stos
lret
fstp
mov
xchg
xchg
insb
mov
xchg
xchg
mov
cmp
lock
test
psubw
testb
loopne
ror
xor
sarl
xchg
inc
push
pop
sub
dec
ret
xchg
mov
in
cmp
pop
aaa
rorw
lods
xchg
daa
push
add
mov
test
std
push
jge
xor
roll
sbb
arpl
pop
pop
int3
cmc
and
int3
popa
lock
xlat
jmp
ret
pushf
push
push
or
mov
adc
repnz
popf
in
sub
push
and
test
std
mov
scas
nop
mov
mov
scas
xchg
push
jns
in
sub
pop
jmp
leave
fisttpl
push
inc
sbbb
movsl
hlt
cmpsl
stc
loopne
and
sub
rcpps
sarb
pop
ja
dec
lock
stos
js
push
xchg
mov
cmp
xchg
ret
lods
clc
jmp
jmp
xchg
cmp
sarl
lahf
int
add
adc
and
pop
rcll
and
out
pop
sub
push
or
adc
jg
mov
mov
in
popa
subb
test
in
sub
xchg
jae
ficoms
sub
cmpsb
pop
ja
push
cs
inc
test
dec
mov
repz
bound
ss
jne
cs
xor
mov
jno
lods
inc
sub
push
pop
inc
xor
insl
add
inc
test
pop
aaa
rol
xchg
aad
mov
push
cli
push
lret
xchg
pop
aaa
fiadds
jne
sbb
lahf
mull
adc
mov
inc
pop
test
clc
mov
scas
cmp
stos
aad
cmp
xor
add
adc
hlt
lcall
addb
jge
mov
mov
and
push
xchg
clc
fmuls
push
mov
daa
popf
in
lods
push
popf
ret
cmp
je
inc
int
sahf
das
rclb
cmp
dec
mov
in
jmp
sub
sub
popa
outsb
sbb
shll
cmp
sahf
or
lds
lret
fistps
cwtl
test
sub
inc
push
cli
test
adcb
sub
add
mov
fsubs
leave
xchg
jbe
cmp
xchg
loopne
mov
cmpsl
sbb
mov
adc
movb
xchg
xchg
mov
dec
jbe
pop
fidivl
jg
daa
stos
sbb
mov
mov
mov
xor
icebp
addr16
ficoml
ja
scas
mov
cmp
js
cld
cmp
mov
push
dec
shlb
xchg
inc
mov
dec
sub
xchg
lahf
mov
sti
push
rcrb
mov
add
loopne
xor
sarb
enter
mov
loop
mov
mov
xlat
filds
stos
fwait
test
xchg
and
xlat
pop
ljmp
mov
sti
cmp
rcrb
or
xchg
mov
sub
sarb
dec
fxch
mov
mov
dec
and
push
jmp
shr
das
mov
out
int3
out
insb
ret
cmp
push
js
les
ss
sar
add
mov
xchg
mov
pop
xor
push
int
xlat
ds
cmp
test
lret
ja
or
inc
push
test
leave
imul
pop
push
shrb
insb
rclb
and
movsl
or
in
and
out
das
test
add
add
pop
xchg
xor
xor
sbb
cmp
ds
repnz
aaa
jb
mov
pop
rolb
xchg
mov
sub
std
cmovs
pop
or
test
filds
dec
nop
push
cmpsl
mov
mov
lods
or
push
mov
xchg
push
fisubs
sarl
ds
imul
dec
movsl
sbb
add
fwait
mov
pop
rorl
mov
outsb
add
shrl
pop
dec
cmp
push
rcl
loop
aas
mov
daa
ret
sub
cmpsb
sub
xchg
jp
push
add
sub
add
dec
xchg
jbe
push
xor
pop
mov
loop
mov
mov
cs
mov
sahf
js
mov
cs
cli
cli
fucom
mov
sbb
shll
push
xchg
xchg
pop
stos
mulb
dec
or
aam
fsts
outsl
mov
push
jbe
add
mov
addr16
mov
cmp
sarb
add
pop
stos
adc
cli
xchg
andb
test
ss
xchg
pusha
mov
cltd
mov
push
sub
cmp
das
in
stos
sbb
mov
cmp
push
jle
sbb
aas
pop
cmpsb
out
cmpsl
inc
xor
out
mov
mov
mov
sub
push
mov
je
enter
mov
sbb
adc
out
mov
lcall
xchg
mov
out
hlt
mov
lahf
xchg
std
mov
pusha
mov
fwait
lahf
fwait
imull
mov
je
mov
rclb
cmpsl
mov
dec
mov
mov
push
pop
fwait
adcb
mov
ret
mov
or
dec
pop
mov
mov
cmc
aas
push
addb
jmp
ja
add
jmp
pop
xchg
stc
xchg
push
push
xor
pop
mov
arpl
inc
shr
aam
sbb
movsl
jno
outsb
dec
popa
push
xchg
test
std
mul
sub
aad
cs
xor
lock
xchg
xlat
inc
dec
push
ficoml
push
je
jecxz
test
imul
rcrb
pop
mov
pop
lret
into
test
addr16
jmp
pop
into
subl
xchg
mov
mov
std
faddl
stos
ret
add
cmp
ret
pop
call
cmpsl
loope
fsubs
pop
jb
inc
andl
in
outsl
add
dec
mov
popa
push
ss
mov
xchg
in
out
or
test
and
cmc
push
repnz
ret
xor
mov
movsl
leave
cmc
push
pop
xchg
icebp
mov
jg
stc
pusha
pop
xchg
cmc
sub
xchg
movups
sbb
jge
cmp
loop
cmp
cwtl
sub
cs
test
xor
popa
jbe
xor
je
or
sahf
xor
enter
mov
bound
dec
in
test
inc
fcomps
xchg
mov
cmp
jbe
xchg
adc
push
mov
xor
jmp
cmp
xor
addl
repnz
mov
mov
lret
shrl
fstpt
mov
int3
cmpl
sub
aaa
lods
movsb
movsb
into
sarl
dec
xor
mov
and
mov
pop
jmp
lret
push
add
cmc
cwtl
mov
mov
add
movsb
jmp
cmpsl
xchg
js
mov
mov
dec
jl
adc
cmp
mov
frstor
push
in
xchg
pop
out
jb
aas
mov
mov
mov
sub
pop
xchg
stos
jg
push
xchg
sahf
xor
subl
mov
sbb
dec
loopne
inc
mov
dec
subb
lods
subl
or
out
mov
cltd
jne
in
mov
push
popa
je
mov
pop
mov
mov
xchg
xchg
and
lea
aad
in
stos
test
or
cmpsb
mov
jmp
sti
es
pop
push
aas
in
adcl
jmp
add
inc
inc
jmp
jmp
or
xchg
cmp
sarb
rorl
fwait
xor
cmp
push
fwait
insl
push
pop
push
mov
mov
jne
pop
cmpsb
sub
shll
jecxz
outsl
mov
aas
cmp
add
and
pop
fnsave
cmpl
adc
sahf
mov
imul
in
mov
push
sahf
xor
inc
in
sahf
sti
fdivrl
inc
pop
popf
mov
pop
and
scas
and
pop
mov
loop
test
xchg
fxtract
es
idivl
imul
pop
push
fsubl
inc
ja
mov
movsb
shrl
cmp
cmp
test
or
insl
mov
aaa
int3
xlat
mov
xor
push
sbb
test
test
mov
fwait
popf
rorb
mov
mov
jg
mov
sbb
mov
pop
jl
push
push
sbb
xchg
test
mov
inc
aaa
mov
sarl
mov
xchg
sub
in
dec
cld
shll
aas
clc
fstpl
insl
sti
pop
ljmp
jecxz
enter
adc
dec
mov
fcmovnbe
sub
cld
or
movsb
or
cmpl
popa
jmp
shl
scas
mov
in
and
sbb
popf
pop
aad
fisubs
jle
adc
jb
out
addl
mov
lea
cli
repnz
jne
enter
movsb
mov
fcmovne
imulb
dec
lea
push
lret
fcoml
fwait
and
add
subb
pop
xchg
sub
adc
pop
inc
push
jge
fstpt
cs
mov
push
jecxz
sbb
xor
dec
dec
divl
xchg
push
and
jmp
xlat
fimull
pop
jmp
sbb
leave
mov
xchg
sbb
inc
or
xchg
mov
sbb
movsb
push
xchg
cmpsl
mov
add
push
sub
es
adc
cwtl
cmp
in
inc
iret
xchg
sub
push
mov
mov
push
jp
adc
mov
lea
or
js
jbe
pop
js
pop
cmpsb
shl
lds
out
jbe
dec
add
aas
test
test
fwait
data16
push
roll
lods
fsubs
xor
and
mov
lea
or
mov
imul
into
stc
in
cs
sti
jg
xchg
dec
fwait
cmp
pop
decb
fistpll
insl
xor
scas
push
decl
mov
rorl
xchg
inc
mov
rol
test
inc
divl
test
sbb
in
push
mov
inc
jae
mov
add
or
lret
dec
bound
repnz
notb
lcall
mov
sub
addr16
lcall
mov
daa
sti
ljmp
cmpsl
dec
mov
ss
push
and
and
aaa
pop
mov
mov
xchg
std
aam
or
pop
dec
aas
xor
fidivrs
ljmp
add
mov
and
lods
xor
jmp
icebp
icebp
cmpsb
mov
inc
rcll
data16
sbb
divb
sbb
xchg
aaa
sti
or
pop
add
dec
in
jecxz
lea
mov
xchg
jae
sti
shll
xchg
in
fadd
dec
push
jl
add
jg
rcl
mov
mov
roll
sbb
mov
xchg
push
sub
leave
add
jns
xchg
dec
jne
or
fstpl
aaa
ficomps
sbb
xchg
je
addb
ret
rcrl
ja
inc
insl
test
dec
rep
jp
cs
push
test
mov
popf
mov
fbstp
mov
clc
hlt
out
jb
cmp
stc
mov
dec
cs
add
cmp
mov
sbb
adc
xor
jns
pop
les
jae,pn
pop
test
mov
in
mov
insb
inc
out
sti
add
xor
mov
mov
loope
les
dec
mov
inc
mov
lds
ret
dec
loope
mov
push
aas
adc
lods
aaa
sbb
mov
les
shrb
jmp
pop
into
fbld
int3
mov
rorl
test
stos
hlt
jo
repz
cli
aad
jbe
sub
shlb
xor
or
ret
cwtl
mov
mov
add
pop
shrb
or
mov
jno
cld
xchg
sbb
loope
cmc
mov
pop
jecxz
add
pop
jne
roll
out
repz
xchg
pop
pop
add
loop
cmc
aam
mov
sahf
jp
mov
mov
cmpsb
add
loop
lcall
or
jg
loope
aam
pop
mov
stos
lods
jns
dec
jmp
jmp
loopne
test
push
je
push
fwait
ja
fwait
je
mov
stos
mov
insl
push
popa
leave
mov
mov
xchg
xchg
sub
mov
push
stos
mov
adc
test
loop
jecxz
mov
dec
pushf
mov
cs
nop
inc
adc
fisttpll
adc
mov
mov
mov
xor
mov
sub
jns
shrl
jbe
ds
jo
jnp
inc
test
mov
push
xchg
xchg
jecxz
std
sbb
xchg
lock
mov
lret
jne
and
clc
xchg
pop
push
jo
and
jmp
stos
xor
cs
and
adc
xchg
ret
xor
add
cmc
and
ror
icebp
aad
shrl
push
jg
sbb
fadd
cmp
es
mov
leave
xchg
xor
arpl
jae
adc
insb
mov
xchg
lret
les
ds
inc
jmp
cli
mov
stos
mov
push
cmpsl
jl
push
xchg
mov
add
movsl
cmp
cmc
or
fxch
rol
mov
cmc
mov
int
repnz
gs
xor
or
sub
mov
js
mov
or
mov
mov
mov
popa
out
repnz
jne
mov
movsl
test
addr16
xchg
je
in
inc
test
mov
aad
mov
int3
add
mov
xlat
lret
pop
leave
push
rcrl
aaa
push
pop
cmpsl
rcll
push
add
enter
movsb
mov
sub
hlt
mov
pop
xchg
inc
mov
push
mov
aas
adc
rolb
mov
popf
sbb
mov
mov
ljmp
mov
xchg
mul
mulb
roll
test
mov
fcompl
push
rcll
add
testb
sub
push
les
jne
repz
fldenv
addr16
push
ss
xchg
xchg
std
loopne
idivb
mov
mov
enter
sar
sub
fsubrp
clc
dec
dec
xchg
pusha
sub
movsb
push
cmp
mov
hlt
cwtl
dec
mov
mov
mov
mov
mov
stos
sub
xchg
pop
sbb
roll
jno
jecxz
pop
lcall
mov
loop
divl
fisttpl
inc
scas
xor
lahf
fcom
inc
inc
mov
dec
inc
add
mov
pusha
sbb
mov
add
mov
push
push
sub
lahf
or
sbb
jmp
inc
inc
push
pusha
push
sahf
mov
divl
loop
push
repnz
leave
rcll
bound
mov
leave
inc
ja
bound
sub
pop
pop
lcall
xchg
cli
movsb
xlat
insl
mov
pop
lds
xor
lahf
mov
shl
inc
push
pop
cli
aad
fadd
cmp
mov
into
movb
hlt
jg
dec
push
xchg
mov
testl
cmp
mov
xor
mov
es
imul
cmp
mov
dec
and
roll
test
jns
cs
aaa
test
clc
mov
in
jl
mov
xchg
in
xchg
test
dec
xor
pop
andl
cmp
or
testl
shl
dec
and
test
lock
mov
rcrl
add
les
adc
jo
rcrl
inc
test
into
lcall
cmpsl
push
dec
adc
jmp
cmp
adc
loopne
xor
out
leave
aas
push
gs
mov
pop
adc
jle
scas
sub
fsubs
xchg
xor
push
jno
rorl
or
sub
sub
xchg
cmp
mov
js
or
xchg
cmpsb
xor
and
subb
cmpsb
jae
lock
xchg
imul
rorl
popa
inc
ret
leave
mov
cmpsl
roll
push
push
sbb
movhps
add
int3
mov
cmpsl
movsb
push
jecxz
call
pop
adc
or
mov
sbbl
lods
pop
loopne
sub
ljmp
xor
movsl
sbb
aaa
add
popa
push
mov
cmp
imul
xchg
aas
inc
movsl
mov
mov
enter
inc
mov
mov
sub
adc
pop
lds
dec
mov
scas
mov
mov
adc
push
movsb
std
arpl
lcall
mov
xchg
data16
cmp
push
frndint
mov
xchg
mov
push
adc
movsl
addr16
nop
out
cmp
sti
or
pop
mov
std
rclb
mov
divb
lods
xchg
std
dec
shr
mov
ss
mov
flds
insb
mov
sub
ss
loop
sub
stos
rolb
sarl
mov
repz
push
jbe
push
ss
xchg
cmpsb
fnsave
and
lods
ror
inc
cmpsl
test
icebp
ss
xchg
mov
add
lock
and
xlat
data16
dec
push
mov
sub
push
jg
mov
popl
pusha
test
adc
shll
inc
xor
test
xchg
push
mov
xor
bnd
or
cmc
stos
sbb
mov
cld
adc
loope
push
stos
xor
in
add
sub
test
sti
stos
cmovns
jle
testl
pop
pop
fcomi
mov
push
stos
pop
xchg
mov
loope
ss
lcall
adcb
fcmovb
fsubrl
ss
mov
out
push
sub
add
xchg
out
dec
adc
call
popf
sbbb
test
movsl
push
adc
push
and
je
imul
es
mov
punpckhbw
cmp
dec
lahf
dec
inc
shrl
xor
shll
adc
fsubrp
aad
push
shll
xchg
imul
adc
sub
mov
mov
insb
outsb
dec
test
test
xchg
daa
nop
xor
sub
fcmovb
cmc
imul
lahf
fmul
fisttpll
push
mov
movsl
pop
xchg
imull
inc
dec
mov
push
jnp
jp
and
insl
addr16
push
mov
xor
mov
arpl
or
cmp
pop
repz
mov
popf
in
and
js
outsb
lret
loope
cmpb
shrl
arpl
stos
call
icebp
stos
pop
insl
xchg
fdiv
aas
xchg
jnp
push
mov
lahf
test
int
jno
leave
sub
mov
mov
push
gs
stc
mov
pop
lock
lret
pop
mov
cmc
scas
fsubs
adc
ja
mov
flds
mov
ds
ficompl
gs
leave
sbb
and
loopne
cs
xor
dec
sahf
mov
loope
out
sarb
add
inc
scas
imul
jp
mov
addr16
dec
rorb
sub
adc
subl
subl
ljmp
imul
or
mov
jle
leave
stos
dec
and
out
cmp
mov
movsl
mov
cmp
push
popf
lds
pop
insb
pushf
mov
lock
testl
out
sbb
mov
push
mov
into
movsb
push
femms
jbe
inc
jb
cmp
mov
jo
mov
es
stc
xor
jmp
add
ss
jbe
cmp
jnp
push
scas
xchg
pop
iret
shl
lods
adc
jo
es
test
dec
jl
mov
cmp
inc
ret
arpl
daa
ficoms
push
jae
push
scas
arpl
leave
test
push
mov
mov
leave
mov
mov
loopne
jb
push
mov
pmaxub
dec
lret
in
cmp
cmp
mov
dec
and
dec
mov
int3
adc
js
xchg
aam
adc
in
aas
frstor
and
into
cmpsl
and
jle
mov
out
sarl
jmp
mov
leave
and
add
push
jmp
in
test
cmpl
popf
adc
pusha
nop
xchg
mov
adc
jae
mov
fldcw
or
cmp
out
inc
insl
xchg
loopne
enter
outsl
sahf
popa
lods
je
inc
test
ror
push
mov
xchg
js
iret
adc
rcrl
cmp
popf
lahf
jp
sahf
testb
in
imul
xlat
jp
mov
jp
or
mov
int3
sbb
xchg
out
shrl
ja
leave
repnz
jge
xchg
push
rcrl
ret
enter
or
pop
sahf
in
push
push
leave
xchg
pusha
sub
mov
ror
hlt
test
mov
inc
pop
push
push
js
fdivl
xchg
gs
clc
dec
jne
mov
mov
cmc
and
inc
popa
xor
rcrb
leave
filds
shr
push
cmpsl
adc
scas
stos
loop
sub
jnp,pt
lods
or
jmp
mov
xor
fadds
xchg
mov
lahf
or
cltd
aaa
sub
into
shrl
mov
push
sub
cmpsb
or
cmc
jle
sbb
xor
repz
es
inc
xchg
cmp
mov
movsb
into
sub
addr16
xchg
mov
push
inc
adc
aad
ljmp
mov
sarl
je
cltd
cmp
loopne
test
or
push
aaa
xchg
lret
outsl
and
cmpsl
push
pushf
cmp
xchg
mov
out
fwait
adc
outsl
mov
mov
mov
test
pushl
mov
jne
loop
xchg
inc
psubusb
mov
and
lea
rcr
mov
push
addr16
test
rol
inc
insl
sahf
xlat
or
sub
mov
cmp
outsl
mov
clc
pop
jg
sbb
xor
lods
insl
push
bound
dec
sbb
es
sahf
pushl
adcb
loope
mov
or
sbb
and
js
cmp
inc
fnstenv
les
jle
mov
js
sub
push
sub
out
cmp
xor
mov
int3
pop
add
cmpl
ret
lret
xorb
movsl
ja
rol
push
xchg
out
push
inc
js
imul
jecxz
jne
leave
cmp
imul
fidivrs
insb
mull
cltd
add
insb
pop
and
in
push
dec
push
leave
test
repnz
adc
lret
mov
jmp
pop
mov
fidivs
mulb
out
fiaddl
test
jg
mov
mov
inc
sub
xor
inc
cmpsb
int3
sti
pop
mov
jo
inc
push
cmp
shrl
cmp
xchg
gs
jo
mov
push
sbb
pop
shrl
rcrb
cwtl
xor
mov
xor
push
pop
mov
mov
mov
fisubs
loop,pt
add
xchg
pop
mov
xchg
ds
sarl
xor
call
xor
gs
cmp
cmp
mov
addr16
sbb
shrl
mov
mov
mov
jmp
testb
les
xor
mov
mov
adc
sti
loop
dec
sbb
enter
cwtl
popf
mul
inc
sti
nop
push
mov
iret
or
dec
rclb
popf
std
xor
xchg
mov
sbb
addl
mov
sahf
adc
push
xchg
in
and
push
call
pop
sub
xor
sbbl
ret
je
xchg
inc
adc
cmp
jmp
cmp
cmp
xchg
inc
inc
lret
fiaddl
mov
sbbl
and
cmp
mov
cmpsb
stc
mov
test
dec
push
ljmp
jge
shll
dec
mov
sub
or
and
mov
das
pop
pop
pop
testb
push
cltd
lret
cmp
js
lods
cmp
mov
stos
test
rorb
mov
adc
and
or
mov
jb
xor
cmp
jmp
push
sub
mov
inc
mov
nop
lahf
cmp
pop
icebp
pop
ret
in
sub
mov
mov
icebp
lock
mov
in
mov
mulb
cmp
push
mov
mov
std
sti
sub
push
or
cltd
in
les
adc
jnp
push
push
xor
dec
mov
aas
mov
adc
cmp
or
ja
out
adc
into
xchg
out
cmp
xchg
mov
or
jmp
stos
mov
je
xor
imul
ret
xlat
add
and
xchg
xor
inc
xchg
jecxz
loop
mov
ja
cmp
mov
shll
and
xchg
dec
mov
push
dec
fnstcw
mov
lds
mov
fadds
test
gs
push
out
rcrb
fdivl
push
mov
fcoms
inc
mov
xchg
out
mov
fdiv
pop
stos
mov
xchg
lahf
dec
mov
lahf
xchg
ljmp
sbb
loop
inc
mov
mov
xchg
jmp
mov
jnp
xchg
ficoml
shrl
pop
les
mov
and
loop
bound
popa
testb
flds
and
cltd
cmp
inc
ja
movb
cmp
mov
add
jmp
or
jecxz,pn
data16
sub
mov
insb
jae
sub
cmp
mov
mov
sbb
into
mov
test
movsl
sub
testb
xor
adc
mov
pop
push
xor
inc
or
loopne
in
jg
aad
dec
jmp
insl
push
arpl
cmp
add
sbb
out
cmc
sti
aas
xorl
jae
mov
jae
sub
cwtl
shl
rcr
mov
int3
or
mov
dec
push
dec
in
cmpsl
push
sbb
popa
pop
bound
cmp
sub
aam
addr16
pop
fimull
push
idivl
push
addb
popa
mov
loopne
mov
test
add
in
fidivs
lret
lea
jbe
pop
xchg
ss
out
or
leave
outsl
push
arpl
mov
pop
jmp
jb
sar
dec
xchg
xor
xchg
fcoml
push
dec
pop
inc
pop
lahf
in
enter
inc
call
mov
stos
out
int
push
dec
shrb
in
xor
std
aaa
pop
push
addr16
leave
outsl
shl
push
mov
lahf
out
cmp
dec
das
gs
pop
sbb
mov
lea
mov
mov
xchg
jns
test
inc
cmp
mov
pop
and
xor
outsb
pusha
testb
lret
dec
cmc
xchg
clc
mov
dec
jmp
clc
dec
lahf
cmpsb
je
inc
lea
xchg
orb
gs
out
fwait
shlb
xchg
sbb
sti
lahf
roll
clc
and
mov
popf
adc
mov
rorl
xchg
sub
adc
je
rorb
shr
stc
mov
or
sahf
sub
add
mov
add
mov
pop
xor
lods
loope
pop
mov
leave
faddl
popf
xchg
pop
ja
ret
mov
in
insb
or
inc
bound
xor
in
xor
mov
mov
repz
lods
push
cmp
mov
gs
dec
cli
xchg
cmp
and
dec
xchg
push
xor
fisubrs
mov
imul
pop
dec
mov
lret
sti
xchg
mov
cmp
imul
jns
popf
js
scas
sbb
icebp
pop
mov
loop
int
js
push
cltd
sbb
ret
shrl
enter
and
pop
mov
sub
das
lcall
hlt
pop
and
shll
outsl
jb
enter
cmp
xchg
cmpsb
hlt
shlb
rcrb
cld
mov
cmpsl
and
or
shlb
inc
push
sbb
inc
adc
lret
movsb
xchg
int3
cld
sub
inc
incl
push
leave
lret
push
cmpsb
xchg
push
pop
jno
mov
push
mov
lret
and
out
push
stc
int
ds
xor
vmread
shll
pop
mov
add
sub
rcrb
rcrl
movsb
imul
pop
xchg
pop
mov
sbb
iret
dec
cli
dec
and
and
push
mov
xlat
dec
push
popa
iret
add
inc
pop
sub
fstps
mov
mov
cltd
cmp
pop
jle
cli
inc
mov
xchg
or
xchg
sub
aam
outsl
or
mov
xchg
xchg
or
cwtl
xchg
push
cmp
mov
and
mov
dec
addr16
mov
ja
shll
imul
mov
xor
adc
pop
mov
mov
cmp
xor
sbb
mov
jno
and
add
popa
daa
lcall
sti
sbb
mov
pusha
xlat
movsb
ret
mov
cmpsb
ret
lds
stos
addl
shll
scas
sub
pop
fwait
shlb
add
sub
outsb
popa
jbe
aam
xor
sub
ror
mov
ds
in
aas
adc
xor
sub
lea
pop
or
call
sahf
les
adc
stos
dec
nop
popa
sbb
push
sub
stos
out
mov
inc
js
mov
sbb
xor
lds
not
mov
fwait
pop
stos
or
subb
arpl
mov
sahf
jne
xor
jnp
fwait
dec
xor
lcall
pop
mov
scas
and
add
sub
mov
rcll
mov
stos
outsb
push
dec
mov
pop
xchg
and
rcl
fsubs
adc
push
pop
xchg
data16
out
popf
scas
loopne
adc
jecxz
fimull
rcrl
neg
loop
dec
jmp
aaa
roll
adc
xchg
lods
aas
test
ljmp
enter
cmpsb
xchg
adc
insb
push
test
out
mov
jno
scas
mov
mov
push
mov
sbb
cltd
outsb
jbe
loopne
xor
jae
xlat
mov
dec
xchg
fs
add
adc
pop
jmp
push
frstor
test
orb
lret
xchg
clc
les
cmp
xchg
mov
bt
das
scas
sbb
ficoml
adc
faddl
movsb
mov
pop
subl
push
inc
inc
add
lcall
xchg
scas
cli
mov
out
dec
mov
fwait
mov
jecxz
cli
mov
jb
or
in
and
cmpsb
xor
sbb
mov
push
jbe
push
ret
mov
push
dec
test
push
int
jg
push
mov
push
cmpsl
mov
fnsave
mov
mov
xchg
pop
and
aas
jmp
sbb
gs
es
adc
ja
testl
mov
in
jae
xchg
mov
loopne
sub
adc
push
push
jg
out
shrd
sarl
push
mov
jae
mov
mov
dec
xor
mov
popf
imul
ret
cmp
test
fisubl
mov
in
dec
push
xchg
cvtps2pi
loop
insb
pusha
sbb
mov
dec
xor
cmp
push
sti
mov
lods
jns
xchg
add
jmp
sbb
addl
js
fwait
mov
mov
dec
and
cmp
negb
iret
js
in
dec
cmpsb
xorb
adc
ss
sub
std
orb
cld
mov
ret
dec
int
pop
rcrb
jmp
cld
add
mov
inc
sub
sbb
and
jae
cmp
test
je
mov
lods
add
ds
je
insl
and
pop
push
cmpsb
lret
sub
cmp
ja
out
cmp
and
ljmp
stos
push
stc
jne
aad
dec
rcrl
sub
mov
pusha
jbe
mov
push
sub
adc
mov
add
ja
mov
movsl
sub
mov
lcall
mov
divb
stos
rorb
shrl
lcall
out
mov
jmp
stc
shl
sub
je
mov
movsb
fistpl
dec
ljmp
repnz
cmp
rep
mov
push
cmpsb
subl
lret
outsb
insl
push
lock
sbb
imul
pop
push
xchg
test
fchs
mov
inc
mov
loop
mov
push
fst
aas
stc
mov
pop
pop
or
push
and
fists
mov
shll
mov
daa
jmp
push
insb
stc
aas
movl
mov
sbb
shll
add
js
add
fs
nop
push
das
and
push
pop
shr
fwait
inc
ret
mov
inc
out
pop
mov
pop
inc
lret
repnz
mov
adc
repz
mull
inc
daa
mov
sbb
or
cli
mov
fsubl
ds
scas
fs
jb
xchg
test
jle
sbb
mov
sti
lahf
push
sbb
or
ds
loop
dec
stc
into
push
ret
scas
mov
mov
xor
push
aad
push
cltd
test
out
mov
out
out
stos
mov
sbb
rcll
jae
mov
dec
lods
xchg
cmp
and
rcrl
mov
lahf
or
and
add
das
test
dec
sarb
jbe
push
inc
ret
scas
in
push
call
dec
ss
jl
cmp
or
bnd
and
inc
cmpsl
jge
roll
popa
test
sub
pop
mov
push
pop
rolb
sbb
aam
shlb
loop
add
xor
push
jae
jnp
sbb
xor
lret
sbb
scas
mov
add
movsb
outsl
dec
inc
fs
push
xchg
jae
xlat
shll
jle
push
aas
popa
xchg
push
mov
add
push
dec
je
and
and
cmp
cmpsl
sti
loop
lods
mov
arpl
jmp
xchg
pop
or
outsl
xchg
xchg
fdivrl
mov
pop
mov
test
adc
xchg
faddl
or
cmp
or
mov
inc
popf
adc
xor
lds
popf
lods
push
cmpl
psubusb
adc
sub
into
mov
jne
loop
loope
mov
and
xchg
sti
pop
mov
mov
pop
mov
cmp
jecxz
imul
inc
sarl
xchg
push
mov
jb
fstpt
addb
jb
pop
jmp
inc
jge
mov
cld
repz
fs
cld
push
loop
fildl
loop
cli
cltd
sub
addr16
mov
push
and
mov
cmp
cmc
jns
inc
push
cmp
push
and
popaw
xchg
fnstsw
ret
mov
push
fisubs
jns
popa
les
lahf
dec
add
stos
pop
test
shl
pusha
dec
dec
or
and
scas
out
xchg
xchg
loop
popa
test
sbb
aam
aas
repz
loopne
dec
sub
popa
testl
jo
aas
movsb
push
loope
ljmp
pusha
xchg
xchg
cwtl
loop
adc
cltd
enter
sub
xlat
scas
xor
inc
mov
imul
aad
mov
mov
xchg
cmpsb
jmp
mov
test
mov
mov
rolb
test
cmp
ljmp
cmp
imul
cmc
fsts
sbb
pop
pop
pop
imul
xchg
test
in
mov
mov
outsl
leave
dec
and
cmpxchg
jno
xor
cmp
mov
sti
lea
pop
or
ss
and
or
jb
add
aam
pop
leave
mov
mov
ss
test
test
jae
push
mov
rorl
insb
cmpsb
dec
xchg
mov
popf
jae
adc
jns
in
js
sbb
daa
std
lret
or
mov
cli
sub
push
lcall
lods
imul
pop
dec
es
int
xchg
push
subb
or
xor
ret
movl
push
mov
in
mov
ret
push
test
mov
pusha
mov
scas
add
sbb
cmp
jg
jo
push
mov
addr16
inc
xchg
lods
loop
sub
xchg
mov
push
push
fbstp
rolb
test
in
fsubrl
test
aam
adc
pop
mov
mov
cmp
mov
mov
cmp
xchg
lret
jmp
jo
rorl
mov
sub
sbb
dec
sub
js
les
cld
pop
nop
outsb
or
aas
push
inc
mov
adc
xchg
adc
cltd
xor
add
cmpsl
xchg
test
shll
push
cmp
into
xchg
bound
xchg
xchg
pop
mov
test
adc
mov
add
xor
enter
xor
ret
sub
jmp
movsl
arpl
sarb
push
mov
xchg
into
leave
pop
pusha
ret
and
jbe
sub
xchg
jl
mov
push
push
ljmp
xchg
inc
xchg
mov
xor
setnp
sbb
imul
xchg
dec
mov
pop
leave
mov
pop
jne
xchg
jl
mov
cmpsb
xchg
imul
sbb
cmpsl
cmp
inc
mov
test
jg
xchg
and
pop
xor
xor
mov
les
push
inc
mov
or
xchg
add
test
push
add
jl
fdivl
dec
xchg
lock
mov
repz
bound
and
icebp
mov
rcrb
and
mov
ljmp
lods
sbb
or
lcall
xor
xchg
imul
sti
mulb
sahf
sbb
in
push
and
push
das
ret
jno
lods
sar
jb
mov
push
cmp
fldl
dec
or
icebp
cltd
fdiv
xor
into
lahf
xor
push
adc
into
fistpll
iret
idivl
fcoml
insl
jmp
add
dec
shll
or
ljmp
idivl
xor
popf
pop
jp
jle
popa
sub
cltd
lock
dec
loopne
pop
mov
sbb
sub
out
jle
xchg
and
ss
xor
imul
lods
enter
and
divl
nop
test
xchg
mov
mov
adc
outsb
adc
add
jge
test
jecxz
sbb
aaa
out
rorb
mov
test
cld
push
cmpsl
jp
or
aam
movsb
repz
roll
pushf
inc
cmpsb
mov
sarb
cmp
mov
hlt
xchg
mov
idivl
popf
and
sub
add
sarb
add
push
fsts
aam
cmpsl
jmp
lret
inc
cmpsb
pop
frstor
mov
out
cli
mov
unpcklps
xorl
inc
sti
lahf
add
lea
mov
xor
bound
rolb
xlat
jmp
sbb
repnz
mov
jmp
imul
add
icebp
into
jl
mov
mov
loope
lods
test
imul
xor
xchg
dec
xchg
or
ja
outsb
sbb
inc
xchg
push
mov
jg
test
add
iret
pop
out
loope
xor
es
call
dec
sub
xchg
loopne
pushf
outsl
inc
cs
jne
lea
adc
jbe
inc
orb
loopne
orb
sbb
shrl
cltd
sahf
sbb
aas
lret
jne
stos
mov
inc
xchg
mov
mov
pusha
sbbl
sbb
push
mov
and
ds
mov
sar
btr
add
or
or
data16
mov
or
lretw
call
dec
insb
lcall
mov
sbb
pop
xchg
mov
mov
push
jg
leave
or
add
xchg
mov
data16
pop
addr16
rorl
dec
stc
popf
sub
sbb
xor
fildl
loope
adcl
pop
int
cld
call
add
lcall
shll
scas
mov
xor
in
js
mov
lahf
pop
imul
mov
call
adc
push
mov
mov
xor
rorl
loop
out
test
ss
pushf
sbb
push
lahf
aas
cmp
dec
pop
add
test
xchg
insb
xor
and
adc
pop
ds
cbtw
insb
enter
data16
popf
ret
mov
adc
mov
xchg
cmp
ror
fs
sub
dec
mov
jo,pt
imull
add
sti
adc
rcl
mov
cmpsl
mov
mov
lahf
je
sub
xchg
xor
lds
loop
dec
stos
fnsave
sub
aas
movsb
gs
imul
cmpsl
sbb
adcl
sti
xchg
das
cmpsl
das
xor
or
loop
mov
stos
xchg
jnp
sbb
xor
gs
in
xchg
push
lods
inc
test
insl
xchg
xchg
fdivrl
sbb
lock
aad
xchg
sbb
jg
add
sbb
dec
aad
stc
leave
jmp
jp
mov
popf
or
mov
loopne
mov
jmp
jbe
sub
mov
xchg
shlb
xchg
sbb
jmp
popf
jg
scas
sbbb
adc
mov
add
dec
push
cmp
cmpsl
js
nop
cli
iret
cmpsb
mov
xchg
xchg
mov
inc
jae
call
stos
movsl
lods
lahf
push
sbb
inc
lods
jnp
popa
push
shll
mov
inc
iret
frstor
or
stc
inc
or
test
popf
inc
jecxz
ja
dec
push
push
ss
in
mov
mov
aam
adc
mov
arpl
fs
jg
sub
test
jno
jno
mov
sarl
cmpsb
mov
dec
xchg
sbb
fsubs
jg
adc
int
inc
dec
dec
xor
dec
popa
jne
push
mov
xchg
pop
js
xlat
and
outsb
aam
mov
enter
out
testb
enter
icebp
jnp
sub
jo
jae
repnz
scas
call
ret
lret
outsl
test
xchg
iret
jmp
dec
ja
jne
pop
mov
sbb
pop
adc
repz
lret
xchg
mov
adc
lods
push
lret
sub
mov
iret
mov
popl
fmul
inc
loopne
pop
scas
push
sub
mov
mov
std
sub
pop
test
pop
es
cmpsl
xor
stos
pop
cld
push
sub
or
xor
fucomp
cmpl
imul
inc
mov
out
mov
jbe
push
insb
add
ficompl
lock
ret
fldl
xorl
mov
push
fstps
out
insl
lahf
adc
cmp
add
roll
mov
mov
adc
out
jb
aam
add
sub
mov
jmp
inc
xchg
xor
roll
inc
insb
fnstenv
xchg
mov
sub
mov
sub
pusha
sbb
popf
cmp
jge
ss
jae
or
xchg
ja
inc
xchg
mov
xchg
loopne
jo
push
out
dec
or
jg
test
shrl
jmp
popa
mov
mov
scas
jno
mov
adc
js
fucom
aad
movsb
aas
push
push
push
das
movsl
mov
nop
sub
aam
mov
ret
jnp
push
xchg
ljmp
aaa
and
mov
cmpsb
or
sub
cld
mov
xchg
frstor
cmpsl
push
es
xchg
jmp
push
mov
test
mov
test
mov
dec
push
sahf
in
fldcw
in
aam
push
rcll
lds
push
adc
cmp
push
xchg
lods
inc
push
mov
hlt
pop
push
inc
movsb
mov
test
sub
adc
or
mov
xchg
insb
push
clc
ret
adcb
divl
nop
mov
rcrb
xorl
push
mov
dec
popa
adcw
ljmp
xor
out
xor
lea
xor
dec
adc
hlt
insb
fsubrs
fsts
loop
sub
and
inc
lret
arpl
xor
movsl
stc
xor
cmpsl
fwait
mov
lret
mov
test
in
sub
stos
mov
sbb
mov
test
shlb
lds
xchg
ret
leave
sub
setb
sub
xchg
mov
sub
pop
dec
cmpsb
mov
mov
push
ret
sbb
mov
mov
dec
fnstcw
jns
fneni(8087
mov
xor
scas
xor
mov
add
sbb
push
cli
mov
mov
mov
loop
add
xchg
sub
push
mov
pop
pop
mov
stos
loopne
sbb
je
cmpsl
jne
or
outsb
push
mov
loopne
inc
and
je
sti
push
inc
mov
mov
cmpsb
shrb
je
es
fnstsw
cmpsl
pushf
iret
push
push
mov
push
hlt
movsl
aas
pop
cltd
js
in
push
dec
xchg
lea
test
inc
push
mov
jp
rcl
mov
cmp
xchg
fidivrs
lods
lods
sub
pop
pop
xchg
out
add
pop
shr
xchg
sbb
inc
imul
xchg
rol
sub
sub
in
mov
sbbl
mov
or
loope
mov
test
pop
and
loopne
adc
dec
push
jmp
lods
test
int3
insb
jns
out
in
adc
stos
loopne
mov
lret
sbbl
xchg
jns
fldenv
aam
jnp
xchg
and
mov
fisubs
cs
in
test
push
inc
aas
loope
cwtl
out
sbb
sub
pop
or
pop
int3
mov
push
jmp
divb
ror
outsl
mov
xchg
call
xor
test
loop
ss
into
and
bound
rorl
fldcw
xchg
inc
and
sar
adc
xchg
daa
dec
mov
xor
movsl
mov
sbb
or
mov
aam
cmp
lds
adc
sbb
addr16
repz
push
mov
lret
sub
ss
mov
inc
movsl
hlt
das
fldcw
daa
enter
cmp
lret
cmp
jne
addl
ljmp
daa
mov
lret
jns
or
cmp
mov
adc
add
inc
or
cmp
ja
and
pop
loope
test
inc
inc
mov
ds
shll
mov
mov
xor
jnp
push
sbb
sub
test
xorl
ret
and
adc
lret
imul
repz
or
test
popa
mov
lds
sub
or
out
push
in
test
pop
dec
repz
add
jmp
clc
stos
xchg
je
adc
sbb
jne
roll
enter
scas
adc
aas
jge
pushf
lds
jle
pop
cmpsb
mov
sbb
je
add
and
stos
cltd
insl
mov
mov
mov
cmp
das
enter
jl
gs
sub
inc
cld
aaa
mov
ret
shll
pop
sub
or
dec
and
dec
jecxz
mov
loop
into
lret
xchg
xchg
popa
arpl
sarb
dec
out
jnp
lods
jns
and
sbb
jb
push
es
push
xor
mov
clc
scas
jo
xchg
mov
mov
cli
jbe
mov
cmp
jbe
shll
and
jge
ret
daa
or
sahf
cmp
aaa
xlat
movb
in
adc
fs
leave
xchg
loop
mov
ja
test
ja
scas
mov
popa
in
cmc
ja
sbb
mov
push
cltd
sub
push
mov
outsb
cs
rcll
adc
dec
lods
cmc
adc
fistpl
or
and
lock
jmp
pop
aad
mov
mov
mov
insl
mov
xchg
mov
rcr
int
nop
lahf
hlt
jbe
pop
ret
in
leave
xchg
outsl
leave
shrb
shrl
mov
add
loop
arpl
hlt
data16
js
push
dec
cmpsl
lahf
inc
fwait
mov
test
adc
xchg
pop
rcll
sub
adc
addr16
fisubrl
xchg
fstps
cmp
and
xor
aaa
ret
jmp
lcall
rcrl
adc
loopne
mov
out
and
sbbl
cmp
push
inc
cmpsb
mov
dec
arpl
or
fistps
xchg
cltd
imul
scas
pop
jl
shrl
nop
pop
mov
imul
das
xchg
pop
int
testb
lea
imul
sti
sub
icebp
xorb
aas
dec
flds
push
dec
js
popf
sbb
sbb
push
lahf
pop
loop
push
jmp
push
out
jo
scas
push
js
and
dec
inc
or
cmp
cmp
ficoms
xchg
fld
mov
enter
or
popa
int3
cmpsl
stc
mov
test
xchg
xchg
shl
jmp
cmp
decb
inc
mov
mov
mov
mov
stos
pop
or
jg
mov
inc
jae
jnp
push
mov
xchg
mov
fisttpl
jmp
cli
jle
sub
dec
andl
add
cmp
cld
and
fstpl
ss
andl
mov
and
mov
popa
mov
adc
jae
cltd
sub
and
repz
xchg
add
js
in
shrb
clc
mov
xchg
push
cmc
fldl
xchg
xchg
pop
iret
imul
xchg
mov
mov
cmp
mov
xchg
inc
arpl
loope
sahf
movsl
xor
loopne
lret
add
rcrb
subb
xchg
sub
enter
loope
mov
or
push
mulb
xchg
mov
pop
mov
loop
into
iret
jne
xor
negl
fnstcw
adc
sub
into
inc
or
xchg
cmpsb
push
ja
sub
fldcw
inc
xor
inc
stos
jmp
sahf
ss
leave
scas
mov
and
out
jae
sub
jmp
cmp
sarl
push
fwait
jecxz
imul
mov
insb
jo
insb
lock
and
push
inc
xor
out
cmp
cmp
jbe
jl
fcomps
and
mov
and
pusha
pop
jne
ljmp
stos
mov
and
test
insl
mov
jmp
inc
dec
rcrl
lcall
and
adc
push
cmp
sti
and
sub
inc
lock
pusha
pop
lcall
xchg
scas
cs
popa
and
jl
icebp
fs
enter
ja
add
loopne
pop
inc
or
test
stos
test
sarl
ffreep
loop
xor
shll
push
push
je
popa
add
mov
adc
push
push
daa
shll
xchg
sahf
daa
jg
mov
ja
stc
subb
hlt
xchg
out
push
cmpsb
stos
adc
scas
arpl
ja
jo
ss
daa
cltd
xor
inc
cmp
xor
outsl
test
adcb
scas
dec
stos
mov
bound
and
cmpsb
sbb
mov
es
insl
call
push
mov
rcrl
iret
push
pusha
and
mov
mov
add
adc
pop
mov
mov
cmp
aas
mov
and
xor
adc
pusha
fldenv
cmp
inc
jecxz
and
cltd
fdivrp
stos
daa
cmc
cmp
inc
mov
ja
push
pop
aaa
inc
popa
push
int
cmp
iret
je
faddp
lea
ds
and
and
lds
xchg
ljmp
mov
mov
jo
js
stc
dec
mov
iret
mov
ds
sbb
leave
sahf
sbb
sbb
mov
loopne
add
pusha
ss
movsl
int
mov
push
movsb
es
lods
scas
sub
in
xchg
mov
pop
sbb
push
jbe
fwait
nop
sub
or
adcb
ss
ss
sbb
ret
js
movl
dec
inc
jae
popf
xorps
jne
mov
push
cmp
mov
pop
mov
daa
and
sbb
cld
xchg
sub
pop
rcrl
ret
jecxz
xorl
pop
mov
sub
js
outsb
pusha
out
in
mov
shll
cmp
pop
push
add
aas
sbb
sbb
fcomps
enter
cmc
dec
mov
pop
out
push
inc
pop
adc
sub
jns
sub
xchg
loope
mov
es
mov
or
into
ss
pop
js
jne
je
pop
insl
mov
ret
push
fdivl
loopne
lret
mov
or
mov
negl
hlt
cmp
mov
iret
push
fstl
and
in
adc
lods
xor
movb
and
push
mov
sarl
lret
or
sub
inc
movsb
inc
pop
mov
mov
mov
dec
jae
out
xor
inc
clc
pusha
sbb
gs
cmc
aam
insl
enter
xchg
shlb
mov
xor
xchg
sbb
loope
repnz
inc
imul
cmpsb
dec
arpl
jmp
mov
leave
sub
and
jns
fisttpll
mov
outsb
mov
in
mov
push
lea
adc
mov
jnp
push
shrb
shrl
push
xchg
rcr
jb
push
mov
arpl
sahf
mov
xchg
push
cmp
hlt
jae
push
or
loopne
shlb
pop
pop
sbb
mov
rcl
xor
adc
push
mov
mov
cmpsl
fstpt
inc
mov
jns
sbb
pusha
std
jg
mov
and
mov
pop
lea
push
loopne
mov
add
mov
mov
arpl
sub
mull
or
mov
xlat
shll
sub
and
sbb
dec
and
movsb
fwait
js
fisubl
xchg
js
sub
mov
cltd
pop
movsl
and
push
das
mov
dec
addr16
stos
fidivl
fldl
out
xchg
push
inc
mov
pop
xchg
pusha
orb
add
inc
jmp
xor
arpl
add
sbb
loopne
nop
adc
int3
xchg
xor
test
popa
cmc
pop
inc
ret
or
push
xchg
call
clc
xchg
push
push
inc
test
int3
mov
jbe
in
aaa
pushf
loopne
popf
cmp
mov
inc
sbb
push
ffree
sti
add
dec
and
inc
stc
sbb
jmp
push
xchg
sub
pop
lock
xorl
loopne
cmc
xlat
or
roll
in
mov
cmp
jmp
cli
jl
mov
mov
mov
mov
outsl
mov
cmp
push
dec
dec
pop
test
hlt
jae
pop
and
mov
pop
idivl
roll
dec
in
in
mov
dec
arpl
stos
aam
int3
stos
enter
mulb
jns
faddl
test
in
and
in
out
xchg
sub
shll
andb
mov
lret
xorl
nop
mov
aaa
orl
imul
ja
mov
xor
mov
out
mov
loop
fnsave
mov
xor
loop
push
lret
pop
shll
xchg
mov
jb,pn
das
sahf
in
std
and
xchg
pop
aad
cld
test
and
mov
xchg
cmp
leave
sub
mov
dec
ss
loopne
andl
mov
stc
ja
xchg
and
shlb
ret
stc
roll
ss
mov
adc
leave
sub
repnz
icebp
into
sub
push
push
mov
lds
pop
gs
xchg
jbe
pop
loope
mov
push
ret
and
stos
lods
filds
inc
sbb
add
rclb
stc
outsb
mov
sbb
fimuls
fwait
mov
xchg
inc
hlt
pop
test
test
stos
mov
add
adc
push
inc
jb
test
or
xor
pop
js
sub
lcall
lret
push
cmpsb
add
mov
in
das
das
mov
mov
adc
mov
xchg
xchg
insl
jae
leave
push
stos
push
in
les
mov
jp
push
stos
les
sbb
and
xor
mov
loop
or
cmp
jne
mov
mov
stc
mov
push
and
mov
bound
clc
je
adc
pop
sub
cmp
mov
mov
aad
add
fildl
ja
mov
mov
movb
push
push
in
test
popw
loopne
subl
cmp
jp
push
popf
push
push
pop
jbe
out
dec
dec
jbe
xor
push
cmpl
xor
cwtl
inc
mov
mov
addl
repz
mov
cmp
xchg
push
xchg
mov
das
test
xor
mov
or
ja
xor
mov
xchg
mov
cmpsl
mov
es
ficoms
mov
aad
or
pause
fwait
lahf
rcll
mov
lock
cs
popa
cmpsl
xchg
mov
mov
test
xchg
mov
cmp
ss
test
jmp
popf
adc
fmull
sub
mov
mov
jne
mov
cmp
push
xchg
inc
loop
ret
test
xchg
das
pinsrw
shl
jmp
xor
mov
insl
or
sub
xrelease
and
sti
test
inc
jb
test
aam
push
sbb
cmp
idiv
ret
repz
sahf
cmp
xlat
cmc
fcmovnbe
or
xor
mov
mov
lods
imul
movsl
mov
xchg
dec
sub
mov
sbb
stos
mov
out
cld
roll
call
mov
js
mov
shll
fadd
hlt
mov
push
arpl
lcall
xchg
out
pusha
sub
repz
repz
jbe
pushf
lock
test
push
jns
push
pusha
or
xchg
das
jg
mov
inc
jg
aaa
sti
mov
jns
mov
jmp
lret
je
out
aas
cltd
push
inc
nop
pushf
xchg
ret
stos
enter
adc
add
push
rcr
xchg
dec
push
push
shrb
xor
repnz
mov
xor
push
add
cs
loop
sbb
sbb
fwait
out
or
xchg
xchg
jmp
in
mov
add
test
adc
ljmp
nop
push
dec
into
push
rcrb
jmp
scas
jge
push
out
sbb
lods
mov
rcll
das
cmp
inc
orl
mov
jbe
negl
addr16
aaa
bnd
testl
loopne
adc
jmp
adc
mov
xor
notb
mov
inc
iret
mov
test
pop
push
and
repnz
mov
mov
popa
and
int
sbb
stos
outsb
and
scas
cmp
xchg
scas
shlb
mov
mov
xor
inc
push
cltd
int3
and
mov
ret
pop
mov
push
fistl
mov
mov
lret
sar
movsl
push
cmpsl
cmpsl
mov
popf
mov
fldenv
sahf
bswap
stos
lock
adc
mov
mov
pop
push
inc
mov
mov
mov
je
andl
xchg
xchg
mov
sbb
mov
inc
mov
adc
ret
je
stc
mov
jecxz
lret
cmpb
pop
pop
movsb
xor
sbb
sub
cmc
insl
cmpl
sti
add
dec
scas
sub
stos
enter
sarl
adc
and
call
pop
mov
nop
in
imul
rcrb
clc
int
mov
mov
arpl
cli
sbb
mov
sub
outsb
icebp
push
mov
scas
icebp
lcall
js
dec
and
pop
push
lds
pop
ja
sbb
sbb
jb
jnp
xor
pop
gs
mov
ficompl
dec
nop
xor
les
outsb
pop
loope
sub
xchg
cmp
mov
test
and
popf
out
sti
cmp
cmc
add
popa
pop
pop
jmp
pusha
aaa
pop
pop
cmpsl
cld
pop
fs
dec
movsb
xchg
into
push
mov
add
hlt
push
xchg
cmpsl
pushf
mov
iret
and
leave
push
add
lods
push
aad
mov
lea
mov
xchg
in
mov
test
hlt
cld
fincstp
sub
fcomi
dec
push
daa
mov
imull
jmp
pop
cmpsb
pusha
outsb
inc
ljmp
pop
mov
push
xchg
popa
xchg
dec
xchg
push
leave
fwait
sub
in
jbe
cmp
lods
jl
rcrl
aad
rcrl
popf
jo
sub
mov
dec
cwtl
mov
lock
add
or
stos
test
pop
stos
cmpsb
or
movsb
inc
iret
mov
pop
js
and
cs
sbb
lods
nop
imull
jno
dec
popa
adc
out
nop
jns
jge
push
add
xor
lds
mov
jecxz
cwtl
cmpsl
aaa
jae
push
push
aaa
push
fs
aaa
xor
sbb
mov
push
mov
fldenv
imul
push
fdivr
loop
test
inc
add
rorl
jmp
xchg
mov
imull
icebp
adc
push
jp
and
imul
pop
and
mov
addl
jns
aam
sar
mov
stc
mov
int3
and
subl
sbb
fldcw
and
popf
push
loop
jmp
add
sti
stos
add
shlb
lods
adc
xchg
sub
sbb
adc
push
xchg
and
adc
scas
fildll
lahf
fcmovne
jecxz
fnstenv
xchg
subb
adc
cs
xchg
cmp
daa
jnp
add
enter
dec
rcll
jne
sbb
movsb
jmp
xor
movsb
icebp
pop
in
mov
leave
push
enter
popa
or
or
mov
gs
inc
jo
test
icebp
pop
jg
pop
cmp
push
push
push
jae
out
inc
xor
in
lret
cmp
icebp
mov
pop
test
pushf
lods
jbe
sub
pop
test
adc
je
ret
popa
rcrb
aas
pop
sbb
lret
les
divl
lods
sti
push
xchg
jno
cwtl
int
daa
jbe
shll
push
inc
mov
pop
add
imul
js
xlat
pusha
lret
out
fldenv
push
mulb
sbb
pop
cltd
psrlw
loop
xchg
mov
add
int3
jae
nop
xchg
inc
xchg
inc
xchg
push
in
mov
scas
add
sbb
and
push
bound
inc
mov
xchg
test
and
push
or
aas
pop
inc
pop
xorl
pop
inc
push
mov
push
sbb
nop
sub
adc
stos
mov
adc
sbb
cmpsl
dec
push
mov
popa
daa
mov
sub
rcll
lahf
push
cmpsb
out
pop
xchg
pop
stos
or
push
cmp
add
pushf
cmp
mov
jl
adc
mov
jg
test
adc
xchg
pop
add
cmp
push
lcall
cmp
into
sub
hlt
push
and
stos
adc
add
jne
add
sti
rcrl
xchg
leave
push
xchg
mov
jge
jecxz
pop
pop
nop
orl
dec
out
push
aas
stos
adc
mov
mov
aas
je
push
or
cmpsb
sub
or
cmp
stc
inc
jmp
xchg
ret
adc
jg
xor
jnp
xor
int3
and
jnp
mov
mov
and
mov
xor
mov
cltd
or
and
jmp
jmp
add
in
repz
into
sbb
xchg
scas
xchg
out
jae
outsl
out
mov
cli
dec
popa
or
or
cld
cmc
aad
fisubrl
xor
add
loopne
das
fwait
test
adc
mov
mov
je
inc
pop
mov
fwait
cmp
jg
popa
shlb
daa
add
js
mov
shl
sbb
or
inc
xor
pop
negl
push
push
ja
cltd
std
gs
pusha
mov
bound
mov
mov
call
fimull
enter
or
sbb
pop
repnz
stos
xchg
fs
mov
add
lods
data16
fmul
mov
mov
fidivs
pushf
mov
adc
sbb
sti
subl
or
pop
fstl
cmp
movsl
loope
test
jmp
mov
mov
subb
dec
adc
loop
push
sbb
xor
lcall
and
lods
xor
fchs
push
aaa
test
mov
lahf
cmp
sbb
push
rcrl
mov
icebp
mov
std
out
mov
popf
push
push
fneni(8087
mov
pusha
fnstcw
imul
adc
imul
mov
ja
adc
mov
or
mov
cmp
mov
adc
xchg
xchg
cmp
inc
xor
sti
insb
ds
scas
jle
popa
jg
mov
add
shll
adc
jns
sbb
cli
mov
dec
cmp
bound
js
popa
popa
ss
fnstcw
aaa
jae
xchg
js
xchg
lock
add
xchg
loop
sub
cmp
or
insl
add
inc
pop
test
pop
cltd
mov
add
mov
mov
lods
push
fwait
jbe
sub
aas
add
pop
mov
pop
fnsave
cmp
cltd
sbb
aaa
repz
lods
xchg
dec
inc
mov
cwtl
andl
lahf
mov
dec
out
popa
mov
cmp
cmpsb
mov
xchg
xchg
daa
bound
btl
fbld
sub
cmp
pop
dec
adc
pop
jae
mov
mov
mov
push
fcmovnbe
lret
mov
fdiv
or
imul
decl
jnp
push
xor
sub
cld
pop
lcall
lahf
and
lds
xor
jno
push
mov
xchg
int
sarl
and
mov
out
jo
dec
xor
lods
sub
and
lret
push
clc
stos
and
test
aaa
inc
sbb
lds
mov
loop
int3
movsl
fsts
dec
add
mov
push
fidivs
inc
sbb
mov
dec
imulb
arpl
imul
das
jp
sarl
sub
mov
data16
sti
cmp
test
jg
jno
test
sbb
push
aaa
push
mov
insb
in
sub
and
mov
dec
jecxz
and
mov
mov
popf
jae
mov
push
jp
mov
or
sub
fisubs
adc
gs
push
loopne
popa
in
sub
xor
mov
gs
xchg
push
loopne
jne
pop
and
nop
ror
xchg
sub
xchg
in
jge
mov
inc
call
popf
stc
mov
scas
lcall
test
push
int
cmpsl
mov
add
mov
ficoms
loop
xchg
dec
mov
jg
in
decl
xchg
add
lret
popa
test
jbe
lret
xchg
or
mov
xlat
scas
mov
lds
push
shrl
sub
xchg
pop
loopne
sub
xchg
xor
push
push
cmp
mov
leave
and
inc
push
or
xor
cmp
ljmp
repz
ljmp
out
filds
pop
sub
lock
adc
push
js
shrl
sub
js
andb
lock
mov
lock
xor
cmpsl
rcrl
mov
clc
test
lahf
mov
cmp
dec
mov
sti
jne
push
xchg
dec
or
lret
add
lret
test
fwait
push
cmpsl
or
dec
fstps
mov
sar
jle
push
mov
or
or
test
jmp
iret
dec
popa
lcall
inc
sub
insb
mov
dec
mov
sub
leave
imul
or
rcr
fidivrs
xchg
mov
cmpsl
pop
xchg
lret
mov
mov
push
jecxz
aas
adc
in
insb
mov
sub
sub
mov
adc
sbb
bound
imul
push
enter
xorb
rcrl
push
xor
jmp
mov
mov
add
ficoms
dec
gs
jge
cmpsl
shll
mov
pop
pop
jno
push
jnp
adc
sbb
inc
sbb
mov
ficoms
mov
xor
fwait
mov
push
scas
adc
cld
xchg
or
cmc
sub
popaw
stos
dec
aad
dec
mov
xchg
test
push
iret
and
data16
fstl
inc
mov
inc
push
jecxz
aam
out
dec
push
lret
adc
mov
out
pop
push
imul
hlt
loope
dec
fsubs
jmp
test
sub
orb
mov
inc
js
adc
cmp
mov
xor
scas
mov
addr16
int3
xor
add
xchg
pop
xchg
pop
push
add
dec
adc
not
adc
fsubr
fsubs
imull
fistpl
add
popa
push
mov
inc
stos
popf
fwait
mov
popa
mov
jmp
ljmp
pop
sbb
push
sub
mov
adc
je
mov
lds
pop
or
pop
push
xor
push
mov
les
sbb
mov
js
or
inc
ret
test
mov
cmp
aad
cwtl
mov
movsl
xchg
aaa
in
stos
push
popf
push
addr16
jo
push
mov
in
leave
outsl
pusha
sbb
mov
mov
mov
mov
mov
stos
mov
and
loopne
leave
add
mov
das
sub
int3
fists
sub
ja
xchg
and
lea
mov
pop
xchg
xor
jecxz
jp
push
sbb
popa
mov
mov
adc
or
addr16
cmp
xchg
jns
mov
pop
push
xchg
jg
xchg
cmp
mov
shrb
mov
idivl
insl
mov
adc
sbb
sbb
cli
testl
or
and
stos
mov
inc
lods
sbb
jno
imull
jo
jecxz
mov
cli
jno
das
mov
sub
addr16
fbld
cmp
xor
push
shrl
mov
inc
sahf
mov
icebp
adc
inc
or
je
aas
sbb
mov
jge
push
movsl
lods
dec
adc
xor
push
mov
inc
popa
jb
lea
pop
cmp
movsb
shl
push
mov
push
jb
pusha
stos
jl
lcall
test
adc
addr16
pop
aam
xchg
add
test
lcall
and
jg
rcrl
sub
movsl
adcl
je
jl
cwtl
push
stos
sbb
aaa
sbb
dec
js
jl
xchg
mov
mov
mov
outsl
dec
cmp
dec
int3
in
dec
jmp
lds
or
clc
roll
and
mov
xor
push
subl
adc
mov
sbb
xor
leave
jnp
mov
pusha
loopne
mov
push
sub
mov
cmc
mov
repnz
xor
cmp
insb
int
loop
in
data16
push
mov
lds
aas
sub
cmp
popa
test
clc
mov
push
xchg
hlt
or
mov
dec
nop
loop
dec
mov
lret
pusha
mov
mov
mov
mov
and
cmp
movsl
lds
rorl
sbb
loop
enter
mov
or
sub
mov
leave
inc
dec
or
push
mov
mov
sti
dec
push
dec
xor
cmp
loop
pop
jmp
dec
sarl
addl
dec
fwait
mov
jecxz
aas
mov
or
lcall
rolb
mov
gs
and
xchg
test
mov
or
test
or
mov
scas
inc
shll
xlat
in
pop
inc
mov
sti
sbb
sqrtps
sub
faddl
xor
push
insb
stos
pop
loope
hlt
lds
test
loop
pop
add
in
or
loope
mov
mov
aaa
jg
lods
mov
sbb
pop
nop
ljmp
test
xor
jbe
pop
rcll
mov
ja
outsl
add
mov
cmc
cmpsl
push
pop
mov
mov
outsl
inc
rol
std
push
cli
movsb
hlt
lock
adc
ljmp
push
mov
adc
js
inc
mov
xor
push
add
int3
iret
fisttps
pop
leave
push
sub
cmp
mov
sub
xor
mov
int3
or
dec
leave
aas
jo
cmp
adc
loop
aad
inc
inc
int
in
jmp
orb
mov
stos
lods
xor
pop
ror
jmp
sbb
push
adc
sbb
js
movsb
packuswb
or
ret
push
and
mov
inc
dec
inc
js
xchg
rolb
jne
rcrl
fistpll
mov
jns
rcll
clc
adc
loopne
mov
mov
dec
sub
cmp
push
in
fstpt
loopne
mov
adc
stos
stos
roll
lods
jmp
and
cmp
xor
movsl
mov
pop
cld
mov
fwait
test
jns
aaa
xchg
shlb
in
xorb
jo
mov
loope
rcl
insb
loop
repz
xor
or
xchg
je
iret
iret
popa
das
mov
jno
in
out
loope
nop
pop
mov
in
test
jle
mov
cmp
arpl
popa
int3
push
incl
fisttps
je
repz
lret
xlat
and
or
sbb
push
cli
jne
sbb
pop
or
and
je
sbb
push
pop
xlat
das
mov
repz
sbb
or
mov
les
stos
inc
sbb
mov
aas
ret
ja
enter
mov
sub
fsubs
or
out
aas
loop
push
and
mov
outsb
popa
adc
push
test
sbb
push
in
xchg
faddl
mov
and
mov
and
in
stos
imul
pop
mov
loope
xchg
ret
movsb
enter
scas
stc
setge
ja
cmp
lahf
test
mov
int
frstor
imul
sub
xor
dec
sub
adc
mov
xchg
and
push
mov
les
dec
dec
xchg
int3
or
dec
push
cmc
dec
mov
icebp
jae
xchg
fbld
out
dec
mov
push
inc
push
leave
add
xchg
sar
rolb
mov
rclb
sub
sti
sbb
addr16
mov
cmp
insl
mov
bound
push
mov
mov
cmc
mov
leave
and
cmp
mov
insl
idivl
sub
mov
les
add
arpl
add
stos
mov
sub
div
lds
inc
stc
jg
mov
cli
mov
ljmp
dec
mov
pop
je
mov
mov
imul
movsl
jmp
xchg
jmp
ljmp
js
push
xchg
or
and
push
fdiv
fdivrl
push
fisubs
dec
pop
in
data16
andb
or
inc
xchg
mov
fs
call
jmp
pop
cwtl
fcomp
cwtl
hlt
adc
outsl
repz
fyl2xp1
rcrl
sbb
mov
dec
jo
sti
pop
rol
jae
mov
dec
ja
xchg
pop
jmp
scas
sarl
adc
jecxz
test
aam
repz
jno,pn
mov
andb
mov
ror
call
out
imul
sbb
sub
push
mov
sti
or
ss
sarl
jle
stos
cmp
mov
fimuls
insb
sbb
lods
lods
imul
or
jecxz
lsl
inc
pop
ret
push
cmpsb
mov
daa
inc
pushf
jg
gs
mov
fwait
xchg
pop
cmp
loop
xchg
mov
sbb
fs
test
push
ds
pop
adc
cmp
jmp
sbb
and
or
mov
jbe
cmp
pop
out
fwait
lock
pop
dec
inc
inc
push
jne
mov
mov
sbb
rolw
lret
push
push
xlat
mov
jmp
leave
mov
mov
mov
ljmp
ret
mov
movsb
xor
pop
movsl
stos
xchg
ds
sbb
fsubl
dec
mov
mov
and
and
mov
fsubp
cmc
cmp
sbb
pop
mov
stc
adc
movsl
fdiv
fadd
or
jmp
adc
ret
push
mov
jmp
xor
jmp
cmpsl
sbb
sbb
or
pop
leave
jmp
stos
stc
inc
mov
addr16
mov
in
mov
bound
test
push
imul
push
gs
dec
xorl
mov
pop
int3
mov
sbb
xchg
push
xor
cmp
adc
and
imul
idiv
and
or
add
dec
daa
mov
jmp
decl
push
fildll
mov
out
pop
xchg
pop
cltd
scas
mov
xchg
fnstcw
shll
dec
fwait
loopne
fs
ljmp
mov
mov
xor
leave
mov
xchg
push
mov
xorb
popa
fldl
jnp
cmp
in
inc
loopne
in
mov
push
cmc
hlt
mov
xchg
push
addb
rcl
jmp
repz
inc
test
cs
mov
andb
xchg
mov
jmp
jmp
mov
inc
sahf
out
dec
fnstenv
inc
sub
push
xchg
mov
not
xor
or
pop
ret
ja
cs
inc
lcall
mov
sub
lds
push
xchg
push
fidivrs
lods
repnz
mov
loop
repz
aaa
hlt
lock
mov
cltd
add
add
xor
cmp
cmpsl
imul
es
mov
push
inc
xchg
fnstcw
pop
add
fstl
sub
shl
dec
imul
ret
test
xor
mov
mov
mov
or
add
adc
fwait
les
es
sub
mov
xchg
jl
mov
mov
mov
daa
stos
stos
mov
xlat
fdivr
addb
mov
mov
mov
dec
jmp
lcall
pop
dec
cld
fxch
mov
loope
inc
rcrl
lods
sbb
cmpsl
orb
cmpsl
jge
enter
jecxz
comiss
ret
sub
dec
out
test
movsl
repz
pop
dec
xor
aaa
std
xchg
push
test
xchg
ja
xchg
xchg
cmpsb
pop
pop
xor
scas
jp
loopne
movsl
scas
cltd
xchg
fdivl
fwait
repnz
jmp
icebp
push
fnsave
js
aaa
test
fisubrl
jl
pusha
sub
iret
js
notl
mov
mov
push
jns
shll
xor
mov
pop
xor
ror
subb
jnp
stos
add
mov
sahf
sub
sahf
mov
int
and
pushf
inc
cli
and
out
xchg
test
ljmp
ds
movsb
addr16
dec
cs
mov
xchg
push
sub
nop
pop
cmc
aad
mov
out
mov
add
icebp
dec
div
jg
shlb
mov
dec
sbb
or
ja
adc
or
sbb
jae
add
icebp
mov
dec
sbb
add
pop
ret
or
adc
roll
push
mov
or
xor
add
clc
or
add
jno
out
mov
stos
mov
sbb
mov
imulb
jbe
es
mov
mov
and
xchg
jge
insl
js
push
pop
nop
loopne
negl
cmp
gs
xchg
xor
mov
push
lock
sub
pop
adc
jb
mov
cmpxchg
pop
scas
sub
and
repz
cld
add
mov
js
in
sahf
ss
repz
cmpsb
pop
popa
push
xchg
dec
dec
es
int3
push
and
sbb
push
fsubr
inc
xor
loope
loop
js
stc
mov
pop
lds
enter
cs
ret
xchg
test
setg
jmp
mov
push
dec
push
out
sarl
rorl
mov
sahf
cmp
pop
cmpsb
js
fsubs
js
xchg
dec
enter
sub
xchg
inc
xor
mov
cmpb
pop
mov
sub
sbb
mov
test
push
lret
out
cmp
imul
cmp
mov
xchg
push
xor
cli
dec
xchg
arpl
jl
ss
daa
sbb
inc
mov
jmp
sbb
xor
or
movsb
xchg
xor
ljmp
in
xor
pop
mov
dec
adcl
push
adc
sbb
jae
mov
imul
sbb
xor
icebp
mov
inc
and
jg
push
push
addl
xchg
or
mov
sub
les
sub
add
xchg
call
enter
jecxz
stc
sbb
sbb
testb
or
pop
mov
push
rorb
sahf
mov
mov
aaa
mov
sbb
dec
bound
insb
popa
push
mov
mov
mov
loope
ljmp
sbb
push
and
cld
sub
xor
xchg
mov
mov
pusha
push
shll
or
cmpsl
sub
popf
or
movsl
dec
sarb
mov
pop
loop
out
test
aad
stc
nop
push
gs
pop
pop
lods
fs
mov
xchg
mov
sbb
iret
ret
xlat
data16
mov
xor
and
enter
sti
dec
sbb
and
addr16
das
jmp
scas
add
push
mov
dec
mov
in
or
mov
aam
clc
outsl
xlat
xchg
add
sub
lret
aad
popf
jb
mov
inc
pop
mov
in
mov
movsb
sub
cmp
mov
mov
sub
sahf
cmpsb
xchg
imul
js
adc
push
or
dec
ret
repnz
in
dec
xchg
test
mov
lret
aaa
jne
jmp
mov
inc
test
lahf
xor
out
adc
loope
xchg
ljmp
sub
jge
stos
loop
sub
out
or
push
mov
sub
es
sbb
push
stos
mov
sub
add
outsl
mov
mov
icebp
iret
push
xor
dec
lea
cmpsl
iret
stos
roll
imul
icebp
mov
les
out
roll
repnz
push
and
cmp
movsl
sub
push
add
jne
fsubrp
add
cmp
aad
mov
jle
and
hlt
sbb
sub
leave
ss
mov
push
sbb
into
mov
clc
add
loop
jne
push
mov
movb
aas
sbb
cmp
xchg
les
or
jmp
js
imul
sbb
dec
jae
add
push
cmp
loop
jae
xor
and
mov
popf
dec
cmp
cmp
jp
clc
jle
call
idivl
xchg
bound
mov
push
push
sbb
mov
popa
sbb
mov
jns
adc
cmpsb
dec
lods
xor
xchg
jg
push
shrb
shll
mov
idivb
fs
jp
pop
iret
insb
and
inc
mov
repz
lea
mov
lahf
inc
push
or
xchg
xchg
adc
dec
mov
rorl
les
dec
adc
xor
inc
mov
hlt
hlt
adc
sub
scas
mov
mov
in
and
push
xchg
or
popf
dec
js
push
gs
mov
jb
adc
std
jns
jecxz
xchg
repnz
test
cmp
cli
mov
andl
je
and
mov
aas
lahf
or
movsl
mov
sub
aad
mov
repz
loopne
mov
pop
test
loop
lock
fmuls
mov
mov
xchg
jmp
xor
mov
and
testb
jne
jbe
cltd
enter
xchg
push
dec
xor
insl
mov
int
mov
outsb
ljmp
xlat
ds
shrl
popa
jmp
iret
jno
fcoms
and
sti
leave
jmp
testl
jno
fcmovnu
xlat
sub
sarb
sub
xchg
jne
call
pop
add
mov
das
mov
movsb
ss
fcmove
jmp
stc
cs
fistpll
sbb
fcmovnbe
mov
outsl
cmp
rorl
adcl
jo
dec
mov
fiadds
loop
flds
daa
divl
jl
gs
lods
stc
fldcw
fstl
sbb
xor
cld
lds
mov
sub
addb
ret
cli
or
xchg
jne
cmp
xchg
mov
xchg
mov
scas
inc
stc
xor
dec
test
cld
rorl
fcoml
xor
loop
xor
fcmovnbe
rol
mov
xchg
xor
fldcw
sarl
xor
lods
or
je
pop
jo
cmpb
mov
mov
leave
mov
popf
jb
lds
add
popf
add
out
rorl
addb
sbb
ja
pop
mov
sti
add
xchg
push
mov
sbb
dec
cmp
in
outsb
mov
cld
lahf
sub
mov
inc
cs
leave
inc
jl
jle
shl
lock
push
aaa
mov
es
pop
sub
mov
jmp
fstl
inc
mov
sar
dec
pop
test
in
adc
cmpsl
popa
pop
and
lahf
or
fadds
rorb
out
pop
mov
outsl
cmp
cmpsl
idivb
outsb
aad
cmp
push
mov
lea
sub
hlt
popa
lcall
sbb
lock
add
xor
pop
ss
jno
push
int
fchs
xchg
and
xorb
hlt
movsb
xchg
test
lret
pop
mov
adc
mov
repz
pop
and
adc
stos
dec
push
mov
pop
jb
inc
idivl
mov
dec
test
fsubr
add
mov
dec
inc
rorb
in
jl
test
loope
mov
pop
ds
subb
push
je
popa
aad
stos
pop
pop
rol
sahf
xor
mov
inc
add
rcrl
sub
dec
leave
add
jmp
repz
mov
mov
jmp
sbb
mov
xchg
lcall
pop
out
mov
jbe
mov
shll
or
pop
pushl
xchg
and
cmpsb
stos
gs
outsb
sub
pop
pop
rep
fs
xchg
push
mov
push
cmp
stos
in
adc
adc
addl
sub
xchg
stos
aaa
imul
in
cmp
icebp
aad
sub
mov
andb
int3
cmp
shr
test
xor
cmp
notl
sbb
aaa
sbb
stos
pop
xchg
sub
leave
fdivr
mov
jg
dec
lret
pop
repz
add
mov
or
movsl
sub
lret
popf
divl
cmp
add
stos
xor
and
mov
mov
in
popf
aas
inc
ss
pop
jg
cmc
jo
mov
mov
repz
mov
outsb
fcoml
or
mov
hlt
fsubrl
shrb
jmp
mov
ja
push
push
idiv
xchg
fcoml
loop
dec
aas
jbe
jne
pop
or
test
xchg
loopne
in
adc
and
mov
cs
imul
mov
sbb
enter
jbe
aaa
popf
loopne
sbb
repnz
or
mov
icebp
int3
aaa
sbb
inc
push
sub
mov
push
mov
sub
enter
mov
loopne
xchg
das
push
lahf
sbb
ljmp
add
stos
push
xor
sub
pop
adc
ret
js
xlat
dec
in
add
mov
lock
cltd
or
push
sti
ljmp
ljmp
sti
cmp
sbb
test
xchg
fistpl
and
rorl
pop
pusha
sub
imul
int
mov
inc
mov
jecxz
push
out
inc
lods
shll
les
mov
xchg
jmp
pop
pop
leave
push
or
xor
add
mov
xchg
xor
cmpsb
mov
inc
push
sub
or
mov
cmpsl
lret
mov
adc
pop
sub
imul
jns
push
push
dec
je
cli
dec
pop
xchg
sub
jne
push
adc
loopne
push
adc
int
mov
jmp
js
enter
es
mov
mov
scas
ljmp
xchg
es
fsubs
movsb
pop
push
cltd
not
add
jg
in
lret
fcoml
leave
xor
jae
xchg
mov
mov
aaa
mov
sub
push
mov
dec
pop
xor
pushl
jbe
sbb
push
xchg
adc
fwait
mov
lds
jno
inc
jmp
mov
sub
sbb
mov
inc
aas
add
ljmp
pop
imul
mov
adc
js
popf
les
mov
test
addr16
cmp
pop
es
jle
xchg
push
pop
sub
not
data16
and
outsl
sbb
mov
leave
or
mov
repz
cvtpi2ps
sub
and
orb
xchg
xchg
daa
mov
xchg
sbb
dec
aaa
cmp
mov
fdiv
lea
shlb
stos
xchg
mov
mov
mov
cli
mov
je
scas
shll
xchg
mov
jae
and
ds
test
mov
adc
stos
or
ret
mov
xor
das
cltd
push
push
sub
xchg
rclb
cld
cltd
jbe
push
sbb
out
das
pop
mov
pop
movsl
xchg
leave
divb
mov
xlat
push
scas
xor
dec
shrl
imull
cwtl
mov
loop,pt
idivl
ret
and
rcrl
sub
jg
jp
or
or
leave
sub
sti
and
jae
lret
incb
xchg
or
aam
jmp
into
push
sbb
mov
dec
shll
imul
and
xchg
iret
ljmp
jmp
push
cmp
sbb
xchg
mov
fs
fidivs
dec
ss
jbe
ljmp
push
add
aaa
inc
ret
rcl
clc
cmp
fwait
xlat
jmp
int
xchg
inc
xor
push
dec
movsb
xchg
inc
test
stos
mov
icebp
inc
imull
mov
fimuls
or
inc
cmp
jmp
cmpl
loope
nop
ljmp
xlat
scas
loopne
loop
and
cmpsb
stc
xchg
cmc
hlt
mov
data16
jle
and
aaa
xor
in
stc
mov
or
pop
es
inc
jae
sbb
push
lcall
mov
data16
leave
sbb
inc
in
repnz
rclb
shr
pop
data16
sti
pop
mov
xchg
jge
incl
shl
cmp
test
mov
lret
sub
loopne
loop
fidivl
add
and
data16
or
inc
add
mov
aad
cmp
xchg
or
mov
pop
ss
add
popa
je
cmp
stos
scas
mov
icebp
js
loop
pushf
fsubrl
pop
dec
sub
jnp
lret
jl
in
fldcw
mov
adc
xchg
ljmp
sbb
push
loope
sub
or
idivb
insl
inc
aam
mov
aas
loop
pop
jmp
xlat
fstpl
orb
or
mov
dec
adc
jb
cmp
add
xchg
mov
xchg
and
mov
adc
gs
into
rcrb
not
dec
cmp
xor
xchg
push
mov
push
ror
out
adc
addr16
push
cs
mov
mov
pop
out
shrl
and
cltd
ret
xchg
and
sbb
and
jmp
mov
mov
jo
mov
hlt
sbb
and
ljmp
aad
enter
sbb
test
xor
xor
inc
lret
lods
aas
inc
jmp
push
test
cltd
andl
adc
cmp
dec
data16
ss
inc
icebp
loopne
icebp
mov
add
cmpsb
push
jecxz
test
dec
xchg
adc
jmp
or
mov
xor
sub
test
and
loope
ljmp
mov
mov
stos
mov
iret
push
push
mov
pusha
pop
popa
js
mov
out
mov
inc
lods
dec
lret
gs
dec
test
sahf
xchg
les
pusha
mov
jmp
aaa
mov
dec
mov
sahf
mov
or
mov
add
add
stos
ss
inc
mov
fcomi
xor
leave
cmpsl
imul
in
jmp
outsl
pop
pop
imul
sbb
and
push
jmp
test
int3
addb
or
mov
mov
test
aaa
fisubrl
pop
popa
fildll
sbb
mov
sub
push
test
xchg
sub
cmc
mov
fsubrs
jns
pop
jmp
aam
mov
sub
lahf
aaa
fmul
inc
int3
adc
xor
in
push
xor
jg
testb
xchg
aad
push
cmp
sub
out
insl
loope
push
int3
ds
mov
nop
dec
jmp
aad
inc
loopne
push
test
xor
xor
fists
jecxz
dec
movsb
pop
pop
imul
adc
leave
cmpsb
out
push
leave
sbb
adc
jo
inc
stc
int3
pop
imul
rcll
push
jmp
les
pop
cmp
lock
rclb
jmp
cmc
outsl
sbbl
mov
and
movsl
aas
and
or
add
nop
popa
push
lock
data16
nop
mov
pop
cmp
popa
pop
nop
insb
sbb
fsubrl
iret
mov
pop
cli
mov
adc
decl
stos
test
mul
mov
xchg
mov
sbbl
sub
arpl
lods
mov
lock
cmp
ror
xor
inc
jnp
push
es
pop
ror
pop
addl
mov
das
mov
stos
cwtl
mov
mov
je
adc
mov
push
adc
out
je
ljmp
xchg
mov
les
ljmp
adc
mov
or
shl
mov
add
mov
fistpl
add
jno
fcoml
jb
imul
jno
push
sbb
into
cltd
cmpsb
dec
inc
jle
cmpsl
pushf
mov
push
sti
pop
scas
xor
ljmp
cmp
adc
movsl
dec
icebp
or
outsb
mov
into
mov
sbb
mov
int3
test
mov
cmc
out
cwtl
mov
xlat
cmpsl
mov
test
sub
hlt
icebp
shrl
imul
cmp
xchg
xor
xchg
fmull
and
push
gs
sarb
xchg
loop
in
xchg
push
dec
lea
mov
hlt
loope
sbb
loope
jmp
mov
dec
jnp
push
fucom
je
out
stos
jl
sbb
pop
js
mov
sub
push
mov
fmuls
jle
xchg
fdivs
stos
pop
and
adc
cltd
mov
pop
xchg
jmp
pop
cmpsl
mov
mov
das
loopne
mov
int3
xchg
jae
popf
xor
xchg
fsubrl
shlb
sub
test
mov
loopne
adcl
movb
cmpsb
inc
inc
ss
mov
xor
sbb
add
dec
outsb
cmp
and
sti
mov
push
cli
in
mov
insl
push
push
test
jnp
mov
mov
fucomi
push
push
inc
jo
fdivrp
and
mov
mov
mov
xchg
pushf
dec
mov
movsb
fisubrs
push
push
in
xchg
mov
sti
sbb
add
mov
lods
lods
xchg
fisttpl
dec
lods
and
leave
aas
mov
mov
rcr
push
icebp
xlat
mov
dec
loopne
mov
push
and
mov
ja
aad
repnz
xor
aas
fcompl
mov
mov
push
idivb
mov
ficomps
or
add
mull
pop
outsl
cmp
mov
jbe
pop
sbb
in
fldenv
lea
push
xchg
mov
xchg
test
shlb
fs
mov
ss
insl
xchg
je
push
inc
mov
gs
call
clc
mov
adc
mov
mov
sub
or
cmp
push
lods
jae
decl
lret
xchg
ret
push
xor
xchg
aaa
jno
pop
mov
ret
stos
or
lock
shll
mov
aaa
in
test
out
popf
incl
cmp
pop
aas
push
jne
movsl
xchg
inc
push
mov
and
and
xor
outsl
nop
insl
stc
arpl
arpl
aaa
fisubrs
push
or
popf
adc
and
js
inc
ret
pushf
xchg
imul
out
stos
stc
and
xchg
mov
dec
stos
cmpsb
ret
mov
sahf
jmp
fcmove
fdivrs
dec
jns
lret
and
iret
popf
int3
gs
push
mov
cltd
sbb
ja
outsl
push
xchg
cmp
es
adc
push
lcall
pop
call
push
mov
ret
sub
dec
push
sahf
stos
fsubr
cmp
and
jnp
int3
stos
sub
jp
xor
stos
add
imul
ret
jo
push
jg
or
lods
mov
dec
test
repnz
jbe
enter
mov
inc
push
mov
pop
adc
and
lcall
xor
mov
pop
hlt
dec
cmpsb
adc
sti
mov
nop
outsl
jecxz
test
xor
test
and
leave
jmp
in
adc
sbb
and
xchg
xchg
in
xchg
fcompl
aas
and
push
fdivr
cmpsl
cmpsb
xchg
cltd
push
dec
mov
cwtl
and
pusha
orb
pop
in
ja
push
or
jmp
cmp
cld
xchg
test
pusha
inc
add
add
shll
jl
mov
xor
xchg
data16
in
xor
xorl
lods
mov
cli
cmpb
pop
mov
in
mov
and
xlat
xchg
daa
inc
dec
sub
cltd
aas
fnclex
sbb
mov
stos
cmpl
ret
shrl
mov
dec
jno
push
shrb
mov
cmp
sub
leave
rolb
push
mov
jmp
mov
loopne
cli
test
adc
inc
adc
ret
fwait
sub
add
ja
mov
and
dec
outsb
xor
push
rcrb
lcall
xorb
mov
jecxz
mov
cmp
cmp
xlat
ljmp
mov
xchg
mov
or
lret
imull
imul
or
fwait
test
pop
jmp
mov
mov
cwtl
das
jb
lds
sub
icebp
adc
push
pop
stc
clc
mov
sub
outsb
mov
aaa
xor
in
jo
ja
rcll
lcall
jmp
mov
add
push
xchg
jge
test
mov
mov
sub
stc
loop
icebp
lock
les
mov
mov
mov
mov
jmp
ffree
adc
mov
or
push
xor
ret
lret
hlt
add
lret
mov
xchg
addr16
js
das
jge
popa
jne
aad
gs
test
pop
pop
jmp
gs
mov
sbb
jns
dec
outsl
inc
mov
pushf
lods
cmp
mov
jmp
mov
push
daa
insb
mov
jecxz
cld
push
rolb
or
xchg
rcll
cmp
inc
and
imul
inc
sub
sub
xchg
ja
rolb
mov
sbb
ja
rcl
in
sub
sbb
enter
mov
sub
xchg
es
mov
fnstenv
cltd
mov
insl
mov
and
adc
adc
sbbl
ja
cmpsb
loopne
stos
adc
cmp
mov
mov
test
push
pop
adc
xchg
mov
ljmp
shll
fdivl
inc
jno
mov
ja
pop
dec
inc
xchg
loopne
xchg
pop
js
push
xchg
sub
cli
idivl
jmp
dec
push
jle
out
hlt
mov
and
pop
push
mov
test
cld
insb
cmpsb
lcall
cwtl
dec
jmp
jne
push
imul
scas
and
xor
xor
pop
push
push
mov
xlat
xchg
ljmp
xor
arpl
je
mov
sub
rclb
fcmovbe
jne
int3
xor
mov
fsubs
outsb
out
insl
sbb
rcl
inc
gs
xchg
enter
leave
mov
mov
pop
lret
out
xchg
insb
test
lret
mov
xchg
jbe
fwait
insb
xchg
addl
aad
fbld
push
sbb
add
pusha
andnps
enter
pop
jne
imull
lods
testl
jbe
push
icebp
jmp
stc
insb
arpl
push
or
leave
xor
popf
shrb
jbe
xchg
insb
jae
mov
mov
scas
xor
test
jns
rcrb
data16
shll
push
outsl
jge
jo
and
js
pop
test
mov
inc
mov
rcll
mov
pop
mov
test
and
lods
daa
mov
out
aad
test
pop
nop
js
and
call
cmp
jbe
dec
leave
sbb
xlat
sbbl
cwtl
jmp
dec
adc
lods
inc
xor
stos
mov
je
jae
mov
wbinvd
dec
add
and
add
mov
call
inc
ljmp
in
outsb
mov
xor
mov
ret
ss
xchg
pop
or
ja
and
cs
sbb
xchg
cmp
xlat
mov
sti
nop
adc
sbbb
adc
mov
xchg
adc
cmc
mov
movsb
stc
mov
adc
sahf
outsb
sub
sti
jns
cmc
cmp
das
cld
mov
rcll
sub
inc
out
les
dec
cmpsb
sub
loopne
sbb
in
inc
xchg
and
movsl
addr16
andb
cmp
dec
pop
std
in
negl
jg
out
roll
jbe
pop
and
mov
fstps
inc
rorl
movsl
adc
lret
rcrl
push
cli
cmp
push
mov
movsb
dec
addb
and
js
fstl
bound
push
fxam
adc
enter
or
repz
cmpsb
push
cmp
cmpsl
sub
movsl
jnp
movsl
mov
addr16
inc
dec
cmpsb
jmp
push
pop
into
sbb
and
into
es
in
out
mov
xchg
popa
into
mov
stc
xchg
mov
subl
ret
inc
stos
sub
scas
mov
movsb
loope
push
pop
dec
loop
xchg
xor
add
cmp
dec
push
das
xchg
leave
sbb
imul
aaa
inc
ret
cmpsl
xor
iret
scas
inc
jbe
xchg
push
pop
ja
outsb
shl
js
orl
sbb
in
mov
les
mov
adc
stos
mov
xchg
popa
or
jg
dec
push
stos
push
xchg
mov
xor
jmp
mov
xchg
sub
add
xchg
lea
repz
fwait
push
sbb
loop
jne
xorb
dec
dec
add
rcr
fs
out
mov
mov
pop
dec
cmpb
mov
setl
ret
mov
xlat
sub
mov
fldcw
push
test
inc
mov
xor
mov
jne
and
mov
sub
js
in
fwait
setl
dec
call
stos
mov
aas
dec
aaa
xchg
pop
mov
mov
jp
and
mov
mull
lret
addl
mov
sbb
scas
mov
popf
movsl
add
enter
push
mov
jmp
push
xor
pop
lods
cmp
lods
test
add
pop
inc
ja
insb
xor
sbb
sub
shrl
jnp
outsb
xor
adc
mov
mov
cltd
cmp
adc
xchg
lds
mov
pusha
imulb
stos
xchg
mov
push
hlt
jb
xor
sub
sbb
mov
jg
push
or
pop
nop
loop
pop
push
dec
sbb
xor
rcll
loope
dec
sbb
pop
mov
popa
jmp
mov
cmpsb
icebp
add
sub
push
ret
repz
xor
cmp
test
inc
sarl
mov
cltd
push
add
es
sbb
aaa
fs
imul
popa
mov
fdiv
fsubrl
xor
sbb
test
mov
shll
imul
pop
lods
and
mov
dec
or
inc
insl
xchg
fldcw
lock
fiaddl
mov
mov
ja
mov
push
dec
ret
mov
add
sub
pop
pop
xchg
mulb
add
les
mov
sub
aam
in
push
ret
xchg
divb
push
insb
cmp
lret
push
lahf
jb
incl
cmpsb
shlb
loop
cmp
dec
cmp
hlt
push
xchg
loopne
mov
push
ret
inc
mov
or
dec
inc
fnstcw
or
sub
or
arpl
inc
movsb
push
mov
pop
jg
popf
cmpsl
data16
and
fimull
cli
imul
loope
inc
js
adc
or
mov
xor
push
sub
roll
loopne
fnstenv
cmpsl
push
mov
jae
addb
stos
jmp
pop
pop
sti
add
and
mov
sub
dec
lret
jp
popa
xchg
popa
mov
repnz
lcall
jae
hlt
pusha
js
data16
push
sub
repnz
inc
int3
clc
outsl
xor
adc
jmp
push
xchg
dec
and
mov
test
mov
es
shlb
out
xchg
xor
xchg
cmp
loope
scas
cmp
jb,pn
andl
cmpsb
stos
movsb
pop
push
leave
lods
pushf
repnz
push
loope
cs
cmc
dec
sub
and
xchg
pop
jnp
sub
sbb
gs
cmc
inc
lret
in
outsl
cmp
mov
xchg
xchg
mov
lret
adc
outsl
dec
stc
jne
loopne
scas
mov
xchg
notb
add
inc
jae
jo
sarl
lea
mov
fcompl
shrb
cmpsl
or
lods
xor
mov
out
imul
aaa
or
xchg
push
xchg
xchg
xor
cmp
jno
movsl
pushf
or
repz
push
into
mov
fwait
lods
rcrl
int3
inc
lahf
sub
mov
dec
loopne
sahf
mov
mov
xchg
mov
xchg
incb
jo
inc
pop
shr
aas
sub
loope
sbb
push
mov
pop
inc
ja
hlt
ljmp
popa
mov
shl
push
pop
jp
cmp
test
inc
int3
mov
xchg
popa
and
jmp
iret
fnstcw
inc
sub
mov
inc
iret
mov
add
inc
shr
ret
xor
sub
xor
inc
jecxz
test
mov
inc
scas
mov
test
pop
sbbb
lcall
inc
scas
xchg
aas
add
scas
mov
nop
cmp
dec
sbb
cmp
cmp
jge
lret
jg
lret
cmp
push
lret
xchg
lock
cs
gs
lods
rcr
xlat
movsb
mulb
repnz
test
jmp
movsl
adc
xorb
pushf
ss
push
movsb
ss
mov
pop
dec
mov
adc
movsl
pop
inc
mov
mov
das
push
pop
ficoml
leave
scas
xor
stc
push
xchg
es
rcrl
sub
mov
loop
inc
sbb
pop
aas
add
or
push
jae
xor
movsb
fwait
inc
mov
jmp
xchg
scas
pop
fdivs
cmp
add
stos
ss
test
and
mov
sub
imul
out
lahf
lds
adc
jg
nop
stos
pop
mov
inc
aas
jle
or
adc
push
push
test
push
cmp
scas
xchg
mov
fnstcw
stos
inc
cmp
gs
mov
mov
add
rcr
das
adc
jp
aaa
rolb
mov
xor
jns
gs
bound
rclb
cmc
aaa
cmp
mov
lcall
mov
mov
push
adcl
into
js
scas
sahf
dec
ljmp
adcl
repz
mov
sahf
lods
and
outsl
movlhps
cltd
adc
mov
jecxz
test
xchg
mov
jbe
aam
lcall
xor
cmp
xor
cmp
ret
pushf
je
xchg
cmp
pop
aaa
sbb
repnz
loope
push
mov
inc
sbb
push
mov
mov
push
rcrl
xchg
adc
mov
sub
divl
and
movsb
loopne
repnz
shll
pop
cs
mov
loope
jb
jl
cmp
push
cmp
cmp
out
mov
je
lods
inc
dec
mov
jmp
xchg
and
sub
lods
test
add
xor
cli
sbbb
int
mov
insl
adc
add
popa
lret
icebp
xchg
mov
jge
push
fmuls
cmpb
inc
dec
ds
jb
loope
mov
push
push
pop
sbb
xchg
mov
xchg
jmp
test
ret
push
in
or
mov
mov
push
xor
cmp
ret
das
sub
and
push
mov
popa
and
add
mov
xor
xor
lods
ljmp
push
nop
loopne
nop
mov
mov
mov
mov
xchg
cli
out
jmp
pop
shll
mov
pop
dec
xchg
fisubs
jl
fwait
std
leave
popf
xchg
mov
imul
mov
ja
ret
stc
mov
push
mov
jb
negb
cwtl
cli
mov
sub
dec
add
std
inc
dec
addr16
adc
jmp
loopne
mov
out
mov
cwtl
test
mov
mov
out
cmp
xor
mov
push
add
mov
and
data16
dec
in
cmp
scas
imul
mov
jp
push
mov
pop
mov
inc
fiaddl
xchg
mov
adc
jo
mov
mov
sub
jae
xchg
mov
mov
cmp
fldcw
xchg
sub
lds
or
imul
inc
cmp
popa
dec
mov
cmpsb
shll
xchg
ljmp
or
int3
stos
dec
idiv
and
sub
fnstcw
add
repz
sub
cmpsb
popf
ficoms
es
sbb
push
fwait
push
popfw
cmp
mov
add
adc
and
ret
ss
out
xchg
pop
addr16
and
xchg
push
adcl
xor
dec
scas
push
cmp
sti
add
cmp
push
ljmp
xor
mov
sahf
inc
xchg
bswap
push
mov
arpl
cmp
mov
jmp
cmp
cmpsl
push
punpckhdq
loopne
mov
stos
or
cmp
push
in
fwait
and
lcall
mov
dec
test
jecxz
test
sub
add
add
dec
rorb
mov
shll
sbb
pop
jae
xchg
adc
push
dec
loop
out
fisubrl
ss
mov
pop
leave
pop
jne
fimull
push
aad
cld
cmp
shll
adc
test
int
repz
adc
pop
sub
out
add
jge
test
movsl
xor
adc
insl
push
imul
jmp
jp
xor
nop
imul
sub
dec
pop
into
dec
addr16
mov
jl
enter
test
imul
subb
shrb
inc
add
mov
lahf
std
lcall
lahf
cmp
fs
mov
pop
mov
jle
cmp
mov
insl
push
dec
das
jne
test
add
xchg
cmp
sub
out
push
mov
push
xorb
je
psrad
mov
test
rcrb
mov
jmp
hlt
jg
push
loop
loope
mov
cmpsl
jp
push
enter
nop
call
or
xchg
push
aaa
js
add
ja
and
mov
leave
mov
fidivrl
inc
es
dec
sbbl
inc
divl
out
lods
popf
dec
mov
roll
sbb
sub
test
jle
sbb
mov
mov
fwait
in
mov
rorl
jbe
jne
inc
lret
pushf
call
rcll
int3
jae
push
out
scas
cmpb
pop
inc
cmpsb
fcoms
ja
and
pop
bound
adc
andl
mov
mov
or
sahf
iret
loop
andl
add
loop
stos
push
pop
dec
and
ffree
fwait
cmp
mov
imul
inc
dec
jle
not
loop
pop
idivb
out
and
mov
push
push
xchg
sub
sub
mov
mov
pop
divl
sub
jmp
add
iret
cmc
shrl
stos
xchg
cwtl
dec
pop
lcall
fwait
inc
aad
mov
pop
dec
sbb
aad
in
ss
popf
cmpsb
pop
in
xchg
fsubrp
pop
xchg
or
rcr
or
cmp
xchg
dec
xchg
subb
loope
aaa
stos
adc
pop
or
leave
cli
div
pop
push
cmp
repnz
notb
cmc
std
push
lds
jp
dec
cmpsb
mov
push
pop
jecxz
mov
fsubs
dec
lods
xchg
mov
movsl
sahf
sub
shlb
mov
and
pushf
push
pop
outsl
mov
jp
fdivrl
data16
roll
mov
jmp
dec
sub
icebp
test
cmp
sbb
lcall
or
pop
stos
mov
imul
sbb
pop
inc
les
out
or
mov
fdiv
aad
stc
sub
pop
jae
mov
out
xor
xor
adc
mov
aam
mov
inc
add
mov
sti
mov
add
fsubl
js
mov
mov
call
mov
leave
fmulp
mov
push
or
enter
popa
test
loopne
dec
pusha
ds
adc
xchg
dec
adc
movups
into
sbb
mov
daa
mov
popf
mov
pusha
xor
mov
cmpsl
test
push
sti
pop
test
and
or
es
push
ljmp
sub
mov
mov
push
ljmp
dec
test
sub
mov
push
mov
mov
lahf
mov
ss
test
jbe
inc
rorl
cld
mov
inc
sbb
cltd
jg
or
mov
or
inc
push
popf
mov
in
and
jne
push
fisubrs
js
mov
add
popa
jae
fnstcw
sub
mov
adc
lods
loop
in
jl
rcll
gs
negb
push
mov
loop
cmpsb
shll
mov
test
and
xor
push
xor
xchg
xor
inc
adc
mov
pushf
mov
addr16
jo
adc
pop
cmp
in
xchg
je
mov
adc
or
xchg
mov
or
pop
pop
jmp
icebp
test
sbb
mov
pushf
jl
jg
cli
and
add
hlt
mov
shll
sbb
loop
lock
mov
es
inc
add
hlt
push
loop
pop
or
xor
call
mov
sub
mov
dec
push
push
mov
pushl
cltd
cmp
mov
rcll
popa
cmpsl
fwait
jmp
loope
sbb
mov
sub
add
ds
sbb
stos
xchg
mov
mov
test
in
and
addr16
std
or
test
pop
mov
fwait
xchg
leave
out
jl
fs
stos
insl
pop
mov
out
push
scas
ss
xchg
or
add
data16
lea
cmp
push
jecxz
mov
sub
and
xorl
leave
adc
popa
ds
or
sti
test
fwait
xchg
fcmovnbe
mov
mov
lret
mov
out
adc
sarb
shll
popf
loop
push
mov
and
ljmp
xchg
mov
xchg
pop
bound
imul
into
mov
push
stos
movb
fidivs
fldenv
sbb
adc
into
mov
mov
test
xchg
push
loope
jb
add
mov
loop
stos
cmp
les
and
imul
fnstsw
mov
jmp
leave
sarb
pusha
and
mov
fisttpl
sbb
xchg
mov
dec
dec
or
push
jmp
xor
mov
jmp
xor
in
rolb
dec
jb
mov
xchg
test
mov
jmp
xor
mov
and
mov
sbb
dec
cmpsl
pop
xchg
pop
sarl
data16
jg
fcomps
or
inc
mov
js
out
mov
xchg
aas
mulb
inc
sbb
jne
ficoml
das
jmp
inc
sbb
sub
push
push
call
pop
fsubrp
fidivl
sti
xor
mov
sub
jp
ss
loop
sub
fimull
jg
fwait
xchg
xchg
test
rorb
lahf
xchg
adc
dec
aaa
adc
cmpsb
dec
and
adc
lret
std
repnz
andb
ret
movsl
xor
filds
clc
cs
ja
icebp
sub
xchg
jae
pushl
inc
icebp
test
aaa
jo
aas
cmp
xchg
mov
push
mov
push
and
add
call
stos
sbb
imul
fcomi
test
jno
jg
push
js
mov
pop
mov
scas
or
insb
repz
dec
push
test
shll
xchg
inc
insl
pushf
and
test
mov
xchg
shl
xchg
or
sarl
cmp
idivl
xchg
xchg
les
in
mov
les
fisttps
xchg
sub
loopne
mov
sbb
cli
insb
cmp
xchg
add
aad
lea
push
cmp
insl
stos
roll
push
outsl
inc
xchg
js
and
fsubrl
pop
sbb
inc
push
iret
xchg
jp
sub
xchg
sbb
jecxz
ds
aad
sahf
pop
imul
jbe
les
push
cld
sti
addl
pushf
dec
test
add
hlt
test
jo
inc
fdivl
ror
xchg
mov
mov
adc
mov
cmp
out
push
je
decl
insl
leave
mov
inc
mov
xchg
icebp
idivb
cmp
xor
mov
jmp
cmp
pop
sub
aad
arpl
repnz
or
sbbl
cli
add
inc
cltd
ljmp
mov
fidivl
xchg
or
fistl
xor
fwait
cwtl
inc
insl
xchg
fcmovnb
fwait
popf
dec
xchg
enter
and
pushl
jne,pt
lret
xchg
push
add
mov
pop
ds
out
xlat
jl
ror
cmc
adc
mov
xor
movb
xchg
stc
idivl
adc
pop
jne
test
add
out
enter
jmp
rorl
mov
xchg
ja
inc
push
jo
pop
andb
jne
sti
add
fmuls
xchg
mov
aaa
push
mov
mov
sub
out
sbb
je
sub
test
mov
daa
or
dec
xchg
repnz
lret
inc
test
lcall
jmp
mov
lods
insb
into
sub
or
mov
in
call
dec
sbb
push
dec
pop
leave
add
sub
jb
jb
xchg
shlb
daa
xchg
rorb
pop
push
orb
sub
lods
dec
scas
or
incb
stos
xlat
decl
and
cltd
leave
arpl
cltd
push
aas
icebp
std
inc
xchg
stc
mov
mov
lods
sarl
inc
xchg
adc
rcrb
mov
add
cmpsb
lcall
cld
pop
out
lcall
cmp
sbb
push
jge
repnz
cld
pop
xchg
xchg
cmp
add
out
ljmp
or
lods
data16
loop
and
loope
add
pusha
pop
movsl
pop
jns
mov
inc
sbb
xchg
adc
stos
out
lea
add
dec
mov
shll
jg
jbe
mull
xor
nop
repnz
repz
leave
ret
sub
and
imul
jmp
or
insb
shll
dec
and
repz
shlb
mov
stos
enter
add
or
arpl
xchg
sti
mov
repz
fwait
xor
in
push
sbb
testb
and
adc
gs
sub
fstpl
push
jmp
sbb
test
and
jbe
insl
jl
cmp
mov
fnstenv
push
push
mov
mov
lods
add
push
mov
mov
xchg
add
jmp
or
sbb
mov
dec
cmp
hlt
xchg
xchg
and
push
sarl
dec
je
jbe
xorl
mov
test
pop
push
mov
lock
ja
pushf
push
das
cltd
xchg
sbb
mov
in
mov
clc
jp
xchg
jmp
fimuls
sbbl
and
or
or
push
push
mov
into
shl
xor
jo
mov
push
cmpsl
cwtl
jp
push
cmpsb
and
mov
jg
push
mov
xor
push
mov
push
arpl
loop
or
dec
mov
js
mov
or
push
add
cmp
leave
pop
and
cmp
test
bound
lock
sub
cmpsl
rcrl
ret
aas
dec
mov
orl
sbb
das
cmp
nop
lea
add
sub
xchg
fwait
popa
movsl
ds
mov
mov
and
push
icebp
int3
mov
movb
das
xchg
int
mulb
cs
cmc
je
popf
arpl
jp
test
mov
popf
cmpsb
sub
xchg
mov
sbb
iret
int3
pop
imul
xchg
loopne
mov
out
sub
xchg
testl
lods
push
jo
bound
push
aaa
sub
mov
data16
mov
adc
sbb
je
je
pop
jne
xor
xchg
stos
xchg
cmp
mov
es
lods
pusha
sbbb
mov
push
inc
and
in
or
mov
fs
cmp
push
push
cmpsl
dec
and
jbe
in
inc
xor
loop
and
jae
adc
imul
pop
adc
inc
jge
xchg
fbld
dec
sub
div
das
std
divb
les
jmp
pop
das
outsl
movsb
popa
dec
cwtl
cmp
aas
roll
jne
aaa
mov
int3
mov
sbb
imul
xchg
popa
mov
inc
sbb
fcompl
pop
inc
jno
js
jb
xorb
aad
mov
ficomps
xchg
sbb
rcll
adcb
adc
or
jb
sub
cltd
adcb
add
stos
rcl
outsb
push
jns
test
mov
mov
mov
mov
arpl
xchg
shll
jmp
repz
push
mov
insb
mov
cltd
ljmp
roll
mov
pop
inc
fcmovnb
fstpl
cmp
andb
sub
nop
fildl
leave
adc
mov
xchg
testb
stos
push
xchg
dec
gs
ret
xchg
or
xchg
mov
add
mov
pusha
add
mov
add
mov
pop
mov
lret
cmp
ficoms
in
inc
ret
cmpl
punpckhwd
pop
push
repnz
xchg
xchg
add
addr16
jg
sub
xor
es
mov
sub
mov
bound
mov
dec
lret
loopne
sbbb
rorb
and
aad
xchg
mov
js
mov
push
into
insb
addr16
jnp
in
push
sbb
cmp
enter
test
mov
addl
adc
mov
aad
pop
push
lds
adc
aas
into
pop
mov
rorb
hlt
jno
shrl
in
or
mov
inc
add
adc
sub
sub
dec
inc
pop
in
shlb
mov
jbe
lock
in
jnp
cmpsl
addr16
or
or
jns
push
pop
testb
fstpl
push
push
jmp
mov
sub
outsb
pop
cmp
stc
lods
sbb
sub
std
and
and
jmp
cli
mov
jmp
jb
mov
mov
inc
sbb
pop
inc
shl
sbb
mul
cmp
add
cmp
add
roll
push
int3
enter
imul
mov
sbb
cwtl
mov
xchg
fcmovnb
mov
mov
inc
adc
inc
xchg
lret
test
lock
inc
cmpsb
xor
jae
sbb
inc
es
test
mov
xor
nop
mov
lret
and
ficoml
sub
les
mov
add
fsubr
out
adc
xchg
sub
loopne
mov
loopne
and
jge
mov
popa
jne
cmp
shrl
push
xor
sahf
dec
sbbb
xor
repz
adc
mov
es
sarl
xor
xor
sti
daa
sbb
xchg
mov
mov
test
ror
xor
sub
jg
sub
ja
mov
sub
mov
int3
mov
inc
pop
push
adc
mov
lcall
mov
mov
fs
addr16
add
xlat
sub
test
cmp
ret
enter
mov
fldt
jg
ret
fs
sbb
push
loop
xchg
fistpl
stos
xchg
fdivl
xor
mov
sahf
push
jg
xor
push
push
cmp
push
add
mov
and
cmpl
xor
adc
sub
bound
mov
lret
dec
inc
mulb
dec
shll
mov
in
mov
and
std
push
lcall
dec
cltd
pop
fwait
clc
jnp
push
ret
cmp
addl
xor
push
sbb
cs
stos
or
leave
dec
insl
mov
shr
js
stos
test
ficoms
popa
mov
jg
icebp
mov
out
pop
lret
mov
cmp
stos
mov
inc
sub
xor
bound
mov
shrl
mov
add
ror
dec
cmp
inc
mov
sub
push
js
fstp
rol
xchg
jp
xchg
adc
aam
dec
jbe
insl
xchg
jmp
mov
jg
inc
leave
fidivl
shrl
test
popf
add
das
mov
adc
stc
mov
daa
aas
xchg
stos
fstps
inc
push
mov
scas
stos
enter
rol
shlb
push
mov
cmp
and
xchg
mov
xor
push
mov
les
lcall
hlt
inc
mov
gs
cmpsb
xlat
loopne
lods
rcl
xchg
in
inc
pop
rcll
outsb
and
mov
mov
insb
aaa
imul
jae
out
int
cmp
cmp
adc
push
imul
cmp
adc
jbe
mov
sub
xchg
dec
pop
push
push
xor
xchg
mov
mov
stc
mov
rorl
jmp
and
test
dec
mov
and
cld
fdivrs
mov
fyl2xp1
xor
dec
sahf
pop
clc
jae
fisttpll
loop
int
mov
pushf
fsubl
xchg
lods
jg
ss
mov
cli
dec
lock
sub
lds
jnp
add
jecxz
xor
mov
ja
addl
sub
xor
sbb
fmuls
cs
or
pop
lahf
dec
ljmp
mov
mov
push
test
es
ss
jbe
mov
sub
adc
mov
sub
iret
pop
repz
jns
cmp
sub
fcoml
push
mov
aaa
pop
test
test
jbe
in
sbb
and
fsubs
mov
leave
outsl
xchg
mov
push
fmuls
in
push
call
imul
cmpsb
int3
gs
dec
ss
arpl
xor
cmpsl
sti
xchg
mov
add
jo
repnz
mov
out
mov
lahf
cli
dec
jg
jmp
inc
push
icebp
push
mov
add
pop
lock
jae
outsl
cli
sub
push
jae
in
xchg
movsb
stc
mov
inc
jo
inc
mov
mov
loopne
out
cwtl
mov
mov
push
add
fwait
cmp
lret
mov
bound
loopne
fiaddl
aas
mov
dec
in
dec
push
inc
dec
notl
pop
leave
fiaddl
jmp
es
jmp
stos
sti
or
rcll
xor
mov
mov
and
push
xchg
and
gs
add
testb
out
ret
insb
or
jecxz
cmpb
cwtl
and
out
jg
aad
push
mov
mov
cmp
ss
popf
sub
int3
jp
cmp
fmull
push
inc
fimuls
int
mov
push
scas
mov
cmp
mov
xchg
int
out
cmpsl
not
xor
cmp
jno
xchg
incb
daa
fisttpll
arpl
test
or
cmp
loop,pt
mov
push
les
gs
mov
lock
mov
adc
repz
mov
sub
mov
shll
adcb
xor
dec
xchg
xor
ljmp
in
dec
mov
sbb
mov
in
es
pushf
jmp
mov
push
lods
or
rcl
xchg
adc
cmp
sti
fcompl
jg
mov
xor
mov
dec
icebp
xchg
push
pop
loopne
shlb
cltd
repz
dec
ret
aam
dec
sbb
sbb
mov
mov
rorl
xchg
sbb
inc
dec
cmp
ret
xchg
cld
mov
mov
push
add
xor
insb
add
xchg
fisubl
xchg
out
and
adc
jg
xchg
and
xchg
jmp
xor
and
lods
xlat
fwait
sub
sub
pop
cs
je
inc
push
mov
loop
mov
and
jmp
es
pop
loop
mov
cmp
mov
jg
fmuls
je
shr
loope
mov
push
je
loop
pop
xchg
cmp
aaa
adc
cmpsl
mov
xlat
mov
fsubrl
xor
arpl
mov
iret
call
inc
pop
push
jmp
dec
imul
adcb
mov
xchg
addr16
fwait
mov
jnp
xchg
push
mov
sbb
jnp
dec
popf
or
sub
dec
xchg
jge
fildl
mov
push
xchg
test
lcall
sub
adc
mov
mov
push
addr16
stos
cmp
icebp
xor
ffreep
mov
cmpsb
mov
stos
sub
scas
xchg
sbb
sub
adc
mov
jl
mov
cmp
jae
jge
push
imul
jmp
divl
sub
rorl
mov
sbb
clc
dec
mov
and
jb
aad
inc
push
push
and
mov
inc
sub
and
jae
outsl
psrad
leave
push
fcomps
or
pop
test
inc
push
int
test
jae
sub
div
into
mov
leave
test
insb
lods
stos
popf
mov
pop
xchg
scas
in
daa
pop
dec
pushf
data16
ja
into
int
lret
lcall
pop
cmpb
adc
rcrb
pushf
add
enter
xchg
pop
mov
aad
ret
mov
mov
test
jmp
enter
jge
mov
sbb
cmpsl
dec
sub
sbb
and
pusha
popa
mov
dec
xor
fistl
sbb
loopne
lock
pop
rclb
xor
fdivp
xchg
incl
adc
push
mov
dec
rcl
pop
mov
jecxz
sub
xor
cmp
ret
adc
pop
xor
fisubl
jno
sbb
shlb
or
mov
sub
dec
enter
or
mov
or
cmp
popf
sub
xor
fimull
iret
ffree
push
ret
cmpsb
int
mov
mov
jbe
sbb
cmpsl
imul
addr16
rcrb
cs
rcr
adc
movsl
sbb
loopne
mov
popa
xor
xchg
push
xchg
loop
int
and
hlt
push
jg
scas
cmp
or
loop
jl
jo
push
enter
ja
xchg
mov
ljmp
inc
mov
bound
push
dec
sub
pop
arpl
or
cmp
fimuls
es
mov
jmp
out
cmp
lods
or
cli
in
lds
sub
fs
arpl
adc
sbb
sbb
sbb
mov
mov
repz
sub
inc
mov
mul
hlt
jge
loopne
loope
enter
out
repnz
or
add
xor
mov
lods
popf
repnz
test
push
mov
jl
xchg
jmp
call
xor
je
mov
cmp
mov
notb
add
add
lea
jae
mov
inc
cmp
data16
gs
cli
fcoml
jb
sub
cld
mul
or
shll
and
lods
sub
pop
cmp
or
pop
push
add
mul
cmp
push
or
mov
js
xor
sub
popa
mov
dec
push
push
or
mov
or
fnstsw
jmp
push
repnz
inc
fldt
push
outsb
or
je
scas
jmp
sub
jbe
cmpsb
xor
xchg
mov
and
hlt
enter
lret
leave
lahf
outsl
fidivs
sbb
mov
mov
push
mov
mov
inc
push
push
test
icebp
leave
mov
into
mov
shll
cmp
pop
mov
cltd
jp
pop
mov
dec
mov
cmp
pop
loop
add
mov
cltd
sahf
or
mov
push
dec
leave
push
lods
push
mov
mov
dec
popa
push
cmpsb
push
mulb
sub
add
push
xor
mov
enter
ljmp
into
or
divl
pmullw
fsubrl
jp
sti
lcall
pushf
ja
mov
adc
xchg
xchg
popa
sahf
shlb
xor
mov
imul
fnstenv
or
mov
mov
add
push
mov
mov
es
aas
pop
popa
cmpsb
ja
dec
dec
xor
popf
test
in
int
sbb
les
addr16
in
pop
test
cmp
fucomi
adc
sbb
in
sbb
xor
lock
lods
push
or
mov
pop
xchg
loope
ss
ljmp
jne
cli
mov
adc
jmp
mov
sarl
cld
andb
add
mov
pop
aas
jo
jp
cltd
mov
dec
mov
and
aaa
lcall
in
out
int
in
ja
push
xchg
adc
mov
lret
inc
inc
mov
les
arpl
pushf
cmp
push
pop
cmp
ret
jmp
jmp
cmp
xchg
push
pop
mov
rorb
pushf
jbe
adcb
push
scas
mov
daa
mov
add
mov
inc
adc
js
sbb
pushf
movb
xlat
sub
sbb
jb
hlt
cmp
or
mov
pusha
cmp
divl
lcall
out
sbb
pop
test
mov
lret
and
into
inc
test
cmp
cmp
outsl
les
lds
stos
es
xor
cmpsl
pop
mov
mov
js
movsl
push
in
push
sub
cmp
cmp
inc
test
addr16
inc
mov
out
pusha
cmpsl
out
jbe
dec
rcll
in
roll
cli
hlt
test
mov
ror
sbb
dec
popa
lcall
stos
cs
mov
inc
sub
cmp
adc
inc
xor
sub
pop
loop
sub
js
into
cmp
inc
sub
fwait
dec
sub
cmc
cs
arpl
mov
lret
fildll
xlat
xchg
into
outsl
sub
fistpll
sbb
dec
sub
cmpsb
pop
cltd
dec
enter
add
shlb
nop
mov
loop
loopne
mov
push
orl
sub
fdivrl
shll
adc
or
pop
and
nop
and
cwtl
ljmp
mov
mov
push
pop
jno
scas
scas
xor
pushf
sub
or
loopne
or
xchg
adc
test
jge
mov
fcoml
inc
stos
scas
xchg
ljmp
xlat
push
pop
lahf
and
add
sbb
ljmp
pop
xchg
cltd
cltd
mov
js
jmp
mov
xor
mov
mov
dec
into
fistl
enter
jg
loope
andl
mov
xchg
stos
mov
sbb
xchg
negb
jmp
lret
aad
mov
xor
dec
inc
rorb
fisubs
insl
jmp
mov
sbb
xor
fldenv
cmc
mov
inc
add
movsb
xchg
fldcw
push
mov
stos
shll
test
mov
mov
jl
dec
mov
pop
inc
repz
je
jbe
adc
or
in
mov
sub
ffreep
mov
cwtl
push
es
mov
xor
je
push
cmp
pop
in
jg
xchg
sub
fildl
mov
dec
sbb
inc
jl
out
test
pushf
cmp
insb
movsb
mov
and
stos
mov
shll
adc
dec
fsubrp
test
in
add
dec
jne
into
test
aaa
mov
xor
lahf
mov
mov
cs
or
lahf
xchg
pop
pop
xor
aad
es
mov
cmp
add
dec
mov
push
xor
imul
les
mov
jmp
mov
jg
pop
leave
sub
sbb
insl
stos
xor
js
lret
cli
inc
and
push
je
cltd
jo
cmpsl
push
mov
sub
in
rcll
pop
adc
mov
shlb
pushf
mov
test
enter
xchg
outsl
enter
mov
mov
mov
clc
xorl
icebp
mov
push
sub
cmp
sbb
icebp
mov
adc
roll
insl
sbb
mov
sar
push
inc
pop
sbb
push
arpl
push
cli
ljmp
lea
dec
mov
xor
sti
or
xor
push
lods
push
test
mov
add
fs
and
dec
movsb
fmull
daa
mov
xchg
add
fsub
xchg
cmc
or
stc
inc
mov
dec
sbb
aaa
lods
orl
cmpsb
shrl
cltd
push
mov
or
jl
xor
cmp
mov
pop
lret
mov
mov
dec
inc
test
jnp
inc
push
shrl
adc
add
xchg
adcl
jns
and
aas
mov
push
cmp
sarl
movsl
mov
loopne
clc
les
fwait
sub
add
mov
call
mov
gs
mov
scas
mov
mov
add
in
xchg
stos
and
push
fdiv
cmp
out
and
das
jg
cltd
fwait
cmp
shll
jmp
pop
iret
push
jg
dec
cmp
push
or
mov
das
adc
add
dec
test
fwait
je
lahf
cmpsb
mov
cwtl
mov
rcrl
loopne
pop
idivb
imul
mov
addr16
inc
fmuls
xor
add
or
cld
or
mov
decl
mov
pop
push
js
xchg
or
sbb
jne
leave
in
mov
aad
inc
fs
sbb
ljmp
sub
and
mov
ja
mov
push
sbb
leave
icebp
out
jnp
jnp
test
mov
stos
mov
rcl
jne
mov
inc
test
sub
movsb
addr16
lcall
enter
in
arpl
push
add
mov
sbb
dec
jbe
arpl
dec
shll
push
push
cmpb
dec
sub
inc
in
sbb
lds
pop
mov
xchg
add
mov
jno
dec
xor
dec
pop
adc
mov
adc
mov
or
jmp
or
jno
jmp
fucomip
hlt
cs
loop
add
enter
leave
dec
dec
fbld
test
mov
inc
sbb
mov
add
pop
add
loopne
lods
mov
subb
sbb
and
xor
cmpsb
cmp
adc
and
ret
xlat
xchg
jno
jl
and
call
dec
enter
mov
push
addr16
es
into
adc
fwait
in
adc
dec
fwait
mov
inc
mov
adc
sti
shll
pcmpeqd
movsl
hlt
mov
mov
xor
jl
cwtl
adc
aaa
inc
pop
adc
les
mov
into
shll
mov
pop
sub
sbb
mov
js
add
stos
mov
and
cmp
aas
mov
cli
test
rcr
cmpsl
mov
insb
cltd
push
stos
movsb
sub
dec
cmp
xchg
and
or
cli
mov
stos
mov
insb
sarb
leave
pop
mov
xchg
xchg
stos
sbb
mov
jl
push
mov
adc
dec
xorl
enter
movsl
addr16
scas
ror
test
test
std
cmc
cmp
pop
outsb
shl
or
mov
xchg
das
ja
data16
add
mov
mov
fisubrs
cwtl
dec
in
pop
jb
mov
movsb
ficoms
outsl
sub
sbb
pop
lret
jg
aam
movsb
dec
movsb
fstl
stos
enter
add
loop
push
test
inc
lods
fwait
inc
sub
dec
stc
cmpb
sahf
pop
push
xor
xor
pop
xchg
ljmp
or
test
int
cs
lea
pop
mov
sbb
subb
sbb
pop
popa
xor
mov
push
mov
and
xchg
es
push
sbb
test
es
push
xchg
or
jge
adcb
sbb
mov
inc
sub
push
cwtl
fadd
mov
addr16
test
fnstenv
sub
testb
xchg
jnp
popa
fwait
rcrl
stos
sbb
popf
jns
xor
ljmp
sbb
mov
adc
bound
ffree
fsts
jg
jo
cs
and
jge
xchg
std
xchg
cmpb
leave
sbb
inc
xor
loop
or
sub
lahf
inc
rorb
insb
cld
cmp
adc
mov
les
mov
shll
pop
push
clc
xchg
add
adc
xor
div
insl
stc
jg
pop
loop
xchg
mov
insb
jmp
dec
icebp
cmp
test
xor
aam
or
fwait
mov
ror
cld
sub
scas
aaa
xlat
mov
jmp
ficompl
or
insl
sbb
int3
mov
inc
xor
mov
sbb
push
mov
fnstcw
dec
sbb
cmp
dec
mov
loopne
ss
xchg
mov
sub
push
xchg
sbb
rcl
xor
push
add
test
les
movsb
add
mov
les
cmp
mov
aad
lret
orb
jae
dec
mov
push
adc
andb
insl
or
out
sbb
leave
mov
arpl
cmc
loop
iret
call
insl
aaa
push
aam
jo
test
jmp
adc
or
xor
not
pop
lret
mov
cs
insb
xchg
rcl
xor
adc
insl
mov
sti
pushf
loop
sti
roll
into
mov
xchg
cmpsl
dec
lret
fyl2xp1
ss
frstor
mov
sbb
pop
sub
adc
sub
adc
xor
jo
arpl
xchg
push
cmp
cs
adc
roll
in
testl
xor
ret
or
pop
leave
inc
lret
not
stc
fisubs
jg
in
mov
add
lea
pushf
mov
push
loopne
mov
pop
cmp
push
lock
and
orl
xchg
mov
xor
stos
adc
lahf
popf
filds
aam
lret
popf
cltd
push
shlb
add
and
jle
addr16
ficomps
stos
or
frstor
inc
test
push
mov
mov
xchg
loop
cmp
ret
mov
pop
add
scas
mov
bound
jge
mov
xlat
pop
xor
subl
and
push
push
ljmp
stos
imul
xor
sbb
pop
mov
adc
inc
and
cld
adc
loopne
leave
mov
xor
add
add
data16
and
pop
cs
mov
xchg
xor
mov
mov
mov
int
mov
shll
xor
stc
int3
out
sub
jne
mov
insb
mov
repz
in
dec
mov
or
cwtl
mov
outsb
lcall
xor
repnz
mov
or
push
iret
popa
mov
test
pop
mov
mov
mov
lret
imul
xchg
and
xchg
mov
add
inc
cmp
and
js
sbb
push
test
or
and
inc
cmpsb
jg
add
jp
loop
sub
push
xor
or
imull
mov
dec
lcall
inc
out
testl
cmp
out
test
mov
imul
pusha
ret
dec
add
mov
nop
inc
push
adc
push
inc
cmpsb
cltd
inc
test
dec
subl
std
movsl
sbb
mov
adc
push
sbb
movl
and
jbe
add
sub
xchg
jae
retw
xchg
xchg
mov
sub
jmp
pushl
jg
jle
aad
push
roll
lret
arpl
sub
icebp
jge
lds
jns
add
jl
pop
mov
imul
leave
hlt
cmp
pop
sub
jmp
sub
leave
push
jp
cmc
adc
pop
sbb
mov
push
jg
mov
icebp
xor
enter
aad
adc
add
ja
insb
sti
dec
xchg
sbb
aas
and
sub
sub
fbld
scas
sbb
popa
add
adc
inc
xor
mov
cmpsl
inc
dec
add
fwait
test
out
shl
xorl
jne
dec
loop
in
adc
or
lods
mov
insb
adc
cld
xchg
sub
scas
sarl
out
das
adc
inc
aas
mov
jae
mov
insb
mov
mov
in
jnp
movb
jmp
mov
sbb
pop
cmp
sbb
jae
and
popa
mov
sbb
and
push
arpl
or
cmp
dec
int
jmp
out
lcall
add
lea
test
psllq
popf
adc
and
mov
js
push
jge
xorb
test
imul
stc
jne
seto
lcall
or
mov
test
mov
mov
pop
push
cmc
insl
jg
or
out
or
dec
cmpsl
cmp
movsl
ljmp
insl
xor
mov
dec
nop
jmp
mov
aam
stc
pop
fsts
in
and
sarl
fisttpl
push
dec
lock
pusha
dec
fstpt
xor
cmp
out
or
sbb
das
xorb
lods
mov
rcrl
jmp
xchg
les
cmp
outsl
bound
addr16
jg
int3
pop
popa
cmp
dec
adcl
cmpsb
not
shl
mov
cmp
dec
push
pop
add
and
mov
jo
aad
inc
sahf
mov
xchg
push
jns
ljmp
mov
or
push
xchg
sub
in
sbb
dec
mov
mov
inc
push
adcb
jmp
mov
sbb
movsl
leave
out
sbb
cmp
cmp
in
xchg
aas
std
ss
les
cld
add
mov
loop
imul
mov
dec
hlt
popf
and
cmc
dec
ret
or
xchg
pop
lahf
xchg
call
or
in
xchg
or
repz
pop
roll
in
fwait
aas
mov
gs
scas
mov
push
pusha
sbbl
loop
dec
repnz
test
scas
test
inc
adc
inc
sbb
jmp
xchg
push
xchg
push
xor
popfw
cmp
add
clc
dec
push
loop
int3
adc
xor
dec
xor
xor
sub
push
es
jmp
sub
xchg
dec
dec
cwtl
cld
sub
mov
dec
sbb
data16
gs
es
loopne
or
popa
sar
push
and
jecxz
ret
clc
shll
jle
mov
adc
mov
mov
daa
mov
push
neg
leave
or
in
rorl
jle
lahf
jg
sbb
inc
mov
lcall
jl
roll
mov
and
imul
xchg
mov
addr16
mov
cwtl
sbb
pop
jnp
fwait
inc
in
leave
add
and
fxch
testb
in
stc
push
xchg
icebp
mov
shl
mov
mov
dec
push
mov
les
rcr
mov
stc
adc
es
or
daa
push
mov
cmp
sti
cmp
pop
xor
in
mov
ss
stc
pop
aaa
jns
xchg
out
popf
cwtl
fwait
mov
fidivs
mov
sbb
jle
mov
loopne
jl
aaa
and
dec
jp
xchg
xchg
popa
test
cmc
negl
ds
inc
mov
adc
leave
jg
pop
jmp
add
cmp
xchg
jg
imul
sarw
std
fucom
lahf
or
jae
dec
mov
mov
mov
divl
stos
xchg
and
or
test
pop
pop
aam
dec
add
in
add
mov
mov
mov
les
ds
ss
fsubs
or
mov
jo
mov
shlb
push
sti
xchg
loopne
mov
insl
dec
lds
adc
jl
jns
sbb
lahf
pushf
mov
or
ljmp
lods
les
jne
mov
or
mov
pop
pop
faddl
mov
es
mov
jmp
call
mov
dec
pop
shl
fwait
mov
leave
into
std
mov
cmp
test
mov
popa
mov
fdivrl
and
mov
add
jmp
push
stos
push
cs
mov
sub
ljmp
mov
and
lret
cli
mov
xor
loop
pop
dec
ret
fcom
push
jecxz
mov
and
std
je
mov
into
jge
mov
sbb
js
cmp
sbb
hlt
mov
mov
or
addr16
jmp
push
fwait
cmp
sub
xor
test
mov
enter
dec
daa
sbb
push
xchg
addr16
mov
ret
cmp
sbb
mov
mov
std
sbb
mov
pop
jmp
mov
cmpsb
inc
xchg
stos
divb
imull
ds
mulb
ljmp
jb
mov
iret
jle
sbbl
xor
insl
xchg
std
stos
cmp
rcr
adcl
xor
jg
in
xor
aad
loope,pn
lret
nop
nop
test
ds
pop
hlt
adc
dec
testl
and
dec
stos
popa
pop
sbbl
es
imul
jecxz
pusha
repnz
pop
or
aam
push
incb
es
cwtl
das
push
add
dec
shrl
lahf
xchg
xchg
aaa
and
nop
test
cmp
nop
add
lret
sbb
fdivs
mov
ds
out
ret
lret
rcr
lds
mov
cmpsb
clc
mov
or
sbb
adc
xor
cltd
outsw
inc
stos
lret
dec
repnz
mov
mov
mov
fsubl
js
in
add
push
ja
lods
cmp
jnp
mov
jg
jmp
clc
inc
hlt
cmp
sub
sbb
pop
mov
pop
mov
in
cmpsb
xchg
sub
shr
mov
add
sar
loopne
mov
pop
popf
jge
jae
leave
addr16
inc
jp
mov
fldcw
push
cmpsb
mov
cwtl
pop
cmp
dec
pop
repz
and
or
mov
cmp
enter
lods
adc
mov
mov
push
lock
lods
add
cmp
pop
or
test
addr16
jl
movsl
cmp
xchg
ss
cmp
jp
lock
dec
sub
sub
testb
jp
mov
add
jae
sub
jno
jo
mov
pop
mov
imul
test
xor
adc
sub
and
lret
push
pusha
mov
sub
sub
xchg
mov
repnz
popf
into
fisttpl
imul
fiaddl
aaa
dec
stos
push
sub
jbe
aaa
movsb
fucomp
cmp
inc
loopne
lods
addr16
fisubs
sub
fnstenv
or
push
je
ret
lods
and
enter
and
mov
lea
mov
sub
jp
sti
in
jne
shrl
test
adc
xchg
cmpsl
xchg
mov
mov
mov
leave
mov
mov
fimull
push
sbb
push
xchg
dec
jne
test
xchg
lret
movsb
shl
adc
mov
pop
andl
jnp
popa
popf
imul
icebp
nop
jne
negb
mov
out
cmpsb
xchg
xchg
cmc
je
addl
and
ljmp
mov
push
cs
rorl
je
adcb
cmovg
inc
lods
mov
push
js
add
fldcw
jo
sub
mov
lret
neg
mov
xchg
imul
ljmp
mull
enter
and
xchg
mov
mov
lds
cmp
push
iret
mov
mov
mov
mov
test
xchg
jae
sub
xchg
fdivs
ss
inc
clc
shrb
mov
dec
dec
shrl
xchg
cmc
fwait
xor
jle
fldenv
inc
push
inc
and
mov
mov
push
mov
cmpb
mov
imul
icebp
testb
add
dec
dec
bound
or
push
inc
push
mov
inc
incl
lret
call
dec
in
mov
js
js
push
cltd
cli
int3
push
pusha
ja
pop
repz
jne
dec
out
daa
es
scas
hlt
insb
es
push
psubusb
or
jle
sbb
mov
dec
xor
adc
int
je
adc
sahf
lret
inc
mov
add
popf
adc
dec
xor
stos
mov
mov
or
repz
sbb
fbld
loope
outsb
lcall
aam
jae
jne
sbb
adc
jo
fsubrl
xchg
mov
jle
dec
jp
sbb
inc
mov
jecxz
insl
lods
jmp
jne
cwtl
and
pop
pop
leave
pop
jecxz
mov
daa
test
out
sbb
sub
sub
pop
test
add
cmp
dec
lods
sub
push
pop
and
dec
aas
push
out
test
jnp
les
and
mov
ror
test
das
xchg
add
jmp
mov
jg
adc
lods
dec
leave
dec
insl
lcall
push
out
pop
pop
push
mov
outsl
mov
cmp
int3
push
daa
xchg
xchg
dec
mov
jne
cmpsl
sub
addl
int
popw
jmp
js
icebp
mov
int3
fwait
sub
or
jle
sub
push
cwtl
mov
xorb
mov
fisttpl
add
dec
push
push
xchg
fcomp
cmp
xor
mov
es
push
pop
mov
sahf
test
out
dec
adcb
xor
mov
sub
mov
test
and
cmp
or
hlt
dec
fsubl
or
scas
ret
repz
sub
adc
mov
divb
push
aaa
mov
mov
push
outsb
data16
sub
pop
sub
or
sarl
sti
and
mov
pop
mov
cmp
jge
rcrb
jmp
xor
jmp
bound
cmp
cli
and
sahf
leave
out
ret
nop
jo
mov
hlt
ror
cmp
pop
sub
mov
sbb
pop
sbb
mov
push
imul
leave
fidivrl
das
xrelease
in
push
rorl
xor
arpl
loop
sub
andb
pop
jne
cltd
stos
cltd
pop
xor
pop
outsb
out
mov
dec
inc
push
jmp
out
scas
add
push
xchg
dec
sbb
mov
mov
fimull
int
or
sahf
dec
and
jbe
jg
and
shll
mov
pop
mov
hlt
das
imul
cmpb
xor
sbb
push
mov
roll
or
push
in
cmp
push
mov
in
jae
mov
ficomps
rcr
mov
ret
mov
imul
icebp
cwtl
mov
mov
jecxz
divl
mov
loop
mov
arpl
dec
sub
mov
test
xor
jne
push
sbb
adc
sbb
aaa
jecxz
clc
mov
cmpsb
loope
fistpll
mov
mov
out
stos
into
fwait
push
pop
mov
stos
add
pop
dec
repz
hlt
sbb
stos
inc
sbbb
xchg
fildll
pop
ds
xchg
inc
shlb
push
pop
jb
in
fidivrs
pop
incl
dec
int3
push
ljmp
mov
push
aaa
lret
jbe
adc
cs
test
cli
push
fldcw
mov
mov
pop
inc
push
and
or
mov
xchg
loop
fistpl
pop
mov
movsl
cli
leave
mov
into
jb
sub
ljmp
push
test
imul
inc
sbb
insl
aas
or
push
bnd
dec
aam
or
movsb
div
loope
sbb
sbb
mov
iret
out
in
inc
jb
mov
orb
cmp
add
mov
xchg
and
and
cmc
fdivs
jmp
cmpl
or
adc
or
xor
fcomip
loopne
out
stos
xor
push
mov
lods
insb
mov
dec
enter
lods
int3
es
jnp
std
shll
jmp
lret
pop
fsts
xor
mov
cmpsl
mov
test
movsl
push
mov
cmpsl
fidivs
test
lahf
pop
popf
cmpsl
pop
insl
push
enter
rorl
mov
mov
js
imul
sub
or
add
sbb
imul
xchg
and
jle
repz
pushf
cmc
lcall
sbb
cltd
inc
sbb
xlat
sub
xchg
dec
push
insl
dec
in
xchg
lods
loopne
mov
mov
push
leave
lret
xlat
sbb
pop
stc
mov
push
test
mov
ljmp
push
sub
pop
dec
clc
arpl
dec
jno
mov
xor
mov
aam
data16
punpckhdq
rclw
cmc
xchg
popa
insl
cmp
xor
js
lret
orl
call
je
rol
add
dec
orl
xchg
pop
cmp
out
xchg
fcmovnb
jecxz
and
stos
in
enter
jg
sbb
out
xor
xchg
jg
addr16
xchg
sub
adcl
ret
stos
xchg
lret
lock
xchg
cmp
jne
repz
popf
in
jae
and
dec
push
fimuls
and
sti
push
cmp
in
sub
mov
jl
and
in
xor
mov
nop
mov
mov
int
or
outsl
or
sti
pop
jae
pushf
mov
inc
xlat
mov
sub
jp
adc
push
cmp
mov
adc
cmc
movsl
adc
mov
dec
mov
aam
fsubrl
test
mov
and
sub
das
sahf
stos
aaa
int
sti
add
in
dec
fstp
in
push
out
stos
and
mov
jo
int
scas
insb
dec
xchg
inc
xchg
mov
mov
mov
ficomps
pop
movsl
sub
dec
and
loope
cmpsl
mov
enter
outsb
orl
dec
bound
or
test
mov
test
test
xlat
rcrb
hlt
and
inc
test
dec
xchg
add
test
sub
xor
test
aas
xchg
aaa
mov
mov
test
cmpsb
jae
jmp
cmpsb
dec
pop
jmp
stos
mov
outsb
dec
hlt
leave
test
inc
cld
mov
adcl
in
inc
add
stc
repz
and
pop
movsl
push
mov
xrelease
jp
mov
stc
sub
mov
cmp
in
mov
stos
and
sub
movsb
mov
in
ret
test
sbb
ja
pop
lret
test
jo
insb
sar
pop
mov
sub
mov
ljmp
mov
test
dec
clc
or
lea
and
stos
sbb
jmp
mov
mov
popa
jae
cmp
jo
addl
mov
pop
bound
in
adc
push
fwait
out
mov
sbb
daa
push
test
mov
mov
in
in
xor
mov
push
and
ret
mov
and
movsl
lods
in
and
inc
mov
dec
mov
inc
into
loope
pop
push
mov
lret
adc
xchg
scas
call
cmp
xor
mov
mul
pop
mov
in
dec
inc
ret
scas
test
repz
mov
push
add
repz
or
repz
scas
inc
or
ljmp
mov
scas
and
mov
aad
ss
xchg
test
loope
inc
movsl
test
dec
adc
push
dec
and
inc
movsl
mov
xor
mov
mov
mov
or
orb
insl
int
mov
outsl
into
leave
dec
jmp
jne
test
roll
mov
xlat
movsl
cmp
push
stc
mov
mov
mov
frstpm(287
test
call
test
fwait
or
xchg
das
and
sti
test
cmp
mov
mov
jp
or
pop
sub
mov
movsl
aaa
repnz
inc
jns
sti
sarl
fisubrs
sbb
mov
iret
js
add
mov
mov
in
imull
sub
and
shll
loop
lods
mov
sbb
movsl
mov
add
or
je
ljmp
fwait
adc
leave
lahf
push
mov
xchg
shl
movsl
idiv
dec
movsl
jp
hlt
lea
mov
in
jnp
mov
jbe
jg
mov
inc
xor
cmc
test
or
scas
mov
cmpsl
mov
ds
xchg
or
dec
in
out
pop
call
repz
add
xor
mov
add
mov
sub
jg
fstpt
cmpsl
shrb
mov
add
or
add
movsb
sbb
mov
mov
push
cmpsl
test
stc
test
mov
stc
std
movsl
in
sub
pushf
sub
mov
push
mov
inc
stos
ret
lret
int3
sti
pop
loopne
das
out
lcall
mov
test
and
dec
test
mov
mov
jmp
mov
mov
cmpsl
mov
jecxz
leave
xor
sub
test
xor
mov
lret
popf
cld
adc
mov
or
mov
lret
xlat
jmp
mov
leave
test
mov
xor
les
cmpsb
jae
stos
icebp
into
jmp
push
or
stos
lret
bound
subl
push
add
mov
movsl
push
and
pop
test
lds
aad
clc
popa
inc
aam
mov
or
jmp
icebp
das
sbb
in
inc
insl
jg
sbbl
mov
test
arpl
movsb
pop
stos
adc
or
sbb
or
jmp
inc
push
dec
in
mov
cmp
xchg
dec
and
fwait
mov
xchg
aad
loop
lea
mov
xor
cmpsb
pusha
cmp
sub
mov
insb
test
push
xchg
mov
jne
adc
jge
xor
cmpsl
or
stos
jecxz
test
sti
out
andl
arpl
dec
lahf
movsl
adc
std
movsl
xlat
mov
mov
imul
jle
add
push
xor
fcomip
ja
mov
adc
test
test
dec
xor
fnstcw
or
add
mov
dec
in
push
cmp
iret
fs
btr
add
dec
call
mov
test
or
scas
je
xorl
scas
test
std
ret
or
mov
out
jmp
lret
dec
pop
adc
and
mov
std
sub
or
jmp
xchg
test
stos
popf
cmp
ja
imull
adc
dec
push
test
mov
jo
xchg
fwait
les
cmpsl
mov
mov
dec
mov
mov
popa
jne
xor
lea
mov
dec
movsl
out
inc
xchg
mov
mov
or
lods
loop
in
mov
sahf
stos
add
lds
in
movsl
insl
clc
and
loope
lds
out
or
and
jno
test
pushf
test
movsl
movsl
sbb
add
and
dec
mov
cmc
cmpsb
mov
jno
push
lods
movsl
out
repnz
sub
xor
out
lea
stc
dec
test
out
fdivp
xchg
mov
in
jbe
movsl
shll
mov
das
mov
out
test
dec
jp
sub
cwtl
mul
add
int
jmp
dec
xchg
mov
mov
insl
repz
mov
sub
push
pop
sub
test
dec
loop
addr16
xchg
orl
movsl
cmpsl
mov
lea
adcl
aam
push
mov
add
aad
sub
jbe
cmpb
test
jle
test
dec
push
loopne
pop
sub
jb
leave
test
sbb
dec
in
cmpsl
push
iret
bound
and
mov
adc
mov
jp
xchg
mov
mov
test
sbb
repz
sti
sahf
cmp
push
mov
xchg
inc
xchg
fisttps
aaa
mov
mov
mov
mov
gs
mov
fidivrl
push
test
mov
js
jo
in
mov
dec
loope
mov
add
jno
movsl
idivb
mov
fisubrs
movsl
je
fcmovnu
ljmp
sub
xchg
mov
or
scas
mov
mov
sarl
les
pop
in
pushf
popf
test
dec
jns
pop
jle
mov
test
mov
jo
mov
cmpsb
mov
fldenv
ja
mov
popa
inc
push
mov
pop
movsb
sahf
cmpsb
int
sub
out
repz
ret
mov
enter
mov
jmp
mov
dec
test
cmc
mov
sbb
cmp
dec
mov
inc
dec
xor
out
add
push
in
dec
pushf
fwait
xbegin
xchg
dec
inc
adc
mov
int
xchg
mov
mov
lds
and
or
sbb
mov
sub
push
inc
xchg
mov
in
stos
add
decl
push
xchg
inc
push
jmp
out
add
mov
lret
popf
cmp
ds
xchg
cltd
in
out
leave
mov
dec
mov
mov
mov
mov
mov
sbb
xchg
xchg
jp
cmc
repnz
dec
jle
sahf
test
mov
cmp
lea
mov
push
adc
pop
push
add
inc
add
andl
jp
mov
lret
lret
dec
aam
sbb
cmp
loop
cmp
movsl
leave
mov
sub
mov
dec
clc
mov
ds
cltd
cmp
and
mov
fldt
pusha
test
addl
dec
movsl
and
ja
mov
stc
and
mov
mov
addps
cmp
lret
or
cmp
cmp
cmp
mov
leave
mov
inc
add
dec
push
pusha
je
es
enter
add
dec
movsb
pop
mov
mov
jb
mov
test
ds
fwait
dec
add
dec
xchg
mov
add
sbb
fistl
inc
mov
jbe
cmpsb
fwait
stos
jecxz
mov
jmp
and
dec
and
imul
inc
les
adc
aas
and
cli
xchg
orb
pop
repz
xor
dec
aaa
cmpsl
sarl
push
loopne
or
push
push
sahf
adc
jp
mov
fildll
pushf
mov
sti
not
test
sbb
cmp
mov
cwtl
mov
push
or
popa
pop
repz
mov
mov
mov
jo
mov
outsl
push
xchg
testl
inc
add
and
movsl
jp
xor
sub
in
sub
xchg
test
int
repnz
movsl
jae
mov
mov
mov
test
jno
in
inc
iret
insb
mov
sub
jnp
test
push
mov
and
jne
enter
xchg
dec
mov
xchg
push
mov
sub
xor
loop
xchg
and
dec
movsl
inc
outsl
fbld
push
cmpsl
mov
dec
inc
sbb
adc
faddl
cltd
lods
sbb
lea
inc
pop
test
int3
xlat
aaa
xorl
stos
and
stos
jecxz
mov
sub
enter
in
in
fbstp
jno
mov
hlt
ss
testb
rol
mov
test
mov
movsl
lds
in
rcll
mov
mov
sahf
sbb
and
repz
cmc
and
stos
cmp
cld
xchg
cmp
scas
sbb
add
test
mov
and
stc
cmp
mov
hlt
mov
and
jb
dec
adc
scas
xchg
pop
dec
in
lret
arpl
mov
int
or
mov
inc
lret
mov
stos
stos
lret
scas
ljmp
or
jp
push
pop
mov
cmp
mov
mov
sbb
adcb
mov
cli
xchg
mov
sti
xor
lea
pusha
out
ret
test
xor
and
pop
mov
inc
sbb
aam
fs
mov
xor
scas
pop
sti
xchg
ljmp
sti
mov
xor
jns
xor
dec
xor
add
insb
repz
xorl
movsl
push
cmp
xchg
mov
xor
imul
cmpsl
stc
adc
or
adc
movsl
movsl
mov
add
mov
test
mov
mov
dec
movsl
loopne
mov
and
jae
adc
mov
repz
lds
add
or
mov
and
push
dec
mov
sti
rcr
cmp
or
and
incb
add
mov
fs
cwtl
sub
xlat
sahf
sub
aas
mov
movsb
jmp
mov
int3
and
popf
mov
repz
test
popf
pop
mov
or
push
jmp
int
cmpsl
and
add
std
movsl
popf
or
in
fwait
int
or
fwait
cmpsb
aam
scas
xchg
pop
clc
mov
repnz
into
mov
inc
add
xchg
stos
sub
push
addl
pop
cmp
mov
fcoml
adc
movsl
mov
movsl
jno
mov
repnz
xchg
sub
and
mov
mov
xchg
dec
or
sub
fucomi
daa
mov
mov
pushf
jge
test
ret
pop
test
dec
cld
out
lods
cmp
or
add
mov
fldl
jl
xchg
xchg
mov
mov
or
test
mov
push
test
xchg
repnz
sub
sub
sti
cmp
arpl
cmpsl
xchg
xchg
sub
mov
mov
or
dec
lea
mov
in
fmuls
lods
mov
fstpl
sti
leave
mov
nop
lret
outsb
inc
jmp
dec
dec
in
out
adc
iret
mov
xor
xchg
nop
out
or
sub
out
popa
jg
test
test
pop
mov
subb
lsl
jns
or
testl
sti
mov
lds
mov
fucomi
arpl
mov
add
xorl
fcomp
mov
scas
push
mov
out
in
rcl
fisttpll
cmpsl
inc
inc
sahf
xor
and
sti
add
jmp
mov
rolb
inc
addr16
jg
lods
xchg
adc
cwtl
int
movsl
ja
push
mov
jle
mov
sbb
test
mov
daa
dec
mov
mov
lods
fwait
xchg
rorb
mov
mov
aas
mov
push
sbb
out
sub
jle,pt
into
mov
popa
orb
mov
or
mov
ret
mov
pop
stc
scas
xor
repz
stc
dec
adcl
inc
ljmp
jmp
jl
jle
cs
xlat
out
cld
push
std
pushf
sub
mov
pop
sbb
stos
dec
mov
mov
mov
repz
push
test
push
fwait
les
in
jge
jg
lcall
mov
cld
jmp
in
mov
ds
mov
pop
aam
repz
loop
int3
mov
mov
bound
push
mov
cmpsl
dec
icebp
mov
dec
gs
scas
lret
mov
xor
repz
mov
cmp
xchg
test
inc
push
and
jmp
add
cmpsl
cmp
sbb
pop
stos
fmull
push
fldt
aad
and
mov
dec
mov
hlt
lcall
xchg
fwait
sub
dec
add
scas
xchg
push
scas
scas
popa
pop
mov
jecxz
mov
aas
mov
xchg
mov
sub
sbb
out
mov
stos
dec
xchg
dec
das
sub
pusha
jecxz
out
mov
xchg
pushf
adc
xor
pop
dec
in
mov
je
pop
or
push
dec
or
cmpsb
or
cwtl
stos
shll
cmp
pop
frstor
popf
lret
cmp
sub
xor
out
mov
lea
push
or
imul
adc
lods
push
in
imul
test
aas
dec
mov
mov
lods
jae
mov
mov
cmp
test
imul
mov
lahf
lret
and
mov
xrelease
pop
mov
lret
imul
pop
mov
sub
gs
out
or
stos
dec
and
sub
push
mov
or
inc
or
int
add
lret
sbb
mov
sbbb
aam
dec
cmpsl
imul
jae
xchg
es
lcall
cmpsb
es
movl
movsl
mov
dec
lahf
pop
adc
pop
aas
mov
mov
jmp
hlt
cltd
mov
sbb
lret
popf
daa
push
inc
loop
fdivrl
in
and
xor
push
dec
mov
or
ja
dec
fistpll
iret
fstpl
scas
or
popa
test
mov
das
push
in
repz
rcl
mov
mov
clc
cmc
push
dec
xchg
mov
push
mov
repnz
and
test
adc
mov
daa
shrb
jecxz
pop
loopne
jne
or
cmc
or
xchg
test
mov
popf
lods
push
shrl
fmuls
cwtl
enter
loopne
sbb
out
sub
out
ss
ret
xchg
rep
or
stos
imul
sbb
popa
sahf
hlt
lcall
into
push
sahf
ljmp
mov
push
jl
mov
cmp
mov
shll
fisttpl
xchg
int
and
leave
xchg
jmp
inc
xchg
adc
or
pop
repnz
jmp
mov
jae
rorl
push
test
xchg
lret
mov
popa
gs
rclb
pop
dec
rcll
cmp
mov
in
fstpt
stos
inc
aam
nop
jl
outsb
adc
mov
shll
test
mov
pop
scas
loopne
xor
mov
roll
mov
sbbb
test
cmp
cmp
pushf
aas
sbb
ss
inc
fnstenv
mov
add
inc
mov
stos
dec
pop
dec
scas
loop
xlat
ds
rcll
fsts
test
ret
repnz
add
and
loopne
sub
xor
cmc
push
mov
sbb
in
mov
loop
mov
xor
cmp
movsl
adc
je
sbb
out
sub
out
fildl
push
fidivrl
call
js
adc
fidivs
shll
jbe
mov
imul
mov
into
inc
imul
lcall
out
shll
xchg
popa
sahf
and
jp
mov
dec
sub
cmp
and
cmp
cmp
in
push
mov
sub
mov
mov
and
mov
jl
xor
sub
lcall
mov
cmp
rol
insb
cmp
leave
lods
in
mov
pop
roll
cmc
mov
lods
sarl
fiaddl
jbe
enter
fldcw
mov
sti
js
ds
test
mov
mov
std
je
shlb
pop
xchg
pop
xchg
xor
xchg
movsb
stos
ljmp
int3
cmpsl
push
or
sti
inc
sbb
mov
jmp
imul
fcomps
xchg
xchg
xchg
jnp
aam
stos
flds
les
enter
ss
xchg
xchg
in
mov
testb
hlt
aad
ljmp
jg
adc
int
xchg
mov
mov
sbb
inc
mov
cli
xchg
and
ds
aas
pop
cmp
repz
outsl
xor
cmp
mov
sbb
arpl
in
jp
mov
mov
shll
rcrb
into
leave
frstor
aaa
loop
test
mov
adc
xor
adc
dec
push
pusha
insb
repnz
sbb
lea
cli
lret
rcl
mov
sbb
insb
mov
pushf
mov
rorb
lods
mov
adcb
scas
sbb
mov
and
lea
dec
ds
js
scas
lods
cmc
and
mov
test
es
leave
push
inc
leave
shrl
sahf
ja
add
outsb
jg
push
cmpsl
add
push
sbb
push
icebp
sbb
add
pop
ljmp
pop
jns
and
xor
je
lods
les
sbb
xchg
shl
mov
sti
xchg
jbe
mov
inc
movsb
mov
fdivr
jmp
cltd
add
shll
push
mov
roll
mov
push
mov
test
mov
mov
cmp
add
mov
or
jp
mov
daa
xlat
movsl
lock
pop
insb
sahf
xor
jge
pop
shrl
jmp
adc
insl
out
inc
adc
sub
dec
adc
icebp
dec
ds
stos
adc
push
lret
jp
aam
dec
and
rcrl
pop
mov
notb
fbstp
movsl
dec
sarl
fsubrl
mov
sbb
sub
adc
or
and
inc
mov
into
dec
shlb
mov
lods
nop
push
mov
fisttpl
xchg
roll
sbb
jae
sti
sbbb
push
jmp
roll
test
push
push
or
mov
xchg
jmp
loopne
scas
xchg
sahf
or
inc
jecxz
lods
test
mov
adc
xor
mov
loop
fld
stos
mov
cmp
xchg
roll
mov
cltd
pop
xchg
enter
in
fs
pop
mov
insb
jmp
fcoms
dec
xchg
int3
lret
xlat
sub
add
rorl
imul
ds
bound
cmpsb
push
and
fwait
clc
outsb
outsl
les
out
je
loop
push
adc
aaa
test
aad
jnp
inc
mov
mov
sbb
in
rdtsc
in
xor
cs
inc
ficoms
mov
xchg
leave
jnp
sbb
addr16
mov
in
into
fcmovu
loop
push
lcall
int3
fwait
pop
mov
dec
adc
les
inc
lds
testl
pop
stos
cmp
xlat
mov
inc
loop
cs
outsb
inc
divl
dec
cmpsb
mov
adc
inc
cmc
dec
lret
sbb
stc
mov
mov
push
adc
sbbl
addr16
cld
lods
mov
aas
icebp
fwait
mov
push
addr16
sub
cmpsb
mov
shll
inc
mov
mov
popf
mov
loop
and
fxch
aam
addr16
into
in
inc
jg
inc
in
nop
mov
mov
sub
jp
cld
stc
mov
lretw
idivb
lcall
adc
xor
sbb
mov
inc
push
sub
test
mov
scas
push
jnp
ljmp
aaa
adc
inc
xchg
mov
sub
or
addr16
mov
test
out
inc
aad
dec
call
dec
mov
sbb
stos
or
sbb
movsb
add
xchg
mov
sbb
test
hlt
filds
mov
or
js
inc
shlb
test
cmp
jne
mov
imul
fldcw
fst
dec
into
cmp
popl
mov
leave
cli
mov
cmp
xchg
sbb
out
ret
push
cwtl
out
cs
sub
dec
xchg
das
shll
test
sahf
mov
push
pop
test
cmp
mov
stc
mov
jp
xchg
push
mov
jg
inc
idivl
int3
mov
cmovle
test
inc
shll
and
orb
push
xorb
xchg
lret
lret
test
daa
push
mov
mov
mov
dec
pop
ret
mov
sub
mov
mov
test
jmp
or
ficompl
sarb
xchg
mov
test
ss
and
rorl
pop
ljmp
sub
aam
stc
jp
jae
jge
adc
or
lahf
mov
mov
sub
aas
sub
add
add
bound
test
cmpsl
fimuls
scas
mov
jns
out
dec
mov
dec
inc
leave
adc
dec
mov
xchg
lcall
sbb
orb
les
mov
andb
test
pushf
push
push
push
insb
adc
mov
movsl
mov
cmpsl
icebp
into
testb
outsl
cmp
cmp
dec
ffreep
in
dec
xchg
jg
push
mov
xor
dec
insl
sbb
sti
or
add
lret
cwtl
mov
cwtl
xor
sti
mov
jg
add
lahf
adc
mov
aad
pushf
shlb
xchg
cmp
inc
xchg
out
jnp
aad
bound
loop
es
mov
add
aaa
add
fildll
outsl
cltd
lret
cmpsl
pop
mov
stc
in
cmp
dec
in
imul
mov
xchg
sbb
in
fstpl
ret
pop
xor
shr
cmp
adc
lahf
pop
mov
flds
inc
lea
bound
lret
imul
iret
shl
fisttpl
pop
xlat
test
mov
jmp
rcrb
xor
or
xor
sbb
mov
subl
add
loop
adc
add
clc
aad
lea
addb
xor
pop
imull
xchg
inc
add
stos
out
imull
jp
ds
dec
adc
dec
dec
jmp
sub
xchg
inc
xchg
sub
scas
push
sub
push
shrl
mov
cli
rorl
dec
mov
xchg
lahf
cmc
cmpsl
ja
and
mov
cltd
jb
jmp
ss
lret
mov
cmp
nop
push
sbb
inc
mov
mov
pop
xchg
rcll
push
in
mov
xchg
cwtl
test
mov
subb
ljmp
int
fiaddl
in
inc
pushf
enter
fcoms
test
mov
jno
xchg
adc
cld
movsb
rcll
hlt
jnp
pushf
pop
pop
xor
roll
cmp
mov
outsw
test
inc
xchg
insl
test
shl
shrb
mov
lds
gs
push
sub
into
or
pushf
xor
cmpsl
jmp
cmpsb
jae
push
and
adc
mov
push
mov
mov
subb
inc
cwtl
sarb
ficoms
push
stc
mov
pusha
mov
jb
mov
sub
xchg
xchg
xchg
or
cmpsb
negl
mov
mov
push
loop
sub
dec
test
jg
les
jmp
cltd
inc
jecxz
cmpsb
mov
ja
pop
jmp
mov
dec
dec
push
addl
stc
les
loop
dec
gs
xlat
nop
clc
iret
sti
mov
mov
xchg
and
add
mov
mov
jae
fs
mov
xchg
inc
sbb
jl
sahf
xchg
pop
cmp
rcr
test
xchg
in
loop
dec
add
inc
jnp
dec
lret
xchg
cmpsl
adc
hlt
jmp
cmp
push
loop
mov
mov
sbb
lret
int
nop
push
test
test
xchg
mov
jmp
incl
jae
fisubrl
push
or
int3
and
sbb
rcrb
xlat
hlt
jns
stos
repz
jecxz
ljmp
sti
mov
dec
and
mov
test
mov
mov
mov
inc
xchg
ud1
and
ja
sub
sbb
mov
push
push
popf
outsb
inc
bound
mov
out
rcr
push
xchg
cli
adc
je
int3
shlb
xchg
pop
mov
rcrb
jmp
leave
sbb
push
and
gs
lea
cmp
cltd
and
adc
dec
sub
xchg
adc
dec
mov
addb
inc
push
loopne
test
pop
repz
push
fldl
leave
pop
jae
ja
stos
pop
jle
out
mov
cli
or
add
xchg
dec
sbb
sub
mov
mov
xor
pop
jecxz
mov
inc
iret
pusha
xchg
mov
push
icebp
lods
aaa
push
fsubrl
mov
ret
or
insb
jbe
jmp
in
dec
outsb
push
xor
mov
push
mov
xchg
cld
mov
ja
lcall
sbb
pushl
rcrb
inc
mov
es
xchg
and
jecxz
loopne
push
push
enter
bound
xor
stos
aas
pop
sar
js
inc
stos
pop
adc
cmp
fs
in
dec
test
lcall
sbb
mov
or
lahf
pop
xchg
lea
jmp
pop
cwtl
push
adc
test
stos
cs
push
mov
fucom
lock
lahf
mov
cltd
jno
xchg
mov
mov
mov
in
mov
pop
popa
sbb
stos
cmc
fs
add
ds
pop
xchg
pop
jns
pop
mov
repz
xbegin
mov
push
mov
sub
fsubr
sbb
push
jns
shll
aad
test
mov
pop
or
fdivs
push
mov
cmp
imul
stos
push
repz
mov
frstor
inc
and
sbb
jae
int
xchg
add
jns
jae
mov
stos
inc
xchg
mov
cli
test
jno
xorb
fincstp
jecxz
mov
into
data16
add
lods
xchg
mov
icebp
loop
orb
aam
dec
jne
add
xchg
je
loopne
lret
int
inc
dec
mov
loop
cmp
aad
push
push
mov
in
mov
jmp
inc
sub
pusha
adc
cli
ret
jmp
ss
xor
mov
adc
cld
out
xorb
mov
inc
push
lea
pushl
inc
sti
mov
cmp
lock
xchg
lds
es
gs
sub
aad
xor
adc
adcb
loop
mov
ret
xor
fisubrs
mov
add
es
repz
xchg
lret
and
ljmp
jnp
es
mov
inc
pusha
out
sarb
mov
lret
xor
cmp
jecxz
jno
stos
mov
dec
mov
lret
xchg
or
or
inc
or
pop
sbb
and
lea
sub
xor
cmpsl
pop
in
xlat
sbb
pop
xchg
pusha
mov
cmp
pop
bound
xor
loopne
sub
fiadds
and
imul
mov
add
loop
mov
cmp
popf
stos
xchg
push
in
mov
dec
push
mov
sbb
mov
push
movsl
sbbl
jo
and
jge
pop
mov
jns
cmp
pop
sbb
inc
dec
pop
xlat
or
adc
movsl
std
pop
push
inc
hlt
mov
adc
pop
in
leave
mov
xor
out
add
std
stc
dec
cmc
shll
mov
stc
into
aad
sub
inc
hlt
jo
xchg
lods
cltd
mov
js
pop
out
fisttpll
mov
inc
jecxz
cmpsb
test
adc
cmpsl
dec
mov
mov
icebp
daa
test
xor
ficoml
jno
sarl
push
gs
aam
dec
cmpb
and
movsl
fsts
out
pop
and
sub
mov
inc
insb
loopne
xlat
or
je
xor
negb
cli
jae
mov
in
pushf
pop
xchg
adc
inc
rcl
fwait
adc
aaa
mov
pushf
push
test
mov
cld
ret
sarl
fxch
cmp
repnz
inc
sahf
test
xchg
repz
shlb
cwtl
or
sbb
xchg
ret
cmc
mov
adc
push
int
test
mov
fisubrs
shr
xchg
call
mov
xchg
movsl
mov
push
loopne
std
or
jmp
jne
cmpsl
jae
jmp
mov
inc
pushf
jmp
inc
push
ret
mov
xlat
aam
adc
inc
outsl
inc
xor
leavew
mov
add
das
mov
pusha
mov
cmp
mov
pop
pop
jnp
dec
cld
out
mov
divb
mov
sub
push
aad
mov
rol
ja
xor
je
lods
pop
rcrb
push
pusha
test
xchg
mov
sbb
push
add
nopl
lahf
pop
test
and
xchg
mov
xchg
loope
adc
fimuls
adc
aad
int
fidivrl
ss
incb
mov
cmpsb
sbb
add
jmp
xchg
cmc
push
push
mov
je
push
sbb
loop
popf
push
pop
xor
and
pop
adc
push
add
mov
ss
cli
push
sti
call
and
adc
mov
jns
test
notl
lret
es
sub
sbb
iret
dec
dec
fcompl
ljmp
push
sub
mov
sbb
popa
cmp
add
call
jmp
and
dec
data16
fcmovne
mov
cmp
inc
xlat
out
in
jo
shll
pop
add
cli
mov
sarl
lods
adc
aaa
enter
cltd
pusha
fimull
rorl
pop
cld
and
pop
jbe
insb
jo
sbb
ret
rcr
dec
rorl
jo
dec
dec
pop
mov
cwtl
test
dec
push
fwait
cs
lret
in
sbbl
add
pusha
lcall
push
jge
or
mov
lods
pop
ret
lock
cmpsb
jnp
sub
push
sub
pop
add
sbbb
test
mov
scas
push
push
scas
filds
outsb
pop
xchg
adc
xchg
cld
and
mov
mov
and
aad
mov
pop
loopne
pop
sub
mov
and
int3
test
leave
mov
or
in
iret
sbb
iret
mov
adc
gs
test
push
mov
dec
jmp
xor
lock
xor
cmc
loop
leave
pop
xorb
mov
inc
ljmp
test
adcl
xchg
mov
cs
mov
movsl
push
mov
jge
inc
cwtl
stos
xchg
or
leave
stos
xchg
out
jnp
mov
push
ret
sub
push
push
mov
loop
aam
jge
sbb
aam
xor
scas
push
fldt
or
test
xchg
mov
mov
push
ret
inc
fsubs
ljmp
mov
or
leave
sbbl
mov
mov
jns
jp
loopne
rcrb
push
aas
mov
popa
cmp
loop
xlat
lahf
mov
stos
lea
ljmp
adc
imul
data16
loopne,pn
cmpsl
enter
imul
pop
cwtl
jb
stos
in
inc
popf
push
xchg
xchg
jle
lock
lret
sub
adc
sub
clc
test
lahf
dec
es
push
aam
test
aas
mov
sub
pop
dec
sub
xchg
dec
xchg
leave
vpmulhuw
leave
leave
jnp
ss
jmp
mov
int
xorl
mov
stc
mov
ja
sbb
ja
pop
les
lock
aad
push
xchg
es
jne
enter
stos
push
rcrl
fwait
jle
ficompl
test
out
out
xchg
push
pop
xchg
movsb
arpl
sub
mov
ds
jmpw
cmp
jmp
pop
adc
negl
les
addr16
loop
xor
inc
div
fstps
inc
das
fcoml
sti
or
adc
pop
mov
popf
mov
cli
sbb
add
push
test
lcall
div
cmp
cli
movsl
add
ja
repz
mov
dec
push
jp
cwtl
inc
ret
mov
mov
sub
mov
inc
jecxz
sbb
dec
mov
or
adc
mov
jecxz
xchg
and
sbb
pop
lods
clc
lods
sub
xchg
mov
arpl
push
scas
sub
inc
xchg
mov
rolb
popf
rcll
adc
cmp
addb
xchg
xchg
fisubs
lds
in
add
dec
dec
push
pop
sub
neg
loopne
addl
out
gs
loope
or
scas
gs
test
movsb
ljmp
cltd
movsl
xchg
jae
in
lahf
and
jns
xchg
cmpsb
nop
cmpsb
fsubl
push
pop
jg
scas
add
xor
je
mov
hlt
or
jne
hlt
mov
outsb
cmp
add
mov
jbe
mov
loop
sbb
dec
sbb
leave
mov
sahf
test
in
add
or
inc
repz
jae
xor
clc
divl
hlt
shll
jne
lds
stos
ljmp
add
out
addb
mov
ds
jne
rcll
sbb
call
dec
push
xor
xchg
idivl
pushw
inc
sub
roll
fucomi
lods
dec
cmp
in
sar
mov
fdivr
sti
xchg
dec
push
jmp
xchg
push
xor
or
xchg
test
and
stc
jmp
or
leave
xchg
idivb
mov
shlb
stos
inc
sub
fwait
shr
xor
loope
scas
sbb
add
mov
cmp
idivb
stos
mov
arpl
push
addb
or
and
cmp
mov
js
fidivs
mov
adc
fimuls
das
xchg
adc
cmp
test
xchg
testb
test
mov
mov
dec
jo
mov
lret
rcrl
push
popf
mov
dec
and
jl
mov
loop
cmpsl
lods
inc
pop
xor
cli
leave
xchg
ljmp
pop
xlat
or
mov
int
mov
inc
popf
inc
cmp
cwtl
push
or
xchg
sub
xor
pusha
add
dec
mov
jns
daa
mov
push
test
fadds
push
and
inc
fisubs
in
xor
mov
lods
ret
xchg
sbb
dec
sub
push
xchg
stc
cmpsb
add
push
add
ret
insb
xchg
cli
push
test
push
push
insl
jae
jne
and
add
in
adc
inc
add
push
cmp
aaa
aaa
rcrb
or
js
sbb
nop
stos
mov
gs
pop
sub
hlt
xor
mov
sbb
ret
and
inc
cmpsl
mov
js
fsubs
or
shll
push
aad
push
cmp
mov
xchg
dec
loop
in
je
sbb
ret
xchg
out
cmp
add
pop
sub
fadds
push
fs
or
or
in
add
xchg
test
mov
pusha
test
pop
bound
and
mov
mov
lods
ret
mov
test
xchg
jae
cwtl
rorl
or
sub
mov
out
jbe
mov
mov
add
mov
jg
adc
shl
push
test
or
lods
xchg
and
dec
mov
movsl
push
cmpsl
sbb
cmp
lock
mov
mov
into
es
mov
test
rolb
and
xor
mov
and
mov
int
ljmp
cmp
xchg
pop
sahf
pop
int3
xchg
xor
stos
icebp
and
js
ret
cmp
inc
subb
mov
shll
inc
fdivs
inc
es
cmp
lods
inc
sub
cmpsb
negl
ficomps
nop
lret
jns
testl
mov
loop
sub
movsl
jmp
pop
mov
fnstenv
adc
jb
jnp
cmp
mov
orl
and
lea
pop
dec
cs
and
aaa
gs
xor
xchg
adc
and
scas
xchg
push
adc
jnp
js
cltd
into
cmpsl
out
dec
lods
mov
mov
push
dec
mov
sbb
add
out
xor
add
pop
jns
mov
push
mov
jg
aas
adc
into
ss
testb
aas
mov
in
mov
mov
lea
andl
popf
cli
inc
sbb
stc
daa
mov
sbbb
and
scas
xor
mov
ljmp
xchg
hlt
mov
mov
dec
popf
fstpt
mov
mov
std
shr
mov
xchg
popf
add
sbbb
aam
es
sub
pop
test
or
or
push
gs
xchg
xlat
mov
push
fisttps
jb
mov
cmp
jbe
xchg
dec
mov
mov
xor
into
xor
add
xchg
push
scas
lods
rorl
mov
hlt
fisttps
mov
mov
popa
loope
add
xchg
pop
cli
xchg
jg
dec
push
test
or
lds
pmulhuw
leave
and
xor
test
xchg
or
daa
imul
xor
or
mov
adc
mov
jge
das
mov
mov
incl
jge,pt
outsl
jne
sub
and
sub
sub
js
mov
mov
popa
and
test
enter
xor
push
push
sbb
xchg
aas
mov
aas
icebp
push
push
insl
inc
inc
xchg
fimuls
mov
cli
in
xorl
sahf
popa
inc
jae
ja
mov
cli
addr16
mov
fs
sub
stc
and
or
lcall
sarl
das
pop
push
jbe
jnp
push
pop
xor
cltd
aas
mov
insb
adc
sub
xor
xor
rcrl
lret
xchg
adc
inc
sbb
repnz
jg
mov
stc
xorb
xchg
dec
mov
stos
pushf
stos
loopne
push
lcall
sahf
push
xor
fdivrp
ret
and
jp
lcall
mov
insb
sbb
xchg
jl
jmp
pop
jae
mov
or
std
add
xchg
pop
jo
mov
dec
or
push
inc
ljmp
cltd
jge
mov
shr
je
mov
scas
jle
mov
jecxz
jmp
mov
inc
pop
mov
fidivrl
xchg
nop
add
call
imul
inc
out
xchg
imul
mov
scas
jmp
xchg
dec
shll
xor
sbb
lock
xlat
jmp
xor
loopne
jp
ss
clc
pop
es
mov
popf
xchg
mov
push
lret
stos
mov
push
movsb
mov
sub
cmp
jmp
mov
fdivl
add
adc
or
mov
mov
dec
adc
or
fwait
mov
pop
sub
cmpsb
sub
or
fwait
sub
pop
js
push
cmp
mov
divb
nop
dec
cmc
xorl
hlt
cltd
adc
es
sub
add
pop
mov
neg
jnp
mov
cmpsb
xor
pop
fldenv
sti
push
jle
pop
ljmp
ljmp
fisttpll
cmp
dec
inc
daa
pop
stos
adc
mov
arpl
in
jmp
jns
jnp
mov
cmp
xchg
stos
pop
pop
arpl
mov
pop
imul
cmp
dec
mov
hlt
int3
lods
aaa
imul
xor
push
xchg
aas
out
test
pop
mov
sti
aaa
add
cmp
push
daa
cmp
and
ret
stos
lcall
pop
movsw
movb
push
cltd
push
mov
push
mov
daa
dec
test
test
mov
insb
les
mov
xchg
push
xchg
jns
aas
inc
clc
sub
sub
push
jmp
cmp
les
and
mov
pop
dec
mov
cltd
sahf
pop
xor
movsb
leave
gs
sahf
jecxz
sub
rcr
movsl
xchg
js
sbb
fldt
xchg
and
out
jp
aaa
sub
xchg
movb
jnp
negb
jae
jg
xor
rorl
or
mov
aaa
lods
insb
xorl
pop
sbb
and
sub
stos
add
sbb
ret
pop
mov
xchg
sbb
in
jne
add
lcall
popf
enter
cmp
hlt
inc
pop
pop
push
push
push
daa
or
je
dec
pop
pop
imul
jmp
inc
fucomp
aam
cwtl
ss
or
mov
negl
into
xor
stos
mov
bound
or
mov
push
scas
add
inc
mov
fucompp
es
test
sub
out
xor
enter
jns
jae
jle
dec
nop
and
lods
hlt
leave
gs
imul
push
mov
mov
sub
cltd
mov
ljmp
insl
cmp
loop
adc
jg
mov
loopne
adc
sub
out
jl
arpl
push
lods
enter
jne
pop
les
pop
and
in
ss
and
lods
arpl
ds
mov
add
xor
and
mov
cmpsb
lock
ds
adc
icebp
retw
fistpll
incb
fdivr
jmp
sub
aaa
mov
inc
inc
push
test
xor
es
pop
in
push
adc
xchg
jae
loope
pop
mov
test
jmp
pop
insl
daa
js
imul
leave
mov
int3
ja
lret
call
js
mov
xchg
les
out
push
xchg
push
xor
sub
insl
mov
popf
loop
jnp
in
inc
sub
lahf
pop
test
xchg
jg
jae
popl
iret
mov
xor
sbb
mov
cmp
pop
xor
jp
aad
inc
xor
xchg
mull
jb
popf
mov
xchg
in
incl
hlt
mov
cmp
pushf
mov
inc
lods
sub
mov
imul
daa
cmp
in
rcll
dec
jns
shr
jl
mov
inc
out
jno
in
xchg
cvtdq2ps
in
jle
mov
lret
iret
andl
aas
ja
cmp
push
lods
stos
aam
mov
dec
xchg
fwait
ret
orl
mov
inc
xchg
mov
scas
leave
add
popa
sbb
pop
inc
sti
dec
sub
mov
pop
mov
stc
pusha
jo
fdivrl
mov
ds
sbb
es
push
decl
test
xor
mov
fiaddl
shlb
iret
mov
sub
push
sahf
xor
test
push
addb
repz
sub
int3
jb
popf
inc
pusha
cmp
and
add
push
add
int
inc
jecxz
mov
into
cmpsb
mov
lods
sahf
push
pushf
shr
mov
mov
inc
mov
popf
cmp
sbb
movb
and
call
lret
inc
or
mov
data16
loop
data16
dec
sarl
cld
dec
xchg
and
cmpsb
pop
push
leave
ret
not
mov
adc
stos
mov
push
rcl
test
pop
lods
push
pushf
ljmp
add
jmp
xchg
popa
pop
or
in
inc
push
mov
mov
xchg
sbb
filds
mov
mov
iret
mov
insb
imul
mov
xor
ret
xchg
mov
mov
movsb
jmp
or
scas
in
jno
inc
insb
xlat
mov
adc
call
jl
mov
fwait
or
lret
es
push
mov
sti
jo
scas
inc
push
stos
cmp
mov
in
fisttpll
ffree
inc
test
int3
mov
adc
mov
sbb
jg
mov
js
ljmp
jmp
test
enter
cli
mov
sub
sub
mov
xchg
cwtl
sbbl
inc
mov
icebp
idivl
insl
jge
movsb
inc
or
pop
jg
xchg
popf
movsl
xor
pop
push
xchg
jno
cmp
xchg
mov
and
jmp
mov
mov
xlat
mov
movsl
out
imul
push
insl
cmp
test
adc
mov
aas
in
btr
sub
jo
cmpsl
mov
adc
mov
cmpsl
xchg
mov
nop
or
jns
frstor
frstor
mov
mov
in
jae
dec
push
sbb
mov
xor
imul
add
sahf
out
inc
adc
xchg
and
jb
cs
or
fiaddl
shll
int3
xlat
popaw
push
inc
repnz
aaa
mov
pop
adc
mull
jne
fisubs
fmull
dec
mov
movsb
sub
scas
lds
cmpsl
mov
sub
xchg
mov
mov
pushf
leave
inc
pop
int3
cmpsl
sub
sub
or
cld
adcl
stos
daa
mov
out
sbb
outsl
ret
jb
test
inc
test
stos
xchg
push
fldz
push
fcompl
sub
and
ss
mov
dec
jns
leave
das
mov
sarb
cmc
dec
inc
mov
push
and
es
cmp
into
cmp
rcrl
inc
jmp
cmp
into
lahf
or
lahf
adc
or
pop
xor
shl
dec
push
cmp
push
daa
xchg
call
popa
in
xor
mov
loop
jecxz
js
mov
sbb
repz
js
ljmp
sub
pop
mov
push
pop
jp
shll
xchg
and
sbb
mov
and
fs
mov
ret
mov
lret
sub
inc
repnz
xchg
ds
add
mov
jae
mov
adc
popa
enter
stos
out
jns
mov
and
mov
rcll
jmp
sub
pop
data16
mov
dec
jne
sub
mov
or
aad
shll
clc
shll
insl
scas
xor
lcall
jmp
mov
dec
stos
rolb
mov
push
inc
jg
stc
es
pushf
clc
mov
xor
dec
xchg
mov
repz
push
mov
in
loop
mov
and
cmp
cld
leave
mov
lahf
push
js
stos
dec
nop
mov
lds
pop
int3
lock
mov
mov
push
jns
ret
lret
fnstenv
cs
out
inc
stc
fnsave
or
and
dec
repnz
aam
push
es
es
push
sub
jo
ds
cmp
test
mov
aam
push
cli
test
imulb
sbb
mov
inc
mov
mov
repnz
or
mov
pushf
dec
xchg
ret
dec
cmp
mov
sbb
sub
mov
dec
mov
xchg
mov
jo
je
lods
mov
xchg
sub
ja
andb
stc
insb
xor
in
dec
jmp
push
lods
push
icebp
insl
data16
inc
je
clc
lds
dec
mov
xor
addl
push
outsb
mov
xchg
cs
rcl
test
pop
lcall
push
shll
cmpsb
or
out
scas
js
out
les
xchg
cmp
pop
out
test
lea
cs
and
xchg
adc
mov
movsl
cmp
call
and
mov
mov
test
mov
aaa
add
imul
pop
or
xchg
popf
rcl
cld
jo
insb
add
inc
pop
sbb
add
cmp
dec
cmp
sbb
sub
mov
sub
ret
data16
pushf
jecxz
jns
and
or
inc
sbb
or
leave
int3
repnz
shlb
mov
jg
mov
daa
xchg
lock
in
es
jle
or
lret
sbb
dec
add
test
div
cltd
cmp
mov
xchg
push
xchg
push
mov
rcll
ds
repnz
mov
out
dec
popf
cmc
insl
int3
lret
testl
cwtl
fwait
lret
cmc
and
inc
pop
cmp
dec
aaa
pop
inc
cmp
fiadds
in
lahf
jecxz
inc
test
push
fbstp
enter
mov
clc
sarb
ja
mov
or
sbb
mov
xchg
or
in
jae
sar
out
loop
push
psubsb
and
leave
adc
adc
in
cmp
gs
sbb
adc
ret
sarl
xchg
inc
mov
xor
push
loop
xor
loope
hlt
ss
mov
loope
fsubr
insb
and
mov
push
xchg
lcall
fnsave
jae
mov
pushf
dec
ret
sbb
jb
enter
outsl
or
xor
add
sub
and
leave
adc
rcll
flds
cwtl
gs
push
into
inc
mov
jne
cli
gs
xchg
xor
ljmp
sahf
pop
shll
xchg
xchg
adc
aad
jne
test
into
stos
xchg
test
in
divb
test
mov
in
xchg
js
popa
mov
cmp
xchg
es
jbe
mov
jo
jle
add
mov
push
cld
es
or
test
xchg
cmp
pushf
mov
or
cmp
jmp
or
inc
lods
pop
dec
rorl
mov
cmp
inc
mov
mov
xchg
push
js
mov
or
mov
ds
hlt
dec
or
push
push
mov
lea
xor
mov
xchg
cmp
jo
mov
jecxz
in
shll
cmpsb
lret
repnz
inc
sub
jecxz
mov
push
notl
push
popa
mov
idiv
push
lcall
lock
and
fcompl
aam
loopne
jo
mov
fisttpl
cli
adc
jns
xchg
cmp
or
jle
xchg
lcall
aad
nop
inc
sub
adc
cmc
inc
inc
enter
aaa
roll
addl
test
mov
loopne
popl
xchg
loop
jecxz
shrb
test
into
in
push
test
movsl
mov
mov
mov
xchg
sub
pop
mov
stc
cmp
adc
sub
js
mov
fimuls
and
mov
jp
not
add
cmp
and
mov
arpl
sub
pop
xlat
jmp
push
cmp
or
mov
fdivl
test
mov
add
fstpl
xor
jecxz
xchg
leave
mov
lods
sub
jno
js
test
cmpsl
add
mov
xchg
mov
and
mov
adc
jmp
cmp
movsl
stos
mov
std
ss
insl
pop
xor
test
fwait
test
sbb
or
stos
lret
loop
fnstcw
daa
test
xor
adc
xor
push
mov
push
loopne
and
xor
xorb
aaa
das
push
testb
loop
jmp
cltd
andb
rcr
xor
push
xor
sarl
inc
mov
add
mov
jns
jo
inc
roll
mov
xor
hlt
xchg
sbb
pop
aas
or
adc
cld
sub
or
mov
pop
sti
into
sarl
ljmp
inc
aad
enter
cmpsb
or
loop
dec
mov
add
dec
mov
inc
inc
adc
shll
mov
daa
lcall
xor
es
jbe
das
imul
je
in
fldln2
mov
dec
popa
mov
add
dec
xchg
incb
xchg
sub
jg
addr16
jecxz
test
rcl
orl
jp
xor
sbb
lods
mov
loope
imul
push
jmp
xchg
in
pusha
hlt
sub
faddl
daa
cmp
mov
sub
fstpl
pop
xor
jecxz
or
push
xchg
jle,pn
and
insb
dec
ljmp
loopne
mov
scas
cmpsl
repz
mov
push
xor
and
cmp
xchg
jmp
mov
rcl
fucomip
fcoml
enter
insl
sbb
cmp
adc
push
mov
mov
ret
popa
shll
sbb
push
xchg
mov
adc
xchg
inc
rorl
xchg
jns
mov
movsl
mov
add
data16
sbb
push
mov
mov
shl
fbstp
insl
mov
fdivp
gs
fnstsw
fwait
adcl
gs
pusha
push
rclb
movsb
sbb
scas
mov
insl
push
enter
xchg
fwait
xchg
pop
mov
test
fadds
hlt
shrl
outsl
mov
fcomps
jg
jp
cli
push
rcrl
and
mov
test
ficoml
out
pop
mov
lock
cs
jnp
mov
loop
jecxz
pop
stos
jne
or
pop
push
mov
mov
mov
jns
mov
notl
stos
nop
aam
out
xchg
stos
push
mov
out
iret
fldt
jbe
cmp
and
stos
adc
adc
mov
push
xor
cmp
aas
cmpsl
sahf
pop
add
leave
pop
mov
inc
mov
pop
xchg
sub
cmp
mov
and
sbb
notl
ss
cs
fnsave
dec
daa
cmp
rol
jb
lcall
in
pushl
and
movsl
mul
test
inc
xchg
mov
dec
loop
rcl
mov
inc
mov
movsl
clc
mov
cmpsb
mov
xorb
and
ret
or
jmp
lods
push
xor
xchg
insl
jmp
aad
das
jbe
rorl
fs
fistpl
ret
lret
movsl
pop
jecxz
iret
mov
mov
ss
aad
aam
jle
cmp
sub
dec
in
fs
sub
icebp
out
jbe
shll
inc
in
jg
fistpl
movsl
push
mov
std
rorb
sbb
ret
sbb
cmp
pop
cmp
mov
add
ja
inc
sbb
int
fwait
loop
mov
adc
shl
aaa
jbe
imul
push
cmc
push
fwait
add
mov
loop
pop
sbb
mov
mov
jmp
adcl
cmp
mov
lret
test
addl
push
test
mov
popf
mov
rcll
imulb
cltd
mov
aaa
sub
xor
es
orl
dec
sarl
inc
dec
jg
jae
cmpsl
inc
sub
jg
fmul
movsb
inc
rcl
mov
ljmp
sti
cmp
rclb
inc
lcall
addb
cli
xchg
sub
in
mov
test
aam
mov
cmpsb
ljmp
bound
mov
jmp
setge
daa
pop
cwtl
xchg
sub
imul
ja
lods
inc
push
jmp
mov
test
push
mov
jns
mov
clc
and
mov
mov
add
mov
loopne
fistl
rcrb
add
and
mov
and
out
inc
cmpsl
mov
mov
sbb
dec
xor
adc
stos
add
jne
mov
push
mov
xchg
dec
push
xchg
jge
lea
out
mov
xchg
aaa
push
pop
push
sbb
test
mov
sbb
sub
adc
lahf
imul
dec
stos
xchg
inc
test
mov
loope
adc
stos
lret
stos
xorl
sbb
add
mov
out
test
shl
subl
outsl
jnp
xor
xchg
outsl
lret
ja
jae
dec
loopne
push
pop
pop
push
push
push
cmpsb
in
mov
loope
rcll
add
cs
sub
inc
cmp
dec
imulb
xchg
mov
jmp
mov
cmp
js
mov
popa
xorl
jnp
adc
lcall
test
inc
and
das
pop
addb
and
mov
test
sub
xchg
stc
pop
cmc
fs
dec
pop
push
sbb
or
cmp
jbe
xor
fcoml
and
sub
adc
scas
or
data16
ljmp
pop
adc
mov
adc
or
lock
sbb
inc
xlat
popa
enter
movsl
and
fadd
sbb
dec
popf
out
adc
testb
sub
sti
mov
mov
stc
pusha
lock
leave
jae
mov
clc
notb
inc
push
adc
and
testl
cmpsb
sbb
cmpl
mov
sbb
or
dec
test
mov
popf
or
stos
jne
mov
sbb
sub
mov
dec
jmp
xchg
mov
mov
iret
and
xor
push
or
xlat
ljmp
loopne,pt
mov
stos
pushf
jmp
setge
shll
add
aad
test
subl
test
stos
sbb
add
adc
test
movsb
mov
sti
jg
cmp
sbb
bound
testb
dec
cmpsl
out
xchg
jbe
imul
adc
dec
xchg
lret
and
divb
jo
cltd
jne
xchg
mov
into
sub
adc
jae
mov
lods
pop
sbbb
shll
jnp
mov
pop
fiadds
data16
pop
in
es
xor
fsubl
out
aaa
gs
scas
adcl
int3
pushf
loope
push
mov
inc
pop
jmp
fmuls
jle
leave
jp
xchg
ja
into
cmp
pop
xchg
lods
fcompl
xorb
xchg
lds
in
cmp
lcall
lret
mov
pop
loop
in
xchg
push
adc
call
pop
mov
aaa
push
sub
adc
ds
push
sbb
xor
das
cmp
and
js
jne
movsb
xchg
dec
xchg
out
jg
fcmovnb
jne
cmpsb
ret
into
xchg
fwait
push
inc
mov
data16
cmp
popf
lods
and
xor
add
cmp
or
push
xchg
sbb
or
xor
sub
jg
scas
fwait
fwait
pop
negl
xchg
sahf
adc
pop
jle
and
aam
pop
stos
mov
inc
xor
loop
roll
sub
fldenv
mov
push
mov
mov
lcall
or
inc
jl
xchg
cmp
sbb
lahf
mov
sbb
fadd
test
xchg
stc
xchg
push
stos
in
fiadds
mov
rorl
int3
inc
sbb
rcrl
mov
mov
jae
sbb
icebp
gs
mov
addr16
mov
and
dec
sbb
pop
mov
mov
ret
mov
mov
and
data16
push
insb
push
sub
imul
fcomps
pusha
and
testb
repnz
hlt
xchg
gs
lods
sbb
mov
repz
cltd
jnp
xor
sbb
gs
or
or
outsb
les
xor
add
scas
pop
out
xchg
jbe
in
movlps
mov
xlat
pop
push
xchg
rcr
sbb
jmp
enter
ret
add
dec
mov
xchg
aas
xchg
xchg
pop
mov
fs
mov
jp
shrl
test
addb
mov
data16
pop
outsb
and
mov
shrb
scas
xchg
loopne
mov
jl
mov
cmp
lock
fs
test
mov
fcmovb
cmp
pop
lcall
mov
push
add
cmp
test
shl
fcmovnb
dec
jle
js
stos
adc
int3
stos
test
es
imul
sbb
push
push
inc
shl
dec
xchg
lods
mov
jae
cli
les
sbbl
mov
fsts
insb
and
sub
leave
js
fdivs
shll
mov
jmp
cli
in
popl
mov
and
rcll
cmpb
stos
add
test
jmp
xor
mov
je
fbstp
frstor
outsb
mov
out
aaa
jmp
or
inc
pop
or
fstpt
int
jmp
xchg
sbb
cmp
popa
lret
or
inc
loope
stc
cmc
mov
push
loopne
mov
rclb
or
mov
add
stc
lret
andl
imul
mov
je
mov
sbb
jmp
jbe
lahf
adc
lcall
cmp
lods
adc
xor
test
cmpb
les
insb
xchg
sub
cmp
mov
add
mov
outsl
xlat
test
jmp
jb
inc
mov
std
jae
xchg
lods
adc
sti
popa
popa
inc
leave
movsl
xor
mul
inc
xchg
sbb
xor
sar
lret
fists
sub
xor
dec
fs
dec
cmp
pop
es
push
push
xchg
es
or
mov
pushf
fpatan
fisttpll
or
xor
jno
fldpi
and
mov
mov
jmpw
movsl
mov
daa
xchg
insl
cmp
push
test
sbb
data16
mov
stos
jne
mov
or
cmp
sahf
shlb
fwait
movb
xchg
cmpsb
dec
mov
sbb
jae
adc
mov
dec
pop
fs
push
cmpsl
je
cmp
loope
aas
inc
pop
mov
push
mov
pop
mov
cmpsl
adc
adc
mov
iret
daa
fdivrl
or
int
mov
and
xor
les
es
mov
enter
pop
repz
jbe
jbe
mov
sti
lcall
mov
aad
add
jmp
xchg
test
inc
pop
push
inc
loope
xchg
mov
push
mov
adc
push
jns
fnstcw
push
sub
ror
pop
stos
aam
popf
jbe
cmp
xchg
sahf
mov
pop
shlb
sub
out
std
mov
push
inc
inc
push
xor
inc
xchg
push
jp
push
jmp
sbb
test
fcmovbe
ss
data16
scas
movsb
es
cmp
cmpb
pop
fstpl
ljmp
or
push
adc
push
sub
lret
aaa
rcl
and
mov
mov
les
xchg
xchg
mov
add
popa
sub
in
popf
rcl
mov
jmp
mov
mov
idivb
loopne
mov
push
pop
cltd
xor
movsb
test
xor
xchg
mov
jmp
and
xchg
loopne
lret
sbb
test
gs
test
ss
mov
scas
mov
cs
push
cmp
fucomip
jg
cmc
xlat
shlb
mov
aas
out
cmp
adc
mov
insb
pop
sbb
fsubrs
push
push
push
push
add
lret
mov
mov
xor
inc
les
add
js
jnp
imul
xchg
push
jnp
xchg
in
mov
or
mov
ss
shrl
cmp
iret
cmpsl
push
xlat
xchg
jg
xchg
fwait
lret
or
shll
cli
outsb
test
fidivs
add
xchg
mov
mov
ret
or
push
cmp
inc
andb
xchg
iret
pop
inc
incb
adc
ret
sbbb
shrl
stos
mov
fcomp
add
icebp
xchg
jae
cs
flds
test
cmp
xorb
or
gs
addr16
or
insb
pop
or
insb
mov
xchg
mov
push
orb
mov
test
pop
aam
sub
push
cltd
iret
cmc
aaa
test
mov
add
ja
sub
repnz
cmpb
mov
arpl
repnz
adcb
addr16
fwait
popf
pusha
dec
lods
push
ljmp
push
xorb
and
adc
mov
andl
sar
int
icebp
loope
jmp
add
cwtl
bound
pop
pop
inc
cmc
leave
jb
inc
cmpsb
add
jbe
rcr
aam
movsb
bound
adc
sahf
xor
mov
loop
dec
mov
cs
pop
int
push
in
fidivl
jg
jmp
pop
daa
inc
popl
scas
shll
and
testl
dec
popa
aad
aam
jge
out
and
inc
shll
xor
or
cmc
cmp
dec
negb
hlt
mov
mov
or
mov
jl
cmp
and
and
sarl
jmp
cmc
jecxz
test
ret
cltd
mov
data16
mov
jmp
adc
imul
xchg
enter
and
int3
ds
jno
add
and
in
mov
xchg
test
add
arpl
enter
pushf
dec
mov
inc
iret
dec
sbb
mov
pop
fnstenv
push
dec
adc
fdivr
jge
popf
fdivr
xchg
jp
enter
cmp
pop
movsl
mov
ss
dec
fstpl
cmp
pop
movsl
data16
cmpsb
or
push
outsb
loop
shlb
cmpsb
mov
cmp
xchg
or
push
jmp
popf
adc
out
push
or
and
mov
push
ret
jo
mov
xor
mov
cld
mov
xchg
adc
push
out
mov
pop
int3
mov
fs
pop
in
sahf
jg
into
inc
sarb
scas
jge
loop
leave
daa
cltd
nop
mov
add
jmp
jae
ds
stos
mov
cmp
clc
and
and
cld
or
test
es
pop
pop
stos
gs
inc
addl
nop
cmp
dec
sbb
popf
ja
push
mov
std
enter
outsb
test
mov
or
jp
sbb
addr16
daa
cs
testl
imul
dec
cmp
mov
and
hlt
adc
stc
ss
jmp
and
or
cmp
jmp
and
xchg
sbb
rorl
leave
pop
cmp
cwtl
xchg
gs
add
aaa
jne
cmpsl
mov
sbb
rol
adc
or
pop
pop
ret
lods
cmpsb
enter
outsl
mov
cmp
sub
ficoms
xor
or
sbb
adc
xchg
inc
adc
mov
sti
xchg
xchg
mov
mov
sub
cmpsb
sbb
int
fistl
mov
xchg
pusha
andl
xchg
lods
int
xor
cli
xchg
jno
scas
ja
jmp
mov
push
inc
into
loopne
int
xor
cld
inc
mov
pop
cltd
call
loopne,pn
stos
lcall
mov
sub
cmpsl
scas
insb
mov
add
inc
pop
stc
cmc
mov
ljmp
mov
push
mov
subb
scas
and
in
and
clc
sbb
sub
push
mov
lret
xor
or
test
pop
sbb
jno
mov
inc
lcall
or
lods
cmc
xchg
aam
scas
mov
dec
imul
imul
ss
push
movsl
cmp
mov
ret
cli
xchg
out
repnz
and
or
shrb
jp
out
push
dec
mov
and
jmp
lcall
sub
sar
xor
rcl
push
jg
lcall
shll
xchg
hlt
rcll
mov
shlb
add
daa
mov
lea
insb
movsl
xor
rcr
repz
lcall
ss
push
adc
adc
xlat
push
rorl
enter
dec
cmp
lcall
mov
xchg
adc
dec
inc
fists
mov
adc
ss
imul
add
loop
mov
jle
cmpsb
jmp
inc
orl
stos
mov
sbb
pushw
mov
lret
xor
mov
dec
mov
cli
pop
push
sbb
mov
lock
movsl
loopne
test
mov
xor
jo
movsb
pop
pop
mov
test
dec
add
negb
mov
adc
mov
scas
pop
jbe
loope
cld
sub
push
test
std
fildl
sahf
mov
mov
lds
push
xchg
ljmp
pop
cs
jl
or
stos
lret
xor
cmp
dec
add
mov
jl
sti
inc
adc
or
je
ret
cmp
loopne
mov
test
jmp
or
rorl
push
shll
inc
push
push
shrl
sub
mov
and
mov
push
mov
inc
mov
les
lret
sti
push
mov
mov
inc
pop
mov
sbb
es
ss
enter
gs
mov
dec
push
nop
lea
mov
push
rcrb
jae
test
cmpsl
pusha
mov
pop
mov
loope
adc
popf
leave
jae
scas
jmp
cmp
hlt
or
outsb
push
sbb
push
jb
fists
mov
pop
scas
jb
test
dec
clc
mov
repz
push
outsb
dec
add
idivb
cmpsb
sbb
cmpsl
test
lods
out
xchg
xchg
pushl
or
andl
or
dec
shll
xor
scas
dec
outsb
pop
sub
ret
subl
push
sub
ds
int3
dec
loop
outsl
push
pop
jbe
xor
movsb
jae
cs
xchg
hlt
sub
xchg
mov
adc
jmp
pop
cmp
dec
stos
sar
sub
xchg
pop
les
sub
rol
in
pushf
lea
jne
xchg
bound
and
push
rorl
add
in
sub
ja
jge
add
mov
in
cmpsl
push
push
stos
mov
lret
repz
adcl
loop
xor
cmpsl
test
not
push
push
lock
in
jno
aam
cmp
out
sub
jne
mov
movb
aad
cmp
mov
imul
xchg
push
stc
mov
mov
daa
lret
jle
test
sub
mov
out
sub
mov
lea
push
mov
inc
cmp
inc
sub
pop
cmp
push
add
int3
sub
pop
push
out
sub
sbb
scas
inc
cmc
sti
arpl
push
mov
adc
jne
sub
or
pop
lods
icebp
cmp
les
dec
push
popa
xor
sarl
add
out
addr16
xor
inc
jmp
jmp
dec
js
cmpsl
dec
jbe
cmpsb
mov
in
mov
cmp
cmp
xchg
test
pop
aad
inc
jg
cmp
iret
and
dec
mov
mov
pop
pop
lods
lcall
cmpsb
daa
ss
adc
popw
add
or
jg
dec
in
adc
xor
lods
loope
lods
inc
aaa
lcall
xchg
es
nop
test
outsb
scas
jbe
inc
cmpsl
lea
gs
xor
or
push
mov
cmp
cmc
or
mov
mov
adc
add
or
cli
jg
and
shr
lahf
jns
lods
cmp
loop
shrl
movsl
lahf
cmc
pop
mov
test
stos
jecxz
lods
and
inc
cmpsl
cld
cmp
repnz
add
xor
sarl
icebp
inc
mulb
jl
hlt
pop
xchg
call
jo
push
sbbl
ljmp
nop
pushf
popf
mov
ja
mov
xchg
sti
jl
mov
cmp
ds
dec
push
xchg
mov
test
insl
shlb
dec
ret
pushf
sbb
push
xchg
mov
sub
insb
fs
ds
mov
mov
sub
addb
in
call
jne
fcomip
sub
xchg
cmc
popa
push
mov
jno
cwtl
psubq
sbb
and
sbb
lods
test
xlat
sub
mov
mov
aaa
loop
sub
mov
mov
adc
and
addl
fwait
ror
jl
les
es
rol
xor
dec
mov
adc
pop
adc
out
lret
ficomps
jbe
xchg
decl
loop
adc
into
call
test
xchg
daa
cmp
sbb
mov
jle
scas
and
arpl
ficoml
imul
xchg
mov
xchg
ret
jmp
mov
or
lcall
ja
mov
push
mov
mov
or
movsb
ljmp
rorl
test
aaa
inc
fnstcw
inc
lods
inc
mov
addr16
cmp
inc
mov
leave
mov
mov
xchg
or
loopne
sbb
call
fcoml
stos
xchg
add
es
lahf
xchg
xor
xchg
stc
repz
xchg
adc
xchg
push
clc
push
je
xchg
adc
and
jno
sub
popa
mov
mov
sub
pop
dec
mov
sbb
pop
cmp
jp
test
fcompl
jo
dec
es
subb
in
jp
mov
lahf
push
xchg
loop
cmp
out
sbb
and
sti
shlb
inc
cmpsl
shrb
lcall
fldt
gs
jmp
mov
push
repnz
rcrl
int
daa
cmp
adc
popa
sarl
fldt
fistpll
pop
ja
notb
int3
shlb
fldcw
sub
lcall
fisubrs
and
fldt
hlt
mov
push
pop
bound
gs
fidivl
incb
pop
insb
fwait
pushf
add
adc
lock
adc
sub
xchg
bsf
clc
popa
push
mov
test
mov
xchg
movsl
pop
ss
inc
adc
sbb
lcall
sub
xor
dec
sarb
daa
gs
scas
mov
push
cmp
outsl
add
jb
fdivs
pop
repnz
stos
fnstcw
andb
ljmp
xchg
into
xor
mov
cmp
lcall
push
icebp
adc
push
sub
sbb
inc
mov
popf
or
push
mov
xor
cwtl
mov
jmp
xor
out
cmp
in
cmpsb
cmp
pop
and
xchg
jg
sti
aas
pop
fisubrl
mov
and
xchg
insb
fwait
shlb
inc
lds
pop
fwait
push
mov
push
ret
xchg
js
inc
xchg
cmp
push
sbb
jnp
ljmp
xchg
cmp
mov
pushf
ret
pop
mov
mov
mov
in
xchg
lret
cmp
int3
xchg
loop
sahf
sbb
dec
or
sub
testb
in
mov
inc
es
lea
pop
data16
rcr
es
push
push
cmp
cmp
jl
and
fldenv
mov
out
mov
mov
and
mov
dec
sbb
movsl
subl
stos
daa
mov
loopne
pop
in
jnp
adc
fldl
mov
inc
xor
sti
rcl
in
mov
sub
jmp
aad
data16
sbb
mul
testl
in
mov
add
sbb
inc
shl
jl
xlat
or
fldt
xor
das
popa
push
out
xor
or
std
leave
lahf
push
arpl
inc
sub
push
xor
sti
xor
sbb
and
dec
stc
stos
push
adc
mov
bound
lcall
idivl
fmuls
sbb
call
sub
or
and
xor
loop
dec
push
mov
popf
imull
ja
rolb
mov
test
test
sbb
inc
cmp
stos
addr16
aas
pop
divb
inc
cmp
mov
mov
insb
ja
jmp
fidivrl
loope
sti
addl
jns
leave
push
xor
jmp
addr16
or
stos
sarl
pop
xchg
cmp
push
push
mov
push
sub
test
dec
les
out
ja
sbb
push
enter
in
pop
loopne
mov
leave
inc
xor
fimuls
adc
push
inc
rcrl
pop
and
jbe
xchg
lret
fwait
rclb
jmp
repz
push
adc
jbe
fcoms
or
mov
push
rclb
and
stc
mov
mov
dec
mov
push
fistpll
popf
sbb
arpl
cmp
xchg
push
mulb
xor
imul
cmp
idivb
lods
jmp
cltd
adc
mov
inc
mov
popa
xchg
iret
popl
jae
enter
mov
je
add
es
xchg
sbb
stc
mov
fs
cmp
cmpsl
mov
in
push
imul
rorl
sbb
sarl
jmp
dec
push
adc
fwait
xchg
mov
mov
xor
fistps
pusha
fdivrl
pop
neg
ss
adc
mov
shlb
xchg
aad
shlb
pusha
add
or
mov
je
mov
mov
test
mov
mov
cmp
loopne
fwait
data16
repz
jne
xchg
shll
dec
pop
or
mov
stc
js
cmpsl
mov
push
xchg
pop
mov
dec
loop
inc
xor
cmp
inc
hlt
jb
push
fmuls
out
inc
addr16
fmulp
mov
in
aad
xchg
push
popf
push
jecxz
xor
outsb
inc
mov
shlb
sub
icebp
push
xlat
hlt
sub
std
aas
jmp
int
ret
les
mov
sbb
or
add
in
add
stos
mov
dec
jge
fnstcw
clc
jg
add
xchg
mov
arpl
mov
stos
cmp
sub
mov
cli
sahf
pop
cmpsl
out
xchg
and
mov
call
mov
jbe
xchg
lret
repz
xchg
pop
add
sti
rcll
mov
mov
jg
nop
js
fxch
test
arpl
lea
fisttpll
mov
call
loop
sbb
xor
cmpsb
mov
push
ret
cli
dec
xchg
push
jp
sub
sub
popf
jne
mov
ret
loopne
nop
xchg
pop
pop
jo
ljmp
mov
aaa
cmp
or
fwait
xchg
jmp
cmpsl
dec
inc
dec
mov
add
adc
xchg
fisubl
xchg
movsl
dec
jbe
jae
shlb
mov
xor
pop
or
insb
scas
ss
xchg
cmp
mov
rorb
mov
ja
insl
adc
xor
xchg
sbb
pop
nop
fildl
mov
inc
mov
add
pop
cmp
test
push
js
mov
pop
xchg
and
inc
sbb
int
cs
out
sahf
lcall
sbb
mov
mov
inc
pop
bound
out
or
xchg
imul
pop
mov
sub
movsb
ficomps
sub
cmp
sub
loope
jnp
xor
sti
popa
xchg
cmp
int
stos
mov
jl
pop
aaa
loopne
mov
mov
cmpsl
stos
rcrl
mov
and
icebp
jns
stc
xchg
push
and
mov
push
cmpl
movsl
add
and
mov
xchg
xor
add
fprem
inc
xchg
or
pusha
push
jecxz
jge
jmp
divb
shl
les
inc
adc
pop
idivl
and
add
into
sub
jb
mov
jo
pop
cmp
out
dec
sbb
or
xor
mov
mov
inc
sub
adc
loop
cmp
and
jge
rcll
jbe
into
mov
xchg
bound
sbb
mov
inc
push
inc
xchg
xchg
or
stos
enter
pop
add
sub
or
sbb
or
in
adc
adc
sbb
sarb
mov
int
pushf
push
push
fidivrl
xchg
push
addr16
scas
and
xchg
add
xor
hlt
imul
imulb
leave
adc
sbbl
cmp
sbb
inc
mov
mov
push
lods
xor
mov
mov
jne
sahf
icebp
push
adc
dec
xchg
sub
gs
xor
jmp
ds
subl
popf
mov
fwait
xor
xchg
xchg
lods
loope
loopne
xchg
daa
test
lods
sbb
lahf
test
push
mov
movb
mov
push
sahf
add
test
fs
xor
mov
push
es
ja
movsb
mov
cwtl
test
call
or
test
add
fdivl
popa
sub
xor
sub
sub
aas
ja
sahf
ljmp
enter
in
mov
shrl
ror
xchg
sbb
add
and
lahf
ljmp
cwtl
stos
test
cli
add
and
and
gs
jbe
add
daa
sbb
pop
push
fsubl
ss
testl
xchg
popa
sub
fdivrs
cmp
mov
jnp
and
dec
nop
and
and
stc
mov
es
imul
inc
cmp
push
cmpl
xchg
xor
cmp
mov
int
aad
aam
dec
mov
adc
mov
shlb
inc
pop
mov
cltd
mov
ret
sub
mov
mov
jecxz
pop
cwtl
jbe
mov
pusha
int
dec
push
stos
mov
jmp
fimuls
leave
mov
push
mov
xor
mov
mov
repz
mov
inc
xchg
inc
fldcw
xchg
mov
insb
add
mov
clc
cmc
push
flds
sbb
xor
fimuls
sub
sbb
fwait
decb
sbb
rolb
outsb
xchg
mov
popf
adcb
int3
mov
adc
loop
call
adc
ret
mov
mov
loopne
shlb
jecxz
lds
mov
aam
loopne
shlb
xchg
pop
jo
xchg
sbb
and
adc
xlat
aad
test
popa
ror
mov
xchg
xor
adcb
cld
popf
cltd
lahf
rorl
or
dec
nop
sub
sub
subl
inc
je
xchg
insb
test
aaa
mov
pop
add
mov
ss
nop
mov
test
mov
push
ljmp
mov
lcall
sub
sbb
mov
push
test
shl
pop
jae
cld
pop
insl
push
repz
mov
sbb
popa
xchg
cmp
mov
orl
stc
subb
jae
subl
cmpsl
xchg
std
jle
push
xlat
loop
mov
mov
mov
pop
inc
cmc
cmc
jg
push
pop
xchg
fs
lds
hlt
fucomip
add
icebp
dec
scas
out
mov
sbb
xorl
fsubl
mov
fcmovnu
jns
sub
mov
mov
stos
adc
lods
xchg
mov
pop
mov
mov
cmpsb
rclb
repz
call
adc
mov
adc
jmp
sbb
pop
and
test
movsl
pop
mov
lods
inc
loop
shlb
or
pop
movsb
pop
in
jo
add
les
dec
loopne
adc
aas
or
mov
addr16
cwtl
ret
xchg
popa
fs
fcmovne
dec
mov
out
leave
inc
movsb
mov
test
popa
inc
test
jae
and
imul
add
mov
shl
mov
cltd
add
in
push
cmp
aaa
inc
aaa
jg
sub
shll
insl
mov
movsb
sub
in
ljmp
jbe
add
gs
cmpsb
shr
fld
or
sbb
and
pop
lcall
xchg
cli
in
xchg
inc
xchg
fnstsw
outsl
mov
ss
fistps
xor
out
repz
mov
add
aaa
sbbl
adc
aam
cmp
fsts
pop
frstor
add
lea
out
ss
add
adc
pop
xchg
mov
xor
sub
andb
in
pop
ss
xchg
fwait
pop
adc
jmp
adc
fwait
mov
std
insl
fldl
mov
xor
and
adc
dec
loopne
notb
mov
iret
jmp
mov
xor
push
insb
xor
mov
pop
jg
jp
in
sbb
ficompl
mov
sbbb
leave
jae
pusha
scas
sbb
mov
or
mov
xchg
aas
test
lcall
cmp
adc
enter
xorb
leave
loopne
mov
xchg
push
ret
mov
jne
loopne
pushf
push
fwait
sbb
mov
rcll
cmp
lret
xchg
insl
mov
or
loope
xchg
cltd
js
inc
xor
ret
scas
aaa
incl
pushf
mov
aas
gs
mov
nop
icebp
push
or
nop
cmp
lret
jmp
pushf
jbe
lret
mov
ftst
cmp
cmp
sti
fwait
lret
sub
mov
out
out
mov
add
fs
pop
mov
dec
xchg
adc
xchg
pop
cmp
je
push
xchg
icebp
mov
add
xchg
ss
inc
mov
lds
ficomps
add
iret
push
insb
xchg
xchg
lret
loopne
jnp
xchg
push
xor
jbe
pop
add
aaa
inc
leave
or
pushf
mov
shl
cs
sbb
ret
out
das
cmc
push
xchg
fs
mov
sbb
push
adc
add
add
icebp
xor
mov
inc
mov
test
ljmp
lds
orl
pusha
ret
jmp
stos
pop
js
sbb
mov
inc
xchg
mov
shl
jae
inc
pop
fisubrs
fisttpll
cmp
mov
into
cmp
push
mov
cmc
dec
popa
push
lahf
shll
add
rolb
sti
test
mov
stos
pop
xchg
push
inc
xchg
nop
mov
movb
xor
mov
mov
mov
mov
sbb
or
pop
outsl
loopne
push
notl
dec
dec
pop
ds
clc
or
negl
xchg
ror
and
shr
push
push
test
ja
imul
loop
cmc
or
pop
ret
push
xor
jmp
adc
xor
sbb
aam
cmp
push
mov
jnp
jle
xchg
leave
loope
stos
int
adc
test
out
repz
jp
sub
sahf
adc
pushw
insb
leave
xchg
or
rcll
rcll
add
pop
lods
cmp
in
out
jl
leave
out
sarl
ja
in
push
jg
je
jo
dec
push
mov
pop
and
sub
fcompl
xchg
leave
movsl
aaa
jg
sub
xor
push
sbb
xor
push
addr16
inc
aad
jmp
not
fisubrs
or
mov
divb
into
xchg
jbe
aaa
xor
popf
cld
xlat
adc
jp
loop
sub
sub
push
cmpsl
in
mov
sti
mov
and
jmp
sbb
mov
lahf
and
or
lea
dec
idivl
movsb
shrl
jg
jl
stos
add
sbb
fsubs
push
test
cmp
cwtl
lods
mov
cwtl
sub
sub
scas
lods
jno
shrl
popa
imul
xchg
repnz
inc
mov
sbb
sub
stc
pop
inc
mov
into
cmpsb
lret
xchg
outsl
stos
into
nop
lods
mov
jb
aas
jo,pn
pop
dec
xor
or
stos
mov
ljmp
jbe
adc
into
outsl
pop
loopne
add
xor
sti
lods
and
sub
push
sbb
enter
sahf
jb
rcll
jge
xlat
in
cmp
pushw
mov
jae
mov
add
mov
xchg
lods
mov
inc
push
push
stos
mov
aam
sub
inc
mov
cli
sti
dec
scas
mov
and
loope
mov
mov
ja
jle
mov
adc
lret
inc
add
and
and
xor
ds
mov
inc
nop
pop
xor
jle
into
mov
in
xchg
setns
mov
cmc
push
add
roll
mov
adc
movsb
mov
lcall
js
dec
into
jns
mov
icebp
rorl
shlb
ljmp
fdivs
popa
mov
rorb
push
out
cmp
and
mov
xor
shll
add
push
adc
adc
stos
ret
inc
lss
mov
rclb
jbe
mov
dec
popa
sbb
jge
leave
daa
mov
inc
popa
stos
inc
jmp
mov
jmp
lret
test
xor
insl
or
mov
jbe
or
fnstsw
mov
test
cmp
out
cmpsl
lret
nop
aas
xor
cmp
push
mov
test
fsubl
mov
xor
adc
rolb
jp
xchg
sub
into
loop
mov
pop
ljmp
jo
xor
sbb
pop
pop
jge
in
adc
cmp
stos
mov
inc
fcmove
in
sub
push
inc
mov
and
fldl
add
pop
xchg
push
data16
push
mov
jg
gs
enter
in
jg
iret
es
stc
filds
hlt
ljmp
in
dec
xchg
pop
stos
rorl
mov
fldt
in
rcrl
add
hlt
jmp
test
daa
fs
add
movsl
test
mov
stos
mov
jns
add
cmp
sub
cld
leave
stos
mov
imul
out
sahf
loopne
mov
jg
xchg
test
and
pop
pop
pop
push
int3
mov
mov
addr16
cltd
push
cmp
jnp
in
das
cmpsl
push
shrl
movsl
lods
mov
sbb
push
popa
xchg
lcall
out
mov
ret
add
xlat
rcll
imul
roll
hlt
xlat
pop
cmp
jo
pop
insb
cmc
addr16
xchg
cmpsl
ret
sbb
divl
pop
fs
and
flds
and
adc
stos
fwait
test
cmc
add
lret
mov
sahf
sbb
jb
fldenv
int
pop
jnp
lcall
mov
bound
mov
sub
lods
adc
ja
and
mov
aaa
and
outsb
push
ljmp
cmp
sub
xor
xchg
mov
push
pop
adc
in
jl
aad
xor
into
sub
jns
adc
test
inc
dec
stos
lea
insl
dec
push
popw
push
jns
sbb
sub
jo
xchg
in
adc
mov
cmp
cmpsb
push
cmp
dec
cmp
ljmp
mov
fwait
popf
pop
iret
cmp
sarb
jmp
and
in
lods
fdivs
mov
fcomps
xchg
jmp
fmull
loop
mov
xchg
ja
xor
pop
mov
ret
push
mov
arpl
popf
rcl
shlb
xchg
ss
aad
leave
test
xor
mov
or
mov
cld
jns
and
xchg
out
dec
jae
and
sbb
mov
popa
dec
push
adc
stc
jmp
lahf
ss
test
cmpsb
clc
fcmovne
daa
testl
cmp
loopne
dec
aas
pop
repnz
movsb
test
jmp
mov
pop
hlt
xchg
leave
out
xchg
sbb
stos
cltd
shrl
ljmp
mov
add
xor
stc
add
jmp
sub
xor
dec
lea
jp
sti
loope
stos
enter
sarl
aam
mov
push
ret
xchg
daa
iret
jp
adc
xor
inc
sub
jmp
das
leave
jecxz
insl
sub
sbb
outsl
jae
fucomip
in
enter
les
popf
leave
sub
push
icebp
mov
mov
cmpsb
adc
push
adc
or
pop
sub
js
xchg
mov
jp
ret
cmpl
sbb
mov
xorl
fidivl
loop
push
mov
xchg
add
les
stos
fcmovb
push
icebp
neg
xor
adc
dec
je
sub
xlat
and
mov
pop
ret
pop
mov
cltd
jmp
cmpsb
pop
cli
cld
pop
or
add
shll
jnp
stos
mov
push
cmp
dec
leave
popa
or
iret
dec
dec
sarl
xchg
push
or
ss
out
sbb
xor
cmp
and
xchg
mov
xchg
adc
rcl
insb
cmp
shl
movsb
lcall
sbb
sub
test
mov
orb
dec
data16
mov
mov
xchg
push
push
int
mov
testb
test
jmp
jge
mov
add
test
pop
jns
xchg
mov
fwait
mov
js
insb
sub
sbb
insl
sbb
pushf
sarl
shll
fdivrl
movsl
ja
pcmpeqb
and
mov
xor
jecxz
sbb
add
dec
out
loopne
sbb
pop
xor
sahf
into
jp
mov
dec
sub
mov
mov
out
std
push
xchg
loope
xchg
stc
test
lea
stc
cmp
rolb
popa
push
test
mov
es
adc
inc
sbb
jnp
mov
mov
psubusw
or
or
inc
lods
and
xor
lahf
jns
movb
cmp
mov
pop
mov
pop
pop
ja
fdivl
and
pop
jno
loop
loop
adc
jne
xchg
gs
shll
pop
xchg
adc
sub
pop
xchg
iret
pusha
incl
jp
push
rcrb
push
insb
and
xor
inc
or
sti
testl
shll
mov
jbe
mov
rclb
mov
jecxz
mov
pop
lahf
mov
lds
inc
in
dec
mov
cs
and
lahf
imulb
bnd
pop
bound
push
js
xchg
xor
mov
dec
test
test
pushf
pop
repz
jne
shll
pop
in
jo
mov
nop
aas
or
xor
test
outsl
sbb
pusha
lahf
xchg
push
mov
test
clc
jns
xchg
mov
mov
push
sub
clc
loope
imul
xorb
add
outsb
cwtl
ljmp
jnp
or
pop
xor
adc
stos
les
cltd
leave
sbb
adc
or
mov
psubusw
outsb
lods
pop
pop
imul
sbb
lcall
movsb
xor
sti
outsb
or
addr16
dec
stos
data16
jge
adc
es
fcom
in
outsb
popa
leave
or
xor
push
les
add
pop
sti
dec
xor
push
popa
dec
test
cmpsl
jne
je
lock
lahf
sub
ret
add
shlb
sub
xor
push
adc
sub
sub
add
xor
into
xor
push
outsb
jno
mov
xchg
cmp
out
adc
mov
in
push
cmpsb
jae
sti
in
jno
imulb
ja
xor
xchg
sub
inc
cmp
sar
loope
and
fwait
push
add
xor
int3
ss
or
mov
pop
popf
jnp
cmc
xchg
shrb
or
or
hlt
out
xor
fmulp
in
sub
shll
xor
sbb
std
push
leave
mov
push
shll
inc
jg
stc
inc
cmc
hlt
push
xor
jo
out
notl
mov
lret
popa
jmp
aad
cld
gs
and
scas
push
outsl
push
js
adc
mov
xchg
mov
bnd
or
or
popa
dec
add
cmpsl
add
push
ljmp
dec
add
test
push
gs
int3
je
gs
adc
arpl
ja
and
in
pop
jbe
aad
mov
loope
push
mov
mov
fmuls
stos
in
inc
lods
test
adc
mov
push
sbb
inc
push
popf
shrl
jg
inc
mov
dec
mov
mov
lahf
cwtl
inc
xor
cmp
repz
push
sti
dec
mov
and
mov
shl
mov
pusha
movsb
lcall
fwait
inc
mov
notl
and
lcall
dec
mov
ja
mov
lods
test
in
mov
loope
adcb
stc
into
and
mov
je
out
std
xor
pop
cld
mov
sbb
inc
mov
cmc
mov
sahf
pop
cmp
sub
in
scas
sbb
fwait
shl
mov
out
xchg
sub
das
test
sbb
nop
jecxz
mov
lea
xor
xchg
push
pop
gs
repz
icebp
jb
dec
sub
add
jp
push
push
mov
das
cmp
clc
sub
stos
xchg
fdivrl
out
ds
xchg
mov
fsubrl
push
arpl
or
mov
sbb
jne
push
push
add
jge
mov
mov
mov
scas
imul
icebp
test
dec
loopne
pop
leave
stc
divl
pusha
out
mov
inc
into
ss
je
sarb
mov
sub
mov
dec
push
ret
insl
repnz
xchg
inc
mov
aaa
adc
rcr
insb
xchg
sbb
icebp
xchg
mov
push
inc
lret
nop
or
test
lcall
fsubrl
pushf
lret
push
test
jnp
sbb
adc
leave
leave
shll
xchg
mov
sbb
inc
lods
adc
push
ror
int
sbb
jns
addr16
jns
test
push
jge
xor
mov
clc
vcvtdq2pd
or
arpl
pop
or
icebp
addr16
loopne
das
xchg
adc
in
mov
rolb
jae
lahf
jmp
popa
xchg
ja
icebp
mov
mov
add
inc
jb
aas
push
add
sub
push
loope
push
add
xor
sub
inc
adc
int3
adcb
fnstenv
test
mov
nop
xchg
call
dec
mov
stos
sbb
dec
es
mov
sarl
sub
lret
popa
roll
dec
add
jecxz
shrl
xchg
and
lahf
jmp
mov
fucomip
mov
aaa
xchg
icebp
mov
scas
xor
push
gs
xchg
test
sub
mov
push
cld
jb
add
and
xchg
mov
mov
fs
adc
repnz
jae
into
adc
mov
lret
add
insl
push
dec
cli
call
push
mov
arpl
adc
or
lret
fprem1
rcr
outsb
cmpsb
dec
fmull
cmp
xor
ja
and
mov
sub
cltd
jns
ror
mov
loopne
mov
xlat
data16
sub
sahf
mov
into
es
xchg
aaa
cltd
pop
jbe
cmp
mov
xor
jp
ja
shlb
push
ja
mov
jno
inc
aam
cmc
sub
pop
xchg
lahf
into
pop
iret
mov
cli
fsubrl
lret
push
hlt
cmp
hlt
out
push
mov
xor
leave
popa
dec
nop
leave
push
adc
mov
inc
lods
sub
push
mov
btc
push
bound
dec
inc
mov
push
sbb
mov
js
cmp
push
sbb
fists
and
xchg
fsubrs
cltd
fistpll
mov
xchg
enter
dec
jle
jnp
push
cwtl
add
adc
push
dec
and
ja
sarl
push
sbb
cli
mov
mov
andl
xchg
or
jge
mov
xor
mov
pop
lods
bound
mov
loop
push
movsb
fimuls
enter
mov
das
stos
cli
adc
mov
or
popf
or
inc
xlat
dec
movsl
push
mov
mov
adc
data16
sub
jae
ljmp
outsb
aam
pop
repz
andl
add
mov
outsl
cwtl
xlat
fildl
inc
es
out
mov
or
jae
push
sbb
mov
lea
pop
mov
and
mov
ja
mov
inc
pop
or
add
aaa
push
testl
cmpb
int
fsubrs
mov
xor
fisttpl
bound
cmp
push
push
cmp
es
sbbl
gs
or
or
scas
divb
push
clc
test
ror
out
outsl
mov
std
hlt
mov
sti
jp
push
testl
lcall
push
and
ret
loope
ja
jbe
adc
aas
sub
sub
xchg
or
fsubp
cmp
lods
sbb
repnz
add
sarl
lcall
and
jg
mov
xor
shl
xchg
xchg
popa
cmpsl
lea
cld
je
in
mov
testl
and
lds
or
jl
mov
mov
lock
mulb
sbb
jecxz
sub
or
divb
mov
adc
sub
push
and
stos
push
mull
aad
mov
dec
in
add
es
mov
roll
cmp
mov
loop
imull
popa
scas
jg
xchg
pop
adc
sarl
xchg
fsubrl
jnp,pt
lods
ljmp
xchg
mov
cmp
sub
mov
mov
mov
call
cmp
popa
loopne
dec
mov
cmpsb
aam
push
and
sbb
je
mov
dec
inc
lahf
inc
jae
sub
fstpt
int
fld
xor
dec
fdivrl
xchg
push
mov
popf
cs
mov
jo
ret
or
push
test
insb
into
and
push
mov
in
jns
and
out
pop
or
cld
add
mov
shll
shrb
lret
dec
jmp
add
divb
js
test
aaa
aaa
rolb
jno
jnp
fisubl
mov
popf
mov
insl
pop
jmp
lds
mov
inc
mov
mov
dec
adc
ret
mov
test
test
pop
mov
lods
dec
orl
cmovs
mov
iret
mov
xchg
push
push
jne,pt
or
add
int3
adc
xor
sub
and
sub
mov
jae
cltd
or
fimuls
ss
scas
push
pop
jbe
xchg
jmp
lcall
pop
jl
aas
rcrl
jmp
loop
jbe
fdiv
push
and
xchg
ds
pop
and
pop
int
popa
leave
outsl
xor
ror
cvtps2pi
xor
push
sbb
cmpsb
insb
xor
push
pusha
sbb
jns
xchg
lds
lret
adc
dec
inc
xchg
test
mov
mov
or
jmp
inc
hlt
mov
cmp
mov
pop
xlat
add
xchg
jmp
mov
add
cmp
cmc
cmpsb
ret
mov
xchg
insl
push
sbb
mov
testl
outsl
xchg
add
scas
adc
insb
xchg
xor
inc
movsb
fisttpl
mov
hlt
mov
and
cmpsb
loop
mov
mov
leave
inc
out
adc
out
adc
mov
lret
or
jp
push
hlt
add
test
mov
stc
out
adc
popa
cmp
fistpl
adc
bound
in
cs
jae
into
mov
or
in
shrl
lahf
sahf
xor
and
dec
mov
cmp
adc
push
sbb
jmp
rorl
fstpl
cmpsl
inc
sbb
lods
push
cld
sub
inc
jecxz
mov
jmp
sbb
xchg
ret
and
sub
and
dec
lret
movsl
mov
mov
mov
mov
daa
icebp
add
mov
sub
cmp
or
or
jae
push
sbb
lcall
cli
clc
or
js
rcr
mov
sbb
loop
sub
fnclex
roll
fildl
jle
fstps
test
int3
push
mov
mov
lods
inc
insl
loope
test
sbb
jecxz
sbbl
push
sub
ret
bound
sub
lret
push
or
mov
inc
mov
sbb
xchg
cmc
dec
pop
scas
mov
mov
mov
xchg
mov
inc
icebp
sti
fsts
mov
fwait
cld
in
imul
mov
sub
out
inc
movsl
mov
push
add
sbb
fwait
repz
or
sbb
or
mov
out
and
dec
mov
imul
jae
movsl
mov
jnp
test
leave
aam
jbe
jmp
mov
sbb
es
mov
test
push
cmpsb
mov
js
movsb
jmp
data16
mov
outsl
add
dec
mov
aas
mov
jbe
mov
lock
movsb
das
iret
xchg
out
arpl
dec
sub
popf
and
and
cmp
imul
out
dec
aad
mov
popf
or
cs
mov
push
add
imul
or
cli
in
xchg
pop
jo
xorb
xlat
jnp
sbb
aad
mov
sbbb
sbb
inc
mov
shlb
mov
add
fisttps
into
cmpsb
xor
fcomi
xchg
jle
mov
mov
inc
daa
sbb
das
fisubrs
push
nop
push
xor
repnz
fwait
dec
mov
xor
jmp
sbb
push
add
cmp
jae
repnz
popf
ss
jno
aas
mov
hlt
xchg
and
data16
nop
fwait
push
cmpsl
aas
mov
fdivl
jp
inc
mov
pop
xor
push
pop
sub
cmpsb
stos
lods
enter
push
and
pushf
cmp
mov
push
cmp
xchg
adc
add
push
test
pop
sub
arpl
jmp
mov
mov
in
mov
cli
mov
clc
repnz
cmp
into
jmp
nop
inc
sbb
fs
aas
mov
addr16
adc
lods
repz
or
mov
orl
dec
xchg
push
push
sbb
ja
test
daa
xor
and
pop
add
push
jmp
inc
lods
int3
scas
ss
adc
cmp
cmpsl
and
and
stc
mov
mov
pop
popa
movsl
cmpsb
test
pop
cmpsl
push
lahf
jmp
jo
jno
ss
ljmp
xchg
mov
fisttpl
jle
dec
inc
xlat
sub
xchg
sbb
and
dec
pop
pop
mov
push
push
fsub
jle
ja
jmp
frstor
pop
addl
pop
mov
lret
imulb
cmp
add
fstl
int3
pop
adc
inc
sbb
push
ret
push
mov
inc
jmp
inc
inc
cli
loop
lods
pop
mov
xchg
xchg
jge
sub
pop
inc
xchg
add
mov
mov
or
sbb
cwtl
mov
push
popf
mov
jmp
jne
mov
inc
mov
sub
mov
mov
cwtl
icebp
pushf
jmp
loop
adc
dec
xchg
ds
mov
xor
mov
fisubrs
dec
dec
or
sub
lods
hlt
aaa
icebp
mov
dec
daa
and
push
mov
add
push
inc
cmpsb
adc
sub
xor
das
mov
xor
imul
pop
jmp
and
lock
aam
mov
push
and
arpl
popa
hlt
mov
in
adc
fmull
pop
mov
add
popf
stc
and
icebp
sub
sub
or
dec
insl
mov
push
xchg
loopne
adc
pop
xor
pop
or
mov
inc
test
les
inc
xor
add
fisubrl
pop
cmpsl
enter
arpl
push
xor
jmp
inc
in
loope
loop
pop
and
mov
mov
inc
lods
mov
movsl
xor
fisubs
mov
push
mov
inc
test
ss
les
decb
sbb
data16
jmp
mov
rcrl
mov
xchg
and
push
lret
cli
mov
cmp
stc
aad
cs
push
jnp
pop
mov
outsl
xor
popa
adc
adc
sub
xchg
sub
not
aam
mov
push
pop
loop
hlt
cmp
fimuls
inc
rorl
push
mov
inc
mov
data16
fimull
lods
xor
cltd
cmpb
xor
jbe
lods
inc
and
testb
mov
or
stos
mov
xchg
xchg
popf
lret
inc
mov
mov
and
hlt
push
pop
aam
cmp
mov
out
inc
aad
jg
ficomps
mov
test
xor
mov
sub
xchg
fwait
sub
icebp
mov
into
stos
test
and
or
dec
lea
scas
enter
jo
jecxz
test
jg
xor
sahf
popf
jnp
shlb
xchg
pop
das
mov
sbb
shll
out
int
es
xchg
aaa
xor
movsl
jno
pop
cltd
arpl
js
insb
subb
jbe
gs
movsb
sub
sub
sahf
or
or
rcr
mov
jne
dec
hlt
adc
int
dec
xchg
mov
sarl
push
mov
cltd
inc
pop
jl
adc
pop
add
inc
ja
stos
in
test
inc
mov
out
mov
mov
cwtl
roll
mov
and
movsl
jl
cs
ret
les
and
mov
cli
mov
sahf
out
mov
or
add
jnp
in
or
cvtdq2ps
es
ds
sti
pop
inc
or
pop
roll
jo
dec
adc
mov
sub
aam
mov
lcall
gs
enter
mov
fs
cmpsb
push
scas
xor
sbb
xchg
jp
add
dec
cld
inc
pop
scas
jl
xchg
pop
jbe
shll
leave
sub
daa
sub
xchg
aad
mov
mov
out
sbb
push
xchg
pop
lods
shrl
pop
fbld
mov
pop
bound
pop
enter
cmpsb
test
cli
pop
xchg
aas
ja
xor
inc
pop
and
or
sbb
jmp
mov
leave
sbb
fldenv
push
in
or
leave
push
pop
imul
adc
pop
outsb
mov
jbe
pop
and
and
and
push
icebp
inc
out
shrl
sbb
sbb
push
frstor
add
mov
jmp
push
fwait
sbb
cld
repnz
mov
pop
push
in
jo
sub
shr
or
mov
xchg
fldcw
mov
scas
dec
sbb
lock
inc
push
jg
mov
lds
mov
and
fmuls
mov
out
les
xchg
mov
stos
lock
enter
and
add
ja
xchg
into
rcrb
push
pop
xchg
or
cmp
insb
mov
lods
jno
xchg
divl
shll
lret
leave
and
out
mov
stos
xor
jge
jnp
jne
hlt
test
cmpsb
sub
xchg
notl
scas
ret
xchg
or
das
lret
xchg
out
inc
push
pusha
pop
lea
and
xchg
jns
aas
jbe
ss
test
cmp
xor
add
push
sti
cmpl
pusha
fmulp
and
sbb
jmp
lods
mov
or
cwtl
xor
std
push
jae
cmpb
leave
push
or
sbb
sub
rcl
mov
pop
lret
test
imul
inc
in
jmp
push
and
insb
fwait
mov
adc
movsl
faddl
and
xchg
cmpsl
loope
cmp
stos
mov
leave
pop
pop
arpl
mov
xor
int3
aaa
mov
cmp
xchg
je
cmp
xor
test
cmp
iret
cmp
sub
sub
sbb
mov
xchg
xchg
dec
mov
and
mov
stc
push
and
mull
fwait
mov
es
popf
jmp
sub
stos
pusha
out
ficompl
out
pusha
push
outsb
pop
adc
mov
xor
pop
sub
movl
in
jg
mov
sti
inc
pop
pop
inc
jmp
test
mov
sahf
adc
std
adc
mov
jmp
and
sbb
or
mov
xor
out
adc
add
jb
fmulp
ljmp
add
xchg
xlat
push
call
mov
cmp
cmp
pop
mov
mov
add
xor
xor
sahf
shl
jl
and
frstor
pop
xchg
in
add
mov
fisttpl
sub
mov
add
mov
in
mov
insl
repnz
je
popf
cmpl
fstpl
mov
cmp
adc
jle
dec
outsb
addl
cmp
sbb
sub
pop
xor
mov
dec
mov
fs
inc
int
stc
movsl
idivl
add
xchg
stc
xchg
into
and
cld
lret
mov
aad
adc
inc
icebp
mov
roll
jmp
iret
shrl
es
sti
xor
xchg
fbstp
sbb
jp
mov
inc
adcl
adc
mov
outsl
push
jae
popa
pop
xchg
xchg
fwait
mov
sbb
in
xor
sbb
enter
mov
adcl
fsubl
insl
cltd
outsl
push
outsb
stos
xchg
xchg
icebp
push
test
lret
pop
cmp
dec
add
rcrb
out
xor
push
cvtpi2ps
or
dec
inc
adc
jne
test
int3
or
pusha
test
mov
xor
pop
mov
pop
sbb
lods
mov
movsb
add
jmp
cmpsb
mov
adc
in
jmp
les
adc
add
and
outsl
jno
xchg
mov
cld
adc
lcall
mov
dec
sub
add
jns
cltd
cmp
lret
or
jecxz
mov
pop
addl
xchg
cmp
rcl
out
andl
mov
notl
in
ss
jns
mov
xchg
fsubrl
test
lods
adc
and
ja
imul
loopne
rcll
and
in
mov
jae
sub
mov
rcrl
arpl
mov
movsb
cmp
leave
push
xchg
es
inc
imul
lret
sub
test
iret
jae
mov
pop
mov
pop
jmp
xchg
outsl
movl
insb
mov
jl
testb
inc
pop
pop
mov
stos
out
out
and
test
addb
mov
ficomps
push
mov
jae
cli
sti
frstor
sarb
es
stos
xchg
mov
sub
lea
out
adc
or
mov
pop
xor
sbb
mov
xchg
dec
adc
sub
out
loopne
mov
lcall
jmp
xchg
bound
lock
inc
das
cmp
mov
in
xor
jp
push
mulb
xchg
imul
es
lods
subl
in
mov
hlt
push
mov
mov
push
int
rol
fsubrs
cmpsl
xchg
mov
jae
ret
orl
jne
stos
mov
sub
mov
mulb
dec
xchg
jne
mov
dec
push
mov
sub
sbbb
cltd
movsl
shll
es
xchg
sar
pop
adc
aam
add
push
movsl
xchg
mov
mov
xchg
jbe
xlat
out
call
loopne
loop
ss
adc
mov
xchg
fldcw
mov
popf
mov
cmp
dec
int3
dec
mov
movl
insl
inc
sbb
or
mov
dec
out
popa
std
test
fistps
xchg
push
ds
std
data16
push
shlb
mov
inc
repz
out
pop
cmp
popa
stos
icebp
dec
divl
stc
dec
push
movsl
sbb
cmpsl
sub
lea
lock
mov
xchg
mov
push
mov
xchg
jmp
jo
dec
add
iret
xchg
aaa
cmp
push
pop
cltd
push
cs
mov
repnz
outsb
icebp
cld
aam
addr16
pushf
lods
inc
cwtl
dec
fnstenv
and
mov
xchg
sahf
jae
adc
cmp
push
insb
jecxz
test
mov
fwait
lret
pop
les
cmc
add
out
mov
es
mov
out
inc
js
mov
fucomi
mov
xlat
ret
imul
push
sbb
repz
xchg
leave
jae
out
pop
mov
push
push
jne
cmp
xlat
mov
mov
mov
fcompl
xchg
inc
mov
sbb
aaa
mov
xchg
add
sub
mov
repnz
popf
scas
iret
sub
test
fwait
loop
dec
xchg
lods
loope
insl
popf
shlb
xlat
dec
ja
dec
stos
popw
mov
sarb
mov
popf
pusha
mov
pop
inc
or
gs
lds
negb
sbb
push
insb
inc
imul
int3
call
mov
jmp
cmp
inc
push
nop
and
adc
push
leave
xorl
popf
xor
cmp
into
test
cmpsl
outsb
cmpsl
mov
xchg
ja
divb
pushf
sbb
pop
mov
jno
mov
cwtl
in
xor
inc
sbb
mov
mov
ja
sbb
add
fld
push
aad
cmp
daa
mov
out
hlt
aaa
xchg
sub
pop
and
mov
cmpsb
aaa
push
pop
mov
nop
test
mov
pop
xchg
clc
mov
mov
add
loop
hlt
mov
mov
ljmp
pop
mov
loop
aam
inc
cmp
xor
aam
cmp
stc
test
dec
jl
mov
push
mov
iret
inc
mov
stos
dec
fwait
cmp
mov
mov
lods
sti
add
popa
std
xor
xchg
popa
sahf
fwait
add
cmp
out
sahf
inc
inc
inc
aad
and
jl
pop
xorb
and
xchg
adc
lods
adc
scas
or
push
fisubrl
stos
out
jno
xchg
mov
inc
aaa
mov
mov
mov
shll
aam
mov
popa
movsb
fwait
jecxz
mov
es
sub
shrb
sub
mov
adc
dec
es
lods
stc
or
sbb
mov
xor
aas
dec
xor
mov
xchg
jge
inc
addl
mov
push
mov
lea
scas
sub
and
xchg
mov
mov
jnp
popa
and
pop
in
ret
mov
pop
jg
jae
aaa
inc
int3
lret
out
jb
add
pop
xor
and
mov
cltd
sti
sbb
add
lods
sbb
mov
ucomiss
subb
in
into
fwait
lret
ljmp
iret
into
int3
std
les
pop
enter
sti
sub
les
popf
inc
jnp
fcomps
stos
pop
bound
cli
add
mov
mov
ds
sub
pushf
mov
mov
pop
push
aas
es
test
pushw
sbbl
add
xchg
inc
or
fldenv
add
inc
pop
out
aas
jbe
incl
mov
adc
arpl
mov
jbe
cld
jp
popf
adc
mov
xor
subl
cmp
xor
lcall
xor
pop
daa
out
or
out
add
mov
and
idivl
sub
mov
fsubrl
xor
push
aam
mov
lods
and
rcll
adc
mov
sti
sahf
mov
lds
xchg
jle
mov
push
pop
in
fstps
and
jecxz
jg
inc
test
or
mov
jl
incl
and
gs
mov
fnstcw
add
push
mov
or
mov
dec
iret
pop
cmp
push
fsubr
das
mov
loop
jl
shrl
imul
popf
stc
inc
cs
xchg
xchg
cmp
jae
cmc
int
mov
xor
jae
pushl
fdivs
int
aaa
pop
cmpsb
into
aas
mov
xchg
xorb
mov
stos
daa
jge
test
or
pop
push
pop
dec
lret
adc
aad
dec
nop
sub
dec
icebp
and
mov
in
cs
jecxz
outsb
add
pop
push
push
adc
xlat
and
mov
into
fstpt
sbb
pop
push
push
cltd
xlat
add
repnz
and
push
dec
fsubl
jno
cmp
mov
lock
in
xchg
mov
xchg
lcall
mov
cmpsl
xchg
popa
mov
nop
sti
xchg
mov
mov
mov
add
shl
pop
bound
or
lea
repnz
push
les
fistpll
fidivrl
sub
mov
cwtl
fsts
cltd
pop
xchg
filds
adc
xchg
popa
or
cs
loopne
jne
and
insl
cmp
push
mov
pop
mov
sbb
mov
mov
ljmp
sbb
int
inc
fucomip
xchg
mov
rcr
daa
add
dec
add
push
xchg
fnop
cli
pusha
mov
jl
divl
jae
movsb
push
and
orl
sbb
mov
mov
imul
rcll
cs
mov
mov
mov
adcb
and
ret
cmp
mov
das
roll
mov
xchg
pop
stc
inc
cmp
push
inc
mov
in
jmp
pop
pop
dec
mov
or
addb
ret
lds
xchg
add
les
test
dec
enter
sbb
movsl
aam
mov
repz
rcrl
cmp
nop
gs
xor
pop
and
inc
mov
mov
pop
lods
jecxz
test
gs
add
mov
jno
dec
jae
in
test
int
stos
sub
sub
pop
mov
test
inc
call
xor
idivl
js
dec
inc
lods
mov
mov
and
push
shll
cs
mov
inc
movsl
dec
das
lods
loop
mov
lea
and
mov
jmp
adc
add
jge
data16
jl,pn
gs
adc
cmpsb
mov
popa
lods
roll
mov
inc
out
sar
int3
roll
lahf
negl
jb
popa
add
loope
sbb
std
cmp
cmp
ljmp
insb
xlat
aas
pop
jmp
clc
mov
sbb
sub
mov
lods
movq
xor
or
ficoms
mov
sahf
jo,pn
inc
aam
xchg
aaa
cld
outsl
mov
fucomip
daa
les
jno
stc
aam
mov
inc
je
xchg
add
jne
add
xlat
and
sahf
mov
arpl
push
es
data16
aaa
imul
nop
mov
push
testl
andl
mov
xor
mov
push
sub
pop
ficoml
lods
movsl
add
in
pop
rcrb
test
jl
add
imul
xor
and
inc
das
mov
mov
nop
add
lcall
xchg
repz
aad
pop
cltd
jbe
inc
cmpsb
push
sahf
add
test
push
out
lds
inc
xor
stc
loop
jo
add
pop
test
lcall
dec
loope
loop
jns
test
movsl
test
jl
mov
ljmp
and
mov
loope
sub
inc
mov
inc
jne
add
push
xchg
dec
mov
pop
inc
adc
push
mov
into
cmp
jmp
std
xchg
repnz
aaa
stos
pop
and
sti
xchg
pop
mov
adc
mov
sub
xchg
sub
negb
mov
xor
sub
xor
fcoml
imul
shl
mov
cmc
les
jl
sahf
jae
xchg
addl
or
xlat
mov
mov
scas
cmp
xchg
xchg
mov
mov
fcompl
es
mov
xor
cld
shll
outsb
leave
cmpsl
aam
in
jbe
add
mov
sbb
repz
jbe
mov
dec
mov
cli
cmp
out
adcl
mov
mov
dec
push
push
mov
mov
scas
jae
mov
fcompl
jns
int3
sub
pop
mov
pop
loopne
cli
shl
loop
jae
jne
cmpsl
ss
cmp
mov
cmpsl
add
fcmovnu
sar
adc
mov
inc
inc
or
xchg
mov
adc
mov
imul
test
mov
sub
mov
pusha
jno
int3
xchg
js
insb
leave
or
pop
adc
and
inc
xchg
shlb
push
adc
jae
cwtl
out
mov
or
jmp
and
mov
inc
mov
stos
xchg
sbb
enter
scas
movsb
test
jle
cli
das
dec
js
xchg
and
sub
jge
mov
mov
pop
mov
and
fnstsw
popf
jg
enter
push
js
lock
scas
sbb
add
cli
shrl
mov
pop
xchg
fidivrs
push
mov
xchg
sbb
clc
mov
xor
addb
jns
es
int
sub
cmpsb
cwtl
push
adcb
pop
mov
in
jg
mov
mov
in
shl
in
fidivl
scas
repnz
push
loop
sub
xor
adc
and
addr16
xchg
push
pop
jmp
rorl
imul
out
je
leave
in
insl
cmpsl
test
mov
xchg
cmpsl
enter
sbb
mov
xchg
push
mov
mov
sub
inc
xchg
adc
mov
insb
sti
lret
int3
inc
xor
call
cmc
xchg
jo
out
cmpsl
sub
movsb
mov
mov
sub
ret
fadd
push
gs
pop
aaa
cmp
sub
aad
push
test
pop
jne
aaa
mov
insl
nop
dec
jl
ss
es
cmpsl
pop
add
push
leave
jnp
pop
movsb
mov
adc
and
iret
aas
push
ds
dec
cltd
rcrb
dec
xchg
adcl
js
mov
imul
cltd
loopne
xchg
ja
fistpll
adc
mov
pop
and
cwtl
jo
push
xor
adc
les
cmpsb
or
sbb
mov
daa
sub
out
scas
push
cmpsb
dec
jecxz
mov
in
push
daa
dec
jmp
lcall
jne
ds
mov
xor
mov
jae
push
loopne
cmpsl
ret
cmpsb
push
mov
pop
shrb
and
xor
and
movsl
xor
cmp
mov
pop
cmpsb
push
lcall
mov
pop
xor
sub
mov
xor
jmp
scas
cmp
pop
xor
lahf
mov
xchg
fmuls
pop
and
jns
sahf
ljmp
xor
lods
sub
sbb
jge
das
stc
and
mov
shl
or
adc
pusha
jl
push
cmpl
mov
xchg
xchg
fdivrl
ficompl
xchg
in
js
pop
mov
and
and
mov
xchg
stc
movsb
xchg
mov
fwait
push
js
loopne
lock
mov
fsubs
sub
dec
lret
sub
mov
push
xor
scas
jne
xchg
insl
loope
enter
leave
int
and
aad
std
rolb
jae
fbld
mov
sbb
jg
dec
outsb
test
mov
cmp
ja,pt
daa
inc
adc
fdivl
test
enter
xchg
mov
xor
sub
enter
mov
sub
jo
xchg
mov
es
mov
mov
xor
inc
mov
push
mov
jnp
dec
xor
push
cmp
cmp
jmp
idivl
int
mov
mov
decb
sbb
loope
push
stos
sub
mov
leave
data16
pop
out
mov
add
in
mov
jbe
sbb
adc
pop
mov
dec
xchg
stos
loopne
stc
push
popaw
dec
inc
fsubrl
mov
andb
mov
xchg
sub
data16
outsb
push
lret
lods
pop
lods
aaa
sbbb
xor
ja
xchg
mov
dec
and
xchg
into
adc
addl
out
mov
jae
scas
ss
dec
cmp
push
inc
cwtl
jecxz
ja
mov
movsb
outsl
fsubl
xor
sbb
and
dec
pop
and
mov
push
mov
inc
jns
loopne
cmpsb
dec
jns
push
push
push
pop
inc
push
mov
loope
xchg
fsubr
repnz
push
jb
mov
loop
jne
adcb
fwait
or
std
ja
lret
popf
or
cmpsl
xor
fsubrl
and
mov
mov
ret
jne
push
test
outsb
lods
xor
or
mov
stos
pop
push
sub
orb
imul
fwait
and
fists
sub
mov
aad
pushf
xor
inc
stos
xchg
cmpsl
dec
or
mov
sti
mov
jecxz
jmp
dec
lcall
mov
jl,pn
jne
data16
stos
shll
lods
imul
jg
testb
test
imulb
popa
add
roll
es
test
jle
mov
pop
adc
bound
sarl
inc
sub
pop
mov
dec
add
mov
pop
add
out
pop
mov
sub
dec
cmpsl
mov
outsl
jg
leave
hlt
xchg
popa
in
sub
jb
into
adc
loope
mov
jp
add
ja
mov
es
cmpsl
arpl
out
enter
pop
imul
loop
inc
mov
push
or
roll
pusha
xchg
jnp
cmpsl
sbb
pop
test
and
js
test
es
cmpl
mov
mov
sar
in
mov
mov
inc
jno
neg
cmpsb
or
or
adc
cmc
mov
loopne
sub
inc
test
out
rorb
jae
data16
sub
push
rcl
xor
mov
inc
mov
xchg
xor
mov
sub
cli
sbb
lea
popa
xchg
inc
ds
stos
es
aaa
dec
jbe
orl
cs
mov
sub
out
cli
xchg
cltd
sbb
or
xchg
pushf
shrl
cmpsl
mov
pop
mov
xor
dec
sarb
sbb
sbb
sbb
xchg
sub
mov
xchg
pop
jne
testb
scas
or
pop
mov
fbld
or
ljmp
sub
cmp
rcrb
push
aad
cld
test
adc
sbb
ljmp
sub
xchg
sub
rcrb
ss
push
pusha
mov
hlt
aaa
sub
jp
xchg
dec
lock
adc
aas
inc
mov
dec
bound
cmp
movsl
test
jg
int
xlat
add
jae
xchg
inc
pop
out
repz
stc
adc
in
xchg
andb
into
movsl
lcall
cmp
imul
popa
push
cmc
test
xor
mov
xchg
mov
inc
sub
pop
aam
rorb
into
in
and
cs
es
scas
dec
adc
push
jl
push
and
mov
mov
and
cmpsb
cmc
leave
lret
mov
or
or
clc
js
ds
mov
cmp
cltd
sbb
jno
pop
sarl
test
pop
js
pop
rorl
ss
dec
scas
mov
je
nop
fdivs
mov
xlat
mov
pop
outsb
in
or
dec
fidivrs
and
sub
dec
inc
sub
dec
rorl
xor
push
in
add
lds
push
test
push
mov
jae
pop
mov
cmp
dec
jbe
shrl
insb
jb
stos
mov
stc
repz
aas
mov
test
stos
nop
sub
repz
aad
int3
add
push
out
into
mov
ljmp
inc
es
fnstcw
sbb
adc
mov
xor
gs
xchg
sbb
xchg
mov
push
fidivs
loopne
popa
lcall
ds
mov
popf
ffreep
and
add
xchg
clc
adc
sbb
jbe
and
mov
adc
test
or
xchg
jmp
jl
pusha
jp
icebp
or
sbbl
sar
call
loop
sahf
cmpsl
adc
sub
ds
lock
add
push
inc
leave
sub
test
mov
jno
and
stos
mov
cmpsl
into
sbb
inc
int3
inc
mov
les
mov
stc
dec
jo
fistpl
mov
lea
sub
lret
mov
bnd
insb
mov
je
mov
adc
inc
push
movsb
sbb
cmp
popa
cmp
cs
popa
test
jb
sub
hlt
mov
ss
mov
rcrl
ret
push
mov
rcll
stos
mov
imul
shl
mov
in
xchg
mov
mov
sbb
xchg
ss
pop
xchg
out
sbb
xchg
aad
dec
cmpsl
test
mov
sbb
jmp
add
dec
int3
dec
das
ja
mov
push
push
and
xchg
cli
and
cmp
mov
pop
mov
or
loop
mov
mov
fwait
loop
jp
jbe
mov
ljmp
push
xchg
xchg
ret
lret
int3
cwtl
mov
push
mov
sbb
sbb
loop
loop
lret
cmpsl
test
xor
adc
cs
dec
lret
jns
out
loop
mov
push
stos
mov
and
clc
xchg
jne
sub
jg
fs
lds
dec
or
test
sub
mov
ss
push
dec
pop
add
ja
fcompl
dec
push
fldcw
fcmovnu
int3
in
pop
xchg
push
adc
xchg
rcll
xor
insl
cmp
mov
popf
and
pop
cmp
pop
push
sub
add
dec
jnp
or
xor
mov
adc
out
push
inc
decb
pushf
cmp
gs
push
in
lret
leave
mov
jge
and
insl
xlat
je
mov
mov
jge
int3
das
movsb
push
dec
cmpsb
in
dec
mov
int3
movsl
mov
adc
shrl
loopne
pusha
frstor
std
in
mov
inc
fs
add
mov
lds
fcomps
cmp
ss
or
je
push
faddl
pushf
inc
mov
adc
ja
loop
sub
int3
mov
lods
test
in
mov
outsb
mov
cltd
and
inc
fistl
jbe
mov
movsb
out
in
insb
jo
mov
jne
in
mov
data16
insb
xchg
jae
xor
fs
icebp
in
jge
imul
shrl
rclb
fwait
ret
into
movsl
xor
imul
aam
je
not
adc
adc
cs
fwait
movsb
into
leave
jmp
sbb
push
push
js
mov
arpl
push
sub
add
fucomi
pop
cltd
mov
mov
mov
jge
adc
int3
iret
aas
popa
jne
xlat
rcll
mov
testb
insb
lret
cmp
adc
stos
inc
adc
pop
mov
jge
cmp
shll
mov
dec
aas
outsl
pop
mov
loop
sub
fnstenv
mov
pop
loopne
fnsave
subb
push
lret
dec
mov
cltd
sarl
cmp
cmp
in
test
cwtl
andl
add
xor
arpl
shlb
inc
fldl
xor
jne
test
fxtract
adc
divb
xchg
push
pop
stos
jmp
mov
inc
test
and
dec
push
bound
aad
nop
les
push
daa
push
jp
std
xor
jae
rorl
sbb
movsb
mov
xor
push
mov
jmp
divl
inc
mov
mov
mov
shl
push
nop
mov
idivl
jno
mov
push
cmpsb
loop
pop
cmp
test
and
pop
jg
repnz
subl
ret
ss
popa
mov
pop
inc
ror
pop
call
dec
add
xor
push
stos
mov
push
sub
fs
mov
mov
iret
fdivr
cli
push
fbld
jne
cltd
inc
mov
xchg
xchg
lds
ja
sti
fistpl
and
cmp
andl
and
jg
push
mov
popa
xchg
xchg
movsb
lret
repnz
stc
pop
ret
fsubrs
hlt
call
inc
mov
loop
jns
out
push
xchg
cmp
sbb
movsb
push
cmp
xchg
xlat
and
stos
jae
lods
sti
pushf
jb
nop
inc
xchg
popa
push
add
hlt
mov
add
rcr
xor
int
loopne
mov
pop
mov
addr16
mov
add
push
stos
aam
faddl
fistl
dec
push
or
cmp
xor
in
xchg
and
ss
data16
dec
push
in
test
sbb
mov
xchg
int
rorl
repz
mov
dec
inc
push
mov
divb
mov
cmc
and
mov
adc
or
xchg
popf
cs
outsb
cmp
loop
leave
jae
sub
pop
add
mov
dec
nop
cmp
push
add
xchg
inc
mov
bound
les
repnz
orl
dec
cmp
lods
push
add
insl
jl
adc
lcall
lret
and
adc
aaa
jns
sbb
xor
in
add
outsl
mov
ljmp
xchg
test
into
push
or
dec
mov
cs
sti
mov
push
out
mov
mov
jmp
jmp
adc
test
outsl
mov
js
sbb
pop
js
das
cltd
push
cmpsb
add
jg
in
imul
inc
mov
mov
fsubrs
sub
mov
test
xor
lea
sti
fldenv
push
sbb
dec
add
out
add
pop
dec
repnz
outsb
mov
mov
das
js
mov
sbb
stc
repz
inc
and
loopne
cld
data16
pop
and
movsb
jbe
sti
or
sbb
insb
lret
xchg
shrl
mov
imul
insl
or
mov
mov
into
and
xchg
in
and
shrl
fmul
mov
test
or
or
insl
add
inc
imul
sbb
dec
ret
fimuls
xchg
sub
push
clc
sub
fadds
test
add
adc
js
adc
shll
push
fisttpl
push
lret
mov
nop
jns
jb
xor
add
test
dec
jae
mov
fcmovbe
and
and
xchg
mov
push
push
mov
jmp
out
add
dec
xlat
sarl
test
dec
idivl
cmpsb
mov
inc
test
push
fcomi
push
icebp
movsb
xchg
add
pop
xchg
gs
jae
aaa
mov
lret
ret
lret
pop
mov
outsl
sub
leave
scas
dec
shrb
fnstsw
je
push
adc
rcrl
jg
fadds
or
rcrl
add
stos
loop
mov
adcb
inc
push
xor
push
sbb
and
cltd
fstpt
mov
addr16
mov
test
int3
or
shr
jecxz
aaa
js
daa
fwait
xchg
mov
push
stos
xchg
and
mov
or
dec
les
push
movsb
add
jbe
xchg
or
pop
icebp
xor
fwait
xchg
stos
inc
adc
xchg
push
mov
add
test
lret
nop
adc
and
orl
sbb
insl
das
lret
or
divl
rorl
sbb
mov
dec
mov
sub
sub
loop
int3
mov
mov
mov
cmc
fbld
lret
and
xchg
add
add
data16
nop
mov
scas
mov
or
lret
sahf
outsb
dec
shrb
xor
xchg
mov
pop
dec
push
iret
js
sbb
rcl
mov
xchg
das
rcr
loop
test
jecxz
outsb
pusha
je
add
js
sub
cltd
mov
cli
jbe
stos
dec
cmp
lret
sbb
in
hlt
or
pop
mov
movsb
pop
xchg
inc
fisubl
sti
fpatan
or
leave
mov
cmpsl
pop
lcall
imul
jg
mov
push
adc
fwait
mov
int3
negl
jne
jp
push
mov
sahf
popf
mov
rcrb
cwtl
int3
sub
push
mov
xchg
mov
push
cltd
dec
lock
sub
scas
lods
xor
enter
cmp
xchg
inc
sbb
gs
jp
mov
inc
lret
cli
fdivs
mov
mov
orl
test
cld
lret
jg
mov
loopne
xchg
cmp
sarl
dec
jg
int
xchg
sbb
jl
push
adc
insl
and
es
cli
mov
fnstenv
sub
cmp
movsl
lret
mov
roll
iret
pop
and
push
sarl
pop
cli
cmpl
mov
mov
and
notb
inc
inc
fldenv
cmp
shrl
sub
pushf
or
or
xchg
adc
push
mov
das
mov
scas
jae
adc
xchg
sahf
scas
jmp
dec
repz
and
bound
jne
pop
daa
sahf
sbb
cli
jmp
xchg
mov
mov
mov
fwait
xchg
subl
inc
xchg
clc
mov
int3
jo
out
pop
xchg
dec
je
lea
les
test
mov
lea
arpl
or
ljmp
mov
loope
stos
and
cs
in
push
lods
iret
or
pop
push
cltd
push
dec
stos
fnstsw
or
push
lds
and
xchg
repz
inc
jo
loopne
push
repz
cmp
mov
mov
and
aaa
adcl
xchg
push
ja
idiv
iret
mov
cmpsb
xchg
cld
push
or
out
xchg
jmp
xor
xchg
or
addr16
xchg
int
cmp
sahf
pop
jecxz
sbb
dec
ror
xchg
and
mov
mov
outsl
cltd
cmovge
mov
call
mov
mulb
jmp
hlt
cmp
addr16
mov
fstpt
pop
xchg
push
push
xor
or
sbb
lods
xor
popf
xchg
xor
ljmp
pop
xor
rcll
imul
jb
push
pop
in
pop
repnz
jo
xchg
idivl
mov
jmp
mov
inc
es
in
in
sbb
push
and
and
add
sbb
sti
cmp
mov
jmp
dec
mov
repnz
mov
aam
iret
outsb
rorl
or
testb
mov
xchg
and
scas
inc
inc
dec
mov
adc
mov
sub
mov
sarl
movsl
mov
fnstcw
push
mov
push
dec
and
add
push
fnstenv
adc
repnz
mov
jae
push
jle
loop
push
sub
sbb
sub
inc
adc
bound
daa
mov
and
xchg
push
mov
xor
xchg
sahf
ja
dec
stos
mov
mov
test
pop
cmp
int
loop
iret
inc
push
popa
int3
mov
xor
add
pop
leave
lods
xchg
insb
mov
mov
inc
jg
mov
lods
adc
xchg
and
arpl
mov
sub
ret
aas
je
stc
xchg
add
inc
mov
test
sbb
push
pop
mov
out
mov
cmc
cltd
xor
xlat
mov
insl
xor
push
cmp
repz
ret
mov
cltd
xchg
cmc
xchg
and
add
loopne
jmp
push
cltd
loopne,pn
adc
shlb
hlt
cltd
jmp
bt
mov
lea
hlt
jns
test
sbb
ja
outsl
mov
aaa
mov
lock
scas
ret
dec
xor
xchg
inc
jecxz
frstor
xchg
cmp
jae
in
in
in
loope
outsl
pushl
outsb
or
sub
xor
insb
mov
jmp
mov
or
pop
sub
ja
enter
test
push
cmp
jl
dec
shll
xlat
shlb
pop
mov
lcall
sbb
movsl
sub
shrl
lods
stos
dec
ljmp
andl
iret
mov
jo
mov
pop
mov
cli
loop
or
pop
sbb
stos
sbb
mov
in
icebp
inc
into
lcall
mov
jb
xchg
mov
jmp
jae
ficoms
xchg
inc
jle
shll
push
inc
loopne
cmpsl
insb
or
sub
cmp
rolb
and
ljmp
lods
test
mov
pop
jne
inc
lahf
ja
in
jl
push
out
loopne
sub
ds
aad
jmp
pop
fwait
in
dec
iret
or
mov
jb
mov
sahf
adc
outsb
add
inc
inc
mov
xchg
ror
daa
sbb
cwtl
frndint
xor
sbb
push
loop
add
adc
arpl
adc
mov
and
xor
cmp
mov
pop
pop
pop
jecxz
pop
pop
mov
xchg
pop
loopne
icebp
icebp
sbb
scas
cmp
mov
jae
int3
ja
or
pop
loopne
pop
xchg
fdivl
clc
imull
adc
xor
sbb
ljmp
and
arpl
jl
leave
loope
out
sbb
xchg
push
rcr
pop
test
gs
out
mov
je
shrl
pop
leave
cmp
adc
and
cs
push
outsl
adc
sbb
sub
pop
xor
int
movsb
nop
pop
test
ret
adc
push
jmp
popf
sbb
cmp
xchg
pop
fadds
jo
push
mov
jne
dec
mov
and
cmpsb
repz
jno
loop
jae
dec
sub
xor
sbbl
cmp
jo
sahf
push
and
inc
nop
call
jge
gs
lods
mov
xchg
pop
sbb
mull
xchg
shlb
loope
sub
xchg
mov
xchg
bound
sbb
cmp
shrb
and
xchg
xor
jmp
insl
mov
push
es
sarl
mov
fistl
out
adc
data16
mov
push
and
addb
sub
rorl
enter
ljmp
mov
adc
test
shll
mov
notb
fdivl
adcl
es
popf
addr16
add
adc
nop
pushf
imul
adc
ret
ret
out
xchg
movsb
cs
int
mov
das
inc
xchg
inc
repnz
jnp
popf
rolb
pop
add
mov
push
shrl
mov
jae
cmp
insl
mov
mov
into
or
mov
push
fsubrp
xchg
mov
push
pop
xchg
cmp
and
cmp
jae
and
test
lret
int
jl
icebp
xchg
mov
xor
or
fwait
mov
roll
pop
cmpsl
mov
xor
cld
inc
adc
out
js
cwtl
xorb
testb
mov
and
ficompl
xchg
addr16
repnz
sub
rcrb
mov
pop
xchg
scas
sbb
jb
fildl
stc
and
jae
mov
ds
ss
and
or
sub
dec
cmpsl
andb
mov
or
inc
push
push
es
dec
gs
inc
mov
gs
shr
das
movsb
outsl
outsb
dec
and
mov
or
in
jl
mov
fwait
dec
xlat
adc
jb
xchg
or
add
enter
lods
mov
fisubl
sub
mov
xlat
and
mov
mov
mov
add
or
daa
ljmp
pushf
in
cwtl
aaa
lods
leave
mov
jmp
mov
cli
int
movb
outsl
lret
sti
lret
xchg
fcoms
xor
mov
and
jne
repz
jns
negb
fistpl
out
nop
ret
rclb
jecxz
fnstenv
out
xchg
aas
aaa
sub
sbbl
test
cltd
cmp
jnp
andl
lahf
leave
pop
and
sbbl
cld
enter
mov
hlt
dec
push
mov
push
xchg
dec
xor
ja
lods
dec
lret
xor
or
mov
cmp
dec
pushf
push
mov
xor
xor
outsl
icebp
push
or
xchg
ja
add
xor
pop
and
sti
lods
lret
rcl
enter
roll
aad
scas
lods
inc
ljmp
add
std
sub
rcrl
subb
jg
mov
add
cmp
and
jmp
push
cmpl
mov
pop
adc
lea
mov
push
cmpb
xchg
pop
sbb
and
xchg
mov
fdivr
push
sbb
mov
inc
inc
mov
lret
pop
mov
xchg
cld
push
call
mov
add
das
int3
pop
stos
dec
test
into
shll
xor
loopne
xchg
fcomp
movsb
pop
sub
mov
push
xchg
sub
popa
inc
mov
sub
xchg
cmp
push
mov
mov
popa
cmc
cs
adc
and
inc
out
repnz
clc
imul
int3
and
mov
mov
xchg
ds
sub
jne
insb
stc
addr16
es
sbb
das
aaa
push
dec
adc
stos
adc
xor
dec
mov
cltd
jnp
jno
xchg
mov
mov
mov
repnz
int
aaa
sub
sub
sub
sbb
iret
popf
fstpl
inc
push
xor
mov
or
xchg
flds
icebp
cmp
jo
cld
mov
push
inc
lret
mov
inc
mov
lcall
aaa
push
cmpsl
ss
or
sbbb
mov
negb
ljmp
mov
add
nop
aam
jbe
repz
arpl
aam
xchg
rcrl
out
mov
inc
xor
mov
dec
popa
inc
jmp
xor
stos
sbb
sub
sbb
lcall
sub
call
aaa
xor
jae
loope
iret
xor
xchg
pop
icebp
loope
popa
repz
mov
inc
mov
popf
mov
test
cmpsb
nop
cmp
sbb
stos
lret
jge
repz
aas
shl
jl
sahf
push
pushf
roll
rcr
inc
xor
nop
xchg
inc
add
sub
or
dec
mov
jno
mov
mov
mov
out
dec
xor
scas
add
in
scas
stc
pop
jmp
mov
add
or
rorl
popf
aas
sub
fcompl
in
in
popa
test
inc
fldt
mov
sbb
mov
or
push
dec
fldt
or
and
dec
inc
scas
mov
popf
nop
cmp
loopne
int3
pop
and
mov
dec
add
xchg
stc
jmp
divb
int
adc
out
popa
and
mov
shlb
aaa
das
popf
shll
mov
mov
mov
dec
xchg
xor
fldenv
mov
fidivrl
jg
cmp
les
push
jo
and
lods
fidivs
pop
mov
sti
les
xor
movsl
push
daa
ss
mov
mov
daa
mov
add
cmp
loopne
btcl
jg
jo
fwait
cmp
subl
add
mov
mov
mov
sbb
mov
mov
test
ja
stos
xchg
incb
adcb
rcrl
and
cltd
inc
bound
fbstp
inc
and
roll
fidivrs
cmpsb
popf
jb
push
push
push
mov
stos
lds
add
jae
ret
xor
mov
adc
mov
ret
sbb
mov
jmp
ret
cli
dec
nop
mov
cmpl
movsb
xchg
mov
rorb
lods
es
lret
sarl
into
xchg
sbb
cmp
mov
cmc
lea
sub
inc
loopne
test
push
sub
xchg
xacquire
or
es
xchg
imul
lret
add
fwait
inc
xor
es
mov
loope
stc
into
mov
and
mov
pop
mov
icebp
add
sbb
xchg
ds
loopne
and
leave
into
xchg
jge
jp
jg
inc
stos
mov
sbbb
mov
jo
xlat
sub
ret
loop
dec
xor
mov
xor
push
sbb
loope
mov
gs
and
popa
pop
mov
sub
xor
push
lock
shll
xchg
xor
enter
pop
and
gs
add
cmp
mov
xchg
sbb
cmp
leave
movsb
xchg
mov
pop
jne
mov
inc
les
cli
xor
sub
shrl
rclb
mov
adc
dec
loope
in
pop
xchg
jg
mov
outsl
roll
ljmp
pop
xor
fiaddl
inc
mov
movsl
xor
sahf
fildll
xchg
inc
xchg
and
pushf
js
popf
sub
mov
jg
movsb
outsb
push
add
enter
addl
push
daa
dec
xchg
mov
scas
mov
sub
mov
or
cmp
subb
or
xchg
popf
jno
stos
cmp
out
xor
inc
push
xor
jle
cli
test
ljmp
dec
cmp
les
call
pop
mov
mov
cmp
inc
sub
mov
adc
aad
loopne
dec
dec
cs
pop
pop
xor
out
pop
push
outsb
jnp
lods
add
outsb
int3
jmp
int
int
cmpl
push
dec
mov
ss
xor
and
xchg
cs
adc
or
scas
xor
fimuls
pop
insb
in
stos
xchg
pop
sub
mov
imul
pop
inc
push
cmp
and
dec
jnp
jne
cmp
cmp
add
mov
test
cmc
mov
sar
stos
inc
je
addr16
pop
pop
pop
popa
leave
mov
sti
mov
sbb
sahf
lret
add
jecxz
fwait
xor
fildll
jl
aas
mov
sub
xor
scas
fpatan
shr
imul
xor
mov
loopne
negl
icebp
and
pop
popa
mov
sbb
std
mov
mov
inc
stos
xchg
mov
imul
icebp
xchg
outsb
pop
xchg
push
mov
call
aas
xchg
or
pop
push
jcxz
aaa
sub
and
sub
mov
out
mov
gs
insl
cs
push
mov
daa
adc
cmp
inc
popa
sbb
arpl
xor
add
imul
push
ljmp
mov
sbb
jae
cs
fwait
ret
push
test
jmp
mov
push
out
inc
pop
xchg
or
sbb
popf
cmpsb
ficompl
dec
pop
iret
jle
xchg
out
outsl
gs
loope
hlt
or
mov
push
xchg
jmp
adc
jns
outsl
shlb
jnp
int
jbe
sahf
into
mov
je
movsl
popf
stc
inc
push
out
xchg
and
xchg
adc
loopne
or
gs
pusha
mov
sbb
xor
push
stos
repnz
mov
into
push
or
mov
lock
xchg
sarl
stos
xchg
sbb
and
mov
push
pop
xchg
and
in
xlat
mov
add
mov
mov
mov
shll
pop
adc
add
mov
or
mov
filds
push
cld
dec
jmp
push
jb
mov
mov
mov
mov
push
xchg
sti
lods
orb
dec
int3
push
add
imul
and
cwtl
xchg
leave
sub
jp
dec
xchg
or
xchg
mulb
mov
xchg
add
sbb
es
leave
loopne
add
insb
dec
mov
sbb
popa
xchg
sbb
stos
xchg
sbb
stos
subl
into
cli
and
mov
es
jo
sub
mov
out
pop
gs
test
popa
xor
pushf
jecxz
mov
jbe
dec
xchg
mov
sub
cltd
cld
shr
cwtl
aas
push
push
jg
jbe
ret
or
loope
push
adc
push
cwtl
cld
mov
out
cmpsb
mov
xor
shrl
mov
rcl
and
xor
mov
pop
sub
mov
and
leave
aad
xchg
insb
loopne
mov
idivl
adc
pop
aam
in
pop
xor
out
into
jno
xchg
lods
hlt
enter
aam
sub
pop
push
cmpsl
stc
add
sub
push
jns
push
mov
in
mov
aas
loop
xchg
inc
and
dec
fdivs
xchg
jp
sbb
test
orb
lods
or
xchg
iret
sub
subb
xor
outsl
cld
jecxz
adc
mov
sub
es
mov
pop
pushf
jae
dec
cmpsl
pop
xchg
fdivrp
jge
mov
push
mov
cwtl
je
push
leave
jg
sarl
dec
loop
dec
push
pop
pop
hlt
sbb
popf
xor
push
enter
push
cmp
xchg
rorl
loop
pop
mov
mov
in
fldl
cmp
xchg
insb
jecxz
mov
aas
jp
sbb
mov
stos
mov
cld
adc
insb
pop
aam
stos
cmp
xchg
mov
in
mov
pop
sub
scas
adcb
add
fisttpl
or
push
arpl
leave
pop
dec
out
xchg
mov
pusha
xchg
push
mov
jle
es
add
push
cmp
negb
sub
mov
aas
js
in
inc
movsb
divl
sbb
hlt
lods
mov
dec
mov
push
cmp
mov
dec
cmp
mov
jne
rorl
push
sub
sbb
xchg
jl
and
pop
push
mov
cmp
and
insb
loopne
sbb
cmpsb
dec
xor
or
bound
movd
leave
scas
es
pop
cmp
int3
xor
jne
inc
xor
sbb
jnp
in
xor
sbbb
pop
mov
test
xchg
das
cwtl
xchg
mov
or
hlt
lcall
mov
cmpsb
xor
mov
cmc
ss
popa
jbe
xor
xchg
mov
push
les
xchg
cmp
leave
in
xor
es
jecxz
xor
fnstsw
inc
push
jle
loop
call
pop
inc
sbb
xchg
enter
cmpsl
xchg
sbb
adc
nop
ss
data16
xchg
mov
test
iret
stos
jmp
mov
mov
sti
xor
nop
and
testb
fnsave
xor
or
stc
out
inc
iret
dec
xchg
mov
imul
or
push
dec
inc
xor
push
scas
mov
iret
ja
push
xchg
shr
add
jno
dec
inc
aad
data16
leave
mov
mov
enter
xor
imul
fmul
mov
lods
bound
mov
lods
je
adc
mov
icebp
sub
xor
inc
ret
xchg
rcrl
ja
xchg
mov
popa
pusha
sub
outsb
cmpl
jmp
movsb
pop
xor
jno
les
testb
inc
aam
into
sbb
out
dec
or
lods
sbb
movsb
cmpsl
das
mov
popf
rolw
pop
decb
dec
xor
xor
out
das
fs
out
xchg
imull
sub
sub
xlat
shrb
sub
pop
sub
ss
fmuls
bnd
jne
dec
aaa
test
fbstp
mov
mov
cs
adc
mov
jmp
es
mov
pop
rcrl
addr16
cli
sub
shlb
inc
mov
xor
pop
adc
test
push
cmpsl
aaa
adc
cmp
fdivrs
pop
scas
push
cmp
sbb
divl
dec
mov
movsl
andb
in
loop
aaa
fs
gs
out
fcoml
movsl
mov
insl
ds
mov
lret
insb
sbb
dec
xchg
mov
xor
push
cmp
js
shll
bound
stos
or
dec
lahf
xchg
cmpsl
cmpsl
mov
addr16
dec
cmp
gs
in
fcmovnb
dec
mov
ret
jl
push
pushf
in
ret
stos
jb
outsb
loope
decb
dec
mov
int3
xchg
js
fstpl
jp
adcb
out
fcmovbe
sahf
loop
push
sbb
inc
jno
scas
fwait
push
sbb
ja
pop
cli
ss
addr16
mov
xor
jecxz
inc
ficomps
sbb
pop
push
add
xor
into
test
test
aaa
test
mov
test
pop
jae
outsb
stc
cld
push
shrl
push
mov
dec
idiv
sub
xchg
lret
inc
orb
insl
cmp
jne
sbb
cmp
jno
mov
nop
jmp
mov
aas
das
cmp
cmc
dec
popf
addr16
adc
shrb
js
xchg
ret
divb
pop
fwait
test
test
test
pop
xor
mov
lods
push
jno
cmp
fdivl
sub
or
jb
notl
mov
fistpll
sub
push
xchg
inc
jae
fidivs
icebp
out
fimuls
jmp
dec
outsl
rol
cmp
in
sbb
fmull
sub
imul
xchg
int3
jp
add
mov
sbb
loope
shl
push
sub
shll
push
mov
sbb
ja
into
jne
cwtl
adcl
dec
mov
cs
fcoml
test
test
sbb
xchg
pop
pop
cmc
mov
or
or
xchg
movl
cmpsl
xor
xchg
mov
ret
mov
xchg
xchg
or
xchg
shlb
clc
dec
push
in
loop
aam
mov
and
rolb
mov
or
loop
xor
inc
cmp
cmpsb
push
dec
cld
mov
popa
mov
test
sti
aaa
std
mov
sahf
loope
imul
add
pusha
or
in
jg
sbb
inc
jae
add
mov
fdivr
jae
sar
lds
popf
pop
cmp
add
orl
inc
add
xchg
pop
lods
push
lahf
jle
xchg
pop
xor
mov
lret
ds
xchg
xor
mov
mov
mov
loopne
test
sub
sbb
mov
xchg
push
popf
insb
cmp
sub
pop
gs
divl
aaa
mov
test
jne
sarb
xchg
add
mov
ja
add
adc
icebp
leave
xchg
lea
dec
cmp
shll
pop
mov
mov
dec
lea
ds
cltd
imul
mov
daa
jae
ror
mov
dec
cmpsl
xchg
push
cmp
testl
test
js
adc
out
pop
lock
shlb
sbb
subl
insl
xchg
xchg
sbb
inc
jmp
scas
lret
cli
inc
arpl
rolb
popf
cmpsl
movsl
gs
jbe
pop
pop
lds
test
sbb
xor
sbb
aaa
sbb
and
xchg
or
aas
cmp
xchg
lret
or
ljmp
jp
jo
je
daa
mov
sub
fsts
xchg
and
sub
outsl
mov
xchg
cmp
in
mov
dec
adc
ror
stc
out
loopne
mov
stos
mov
addr16
mov
add
jae
push
fnstenv
jg
cmp
int
and
pop
mov
aad
pop
mov
pop
cltd
outsl
out
pop
lret
dec
sbb
int3
cmpl
or
imul
mulb
pusha
jecxz
je
int3
inc
xor
pop
fsubrp
sbb
jb
testl
mov
jb
add
pop
cmp
repz
or
mov
mov
enter
loop
movsb
stos
testb
outsl
jp
popa
or
add
xchg
insb
dec
adc
inc
rorl
cmp
movsl
mov
nop
ss
cltd
sub
aas
insb
test
cltd
fmull
test
lcall
aad
in
clc
rol
ss
mov
cmp
jecxz
ss
cmc
nop
insb
cmp
lret
es
push
xor
mov
sub
mov
or
xor
mov
sbbb
bound
out
arpl
mov
xor
cs
push
scas
pop
jo
test
rorl
nopl
sub
and
adc
sbb
ds
leave
or
icebp
mov
test
xchg
jle
inc
jnp
mov
popa
jg
adc
xchg
stos
psraw
or
push
arpl
adc
outsb
in
mov
mov
or
and
or
stos
stos
dec
sbb
test
dec
cmp
enter
or
ret
and
adc
mov
xor
and
sbb
nop
imul
and
stos
xchg
pop
sub
cmp
and
jmp
jne
shll
inc
hlt
mov
jo
pushf
insb
fstps
push
cmp
push
es
lret
negb
jae
jmp
and
out
in
ljmp
or
call
sub
jo
stos
aas
xchg
push
lock
dec
or
mov
loope
shlb
inc
cld
shll
cmp
loop
dec
shrb
fimull
fsubr
out
xchg
cmp
cmp
add
movsl
shll
rcl
inc
aas
xchg
mov
xchg
inc
jne
mov
push
or
mov
aaa
jnp
mov
xor
addb
xor
mov
xchg
jmp
out
dec
sub
cmpsl
mov
popf
dec
enter
mov
test
mov
mov
gs
insl
inc
cmp
add
popf
sub
out
sub
pop
repz
test
or
cwtl
loope
js
rorl
add
aas
mov
hlt
sbb
and
repz
aas
pop
lret
and
cmp
dec
or
add
insw
and
lock
mov
xchg
test
int3
in
mov
push
dec
out
out
sub
imul
mov
push
pop
scas
sub
stos
ror
xchg
rorl
lcall
mov
push
loopne
stos
fcomip
fisttpll
mov
ljmp
mov
lock
push
mov
jle
mov
xchg
xor
shll
pop
in
xchg
xchg
pop
pusha
mov
and
es
fwait
test
aam
loopne
ret
stos
xchg
stc
clc
cwtl
adc
int3
inc
aas
mov
add
das
cwtl
pop
mov
test
arpl
cs
sub
xchg
adc
adc
add
jae
xor
mov
subl
mov
iret
xlat
ret
pop
or
sbb
mov
mov
xor
cmp
loop
shlb
push
or
into
sbb
cwtl
inc
imul
iret
je
jbe
push
stc
movsb
mov
ja
popf
lret
mov
add
mov
sahf
aaa
loopne
adc
iret
add
lods
dec
pushf
jmp
jne
xchg
mov
mov
cld
gs
rclb
push
mov
rorl
jge
cbtw
push
lret
jbe
jg
test
not
mov
xor
jne
push
xchg
sbb
and
stos
test
enter
ljmp
mov
and
cltd
xchg
loop
and
mov
xorb
out
xchg
mov
sub
or
or
inc
mov
addr16
mov
cli
jecxz
and
xor
loopne
inc
and
pop
cmp
nop
adc
je
jns
enter
sub
xor
mov
inc
js
es
stos
iret
xor
sub
arpl
jecxz
jnp
insb
mov
or
mov
sbb
test
mov
repz
lcall
imull
in
xchg
cmpl
mov
xor
push
cltd
mov
outsl
fmuls
mov
data16
and
mov
sub
shll
int3
pop
cmp
fidivrl
lret
pop
scas
ljmp
ss
sub
out
add
xchg
rcrl
into
mov
fucom
cmp
and
stos
jg
mov
mov
lods
leave
insl
imul
adc
enter
or
and
fldl
mov
popa
cmpl
mov
or
popa
daa
leave
dec
add
pop
adc
cmc
and
shll
sti
jecxz
lock
xor
sub
mov
mov
cmp
cmpsl
ficompl
cmp
or
pop
shll
sbbl
mov
andb
cld
mov
aaa
pop
and
cmp
stos
movsb
fcomps
call
fsubrl
push
mov
dec
leave
xchg
push
mov
and
jbe
mov
roll
outsl
push
or
cmc
cmp
mov
mov
add
sbb
aam
mov
fcompl
addr16
shl
inc
jmp
fsubrl
mov
pop
mov
xchg
mov
jae
fnstsw
mov
loop
outsl
sub
xchg
cmpsb
fdivl
jge
movsl
subb
dec
and
xchg
sub
xor
pop
mov
mov
iret
imul
mov
mov
xor
push
xchg
jb
insl
cltd
xchg
div
sub
data16
ds
mov
or
mov
cmpsl
lret
imul
repnz
jmp
call
in
aad
sti
xchg
out
jl
mov
adc
mov
dec
cwtl
inc
hlt
in
rcll
xor
fcmovnu
neg
mov
loope
in
ds
and
mov
pop
xchg
push
loop
mov
je
enter
dec
cltd
mull
dec
push
jo
mov
jo
mov
mov
sub
ss
mov
cwtl
sti
or
xchg
or
push
shl
jle
adc
and
xor
lahf
xchg
xor
andl
sub
adc
mov
dec
js
sub
sub
jne
cmp
sbb
gs
and
cmpsb
fsts
stos
mov
test
in
popf
push
mov
lods
hlt
sub
stc
jmp
fwait
pop
sbb
movsl
jne
dec
fimuls
imul
es
add
lcall
daa
fcmovnu
mov
aas
adc
cmc
mov
xor
icebp
frstor
repz
dec
lods
add
dec
mov
pop
and
int3
or
scas
addl
jne
mov
rcll
add
stos
es
adc
mov
inc
or
movsl
test
jno
ret
ljmp
mov
adc
dec
fcompl
pop
xor
pop
popa
lcall
xchg
loopne
mov
push
inc
jns
mov
inc
cmp
add
mov
fnstenv
push
lods
xchg
jno
subb
sbb
and
mov
push
mov
sahf
fidivrl
scas
loop
jmp
cwtl
cmp
mull
les
jl
mov
pop
aaa
ss
in
lock
pop
jle
aam
fsubl
out
lods
fisubrl
hlt
push
push
push
push
js
push
mov
sti
mov
imul
mov
and
leave
jmp
mov
and
pop
movsl
cmp
adc
es
in
lods
in
fbstp
stos
adc
outsb
adc
jg
adc
scas
xchg
adc
xchg
in
ljmp
xchg
mov
pop
dec
pop
dec
xchg
lcall
inc
adc
clc
cmpsl
stos
pusha
dec
fisttpll
lods
push
push
pop
and
add
or
add
xchg
stos
cmpsl
popf
into
mov
lods
xchg
sbb
mov
dec
ja
pop
and
test
lcall
insl
bound
sarl
mov
jae
xchg
jmp
pop
out
ss
sti
lcall
or
jnp
cmpsl
xor
out
xor
jns
add
leave
lock
jge
mov
ret
insb
leave
mov
or
in
and
ficoml
das
and
mov
loope
and
pop
and
or
adc
jb
cmp
mov
push
pop
xchg
fs
sub
pop
add
jmp
cli
and
je
pop
popa
mov
inc
mov
jne
sbb
in
mov
adcb
in
inc
xor
movsl
xor
les
fsubrs
outsl
push
add
cmc
loopne
dec
lcall
xchg
inc
adc
inc
xchg
icebp
and
cwtl
sbb
lea
fnstsw
loop
iret
dec
cmp
hlt
or
or
and
sbb
mov
xchg
pop
pop
pop
cli
push
xchg
mov
push
jno
gs
jbe
lods
pop
adc
imul
jne
adc
xchg
daa
pop
fcmovnb
lcall
mov
mov
mov
std
jno
add
addr16
pop
lret
hlt
mov
das
jmp
pop
sub
loopne
cmp
shrl
adc
mov
out
fs
adc
clc
aas
in
imul
jmp
sub
mov
mov
pop
sub
in
mov
jg
rorb
rdpmc
push
lcall
das
mov
or
cmp
stc
mov
inc
inc
idivb
imul
inc
xchg
insb
pop
mov
stc
shlb
xchg
xchg
jae
pop
mov
xchg
lret
mov
jg
cmp
jb
add
cld
push
pushf
data16
mov
ds
push
mov
in
push
insl
jmp
jl
adc
ja
xorl
inc
scas
push
jle
cwtl
ss
mov
mov
lods
push
dec
cmp
rclb
mov
js
pop
leave
xlat
xchg
rolb
jge
test
or
ret
es
mov
es
lods
adc
inc
sbb
sub
xchg
out
add
in
nop
inc
addr16
roll
lret
jp
out
out
enter
out
pop
or
int
pop
jecxz
setns
loopne
cwtl
mov
add
xor
adc
xchg
sbb
mov
sub
loope
jb
fldl
jge
push
jmp
jae
mov
push
xchg
mov
pop
stc
sbb
insb
nop
pop
push
lods
lds
cltd
movsl
aam
imul
stos
out
enter
jo
jmp
repnz
pop
iret
inc
inc
testb
mov
mov
xor
adc
push
in
cltd
addr16
das
es
or
and
popf
pop
mov
enter
dec
stos
mov
adc
mov
test
lods
push
cmp
xor
mov
sbb
or
stos
push
leave
nop
sub
mov
jge
cmpl
add
fucomp
jo
dec
test
xor
xchg
loopne
cmpsl
lahf
mov
dec
dec
mov
pop
fistl
mov
stos
into
pop
test
pushf
out
xchg
pushf
fs
pop
mov
jnp
adc
mov
les
stos
popa
test
sbb
mov
xchg
jecxz
js
stos
ror
aas
mov
xor
mov
push
push
lret
mov
or
fisttpll
mov
mov
leave
mov
call
mov
add
lcall
aad
lahf
mov
jg
jg
fnsave
push
lods
stos
fdiv
push
fcmovbe
cbtw
sbb
test
pop
leave
repz
jmp
xlat
push
gs
jnp
sti
je
daa
sarl
inc
xchg
xor
mov
mov
sub
xchg
hlt
test
push
andl
frstor
add
push
dec
movsl
imul
test
lcall
dec
inc
dec
out
test
ret
sub
xchg
mov
mov
push
or
sub
sub
cmpsl
scas
push
dec
mov
sub
cmp
out
aas
push
pop
sbb
fwait
xchg
test
shll
jmp
fsts
ja
sub
mov
sub
sbbb
add
xchg
int
xor
or
stos
enter
add
fsub
les
push
pusha
imul
push
push
std
sbb
mov
add
push
prefetch
fcompl
mov
fisubl
dec
punpckhbw
test
push
es
iret
lods
jecxz
xchg
pop
dec
lcall
sti
push
iret
mov
mov
mov
jmp
inc
mov
or
bound
mov
insl
shrl
jl
push
test
cmpsb
scas
cli
mov
rclb
xchg
adc
fmul
cli
mov
aaa
xchg
and
in
push
enter
xor
sub
mov
xchg
mov
mov
aaa
sub
pop
sub
cs
mov
dec
js
inc
jnp
fwait
cli
mov
mov
shl
out
cmpl
aam
in
mov
jge
xchg
rep
mov
jnp
mov
in
aam
andb
and
lods
mov
hlt
cmpsl
dec
inc
push
fwait
inc
mov
ficoms
inc
mov
rdmsr
and
xor
cmp
adc
fsubrp
mov
cmp
outsb
cmp
es
inc
outsb
sbb
repnz
mov
pushf
stc
aam
into
pop
leave
sbb
and
sub
hlt
mov
mov
out
and
jmp
sub
dec
add
mov
sub
stos
aaa
imul
sub
hlt
js
sbb
aaa
and
int
add
loop
sub
xor
inc
mov
pop
xor
mov
add
or
or
leave
mov
out
outsb
or
adc
mov
call
pop
xor
lret
sub
or
rcll
pushw
pop
pop
jecxz
insl
xchg
jle
sub
negb
dec
sbb
mov
test
or
jno
data16
push
loopne
std
mov
xchg
test
test
xchg
jnp
imul
dec
movsb
in
adc
jae
xchg
sbb
mov
xlat
lret
xor
mov
mov
aaa
jae
setge
fsubrl
mov
jl
pop
test
xchg
add
sti
je
mov
das
push
iret
jg
ljmp
fadds
dec
mov
xor
aaa
mov
jmp
sub
je
inc
dec
pop
ds
insb
divb
mov
add
loop
xchg
ret
fnstsw
xchg
cmc
mov
movsl
xor
jb
cmp
xor
test
stos
movsl
testl
into
icebp
xor
rcrb
adc
dec
mov
pop
decb
dec
es
cmp
add
pop
inc
lret
adc
cmpsl
repz
sbb
into
sarl
data16
insb
fsub
or
dec
popa
stos
test
sub
or
mov
mov
addr16
fistpll
test
dec
adc
es
loop
out
rcr
mov
add
and
insb
scas
out
push
out
add
xor
jns
in
test
rcl
push
jecxz
dec
idivl
rep
cs
or
sub
int
dec
push
adc
in
push
dec
xor
xlat
cli
mov
mov
aam
loopne
cltd
sub
lcall
mov
xlat
std
xchg
or
xchg
xchg
xorb
pushf
ret
ja
jge
jb
out
ja
daa
in
inc
mov
inc
push
icebp
cwtl
and
scas
leave
mov
inc
pop
enter
jmp
addr16
push
lea
or
mov
xchg
pop
clc
loope
jns
jnp
pop
insb
fsubl
push
and
jl
mov
sbb
jmp
and
sarl
movb
mov
sbb
mov
push
fwait
and
pop
cmp
adc
xchg
ljmp
sbb
pop
insl
aas
jns
roll
cmp
cs
dec
xchg
rsm
push
fdiv
jne
xchg
aas
fdivs
add
ret
pop
rcrl
or
cmc
mov
fimuls
jp
sarl
lret
add
dec
test
adc
dec
imul
sub
hlt
mov
subl
push
shlb
xchg
sub
clc
cli
mov
out
movsl
jb
xchg
test
shr
mov
push
cmp
cs
cmp
xchg
mov
into
mov
aad
mov
aam
gs
adcb
sarl
dec
rcr
fwait
adcb
add
insb
mov
std
fstpl
jg
jo
loopne
xchg
insl
shl
mov
loopne
xchg
push
gs
aaa
int3
stos
mov
stos
sbb
sbb
outsb
shl
cmpsl
jbe
inc
mov
sbb
lea
sub
cmpsb
mov
inc
mov
popf
popa
in
mov
fwait
mov
pushf
insl
leave
cmp
out
ret
leave
lahf
outsl
ret
adc
xor
sbb
mov
imull
adc
movsl
mov
shrb
icebp
xchg
es
movsl
hlt
xor
in
add
mov
fsts
pop
call
sub
in
inc
incl
push
scas
xchg
mov
pop
jecxz
mov
mov
rcrl
pop
pop
xchg
es
mov
cmc
mov
mov
xor
mov
rorl
ret
popa
xchg
pop
push
jl
stos
sub
imul
pop
shrl
adc
movsl
jno
vmread
shll
mov
inc
mov
andb
jne
sub
shlb
outsb
push
xchg
jmp
mov
inc
mov
cwtl
cltd
jne
nop
or
pause
and
cmp
fdivr
in
pop
jmp
xchg
aaa
dec
jmp
cwtl
push
shll
adc
call
mov
and
jp
cld
xchg
stos
mov
inc
jle
lods
fadds
outsl
sbb
lods
insl
divb
jmp
push
xchg
sti
and
rcr
icebp
mov
stc
jne
xor
fwait
pop
push
ret
push
xchg
mov
lods
aas
loopne
orl
sti
add
pop
mov
adc
push
xchg
mov
mov
adc
popa
mov
int3
popa
cmpb
xchg
pushf
ja
pushf
sahf
flds
icebp
xor
das
xor
test
xchg
sbb
mov
movsb
mov
data16
fwait
sbb
sahf
and
es
sbb
fcomp
jp
adc
aaa
movsb
xlat
push
jecxz
cli
sbb
sub
sbb
sahf
repnz
pop
dec
pop
mov
mov
mov
lret
iret
push
sub
jp
scas
es
inc
push
scas
push
cli
sti
push
aas
mov
adc
sub
push
shrl
cltd
cwtl
mov
lods
insb
or
xchg
dec
enter
xchg
addr16
jnp
push
inc
inc
adc
push
sub
xchg
leave
hlt
xor
add
imul
jae
stos
dec
pop
pop
adc
pop
cli
mov
js
jecxz
das
adc
adc
inc
inc
dec
adc
fwait
xor
stc
mov
xchg
or
jmp
mov
xchg
or
icebp
xchg
lret
mov
mov
icebp
lret
pop
xor
mov
pop
mov
mov
sbb
in
mov
in
sub
in
rorb
popf
mov
test
mov
mov
clc
xor
lods
sub
dec
xchg
std
cmpsb
pop
mov
call
inc
loopne
orb
lahf
lea
or
pandn
dec
in
mov
xchg
int3
jb
xor
fdivp
push
add
push
movsb
lods
cltd
lret
xchg
mov
ror
orb
mov
xor
fsubs
dec
jno
pop
and
pushl
add
xchg
mov
shll
fwait
jne
movsb
pop
cli
pop
lcall
add
aam
jge
pop
outsb
hlt
je
adc
rclb
outsl
js
dec
sub
mov
mov
lods
inc
xchg
mov
push
fwait
sar
fistpl
fidivs
ss
fnstcw
fists
sahf
test
mov
test
leave
insl
rcr
adc
ja
pop
loop
lret
mov
mov
fmul
loope
xchg
inc
mov
aam
jo
xchg
jle
das
jns
xchg
jo
jle
mov
into
and
test
or
mov
jbe
inc
or
clc
js
mov
test
cmpsl
repz
outsb
cld
jmp
pop
mov
shll
push
add
mov
sub
mov
jae
repnz
test
push
dec
mov
in
fs
xchg
jg
and
xchg
outsb
stos
push
mov
mov
mov
js
jp
cmp
jnp
xor
shlb
stos
jbe
adc
inc
test
sub
xlat
inc
mov
dec
stos
add
cwtl
jp
out
fdivl
mov
rcl
cmp
not
jno
out
popa
mov
leave
push
int3
add
mov
mov
adc
cltd
and
xchg
push
loop
dec
sbb
push
cwtl
in
pop
cmp
cwtl
mov
xchg
lahf
ja
jecxz
scas
js
sub
adc
test
sbb
gs
test
cmp
cmp
stos
and
in
mov
add
and
pop
insb
xchg
sti
nop
popf
lret
pop
leave
lret
cmp
in
xchg
sahf
scas
ja
lahf
mov
pop
mov
imul
sbb
cmp
ds
movsb
mov
ss
cs
leave
popa
stos
aad
aaa
fisubs
js
sub
loop
ja
out
push
pusha
popf
lcall
xchg
fmull
mov
add
pop
add
sbbl
fsubrl
ja
sub
lcall
pop
dec
add
loop
pop
add
jno
int
jmp
iret
shll
sbb
insb
mov
push
lahf
ja
pop
xlat
or
jge
pop
bound
lret
cmp
or
lds
test
and
pop
test
mov
outsl
adc
popf
popa
xor
mov
cmpl
insl
add
imulb
add
imul
cmpsl
sub
test
fisubl
and
movsb
pop
mov
push
arpl
adc
fimuls
arpl
jl
lods
ja
xor
lods
movsb
jbe,pn
dec
les
jecxz
xchg
add
xchg
push
push
hlt
leave
inc
adc
sub
xchg
aaa
gs
out
mov
adc
int
loopne
jmp
sub
cmp
xchg
xor
adc
jle
cmp
loopne
and
jp
ss
or
leave
scas
pop
stos
fists
pop
add
gs
stos
add
jo
push
testb
jp
test
je
push
dec
mov
fcomps
pop
das
repz
inc
cmp
jns
or
xchg
fbld
inc
and
dec
insl
sub
inc
out
xor
push
mov
xchg
sub
cmp
pushf
add
pop
inc
inc
lods
cmp
ret
xor
or
cli
mov
xchg
lahf
xchg
stos
idivb
push
pop
frstor
cmp
arpl
mov
cltd
and
icebp
lods
minps
stos
mov
adcb
sbb
enter
jae
xchg
repz
inc
lahf
adc
pop
pop
stc
ja
ja
pushf
pop
push
push
sbb
cmp
mov
imul
cli
xor
jb
int
sub
cmp
add
pop
xor
xchg
xor
cmc
jne
push
jg
sarb
out
mov
mov
push
idiv
mov
inc
mov
dec
fcmove
add
mov
loope
dec
cmp
or
fildll
mov
es
sbb
test
mov
mov
pop
lcall
shlb
aaa
xchg
push
in
insb
scas
popa
xchg
pop
push
shlb
jecxz
inc
mov
jb
enter
adc
test
stc
pusha
pop
mov
jle
cmpsb
stos
inc
test
or
mov
fimull
ds
mov
mov
fwait
inc
fstpl
xlat
mov
loop
out
nop
cmpsb
movsl
stos
mov
shll
loop
addb
mov
adc
idivl
and
pop
cmpsl
jl
insb
movsb
bound
scas
or
shl
lret
roll
inc
cmp
scas
test
test
xlat
fstpt
sti
dec
dec
sub
sub
dec
jns
sbb
or
les
fxch
stos
mov
jae
jnp
daa
inc
je
xor
xchg
push
adc
adc
fbld
and
jmp
shll
icebp
fistl
imulb
jg
xchg
push
xchg
mov
xchg
and
les
lods
jp
sub
mov
lcall
lret
in
popf
js
mov
sub
js
das
xor
jle
mov
loop
add
mov
xor
lds
cmpsl
push
xchg
psubsb
inc
mov
xor
repnz
lds
subb
xchg
jne
push
negb
pop
cmpsl
mov
sbb
mov
bound
daa
cmp
out
add
notb
rcl
jmp
jl
xchg
out
sub
pop
iret
add
adc
mov
loopne
cltd
leave
lret
mov
xchg
rcll
fidivl
lds
repz
sbb
mov
jge
lods
pushf
idivb
lahf
dec
xchg
in
sti
sub
test
mov
mov
mov
fidivl
fsubr
scas
and
add
mov
test
or
cmp
jle
mov
ljmp
mov
sub
shll
mov
jbe
mov
cmpsb
stc
mov
jae
es
sbb
and
not
jg
popa
jno
push
enter
or
pop
sbb
jg
push
loope
inc
lds
sub
sbb
addl
push
mov
add
xchg
push
xor
lahf
insl
mov
inc
rclb
mov
hlt
lds
mov
ja
xchg
xor
mov
sbb
xor
push
pop
addr16
mov
imul
out
stos
enter
xor
mov
jae
mov
push
fidivs
and
jg
push
mov
mov
mov
std
mov
and
push
loope
mov
int
stc
sub
adc
or
cmp
mov
xlat
pop
xchg
mov
insl
inc
aad
cwtl
leave
adc
mov
rolb
rcl
sahf
mov
and
sbb
push
cmp
pop
shrb
mov
sbb
rcrl
pushf
ja
in
stos
lret
ret
cmp
aaa
cmc
lock
ds
popf
stos
sbb
movsl
shr
xor
adc
cli
mov
fucomip
xchg
orb
popf
mov
mov
lods
jo
pop
test
cmp
push
jbe
leave
xchg
data16
pop
sbb
js
lods
rcr
mov
xchg
inc
aam
outsb
outsb
push
cs
cli
or
aas
xchg
adc
mov
pop
xchg
into
pop
add
roll
pop
int3
sub
dec
inc
inc
mov
fstp
add
pop
je,pn
mov
sbb
scas
test
add
pop
inc
mov
mov
fiadds
pusha
mov
inc
jne
fidivrs
push
sti
push
push
sub
add
dec
mov
adc
mov
movd
inc
and
in
cmp
jg
xor
imulb
jg
test
mov
das
jae
cli
xor
adc
das
popf
mov
adc
cltd
mov
cwtl
mov
push
mov
sahf
stos
jge
pop
sbb
dec
test
jmp
jl
pushf
loop
das
or
cmc
pop
add
ss
ljmp
pop
jg
add
loopne
lret
mov
mov
mov
ds
out
es
rcll
adc
dec
icebp
lea
sub
mov
xor
faddl
cmovg
pop
sub
cs
sti
popa
notl
stos
hlt
and
lods
mov
cmpsl
push
mov
mov
xchg
xchg
mov
jp
arpl
fiaddl
loope
mov
sbb
mov
push
rolb
stos
add
cmp
jbe
adc
das
stos
push
cli
mov
xchg
ret
int
daa
rcrl
das
mov
ret
cmp
mov
add
xchg
nop
push
bound
es
xchg
int3
cmp
inc
outsl
inc
aas
jb
adc
adc
pop
sarl
stos
aam
je
or
into
cmc
int
mov
dec
lock
out
inc
jmp
add
pusha
push
ret
and
popf
adc
std
dec
int
jmp
pusha
stos
divl
sbb
xor
mov
mov
cmp
pop
inc
daa
aaa
adc
notb
or
les
xchg
jae
stc
add
mov
jl
and
aaa
negb
push
mov
push
stos
mov
sbb
movsl
rcr
dec
inc
js
pop
mov
imul
add
int3
push
mov
xchg
js
ljmp
data16
shlb
mov
in
repnz
xchg
call
lods
and
push
xchg
xchg
les
cmp
xchg
or
cmp
cmp
push
js
movsl
popa
test
inc
and
sti
jo
leave
enter
xchg
add
push
stos
cwtl
rorb
add
inc
mov
push
aaa
rcll
shrb
mov
fcompl
xchg
rorl
cmp
push
jge
inc
movsl
ss
stos
hlt
fsub
test
js
mov
fucomip
lcall
sbb
negb
xchg
mov
cs
lahf
insb
dec
push
mov
mov
cmp
adc
jae
sbbb
push
shlb
test
data16
jo
es
subl
je
jecxz
stos
push
mov
mov
jle
or
jae
int3
inc
not
pop
mov
inc
mov
xchg
xor
mov
out
adc
clc
shll
enter
mov
pusha
leave
aaa
xor
lret
pop
insl
insb
push
stc
push
into
icebp
sbb
or
sub
test
mov
cmp
push
add
sub
das
sbb
cmp
jge
scas
adc
pop
lret
sub
jae
sbb
and
mov
in
push
loop
sbb
and
cmpsl
fldenv
outsb
test
fnstsw
lret
pop
movsl
mov
loopne
lret
pushf
int3
cmp
cmpsl
fdiv
push
inc
hlt
lret
push
push
mov
popa
ror
dec
jmp
xchg
add
sar
or
mov
loopne
adc
das
mov
push
jg
ja
lods
push
xor
into
adc
jne
add
lret
sbb
mov
mov
inc
mov
into
pop
adc
test
mov
xor
jae
leave
and
les
push
lods
and
sbb
insb
cmp
cmp
jmp
cmpsb
mov
ret
ret
push
sub
push
aad
loopne
xor
out
xor
popf
jbe
jp
jne
cmp
fimuls
pop
test
and
mov
loop
mov
xchg
inc
mov
stos
mov
mov
mov
push
push
or
cli
cmp
adc
push
cmp
nop
sub
mov
iret
dec
cmp
ds
jae
loop
iret
sub
push
icebp
test
scas
fst
loop
mov
pop
inc
sub
xchg
add
shlb
and
pushf
test
mov
push
mov
xor
xchg
push
loop
into
lds
xchg
dec
pushf
pop
lret
lret
in
or
pop
lret
push
pop
gs
out
xchg
sub
mov
inc
push
cmp
lcall
enter
aas
dec
jg
sti
or
mov
pop
rorb
in
daa
mov
lahf
mov
pop
xor
jae
xchg
xchg
js
test
cmp
pusha
or
dec
adc
in
push
cmp
mov
sbb
sub
test
shrl
dec
cmp
or
inc
mov
sub
jo
mov
xchg
cmpsl
pop
ret
std
lahf
inc
mov
mov
push
sbb
and
ss
sarl
xor
lret
mov
cli
test
add
pop
sub
cmp
insl
ret
adc
mov
mov
call
push
push
jmp
loopne
push
mov
subl
mov
push
lds
adcl
sbb
cmp
push
xchg
scas
scas
add
aam
in
inc
stc
jle
mov
sub
jo
std
aad
addb
rcrl
xchg
stos
adc
add
data16
jmp
mov
xchg
sbb
adc
movsb
mov
xchg
xlat
aad
nop
in
push
pop
cmpsb
cmp
inc
lahf
ja
mov
and
fstpt
jecxz
mov
mov
stc
xchg
xchg
dec
stos
enter
mov
sti
mov
pop
into
inc
jns
pushf
call
xchg
jns
or
ljmp
mov
jmp
mov
xchg
adc
mov
xchg
mov
pop
scas
sbb
ret
jmp
sbb
mov
push
and
pushf
mov
push
cmp
and
mov
aas
jb
notl
in
lds
xor
cmp
lret
ds
pop
out
add
orl
xlat
inc
loop
xchg
cmp
xchg
andl
mov
dec
and
pop
and
rorb
dec
movb
pop
test
test
jmp
lods
cmp
dec
stos
or
insl
jnp
aam
xchg
faddl
leave
xchg
jl
std
mov
dec
das
popf
ljmp
popa
fs
push
add
cmp
jns
add
or
sbb
fdiv
xchg
xchg
sahf
inc
es
sub
mov
leave
jecxz
sbb
inc
and
mov
mov
lock
fldenv
stc
sarl
sbb
push
cmp
cmp
mov
push
je
push
test
mov
mov
push
in
cli
paddb
mov
daa
sarl
lea
es
imul
pop
les
iret
push
jmp
mov
dec
cmp
xchg
jne
xor
aaa
mov
fnstenv
inc
addr16
sbb
pop
cmp
jg
mov
add
cmp
aas
loope
insl
jns
push
cmpsb
dec
mov
movd
jae
xchg
ds
jmp
outsl
xchg
cmp
sbbl
aas
jl
push
sbb
pop
mov
mov
addb
dec
adc
push
shrl
mov
inc
jg
lods
mov
ror
xlat
sub
mov
sub
inc
sbb
xchg
mov
sub
aam
pop
gs
rcr
cmp
jo
sub
dec
into
cmpsb
test
test
or
sahf
in
dec
popf
pop
lahf
xchg
ret
push
insl
aas
fldl
inc
daa
xchg
cld
in
mov
mov
sbb
icebp
pop
out
in
out
popa
push
adc
aas
test
inc
not
dec
daa
gs
xchg
mov
movsb
dec
and
dec
mov
xor
inc
mov
aaa
push
popf
sub
fsubr
fs
sub
ljmp
sub
fsub
jg
mov
sbb
in
daa
jecxz
mov
gs
cs
in
jl
stos
jnp
cmp
lret
xchg
sbb
clc
mov
divl
notb
test
inc
test
std
out
mov
arpl
hlt
jecxz
divl
sub
repnz
inc
aaa
mov
mov
sub
ljmp
push
inc
cld
sub
enter
sub
pop
loop
push
and
xorb
adc
pop
loopne
xor
dec
or
ljmp
enter
cmp
mov
xor
mov
push
mov
popa
xor
insb
lret
je
leave
cmc
icebp
mov
dec
xchg
fs
sub
xchg
push
xor
mov
imul
xchg
or
sub
inc
jmp
push
psrlw
mov
mov
pop
ds
mov
js
gs
and
mov
call
scas
subb
js
notb
push
out
push
mov
jno
lock
sar
iret
cmp
jge
xchg
sub
add
psubq
xchg
push
cmpsl
shl
pusha
push
push
mov
or
jl
mov
cs
leave
mov
dec
adc
xchg
inc
add
jne
stos
mov
push
loop
jae
adc
idivl
or
bound
das
rcrl
adc
int
and
cmp
jmp
out
int
ss
fsts
les
inc
lods
jecxz
cmpsl
fsub
fwait
ljmp
adc
daa
enter
fstps
xor
cld
rcrb
adc
fmull
sub
push
mov
jg
xchg
aad
cmpsw
mov
leave
push
in
fwait
lock
mov
lds
les
fucomip
rorl
movb
xchg
mov
pop
push
mov
cmpsb
jmp
mov
dec
and
test
xor
cmp
push
addl
mov
jmp
mov
dec
cmp
test
mov
xchg
inc
xor
pop
rcr
and
stos
orb
leave
test
sbb
dec
aaa
mov
push
jae
add
dec
je
and
sub
or
mov
mov
mov
in
xor
mov
shlb
sbb
mov
cmp
mov
lock
cmp
ss
stos
mov
xor
fdivr
loop
scas
fistpll
cmp
fdivs
jb
xchg
popa
roll
push
push
clc
mov
pop
test
int
add
jg
imul
test
into
lcall
mov
jle
stc
inc
mov
lcall
adc
dec
iret
imul
push
mov
inc
push
or
pop
sbb
and
xchg
sub
dec
add
mov
fnsave
pusha
sbb
stc
out
sub
sub
xchg
sub
inc
scas
cmp
inc
xor
lret
sbb
mov
les
repz
add
sub
sub
mov
out
in
push
faddl
xlat
addl
jp
cmpsl
push
arpl
jle
cltd
xor
add
lcall
lahf
call
push
testl
je
shl
lret
mov
icebp
push
sub
nop
add
insl
mov
push
mov
icebp
addb
rorl
jnp
sub
push
mov
mov
test
jge
and
xchg
lahf
dec
jmp
jle
pop
fsubrs
mov
outsl
or
sub
sbb
rcll
xchg
mov
add
and
jb
add
xor
xchg
aas
mov
cmpsb
mov
sti
push
mov
pop
lret
inc
push
aaa
adc
xor
xchg
push
in
sbb
xor
sub
jmp
or
inc
dec
movsb
loop
fsubrl
fwait
mov
mov
std
out
push
sub
jg
mov
rcrl
stc
gs
idivl
pop
jge
pop
arpl
and
add
push
popa
push
adc
mov
cmpsl
movsb
shl
sub
jecxz
pop
les
jmp
push
jae
ljmp
fildll
in
add
pop
mov
aaa
mov
or
mov
nop
dec
adc
fisttps
mov
or
andl
mov
adcl
je
push
xchg
add
mov
ret
mov
fwait
mov
jl
lcall
mov
adc
xchg
aaa
lea
cwtl
inc
add
and
clc
dec
push
bound
xchg
mov
mov
jbe
stc
xor
pop
fdivp
icebp
mov
lods
sub
and
mov
insb
inc
mov
stc
pusha
sbb
xchg
das
shl
adc
pop
sbb
dec
cmpsb
dec
mov
es
aaa
pusha
pop
cmp
xchg
movsl
int
loope
cmc
fnstsw
loop
mov
loopne
and
roll
push
mov
mov
stos
rcrl
in
jl
ss
sub
fiaddl
loop
sub
xchg
jns
scas
leave
sub
mov
mov
mov
dec
or
scas
xchg
fisubs
pop
pop
dec
cwtl
pop
lcall
or
pop
add
xor
sub
lret
repz
mov
sub
aad
les
stc
enter
and
stc
jecxz
mov
test
jae
sub
rorl
sub
bound
lret
icebp
push
pop
adc
ljmp
enter
insb
xchg
fsts
push
out
xchg
mov
mov
pop
dec
shr
xor
add
push
pop
mov
or
xchg
je
pushf
sti
push
ljmp
mov
movsl
in
mov
das
addr16
and
insl
in
imul
psrad
repnz
dec
jmp
jne
inc
push
xor
mov
mov
rorl
insl
inc
jecxz
mov
xchg
or
fldpi
mov
imul
bound
stos
lds
pop
shl
or
jne
sub
jmp
xchg
scas
mov
or
ds
mov
cltd
sbbl
aas
dec
adc
popa
mov
sub
jne
movsb
jae
cwtl
mov
mov
mov
sbb
loop
ljmp
pusha
sub
pop
fxch
push
not
imul
cmp
je
hlt
iret
sbb
inc
and
mov
inc
gs
or
mov
pop
ja
outsb
cld
test
sub
adc
into
sub
in
call
add
aas
xchg
jno
add
mov
mov
es
in
fwait
lds
pushf
pop
sbb
mov
icebp
mov
or
ret
xchg
add
sub
xor
mov
mov
inc
sbb
push
shll
inc
xchg
out
test
cwtl
shll
jne
xchg
mov
popa
pushl
jmp
mov
xchg
das
dec
repz
imul
leave
sbb
fists
cmp
lahf
mov
subb
xchg
sub
int3
xchg
lret
mov
and
divl
mov
sbbb
cmpsl
fdivrl
or
mov
pop
jbe
jl
js
insl
pushf
repz
in
out
dec
dec
aas
in
mov
dec
roll
inc
mov
xor
lods
bound
inc
cmp
push
mov
dec
mov
push
mov
insb
sbb
adc
lcall
sub
les
adc
push
inc
stos
fmull
sub
push
and
xlat
mov
addr16
in
jmp
sbb
xor
mov
fsubrl
xor
xor
enter
loop
test
or
fisubrs
orl
jle
cli
hlt
xor
or
xchg
jbe
mulb
xchg
sbb
scas
cmp
enter
lods
sahf
test
jmp
mov
cwtl
mov
icebp
roll
cmp
stos
pop
xchg
xchg
or
rcrb
and
xchg
divl
push
fst
xchg
loope
popf
add
jno
mov
out
xchg
inc
push
movsb
shll
dec
lahf
cmp
popa
movsl
pop
dec
mov
cmpsl
jmp
stc
mov
push
sahf
xor
js
xor
test
test
adc
jo
ret
cs
imul
dec
mov
pop
adc
hlt
mov
loop
cltd
cltd
rcrl
popa
rcrl
fidivs
call
mov
cmpsb
mov
or
sub
xchg
cli
dec
mov
je
pushf
leave
lcall
pop
cmp
add
mov
insl
adc
push
xchg
and
cmp
rcrl
aam
adc
int3
sbb
push
insl
rcll
push
imul
outsb
adc
rcll
ret
inc
xchg
loopne
mov
and
push
and
rorl
mov
icebp
sub
or
mov
shlb
pop
popa
jl
mov
outsl
inc
inc
or
adc
xchg
icebp
xchg
notl
cwtl
add
test
mov
jg
pop
sarl
add
push
and
jae
popa
push
cmc
pop
stos
dec
ret
add
das
repz
xchg
dec
inc
shll
fldz
ret
adc
mov
ljmp
xchg
into
pop
fsts
cmp
iret
xchg
insb
mov
daa
push
xor
or
jne
cmp
loop
push
push
outsl
pop
mov
enter
push
xchg
pop
ret
das
outsb
cmp
pop
shll
xor
sbb
add
sti
xor
stos
test
fs
sub
push
dec
xchg
and
sub
cmp
es
xchg
shll
daa
jecxz
gs
push
sarl
ret
adc
sub
add
ja
insb
or
es
cs
mov
fldt
mov
fdivr
add
xor
inc
xor
idivl
jbe
sahf
enter
push
int
rolb
jnp,pn
jmp
test
popa
int3
shl
jl
jne
xchg
shll
push
ss
and
xor
mov
outsl
fdivrs
jne
sub
mov
jbe
outsl
xchg
test
popa
mov
mov
mov
mov
cld
into
mov
cmpsb
fisubrl
push
sbb
stos
and
mov
mov
sbbb
or
mov
js
nop
jnp
xor
push
mov
fxtract
mov
xchg
fstps
sub
out
dec
xchg
jnp
xor
adc
mov
cmp
popa
imul
adc
dec
fdivrp
inc
mov
lods
test
push
adc
ja,pn
shll
lret
shll
dec
add
shll
jo
xchg
fdivrs
cmp
xor
mov
sbb
cli
adc
out
dec
nop
mov
xchg
fldcw
mov
xchg
and
icebp
xor
pop
sbb
add
pop
repnz
orl
outsb
xchg
inc
cmp
push
add
push
lods
in
int
adc
dec
mov
js
out
and
xchg
popf
sti
lret
xchg
fsubrs
test
push
gs
xchg
dec
lods
xchg
in
decl
arpl
pop
xchg
mov
movsl
roll
push
fnsave
and
sub
add
jae
repnz
dec
ret
lods
xchg
mov
jnp
rclb
iret
dec
ds
imul
ja
or
push
push
lcall
int3
sbb
pop
in
push
pop
sub
xchg
inc
adc
pop
xchg
mov
and
xchg
xlat
xor
leave
push
fs
int3
and
sahf
rcrl
std
insl
cmc
test
mov
ss
arpl
pop
out
adc
inc
mov
mov
push
sbb
int
pop
mov
fcmovne
outsl
push
mov
push
cwtl
mov
mov
xchg
jns
dec
daa
xchg
sub
sub
xchg
in
push
adc
jge
jo
divl
scas
jne
mov
xor
les
stc
adc
cmp
dec
jne
call
dec
sti
lods
mov
cmp
stos
mov
dec
movsl
test
mov
xchg
dec
pop
icebp
and
mov
mov
xor
das
leave
mov
nop
pop
mov
xchg
mov
iret
les
sbbl
sarb
cmp
sub
insb
gs
loop
adc
pop
loope
data16
sub
inc
mov
in
cltd
mov
in
lods
adc
scas
nop
mov
sarl
xor
jmp
sbb
movsl
add
push
clc
sub
xchg
ret
jle
movl
mov
sub
mov
add
mov
xchg
sti
xchg
ret
mov
mov
xor
test
ss
daa
mov
dec
ss
mov
das
movsb
mov
int
mov
inc
dec
sbb
mov
sbb
push
scas
push
xor
sbb
out
ficompl
pop
ljmp
mov
pusha
mov
test
nop
mov
call
cmp
lret
jo
xchg
xor
push
xchg
jo
rorb
movb
das
mov
cmp
inc
jmp
sub
bound
rcrb
inc
std
mov
inc
aad
pop
cmpsl
push
out
jmp
aas
jmp
mov
leave
dec
mov
test
fnstcw
xlat
nop
mov
mov
adc
mov
fstpt
and
pop
dec
push
add
ljmp
rorl
test
pop
movsb
sub
aaa
jbe
cs
mov
mov
add
dec
xchg
add
pop
popf
xchg
mov
loopne
xchg
icebp
xchg
cli
or
fdivr
mov
scas
cli
xchg
sub
dec
mov
mov
test
int
inc
cld
popf
xchg
ja
insl
or
outsb
bound
es
ja
xchg
loope
test
pop
and
jae
xor
cli
xor
mov
or
cmp
sub
or
sub
adc
negl
mov
imul
iret
and
mov
mov
idivl
test
mov
add
xor
movsl
xchg
in
add
icebp
mov
mov
mov
in
sub
fadd
xlat
shll
mov
fldcw
fistps
pop
mov
les
imul
out
dec
jmp
cmp
leave
int3
xor
flds
popa
into
mov
xchg
mov
test
popf
mov
jns
dec
xchg
repz
mov
ds
test
stos
test
dec
ja
jno
popa
mov
fdiv
pushf
jl
es
jecxz
leave
cs
mov
xchg
mov
jmp
pop
hlt
mov
ds
mov
mov
dec
int
mov
add
push
mov
ds
cmpsb
jmp
je
popf
and
and
push
pop
movsb
mov
in
xchg
mov
cmp
cli
mov
fmulp
dec
je
sbb
xchg
pop
test
sub
jno
in
jae
jmp
inc
cmpsl
cmpsb
jne
and
lods
es
movsb
push
popf
add
xor
pop
ljmp
ja
cmp
mov
into
lods
dec
sbb
shlb
mov
xor
jp
sub
fsubp
jle
xchg
push
rcll
pop
jmp
nop
inc
test
in
pusha
cld
push
push
push
jns
mov
lahf
add
cmp
sbb
mov
xadd
pop
jo
stc
test
fdivl
imul
movsb
add
mov
xor
dec
scas
mov
shll
and
jge
mov
lods
inc
push
sbb
popa
and
cli
fistpl
cltd
test
inc
mov
inc
jbe
cli
add
test
add
mov
fisubrs
or
pop
xchg
cmpsb
mov
ja
cltd
jp
sub
jb
mov
jns
dec
sbb
imul
inc
enter
sarl
out
sub
mov
repnz
sbb
mov
jg
inc
mov
mov
push
popa
arpl
or
jae
in
mov
mov
mov
popa
insb
mov
lcall
mov
ja
out
ja,pt
adc
cmp
out
jnp
xor
movsl
push
out
or
jle
inc
inc
mov
mov
in
andl
shrb
enter
jl
stc
inc
pop
ss
cmp
sub
nop
sub
mov
stc
mov
mov
cmp
mov
mov
test
mov
mov
dec
pushl
mov
sbb
pop
sub
movsb
xchg
mov
test
xorl
add
dec
sub
shll
inc
gs
outsl
dec
mov
hlt
lcall
rcll
pushf
lret
jo
sub
mov
sbb
xor
fwait
add
jne
rcll
xor
add
jp
mov
movsb
repnz
or
pop
hlt
ja
cld
ror
dec
push
fidivrl
jbe
push
xchg
adc
test
add
cmp
in
and
jg
cmc
dec
loope
sbb
xor
push
in
cmp
js
in
enter
cmp
or
insb
mov
mov
fisubl
jp
xchg
std
inc
fnstcw
movsl
push
push
ljmp
jg
push
sub
mov
lds
insb
sub
sbb
xchg
jg
push
ss
dec
xorb
and
dec
test
shrb
ljmp
jb
andl
push
adc
xor
sub
aaa
cwtl
xchg
les
iret
ja
mov
sbb
jge
aas
test
ds
mov
sbb
pop
jg
push
add
fs
cwtl
xchg
jo
pop
dec
xchg
fmulp
pop
out
and
push
sbb
jns
add
xor
fsubl
gs
cmpsl
popa
fstps
push
adc
daa
add
cmp
iret
test
xor
stos
popf
pop
pop
lods
outsl
push
in
cld
mov
scas
das
pop
cmp
and
std
jle
cld
fldenv
xchg
pop
dec
test
fs
sahf
shl
mov
cmp
push
js
pop
in
shl
outsb
add
cwtl
mov
test
pop
mov
push
leave
sbb
push
popa
xor
xor
lcall
aaa
pop
xchg
cmpsb
int3
rol
adc
mov
imul
sub
sbb
out
jns
fldt
out
lahf
xchg
clc
mov
xchg
xor
jns
mov
xor
sbb
clc
add
out
test
loop
inc
fdivl
aam
inc
xor
lods
int3
sub
in
fnstsw
repnz
mov
mov
int3
inc
push
outsl
scas
stc
xor
push
js
and
fidivrs
cwtl
out
out
je
stos
sti
xchg
stos
cmpsl
mov
addr16
push
leave
pushf
cs
pushw
push
xor
test
cmp
xchg
inc
loop
push
adc
outsb
js
mov
sbbb
loopne
mov
mov
fstpl
fstl
or
xchg
hlt
sub
push
sbb
add
shll
mov
cmp
pop
imul
xchg
xchg
cltd
stc
mov
mov
mov
jo
jb
test
imul
jmp
scas
movsl
dec
jb
mov
mov
jle
fsubl
pop
hlt
sub
lds
cmp
and
or
lods
mov
sbb
scas
cmpsb
mov
or
js
adc
outsb
addr16
in
in
je
sti
cwtl
loopne
in
mov
inc
jp
mov
pushf
lcall
movb
and
mov
cmp
loopne
sbb
jmp
pop
inc
ja
inc
mov
and
add
out
xchg
mov
das
xor
fldcw
gs
dec
jmp
loope
mov
cmp
ljmp
dec
inc
or
mov
ret
test
or
mov
ds
es
rcrl
neg
inc
data16
aam
mov
xchg
outsb
pop
inc
xchg
and
adc
xchg
adc
mov
not
mov
dec
mov
mov
sub
fcoml
xchg
divl
cmp
sub
or
mov
fs
inc
mov
jg
into
push
popw
jne
sbb
dec
pop
ss
inc
je
fidivrl
xchg
cwtl
jb
in
or
mov
add
addl
in
pop
add
sub
mov
fildl
andb
fstpl
gs
pop
icebp
xchg
leave
pop
or
mov
nop
es
out
rcrb
xorl
mov
mov
pop
xor
js
fcmovb
jg
jmp
mov
clc
add
fldenv
dec
in
mov
stos
mov
addr16
js
mov
iret
hlt
in
push
mov
movsl
sub
je
inc
loop
jne
aaa
popa
inc
hlt
cmpsl
test
mov
iret
sub
aas
rcrl
jne
push
mov
sbb
and
push
pop
lcall
sub
in
jmp
sarl
dec
xchg
cmc
aas
mov
les
loopne
jle
push
jg
xchg
sbb
pusha
inc
mov
mov
andl
stos
bnd
cmpsb
and
push
sub
shll
or
dec
out
xor
sbb
or
sbb
xor
cmc
aaa
es
sub
daa
rcrl
insb
add
js
ret
movsl
hlt
cli
mov
inc
add
cmp
and
mov
sub
inc
xlat
dec
jnp
in
popf
xchg
js
or
test
cmp
lahf
add
mov
fsubl
jae
mov
lret
hlt
mov
pop
xor
movsl
lcall
lods
push
jg
into
jno
fmul
cmpsl
or
test
jg
and
stos
imul
testl
stos
gs
sbb
cmp
cs
dec
clc
add
sub
jbe
pusha
leave
testl
sub
dec
sbb
pop
inc
in
mov
cmpsb
insb
ljmp
mov
nop
mov
jne
sbb
mov
pop
xor
repz
sub
add
mov
negb
push
inc
mov
movsl
icebp
pop
xchg
out
xor
sbb
mov
shll
mov
xor
mov
stos
dec
sub
aad
cmp
icebp
xchg
adc
in
dec
loop
pop
mov
cmp
stos
clc
push
dec
and
mov
jae
or
adc
and
mov
xlat
popa
push
sub
xlat
sbb
sbb
dec
jp
mov
dec
xchg
cwtl
xchg
incb
shr
andl
outsb
mov
test
je
xlat
add
add
adc
push
xor
sub
shlb
add
push
rorb
rorb
push
shlb
add
xchg
sbb
gs
sti
arpl
scas
dec
ljmp
or
jbe
sbb
and
stos
cmp
sub
add
in
mov
jecxz
and
xchg
xchg
aam
call
aad
imul
dec
pushf
and
pop
outsb
xchg
addr16
mov
cmpb
imul
pop
dec
add
sub
jp
movsl
sbb
adc
jns
xor
cltd
inc
or
adc
mov
sub
or
pop
addr16
adc
jnp
adc
fs
je
int3
pop
lds
or
enter
shl
mov
push
dec
mov
xlat
mov
fildl
jmp
stos
arpl
and
sbb
movsb
mov
addr16
xchg
pop
ja
fsts
outsl
jge
inc
in
or
leave
cmpsb
jb
es
imul
mov
leave
ljmp
mov
imul
push
lods
push
cmpsl
in
and
cmp
lods
mov
adc
and
cmp
ror
mulb
hlt
iret
iret
movsb
shll
mov
and
rol
in
loop
fsubs
movsl
mov
imul
lds
adc
mov
dec
fwait
mov
or
pop
or
ss
fidivl
movsb
fldl2t
sub
das
mov
push
pop
stos
xor
mov
mov
outsb
pop
hlt
fcmovnb
cmpsl
fsubp
cmp
repnz
xchg
in
jmp
sarl
dec
mov
les
sti
dec
xchg
mov
test
loopne
dec
daa
repnz
shrl
fidivl
fs
and
test
daa
xchg
cmp
inc
xchg
sub
mov
hlt
test
add
out
mov
mull
and
add
add
test
jecxz
rcrl
je
test
in
outsb
aad
jl
in
jmp
clc
aad
movsl
mov
mov
and
xor
mov
jb
imul
mov
sub
mov
scas
jne
sub
mov
cmp
dec
leave
or
cmc
xchg
pop
xchg
sub
jnp
divb
xor
fsubr
mov
push
adc
mov
pop
and
xchg
test
jl
cmp
add
jae
ficoml
mov
pop
fcoms
mov
lods
or
test
sbb
inc
lret
lret
cmp
sub
scas
push
in
icebp
lret
test
cltd
mov
mov
int3
add
sbb
push
cmp
jecxz
shrl
cmp
repz
addb
pop
mov
mov
mov
insb
fs
mov
fisubs
adc
pop
loope
arpl
ret
dec
xchg
std
lods
jo
lea
loope
add
pop
jecxz
arpl
or
sub
sbb
loop
mov
jo
stos
scas
ficomps
iret
sbb
xchg
les
sbb
ret
xchg
stos
mov
lret
fdivs
popf
loop
aad
push
out
jge
push
or
mov
add
nop
add
cmc
je
out
pop
inc
inc
push
jno
popa
mov
les
cmp
xchg
sbb
lret
arpl
sub
jmp
and
mov
mov
adc
les
aaa
sbb
mov
fwait
stc
not
loopne
pop
adc
mov
cmc
fldcw
pop
rclb
lea
pop
cmp
sub
rcl
out
stos
inc
jne
dec
into
imul
and
and
nop
jns
cmp
popf
leave
loop
mov
inc
mov
rcr
mov
andb
out
pushf
mov
sbb
fs
pop
cmp
iret
sub
dec
xorb
add
mov
ljmp
sub
jp
pushf
inc
and
xchg
pushf
popa
out
jno
call
cs
dec
cmpsb
mov
nop
mov
push
fsubl
sub
mov
lret
inc
mov
inc
fs
cmp
push
xchg
fcompl
mov
pop
loopne
mov
mov
dec
lcall
jp
aad
pop
je
xchg
out
insb
into
add
xchg
or
or
sub
dec
enter
or
dec
pop
cs
or
xor
pop
insl
adc
dec
mov
mov
mov
dec
outsl
iret
rcl
pusha
fistpll
sbb
test
cltd
or
dec
jg
mov
sub
imul
adc
cmp
xor
mov
out
xlat
inc
xchg
xor
sub
popf
xor
out
mov
fwait
repnz
xor
pop
lds
and
push
mov
add
addl
and
xor
inc
adc
mov
dec
sbb
rcl
mov
and
pop
mov
push
sbb
xchg
out
ja
leave
imul
shrb
arpl
loopne
mov
and
xor
rorl
and
sbb
push
mov
xor
loopne
lods
push
mov
inc
jle
es
loopne
add
std
add
ss
jge
repnz
dec
ret
jmp
lds
lods
addl
mov
and
insl
lods
mov
mov
inc
fsts
cmpsb
adc
cltd
jne
call
xor
jp
jae
jns
loop
shrw
repz
adc
fidivl
add
popfw
jne
andb
pop
daa
out
scas
stos
lret
dec
mov
stc
aas
inc
jmp
inc
dec
adc
ror
mov
imul
push
cmp
dec
xchg
std
lcall
mov
push
lret
cli
mov
mov
add
ficomps
arpl
mov
jl
jb
lock
cmp
scas
mov
rcl
sub
enter
add
sbb
push
mov
xchg
push
add
inc
test
or
stc
mov
dec
adc
out
push
shll
aam
scas
jg
insb
xor
clc
xor
or
sub
fldenv
xchg
mov
push
dec
pushl
leave
int
ja
outsb
push
enter
xchg
ficoms
mov
cli
mov
jg
ds
fwait
loopne
fwait
push
jbe
mov
pop
dec
push
cltd
sub
xor
pop
pop
jecxz
loop
cmp
mov
addl
sahf
in
pushf
inc
jmp
adc
fidivl
ret
outsb
xchg
mov
test
xchg
pop
pop
push
icebp
cmp
outsl
mov
mov
and
dec
jl
shlb
cwtl
jmp
adc
fmuls
jbe
rcrl
cmpsb
int3
in
mov
fdivrl
adc
bound
xchg
fldt
mov
pop
call
jp
xor
mov
jbe
ljmpw
pop
dec
stos
sahf
or
sub
int
data16
inc
xchg
scas
sbbl
fwait
and
or
adc
jae
add
arpl
xor
jno
popa
pop
mov
shl
mov
jbe
mov
je
scas
imul
hlt
in
int3
arpl
int3
push
jp
scas
push
insb
daa
or
mov
mov
cmpsb
out
jnp
add
pusha
cmc
mov
jns
cmp
cmpsb
sub
xor
int
push
jecxz
testl
xchg
xchg
jg
xor
push
lret
cltd
lahf
cltd
jecxz
jp
cmpsl
mov
fsubrl
scas
xor
and
int3
xchg
out
mov
sub
mov
sbb
daa
mov
rcrb
loop
sub
xchg
jg
adc
js
add
add
mov
cli
loopne
sbb
xor
stos
sbb
sub
xor
div
or
into
insb
sub
xchg
andb
push
hlt
sbb
push
jbe
hlt
int
mov
into
pop
pop
mov
xchg
cmp
std
inc
mov
fs
xor
cmp
lret
mov
mov
sahf
cmpsl
out
in
push
xchg
mov
outsb
jns
xor
pop
lret
xchg
lret
sub
push
imul
imul
shrb
push
stos
pusha
add
mov
or
int3
cli
sahf
mov
jl
sub
cmpsl
les
xchg
popf
pop
fwait
test
push
addr16
lcall
mov
lahf
loopne
pusha
int3
popf
mov
shll
or
xor
in
jae
in
push
sbb
sbb
jmp
insl
xchg
push
insb
test
lods
push
loop
pop
push
xorl
iret
pop
cwtl
pushf
imul
arpl
insl
rcrl
sub
xor
cmp
std
lret
mov
jecxz
mov
aaa
jmp
mov
xchg
pop
sbb
or
jmp
and
mov
fstpt
mov
mov
es
or
fidivs
test
sub
dec
loopne
das
fwait
in
cwtl
icebp
aam
js
je
jbe
ja
test
arpl
mov
sbb
mov
cmc
stc
imulb
es
mov
outsb
es
ret
pop
aas
mov
into
jae
cltd
into
and
push
movsl
cmp
xchg
inc
adc
fsts
es
addb
and
ss
lcall
fnsave
adc
pop
testb
cmpsl
roll
fsubr
push
stos
bswap
xchg
adc
rcrb
lcall
repnz
pop
aam
mov
sub
repz
mov
in
mov
inc
mov
add
out
jae
stc
jne
mov
outsl
cmp
fisubrs
sahf
rcrl
inc
cmpsl
pop
insl
lods
jg
xor
mov
adcb
daa
add
fldcw
test
imul
xor
push
in
adc
popf
mov
and
cwtl
push
mov
xchg
outsb
loopne
or
mov
mov
in
mov
mov
int3
cli
loope
sbb
dec
dec
xchg
xor
and
sbb
rol
mov
cmpl
pop
mov
fidivrl
addr16
outsb
and
cmp
dec
push
sbb
mov
add
jnp
test
sarl
test
sbb
sahf
mov
repnz
lods
mov
jb
push
xor
jg
lahf
std
xchg
out
stc
enter
mov
or
not
xchg
mov
xor
sub
xchg
outsl
or
insb
push
mov
lret
out
movsl
in
divb
mov
ds
dec
pop
xor
sarl
cltd
sti
inc
dec
cmp
nop
jnp
sub
stos
xchg
popa
cmp
fwait
mov
fimuls
cmp
and
sub
hlt
fs
aam
inc
mov
mov
or
or
sti
out
sbb
sub
mov
insb
and
rcrl
push
imul
pusha
popf
and
mov
testl
lods
mov
dec
xchg
mov
inc
dec
jae
ss
add
aaa
xchg
pop
mov
sub
xchg
push
fmull
test
mov
cwtl
mov
cmp
mov
cmpsb
fdivl
int
mov
pop
mov
pop
jne
ret
mov
adc
mov
push
ja
jae
fildll
addr16
pop
dec
jmp
or
lcall
mov
imul
jmp
jmp
sbb
push
jb
shll
jmp
xchg
lea
cmp
push
push
ret
pop
rol
mov
or
mov
shr
loope
shll
sub
jmp
add
lret
xadd
mov
fildl
arpl
daa
mov
fstl
into
mov
inc
push
pusha
nop
stos
mov
loop
sbbl
ret
or
cli
jo
and
fcmovbe
int
loop
hlt
inc
mov
dec
xchg
ss
shll
divl
call
rcrl
jmp
mov
aam
les
mov
enter
adc
aas
add
fsubrl
jp
dec
jne
mov
and
repz
sub
xchg
pop
adc
fabs
and
add
leave
aas
xorl
adc
daa
in
push
insb
ficoms
mov
sbb
mov
xchg
testb
xchg
cmp
nop
mov
lds
mov
fbld
dec
xor
adc
jg
xchg
mov
inc
mov
ret
mov
jae
in
into
mov
adc
call
enter
mov
outsb
lret
dec
dec
jo
ret
mov
lods
inc
int3
lcall
stos
sti
mov
popf
cmpsb
mov
xchg
mov
sub
shl
ljmp
xchg
loop
xchg
xor
shr
sub
int
je
enter
or
jp
mov
jmp
cwtl
fistps
mov
cmpsb
push
aaa
in
rorb
int
add
cltd
outsb
dec
ja
push
loope
cmp
inc
daa
roll
sbb
jmp
mov
call
scas
sub
and
arpl
inc
and
in
sub
add
xchg
imul
sub
iret
or
call
mov
orb
mov
push
xchg
cmovns
aad
inc
mov
aas
leave
xchg
or
xor
not
and
loope
ja
mov
scas
sub
shl
fistps
mov
pusha
stos
add
jge
mov
shrl
sbbl
pop
mov
pop
insb
mov
rorl
add
ss
nop
repz
sbb
adc
or
sbb
cmpsl
test
imul
test
jg
mov
leave
icebp
push
add
outsl
jo
aad
sub
je
jo
les
es
adc
mov
sub
inc
in
mov
xor
dec
cltd
scas
fsubrl
lret
mov
test
js
hlt
push
mov
jmp
push
cs
sub
stos
lret
mov
or
sbb
nop
ds
fs
or
dec
leave
push
fmulp
subl
sub
in
inc
cld
imul
testb
or
mov
push
and
push
xchg
test
cmpsb
data16
scas
cmp
das
and
mov
mov
subl
push
mov
lds
jecxz
fists
int3
lcall
adc
mov
arpl
xor
addr16
jbe
inc
lret
out
mov
cmp
sub
mov
xor
mov
ror
lret
jle
je
ljmp
inc
lcall
scas
jbe
pop
xchg
es
lods
lea
mov
jne
mov
cltd
lds
add
mov
xor
mov
imul
sub
sarl
inc
movsl
addr16
scas
sbb
sub
scas
pop
out
jmp
iret
and
xor
lcall
js
mov
xchg
mov
aaa
pop
cld
cli
insl
int
and
pop
pop
dec
inc
push
fldenv
mov
xlat
nop
sbb
or
rcr
int
stos
enter
icebp
add
mov
xchg
mov
sbbl
cmp
mov
mov
rcrl
out
mov
xchg
or
repnz
xchg
jmp
and
mov
and
pop
loop
iret
into
cmpsl
fnstcw
repz
mov
jbe
test
dec
negl
push
xlat
loop
mov
xor
and
addr16
lahf
int3
xchg
ret
push
mov
es
cmc
testb
sub
mov
pop
movsl
adc
mulb
xlat
xchg
mov
xor
mov
xchg
dec
pop
add
call
dec
and
mov
xor
test
mov
mov
es
pop
daa
xor
xchg
notl
stos
mov
movsl
inc
pop
mov
movsl
daa
jne
pushf
repnz
xchg
mov
loopne
sub
fs
cli
clc
inc
jae
xor
add
mov
xor
ds
idivl
pop
push
hlt
fwait
ljmp
and
dec
aam
xchg
cli
frstor
stos
lds
or
cs
out
jmp
int
inc
lcall
mov
mov
and
subb
icebp
xchg
out
lcall
xor
jbe
ret
test
mov
popa
adc
aam
sbb
mov
das
fsubr
insb
mov
mov
mov
ret
sub
push
leave
fwait
jecxz
lea
pop
add
ficoml
push
sub
sub
loope
leave
mov
jne
pop
add
mov
in
test
out
movsl
push
into
adc
sub
sbb
sarl
xor
mov
lods
testb
sub
repnz
mov
mov
fwait
mov
pop
jecxz
lahf
repz
sub
push
pop
iret
sub
test
in
mov
push
jb
cli
aad
out
paddusw
popa
cmpsl
into
pop
xchg
xchg
pop
sarl
stc
xchg
test
in
in
fidivl
das
faddl
insb
lds
mov
dec
in
dec
addr16
xorb
mov
add
push
xor
jae
pushf
xor
sub
rorl
add
and
in
cmp
lods
and
rcrl
cmpsb
test
sbb
jmp
mov
mov
out
push
lds
fstps
rcr
add
cmp
aaa
cltd
xchg
mov
gs
mov
dec
sbb
push
outsl
sub
iret
test
or
mov
mov
imul
loop
cmpsl
add
ficomps
xchg
fists
sub
ret
add
cmp
jp
cmp
sbb
cs
add
je
cmpsl
notb
repz
dec
xchg
shl
adc
pushf
in
dec
mov
lcall
mov
xor
aam
stos
test
insb
cltd
xchg
test
popa
mov
and
hlt
test
add
inc
dec
icebp
or
or
test
jecxz
fwait
add
lock
loope
in
scas
pop
xor
iret
pop
divl
test
push
arpl
push
andb
gs
insl
push
pop
loop
xchg
jae
push
cmp
cs
mov
bnd
cmc
pop
scas
sahf
mov
mov
cmc
lods
outsl
popf
xchg
pop
sub
mov
decb
push
cmpsl
movsl
dec
mov
xchg
jmp
in
cwtl
repz
add
mov
mov
mov
rcll
push
nop
mov
and
push
stos
xorb
mov
jp
mov
rep
mov
mov
mov
add
repnz
insb
sar
jge
pop
dec
mov
sub
cmc
xchg
sub
cmp
scas
add
hlt
insb
mov
mov
int3
mov
add
xor
aad
leave
jo
push
xchg
pushf
andb
add
cmp
xchg
xchg
sbb
jae
xchg
mov
push
movsl
inc
xor
out
xlat
shll
inc
mov
int
sub
xchg
loop
mov
pop
pusha
dec
mov
jae
adc
jmp
lods
in
scas
add
sahf
xor
psubusb
setge
fnsave
push
mov
nop
mov
pop
fcmovnbe
lret
cmp
push
lret
mov
dec
out
enter
xchg
sbb
and
mov
ret
xchg
and
mov
gs
xchg
lahf
test
pop
xor
fidivrl
test
sarl
pushf
sbb
pop
mov
xchg
pop
and
sbb
sub
jge
int3
orl
jmp
sub
repz
mov
and
ds
pop
mov
mov
imul
fsubs
std
pop
fmuls
jg
call
or
push
pop
dec
jo
mov
dec
stc
xchg
dec
xor
inc
sub
jmp
test
filds
xchg
sarb
sbb
xor
jl
pop
out
sub
pusha
pop
jp
or
fmul
fwait
nop
imul
push
xchg
in
mov
xlat
sbb
icebp
xor
lods
aad
push
mov
das
push
imul
test
in
lret
popf
add
cli
mov
fisubrs
xor
ss
add
dec
sbb
insb
jecxz
orl
popa
fdivl
cmp
ljmp
inc
add
mov
fcmovnu
cmpb
pop
mov
jmp
inc
sub
dec
shl
repnz
lea
js
mov
mov
push
outsl
sub
jne
and
int
lret
insl
xchg
push
push
data16
xchg
jae
xchg
ret
popa
xchg
pop
lock
loope
out
aad
dec
enter
xchg
mov
dec
dec
mov
push
test
mov
mov
sbb
mov
test
rorl
dec
push
mov
push
and
dec
jg
imul
insb
pop
push
cmpsb
sbbb
scas
jmp
mov
out
data16
cli
mov
leave
out
sub
es
test
jecxz
mov
shr
xchg
loop
loope
or
popa
sarl
jnp
xchg
xor
out
sub
add
jns
mov
push
pop
and
jne
or
inc
popw
add
mov
pop
fiadds
jns
push
mov
inc
mov
pop
call
out
xchg
jae
pushw
pop
fbld
pushf
mov
ror
in
sbb
lds
pop
mov
popa
and
popa
adc
lcall
jae
not
shlb
and
push
and
ja
cmp
aam
mov
fwait
jae
cmpsl
sbb
mov
mov
ja
and
popa
inc
pop
sub
lret
add
mov
jmp
lds
cs
sbb
icebp
mov
out
xchg
fmulp
sub
rcl
movsb
jle
imul
mov
jne
pop
pushf
outsb
or
xor
cli
repz
mov
jb
or
ficoms
popf
fcoml
mov
xor
jne
inc
je
mov
adc
ljmp
lret
enter
in
repnz
lods
addb
dec
addr16
bound
rorl
mov
lcall
xor
leave
lock
imull
leave
add
je
ret
pop
das
sbbl
sbb
and
adc
popa
mov
pop
arpl
push
das
jne
xor
out
test
cmpsl
loop
filds
test
fisubl
push
and
mov
pop
in
sub
mov
lods
shl
xchg
xor
call
adc
xor
mov
sbb
add
imul
jge
div
sbb
clc
cmp
xor
rcll
leave
jg
cmp
es
jmp
xor
lcall
and
dec
mov
leave
js
fucomip
mov
add
inc
sbb
push
mov
loopne
push
cmp
sub
pusha
push
jae
xchg
sub
and
adc
xor
xchg
pushl
cmp
push
lcall
mov
fwait
mov
lods
mov
sub
cltd
sahf
push
clc
push
sub
gs
jp
imul
jmp
xor
and
je
or
xor
jp
xchg
es
subb
nop
into
mov
fsubrs
test
imul
cmpsl
pop
rcrl
cmp
xchg
jno
lods
dec
loopne
test
push
cmp
dec
in
mov
rcll
nop
jbe
adc
and
jmp
fdivrl
mov
cwtl
insl
les
jns
addr16
pop
adc
mov
leave
stos
sub
pop
hlt
and
xchg
sub
push
cs
sbb
lret
out
or
fsubrs
jmp
in
and
mov
adc
mov
lods
insb
dec
cmpsb
xchg
das
fwait
jmp
mov
mov
test
shlb
pop
pop
mov
push
fiadds
shll
sbb
mov
mov
jns
loope
mov
adc
jae
rcll
popa
inc
inc
lods
mov
sub
mov
lahf
les
xchg
movb
xchg
xchg
lock
stos
fldenv
and
test
sahf
cli
decb
fsubl
fldl
sub
aaa
loop
loop
scas
mov
stc
push
inc
daa
ss
sbb
das
stc
push
xchg
insl
xchg
lock
mov
fldt
divb
jnp
add
test
xchg
jbe
pop
test
xchg
mov
pop
inc
push
jae
sbb
sub
cmp
lahf
pop
sub
es
mov
pop
fnstenv
fistpl
ds
lods
shll
hlt
xchg
pop
popf
jmp
jb
xor
push
lret
je
movsw
cmp
mov
or
pop
mov
adc
lret
divb
xchg
xchg
ja
out
sub
add
jge
jmp
sbb
js
cmp
movsb
shrl
xor
pop
stos
mov
cmpsl
xor
fwait
inc
jnp
dec
mov
mov
sub
pusha
or
add
mov
outsb
push
push
fiaddl
rorl
cmc
jmp
lahf
mov
lods
movsl
inc
lcall
shlb
hlt
push
inc
lds
push
mov
stos
xorb
cli
adc
jb
insb
arpl
lock
fcomp
mov
xchg
int3
mov
stc
mov
ljmp
sbb
xchg
enter
sub
push
test
mov
test
mov
jle
jle
jl
rol
sbb
stc
loop
xlat
fsubl
add
sbb
mov
setnp
in
xchg
lret
mov
adc
or
or
mov
xchg
daa
xchg
and
mov
daa
adc
lds
leave
and
ss
push
mov
shll
imul
mov
sbb
fimull
jmp
ret
ret
add
outsl
lods
xchg
pop
andb
ds
sub
push
mov
shr
mov
popf
xchg
lods
mov
out
faddl
roll
scas
subb
leave
jne
jb
mov
mov
movsl
les
fs
fnsave
lock
jmp
out
xchg
arpl
sub
adc
pop
faddl
mov
pushf
mov
or
in
xor
mov
dec
aaa
fstl
testb
hlt
int
or
outsb
repnz
lods
fisttpl
idivb
es
pop
sbb
inc
mov
out
xchg
mov
and
mov
dec
jp
sbb
cmpsl
hlt
pusha
outsl
jecxz
leave
mov
addb
mov
roll
and
outsl
jge
sbb
gs
mov
les
sub
insb
into
push
inc
aas
push
fstpl
mov
subb
xchg
jae
leave
inc
cs
fwait
mov
push
ficompl
and
xor
mov
cmpsb
xor
lods
mov
mov
mov
dec
cs
sahf
test
push
or
leave
mov
stc
cmpsb
shll
push
cmp
add
or
sbb
ss
out
xor
sarl
sub
mov
inc
mov
into
cmp
lcall
sub
jmp
xchg
adc
xchg
mov
aaa
mov
inc
xchg
push
sub
fisttpll
stos
xchg
cmc
cli
jnp
jno
dec
leave
cmpsl
test
sbb
xchg
pop
mov
lahf
mov
push
push
leave
test
scas
mov
sbb
add
sub
insb
jg
ss
pusha
xor
gs
or
addr16
loop
testb
scas
aam
push
xchg
loope
fildl
adc
aad
rcrl
test
xchg
scas
xchg
aaa
mov
mov
push
jne
xchg
fisttpll
xchg
jbe
adc
dec
push
data16
and
jnp
push
sbb
imul
adc
aad
jmp
sar
sub
jg
push
push
mov
push
popf
ljmp
cmp
int3
pusha
inc
adc
inc
push
loope
fs
dec
mov
sbb
mov
scas
xor
nop
inc
inc
aad
push
and
or
inc
pop
mov
xchg
cli
jmp
pop
mov
rorl
mov
shll
inc
testl
mov
mov
mov
dec
pop
sub
sub
std
inc
rcrl
in
dec
add
stos
sarl
pop
les
sub
movsl
push
xchg
add
mov
cmc
pop
data16
lahf
sbb
ffree
pop
out
lea
or
xor
inc
jl
cmp
xchg
fsubrl
push
xor
lods
lret
jge
mov
pop
loopne
sub
test
dec
inc
dec
dec
shrb
xchg
setp
scas
aas
rcrb
push
gs
inc
popf
popa
mov
xchg
push
ljmp
stos
mov
outsl
or
sti
mov
mov
mov
inc
in
in
repnz
xlat
rol
mov
loop
add
fisubs
movsl
xchg
das
jne
rolb
push
or
pop
cmp
ja
fld
inc
loopne
mov
sub
xor
push
leave
outsl
mov
xchg
sbb
into
xor
loopne
aas
pop
jno
inc
xlat
push
sti
mov
cmp
mov
cmp
movsl
movsb
inc
sbb
xchg
adc
inc
cmpsl
add
negb
repnz
data16
std
sbb
jnp
setge
sbb
xchg
pop
rorw
mov
test
add
subb
lcall
ds
sti
xchg
outsb
mov
jle
dec
pop
xchg
scas
sub
jecxz
sti
xchg
andb
mov
loope
sbb
in
jbe
in
aad
xor
dec
xchg
add
dec
outsl
repz
aaa
xchg
popf
aam
lods
loopne
xchg
fistpll
cmpsl
jbe
dec
ret
adc
movsb
leave
jg
popa
mov
shrl
mov
dec
mov
nop
mov
mov
cmc
inc
cmp
stos
cmp
adcl
mov
je
sbb
popf
mov
sbb
mov
mov
dec
cmpsl
arpl
mov
push
cld
movb
jns
dec
stc
ret
mov
pop
leave
jl
aad
icebp
or
sub
cmp
pop
mov
fwait
in
sub
inc
dec
or
xor
jl
iret
ljmp
roll
add
addr16
arpl
dec
jmp
mov
sahf
push
enter
ret
cmpsl
jns
in
push
inc
lahf
ret
ja
mov
fstpl
inc
and
fsts
push
jmp
out
push
fidivs
and
sbb
mov
push
int
loop
imull
scas
push
ret
pop
fldt
xchg
and
out
cmp
leave
lods
and
xor
or
scas
lcall
fwait
scas
mov
loop
pop
dec
in
mov
insb
push
shrb
leave
in
push
mov
fsubl
inc
mulb
pop
mov
mov
imul
pop
fwait
leave
mov
call
loope
jne
fldl2t
test
inc
jo
jmp
es
hlt
adc
inc
and
imul
fwait
into
cltd
sbb
add
xor
mov
lcall
and
jmp
out
scas
in
xchg
call
test
add
pop
les
fldcw
sbb
rclb
or
rorl
in
jo
out
xchg
lea
and
cmpsl
push
insl
add
mov
movsl
shrl
shll
mov
mov
aas
mov
dec
cli
or
push
aas
cmp
pop
mov
jmp
adc
dec
cmpsl
mov
mov
pop
inc
fistpl
mov
leave
mov
stc
push
mov
out
jne
mov
push
sarb
sbb
mov
xchg
adc
xor
movsb
pop
fsts
cmc
pop
jmp
jno
out
mov
xor
rorb
pop
jae
sub
daa
sub
sub
jbe
xchg
dec
xor
or
dec
test
jmp
push
jmp
in
push
lock
fucomp
ss
stos
inc
je
push
mov
pop
sub
push
lods
insl
aam
hlt
test
xor
lock
mov
dec
cmp
mov
dec
xchg
js
bound
sbb
clc
jg
push
sbb
enter
add
int3
cltd
adc
cwtl
mov
jno
sarl
add
cs
into
pop
icebp
xchg
out
test
pusha
fdivl
test
je
and
mov
add
jg
cmpb
pop
jge
or
mov
inc
jmp
in
aaa
and
pop
inc
adc
dec
sbbl
int
jg
daa
movsb
rcl
mov
scas
or
dec
sarl
scas
out
mov
xor
xlat
sbb
mov
sahf
mov
push
ret
adc
pop
xchg
ret
xchg
mov
mov
cmp
mov
mov
sub
pop
jg
into
or
pop
std
bound
loop
pop
mov
ljmp
mov
repz
ficoms
lcall
adc
data16
jae
dec
lods
push
ja
mov
jg
popa
fildll
lcall
rclw
loope
bound
bound
fdivrl
inc
inc
insb
sti
dec
cmp
outsb
dec
out
int
and
popf
adc
jle
jmp
push
sbb
and
outsb
jecxz
or
aad
pop
aam
jg
mov
loop
pop
jle
fildll
rorb
std
xor
data16
xchg
xchg
jmp
or
or
les
xor
int3
in
xor
cmpsb
sti
dec
mov
les
fisttps
add
pop
notb
add
cltd
pop
inc
and
in
inc
xor
push
imul
jnp
mov
aas
sub
xlat
inc
lret
adc
jnp
cmpsb
cmc
and
fstps
iret
popf
mov
cs
xorb
stos
push
mov
add
add
sbb
mov
mov
cli
jno
mov
pop
aad
cs
xchg
imul
mov
mov
cmc
adc
mov
dec
cli
loop
pop
arpl
fstpl
sbb
mov
inc
mov
dec
outsb
or
or
aad
lret
sti
imul
add
fpatan
shll
mov
cmp
mov
xchg
bound
into
loop
jl
dec
sbb
xchg
mov
and
mov
mov
dec
mov
das
sahf
flds
jo
mov
lcall
add
icebp
cmpsl
imul
icebp
movsb
shl
inc
and
mov
xchg
call
and
or
mov
jnp
pop
add
dec
sbb
adc
movsb
pop
frstor
out
leave
arpl
or
scas
cli
lods
pop
mov
pop
fstpt
push
inc
mov
push
cmpsl
mov
pop
movsl
mov
in
sub
ljmp
ja
mov
sub
imul
leave
je
hlt
xchg
loopne
mov
sub
cmpl
lahf
int3
cmp
mov
enter
outsl
mov
roll
or
daa
lea
jns
jle
lcall
inc
cmp
push
ljmp
xor
jmp
cs
pop
dec
int3
add
rorb
mov
js
mov
cmp
dec
mov
ss
out
mov
das
rcr
adc
cmpsl
cwtl
out
cwtl
in
sti
addr16
cmp
cmp
cmp
cwtl
fistpl
jecxz
inc
fs
fbld
stc
fwait
lahf
out
leave
add
add
inc
lea
gs
loopne
fcmovnb
sbb
xchg
mov
test
arpl
and
xor
outsb
xchg
mov
push
xchg
lret
or
cmp
hlt
stos
jecxz
and
fcomps
dec
xchg
dec
mov
fimull
ficoml
lret
adc
cmp
cmp
jne
data16
jecxz
adc
fwait
out
sbb
jp
xchg
xchg
xor
xlat
push
push
jae
mov
mov
xor
xchg
adc
insl
scas
fidivl
push
fwait
bound
movsl
cwtl
mov
or
and
lods
mov
or
je
dec
add
out
out
lahf
shrb
imul
lods
shlb
xlat
jb
cmp
push
stos
cmc
data16
xchg
fs
adc
fsubl
fcomps
jecxz
shll
xlat
add
dec
mov
inc
lret
xchg
xchg
rorb
rclb
sub
mov
adcb
sbb
pop
mov
int3
test
shll
jmp
jl
test
push
adc
mov
sbb
aaa
ja
pop
lds
pop
cmp
jmp
rclb
lds
pop
xchg
mov
cmpsl
loopne
inc
in
test
sub
or
out
cmp
cld
cltd
in
ret
and
xchg
sub
vcvtps2dq
loop
mov
mov
les
shrb
dec
push
sbb
cmp
jmp
enter
mov
outsl
dec
loop
es
out
dec
stos
das
lret
and
push
out
ficompl
ja
adc
test
das
shll
mov
xchg
dec
push
out
cmp
aad
cmp
xchg
popa
movsb
iret
insl
sub
pop
mov
lret
mov
inc
mov
shrl
mov
push
flds
cltd
hlt
pushf
jmp
mov
jecxz
arpl
mulb
mov
xor
jbe
add
sbb
cltd
out
into
icebp
lods
push
js
mov
outsb
and
clc
outsb
mov
inc
loop
sbb
push
mov
sub
les
jg
scas
xchg
mov
jg
shrb
movsl
mov
jecxz
ljmp
mov
xchg
icebp
sub
and
sti
or
mov
adc
and
or
pop
addr16
fldt
cs
jb
mov
pop
sbb
add
addr16
and
movsl
lods
popf
es
outsb
xor
sbbb
sub
in
lods
pop
sub
dec
sbb
dec
push
cltd
push
push
and
test
idiv
jle
xchg
fwait
adc
popf
jge
sbb
or
dec
inc
xor
sub
mov
insl
jmp
mov
dec
add
fsts
lahf
andl
xchg
mov
sub
shl
ret
sub
jae
lods
dec
lcall
repnz
cli
sub
sub
movzwl
pop
sbb
cmp
pop
lds
jecxz
mov
addr16
imul
add
mov
sbb
xchg
or
xchg
xchg
add
mov
pop
pop
push
cld
jo
cwtl
rolw
mov
mov
cmp
incl
sbb
das
or
inc
jle
popa
mov
xor
jg
sbb
lods
je
xchg
sub
movsl
in
push
lret
inc
fsubrl
adc
jns
ret
or
jne
xchg
adc
aaa
or
mov
pop
mov
rclb
sbb
fcoml
adcb
aas
test
jns
lea
dec
lods
push
dec
mov
popa
xor
push
out
xchg
push
into
dec
int3
push
lret
lret
sub
cmp
push
xchg
mov
imull
cmp
roll
iret
cmp
cmpsl
leave
mov
test
test
xchg
popf
subl
dec
jne
sti
fwait
pusha
mov
dec
scas
jbe
je
sbb
cwtl
adc
add
daa
fwait
int3
aas
jmp
pop
or
stc
cmp
mov
push
rorb
xchg
sub
add
mov
pop
in
push
scas
dec
mov
push
inc
nop
cmp
push
cmpsb
enter
sub
popa
out
push
fwait
xor
aad
push
xor
rcl
dec
daa
ret
insb
cmp
add
test
add
jg
iret
dec
mov
add
fistpl
jns
mov
fildll
sub
leave
adc
xchg
fcoml
mov
mov
pop
lds
mov
sti
cmp
rclb
mov
mov
int3
cltd
popa
cltd
ja
mov
sbbb
leave
das
lahf
loopne
rcrb
int
mov
mov
dec
mov
cmp
loop
movsl
xchg
mov
jmp
enter
jne
adc
push
sbb
cltd
cmp
add
int3
xor
mov
inc
pop
js
shl
aas
fwait
mov
int3
cmp
jne
cmp
fstpt
sub
stos
inc
adc
jg
incl
and
or
insl
outsb
subl
xor
push
jecxz
jp
nop
scas
xchg
xchg
xchg
cmc
mov
scas
inc
outsl
fidivrs
mov
aam
sub
adc
pop
and
gs
imul
je
pushf
add
mov
ret
sub
daa
sub
sar
pop
insb
data16
inc
inc
mov
jns
push
xor
push
or
add
adc
data16
sbbb
cltd
push
xchg
and
pop
pop
loopne
daa
lds
rclb
loop
fistpl
sub
mov
test
ret
add
movl
cmc
loop
jmp
test
or
push
jnp
adc
push
scas
js
das
push
add
xor
pop
jle
cmpsb
mov
sub
into
mov
cmp
xchg
aas
andl
cmp
cmpsb
mov
push
pop
lods
cmp
xchg
jb
push
in
mov
fld
pop
loope
or
inc
mov
mov
divb
sbb
call
into
or
mov
lea
data16
fmulp
xchg
mov
push
sub
and
adc
cli
rcl
pop
mov
mov
push
dec
add
repz
push
sti
loop
pop
mov
xor
pop
jo
xchg
xor
push
test
sahf
adc
notl
mov
sbb
dec
add
mov
or
int
in
pop
inc
jecxz
repz
mov
sti
xchg
outsl
cwtl
lds
jbe
xchg
xor
fcomps
dec
dec
mov
test
lret
adc
and
dec
dec
cli
sti
jl
sti
scas
dec
push
jmp
ret
ljmp
dec
jne
jno
outsb
stos
dec
or
test
outsb
sub
mov
or
lahf
and
fdivrs
or
lea
dec
repz
inc
test
lods
cmpsb
lret
fidivs
jnp
pop
popa
cld
push
in
mov
inc
jp
pop
sarb
push
mov
cli
mov
xchg
dec
mov
int
xor
arpl
xchg
shll
push
out
adc
andb
insl
stos
shrb
loopne
ja
or
xchg
mov
xchg
xor
shl
xchg
mov
push
add
aaa
mov
pop
jnp
data16
int3
es
push
jmp
cmc
movsb
mov
jmp
out
or
sub
jg
mov
add
and
rcr
aam
xlat
sub
lret
fsubrp
push
mov
pop
sti
inc
test
mov
enter
add
gs
cs
or
lret
mov
icebp
sub
insb
jg
psrad
rcrl
add
add
outsl
mov
jle
jecxz
mov
dec
int3
inc
push
adc
mov
out
inc
and
push
push
xor
test
mov
mov
mov
pop
loop
pop
jbe
sub
int
mov
lods
push
cmp
out
andl
push
ret
jb
loopne
jl
fwait
test
mov
repz
mul
inc
mov
lcall
mov
mov
test
cld
mov
jp
mov
popa
gs
push
push
lret
test
lds
mov
adc
mov
ja
jb
mov
cmp
pop
stc
clc
fistpll
fcmovu
mov
push
mov
loopne
jne
cmpl
cli
movsb
cwtl
not
mov
dec
clc
or
addr16
stos
push
jbe
aam
sub
rol
adcl
lods
sbb
xor
xor
popf
loop
mov
xchg
fisttpll
int
jne
ss
pop
mov
out
in
cltd
mov
mov
fldl
fsub
lock
test
rcll
mov
sahf
mov
jmp
xchg
popf
mov
aas
add
incb
out
leave
call
dec
adcl
rcll
dec
cmc
in
lret
mov
in
push
add
xor
cmc
cwtl
jmp
scas
hlt
mov
ret
lock
sub
nop
lds
scas
cltd
pop
jle
jne
sarb
pop
push
stos
cmpsb
fisttps
cmpsl
aaa
mov
mov
push
lods
aas
rcl
and
sub
xor
lret
add
inc
fidivrl
cs
and
jle
push
inc
adc
adc
and
out
imul
mov
mov
sbb
jbe
mov
enter
in
fstp
jae
fildl
out
ss
lock
cli
mov
xchg
jbe
dec
sub
pop
cmp
cli
xchg
out
test
es
cmpsl
repnz
es
mov
stos
pop
adc
mulb
loopne
pop
pop
shl
mov
xchg
push
xor
fstp
mov
jecxz
leave
lds
testl
cmpsl
leave
fmuls
fiadds
jbe
pop
in
cmp
mov
mov
std
push
or
mov
mov
loopne
sbb
jp
sub
mov
mov
pop
cmp
stos
loope
mov
inc
into
cmp
mov
bound
lcallw
mov
mov
icebp
das
sbbb
mov
insl
dec
add
mov
rcrl
add
lcall
aaa
loop
insl
lds
pusha
jp
shll
sub
adc
lods
xor
mov
dec
out
mov
inc
inc
out
roll
mov
imul
pusha
or
shl
push
sti
js
cltd
cmp
xlat
ficompl
hlt
push
jmp
subb
adc
iret
sarb
aad
mov
scas
mov
in
testb
je
shl
or
mov
sub
jne
adc
push
cmp
loop
xor
xchg
fbstp
add
test
es
bound
das
dec
jo
mov
das
add
js
aad
and
mov
jecxz
cmpsl
mov
insb
loope
jecxz
or
mov
push
test
lock
lods
out
leave
or
popf
stos
leave
test
cwtl
push
sub
add
cmp
push
push
sbb
inc
mulb
addr16
ljmp
sahf
lods
pop
and
pop
or
daa
icebp
or
mov
fwait
jge
dec
jg
and
mov
adc
jae
loopne
aaa
int3
cmp
push
fstpt
jecxz
shll
inc
rolb
push
or
test
sbb
lods
cltd
cmp
movsb
test
pop
sbb
loopne
jp
movsl
lods
mov
xor
ja
ja
bound
fwait
add
pop
loopne
jno
xor
xchg
int
or
loopne
nop
dec
out
push
js
add
mov
adc
and
pop
adc
and
sbb
inc
mov
cltd
ret
pushf
cmc
sub
pop
mov
mov
out
outsl
mov
push
imul
push
jae
cmp
fdivrl
fsubrs
test
mov
in
dec
push
push
out
or
les
je
mov
std
mov
test
xchg
jnp
fs
ret
pop
shrl
sub
mov
cli
stos
imul
cwtl
bound
jp
sub
adc
pop
mov
jmp
test
pop
mov
sbb
cmpsb
push
lahf
push
fcompl
mov
lods
mov
and
in
push
imulb
repnz
stc
xor
fsub
popa
jbe
add
xchg
stc
scas
or
hlt
push
and
mov
mov
jnp
pusha
fsubrl
mov
fninit
int3
lcall
xlat
aaa
aaa
jmp
mov
loopne
adc
xchg
mov
gs
add
enter
setno
lcall
data16
xchg
or
lds
loopne
into
mov
imul
jnp
popa
ljmp
lock
sbb
sub
call
jle
or
loop
jg
js
gs
cltd
inc
addr16
rorl
test
negb
rorl
fs
jmp
mov
jne
stos
mov
fdivp
cli
inc
mov
test
sahf
cmpsl
cmp
subb
push
jmp
call
sbbl
add
lods
jne
cmpsb
sbb
mov
mov
pushf
mov
shll
sub
push
mov
imul
aas
in
or
adc
lret
inc
or
jnp
shll
ljmp
outsl
in
jle
adc
inc
rorb
pop
ret
cs
xchg
aaa
in
hlt
dec
rolb
cmp
bound
mov
pusha
rcr
popa
lds
xchg
std
leave
sbb
test
xor
decl
enter
xchg
xchg
loope
mov
stc
mov
fidivl
jmp
mov
sub
or
mov
sarb
adc
mov
movsb
mov
mov
fisttps
gs
or
gs
cmp
lahf
sbb
mov
push
out
push
xchg
mov
stos
xchg
mov
mov
fs
je
jg
add
dec
gs
mov
mov
lds
movsb
popf
inc
mov
dec
stos
jp
test
fwait
mov
pusha
inc
jg
mov
nop
xchg
or
addr16
or
xchg
fldenv
fucomi
jo
sbb
cwtl
mov
sub
mov
adcb
xchg
push
inc
mov
adc
fdivrl
and
repz
popf
xchg
jbe
and
cmpsl
js
or
push
mov
icebp
jns
je
xor
ljmp
jbe
pop
pop
hlt
adc
or
mov
mov
or
dec
out
ret
scas
fcom
mov
ret
fwait
inc
insl
push
mov
dec
adc
mov
call
nop
xor
sbbl
mov
movsl
push
inc
loope
negb
das
push
jle
sarl
data16
das
repz
sbb
jae
adc
js
xchg
pop
mov
sarl
jmp
adc
inc
jmp
xor
mov
arpl
jne
mov
xchg
rorb
cmp
sub
lret
aaa
mov
add
mov
popf
jle
nop
xchg
rcr
addr16
mov
mov
and
popf
mov
fnstenv
outsb
xchg
jnp
sbb
mov
add
or
aad
and
mov
mov
lahf
rcl
pop
ret
dec
xchg
jecxz
mov
mov
and
inc
shl
clc
jae
sub
cli
mov
out
xchg
sub
add
adcb
cltd
adc
in
sbb
int
mov
mov
scas
mov
scas
sub
outsl
int
add
fwait
pop
mov
in
cmp
mov
jo
cmp
shll
sub
sti
fstps
or
jmp
add
inc
sbb
xlat
dec
loop
adc
movsb
dec
push
xor
mov
aas
and
jo
movsl
sarl
cmpb
xchg
es
dec
stos
jns
shrl
sub
icebp
imul
shll
mov
pop
mov
shll
or
sbb
imul
stos
sbb
xor
xchg
popf
mov
mov
aam
adc
data16
aaa
mov
mov
push
push
imul
popf
and
push
push
pop
mov
out
inc
or
sub
mov
cmp
cld
shlb
test
das
fsts
jg
jecxz
leave
adc
pushf
push
out
fwait
dec
mov
outsb
into
inc
in
and
push
dec
sub
cmp
je
call
nop
cli
repnz
fld1
dec
nop
sub
mov
pop
and
leave
push
movnti
lds
inc
jnp
loop
jae
or
pop
fnstcw
insl
stos
mov
pop
mov
arpl
out
adc
pop
mov
idivb
fsubl
lret
xchg
and
fstps
and
jmp
sbb
and
add
fnstenv
sub
mov
jecxz
push
inc
mov
ret
mov
aad
loop
adc
arpl
add
sub
stc
adc
scas
repz
push
imul
ja
dec
or
and
loop
jl
sub
pop
xchg
hlt
adc
and
into
mov
adc
rclb
mov
ss
push
cmpsb
sarl
fbstp
pop
mov
repz
jmp
popa
jl
lea
xchg
xchg
mov
xchg
movsb
mov
sbb
mov
sti
sub
xchg
popf
pop
cmpsb
jns
sub
jecxz
jle
scas
pop
shrl
lcall
mov
cltd
mov
aaa
mov
notl
in
lahf
nop
push
push
push
dec
lcall
ljmp
mov
ffree
xchg
jg
lds
sub
pop
std
test
xchg
imul
stos
jmp
enter
fstl
leave
and
popa
ss
insb
js
add
and
cs
rcl
jmp
fidivl
mov
dec
or
mov
dec
loop
or
insb
cwtl
add
mov
mov
mov
and
push
popa
inc
mov
sbb
aam
mov
sbb
pop
xor
loope
dec
or
push
loopne
out
xchg
dec
or
outsb
mov
lods
arpl
dec
loopne
jecxz
push
mov
int
inc
jae
je
jecxz
jne
repnz
mov
pop
pop
jg
loopne
fdivrl
xor
fdivrl
imul
jp
enter
popa
lea
push
adc
out
out
mov
jecxz
test
xor
rorb
lret
popf
inc
movsl
adc
cmp
cltd
popf
ja
mov
mov
les
inc
pop
pop
mov
xchg
mov
mov
jne
int3
xchg
add
mov
stos
mov
flds
and
inc
pop
mov
movsl
ljmp
lods
jg
push
data16
add
sbb
ret
cwtl
xchg
pop
divl
or
add
div
mov
les
rol
mov
je
cmp
iret
in
inc
enter
or
outsl
negb
xlat
in
mov
jle
sti
jbe
inc
jge
xchg
push
in
sbb
hlt
push
mov
hlt
jmp
fwait
jae
or
mov
mov
fidivrl
mov
push
dec
loopne
into
shrl
insl
adc
sbb
pop
shrl
iret
adc
xor
sarl
in
jnp
push
and
xor
daa
lods
push
cmpsl
sub
mov
cmp
adc
pop
hlt
and
xorl
lret
dec
imul
sub
aam
test
leave
xor
rcrl
imul
movsb
adc
fisttps
outsl
push
pop
dec
lods
movsl
mov
sti
shll
jle
movsl
inc
xchg
lcall
mov
mov
js
mov
mov
sub
jp
mov
xchg
mov
inc
mov
add
adc
push
mov
xor
mov
mov
push
rcrb
xor
or
out
insb
rclb
fwait
mov
mov
adc
xchg
jmp
sub
stos
dec
inc
add
sub
add
push
ss
mov
mov
inc
nop
lahf
aaa
adc
pop
mov
insl
enter
daa
sub
loop
xchg
and
ficoml
stos
mov
push
scas
sahf
mov
sti
adc
xchg
popa
jmp
out
mov
shll
sti
jo
dec
aaa
mov
cmc
jne
pop
xchg
ja,pn
fdivr
mov
movsl
jo
adc
push
popa
mov
mov
hlt
jno
inc
orb
cwtl
cltd
mov
mov
inc
lds
cmp
inc
xchg
push
mov
xor
sbb
pop
sub
lahf
mov
fsubr
cmp
mov
stos
shll
in
mov
or
fdivp
gs
enter
xchg
mov
mov
movsl
test
inc
and
addr16
repz
push
xchg
mov
xchg
dec
push
xchg
or
stc
dec
sbb
in
test
js
movsb
xchg
cmpsb
add
mov
sub
push
sahf
xchg
mov
mov
add
shr
xchg
push
push
into
out
cmpsl
lock
stos
enter
call
xchg
jg
cmp
out
jnp
sahf
add
testb
rcll
into
jmp
sub
inc
enter
cld
lahf
adcb
mov
fsubr
inc
lret
adc
dec
mov
shll
jbe
aad
push
jb
mov
cmpsb
fcomi
sbb
jno
and
data16
xchg
paddsw
or
imulb
pop
fs
xchg
out
popa
cmp
sub
xlat
mulb
or
jmp
filds
test
mov
lret
das
or
js
fcom
mov
pop
mov
mov
mov
xchg
testl
lret
out
sbb
hlt
ret
mov
push
es
xlat
fildl
loope
mov
and
sub
fisttpll
cmp
jp
and
mov
leave
jmp
lcall
outsb
fisttpl
xchg
pop
jmp
int3
mov
jmp
loop
push
fcmovnb
test
mov
pop
roll
xchg
dec
mov
mov
fwait
mov
pop
sbb
pop
mov
popf
pop
dec
fucom
inc
xchg
test
and
xchg
aaa
pop
sbbl
rcl
pop
aam
push
loopne
xchg
stos
pop
add
adc
push
pop
pop
notb
dec
les
popf
sbb
sbbb
pop
xchg
lret
push
inc
test
sub
or
push
scas
sub
cmp
mov
out
dec
xchg
fnstenv
es
repz
shrb
das
cltd
jbe
imul
cmp
push
les
cmc
pusha
test
sbb
jns
cmp
sbbb
jg
mov
mov
dec
je
loop
jge
sub
mov
and
xor
adc
dec
out
cli
les
xchg
lock
dec
aad
sbbb
xchg
and
inc
imul
repz
push
shll
roll
sub
adc
leave
data16
fistps
push
insl
mov
push
test
pop
inc
push
cli
test
adc
outsb
arpl
int3
xor
stc
out
xor
mov
xor
out
cmp
push
cmp
pop
cmpsl
movsl
or
test
incl
adc
sbb
or
cwtl
and
mov
out
in
dec
fldenv
test
pop
jecxz
mov
xchg
fsubr
cmp
xchg
pop
sub
lods
dec
cmp
cwtl
xor
outsl
andb
clc
pop
adc
mov
negl
lods
pop
add
clc
jae
gs
shrl
sub
cmpsb
sub
js
jb
lods
das
pop
loope
xchg
aaa
xchg
sub
inc
mov
int
iret
and
jecxz
iret
test
gs
jb
ret
mov
sbb
adc
xor
hlt
test
inc
inc
out
fcomps
mov
inc
int3
jecxz
shll
scas
or
pop
mov
add
popa
sbb
mov
adc
inc
ja
cmp
clc
cmp
aad
leave
stos
roll
jbe
dec
xchg
es
xchg
fs
in
mov
test
mov
xor
aas
inc
loope
or
sahf
jecxz
popa
out
mov
sarl
loop
xor
int3
mov
test
imul
sub
adc
xchg
xchg
mov
dec
imul
sbb
rcrb
mov
gs
je
js
pop
iret
ss
cwtl
sarb
xor
test
popa
xor
test
push
push
add
add
xchg
pop
test
nop
cmc
dec
shll
adcl
add
mov
ds
mov
push
inc
sahf
mov
sub
lods
jg
sbb
fwait
out
and
mov
jg
scas
fstps
insb
jl
int3
ljmp
stc
rcrl
shl
mov
aaa
xor
xchg
mov
lret
repnz
out
js
stos
in
mov
test
mov
clc
ret
popa
aad
mov
and
inc
jle
mov
mov
jmp
iret
stc
js
and
insb
mov
aam
pushf
insl
ret
cwtd
aas
jns
scas
sub
mov
pop
fyl2x
mov
jecxz
xchg
sub
inc
repz
stc
fnstsw
add
sub
mov
out
mov
popf
xor
cmp
pop
adc
dec
and
arpl
sub
mov
mov
mov
scas
subb
out
adc
inc
mov
inc
jecxz
xchg
int3
jp
dec
lcall
hlt
lea
call
fisubrs
scas
in
dec
dec
xor
int3
cmpb
or
aaa
mov
mov
stos
jp
and
js
dec
sti
test
fisubl
and
mov
sbb
es
sub
popf
jno
ljmp
cmp
jge
mov
inc
subl
mov
fwait
sbb
ret
pcmpgtd
or
sti
mov
mov
sub
scas
lods
and
outsb
jmp
addr16
lea
pop
push
out
adc
mov
jb
je
pop
loop
shl
jo
xor
fwait
sbb
mov
lret
and
push
pop
mov
stc
in
aad
cmp
ret
xor
mov
push
ret
jecxz
fnstcw
xor
jg
into
sub
mov
sbb
xchg
xchg
mov
aas
sbb
and
lcall
icebp
and
loopne
pop
loopne
sarl
mov
fcomps
jmp
rcll
fcomip
aas
pop
loopne
ss
mov
sub
sbb
mov
adc
rcl
dec
lret
jnp
data16
pushf
ret
lret
sbb
test
adc
mov
int
repz
or
push
jg
push
es
ja
stos
in
rcrl
sti
jae
mov
stos
jmp
jne
and
mov
push
sbb
mov
jns
xor
jge
pop
inc
sbb
jbe
dec
aam
aaa
cmp
mov
pop
arpl
fwait
loop
fcompl
sbb
stos
jns
fildll
pop
mov
push
outsb
pop
js
or
dec
inc
fmuls
xchg
psllq
pop
inc
pop
push
sbb
shrl
cmp
sbbb
xor
cmp
mov
cmpsb
popf
mov
cwtl
movsl
enter
hlt
add
sub
xor
push
or
lret
mov
mov
add
bound
imul
lcall
aaa
xor
pop
ljmp
les
jmp
and
mov
mov
aad
and
push
cmpb
mov
shlb
and
aad
sub
inc
ret
adc
jmp
fs
aad
and
pop
leave
mov
cmp
faddl
jg
fisubl
loopne
ss
sbb
mov
inc
call
lds
leave
shrl
dec
mov
ret
cmp
cld
or
in
scas
popa
xchg
sbb
jns
lods
jbe
xchg
in
mov
mov
fiaddl
test
test
imul
hlt
adc
repz
mov
movsb
mov
rorb
mov
and
fsts
into
shrb
jmp
fst
lret
sbb
cltd
stos
mov
push
xor
std
pop
mov
cmp
out
aam
cltd
mov
cmp
pop
dec
push
dec
pop
dec
movsl
lds
and
pop
sar
shlb
mul
es
mov
cli
stc
call
out
ret
mov
std
push
sub
roll
add
int3
outsb
clc
loopne
add
dec
repz
xor
mov
icebp
inc
fnstcw
fcmovu
loopne
outsb
fcomi
dec
scas
xchg
out
mov
cmp
pop
mov
ror
pop
insl
ficoml
movsb
xchg
ss
int3
push
push
sbb
add
shll
mov
test
sti
in
mov
mov
leave
mov
cmp
push
mov
mov
jmp
mov
cmc
jge
xor
push
outsb
pop
addl
shll
popa
negl
push
mov
std
pop
cmpsb
sub
outsb
notb
xchg
xchg
loopne
lock
cs
por
mov
xchg
add
test
push
hlt
mov
mov
pop
divb
fsubrl
push
stos
out
mov
popa
pop
lods
cld
xchg
pushf
pop
sti
outsb
xor
ljmp
adc
xchg
cmp
shrl
mov
divb
or
orl
adc
mov
xchg
stos
mov
cmc
and
ret
fs
sub
pop
je
lods
add
loope
aas
je
xor
adc
or
dec
and
jno
insl
aaa
mov
inc
hlt
bound
outsl
loope
stos
mov
pop
xchg
cmp
cwtl
sbb
es
cmpb
push
mov
lcall
fnstsw
loopne
push
sbb
js
add
dec
push
mov
dec
rcll
mov
andl
pop
nop
ljmp
xor
jnp
loop
call
or
cmp
ja
fs
xchg
mov
mov
add
push
jmp
cmp
fdivrs
lods
xor
lods
out
shrl
adc
sbb
repnz
mov
daa
aam
das
int3
mov
stos
sarl
into
in
jo
sbbl
jmp
nop
mov
sub
into
stc
push
adc
xor
idivb
inc
jmp
loopne
out
pushf
hlt
ret
mov
jnp
icebp
mov
dec
repnz
xchg
popa
inc
aas
out
out
mov
sbb
outsb
mov
dec
pop
loopne
dec
daa
fsubl
cmp
adcb
sbb
cmp
cld
adc
inc
jo
popf
les
xchg
mov
pop
lahf
ja
idivb
hlt
in
call
andl
adc
sbb
dec
stos
mov
xchg
and
lret
imul
mov
out
mov
push
adc
stos
enter
mov
faddl
sub
pushf
adc
xchg
pop
arpl
movsl
js
add
out
dec
push
ret
ds
lahf
and
fs
test
inc
pusha
mov
test
cld
pop
or
dec
and
jmp
inc
pop
imul
jns
sarl
add
jmp
adc
inc
les
inc
xchg
andb
cwtl
push
call
test
outsb
andl
stos
jmp
shrl
xchg
in
xchg
test
lret
xor
sub
sbb
outsb
lea
testl
cmpsb
int
sbb
jne
aaa
pusha
sub
lods
dec
jb
popf
pop
test
ret
xchg
repnz
cmpsl
das
xor
mov
inc
lret
sti
and
inc
xchg
pop
mov
fistpll
inc
pop
adc
stos
notl
int
repz
mov
lret
insb
push
fmul
dec
mov
dec
cs
sti
and
aas
shrb
adc
sbb
in
dec
mov
xorb
pop
test
sbb
push
repz
xchg
cmpl
mov
outsb
cmp
xlat
pusha
shll
inc
add
jne
sbb
lret
jae
or
popa
pslld
jb
push
sbb
sbb
cmpb
jae
push
mov
stos
mov
std
into
shl
jo
xchg
pop
mov
push
mull
jmp
dec
push
xlat
dec
push
movsl
add
jl
and
push
sahf
outsl
cli
or
mov
out
mov
lret
inc
hlt
sbb
sbb
out
mov
add
or
sti
in
das
mov
cmp
out
adc
aaa
test
jmp
addr16
cmp
cmp
jns
out
or
inc
sbb
aam
cmp
and
add
popf
xchg
test
jle
rcl
dec
jmp
inc
xor
dec
das
sub
repnz
or
and
bound
bound
or
ljmp
sbb
mov
in
cmp
jbe
in
lahf
jge
call
fisubrl
stc
jne
fistl
mov
pushf
mov
out
testl
aas
pop
leave
repnz
test
mov
in
push
addr16
push
pop
sti
push
je
xchg
pop
pop
sahf
xor
sbb
enter
push
sarl
pushf
push
adc
jb
xchg
sub
jmp
cmp
fsubrs
nop
icebp
mov
pop
mov
loopne
je
add
je
dec
ret
sub
repnz
jno
sbb
adc
outsb
inc
xor
rorl
cmp
sbb
cmp
or
xchg
mov
cmp
and
sub
jo
std
cmc
jae
pop
xor
iret
inc
aas
mov
push
mov
clc
iret
mov
lods
add
js
mov
rorl
jecxz
xchg
jnp
jnp
or
lret
cmpsb
pop
loop
in
and
xor
sbb
pop
popf
aam
mov
andb
mov
test
mov
cwtl
ss
test
call
mov
gs
sub
mov
out
fcomi
loopne
xchg
mov
push
mov
dec
subb
mov
notl
or
sti
xchg
jb
roll
imul
xor
xlat
push
push
mov
aam
xor
int
xorb
ds
mov
xchg
hlt
adc
mov
cs
xchg
imul
fs
fwait
popf
mov
imul
xchg
push
sahf
imul
lods
mov
or
mov
inc
bnd
cli
dec
mov
push
dec
repnz
negb
pop
push
cmp
out
push
std
mov
mov
mov
mov
pop
popf
sahf
mov
insb
mov
sub
hlt
jmp
vandnps
cmpsb
ja
ss
add
test
into
mov
jns
mov
stos
xchg
xchg
dec
leave
movsb
or
inc
neg
jo
mov
sbb
aaa
push
mov
cmpsl
je
shll
ret
mov
arpl
andb
xchg
cmp
push
add
xchg
clc
in
dec
ret
in
outsb
js
adc
mov
jo
mov
add
popf
sbb
jnp
xchg
add
and
dec
gs
sbb
xchg
cmp
mov
aas
sbb
popf
addl
pop
shr
mov
icebp
inc
and
test
inc
and
and
adc
movsb
sub
imul
mov
cmpsb
xlat
int
jo
fnstenv
psubusb
popa
mov
lea
mov
xlat
sub
jns
push
je
lahf
xchg
dec
xchg
fstpl
nop
loop
loope
je
fwait
mov
and
pop
add
pop
cmp
mov
xorb
cltd
or
or
xchg
nop
out
aaa
sahf
outsl
flds
or
add
jle
call
adc
movsb
lret
jmp
push
andl
cmc
mov
mov
pop
pop
cmp
sub
inc
jne
les
push
or
mov
xor
pop
dec
xchg
adc
xor
mov
fsubr
lea
xor
mov
inc
cmp
aam
cmp
je
out
adc
jmp
pop
sti
xchg
pop
mov
adc
mov
xchg
subb
insl
jae
mov
out
mov
jnp
rcll
and
jmp
mov
fmull
dec
sbb
shll
jecxz
test
das
popf
test
xchg
push
xor
pushf
into
aaa
sub
rcll
loopne
add
mov
xlat
int3
bound
test
movsl
mov
cmp
imul
loopne
loope
les
popa
inc
jl
lods
out
mov
adc
jae
jne
aaa
ja
inc
fwait
notl
out
mov
ficoms
xchg
in
pop
sub
stos
and
into
stos
fcoml
mov
mov
std
dec
mov
lods
mov
dec
sbb
mov
jns
loope
dec
js
fwait
clc
rorl
mov
test
clc
sub
loope
pop
xchg
pop
stos
fsts
mov
add
pop
push
test
scas
and
cmpsl
jmp
jle
adc
addr16
pusha
insl
xchg
sub
popa
cmpsb
test
sarl
scas
lcall
aad
add
sbb
bound
pop
aaa
xlat
mov
xorl
cli
xchg
gs
push
loop
shlb
lock
xchg
into
rcrl
cmpsl
shll
sti
sbb
mov
aaa
fwait
pop
test
sub
aaa
loop
jmp
shrl
add
popf
sbb
xorb
repnz
stos
mov
xchg
adc
jp
leave
insb
enter
stc
ja
pop
mov
jae
inc
mov
popa
pop
testb
adc
test
xchg
inc
adc
loope
pop
adc
pop
mov
popa
dec
jns
jg
and
daa
jbe
pusha
sbb
lds
add
add
movsl
dec
or
push
xor
mov
push
je
pop
stos
pop
shl
dec
push
leave
sbb
push
popf
add
leave
or
xchg
jno
pushf
inc
cmc
add
dec
mov
mov
testl
js
xor
ss
outsb
mov
movsl
xchg
rorb
loop
mov
popa
xchg
xor
insl
jno
push
cltd
mov
and
call
mov
rolb
mov
lea
divl
or
sbb
rol
mov
mov
xor
cmp
push
je
mov
loope
int3
xlat
mov
pop
outsl
inc
mov
xchg
sbb
lahf
adc
or
jbe
stos
inc
fst
xchg
repz
shll
mov
lea
push
nop
cmp
mov
rcl
jmp
xchg
fistl
or
or
test
mov
mov
cmp
es
loope
mov
pop
lret
inc
andl
popf
ljmp
fidivs
cmp
mov
sub
aam
je
lods
leave
mov
sbb
lcall
xor
xchg
out
mul
mov
sub
xor
popa
dec
sbb
inc
inc
xor
lcall
cmpl
push
out
xchg
insb
mov
js
xchg
rorl
insb
xchg
inc
rorl
mov
cltd
sbb
jne
push
jmp
adc
shr
mov
dec
mov
add
ret
lock
push
jne
shrb
and
or
fists
cmp
and
or
mov
dec
inc
xchg
mov
xchg
das
stos
mov
xchg
mov
outsl
ret
inc
sti
pop
ficompl
xchg
pop
cli
inc
mov
cs
sbb
mov
aaa
dec
imull
mov
add
faddl
fldt
mov
sbb
mov
loopne
dec
and
ficoml
pop
fsubrs
inc
inc
jae
and
shr
cltd
jbe
cmp
out
dec
leave
movsb
xchg
neg
xchg
inc
mov
add
xor
loop
dec
mov
pop
mov
xchg
and
mov
or
xor
imul
mov
mov
jae
iret
dec
sub
sarb
xor
je
mov
lds
ss
push
xchg
and
loop
popf
insb
xlat
sbb
jg
popa
mov
lret
mov
mov
addl
mov
stos
cwtl
leave
push
sub
pop
je
mov
sub
xchg
xor
jmp
enter
mov
cmp
cmp
mov
inc
mulb
xchg
sub
mov
mov
mov
add
adc
leave
pushf
sbb
pop
push
push
aas
add
sbb
pinsrw
adc
mov
mov
mov
dec
rolb
sbb
mov
in
cmp
je
cmpsl
mov
loopne
mov
filds
mov
mov
in
adc
addr16
ss
dec
insb
xchg
aas
cmp
fmull
or
pop
mov
ja
mov
testl
push
mov
popa
cmpsb
test
pop
loopne
in
cmp
mov
inc
pop
mov
xor
push
ds
mov
lods
xor
aas
dec
fmulp
cs
xchg
repnz
cs
xor
enter
fs
fbld
fsin
xor
sub
mov
xlat
data16
lcall
lods
mov
faddp
or
iret
xchg
mov
mov
repnz
push
pusha
jo
rcr
aaa
xchg
mov
jge
sbb
lret
stc
inc
xor
out
pop
lcall
jae
sahf
mov
add
stos
cmc
fdivrl
xlat
insl
xchg
iret
bound
sbb
adc
clc
xor
test
loopne
and
jne
jo
outsl
sbb
popa
outsl
enter
jle
pop
aad
cmp
cli
repz
out
idivb
xorb
jne
dec
es
mov
aas
mov
mov
fmull
and
push
add
lret
arpl
pop
ss
jge
mov
pushf
sbb
xchg
pop
loop
jbe
cmpsl
cs
movb
pop
in
shlb
sub
es
mov
pop
hlt
dec
or
dec
push
add
fistl
cltd
in
sarl
stc
outsl
insl
pushw
lock
leave
sbb
rorb
or
mov
lea
divl
rcr
add
roll
test
stos
in
mov
test
test
dec
test
sub
inc
push
jbe
fwait
lahf
insb
xchg
xchg
fmul
add
mov
out
mov
xor
sbb
les
fcoml
hlt
aas
sub
dec
and
or
fimull
pop
xchg
mov
mov
pop
cli
jbe
movsl
movsl
aaa
sub
push
sub
test
loop
dec
inc
loop
xchg
fcompl
mov
dec
div
mov
xchg
cmp
inc
mov
test
pop
cs
xchg
xor
rcl
dec
incl
rcll
pop
sahf
xor
sub
shll
aam
dec
js
pop
test
xor
outsl
lret
dec
pop
addr16
and
push
call
out
sub
xor
lahf
inc
cli
push
stos
rcll
negb
and
test
xor
pop
test
aad
test
pop
je
lods
addl
xchg
popf
out
and
call
js
sub
sbb
test
out
pop
sbb
mov
loope
loop
shlb
bound
jbe
imul
fincstp
test
in
cmpsl
adc
mov
dec
cmpsb
jp
das
aad
adc
push
push
jnp
or
cmpsl
movsb
shll
xchg
lods
jnp
mov
shl
jmp
jp
iret
or
jbe
lret
cltd
pusha
or
enter
push
and
fstl
or
push
sub
popa
xchg
scas
leave
lea
jae
sub
arpl
pop
ret
ret
sub
xor
mov
faddl
fwait
mov
movsl
adc
jp
push
pop
push
sub
testb
push
sub
xchg
jb,pt
xor
sub
lret
iret
xchg
cmpsl
jp
jmp
pop
ds
sti
mov
mov
sarl
mov
push
mov
lret
mov
les
add
ja
das
pop
stos
insl
outsl
in
iret
cwtl
movsl
jecxz
cmp
aam
stos
fisttpll
lcall
bound
stos
rcl
sub
jbe
or
pop
lahf
dec
test
xchg
inc
mov
jmp
jae
mov
adc
movsl
loopne
rcrb
mov
leave
and
iret
sub
test
out
rcrb
test
add
fistl
pusha
test
mov
xchg
jb
loopne
and
mov
pop
inc
out
mov
inc
xor
jne
cs
js
mov
cmp
sbb
mov
sub
nop
sbb
xor
icebp
mov
lret
mov
pop
mov
adc
jnp
push
test
xor
dec
jae
sub
loop
mov
jp
mov
fmull
dec
push
int3
sbb
rcrl
cmp
xchg
or
and
idiv
rorb
data16
cmp
test
xchg
pop
xchg
loop
aad
jno
mov
pop
mov
iret
add
xor
mov
addr16
fstpl
mov
shl
sti
mov
add
imul
dec
pop
fcmovnb
sub
adc
daa
insl
xlat
frstor
loope
in
movsl
and
mov
jp
leave
cmp
mov
les
jae
mov
sarb
inc
in
mov
or
icebp
pop
lcall
pop
cmpl
adc
mov
cwtl
pop
cmp
movsb
inc
or
jl
push
stos
cld
sarb
mov
stos
addr16
jmp
pop
mov
or
and
stos
sbb
push
je
inc
cmp
roll
fiadds
and
pop
nop
insb
xor
adc
aas
dec
out
test
pop
xrelease
add
mov
cli
test
xor
fisubrl
or
test
mov
push
xor
leave
mov
loope
dec
and
xchg
push
cltd
aam
mov
jne
jmp
out
mov
and
jle
in
test
sti
enter
pop
inc
cmp
cltd
sbb
pop
pop
test
jae
dec
pop
test
leave
mov
dec
push
fcompl
sub
lret
sub
dec
stos
mov
xchg
inc
inc
sbb
cltd
and
cli
inc
jp
adc
shl
xchg
push
sar
sbb
mov
loop
dec
dec
lds
test
call
or
pop
mov
sbb
dec
out
jno
rcll
movsl
rcl
shll
leave
mov
cmp
pop
mov
loop
mov
loopne
lock
or
or
notb
sub
add
cmpsl
mov
icebp
jae
repnz
dec
mov
mov
mov
cs
mov
fmul
gs
add
xchg
mov
inc
mov
lods
add
stos
cmpsl
aaa
ss
jg
repz
stos
hlt
enter
cmp
orb
push
into
mov
insb
fyl2x
jg
or
mov
push
out
xchg
mov
cmp
ret
cmc
inc
adcl
repz
cmp
xchg
mov
loop
pusha
sub
test
mov
mulb
out
mov
int3
pop
or
and
mov
adc
xchg
lret
jnp
nop
push
fs
insl
xor
jle
fdiv
rol
dec
mov
test
mov
lds
jmp
mov
les
negb
or
leave
mov
dec
and
and
les
popa
test
inc
movntps
sbb
popa
imul
insb
dec
icebp
popa
mov
cmpsl
mov
punpcklbw
mov
mov
inc
cmp
das
jne
adc
test
and
ror
adc
push
dec
test
sub
mov
dec
mov
sbb
inc
outsl
loope
fcomps
cmp
sub
jo
or
dec
mov
divl
clc
xchg
sub
dec
xor
xchg
gs
cmp
fadds
cmp
cs
cmpb
pop
inc
jecxz
mov
ficompl
push
and
jae
test
into
lea
stc
loop
mov
fnstenv
xchg
loopne
mov
andl
adc
scas
leave
cmp
data16
loopne
cs
mov
scas
outsb
xorb
test
das
lcall
outsl
sbbl
outsl
jo
inc
xor
cmp
mov
stos
xor
mov
outsl
add
sub
fs
or
hlt
icebp
pop
es
mov
pop
cmp
loop
sbb
dec
sub
popf
mov
push
fldcw
inc
and
daa
cmp
adc
pop
das
mov
xor
mov
cwtl
lcall
pop
rcrl
cmp
xchg
clc
add
add
push
sbb
jno
fisttpll
dec
loop
and
nop
adc
aam
or
xchg
dec
cmp
mov
sub
jne
popf
push
cmp
out
ret
add
inc
loop
outsb
imul
or
mov
frstor
dec
lret
xchg
rcrl
out
mov
pop
jmp
push
ss
fwait
dec
xchg
cmp
pushl
sbb
xlat
lret
ss
lret
aad
jo
xchg
sbb
adc
mov
lods
lock
test
sub
mov
inc
ljmp
or
test
sub
mov
pop
fdivrl
cli
pop
pop
stos
adc
mov
nop
jle,pn
es
scas
popf
jbe
jp
in
adc
or
out
movsl
xchg
lds
push
movsb
je
lock
add
adc
pop
jecxz
stos
int
icebp
mov
lea
hlt
cli
add
dec
jp
jne
mov
aas
xchg
mov
insl
mov
sarl
jg
push
mov
pop
cmp
mov
fs
sarb
xchg
jl
mov
popf
lods
add
fwait
mov
cltd
pushf
or
in
test
add
jae
jnp
aas
or
inc
aas
mov
leave
push
inc
lcall
sub
andl
jecxz
pop
in
and
xchg
dec
sub
mov
and
xrelease
ret
mov
cs
mov
push
pop
fwait
xchg
mov
test
add
push
addb
or
shrb
fucomi
jo
sbb
popf
and
lock
jb
sti
mov
in
xor
andb
sub
mov
cltd
mov
mov
or
jne
xor
aad
movsb
int
mov
out
ljmp
sarl
lods
cmp
mov
mov
pop
movsl
test
mov
and
mov
jae
ss
int3
mov
xchg
mov
sbbb
xlat
or
dec
cltd
popa
mov
je
dec
test
mov
push
jle
cwtl
or
icebp
jbe
push
add
cmp
test
push
das
mov
ss
push
sub
mov
push
es
lods
sbb
mov
xor
fwait
stos
out
mov
jl
aas
mov
rcll
mov
pop
jp
or
and
loope
inc
mov
push
mov
and
push
mov
fs
sbb
cmp
cltd
jp
js
adc
mov
int
push
int3
mov
enter
shrl
mov
fstpl
gs
push
jecxz
cmpsb
je
clc
add
lea
xchg
inc
xchg
add
cmp
mov
mov
add
fnsave
cmp
mov
inc
aas
adc
push
inc
addr16
adc
ret
pop
push
pop
jg
mov
std
pop
mov
pop
mov
sbb
shll
xchg
ret
clc
mov
dec
xor
sbbb
icebp
jmp
aas
cmpsl
test
pop
out
inc
and
xor
jne
negl
jo
in
cmpsb
int3
and
sbb
inc
mov
cltd
sar
cmp
dec
xor
mov
es
ja
loop
sub
cmc
aas
pop
pop
mov
loope
jo
sub
cltd
cmpsb
icebp
fldenv
add
sub
xor
xchg
push
in
xor
sbb
jp
in
idivb
pop
mov
cmpsb
xor
out
imulb
or
and
mov
sbb
rcll
mov
loopne
sub
mov
gs
lds
mov
sub
fists
dec
fs
repnz
cli
mov
mov
mov
xchg
data16
scas
pop
add
js
mov
mov
cmp
mov
shll
call
icebp
out
add
std
mov
rorb
lock
add
mov
mov
mov
sub
mov
mov
mov
js
mov
jae
jmp
dec
sti
adc
adc
mov
xchg
outsb
jp
sub
mov
stos
clc
jae
movsl
popf
sub
adc
xor
dec
out
cmpsb
lahf
imul
cltd
aam
adc
mov
jae
pop
mov
sbb
xchg
inc
dec
and
lock
popf
les
jmp
mov
push
sbb
pop
pop
das
roll
xorl
cmpsl
and
dec
cs
push
mov
xchg
dec
push
mov
mov
in
mov
sti
rol
xchg
sbbw
inc
mov
inc
data16
mov
cltd
pop
xchg
pop
inc
test
mov
inc
jne
shlb
adc
mov
mov
pop
insb
psubd
push
cmp
into
inc
cs
jne
hlt
out
into
cltd
sub
sbb
out
cmpsl
aas
inc
or
sub
xchg
shll
pusha
fsubp
lds
loop
out
aam
xchg
int3
xor
xlat
add
test
outsb
aaa
insb
gs
lods
push
fwait
mov
xor
notl
sarl
dec
lret
enter
mov
pop
inc
es
std
popl
sti
sub
hlt
sub
repnz
add
push
mov
inc
loop
cmp
bound
push
xchg
outsb
inc
lret
and
in
or
pop
mov
cmp
xchg
ss
pop
xchg
xchg
mov
mov
dec
pop
xor
add
iret
push
and
pop
fbld
inc
inc
in
data16
push
fmuls
dec
loop
cmp
or
in
xchg
pop
adc
mov
int3
shrb
das
cmpb
mov
fisttps
sbb
ficoml
mov
in
adc
mov
fs
xlat
aaa
es
pushf
stos
xlat
mov
dec
lret
jns
xchg
mov
push
sub
shrb
push
repz
mov
xchg
push
and
inc
jge
and
negl
cmpsb
inc
dec
rolb
push
mov
dec
xchg
xchg
xchg
push
inc
lcall
pop
cmp
and
mov
cmpsl
shrl
sbb
pop
cmp
add
sbb
es
mov
scas
test
fdivl
mov
outsb
adc
adc
xchg
inc
out
dec
sahf
push
cmp
adc
mov
cld
mov
cli
outsb
cmp
jne
xchg
sbb
je
lahf
loop
and
cwtl
mov
mov
scas
mov
insb
or
and
testb
xor
sbb
cmp
xor
adc
in
dec
xor
xor
popa
push
cltd
inc
fsubl
aaa
std
sub
in
mov
movsb
and
jg
inc
mov
cmp
test
mov
xchg
addr16
mov
jmp
loopne
loop
hlt
popf
mov
mov
rol
mov
dec
lock
and
sub
jo
or
ds
jb
hlt
jns
sub
mov
push
pop
lret
outsb
stos
cld
pop
gs
in
outsl
lds
xor
push
or
mov
push
adc
sub
xchg
or
das
pop
sarl
xchg
jmp
andb
fsubrs
iret
shll
rorb
adc
push
cmpsl
cmpsl
add
mov
inc
jne
mov
shr
ds
mov
enter
sti
call
cmp
pop
divl
mov
ret
xor
insb
push
leave
or
push
sub
mov
mov
inc
inc
into
xchg
ret
sub
test
mov
out
push
ja
add
aam
sbb
cwtl
test
xchg
ljmp
aaa
jnp
push
and
lea
test
rorl
in
fimuls
mov
push
dec
int3
xchg
sahf
jge
outsl
rcrb
xchg
jns
les
mov
shll
sub
insb
adc
in
rol
sti
sub
mov
fnstenv
aaa
push
xchg
daa
and
jg
cmp
sub
fwait
mov
adc
dec
loopne
mov
js
cmp
mov
stos
lahf
jns
jns
jecxz
or
js
sahf
push
mov
mov
dec
and
ja
add
dec
xorl
jb
inc
popf
das
aaa
inc
aad
sub
sarb
clc
imulb
rolb
mov
mov
lcall
ficompl
push
inc
popa
mov
cmpsb
mov
movsl
bound
loop
xor
test
or
push
xor
cmp
scas
idivl
lods
arpl
int
add
shl
stc
adc
or
stos
jnp
and
sbb
jg
adc
movsb
cmp
loopne
scas
xchg
sub
jge
push
imul
pop
jg
int
push
call
dec
sub
add
clc
mov
sar
aas
ret
jo
movsb
lret
sbb
fnstcw
and
dec
fsts
xlat
pop
mov
stos
mov
xchg
dec
mov
mov
addb
jae
lods
xchg
mov
lods
imulb
dec
pop
pusha
xchg
movsb
jg
jne
shll
inc
dec
dec
es
addb
push
xor
roll
or
cmpsl
xchg
xchg
in
xor
pop
leave
movsl
xor
das
push
fcomps
popa
jle
movsb
push
jnp
stc
frstor
mov
push
sahf
sbb
mov
or
mov
adc
pop
in
and
test
sbb
xchg
xchg
call
notb
xchg
cmp
pop
cmpsl
inc
es
inc
sbb
mov
iret
sarl
and
mov
fwait
inc
enter
mov
out
pusha
xchg
xor
imul
leave
lods
in
dec
repnz
mov
mov
mov
ss
incb
cmp
aas
mov
dec
mov
orl
jae
leave
cs
ds
xchg
jae
xchg
sbb
or
jb
shrl
stos
dec
lahf
pushf
add
pop
xor
lcall
mov
adc
push
int
popa
mov
les
mov
mov
mov
push
mov
cmpsl
call
jae
sti
jg
rolb
lods
and
rclb
jl
test
fsts
pop
cltd
es
jb
pop
cld
sbb
adc
cld
mov
mov
dec
mov
cmpsl
loope
mov
mov
lret
sbb
xchg
xlat
outsb
mov
xchg
sbb
sub
and
adc
repz
push
lock
aad
push
arpl
sub
out
adc
mov
call
or
lahf
lock
mov
jne
inc
xchg
sbb
ljmp
icebp
xchg
repnz
es
cmp
rcll
stos
cmp
shlb
in
scas
nop
mov
jae
into
loope
test
out
xchg
sbb
lods
push
mov
jmp
jmp
jne
adc
jmp
outsl
mov
dec
or
cmp
ret
jge
push
and
or
mov
outsb
xor
xchg
mov
xchg
xchg
call
xchg
mov
jbe
mov
cmp
jp
lock
loop
sbb
sbb
xor
cmpsl
sbb
andb
cmp
divl
cmp
imul
xlat
and
xchg
dec
xchg
jle
loop
xchg
rcrl
test
pop
in
pop
and
cwtl
hlt
mov
sbb
rcr
mov
outsb
jb
cltd
push
mov
add
inc
iret
adc
add
push
lea
mov
ja
dec
stos
imul
leave
add
mov
or
orl
or
pop
mov
lret
sbb
xor
cltd
cltd
or
sahf
stos
leave
iret
push
cmp
test
mov
fwait
mov
xchg
fwait
test
pop
jbe
inc
cmp
out
cmp
ret
adc
xchg
jg
negl
xchg
sub
mov
les
push
lahf
rorb
xchg
test
mov
shll
mov
loopne
adc
repnz
dec
xor
and
mov
xchg
into
daa
and
sarb
pop
jmp
fsubrs
lahf
not
popf
cmp
cmp
rolb
cmp
dec
insb
fwait
rcl
loope
jae
mov
wbinvd
iret
ret
int3
mov
jmp
xor
test
bound
insl
rorb
fnstenv
out
mov
cmp
sarb
nop
add
ret
nop
into
fwait
jmp
add
jl
push
mov
push
mov
test
push
jns
push
roll
incl
xchg
hlt
lcall
mov
push
push
test
arpl
leave
mov
push
aas
mov
mov
mov
mov
lret
mov
xchg
les
sub
cltd
push
in
hlt
mov
repnz
mov
leave
push
subl
arpl
pop
sbb
mov
sbb
mov
test
icebp
xor
mov
pop
lret
jb
adc
mov
or
ficomps
xor
or
cmpsb
hlt
out
aas
daa
xorl
fsubr
sar
add
loopne
call
loopne
sti
nop
stos
and
notb
aas
popf
add
push
pop
mov
sbb
sub
bt
dec
and
add
xchg
fs
mov
cs
jbe
cltd
sbb
xchg
mov
sub
rcr
orb
out
or
jmp
pop
inc
mov
loopne
or
push
cwtl
xchg
and
loop
xlat
repnz
es
sbb
mov
cmc
xor
outsb
inc
push
js
or
push
leavew
mov
push
push
xchg
sub
pop
xor
sub
bound
leavew
or
imul
sub
mov
loopne
add
mov
mov
rorl
sub
imul
lahf
icebp
test
loope
push
lahf
popa
into
push
frndint
outsb
aam
cmp
adc
js
bound
jg
test
adc
hlt
xchg
dec
xor
mov
outsl
loope
sub
loopne
insb
arpl
out
mov
pusha
jp
popf
dec
gs
int
ret
stos
rcl
ja
lret
popf
inc
xchg
imul
mov
mov
push
movsl
xchg
aaa
mov
lcall
and
jl
stos
mov
add
into
xor
sbb
push
mov
xchg
sbb
addb
leave
js
daa
fcmovnbe
xor
jp
push
bound
jne
out
movsl
xor
push
repnz
scas
jmp
aad
xchg
fwait
xchg
jb
or
push
or
mov
rclb
and
cs
dec
movsb
push
dec
scas
nop
fimull
push
sub
xor
aas
mov
fwait
out
fisubrs
ljmp
pop
push
and
daa
sub
daa
inc
jge
ret
mov
stos
ds
xchg
je
fucomi
popa
stos
bnd
fwait
pop
fidivs
mov
fwait
sub
fiaddl
mov
push
jmp
jg
pop
cmp
mov
popf
rolb
rorb
jno
sbb
cmc
daa
push
ds
adc
flds
std
imul
fwait
pop
push
or
xor
outsb
sub
in
and
jl
pusha
scas
aas
jns
inc
stos
sub
fidivl
stos
push
roll
nop
movzbl
iret
iret
jmp
or
pop
jo
push
dec
cltd
push
sarl
mov
mov
fldenv
shl
push
xchg
push
and
xlat
aaa
rorb
jmp
das
mov
push
xchg
sbb
adc
xlat
int3
cmp
or
enter
dec
xchg
cli
or
pop
jmp
popf
ja
cmp
pushf
inc
pop
pop
outsb
ja
or
rcll
ds
jl
mov
pop
shll
xor
and
dec
in
enter
fsubrp
sub
cmp
aam
push
lcall
xchg
xorb
int3
xor
hlt
inc
jmp
int3
mov
stc
mov
xchg
add
or
call
inc
lock
rcrb
cld
outsl
movsl
mov
pusha
dec
out
cltd
sbb
lret
sbb
and
sub
pop
add
test
push
sti
je
mov
enter
mov
mulb
ss
rorl
dec
test
aas
fwait
icebp
and
jmp
or
or
pop
or
push
in
dec
xchg
insb
or
data16
pop
cwtl
xchg
out
pushf
mov
mov
mov
je
testl
push
cmpsl
loope
cmp
shll
pop
in
mov
dec
pop
jg
mov
and
xor
mulb
jns
cmc
clc
mov
into
or
out
cmpsl
jl
scas
jle
mov
movsb
enter
es
xchg
and
dec
loopne
jo
lds
xchg
xchg
pop
push
rcrb
mov
in
es
pop
test
je
mov
cmpsb
data16
scas
fs
xor
adc
push
hlt
pop
push
loopne
scas
or
mov
insl
xor
mov
inc
inc
inc
cvtps2pi
push
inc
cltd
pop
jle
loop
outsb
xchg
mov
cwtl
ret
jno
xlat
mov
sbb
sbb
cmp
pop
or
xchg
pop
test
jbe
rorb
adcl
ljmp
adc
jmp
mov
push
push
pop
test
test
push
iret
push
jo
push
imull
cmp
sub
or
xor
or
and
mov
inc
mov
xchg
popf
cmp
pop
sub
xchg
ss
stos
pop
jge
dec
repnz
or
daa
add
int3
fidivrl
jg
es
stos
loop
dec
push
mov
sub
das
movsl
aaa
xchg
rol
adc
test
sub
cmpsl
das
loopne
xor
add
mov
mov
in
mov
jbe
pushf
mov
lds
dec
inc
and
aas
lret
sub
dec
cmpsb
mov
rclb
ror
data16
leave
les
into
jbe
mov
xor
add
sbb
xlat
push
push
sti
push
cwtl
and
cmp
movsl
mov
hlt
mov
mov
pop
or
xor
inc
xor
dec
xchg
jns
add
loopne
mov
adc
xchg
mov
mov
xchg
in
movsb
add
cli
mov
and
jb
cmp
and
out
sarl
hlt
push
cmpsb
out
pop
xchg
xchg
addr16
pop
icebp
es
lock
rcrl
mov
xchg
dec
leave
jo
mov
mov
dec
test
mov
scas
adcl
mov
cmp
mov
xorb
nop
jmp
mov
push
js
cld
test
xorb
jmp
adc
jbe
jns
mov
adc
pushf
adc
jmp
or
les
out
cld
ss
fidivrs
movb
mov
mov
mov
mov
test
cmp
gs
sbb
mov
mov
ja
mov
and
dec
dec
shlb
dec
lds
cmp
xor
dec
test
adc
mov
fcoml
pop
and
cmp
mov
push
pop
ss
mov
xchg
inc
mov
and
jg
dec
add
mov
inc
push
or
cmp
ss
sub
icebp
je
mov
std
adc
fsubrs
push
xor
inc
jae
divb
xchg
in
push
lcall
hlt
push
daa
jae
subb
push
test
mov
insb
mov
leave
inc
iret
rcr
mov
ss
add
mov
mov
aaa
cmp
fisubrl
fists
nop
dec
inc
repz
dec
or
xchg
dec
loopne
lea
shrl
sbb
xchg
insl
fwait
pop
roll
je
lods
test
test
cmpsb
imul
jo
lea
movsl
inc
aad
fcmovnb
aaa
dec
push
cmp
imul
cltd
inc
je
stos
popf
lock
mov
cmp
mov
mov
aad
and
xor
sub
inc
mov
pop
cs
xor
sbb
and
negb
and
push
mov
dec
adcb
movsl
shr
xorl
icebp
xchg
push
xor
mov
data16
xchg
rcll
sbb
cwtl
imul
loop
sbb
inc
adc
aad
cli
test
xor
lcall
push
pop
xchg
repz
aaa
or
imul
jb
mov
sub
adc
ds
pop
mov
add
fdivl
add
repnz
cmpsl
mov
loop
sbb
insl
adc
and
movsl
dec
adc
add
adc
jbe,pn
test
sub
mov
jle
pop
mov
mov
sbb
dec
mov
cld
inc
lods
inc
loop
xchg
lahf
cltd
mov
sub
mov
push
mov
and
insb
scas
scas
xchg
loop
pop
jne
sbb
aad
jmp
ret
nop
xchg
leave
addr16
mov
outsb
mov
cmp
loop
pop
cltd
pop
lret
nop
data16
or
push
push
mov
xchg
or
out
stc
and
pop
cmpb
xchg
aas
jno
xchg
ss
testl
fucomi
ret
push
mov
lret
mov
insl
inc
xchg
jp
test
inc
cli
cltd
mov
stc
push
mov
lret
inc
and
adc
jnp
mov
or
cmp
push
cli
inc
inc
jne
out
cmp
add
divb
daa
divl
clc
lock
cltd
sti
push
inc
xlat
push
inc
ljmp
loope
xor
push
mov
xchg
js
mov
shr
nopl
out
mov
mov
arpl
lods
das
mov
mulb
mov
nop
mov
ret
add
sbb
shr
sub
mov
xor
mov
lods
mov
rolb
sbb
insl
cmpsl
jo
repnz
or
movsl
ss
xchg
mov
mov
shrl
push
sub
mov
or
data16
leave
inc
and
aas
push
add
push
mov
mov
mov
cmpsb
inc
mov
push
insb
fistps
mov
stc
loopne
xlat
mov
rcll
stos
xchg
in
in
pop
test
stos
loop
xchg
or
mov
inc
in
cmp
dec
sahf
scas
sti
mov
add
sbb
cs
pushl
rcrb
dec
and
sarl
nop
pushf
or
inc
sbbb
out
xor
mov
int3
icebp
jp
mov
sub
movsb
cmpsw
xor
mov
imul
xchg
fisubs
push
jae
es
jb
push
sub
sub
adc
ret
sbb
subl
inc
sbb
xchg
test
shlw
mov
aaa
sahf
jno
loop
mov
pop
rcl
xchg
push
jns
or
into
daa
cmp
in
imul
jp
fdivl
xor
cmp
add
or
xchg
jl
push
ss
mov
jl
xchg
jle
xchg
pop
pop
mov
lahf
test
sbb
fwait
xchg
dec
out
cmp
xlat
ret
dec
aaa
xor
insl
sbb
push
pop
inc
popa
dec
jle
adc
xchg
mov
inc
add
rcll
test
dec
mov
push
dec
xchg
hlt
pop
jl
sub
adc
or
pusha
and
into
mov
add
sub
shll
pop
into
mov
js
out
xchg
lods
aas
in
ss
insb
sub
mov
addl
fmull
pop
sub
cmp
cmp
mov
cmp
loopne
mov
jmp
push
jne
pop
movsb
mov
mov
dec
pop
dec
sbb
sbb
xchg
icebp
xor
sahf
loopne
je
sub
cmp
xor
mov
inc
inc
aaa
outsl
xchg
mov
xchg
mov
aad
mov
xor
push
jbe
outsl
stos
xlat
adc
adc
lds
jecxz
sbb
xchg
test
int3
popa
ds
and
hlt
sub
sub
sub
xor
fwait
test
sub
sub
pop
test
mov
fnstsw
mov
adc
icebp
clc
dec
cmp
push
xchg
cmp
in
mov
xchg
inc
stc
xor
imul
xchg
out
xchg
mov
ret
cli
jge
add
lret
mov
and
inc
insb
and
imul
inc
sti
inc
jp
push
lcall
loop
stos
dec
fadd
or
sarl
test
orl
lods
mov
roll
or
inc
adc
adc
mov
jmp
mov
mov
call
or
xchg
and
mov
ljmp
int3
rcr
jecxz
js
jp
sub
jo
xchg
aad
and
push
sbb
mov
push
and
push
mov
push
adc
xor
subl
popa
or
xlat
mov
repnz
je
xlat
roll
dec
pusha
cmp
xchg
sub
add
sbb
dec
adc
push
push
cltd
pop
inc
stos
push
and
fcompl
es
aam
imul
and
aad
out
and
adc
jb
xchg
ficoms
inc
push
or
sub
rolb
jae
sub
fsubrl
insb
aas
cmpsb
pop
fs
shrl
outsb
fsubr
add
sub
xchg
xchg
mov
inc
leave
sub
sbb
and
pop
mov
mov
mov
sbb
cmp
xor
pop
call
adc
cmp
inc
pusha
popa
jo
ds
clc
inc
cltd
sbb
loopw
inc
xor
rorl
lahf
loop
add
roll
stc
cli
das
push
jmp
pop
mov
shl
sub
mov
mov
xchg
orb
inc
mov
xor
insl
inc
push
push
mov
scas
inc
lods
mov
mov
andb
lret
hlt
jnp
imul
shll
xchg
scas
sub
cmp
pop
js
dec
push
mov
sub
pop
cli
sub
cmpsb
jae
dec
xchg
repnz
movsl
es
mov
mov
sbb
bsr
jae
jg
stos
pop
int
adc
popa
arpl
or
mov
rcll
push
jg
xchg
adc
pop
fwait
rcll
cmpsl
push
movsl
sub
or
and
aam
pop
mov
sbb
mov
add
mov
rcrl
arpl
in
aaa
pop
jecxz
jl
sahf
lret
xchg
adc
sti
dec
sub
jp
push
pop
pop
mov
aas
mov
rorl
jmp
sub
and
decl
rcrb
shll
mov
cmp
mov
sub
jp
adc
daa
stos
cli
mov
mov
data16
imul
adc
popa
mov
or
lcall
loop
xchg
and
mov
and
dec
pop
out
and
ja
xchg
mov
movsl
jne
or
add
add
pop
fnstsw
hlt
mov
pop
mov
cli
loopne
lock
inc
js
push
jno
mov
and
gs
js
and
int3
ret
pop
icebp
jns
test
dec
cld
pop
mul
data16
xchg
mov
xor
jae
pop
popl
jne
xchg
fldenv
xchg
das
mov
mov
adc
and
xor
cmp
sbb
movsl
mov
pop
dec
jle
or
cwtl
ficoml
insb
dec
outsb
xchg
mov
dec
movsl
xchg
mov
out
sarl
xor
scas
sbb
mov
add
test
dec
dec
pop
shll
jl
fwait
mov
add
ficompl
adc
mov
cmpl
ljmp
fwait
push
mov
in
loop
outsb
loop
arpl
and
mov
ss
mov
and
leave
loop
pop
push
adc
pop
push
mov
sub
mov
hlt
lcall
adc
insb
mov
inc
into
and
jns
aas
stos
inc
cmp
mov
add
icebp
imul
mov
aas
sub
sahf
adc
sbb
xor
js
popa
xor
loop
cltd
clc
shlb
mov
mov
pop
inc
xlat
mov
xchg
lods
jnp
mov
xchg
test
dec
add
call
mov
nop
into
jl
cmp
or
test
sub
iret
sbb
inc
lahf
or
or
add
sti
ja
xchg
fmuls
pop
dec
fisubl
enter
cwtl
loopne
push
fstpl
mov
lods
mov
inc
aaa
mov
pusha
pop
sarl
cmc
in
mov
insb
mov
cmp
lods
mov
jecxz
shll
sahf
in
mov
adc
ja
pop
cmpb
mov
popa
movsl
popf
cmp
leave
push
dec
stc
lods
mov
lret
mov
or
inc
rcrl
jmp
sbb
inc
hlt
cmpsl
lret
sub
aaa
adc
stos
xor
shrl
mov
popa
jnp
xchg
or
and
test
les
mov
mov
xlat
adc
pop
xor
and
or
js
mov
sar
cmpsl
aas
mov
sbb
aam
or
rorb
dec
popa
mov
insb
cwtl
and
fists
jnp,pn
jg
loopne
mov
mov
movsb
fs
mov
aas
inc
xchg
push
inc
cwtl
lods
pushf
imul
stos
shrl
fistpll
mov
mov
mov
push
repz
int
pop
inc
mov
mov
push
ljmp
sub
adc
xchg
das
mov
icebp
xchg
nop
mov
jbe
shl
xorl
shlb
lret
dec
xchg
lret
inc
pop
arpl
enter
xor
lods
out
test
fdivrp
shlb
loope
or
xchg
popa
adc
test
inc
out
out
insb
loop
xchg
adc
ds
vmwrite
fwait
xor
jle
fistpll
aam
mov
aas
lods
and
test
rorb
mov
mov
dec
pop
jecxz
fnsave
or
adc
and
clc
data16
jbe
adc
mov
ret
cmp
or
sahf
or
in
inc
dec
cwtl
pop
xchg
movsl
and
jmp
sbb
mov
xor
mov
mov
pushf
movsl
jle
dec
mov
test
mov
ret
dec
mov
cmpsb
mov
push
or
leave
mov
fidivrs
sbb
sub
sar
xchg
inc
arpl
sbb
mov
mov
das
xchg
xchg
fcomps
add
jg
pop
cmc
mov
test
bound
stos
add
jecxz
push
data16
lods
jns
test
mov
outsl
or
xchg
loope
mov
aad
lret
dec
cltd
cmp
mov
jecxz
test
mov
out
cmp
xchg
stc
repz
ror
daa
mov
pop
aaa
mov
dec
mov
hlt
es
push
cmpsl
fdivrs
jae
scas
push
movsb
mov
loop
stos
push
xchg
or
shl
pusha
mov
fwait
xchg
test
das
data16
adc
sbb
subl
loope
in
icebp
cmp
stos
mov
mov
shll
add
xchg
ja
sbb
jbe
mov
push
imull
adc
push
push
push
mov
mov
sbb
inc
mov
das
roll
cmp
inc
jns
fdivl
data16
xchg
mov
add
mov
inc
lcall
leave
xchg
or
sbb
inc
xlat
sub
ja,pn
rorl
popf
or
inc
push
mov
cmp
adc
imul
add
push
xlat
popa
into
or
cmp
cld
mov
out
cmp
adc
dec
cmp
xchg
jbe
pop
insl
cmp
inc
adc
int
add
pop
adc
out
mul
sti
test
jmp
pusha
imul
in
popa
sbb
or
xchg
scas
aad
lods
stos
add
mov
loope
std
mov
pop
or
ds
clc
xchg
mov
iret
dec
lds
dec
pop
call
outsl
enter
test
shl
ret
fnstcw
or
movsb
xor
sub
add
test
aam
xchg
jmp
fidivrs
push
mov
xchg
adc
jae
es
das
enter
mov
lock
mov
jmp
adc
add
imul
sar
in
subb
cltd
xchg
stos
sarl
ret
push
add
xchg
bound
sbb
jmp
mov
into
hlt
int3
or
push
cmpsl
shr
push
or
stos
sub
sbb
xor
leave
mov
mov
mov
out
in
fstpt
mov
addb
sbb
nop
add
xchg
add
negb
stos
xchg
leave
cwtl
mov
mov
loop
jns
cwtl
cmc
test
xchg
cmp
out
jmp
sahf
push
lods
lock
dec
hlt
fidivrs
fimull
dec
xor
xor
popa
fidivrl
adc
inc
popa
sub
pop
or
or
test
fnclex
mov
or
push
fdiv
pop
jo
jle
sbb
mov
sbb
enter
add
inc
bound
pop
je
xorl
sub
mov
loopne
jae
cmp
imul
mov
dec
popa
cmp
into
and
insb
sti
mov
out
xchg
dec
fnstenv
dec
js
cmovnp
scas
mov
sbb
jg,pn
rcrl
inc
hlt
je
ret
popf
push
cmp
cmpb
lret
inc
cli
pusha
push
jg
sub
loop
mov
lcall
loop
roll
aaa
mov
cmp
in
jg
lds
add
and
je
scas
cmpsb
std
cmpsl
in
dec
ja
jnp
stc
jmp
mov
pop
mov
imul
push
mov
xchg
pop
in
lret
subl
ljmp
mov
int
cld
mov
push
ja
fwait
mov
ss
imul
lahf
das
dec
sub
test
and
ss
rcr
lods
pop
gs
push
adc
mov
dec
mov
fdivrl
xor
mov
dec
js
faddl
rclb
mov
inc
les
fstps
shlb
outsl
aad
xor
pushf
hlt
sbb
jne
jmp
jae
push
mov
adc
data16
dec
in
fmuls
andl
mov
push
jmp
test
test
pop
cmp
mov
mov
mov
sbb
mov
mul
pop
mov
dec
xchg
subl
out
loope
mov
dec
ja
dec
idivl
mov
ds
cmp
hlt
sbb
inc
pop
pop
jbe
cmp
repnz
ljmp
pop
adc
rcrl
push
lock
out
cmp
xor
push
cmpsl
popa
sub
fisubrs
aam
sub
xor
into
daa
mov
adc
sbb
lret
xlat
orl
inc
out
adc
inc
jb
iret
xor
scas
stos
xchg
fisubs
xchg
mov
fildl
nop
rcr
cmpsl
dec
push
je
jecxz
sbb
mov
sbb
hlt
fs
dec
lahf
jo
lods
cltd
lcall
cmp
aaa
xchg
js
pop
rol
pop
mov
xor
adc
lahf
and
push
ja
sbb
xchg
fcoml
fistl
mov
inc
stos
loop
mov
jo
dec
inc
jecxz
sbb
in
hlt
les
xorb
sbb
xchg
push
sbb
push
mov
or
pop
orl
or
leave
leave
fnstenv
mov
test
or
mov
push
dec
mov
bound
xchg
and
push
mov
mov
orl
shl
insl
cmp
in
add
inc
xlat
and
add
and
mov
dec
xor
repz
sub
xchg
cmp
mov
xchg
imul
add
fwait
stos
inc
in
dec
and
pop
mov
xor
insl
jle
jbe
pop
stos
cmp
bound
ja
xchg
aas
mov
mov
leave
je
mov
mov
mov
iret
test
lods
sti
jno
dec
push
fnclex
push
imul
js
mov
dec
xor
xchg
sahf
push
sub
sbb
insl
fdivrs
cmpsb
jbe
mov
xlat
jge
outsl
mov
sub
cmp
das
movsb
jne
mov
fadds
pop
push
scas
out
test
lret
stos
ret
fwait
push
mov
dec
push
rcrl
sub
fiadds
stos
testb
aad
mov
loop
mov
and
imul
addr16
or
or
xchg
ficomps
push
pop
adc
dec
mov
xchg
cwtl
mov
shrl
jge
popf
mov
push
std
sub
mov
lret
fldenv
jo
inc
mov
lret
lods
addr16
pop
cmp
scas
hlt
sbb
shlb
xchg
jnp
loop
sub
and
das
test
xorb
add
pop
pop
jne
cwtl
js
repnz
xor
and
loopne
lods
xchg
inc
iret
popa
fsubl
sub
and
bnd
mov
push
fnstcw
mov
leavew
and
push
dec
mov
subl
sub
ss
outsb
sbb
mov
and
idiv
bound
dec
cmp
mov
dec
lods
pop
sub
or
cmp
fcompl
fwait
loop
dec
out
movsl
sub
jg
lahf
inc
jbe
arpl
jbe
popa
xchg
cmc
mov
aas
aam
sarl
adc
sbbb
stc
push
je
mov
push
mov
rorl
inc
dec
repnz
ret
fildll
shlb
fisubs
stos
push
sbb
mov
out
mov
xor
lahf
xchg
jge
out
pop
xlat
cmp
sti
sbb
pop
rorl
in
or
xor
mov
mov
fwait
mov
cmpl
sub
xchg
stos
and
sub
repnz
xchg
push
arpl
sbb
aad
or
adc
ja
sub
xor
dec
imul
mov
sub
test
test
aaa
sub
jae
xchg
jmp
lock
pop
jge
jne
mov
mov
stc
je
xchg
xchg
test
cmp
stos
shl
in
jmp
jecxz
nop
jne
xchg
clc
rcrb
sbb
pushf
je
in
out
int3
or
popf
and
xor
mov
sub
push
test
mov
mov
les
inc
loopne
jmp
mov
xchg
mov
pop
xor
jns
jbe
sub
sbb
pop
lds
scas
mov
xor
sub
and
mov
inc
xchg
push
lret
cmc
mov
or
fnstsw
jl
jo
inc
sbb
xor
dec
cmp
cmp
out
cmc
insl
mov
push
push
jmp
sub
jp
push
xchg
lahf
aaa
mov
fwait
pop
xor
mov
mov
sbb
xchg
dec
mov
es
jge
push
aaa
or
incb
movsb
sbb
xchg
es
icebp
pop
add
jecxz
out
stos
call
outsb
xchg
es
test
iret
lods
mov
loopne
js
insl
jns
mov
leave
loop
fwait
stc
loopne
push
pop
int3
push
loop
jnp
lret
subb
sti
pop
mov
xchg
nop
sbb
or
jmp
inc
aam
xor
mov
xchg
and
add
mov
test
add
inc
ja
and
scas
push
mov
subl
loop
in
xchg
mov
push
adc
movsb
imulb
roll
inc
sub
aad
mov
sbb
int
arpl
or
sub
cmp
shrb
enter
popa
jno
jae
ljmp
nop
adc
arpl
aaa
xor
sub
or
mov
add
pop
fwait
loopne
mov
and
push
in
xchg
lods
cmc
jne
xchg
test
add
sub
cmp
adc
sbb
js
imul
stos
sub
movsl
and
lods
mov
push
sahf
lods
pop
es
cltd
mov
mov
fisttps
push
icebp
sub
fidivrl
arpl
repnz
sub
sub
mov
notb
cmp
push
mov
repnz
leave
cmp
or
daa
hlt
fsubp
call
lret
add
sahf
mov
je
pop
and
leave
inc
rol
data16
movsb
push
and
pop
fmuls
xchg
test
xor
lods
in
inc
xchg
mov
jmp
pop
sahf
sbb
dec
sbb
out
cmp
sub
repnz
or
ficoml
int3
es
pop
mov
test
cltd
add
cltd
js
sub
shl
js
lods
add
sub
xchg
xorb
xchg
dec
xchg
es
pop
inc
cs
push
js
adc
push
pop
popa
in
sti
lea
in
je
push
lods
jo
movlhps
jo
jae
inc
xchg
and
mov
sbb
mov
fidivrl
in
cmp
push
dec
mov
sbb
cmp
cmp
xchg
repz
out
xor
and
cwtd
fs
in
sbb
lods
fnstcw
mov
mov
pop
lock
in
pusha
xor
aad
xchg
mov
leave
hlt
cmpsl
pushl
cwtl
mov
gs
out
test
hlt
adc
sub
jb
mov
jge
imul
testl
dec
pop
xchg
int
lcall
push
js
rorb
sbb
enter
push
push
inc
sub
shlb
sar
test
test
mov
add
cmp
rcr
ja
dec
iret
and
out
mov
mov
popf
xor
dec
xchg
sub
mov
pop
mov
bswap
pop
adc
dec
stos
insl
mov
pop
inc
xor
mov
mov
lods
lea
movsl
rcll
inc
add
scas
sbb
orb
popa
fldl
lcall
outsl
push
jl
cmp
jge
cld
shll
push
icebp
mov
clc
fidivl
cli
push
addb
and
hlt
stos
xor
xchg
mov
mov
xchg
pop
mov
mov
push
sbb
or
imul
sub
push
xchg
fnsave
negl
aam
js
sub
aaa
sub
jno
lret
les
ja
test
hlt
xlat
push
data16
sub
repz
lea
sub
je
cmp
lret
cli
xor
add
jmp
hlt
push
flds
or
cmc
je
sub
xor
test
mov
hlt
mov
add
xchg
sbb
cli
or
jbe
inc
int
out
ds
arpl
push
test
jmp
orb
pop
fimull
loope
in
pushw
cmp
movsb
popa
lret
andl
out
cmp
ja
aaa
jnp
lods
ret
sub
add
push
push
cmpsb
out
add
daa
mov
mov
loopne
repnz
clc
mov
inc
mov
xchg
adc
dec
mov
mov
push
xchg
mov
mov
mov
test
in
enter
jecxz
xlat
ret
inc
jg
inc
nop
loopne
insl
inc
add
stc
and
xor
sbb
inc
jns
icebp
dec
push
outsb
jo
mov
xchg
add
and
jae
leave
sbb
enter
mov
loop
jmp
jmp
mov
rorb
imul
repz
xchg
push
xor
loopne
out
ret
inc
pop
jo
push
insl
push
mov
mov
and
mov
and
push
repz
sub
jp
and
cmp
fdivs
mov
insb
ss
ret
push
push
cmp
movsl
scas
pop
mov
jno
mov
lret
pusha
push
add
ret
mov
xchg
mov
dec
ljmp
mov
in
es
dec
mov
jecxz
test
popa
push
inc
insb
xchg
add
mov
jle
outsb
shrb
mov
es
out
xor
es
dec
stc
push
lret
int
stos
dec
dec
mov
ja,pn
xchg
sub
and
or
loop
push
ror
pop
stos
dec
jnp
out
mov
and
push
mov
mov
dec
mov
ficoms
add
int
ja
push
jns
jl
rcrl
into
xlat
mov
adc
dec
or
push
mov
cmp
test
enter
mov
pushl
jno
sub
scas
out
pusha
push
jmp
push
xchg
mov
jl
add
jo
iret
xchg
mov
jle
enter
push
loopne
jae
push
sbb
xchg
xchg
pop
mov
mov
shll
fsubr
das
arpl
cmp
mov
cld
sub
fistps
mov
mov
shl
insb
in
pop
mov
stos
in
cmpsl
and
repz
lock
cmpsl
or
ret
dec
xchg
push
xor
mov
rcrl
shll
pop
xchg
xor
xor
jno
lods
mov
lahf
dec
imul
loop
inc
push
lea
push
stos
out
in
cmc
inc
mov
in
fdivs
stos
mov
mov
repz
inc
clc
adc
sub
ss
stos
cwtl
mov
sub
int3
out
stos
sbb
jecxz
dec
jns
mov
andb
jb
call
cmp
adc
or
inc
xchg
sahf
adc
stos
mov
pop
xor
shll
int
mov
push
ja
test
pop
push
loopne
pushl
or
sub
or
sub
stc
cmpsl
adc
aaa
lret
insb
cltd
cmp
pop
and
and
jl
out
in
loop
dec
rcll
dec
mov
mov
or
stos
out
ds
aaa
leave
lcall
bound
xor
xchg
addr16
add
lods
adc
ret
test
mov
or
xchg
imul
loopne
sub
mov
adc
andb
inc
sub
and
popf
or
mov
cwtl
cmp
mov
push
sbb
mov
push
ret
adc
scas
add
clc
push
ficompl
jnp
mov
subb
out
stos
sub
jge
in
or
dec
mov
jno
xchg
inc
and
or
movl
addr16
jg
daa
jl
scas
mov
sbb
mov
test
sub
xchg
addr16
jo
mov
pop
test
dec
inc
rclb
jae
xchg
or
pop
jle
hlt
movsl
fdivrl
mov
ss
les
stos
inc
out
ljmp
rorb
cmpb
mov
add
xchg
xchg
dec
cmp
adc
aas
test
scas
loop
cmc
mov
cmp
roll
xchg
outsl
mov
add
jl
divb
ror
or
pop
mov
ret
xchg
ficoml
jmp
daa
cwtl
fisttpl
ja
dec
leave
cmp
outsb
adc
fs
in
mov
daa
jb
adc
push
xchg
pop
pop
xor
lds
mov
xchg
adc
xor
lock
test
test
test
lret
arpl
push
fildl
sub
adc
adc
gs
pop
jmp
jg
mov
and
daa
pop
push
fnstcw
sti
in
xorb
hlt
ror
cmp
in
push
fstps
cltd
fimull
shl
cmpsl
xchg
sbb
ja
lahf
addr16
mov
jns
xchg
push
xchg
cmp
xchg
sub
outsb
test
in
ljmp
in
jle
inc
sub
mov
stc
fildl
mov
les
stos
stos
leave
xchg
orl
or
sbb
jl
mov
in
icebp
sub
cli
mov
cmp
sub
adc
xor
fnstenv
test
sub
push
push
push
push
aas
cli
shll
das
mov
push
push
mov
mov
movsb
mov
xchg
xchg
test
push
cld
cmp
mov
or
mov
jmp
fs
xchg
pusha
setge
xor
fnstsw
fnstsw
sbbl
ficomps
scas
daa
xchg
leave
fcoms
in
fisttpl
shlb
hlt
jae
loopne
cld
or
mov
jno
sub
rolb
testl
mov
or
mov
call
push
mov
xchg
fmulp
mov
or
dec
jnp
add
jne
push
outsb
stos
sbb
xor
mov
int3
inc
mov
push
enter
mov
aaa
mov
xor
test
mov
shll
inc
enter
push
mov
push
xchg
bound
xchg
cmp
jbe
add
mov
imul
pop
add
data16
adc
inc
xchg
aam
aaa
xchg
js
mov
cmp
xor
jg
push
mov
xor
adc
jge
scas
aam
test
mov
gs
adc
int
ds
addl
clc
in
xchg
push
dec
push
mov
jne
lods
insb
icebp
push
idivb
or
int3
out
stos
mov
pop
mov
jl
ret
sub
xchg
nop
rorl
inc
mov
inc
imul
stos
fldt
pop
cmc
fidivs
stos
fisttpll
not
mov
pop
mov
xchg
je
call
pop
sbb
or
cmp
lock
mov
xchg
ja
cwtl
pop
subl
or
out
mov
push
and
ja
push
and
xchg
adc
mov
es
insb
pop
sub
push
loopne
jb
add
pop
mov
and
stc
decl
mov
and
gs
in
fnstcw
cmc
and
movsb
mov
fs
sbb
sub
rorb
js
inc
adc
js
ret
or
xchg
mov
mov
fidivrl
or
jge
lock
or
lds
xchg
and
popa
aaa
pop
ss
mov
push
xchg
lods
adc
sub
and
mov
fwait
jmp
fimull
adc
sub
test
fisubrl
jo
mov
test
rorb
and
jecxz
arpl
dec
sti
stos
inc
jno
mov
mov
sbb
repnz
inc
ds
out
mov
arpl
mov
xor
cmpsb
stos
js
es
fisubrl
scas
xor
loop
pop
addr16
mov
cmp
mov
mov
sub
mov
or
mov
adc
add
test
mov
pop
imul
dec
cwtl
dec
rorl
inc
push
add
pushf
lds
leave
xchg
push
adc
fnsave
push
bound
cmp
out
fisubrs
ret
in
out
mov
les
rol
xor
jle
mov
mov
inc
pop
jge
arpl
stos
lret
lcall
test
pop
dec
fildll
pushf
mov
xchg
ss
add
or
adc
mov
arpl
mov
xor
out
cmpsl
jo
fcoml
mov
shll
cmp
sbbl
fwait
stos
mov
in
pop
loop
jae
cmpsl
sub
loop
scas
rcr
aad
push
push
int
inc
scas
cmp
les
enter
jmp
out
or
mov
lea
outsb
mov
repz
clc
nop
add
mov
push
push
or
xchg
test
push
mov
es
cli
in
aas
fcompl
scas
shlw
jne
mov
dec
movb
scas
add
les
dec
sti
pop
jo
lds
aad
xor
mov
int
fucomp
push
sub
lcall
jmp
cmp
push
adc
rorl
jmp
mov
push
ljmp
sbb
adc
das
add
or
cmp
rol
mov
jecxz
and
mov
xchg
mov
mov
les
pushf
push
fld
or
pop
xchg
adc
leave
hlt
or
sbb
xchg
cmp
cli
stos
out
fsubr
mov
clc
dec
stos
mov
jmp
jo
inc
mov
mov
pop
adc
dec
sub
push
pop
call
fimuls
adc
sahf
out
notl
push
xchg
adc
jae
jl
cld
add
xchg
clc
cmp
popf
jge
cmpsb
ficoml
xchg
xor
xor
xlat
fwait
in
mov
aaa
push
pushf
adc
fistl
jne
pop
adc
popa
ja
xor
pop
int3
lods
pcmpgtw
pop
leave
mov
mov
cltd
cli
and
arpl
xor
ret
mov
xchg
pop
je
ljmp
cmpsb
sti
cmpsl
mov
es
push
ret
clc
mov
jne
aad
or
fdivrp
xor
stc
dec
loop
mov
mov
rcll
stos
adc
fwait
sub
cmp
adc
sbb
stc
stos
inc
mov
push
je
pop
xor
xchg
call
fcmovu
lret
xchg
cmp
cmp
notl
and
mov
loopne
repz
xchg
stos
xchg
fsub
or
cmc
cmp
jl
test
in
push
jns
sbb
inc
decl
jg
mov
fdivl
and
loop
xor
jg
int
inc
and
add
pop
ficomps
xor
sbb
or
stc
arpl
and
mov
imul
sub
add
rolw
mov
mov
aad
sbb
inc
sub
pop
push
je
add
mov
add
rorl
pop
daa
mov
dec
inc
call
icebp
outsl
lods
das
push
pop
mov
xor
das
pop
xor
push
roll
int3
arpl
mov
fidivrs
stc
vmovhpd
cmp
jae
fdiv
test
adc
popa
ja
sub
xchg
andb
jmp
popf
fcompl
bound
add
mov
or
push
xor
xchg
inc
sbb
mov
test
mov
or
ret
lret
andl
sbb
jno
fisttpll
test
es
dec
stos
jns
pop
xchg
jne
jbe
xchg
popf
nop
jo
mov
shr
dec
ficomps
xor
and
push
add
ret
sbb
add
decl
fwait
loop
clc
jb
ja
pop
sbb
mov
add
mov
pop
mul
cld
cmp
xchg
xchg
pop
jle
into
mov
jno
mov
dec
pop
aam
cmp
jnp
jle
lods
push
imul
adc
aaa
rcr
cs
push
dec
add
inc
in
shr
mov
jne
xor
mov
popa
shrl
aaa
rorl
test
push
sub
loope
enter
leave
mov
fldenv
mov
mov
adc
adc
sbb
shl
cmpsb
inc
aam
or
gs
dec
sar
loope
xor
int3
out
or
jg
shr
in
cmpb
pushf
mov
test
or
shll
and
mov
sbbl
mov
sti
ret
sahf
int3
or
mov
xchg
push
insl
xor
push
mov
test
jmp
jns
ret
lock
lret
notb
stc
stos
jns
popf
ret
sub
cmp
cwtl
loope
jp
bound
xchg
add
push
cmp
inc
call
jp
mov
inc
or
repz
jle
mov
insb
pop
jae
insb
pop
cld
sbbb
leave
mov
xor
or
xchg
xchg
and
sub
idivb
push
imul
sbb
loop
js
xchg
negl
sahf
or
les
push
aaa
mov
mov
pop
call
jmp
repz
cli
lea
sub
and
push
mov
push
ja
nop
or
div
insl
sahf
sbb
mov
xchg
sbb
dec
aad
lret
mov
jbe
sub
in
push
aam
or
lret
fwait
stos
roll
nop
test
sahf
push
lods
lret
cmp
lret
push
outsl
xlat
xchg
inc
ficoml
jecxz
rorl
mov
inc
pop
mov
mov
sbb
rcll
jnp
inc
cmpsl
inc
cmc
pop
stos
js
ss
fildl
mov
sub
cli
cmpsl
test
jbe
test
pop
idivl
icebp
push
imul
inc
dec
popa
pop
mov
jl
xchg
ret
mov
push
dec
popa
mov
in
and
push
jg
xor
mov
jnp
inc
xchg
jp
outsb
movsl
lods
ljmp
outsb
jbe
sub
cmp
sar
jne
pop
xor
xor
pop
lds
xor
sbb
jnp
pusha
iret
or
loopne
js
and
repnz
es
out
fldenv
out
aad
jl
and
adc
nop
int
jle
mov
aam
xlat
pop
sub
data16
xchg
ss
mov
jl
inc
stos
popf
ljmp
lcall
out
or
out
jbe
adc
cmp
hlt
dec
mov
cmp
jecxz
mov
add
sub
mov
mov
insb
mov
inc
stos
psadbw
mov
aam
sbb
adc
xchg
pop
les
popa
divb
or
fwait
mov
mov
mov
mov
mov
push
dec
mov
sbb
idivl
xchg
out
mov
and
incb
mov
push
jo
xor
mov
xchg
test
mov
je
fidivrs
mov
mov
je
lods
in
mov
jp
sbb
rcl
or
jmp
dec
pop
fwait
loopne
dec
pop
test
cs
push
inc
int3
xor
lret
xchg
mov
sub
aas
pop
sub
movsl
loop
mov
bound
dec
push
adc
pop
mov
mov
movsl
loop
loop
xlat
fimuls
movsb
inc
and
pop
inc
cmpsw
rcll
sbbb
inc
scas
popa
inc
scas
test
shll
nop
pop
cwtl
push
sbb
shl
xor
pop
es
cmp
xchg
jo
xor
leave
enter
adc
aaa
addl
xor
and
pop
stos
push
add
lcall
call
fsubrl
mov
cmp
mov
jmp
aad
lcall
jmp
push
ljmp
or
mov
xchg
neg
stos
insb
test
and
test
dec
sub
popf
dec
or
gs
mov
inc
movb
and
sub
add
pop
sub
mov
popa
gs
cmp
out
sub
gs
mov
fistps
jl
jns
ds
and
mov
ret
xchg
sub
jmp
mov
lds
lahf
mov
inc
inc
popa
xchg
push
mov
xchg
loopne
mov
enter
rorb
sbb
test
cmpsb
push
xlat
iret
leave
stos
dec
xchg
xlat
push
sbb
ljmp
mov
add
arpl
lea
or
fsubr
setl
imul
loop
pop
sub
aam
mov
dec
jmp
sub
mov
xor
lods
push
dec
xchg
cmp
repnz
cmp
pop
sbb
dec
cld
dec
lods
sub
data16
sbb
sub
xchg
jns
dec
cmp
shll
fidivrl
mov
sbb
popa
inc
out
ds
push
adc
xor
pop
inc
cmc
xchg
cltd
inc
jge
mov
mov
jle
jae
stc
into
adc
icebp
in
cmp
cmpsb
inc
cmp
sar
mov
jp
mov
jne
lcall
mov
adc
mov
subl
stc
sub
nop
ds
cmpsl
cli
mov
xchg
loope
xor
or
and
and
ds
xchg
or
imul
mov
push
mov
cmp
jbe
arpl
dec
mov
shll
dec
and
mov
ljmp
pushf
or
mov
pop
add
sahf
push
xor
lods
jns
mov
lods
punpckhdq
jp
and
scas
sub
popa
stos
rcrl
cmp
push
test
imul
mov
cmp
mov
rorl
fildll
loopne
in
ret
inc
ss
pop
leave
xor
leave
pop
mov
jmp
mov
sub
jmp
cmpl
and
adc
popf
xchg
pop
jae
fsubp
sbb
insb
je
mov
or
and
sub
into
gs
jmp
adc
and
rorb
cmp
out
fsubrs
mov
lret
mov
inc
dec
in
jnp
jno
movsl
mov
push
push
in
into
les
sbb
inc
mov
mov
shr
sub
sbb
push
xchg
hlt
and
dec
push
fildl
push
sub
insl
xchg
fcompl
add
push
and
bnd
fistl
adc
xor
mov
enter
dec
push
and
pop
leave
shlb
lods
in
test
rorl
adc
sti
in
pusha
call
popa
mov
adc
sar
ror
cmc
cmp
add
aas
mov
push
mov
sub
push
sbb
pop
mov
xchg
mov
mov
fiaddl
sbb
mov
sti
lret
mov
les
or
aad
xorb
sub
rcll
pop
imul
xchg
rcll
mov
adc
into
icebp
jmp
push
sbb
sbb
shl
push
and
rcrl
mov
popa
xor
cmp
fbld
lret
mov
das
stos
call
scas
in
mov
push
xchg
sbb
mov
popf
lret
mov
pop
or
jno
leave
hlt
cmpsb
inc
stos
cs
int3
neg
icebp
mov
cmp
scas
dec
ja
xlat
or
sti
or
es
sub
jnp
sub
xchg
mov
sub
xlat
aam
mov
sbb
popa
in
cmp
push
icebp
jne
push
loop
insb
sub
or
out
gs
or
mov
xchg
jo
add
enter
mov
das
xor
mov
imul
jmp
adc
rcll
dec
jnp
fs
sbb
arpl
push
push
test
test
and
lods
xor
psrld
mov
inc
out
pop
jg
rorb
popa
mov
iret
cmp
add
hlt
xor
adc
insb
jle
jmp
insl
dec
xchg
xor
xor
shl
dec
stos
lcall
pusha
adc
mov
mov
cmpsl
shl
mov
loop
cs
hlt
and
jecxz
xor
mov
adc
imul
xchg
and
and
xchg
dec
mov
cmovbe
leave
cs
js
mov
popa
cmp
or
rolb
and
dec
jae
mov
outsb
test
shll
cmp
in
push
mov
nop
pushf
xchg
push
roll
mov
pop
dec
sarb
je
push
or
cmpsb
cli
lea
or
xchg
pop
or
test
pop
ficomps
leave
testb
dec
lret
cwtl
xchg
or
mov
mov
adc
incb
mov
incb
adc
test
loop
pop
in
mov
jne
adc
lea
or
icebp
lret
out
in
cmp
xchg
cmp
sbb
repnz
jne
cmpsl
or
push
repz
sahf
scas
cmp
repnz
push
jnp
and
mov
gs
stos
dec
mov
dec
mov
mov
xor
xchg
sub
cmp
xchg
push
popf
cmpsb
mov
inc
mov
leave
test
dec
fsubrs
xchg
shll
pop
fsubl
jne
bound
fldcw
xor
arpl
xchg
and
js
mov
sbb
ljmp
mov
inc
mov
jmp
lea
arpl
xchg
add
mov
xchg
mov
mov
pop
mov
stc
stos
movsl
fldt
pop
leave
cmp
inc
mov
stc
inc
ja
or
je
addb
inc
jmpw
cmpsb
int
cmp
sub
mov
daa
sbb
in
jo
lret
cmp
fistl
mov
dec
test
push
repz
cmp
push
cmp
push
imul
mov
pop
mov
scas
int
jg
jp
ljmp
rcl
pop
imul
mov
fsubp
ja
das
in
push
ret
addr16
loope
jae
jne
cmp
repnz
or
mov
xor
je
add
arpl
or
adc
out
cs
stos
push
in
pop
xchg
aaa
jge
lcall
mov
add
inc
xchg
nop
outsl
out
iret
cld
pusha
aaa
imul
cmp
and
dec
nop
mov
dec
loop
jp
rcll
push
mov
sbb
test
fisubl
cs
jmp
adc
pushf
add
hlt
mov
cltd
cld
movsl
dec
adc
jne
xchg
sahf
push
and
jo
gs
addl
sub
cmpsb
mov
and
xchg
cltd
pop
inc
lcall
out
sub
mov
or
movsl
dec
jge
test
clc
gs
mull
fidivs
scas
xchg
add
inc
test
test
stos
data16
dec
popa
push
scas
cmp
dec
sahf
aam
mov
sub
rorl
inc
ficoml
ficoms
add
je
mov
adc
fsubl
mov
jg
shll
sti
testb
xor
xor
add
and
adc
mov
push
imul
inc
stc
pop
sub
cltd
mov
push
sbb
hlt
test
test
fdivr
into
adc
xor
fcompl
rcll
mov
push
dec
and
cmp
inc
jmp
and
lds
lahf
arpl
push
cwtl
je
mov
and
scas
popa
mov
jmp
hlt
jo
jmp
inc
js
ds
pop
cmp
lcall
sbb
xor
mov
push
jae
adc
mov
sarl
xchg
js,pt
push
call
pop
xor
call
sbb
xchg
rorb
sbb
push
mov
pop
mov
inc
in
test
ret
cli
mov
imul
mov
bound
cmp
sbb
stos
pop
scas
fs
popf
xor
xor
push
lret
mov
xchg
push
and
or
mov
or
imul
push
in
pop
mov
scas
in
fdivl
mov
stos
sti
popf
icebp
or
inc
push
in
out
push
shlb
enter
rcrl
mov
xchg
fsts
lret
xor
xor
and
inc
jbe
scas
enter
fcomip
roll
xchg
pop
push
fstpt
ret
shll
frstor
js
cld
stos
inc
lret
mov
in
fsubl
lock
stos
or
in
pop
and
mov
xor
aam
adc
iret
hlt
test
mov
lods
mov
or
mov
movsb
shrl
scas
popa
mov
nop
jle
hlt
lret
cwtl
out
pop
test
leave
je
dec
xchg
fwait
test
sbb
jge
and
sbbl
pusha
ja
mov
pop
sub
xchg
xchg
lret
mov
scas
jo
sub
std
jbe
mov
xchg
mov
mov
adc
ja
mov
testl
or
adc
out
imull
push
std
cli
mov
mov
shrb
pop
pop
push
out
and
cli
inc
xchg
dec
xchg
and
outsb
add
lods
add
in
leave
mov
sub
popf
sarl
lcall
sbb
inc
or
mov
xchg
xor
mov
pop
loop
mov
xlat
repz
add
decl
mov
sbb
sbbb
mov
stos
pop
je
and
mov
es
lret
lods
adc
jmp
jle
out
xor
mov
xor
popa
fwait
imul
shl
mov
push
push
dec
or
fwait
insl
xor
fadds
into
inc
push
jmp
sub
cmp
fwait
xor
hlt
inc
sbb
fcomi
and
sbb
jns
push
push
dec
loop
daa
xchg
push
js
stos
cmpsb
gs
adc
adc
jns
addr16
xchg
insb
mov
mov
sbb
arpl
jae
data16
les
cmp
pop
sbb
or
leave
jg
push
out
sub
pop
or
movhps
sub
fcomip
sar
xchg
adc
xor
pusha
ret
movb
jmp
int3
popf
enter
and
ja
fcompl
mov
lods
repz
dec
leave
or
je
mov
sbb
lcall
jg
iret
js
adc
mov
jnp
inc
xor
sbb
pop
xchg
loopne
into
xchg
mov
daa
loope
jge
cmp
mov
loope
jmp
jp
cmc
stc
dec
mov
imul
push
pusha
pop
mov
leave
test
cmp
dec
pop
ja
fwait
pop
or
pop
arpl
mov
lcall
pop
decb
pop
mov
adc
into
es
and
inc
and
aas
insb
imul
cmpsl
mov
dec
es
data16
aad
or
push
in
popa
sarl
rcll
cmp
dec
ss
jge
xchg
fstpt
xchg
leave
jge
test
ds
test
je
cmp
xchg
jnp
insb
xor
jmp
xchg
mov
test
add
cmpsl
xchg
mov
sbb
mov
pop
into
adc
inc
out
and
xor
push
sbb
mov
sbb
dec
sbb
shll
sub
out
mov
pop
adc
mov
rorl
loop
in
jae
lods
out
fwait
addr16
fcmovnu
clc
cmc
out
ljmp
xchg
jge
mov
rolb
rorl
pop
ror
jb
shll
test
sarl
dec
or
cmpsl
jmp
adc
mov
ja
cltd
test
dec
lret
or
mov
pop
lods
les
aas
inc
push
dec
dec
cmpsb
fisubrs
inc
push
jg
or
cmp
popf
and
lret
jbe
or
mov
leave
fsubrs
push
shr
xlat
loop
pop
jg
rcrb
out
xchg
mov
outsb
sub
out
not
loope
mov
dec
or
into
scas
adc
mov
or
fidivrs
mov
test
cli
jmp
push
add
sahf
sub
pop
test
mov
sar
mov
cmp
lahf
xor
popa
xchg
adc
cli
shl
scas
aad
push
or
cmp
sbb
cmp
insl
mov
nop
into
xchg
cmpsb
cmpsl
xchg
decl
std
mov
jae
cld
xchg
daa
dec
imul
xchg
mov
mov
jmp
jecxz
loop
sub
notb
dec
out
xor
in
mov
mov
aad
pop
leave
call
out
adc
ror
aaa
aaa
lods
mov
ret
and
fidivl
data16
outsl
jno
xlat
or
dec
mov
mov
jbe
je
and
ss
inc
mov
test
les
dec
add
rorl
or
iret
stos
shll
or
or
les
inc
aam
and
pop
gs
ss
mov
stos
mov
int
and
xlat
mov
lcall
push
shlb
sahf
dec
insl
push
mov
xor
ret
mov
sahf
sbb
xchg
repz
jecxz
mov
test
xchg
cmp
fs
xchg
mov
xchg
in
xchg
cmp
in
mov
inc
mov
jmp
sub
xchg
push
cld
movsb
outsb
out
jne
movsl
lods
jb
das
ret
mov
pop
xchg
out
loopne
sti
out
testl
jl
cli
gs
lods
mov
incb
inc
loop
popf
repnz
arpl
out
clc
jnp
push
leave
int3
xchg
fs
xlat
xor
push
mov
popf
jge
mov
lret
inc
xor
lea
subl
jmp
fld
sbb
rorl
cmpsl
cs
popf
push
sbb
mov
test
cmp
pop
arpl
xlat
xor
out
mov
popa
push
shr
adc
inc
push
test
push
push
imul
mov
jae
pushf
mov
pop
test
andl
mov
push
add
mov
in
leave
sub
dec
repz
aad
js
cmp
xchg
adc
pop
mov
sbb
mov
mov
mov
jecxz
in
and
popa
pop
lcall
test
les
push
add
xchg
pop
pop
jmp
cli
jle
sub
push
orl
xchg
stos
rol
lret
mov
and
xlat
push
bound
out
jle
sbb
xchg
pop
pushf
xor
mov
pop
decl
aam
xor
add
rcrl
out
mov
xor
sti
xchg
pop
push
mov
pushf
test
test
arpl
test
push
out
insl
jne
dec
dec
and
jmp
xor
imulb
mov
mov
ss
mov
mov
sub
mov
jp
mov
mov
xor
loop
pop
xchg
add
xor
stos
test
and
dec
and
iret
call
rol
and
sbb
rcll
inc
das
jge
fcomip
inc
lods
mov
mov
mov
jle
push
fidivrs
inc
aas
stos
fistpl
pop
call
xor
jae
and
mov
mov
in
or
pusha
and
repz
cmp
lahf
cmp
push
nop
jle
xor
mov
popa
sub
dec
andl
mov
movsl
out
xor
divb
rclb
aas
push
cwtl
test
xchg
scas
lods
push
test
movsl
cmp
enter
lret
jge
mul
push
jmp
inc
out
out
and
add
jmp
add
xor
out
stos
sti
xchg
popf
icebp
push
mov
or
imul
adc
mov
test
mov
push
mov
pop
cmp
adc
xchg
push
push
into
sub
jmp
or
mov
sub
jno
iret
push
jg
insb
cs
mov
jmp
loop
dec
xchg
dec
jo
out
jg
jl
cltd
lret
inc
sbb
mov
or
cmc
xlat
loop
add
into
adc
mov
insl
push
or
mov
pop
jge
jg
cltd
sbbb
pop
sbb
cmc
scas
cs
jg
shl
movsb
push
push
js
daa
xor
ljmp
test
pushf
repz
imul
sbbb
addr16
xor
jle
lods
ret
inc
scas
push
mov
pop
jg
inc
mov
xchg
xchg
mov
jg
cwtl
mov
sbb
shll
xchg
mov
aam
movsb
mov
or
cmp
sbb
or
leave
push
inc
in
sarb
xor
pop
mov
outsl
fdiv
push
imul
insb
lcall
ficompl
pop
mov
add
out
popf
das
mov
sub
jmp
movsb
xchg
aaa
shll
out
lcall
xor
xchg
xchg
cwtl
mov
inc
dec
fldcw
or
jmp
push
xor
sahf
jae
rol
jns
cmpsb
cli
jg
sub
pop
push
es
int3
or
mov
mov
les
lret
cmpsl
jle
jmp
inc
or
lods
shrl
add
mov
xchg
pop
cmp
xlat
mov
xor
mov
pop
lods
clc
fstpt
and
shll
xchg
pusha
fisttpl
shrl
popf
les
test
push
insb
imul
aad
testb
pop
rol
push
rclb
push
mov
lods
adcl
pop
ss
fldenv
cmp
mov
jmpw
mov
mov
or
and
push
clc
test
mov
loop
mov
adc
and
aas
rcrl
mov
sbb
stos
imul
push
or
and
adc
fs
enter
loopne
add
es
jae
ss
fcmovbe
xchg
mov
fsqrt
mov
push
mov
inc
inc
xor
mov
aad
imulw
mov
shrl
pop
xchg
adc
dec
xchg
sti
mov
stos
subl
ret
test
mov
out
xor
out
int
pop
mov
sbb
jmp
dec
js
pop
test
idivb
pop
je
adc
mov
push
out
adc
inc
dec
enter
mov
pop
jne
jmp
test
mov
mov
mov
fwait
mov
or
outsl
aam
lock
mov
out
rol
adc
pop
xchg
gs
stc
jmp
jns
adc
cmp
imul
stos
or
push
xor
insl
lcall
addr16
pop
or
add
cmc
divl
in
push
mov
sbb
int3
jbe
pop
sub
movsb
loopne
and
jne
xor
jbe
mov
mov
out
test
lahf
pop
xchg
sarl
repnz
lahf
shrl
cmp
and
lret
mov
ds
fisubrl
dec
cmc
repnz
mov
cmp
mov
jecxz
bound
mov
aaa
movsl
in
js
cmp
sahf
repz
stc
pop
fldcw
rorb
jecxz
call
push
inc
jbe
pop
dec
fcoms
jg
pop
popf
dec
cmpsb
mov
stos
or
sbb
jecxz
frstor
andl
fildll
push
push
std
adc
cmp
enter
inc
push
mov
mov
sti
xchg
mov
cmc
std
nop
sbb
or
inc
and
pop
xchg
in
ds
leave
adc
gs
jp
mov
ss
lret
popa
mov
aaa
out
lret
movsl
sbb
jmp
ljmp
pop
xlat
insb
dec
and
sbb
out
pop
jecxz
daa
jnp
shll
fcomps
out
xchg
pusha
subb
test
pop
cmp
in
outsb
pop
xor
test
imul
add
cmp
loopne
inc
mov
fmul
scas
ret
adc
out
and
mov
mov
xchg
les
cmp
jae
jne
sub
jl
jmp
cmc
jl
in
rorl
cs
mov
insb
dec
leave
in
push
add
outsb
into
mov
sbb
or
out
stc
dec
lret
jg
cltd
pusha
inc
fsubs
setno
clc
mov
jp
sbb
int3
daa
pushf
and
inc
mov
cmp
or
aaa
shl
leave
push
and
dec
imul
push
mov
mov
aad
mov
inc
nop
mov
nop
jbe
shr
std
pushf
mov
enter
loopne
xchg
fsubl
lods
in
and
lds
adc
scas
ss
push
xor
bound
pop
insl
cmpsl
lcall
adc
lods
or
pop
fmulp
or
insl
outsl
loop
sub
ret
lea
cmp
jp
mov
xchg
sub
lahf
fnstcw
jmp
mov
mov
pop
and
pop
pop
loop
sbb
mov
shlb
sbb
les
fs
pop
hlt
inc
insb
test
push
or
idivl
pop
aam
mov
mov
or
stc
cli
pop
outsb
xor
xchg
inc
rcrb
xchg
jp
adc
push
test
push
lahf
adc
negb
mov
xlat
jae
adc
popa
fcompl
inc
cmp
jno
mov
mov
stos
xlat
loop
inc
push
into
pop
xlat
in
push
cmc
inc
stos
xchg
mov
and
fcomip
xchg
sub
cmpsl
mov
js
cltd
in
pop
jl
in
cld
add
add
mov
or
addr16
lcall
loop
and
and
mov
orl
hlt
xor
mov
mov
xor
int3
repz
loop
fmul
push
stos
scas
mov
mov
adc
jmp
enter
mov
dec
fsubrl
jl
andl
sbb
pop
cwtl
pop
test
in
ficompl
out
xor
dec
cwtl
jno
fnsave
dec
daa
outsb
imul
push
in
test
push
in
roll
cwtl
aaa
add
xor
pop
fdivp
aad
xchg
adc
dec
stc
scas
pop
sub
pop
xchg
mov
push
leave
jb
int3
es
cltd
jbe
notl
insl
push
jmp
lea
mov
or
jb
sub
iret
inc
or
pushf
or
imul
add
mov
sbb
and
mov
aaa
pop
loop
stc
cltd
das
imul
and
je
out
push
les
movsl
stos
insb
xchg
sbb
cmpb
lods
pop
scas
pop
roll
fdivrl
jbe
pop
adc
and
and
repnz
pop
mov
mov
xor
xor
in
lret
mov
sub
outsb
dec
sbb
lods
xor
mov
es
cmpsb
lcall
les
mov
cmpl
js
mov
xor
mov
ret
and
inc
pusha
jp
sti
or
jg
or
repz
jg
bound
xchg
add
rcr
ss
jmp
jecxz
push
ror
cmp
sub
jge
rcrl
out
add
jecxz
sub
push
mov
outsl
int3
mov
adc
sbb
sub
jp
in
in
rclb
jmp
jo
fisttpll
sub
and
mov
mov
inc
xchg
sbb
xlat
outsl
loop
sub
jl
mov
mov
sub
dec
mov
movsb
sub
imul
add
lcall
add
xor
test
or
insl
cmp
ss
mov
add
ret
or
aam
dec
arpl
or
js
push
leave
lea
mov
mov
repnz
mov
xchg
inc
ret
shlb
add
jp
stos
mov
xchg
push
enter
or
and
pushf
into
push
stos
inc
pop
inc
in
cmp
test
cmpsl
mov
sub
xorb
mov
inc
and
test
leave
scas
idivb
and
into
cmp
sti
add
sub
push
ja
pop
aaa
add
mov
mov
loop
jp
popf
fnstcw
js
and
cmp
sbb
dec
popa
sbb
std
lahf
test
xchg
sahf
loopne
lahf
shll
icebp
pop
jge
push
rcrl
stc
mov
cli
inc
icebp
iret
xchg
jle
mov
mov
mov
mov
inc
mov
sub
rcrl
jae
mov
jmp
cmp
loop
push
sub
sub
sarl
fucomip
jmp
sbb
mov
and
dec
and
sub
lea
inc
in
cld
daa
mov
loop
es
mov
loopne
jo
lods
lcall
lock
sbbl
shll
in
pop
fldenv
jmp
sbb
add
cmp
mov
and
xor
cmp
pop
mov
push
xchg
sub
dec
push
into
inc
lret
and
popf
subl
popa
lret
imul
inc
imull
testb
xchg
pop
stc
xor
hlt
xor
adc
arpl
mov
mov
xchg
jnp
add
mov
ljmp
adc
mov
mov
xchg
rclb
fucomp
mov
shll
cli
leave
jo
es
push
pop
fwait
ljmp
fsub
loopne
xchg
js
nop
loope
call
xchg
sub
jecxz
pop
popf
ljmp
and
popf
jno
xchg
ds
mov
mov
lock
addr16
lea
xchg
push
cmpsb
rorb
xchg
jp
ret
jns
mov
xor
testb
inc
test
add
mov
arpl
popa
int3
test
loop
cmpsb
inc
cmp
in
stc
inc
mov
xor
cmp
sub
test
imul
jb
or
cmp
stc
out
sbb
iret
mov
loop
jo
mov
ja
shll
leave
lods
or
loopne
shll
jne
or
cmc
fnstsw
mov
ret
pop
xchg
sbb
scas
mov
add
mov
enter
pop
add
mov
xor
call
mov
cmpsb
xchg
js
loopne
jecxz
mov
mov
jmp
shrb
popa
aas
and
push
notb
into
lods
leave
aam
fdivrp
rcll
or
adc
repz
into
xor
shll
mov
sub
adc
and
sti
xlat
add
xchg
cmc
jns
jmp
lock
mov
mov
pop
lret
out
lods
data16
inc
add
mov
sbb
add
jg
or
imul
popa
mov
pop
inc
mov
lcall
cmp
outsl
xchg
es
mov
inc
dec
test
data16
mov
adc
xchg
mov
dec
sbb
or
sub
pop
mov
and
push
add
xchg
enter
loop
into
xchg
mov
mov
adc
xchg
fimull
cmp
xchg
imul
mov
popa
mov
dec
daa
stos
sbb
pusha
shll
fwait
xor
fistps
xchg
clc
add
push
montmul
cmpsb
inc
cmp
clc
mov
idivb
dec
jmp
cmp
jae
mov
dec
xchg
lret
mov
out
pop
xchg
cmc
sti
push
mov
jle
sub
jl
xor
jle
aas
scas
pop
cmc
lret
pop
pushf
jnp
lcall
divb
fldt
jae
lcall
aaa
mov
or
cld
push
mov
into
icebp
loope
scas
es
jae,pn
cmp
sbb
xchg
or
inc
stc
out
or
std
pop
or
add
mov
jg
xchg
dec
mov
sbb
lock
mov
cmc
insl
xlat
frstor
lcall
test
in
test
ljmp
mov
mov
xor
mov
xchg
pop
jg
cld
scas
sbb
int
fcmovnbe
or
inc
jae
push
xchg
xchg
lahf
sbb
mov
jne
xchg
outsb
cli
sbbb
mov
inc
inc
mov
nop
mov
in
mov
test
int3
push
inc
add
mov
aas
mov
cmpsl
cwtl
xchg
mov
in
jmp
iret
in
push
cmpsl
mov
cmc
sub
mov
adc
or
fistps
lods
xchg
add
jg
sarl
sbb
pop
out
push
dec
in
sbb
jnp
xor
cld
movsl
roll
ret
add
mov
cmpsl
cmp
mov
mov
or
les
sbb
push
and
inc
sub
adcb
mov
fisubrs
and
call
popa
mov
xor
xchg
aas
cmp
inc
andl
mov
int3
inc
cld
lcall
mov
mov
push
or
push
mov
fldl
mov
and
pop
mov
xchg
test
inc
mov
sub
arpl
mov
mov
pop
hlt
test
cmpsl
out
mov
ret
xor
jmp
popl
mov
les
sbb
roll
popa
lea
xor
ret
imul
cltd
mov
pop
loop
cwtl
push
ljmp
jge
dec
cs
inc
or
mov
test
or
out
mov
in
push
cmpsl
mov
mov
jmp
frstor
xor
mov
and
mov
cmc
xor
shrl
loop
sbb
push
xchg
and
xor
mov
and
hlt
cmpsb
mov
into
and
inc
cli
push
lret
push
mov
adc
cmpsl
jne
shrb
xchg
mov
or
push
push
dec
xchg
jbe
push
xor
ror
mov
cwtl
pop
push
push
hlt
add
sbb
mov
mov
sbb
in
xorb
lcall
scas
fcoml
in
xchg
int3
stos
gs
push
int
stos
sbb
add
dec
sbb
fcoms
data16
dec
nop
inc
push
lods
pop
inc
sarb
es
pop
sti
dec
shlb
and
hlt
scas
and
out
movsb
jmp
inc
rcrl
shrl
movl
mov
imul
leave
mov
out
das
test
lcall
sub
xor
pop
das
mov
and
hlt
mov
cvtdq2ps
nop
and
data16
xchg
xchg
stos
cmp
lods
das
ds
jne
xchg
loope
divb
orl
jmp
cmp
jp
mov
enter
fstps
pop
and
das
ljmp
das
mov
add
sbb
dec
popf
outsl
lret
mov
xor
and
ret
xchg
andl
dec
push
icebp
ss
shll
pop
movl
sbb
pusha
jno
xchg
or
fisubl
mov
xchg
test
mov
push
lds
push
out
in
rclb
cld
mov
add
push
cmpsl
call
lea
mov
popa
mov
mov
test
push
jne
push
mov
cmp
adc
jmp
push
sbb
in
cli
fsubrp
mov
mov
insl
fsubl
push
loopne
mov
mov
das
cli
cmp
leavew
xchg
push
movb
call
xor
cli
ficoml
outsl
adc
and
add
pop
jl
loop
into
andl
push
loop
lods
jb
mov
cli
or
call
xor
arpl
mov
dec
mov
and
jae
in
xchg
add
shrl
stos
loopne
lcall
pushf
arpl
sbb
fildll
repz
push
das
push
push
push
adc
pushf
sar
orb
stos
lods
xor
stos
jmp
inc
mov
mov
inc
loop
imul
test
cmpsl
fldl
sti
dec
insl
mov
dec
xchg
test
xchg
inc
enter
and
or
dec
xor
mov
pop
fdivs
test
scas
rcr
flds
adc
mov
fwait
je
repz
mov
hlt
sbb
dec
or
mov
nop
scas
jle
repz
stos
dec
and
lods
mov
dec
jl
xchg
stos
test
adc
out
mov
fisttps
test
add
leave
lret
mov
cltd
in
es
mov
shll
js
shrl
lcall
jmp
loopne
std
fwait
mov
stos
jne
dec
or
push
cmp
pop
mov
cmpsl
mov
add
sbb
xor
sub
mov
push
cwtl
pop
mov
out
loopne
out
sbb
ficoml
pop
loop
insb
mov
sub
je
xor
and
in
sub
ja
xchg
xchg
sbb
scas
andl
into
xchg
pop
mov
popa
faddp
push
push
mov
cmp
popa
fmull
jmp
xchg
mov
mov
mov
sub
pop
aam
or
hlt
push
jmp
cmp
ror
adc
push
pop
xor
xchg
mov
adc
subl
icebp
iret
xor
das
cmp
call
cwtl
pop
add
mov
sti
notl
icebp
sub
dec
jmp
sbb
xlat
mov
cmpsb
pop
sti
mul
or
shll
sti
adc
or
mov
jecxz
cmpsb
dec
sbb
cmp
mov
jae
push
cld
decl
push
dec
cmp
movsb
in
cmpsb
mov
mov
xlat
mov
jno
mov
adc
xor
insl
outsb
shrl
les
test
cs
mov
aad
test
fimull
popa
inc
outsl
adc
jns
addr16
pop
popf
test
addr16
mov
pushf
rorl
sbb
lods
xchg
cmpsl
xchg
js
inc
jne
mov
sub
outsb
loope
push
lahf
jmp
sbb
pop
sub
into
movsl
leave
ss
rorl
or
mov
not
mov
ror
fisubrl
mov
ja
xor
cmp
ljmp
mov
or
jecxz
dec
jno
xchg
pop
mov
pop
lods
test
outsl
loop
add
test
pop
icebp
and
mov
push
rcl
sub
xor
popf
inc
xchg
xor
jmp
mov
insb
dec
and
in
dec
push
rolb
decl
rolb
push
cli
int
stos
dec
shrl
decl
insb
cmp
daa
mov
test
loopne
aaa
mov
lahf
push
sub
jp
mov
adc
sbbb
add
lods
popf
lret
ss
and
and
pop
inc
lods
xchg
pushf
sub
pop
out
fistpll
cmp
outsb
mov
int
mov
testl
notl
iret
sub
mov
pop
fsubrs
mov
fdivrp
icebp
xchg
or
popf
push
push
jge
leave
pop
aad
xchg
adc
add
aaa
adc
jae
jmp
dec
out
mov
inc
push
dec
sub
pop
mov
les
inc
clc
cld
leave
cmp
leave
push
pushf
mov
adc
or
scas
add
push
adc
cld
jae
jmp
test
mov
lret
out
lock
fmull
xor
into
in
iret
jmp
push
fildl
jmp
test
xor
pop
inc
mov
push
shlb
cltd
sbb
or
or
test
loop
inc
cmpb
nop
cmp
jae
in
lret
out
sahf
adc
int
idivl
mov
ljmp
mov
mov
xor
inc
leave
fcmovbe
loopne
call
xchg
fwait
arpl
jne
mov
pusha
inc
adc
jae
jae
insb
jbe
stos
aas
jp
xlat
adc
jb
dec
cmpsl
sub
mov
pop
stos
dec
icebp
ds
jbe
cmp
out
fsubs
pop
iret
mov
xchg
test
roll
dec
gs
mov
shll
cwtl
test
js
repnz
in
test
pop
jnp
enter
imul
test
test
jp
xor
pop
mov
jbe
stc
mov
or
sbb
or
out
adc
aam
mov
mov
flds
scas
mov
or
pusha
cltd
push
aad
sahf
dec
cltd
push
dec
jmp
lcall
mov
stos
mov
mov
lds
js
cmp
mov
jmp
cmp
jae
pushf
gs
mov
insb
and
imul
pop
fstps
arpl
loop
loopne
cltd
sub
and
inc
mov
xchg
add
loop
jbe
call
push
and
jns
les
fidivs
mov
jae
pusha
sbb
sbb
xchg
clc
fistps
xor
cltd
and
fsubr
dec
sub
loop
mov
pushl
pushf
test
xchg
sbb
jl
or
rcl
in
nop
sbbb
test
push
les
mov
fadd
in
lods
sbb
pop
inc
test
xor
cmpsl
jb,pt
mov
mov
sahf
jo
es
in
fisubl
sub
loop
dec
xchg
mov
push
cmpsb
ret
aam
cmp
pop
mov
das
ljmp
xchg
adc
repnz
xlat
fadds
adc
sub
sub
jp
outsl
sub
int3
mov
push
test
shlb
rcl
repz
xorl
jge
test
inc
jbe
sarl
jmp
mov
mov
pop
enter
pop
flds
cwtl
and
xchg
mov
les
icebp
popf
mov
imul
push
jg
rorb
adcb
mov
cmp
sub
xchg
ljmp
dec
rcrl
or
in
cmp
dec
cmc
jnp
mov
shr
mov
in
popf
or
inc
mov
xchg
fstpl
add
dec
insl
data16
xchg
rcll
faddl
inc
loop
fldl
leave
jmp
xchg
mov
in
leave
push
loop
sub
in
fnsave
mov
inc
cmp
sbb
sbb
outsb
sbb
xlat
cltd
lods
dec
adc
jp
sahf
jge
bound
mov
mov
xchg
push
xchg
lret
adcl
mov
test
les
ljmp
js
sti
iret
add
inc
xor
mov
jmp
in
mov
pop
cmp
dec
mov
mov
mov
cmp
mov
ss
aaa
push
test
in
cmp
or
push
inc
mov
mov
mov
dec
or
xor
into
or
scas
and
popa
inc
fisubrs
shll
xchg
or
mov
mov
mov
pop
lock
cmp
mov
cmp
mov
mov
leave
push
call
mov
stc
pop
jecxz
rcll
mov
xor
fadds
mov
jle
dec
js
xor
mov
xchg
push
stc
sbb
pop
mov
mov
fisubrs
lods
jp
jo
adc
sbb
lock
sub
cld
rol
jge
testb
jmp
pop
mov
xchg
add
std
inc
loope
dec
movsl
lea
mov
fldt
dec
fldl
xchg
mov
dec
ljmp
jae
jecxz
movb
or
mov
leave
fiadds
xchg
pop
rcrl
int3
xchg
jmp
mov
enter
ss
out
popa
xor
scas
std
xor
jno
xor
rcll
jg
mov
insb
mov
fldenv
mov
pop
adc
gs
shrl
adcb
sbb
arpl
inc
loopne
push
jae
push
in
sub
andl
loopne
ret
shll
mov
jl
or
lcall
imul
cld
dec
xchg
icebp
mov
xor
enter
les
ret
sahf
cwtl
cli
fiadds
cmp
mov
lods
jbe
jmp
jmp
mov
xchg
fdivrl
mov
icebp
sbb
je
lcall
xlat
xchg
ud2
jg
std
aam
sbb
pusha
mov
aas
lods
rclb
pop
cmp
outsl
test
push
pop
lods
dec
roll
fidivrs
sbb
mov
xchg
xchg
jnp
jb
xor
adc
jae,pn
xchg
js
xor
in
leave
dec
push
push
dec
nop
loop
inc
mov
in
jae
pop
inc
pop
cli
and
pop
test
iret
sarl
cmp
mov
or
or
stos
push
inc
cs
xchg
fsubrp
xlat
popa
adc
ret
pushf
scas
add
es
lods
pop
push
jmp
stos
orb
xchg
in
mov
fsubrp
pcmpgtd
fcmovnbe
sub
movq
sbb
testb
sbb
mov
mov
jecxz
cmp
lcall
push
adc
filds
fldt
pop
ss
mov
mov
add
nop
es
mov
movsb
scas
jp
loopne
xor
ror
sbb
jae
pop
les
popf
push
neg
cmp
rcl
or
ja
add
add
pminub
je
cmpsb
scas
xchg
cmp
sbb
inc
lcall
aaa
mov
sti
fistl
mov
add
xor
leave
sbb
and
lods
jnp
and
repnz
xchg
xcrypt-cfb
cmpsl
popa
andl
add
mov
cmc
ja
int
inc
movsl
add
xchg
add
push
cmp
or
pop
and
fcomp
jecxz
mov
and
mov
ljmp
scas
mov
ja
and
or
xchg
mov
mull
hlt
xor
and
lret
imul
mov
lcall
addr16
in
lock
xor
je
mov
adc
sahf
outsb
icebp
mov
push
mov
xchg
lret
mov
popa
stos
ficomps
in
stos
hlt
movsb
testb
mov
xchg
add
xchg
arpl
cmpsb
ret
cld
mov
cmp
dec
adc
cli
add
pop
and
cmpsb
or
push
mov
dec
test
fisttpll
outsb
lea
add
cwtl
out
ftst
sbb
mov
mov
sub
inc
fistl
loopne
stos
inc
mov
xchg
outsb
push
add
test
mov
or
pushf
push
loop
fwait
xchg
inc
xchg
mov
xchg
popf
outsl
leave
and
xor
dec
test
movsl
cwtl
adc
mov
call
cmp
push
lahf
les
into
jmp
add
inc
xor
jae
push
jmp
imul
mov
imul
jmp
xchg
aas
pop
mov
xor
iret
mov
or
inc
cli
addb
inc
push
fiaddl
or
insl
sarl
sub
xor
push
es
psubd
fwait
mov
jg
jae
imul
shll
fs
push
orl
push
in
adc
jecxz
repz
shlb
shl
pop
xorl
popf
nop
xor
out
ret
mov
mov
xchg
push
or
ja
adc
xor
lret
mov
dec
lock
push
xchg
rorl
pop
sub
lahf
xchg
lret
xor
lahf
filds
out
enter
int3
mov
mul
gs
dec
int3
pop
xchg
cmp
cltd
cltd
mov
sbb
cli
dec
nop
mov
pop
jnp
jg
in
mov
sbb
sbb
bound
les
je
ss
pop
outsl
push
add
div
popa
ret
mov
xchg
jae
dec
iret
push
cmpsl
xchg
aad
mov
outsl
or
popf
mov
jo
int
pop
mov
sarb
sbb
push
mov
adc
loope
xchg
sti
ret
jno
xchg
test
mov
fisubs
mov
jg
insb
mov
js
dec
mov
lods
outsb
int
test
andb
sbb
pop
lods
mov
fsubrl
das
jnp
mov
cmp
out
sub
xchg
add
mov
xor
leave
sarx
fstl
icebp
cltd
out
and
add
rcrl
les
dec
cmc
jg
andl
and
sahf
push
jne
push
pop
adc
or
sbb
mov
addb
cs
push
xor
leave
fildl
or
pop
xor
popa
push
mov
test
fidivrs
xchg
nop
jbe
and
push
jp
pop
test
je
cmp
dec
je
icebp
aaa
pop
popa
mov
mov
rcll
push
mov
jns,pn
dec
add
cmp
rcrb
iret
stos
mov
cmp
push
popa
and
hlt
loope
mov
pop
popa
ret
shl
mov
aad
enter
repnz
jo
mov
dec
mov
sbb
scas
add
pop
bound
xchg
gs
imul
push
xchg
mov
push
mov
sbb
sbb
cmpsl
movsl
int3
jmp
mov
push
ret
fsubl
test
lea
mov
inc
repz
fadds
and
cmp
mov
or
loopne
push
insb
push
int
sub
lods
xorl
outsb
inc
xchg
inc
jo
mov
ret
dec
jge
mov
adc
lcall
pop
lds
dec
push
mov
cmp
out
insl
or
add
xchg
fcompl
mov
xchg
jno
push
out
cmpsb
xor
or
sub
dec
stos
xor
adc
test
sbb
add
outsb
cld
js
cltd
pop
pop
or
int3
fstpl
das
sub
imul
inc
mov
push
lret
pushf
loop
add
mov
cmp
sbb
mul
test
fimull
ret
xor
lcall
cmp
shl
or
add
cli
bound
inc
mov
dec
push
dec
in
int3
sub
shll
negb
xor
and
shlb
adc
imul
pop
dec
inc
pop
filds
jle
mov
inc
mov
mov
cmc
sarb
cmpsb
xchg
stc
inc
sarb
xchg
addr16
xchg
mov
sbbb
or
addr16
mov
imull
jle
and
adcb
mov
jb
sbb
xor
cltd
push
pop
pop
or
sub
cmpl
loop
jo
sahf
cmpsb
mov
mov
mov
pop
add
mov
cmp
pop
xchg
lret
sub
xor
pop
adcl
jg
into
jmp
sbb
xchg
pushf
js
sti
nop
sbb
rol
add
add
jo
sahf
pop
jge
and
push
pop
in
cmp
out
fdiv
mov
pop
mov
stos
jb
shl
scas
push
xchg
aad
push
inc
pop
sahf
sti
push
jmp
pop
bound
stos
arpl
or
scas
arpl
add
inc
dec
fcoml
in
cmp
mov
rol
xor
loop
dec
add
lds
xchg
sti
loop
or
mov
sbb
popf
dec
pop
inc
mov
xor
clc
stos
jg
lods
lcall
int
cmp
test
mov
aas
es
lods
imul
aam
cli
loopne
xchg
inc
lcall
scas
inc
adc
cltd
mov
sub
xchg
xchg
push
xchg
xchg
fs
adc
jbe
jb
xchg
mov
xchg
add
outsl
or
divl
loope
jmp
lret
mov
push
mov
enter
and
les
push
mov
nop
into
aaa
mov
ljmp
imul
pop
hlt
jg
pop
push
cs
dec
push
mov
movsb
jnp
fwait
call
mov
out
test
jecxz
mov
ds
js
cltd
and
fstl
push
into
mov
inc
jle
push
fldcw
popa
leave
fdivs
sbb
sbb
out
testb
mov
pusha
popf
decl
push
inc
gs
test
in
and
or
push
jp
out
pop
xchg
out
popa
iret
jmp
aam
fnstsw
pop
jecxz
mov
jae
push
inc
leave
fsubrl
in
pusha
hlt
adc
mov
divl
jle
leave
jecxz
and
lods
imul
pop
and
mov
mov
dec
mov
sbb
lret
dec
xchg
push
cmp
inc
pop
sbbl
faddl
cmpsl
fxch
adc
outsl
push
int3
xor
inc
loope
pusha
xchg
push
mov
xor
pop
cmp
dec
lret
orb
inc
bound
jmp
lods
jg
mov
mov
jo
and
jge
dec
mov
xor
adc
les
add
mov
mov
jmp
sub
addb
xchg
imul
js
cmc
incl
cmp
xchg
popa
ret
shld
cmp
sub
push
xchg
xchg
mov
sub
movsl
pop
dec
jecxz
add
mov
xchg
cs
push
adcb
push
das
pop
daa
and
mov
or
xor
sahf
xor
mov
stos
push
in
jg
fildll
mov
nop
enter
ror
mov
mov
hlt
cwtl
adc
cmpsb
cltd
inc
sbb
stos
les
push
sub
mov
hlt
mov
add
stos
sahf
cli
lahf
xor
stos
mov
cmp
mov
mov
pushf
imul
aad
faddl
lret
jae
in
stos
rorl
ja
or
arpl
xor
xchg
mov
pop
mov
stos
xchg
out
sbb
xchg
lcall
mov
sbb
fwait
lods
shrb
imul
into
lds
insl
arpl
insl
insb
sub
mov
ret
mov
nop
lahf
lret
xchg
mov
dec
mov
sbb
jp
ret
mov
out
jns
test
jge
adc
mov
inc
push
iret
mov
arpl
in
movsb
hlt
sbb
sbb
lret
js
xchg
int3
jb
mov
ret
mov
js
mov
fdivrp
dec
cmp
and
cmpsl
sub
add
sub
inc
sti
hlt
ss
addl
add
or
movsl
cmp
ss
xor
mov
inc
jae
cmc
mov
loopne
lret
in
sbb
dec
addl
jae
lods
mov
scas
push
cli
idiv
pop
sahf
lods
pop
mov
xchg
push
stc
pop
pop
mov
cmpsl
push
mov
sbb
dec
icebp
cli
xor
shrl
leave
nop
cmp
loopne
lods
test
sbb
je
popa
mov
mov
mov
mov
bound
adc
push
clc
int3
idivb
xchg
fnstcw
imul
sub
sub
jb
jp
and
sbb
test
subb
jae
mov
out
and
or
stos
mov
fdivp
adc
jae
cmp
addr16
sbb
or
inc
dec
cmp
nop
cmp
inc
xchg
sbbb
int
xor
dec
outsl
and
cld
inc
add
sbb
xchg
aaa
in
sub
in
repnz
rclb
ljmp
xchg
je
jl
rolb
in
adc
mov
lods
or
hlt
or
pop
jg
mov
shll
loopne
das
jecxz
stos
ss
cmp
ret
sbb
pop
jnp
cvttps2pi
or
mov
xor
addr16
xor
adc
mov
sbb
outsw
mov
mov
test
inc
fwait
mov
xchg
mov
fnsave
dec
rep
gs
imul
adc
sti
sarb
mov
ljmp
and
loopne
in
cmc
add
add
xchg
push
mov
jns
in
mov
pop
or
stc
sub
add
lahf
mov
push
dec
sub
aad
rcll
ss
mov
dec
adc
or
mov
sbb
xchg
pop
mov
ss
cmpsl
lods
loope
cmpsl
adcl
adc
stc
mov
adc
ja
ljmp
sahf
aas
xchg
aas
shll
dec
jecxz
lods
sub
adc
sbb
aam
ror
push
fneni(8087
test
aas
scas
cmp
mov
lret
jae
pop
xor
push
outsl
pop
jge
stos
mov
jno
inc
mov
insb
push
mov
cmp
mov
pop
push
es
push
fldt
orb
mov
dec
xlat
fldt
rcll
jns
xchg
inc
addb
add
loop
dec
xchg
outsl
roll
xchg
xchg
jno
xor
jns
xchg
cmp
xor
inc
shl
out
mov
xor
inc
popa
cltd
sbb
jl
dec
shrl
aaa
rolb
mov
test
lret
push
xchg
add
aas
movsb
mov
mov
sub
xor
stos
jle
push
stos
mov
iret
in
xchg
sub
insl
xchg
fisubrs
xor
xor
inc
mov
sbb
push
mov
je
leave
pop
lods
sahf
popa
shrl
sub
xor
int
mov
mov
push
and
xlat
mov
xchg
push
pop
je
xor
test
xlat
mov
addr16
das
decb
mov
jge
xor
mov
sub
sbbb
add
movsb
cmpsl
add
mov
call
inc
mov
push
pushf
pop
es
lds
push
popf
out
test
fsubp
fwait
scas
pop
cmp
push
test
pop
repnz
es
lods
std
in
dec
cmp
sbb
xchg
fstl
mov
mov
push
mov
or
call
dec
lods
sbbl
idiv
sti
cltd
shll
ret
push
aad
out
mov
or
cwtl
push
and
sub
push
xchg
insl
sub
jae
add
inc
ror
xor
push
lahf
ja
insl
jae
push
jge
mov
les
leave
dec
cmpl
mov
pop
cld
xor
es
fwait
mov
je
les
mov
mov
mov
lret
and
mov
data16
mov
daa
cmp
das
adc
insb
out
frstor
add
xchg
or
stos
pop
in
lea
in
shrb
popf
inc
imull
arpl
rcl
or
push
mov
pop
les
imul
mov
into
push
jae
sbb
adc
mov
cmpsb
xchg
jle
insl
mov
sbb
bnd
jecxz
fsubl
jg
or
cmp
mov
das
cmp
repz
pop
leave
lret
testl
push
fwait
and
xor
fsubs
xor
jge
xchg
pop
mov
pop
lcall
adc
cmp
movsl
icebp
movsb
mov
mov
ss
and
mov
add
mov
xchg
or
jg
jmp
xlat
jnp
incb
sti
add
fisubl
mov
jecxz
aam
mov
xor
les
lods
leave
leave
iret
mov
out
xchg
pop
and
jp
xor
fsubs
subl
scas
push
ljmp
pushf
sub
xchg
sahf
and
leave
adc
sub
xchg
push
xchg
inc
sarb
sub
insl
mov
les
cwtl
sbb
sub
out
sbb
ret
lds
jbe
ror
out
dec
xchg
push
testl
xor
cmc
jnp
iret
loopne
xchg
adc
mov
jae
out
or
push
es
dec
cmp
imul
sbbb
jo
loopne
sub
in
cmp
test
jmp
mulb
movsl
jbe
loopne
addr16
mov
mov
arpl
and
pop
js
imull
mov
jbe
mov
lds
mov
xorl
add
mov
sub
adc
movsl
les
in
sbb
push
gs
cld
fmuls
pusha
insb
les
xchg
sbb
std
adc
push
outsb
dec
arpl
leave
hlt
stos
aad
xchg
mov
in
pop
jge
loope
rcr
jbe
das
jae
push
mov
aad
cld
inc
pop
pop
inc
neg
and
aas
outsl
repz
sbb
mov
cmp
push
cli
js
mov
iret
cmpsb
popa
dec
jecxz
rorl
mov
mov
sbb
xchg
mov
mov
imul
aad
mov
pusha
xchg
inc
jnp
popf
fwait
mov
cmp
mov
iret
ja
jns
testb
push
in
xor
roll
mov
mov
test
xchg
sahf
push
test
push
sbb
mov
sub
movsl
add
xchg
loop
push
xchg
mov
cmpsb
xchg
pop
inc
xchg
rcll
fdivl
enter
jge
add
xchg
sti
pop
movsb
pop
add
inc
mov
fcoms
js
ret
fisttpl
nop
mov
mov
les
int
cld
add
stos
imul
or
adc
mov
cs
gs
and
stos
or
pcmpeqw
pop
mov
jg
jne
xchg
ret
stc
xchg
push
sbb
cltd
aas
and
fidivs
cld
cmp
out
imul
mov
pop
fsubl
fdiv
cld
inc
mov
mov
insl
inc
mov
push
into
push
neg
xchg
add
xchg
mov
stc
sahf
stos
aas
shll
sub
scas
pop
push
in
push
or
enter
adc
hlt
push
sbb
fsubrl
mov
mov
pop
repnz
cmpl
popa
jns
loope
mov
je
out
frstor
lahf
ret
add
lods
pop
inc
dec
ja
ss
adc
jge
ja
gs
mov
fsubrl
mov
add
add
outsb
and
dec
rolb
xor
scas
xchg
je
icebp
jbe
pushf
xrelease
cld
rol
sarl
mov
popf
or
pop
mov
sbb
rcl
insl
dec
mov
roll
jg
out
in
xor
sbb
sti
jb
mov
cmp
mov
adc
mov
icebp
sub
dec
rclb
pop
jg
out
add
sub
inc
js
cs
xchg
mov
insb
mov
mov
roll
mov
jbe
jp
paddq
pop
mov
dec
xor
cmp
testl
or
xlat
cmp
rcrl
fdivs
int
mov
cmpsb
pop
add
test
sbb
cmp
mov
mov
insb
mov
pop
jp
adc
xor
xchg
hlt
xorl
mov
in
movsl
pop
stos
push
mov
jnp
ja
inc
adc
insb
cli
sahf
fwait
or
repz
outsb
and
sub
push
push
stos
or
push
es
dec
in
pushf
testl
inc
mov
sbb
jge
loopne
add
ret
xor
pop
mov
sbb
icebp
mov
cmp
movhps
cs
cmp
in
xor
inc
pop
sub
cmpb
test
mov
sub
and
xchg
inc
cmp
into
xor
movsb
xchg
xlat
aas
xchg
push
mov
add
pop
mov
aaa
popa
xor
xor
jl
popa
sub
xor
adc
xchg
add
in
sub
jg
leave
sbb
dec
sub
pop
inc
fmuls
jge
test
mov
jmp
aaa
loope
fisubrl
inc
test
cmpsl
rcll
push
imul
and
test
cmp
filds
repnz
cmpsb
cli
ss
mov
loop
lcall
je
push
pop
adc
push
aas
addb
mov
stos
bound
adc
test
int
stos
xor
out
mov
pop
mov
or
xchg
out
sbb
inc
mov
push
dec
addb
rcll
hlt
jg
ja
push
sub
negb
xor
mov
aaa
lock
pop
cmp
sub
xchg
pop
jae
jge
pop
adc
and
int3
faddl
or
mov
jae
xchg
pop
push
add
inc
jmp
fsubl
rcll
call
mov
test
movsl
pop
aaa
arpl
pop
mov
add
les
sbb
mov
mov
outsb
pop
stos
xchg
fmull
sbb
cli
or
mov
in
xlat
pop
sbb
shr
sub
pop
xor
aad
dec
mov
xchg
pushw
outsb
pop
mov
or
ficoml
lret
mov
into
push
lods
jge
jg
hlt
dec
push
out
aas
push
push
xchg
fwait
xchg
sub
les
pop
jnp
nop
cmpsb
clc
das
jne
xchg
xchg
loopne
inc
sub
je
movsl
pop
or
pop
fst
inc
stos
inc
enter
scas
rcll
xor
xchg
pop
mov
xor
inc
mov
mov
gs
mov
cmpsl
adc
mov
fistps
cld
push
shll
dec
cmpsb
cwtl
sti
out
js
icebp
sub
es
in
ja
pusha
jne
mov
in
add
cltd
fcmovnbe
cmp
mov
test
mov
cwtl
aad
sub
fidivl
repz
mov
loopne
mov
sub
sub
rcl
inc
or
xor
jbe
mov
add
inc
fdivrs
mov
push
pop
js
fnstenv
bound
inc
out
dec
push
fwait
dec
and
add
mov
cmp
mov
jmp
xchg
inc
aaa
push
or
push
or
dec
mov
nop
enter
divl
push
inc
jecxz
mov
es
clc
popa
mov
mov
hlt
and
pusha
lods
dec
rorl
jg
jno
mov
divl
in
pushf
sub
jne
push
mov
cs
pop
decb
xor
jns
daa
xchg
cmp
stc
pop
adc
inc
repnz
and
pop
es
scas
movsl
jbe
rcrb
lods
shlb
dec
jp
sub
in
xor
push
fwait
xchg
mov
insb
and
dec
dec
cmc
pand
or
test
sub
inc
mov
shl
test
ret
adc
push
xor
shlb
mov
fnstenv
roll
xchg
mov
xchg
dec
and
shll
adc
addr16
add
leave
adc
fsubl
lock
lods
or
lcall
out
scas
pusha
or
and
aas
fs
fsubrp
lret
cmpl
mov
cmc
pop
mov
xor
mov
movsb
adc
cmp
or
adc
cld
gs
cmp
jge
jae
inc
and
sub
fmull
add
in
or
add
out
mov
iret
jb
cmp
pop
or
rorb
mov
arpl
or
lods
in
pop
adc
stos
lock
sbb
push
sbb
jmp
mov
add
das
lldt
jge
push
dec
sahf
jle
jmp
fxch
mov
jno,pt
out
out
jnp
dec
data16
adc
inc
dec
ficompl
mov
sub
ljmp
or
enter
popf
adc
fists
in
cmpb
fsubl
pop
xchg
mov
add
xchg
insb
ljmp
push
xor
xor
dec
and
ficompl
ret
mov
call
lcall
jne
test
dec
sub
pushf
outsl
mov
inc
call
lods
dec
fidivl
cld
mov
mov
mov
sbb
mov
adc
mov
push
data16
inc
pop
xchg
bnd
imul
or
idivb
dec
mov
fimuls
or
jae
adc
inc
scas
and
rcrl
addr16
arpl
and
stos
divb
into
sbb
sbb
cmp
fsubl
popf
adc
inc
inc
test
mov
sbb
inc
inc
sbb
xor
loop
pop
aaa
push
and
push
data16
lcall
hlt
adc
jae
push
mov
lcall
das
cwtl
push
pop
gs
and
xchg
mov
jne
movsl
xor
in
test
jo
xchg
mov
inc
adc
adc
pop
dec
mov
sbb
popa
ret
xchg
data16
in
loop
cmp
or
add
dec
and
sub
push
inc
push
inc
inc
inc
cmc
test
dec
pop
mov
mov
lcall
jno
add
test
push
nop
aad
cmp
push
idivb
jae
xor
ljmp
jne
mov
lret
mov
mov
jns
orl
in
test
imul
mov
push
pop
xchg
and
mov
and
dec
ljmp
in
shrb
dec
test
cmpsb
or
sbbl
jmp
sbb
sbb
mov
inc
xor
loop
jl
cli
inc
and
cmp
mov
push
mov
addl
and
iret
mov
jmp
popf
je
adc
mov
in
stos
mov
in
adc
xchg
push
int
pop
or
xorl
xor
lret
ret
movsl
pop
jns
rcl
pop
pop
leave
enter
jg
pop
adc
jae
pop
jmp
mov
adc
jo
mov
mov
in
rclb
push
xchg
or
std
add
push
pop
pop
loopne
fisttpl
xor
and
rol
popf
mov
push
push
jg
cmc
or
mov
cmpsl
cmc
mov
xor
ljmp
popf
scas
test
test
cmp
cmpsl
dec
jle
daa
push
sbb
pop
outsb
iret
lret
add
pop
pushf
jle
stos
mov
idivb
es
xchg
jbe
fsubp
into
mov
aam
iret
xchg
mov
xor
adc
xchg
mov
xor
ficomps
cmpsb
pop
les
fwait
and
inc
dec
cmpsl
gs
je
xchg
jae
aaa
push
pop
pop
or
jge
or
dec
xchg
push
xchg
test
sub
xchg
push
xor
jo
enter
dec
lods
jg
pusha
movsb
sbb
movsl
rcll
es
mov
je
jmp
mov
fidivs
mov
roll
repz
sub
or
cld
seta
jmp
andb
adc
cmp
cli
adc
loopne
ret
cwtl
add
jnp
lahf
xor
sub
dec
dec
dec
xchg
xlat
in
pop
imulb
mov
fdivl
adc
cld
pop
les
add
sub
stos
pop
jbe
frstor
es
and
in
lods
jae
mov
mov
stos
stos
pop
sub
inc
insl
std
xor
icebp
imul
inc
jbe
leave
mov
pop
mov
pusha
insl
cmp
and
or
outsl
jbe,pn
loop
je
js
sbb
shrl
insb
jp
xchg
sbb
dec
daa
or
xchg
addr16
push
and
mov
mov
aas
sti
push
xchg
push
test
popa
xchg
scas
ret
sti
push
cmp
or
cmpsb
jns
mov
ja
popf
fistpll
xchg
stos
mov
adc
mov
and
adc
jbe
inc
mov
mov
hlt
je
popf
and
ljmp
mov
pop
jmp
and
popa
push
dec
mov
ljmp
cmp
jl
push
loop
mov
xchg
lock
lcall
cli
xchg
stos
pop
xor
push
mov
icebp
pop
imul
push
pusha
jg
mov
movsb
stos
mov
mov
or
mov
shll
jb
xchg
sbb
das
cli
arpl
repnz
and
jnp
push
fldt
cmc
cmp
imul
ret
stc
or
jo
in
data16
ss
pop
xchg
jecxz
aaa
ret
hlt
cmp
pop
movsb
cmp
or
xor
lods
testl
cmp
enter
dec
enter
mov
outsb
leave
das
aas
inc
stos
sub
jmp
dec
xor
js
mov
stos
icebp
mov
dec
cmp
outsl
test
pop
addr16
adc
adc
aam
mov
stos
jbe
pop
cmp
shll
inc
sahf
jp
ret
fwait
stc
xorl
cmp
pop
mov
jmp
adc
stc
scas
jbe
cld
popa
aam
mov
pop
bound
and
flds
xchg
fidivrs
adc
jne
pop
lcall
popa
sahf
in
lcall
std
and
in
daa
jmp
ja
sub
sub
in
movsl
inc
cmp
imul
mov
jg
push
push
outsl
orl
add
pop
jae
cmp
jo
dec
movsl
push
loopne
sbb
mov
shlb
cltd
lods
ret
pop
cmovb
jmp
test
dec
sbb
lcall
xchg
mov
subb
test
mov
mov
mov
into
pop
cmpsb
and
imulb
mov
icebp
and
std
mov
dec
ja
dec
call
cmp
mov
ficompl
insb
jp
xor
lea
sbb
xor
add
mov
inc
or
jb
and
in
push
cmpl
and
cmp
push
push
jns
nop
inc
mov
pop
lret
adcl
clc
adc
orl
sbb
sub
xchg
cld
inc
aad
and
push
xor
push
xor
sbb
xor
andl
cmp
sub
out
icebp
sub
xchg
ficoml
aad
test
addb
jae
test
adc
lds
push
or
roll
push
mov
std
xor
adc
sarl
cmp
cmpsb
mov
inc
push
test
cli
ja
cmp
test
jmp
push
pop
dec
jg
sbb
inc
jmp
out
and
mov
mov
xchg
cmpsb
inc
dec
in
and
add
xchg
imul
dec
cs
sub
je
mov
add
aas
in
faddp
enter
pop
stc
cmp
push
mov
cmp
xchg
test
je
fdivrl
in
push
xchg
adc
popa
test
pop
rcll
lea
cmp
dec
cmp
and
push
inc
xlat
int3
push
jnp
cmpsl
add
movsl
add
das
mov
dec
xchg
in
push
cmp
mov
in
inc
mov
rcrl
jae
outsl
cli
test
repz
push
mov
inc
xor
fiadds
stc
lret
mov
dec
fldenv
out
adc
jp
sub
aad
sarl
clc
arpl
shrl
enter
dec
add
push
pop
in
and
ret
push
sub
fdivrs
jne
mov
xchg
cltd
or
jg
and
add
mov
cwtl
pop
stos
rorl
andb
lcall
push
push
jecxz
cli
xchg
cs
xchg
ds
cmp
andb
leave
outsl
dec
pop
dec
jb
push
lods
mov
pop
inc
dec
mov
inc
jle
das
xlat
push
push
testl
mov
fcoms
popa
test
clc
mov
pop
push
cmp
add
sbb
sub
in
aaa
sbb
pop
sub
shlb
aam
gs
inc
dec
push
add
inc
mov
cld
xchg
cmp
cmp
push
negb
loope
aam
and
push
lret
cmp
imul
test
shl
es
aam
jmp
pusha
mov
sub
dec
inc
jae
cltd
jns
fimuls
fwait
ret
out
or
mov
push
inc
jae
mov
mov
in
push
push
cmp
in
push
mov
insl
enter
fbld
jg
lods
jb
js
addr16
dec
mov
ljmp
push
gs
cmpb
sub
dec
shrb
popf
ficomps
fldl
pushf
inc
mov
inc
rcrl
dec
dec
cmp
xchg
inc
mov
pop
sub
iret
psrlw
mov
lods
pop
leave
xchg
cli
jmp
out
test
ljmp
xchg
test
mov
jnp
movsl
push
sarb
lcall
lret
scas
xor
sub
cmp
or
js
mov
jns
fwait
add
mov
or
jmp
in
add
or
mov
jmp
js
xlat
add
mov
and
in
nop
inc
mov
add
repz
sar
xorl
cmpsb
popa
and
mov
jle
push
push
and
pop
mov
mov
mov
iret
cmp
xchg
incl
xchg
pop
and
mov
fcoml
test
fs
shrb
aaa
pop
dec
das
xor
mov
cli
ljmp
sub
inc
fldcw
mov
and
dec
inc
jae
shll
mov
inc
and
test
inc
sbb
mov
repnz
xchg
adc
js
jo
dec
jmp
sbb
loopne
dec
addb
daa
add
push
lret
out
add
leave
jo
or
cmp
das
and
jbe
cmpsb
mov
lahf
mov
ja
mov
xchg
bound
sahf
push
mov
add
out
outsb
and
sarl
sub
cmp
pop
fnsave
sub
ljmp
push
movb
aaa
push
pop
jp
jg
bound
mov
jnp
rol
pop
cmc
movsb
popa
push
addl
mov
xchg
xchg
sbb
jg
jns
jno
dec
push
add
movsb
xchg
jg
shlb
stos
mov
push
int3
pop
aas
fcoml
scas
add
push
add
push
rcrl
test
fcompl
cs
adc
push
mov
lods
bound
xor
jo
lods
inc
fimuls
or
dec
xor
jbe
fbstp
mov
test
xchg
int3
int
fnsave
rcrl
popf
mov
cmp
dec
cmp
js
leave
inc
ljmp
je
fcmovne
cmp
arpl
rorl
mov
lock
pushf
cmpsl
test
xor
lock
jmp
cs
mov
andl
push
mov
sti
daa
add
xor
sub
add
sarl
mov
inc
in
nop
push
jmp
push
imul
xchg
aaa
mov
adc
aaa
sub
popf
ds
sbb
cltd
aaa
mov
daa
and
cmp
ds
mov
add
inc
mov
or
cbtw
xor
sbb
scas
in
mov
xor
dec
push
mov
push
xorl
insb
aas
xchg
xor
mov
mov
cltd
lahf
mov
ljmp
push
rclw
sbb
stos
cmp
xchg
xchg
xor
push
shll
or
cltd
or
and
xchg
xchg
les
mov
inc
mov
leave
stc
fcoml
sbb
mov
add
je
push
sbb
dec
mov
lcall
and
sbbl
test
lret
lods
loopne
or
push
fdivs
lahf
sub
pop
or
je
inc
outsb
mov
int
add
cli
xor
sarl
mov
sbb
or
fisubrl
lret
sbb
xchg
js
mov
xor
push
ja
mov
jecxz
mov
into
and
mov
jmp
xor
sub
adc
add
lret
les
pushf
lcall
cmp
hlt
cltd
loope
mov
push
xor
mov
rclb
push
hlt
sub
jne
insb
fistl
xchg
out
out
outsl
jo
push
sbb
adc
sub
vcvtpd2dqy
test
pop
adc
mulb
roll
cmp
fdivs
sub
push
or
sarl
addr16
sbb
adc
push
scas
lds
mov
pop
hlt
int3
add
aam
mov
or
mov
fiaddl
inc
ds
cltd
xchg
sti
xor
pop
inc
loop
cmp
je
xchg
loop
into
idiv
in
jg
aas
sbb
cmpl
or
std
xchg
or
adcb
cmp
dec
mov
xchg
in
inc
sbb
adc
adc
out
mov
fucomi
and
outsl
dec
dec
cmp
xor
popf
jl
leave
aam
adc
ss
les
jmp
fisubrl
mulb
adc
popa
roll
jg
icebp
out
in
data16
jg
lods
daa
push
outsb
les
sbb
lds
divl
jne
xor
scas
jbe
fsubrp
xchg
mov
sbb
cmp
pop
mov
mov
pop
fmull
sub
mov
add
and
and
jmp
out
popf
adc
in
shrl
repnz
sarb
sbb
jmp
shl
mov
cmp
add
hlt
push
mov
jg
mov
hlt
mov
add
cmpsb
ret
inc
jg
adc
xor
cmp
leave
loopne
sub
add
shl
js
mov
aas
loop
mov
jg
jl
mov
sbb
xchg
adc
adc
mov
loop
pop
iret
out
cmpsb
mov
jg
not
mov
into
hlt
mov
or
xchg
lods
cmpsl
and
xchg
pop
and
mov
jmp
test
leave
in
or
idivb
inc
mov
loope
push
out
mov
or
mov
xor
adc
push
cmp
fisttpll
mov
into
inc
xor
stos
sahf
enter
test
xor
sub
lret
cmp
jecxz
inc
notl
test
xor
repz
xchg
xlat
push
push
xor
xchg
mov
mov
imul
pushf
fmull
sbbb
sub
shll
mov
mov
ljmp
adc
mov
scas
cmp
fisubs
rorl
jne
enter
addr16
inc
outsb
mov
aaa
dec
xchg
movsb
xchg
jae
cltd
test
fisubl
inc
mov
je
jbe
stos
hlt
ja
outsl
xchg
sub
jae
push
push
mov
cwtl
out
xlat
das
push
movb
test
push
push
jne
jmp
ret
mov
mov
jmp
cmp
insl
sbb
repnz
rol
scas
frstors
arpl
add
push
sti
lds
in
cli
fadds
mov
lret
mov
cltd
stc
mov
ret
xchg
test
sub
clc
mov
inc
fimull
test
push
mov
xor
je
add
adcb
test
push
daa
jbe
or
in
jmp
in
fidivl
and
lret
cmp
repnz
xchg
sub
stc
sub
xchg
xor
imul
and
mov
imul
leave
out
xchg
add
add
jmp
xchg
mov
or
movsl
jge
hlt
mov
dec
pop
gs
sti
fwait
add
xchg
mov
cwtl
ss
aad
stc
fwait
push
ja
push
adc
xchg
sbb
cmp
ja
cli
inc
rclb
add
adc
loopne
mov
and
mov
pop
ret
inc
add
adc
lods
loope
test
int3
mov
shrl
adc
push
or
enter
clc
pop
sbb
test
sub
dec
loop
sub
mov
scas
mov
arpl
sub
std
mov
es
jb
cmpsb
add
sub
movsb
scas
cmp
push
add
xchg
faddp
add
and
outsb
ljmp
jbe
rolb
fimull
loop
aas
ljmp
push
mov
shr
jne
es
cltd
mov
stc
cmc
mov
xor
xor
and
fwait
and
xchg
cmpsl
xchg
cltd
sti
mov
mov
call
push
cmc
stos
enter
xchg
jecxz
imul
scas
add
add
mov
add
jmp
mov
xor
adc
es
mov
rorb
aaa
ret
inc
mov
gs
dec
adc
mov
jmp
stc
mov
cli
addr16
popa
outsl
push
in
dec
sub
out
add
gs
enter
sub
mov
xor
cli
jo
mov
div
jecxz
dec
sbb
lds
xchg
mov
inc
test
lcall
cmpsb
mov
lods
lods
sbb
arpl
hlt
in
jne
adc
adc
add
mov
or
shll
mov
or
mov
loopne
inc
sub
icebp
dec
dec
stos
xchg
repz
fnstsw
jecxz
ljmp
xlat
jo
imul
dec
sti
rcrl
jnp
push
dec
mov
or
pop
lret
sarl
fiaddl
testl
jns
fisubl
nop
aad
inc
push
mov
aaa
push
lret
es
pop
push
pop
test
int3
rol
sete
add
push
lods
movsl
sbbl
je
in
push
inc
fistpl
enter
shrb
aam
jae
lcall
mov
repz
adc
xchg
test
loop
lahf
push
sub
lods
adc
xchg
movsb
jo
mov
addl
int3
lds
lods
pusha
cwtl
jecxz
popa
mov
dec
fldt
ds
in
out
lret
test
push
adc
cmp
xchg
sbb
imul
xorl
add
leave
mov
cli
pushl
jae
adc
cmp
roll
dec
mov
pop
scas
in
sub
pop
mov
push
xor
popa
inc
repnz
bound
inc
iret
enter
ja
xchg
mov
addr16
dec
fcoml
shll
movsl
jo
adc
xchg
push
push
sub
mov
std
mov
add
pop
jmp
jne
subl
ret
sub
xor
testl
sbb
inc
mov
inc
jmp
mov
fldl
mov
push
cmpsb
push
mov
loop
cmp
adc
fneni(8087
jno
and
mov
cli
inc
loop
pop
cmp
or
or
icebp
js
leave
lock
push
xchg
add
rcrl
out
rcrl
xchg
movsl
xchg
loopne
jmp
int3
jl
jne
sbb
inc
xor
int3
xor
xchg
cmp
lods
cmp
cmp
clc
pop
jae
icebp
or
rorl
push
push
int
mov
adc
cmp
mov
lods
popa
shrb
fisubl
lods
sbb
test
addb
jno
xor
mov
fsubrs
shll
cmp
add
lock
mov
insb
push
mov
ret
jecxz
and
push
mov
leave
push
je
and
sti
cli
xchg
roll
dec
test
push
ss
jb
lcall
popa
jl
aaa
pop
popf
sub
jmp
dec
sahf
in
inc
dec
pop
cmp
xchg
jmp
jmp
xchg
jb
pushf
popa
xor
jae
inc
cmp
ss
leave
inc
sbb
lret
cmp
loopne
ja
jmp
xor
xchg
xchg
inc
push
repnz
popa
jne
push
add
lcall
aad
loop
mov
popa
sbb
jae
xchg
out
push
inc
mov
xor
mov
pop
loop
dec
sub
fsubrl
adc
insb
aas
test
push
dec
cltd
ljmp
xor
jge
push
in
loop
pusha
push
adc
dec
fnstcw
dec
testl
jmp
mov
sub
mov
push
mov
xchg
mov
push
cli
test
into
push
scas
hlt
andl
mov
hlt
cmpsl
xchg
ret
addr16
stc
arpl
mov
cmp
mov
xchg
dec
lds
xor
and
mov
jmp
int
mov
loope
or
jo
leave
cltd
xchg
sub
lds
popl
push
arpl
outsl
aam
push
neg
pop
xchg
enter
cmp
mov
aad
sub
xlat
lret
push
adc
adc
inc
shr
sbb
maskmovq
mull
test
inc
outsb
cwtl
mov
xor
inc
fwait
out
cmp
pop
inc
fadd
rcl
scas
mov
inc
jo
lahf
leave
jle
les
fstpt
fcompl
repz
sub
popf
out
xor
sbb
mov
and
push
cli
popa
test
mov
shll
mov
jbe
lods
push
inc
inc
fyl2x
add
xchg
data16
jo
out
cwtl
popa
xor
mov
adc
shl
cs
jecxz
pop
out
sti
enter
or
lods
sbb
loopne
cmp
pop
shrl
decb
pop
mov
xchg
or
lock
int3
xor
sub
and
mov
popa
aaa
inc
adc
cmp
fmull
pusha
add
pop
mov
xchg
bound
pop
gs
pop
xchg
in
jecxz
cmp
jmp
fstpl
addb
cmp
push
mov
push
push
cmpsb
ds
loope
dec
arpl
mov
dec
je
pushf
lcall
test
cmp
mov
es
fisttpl
sahf
dec
mov
call
sbb
xor
jb
jmp
jg
mov
adc
push
xchg
fnstenv
in
lcall
sub
jne
test
pop
jmp
pusha
adc
std
push
sbb
jbe
inc
jg
pusha
xchg
inc
mov
ja
in
adc
sub
lahf
jg
les
es
cmc
or
mov
into
cmpsb
pop
aaa
push
orb
imul
mov
mov
pop
addl
inc
lahf
pop
pop
pop
or
stos
mov
sub
test
inc
xchg
aas
lahf
movsb
ror
pop
add
push
leave
mov
sbb
les
sbbb
shl
mov
sahf
stc
test
jae
add
inc
xchg
inc
pop
lahf
fwait
sub
cmp
sbb
push
push
daa
lea
jae
pop
mov
outsl
lods
pop
mov
mov
adc
or
in
ud0
adc
ss
mov
xor
push
add
test
call
fnstenv
jg
clc
sbb
xchg
scas
addb
scas
xor
xor
mov
cmp
cld
jmp
mov
adc
faddl
dec
xchg
inc
cli
mov
dec
movsl
lahf
jnp
jb
jbe
or
xchg
sbb
sub
lcall
sbb
pop
mov
and
lods
lock
cmp
sbb
mov
mov
test
in
sbb
xchg
and
sbb
bound
mov
mov
fmuls
cs
popa
movsb
mov
mov
and
mov
pusha
or
loop
mov
test
cmp
ret
xchg
inc
leave
mov
xchg
loopne
loope
mov
inc
pusha
repnz
or
daa
roll
sub
mov
out
and
bound
push
and
cmp
push
lea
mov
lcall
in
repz
out
arpl
into
dec
scas
pop
xor
aaa
xchg
movsl
pop
cmp
shrb
sbb
sarl
push
test
scas
mov
mov
mov
lea
test
aas
push
or
int3
jnp
jbe
mov
jecxz
fsub
mov
push
out
push
ss
pop
add
push
jmp
rolb
cltd
jg
aaa
inc
mov
pop
push
or
loopne
inc
push
or
stc
push
aam
dec
ret
leave
out
test
movsl
test
push
push
rcrb
stc
cmp
push
add
mov
xchg
out
lret
or
mov
xor
shlb
loop
stos
cmpsb
addr16
movsb
add
push
notl
lahf
jmp
pop
je
pop
filds
or
pop
pop
aad
es
mov
fcompl
xchg
cmp
shll
ret
cwtl
arpl
sbb
loopne
fwait
adc
dec
add
sub
xor
sbb
in
cmp
xchg
xor
xor
or
cmpsl
dec
sub
inc
stos
cmp
fsubrs
mov
sub
add
xlat
testl
insb
dec
ja
and
jnp
push
pop
mov
xchg
xor
enter
arpl
inc
adc
dec
ss
or
sbb
inc
addb
scas
es
push
add
sbb
or
in
les
pushf
testl
test
mov
das
cld
pop
push
outsb
stos
pop
ds
jmp
je
stos
inc
inc
outsl
ret
in
add
mov
insb
cmpsb
fdivl
ret
push
mov
outsl
aam
mov
push
arpl
sbb
rcrb
ja
in
lahf
pop
or
mov
sarb
xor
js
mov
loopne
roll
xor
mov
mov
and
add
ljmp
test
jb
sahf
mov
and
insl
aaa
inc
mov
mov
popa
jecxz
sbbl
les
xchg
mov
outsl
arpl
fdivl
push
sbb
jecxz
aad
dec
sbb
xlat
iret
push
pop
cmp
add
push
je
shr
test
aam
aam
pop
fmulp
mov
stos
or
imul
mov
jmp
loopne
mov
bound
jle
push
ja
mov
pop
inc
mov
out
or
or
stc
mull
lods
adc
aaa
jne
sub
xor
shll
dec
rclb
popa
xchg
jae
test
and
cmpsb
inc
add
or
fimuls
stos
adc
and
popf
lret
js
into
dec
cmpsb
mov
push
dec
clc
jb
adc
dec
xchg
add
ja
and
loop
push
mov
mov
mov
cmpsb
mov
push
pop
loopne
add
call
mov
rorl
jae
leave
push
outsb
je
stos
pop
mov
ja
sbbb
mov
xor
stos
jg
pop
cmp
mov
xor
sub
rcrb
icebp
adc
jnp
andl
pop
out
jp
sub
aaa
push
lds
dec
dec
rclb
mov
test
xlat
pop
mov
cmp
pop
arpl
stos
mov
test
mov
jbe
jne
lods
or
xchg
push
mov
ret
or
xchg
jecxz
adc
push
sbb
das
dec
adc
jmp
mov
mov
test
cmp
sbb
das
sti
mov
mov
xchg
xchg
subl
xor
mov
mov
rcrl
and
in
idivl
sbb
sbb
mov
inc
lahf
aaa
test
or
jp
fxch
lods
pop
sbb
xchg
mov
lds
roll
cmp
js
push
fcoms
and
push
mov
fistl
pop
sbb
clc
mov
imul
mov
call
mov
dec
mov
jmp
sarl
pop
cmp
mov
pop
mov
mov
repnz
xor
fcompp
test
xchg
mov
ss
jg
pop
sub
in
and
stc
push
test
mov
incb
xor
lods
cmp
lahf
adc
inc
jne
xor
popa
xor
push
sarl
pop
adc
pop
fidivrs
jecxz
inc
icebp
test
or
mov
push
push
xor
mov
lcall
nop
jp
xor
cwtl
push
popa
add
sub
fnstcw
and
sbb
mov
sbb
cltd
jl
daa
jnp
xor
or
cmp
xchg
aas
insl
xor
jo
sub
outsb
sbb
test
lret
rol
ljmp
dec
test
enter
add
ja
pop
xchg
mov
cmp
sub
xor
mov
or
enter
pop
stos
jl
addr16
push
adcl
outsb
pop
and
enter
loopne
call
mov
andl
js
stc
scas
mov
or
out
xor
mov
les
mov
xchg
das
cmp
sbb
iret
testb
dec
shll
sbb
or
adc
sub
data16
push
sbb
jmp
add
mov
jecxz
xchg
pop
pop
jg
pop
push
lds
scas
int
in
jae
cmp
add
sub
fs
and
adc
mov
imul
cmp
xchg
xchg
pop
leave
push
lcall
rcrl
lea
dec
fildll
xchg
inc
jno
in
fwait
imul
sbb
jbe
std
and
in
fildll
test
adc
inc
shrb
adc
mov
dec
or
fdiv
jo
lods
add
fisttpll
stos
mov
or
lds
aaa
je
mov
les
mov
jp
out
aad
es
jg
jbe
push
mov
sbb
outsb
dec
loop
mov
mov
adc
in
je
adc
pop
xor
xor
das
dec
repnz
lahf
ljmp
shll
or
aaa
sahf
pop
jmp
aad
insb
push
imul
adc
int3
ds
and
push
dec
cmpsl
lret
xchg
repnz
incb
xchg
cltd
lods
loop
cmc
pusha
testl
scas
call
pop
aas
jae
mov
adc
pop
xchg
les
pop
cltd
cli
lcall
jge
fbstp
sub
push
cmp
push
push
movsl
push
jg
or
data16
dec
xchg
mov
rcrl
pop
dec
leave
loop
enter
xor
lods
iret
int3
les
inc
jp
stos
mov
xchg
mov
pop
inc
dec
out
cmpsb
jnp
or
sbb
divl
insb
jmp
fisttpll
xchg
icebp
mov
shl
and
insl
ret
dec
jge
sbb
stc
sbb
push
lret
arpl
mov
cli
mov
mov
jno
pop
mov
out
leave
gs
xor
push
loop
push
pop
mov
push
loopne
xchg
test
xorl
xchg
and
pop
mov
pushf
test
mov
ds
inc
cltd
hlt
loop
test
mov
push
sbb
xchg
push
popf
inc
xor
add
dec
or
pop
je
adc
inc
int
pop
xlat
xchg
jmp
xorl
cmpsl
adc
cmpsl
sbb
data16
test
mov
test
cmp
dec
mov
xchg
shll
enter
jae
cs
add
cmc
sbb
xchg
movl
movsb
test
sti
loop
sub
test
push
jle
dec
xorl
movsb
outsl
pushf
sbb
stos
jnp
popa
imul
loope
sub
repz
insb
dec
xor
pop
or
adc
cmp
cwtl
lret
inc
pop
sti
inc
andl
mov
lea
or
xchg
aad
inc
mov
sbb
and
jnp
out
cmpsb
mov
xchg
into
jl
xor
es
sub
inc
sub
gs
fwait
push
fwait
mov
test
xchg
in
inc
repz
adc
sbb
jno
sahf
fstps
stos
out
mov
fwait
push
stos
push
fsubl
stos
inc
gs
mov
dec
lods
int3
mov
shr
arpl
aam
mov
fwait
mov
test
stos
lods
pop
les
dec
mov
or
scas
ret
mov
andb
mov
icebp
mov
aad
stos
mov
push
inc
fwait
test
call
dec
pushf
pop
in
jmp
es
sbb
adc
push
or
imulb
into
cmp
xor
mov
bound
mov
and
jmp
testb
xchg
add
mov
negb
cmp
add
push
jmp
ret
jo
sbb
mov
mov
aaa
mov
mov
jge
fldl
push
addl
cmpsl
mov
stos
dec
fwait
xchg
in
in
xchg
lods
adc
mov
sti
fsubrp
sbbl
and
dec
imul
andl
pop
fsubs
and
ret
push
test
les
loop
dec
add
leave
fildll
fildll
outsb
stc
and
dec
pop
xor
sbb
lahf
or
popf
jmp
fmulp
mov
jo
sub
ljmp
xchg
jno
aam
aas
jp
mov
xchg
and
lret
sti
mov
adc
and
jmp
xor
out
pop
cmp
into
mul
ljmp
mov
xchg
lods
dec
push
jnp
push
inc
out
cmc
insb
sarl
sub
ret
dec
xor
je
cli
repz
es
sbb
xchg
enter
pop
loop
xchg
lahf
mov
cltd
jmp
stos
shll
out
orb
xchg
dec
movsl
inc
cmp
ret
daa
mov
sbb
out
xchg
ss
clc
gs
xchg
fs
sti
push
nop
shrb
std
sub
push
pop
lcall
inc
push
cmp
sbb
mov
pop
adcl
mov
xorb
sbb
jge
rcrb
repnz
cltd
add
xchg
push
dec
xchg
mov
leave
loopne
fwait
jmp
movq
sarb
mov
and
push
addr16
pushf
jbe
push
pop
mov
add
insl
clc
mov
mov
mov
dec
mov
lock
adc
imul
ret
clc
imull
and
sbb
popf
inc
movsb
pop
and
jne
push
gs
sub
outsl
fistl
jne
push
and
xchg
xchg
xor
fcmovne
dec
cld
pop
lret
hlt
dec
mov
das
xchg
xchg
jne
push
mov
sbb
insl
add
jae
stos
shll
loope
insl
fcmovu
stos
xchg
or
jo
sub
xchg
fldlg2
mov
dec
pop
in
out
mov
andb
test
mov
jmp
rcr
jnp
lock
int
fmull
int3
jmp
mov
jmp
je
sbb
clc
fstpt
hlt
adc
cmp
pop
pop
stc
mov
jbe
test
into
rcrl
fisubl
lock
dec
pop
dec
xorl
es
mov
mov
or
and
xchg
mov
mov
movsb
dec
cmp
jae
js
inc
push
jg
daa
repz
ljmp
pushf
fists
jnp
sub
imul
pop
xchg
negl
pop
les
mov
popf
cs
ror
jnp
jmp
sub
ja
fsubl
out
addr16
pop
xchg
jb
fmul
std
and
aaa
fiadds
mull
xor
mov
xor
pop
mov
cmpsl
jg
lods
clc
inc
pop
adc
push
jg
js
mov
cmpsl
out
dec
in
ljmp
outsb
insb
popf
cmp
jnp
fstpt
in
rolb
sti
je
loop
aas
pop
push
ss
add
sub
leave
cs
push
movsb
out
xor
int
hlt
mov
les
cmp
sub
push
mov
stos
test
les
lea
and
mov
loopne
test
inc
xor
cmp
loopne
mov
enter
mov
jl
xor
cmpsl
test
insl
cmpsl
push
pop
bound
adc
repz
add
mov
adc
test
pop
inc
push
xor
adc
addl
push
push
lcall
push
mov
mov
mov
sub
pop
sbb
mov
jns
pop
mov
arpl
xor
adc
mov
std
movsl
dec
and
xor
xor
sub
xchg
and
in
inc
mov
data16
mov
inc
mov
test
stos
mov
push
inc
aad
inc
fnstenv
mov
sbb
mov
repz
mov
and
sub
jns
sbb
pop
push
add
jo
push
aas
je
aaa
adc
mov
daa
and
xchg
inc
sub
stc
sbb
lahf
sub
insb
xchg
push
out
push
and
mov
out
mov
pushw
mov
mov
inc
js
fldcw
into
xchg
sbb
sub
jecxz
adc
inc
sbb
push
gs
gs
xchg
ficoml
push
lahf
jg
jmp
es
adc
add
fcoml
pushf
and
insl
sbb
aad
mov
movsb
ret
jg
mov
in
pusha
les
adc
xlat
dec
or
cmpb
mov
mov
sbb
inc
push
pusha
add
xchg
mov
xchg
pop
mov
loopne
push
mov
enter
loopne
loopne
xchg
mov
pop
mov
adc
bound
arpl
cmc
adc
mov
dec
cltd
xor
sub
lock
lods
insl
and
rcll
lahf
arpl
mov
repz
pop
scas
mov
jg
mov
push
insb
lahf
mov
daa
ss
adcl
dec
mov
in
jl
mov
or
sbb
cltd
insb
cmpsl
aad
xchg
add
hlt
sarb
push
xor
loop
adc
ljmp
xlat
cli
pop
lcall
int3
or
ss
mov
mov
mov
sub
pop
dec
xchg
clc
rclb
aam
enter
xchg
cs
add
sbbl
adc
andl
adc
stos
jp
dec
xor
xchg
je
jle
lods
sbb
mov
adc
or
test
ljmp
hlt
rcll
mov
cmp
daa
xor
test
mov
leave
lret
scas
divl
cwtl
gs
ret
sbb
mov
arpl
stc
push
mov
mov
testl
mov
mov
int3
add
mov
mov
jo
jns
pop
loop
push
mov
mov
add
movsl
xchg
in
pop
pop
dec
pop
mov
jns
jbe
xchg
xor
pushf
leave
jne
inc
out
push
pusha
push
mov
in
mov
adc
adc
xchg
sbb
ss
dec
pushf
xchg
mov
xchg
jg
imul
imul
mov
mov
stos
jecxz
xor
lret
sbb
pusha
dec
cmc
jmp
mov
pop
mov
push
xor
dec
outsb
mov
push
ljmp
sub
shlb
dec
fmulp
pop
les
mov
cs
mov
or
cmp
xor
mov
inc
in
add
scas
leave
or
pop
sbb
xchg
in
or
xlat
ret
or
mov
xchg
jno
dec
std
loopne
mov
pop
dec
fbstp
mov
mov
sbb
lret
test
inc
cmp
mov
jnp
mov
xor
data16
gs
mov
sub
je
pop
inc
insb
mov
xchg
fs
rcll
imull
pop
xchg
dec
xlat
cmp
mov
enter
sbb
aaa
inc
add
and
cmc
mov
or
xor
shlb
mov
fs
dec
mov
add
das
mov
test
aas
lcall
in
andb
ficompl
fstpt
jmp
test
js
popf
push
cwtl
mov
pop
pop
or
lahf
ja
and
mov
pop
xchg
pop
jbe
test
xchg
aam
cmp
int3
rcrl
insb
das
xor
iret
dec
jnp
mov
xchg
and
mov
jmp
xchg
push
add
mov
inc
jo
push
inc
lret
fcompl
nop
or
pop
fnsave
xchg
stc
dec
sbb
pop
inc
xor
loopne
test
cli
ret
ret
rcll
call
rorl
push
cltd
mov
test
mov
enter
mov
mov
stc
rclb
addr16
out
leave
popa
push
cmp
inc
insb
xchg
xor
mov
jne
hlt
xor
and
pop
xchg
cli
enter
jne
loop
neg
lods
jae
xchg
repz
jl
push
xchg
data16
sbb
jnp
add
dec
leave
into
add
jae
fwait
js
pushf
adcl
fists
enter
mov
xchg
sbb
arpl
int3
test
outsl
shll
fldcw
mov
jbe
jg
cmpsl
int
mov
in
xchg
sbb
dec
fstl
out
inc
or
rcrw
adc
in
sbb
in
fcomp
dec
jbe
and
enter
lods
and
xchg
pop
mov
stos
mov
sbb
pop
rcll
sbb
sub
clc
fsubrl
jmp
mov
popa
jle
loop
xchg
mov
movsl
rorb
mov
mov
add
mov
jecxz
lods
dec
mov
repz
mov
fadd
push
ret
insl
xchg
scas
mov
insb
jle
mov
mov
lahf
inc
inc
test
loop
lods
lods
test
xor
dec
int
loop
pop
mov
lcall
sbb
pop
mov
pop
add
cltd
xchg
fdivrs
inc
in
cs
lea
sbb
mov
in
sub
fmuls
dec
test
sub
or
mov
ret
sub
in
push
or
xchg
iret
mov
aas
xchg
lods
cmp
xchg
adc
stos
fwait
push
pop
imull
adc
adc
inc
sbb
sbb
mov
les
xchg
dec
insl
push
dec
xchg
lods
stos
mov
add
clc
pop
mov
jae
adc
movsb
lret
loop
lret
cmp
adc
mov
adcb
mov
test
gs
cmp
mov
aaa
or
das
outsl
or
test
bound
xchg
mov
and
cmp
cs
fsub
and
mov
arpl
insl
cmpsl
aaa
xchg
mov
aas
xchg
add
rorl
sbb
stc
addr16
jl
push
je
je
adc
fs
int
dec
push
lods
sbb
adc
sbb
fsubr
repnz
divb
pop
shll
mov
loop
cltd
or
lret
jmp
in
inc
cli
fsubrl
cmp
daa
or
mov
push
stos
cltd
and
xor
xchg
cwtl
push
mov
or
lods
and
scas
cmc
push
test
fisttpll
cli
fwait
mov
pop
pop
lods
ds
jne
mov
loopne
mov
mov
push
xchg
inc
stc
ss
addr16
jnp
and
push
jb
shl
xor
jmp
negb
sarb
arpl
jns
inc
popf
add
or
es
test
add
xor
hlt
cli
out
lods
inc
mov
pop
jmp
sarb
leave
sbb
testl
movq
lahf
lods
adc
fildll
out
mov
out
les
bswap
cmpsb
addr16
lcall
mov
push
push
xor
push
pusha
data16
insb
imul
gs
cwtl
sub
and
xor
sub
les
mov
xchg
jne
lret
cmpsb
sub
insb
aaa
cltd
sbb
or
or
nop
add
xor
mov
sbb
mov
pop
jnp
mov
push
add
xlat
adc
and
add
stc
lock
aas
into
push
jl
aas
push
addb
xchg
adc
mov
mov
or
cld
shlb
xchg
inc
cmp
outsb
rol
fldenv
sahf
pop
add
inc
insb
fnstcw
lret
loope
mov
xor
lahf
sahf
data16
iret
cmp
sbb
fistps
lods
fstl
ja
stos
scas
and
sbb
lahf
xchg
fcomi
push
mov
jne
mov
jmp
and
and
negb
or
jecxz
adc
js
mov
frstor
adc
mov
gs
dec
jle
and
xchg
jne
lods
or
xor
bound
lcall
jp
sub
mov
mov
addb
lcall
jl
movsl
je
xchg
insl
jmp
insl
xor
aas
fiadds
sbb
pop
and
xchg
ljmp
das
dec
jnp
test
arpl
pop
pop
pop
aad
int
test
fdiv
stos
cmp
repnz
mov
cli
int3
scas
push
pop
and
jmp
or
shl
mov
xchg
jg
imul
daa
js
inc
xchg
xchg
add
jae
push
leave
push
jmp
or
xor
test
fadd
icebp
adc
push
push
xorl
fs
scas
sbb
inc
mov
jbe
test
call
cmc
dec
mov
xchg
sbb
lods
xor
js
jecxz
add
insb
mov
mov
pop
lret
leave
xor
vmulsd
rorb
push
and
push
fdivrp
adc
mov
mov
mov
es
cli
jge
fisubrs
sbb
popl
pop
mov
es
sub
lcall
fstpl
jno
lcall
fisubl
mov
sub
cltd
or
mov
sub
imul
cld
or
add
int
out
or
xchg
dec
fcmove
add
loop
ss
iret
jbe
pop
les
push
sbb
or
sbb
notl
enter
cli
es
jmp
sbb
pop
das
push
mov
mov
mov
int3
leave
test
mov
push
push
imull
inc
icebp
and
push
in
lods
imul
test
or
cld
clc
mov
test
incb
lret
fildl
add
sub
dec
mov
mov
outsb
mov
ficoms
cs
add
arpl
mov
jmp
sub
data16
sub
mov
jne
mov
pop
fcom
jo
inc
xchg
dec
add
or
dec
mov
adc
rcl
or
pop
mov
inc
mov
inc
mov
cmc
movsb
cmp
sbb
je
dec
lods
xchg
or
adc
repz
mov
mov
xor
dec
pop
pop
mov
subl
jge
inc
insb
test
and
pop
sbb
jae
jae
out
push
jg
xchg
mov
rorw
into
divb
cltd
or
ret
ja
cs
dec
test
or
inc
sarb
lret
aaa
adc
and
add
pop
sbb
pop
enter
out
test
das
cmp
rcl
sarl
into
mov
mov
pop
xor
mov
add
sub
sub
loope
loope
push
xchg
cmp
and
sub
inc
xchg
into
xchg
hlt
test
shrl
aad
xchg
outsl
movsb
adc
xor
es
ret
and
cmpsb
gs
clc
dec
add
push
add
adc
rcrl
mov
jg
dec
xlat
cmp
in
inc
popf
inc
push
fimuls
ret
xchg
inc
mov
xor
mov
inc
aam
jo
sar
cmc
cmp
push
push
cmpsb
and
shll
inc
lret
rorl
pop
jg
enter
mov
dec
arpl
cmp
sbbl
inc
loope
leave
addr16
sbb
loop
movsb
or
clc
je
addr16
shrl
adc
jge
jge
cmp
loop
jb
xchg
pop
sti
das
das
pusha
adc
mov
test
cmpsb
dec
xchg
mov
add
add
inc
push
sbb
cmpsl
mov
popf
inc
and
popa
daa
inc
adc
dec
pop
loop
outsl
stos
jns
mov
jl
sbb
jg
jmp
mov
pusha
fistl
outsb
je
pop
mov
adc
xor
imul
add
lds
sahf
das
sti
mov
negl
out
push
inc
xchg
popa
dec
sbb
push
inc
cmp
push
sub
pusha
cmp
cmpsl
jb
addr16
cmp
jl
scas
es
stos
jmp
cltd
inc
pop
mov
inc
sub
or
pop
leave
outsb
inc
push
sub
sbbb
dec
js
pop
jecxz
mov
and
aaa
xchg
shl
xchg
and
jecxz
xchg
aaa
xchg
jmp
scas
or
rcll
aad
pusha
sahf
mov
in
ss
push
push
adc
ljmp
xchg
sub
cmp
cmpsl
xchg
sbb
push
push
cld
jae
dec
xchg
pop
loop
in
mov
mov
mov
fldl
mov
popf
roll
sbb
jnp
mov
pop
push
cmp
movsl
ljmp
repz
jp
add
mov
push
jbe
subl
sbb
inc
hlt
test
mov
rcr
test
jns
xchg
and
cmc
push
ret
loop
movsb
pop
jns
fidivrl
stos
test
dec
mov
push
arpl
xchg
lea
cmpsl
insb
shl
mov
in
xor
test
in
jecxz
jno
xchg
dec
inc
leave
xchg
jecxz
sbb
in
push
push
es
movsb
push
mov
aam
mov
sbb
ret
gs
cli
cmpsl
sti
std
mov
push
loopne
insl
cmpsl
xchg
in
xor
cs
in
add
imul
in
fs
insb
pop
mov
jne
adcl
push
xchg
push
pop
movsl
lahf
jns
xor
js
adc
add
add
ja
repnz
pop
cmp
xchg
push
add
nop
in
mov
lret
mov
enter
int3
mov
pop
sti
ret
or
add
sbb
jl
xchg
cmp
filds
loop
cmp
jp
xchg
data16
and
dec
mov
and
dec
scas
mov
popf
mov
negl
data16
adc
mov
je
mov
testb
divb
and
and
ret
lahf
subb
or
roll
testl
mov
cld
fcmovnb
ds
sbb
loope
lds
mov
add
jmp
sarb
pop
loop
sub
cmpsb
test
jbe
int3
jmp
fildl
cmp
and
nop
inc
push
add
imul
fldenv
dec
sti
mov
jle
stos
sub
pop
inc
fwait
out
addr16
lcall
add
mov
push
mov
stos
mov
icebp
adc
repnz
mov
in
scas
inc
cli
aad
cli
pop
movsb
imul
jno
popfw
leave
or
mov
test
ret
add
mov
xchg
out
push
test
repnz
push
bound
and
mov
lock
mov
jo
cmp
jbe
mov
cmp
mov
sti
mov
mov
inc
stos
rclb
mov
arpl
insb
xchg
inc
xchg
jg
sbb
pop
mov
pop
daa
xchg
mov
fsubr
inc
inc
dec
aad
pop
xor
or
mov
mov
es
jmp
pop
loop
xchg
mov
xor
xchg
inc
popf
pop
cmp
xor
shl
push
push
in
cmp
pop
js
enter
mov
lods
gs
in
rorl
or
ret
add
push
jle
sub
push
cmp
push
add
push
in
cmp
subl
imul
es
ret
sub
hlt
fisubrl
sbb
mov
mov
das
hlt
jbe,pt
pop
xchg
add
xchg
mov
push
mov
and
test
fcmovne
stos
xchg
cmpl
stos
loopne
jns
shlb
test
mov
add
fnstcw
and
enter
xchg
ret
or
data16
dec
push
pop
ret
mov
push
sarl
ret
cmpsl
mov
leave
inc
cmpsl
push
test
stc
mov
loopne
jnp
div
hlt
stc
jae
inc
loope
outsl
mov
mov
mov
xchg
push
xchg
pop
cmp
daa
xchg
add
mov
dec
mov
cmpsl
decb
outsb
and
xchg
push
mov
fistps
enter
and
lods
inc
sbb
es
dec
jecxz
mov
fcompl
sbb
ss
mov
pop
cmc
pop
aam
outsb
mov
pop
xor
popa
cwtl
xor
push
mov
and
inc
sub
subb
jbe
sub
dec
pop
mov
in
push
mov
std
ljmp
mov
pop
into
cmp
and
out
sbb
scas
and
lret
js
mov
pop
inc
inc
xchg
push
cld
js
xchg
scas
iret
fimuls
xchg
fidivrl
je
xor
mov
in
lods
inc
loopne
les
ret
xchg
fs
fwait
cmp
aaa
stc
rolb
dec
or
mov
xchg
jns
aad
inc
cmp
lods
js
xor
pop
imul
or
arpl
push
test
pop
jne
cmpsb
jbe
pop
pop
xchg
divb
sub
cmp
xchg
dec
aad
push
fisubrs
sbb
push
sbb
sbb
addr16
shrl
shll
jp
mov
jmp
inc
mov
cli
jne
enter
push
sbb
int
pop
ljmp
mov
cmp
push
icebp
pop
outsb
mov
pop
jo
scas
inc
fisubl
xchg
pop
pop
cmp
movsl
mov
or
xchg
jo
mov
mov
mov
popa
out
shlb
nop
scas
push
mov
sub
mov
dec
mov
daa
add
jmp
xchg
div
pop
xor
push
test
rcl
push
outsb
mov
pop
xchg
push
xlat
mov
idiv
repnz
sarl
fdivrs
cmc
inc
data16
xchg
scas
or
mov
mov
add
inc
popf
lock
cltd
mov
lahf
mov
dec
xchg
in
mov
push
pop
push
sti
jg
insl
repz
pop
cli
lret
aaa
jno
add
ja
and
mov
xchg
lds
xor
aad
xor
cmpsl
sub
push
xchg
xchg
sbb
dec
fsubrp
jge
adc
sub
adc
cltd
dec
in
dec
xchg
or
fadd
out
jne
xchg
bound
push
outsl
rcl
inc
mov
sbb
loop
bound
xchg
sub
jbe
xchg
pop
adc
and
xchg
xchg
pop
insb
xchg
enter
insl
mov
test
imul
hlt
xor
not
push
lea
test
jmp
mov
enter
dec
outsl
arpl
cltd
leave
xchg
pop
sbb
mov
push
mov
jecxz
mov
jp
gs
int3
pop
jne
fsubl
in
fistl
add
stos
inc
sbb
pop
aas
add
cwtl
push
xor
pop
fmulp
int
mov
fiadds
lods
lds
or
test
add
pop
popf
data16
loop
xchg
xor
and
bound
out
dec
lods
mov
jo
aas
adc
add
nop
add
xor
fsts
icebp
push
lret
iret
out
enter
mulb
jne
pushf
out
dec
or
movsl
cld
jb
loop
popf
stc
addr16
mov
cmp
cmpsl
cmp
xchg
call
je
jb
and
push
ljmp
ss
lea
push
push
mov
mov
loop
movsb
and
inc
lcall
and
cs
mov
push
int3
dec
aam
adc
or
shl
sbb
add
pop
xor
dec
push
and
push
jo
add
dec
aad
sti
xchg
fnsave
sbb
cli
lods
fld
loopne
ljmp
subb
mov
and
pop
or
jmp
pop
push
xor
fidivs
cmp
push
pop
mov
add
es
xor
scas
push
aaa
xchg
or
cmp
loopne
or
popa
push
mov
rcrl
scas
sub
or
xchg
cmp
pop
hlt
aad
les
or
imul
andb
insl
xlat
addr16
fstpl
adc
xchg
stos
and
cmp
mov
jg
push
sub
lds
and
mov
xlat
cld
jae
jne
insb
or
mov
inc
addr16
dec
loopne
push
lahf
push
lods
insb
loopne
lock
leave
mov
testb
stc
inc
into
sub
jmp
jb
outsb
xchg
out
cli
test
cmp
jp
add
adc
add
pop
iret
inc
jg
pushf
popf
jmp
inc
and
movsb
mov
hlt
nop
fbld
mov
mov
sbb
dec
lea
aaa
xor
data16
sub
sarl
mov
loope
leave
in
xchg
push
mov
cmp
mov
popa
xor
jbe
inc
in
in
pop
mull
fcoml
notl
xor
add
imul
aas
fxch
cmp
jae
cltd
dec
cmp
pop
lcall
and
mov
insl
data16
popa
int3
add
sarl
scas
rorl
out
jae
cltd
dec
scas
mov
push
mov
mov
xchg
cs
xor
fidivrs
enter
adc
cli
pop
mov
mov
mov
inc
pop
js
inc
xlat
leave
in
mov
shrl
add
gs
aaa
push
shl
jae
push
outsl
js
int3
mov
cwtl
cli
mov
xchg
in
cmp
pop
sub
movsl
push
insb
das
int3
out
sti
loop
xor
push
int3
mov
test
push
mov
repz
ficompl
in
hlt
mov
pop
pop
fmull
jb
loope
inc
popf
xchg
sti
mov
pushf
fs
imul
dec
mov
push
imul
push
ret
pop
jae
cltd
ds
inc
cmp
iret
int
ds
or
stos
cmp
jns
jbe
je
out
push
fstl
icebp
test
out
or
add
xor
or
xchg
adc
cmp
test
shll
mov
addl
and
cli
mov
and
test
int
adc
xchg
fnstsw
mov
mov
mov
in
arpl
mov
stos
xchg
les
insb
imul
aad
sahf
xor
xchg
les
insl
mov
dec
jg
ror
lds
in
sbb
mov
mov
dec
fmul
sub
sub
pop
sub
dec
int3
or
mov
out
dec
and
pop
iret
mov
or
fisubrl
in
lds
cmp
in
loop
jne
aad
rcrl
sub
push
sbb
mov
mov
insb
popf
fcoml
outsl
jbe
xlat
lret
sbb
xchg
ret
mov
fistpl
mov
pop
xchg
push
mov
aas
adc
les
fstps
shrb
or
fsubrl
ja
xor
in
fldenv
nop
mov
xchg
inc
adc
jg
lea
jno
dec
push
adc
xor
imul
sahf
fisubrl
stos
out
ja
testb
in
rcll
mov
cld
add
popa
mov
jmp
jecxz
es
mov
aam
xchg
in
leave
sub
mov
mov
movsb
mov
sub
xchg
int3
aaa
lea
outsb
add
pop
fstl
xchg
push
test
adc
imul
movsl
test
add
mov
addb
rorl
xchg
cs
jl
xchg
lcall
mov
test
mov
es
lret
sbb
in
cmp
dec
dec
push
scas
pop
mov
and
sub
das
popf
fwait
aam
fidivs
rep
push
inc
test
adc
scas
cli
mov
pop
movsl
cmpsl
adc
int3
adc
add
cmpxchg
xchg
xchg
sub
dec
mov
shl
jae
inc
xor
shr
cmp
outsl
call
xor
andb
ja
pop
mov
jbe
ljmp
mov
lcall
aaa
lret
mov
xchg
xor
loope
je
out
fdivl
mov
repz
in
sbb
sub
jmp
add
ret
push
andb
cwtl
js
push
hlt
push
sti
xchg
mov
in
loop
xorl
test
and
mov
mov
fidivrl
mov
jae,pn
fnstenv
fcomps
jne
andb
shll
imul
mov
mov
mov
sbb
in
aam
pop
shl
mov
ret
int3
loopne
mov
pusha
insl
xchg
inc
das
filds
loope
je
iret
js
add
movsb
loop
cmpsb
cmp
mov
shrb
push
mov
stos
leave
mov
inc
jg
mov
lret
sbb
mov
ret
cmp
jg
movsb
jb
inc
dec
add
xchg
imull
add
stc
testb
shll
and
push
popf
mov
inc
in
in
stos
rcrl
fldcw
xchg
scas
mov
in
cmpps
sbb
sub
jge
push
es
push
add
movl
dec
adc
in
insb
ror
inc
loope
dec
cmp
jne
ljmp
jle
test
test
push
aas
pop
loop
lods
and
bound
push
add
call
sbb
push
xchg
bound
mov
mov
and
aam
imul
adc
add
sbb
pop
cmp
xchg
popf
testb
mov
es
dec
lea
dec
jne
cli
sbb
insb
loop
sti
into
hlt
fmull
icebp
jmp
xchg
mov
push
xchg
popa
xchg
push
or
int3
adc
je
es
sub
mov
sarl
in
push
rorl
cmp
divb
jo
mov
gs
cmpsl
cmpb
enter
push
pop
outsb
cmpsl
insb
mov
js
insl
sti
gs
in
mov
jle
cmpsl
fs
jmp
enter
mov
sub
jb
xchg
jo
add
cs
scas
lahf
cmc
test
xchg
jmp
push
out
xorb
xchg
stos
insl
lret
in
test
ljmp
pop
adc
add
int3
cmp
mulb
xchg
xor
sbb
pop
jnp
shll
pop
and
ljmp
push
adc
aam
push
xor
ret
aaa
and
enter
leave
mov
push
lcall
scas
mov
xchg
mov
scas
mul
mov
inc
pusha
xorl
pop
mov
cmp
mov
lods
lahf
inc
sub
mov
les
pop
xchg
cmpsb
sti
mov
sbb
in
inc
xchg
scas
or
popa
jmp
pushf
xor
fnstenv
xchg
jge
mov
addl
jae
test
jne
inc
fsts
fisubrl
dec
in
aam
aam
cmpsl
popa
inc
jmp
jns
mov
outsl
outsb
dec
loop
mov
jg
xor
add
dec
das
imul
and
cltd
in
sbb
pop
shrl
int3
cmc
push
jmp
push
pop
cwtl
in
mov
xchg
pop
test
andl
pop
adc
sub
or
out
mov
idivl
movsl
and
push
in
icebp
dec
or
insl
xor
popa
dec
cli
cmp
pusha
xchg
xchg
xlat
loop
mov
cs
or
xor
push
mov
mov
fdivl
xor
hlt
sar
xorl
jae
pop
int
je
pop
movsb
adc
and
dec
xor
bound
or
mov
mov
lea
popa
xor
jmp
adc
xchg
and
and
insl
cs
push
dec
mov
push
dec
push
mov
push
popf
push
mov
in
cltd
out
movsl
dec
push
js
jne
mov
and
rol
mov
jle
aad
inc
std
add
fstps
xor
adc
push
loopne
nop
xor
mov
sub
cmp
push
mov
popf
popf
or
xor
imul
mov
outsb
push
mov
pushf
jl
jnp
xchg
xchg
ret
xlat
stos
xchg
jo
js
inc
psubsw
pop
jae
punpckhbw
jne
orb
fwait
enter
xchg
pop
cmp
std
enter
xchg
mov
add
dec
mov
push
add
cmp
cwtl
mov
mov
cmp
mov
mov
stos
mov
push
add
cwtl
and
data16
into
lret
xchg
subb
shll
stc
push
xor
jne
nop
out
mov
jl
mov
push
or
ljmp
cmpsb
add
push
jp
push
into
cmp
sub
mov
movsb
lds
add
mov
orb
or
dec
je
les
jg
loop
test
xchg
xchg
sbb
sub
hlt
popl
mov
cmp
sbb
or
dec
mov
fsub
sbb
mov
mov
push
cmpsl
mov
repz
insl
xchg
es
dec
enter
out
out
or
sarb
push
insl
mov
je
pusha
mov
cmpsb
or
xchg
dec
mov
hlt
lcall
das
scas
lret
push
jmp
shll
jg
jecxz
lea
dec
les
jb
lret
sub
lahf
js
jno
sub
mov
ja
leave
mov
mov
movsb
sub
int3
mov
dec
fimuls
rcll
mov
mov
or
mov
popa
orl
fs
aam
cwtl
dec
jnp
imul
sub
xchg
fcmovb
loopnew
in
mov
jg
lcall
mov
mov
pop
shrl
scas
xchg
gs
arpl
and
imul
popf
daa
in
lods
dec
jle
add
mov
fdivs
mov
sti
jae
std
mov
stc
movsl
sub
cmpsb
xor
mov
jg
push
or
jae
ljmp
repnz
xor
xor
mov
cltd
in
aas
movsl
and
in
mov
in
es
dec
fcompl
mov
or
mov
out
lds
jg
mov
loopne
jno
pop
decl
aam
xchg
fiaddl
xchg
and
cmp
mov
mov
pop
mov
mov
mov
xor
pop
mov
int3
movsl
push
mov
cmpsl
cwtl
sbb
aas
mov
shrl
push
clc
lods
jg
movsb
or
mov
ss
insl
cmpsl
cli
enter
loopne
in
outsb
sub
dec
xchg
jbe
jne
shrb
adc
aas
jo
ffreep
icebp
data16
sahf
pushf
jbe
out
fwait
xor
das
mov
add
mov
adc
cmp
dec
out
dec
leave
es
xchg
out
leave
mov
mov
scas
pushf
dec
and
imul
cltd
fists
mov
mov
pop
movsb
dec
les
hlt
test
shll
add
jnp
js
rcrb
sbb
pop
push
add
mov
cmc
push
ret
imul
adc
dec
aad
xor
pop
mov
test
std
popa
dec
cmp
pop
lcall
xchg
mov
mov
inc
mov
jnp
push
mov
push
das
add
ja
xchg
imul
test
mov
jne
insl
lret
lods
pop
push
dec
pop
cmp
mov
psubusb
mov
sbb
jecxz
stos
mov
sahf
xchg
and
mov
mov
mov
pushl
inc
xor
hlt
dec
inc
sahf
int3
xchg
mov
pop
orl
dec
cld
lds
cli
sub
sub
imul
adc
push
jp
xchg
daa
movsl
dec
inc
push
pop
xchg
jmp
xor
mov
cmpsl
mov
pop
xor
xchg
and
cmp
jae
xor
jae
xchg
mov
test
mov
cld
loop
int3
adc
lret
xchg
xchg
adc
jecxz
dec
mov
sarb
dec
test
ret
lcall
lods
sbb
outsl
jns
addr16
adc
cmp
xchg
push
pop
rcl
test
mov
mov
popa
out
hlt
repnz
loopne
cmc
and
push
scas
pop
xor
fisubrs
dec
pop
cs
stc
sub
or
xchg
enter
push
sub
int3
cmpsb
ja
add
shll
cmp
push
sbb
push
mov
sarb
cmpl
in
mov
xchg
cmp
sbb
ss
aas
sub
sub
push
cltd
shrb
mov
mov
cmc
sbb
inc
jo
loopne
loop
jnp
into
ret
test
mov
xchg
inc
mov
int
xorb
sub
inc
popa
mov
mull
pushf
stc
rcrb
cmp
fiadds
cld
jg
out
leave
adc
mov
sbb
clc
and
mov
or
mov
loopne
xchg
mov
out
movsb
cmp
lcall
push
add
mov
aam
lock
mov
fnstenv
out
mov
andl
push
nop
neg
xor
sti
in
shrl
in
nop
mov
movb
jno
push
fcmovbe
xor
stc
scas
mov
jecxz
mov
push
xchg
push
aad
shrb
mov
add
push
and
stos
sub
fldenv
cmp
sub
xchg
and
ljmp
inc
mov
cmpsl
jle
pop
mov
xchg
xor
push
dec
fsub
lcall
lods
adc
lock
cmpsl
mov
mov
mov
bnd
jg
add
xchg
cmc
mov
xor
push
xor
fdivrl
xchg
int
std
repnz
cmpsb
rol
mov
stc
test
sbb
nop
in
lods
mov
cwtl
js
arpl
lods
in
mov
xor
xchg
int3
dec
xchg
ror
or
mov
add
sub
ja
test
insb
aam
les
not
outsb
xlat
or
arpl
scas
cmpsb
in
fstp
mov
dec
fs
cs
xor
lock
xor
test
mov
xchg
xchg
mov
cmpsb
cs
popa
mov
push
dec
sub
insb
pmulhuw
fwait
mov
jg
mov
popf
sub
cmp
xor
call
lret
fstpl
mov
fwait
add
popa
addr16
and
jo
jle
test
dec
lds
pop
ds
mov
lahf
push
mov
dec
testb
outsb
sarl
dec
mov
push
add
stos
push
lcall
cs
mov
inc
loop
into
adc
aaa
sti
jecxz
aaa
in
loop
jnp
adc
push
dec
adc
data16
add
lahf
pop
jae
push
or
mov
adc
add
or
xor
adc
and
scas
cmpsl
cmp
imull
pop
popl
mov
lea
cmpsb
or
or
mov
mov
mov
aas
rorb
nop
aam
ss
cmc
push
mov
dec
mov
mov
inc
push
ja
cwtl
je
loop
dec
mov
xor
xor
rclb
gs
out
mov
js
ss
in
cld
gs
jg
enter
addb
sbb
shrl
mov
stos
xchg
mov
fstpl
xchg
repz
aam
testl
fcomi
sahf
lock
mov
loopne
mov
ror
test
in
test
cmp
mov
imul
in
orl
ja
jbe
fwait
rcrb
mov
xor
dec
inc
es
insb
mov
test
out
mov
xchg
bound
mov
push
push
ss
adc
pop
lahf
andl
das
add
cmp
rolb
mov
xchg
loope
lret
hlt
addl
mov
push
inc
cmpl
int3
xchg
clc
mov
cmp
out
mov
dec
inc
stos
jmp
ret
negl
call
cmp
inc
ficompl
loope
ss
into
cwtl
cmp
ljmp
sbb
bound
push
sbb
sahf
sub
inc
mov
in
insl
pop
mov
xor
adc
push
mov
or
loope
xchg
jae,pn
mov
or
pop
jecxz
gs
jp
fstpl
push
out
jmp
and
ja
add
jmp
lea
cmp
or
out
xor
ss
fidivl
orb
aad
dec
cltd
frstor
mov
inc
shl
vpmacssdqh
sti
sub
insl
cmp
test
pop
js
mov
hlt
sbb
or
xor
cmp
stc
push
mov
sbb
stos
push
xchg
jne
test
int3
int3
js
das
js
mov
ja
in
cmpsb
xor
or
sub
adc
inc
xchg
lcall
jmp
adcl
addr16
xchg
mov
iret
mov
jl
push
cmpsb
mov
stc
mov
pop
iret
mov
jns
sahf
stos
mov
aaa
or
movdqa
mov
andb
dec
or
ljmp
or
jne
in
push
mov
leave
sub
xchg
push
mov
xlat
jle
sub
jg
push
leave
push
xchg
lea
scas
jmp
aad
inc
dec
push
stc
xchg
scas
pop
mov
cs
movsb
inc
pop
mov
xchg
sar
outsl
std
mov
lret
loop
sbb
adc
aas
in
push
xchg
or
xlat
dec
pop
cld
ljmp
imul
mov
xchg
pop
ljmp
ljmp
cmp
js
and
cmpsb
mov
fwait
pop
xchg
inc
or
cmp
sahf
xchg
das
xchg
rep
and
leave
mov
mov
inc
jns
bound
adc
shrl
std
cmp
pop
test
addl
fcmovb
jb
inc
fstps
jecxz
adc
jmp
mov
push
push
frstpm(287
or
or
andl
mov
jo
adc
mov
je
ret
adc
dec
sub
jae
lcall
mov
leave
push
ds
mov
enter
mov
inc
ss
ja
outsl
push
sub
popf
and
leave
mov
pop
cs
ret
add
mov
es
mov
test
jbe
loop
sarl
sub
mov
test
push
push
mov
out
jns
insl
cli
mov
rcrl
jl
inc
gs
sbb
lcall
popl
fsub
jne
xorb
in
dec
mov
mov
or
rcrw
xor
popf
push
jne
insb
loope
add
sbb
roll
mov
adc
cmpsl
mov
scas
xchg
int
jle
add
mov
dec
mov
adc
cli
or
clc
dec
push
icebp
pop
fnstcw
or
ffreep
sbb
in
fstps
xor
shrl
or
inc
mov
rcr
pusha
rcl
dec
xchg
xchg
repnz
cmp
pusha
insb
pop
lcall
popa
mov
rcl
cmc
cmpsb
lret
pop
mov
mov
data16
pop
mov
push
lods
xlat
mov
loopne
xlat
out
and
and
xor
in
data16
daa
ds
fcompl
xchg
sbb
mov
leave
out
and
sti
mov
shrb
pushf
jae
jl
jae
fcmovnb
cmpl
push
mov
nop
pop
push
inc
xchg
cmp
movsb
notb
dec
push
scas
pop
fmuls
cmp
in
test
lods
das
mov
xor
sbb
aas
push
push
loop
jno
mov
in
outsl
lods
and
js
inc
xchg
enter
fdivs
sub
mov
cmp
jno
lahf
js
outsl
jecxz
sub
rorb
push
loop
mov
sahf
movb
cmp
fstp
sbb
dec
sub
pop
push
adc
sbb
std
mov
mov
andb
addr16
sbb
pushf
cmp
mov
push
and
mov
aas
mov
jbe
ss
cmpsb
cmc
aam
add
jmp
mov
sbb
mov
mov
sbb
popa
dec
loop
mov
cld
insl
aas
inc
sbb
xor
sub
mov
lea
aas
leavew
outsb
inc
adc
cmpsb
mov
out
push
add
jle
ss
test
mov
sub
adc
jg
jno
pop
or
loop
fwait
insl
inc
mov
jle
int3
repz
aaa
aas
xchg
xchg
es
data16
insb
mov
loop
insl
jg
sbb
and
mov
inc
mov
xor
pop
sbb
sbb
push
loop
lods
lods
outsb
stos
mov
add
les
test
icebp
add
enter
mov
popf
repnz
lea
cwtl
jno
in
lret
shll
and
xor
cltd
ficompl
ds
and
scas
add
xchg
pop
cmpsl
cmp
mov
push
fdivl
data16
enter
loope
jne
push
hlt
xchg
in
lods
jl
in
lods
in
push
dec
fcmovnbe
xlat
mov
mov
das
lods
out
sar
dec
test
and
daa
aas
cmp
divb
push
mov
add
sub
lret
cmp
adc
ds
mov
xor
jg
sahf
dec
lcall
xchg
sub
mov
cli
lcall
xchg
pop
aaa
mov
lods
and
sub
dec
out
into
adc
mov
pusha
insb
mov
pop
sub
and
pop
bound
rolb
adc
xor
pop
stc
jae
xlat
stos
mov
hlt
xor
flds
pusha
sub
or
add
rcr
ja
mov
xchg
incb
in
jmp
stos
les
test
push
rorl
fisubl
cmp
jg
js
ds
jg
gs
rcl
ret
lea
mov
cmp
sub
mov
and
fucomi
xor
xor
push
inc
popa
cmpsl
mov
push
pushf
mov
inc
insb
sbb
mov
mov
xchg
dec
cmp
andb
cmpsb
push
scas
rorl
push
inc
and
rcrb
hlt
inc
xor
divl
leave
push
shr
das
bound
popa
mov
xor
shlb
cmp
push
lods
jle
test
aas
out
sbb
inc
push
sbb
jae
in
cli
ss
lods
outsl
repz
mov
xor
xchg
push
jno
fwait
xor
sbb
lahf
adc
push
les
lcall
jmp
pop
ja
jbe
ja,pn
inc
jle
imul
cld
inc
sbb
cmp
dec
mov
and
leave
mov
lret
mov
fs
test
loope
xchg
outsl
test
ss
adc
add
stc
mov
and
sub
jmp
jae
cwtl
sbb
clc
mov
or
loope
jae
leave
or
movl
fsubrs
mov
lds
jno
push
sub
fistpl
in
cmc
mov
sarl
jmp
cmpsl
dec
cmp
add
xchg
jno
jns
mov
push
mov
jae
outsl
xchg
sub
inc
xchg
imul
mov
mov
xor
ja
mov
mov
xchg
loopne
out
out
inc
xor
xchg
xchg
or
nop
and
cmp
je
dec
roll
mov
xorb
jae
rclb
ret
mov
dec
cltd
fisubrl
addr16
add
dec
cmp
sarl
push
rorl
leave
sbb
pop
and
push
int3
xchg
leave
loop
dec
cmp
dec
cmpsl
push
shlb
out
in
cmpsl
ja
mov
in
fmul
jo
or
or
cmpl
cmp
jp
push
inc
inc
mov
sub
add
xor
fstpl
les
jne
sub
clc
cmp
or
jmp
xlat
xchg
mov
mov
xor
xlat
test
into
add
sub
into
bnd
xchg
sub
and
push
aaa
add
insb
fcmovne
xchg
scas
lock
cmc
enter
nop
sub
mov
mov
jg
mov
outsl
aad
shrb
adc
repnz
add
cmp
cmpsb
int
es
dec
mov
sbb
sub
inc
dec
sarb
icebp
stos
pop
jmp
push
or
mov
sub
push
mov
pop
mov
rclb
mov
lea
jno
fists
mov
push
popf
fmul
mov
inc
add
xchg
aam
jbe
mov
cs
stos
fiadds
fsubrs
aam
bnd
cwtl
mov
clc
xchg
sbb
std
mov
xchg
scas
sub
es
and
iret
jns
shl
and
mov
arpl
push
mull
mov
stos
dec
rolb
inc
jp
push
shrl
mov
mov
mov
popa
push
fwait
dec
sarl
ds
iret
mov
mov
hlt
cmpl
cmp
incl
ja
dec
push
cs
jecxz
mov
js
sbb
add
jl
out
jmp
test
mov
xor
inc
je
dec
mov
cld
xor
int
dec
or
pop
jbe
mov
clc
lods
xchg
jae
test
sti
mov
mov
mov
andb
scas
mov
lock
loope
int3
xchg
adc
or
mov
lcall
bound
lock
pop
bound
sbbl
rol
fidivl
push
aad
or
push
rol
into
repnz
inc
sbb
xchg
and
xchg
and
cwtl
cmp
sbb
sub
cmc
mov
mov
cld
xor
jp
cmp
roll
mov
fnstcw
cmp
arpl
into
aad
mov
ja
sub
inc
xor
stc
or
loop
out
adc
push
jae
roll
xchg
cs
sub
in
hlt
sbb
int
xchg
jecxz
mov
aas
fst
call
sbb
cmpl
nop
or
pop
ss
ss
pop
cmc
stos
mov
es
pop
shl
test
adc
dec
cmp
xchg
testl
dec
add
mov
cmpsl
mov
dec
sbb
loop
and
inc
xchg
cmpsl
xchg
mov
out
fildl
and
sub
clc
sbb
scas
popf
test
jmp
add
jns
imul
xchg
icebp
xor
xor
mov
dec
mulb
fldcw
dec
add
ret
cmp
mov
mov
jg
imull
loopne
mov
fnstenv
pop
loopne
lahf
pusha
inc
cmp
mov
std
sbb
sarl
outsb
or
sti
cld
sub
mov
xchg
push
mov
pushf
rcrl
xchg
shll
bound
test
mov
mov
adc
sbb
inc
scas
test
xchg
mov
inc
int3
mov
sbb
aam
mov
shrl
or
jo
lcall
sbb
dec
pop
xor
repz
cmp
cli
cmp
mov
test
in
fsubl
push
add
int3
pop
cwtl
fadds
jmp
hlt
sbb
jecxz
rcll
dec
pop
mov
rorb
imul
sahf
cmp
orb
imul
jne
popf
fiadds
inc
popf
std
mov
imul
leave
sti
mov
pop
pop
jecxz
scas
mov
mov
mov
out
push
mov
pop
popa
cltd
xchg
sbb
ja
arpl
negl
cmp
push
dec
mov
sahf
mov
add
leave
mov
jmp
adc
mov
jmp
cmp
adc
aaa
xchg
sbb
push
push
pop
inc
xchg
mov
mov
mov
push
adc
dec
hlt
or
cmp
push
mov
fisttpll
leave
mov
adc
xor
jno
inc
js
data16
cmp
or
jl
add
or
leave
cmp
cmpb
xchg
mov
inc
test
inc
fdivrl
cltd
inc
dec
fwait
jnp
jg
fildl
sbb
jecxz
dec
adc
push
int3
push
pop
xchg
jmp
sub
call
mov
pop
and
scas
clc
shlw
sub
dec
stos
mov
adc
jns
out
jnp
fdivrl
in
xchg
test
shll
fidivl
or
scas
fwait
xchg
cmp
mov
pop
out
enter
jle
lods
push
lcall
imul
es
mov
stos
or
or
jl
pop
sbb
push
jg
xor
mov
inc
cmpsb
or
dec
adc
scas
mov
sbb
sub
push
jae
ss
stos
fadds
dec
cld
inc
mov
mov
add
cvtpi2ps
push
sahf
out
in
test
dec
mov
clc
call
mov
lods
dec
mov
push
out
in
cltd
ret
enter
fucomip
les
jmp
rolb
lods
dec
mov
adc
mov
or
mov
push
push
adc
repnz
or
test
xchg
shr
jo
adc
xchg
inc
or
jbe
inc
stos
inc
les
into
sbb
pop
neg
jp
inc
cmp
pop
aam
in
loop
or
or
movsl
stos
mov
mov
out
js
inc
dec
push
jo
mov
mov
mov
mov
xchg
repnz
fs
decl
test
ret
push
scas
xor
fidivs
lods
or
adc
push
cmp
addr16
pop
fimull
mov
pusha
faddl
shl
mov
mulb
das
push
aaa
test
jle
sub
xor
je
sbb
mov
xchg
cmp
pushf
cmp
jg
insl
popa
cmc
imul
ss
mov
inc
jae
sti
or
mov
loopne
ja
subl
sub
mov
pop
fsubr
xchg
mov
repz
pop
jl
push
push
movb
inc
xor
mov
scas
out
out
mov
popf
mov
mov
jae
sarl
push
xor
mov
xchg
inc
jecxz
insb
add
push
popa
or
inc
xchg
outsl
ret
sub
mov
roll
nop
xchg
lock
xchg
les
fcomp
xor
push
sti
jbe
pop
pop
xchg
scas
dec
inc
cmpsb
mov
shlb
jl
jne
in
cmp
mov
data16
scas
xchg
mov
lds
xchg
repz
mov
fsub
pop
cmc
jne
rcrl
nop
and
call
std
sbb
adc
hlt
mov
mov
jnp
mov
xchg
mov
sub
add
leave
je
insb
mov
repnz
inc
leave
daa
outsl
or
pop
fistps
mov
icebp
je
std
or
inc
fldenv
loopne
insb
mov
shll
xor
adc
movsb
dec
bound
mov
divl
out
xchg
add
mov
mov
push
pop
neg
cwtl
push
pop
orb
mov
andl
mov
mov
rorb
add
pop
fnsave
cmp
cltd
js
mov
adc
movsl
sbbb
and
leave
stos
ss
iret
fldcw
jno
testl
sub
aam
in
mov
xlat
cwtl
pop
xchg
inc
dec
sahf
pop
pop
fiaddl
mov
lods
jae
pop
mov
xchg
jecxz
lcall
push
in
insl
aaa
sub
out
mov
pop
loopne
popf
inc
pop
enter
aam
out
lret
adc
mov
rcl
dec
loope
push
or
jmp
or
dec
lock
jmp
jns
cltd
leavew
mov
ficoml
push
xchg
mov
insb
mov
scas
mov
xchg
mov
push
int
lret
push
dec
sbb
xchg
xchg
popa
loope
ljmp
pop
in
push
ljmp
std
pop
pop
aad
loop
or
sbb
sub
push
push
pop
jmp
pusha
lods
jae
sub
shlb
push
fwait
out
pop
sub
push
mov
arpl
mov
xor
fisttpll
shl
dec
fwait
aad
in
inc
mov
pop
inc
shrb
fwait
repz
inc
mov
test
enter
js
into
cmpsl
xchg
inc
outsb
inc
popa
xlat
out
movsl
xor
fs
sbb
mov
jae
repnz
ret
inc
fldcw
rcr
mov
jo,pn
cmp
jmp
leave
sti
data16
mov
jg
jp
xchg
leave
xchg
jb
in
leave
and
cmp
xchg
inc
xchg
and
loopne
enter
dec
sub
jae
jecxz
pop
pop
mov
lock
insb
mov
mull
inc
push
scas
test
mov
sarl
insb
mov
into
orl
jne
call
mov
idiv
mov
xor
xlat
mov
mov
mov
jecxz
jl
inc
pop
fildll
mov
lret
lds
sub
fwait
jbe
xchg
push
repnz
sub
mov
scas
mov
pop
pop
lods
sbb
sbb
mov
and
pop
jecxz
outsl
push
mov
push
xchg
jg
xor
push
cmp
xchg
fmull
or
fisubrl
dec
lods
xchg
fildll
jns
inc
popa
test
insl
jno
cmpsb
iret
pop
jp
dec
cmp
and
and
mov
repz
mov
xchg
mov
imul
sarl
push
ja
jl
mov
das
cs
pop
mov
add
cltd
pop
jne
mov
shll
fcmovu
inc
mov
popf
cld
mov
dec
xchg
arpl
jmp
push
push
dec
dec
cli
sub
test
push
cmp
cmp
out
jnp
add
dec
xorl
pop
xor
mov
imul
and
hlt
pop
repz
js
mov
push
jae
and
jl
mov
orb
add
shlb
jecxz
pushl
xor
cwtl
gs
mov
lahf
hlt
dec
shlb
push
test
mov
cmpsb
loopne
insb
int
es
mov
shll
mov
jle
add
mov
push
pop
jmp
jo
xor
mov
add
int
mov
inc
fs
or
adc
movsl
mov
sahf
std
mov
pop
mov
lret
sub
push
lock
xor
xchg
out
mov
inc
mov
leave
cli
jp
push
dec
mov
add
sarl
icebp
test
popf
cmp
mull
test
jg
ror
mov
gs
add
lahf
adc
and
mov
xchg
cmpxchg
fisttpl
inc
jl
add
push
cmp
mov
sbb
mov
popa
mov
mov
xchg
shll
push
sub
leave
loop
mov
fisttpl
loope
inc
aaa
push
pop
cmp
and
in
pop
inc
cmpsb
add
mov
hlt
fsub
pop
add
inc
pushw
pushf
mov
xchg
mov
cmc
or
in
lret
pushf
or
mov
mov
inc
dec
sti
sub
mov
pop
jl
scas
movsl
fwait
scas
xlat
xor
inc
dec
sub
xor
sbb
add
mov
fildl
mov
mov
gs
imul
xor
je
jo
jecxz
pusha
lcall
outsb
cmp
in
cmp
push
pop
push
icebp
sub
add
stos
sbb
push
insl
mov
lds
cmpsb
ss
dec
lcall
loop
dec
ja
mov
enter
mov
sub
jg
jp
inc
add
fbld
push
push
ljmp
or
jae
ret
add
mov
cli
xor
pop
mov
jbe
popa
xchg
mov
ret
jle
cwtl
loopne
es
pop
adc
decl
cmp
repnz
xchg
sbb
clc
les
xlat
inc
mov
fs
pop
mov
mov
dec
jp
adc
push
test
mov
out
test
inc
sbb
lret
mov
cmpsl
roll
mov
pop
cmp
cmp
jae
dec
jne
ret
ret
fxch
pop
out
mov
popf
or
notl
notl
es
push
jecxz
xlat
fnsave
cmp
out
sub
pop
or
mov
sahf
xor
repz
xchg
pop
cmp
mov
mov
iret
sbb
xchg
pcmpgtd
inc
push
cli
ljmp
icebp
lds
jns
push
imul
mov
dec
outsb
leave
std
dec
xor
inc
movsl
xor
dec
out
or
bound
sbb
push
push
out
xchg
popa
dec
and
push
popa
add
jmp
inc
mov
xor
sbb
push
adc
hlt
xchg
sub
inc
fidivrs
scas
sbb
in
xchg
mov
out
mov
cltd
mov
mov
jbe
mov
data16
testb
jp
es
popf
out
jae
pop
sbb
mov
mov
cmp
lods
cld
movsl
cmp
xchg
mov
test
ret
mov
jecxz
ljmp
mov
xchg
ret
arpl
int
out
ret
stc
jecxz
scas
sbb
and
cmp
mov
mov
pusha
and
pop
dec
std
xor
orb
outsl
xchg
mov
cmp
sub
das
shrl
pop
mov
inc
test
into
jne
ja
dec
and
cld
aad
out
adc
shrl
sub
mov
push
pop
pop
xchg
mov
xor
loopne
mov
movsl
mov
imul
popf
out
jge
lcall
and
call
dec
sbb
mov
inc
dec
cmp
jne
pusha
loop
das
out
inc
mov
aam
out
hlt
add
in
ret
jne
adc
push
cmp
cwtl
addb
int
or
fisubs
rorl
xor
jne
sbbl
mov
out
pushf
dec
test
jp
adc
cmp
loope
jne
hlt
jg
insl
popa
add
xlat
push
cli
aaa
cmpsl
leave
jg
dec
xchg
out
adc
repz
fdivrs
fidivrs
xor
arpl
in
cmp
ficoms
sub
adc
sub
lods
dec
push
sub
out
hlt
adc
sar
push
pop
jae
enter
sti
ja
mov
outsb
movsb
mov
test
jge
adc
mov
aas
cli
xchg
sbb
scas
shll
mov
imul
fcoml
cmpsb
shrl
int3
jmp
or
xor
cmp
pop
out
sbb
pop
jns
dec
mov
cmp
mov
or
pop
pop
gs
mov
sbbb
sti
mov
cmc
cmpsb
shll
mov
rorl
xchg
xor
shlb
aas
dec
outsl
scas
nop
sarl
lods
daa
movsb
les
jmp
popf
mov
frstor
xchg
in
es
and
test
mov
cmp
cltd
inc
jge
mov
fxch
adc
jne
fildll
pushf
xlat
or
imul
mov
xchg
xchg
not
xchg
mov
mov
push
inc
addr16
jecxz
mov
xchg
ja
lcall
shll
mov
fsubl
sbb
inc
cmp
imull
mov
rorb
sub
adc
pop
xorl
loop
rcrb
call
jge
xor
xor
stc
addb
aam
dec
push
daa
mov
or
push
or
loope
hlt
cli
cmpsb
loopne
mov
xor
aad
jp
add
add
lods
repnz
mov
loop
aaa
pop
or
push
jmp
inc
mov
aas
ja
cltd
cmpsl
es
aad
pushf
sarb
inc
cli
push
into
xor
jae
add
mov
xchg
es
sub
push
add
jne
mov
test
cmpsb
pop
xchg
out
jae
js
cmp
jbe
fdivr
ljmp
movsl
out
jmp
or
lods
add
movsb
shl
sub
adc
xchg
sbb
inc
es
lods
cmp
aas
adc
ds
jmp
shl
cmp
iret
cmpsb
mov
mov
mov
jo
test
fimuls
dec
shl
lods
mov
jg
cmc
into
inc
cmpsl
mov
and
test
xchg
ja
push
out
nop
pop
push
inc
data16
imul
imul
mov
arpl
lea
mov
xchg
and
clc
mov
js
mov
not
xchg
cltd
xchg
adc
add
mov
loop
stc
jo
int
scas
inc
sbb
or
dec
adc
test
sti
sub
xor
scas
in
test
gs
into
test
shll
push
and
dec
cmp
mov
xchg
test
mov
inc
pop
mov
dec
popa
mov
das
sbb
outsl
xchg
pop
mov
loop
inc
mov
mov
popa
leave
mov
aaa
mov
outsb
ror
add
dec
mov
cltd
ljmp
mov
pushf
fsubr
repz
xor
mov
inc
imul
imul
cmp
out
cmpsl
out
pusha
sbb
mov
ret
ljmp
popa
mov
into
mov
push
nop
cmc
fnstcw
add
pop
push
lcall
push
add
addb
test
sbb
div
cld
insb
mov
dec
sbb
cs
aaa
push
mov
test
xlat
stc
cmp
sub
mov
jl
icebp
dec
fmull
mov
nop
cmpsb
mov
sbb
push
andb
or
loop
add
bound
imul
test
inc
inc
pop
sahf
mov
cmp
repnz
ds
pop
cmp
add
mov
sbb
xchg
clc
lcall
mov
loope
pop
adc
clc
jp
std
xor
out
sub
arpl
sbb
popf
scas
mov
or
or
js
push
fdivrs
imul
push
xor
mov
push
fstl
xchg
lcall
fadd
and
and
pop
xchg
push
add
pop
cmpsb
aam
cmc
mov
js
or
cmp
cmpsl
push
ret
enter
mov
xor
sub
imul
push
xchg
test
pop
dec
lds
lahf
jg
jecxz
mov
inc
push
mov
stc
sub
lods
int3
ret
outsb
dec
loope
and
lret
sahf
push
xlat
out
cld
dec
repz
aaa
sbb
inc
scas
ficoml
ds
popa
inc
xor
push
rcll
out
les
push
ljmp
push
inc
popf
and
cmpsl
popf
mov
or
mov
lds
int3
lret
push
xor
dec
lret
ret
fstpl
mov
and
decl
shlw
jmp
mov
mov
xchg
mov
pop
shll
pop
sti
movsl
push
mov
mov
adc
fstp
add
pop
and
lds
xor
push
into
sbb
leave
or
fnstenv
jecxz
pop
dec
movd
in
les
lock
bound
sbb
mov
mov
push
push
adc
call
add
pop
decb
aam
push
mov
insl
inc
je
jecxz
push
iret
sbb
jecxz
xchg
xchg
outsb
push
mov
jl
out
mov
mov
sub
mov
add
lock
mov
cld
in
or
xor
mov
repnz
out
adc
jecxz
data16
jbe
mov
lea
leave
cmp
xchg
jl
ss
xchg
mov
notb
pop
and
jns
notl
xchg
scas
fsubrl
cwtl
sub
lods
jae
mov
cmp
repz
dec
data16
cmc
in
cltd
mov
add
aas
xchg
arpl
fildl
out
pop
push
cmp
mov
push
jb
adc
stos
aad
cmpsl
adc
or
aad
aam
aad
ss
adc
int
icebp
scas
cmp
rclb
jbe
jl
mov
mov
mov
cmp
or
push
and
mov
mov
outsl
xorl
fcoml
xchg
inc
xor
xlat
sub
ss
dec
xor
xchg
mov
mov
dec
mov
xchg
pushf
mov
aaa
lret
notl
enter
leave
push
mov
notb
mov
leave
addb
ffree
les
cs
cltd
inc
cmpsb
shlb
movsl
or
loopne
outsb
fldcw
and
lods
stos
jb
mov
add
xchg
out
mov
loop
mov
mov
cltd
pop
push
fimuls
jp
or
mov
imul
pop
ret
mov
fmull
mov
ss
insl
sbbb
pop
mov
push
fstpl
mov
scas
das
dec
and
sub
loopne
int3
mov
pop
or
or
sub
pop
lds
cmc
or
sub
push
push
jmp
xor
lahf
scas
bound
notl
outsb
or
mov
mov
sbb
movsl
gs
in
ret
inc
sub
subb
jg
cmp
sarl
mov
cs
js
pop
jge
rcll
sub
in
xchg
ret
fldcw
mov
mov
sbb
in
xor
gs
xchg
sub
mov
test
mov
and
aaa
mov
pop
inc
imul
add
fcoml
imul
jbe
clc
test
and
js
xor
mov
mov
test
push
mov
je
xor
add
dec
imull
sub
dec
cmp
out
cmp
jp
cli
mov
cs
jo
adc
pop
mov
insb
inc
mov
jnp
shrb
addr16
xchg
in
add
pop
jmp
pop
aas
xlat
inc
adc
sti
addr16
scas
xor
pop
pop
dec
mov
stos
mov
in
and
test
dec
or
divl
sbb
repz
cmp
outsl
jmp
mov
int3
mov
or
dec
push
aas
cltd
mov
cmp
pushfw
lods
add
out
jmp
les
and
push
gs
sbb
jge
into
icebp
jnp
in
xchg
dec
out
loop
pop
in
mov
xchg
lds
lods
xchg
and
sbb
and
lret
sub
push
mov
cmp
rolb
sti
movb
push
xchg
cwtl
pop
addl
mov
sub
scas
mov
or
inc
popa
fadds
scas
cmp
xchg
xor
adc
ss
arpl
inc
mov
or
scas
mov
jmp
insb
mov
mov
mov
pop
lahf
dec
add
addr16
push
js
test
jmp
pop
dec
movsl
fisttpll
neg
in
pushf
mov
xor
jae
movb
or
lds
sub
popf
pop
jae
popf
mov
mov
and
or
mov
adc
inc
dec
test
sub
mov
rol
sub
lock
mov
push
xor
mov
enter
xlat
mov
xchg
xchg
jne
cmpb
mov
mov
add
pop
in
stc
cmc
jb
push
in
cmc
or
xchg
push
pushf
mov
xor
outsl
inc
aas
cmpb
push
push
sbb
mov
or
shll
adcb
add
dec
stos
das
enter
jbe
jle
test
ljmp
pop
fdivr
adc
adc
and
lcall
loop
ljmp
aas
mov
in
lods
scas
in
push
shl
adc
sbb
popf
push
jno
and
fsubrs
dec
cli
lods
in
jne
cmp
mov
fnstcw
in
add
bound
xchg
or
adc
add
hlt
in
and
xchg
outsl
add
xlat
mov
cmp
loopne
push
mov
arpl
insl
sbb
icebp
mov
dec
mov
mov
ds
and
stos
loop
rcrb
cmp
mov
xor
testb
icebp
xchg
mull
out
je
mov
mov
aas
mov
xchg
into
pop
scas
jbe
leave
pop
test
pop
mov
jne
and
daa
add
xor
popf
push
or
lret
movsl
addr16
stc
pop
cmpsb
inc
sahf
sub
jne
xchg
pop
test
aam
in
push
ljmp
test
insl
jmp
lcall
or
cltd
iret
aad
xor
jecxz
mov
jg
mov
mov
jmp
shll
subb
xchg
or
inc
or
ficoml
mov
leave
jecxz
ds
xchg
push
dec
mov
stos
lret
sbb
clc
shl
mov
jmp
mov
insb
dec
loopne
cmp
adc
mov
sbb
cmc
sbb
sub
ss
cmp
and
xlat
xchg
test
call
sub
mov
repnz
sub
mov
in
bound
fnstsw
mov
test
push
or
and
mov
test
lea
outsb
es
or
cmpsb
popf
scas
out
jg
mov
movsb
add
leave
adc
push
mov
rolb
imul
loopne
jne
ret
dec
shll
shr
cmpsb
mov
cltd
sahf
out
inc
dec
add
cmp
mov
xor
pop
pushf
xor
xchg
cmp
dec
xlat
pop
enter
push
repnz
iret
scas
mov
sarl
das
xor
xor
ret
ja
out
cltd
xorb
test
in
jmp
inc
mov
adc
cmp
inc
mov
rdmsr
push
stos
es
mov
fisttpl
or
andb
roll
nop
adc
push
les
popf
stos
mov
lea
cli
dec
leave
dec
jl
xor
sarb
shll
adc
mov
dec
push
addl
push
loope
repnz
lret
jae
mov
adc
shl
push
loop
adc
cli
js
daa
push
mov
les
dec
xchg
aad
sbb
ret
iret
add
cmp
lods
push
cmp
mov
loop,pt
mov
and
sbb
adc
sub
and
mov
pop
test
stos
fnsave
lods
sbb
cmpsl
loopne
popf
push
fsubrs
icebp
lret
es
mov
and
jmp
xor
mov
lcall
cmpsl
cmpsl
cmp
imul
pusha
cltd
test
pop
xchg
mov
out
loop
xlat
hlt
out
mov
mov
inc
push
cmp
mov
cwtl
nop
and
mov
adc
jbe
adc
xor
bound
fdivrp
cmpsb
push
mov
push
xchg
fdivr
xlat
je
pop
dec
dec
mov
out
jb
or
cmpsb
or
or
add
push
es
imul
enter
jo
cwtl
cmp
xorb
and
sti
hlt
and
lea
mov
xorl
insl
lock
fistl
xchg
mov
lahf
sub
fdivrl
xchg
and
sti
inc
daa
mov
mov
cltd
idivb
push
imul
stos
mov
mov
adc
and
mov
int
aam
jo
arpl
mov
mov
lret
insb
xchg
bound
jg
lcall
data16
cwtl
or
popa
xor
push
jb
xorl
out
lret
test
mov
jecxz
shll
les
mov
or
adc
mov
push
sbb
sub
cmp
out
add
mov
inc
adc
push
adc
xor
das
jno
ss
imul
adc
test
jne
idivb
inc
out
js
jge
jg
fistps
fisubrs
mov
push
repz
and
mov
pop
pop
sbb
mov
mov
ret
xlat
aad
popa
mov
dec
mov
lock
mov
test
icebp
popf
xor
sti
mov
cs
vshufpd
test
inc
nop
dec
fdivl
loope
sub
cld
inc
sub
das
js
jbe
sbb
loopne
xchg
jnp
cs
movl
fnstcw
push
xchg
pop
out
iret
das
add
or
jne
push
movsl
rcl
xor
jge
xchg
inc
bswap
aas
add
jb
mov
jno
rcll
movsb
jae
jg
cmp
pop
out
mov
xor
fcoml
push
cmp
icebp
lods
cs
scas
ds
jl
sub
adcb
out
pusha
xchg
pop
jle
fsts
ret
xor
popa
xor
imulb
in
cmpsb
popf
push
jecxz
aam
inc
sub
xchg
test
loopne
mov
sbb
dec
ret
lds
mov
fsubl
scas
inc
mov
rol
mov
xchg
sbb
fsubl
jae
idiv
adc
in
cmpsl
roll
add
cwtl
push
out
pop
aaa
cmpsb
inc
jne
cmpl
dec
xor
mov
call
jg
enter
push
sub
push
push
fwait
xchg
dec
push
lods
testb
mov
rclb
movsb
loop
inc
sub
aam
cli
outsl
xchg
mov
enter
lods
pop
sub
test
or
and
jae
mov
push
imul
cltd
dec
add
fnstcw
fucom
stos
stc
cmp
or
mov
popf
movsb
les
push
test
adc
lds
pop
add
mov
mov
ret
fiaddl
push
into
js
les
mov
loop
lds
push
enter
lcall
lock
jmp
lds
sub
pop
repnz
fidivs
rorb
loop
notb
clc
jne
dec
insb
cmp
cmp
push
stos
dec
adc
lods
imul
dec
dec
orl
mov
sti
xchg
xor
das
mov
fwait
push
pop
lods
fsubl
loope
movl
mov
xchg
jbe
ss
inc
and
jmp
inc
adc
sbb
mov
in
cli
pop
pop
xchg
pop
scas
mov
aaa
inc
fucomi
int3
or
sbbl
dec
push
shll
sbb
pop
and
pop
in
leave
arpl
sbb
xchg
fsubr
and
sub
or
jae
stos
rorb
dec
sbb
jge
and
sbb
mov
inc
jecxz
lods
mov
adc
xor
rclb
insl
dec
mov
or
lods
jmp
call
mov
ret
and
ljmp
push
push
or
or
and
mov
loop
inc
sub
pusha
cwtl
xchg
adc
xlat
mov
inc
sbb
push
jae
fs
idivb
pop
loop
scas
cltd
push
sub
mov
test
mov
cwtl
xor
outsb
push
ljmp
cmp
in
cs
cmp
shll
nop
ret
pop
mov
sbb
pop
cld
mov
add
movsl
adc
sub
outsl
mov
loop
xchg
aaa
inc
pop
and
adc
int3
lahf
cmp
sahf
add
rep
xor
inc
mov
inc
or
ret
data16
ret
pop
mov
xor
in
nop
fbstp
sub
bound
scas
es
dec
add
testb
mov
inc
leave
or
mov
inc
int3
or
xorb
testb
hlt
and
mov
popf
jno
outsb
jo
mov
je
jne
push
or
scas
sbb
hlt
insl
cmp
mov
mov
sub
cs
aam
jle
mov
sarl
xchg
bound
sahf
or
and
movsl
dec
lahf
inc
fidivl
add
xchg
push
xor
mov
popf
xchg
and
lea
mov
jmp
int
adc
xor
mov
push
push
es
hlt
xor
mov
jnp
pop
out
mov
pop
cltd
xchg
call
rcll
mov
cmp
mov
inc
sbb
push
dec
mov
enter
or
xor
loop
idiv
test
popf
xchg
mov
adc
mov
and
sub
cmp
inc
imul
xchg
sub
cmp
cltd
lcall
mov
mov
insb
out
cmp
push
test
push
sub
push
cltd
fs
adc
xchg
pop
in
loope
out
jae
fwait
mov
ds
lods
test
inc
lret
bound
mov
xchg
roll
push
jl
cld
aaa
pop
ljmp
or
scas
and
push
jl
faddp
call
or
pop
shll
rolb
js
mov
rcl
inc
movsb
or
test
sti
popf
ljmp
mov
xor
and
adc
cmp
push
lcall
mov
add
mov
loop
push
cmpsl
mov
add
pop
lods
push
add
icebp
shll
dec
xchg
dec
pusha
loopne
loopne
cltd
mov
jl
dec
jl
dec
movsl
mov
adc
xchg
cmp
lods
mov
mov
aas
xchg
je
push
push
fcos
mov
inc
mov
call
mov
mov
enter
clc
push
jae
and
adc
xchg
sub
fdivl
daa
not
mov
xchg
and
orl
fsubrl
mov
ret
inc
adc
repz
or
cmpsl
jae
stos
dec
jne
push
enter
mov
repz
cwtl
sbb
ja
lret
xor
int
outsb
push
fbstp
pop
popf
xchg
inc
leave
out
pop
arpl
or
mov
test
and
sbb
stos
xchg
mov
clc
in
push
cmp
jbe
leave
xchg
adc
out
outsb
out
push
inc
js
out
push
mov
jmp
and
push
push
cmp
push
xchg
push
faddl
mov
and
ret
jno
xchg
mov
or
push
lret
sub
fsubr
fcomi
jbe
mov
push
insb
mov
dec
xchg
testb
loop
mov
mov
imul
and
insb
jl
mulb
cmpsl
dec
loop
data16
dec
imul
add
data16
sbb
mov
xor
xchg
mov
scas
xchg
mov
iret
push
shrb
in
jle
adc
shlb
es
leave
cmc
push
sbb
push
loopne
mov
ljmp
icebp
divl
pop
and
mov
popf
mov
mov
lods
ss
adc
data16
push
inc
mov
and
adc
xchg
cwtl
xor
pusha
add
stos
lods
nop
xor
xor
xchg
fucomi
mov
sbb
mov
xor
sub
fsin
add
movsb
ja
mov
sbb
js
popf
les
inc
imul
mov
shll
cmp
mov
fwait
loopne
scas
pop
push
pop
das
cmpsl
aad
dec
cmpsl
movsl
std
dec
cmpl
adc
mov
mov
lods
data16
pop
adc
push
mov
xchg
daa
rol
cmc
mov
add
mov
mov
add
mov
les
test
jmp
sar
add
xor
scas
outsb
or
into
push
sub
jns
gs
mov
add
mov
sub
sub
mov
mov
adc
je
ss
sbb
rorl
sbb
push
hlt
cmp
and
jle
aaa
cmp
dec
mov
mov
ja
loop
cs
cltd
aas
sbb
sbb
mov
inc
int3
adc
fstpl
dec
xchg
test
mov
push
pop
aaa
xchg
orl
in
jns
cld
and
or
int
mov
aam
xchg
test
push
cmp
push
cmpb
aaa
gs
mov
repnz
sub
and
or
test
push
xor
xor
fwait
bound
mov
mov
mov
mov
mov
cmp
or
in
fcomp
popf
cmp
pop
sub
ljmp
aaa
lods
or
pop
mov
movsb
or
leave
cmp
cmc
xchg
and
lret
push
sbb
ds
mov
push
mov
or
insb
jo
imulb
xchg
jmp
mov
jb
xchg
inc
insb
cmpsl
fsubrl
lret
xchg
adc
dec
test
inc
sub
stc
es
enter
arpl
inc
cmp
sbb
sti
add
loop
mov
xchg
and
push
in
jmp
popf
jecxz
je
mov
int3
xchg
mov
sub
add
std
dec
fstl
xor
loopne
inc
sbb
xor
jno
pop
pushf
movsl
jge
cmp
inc
mov
aas
bound
mov
sbbl
push
es
cmp
fimull
jmp
les
es
mov
push
sbb
xchg
ret
push
test
sub
cmc
sub
pop
mov
mov
xor
fisubl
xchg
fidivl
in
shl
xchg
cltd
adc
fsubp
cmp
and
push
pop
aam
loopne
je
mov
mov
jg
sub
test
add
sahf
test
stos
mov
test
mov
lds
neg
xor
jmp
loope
mov
xorb
das
mov
cs
mov
int3
sub
call
dec
push
outsl
aad
inc
cmpsb
lods
push
adc
xor
fwait
imul
shll
test
mov
jo
inc
outsl
jo
jo
popf
inc
pop
pop
push
jbe
and
jns
xchg
xorl
ror
in
mov
scas
push
cld
sub
loope
sbb
mov
adc
bound
jg
mov
xor
push
dec
sbb
pop
xchg
addr16
mov
push
mov
repz
sub
sbb
or
and
in
stc
dec
je
sbb
mov
out
lret
lods
or
mov
xor
roll
or
sub
push
mov
push
adc
mov
outsb
loopne
lcall
loope
cs
and
push
sahf
movsl
enter
add
pop
jbe
pop
cmp
jae
xchg
dec
xchg
roll
inc
ljmp
mov
sub
fwait
inc
pop
push
lock
sub
xchg
sarl
test
push
sahf
lcall
xchg
or
mov
ja
fiadds
inc
mov
add
adc
cwtl
fwait
pop
stos
leave
outsb
mov
mov
xor
int3
mov
dec
add
int3
and
jmp
add
rcrl
xor
mov
add
jns
add
and
int
or
dec
fwait
jo
jmp
aas
popf
and
icebp
push
movb
repnz
sbb
stos
lea
jne
and
imul
push
popf
jmp
loop
and
mov
mov
pop
inc
lods
mov
cmp
push
cmc
out
ss
cltd
pop
stos
stos
in
sarl
pusha
mov
xchg
push
sub
dec
insb
imul
fwait
mov
sub
loop
cli
into
lahf
ret
es
inc
or
fwait
enter
mov
and
adc
mov
push
xchg
mov
push
jbe
add
lcall
test
mov
orb
movsl
xchg
rorb
push
mov
sbb
jg
mov
sub
mov
jmp
mov
add
and
es
insb
std
push
ljmp
mov
push
inc
cmp
leave
sub
and
mov
frstor
adc
cmp
lea
cmp
or
int
push
mov
shr
push
xor
clc
adc
xchg
jbe
test
std
neg
loop
push
hlt
nop
xor
clc
mov
mov
movsl
dec
mov
dec
dec
cmpsb
hlt
test
sahf
add
adc
pop
and
jmp
jae
sub
xchg
pop
pop
ja
ret
clc
xchg
aaa
sub
scas
stos
out
arpl
xor
enter
jbe
outsb
jmp
mov
pop
cmp
out
bnd
sbb
and
adc
push
fwait
mov
bound
test
ret
leave
out
lcall
mov
push
pmovmskb
or
sbb
pop
push
mov
dec
js
mov
or
mov
orl
or
mov
inc
mov
movsl
lcallw
push
jl
xchg
jae
in
inc
or
lods
add
adc
mov
adc
mov
mov
loop
mov
sub
aaa
subl
leave
cmpb
mov
inc
push
testl
ficoms
repnz
das
cmp
stos
cmpsl
dec
in
cs
inc
mov
repz
ret
adc
xchg
lret
lret
mov
adc
js
mov
fwait
xchg
xchg
cltd
cmp
xchg
je
out
stos
icebp
mov
inc
or
jno
insb
cmpsl
jne
das
xlat
sub
negb
push
lret
insb
lcall
leave
mov
idivb
orb
stos
mov
push
fldcw
push
jl
in
stos
cltd
fwait
add
rcrl
pop
ljmp
lock
sub
cld
pop
mov
stos
mov
dec
shll
sub
mov
xor
ret
or
cmp
mov
jo
push
xchg
test
cmc
xchg
jl
jl
xchg
cli
cmpsl
cs
jl
js
out
cs
mov
sub
mov
jmp
xchg
jp
xchg
push
test
mov
adc
adc
fcmovbe
data16
push
sbb
flds
sbb
pop
adc
mov
push
mov
loop
in
ret
xor
pop
ja
pop
fsubs
fnsave
mov
adc
mov
les
xor
leave
mov
in
pop
fucomp
aas
jge
cmp
leave
pop
mov
cmp
mov
mov
add
movsl
cltd
dec
mov
fisubrl
mov
inc
fsubrs
mov
mov
xlat
call
push
jae
sbb
bound
aas
shll
inc
mov
mov
xchg
sub
sbb
mov
jge
lcall
loop
dec
sti
mov
jmp
in
sbb
sub
mov
dec
ret
cmc
push
push
in
dec
scas
cmp
mov
inc
push
mov
das
fisubrl
jmp
popa
dec
mov
jl
icebp
daa
adcl
push
pusha
adcb
stos
xor
in
int3
aaa
sub
adc
fcmovnu
dec
sbb
mov
or
shl
outsb
hlt
adc
push
popf
lret
negl
aad
imul
mov
aad
pop
pop
clc
push
jecxz
xor
insb
je
and
cmp
mov
test
sarl
push
sbbl
inc
movsb
mov
sub
sbb
into
mov
mov
inc
dec
je
cwtl
and
inc
jg
faddp
jg
dec
mov
inc
xor
call
stos
pusha
imul
add
aaa
data16
shlb
cmp
jne
cmp
dec
lahf
push
mov
push
push
jns
ret
and
stos
divb
sub
insl
in
testb
cmp
mov
mov
rcrl
add
add
orl
loop
pop
push
mov
or
pop
loopne
out
fcmovne
jne
orl
lcall
xor
dec
mov
push
mov
stos
mov
dec
cmp
xchg
xor
push
arpl
jp
dec
pop
test
mov
cmpsl
bound
push
xchg
test
scas
call
add
cmc
xorl
fidivrs
xchg
out
adc
movsb
hlt
mov
stc
iret
bswap
imul
shl
fildl
mov
and
es
mov
pop
inc
mov
pop
jae
mov
fucomip
cmp
mov
sub
add
push
push
subl
push
outsb
and
fisttpll
test
rcll
mov
mov
mov
sub
int3
dec
insb
add
pop
add
cmpb
popf
xor
ret
pop
add
popa
mov
add
loop
ret
push
idivb
and
sub
xchg
sbb
adc
imul
xor
scas
fcoml
jne
dec
loop
data16
loopne
fs
xlat
rol
jnp
cmpsb
pop
xor
shl
dec
cmp
cltd
cmc
jae
jl
adc
lcall
xchg
sbb
les
repz
repnz
mov
aam
cmp
nop
in
inc
sub
je
insl
push
xor
movsl
movsl
movsb
and
lahf
aaa
mov
mov
movsl
mov
add
out
jg
add
inc
add
xor
mov
sub
mov
xchg
mov
shll
sub
jb
xor
aad
jl
shlb
or
lcall
push
andb
out
cmpsb
and
lods
rol
xchg
or
cmpsl
inc
ficoms
popf
sub
pmaxsw
add
cmc
xchg
outsl
xchg
xor
addb
fidivl
sbb
js
int3
fnsave
fiadds
mov
adc
xor
dec
enter
push
pushl
cmpsl
gs
mov
or
cltd
and
cli
sub
mov
nop
mov
push
jne
aam
out
in
pop
aam
mov
sub
pop
push
test
xor
jg
mov
or
add
divb
sub
imul
adc
fbstp
and
negb
jne
sbb
cmpsb
mov
stos
into
sbb
scas
inc
inc
inc
and
sbb
xor
adc
adcb
div
pop
mov
outsb
xchg
imul
shlb
mov
jne
push
subl
aad
mov
loop
fimull
sbb
inc
jmp
xchg
fildll
dec
cld
cmp
andb
sbb
scas
movsl
xor
sti
and
test
add
sti
daa
sub
add
rcrl
xor
jge
dec
mov
in
inc
mov
xchg
repz
pop
and
add
push
ds
data16
jne
cmp
roll
aam
mov
jnp
mov
movsb
rclb
xchg
data16
mov
es
jno
xchg
clc
test
fwait
loop
fnstsw
nop
fcomi
mov
cmp
in
insl
add
fildll
popf
das
fnstenv
mov
inc
movsl
xchg
push
jno
popf
mov
mov
icebp
gs
or
xor
notl
repz
les
rcr
imul
mov
xchg
inc
adc
out
cltd
adc
mov
pop
fndisi(8087
xchg
or
aad
pop
jmp
cmp
mov
ja
shrl
xchg
jne
xchg
les
cmp
test
pop
push
icebp
scas
jmp
and
mov
add
xor
jmp
and
out
xlat
rorb
jmp
jle
sarl
mov
shr
stos
sbb
cmp
repnz
sub
or
mov
mov
test
xor
popf
push
cltd
push
push
mov
aam
add
loop
lcall
adc
add
insl
push
dec
stos
jge
jns
inc
cltd
lea
mov
mov
rclb
imulb
popa
cmpsb
mov
leave
adc
call
jne
in
mov
dec
repz
mov
clc
fcompl
lods
into
inc
inc
mov
aam
es
int3
jmp
dec
mov
movsl
jg
stos
test
xchg
sbb
jmp
mov
xor
sub
pushf
leavew
ret
push
movsl
inc
leave
sub
aaa
insb
sub
inc
stos
mov
adc
jno
sub
icebp
jae
je
add
sti
fdivl
fldt
aam
sub
lds
adc
negl
sub
xlat
sub
and
xchg
hlt
push
sti
cmc
xor
stos
pop
adc
sub
adc
lret
add
fstpt
movsl
mov
into
sub
mov
insb
push
xor
sub
jb
roll
das
cmpsb
lds
cmp
imul
and
dec
mov
stos
push
or
pop
scas
and
data16
jge
cs
repz
push
mov
aaa
frstor
mov
inc
dec
je
mov
jg
lods
adc
mov
aad
mov
leave
in
mov
add
xchg
fs
pop
mov
adc
mov
loopne
mov
cmp
loop
insb
dec
mov
jo
lods
dec
pop
rolb
pop
xchg
add
fisubs
mov
mov
jnp
mov
sbb
push
push
dec
inc
mov
mov
cs
jae
mov
sbb
les
mov
mov
push
push
dec
dec
xchg
imul
es
sbb
lds
les
mov
jmp
push
add
adc
mov
rcll
mov
inc
mov
je
mov
xchg
sahf
and
popa
cmp
loopne
aad
push
cmp
jbe
les
clc
test
repz
sti
jl
cmp
into
clc
push
por
and
jge
das
mov
addr16
sbb
sbb
enter
inc
cmp
push
imul
lret
dec
pop
mov
and
dec
xor
and
cltd
rcll
mov
ds
push
ljmp
push
xchg
into
in
jg
ss
es
fstl
xchg
pop
fistpl
push
sbb
mov
lods
adc
or
daa
jno
ds
das
mov
scas
jmp
stos
les
sub
cmpl
sbb
or
jmp
lahf
dec
clc
adc
aaa
test
stos
cltd
popf
sbb
dec
jbe
orb
dec
js
nop
pop
leave
aam
testl
or
aad
orl
and
mov
stos
mov
mov
sahf
fs
dec
mov
sbb
leave
aas
popa
jne
aas
repz
push
mov
movsl
test
mov
xlat
mov
cltd
dec
pop
or
xchg
ret
popf
sbb
adc
jae
xchg
sub
push
mov
xchg
jg
movsl
push
inc
nop
xor
pop
mov
mov
lds
aam
inc
fsubrl
stos
inc
push
and
mov
sub
xchg
pusha
dec
into
mov
mov
pop
or
pop
inc
push
cmpsl
xor
lret
push
js
mov
hlt
mov
daa
adc
icebp
mov
loop
adc
xor
vmread
addr16
shll
and
jne
push
jae
push
test
cmp
mov
pop
out
subl
dec
in
adc
dec
mov
and
es
jae
push
stos
rcr
jno
lods
jne
jg
rcl
fadd
aas
sbb
pop
dec
mov
loope
mov
ss
in
dec
aam
insb
push
mov
js
icebp
add
enter
imul
es
in
addl
sub
dec
mov
mov
mov
push
push
ret
cmp
mov
pushf
imul
roll
hlt
cmp
jmp
xchg
les
sub
sbb
push
fsubrp
push
pop
mov
cmp
pusha
and
shlb
leave
dec
cmpsb
push
jecxz
bound
popa
lret
outsb
mov
mov
and
arpl
push
movsl
cmp
fbld
cmp
xor
stos
stos
ljmp
repnz
jae
ret
divb
cwtl
loopne
or
int
push
jmp
or
inc
adc
mov
jb
jp
pop
dec
sbb
dec
fdivl
jbe
adc
sbb
inc
nop
sarb
dec
popa
loopne
jg
out
cmpsl
inc
ret
scas
hlt
call
out
movsb
sbb
and
setae
jg,pn
cmpsl
cmp
cmp
mov
sti
js
pop
lods
int
lcall
jmp
sbb
sahf
es
cs
pop
ret
cmp
ljmp
loopne
leave
push
aam
add
push
fistpl
mov
mov
adc
stos
sbb
lock
fdivs
jbe
xchg
into
xor
stos
mov
cmp
lcall
movsl
xchg
or
dec
addl
jne
cmp
out
adc
push
xchg
lcall
mov
popf
xchg
sbb
jg
jl
push
shlb
xchg
pop
stos
fsubr
xor
cmp
cmp
inc
out
fmull
add
cmova
and
out
test
lea
sub
aam
aas
push
in
insb
jle
test
mov
mov
mov
adc
es
stc
cmc
mov
loop
ja
nop
in
fsts
scas
xchg
mov
mov
lea
lds
mov
ficoml
adc
fldz
je
stos
movsb
sarb
cmp
icebp
je
jnp
pop
and
test
pop
fistl
addl
add
inc
jo
mov
cmpsl
inc
push
test
mov
lds
jmp
lock
rcrl
in
pop
ja
sub
popf
adc
xchg
nop
test
fdivrl
bound
push
mov
test
sbb
data16
adc
fistps
lods
cmovle
mov
mov
mov
inc
mov
xchg
sbb
jnp
adc
in
dec
movsl
adc
and
cmc
out
loop
mov
rolb
or
xor
addr16
or
and
mov
pushf
inc
lock
bound
ss
js
push
xchg
stos
sbb
mov
mov
popa
mov
sarl
dec
imul
icebp
jmp
and
js
lcall
cwtl
xchg
rorl
stos
mov
imul
out
arpl
insb
clc
aas
imull
test
outsl
test
jg
push
jo
jle
cmp
push
gs
or
pop
mov
outsl
js
shrl
data16
leave
test
adc
ss
test
mov
cmpsl
jge
dec
xor
jne
lods
stos
enter
jmp
aaa
fcompl
inc
in
inc
andl
aam
fildl
dec
sub
jbe
scas
nop
dec
testl
sbb
push
mov
nop
ds
rorl
add
xchg
and
ja
and
mov
pop
xor
and
fmuls
mov
add
push
xlat
dec
xchg
pop
cmp
xlat
shrd
xor
and
in
add
mov
sub
sbb
sbb
pop
jae
sbb
aam
jp
xlat
scas
sbb
fstl
aad
and
jge
es
test
xchg
cltd
lret
and
sbb
sti
in
adc
inc
cmp
jg
xchg
imul
iret
es
xchg
jmp
in
test
leave
loop
fisttpl
pop
pop
enter
push
shrl
enter
or
xlat
mov
or
mov
not
shll
lds
cld
mov
jbe
mov
mov
fdivp
negl
in
and
xor
iret
ret
cmp
pop
sub
mov
mov
mov
movsl
mov
pop
in
mov
aas
lods
or
mov
insb
dec
or
push
adc
mov
loope
jg
xchg
rcll
push
xchg
fmull
mov
cmpsl
inc
sbb
jl
fbstp
out
xchg
xor
push
sbb
pop
es
int
ss
in
push
lea
or
mov
shrl
cld
xor
cmpb
add
loop
mov
movsb
xchg
test
fmull
enter
inc
fildl
test
inc
loopne
mov
ds
xchg
mov
outsb
mov
loope
pusha
andb
pushf
jge
test
cmpsb
icebp
or
dec
adcb
xor
fiadds
mov
stos
pop
and
sub
lods
addb
test
dec
mov
scas
jmp
in
xor
pop
push
icebp
test
and
shl
popa
bound
push
pop
cmc
inc
into
testl
sub
in
inc
xor
loope
std
lock
js
cmpsl
sbb
das
jae
and
repnz
leave
sbb
xorl
xchg
sub
sbbb
shll
repnz
inc
popf
cmpsl
add
add
adc
cmp
lods
loopne
xchg
dec
xlat
push
dec
stos
xchg
sbb
sub
cmp
sar
adc
scas
sbb
rcll
repz
decl
jae
jno
adc
lcall
repz
and
mov
rcll
in
arpl
dec
and
cmpsb
pop
pushl
lds
clc
insb
dec
frstor
pop
mov
dec
stos
push
shl
iret
imul
jl
lock
test
cmc
cld
int3
cmpsb
push
movsl
ror
or
sub
aaa
stos
mov
in
xorl
pop
orb
stos
inc
push
adc
shrb
adcl
mov
sub
jecxz
mov
mov
xchg
adc
es
shr
mov
hlt
lret
jmp
dec
stos
enter
push
mov
sub
fisubl
lret
add
psubw
scas
jo
dec
ljmp
iret
mov
jne
adc
dec
jnp
imul
aam
repnz
fcompl
js
sub
inc
push
add
mov
xchg
ljmp
inc
and
xchg
push
jne
shll
andb
lcall
jae
cmp
movsl
out
fdivl
fwait
test
lcall
inc
xchg
pop
mov
stc
xchg
adc
sub
clc
cmp
adc
fwait
fwait
repnz
popf
xchg
fistps
daa
lds
mov
cmpsb
mov
test
jecxz
jge
rsqrtps
and
aaa
mov
cmp
ja
lcall
je
sbb
xchg
adc
imull
test
xchg
mov
xlat
gs
pop
cmp
in
fcmove
into
test
xchg
adcl
jp
or
dec
jo
lods
clc
call
mov
test
cmpsl
sbb
mov
nop
loopne
shrl
jmp
mov
loope
xlat
repnz
jg
dec
cmp
add
mulb
fsubrp
in
push
cld
jae
repnz
jb
fsubrs
push
out
xlat
xor
hlt
mov
shlb
in
mov
test
xchg
dec
mov
dec
lea
xchg
and
shll
ficoms
popf
jg
dec
andb
mov
sub
sbb
push
orl
adc
jmp
mov
les
pop
xor
mov
mov
imul
xor
movsb
cmp
mov
sarb
ret
add
std
loop
sub
jmp
cmc
nop
outsl
jae
push
or
int3
mov
mov
cmpsb
leave
mov
adc
mov
cld
or
loop
xchg
mov
xchg
mov
adc
or
stc
stos
xorl
xchg
sarl
mov
stos
in
leave
adc
out
dec
fwait
mov
jmp
jne
mov
shrb
add
imul
roll
mov
mov
mov
ds
xor
lods
clc
sbb
in
jg
push
push
xchg
xorb
mov
aas
sub
pop
sarl
inc
imul
xchg
jns
cmc
mov
lahf
push
mov
push
add
fprem1
jne
and
mov
call
dec
xor
mov
int3
mov
mov
and
mov
or
push
push
sub
pop
xchg
out
stc
cli
dec
dec
dec
pop
lods
aad
dec
xchg
push
out
jmp
scas
jne
lock
lods
cmp
dec
jle
mov
pop
pop
negl
cli
sbbl
in
js
xchg
jns
fsubrl
in
mov
pop
and
je
rcll
fidivrl
or
add
enter
mov
rorl
insb
xorl
subl
pop
xchg
pop
leave
push
adc
int
push
mov
lret
ss
sub
xchg
das
push
fisubrl
test
pop
ds
push
xchg
cmc
imul
push
insb
xchg
sbb
adc
stos
mov
push
fwait
daa
push
pop
cmpsb
push
adc
testl
in
cld
push
idivl
fcompl
ljmp
and
or
jo
xchg
push
mov
mov
mov
dec
and
pop
rcrl
jae
xchg
mov
mov
mov
mov
push
shrb
xlat
xor
int3
imull
add
jno
cli
push
dec
aas
inc
fsubr
jl
test
mov
push
xchg
outsl
push
inc
xchg
add
inc
lds
test
ljmp
adcl
arpl
shrl
jle
sub
sub
add
jmp
mulb
push
mov
ret
inc
push
inc
sub
sbb
xchg
insb
mov
xlat
aad
cmpsl
rorl
stos
cmpsb
xchg
lods
fcomps
dec
psubb
cmpsl
cmp
inc
aam
add
imul
xor
mov
jne
push
stos
test
test
jle
scas
ljmp
sub
pop
stos
pop
xchg
ljmp
shll
fnstenv
adc
or
pushf
mov
scas
push
stos
int3
pop
and
jecxz
inc
xor
pusha
hlt
out
mov
mov
into
fwait
xor
add
ret
sbb
mov
call
popa
jle
xor
loop
incb
mov
dec
data16
cltd
push
and
ds
mov
je
scas
fwait
out
stc
sbb
inc
fidivrs
inc
inc
int3
mov
ja
xor
arpl
inc
into
cmp
mov
ljmp
mov
movsl
jo
ljmp
jp
adc
imulb
xchg
fldt
dec
mov
mov
push
aaa
mov
mov
lods
and
fsubrp
cmp
pop
jle
leave
xchg
test
daa
fwait
enter
jmp
aad
mov
mov
dec
fadd
mov
sub
outsl
ljmp
pop
mov
cmp
les
adc
lcall
je
mov
mov
mov
lret
gs
mov
fistpl
mov
pushf
or
dec
push
jecxz
xchg
mov
call
in
shr
adc
pusha
loop
add
outsl
aas
pop
sub
xchg
inc
or
jle
mov
inc
popfw
or
pop
jnp
mov
pusha
stc
mov
lods
jecxz
in
inc
pop
ljmp
mov
es
pusha
aas
add
xor
stos
or
fldcw
repz
clc
jmp
orb
inc
in
aam
nop
mov
sbb
icebp
push
orl
mov
mov
sub
pop
mov
mov
cmp
push
cmp
mov
cmp
xchg
sub
pop
jno
inc
in
repnz
adc
rcll
ret
js
aaa
dec
xor
fadd
mov
inc
rcr
mov
mov
or
dec
gs
mov
mov
adc
test
mov
push
movsl
jo
popf
push
cmp
mov
inc
adc
xor
stc
hlt
and
jmp
xchg
inc
scas
les
lods
xor
popa
xchg
jg
inc
scas
sbb
push
and
rcll
scas
xchg
push
addr16
and
xor
std
dec
cmp
movsl
ljmp
cmpsl
push
imul
mov
cmp
mov
push
divb
jg
std
and
mov
add
popa
or
mov
push
cmp
mov
insb
imul
rcrl
or
aad
mov
popf
push
xchg
gs
push
mov
mov
mov
xchg
dec
xchg
or
mov
jg
sbb
ss
dec
xchg
inc
sub
popa
out
lea
xchg
or
int
sahf
aaa
or
add
push
lods
cwtl
pop
repnz
into
cmpsb
mov
push
int
mov
shll
repz
adc
fwait
leave
insl
cmp
mov
inc
popf
scas
lret
pop
add
les
clc
mov
cmp
sbb
adc
and
xchg
notl
inc
test
pop
cmp
fildll
lcall
outsb
add
inc
mov
adc
fwait
insl
fiadds
jb
notb
js
mov
push
xchg
sub
incb
shl
dec
add
inc
cmp
das
rcrl
cmp
fwait
std
dec
adc
jo
mov
adcb
loopne
das
or
xor
and
sbb
shll
inc
sub
dec
mov
loopne
and
fsubrp
enter
or
mov
pop
sub
mov
pop
xor
xor
stos
push
inc
ficoml
insl
rolb
sbb
sbb
xlat
pop
mov
jnp
pop
loop
push
push
xchg
aam
sbb
cmp
sbb
jmp
stc
xor
enter
movsl
jge
mov
ret
js
lds
mov
aas
jae
jg
test
sti
sub
aas
mov
sbb
iret
insb
insl
sbb
rcrb
cmpsl
into
sti
fwait
ds
mov
jg
mov
shrl
stos
jno
inc
jnp
call
sar
popf
aaa
stc
xchg
mov
mov
adc
out
inc
xor
int3
inc
neg
stos
sbb
push
push
cmpsb
cmp
xchg
adc
aam
neg
or
adc
sarl
xchg
xchg
es
dec
mov
mov
sarb
mov
lret
sbb
mov
xor
jnp
cmpsb
call
or
dec
jmp
push
es
insb
inc
sbb
aas
test
loopne
lods
repz
mov
mov
divl
push
shll
loope
sbb
push
mov
fistpl
call
dec
dec
mov
pop
jbe
leave
fbld
mov
insl
xor
shll
pop
jae
pushf
stc
fiaddl
inc
mov
call
or
mov
mov
inc
lods
mov
mov
inc
push
out
xchg
push
js
fbstp
mov
and
fiadds
push
adcb
dec
xor
shll
adc
dec
movsl
lret
and
cmp
pop
adc
gs
sti
shll
jo
cwtl
or
scas
ss
subb
inc
jae
cmp
das
mov
cmpsb
aaa
push
mov
jl
popf
pop
fldlg2
movsl
btr
xor
out
mov
mov
jo
mov
sbb
mov
xchg
dec
jg
out
sub
mov
dec
mov
cmp
adc
mov
enter
push
scas
notb
lods
cmp
ljmp
movsl
imul
int
faddl
ficompl
dec
shlb
popa
out
and
cmp
out
inc
ret
iret
xchg
xchg
int3
jae,pt
push
sub
ss
push
loope
push
jmp
in
sbb
mov
mov
inc
mov
ss
outsl
jae
js
divl
fdivrs
je
fucomp
adc
adc
stc
ret
pop
scas
pop
pop
jl
in
sub
xchg
pop
cmpl
mov
movsl
int
lret
xor
dec
cmp
jne
jmp
add
mov
cmp
mov
lret
mov
sub
or
data16
rcrl
call
xor
loope
or
xor
les
wrmsr
cmp
mov
imull
jecxz
es
mulb
mov
add
lret
xorb
push
xchg
and
inc
dec
mov
mov
sub
cmp
add
daa
mov
pop
cmc
lea
xchg
pop
fmul
xchg
into
movsl
sbb
pop
add
aaa
negb
xor
arpl
xchg
cmc
aaa
push
stos
mov
repz
and
cmp
lahf
xchg
xchg
push
dec
fldt
fdivrl
sti
cmp
push
and
cmc
movsl
adc
mov
cmp
mov
and
pop
scas
xchg
dec
mov
call
and
xchg
imul
pop
stos
test
lcall
orl
dec
out
ret
cli
add
cmpsb
jle
pop
mov
push
xchg
icebp
dec
xchg
xchg
pop
cs
inc
imul
movsl
xor
nop
icebp
mov
jecxz
lea
stos
jg
add
xchg
pop
ret
xchg
lock
mov
decl
outsl
inc
push
out
dec
enter
pop
adc
in
jb
cmpl
add
mov
leave
sbb
out
rcl
call
movsl
and
imul
mov
in
lock
inc
cmp
jmp
fwait
inc
fimull
mov
cltd
cld
insb
movsb
xchg
pop
inc
mov
js
xchg
loop
dec
push
pop
ret
pop
xor
testl
mov
into
les
sub
sub
in
mov
mov
mov
jnp
cmpsl
lahf
cmp
add
test
icebp
jo
sub
outsb
int
popa
mov
insl
sbb
sti
cmp
pop
xchg
sbb
mov
dec
scas
jp
lods
xchg
or
negl
xchg
and
push
push
cmp
test
scas
sbbb
sbb
mov
dec
dec
ja
jg
fs
sub
roll
loop
xchg
xchg
sti
mov
cmp
adc
test
or
loop
cbtw
rorb
cmp
rcl
and
mov
mov
pop
loop
cmp
cs
adc
cmpsl
mov
repnz
loop,pn
cwtl
mov
push
cmp
push
xchg
lret
ss
leave
ss
mov
mov
jg
insb
rcl
pop
pavgw
push
pop
stos
add
mov
push
popa
add
xor
xchg
jge
imull
jb
add
pop
cli
xorl
stos
rclb
xlat
pop
roll
xor
or
pusha
test
jl
aaa
and
lods
addr16
rcl
cmpsl
rcll
gs
sub
loope
pushf
jo
shrl
mov
inc
xchg
mov
push
sbbb
neg
call
insb
or
pop
iret
mov
fimull
mov
cmp
enter
std
jl
push
xlat
pop
pusha
das
mov
push
out
testb
rorb
ret
fucomip
insb
shll
and
repnz
inc
jbe
dec
iret
ja
test
andl
mov
fsts
ja
and
shlb
in
xchg
push
leave
sbb
out
scas
cmp
mov
or
popa
xchg
in
ljmp
add
add
popa
dec
xchg
out
movsl
jbe
mov
outsw
ss
sbb
pop
nop
dec
in
sbb
inc
fwait
dec
inc
mov
xchg
mov
pop
fdivrl
out
sbb
ljmp
adc
sub
cvtdq2ps
mov
xchg
pushf
je
sub
cwtl
lods
mov
sbb
sahf
les
js
pop
inc
xor
dec
cmp
xor
sahf
ja
sub
mov
lods
add
pop
sbb
mov
lea
jmp
loopne
mov
mov
fnstenv
pusha
es
pop
scas
repnz
daa
ljmp
push
je
jmp
outsb
push
cwtl
gs
jo
add
mov
push
test
test
pop
aaa
ss
sub
mov
repz
rcr
sbb
cmpsb
aam
lahf
adc
push
les
sub
sub
cmp
ret
test
add
mov
cs
jmp
hlt
es
enter
xchg
dec
jl
mov
adcl
mov
xchg
adc
adc
and
enter
stos
mov
push
sti
gs
adc
mov
jl
fdivl
dec
jmp
mov
loopne
push
push
xchg
mov
movsl
test
pop
sbb
xchg
fst
push
inc
andb
xchg
mov
mov
dec
mov
hlt
test
fldl
jle
sbb
fwait
nop
rcrb
inc
in
mov
push
in
in
push
mov
movsb
or
and
clc
jb
stos
xorl
data16
adc
push
dec
bound
add
rcrl
rcr
push
test
jecxz
dec
sti
mov
mov
xor
hlt
xor
jo
pop
out
push
dec
jge
stos
nop
push
push
pop
jl
pop
jl
cld
xchg
les
js
push
mov
jb
push
leave
mov
and
mov
daa
mov
mov
pushl
ja
jns
mov
inc
lods
lret
lea
insb
sbb
mov
mov
push
pusha
shrb
jmp
and
popf
sbb
out
adc
mov
xchg
std
mov
sub
stos
pop
cmpsl
decb
rcrl
add
jne
test
leave
push
fwait
sub
mov
test
daa
sbb
sbb
jge
pop
and
mov
jo
mov
stc
dec
cmp
out
xchg
push
repz
test
or
test
roll
shl
pop
push
fcompl
shll
imul
leave
out
push
and
push
outsl
jns
mov
jmp
or
adc
add
sub
mov
aas
es
mov
mov
mov
aas
mov
and
out
push
cltd
mov
dec
into
push
mov
inc
or
cmp
std
mov
fwait
cld
es
cltd
loop
es
jle
outsb
ret
dec
fsubp
mov
mov
mov
fsubp
sarl
inc
cmpsl
fcoms
and
mov
xchg
or
xchg
cmp
in
cmc
dec
loopne
dec
pop
or
sbb
mov
dec
mov
arpl
iret
jae
pop
fwait
je
lahf
sub
and
clc
jg
inc
push
add
movb
movb
mov
dec
rclb
xor
aad
dec
lods
xor
cld
mov
jp
xchg
int
lods
fcoml
pop
mov
mov
dec
push
sub
xchg
jne
jbe
mov
push
sbb
fists
xchg
les
enter
scas
ljmp
xor
nop
pop
or
push
scas
ljmp
test
sbb
es
popa
pop
pushl
fildl
pushf
lret
jb
push
les
sbb
xor
pop
dec
insb
js
jmp
sub
jae
in
out
jne
lods
dec
stos
cld
ja
or
jle
inc
and
test
cltd
xchg
push
clc
adc
stos
leave
daa
mov
cmp
or
xchg
push
push
imul
jle
leave
push
sub
loopne
cltd
imul
inc
loopne
xchg
dec
mov
andl
in
push
or
imul
pop
pop
push
and
jmp
shrb
data16
nop
jmp
daa
popa
cmpsl
xsha1
sub
jmp
stos
fcom
mov
fists
pop
mov
outsl
stos
dec
push
gs
and
push
and
stos
and
add
loopne,pt
pop
stos
xchg
push
fldl
xor
sti
pop
movswl
test
and
mov
sbb
mov
mov
shlb
or
sbb
jo
int3
sahf
testl
test
mov
dec
stos
cwtl
mov
lahf
mov
out
or
into
cmc
push
add
movsl
lahf
xor
stos
pop
ficoms
mov
shll
stos
mov
sahf
add
adc
or
call
adc
inc
rclb
fcoms
xor
xor
mov
lods
data16
sub
sbb
clc
and
lods
xchg
loopne
ja
sub
push
add
mov
xchg
xchg
insl
xlat
lahf
mov
sbb
and
cmpsl
dec
adc
pop
push
int
ljmp
add
or
dec
mov
mov
mov
mov
cmp
into
fstpt
pop
push
nop
mov
fcmovb
xor
sbbl
aad
xlat
dec
push
ss
mov
pop
adc
js
push
or
pop
js
loopne
je
push
sub
sarb
mov
adc
xor
mov
and
xor
js
fistps
xor
cld
fadds
xor
ret
test
xchg
cmp
sub
pop
mov
cli
push
popf
shl
ss
daa
enter
sub
in
xchg
movsb
mov
push
jns
lods
hlt
sub
cld
mov
pop
jne
js
mov
fcoms
sbb
lret
mov
cmp
out
adc
out
cmc
mov
fcmovnbe
sbb
clc
dec
cld
sub
pop
addr16
xchg
rorl
sbb
push
jno
addb
jo
mov
test
cmpb
shll
xor
scas
sub
addr16
rorl
sub
xor
push
icebp
xor
loop
pop
cmpsb
inc
hlt
faddl
mov
fsubl
jp
xlat
jmp
push
cmp
adc
or
bswap
mov
xchg
call
shlb
es
pop
lods
mov
push
cmc
jmp
es
mov
sub
lods
mov
fsubrs
sbb
xor
jae
cmpsb
adc
dec
icebp
imul
test
xchg
push
dec
xor
sbb
push
xchg
insl
movsl
inc
dec
in
mov
adc
rorl
aaa
iret
vaesdec
enter
stos
daa
mov
mov
sbb
scas
mov
cld
mov
push
loopne
mov
loopne
mov
test
shrl
mov
lret
sarb
mov
imul
ror
and
loope
stos
dec
fst
lret
shr
mov
xchg
push
mov
mov
adc
cmp
mov
mov
inc
fwait
test
stos
push
xchg
fdiv
xchg
xlat
lcall
xlat
sbb
sub
movsb
xchg
mov
data16
pop
mov
adc
xchg
out
js
push
mov
mov
cmp
sti
notl
rcll
pusha
and
push
js
popa
fwait
and
imul
inc
xor
jg
mov
mov
shrl
fnstcw
sbb
cmp
dec
inc
mov
ss
add
pusha
push
mov
pop
scas
rorl
aaa
pop
fdiv
je
mov
pop
es
and
jns
js
test
and
sti
or
roll
loopnew
or
fcmovb
test
xor
cli
inc
pop
pop
mov
adc
pop
jmp
stc
xorb
push
shll
and
cmp
loop
and
es
fwait
xchg
cmpsb
xor
insl
scas
mov
outsl
insl
jnp
imul
mov
insb
fcmovnu
out
mov
sbb
into
out
mov
cld
push
mov
mov
fcmovu
xchg
leave
jmp
popf
stos
and
cmp
loop
repnz
jne
inc
sub
ljmp
clc
sub
or
fnstcw
cmc
scas
enter
lods
push
and
add
sbb
mov
rcll
pushf
jl
popf
les
xchg
xor
sub
mov
mov
pop
cmp
aas
sbb
es
cmp
cmp
shrl
aam
or
lds
or
mov
ss
dec
test
je
inc
movb
repz
jmp
add
add
sbb
jbe
mov
ljmp
and
popa
jmp
add
pop
cltd
and
lret
mov
jge
sbb
sub
loop
dec
movsl
loopne
add
popl
iret
or
pop
inc
mov
cmpsl
hlt
stc
mov
pop
js
fistpl
imul
and
pushf
insb
mov
lods
shll
or
daa
push
dec
or
sub
lods
jae
ljmp
push
or
or
nop
xor
pop
push
and
cmpsl
lods
int3
sbb
fsubrp
sub
loope
fnstsw
xor
aad
push
cwtl
int3
ficomps
xchg
pop
push
xor
sub
dec
mov
lods
mov
pop
adc
pop
sbb
divl
lds
mov
dec
mov
movsb
adc
stc
addr16
loopne
insb
ja
daa
pop
lahf
sub
pop
aaa
xlat
and
fisubrl
mov
pushf
loopne
push
or
mov
xor
xchg
jbe
xchg
inc
aam
xchg
aas
xor
negb
rolb
popa
mov
gs
clc
sub
sub
notl
sbb
repnz
push
mov
insb
int
xor
add
xlat
popa
test
xchg
add
imul
test
aas
fcompl
dec
xor
xchg
mov
push
push
negl
ljmp
lahf
scas
and
cmp
ficoml
push
loopne
xor
frstpm(287
xor
pop
ficoms
inc
adc
sub
and
adc
cmpsl
mov
loop
jp
andl
dec
ret
bound
mov
adc
lock
out
dec
mov
mov
rol
xor
and
test
sub
mov
sti
mov
pop
test
xchg
cmpsb
les
mov
shl
sahf
out
mov
inc
jle
shrl
mov
sub
dec
mov
ret
jle
push
inc
scas
xlat
pushf
fstl
mov
adc
jae
inc
loop
push
jecxz
test
shrl
popa
outsl
mov
push
xchg
icebp
inc
shlb
adc
movsb
gs
mov
mov
dec
js
fisttpl
shll
xchg
ss
dec
sbb
pop
or
loope
cmpsl
push
cwtl
ljmp
cmp
lret
pop
outsl
sti
cltd
movsb
dec
out
xor
inc
adc
pushf
arpl
fwait
ljmp
aas
mov
xchg
adc
dec
lock
in
lahf
loope
sub
mov
pop
adc
mov
incl
loop
jnp
xlat
loopne
rorl
mov
dec
adc
cmc
pusha
mov
loop
testl
rcll
push
mov
out
mov
mov
lcall
mov
and
loop
out
out
fiadds
shll
or
rcll
inc
mov
sub
int3
or
jae
pop
ljmp
mov
lret
pop
scas
sub
es
fisubrs
pusha
cmpsb
or
iret
sarl
enter
add
lea
fs
mov
xor
xchg
notb
xor
dec
mov
loopne
sahf
rcl
sub
insl
pop
inc
jne
or
xlat
xchg
xor
sub
inc
push
out
push
add
inc
push
xor
inc
pop
pop
movb
mov
push
repnz
jge
mov
sub
jb
out
pop
add
shl
mov
mov
xchg
stos
push
sti
fidivrs
xor
mov
data16
test
and
inc
cmp
cmpb
and
enter
sub
test
xor
jae
cli
mov
add
cli
add
or
js
int3
gs
jbe
xor
iret
adc
loop
stos
pop
shrd
imul
aaa
pop
inc
repnz
sti
cli
dec
out
xchg
mov
inc
pusha
je
push
out
stos
xchg
test
fs
out
and
sarl
or
sub
add
and
icebp
mov
mov
dec
int
gs
cs
push
div
inc
sbb
les
mov
lcall
push
stos
ja
test
and
jno
cs
leave
jmp
sub
out
adc
or
xchg
xor
int3
test
lods
sub
sbb
jno
and
jns
dec
movsl
into
adc
js
mov
or
mov
lcall
push
inc
xrelease
test
mov
cli
int
pop
push
jecxz
test
push
push
jb
lahf
sti
jmp
xchg
pop
clc
push
xor
and
rol
jecxz
pusha
shr
jg
jmp
adc
mov
mov
shlb
clc
adc
jl
mov
repnz
outsb
cmpsl
mov
cli
cmp
sbb
mov
sub
aam
pop
inc
add
mov
adc
mov
and
rol
jmp
or
fdivr
push
cmpsb
aaa
outsb
test
inc
outsb
stos
or
mov
loop
nop
mov
or
hlt
dec
dec
jg
mov
xchg
adc
mov
shll
cmp
jmp
xor
xchg
into
movsb
sbb
mov
push
fucomp
in
jae
ret
or
mov
popf
loop,pn
xor
mov
es
pop
fildll
xchg
dec
pop
cmp
push
rcrb
imul
into
notl
mov
loope
push
cmp
sbb
aaa
in
jmp
push
sbb
lahf
xor
ds
stos
loop
pushf
adc
dec
add
loope
push
out
push
rol
push
icebp
hlt
movsb
push
insb
jl
mov
ja
xor
insb
stos
sbb
sub
mov
sub
frstor
xchg
sub
mov
add
xlat
sbb
std
mov
aaa
insb
sbb
jne
daa
sub
into
dec
or
inc
mov
icebp
xchg
shll
dec
sub
mov
xor
and
cmp
out
or
dec
mov
mov
loope
add
push
hlt
jp
mov
adc
jnp
adc
sbb
dec
xchg
mov
fisttpl
mov
shlb
idivl
mov
ljmp
loop
test
sbb
fisttpll
xchg
cltd
xlat
sub
lret
push
cmpsl
and
scas
out
mov
mov
addb
mov
cmpl
mov
dec
lods
jo
je
adc
cmp
mov
bound
pop
pop
push
add
in
cwtd
subb
popf
sbb
and
cltd
ror
add
sub
outsb
jnp
inc
adc
lock
add
jmp
mov
inc
aaa
cli
testl
pop
mov
sarl
or
mov
int
add
rorb
dec
dec
cmc
or
cli
test
push
in
out
ds
mov
mov
out
rcrl
mov
repz
jmp
es
mov
and
jb
pop
cmpsl
jp
insb
inc
sub
xchg
pop
push
or
shll
lods
ss
movsb
or
jns
cmpsl
sbb
addl
xlat
pop
xchg
popa
imul
xchg
sub
mov
rol
in
stos
adc
and
cs
pop
sub
outsl
scas
mov
jnp
sub
pop
fwait
mov
push
mov
mov
inc
lret
sarl
sbb
and
rcl
pop
hlt
mov
pop
mov
inc
push
jl
add
test
fldcw
ljmp
filds
clc
cmp
mov
test
jg
sub
jmp
mov
push
and
lock
cwtl
xchg
dec
mov
xchg
jmp
jecxz
insb
pop
adc
mov
nop
cmp
pop
mov
test
fisubs
mov
aad
cmp
shlb
inc
sbb
scas
pop
out
push
jg
cmpsl
scas
xchg
ret
ja
das
loop
adc
out
cmp
xchg
loope
dec
int
sub
pop
test
aam
mov
ficoms
inc
iret
fldcw
in
mov
insl
sub
test
cmp
rclb
mov
repnz
ljmp
mov
dec
shlb
jecxz
cmp
add
dec
pushf
mov
rorl
in
lock
cmp
sbb
aam
jmp
movsl
ret
aas
fs
pusha
sti
leave
xor
dec
push
mov
xchg
dec
sbb
mov
pop
sub
ss
popa
cmp
outsb
add
outsl
fstpt
dec
or
scas
lret
pop
in
lret
rorl
aaa
insb
ss
fstpl
adc
loopne
push
mov
ds
cmp
test
movsl
fstpl
roll
roll
and
ljmp
pop
mov
call
scas
mov
mov
or
fsubp
dec
sbb
lret
jge
xchg
cmp
test
mov
inc
xchg
ds
sbb
daa
lds
xor
mov
or
sub
sub
dec
jecxz
out
loop
mov
jns
xchg
cld
and
inc
insb
pop
lcall
mov
sbb
push
arpl
roll
mov
fwait
popf
adc
pushf
or
pop
mov
lret
or
aam
xor
repz
sbb
xor
test
fstps
dec
xchg
or
cmp
mov
scas
fs
mov
pusha
mov
cmp
mov
sub
jae
popa
sbbb
frstor
cltd
outsl
dec
lret
mov
mov
das
xchg
pop
mov
fimuls
push
sub
shll
int
loop
jp
fdivp
dec
lods
dec
mov
jae
in
or
popa
jb
push
pushw
mov
xchg
adc
in
mov
xor
or
fsubrl
ss
push
pop
hlt
neg
aam
mov
sub
out
cmp
sbb
nop
pop
xchg
mov
cld
dec
adc
jmp
aaa
mov
or
es
jae
aaa
push
mov
popa
stos
mov
aaa
sub
mov
pop
xchg
cmp
js
sti
pop
shlb
loope
jg
add
mov
xor
jne
sti
call
mov
movsl
out
ja
lret
mov
jne
mov
es
cmp
jbe
xor
mov
enter
sub
xor
xchg
xchg
mov
cltd
adc
insl
ficoms
lods
add
addb
add
jecxz
inc
xor
lret
xchg
push
loop
mov
adc
adc
fyl2xp1
movsb
test
leave
sub
mov
xchg
shl
mov
cltd
loop
int
xchg
fisubl
je
out
arpl
lea
in
jg
sahf
sbb
roll
mov
mov
inc
insl
and
icebp
popf
mov
mov
ja
mov
js
repnz
cwtl
cwtl
sbb
repz
mov
iret
gs
mov
mov
inc
push
add
gs
pop
mov
sub
cmp
push
mov
loop
cmpsl
sub
test
int
inc
stos
add
test
jbe
mov
fisubs
mov
adc
sub
popf
ret
loop
jnp
in
pop
sahf
cmp
in
out
sti
jo
into
xor
push
les
aad
inc
mov
scas
jmp
ja
mov
dec
or
mov
sarb
leave
xchg
cmpsl
jecxz
shll
scas
adc
push
pop
mov
sbb
push
fldcw
jbe
mov
and
inc
mov
jne
push
mov
mov
popf
int
nop
mov
mov
sahf
mov
cmpsl
mov
ret
or
adc
mov
add
movsl
mov
out
in
in
adc
nop
jecxz
xchg
dec
dec
out
push
mov
mov
repz
mov
dec
mov
xor
xor
inc
sub
fs
int
mov
sbb
pop
call
test
pop
popa
sbb
into
push
fwait
pop
jae
push
mov
fldenv
sbb
stos
xorl
or
ret
and
inc
jae
add
addr16
repnz
int3
inc
xlat
push
mov
aaa
popa
and
mov
sub
int3
les
loopne
fcoml
fsts
ret
rolb
mov
jbe
out
push
stos
mov
push
cltd
insl
sbbl
add
cmp
lret
jne
and
in
mov
lahf
sarl
dec
mov
ljmp
or
push
loop
inc
popf
mov
aad
popa
sub
and
popf
bnd
mov
xor
xchg
xchg
xchg
aas
mov
lcall
sub
mov
int3
inc
ds
fisttps
lret
sub
jg
xor
cmp
adc
js
jecxz
stos
mov
sub
pop
rcrl
pusha
in
outsb
push
jmp
cli
dec
lea
cmp
xchg
call
out
icebp
mov
mov
jb
test
cmc
xor
call
mov
dec
jns
mov
loopne
mov
xlat
imul
roll
dec
mov
ljmp
test
xlat
and
in
leave
das
jl
or
mov
jg
das
jg
cmp
hlt
test
aad
add
fisubrs
nop
sbb
movl
mov
lahf
out
xlat
mov
fistpl
add
sbbb
mov
movsb
push
sub
ja
jne
cltd
es
lods
mov
xlat
mov
cmc
leave
sub
inc
or
loopne
out
hlt
das
and
adc
mov
cwtl
mov
mov
dec
in
sub
add
dec
xchg
mov
jnp
mov
xlat
sub
es
das
cmp
xor
and
cmpsl
aad
ret
rcll
cmp
leave
or
jne
sub
mov
add
xchg
loope
lods
mov
out
idivb
cmp
fs
xchg
xor
mov
int3
and
shl
xor
movsb
das
hlt
push
jl
loop
push
pop
mov
popf
retw
rorl
xchg
leave
sbb
test
inc
pop
lods
add
jg
loop
shll
stos
mov
pop
subl
jmp
repnz
or
xor
incb
sti
pop
inc
pop
adc
xlat
and
fwait
push
mov
xchg
popa
es
dec
pop
ret
jne
mull
fstpt
mov
xor
xchg
push
and
pop
jns
dec
push
rcll
arpl
add
insl
dec
mov
test
lret
scas
sub
xor
cmp
ret
int
mov
sub
into
mov
mov
cld
popf
push
mov
add
pop
push
aaa
push
sbb
xor
and
dec
out
push
enter
sub
and
lcall
sub
mov
loop
adc
or
je
sbb
jl
mov
retw
pop
xchg
pop
rol
pushf
jl
mov
es
or
adc
jae
lods
or
push
lds
nop
shl
xchg
mov
test
or
push
test
lds
imul
addr16
fcmovnu
loopne
cli
aas
pop
mov
mov
mov
gs
ds
inc
xor
xor
ficoms
inc
out
xchg
movsb
sbb
js
jecxz
mov
je
mov
sub
dec
aaa
loopne
je
adc
mov
fcoml
out
xchg
stc
fistps
cmpsb
sbbl
sub
xchg
pop
add
cmp
ret
loope
jge
jae
mov
push
popa
inc
dec
fdiv
leave
and
leave
daa
pushf
mov
lret
adc
loop
movsb
addr16
ds
jnp
pusha
jle
les
mov
add
mov
mov
movsb
cld
in
mov
or
dec
out
aaa
movl
daa
jl
mov
push
pop
jmp
inc
pop
cwtl
mov
imul
aas
jno
and
insl
cltd
jmp
push
lock
or
hlt
into
in
mov
cmp
push
icebp
mov
dec
add
dec
dec
jmp
cld
push
push
in
cmp
mov
mov
cmp
ds
sub
push
mov
mov
std
mov
cmp
jl
aaa
lds
xchg
pop
cmp
nop
xchg
sarl
fwait
dec
mov
mov
inc
xchg
andl
mov
nop
mov
dec
aaa
mov
adcl
cmp
das
nop
cmp
jge
daa
stos
mov
xchg
cmp
push
jl
mov
sub
ja
inc
dec
cmp
loop
sub
mov
aas
decl
mov
xchg
stc
movsb
cld
jle
les
es
imul
jge
cltd
test
idiv
cmp
popa
push
mov
movsb
icebp
cld
adc
das
imul
pop
mov
mov
jne,pt
stos
inc
xchg
daa
jge
mov
mov
inc
jp
test
xor
movsl
std
cld
mov
sub
cmp
push
mov
lock
xchg
pop
xchg
popa
std
jle
cmp
daa
inc
mov
push
xchg
arpl
mov
ljmp
jl
xchg
lods
xchg
and
mov
nop
iret
std
cld
push
push
cmp
fbld
pop
incl
inc
xlat
orl
sub
mov
mov
mov
fistpl
mov
nop
aad
inc
and
mov
sub
cmp
mov
mov
push
scas
movsb
push
cmc
les
popa
out
sti
mov
imul
fldcw
aam
xchg
test
push
cltd
mov
cld
lahf
mov
jnp
adcb
or
xchg
inc
daa
jle
cmc
stos
adc
pop
push
pop
jge
js
push
in
xor
push
mov
push
dec
jno
enter
jne
scas
int3
cmp
jle,pt
test
jp
xchg
pushl
pop
mov
sub
out
mov
std
jns
sahf
xchg
ja
cs
loop
mov
xchg
cld
out
jp
cmp
xchg
jnp
cltd
lea
mov
std
incl
push
daa
fistpll
adc
jle
inc
inc
inc
push
lahf
mov
subl
mov
jns
pop
ja
jg
dec
sub
daa
and
out
xchg
mov
cld
cwtl
cmp
jle
test
movsb
fcmovnb
mov
push
popf
imul
daa
aaa
fstps
cmp
lret
sub
cmpb
jl
les
popa
jg
hlt
push
xchg
insb
ljmp
mov
mov
cmc
cmp
push
jp
jle
xchg
mov
cmp
daa
test
mov
testb
or
lds
jl
jecxz
mov
cmp
xor
pop
xchg
jnp
lcall
jmp
popa
add
push
jno
mov
inc
cmpsb
cmp
or
xchg
and
push
dec
mov
movsb
xor
test
jnp
and
pusha
and
mov
std
cmp
xor
jp
mov
push
lahf
imul
js
lds
lods
dec
and
inc
aas
test
push
cmp
movsbl
push
int
dec
mov
jge
popa
out
sti
out
jae
cwtl
xchg
jmp
pop
cmp
movsb
xchg
lahf
in
lret
sub
xlat
mov
into
lds
test
sti
sub
ds
jle
cltd
pusha
mov
cmp
lcall
cmp
and
idiv
or
fnstsw
into
mov
mov
add
jle
xchg
pop
xchg
daa
std
mov
mov
jp
sub
out
push
stc
ds
cltd
cmp
vpaddb
daa
popa
cmp
mov
in
ja
adc
test
xchg
out
mov
sbb
xchg
lret
mov
sbb
aas
mov
cmp
loop
xchg
mov
pop
mov
cld
mov
aas
or
mov
std
mov
adc
push
jmp
sbbl
push
cmp
test
test
les
in
dec
lret
popa
lods
sti
arpl
mov
add
pop
jge
call
push
jge
mov
push
movsb
idivb
mov
nop
mov
cmp
rol
cmp
inc
xchg
add
nop
and
jno
push
lcall
xlat
daa
int
fdivrs
inc
ds
loop
inc
add
aaa
int
cltd
push
imul
xchg
fwait
xchg
fs
mov
std
cmp
adc
mov
dec
mov
jns
xor
xor
in
leavew
jp
jecxz
sti
xchg
xchg
jbe
mov
jnp
xor
xchg
cmp
inc
inc
add
stc
pop
adc
or
push
cmc
push
cmp
jnp
inc
xchg
and
sub
rclb
std
ds
cmp
daa
pop
jle
mov
fdivrp
cmp
mov
std
sub
xchg
call
cmp
sub
addb
repz
out
push
push
ljmp
mov
mov
outsl
loop
imul
outsb
rep
mov
mov
cmp
sub
es
mov
or
cmp
test
jecxz
mov
cltd
adc
mov
mov
mov
cmp
shll
push
fldenv
cmp
pop
or
xor
jl
xchg
push
std
cmp
daa
stos
jnp
aaa
add
push
test
mov
xchg
decl
out
rolb
pop
mov
mov
cmp
gs
fistpll
jl
nop
and
push
movntps
xchg
dec
jnp,pt
cmp
mov
xchg
movsb
repz
rorb
mov
pop
sti
mov
ret
std
cmc
jne
mov
sbb
dec
dec
cld
insb
loop
sub
mov
jmp
cmp
mov
clc
movsb
xor
or
xchg
dec
mov
mov
mov
push
mov
cmp
pop
mov
xchg
mov
or
adc
lahf
jns
adc
enter
push
cmp
pop
inc
sbb
push
mov
es
in
imul
xchg
orb
mov
push
xchg
mov
pop
jl
stos
int3
jle
mov
pop
xchg
mov
cmp
cmpsl
pop
movsb
inc
ss
mov
pop
pop
adc
xchg
in
mov
enter
mov
in
daa
push
stc
jnp
sti
cltd
imul
lahf
mov
xchg
push
sbb
mov
ror
std
and
fldl2e
mov
and
mov
flds
jl
xlat
mov
add
push
mov
mov
pop
mov
or
pop
mov
and
mov
mov
nop
or
aam
xor
sahf
cld
ss
mov
dec
pop
sbb
push
punpckldq
cmp
cli
sbb
adc
push
andl
in
inc
xor
iret
inc
mov
lahf
sub
lret
mov
addb
sbb
cmp
sbb
mov
jecxz
fnstenv
xchg
cmpb
cli
cmp
mov
movsb
mov
data16
jne
pop
pop
adc
cld
dec
push
mov
mov
xchg
mov
clc
ds
inc
push
inc
aam
stos
jle
xchg
aas
mov
fistpll
rclb
adc
pop
stos
mov
loope
cmp
daa
sti
jl
aaa
sub
sarb
negl
mov
iret
mov
call
std
sbb
jle
jno
mov
pop
adc
sub
aaa
jge
scas
push
xchg
and
mov
test
xor
out
mov
mov
cmp
inc
inc
ficomps
mov
inc
xchg
fbld
jnp
inc
ja
dec
push
xchg
ss
daa
push
jle
inc
mov
lret
push
jl
mov
cmp
cmp
popa
push
js
add
popa
sarb
push
cmp
push
gs
mov
andb
lea
mov
movsb
cmpsl
jge
lret
xor
jno
or
or
movsb
mov
aaa
xchg
push
leave
js
mov
add
jmp
cmc
ficoms
push
and
mov
jle
mov
ret
push
in
sbb
push
adc
jl
cld
and
shll
mov
mov
sub
xchg
jecxz
mov
xchg
aad
mov
daa
jge
mov
mov
jae
into
xlat
insb
xchg
cld
mov
movsb
inc
cmp
cmp
stos
mov
mov
jecxz
sub
sti
add
jp
push
jle
mov
out
icebp
sbb
fsts
imul
mov
dec
ljmp
mov
push
xor
mov
push
dec
mov
mov
jp
jb
sub
push
movsl
push
xor
xlat
orl
repz
push
mov
out
int
dec
cmc
dec
sbb
pusha
mov
gs
pushl
enter
popf
dec
sbb
bound
mov
dec
cmp
jnp
int
pusha
mov
js
popa
sbb
xor
data16
dec
sarl
pushf
xlat
xor
std
xchg
cmp
cmp
aas
in
das
adcb
and
std
mov
ljmp
mov
xchg
mov
jle
les
push
mov
xlat
test
adc
mov
push
mov
outsl
mov
inc
popl
push
les
bnd
xchg
xor
mov
cmpsl
xchg
pop
mov
cmp
ds
sub
jle
mov
adc
adc
push
test
or
cmp
jno
push
movsb
jl
shr
fnstcw
and
xchg
add
ljmp
xchg
pop
sbb
js
sub
cmpsb
mov
mov
dec
jge
cmp
lmsw
jl
jecxz
mov
adc
cld
insl
rclb
cmpsl
sahf
ds
cmpl
push
cmp
addr16
cmp
sahf
aaa
test
rcr
xchg
xchg
mov
mov
loopne
mov
push
mov
and
dec
das
xor
or
sub
push
add
sarb
aaa
stc
xchg
shll
idivl
ret
mov
popf
cltd
out
pop
std
mov
xchg
cmp
stc
ds
mov
sbb
decl
mov
outsl
mov
or
movsl
mov
aad
xchg
inc
jge
imul
fs
aas
ret
jl
cmp
mov
int
pop
popf
mov
ret
lcall
fstps
xchg
sub
mov
push
outsb
dec
and
cmp
ja
scas
fdivrs
lret
and
or
jl
daa
jg
inc
js
popa
scas
add
pop
movsb
xchg
mov
fistpll
imul
loop
out
dec
mov
mov
push
mov
clc
sbb
mov
cli
call
ret
imul
mov
add
and
jl
mov
dec
mov
jnp
xchg
loope
sbbb
mov
inc
lods
xchg
cmp
cmpsb
and
in
mov
decb
pop
jae
call
mov
aas
aaa
addl
fsts
push
mov
cld
adc
ljmp
cmp
popa
and
sbb
lea
js
je
mov
rcrl
inc
xchg
out
nop
mov
scas
lret
std
xorb
xchg
and
cld
add
xchg
in
cmp
test
inc
sub
fnsave
out
cmp
call
mov
mov
and
lahf
sub
sbb
lahf
mov
imul
dec
aaa
sbbb
jl
push
lods
scas
adc
adc
pop
xchg
mov
insl
mov
mov
mov
xchg
rcr
mov
jmp
ds
and
sub
xchg
mov
orl
movsb
clc
icebp
out
adc
aas
fcomps
clc
jecxz
fidivl
test
jg
lret
mov
lods
xor
movsb
cmp
jne
movsb
adc
adc
and
ja
daa
sbb
sbb
jno
std
aaa
xor
cld
mov
xchg
add
incb
push
rcrl
cmp
pop
mov
inc
imul
xor
lret
xchg
mov
mov
dec
lea
jae
test
jle
pusha
cmpsb
mov
cmp
jmp
mov
fildll
daa
and
pop
and
out
xor
daa
mov
sub
and
ds
fwait
test
jle
push
xor
decb
mov
pop
cmp
jmp
sub
out
pop
jle
mov
je
daa
mov
mov
dec
lods
dec
aaa
aaa
inc
rcrl
mov
pop
cli
cmpl
jmp
cmp
fists
mov
scas
std
or
mov
outsl
cld
mov
mov
cmpb
std
dec
and
cmp
mov
add
mov
dec
pop
scas
outsb
daa
cmp
jp
mov
icebp
xchg
sbb
cltd
add
movsb
mov
pop
ljmp
cld
fnstsw
jl
daa
mov
add
cmpl
jmp
mov
mov
daa
xor
jne
mov
shrl
daa
cmp
push
push
and
loopne
xchg
push
mov
cld
fnstcw
add
outsb
xlat
in
mov
mov
and
out
fiaddl
decb
scas
cmp
lret
lock
out
push
les
mov
jmp
in
xlat
mov
xor
add
mov
jp
movb
roll
cmpsb
mov
xor
cltd
push
outsb
cmp
pop
mov
xchg
cld
pop
xchg
mov
cmp
mov
push
dec
cmp
jecxz
ds
xchg
lret
jle
sbb
lcall
lcall
push
rep
cld
std
fstpl
mov
jl
mov
sbb
mov
or
mov
push
or
in
cwtl
mov
mov
xchg
jb
jge
daa
sub
insl
inc
stc
mov
ret
cld
idivb
push
jecxz
jnp
cmp
mov
mul
ds
mov
or
fisttpl
fstpt
inc
lret
xchg
xor
push
xchg
cmp
mov
lds
push
mov
sbb
mov
cmp
jge
mov
aas
lret
sbb
push
popf
movsb
popa
cld
mov
push
sbbl
mov
pop
in
pushl
cmp
jle
popa
add
mov
jge
mov
xor
and
and
adc
adc
loopne
and
adc
dec
dec
jns
es
aaa
cmp
popa
mov
incb
test
andl
mov
fwait
daa
xorb
dec
cli
jl
inc
cmp
and
stos
jbe
dec
scas
cs
cmp
mov
lea
mov
cmpsl
in
mov
stc
mov
daa
xchg
mov
movsl
std
mov
mov
mov
mov
push
or
outsl
jg
imul
mov
es
andb
push
cmpb
inc
mov
cmp
out
imul
push
nop
adc
loopne
jo
sub
inc
sbb
mov
and
dec
push
cmp
lods
inc
lods
dec
adc
sbb
cmp
or
sub
decl
jnp
dec
push
cs
mov
adc
std
mov
or
adc
xchg
add
ja
fwait
mov
cld
aaa
xchg
push
xchg
jg
cmp
jnp
xorl
addl
jmp
scas
sub
push
ja
jmp
addr16
cltd
cmpsb
mov
sbb
add
std
mov
aaa
mov
lahf
cltd
xchg
popa
add
repz
mov
mov
mov
xchg
jg
xchg
mov
sub
das
idivl
mov
jmp
xor
pop
mov
xlat
cs
mov
mov
std
sbb
jle
scas
mov
aas
xchg
inc
xchg
xchg
nop
fs
mov
pop
ljmp
cmpsl
divl
mov
dec
test
test
jp
xor
icebp
stos
movsl
js
xchg
and
add
in
imul
mov
cmp
lds
andl
mov
pushl
sbb
push
xlat
pop
aas
daa
and
jp
sbb
cmp
or
imul
jl
mov
jmp
or
repnz
push
inc
push
adc
movzbw
push
lea
stc
push
neg
btc
stc
mov
shl
or
movzbl
mov
ror
cmp
rol
mov
stc
cmp
adc
ja
sub
xchg
mov
lods
pushf
rcl
ror
rol
stc
stc
seta
cmp
xor
dec
rol
ror
rcr
sub
rol
rcr
sar
neg
jmp
pushl
call
pushf
movb
lea
jbe
bt
bts
mov
sbb
sbb
xchg
add
rcl
sub
bts
bt
mov
lea
add
not
pusha
movb
movl
neg
or
mov
pushf
pushf
cmp
mov
lea
jbe
mov
adc
sub
lea
lea
sub
bt
mov
rcr
bts
mov
push
add
shrd
adc
mov
btc
shr
dec
pop
mov
rcr
shld
add
movzbl
pushf
movsbl
not
mov
call
sub
aam
divb
pusha
cmp
mov
mov
mov
or
xchg
clc
fisubs
fsubr
addr16
jbe
stc
mov
jne
clc
fisubs
xor
jbe
or
cmp
jecxz
mov
popa
out
mov
pop
jmp
pop
movsl
pop
mov
mov
ret
xor
cld
mov
xor
dec
pop
mov
and
sti
call
push
sbb
call
cld
xchg
add
adc
stc
jo
adc
adcl
add
cmp
mov
xchg
dec
pop
inc
cmp
or
add
mov
cmp
fucomi
cmp
subb
cltd
test
ja
cmp
in
sub
cmp
and
pusha
add
orl
outsl
add
out
jecxz
fstpt
mov
push
dec
or
arpl
shlb
je
jnp
or
mov
cmp
hlt
sbb
addr16
cmp
and
sub
mov
sahf
push
test
call
lea
je
bt
stc
cmp
push
pusha
pusha
lea
je
pusha
pushl
push
lea
jmp
jmp
xchg
lcall
mov
dec
adc
or
inc
scas
adc
add
icebp
pop
fildll
repz
pushf
dec
je
xchg
sbb
xchg
test
and
add
sbbb
mov
adc
mov
cmp
aam
in
jne
jns
push
xchg
enter
dec
insl
out
mov
dec
movsb
or
test
sahf
adc
jno
fstl
shrb
mov
xchg
mov
in
pushf
mov
push
pusha
mov
pushf
mov
pushf
pushl
ret
mov
jns
mov
push
mov
scas
testl
or
in
cmc
mov
pusha
push
push
pop
adc
rcll
int
mov
pop
push
pop
adc
sti
ret
cld
leave
pusha
cltd
lds
dec
or
and
pop
push
sbb
clts
gs
test
dec
in
jge
nop
sub
and
mov
imul
mov
sbb
and
xor
mov
cld
mov
xor
sbb
mov
mov
pop
out
inc
or
push
adc
mov
insb
jmp
jb
dec
mov
jg
sbb
mov
shl
jmp
aam
enter
sbbb
push
xor
push
mov
jne
aam
fucomp
inc
mov
bound
pop
aam
dec
sbb
fildll
ret
bound
xchg
aaa
pop
inc
ret
xchg
cld
pop
add
jnp
movsl
je
sbb
int3
loopne
push
aaa
cmp
sub
add
int
test
fstps
inc
mov
and
cmc
jmp
push
call
push
call
loop
mov
xchg
std
repnz
mov
pop
xorb
adc
cltd
jmp
add
popf
aaa
jae
aad
in
daa
test
fmulp
fcoms
pop
and
cltd
jmp
sub
xchg
roll
cltd
pushf
push
cmp
xchg
gs
sub
sbb
inc
jecxz
ja
push
xchg
and
aas
nop
popf
inc
pop
daa
ds
lea
out
jae
sti
daa
push
add
add
mov
jnp
bound
mov
cmc
loope
in
sub
add
mov
push
mov
dec
jge
imul
xchg
stos
ss
lret
mov
cmp
cld
popa
sub
aas
cwtl
pop
xchg
lea
mov
sbb
sbb
scas
mov
dec
jmp
mov
call
pusha
call
mov
test
add
pushf
stc
push
mov
cmp
stc
jmp
cmp
pusha
movb
jmp
push
and
xor
mov
aaa
mov
and
mov
or
sub
in
mov
sub
scas
int
rcrl
pop
mov
ss
pop
xchg
sub
fadd
call
sti
es
fnstsw
outsl
out
xchg
ds
je
jbe
inc
and
xchg
xor
xor
mov
pop
popf
gs
adc
movsl
xchg
outsb
and
test
dec
addr16
mov
cs
mov
inc
cmc
insb
stos
add
and
mov
sub
lret
jnp
and
popa
icebp
xchg
and
sub
scas
nop
mov
xchg
push
sub
lea
cli
adc
add
lahf
sahf
popa
mov
sbb
add
mov
jne
xor
movb
incl
mov
sub
cs
adc
jecxz
rcll
cld
cmp
popf
jbe
fsubrs
sbb
inc
and
imul
mov
push
out
push
scas
or
lret
lea
ja
push
lea
jb
bt
stc
pushf
cmpb
mov
jmp
push
push
lea
jne
dec
bswap
mov
cmc
call
add
push
movl
movb
mov
lea
jmp
inc
xchg
xchg
andb
pop
std
adc
and
rcrb
imul
cmp
arpl
mov
inc
aam
rcrb
fistl
push
cltd
insb
push
imul
push
xor
mov
add
pop
pop
pop
and
add
add
or
bound
sahf
cmpsb
and
lret
cld
mov
fidivl
jne
xchg
or
cltd
inc
leave
mov
jg
fwait
je
nop
jl
cmp
lods
mov
data16
pop
fnstsw
jg
mov
sub
and
jbe
mov
leave
or
fstpt
sub
lret
rcrl
adc
jecxz
xchg
lea
pop
jo
dec
jo
mov
js
jnp
mov
jnp
sub
xlat
imul
js
and
push
and
cmp
cmp
push
addr16
jnp
push
push
sub
mov
dec
jns
mov
mov
movsl
sbb
test
jg
repz
jmp
jge
or
dec
stos
cs
and
sbb
push
ficoml
addr16
scas
pop
dec
popf
pushf
jbe
cmp
adc
out
push
sub
dec
mov
ja
in
inc
flds
mov
aad
push
test
inc
in
inc
test
bound
je
testb
int3
pop
enter
mov
mov
jns
loop
pop
fwait
dec
outsb
stc
int
sub
rol
addr16
inc
or
sbb
test
fwait
add
clc
mov
sub
jb
dec
insb
mov
adc
sub
in
sbb
ret
sbb
int
and
test
call
jno
test
cmc
xor
xchg
push
xchg
jecxz
mov
movsl
das
jbe
adc
gs
push
sub
xchg
adc
lds
outsl
les
test
mov
jl
int
sarl
pusha
stos
adc
add
add
add
addb
add
fidivl
add
add
add
add
add
jne
add
add
add
fimull
add
add
pop
sbb
add
add
outsl
insl
inc
add
add
add
stc
dec
add
add
add
inc
inc
add
add
add
add
addb
add
sti
dec
add
add
add
add
addb
add
enter
add
add
xlat
sbb
add
add
dec
inc
add
cmc
dec
add
mov
and
dec
add
add
add
stc
xchg
das
call
mov
jmp
movsl
aas
pop
xchg
push
in
add
int
push
xor
xor
cmp
jg
mov
std
sub
adc
test
movsb
adc
jno
jbe
add
aaa
xchg
adc
xchg
loope
test
in
mov
sti
inc
iret
cmp
movsb
cmpsb
dec
shl
call
mov
mov
call
test
js
insb
addr16
jns
add
jecxz
jp
es
fstpt
push
push
mov
pushf
inc
call
jo
sbb
movsl
adc
int3
adc
adc
cmpsb
sarl
adc
je
nop
fwait
pushw
adc
arpl
test
dec
ficoml
lcall
lods
cwtl
dec
shll
scas
push
ljmp
cmpsl
mov
jecxz
sar
test
or
dec
add
xor
jmp
cmp
aas
mov
mov
jns
jle
push
das
fists
dec
insl
test
or
imul
mov
imul
cmp
or
int
mov
or
xchg
mov
inc
add
xchg
gs
xor
jnp
jne
cmc
int
lds
push
testb
add
mov
in
and
jne
inc
loopne
out
or
mov
push
jne
push
inc
cld
jmp
stos
nop
mov
add
mov
mov
imul
jns
mov
xchg
out
bound
sarl
jne
push
cmc
sbb
mov
jb
or
add
repz
dec
stos
fs
pushw
add
xor
stos
xchg
inc
lds
or
fwait
push
out
jmp
sbb
xchg
iret
arpl
xchg
mov
inc
es
loope
es
mov
loope
imul
cmp
shr
inc
clc
movsl
push
popf
mov
movsl
mull
cli
icebp
pushf
mov
push
lods
dec
cmp
lret
sub
lock
out
add
mov
pusha
pushl
popl
jmp
mov
push
push
pushl
call
movl
jmp
not
mov
push
pusha
push
lea
call
pusha
adc
call
mov
pushf
pusha
call
bt
pushf
cmp
pusha
pushf
pushf
push
lea
je
pushf
pushl
movw
lea
jmp
adc
lock
push
pop
movsb
ds
push
movsb
cmp
into
mov
lds
fld
push
add
push
icebp
addl
jne
out
mov
inc
push
add
mov
add
pop
xchg
rorl
push
cmp
sbb
pop
mov
imul
push
int
imulb
insb
add
fdivl
int3
ljmp
mov
fsubs
roll
cmp
cmp
inc
mov
mov
pushl
lea
ja
call
cmc
jmp
add
push
gs
insb
outsl
jae
dec
gs
aaa
fnstcw
sub
sti
insl
lods
lret
arpl
je
pusha
rcr
jl,pt
pop
mov
or
fdivrl
mov
pop
sub
sub
inc
pop
hlt
mov
pop
or
add
mov
rorb
int
fisttpl
xchg
cmpsb
cmc
outsb
lcall
fldl2e
stos
xor
outsl
aad
and
in
decl
cmp
push
je
pop
cltd
inc
stos
cmp
fdivrs
jp
xchg
imul
jbe
mov
dec
in
jecxz
dec
push
rcrl
pop
stos
cld
sbb
add
dec
inc
jae
or
fisttps
cld
sbb
rcrb
adc
xor
push
dec
mov
call
out
push
xchg
ja
xor
lret
jmp
pusha
fldcw
cmc
xor
ljmp
add
js
movsb
xor
adc
idivl
fwait
imul
cli
repnz
add
lods
mov
or
decb
aas
and
fs
jmp
jmp
push
lea
je
call
jmp
clc
push
sub
pushf
stc
cmp
jmp
push
lea
jb
cmc
cmp
jmp
and
shrb
js
mov
lahf
subb
lock
popw
stos
mov
shll
in
sub
fnstsw
cmp
ret
lahf
pop
mov
xchg
jae
fs
mov
xor
push
pop
test
lock
jle
sub
les
ds
xchg
loopne
jle
mov
push
push
repnz
inc
das
inc
fs
xchg
sub
mov
pop
cmp
xchg
scas
mov
ret
jno
jmp
cmp
rclb
mov
push
inc
or
sbb
fnstsw
mov
add
sarb
push
push
aam
push
push
cmp
in
fdiv
sbb
mov
and
in
js
loopne
jp
push
test
mov
sahf
mov
mov
ficomps
push
gs
jecxz
inc
push
inc
sarl
xchg
jmp
movb
lea
jae
not
jge
mov
pusha
inc
inc
push
inc
not
mov
pushf
call
push
dec
call
dec
rorl
adc
ljmp
pop
cmpsb
enter
sbb
stos
and
out
mov
lahf
int3
mov
cmpsb
enter
and
stc
push
inc
nop
loopne
and
jo
jecxz
pop
cmc
in
dec
shr
stos
cmp
xchg
and
mov
and
pop
addr16
popa
or
mov
jno
xor
ret
mov
sub
xlat
lods
std
sahf
fdivrl
mov
sbb
mov
push
rol
push
stc
mov
call
mov
sbb
pushf
cmpsl
dec
mov
lret
mov
xchg
aas
addr16
or
or
test
jecxz
daa
out
movsl
xchg
pop
dec
loope
je
hlt
jge
mov
dec
cwtl
and
pop
hlt
repnz
stc
insb
mov
add
push
lret
gs
inc
dec
add
adc
sub
arpl
les
xchg
cmc
pusha
jo
iret
setno
dec
sbb
mov
xchg
scas
mov
jb
mov
pop
push
jne
jl
add
insb
aaa
repz
add
pop
ja
scas
or
mov
mov
movsb
rcll
xchg
sub
aad
dec
stc
pop
sub
lods
test
mov
xor
lock
mov
jb
mov
cmp
cs
mov
bound
test
pop
pop
jmp
jecxz
sub
movsl
call
lret
jp
sbb
insl
push
popf
ret
jne
test
pop
mov
rolb
mov
or
test
add
jp
cmp
add
call
in
adc
mov
mov
gs
fs
sbb
jae
push
xor
pop
sti
mov
jl
fisubrl
xor
out
xor
mov
aaa
and
adc
jb
shlb
ret
mov
xchg
pop
inc
xchg
imul
ljmp
rcrl
daa
aam
fimuls
adc
add
gs
push
loope
sbb
lcall
sub
and
mov
and
test
test
jmp
fld1
dec
xchg
add
xchg
dec
scas
out
inc
sbb
js
push
int3
mov
mov
adc
fisttps
andb
sbb
cmp
and
pop
int
lcall
imul
mov
jno
jne
inc
cmovs
rorl
and
xchg
jmp
push
imul
sarb
and
bswap
lea
bswap
bswap
movsbw
lahf
mov
lea
jnp
pushf
lea
ja
pushf
lea
jbe
jb
pusha
cmpb
push
jmp
sbb
mov
and
adc
stos
jge
add
and
daa
xor
pop
subl
mov
fwait
scas
push
pop
or
ret
bound
adcl
cwtl
or
test
or
fs
test
ds
dec
sbb
adc
cmp
insl
std
mov
lea
jp
push
setg
call
jmp
test
xor
stc
stc
test
cmp
bswap
movzbw
mov
lea
pop
pushf
setae
mov
lea
jns
call
cmc
mov
cmp
pushf
movl
jmp
call
pushf
pushf
pusha
push
adc
jmp
sub
cmp
mov
scas
je
out
and
mov
jnp
pop
pusha
ss
pop
or
ja
cmp
aas
les
aam
lcall
push
cmp
fadds
test
jae
mov
dec
shlb
inc
push
addr16
xchg
cmpsb
notb
outsl
xchg
lds
ret
fisubrs
add
loop
leave
sub
mov
sub
dec
mov
arpl
xchg
mov
mov
lods
call
mov
lcall
adc
pushf
jmp
cmpb
lea
jbe
jne
not
shld
rcr
xor
das
mov
or
rcl
add
sbb
mov
stc
test
push
call
jle
fwait
pop
xchg
dec
nop
lret
fldcw
repnz
popf
test
std
call
mov
test
test
movsb
daa
fisubl
test
ljmp
dec
pop
cli
lods
sub
lods
test
scas
mov
repnz
jmp
jmp
xchg
jnp
xor
dec
cli
test
mov
cmp
cmpsb
xchg
jb
cltd
test
dec
cld
adc
xchg
or
call
leave
adc
int3
test
addr16
xor
push
mov
mov
xchg
push
mov
call
mov
iret
mov
shr
mov
push
mov
push
xor
mov
lea
and
sti
shr
sbb
lods
add
lret
cltd
lods
imull
mov
and
jmp
ds
cmp
push
ljmp
popf
push
xchg
sbb
add
sub
addr16
imul
add
sub
hlt
test
pop
sbb
leave
xchg
sub
loopne
jp
mov
mov
into
call
mov
mov
mov
sbb
pop
cmp
mov
ret
jge
jnp
or
mov
and
xchg
fistl
sti
sub
and
fimull
push
or
clc
push
dec
std
fs
xchg
jnp
jmp
mov
jle
sti
cmc
push
int3
mov
xorl
fsub
pop
lcallw
xchg
mov
sbb
daa
scas
movsl
scas
mov
nop
jecxz
mov
push
pop
or
mov
imul
lods
lret
mov
jbe
scas
fidivrs
mov
gs
ucomiss
lods
pop
cmp
dec
inc
xchg
test
mov
jecxz
xchg
jecxz
repz
cmp
mov
loopne
sbb
sti
jmp
push
push
repz
inc
pop
std
jo
xchg
lods
ret
xchg
sub
jbe
mov
popf
out
lret
cli
xchg
lret
int3
fsubrs
insl
into
and
call
pop
fidivrl
add
mov
and
adc
aam
mov
push
push
in
adc
pop
outsl
mov
xchg
and
data16
dec
ret
aad
xor
mov
and
pop
out
imul
push
mov
xchg
imul
add
mov
jecxz
pop
mov
dec
pop
xchg
mov
dec
push
rcll
outsl
out
mov
inc
ss
loop
jle
cltd
test
test
pop
cmp
xchg
sahf
sahf
ror
cs
popa
mov
shll
into
mov
mov
dec
ljmp
call
sbb
dec
xchg
loop
ss
sub
ds
push
cmc
inc
movsl
movsb
xor
ljmp
xchg
add
mov
jl
pop
outsl
loope
and
or
mov
push
lea
mov
aas
fldl
mov
test
jbe
test
jecxz
je
push
sbb
inc
stos
idivl
es
mov
mov
ffreep
and
lods
add
mov
sub
incl
jbe
leave
inc
scas
dec
test
pop
xchg
dec
add
xchg
lret
and
test
lods
je
mov
adc
add
push
imul
and
fs
mov
pop
frstor
outsb
leave
xorb
xchg
or
out
ljmp
int3
scas
inc
insb
sbb
jmp
inc
or
je
dec
push
jnp
addr16
pop
scas
sub
ljmp
cltd
lret
in
sbb
sub
je
xor
aad
addr16
movsl
scas
xchg
push
stos
mov
sub
dec
push
xchg
test
pop
pusha
jmp
loopne
jb
mov
xchg
out
lahf
or
scas
mov
mov
cmpl
imul
mov
outsl
div
add
gs
sbb
sbb
inc
pop
xchg
dec
xchg
sbb
dec
scas
jecxz
in
aad
movsl
xor
pop
mov
xor
mov
sub
cmp
jl
inc
clc
or
es
sub
push
dec
sub
mov
ror
jecxz
shlb
into
mov
rolb
rcl
sub
mov
jbe
orl
shll
and
sbb
nop
sub
imul
into
push
sub
pop
loopne
jmp
mov
into
jnp
dec
pop
sbb
sub
ret
ljmp
inc
xlat
leave
lret
mov
ja
jns
sbb
push
dec
or
push
fmul
sti
outsb
pusha
pop
pop
test
sub
in
lods
mov
cmp
mov
jmp
fmulp
mov
stos
notl
jmp
mov
sarl
and
orb
enter
jne
divb
ds
sahf
cmp
mov
or
mov
ljmp
lret
xlat
mov
jecxz
sti
scas
mov
repnz
pop
xor
outsb
out
frstor
loope
mov
cmpsb
sbb
add
mov
hlt
scas
cmpsl
out
inc
test
mov
cld
jecxz
mov
ds
or
aaa
icebp
xor
xchg
pop
xchg
fdivr
mov
std
xchg
test
xor
fsubrl
int3
stos
fistpl
cli
xchg
push
mov
cmpsl
pop
daa
test
mov
push
and
rol
adc
call
mov
add
lcall
icebp
pop
fucom
or
mov
leave
jns
bound
mov
add
push
testl
jg
xchg
jbe
adc
insb
mov
es
jecxz
in
fs
ljmp
push
sub
xchg
js
mov
dec
ret
inc
shrl
pop
clc
popl
lea
jecxz
clc
mov
mov
or
aaa
sahf
push
add
mov
push
inc
movb
or
fcomps
bound
xor
and
ja
negl
and
addl
mov
xchg
push
gs
xorb
xor
aaa
pop
push
loop
int3
test
mov
xorl
loope
jb
aaa
inc
xor
pop
inc
and
ficoml
xor
and
out
or
xchg
xor
lret
ds
pop
sbb
mov
fidivl
mov
out
popf
add
jns
pop
sub
jecxz
subb
lods
xchg
jg
or
cmpsl
stos
lahf
ljmp
mov
test
adcb
dec
cmp
decb
mov
mov
pushf
pop
adcl
sbb
cmpl
mov
xchg
or
cmc
or
lods
outsb
cmpb
shrl
mov
arpl
cmp
mov
push
test
mov
lret
ret
in
mov
mov
ret
adcl
or
lcall
mov
imul
jp
dec
pop
call
scas
mov
mov
pop
bound
out
xchg
or
mov
insb
ljmp
negl
xchg
pop
xor
jbe
inc
xchg
inc
daa
bound
lcall
adc
call
lea
lret
mov
pop
xchg
mov
cmp
outsl
mov
xchg
mov
adc
movsb
pop
jns
lcall
jl
out
jmp
or
jp
lcall
add
cmp
data16
xchg
cmp
sub
ret
mov
test
sbb
lret
mov
out
jbe
or
mov
insb
sub
or
xchg
pop
xor
push
movsl
jns
mov
xor
orl
mov
jecxz
or
bound
in
bound
mov
insb
jp
bound
sub
xor
mov
movsb
jg
das
cltd
sub
adc
out
mov
cmpsl
sbb
orl
cmpsl
add
cmp
cs
insb
or
out
outsl
cmp
mov
movsb
dec
bound
iret
jp
mov
iret
out
arpl
dec
jl
jecxz
decl
jo
cmc
mov
movsb
inc
ficomps
xor
out
pop
cmpsb
cmp
loop
cmp
movsb
popf
jg
test
push
add
push
lods
mov
or
les
mov
jbe
clc
pop
leave
push
rol
insb
push
mov
shl
pop
pushf
xorb
scas
cmp
mov
add
sbb
aad
sub
shrl
repnz
repnz
aad
xor
sub
gs
cltd
ljmp
rorb
in
leave
xchg
jp
cmp
adc
inc
add
sahf
add
orl
test
add
mov
into
insb
imul
inc
js
pop
data16
push
xor
pop
movsl
push
jp
imul
les
shlb
sub
jecxz
out
push
mov
xchg
xor
cwtl
and
sub
push
outsb
jbe
push
pop
inc
jo
pop
push
imul
pop
pop
jecxz
jmp
jns
in
out
test
cmp
imul
pop
test
test
mov
xchg
sub
dec
adc
xor
les
lret
and
in
jp
popf
daa
mov
fwait
cli
stos
cwtl
nop
mov
or
xchg
out
jbe
shlb
lock
ss
js
push
rcrl
adc
enter
jl
jecxz
test
lret
sbb
or
mov
cmpl
out
lds
jle
call
sbb
cwtl
jae
pop
call
pushf
fstpt
fld1
sti
cmc
pop
daa
and
pop
int3
cmp
sub
xor
dec
mov
push
lock
int3
or
cwtl
imulb
mov
pushf
mov
sub
sub
cmp
sub
mov
sub
mov
leave
mov
jl
addr16
or
mov
cwtl
lods
mov
stos
mov
jl
fisttpl
stc
data16
shrb
fs
lock
std
and
xchg
addb
lcall
cmpsl
daa
xchg
mov
pop
sub
mov
xchg
cmpsl
test
mov
imul
dec
jo
xchg
fists
inc
and
insb
cli
test
movsb
lret
aas
bound
popf
rorb
scas
push
in
lret
and
jecxz
dec
pop
push
shrl
jns
in
cmpsl
sub
daa
or
fisttpll
ljmp
les
lds
lcall
inc
nop
repz
jl
je
sbb
cmp
mov
test
dec
cld
pop
jecxz
clc
in
test
dec
cmpsl
ret
dec
nop
and
inc
push
inc
lods
std
mov
mov
lcall
std
push
jns
shll
clc
and
push
pop
adc
cmp
mov
insb
mov
xor
movsl
repnz
and
inc
leave
cmp
dec
mov
inc
nop
jnp
mov
mov
inc
enter
adc
pop
sbb
sub
jl
cmp
and
jle
xchg
lret
pop
sbb
js
xlat
jmp
popf
addr16
fisttpl
pop
mov
sbb
inc
aas
movb
mov
pop
lods
pop
cli
aas
cmp
inc
sub
loopne
out
sbb
xor
out
nop
imul
stc
cmpsl
xchg
sub
iret
lret
lock
test
ret
push
mov
add
mov
je
movsb
xchg
fdecstp
xchg
push
xchg
aam
es
lds
popf
mov
mull
std
shll
mov
jbe
push
xlat
inc
out
sbb
cmpsb
in
enter
dec
inc
jp
jbe
enter
push
in
and
mov
repz
aaa
ret
inc
andb
out
stos
loope
jbe
mov
sbbb
push
inc
push
pop
and
lods
lods
test
sub
inc
cli
mov
mov
aas
jecxz
cmpsl
add
xchg
cmp
xor
xchg
dec
shr
mov
add
stc
bound
test
push
mov
pushfw
mov
dec
sar
test
push
shr
dec
or
add
mov
push
add
cmpsb
sti
cwtl
pop
gs
cs
aam
mov
popf
imul
je
xchg
cmp
imul
daa
in
xchg
int
es
lahf
sti
mov
imul
and
xorl
aad
xchg
push
xchg
sub
push
iret
xchg
in
mov
fsts
sahf
shlb
mov
sub
mov
inc
add
mov
das
jno
test
cli
dec
and
bound
inc
imul
mov
cmp
ret
mov
imull
xchg
mov
sub
xchg
jecxz
cld
sub
mov
cmp
xchg
cli
ret
mov
xchg
mov
sub
es
pop
sbb
into
pop
insb
js
mov
push
rorl
sbb
mov
into
mov
aaa
mov
lahf
jg
test
jbe
push
je
jae
rolb
jae
arpl
loope
in
cmp
mov
and
outsl
enter
sub
and
loop
push
es
fwait
adc
int
ret
mov
enter
cmp
shll
fs
mov
mov
pop
test
mov
stc
aaa
jns
and
ss
into
dec
sbb
jecxz
push
gs
sbb
gs
xchg
shrl
icebp
cmp
pop
xor
mov
cmp
mov
sahf
or
stos
cmpsl
rcll
push
xchg
jg
lods
cmp
dec
pusha
in
mov
dec
data16
popf
subl
adc
jno
sub
pop
popa
lods
mov
es
fdivs
out
movl
test
or
cmc
cmp
pop
out
or
or
push
lret
pop
cmp
and
mov
mov
mov
dec
cltd
cmpsl
xchg
aam
imul
je
mov
or
push
in
fwait
mov
push
cwtl
push
scas
inc
xchg
in
loop
cld
ljmp
xor
push
sbb
mov
fcmove
add
mov
xlat
inc
sub
jo
dec
leave
inc
clc
sbb
stc
aad
xor
sahf
mov
fbld
leave
push
scas
rolb
pop
mov
lea
jns
rcr
and
and
out
add
out
gs
pop
sahf
ds
lods
inc
and
popa
adc
mov
pop
xchg
es
cmp
mov
jbe
pop
cmp
mov
ja
aas
fldenv
xchg
rcll
jecxz
mov
adc
adc
jmp
fs
lea
ret
gs
es
loopne
cmp
xchg
cltd
push
mov
and
out
loope
lahf
inc
hlt
mov
jmp
das
cmpsl
popf
add
cmp
mov
xor
dec
cmp
fsubrs
andb
aaa
sbb
out
jecxz
mov
push
cmp
push
push
cmp
daa
mov
ja
popa
out
orb
cmp
mov
pop
testl
mov
icebp
xchg
lods
or
gs
sub
scas
cmp
lcall
data16
jmp
or
lret
call
inc
ja
mov
dec
mov
jmp
out
into
cmpsb
insb
and
mov
jg
sbb
out
dec
fbld
fsubs
mov
dec
lea
insb
addr16
adc
cmp
cs
xchg
in
ja
jmp
out
sub
out
or
lods
or
in
lret
sub
inc
mov
aad
sub
test
test
shlb
lret
in
mov
ret
mov
sub
xor
lods
lcall
jg
jns
dec
mov
and
imul
movsl
test
adc
jo
dec
in
sub
mov
or
dec
or
neg
xchg
or
dec
movsb
xor
test
aad
sub
cmp
push
ljmp
mov
and
repnz
lcall
jecxz
or
andb
fwait
lea
add
mov
cmp
lods
xor
xor
xlat
jp
cmp
lcall
xchg
es
pop
lret
jns
loope
std
mov
jmp
jg
nop
mov
push
nop
loop
outsb
pop
enter
sub
xchg
cmpsl
jg
lods
out
frstor
mov
in
xchg
jg
int3
mov
sub
imull
xor
mov
and
mov
sub
sbb
mov
xlat
ret
and
jecxz
popf
sbb
subl
clc
scas
mov
mov
jge
jnp
repz
mov
cs
in
sbb
dec
mov
in
mov
dec
jo
sahf
mov
dec
xchg
lds
xchg
call
and
pop
push
scas
in
mov
sub
and
lea
or
xorl
adc
rorb
xor
call
sub
add
pop
iret
mov
adc
lods
cmp
mull
xchg
add
mov
jmp
enter
adc
js
popf
add
or
jl
stos
enter
int
dec
fincstp
mov
add
lret
aas
sti
outsb
lcall
bound
popf
push
js
mov
mov
inc
sahf
jmp
stos
cltd
int
lods
mov
mov
bound
adc
inc
es
enter
lods
lea
cmpsl
std
sbb
mov
sbb
sbb
mov
shrl
dec
jns
iret
xchg
rorl
or
mov
sbb
js
test
lret
enter
pushf
sub
outsb
add
jmp
or
bound
in
pop
movsb
or
and
mov
add
mov
cmpb
xchg
sbb
push
and
adc
cmc
lods
dec
mov
mov
add
mov
mov
or
xor
jmp
out
loopne
dec
dec
out
ret
in
jmp
pop
mov
push
inc
sub
stos
mov
xor
dec
movsb
mov
stc
cmp
bound
adc
dec
xchg
xor
mov
in
jmp
lcall
sub
sbb
out
inc
or
and
mov
lret
jp
push
loope
xchg
mov
movsl
mov
push
into
daa
mov
aas
jecxz
out
fistps
dec
cs
in
lock
sbb
ss
imul
cltd
mov
imul
in
daa
pop
fistps
test
lret
inc
xchg
sbb
adcb
push
mov
xchg
out
cmpsl
out
dec
popf
aaa
mov
sub
jns
lcall
scas
aad
push
arpl
std
xor
push
bound
jns
lcall
adc
fwait
push
rcl
arpl
push
daa
aad
arpl
lock
in
arpl
stos
lods
mov
inc
mov
iret
mov
fcmovne
iret
and
cmpsl
enter
scas
push
cltd
inc
xchg
jb
das
adcl
bound
xchg
jecxz
jecxz
int
test
scas
inc
mov
mov
inc
dec
mov
cmp
lcall
stc
icebp
jo
les
pop
cmpsl
cmp
addl
or
push
jbe
fs
dec
pusha
mov
fcomps
cmpsl
cli
test
xchg
shlb
dec
clc
push
add
mov
cmpl
jg
dec
push
in
inc
shrl
movzbl
in
xor
mov
out
mov
addr16
negl
push
aad
mov
call
and
aaa
xor
in
js
mov
mov
enter
and
sbb
mov
sub
lods
mov
insl
or
insb
pop
mov
xchg
fnstsw
push
cli
cltd
cmp
lock
lods
bnd
lea
sbb
inc
push
jp
out
push
ret
mov
cmp
push
add
inc
out
push
sub
subl
scas
repnz
or
pusha
push
lcall
das
mov
xchg
cmpsb
nop
cmc
loope
mov
mov
cltd
sbb
cwtl
sub
push
cmp
mov
ret
xchg
push
test
and
sub
sub
popf
stc
xchg
dec
jbe
in
pop
ljmp
sub
pop
bound
mov
fnstsw
jo
add
aaa
mov
jo
and
cmc
jns
adc
or
into
sti
xchg
das
jge
xchg
adc
nop
scas
popa
push
into
out
fcoms
lret
sbbb
out
lods
xor
cltd
sub
nop
out
xlat
push
xor
dec
cmpsl
mov
repnz
and
mov
dec
movsb
dec
int
pop
mov
test
adc
xchg
mov
xchg
dec
loope
xor
out
dec
mov
push
nop
cmpsb
aas
and
sbb
in
icebp
xchg
cs
mov
ljmp
aad
cmp
lahf
stos
xchg
adc
push
add
jno
icebp
fbstp
movsb
sar
cmp
push
and
cmpsb
xlat
xor
out
mov
popf
inc
jp
cmpsl
pop
mov
mov
ret
mov
jle
mov
adc
mov
dec
mov
or
aad
in
aaa
adc
jecxz
out
mov
xorl
movsl
adc
add
arpl
add
and
inc
jno
lcall
xchg
test
sbb
pusha
adc
inc
shl
es
lret
xchg
in
lds
jns
add
adcl
jno
cwtl
imulb
mov
push
dec
or
dec
pusha
loop
mov
in
test
outsb
adc
hlt
sti
xor
fisubrs
push
test
jecxz
cwtl
or
jge
adcb
sbb
push
out
xchg
cmpsl
cmc
xor
lock
xchg
loop
std
sbb
pop
push
adc
ficomps
push
xchg
ljmp
push
xchg
into
add
pushf
mov
repnz
repnz
mov
sub
movsl
pop
cmp
or
aam
xchg
lcall
pushf
test
cltd
sub
push
rcll
jmp
pop
out
cmpsb
cmpb
sub
inc
mov
test
cli
ret
outsb
mov
lea
cmp
ficomps
mov
push
cmpsb
cmp
mov
mov
and
test
jb
bound
mov
jge
lret
jb
xor
jge
jbe
fidivl
lret
xor
xchg
ffreep
xor
xchg
cltd
imul
xor
or
lret
repz
xor
pop
sub
sbbb
mov
repz
popf
adc
jnp
inc
jecxz
ljmp
and
lret
inc
and
test
dec
mov
mov
inc
sbb
out
lret
jae
xor
jae
mov
sbb
xchg
xchg
dec
jae
cmpsl
sbb
imul
aam
xchg
xor
adc
xor
sbb
adcb
pop
lret
xor
add
xor
iret
lcall
hlt
inc
push
sbb
sahf
test
or
jg
xchg
cs
movsb
jecxz
pop
xchg
mov
sti
iret
sbb
mov
lds
cmpsb
cli
xchg
mov
jg
adcl
scas
mov
popf
push
cli
mov
insb
mov
popf
andb
imul
dec
push
outsl
mov
aam
push
push
ficoml
imul
fidivs
popa
scas
pop
mov
popf
mov
mov
movsl
jns
in
outsb
xor
pop
ljmp
push
sahf
jg
xlat
sub
imul
sbb
outsb
je
add
jnp
adc
loop
ljmp
sahf
and
sahf
push
lods
int
fsubrs
mov
sbb
mov
inc
dec
push
cwtl
and
xor
and
ja
repnz
ds
lods
add
shll
xor
sub
ljmp
pushf
dec
in
test
nop
sub
or
push
jae
xorl
push
pop
lods
rcr
iret
xor
pop
pop
and
test
mov
clc
rolb
shlb
jmp
dec
adc
xor
ret
sbb
xchg
pop
cmc
enter
pop
cmc
fs
sbb
jbe
test
jp
out
je
sub
cmpsl
pop
mov
sub
push
push
repnz
mov
jecxz
jp
jecxz
mov
mov
nop
popa
inc
cli
aas
xchg
movsb
mov
sub
push
cmpsl
or
cmp
and
xor
stos
dec
scas
loopne
xor
out
adc
add
xor
inc
cmp
sbb
jns
loop
sub
jmp
mov
fcmovne
xchg
sub
test
xor
and
sbb
and
outsb
add
mov
xchg
cmc
sbb
dec
mov
jne
xlat
xchg
dec
mov
loop
test
mov
pop
aad
mov
leave
lret
mov
fnstsw
mov
cmp
inc
test
pop
mov
lcall
mov
movsl
leave
mov
mov
sbb
enter
adc
dec
aaa
std
out
xor
dec
and
pushf
bound
bnd
mov
pop
loope
ror
pushf
out
aas
loopne
cmpsl
mov
aaa
mov
ja
shll
cmpsl
lcall
negb
mov
mov
cmp
push
mov
xchg
mov
divb
in
cmpsb
lcall
xchg
fldcw
jle
lods
insl
sub
shl
testb
jmp
and
in
mov
rclb
in
adc
jns
bound
in
in
sbb
fcoml
pop
cmp
stos
pop
shrl
mov
lods
adc
and
cwtl
test
jns
leave
cmp
and
and
cmp
push
cwtl
test
or
mov
push
jbe
mov
lret
out
pop
pop
daa
adc
lcall
out
cmpsl
lods
test
and
cli
mov
sub
adc
loope
adc
xchg
lds
and
ss
xchg
shrb
cs
dec
push
push
loope
mov
mov
sbb
xor
data16
repz
ss
and
orl
xchg
xchg
xchg
add
pusha
gs
ret
daa
dec
jecxz
movb
xchg
lret
xchg
movsl
out
clc
idiv
cltd
xchg
sbb
divl
xchg
gs
sbb
adc
sbb
sub
stos
xchg
xchg
test
mov
or
sub
flds
jmp
movsb
cmpsl
icebp
sub
jo
sbb
sub
invd
cmp
mov
mov
mov
mov
xor
mov
inc
add
int
js
mov
movsl
jecxz
xchg
cwtl
iret
xchg
sbb
jns
cltd
cmpsl
dec
mov
cmpl
push
bound
cwtl
frstor
decb
rclb
mov
mov
mov
adc
cwtl
jecxz
mov
ja
xor
ja
add
push
jmp
out
sbb
adc
inc
jge
out
and
cmp
loop
clc
jns
or
and
xchg
in
stc
into
mov
jp
icebp
lods
test
mov
mov
inc
aaa
add
lcall
mov
aaa
insl
jnp
test
int
mov
pushf
and
daa
test
lcall
adc
push
push
and
mov
jae
and
mov
pop
or
mov
rclb
push
loopne
mov
jg
jbe
jne
jecxz
imulb
mov
push
jo
and
cltd
mov
jmp
scas
andb
movsl
fisttps
and
test
mov
enter
xchg
xchg
movsb
adc
js
or
loop
popf
cltd
cmc
test
sbb
test
mov
shlb
loope
push
scas
test
nop
aam
cwtl
mov
dec
clc
lret
int3
das
jne
ja
xchg
adc
stos
cmp
xchg
jecxz
test
cmp
bound
xor
enter
push
mov
test
test
xchg
out
adc
mov
add
sub
les
push
adc
pushf
xchg
loop
mov
xorb
cmpsl
xlat
divl
pusha
test
xor
sarl
cmpsl
xor
xchg
lock
xor
mov
bound
jns
subb
addr16
jae
mov
adc
xor
sub
sbb
jns
je
stos
out
iret
mov
pop
sub
pusha
lahf
out
jns
pop
jmp
lea
xor
push
popf
js
cmc
mov
mov
and
jp
cltd
cmpsb
aaa
test
int3
stos
dec
cmp
rcrb
pop
test
xlat
cmp
mov
pushf
and
xlat
fsubs
and
inc
cmp
mov
jmp
and
sub
leave
nop
sahf
mov
fsubl
xchg
test
push
fisubl
test
or
cltd
out
cmp
push
pop
mov
sub
sub
pop
loopne
cmp
jnp
cmc
cmpsl
cmpsb
mov
insl
aaa
xchg
dec
test
cli
cmp
xchg
repnz
jecxz
out
push
popf
int
cmpsb
push
xchg
je
fildll
cmp
inc
xchg
jge
add
daa
mov
xchg
sbb
aas
mov
loope
fidivs
addr16
pushf
xchg
dec
pushl
mov
mov
push
fbld
cmp
mov
in
scas
rdmsr
mov
pushf
push
dec
lods
xchg
lods
rorl
faddp
adc
stos
scas
push
jp
xchg
icebp
std
test
pop
cmp
jb
test
jp
adc
hlt
imul
mov
dec
sub
cmp
scas
stos
push
roll
xchg
mov
pop
cmp
inc
testl
loope
cmc
cmc
aaa
sub
fists
test
jbe
jo
ret
test
jecxz
mov
mov
arpl
insb
shlb
jns
mov
sti
jge
ljmp
dec
sbb
out
sahf
jg
mov
mov
aad
aas
xor
lret
mov
cmp
mov
mov
in
cld
int
faddl
movsl
and
sti
mov
fwait
daa
std
pop
push
data16
repnz
lcall
sub
mov
jp
jp
out
pushf
add
push
popfw
jg
cmpsb
cmc
and
fstpt
and
push
inc
sub
sub
xor
sbb
add
or
mov
push
or
jb
xor
jno
jns
and
movups
les
cmpsl
scas
dec
mov
arpl
xchg
pop
mov
loopne
and
push
xchg
in
je
ret
fistps
jnp
xchg
scas
fcmovbe
add
out
cli
or
loope
dec
js
xchg
ror
data16
pop
mov
push
jnp
cmp
or
mull
dec
jnp
jge
push
mov
inc
out
jns
mov
xchg
clc
jnp
ljmp
mov
lea
xchg
pop
or
pop
insb
push
enter
test
popf
xor
stos
cmp
loope
xchg
push
push
nop
pushf
gs
bound
icebp
sub
movsl
xchg
xchg
outsb
test
in
ret
xchg
mov
rorl
sub
sub
adcl
clc
jp
clc
xchg
and
pop
jl
es
movsl
lret
hlt
mov
lret
adc
cmpb
fidivs
xchg
cs
mov
cmp
dec
pop
push
cmp
cmpsl
lahf
mov
movsb
mov
add
test
fs
mov
sbb
divb
add
inc
add
decl
fs
je
jns
insb
jns
test
inc
cld
add
pusha
or
cmpsl
xchg
aas
xchg
sbb
add
jle
sti
mov
push
scas
sbb
jp
jmp
insb
sbb
rorl
mov
add
jecxz
xchg
mov
adc
jl
pop
mov
out
mov
cltd
mov
popa
pop
inc
lods
icebp
dec
xchg
jmp
test
mov
mov
add
loopne
frstor
xor
sbb
pop
gs
outsl
jl
add
xchg
xor
lret
dec
xchg
stc
sahf
mov
mov
jecxz
popf
jge
xchg
fidivrl
cmp
pop
cltd
daa
orb
aaa
leave
mul
cltd
mov
mov
jne
cmc
inc
data16
rorl
cmp
push
jecxz
out
ja
in
xor
mov
xchg
mov
call
ljmp
adc
xchg
lds
cmp
or
cmp
xchg
sahf
cs
dec
xlat
dec
lret
stc
ret
lods
shr
hlt
and
cmp
xor
mov
movsb
and
mov
subl
push
add
dec
cmp
cltd
xchg
std
fstpt
jmp
imul
cmpsl
push
das
sub
shrl
mov
lock
xor
xchg
rcll
mov
daa
mov
cmp
lcall
xchg
and
mov
mov
xor
xorb
in
popa
loop
movb
add
pushf
xchg
dec
sub
sub
addr16
cmpsb
and
xchg
dec
inc
call
mov
movl
mov
jae
or
or
xchg
cli
adcl
dec
and
repnz
cmpb
lds
fcomip
cmp
xchg
jg
int
xchg
xchg
mov
push
cmp
sbb
dec
fdivs
dec
andb
xchg
pop
les
cmp
adc
movsb
sti
sbb
lea
sub
icebp
les
mov
xchg
xor
push
cmp
aad
enter
fcmovnu
out
cmp
mov
stc
std
addr16
je
xor
rcll
faddl
lock
mov
jnp
out
aad
sub
loop
cmpsb
push
jp
pop
push
mov
mov
negb
and
jbe
dec
cmp
cmp
xchg
jg
cltd
sub
shrl
bound
mov
rol
xor
int3
out
cmpsl
mov
mov
out
mov
loope
cmpsb
shll
popa
test
mov
jl
cwtl
mov
xchg
dec
jbe
int
mov
mov
test
adc
jae
or
pushf
cmp
aas
adc
pop
cltd
jecxz
test
sub
clc
fnstenv
cmpsl
dec
nop
pop
mov
sub
xchg
mov
cmp
xor
lea
dec
pushf
add
hlt
test
sub
imul
inc
or
sahf
cmp
mov
iret
cwtl
or
mov
leave
push
mov
pop
inc
fnstenv
jmp
xchg
xchg
jb
jnp
mov
das
add
add
jb
out
mov
mov
push
pop
mov
hlt
mov
loopne
mov
sti
xchg
pop
push
addl
mov
imull
ds
lret
mov
iret
cmpsl
xor
data16
jbe
jecxz
lods
lret
fbld
cmpsb
fnsave
xchg
jmp
push
xchg
in
jbe
mov
imul
pop
jne
in
cs
mov
add
fwait
or
inc
xor
out
sbb
cmc
push
cmc
cmp
ds
inc
loope
repz
stos
cmp
xchg
xor
std
xchg
push
push
xor
popa
fstl
mov
fnstcw
mov
mov
mov
ficoms
cli
lret
jae
lock
ja
pop
sub
loop
jg
adc
xor
fsubrp
push
push
imul
imul
add
inc
pop
sub
shlb
cmp
sti
inc
das
mov
out
test
dec
fbld
mov
aas
loopne
xor
inc
dec
mov
push
jno
aas
mov
scas
das
lcall
add
mov
mov
ljmp
dec
imul
pop
mov
neg
lahf
xchg
adc
repnz
sbb
cmpsb
daa
mov
aas
xchg
xchg
cmpsb
out
xchg
inc
pop
mov
lods
cltd
aaa
call
or
jecxz
mov
enter
mov
dec
inc
lret
push
aas
adc
mull
cmpsb
add
loope
jmp
xchg
pop
jp
rcrl
lret
loopne
mov
and
dec
bound
jmp
lds
adc
and
sub
fsubl
cwtl
bound
lea
pop
pop
pop
cmp
add
aam
mov
pusha
cltd
xchg
cmpsl
xchg
mov
dec
mov
lret
in
mov
dec
into
imul
test
and
out
mov
gs
test
stos
aad
mov
inc
cmp
xchg
out
stos
roll
imul
es
inc
sub
add
pusha
hlt
sbb
push
pop
lds
pop
movsb
cltd
and
into
and
lds
out
pop
stos
push
lods
test
cli
cmpsb
add
int3
jmp
icebp
and
sub
ss
mov
scas
xor
movsb
inc
jbe
pop
loope
push
lahf
mov
shlb
xchg
jne
and
adc
mov
rcll
mov
daa
cmp
into
ss
jns
pop
in
push
gs
sbb
dec
aaa
jmp
jne
out
jl
pop
sub
rclb
fistl
dec
cltd
scas
xchg
push
mov
mov
inc
xchg
popa
lods
aaa
xchg
cmpsl
pop
das
enter
inc
adc
mov
dec
xchg
imul
in
lcall
jle
push
cltd
movsl
pop
out
pop
xchg
jmp
aas
out
xchg
sub
jl
fdivrs
es
enter
aaa
pop
iret
lods
dec
mov
stc
into
out
les
jnp
xchg
ss
sbb
jne
adc
inc
jns
xchg
mov
cmp
mov
aaa
and
jmp
aam
aam
mov
loope
push
aaa
push
xor
xchg
cltd
lock
push
cmc
in
out
xchg
sub
jecxz
pop
mov
mov
ret
pop
xchg
cmpsb
xchg
dec
xchg
xor
movsl
cltd
xchg
mov
shrb
je
xchg
pop
pop
xor
cmp
insb
cmc
xchg
xchg
jg
les
mov
popf
imul
inc
adc
aam
mov
xchg
xlat
dec
sub
jmp
adc
sub
xor
fsubs
inc
sbb
mov
jb
push
push
adc
xchg
daa
cmc
adc
popa
jo
push
fincstp
fucomip
scas
daa
lcall
mov
push
popf
jl
je
cmp
ljmp
sub
push
out
mov
or
jl
mov
pushf
repz
mov
cmp
cmp
xchg
testl
mov
sub
push
mov
lods
in
ret
cmpsb
cmpsb
sbb
xchg
out
sbb
pop
loop
ds
sub
lods
insl
rol
mov
push
fbstp
mov
bound
mov
adc
cmpsb
mov
mov
push
and
jb
push
cmpsb
dec
cmp
movsl
je
mov
addr16
jo
adc
mov
xchg
imul
mov
xchg
aam
ljmp
fnstcw
sub
xchg
mov
mov
test
sbb
sbb
mov
lods
ret
inc
jmp
cmp
push
cmpsl
mov
inc
loopne
jnp
test
pop
dec
dec
sub
sub
jns
ja
mov
dec
jbe
sbb
test
cmc
int3
cmp
rcrb
sub
and
popa
xchg
adc
loope
into
push
fs
xchg
sbb
xor
sub
mov
cmpsl
inc
adc
divl
loop
testb
es
xchg
jbe
sbb
and
inc
sub
xchg
loope
sahf
push
fcompl
xchg
cmp
mov
mov
daa
imul
sbb
mulb
mov
mov
xor
mov
jno
test
cmp
jg
icebp
jmp
inc
add
xchg
xchg
jge
inc
push
iret
pop
push
or
push
popf
sub
arpl
out
lods
xchg
jp
ffreep
arpl
mov
sbb
pushf
jmp
jp
fists
scas
and
adc
out
in
mov
cmc
imul
xor
mov
sbb
mov
mov
push
mov
mov
pushf
mov
and
mov
push
in
loop
in
enter
mov
cmp
or
mov
xor
mov
xorb
mov
aaa
cmpsl
mov
dec
cmpsl
out
adcb
mov
inc
test
sbb
mov
pop
imul
push
or
jecxz
lods
test
nop
sub
cmpsl
es
lods
std
cmpsb
addr16
dec
call
clc
iret
ljmp
and
sti
xchg
xchg
repnz
insb
cmpsl
loop
fsub
mov
dec
push
adc
cmpsl
xchg
jg
lods
xor
xchg
mov
mov
dec
test
lcall
loopne
sti
arpl
stc
or
mov
jg
xor
test
lahf
jns
lods
xor
ss
mov
xchg
add
mov
ds
cmpsb
cmp
ss
mov
in
test
push
adc
add
cmpsb
cltd
fwait
inc
cmpsb
mov
cmpsl
xchg
out
add
ds
lods
mov
lods
adc
xlat
push
mov
sbb
mov
out
push
clc
dec
scas
cmp
gs
scas
and
cmc
repnz
sbb
push
push
adc
push
scas
arpl
movsl
add
dec
xchg
std
das
mov
mov
xchg
pop
push
scas
andl
scas
movsl
pop
push
mov
movsl
mov
xchg
and
or
scas
movsl
pop
imull
xchg
xchg
xchg
pop
or
xor
xchg
dec
loope
cmp
daa
bound
lcall
mulb
jg
fldt
pop
jb
xchg
mov
xlat
jns
mov
inc
or
fisubs
in
cmpsl
ret
mov
test
lods
cmp
rorb
lods
push
add
out
int3
ret
xor
and
fs
sbb
cmp
imul
jno
int
push
xchg
adc
lods
lcall
xchg
lods
mov
fisubl
std
test
sub
mov
push
push
mov
fcoms
sarb
in
nop
xchg
pop
mov
dec
lcall
xchg
scas
sub
popa
push
mov
mov
mov
mov
inc
out
add
cmpsb
jecxz
dec
divl
cmp
jecxz
out
cmovl
mov
cmpsb
dec
mov
push
jp
mov
dec
cmpsl
rorl
pop
sahf
cmpsb
cmp
mov
es
imul
mov
dec
sbb
or
cmp
data16
iret
sub
lods
daa
out
int
ret
cmp
ret
aas
data16
mov
mov
and
mov
lea
mov
es
mov
cmp
ja
out
aas
shl
sub
cltd
test
xchg
out
out
dec
add
ljmp
dec
addr16
stos
loop
add
jmp
out
xchg
sbb
cmpsl
xchg
cmc
jae
mov
popa
ds
pop
aad
dec
mov
dec
repnz
fdivrl
mov
or
pop
movsl
xor
cmpsl
sub
cmpsl
pop
lods
or
ret
xlat
xchg
pop
cmpsl
cmp
lahf
jp
cs
gs
ljmp
add
xchg
and
cli
mov
pop
adc
data16
add
fistl
cmp
pusha
into
sbb
scas
bound
outsb
jns
call
das
leave
aad
sub
push
test
test
call
and
push
fadds
je
cmpsb
aam
aad
nop
cmp
mov
shrb
lcall
push
mov
cmp
xchg
mov
sub
cmpsl
pop
test
mov
ljmp
sub
cmpsl
call
andb
xor
lcall
adc
hlt
leave
lds
out
push
std
jp
cmpsl
mov
scas
stc
jecxz
iret
push
xchg
nop
jmp
jns
enter
out
mov
lcall
lods
and
cmp
outsb
jg
imul
and
mov
das
aam
fmuls
mov
fs
sbb
pop
lahf
pop
cli
dec
lret
sub
fcoms
nop
fildll
ljmpw
xor
loop
loope
pop
mov
jns
cmp
inc
into
fdivr
jbe
or
mov
cmpsl
fsubl
inc
divl
aad
mov
jns
bound
pop
mov
xchg
or
mov
push
mov
mov
insl
xor
loopne
jmp
mov
repz
movsl
mov
sbb
mov
push
fldcw
dec
xchg
hlt
test
int3
mov
icebp
push
leave
xorb
dec
add
es
dec
test
xor
xchg
mov
jb
test
dec
inc
std
add
repz
or
push
hlt
test
xchg
mov
sub
push
dec
cmpsl
fisubrl
sarl
jnp
or
cmp
xchg
jecxz
xor
add
iret
fwait
cltd
jns
or
aas
outsb
loop
nop
mov
lret
hlt
test
lcall
cs
clc
je
fst
mov
jp
ret
adc
mov
jg
push
sub
je
cmp
mov
mov
iret
push
xor
js
shl
push
pop
mov
scas
mov
mov
scas
sarl
movsb
vcvtps2ph
inc
or
mov
stc
cmp
or
mov
adc
jecxz
inc
push
and
sub
ja
popf
cmp
out
sub
lods
ljmp
test
clc
cmpsl
push
cmp
push
dec
cmp
jmp
in
xchg
xchg
in
push
pusha
inc
ljmp
ss
inc
shlb
and
lods
jp
cmp
cmpsb
dec
mov
js
lods
xchg
pop
out
scas
out
mov
lea
fists
jg
cmpsl
sub
arpl
roll
cmpsb
adc
nop
mov
fwait
cmp
nop
mov
out
leave
js
jp
bound
mov
mov
push
xor
cmp
repnz
mov
xchg
lock
mov
pushf
insb
rcrl
clc
mov
addr16
jmp
mov
xchg
inc
push
cltd
ret
lcall
les
add
sbbb
xor
mov
cmp
push
aad
mov
xchg
faddl
rcrb
sub
pop
lcall
nop
popf
mov
jp
bound
sub
fsubl
inc
xor
or
out
xorl
sub
jno
movb
cmpsb
lods
popf
jns
pusha
dec
mov
loope,pt
pop
mov
jp
aas
ds
in
jecxz
loope
and
aad
sub
testb
mov
jmp
push
add
lahf
ds
sahf
mov
iret
fsts
sub
mov
jo
cmpsl
sub
jmp
sahf
scas
dec
mov
lahf
outsl
inc
pop
mov
adcl
mov
push
cmpsl
test
ljmp
adc
push
mov
fcoms
pushf
inc
mov
cmp
push
fisubrl
mov
xor
sub
aam
fadd
popf
out
test
push
icebp
mov
cltd
lahf
ljmp
mov
jae
mov
or
push
sub
lods
cmp
insb
mov
mov
loop
push
jb
jecxz
xchg
xchg
ds
in
test
or
jecxz
xchg
cmp
pop
dec
xor
mov
lods
sub
add
lret
sbb
dec
mov
gs
dec
pop
jne
cmp
mov
cs
sub
xlat
leave
fs
sahf
cmpl
sub
pop
mov
jge
mov
cmpsb
pushf
scas
sbb
jb
dec
test
pusha
sbb
xchg
xchg
push
es
adc
jl
push
jbe
imul
mov
jmp
cmpsl
mov
js
mov
sub
adc
mov
jge
jmp
mov
jae
dec
std
bound
leave
push
and
dec
ljmp
leave
jp
movsb
jecxz
test
jno
xor
fs
xor
enter
movsb
loope
jmp
cmpsb
lret
sub
call
xchg
out
cs
test
shrb
sub
jp
pop
popa
je
data16
xor
int3
mov
jns
pop
jae
mov
dec
cmpsl
idivl
mov
in
pop
and
jb
mov
test
bound
std
jae
pop
rorb
popa
dec
xor
jle
data16
test
fs
push
add
cltd
jbe
and
mov
imul
shlb
xor
mov
mov
mov
xchg
adc
jmp
mov
mov
imull
dec
xchg
lods
int3
ja
xor
jnp
xorl
cli
xchg
cld
lods
jmp
sbb
imul
out
xchg
in
mov
leave
cmpsl
mov
mov
mov
jno
cmp
push
inc
inc
movsb
dec
xchg
incl
arpl
ja
xchg
into
sbb
negl
aas
movsl
adc
dec
mov
insl
and
in
addr16
or
xchg
lods
lods
mov
int3
cmova
sbb
lret
lahf
sub
pop
into
and
mov
cli
out
shlb
aam
sub
jg
data16
xchg
sbb
pop
and
punpckhwd
sub
push
sub
test
push
xlat
add
int3
push
sbb
sahf
push
or
mov
xchg
add
test
cmpsl
pop
mov
add
dec
imul
inc
mov
mov
pop
test
out
push
sti
mov
push
jnp
cmp
xchg
cli
mov
rcl
mov
movsl
leave
and
enter
add
cld
inc
jns
mov
arpl
loopne
sub
sti
or
sbb
jne
sub
out
mov
out
jae
cmp
xchg
loope
and
jne
push
lods
cmpsb
imul
mov
mov
in
arpl
in
lret
shlb
push
stos
aad
mov
cmp
sbb
cmp
clc
add
add
cwtl
aas
lcall
enter
mov
mov
add
cmpsb
test
push
out
cmc
js
mov
out
iret
mov
mov
iret
jecxz
xchg
ret
scas
test
add
mov
into
mov
sarl
imul
andl
out
test
jle
mov
popa
xor
out
pop
and
mov
in
sub
xor
sahf
lcall
lahf
pop
repz
movsl
cmpsb
and
loope
mov
rol
ret
test
sti
test
and
test
movsl
test
cmp
mov
cmpsb
leave
imul
call
ftst
imul
scas
lods
pop
mov
rcll
or
test
mov
xor
pusha
sbb
icebp
movsb
pop
jns
mov
lods
mov
lds
pusha
inc
jns
insl
imul
jnp
mov
movsl
push
dec
push
cmp
pop
mov
mov
popa
mov
pop
into
ss
pop
in
es
jg
or
cwtl
enter
mov
sub
xor
pop
ret
mov
out
lret
adc
mov
cmp
add
xor
xchg
xor
xorl
mov
or
cmp
mov
fcmovne
mov
stc
mov
stos
pusha
cltd
sti
xchg
ss
push
push
pop
sub
repnz
enter
sbb
out
or
xchg
push
add
cmc
stos
pop
cmpsl
sub
movsb
jbe
shlb
push
leave
lcall
out
pop
jns
fstpt
test
bound
mov
jmp
mov
push
xor
js
ljmp
imul
aas
or
sub
lea
scas
push
cli
cld
ds
test
push
aaa
add
xchg
in
ror
xor
jbe
mov
js
mov
addr16
sbb
pop
lods
ret
or
hlt
ret
pop
je
scas
imul
or
push
addl
xchg
insb
dec
and
xchg
rolb
aam
adc
xchg
sbb
push
rorb
add
out
jecxz
jg
xor
cli
mov
jl
or
jmp
and
push
jecxz
int3
inc
clc
mov
out
and
mov
lahf
popf
xor
jnp
or
ja
inc
mov
dec
push
jp
mov
mov
movl
fimuls
enter
sbb
jecxz
cmp
mov
addr16
pop
mov
lcall
xchg
xchg
cwtl
repz
sub
ss
test
flds
pusha
test
push
test
or
or
push
sub
sub
or
mov
into
adc
sbb
and
ja
mov
xor
cmpsl
pusha
adc
loopne
add
push
cmpsl
enter
lods
fs
ret
es
mov
addr16
mov
decb
mov
out
jle
xor
sub
inc
jmp
cmpsl
mov
mov
xorl
mov
xor
pop
xor
push
ret
vcvtpd2dqx
fwait
mov
ret
jns
xor
addr16
frstor
mov
mov
push
jmp
pop
mov
push
mov
push
mov
xchg
clc
addr16
in
ret
movsb
jns
adc
jno
jno
jle
or
cltd
mov
sub
sub
sub
cmp
stos
cli
jle
xchg
mov
jnp
call
mov
jp
cmp
and
and
icebp
mov
aas
pop
mov
adc
lret
das
into
mov
aad
xor
imul
movsl
cmpsl
sub
and
mov
leave
dec
mov
mov
lret
jl
sub
lea
xchg
inc
jle
xchg
fdivl
adc
insb
notl
dec
in
enter
movsl
mov
daa
jo
test
dec
mov
out
rol
cmpsl
push
repz
jl
scas
enter
test
pop
cmp
pop
aaa
mov
jmp
push
pusha
out
jl
mov
cmpsl
and
mov
push
stos
rep
divb
fstpl
xor
fadds
mov
lods
cmpsb
insl
mov
jbe
mov
mov
mov
dec
mov
push
aas
or
xchg
or
lret
pusha
xor
stc
push
mov
sub
push
sub
fwait
daa
stos
std
cmpsl
sbb
dec
mov
dec
and
add
insb
and
fistps
test
cld
cli
dec
push
imul
dec
push
fimull
dec
and
cmpsl
hlt
mov
stc
mov
and
jmp
fistl
mov
mov
push
sbb
mov
shrl
add
jne
lret
notl
mov
sub
lods
das
or
mov
out
and
xor
cmp
imul
mov
jo
push
cli
fstpt
jmp
jle
scas
push
dec
or
repnz
jecxz
pop
enter
or
out
adc
icebp
rcrl
cmpsl
ja
and
out
call
pop
mov
cmp
lret
xchg
xchg
aad
popf
mov
xchg
push
push
inc
push
pop
xlat
shrl
add
or
xor
mov
lea
jmp
xor
push
mov
gs
push
ljmp
call
xchg
mov
movsl
sub
fbld
leave
mov
mov
xor
mov
mov
push
imul
mov
ljmp
rorb
cmp
fs
test
push
mov
mov
xchg
mov
rol
loope
stos
dec
imul
dec
push
xor
int
jle
shlb
sbb
out
pusha
aam
movsb
push
jne
pop
mov
mov
iret
dec
aad
test
jmp
and
scas
mov
sub
mov
or
loop
jle
mov
outsl
imul
jmp
es
test
ret
xchg
call
add
push
jae
cltd
imul
mull
sub
test
fs
stc
mov
mov
pop
ljmp
stc
adc
cmp
mov
xlat
lret
insb
clc
adc
mov
mov
cmpsl
loope
ret
mov
mov
and
dec
cmp
lea
push
mov
push
ret
repnz
pop
add
push
and
flds
sub
mov
sar
mov
je
and
gs
pusha
scas
xchg
or
jbe
mov
int3
sub
jbe
aad
pop
push
fsubrs
and
xorb
lods
mov
test
addr16
mov
das
jl
scas
lcall
out
ja
pop
movsb
ss
sub
mov
stc
inc
out
dec
cltd
fwait
pusha
out
stc
stos
mov
adc
mov
cli
es
cmp
mov
dec
int3
sar
in
mov
push
js
mov
dec
pop
jnp
jp
inc
mov
mov
pusha
mov
enter
notl
xchg
cltd
and
mov
jne
jmp
cmp
push
stos
js
and
gs
lcall
idiv
movsl
movsb
or
addr16
sub
jmp
pop
push
inc
mov
out
int3
push
mov
es
or
ss
cltd
fbstp
fidivrs
pop
mov
xchg
jmp
lret
cwtl
cmpsw
add
jecxz
or
loop
xchg
ljmp
cmp
mov
mov
loop
inc
xchg
push
mov
adc
or
sub
xchg
pop
lods
mov
jnp
int
push
loope
lods
and
cmp
repnz
fstpt
jbe
lods
cmpsl
cmpsb
in
mov
mov
and
lds
cmpsl
mov
fisttpl
into
or
enter
xchg
shr
inc
jg
or
repz
stos
mov
mov
movsl
sub
jmp
pop
in
movsb
xchg
jns
addr16
jp
cld
imul
and
lds
lea
pop
popf
mov
ss
clc
or
pop
cmp
cmp
out
cmpsl
xchg
arpl
and
mov
mov
nop
sub
mov
jmp
imul
xor
sbb
mov
addr16
nop
sbb
sbb
mov
cmpsb
mov
fmull
sub
and
insl
ror
sbb
push
inc
mov
cmp
sbb
std
mov
dec
out
inc
cltd
stc
push
inc
push
sub
sub
cmp
or
and
mov
aas
jecxz
iret
in
and
stc
push
cmpsb
adc
mov
sub
in
mov
lock
inc
jmp
mov
mov
xchg
shrb
test
mov
inc
test
in
pop
sahf
mov
mov
cmpsb
fdivr
aaa
lcall
xchg
pop
fdivs
adc
pop
jl
stos
inc
mov
popa
mov
mov
cwtl
jecxz
mov
inc
sbb
movsb
or
lret
div
scas
out
jge
mov
and
enter
xor
in
xchg
xchg
and
call
cmpsl
sub
roll
scas
ja
imul
pop
stos
inc
sub
aam
sub
sub
mov
xchg
inc
shrb
cmp
push
sbb
adc
and
je
test
clc
loop
jae
in
je
sbb
popf
movsb
jnp
mov
mov
ljmp
shlb
add
pushf
sub
outsl
add
daa
and
movsl
movq
and
dec
sub
imul
jp
cld
movsl
test
mov
popf
jg
call
sbb
test
push
push
leave
dec
sbbl
scas
es
mov
ja
fldt
mov
jae
mov
lds
adc
and
and
cmp
loope
mov
std
sub
pop
cmp
fidivrl
and
jl
cmp
mov
jecxz
or
inc
adc
add
mov
fisubs
jae
lods
shll
push
mov
and
stc
jbe
jae
pop
in
sbb
inc
mov
sub
mov
ret
mov
fwait
jle
push
je
mov
fdiv
mov
sbb
mov
js
in
stc
stc
jnp
mov
cmp
push
sti
imul
aam
lcall
add
inc
jge
repz
fldenv
fistpl
movsl
mov
ds
cmpsl
or
add
sub
leave
daa
mov
lahf
cmpsl
adc
mov
jo
xor
lea
or
push
fs
mov
imul
cld
or
push
adc
dec
fldenv
insb
mov
mov
mov
mov
xchg
and
fs
imul
xchg
std
popa
mov
shrl
inc
or
repz
xor
andl
mov
enter
xchg
rclb
test
aad
pop
mov
test
fisttpl
jns
pusha
mov
jns
pop
movsl
mov
inc
cmpsb
stos
sbb
push
popf
outsb
aam
dec
lds
mov
mov
dec
sbb
cmc
push
cmpsb
icebp
mov
repz
sub
pusha
pop
leave
shrd
int
lret
xor
or
pop
test
movsl
pop
dec
sahf
rcl
cmpsl
cwtl
sub
jecxz
mov
dec
jmp
bnd
adc
test
movsl
mov
xchg
mov
add
mov
cltd
lret
push
mov
push
fsubrs
daa
imul
jmp
cmpsb
xchg
mov
push
shrb
add
adc
mov
pop
sbb
mov
les
loope
and
xor
xchg
test
stos
mov
adc
mov
ficomps
lea
mov
icebp
mov
in
data16
push
sub
leave
inc
repz
xchg
push
xor
mov
mov
aam
adc
pop
mov
mov
adc
and
sub
orl
lds
shll
xchg
stos
jl
mov
mov
jmp
push
out
rolb
and
aad
push
sbb
bound
js
xchg
test
jle
cmpsl
daa
ret
mov
xchg
jl
daa
into
mov
testl
mov
int3
mov
into
outsb
mov
fucomp
loop
test
lcall
out
out
leave
lods
loopne
les
pop
cmpsl
lahf
std
mov
or
mov
xchg
xor
ret
xchg
mov
sub
or
popa
mov
addr16
data16
cs
loope
enter
sub
imul
dec
mov
jbe
popf
dec
test
lret
aad
call
cld
mov
jp
mov
loop
js
mov
enter
jl
push
out
fistpl
pop
aad
dec
imul
mov
jl
mov
and
pusha
lock
in
dec
sub
cmpsl
enter
cmpsb
ljmp
into
xor
icebp
sbb
testl
cmp
jl
rcrl
fcomps
dec
jne
imul
test
sbb
cmpsb
and
fmull
pop
lcall
nop
enter
xor
enter
adc
fmul
dec
test
aas
hlt
inc
cmpsb
add
adc
icebp
in
and
idiv
mov
adc
sti
mov
mov
cmpsl
cmp
lods
push
mov
dec
and
fwait
adc
xchg
xor
lcall
lods
mov
mov
xor
mov
les
jne
cs
or
jae
ja
adc
xchg
imull
sub
repz
test
and
mov
sarb
pushf
daa
push
icebp
cs
fmuls
jns
lret
jl
or
mov
mov
mov
test
rorl
movsl
jmp
stos
mov
arpl
mov
daa
adc
iret
cmpsb
rolb
jecxz
test
xchg
movsl
cwtl
test
call
inc
out
test
repnz
test
sbb
cmp
out
in
mov
fldt
scas
pop
xchg
mov
lods
lret
xor
push
lods
jns
xchg
test
icebp
jno
cmpsl
test
call
pavgb
out
lret
mov
xlat
or
cmp
sbbl
movsl
in
push
repz
cmpsb
or
pop
jb
lods
movb
add
aaa
icebp
test
loop
and
cs
cmpsl
push
xlat
xchg
cmp
pop
sub
jne
clc
xchg
xchg
push
pop
cltd
mov
iret
xchg
test
adc
dec
mov
cmp
or
mov
sbb
sub
dec
xor
lcall
add
lods
mov
movsb
fildl
mov
test
cmp
and
mov
aad
push
pop
ja
cmp
in
lcall
lret
lcall
popf
gs
and
outsl
cmp
sub
in
mov
cmp
xchg
rolb
pushf
mov
adc
jns
dec
cmpsb
jo
pop
jmp
sub
jns
mov
orb
sbb
mov
insl
aad
pop
fldenv
mov
cld
and
leave
jmp
ljmp
pop
ret
hlt
and
ja
lret
rorl
adc
test
fcomp
into
inc
movsb
mov
pop
cli
mov
stc
and
sbb
push
jo
mov
inc
cmp
xchg
xorps
jg
hlt
out
je
pusha
lcall
adc
out
in
idivb
mov
scas
test
push
mov
lret
bound
mov
outsb
outsl
out
jg
adc
popf
stos
mov
and
or
jae
jge
leave
jl
pop
test
frstor
cld
in
enter
jecxz
in
add
xor
addr16
xchg
fnstenv
cmpsb
neg
cmp
push
jnp
mov
fldenv
negl
jno
push
int
ss
and
enter
and
ss
sbb
push
inc
mov
pusha
fistpll
pop
dec
ja
pop
jmp
pop
std
ret
insb
push
cmp
imul
test
inc
cli
push
jns,pn
test
stos
and
es
sbb
lahf
push
push
sti
ret
adc
xchg
mov
and
mov
out
mov
and
stos
or
lds
cmp
in
and
gs
push
sbb
jle
jecxz
add
mov
ljmp
movsl
inc
mov
sub
leave
ror
jecxz
pusha
aam
lret
fcmovnbe
lea
push
xchg
dec
sub
cmp
ss
in
aaa
data16
repz
jge
int3
mov
das
mov
pop
cmp
jl
cld
sbb
clc
gs
jle
es
test
aad
jae
loopne
es
mov
mov
mov
add
ss
jg
rcr
imul
xchg
cmp
push
pop
mov
mov
inc
xor
sub
sbb
and
shrb
scas
xor
jmp
adc
lds
test
sbb
jae
mul
and
orl
dec
jecxz
negl
lahf
ret
jo
scas
sbb
xchg
adc
jg
lock
cltd
into
imul
jne
push
xor
lods
xchg
ret
mov
push
btc
cmp
dec
aad
cmpl
pop
fisttpll
lea
mov
fimuls
test
xor
fnsave
sub
inc
pop
lret
clc
dec
mov
lret
pop
pop
push
mov
and
cmpsl
jmp
faddl
hlt
mov
ret
aaa
test
cmpsb
jmp
push
dec
xchg
push
shr
popa
call
cmpsb
sbb
or
leave
mov
xchg
jb
and
pop
push
out
cmp
sbb
mov
dec
mov
sub
xchg
dec
ret
mov
cmpsl
push
and
mov
sbb
icebp
lcall
and
lea
repnz
cltd
cmpsl
les
pushf
dec
jns
insl
pop
movsl
rclb
jmp
jne
cwtl
movsl
in
mov
cmp
push
fcompl
roll
mov
mov
jl
mov
cli
cmp
mov
bound
xor
cmpsb
test
lea
int3
mov
in
pushf
mov
ljmp
mov
mov
mov
inc
jl
dec
movsb
arpl
and
ljmp
callw
mov
sbb
mov
cmpsl
pop
mov
mov
and
push
movsl
jge
inc
cmp
cli
mov
cmp
jmp
addr16
inc
add
mov
inc
movsl
xchg
push
mov
inc
mov
mov
data16
loopne
xchg
mov
imul
xchg
mov
pop
enter
sti
outsb
ret
sub
popa
jmp
aad
push
sub
push
pushf
popa
mov
xchg
and
hlt
mov
mov
and
and
cmpsl
mov
out
cmp
sub
xchg
mov
int3
dec
dec
cmpsl
mov
mov
dec
cmp
lcall
scas
xor
movsb
sub
mov
mov
xchg
or
cmp
xchg
push
push
inc
test
shrl
movsb
neg
fcoml
dec
cmp
mov
push
cmp
mov
out
inc
add
test
xchg
sti
mul
in
sub
cmpsb
mov
push
ja
adc
dec
mov
and
and
ss
jnp
jp
ljmp
xchg
jl
mov
arpl
mov
cwtl
daa
jbe
mov
cmp
dec
jmp
mov
xchg
les
cmp
jmp
idivl
rolb
sar
push
dec
dec
cmp
push
adc
mov
pop
cli
jb
mov
iret
negb
and
sub
sbb
cmp
cmpsb
sbb
adc
sbb
movsb
iret
xchg
in
stc
cmp
out
pop
rolb
cmc
or
or
lret
loop
fcomp
jge
cld
repz
loopne
test
lret
lcall
orb
xchg
cmp
aaa
movsb
leave
clc
cmpsl
push
or
xchg
stc
xor
mov
push
lods
dec
out
loopne
or
sub
xchg
iret
and
lcall
enter
lret
hlt
loopne
loope
stos
cmpsl
mov
pop
call
into
pushf
movsb
es
mov
mov
xchg
jle
scas
xor
pop
cmp
test
cmpsb
js
in
int
jle,pn
stos
mov
mov
mov
and
mov
movsb
mov
loop
mov
mov
adc
call
xor
mov
gs
cmpsl
push
sarl
divl
arpl
mov
imul
mov
aas
adc
mov
cmp
pop
push
sub
addr16
pop
mov
iret
pop
test
shll
sbb
inc
pop
mov
ss
pusha
hlt
scas
mov
pop
mov
mov
test
pushl
ja
stc
and
jg
mov
sub
enter
call
dec
fisttpl
test
mov
mov
push
call
stos
dec
test
popf
mov
mov
inc
insb
daa
dec
lret
mov
xor
cmp
and
cli
cmp
mov
or
and
mov
and
adc
idivl
das
mov
popf
aad
pop
subl
bound
js
out
arpl
std
leave
js
je
xchg
xlat
aas
inc
lcall
sbb
and
rorl
gs
pop
jl
xlat
leave
movsl
jg
mov
mov
mov
mov
and
mov
scas
xor
sub
inc
iret
sub
mov
jecxz
idivl
mov
mov
insb
cs
jbe
mov
mov
cmp
add
cmp
jl
inc
lcall
das
repnz
push
in
xlat
std
lock
mov
scas
mov
mov
mov
ss
ljmp
pop
cmp
call
inc
or
or
repnz
mov
popf
xchg
lods
or
nop
pop
cmpb
jo
movsb
pop
scas
pop
lods
jp
cmp
sti
jo
mov
outsl
push
mov
mull
xor
xchg
bound
cmc
clc
jg
mov
ja
mov
mov
and
jecxz
mov
xchg
inc
movsb
mov
mov
cmc
mov
and
ret
in
es
xchg
xchg
xchg
sbb
ficoms
fdivrl
pop
mov
or
mov
fsub
dec
mov
fildl
sahf
out
sub
inc
jbe
mov
sbb
mov
jecxz
mov
xchg
push
xor
mov
push
aaa
mov
mov
test
pop
mov
xchg
fsubrs
push
mov
sub
cmp
mov
or
mov
jno
sub
js
js
repnz
pop
xor
sub
mov
loope
ss
jecxz
fcmovnu
lret
flds
stos
pop
scas
xchg
ljmp
or
add
and
push
cs
xchg
mov
mov
mov
pusha
xor
lahf
jl
pop
sub
mov
sub
add
aas
ss
fucompp
inc
mov
push
stos
mov
sbb
cmp
pushl
out
xor
mov
and
ds
sub
add
and
xor
xlat
enter
lds
fidivrl
enter
mov
inc
mov
and
sahf
lock
and
dec
sbb
mov
dec
imul
xchg
sub
push
mov
test
cltd
xchg
adc
sbb
aas
xchg
lret
mov
sub
in
cmpsl
push
and
add
mov
jmp
sbb
jecxz
insl
arpl
sub
mov
dec
roll
xchg
sub
jo
cli
imul
inc
jmp
jmp
ror
cmp
je
hlt
filds
and
xlat
fildll
enter
pop
jmp
mov
sti
stos
push
xchg
mov
push
shrb
leave
mov
add
into
loope
mov
cmp
lock
push
test
outsl
repnz
shll
sub
xor
cmp
aam
and
cmp
push
ss
imul
mov
or
stc
and
aas
cmp
popa
jl
lret
mov
sbb
jle
mov
or
inc
inc
andl
and
je
sub
mov
icebp
mov
lds
lea
mov
xor
ljmp
mov
xor
mov
sbb
enter
mov
outsl
push
imul
mov
sahf
ret
cmpsl
jne
mov
mov
mov
jl
jne
ret
mov
inc
jg
sub
sub
or
iret
and
pop
sub
mov
mov
shll
mov
or
mov
imul
mov
loop
movsb
jo
dec
push
out
hlt
adc
rcll
mov
call
sub
sarl
leave
repz
sub
add
sbb
test
add
std
cmc
movsb
and
sbb
and
add
movsb
mov
lret
in
js
jb
xor
adc
inc
loop
outsb
jb
or
out
leave
ljmp
sarl
add
cli
addl
int
lahf
bound
inc
lahf
addb
mov
pop
dec
jbe
stos
cltd
jne
fwait
mov
push
and
aaa
mov
mov
aas
das
adc
shll
jl
mov
cmpsl
movsb
fmuls
bound
and
fwait
dec
test
xor
fsubr
fs
mov
pusha
sti
lahf
pop
cld
nop
cmp
addb
test
mov
jnp
xchg
mov
icebp
jns
xor
inc
ja
mov
xor
mov
sarl
fisttps
or
pop
nop
pop
adc
mov
sbb
xor
jbe
cmpsl
loope
inc
xor
sbb
leave
test
or
lea
insl
xchg
push
xchg
jbe
mov
test
add
mov
sub
adc
xchg
pusha
pop
sub
sbb
adc
fmuls
jp
decb
xor
jbe
fcmovnbe
mul
sti
push
sbb
std
in
adc
leave
fwait
push
mov
lds
sub
mov
mov
ja
pop
push
jb
mov
and
cmpsb
push
test
lds
mov
push
xchg
mov
decl
mov
stos
push
into
sub
pop
nop
es
mov
mov
mov
xchg
imul
es
mov
rol
mov
movsw
idiv
andl
mov
mov
xchg
push
data16
imul
mov
add
xchg
ss
sbb
movsb
leave
repnz
mov
sbb
mov
add
inc
lods
xchg
jge
repnz
inc
or
cmpsl
xchg
sbb
cmp
push
cli
xor
sbb
and
lahf
dec
cli
test
shr
out
inc
ljmp
ror
out
fisubrl
push
xor
test
pop
imul
sti
xor
jmp
mov
sbb
push
jmp
stos
mov
and
stos
jbe
mov
sub
push
cmpsl
and
jl
cmp
mov
jne
aas
xchg
je
xor
lods
incl
lahf
lcall
js
enter
xchg
movsl
pop
add
or
dec
leave
sub
or
test
mov
mov
push
cmp
mov
cmp
push
loop
jno
enter
xchg
stos
aas
xchg
cltd
push
mov
lods
mov
xchg
mov
pusha
mov
mov
lea
in
leave
pushl
cmp
aas
add
mov
leave
movl
rcl
dec
dec
icebp
mov
dec
leave
popl
pop
or
mov
cmp
xchg
inc
inc
hlt
and
movsl
jae
and
sbb
adc
subb
movsl
pusha
repnz
movsb
or
bound
jne
mov
enter
call
jne
push
dec
mov
enter
ss
push
ja
jp,pn
jmp
xchg
scas
xchg
loopne
or
lahf
insl
cmp
ja
xchg
test
push
adc
ja
push
in
mov
leave
andb
and
jmp
or
add
sub
mov
mov
out
and
inc
push
mov
enter
xchg
dec
shlb
out
pop
sti
xchg
inc
lahf
lahf
in
xor
lahf
pop
divl
xchg
push
std
sti
rcrb
xchg
mov
inc
xor
idivl
xor
test
stc
call
adc
sbb
test
mov
mov
mov
xorb
dec
xchg
iret
aaa
jmp
neg
ret
mov
test
cmp
fldenv
fistpll
jbe
out
lock
cld
ss
divl
jbe
xchg
mov
bnd
mov
dec
push
xchg
lcall
bound
rcrb
jmp
stc
pop
adc
and
push
adc
clc
loopne
mov
mov
mov
mov
pop
mov
adc
mov
pop
pop
shrl
push
add
jne
push
stos
shrl
xchg
popf
xchg
popa
addb
mov
cmp
cmp
outsb
cmc
push
and
insl
popa
dec
sub
daa
xor
xchg
mov
mov
cli
fwait
sub
mov
and
bound
andb
mov
addr16
lret
jle
fwait
loop
cwtl
rcrl
jns
fwait
pop
mov
mov
jo
sub
movl
data16
sahf
pushf
bnd
jecxz
rcll
mov
jnp
jns
popf
fwait
in
xor
jae
mov
dec
pop
pop
mov
mov
sahf
jmp
ja
push
lahf
pop
mov
jbe
jle
loope
out
movsl
mov
sub
leave
test
and
inc
or
pop
mov
sub
mov
and
hlt
data16
cmpsb
mov
loopne
lcall
mov
jecxz
test
out
cmpsl
or
mov
and
inc
xchg
pop
mov
and
out
ficoms
frstor
in
bound
xchg
xor
mov
adc
xor
setno
sbb
sub
add
push
je
push
sub
fisttpll
sahf
mov
mov
mov
cmpsb
fcoml
dec
mov
xchg
add
cmp
les
jmp
ss
fstps
sbb
cmc
mov
pop
mov
add
jmp
xchg
outsb
dec
jg
cmp
mov
pop
mov
jmp
js
cltd
cmp
mov
and
sbbb
std
enter
test
popa
xor
mov
adc
xor
xchg
xchg
int
imul
ds
out
test
test
sbb
mov
cmpsl
sbbb
enter
mov
sub
mov
lock
or
in
ljmp
mov
lahf
or
and
dec
cmpsb
sbb
or
je
into
fldcw
mov
imul
loope
adc
xchg
jo
mov
lods
mov
sarl
cmp
sub
rorl
add
fistpl
jecxz
mov
pop
insb
or
stc
cltd
mov
stos
xchg
pop
push
sub
jne
rcrl
or
fld
test
and
sub
addl
inc
mov
ja
cmpsb
ljmp
mov
cmp
ret
xor
sahf
and
mov
and
sti
repz
int3
mov
dec
lea
jecxz
cmpsl
pop
or
push
mov
testb
mov
pop
daa
xchg
and
xlat
cmp
into
xchg
mov
sub
xor
cmpsl
daa
sub
outsl
mov
mov
mov
je
cmp
aam
leave
jae
mov
idivb
outsl
jl
push
dec
js
mull
sbb
ror
pushf
fmuls
ret
movsb
and
loope
je
popa
loopne
orb
daa
push
lahf
rcll
into
loopne
mov
stc
sub
xchg
mov
xchg
movsl
data16
stos
loopne
data16
popa
aad
jg
sbb
lods
mov
sbb
and
adc
pop
pop
fs
test
xor
icebp
aad
sbb
jne
aad
loope
arpl
jmp
ss
adc
jbe
pusha
call
loopne
lret
xchg
cmp
inc
popa
jno
add
mov
std
jmp
cmc
mov
ror
cmp
jbe,pt
fs
popl
mov
jne
scas
test
cmp
sbbb
sti
pop
jmp
mov
es
es
es
mov
lods
and
out
push
dec
or
xlat
dec
xor
aam
jp
dec
mov
cmpsb
fidivrl
jae
mov
mov
push
mov
xor
cltd
dec
fwait
scas
ss
scas
daa
xchg
std
push
and
and
insb
cwtl
icebp
mov
mov
pusha
sbb
in
test
xchg
imul
xlat
lods
push
dec
fs
es
sbb
cmp
push
cmp
out
lds
out
mov
push
mov
xlat
int3
aaa
pop
xchg
push
js
sahf
xchg
or
lcall
sbb
push
sub
or
xchg
sbb
bound
push
and
mov
stc
fwait
out
movsl
cmc
daa
cmp
cmp
mov
mov
cwtl
sbb
dec
or
into
mov
popl
sti
mov
arpl
ret
cli
movsl
push
aam
in
mov
js
cltd
rclb
in
adc
xor
cmp
ja
add
roll
loop
inc
cmpsl
mov
lock
leave
sub
dec
mov
xchg
mov
or
or
cmp
push
cmpsl
lahf
ss
xlat
sbb
push
mov
sbb
test
xor
cmp
sub
lret
and
or
pop
aas
call
sub
test
imul
add
nop
test
xorl
add
lods
mov
mov
xlat
mov
jmp
xchg
icebp
cltd
xchg
loope
mov
inc
or
pop
jmp
loop
xchg
jne
mov
repnz
icebp
inc
sbb
xor
mov
dec
js
aas
mov
mov
clc
popa
leave
mov
scas
ss
test
jge
adc
les
jns
cld
inc
fwait
aaa
pop
lods
ja
fdivl
int3
mov
jge
out
xchg
fcomp
fs
push
mov
cmpsb
aas
add
pop
mov
loopne
sahf
and
lcall
imul
loopne
fs
and
mov
push
pop
add
enterw
sti
insl
pusha
dec
jns
mov
data16
insl
mov
xchg
push
add
cmpsb
es
xor
decb
je
xchg
mov
cmpb
arpl
cmc
pop
and
repz
xor
rol
mov
mov
scas
in
push
mov
jo
ss
mov
mov
stos
test
or
into
and
loopne
jecxz
aas
scas
movsb
stos
mov
xor
ljmp
dec
ljmp
les
mov
inc
pop
mov
icebp
insb
pop
or
jg
movsl
nop
in
lods
mov
std
mov
add
or
imul
dec
and
pop
jg
js
sbb
mov
lret
popf
imul
out
jae
rcll
xor
loope
shlb
ljmp
pusha
cmc
or
push
push
cmpsl
sbb
movsl
fs
in
shll
pop
loope
and
lods
sti
sub
mov
adc
sub
movsl
out
xchg
mov
popf
imul
mov
mov
aaa
imul
and
es
cmp
pop
push
dec
push
leave
xor
fnstsw
sub
out
jno
cmpsl
mov
sub
jae
lcall
cmpsb
xor
push
out
push
test
xor
xchg
ds
js
into
icebp
or
or
xchg
mov
psubw
popa
and
into
mov
mov
les
mov
lcall
lea
and
movsb
mov
and
or
dec
into
stos
mov
jp
test
xchg
xor
in
push
mov
test
or
xchg
mov
fs
ds
sub
mov
cs
add
mov
push
cmpb
push
out
int
mov
popa
jns
jg
ret
mov
mov
cmp
cmpb
inc
and
add
inc
pop
aas
sbb
hlt
jbe
aad
mov
mov
pop
jmp
popa
sub
pop
jns
test
jp
jg
test
dec
lret
mov
bound
add
xor
add
inc
sub
repnz
mov
sub
ret
cmp
aam
stos
xchg
mov
jno
aas
jmp
pop
mov
nop
cmp
sbb
aaa
cmpsb
push
and
hlt
mov
jae
lods
mov
loopew
pop
mov
loope
rcl
cli
sti
xchg
je
add
scas
ljmp
mov
sub
nop
push
add
rol
cmpsl
and
xchg
insb
push
cmpsl
icebp
add
lods
in
mov
fimull
xor
out
inc
ja
jl
ret
mov
sbb
pop
mov
dec
test
pop
jnp
js
jmp
xchg
push
pop
jle
loop
xor
div
es
sub
pusha
cs
out
in
call
aas
add
push
sbb
jle
push
cmpsb
pop
andl
pop
ds
cmpsb
idivb
std
push
inc
mov
movsb
jae
jb
lret
xor
shrb
push
sbb
mov
js
scas
adc
test
or
fwait
cmp
pushf
or
dec
mov
orl
xchg
mov
out
mov
xor
imul
cmp
xchg
mov
les
xor
adc
or
mov
inc
in
test
mov
cli
es
cmp
cwtl
mov
jo
iret
aaa
or
pop
iret
push
jmp
jmp
lds
imul
bswap
sub
insb
jnp
dec
flds
ds
mov
or
stos
mov
or
mov
lret
jmp
xchg
xlat
mov
in
jb
fisttps
add
xor
mov
int3
sub
and
and
lret
sub
sub
mov
ret
enter
push
int
dec
push
jne
mov
dec
or
push
pop
bound
xchg
cld
cmp
push
jmp
mov
inc
lcall
mov
sahf
inc
out
push
aaa
test
addr16
std
insl
int
aad
mov
fdivrl
and
in
push
mov
out
pop
leave
dec
aaa
enter
mov
and
das
mov
adc
lea
movsb
int3
add
mov
cmc
ja
adc
sub
cli
pop
mov
fsubrl
cli
push
lods
fcomi
js
stos
mov
ss
and
add
mov
and
xchg
lods
mov
cmpsl
mov
ss
adc
gs
sbb
sahf
jbe
or
mov
movsb
bound
cmpsb
movsl
out
sub
mov
jne
out
and
sub
test
filds
cmp
add
loope
cs
push
sub
arpl
inc
popa
sbb
sub
icebp
cmpsb
cmpsb
push
push
movsb
ljmp
cmp
sbb
lcall
leave
cmp
scas
and
repnz
mov
ds
mov
mov
shrl
lods
add
pusha
push
xchg
xchg
jecxz
cmc
iret
cmpsb
stos
dec
into
test
or
sarb
sub
mov
int
ja
mov
outsl
cmp
lretw
pop
push
mov
pop
test
ljmp
nop
push
sub
orl
movsb
in
push
add
repz
and
sub
mov
in
mov
dec
out
popf
dec
dec
out
popf
clc
dec
out
popf
popa
mov
adc
dec
and
mov
imul
mov
mov
aad
adc
and
xchg
cmp
mov
mov
jecxz
cmpsl
mov
subl
les
pop
inc
xchg
pusha
pop
inc
push
aas
test
add
shlb
leave
adc
sbb
or
fsubrl
add
loopne
shlb
clc
or
ds
out
or
addb
adc
orb
jecxz
iret
mov
jp
push
mov
jbe
and
fnstcw
sbb
gs
fldenv
test
or
jnp
shrb
ret
int
inc
stc
shrb
mov
mov
mov
sti
pop
cli
push
fwait
push
jecxz
mov
add
or
andb
mov
fisttpl
mov
mov
pop
cmp
mov
lea
adc
mov
jecxz
sub
xor
stc
inc
or
pop
mov
jne
cmpsb
nop
imul
cli
xchg
jo
in
popf
xchg
loope
sti
xor
xor
ret
sarl
xorl
lds
sarb
scas
push
out
outsl
test
mul
xor
xchg
jnp
inc
push
in
push
cmpsl
and
cmpsl
inc
out
cltd
or
in
mov
push
or
pop
nop
jnp
mov
mov
bound
shlb
jbe
mov
dec
push
xor
ljmp
das
jmp
scas
stos
enter
push
ds
push
mov
cwtl
cs
mov
cmp
int3
and
xor
mov
adc
das
jmp
insb
into
imul
movsl
jl
in
dec
js
adc
and
jnp
dec
les
mov
mov
test
pop
adc
test
loopne
push
ret
add
and
pop
int3
in
cmp
jns
cmc
or
cmp
dec
cmp
jo
sub
mov
int3
leave
jmp
sub
leave
bound
mov
sahf
bnd
jo
rclb
xchg
fadd
jbe
sub
and
lods
push
fsubp
push
lcall
mov
popf
mov
fucomip
fs
in
jnp
cmp
ja
sti
mov
xchg
mov
sbb
out
stos
leave
jne
notb
mov
int
ficompl
push
jno
pop
and
iret
into
add
mov
xchg
repz
shlb
pop
cmp
mov
or
and
hlt
test
stos
sub
sub
ja
or
pop
gs
xor
push
sbb
push
mov
stc
loope
mov
lock
mov
sub
dec
loop
movsb
sub
dec
mov
int3
mov
popa
xchg
cmp
and
mov
test
enter
sahf
mov
test
jmp
adc
xor
push
mov
daa
or
or
xchg
fs
sbb
in
or
mov
jnp
lods
shrl
cltd
orl
cs
adc
lock
dec
dec
mov
mov
lods
orl
bound
sub
enter
adc
mov
dec
xchg
jno,pn
inc
push
xor
push
mov
clc
or
mov
pusha
in
jmp
sub
movl
mov
loopne
fwait
out
aas
sub
ja
dec
sbb
adc
aas
sbb
jmp
loopne
dec
in
push
pop
xchg
nop
mov
in
popa
cmp
ss
mov
icebp
or
cmpsl
sbb
xor
test
sub
jge
mov
mov
lret
mov
dec
mov
push
cmp
sahf
jnp
mov
add
pop
mov
pop
in
mov
es
adc
sub
test
add
mov
lcall
mov
arpl
xchg
xor
test
jmp
test
mov
jno
inc
mov
out
ljmp
loop
std
mov
into
mov
cmpsb
xchg
mov
ja
aad
dec
mov
shl
cmpsl
xchg
push
sahf
sub
mov
xor
mov
aas
fsubrs
jg
lock
xchg
cmc
imull
or
cmpsb
xchg
xchg
andl
push
bound
jp
push
pop
mov
arpl
pop
dec
testl
jbe
cltd
cmpsb
mov
cmpsb
dec
push
std
loop
pop
mov
sub
leave
mov
push
out
jmp
test
cmpsl
mov
ss
jmp
negb
cmpsb
popa
mov
andb
cmpsl
inc
mov
cmp
add
cmp
dec
fmulp
aaa
mov
fiadds
mov
mov
rolb
mov
xchg
jg
inc
dec
cmpsl
mov
jb
xchg
daa
jmp
or
popf
push
aad
push
pop
loope
push
push
and
push
mov
mov
mov
sbb
lcall
push
cmp
setnp
fisubrl
test
xchg
xor
or
lahf
or
xchg
sbb
aaa
hlt
pop
stos
cmpsl
aaa
sbbl
int3
in
mov
push
loope,pn
xor
gs
jmp
mov
xchg
imul
test
ss
sub
idivb
outsb
nop
dec
mov
mov
xchg
or
stos
push
into
xchg
jbe
push
cs
cmpsb
bound
mov
scas
test
sbbl
add
jp
dec
popf
scas
in
or
adc
jmp
jecxz
cwtl
pusha
mov
outsb
sub
repnz
outsb
jb
fldl
nop
inc
fiadds
shll
xchg
rclb
sub
lahf
mov
icebp
mov
and
jno
push
dec
and
pop
leave
sti
add
int3
and
xchg
andb
cli
scas
movsb
shll
cmp
push
jne
xor
adc
jae
test
sub
jg
aaa
dec
sub
call
mov
push
or
mov
insb
out
lahf
jmp
jg
out
add
test
xchg
mov
jge
movsl
out
pusha
inc
mov
sahf
mov
mov
out
sbb
jecxz
fucomp
sub
add
sahf
add
out
sub
aas
mov
mov
loopne
pop
cmpl
repnz
sahf
arpl
and
movl
mov
add
dec
sar
and
ljmp
mov
mov
mov
mov
out
sub
push
push
xor
mov
inc
pop
push
or
dec
mov
sub
cli
lods
push
inc
xchg
movsb
clc
movsb
test
xchg
dec
pop
dec
adc
leave
mov
aad
mov
test
cmp
jecxz
jmp
lret
jle
lea
xor
or
mov
out
mov
aam
fidivrl
loop
push
inc
jp
add
add
jg
leave
jle
sbb
cwtl
in
repnz
mov
out
call
movsl
jge
mov
xor
xor
ja
fldcw
xchg
cmp
movsl
and
push
fs
jb
add
enter
sbb
shlb
pop
mov
lods
jb
adc
repz
test
ds
adc
lods
xchg
jae
ret
dec
push
and
fs
dec
mov
mov
cs
inc
fidivl
jno
xor
insl
out
or
cmp
mov
mov
in
sti
or
pop
arpl
push
pop
outsb
add
in
jl
and
or
mov
push
inc
sbb
or
int3
lret
idivb
js
mov
adc
sahf
mov
test
mov
xor
stc
movsl
mov
jg
mov
jae
push
es
stos
or
xchg
adc
dec
out
in
lret
adc
loope
add
mov
pop
imulb
aas
adc
iret
repnz
lret
incb
cltd
mov
xchg
xor
mov
jno
inc
mov
sbb
dec
loope
enter
test
mov
fninit
pop
mov
add
mov
mov
and
lods
idiv
mov
add
mov
hlt
mov
insl
and
es
repnz
mov
xchg
loope
jns
mov
ja
add
sbb
lret
nop
cmp
mov
mov
inc
adc
jle
scas
sti
mov
adc
lret
and
jmp
call
test
cmc
das
cmpsl
mov
push
and
pop
std
clc
cmp
pop
std
xchg
pop
rolb
cld
adc
sub
inc
sbb
cmpsl
ljmp
enter
mov
sti
sbbl
lds
cs
pop
mov
dec
adc
sbbl
negl
add
mov
test
mov
xor
into
and
lds
xchg
xchg
mov
pop
mov
dec
mov
cmpsl
sub
test
inc
imul
scas
mov
das
and
mov
inc
ss
jae
mov
ds
add
pop
sbb
movsl
mov
cmpsb
mov
pop
push
jl
mov
std
pop
and
into
mov
or
nop
leave
jns
jmp
xchg
cmp
add
mov
ss
add
xor
aad
loop
pusha
push
mov
movsl
rcl
loope
sbb
pusha
xchg
aas
cmp
pop
ret
loope
cmc
xchg
jns
and
gs
into
jne
ds
and
mov
xor
inc
sbb
xchg
add
jmp
sahf
rol
ljmp
cmpsb
divl
add
inc
stos
insl
jne
inc
sbb
rorl
inc
sahf
neg
sub
mov
inc
mov
out
mull
bound
cmp
jmp
cmpl
fcomps
pushf
rcrl
jne
fistl
push
mov
icebp
sbb
insb
std
mov
jge
and
test
dec
loope
cmpsb
out
test
xor
pushf
sub
ds
sti
mov
jmp
mov
push
push
ret
ds
xor
jp
mov
loop
pop
xor
and
shll
mov
loop
jmp
mov
orl
jle
out
push
jae
push
sahf
mov
and
mov
ds
in
and
push
call
mov
adcl
mov
inc
js
and
jmp
mov
test
inc
imul
cmpb
popa
out
mov
xchg
ret
sub
test
shll
data16
aad
test
loopne
repnz
mov
jne
mov
cmpl
into
loope
clc
cmpsl
filds
insb
es
cmpb
xchg
pop
ss
mov
fcoml
jmp
rcrl
idivb
outsl
mov
mov
jmp
xchg
fildll
jmp
jp
push
and
pop
out
lahf
mov
iret
rcr
lret
lcall
data16
insl
push
jecxz
lods
sahf
jg
andl
jb
push
test
lcall
loope
mov
or
scas
test
mov
mov
iret
cmpsl
fs
xchg
cmpsl
mov
add
pop
push
lcall
or
push
pop
mov
and
push
fisubrs
mov
inc
pop
add
inc
xlat
movsl
jl
pop
out
insl
popf
mov
mov
iret
test
sbb
inc
outsl
loope
aas
xchg
stos
fiadds
addl
ret
insb
lcall
lods
test
dec
inc
popf
cmpsl
mov
push
ret
into
mov
mov
test
push
mov
pop
test
mov
ja
notl
push
mov
bound
ret
jp
cmp
push
sahf
push
cld
adc
inc
mov
mov
pop
xchg
loop
cld
adc
int
cmpsb
pop
stos
sti
es
shrb
pusha
ss
das
jg
push
pop
pusha
mov
mov
push
and
testb
xor
add
mov
mov
pop
xor
mov
lods
imull
mov
movsl
leave
sbb
and
mov
push
faddl
and
lods
fmull
jae
cli
jb
testb
leave
jp
pop
jnp
call
jae
into
inc
add
out
mov
pop
roll
test
js
jb
sub
xchg
xor
add
popa
test
xlat
ja
xchg
push
js
push
fisubrs
and
jmp
sarb
imul
xchg
fidivrl
and
mov
sbb
fcmove
or
push
inc
jo
pusha
pop
dec
xor
sbb
test
adc
push
push
jns
in
addr16
sub
repz
cld
aaa
movsb
negb
sti
mov
mov
jbe
add
fs
inc
pop
mov
xchg
push
sbb
lods
sbb
scas
pop
jl
mov
leave
jg
sti
dec
stos
mov
enter
lret
xchg
movsl
test
cmpsl
jne
mov
mov
add
mov
cmpsl
jl
into
ljmp
mov
ret
and
add
ss
mov
xor
negb
testb
ss
jecxz
and
rcll
mov
into
dec
adc
lahf
xchg
mov
dec
sub
test
push
and
into
popfw
cmp
mull
sti
push
out
aas
mov
enter
dec
cld
and
pusha
cmc
mov
lret
imul
mov
pop
mov
lret
ss
xchg
pushf
cwtl
shrl
mov
bound
je
jge
in
sub
mov
pusha
and
scas
cmp
mov
in
xchg
mov
pusha
mov
je
pop
dec
in
adc
cmp
mov
mov
mul
mov
mov
imul
fwait
cmpsl
movsl
mov
dec
push
or
sub
mov
cmpsl
cltd
inc
cltd
mov
xchg
xor
out
push
mov
loopne
adc
outsb
mov
cwtl
add
jecxz
xor
mov
cmp
mov
adc
push
into
xchg
mov
add
bound
popf
mov
test
mov
test
inc
ret
enter
jo
cmpsl
xchg
out
mov
cmp
stc
and
fwait
cmp
xor
notb
sub
shr
lret
lods
insb
repnz
mov
xchg
inc
aas
dec
mov
pop
adcb
or
in
jbe
out
add
pop
jne
test
lds
jecxz
test
sbb
push
in
cltd
xchg
xchg
xchg
push
xchg
mov
ficomps
and
xor
aad
jne
mov
push
cmpl
push
cmp
mov
dec
dec
sahf
mov
loope
mov
mov
cmp
cltd
pop
dec
lods
lret
lret
xchg
movsb
mov
into
add
test
mov
scas
loopne
xchg
aad
enter
push
or
dec
orl
mov
xchg
sub
inc
iret
add
add
pop
loopne
inc
cmp
jge
or
sub
adc
adc
mov
negl
stos
gs
inc
jg
jno
loop
mov
iret
push
cs
jbe
ljmp
out
adc
xchg
popf
mov
pop
sahf
xchg
pop
rcr
lret
scas
jbe
in
pop
mov
cmpsl
mov
or
jmp
adc
push
sti
xor
jecxz
pop
mov
movsb
loop
das
das
mov
mov
lret
lahf
mov
pop
out
add
jp
and
lods
xchg
jp
jl
sbb
mov
aas
cwtl
cltd
jmp
sbb
cmpsl
lods
ret
mov
push
lahf
or
stos
lea
add
mov
cmpsb
fwait
jmp
sub
pop
arpl
scas
jl
mov
mov
test
adc
loopne
jmp
mov
pop
mov
call
mov
add
daa
in
xor
mov
add
jl
inc
cltd
add
sbb
mov
es
or
and
mov
jmp
test
pop
aaa
sbb
mov
and
sti
or
jle
xchg
sbb
mov
push
adc
jecxz
cmp
xor
imul
mov
cmpsl
sub
cmpsb
es
movsb
cmp
jmp
sub
or
ja
mov
loop
lcall
aas
mov
add
es
popa
popa
stos
out
adc
xlat
shl
test
mov
cli
lahf
jnp
lret
add
pusha
mov
shll
jmp
cmp
ds
int3
popf
imul
inc
repnz
xchg
ret
test
imul
scas
mov
ret
jbe
inc
loop
sbb
or
xor
test
cmp
movsl
enter
dec
jbe
push
mov
cmp
cmp
jne
jb
clc
xchg
xchg
dec
pushf
nop
or
loope
lods
dec
mov
inc
icebp
pop
cmpsl
loopne
hlt
out
inc
xor
jnp
cmpsl
mov
into
js
inc
int
nop
repz
ja
adc
mov
mov
rorl
mov
imul
sub
mov
mull
fldl
sub
addr16
push
subl
popa
mov
mov
and
adc
test
xor
mov
and
add
int3
cmp
outsb
fwait
push
cs
lods
lea
movsb
cld
jp
cmpsl
cltd
jne
test
ja
and
mov
test
xchg
data16
lods
in
adc
movsl
imul
mov
mov
sbb
andl
andl
mov
sub
mov
je
jl
xor
jp
cltd
mov
mov
cli
loop
xchg
xlat
jl
xchg
and
sub
dec
mov
xchg
jl
std
stc
pop
jo
out
mov
mov
mov
cmp
xor
xor
movsl
xchg
or
push
mov
movl
xchg
dec
or
mov
movsb
addb
in
aas
mov
repz
push
sub
jp
xchg
test
adc
mov
scas
jne
push
mov
lret
dec
pop
inc
mov
js
xchg
arpl
and
clc
lret
push
repnz
adc
notl
repnz
mov
iret
sti
cmp
mov
pusha
jg
pop
js
jmp
mov
lds
loope
mov
and
mov
lret
lahf
andl
nop
fidivrs
mov
mov
jg
test
leave
lcall
pusha
xchg
imul
repnz
jecxz
popf
int3
mov
dec
lods
xchg
xor
gs
lcall
mov
movsl
mov
adc
jne
dec
js
adc
sub
xchg
and
cmp
mov
dec
and
push
cmp
loop
sub
mov
test
stos
or
ljmp
cmp
push
jne
mov
popf
xchg
mov
mov
pop
fcmovnu
out
data16
lea
mov
xchg
js
lret
cmp
dec
cmp
aas
xor
mov
push
stc
mov
aad
fldenv
divl
fstpl
mov
push
mov
jb
scas
xchg
inc
adc
divb
int
fs
and
jl
es
repz
sbb
mov
sbb
push
imul
push
test
cmpsb
dec
jbe
or
outsl
lahf
mov
push
sbb
xchg
es
sub
popl
std
pusha
sbb
pop
mov
daa
scas
es
jno
ss
mov
fdivrp
movsl
bound
fidivrl
movsb
adc
jb
pusha
out
push
in
rcll
pop
push
fwait
jl
jl
repz
mov
mov
cltd
pop
cmpsl
sbb
movsl
push
jne
sub
pop
pusha
sbb
and
lock
jmp
gs
sub
stc
lods
jo
mov
mov
mov
mov
loop
xor
mov
push
aam
icebp
sub
mov
neg
es
mov
jb
mov
xchg
xor
jb
repz
out
lret
nop
sbb
xor
data16
daa
mov
dec
fs
xor
or
xor
push
test
mov
sub
bound
test
jmp
bound
test
insb
fcmovnu
and
sbb
sub
loop
sub
add
xchg
pop
cmpsl
or
insl
outsl
pop
cmp
stc
mov
ljmp
adcl
mov
aam
ror
mov
xchg
mov
fs
adc
popa
imul
in
xor
add
cltd
mov
stc
sbb
cmpsl
imul
pop
mov
sub
xor
dec
mov
mov
push
std
pop
jo
mov
aam
cltd
ljmp
add
sub
lds
sahf
mov
gs
test
cwtl
pop
cltd
out
xor
pushf
shl
xchg
mov
cwtl
jmp
data16
movsl
cmp
mov
fwait
jns
leave
dec
xchg
adc
outsl
fld
dec
fidivrs
push
jmp
dec
or
insb
cmpsl
mov
cmpsl
subl
fldcw
shrl
mov
xchg
stos
mov
lds
mov
dec
pop
insb
shll
and
xor
roll
jge
jg
test
dec
add
daa
and
adc
xor
in
jge
adc
or
inc
add
pop
and
push
mov
pusha
enter
popf
xor
repz
frstor
jg
inc
mov
mov
lea
mov
hlt
push
divl
scas
inc
cmp
push
pop
test
xchg
roll
mov
mov
pop
fadds
sub
mov
pop
in
mov
ret
or
cltd
mov
js
sahf
jae
test
jp
movsb
sarl
cmp
mov
cmp
mov
test
add
in
lcall
xchg
aad
inc
cmpsb
adc
data16
xlat
out
in
jg
xchg
out
jb
jns
mov
mov
xor
jle
call
sub
aaa
lods
adc
mov
repnz
or
pop
out
lock
cltd
mov
in
sub
imul
aas
sub
and
les
cmp
and
mov
outsb
push
data16
add
pop
push
cwtl
insb
xor
mov
cld
mov
mov
pushf
push
and
jbe
in
xchg
xor
repz
dec
cli
sbb
or
lock
mov
lret
stc
mov
mov
cmp
lret
lock
ret
xchg
cmp
js
mov
pop
fwait
cmpsl
mov
nop
mov
mov
mov
add
dec
mov
gs
xor
out
xchg
mov
ja
and
xchg
sbb
mov
mov
data16
mov
cltd
mov
mov
loopne
cmpl
clc
xchg
mov
add
or
and
mov
cs
mov
xchg
in
ljmp
mov
xlat
stos
gs
shlb
ja
and
push
fstpt
push
jle
or
jecxz
sub
andb
movsl
cmp
dec
dec
mov
sub
stos
lcall
mov
leave
les
push
cmp
nop
pop
ret
das
push
mov
enter
subl
ja
cmpsb
leave
ljmp
sbb
arpl
and
inc
sarl
push
aaa
cmp
adc
sbb
loop
fwait
xchg
xlat
mov
lock
fdivl
mov
enter
das
cwtl
inc
and
adc
xchg
push
cmp
sti
std
mov
negl
xor
out
outsb
out
xchg
cs
and
mov
mov
sub
or
repz
or
loope
mov
test
add
ja
pop
hlt
mov
stos
mull
adc
xchg
out
rolb
mov
mov
adc
fs
movsl
int
addr16
mov
ret
xchg
inc
and
in
mov
dec
pop
xor
stos
jmp
jns
shll
and
sarb
jecxz
int
or
mov
gs
xchg
xchg
adc
gs
stc
or
mov
xor
jecxz
inc
sub
data16
sbb
adc
arpl
mov
jmp
jnp
test
lret
jle
sti
movsl
fistps
or
js
push
sub
es
mov
push
pop
or
ljmp
cmpsb
out
push
lds
sub
mov
stos
lret
mov
mov
fcoms
out
pop
clc
dec
sbb
lods
sbb
add
push
lret
in
roll
mov
outsb
cmpsb
sub
adc
aas
mov
pop
cli
push
ja
cmpl
es
adc
mov
adc
inc
in
in
cmp
scas
cmpsb
jo
cmp
sbb
mov
loopne
mov
xchg
out
jp
loop
mov
cmpsl
mov
add
loopne
std
mov
xor
push
ja
jno,pn
leave
mov
sub
aas
jne
ret
sub
aam
sbb
xor
fildll
mov
add
xor
mov
ds
xchg
mov
mov
xor
test
jg
cld
mov
lock
aaa
loop
and
jo
add
loopne
xchg
scas
dec
nop
mov
je
inc
sbb
jge
mov
xchg
mov
push
je
sbb
jmp
mov
jne
loopne
mov
add
mov
and
lret
add
lcall
popa
xor
mov
mov
sub
mov
stos
leave
addr16
sbb
adc
mov
outsl
subl
stos
and
ljmp
mov
stos
pop
jmp
bswap
mov
rcrl
ret
test
cmpsb
lcall
movsbl
and
ret
mov
mov
pushf
mov
sbb
mov
mov
and
ljmp
mov
loopne
hlt
pop
stos
xchg
mov
xchg
arpl
mov
mov
mull
dec
jecxz
sti
xchg
mov
test
fidivs
movsl
and
xchg
xor
ljmp
mov
mov
lahf
icebp
jg
dec
cmpsb
sub
mov
jmp
mov
lret
js
and
mov
inc
jg
xchg
rorl
sbb
lods
outsl
mul
push
in
sub
xchg
or
push
imul
out
and
cmpsl
andb
fcmove
es
cwtl
lods
sub
stos
cmp
xor
push
aad
dec
sub
and
mov
orl
call
cmpsb
loopne
sub
xchg
and
mov
or
cmpsb
aaa
lds
cmp
mov
popa
and
pop
mov
lahf
push
xchg
aam
mov
jecxz
xchg
mov
push
xlat
je
mov
repz
push
xchg
sahf
push
lret
inc
sub
aaa
enter
js
sub
pop
mov
ret
lret
push
sbb
std
jae
ret
jecxz
out
cmp
sub
push
mov
leave
mov
stos
jbe
data16
xor
adc
adc
popf
mov
sub
sti
lea
stc
mov
and
insl
out
daa
int3
push
out
adc
leave
inc
xchg
xchg
shrb
lods
xor
mov
push
inc
adc
jp
jecxz
mov
in
ret
rcr
push
jecxz
fsubl
and
mov
mov
mov
mov
mov
inc
xor
pop
pop
or
push
test
imul
loopne
sti
cmc
mov
dec
jns,pn
jbe
mov
push
daa
sub
jmp
std
dec
mov
jb
pop
scas
scas
aaa
cli
jl
adc
andl
aas
jle
jb
jle
or
bound
mov
adc
xchg
leave
movsb
xchg
mov
pop
insl
jne
psubd
mov
adc
lret
pop
mov
cmpsl
mov
les
cmpsb
mov
lds
jmp
xor
leave
xchg
stos
xchg
xchg
loopne
mov
mov
stos
jp
pop
in
pop
xchg
aam
stos
pushf
pop
inc
out
mov
jae
in
gs
sbb
cs
mov
adc
mov
lahf
lret
pop
enter
mov
in
mov
inc
flds
lcall
cmp
movsb
jne
imul
push
sbb
add
mov
repnz
call
mov
xchg
cwtl
sbb
jae
push
ljmp
stos
mov
adc
mov
inc
stos
jecxz
int
pusha
jmp
addr16
push
xlat
lods
arpl
shll
les
test
jecxz
mov
mov
enter
mov
test
adc
mov
lea
movb
mov
js
in
mull
jle
sbb
xchg
sahf
xchg
jp
add
in
scas
add
ss
dec
push
stc
sti
scas
lea
movsl
jne
or
test
cmp
out
lret
dec
mov
jmp
jmp
or
mov
imul
cmpb
sbb
xchg
mov
and
cwtl
ljmp
push
sub
icebp
jmp
rorl
mov
xor
dec
adc
lcall
loopne
ret
jbe
fsubrs
fnstsw
sbb
imul
ljmp
or
out
inc
pop
into
cmp
mov
in
lds
leave
dec
ficoml
inc
negl
movsl
jbe
cmp
push
in
jl
cmp
sarl
nop
stos
mov
lds
xor
es
popa
or
lock
cmpsb
lahf
lds
leave
mov
mov
mov
inc
je
mov
add
insb
push
pop
mov
bound
xlat
test
add
xchg
shl
cli
mov
jmp
push
decl
negb
mov
mov
fldenv
div
mov
xchg
mov
aad
adc
shrb
fdivrl
cmp
inc
inc
adc
cmpsl
cmc
shrl
jns
xchg
pop
lret
jle
jne
mov
into
xor
nop
fcmovb
add
mov
fisubrs
out
mov
jbe
mov
jg
lret
mov
sub
xchg
xorb
dec
and
mov
mov
xchg
cwtl
inc
in
scas
push
in
add
mov
in
xchg
das
cmp
bound
pushf
push
mov
sub
mov
nop
mov
mov
mov
cli
ret
push
aad
xlat
xchg
stos
cltd
add
xor
inc
int
pop
aam
aas
mov
mov
push
mov
ret
fnstenv
in
inc
sub
sub
test
pop
dec
push
repz
daa
mov
mov
mov
mov
and
into
leave
mov
xchg
xchg
dec
fiaddl
pop
leave
inc
jg
jl
adc
pop
bound
mov
mov
inc
mov
in
movsb
push
leave
and
jbe
adc
mov
cld
fidivs
ss
pop
cwtl
mov
xchg
out
daa
sbb
dec
push
ficompl
iret
jg
push
xchg
push
js
xor
jne
pusha
ret
mov
nop
push
sbb
cmc
jecxz
cmpsb
cwtl
iret
lcall
sahf
sub
mov
out
mov
pop
stc
test
movsb
sar
jp
dec
mov
mov
and
mov
mov
dec
cmpsl
repz
mov
xlat
es
lds
ret
sahf
sub
loopne
mov
jmp
mov
inc
cmp
mov
mov
test
shlb
loopne
jge
jb
inc
dec
jns
mov
cs
imul
insl
ljmp
xchg
xchg
lea
arpl
mov
and
bound
movsl
ds
cmp
cmp
popa
mov
mov
jne
add
pop
popf
stc
mov
iret
ljmp
mov
mov
pop
and
lret
cmp
mov
daa
repnz
mov
xchg
test
inc
mov
mov
mov
test
mov
iret
out
addb
sbb
mov
aad
mov
and
idivl
loop
or
jmp
jg
push
bnd
mov
ds
js,pt
ss
lock
mov
shlb
mov
jbe
xor
outsl
movl
add
mov
or
aaa
jno
push
lods
sbb
shrl
subl
cmp
push
aas
mov
ss
enter
cwtl
mov
xchg
jmp
gs
arpl
in
subl
jo
jb
and
push
adc
sbb
test
loop
lods
push
ja
sub
mov
inc
stos
fldcw
ljmp
push
ret
add
iret
stos
cmpsl
adcl
and
mov
xchg
pusha
mov
in
mov
outsb
ret
sub
xchg
inc
cmp
std
mov
mov
cmp
cmp
cmc
lahf
push
lods
gs
stos
enter
pushf
inc
and
pop
loopne
in
sub
jmp
jl
rol
sub
fidivrl
bound
adc
fisttpl
stc
dec
adc
cmpsl
dec
jmp
mov
je
pop
sub
mov
incl
mov
push
mov
mov
mov
push
js
in
sub
lods
mov
jns
test
add
or
lcall
fldenv
in
or
bound
add
addb
mov
xchg
mov
xadd
mov
xchg
stos
jne
hlt
mov
les
loopne
xchg
pop
into
xor
loop
add
mov
mov
jne
sahf
inc
in
pop
push
rcr
mov
sbb
add
lea
xor
inc
adc
mov
in
and
out
idivb
ljmp
sbb
in
sub
cmpsl
xor
mov
daa
mov
in
ss
addb
imul
int3
inc
and
inc
jnp
inc
adc
xor
aad
mov
push
pop
mov
sub
hlt
je
and
sub
rol
scas
sbb
call
push
pop
jp
add
movsb
jns
add
enter
xor
mov
jmp
cmp
mov
bnd
fidivs
push
mov
jo
xor
push
out
add
out
popl
mov
ss
jecxz
ja
sub
cmc
movsb
push
mov
sbb
push
outsb
sub
repz
lea
sub
sbb
repnz
call
mov
hlt
insb
pusha
add
and
add
pop
lcall
cmp
fimuls
mov
ljmp
shll
nop
push
or
aaa
mov
xlat
test
test
adc
out
sub
mov
rcll
mov
insb
mov
mov
jne
mov
mov
ret
jbe
xchg
sbb
scas
and
jae
push
je
into
aaa
dec
cmp
loope
xor
xchg
les
push
jmp
pushf
xor
jl
pop
movsb
cltd
jmp
mov
es
fnsave
les
sub
insb
fildl
mov
lahf
insl
fidivs
jmp
dec
xor
sbbl
leave
lods
xchg
mov
notb
and
mov
xor
aaa
fists
and
or
xor
pop
and
cmp
into
sar
and
aad
cmp
add
mov
aaa
mov
mov
xor
push
andl
and
mov
jl
sbb
arpl
inc
cmpsb
repz
mov
jbe
sub
mov
mov
test
andl
and
stc
out
loop
mov
es
adc
and
out
mov
testl
mov
mov
mov
sub
outsl
mull
std
imul
mov
jmp
bound
or
inc
mov
cltd
push
cmc
jmp
pop
fidivs
out
ret
jae
mov
repz
xchg
pop
and
lcall
sub
adc
xchg
lcall
inc
or
push
mov
mov
inc
mov
mov
ja
add
je
cli
pop
xchg
ret
and
test
xchg
cmp
into
inc
sub
cmpsb
dec
daa
jmp
aas
xor
bound
sub
sbb
cmpsl
adc
mov
pop
fwait
cmpsl
sub
fdiv
test
lcall
push
pop
pop
jb
xchg
inc
cmp
scas
leave
sti
cmpsl
dec
enter
int3
cmp
jge
dec
fadd
inc
lea
mov
scas
mov
imul
mov
addl
or
sub
ljmp
xor
cmp
mov
shrl
cmc
out
inc
push
lea
fsubl
dec
out
loope
sub
call
repnz
push
cmp
andb
mov
push
adcl
mov
push
fsubs
into
and
aad
and
xchg
pop
clc
dec
out
into
xor
mov
push
mov
mov
mov
adc
jecxz
test
loope
scas
int
mov
test
pop
inc
fbld
or
repnz
mov
insl
or
daa
cltd
jecxz
fmulp
pop
lcall
jb
mov
inc
cmpsb
sub
leave
xchg
or
cmp
mov
and
sub
push
into
adc
idivl
test
jmp
stos
or
jne
pop
mov
pop
cld
test
repnz
mov
gs
xchg
adc
or
icebp
insb
inc
cmpsb
dec
dec
aaa
pop
jns
shrl
jmp
inc
sub
and
push
into
aaa
fs
ljmp
sub
dec
xor
pop
shl
stc
push
mov
daa
jnp
mov
xor
lcall
mov
cmp
cmpsb
xchg
mov
das
sub
mov
nop
or
aas
jmp
dec
cmc
sbb
mov
sub
stc
inc
sbb
adc
call
mov
or
add
xchg
mov
xchg
or
roll
mov
xchg
ljmp
add
into
or
sbbl
mov
stos
push
jge
jne
mov
add
scas
jae
and
sub
jmp
push
jp
sbb
icebp
xchg
fisttpll
add
mov
loopne
jp
xlat
test
or
outsl
jp
sbb
dec
idiv
es
cmp
lds
push
rorb
repz
mov
push
fcmovnu
mov
leave
add
repnz
xchg
cmc
out
nop
rorb
pushf
adc
and
popa
hlt
and
in
mov
dec
lcall
out
jae
inc
loope
movsl
int3
fistps
jo
mov
fwait
imul
jnp
mov
sub
xchg
sbb
pusha
leave
mov
push
outsb
and
idiv
mov
jne
dec
sub
rclb
repnz
jmp
icebp
in
gs
mov
adc
mov
mov
lds
sbb
mov
cmpsl
cltd
and
xchg
mov
push
pop
mov
jbe
cmpsl
roll
pop
mov
push
sub
push
test
popa
ja
lods
imul
mov
enter
outsl
adc
jg
adc
sub
sbb
cmpsl
call
jl
in
test
jbe
inc
ja
pop
fsts
and
popa
push
push
movsl
data16
adc
mov
adc
jbe
xlat
repz
stos
stos
xchg
pop
hlt
mov
dec
nop
outsl
mov
and
sbb
cmpsl
and
jg
mov
sub
add
xor
xchg
jg
add
cmp
mov
mov
sub
iret
daa
mov
cmpsl
xor
cmp
adc
div
xor
mul
jmp
xchg
dec
push
pushf
add
sub
jno
jne
in
or
mov
inc
xchg
roll
into
negb
sub
xlat
testl
adc
shll
pop
test
inc
mov
cmp
jne,pn
or
popa
mov
and
cmc
jmp
mov
push
and
or
adc
out
jo
cmpb
pop
fsubr
mov
push
mov
cmpsl
xor
scas
and
daa
cs
pop
loopne
mov
jbe
inc
or
xor
out
repnz
fsubs
aad
cmp
jge
xor
inc
test
xchg
adc
push
fsubrs
cld
mov
cwtl
mov
cmpsl
insl
pop
dec
jg
pop
pop
lea
mov
jp
dec
or
inc
je
sbb
inc
ss
stos
and
mov
or
push
xor
popa
in
inc
mov
pop
imul
cmpsl
sahf
sbb
stos
push
leave
fidivrl
ja
insb
sub
rolb
loop
lds
add
jno
push
mov
sub
loop
cmpsl
xchg
dec
lds
ljmp
fsubrs
bts
mov
inc
in
mov
sub
or
sti
jle
stos
sub
mov
mov
push
add
test
ljmp
ret
sub
popa
pop
mov
imul
loop
ficoms
ss
int
or
call
scas
sbb
movsl
out
cmp
jmp
cs
dec
fstpl
stos
and
shlb
xchg
or
iret
call
xchg
andb
and
jb
push
mov
mov
pop
cmp
andb
cmpsl
sbbb
icebp
mov
xor
or
cmpsb
pop
mov
rcll
sub
cltd
repz
orl
popa
sbb
and
sub
mov
mov
call
cmc
xor
sti
cs
test
jns
mov
adc
add
addr16
iret
mov
jg
dec
adc
cmp
push
inc
xchg
mov
add
iret
idivb
outsl
fwait
movsb
loop
movsb
stos
popl
jae
or
fwait
adc
cmpsb
adc
out
xorl
stos
clc
cmp
sub
mov
or
out
pushf
add
scas
inc
mov
cwtl
imul
mov
mov
lcall
fistps
cmp
jecxz
test
orb
mov
test
pop
jp
cmpsl
rorl
mov
pusha
loope
cltd
xchg
xchg
jp
out
xchg
ret
sub
adcl
mov
sbbb
pop
pushf
pop
mov
cmp
aaa
sub
xchg
jg
popa
ss
xchg
cmp
push
fists
jg
xor
jbe
clc
popa
cld
negl
aaa
add
jne
dec
inc
scas
pushf
sub
cmpsb
movsl
adcb
xchg
addl
xchg
xor
lcall
push
out
mov
and
lods
cmp
xchg
data16
cmpsl
sub
stos
lret
cmp
cmpsl
mov
and
pushf
in
xor
les
mov
loop
cmp
in
cmpsb
add
mov
rorb
mov
ja
popf
jl
sub
mov
add
imul
jne
movb
test
lock
mov
push
sbb
test
cld
mov
stos
jp
mov
test
popf
add
cmpsl
xlat
shrl
stos
mov
lcall
mov
cmc
mov
jecxz
dec
lcall
leave
sbb
stos
ja
mov
ss
rorb
testb
mov
or
sub
xchg
push
xchg
ret
xchg
adc
mov
mov
sarl
mov
inc
lods
sbbb
mov
scas
mov
push
out
int3
mov
in
out
push
mov
sbbb
scas
xchg
mov
outsb
stos
xor
cmp
mov
mov
cmp
bound
imul
or
mov
dec
lcall
mov
iret
push
dec
xor
and
notb
xor
mov
scas
xchg
sub
jl
mov
mov
pop
leave
icebp
pop
dec
jne
loop
xchg
repz
or
xor
sbb
loopne
sbb
ffree
repnz
lods
dec
pop
cld
mov
andb
sarl
call
jl
push
stos
mov
stc
les
enter
xchg
jl
sbb
pop
jb
sub
jae
xchg
decl
cmp
jmp
cmpsl
int3
pusha
jbe
cmpsl
mov
mov
adc
mov
cli
push
fldcw
imul
push
xor
in
jne
jne
xor
push
jns
insb
mov
repnz
ss
jae
aad
insb
pop
int
or
sub
add
inc
mov
and
leave
in
testl
mov
mov
or
cmc
mov
push
imul
in
xchg
addr16
ret
div
lret
xor
cmp
or
daa
sbb
imul
jp
fwait
out
cld
jae
mov
jl
es
cmc
mov
movsb
mov
mov
pop
mov
jne
repnz
mov
mov
sub
lea
adc
int
mov
lock
sub
mov
popa
lea
cmp
int3
xchg
jecxz
cmp
jecxz
hlt
cmp
lods
aad
movsl
lods
push
and
gs
addr16
int
push
out
jl
out
dec
popf
adc
mov
sarl
mov
inc
xor
inc
mov
je
adc
std
cld
xor
std
jge
sub
std
scas
mov
sbb
mov
jbe
das
rorl
stos
xor
in
in
mov
imul
cmpsb
out
imul
pop
lcall
popf
mov
sbbb
rolb
mov
mov
nop
sti
xor
mov
shrl
cmpsb
mov
and
mov
leave
sub
test
mov
xchg
test
std
subb
lahf
mov
jecxz
cmpsl
pushf
mov
mov
xchg
and
mov
push
adc
mov
ret
ljmp
scas
xlat
mov
cs
out
lods
cmp
lods
data16
inc
loop
lea
test
test
xor
les
mov
and
push
dec
sahf
sbb
mov
cltd
xor
mov
ret
aas
insb
or
orl
dec
lahf
inc
mov
leave
jecxz
je
lods
mov
jp
cltd
or
ss
and
adcb
cmp
or
inc
sbb
out
or
lea
mov
out
sbb
push
stos
arpl
dec
stos
fists
push
mov
cmp
add
adc
mov
xchg
jecxz
movsb
iret
std
push
mov
fcmovnb
and
sub
or
test
imul
fs
cmpsb
movsl
sbb
inc
mov
in
inc
enter
mov
movsb
fs
push
xor
mov
stos
pop
repnz
orl
mov
mov
pop
in
jle
rcll
jecxz
sub
push
jae
stos
movsl
xor
aad
mov
jp
push
jae
inc
cmp
and
or
cs
xor
adc
pushf
mov
jo
dec
je
repz
stos
stc
mov
divb
mov
jae
sbb
lahf
mov
xor
sti
lret
nop
xchg
sbb
pop
stos
xchg
jle
and
sbb
cmp
pop
xor
inc
mov
enter
in
mov
jecxz
cmpsl
mov
fsubrs
sub
jecxz
jnp
loopne
mov
loope
scas
mov
ja
inc
test
test
sub
outsl
jle
and
enter
jl
xchg
movsb
add
std
jae
sub
insb
xchg
jecxz
movsl
dec
imul
and
fstps
mov
scas
inc
jmp
mov
popa
ss
adc
lahf
push
je
loop
cmc
dec
jne
cmp
dec
in
xor
mull
dec
xchg
and
mov
jbe
adc
shl
adc
fmul
lcall
out
imul
adc
pop
inc
push
adc
lds
add
mov
jbe
fidivrs
xchg
es
enter
test
mov
xchg
mov
rclw
jle
enter
add
add
aam
jae
jne
lcall
add
add
cmp
mov
gs
les
or
scas
pop
adc
mov
mov
lcall
mov
mov
pop
cwtl
cmp
test
mov
cmp
es
or
ja
xchg
mov
mov
test
mov
pushf
cwtl
movsl
popf
inc
cld
es
pop
scas
mov
inc
adc
in
sub
sbb
pop
insb
add
inc
int
cmpsb
or
aam
loopne
shll
mov
xlat
leave
dec
orb
lcall
sbb
sub
inc
addb
mov
mov
cmc
mov
cmp
daa
pmulhw
push
inc
pusha
dec
mov
aaa
push
sub
scas
cmpsl
cli
push
cli
and
jb
xchg
jmp
mov
mov
sub
xor
xchg
mov
mov
inc
xchg
fisttpl
push
mov
mov
inc
idivl
mov
scas
and
xchg
divb
ljmp
pop
addr16
fwait
into
bound
push
lret
lods
add
pop
insb
movsb
mov
jae
adc
pusha
push
ljmp
jb
fldcw
loop
les
out
push
or
out
es
call
mov
and
sbb
nop
mov
sub
mov
imul
stc
mov
sbb
mov
fdivl
xchg
and
jbe
sbb
das
mov
adc
int3
cmp
jl
daa
lds
mov
xchg
jns
sub
inc
xchg
adc
outsb
or
dec
adc
popa
and
rcrl
pmovmskb
cmp
aas
jmp
test
loope
incl
out
ja
enter
fimull
in
jnp
mov
fisubrl
movsl
movsb
cmpsb
mov
sbb
push
stos
push
jp
or
jecxz
cmp
inc
test
add
xor
lret
les
andb
mov
std
mov
sbb
dec
mov
stc
mov
hlt
add
pop
lret
mov
cmp
iret
lret
popf
sub
mov
test
test
or
xchg
or
sahf
sbb
or
or
je
out
ljmp
mov
or
clc
hlt
push
call
pop
and
int
pushf
cmp
push
fldenv
xor
push
imul
adc
cmp
test
jns
call
pushf
lcall
mov
test
repnz
xchg
cwtl
pop
nop
sahf
cmpsb
xor
adc
std
inc
sub
pop
leave
pop
sahf
xor
aad
mov
pop
js
mov
test
xchg
mov
ljmp
push
mov
aas
dec
scas
and
imul
outsb
dec
jo
scas
push
mov
aad
mov
xchg
loopne
sar
scas
inc
cmpsl
sahf
xchg
mov
sub
cmc
mov
hlt
ret
add
add
lret
and
sti
pusha
push
jp
les
ficoms
addr16
xchg
loopne
dec
sbb
in
jmp
jl
push
rorl
cmpsl
mov
dec
cmp
shll
xchg
sub
or
jge
inc
xchg
gs
test
cmp
push
fs
adc
and
sbb
test
bound
int3
sbb
inc
xchg
ljmp
mul
lods
imul
lods
inc
in
inc
adc
or
out
call
cmpsb
ljmp
and
and
call
lret
cmp
ds
or
mov
pop
ljmp
pop
and
ljmp
and
push
jecxz
cmpsl
lea
loop
mov
shl
out
xchg
and
xor
orl
repz
bound
sahf
and
cmp
adc
repnz
cmpsl
imul
pop
test
call
negb
cli
xchg
mov
and
shll
bound
pop
cmpsl
cwtl
ljmp
cmpsl
imul
cmpsb
and
mov
cmp
mov
out
test
jecxz
cmpsl
mov
mov
mov
mov
mov
mov
cmp
xor
andb
mov
mov
jecxz
xchg
and
or
and
cmpsl
orl
popf
mov
pushf
jecxz
mov
lcall
mov
push
cmp
mov
sub
inc
jb
mov
loop
scas
jne
fistps
mov
addr16
enter
int3
push
outsl
bound
mov
test
fisubl
cld
adc
jmp
int3
mov
and
xchg
cs
mov
jne
imul
dec
inc
sbb
xlat
or
mov
jne
out
notl
cs
movsb
xchg
jmp
mov
lea
sbb
adc
pushf
out
popa
sub
bnd
fisttpl
ljmp
push
cmp
xor
xor
in
xor
mov
push
das
pushf
in
cmpsb
adc
push
xchg
cli
bound
je
cli
test
ds
mov
sarl
cmpsb
xor
xchg
daa
xchg
leave
rorl
adc
icebp
mov
cmp
mov
add
inc
jge
mov
lods
adc
mov
test
fwait
sti
or
cmpsl
cmpsl
fildl
cltd
pop
and
mov
mov
fnsave
xchg
add
shl
or
sti
out
lret
fistl
and
movsb
aam
xchg
andb
jne
jge
mov
or
mov
jmp
mov
dec
ja
addl
and
sub
mov
xchg
fwait
popa
cmpps
xchg
mov
xor
mov
mov
mov
jg
jns
cli
mov
cmp
pusha
idivl
mov
xchg
imul
bound
filds
jne
mov
dec
mov
lods
mov
or
or
loop
pusha
mov
or
cmp
add
push
std
js
push
ffree
cmpsb
mov
sub
mov
mov
int3
push
mov
pushf
pcmpeqb
mov
jmp
pushf
popw
sbb
outsl
sbb
cmpsb
test
divl
add
inc
xorb
fisubl
mov
outsb
push
cwtl
pop
pop
add
lods
sbb
in
jl
jae
arpl
in
in
mov
adc
cmp
iret
into
adc
mov
mov
jecxz
enter
sub
push
mov
pop
scas
mov
es
ljmp
dec
fisttps
test
dec
lret
or
push
mov
lock
xor
mov
sub
movsl
or
mov
cmpsb
popa
cmp
mov
andl
dec
add
cmp
hlt
movsl
push
into
adc
or
jp
out
adc
lods
ljmp
testl
xchg
mov
ds
sahf
mov
lret
outsl
cwtl
mov
push
test
pop
or
lret
and
mov
sub
jnp
imul
les
ljmp
push
mov
dec
xor
jl
sub
loopne
pop
dec
imul
jle
cmpsl
adc
mov
push
enter
sbb
and
mov
dec
cmp
and
out
cmp
rorl
test
shrl
dec
in
xchg
add
cmpsl
lods
sub
pop
inc
test
lods
sbb
xchg
cmp
mov
es
repz
push
pushf
cmp
lahf
cmpsl
push
cmc
movsb
out
scas
cmp
mov
xchg
xchg
mov
rep
sahf
lret
lahf
cltd
mov
mov
gs
not
into
push
mov
xor
sti
fidivrl
xchg
mov
mov
cmpsb
xor
mov
test
jae
push
cmp
shll
aam
shrb
push
fsts
insb
push
cmc
cld
dec
mov
push
stos
rcl
lret
test
jne
xchg
mov
paddusw
and
je
xchg
sbb
les
data16
dec
jne
sub
jns
inc
adc
mov
cltd
loopne
and
js
inc
mov
pop
mov
or
jbe
subl
sbb
xchg
lret
pop
push
xor
in
or
outsl
or
xor
orb
push
lods
xor
fdivrl
outsb
cmpb
add
imul
inc
mov
sub
int
dec
pop
ss
inc
pop
mov
int
and
iret
movsl
push
adc
mov
mov
sbb
clc
mov
mov
lcall
xchg
or
mull
xchg
jl
pop
and
mov
hlt
inc
sar
mov
stc
push
aad
jle
dec
jae
sub
aam
das
incl
js
xchg
out
mov
test
outsl
test
sahf
in
fcompl
popa
push
xchg
xchg
xchg
sbb
mov
into
pop
sbb
sbb
bound
scas
adc
xor
xchg
loope
pushf
fcmovnu
mov
sarl
andl
sbb
fs
xchg
arpl
lret
jl
adc
jnp
cmpsl
add
cli
movsb
push
jp
sub
ss
fmuls
scas
xchg
inc
popa
dec
repz
sahf
jmp
dec
not
shrl
mov
fldl
imul
pop
dec
dec
cmp
mov
sub
xlat
mov
stos
fisubs
mov
nop
mov
mov
cld
gs
lock
push
mov
mov
jb
cmpsl
xor
push
mov
pop
and
in
adc
dec
or
push
movsb
mov
mov
fs
add
pop
fnstcw
dec
int
pop
test
lret
or
mov
jp
pusha
ret
hlt
imul
xor
loopne
mov
out
fists
jo
sahf
mov
sub
dec
jmp
pop
cmp
adc
mov
cmpsl
mov
xchg
mov
dec
stos
test
ficomps
mov
push
xor
pushf
mov
ret
pop
jnp
mov
mov
fs
xchg
jns
orl
into
jmp
test
mull
adc
and
xchg
xor
xlat
jne
add
mov
enter
cmpb
mov
mov
inc
out
mov
xor
push
arpl
xor
js
jl
mov
mov
push
sbb
sti
xor
sub
fwait
mov
loope
dec
pusha
mov
popf
loop
ficoms
add
inc
and
sbb
cmp
in
jne
jnp
cmpsb
xchg
add
jmp
sidtl
dec
pushf
dec
xor
decb
das
dec
push
jae
sub
jno
cltd
flds
fwait
cmpsl
sahf
scas
pop
shlb
pop
fdivrl
mov
js
cmc
cmpsb
xchg
push
imul
movsb
xchg
cli
pop
jg
mov
xchg
js
scas
xor
xchg
sbb
out
pop
ret
mov
pusha
sbb
outsl
pop
or
cmp
and
mov
cmpsl
fs
divl
dec
fcmovnb
or
iret
jno
cmpsb
xor
mov
xor
sub
mov
jl
cs
ds
jbe
adc
test
mov
jmp
stos
push
push
shrb
sbb
add
sbb
std
mov
adcl
daa
pop
sti
test
lret
add
stc
cmpsl
loop
inc
xchg
loopne
and
cmp
leave
pushw
stc
xor
aaa
xchg
aaa
cmp
fdivrs
mov
xchg
mov
iret
daa
push
mov
jbe
es
fnstenv
lcall
leave
push
pusha
imul
out
cmpsl
cmp
sti
je,pn
sbb
push
sub
mov
stc
repz
push
test
test
inc
push
imul
test
out
mov
sub
cmpsl
pusha
push
leave
sub
movsb
call
stos
sti
fldl
lcall
loope
test
cli
jne
xor
sub
jg
pop
jae
int3
in
cmp
mov
pop
fwait
cmc
or
mov
lret
mov
stos
or
bound
jl
scas
mov
jg
jnp
push
jne
pop
jmp
or
mov
test
xchg
out
orb
test
mov
les
sbb
pop
daa
sbb
int
mov
inc
pop
ja
pop
icebp
cmpsl
andb
insl
push
and
pop
mov
scas
add
cli
mov
sbb
cld
xor
xchg
inc
lret
pop
lahf
mov
mov
mov
cmp
push
jle
xor
aaa
sub
lock
clc
jno
and
mov
ret
in
iret
sbb
mov
jae
adc
leave
daa
je
cmc
ret
pop
cmp
jle
lds
mov
movsl
movsl
push
xor
nop
scas
or
test
mov
xlat
push
fchs
movsl
fsincos
sbb
movsb
cmp
cwtl
divl
orb
movsb
and
movsl
inc
fisttpl
mov
push
xorl
fld
xlat
test
test
idivl
push
cmp
sbb
ss
mov
lcall
jecxz
adc
and
scas
cmc
orb
in
lret
test
aaa
mov
xchg
jg
movsb
push
adc
lea
xor
adc
dec
or
dec
xorb
int3
xor
pop
jecxz
ret
aam
sbb
cmpsl
push
fistl
jle
xchg
cmpsb
mov
mov
movsl
dec
cltd
and
ret
mov
push
sub
mov
cmp
mov
stos
ss
js
cmp
adc
mov
int
fcoms
vpcmpeqw
cmp
cltd
push
test
or
ja
adc
push
pop
and
and
sub
scas
lock
dec
nop
mov
or
outsl
pop
stos
fbld
idivl
es
into
out
push
lods
pop
cmc
jbe
jae
push
push
cmpsl
lods
bound
je
dec
xor
insb
mov
movsl
mov
cmpsl
inc
arpl
xchg
jge
cmp
in
loop
or
sbb
movsb
cli
out
in
pop
or
or
mov
imul
iret
out
push
es
test
sbb
jmp
pushf
mov
lods
dec
xchg
imul
das
fldl
std
arpl
and
and
jnp
pop
leave
test
jae
dec
repnz
insl
add
movsb
xchg
mov
mov
jb
adcl
adc
sbb
jae
stc
out
jbe
bound
jne
mov
std
fwait
test
sub
scas
mov
movsb
add
dec
enter
lods
lahf
mov
pusha
fisubrl
andb
mov
mov
jecxz
mov
jecxz
lods
loopne
or
call
lods
jp
mov
mov
mov
inc
xor
push
adc
loopne
and
aam
pushf
add
iret
push
fdivrs
xchg
faddl
sbb
ss
mov
push
fdivs
push
leave
popa
cmpsl
out
xchg
xor
subb
and
stos
cmp
xchg
aad
jge
idivl
jne
cmp
xchg
repnz
fwait
jecxz
insl
rorb
sub
mov
mov
out
sub
test
cmp
jbe
test
lods
notl
pusha
jg
jne
sub
imul
jae
bound
mov
out
push
lcall
mov
gs
and
test
ficoms
je
cltd
movsl
out
mov
mov
jne
sti
shlb
push
hlt
xor
mov
xchg
xchg
mov
inc
pushf
stos
cwtl
mov
aaa
sbb
sub
inc
mov
cltd
mov
pop
ljmp
cld
ss
dec
or
xor
or
push
dec
movsb
movsl
das
dec
pop
bound
cltd
sub
js
shlb
and
ja
lea
shl
push
repnz
ds
or
adc
push
pop
and
cli
test
div
outsl
mov
repnz
popf
mov
pop
xor
fimuls
mov
nop
es
xchg
out
mov
jmp
jg
nop
inc
arpl
jge
scas
test
inc
and
inc
lret
test
jbe
inc
ficomps
enter
leave
in
cli
inc
xchg
jmp
inc
aam
cld
pop
out
jmp
add
push
enter
insl
fsubrl
out
pop
adc
mov
outsb
sbb
inc
xchg
xor
mov
loopne
mov
cmpsb
sub
orb
outsl
divb
stos
daa
cmp
cmpsl
andl
mov
pop
mov
mov
mov
movsl
xor
mov
dec
icebp
mov
and
lods
lock
and
insl
xchg
adc
jnp
cmpsb
clc
jb
lods
cmpsl
cli
xorb
jecxz
mov
mov
test
push
jl
int3
sbb
push
cmp
sub
shrl
aam
sub
aaa
sar
leave
insl
lcall
scas
mov
mov
shlb
insb
jge
push
dec
stc
mov
or
push
leave
push
data16
clc
mov
nop
js
pop
jbe
shll
out
das
sub
aaa
and
enter
inc
sbb
xchg
std
outsl
add
int
push
mov
popa
dec
push
push
pop
xchg
xchg
sub
arpl
test
insb
aam
das
sub
cmpsl
sub
cmp
push
sub
cmpsl
push
mov
mov
stos
pusha
insl
dec
sbb
sub
mov
dec
nop
dec
andb
mov
shl
push
jno
mov
das
and
test
jno
cmpsl
testb
outsb
mov
in
mov
sub
push
aad
xor
mov
movsl
xor
out
mov
or
lods
cmc
inc
xchg
dec
ja
fiaddl
pop
adc
call
jmp
leave
pop
mov
xchg
loope
push
in
imul
mov
mov
leave
aas
stc
std
dec
dec
adc
dec
mov
imul
stos
jne
xchg
fidivrl
loopne
divl
xor
adc
pop
cmp
addb
and
xor
loop
mov
shl
add
mov
divl
imul
add
in
add
pusha
xchg
mov
cld
pop
cltd
jno
dec
outsb
ret
fnstenv
clc
xchg
or
cmpsl
fxtract
add
adc
stos
sub
dec
lods
into
repnz
or
ss
dec
orb
rorb
hlt
test
xchg
xchg
popf
jbe
mov
fcoml
loopne
popf
ror
mov
mov
ljmp
xchg
mov
pop
popa
xor
jmp
es
jge
xchg
movsb
or
mov
jno
mov
jmp
push
cmpsl
out
sub
movsb
cli
stc
and
push
push
jmp
xlat
loop
testb
adc
dec
or
cmp
jmp
mov
mov
add
popa
pop
hlt
sub
inc
cmc
out
scas
mov
stc
out
fiadds
jmp
fwait
ret
loop
push
js
inc
adc
in
out
mov
loopne
push
je
push
jne
xor
fstpt
xor
jne
and
imul
add
mov
xchg
pop
std
lahf
mov
mov
sbb
mov
aad
stos
outsl
loopne
sahf
outsl
jo
fldenv
cmp
stos
or
add
ret
outsl
loop
cmp
jp
ja
or
sub
pop
inc
push
ss
nop
push
ljmp
out
sub
into
or
inc
shl
rol
es
add
pop
jns
xchg
cltd
scas
mov
adc
xchg
insb
adc
enter
inc
push
push
popa
js
push
sub
cmpsl
aad
cmc
cmp
stos
iret
aaa
mov
stos
cmpb
or
jp
jmp
push
jno
imul
int3
jns
call
sbb
cmp
int
xchg
push
out
sarb
cmp
fcmovbe
jnp
cmpsl
enter
clc
cmpsb
insl
divl
stos
addr16
mov
das
lds
loop
cmp
pop
scas
cs
ret
mov
outsb
lods
jae
scas
imul
sbbb
ljmp
xchg
cwtl
daa
cmpsb
xchg
or
lds
cltd
mov
movsl
test
mov
xor
mov
add
lret
and
or
xchg
daa
lcall
stos
ja
repnz
add
mov
outsb
pop
out
fstps
rclb
in
mov
daa
jb
fiaddl
loopne
add
sub
je
cli
push
outsl
mov
rcll
add
enter
int3
xchg
imul
loopne
jg
xchg
je
test
inc
push
xchg
xchg
in
int3
sbb
enter
inc
ds
data16
cmpsl
enter
cmp
jae
loop
sbb
or
mov
cmpsl
pop
leave
mov
mov
lea
stc
fidivs
jecxz
loop
jnp
je
ljmp
or
mov
enter
adc
mov
xor
xchg
das
xchg
sub
sti
xchg
sub
jp
mov
xchg
push
mov
leave
call
test
mov
mov
jne
ljmp
jp
sub
lea
pop
icebp
js
xor
jae
adc
sbb
int3
dec
test
mov
imul
jecxz
or
std
dec
jne
mov
sbb
sbbl
add
or
mov
xor
cmp
jno
int
movsl
das
outsl
daa
bound
lcall
pop
fwait
cs
pop
daa
xchg
mov
ret
or
bound
inc
add
jecxz
fildl
test
ss
cmp
xor
movsb
and
mov
and
xchg
and
inc
in
mov
cmp
int
push
cmpsl
and
xchg
xchg
in
es
test
pusha
xor
mov
mov
xchg
movsl
test
or
inc
repz
dec
and
jp
jecxz
xchg
xchg
std
mov
xorl
sub
mov
cs
mov
out
sub
mov
xchg
sub
jecxz
xchg
sub
sbb
xacquire
ds
dec
xorb
cmpsl
ret
mov
jle
mov
cltd
in
test
sarl
xchg
jae
jmp
loopne
inc
loop
mov
pop
mov
cmpsl
and
subb
sbb
or
adc
mov
mov
or
mov
popf
cmp
gs
jo
xor
int
and
xlat
xchg
mov
mov
mov
test
stc
test
add
imul
add
mov
sbb
adc
xchg
iret
negl
stos
addb
xchg
sar
loop
mov
test
int
push
ret
xor
dec
mov
jge
or
daa
fst
and
jmp
dec
and
push
jmp
xchg
test
mov
jns
cmp
fisttps
xchg
push
ds
test
mov
and
sub
and
cs
jbe
cmpsl
iret
inc
push
andb
sub
xor
and
mov
and
mov
cltd
mov
in
movsb
popw
jp
bound
jno
xchg
lcall
cmpsl
xchg
cmp
cmpsl
mov
and
pop
les
cmpsl
call
mov
loope
and
xchg
push
movsb
sub
jp
bound
mov
test
pop
jns
jecxz
mov
jecxz
stos
out
cwtl
push
cmpl
and
xchg
sub
cmp
mov
bound
mov
jecxz
ljmp
test
xor
loop
dec
mov
cmpsl
xchg
pop
test
mov
push
or
xor
cmp
hlt
ds
mov
cwtl
or
cld
sub
xcrypt-cfb
lret
sahf
addr16
loop
testb
mov
lret
sbb
int3
mov
movsw
dec
pop
xchg
mulb
xchg
xor
jle
dec
xlat
pop
int3
jmp
cmpsb
jns
adcb
add
les
enter
jbe
sbb
or
into
xchg
mov
shrl
rcll
aad
xchg
popf
std
shld
jae
aad
icebp
fnstcw
pop
repz
adc
cmpsb
cmpsl
pop
fidivrs
jle
or
dec
xchg
movsl
pushf
loop
lods
daa
adc
test
mov
jecxz
sub
mov
add
js
mov
enter
popf
dec
or
jle
or
pop
pusha
enter
pusha
ret
mov
ret
mov
xor
xchg
pushl
mov
stos
shl
xor
sub
and
mov
ss
arpl
call
rcll
jecxz
mov
xchg
fnstcw
lock
leave
leave
sub
std
aaa
add
and
mov
les
shll
inc
loope
gs
or
cli
bound
cld
mov
xchg
out
in
mov
je
mov
mov
xchg
rolb
fists
in
mov
xchg
lret
fucomip
loop
rcl
sub
loop
push
imul
movsl
mov
xor
pop
out
and
push
mov
mov
ret
test
and
xchg
lock
mov
dec
jg
outsb
sub
and
pushl
mov
mov
negb
sarl
cmp
jns
sbb
sub
mov
out
mov
out
icebp
jecxz
data16
jg
data16
aad
leave
imul
repz
mov
xor
jl
dec
cli
xor
cmpsl
xchg
push
ljmp
outsl
xchg
or
push
mov
enter
pop
cltd
out
fwait
push
icebp
inc
stc
lock
jno
aaa
testb
add
mov
jmp
scas
out
ss
push
cmp
fnstcw
ret
pop
mov
fadds
or
insl
mov
loope
jp
ljmp
fneni(8087
mov
movsl
enter
jmp
pop
mov
mov
cwtl
or
jecxz
mov
into
js
sbb
out
lods
bound
fsubs
idivl
adc
jg
adc
jle
outsb
lcall
xchg
pop
shrb
add
inc
test
mul
fnstenv
or
int3
test
mov
dec
in
xchg
mov
daa
repz
aam
fwait
and
jbe
xchg
sbb
adc
push
test
or
in
jp
dec
mov
pop
mov
pushf
aaa
call
js
and
xchg
jmp
sub
shl
and
mov
test
mov
mov
imul
es
out
imul
xlat
or
andb
pop
pop
js
push
dec
cmpsb
pusha
mov
cmp
adc
and
adc
jecxz
push
jno
add
mov
push
lods
arpl
xchg
jne
cmp
sbb
loop
das
lds
cmp
push
nop
or
test
fsubrl
shrl
inc
es
mov
inc
cwtl
addr16
hlt
inc
mov
and
jns
fldenv
jbe
xor
sti
fstpl
sbb
mov
or
shll
ja
enter
cmpsl
mov
cmp
or
pop
mov
subl
faddl
cmp
lret
test
adc
or
in
loope
inc
mov
sarb
mov
jge
xchg
ljmp
in
das
xor
or
test
or
jae
sbb
imull
jg
int3
fiaddl
js
jle
xor
dec
xor
daa
cmp
sub
xor
inc
shlb
mov
jecxz
stos
or
lret
sbb
mov
push
lods
iret
pusha
test
jne
jnp
push
dec
int3
and
insb
sub
jl
lcall
pop
and
or
mov
dec
enter
push
and
int3
arpl
sub
and
dec
fbstp
movsl
test
inc
pop
cmpsl
test
jae
mov
ret
cmpsb
or
cmpsl
sbb
popl
mov
jbe
lret
inc
mov
clc
adc
xor
cmpsl
fcomp
bound
daa
mov
lods
push
cld
inc
fs
xor
sbb
js
out
and
popa
pop
sub
insl
or
mov
aad
cmp
into
outsl
lret
mov
inc
sbb
ss
es
sub
mull
repnz
bound
stos
roll
xchg
sti
mov
loope
test
andb
or
mov
mov
xchg
mov
in
mov
mov
lcall
lods
loop
jne
inc
stc
inc
test
mov
sub
repnz
mov
sub
in
shlb
outsb
movsl
xchg
cmp
or
inc
lret
in
dec
into
frstpm(287
mov
dec
cmpsb
call
mov
leave
mov
jo
fldcw
dec
test
xchg
push
cmpsl
xor
or
pusha
pop
mov
push
stos
stos
mov
cmp
mov
jl
addr16
pop
mov
ja
stos
lds
lea
xor
imul
test
cmp
sub
stos
inc
mov
out
out
enter
scas
dec
lcall
jmp
cs
jmp
adc
std
test
roll
mov
dec
sbb
aam
imul
hlt
sahf
cmpsb
daa
lret
push
mov
sbb
add
data16
cli
out
mov
insb
jp
mov
jecxz
sub
and
lret
lods
sub
jns
pop
mov
stos
int
inc
mov
imull
insl
xchg
orl
leave
lret
leave
rcll
xchg
pop
movsb
ror
popf
andl
mov
scas
mov
inc
sub
jae
ljmp
jbe
in
xor
jmp
in
enter
addr16
sub
call
cwtl
mov
add
fs
cwtl
mov
xchg
test
orl
shl
lcall
cli
cmp
mov
mov
in
pop
xchg
xchg
cmc
mov
and
in
icebp
not
sbb
cmp
test
jbe,pn
xchg
cld
mov
test
jg
pop
movsb
xchg
outsl
push
mov
jmp
sub
xor
cli
mov
dec
mov
mov
insl
scas
test
sub
out
lret
push
jmp
fsubrl
out
and
dec
leave
scas
lods
and
pop
pop
cmpsl
sub
and
mov
jmp
jecxz
and
mov
out
out
out
test
mov
jmp
test
mov
mov
xchg
repz
fstl
pop
pusha
icebp
hlt
xchg
out
aam
adc
mov
lcall
out
inc
sbb
sub
jle
jns
xor
cli
cmpsb
add
jo
ljmp
dec
popf
iret
mov
into
and
xor
mov
lea
scas
pop
jae
sahf
cltd
test
mov
mov
adc
mov
hlt
add
ljmp
scas
mov
and
stc
cmp
push
mov
cltd
loope
ja
sbb
popf
aad
cmpsb
loop
dec
rol
out
push
js
out
scas
enter
loopne
jl
mov
inc
dec
and
lahf
push
shl
cmp
push
or
add
dec
imul
cmp
fisubs
cmpsb
into
insl
repnz
shll
push
mov
fistl
dec
xlat
out
pushf
cmp
ljmp
or
xchg
dec
sub
out
and
and
ss
pop
or
cmpsl
jo
xchg
pop
xor
leave
fcom
mov
sub
dec
aad
notl
push
push
push
pop
mov
fldt
ja
shl
pop
int3
xchg
in
cli
nop
pusha
scas
lock
ss
xlat
iret
sbb
lret
enter
into
xchg
xchg
sbb
xchg
lret
aad
mov
jmp
sub
sti
ret
xchg
mov
or
push
xor
in
adc
mov
out
push
dec
dec
lcall
mov
popf
push
xchg
xor
mov
test
icebp
jb
push
mov
mov
in
fwait
out
xchg
fwait
add
dec
mov
add
sbbl
ret
mov
or
and
pop
data16
popf
fcoml
lods
das
push
or
sub
test
mov
out
es
pop
and
outsl
imul
int
xor
push
mov
stos
mov
xor
lods
jbe
mov
pusha
pop
loope
and
mov
jmp
cmpsb
rcr
push
xchg
mov
mov
pop
mov
andl
leave
xor
mov
sti
push
xchg
lea
outsb
sbb
hlt
pop
push
xchg
xchg
push
lods
cmp
inc
daa
xchg
jb
push
outsl
mov
add
std
in
jl
cmpsb
xor
or
std
cmp
sahf
adc
xchg
ja
pop
xchg
add
jmp
fwait
enter
cmpsb
push
movsb
aas
fistps
hlt
mov
mov
xor
jns
push
sbb
out
cli
fwait
stos
lret
nop
xchg
pop
enter
jne
je
mov
mov
dec
out
pushf
loop
or
nop
pushf
popa
js
xchg
and
mov
adc
cmpsl
jl
cmpsl
imul
out
sahf
and
into
sti
xor
in
push
lcall
cltd
push
xlat
mov
jnp
jmp
dec
pushf
jg
hlt
js
fmulp
cltd
subl
insl
sub
hlt
in
xor
cmc
cmpsl
mov
nop
cmp
lret
lcall
xor
push
xchg
pop
inc
and
mov
pop
sbb
test
call
and
aaa
mov
mov
mov
mov
mov
enter
jmp
adcl
out
and
dec
testb
pop
xor
add
cmp
into
imull
mov
lods
jo
movsb
mov
dec
mov
leave
mov
pop
movsl
mov
cmpsl
dec
dec
movsl
adc
ftst
mov
addr16
mov
cli
leave
insb
sub
mov
mov
bound
mulb
push
hlt
mov
mov
cmpsb
lcall
js
cmp
inc
popf
divl
pop
add
cwtl
loopne
xchg
pop
mov
arpl
jp
and
xor
adc
mov
stc
into
push
out
outsl
enter
std
loop
xchg
mov
out
ret
mov
cld
xchg
in
adc
and
sbbb
cmpsb
xchg
jmp
adc
jle
mov
fdivs
xor
ds
lea
add
insb
sbb
dec
daa
xchg
or
pop
sbb
cmpsl
adc
int3
das
jge
js
push
sub
nop
sub
test
or
jl
ficoml
dec
mov
pop
fmull
mov
leave
movsb
arpl
xchg
mul
sbb
sub
ljmp
stos
sbb
lret
fadd
lea
idivb
pop
inc
xor
xchg
add
test
sub
sbb
xor
mov
mov
xchg
out
jle
leave
jae
incl
stc
xchg
push
jmp
lcall
loopne
mulb
jb
cld
in
adc
arpl
mov
adc
or
loope
xor
ret
int
sarl
inc
xor
mov
mov
mov
das
cltd
sar
mov
inc
sub
sub
mov
rolb
loop
lods
xchg
mov
aam
jbe
sbb
add
es
aas
mov
jg
js
push
hlt
adc
scas
cmpsl
push
shrl
mov
inc
addl
mov
mov
jecxz
cmpsl
bound
mov
dec
pusha
mov
js
in
and
fdivrp
jmp
es
jg
icebp
lcall
xchg
push
mov
fldt
pusha
push
aam
and
cmpsb
ret
popa
out
ss
popa
and
fwait
dec
arpl
pop
fdiv
and
inc
cmp
sbb
loope
shl
test
pop
fisttpll
xchg
rclb
push
sbb
int3
xchg
or
call
sbb
popf
xchg
mov
xchg
loopne
loop
adc
test
jo
addb
inc
loopne
xchg
fisubs
xchg
mov
sarb
push
xor
fstl
cmp
xchg
aaa
push
cwtl
fwait
icebp
cmp
lods
or
movsl
cmpsb
or
pushf
out
paddusb
or
pop
stos
or
pop
mov
in
jmp
inc
pop
jae
xchg
iret
and
jnp
add
cmc
mov
vmread
add
inc
sbb
mov
mov
push
loope
popa
loop
dec
ds
pop
data16
mov
sbb
adc
clc
into
jbe
cwtl
mov
loop
sub
and
push
sbbl
cmp
repnz
mov
cmp
fsubr
aam
mov
jb
adc
into
xchg
push
enter
mov
jbe
xchg
cltd
js
sbb
mov
movsb
in
xor
xchg
jmp
pop
roll
inc
sbb
fdivr
add
imul
loope
xlat
mov
mov
fcompl
movsl
pop
out
xor
shrl
imul
jle
mov
adc
sti
pop
cmp
jns
enter
pop
ss
mov
mov
mov
scas
loop
push
loope
shll
mov
xchg
mov
enter
cmp
inc
mov
out
cmp
in
push
mov
leave
imul
pop
push
subb
ljmp
or
lods
pop
imulb
mov
aaa
xchg
test
stc
sub
repz
cmp
jl
push
push
and
xchg
mov
arpl
xchg
iret
and
int3
rcrl
dec
inc
sub
int3
add
fcomps
stos
xor
mov
in
int
jg
loopne
jl
or
xchg
enter
or
sbb
dec
adc
das
or
jns
movsl
sub
rol
sti
mov
jmp
and
ljmp
movsb
jle
idivb
push
sub
stos
ss
or
or
cmp
cwtl
and
call
jno
inc
adc
mov
sub
enter
mul
jbe
pop
mov
jbe
jne
cmpsl
mov
xchg
decb
pusha
jge
loope
dec
int
push
es
jl
les
fnsave
cmpsl
arpl
cmpb
sbb
xchg
nop
jl
cltd
addr16
push
iret
mov
pushf
pusha
adc
xchg
jmp
xor
jl
or
sbb
popf
push
cmp
leave
fcmovbe
dec
cmp
adc
or
lock
add
leave
ret
fbstp
out
inc
xor
aad
inc
and
nop
adc
jg
push
and
iret
aad
ljmp
mul
mov
xchg
dec
fdiv
cmp
push
mov
ljmp
clc
repz
inc
xchg
out
ja
testl
ss
dec
ja
xchg
dec
movsb
ss
and
icebp
push
imul
dec
cltd
pop
loop
popf
cwtl
incl
dec
inc
repz
mov
int
sub
xor
cltd
repz
outsl
stos
out
into
and
xchg
fnstsw
adc
test
dec
or
jmp
or
arpl
shr
stos
pop
ror
fs
ljmp
ljmp
and
cld
mull
and
out
push
sbb
shrl
cmc
sbb
in
sub
test
add
dec
sbb
mov
stos
fldt
pusha
adc
aaa
xchg
scas
movsl
mov
loopne
sbb
push
jb
inc
sbb
push
mov
sbb
ret
inc
or
xor
or
fs
mov
lods
xchg
sub
mov
cmp
mov
loope
movsb
das
shrb
pop
jbe
lret
cli
jl
mov
and
xchg
std
hlt
inc
dec
push
mov
lret
rcll
xchg
adc
lcall
test
jno
std
sbb
pop
cmp
push
decl
adc
fxch
sahf
xor
xor
cs
sbb
jle
fisubs
and
jecxz
xchg
out
jle
jmp
movsl
mov
dec
pushl
push
adc
or
repz
fcoml
xchg
dec
test
lods
cmp
and
or
mov
push
shlb
jg
shlb
dec
push
pop
cld
mov
mov
jecxz
fnstsw
jbe
cwtl
nop
pop
arpl
bound
push
mov
cwtl
loop
adc
xor
push
xchg
stc
lods
lock
mov
dec
adc
daa
mov
jae
je
xchg
lods
pusha
sbb
mov
dec
lock
lods
aad
mov
scas
ret
xorl
sbb
insl
and
test
sbb
dec
mov
data16
lahf
stc
add
dec
xor
mov
adc
push
add
out
inc
mov
cmpb
bound
jp
jmp
in
and
inc
cmpsb
jno
fdivrl
into
addb
jno
xor
sti
imul
pop
stos
ret
outsl
mov
inc
and
lret
adc
mov
jle
sub
lods
jns
imul
pushl
mov
push
std
test
sub
in
mov
outsl
ror
aam
sarl
add
outsb
pop
test
mov
lret
mov
mov
and
inc
test
loopne
leave
or
mov
mov
lcall
cli
push
leave
dec
lret
cltd
stos
mov
loopne
mov
inc
add
mov
adc
or
xchg
cmpl
pop
cs
or
clc
out
inc
sub
push
mov
jle
hlt
movsb
lahf
jp
addl
fldt
test
idiv
mov
sub
das
and
out
jns
mov
stos
xor
loop
outsl
pop
cltd
lahf
sub
divb
cmp
cli
arpl
lcall
imul
ljmp
out
mov
outsl
jp
push
sub
mov
fdivr
std
cmpsl
mov
push
cltd
sbb
mov
inc
aam
aaa
int
imul
mov
or
mov
jno
jne
adc
jae
gs
and
loope
xor
pop
and
mov
test
das
xlat
push
int
xchg
inc
pop
ja
imul
pop
jbe
xchg
bound
and
mov
xlat
fmull
sub
mov
mov
jae
xchg
inc
xchg
xchg
test
gs
mov
pop
and
push
ret
lods
pushf
push
inc
clc
in
hlt
dec
xchg
icebp
push
and
sub
test
push
les
mov
lea
mov
lret
jmp
js
int
dec
or
mov
in
test
jae
bound
orl
sbbb
hlt
inc
stos
xor
mov
add
jmp
or
ret
mov
inc
adc
dec
or
mov
push
scas
lahf
xor
sti
inc
dec
mov
push
enter
ss
je
fcmove
ds
aaa
insb
loopne
movsl
dec
mov
test
mov
mov
out
push
pop
or
or
xchg
inc
xchg
pop
jg
jp
mov
mov
aas
cwtl
inc
jmp
call
xor
and
xchg
cld
mov
cmp
fsubrp
push
pop
popa
data16
mov
mov
and
insl
or
ret
sarb
add
cmp
cmpsb
sbb
fildll
ret
add
movsl
push
adc
enter
popa
mov
pop
vmread
xlat
cmpsb
stc
cmp
cmp
mov
xor
xchg
mov
and
fcmove
sbb
es
leave
xor
sub
movsb
xor
push
jmp
dec
cmp
lahf
stos
push
es
gs
in
movsl
incb
or
push
mov
imul
std
aas
and
push
out
dec
inc
jp
sbb
mov
dec
pop
cmpsl
aaa
push
xchg
pop
jbe
jecxz
cmpsb
sbb
lret
xchg
dec
push
inc
fistl
xchg
es
pushf
mov
dec
movsl
xchg
dec
xchg
inc
mov
ficompl
pop
sbb
cmp
mov
mov
into
enterw
loope
repnz
shlb
cli
cmp
sub
mov
js
repz
and
xchg
jle
xchg
shlb
sub
jmp
inc
xor
sbb
outsb
or
cwtl
pop
lea
xchg
adc
sbb
inc
out
cmp
and
inc
sub
movsl
subl
mov
lret
mov
mov
testb
lcall
xchg
inc
data16
cmp
xor
loopne
fcoml
out
xchg
xchg
out
dec
jns
lcall
sub
sahf
lret
iret
negl
scas
popa
aad
ljmp
outsl
pop
mov
cltd
mov
mov
cmp
ret
xchg
dec
je
es
imul
pcmpeqw
xchg
jb
jl
jae
je
data16
jo
mov
loope
mov
jge
out
or
dec
inc
repz
divl
mov
fistl
sub
jl
int3
xor
xor
leave
stos
lds
fdivl
not
mov
jl
add
cld
and
rcl
cmp
jmp
cmpsl
push
jmp
js
mov
mov
push
xchg
xchg
fisubrl
rorl
lds
dec
out
jo
movsl
mov
cmp
mov
inc
into
cmp
loopne
mov
xor
cmp
add
lods
rcl
jb
jle
jge
movsb
dec
xchg
shlb
aaa
lods
xchg
or
mov
sbb
testl
xchg
ss
push
inc
jmp
test
xchg
xchg
mov
mov
sub
jge
or
popf
lahf
sub
imul
je
mov
in
mov
mov
test
pop
xchg
orb
rcrl
cmpsl
mov
js
push
cltd
cld
and
jbe
pop
ljmp
and
sarl
cmpsb
sti
jmp
jmp
mov
mov
xchg
clc
jmp
je
in
rol
enter
std
gs
or
cs
daa
je
test
mov
cmp
fs
shll
and
pop
mov
cmpsb
cmpsl
push
mov
add
jp
fisubrl
stos
jae
test
pop
sti
jo
push
popa
and
into
inc
cwtl
stos
lret
mov
pop
or
jo
cmp
scas
icebp
inc
mov
cmc
cmpsb
cli
sbb
adc
adc
outsb
testl
sbbl
mov
int3
mov
dec
stos
or
fwait
push
imul
aaa
xchg
aad
mov
int3
out
mov
enter
aaa
pusha
pop
push
push
test
cwtl
fldlg2
repnz
lods
cltd
movsb
out
imul
pop
jecxz
fdivl
stos
mov
dec
fsubrs
sub
dec
subb
lret
popf
sbb
mov
daa
mov
mov
repnz
ljmp
add
push
clc
clc
and
xchg
mov
popa
inc
or
push
aas
sbb
ljmp
mov
ljmp
sbb
and
in
mov
fidivrl
into
in
jmp
and
dec
mov
push
xchg
mov
ret
and
scas
inc
stos
sbb
enter
jmp
mov
dec
imul
leave
mov
add
push
outsl
std
lret
push
das
xor
es
push
push
adc
xchg
add
jp
and
aaa
push
pop
leave
jnp
addr16
dec
fistpl
into
mov
test
or
push
or
mov
mov
movsb
or
xor
insl
rorb
push
adc
ja
lods
add
sahf
add
cmpb
pop
mov
xchg
and
addr16
xor
insb
cmp
jbe
into
int3
sub
jge
es
sbb
cmpsl
movsl
dec
cmp
scas
test
sti
mov
std
pushf
mov
aaa
addr16
sbb
cmpsl
es
icebp
fdivl
sbb
pop
loop
inc
fadd
sbb
mov
popa
into
test
int
stos
mov
pop
push
xchg
mov
push
jae
jo
clc
xchg
divl
bound
xor
addr16
movsb
call
and
movsb
or
dec
mov
xchg
daa
or
test
in
or
push
mov
cld
fistpll
out
mov
or
pop
ret
jge
xchg
rolb
cmp
cs
and
notb
mov
xchg
ret
jno
out
cmc
cld
add
loopne
adc
test
test
xchg
insl
popf
hlt
mov
dec
icebp
mov
cli
pop
mov
inc
adc
shll
jbe
xchg
movsb
js
lahf
stos
mov
mov
mov
xchg
sbb
xchg
mov
mov
mov
lods
or
scas
and
les
cmp
addr16
mov
mov
inc
fwait
cli
scas
dec
in
push
push
out
add
popa
cmp
xchg
pop
out
outsl
mov
bound
jbe
jo
xor
mov
lcall
or
cmp
push
cmp
xor
jmp
mov
aas
lahf
lds
sti
and
ss
jge
push
loopne
aad
je
xchg
jge
incb
sub
mov
mov
cmp
cmpl
repnz
lcall
clc
pop
xor
adc
pop
cltd
repnz
mov
mov
xchg
orl
enter
insl
dec
pop
adc
or
arpl
dec
mov
jecxz
nop
dec
jae
jmp
xor
aad
mov
cmpsl
push
cmpsl
ss
or
jb
jmp
adcl
pop
push
xor
leave
xor
ljmp
outsl
daa
or
loope
and
ret
and
jecxz
aas
cmp
mov
or
mov
xchg
mov
xchg
enter
jmp
xchg
xor
aad
mov
pop
jbe
jecxz
sti
ss
jge
xor
xchg
fwait
dec
jae
sahf
hlt
enter
jg
addb
stos
out
jne
xchg
out
pushf
cltd
pushl
push
pop
xchg
push
addr16
mov
inc
xlat
pusha
cmp
ret
jge
adc
dec
lods
push
adc
cmc
notl
idivb
js
cmp
push
es
mov
sub
lods
or
dec
insl
and
addb
and
jl
xchg
pop
popa
and
cmp
add
mov
sar
jmp
lods
mov
movsb
mov
mov
nop
sub
mov
jle
mov
mov
xchg
imul
out
pop
lret
std
adcl
imul
les
popa
xorl
jp
mov
cmpsb
xchg
fsubrl
fidivl
shrb
lret
push
dec
fcomps
mov
cmp
ds
mov
cmpsb
imul
adc
int3
outsl
dec
aaa
dec
fnstsw
adc
jp
dec
jno
add
xor
es
nop
pop
jp
imul
sbb
stos
xchg
out
xchg
fbstp
shll
imul
add
dec
xor
mov
bound
inc
bswap
sub
fwait
leave
add
mov
gs
insl
lds
scas
jp
mov
jbe
xchg
xor
cmp
movsb
xor
stos
mov
aaa
aad
and
or
sub
movsb
push
or
es
push
cmp
sarl
cmp
jbe
test
cli
lock
mov
movsb
std
xor
fimuls
cld
jle
mov
sub
mov
int
clc
test
lret
daa
mov
stos
notb
outsb
jne
mov
dec
mov
aaa
cmp
lahf
divb
dec
ds
stc
jmp
lret
sbb
js
imul
pop
and
push
nop
add
data16
jne
adcl
cwtl
jmp
inc
inc
movsb
xchg
and
cmp
cmpsl
push
cltd
xchg
jle
movsl
out
jecxz
ljmp
aas
iret
orb
and
scas
fisttps
int
je
push
pop
and
lods
xchg
aas
stos
push
sub
aad
jl
fdivrs
shr
cmp
mov
stc
sub
dec
or
into
daa
repz
scas
out
xor
mov
movl
into
jl
mov
xchg
sbb
ror
sbb
xchg
adc
mov
data16
ss
imul
sub
or
dec
pop
dec
and
mov
insb
fsts
test
and
leave
out
dec
aam
fnstsw
cmc
sahf
mov
mov
fadds
repz
popa
test
sarb
enter
in
sub
mov
xor
adc
mov
cmc
out
mov
sbb
int
jecxz
mov
shlb
cmp
cwtl
bound
and
shlb
xor
jmp
add
sub
push
ljmp
rclb
shrl
in
pusha
mov
mov
xor
xor
imul
cmpsb
dec
mov
jmp
pop
mov
mov
repz
mov
jae
pop
dec
mov
jg
cmpsl
lahf
lcall
pop
subl
pop
dec
in
or
scas
and
lahf
faddl
out
mov
xor
in
push
in
xchg
mov
sbb
lcall
xchg
loopne
adc
xlat
xchg
xor
lret
mov
imul
int
add
loop
inc
sbb
fdecstp
mov
insl
sub
jbe
hlt
test
dec
aad
xchg
out
add
aaa
sbb
mov
enter
imul
mov
scas
lods
mov
pop
js
and
adc
add
xor
adc
mov
pop
sbb
cmp
and
loope
mov
fwait
dec
cmp
aas
shl
test
stos
into
push
loop
mov
popa
cmp
add
xchg
xor
int3
mov
and
mov
jecxz
jns
and
push
pop
popa
jno
out
xor
pop
andb
ljmp
xchg
cmpsl
nop
repnz
inc
fmulp
xchg
mov
loop
ret
fisttpl
int3
jp
bound
xchg
negb
mov
ss
or
mov
push
jbe
loope
data16
and
xor
out
dec
mov
loopne
js
cwtl
cmpsb
cld
bound
and
push
int
je
loop
mov
out
cltd
pop
repz
loop
mov
scas
cs
in
sub
mov
popf
mov
cmp
mov
test
ja
aas
addr16
mov
cmpb
add
mov
mov
dec
pop
lods
and
jbe
call
mov
mov
movsl
lods
xor
pop
shlb
push
vpcmpeqw
jge
push
int
test
pop
pop
dec
rclb
mov
adc
es
js
cmpsl
jmp
jns
out
loope
dec
pop
cmpsl
data16
xor
pop
repz
cmp
cld
push
add
dec
bound
sub
sbb
pop
movsb
or
adc
cwtl
push
inc
cmpsb
xchg
xlat
fsubrl
adc
ss
je
inc
in
or
jp
outsb
and
fidivs
gs
mov
jge
mov
inc
mov
sbb
cmp
or
cwtl
push
js
jmp
sub
ljmp
push
jbe
stos
mov
xchg
and
leave
shll
push
scas
sbb
or
out
sub
test
mov
cmp
fs
add
pop
cmp
rol
in
roll
ror
push
decl
jl
cmp
into
sbb
inc
or
sti
idivl
test
push
into
jge
xchg
aaa
add
mov
add
cmp
hlt
ds
mov
mov
dec
insb
imul
stos
mov
inc
leave
pop
jl
push
cmpsb
xor
mov
cmpsl
inc
insl
lahf
inc
mov
and
mov
das
jae
and
jbe
cwtl
loopne
inc
mov
inc
fstpt
mov
cmpsl
jg
sbb
insl
in
lret
int3
sub
and
mov
dec
jmp
mov
lret
adc
iret
mov
cmc
push
fadd
xor
mov
out
fistl
jns
jns
test
sti
jecxz
fnstenv
aas
push
or
sbb
mov
int3
mov
sbb
dec
pop
rclb
cli
or
mov
addr16
enter
inc
pop
xchg
sbbb
cmp
daa
mov
xor
sbb
das
push
pop
daa
push
sub
inc
or
lods
or
cmp
shrl
fiadds
cmp
aaa
mov
mov
xchg
loopne
arpl
in
jmp
rcr
mov
mov
and
sub
repz
mov
ret
test
adc
cli
fstpt
ret
jge
mov
push
pop
aad
mov
mov
xchg
xchg
xor
outsl
xchg
lods
dec
push
fstps
movsl
inc
test
and
push
jmp
inc
mov
push
in
std
jmp
movsb
push
fldl
ljmp
jmp
movsl
enter
stc
mov
jg
mov
and
mov
icebp
loope
sti
repnz
sub
mov
jne
xor
lret
cmp
shrb
jb
lahf
xor
fbstp
icebp
fs
cmp
xchg
idiv
mov
xchg
cmp
pop
mov
mov
shl
ss
jo
ss
fcoml
push
adc
xchg
push
mov
cltd
cltd
iret
test
mov
loopne
mov
addr16
mov
push
jo
push
xchg
xor
daa
mul
xchg
fdivl
add
call
jnp
sub
adc
popa
test
fwait
push
pop
cmpsl
cmpb
xchg
jecxz
xchg
cmpsb
add
gs
add
out
mov
mov
loopne
es
nop
sbb
adc
popa
into
mov
push
sub
movsb
divb
dec
in
neg
mov
sub
icebp
cltd
push
xchg
scas
add
cmp
sbb
add
in
cltd
sub
sbb
jne
bound
jb
push
ss
dec
daa
and
adc
and
xor
ja
out
or
lahf
movsl
xchg
mov
movsb
push
and
xchg
popa
lahf
and
xor
in
jg
push
ja
cmpsb
mov
sub
or
mov
bound
dec
cmpsl
ret
test
add
shrb
bound
push
aas
andl
cmpsb
jae
sub
shll
aad
mov
jb
mov
dec
loop
dec
mov
xchg
sbb
cmpsb
dec
cmpsb
stos
lcall
xchg
mov
push
jmp
leave
dec
add
insl
js
adc
dec
push
cltd
lret
inc
push
cmp
movsl
sbb
pop
lret
add
mov
gs
cmpsb
cmpsl
jecxz
xchg
pop
pusha
rcrl
mov
cltd
and
rclb
adc
mov
push
test
sub
scas
dec
sbb
inc
pop
fmuls
leave
lods
addr16
lea
xchg
sbb
in
loope
dec
push
mov
stos
or
les
adc
and
mov
imul
shll
xchg
pushf
mov
out
push
popa
rcr
add
dec
cmp
mov
cli
mov
je
xor
and
mov
int
fwait
xchg
lock
fsubp
mov
and
mov
fdiv
mov
leave
inc
ja
inc
xor
loope
scas
faddl
imul
sub
pop
insl
add
xor
jae
and
mov
xchg
xchg
icebp
cmp
xchg
out
inc
fidivs
mov
das
popf
mov
sbb
sub
xor
cmpsl
inc
xlat
or
adc
mov
sub
push
jmp
jmp
dec
imulb
push
and
pop
dec
mov
adc
into
push
pop
mov
leave
push
adc
ret
and
subl
mov
or
xchg
out
movsl
mov
or
insl
fnsave
cmc
xor
xchg
mov
cmpsb
hlt
jp
xchg
dec
pop
popa
mov
stos
loopne
loopne
inc
mov
shll
inc
jne
inc
mov
scas
movsl
mov
cwtl
xchg
or
outsb
adc
jb
sahf
add
ss
xor
pop
dec
dec
xchg
xchg
mov
insl
sbbl
inc
dec
mov
mov
repnz
mov
loop
push
sub
inc
and
cmp
pop
inc
add
jl
cli
cmp
cmc
or
cs
shl
mov
push
mov
mov
mov
add
in
fsubs
fwait
iret
mov
sbb
push
pop
xchg
xchg
lret
push
xor
dec
mov
imull
test
xor
mov
out
int3
ss
out
cmp
jg
cmpsb
xlat
adc
cltd
push
sub
jecxz
mov
jecxz
test
mov
aaa
leave
insl
xor
fiadds
jnp
jge
xchg
iret
and
mov
mov
inc
mov
test
mov
leave
inc
pop
mov
inc
push
mov
popf
lds
ficoms
mov
into
cmpsb
rol
leave
enter
dec
lds
jnp
or
mov
test
xchg
sti
jmp
cmpsl
and
dec
dec
test
cmpsl
mov
int3
test
imul
adcl
push
pop
ss
jmp
sti
sbb
sahf
rorb
jmp
mov
pusha
mov
icebp
iret
fisttps
lret
push
add
std
ret
pop
mov
fsubrp
sbb
push
cmp
in
mov
xchg
mov
pusha
push
dec
pushf
clc
shrl
call
jge
arpl
call
and
mov
xor
popa
pop
jae
xchg
mov
xchg
mov
shrl
insb
cs
jmp
push
int3
jmp
push
mov
cmp
cli
leave
test
out
leave
movsl
into
aad
adcl
jnp
mov
mov
and
and
mov
mov
les
je
xchg
outsl
cs
dec
ret
jle
mov
imul
das
pop
mov
movsb
jge
inc
int3
xchg
add
pop
or
mov
mov
add
sub
mov
popf
sub
or
hlt
shrb
or
inc
xor
into
add
leave
dec
xchg
push
lret
mov
push
jecxz
xchg
loop
repnz
ret
mov
mov
mov
fldpi
push
xchg
loope
fidivrs
adc
xlat
test
jnp
push
leave
test
movl
test
jecxz
jle
out
adc
pusha
and
dec
xchg
jl
mov
mov
sbb
mov
push
push
in
push
je
mov
sub
movsw
mov
inc
jl
insl
cli
lret
mov
adc
je
pop
push
cmp
xchg
and
mov
shrb
movsl
lret
inc
dec
xor
sahf
repz
xchg
fs
scas
stos
mov
sbb
cmp
ret
es
mov
int
lds
scas
dec
fidivrl
mov
fnsetpm(287
jle
pop
and
or
push
out
xor
and
adc
stos
pushf
aas
pushl
and
out
pusha
aad
sub
scas
mov
xor
outsb
cmp
test
out
dec
mov
jo
pop
out
divb
or
repnz
dec
rcl
out
popf
xchg
cltd
movsb
adc
out
stos
dec
or
add
or
lret
insb
mov
pop
outsb
mov
xor
and
or
mov
aam
adc
mov
fprem
sub
add
shr
mov
test
mov
sbb
fsubrl
aas
cmp
pop
test
dec
lods
insb
pop
ret
push
aas
jne
push
loopne
aam
out
xchg
mov
xlat
dec
xor
push
fs
aam
repz
push
lods
loop
leave
dec
jbe
stos
sub
imul
in
push
cli
test
mov
sbb
push
dec
sub
lea
adc
jge
leave
cmp
pop
push
fists
adc
push
push
pop
clc
mov
addl
adc
pushf
negl
les
xchg
xor
sbb
inc
ljmp
add
mov
cmpsb
jnp
mov
ja
and
mull
and
sub
add
mov
mov
lcall
cmpsb
xor
loopne
call
mov
fcmovnb
mov
push
or
mov
addl
sbb
mov
sub
test
mov
cmpsl
mov
xor
out
xchg
sarl
inc
pop
jmp
js
pop
jecxz
rorl
and
stos
xor
lret
sarl
xor
jne
dec
xor
xlat
mov
push
xchg
scas
jnp
lock
leave
jle
xchg
andb
pop
loop
xor
and
mov
xor
xor
inc
or
mov
or
add
mov
lea
divb
bound
out
daa
aam
les
jb
or
test
out
rorl
mov
push
mov
hlt
out
add
pusha
sarl
mov
nop
jmp
pop
xor
mov
iret
loope
int3
stc
xlat
les
cli
sahf
loop
sbb
mov
cmp
mov
mov
mov
cmpsl
mov
xor
repz
cld
pop
enter
jecxz
aaa
mov
pusha
in
mov
les
add
lret
dec
movsb
jns
xor
bound
repnz
sub
cmc
jle
shlb
add
es
push
sti
jecxz
inc
test
js
in
sti
cmp
daa
pusha
adc
loopne
mov
imul
pop
mov
scas
or
adc
xor
sbb
data16
leave
push
and
out
std
mov
ds
out
cmpsl
movsl
jnp
cmc
in
mov
sub
mov
jmp
shll
sub
pop
push
xchg
sbb
in
cld
jmp
push
dec
loope
out
es
pop
in
daa
sub
jp
nop
xorl
insl
imull
aam
out
stos
mov
stc
imul
jnp
sub
inc
lcall
daa
out
stos
ret
mov
cs
lcall
repz
lret
inc
sub
xchg
je
and
push
cwtl
xchg
pop
and
jmp
pop
mov
mov
jo
xchg
stos
inc
push
lcall
lret
add
push
sbb
imul
addl
and
out
cltd
lahf
mov
fldenv
daa
xchg
pop
sti
sub
jg
outsl
xor
scas
popf
mov
dec
stos
arpl
xor
not
fwait
mov
push
cmp
sub
jbe
insb
imull
cmp
pop
cmp
xor
xchg
loop
sbb
pop
mov
mov
sub
aas
mov
mov
mov
mov
insb
inc
bound
mov
jnp
xor
mov
mov
sub
jae
inc
jne
jle
or
outsb
mov
ljmp
imul
pop
ljmp
int3
mov
sub
mov
xchg
pop
lods
add
add
hlt
leave
test
iret
stos
cltd
sti
xchg
sbb
push
outsl
push
popf
rorb
and
mov
iret
test
mov
jecxz
cmpsl
je
lea
pop
push
stc
cmpsl
loope
cmp
push
push
jle
push
popf
inc
xor
ret
out
and
jl
mov
hlt
mov
inc
mov
push
push
sub
aaa
ljmp
das
faddp
cmpsb
sub
or
xor
push
popa
push
sub
cmp
ljmp
push
jae
mov
sub
cmc
mov
push
xchg
stos
fcmovu
ljmp
mov
lcall
popf
inc
jecxz
ljmp
aas
inc
aas
pop
or
fucomip
fisubl
push
lahf
dec
mov
aad
push
adc
jns
mov
aas
jecxz
xlat
inc
jle
jns
lcall
sbb
cltd
mov
in
setle
or
pop
inc
xchg
in
divl
ret
sub
push
mov
pushf
test
xorl
mov
int3
das
data16
and
aas
pop
mov
mov
popf
clc
stos
xchg
popf
int3
cmp
sub
lods
cmp
inc
insb
push
sbb
mov
lea
push
ljmp
jns
pop
in
mov
pop
cltd
jns
ret
fwait
mov
xor
jmp
inc
sbb
lahf
mov
jl
cmp
fwait
movsb
push
loop
mov
adc
and
inc
cltd
or
into
add
adc
addl
mov
dec
mov
test
mov
cmp
and
test
dec
negl
ds
adc
lds
fiadds
jbe
test
adc
test
add
dec
mov
xchg
dec
loop
pop
movsl
xchg
idiv
inc
adc
cmp
iret
ja
mov
cmpsb
or
add
xor
jmp
adcb
repnz
sub
add
mov
loopne
jo
mov
mov
sbb
mov
sub
jb
and
or
in
ljmp
xchg
mov
xor
inc
daa
mov
aas
repnz
mov
leave
sub
es
test
and
subb
sbb
fnstenv
in
jo
in
mov
leave
pop
loopne
add
orb
cmpsb
orb
sarb
jl
sbb
fnstenv
shrl
ljmp
mov
int3
xor
fdiv
adc
jne
in
mov
and
das
dec
dec
lods
xlat
mov
add
sahf
mov
add
push
dec
in
movsb
lea
in
sub
in
xor
xor
outsb
jae
scas
ja
inc
pop
add
stos
ret
mov
and
fmulp
jg
shlb
andl
data16
sbb
fsub
cmp
jge
sub
sbbl
push
in
dec
xor
sub
add
jg
mov
leave
push
pop
xchg
cmc
push
test
adc
mov
sbb
std
ljmp
dec
mov
fwait
popa
and
jl
mov
lret
gs
and
into
sub
jno
inc
mov
cli
aaa
xchg
dec
ljmp
testl
bound
sub
mov
push
out
cwtl
sub
push
addr16
pop
mov
push
and
mov
jbe
hlt
icebp
cs
xchg
aaa
mov
xor
in
mov
sub
adc
nop
mov
cld
fisttpll
jmp
mov
or
imul
push
pusha
fiaddl
sbb
cmp
xor
xchg
mov
out
push
jmp
enter
pop
sarb
sbb
and
jmp
jnp
jns
sbb
in
and
mov
in
test
mov
sub
popf
ret
mov
xchg
out
out
add
or
dec
loopne
mov
xchg
in
cwtl
inc
popa
mov
scas
outsl
dec
pusha
pop
loop
imul
mov
testb
call
pop
stos
mov
imul
stos
imul
inc
and
jmp
mov
sbb
loopne
aam
outsl
xor
jmp
pslld
cmpsb
push
mov
cmpsb
pusha
sbb
push
icebp
cmpsb
out
xor
sub
out
mov
lret
inc
mov
sbb
xchg
cmp
jl
repz
inc
out
pop
mov
lds
movsl
inc
ljmp
dec
ret
loope
xchg
sub
jmp
xorb
notl
mov
cmp
popa
jne
xchg
inc
mov
cld
mov
mov
mov
dec
gs
scas
movsl
xor
inc
lret
xor
dec
call
sbb
es
test
movsb
mov
sahf
inc
aaa
lret
xchg
jmp
or
fwait
mov
scas
cmp
fldenv
daa
inc
jecxz
std
cmp
pop
lcall
push
ds
sub
scas
xchg
out
jmp
mov
les
push
clc
sub
fwait
xchg
xor
pop
cltd
mov
inc
mov
repz
cmp
mov
jne
or
xchg
push
imul
cmpsb
pop
mull
sar
arpl
addr16
out
add
push
repz
or
jae
pop
loop
mov
scas
sbb
pop
push
popa
data16
js
in
movsl
stc
test
jbe
call
jge
mov
adc
mov
arpl
or
subb
dec
xchg
aaa
mov
xor
in
enter
test
mov
sbb
or
popa
dec
subb
mov
cmp
mov
loopne
pop
and
push
das
sbb
fcoml
and
dec
mov
test
iret
mov
mov
mov
lcall
sbbl
jae
in
and
hlt
xchg
js
rcrb
or
sbb
mov
in
gs
loope
out
data16
jg
jg
push
mov
mov
in
lods
shlb
pop
mov
fwait
bound
mov
popf
dec
push
cli
addr16
mov
push
mov
jo
pop
test
cmpsb
pop
or
push
mov
xchg
and
shrb
loop
aam
jmp
into
ljmp
jp
xchg
es
fstl
jl
pushf
pop
push
enter
cmp
bound
push
pop
jge
cmpsl
bound
jl
or
lcall
jne
inc
lret
xor
pop
popa
cmp
out
mov
mov
divb
lret
addl
stos
mov
testb
sar
shl
mov
push
shrl
jl
ja
jnp
add
lcall
sub
add
into
cs
inc
cmp
xchg
je
mov
pop
addb
sbb
cmp
sti
test
sar
arpl
aaa
cltd
sahf
or
xlat
add
mov
in
out
fs
mov
cmp
xchg
dec
addr16
jno
bound
mov
add
mov
xor
jo
cli
lcall
rcl
push
cwtl
sub
std
pop
out
hlt
push
nop
jne
int
inc
lods
or
cmp
notl
fidivrl
inc
or
mov
dec
js
lods
sbb
lcall
imul
or
movsb
jae
scas
pop
aas
dec
sbb
inc
dec
dec
lcall
movsl
into
inc
scas
ja
outsl
push
and
pop
out
bound
out
and
jg
cs
mov
ss
jmp
test
imul
and
imulb
call
cld
mov
es
mov
test
dec
pop
jmp
xor
test
dec
shr
lds
jmp
sub
test
jmp
mov
popa
and
nop
jle
loop
add
push
aad
nop
mov
aad
jmp
cmp
aam
pusha
jnp
adc
mov
movsl
mov
fstl
int3
aaa
dec
or
and
stos
mov
in
push
jp
xchg
sbb
push
mov
push
popf
mov
andl
xor
sub
jle
or
aas
xchg
xor
in
pop
arpl
aad
lcall
ret
add
mov
mov
xchg
shll
jns
adc
or
lahf
jnp
sahf
in
jp
pushf
in
fwait
xchg
lcall
fnstenv
mov
ret
pop
test
jmp
mov
es
movl
leave
jo
mov
pop
and
data16
xchg
cmpsl
xor
jo
popa
sub
or
lret
pop
fisubrs
mov
jle
out
dec
mov
in
hlt
mov
dec
lret
cmp
cmc
shrl
add
mov
fisttps
andl
jp
mov
mov
ljmp
mov
push
mov
xchg
jne,pn
pop
sub
sub
inc
cmpb
aaa
fldl
add
cmp
dec
cmp
sbb
jg
stos
push
andb
push
sub
scas
or
mov
sahf
imul
mov
dec
mov
insl
sub
lret
test
xchg
jge
lods
or
pop
leave
lds
int3
leave
xchg
xor
call
xchg
mov
sub
js
iret
inc
mov
lcall
lret
popf
mov
or
loope
mov
jecxz
mov
sarl
cltd
cmpsb
cmp
dec
cmpsb
cmp
push
arpl
cmpsb
es
cmp
mov
cmpsl
sub
ljmp
cmc
cmp
je
cmp
aaa
pop
mov
xor
insl
mov
aaa
mov
jecxz
push
imul
or
outsl
inc
add
fsubs
dec
adc
xchg
sbb
into
cli
shrl
popa
imul
andl
rorl
inc
fxch
repnz
insl
jbe
and
sub
in
mov
or
pusha
mov
push
push
bound
leave
push
andb
test
mov
je,pt
pusha
out
pcmpeqd
cmp
stos
sub
pusha
pop
xor
lahf
jae
add
xor
pop
mov
rorl
mov
test
ret
mov
lock
push
push
stos
movsl
enter
cltd
popa
sub
rcll
dec
ljmp
std
stos
sbb
mov
leave
and
and
xor
inc
dec
mov
push
clc
jp
dec
lahf
notl
and
imul
enter
cmp
xor
push
sub
sbb
icebp
mov
cmp
andb
outsl
pusha
mov
popf
adc
mov
popf
cmpsl
fsubl
repz
jl
dec
xor
mov
pop
sbbb
mov
idivl
mov
movsb
stos
xor
lret
mov
call
mov
adc
js
imul
push
iret
jg
movsb
jmp
sbb
in
repnz
leave
movsb
ljmp
leave
sbb
xchg
call
mov
xchg
ds
in
test
or
cmpsl
sub
xchg
test
pushf
sbb
xchg
movsl
xchg
ds
subb
ds
jecxz
sub
sub
ss
insb
sbb
mov
xchg
mov
loope
notl
jle
mov
jno
jmp
inc
testb
pop
jno
push
mov
test
jne
lahf
push
lret
and
arpl
imull
mov
enter
insl
inc
dec
out
cwtl
or
lea
inc
aaa
mov
es
aaa
add
jmp
sbb
sub
lahf
loop
test
xchg
scas
and
add
xchg
test
out
imul
lret
mov
lods
add
jge
popf
jno
arpl
ret
stos
xchg
xchg
int
lahf
aas
pop
test
pop
stc
popa
inc
into
dec
ret
retw
scas
into
and
lods
faddl
cmp
push
mov
mov
mov
cmpl
out
nop
lret
mov
scas
add
mov
lock
fisubs
fcomip
test
loopne
cmp
dec
sbb
xchg
cmp
pushf
ja
jp
jg
cmp
pop
sbb
push
cmpsb
repz
push
es
outsl
ficompl
pop
mov
mov
or
push
or
ljmp
xor
leave
in
es
mov
enter
ss
loop
jmp
mov
and
mov
iret
mov
jne
and
test
pop
mov
ds
aas
mov
xor
cmp
mov
mov
jecxz
pop
mov
or
cmp
push
fs
cld
test
cmp
je
mov
rcll
xchg
xchg
sub
mov
popa
add
divb
jecxz
mov
xchg
mov
jns
test
sarb
dec
test
jae
mov
pop
test
fwait
popa
into
jae
outsl
mov
pop
sub
xor
sbbb
mov
mov
shll
or
mov
xor
out
mov
adc
in
aas
push
or
movsl
stc
enter
cld
in
mov
cltd
stc
mov
mov
mov
jne
mov
pop
and
or
xor
sub
or
cmp
mov
and
test
mov
outsb
dec
mov
repnz
mov
mov
mov
or
in
hlt
push
lret
mov
sub
testb
push
mov
pop
mov
xchg
cmpsl
sbb
xchg
sub
ljmp
lds
mov
pop
shl
mov
into
pop
dec
sub
jbe
and
aad
notb
leave
and
lea
ficoml
nop
pop
or
inc
into
jecxz
xchg
cmp
jne
jbe
js
jmp
adc
dec
cmc
fcmovb
dec
adc
pop
mov
sub
lods
test
fbstp
mov
mov
dec
mov
nop
pop
lods
sbb
pusha
cmpsb
int
stos
xor
add
sub
ret
data16
loop
lcall
sub
add
push
cmp
movsl
cmp
outsb
jl
int3
sub
xchg
movsl
testl
test
pop
mov
mov
imulb
orb
lahf
aas
sub
imul
cmc
aas
cmp
mov
shlb
adc
or
insb
fldcw
inc
es
mov
jae
add
aaa
sub
jo
or
std
es
adc
lret
pop
jp
jne
nop
in
or
xchg
int3
in
test
sbb
dec
shr
mov
aam
cmp
shlb
cmp
out
ja
out
sbb
xchg
xchg
or
cmpsl
insl
sahf
mov
xlat
mov
hlt
mov
pop
sbb
jo
push
pop
mov
dec
xor
inc
cmpl
or
push
inc
mov
cmp
pop
cli
push
movsl
jmp
jnp
jmp
cmp
stos
jg
lock
xchg
mov
xor
mul
adc
or
push
mov
sub
inc
ret
xor
ds
pop
imulb
aas
fsubrl
sub
mov
xor
jae
leave
pop
mov
js
dec
xorl
mov
mov
hlt
xchg
repnz
xchg
xor
scas
jecxz
push
inc
mov
lods
cwtl
sub
mov
pop
mov
push
pop
nop
out
dec
mov
test
mov
or
movsb
and
push
adc
and
mov
mov
fnstsw
js
sahf
gs
das
mov
sbb
mov
negb
lds
push
dec
mov
inc
jo
cltd
mov
movsl
in
mov
push
sub
dec
sub
jne
cmpsl
and
xchg
vmread
pop
add
mov
test
mov
xchg
adc
pop
lcall
icebp
mov
cmp
jecxz
inc
sahf
jmp
xchg
out
insl
clc
repz
cs
and
lods
divl
cmpsl
lea
xor
lret
movsl
call
pop
sub
out
cmp
mov
push
ficomps
subl
repnz
mov
xchg
out
sub
lods
add
jge
mov
pop
fwait
mov
sub
aas
mov
fdivl
mov
out
jmp
fsubs
xorl
in
mov
orb
loop
sub
pop
or
fcmovnb
psadbw
call
adc
mov
jmp
pop
or
mov
mov
test
adc
data16
movsb
cmp
loop
shll
jmp
jl
dec
out
sbb
test
cmpsl
xlat
sub
mov
sub
push
jg
jmp
call
js
das
push
sub
fldt
icebp
jge
insl
js
js
das
pop
stos
jnp
inc
pop
ret
outsb
shrb
es
iret
adc
hlt
js
cmp
cli
stos
daa
push
mov
lods
add
popa
mov
ljmp
lahf
xchg
lods
push
flds
aaa
lods
ljmp
stos
push
sbbl
and
into
ljmp
or
mov
and
aaa
push
shlb
xor
hlt
addl
sub
mov
popa
pop
push
mov
cli
mov
cmp
pop
jg
lods
test
aas
mov
ret
ltr
hlt
mov
stos
imul
mov
movb
lcall
xchg
jo
test
jmp
xchg
stos
shll
sub
rorl
pop
xor
pop
loopne
aaa
loopne
or
push
shll
mov
movsl
push
xor
push
popa
mov
jno
cmp
mov
mov
xchg
ret
scas
pop
cmpl
adc
xchg
subl
orl
leave
inc
mov
xor
jbe
adc
js
mov
sbb
dec
pop
jne
ljmp
xor
push
test
jg
add
in
aad
loopne
sbb
jne
or
rep
lret
add
inc
pop
cmpsl
sti
or
fwait
sbb
neg
fdivl
je
xchg
xchg
jae
mov
or
je
cmpb
xchg
fldcw
hlt
push
insb
mov
test
adc
insl
repnz
testb
fsubrl
cmpsb
mov
nop
fwait
aaa
xor
cltd
jecxz
enter
stos
cmp
jl
dec
jecxz
cwtl
jg
shl
jo
jnp
cmpsl
arpl
test
jae
xor
lret
fidivrs
je
jmp
sub
sbb
inc
movsl
cmp
out
nop
sahf
enter
mov
int
in
push
xchg
sub
imul
ficompl
ja
push
jb
aas
fsubrs
push
sub
inc
pop
js
xchg
add
adc
popa
into
or
testb
pop
lea
mov
aaa
adc
and
sub
movsb
fcomip
imul
popa
daa
test
lods
enter
mov
jl
lods
mov
repz
or
test
out
dec
adc
push
sbb
addr16
jp
rorb
mov
cmpsb
testb
mov
pop
imul
jecxz
pop
loopne
xchg
dec
pop
cmp
push
cmp
xor
repnz
pop
and
pop
sahf
pop
mov
in
mov
or
mov
xor
lret
sbb
dec
ficoms
mov
mov
push
mov
mov
loopne
outsl
lods
loopne
pop
mov
push
sbb
fists
lds
lret
push
sub
pop
leave
jns
cmc
int
cwtl
xor
cmp
mov
in
sbb
stc
jo
mov
shlb
scas
sti
mov
inc
inc
mov
stc
int3
aaa
or
test
dec
cmp
cmp
mov
jmp
repz
push
push
push
push
jg
rcll
jne
or
aad
bound
sbb
shll
aam
sbb
movsl
xchg
cmpsb
iret
outsl
repz
ds
dec
es
mov
mov
cmp
movsb
cmp
adc
leave
mov
cmpsb
lret
adc
sub
sub
cmp
cmp
cmp
and
es
out
lret
out
mov
inc
pop
and
les
xchg
mov
or
cli
stc
push
pusha
mov
fisubrl
jmp
sbb
in
stos
jmp
mov
out
mov
cmp
notl
cmpsb
xor
shll
shlb
push
mov
stc
sub
xchg
int3
fldz
sar
arpl
arpl
mov
lahf
push
sbb
or
sti
inc
ret
or
sub
cltd
outsb
dec
rcrl
bound
pop
mov
stos
out
adc
jl
into
daa
pop
arpl
inc
xchg
jbe
mov
mov
ja
sub
scas
mov
add
jne
sub
lret
sti
sbb
in
mov
ss
add
test
stos
add
in
mov
cmp
mov
testb
jne
lret
and
sbb
loop
xchg
jge
les
imul
mov
mov
sub
inc
sub
xor
cmc
leave
test
pop
fldenv
cmp
je
fsubrl
data16
mov
aam
shlb
xor
mov
insl
loopne
lcall
call
mov
fimull
ss
push
imul
jmp
mov
jbe
in
shl
hlt
inc
stos
imul
dec
mov
xor
and
cmp
xor
mov
xor
je
test
ds
sub
xchg
dec
mov
cmpsb
into
loop
cmp
aaa
mov
bound
push
test
mov
cltd
subb
jo
hlt
outsl
xchg
imul
mov
adc
dec
adc
mov
jle
xchg
cmc
jle
loope
dec
iret
inc
andl
js
sbb
vcvtsi2ssl
jl
loopne
addr16
pop
push
lret
cmp
stc
sub
sbb
sarb
sbb
sbb
aaa
or
rorl
dec
loopne
jmp
jno
cmp
push
dec
xchg
or
cwtl
lea
ret
jo
and
ret
cmp
lods
pop
push
bound
andb
push
ret
jl
jmp
mov
push
leave
mov
sub
pop
adc
loop
mov
or
sti
sti
jns
stc
cmpsl
adc
pop
jge
xor
push
aad
inc
mov
out
enter
in
sub
or
jl
mov
mov
pop
repz
mov
mov
xchg
jne
push
dec
out
mov
push
hlt
mov
mov
in
or
push
sahf
cmp
mov
into
cmpsl
pop
cmp
jns
sbb
es
xor
lahf
mov
js
cmpsl
and
pop
push
movsl
test
add
mov
out
fsub
mov
pop
cli
mov
or
test
jnp
mov
jae
rolb
inc
mov
loop
subb
add
xchg
lods
enter
cmp
jp
insl
mov
shl
or
dec
imul
and
stos
lahf
aad
cmpsl
adc
repz
dec
xchg
mov
cmp
outsl
jge
loop
push
jne
fistl
jbe
mov
lods
sbb
cmpsl
into
and
xchg
aas
mov
cmp
inc
stos
ret
daa
std
mov
cmp
xchg
aaa
int
push
popa
push
shlb
mov
jle
aad
push
lods
hlt
movsb
jg
xchg
in
inc
test
lret
lahf
dec
lea
xor
repnz
test
icebp
stc
jmp
lods
repz
pop
aad
push
sbb
int
push
jg
imulb
enter
scas
in
fisubrl
push
pop
or
and
out
mov
ja
mov
ss
into
stc
mov
add
shll
xchg
fistpll
xchg
sahf
lcall
lds
je
mov
leave
sbb
stc
push
out
cmp
xchg
pop
dec
popw
cmpsl
popa
mov
bound
push
pop
fdecstp
mov
mov
mov
in
dec
dec
mov
mov
and
add
inc
xchg
sbb
imul
jmp
or
mov
das
incl
mov
and
movsl
pusha
push
scas
add
add
jno
sbb
push
mov
shll
adc
mov
and
mov
xor
or
mov
xchg
insb
push
and
dec
dec
lea
ja
insb
stc
test
idiv
xchg
jbe
inc
lret
clc
inc
mov
sahf
xor
pop
adc
mov
push
rcrb
pcmpgtw
out
and
test
or
leave
test
pop
and
cmpsl
into
xlat
mov
sub
fsubl
cmpsb
sbb
rcrl
lea
leave
xor
gs
mov
jecxz
clc
sbb
ja
jp
flds
cmp
jnp
xchg
icebp
mov
add
fs
mov
test
lcall
movsl
jecxz
mov
sbb
mov
xchg
mov
xchg
arpl
std
dec
and
stos
nop
add
ja
aas
scas
or
inc
mov
add
inc
ret
dec
xchg
stos
sbb
cmp
jae
xorb
inc
fisubs
scas
arpl
jae
ss
sub
cmpsb
test
xchg
cltd
test
pop
xchg
pop
icebp
mov
std
pop
sub
jecxz
mov
mov
lods
loope
test
jbe
shlb
insb
dec
xor
xlat
imul
mul
popf
sbb
xor
repz
mulb
sbb
pop
out
push
inc
stos
and
negb
int3
mov
ret
imul
leave
xchg
leave
into
dec
inc
sub
mov
lock
and
fdiv
js
sbb
xor
mov
pushf
out
ret
sbb
jbe
cmp
out
push
sub
mulb
clc
mov
inc
and
ljmp
dec
arpl
cmp
loopne
push
mov
mov
shrl
mov
loop
mov
testb
and
jmp
ljmp
mov
and
cmp
insl
sub
fnsave
pop
mov
shll
lock
and
add
sbb
leave
pop
adc
add
scas
xor
sbb
adc
inc
mov
enter
not
mov
sbb
fstps
mov
jge
cmp
jl
stos
add
xchg
les
mov
pop
cmpsl
mov
fnstenv
xchg
hlt
xor
les
mov
and
dec
mov
mov
xchg
repz
pusha
xchg
jae
jp
push
mov
pop
pop
sbb
lds
lds
sub
mov
xchg
lock
pop
xchg
dec
mov
sub
xchg
shll
stos
cld
cmpsl
lea
movsl
outsl
xor
dec
out
sub
xor
cmpsl
hlt
test
aaa
cli
xchg
cmp
divl
jae
gs
ror
cli
popa
jecxz
and
jne,pt
clc
pusha
movsl
mov
sbb
xchg
imulb
push
xchg
aas
jbe
popf
test
in
push
xor
movsb
lret
mov
or
adc
inc
pop
fmuls
sbb
mov
mov
scas
dec
mov
xor
out
lret
nop
inc
xchg
enter
mov
sbb
mov
cmp
insb
mov
mov
outsl
lret
pop
pop
sub
in
test
sbb
jno
adc
jmp
enter
cmpsb
jne
mov
jg
movsl
test
pop
xor
jp
cltd
cmp
mov
mov
es
iret
lock
clc
ret
fucomi
mov
push
sbb
xor
subb
inc
mov
pop
daa
mov
sub
or
imul
data16
jmp
push
out
movsb
movb
pop
sub
outsl
int3
push
mov
mov
push
leave
test
mov
mov
mov
cmpsb
cli
mov
pushf
addb
mov
dec
stos
fsincos
insl
adc
mov
scas
into
out
sub
scas
sub
loop
jl
mov
cmp
push
jae
inc
mul
xchg
xor
cltd
and
mov
xchg
popa
jg
jae
das
loope
ret
pop
inc
and
dec
aaa
stos
pushf
lret
test
adc
mov
shrb
adc
add
sub
cltd
mov
xor
mov
inc
test
cs
in
cmp
pusha
mov
in
or
cltd
mov
addl
test
stos
cmpsl
sub
sbb
jge
push
push
iret
js
mov
insb
cli
popa
inc
xlat
in
mov
movd
sbb
mov
cmp
xchg
xor
cmc
gs
test
neg
test
stc
mov
test
sti
push
gs
pop
shll
mov
scas
bound
dec
test
xchg
xchg
mull
mov
loop
sbbb
or
loope,pt
sbb
sub
sub
nop
mov
data16
sub
stos
dec
imul
sub
in
add
test
or
sub
ficoml
inc
mov
stos
dec
mov
test
lret
loop
cmp
out
inc
jns
pushf
test
nop
xor
sub
ja
scas
xchg
outsl
ret
dec
int
cld
mov
mov
cltd
test
loopne
dec
imul
and
bound
outsl
push
adc
shl
hlt
sub
push
test
sub
cli
mov
xchg
pop
loope
test
hlt
loop
aas
fcoms
dec
insb
mov
std
or
addr16
sub
inc
xor
xor
data16
pop
mov
mov
fisttps
sbb
decb
scas
jecxz
add
mov
pop
rcl
lds
adc
add
cmpsb
xor
scas
pop
lcall
lea
sub
imul
and
jl
add
and
dec
jp
aad
pop
mov
sbb
movsl
sub
orb
ja
lcall
cmp
add
mov
outsb
bound
scas
cmpsl
xchg
xchg
lock
cmp
clc
iret
ss
call
mov
mov
data16
ss
data16
cmp
lods
imul
adcb
xor
lret
push
stc
arpl
cmpsb
shll
movsb
insl
pop
movsb
bound
mov
in
jmp
mov
fnstcw
in
mov
xchg
js
mov
push
jp
sbb
pusha
jle
arpl
and
stos
inc
mov
pushl
push
jp
aas
xor
inc
je
dec
jbe
cmpsl
dec
lods
jp
loope
jmp
and
lds
cmp
sub
testl
loop
iret
xor
daa
mov
test
push
mov
or
shrd
jmp
into
add
and
nop
mov
cmpsb
sbb
sub
out
bound
pop
sbb
cwtl
mov
stc
ja
mov
jg
lods
insb
gs
shll
in
test
sub
out
mov
pop
ret
xchg
push
push
loope
popa
mov
xlat
mov
enter
sbb
cli
aaa
cmpsb
insb
pop
jge
cmp
js
xchg
imul
mov
xchg
mov
pop
jecxz
lods
out
jnp
aas
ja
mov
cmp
ficoms
adc
xor
in
aas
add
adc
mov
xor
sub
leave
mov
sub
rcrl
out
stc
dec
rorl
outsb
mov
sub
rcrl
add
mov
push
cld
xchg
ror
pop
mov
jge
lds
addb
sbb
adc
and
imul
iret
mov
call
mov
push
js
inc
adc
pop
mov
aaa
dec
pop
mov
popl
sub
sub
out
push
dec
leave
mov
push
xchg
icebp
xchg
adc
mov
arpl
es
lods
leave
jae
rorl
lcall
xchg
mov
fildll
stos
xchg
cmp
inc
stos
jle
imul
mov
subl
lds
mov
xor
mov
xchg
popa
mov
push
out
mov
mov
or
leave
jno
leave
jns
sub
cmp
out
push
scas
mov
mov
and
pop
pop
mov
fwait
xor
xor
sbb
shlb
mov
shll
xchg
mov
sbb
int3
inc
push
in
test
or
cmpsl
test
sub
mov
xchg
jne
pop
loopne
adc
cmp
mov
test
ret
mov
add
cmp
mov
mov
fmull
mov
rcr
sub
dec
sbb
or
jo
mov
mov
lahf
mov
or
jge
mov
enter
sahf
add
inc
jecxz
adc
cmpsl
mov
add
into
sub
js
andb
add
lods
mov
jg
iret
leave
mov
xor
loope
shl
pop
stos
repz
sub
push
and
cmpsl
mov
pop
inc
and
loope
sarb
in
outsb
test
mov
mov
push
cmpsl
rcll
and
sbb
add
lcall
jne
or
out
pop
cmpsl
jl
movsb
fs
jp
fisubl
xchg
mov
leave
lcall
outsl
decb
imul
mov
jl
rcrl
adc
mov
out
movsb
pop
sub
es
je
or
mov
mov
repz
push
pop
out
xor
sarl
cld
sub
scas
out
xor
scas
sbb
addr16
push
movsb
bound
dec
std
test
xchg
jmp
xacquire
mov
mov
cmp
lea
sti
mov
adc
ficompl
loop
xchg
lock
loopne
sub
mov
xchg
data16
stc
ja
cwtl
mov
fistps
outsl
and
jbe
adc
add
leave
test
mov
inc
lret
divb
es
mov
mov
push
lcall
mov
cld
in
sbbl
or
leave
mov
inc
mov
or
dec
xchg
mov
or
outsb
cltd
mov
arpl
jae
mov
sbb
adc
movsl
mov
cmp
stos
movsb
pusha
lods
gs
mov
dec
jmp
mov
lcall
xchg
sahf
stc
ss
pop
mov
insl
js
int
test
in
stc
movsl
jnp
mov
dec
in
lods
repnz
mov
mov
mov
push
ss
loope
or
xor
clc
mov
jg
xchg
dec
orl
cmc
jl,pn
popa
or
push
cwtd
adc
imul
add
mov
cmpsb
pusha
sub
loopne
pop
out
mov
push
in
call
mov
or
mov
hlt
inc
jns
sbbb
or
test
mov
push
mov
xchg
xchg
enter
sbb
pop
push
push
movsl
stos
das
std
fs
nop
push
push
mov
push
jge
mov
lret
add
mov
outsl
cld
jb
gs
data16
jge
rorl
popa
push
cmp
pop
xchg
xchg
mov
jne
test
jmp
shrb
shr
cmp
loop
addl
xchg
jne
cmp
out
popf
inc
loop
mov
sbb
negb
jbe
fwait
jae
mov
mulb
pop
jecxz
cmp
fsubrs
xor
add
mov
sub
mov
dec
mov
pop
mov
xor
mov
xchg
out
pop
mov
mov
div
xchg
mov
cmc
mov
sahf
dec
sbb
or
xor
and
mov
mov
fcmovnu
mov
sub
pop
fcmovnbe
push
iret
jl
fildll
mov
mov
inc
cmp
dec
or
push
icebp
inc
or
or
xor
testl
imul
testl
and
test
leave
and
clc
mov
mov
xchg
mov
loop
fs
xor
sbb
popa
inc
jge
aad
std
xchg
mov
lahf
xchg
fdivrl
hlt
pop
cwtl
inc
jecxz
or
sub
push
sub
popa
jmp
mov
arpl
pop
clc
lods
aam
and
mov
pop
lret
test
imul
push
arpl
sbb
popa
movb
jbe
mov
gs
and
in
movsb
mov
bound
dec
imulb
cmp
push
dec
fldl
mov
popa
and
fistpl
xor
pushw
in
fbld
fwait
mov
lcall
jg
cmp
mov
xchg
sti
sahf
sub
lds
leave
or
pop
ss
mov
imul
cli
test
test
inc
and
sbb
cmp
je
xor
pop
outsb
cmp
cmp
or
xchg
ffree
imul
in
sbb
ficomps
out
mov
test
inc
jb
int3
lods
aaa
bound
mov
dec
xchg
jmp
nop
and
aad
call
es
cmp
cld
mov
scas
imul
push
into
push
xchg
xchg
sub
xor
xchg
pop
or
scas
xchg
mov
data16
mov
insl
imulb
popf
inc
mov
or
lahf
jp
dec
inc
mov
xchg
filds
imul
cmp
rorl
mov
fistl
stos
mov
sbb
xchg
pop
and
mov
mov
cmovns
leave
notb
sarl
dec
lret
sub
mov
test
aam
sarl
xor
cmpsl
hlt
out
nop
shrl
mov
imull
int3
push
shr
dec
loope
lcall
mov
iret
jmp
movsb
shll
stos
mov
arpl
roll
or
add
in
loope
pop
push
cmpl
loope
lret
int
daa
jl
push
cld
test
lcall
mov
push
call
xchg
scas
leave
cmpsb
cli
imul
movsb
enter
mov
mov
test
repnz
mov
out
cmpsl
bound
sub
dec
sti
testb
sub
sarl
adc
fs
scas
lds
xchg
test
add
lretw
xchg
sbb
sbb
sub
mov
xor
fmull
dec
sbb
aas
cld
mov
cmpsb
daa
enter
push
in
mov
mov
inc
pop
cwtl
gs
mov
lahf
std
add
lds
test
insb
inc
pop
scas
mov
pop
gs
data16
outsb
leave
cmpsb
test
out
popf
mov
jle
mov
jp
dec
or
cmp
stos
lods
outsl
je
cmp
sbb
jl
test
xchg
jno
inc
dec
jnp
lods
rcl
lea
adc
mov
or
cmp
mov
sub
jne
mov
mov
xor
repz
enter
idivl
mov
add
out
mov
mov
add
push
cmp
mov
lods
pusha
fstps
xorl
popf
pusha
mov
mov
addb
push
add
pop
xchg
xchg
mov
adc
std
dec
mov
cli
data16
cli
movsb
inc
xchg
mov
jmp
insb
jp
xchg
inc
out
push
popa
jmp
pshufw
mov
scas
adc
mov
call
pop
das
inc
xchg
loopne
rcr
push
sub
dec
jb
fisttps
popa
jnp
movsl
lret
or
in
mov
push
cmp
aam
mov
dec
adc
push
mov
jae
fimull
pusha
faddl
cltd
jb
cmpsb
jne
mov
sub
xchg
jbe
dec
push
adc
movsl
mov
pop
mov
fldenv
movsb
xor
out
inc
mov
into
mov
jp
std
in
icebp
and
xor
adc
mov
fdiv
test
lea
or
pop
add
cld
xchg
push
xor
cmpsb
fldenv
mov
aad
jge
inc
dec
mov
add
mov
testl
insb
or
sbb
jmp
or
dec
out
xor
dec
sub
icebp
dec
js
sbb
ret
insb
push
adc
xor
dec
sub
pop
ljmp
mov
lcall
sub
into
imul
sahf
dec
pcmpgtb
jae
mov
dec
add
fisubrl
mov
movsw
cld
addr16
cmp
imul
push
js
dec
push
in
out
sub
jmp
xchg
mov
and
imul
leave
imul
insl
push
xchg
sbb
lods
rcl
fidivrs
ficoml
cmpsb
jns
xorb
xchg
cmp
shr
cmp
push
mov
ljmp
into
cmpsl
mov
pop
push
push
out
sbb
sub
ljmp
jl
shlb
addr16
shll
stos
xchg
jl
pop
mov
mov
jmp
lahf
mov
fistpll
cmp
scas
bound
xchg
mov
test
sti
adc
sub
xor
push
push
or
xchg
adc
nop
aam
fwait
mulb
addr16
ljmp
pop
inc
pop
xchg
jo
inc
dec
xchg
cli
sub
dec
jmp
sbb
inc
into
call
mov
mov
lds
mov
xchg
push
lods
mov
mov
lret
shrl
xchg
into
pop
push
push
clc
pop
lret
mov
aam
mov
jne
xchg
orl
sarl
cmp
mov
in
inc
enter
dec
cld
sbb
xchg
fs
in
cmc
aaa
xor
icebp
jmp
ja
mov
sub
xor
or
aad
test
and
and
loope
cmp
in
jge
xchg
es
pop
push
jo
mov
movsb
xchg
mov
mov
cmp
jnp
mov
xchg
cmc
sysenter
or
insb
lds
xchg
dec
pushf
mov
test
imul
xchg
mov
cs
push
mov
mov
pusha
pop
sbb
insl
fdivr
orl
and
add
xchg
mov
jb
decb
dec
addb
mov
test
cmpsl
push
dec
vsqrtss
aam
mov
test
int
movsb
fldl
imull
enter
add
mov
loopne
mov
jnp
sbb
jle
or
add
int
dec
scas
test
cld
cmc
sub
add
movsb
push
popf
imul
dec
sbb
and
loop
jnp
call
or
xchg
sub
cmpsl
aam
pusha
mov
push
js
xchg
out
loopne
fldenv
jne
cmc
sub
ds
ss
xlat
jge
mov
or
cmp
ja
mov
xchg
es
xor
push
inc
in
xor
sbb
ja
adc
cmp
push
mov
add
jmp
cmp
mov
pop
movsb
or
pop
push
fnstenv
mov
lods
cmp
sbb
mov
stos
and
stos
push
lea
mov
push
mov
mov
dec
xor
or
not
daa
or
in
mov
clc
mov
ljmp
xlat
in
loopne
jae
mov
cmovne
cmpsl
data16
mov
cmp
sub
add
loop
add
popa
mov
and
mov
mov
test
or
repz
data16
push
push
jne
xchg
repnz
dec
cmpsl
cmp
flds
mov
and
mov
std
xchg
sbb
mov
push
xchg
cld
mov
jae
ret
push
push
or
sub
jg
and
loopne
in
cmp
xchg
sub
sub
mov
add
int3
adc
fwait
sub
mov
dec
mov
push
mov
or
cmp
and
out
sbb
and
fidivrl
cltd
mov
sbb
adc
or
sbb
and
mov
fs
sub
cltd
into
daa
jp
xor
push
cmc
lret
pop
adc
shlb
cmpsb
cmp
sti
mov
sbb
rol
aad
push
pop
xor
popa
jecxz
cmpsb
in
jno
shrb
xchg
mov
jae
or
mov
adc
mov
hlt
pop
sbb
ss
pop
es
into
test
loop
mov
test
popf
cli
mov
mov
mov
into
mov
sub
mov
xor
push
loopne
leave
scas
fidivl
fidivrs
addr16
xor
sbb
adc
es
pushf
inc
cwtl
mov
add
mov
mov
insl
mov
popa
sti
jae
mov
push
mov
pop
ret
xchg
sub
into
add
and
cmpsb
repnz
bound
lahf
sub
aam
jle
mov
lea
subb
popa
js
pop
nop
push
adc
cld
out
and
xor
sub
xchg
shrl
add
mov
inc
sub
cmpsl
dec
in
jne
out
data16
ret
dec
nop
pop
stos
jmp
push
outsl
mov
je
dec
or
xor
test
or
into
in
mov
push
or
push
addr16
push
pop
outsl
push
cmpsb
push
and
mov
in
or
stos
dec
xchg
dec
movsb
pop
ds
rorl
jmp
mov
das
cs
dec
cltd
add
jbe
and
popa
je
lcall
inc
dec
jl
sbb
call
mov
sti
push
lods
push
dec
mov
cwtl
fwait
pop
cmp
push
add
inc
sub
add
sbb
cmp
mov
std
mov
pop
xchg
xchg
push
and
jmp
enter
pop
adc
shll
xchg
inc
int
mov
leave
lret
stos
dec
loop
sub
pop
pusha
insb
mov
or
stos
into
push
xchg
jo
jns
je
aad
call
orl
sub
mov
mov
int3
imul
sbb
lcall
inc
mov
push
jg
mov
inc
insl
leave
pop
adc
mov
stos
int3
cmpsl
xchg
js
xchg
data16
xchg
in
pop
mov
pop
insl
jle
dec
sbbb
jle
mov
scas
in
mov
xor
subl
bound
sti
jns
stos
push
andb
mov
fldcw
and
lret
pop
loop
dec
out
push
outsb
clc
iret
add
mov
loop
fdivr
mov
jg
insl
mov
inc
mov
cmp
ds
inc
popa
lcall
or
iret
ret
pushf
cmp
fsubrl
dec
xor
and
add
cmp
xchg
in
sbb
pop
cld
ljmp
lcall
push
insl
jle
and
mov
movsl
jne
in
add
ds
inc
dec
mov
mov
bound
test
fwait
jmp
lods
insb
xchg
mov
sbb
in
mov
mov
push
dec
popa
mov
testl
out
cs
aad
mov
inc
test
xorb
jns
lret
mov
ficoms
fcmovu
divb
xor
xchg
mov
mov
shll
mov
mov
bound
mov
inc
push
outsl
and
dec
out
jl
mov
sub
jmp
jns
mov
scas
aad
jg
mov
pusha
fistl
mov
orb
gs
xlat
lods
test
or
bound
sub
pusha
fisubl
mov
cmpsl
mov
div
mov
in
ljmp
mov
mov
leave
movsb
cmpsb
cmp
jp
xchg
cmp
insl
cli
pop
jnp
pop
push
insl
mov
mov
dec
lcall
pop
sbb
jo
mov
xchg
mov
fnstsw
daa
inc
mov
lahf
je
scas
lret
sbb
aas
dec
addr16
sub
lea
scas
pop
cmp
popf
test
pop
aad
dec
movsb
mov
xchg
sub
call
into
and
stos
sub
out
and
imul
enter
mov
mov
cmp
fldl
sbb
mov
outsl
adc
js
into
mov
cs
xor
mov
scas
mov
sub
pushw
or
in
ja
loopne,pt
push
rsqrtps
outsl
out
stos
jl
push
jecxz
fidivrs
movsl
sub
dec
mov
movsl
inc
xchg
lods
cmp
ja
inc
sbbb
mov
jne
cmp
daa
add
or
push
daa
adc
dec
bound
roll
mov
dec
and
es
pop
mov
adc
xor
das
decb
and
sub
addr16
pop
sub
int3
loope
and
bound
mov
sbb
ss
loope
or
push
xchg
aam
divb
loope
jmp
notl
mov
dec
rcll
test
push
inc
mov
data16
pop
jae
fidivl
xchg
push
pop
jg
loopne
xchg
jb
dec
mov
xchg
mov
std
mov
int
xor
jp
loop
or
mov
inc
jo
pop
inc
jae
sub
mov
cltd
leave
mov
ljmp
jae
xchg
scas
ds
idivl
cmpsl
loop
test
or
dec
mov
insb
aas
push
mov
cmp
loopne
test
jp
lret
xchg
test
fidivs
sub
mov
ljmp
ljmp
notl
mov
loop,pt
jae
mov
mov
mov
push
sub
xchg
int
mov
push
push
lahf
dec
sahf
sti
push
movsl
mov
xor
push
test
and
xchg
xchg
jle
sub
js
xchg
lret
mov
inc
xchg
jmp
stos
sbb
cmp
xchg
push
stos
into
arpl
jmp
add
cmpsl
cmp
pop
stos
jns
je
xchg
enter
out
push
cmpsl
std
sar
jle
cs
xor
mov
into
movsl
xor
lods
pop
ret
push
into
pusha
add
mov
mov
jmp
adc
dec
orb
mov
lret
jnp
insb
and
jns
mov
pop
mov
fldcw
out
fsubr
and
lahf
mov
addr16
cmp
jno
and
lds
out
test
leave
out
push
leave
mov
test
leave
in
add
out
cmp
and
cmp
cmpsb
loop
sub
scas
mov
dec
xchg
adcb
shrb
mov
pop
arpl
sbb
xor
adc
xlat
lret
outsl
mov
sub
xor
lock
das
addl
enter
test
add
sbb
loop
call
push
lret
sbb
pusha
es
movsl
pusha
es
movsl
mov
lret
mov
mov
je
popa
dec
in
push
pop
dec
sub
mov
inc
mov
or
and
mov
in
and
sbb
iret
add
int3
out
and
into
mov
fidivrs
xor
pop
arpl
gs
cmpsb
or
js
push
ret
xor
scas
inc
or
divb
add
mov
pop
jae
xor
and
ljmp
aaa
cs
in
jecxz
mov
movsb
mov
aad
test
imul
stos
cmpsb
xchg
cmp
jbe
jbe
mov
loop
bound
pop
pop
fwait
push
in
xor
int
dec
jbe
adc
rolb
incb
dec
jg
loopne
and
jmp
mov
sti
cmp
adc
or
mov
mov
cltd
pop
xor
into
and
test
mov
push
mov
cs
ljmp
test
cmpsb
ljmp
mov
inc
and
jle
imulb
test
xchg
mov
mov
jns
sbb
cmpsb
jg
adc
shr
movsb
push
add
mov
test
mov
popa
mov
movsl
movsl
xor
mov
and
stos
nop
enter
lds
movsb
out
lret
sub
dec
add
sbb
xor
lahf
test
dec
leave
cmpsb
lods
or
or
mov
addr16
clc
xchg
scas
lods
hlt
out
push
insb
imulb
into
scas
mov
or
sub
sbb
stc
into
scas
pop
mov
dec
or
jno
cmp
fcomp
cmp
mov
mov
xchg
xchg
out
test
in
test
in
lea
imul
inc
or
or
sub
mov
xchg
lret
shll
inc
mov
and
enter
idiv
push
test
ffreep
inc
jnp
mov
es
cmpsl
xchg
aas
pusha
pop
mov
push
lods
leave
sub
pop
cmpsb
iret
addr16
les
les
xchg
pop
and
xchg
xchg
vpextrw
lds
aaa
popf
jne
xchg
enter
fldt
push
inc
fmuls
xchg
ret
fldt
mov
js
das
jecxz
mov
adc
push
popa
scas
cli
xlat
fnstcw
dec
xchg
das
push
sbb
pop
loop
add
test
jmp
and
ja
push
mov
push
dec
and
leave
xor
sub
test
mov
adc
mov
xchg
jg
mov
popf
pop
imulb
sahf
sti
mov
ljmp
mov
and
mov
xchg
jp
or
loopne
mov
add
push
jne
and
and
jle
das
test
adc
cmp
lret
or
mov
mov
das
pop
sbb
jge
cs
lds
cmp
mov
and
cltd
or
fists
inc
cltd
bnd
inc
xchg
sarb
movsl
cmp
fwait
cmc
or
ret
sub
mov
mov
xchg
fwait
mov
in
test
movsb
sub
mov
mov
and
xchg
lahf
mov
lea
sub
mov
sub
mov
jne
test
cmpsb
cmpsl
addr16
subl
ljmp
push
or
testl
lret
mov
lret
leave
fisttpl
insb
mov
jp
or
push
jae
add
cmp
jae
sarb
fldt
cltd
xchg
or
xor
cs
xor
jae
push
mov
sub
sbb
xchg
popf
dec
popa
or
jg
mov
mov
mov
ret
mov
loop
bound
sti
adcb
xor
adcl
out
mov
and
fcomps
fdivl
fsubrl
stos
outsl
adcb
out
and
out
out
dec
out
pop
dec
jg
xchg
sbb
in
push
out
mov
in
aaa
mov
faddl
push
sbb
xchg
xor
imul
je
xchg
pushf
xchg
leave
xchg
ficomps
jle
ss
das
fsubs
mov
or
add
call
cmp
jl
xchg
out
je
gs
mov
movsl
push
mov
or
add
ret
xor
cli
int3
push
sti
popa
or
fdivrl
cmp
xchg
xor
stos
aad
jbe
iret
and
dec
data16
xor
movsl
sar
inc
lods
xchg
mov
xor
push
loop
xor
sti
stc
mov
lret
adc
dec
add
jmp
cmc
mov
or
arpl
movsl
aad
fsts
sub
xor
in
ja
dec
es
inc
xor
xchg
jmp
pop
jmp
faddl
mov
mov
aaa
adc
repz
push
adc
test
mov
mov
lret
outsb
jb,pn
arpl
mov
enter
scas
xchg
inc
mov
fcompl
pop
mov
stc
outsb
incb
add
jne
sbb
ficomps
or
in
mov
negl
pusha
lcall
mov
jl
out
adc
push
mov
mov
or
push
fidivrl
inc
mov
insb
jl
loopne
ds
xchg
movsl
sub
adc
and
in
mov
outsb
fdivrs
sbb
mov
jae
cmp
push
mov
add
mov
dec
xchg
div
es
les
mov
dec
or
push
out
mov
xchg
sti
xchg
xchg
jae
ror
xor
jb
scas
leave
mov
mov
scas
sbb
fbld
and
imul
jmp
loopne
leave
mov
mov
int3
test
and
sbb
ds
icebp
add
mov
mov
push
inc
cs
xor
or
cmp
inc
pop
xlat
nop
mov
fwait
mov
subl
das
popf
xchg
lcall
enter
mov
in
and
xchg
sbb
test
xchg
push
sbb
dec
or
jecxz
cmc
ret
or
int3
daa
loope
jle
xchg
jns
daa
aaa
mov
lret
dec
test
cli
mov
adc
fstpt
mov
push
mov
push
fldenv
mov
mov
je
lock
inc
scas
jns
call
mov
sbb
mov
mov
cmp
cmp
popf
testb
mov
jbe
jmp
and
cmp
mov
cmp
and
or
xchg
sub
ljmp
test
pop
adc
filds
dec
mov
in
add
mov
into
repnz
cwtl
int3
cltd
out
dec
sbb
decb
jg
sub
pop
fwait
push
xchg
and
leave
into
lods
jl
mov
dec
loop
jns
cmpsl
and
cmpsl
std
pop
or
ljmp
inc
fstpl
shl
sahf
and
aaa
xchg
pop
sub
and
movl
mov
mov
pop
cmp
inc
movsb
nop
jne
mov
mov
shll
jae
cmp
mov
int3
xchg
xchg
mov
mov
jns
mov
mov
ds
nop
mov
fs
xchg
xor
cmp
dec
in
mov
data16
sarb
pop
mov
add
inc
fnstsw
mov
imul
js
and
cmp
mov
repnz
fsubl
es
clc
call
leave
xor
cmp
or
or
and
cmpsb
and
stos
lret
cmp
orl
mov
movsb
add
fildll
mov
popf
imul
push
pushf
enter
xor
movsb
dec
sbb
mov
pop
jecxz
and
xchg
loopne
mov
andl
dec
mulb
fisubl
jo
std
aam
xor
mov
shll
test
insl
jbe
dec
pop
fs
nop
fs
pusha
push
mov
outsl
stc
mov
data16
fldl
ret
testb
sbbb
adc
cli
mov
sbb
mov
mov
les
push
stos
push
test
js
cli
xchg
push
movsb
das
popa
add
or
subl
dec
or
xchg
jge
xchg
scas
dec
push
movsl
sub
mov
outsb
add
imul
mov
mov
push
add
outsb
dec
mov
cmp
xor
mov
mov
push
test
loopne
inc
cmpsl
imulb
or
mov
inc
and
lods
jmp
nop
xchg
xchg
in
stos
xor
daa
xchg
addb
mov
xchg
pop
enter
or
ficompl
dec
int3
sub
shll
xchg
adc
jle
mov
hlt
xchg
lahf
fsqrt
or
sbb
icebp
jns
xor
jbe
jb
rcrl
arpl
mov
xchg
push
sub
subl
gs
je
test
or
xor
ret
jmp
cltd
mov
xchg
push
repnz
dec
mov
js
scas
notb
lds
mov
enter
sbb
lret
in
test
repz
or
push
mov
xchg
sub
dec
test
push
or
push
cmpb
add
inc
sbb
shl
test
mov
and
sbb
and
cmc
jb
out
shll
push
js
jne
xchg
je
lret
xchg
push
jecxz
clc
adc
xor
popf
outsb
and
or
adc
xchg
and
push
mov
icebp
and
bound
push
mov
scas
inc
inc
adc
insl
jle
push
jmp
dec
push
xchg
mov
fsqrt
jecxz
not
jmp
sbb
mov
ljmp
sub
inc
xchg
dec
ret
jl
es
ja
adc
push
nop
inc
repnz
xchg
cmpsl
mov
or
neg
lcall
xchg
jp
mov
fwait
pop
mov
cmc
mov
enter
dec
add
xlat
cltd
sub
test
jo
xlat
xor
popa
push
cli
mov
es
dec
ljmp
inc
call
ss
imul
loope
mov
pop
aam
jmp
xchg
cmp
clc
xchg
jnp
icebp
add
mov
xchg
jle
iret
jmp
lock
and
lcall
or
imul
test
push
jge
in
mov
xor
fwait
or
and
add
pop
lea
jecxz
add
lahf
nop
jbe
xchg
mov
cmpsl
sbb
pop
test
incl
xor
je
rorl
mov
sbb
shll
pop
sbb
ds
pop
repz
xchg
push
push
repz
cmp
mov
sbb
push
daa
cmp
add
mov
cmp
or
sbbb
fcomps
cmp
xchg
push
push
testb
sbb
cmpl
mov
movsl
out
and
adc
loope
cmpsl
repnz
pop
test
movsb
test
bound
test
xchg
jp
lret
lret
nop
sahf
jmp
enter
xchg
int3
idivl
daa
aad
mov
sti
cmp
dec
mov
out
iretw
push
jmp
push
pusha
add
cmpsb
xchg
xor
and
jo
mov
dec
cmp
inc
rcrb
pop
dec
leave
jg
inc
lret
ret
pop
repz
xchg
cltd
cwtl
xchg
mov
mov
or
mov
pop
jmp
mov
or
xchg
pop
mov
aaa
lahf
int3
xor
pop
dec
ja
adc
and
xchg
push
ja
dec
scas
lret
push
leave
mov
jl
scas
inc
clc
fisubrs
hlt
mov
xor
and
cwtl
stos
lret
dec
into
jae
clc
sbb
jae
and
mov
push
cs
pop
call
jae
imul
push
test
xor
mov
jmp
xchg
les
jp
fstpl
loop
xchg
mov
and
xchg
cmp
sbb
and
ljmp
sub
cmpsb
pop
or
je
arpl
and
shl
clc
in
xchg
scas
xor
lds
jmp
sbb
sub
xlat
leave
fwait
jmp
cmp
fwait
cmp
pusha
xlat
stc
and
add
in
xchg
and
mov
sbb
pop
pushf
or
mov
cli
pop
mov
mov
mov
xchg
mov
push
mov
shll
sub
scas
xchg
jae
je
xchg
xchg
lahf
int
stos
enter
daa
aaa
mov
lock
scas
test
inc
shrl
xchg
jecxz
xor
push
fidivrs
dec
sub
gs
jne
add
cli
and
push
loop
mov
dec
lret
sbb
and
loope
jno
call
into
out
pop
push
outsb
imul
fwait
notl
iret
sub
mov
pusha
rcrl
dec
fcomps
jno
cmpsb
and
mov
xor
fnsave
inc
js
and
push
ss
or
dec
jle
adc
iret
loopne
push
movsl
mov
mov
push
cmp
or
sbb
cmpsb
push
out
icebp
and
leave
aas
mov
movsl
test
rclb
roll
inc
cwtl
repz
xor
or
insl
shlb
sbbl
pop
mov
andb
rcrb
js
push
mov
add
mov
ja
lods
xchg
lea
in
mov
mov
nop
pop
mov
in
fidivrs
in
aad
test
mov
loop
sbb
movsl
cltd
or
fs
mov
into
cltd
pop
nopl
push
into
mov
iret
mov
and
scas
add
ja
shr
test
cmpsb
jne
iret
test
mov
jecxz
imul
popa
mov
scas
inc
or
mov
lods
sub
cs
fistpl
les
fs
out
pop
xchg
jae
adc
mov
pop
xchg
or
jecxz
fmuls
cltd
jmp
out
cmpsl
jnp
cmp
movsl
js
cld
mov
icebp
lret
ror
out
xchg
sbbb
imul
outsb
test
push
test
je
cmpsl
push
dec
push
mov
leave
mov
mov
rcll
sarl
jmp
push
movsl
aad
mov
aas
nop
mov
in
jo
push
xor
inc
in
jb
std
data16
pop
push
aad
push
cmpsl
cs
sub
repz
push
movsl
fwait
mov
mov
ret
and
aaa
mov
lret
sarl
imul
and
push
aaa
stos
mov
lods
loope
xor
cld
out
and
ljmp
jecxz
mov
dec
mov
fwait
jecxz
iret
div
sbb
stc
lret
inc
outsb
jmp
out
shlb
aaa
mov
or
jmp
sti
lea
loope
lret
andl
imul
push
add
pop
fucomi
movsl
stos
and
les
sahf
mov
popa
jmp
cmp
and
jle
pop
jae
push
cli
mov
fstp
ja
inc
lods
es
out
aad
loop
imul
xchg
mov
ljmp
mov
shll
es
in
mov
mov
out
repz
jnp
lahf
fbstp
jle
cmp
inc
jle
inc
adc
mov
dec
fcmovu
mov
jg
lods
es
mov
leave
cwtl
shll
jb
mov
and
mov
mov
lret
ret
xchg
xchg
cmp
cmp
push
pusha
jmp
push
iret
push
imul
movsl
add
mov
daa
sbb
stc
mov
arpl
cli
scas
mov
lret
or
cmp
out
add
iret
jne
pop
dec
in
scas
leave
mov
cmpsl
push
in
xchg
test
cmp
or
cmp
leave
cmpsb
cs
mov
pop
or
inc
es
ret
adc
push
aam
push
mov
mov
xchg
mov
adc
scas
shll
arpl
jp
aas
add
mov
push
jl
cli
mov
in
loope
jmp
fsubr
or
ret
loope
cmp
mov
aaa
mov
loop
and
out
nop
jns
sbb
cmp
mov
mov
mulb
push
sub
mov
xorb
pop
add
in
and
push
sahf
xchg
jne
int
xlat
mov
and
sub
fistpl
test
sbb
jmp
cli
sti
xchg
ret
fbstp
cmpsl
cmpsl
add
adc
cmp
cmp
dec
mov
and
push
es
aas
stos
dec
pop
mov
leave
or
push
clc
cmp
mov
outsl
mov
push
mov
mov
fists
test
and
sbb
and
cmc
mov
into
imul
into
xor
int
test
cs
cltd
das
lea
and
push
sbb
xor
jbe
shll
sbbb
pop
sahf
push
xor
sub
push
add
push
mov
xor
test
cs
adc
imul
pop
rcr
lods
adc
or
lret
cmp
loopne
cmc
xor
mov
mov
call
jo
or
inc
jecxz
push
sub
and
sbb
movsb
mov
setp
dec
mov
dec
lret
mov
imul
in
mov
mov
mov
inc
cmp
add
enter
mov
and
push
icebp
stos
je
xchg
std
xor
mov
inc
imul
repz
and
stos
mov
mov
pop
and
push
pop
sbb
xchg
lock
gs
mov
or
dec
lock
rolb
add
mov
repnz
movsb
int3
push
out
into
lea
mov
outsb
sarb
jle
bound
xchg
sbb
and
sub
dec
insb
outsb
add
mov
xchg
test
lods
mov
jmp
xor
pop
jge
enter
addb
dec
or
insl
push
popf
imul
ret
mov
dec
mov
leave
xor
stos
mov
jmp
mov
inc
sub
test
xchg
jo
inc
pop
ror
cmp
ret
dec
lds
sahf
jmp
pushl
pop
mov
mov
loop
adc
js
sub
cwtl
add
pop
out
in
add
popf
into
cmp
pop
cs
add
jns
mov
pop
jb
xchg
mov
xchg
add
fisttps
xor
jne
stos
lcall
je
and
imul
cltd
daa
mov
popf
std
jl
sbb
cmp
adc
adc
cmp
lods
push
xchg
fistpl
cmp
mov
daa
test
insb
fsubrp
and
jbe
or
frstor
xor
fsubrl
jmp
cmp
movsl
xchg
ret
adc
sub
fwait
mov
scas
in
aas
and
dec
popa
leave
stos
mov
jno
sbb
jle
call
das
orl
push
mov
or
mov
mov
out
cmp
das
mov
aas
aaa
pop
stos
fcmove
cmp
push
es
pop
inc
test
pop
cli
ret
pop
gs
push
dec
popa
es
test
xor
cmpsl
push
or
xor
pusha
daa
andb
mov
mov
jl
mov
fmuls
lcall
dec
stc
xlat
mov
test
in
mov
rcll
jmp
xchg
mov
ret
sub
inc
bound
adc
xchg
fisttpll
sub
fucom
mov
xchg
loopne
sub
jns
dec
int
jmp
imul
loop
push
mov
adc
iret
scas
fxch
pop
loop
push
cmpsb
mov
sbb
and
mov
push
test
add
rorl
lcall
bound
lcall
mov
jmp
ljmp
shrl
movsb
test
jecxz
push
aaa
mov
cmp
add
aad
mov
test
popa
scas
cmp
jp
imul
lcall
mov
xchg
xchg
xchg
pop
ret
test
mov
and
jge
js
mov
enter
cmpsb
cmp
fdivr
pop
inc
popa
test
jae
pusha
fnstcw
bound
push
ss
mov
out
push
push
mov
jmp
les
sub
and
jns
sub
shlb
xchg
dec
push
in
jne
into
test
mulb
fsubrs
mov
cli
cmpsb
cmp
pcmpgtd
data16
ret
mov
js
clc
hlt
clc
push
scas
mov
push
and
hlt
sahf
cmp
movsl
mov
inc
inc
mov
out
shlb
push
mov
xor
and
lea
loopne
push
mov
loopne
jmp
addr16
cmp
mov
add
mov
sub
cmpsb
mov
sahf
shll
std
push
and
testb
cmp
leave
iret
loope
or
adc
insl
out
jne
jbe
jbe
mov
divl
xor
in
mov
adc
clc
mov
jae
push
outsl
jno
and
out
stos
dec
aam
ret
pminub
ss
cs
sar
clc
enter
xchg
xor
neg
xchg
mov
cwtl
hlt
mov
mov
test
mov
sub
mov
aaa
leave
out
dec
lea
fisubs
ja
cltd
scas
das
jg
notb
bound
insb
out
loope
mov
sbb
jbe
popf
sbb
push
jo
mov
insb
shrl
ljmp
call
dec
test
mov
sbb
cmp
sbb
lods
mov
sub
mov
sub
arpl
push
lea
or
rclb
mov
ret
ret
dec
xor
rorl
jge
out
hlt
gs
mov
fwait
aaa
stos
push
cmp
mov
cmpl
movsl
into
out
jg
sub
imul
inc
jno
outsb
pop
cmpsb
aaa
xchg
pop
jns
data16
or
imul
mov
cmpl
or
xchg
dec
jl
or
pop
bound
xchg
jmp
xor
cmp
imulb
inc
pop
push
or
mov
ret
or
in
or
ljmp
mov
addr16
sub
mov
adc
in
sbb
imul
movsl
outsb
and
popa
addr16
insl
mov
cmpsl
incl
adc
mov
mov
dec
nop
or
iret
mov
cmpsb
mov
inc
mov
xchg
inc
push
js
rcl
fcmovb
push
xchg
stc
sarl
xor
cmpsl
cmp
mov
in
into
cmpsb
and
xor
clc
adc
sub
xchg
sbb
aam
pop
or
sbb
jecxz
inc
insl
adc
lods
lret
nop
in
cwtl
into
movsb
mov
mov
push
les
scas
prefetch
jl
icebp
out
bnd
outsl
sbb
or
rorl
xlat
jmp
inc
mov
push
jae
mov
repz
dec
inc
add
leave
cmp
xlat
or
loop
xchg
xchg
shlb
lret
sti
rcrl
out
data16
mov
push
push
int3
or
stos
mov
sbb
dec
and
mov
mov
push
mov
loop
xor
mov
sbb
jo
lret
pop
xor
jl
and
ror
mov
push
pushf
out
xchg
xor
mov
sbb
int3
jg
push
mov
int3
mov
mov
cli
mov
lds
jne
cmc
addb
nop
cltd
cmp
fildll
out
mov
ljmp
mov
and
add
or
xor
aad
cmpsl
divl
test
repz
roll
js
dec
cmpsb
mov
push
cltd
jg
xor
xchg
mov
fs
test
jmp
adc
cmp
pop
xchg
cli
xchg
mov
jbe
mov
cs
sahf
push
or
dec
stos
xor
mov
mov
and
loop
enter
cmp
jmp
into
sub
addr16
outsb
dec
mov
pop
jmp
jl
xor
mov
xor
mov
pop
mov
imul
sbb
mov
mov
mov
mov
sub
xor
adc
add
cmp
imul
sub
inc
mov
push
loope
jnp
call
into
out
xor
xor
syscall
imulb
mov
dec
pop
out
xor
sub
cmp
pop
xchg
loop
ret
enter
setno
repz
and
loope
in
jnp
mov
rcll
adc
addr16
xchg
mov
jnp
pop
xchg
sub
cmpsl
imul
fldt
cmc
mov
lods
pop
mov
cmpsb
or
das
add
ret
cwtl
loop
sub
cmp
inc
mov
adc
dec
cmpsl
lea
pop
inc
popf
mov
fldt
adc
mov
push
je
popa
xchg
orl
and
movl
jle
repz
enter
inc
cli
push
scas
clc
sbb
mov
fstps
mov
cltd
mov
scas
test
cmp
imul
int
adc
mov
adc
icebp
pop
stos
shl
scas
fisubl
or
scas
ljmp
out
lods
mov
ljmp
jmp
jbe
xor
idiv
scas
mov
fwait
xor
cmpl
xor
test
jmp
xor
adc
rcrl
clc
adc
xchg
lea
or
lahf
jne
mov
mov
jecxz
movsl
cmp
lret
mov
mov
fs
ret
adc
lea
dec
adc
push
in
rol
stos
push
lahf
push
mov
lahf
std
je
stc
mov
lahf
jns
pop
push
mov
dec
sbb
pop
leave
call
lods
mov
or
lret
into
das
mov
mov
cmpsb
int3
push
insl
push
dec
insb
sub
ljmp
xor
xchg
aam
sahf
xorl
and
sub
jne
popf
jo
inc
dec
mov
jne
sub
add
sti
rcl
add
mov
ljmp
or
adc
pushf
adc
cmp
ret
das
popa
cs
enter
lcall
loopne
aaa
pushf
lds
lahf
imul
stos
es
idiv
subl
adc
xchg
pop
pushf
lods
sbb
mov
inc
fsubp
fdivrs
into
and
push
pop
movsb
xlat
mov
xor
insb
mov
or
inc
jbe
sti
movsl
xchg
xchg
clc
add
add
orb
add
push
mov
cmpsl
jmp
push
ficoml
inc
xchg
mov
jg
lods
mov
or
jnp
xchg
es
sar
lea
mov
jns
or
mov
sti
mov
cmpsl
fistl
adc
insb
dec
mov
and
mov
mov
sarl
push
push
adc
ljmp
sbb
sub
in
loop
sub
notb
pop
jecxz
movsl
orl
fwait
loope
das
or
andl
sub
sbb
das
fcoms
or
jmp
pop
mov
mov
sub
or
stos
test
mov
es
or
mul
mov
xchg
imul
jbe
fisubrs
and
loop
into
add
aaa
mov
push
xchg
sbb
lds
mov
ds
xchg
cmpsl
dec
xchg
xchg
ss
in
or
fisubs
jmp
push
cmpsl
ror
xchg
cmp
popa
xlat
sub
movsl
cmp
in
imul
dec
lods
xchg
jmp
aam
and
mov
jl
sbb
inc
mov
mov
add
sub
xchg
push
insb
mov
dec
jl
mov
pop
std
out
pop
inc
int3
lret
movsb
mulb
loope
push
pop
ficoms
sub
inc
gs
xor
jmp
mov
sub
add
imul
in
xor
pop
mov
dec
js
imul
lcall
add
repz
and
jg
cmp
xchg
sbb
sub
xor
cmpsl
lea
cmpsl
or
int3
ret
test
mov
or
mov
ljmp
mov
mov
dec
sbb
add
dec
in
out
xor
repz
jae
aas
cmp
or
testl
mov
and
cmp
jne
aad
sub
xchg
andl
in
aaa
mov
stos
scas
jl
push
sahf
fcmovnb
cmp
cmp
out
sbb
es
mov
push
sarl
jge
push
fimull
lods
fcmovnbe
or
js
cli
aas
cmp
dec
fsubrl
into
movsl
iret
mov
or
mov
cmpsl
dec
mov
fisubl
pop
daa
xchg
pushf
mov
sub
cmp
xchg
jns
ja
mov
cmp
out
insl
push
mov
mov
sbb
lret
addl
mov
jmp
sub
jecxz
out
inc
mov
lock
ja
fsubrs
mov
pop
mov
cmp
mov
add
jae
xchg
cld
mov
aam
call
mov
mov
xor
arpl
lret
in
cmp
add
daa
push
xchg
xchg
mov
imul
imul
imul
sahf
mov
mov
cmpsb
jne
or
ss
and
mov
addr16
mov
mov
call
xchg
loop
shrd
push
mov
leave
movl
dec
out
nop
mov
test
add
lcall
in
mov
and
fistl
sub
mov
jge
mov
enter
jbe
and
mov
stc
ljmp
sbb
fidivrl
lcall
ret
mov
jle
mov
je
ja
sbb
xor
mov
cli
mov
aaa
inc
test
test
cmp
mov
leave
push
aam
jle
lods
xor
mov
and
mov
arpl
es
lahf
ljmp
dec
lret
loop
mov
adc
movsb
mov
jnp
int3
push
jnp
jns
pop
cmp
dec
test
sub
ja
out
sub
xchg
scas
mov
push
push
aaa
sbb
sub
or
dec
cmpsb
out
pop
movsb
cmpsl
sbb
stos
shl
pop
xor
pushf
sub
xchg
mov
mov
stos
jmp
pop
cmp
mov
jmp
inc
mov
or
xchg
sub
xchg
jecxz
xchg
push
pop
xor
jmp
mov
push
mov
xor
adc
and
sub
mov
sbb
jg
jne
lahf
jae
lods
lahf
je
std
iret
ss
sbb
mov
data16
add
lds
inc
mov
sbb
add
or
add
or
mov
mov
insl
add
cwtl
sub
ficomps
icebp
pop
jle
in
xchg
inc
dec
adcl
enter
push
push
aad
xchg
sarl
test
sbb
push
xchg
and
pop
sahf
aaa
int
out
or
lods
fcomps
roll
mov
adc
mov
fmul
fcomps
inc
inc
mov
sbb
or
ss
insb
cmp
out
mov
fidivs
imul
mov
imul
lods
push
mov
adc
inc
push
mov
xchg
mov
sub
dec
fldenv
ljmp
pusha
push
notl
sub
mov
out
fimuls
jne
mov
enter
adc
outsb
and
xlat
push
mov
fmul
movsl
data16
lds
leave
xchg
fwait
or
xchg
xor
scas
shr
and
in
stos
mov
call
pop
mov
xor
mov
rorl
sub
cmpsb
add
xor
xchg
mov
inc
loope
sti
jecxz
mov
popf
or
push
or
pop
sub
sub
negb
mov
in
xor
movsl
cmpsl
jns
dec
fisubrl
mov
mov
xchg
jmp
mov
test
inc
cwtl
adc
cmp
out
pop
mov
mov
mov
in
xor
stc
jnp
decl
and
mov
push
sub
add
icebp
mov
sarb
lock
or
mov
and
cmp
cmp
pop
mov
mov
and
lods
sti
dec
sub
dec
xchg
sbb
mov
insl
sbbl
mov
mov
cwtl
lods
in
rorb
dec
fmuls
dec
push
cmp
fld
int3
xchg
mov
imul
aas
pop
movsl
int
mov
mov
in
adc
mov
mov
test
fimuls
ja
loope
filds
pop
loopne
ror
js
push
mov
das
out
popf
adc
cs
out
push
and
mov
add
cmp
lds
orb
imul
or
fadd
xchg
imul
xchg
loop
std
loopne
cmpsb
jecxz
fxch
or
lds
mov
or
outsb
dec
addl
xchg
dec
mov
xor
ljmp
mov
xchg
adc
xchg
out
fidivrs
mov
adc
call
inc
xchg
repnz
arpl
or
sahf
cmp
cmpsb
loop
jmp
xor
stc
jecxz
sbb
sub
cmp
or
movsb
sub
mov
inc
imul
mov
xchg
pop
rcr
push
mov
rorb
ret
cmpsl
adc
cli
fcoms
dec
lock
push
fldenv
loop
adc
cmpsl
les
sub
add
loop
aam
jmp
mov
popf
sub
mov
xchg
pusha
sbb
hlt
jecxz
test
xor
jns
subb
test
mov
loopne
mov
jg
ss
pushf
inc
jmp
push
mov
loopne
xor
jne
nop
xor
xchg
aas
cmpl
push
lods
gs
imul
mov
jg
jae
sbb
in
dec
cwtl
xchg
or
mov
popf
ja
je
sub
xor
in
mov
lret
push
inc
sbb
idivb
dec
outsl
stos
or
in
xchg
lahf
lds
testb
push
dec
scas
add
xchg
lret
or
mov
adc
inc
out
lea
sbb
loop
xor
and
add
mov
mov
bound
dec
repz
mov
sahf
push
xchg
mov
xlat
mov
inc
jae
jo
lds
lahf
loopne
mov
gs
cmpsb
dec
push
sub
ja
scas
add
jmp
pushf
or
cmp
aas
outsb
xchg
inc
mov
testb
ds
data16
stc
mov
pop
pop
js
push
dec
fcoml
xchg
jmp
stc
and
dec
clc
ds
adc
mov
divb
into
pop
mov
decl
pop
mov
loop
adc
nop
pop
lcall
and
call
jp
mov
cmp
and
push
mov
ds
fucomp
pusha
enter
idiv
jbe
hlt
push
aaa
lahf
shl
outsb
mov
mov
outsb
and
inc
xor
adc
mull
mov
fsubp
mov
push
popa
mov
mov
rolw
cmpsl
not
inc
in
fwait
cltd
mov
loope
push
mov
inc
pop
clc
loope
imul
mov
sti
lea
xchg
xor
push
arpl
mov
in
nop
testb
icebp
inc
clc
sbb
gs
ds
xlat
ret
pop
popf
xchg
shrb
pop
fsubrl
cmpsb
mov
push
jb
int3
call
fidivl
inc
movsl
outsl
and
mov
and
push
add
test
mov
lds
jmp
xor
xchg
ja
shlb
add
xchg
lods
inc
inc
sub
mov
push
sbb
jbe
inc
sti
outsb
xor
mov
sti
mov
test
cli
jg
es
cmp
mov
cmp
in
cmp
xchg
repnz
push
lea
ret
sbb
mov
int
div
mov
mulb
test
lds
lods
sbb
or
sbb
xchg
dec
rcrb
mul
pop
push
mov
enter
or
sub
arpl
adc
daa
repz
jecxz
loop
xchg
subb
xchg
sbb
leave
dec
test
mov
shll
pop
loop
adc
jmp
sub
sub
test
sub
insb
shlb
push
ret
inc
xchg
mov
sub
push
idivl
mov
outsl
scas
dec
push
jmp
mov
es
jecxz
gs
and
sbb
mov
call
push
sti
hlt
adc
mov
std
loopne
and
lods
xor
jne
mov
movsb
sbb
hlt
add
out
sub
in
sub
enter
jmp
pushf
mov
xchg
leave
movsl
dec
xchg
stos
ja
adcl
into
outsb
push
loope
ret
inc
je
lret
scas
faddl
mov
call
data16
cmc
push
xor
sarl
add
pushl
sahf
pop
and
pushf
dec
in
and
js
xor
add
mov
inc
setl
pushf
jne
mov
mov
mov
jg
sub
sbb
outsb
xchg
mov
push
cli
and
add
mov
add
mov
sti
cmp
in
pop
cmpsb
das
sbb
outsl
and
test
cmpsl
out
ljmp
mov
pop
adc
incl
jmp
or
mov
bound
orl
stc
repnz
repnz
subb
jae
xchg
ljmp
xchg
int3
add
xchg
inc
pop
movsl
sub
outsb
sti
stos
pop
jbe
xor
push
leave
fsubrs
in
fdivrl
jge
dec
aaa
sbb
mov
jbe
std
mov
neg
adc
divl
xchg
enter
cmpsl
jmp
and
lcall
roll
mov
lods
mov
mov
out
mov
push
xchg
mov
fldenv
movsl
repnz
mov
pop
int
jmp
shrb
imul
mov
lahf
bound
jmp
jecxz
das
mov
or
repnz
mul
in
jo
addl
push
and
or
jne
and
pop
je
dec
sbb
addb
repnz
aad
lahf
stos
xchg
mov
aaa
push
push
ret
mov
imul
push
sub
mov
imulb
cld
daa
test
insb
call
faddl
lods
mov
sub
fisubrl
mov
mov
insb
data16
insl
loop
test
hlt
jae
lods
cwtl
lcall
sub
and
lods
insl
movsb
or
movsl
popa
mov
aaa
into
scas
inc
adc
xchg
in
or
or
pop
mov
popa
into
sub
mov
xchg
jbe
or
jp
pop
ret
mov
xor
jecxz
loopne
and
xchg
bswap
mov
inc
and
popa
inc
xchg
push
mov
pop
mov
sarb
xor
sbb
adc
stc
mov
lret
mov
pop
pop
out
andb
cmpsl
lods
fistpl
cli
scas
mov
test
jp
and
and
cmc
add
cwtl
pop
movsl
cmp
adc
into
push
add
ret
xchg
dec
jmp
or
push
aaa
stos
ja
das
cld
out
lret
stos
imul
into
sub
cmpsb
jp
jmp
push
ljmp
push
lahf
ds
mov
icebp
dec
addr16
test
push
push
jge
sbb
lcall
pop
andb
sbbl
jp
movsb
hlt
loop
pop
fdiv
in
xchg
add
in
mov
sub
xor
dec
jmp
arpl
cmp
lock
lds
sbb
outsb
fbld
mov
call
add
push
mov
adc
adc
adc
jns
and
insl
movsb
mov
cmc
pushf
push
jne
add
pop
dec
fxam
xor
sub
lret
mov
xor
pop
mov
fmulp
stos
call
jae
aam
cmpsb
mov
out
out
movsl
jne
push
mov
push
cli
pop
in
and
cmpsl
sub
cmpb
in
lds
mov
xor
dec
jmp
mov
sub
add
mov
mov
pop
je,pt
std
jg
cmpsl
and
push
cmp
mov
rcl
cmp
loop
jp
mov
mov
push
lods
and
sub
cmp
add
test
and
int3
and
stos
es
dec
dec
fidivrl
stos
pop
aas
inc
cmp
bound
cmpsb
mov
sti
xchg
add
and
lods
fldl
imull
call
xor
repz
xor
hlt
lock
cmp
enter
push
mov
sub
test
ljmp
mov
ja
call
mov
subl
cmpsl
daa
mov
int
xor
movsb
xor
jae
js
inc
imul
mov
test
sahf
xchg
loopne
outsl
cmpsl
fdivs
jns
testl
and
xor
jae
je,pt
mov
cli
sub
idivl
daa
ds
mov
pop
div
jg
cmp
mov
jne
cld
test
leave
sub
cmp
jae
xchg
dec
test
mov
or
and
mov
or
jmp
mov
mov
cwtl
xor
pop
and
adc
xchg
jae
push
aaa
cmpsl
dec
enter
mov
aam
xchg
dec
mov
cmpl
testl
dec
sub
out
push
mov
push
outsl
add
mov
push
testb
push
adc
pop
and
adc
fsubrl
psubusw
cmp
push
or
lahf
jp
lods
mov
xchg
adc
iret
movsl
and
lods
ret
jbe
or
xchg
inc
push
mov
and
push
mov
sahf
mov
xchg
js
sub
pop
cmpsb
xor
fmull
loop
mov
jbe
adc
clc
loop
jl
jnp
sbb
fs
scas
das
pushf
faddl
mov
aam
cmpsb
testl
cmp
xor
mov
ficompl
jne
rorl
lret
sub
jbe
imul
xchg
lret
movsb
push
out
mov
js
mov
cmpsl
es
popl
jle
adc
mov
cmpsl
cmp
out
and
gs
sbb
mov
mov
stc
sbb
fcmovnb
cmp
popa
test
xchg
js
out
insl
stos
lock
add
sbb
xchg
xchg
push
stos
fdivrs
bound
aas
fsubrs
mov
push
inc
call
mov
adc
and
movsl
sub
mov
mov
pop
xchg
adc
cmpsl
sub
out
or
mov
mov
fnsave
xor
std
jo
mov
or
lods
ja
loopne
xlat
test
pop
jbe
pusha
inc
in
xor
mov
dec
ret
in
mov
add
cmpsb
sar
lret
dec
cmp
xchg
xor
mov
cmpsl
in
std
es
sub
jnp
je
ret
lea
arpl
cmp
movsl
scas
and
xchg
xor
fadd
jle
sub
test
leave
xchg
xchg
mov
stos
sbb
into
mov
push
or
sti
jae
outsl
mov
dec
loop
sbb
pop
mov
xor
cmp
jae
lods
or
rorl
stos
fnstcw
mov
jne
add
add
outsl
into
test
jge
add
lods
pusha
in
fwait
pusha
insl
in
jne
ja
arpl
jmp
mov
mov
xchg
lret
ja
lcall
loope
push
push
jl
in
sub
pop
cmp
rcll
daa
gs
fwait
inc
lea
flds
fwait
jae
fld
aaa
push
mov
stos
rol
add
mov
leave
stos
enter
pop
lock
xor
movsb
stc
aaa
fistl
pop
sbb
xor
add
jl
jle
mov
xor
lahf
mov
aad
mov
push
sahf
call
mov
jl
pop
pop
jbe
call
push
ds
pushf
push
test
cmp
sub
es
jmp
ret
mov
sub
jecxz
into
pop
add
hlt
push
mov
out
sbb
scas
mov
or
movsb
xor
xor
test
dec
cs
and
and
jle
imul
jg
pop
jae
scas
jne
sahf
repnz
pop
pop
insl
xchg
lret
or
mov
mov
ret
sub
sti
shrb
stc
jle
clc
jl
scas
out
leave
mov
outsb
cltd
sub
hlt
out
enter
xor
lds
or
hlt
jmp
jns
insb
dec
into
das
out
mov
aas
jecxz
pusha
lea
mov
and
dec
popf
fdivs
and
mov
psraw
test
sub
mull
aaa
jnp
mov
pop
xchg
into
and
mov
pop
arpl
cmp
cmpsb
je
sti
cmc
test
stc
or
jmp
mulb
iret
xor
mov
xchg
stos
loope
cmp
or
mov
dec
int3
cmpsl
fimuls
mov
arpl
call
mov
push
pusha
in
xchg
jmp
pop
lret
lcall
lods
jp
lcall
lods
test
and
data16
and
jae
sub
inc
and
test
and
jnp
cltd
jl
sub
or
or
cs
adc
and
loop
xor
and
adc
dec
mov
sub
mov
into
fcoml
clc
loope
popf
add
cmc
jp
imul
sub
pop
test
js
popa
mov
sub
or
and
inc
cmp
sarl
aas
data16
pop
mov
cmpsl
and
mov
lods
in
jge
push
mov
repz
push
sub
cmpsb
fsub
lock
in
push
bound
or
cltd
cld
imul
xchg
xchg
push
adc
mov
movsb
xchg
xor
imull
jne
add
mov
es
jmp
js
lods
shl
enter
cmp
ss
adc
lcall
in
rorb
stos
cmp
test
add
cmpsl
lea
lret
int
int3
out
and
popf
cmp
testl
lea
lods
gs
mov
cmpsb
xchg
aas
and
adc
jp
mov
lods
dec
jecxz
mov
lret
mov
testl
sub
sub
mov
sub
mov
jle
add
jne
loope
imul
fidivrl
pop
aaa
push
imul
ja
xchg
push
gs
stos
and
jbe
push
adc
lcall
shlb
int3
sbb
arpl
sub
sub
clc
lcall
test
mov
into
sub
push
addb
stos
mov
mov
int3
nop
pop
sbb
pop
adc
and
fs
movsl
adc
add
jl
cld
mov
rcl
addr16
mov
mov
jo
xor
and
stos
jbe
aaa
add
sub
loop
mov
rcr
inc
and
jmp
mov
lcall
test
lods
mov
dec
daa
mov
add
ret
mov
daa
lock
loop
cld
loope
mov
push
into
cmp
cmp
cs
add
or
lock
and
dec
ret
mov
adc
and
sub
and
sbb
cmpsl
popf
pusha
and
insl
rcl
jmp
sbb
mov
or
cmpsl
or
bound
test
out
clc
xchg
lds
into
cmp
mov
stos
pop
pop
popa
lcall
aam
xchg
mov
hlt
mov
fdiv
stos
mov
pop
xchg
cmpsb
dec
data16
xor
mov
mov
popa
dec
popa
out
enter
sbb
imul
mov
leave
push
push
and
pop
lods
inc
scas
jnp
inc
jae
push
sub
mov
mov
dec
push
out
jo
sbb
leave
mov
or
ret
mov
jb
push
scas
jb
mov
xchg
cmp
sub
dec
and
mov
ret
add
xchg
sbb
xchg
mov
movsl
jp
and
and
jo
mov
repz
popf
sbb
sbb
in
popa
push
fiaddl
aad
push
or
mov
in
lods
push
addr16
xor
into
cmp
ljmp
or
insb
scas
ss
inc
mov
pop
repnz
cmpsb
test
lods
push
xlat
cmpb
aad
sbb
push
inc
adc
add
push
subb
mov
mov
lods
adc
out
jae
fisttpll
pushf
movsb
popa
mov
mov
popf
loopne
xchg
int
pop
push
push
es
or
sub
jne
or
cmp
outsl
out
mov
mov
inc
idiv
out
cmpsb
push
and
mov
mov
fisubl
sbb
sub
or
pop
addr16
out
pop
jbe
inc
xchg
pop
pop
scas
xchg
mov
pop
sub
pusha
sbb
mov
xlat
in
jl
pop
dec
gs
sub
js
sbb
out
sbb
in
dec
rep
cmp
int3
push
lds
shrl
lret
daa
movsb
cmp
push
sti
jecxz
push
mov
fs
pop
aad
add
pop
adc
and
cmpsl
arpl
push
into
dec
dec
sub
insl
dec
jno
push
xchg
ja
aaa
fsts
mov
scas
js
pop
cmp
lret
out
stc
inc
cmpb
lods
cmpsl
cmp
repz
push
sub
in
xchg
jbe
mov
sbb
out
and
jmp
stos
mov
xor
pop
std
dec
pushf
push
xchg
sub
daa
inc
and
jge
sub
test
xlat
cmpsb
pop
mov
ljmp
jl
xchg
cmpsb
inc
test
push
lea
sbbb
jno
outsb
cmp
test
mov
mov
pusha
add
lcall
pusha
push
cmp
and
jne
jge
pusha
fistps
fidivl
aad
sbb
pop
scas
xor
insl
xor
test
adc
jno
jbe
test
pop
leave
sbb
and
push
cmpb
adc
xor
xor
fnstcw
mov
cld
cmovne
int
mov
xor
xchg
jp
inc
movq
cmpsb
mov
jbe
mov
xchg
js
iret
testl
neg
loop
lods
add
xchg
cli
inc
sbb
xlat
push
icebp
xchg
pop
cmp
jnp
cwtl
outsb
inc
mov
ret
xchg
add
and
inc
cmp
mov
nop
sub
cli
dec
sbb
or
mov
add
imul
dec
sub
xor
mov
rcr
mov
cmpsb
mov
mov
call
cmpsb
mov
sub
jle
cmpsl
int
cmp
mov
in
xchg
xchg
xor
sbb
test
scas
jmp
shr
xchg
icebp
pop
inc
cmpsl
mov
push
loop
outsb
pop
cmpsl
mov
or
pop
push
jnp
adc
add
jbe
sti
mov
movsb
mov
xlat
in
mov
jecxz
xor
xchg
jb
int3
sbb
imul
fdivr
jae
mov
pop
lock
xor
add
js
jne
mov
sbb
xchg
je
loop
lahf
or
inc
js
mov
mov
jae
insl
mov
push
push
jg
notl
leave
pop
mov
xor
add
call
jne
sub
add
or
fimuls
divb
pushf
jg
mov
mov
lret
jl
cmp
jmp
mov
std
ljmp
and
sub
aas
cmp
jle
and
cli
aad
jp
or
gs
mov
ret
aam
fildl
int
movsb
lods
pop
cmp
sbb
sub
repnz
jns
xchg
adc
inc
xor
xor
int
dec
sbb
mov
sub
fdivs
outsl
sub
stos
fcompl
testb
arpl
insl
cmpl
fimull
mov
push
sub
push
xorl
test
or
pop
imul
in
shlb
jb
xor
mov
sbb
insl
push
leave
dec
test
xor
push
cmp
aaa
daa
insl
lret
cltd
movsl
in
sub
cmpsl
lret
pop
xor
pop
mov
inc
inc
mov
xchg
frstor
movsb
and
or
loope
int
movsl
jg
mov
inc
shrb
sahf
fwait
sbb
or
jmp
cmp
and
cmp
push
cmp
pusha
xlat
mov
jns
jns
mov
xchg
cmpsl
dec
xor
push
int3
fcoms
roll
adc
add
xchg
sbb
sbb
jl
fmuls
mov
mov
lcall
scas
mov
cltd
xlat
leave
xchg
dec
xlat
add
clc
sub
jnp
pop
movsb
mov
scas
cmovne
mov
stos
int3
and
dec
gs
frstor
mov
stos
cmp
lods
sub
pop
cmp
push
into
xchg
and
mov
aaa
push
pop
inc
int
incl
jmp
xor
test
cmp
test
xchg
adc
push
push
pusha
sub
pop
shlb
outsb
and
out
mov
ljmp
loop
xor
mov
mov
jns
mov
hlt
mov
sub
into
repz
jge
mov
mov
pop
fidivl
mov
jmp
mov
js
cmp
mov
inc
aaa
and
stos
lret
xchg
mov
jo
add
stos
sub
mov
insb
fchs
in
jnp
push
iret
inc
mov
mov
pop
mov
lret
aaa
jle
cltd
cmpsb
lcall
das
cmp
test
mov
enter
jmp
mov
pop
push
push
push
cmp
dec
mov
jae
in
add
mov
inc
jle
mov
cmp
movsl
icebp
insb
aas
es
mov
mov
movsb
dec
sub
and
xor
mov
int
ds
mov
mov
stos
pop
push
lea
mov
iret
es
or
dec
cltd
popf
sbb
xchg
dec
xor
or
out
cltd
test
es
dec
jae
adc
jl
popa
cmpsl
push
push
fisttpl
inc
push
jmp
leave
jl
dec
jl
jne
fsubl
xchg
push
mulb
mov
es
pop
xchg
xchg
cmp
mov
jae
or
add
and
xchg
jecxz
mov
test
cs
ja
nop
into
dec
mov
mov
or
or
mov
mov
xchg
or
mov
loope
jae
push
leave
loop
pop
gs
movsl
sub
xchg
push
dec
add
cs
push
sub
cwtl
sbb
mov
mov
add
mov
jnp
xchg
jae
push
mov
xor
add
inc
insl
xchg
mov
sub
ljmp
addr16
or
arpl
inc
dec
lcall
jo
add
leave
sub
sub
cmp
mov
mov
mov
arpl
loope
xchg
fxtract
jbe
cmp
mov
jae
addr16
dec
int
add
mov
insb
push
hlt
call
shrl
or
xchg
xor
sub
test
xchg
movsl
mov
lret
mov
pop
mov
int3
mov
sub
adc
mov
dec
inc
scas
popf
ljmp
and
inc
cmp
outsb
push
fistpll
fcoms
lret
sbb
mov
testl
jge
cmp
xor
movsb
into
mov
mov
xchg
jge
negb
jecxz
ja
xlat
jmp
leave
subl
xchg
test
outsb
leave
movsl
leave
test
sub
cmc
mov
mov
lret
mov
jne
inc
icebp
dec
and
mov
std
xor
jp
xor
scas
scas
mov
inc
scas
mov
int3
sarl
test
sti
icebp
xchg
cmp
jmp
lret
adc
adc
loop
in
sbb
or
add
dec
enter
push
fldenv
mov
pop
jmp
push
clc
cmpsl
mov
js
cmp
stos
in
jo
fidivl
in
scas
or
es
scas
leave
aaa
test
out
cmpsb
jle
cmc
mov
je
inc
pop
cmp
cmpsb
dec
clc
pop
fistpl
mov
mov
fisubrl
cmpl
fdivs
sbb
ds
mov
bound
cmpsl
dec
mov
pusha
daa
cltd
popf
inc
add
and
int3
add
dec
mov
das
cmp
cmpsl
mov
inc
cmp
cli
mov
cwtl
xchg
jl
xchg
dec
out
stos
stos
adc
mov
mov
xchg
leave
mov
cmp
jnp
push
jo
lret
dec
jne
mov
adc
clc
fs
jp
mov
mov
or
mov
mov
andl
mov
mov
or
addr16
cli
and
push
fwait
sub
test
jmp
movsl
enter
or
inc
hlt
lds
dec
jp
cltd
xchg
lods
or
add
mov
pushf
add
roll
mov
cmp
div
call
cwtl
sbb
adc
inc
icebp
fldenv
add
sti
mov
dec
das
fsts
mov
cmpw
push
mov
loop
mov
repz
imul
adc
loope
mov
fsub
stos
lret
or
mov
ja
dec
and
jmp
mov
daa
cmp
dec
cmp
xchg
iret
jmp
into
sbb
movsl
pusha
jmp
mov
fdivs
imul
pop
mov
leave
xchg
sbb
and
pusha
sti
mov
aaa
movsl
mov
jbe
mov
lret
jmp
repz
push
mov
mov
xchg
mov
clc
jecxz
pop
xchg
inc
pop
and
pop
roll
sbb
fiaddl
lahf
jno
and
jne
repnz
cmp
jecxz
into
push
pop
xchg
push
or
xor
push
or
jnp
mov
arpl
xchg
xchg
and
pop
jecxz
test
into
cmpsl
xchg
rolb
or
mov
or
and
cmp
mov
mov
decl
movsb
daa
test
daa
aaa
jae
pop
cmp
setbe
mov
xchg
mov
add
push
or
pop
mov
sbb
xchg
pop
jne
mov
subl
movsb
daa
mov
out
les
xor
inc
cltd
aas
cmpsb
ljmp
cli
dec
sbb
leave
jae
mov
in
lahf
push
push
jmp
jbe
jne
mov
enter
adc
and
stos
cltd
sub
jmp
or
in
mov
add
mov
cmp
sbb
mov
sub
sbb
sbb
js
push
mov
mov
ret
jg
cli
lret
popa
enter
imulb
ljmp
test
cmp
inc
xor
mov
std
add
xor
inc
xchg
mov
xor
mov
imul
push
scas
dec
dec
loopne
push
sti
ss
mov
movsl
fcoml
gs
lahf
fldcw
mov
addr16
dec
roll
sbb
gs
or
rcrl
fmulp
aam
jmp
cmp
xorb
cmp
outsl
cli
ljmp
out
jmp
jmp
lea
xchg
xor
cmpsb
mov
fs
add
gs
and
push
pop
mov
inc
cmp
stos
cltd
sub
push
arpl
imul
leave
les
nop
sbbl
xlat
jmp
cmp
add
mov
into
in
mov
sarl
or
mov
sub
xchg
push
dec
fmul
push
out
add
xchg
pop
jl
sbb
adc
sub
mov
daa
cmpsb
test
cltd
mov
scas
jge
jle
lock
stos
cmpsl
fwait
push
cmp
cli
mov
pop
or
jp
sti
sbb
xchg
ret
xor
es
push
fisubs
sarb
cmp
mov
cmpb
insl
pop
jnp
lret
cltd
popa
repnz
or
dec
fmuls
inc
test
in
daa
dec
test
cmp
mov
xchg
cwtl
push
fwait
and
leave
jmp
add
add
adc
mov
fs
xor
or
cmpsl
xchg
cli
push
mov
push
sub
pop
mov
ljmp
clc
lret
xor
or
xchg
lcall
sbb
mov
mov
aaa
gs
into
popa
jae
popa
fmuls
lahf
and
cmp
adc
push
sub
ljmp
push
cli
push
sub
fldenv
sub
and
stos
push
jl
mov
or
push
movsb
push
dec
xchg
dec
adcl
push
mov
out
fldenv
pushl
pop
ds
into
mov
dec
mov
sar
mov
cltd
shlb
into
sub
leave
cli
mov
or
pop
or
mov
addr16
test
dec
pop
cli
sub
xchg
pop
push
push
lods
pusha
or
mov
sub
shll
test
cmp
je
cmp
push
divl
adc
fwait
lret
mov
xchg
pop
call
jecxz
popf
lret
mov
mov
dec
test
test
fs
dec
hlt
inc
inc
into
in
pusha
sbb
lock
cmp
sub
jbe
and
jae
cltd
seta
pop
mov
aas
sub
lds
ljmp
and
lods
ljmp
push
aas
mov
stos
mov
xchg
nop
out
dec
jmp
testl
jp
insb
sahf
pop
push
jb
inc
mov
std
outsb
sub
jbe
mov
sub
dec
and
push
popa
cmp
sub
jns
cmpsl
call
push
enter
or
xor
mov
mov
mov
mov
test
ja
loope
push
cmp
push
mov
loopne
mov
xor
cmp
jl
pop
jne
or
into
aas
iret
push
in
dec
mov
icebp
jg
mov
mov
mov
out
mov
mov
frstor
pop
popa
je
jmp
mov
mov
mov
das
and
or
mov
sbbl
scas
jmp
push
lods
popa
popa
cmpsl
jmp
and
mull
pop
cltd
popf
ljmp
inc
stos
fucom
add
jecxz
dec
out
fs
and
inc
js
mov
mul
out
mov
xchg
sub
jmp
test
ja
test
mov
leave
cmp
cld
mov
jge
xchg
mov
add
mov
mov
fsub
ljmp
leave
mov
xchg
push
movsl
aaa
push
mov
ret
adc
stos
xlat
into
std
push
mov
test
and
imul
cli
xchg
add
test
or
xorb
xchg
or
xor
mov
lret
mov
inc
xor
mov
mov
leave
clc
mov
mov
mov
ret
adc
test
sub
jmp
arpl
and
sti
fbstp
sbb
loopne
jmp
sarb
mov
and
test
pop
addr16
fcoml
or
addl
divb
mov
xchg
inc
subl
mov
pop
int3
test
mov
mov
mov
pop
in
adc
jp
xchg
adc
je
fs
mov
idivb
push
adc
mov
ret
jl
stos
mov
cltd
test
dec
fldt
cmp
mov
mov
mov
cmp
push
jbe
es
xor
je
lods
adc
shl
in
fdivs
mov
jmp
mov
jmp
push
cmpsl
cmp
ret
dec
arpl
push
cmpsl
cli
gs
leave
data16
mov
std
lret
outsl
and
mov
mov
mov
jecxz
jecxz
sbb
sbbb
into
dec
cmp
and
test
xlat
leave
adc
lea
push
adc
pop
mov
outsb
xchg
imul
subb
xor
push
daa
rclb
dec
lcall
pop
mov
mov
lret
rorl
nop
in
xchg
imul
sbb
dec
adc
xchg
mov
gs
aaa
sub
test
fisubrl
xchg
mov
popf
orb
das
sub
test
jmp
je
xor
mov
jns
jp
inc
jp
or
push
enter
dec
mov
test
jne
mov
sub
xchg
adc
push
leave
in
addr16
fcmovnb
orb
repnz
and
ljmp
dec
cmp
sub
cmpb
jmp
loope
cmpsb
test
mov
push
cmc
test
add
sahf
mov
jmp
movsb
mov
aas
push
sub
movsl
int
xchg
cwtl
inc
iret
jmp
stc
sti
mov
inc
loope
daa
and
xor
xchg
mov
mov
xor
cmc
adc
cli
mov
mov
mov
sub
pusha
pop
mov
xchg
addr16
data16
dec
jmp
rcrb
pusha
pop
mov
jl
es
add
mov
push
pushaw
adc
sahf
sub
and
int3
sub
inc
push
lcall
xchg
sub
testb
sbb
mull
lret
ret
push
in
cmp
push
lret
add
xor
jecxz
out
popa
sbb
ror
subb
lock
mov
aad
sbb
shl
aas
movb
out
dec
xchg
pop
data16
insb
sti
ja
icebp
pop
jmp
into
push
cli
xchg
addb
cmp
js
adc
ret
out
mov
enter
movsl
outsl
jno
int
fwait
int3
ja
std
sbb
mov
jl
icebp
sbb
int3
jg
lret
stos
mov
scas
mov
ljmp
cmp
idivl
sbb
xchg
cmc
xchg
inc
fstl
aas
lods
cmpsb
push
call
jp
sub
cmp
push
mov
sbb
lock
jl
sbb
xor
aam
mov
cwtl
mov
loopew
or
mov
mov
push
fsts
mov
rcrl
push
dec
cld
dec
mov
scas
mov
xchg
pop
and
mov
adc
push
stc
out
ljmp
mov
outsb
shr
dec
ja
xor
or
aam
out
mov
cmp
mov
add
push
mov
inc
leave
hlt
aas
dec
pop
mov
loopne
cmp
stos
push
mulb
loop
icebp
mov
mov
jne
mov
push
movntq
sub
sub
push
aad
roll
push
dec
cld
jp
push
sbb
dec
es
lret
insb
push
lea
cmp
out
inc
roll
jl
lea
cltd
lea
pushf
insl
out
mov
fidivl
mov
mov
out
lods
fs
iret
cmpsl
pop
and
mov
sarb
mov
scas
movsl
inc
xor
mov
xor
aaa
test
dec
jg
mov
jae
push
test
pusha
push
cmp
inc
stc
dec
adc
mov
cmpsb
std
loope
sbbb
movsb
inc
cld
mov
outsl
xor
and
sbb
jp
jp
test
or
sub
mov
out
out
cltd
cmp
icebp
or
aaa
pop
mov
mov
mov
cld
sbb
lods
out
sub
lds
iret
mov
in
ljmp
jne
or
mov
push
into
jge
mov
mov
jge
cmp
stos
push
repz
cmp
inc
out
ret
mov
stos
dec
mov
pushf
or
xchg
in
sbb
stc
out
sti
cmp
es
xchg
lret
clc
scas
pop
xor
cwtl
loope
imul
push
shrb
pop
mov
jb
or
popf
lcall
jns
inc
cmp
stc
xchg
fdivl
xchg
inc
imul
xor
cmpsl
or
rclb
lret
sbb
divl
call
mov
xor
mov
fdivrl
popf
imulb
or
ror
inc
jbe
inc
xchg
hlt
xchg
inc
and
pop
in
jbe
add
mov
popa
mov
xlat
mov
or
add
mov
sub
xor
xchg
fwait
lret
into
sbb
jne
psllq
movsb
cmp
jne
push
and
cli
mov
js
nop
xchg
mov
hlt
sbb
dec
sub
test
sub
in
fidivrl
stc
or
inc
sub
cli
pushf
lret
jmp
loop
shrl
inc
cwtl
add
inc
int3
cwtl
flds
ljmp
pop
sbb
xor
add
sbb
movsl
xchg
inc
js
adc
cmp
stc
push
add
clc
mov
popf
push
xor
and
fnstcw
dec
push
cli
mov
filds
out
ja
xor
test
mov
or
mov
pusha
add
and
push
push
mov
xchg
jecxz
gs
nop
pop
xor
mov
mov
jp
fdivr
mov
frstor
or
pop
mov
loope
in
shll
out
mov
movsb
jbe
jecxz
sti
mov
lods
jae
cmpsl
mov
jle
mov
stos
int3
imul
xchg
cli
and
sub
mov
and
in
test
jmp
inc
repz
jmp
hlt
aaa
push
xchg
imul
daa
cmp
repz
mov
cmp
sub
mov
and
mov
mov
das
pop
push
std
jae
into
out
lret
je
or
xor
mov
sub
and
inc
jge
xchg
ja
std
gs
out
sti
xor
cmp
pop
ds
dec
shll
fimuls
ja
and
jns
cltd
xchg
push
pop
and
and
mov
mov
xlat
gs
scas
push
lods
sub
cld
sti
jnp
repz
insb
data16
mov
aad
xor
popa
adc
adc
dec
in
inc
add
mov
into
fldcw
inc
lds
inc
bound
lods
mov
xchg
addb
mov
stos
mov
pop
pop
adc
loop
flds
mov
mov
sti
pop
stc
nop
cltd
jmp
mov
mov
test
fbld
xchg
ljmp
xchg
jecxz
ret
pop
in
je
imul
mov
mov
fistl
adc
xchg
sbb
inc
repnz
je
shll
cmp
push
mov
stos
xor
in
cmpb
sub
mov
out
jmp
test
fstl
cmp
fadds
orl
clc
popf
push
cmp
sbbb
out
mov
subl
enter
arpl
out
cmp
leave
sbb
jmp
ja
push
sbb
mov
loop
dec
mov
mov
stc
dec
fnstsw
cltd
mulb
and
cltd
sbb
push
jmp
fs
test
mov
push
mov
clc
lcall
dec
movsl
es
shrl
and
lret
dec
adc
mov
cmp
mov
pop
out
rcrl
xor
shl
pop
mov
inc
xchg
push
lahf
test
mov
bound
sub
mov
and
imul
movsb
xchg
or
add
pop
jmp
sub
rcll
and
sbb
fs
mov
cs
xchg
inc
subl
push
movsl
dec
xchg
mov
jmp
test
leave
jno
push
and
call
jmp
xor
sbb
aad
roll
dec
ret
call
xchg
dec
cmpsb
mov
movsl
es
push
xor
mov
js
sub
es
movsl
sub
je
mov
into
ja
shlb
and
xlat
cltd
cmp
adc
mov
cwtl
xchg
negl
pop
inc
jmp
fldt
int3
inc
scas
or
push
mov
jl
fstpt
add
mov
jmp
push
xchg
loope
scas
rdmsr
dec
cmpsl
scas
fistps
pop
inc
lods
adc
fwait
out
xchg
or
ret
jecxz
testl
mov
sub
add
xchg
insl
dec
mov
mov
dec
outsl
jg
fs
stos
lahf
aaa
cmpsb
pusha
cltd
stc
out
xchg
loop
push
loopne
or
clc
sbb
push
imul
fimuls
add
mov
stc
xor
test
pop
sub
imul
stos
adcb
faddl
mov
pop
push
pop
sbb
scas
sahf
out
mov
mov
es
jl,pn
scas
int3
jmp
sahf
mov
cmpsl
rorl
mov
lods
inc
xor
adc
repz
cmpsl
movsl
mov
push
adc
mov
and
js
adc
fidivs
mov
nop
mov
fimuls
int3
call
mov
out
mov
or
cmpsb
pop
outsl
movsl
and
adc
jae
xchg
mov
dec
xchg
mov
ret
movsl
es
jmp
cmp
aaa
inc
je
push
mov
xlat
fwait
and
popa
mov
bound
lahf
das
adc
sub
idivl
outsb
sbb
out
cmpsb
in
mov
pusha
dec
xor
mov
shrb
cmpsl
xchg
cmp
scas
mov
cmpsl
xchg
movsl
jae
xchg
cwtl
in
js
and
xor
jmp
outsb
xchg
loop
sbb
out
in
shl
mov
dec
mov
mov
mov
mov
and
inc
inc
out
loopne
pop
movsb
rorl
nop
cmpl
push
jmp
mov
mov
bound
jmp
xchg
sub
loop
repnz
sti
out
pop
jge
sub
xlat
pushf
sahf
inc
int3
cmpb
mov
test
mov
enter
and
inc
mov
dec
xchg
loope
pop
cmpsl
repnz
stos
stc
mov
lret
out
imul
das
jmp
mov
mov
dec
and
fadds
inc
push
lock
mov
mov
pop
lods
push
fisubrl
bound
xor
je
dec
jb
mov
jo
leave
sbb
pop
ret
xchg
ficoms
mov
mov
bound
mov
and
xchg
push
push
xor
or
mov
adc
scas
cltd
int3
pop
xchg
gs
add
test
icebp
inc
mov
add
cmp
mov
pushf
out
fstl
dec
hlt
jle
leave
and
cmpsl
mov
jae
pusha
pop
loop
aam
out
std
cld
or
cmp
in
fistpll
jo
imul
out
add
mov
mov
xchg
loop
lods
mov
int
stos
jne
inc
fwait
leave
or
lcall
out
pop
adc
mov
arpl
shll
cmpsl
dec
add
xchg
mov
mov
or
push
or
add
cmp
mov
mov
aam
ja
mov
ss
cmp
test
sarl
loopne
dec
mov
lahf
sbb
mov
adc
repnz
mov
pushf
cmp
int3
and
push
js
lds
movsl
cmpsl
push
or
test
leave
aas
dec
push
hlt
out
repz
cli
xor
or
cs
dec
cmpsb
xchg
xor
mov
arpl
pop
test
dec
sub
loope
andb
in
in
std
mov
testl
cmp
iret
xor
gs
jge
inc
xchg
mov
dec
out
xchg
stos
add
pop
repnz
jge
insb
fistl
mov
daa
cmpsb
das
neg
mov
popa
scas
popf
scas
test
mov
cmp
cli
mov
sub
push
fsubrp
fs
leave
lea
movsb
inc
test
nop
adc
into
mov
mov
mov
jg
xchg
movsl
cmc
nop
jo
dec
xchg
test
notb
mov
dec
inc
adc
xor
inc
jae
adc
fs
xor
loop
sub
mov
cmp
test
push
mov
sub
popf
jg
adc
pop
scas
xchg
fwait
add
dec
sub
add
jecxz
add
jg
xor
out
not
je
push
ss
cmp
inc
test
pop
shl
das
call
xor
sbb
cltd
pop
jmp
pop
push
or
int
xchg
jnp
ss
and
ja
mov
xchg
out
sar
decb
pop
shr
shlb
das
xor
pop
cmpb
rolb
pop
stos
mov
sbb
cs
test
fiaddl
daa
mov
inc
cmc
and
popa
xor
into
in
add
mull
movsl
mov
jns
or
dec
push
jg
aaa
adc
test
outsl
sub
scas
test
jnp
aam
xor
jne
enter
stos
cmp
mov
mov
cmp
push
imul
test
pop
iret
divl
mov
lret
nop
popa
mov
inc
mov
stos
leave
jmp
or
xchg
xchg
mov
or
push
mov
gs
ljmp
xchg
push
cmp
mov
test
call
pop
je
icebp
mov
in
movsb
stos
test
lcall
xchg
sub
pusha
xchg
or
dec
ljmp
movsb
test
jno
mov
aam
out
mov
xchg
fisubs
push
movsb
cmpsb
out
enter
push
cmpsl
bound
andl
mov
or
xchg
sbb
mov
pop
sbb
ss
jecxz
fldt
or
xchg
shlb
cmpsb
imul
iret
out
jmp
into
lret
in
imul
push
jecxz
repnz
and
cmpsb
mov
test
mov
mov
movsb
xchg
jecxz
push
cld
movsl
test
sub
call
and
pop
mov
mov
shll
pop
pop
and
pop
and
mov
mov
std
sbb
aas
enter
mov
cmp
and
es
jmp
sub
sub
aas
pop
out
aas
xchg
roll
and
mov
sub
in
out
and
loope
sbb
xchg
add
out
popa
xchg
pop
shl
and
loop
xor
out
test
jmp
add
sbb
mov
movsl
cltd
jmp
mov
mov
andb
and
in
xchg
movsb
cmpsl
xchg
jmp
xchg
loopne
lahf
and
movsb
cmp
jo
loope
or
dec
or
lret
lcall
and
cli
mov
mov
out
int
clc
jp
sub
xchg
je
enter
loopne
popa
mov
mov
or
add
fisttpl
xchg
cmpsl
test
fwait
or
add
cmpsl
mov
jnp
cmpsl
xchg
mov
jg
cmpsl
mov
mov
pop
shll
andl
addb
lahf
xor
lahf
xor
lahf
xor
mov
mov
and
and
aaa
and
jbe
cmpsl
mov
cli
inc
inc
out
and
mov
cmp
or
xchg
andb
shll
cmpsl
or
test
andl
fwait
jmp
or
push
shlb
xor
gs
aaa
into
imul
sahf
dec
mov
xchg
adcb
or
xchg
popf
movsl
or
inc
rcr
xchg
xlat
and
sbb
jo
mov
imul
xchg
mov
xor
test
xchg
inc
push
push
mov
fisubrl
cltd
jp
adc
mov
popf
sti
imul
mov
mov
dec
dec
mov
repnz
mov
cmpsl
mov
mov
sub
inc
ljmp
sub
das
enter
insb
mov
ficoms
sub
push
mov
out
jp
out
in
mov
jp
call
rolb
mov
mov
in
push
pop
dec
dec
add
pop
mov
pop
dec
lods
push
outsb
fsubs
movsl
mov
in
test
mov
dec
imulb
push
icebp
imul
xchg
xchg
mov
mov
adc
dec
negl
addr16
lahf
jg
arpl
inc
add
push
cmp
add
cmp
push
loop
movsl
das
push
les
pop
mov
adc
xchg
push
fwait
mov
jmp
daa
pop
mov
sti
movsb
dec
insb
or
adc
es
jp
ficoms
adc
stos
stc
jl
or
and
mov
mov
rcrb
mov
and
lds
test
je
orl
loope
push
sbb
jle
data16
xor
sub
mov
xor
and
pushf
int
mov
and
sahf
cmp
mov
repz
lret
lods
arpl
repz
cmp
out
sahf
rcrb
adc
je
pushf
and
or
jno
xor
clc
sbb
pop
cwtl
cli
mov
sub
movl
and
xchg
push
xor
mov
mov
sbb
shlb
sub
cltd
push
inc
out
or
loope
incb
testb
sbb
mov
lods
cs
mov
mov
sub
dec
sbb
loop
cmpsb
adc
scas
mov
cmpl
add
inc
mov
mov
adc
push
push
dec
push
and
or
jl
ja
or
xor
lods
jl
cmp
cmp
dec
cltd
hlt
mov
mov
sub
into
and
iret
sub
jne
mov
dec
pop
cmpsb
cltd
out
ljmp
pushf
sub
inc
push
xor
enter
sub
icebp
pop
lcall
mov
dec
int
mov
sti
mov
or
add
movsl
dec
push
dec
push
sbb
or
mov
clc
ss
pop
out
sahf
ljmp
pop
xorb
mov
in
fildll
xchg
aaa
sub
je
add
sub
mov
fidivrs
or
mov
dec
pop
jg
push
sbb
out
movsl
sti
popf
scas
int3
xchg
push
rcl
fmull
lods
les
sub
dec
jmp
mov
xlat
jg
xor
movsl
mov
fidivrl
or
sti
xor
out
stos
lret
cli
pushf
int3
sub
int
mov
push
mov
adc
sub
pusha
push
outsl
mov
xchg
idiv
call
loopne
imul
mov
andl
mov
shrl
jle
fnstcw
in
aaa
jecxz
lods
or
popf
and
mov
inc
jb
mov
into
or
push
push
lods
pop
cltd
xor
mov
dec
sbb
lcall
lahf
arpl
popf
sbb
das
mov
subb
sub
negb
pop
es
stos
stc
mov
sbb
cmp
daa
movsb
std
mov
enter
mov
insl
shlb
mov
push
or
xor
lret
and
outsl
in
mov
xlat
pop
jmp
rcll
bound
stos
rcrl
push
add
jae
leave
je
xchg
js
sti
loope
or
fs
dec
mov
cmp
and
inc
mov
jg
sbb
push
enter
clc
lcall
loope
js
ljmp
stc
fsubrl
push
hlt
fisubl
test
mov
mov
xor
push
ret
popa
mov
mov
lds
add
or
xchg
jmp
loop
test
adc
xchg
pop
dec
sub
mov
add
js
adc
mov
mov
lods
mov
sbb
add
jae
xchg
lretw
stc
sub
out
jnp
outsl
movsl
inc
out
int3
dec
push
stos
dec
out
dec
movsb
scas
or
jmp
inc
mov
notb
stc
stos
push
dec
pop
sub
push
jne
xchg
push
mov
adc
icebp
cmp
xor
mov
mov
mov
pushf
movsb
out
or
into
movsb
mov
mov
xor
ret
hlt
fcomps
push
or
xor
push
xor
sbb
in
or
mov
xchg
and
pusha
adc
loope
jns
sbb
popa
adc
sub
xchg
jmp
mov
jp
cmp
pop
adc
jne
fs
mov
inc
frstor
sub
inc
cmp
in
sub
loopne
jecxz
dec
cmp
test
jecxz
scas
mov
jmp
enter
out
mov
adc
cmp
ja
push
xchg
aaa
scas
add
mov
jle
lods
icebp
and
icebp
adc
orl
pop
int
cli
movsb
lods
popf
lds
push
hlt
push
nop
add
imul
out
sub
cmp
js
xlat
cmp
scas
dec
jle
shlb
xor
jge
leave
jae
fwait
xor
das
jl
xor
cmp
mov
cmpsl
mov
mov
int3
ret
pop
imul
mov
outsl
push
rcll
je
pop
sarb
scas
clc
dec
in
dec
jle
popa
and
js
adc
movsb
mov
lods
jne
mov
in
sahf
andb
jl
xchg
or
pop
enter
xorb
xchg
mov
xor
mov
test
xchg
xor
mov
in
and
xor
imul
mov
imul
xchg
push
or
popf
test
pop
loop
push
and
out
stos
adc
aas
cmpsb
int3
ljmp
adc
mov
rorl
mov
mul
add
test
xchg
insb
dec
sti
lods
aaa
pop
aas
ja
cmpsb
xor
mov
lcall
add
inc
add
mov
push
je
in
mov
dec
jne
mov
std
fwait
mov
cmpsl
mov
push
cld
pop
jns
inc
sti
ljmp
mov
stos
outsb
cli
or
push
test
push
cmp
imul
arpl
stos
mov
mov
sub
fs
sti
sbb
push
xchg
js
lahf
jnp
xchg
pop
and
imul
test
and
call
fimull
pop
dec
cmpsl
inc
jbe
in
sbb
mov
push
or
mov
mov
push
inc
xor
sarl
xor
cmp
mov
add
aad
push
sub
sub
fistl
add
stc
mov
enter
jne
pop
sbb
jae
dec
out
sahf
ror
mov
into
push
push
mov
pop
sti
mov
aas
push
push
or
ja
xor
lods
out
dec
daa
fistps
dec
sub
into
mov
xor
fisttpl
sbb
cmp
inc
xor
and
and
cmp
and
loopne
and
loope
jne
add
sub
movsl
into
jecxz
jl
xor
sbb
roll
hlt
mov
jnp
mov
stos
inc
stos
or
divl
xor
cltd
es
movsl
mov
pop
pushw
in
test
or
sbb
jns
sbb
or
in
movsb
ljmp
inc
push
and
fxam
jmp
es
scas
push
call
jnp
sarb
cli
inc
iret
mov
aas
sbbl
xor
repz
in
leave
jmp
psrlw
aas
cmpsb
jmp
in
mov
into
inc
dec
sbb
pop
fimuls
jecxz
xor
push
pop
mov
pop
mov
or
sarb
fisubs
out
lret
enter
jns
jl
jbe
push
hlt
scas
jge
test
imul
aas
test
test
lods
mov
xor
cmc
sub
xchg
xor
div
notb
mov
leave
lcall
pop
imul
sbb
test
leave
lahf
das
add
xor
ret
dec
pop
sub
lcall
mov
jb
leave
lods
mov
decb
cltd
jns
out
cs
pop
mov
mov
fdivrp
xchg
or
push
mov
pusha
std
and
aas
mov
and
fwait
xor
jne
cmp
and
mov
cld
jl
add
jne,pt
dec
xor
dec
fstpt
jmp
pop
dec
or
mov
in
ja
mov
xchg
cmp
lods
scas
fisubrs
xchg
jp
pop
std
jae
add
stos
pop
into
call
jbe
mov
test
push
pushf
push
sahf
pop
lods
pushf
add
insb
insb
lods
int3
in
sub
lcall
in
pusha
mov
dec
mov
in
jno
lcall
bound
and
xchg
data16
popa
cmpsb
hlt
xor
cmpsb
xor
dec
cwtl
push
cmpsl
ss
mov
or
daa
sub
sbb
insl
mov
mov
push
pop
mov
jl
dec
jmp
jne
imul
mov
or
pusha
sbb
push
into
test
add
jbe
and
int
lods
jg
into
aaa
popf
cmp
jl
ds
mov
inc
add
loop
mov
mov
mov
sub
jno
lods
mov
sbb
stc
inc
addb
loop
sub
sub
test
in
rep
repnz
mov
or
es
jg
ret
mov
pop
cli
mov
sbb
cmp
pop
cmpsl
sub
mov
push
push
mov
sbb
je
xchg
int
add
sbb
mov
xchg
aad
cmp
adc
stos
sub
call
jne
add
jne
jo
sub
xchg
push
mov
out
sub
xchg
mov
inc
push
leave
int3
aad
ret
rcll
jle
fnstcw
cltd
addr16
lock
and
fldcw
sbb
cmp
mov
into
sub
shrl
jle
cmpsb
shll
sub
jns
mov
cmc
mov
pop
leave
loop
mov
inc
dec
push
jo,pn
inc
dec
je
jmp
ss
jecxz
mov
das
leave
sbb
jle
out
int3
xor
ja
add
movsb
and
or
test
push
das
out
rol
mov
sbb
jae
clc
inc
cmpsb
xchg
xchg
les
scas
jne
cli
aam
lahf
call
xchg
lods
push
call
dec
lcall
or
and
xor
mov
call
bound
xor
inc
pushf
loopne
mov
call
mov
xchg
push
lahf
pop
cmpsb
dec
mov
sahf
dec
pop
ret
xor
mov
loop
mov
push
jmp
leave
mov
mov
scas
je
push
lret
enter
sahf
jecxz
divb
cmp
cs
das
and
jns
movsl
jmp
test
or
ffree
jnp
shld
mov
mov
sbb
rcll
cmp
add
and
pop
sub
dec
lea
mov
gs
jle
and
pop
jns
mov
loopne
cmpsl
addl
popf
sbb
roll
in
xchg
jg
mov
mov
mov
mov
inc
xchg
jns
xchg
xchg
bound
adc
mov
mov
pushl
mov
popa
adc
mov
aam
addl
cmp
jnp
adc
lcall
push
stc
dec
mov
repnz
mov
movsb
std
cmpsl
mov
mov
cli
test
je,pn
cs
out
dec
cmp
xchg
mov
xchg
xor
mov
out
add
xchg
fdivl
ljmp
in
xor
mov
mov
mov
cmc
mov
cmp
mov
das
mov
stos
ret
mov
xchg
cmp
mov
lcall
mov
fbstp
mov
leave
test
mov
jecxz
cmpsb
mull
mov
leave
mov
scas
stc
cmpsb
mov
into
dec
xor
or
mov
dec
cmpsl
add
mov
lea
mov
stos
xor
loope
scas
es
lret
mov
gs
jl
mov
jl
push
leave
xchg
hlt
pop
push
xor
or
dec
cli
not
ljmp
enter
xchg
in
rorb
lcall
sbb
rorb
jecxz
test
out
divl
push
jne
aad
js
cltd
dec
outsb
inc
inc
in
push
jae
xlat
ret
or
adc
and
sbb
loopne
imul
out
repz
stos
popa
cmp
mov
loopne
xor
loope
lahf
and
mov
xor
insb
jae
outsl
push
loope
imulb
sub
sub
mov
inc
xor
add
jne
cmpb
xchg
sbb
and
or
mov
test
cmp
or
je
fwait
mov
mov
ds
pop
pusha
pop
pop
cmp
dec
or
fisubs
xchg
cmp
sub
and
mov
mov
in
and
jmp
jae
loope
cmp
fwait
xchg
xor
cmc
inc
xchg
xchg
xor
pop
pushl
adc
rcl
and
movsl
mov
cld
fidivrs
push
mov
xchg
xchg
xor
pushf
cmp
icebp
out
sub
ret
cmpsl
and
mov
lret
xchg
leave
jle
es
mov
int
sub
pop
dec
repnz
mov
mov
mov
mov
pusha
pop
and
xlat
jmp
sub
mov
xchg
pop
test
cmc
jno
aad
xor
sbb
inc
cmp
and
inc
push
jno
lods
add
push
sub
xchg
in
mov
shlb
sbb
fadd
aad
aad
inc
xorb
movsl
jge
dec
cmp
mov
and
mov
cmpsb
lret
mov
cmpsl
test
push
jmp
imul
mov
pusha
pop
aam
mov
mov
ret
or
out
cmpsb
and
lret
leave
push
stos
mov
cmpsl
gs
arpl
sub
push
mov
and
cmpsl
inc
mov
mov
nop
hlt
mov
je
inc
add
cmp
push
mov
jle
mov
pop
leave
orb
lock
imull
mov
push
mov
nop
ss
bound
xchg
outsl
scas
xchg
sahf
xor
xchg
es
rclb
jo
arpl
aam
inc
popa
xchg
stc
popa
test
and
decl
mov
cmp
sbb
imul
test
push
lea
mov
pop
mov
bound
mov
pause
sbb
ror
pusha
pop
loop
inc
out
inc
pusha
sbb
test
or
aam
fwait
in
and
mov
and
clc
mov
dec
inc
adc
scas
add
addr16
xor
dec
aad
movsb
sub
imul
and
in
mov
adc
fnsave
push
out
push
push
insb
es
pop
cwtl
lods
leave
add
cmpsb
jns
sbb
or
or
xor
pushl
mov
cmp
sub
push
jae
popa
insl
out
mov
das
pop
sbb
mov
lahf
es
and
clc
iret
cmp
mov
mov
roll
mov
fimuls
mov
ss
xor
mov
mov
xchg
xchg
loop
dec
filds
mov
pop
ret
test
sub
ret
stos
mov
testl
mov
push
mov
mov
not
js
dec
add
mov
mov
ds
mov
fadd
and
arpl
movl
mov
lea
inc
cmpsl
mov
dec
leave
mov
icebp
gs
out
mov
test
imul
xchg
push
dec
mov
scas
push
call
dec
std
icebp
sbb
sbb
fst
xor
dec
mov
ret
jne
mov
ret
jns
mov
mov
test
xor
loop
mov
rcll
mov
lret
fsts
xchg
mov
lods
or
fs
or
test
ret
scas
lods
loop
inc
call
addb
pop
lock
mov
test
movsb
sti
out
xchg
add
repnz
xor
mov
aaa
mov
clc
sub
xor
xchg
mov
jns
addr16
sbb
dec
push
pop
out
jg
testb
jmp
lock
jge
or
test
mulb
xchg
fwait
push
popf
ljmp
mov
mov
adc
mov
cmp
mov
das
nop
jns
jmp
xchg
stc
adc
pop
xor
lahf
lret
cltd
fcoml
imul
or
mov
mov
sub
mov
inc
pop
jg
adc
xor
pop
lods
jb
cwtl
loope
aam
scas
lahf
and
xchg
pop
dec
fnstenv
aaa
cmp
or
xchg
insl
mov
pop
mov
sub
xchg
jns
ljmp
hlt
lcall
jle
imul
outsl
stos
pushf
mov
mov
into
push
stc
mov
mov
xchg
insl
jnp
cmovae
movsl
int3
andb
movsl
mov
mov
sub
push
sarb
push
je
movsl
ret
xor
adc
mov
lret
aad
mov
jbe
jno
loop
mov
aaa
xchg
leave
cmp
mov
add
jge
sbb
mov
test
mov
xor
imul
or
adc
pop
pop
cmpsb
pusha
sbb
push
push
out
loopne
adcl
pop
mov
int
imul
push
mov
scas
xchg
mov
jl
scas
inc
scas
xor
js
mov
call
fwait
mov
jl
movsl
pop
sub
in
push
push
cmc
les
mov
pop
outsl
push
xor
gs
imulb
inc
cmc
lcall
mov
add
fbstp
xchg
xor
ss
movsb
and
stc
sub
xchg
insl
negb
shrl
notb
sbb
negl
xor
mov
in
mov
shll
mov
add
cli
mov
jmp
mov
test
divl
imul
dec
push
sub
imul
lret
or
mov
jnp
out
scas
int3
jbe
push
enter
push
fidivrl
lock
cmpsl
push
mov
je
mov
shll
cmp
xor
inc
xchg
and
enter
xchg
sbb
lds
icebp
and
divl
xor
cmp
mov
cmp
xor
sarb
fnstsw
cmp
les
dec
mov
test
push
je
dec
jge
xchg
loope
push
jno
and
mov
jmp
leave
inc
push
mov
add
and
xor
fistpl
enter
cmp
and
lods
mov
stos
pop
xor
mov
sub
push
cmp
add
mov
leave
loop
xchg
mov
and
jno
xchg
jp
mov
mov
jecxz
gs
sub
xor
jae
cmp
lods
push
jle
mov
jl
lahf
xor
sub
inc
push
mov
xchg
sub
mov
sti
rolb
std
outsl
nop
push
lds
les
test
mov
cmp
jmp
xchg
das
dec
sbb
cmp
and
dec
push
jnp
lcall
push
adc
addr16
or
push
xchg
aas
int
fsubs
jecxz
test
mov
push
jbe
jg
add
mov
sbb
add
mov
roll
cmpsl
dec
jno
test
dec
sub
jecxz
and
add
js
push
lcall
cmp
sub
in
and
mov
enter
mov
or
or
xchg
mov
bound
or
xor
repz
sub
and
loop
cmp
mov
and
mov
mov
inc
scas
loop
mov
fnstenv
loope
cwtl
fadd
fwait
je
add
ret
cmp
popa
mov
or
popf
inc
lock
sbb
mov
es
rcll
xchg
mov
lods
sbb
ljmp
adc
mov
add
jae
hlt
cli
xor
stos
test
add
mov
push
test
add
add
out
pop
fnstsw
mov
int3
int
inc
mov
xchg
push
fsubl
push
es
repz
sti
cmp
or
fistpl
mov
jp
xor
jne
push
test
xchg
lods
negl
add
jmp
xchg
cmpl
fucom
dec
fimuls
cmpsl
xor
sbb
mov
ret
repnz
test
or
inc
xor
or
cmp
test
mov
test
cmpb
and
mov
rcr
adc
xor
sahf
jl
test
insl
cmp
sahf
sarb
and
arpl
push
in
xchg
enter
in
adc
jo
movsb
repnz
mov
mul
sarb
test
test
mov
iret
push
leave
mov
icebp
push
icebp
mov
cmpsl
mov
add
lret
lods
xchg
js
jmp
lods
dec
aaa
iret
adc
push
mov
mov
adc
pop
pushl
fs
fs
movsl
mov
xor
xlat
in
mov
jl
aam
outsl
inc
sbb
shll
xchg
adc
scas
aad
pop
adc
loop
xor
mov
jnp
outsb
repnz
std
xchg
les
dec
adc
push
cs
mov
push
dec
or
push
cmp
mov
rorb
leave
xchg
in
adc
sub
outsl
push
xor
push
movsl
or
into
push
repz
mov
clc
cmpsl
xchg
fdivl
xchg
ja
stos
loopne
cmpb
jo
and
into
pusha
popf
mov
xor
das
mov
cld
stc
imul
and
jmp
test
xchg
mov
gs
mov
mov
loopne
aad
outsb
loop
js
cmp
ss
sbb
mov
mov
mov
mov
outsl
adc
xchg
ds
or
push
inc
data16
imul
scas
addr16
mov
push
push
arpl
imul
fcompp
stos
loope
push
dec
mov
and
call
add
and
or
ja
lahf
xchg
repnz
ljmp
mov
mov
and
cmp
and
and
xchg
adc
and
movsb
xchg
adc
add
mov
mov
mov
out
enter
popf
movsl
lahf
xchg
pop
divl
orl
cmc
aam
mov
int3
out
rorl
mov
or
mov
mov
xchg
sub
shll
sbb
hlt
xchg
xchg
clc
imul
es
lods
lret
push
fmull
div
lret
cwtl
xlat
mov
ja
js
popa
daa
lea
lods
inc
icebp
push
js
data16
mov
sub
call
cs
pop
insb
mov
je
int3
lods
cli
cmc
add
dec
enter
xor
aad
jl
inc
cmpsl
lcall
mov
je
or
divb
adc
or
cmpb
push
iret
xchg
sbb
nop
lret
xchg
out
stos
addr16
out
fs
jmp
mov
and
testl
das
xor
add
sarl
cmc
mov
mov
mov
xor
iret
cmpsb
mov
jle
mov
out
rcr
and
shr
push
mov
mov
sbbl
bound
mov
out
in
mov
stc
sbb
cmc
sub
xchg
xor
bound
rcr
movsb
sbb
hlt
xlat
es
mov
notb
cmp
mov
xor
inc
pushf
pop
ficompl
mov
cmpb
jne
inc
adc
jmp
sbbl
adc
and
mov
mov
lea
xchg
cmpsl
aaa
pop
cltd
stos
test
mov
inc
mov
cs
xor
xor
sbb
sbb
jbe
pop
cmc
or
jmp
push
jno
in
xchg
jle
lret
and
adc
dec
push
sbb
cmp
jnp
xor
adc
adc
movsl
cmpsl
mov
fidivrs
int3
jbe
out
stc
mov
mov
or
stos
leave
int3
out
rcrb
push
push
and
lods
pop
js
jg
pusha
fisubrl
mov
or
or
sti
insl
pop
scas
jae
inc
and
xlat
xor
aam
subb
mov
push
jne
mov
xchg
inc
xchg
and
and
sbbl
inc
xor
loop
int3
lea
adc
jge
mov
dec
jmp
andb
es
adc
sub
loop
jns
idivb
mov
mov
test
sub
push
mov
inc
call
cmp
call
adc
jg
mov
jg
loope
inc
dec
mov
filds
push
jmp
cwtl
pop
pop
or
pop
pop
icebp
mull
fstpl
aad
push
adc
inc
ss
adc
push
cmp
rcll
shlb
push
mov
sub
in
mov
scas
add
xchg
mov
imul
dec
mov
mov
xor
into
mov
mov
out
stc
xchg
and
imulb
mov
neg
out
pop
sub
xchg
sbb
and
int3
je
pop
daa
xchg
xorl
shrb
fmull
leave
mov
je
mov
cmpsl
dec
movsb
into
movsb
sbb
and
adc
fwait
cmpsb
pusha
pop
sbb
jl
mov
sti
fisttpll
loop
mov
je
loop
popf
fildl
stc
lods
xor
popa
mov
mov
cmp
adc
cmc
das
test
xor
xorl
sbb
cltd
xor
sbb
fwait
sub
jl
pop
ret
add
dec
add
movsb
mov
push
mov
mov
mov
adc
mov
xor
sub
cmp
test
jne
adc
push
inc
je
push
int
lahf
and
cmp
mov
popf
xchg
jno
xchg
scas
push
xchg
loop
aad
inc
movsl
loop
lret
push
mov
cwtl
mov
xlat
cmp
jnp
push
inc
aaa
xchg
jmp
lods
mov
das
enter
xchg
arpl
sub
loope
in
inc
inc
mov
je
xchg
mov
mov
icebp
in
cmpsb
fwait
sbb
mov
xchg
or
mov
fistps
fwait
jns
pop
or
xor
push
mov
movsl
mov
int3
sub
fxam
push
js
es
dec
mov
hlt
jmp
data16
xor
repnz
dec
cmp
lret
ja
mov
cmp
leave
fs
movsb
cmp
fsub
insl
aas
gs
jo
lret
fnstcw
adc
xor
and
cmpsl
mov
inc
lock
push
mov
idivb
inc
stc
mov
repnz
jmp
nop
inc
push
mov
rcrw
mov
mov
movsb
xchg
lock
mov
push
dec
std
test
outsb
pop
loopne
es
xchg
xor
mov
xchg
pop
xchg
or
adc
mov
das
push
nop
mov
cld
cli
or
aaa
sbbl
not
loop
add
sahf
xor
mov
mov
hlt
add
daa
and
movzwl
jmp
mov
add
push
ljmp
add
fidivrl
pop
xchg
jb
add
lcall
sbb
cmpsl
pushl
fnsave
movsb
ljmp
mov
jne
sbb
cmp
mov
ja
cmpb
sub
sub
testl
movsb
negl
adc
int3
dec
mov
xchg
loop
mov
adc
and
xor
loop
adc
pusha
mov
movb
aam
out
jmp
movsb
mov
inc
mov
leave
or
inc
loop
mov
lods
cmp
mov
imul
cmpsb
mov
cmpsb
aam
xchg
lahf
cwtl
inc
call
icebp
in
push
stos
sbb
pop
inc
adcb
call
pop
mov
inc
iret
sbb
out
cmp
inc
lcall
or
lock
data16
xchg
mov
cmpsl
fxch
sbb
mov
loopne
and
dec
mov
adc
inc
dec
adc
sub
xchg
push
daa
out
and
lahf
rorl
push
arpl
mov
gs
xlat
filds
sub
mov
mov
ja
popa
add
push
test
leave
xchg
mov
and
push
movsb
mull
push
negb
stos
sarb
js
inc
or
sub
mov
jns
stos
jae
je
ret
mov
xchg
dec
mov
pop
xchg
addr16
mov
in
aaa
and
xor
jg
hlt
push
xchg
sub
cmp
xchg
stos
push
leave
and
ljmp
push
or
sbb
shr
mov
ljmp
mov
mov
ds
mov
ffreep
sbb
jmp
sbb
xor
sarb
pop
mov
pop
xor
das
repz
pop
adc
push
sub
out
xor
mov
mov
sub
sub
or
aas
arpl
mov
push
scas
mov
rolb
sub
loope
decl
stc
repz
dec
addr16
push
xchg
je
push
fdivs
in
sub
jnp
cltd
sbb
enter
inc
jno
cmp
push
mov
push
ficoms
mov
dec
mov
ja
mov
hlt
neg
and
xor
outsb
jae
cmpsb
sbb
test
stc
bound
iret
fstpl
mov
cwtl
mov
mov
mov
adc
jg
push
aam
enter
and
sbb
decl
mov
adc
sbb
jg
jne
repz
in
ljmp
shrl
mov
aad
ret
mov
inc
mov
lret
call
inc
push
or
popa
xor
loopne
into
jo
test
xor
xchg
push
out
cld
jecxz
imul
mov
push
and
dec
cmp
lods
cli
test
mov
mov
call
les
mov
jge
mov
out
fists
enter
insb
or
jmp
aad
mov
mov
lds
mov
mov
popf
lcall
rcl
mov
jl
mov
insl
adc
sub
unpckhps
inc
mov
insl
mov
adcb
mov
cmpsl
ja
sbb
repz
jns
pop
leave
pop
stos
clc
jp
popa
es
lret
mov
add
mov
pop
fsubrl
mov
rol
pop
mov
mov
and
hlt
jno
jae
pusha
xchg
leave
loope
shr
and
or
xchg
mov
adc
stos
cmp
leave
mov
and
sub
out
test
mov
mov
add
mov
out
mov
sub
in
mov
out
jmpw
mov
push
jmp
and
pop
mov
les
dec
mov
adcb
insb
mov
mov
mov
data16
add
fsubrs
mov
ja
jl
push
gs
roll
ret
movsb
rcll
aad
leave
pop
test
mov
cmp
hlt
out
xchg
cmpsb
or
or
mov
out
jnp
pop
jl
shr
aaa
out
fstpt
push
push
and
idivl
jnp
xlat
xor
int3
repz
mov
cmp
xchg
or
mov
xchg
add
jl
mov
push
jnp
or
mov
xchg
mov
mov
mov
mov
divl
push
xchg
and
fimull
in
dec
vpminub
mov
pop
xorl
stc
push
lahf
mov
jo
fildll
mov
jnp
stc
jl
aad
mov
inc
push
enter
leave
xchg
sub
mov
cmp
adc
cli
mov
mov
mov
adc
cmpsb
mov
mov
shl
scas
leave
and
fnstcw
or
lock
jecxz
or
mov
outsl
mov
leave
sbbl
enter
lahf
push
fnstsw
jmp
scas
cmp
and
cmp
imul
jns
mov
sub
mov
icebp
out
insb
out
mov
pop
mov
lcall
cmpsl
shr
in
jmp
cmpsb
mov
push
cmp
test
pop
ss
loopne
fistps
add
or
jbe
mov
jmp
cmpsl
adc
pop
push
jo
loope
jle
andb
mov
movsb
and
popa
adc
adc
repnz
sbb
pop
inc
mov
daa
cld
repz
jo
xor
stos
out
mov
jp
jmp
icebp
sbb
pusha
lretw
nop
ficoms
jg
pop
xchg
sbb
int3
adc
mov
test
pop
pop
sahf
adcl
cmc
and
pop
nop
fidivl
in
inc
mov
in
repnz
mov
pop
imul
dec
sub
imul
jo
pop
cmp
jne
ss
scas
mov
dec
jb
cmp
in
filds
cs
lods
popf
mov
push
jecxz
pop
cmpsb
jnp
push
stc
cmp
ret
jno
mov
daa
mov
ljmp
das
fmuls
enter
adc
pop
mov
outsb
js
mov
cmp
jne
push
or
xor
in
int
jg
imul
xchg
sbb
sub
add
stos
mov
sti
xor
int3
sub
sub
xchg
bound
ss
dec
xchg
negl
or
dec
cltd
xchg
lret
sbb
pop
insb
cmp
sbb
outsl
jge
mov
mov
sarl
lcall
mov
in
repz
jg
sbb
jbe
adc
or
scas
clc
mov
jle
inc
data16
pop
out
mov
cmp
mov
or
mov
outsb
mov
fistps
lds
nop
adc
push
mov
inc
pop
leave
mov
inc
jmp
lcall
sbb
fxch
mov
add
lret
xchg
call
mov
in
mov
inc
out
lahf
push
xchg
sahf
jbe
xor
mov
mov
inc
cmpsb
repz
dec
notb
push
cld
xor
into
xor
enter
or
inc
enter
push
mov
sbb
dec
inc
mov
aaa
and
sbb
or
cld
mov
sbb
mov
cmp
mov
xor
mov
out
stos
xchg
sub
sbb
je
sbb
clc
jmp
dec
outsb
xor
dec
test
cwtl
out
in
into
int
xorb
fidivrs
inc
sub
and
mov
fs
mov
mov
movsb
ljmp
push
sub
ljmp
into
test
sub
inc
out
enter
and
mov
and
cmp
sub
xor
mov
push
sbb
inc
ror
jg
popf
cmp
mov
shlb
aam
stos
in
mov
mov
sbb
cmp
cmpsl
loop
sub
call
lret
fdivs
mov
js
inc
xchg
bound
pop
cld
dec
xchg
jbe
and
fcmovbe
jne
jle
mov
flds
mov
es
xchg
mov
aad
jle
sub
roll
adc
jmp
adc
imull
pop
cmp
les
xchg
insb
cmp
jne
test
inc
leave
movsb
dec
cwtl
mov
pop
mov
mov
jae
sbb
mov
dec
xor
clc
mov
cld
insl
aam
shl
cli
lock
mov
imul
lcall
shl
js
and
mov
push
jecxz,pn
push
out
movsl
jle
cmp
jle
lea
jmp
mov
popa
ljmp
cld
imul
mov
mov
xchg
cltd
xchg
mov
mov
mov
dec
xchg
jbe
mov
sarl
add
mov
mull
daa
outsb
rcrb
test
add
sub
mov
jae
mov
test
pusha
sbb
mov
lret
aas
sbb
or
mov
and
jb
sbb
mov
push
add
scas
lds
mov
icebp
aam
je
cmp
mov
pop
mov
in
imul
mov
aam
xlat
adc
jnp
dec
mov
mov
call
nop
pop
gs
push
mov
xchg
aad
and
sti
mov
fsts
push
adc
jbe
or
dec
shll
mov
fbstp
movsl
or
cmpb
push
stc
pop
gs
push
stos
jge
adc
jne
adc
sbb
xchg
mov
mov
movsl
push
negl
mov
inc
adc
loope
push
pop
test
mov
sbb
mov
push
inc
jge
add
xor
mov
pop
dec
in
or
xor
shll
cmp
jmp
mov
xorl
dec
lret
jl
xchg
pop
popf
or
inc
flds
xor
mov
cltd
enter
cmpsb
inc
push
add
pop
push
xchg
pop
fs
lods
inc
pop
adc
mov
xchg
icebp
ljmp
das
push
mov
lods
or
inc
mov
cltd
lcall
lcall
cli
sahf
push
ds
addr16
push
mov
sub
stos
jle
fucomp
sub
xchg
push
test
pop
cmc
inc
les
mov
jne
cmpsb
sub
aaa
fwait
and
jne
sbb
aaa
add
mov
mov
es
sub
dec
mov
jmp
mov
cmpsb
add
or
jl
jge
fwait
sub
dec
leave
and
push
add
mov
mov
mov
movsl
lock
xchg
cli
in
call
mov
push
gs
out
clc
jne
jae
xchg
out
fiaddl
fwait
ds
stos
jl
jb
out
addr16
movsl
xor
ja
push
movsb
cmp
popa
mov
mov
mov
mov
cmp
mov
cmp
mov
mov
sarl
jnp
loopne
repnz
sbb
scas
dec
xchg
push
jecxz
xchg
in
jmp
into
popa
mov
outsl
out
cmp
test
jae
call
cmp
sub
xor
loop
jl
repnz
popa
push
fists
mov
xor
push
not
aaa
lds
xchg
cmpsb
jbe
bound
lcall
mov
cmp
movsb
testb
repz
iret
mov
mov
mov
xor
aad
jbe
cli
cmp
add
cmp
sbb
cmc
mov
sbb
ret
mov
cli
sub
mov
sti
xor
std
in
cmp
or
push
movsl
pusha
cli
add
lods
insb
pop
movsl
sbb
cltd
sub
mov
push
xchg
add
add
loop
xchg
cmpsb
cmc
mov
std
mov
lcall
movsb
lret
popa
sbb
cmpsb
xchg
fsubrs
lahf
jge
push
fmull
mov
movsl
dec
inc
inc
data16
fldt
sub
rol
xchg
jae
or
sbb
adc
cmc
lcall
mov
leavew
ljmp
test
repnz
xchg
xchg
lahf
fisubrl
lahf
decl
leave
mov
fldenv
push
jg
cwtl
loopne
dec
aas
roll
fimuls
push
xor
popa
scas
cltd
and
rcl
jmp
into
imul
pop
test
adc
in
adc
stos
test
aas
ret
ss
ja
cltd
pop
ret
or
ja
out
mov
push
mov
push
shll
aaa
mov
cmp
mov
lock
mul
lods
xor
iret
jns
cmpsl
mov
inc
mov
jecxz
icebp
mov
jb
add
mov
stos
xor
xor
cs
add
push
das
xchg
cwtl
mov
push
sub
mov
sahf
rep
hlt
jae
pop
jo
call
shrb
and
cltd
add
pop
adc
mov
fcoml
shlb
xchg
in
add
pop
ljmp
popf
jp
ja
push
out
pop
daa
dec
outsl
ljmp
stos
add
add
daa
outsl
adc
in
cmp
jmp
and
mov
sub
jg
add
loope
movsb
stc
in
push
mov
jmp
hlt
cmp
out
mov
iret
sub
adc
ja
and
andl
jne
sbbl
leave
outsb
lods
loop
stos
outsl
popl
ret
pop
jg
out
add
cmp
mov
jb
mov
sarb
push
jae
hlt
inc
cmpsb
mov
sbb
xor
jno
jmp
sub
icebp
push
and
loope
mov
or
sub
arpl
adc
div
inc
mov
xchg
jg
pushf
cmp
data16
ja
mov
pop
clc
push
jae
cmp
loop
outsl
and
test
mov
stos
js
xlat
enter
int3
mov
stos
inc
jbe
mov
out
lea
mov
aas
push
test
push
pop
das
inc
and
pop
sbb
jl
mov
push
mov
imul
inc
jo
jbe
jo
sbb
cmpb
cli
mov
xlat
lds
movsl
stos
aam
cmp
lea
xchg
int3
pop
mov
xor
outsb
sbb
out
iret
mov
mov
movsl
rcrb
cltd
push
enter
ljmp
int
leave
popf
ds
push
or
mov
fwait
xchg
inc
cmp
push
cmc
xchg
mov
cwtl
push
jle
out
xor
icebp
mov
mov
sbb
mov
xor
and
js
mov
scas
sti
jcxz
mov
call
xlat
aas
or
adc
or
fs
addr16
inc
and
inc
and
inc
ffree
inc
mov
cld
js
mul
mov
aaa
stc
mov
leave
pop
mov
mov
or
loop
aas
mov
ja
mov
lcall
loopne
xchg
mov
addr16
push
imul
or
dec
js
jmp
icebp
fdivr
mov
pop
dec
and
fs
adc
jmp
and
push
addr16
cmp
and
adc
adc
xchg
xlat
or
push
or
xor
mov
ds
ds
lods
mov
movsl
xlat
mov
gs
js
test
cmc
aas
stos
mov
ds
aaa
pop
cmpsb
mov
jp
ss
mov
push
into
mov
stos
push
popf
data16
outsb
mov
push
dec
and
jl
cltd
in
jne
xor
movsl
mov
and
mov
in
xor
cmp
fnstsw
out
pop
cmp
test
and
and
mov
sbb
jns
jecxz
adc
int
data16
pusha
lret
mov
out
mov
jge
mov
dec
xor
jl
test
mov
sbb
jne
inc
iret
bound
push
popf
addr16
and
mov
ret
xchg
fdivrl
xor
push
pushf
xor
out
mov
shr
leave
aaa
xor
stos
ljmp
test
sub
xchg
scas
cmpsl
dec
enter
rcrb
cli
xchg
xchg
jecxz
xchg
sbb
mov
shll
cmpsb
push
xchg
sub
dec
gs
pushf
mov
mov
and
cmp
shl
pop
push
mov
push
lods
rorb
jae
dec
out
xor
mov
cs
push
out
cmpsb
cmp
xchg
jne
ss
push
in
and
pusha
inc
mov
notb
cmpsb
out
mov
mov
dec
in
pop
pop
orb
lock
mov
ja
out
out
pusha
fcoms
scas
out
pop
inc
jle
xor
les
dec
mov
enter
stos
adc
cwtl
sub
push
push
loop
mov
mov
jle
loopne
push
test
mov
int3
dec
iret
loopne
in
xlat
dec
or
jne
mov
fstpl
cltd
mov
mov
lcall
and
inc
mov
dec
mov
hlt
mov
cmp
mov
push
mov
test
xor
fwait
ds
mov
call
mov
mov
add
mov
add
pop
xchg
out
lcall
jne
or
aas
movsb
and
or
pusha
outsl
in
or
cmp
lods
cmc
loope
mov
es
mov
push
mov
xchg
gs
xor
shr
inc
in
adc
cmp
cmp
and
mov
repz
mov
xchg
dec
xor
or
mov
fsubrs
pop
or
mov
mov
orps
imul
xor
je
outsl
jg
in
test
hlt
fmull
mov
push
pop
inc
sub
xchg
xchg
dec
pop
hlt
add
dec
sbb
sti
mov
cmp
test
xor
jne
lods
lcall
mov
xor
shl
cld
push
mov
clc
shl
pop
mov
fistpl
xor
add
xlat
fldl
xor
insb
or
sbb
mov
jecxz
xchg
xchg
dec
cmp
pop
xchg
jae
mov
xor
cmpsl
mov
xor
cmp
mov
pop
scas
je
cs
cmpsb
popf
sarl
cmp
jl
aaa
xchg
sub
xchg
xor
loopne
nop
cli
mov
stos
pop
icebp
nop
xchg
add
adc
and
cmp
jmp
mov
fisubrl
ja
mov
out
ficomps
mov
imull
and
fwait
jl
out
cltd
pusha
fnstcw
repz
adc
pop
popa
xchg
rcll
dec
push
cli
sbb
jb
scas
lahf
clc
or
mov
and
lahf
mov
fidivs
repnz
in
ret
pushf
dec
add
movsb
cmp
dec
mov
jae
mov
aaa
in
mov
int3
sub
add
cmpsb
jbe
lcall
lcall
and
lcall
aad
js
bound
jae
sub
jmp
sub
xor
mov
or
cs
jae
stc
out
or
inc
cli
mov
pop
mov
hlt
and
sub
sahf
pop
sahf
xchg
jle
cltd
in
shr
and
loope
or
fs
xchg
arpl
xor
cmpsb
in
xor
mov
sub
std
xchg
xchg
sub
push
mov
in
lcall
xor
movsb
mov
sbb
adc
inc
ljmp
mov
shrb
popa
dec
pop
pop
daa
fsub
jnp
loopne
mov
or
and
lea
pop
fmull
sbbb
push
repnz
and
add
pop
std
mov
xchg
mov
pop
in
cmpsb
mov
shl
ret
out
sbb
js
xchg
das
ja
lea
cli
cmpsb
xchg
repz
sub
sbb
lret
subb
dec
and
jecxz
ds
daa
fs
pop
sub
clc
mov
sbb
mov
or
loopne
mov
push
mov
addl
jne
jmp
xor
loope
dec
mov
movsl
ret
out
xchg
leave
add
loope
cmpsl
sahf
inc
or
jp
cmpsb
ficoms
stc
dec
jnp
data16
int3
jae
jno
aaa
dec
mov
sti
lea
int3
aam
sbb
je
mov
pop
mov
cmp
mov
cli
es
test
aaa
imul
mov
rolb
mov
dec
js
mov
das
sub
js
and
mulb
mov
pusha
lret
bound
mov
mov
sbb
dec
lods
js
mov
dec
dec
jae
inc
aaa
cmpsb
test
insb
add
or
fcomps
mov
sti
fistpll
mov
std
and
and
es
sbb
popf
rorl
pop
clc
sbb
mov
or
dec
mov
fwait
int3
xor
jo
push
mov
movsb
mov
mov
insb
mov
jge
test
fldenv
icebp
fincstp
leave
ljmp
cmp
and
add
popa
cmp
or
and
mov
xchg
loope
je
loop
xor
outsl
cmp
pop
mov
add
pop
addr16
cli
lret
pop
mov
mov
cmpsb
cmpsb
xchg
leave
sub
mov
pop
ret
icebp
aaa
push
loop,pt
add
sbb
push
inc
jmp
jnp
pinsrw
sub
int
loope
mov
mov
testl
mov
jae
pushf
inc
pop
movsl
out
mov
jne
test
push
mov
jecxz
call
push
dec
stc
lahf
add
fwait
sub
sarl
stc
mov
popa
cld
and
call
pop
movsl
cltd
push
push
outsl
popf
cmp
xorb
dec
xlat
scas
lods
scas
movsl
and
push
or
or
daa
mov
dec
xchg
in
cmc
call
lds
ljmp
test
mov
loopne
addr16
pop
sub
stos
push
lcall
pusha
dec
sbb
xor
test
movsb
mov
movsb
in
jl
sub
sub
test
pop
mov
test
cmpsb
incb
test
or
out
inc
mov
pop
out
rcll
xor
sbb
lods
xchg
xchg
add
inc
ljmp
test
xchg
mov
dec
mov
popf
adc
sti
cmpsl
roll
ja
repz
inc
in
decb
sbb
loopne
mov
shll
mov
imul
sub
sub
jo
jecxz
lea
cmpsb
xchg
lcall
sbb
mov
lea
xor
sub
jno
fs
xchg
push
in
fdivrl
mov
jl
sbbb
ret
pop
jo
aaa
stc
pop
movsb
es
test
adc
cmpsb
ror
out
inc
roll
and
imul
test
jbe
jecxz
inc
push
adcb
xchg
loope
inc
push
push
mov
pop
notb
ja
pop
mov
adc
adc
pusha
fdivr
push
cmp
mov
test
jl
jne
mov
and
into
mov
xchg
sbb
or
in
xor
and
push
jecxz
jge
push
sbb
pusha
cmp
mov
cmp
push
rorb
add
push
cmp
ja
mov
mov
gs
pop
movsb
xchg
aas
loope
enter
push
lock
mov
stos
sbb
insl
adc
movb
mov
sub
mov
mov
hlt
cmp
and
dec
mov
notl
mov
cmpsl
sub
mov
cmpsb
fistpll
add
ret
add
xor
mov
push
aam
shrb
in
cmpl
push
cli
jae
push
xor
scas
push
and
and
outsb
inc
or
adc
add
jp
and
rcrb
call
mov
lds
int3
and
fcmovne
lea
ret
push
insb
mov
sub
mov
xor
inc
dec
add
sti
adc
pop
dec
out
push
mov
aad
loopne
xorb
popf
ret
lret
push
xchg
icebp
inc
jae
and
out
pop
xorl
pop
push
adc
xchg
sub
dec
jae
sub
cmpsl
cmp
adc
iret
ja
fwait
clc
mov
sub
xchg
xchg
mov
cli
sbbl
sub
stos
out
sub
aam
fisubrs
fbstp
fsub
mov
xor
lret
hlt
inc
inc
jge
pop
mov
testl
mov
out
addr16
arpl
ret
mov
into
in
mov
sub
xor
in
mov
push
push
xchg
movsl
loop
ljmp
imul
loope
aas
mov
imul
add
std
int
pop
sbb
jl
ds
imul
loop
shlb
loopne
lahf
das
xchg
mov
xchg
and
mov
call
lods
mov
pop
ds
push
das
mov
in
stc
pop
mov
fistl
data16
jecxz
mov
dec
dec
ljmp
xchg
sbb
jp
movsl
sti
xchg
insl
pop
xchg
jae
fsubrl
in
and
adc
xchg
movsb
cli
pop
imul
or
lahf
loopne
mov
pop
icebp
sub
popa
mov
xor
jle
movsb
rclb
imul
push
int
push
jo
xor
cmc
sub
std
xor
out
xchg
dec
das
pop
xchg
out
inc
pushf
clc
jle
test
cmpsb
je
pop
xor
mov
popf
insl
js
sbb
ret
and
cmovnp
mov
lods
push
movsl
stos
mov
cmp
clc
inc
mov
les
adc
push
aam
pop
cmp
js
push
jo
sub
mov
mov
cltd
pop
loop
and
adc
lock
jmp
repz
and
sahf
ret
fidivs
dec
mov
jbe
pop
lahf
cmp
inc
push
insl
clc
out
push
mov
mov
jg
sahf
push
stc
cmpsl
fnstcw
jl
sbb
and
shll
adc
jmp
pop
mov
cld
sub
aad
mov
cmp
and
or
dec
cmp
pop
test
xlat
sbb
outsb
sub
outsb
xlat
and
dec
mov
jno
mov
ja
jle,pt
loop
inc
xchg
clc
les
or
and
xchg
inc
mov
dec
les
es
or
mov
push
jnp
scas
mov
xchg
mov
aas
mov
push
aas
xlat
xchg
xlat
and
sub
mov
sbb
xchg
jge
dec
xchg
mov
and
es
popa
pushf
divl
mov
test
cmpsb
out
mov
jmp
mov
scas
in
pop
xor
mov
outsb
data16
inc
push
jmp
mov
xchg
popf
add
ljmp
flds
int3
sbb
mov
test
data16
push
mov
jl
lods
inc
mull
cmp
add
push
addr16
cmc
ret
push
mov
leave
sub
aaa
test
adc
lret
fstpt
leave
testb
push
idivb
lcall
sbb
idivl
jne
mov
pop
push
out
test
lods
psrad
mov
cmpsb
mov
cmp
popa
sub
in
xor
push
je
add
pushf
clc
js
dec
mov
xor
jmp
popa
mov
push
sarl
movsb
bound
push
cmp
xchg
xchg
rcll
jge
xlat
push
add
test
pop
frstor
xor
mov
scas
gs
dec
push
into
dec
xor
stos
xchg
inc
movsb
imul
inc
sbb
jae
add
jns
mov
popa
mov
testb
int
xor
dec
ret
rcll
sub
cmpsl
repnz
sub
jg
pop
aad
push
out
ret
xchg
cmpb
pop
int3
push
xchg
jo
or
or
push
adc
fildll
mov
dec
sahf
in
jne
pop
out
add
lea
sbbb
repnz
jmp
shlb
mov
cmpsb
sbb
jb
fmull
mov
ja
pop
ja
lods
aaa
ret
jne
movsl
xor
ljmp
sbb
sti
mov
cmpsl
push
outsb
andb
mov
bound
xchg
pop
mov
loop
aad
inc
jo
ja
and
mov
int3
in
cmc
nop
in
movsl
data16
testl
jle
push
test
mov
lret
sub
gs
sub
out
sbb
mov
inc
cmc
inc
ljmp
mov
jl
sbb
push
push
jmp
aaa
es
push
dec
icebp
test
fisubl
stos
jecxz
pusha
shr
shrb
call
rclb
shlb
notl
out
push
dec
pusha
sub
into
mov
les
cwtl
add
test
pop
out
mov
mov
push
mov
repnz
xor
cmp
push
mov
cmp
inc
mov
mov
inc
jge
loope
fisubrl
xchg
movsl
sbb
mov
dec
sarl
sub
repz
jnp
scas
jl
adc
popf
test
scas
insb
pop
pusha
adc
add
mov
mov
clc
or
or
rcl
in
inc
divb
jge
mov
ret
and
in
je
mov
in
cmp
push
std
cmp
adc
adc
inc
fnstsw
insl
adc
xchg
test
cmp
inc
test
sub
xor
divl
lock
testb
mov
pusha
cltd
jnp
orl
mov
icebp
out
pop
sub
adc
popf
insb
inc
jnp
adc
lods
mov
movntps
add
sub
sbb
mov
adc
dec
cmpsb
push
or
push
lock
or
int3
inc
shl
dec
add
dec
lods
fstps
sbb
xchg
xchg
inc
ss
mov
add
idivb
fisubl
adc
in
movsl
and
push
xchg
xor
cli
fildl
cmp
cmpsl
add
int
xchg
mov
xchg
fidivrl
pushf
mov
fisubl
dec
test
sbb
jno
es
or
push
cmp
cmp
mov
push
pusha
mov
mov
sbb
iret
movsb
sbb
lret
nop
xchg
dec
fnsave
xor
push
aas
mov
xor
lret
lods
leave
leave
insb
cs
nop
dec
or
jmp
leave
pop
sbb
adc
push
int
gs
adc
dec
jae
and
or
xor
push
mov
bound
adcl
mov
add
out
xchg
test
ds
aam
and
sbb
insb
mov
sub
mov
cmp
jmp
pop
fwait
mov
inc
push
and
loope
add
push
mov
and
inc
stos
sub
ds
adc
add
xchg
cli
pusha
shrl
mov
pusha
hlt
sub
xchg
lahf
mov
inc
and
fincstp
mov
gs
mov
pop
jp
lret
adc
pushf
and
bound
aam
xchg
and
sar
stos
mov
dec
fwait
test
repnz
out
popf
lea
stos
fdiv
movsb
std
xor
imul
cmp
cmpsb
xor
aad
or
outsw
xchg
and
outsb
adc
lcall
sub
jmp
out
into
mov
jmp
out
mov
test
mov
xchg
daa
push
out
das
xchg
outsl
jp
out
scas
outsl
inc
cmpsl
sbb
or
ret
pop
rorl
in
in
popf
sub
xchg
inc
js
outsl
bts
inc
push
push
mov
pop
adc
mov
mov
mov
hlt
ficomps
mov
fxch
jae
aam
push
int
cmp
and
or
out
and
outsb
or
ja
lahf
jns
jb
std
xor
mov
pop
add
imul
mov
stc
call
and
and
pop
insb
add
lret
pop
jmp
pop
shrl
lret
sub
fistpll
imul
sahf
subb
dec
sti
movsb
mov
or
movl
out
mov
xchg
gs
inc
into
stos
divl
frstor
andb
mov
sti
xchg
mov
sub
pop
and
mov
es
mov
push
mov
cmpsb
lret
gs
cltd
jmp
pop
into
rcrl
mov
mov
sub
jnp
cmpsb
dec
mov
push
stos
test
outsb
push
ljmp
mov
mov
jl
sbb
pop
ret
bound
rcr
mov
inc
xchg
ret
into
jmp
roll
dec
lret
push
or
lds
mov
push
movsb
je
cmp
andl
mov
pusha
sub
daa
test
push
jno
xchg
ljmp
shl
imul
mov
into
xor
dec
xor
xor
lahf
cs
xchg
loope
inc
imul
loop
and
add
divb
mov
shrl
jne
xchg
cmp
add
ds
jne
push
lea
pop
mov
push
std
adc
and
and
into
loop
popa
andl
inc
or
movsb
xchg
and
roll
adc
and
jle
sahf
or
push
mov
test
cmp
push
aam
adc
pop
loop
repz
dec
movsb
xlat
lea
pop
repnz
dec
mov
stos
rcrl
xor
xor
adc
data16
out
jg
and
iret
mov
mov
mov
aas
and
jle
and
cltd
cli
nop
dec
jb
sbb
xchg
sub
mov
ret
test
jle
js
mov
notb
popa
add
fs
jg
dec
or
mov
ss
cmpsl
add
sbb
xchg
std
into
ljmp
xchg
lods
mov
push
xchg
push
pop
or
xchg
jp
test
xchg
mov
xchg
es
insb
sbb
inc
cwtl
jmp
popf
je
jp
cmpsb
ret
test
rcrb
sub
sbb
mov
loopne
rclb
ss
add
test
jle
shll
xchg
push
mov
dec
and
and
loope
push
ss
sub
out
xor
leave
js
das
sahf
jbe
sbb
out
loop
cwtl
xor
ljmp
xchg
jae
icebp
movsb
xor
imul
mov
cmp
pop
dec
sbb
repz
gs
jne
mov
cmpsl
sub
push
mov
adc
or
adc
iret
push
shlb
clc
jmp
shl
xchg
xor
shl
cmpsl
jae
outsb
and
movsb
pop
out
jnp
test
fptan
jg
ja
mov
sub
enter
jb
mov
dec
push
pop
lds
movsb
jae
les
test
subl
insl
pop
or
addr16
and
cmp
cmp
cmp
mov
popa
dec
mov
or
rcrl
xlat
je
loop
ljmp
scas
mov
imul
xlat
std
outsb
lods
clc
pop
inc
xor
pop
mov
popf
sub
xchg
mov
rorb
cmp
mov
pop
add
jmp
imul
js
aad
lea
sub
cwtl
pop
jp
stos
pop
test
dec
fmull
outsl
or
add
mov
or
into
nop
add
sbb
cltd
stos
outsb
inc
out
mov
xchg
mov
sarb
sub
mov
shlb
mov
dec
cmp
jo
test
loop
gs
cmp
xchg
stc
cld
cmp
mov
test
sub
js
stos
mov
adcb
pop
mov
enter
inc
dec
daa
dec
lcall
nop
ficompl
out
cltd
mov
push
jbe
aad
jo
jmp
fistl
xchg
jecxz
test
mov
leave
aad
mov
es
int
lods
ljmp
sahf
dec
mov
lods
jbe
lcall
jl
ljmp
stos
gs
outsl
mov
and
out
stc
cwtl
and
mov
lahf
test
dec
dec
sub
xchg
ljmp
bound
jp
lret
mov
xor
stc
or
mov
vcvttsd2si
scas
dec
or
or
lcall
scas
xor
enter
pusha
add
int3
and
pushf
out
and
fsubl
mov
movsb
add
addr16
mov
clc
xchg
cmp
xor
stos
add
sub
enter
lret
pushf
out
cmp
mov
xor
cmp
fistl
imul
imul
movsl
pop
aaa
xchg
js
dec
mov
data16
in
mov
mov
pop
or
push
add
lds
cmpl
or
test
cmpsb
xchg
int
pop
add
rol
das
negb
push
mov
inc
mov
mov
inc
mov
xor
mov
sub
js
mov
xchg
fwait
sub
cli
jl
cld
into
sub
jl
mov
push
cmc
fdivs
pushl
addb
andl
lret
mov
bound
jnp
out
int3
cmp
xchg
mov
mov
or
xor
mov
icebp
and
jo
jge
addr16
rcrl
je
and
cltd
rcrl
ss
into
cwtl
lea
in
cmc
add
mov
push
je
iret
cmp
jae
dec
inc
jo
xor
ds
push
aaa
test
push
aaa
pop
out
dec
mov
js
jl
inc
mov
sub
push
out
lahf
mov
jne
cmp
into
dec
popa
lds
xchg
mov
push
cld
and
adc
xor
sub
xchg
pop
or
enter
fisubs
jmp
cmpsl
rcl
inc
out
es
xchg
xchg
lods
arpl
jnp
in
or
mov
je
loope
std
push
clc
jne
mov
loope
test
mov
pushf
mov
xchg
xchg
jmp
out
nop
cld
push
out
das
repnz
or
hlt
test
les
mov
pop
xchg
bound
pusha
add
es
hlt
xchg
outsl
mov
sub
mov
sbb
or
lcall
js
loop
xor
jne
push
mov
enter
mov
or
jmp
sub
ror
aad
ljmp
mov
and
and
outsl
mov
xchg
xchg
frstor
repnz
sub
xor
lret
in
mov
inc
stos
popa
jne
movsl
and
pushf
lods
xchg
and
fsubrs
add
cmp
pop
mov
push
es
push
sub
scas
dec
in
cmp
shrl
cltd
sarb
out
bound
mov
lods
jg
lret
push
sahf
mov
cmpsb
dec
add
stos
imul
or
icebp
sti
pop
xor
xchg
adc
daa
aam
addr16
xor
adc
daa
outsl
or
loop
mov
mov
jns
push
popf
cli
push
xlat
mov
mov
xchg
sbbb
loop
addr16
cmp
xor
cld
jg
add
stc
movsl
addr16
cmp
mov
mov
pop
jg
mov
jmp
push
mov
xchg
jecxz
das
jl
cmpsl
push
scas
mov
xchg
arpl
data16
cmpsl
push
div
std
int
dec
ret
adcb
pop
ret
adc
js
jns
loope
loop
fnstenv
push
mov
mov
stc
test
push
mulb
rolb
sbb
mov
or
aaa
jae
sub
mov
or
iret
enter
icebp
ret
gs
push
jl
mov
mov
popf
adcb
mov
mov
pop
or
add
and
cmp
test
mov
imull
and
arpl
daa
shlb
test
lret
mov
mov
xchg
data16
test
mov
lds
fidivrs
ret
arpl
add
add
xchg
cmc
jbe
push
in
and
mov
dec
push
ret
pop
mov
push
sub
pop
inc
inc
aaa
sub
scas
sub
and
test
ds
ds
iret
or
jmp
fistl
mov
imul
jno
stos
or
jecxz
mov
clc
xchg
cli
xchg
ret
loop
hlt
adc
mov
cwtl
mov
orl
mov
jl
inc
cmp
call
jp
mov
mov
and
aaa
mov
mov
loope
adc
test
fdivrl
xor
inc
xchg
sbb
int
gs
call
fnstcw
cmp
mov
icebp
subb
jne
jbe
sub
dec
adc
jbe
inc
imul
daa
in
adc
arpl
frstors
in
mov
aaa
pop
cli
adc
mov
repz
sub
addl
and
push
jmp
nop
or
lods
push
and
jl
mov
and
leave
adc
and
mov
in
bound
out
sub
mull
icebp
ds
mov
lahf
jne
or
aam
inc
or
mov
scas
ja
adc
mov
sbb
xor
add
mov
add
jmp
jl
mov
mov
mov
push
enter
mov
loopne
aaa
rolb
xor
repz
ds
es
mov
or
je
ljmp
mov
stos
mov
imul
mov
lods
push
je
lahf
pop
cmc
outsb
cmp
pop
dec
sub
xchg
clc
rcr
cmp
nop
mov
xchg
arpl
imul
aad
dec
clc
sbb
mov
jecxz
int
pusha
nop
dec
fldcw
data16
jmp
aas
loop
shrb
pusha
js
xchg
je
cmpsl
sti
push
test
inc
loope
lcall
mov
xlat
lods
pop
test
inc
addr16
xor
jge
pop
mov
add
cmc
inc
lods
cltd
mov
mov
and
adc
push
movb
dec
mov
or
sub
lock
jmp
push
repnz
xchg
in
cmp
cmp
jne
sub
mov
test
iret
mov
cmpsl
adcl
xor
sbb
rclb
mov
or
inc
mov
imul
add
je
shll
js
jns
jns
insl
loope
and
adc
xchg
jecxz
xchg
or
dec
cmp
xchg
inc
test
mov
inc
or
stc
leave
push
fisubl
les
dec
mov
adc
bnd
stos
xchg
sahf
sti
sub
mov
xlat
sub
or
iret
or
jp
pushf
pop
cltd
push
nop
add
push
mov
jne
js
cmp
inc
push
fiadds
xchg
shll
in
test
and
popa
mov
push
mov
lcall
push
and
daa
loope
fcmovu
js
shlb
in
push
leave
dec
iret
adc
mov
add
insb
cmp
cmp
into
js
mov
push
jbe
ret
daa
test
add
nop
movsl
test
mov
and
lea
adc
je
fstpl
mov
nop
test
cmpsb
xchg
mov
mov
inc
insb
cld
adc
mov
mov
xor
clc
lods
pop
js
test
jno
push
loop
jne
push
xor
pop
mov
xlat
mov
push
sahf
adc
sub
push
lret
stos
in
test
jnp
mov
repz
daa
ds
and
aas
sbb
inc
call
jbe
xor
imul
mov
dec
mov
cli
shll
mov
xor
shll
aas
sbb
mov
jns
test
bound
dec
lret
xor
xchg
lods
rorl
loop
and
xchg
mov
push
sbbl
shll
imul
in
dec
cmpsb
sarl
add
mov
inc
ret
arpl
lret
push
push
jo
mov
ficoms
push
in
idivl
pusha
es
in
decl
movsl
testl
lods
ret
jecxz
push
pusha
and
xor
insl
std
xchg
dec
js
aad
adc
sub
movsb
mov
xchg
outsb
fimuls
add
push
pop
test
loop
es
shll
jecxz
jge
and
pop
daa
sbb
mov
push
jmp
mov
inc
mov
mov
idivb
scas
mov
mov
es
stos
gs
out
cmp
dec
xor
lret
aaa
adc
xchg
pop
sub
es
arpl
sbb
sub
ret
xchg
cwtl
mov
hlt
leave
sub
cmp
roll
popa
lock
mov
jp
dec
pop
jae
lock
lahf
push
popa
push
mov
cmp
sub
out
movsl
xchg
mov
test
jbe
mov
cmpsl
out
scas
cltd
rorl
stos
popa
ficoml
mov
lret
mov
sti
cmpsl
testl
mov
and
jg
scas
jl
imul
dec
js
repz
movsb
add
mov
stc
daa
xor
js
sub
sub
negl
test
into
call
mov
bsf
push
mov
ljmp
cmp
dec
imul
pop
and
cltd
pop
leave
pop
movsb
fnstenv
and
lahf
mov
test
into
mov
and
test
mov
mov
mov
pop
push
fistl
pusha
aad
loop
dec
test
stos
pop
movsb
clc
xor
mov
mov
cmp
and
sub
add
mov
aaa
repz
into
and
cld
sahf
or
fbld
movsb
jle
sbb
jnp
push
pusha
call
ja
jle
test
pop
iret
lahf
iret
imul
ljmp
mov
cmp
pop
pusha
cli
adc
pushf
bnd
pop
and
fiadds
mov
lret
fidivrs
cmp
hlt
ss
dec
leave
xchg
fstpt
jmp
repnz
mov
in
cmpsb
sub
mov
mov
addr16
jg
ja
out
std
stos
aas
pop
fwait
mov
imul
mov
mov
in
mov
out
test
cmpsl
into
lcall
inc
mov
mov
addr16
ja
xchg
dec
lods
sub
fstpt
imul
xchg
imul
std
adc
out
sbb
mov
pop
shrl
xor
jmp
inc
in
int
add
out
addr16
mov
add
jp
adc
add
int
jae
xchg
pop
lret
into
lods
aam
cmpsl
into
arpl
mov
mov
push
and
sbb
and
testl
inc
inc
cmpsl
sti
out
jo
jmp
push
fcomps
push
and
adc
mov
dec
bound
xor
aad
pusha
pop
mov
call
or
push
xor
addr16
and
push
mov
cwtl
outsb
xor
mov
leave
mov
test
into
dec
jo
xor
popf
cmpsb
test
jmp
pop
or
aas
aaa
test
popf
pop
fcom
jmp
cmpsb
cmp
je
pop
stos
ljmp
ljmp
test
push
shl
cmp
push
insl
inc
or
mov
xor
jmp
out
aad
dec
jp
mov
sar
lods
or
jne
mov
sub
mov
decl
cmp
divl
repnz
mov
jmp
data16
aas
mov
mov
mov
ds
stc
stc
add
cmp
jge
aas
addr16
cmpsl
jmp
fcoms
ret
mov
test
jg
lea
pop
or
test
xchg
jb
xchg
cmp
xor
pop
push
cmp
enter
mov
jbe
dec
pop
xor
jg
mov
cwtl
not
lea
sub
cmpsb
data16
fidivs
mov
inc
stos
lods
es
lcall
mov
xor
imul
inc
mov
imul
aas
cwtl
or
insb
fscale
mov
cmp
popa
xor
push
adc
jp
sbb
add
sub
xor
mov
sbb
hlt
pop
mov
mov
pop
sahf
nop
dec
cmpsl
mov
lcall
dec
fldcw
js
subl
cmp
mov
mull
or
push
or
add
divl
jg
rolb
pop
xchg
inc
push
test
scas
aaa
mov
outsl
int3
mov
mov
pop
insb
fsubs
in
popa
cmp
cmp
xchg
dec
mov
neg
std
push
cmpsb
push
repnz
mov
jp
testb
lcallw
loop
sbb
mull
or
es
or
and
inc
out
not
cmc
pop
dec
lahf
sub
repnz
scas
in
ficoms
mov
mov
sbb
lret
aas
enter
lods
jne
mov
mov
pushf
push
popf
andl
xchg
sbb
orl
sub
lahf
adc
cld
push
das
mov
mov
data16
pop
in
loope
dec
in
ljmp
cmp
mov
test
mov
test
outsl
push
test
test
pop
cmp
sarl
mov
lods
and
push
push
jmp
movsl
adc
into
iret
out
aad
aas
test
sub
hlt
push
repnz
cmp
xor
divb
or
inc
loope
std
mov
and
sub
pop
inc
mov
lcall
jae
aam
in
cltd
nop
js
test
fcomps
push
mov
test
divl
hlt
lahf
out
insl
shrb
push
xchg
xchg
xchg
add
mov
mov
stc
clc
and
pop
fadds
ja,pt
jmp
add
pop
in
mov
loopne
dec
filds
mov
push
mov
ja
cli
cmpsb
ljmp
push
ljmp
test
hlt
or
stos
cmp
jmp
cmp
push
mov
movsl
push
nop
mov
fnstcw
adc
je
cmpsb
fst
mov
xor
mov
rcrb
cli
movsl
mov
sbb
mov
leave
jg
test
setns
fbstp
aam
push
je
arpl
sub
insb
cmpsb
jbe
and
gs
cmp
scas
xchg
xchg
aad
pop
leave
aam
mov
adc
mov
fstpl
cmpsb
enter
or
gs
cmp
aaa
push
jl
enter
mov
fxch
jo
es
inc
push
xor
fidivrl
adc
push
pop
ficoml
jb
adc
or
roll
mov
test
imul
push
sub
xchg
cmp
add
fsubs
leave
das
adc
rorb
sub
sub
nop
xchg
call
fbld
aaa
imul
cli
mov
lods
sti
jecxz
cmpsb
add
sahf
pop
das
xchg
sub
cmpsl
ss
sahf
sbb
add
cs
jmp
fcoms
sub
jge
mov
pop
lods
jl,pt
daa
jmp
sbb
dec
js
inc
mov
push
sub
notb
loope
movsl
cld
mov
shlb
dec
icebp
nop
stc
in
jle
decl
mov
andb
xchg
test
fs
push
gs
mov
ret
cmpsl
pop
clc
insb
jge
cmp
push
cmpsb
and
sbb
mov
lcall
or
xchg
adc
dec
or
jl
int3
sub
xchg
cli
mov
push
dec
movsl
imul
lods
stos
push
movsb
xor
mov
shll
mov
or
dec
aad
sub
mov
lods
mov
push
mov
mov
ljmp
loope
stc
inc
adc
xchg
ljmp
pop
repz
roll
adc
xchg
rcrb
push
xchg
ja
jecxz
and
xor
out
or
dec
mov
sbb
xor
mov
cmp
pop
imul
pop
cmpsb
stos
enter
addr16
int3
or
jg
mov
les
std
mov
fcomip
lcall
iret
ljmp
inc
xor
sbb
ret
push
test
das
cmp
lods
shlb
or
mov
imul
push
int
sbb
dec
test
dec
lea
inc
push
ja
mov
int3
cmp
xor
loop
sub
shlb
movsl
mov
mov
push
lods
hlt
mov
nop
sbb
imul
fstps
mov
inc
mov
notb
lds
dec
test
in
lods
jnp
sub
pop
mov
lods
pop
cmp
and
into
mov
lret
fnstenv
fs
aas
into
scas
roll
add
fimull
or
daa
scas
xor
js
mov
loope
ffree
xchg
clc
adc
das
test
lret
xor
and
push
xchg
mov
test
mov
and
out
ds
addr16
or
push
xor
mov
rcl
cmp
push
fs
leave
leave
lcall
push
les
mov
pop
jl
dec
out
std
jae
ljmp
or
xlat
or
outsl
ss
aaa
sub
mov
dec
ja
pusha
fdivr
enter
adc
sub
ja
sti
aam
int
sub
pusha
sbb
popa
sub
sbb
adcl
inc
jne
adc
int
add
faddl
test
and
int3
and
fwait
jl
and
mov
push
or
pusha
jg
xchg
dec
jae
cmc
mov
bound
mov
jmp
sub
xor
adc
loop
lahf
dec
adc
cmp
loope
iret
fdivp
mov
gs
cs
ds
pop
setae
ja
lret
jae
ror
jle
xor
mov
aad
push
mov
mov
fcoml
or
dec
sbb
jmp
xchg
outsl
jecxz
pop
push
and
out
imul
pop
in
push
mov
arpl
enter
jno
add
cmpsb
jecxz
dec
rorl
cmpsl
cmp
leave
mov
push
add
jp
stos
mov
rclb
adc
xorl
xor
add
out
push
imul
incb
jns
and
xchg
adc
lahf
xor
jg
xchg
cli
cmp
ficoml
stc
imull
cmpsb
mov
cli
data16
imul
cmpsl
xchg
jmp
jmp
aaa
push
push
adc
xchg
shr
movsl
mov
fldenv
xchg
clc
imulb
leave
jp
dec
mov
jns
dec
jg
fsts
movsl
jecxz
pushf
mov
mov
bound
mov
dec
leave
ja
mov
cli
pop
xor
mov
jmp
mov
das
lahf
hlt
imul
jbe
mov
cmp
push
adc
js
jmp
in
mov
shlb
add
add
lea
ja
lods
fldcw
pop
fdivr
jl
jo
push
out
mov
cmc
nop
cmp
xor
xchg
add
pop
push
dec
xor
xchg
cmpsb
mov
mov
push
popf
sub
xchg
inc
sbb
cmpsl
rorl
loop
test
imul
dec
mov
das
aam
adc
nop
fucom
shrl
cmpsl
stc
call
mov
mov
out
cmp
cmp
add
mov
lods
mov
cmp
rol
and
xchg
adc
cmc
sub
sbb
sti
nop
jl
sti
mov
es
push
das
xchg
xchg
sbb
stos
cmpsl
clc
sub
jl
mov
repnz
push
and
leave
push
ds
xor
lcall
jge
ficoms
xchg
js
nop
mov
mov
orl
into
adc
imul
fildll
lds
mov
inc
int3
mov
cli
mov
out
aam
mov
enter
pop
cmc
add
iret
repnz
push
cld
loop
into
and
dec
inc
scas
gs
insb
cmpsb
and
ror
pop
inc
add
mov
xor
and
add
movsl
jne
adc
jge
jmp
jg
ror
push
ret
dec
clc
sbb
push
jecxz
stos
push
enter
push
cmpsb
enter
sbb
mov
fsubs
add
popa
mov
or
xlat
xchg
add
jne
cmp
sbb
icebp
lahf
lods
push
cmp
adc
dec
mov
cmpsb
or
sub
movsb
iret
imul
xor
movsb
cmp
aam
pop
mov
test
mov
sbbb
not
mov
dec
pop
mov
leave
test
push
mov
lret
out
ds
clc
push
mov
test
xchg
add
add
and
stos
repz
jo
cwtl
jmp
push
sub
jl
test
add
repnz
fmull
dec
mov
aad
mov
repnz
jb
adc
inc
aad
xor
nop
xor
stos
ror
js
aam
inc
dec
jmp
mov
negb
clc
xchg
fldl
das
js
xchg
dec
into
cltd
or
loop
and
stc
dec
movsb
lods
sub
xchg
jmp
int
stos
mov
leave
mov
lahf
mov
xor
es
mov
pop
or
ret
sbb
ljmp
pop
enter
dec
rcll
cmpsb
sub
pop
cmpsl
mov
mov
xor
jmp
and
xchg
mov
mov
mov
cmp
and
ja
es
add
xchg
cmpl
mov
push
and
xchg
mov
pop
cmpsl
inc
out
shlw
pop
popf
rcll
fdivs
mov
movsb
in
aad
and
hlt
aaa
scas
cmpsl
in
lods
leave
mov
es
sarl
mov
push
push
dec
mov
ss
sti
jl
hlt
xor
mov
daa
jnp
xchg
inc
daa
mov
cmpsb
or
xor
out
push
or
fsubs
test
mov
and
ja
jmp
mov
pop
add
xor
push
mov
sub
mov
test
test
xchg
cltd
or
popa
jmp
call
fldenv
fcomip
inc
aad
ds
mov
and
jnp
into
das
jbe
push
or
or
xchg
leave
jb
adc
repz
test
mov
mov
aaa
pop
stos
mov
cltd
mov
ficoml
into
arpl
out
mov
ret
int3
cmpsl
push
sarb
mov
jecxz
sbb
std
out
and
mov
addr16
imulb
test
outsl
xchg
push
sbb
adc
or
push
cs
sbb
cmpsl
mov
cmpsl
mov
mov
movsb
mov
popa
mov
dec
lahf
rolb
push
pop
out
push
dec
aad
ds
mov
adc
or
mov
out
and
dec
fdivs
xchg
in
ja
and
mov
fcomps
fcoml
xchg
jge
arpl
mov
scas
sub
outsb
sbb
cmp
xor
scas
inc
mov
push
mov
icebp
add
push
mov
adc
or
jb
aaa
or
in
pop
cmp
pop
ret
mov
clc
mov
and
mov
cwtl
xor
xchg
cwtl
in
test
notb
scas
int
ljmp
xchg
ds
in
negb
mov
add
jno
or
push
addr16
test
gs
xchg
fimuls
bound
sub
insl
mov
jbe
push
or
nop
add
call
xor
test
popa
dec
dec
xchg
mov
cmpsl
mov
pushf
scas
push
sub
adc
jae
push
xor
popf
int
jp
and
call
fcmovb
shlb
mov
bound
push
xor
inc
sbb
iret
std
cmpsb
sub
jp
mov
xchg
and
rcrl
hlt
out
mov
sub
shrl
out
lahf
or
sub
fwait
enter
dec
pop
mov
icebp
notb
lret
jne
mov
ret
xchg
mov
loopne
jmp
adc
sti
mov
sarl
and
pop
add
mov
pusha
xchg
xor
loop
shrd
jo
mov
mov
out
pushf
push
push
or
repnz
cmpb
test
dec
scas
loope
fimull
and
out
mov
inc
mov
ds
out
add
add
daa
mov
pop
testl
cmpsl
mov
cmpsb
mov
leave
test
cltd
in
mov
pop
popa
hlt
cmp
sbb
out
cltd
lods
leave
cmp
jne
ss
xchg
cwtl
test
add
push
lds
mov
je,pt
jecxz
bound
jp
in
ret
clc
mov
fldenv
cmpsb
sbb
int
fstpl
movsl
mov
jle
xor
pop
xchg
jbe
divl
xor
push
cmp
inc
inc
aad
gs
mov
xchg
sbb
jle
mov
mov
mov
in
imul
in
cmp
and
ja
hlt
mov
mov
mov
mov
sbb
inc
insl
and
out
cmpsb
loop
fldt
iret
leave
mov
sub
mov
int3
aaa
mov
cmpsl
sarb
push
cmpb
aad
out
sti
es
jno
sub
mov
sub
mov
jmp
mov
les
inc
int
gs
outsl
fwait
jns
mov
ror
enter
in
repnz
es
outsl
cwtl
push
xchg
and
push
mov
mov
push
call
sub
jo
add
mov
sub
subl
iret
mov
movsl
fwait
std
cmp
mov
gs
sub
jge
sub
mov
sub
test
jecxz
mov
sub
push
fwait
adc
dec
push
in
sub
subl
mov
out
dec
call
clc
mov
ds
and
addr16
jmp
ljmp
xor
test
fwait
mov
call
pop
mov
and
xchg
xor
jle
cmp
pop
pushf
mov
cmpsl
pop
aad
int
and
lcall
inc
or
aaa
mov
dec
cmp
push
mov
sbb
cli
pusha
pop
pop
mov
cmp
ljmp
pop
ss
pop
into
push
sbb
das
cltd
xchg
lds
cltd
addr16
cli
adc
and
popf
xor
xchg
movsl
inc
xchg
icebp
dec
mov
ss
xchg
dec
int3
pop
adc
lea
cmp
mov
dec
pop
in
loope
test
ss
daa
inc
push
or
fisttpl
dec
pop
jns
and
shr
ljmp
lahf
push
shrl
jl
movb
movl
hlt
jae
lock
daa
mov
das
xchg
sbb
cld
or
mov
ret
shll
filds
sar
cmp
mov
dec
jno
sarl
mov
mov
js
jne
mov
idivl
call
mov
imul
out
cmp
shlb
das
in
jmp
dec
mov
mov
xor
fdivl
xchg
sub
cmp
mov
and
cmp
clc
iret
jbe
pop
cmpsb
mov
xchg
aaa
outsl
mov
sbb
cmp
adcl
fidivrl
into
xlat
mov
sbb
xchg
push
dec
scas
call
lahf
cmpsl
or
xchg
arpl
mov
ret
shl
gs
mov
call
pop
inc
adc
mov
icebp
xchg
inc
loope
pop
into
xor
outsb
and
daa
aas
xor
sbb
mov
push
and
lret
cmpsb
mov
xchg
xor
mov
aaa
mov
mov
dec
mov
ror
iret
jns
ja
sbb
jecxz
inc
pop
sbb
daa
sub
mov
sbbl
sahf
jns
pop
adc
enter
sub
cmpsl
push
add
fldt
jne
mov
fs
inc
loop
jns
mov
notl
adc
push
fidivrs
imul
data16
cld
mov
loope
test
fadds
xchg
pop
repnz
jo
scas
push
sti
imul
mov
mov
mov
cmp
stos
lods
inc
sbb
pop
aam
push
cmp
pop
lods
aas
sbb
dec
mov
jne
jecxz
addr16
or
test
xor
jle
leave
push
cs
mov
repnz
add
movsl
xor
or
ja
fstp
ja
pop
jnp
xchg
cld
test
xchg
in
or
inc
cmpsb
mov
mov
enter
xor
sub
mov
jl
rclb
mov
hlt
int3
cmp
cmpsl
data16
sub
push
dec
mov
sbb
stc
lcall
mov
cmpsl
leave
mov
mov
xchg
and
es
stc
int3
dec
mov
lret
and
cmp
push
lcall
in
test
jecxz
push
mov
mov
pusha
jecxz
movsb
ret
xor
imul
dec
int
mov
outsb
pusha
test
das
jle
mov
mov
ss
pop
add
leave
cmp
dec
insb
fwait
add
ljmp
mov
mov
adcl
arpl
mov
cmpsl
add
mov
mov
push
and
jl
or
and
and
push
adc
jle
rcl
sub
repz
jl
sti
and
jb
mov
out
mov
leave
loop
push
decl
jo
mov
mov
daa
ja
and
popf
es
pushf
idiv
hlt
ret
mov
ss
push
pop
push
notl
pop
testb
imul
test
jl
je
cmpsb
pop
sbb
xchg
cmpsl
test
pop
sub
sahf
mov
stos
xor
ror
or
xchg
jle
int3
dec
sahf
sub
pop
insl
push
cmpsl
push
mov
or
stos
jl
mov
push
mov
andl
int3
stos
add
cltd
mov
mov
into
out
sub
pop
push
shlb
pop
jmp
mov
cmp
hlt
xor
pop
lods
js
cmp
dec
lods
cmpsl
shr
dec
pop
add
xchg
outsl
mov
test
outsb
push
mov
sti
mov
jns
jl
int3
out
cmpsb
repnz
sub
imul
add
arpl
sbb
adc
pop
loop
out
aaa
sbbl
lret
pop
mov
ss
mov
enter
xor
mov
fs
sub
mov
outsb
ret
js
rcll
loop
aam
xor
mov
leave
jne
sbb
add
mov
pop
inc
sahf
sbb
test
pop
push
out
in
jle
in
jnp
rorb
lds
jbe
jno
or
shrb
ret
sub
push
sub
scas
inc
adc
lcall
mov
data16
stos
mov
jecxz
xchg
fnsave
jecxz
push
push
out
movsl
xchg
arpl
mov
jae
test
adc
test
mov
std
and
jl
scas
mov
jnp
xchg
mov
jne
jge
pop
int
je
mov
mov
mov
cwtl
fwait
dec
push
sub
jbe
cmp
cmpsb
loope
outsl
sbb
mov
fsubs
jge
add
aam
mov
cmpsb
mov
xchg
out
and
cltd
cmp
cld
push
dec
mov
in
xchg
imul
nop
loopne
push
add
cmp
mov
sub
out
pop
mov
outsl
xor
xchg
fmuls
jg
inc
inc
leave
pop
and
shll
pop
cld
or
dec
ja
mov
or
and
inc
adc
or
cmpsl
cltd
xchg
scas
aaa
pop
addl
push
cs
pop
mov
orl
data16
xor
dec
jge
push
lea
lahf
cmp
fsubl
lcall
test
mov
cmc
pop
lret
cmp
test
mov
mov
mov
mov
lret
mov
loopne
xchg
subb
addl
mov
out
ss
mov
cmpsl
fwait
subb
ds
in
cmpsl
pop
popf
xchg
cmp
adc
sbb
push
and
sbb
sub
jp
movsb
pop
jmp
lock
stos
jnp
push
cmp
scas
syscall
pop
inc
fidivs
sub
sbb
loopne
jne
adc
cmp
ss
mov
insb
sbb
sub
je
adc
and
repz
jl
jmp
or
mov
add
pop
cmpsb
loop
mov
bound
cmp
shl
xchg
xchg
inc
pop
test
movsb
out
fs
jns
jmp
stos
jo
repz
cmpb
dec
test
clc
push
in
jmp
in
adc
mov
jmp
xchg
dec
es
out
inc
mov
sub
mov
popa
push
stc
imul
mov
sub
mov
mov
mov
gs
in
imul
push
popf
pop
mov
inc
movsl
fldenv
repnz
xor
add
out
inc
in
cs
mov
fidivs
loop
cmp
sbb
les
pushf
and
push
lock
mov
and
pop
pop
lds
pop
adc
andl
movsl
push
std
sbb
mov
popf
leave
leave
sub
movsb
into
mov
inc
mov
test
test
sbb
xchg
addr16
jge
mov
sub
push
mov
rol
xor
lret
pop
clc
mull
jmp
mov
pusha
mov
cli
repnz
mov
fisttpl
out
xchg
sub
mov
cmpsb
add
sub
sub
sub
push
sbb
mov
push
gs
insb
test
xchg
pop
out
mov
xchg
movsl
fildl
roll
addr16
outsl
and
inc
xor
lods
lods
popa
divl
leave
xchg
dec
hlt
inc
loopne
fcoml
shr
mov
data16
inc
and
lods
int
sub
fnstenv
pop
jecxz
adc
fs
loop
movsl
jae
out
or
jne
mov
xchg
push
pushf
xchg
fstps
popa
jge
shrb
jg
xor
mov
sub
testb
pop
mov
jmp
lret
mov
xchg
in
mov
xchg
scas
testl
mov
ja
lret
xchg
fwait
cli
xor
fisttps
adc
jl
xor
dec
out
loope
repnz
fs
pop
aam
popa
mov
or
add
daa
xchg
ja
and
scas
test
cmp
dec
mov
and
push
sub
cmpsl
fsts
nop
decb
scas
imul
stc
aaa
lahf
jecxz
lret
nop
je
adc
frstor
inc
lods
push
xlat
mov
int3
mov
fstl
ss
sbb
test
popa
sub
rorb
xor
stc
repnz
lods
pusha
sub
mov
add
inc
hlt
and
add
or
sub
testb
push
leave
pusha
ret
jbe
and
cmpsl
or
pop
sahf
loop
push
mov
add
nop
inc
repnz
loope
mov
fwait
jnp
outsb
mov
fsubrl
cmp
sub
and
mov
cmp
hlt
mov
cwtl
cmpsb
mov
stos
clc
xchg
cmc
inc
rsm
notl
mov
ret
mov
xchg
or
cmovge
pop
aaa
inc
dec
adc
movsl
sti
shll
mov
insl
out
sub
sahf
and
pop
imulb
jmp
popa
jne
pop
sub
lds
jmp
int
in
cmp
in
mov
mov
add
inc
cmp
inc
jne
push
aaa
mov
or
xor
mov
jp
mov
adc
mov
or
jmp
mov
xchg
jg
push
sahf
daa
aaa
outsb
stos
push
xorb
pop
into
cmpsl
mov
fwait
mov
lret
dec
mov
repz
xchg
adc
jbe
stos
mov
je
mov
and
mov
and
or
xchg
lods
push
insb
mov
add
jbe
xchg
sbb
push
loop
bound
pop
cltd
daa
push
loopne
hlt
leave
pushf
int3
iret
scas
rcll
cmp
jne
js
fcmovu
lret
ja
es
clc
sub
pop
and
test
sbb
outsl
ret
dec
jle
jae
cmp
xchg
das
pop
inc
add
lds
jge
jecxz
inc
mov
inc
scas
pop
iret
leave
out
adc
cmp
imulb
xor
sub
pop
stc
movsl
rcll
mov
add
mov
sub
fst
inc
cmpsb
mov
mov
int
inc
pop
cmp
loopne
mov
pop
jne
outsb
pop
dec
pop
outsb
jno
pop
test
xor
push
gs
lds
cmp
loopne
adcb
roll
or
mov
call
mov
mov
push
or
pushf
lds
dec
ret
mov
ljmp
js
push
sub
test
mov
lds
mov
lea
cltd
out
negl
adc
loop
lahf
xchg
fcmove
xlat
pop
xchg
jmp
xchg
xor
mov
into
aas
jmp
sti
call
cmp
inc
out
repnz
es
sub
fcoml
sbb
loop
pop
dec
pushf
pop
iret
jne
or
repz
jle
lahf
mov
fwait
movsl
call
mov
pop
cmp
cmpl
andl
addr16
sarb
mov
mov
in
jmp
stc
or
cmpsl
push
and
push
cli
stos
mov
std
into
or
es
jle
pop
sub
lea
es
leave
dec
and
movsl
cld
clc
test
test
jl
dec
stos
sub
dec
rol
movsl
pop
sti
push
mov
mov
sub
mov
mov
mov
push
sub
ljmp
dec
stc
push
call
and
in
pushf
sbb
shrl
sbb
pop
inc
push
insl
pop
or
daa
push
push
ficompl
mov
outsb
mov
leave
jp
xchg
sarb
outsl
js
js
test
loope
iret
stos
rcl
test
xchg
or
xchg
sbb
pop
test
mov
lea
test
pop
push
cmpb
cmp
inc
adc
cmp
outsb
adcl
sahf
jl
xlat
mov
addr16
int
dec
test
inc
sbb
sbb
sti
lahf
or
leave
jp
clc
gs
movb
adc
inc
or
lcall
shl
mov
test
es
jne
pop
cli
jg
icebp
mov
enter
idiv
ss
fisttps
dec
ss
and
sub
scas
jmp
movsb
or
cmp
xchg
cmp
xor
imul
rorb
add
mov
dec
mov
adc
jmp
aas
loope
int
arpl
xchg
add
cmpsb
cli
enter
sbb
mov
sub
fmuls
sub
mov
imul
push
out
loop
or
mov
push
add
scas
leave
in
push
push
mov
fs
es
mov
popf
add
adc
icebp
cmp
pop
bound
jne
sbb
jp
nop
dec
jne
cmc
mov
movsl
jmp
and
mov
jmp
stc
inc
sub
xchg
pushf
lret
lahf
cmc
pop
out
mov
call
les
test
jmp
or
std
jmp
sub
mov
mov
jne
jmp
inc
jmp
mul
jnp
lahf
mov
push
dec
nop
or
pop
xchg
push
stos
cli
fucompp
das
nop
in
leave
aaa
mov
or
jl
arpl
out
xor
or
jno
cmp
out
jecxz
cmp
bound
in
mov
xor
in
bnd
addr16
fcomi
aad
jmp
addr16
xor
xchg
pop
cmp
cmp
adc
jbe
enter
mov
das
add
cmp
push
xor
scas
lahf
movsb
sbb
cmpsl
orb
in
sub
popa
into
outsb
int3
mov
or
popa
jmp
insl
adc
lock
xor
lods
sahf
push
call
cmpsl
cltd
sub
mov
stos
sub
cli
jg
pop
cmp
std
add
pop
mov
loopne
sahf
xchg
jnp
mov
lock
or
mov
and
andl
xlat
jl
leave
mov
addr16
pop
cld
les
mov
cmp
mov
sub
leave
imul
cli
iret
in
out
sbb
popf
push
jb
mov
sbb
or
mov
stos
enter
xor
ret
bound
sti
push
gs
adc
leave
mov
mov
lods
jecxz
jns
cmp
sub
mov
inc
xor
and
xlat
mov
arpl
mov
pop
in
daa
mov
xor
inc
call
out
aad
mov
adc
mov
ret
jl
stos
push
decl
xor
mov
js
sub
nop
rorb
or
adc
push
jae
add
pusha
fisttpl
rorb
mov
mov
push
dec
xchg
adc
repnz
mov
xchg
and
imul
adc
and
and
and
dec
pop
jl
mov
es
stos
push
stc
mov
imul
mov
ljmp
fs
push
fnstenv
or
inc
jg
cltd
or
push
ljmp
repz
add
cltd
push
scas
or
push
sahf
int3
mov
mov
and
in
mov
adc
outsb
add
push
dec
rolb
jmp
push
add
xor
inc
xchg
sub
loop
stc
repz
push
jle
orl
mov
mov
aaa
lret
xlat
stos
mov
test
inc
test
enter
std
sbb
rcr
leave
loop
dec
mov
sub
mov
lahf
jecxz
and
mov
cmpsb
lcall
push
mov
lret
push
clc
pop
movsb
rcpps
call
jmp
cld
mov
imul
push
sbb
sbb
loop
shl
cltd
test
mov
mov
pop
cmp
mov
mov
push
cmp
cli
mov
mov
jae
jbe
sub
xchg
dec
sub
xor
adc
movsb
movsb
sbb
adc
sti
movsb
bound
xlat
adc
hlt
outsb
jo
sub
jmp
movsb
push
add
xchg
adc
mov
xor
fisubrl
xchg
test
push
xchg
jmp
or
mov
leave
push
mov
ljmp
jne
sub
sub
mov
cli
aam
insl
mov
mov
push
and
cmp
stos
pop
cwtl
mov
es
cmpsl
push
mov
test
push
xor
push
sbb
mov
or
pop
cmp
mov
mov
xchg
into
daa
sub
in
stos
ds
fildl
out
pusha
sub
cmpsb
push
jecxz
dec
rcrl
in
pop
fwait
enter
jnp
cmpsb
lods
ss
xchg
enter
ds
pop
or
lds
xchg
test
rclb
mov
imul
mov
mov
dec
xor
shll
mov
loope
cmpsb
outsb
sub
lret
mov
mov
sti
add
xchg
cmpsl
add
xchg
xor
clc
mov
cmpsb
cmp
shll
push
push
and
cmpsb
cmc
fbstp
push
lret
xor
mov
jle
cli
daa
mov
lcall
lcall
lcall
call
mov
mov
lcall
stc
cltd
fdivrs
movsl
or
mov
fsubrl
fmuls
mov
xlat
clc
pusha
stos
inc
sub
mov
push
xchg
outsl
mov
mov
cmpsb
lds
mov
gs
popa
dec
icebp
nop
mov
clc
cmp
sbb
xchg
xchg
mov
stc
mov
or
test
dec
or
dec
es
jl
cmpsb
mov
dec
cmpsl
sub
mov
cli
push
cmpsb
rclb
loop
out
and
fs
and
jl
push
and
and
jle
mov
ds
sahf
mov
push
outsb
into
mov
and
sbb
jecxz
xchg
sub
mov
addr16
movsb
mov
stos
inc
jmp
fsubrl
mov
das
movb
jmp
sahf
xor
and
and
or
pushf
mov
pop
push
mov
test
push
jge
cmp
mov
ljmp
notl
sbb
xor
or
dec
jmp
jb
pop
sbb
xchg
mov
push
push
test
bound
stos
or
ljmp
cli
cmp
lods
sbb
loope
mov
int3
add
cmpsl
jae
pop
or
xorl
mov
jg
sbb
push
imul
insb
scas
popa
std
aaa
shrb
and
sti
out
sbb
inc
jg
testb
fdivrl
or
lret
rclb
push
aas
sbbb
mov
sbb
jg
leave
cmpsl
dec
xchg
imul
xor
xchg
rcll
iret
ret
sbb
test
bound
jmp
movsl
inc
pusha
xlat
add
xor
popa
sbb
pop
xchg
loope
cmp
popa
adc
mov
pop
xchg
outsl
and
jb
cmpsl
cmp
mov
xor
xlat
js
das
mov
xchg
ja
fbld
sbb
xor
cmpsl
jae
jmp
xor
cmpl
jg
add
pop
pop
cmp
pop
sti
xlat
mov
into
jmp
int
jl
push
or
call
sbb
and
aaa
sahf
and
inc
loope
andl
cmp
jb
cmp
or
ds
mov
mov
push
popf
pop
jecxz
inc
pushf
sbb
insl
ret
ljmp
scas
aaa
hlt
or
out
out
das
mov
inc
sub
sbb
outsl
add
push
pop
repnz
cmp
sub
movsb
pop
mov
jecxz
fldenv
mov
mov
insl
push
mov
or
jmp
jmp
sbb
mov
jae
scas
xor
stos
ret
xor
sbb
mov
popl
arpl
xor
out
lcall
es
js
cmc
xor
je
sbb
movsb
out
and
aad
add
fwait
jne
sarl
fsubl
movsb
je
mov
lret
xchg
xchg
into
jl
pop
into
out
movsb
dec
xchg
pop
aad
loop
sbb
movsb
mov
in
xor
cltd
jmp
orl
xchg
jmp
enter
sub
mov
dec
call
fstpt
sub
cmpsb
lahf
aad
dec
loopne
mov
arpl
xchg
pushf
fsubrp
cmp
mov
movsb
mov
std
push
xchg
cmp
sub
ret
jns
or
and
dec
xchg
xor
ds
int
mov
xor
sub
test
mov
mov
add
ss
test
cmp
xchg
jge
xchg
mov
std
sarb
cmpb
imul
adc
into
push
dec
xor
cmpsb
adc
loopne
out
cmp
fcoms
push
dec
and
lahf
jle
cwtl
add
les
lahf
cmpsl
in
and
pop
es
xchg
add
daa
fisttps
ror
int
or
mov
fs
cmc
fsubrs
cli
mov
jmp
jae
mov
push
arpl
mov
lahf
in
push
dec
test
dec
adc
imul
push
ret
mov
lods
stos
rorb
loope
push
mov
add
stos
jmp
cli
mov
sub
in
mov
jne
stos
sbb
fdivs
push
xlat
test
cmp
mov
pop
mov
cmp
xor
cli
inc
pushf
inc
jp
mov
fsubr
test
pop
cmp
mov
ljmp
stc
and
repnz
cmpsb
dec
lds
and
decb
cmpsb
fisttpl
xor
xchg
dec
mov
mov
popf
loop
roll
jbe
addl
pop
stos
in
cmpb
dec
cwtl
mov
div
lahf
fcoml
ficoms
ret
jmp
xchg
xchg
dec
mov
ret
jecxz
dec
out
and
pusha
xchg
jmp
fldt
dec
cwtl
jmp
shll
ja
mov
rcrl
mov
test
push
into
out
pop
mov
xor
push
dec
and
movsb
jne
adc
loope
mov
push
cld
pushf
jle
stos
push
outsb
jl
xchg
aam
cmpsb
les
adc
xor
pop
repz
xchg
sub
mov
lds
xor
sub
andb
xchg
pop
popf
adc
mov
enter
ret
call
lret
push
clc
adc
rcrl
loopne
and
rol
stc
scas
sub
lahf
adc
out
xor
outsl
mov
add
lcall
loop
xchg
les
push
mov
js
sbb
cmpsl
jg
pop
stos
nop
scas
push
cld
mov
xor
pusha
mov
jp
mov
jl
mov
push
fsubrl
sbb
jmp
push
insl
movsl
and
call
add
inc
adc
push
inc
mov
and
test
ja
sbb
push
js
test
cmp
cli
mov
xchg
or
popf
inc
xor
mov
jo
cmp
push
push
lods
daa
ljmp
dec
pop
into
cmpsl
adc
mov
and
ret
jmp
or
clc
test
push
ljmp
lods
lcall
cli
mov
test
outsb
mov
xor
sub
imul
int3
shr
cmp
jl
xchg
jp
fistpll
or
jno
inc
mov
es
mov
andl
add
enter
xor
cld
cld
int3
cmpsl
fs
sub
das
cmp
cmpsb
fisttpll
insl
in
insb
sub
shll
cld
mov
cmp
mov
fmuls
sub
sub
jmp
sti
mov
sbb
jmp
pop
rcll
dec
into
imulb
cld
jecxz
mov
mov
enter
mov
in
mul
mov
fs
jb
aad
sub
popf
scas
sub
test
sbb
mov
mov
cmp
leave
aam
push
xchg
cmpsb
repz
loope
jle
callw
movb
repz
mov
mov
push
rorl
pushf
jecxz
pop
inc
cmp
lahf
test
fwait
in
popa
es
mov
inc
jle
sub
pop
xlat
sub
mov
ret
pop
jns
es
mov
and
loope
sub
inc
call
sti
popa
mov
lock
fdivl
mov
out
or
xor
gs
pop
int
or
sbb
pushl
push
pop
or
mov
imul
and
test
aaa
xor
adc
mov
test
adc
mov
in
cltd
jns,pt
imul
mov
out
jmp
jne
xchg
pop
add
jl
jae
and
ret
int
fs
pusha
cmp
adc
mov
es
pop
mov
fnclex
into
addr16
lret
popa
or
js
pop
push
pusha
cmp
sbb
push
mov
mov
push
lret
sbb
mov
sbb
stos
fldt
sub
inc
test
lret
pop
pusha
das
mov
dec
mov
push
xlat
test
or
aaa
rolb
into
mull
cmp
or
outsb
rclb
popf
jae
xchg
ficompl
mov
dec
cmp
enter
xchg
les
pusha
pop
pop
sbbl
cmp
or
data16
rcll
daa
rclb
leave
test
mov
sbb
jae
popf
aad
mov
icebp
jmp
mov
mov
sar
sub
pop
cmp
mov
das
inc
stc
shll
cli
sbb
add
mov
dec
out
lret
stc
jb
movsl
addr16
jbe
jno
sub
inc
inc
lds
out
fs
jle
sti
mov
lds
push
xor
lods
loop
xor
les
repnz
sbb
sbb
push
outsb
jbe
xchg
ja
or
je
nop
mov
cmp
sub
mov
fsts
mov
mov
mov
jmp
ret
xchg
mov
lcall
dec
mov
cmc
dec
in
loop
mov
arpl
es
jecxz
jo
and
pop
xor
adc
aad
mov
xchg
mov
mov
adc
cmpsb
cmpsb
enter
jecxz
loop
ljmp
pop
jns
push
cmpsb
andb
pop
and
jbe
outsl
sub
jns
cmp
aas
pop
dec
daa
mov
cmpsl
mov
xor
mov
enter
and
xchg
lcall
jecxz
push
bound
sub
imul
mov
cmp
outsb
push
les
subl
xchg
jge
inc
push
in
stc
mov
xchg
mov
sub
cmpb
inc
adc
out
mov
and
pop
neg
push
out
and
dec
in
sbb
mov
in
xor
cs
push
insb
call
pop
int3
xchg
jle
mov
mov
mov
data16
jecxz
add
and
popf
pop
in
or
xchg
pushf
clc
pop
adc
fisttpl
adc
int3
sub
mov
mov
mov
das
in
xchg
js
mov
xor
test
and
daa
or
mov
stos
lahf
inc
repz
mov
jne
scas
loop
cmp
hlt
imul
cld
mov
mov
ss
fsubs
push
jb
in
jne
mov
cld
mov
addr16
sub
xchg
insb
leave
adc
fwait
sbbl
and
lds
aas
xchg
es
aas
push
inc
mov
pop
xchg
call
mov
mov
pop
push
std
mov
fdivs
in
lret
sub
testb
repz
pop
test
sti
push
dec
stos
addr16
call
lcall
jae
movsb
xor
cli
adc
xor
fldcw
into
xchg
leave
clc
xchg
fwait
cmp
shll
pop
fldenv
popa
enter
xchg
cli
push
jo
dec
dec
mov
push
mov
xchg
mov
or
jbe
push
add
adc
out
or
sahf
popa
mov
stos
mov
scas
cmpsl
adc
test
xchg
shll
pop
sub
andb
addr16
add
mov
cmc
ss
or
xor
test
fbld
jecxz
xchg
les
fiaddl
out
sub
test
adc
mov
adc
push
lret
cmp
pop
xchg
mov
bound
lret
and
inc
mov
xchg
cli
sbb
fstpt
ljmp
in
sub
xchg
xchg
lret
in
test
jmp
cwtl
xchg
dec
add
mov
pushf
mov
popf
jns
mov
mov
mov
xchg
sub
add
cli
imul
out
int
ja
lcall
add
stos
adc
sub
jmp
mov
neg
mov
dec
mov
mov
pop
testl
mov
adc
mov
jl
mov
test
adc
js
test
sti
inc
test
dec
xchg
sub
push
sub
sub
testb
imul
mov
sub
sbb
or
aaa
lods
fwait
mov
jl
fmuls
mov
ret
dec
nop
ja
push
pop
popa
xor
xchg
outsl
and
fldcw
adc
mov
sub
xchg
dec
lods
and
mov
ret
cltd
jo
pop
and
pop
bound
xchg
fcmove
mov
enter
and
jle
in
imul
xlat
jns
fcmovu
jne
push
mov
xchg
xor
and
repnz
xlat
insl
fwait
insl
push
bound
ss
js
push
test
enter
cmp
fdivr
addr16
push
out
test
cmp
bound
aam
mov
arpl
pop
fdivr
scas
insb
les
dec
push
sub
push
leave
mov
adc
test
in
ret
loope
add
in
out
stos
push
enter
addr16
out
cmpsb
lods
fldt
mov
insb
fldenv
mov
fidivl
mov
cmpsl
sbb
mov
sahf
ss
mov
cmp
cmp
jecxz
ret
pop
xchg
cmp
loope
add
mov
xorl
add
mov
jmp
gs
test
cs
push
sub
fnstenv
in
xchg
insl
mov
sub
lods
cmp
or
mov
fbstp
cmpsl
addr16
int
test
leave
test
leave
lcall
xchg
insl
xor
push
add
jbe
mov
subl
jo
in
imul
mov
and
test
mov
pop
jb
cmp
bound
fiaddl
int
test
mov
mov
fcmovnu
and
andb
imul
aas
adc
fadd
ljmp
xor
and
fs
jecxz
out
mov
xchg
bound
mov
fdivrl
gs
cmp
pop
pop
push
leave
bound
mov
xor
and
cmpsl
fstp
jnp
mov
in
xchg
push
add
sti
mov
add
outsl
es
mov
xchg
and
int
fstpt
cli
les
adc
push
cmpsl
push
lea
fisttps
cmp
test
xor
jae
mov
movsl
jge
cmpsb
jecxz
sub
push
mov
or
or
mov
pop
lret
ret
movsb
adc
fsubs
xchg
cwtl
push
adc
and
insb
push
push
sub
ret
test
ret
jb
jb
cmp
insb
push
mov
test
shl
push
jnp
outsl
add
and
enter
cmp
sub
cmpsl
mov
adc
mov
jmp
mov
mov
add
scas
mov
and
stos
daa
xchg
mov
lds
aad
jmp
and
cmpsb
xor
in
push
ss
rorl
mov
mov
sbb
cmp
sub
rcll
xchg
test
xchg
and
incl
xchg
test
sbb
incb
cmpsl
mov
cmp
jbe
pop
and
mov
stos
aad
dec
jno
and
stos
daa
xchg
mov
fisubrl
add
and
fiaddl
and
sbb
mov
std
jle
and
push
mov
shll
clc
mov
add
nop
lret
sub
mov
es
push
jle
inc
xlat
lcall
and
lock
nop
lret
mov
or
push
xchg
loope
bound
mov
mov
sub
xchg
push
jle
ds
mov
mov
movsb
jmp
jle
sbb
xchg
cmp
inc
adc
xor
jl
push
imul
xchg
mov
arpl
loopne
addr16
pop
stos
mov
imul
insb
cmp
cmp
pop
mov
out
mov
jle
ss
ljmp
and
and
sbb
mov
mov
popa
ret
adc
add
xchg
cmpb
push
arpl
mov
mov
in
push
jle
sbb
inc
xchg
fiaddl
ljmp
mov
mov
sti
std
xchg
xchg
aad
adc
pop
mov
test
push
adc
out
push
mov
mov
mov
push
jnp
sub
mov
stc
mov
sbbb
loopne
rcrl
cmp
loop
lods
and
mov
pop
sub
mov
data16
xchg
sti
inc
inc
imul
test
sub
mov
mov
jle
and
xchg
pop
mov
mov
outsb
and
push
and
aam
ss
mov
cmc
je
xor
in
inc
and
dec
imul
outsl
nop
inc
fwait
mov
es
xor
pop
into
test
mov
ja
inc
cmp
mov
mov
sub
scas
outsl
imul
push
ljmp
cmp
loop
ret
aaa
aas
push
out
mov
mov
hlt
mov
sub
mov
mov
sub
orl
dec
or
jbe
mov
movsl
cmpsb
ljmp
xorb
mov
or
test
jmp
loopne
in
jg
data16
loope
ljmp
stos
test
out
sti
aaa
dec
cwtl
sub
jle
adc
js
mov
sub
or
test
roll
mov
mov
mov
into
movsb
test
or
sub
mov
nop
push
cltd
push
mov
push
cmc
mov
or
into
insb
test
or
cmp
cmp
mov
sbb
push
xchg
xchg
enter
js
imul
cmp
push
push
and
inc
dec
cmp
stos
xor
pop
in
ret
ljmp
js
fs
pop
push
leave
jno
mov
mov
xchg
pusha
push
push
pop
daa
pop
jae
xchg
mov
and
je
mov
inc
out
lahf
mov
sub
cmp
sub
cli
jno
daa
mov
inc
fsubrs
mov
xchg
sbb
test
pushf
sbb
xchg
orl
cmpl
cmp
test
jno
fwait
shlb
or
mov
dec
mov
test
cltd
and
mov
outsl
mov
jl
push
xchg
xor
sub
cmpsl
xor
jmp
sahf
inc
test
xor
insl
lcall
xchg
jnp
lods
lret
push
ljmp
divl
cmp
fists
mov
mov
mov
jnp
in
imul
fincstp
xor
icebp
stos
jo
pop
shrl
je
leave
lahf
rorb
in
test
out
xchg
sub
mov
and
add
mov
movsb
lret
ds
ljmp
or
movsl
pop
pop
pusha
in
dec
push
mov
jg
imul
bnd
cltd
cmpb
outsb
orb
dec
xchg
mov
mov
ret
in
mov
jl
jne
leave
ds
adc
fcmovnu
dec
lret
fdivrl
pusha
sub
sub
fmul
and
ss
int
mov
movsw
stos
pop
mov
enter
ja
lods
imul
cmp
inc
into
jnp
sbb
les
mov
lcall
jl
sbb
pop
mov
add
or
dec
cmpsb
gs
dec
rcrl
jno
inc
cs
imul
lahf
lret
xchg
xchg
mov
pop
xor
inc
jne
lds
ss
jnp
scas
mov
mov
scas
js
pop
lahf
pop
in
push
fwait
btl
mov
movsl
enter
notl
gs
xchg
sbb
ss
mov
test
or
lret
lods
adc
addl
hlt
negb
and
addr16
roll
loope
cmpsb
or
into
movsl
jge
xor
std
push
push
les
xchg
enter
mulb
sbb
sub
movsl
cmp
fstpt
int
lods
negl
pushl
scas
mov
xchg
dec
jae
bound
cli
cmp
add
or
data16
sub
ss
in
pushl
fs
push
ds
and
pusha
xor
lret
mov
pusha
stos
inc
sbb
addr16
es
rorb
lret
fisttpl
cmp
fwait
lret
in
sbb
xchg
pop
lret
loopne
cmp
xrelease
mov
lret
push
inc
inc
mov
pop
cmc
imull
ja
jno
cmp
push
pop
xorl
push
je
jne
mov
jle
xor
stos
stos
jecxz
cmp
jle
test
cmp
adcl
pop
data16
cmpsl
cltd
lods
xor
in
sbb
imul
insl
add
daa
push
xchg
pop
add
xchg
into
rcrl
movsb
push
fstps
sub
ljmp
pop
cmp
mov
sub
mul
popf
mov
sub
and
sbb
cmp
mov
xor
jle
nop
adc
xchg
test
dec
in
addr16
fisubl
mov
push
cmp
mov
mov
pop
add
lds
jle
inc
daa
test
faddp
cwtl
add
das
les
mov
jle
cs
lret
in
gs
pop
push
icebp
xchg
mov
pop
cs
out
enter
arpl
addr16
scas
sub
dec
mov
movsl
aad
xchg
push
es
and
andb
xor
in
mov
and
mov
push
aad
sub
push
in
sbb
nop
or
or
enter
mov
jmp
xchg
add
mov
sbb
cmp
cmpsl
adc
mov
or
loopne
xchg
jae
sbb
sarl
sti
nop
xchg
sarb
data16
mov
inc
and
sub
jbe
cmpsl
dec
pusha
fstpt
mov
push
lds
xchg
add
or
or
mov
fnstsw
inc
out
fistl
leave
hlt
lcall
in
aaa
je
sub
xchg
mov
mov
push
in
pop
movsl
mov
prefetch
dec
in
movsl
or
jmp
out
pop
jo
xchg
mull
push
mov
add
stos
pop
js
addl
enter
jmp
push
dec
mull
sbb
lahf
cmp
mov
pop
test
outsl
fsts
pusha
shll
out
stc
adc
sbb
cmp
mov
or
popf
mov
cltd
add
push
scas
adc
jnp
les
popa
sbb
test
bound
or
mov
sub
mov
in
and
lods
xor
mov
pop
xor
nop
or
cmpsl
lret
dec
inc
cmp
pop
stos
xchg
dec
push
jb
ss
sbb
dec
cld
push
mov
sub
sbb
mov
mov
sub
mov
aas
popf
xchg
lret
xor
sub
mov
xchg
jp
shrb
lahf
pusha
sbb
cmp
dec
ret
mov
sub
xchg
sbb
or
mov
cmpsl
xchg
fdivrl
mov
mov
dec
cs
cmovns
pop
repnz
xchg
call
xor
movsl
test
cli
xchg
lods
pop
fs
scas
cld
mov
cmpsb
aaa
jmp
daa
dec
sbb
shr
adc
mov
mov
mov
nop
in
sub
daa
sub
mov
into
adc
pop
sahf
push
outsb
leave
cmpsl
xchg
pop
gs
kortestb
xchg
push
adc
ss
xor
and
xchg
popfw
xchg
gs
mov
ret
cmc
mov
test
loop
inc
aas
popa
loop
inc
mov
sbb
cmpsl
add
loope
insb
mov
in
push
iret
test
sub
jmp
jmp
jg
xchg
jp
pop
or
xchg
aas
pop
jae
mov
dec
add
cs
les
cs
adc
add
loop
ret
and
mov
push
add
enter
into
mov
xchg
cltd
sub
jecxz
jmp
push
mov
stos
loope
mov
ljmp
lcall
test
sub
jp
dec
sarl
fwait
js
bound
xchg
sahf
push
sub
mov
add
mov
mov
call
pop
mov
xchg
cltd
xchg
stos
movsl
cmpsl
dec
mov
xor
and
movsl
es
and
mov
popf
mov
iret
leave
andl
out
mov
cmpsb
mov
roll
fwait
movsb
gs
je
cmp
cltd
mov
jb
adcl
imul
cmpsl
add
loopne
fwait
leave
push
enter
les
jae,pn
insl
imul
cmpsl
in
add
cmp
mov
cltd
mov
xor
mov
mulb
push
mov
add
xor
mov
lcall
cmp
jecxz
xchg
lcall
decl
in
test
or
jecxz
xchg
jle
andb
popa
mov
shll
and
cmp
jp
jle
xchg
sbb
es
jecxz
cmp
addr16
or
in
dec
arpl
push
dec
and
cmp
test
mov
ljmp
mov
mov
andb
xor
out
lea
mulb
imul
sub
mov
jns
inc
in
sub
xor
mov
mov
xor
jp
dec
and
xchg
and
mov
test
push
add
xor
xchg
incb
mov
roll
mov
hlt
jne
out
es
adc
lret
jbe
je
addb
push
mov
fimuls
addr16
xor
aaa
lret
dec
xchg
jle
and
test
insb
fisubrs
push
movsb
push
outsb
cmp
xor
xor
mov
loop
jp
push
rolb
mov
jbe
and
and
mov
cli
movsb
jbe
sarb
arpl
push
and
cmp
clc
das
movsl
mov
jbe
lods
sbb
ret
sub
and
add
iret
sbb
insl
mov
iret
sub
mov
sbb
out
out
lahf
imul
lock
mov
dec
mov
lods
jmp
pop
push
push
xchg
push
mov
xor
inc
mov
arpl
shrb
les
imul
jl
mov
cmpsb
pop
adc
adc
mov
inc
stos
pop
xchg
cmpsl
xchg
or
push
mov
push
pop
push
jnp
mov
lret
clc
lods
aas
add
test
int3
and
pop
mov
mov
dec
orl
pop
dec
inc
shll
lret
add
hlt
xor
mov
xchg
lret
xchg
mov
xor
sub
aam
imulb
xchg
mov
cmc
or
mov
jmp
jne
popa
aaa
mov
and
stc
cli
jmp
xchg
je
imul
and
ds
and
in
fwait
mov
pop
movsb
mov
xlat
mov
mov
jae
push
dec
popa
mov
cmpsb
mov
sub
pop
pop
inc
adc
mov
xchg
js
nopl
add
rclb
sbb
push
xchg
pop
fnsave
fst
lahf
repz
xor
test
cwtl
movsl
mov
and
xor
bound
addr16
inc
bound
scas
sub
cmpsl
xchg
in
add
mov
mov
mov
mov
es
icebp
mov
pop
mov
scas
fisubrl
mov
adc
xlat
add
jo
or
sub
xor
loope
incl
fadds
frstor
mov
mov
xor
popa
mov
es
adc
push
jnp
fsts
push
mov
idivb
dec
aad
jg
and
mov
mov
gs
out
cs
xor
push
jae
sub
insb
sbb
lahf
movsb
imul
sub
jbe
out
inc
enter
mov
pop
sub
loope
gs
xorl
mov
sbb
sub
xchg
imul
out
leave
into
stos
mov
sti
or
nop
cmp
enter
or
inc
frstor
add
into
mull
jmp
xchg
pop
ja
pop
ja
movsb
pop
mov
jmp
in
xor
xlat
mov
loopne
mov
pop
mov
dec
idivl
xorl
jle
push
in
idivl
sbb
ficompl
lcall
push
mov
lret
sub
sbb
cld
mov
add
cmc
sub
in
out
xchg
gs
xchg
negl
mov
aam
mov
lods
imul
divl
mov
cmp
xchg
cltd
xchg
xchg
pop
and
div
pop
into
out
xor
out
shll
pop
ret
xchg
ss
lret
std
sbb
shll
cli
pop
xchg
xchg
inc
pushf
ss
sti
rclb
and
scas
fidivrs
mov
into
jle
scas
mov
out
push
mov
ss
or
lahf
stos
iret
dec
pusha
xor
cmpsb
xchg
cli
adc
aaa
and
sbb
cltd
negl
in
inc
notb
xchg
mov
lock
xchg
lret
adc
test
mov
lret
hlt
cmpsl
lret
pop
pushf
aaa
sub
and
xor
jp
js
cmp
jmp
test
jne
shlb
mov
js
and
lret
lcall
test
aaa
or
lahf
lds
push
pop
mov
ja
xor
and
mov
stos
cmpsb
aaa
loope
mov
cltd
push
and
sub
in
sbb
cmp
mov
gs
ss
pushf
push
add
cmp
bound
out
or
jg
cmpl
in
jmp
dec
add
imul
cmp
jb
out
js
mov
cwtl
cmp
add
mov
ljmp
mov
xchg
mov
popf
cmpsb
popf
pushf
loopne
lahf
pop
xchg
test
mov
lock
es
mov
daa
cmpsl
outsl
mov
jb
push
cmp
push
stos
ja
or
and
jno
sub
mov
int3
add
insl
push
rcr
sub
fisttpl
sti
int3
stos
sbb
movsb
jae
sub
push
push
fstpl
packuswb
int
adc
inc
mov
inc
test
xor
bound
mov
dec
js
stos
enter
enter
stos
and
movsl
pop
xchg
hlt
push
push
dec
mov
mov
mov
les
jmp
bound
out
outsb
add
insb
in
mov
mov
jae
lock
shrb
bound
push
xor
mov
or
cmp
leave
leave
xchg
mov
cmpsl
jns
leave
push
jne
dec
sarl
add
ss
sbb
mov
push
idiv
inc
cwtl
stos
mov
push
int3
into
cmp
push
call
lds
lcall
xchg
mov
sub
mov
inc
mov
es
sbb
push
jle
jno
mov
js
mov
shl
lds
aas
fcompl
jbe,pt
mov
mov
lds
xchg
in
xchg
test
out
mov
sahf
pop
test
pop
out
mov
cmp
frstor
and
pop
fs
cmp
popa
test
shl
mov
loope
sub
out
xchg
scas
incb
mov
enter
leave
in
arpl
mov
mov
push
dec
push
arpl
into
mov
cmc
lods
cmpsb
popa
ret
mov
pop
fwait
fldcw
mov
pop
sahf
jbe
fistl
xchg
mov
cmpsb
push
push
insb
and
js
xor
jg
cmpsl
push
movsb
sub
insb
ljmp
cmp
mov
bound
mov
and
xor
cli
ds
bound
mov
mov
push
rclb
cmpsl
cmpsb
lcall
outsb
bnd
not
lret
daa
adc
sub
shr
mov
mov
mov
or
cmc
pop
mov
test
xor
movsl
ljmp
stc
pop
sub
xlat
cmp
test
push
cmpsb
or
lret
aam
jg
mov
call
cmpsl
xlat
test
sub
fmuls
jp
push
mov
lods
cmp
imul
mov
cli
scas
mov
xchg
cmpb
and
popa
shr
ficoml
mov
popf
cmpsl
xchg
xor
pop
outsb
leave
test
mov
cltd
lock
or
mov
lds
fld
jmp
cwtl
movsl
adc
test
gs
and
and
mov
insb
mov
push
mul
push
xor
xor
dec
data16
push
push
adc
leave
call
into
cmp
dec
sub
xor
pusha
mov
icebp
sub
in
leave
mov
mov
loope
and
cmp
les
imul
jnp
idiv
inc
insb
sbb
xchg
mov
push
sub
and
in
xchg
xchg
lahf
mov
xor
lret
mov
mov
xchg
lods
je
outsl
in
idivl
leave
imul
std
leave
icebp
push
enter
mov
mov
divb
jg
mov
addr16
sub
movsb
add
mov
jbe
in
xchg
inc
lods
adc
mov
iret
into
test
and
mov
mov
leave
cmpsl
daa
mov
mov
movsl
pusha
adc
out
lock
jae
sub
push
mov
and
cmc
ss
adc
or
add
gs
cwtl
stos
push
mov
mov
jl
adc
mov
xor
cltd
sub
push
dec
adc
hlt
push
dec
jno
mov
cwtl
divl
sub
mov
mov
mov
mov
mov
mov
mov
jne
neg
loope
jbe
push
dec
cmpsl
mov
jmp
xchg
push
out
xor
sbb
movsb
cld
test
loop
inc
pop
and
cmp
shl
aam
xchg
movsl
sbb
imul
cmp
pop
aam
loop
cmp
jo
xor
mov
sub
xchg
xor
pop
push
jno
mov
mov
mov
sub
mov
jge
jb
in
mov
lret
xchg
imul
cmp
or
rorb
cmpsb
and
add
sbb
or
ljmp
jo
cmp
cwtl
mov
jle
insb
xchg
pop
imul
push
mov
mov
pop
mov
cli
movsb
mov
and
mov
repz
add
movsb
iret
std
movups
jmp
jne
push
push
cmpsb
mov
fbld
push
jmp
shrb
in
sub
out
pop
mov
shrd
xchg
jg
inc
int3
sub
sahf
cmpb
cmp
xchg
and
xchg
jecxz
mov
nop
xor
fistl
sbb
pop
adc
fs
sub
cltd
andl
mov
push
push
jg
jmp
mov
mov
pop
push
jge
into
and
in
sub
push
aad
sub
mov
movl
outsb
pop
nop
mov
es
inc
out
push
xchg
test
inc
ja
adc
enter
imul
es
sbb
mov
push
out
leave
mov
xchg
push
shlb
cmp
xchg
cmp
fcompl
inc
mov
xchg
icebp
push
cmp
stc
aam
dec
rclb
jecxz
sub
out
jmp
push
push
fs
push
call
divb
test
mov
ss
mov
mov
adc
and
imul
xchg
cltd
into
aas
enter
or
mov
cmp
popf
mov
push
xchg
xor
test
jecxz
insl
jge
push
or
dec
dec
push
lret
test
mov
xchg
mov
mov
inc
xchg
cmp
pop
hlt
repz
mov
pop
add
mov
sbb
dec
data16
leave
lods
push
inc
lods
test
dec
or
fadds
aaa
mov
cmp
pop
sub
push
roll
mov
xor
inc
or
mov
sti
xchg
cmpsb
dec
xchg
xor
lahf
imul
xor
xchg
mov
ss
addr16
in
test
mov
js
scas
lods
fistl
mov
or
mov
leave
jmp
cli
mov
stos
icebp
push
pop
rorl
cmp
retw
mov
lret
adcb
outsb
sbb
adc
cmpsl
das
inc
dec
loope
cld
adc
out
kmovb
adc
inc
rclb
data16
call
daa
mul
fsubrl
call
sbb
inc
and
mov
mov
push
cld
mov
dec
out
popf
das
cmp
inc
out
ljmp
mov
xor
push
sbb
adc
mov
mov
shrl
cmc
loope
xor
insl
and
push
dec
inc
mov
jo
ljmp
test
xchg
and
sub
jp
cmpsl
pusha
sbb
lcall
push
insl
fldt
or
fisubrl
pop
mov
xchg
mov
in
mov
hlt
dec
mov
xor
cmc
out
xchg
push
add
inc
adc
inc
arpl
leave
scas
dec
inc
loope
adc
jo
and
add
lods
test
dec
sbbl
out
sbb
dec
das
out
cmc
cmp
mov
mov
in
inc
loopne
push
xorb
sbb
lret
and
subl
inc
cmp
fwait
pop
daa
jns
push
pop
dec
and
ds
jmp
sbb
sbbl
fwait
or
push
and
lret
vorps
loop
lods
mov
fdiv
cltd
jmp
or
lock
test
nop
push
testb
mov
mov
test
lahf
cmc
repnz
in
leave
pushf
cmc
push
mov
leave
adc
sbb
sahf
loopne
xchg
adc
jecxz
add
xchg
jns
movsl
frstor
roll
xchg
out
dec
xor
dec
data16
into
aas
enter
jae
loopne
cmp
daa
loop
in
pop
loop
or
jno
ljmp
aaa
mov
arpl
push
ja
push
ljmp
andb
popa
lods
push
dec
xor
pusha
sbb
mov
xchg
mov
rcll
mov
pop
mov
mov
sub
fdivs
cmp
mov
mov
sub
push
push
mov
xor
or
ds
cmp
sbb
ds
inc
sbb
test
cmc
fiaddl
cmp
mull
pop
jecxz
xor
dec
mov
aaa
arpl
jnp
iret
lock
fiaddl
mov
xor
repz
sub
sbb
gs
fldt
dec
dec
ss
xor
bound
imul
imul
jle
movsl
into
adc
sti
mov
or
push
jle
mov
enter
and
dec
or
xchg
adcb
mov
pop
cmp
inc
ss
test
out
adc
icebp
xchg
loop
and
xchg
outsl
sti
stos
push
pop
xor
push
in
cmp
test
bswap
adc
adc
mov
pop
jle
mov
loope
or
cmp
mov
mov
push
call
call
mov
das
mov
and
pop
shlb
adc
add
push
fs
add
fiaddl
push
mov
push
not
sbb
cli
push
loope
inc
out
push
pop
mov
mov
and
push
xor
icebp
sbb
fisttps
and
das
aam
jl
cmc
dec
jg
loop
xchg
fs
fucomi
imul
lods
shl
lea
mov
ds
out
aam
cmpsl
popa
jge
fcmovu
ljmp
ja
sub
in
sbb
cmp
dec
push
or
jbe
and
enter
pop
aad
inc
testl
mov
jp
jns
mov
cmpsb
insl
ja
pop
mov
test
jae
push
mov
mov
pop
mov
adc
jle
xchg
sub
out
mov
stos
xchg
cli
mov
jno
in
xchg
cmp
data16
push
loopne
xchg
fisubl
mov
xchg
scas
and
push
gs
mov
xor
dec
inc
pop
ret
and
mov
xor
mov
push
test
add
fs
pop
sbb
pop
mov
scas
jle
lret
mov
inc
scas
imul
or
sbb
sub
lods
adc
and
mov
leave
cmp
sub
pop
sub
lds
mov
dec
jmp
and
mov
movsb
cmp
test
jmp
icebp
pop
jl
pop
leave
cmp
xor
mov
inc
mov
int
mov
divb
add
icebp
dec
aam
andl
mov
pop
mov
mov
test
or
insl
xchg
mov
inc
data16
iret
sub
mov
pop
mov
jg
and
std
xchg
lods
sbb
bound
sub
mov
mov
cli
xor
ljmp
rclb
leave
xor
jmp
sbb
cmpsb
ret
imul
jno
cltd
xor
in
daa
jecxz
call
adc
adc
into
call
cmpsl
mov
and
mov
jg
stos
into
xor
cltd
mov
lret
sub
xchg
add
sub
sbb
jmp
aas
into
imul
ss
shr
sub
stc
push
js
pop
scas
leave
mov
fwait
sbb
sbb
into
mov
xor
sub
loope
xor
jae
sbb
push
or
jecxz
push
jns
enter
cltd
mul
call
mov
ficoml
mov
pop
les
dec
sbb
imul
xor
imulb
jmp
in
mov
push
scas
lret
aaa
xchg
movsb
cmp
and
cmp
popf
cwtl
add
jg
aam
ret
test
jl
imul
movsl
push
leave
movsb
adc
mov
mull
mov
into
sub
mov
arpl
es
ret
push
sub
dec
das
outsb
jmp
xchg
mov
stos
add
cmpsl
jle
push
test
push
mov
aaa
mov
jns
shrl
sbb
sub
sti
xor
pop
test
jl
daa
aas
sub
mov
adcl
int
nop
adc
and
pusha
fidivrl
mov
cltd
push
out
fmull
cwtl
mov
mov
jmp
shl
ret
mov
dec
fwait
imul
sub
pop
cmp
cmpsb
sub
cmp
fcomi
insl
inc
sbb
xor
push
mov
stos
add
test
je
cmp
mov
adc
dec
push
std
adc
jl
loop
ss
mov
aam
sbb
sub
xchg
popf
iret
and
fwait
mov
fistpll
xor
adc
mov
mov
or
loop
enter
sbb
mov
pop
mov
or
xor
addb
outsb
clc
jns
xchg
push
mov
mov
fs
pop
lea
sub
pop
sub
xor
push
push
sub
dec
imul
sub
and
push
mov
xor
aam
dec
incl
fnstsw
ret
mov
mov
xor
sub
addr16
adc
mov
mov
outsl
cmp
adc
lret
int
jb
jg
inc
xchg
out
arpl
and
jne
mov
lea
push
into
sub
aad
fisttpl
sub
movsl
out
shll
jne
data16
sbb
movsb
repnz
mov
or
cmpsl
cmc
inc
mov
imul
mov
fidivrl
pop
push
mov
lcall
mov
add
xor
outsl
cmp
mov
mov
add
loopne
leave
push
cmpsl
iret
movaps
out
xor
cs
add
add
adc
pop
or
fidivs
or
mov
lods
cmp
int
xchg
sub
arpl
jmp
sbb
es
call
push
adc
and
sub
lret
lods
shll
fisttps
lret
jle
ror
loopne
inc
xor
mov
jmp
pop
cmp
pop
fidivrs
sub
stos
xor
cltd
xor
mov
xchg
sti
aam
pop
pop
dec
aaa
das
xchg
pop
loop
aam
outsb
sahf
cli
test
leave
sbbb
aam
push
icebp
sbb
mov
mov
xor
pop
sbb
or
cmpsb
dec
and
mov
mov
repz
mov
mov
fstpl
xchg
or
scas
dec
jns
or
fstl
popf
loop
int3
cmp
imull
mov
jo
ss
jecxz
lods
dec
out
add
dec
cmpsw
cmpsb
and
mov
adc
jb
notl
es
xorl
mov
push
js
adc
push
mov
mov
jp
sub
add
clc
rcrl
mov
mov
mov
notl
hlt
xchg
popf
js
enter
movsl
or
sbb
xchg
jbe
sti
xchg
sti
xchg
xchg
jg
pushf
sbb
xchg
inc
mov
mov
xchg
sub
fwait
inc
pop
mov
mov
lods
inc
push
ljmp
test
add
adc
and
daa
cmc
or
mov
mov
movsl
or
cwtl
call
mov
sub
jae
outsl
ds
aad
sub
test
push
or
mov
aas
daa
enter
stos
push
push
dec
mov
int3
rcll
out
cld
pusha
popa
leave
adc
es
add
ljmp
daa
loop
mov
mov
fldenv
sbbb
mov
and
or
jle
mov
cwtl
and
repz
in
popa
pop
and
jno
nop
mov
cmp
mov
xchg
sub
dec
lods
xchg
and
mov
jns
scas
loope
cmpsb
mov
add
rorl
push
sub
icebp
test
sub
lahf
inc
leave
mov
add
cli
cli
test
call
fcmovu
leave
xchg
cmp
sbb
pop
sub
mov
shrl
popf
mov
ss
inc
into
out
inc
mov
addr16
sbb
lret
mov
fldl
lods
mov
ret
pop
push
loop
ja
pop
dec
mov
mov
dec
jmp
dec
xor
push
xchg
sti
outsl
rcl
jmp
mov
fiaddl
xor
adc
les
add
jl
rolb
shrb
movsl
sub
js
push
push
aam
sub
idivl
adc
cmp
pop
addr16
fwait
sub
jmp
sub
xor
push
pop
outsb
out
rcll
pusha
jns,pt
cwtl
xor
pop
mov
test
jle
inc
addr16
rorl
or
dec
aaa
mull
xchg
xchg
cmp
mov
jle
out
lret
shl
pop
ja
xchg
jno
sbb
or
mov
push
mov
nop
in
mov
andl
xchg
jl
and
rorb
cmpsb
stc
jmp
fldl2t
push
push
inc
ja
sub
pusha
sbb
mov
insb
or
mov
mov
mov
cmp
mov
fdivrs
mov
jbe
cmp
cld
ret
repz
lcall
mov
shlb
dec
jae
cli
fisttps
test
inc
adc
push
mov
test
les
loope
mov
ret
mov
in
cmp
loopne
inc
mov
in
movsb
mov
popa
into
pop
dec
in
mov
cmp
fldt
in
mov
mov
mov
fisttpl
sub
pop
ffreep
leave
cmp
inc
jo
mov
cmp
pop
inc
mov
mov
fwait
jbe
mov
aas
jle
call
aad
mov
test
push
outsl
out
mov
xchg
popf
icebp
jp
fistps
sbb
popf
nop
aad
pop
pop
jmp
mov
stos
pop
inc
xchg
pop
mov
std
sbb
push
je
out
or
sub
push
mov
pop
popa
mov
lret
aam
and
out
adc
shrl
push
cmpsl
aam
stos
dec
pop
shl
sub
es
ljmp
insl
test
or
xchg
mov
xchg
mov
push
and
xchg
mov
int
out
mov
into
fdivrs
sbb
and
jle
shll
aas
popf
mov
push
xor
hlt
lods
xchg
cwtl
mov
xchg
fidivrs
testb
mov
test
pop
sub
enter
mov
test
andb
into
inc
inc
mov
arpl
push
out
aas
ljmp
or
adc
lret
movsb
gs
xchg
pop
loop
sbb
mov
sub
loop
inc
or
mov
mov
mov
xor
sub
mov
leave
dec
xchg
xor
mov
pop
insb
jecxz
out
add
bound
les
mov
cld
sub
inc
pusha
xlat
mov
jp
sub
jp
adc
mov
in
ds
jo
nop
mov
data16
mov
and
mov
insl
pushf
sub
push
mov
aaa
and
lcall
loope
jl
push
push
push
inc
push
jmp
or
frstor
loop
xchg
in
test
imul
xchg
movsl
lods
add
mov
jp
ja
push
xor
add
cld
push
pop
jl
sbb
int3
jo
fisttps
push
sahf
add
mov
mov
sbb
mov
adc
ret
inc
mov
cwtl
and
and
test
pop
shlb
mov
xchg
jnp
push
and
or
inc
ljmp
jecxz
mov
sahf
xor
fs
popa
jae
out
adc
repnz
adc
and
pop
lea
loope
xor
mov
cltd
jns
ds
push
pop
test
fwait
mov
or
or
add
inc
in
xor
stos
sti
mov
mov
data16
fwait
into
popa
and
mov
sub
xchg
in
xor
lods
movsl
insl
aad
xchg
sbb
hlt
push
test
fsubs
adc
add
jb
out
sub
arpl
jne
xorl
leave
mov
and
les
roll
and
test
xchg
je
mov
or
enter
and
mov
js
xchg
cmpsl
leave
cmp
mov
mov
mov
nop
pop
sbb
sub
pop
mov
cmp
push
ljmp
in
mov
rclb
jne
int3
scas
cwtl
je
fadd
leave
movsb
outsb
mov
pop
add
adc
dec
xchg
call
dec
mov
in
mov
add
je
in
loop
fbld
cld
leave
popa
pop
in
push
in
rcr
in
pop
inc
or
in
out
enter
mov
mov
andb
pop
outsb
pop
mov
dec
lahf
adc
into
or
push
sub
in
jb
lret
mov
xchg
je
push
sahf
pop
pop
sub
jl
or
aaa
pop
xchg
repnz
and
jne
pop
jp
test
mov
lea
sub
dec
push
and
jno
cmp
adc
fcoml
push
cmp
cmp
xchg
jnp
mov
scas
mov
jecxz
shl
cmp
pop
xor
fmuls
pop
inc
lret
loop
lret
and
data16
cmp
mov
out
push
xchg
stos
shll
ljmp
ret
cmc
imul
ss
push
jae
aaa
pusha
and
ficoml
push
ss
stc
mov
out
aaa
in
test
xchg
aad
test
lds
test
fs
ljmp
rol
in
sub
mov
shr
mov
les
mov
mov
xchg
jne
loope
pop
fwait
mov
and
scas
mov
idivb
pop
cwtl
mov
push
fistps
daa
sbb
xor
or
pusha
cmp
jne
adc
insl
in
mov
or
cmpsl
loope
jae
lcall
fnstenv
mulb
push
loope
push
mov
js
pop
aaa
jmp
cltd
ljmp
cltd
mull
test
mov
xor
test
pop
jmp
xor
jecxz
push
mov
add
push
pop
data16
mov
jbe
shll
ficoms
inc
xor
cmp
cmpsl
jle
clc
aaa
sub
sub
push
sub
pusha
xlat
push
mulb
xor
inc
fistps
jl
dec
call
fldl
mov
movb
sbbl
std
pop
or
dec
leave
scas
cmp
mov
dec
sbb
into
cmp
xchg
mov
mov
mov
popf
lods
mov
stos
mov
inc
mov
mov
mov
pop
adc
push
ljmp
loope
cmpsb
imul
and
negl
cmp
pop
and
dec
rcll
mov
test
mov
scas
scas
das
test
addr16
sbb
mov
mov
mov
inc
pop
or
es
mov
rcrb
dec
jo
cmp
jl
mov
mov
cmp
ljmp
mov
cmp
sbb
lds
mov
lret
adc
and
push
mov
add
xchg
hlt
ss
popa
out
adcl
mov
scas
push
mov
mov
or
and
js
mov
insb
sub
stos
push
mov
in
cmp
ss
cmpsb
mov
sbb
push
or
loopne
loop
sbb
inc
push
jmp
adc
mov
jl
xchg
into
jo
lcall
leave
lea
push
and
lret
mov
leave
cmp
pop
sbb
fisttpll
stos
insl
xor
pushw
push
and
daa
test
mov
lods
push
adc
in
jns
cmp
cmp
add
jne
inc
mov
jg
fcmovbe
jne
dec
mov
daa
jbe
mov
jp
jo
xchg
push
push
imul
pop
loop
ss
negl
or
nop
pusha
leave
mov
adc
pop
in
addr16
mov
jmp
cli
movsb
dec
sahf
mov
fildl
cmp
loop
xchg
jmp
lcall
lods
push
out
shrb
ss
xchg
lcall
push
jns
hlt
push
testl
daa
aaa
mov
push
push
sti
jb
cmp
lea
imul
out
xor
dec
and
and
add
mov
sbb
xlat
roll
sarb
push
cmp
ficoml
negl
das
cmpsl
xor
lds
jne
add
jl
or
xchg
jo
movsl
or
push
addr16
xorb
out
jg
xor
sbb
lods
movsl
xchg
and
push
or
mov
test
adc
dec
repnz
leave
inc
sub
ja
push
mov
sub
enter
lods
xlat
adc
cmp
mov
fwait
cmpsb
adc
sahf
jns
add
sub
mov
std
jo
adc
imul
ficoml
mov
andl
jle
mov
imul
mov
loopne
sahf
mov
pusha
jo
mov
int3
call
xchg
mov
es
outsl
add
test
push
std
hlt
or
push
push
jmp
mov
or
lahf
xchg
out
js
es
mov
cld
push
cmc
sub
pop
sahf
clc
jne
adc
mov
mov
pop
in
das
mov
or
test
jns
dec
pop
test
ret
add
mov
mov
fisubrl
stc
jns
ret
xchg
mov
mov
or
pop
int
push
dec
repz
mov
and
hlt
xchg
fwait
js
or
cmp
cmp
test
or
movb
xchg
int3
loopne
mov
or
add
fisttpl
jmpw
or
jmp
test
xchg
nop
xchg
mov
sbbl
fs
movsb
pop
test
scas
cmpsl
jo
ror
nop
shlb
mov
popa
pushf
xchg
sub
lret
imul
or
test
xor
pop
add
jmp
push
popl
jns
xchg
in
pusha
outsb
iret
cmp
pop
jb
cmp
mov
cmp
sub
or
leave
fimuls
loope
cmp
mov
mov
cmp
inc
sub
mov
mov
lods
jecxz
xor
lcall
jg
dec
insl
mov
stos
mov
add
cmp
or
mov
xor
js
mov
test
sbb
push
sbb
test
hlt
jecxz
das
mov
pop
xchg
push
mov
test
cmpsl
pusha
xor
stos
jbe
es
cmpb
and
divb
push
cmpsb
sti
or
mov
xor
popa
push
pop
cmpsb
pop
mov
add
js
shll
sub
in
or
mov
xchg
mov
daa
arpl
push
xchg
test
in
ljmp
mov
test
lods
mov
cmp
lea
pushf
xlat
cmpsb
jp
int
sub
xor
mov
dec
enterw
rorl
adc
xchg
test
mov
pop
cmp
data16
lods
or
and
rorl
mov
pop
push
mov
in
sub
mov
inc
leave
push
xor
adc
lds
sub
and
dec
jns
cmp
addl
pop
cmpsb
push
insl
jp
jo
int
mov
aaa
mov
mov
jle
out
repz
insb
test
ret
call
movsl
rcrl
xorb
or
leave
mov
aad
sbb
push
adc
lret
insl
aad
sub
js
out
flds
lods
ljmp
into
inc
in
add
jmp
and
gs
jl
jmp
popa
pop
mov
mov
sbb
in
ja
dec
lahf
xchg
lret
xorb
adc
mov
addr16
xchg
mov
mov
add
mov
jmp
lret
xchg
xchg
push
mov
enter
inc
cmp
xor
push
testl
mov
dec
popa
rcll
mov
cwtl
sub
mov
icebp
mov
cmp
or
and
cmc
es
imul
scas
push
std
xor
fwait
gs
enter
jg
dec
stc
cmpsb
dec
mov
and
push
inc
mov
ret
sti
push
xchg
and
mov
idivl
sti
jns
imul
aas
cmp
inc
or
xchg
jmp
jne
pushf
xchg
or
fldenv
and
sub
mov
ds
jmp
jg
cmp
xchg
cmpsl
es
lods
or
stc
push
push
sub
mov
push
cltd
push
push
lret
inc
adc
jmp
or
int3
mov
cltd
mov
xchg
out
and
inc
out
leave
mov
test
push
cmp
lds
push
adc
cmp
jmp
data16
and
ljmp
popa
mov
xor
into
cwtl
lcall
xchg
insb
jecxz
push
movsb
roll
lret
adc
insb
pop
rorl
int3
sbb
lcall
scas
fmul
pop
or
xor
test
mov
ffree
inc
mov
sar
add
mov
das
shl
xchg
notb
in
push
ret
mov
cmp
sahf
adc
mov
and
cmp
adc
fidivl
negb
push
dec
lods
cld
leave
xor
xor
je
push
cmpsb
xchg
jmp
mov
xchg
and
inc
lahf
aaa
sub
lods
mov
es
cmp
loop
in
jle
or
or
and
push
daa
lahf
sbb
mov
jne
add
cmp
mov
test
xor
cmp
push
nop
mov
addr16
sbb
outsl
daa
push
xor
mov
or
mov
icebp
loop
in
test
cmp
ficompl
out
je
cltd
mov
ljmp
dec
icebp
pop
xchg
add
mov
cmp
rorl
daa
mov
sahf
lcall
out
push
mov
adc
jno
adc
and
ja
inc
or
sti
jg
cltd
cmp
mov
jno
dec
or
jmp
xlat
or
stos
push
dec
jns
xchg
mov
inc
mov
sbb
dec
cmc
jbe
icebp
push
mov
das
and
aad
jmp
or
mov
arpl
aas
push
push
stos
or
mov
mov
pop
test
movsl
std
add
cli
push
daa
mov
ss
and
jne
mov
inc
mov
inc
mov
mov
mov
andl
sub
pusha
sub
mov
ss
and
mov
add
sub
jp
and
mov
jb
arpl
fs
inc
fldcw
stos
mov
mov
je
fdivs
sub
mov
mov
ds
cmpsb
mov
test
fdivs
fmuls
mov
pop
jbe
lahf
sub
mov
fnstenv
fisttpl
mov
adc
stc
sub
cmpsl
push
arpl
mov
std
jmp
outsl
xor
cmpsb
loope
data16
pop
adc
aaa
test
jge
imul
lahf
lretw
or
ljmp
mov
fldcw
divb
out
mov
in
fdivrs
stos
adc
test
cmpsl
and
xorl
xchg
jecxz
in
fldcw
test
push
sbb
insb
fcoms
test
xchg
jl
mov
xchg
mov
push
addb
hlt
int
es
push
cmp
cwtl
lret
mov
les
mov
pusha
jmp
out
pop
out
mov
mov
leave
cmp
inc
cmp
jmp
add
orb
ss
mov
pop
cmp
loope
and
mov
out
imul
pushl
push
aas
and
sbb
lods
add
loop
imul
inc
inc
sahf
mov
loop
fsubs
sub
jno
dec
and
icebp
cmp
adc
xor
cltd
push
addr16
clc
jbe
jbe
mov
mov
cmp
sbb
mov
cwtl
ffreep
jmp
sbb
pusha
mov
push
mov
mov
aaa
inc
in
cmpb
mov
ljmp
stos
test
pop
mov
pop
adc
xchg
xchg
mov
mov
mov
movsl
push
in
sub
sub
pop
scas
adcb
inc
cmp
sbb
inc
leave
into
mov
xchg
mov
jne
popa
addr16
xchg
xor
add
sbb
mov
outsb
xchg
mov
rorb
push
scas
and
or
insb
ss
xlat
mov
dec
sub
lahf
cmp
dec
scas
in
jbe
cmp
insb
sarl
add
rolb
int
inc
sub
pop
aad
and
loope
imul
shrl
test
and
xchg
mov
sub
dec
fidivl
mov
mov
xchg
mov
ja
scas
ss
mov
adc
cmp
into
out
leave
push
dec
adc
add
cmpsl
mov
and
fsubrs
mov
imul
mov
lcall
xchg
jecxz
push
imul
mov
sar
daa
out
fcmovu
adcb
arpl
je
sbb
jg
shll
mov
push
cmp
das
mov
mov
mov
outsl
jg
adc
adc
sub
xchg
lahf
inc
jmp
push
jl
aaa
int3
stos
fsts
sbb
roll
mov
push
sub
xchg
orl
add
dec
cmpsl
sbb
xchg
aaa
xchg
sbb
stc
popf
fwait
xor
mov
push
mov
adc
jecxz
push
add
dec
sbb
loope
mov
sbb
mov
test
xchg
or
popf
cmp
imul
movsl
cli
lahf
gs
out
cmp
into
test
mov
cmpsl
mov
mov
cltd
mov
mov
or
hlt
or
movsb
add
mov
mov
and
mov
mov
mov
mov
xlat
cmc
mov
mov
sub
sub
dec
mov
jmp
and
in
sub
daa
dec
stos
pop
pop
or
mov
aaa
adc
sub
pop
mov
or
nop
mov
lods
loopne
addl
or
jle
cmpsb
test
sbb
aaa
fstl
mov
mov
js
pop
xchg
in
fdivr
dec
imull
sbb
idivl
inc
fists
ror
mov
push
sbb
xchg
mov
and
pop
xchg
push
xor
aam
add
cmp
mov
pop
dec
arpl
push
mov
cmp
into
push
or
iret
pushf
fidivrl
push
insb
outsb
das
stos
cmpsl
mov
and
cmp
inc
dec
cwtl
daa
lods
dec
add
imul
sbb
stc
test
inc
jns
jno
mov
dec
popf
pop
mov
int3
push
sbb
ja
ret
jbe
es
jle
mov
jmp
and
sahf
mov
sbb
ret
mov
mov
outsb
je
and
jae
push
jp
out
mov
mov
add
adc
es
push
sub
cwtl
popa
xchg
aad
pusha
jbe
pop
pop
or
into
or
cmp
call
sahf
xor
jae
and
je
aam
pusha
popf
dec
push
jmp
or
xchg
cld
test
push
addl
sub
pop
mov
xchg
cmp
jmp
sub
cmp
or
push
add
mov
aaa
pop
jbe
pop
jle
add
fmull
insl
jne
mov
xor
enter
mov
push
add
jmp
dec
sbb
test
inc
push
out
cmpsb
daa
stos
cmp
jl
xchg
mov
out
cli
test
xor
push
jne
sub
test
xor
ja
mov
leave
imul
xor
mov
addb
rclb
mov
jne
jns
add
inc
cli
mov
in
aas
cmpsl
popa
sbb
cmp
and
in
ret
xchg
mov
ds
sahf
fistps
mov
je
jnp
add
xor
pop
xchg
pop
addr16
sti
outsb
fmuls
scas
into
xchg
into
loope
ret
push
out
pop
addl
pop
mov
adc
repnz
fidivrs
lret
sub
pop
pushf
je
and
push
cmpsl
dec
cmp
imul
fldt
cmp
dec
adc
mov
adc
rclb
scas
sub
or
pop
jmp
mov
neg
push
stos
push
mov
repz
and
sub
aas
sarl
sahf
jl
and
cs
imul
into
fldcw
in
lret
jno
hlt
sbb
add
pop
or
xor
in
and
fwait
add
cld
mov
dec
lret
mov
test
cmp
or
repz
into
fcomps
or
mov
divb
lret
mov
sbb
test
dec
fcomi
sub
push
shl
aam
dec
movl
and
test
ss
inc
je
pop
or
es
andl
mov
xchg
nop
mov
subb
sbb
add
mov
in
dec
mov
andl
jg
inc
movsl
xor
cmp
xchg
xchg
mov
cmpsl
cmp
xchg
lock
jge
jo
sub
into
adc
int3
in
cmp
out
cmpsb
lods
addb
data16
jns
inc
xchg
int3
jecxz
xchg
add
push
js
fwait
arpl
push
fstpt
cmp
test
data16
rorb
jae
mov
dec
jge
cmpsl
or
cld
mov
sti
cmpsl
mov
cmp
stos
or
daa
mov
add
or
out
cmp
and
and
mov
cltd
mov
mov
mov
scas
repz
sub
movsl
pop
jge
and
or
es
cmp
movsb
aad
cltd
in
lahf
push
fs
mov
std
pop
or
jg
and
bound
mov
push
jbe
dec
movsl
fdivrl
out
inc
mov
pop
es
sub
mov
mov
mov
js
jecxz
mov
xchg
je
lods
mov
sbb
mull
mov
cmp
xchg
popa
mov
ret
std
or
fdivs
and
or
jb
in
test
jl
dec
cmpsl
mov
sbb
aaa
into
mov
mov
mov
push
mov
shrb
out
aaa
xor
cmpsb
jle
xor
fimull
push
adc
adc
cmpsl
inc
push
cmp
mov
mov
pop
out
nop
stc
addr16
or
mov
cmp
sbb
inc
daa
aas
iret
popa
stc
jno
mov
mov
jp
in
es
aas
mov
ds
mov
add
xor
cmpsl
nop
adc
or
cmpsb
inc
xor
outsl
out
add
lahf
andb
lret
mov
and
ja,pn
or
push
sahf
cmc
cmpsb
inc
and
data16
push
movsb
mov
sarb
movsb
sub
and
sbb
mov
ffree
popf
imul
lret
scas
fwait
jle
std
sbb
jo
into
aas
call
xor
es
arpl
sarl
xor
fwait
insb
int3
sub
push
mov
mov
enter
lret
in
in
fsubs
dec
jl
mov
test
popf
sub
loope
jne
test
sub
jge
xchg
cmp
push
test
and
leave
or
rcrl
data16
mov
cmp
jg
mov
and
mov
xchg
dec
cmpsl
test
adc
mov
xchg
xchg
xchg
add
lds
mov
cmp
mov
mov
scas
in
add
loope
movsl
or
mov
data16
pusha
imul
popa
stc
movsl
jnp
aam
ret
mov
daa
div
jnp
sub
sti
or
mov
loope
jmp
leave
mov
mov
mov
jecxz
out
and
xchg
jecxz
cmpsl
jmp
cs
push
cmpsl
stos
dec
ljmp
jmp
sub
sub
call
xlat
cmp
addr16
stos
ss
dec
stos
in
cmpsb
pop
dec
arpl
cmc
push
mov
mov
or
or
push
ljmp
shlb
mov
mov
mov
leave
add
int
mov
cs
push
inc
dec
jecxz
mov
mov
fbstp
and
aaa
leave
mov
fstpl
testb
cmpsb
xor
dec
adc
shrb
mov
add
lret
inc
jge
lret
pop
xchg
cmpsl
jb
sbb
punpckhwd
push
cltd
loope
cmp
cmp
in
test
in
xchg
xor
mov
sbb
add
pusha
outsb
jmp
or
dec
je
mov
cwtl
lret
cmp
js
push
cmp
stc
pop
movsl
add
gs
sbb
lea
std
xchg
dec
iret
addr16
aaa
jbe
jp
jns
outsl
inc
int3
sahf
fdivrp
jb
jnp
test
jb
and
mov
xchg
jecxz
pop
inc
enter
ss
add
repnz
pop
mov
loopne
pop
es
push
enter
add
cmp
addr16
pop
push
out
je
frstor
xchg
mov
xchg
pop
inc
out
ret
clc
jmp
or
lret
xchg
dec
xchg
fldt
mov
sti
test
xor
mov
loop
int
ds
icebp
into
in
movsb
out
aad
pusha
pusha
arpl
shlb
mov
data16
push
in
xor
xor
or
ja
mov
arpl
dec
jae
or
pop
ljmp
sub
mov
cmp
leave
lret
mov
jmp
mov
xor
inc
das
push
mov
jp
mov
sub
jl
into
lods
js
jmp
sbb
or
and
aaa
leave
leave
aad
in
sbb
xchg
dec
mov
mov
mov
dec
xor
icebp
fidivrl
mov
sahf
sbb
jp
out
notl
xchg
not
leave
std
fnstenv
jne
jbe
popf
push
out
push
dec
sbb
cltd
push
jns,pn
mov
popf
outsb
lds
popf
or
mov
aad
arpl
cmp
mov
in
or
dec
mov
inc
mov
mov
lea
aaa
ja
jp
leave
pop
jmp
int
sbb
cmpsb
imul
push
sbb
bnd
jle
lds
and
hlt
jmp
mov
aas
sub
into
and
cmc
sbb
push
and
sarl
sbb
fnstcw
pop
sbb
sub
cs
add
imul
cmp
movsl
add
lock
mov
mov
les
mov
or
stos
out
fldt
xchg
movsl
mov
int
icebp
push
testl
cmp
out
leave
jle
lret
test
sbb
dec
dec
xchg
mov
sahf
mov
lahf
movsl
jae
jg
clc
push
mov
jg
jae
js
repnz
cmpb
cmp
jecxz
seta
aaa
clc
and
popa
cli
mov
xlat
jle
mov
mov
imul
push
data16
stc
fdivrp
lods
jle
js
lock
dec
mov
and
jmp
mov
js
mov
mov
icebp
jae
add
mov
sbb
sub
roll
punpcklbw
pop
jb
scas
loop
scas
lret
lret
in
scas
mov
popf
cmp
and
test
je,pt
in
imul
xor
int
sbb
movsl
movsb
je
or
cwtl
mov
push
mov
xlat
add
xchg
cs
mull
unpckhps
cmc
in
sub
jnp
or
xchg
dec
cs
jg
jmp
xlat
mov
leave
jno
in
repnz
jmp
mov
in
movsb
test
cmpsl
mov
jnp
sub
fnstsw
jnp
movsl
shll
insb
aaa
push
jg
jae
dec
and
lcall
scas
lahf
sub
mov
push
inc
int3
stos
into
daa
imul
pop
jmp
into
mov
or
mov
jnp
subb
bound
sbb
stos
push
sub
cmpsl
mov
or
mov
push
imul
cmp
lods
insb
jnp
mov
push
sbb
dec
or
jne
sbb
es
movsb
insb
nop
mov
into
imul
fimull
mov
movsw
lods
pop
and
mov
jae
and
adc
mov
cli
inc
jp
pop
xlat
cmpsl
andb
pop
shrl
mov
push
xchg
push
and
push
mov
popa
mov
sbb
adc
pop
or
repz
mov
int
sub
cmp
nop
mov
into
das
jl
and
es
lret
mov
xor
in
push
pop
adc
cmpl
rcll
ds
lods
xchg
and
scas
adc
and
scas
mov
push
inc
lods
ss
aas
push
lds
ret
mov
cmp
icebp
xor
jp
leave
lret
pop
xchg
lods
int
cmpb
subl
push
cmpsl
add
cmpsb
push
push
mov
mov
in
push
xchg
mov
popa
adc
out
cmc
lds
lods
fwait
or
ss
test
icebp
sub
pop
pop
pop
push
add
mov
mov
mov
mov
iret
pop
or
iret
lret
dec
sbb
push
mov
daa
dec
aaa
test
push
mov
adc
pusha
xchg
sti
fdivrs
call
sbb
cmp
leave
mov
mov
xchg
push
les
jne
call
cmp
mov
popa
sbb
in
jae
pop
jl
into
daa
dec
jne
cmp
repnz
pushf
jmp
sub
cmp
test
test
mov
xchg
test
jecxz
cs
movsb
fwait
outsb
mov
cmpsl
mov
mov
push
aaa
mov
sbb
fbstp
xchg
imul
mov
repz
sti
inc
pop
mov
mov
out
test
mov
mov
push
ljmp
mov
inc
imul
test
adc
cmpsb
push
xchg
or
mov
enter
jno
mov
push
xlat
imul
pusha
in
or
xchg
call
dec
popf
or
inc
mov
mov
mov
sti
or
sub
out
mov
test
lahf
sahf
popf
gs
es
xchg
jecxz
pop
cmpsl
mov
fidivrs
mov
mov
in
pop
jl
or
test
idiv
mov
out
or
xlat
das
xchg
mov
sub
call
and
bound
pop
pusha
lret
push
fstps
and
jne
cwtl
leave
test
sbb
dec
sub
sub
mov
cmpsl
lcall
pusha
sbb
dec
hlt
loop
je
mov
out
cli
rcll
mov
out
mov
ret
jmp
ds
sub
jmp
enter
mov
push
cmp
jecxz
addr16
xchg
sub
xchg
or
jp
enter
sbb
mov
mov
add
mov
cmpsl
mov
stc
jne
pushf
popf
stc
lret
fwait
outsb
leave
test
adc
mov
jmp
imul
out
jae
cmpps
idivl
mov
les
push
mov
dec
fcmovb
test
push
or
pop
jle
mov
mov
sbb
adc
imul
pop
cmp
sub
push
cmc
movsb
lds
mov
imul
or
mov
sub
std
adc
mov
mov
insb
jmp
repz
aas
pop
pop
js
jne
pop
jmp
push
sub
xchg
fnstcw
in
pop
int
mov
mov
aaa
es
add
inc
sbb
mov
cmc
jnp
mov
fsubl
sub
pop
stc
xchg
out
aaa
pushw
scas
jae
sbb
pop
popa
jecxz
stos
and
push
sarl
cmp
adc
fsubs
mov
out
jmp
outsb
cli
push
stos
jne
jbe
js
nop
movsb
mov
sbb
stos
push
daa
lds
inc
sub
xor
ficoms
xchg
into
or
sub
imul
push
insl
or
sub
lods
leave
adc
inc
sysexit
shrb
aaa
xchg
sbb
jbe
ljmp
cmp
div
lds
lods
xchg
outsb
ds
clc
xor
jp
movsl
mov
dec
or
xchg
mov
mov
xor
lods
and
pop
add
enterw
mov
call
xor
and
ss
mov
mov
outsb
orb
jl
in
sub
imul
and
daa
xor
xchg
push
mov
xor
movsl
jl
inc
mov
cmp
or
adc
es
dec
cmp
repnz
es
imul
mov
movsl
or
mov
jne
fxch
sub
mov
add
jl
dec
mov
sub
xchg
scas
cmpsb
lahf
aaa
test
je
mov
leave
xor
cmc
add
scas
shld
ljmp
dec
xor
jns
push
nop
add
mov
into
arpl
nop
jge
ret
sti
and
imul
mov
repz
and
nop
mov
cmpsb
scas
xor
sub
addl
and
or
inc
bound
push
inc
shll
push
loop
xlat
adc
sbb
pop
outsb
inc
xor
clc
bound
sbb
xchg
cs
dec
es
bound
mov
jbe
mov
cmpsb
fisttpll
adc
int3
or
outsl
es
push
or
mov
and
sub
enter
xchg
bswap
int
sub
aad
and
xor
ficompl
dec
jbe
insb
ret
mov
push
pushf
push
leave
shld
xor
xchg
call
jbe
sti
sub
mov
push
add
out
sub
out
xchg
lcall
aam
inc
psrlw
iret
xor
push
push
inc
shrb
mov
push
jecxz
mov
outsb
cli
js
mov
lcall
mov
lret
adc
or
dec
mov
cmp
push
mov
inc
sbb
add
mov
xor
pop
mov
mov
adc
popf
xchg
xchg
sub
js
fidivrl
mov
into
notl
into
sbb
mov
ret
addl
mov
mov
outsb
in
cmpl
sarb
sub
pop
sub
pop
das
cmp
ss
insb
in
pop
shll
pop
xor
pop
dec
imul
imul
fldcw
stc
lret
pop
aam
test
movsl
jns
lcall
test
repz
out
fistps
cmp
lret
popa
enter
mov
xlat
dec
popa
addb
sub
push
inc
and
jo
in
push
dec
mov
pop
adc
ljmp
ds
out
sub
jl
ds
inc
sbb
mov
test
and
stos
test
daa
mov
movsl
xchg
test
adc
jbe
rolw
or
pushf
ss
mov
test
sbb
fs
test
inc
cmc
lods
stos
test
xlat
push
jl
dec
les
gs
mov
adc
sarb
movsl
imul
leave
sti
repnz
mov
aaa
int
and
adc
mov
js
pop
lret
xchg
jne
mov
into
loope
or
mov
pushfw
adc
xchg
mov
xor
test
xchg
sub
mov
xchg
and
mov
lea
popf
std
adc
pop
jcxz
stos
out
inc
popa
leave
push
shl
xor
push
push
shr
out
xchg
cmp
sub
addr16
leave
add
xchg
pop
mov
fwait
xchg
sub
lahf
shrb
lods
cmpsl
xchg
or
dec
inc
cmp
or
ret
cmp
fwait
add
std
cmp
mov
mov
dec
lea
clc
dec
or
and
in
aad
pusha
loop
dec
mov
sub
scas
loopne
mov
lods
sti
mov
and
dec
push
lds
mov
std
idivl
test
mov
pop
jae
cmpsl
push
nop
cmpsl
jmp
leave
popf
sbb
pop
stos
sub
jecxz
xchg
imul
or
out
add
pop
mov
cmpsl
jne
add
xchg
lods
mov
push
gs
cmpsl
leave
dec
test
push
push
push
cmpsb
stc
sub
mov
cmpsl
mov
ljmp
mov
mov
mov
mov
mov
aas
mov
cltd
inc
or
int
sbb
loopne
or
mov
adc
mov
push
and
push
cmpsl
lods
mov
jg
cltd
pop
dec
leave
js
in
mov
push
mov
movsb
mov
xchg
push
jp
dec
xorl
mov
movsl
push
or
adc
cltd
xlat
aaa
mov
mov
sub
out
mov
ds
xor
je
rcll
gs
cmp
xchg
hlt
and
arpl
cmpsl
scas
jmp
sub
movsl
rol
sti
cmp
out
jne
and
dec
mov
or
mov
loop
push
mov
cmp
mov
inc
mov
or
pop
mov
mov
push
cltd
shlb
cmp
mov
cmpsb
call
or
fcmovne
and
cmp
sbb
mov
mov
cmp
sbb
ret
popa
imul
sbb
xchg
imul
aad
test
out
mov
loope
enter
daa
cmp
repnz
sub
addr16
sbb
push
frstor
push
cmp
xchg
jecxz
fdivrl
adc
mov
add
push
cmpsb
pop
subb
sbb
push
or
mov
into
cmp
mov
cwtl
andb
pop
fistpll
es
cmp
and
fsubp
leave
pop
lds
cmp
xchg
iret
sub
out
xchg
mov
xchg
mov
clc
test
jmp
or
enter
inc
hlt
fcmovb
cli
jnp
pop
fcmovne
sbb
test
push
mov
mov
jecxz
popf
sbb
dec
adc
bound
inc
sti
cmpsb
pushf
adc
fs
je
xchg
inc
imul
sbb
mov
mov
dec
stc
les
popf
mov
mov
out
push
cmp
lret
cmc
push
mov
imul
out
pop
push
mov
mov
ss
xor
sbb
lahf
xchg
test
mov
lret
js
pop
mov
inc
push
mov
sbb
mov
les
pop
or
adc
aaa
pop
mov
sub
mov
and
adc
int
ret
mov
mov
mov
mov
mov
call
repz
cmpsb
dec
ljmp
jnp
mov
cmpsl
xor
push
add
push
sub
in
add
pop
mov
aaa
sbb
movsb
aas
mov
pop
jle
fwait
sub
mov
fsubp
adc
mov
jne
enter
pop
mov
int3
mov
add
pusha
ss
je
jecxz
jns
add
add
cmpsl
mov
xor
mov
mov
icebp
sbb
lcall
nop
sbb
lahf
pop
mov
mov
add
xchg
gs
dec
fiaddl
mov
fwait
js
sbbl
lods
xchg
mov
lcall
cwtl
inc
jp
mov
add
jb
mov
mov
lds
je
into
cmovo
mov
lahf
sbbb
jmp
push
mov
rorl
pushf
cmpsb
aad
push
jbe
scas
xor
out
xchg
mov
mov
and
in
leave
jecxz
xchg
mov
mov
ja
cmpsb
lds
mov
mov
inc
shl
adc
pop
or
loopne
stos
mov
add
addr16
test
loopne
mov
cmp
push
bound
sti
mov
lods
mov
cs
or
ljmp
pop
pusha
sub
enter
les
or
outsl
mov
pusha
rcll
lds
movsb
xchg
int3
pop
and
aaa
and
cmp
push
or
nop
scas
mov
push
mov
xchg
fs
mov
mov
dec
mov
mov
and
into
nop
cmp
dec
sub
fnstenv
sahf
mov
lret
lret
or
jl
fnstcw
leave
mov
pop
stc
adc
pop
mov
cmp
not
mov
into
leave
xchg
push
mov
push
loopne
hlt
mov
pop
mov
hlt
mov
xchg
mov
aaa
test
jl
lds
sbb
aam
inc
ss
mov
pop
xor
lock
dec
scas
movsb
push
push
movsb
jl
hlt
push
psubsb
out
pop
and
inc
fwait
xor
fwait
and
popa
pusha
sbb
ds
push
lret
loopne
jl
incl
iret
and
movsb
mov
lahf
adc
ss
lret
lcall
lahf
mov
add
testl
out
add
and
add
mov
or
hlt
push
jo
leave
sub
mov
xor
mov
sar
leave
aad
cmpl
and
and
nop
push
idivb
popa
mov
inc
repnz
leave
movsl
xchg
add
dec
scas
push
or
dec
sbb
mov
mov
mov
mov
jns
out
jae
pop
mov
or
loopne
mov
lahf
lcall
cmpsl
pop
pop
xor
test
lds
fdivrl
jne
aad
rcrb
frstor
lods
cmp
push
and
mov
add
adc
mov
or
cmp
stc
adc
movsl
add
lods
mov
mov
pushl
in
mov
push
pop
fs
mov
into
ficoms
mov
sti
sbb
fdivl
push
test
jae
idivl
iret
lret
movsl
ds
mov
adc
lods
addl
js
push
sbb
lods
into
addr16
push
jns
nop
aad
es
les
pop
cmpsl
ficoms
or
movsl
imul
lret
stos
orl
faddl
xchg
cmp
out
fistpll
aas
out
mov
mov
lahf
test
ds
cli
push
rclb
xchg
cmp
js
out
sbb
xchg
mov
aaa
jne
pop
sub
jmp
test
jo
enter
jne
fs
je
lret
lds
repz
mov
rorb
cltd
mov
pop
stc
xor
stos
notl
or
scas
jne
xchg
ret
fsubrs
bound
daa
int3
inc
push
aad
cmpsb
dec
add
and
add
jmp
mov
stos
mov
popa
inc
mov
and
mov
mov
leave
shrl
mov
rol
ljmp
mov
and
mov
jl
in
mov
ret
loop
jb
mov
lret
movsl
bound
dec
or
mov
fistpll
pop
ds
aas
dec
in
lods
sub
xchg
mov
aad
movsl
pop
fcomip
fdivr
cmpsl
or
stos
mov
int3
inc
cli
popf
jecxz
xchg
loop
sub
pop
sub
out
fisttpl
test
xor
lcall
or
hlt
xchg
mov
loope
add
sbb
jecxz
adc
stc
dec
mov
loop
sbb
cmpsl
addr16
dec
cmpsb
mov
inc
sarl
dec
test
xchg
imul
incl
loopne
jbe
dec
loop
mov
mov
and
mov
or
enter
mov
mov
push
mov
test
aaa
mov
xchg
mov
pushf
xchg
xchg
lock
mov
adc
mov
cltd
in
cmpsl
lret
mov
pop
lods
lahf
repnz
mov
les
mov
push
xor
sbb
int3
stc
cwtl
mov
pop
mov
mov
mov
div
xor
dec
pop
das
cld
ja
push
xchg
sub
add
sti
ja
leave
jnp
cmc
lcall
xor
popf
mov
ljmp
mov
insl
dec
jle
mov
out
test
push
shll
cmpsb
mov
xor
in
mov
cli
insb
mov
ds
rcrb
push
or
mov
in
pop
popa
stos
xor
sti
cmp
leave
stc
cmpsb
add
and
sub
popf
push
xor
mov
leave
dec
push
add
das
ss
loope
inc
lds
pop
cmpsb
test
push
dec
rcrb
gs
nop
mov
sbb
fadd
jae
sub
mov
pop
xchg
jmp
pushf
jmp
out
pop
stc
mov
sub
scas
jg
loop
lahf
jbe
add
mov
fnclex
mov
xlat
mov
cmc
loopne
xchg
xchg
jl
int
and
mov
cltd
addb
xchg
stc
pop
mov
in
cmp
add
jnp
sub
popw
pushf
outsl
js,pt
in
add
dec
push
pop
push
js
cwtl
xchg
lods
std
fstps
cmpsb
fildl
inc
cmc
xchg
inc
sub
sbb
rcrl
push
xchg
jle
push
lret
mov
lret
int
dec
sbb
or
pusha
lahf
loop
pop
sub
sbb
sbb
in
scas
mov
shll
add
mov
in
int3
xlat
cmp
mov
inc
dec
and
repz
add
mov
ficoms
inc
mov
test
mov
xchg
test
mov
cmp
sarl
dec
jmp
mov
mov
mov
mov
xchg
mov
inc
movsb
aaa
push
hlt
dec
xchg
pop
test
and
decl
ds
out
inc
sbb
popa
push
cltd
jmp
fisttps
sbb
adc
or
xorl
push
gs
repnz
icebp
ret
addr16
jb
jae
jbe
and
cltd
in
int3
clc
into
xchg
mov
cmp
ret
lods
xor
push
div
repz
sbbb
xlat
ret
xchg
mov
push
fdivrl
jmp
add
adc
mov
push
lock
or
jne
call
xor
es
movsb
insb
sahf
xchg
mov
push
fisttps
lea
icebp
inc
cmpsb
mov
in
cmpsl
lret
into
ret
and
lods
cld
jns
fldl
jne
or
ret
in
jns
das
jmp
push
sbb
sbb
fwait
hlt
add
data16
nop
repnz
fists
mov
lcall
dec
ljmp
call
xor
inc
push
loop
add
xchg
cld
fiadds
jno
fnstsw
test
cs
pop
addr16
mov
lahf
clc
add
mov
pop
mov
xor
ret
mov
sub
jb
lret
mov
addr16
es
mov
inc
push
dec
jne
ficompl
dec
std
mov
fildll
enter
mov
mov
or
test
and
jmp
or
sub
stos
out
movsl
jp
dec
ljmp
std
rol
aas
jno
stc
cmp
push
pop
lret
nop
ficompl
test
adc
gs
addl
and
and
dec
xchg
dec
dec
sahf
lds
inc
mov
xor
push
into
sti
xor
cmp
inc
cmp
xchg
fmulp
adc
pop
jl
dec
and
xchg
icebp
test
push
add
icebp
cmp
mov
ja
ja
mov
mov
popf
pushf
push
and
sbb
jmp
nopl
sbb
xlat
sbb
scas
dec
ret
inc
mov
inc
aaa
dec
cmp
adc
loop
sub
push
repz
sbb
mov
sbb
push
out
jecxz
jne
sbb
int
iret
mov
into
sti
enter
jmp
loop
sub
mov
out
fisttps
pop
xor
mov
in
aad
mov
add
push
xor
test
es
mov
mov
mov
inc
push
add
popa
call
loop
mov
pop
ja
cmpb
stos
and
out
sub
lret
hlt
ljmp
sub
test
in
sbb
lea
cmp
sbb
lret
or
push
call
inc
and
inc
in
or
testb
sub
lret
fldt
fistpll
mov
mov
pop
mov
xor
loop
mov
dec
stos
ret
imul
or
rcrb
jecxz
mov
popa
xchg
xchg
sahf
jecxz
in
and
ftst
mov
pop
js
psubsw
mov
push
pop
mov
and
movsl
lahf
push
pop
leave
mov
aad
lea
out
push
test
or
popa
mov
sbb
cmp
movsb
jp
mov
insl
xchg
inc
mov
xor
js
test
xor
mov
aaa
int3
pushf
addl
es
popf
test
cwtl
outsb
mov
stos
es
and
mov
mov
ljmp
cli
stos
cmpsl
iret
mov
and
loop
pusha
push
arpl
test
pop
cs
xor
jp
cltd
push
out
fsubr
arpl
dec
xchg
dec
mov
mov
pcmpgtb
enter
sbb
imul
idivb
xchg
sbb
and
xchg
divl
divb
add
mov
add
out
mov
mov
xchg
mov
mov
mov
out
inc
and
leave
xchg
pop
outsb
rcrb
mov
pop
cli
mov
jle
mov
or
sub
or
ss
aaa
divb
push
in
mov
cmpsl
iret
add
in
sub
aas
in
nop
and
mov
pop
std
sbb
ficompl
xchg
fdivl
leave
push
pop
cli
inc
fisttps
dec
sub
cwtl
cmovne
xor
test
xor
pop
or
stos
push
mov
in
jg
mov
enter
aad
or
cmp
test
cmp
jbe
loope
inc
scas
sub
sub
dec
lds
repz
rcl
insb
xlat
pop
mov
test
jo
dec
xchg
push
fnstcw
fadd
sbbl
sub
or
or
ljmp
mov
sbb
pusha
sub
into
or
test
mov
xor
jnp
test
jl
mov
sarl
lret
mov
jle
fnstsw
mov
testb
xchg
mov
fwait
jbe
in
push
loope
es
push
cmpsb
repnz
or
sub
xor
sbb
addr16
shr
pop
lret
pop
xchg
dec
ds
jmp
pusha
cmp
repz
mov
push
cmpb
and
push
lret
ljmp
leave
fidivs
xchg
sbb
repz
jl
stos
outsb
adcl
xchg
sti
stos
xchg
mov
mov
cmp
into
les
xchg
std
cmpsl
cmp
jb
andl
cs
dec
testl
cli
stc
addb
push
jns
xchg
ljmp
push
jmp
xor
loop
rcrl
popa
mov
mov
xor
xchg
andb
scas
cmp
or
push
es
jne
xor
mov
loopne
mov
fisubl
and
xchg
jl
push
aaa
movsl
xchg
adc
dec
xor
xchg
xorl
or
dec
fisubrl
dec
xchg
sub
cltd
sahf
cmp
mov
lahf
push
xchg
adc
fistpll
cmpsl
push
push
scas
adc
gs
mov
into
mov
add
or
mov
les
add
lods
add
jp
push
imull
mov
cltd
mov
dec
sub
xchg
fnstsw
jg
xchg
or
lret
inc
popa
ss
les
mov
cmp
dec
stc
push
in
iret
dec
shrb
jmp
out
sti
leave
out
mov
cmpsb
out
dec
lcall
jl
sub
mov
jmp
push
pushw
fldt
mov
adc
dec
mov
icebp
out
int3
out
test
movsl
xchg
fs
icebp
in
stos
cmp
jnp
lods
cld
push
sbb
xor
pop
mov
pop
mov
cli
pop
mov
in
sbb
out
inc
cmpsl
std
pop
xchg
test
icebp
and
mov
mov
mov
clc
cmpsb
adc
sbb
add
lahf
lea
mov
test
frstor
push
add
mov
enter
into
xchg
lds
lcall
xor
in
push
data16
push
inc
mov
mov
xchg
pop
jae
fldenv
pop
and
jne
mov
int3
test
test
cmpsb
cmp
clc
mov
pop
bound
xchg
jecxz
jmp
inc
or
and
fdivrp
add
sub
xor
adc
es
mov
test
xchg
jp
mov
repz
daa
shll
fldenv
imul
mov
mov
push
lock
push
pop
mov
scas
mov
mov
or
dec
sub
bound
sbbb
clc
cwtl
cmp
and
inc
mov
loopne
inc
sbbb
mov
into
cwtl
or
mov
int3
imul
push
push
sub
outsb
imul
out
gs
dec
cld
or
xchg
push
dec
out
push
test
push
push
push
xlat
scas
xchg
mov
sarl
inc
jmp
xchg
mov
sbb
add
movsb
ss
aaa
popf
xor
and
jae
insb
ljmp
cmp
jl
icebp
jg
in
xchg
or
push
push
sub
fdivl
mov
lret
mov
mov
cmp
test
cmp
jns
rolb
adc
test
fisubrl
inc
and
lcall
push
in
std
ljmp
mov
stc
shll
mov
dec
test
xchg
adc
popa
add
stos
mov
addr16
lds
les
pop
rcrl
pop
in
fbld
xchg
cmp
lcall
mov
mov
test
xlat
icebp
in
mov
fsubs
jae
cwtl
sti
adc
sti
cs
ja
clc
push
lahf
mov
shll
pop
fisubrs
ret
mov
xor
shll
jmp
dec
adc
mov
mov
jae
cmp
mov
mov
es
gs
xor
mov
fsubrs
pop
mov
xorb
imul
call
sahf
mov
cmp
xor
hlt
pop
pop
inc
outsl
xchg
pcmpgtw
ja
cmpsb
push
lret
xchg
xchg
fisttpl
lcall
ja
mov
cmp
jle
cmpsl
xchg
aas
mov
fwait
mov
mov
mov
fldt
es
mov
push
fidivrs
or
sbb
nop
dec
js
outsb
and
inc
jnp
xchg
dec
adc
test
mov
xor
sub
xchg
adc
aam
mov
stos
mov
std
pop
fimuls
or
in
mov
ljmp
jge
ret
adc
mov
daa
test
xchg
in
cmpsl
mov
cld
mov
mov
call
int
out
inc
jb
pop
lds
ja
pop
enter
sub
mov
push
xchg
mov
push
mov
and
mov
cmp
mov
push
scas
xchg
cltd
mov
loope
imul
frndint
or
out
fsubs
dec
fsubp
les
xchg
into
and
inc
mov
lahf
mov
out
mov
cmpsb
and
imul
movsl
push
xchg
leave
hlt
dec
xor
jo
jmp
js
enter
loopne
lcall
cltd
push
push
mov
or
cmpl
jbe
or
imul
fcomps
stc
jmp
add
movsl
xchg
dec
movups
cmpsb
xchg
push
jmp
add
mov
jmp
rol
popf
lea
xchg
lods
lret
sbb
adc
mov
pop
cmp
sub
mov
cli
pop
sub
in
enter
xchg
and
enter
data16
shrb
cmp
push
dec
outsb
test
xor
aas
movsl
mov
mov
adc
loop
inc
shr
mov
push
enter
stc
shll
mov
mov
jbe
cmpsl
xchg
jg
pop
notl
push
inc
add
mov
add
mov
subb
js
cmp
imul
mov
ret
aam
std
inc
add
push
adc
cmpsb
cs
std
add
lret
out
push
dec
nop
iret
in
jl
jb
push
mov
mov
enter
ljmp
data16
mov
insl
shl
inc
mov
movsb
xchg
add
push
xorl
push
loopne
iret
add
sub
rol
mov
test
mov
sarl
xor
int
jmp
jp
adc
lahf
into
jg
imul
test
xchg
ret
fwait
ja
or
adc
inc
xchg
movsl
adc
mov
and
mov
jo
es
mov
xor
out
inc
dec
ja
mov
mov
popa
loope
mov
fdivrs
inc
cmpsl
testb
js
das
pop
mov
and
push
test
mov
push
sbb
inc
test
js
ja
mov
cmpsl
sbb
lock
add
in
rep
mov
fwait
xor
dec
insb
addr16
mulb
fs
jl
leave
gs
stos
clc
adc
sub
sbb
pop
mov
fwait
hlt
das
mov
jge
pop
int3
and
sub
mov
or
mov
lcall
bound
jno
lods
lods
in
xor
leave
and
stc
stos
xchg
xor
lcall
mov
es
and
movsl
jns
es
mov
bound
icebp
and
push
xchg
scas
repnz
stos
in
jns
mov
lods
imul
mov
fldcw
mov
or
jg
adc
loope
mov
pushf
inc
jnp
and
in
mov
mov
mov
outsl
dec
mov
jle
inc
stc
sbb
inc
scas
mov
xor
notb
out
and
jp
mov
adc
jecxz
pop
and
sahf
push
and
jmp
bound
add
or
mov
test
aam
shlb
popa
push
scas
push
sub
mov
cltd
mov
xchg
sti
and
cli
jmp
cmp
add
stos
xchg
dec
test
arpl
jne
or
les
jmp
push
pop
insl
pop
cmp
jl
dec
stc
xchg
or
mov
cld
mov
into
js
clc
push
int3
lods
lods
cmp
or
mov
cmp
cmc
outsb
inc
cmp
test
mov
jl,pn
mov
push
int
mov
mov
sub
sbb
lods
ret
jbe
xchg
pop
rcr
popa
xor
mov
sub
and
lret
aaa
lret
sbb
xlat
loop
fsub
dec
mov
nop
inc
and
adc
jl
add
fldl
mov
xor
insl
shlb
out
aaa
dec
das
xlat
aam
mov
data16
loope
cmp
dec
int3
jecxz
add
ror
js
mov
mov
push
inc
mov
stos
xor
jge
in
lret
and
xchg
mov
xchg
jne
jns
cmp
test
mov
mov
nop
jmp
add
imul
into
and
mov
fistpl
jbe
es
mov
shll
in
mov
js
xchg
leave
iret
rol
xchg
pusha
js
pushf
das
add
jno
iret
decl
mov
jns
push
ja
loop
jae
sti
cmp
mov
sub
mov
sub
pop
lcall
stos
mov
jl
int3
mov
sbb
and
adc
jnp
and
mov
shlb
cmp
loopne
or
inc
adc
push
rorl
decl
pop
mov
pusha
aam
test
cli
sti
xchg
mov
lret
cmpsl
and
mov
jp
mov
push
daa
and
stos
cli
ss
das
xor
mov
adc
imul
jns
add
enter
push
mov
bts
loope
scas
jmp
jmp
testb
mov
fnstenv
mov
sbb
pop
movsl
xor
aaa
jmp
mov
and
lcall
fstpl
or
into
sbb
mov
mov
or
mov
push
mov
aaa
jmp
pop
popa
out
push
and
cmp
outsb
and
sub
cs
add
and
sti
dec
hlt
and
push
int
cmp
addr16
cmp
jl
inc
mov
hlt
sti
pop
sbb
idivb
in
leave
mov
xchg
shlb
xor
xchg
cmpsl
lahf
int3
out
icebp
pushf
sub
xchg
movsb
dec
pop
fsubrs
jle
in
aaa
imul
sub
and
jecxz
mov
js
mov
cmp
push
adc
cmp
xchg
dec
sub
pop
std
int3
or
cli
xchg
cmp
and
mov
mov
call
dec
bound
fnstenv
sub
mov
pop
inc
add
loope
loope
mov
ss
hlt
dec
ja
mov
cld
xchg
mov
xor
mov
cmp
lret
sub
aaa
fildl
xchg
je
jecxz
mov
popa
popf
xchg
xor
xchg
xor
sbb
mov
pop
xchg
or
mov
lods
cld
lock
mov
aam
add
mov
lods
cmp
outsl
hlt
cmp
rclb
sub
jmp
mov
xchg
mov
jmp
mov
lcall
movsb
cs
sbb
sarb
add
sbb
aam
mov
jecxz
ja
jns
mov
pop
les
add
mov
xor
adc
lds
push
divb
hlt
sarb
mov
std
notl
fnsave
jge
scas
mov
rcrl
adc
dec
cmp
sti
stc
sbb
adc
fs
sbb
data16
aaa
test
jecxz
fisttpll
and
jl
lds
mov
xor
test
popl
icebp
movsb
sub
mov
mov
ror
or
movsb
xor
in
xchg
mov
int3
cmpsb
mov
movsb
lret
les
test
mov
fldenv
ja
sti
sbb
leave
mov
out
mov
add
and
adc
cwtl
push
lahf
xor
std
or
mov
mov
cmp
mov
loop
orl
xor
xchg
xor
mov
ret
adc
jge
or
in
cmp
inc
push
add
mov
pop
in
int3
or
or
inc
cltd
inc
pusha
repnz
into
sub
stos
add
es
xchg
inc
js
in
dec
lret
stos
imulb
cltd
hlt
push
repnz
popf
cmpsb
pop
mov
and
dec
xchg
xchg
xchg
pop
mov
jbe
or
movsl
jmp
xchg
addr16
clc
mov
jl
hlt
cmc
jle
mov
lock
daa
cli
pop
in
inc
mov
test
pop
movb
push
mov
popf
call
cmpsl
xchg
jecxz
shrb
cmpsb
xchg
inc
mov
push
dec
data16
mov
stos
mov
out
fidivrs
leave
add
mov
stos
mov
ficompl
test
pop
out
loope
rolb
imul
js
mov
xor
jg
xchg
sbb
xchg
inc
mov
jae
jmp
xchg
loope
les
scas
cli
xchg
sbb
sti
mov
and
pop
adc
repz
mov
cltd
pop
enter
push
xchg
int3
test
andl
mov
inc
mov
enter
lods
into
addr16
sbb
gs
adc
imul
or
sbbl
stos
ljmp
or
mov
or
sbb
jns
xchg
inc
dec
jmp
jle
in
data16
xchg
jl
xor
test
enter
int3
pop
aaa
lahf
mov
cwtl
clc
cmpsl
and
mov
cmp
mov
cmpsl
add
clc
jge
into
mov
jne
xchg
cs
stos
stos
lcall
fld
icebp
aad
jne
mov
jp
mov
mov
cmp
mov
mov
mov
jae
xchg
lahf
mov
dec
xor
lods
clc
daa
mov
pop
push
and
and
cmp
or
mov
mov
jl
sub
cli
xor
or
shll
enter
push
xor
fsubl
mov
clc
pop
inc
mov
ja
mov
test
outsb
jae
icebp
out
pushl
dec
mov
test
mov
cs
call
xchg
dec
pusha
cltd
jl
mov
aaa
inc
lcall
jae
pop
mov
cmp
sbb
mov
mov
mov
js
pusha
adc
pop
add
push
aad
in
xchg
je
sub
lret
popf
jecxz
insb
mov
cmpsl
shrb
sub
hlt
aaa
popa
test
lcall
pop
lods
sahf
insb
sub
jae
push
jne
mov
cmp
sub
pop
movsb
add
add
popf
ffreep
mov
and
push
cmp
jl
dec
jp
or
sti
mov
and
push
push
leave
xlat
mov
loop
dec
push
mov
jne
mov
push
xchg
ja
jb
sub
mov
es
jecxz
jmp
fdivl
enter
adc
push
mov
or
xchg
sbb
mov
jnp
sub
nopl
rcrl
or
xchg
dec
adc
fwait
or
cmpl
pushf
call
jg
push
orl
mov
cmpsb
imul
fs
mov
xchg
sbb
mov
jle
pop
mov
shl
jne
mov
cmpsb
jg
data16
cmc
or
gs
xchg
mov
scas
cmp
test
fidivl
cmp
stc
sub
cli
or
call
es
rcrl
sbb
mov
cmpsb
lds
or
outsl
sbb
punpcklbw
leave
call
andl
sti
hlt
leave
add
push
and
fldt
insb
xchg
mov
mov
int3
adc
mov
out
mov
mov
sub
jecxz
jmp
and
adc
clc
into
xchg
cmpsl
xor
or
imul
ficomps
add
test
subb
mov
xchg
mov
imul
popa
je
cli
mov
mov
cmc
cld
ret
push
aaa
es
jl
adc
js
cmc
movsb
outsl
push
movsl
fxch
push
pop
cmp
jmp
pop
mov
fldcw
out
cmp
lret
jl
xor
xchg
cmp
mov
or
cmp
mov
ficomps
xchg
pusha
jle
out
mov
cmpsl
mov
and
dec
je
or
adc
mov
mov
or
xorb
cmp
pop
clc
movsb
or
test
mov
js
lea
jge
into
pop
pop
mov
ljmp
xor
fiaddl
lret
or
mov
dec
es
xchg
sub
xchg
and
xor
jl
cmp
cmp
push
fwait
pushf
cmpsb
pop
pop
fisubl
fwait
pop
xchg
cmc
mov
loope
mov
mov
push
add
push
and
jecxz
movsl
inc
fs
jne
push
js
mov
and
fsubl
nop
aam
mov
push
cmpl
into
and
jne
jns
dec
ret
and
popa
out
mov
adc
add
popa
int3
adc
and
into
test
cmp
jp
int3
jne
cmp
push
cmpsl
into
mov
push
mov
aas
sub
jmp
rsqrtps
jmp
mov
packuswb
inc
sub
mov
jb
or
push
jl
outsl
fisttpl
and
xchg
int
mov
cmp
push
imull
leave
das
push
cmp
les
lea
leave
movsb
push
es
sub
in
stos
out
cld
inc
fmull
cmp
movsl
push
das
push
pop
mov
cmp
out
mov
out
push
pop
or
mull
ljmp
pop
mov
sub
icebp
je
pop
stos
pop
in
sbb
cmp
clc
popf
frstor
lsl
insb
sbb
movsb
mov
lret
sbb
xor
xchg
out
andl
pop
movsl
push
push
sbb
cli
shll
in
pop
xchg
imul
gs
pop
loopne
lcall
neg
ror
lcall
push
out
dec
js
xchg
scas
ret
insb
outsl
xchg
dec
push
pop
mov
xchg
arpl
add
fwait
mov
addb
out
mov
lahf
mov
sbb
ret
cmpsl
test
adc
mov
mov
or
aaa
out
or
pop
pusha
scas
js
mov
sub
jae
pop
shll
in
or
insb
mov
inc
jl
inc
push
lods
cmpsb
push
inc
xor
lret
popa
dec
in
loopne
jl
push
sub
mov
pop
imul
aaa
and
push
mov
add
mov
push
ss
imul
addl
fnsave
lock
jbe
shll
sub
mov
fldcw
jne
or
sbb
mull
push
lret
daa
or
sti
mov
sub
rcll
rclb
lret
inc
fildl
lea
inc
test
mov
dec
mov
add
mov
xorl
ljmp
imul
jl
icebp
out
popa
movsl
cli
cmpsl
inc
mov
mov
cmpsl
movsb
pop
stc
out
fisttps
mov
and
das
mov
mov
mov
mov
jne
scas
mov
sbb
mov
pop
daa
lods
mov
insb
cli
pop
push
dec
mov
popa
cmp
cmp
ljmp
or
inc
pop
adc
sti
test
lcall
pusha
push
lret
in
les
adc
pusha
mov
cmp
adc
icebp
or
dec
loope
mov
adc
and
leave
out
call
mov
mov
jmp
lods
pop
inc
aad
mov
mov
xchg
push
fwait
leave
pop
std
cmpsb
sub
jp
mov
cld
gs
mov
gs
loopne
dec
ret
sbb
mov
repnz
outsb
xchg
jno
mov
mov
jne
mov
mov
xchg
out
in
mov
lahf
cltd
fwait
das
iret
cmpsb
cmp
movsl
adc
out
movsl
insl
mov
stos
sbb
mov
adc
in
mov
int
push
or
fwait
push
push
fwait
inc
fs
sub
idivb
imul
cmp
jo
enter
aaa
mov
data16
mov
cmp
repz
mov
sti
jl
dec
aas
out
mov
sar
in
gs
pop
outsb
lret
or
and
sub
insb
into
cmp
int
loop
pop
sarb
mov
jmp
pushf
adc
adc
cmp
push
push
leave
add
mov
sbb
cmpsb
daa
into
push
cli
es
loope
mov
and
adc
jo
dec
stc
lret
mov
mov
fdivrp
daa
ret
sti
leave
add
xchg
out
ret
imul
enter
mov
mov
daa
cmpsb
mov
mov
and
or
or
mov
dec
ss
movsb
or
stos
xlat
adc
inc
fidivs
mov
mov
push
or
iret
and
test
xchg
push
nop
add
fstps
xlat
out
and
add
aam
sub
mov
aas
sbb
insb
test
sub
xchg
in
in
cmpsl
daa
mov
dec
xor
shlb
and
fwait
mov
and
mov
cmp
lret
jle
insb
and
lret
add
lahf
sub
mov
sub
sub
mov
adc
pop
popf
push
push
out
mov
mov
dec
mov
mull
popf
outsl
jl
insb
inc
xchg
stc
dec
out
in
daa
loop
and
in
enter
repnz
or
iret
outsl
lds
test
or
mov
iret
mov
jmp
cmpsl
mov
cmp
imulb
jns
leave
data16
mov
mov
adc
sbb
xorl
inc
dec
adc
inc
leave
sub
cli
aam
in
add
mov
enterw
and
push
outsl
cmp
loopne
notl
cmp
mov
inc
pusha
xchg
add
and
ja
cltd
xor
mov
loopne
and
cmp
icebp
xor
out
push
mul
sub
mov
xchg
push
add
inc
ret
sub
cs
std
gs
testl
inc
push
jmp
mov
cmp
mov
cmc
cs
lret
jg
adc
push
jmp
test
loope
inc
popa
lods
and
popa
jae
lahf
sbb
ret
and
sub
jge
movsb
pop
test
push
add
mov
xorb
stc
dec
es
dec
shrd
and
es
ret
popa
out
scas
das
je
add
xor
mov
lcall
in
popf
xor
int3
push
out
mov
cld
fsubr
mov
push
add
sub
sbb
or
dec
inc
loope
inc
sar
xor
cmc
pop
les
xchg
pop
enter
push
mov
mov
scas
xor
fs
int3
mov
imul
mulb
mov
scas
push
shll
in
outsl
cwtl
sti
js
clc
into
out
enter
lea
insl
push
cmp
push
jbe
jmp
jp
pop
jns
mov
cltd
fisttps
lahf
ja
fdivrl
mov
mov
sbb
jae
lods
sbb
cltd
mov
rorb
adc
jne
imul
js,pt
test
jae
ljmp
xchg
jbe
mov
sbb
mov
xor
xchg
add
jb
leave
fimuls
pusha
mov
sub
lret
popa
xlat
push
xchg
into
mov
jl
push
sbb
stos
jae
jp
lods
outsb
data16
jae
mov
fcmovne
add
imul
test
shlb
out
pop
mov
mov
xchg
pop
faddp
popa
test
into
adc
inc
idiv
or
lahf
leave
pop
int3
inc
mov
bound
add
aas
or
cmp
push
in
in
mov
fwait
mov
sti
sub
adc
sub
ljmp
jmp
imul
addr16
push
push
cmpsl
xchg
lret
lods
cmp
leave
outsb
mov
ds
cltd
inc
cmpsb
notb
aas
sarb
cltd
cmc
cmpsl
xor
or
sub
cmp
mov
addr16
das
mov
cltd
test
mov
jno
insb
inc
xchg
xchg
or
fstps
fnstenv
mov
inc
jp
frstor
in
or
push
ljmp
dec
sbb
dec
js
bound
xchg
xlat
or
ds
orb
icebp
push
fildl
aaa
jl
xchg
push
into
lret
mov
mov
mov
jmp
mov
test
test
pop
cmp
cmp
dec
jecxz
mov
stc
in
sub
push
mov
dec
add
out
enter
fistl
hlt
pop
les
sub
pop
sub
mov
xor
cs
mov
ss
idiv
lahf
sub
cli
xchg
mov
xchg
add
rcr
xchg
shrl
xchg
xor
mov
dec
dec
ja
mov
roll
stos
cmpsl
enter
dec
es
negb
in
pop
test
adc
sbb
dec
push
ja
and
mov
sbbb
jmp
out
shlb
scas
fimull
out
in
fnstsw
cwtl
es
repnz
pop
inc
mov
push
mov
loope
pop
out
mov
dec
enter
mov
loopne
icebp
and
jo
mov
imull
mov
jmp
or
sub
popa
lret
mov
jl
div
sbb
mov
or
mov
test
push
push
cmp
mov
and
fcmovne
cmp
xlat
lret
pop
push
addr16
mov
mov
or
jmp
and
xchg
mov
fwait
jl
int3
aas
dec
out
pusha
insl
fisttps
adc
mov
fcoms
mov
pop
sbbl
dec
ror
push
lcall
sub
pushf
scas
fdivrs
or
out
and
and
jne
aas
mov
fadds
sbb
int3
and
imul
jae
ljmp
enter
sub
mov
cmp
lds
out
dec
insb
jnp
sub
pop
dec
les
mov
out
movsl
out
icebp
pop
aam
insl
cmp
adc
loopne
cwtl
push
pop
scas
mov
push
sub
jb
mov
mov
fidivs
mov
popf
mov
test
mov
mov
test
nop
push
stos
stos
mov
sahf
ficompl
fs
orl
ficomps
mov
and
adc
shlb
test
pop
popf
mov
fildll
scas
outsl
out
mov
jmp
or
rolb
mov
and
arpl
in
loopne
sub
xchg
daa
sbb
mov
imul
test
enter
jg
sub
dec
into
and
mov
or
in
fsub
ret
loop
xchg
mov
lea
jp
into
sarl
xchg
cmp
inc
xchg
mov
cli
adc
fdivrl
push
rorb
sub
mov
mov
js
and
dec
nop
mov
divl
xchg
movsb
ja
rolb
mov
jge
inc
mov
in
lret
push
and
mov
push
sbb
mov
pop
add
jl
mov
int
sub
xor
pushf
jl
xor
mov
adc
dec
das
incb
xchg
into
mov
mov
in
lcall
mov
out
push
into
jns
aaa
mov
add
jge
test
or
xchg
cmp
xchg
push
and
sub
ret
push
test
test
mov
pop
mov
addr16
pusha
ds
mov
lods
lds
mov
sub
test
in
lret
cmpsb
jmp
dec
mov
mov
lock
inc
bound
mov
outsl
out
mov
div
stos
punpckhbw
sub
mov
dec
cmpsb
xchg
call
jl
add
mov
pop
cmp
cmp
jnp
data16
xor
dec
mov
or
in
jnp
into
loopne
lea
fistps
cmp
mov
mov
push
xor
mov
in
repz
cs
ds
sbb
stos
cmp
daa
pop
push
mov
leave
divb
leave
ljmp
outsl
sub
mov
push
mov
test
cmp
xor
pop
push
fs
test
mov
rorl
sarb
test
push
icebp
fwait
insl
mov
rorl
mov
jl
mov
addr16
sbbb
add
inc
cmp
call
mov
es
hlt
in
or
fucom
lcall
aam
aaa
fisubs
cld
xchg
mov
test
cld
dec
movups
aaa
fmul
sub
notl
push
popf
arpl
xor
cmp
cli
jnp
cmpsb
push
andb
cmc
xor
mov
mov
xor
popa
scas
mov
push
mov
mov
push
xor
leave
pop
xor
les
push
sahf
dec
xor
popl
mov
movsl
sub
movsl
jecxz,pn
xchg
mov
cmpsb
mov
jl,pn
xlat
push
test
mov
xchg
pop
addr16
fstps
inc
inc
jo
rcll
ljmp
or
adc
mov
dec
push
fimull
or
mov
xchg
dec
js
jmp
cmp
sbb
xor
cmpsb
adc
js
out
xchg
inc
or
adc
dec
dec
sub
push
cltd
inc
mov
or
hlt
sbb
lret
or
mov
enter
shll
xor
je
ljmp
mov
jle
or
mov
in
int3
sbbb
ds
cmp
mov
sahf
loope
push
xlat
hlt
stc
cmp
dec
jge
fimuls
mov
fs
push
sti
dec
cmpsl
jg
mov
out
jl
mov
and
jns
sbb
inc
lods
js
fmull
or
push
data16
cmp
test
or
dec
lret
mov
std
mov
lret
xchg
jne
lret
iret
movsl
sub
scas
divl
loop
mov
ss
inc
popa
xchg
mov
cld
push
xlat
sbb
push
sbb
dec
daa
hlt
mov
into
popa
mov
enter
cs
adc
and
ret
mov
cmpl
out
jecxz
or
mov
mov
or
int
sub
mov
inc
adc
test
ret
push
sub
movsl
aam
in
pushf
sbb
adc
xchg
mov
das
lret
add
push
pop
out
fistl
cltd
push
daa
xchg
inc
mov
inc
mov
outsb
jle
rolb
lds
mov
loopne
iret
and
in
cld
out
add
stc
sahf
in
jns
aam
dec
cmc
mov
js
out
xchg
sub
js
push
jns
mov
jmp
stc
into
outsb
stc
lods
mov
cs
imul
mov
clc
mov
into
ret
imul
fmuls
xor
sbb
jbe
and
lods
and
xchg
jnp
push
ds
cmpsl
inc
movsb
mov
sub
sti
jne
jl
testl
sub
cltd
pusha
jne
xchg
xor
enter
out
lods
pop
orl
movsb
cmpsb
xor
ja
pop
ret
cmpsb
lods
jl
aad
stos
stc
test
xchg
and
xor
int
cmc
cmpsb
test
lds
dec
mov
andb
push
pop
or
stc
lods
mov
fcoml
sub
dec
clc
dec
in
into
cmp
push
aas
sub
in
repz
add
test
jl
nop
cmp
stos
pop
out
imul
jg
rclb
ss
xor
mov
cmpsl
stos
pop
sub
inc
inc
mov
mov
insb
icebp
or
rolb
sarl
cmp
xchg
int3
xchg
test
out
adc
lods
sbb
sti
xchg
loop
jae
aam
jae
je
xchg
mov
dec
movsl
nop
iret
xchg
pop
aaa
outsl
les
outsl
ds
jmp
movsl
pusha
adc
mov
test
call
cmp
lock
repnz
orb
cltd
jl
cmp
mov
aaa
mov
sahf
mov
add
jne
cmc
and
pop
or
sub
movsb
js
mov
and
negb
call
mulb
inc
mov
sti
mov
lds
push
xor
addr16
arpl
loope
sbb
jge
hlt
add
movsb
xchg
sub
aaa
into
fists
jl
lcall
test
or
mov
nop
imul
aas
sti
inc
sub
loope
mov
lahf
cmp
in
mov
mov
jl
or
out
dec
push
adc
mov
jae
jae
ret
stc
mov
sti
cs
cmp
std
mov
jmp
jle
idivb
mov
sub
mov
leave
mov
mov
stos
fs
pop
adcl
nopl
dec
sub
and
push
mov
stc
ret
gs
cmp
and
and
in
mov
shlb
fstpt
and
lods
add
or
aam
mov
shlb
js
push
int
addr16
pop
call
mov
adc
or
cmp
insl
data16
adc
xor
insl
adc
and
enter
loope
push
inc
or
aad
push
int3
pusha
stos
pop
lret
stos
push
jg
sar
jl
pop
mov
mov
jmp
sub
xchg
dec
dec
jmp
outsb
in
andl
jbe
fstps
out
shrb
loope
bound
adc
loop
or
ja
ja
dec
pushf
pop
mov
sarb
aad
sbb
int
es
arpl
inc
mov
mov
movsb
jp
mov
or
enter
aad
stc
into
dec
sub
adcl
insb
sub
xor
or
pop
mov
adc
push
cmp
xchg
add
pop
jl
sbb
push
xor
push
test
or
gs
test
mov
xlat
pop
fistl
loopne
popa
lcall
in
test
popa
int
mov
stc
jae
sbb
movsl
push
xor
xor
enter
lcall
mov
loopne
test
cli
dec
push
xor
in
pop
pop
mov
loopne
arpl
mov
add
jne
adc
call
jecxz
jp
push
jmp
fdivrl
outsb
push
cmp
mov
outsb
popa
dec
xor
adc
aas
mov
xchg
jmp
daa
enter
push
iret
sub
xchg
jg
xor
repnz
pop
xor
dec
test
lahf
xlat
adc
loope
imul
clc
aam
mov
jl
fcmovbe
cs
mov
out
or
into
mov
push
add
push
adc
sub
aaa
or
jno
lret
das
enter
mov
movl
std
out
cld
mov
add
sbb
cmpsb
popf
sub
mov
imul
pop
jae
enter
jnp
fnstcw
mov
lods
fstpl
mov
testl
jbe
mov
jb
cs
fnstsw
mov
mov
adc
into
rorb
adc
adc
add
jnp
or
hlt
cmpsl
sub
mov
push
pop
decl
mov
mov
xor
leave
dec
mov
mov
in
cmp
xchg
mov
bound
adc
lea
and
stc
pop
pusha
inc
not
test
jb
sbb
neg
in
test
jnp
mov
testb
mov
jb
push
pop
lcall
stos
cmc
ret
cltd
ffree
fstpt
jne
int3
iret
stos
nop
mov
lods
clc
popf
popa
gs
sub
sti
jecxz
mov
sbbb
in
or
mov
bound
mov
or
xchg
jne
xchg
sbb
scas
pop
scas
pop
xor
inc
mov
or
ljmp
sbb
fildl
inc
xchg
inc
popf
bound
or
mov
mov
fcomip
xchg
lret
leave
aad
push
repnz
mov
jne
mov
mov
negl
pop
test
pop
loopne
pcmpeqd
aad
cmovae
aad
pop
sub
shrb
cmpl
xorl
shr
orl
push
cmp
ja
push
leave
movsl
mov
mov
mov
add
ljmp
mov
bound
into
inc
aam
jae
jmp
int
cmp
movsl
int
fmull
rcrb
inc
nop
outsb
mov
shr
movsb
jbe
xlat
mov
xchg
mov
mov
fsubp
or
test
cmpsb
mov
or
scas
sbb
add
pop
mov
jecxz
in
daa
mov
push
cli
sahf
mov
inc
aaa
sub
fwait
out
mov
xor
xchg
cmp
and
int3
imul
sub
push
push
sahf
cmpsb
pusha
pop
popf
lea
or
push
test
xor
sub
xchg
fisubrs
shl
cli
xor
arpl
enter
xchg
and
es
lods
push
cs
in
xchg
jnp
sbb
std
cmp
lock
leave
cmpsl
movsb
pop
cmpsl
test
das
in
sub
mov
push
mov
cmp
jmp
inc
out
in
cmpsl
dec
or
mov
loop
mov
jg
cmp
fimuls
mov
cmp
int
lea
mov
test
or
popf
pop
sub
lcall
mov
addl
int
sarb
push
mov
mov
mov
sbbl
call
push
mov
push
out
cmp
lds
pop
icebp
cmp
or
push
push
mov
mov
icebp
data16
mov
xor
lcall
mov
mov
fnstcw
leave
pusha
enter
add
add
sbb
xchg
addr16
cmp
loop
leave
adc
xchg
dec
push
adcb
mov
lea
mov
and
xchg
jo
mov
fnstcw
pusha
push
add
xchg
ss
cmc
or
mov
jb
inc
ret
movsl
aas
lock
js
dec
adc
aam
push
jg
jns
xchg
pop
pop
mov
jl
lods
push
dec
in
sub
push
or
mov
clc
stc
sbb
mov
mov
sub
cmpsl
inc
cmp
mov
cmp
mov
test
inc
out
or
movsl
or
in
inc
mov
pop
cmpsb
or
fimuls
enter
or
jle
insb
ljmp
sub
inc
js
test
pop
imul
sub
mov
sub
mov
and
ljmp
xor
loopne
and
test
push
loope
cmp
stos
mov
or
cmp
or
jp
mov
cmp
es
adcb
mov
stc
movl
ljmp
xor
and
stos
xchg
lret
nop
mov
out
in
xchg
pop
mov
imulb
cmp
xor
mov
adc
scas
push
scas
mov
lds
jmp
mov
loope
push
cmpb
adc
mov
sbb
fmull
icebp
lods
cmpsl
adc
mov
push
gs
ret
mov
mov
pop
rol
or
xchg
pop
xlat
jecxz
and
loop
repnz
xchg
int
push
cmpsb
add
push
mov
sub
in
mov
lret
sbb
cmpsl
or
pop
insl
inc
mov
pop
mov
push
mov
scas
cmpsl
ljmp
cmp
xor
jb
sub
pusha
pop
mov
xor
movsl
pop
popf
mov
sbb
push
sub
movsb
cmp
int
sbb
iret
popa
mov
push
sbb
ss
and
cmpsb
push
sub
jnp
and
test
mov
pop
nop
xor
data16
cmpsb
aam
movsl
lret
add
push
int
xor
imul
mov
push
add
inc
nop
sub
pop
cmpsl
mov
sub
iret
mov
fwait
jle
imul
cmpsl
ds
sbb
cmc
test
sub
mov
test
add
mov
sub
icebp
rcrl
hlt
add
test
mov
sub
addb
add
add
jnp
jnp
popf
sub
jmp
icebp
push
mov
sbb
ret
aam
or
xor
mov
cmpsb
pop
mov
cmpsb
test
scas
daa
jns
push
popa
andb
cmpsb
ljmp
insl
jno
mov
loope
cmp
jns
test
gs
aad
andb
mov
sbb
xor
mov
jecxz
fldt
cmp
xor
fidivl
lods
and
sub
fistpl
mov
scas
mov
dec
aad
test
addr16
shlb
inc
cs
hlt
in
test
xchg
enter
out
movsb
test
mov
push
rcll
or
dec
orb
mov
and
sub
push
scas
mov
loop
mov
xor
push
and
xchg
mov
and
xchg
ret
sub
aam
sub
lcall
insl
fs
sub
aaa
or
pop
push
std
xchg
cmpsb
and
mov
das
jnp
xchg
mov
aad
adc
add
sub
rol
xor
cmp
mov
movsl
cwtl
cmp
mov
mov
pop
sti
lret
mov
add
mov
sbb
push
loope
nop
mov
outsl
ja
out
jg
push
add
mov
cmpsb
lret
negl
addr16
and
mov
es
shlb
imul
lods
jl
pop
andb
ficoml
mov
ja
cmp
xor
xchg
cmpsl
mov
push
loop
mov
jae
test
sbb
adc
aas
fidivrs
cmpb
dec
fistps
sub
cmpsl
in
dec
das
sbb
mov
mov
cli
mov
inc
jbe
stc
mov
add
add
mov
test
cmp
or
and
sbb
mov
mov
mov
mov
push
movsl
outsl
fisubs
out
mov
and
mov
push
cmpsl
fisttpll
jl
movsb
cmp
pop
std
push
sub
jge
lea
adc
or
or
rclb
movl
sbb
iret
mov
insl
sub
movsl
xor
sub
xchg
scas
aam
lret
gs
push
lahf
mov
daa
mov
or
test
mov
fsubs
insl
cmpb
and
and
sub
cmpsl
movsb
cli
in
leave
int
loop
dec
and
add
outsb
cwtl
cmp
and
insw
jmp
mov
enter
push
adc
pop
stos
pusha
push
sub
adc
or
mov
mov
out
dec
sub
push
mov
dec
insl
mov
pop
sub
popf
pop
cs
lods
jl
add
ss
inc
test
xchg
push
jecxz
leave
mov
test
xor
mov
mov
in
xchg
adc
scas
mov
and
pusha
scas
mov
mov
cmpsl
mov
testl
ja
push
mov
xor
aaa
mov
mov
or
es
test
clc
divl
movsb
inc
cmpsb
daa
pop
mov
es
mov
mov
addr16
inc
enter
push
sub
scas
jae
sbb
aas
ds
cmpsl
mov
and
out
dec
lret
mov
shlb
push
stos
mov
rcrl
nop
out
sbb
sbb
in
xchg
test
cltd
sub
es
arpl
cmp
rcr
in
sti
loope
adc
icebp
cmp
xchg
repnz
in
mov
fs
cmp
out
movsl
mov
call
icebp
mov
ficoms
aad
push
into
mov
sub
mov
sbb
shrl
dec
mov
aad
test
test
or
out
gs
mov
cmp
adc
adc
loopne
jecxz
leave
inc
dec
pop
and
addl
ljmp
mov
leave
insb
mov
push
mov
push
pop
in
imul
mov
pop
mov
test
popa
push
xchg
mov
dec
stos
sub
fisubs
shrl
xchg
and
pusha
adc
cmpsb
shr
outsl
mov
shl
mov
stc
aas
add
push
mov
icebp
sbb
jg
xchg
add
subl
mov
or
loop
mov
les
cmpl
inc
sub
mov
sub
inc
das
and
jge
sti
xchg
jmp
mov
mov
xchg
test
mov
mov
pop
or
mov
dec
sti
mov
neg
daa
leave
cmpsb
imul
pop
inc
flds
mov
mov
cmp
mov
fwait
ds
sbb
mov
jno
test
js
pop
out
mov
in
mov
call
repz
mov
adc
cmpsb
mov
fldt
sti
mov
out
sti
mov
add
push
cmp
xchg
out
ss
in
test
dec
xor
cmc
and
cmpsl
dec
call
push
mov
inc
shll
mov
xchg
jl
push
push
dec
int3
xchg
mov
inc
movsb
outsl
inc
out
mov
dec
aad
mov
mov
lcall
or
cmc
push
xchg
andl
xlat
std
mov
mov
dec
pop
pusha
loop
mov
pop
pop
test
xchg
inc
lods
dec
test
xor
mov
out
andl
mov
cmp
inc
pop
out
into
dec
fdivr
test
inc
mov
and
push
cmp
lods
cmp
daa
mov
cmp
mov
cmpsl
pop
push
xor
mov
ror
ss
mov
xchg
sbb
cmc
and
mov
xchg
das
inc
mov
out
xchg
stos
jns
mov
fstpt
xor
jmp
popf
xlat
nop
sbb
inc
adc
mov
sub
loopne
add
mov
inc
pusha
mov
ficoml
sub
in
out
ss
push
mov
lret
xchg
andl
addr16
jle
and
sahf
xchg
aam
mov
iret
int
push
xchg
mov
add
movsl
test
mov
jmp
sub
mov
lret
hlt
mov
jnp
int
mov
or
lahf
test
dec
movsl
push
aas
popl
sub
sti
scas
in
adc
and
adcl
daa
leave
notl
sbb
mov
inc
mov
lods
cltd
jnp
and
movsb
stc
and
int
push
sub
ja
arpl
cmpsl
rcl
ds
push
enter
ljmp
test
daa
pusha
pop
push
jmp
dec
push
lahf
ljmp
sbb
scas
lret
jne
inc
jmp
sbb
cmpsl
cmpsb
aas
adc
xlat
xor
pop
outsl
sub
hlt
inc
mov
adc
icebp
rorb
aam
mov
fsubs
adc
mov
or
dec
int3
and
cmp
das
jecxz
int
aad
mov
jge
loopne
aad
ljmp
std
cmpl
jecxz
lea
jae
enter
shl
test
sti
xchg
loop
cmpsl
xchg
scas
repz
in
ljmp
shll
loop
loope
sub
jg
cmp
sbb
cmp
cltd
ja
add
add
leave
mov
jnp
js
mov
fnsave
popf
jp
mov
shlb
fdivrl
aam
test
and
sahf
cmp
dec
test
cmpb
cltd
repnz
push
sti
out
pusha
mov
add
gs
inc
add
out
adc
ljmp
mov
int3
cmpsb
mov
mov
imul
jmp
outsl
pusha
sbb
adc
imul
mov
test
aam
inc
mov
cmpsb
sbb
adcl
or
aam
or
les
in
dec
ret
lret
into
stos
mov
inc
jle
sbb
out
jnp
out
loop
mov
push
and
loope
or
repnz
mov
jmp
fidivs
hlt
inc
aad
repz
mov
jne
sar
jbe
push
mov
cmp
cmp
mov
subl
in
adc
mov
mov
mov
cltd
sub
sbb
xor
enter
arpl
aad
popa
lods
sub
lcall
cltd
sub
sbb
mov
scas
mov
lret
xchg
push
xor
int
fisubl
outsl
or
daa
fstpt
lret
out
xchg
std
jl
add
roll
imul
in
sub
sbb
push
mov
push
jmp
adc
mov
ljmp
in
gs
mov
mov
cmpsb
jne
stc
out
xor
es
out
pop
nop
sahf
sub
sub
leave
mov
adc
fs
addr16
jecxz
push
inc
outsl
ror
imul
enter
mov
mov
and
stos
push
iret
in
sub
mov
and
push
in
nop
sbb
call
push
mov
push
mov
or
xor
cs
or
add
test
ds
jo
out
mov
adc
sub
loope
out
mov
test
add
sub
movsl
cld
mov
test
jns
js
mov
xchg
mov
ja
stos
mov
leave
fnstsw
jge
lret
idivb
jmp
mov
or
es
mov
dec
sbb
stos
sub
test
mov
pop
or
test
in
out
push
xor
inc
outsb
sbb
aaa
ret
loop
mull
nop
imul
inc
lods
inc
and
pop
ljmp
mov
cmp
mov
mov
and
insb
call
mov
enter
dec
cli
mov
jne
jmp
jp
sub
push
mov
dec
or
push
je
xor
adc
jae
cli
into
adc
stos
js
movsl
jmp
fs
push
iret
jne
fistpl
dec
and
aam
mov
xchg
ljmp
xlat
jo
mov
cmpsb
mov
cmp
add
scas
loope
lcall
je
mov
das
xchg
adc
sarl
add
arpl
out
imul
mov
sub
sbb
gs
psadbw
sub
cmpsl
xchg
mov
adcl
js
mov
dec
inc
lds
and
xor
jbe
pop
ret
ljmp
push
ss
mov
xchg
xchg
mov
bound
jo
bound
in
sbb
sahf
cltd
dec
jae
jp
xchg
cltd
and
test
push
push
into
sub
movsb
push
call
lahf
jmp
inc
test
dec
jne
inc
jnp
jg
mov
mov
push
cmpsb
inc
sbb
and
mov
mov
jno
insl
out
rcll
push
jo
xchg
fwait
iret
fldt
lds
into
dec
mov
repnz
pop
xchg
jmp
mov
push
dec
pop
dec
out
mov
push
dec
repnz
mov
or
int
cmp
or
xchg
leave
mov
mov
cmpsl
loope
lods
int3
inc
test
test
dec
cli
aaa
mov
jmp
mov
mov
and
insl
mov
fcompl
xorl
pop
adc
popl
jmp
mov
mov
test
pop
cmpsl
fmuls
mov
flds
pop
sub
fcomps
jp
and
sbb
stos
mov
dec
cmp
decb
mov
subb
mov
insb
lds
xchg
flds
out
lret
test
test
mov
lahf
lods
lret
into
jl
jo
lahf
scas
cmpsl
mov
mov
sub
lahf
arpl
movsl
imul
lods
dec
jp
jmp
loopne
cmp
xchg
pop
sub
les
mov
inc
dec
cmpsb
pop
sbb
dec
inc
int3
lcall
cmpsl
enter
sub
addl
fwait
mov
push
test
xor
push
rolb
or
js
and
cmc
cmpsl
or
ss
aam
push
jmp
cmc
shll
sbb
cmpb
in
mov
sub
xor
popf
jne
sub
lds
dec
in
cmp
enter
sbb
into
xor
jne
out
not
add
inc
imul
xor
cmpsl
icebp
xor
popa
xchg
jne
mov
mov
xor
in
push
mov
jl
fcompl
mov
es
add
mov
inc
xor
xor
inc
out
testb
xchg
cmp
mov
jmp
ss
push
pop
roll
xlat
mov
xchg
test
and
inc
pop
out
sub
push
lock
rclb
dec
scas
pushl
xchg
sub
fldcw
mov
bound
adcb
push
test
push
inc
jne
loop
mov
popf
jmp
jnp
mov
fcmovnu
xchg
test
aas
insb
mov
and
add
cmp
fwait
push
js
ja
sbb
sahf
or
sti
enter
xchg
mov
sbb
cmc
fs
movsb
stc
xor
mov
jecxz
ret
bound
jmp
leave
lret
nop
mov
dec
mov
push
js
xchg
sub
popf
jg
cmpsb
fidivs
sahf
ret
dec
iret
jmp
rorb
jecxz
dec
aam
fsubr
pop
sub
repz
repz
loopne
and
xchg
shlb
mov
cmp
pop
xchg
shlb
das
icebp
mov
and
dec
sbb
jmp
lret
punpckhbw
dec
and
jecxz
int
hlt
and
cli
in
push
lods
fldcw
jns
popf
inc
sbb
sub
fwait
adc
add
pop
icebp
and
add
inc
lret
ja
into
xchg
hlt
les
push
mov
sbb
je
inc
das
and
sbb
push
loope
cmp
mov
mov
ljmp
sub
and
aad
je
jns
xchg
mov
mov
xor
push
or
pop
cmpsb
push
pop
nop
test
movsl
sbb
xchg
popa
pop
jae
ds
cmc
repnz
xor
mov
fnsave
loopne
out
loopne
jg
mov
inc
aam
jmp
cmp
subl
and
ds
ficompl
and
loop
pop
outsb
gs
and
xchg
leave
pop
js
andb
xchg
mov
mov
aad
in
fs
loopnew
jmp
and
mov
sbb
mov
mov
pushf
pop
push
jbe
out
mov
addr16
and
xor
xor
add
and
pop
mov
xchg
test
scas
push
jmp
xor
ss
mov
outsl
jecxz
movsl
test
leave
adc
inc
dec
mov
cmp
pushf
fidivl
fdivrl
pcmpeqw
pop
inc
mov
insb
or
cmpsb
jbe
push
lods
int
test
negl
sbb
fisubrl
mov
jbe
in
fwait
mov
jmp
jo
pop
aad
shr
repnz
sbb
mov
testl
jl
imul
and
stos
dec
push
inc
lock
sbb
lret
cmp
fwait
movsl
jmp
leave
movsb
adc
scas
mov
outsb
sub
mov
lods
or
popf
fnstsw
mov
push
cmpsb
mov
cmp
xor
jno
test
inc
test
cltd
jmp
mov
jnp
mov
dec
test
popa
and
and
mov
xchg
in
cld
mov
xchg
mov
dec
bound
cmp
mov
sub
jae
inc
rcr
mov
ja
cmp
push
cmpsl
in
scas
pop
cmc
aaa
cmp
mov
out
es
es
xor
dec
mov
test
stc
lret
inc
stc
loope
dec
sbb
cli
and
sbb
mov
pop
iret
shlb
imul
aam
outsl
movsb
mov
push
ja
dec
xor
pop
cmp
mov
pop
xchg
nop
ljmp
mov
mov
imul
add
scas
idivl
std
out
xor
outsb
jmp
cmp
mov
xchg
scas
in
mov
jmp
mov
adc
mov
mov
cltd
add
jle
orl
mov
sbb
mov
jmp
fnsave
sbb
cmp
jns
mov
pop
test
in
mov
push
mov
cmpsl
mov
repnz
cmc
das
inc
or
mov
mov
mov
shrb
jl
cmpsb
scas
mov
stos
into
mov
insl
jmp
es
out
jmp
lock
dec
cmpsl
negl
dec
cmp
dec
cmp
aas
mov
fisubrl
ret
push
xchg
sti
push
mov
push
loopne
xor
ss
movsl
sub
pop
arpl
sub
xor
stos
xor
pop
add
mov
out
push
jl
dec
icebp
or
sbb
out
in
xor
mov
into
xor
lods
in
clc
mov
loopne
push
push
pop
jns
sub
sbb
sub
mov
outsb
sarl
adc
loope
mov
mov
push
repz
xchg
movsb
sub
lret
jnp
test
pusha
scas
mov
pop
cmp
mov
sbb
xchg
dec
xor
lods
xor
repnz
xchg
push
cmp
mov
imul
stos
clc
xchg
xchg
sub
mov
addr16
mov
enter
xlat
or
gs
stos
mov
int3
and
and
test
leave
and
xlat
mov
push
mov
scas
xchg
scas
jp
cmp
cmc
pop
test
mov
enter
or
mov
xor
and
in
xor
jecxz
xor
loope
cmpsb
test
sub
cmp
cmpl
or
xor
cmp
leave
xchg
ja
mov
xchg
or
xchg
std
cli
pushf
push
push
loope
mov
mov
push
mov
cmp
mov
mov
out
popa
rcr
and
and
js
cwtl
jge
popa
lods
jmp
and
hlt
mov
xchg
sbb
jg
cli
rorl
cwtl
xchg
pop
mov
mov
sahf
je
hlt
xchg
gs
mov
outsl
or
loopne
in
mov
daa
out
sbb
mov
mov
fnstenv
scas
test
imul
pop
and
test
shrb
fcoml
mov
cmp
jg
mov
xor
enter
push
dec
dec
cmp
shll
xor
movsl
cld
out
pop
cmp
lea
insb
lret
dec
popl
or
sub
jmp
jno
scas
jmp
into
fsubrp
sar
lods
mov
test
and
clc
fildl
ljmp
xchg
mov
repnz
xchg
test
lret
sar
mov
mov
mov
enter
mov
imul
loopne
mov
mov
push
sub
dec
mov
ret
into
cmpsb
mov
sbb
nop
or
cs
lahf
sub
and
stos
jg
xor
xor
clc
fstpt
arpl
xor
add
testl
cwtl
mov
mov
ljmp
xchg
pop
lods
mov
push
in
ds
push
fldenv
daa
push
insl
xchg
xchg
xchg
mov
xor
test
mov
pop
sbb
mov
shll
cmp
cmpsl
cmp
mov
xchg
mov
js
and
fdivs
adc
jmp
sub
jae
and
shll
in
int3
mov
jns
xchg
in
dec
es
ljmp
out
sahf
sbb
cmpsb
lods
es
sti
mov
aam
xchg
fldenv
out
dec
mov
pushf
lret
jecxz
shll
cli
sub
jle
mov
iret
mov
xchg
cmp
jge
pop
and
mov
jmp
aam
movsb
test
mov
lret
mov
subl
lock
mov
insl
stc
sahf
push
cwtl
xchg
sbb
cltd
daa
stos
add
mov
js
push
sti
test
shll
jae
fs
xlat
and
mov
adc
pop
hlt
cwtl
mov
pop
enter
push
sub
jp
or
jns
test
call
adcl
loop
or
test
xchg
and
fs
xchg
pop
inc
xor
push
jae
dec
pop
cmp
jecxz
xor
mov
xchg
cmp
xor
nop
pusha
data16
inc
or
cmp
mov
sub
js
pop
popa
inc
ss
in
sub
add
sti
enter
mov
or
add
dec
and
mov
cmp
fisttps
cmpsb
loop
stc
ret
sub
and
mov
ljmp
ds
and
stos
mov
sti
aad
aas
push
leave
mov
fiaddl
sub
sub
aas
mov
mov
lret
repnz
data16
cmpb
cld
inc
in
test
movsl
push
xchg
out
cmp
setbe
sub
jne
sbb
int
ret
movsl
pop
pop
xor
out
xor
mov
hlt
sub
popl
pop
dec
dec
in
popa
lret
ret
test
out
xlat
mov
pop
inc
xchg
sbb
leave
cmpsl
iret
out
mov
xchg
cmpsb
aaa
xchg
or
arpl
cmp
mov
lods
mov
sar
mov
xor
lea
outsb
daa
loop
sub
jmp
lahf
gs
jmp
xchg
jmp
or
fwait
pop
mov
sub
sub
xchg
add
sub
or
jmp
imul
leave
jns
fistl
xchg
xlat
sub
jp
cmpsl
cmp
xor
mov
cmpsb
jae
sub
in
push
push
outsl
xchg
jmp
dec
push
xchg
ljmp
pushw
and
sbb
pop
pop
les
imul
inc
scas
iret
jmp
lea
lret
mov
sarl
mov
xor
mov
int
dec
andl
dec
mov
jne
jl
inc
mov
push
jbe
add
mov
test
inc
sub
sbb
sub
xor
xchg
cltd
mov
lahf
mov
or
fisubs
out
and
imul
test
sarl
cmpsb
les
int
into
imul
inc
mov
dec
leave
jae
jg
mov
push
lds
mov
and
mov
ss
ficoml
push
cltd
imul
loopne
push
inc
int3
aad
pop
cli
mov
mov
movsl
mov
lahf
push
pop
daa
dec
xchg
and
cmpsl
push
mov
out
ljmp
and
imul
mov
std
hlt
mov
cmpsb
test
cmpsb
push
in
mov
mov
call
push
sub
sub
xchg
add
cli
mov
sub
mov
add
sbb
lods
jbe
test
leave
mov
sarb
roll
mov
lcall
and
fcoml
and
push
jbe
mov
mov
jne
mov
mov
xor
inc
mov
enter
push
imul
je
xchg
pop
push
cmp
clc
sahf
loope
jp
mov
add
pop
cmp
sbbl
sti
sbb
mov
daa
cmpsl
cli
pop
mov
and
lods
adc
dec
cld
rcl
sti
and
lea
sub
cmpsl
into
sti
outsb
cmpsb
out
mov
push
fwait
cld
mov
push
lods
arpl
mov
imul
pushf
add
imul
lret
jno
scas
jmp
jmp
or
test
jnp
pop
xchg
xor
and
je
repz
hlt
in
mov
mov
pusha
sbb
cmp
add
fcoml
aas
or
idivb
mov
dec
pop
jp
jl
jne
adc
xchg
testl
int
inc
sub
sub
lret
shr
adc
pushf
orb
iret
pop
or
xor
mov
jne
mov
cmp
es
hlt
std
jne
xchg
rol
or
xchg
push
mov
mov
fnstcw
loopne
mov
cmp
adc
cmpsb
xchg
mov
xor
lea
dec
fcoml
in
sarl
std
cmp
cmpsb
insl
xchg
push
push
loop
icebp
aas
push
fcoml
jp
testl
dec
out
add
cmpsl
or
mov
xchg
lds
xor
stos
inc
push
jmp
push
or
jne
mov
and
jb
xchg
popa
icebp
mov
mov
mov
push
mov
push
jl
aas
pop
dec
push
mov
lods
lahf
push
lahf
xlat
mov
add
pop
test
xchg
loopne
nop
jmp
mov
sbb
cwtl
mov
add
cmp
nop
test
repz
lahf
pop
into
mov
ror
dec
mov
daa
mov
mov
outsb
leave
or
aaa
lea
ror
and
push
int3
out
out
leave
shl
popa
cmp
lret
xchg
test
std
and
mov
sub
mov
jb
lret
jbe
jecxz
inc
addr16
dec
jbe
mov
mov
test
imul
data16
adc
mov
into
call
lods
mov
ror
daa
xchg
mov
fdivl
cmp
mov
xchg
push
out
dec
fwait
push
fisttps
cmp
jno
pop
lret
cmp
jl
mov
mov
mov
cmpsl
enter
ljmp
movsb
into
xor
icebp
sbb
imull
xchg
out
sti
pop
cmp
imul
mov
pop
outsl
add
sahf
jl
fisubrs
icebp
sbb
cmp
testl
and
fmull
pop
lcall
nop
enter
xor
ja
bound
sub
test
push
hlt
into
cmpsb
lods
mov
insl
adc
and
xlat
jo
mov
pop
das
mov
iret
sti
push
mov
sub
and
dec
xchg
scas
lds
test
sbb
lods
jmp
lret
xor
icebp
ljmp
ljmp
stos
add
loop
imul
pusha
mov
movsl
cmpsb
int3
xor
xchg
sti
sbb
daa
repnz
xor
in
enter
pushf
xchg
sarb
pop
sub
adc
sbb
jo
sub
hlt
mov
mov
leave
lcall
push
rorb
or
jo
cmpsl
push
sub
sub
inc
xchg
push
jbe
cmp
jbe
cltd
fcoml
aaa
shl
jno
stos
jmp
into
negb
xchg
or
cld
xchg
enter
add
dec
cmp
ljmp
stos
push
fnstenv
cmpsb
jno
cmp
xor
arpl
mov
cmp
rcll
fsts
sahf
mov
les
jmp
and
xor
add
inc
cmpsb
mov
add
adc
lcall
outsb
mov
push
iret
mov
fisttpll
jmp
cmpsl
mov
js
sub
xchg
xchg
cmc
ss
mov
les
loope
es
sub
xchg
fisubrs
into
imul
cmp
mov
inc
mov
inc
movsb
sub
pop
adc
pushfw
pushf
sub
lcall
loop
xchg
sti
cmpsb
sahf
enter
and
negl
lret
hlt
test
ja
adc
stos
int
test
mov
and
leave
mov
mov
dec
test
or
pop
jo
lock
cmc
push
jno
shl
dec
adc
mov
frstor
xlat
ja
and
inc
xchg
sbb
test
mov
pushf
stos
pop
inc
push
testl
or
or
movsl
mov
stos
dec
ljmp
adc
notb
pop
ljmp
xchg
js
outsl
adc
pop
std
adc
scas
xchg
push
enter
imul
xor
clc
cwtl
clc
mov
and
imul
push
mov
inc
xchg
xor
nop
lahf
ret
xchg
test
mov
mov
lds
mov
dec
jb
sub
xchg
es
mov
add
jae
popa
mov
popa
xchg
adc
mov
jbe
jmp
lea
xor
mov
call
test
and
inc
shrb
xlat
mov
shrl
cmp
mov
inc
stos
sbb
xchg
mov
daa
imul
xor
push
push
push
movsb
insl
and
shlb
in
mov
mov
mov
cwtl
lgs
ss
sbb
sbb
repnz
popl
icebp
lret
cmp
mov
js
jecxz
xchg
xor
jo
xor
scas
cld
jbe
sbb
inc
cmp
cmp
aas
lcall
sbb
mov
jecxz
imull
push
mov
gs
popf
xchg
add
cmpsl
imull
xchg
dec
jg
aaa
mov
mov
cmp
jle
fisubl
pusha
pushf
ss
pop
cmp
aaa
mov
fsub
xor
mov
aaa
popl
cmp
rcl
jmp
gs
call
mov
sub
push
cli
leave
pop
cli
mov
fs
sub
cmpsl
roll
push
pop
fsubl
ret
jno
or
xor
or
stc
inc
sub
stos
test
mov
jns
push
jnp
out
test
cmp
cmp
and
jno
fsubrl
shlb
lea
and
mov
add
mov
mov
imul
inc
mov
cmp
jle
cmp
xchg
inc
hlt
cmpsl
mov
mov
mov
js
add
xchg
push
add
adc
sbb
ss
cmp
int3
push
test
roll
xchg
xchg
lds
lock
test
pop
dec
xchg
cltd
sbbb
mov
pop
and
ss
sub
sti
outsl
mov
adc
testl
or
scas
scas
mov
test
scas
out
insb
jmp
leave
sub
jae
vdivps
cmc
rcrl
arpl
js
xor
add
movsb
pop
add
or
dec
xchg
xchg
jae
cmp
sarl
clc
es
xchg
ss
cwtl
add
and
inc
push
mov
mov
xor
mov
mov
arpl
push
mov
pop
mov
mov
xor
rorl
fwait
adc
negl
lret
adcb
popf
push
mov
outsl
cmpb
loop
inc
mov
xchg
test
xchg
aas
sbb
test
jnp
ret
insb
push
xchg
xchg
lcall
adc
int
sub
mov
imul
iret
std
and
nop
sbb
pop
cmc
pop
xor
es
jle
cmp
imul
xchg
out
pop
xor
inc
push
mov
mov
mov
jns
test
push
gs
fistl
xchg
imull
xor
xchg
and
mov
jmp
outsb
push
in
dec
mov
mov
sti
push
jmp
mov
xor
lret
inc
mov
mov
out
push
std
jle
jae
mov
dec
mov
inc
xchg
jmp
xor
imull
mov
push
jge
cmp
sub
jns
mov
mov
fwait
sub
jne
repz
pop
mov
jp
adc
addr16
mov
repz
cld
cltd
std
mov
andl
or
xor
ja
int3
xchg
mov
jg
hlt
in
mov
xchg
sbb
mov
mov
imul
pushf
mov
orl
call
test
cmp
xchg
xorl
mov
jg
test
add
mov
and
mov
test
in
jl
jg
sub
mov
xchg
daa
inc
lods
mov
fistpll
mov
mov
cli
sbb
int3
pop
out
lcall
cmp
xlat
js
and
push
ret
mov
xor
stos
mov
cli
mov
xchg
mov
and
mov
and
inc
jae
mov
stos
mov
not
cli
out
fdivr
test
cld
mov
aaa
imul
int3
enter
leave
scas
movsb
jp
das
xchg
sahf
xorl
jnp
mov
cmpsb
pop
add
mov
mov
lods
jge
inc
xchg
or
push
sub
mov
je
adc
out
out
adc
dec
jge
popa
in
cmp
dec
xor
hlt
adc
imulb
fdivs
cmp
popa
cmc
ds
sub
mov
inc
orb
mov
mov
orl
int3
push
gs
lret
inc
outsb
iret
sub
jl
neg
lahf
imulb
fwait
cmp
leave
movsw
sub
cwtl
outsb
std
packsswb
in
cmp
mov
mov
jl
jmp
sub
mov
ret
mov
cmp
jp
mov
jbe
xor
cmpsl
sub
mov
sbb
dec
mov
pushf
mov
cmc
pop
jbe
adc
pop
fwait
sbb
fiaddl
fsubr
outsl
lds
daa
fwait
add
adc
adc
or
mov
add
and
jmp
rolb
dec
inc
push
xor
fwait
xchg
push
adc
xchg
cltd
push
mov
jl
or
out
lods
jg
out
testl
xor
nop
pusha
lcall
and
inc
arpl
pop
push
test
add
vextracti32x4
inc
fwait
add
mov
cmpsl
imul
jmp
fidivrs
stos
int3
sarl
scas
cmp
stc
ljmp
jge
xchg
and
leave
jo
inc
fmull
push
push
jb
sbb
popf
sbb
dec
fistpll
test
xchg
adc
jp
sarb
data16
inc
pop
inc
mov
mov
add
dec
js
jp
cmp
xor
xor
ss
jne
push
sub
and
jge
pushf
adc
inc
add
ret
dec
or
and
cmp
add
popa
pop
push
gs
pushf
fildll
mov
in
mov
add
cltd
test
add
push
xor
and
iret
imul
push
test
test
push
nop
mov
push
dec
push
repnz
test
mov
mulb
imul
and
mov
push
ds
jae
jmp
cmp
push
divl
aaa
in
push
loop
test
mov
mov
jp
and
clc
sub
cmp
inc
inc
insb
sbb
and
insl
xchg
or
fs
dec
stos
imul
cwtl
mov
pop
cmpsl
scas
pop
mov
jg
jle
sub
dec
int
leave
xor
aad
jl
mov
fsubrs
mov
mov
scas
hlt
adc
stc
dec
in
popaw
push
cli
push
jecxz
fs
std
and
in
sbb
xchg
push
popl
lods
xchg
fwait
out
das
sbb
and
jmp
outsb
cmp
cltd
mov
shrl
mov
xchg
inc
movsb
mov
pop
or
jecxz
jno
test
lods
imul
mov
repnz
lods
sbbb
imul
cmpsb
jg
and
mov
enter
inc
xchg
in
fistl
push
xor
addr16
repz
cmp
xor
dec
jp
sbb
mov
call
inc
xchg
xchg
or
xor
fstl
ja
filds
ljmp
in
mov
aaa
insl
sub
mov
mov
mov
dec
push
xor
xchg
clc
xlat
into
bound
out
jecxz
inc
add
into
mov
ljmp
push
adcl
out
mov
divl
push
outsl
cmp
pop
jae
repz
lods
lcall
mov
mov
jp
add
push
into
aas
and
outsl
in
mov
or
insl
mov
lret
xor
ret
and
mov
fwait
test
dec
jmp
lret
int
add
xchg
lahf
mov
inc
dec
rcrl
in
xlat
cmp
lods
fwait
stos
pushf
push
jae
mov
pushf
dec
inc
mov
adc
lds
adc
stc
cmpsb
mov
pushf
imul
adc
scas
insb
inc
cmpsl
mov
movsl
xor
or
mov
mov
lahf
sbb
push
mov
mov
inc
mov
imul
mov
out
cs
cmp
cltd
lcall
nop
mov
scas
cmp
cltd
xchg
or
jno
xchg
inc
idivb
xchg
mov
cmpsb
pop
xchg
shrb
push
ret
jns
xchg
out
pop
mov
ljmp
notl
rolb
shrl
push
jle
f2xm1
cwtl
shrl
push
sbb
push
pop
lds
bound
and
inc
outsb
ret
outsb
inc
leave
sarb
jno
test
arpl
dec
loop
in
push
insb
xor
mov
sbb
push
loop
push
shll
xor
sahf
xchg
cmp
faddp
mov
push
mov
pop
xchg
sub
mov
nop
int
andl
test
pop
or
lds
mov
sbb
out
add
stos
lea
bound
jg
lahf
inc
mov
xor
dec
mov
jb
lods
decb
test
roll
adc
cli
cmpsb
mov
pop
xor
test
mov
testl
or
lods
aas
xchg
push
and
mov
sbb
xor
leave
test
test
xchg
jae
in
ret
ficoms
cmp
shll
or
sub
dec
mov
jecxz
fidivl
nop
mov
cmpsl
cmp
ret
movsl
dec
jnp
dec
jns
int
fs
pushf
pop
push
pop
jmp
xor
mov
mov
or
mov
xor
xlat
enter
mov
pop
subl
jecxz
ss
xor
pop
lahf
inc
mov
test
cmpsl
and
stc
mov
sti
mov
sbb
int3
in
push
mov
lock
shll
test
push
mov
imul
ds
inc
cmp
out
movsb
inc
subl
bound
dec
xchg
sub
int3
rep
out
stos
test
daa
or
into
dec
scas
test
push
sub
fwait
call
or
dec
pop
push
gs
std
adc
mov
fdiv
xlat
cmpl
push
fcomps
fnstenv
cmp
jns
mov
es
out
push
pop
sub
push
mov
push
bound
jge
jg
adc
jnp,pn
pop
or
pusha
jbe
or
pop
or
in
test
lcall
filds
pop
add
cmp
cmp
addb
mov
shlb
jle
jl
pusha
aaa
xor
rorl
mov
adc
leave
ds
xchg
sub
sbb
xor
xor
xchg
sub
mul
mov
xchg
sbb
test
sbb
xchg
insb
push
or
cmp
fwait
mov
mov
sbb
and
test
and
jnp
push
loopne
sub
into
daa
movsb
xchg
inc
xchg
out
mov
mov
imul
xor
outsl
inc
in
cmpsl
pop
cltd
xchg
inc
push
pop
and
and
insl
lahf
out
fisttpl
test
sti
adcl
lcall
add
adc
scas
jl
into
xchg
xchg
or
int
jcxz
xchg
loope
in
loopne
insb
push
pushf
xor
mov
into
lret
add
add
jns
push
arpl
adc
mov
sbb
xchg
mov
xor
out
push
sahf
xchg
and
in
push
push
dec
xchg
jl
shl
cwtl
aaa
fbld
xchg
mov
lea
mov
rorl
in
pop
xchg
fmul
sub
add
mov
ja
cmpsb
loopne
push
jecxz
jp
cltd
jmp
out
mov
loopne
xchg
dec
cmp
mov
jg
xchg
ljmp
xchg
and
out
loope
xlat
movsb
mov
les
cld
lahf
mov
cmc
or
repz
leave
sbb
subl
fdivl
mov
in
pop
cmp
test
loopne
aam
push
xchg
sbb
xchg
hlt
xor
jecxz
cmp
arpl
iret
mov
lcall
push
pushf
or
sbb
dec
cmc
dec
pop
cltd
cmp
ja
lret
aad
push
in
mov
scas
jno
mov
fcmovnb
cmpsb
test
and
mov
sti
scas
js
iret
adc
inc
fbld
cmpsb
pop
jnp
js
inc
cltd
test
push
shr
dec
scas
sub
test
pop
jecxz
mov
bound
notl
icebp
arpl
mov
andl
fidivs
mov
fldenv
fiadds
mov
push
insl
and
jne
mov
sbb
jbe
sbb
test
inc
fisubl
bound
sub
cmp
mov
or
mov
xchg
scas
sti
insl
pop
lea
lods
mov
lahf
leave
adc
popf
movsb
push
pop
lods
or
add
cmpsl
in
popf
aam
shrb
mov
rol
push
inc
daa
inc
adc
mov
movsb
stos
and
adc
adc
test
xlat
sub
in
leave
leave
mov
sub
xor
loopne
hlt
iret
and
cmpsl
out
test
mov
ficomps
or
inc
enter
pop
cli
test
lods
push
mov
test
es
jne
in
mov
lock
popf
push
ds
out
sub
fidivrs
push
popa
and
sti
inc
xor
sbb
inc
push
shll
mov
sub
ss
lock
xchg
dec
nop
mov
xchg
jle
cmpsl
sbb
test
nop
clc
mov
add
cmpb
mov
push
mov
cmc
cmp
push
nop
sub
popf
pop
jo
pop
xchg
shll
xlat
cmp
push
stos
mov
lahf
in
and
insl
ss
cmp
decb
in
icebp
lret
jmp
jo
push
mov
sbb
inc
arpl
mov
push
inc
cmpsb
jno
mov
push
jnp
xchg
push
pop
mov
mov
in
jns
sub
dec
aam
insb
stos
addr16
push
in
cwtl
sub
repz
enter
jne
mov
xchg
mov
cmpsb
mov
mov
mov
pop
retw
cmp
adcl
and
cld
stc
out
cld
mov
pop
loope
fwait
pusha
rcr
addr16
mov
loopne
fsubl
aam
push
dec
adc
cmp
shl
sarb
fdivrs
sub
stos
add
push
lret
inc
jp
xchg
fsub
and
testl
cmp
or
imul
mov
sbb
test
pop
js
sub
jbe
cmpsb
jl
and
mov
cmp
or
je
jmp
scas
xchg
xor
adc
je
addl
inc
rcl
mov
mov
mov
dec
xor
inc
stos
cmpb
scas
orb
mov
dec
add
es
nop
sbb
in
cltd
js
ja
ss
or
mov
sbb
ret
bound
rcrl
or
lret
lcall
push
out
xchg
cmpsl
inc
out
mov
xlat
and
loop
aaa
dec
cmp
push
or
xchg
sub
leave
aaa
dec
adc
inc
ljmp
and
mov
stos
adc
fistpll
stos
enter
pop
xor
rolb
mov
mov
pusha
jae
ljmp
adc
mov
insb
cmpps
into
les
inc
daa
sub
ss
ds
cld
stc
test
jg
mov
dec
insb
js
lods
inc
mov
sub
mov
fstp
out
pusha
xchg
and
xchg
jnp
or
xor
sahf
pop
mov
xchg
pushw
movb
leave
sub
push
in
popa
mov
cmpb
pusha
ret
popa
js
dec
fdivrs
in
je
je
fimuls
fwait
popa
dec
adc
shrl
cmpsl
xchg
nop
in
jl
push
jae
int3
scas
movsb
test
mov
mov
mov
test
mov
mov
lock
push
mov
mov
fnstenv
loop
pusha
pop
scas
lcall
push
loope
jmp
imul
sbb
or
cmpsb
jb
dec
mov
out
cli
mov
jmp
enter
mov
std
dec
xchg
and
les
ljmp
adc
inc
mov
test
clc
dec
icebp
pusha
dec
jnp
mov
xchg
jecxz
jns
test
movsb
cmc
push
jnp
in
add
cmp
mov
xchg
cmp
and
call
test
nop
mov
fs
xchg
jne
jle
fildl
mov
les
in
pusha
pop
mov
xchg
cltd
lock
fistpll
mov
mov
xchg
lods
cmp
ret
scas
push
idivb
jo
and
mov
mov
cwtl
mov
cld
test
and
sub
subb
in
loopne
sbbb
movsb
movsb
xor
bound
push
mov
pop
push
sub
std
or
frstor
cmpsb
test
push
and
adc
std
test
insb
jae
adc
push
or
into
xor
mov
out
pop
xor
cli
cmpsb
fisttps
adc
mov
neg
imul
jl
mov
cld
loop
loop
jmp
insl
fnstenv
loope
mov
mov
cmp
les
jmp
mov
sub
jne
mov
mov
lods
add
sub
fisubs
xchg
dec
dec
fsubl
mov
sub
jbe
adc
jecxz
push
stc
jnp
sub
or
iret
movsl
and
mov
xor
vpmadcswd
mov
mov
clc
std
mov
add
xchg
movsb
insb
dec
dec
pop
or
divl
and
test
xchg
mov
push
imul
imul
xchg
leave
in
push
ds
cmpsl
scas
xchg
mov
add
adc
pop
mov
sbb
push
test
dec
sti
mov
dec
stos
xchg
mov
mov
mov
into
scas
mov
mov
out
nop
push
push
stos
notb
in
mov
and
js
pushf
sub
dec
fistpl
and
insb
popf
dec
shrb
cli
lods
mov
shll
xlat
fnstenv
sti
movsl
mov
push
stos
xchg
addr16
inc
lods
aam
mov
fldcw
mov
mov
xchg
mov
jle
mov
sbb
lods
or
cmp
pop
add
fmul
xchg
jl
add
add
test
addr16
xchg
pop
ja
jecxz
mov
cmpl
push
dec
sub
fucomi
or
jbe
sbb
xchg
sub
fisubrl
frstor
lods
aaa
mov
imul
adc
loope
add
cmpsl
mov
lods
jbe
movsb
push
push
cmpsl
mov
pop
mov
aaa
in
pop
mov
rol
push
and
sbb
lret
fsubrs
cmp
out
lods
xchg
jmp
mov
lock
stos
enter
lcall
fimull
insl
inc
cmp
mov
push
add
jbe
ja
xchg
outsb
std
js
lods
sti
push
push
cmp
aas
pop
bound
jo
scas
sub
in
and
outsb
imul
mov
mov
mov
sbb
xchg
xchg
lret
xor
jbe
mov
mov
std
sub
movsb
ljmp
mov
enter
cmpsl
addr16
add
jp
ficoml
aaa
movsl
filds
jo
push
loope
sbb
ds
inc
shrb
repnz
mov
mov
xchg
jp
mov
mov
add
xor
movl
sti
out
mov
je
imul
daa
inc
mov
ja
addr16
loopne
outsb
ds
and
sarb
sahf
xchg
cmp
inc
and
cmp
sbb
lret
add
out
ret
mov
mov
mov
and
mov
sub
stos
ret
mov
bound
and
mov
mov
mov
int3
mov
shlb
nop
dec
or
cmc
xchg
dec
xor
fwait
divl
aas
xchg
sbb
test
or
mov
pslld
pop
add
in
and
loope
imul
shll
cmp
scas
push
popl
repnz
add
pop
inc
xchg
addr16
adc
loop
in
pop
fidivrs
cltd
lahf
dec
aad
adc
fnstenv
dec
iret
aam
pusha
in
icebp
mov
mov
dec
xchg
sub
pop
xor
push
dec
xor
ja
push
xor
push
or
xor
aam
cmp
mov
imul
mov
rcrl
lret
lret
mov
pop
ja
shll
mov
call
xchg
enter
scas
adc
jns
adc
or
inc
and
mov
jg
mov
inc
inc
sahf
mov
mov
xchg
loop
bound
jp
push
and
cmp
jmp
ja
pusha
sbb
dec
jae
pop
cs
mov
pushf
out
push
lods
test
call
out
icebp
loope
sub
mov
dec
pusha
sub
int
jle
dec
mov
stos
data16
and
jl
xor
xor
sub
or
mov
sub
imul
xor
inc
cmp
aaa
xorl
mov
sbb
push
lcall
sub
pop
loopne
dec
jnp
and
out
inc
sbb
jne
xor
int
xor
xchg
jg
push
mov
into
mov
jl
push
sub
dec
out
sub
addr16
out
dec
lret
and
adc
cmp
xchg
push
idivl
mov
enter
cmp
cli
bound
cmpsl
xchg
inc
les
mov
movsl
add
lret
out
sub
sub
sub
fadds
dec
mov
pop
pop
and
and
loope
cmpsl
mov
das
cmp
movsb
xchg
mov
cmp
mov
sbb
xchg
and
cli
enter
mov
push
dec
ljmp
test
aas
or
mov
jmp
cs
mov
daa
notb
aam
push
int3
arpl
repz
jns
shrb
testb
out
mov
mov
mov
lods
mov
dec
call
and
mov
or
jge
js
mov
shlb
lods
bound
and
pop
xlat
xor
dec
mov
mov
mov
bound
aaa
cmp
sub
adcl
mov
stos
scas
cmp
add
adc
loope
mov
bound
mov
das
jbe
cmpsl
mulb
push
gs
test
fs
fdivrl
callw
mov
leave
add
xorb
add
xor
lret
jmp
ret
cmpb
mov
gs
mov
cwtl
push
mulb
jae
mov
in
lock
scas
and
adc
scas
dec
dec
icebp
pop
repnz
pushf
mov
mov
xchg
mov
loop
in
cwtl
cmp
jmp
mov
mov
shrl
pushf
push
je
inc
xchg
std
testb
repnz
mov
cltd
dec
subl
mov
jae
mov
lods
mov
test
cli
movb
cmp
adc
jl
and
fwait
mov
enter
movsb
push
movsb
es
inc
push
sub
xor
in
fdivrl
into
aam
jae
neg
jns
test
jnp
psubq
pusha
and
inc
pop
xchg
jl
loop
mov
add
sub
shll
jnp
insb
xor
xchg
cmp
and
xchg
push
push
xchg
sbb
push
loope
lea
inc
sub
js
gs
loop
cmp
mov
out
rolb
push
lods
dec
push
repz
jo
pop
imul
push
call
fcmove
or
fistl
and
pusha
fcmove
mov
scas
lea
ja
fwait
testb
jbe
xor
lods
mov
int3
ja
jne
push
test
cmp
dec
mov
imul
sarb
mov
aas
subb
xchg
in
add
dec
add
ret
test
cmp
lods
ds
fld
xchg
std
pop
int
pusha
xlat
and
cmpsb
out
call
rclb
adc
add
and
popf
xorb
jmp
ljmp
dec
dec
lret
movsl
sbb
pop
repnz
xchg
jae
clc
js
std
ret
daa
aaa
and
movb
fwait
leave
xchg
cmc
stc
test
jmp
dec
shlb
aam
xchg
clc
cmp
jle
mov
out
mov
into
and
das
pop
inc
and
lods
pop
imul
stos
jl,pn
into
mov
psubsb
pop
js
or
sub
sub
scas
jge
aaa
push
stc
and
frstor
pop
test
and
xchg
mov
jmp
pusha
mov
es
shr
test
inc
jmp
jp
aad
movsl
or
jbe
cmp
pusha
sbb
xchg
int3
cmp
shr
popa
xchg
nop
pushf
aas
push
js
push
jbe
aaa
and
lret
out
call
mov
inc
cli
mov
out
fwait
jb
test
mov
idiv
xlat
xor
aaa
xchg
data16
lea
movsb
jle
cld
push
dec
stos
insl
imul
jp
or
mov
rcr
aad
jbe
mull
inc
xor
push
into
popa
mov
push
inc
sub
es
cltd
mov
movsl
fyl2x
ret
jae
and
mov
aad
cmpsl
mov
mov
sbb
rcrb
and
mov
inc
fisubrs
out
sub
add
aaa
hlt
or
rorl
sbb
pop
jge
adc
cmp
jmp
mov
inc
jbe
dec
scas
outsl
cmp
mov
and
outsl
mov
mov
mov
bound
imul
addr16
and
inc
mov
mov
push
js
cmpl
cmp
cmpsb
cld
daa
mov
into
adc
inc
sub
xchg
inc
idivl
ja
jp
mov
jl
enter
cmp
out
mov
jbe
shl
aas
fsubrs
in
dec
mov
inc
xor
pop
imul
int3
test
xor
jg
les
mov
dec
scas
cmp
fwait
push
lods
xchg
in
sahf
pushf
jmp
xchg
xor
pop
insb
push
mov
stos
push
xchg
sbb
jns
into
ljmp
scas
mov
hlt
sbb
xor
lret
stos
in
and
and
mov
mov
pop
adc
sub
push
adc
lock
iret
dec
imul
cmpsl
push
test
push
xchg
dec
lea
lcall
jl
inc
cmp
xchg
mov
out
cmpsb
mov
jp
jbe
int3
push
push
adc
jne
jbe
mov
mov
mov
jbe
test
or
outsl
stc
mov
or
popa
ret
in
jne
dec
jecxz
iret
movsl
mov
xor
andl
imul
pop
add
insl
insb
inc
jmp
movsl
fldl
inc
cmpsb
mov
cmpsl
in
scas
lods
adc
iret
hlt
pop
and
push
cmpsl
jae
outsl
sub
or
out
test
push
dec
mov
repz
mov
sub
pop
leave
stos
movsl
push
jl
addr16
inc
sarl
loope
xchg
movsl
jl
lret
xor
bswap
cmc
pop
mov
or
mov
and
fwait
lock
xor
pusha
and
clc
add
jo
call
or
cli
cmpsb
outsl
push
stos
sbb
sub
and
xchg
mov
xchg
call
call
and
pop
cmpsb
fsubl
push
fcmovnbe
movsl
mov
icebp
aam
fs
call
loop
pop
test
aam
xchg
mul
sbb
xor
xchg
add
es
mov
movsl
mov
stos
in
test
loop
lods
cmpsl
or
sub
lahf
adc
shl
sbb
mov
xchg
inc
fbld
test
inc
and
mov
xchg
pop
jecxz
pop
test
shrl
xor
fistpll
push
dec
push
or
cmp
mull
scas
jg
jmp
sbb
lods
sub
enter
cmpsl
incb
shrb
dec
call
ljmp
jbe
arpl
pop
push
cli
pop
cmc
lds
int3
notb
lods
divb
sti
movsb
lcall
or
push
jns
in
xor
jae
dec
sub
lods
jae
sbb
jl
out
pop
sub
data16
out
test
and
xor
addb
pop
push
adc
lahf
jl
je
dec
out
add
jl
mov
aaa
cmp
jno
popf
cmpsl
cs
or
xor
outsl
push
fs
iret
test
vmovaps
stos
mov
scas
pushf
sti
mov
out
aas
ljmp
and
shll
mov
cltd
into
mov
mov
imul
lret
mov
xchg
mov
insb
jae
dec
inc
dec
loope
sub
aam
lahf
xchg
out
mov
mov
pop
test
test
roll
and
inc
es
mov
mov
enter
pushf
sub
xor
fistps
iret
pop
lds
jmp
mov
inc
int
call
sub
scas
fldenv
into
int3
imul
stos
loope
ds
xchg
mov
sub
xchg
and
loopne
jg
mov
out
pop
sub
xchg
test
dec
cltd
test
lods
or
pop
lods
seta
and
lods
dec
lret
cs
and
and
and
insb
sub
in
fisubrs
lods
cmpb
es
push
jmp
cli
dec
cmc
mov
xor
ljmp
test
lods
ljmp
sti
sub
das
and
fwait
jmp
pop
push
sub
or
dec
cmpsl
je
stc
jl
movsl
hlt
lods
imul
stc
xchg
movsb
mov
ljmp
mov
pusha
jecxz
mov
int3
loopne
test
into
movsb
sub
stos
test
push
cmpsb
mov
ret
xchg
xor
sbb
movsl
lods
jbe
jp
or
fs
data16
fsts
mov
mull
lods
jne
pop
mov
lods
pop
xchg
insl
lods
xchg
jb
je
mov
cmp
or
test
push
and
outsl
addr16
pop
mov
pop
xchg
cmc
aaa
ret
roll
imul
adcl
or
lods
xor
mov
sti
mov
cmp
pop
movsl
jg
ds
cmpsb
jae
dec
data16
and
dec
mov
lret
xor
shr
mov
mov
and
adc
cmp
cwtl
sub
dec
or
sub
test
js
adc
add
pop
clc
test
stos
out
in
add
xchg
jle
xchg
cwtl
lcall
cwtl
lods
jecxz
cmpl
xchg
popf
rcrl
xor
test
xchg
lahf
jmp
add
cmp
loop
cmpsb
adc
imull
inc
mov
cmc
mov
idiv
add
cmp
out
add
arpl
out
dec
adc
inc
out
popf
mov
icebp
jmp
notb
jne
fdivl
sub
lock
inc
stos
lahf
mov
cmp
lea
adcl
test
cmpsl
movsb
loop
mov
out
mov
imul
test
jb
sti
stos
pop
out
ds
mov
call
int
pop
mov
push
adc
gs
mov
and
and
cmp
enter
call
mov
ss
jl
xor
aam
fidivl
push
stos
std
in
insl
mov
sub
cmpsl
mov
sahf
movb
jae
loop
addr16
dec
lods
jl
mov
sbb
mov
jl
inc
movsl
push
hlt
mov
mov
push
out
cmpsl
aaa
mov
mov
mov
push
mov
loopne
cmpsl
fs
mov
push
addb
jns
ss
in
jno
movsb
or
jecxz
xchg
ljmp
mov
push
push
add
add
push
loopne
sub
mov
call
inc
and
jecxz
jg
sbb
int3
jmp
cmp
mov
add
imul
pop
sub
xor
frstor
aas
cmp
pop
loopne
jo
ljmp
imul
xchg
mov
ss
jb
lcall
imul
xchg
jns
push
adc
sub
lock
test
icebp
sub
jb
hlt
sbb
xor
adc
xor
xchg
test
cwtl
xchg
cltd
dec
jp
jne
dec
stos
sub
ljmp
or
daa
enter
into
scas
mov
sub
mov
and
push
addr16
pop
push
mov
mov
cmp
shlb
xchg
sar
inc
icebp
out
mov
decl
xor
lcall
lods
stos
sarl
adc
jecxz
ja
mov
shll
cmpl
xchg
adc
pushf
mov
es
ljmp
xchg
insl
mov
cmp
dec
push
pusha
loope,pn
movsb
sti
popf
mov
xchg
data16
pop
mov
push
xchg
xchg
loop
cs
std
clc
loopne
leave
cmpsl
out
out
in
les
mov
addr16
mov
mov
shlb
dec
mov
inc
xchg
jecxz
xlat
mov
jecxz
xor
jne
dec
push
mov
adc
mov
je
pop
arpl
data16
jle
movsl
mov
cmp
sub
lods
dec
pusha
fcmovne
sbb
mov
imulb
fldenv
mov
inc
push
ljmp
sahf
ss
lahf
dec
jle
or
mov
rcrl
push
or
int
push
sbb
ljmp
mov
and
mov
add
or
popa
xchg
ja
xchg
mov
or
mov
scas
dec
push
leave
mov
fucomip
mov
je
mov
jnp
jnp
insl
and
lahf
xor
mov
mull
ret
inc
insb
stc
pop
xor
jecxz
idiv
push
mov
cltd
lods
xor
xchg
cmpl
lea
loope
fisubrs
subl
cmp
test
sub
xlat
leave
add
dec
sarb
mov
movl
daa
mov
test
in
neg
in
mov
lret
sti
dec
imul
xchg
in
jne
xchg
mov
ret
clc
xor
adc
loopne
or
push
stc
cltd
xchg
fs
fucomip
or
add
dec
enter
fmulp
xchg
loopne
aaa
dec
imul
push
scas
mov
aaa
and
ficompl
mov
scas
dec
dec
xlat
cmp
stos
pop
mov
or
cmpb
xor
cmp
aaa
fidivrs
movsl
daa
mov
cmpsl
mov
mov
movsb
cmpsb
lds
test
cmpsl
out
sbb
dec
icebp
leave
enter
xchg
mov
nop
cltd
lock
pusha
mov
xchg
xchg
sahf
xchg
test
out
idiv
jmp
sbb
test
outsb
in
dec
fildl
push
or
cwtl
xchg
outsl
push
mov
inc
cli
mov
popa
es
hlt
rcl
mov
shll
sti
scas
xor
pop
ljmp
test
jmp
mov
xchg
jl
push
js
sub
enter
lods
push
sub
pop
and
xor
mov
jecxz
addr16
sbbb
pop
push
inc
sub
popa
jae
mov
les
ds
mov
and
jb
sub
jle
stos
and
cld
lcall
mov
add
xor
fwait
mov
cmp
js
inc
or
gs
or
data16
sti
mov
jmp
pop
add
fbld
mov
push
pop
loope
loop
stos
fcomps
mov
in
push
push
arpl
jno
movsl
mov
leave
imul
test
push
imul
mov
mov
cwtl
mov
mov
cmp
clc
and
mov
sti
or
jmp
enter
mov
roll
pushf
cmpsb
xchg
sub
cwtl
imul
and
cli
or
ljmp
and
cs
xor
jge
clc
enter
stos
les
sub
rcr
js
push
cmp
mov
out
jge
dec
mov
aam
iret
cmp
mov
insl
lcall
mov
jmp
add
stos
pop
sub
jecxz
cmpsb
out
cmp
ss
and
hlt
out
jmp
popf
and
pop
inc
test
jle
inc
ja
jge
adc
xchg
push
fldenv
adc
ljmp
jae
mov
jecxz
enter
mov
into
sub
and
test
shrl
inc
cli
lea
aam
push
mov
and
syscall
cs
popf
push
popa
mov
pusha
and
or
ret
frndint
xor
jbe
ljmp
ret
popf
scas
inc
jge
and
dec
addr16
sbb
mov
daa
cltd
mov
stos
xchg
dec
lret
dec
add
cltd
push
test
int
xchg
nop
mov
ficoms
mul
mov
cltd
lret
or
sub
sbb
repz
hlt
sub
xchg
cmp
cmp
cltd
inc
sahf
mov
xchg
jae
aam
pop
xor
sub
and
mov
andb
outsl
rcl
outsl
fcoms
nop
ret
mov
and
pop
flds
sbb
sti
mov
jbe
mov
fsts
mov
ljmp
lock
jp
mov
inc
add
mov
mov
sbb
popf
int3
lods
sahf
mov
insb
mov
mov
repz
int
xor
aam
adc
movsb
jp
xlat
dec
repz
jae
jecxz
mov
inc
jb
stc
mov
out
popa
jecxz
pusha
jmp
push
js
mov
or
scas
rorb
js
call
dec
out
or
xchg
fldt
cmp
or
data16
lahf
xor
sbb
ret
mov
sub
iret
and
or
jnp
fmuls
int
out
dec
and
mov
jl
inc
sub
push
test
insb
push
popf
mov
popf
je
movsl
loop
or
divl
int3
loope
mov
xchg
xchg
dec
addr16
sbb
loop
pop
lret
sub
xchg
push
add
xchg
fbld
mov
cmc
fidivl
xor
cmp
lcall
rorb
scas
mov
and
shl
in
arpl
cmc
jae
stos
out
sarl
dec
ret
or
test
push
mov
xchg
mov
das
stc
js
leave
add
nop
je
loope
adc
xchg
sbb
out
pop
cmp
ret
mov
rcll
and
addr16
or
sub
xor
push
cmp
sub
jo
mov
aaa
jmp
aaa
repnz
mov
push
push
aaa
fninit
popa
std
jmp
cmp
movsl
aad
loop
mov
movsl
testl
cld
imul
aas
into
push
ret
or
push
test
rorb
pop
loope
push
mov
mov
jle
enter
mov
sub
mov
mov
addr16
sbb
dec
and
mov
add
jbe
lods
and
push
lea
sub
add
aaa
imul
xor
test
daa
popf
jmp
mov
test
mov
add
mov
lds
in
mov
or
icebp
jl
js
mov
fildl
sahf
jecxz
cmp
pushf
mov
addr16
pop
pop
xor
addb
mov
lahf
xchg
nop
ljmp
addr16
mov
mov
loope
lea
in
mov
cmpsb
lret
aad
push
dec
js
jbe
push
movsl
jle
lret
xchg
pop
movsl
adc
mov
sub
mov
mov
lcall
or
mov
in
cmc
fstps
and
sbb
dec
aaa
xchg
mov
jmp
iret
mov
mov
inc
add
clc
dec
arpl
push
sbb
mov
js
cmc
mov
outsb
sub
loopne
in
mov
xlat
stos
xchg
push
xor
lahf
icebp
push
and
mov
pop
mov
mov
std
sti
pop
mov
jne
sbb
mov
cwtl
add
insb
or
or
ja
js,pn
and
xchg
mov
test
aad
test
jmp
pop
movsl
mov
sub
xchg
fprem1
lret
push
mov
and
mov
sub
mov
mov
xchg
inc
stc
movsb
xchg
jl
test
leave
lahf
sbb
jecxz
jle
mov
int
xorl
xchg
lret
jbe
xchg
test
and
push
fisubrs
xor
aaa
cmp
xor
mov
xlat
jecxz
mov
fs
arpl
inc
adc
adc
add
mov
mov
fs
bound
cmp
dec
mov
or
inc
imul
and
lahf
xor
movsb
enter
addr16
add
push
jmp
or
sub
push
into
xchg
call
and
js
enter
jne
leave
cmp
cmp
and
xor
pop
cltd
lea
pop
stc
call
cmp
mov
jp
xchg
dec
loope
rorl
lea
rcrl
mov
aad
fwait
dec
mov
cmpsl
mov
test
daa
lret
xchg
scas
cmc
xchg
addb
mov
stc
mov
push
jecxz
orl
push
pop
hlt
imul
ret
sub
inc
adc
dec
lcall
cmpsb
cwtl
and
aas
in
or
xchg
ljmp
pusha
adc
jle
aam
cmp
lods
xlat
imul
stc
inc
adc
cld
adc
rorl
jl
mov
cltd
mov
ret
dec
mov
testb
std
dec
neg
xor
cld
pusha
pop
jmp
jne
xchg
getsec
mov
jg
cmpsb
sub
jg
lods
repz
xor
sbb
adc
lcall
push
jb
leave
ss
jb
sti
cmpb
sti
or
xchg
pusha
xchg
in
lret
xor
scas
enter
xor
cmpb
loope
outsb
xor
jle
jmp
cmpsl
pop
movd
iret
bound
mov
jmp
hlt
scas
into
xorb
jg
mov
xor
dec
rcrb
loope
or
add
test
std
inc
mov
cli
js
in
jmp
xor
jp
cmp
mov
mov
mov
ja
mov
sub
xchg
divl
scas
mov
pop
and
inc
add
adc
sbbl
or
lods
sar
mov
add
jne
call
andl
add
fisttpl
adc
mov
add
adc
mov
dec
adc
sub
popf
gs
pop
lahf
mov
mov
mov
es
cwtl
and
sub
lea
addr16
aaa
testb
lret
addr16
ds
or
mov
xor
inc
mov
pop
mov
shlb
and
pop
push
lret
cmp
mov
in
es
leave
mov
pusha
sub
mov
jmp
es
in
push
cmp
cmpsl
mov
dec
stos
xchg
sbb
xor
dec
pop
outsl
mov
xor
stc
in
js
push
jl
shrl
mov
test
nop
dec
dec
push
sbb
mov
lcall
sub
xor
ja
mov
inc
adcb
aaa
iret
popa
insl
ds
mov
int
subb
jbe
in
mov
pop
pop
lahf
addr16
repz
xor
cld
cmp
decb
daa
scas
push
mov
loop
mov
jge
icebp
sahf
mov
imul
cmp
or
push
mov
sbb
mov
mov
xor
cmp
lret
jg
out
pop
sti
hlt
int3
mov
lods
sbb
popf
xchg
mov
sbb
fbstp
popa
mov
sub
out
dec
jne
popl
stos
test
andl
es
mov
mov
cmpsb
xchg
movsl
cwtl
popa
andl
sti
mov
jne
mov
sub
sbb
mov
addl
pop
lahf
mov
lcall
adc
stos
scas
sbb
and
lret
arpl
mov
push
testb
es
inc
popf
or
jmp
movsl
sbb
movsl
lods
sub
xchg
mov
ret
cmpsb
dec
mov
sub
enter
mov
or
push
lcall
cmp
sub
stos
gs
enter
jae
sete
sub
orl
enter
push
mov
insl
mov
cmp
cmc
insb
push
into
xchg
fldt
nop
xchg
sub
jnp
jne
jno
cmp
int3
movsb
lret
dec
lret
xchg
fstpt
and
imul
divl
dec
stos
sbb
sub
add
mov
enter
push
sub
movsb
mov
push
pop
cmp
movsl
xchg
mov
adc
xchg
insl
adc
cmpsb
bound
mov
clc
xchg
cmp
aad
sti
lea
gs
imul
test
jbe
test
test
sarb
cmpsb
lods
mov
mov
jbe
push
cmp
movsb
inc
icebp
and
push
nop
inc
js
dec
jecxz
dec
sti
sbb
jle
call
mov
xchg
cltd
movsl
xchg
xchg
sub
lret
cld
cltd
cli
pop
inc
cmp
mov
mov
xchg
jge
push
test
scas
mov
lds
mov
ret
sti
stos
xchg
and
imul
nop
mov
push
or
cmp
add
cmp
xchg
mov
sub
jmp
xchg
in
cmp
or
adc
out
jmp
out
shrb
test
adc
daa
xchg
mov
pop
ds
out
lods
das
pop
cwtl
add
arpl
ficompl
cld
cmpsl
rorl
insb
sbb
js
push
loop
or
push
mov
ret
sbb
add
ja
or
pop
xor
movsl
jae
popf
cmpsb
cmc
inc
sbb
push
pop
out
sub
test
or
jmp
mov
or
mov
ljmp
mov
fnstcw
pop
lds
addr16
and
sub
mov
push
popa
pusha
sub
aam
jp
imul
pop
pop
jae
pop
add
rcr
cmpsl
ret
push
jae
test
jbe
inc
fnstcw
jbe
mov
mov
in
leave
sbb
cld
lret
cli
je
dec
cmp
cmpsl
rorl
pop
pop
xchg
movsb
in
jae
test
sbb
bound
inc
leave
adcb
inc
mov
xchg
aad
xchg
mov
outsl
sbb
mov
xor
loopne
ds
in
pop
dec
inc
fisttpl
push
mov
mov
dec
int3
xchg
ljmp
icebp
cmp
cld
jp
idivl
xchg
fnstenv
ret
shrl
ret
insb
xor
repnz
imul
mov
cltd
adc
movsb
or
mov
fwait
loopne,pn
pop
iret
into
addl
pop
shr
mov
jecxz
xchg
jne
ljmp
sub
jecxz
in
jae
out
jecxz
fwait
jecxz
lcall
cwtl
jecxz
xchg
cmpsl
lods
lods
test
xor
data16
and
xchg
mov
adc
or
jg
jl
lods
je
push
ds
fdivrs
dec
adc
sti
jbe
add
hlt
xor
sub
dec
and
cmp
mov
daa
mov
adc
cmp
addr16
dec
mov
leave
cld
mov
lahf
daa
into
mov
mov
xor
es
push
inc
cmpsb
pop
jno
cli
sub
dec
xor
or
mov
mov
bound
iret
fsubs
mov
js
mov
and
and
test
mov
fnstenv
inc
inc
out
dec
rcrl
mov
xchg
js
sbb
pop
leave
pop
loope
xchg
mov
icebp
jbe
sahf
sbbb
pusha
sub
dec
bound
leave
popf
mov
fildll
cmp
lods
dec
jecxz
pop
mov
std
jg
push
mov
sahf
fsubrs
xorb
lds
insl
imul
cmpsl
sbb
fnstcw
jmp
stc
xchg
cmc
mov
cmp
gs
add
loop
mov
lahf
pop
es
mov
fidivrl
xchg
repnz
mov
loop
cmp
sub
leave
dec
mov
mov
xchg
adc
ret
stos
push
pop
in
lods
or
ljmp
jg
mov
test
xchg
inc
jp
repz
test
popa
pop
jnp
mov
movsb
sub
ljmp
jp
pop
jl
push
mov
fcomps
pushf
frstor
mov
insb
fldenv
push
pushf
sub
mov
jl
pop
sub
dec
mov
ret
popa
cmp
iret
incb
push
jne
mov
notb
sub
lea
cmpsl
in
in
test
in
sbb
cmp
mov
mov
mov
xorb
mov
les
mov
and
cmp
mov
xchg
pusha
push
repz
cmp
push
leave
dec
mov
xlat
fucom
scas
jmp
mov
mov
cli
cmp
icebp
and
dec
mov
or
dec
push
xor
mov
inc
jg
jnp
cmp
gs
lds
xor
bound
cmp
test
in
adc
xor
mov
call
arpl
out
ret
fistpll
std
into
mov
mov
xor
arpl
ss
mov
xchg
pop
lret
sub
adc
shlb
pop
add
cmpsb
call
sub
and
xchg
fisubl
pop
sub
push
call
add
data16
scas
test
icebp
push
or
lea
mov
mov
xchg
push
mov
repnz
outsb
cmp
out
push
pop
stc
push
inc
faddl
lret
int3
movsb
into
mov
cmpsl
orl
lret
jne
sbb
mov
cmc
dec
xor
mov
shll
push
mov
lods
movsb
xchg
jecxz
addr16
dec
add
xchg
and
jp
mov
cmpsb
jne
inc
repz
sub
xor
pushf
movsl
ljmp
test
cmp
adc
mov
mov
adc
nop
dec
mov
enter
jne
add
xchg
aad
pop
xchg
mov
subl
into
push
add
xchg
xor
mov
inc
imul
xchg
xchg
sbb
push
cli
test
ror
insb
xor
loope
mov
loope
js
in
xor
test
mov
bound
subb
and
pushf
and
testb
lds
jns
xchg
cmpb
scas
push
mov
movsl
lds
mov
lcall
ds
test
stos
xchg
call
repnz
lret
xchg
mov
nop
int3
leave
nop
jns
xchg
mov
push
push
out
not
ret
push
ljmpw
push
mov
add
les
cmpsb
stos
sbbl
sbb
movl
mov
aaa
neg
add
push
sub
mov
lret
sbb
push
loope
roll
dec
into
movsb
outsb
jg
jb
xor
lret
out
rorb
mov
xchg
cwtl
or
xchg
mov
jl
fmull
imull
jbe
mov
lods
jae
out
jb
mov
sbb
jg
jmp
fmul
xor
jae
jmp
call
mov
mov
jbe
sbb
xchg
or
or
faddl
xchg
sub
lods
jnp
jbe
inc
inc
ss
in
xchg
dec
xchg
jle
jns
shll
fstps
sub
cmp
cwtl
aam
add
aaa
pushf
ret
cld
mov
in
inc
out
xchg
mov
loope
daa
enter
shl
add
ret
cmpsl
add
mov
push
les
int
inc
mov
push
add
cmpsl
xchg
jecxz
mov
in
push
movsb
push
and
mov
mov
xor
mov
out
cli
or
cmc
fiadds
notl
push
jge
jp
sarb
add
int3
xchg
and
imul
xchg
fs
jge
mov
rorl
cmpsb
sub
cld
hlt
mov
cmp
jmp
mov
mull
enter
sahf
imul
movsb
pop
xchg
stc
arpl
jle
jb
xchg
adc
or
fnstcw
lcall
in
jl
movsb
xor
scas
or
mov
mov
mov
and
jl
shll
inc
ljmp
lods
mov
or
mov
mov
sub
adc
jl
push
adc
scas
ds
loope
jmp
leave
sbb
in
adc
lret
pushf
sub
cmovbe
dec
mov
cwtl
movsl
test
sti
and
cwtl
cli
lods
into
es
mov
adc
jmp
pop
mov
add
shll
scas
into
test
adc
mov
lock
icebp
out
push
movsl
push
mov
sbb
inc
jg
mov
andb
int3
ret
pop
jo
gs
pop
adc
cmpsl
in
mov
cmp
xor
push
xorl
je
je
dec
sbb
mov
jle
aam
add
notb
push
ss
sub
mov
sbb
scas
jle
xor
lea
mov
cmp
mov
dec
xchg
imul
mov
xchg
push
cmc
and
xchg
cwtl
lods
and
inc
out
mov
mov
mov
mov
and
andl
pusha
mov
scas
and
sub
xchg
and
shl
adc
daa
jbe
inc
cmc
clc
loopne
frstor
enter
xchg
fisttpl
dec
mov
pop
leave
pop
sub
push
cltd
jne
data16
pop
pop
bound
filds
fstps
and
adc
mov
mov
and
std
xor
fwait
jne
mov
es
jae
test
cmc
pop
mov
push
mov
fwait
xor
or
push
sti
push
stos
lret
sub
int
xor
dec
test
loope
addr16
jl
scas
into
xor
sbb
sub
imul
fldt
std
ljmp
xor
cmp
test
and
outsl
cmp
sub
out
stos
ret
sub
sti
stos
sub
subb
xchg
insl
rdpmc
clc
xor
in
out
sti
js
xchg
cmp
jle
addb
lods
cmp
sub
cmp
pop
cmpsl
lret
jo
push
dec
mov
mov
ja
lods
fisttpl
mov
movsb
int
jl
jmp
and
push
not
dec
dec
add
dec
call
test
mov
test
or
clc
dec
mov
or
inc
aaa
inc
in
add
mov
or
xchg
xor
dec
pop
mov
movsb
popa
and
mov
arpl
xor
hlt
mov
faddp
and
cmpsl
xchg
mov
fstp
repnz
std
sbb
sub
adc
ja
add
cld
xlat
in
rolb
mov
imul
and
test
and
andb
xchg
mov
lea
cld
jmp
cmp
dec
mov
je
mov
cli
daa
std
enter
or
fstl
xor
movsbl
jmp
ss
mov
hlt
pop
scas
sti
jae
les
out
sub
mov
pop
and
stos
hlt
fprem
ss
mov
loopne
mov
and
dec
jne
add
jmp
cmpsb
xor
adc
mov
mov
pop
cs
int
cld
aaa
adc
cmp
cmpsl
mov
mov
jne
xchg
xor
out
les
xor
shl
mov
sub
push
dec
cmpsl
es
and
xor
mov
ss
pop
insl
mov
xchg
and
cmp
and
lret
push
in
cmpsl
into
xorl
lret
dec
xchg
aaa
and
leave
sub
sub
fdivl
mov
xor
dec
jmp
mov
das
pop
aad
inc
sbb
push
push
cmp
or
cwtl
or
jbe
or
sahf
sahf
cmp
popf
cmp
sub
or
ret
jecxz
sub
push
inc
jb
xlat
and
cmp
lock
insl
xchg
bound
mov
pop
sbb
mov
cmpsl
add
xchg
push
xchg
lods
xchg
dec
daa
jmp
insl
push
bound
xor
add
fs
bound
cmpsl
jge
cltd
and
push
jg
dec
mov
and
jne
add
mov
sarb
sub
xor
rcl
aaa
jecxz
push
sub
lock
inc
jecxz
loop
adc
sbbb
lret
xchg
mov
sarl
jecxz
movsb
movsl
insb
dec
popa
mov
test
test
arpl
clc
stc
jno
adc
mov
xorl
jmp
nop
jae
rorb
call
push
loope
loop
aaa
pop
in
rolb
dec
data16
and
mov
stos
outsb
mov
faddl
cmpsl
mov
loope
adc
int
mov
ss
into
add
xchg
test
mull
sub
jns
pop
sti
mov
pushf
out
imull
pop
and
enter
add
in
sbb
jb
invd
daa
mov
bound
out
sub
scas
sbb
cltd
not
cmp
jg
and
xchg
adc
std
icebp
testb
pusha
add
inc
mov
dec
cmp
mov
or
movsb
push
jmp
insb
inc
pop
cmpsl
cmpsb
aad
hlt
jl
shrb
mov
ret
out
sub
sbb
dec
mov
cmp
push
lret
push
inc
movsb
lcall
pusha
mov
sub
stos
insl
push
fldt
dec
push
jmp
sbb
sub
andl
test
js
aam
es
mov
xchg
add
les
leave
push
mov
inc
out
push
fsubrp
out
jne
popa
notl
lods
sbb
cmpsb
or
or
ljmp
sub
in
mov
cmp
mov
ss
mov
pop
cmp
and
push
cmp
repnz
mov
outsl
push
mov
ljmp
aaa
add
in
pop
ljmp
negl
pop
add
cmp
icebp
sub
mov
xorl
or
fimull
ficompl
mov
insb
and
or
xor
fwait
add
mov
out
jge
pop
daa
cmp
cmp
and
and
fwait
mov
js
inc
std
cmp
es
mov
sti
cmp
dec
cltd
push
in
mov
pop
cmp
test
in
into
ds
xor
movsl
sub
mov
dec
testl
and
scas
ja
cli
or
jns
ret
mov
lods
mov
sahf
sub
mov
xchg
aaa
xor
jecxz
loop
push
cmpsb
je
xchg
sbb
add
mov
cmpsl
mov
ret
mov
fiadds
scas
lcall
in
xchg
icebp
dec
ljmp
jl
inc
roll
jg
mov
jmp
sti
sub
push
inc
lods
data16
test
cltd
xchg
dec
and
fidivrl
test
subl
js
repnz
in
popf
cmc
incb
mov
and
push
int
sbbl
dec
sbb
movsl
scas
arpl
leave
mov
add
mov
jns
es
bnd
test
pop
stc
ja
ljmp
and
xor
insb
into
cmp
adc
ljmp
test
aaa
rcll
movsl
mov
sub
aaa
pop
mov
push
xchg
pushl
mov
jns
fsubr
imull
jl
inc
sub
cmpsl
test
dec
inc
dec
dec
xchg
lretw
jecxz
push
and
push
mov
loop
mov
out
jmp
and
loop
pop
imul
mov
rolb
js
es
mov
mov
sbb
xlat
jg
scas
inc
ljmp
xchg
and
pusha
jmp
push
mov
jl
jnp
dec
xor
jge
add
mov
aam
cmp
in
cmpsl
jmp
test
pop
sbb
js
inc
imul
pop
scas
les
push
mov
sub
cli
in
hlt
test
mov
testl
ljmp
je
movsb
ss
push
je
dec
mov
je
xchg
mov
xchg
push
shrl
mov
push
lahf
xchg
in
bound
cmpsl
or
pop
jmp
es
mov
mov
mov
aas
lahf
loop
andb
sbb
orb
lods
mov
hlt
cmpsb
dec
aas
nop
sub
scas
mov
xorb
xchg
push
data16
ljmp
dec
pushf
or
punpcklbw
int3
lds
push
push
test
movsl
fsubl
mov
stc
insb
jbe
lods
add
and
dec
mov
dec
daa
nop
cmp
scas
sub
inc
adc
pop
jecxz
cmp
xchg
test
fwait
nop
leave
test
jne
pusha
cmpl
scas
mov
lods
jne
mov
adc
xor
sub
cmpsl
testb
cwtl
mov
div
mov
scas
stc
and
loope
scas
jp
movsl
xor
ljmp
stc
jecxz
push
xchg
adc
pop
loope
cs
sub
andl
jae
xor
xchg
adc
shlb
fwait
addr16
cmp
test
dec
mov
mov
aaa
jno,pn
lcall
addr16
std
pop
xchg
inc
addr16
cli
mov
leave
jg
lds
enter
jl
sub
cwtl
test
xchg
sub
stos
xchg
jmp
faddl
or
mov
inc
xchg
mov
pop
push
mov
aaa
add
stos
or
orl
fstps
cwtl
dec
lea
jo
notb
jbe
cli
clc
lods
jbe
scas
jp
sbb
cmpsl
fs
scas
sbb
or
aaa
movsl
std
lret
inc
dec
in
sbbb
mov
fstpl
push
and
xchg
aaa
lahf
aaa
or
sub
dec
orl
sbb
mov
xchg
mov
jge
ffreep
call
subl
fisubs
shrb
scas
lret
lods
xor
es
popa
push
xor
xor
xchg
in
xor
stc
test
mov
shll
or
adc
mov
mov
push
mov
xchg
push
mov
das
lods
sub
loope
sbb
or
pop
push
inc
mov
sub
adc
push
mov
sbb
scas
mov
mov
popa
sahf
sti
fmuls
pop
repnz
dec
insl
jle
test
cmpsl
cmpsb
daa
xchg
add
mov
mov
mov
mov
push
jne
push
popf
popa
test
je
stc
jecxz
fndisi(8087
xor
cmc
xor
js
lods
dec
inc
xor
dec
cwtl
int
cmpb
rcl
push
addl
pop
push
xchg
mov
xchg
inc
jne
sbb
movsb
dec
jbe
lea
push
push
cmp
xchg
xor
adcb
mov
lret
add
mov
push
sub
sbb
frstor
addb
mov
mov
mov
cmp
or
jecxz
test
xor
addl
cmp
imul
out
setp
or
ljmp
in
imul
adc
rclb
mov
xor
mov
mov
sbbb
pop
ljmp
aaa
mov
jno
js
imul
xchg
mov
cwtl
out
ds
xchg
sub
push
mov
sbb
out
pop
mov
jl
loope
fcoms
mov
mull
cld
popa
call
or
and
xor
and
les
mov
or
orb
lcall
add
cmpsl
cmc
mov
cltd
and
mov
jns
stos
push
push
adc
test
sbb
jo
and
jo
cld
fldenv
nop
jecxz
xor
pop
push
js
popa
aas
lcall
mov
dec
push
loopne
sub
jecxz
loop
and
sub
lock
adc
pop
jecxz
inc
mov
iret
test
lret
mov
jnp
mov
mov
leave
cmp
outsb
inc
dec
daa
xchg
mov
gs
jle
imul
cmpsb
lret
nop
pop
mov
push
into
adc
stos
mov
int3
loopne
cmp
mov
or
xor
mov
ja
pop
jno
into
jns
and
pusha
aad
cmpsb
dec
call
jbe
leave
xchg
mov
je
insb
xor
mov
xchg
sub
in
int3
aad
das
enter
mov
lods
pop
xor
fdivrl
mov
mov
adc
arpl
adc
xor
hlt
push
ja
repnz
es
push
xchg
das
clc
ret
jo
stos
xor
fstl
sub
mov
or
je
arpl
pop
xchg
mov
and
cmpsb
iret
or
mov
push
sbb
dec
test
add
mov
cmp
test
inc
cli
addr16
nop
pop
js
les
rclb
inc
mov
inc
xorl
popf
les
test
shlb
sahf
enter
sbb
sbb
add
lods
sbb
push
pop
pop
or
push
mov
dec
jmpw
dec
cmp
jb
lret
nop
mov
push
jbe
ret
mov
mov
test
mov
inc
sbb
pop
mov
xor
mov
cltd
sub
repnz
cmp
enter
mov
sbb
push
dec
pop
xor
out
xchg
or
mov
or
push
xor
ss
mov
stos
or
mov
sbb
lods
int
stos
test
cmpsl
mov
mov
xor
adc
inc
lea
mov
popa
jae
sbb
cmpsb
mov
data16
mov
jne
jb
jle
ja
pusha
sub
fidivl
popa
test
sbb
lahf
out
mov
xchg
mov
mov
push
mov
jge
lret
js
icebp
cmpsl
jg
mov
enter
xchg
jne
mov
leave
fmull
mov
xlat
cmp
mov
cmpsb
mov
mov
pusha
lea
sub
ja
xor
and
sub
mov
xor
sub
scas
call
cmp
jmp
cmp
sbb
xor
cltd
sub
cmp
sub
rcr
fistpll
inc
lcall
xchg
inc
pop
dec
fsubs
pop
aaa
mov
daa
int3
nop
add
jle
mov
xlat
pushf
sti
or
xor
cmp
inc
mov
leave
mov
aam
mov
pop
test
xchg
or
fildl
sub
pop
mov
mov
mov
push
loop
inc
and
or
sub
adc
mov
sub
idiv
int
mov
into
xor
in
leave
fwait
int3
sub
mov
lcall
push
sub
sbb
mov
xor
jmp
push
pop
jb
mov
nop
xchg
sbb
in
jae
dec
les
pushf
dec
aaa
fdivs
cmpsl
dec
sarl
arpl
mov
lods
mov
sbb
cmp
insl
shrl
or
push
in
lds
shl
mov
out
sarl
stc
or
xchg
mov
aam
push
push
je
out
loopne
push
fwait
in
sub
mov
stos
mov
push
xchg
jg,pt
mov
stc
dec
adc
cmp
jb
sub
or
push
imul
insb
mov
leave
or
and
sarl
lea
repz
push
test
cltd
jmp
repnz
stc
xchg
movsb
xor
popf
adc
test
idiv
imul
in
int
mov
mov
inc
dec
cmpsl
jo
jb
daa
into
repnz
and
mov
mov
int3
and
dec
mov
ljmp
jle
push
enter
sti
test
or
pop
movsb
jb
popa
lcall
test
push
ljmp
aas
xor
shll
lcall
sarl
push
jmp
fidivs
ljmp
push
xchg
je
shl
imul
mov
out
sbb
mov
aas
sbb
dec
popa
or
xor
pop
call
push
cmc
pop
xchg
xchg
inc
sbb
jp
dec
sub
mov
inc
out
push
jp
lods
mov
lods
data16
or
sbb
mov
hlt
xor
mov
add
jge
ja
lea
jae
push
cmpsb
or
dec
loope
push
imul
jle
cmpsl
ss
push
dec
pop
push
push
jae
inc
jmp
int
jne
mov
lea
cmp
aaa
mov
ret
pop
bswap
and
mov
xor
int3
adc
add
testb
shrl
or
inc
lcall
rcrl
sub
clc
aas
mov
out
cmp
lods
aam
nop
mov
dec
jb
pop
negl
mov
ja
or
cmc
idivl
sti
je
xor
into
jecxz
cmp
cmp
popf
rcr
gs
jle
cwtl
aam
cmpsl
cmpsl
mov
loopne
lcall
lock
adc
fbld
mov
sub
cli
inc
push
orl
rcrl
addb
add
cmp
rol
mov
mov
cmpsb
dec
xor
add
dec
or
movsl
xorb
inc
jb
xor
daa
cmpsb
pop
shll
pop
xor
out
sbb
jb
cmpsb
sub
jae
xchg
repz
hlt
push
movsb
int
ret
jae
mov
ja
fwait
stos
mov
mov
pop
mov
mov
and
mov
mov
int
test
jle
cmpsl
cmpsb
mov
movsb
jae
xlat
loop
mov
out
shll
xor
inc
cmc
inc
cmp
jle
dec
mov
test
int
popa
into
nop
movsb
mov
mov
cltd
jp
lahf
mov
or
dec
push
outsb
cmp
outsb
adc
sti
ds
ds
cmpsl
inc
add
xchg
mov
daa
xor
mov
dec
fs
ja
cld
jnp
mov
jl
div
pop
cmp
lret
push
les
jne
dec
stc
in
dec
mov
xchg
int3
cs
cmpsl
or
or
loop
out
pop
sub
fsts
inc
imulb
sub
out
arpl
cwtl
sti
mov
fidivs
fwait
dec
lods
xchg
jae
jp
add
insl
aad
jo
cmp
or
insl
push
fsubs
data16
sub
push
ja
mov
lods
jl
movsl
cmpsl
mov
repz
sbb
adc
out
or
mov
imul
leave
ja
notl
lds
mov
sbb
adc
sbb
pop
pop
insb
jmp
mov
fwait
push
aaa
push
or
push
xchg
fwait
test
scas
adc
or
push
scas
imul
shrb
push
es
or
sti
fldl
mov
jb
add
jbe
sbbl
inc
aas
mov
mov
movsl
inc
cmp
dec
sarl
int3
or
stc
mov
adc
or
mov
ds
push
in
leave
cmp
fs
loop
mov
ljmp
shll
pusha
sbb
call
aam
or
mov
cli
push
ret
daa
push
ljmp
pop
jecxz
mov
jns
rcll
shlb
clc
push
in
jns
add
sahf
mov
inc
xchg
xchg
rcrl
cmpsl
rorl
jbe
push
mov
stos
loop
cmp
mov
fucom
cmpsl
sti
cmp
push
cld
std
mov
mov
addr16
xor
ffreep
adc
push
call
pop
or
dec
sub
adc
mov
mov
add
test
mov
loopne
xor
imul
inc
xor
test
sub
xchg
jl
mov
lods
les
fstpl
aaa
lahf
mov
mov
movsb
fs
mov
mov
mov
leave
inc
dec
mov
ss
xchg
into
cs
and
lcall
mov
sbb
aaa
mov
sarl
shr
shlb
loope
push
jmp
mov
xor
mov
ficoms
ret
mov
aam
add
je
in
mov
movsl
stos
jle
std
idivl
mov
sbb
shlb
pop
insl
leave
xchg
mov
stos
ss
cmpsb
cld
fbstp
loop
xor
aaa
hlt
imul
scas
sub
fdivrp
loop
mov
jne
in
adc
dec
mov
int3
int
mov
lcall
in
sub
inc
adc
loope
aaa
mov
mov
push
imul
testl
leave
aaa
xchg
call
fucomi
inc
sbb
inc
cs
in
incl
push
mov
mov
jne
movsl
mov
push
lods
test
std
sub
iret
cmpsl
ljmp
and
jns
shll
xchg
jecxz
cmp
lods
sub
mov
xchg
addl
xchg
data16
pop
shl
dec
jmp
push
lret
sti
push
rol
enter
aam
dec
cmpsl
sahf
mov
je
cld
mov
stos
or
out
out
jp
je
clc
fidivrs
lcall
sahf
lods
dec
popf
mov
stos
cmpsb
pop
mov
xchg
popf
insb
dec
mov
mov
ljmp
cmpsl
xchg
add
xor
cmc
out
aad
cli
test
dec
hlt
orb
xchg
add
mov
lret
mov
jp
test
xchg
dec
sub
scas
stos
mov
out
lods
rolb
sub
pop
aam
arpl
xchg
sub
nop
xor
aaa
sub
jae
lods
push
push
inc
arpl
icebp
xchg
mov
arpl
jne
adc
mov
scas
mov
inc
cmc
inc
imul
mov
mov
scas
mov
in
daa
sub
xchg
cmpsb
jae
mov
lods
inc
mov
xchg
jmp
fwait
cmp
xchg
cli
mov
test
push
xlat
cmc
jns
xchg
jno
pop
cwtl
mov
rolb
jl
pop
test
lcall
insl
lods
xor
jmp
mov
mov
filds
dec
aas
loopne
mov
test
sbb
call
pop
inc
mov
lret
sbb
sub
and
cltd
sbb
daa
orb
mov
into
mov
imull
sbb
xor
mov
subl
rcl
dec
jecxz
mov
xchg
jnp
sub
mov
pusha
mov
insl
addb
out
iret
or
add
aam
cwtl
ret
and
xchg
test
xor
jecxz
mov
inc
sub
inc
cli
roll
daa
stos
cmpsl
xchg
inc
ret
loope
shll
push
mov
pop
xchg
addb
xchg
pop
cli
dec
mov
jle
xor
pop
mov
inc
dec
mov
xchg
xchg
jmp
mov
mov
fstps
adcb
or
fsts
sub
mov
fwait
xchg
call
cltd
dec
push
nop
mov
sbb
into
sub
mov
stc
mov
push
mov
xchg
filds
lock
mov
xchg
jecxz
mov
xchg
jl
push
orl
jge
repz
add
pusha
inc
push
jg
cmp
fidivl
out
ds
shll
mov
dec
adc
sbb
fsubp
adc
mov
lahf
sarb
mov
xchg
test
jae
add
js
push
ja
dec
nop
mov
xchg
popf
fscale
lods
cmpsl
pop
jns
push
stc
in
scas
sub
jbe
ret
orl
jne
or
loopne
sbb
fbstp
fcmovnbe
pop
mov
push
push
lret
mov
mov
fwait
and
or
cmp
lcall
loop
and
dec
and
mov
mov
jmp
cltd
dec
and
inc
adc
enter
mov
jns
push
nop
test
pushf
xor
lcall
mov
xchg
jae
pop
dec
mov
mov
daa
mov
jmp
and
pop
sbb
mov
add
mov
inc
movsb
icebp
mulb
and
xchg
xchg
dec
pop
mov
pusha
out
mov
sbb
jl
xor
jecxz
jg
outsb
jg
mov
mov
add
nop
ficoms
js
nop
inc
data16
dec
mov
lcall
and
imul
inc
mov
xchg
arpl
imul
aad
xchg
scas
rep
sbb
rorl
test
js
cmp
mov
xchg
mov
idivb
std
cmpsl
into
sbb
fnstcw
and
dec
xchg
testl
shrl
test
or
jecxz
mov
dec
js
clc
scas
out
jmp
jecxz
xlat
sbb
xchg
shr
nop
movb
jg
xchg
lret
imul
popf
mov
push
add
test
fidivrl
cs
enter
test
dec
sbb
out
mov
jp
fwait
dec
mov
inc
leave
movsl
or
out
stc
mov
movsb
test
jp
out
mov
xchg
sbb
repz
rolb
dec
repnz
push
aad
loopne
add
icebp
xchg
add
arpl
ret
cmpsb
pop
push
cmpsl
cltd
add
mov
ja
xor
imul
xchg
and
es
out
mov
mov
js
cmp
adcb
mov
cli
sub
and
add
js
andb
js
test
xchg
sbb
pusha
pusha
out
sbb
push
out
add
jns
sbbl
pop
cmc
shll
xchg
pop
dec
int
push
add
pop
aam
mov
dec
inc
cmpsl
and
mov
xor
sub
pop
add
cmpsb
rcl
sub
jecxz
cmpsl
in
push
cmp
cltd
inc
pop
mov
jecxz
lds
mov
adc
or
jecxz
push
and
cmp
pop
add
bound
cwtl
ds
out
sub
jmp
into
xchg
fcomp
jg
and
ret
pop
enter
ss
in
ja
ret
jbe
test
adc
movsl
dec
or
lock
daa
cmc
in
subl
enter
mov
xor
xchg
and
xchg
mov
loopne
xchg
ljmp
push
hlt
aas
fstl
and
out
xorl
add
xor
test
mov
aad
fs
out
and
mov
es
mov
add
cmc
mulb
or
fsubrs
xchg
push
shlb
stc
mov
int3
stc
mov
into
mov
cmc
mov
cwtl
jle
push
mov
and
cmp
cmp
jecxz
leave
mov
push
mov
aas
mov
cmpsl
ds
mov
popf
lods
inc
loop
jge
out
or
test
pop
and
insl
xlat
fwait
shll
mov
cmp
pop
mov
pusha
std
int3
xchg
or
push
dec
mov
mov
js
into
es
cmp
fdivl
scas
jl
mov
cli
xchg
jo
push
jbe
leave
stos
adc
mov
negb
fistl
xchg
dec
xchg
mov
in
fildl
aaa
push
aaa
repz
into
std
cmp
negb
mov
aas
jmp
into
pushf
mov
jl
jg
mov
dec
mov
xor
add
lret
pop
adc
popf
or
jmp
shlb
aad
arpl
test
mul
push
and
lahf
stc
xor
je
or
sti
pop
test
push
xchg
imul
pop
push
jp
mov
orb
into
xchg
mov
in
mov
cmp
inc
and
mov
leave
adc
inc
cs
or
or
sbb
jne
jns
and
mov
fistpl
sub
movsb
jp
inc
mov
aam
lock
xchg
push
cmc
and
aas
jnp
bnd
iret
cmp
shl
out
pop
cmpsl
test
cmp
sbb
iret
lcall
mov
sub
cli
mov
stos
stos
xchg
into
or
jmp
and
test
test
push
push
fs
hlt
lret
jmp
push
rcl
xor
xchg
jl
mov
int
out
or
push
push
outsl
xor
mov
sarl
push
mov
arpl
iret
in
ss
mov
jne
push
daa
mov
test
dec
loope
inc
sbb
sub
js
int
test
ja
mov
fs
hlt
ficoms
or
xchg
fsubs
jo
mov
or
adc
jge
pop
add
xor
and
xlat
test
lret
sahf
movsb
jle
xor
mov
pusha
push
cmp
clc
test
sbb
aaa
mov
jge
cmpsl
lea
movsl
sub
push
mov
or
scas
push
cmp
jp
dec
cli
pop
lods
dec
inc
sub
insl
jne
rcrl
or
stos
shrb
mov
lahf
and
mov
adc
cmpsb
data16
rol
adc
addr16
push
pushl
xor
shl
aad
push
sub
icebp
nop
stos
xchg
mov
scas
push
rclb
cli
out
cmpsb
shlb
divb
pushf
sub
inc
mov
test
mov
sub
movsl
pop
xchg
or
lret
or
sti
popl
xor
push
pushf
push
stc
flds
fsubr
sbb
iret
xorl
imul
mov
in
loopne
dec
and
xor
xor
adc
mov
les
lea
movsl
jae
cmp
lret
add
xor
xor
dec
stos
xor
rclb
pop
leave
mov
pop
jl
shll
mov
and
mov
jmp
pushf
sub
rcrl
sub
ja
sbb
aam
mov
lea
pop
out
cs
popf
sub
ret
cmp
xchg
mov
cmpsb
or
cmp
push
subb
jge
subb
sub
loope
push
push
xor
or
les
stc
leave
ja
loop
push
cmpsb
jne
or
jbe
xor
lahf
stos
xchg
cmp
and
loop
das
cmp
jp
sbb
ljmp
xchg
sbb
pusha
xor
mov
or
sub
test
mov
dec
sub
mov
xchg
into
or
data16
and
out
jl
bound
and
adc
fisttps
dec
xor
mov
mov
mov
nop
xchg
cmpsl
sbb
mov
bound
xchg
in
mov
pop
mov
jae
fwait
sub
or
mov
sub
jne
fisttpll
mov
xor
xor
and
mov
addr16
fidivs
mov
cmp
data16
dec
loop
push
lods
scas
cmp
and
and
daa
jp
adc
inc
insb
test
fnstenv
pusha
filds
lcall
jge
mov
mov
bound
ds
mov
and
cli
or
punpckhdq
aam
test
sub
jmp
lock
cmp
mov
sti
shll
loopne
cmp
xor
pop
mov
mov
lret
cmpsb
adc
adc
lods
jo
je
out
push
shrl
insb
imul
cmpsb
in
cmp
inc
cwtl
mov
and
xchg
sarl
cmpsb
movsb
mov
mov
sub
xchg
les
repz
ficoml
movsb
sti
sbb
add
test
inc
mov
les
bound
test
sub
aas
imul
in
mov
frstpm(287
es
into
addr16
aad
push
sbb
in
dec
push
ss
mov
jge
std
mov
xchg
pop
push
push
cmp
ljmp
dec
test
add
incl
and
clc
push
sub
nop
cmp
dec
lret
jg
imul
xchg
adc
add
or
mov
or
xchg
pop
pop
leave
mov
jno
cs
insb
lret
or
mov
ja
lahf
icebp
out
repz
lock
mov
sub
loopne
repz
movsb
out
cli
xchg
cmp
iret
std
mov
leave
lret
cmpsl
mov
inc
push
and
testl
mov
mov
ja
inc
push
xor
cmp
jne
add
cmpsl
cmp
loopne
in
ds
ss
leave
cmp
push
pop
ljmp
mov
std
dec
mov
jle
int
nop
sub
mov
and
repnz
cs
fcompl
mov
enter
stos
cmpb
in
cltd
cmpsl
cli
cmpsl
lods
sbb
mov
sub
out
xchg
push
sub
sub
push
push
xchg
std
mov
rcll
jle
mov
push
testb
lods
jmp
mov
lcall
mov
daa
cli
nop
pop
lret
imul
les
mov
push
imull
insl
mov
mov
and
fimull
cli
shll
js
inc
stc
jo
lea
jb
pop
dec
jns
push
stos
or
dec
int3
lret
mov
ret
or
sub
xchg
mov
arpl
xor
lret
fcmovnu
pusha
addr16
mov
mov
mov
cmp
mov
mov
aas
add
push
inc
aas
mov
out
mov
stos
xchg
pop
imul
mov
negb
ficoms
popa
push
pusha
lods
movsl
js
xor
sbb
or
aas
and
popf
pushf
mov
fs
pop
or
mov
mov
sub
cmp
fsubs
jns
ss
loopne
inc
and
stc
add
jp,pn
ror
mov
ds
hlt
lods
cmp
xchg
int
std
jnp
into
popa
icebp
lcall
dec
pop
pop
daa
and
cmp
in
push
std
mov
dec
stos
mov
or
mov
dec
sbbl
cltd
mov
hlt
fisubrs
shr
push
arpl
scas
aaa
outsb
ja
sti
push
stos
gs
cltd
jmp
fidivs
adc
xchg
movsb
xchg
sub
mov
mov
or
je
nop
stos
sbb
loopne
not
fistl
mov
arpl
push
jb
repnz
cld
sub
into
pusha
jl
adc
fidivrl
adc
mov
cmp
xor
movsb
invd
leave
sbb
cmc
mov
pop
mov
das
jbe
fmull
or
into
ds
movsl
xor
notb
sti
mov
out
xlat
mov
int
xchg
mov
sbb
loop
xor
or
dec
ret
sbb
jg
xor
call
jecxz
aad
cmpsl
dec
push
cwtl
loopne
imul
lret
imul
jecxz
or
sbb
push
rolb
xorl
push
daa
jbe
js
jg
dec
cmp
sbb
mov
push
lcall
pop
pushf
lods
mov
insb
add
repnz
test
int
xchg
test
pop
sbb
aaa
cmpsl
xor
mov
mov
push
jle
xchg
cmp
jl
xor
in
insb
mov
cltd
adc
pop
andl
mov
xor
mov
in
test
and
imul
mov
mov
out
roll
dec
xor
or
lods
int3
ds
std
cli
lret
in
sahf
push
cmpsb
jecxz
and
jle
mov
dec
mov
je
int
fcoml
xlat
sbb
jmp
xchg
pop
jmp
cli
lods
lret
int3
push
and
repnz
cmp
out
negb
imul
mov
jae
add
and
mov
outsb
mov
jbe
rcrl
ds
mov
mov
and
int3
je
mov
or
fisubl
and
fwait
and
ljmp
leave
incl
movsl
mov
loop
stc
ficomps
lret
imul
xorl
aam
and
xor
cwtl
pop
pop
mov
mov
jae
bnd
pushw
jmp
pop
xor
insl
xor
mov
lahf
mov
cltd
xchg
jl
add
push
adc
sbb
mov
aaa
cltd
jno
mov
push
xchg
jecxz
adc
mov
dec
shrl
adc
cmp
pushf
aam
mov
mov
insl
cmpsl
stos
and
jmp
popf
pop
ljmp
inc
inc
dec
xchg
mov
cli
and
and
xor
notb
pop
xor
add
cmpsb
and
jnp
fstpt
sbb
pop
push
mov
jae
cmp
adc
dec
jmp
scas
inc
jmp
addr16
adc
mov
stc
icebp
xor
sbb
ljmp
sbb
dec
sub
or
push
and
call
mov
jo
sbb
mov
mov
push
adc
sarl
mov
jecxz
cmpsl
dec
out
loope
push
and
cmp
sbb
imul
pusha
pop
pop
mov
ficompl
mov
mov
add
test
bound
jae
js
clc
lcall
popf
ja
mov
movsl
loope
add
lea
nop
out
mov
ljmp
test
clc
jl
add
xchg
mov
cs
inc
hlt
and
mov
xchg
push
pop
and
popa
sub
addr16
jmp
movsl
jmp
sub
inc
mov
shll
mov
test
icebp
addr16
cmpsl
inc
or
aas
arpl
movsl
dec
mov
sub
xchg
jbe
jmp
sarb
leave
rorl
out
jge
dec
jle
in
mov
jno
or
mov
lods
jmp
addr16
cmp
mov
aas
loope
or
lods
loopne
adc
xchg
ja
pop
fnstcw
lea
stos
jg
xchg
stos
or
sbb
std
into
mov
and
push
pushf
data16
imul
adc
adc
push
cli
pop
mov
mov
or
fdivrl
xchg
ret
add
stos
dec
in
jmp
lds
out
xor
mov
gs
sbb
leave
xorb
jns
jge
jmp
fucomp
sbb
ret
mov
lods
addl
test
ljmp
and
jmp
mov
cmp
out
add
and
pushf
loopne
mov
scas
sahf
sub
addr16
xchg
nop
mov
test
mov
mov
adc
xchg
fildl
mov
out
push
enter
stc
add
notl
sbb
and
inc
subl
cmp
jmp
test
ret
add
mov
mov
push
sarl
pop
cltd
orl
mov
dec
insl
sarb
roll
loop
add
jno
and
pop
inc
add
mov
pusha
adc
imull
popa
test
pushf
mov
inc
je
push
test
jle
dec
dec
xchg
mov
ret
pop
mov
idivb
leave
or
pushf
cmp
je
mov
push
ds
loope
mov
sub
cwtl
mov
movb
stos
and
jae
leave
mov
jae
lahf
sub
test
scas
movsb
aas
popf
loopne
cmovs
lods
sub
aas
inc
test
sub
xor
cmp
and
insl
fbstp
stc
or
xchg
loope
dec
lea
and
mov
add
cmp
push
lcall
xor
jecxz
and
push
int3
fldenv
cmpsl
push
xor
adc
stos
mov
mov
sbb
mov
cmp
push
push
xlat
bound
or
mov
call
jp
push
cmp
fldt
mov
mov
inc
mov
out
fldz
mov
leave
fisubs
fwait
in
xchg
xorl
ret
push
loop
inc
jb
mov
and
xchg
inc
mov
sbb
mov
idiv
dec
jb
push
lret
lahf
cli
sub
scas
rorl
jg
inc
movsb
sub
scas
scas
push
xchg
xchg
jmp
test
arpl
push
repz
mov
dec
push
es
mov
stos
clc
test
aaa
imul
adc
xor
cld
jo
push
imul
popf
sub
scas
in
data16
adc
repz
mov
cmc
and
mov
mov
ja
pushl
fidivrl
adc
popf
push
mov
ljmp
cmpsb
inc
lahf
push
and
pushf
es
fwait
sbb
lcall
adc
fnstenv
add
jne
sub
adc
jne
push
mov
mov
inc
sti
xor
int3
mov
dec
adc
sub
jae
inc
ret
jnp
scas
jno
test
pop
mov
jmp
shll
mov
sbb
out
jge
sub
in
addr16
sub
xchg
outsb
out
jb
lret
loope
call
in
jno
push
jecxz
in
and
int
lret
xor
cmpl
sbb
mov
push
jle
fistpl
fisubl
sub
fisubs
cmp
and
mov
into
mov
outsb
les
xchg
loop
cmp
adc
mov
sub
jp
popf
jmp
mov
testl
mov
scas
iret
lcall
lods
repz
in
jmp
mov
xchg
jp
mov
cmp
mov
test
ds
pusha
cmpsb
cmp
mov
xchg
testb
mov
sub
js
jbe
sub
push
loopne
mov
mov
mov
das
mov
mov
mov
sahf
mov
cli
aaa
sub
loop
sbb
mov
jecxz
pop
sbb
lds
fwait
xchg
lods
into
xchg
popf
in
stos
inc
push
xchg
add
gs
call
mov
and
sub
xchg
divb
ljmp
lea
push
mov
jno
sahf
popa
or
sub
loop
add
mov
aam
mov
imul
cli
hlt
add
popa
xor
jno
ja
lods
mov
into
repnz
jge
popa
and
jns
pop
jecxz
jb
fcmovbe
inc
and
mov
xchg
mov
jle
lods
xchg
dec
mov
movsl
push
mov
ljmp
jae
xchg
and
cmp
je
loop
jns
jl
cmp
je
mov
push
in
aas
xchg
or
aam
stc
mov
xchg
int3
repnz
pop
iret
push
std
lods
movsb
inc
stos
mov
ror
cmpsb
bound
lods
mov
and
mov
or
dec
jo
dec
add
aam
jp
jmp
jb
jne
orb
and
insl
dec
jo
aad
pop
in
sub
or
imul
jno
test
cmpsl
insl
xlat
dec
xor
loope
clc
testl
bound
les
push
mull
cmc
es
mov
add
mov
cltd
loopne
and
bound
repz
mov
push
adc
mov
mov
push
xor
mov
jae
ds
lret
push
in
cmpsl
and
shl
cmp
cmpsl
xchg
dec
push
int3
stc
inc
pop
inc
adc
xchg
icebp
int3
sub
pusha
dec
daa
testl
push
jle
scas
test
or
lods
insl
xor
leave
mov
xchg
mov
inc
dec
cmpsl
adc
jecxz
in
mov
imul
into
fistl
jmp
mov
push
cs
divb
orb
push
in
mov
aaa
out
xorl
mov
sub
sbb
jno
push
subb
xchg
xchg
mov
and
mov
into
push
and
cmp
mov
mov
push
push
test
pushw
icebp
fldlg2
jp
or
fwait
xor
and
sahf
decl
xor
xor
cmc
jmp
cmpsl
icebp
mov
sbb
loop
xor
mov
cltd
stos
clc
mov
arpl
lock
push
fs
push
mov
divb
cmp
add
cmp
cmc
shrl
fists
arpl
and
into
addr16
and
lea
xchg
dec
ljmp
enter
jmp
shlb
dec
jne
lret
test
ret
push
and
inc
loopne
int3
les
jb
cwtl
lret
setne
call
movsb
call
enter
sbbl
popa
fs
rolb
pop
sub
mov
mov
jno
lods
fcoms
stos
ret
imulb
into
rclb
cmp
push
stc
mov
adc
lcall
scas
xor
arpl
lods
ret
adcl
in
mov
movsl
negl
popa
fimuls
mov
or
pop
pop
or
jg
clc
out
mov
mov
int
addb
rorl
in
movsl
pusha
adc
mov
test
lcall
cwtl
lock
ret
xchg
dec
lret
cwtl
jmp
or
ds
adc
enter
ljmp
and
cwtl
sbb
sbb
js
aaa
shll
push
mov
stc
xor
movl
addr16
cmp
mov
push
clc
sub
das
cmpsb
sub
gs
lea
loope
int
sbb
movsb
jb
mov
jne,pt
pshufw
pop
xlat
dec
in
mov
sbb
std
dec
sub
or
stos
sbb
daa
lret
xor
jl
test
test
clc
lds
mov
sbb
scas
push
cmpsb
cmp
pushl
scas
add
push
scas
or
leave
scas
mov
push
test
jl
mov
mov
mov
lret
hlt
jl
add
mov
insl
dec
test
jmp
sbb
inc
push
push
pop
sahf
dec
popa
sbb
sub
imul
sbb
call
and
add
nop
mov
test
leave
mov
dec
mov
mov
and
cmp
lods
mov
es
pop
mov
inc
mov
add
inc
mov
mov
testb
add
inc
std
pop
test
addr16
mov
mov
sub
mov
jp
inc
jmp
int3
std
adc
xor
or
sbb
addr16
or
movsl
cwtl
sahf
test
sub
test
push
cmpsl
arpl
cmc
pop
sub
insl
mov
mov
xor
lock
imul
mov
loopne
das
and
andl
rep
xchg
popf
jecxz
push
dec
xorb
std
inc
or
push
dec
in
sub
pop
into
sub
imul
mov
scas
inc
add
testl
sarl
rolb
in
loope
inc
mov
mov
negb
cmpsl
mov
push
int3
data16
xchg
inc
cmpsl
frstor
push
rcll
lcall
pop
ja
pop
fbstp
mov
filds
jb
add
cltd
call
mov
ds
jbe
or
ret
cmpsb
push
inc
shrl
push
cld
mov
jne
dec
xchg
mov
leave
fildll
arpl
leave
mov
add
cmc
xor
and
fstpt
into
push
mov
sub
or
fwait
test
dec
jle
jns
out
loop
adc
in
idivb
popa
test
mov
je
outsl
dec
scas
ret
xor
hlt
hlt
inc
sbbb
push
aas
cmp
jl
jae
adc
mov
cmc
test
loope
push
mov
xor
mov
mov
in
mov
ret
or
lods
xchg
fbld
test
mov
imul
jo
mov
sub
mov
mov
adc
imul
movsl
movsl
inc
jmp
dec
cmpsl
pushw
pop
xchg
or
push
in
ljmp
shll
sub
jns
mov
dec
sub
cltd
cmp
scas
sub
mov
mov
xchg
push
cmp
adc
setg
cmpsb
lods
jp
test
dec
adc
scas
sub
dec
sub
and
sbb
dec
jo
push
arpl
xchg
push
mov
rcll
ds
cmc
popf
ret
sbb
test
xor
cmp
sahf
aam
sti
pushf
lods
dec
push
ret
xchg
mov
dec
xor
std
movsb
lret
adc
dec
lods
xor
cmpsb
fstpt
insl
out
jle
mov
sti
xlat
movsl
and
mov
cmpsb
xlat
push
xchg
aad
adc
addr16
scas
icebp
movsb
aad
and
xlat
push
daa
jl
testl
or
dec
sbb
loop
adc
dec
aaa
gs
xchg
clc
pop
sub
pop
lcall
movsl
or
jne
mov
pop
enter
sbb
push
jbe
xchg
in
outsb
pusha
test
xchg
cltd
cli
movsl
enter
cmpsl
dec
lcall
sub
out
and
jae
pop
adc
push
cmp
push
xlat
or
jmp
push
into
cmpsb
fcmovnbe
je
fsubr
mov
mov
or
pop
sbb
in
shrl
aam
test
jb
enter
xchg
pushf
lods
mov
jmp
push
mov
push
jmp
jns
test
push
pop
mov
hlt
cwtl
lret
stc
mov
or
and
sbb
jns
cmpsb
mov
test
stos
and
mov
mov
insl
mov
out
mov
nop
gs
scas
gs
lods
gs
stos
xchg
lds
lods
sub
out
cmp
or
xchg
xchg
testb
dec
enter
xchg
mov
mov
call
push
out
cmpsl
mov
ja
mov
jmp
xlat
or
cwtl
in
jmp
push
jl
xchg
push
aaa
pop
ja
jne
cld
inc
test
sub
and
xchg
xor
iret
das
cmp
cmp
push
mov
mov
and
mov
andb
rol
out
mov
cmpsb
gs
test
mov
stos
gs
mov
xchg
call
lods
or
sbb
mov
movsb
cmpsb
rcrb
test
js
ljmp
ljmp
dec
mov
sbb
jne
in
adc
jmp
mov
call
mov
mov
sub
jecxz
stc
or
pop
out
sub
push
cs
add
fwait
pushf
cmpsl
sub
std
xchg
dec
adc
adc
leave
pop
das
mov
ds
jne
xchg
xchg
jno
cmp
movsl
std
mov
mov
dec
das
mov
inc
sub
test
loop
jo
mov
leave
mov
cmp
mov
push
push
nop
jecxz
leave
adc
push
push
jmp
ret
iret
cmpsl
lret
dec
cmp
mov
or
sub
lret
dec
sbb
insb
jl
daa
lcall
push
daa
xchg
mov
and
in
jno
loope
nop
sub
sbb
in
dec
out
mov
rclb
lods
shll
xchg
sbb
sti
data16
fucomi
dec
sahf
push
icebp
aad
pop
cmc
dec
inc
dec
out
sub
daa
mov
loope
push
add
inc
xchg
in
jecxz
add
add
mov
shrl
jmp
movsl
dec
nop
lahf
cli
jge
lcall
mov
adc
pop
loop
and
push
in
jns
and
das
sub
ds
jnp
add
cmpsl
cld
lods
and
into
data16
mov
cmp
push
fldenvs
jns
fld
movsb
movsl
leave
loop
stc
mov
jle
mov
and
icebp
out
mov
iret
cwtl
sbb
cmp
mov
les
nop
sbb
mov
nop
into
in
push
jecxz
cmp
sbb
cmp
loope
call
and
dec
push
sub
cld
jg
jae
xlat
inc
cmpsl
or
pop
nop
adc
mov
jl
mov
das
cmpb
xor
xor
sub
jl
pop
sbb
imul
or
push
aad
xlat
jle
shlb
daa
jmp
lret
mov
mov
xchg
mov
mov
push
test
test
mov
xchg
rolb
cmpsl
xchg
pusha
and
mov
push
jge
sub
fisubrl
mov
lods
hlt
fbstp
lcall
cs
iret
sbb
ret
daa
sbb
xchg
mov
xor
jne
int
gs
aas
push
xchg
outsb
filds
aaa
cmp
jns
xchg
adc
push
div
or
mov
in
mov
lahf
scas
mov
jo
es
mov
xchg
stc
addr16
test
xchg
xchg
adc
mov
enter
xchg
mov
xor
sti
ret
xchg
inc
jecxz
pop
orb
pop
dec
cmp
xchg
loop
push
mov
dec
and
test
mov
dec
mov
movsl
adc
jle
popa
mov
movsb
stc
jp
test
test
addr16
ret
movsb
xor
out
dec
xchg
test
add
or
ss
push
xor
fstps
enter
jg
scas
mov
leave
xor
mov
aas
jne
repnz
sti
lods
fistl
or
into
loopne
testb
cltd
icebp
outsb
cli
pop
ss
inc
or
scas
mov
inc
arpl
mov
pop
mov
out
mov
push
mov
adc
inc
test
xor
cli
lods
mov
in
mov
incb
in
lret
data16
sub
fstps
out
leave
aaa
stos
ret
cmp
test
xchg
sbb
out
jnp
stos
sub
dec
sbb
mov
or
adc
inc
sub
outsb
stc
sub
sbb
scas
je
xlat
sub
pop
xchg
fstpt
adc
mov
test
mov
push
ret
jmp
sub
push
gs
xchg
inc
mov
pop
lods
es
pushf
icebp
es
mov
mov
xor
repz
xor
test
out
dec
pop
ss
mov
jecxz
test
and
sub
stc
std
add
mov
call
pusha
cs
xchg
jg
call
cld
or
loopne
or
xchg
jmp
pusha
mov
inc
sub
in
js
sub
push
and
dec
ljmp
cmp
es
imul
cmc
sub
pop
jne
icebp
xchg
cwtl
inc
xchg
insb
cmc
mov
movsl
xor
xchg
and
inc
inc
out
jmp
pop
cli
aas
in
mov
mov
jge
mov
xchg
xchg
mov
iret
fiaddl
cmp
test
sahf
ss
ftst
jae
or
stos
in
mov
adc
xor
jmp
je
sbb
insl
lret
push
mov
sub
aad
frstor
cld
jns
ljmp
iret
mov
iret
push
int3
int
ljmp
add
and
test
mov
sub
mov
cmpsl
sub
jp
sbb
cmpsb
cmp
sub
jns
jle
sub
dec
push
jle
jmp
outsl
sub
jo
or
adc
test
add
inc
stos
xchg
pusha
iret
or
stc
pop
shll
jmp
call
mov
fistl
data16
lret
mov
mov
cld
icebp
es
jmp
shlb
insl
cmp
cmpsb
dec
imul
lahf
xor
sub
jmp
out
mov
lret
out
scas
push
enter
jmp
sub
xchg
cmp
mov
das
xor
jp
push
fbstp
mov
or
dec
xor
enter
xchg
out
add
jns
int3
inc
xchg
test
push
arpl
xor
fbld
sarl
movsb
fwait
mov
insl
mov
pop
imul
or
jnp
mov
in
mov
shlb
xchg
mov
pop
or
fmul
cmpsb
fs
hlt
pop
jmp
adc
ficoms
mov
cmp
xchg
jns
in
and
push
insl
sbb
sub
mov
mov
xchg
mull
into
shrb
jne
inc
fs
cmpsl
xor
mov
jg
lea
imul
and
lret
roll
test
imul
mov
je
stos
dec
cmp
mov
popa
mov
dec
and
sub
xchg
push
add
sub
cmpsl
lods
push
inc
ja
jmp
stos
sti
insl
aad
or
in
stos
cmpsb
jns
imul
xor
jno
es
xchg
jns
popa
jne
add
cmp
sti
jle
lret
sub
and
imul
roll
mov
pop
fwait
stos
into
cmpsl
enterw
xlat
lret
push
daa
sbb
pop
cli
enter
jnp
sbb
loopne
insl
lret
jmp
lret
stos
in
pusha
idivb
fstpt
mov
sbb
cmp
xor
aas
addr16
imul
les
in
mov
bound
pushf
push
push
enter
lret
cmp
dec
testb
mov
mov
xor
scas
mov
stos
push
fldt
push
mov
outsb
cmp
cmp
dec
adc
and
pusha
push
xchg
and
mov
dec
test
push
pusha
sbb
jge
push
pushf
push
jnp
popf
pop
xchg
and
cmp
loopne
mov
and
jle
mov
mov
loop
lods
mov
push
es
data16
sub
test
cmpsl
stos
push
gs
fwait
xchg
cmp
jmp
jmp
aaa
xchg
stc
repnz
sbb
lods
cmc
mov
push
aaa
in
lods
gs
in
cltd
movsb
xor
fs
and
in
inc
dec
stos
leave
and
xor
mov
test
xor
cmp
and
jp
daa
xor
pop
jle
shr
jb
out
pop
and
loop
push
clc
cmp
stc
and
jle
jecxz
cmpsl
push
mov
lods
outsb
xlat
or
shr
push
stc
or
setae
pusha
jo
lods
xchg
out
lahf
push
outsb
xchg
dec
movsl
loopne
jl
mov
add
xchg
mov
inc
sub
movsb
mov
push
mov
push
and
push
stc
pop
in
clc
mov
xchg
popf
pushf
pop
movsl
movsb
sti
add
idiv
popf
cltd
jo
or
push
add
cmp
adc
sub
fcoms
fisubrs
cmpsb
sbb
cmp
dec
or
outsb
js
in
jbe
mov
xor
dec
xchg
cli
mov
mov
and
mov
mov
cmp
mov
std
gs
xchg
sub
lea
mov
lret
xchg
xchg
test
loope
cmp
aaa
cmpsl
lds
cmc
cmc
test
sahf
cmp
cmp
lahf
rclb
sub
enter
sub
or
movsb
std
mov
dec
add
popa
dec
in
lcall
and
mov
or
addr16
addr16
fwait
sub
addr16
and
cmp
aas
lret
dec
stos
mov
out
call
mov
stos
mov
fsubrl
xchg
popa
test
xchg
pop
inc
insb
pusha
testb
or
mov
subl
movb
fsts
repnz
je
bound
mov
fnstsw
xchg
int3
fwait
notl
add
adc
cmp
adc
jl
xor
mov
adc
fs
jecxz
out
and
cmp
mov
test
addr16
cli
enter
or
loopne
pop
loop
fs
cs
stos
fsts
push
cmp
imul
mov
pop
jp
ret
inc
dec
cmp
in
or
cmpsb
lods
ljmp
mov
xchg
jecxz
fildll
cltd
shll
test
enter
lret
lahf
test
jae
or
stos
cmc
rcll
pop
je
and
test
mov
xor
lret
mov
xchg
dec
js
rorl
lea
and
int
lcall
cmpb
dec
mov
mov
xchg
hlt
xchg
push
mov
jne
cltd
push
lods
mov
push
sub
cmp
dec
cltd
pop
inc
ljmp
dec
jns
cmpsl
movsl
std
fisubrl
js
subl
mov
sbb
sti
push
mov
xchg
lahf
fisubrl
cmp
mov
insl
jo
cmpsb
cltd
xor
push
xchg
into
and
push
mov
mov
jne
add
test
shll
das
adc
hlt
data16
cmp
inc
add
add
add
jle
jns
jnp
jb
xchg
or
out
lcall
xlat
mov
cmp
subb
xchg
lods
add
sub
jmp
mov
adc
push
stos
negl
xchg
inc
sub
jno
lcall
or
dec
and
sbb
mov
mov
add
orb
jg
out
cmp
xchg
ficoml
push
jns
mov
sti
ljmp
jbe
or
and
je
into
xor
mov
mov
mov
mov
in
in
mov
sub
stc
mov
push
push
das
push
xchg
test
inc
out
call
sbb
xor
mov
scas
xchg
js
mov
lds
mov
pusha
fcomps
cltd
je
dec
push
sbb
mov
sbbb
or
lea
pop
cli
xor
cmpsl
imul
mov
mov
shll
int3
mov
call
popa
dec
xchg
lods
xchg
hlt
dec
adc
jg
std
subb
fs
xchg
push
ret
ss
ret
movsb
pop
push
mov
cltd
mov
hlt
mov
cli
lds
inc
cld
inc
loope
sti
movsb
mov
test
loop
mov
out
cmc
sbb
outsb
ret
jp
and
xchg
sub
push
arpl
xchg
clc
stos
xor
call
xchg
mov
sub
stos
inc
stos
mov
mov
or
addr16
push
adc
nop
add
and
in
jecxz
or
loop
stc
rolb
mov
xchg
test
cli
sub
xor
fdivrl
scas
lods
icebp
ret
shrb
lods
cmp
clc
mov
test
sub
fdivrs
inc
mov
je
and
mov
fsub
sti
out
bound
fstpt
arpl
idivb
dec
imulb
cmpsl
sti
jecxz
xchg
ret
cmpsl
fwait
lds
mov
push
xor
loop
incb
jge
pop
xor
bound
rcll
cli
aas
outsb
push
loop
cli
xlat
and
and
dec
push
das
push
cmp
pop
mov
jb
pop
push
push
push
js
xchg
jecxz
test
addl
cmpsl
adc
roll
test
mov
cltd
jmp
mov
mov
leave
mov
lcall
and
pushf
cli
xchg
or
fistpll
les
mov
mov
jmp
jecxz
add
or
jmp
stos
jg
and
cmpsb
cli
popa
or
fidivs
mov
mov
mov
add
jp
std
jmp
je
pop
cmpsl
mov
into
sub
mov
imul
jno
xor
mov
hlt
and
xchg
or
mov
lea
test
cmp
pop
dec
jae
and
push
leave
leave
mov
fs
aas
fcmovnu
shll
clc
test
in
pop
mov
inc
movsb
cmp
dec
ffree
inc
test
mov
push
jg
movsl
and
aas
in
dec
pusha
cmp
out
das
xor
xchg
push
pop
mov
mov
xchg
ja
jmp
loopne
xor
dec
pop
mov
pusha
xlat
dec
sti
jecxz
sub
cltd
aas
pop
mov
imul
mov
mov
inc
dec
sbb
and
call
fists
or
hlt
fs
in
jbe
add
mov
xchg
cmc
in
leave
push
mov
ja
aam
cmpsb
cmc
mov
mov
inc
pop
lret
inc
decl
mov
push
jnp
movsl
cmp
into
sahf
jl
jmp
aaa
lods
and
mov
enter
popa
enter
push
das
push
sbb
into
and
sub
mov
xor
cmc
pusha
pop
sbb
insb
xor
mov
mov
mov
sarl
push
jmp
cmpsb
or
popf
fmull
mov
ljmp
je
addr16
fisttpl
call
inc
cmc
ds
xor
mov
adc
cmpsl
xor
pop
sti
xor
cmpsb
sub
add
dec
xchg
mov
mov
in
adc
ret
scas
inc
ja
xlat
gs
nop
rcll
stos
or
cmp
into
cmp
mov
gs
dec
rcrl
out
xchg
pop
push
in
faddl
push
fcmovnu
cltd
sbbb
xlat
popa
in
aaa
jp
jne
clc
mov
aas
lods
adc
push
in
jmp
cmp
jecxz
pop
in
lcall
into
jno
cltd
movsl
dec
das
or
out
adc
repnz
loopne
jae
outsl
fldcw
dec
jno
iret
mov
data16
leave
mov
daa
shl
cmc
cmp
into
mov
pop
jle
movsl
mov
cld
jne
jecxz
mov
out
stos
inc
dec
mov
xchg
and
je
xchg
lret
bound
inc
inc
and
pusha
jecxz
pop
push
movsb
lret
mov
stos
jne
fwait
popa
in
in
xchg
scas
jl
mov
and
mov
xchg
jl
int3
cmp
inc
ljmp
leave
cmp
or
jle
stc
jl
imull
cmp
pushf
inc
test
gs
fisttpll
cmp
sub
mov
xchg
dec
push
mull
mov
test
or
cld
mov
addr16
xchg
scas
stc
dec
movsb
xlat
outsb
loopne
xchg
loope
mov
mov
cmc
pop
jge
mov
ret
mov
cmpsl
mov
mov
scas
pop
cmpsl
jge
add
cmc
mov
scas
gs
imul
xchg
and
test
clc
mov
and
cmp
jnp
scas
int3
jmp
out
and
movsl
mov
cmc
push
cmp
fdiv
and
int3
insl
mov
daa
jecxz
cmc
mov
fxch
mov
movsl
xor
sbb
cmc
cmc
fdivrl
sar
jmp
test
sub
int3
in
shl
daa
add
add
mov
mov
arpl
cmpsb
leave
and
push
movsb
jl
mov
mov
ret
xchg
stos
push
adc
mov
fadd
sub
and
iret
mov
jecxz
cmp
movsb
aam
mov
mov
xor
jmp
cmp
inc
fsub
jo
sub
movsl
sub
mov
in
lods
pop
mov
or
xchg
ljmp
cs
add
dec
pop
add
or
inc
mov
mov
xor
xchg
push
ds
loop
mov
call
into
push
dec
dec
cmp
movsl
inc
popf
mov
push
sti
sahf
mov
shrl
lea
mov
stc
mov
lcall
mov
outsb
mov
sub
sbb
xor
lods
xor
xchg
inc
push
push
pop
sub
ljmp
cltd
mov
mov
xchg
loop
jp
mov
jno
cmpsl
sub
ret
ret
les
sbbb
mov
divl
mov
xor
int3
in
loopne
pusha
loope
sub
clc
popa
jnp
fwait
loopne
or
sarl
push
outsb
sahf
cmp
and
out
cmpsb
mov
rep
stos
mov
jbe
mov
push
cmc
sbb
jns
lcall
ficomps
stos
fdivs
stos
sub
sub
andl
push
sub
sub
xchg
ret
and
inc
push
ret
lcall
pop
push
jg
movsl
sub
ljmp
scas
pusha
cmpsl
and
movsl
stos
cmp
andl
imul
scas
lods
orb
jmp
jne
jne
or
loopne
roll
repz
mov
mov
test
push
mov
mov
imul
cmpsb
mov
call
jnp
push
mov
jbe
xor
sbbl
test
pop
and
popa
sti
sub
fisttps
or
arpl
imul
push
jle
lahf
mov
adc
xchg
mov
test
adc
xchg
xchg
add
ss
add
xor
fwait
push
int
insl
sahf
loop
subb
add
jl
or
mov
inc
shrl
in
mov
out
andb
mov
in
mov
or
rorl
pop
cmpsl
loopne
repz
push
dec
cltd
jne
test
add
mov
in
pop
and
mov
imul
mov
sub
jne
ljmp
xchg
ja
push
jns
sbb
dec
dec
aaa
stc
orb
es
push
xchg
sub
repnz
mov
sbb
flds
imul
stc
adc
xchg
into
aam
adc
loope
mov
sub
adc
mov
push
scas
addr16
jmp
and
add
sub
sti
mov
dec
mov
addr16
or
pop
mov
repnz
inc
imull
jne
jl
and
mov
hlt
jb
lods
add
xchg
cmp
addr16
push
xor
cmp
fdivr
imul
sbb
and
mov
or
stos
adc
inc
call
sub
cmp
pop
add
adcb
addr16
jne
sub
lods
add
imul
addr16
cmpsb
mov
and
stc
iret
iret
and
and
cmp
sbb
xchg
pop
cmp
cmc
and
jno
xor
or
test
cmpl
repz
inc
add
movsl
mov
test
sub
insb
lret
dec
pop
mov
shll
leave
mov
rcrl
lea
es
pop
js
je
fs
in
ss
mov
loopne
pop
leave
cmpsl
mov
shll
xor
test
pushf
adc
lock
test
cmpsb
ret
addr16
cmpsl
arpl
and
cmpsl
fdecstp
xchg
xor
js
cmpsb
sti
rcll
jmp
jno
xchg
ficompl
xrelease
jmp
mov
add
mov
inc
xor
out
fimuls
mov
shrl
cmpb
je
or
gs
mov
insl
lcall
xchg
or
in
cmpsl
xlat
jecxz
mov
sub
and
es
xor
ds
mov
ret
jnp
cld
testb
pop
push
daa
test
negl
pop
in
sbb
lret
cmp
xor
xchg
mov
shll
jb
negb
pop
aam
mov
and
xchg
testb
mov
mov
xchg
jmp
ret
cltd
xchg
sbb
test
fsubrl
lods
mov
xchg
dec
nop
aad
scas
out
lret
aam
js
sbb
inc
test
jecxz
out
jmp
stos
add
inc
out
and
cld
subb
fadds
movsl
and
js
in
push
aaa
adc
sbb
jns
in
jmp
mov
addr16
xor
popa
scas
push
mov
les
das
stos
out
stos
bound
xor
cmpsl
leave
jp
arpl
mov
ds
lret
mov
in
in
pop
and
leave
test
notl
loop
call
ja
jp
jbe
and
dec
call
cmp
subl
and
xor
div
cli
jae
adc
jnp
cmp
mov
movsb
loop
dec
and
xor
mov
into
xor
mov
ror
xor
cli
xor
ja
add
dec
cmp
je
or
add
aad
xor
dec
mov
push
test
xor
cwtl
cmpl
and
xor
xor
xchg
or
xor
jmp
adc
cmp
jnp
mov
push
xor
inc
mov
loope
jne
pop
dec
pop
test
pushf
and
shrb
pusha
mov
popf
sarl
and
jecxz
cmp
sbb
fiaddl
sub
lods
sbb
jmp
push
out
xor
dec
push
fcompl
fdiv
loop
dec
roll
xchg
cmp
mov
hlt
popa
shrb
outsl
mov
jne
loopne
sbbb
and
cmpsb
mov
loopne
negl
scas
and
dec
pushf
and
stos
mov
nop
in
pop
jbe
es
leave
or
dec
bnd
lods
adc
or
std
mov
or
push
xchg
mov
lock
clc
cmpsb
sub
cmp
push
popa
or
cld
mov
aam
out
jmp
dec
pushl
std
cmc
into
insl
sub
mov
cmp
mov
mov
mov
test
mov
sub
gs
add
mov
mov
jmp
dec
mov
outsb
fidivrs
rcrl
fcoml
mov
fnstcw
mov
sbb
sarl
push
pusha
pushl
dec
mov
pop
xchg
mov
aad
or
jl
es
cmp
add
fadd
test
ja
sbb
jmp
push
and
popf
lods
lds
movsl
shll
rorl
cmp
xor
pushf
into
leave
lods
cmpsl
lret
push
js
subl
mov
add
xchg
lret
int3
mov
push
fildl
or
bound
and
out
aam
lea
repz
inc
in
sbb
lods
inc
pop
ljmp
or
rcr
aam
cltd
hlt
sub
mov
cmp
movsb
icebp
dec
loope
movsb
lret
das
jb,pt
jne
call
dec
inc
pop
repz
dec
fwait
scas
cmp
decl
nop
in
push
sbb
dec
mov
jne
push
call
mov
repnz
mov
lret
in
bound
out
cmpsl
sbb
test
and
pop
cltd
es
jo
nop
jmp
cld
or
pop
bound
ja,pt
das
cli
repz
and
neg
jg
dec
sub
jae
or
xor
fldcw
and
imul
cmp
cltd
dec
mov
daa
stos
test
and
imull
f2xm1
push
cld
fistl
push
outsb
mov
jecxz
mov
lods
mov
aam
fs
dec
push
and
loopne
scas
lret
les
out
jne
mov
and
out
sbb
inc
push
sub
mov
dec
jns
mov
stc
mov
jge
sbb
jo
mov
push
sbb
stos
arpl
mov
and
mov
imul
mov
mov
dec
push
push
lret
cli
xor
and
sti
pop
int
ret
mov
jmp
scas
add
inc
ds
sti
cmpsb
mov
scas
jp
lea
cmpsb
loop
lret
loope
xor
js
movsl
mov
mov
ret
sbb
popf
fsubl
sbb
orl
jmp
jle
xchg
iret
cmpsl
add
sub
iret
sbb
dec
mov
mov
leave
jns
mov
add
sub
mov
imul
icebp
push
nop
xchg
int
lods
push
fsub
lret
popf
lods
jle
push
jl
mov
cmp
push
adc
dec
test
hlt
and
sub
dec
sub
leave
mull
and
aam
cmp
sti
movsb
icebp
popf
mov
sub
into
ljmp
movsb
adcb
stos
stos
std
data16
sub
xor
cmpsl
xor
cmpsb
dec
xchg
and
jp
test
xor
push
cmpsl
daa
or
mull
sbb
pop
ret
mov
lret
or
mov
add
out
xor
divb
mov
bound
ljmp
mov
hlt
popf
cmp
loopne
loopne
sahf
out
popf
lea
push
lret
cs
xor
das
daa
test
out
bound
mov
lret
cmc
mov
loopne
xor
dec
lahf
jb
xchg
outsb
inc
add
cmp
or
mov
cmpsb
enter
or
ds
and
aas
pop
sbb
sbb
push
dec
xchg
and
stos
mov
and
ds
inc
ss
sbb
push
add
dec
pop
popa
mov
push
loop
cmp
dec
cmpsb
ljmp
mov
mov
mov
out
inc
jne
mov
repnz
dec
jmp
stos
push
fstpt
fs
inc
xchg
xchg
pop
addb
mov
pop
mov
cmc
inc
push
stc
sub
imul
addb
test
cmpsb
cmpsl
test
out
mov
push
shll
out
cmp
dec
cld
cwtl
fidivs
lds
fsubl
push
pop
pop
mov
push
cmp
je
negl
sub
into
cmpsl
sarl
sub
in
mov
les
lods
into
addr16
mov
and
cmp
subb
and
xor
push
gs
jne
pop
popf
imul
nop
es
sub
test
jne
push
negb
mov
adc
lahf
cmpsb
ljmp
inc
xchg
cmpsl
mov
or
add
sbb
ljmp
scas
in
cli
cs
daa
popa
mov
jmp
sub
sub
fcoml
pusha
cltd
adc
push
dec
aad
movsb
mov
mov
xor
xchg
jae
mov
xchg
mov
adc
adc
jne
shll
mov
xor
jp
jmp
mov
and
push
mov
add
orl
sub
sub
mov
sub
cmp
xchg
sub
mov
testl
push
stc
aaa
and
in
xor
pop
mov
mov
or
repz
data16
or
daa
ja
mov
cmp
inc
sbb
rcl
mov
es
ds
movsl
aam
jp
jne
in
or
aad
sub
cmpsl
dec
or
out
mov
outsl
xor
jg
inc
add
fldt
mov
pop
je
jns
addr16
jne
sti
stc
into
das
aam
aam
in
mov
roll
ss
out
cld
repz
jl
mov
mov
jo
pop
enter
js
xor
out
mov
imul
mov
push
mov
out
xchg
arpl
outsl
loopne
subb
scas
push
in
out
push
sub
and
mov
cmp
and
pop
sbb
test
dec
sbb
xchg
mov
ljmp
jnp
in
je
shrb
mov
mov
fists
mov
mov
imul
fistl
fsubrl
or
mov
xor
popf
mov
cmc
scas
call
cmp
sti
test
cld
imull
test
pop
loop
xchg
ret
es
movsb
xor
lret
add
or
pop
mov
cvtdq2ps
bound
stos
xchg
sub
popa
fimuls
mov
xor
nop
cmpsb
jbe
aaa
lods
popl
fbld
into
jge
rcr
mov
pop
and
cmp
in
sub
and
mov
pop
mov
loopne
orl
aaa
in
mov
jb
xor
leave
dec
mov
js
pop
repz
push
cltd
push
jecxz
sub
jbe
loopne
ret
cs
dec
stos
lahf
stc
cmpsb
jae
xlat
test
push
cmc
dec
sub
cmp
test
jge
mov
ds
mov
adc
mov
cmpsb
jp
and
xor
mov
cmp
push
mov
add
mov
fisttpll
mov
cmpsb
jmp
pop
xor
jl
add
jne
push
imul
mov
dec
jle
cmpsl
or
cwtl
lock
pop
sub
lods
outsb
sbb
in
stos
ds
ljmp
mov
and
push
xor
aas
cmpsl
push
dec
push
dec
inc
ljmp
movsb
sbb
pushf
jbe
inc
enter
or
loope
jae
addr16
mov
lea
dec
cmp
jmp
add
mov
lods
push
test
jge
xchg
inc
sub
xor
daa
and
adc
jno
mov
leave
inc
cmp
stos
aas
repnz
movsl
out
mov
xchg
call
jl
int3
popa
enter
mov
sub
jl
dec
adc
out
mov
push
jl
mov
fidivs
pop
or
imul
push
xor
xchg
cld
lret
or
cld
inc
cmpsb
cmp
test
or
mov
push
mov
sub
sbb
push
cmc
leave
mov
mov
sbb
sar
mull
ds
mov
and
mov
pop
lcall
out
nop
sbb
fcomps
sub
sbb
add
mov
sbb
pop
or
add
mov
lahf
ljmp
push
inc
mov
je
sub
js
xlat
ds
mov
negl
adc
mov
xor
mov
mov
and
dec
sub
xchg
stos
inc
jecxz
roll
pusha
enter
or
frstor
pop
jbe
in
mov
mov
cld
es
push
inc
pop
mov
insl
xchg
xchg
mov
cmc
jl
outsb
leave
scas
xchg
js
adc
pop
div
add
std
divb
push
pop
into
dec
fcomi
cli
mov
xchg
notb
adc
mov
sub
mov
xchg
call
push
in
into
fxtract
imul
movsl
xchg
push
sbb
leave
in
test
and
mov
push
idivl
lcall
xchg
cmc
mov
mov
xor
pop
popf
mov
ret
and
dec
sub
insb
add
inc
or
push
pop
sub
mov
or
int3
test
xchg
mov
or
adc
gs
cmp
cltd
sbb
inc
lea
cmpsl
adc
lods
push
cmpsb
xchg
and
pop
or
sarl
imul
jge
pop
cmpsb
popf
and
mov
xchg
pop
loope
sbb
pop
daa
and
popa
sub
push
cmp
push
pop
ss
xchg
xor
jp
es
adc
dec
add
cmp
mov
es
into
sti
cwtl
xchg
push
test
mov
imul
add
add
ljmp
movsl
cli
cltd
and
addr16
mulb
dec
mov
cmp
push
insl
inc
mov
mov
fisttps
lea
pop
mov
ja
pop
ss
jmp
movsl
xchg
insb
sub
js
inc
loope
jp
sub
sub
mov
dec
xchg
mov
loope
dec
out
into
aaa
cmp
stos
mov
jbe
inc
push
push
sub
mov
sti
inc
push
into
stos
xor
shl
incl
mov
ljmp
mov
lods
hlt
mov
xchg
lods
stos
sbb
sbbl
adc
sub
sub
jmp
test
cmp
mov
mov
loopne
int3
shll
orb
inc
les
data16
sbb
mov
movsl
into
in
mov
xchg
jne
sub
xlat
lods
repz
mov
test
imul
jl
mov
dec
xchg
pop
lcall
cmp
divb
in
andb
jo
inc
pop
in
mov
dec
mov
mov
popa
mov
push
loope
mov
or
ljmp
mov
xchg
sub
ljmp
pop
mov
add
insl
out
push
add
mov
ret
lds
stc
hlt
js
cwtl
cmp
mov
pop
cli
xor
sbbb
lods
inc
ss
inc
popa
mov
or
hlt
xchg
and
scas
dec
and
fisttpl
jns
cmp
stos
push
sbb
ljmp
mov
adc
icebp
popf
lret
dec
out
cmp
fdivs
push
adc
mov
icebp
out
data16
jecxz
sbb
jmp
js
push
lods
push
lods
mov
mov
xor
xrelease
aas
pushl
mov
mov
jbe
dec
fisttpl
test
leave
mov
fwait
mov
inc
xchg
mov
aaa
lret
pushf
lret
cli
sub
les
lret
mov
jecxz
cmp
dec
push
jecxz
adc
xchg
pop
imul
lods
mov
aas
sub
xor
or
test
jp
insl
mov
call
mov
or
lret
addr16
mov
sub
pop
mov
out
xchg
ds
xchg
xchg
enter
adc
aaa
es
inc
and
mov
aaa
lahf
fisubs
mov
gs
test
jp
insb
push
inc
imul
pop
test
call
lret
jb
aad
mov
mov
inc
cmpsb
mov
cmp
or
or
cltd
icebp
in
rcrb
stos
and
sub
sti
in
dec
add
movsl
mov
cmc
pop
fbstp
push
repz
add
imul
mov
push
out
das
xchg
daa
xor
test
jns
pop
push
sub
icebp
xchg
repz
jno,pt
out
shrl
test
mov
lock
push
insb
inc
xor
fwait
push
pop
xor
lds
das
adc
repz
and
clc
xor
jae
mov
push
int
in
mov
aaa
mov
cs
sub
je
and
mov
push
pop
subb
leave
or
dec
fmull
es
ljmp
sti
mov
xchg
xor
scas
lds
imul
mov
enter
mov
stos
cmp
mov
or
dec
stos
mov
mov
xor
xchg
mov
test
stc
cmpsl
mov
out
stos
jmp
jbe
dec
or
data16
popf
test
xor
jp
mov
cmpb
out
movsb
sbb
cli
or
jmp
daa
mov
sub
xchg
mov
mov
mov
jbe
jecxz
add
in
subl
or
cmc
mov
lcall
ret
or
out
lcall
enter
dec
lahf
cmpsb
arpl
call
test
pop
into
movsl
scas
adc
shlb
mov
cli
adcb
fmull
mov
and
lret
lods
out
fstpt
outsb
ret
xchg
orl
push
lods
mov
sbb
and
into
or
mov
jl
pop
rcll
lods
sti
cld
xor
loopne
fistl
push
jl
fs
lret
lock
xchg
cmc
push
call
and
sub
jne
inc
mov
add
lock
jmp
jmp
loope
mov
pushw
and
fsubrl
stc
mov
or
or
popa
cmpsb
jecxz
arpl
jl
push
inc
mov
je
scas
xchg
and
icebp
cmp
ss
out
insb
pop
mov
mov
lahf
and
dec
out
sbb
mov
cmpsl
lods
cmp
add
ja
pop
cmp
add
aas
lea
rcl
arpl
adc
jecxz
es
fwait
es
fbstp
push
int3
popf
sub
aam
ljmp
xchg
jmp
xchg
dec
into
adc
fsubrs
lock
in
xchg
frstor
imul
rorb
fstps
andl
sbb
in
or
sub
stos
cltd
xchg
pop
ror
vmovlps
push
fimuls
js
mov
dec
ja
jne,pt
push
ds
cwtl
pusha
push
and
pusha
push
push
xchg
xlat
call
sub
in
fistpl
outsb
aad
in
out
and
jp
test
sbb
cld
scas
push
mov
in
mov
repnz
sub
jnp
or
fstpt
nop
mov
cmpsl
cld
into
jmp
or
mov
and
mov
dec
loopne
or
iret
negl
or
and
dec
and
aaa
adc
sahf
inc
cmc
ljmp
pop
cmp
insl
add
mov
fs
ljmp
xchg
xor
les
mov
fcoms
mov
insl
mov
dec
push
adc
adc
sbb
cmp
inc
push
fldt
push
sbb
xchg
js
xchg
andb
sbb
xor
ror
mov
nop
sti
add
or
cmpsb
cmp
es
int3
dec
daa
into
sub
imul
or
lcall
dec
inc
mov
mov
movsb
cltd
or
test
test
cmpsl
adcb
cli
sbb
cli
inc
stos
mov
mov
mov
js
ljmp
and
sub
pop
enter
dec
daa
mov
jg
jge
adc
enter
iret
xor
jecxz
mov
enter
and
and
adc
sti
aaa
jne
shrb
mov
jl
into
out
xchg
and
sub
mov
popa
adc
push
dec
sub
hlt
leave
outsl
leave
cli
xor
push
cmc
daa
jg
or
sub
aad
scas
or
mov
cmpl
or
and
pusha
repnz
jg
xchg
imul
mov
pop
jbe
sbb
sbb
pushl
mov
lods
popa
xchg
lods
xchg
mov
fisttpll
insl
mov
imul
jg
lods
mov
outsb
loope
and
xor
pushf
add
cmp
and
sub
das
jp
into
in
mov
in
mov
mov
ficoml
mov
gs
in
mov
add
imul
mov
lods
or
cmp
cmpsb
and
out
data16
sub
sarb
and
lods
cmp
xchg
stc
stc
sub
out
add
mov
xchg
sbbl
fwait
inc
sub
ror
js
aad
sub
push
call
lods
adc
fnstenv
xchg
push
add
jp
sub
mov
sbb
and
sub
daa
in
mov
mov
in
xchg
jb
iret
push
jo
sub
push
inc
roll
popa
lods
push
xor
sub
rcrb
stc
xchg
inc
aam
xor
outsl
mov
push
xchg
and
sub
nop
lcall
stc
shll
dec
movsb
push
loope
mov
aad
bound
mov
mov
aam
sbb
sub
les
mov
add
rcll
pop
popf
push
les
fwait
inc
sub
adc
adc
jl
lods
jp
shrl
cmpsb
dec
lea
scas
jp
lods
xchg
mul
adc
inc
mov
adc
call
jle
lods
adc
cmpsl
out
xor
scas
call
mov
popa
push
push
lret
jnp
xor
xor
std
rcrl
dec
iret
push
mov
or
ljmp
mov
lret
inc
push
sub
daa
push
stos
xor
or
les
movl
loopne
mov
pop
cmpsb
pop
jecxz
daa
xchg
shll
in
inc
movsb
rorb
pop
popa
lret
out
fdivrl
dec
pop
cmpsl
imul
xor
ss
jbe
rolb
inc
ficoml
sbb
xchg
or
xchg
stos
sub
lcall
orl
out
sub
out
aaa
imul
sub
pushf
icebp
jecxz
mov
test
jmp
ljmp
loopne
jmp
aas
pushl
negb
mov
out
mov
call
es
ss
inc
push
loope
jns
aad
movl
gs
gs
sub
movsl
add
or
jae
shlb
jae
sub
insb
dec
lods
adc
and
push
lock
inc
push
ja
lds
xchg
shll
leave
loope
imul
xor
dec
and
sbb
xchg
movsb
sub
jb
test
dec
mov
data16
nop
or
mov
inc
sbb
sbb
xor
cld
movsl
ljmp
popf
sub
lcall
sub
fwait
sbbb
rcll
or
test
push
mov
inc
rcrl
dec
cltd
mov
ret
jmp
into
ficoms
popf
fdivs
and
ret
sbb
cld
add
dec
dec
xchg
mov
jp
test
test
or
cmp
and
out
lcall
lret
and
test
movsl
dec
mov
dec
xor
repnz
aam
mov
jmp
fldenv
ds
dec
xchg
in
repnz
add
scas
inc
dec
mov
nop
pushl
ss
mov
outsl
sub
add
std
jle
ds
rcrl
push
into
into
mov
jne
shlb
sbb
lock
mov
xchg
pop
inc
ffreep
repnz
bound
clc
jecxz
out
push
cmp
sbb
test
ljmp
add
push
add
xor
je
pop
push
jbe
and
iret
push
repnz
pushf
mov
sbb
mov
pop
ds
mov
jnp
cmpl
loopne
or
mov
movsl
cmpsl
cli
push
popa
inc
mov
gs
push
mov
cmp
repnz
xchg
mov
fdivrs
shlb
adc
aam
sarb
inc
push
addl
sbb
enter
fwait
je
cs
jo
hlt
gs
jbe
or
popf
ss
cmp
out
dec
cld
fcomi
xor
loope
pop
mov
add
xchg
mov
xchg
mov
sbb
aam
pop
dec
inc
ljmp
xchg
cwtl
mov
lods
adc
fistpl
movsl
dec
jecxz
cmp
jge
popa
xor
sub
mov
sahf
sahf
hlt
sarl
and
mov
mov
aam
test
push
jbe
inc
sti
xchg
lds
aam
add
mov
jnp
xchg
pop
lret
xor
pusha
sbb
mov
daa
test
or
push
lds
dec
mov
mov
add
fsubrl
pop
es
fdivrs
cmpsb
cmp
dec
push
and
mov
xchg
andl
mov
insl
xlat
bound
adc
sbb
out
lods
sub
and
decb
push
add
das
enter
aas
insb
scas
fcmovnbe
push
bound
in
push
ljmp
xorb
or
mov
dec
stc
sub
push
sub
stos
mov
gs
mov
lahf
adc
sub
mov
arpl
daa
test
into
mov
push
mov
xchg
push
out
sub
test
inc
pop
leave
push
out
arpl
test
jge
cmpsb
sub
cltd
and
pop
int3
push
cmp
stos
shrl
fistl
mov
call
dec
adc
adc
iret
fildll
mov
xor
call
pop
into
popa
and
or
movsb
mov
cmp
out
mov
mov
mov
sub
mull
sub
data16
insl
sub
and
push
inc
and
sbb
mov
loop
pop
and
mov
push
xchg
and
shrb
fsubs
push
sub
mov
and
and
shrl
mov
and
daa
bound
push
mov
cmp
mov
arpl
jne
cmp
push
arpl
mov
addr16
dec
xor
sarl
out
xchg
and
xlat
xchg
repz
lahf
ret
in
fcoms
mov
cltd
out
lret
jmp
mov
test
cltd
mov
xchg
add
cmpsl
test
mov
xchg
jmp
sbb
mov
mov
cltd
scas
std
xchg
mov
and
mov
std
mov
xchg
mov
adc
xor
scas
in
mov
popf
pop
adcb
lcall
mov
outsb
sub
aam
mov
inc
xor
or
jge
sub
mov
jl
in
pop
scas
les
int3
jmp
loope
mov
fimull
std
push
xchg
sti
jmp
or
sub
in
addr16
xor
leave
es
push
xorl
test
inc
mov
xlat
lock
lods
dec
jmp
movsl
xchg
mov
and
lds
movsl
push
divb
out
add
xchg
pop
stc
or
out
test
aas
push
gs
outsl
adc
je
sub
inc
push
add
test
mov
loopne
xor
jbe
out
inc
ja
xor
or
jl
lods
mov
in
aas
rolb
adc
dec
cmpsl
mov
xor
push
jmp
mov
inc
mov
inc
bound
push
gs
stc
push
inc
xor
dec
inc
pop
out
test
jecxz
mov
mov
or
cltd
jl
enter
adc
mov
inc
jp
stos
fdivs
inc
jg
push
imul
addb
scas
daa
out
sub
dec
sub
out
mov
fnstenv
rorb
xor
and
mov
ljmp
mov
dec
cmp
addb
sub
pop
lretw
int3
test
dec
into
jmp
pop
mov
push
and
popf
lods
dec
add
cltd
xor
mov
xchg
jle
sub
jo
xchg
pop
mov
cmp
aam
mov
clc
shrl
movsb
leave
xor
mov
insb
fisubrs
out
xor
mov
dec
repnz
lods
cltd
or
out
jle
sbb
mov
sub
xlat
repnz
es
test
jmp
test
leave
dec
and
outsl
jb
bound
je
xlat
jo
mov
xchg
add
xchg
andl
loop
sub
scas
lret
das
sub
pop
andb
inc
push
int3
sub
mov
fs
adc
aam
cmp
js
xlat
cltd
loopne
into
int3
clc
ja
sbb
call
jle,pn
or
mov
or
push
loopne
js
pop
hlt
cs
xor
je
cmpsl
es
dec
mov
fs
es
mov
out
insb
xchg
cmp
arpl
icebp
push
mov
lcall
sbb
in
dec
out
mov
and
push
add
loop
scas
jge
cmp
mov
cmp
inc
cmp
pop
jmp
ret
cmpsb
xchg
xor
xchg
xchg
xchg
fstl
dec
add
daa
cmpsl
fdivrl
add
or
mov
sub
lret
jmp
cltd
aam
mov
mov
jae
sub
lahf
mov
mov
or
add
pop
in
in
pusha
push
leave
lret
jle
jns
xor
mov
sbb
sub
test
jecxz
test
mov
idivb
jge
jmp
or
stos
popf
mov
push
push
call
mov
mov
sub
mov
sbb
mov
push
ljmp
sub
and
enter
fmull
dec
cmpsl
sbb
int3
or
jne
ror
xor
jbe
sti
sti
or
imulb
test
mov
shll
and
lock
mov
adc
outsl
in
dec
mov
lcall
test
into
and
and
push
inc
mov
push
push
aaa
lock
out
clc
jge
orl
loop
stos
mov
addr16
or
decb
jmp
mov
in
pop
mov
movsb
std
mov
addr16
add
jecxz
mov
mov
mov
mov
movsb
loopne
call
sti
outsb
and
mov
loopne
mov
xchg
call
jle
cmp
jbe
gs
enter
testl
out
add
mov
dec
and
sub
push
mov
daa
mov
ds
mov
inc
cmp
movsl
int3
dec
nop
mov
lods
mov
fincstp
xchg
mov
fistps
fsubrs
shrb
adc
out
gs
shrb
mov
pop
std
mov
xchg
lret
add
shlb
add
in
or
xchg
cmp
mov
iret
and
mov
mov
daa
and
sbb
in
inc
arpl
cltd
in
cmpsb
pop
test
jnp
lahf
cmp
jbe
movsl
xlat
mov
loope
xor
push
pop
sbb
js
cld
pop
adc
mov
addb
mov
push
jbe
movsl
jp
jns
loope
xor
sbb
and
xorb
inc
arpl
and
ret
cmpb
lea
enter
mov
and
rolb
push
sub
xchg
insb
cmpsb
orb
jecxz
out
mov
test
loope
xor
push
pop
sbb
andb
mov
cmp
mov
jnp
rol
lea
xlat
movsl
ret
scas
sub
mov
adc
and
xorb
pop
arpl
and
ret
cmpb
andb
mov
jbe
movsl
jne
mov
ret
jl
in
popa
sub
mov
inc
mov
adc
inc
movsb
mov
enter
mov
add
notl
xchg
add
push
or
lcall
stos
test
rcrl
jo
out
push
sbb
adc
jg
in
push
test
mov
and
bound
sub
stos
lods
jecxz
sub
mov
sub
or
loopne
inc
mov
cmp
in
in
scas
inc
popa
cmpsl
cmpsb
lods
fnstenv
pusha
imul
jbe
xchg
pop
and
roll
scas
das
xchg
cmp
mov
adc
popa
imul
xor
and
clc
or
cmp
or
cmpsb
test
sbb
mov
pusha
xchg
dec
xor
sub
cmpsb
icebp
cmpsb
mov
in
pop
add
pushf
stos
or
push
mov
mov
and
stos
mov
insl
sbb
and
into
test
movsb
lea
popa
je
daa
imul
cltd
jnp
pushf
and
jmp
mov
xchg
leave
mov
aad
cmpb
push
gs
sub
call
sub
jmp
xchg
cld
bound
jle
movsb
xlat
loopne
cmp
daa
mov
sbb
sub
addl
insb
repz
xor
movsl
jmp
arpl
fwait
popf
jp
xchg
pushf
jmp
xchg
mov
cmpsl
inc
jg
aad
cld
jnp
movsb
lret
mov
stos
imul
je
fldenv
ss
mov
push
leave
int
shll
aam
push
mov
xor
lds
stos
or
int
in
mov
pop
insb
gs
aaa
cli
mov
cld
sbb
jmp
ret
sahf
mov
push
icebp
sub
xchg
push
mov
or
js
cmpsl
sub
inc
shrb
sbbb
out
lods
out
enter
in
in
mov
out
out
xchg
pop
mov
jno
mov
sub
les
arpl
mov
adc
mov
xor
inc
mov
push
loop
jb
test
mov
dec
lods
cmc
lret
inc
out
pop
mov
sbb
out
push
jne
mov
and
mov
add
or
test
js
ficomps
push
or
and
imul
outsb
and
pop
aaa
stos
jmp
aam
adc
por
repz
xchg
jbe
mov
popf
outsl
dec
or
js
dec
in
es
fldenv
sub
je
sub
add
push
push
in
cs
push
jne
stc
jmp
jp
sahf
mov
and
divb
fistps
mov
pusha
xchg
in
fsts
xor
popf
outsb
adc
xchg
pop
push
and
cwtl
test
xor
popa
push
in
loope
insl
push
scas
lods
mov
and
xchg
mov
addr16
xchg
ljmp
lods
sub
inc
movsb
lcall
xor
cmp
cld
fdivrl
push
cmp
push
xlat
sti
push
test
orl
std
mov
or
data16
add
pusha
lods
dec
idiv
mov
addb
xchg
inc
psadbw
mov
dec
adc
test
lret
out
dec
or
jae
fistpll
popf
cmp
inc
outsb
jno
mov
leave
stos
pop
scas
sbb
test
enter
cld
or
xchg
pusha
add
sbb
mov
daa
test
dec
mov
stos
cmpsb
fists
aam
cmp
inc
inc
loope
mov
sub
add
aas
sti
ret
das
stc
cmpb
sbb
cmp
loop
lods
adc
insl
push
fs
mov
lcall
dec
daa
jo
pop
sub
imul
xlat
adc
pop
xor
in
cmp
stos
mov
mov
cmp
pop
pusha
ljmp
dec
cmpsb
pop
cmpsl
sahf
call
lcall
pop
stc
and
jmp
cmpsl
sti
outsl
sub
dec
sub
test
das
aam
pushf
pop
int3
dec
push
imul
mov
pop
xchg
sub
cmc
in
cmp
roll
js
push
ret
push
xor
in
push
inc
jno
and
mov
jl
sbb
mov
bound
and
daa
pop
int
sub
sub
push
lods
loope
test
mov
or
daa
push
shll
jb
loopne
ljmp
jge
out
mov
cmp
mov
lods
out
lcall
push
in
xor
sub
repnz
movsl
stos
jne
mov
cmp
test
xor
add
int3
movsb
lret
or
xchg
in
push
outsb
push
jge
cmp
jb
lock
cmpsb
xor
jmp
xchg
push
mov
mulb
cli
xor
xlat
mov
mov
sub
push
inc
add
mov
sub
add
adcb
jl
sti
stos
mov
call
into
pop
mov
fcmovnb
js
jmp
cmpsl
push
xor
inc
hlt
cli
and
sti
push
nop
lea
sti
jb
arpl
imul
jle
mov
mov
imul
notl
and
cmpsl
lcall
in
out
call
push
nop
cmpsb
xlat
dec
cmp
lods
cmp
dec
int3
scas
imul
in
cmpsb
jne
push
movsl
xorb
mov
addr16
idiv
xchg
dec
mov
into
stos
int3
dec
jg
cmpsl
dec
pop
icebp
adc
or
pop
jae
cmp
lea
or
mov
jmp
pop
push
and
clc
lods
icebp
and
mov
dec
shll
cmpsl
sbb
adc
sbb
dec
jge
adc
jbe
jo
ja
pop
pop
sub
cmp
jmp
push
mov
rcrl
mov
pop
leave
cmp
pop
negl
pop
mov
scas
xor
jne
stos
push
shll
add
mov
cmp
sub
repnz
jecxz
cs
xchg
loop
imul
sbb
lret
and
cmp
scas
dec
lods
dec
ja
cmp
adc
and
aaa
cmpsl
dec
iret
pop
inc
scas
cli
repnz
add
fldt
pop
out
dec
shll
rcrl
data16
push
rcrl
push
imul
mov
mov
cs
aam
lahf
aaa
stos
adc
popa
aam
testl
scas
sub
cmp
sub
outsb
sbb
sti
adc
pop
ret
cltd
mov
fdivl
shl
xchg
dec
push
jmp
mov
cmpsl
mov
pop
mov
popf
out
or
inc
dec
bound
jbe
ss
xor
mov
mov
push
xor
xor
push
and
xchg
add
ret
mov
testb
pop
push
add
sbb
and
sub
scas
mov
repnz
loope
outsl
mov
sbb
movsb
inc
xchg
test
cld
mov
popa
jne
call
inc
xchg
mov
idivb
mov
es
cld
repz
push
dec
test
and
push
fst
loopne
mov
mov
into
sub
movsb
pop
movsl
xchg
push
xchg
lods
rclb
jb
xchg
cmp
sarb
ret
jge
cld
xchg
ret
mov
and
xchg
jecxz
ja
add
pop
repnz
test
and
mov
setbe
jecxz
jp
cmp
jns
mov
bswap
fstpl
les
push
xchg
shlb
les
sti
xchg
sub
sub
ljmp
insl
repnz
fstps
lcall
jo
popa
mov
mov
pop
out
jae
lods
inc
fmulp
or
repz
iret
pop
cmp
imul
ss
mov
mov
pop
test
sti
push
icebp
inc
into
cmpsb
leave
lods
cmpsb
jo
dec
sti
and
rorb
test
mov
mov
inc
ss
or
loop
push
and
xchg
cmpsb
leave
cmp
movsl
inc
inc
fstpt
and
xlat
fs
push
lcall
mov
xchg
sbb
hlt
push
mov
ja
or
push
dec
or
jle
mov
bound
xor
movsl
lret
into
cmp
pusha
insb
js
cmpsb
mov
or
sarl
cli
jno
lret
push
xor
cmp
xor
daa
mov
dec
sub
idivl
rorl
or
mov
xor
mov
mov
cmpsl
lds
mov
jmp
popf
mov
stc
sarl
test
negl
aaa
pop
fmul
lods
mov
add
pop
mov
push
xor
cli
test
out
jno
lea
dec
jmp
imull
scas
call
add
test
insb
sbb
xor
mov
push
imul
xchg
mov
cmpsl
push
or
add
fs
loope
xor
mov
fidivrs
lahf
es
hlt
cmc
insb
lds
dec
out
icebp
mov
sub
mov
arpl
pop
mov
movsl
mov
std
push
push
mov
cmp
jge
ret
lahf
test
movl
push
imul
das
add
xor
sub
lods
sahf
enter
push
js
sub
call
xchg
cmp
push
adc
cmpsl
mov
inc
mov
lods
jmp
pop
mov
cmpsl
dec
xor
push
insl
jg
mov
pusha
or
mov
xor
lret
pop
jo,pt
mov
pusha
xor
dec
test
mov
sti
push
ss
mov
add
jg
xor
movb
in
push
fadd
adc
mov
lods
mov
jg
pop
mov
xchg
cmp
loop
add
dec
mov
cmc
and
sub
mov
popf
aas
add
and
xchg
cs
ret
cltd
in
pusha
out
and
sbb
cmp
imul
fs
aas
mov
cmpsb
or
jb
dec
sar
popa
jb
sbb
scas
xor
mov
mov
fildl
push
loop
pop
mov
mov
pusha
stos
mov
je
mov
push
jb
and
jns
jecxz
or
push
and
mov
mov
pop
ljmp
cmpsb
or
int
fdivs
ret
cmpsb
and
push
mov
mov
and
rcll
in
cmc
sbb
add
jne,pt
scas
adc
adc
test
lea
mov
leave
hlt
es
jl
sub
clc
and
mov
out
insb
es
push
insl
lcall
sbb
call
fmuls
fcoml
mov
xor
cmp
and
clc
mov
movsb
xor
bound
das
fwait
pop
xchg
jl
sub
stos
mov
jmp
fnstsw
dec
and
push
sub
sbb
in
mov
inc
adcl
repnz
cltd
jb
aam
dec
in
pop
fiaddl
lret
xchg
lret
ds
es
fucomi
push
mov
inc
xchg
pushf
shlb
xchg
push
rcr
mov
sub
push
sub
mov
les
das
mov
cs
fsubr
push
iret
xchg
iret
sbb
icebp
mov
cmpsb
lahf
pushf
cmpsl
es
popf
je
xchg
test
ret
jmp
pop
mov
shl
push
fldcw
cli
mov
int
mov
mov
xor
cmp
jbe
call
dec
cmpsl
test
push
mov
dec
cmpsl
test
test
push
test
inc
pop
sahf
cmpsl
mov
test
xor
insb
mov
mov
adc
stos
push
mov
loop
jmp
outsl
cli
dec
add
daa
cmp
push
or
shrl
dec
mov
mov
test
cmpsb
iret
in
stos
pusha
mov
lret
sub
sti
js
mov
add
mov
xchg
xchg
sti
sub
dec
sbb
outsl
scas
push
icebp
fldcw
jmp
mov
es
stc
lods
jle
lods
pop
mov
cmpsb
dec
movsb
dec
push
imulb
dec
lods
sbb
sub
les
fldt
cmp
jnp
push
xor
xor
pop
pop
ljmp
mov
add
enter
stos
insl
xchg
jecxz
popf
mov
mov
push
sub
cmp
test
sub
stos
sahf
push
mov
jbe
insl
insb
xor
scas
leave
xor
and
test
imul
in
call
je
js
jno
roll
fiadds
scas
loop
insb
stos
adc
js
jl
or
xchg
jl
adc
mov
ret
cmpsb
iret
jns
mov
stos
movsb
sbb
insl
adc
mov
mov
sub
arpl
in
sahf
popf
mov
sbb
iret
je
cwtl
xchg
xchg
leave
ss
test
dec
lods
in
into
mov
rclb
pop
dec
mov
fdivrl
ss
jae
inc
dec
mov
mov
push
mov
in
sub
in
loop
dec
int3
daa
and
in
pop
mov
loope
loop
bound
and
xor
adc
mov
bnd
sub
scas
js
sbb
sbb
rol
repnz
cmp
lods
mov
xchg
js
pop
xchg
mov
shr
addr16
test
mov
mov
ss
mov
and
inc
xchg
mov
dec
orb
sub
push
mov
mov
stos
sub
loope
mov
ja
sahf
insl
mov
sbb
fisubl
notb
xor
dec
icebp
mov
loope
adc
mul
mov
ret
mov
mov
jl
bound
test
jbe
cli
leave
cld
popa
ret
and
loope
fldenv
jno
jne
mov
xchg
mov
scas
bound
in
stos
stc
pop
or
je
push
std
aaa
push
jmp
je
push
xchg
ret
out
ret
mov
pop
fcoml
test
add
test
enter
int3
cmpsb
push
lods
jle
push
dec
out
int
adc
xchg
mov
mov
mov
adc
out
or
mov
mov
movsb
mov
xchg
mov
pushf
add
xchg
and
mov
arpl
popf
cmpsl
insb
jmp
jp
sarl
addr16
leave
in
add
sbb
sub
arpl
pop
mov
mov
das
mov
icebp
in
mov
jo
addr16
fs
outsb
gs
ret
xorb
and
std
push
mov
imul
mov
mov
call
fstps
aam
test
xlat
sarl
push
insl
dec
jp
in
fimull
out
mov
les
dec
push
xor
dec
cmp
mov
or
pusha
cwtl
jmp
push
xchg
mov
nop
bound
sub
mov
nop
jecxz
push
sbb
ja
out
mov
push
or
in
dec
mov
or
or
sbb
jp
int
rolb
les
fsubs
add
fnstsw
das
ss
and
add
shlb
sub
push
jb
pop
addr16
loop
sbb
lret
pop
push
outsl
jmp
xchg
mov
pop
push
jg
loope
out
aaa
xchg
jecxz
testb
jbe
pop
jo
cmpsb
or
jmp
stc
movsb
push
lods
inc
mov
or
data16
lods
orl
mov
cmp
and
in
rcrb
dec
subb
test
jmp
xadd
popf
hlt
loopne
mov
lcall
into
mov
xchg
pop
stos
dec
mov
mov
push
loope
cmpl
dec
xor
leave
cmp
rorl
mov
jne
sub
add
cmpsl
mov
arpl
int3
gs
cmpsl
and
xor
sub
jb
mov
and
xorl
sbb
dec
iret
and
aas
lahf
pop
push
mov
xchg
jp
pop
mov
dec
xor
in
mov
mov
in
push
cmp
arpl
fistl
aam
test
xchg
mov
test
rorl
push
roll
into
popl
jl
sub
mov
jecxz
xchg
mov
das
lods
pop
addr16
mov
repnz
sti
mov
xchg
bound
out
leave
jne
loopne
push
sub
dec
lods
xchg
adc
jge
ja
sti
xor
test
mov
xchg
mov
mov
xchg
movsb
or
jp
cltd
ljmp
aaa
scas
into
push
jmp
add
adc
jecxz
sbb
pop
push
fsubp
test
ja
jl
subb
push
enter
testl
lret
mov
lods
stc
jl
hlt
andl
mov
pop
jae
rcll
push
sbb
ss
cli
sub
fs
out
and
sub
cmc
out
jae
xchg
xchg
repz
xor
jmp
mov
mov
inc
and
test
push
inc
leave
mov
sub
repnz
jo
lods
imul
add
fldt
ja
dec
mov
lret
scas
lods
movsb
insb
or
cwtl
je
mov
enter
test
jl
and
mov
mov
imul
pop
mov
sbb
frstor
ljmp
leave
jle
mov
aas
je
ret
imulb
jp,pt
mov
fnstcw
and
dec
dec
repz
addr16
sub
fiadds
xor
mov
pop
ret
ss
jno
dec
or
repnz
fidivl
mov
icebp
lods
and
ret
and
and
jl
aas
into
jns
add
sub
or
daa
cli
mov
aaa
adc
jns
lock
mov
call
inc
push
adc
das
mov
cmovl
xor
lock
das
push
leave
pop
andl
std
bound
mov
mov
mov
mov
cld
mov
mov
leave
ds
inc
xchg
mov
imul
sub
xchg
in
push
in
mov
jno
ljmp
test
imul
push
and
les
idivb
icebp
lods
jl
mov
mov
jl
into
and
testl
movsb
xchg
test
sub
dec
jmp
cmp
dec
jecxz
enter
jo
lcall
repnz
push
or
in
pop
sarb
pop
in
lods
les
movsb
cmp
cwtl
cli
leave
ds
in
or
cmp
mov
iret
mov
nop
stos
push
jl
dec
fs
inc
push
iret
stos
or
pop
xchg
stos
scas
push
fs
cmpsb
fimuls
mov
mov
mov
mov
or
add
jmp
icebp
into
and
and
into
mov
hlt
xchg
sub
xor
mov
dec
jecxz
daa
leave
mov
add
iret
pop
movsl
sub
mov
es
sbb
sti
je
mov
sbb
loop
sti
mov
jnp
pop
push
sbb
into
std
and
add
or
mov
mov
and
in
sub
addr16
jmp
pop
int
mov
mov
or
cld
push
movsb
repnz
push
mov
ljmp
mov
rcll
loopne
imul
xor
mov
mov
test
rol
sbb
and
enter
jnp
mov
adc
sub
sti
movsl
cmpsl
or
ret
insl
jmp
push
stos
das
andl
xor
dec
lret
adc
push
mov
daa
pushf
dec
dec
cltd
mov
mov
and
xor
lods
dec
scas
jge
aas
sbb
scas
inc
pusha
mov
mov
in
test
cltd
pusha
xor
jmp
mov
out
and
gs
insb
xchg
lret
sub
subb
xor
jle
jne
inc
cmp
or
jmpw
sbb
add
mov
fwait
scas
dec
cmp
ja
arpl
stos
pop
mov
out
or
sub
jmp
cmp
fbld
mov
xchg
mov
movsl
and
push
sub
mov
jne
ja
and
lret
jbe
xorl
ss
cmp
cmp
out
jp
mov
inc
call
fst
mov
fmulp
repz
test
test
aam
jnp
xchg
adc
adc
xchg
aaa
shrl
jle
insl
push
das
mov
dec
test
jl
out
sub
orl
or
js
push
jmp
jne
xor
inc
xchg
popa
fildll
roll
lods
ljmp
mov
mov
popf
lahf
and
inc
mov
inc
xchg
sbb
lds
sti
les
shlb
mov
adc
cmpsb
sarl
jl
dec
or
lods
jb
jl
cs
or
jns
push
fildl
mov
push
pushf
iret
mov
or
mov
xchg
sub
push
mov
in
mov
mov
or
mov
mov
enter
adc
es
lcall
std
enter
cmp
scas
addl
mov
mov
jmp
loope
push
jmp
jmp
or
rcll
stos
je
insl
mov
lret
mov
enter
jl
dec
jp
movsl
mov
mov
xor
jp
push
insl
cmpb
aaa
mov
arpl
ret
mov
neg
fimuls
or
ljmp
into
xchg
fmul
iret
scas
insl
jle
or
or
mov
test
push
movsb
xor
call
decl
push
popa
jmp
dec
data16
sti
icebp
push
mov
pop
lcall
and
xlat
ret
mov
fldenv
xor
int
mov
xchg
xor
lret
mov
jns
or
cmpsb
enter
or
pusha
cltd
mov
jmp
ss
rcll
dec
mov
loope
movsb
sub
dec
pushl
inc
out
cmp
sub
push
scas
aam
fdivrs
or
inc
xor
mov
xor
cmpsb
sub
cwtl
mov
mov
and
jp
mov
fwait
push
pusha
nop
push
pusha
fcoml
aad
add
outsb
es
jg
adc
lret
and
test
loop
jne
or
adc
mov
xchg
adc
mov
aaa
imul
sbb
jbe
push
call
movsl
cmpsb
dec
int3
mov
xchg
movsl
mov
mov
mov
lea
mov
pop
or
xchg
aas
mov
arpl
mov
outsl
ljmp
lret
fs
sbb
shl
cli
sub
pop
sti
lods
xchg
rcr
adc
inc
fwait
mov
mov
sub
loopne
test
add
in
xor
push
jnp
lods
repz
mov
mov
jmp
dec
mov
or
sub
int
insb
and
into
bound
add
cmp
lahf
jge
loopew
jae
inc
insl
out
in
shl
test
dec
jg
pop
sbb
xchg
push
rcll
inc
add
lds
cmpsl
lods
jecxz
sbb
shll
jnp
jmp
mov
mov
pushf
sub
mov
shr
lret
jmp
adc
cmpsl
xchg
jmp
lret
jge
into
cmpsb
xchg
or
or
xchg
fldlg2
insl
mov
and
je
shrl
shlb
ret
enter
popa
in
sbb
mov
rorb
pop
cmp
lock
pop
mov
shl
out
and
inc
rcrb
xchg
repnz
mov
add
nop
data16
mov
ret
cmpsl
mov
fsubr
mov
mov
stos
mov
mov
and
imul
ror
add
out
test
xchg
ljmp
jnp
scas
or
les
cmpsl
lods
sbb
popa
stos
ret
xchg
jle
adc
mov
mov
mov
sub
mov
icebp
mov
sahf
in
add
fdivr
lcall
jmp
adc
int
mov
or
lret
inc
and
imull
scas
or
xor
nop
sub
adc
jno
lods
sub
xor
cmc
mov
scas
jecxz
mov
xchg
jp
lcall
dec
mov
inc
mov
gs
xlat
notb
enter
clc
loopne
movsl
nop
arpl
lods
sub
mov
out
or
xchg
dec
and
aaa
adc
push
daa
lret
jp
inc
mov
mov
std
loopne
lock
mov
xchg
sbbb
lods
addr16
aam
and
outsl
punpckhbw
fwait
ret
sub
lods
xchg
mov
mov
popf
lds
or
out
xor
aad
adc
mov
mov
mov
jne
pushf
cmp
leave
sti
test
sub
jnp
push
and
lret
push
jmp
xchg
mov
inc
icebp
pop
jge
inc
pusha
ljmp
mov
ja
xchg
jg
mov
xlat
pop
adc
stos
stos
rcrb
xchg
fsubr
lds
movl
xchg
daa
js
sahf
out
aaa
roll
sbb
pushf
mov
inc
cmpsl
cmpsl
mov
adc
xchg
sub
mov
mov
and
imulb
mov
mov
cmpsl
insb
test
daa
popa
cmpsl
push
mov
mov
jl
and
cmc
push
sti
cmp
mov
call
test
out
repnz
xchg
fwait
lds
or
test
pop
cld
inc
jecxz,pn
test
xchg
rcrl
sti
and
in
push
dec
in
fwait
cmovle
addr16
inc
ja
xchg
jmp
out
xchg
push
sub
into
stos
sbb
jecxz
add
push
adc
and
cli
popa
js
pop
inc
xchg
push
xchg
js
pop
sub
stc
leave
inc
lea
fwait
dec
test
cmpsl
cmp
loop
xor
hlt
int
out
imul
lods
andb
adc
std
or
es
cwtl
sub
movsl
push
pop
pop
pusha
sahf
fs
add
mov
fisttps
lcall
sbb
mov
cltd
ret
int3
sub
lods
sub
aaa
pop
jmp
sub
and
cmpsb
ret
mov
jmp
xor
in
std
pusha
sub
sub
pop
sbb
xor
or
test
loop
xor
mov
sub
xchg
lods
jecxz
int
in
test
mov
jl
sahf
fstpl
loopne
xor
test
jp
pushf
rcll
fldl
ds
pop
add
int
xchg
ss
cmp
dec
pop
ja
inc
xchg
xchg
cmc
push
lods
rorl
scas
xchg
fadds
and
or
enter
mov
lahf
xchg
adc
inc
xchg
popa
mov
mov
cmpsl
jne
add
lds
out
dec
and
leave
push
es
and
hlt
xchg
imul
lea
cli
out
adcl
sub
cmpb
xchg
adc
cmpsl
mov
or
popa
in
and
movsl
fmull
jecxz
jle
movsl
fs
push
xorb
jle
cmp
inc
or
sarb
dec
movsb
pop
lock
sub
jne
lock
mov
jecxz
xchg
mov
dec
adc
lods
hlt
mov
call
sti
fildl
lods
cmp
jnp
icebp
mov
pop
insl
loopne
addr16
mov
xchg
and
jl
push
shlb
ljmp
addr16
cmpl
dec
int3
test
jl
test
dec
ja
adcl
push
pop
ss
sub
dec
push
and
std
or
mov
cmp
sub
xchg
leave
std
lcall
bound
mov
subl
loop
cmp
mov
push
mov
in
push
mov
imul
imul
push
adc
pop
pushf
cmp
popf
push
lret
and
push
and
hlt
xor
insl
mov
divb
popf
xchg
or
shrl
jne
sahf
jmp
outsl
xchg
cmpsb
mov
loope
icebp
mov
xchg
movsb
repz
loopne
pop
pop
sub
cmp
jnp
mov
mov
mov
xor
scas
ljmp
dec
and
scas
mov
test
mov
fisttps
fs
shrl
fistpll
bound
leave
sub
sub
dec
pop
jae
lods
dec
hlt
inc
jns
dec
xor
dec
sub
roll
push
inc
fistpl
xchg
mov
dec
fsts
inc
leave
xchg
insl
stos
add
movsb
mov
or
in
xor
rcll
lahf
scas
lret
or
cmpsb
mov
sub
stos
add
dec
mov
jmp
push
xchg
lcall
fsubr
cli
addb
inc
flds
xchg
mov
xchg
rcr
movl
inc
stos
aaa
pop
sti
pop
xor
mov
and
xchg
daa
imul
lods
push
sub
fcoml
lods
out
popa
sbb
adc
jle
test
push
or
hlt
loope
jae
pop
mov
iret
dec
aad
xor
icebp
xchg
xor
lahf
loopne
pop
into
pusha
mov
imul
mov
pop
les
scas
test
sbb
sub
out
fbld
or
mov
or
pop
pop
fcompl
daa
mov
mov
nop
jmp
test
js
adc
push
roll
xor
daa
aaa
fbstp
ljmp
xchg
cld
sahf
mov
fildl
and
xchg
das
jae
iret
ret
cmp
fstps
push
sbb
push
inc
pop
mov
test
add
fdiv
int3
push
mov
mov
and
cmp
jmp
jne
cli
fildll
leave
jb
sub
out
inc
or
test
je
sub
je
push
das
mov
loop
pop
aad
addb
rol
cs
mov
xchg
imul
insb
es
cwtl
push
sbb
outsb
jmp
daa
xchg
or
push
stos
mov
xchg
imul
mov
jnp
cltd
and
dec
xchg
push
repnz
push
mov
cmp
cmp
sub
sub
ljmp
push
push
stos
cmp
in
enter
bound
lcall
cs
and
sub
test
int
sub
xchg
mov
xor
jmp
mov
testb
or
push
call
and
insb
cmp
mov
pop
cld
mov
inc
mov
mov
push
xor
in
mov
push
sub
sub
dec
js
testb
or
or
adc
jo
fwait
sub
dec
inc
xor
xchg
jae
ljmp
mov
jmp
pop
xor
jno
mov
fs
inc
test
inc
call
inc
shl
push
test
cmp
mov
mov
pushaw
enter
sub
mov
and
xorb
mov
inc
or
pop
movl
fcoml
xchg
fdivl
xor
mul
jmp
mov
mov
lcall
jecxz
and
out
lahf
xchg
adc
mov
movsl
mov
xor
loope
mov
das
in
sti
movsb
mov
cmp
cmp
and
popa
aam
jl
cs
sub
jecxz
lock
ljmp
pop
cwtl
mov
into
into
ljmp
and
andb
add
testb
aad
jecxz
mov
mov
test
xorl
push
enter
jmp
sub
cmp
out
cwtl
out
and
enter
data16
sbb
cltd
ljmp
or
ss
pop
cmpsl
mov
stc
mov
adc
mov
dec
pop
out
repnz
or
add
inc
and
jl
ds
loope
mov
stos
add
and
inc
rcrl
push
mov
test
inc
and
enter
lds
lret
jbe
es
mov
jmp
out
daa
mov
and
mov
cmp
js
jle
jle
jg
mov
and
nop
sub
mov
xor
dec
xor
and
cmp
mov
mov
pop
cli
mov
lret
mov
cmpsl
cmpsb
fcmovnu
xchg
imul
and
sbb
add
daa
jnp
inc
jmp
and
sub
negb
imul
mov
lods
addr16
fwait
mov
dec
mov
sbb
or
push
mov
scas
pusha
cmp
xchg
sbb
fsub
pop
jmp
lcall
into
sub
sub
mov
mov
jne
arpl
push
inc
nop
push
lds
jmp
mov
stc
push
ja
and
jmp
nop
leave
mov
mov
les
in
mov
and
jmp
dec
cltd
xor
inc
pop
xor
mov
or
mov
lret
mov
ss
adc
mov
cltd
xor
xor
call
jno
jae
enterw
jmp
stos
jge
data16
sarl
push
mov
cmpsb
or
xchg
outsl
leave
sbb
mov
loop
add
push
std
mov
dec
mov
cli
adc
or
adcl
add
mov
inc
out
lcall
jmp
sbb
sub
aaa
lcall
mov
inc
cltd
xchg
lret
leave
push
stos
cmp
ja
movb
xchg
inc
lret
jge
jb
jecxz
cli
loop
testb
mov
xchg
sub
xchg
jb
dec
and
int3
sub
mov
dec
cmp
scas
cmpsb
dec
into
out
sub
push
and
sub
lcall
xchg
mov
mov
lds
rcrb
ljmp
cmp
xchg
sub
mov
cmp
gs
daa
aad
and
lcall
mov
sub
sbb
sub
push
jnp
mov
push
and
cmpsl
leave
xchg
rorb
sub
sub
mov
mov
pop
adc
cmpsl
je
orl
cmp
sub
cwtl
pop
sbb
xor
ljmp
push
cmpsl
cmp
and
sub
mov
test
in
lds
test
and
stos
xchg
mov
push
mov
jp
mov
daa
mov
cmp
cmp
inc
adc
fcompl
shl
insb
rclb
xor
push
mov
ret
icebp
xor
mov
push
ljmp
shlb
and
xchg
in
leave
dec
dec
and
out
add
sarl
mov
test
and
inc
dec
out
add
jecxz
adc
mov
mov
int3
ja
rorb
cmp
jmp
jl
pop
ss
jnp
mov
cmp
mov
movsb
xchg
inc
bound
sbb
mov
pop
dec
lods
push
pusha
cmp
inc
ds
push
push
das
aas
les
aad
cmp
sbb
sbb
lret
clc
shll
dec
aaa
test
imul
mov
mov
sub
cltd
cmpsl
fwait
inc
dec
fwait
lds
imul
test
insl
mov
test
adc
mov
push
and
sti
push
stos
push
les
push
pop
mov
cmp
in
sbb
add
jmp
fdiv
pop
mov
sub
lea
inc
jl
pop
lods
sbb
lret
xor
pop
sub
jns
in
ljmp
xor
mov
mov
sarb
rol
mov
xor
mov
mov
ja
pop
or
sbb
loope
pushl
add
pop
mov
add
or
and
push
pop
enter
imul
xor
in
mov
pop
sbb
and
cmpsb
out
push
loopne
cltd
sub
add
movsl
ret
sub
or
lock
int3
outsl
jecxz
push
mov
stos
enter
lret
testb
pusha
lods
sub
das
jge
out
gs
xchg
and
inc
sub
lea
jae
xor
xchg
loopne
outsb
jp
cmpsb
cltd
daa
jbe
shll
mov
outsb
xor
mov
jmp
and
lahf
jle
movsb
push
fwait
cmp
imul
js
push
sub
jle
mov
cmp
adc
push
cmpb
sub
lret
push
stos
popf
or
pop
test
adc
ljmp
and
ret
mov
bound
sub
dec
xor
roll
dec
xchg
imul
mov
movsl
inc
mov
sub
enter
inc
adc
push
jne
xchg
mov
push
mov
push
cmp
ror
jae
jp
outsb
mov
cmpsb
xchg
jl
xor
mov
scas
push
mov
enter
shlb
cs
dec
mov
lods
mov
mov
insl
jne
repnz
ja
fwait
jbe
or
xchg
imul
cmp
mov
sbb
addr16
jnp
cltd
push
xor
dec
mov
pop
xor
movsb
xor
add
jnp
cltd
mov
ljmp
imul
addr16
mov
sti
mov
xchg
or
in
cmp
mov
xchg
cmp
xchg
mov
ret
pop
in
cmpsb
dec
lret
xor
test
sbb
xchg
mov
cmpsb
or
pop
pop
call
std
in
mov
dec
xor
inc
js
leave
out
xor
jo
mov
sbb
and
add
mov
addr16
es
fistl
and
mov
cli
dec
push
lret
cmpsl
test
ss
and
jmp
jp
jnp
mov
cmp
sub
stc
inc
andb
mov
mov
and
ret
push
cmp
scas
cs
aad
mov
retw
jbe
sti
popa
shl
dec
insl
ss
mov
out
ja
loop
fdivs
xchg
xchg
cmp
or
aad
jb
fadds
jno
cs
sbb
dec
cmp
cmp
xor
fldcw
or
push
shld
loopne
xchg
xorl
cltd
icebp
push
mov
push
outsl
adcb
sub
dec
push
jp
int3
xor
into
aaa
hlt
loopne
mov
pusha
push
jg
pusha
mov
sub
mov
sub
lods
pop
lret
scas
inc
and
pop
ljmp
xchg
mov
outsl
cmp
push
lock
repnz
xlat
mov
xchg
mov
sub
and
mov
inc
nop
adc
mov
cmpsl
lods
jle
cmp
in
and
adc
cwtl
pop
jmp
xor
xor
mov
mov
out
loop
sub
fs
mov
mov
jne
out
mov
jmp
mov
adc
ficoml
lds
ds
mov
sub
fs
loop
and
pop
sub
fbld
clc
mov
push
aam
sub
mov
test
push
lods
ficoms
aad
mov
mov
out
bound
ret
cwtl
dec
push
xchg
int3
and
pop
sub
test
ror
and
leave
dec
push
movsl
cmpsb
mov
or
ffreep
loop
cmp
dec
sub
icebp
xchg
outsl
add
addr16
ljmp
pop
xchg
xchg
xchg
in
and
dec
mov
cli
jmp
sbb
jns
mov
dec
repnz
xor
std
or
aas
push
jmp
push
push
lock
icebp
push
jg
pusha
jp
sub
lods
imul
loop
cmp
imul
sub
movsb
dec
daa
dec
push
pusha
sbb
shrl
mov
or
into
mov
dec
mov
sub
imul
out
fs
inc
push
mov
mov
fwait
mov
pusha
fnstcw
mov
iret
inc
add
fisubl
mov
mulb
cwtl
sahf
sub
cmp
pusha
stos
xor
call
and
stc
call
call
cmpl
and
in
jl
push
int
dec
mov
popf
ret
lret
adc
push
or
xor
fwait
test
mov
rcrb
xor
adc
cmp
mov
aas
mov
mov
mov
inc
imul
addb
je
dec
mov
mov
or
mov
jbe
adcl
sub
into
dec
orb
imul
xchg
loopne
push
sub
pop
and
test
popf
xor
dec
cmpsb
scas
mov
ret
or
mov
lock
push
mov
fidivrs
cmpsb
sbb
out
sub
test
jmp
mov
orl
jl
into
stos
test
push
sub
mov
mov
scas
cmpsb
addr16
pop
xor
and
pop
jg
call
test
mov
stc
std
dec
lcall
mov
sub
sbb
jp
sbb
pop
pmaddwd
sbb
sub
dec
xchg
fmull
adcb
pop
inc
fsincos
and
sub
or
mov
mov
jp
mov
jl
iret
mov
int3
cltd
aam
clc
push
movsl
test
mov
lret
sub
sub
lea
or
movsb
lea
hlt
mov
scas
sub
cmpl
fimuls
cmovne
and
lret
mov
adc
and
lret
inc
cmpsb
ret
cmpsb
aas
add
lods
sub
push
cmp
push
movsb
in
and
xchg
lcall
daa
adc
cmpsl
outsl
inc
jmp
push
mov
pop
fcmovnb
jg
jns
mov
jmp
or
mov
enter
notl
ret
loope
imul
or
cmpsb
scas
sbb
test
and
sbb
movsl
mov
cwtl
add
out
pusha
adc
jne
xchg
pop
mov
push
test
adc
mov
mov
cmpsb
sbb
or
add
xor
clc
xor
mov
movsl
pop
xchg
cwtl
sar
cmp
add
or
push
mov
lcall
and
dec
push
mov
rolb
loope
pop
loopne
test
imul
mull
loop
test
out
mov
sub
movsb
and
cmpsl
mov
scas
inc
scas
mov
inc
inc
scas
cmp
lret
rcrl
or
dec
call
push
loopne
inc
cmpsb
xor
jne
xchg
sub
push
es
push
and
jne
mov
imul
xchg
inc
jl
pop
adc
sbb
pop
ret
dec
rclb
jl
push
xchg
mov
pop
xor
stc
jg
push
fisttpl
cmc
cmpsl
mov
lods
dec
loopne
cmp
push
pop
popf
mov
scas
inc
sub
out
movsb
or
fstpl
add
jecxz
lret
jg
out
daa
sbb
sbb
hlt
xchg
jno
jo
mov
shrb
jns
push
imull
pop
jne
add
and
mov
in
mov
sub
daa
jl
xchg
stc
jg
mov
jg
jle
mov
mov
jecxz
adc
out
mov
call
pop
xor
mov
cmp
push
push
sub
mov
shlb
cmp
in
cltd
lcall
dec
push
enter
xor
mov
data16
push
xor
stos
xor
dec
and
addr16
mov
gs
movsb
sub
pop
xchg
out
stos
pop
stos
cli
sbb
in
lahf
jmp
repz
dec
sti
mov
mov
cmp
and
test
mov
into
or
mov
xchg
inc
and
or
mov
mov
and
mov
addr16
test
xor
sarl
cmp
jbe
cmpsb
insl
dec
stos
mov
xor
cmp
out
or
inc
sub
inc
xor
jne
icebp
cmc
scas
mov
test
xchg
js
fidivrs
lods
cmp
inc
fstps
jp
insl
add
mov
dec
popa
xor
in
sahf
and
cmp
jle
mov
stos
fwait
sub
insl
sub
sti
jmp
leave
les
jnp
sub
push
icebp
and
and
sahf
arpl
fs
pop
cmpsb
and
test
into
push
jne
mov
bound
ljmp
insb
repz
clc
cvtpi2ps
sub
xor
sub
mov
sub
or
sbb
mov
cmpsl
add
jbe
mov
jne
adc
jmp
lods
test
pop
sub
xor
in
xchg
xchg
ja
into
sub
cmpsb
sbb
mov
dec
sub
mov
pop
js
in
inc
arpl
scas
arpl
gs
sbb
dec
arpl
adc
push
lret
repz
mov
lods
xor
fisubl
cs
push
loopne
dec
in
test
cmpsb
ja
clc
addl
adcb
vhsubpd
aaa
icebp
movsb
std
and
jg
dec
cli
outsl
mov
sub
inc
adc
push
hlt
enter
in
repnz
jae
push
pop
xor
add
push
call
js
add
cs
jmp
push
jecxz
dec
frstor
daa
mov
je
pop
jge
clc
frstor
ret
stos
jns
mov
sub
imul
mov
subl
mov
sub
into
out
add
jae
into
sub
sbb
jae
and
call
add
push
ficompl
int3
test
jecxz
jg
mov
add
test
inc
sbb
in
lret
mov
pusha
adc
adc
bound
push
fbld
push
add
xor
sbb
ja
cli
cmp
into
xchg
test
insl
push
test
push
mov
sbb
pusha
sbb
jge
push
jno
dec
sbbl
adc
lods
int
xchg
add
pop
movsl
mov
xchg
jnp
sub
aad
inc
mov
pop
dec
push
fldcw
xchg
dec
pop
jge
mov
aad
pop
jl
mov
sbb
sbb
out
pop
jmp
loopne
es
cmp
sub
rcr
es
sbb
rcl
push
cltd
dec
test
sbb
xchg
es
sub
jae
and
sub
test
mov
jl
dec
jnp
pusha
mov
shlb
decl
test
mov
or
test
mov
mov
jns
or
xor
out
dec
cmpsl
lock
dec
cmpsb
mov
add
add
loop
repnz
dec
mov
ss
dec
iret
xchg
mov
sarl
dec
xorb
push
cmp
mov
cmp
push
test
sub
sub
mov
mov
adc
into
dec
cmp
mov
stc
loop
inc
icebp
cmp
push
and
mov
jcxz
push
mov
rorl
mov
or
sbb
mov
pop
xor
xchg
lcall
das
sub
adc
popf
mov
mov
into
sarl
or
std
jne
push
in
outsl
daa
mov
sub
lods
jmp
sub
jne
int
mov
ret
xchg
cmp
push
jg
iret
xor
les
test
add
into
movsb
scas
es
in
lods
dec
gs
shlb
mov
mov
mov
adc
jp
pop
repnz
stos
rcrl
sbb
leave
or
outsl
and
bound
pop
imul
dec
xchg
fwait
mov
push
je
aas
pop
mov
sbb
xchg
es
adc
mov
loop
imul
popa
ror
jecxz
push
pop
es
push
dec
daa
and
mov
sbb
push
js
jmp
mov
and
ds
out
stos
push
xor
xchg
in
dec
cmp
fldcw
push
es
mov
xchg
pop
push
push
add
ljmp
add
test
mov
xchg
imull
jne
lret
sbb
sub
popa
push
imul
sub
outsb
arpl
data16
mov
in
adc
je
pusha
loop
xchg
scas
xchg
add
sti
bound
sub
rcrl
in
mov
cmp
hlt
xchg
fldcw
in
enter
pusha
out
push
ljmp
inc
imul
add
sub
mov
mov
jg
cmpsb
mov
xchg
push
aad
inc
test
push
sub
hlt
mov
ds
repnz
mov
mov
into
mov
xchg
mov
iret
mov
loop
hlt
cmp
out
mov
bound
cs
cmpsl
sub
mov
or
cmpsl
xor
mov
cmpsb
std
hlt
movsb
and
out
cmpsb
or
cmp
and
hlt
cli
xchg
roll
pushf
mov
les
js
addl
inc
mov
adc
lcall
push
pushf
mov
mov
sti
and
enter
jo
arpl
ljmp
push
repz
sbb
pop
lea
cmp
inc
data16
scas
jmp
stos
mov
or
sbb
pop
ret
ljmp
les
shr
or
cmp
gs
xlat
jmp
xchg
inc
imul
fwait
xor
xchg
add
mov
and
divb
testb
jne
mov
mov
mov
stc
in
fwait
and
xchg
push
stc
out
adc
pusha
add
lods
xchg
ret
sbb
push
loop
xchg
xchg
xchg
aad
pop
nop
xor
cmpsl
fs
and
insb
in
clc
loopne
adc
jns
push
shr
es
xor
loopne
call
or
stc
or
outsb
fs
add
sbb
jmp
inc
mov
mov
inc
and
jo
je
cmpsl
jns
outsb
xchg
sbb
repz
jae
mov
in
movsl
sub
sub
and
add
jno
xor
mov
in
sbb
cltd
icebp
orb
stos
sbb
inc
and
xchg
aam
aad
setns
xchg
dec
mov
lods
lret
nop
imul
scas
mov
mov
movsb
in
mov
push
push
push
fwait
out
xor
lea
imul
sub
mov
test
decl
imul
and
in
cmp
pop
mov
sbb
xor
adc
es
sub
xchg
mov
xchg
mov
fbstp
mov
mov
ret
stc
js
adcb
jle
ljmp
loopne
mov
stos
jp
pop
leave
sub
es
movsb
dec
jno
inc
inc
push
data16
sbb
sub
push
add
xchg
mov
mov
les
les
jecxz
movsl
std
out
jnp
out
xor
mov
jg
fisubs
popl
notl
bound
jae
faddl
cmpsl
popf
xor
mov
push
daa
lods
jae
push
pop
push
push
sbb
inc
gs
sub
or
outsb
xor
out
sahf
popf
movsb
or
out
dec
mov
lret
xchg
sub
enter
jmp
out
fnstsw
xchg
or
subl
loop
lret
mov
mov
jne
scas
xor
xchg
fdivr
ljmp
and
mov
sub
mov
daa
jecxz
jmp
rcrl
mov
push
mov
fidivrs
lods
cmpsb
aad
sbb
in
aas
imul
test
adc
shrb
loop
push
rorl
and
mov
movsb
andl
lret
sub
pop
iret
sbb
mul
sub
bound
lcall
ja
dec
ret
int3
scas
mov
xor
or
pop
ljmp
jecxz
scas
mov
andb
addr16
inc
mulb
xchg
es
jge
jg
and
xorb
xor
dec
or
out
imul
push
pop
cmpsb
xchg
test
cmpsl
movsl
lret
xchg
push
mov
cmpsl
push
push
xchg
sub
ficoms
or
lock
sub
push
xor
lahf
push
out
pop
xor
loop
push
int3
xchg
or
enter
sbb
sbb
fs
push
fimuls
push
fwait
jp
or
xor
stos
and
hlt
addr16
jp
push
push
jae
iret
sub
cmc
jl
xor
xor
cmpsl
out
jle
jns
fistl
mov
loop
out
and
mov
ret
leave
mov
ljmp
jmp
push
push
js
pop
and
mov
mov
fcoms
add
sar
insb
cmpsl
nop
imul
adc
inc
insl
scas
sbb
cmp
push
lret
dec
xor
testl
and
shl
dec
sub
push
inc
scas
aad
xor
jno
sti
pop
jmp
test
scas
and
dec
adc
adcw
jge
cmp
push
xchg
xchg
mov
add
jae
ja
xchg
or
les
push
mov
mov
inc
sbb
inc
dec
mov
fwait
mov
lret
inc
lcall
movsl
dec
movsb
push
out
fs
enter
jmp
cmpsb
shl
es
jmp
sub
and
pop
and
cmpsl
jp
adcb
arpl
mov
cmpsl
lret
sub
add
cmpsl
subb
lahf
push
out
std
hlt
push
iret
popa
sub
inc
rep
movsl
jecxz
stos
loope
pop
dec
clc
mov
sbb
mov
push
shll
scas
aaa
ret
mov
test
std
cwtl
mov
test
lcall
or
test
loopne
into
testb
fidivs
xchg
xor
roll
sub
mov
jns
mov
fwait
push
fstps
add
push
mov
pop
or
stc
mov
das
mov
nop
cmpsl
jno
test
and
es
das
xchg
ss
fidivs
jmp
cmpsb
mov
mul
imul
mov
js
add
pop
out
mov
mov
adc
lds
dec
jo,pn
xchg
iret
mov
lret
push
cmp
stos
mov
aas
mov
sub
movsl
cwtl
aas
test
cli
pushf
in
lahf
mov
sub
cmp
mov
cmpsl
xchg
repz
inc
into
pop
mov
es
lds
ret
fsubrl
cltd
mov
mov
push
enter
push
mov
insb
lret
cwtl
pop
mov
xchg
mov
cmc
in
push
jmp
shlb
sbb
mov
movsl
inc
xlat
add
test
sub
push
into
call
loop
das
addr16
jnp
stc
movsb
mov
dec
cmp
lcall
inc
jmp
xchg
dec
push
mov
xchg
loop
sub
push
daa
push
dec
mov
lods
into
nop
push
cmp
stos
sti
push
jl
mov
sub
leave
addr16
mov
loope
mov
push
ljmp
loopne
xchg
into
pop
stos
xor
testl
dec
fidivl
or
int
fucomi
std
popl
mov
addr16
je
dec
mov
sbb
jl,pt
or
pop
push
cs
push
jle
push
loopne
and
mov
jge
lcall
jne
xchg
pop
push
cmpsb
push
and
mov
ficoml
mov
fnstenv
outsb
mov
pop
push
pop
mov
arpl
sbb
inc
sub
sub
jae
pushf
das
xlat
aas
fdivs
cs
out
mov
cmp
push
test
adc
push
pop
xor
pop
xor
fwait
gs
xor
mov
jbe
sub
push
sbb
enter
arpl
add
call
sub
cmpsl
xor
adc
sub
mov
mov
leave
into
movsb
push
mov
sbb
subb
mov
add
mov
rcl
push
cmp
daa
lret
dec
mov
push
push
sbb
cmp
lret
cmpsl
add
fidivrl
and
or
or
scas
cwtd
sbb
jb
mov
les
bnd
cli
xchg
cwtl
test
push
xchg
leave
shll
adc
shlb
jnp
test
xchg
lods
and
jp
loopne
stos
inc
call
test
into
and
mov
and
jae
pop
dec
bound
jmp
stos
mov
xor
dec
mov
aas
lods
lods
pop
sub
insl
lods
pusha
mov
mov
push
push
cmp
lret
mov
and
and
cltd
jno
aaa
pop
in
mov
mov
aam
jmp
xlat
ljmp
push
mov
in
fwait
xchg
sub
sbb
mov
fwait
cmpsl
xor
mov
and
jmp
imulb
inc
sahf
jmp
rcrb
stos
lret
pop
sbb
insl
xchg
mov
pop
xchg
xor
ss
xor
int3
sub
jnp
sbb
mov
sub
jle
aaa
out
jne
js
or
dec
test
mov
lods
push
xchg
jae
or
sub
mov
sti
jnp
insb
xor
cltd
movsb
test
xchg
aas
in
sub
or
jmp
insl
adc
adc
stos
out
call
aaa
cmp
add
loop
mov
mov
and
inc
push
test
jmp
sbb
ret
xor
fbld
insb
dec
rcrb
mov
ljmp
push
and
inc
or
in
dec
fisttpl
push
aaa
addr16
lret
sub
mov
stos
imul
aad
jecxz
jecxz
or
pop
movsl
stos
inc
sbb
repz
mov
scas
clc
aad
pop
mov
sar
sub
int
stc
aad
mov
leave
cld
cmpb
sbbl
add
sbb
mov
xchg
sbb
lret
push
lahf
jp
cld
mov
aas
test
ja
dec
dec
cltd
and
pop
nop
dec
add
lcall
or
sub
movsl
inc
mov
xor
std
xor
push
rorl
mov
and
mov
out
push
into
pushf
push
aam
sub
imul
push
fbld
test
es
sub
jne
inc
stc
mov
imul
sub
push
sub
nop
pop
jb
movsl
lods
dec
pop
negl
mov
fadd
sbb
hlt
scas
cmp
lock
ja
clc
xchg
into
cltd
inc
and
es
movsl
test
cmc
dec
test
lret
xor
shlb
loop
cmc
push
mov
pushf
mov
sub
test
adc
cli
daa
fsubs
arpl
adc
jmp
dec
push
mov
cmp
nop
sti
and
mov
aaa
nop
lret
aad
push
push
push
pop
cltd
dec
addr16
push
cmp
popf
push
cld
jb
sub
jnp
adc
inc
add
mov
mov
xor
lahf
pop
cmp
fidivl
push
daa
sbb
insl
enter
jle
inc
dec
fs
int3
mov
daa
cmpsl
dec
jl
sub
and
movsl
push
cmp
inc
sbb
xor
pop
test
stos
mov
test
jbe
mov
push
mov
jmp
mov
sbb
gs
rcrb
les
and
xor
mov
daa
jne
xchg
xchg
imul
mov
pop
les
mov
sub
scas
loopne
in
mov
dec
pop
mov
ss
sbb
sbb
xchg
fxch
sub
sti
into
xlat
adc
lods
inc
mov
and
jb
aaa
jge
pop
lock
fstl
popa
les
cmp
pushf
aam
inc
add
ret
es
ret
mov
jae
sbb
jae
pop
rcll
mov
cmp
mov
mov
andl
mov
mov
idivb
pushl
mov
and
push
loop
sub
repz
orb
and
std
push
fwait
lahf
ficompl
and
push
hlt
jnp
lret
push
cmp
xchg
les
pop
cmpb
out
adc
das
cmpb
xchg
jle
rcr
mov
push
sub
repnz
imul
leave
ss
jmp
mov
push
cmp
cmp
arpl
lcall
sbb
mov
mov
jecxz
mov
repnz
xlat
sub
cmp
addr16
or
adc
test
inc
enter
push
mov
adc
ljmp
in
gs
xchg
flds
xor
inc
aad
leave
ret
cmp
dec
popl
in
xor
sbb
dec
add
stc
test
dec
mov
aad
jp
pop
cmp
hlt
pause
movsl
dec
inc
mov
roll
mov
sub
xchg
xchg
shl
aaa
scas
jae
xchg
mov
xor
mov
aad
sub
out
xchg
pop
xchg
fwait
test
xchg
loop
in
mov
in
jne
jmp
es
mov
pop
sub
jmp
fwait
inc
leave
sub
in
xchg
pushf
div
js
mov
xchg
scas
ja
inc
dec
cmp
pop
cmp
xor
repz
pop
mov
xchg
jo
testl
push
int3
sub
dec
push
iret
aam
ds
dec
jb
push
mov
lods
jl
mov
fistps
mov
mov
aaa
into
or
in
repz
inc
psubb
or
popa
cmp
jge
incb
std
xor
imul
jne
sbb
dec
inc
or
cmp
cmp
dec
jl
mov
add
jmp
jl
lods
mov
mov
pop
out
lea
mov
sub
mov
ss
and
lret
stc
cmp
aam
pop
push
xchg
lods
addr16
cmp
and
cmp
mov
push
cld
out
dec
xor
cmp
out
lcall
sbb
lea
inc
insl
cmp
inc
cli
out
adc
cmp
arpl
stos
push
mov
hlt
xor
fwait
mov
jl
lods
dec
mov
and
xor
or
mov
push
and
pusha
sub
das
clc
jbe
push
jg
push
mov
push
insb
sub
es
dec
xchg
adc
data16
imul
or
push
and
mov
jle
pop
fwait
cltd
cmpsl
sti
mov
lods
dec
pop
andb
sub
sub
mov
mov
mov
cmp
sbb
pop
push
or
lcall
cs
xor
in
xchg
jl
adc
cmp
and
rorl
into
jecxz
mov
adc
jge
jne
mov
and
les
jae
shlb
xchg
xchg
mov
icebp
cli
cmp
mov
int3
add
xor
mov
cmp
pop
lret
mov
dec
scas
cmp
cmc
push
and
pop
jecxz
stos
into
in
mov
jmp
mov
and
jb
loope
xchg
mov
jmp
cmpsl
xor
mov
subl
loopne
imul
data16
mov
cmpsl
jmp
sahf
and
inc
jnp
es
bound
test
xor
int3
xchg
imul
loopne
dec
mov
and
xor
movsb
into
mov
fcoml
adc
mov
xor
fldlg2
lcall
jg
aad
lahf
cli
xor
adc
ja
mov
dec
outsb
mov
popa
push
sahf
mov
lds
cmp
in
adcl
adc
xor
dec
scas
pop
testl
pop
cwtl
movsb
mov
mov
mov
sti
ds
test
mov
mov
jge
mov
and
fmull
mov
sti
inc
lds
test
ljmp
push
mov
push
fsts
jmp
scas
pop
mov
adc
ficoml
stos
cmp
lret
ficoms
pop
sub
cmc
cmpsb
pusha
out
pop
shrl
sub
xchg
cmp
jb
xor
movsl
xlat
mov
ss
sub
mov
xchg
cltd
mov
pop
lret
dec
adc
cmpsb
pop
adc
sbb
cmp
notb
xor
ja
xor
mov
inc
jae
xchg
imul
inc
adc
mov
in
adc
jnp
cmpsb
icebp
dec
aam
cmpsl
rorb
out
scas
and
insb
inc
mov
or
lcall
popf
cmp
sbb
and
push
or
cmp
out
inc
pop
fwait
push
or
in
cmpsb
or
mov
mov
jae
popl
mov
shl
xchg
xchg
pop
lahf
pop
out
mov
arpl
sbb
or
mov
in
or
scas
jmp
pop
sbb
lea
mov
or
in
mov
out
or
push
scas
jecxz
lret
sub
cmpsl
movsl
ja
mov
repz
pop
mov
push
xchg
and
and
mov
cmp
dec
xor
and
cmpl
dec
push
xchg
xor
daa
xor
in
popa
push
mov
cmp
imul
push
push
mov
inc
push
in
push
std
jecxz
imul
push
pop
adc
pop
loop
in
lcall
test
cltd
push
shl
rorl
push
push
dec
addr16
call
pop
leave
stc
stos
jle
negb
sub
loopne
sahf
dec
jecxz
out
lret
or
cmp
mov
andb
sub
test
movsl
push
sub
dec
sbb
mov
pop
int
movsl
loopne
dec
jb
pop
and
cmpsb
lret
ds
test
or
fisubrs
xchg
and
pop
jb
mov
xchg
xlat
or
popl
xor
and
hlt
push
push
push
popa
sub
mov
cmp
aas
jle
out
sub
hlt
inc
push
push
dec
and
pop
xor
xor
jg
scas
insl
add
mov
pop
sub
mov
mov
and
cmp
dec
mov
mov
dec
sub
in
je
adc
mov
sahf
jecxz
rorl
divb
or
mov
movsb
ret
mull
lcall
and
cmp
cmp
jp
cmp
imul
movsb
pop
lods
out
rol
push
cmpsl
and
push
sbb
testl
add
fiadds
cmpl
cltd
xchg
add
pop
es
cmc
or
sbb
dec
outsl
popa
test
or
movsb
xchg
js
loopne
cwtl
cmp
mov
loop
ret
cmp
adc
sub
test
das
addb
xchg
ret
cs
gs
inc
jmp
imul
icebp
test
xchg
and
call
push
inc
repz
mov
mov
jbe
jge
shll
or
mov
push
cmpsl
push
and
sbb
and
insl
scas
addr16
ja
ret
pop
stos
je
pop
sub
repz
adc
or
pushf
cmp
popf
mov
les
add
sbb
or
data16
or
in
mov
mov
mov
imul
aas
mov
popf
lahf
cmpsl
cmpsl
movsb
popa
mov
lahf
xchg
mov
fwait
stos
dec
aaa
pop
mov
inc
out
mov
inc
dec
pushf
bnd
and
and
in
cmp
mov
cmp
pop
pop
stc
pusha
lret
scas
pop
push
fbld
xchg
mov
aas
dec
push
mov
out
pop
mov
xchg
or
fldenv
dec
lcall
push
jmp
ljmp
sub
dec
lods
inc
xchg
cmp
sbb
sub
mov
xchg
mov
sub
js
fwait
dec
push
loopne
loop
mov
sub
test
mov
fldt
mov
hlt
inc
lret
out
in
jo
mov
mov
cmp
mov
insb
sbb
mov
adc
mov
lea
pop
mov
mov
notl
movsb
sahf
das
mov
inc
cmc
jle
test
jl
xchg
and
inc
ret
or
and
xchg
daa
sub
add
cmp
adc
push
or
mov
in
std
or
data16
popa
es
aaa
mov
and
int3
lcall
jl
into
xor
mov
add
inc
addr16
nop
or
xchg
mov
out
movsl
cltd
mov
jno
cmpsb
ret
sub
push
jmp
pop
loope
rcl
pop
mov
popf
cmp
in
or
daa
stos
xchg
push
fisubrs
loopne
std
and
mov
lcall
jmp
jmp
repnz
adc
sarl
or
aas
xchg
and
xor
xchg
add
nop
jp
dec
adc
shll
hlt
ja
sub
xchg
mov
jle
sbb
push
push
mov
pop
mov
cmpsl
js
and
shll
mov
fnstsw
sub
push
lods
adc
int3
fists
adc
gs
dec
lods
push
ret
mov
outsl
mov
pushf
or
lods
mov
pop
insl
mov
sbb
stos
loope
mov
scas
out
imulb
cmp
and
mov
repnz
mov
dec
in
mov
jne
cs
sti
lahf
sahf
mov
leave
je
in
push
sub
xchg
aaa
xchg
inc
cmpb
cmc
out
enter
xor
or
jo
nop
and
fs
jb
dec
addl
mov
adc
or
or
cmpsl
xor
push
jbe
and
inc
fadd
int
mov
sub
inc
and
dec
cmp
ret
nop
mov
sub
xchg
jae
aad
int3
cltd
movsb
test
test
sub
sub
xor
outsb
cltd
mov
in
sub
dec
out
outsl
jnp
xchg
fcoms
jmp
cmc
adc
gs
scas
sbb
and
push
pop
dec
xor
and
dec
xchg
imul
mov
js
jns
mov
cmp
test
cli
xchg
dec
adc
lea
lret
xor
xchg
test
cmpsb
xchg
add
dec
movsb
negl
mov
ds
mov
cmpsl
ss
scas
in
jg,pt
mul
icebp
and
popa
mov
enter
or
xor
cmp
and
lcall
dec
mov
popa
jl
push
jbe
daa
jae
data16
dec
xor
cltd
aas
cltd
jl
addr16
fxch
sub
fidivrs
es
ss
ret
mov
mov
pop
cmp
insb
mov
outsl
ret
xchg
and
jmp
daa
add
xor
jle
xorl
shlb
pop
scas
dec
or
mov
movsb
sub
mov
mov
data16
mov
ret
xchg
xchg
loopne
dec
jmp
cltd
push
sarl
loopne
leave
cmp
xchg
xchg
cmpsb
shll
movsl
xor
sahf
das
in
gs
arpl
inc
es
jg
call
sahf
das
movsb
cmp
not
in
jmp
and
and
test
stos
enter
push
cmp
xchg
mov
out
mov
mov
mov
xchg
hlt
jmp
jecxz
mov
sub
push
ffree
test
dec
fisttpl
lea
mov
and
mov
mov
mov
xchg
cmpsb
fwait
mov
xchg
xor
data16
stc
mov
adc
jle
sub
dec
push
imul
dec
mov
sub
jae
cmp
dec
pop
mov
sbb
mov
imul
dec
mov
popf
outsl
add
mov
jno
addl
mov
or
jbe
cmpl
dec
and
mov
stos
inc
push
popa
outsb
ret
scas
into
cmp
sahf
inc
mov
mov
mov
out
leave
jnp
xchg
out
xchg
aaa
js
cwtl
mov
mov
and
in
mov
lods
cmpsb
xchg
not
repz
stos
xchg
mov
pop
cli
cmp
repnz
in
pusha
mov
test
stc
cmp
loope
jbe
fxtract
mov
stc
xor
adc
ficoms
jno
xchg
push
or
xor
lds
xlat
in
arpl
cmc
inc
xor
xor
cmp
mov
add
loop
mov
dec
xor
out
mov
push
sbb
out
and
mov
cmp
in
cwtl
lods
adc
iret
lcall
add
fldcw
push
inc
movsb
adc
gs
cmp
push
sub
movsb
loope
cmpsb
mov
and
pushf
pop
lret
jmp
mov
lods
push
aaa
pop
dec
mov
hlt
iret
or
dec
test
in
dec
sbb
out
and
leave
mov
and
inc
test
adc
cwtl
ficomps
mov
testb
sub
xor
xchg
jmpw
xchg
out
fwait
insb
popf
xchg
mov
dec
cmp
testb
xlat
cmpsl
xchg
pop
sbb
in
jne
pop
xchg
cmc
push
mov
es
std
dec
popf
mov
push
pop
add
out
mov
leave
shlb
movsb
test
call
iret
mov
insl
jmp
mov
shlb
push
pop
test
mov
inc
dec
jne
mov
mov
xchg
cmp
cmpsb
sbb
mov
je
xchg
or
das
cmpsb
mov
push
sbb
loopne
lret
test
jp
mov
loope
cld
mov
popa
std
jge
daa
inc
pop
shll
push
jne
loope
xchg
jb
out
sub
mov
cld
mov
mov
insl
scas
repnz
xchg
fstps
into
loop
push
push
sub
jmp
jp
call
fwait
shrl
icebp
mov
mov
jbe
jl
lods
or
fsts
push
push
cmp
jnp
push
fistl
sub
or
xchg
dec
incb
cmc
xor
push
addl
mov
frstor
lea
loop
jl
je
ja
lret
mov
inc
cwtl
je
in
sbb
xchg
xchg
dec
daa
cli
sbb
add
and
sbb
in
movsb
mov
dec
fcmovnbe
sub
and
mov
adc
xchg
loope,pt
pop
pop
lds
mov
daa
dec
mov
mov
js
mov
call
leave
icebp
out
into
leave
outsl
mov
push
and
cld
es
ljmp
xor
mov
pop
out
leave
xchg
add
test
cmp
pushl
mov
push
lods
ss
pop
jecxz
mov
jecxz
int3
leave
sbb
out
shlb
or
fstpl
into
jmp
popa
pop
lods
sbb
mov
mov
pusha
cltd
push
ficomps
push
stc
and
lcall
xor
mov
lret
sbb
and
rorb
setbe
jl
dec
call
xor
jmp
jns
cmp
test
lahf
stc
push
or
jae
lods
fisubrs
in
je
lods
mov
add
cltd
pusha
outsb
loopne
pushl
mov
mov
xor
int3
push
fadds
mulb
loope
test
pop
psubusw
loopne
xchg
inc
lods
stc
and
stos
adc
dec
push
push
aaa
mov
popf
add
aas
push
mov
dec
rolb
pusha
jns
les
mov
cmp
fsub
scas
out
mov
hlt
push
ds
cmp
push
imul
xchg
add
cmp
and
mov
cmpsl
jae
xchg
orb
xorl
mov
mov
xorl
test
or
loope
sarb
lds
sub
mov
jmp
xchg
lret
dec
and
decb
scas
movsb
dec
mov
stos
xchg
cmpsl
cs
and
lcall
cmpsl
shrl
mov
jmp
enter
das
or
testl
pop
cltd
mov
mov
adc
fsubs
pop
insb
lods
cmpsl
mov
xlat
xchg
cwtl
add
jmp
dec
bound
test
cltd
mov
in
repnz
int3
mov
cltd
jle
inc
pop
test
xor
mov
mul
mov
sbb
cmpsb
jecxz
lods
sbb
test
mov
mov
pop
imul
and
pop
cmpsb
neg
xchg
bound
cmp
je
xchg
pop
lcall
test
shlb
mov
jp
xchg
cmp
cmpsb
cs
cmc
add
sub
jae
adc
or
xchg
mov
andb
and
cmpsb
lcall
sub
movsl
inc
ljmp
and
cmp
pushl
cmpsb
cmp
xor
jno
jmp
daa
cmpsb
xor
and
xchg
jbe
adc
cmpsb
enter
in
clc
push
js
inc
jne
push
jmp
enter
inc
movsb
enter
xchg
int3
stos
mov
sti
cmp
fcoml
insl
jg
push
pop
getsec
sti
sub
jmp
imul
ss
sub
cwtl
xchg
mov
stc
pop
ds
hlt
dec
sti
xchg
enter
into
mov
shrl
inc
mov
je
jmp
daa
push
scas
mov
sti
xchg
fwait
loopne
push
sub
lods
xchg
jno
mov
popf
mov
hlt
out
sbb
push
jl
ss
imul
mov
into
push
in
pop
push
in
cmpsb
push
insl
and
jno
je
ss
ja
push
mov
into
out
and
and
or
sub
sub
or
sti
mov
sbb
inc
ljmp
push
sub
xchg
jne
cmpsl
mov
or
mov
pop
stos
cmc
jbe
jl
mov
sbb
cmc
pop
fs
stc
lret
andl
sub
iret
std
in
loope
mov
dec
jne
xchg
mov
testl
cmpsl
test
pop
xchg
aaa
cmpsb
rcrl
and
out
push
sub
jae
and
loopne
adc
jecxz
pop
arpl
pusha
xchg
les
loopne
push
mov
mul
mov
or
xchg
inc
ja
sub
or
jne
filds
jge
rcrb
cmp
add
std
or
lods
es
jmp
stos
xor
insb
mov
sub
xor
stc
cmpsl
jg
cmp
push
andl
sub
pusha
fdivl
lea
aaa
test
testb
in
adc
enter
inc
xor
sbb
adc
pop
and
lea
test
icebp
lods
pop
mov
lret
je
test
into
and
in
test
clc
out
lock
mov
popa
jl
mov
arpl
push
mov
xchg
cmc
test
cmp
cmpsb
push
test
xchg
cmp
push
lret
je
inc
cmp
xor
icebp
mov
mov
cmpsb
mov
arpl
jecxz
int
and
bound
push
mulb
inc
xchg
sahf
sbb
push
mov
sbb
adc
inc
mov
mov
xchg
jae
sub
jl
inc
mov
popa
fmull
lahf
lods
inc
jb
push
es
enter
add
lret
cwtl
pop
dec
xor
test
xlat
fistl
push
jle
out
scas
pop
lods
clc
mov
inc
mov
mov
movsl
imul
es
das
js
push
insl
data16
ja
jo
jecxz
dec
cltd
push
scas
xor
das
mov
sti
out
arpl
icebp
movsl
inc
repz
add
sub
dec
mov
push
in
xor
and
into
je
faddl
pop
ss
mov
xor
push
lods
mov
xor
nop
or
xchg
or
or
jle
std
jns
fistl
dec
jmp
insb
gs
rcll
jo
cmp
sub
push
inc
and
mov
lods
push
xchg
mov
sub
enter
cltd
ficoms
adc
ret
mov
sub
mov
cmp
fidivs
jecxz
sti
lods
or
lods
data16
adc
loop
sbbb
cld
cmc
pop
pop
mov
lea
jns
leave
xor
or
scas
hlt
repz
mov
push
cmp
stos
ja
test
addr16
xor
adc
mov
pop
mov
mov
mov
roll
or
jg
test
xrelease
xchg
adc
bnd
jbe
pop
xor
cltd
repnz
and
loope
lret
lcall
jecxz
test
and
decl
cmc
pop
cmp
aad
jmp
mov
push
mov
sub
addr16
lcall
cmp
mov
pop
loope
cmpsl
xchg
cltd
mov
sbb
dec
mov
or
loopne
mov
jae
dec
dec
push
push
xchg
daa
sti
sahf
addr16
cmp
sti
cmpsl
idiv
icebp
sahf
scas
lea
scas
inc
mov
jno
fcoms
mov
enter
and
mov
xor
mov
xchg
and
test
xchg
pop
fdivrs
in
jp
aas
jmp
mov
jno
add
jg
fsts
jmp
inc
mov
inc
sub
add
shll
bound
in
push
jge
adc
int3
inc
out
lods
mov
xor
push
lods
sarl
pusha
out
aaa
mov
ret
jmp
ljmp
aad
and
jo
dec
dec
cs
fnstcw
movsb
jnp
add
icebp
pop
je
dec
and
jne
or
in
push
sarl
mov
fbld
mov
sub
cli
cmpsl
dec
and
jae
push
xchg
add
mov
mov
leave
lret
and
cmp
scas
xor
push
push
mov
push
loop
insb
sub
iret
cmpsb
mov
shll
inc
jns
out
xlat
xchg
scas
ja
jmp
cmp
mov
mov
dec
cmp
add
les
hlt
xor
imul
lcall
xchg
icebp
sub
sub
cmpsl
movsb
mov
xchg
shr
jl
mov
dec
int
sbb
inc
cmp
into
and
and
jo
imul
out
cli
pop
add
notl
mov
mov
pop
lods
or
jno,pn
mov
mov
int3
popa
icebp
into
je
sahf
mov
adc
and
lret
push
xor
or
incl
nop
mov
mov
enter
fdivl
lods
sub
movsl
sarb
es
pop
fdivrs
movsl
cmp
mov
and
xor
nop
int3
xor
movsb
push
xor
jmp
sub
and
adc
das
sarl
jmp
mov
imul
dec
mov
xor
shlb
pop
stc
std
lods
and
jne
cmpsl
jge
lock
in
sub
dec
add
out
daa
mov
push
lock
or
in
jl
pop
add
xchg
cli
sbb
add
mov
dec
pusha
sub
jl
lods
sub
cltd
inc
lret
notl
jecxz
mov
sub
jl
cmpsb
in
and
mov
pushw
pusha
xor
sub
add
shrb
adc
divb
shl
mov
rcl
push
daa
pop
mov
mov
inc
mov
in
in
fsubl
sub
jns
mov
out
cmpsl
pushf
pop
jbe
mov
and
inc
nop
clc
loopne
insb
xchg
push
popf
lds
mov
leave
sti
lods
sub
adcb
inc
xor
mov
lcall
cmpsb
push
addr16
push
mov
roll
ret
sub
popa
in
fildll
lock
ja
fcmovnbe
or
jnp
rorl
stos
stos
mov
std
sbbl
stc
repz
xchg
test
sub
repnz
gs
mov
cmp
pop
add
lods
leave
or
push
popa
rcll
xor
leave
sarl
hlt
cmpsl
and
mov
jne
das
push
hlt
js
sti
lods
enter
hlt
cmp
mov
aam
popf
pop
mov
ret
test
jl
fsubrs
ss
les
mov
hlt
mov
dec
mov
lods
push
lods
test
scas
test
aas
xor
cmp
aam
cmp
xor
ljmp
cld
gs
mov
mov
push
xor
pop
loop
jbe
out
inc
jbe
imul
sub
jp
jns
pop
out
mov
or
dec
xor
mov
jg
sub
imul
sahf
es
jbe
add
cmpl
mov
xlat
jl
mov
cmp
out
inc
mov
jo
mov
ljmp
dec
stos
dec
call
dec
push
jmp
mov
jmp
sti
lods
sub
and
cmpb
clc
dec
add
xor
test
lret
mov
cmpsl
cmpsl
jmp
das
cwtl
js
out
and
add
enter
push
test
pop
xchg
mov
aad
xchg
mov
dec
pop
adc
pusha
fcomi
sub
sub
data16
mov
dec
mov
mov
je
mov
sub
mov
xor
aam
shrl
push
adc
xchg
add
repnz
rclb
push
fistl
imul
or
xor
dec
ljmp
out
pop
inc
jns
jns
push
push
or
jge
cwtl
imulb
negl
in
dec
mov
es
stos
push
and
mov
or
aaa
clc
subl
js
push
scas
mov
js
or
shlb
xorb
imul
xchg
pusha
addb
add
and
cmp
into
loopne
adc
sbb
mov
jl
mov
mov
mov
xchg
and
in
add
jle
xor
xchg
xchg
adc
bound
sti
js
sahf
add
fdivl
push
pop
loopne
mov
daa
stc
aam
xor
adc
into
icebp
jae
xchg
orl
jne
pusha
mov
jecxz
ss
pusha
jg
dec
mov
dec
dec
data16
cmpsb
inc
sbb
mov
add
cmp
popa
daa
pop
mov
mov
mov
lods
out
stos
lret
mov
add
cmp
inc
add
cmp
mov
mov
push
xchg
xchg
jecxz
lret
pop
mov
test
xchg
fs
cmp
and
add
ss
xchg
push
add
imull
aas
or
roll
cmp
leave
sbb
jle
daa
sbb
cmc
mov
pop
out
mov
outsb
add
sub
ret
call
xor
jg
cli
lcall
sti
call
mov
push
leave
mov
xchg
js
mov
cmp
aam
inc
es
popa
shl
hlt
mov
ror
push
repnz
sub
or
jg
ljmp
sbb
mov
cmp
imul
fs
stos
mov
dec
and
jg
ljmp
or
cmp
mov
and
jmp
push
fnstcw
ds
xor
push
imulb
adc
cmp
lcall
fistpll
cmp
or
stos
cmp
mov
mov
js
ror
mov
mov
inc
stc
add
lret
icebp
cmc
or
ja
iret
mov
test
jecxz
shrl
and
aas
mov
repz
mov
sub
mov
ret
ds
push
cmc
lret
inc
test
test
inc
enter
cmpb
nop
sti
mov
jmp
in
mov
push
mov
xor
pop
mov
sbb
add
pusha
mov
mov
mov
js
scas
mov
cmpsl
push
data16
pushf
ds
and
in
int
and
jb
mov
push
mov
mov
js
mov
sub
mov
jns
mov
cmp
ja
scas
imul
add
sti
andl
repz
pushl
inc
hlt
adc
cmp
and
and
in
xor
ret
shll
add
inc
jg
inc
cmp
cmp
and
addr16
inc
daa
cmpsb
adc
cld
add
sbbl
sub
lret
insb
sarl
sub
lret
fcmovb
test
or
jnp
add
lods
ss
int
sub
mov
inc
xor
rcr
dec
inc
outsl
imul
sub
sti
jp
lock
cs
ret
popf
mov
cmp
or
lods
adc
jne
jb,pt
repnz
loopne
xchg
xchg
jne
clc
mov
pop
sub
add
push
popf
mov
leave
int3
adc
mov
mov
fwait
xor
stos
out
int3
addl
mov
jl
add
xchg
mulb
adc
cwtl
mov
adc
jne
aam
push
mov
sbb
ja
push
jg
lea
ljmp
xchg
jbe
mov
mov
mov
aam
or
xchg
xchg
push
push
or
sahf
mov
data16
push
fdivrl
negb
push
jo
add
popa
adc
gs
sbb
push
test
mov
add
arpl
inc
pop
fidivrs
sti
push
pushf
push
stos
jp
dec
aaa
mov
stos
xchg
lret
addr16
push
sti
add
xchg
mov
popf
push
jns
add
jae
mov
inc
xchg
or
mov
xor
xor
xchg
xchg
pop
push
rolb
xorb
jl
cmpsb
mov
sbb
in
jnp
pop
orb
bound
sub
dec
das
lret
imul
push
cmp
es
repnz
test
sub
pop
mov
sbb
add
shlb
xor
push
scas
cmpsl
inc
ljmp
mov
inc
lock
pop
or
mov
out
mov
inc
arpl
sbb
jo
jmp
std
add
addr16
push
xor
pop
sub
enter
fwait
ret
mov
in
jne
jl
pop
je
cmp
call
jmp
les
aam
cmpsl
pusha
mov
xor
repz
xor
or
mov
movsb
les
dec
xchg
inc
sub
aas
dec
loopne
iret
mov
mov
mov
in
cmc
cmp
cmpsb
mov
jbe
sub
xor
push
sub
aaa
inc
sti
and
loop
push
push
out
das
jecxz
ret
sti
sti
aas
orl
std
and
mov
jns
pop
pop
and
add
arpl
cmp
cmc
sahf
jg
xchg
mov
js
jb
push
test
inc
mov
pop
mov
data16
and
jb
mov
ljmp
stc
ja
xchg
fwait
xchg
mov
mov
inc
cmpl
ds
or
xchg
cmpsl
xor
mov
es
mov
rorb
ss
jl
movsb
into
jmp
fnsave
mov
pop
or
movl
out
test
into
sub
outsb
sub
cmp
cwtl
xor
jg
ds
fwait
test
push
js
add
enter
xchg
dec
cld
mov
jle
mov
jl
cs
mov
mov
xchg
imul
push
cmpsb
out
loopne
movsl
in
mov
push
jns
push
mov
xor
xchg
dec
call
sti
jle
mov
xchg
adc
aas
sub
mov
ljmp
sbb
into
adc
adc
lcall
nop
jae
sub
sbb
rcrl
jbe
cmpsl
mov
lods
mull
movsb
pop
jmp
add
loopne
mov
repz
mov
test
push
and
inc
mov
inc
mov
sbb
filds
mov
push
and
movsb
aas
addr16
and
add
cmc
sbb
mov
orl
mov
inc
loopne
cmpsl
icebp
mov
pop
push
mov
sub
mov
data16
dec
dec
stc
adc
lods
jns
xor
xchg
jo
lds
mov
loope
stos
cmpb
je
cli
pushf
and
adc
test
lretw
or
stc
sub
lods
cmp
test
push
fldt
out
mov
insl
fucomi
movsl
popa
into
addr16
rorb
xor
pop
sbb
or
xchg
stos
ljmp
sbb
repz
dec
xchg
jns
xchg
daa
dec
push
push
loope
add
cmpsl
mov
cmp
or
pop
cmpsb
imul
and
gs
notl
inc
cmpsb
xor
xor
popa
sub
xor
xor
fwait
pop
dec
scas
sub
jmp
or
mov
cmp
aas
test
xchg
adc
and
mov
popa
shll
fnsave
out
jcxz
ja
popa
sub
lods
sub
xchg
sub
cmp
test
sub
andl
jbe
sarb
mov
mov
mov
xchg
sub
mov
mov
push
fimuls
aas
dec
enter
cltd
jnp
pop
cmp
insb
jnp
mov
lahf
mov
orl
cltd
push
movsl
jnp
testl
xor
out
mov
mov
test
mov
inc
jmp
ss
cs
jecxz
adc
sbb
xor
data16
mov
nop
or
mov
addl
xor
mulb
rcr
jg
lahf
jmp
aaa
mov
xlat
xor
xchg
jp
loope
popa
dec
mov
push
xor
loope
sub
jmp
pop
lret
scas
daa
jge
out
in
test
sub
movsb
loopne
mov
pop
xorl
add
stos
xor
fs
aaa
sub
pop
xchg
mov
sti
in
sti
movsl
jl
js
xchg
fistl
lock
pop
es
lods
fwait
mov
push
push
jns
inc
adcl
punpckhdq
cli
sub
push
repnz
add
mov
imul
stos
mov
pop
push
gs
xor
push
mov
cmc
shl
mov
adc
mov
mov
add
cmp
mov
xchg
mov
hlt
leave
rcrb
imul
jnp
jne
xor
leave
xor
dec
mov
xchg
xor
daa
cmp
inc
rclb
mov
inc
lods
add
jae
add
or
aam
mov
out
sub
mov
ficoml
lret
sub
xor
daa
mov
icebp
imul
adc
movsl
dec
mov
aas
xchg
into
jp
loope
loope
jns
mov
cltd
and
scas
xor
jle
mov
hlt
push
stos
cltd
rol
test
jns
xor
popa
or
mov
lret
dec
mov
data16
nop
aam
xor
rorb
xchg
sub
cmp
test
jns
loopnew
cltd
adc
mov
and
jge
or
leave
mov
jp
sub
leave
aaa
popf
sbb
cmc
adc
jmp
aam
sahf
cmpsb
sub
ss
and
je
jo
sahf
lret
movsb
mov
aam
cmpsb
sti
fs
pop
jge
cltd
push
push
add
xchg
lret
xor
jnp
jmp
and
enter
lods
mov
imul
fbstp
pushf
add
mov
bound
enter
or
xchg
and
loop
push
fldl
or
ljmp
push
inc
icebp
dec
xor
push
lock
xor
pop
mov
lds
push
dec
aaa
es
sti
enter
push
xchg
test
mov
arpl
sbb
in
cltd
mov
sbb
repz
mov
pop
dec
mov
push
adc
mov
jne
int
outsb
sub
loopne
pop
rorl
mov
ljmp
xchg
sub
cmpb
sub
mov
xchg
push
decb
loop
jne
and
nop
sbb
lods
andl
dec
and
es
mov
ds
subb
push
jnp
imul
clc
cmpsb
dec
cltd
sbb
rol
jle
aas
dec
xchg
and
in
xchg
out
jne
pop
jmp
inc
xor
jns
jmp
mov
aas
bswap
mov
fisubrl
ficomps
test
cmp
cmpsb
fwait
loopne
stos
leave
mov
daa
sahf
jb
and
xchg
insb
sbb
rorl
xorb
ds
insl
mov
mov
js
push
lahf
sub
imul
addr16
cmpsl
cmp
mov
test
inc
xor
or
dec
pop
mov
add
test
inc
push
addr16
loope
cmpb
in
into
mov
jnp
fstpt
mov
repz
lds
fdiv
push
push
cmpsb
stos
std
xchg
cmp
push
sbb
stc
insb
lods
roll
imul
repz
cld
xchg
or
adc
scas
es
jecxz
add
mov
imul
mov
xor
mov
jg
xor
xlat
bound
sbb
inc
mov
jecxz
js
inc
adc
mov
pusha
scas
cwtl
pop
jae
fdiv
pop
out
iret
mov
loop
cmp
dec
dec
jecxz
aad
dec
mov
xor
sbb
test
xchg
jmp
inc
xchg
or
dec
std
cmp
sub
in
lods
and
in
mov
sbb
pop
cmp
into
push
mov
push
mov
loopne
sub
add
jmp
es
in
xor
mov
jno
xchg
lods
xchg
popa
inc
adc
stc
xor
aaa
rcll
data16
aaa
into
mov
and
mov
adc
adc
ss
jae
xchg
cmp
mov
xchg
sbb
ss
mov
cmpsb
mov
out
xchg
add
inc
jns
inc
shll
xchg
cmpb
std
or
cmpsb
mov
popf
ss
and
sbb
mov
mov
mov
and
sbb
cmp
fistps
xor
pop
lret
fimull
daa
scas
lea
cmpsb
arpl
mov
xchg
xor
ss
mov
xor
mov
hlt
cmp
sub
ds
inc
and
repnz
test
sub
xor
xchg
popa
fisttpl
mov
xchg
mov
es
xor
daa
fisubrl
scas
push
aaa
jnp
add
adc
xchg
xchg
lcall
sbb
int3
inc
lea
xchg
mov
stos
xor
jl
dec
mov
addr16
mov
adc
lret
push
movsl
leave
outsl
jae
ffreep
xchg
push
push
sbb
xor
pop
repnz
mov
outsl
loop
lods
sti
js
xchg
pusha
push
sub
sbb
ret
push
mov
shrl
movsb
xchg
and
sub
cltd
rorl
xor
xor
test
call
sbb
out
mov
cmp
mov
inc
mov
fisubl
std
or
cwtl
adc
repz
fs
movsb
jmp
sub
dec
movsb
into
and
mov
xchg
jl
mov
jb
pop
inc
mov
jae
movsb
xor
push
mov
pusha
int3
fstps
xor
push
aad
das
je
mov
jbe
dec
mov
mov
imulb
popf
inc
loope
adcb
push
xchg
in
lcall
push
dec
dec
mov
fdivrs
sub
xor
cli
inc
addr16
inc
pusha
jmp
mov
insl
test
rorb
add
sbb
andl
pop
ljmp
add
mov
dec
mov
addl
dec
movsb
dec
loop
mov
aad
loopne
sbb
push
push
mov
lods
ljmp
fwait
or
push
ljmp
aas
adc
fbld
jl
jmp
inc
jae
lret
add
test
and
jg
mov
sbb
mov
imul
push
idivb
jmp
or
xchg
add
cwtl
add
mov
add
lcall
addr16
jne
push
cmp
out
sub
sub
insb
mov
aaa
cmp
jae
aad
mov
ss
inc
ja
arpl
fwait
test
pop
jo
xchg
cmp
mov
movsb
scas
in
movsl
jmp
mov
inc
inc
jne
cli
sbb
test
mov
jg
aaa
loop
mov
ss
out
push
cmpsb
je
push
ds
mov
jae
sbb
sub
neg
jg
out
aaa
xchg
cmc
cld
mov
push
psrad
jl
cmc
pusha
push
jmp
sub
test
fnstcw
push
xor
lahf
leave
dec
cmpsl
int
or
add
movsl
jecxz
daa
and
mov
mov
jns
push
xlat
popa
clc
daa
jle
mov
outsb
scas
ljmp
push
and
cmp
lods
movsb
cltd
push
mov
test
mov
shr
call
loop
lock
jmp
notl
xchg
jle
push
mov
lods
inc
jae
cli
push
int
ss
cmpb
ljmp
ja
out
inc
jne
imul
jns
popa
mov
mov
lret
movsb
test
push
scas
mov
in
mov
sub
ljmp
sub
data16
icebp
iret
pop
aad
push
loope
jnp
aam
and
aas
data16
test
negl
mov
fsubrs
popf
xchg
xchg
dec
lret
cs
add
test
leave
repnz
lea
cmp
and
mov
mov
cmp
leave
mov
lret
add
or
jns
or
aad
xor
cmp
and
lea
add
sbb
xlat
mov
mov
aaa
push
repz
daa
mov
sub
add
test
cmp
dec
mov
lahf
jp
mov
addr16
arpl
lea
in
cmc
and
cmpsb
shl
or
cs
dec
fcomip
es
jbe
mov
movsb
push
out
mov
lahf
popf
aam
out
adc
fnstenv
add
lods
scas
mov
push
add
inc
ds
int3
lea
repnz
mov
fsubrl
jle
ljmp
fstps
fdivrs
push
test
lea
enter
ds
shl
push
sbb
sub
push
lods
movsl
mov
sti
scas
pusha
xor
dec
cmp
mull
push
mov
mov
xchg
mov
mov
or
fwait
std
jbe
jmp
imul
scas
and
adc
test
and
mov
dec
xchg
call
ljmp
popa
jae
repz
mov
xchg
mov
inc
in
jb
mov
jmp
aam
xchg
mov
mov
std
fdivp
inc
and
push
cmpsl
jns
dec
dec
icebp
sti
stos
jl
pop
stos
or
movsl
sub
or
cmpsb
shrl
push
ljmp
mov
sahf
fmul
push
xchg
adc
jg
adc
pop
jmp
adc
orl
std
pop
mov
sub
jae
fsubr
xchg
lret
insb
pop
loope
or
imul
mov
dec
dec
insb
aaa
sbb
out
jnp
mov
leave
scas
ja
mov
je
std
stos
cmp
cmp
sub
jnp
or
pop
cmpsb
and
sbb
mov
push
stos
add
cli
or
cmp
push
jo
or
popa
jae
xchg
popf
in
les
in
stos
cltd
xor
aad
push
sbb
scas
aam
jae
movsb
add
shrb
mov
popa
inc
je
mov
cmpsl
mov
jg
lods
lret
or
int3
test
rcl
dec
fcoms
mov
push
sub
sbb
jecxz
jl
dec
and
mov
mov
push
sti
add
or
insl
lret
repz
inc
mov
std
out
mov
sub
movsl
mov
aaa
mov
pop
jp
adc
shr
dec
jb
lods
imul
xchg
pop
jle
lods
idivl
in
fbld
je
imul
mov
notb
mov
mov
mov
dec
sbb
mov
pop
stos
pop
cmp
jge
mov
daa
loop
xor
test
lret
mov
shrl
mov
daa
stc
mov
push
aam
mov
push
cmp
fdivrl
and
adc
inc
mov
xor
xchg
jnp
test
movsb
dec
mov
fwait
bound
lahf
pop
add
mov
xchg
test
adc
add
fisttpl
sub
push
sbb
cmpsb
xchg
push
aas
or
popa
xchg
mov
mov
outsb
ss
lock
sub
add
mov
leave
das
sub
test
pop
fldenv
xor
add
loopne
cwtl
ljmp
movsb
pop
imul
and
pop
les
mov
xor
adc
jl
pop
imul
mov
out
cli
out
lods
out
push
movsb
xchg
scas
loope
call
fdivrl
push
scas
into
mov
cmpsb
inc
inc
inc
jmp
mov
int3
jne
jecxz
dec
sub
das
dec
or
mul
xchg
mov
gs
jae
pushf
mov
mov
push
lret
cmc
arpl
xchg
loop
lcall
and
and
push
cmp
ret
stos
xor
push
mov
jns
xor
xor
out
and
movsl
insl
and
mov
or
inc
sub
mov
mov
sbb
cmp
or
jbe
mov
mov
test
fidivrl
loop
dec
notb
data16
stos
jg
lahf
fistl
ffreep
test
adcb
mov
call
ds
and
jecxz
loope
stos
andl
xchg
jmp
leave
xlat
es
mov
cmp
mov
xorb
cmpl
cmp
ret
mov
push
mov
stos
pop
sub
cs
and
cmp
aam
inc
imul
mov
enter
jp
mov
xchg
es
mov
xchg
lods
dec
inc
movsl
add
xor
out
in
mov
jle
mov
loopne
pusha
pusha
adc
ja
xor
mov
push
scas
inc
jg
call
sbb
mov
fcomps
loopne
xor
fucomi
out
and
xchg
sub
arpl
clc
leave
cmp
outsl
mov
jns
push
dec
loope
les
mov
mov
push
test
fnstcw
dec
imul
pop
aas
jne
adc
cmpsl
sti
movsb
push
pop
mov
test
adc
out
xor
jg
movsb
or
cld
inc
mov
inc
pop
cmpsl
mov
jb
mov
push
push
and
scas
cld
mov
pop
xchg
mov
insb
adc
push
ja
stos
or
fldl
pop
cmp
js
test
add
ljmp
addr16
mov
xchg
and
jmp
mov
out
and
push
out
push
push
int3
mov
bound
or
mov
mov
flds
push
add
ss
pop
adc
popa
or
mov
testb
sub
out
mov
loop
add
jg
in
jnp
push
es
shrl
xor
mov
das
or
mov
roll
mov
fs
fucomi
xor
popa
daa
divl
das
mov
scas
xchg
stc
sub
cmp
push
and
xchg
movsb
pop
push
shlb
movsl
mov
xor
mov
xchg
mov
movsl
int3
pop
add
into
add
enter
xlat
push
sub
pop
and
loop
mov
aas
cmp
jne
cwtl
aam
mov
cmpsb
out
cmp
cli
jne
dec
adc
ss
cmp
mov
ret
scas
mov
xchg
in
mov
adc
icebp
loope
xorl
popa
cmpsl
jae
dec
jg
jmp
pop
addr16
cmpsl
jae
sbb
mov
cmp
clc
cmpsl
popf
xchg
lret
push
pushf
out
mov
in
cmc
lock
and
mov
je
push
dec
rorb
xor
pop
adc
mov
jno
jae
icebp
sbb
cmp
ss
ds
sbb
test
sub
sbb
push
jb
and
popf
in
stos
push
ljmp
int3
loopne
add
and
popf
mov
je
add
cmpsl
daa
mov
sub
inc
sarl
jno
jle
cmpsl
dec
int
adcl
in
fucomp
enter
push
mov
mov
cmp
cmpsl
mov
jne
je
shl
out
inc
jp
lds
mov
rclb
dec
lods
gs
or
das
es
or
call
int3
ret
mov
sub
mov
loop
or
sbb
add
pushf
vpshld
mov
push
mov
out
fcompl
cli
stos
inc
jl
mov
mov
test
int3
cld
sbbb
or
movsb
push
pushf
cmpsb
leave
adcl
aaa
scas
push
sti
loope
cld
rol
mov
inc
ljmp
int3
cmpsb
lods
xchg
inc
scas
je
and
mov
iret
push
mov
xchg
and
icebp
std
jge
into
dec
xor
icebp
or
xor
push
addr16
adc
xchg
insb
aas
repz
loopne
leave
out
fistpll
push
pushf
dec
push
addl
outsb
mov
repnz
das
xor
addr16
pusha
sub
mov
sub
mov
xor
mov
into
insb
nop
mov
and
mov
fcompl
mov
jo
cli
movsb
mov
xor
aaa
push
fsubrl
scas
out
cmp
insb
lods
divl
data16
add
loopne
cmc
sub
mov
mov
pop
outsb
lea
mov
jg
mov
xorl
mov
xchg
cmpsl
mov
imul
mov
pop
loope
cs
hlt
adc
stos
movl
loope
in
xchg
mov
fists
xor
xchg
mov
sbb
mov
outsl
dec
mov
xchg
in
sti
leave
sarb
loope
and
xchg
out
inc
adc
jl
negl
sbb
lock
aaa
inc
out
inc
adc
or
cmp
mov
lcall
movsb
pop
sub
into
sbb
xchg
fstpl
push
push
fwait
xchg
mov
adc
movsl
adc
and
xchg
aam
jp
popa
fnstenv
inc
mov
cltd
jmp
iret
inc
aam
sub
push
push
cmc
cld
or
loope
xchg
jmp
push
mov
cli
shlb
mov
pop
rorl
into
ja
push
sub
inc
bound
jb
test
cmp
xlat
lods
lods
jmp
test
mull
ljmp
call
cld
or
mov
in
in
and
jmp
push
mov
and
sub
jno
in
mov
sub
jmp
inc
xlat
das
mov
scas
mov
push
cli
mov
loop
popf
sbb
xchg
xchg
arpl
rcrl
into
jae
jbe
int3
nop
xor
cli
or
dec
arpl
fprem
xchg
push
cmp
test
cmp
mov
mov
popa
jns
cmc
pop
mov
mov
cmpsl
and
or
dec
es
jbe
add
adc
fiadds
pop
fsin
leave
mov
and
jmp
and
mov
push
mov
mov
jns
fisttpll
stc
cmc
or
mov
dec
or
les
sub
in
add
jns
lret
xchg
repz
scas
and
arpl
jp
mov
and
test
cmp
popa
std
sub
xor
or
and
sub
bound
test
sub
es
push
jnp
adcl
push
and
loop
mov
sub
adc
les
mov
es
call
mov
movsb
and
xchg
push
pusha
adc
lds
mov
xchg
std
xlat
in
mov
cwtl
push
dec
out
add
jge
sub
jl
xchg
int3
mov
mov
shrl
pusha
scas
sub
push
jle
cltd
ror
nop
fistpll
push
cmpsl
in
adc
jmp
adc
pop
xor
inc
imul
xor
sbb
jmp
fcoms
mov
xchg
les
mov
xchg
mov
mov
lods
mov
or
jno
data16
movsl
loopne
xchg
call
js
jne
mov
std
sbb
xor
outsb
inc
sub
xchg
pop
push
jae
lea
daa
sbbl
ret
js
xchg
cld
mov
mov
cmp
jmp
jb
popf
mov
jp
mov
cli
jp
movsl
fs
clc
popa
xchg
imul
sti
lock
dec
jecxz
push
data16
mov
sub
test
into
in
cmpb
mov
daa
fildl
mov
pop
mov
pop
xlat
dec
add
inc
cltd
sbb
xchg
daa
lods
js
lods
and
mov
jl
imul
addr16
addr16
dec
orl
repz
sti
add
shrl
lods
mov
mov
movsl
xchg
mov
cmpsl
xchg
popl
mov
add
xor
pusha
in
pop
popa
mov
dec
fidivrl
or
or
jno
pusha
mov
dec
xchg
repnz
fs
rol
test
arpl
xchg
push
call
jne
mov
jmp
push
mov
repz
cmp
mov
es
xor
inc
ljmp
mov
jae
mov
sti
repnz
in
cmpsl
movsl
fdivr
adc
into
xor
dec
repz
icebp
mov
testb
adc
and
mov
xor
jp
push
jmp
loope
or
xchg
inc
in
cmp
into
imul
loop
push
addb
mov
jnp
sub
xchg
outsl
movsl
cwtl
enter
jno
lahf
push
and
into
ds
jae
test
mov
daa
jo
xchg
stos
stos
test
leave
int3
aam
pushf
testl
dec
lock
xchg
push
push
dec
loop
fsub
sbb
rcrb
out
xor
fmul
pusha
popf
jns
ret
inc
pop
std
gs
sub
jno
inc
inc
push
cmpsb
pop
test
xchg
pop
sub
popa
pusha
pop
fmuls
push
in
mov
xchg
adc
popa
cmpsb
inc
insb
adc
call
mov
inc
jg
mov
fwait
mov
sti
mov
movsl
insl
xchg
js
lcall
push
or
iret
sub
sub
push
pop
jae
lcall
roll
xor
sub
xchg
ret
orl
hlt
lock
sub
xchg
mov
scas
inc
cli
mov
push
xor
clc
cwtl
dec
sti
mul
in
shll
sbb
sub
out
leave
int3
mov
inc
or
popa
mov
lahf
inc
sti
or
cmc
jle
clc
mov
sub
or
lahf
and
popa
mov
sub
out
sarl
jo
fs
std
xchg
sub
outsb
ret
in
scas
mov
repz
xor
jp
scas
mov
jnp
jns
mov
mov
sbb
mov
in
sbb
ds
lcall
mov
cmp
xchg
push
in
movsl
or
in
out
fldt
std
jbe
in
test
mov
jne
mov
cmpsl
arpl
stos
cmpsb
inc
in
mov
pop
xor
cmpsb
cmc
in
mov
jbe
in
aam
ja
xchg
out
in
jb
jmp
sub
hlt
mov
mov
jmp
mov
push
jl
dec
mov
pop
mov
mov
sub
stc
mov
in
lret
pusha
inc
mov
cld
sub
jmp
addr16
mov
dec
xchg
cmpsb
aad
mov
jg
inc
shll
and
negl
pushl
or
mov
dec
cmp
xchg
mov
mov
adc
push
call
jp
sub
in
ss
bound
out
xchg
cmp
scas
out
xchg
ljmp
sub
inc
jmp
fistps
mov
leave
sti
mov
mov
xchg
out
cmc
cli
ljmp
adc
inc
push
push
mov
and
pop
icebp
cmp
lods
aad
loopw
adc
mov
aad
xchg
push
jmp
setge
pop
mov
fisttpll
push
jbe
lcall
lods
sub
jmp
push
mov
hlt
and
push
out
loop
mov
mov
mov
cltd
das
xor
call
mov
lock
ljmp
or
pop
inc
out
and
nop
lret
lret
sbb
lds
mov
mov
leave
stc
inc
push
xlat
xchg
fst
popa
test
mov
aas
jmp
mov
mov
test
jp
mov
lods
cli
push
daa
and
xchg
push
data16
dec
popa
jne
das
xchg
or
jo
push
mov
movsb
sub
sbb
data16
push
adc
xor
add
sub
push
and
shl
xor
jge
lcall
popa
dec
bswap
les
add
es
test
movsl
jmp
lods
in
mov
mov
or
push
stos
xchg
jmp
or
cmpsb
icebp
cmp
enter
bound
mov
test
push
xchg
mov
jmp
movsl
enter
mov
int3
xchg
mov
xchg
inc
inc
add
call
daa
stc
hlt
leave
stos
xlat
outsl
ret
cmp
js
mov
loope
mov
dec
lret
lods
es
cld
push
mov
push
push
push
into
and
cmp
push
insb
adc
mov
and
xor
mov
std
roll
xchg
movsl
repz
cmp
mov
xor
cs
xchg
xchg
sbb
nop
pop
xchg
testl
sahf
xchg
jg
das
shlb
xor
stos
xor
repz
outsl
jecxz
sub
add
sbb
sbb
adc
cmpsl
adc
fucom
or
daa
arpl
dec
enter
movsl
or
jp
mov
scas
cmp
mov
mov
and
andl
wrmsr
adc
repnz
xorl
ss
inc
mov
xor
cmp
push
xor
dec
xchg
mov
jnp
leave
push
dec
jns
mov
jne
push
cli
push
jmp
xchg
divl
pop
cmp
mov
in
test
aam
mov
mov
gs
dec
dec
fisttpll
orl
mov
cmpsl
ss
stos
lods
sar
test
cmp
je
cli
lods
jbe
cltd
negl
pop
xchg
out
mov
cmp
int3
shll
call
and
rorb
push
lret
shlb
mov
mov
pop
shll
pop
fwait
scas
push
mov
repz
ret
clc
je
cmpsb
leave
dec
mov
sbb
xchg
imul
out
mov
jae
pop
les
aaa
mov
jne
in
data16
sbbb
sbb
xor
in
fnstcw
push
push
ljmp
mov
dec
mov
lahf
xchg
shll
into
mov
aad
sub
fcoms
ss
test
gs
xor
loopne
adc
xor
pop
push
lods
outsb
push
shlb
movsl
cmp
jmp
dec
xchg
aaa
sbb
and
inc
aam
ss
push
mov
cmpsl
int3
imul
push
jmp
jae
xchg
sub
aam
test
cmp
ret
add
pop
aas
pop
popa
cmp
in
jne
fists
in
pop
aam
mov
push
cltd
xchg
popf
out
js
adc
loop
sub
xchg
sbb
aas
int3
jae
lea
gs
jnp
sub
nop
lds
mov
aaa
loope
daa
ljmp
fbld
dec
cmpsb
fmull
jg
xor
sub
sbb
mov
pop
shlb
cmc
jle
adc
xorl
stos
movsl
pop
popf
lahf
ficoms
jg
mov
sub
xor
cmpsl
jl
sbb
pop
lods
movsb
jl
pop
add
je
xor
xchg
inc
data16
xchg
add
mov
dec
iret
jmp
test
cmpsl
cmp
and
cmp
cmp
jecxz
mulb
pop
inc
ds
push
push
cli
andb
aaa
mov
jno
loope
mov
jb
cwtl
xchg
mov
mov
pop
jbe
cmp
jp
cmp
insl
jbe
xor
std
xor
sub
push
arpl
insb
cs
testb
cmp
sub
jecxz
cld
ja
enter
add
push
cltd
dec
ss
cli
push
inc
mov
mov
xchg
rcll
jp
sbb
hlt
and
mov
mov
mov
fsts
xor
jl
cmp
push
adc
push
flds
fistl
fists
or
xchg
xchg
pop
test
jmp
leave
mov
in
mov
pop
jmp
dec
xorl
cmpsl
push
stos
mov
xlat
hlt
jo
ret
mov
popa
ss
popa
mov
xchg
push
les
js
mov
dec
jle
inc
mov
loop
stc
push
pop
cmpsl
sub
mov
xchg
xor
fnstcw
or
into
cmpsl
xchg
rcrl
xchg
test
imul
xchg
outsl
jae
jp
cmpsl
mov
xchg
into
push
call
shlb
dec
mov
xchg
aaa
leave
and
ficoms
stc
sub
mov
mov
cmp
cld
sbbl
mov
insb
fisubl
movsl
scas
cmp
out
mov
push
js
arpl
dec
shr
stos
stos
push
fsubrs
mov
mov
push
testb
aaa
jne
jg
pop
repz
pop
push
and
adc
dec
xchg
jmp
adc
push
stc
movsb
mov
aaa
push
xchg
jns
arpl
or
and
cwtl
mov
ja
ja
in
pop
cmp
jp
jecxz
mov
pop
lret
jbe
enter
push
jg
cmpsb
pop
jbe
inc
dec
xchg
jge
mov
mov
pop
jbe
out
movsl
push
sub
out
adc
or
pop
fistpll
clc
sti
in
or
cmpsl
into
mov
fsubp
sti
repnz
jne
loop
lods
daa
mov
jne
and
adc
rcll
popf
mov
cmp
jp
xchg
negl
aad
xorl
test
jecxz
mov
and
xor
jae
cmp
cmp
mov
and
sbb
mov
dec
dec
aas
cmpsb
out
push
addr16
test
sub
pop
icebp
stc
pusha
dec
daa
dec
jo
mov
xor
xchg
and
mov
lahf
leave
cmp
in
outsb
pop
mov
fnstcw
cmpsb
push
sub
and
xchg
mov
mov
add
or
data16
add
dec
mov
jbe
xchg
mov
and
mov
jae
xchg
dec
ss
mov
lods
aam
inc
push
xor
and
sbb
addr16
xor
cmp
and
sub
xchg
push
add
mov
sti
and
sub
jae
in
orl
adc
push
push
dec
pop
pop
lea
sub
int
mov
sub
mov
out
movsl
leave
imul
sti
mov
stos
sbb
ljmp
fidivs
inc
lcall
jb
adc
in
mov
dec
xchg
into
fisubrl
sahf
mov
jmp
imul
xor
cld
sbbl
clc
cs
and
into
cmp
push
data16
mov
ja
or
jl
in
sbb
mov
daa
pop
inc
je
pop
sbb
push
test
add
lea
jo
pop
adcb
jle
in
jbe
jle
mov
sbb
out
test
aad
push
mov
push
xchg
mov
inc
es
or
add
sbb
mov
pop
or
aam
andl
mov
test
jmp
leave
lret
gs
xor
ficomps
xchg
jp
imul
ret
push
stos
jmp
cmp
push
mov
sub
popa
push
sub
jmp
mov
push
xchg
imul
pop
cmpsb
push
daa
ret
fstl
xchg
add
jae
sub
jne
jmp
push
mov
lods
pusha
pop
lret
sub
jnp
loop
arpl
lods
push
aas
lds
loop
sbb
adc
xchg
jge
ja
data16
jmp
in
fcmovnb
out
adcb
push
je
and
lods
lcall
cs
bound
int3
mov
jmp
leave
mov
daa
mov
lds
push
jecxz
and
jmp
cmp
jmp
xchg
push
arpl
add
sbb
push
xor
jb
jge
popa
test
or
shl
in
add
xor
inc
lods
ret
ds
adc
mov
jmp
lcall
push
iret
sbb
jae
cmc
or
clc
lods
repz
mov
pusha
pop
mov
mov
pop
fucomi
shll
pusha
mov
test
jnp
mov
scas
and
sub
das
movsl
mov
pop
jnp
sub
cmc
repz
pop
stos
pop
sub
xor
sub
loop
outsl
inc
sbb
mov
mov
or
pop
arpl
lret
cld
pushf
cmpb
dec
and
and
ja
imul
cmpsl
aaa
cmp
and
or
or
mov
mov
lret
jp
mov
dec
hlt
jns
inc
pop
mov
jo
fmuls
int3
sub
jge
sub
push
mov
out
scas
ret
rclb
call
clc
inc
add
mov
jns
xchg
clc
sti
js
xchg
jnp
xchg
inc
sub
mov
stos
sbb
stc
or
mov
js
in
aaa
or
and
or
cmp
movsl
jb
daa
add
sub
cmp
in
fisubl
and
lea
sub
sub
lcall
movsl
adc
sbb
out
pop
cmp
mov
and
dec
dec
imul
hlt
lcall
mov
jg
in
adc
inc
and
stc
push
jno
das
pop
mov
das
dec
lcall
jg
mov
les
jmp
idivb
jmp
or
je
arpl
leave
stc
je
ret
loop
cmpsl
jp
ret
xchg
icebp
jae
hlt
inc
or
sub
xor
rcrb
popf
add
andb
je
dec
ja
inc
mov
mov
xor
add
mov
scas
enter
cmp
sub
mov
sbbl
incl
scas
cmc
aas
cmpsb
mov
js
ret
dec
cli
dec
mov
leave
add
or
sbb
or
sub
mov
inc
imul
pushf
fwait
mov
stos
mov
push
addr16
fcompl
xchg
pop
jo
dec
cmp
popl
mov
push
dec
popa
mov
jle
movsl
mov
pop
dec
sti
adc
mov
sbb
sbb
pop
mov
addr16
ja
mov
imul
dec
ljmp
daa
lret
daa
xor
push
or
push
mov
jmp
sti
xlat
rorb
lret
stos
daa
push
xor
cwtl
cwtl
push
test
push
mov
test
jo
cmp
pop
dec
jno
or
ljmp
jae
xchg
push
aas
pop
pop
leave
rolb
fbld
mov
mov
shll
sub
jecxz
ljmp
jmp
dec
testl
mov
or
push
test
mov
sub
in
in
mov
aam
mov
mov
ret
insl
jecxz
int3
ljmp
mov
or
sub
jp,pt
sub
aad
xor
ja
xor
jnp
hlt
loopnew
leave
and
or
mov
es
sub
into
and
insl
sub
push
push
cmp
cmpsl
movsl
cmpsb
lret
xor
push
stos
mov
cmpsl
out
aam
fidivrl
dec
stos
sub
movsb
mov
and
mov
stos
sbb
test
mov
mov
imul
lcall
mov
mov
xchg
adc
push
push
jo
test
jb
mov
mov
loopne
adc
sbb
shl
sub
hlt
ja
and
mov
push
sub
push
stos
adc
nop
incb
lods
push
mov
pop
arpl
jl
popf
and
xor
in
stc
push
push
out
imul
jo
shrl
jl
sbb
xchg
cs
imul
bound
pop
inc
sti
or
pusha
sub
lods
jecxz
ljmp
xor
push
mov
jge
pop
or
jns
xchg
out
sti
mov
cmp
xchg
xchg
test
pop
int3
or
aam
fistpl
push
mov
jmp
inc
mov
ret
xor
cmpsl
cld
les
adc
and
cmpsl
or
add
pop
cmpsb
jp,pn
push
sbb
je
es
andb
pusha
rorb
sub
push
stos
xor
mov
dec
movsb
lret
test
xor
shrl
imul
lea
cli
rcl
dec
repz
outsb
lcall
pop
cmc
dec
js
dec
pop
jmp
xchg
out
cmp
ret
aas
loope
sub
and
popa
scas
ret
jg
outsb
xchg
add
inc
stos
pop
mov
bound
xchg
pusha
data16
jmp
aad
push
or
xor
adcb
sub
aas
les
mov
and
sbb
xor
mov
mov
divb
adc
xlat
adc
popf
repnz
pushf
jne
sar
inc
mov
into
pop
and
jne
dec
xchg
and
adc
out
cmp
xchg
mov
push
dec
or
mov
popa
push
sbb
loop
mov
in
out
arpl
lock
test
jo
or
test
or
cmp
sub
ficoms
xchg
insl
dec
xor
ljmp
nopl
and
movsl
cmp
pop
fdivrs
mov
and
mov
je
push
dec
mov
hlt
shrl
cmp
mov
andl
push
gs
call
push
mov
ja
xchg
lods
in
sar
push
andb
fwait
mov
cmp
dec
adc
push
push
pushf
fsubs
mov
icebp
sbb
xor
mov
pop
xchg
or
sub
aam
pop
pushf
xchg
and
sub
dec
xchg
jmp
scas
inc
mov
mov
xor
shrb
int3
in
dec
pop
mov
lea
push
sub
push
test
in
mov
mov
or
fs
xor
add
scas
test
ljmp
les
push
faddp
xchg
mov
int
or
mov
mov
pop
js
push
mov
test
mov
cmc
scas
mov
ret
pop
js
mov
or
dec
adc
addr16
xlat
pop
push
xor
mov
sahf
mov
cmpsb
mov
and
sub
inc
shll
and
jecxz
imul
or
popf
or
scas
pusha
fxch
sub
lcall
xor
inc
rcrl
and
cmc
dec
jp
or
mov
stos
popf
stc
lcall
mov
aas
inc
xor
data16
sbb
jg
rcll
cld
push
mov
loope
push
push
out
in
sbb
or
push
sbb
cltd
cmpsl
pop
sahf
cld
xor
cmp
imul
jp
push
xchg
adcl
mov
cmp
or
int3
lods
or
pop
push
lds
lret
popf
push
xchg
aad
enter
xor
loop
insl
and
fwait
pop
lea
daa
ds
mov
mov
mov
jae
les
insb
mov
xchg
mov
sub
mov
fimull
push
stos
jbe
shrb
xor
pusha
sbb
inc
push
ds
pop
xor
shr
or
shrl
or
sbbb
mov
push
test
pop
mov
ret
out
test
ret
cmpsb
call
arpl
jae
cmpsb
mov
gs
jno
pushf
push
in
add
jo
loop
adc
xchg
leave
xor
push
cs
daa
nop
push
rolb
xchg
mov
sbb
xor
punpckhdq
mov
sub
rcrb
pop
dec
sbb
lahf
and
xor
adc
shl
mov
mov
sub
mov
or
push
mov
mov
push
xchg
inc
cwtl
call
dec
push
lock
lahf
daa
push
popf
push
jo
bound
mov
mov
adc
xor
push
inc
movsl
cmpsl
push
shlb
pop
adc
xchg
mov
daa
rclb
std
mov
pop
test
push
jns
and
lods
dec
xor
leave
mov
stc
es
push
fnstenv
lds
cmp
sub
mov
mov
cltd
imul
mov
mov
cmp
jmp
pop
dec
test
or
mov
inc
insl
mov
xor
movsb
jb
sub
cmc
movsb
adc
inc
jmp
mov
cltd
xchg
jo
lock
add
and
out
enter
cmpsl
mov
mov
out
test
ret
add
rcrl
loop
cli
pop
lcall
and
ljmp
test
sub
pusha
lods
shrw
xchg
int
rorl
div
test
cmpsb
fimull
std
sbb
fistl
xchg
xchg
jno
sbb
sahf
cmp
push
pop
gs
cmp
jl
sub
inc
sbb
push
negl
and
stc
add
pop
out
icebp
push
jl
test
mov
sbb
jns
shll
add
mov
mov
xchg
xor
xlat
jo
jmp
mov
jnp
popf
mov
jecxz
sbb
fimull
sbb
les
js
mov
mov
jne
mov
push
mov
jp
jne
jl
scas
dec
cltd
and
sahf
xchg
hlt
cmp
scas
jnp
xor
shll
mov
out
cmp
inc
arpl
xor
xor
mov
fidivrl
push
cmpb
std
mov
xchg
cmp
fimull
sbb
inc
aas
or
mov
jae
adcl
push
adc
cmpsl
hlt
sbb
jecxz
lods
xlat
mov
add
test
call
sbb
in
call
push
ret
imulb
js
sbb
xchg
cmp
mov
adc
lahf
cmpsl
jbe
mov
add
mov
and
mov
cmpsb
push
inc
test
adc
ret
pusha
mov
xchg
js
cmp
push
cmpsl
mov
mov
adcb
shl
cs
xchg
pop
cmp
push
lods
test
and
jo
mov
xchg
push
pop
lahf
xchg
xor
mov
add
push
loop
test
fcoms
cmp
dec
arpl
out
jne
mov
stos
adcl
push
lea
test
and
out
push
lret
lcall
loope
movaps
mov
push
negl
in
sub
ljmp
jmp
stos
nop
rcrl
mov
xchg
imul
icebp
lret
mov
not
xchg
pop
inc
and
fidivrs
rorb
inc
add
out
pop
loope
mov
inc
and
fisubrl
cmpsl
imul
leave
xchg
mov
xchg
dec
cmp
cmp
xor
roll
inc
mov
out
in
cld
sahf
sub
add
xchg
sahf
bound
cmp
cmp
popa
inc
fisttps
icebp
imull
or
fs
sub
cmc
icebp
cmpsl
jg
loop
cmpsl
test
sub
popf
adcl
adc
adc
ja
stos
fwait
popl
sti
aad
mov
mov
or
imul
push
stos
sbb
insb
jnp
jae
mov
push
jmp
xchg
mov
rol
lret
fsubrs
je
jg
ja
jnp
sbb
cmpsb
popf
xchg
cmp
push
out
sbb
dec
clc
test
mov
mov
dec
cmpsl
xchg
mov
cmpb
out
data16
sub
sahf
das
mov
mov
lods
jecxz
xchg
jle
mov
cmpsb
cmp
sahf
stc
jmp
pop
sbb
sbb
cmp
nop
cwtl
jp
mov
mov
popf
push
jp
loopne
or
cmpsb
dec
fstl
xchg
and
dec
pushf
pop
loopne
mov
xchg
out
adc
mov
cmp
bound
xor
lcall
out
cmp
add
negl
or
mov
add
sti
mov
adcb
cmovno
hlt
xchg
push
je
xor
test
test
pop
sub
add
gs
outsl
test
mov
dec
mov
out
xor
int
ret
cmp
test
xchg
int3
call
sbb
std
in
lods
mov
lret
sub
fwait
sti
mov
and
dec
sub
xor
dec
xchg
icebp
mov
and
xchg
inc
and
repnz
sbb
lret
cmp
fldt
gs
sbb
jns
jle
add
or
mov
sub
dec
sub
mov
mov
insb
sti
mov
push
jae
cwtl
lret
call
add
cmp
call
mov
sarl
mov
mov
jne
cld
lods
push
push
loope
mov
mov
enter
dec
pop
inc
push
call
outsl
sub
mov
inc
lods
pop
push
mov
lcall
jmp
clc
dec
ljmp
mov
dec
xchg
addr16
scas
lahf
and
dec
push
lods
cld
sbb
js
loope
push
loope
sub
jne
mov
pop
or
inc
lret
dec
mov
jle
insl
xlat
mov
daa
sti
add
jno
sub
push
pop
sarl
mov
xchg
movsl
xor
mov
mov
or
test
movsb
cmpsl
aas
ret
repnz
cmp
pop
lock
js
sar
popa
out
sub
sbb
dec
and
inc
xchg
ffreep
cltd
bound
or
inc
mov
int3
cmpsl
mov
sub
cmp
xor
into
sbb
xchg
jmp
iret
in
mov
icebp
xchg
jmp
dec
xor
lods
shrl
nop
jb
cmp
rorb
jge
xchg
lahf
adc
mov
mov
or
out
jecxz
test
ret
pop
xor
push
mov
inc
mov
out
cmpsb
push
mov
dec
ret
push
insb
jl
jne
mov
xchg
loop,pt
adc
inc
push
xchg
jno
movsl
and
notb
mov
jo
jns
das
cli
ror
sub
dec
or
dec
push
pusha
hlt
lods
std
push
jle
lret
notb
cmc
mov
hlt
lods
jmp
hlt
push
scas
ret
loope
das
and
mov
mov
push
xchg
and
mov
repnz
insb
pop
shr
push
fwait
mov
imul
add
call
or
xchg
push
pop
jle
or
icebp
jl
es
add
xor
xorl
stos
cmp
mov
lret
jmp
jbe
mov
ret
cmp
jno
xor
imul
popf
mov
xor
xor
pop
lahf
out
sub
cmp
fs
imul
lret
int3
push
addb
xor
xor
jl
mov
jns
mov
in
jbe
ds
popa
loop
popa
neg
mov
push
hlt
xchg
inc
and
mov
ret
fs
cmpsb
aad
mov
xor
adcb
into
mov
mov
jg
or
pop
or
popa
and
add
movsb
xor
mov
push
push
jbe
mov
and
add
test
xor
mov
push
fcoml
push
imull
pop
pop
jp
push
mov
mov
inc
mov
sub
pop
andl
dec
aad
jo
mov
flds
faddp
pop
dec
sub
push
insl
mov
js
clc
push
adc
in
lcall
add
sub
divl
sub
daa
insb
jecxz
xchg
sub
mov
mov
inc
mov
xlat
lahf
mov
es
es
or
and
cmp
or
push
or
cltd
mov
mov
add
xor
dec
pusha
add
and
scas
inc
mov
mov
mov
sub
out
xchg
test
mov
repnz
es
add
sbb
lods
data16
mov
add
adc
bound
pop
xchg
xchg
ss
test
cmp
out
adc
mov
jecxz
nop
rcrl
xchg
xor
mov
cmp
daa
scas
shlb
push
test
inc
mov
push
xchg
gs
in
shll
xor
adc
xchg
ficompl
add
mov
inc
xor
mov
mov
and
je
in
aad
mov
incb
ds
push
pop
dec
sbb
cmp
push
lret
sbb
xor
xor
in
jl
dec
loope
push
ss
pop
cmpsb
insl
pushf
lcall
jbe
xchg
and
pop
test
xor
jp
lds
std
sub
mov
loop
movsb
iret
dec
and
xor
xchg
xchg
test
fistps
mov
out
xor
outsb
sub
in
sub
push
cmp
jge
sahf
gs
jo
xchg
pop
jle
arpl
mov
pop
jecxz
mov
nop
jbe
cmpsb
xchg
rol
push
mov
jl
ja
push
add
pop
add
stc
ss
jb
lods
or
loop
test
addr16
aas
jle
lret
sbbb
sub
mov
jae
lock
shll
cmpl
push
data16
sarb
dec
push
mov
fdivp
leave
sub
cmc
lds
pusha
fisttpl
stos
mov
fs
ss
push
xor
pop
jg
pop
mov
ret
lea
sub
push
cmp
inc
mov
sbb
jne
lret
push
push
cwtl
enter
sub
cmpsb
leave
pop
add
clc
and
lret
xchg
or
xor
rorl
xchg
repz
icebp
mov
sti
cmpb
add
xor
push
repnz
push
push
and
pusha
cmpsb
or
add
fnstenv
cmp
mov
sub
and
mov
inc
cmpb
int
mov
pushf
loop
xchg
push
imul
or
sub
lcall
lds
test
sub
fcomi
push
push
mov
xor
andl
subb
mov
cmpsl
pop
ret
jae
call
push
or
fs
lods
lods
insb
dec
jmp
lods
es
sub
mov
bound
push
cld
mov
ss
jb
bound
jecxz
movsl
jae
sub
or
mov
and
adc
cmp
mov
pop
ss
xchg
and
test
mov
jne
push
in
xchg
out
mov
jmp
into
add
movsb
sti
mov
mov
cmp
and
test
xorb
mov
cmpsb
pop
std
push
mov
or
sub
cmp
mov
dec
cmpsb
scas
add
es
sti
jmp
dec
adc
mov
aas
les
jmp
xchg
xor
xor
mov
add
mov
adc
sarl
js
out
mov
pushf
iret
mov
sbb
fdivl
push
lods
or
or
movsl
sub
in
cmp
out
aam
insb
jmp
es
inc
mov
loop
mulb
leave
mov
movsl
cmpsl
jecxz
inc
js
pop
adc
mov
leave
scas
into
sub
xchg
movsb
ret
sub
loop
in
jns
or
adc
aad
push
and
cld
pop
in
cmpsl
inc
mov
shlb
rol
adc
xor
cmpsb
xor
mov
mov
xchg
add
lods
mov
jl
pop
fcmovnb
mov
xchg
out
and
sbb
sbb
mov
mov
pop
test
scas
outsb
aas
leave
hlt
pop
and
das
dec
sbb
jp
je
mov
sub
scas
lods
adc
add
sahf
jle
subb
ljmp
stos
dec
or
mov
dec
lea
enter
sub
jmp
lret
inc
movsl
arpl
loope
scas
jns
and
xchg
sub
pop
leave
push
sbb
adc
push
cmpsl
ja
pop
xor
add
xchg
loop
in
xchg
shl
sub
mov
xor
jle
fnstenv
sar
dec
hlt
iret
popf
lcall
cmp
add
mov
xlat
xchg
cmp
out
mov
in
dec
lds
js
loope
pop
or
out
es
in
test
rorb
out
into
repnz
dec
cmp
imulb
repz
jp
mov
xchg
xor
mov
mov
jge
insl
xor
test
popa
not
repnz
push
sbb
sti
cmp
jne
into
aaa
or
push
jg
sub
pusha
jecxz
repz
adc
mov
movsb
iret
pop
repz
packsswb
sbbl
and
je
out
sbb
jp
aam
xor
push
jo
loop
and
sbb
jbe
sub
jecxz
incb
sbb
fistpl
dec
out
dec
mov
leave
or
mov
test
dec
mov
aam
test
inc
pop
or
dec
leave
and
sub
add
xchg
push
shll
sbb
test
loopne
mov
loop
fcmove
insb
fldenv
push
jmp
push
mov
push
lds
mov
sti
jne
popf
mov
out
mov
push
subb
pop
mov
divl
or
xor
leave
imul
sbb
cmp
aaa
je
adc
pushl
inc
cli
hlt
cmp
mov
jl
andb
stc
mov
adc
addb
outsl
jge
add
in
pusha
inc
fstps
divb
mov
jae
int
cmp
mov
and
dec
pop
and
stos
mov
sub
sti
and
arpl
lods
dec
scas
fdivrp
loopne
jecxz
or
inc
cmp
sub
stos
mov
test
xchg
loop
and
xchg
movsb
cmp
and
cmp
mov
mov
lret
or
mov
fidivs
xor
subl
hlt
inc
mov
loop
sti
das
jns
jmp
mov
cmp
cmp
test
dec
aas
in
stos
sbb
mov
jns
jl
cli
cmpsb
int3
mov
lret
popa
push
fs
movsl
gs
lahf
ret
addr16
sbb
ss
loopne
sti
cmp
inc
pop
ljmp
outsl
dec
aad
adc
dec
dec
ja
cmp
mov
sbb
imul
popf
xchg
sub
pop
ror
mov
mov
sub
pusha
mov
lods
mov
adc
sbb
pop
subl
adc
cmp
addl
test
daa
ret
jnp
inc
cmp
inc
add
and
rorb
sub
push
mov
add
inc
fists
push
daa
xor
xchg
mov
decb
addr16
xchg
adc
inc
into
pop
test
mov
leave
in
nop
mov
hlt
or
xor
sub
jecxz
sbb
add
les
lods
lds
cmp
and
lahf
es
fwait
jl
cmp
push
loop
es
out
js
add
jmp
mov
inc
mov
jp
ss
fisubl
adc
xlat
inc
push
cltd
and
ja
or
mov
cli
ficoms
and
bswap
es
jp
and
mov
xor
shrl
push
ljmp
and
out
in
adc
sbb
mov
mov
out
xchg
push
ret
pop
inc
sti
in
test
imul
cmpsl
stos
pop
mov
pop
sub
sub
out
cld
mov
movsl
lret
jmp
stc
jae
mov
lcall
scas
outsl
sub
das
es
sbb
in
sbb
xor
out
leave
mov
lds
jb
fisttpll
jp
or
xor
call
aaa
cmpsl
rcrb
fbld
adc
leave
movsl
add
cmp
push
loopne
mov
lea
jmp
xor
mov
test
inc
sbb
add
mov
xor
andb
cmpsb
jecxz
leave
inc
test
xor
sahf
loope
mov
sbb
fcoml
xchg
mov
and
jne
fcoml
xor
xchg
sarb
enter
jo
mov
pushf
adc
jae
or
jp
jecxz
jbe
orb
aaa
mov
sbb
in
adc
cmp
sbbl
mov
jae
pop
lret
push
out
xchg
std
out
or
lds
push
daa
mov
test
xchg
sub
ss
mov
jg
in
movsb
mov
clc
push
push
loope
jl
sbb
fsts
rcrl
mov
jg
mov
mov
mov
iret
repnz
subl
stos
nop
sub
es
pop
test
enter
sbb
pushf
push
lds
lods
push
data16
leave
scas
mov
repz
repz
mov
mov
addr16
frstor
cmpsl
popf
adc
push
xor
xchg
popf
orl
inc
xchg
fs
ficompl
aad
and
pop
inc
sub
and
ljmp
and
testb
hlt
dec
cmpsb
sahf
ds
js
xchg
sub
mov
es
jmp
mov
mov
cmc
and
pusha
dec
popl
js
stos
jbe
in
pop
sarl
movsl
repz
adc
mov
pop
stos
aaa
into
fldt
scas
or
sbb
cld
loop
je
call
xchg
add
aaa
pop
enter
mov
mov
pop
cwtl
sbb
js
mov
pop
aad
sbb
lods
lahf
stc
or
fstpl
fcomps
lods
dec
in
mov
scas
ss
leave
divb
scas
ret
xchg
aad
stos
pop
or
test
mov
push
adc
cmp
xor
inc
fsubrl
sbb
push
add
xor
addr16
mov
pusha
mov
test
or
notl
in
mov
xor
popf
add
std
inc
out
divl
inc
mov
addr16
sarb
adc
sub
sti
xchg
jo
int
xchg
mov
leave
inc
cmp
cmp
jns
inc
out
sbb
sbb
subl
pushf
and
movsl
jl
cmpsl
mov
js
outsb
xchg
leave
dec
insb
fisubl
das
sarb
mov
sbb
sti
testb
mov
das
mov
mov
cmpl
xchg
mov
xchg
daa
int
adc
inc
cltd
test
sub
xchg
gs
mov
enter
inc
push
out
clc
dec
enter
leave
mov
movsb
ja
lock
popf
push
lods
mov
imulb
or
xor
jmp
sarb
mov
add
add
test
or
jno
xchg
loop
or
push
mov
loop
test
adc
push
rolb
add
mov
cli
push
loop
push
jae
jge
mov
stos
mov
outsl
or
xchg
cmpsl
xor
jg
mov
jnp
ja
jne
fidivs
aas
pusha
ficompl
arpl
and
ss
popa
cmp
sbb
dec
jb
loope
xor
enter
aas
repz
hlt
xor
out
pop
bound
mov
jo
fsubrp
ret
data16
mov
and
es
std
mov
imul
add
pop
sbb
mov
cmp
cmp
repz
or
jne
xlat
enter
pop
cmpsl
push
pop
jbe
push
pop
loop,pn
clc
fldt
push
add
daa
cli
xchg
mov
scas
ret
rcll
lahf
xchg
jno
dec
cmc
xchg
pop
pop
add
mov
jl
or
inc
xor
cmp
pusha
clc
xor
adc
cmp
xor
mov
jg
adc
shlb
nop
mov
add
push
andl
scas
ss
or
and
jmp
in
fsubs
xchg
int
add
xchg
stos
in
mov
jae
es
lret
mov
jnp
stc
xor
push
jmp
mov
push
or
test
push
lods
mov
inc
xchg
xchg
inc
fsub
shll
push
icebp
jg
xchg
or
pop
out
jecxz
mov
dec
mov
xchg
lods
test
sub
push
xlat
in
sbb
cld
xchg
cmpsl
sub
mov
xor
pop
xchg
repz
movsl
and
cs
sbb
sbb
sbb
sbb
data16
cltd
les
and
ret
cwtl
xchg
js
inc
xchg
stc
loope
push
cmc
xor
cs
sub
xor
mov
mov
rolb
test
mov
fucomi
ljmp
movsb
ror
in
or
or
lahf
mov
pop
mov
ficoms
daa
inc
mov
xchg
testb
pop
pop
sti
test
xchg
sbb
in
mov
out
shl
or
mov
mov
sahf
xchg
cli
sarl
add
pusha
mov
fmuls
sub
mov
movsl
push
hlt
fwait
pusha
std
mov
add
and
sbb
jl
jbe
pop
mov
mov
hlt
aas
movsl
cmp
loop
test
lret
adc
cmp
and
mov
pop
adc
imul
xchg
insl
sub
or
push
inc
and
cmp
or
mov
xor
mov
jp
xchg
cltd
pop
jbe
dec
shlb
mov
int3
arpl
std
mov
enter
dec
les
dec
lods
and
jne
jo
xchg
aam
jge
lcall
or
aam
aas
stos
push
lock
xchg
fldenv
dec
test
mov
sub
stos
movsb
addr16
lods
jne
push
cltd
xor
cli
mov
mov
ds
shll
cmpsb
in
test
push
fst
mull
xor
xor
loope
push
loop
mov
mov
xor
dec
add
into
sarl
fistpll
xchg
cmpsb
and
pushf
outsb
lds
out
ds
dec
sbb
pop
mov
int3
xchg
xchg
shll
arpl
ret
imul
out
call
adc
ss
dec
cs
xorb
loop
dec
jnp
adc
inc
or
adc
adc
stc
mov
add
push
repnz
mov
xor
xor
in
jmp
sub
ja
fwait
xlat
or
and
scas
cmc
mov
lods
xor
mov
adc
cli
mov
dec
cmc
jo
push
sti
jecxz
fldl
mov
xchg
out
out
notb
repnz
repnz
jae
sahf
pop
cs
mov
pop
popa
cmp
aam
mov
and
shrl
add
mov
jecxz
mov
out
movsl
mov
loop
pop
lahf
mov
jae
subb
pop
and
daa
cli
rcrb
add
cmpsb
popf
fwait
mov
mov
xchg
rorb
jecxz
mov
pop
aam
invd
lahf
mov
xchg
es
xchg
leave
dec
cmpsb
add
scas
pop
enter
hlt
bound
movsl
sub
ja
mov
jecxz
xchg
fidivrl
push
xor
test
ds
push
test
test
or
jecxz
xchg
xchg
shrb
filds
ljmp
pop
pop
xchg
mov
jns
cmpsb
mov
mov
test
fs
xor
and
push
mov
jns
dec
mov
mov
repnz
push
mov
xchg
jno
sub
popa
popf
or
sarb
fsubrs
cmpsl
pop
xchg
insl
mov
jecxz
mov
test
add
mov
fisttpl
enter
mov
movsb
mov
iret
sub
int
popa
ror
mov
mov
test
js
pusha
addr16
jmp
adc
sbb
test
mov
or
repnz
inc
add
mov
add
xchg
adc
clc
leave
mov
movsb
mov
loope
mov
sub
mov
xorps
aam
loope
jmp
jp
int
cli
mov
mov
stos
xor
fcomip
sub
stos
xor
mov
adcl
inc
movsb
xor
cltd
stos
sti
popf
adcl
sub
test
adc
loope
fbld
rcl
sbbl
loope
fistpl
lret
push
ja
mov
dec
mov
stos
jmp
stos
inc
mov
sub
icebp
jecxz
loop
test
pop
cwtl
popa
mov
pop
sbb
jbe
sbbb
mov
xchg
adc
push
cmc
cmp
jne
xchg
icebp
decb
sbb
adc
or
mov
xorl
jle
enter
or
mov
sub
out
out
imull
dec
jecxz
mov
push
cmp
jecxz
adc
lcall
pushf
shll
dec
das
mov
push
icebp
movsl
outsl
aam
xor
push
cmpsl
jge
enter
mov
and
sub
cmpsl
aas
mov
in
fdivrl
in
add
pop
pusha
cmp
mov
jp
out
xchg
and
push
ja
cmp
mov
or
push
sar
mov
mov
or
mov
xchg
jae
ds
ljmp
movsb
test
dec
xchg
mov
add
mov
or
push
shrl
mov
int
ret
call
inc
mov
mov
jecxz
jmp
enter
dec
popf
mov
xchg
lods
cli
loop
shl
pop
adc
clc
and
stos
enter
lods
adc
add
pop
sub
dec
jg
mov
rorb
popa
jne
or
mov
cmp
arpl
mov
dec
xor
sub
xor
cltd
xlat
mov
je
mov
push
hlt
xor
xor
repz
adc
jle
leave
ror
mov
and
and
jg
push
out
std
jg
ret
adc
push
mov
mov
cmp
arpl
es
sub
push
test
fisttpll
inc
out
notb
out
mov
xchg
and
js
das
mov
sbb
stos
sub
xchg
pop
add
dec
js
rorl
sub
sub
jae
cmp
sbb
xchg
inc
sub
lret
push
sbb
mov
jae
jbe
pop
mov
cmp
inc
retw
in
push
mov
popf
rorb
stos
xor
jno
fisubl
push
pop
into
rorb
sbb
aaa
and
imul
mov
cmpb
sub
arpl
jae
pop
pop
mov
fiaddl
xor
xchg
push
test
cmp
sub
outsl
or
test
jns
data16
mov
test
roll
jbe
and
fistl
sbb
imul
and
scas
jmp
fistpll
sti
mov
mov
ret
stc
dec
fs
or
xor
nop
xor
inc
out
add
dec
mov
sbb
cli
push
insb
mov
test
pop
fcmovnbe
int
cltd
xor
inc
mov
movsb
leave
xor
jl
or
aas
dec
add
cmpsl
xlat
mov
stos
test
popa
jae
sub
pop
and
pop
or
jmp
hlt
in
stos
daa
bound
int3
gs
flds
dec
mov
clc
stos
call
sti
aad
enter
cltd
push
fwait
jnp
pop
or
pop
xchg
add
and
in
pop
inc
jae
cmp
jae
cmp
inc
xor
push
cmp
mov
pop
mov
jae
jo
dec
jno
push
xchg
lock
mov
add
and
dec
cli
sbb
cmpsb
setp
in
repnz
stos
divb
cld
jns
fldl2e
out
sub
mov
push
arpl
sub
mov
fisubl
ss
test
es
push
mov
dec
mov
sub
shll
ja
adc
stos
lret
mov
or
xor
das
ss
push
sbb
ja
jne
jnp
ret
dec
adc
push
leave
addb
pop
shrb
push
pop
and
jae
out
fcmovne
dec
cmp
cli
add
scas
js
cmpsl
std
mov
stos
jno
popf
popf
mov
or
push
mov
cs
int3
testl
enter
call
xor
daa
push
sub
or
xchg
sti
cmpsb
add
mov
sub
fcomp
push
sbb
pop
movsb
mov
popa
mov
xchg
jl
and
or
test
mov
push
and
lcall
in
jecxz
lret
jae
dec
xchg
adc
popa
in
xor
call
fidivrl
fnsave
dec
jmp
mov
leave
mov
faddl
dec
jge
mov
or
in
push
sub
lret
lahf
push
xchg
or
scas
mov
in
loop
lret
mov
insl
leave
aaa
pop
cmc
mov
cmc
dec
cmp
fadd
jmp
nop
test
jbe
inc
sbb
xchg
aas
std
cmp
pop
sub
mov
in
mov
sub
call
inc
rol
imul
iret
or
std
xor
jmp
adc
call
sub
dec
popfw
lods
adcb
cld
mov
call
pop
pusha
sub
xchg
addr16
pop
ljmp
inc
pusha
outsb
dec
ja
repz
push
inc
inc
or
fsubrl
lcall
js
inc
or
lea
or
pop
lods
inc
leave
xchg
mov
out
mov
add
add
aad
mov
mov
and
mov
int
je
outsl
hlt
xchg
mov
mov
addr16
daa
push
lcall
cmpb
in
sbb
das
inc
cltd
test
mov
ds
in
cmpsl
pop
or
dec
inc
icebp
adc
js
inc
pop
cmpsl
push
xor
xor
mov
cmpsb
dec
fisttpll
push
mov
stos
mov
loop
sub
jmp
sbb
mov
pushf
daa
or
in
xchg
cmp
mov
xlat
movsb
adc
cmp
push
loopne
push
ss
out
mov
out
or
insl
jmp
mov
jge
ret
std
in
out
cmp
cmp
pop
jmp
sbb
mov
and
push
mov
pop
or
cli
push
in
sub
and
std
inc
sti
ficoml
cmpsl
jl
lea
repz
mov
xchg
daa
test
es
xor
and
pop
clc
popf
es
xchg
jae
sub
out
loope
outsb
xchg
fldenv
inc
shrl
xor
mov
or
es
dec
push
xor
mov
xor
inc
sub
and
lret
or
aaa
lea
inc
in
push
and
or
pushf
and
shlb
mov
shll
and
and
test
mov
sbb
ja
test
mov
mov
xchg
mov
fnsave
xor
std
js
call
lcall
rcrl
int
or
cmp
test
stos
pusha
test
ljmp
mov
arpl
test
movsl
outsl
inc
lods
push
mov
mov
int3
hlt
addr16
xchg
dec
add
xchg
xor
push
iret
je
jp
sbb
addr16
fwait
test
in
sub
xlat
imul
je
pusha
insb
int
push
jp
jae
mov
jl
cmpsb
leave
aam
push
aaa
enter
sbb
sbb
dec
ds
push
cwtl
fwait
sub
add
sub
sbb
movsb
sbb
fisubl
mov
xor
push
xchg
sub
insl
xchg
or
jmp
dec
ljmp
lcall
cmp
inc
int3
sarl
mov
ret
iret
or
or
inc
shll
xchg
push
popa
and
test
xor
ror
xor
jmp
push
pop
ja
or
scas
push
xchg
lahf
push
push
xchg
xchg
sarb
xchg
enter
jl
mov
lret
cmp
movsb
push
mov
sub
clc
pop
lahf
inc
jecxz
mov
push
xor
movsb
jecxz
stos
shr
scas
imul
mov
xchg
jecxz
out
rorb
cltd
ljmp
lcall
jmp
cmpsb
test
xchg
or
jl
sarb
mov
or
or
hlt
lcall
ret
add
jecxz
negb
in
stc
mov
insb
mov
mov
cmpsl
mov
fsubrl
lahf
mov
scas
sub
pop
mov
aas
mov
pop
lods
mov
sub
mov
adc
out
cmp
add
sbb
std
mov
mov
movsb
mov
mov
xchg
sub
lods
sbb
lods
jecxz
out
cmpsb
frstor
mov
add
scas
cmpl
call
test
int3
mov
call
daa
xchg
jae
push
inc
add
imul
xor
pop
dec
mov
mov
daa
leave
cmpsb
sub
adc
cmp
cmpsl
xor
xchg
popa
int
andb
push
aas
jnp
mov
lods
ljmp
leave
jns
jo
test
fwait
test
or
mov
out
xor
mov
push
or
mov
mov
fnstcw
std
add
call
data16
or
into
mov
hlt
lods
insb
or
xchg
mov
jmp
sub
cmp
lea
mov
enter
into
jecxz
hlt
lods
mov
jg
mov
cmpsb
xchg
popf
jno
loope
dec
cmp
jno
leave
imul
loop
or
cmp
add
cld
cltd
mov
inc
cmp
dec
subl
sub
shrl
jmp
inc
icebp
test
push
aad
lods
xor
jne
je
out
add
xchg
inc
push
mov
fs
leave
int
fildl
addb
lock
adcl
xor
dec
sbb
out
xchg
aas
add
repz
mov
push
sub
mov
ret
imul
movsl
sbb
outsl
pop
pop
data16
mov
mov
jecxz
call
jecxz
cli
ds
pushl
or
out
and
jecxz
cmc
add
popf
imul
sub
jecxz
out
ljmp
mov
xor
in
pop
and
and
test
or
sub
sbb
loop
mov
lret
pop
arpl
stos
xchg
mov
jb
mov
cmp
xor
ss
mov
subb
mov
push
mov
mov
cmpsb
jae
inc
sub
mov
sub
out
sbb
js
and
fwait
pushf
jge
cmp
jae
mov
cmpsl
shll
scas
pop
enter
pushf
adc
popa
mov
push
jl
sbb
ja
xchg
push
sbb
inc
xchg
adcb
mov
into
mov
call
cmpsl
pop
test
addr16
test
aas
xchg
rclb
enter
pop
cmp
sahf
or
cli
lret
mov
and
out
or
jle
sbb
jb
push
pop
mov
and
push
xchg
daa
scas
pop
xor
insb
jle
mov
and
pop
xchg
jecxz
mov
roll
cmovg
movsb
fsubl
sub
or
enter
into
loope
adc
xor
imul
scas
ds
dec
sub
leave
mov
sub
imul
cmpsb
mov
fs
js
pop
add
or
pop
mov
mov
popf
mov
hlt
popa
jbe
and
mov
popf
xor
clc
fwait
mov
adc
popf
sub
lods
stos
pushf
fisubl
cmpsl
pop
and
cmp
mov
xchg
lods
xchg
jne
xor
imul
je
mov
aam
jo
jnp
leave
scas
adc
dec
lahf
push
ljmp
xchg
mov
in
pusha
push
adc
push
sub
scas
pop
aam
mov
pop
stc
jmp
rcll
je
sub
cwtl
addr16
rorl
daa
movb
std
loope
xchg
jl
subl
fisubs
scas
sbb
sbb
lea
test
push
inc
mov
xor
mov
mov
jno
idivl
push
xchg
xorb
mov
das
dec
dec
mov
sbb
mov
mov
shlb
test
je
mov
xchg
inc
test
and
mov
mov
mov
cmp
cmpsb
in
gs
mov
mov
mov
xchg
movsb
mov
lahf
mov
lcall
popf
repz
xchg
dec
jmp
pop
test
push
mov
jge
adc
jae
ss
mov
push
jb
andb
sub
ror
xchg
or
mov
or
test
sub
mov
jge
popa
into
decl
push
pop
push
inc
jb
mov
cmp
add
mov
push
dec
jg
sbb
xor
in
outsb
jge
in
popa
xchg
popa
iret
divb
lcall
ss
incl
into
addr16
ja
or
jg
leave
cs
hlt
out
xchg
push
mov
in
js
fldt
xor
ljmp
repz
test
mov
push
mov
or
add
movsb
mov
xor
push
mov
mov
mov
cmpsb
mov
mov
mov
inc
push
and
inc
js
mov
sti
xlat
repnz
dec
mov
adc
out
popf
mov
nop
stos
inc
int
xchg
ror
imul
push
lcall
mov
shrb
xor
repnz
adc
push
std
out
ss
in
cmp
jecxz
xor
xchg
jl
aad
mov
lds
in
ja
data16
adc
push
cmp
mov
enter
sbb
pop
nop
es
mov
and
mov
mov
sbb
mov
imul
in
jg
cmc
cmpsl
pop
push
sub
and
icebp
jnp
sti
mov
imul
mov
sbb
mov
lods
mov
mov
add
or
adcl
sbb
shlb
jp
mov
push
add
lahf
movsb
mov
into
test
push
scas
cwtl
aaa
mov
sbb
mov
ljmp
add
mov
mov
test
sub
std
out
daa
adc
ja
pop
and
test
dec
lahf
fcoms
mov
clc
sub
mov
and
js
push
and
xcrypt-ecb
cmpsl
or
dec
call
shlb
mov
mov
out
mov
mov
dec
and
sti
lahf
lods
mov
jns
stos
cmc
mov
push
mov
sub
mov
mov
cs
nop
fs
mov
sbb
out
push
arpl
sbb
push
or
frstor
hlt
cmpsb
in
xor
adc
iret
shlb
bound
test
and
sub
sub
leave
mov
add
add
aam
into
in
cmp
push
out
adc
cltd
and
ss
fdivr
aas
mov
mov
jne
cmpsb
loope
out
ftst
push
dec
pop
cmpsl
jb
and
mov
notb
cmp
dec
aaa
mov
cli
jle
lea
pop
mov
cmp
cmp
jl
push
rorl
loop
fdivrl
xor
mov
mov
out
xor
sbb
mov
mov
addr16
adc
jl
popa
or
repnz
xor
mov
add
aaa
adc
ja
bnd
stc
pop
mov
aas
push
or
mov
xchg
popa
icebp
push
imul
rcll
lahf
scas
push
and
xor
or
push
mov
sbb
dec
and
jne
inc
xchg
sub
leave
cmpsb
idiv
cmp
das
sbb
xor
aad
lea
mov
xchg
cmpsl
sbb
popa
test
clc
test
push
mov
loope
clc
test
add
jb
lods
rcl
dec
dec
repz
xchg
mov
test
ljmp
push
jmp
imul
push
aas
jb
mov
cld
jbe
in
divl
push
aaa
cs
push
pop
cmp
mov
or
idiv
mov
fnstsw
xchg
scas
mov
test
or
aad
cli
aas
inc
push
jmp
or
loopne
testb
mov
enter
popf
sti
insb
inc
shlb
xchg
mov
gs
xor
cmp
cmp
or
lea
xor
push
sub
sub
push
cvttps2pi
pop
cli
push
mov
mov
cmpsb
mov
ja
adcb
push
mov
clc
push
mov
popf
sarb
pop
pop
stc
mov
pusha
push
push
push
pop
call
fimuls
push
adc
outsb
push
xor
push
mov
sti
ja
testl
enter
inc
dec
aas
shlb
adc
pop
mov
sahf
push
push
add
ficoms
adc
test
daa
push
int
mov
outsb
pop
mov
adc
dec
or
out
mov
pop
fsubrl
mov
cmp
cwtl
jp
jns
popf
mov
dec
dec
adc
jb
in
xor
add
xor
or
mov
inc
mov
push
insb
js
mov
test
shlb
in
mov
adc
push
push
sti
add
mulb
add
xor
popf
frstor
add
icebp
adc
and
fs
mov
stos
mov
hlt
mov
mov
add
push
stos
pop
stos
or
sub
mov
in
test
mov
push
sub
into
jno
scas
shr
repz
dec
ja
fsubrp
test
ret
popf
stos
cmpsl
in
int3
in
push
test
mov
data16
js
sub
cli
scas
aam
mov
xchg
sub
pushf
mov
inc
cmp
sub
pop
hlt
mov
nop
xor
mov
stc
sub
enter
loopne
xchg
fstpt
mov
shr
es
xor
and
adc
sub
mov
inc
ret
stos
nop
xchg
dec
cmp
inc
dec
jecxz
or
add
idiv
daa
lcall
popf
imul
lcall
and
aas
cmpsb
xor
imulb
sahf
fldt
out
lea
aas
xor
stos
andb
push
lcall
test
ja
cmpsl
add
in
fwait
mov
jecxz
xchg
sub
cltd
jae
mov
std
mov
sub
inc
lods
imul
cmpsb
xor
fwait
loope
mov
cmp
or
les
xor
adc
sub
into
pop
dec
insl
fs
ss
jp
add
or
mov
in
sub
in
sbb
ljmp
xor
cmp
sahf
loopne
dec
jmp
subl
mov
ret
jmp
ss
out
mov
mov
jecxz
test
data16
adc
jmp
sti
imul
dec
jno
xlat
insb
in
ror
inc
push
shrl
mov
fwait
jmp
inc
push
test
test
mov
dec
xor
lcall
sub
jg
push
fisubs
push
push
testb
repnz
nop
mov
sub
jl
mov
mov
test
jecxz
or
int3
aam
mov
cmp
repnz
pushf
hlt
jno
sub
fists
call
sbb
xor
mov
cmp
repnz
test
add
xchg
and
sbb
jnp
stos
int3
nop
enter
cmc
sbb
mov
xor
mov
lods
ljmp
add
cmpl
imul
push
fnstsw
lret
sbb
mov
call
pop
lret
pop
mov
xchg
int3
movsb
jmp
stos
jl
push
mov
jg
cmpsl
cmpsb
xor
mov
and
leave
dec
adcl
and
arpl
mov
test
and
mov
orl
clc
mov
int3
mov
aas
cmpsl
out
pop
push
sahf
jg
loop
sahf
hlt
push
mov
cmpsb
rcr
mov
jge
add
mov
jne
fmull
push
cmp
xor
popf
lods
or
jle
enter
jne
mov
jo
loope
lea
add
jg
pop
or
hlt
push
mov
fbld
push
movsl
stos
dec
dec
sub
scas
inc
aad
ret
xchg
add
jmp
push
jle
in
pop
or
lods
daa
dec
loope
mov
leave
jne
sub
mov
loope
mov
scas
cmpsl
movsb
das
push
imul
shlb
lretw
decl
add
adc
popa
xor
mov
mov
enter
mov
push
out
notb
cmp
xor
cmpsb
xchg
mov
add
mov
jns
std
add
inc
pusha
sub
push
std
fwait
shrl
jp
faddl
andl
mov
loopne
cmp
lea
ljmp
enter
lret
mov
popa
lret
lret
mov
nop
xor
adc
sub
inc
les
sub
fcoml
push
mov
jae
sbb
dec
cltd
jbe
xchg
mov
jg
fs
test
cltd
sti
aaa
lcall
push
mov
stos
test
push
or
orl
or
stos
adc
mov
push
mov
mov
test
lret
fisttps
mov
cmpsl
xor
jl
cmp
add
pop
jmp
mov
jne
lcall
xchg
out
lahf
arpl
enter
daa
aad
xchg
mov
pop
pop
push
dec
jno
push
add
sub
clc
cwtl
mov
and
in
cmpsb
sub
ss
insb
push
and
ror
mov
out
aam
push
mov
xchg
mov
push
std
xor
fstps
test
bnd
pop
pop
scas
mov
mov
jle
push
out
loope
in
test
mov
mov
cmp
and
cmp
fwait
jns
daa
push
stos
cmp
cmc
cs
test
js
lcall
popf
cmp
add
rolb
pushf
outsl
dec
pop
mov
test
push
sub
inc
lret
mov
jae
stos
outsb
xorl
jl
cld
pop
push
and
ds
jne
xchg
xchg
lret
stos
mov
mov
mov
pop
xor
lcall
outsb
xchg
pop
stos
dec
rcrl
stos
pop
test
cmp
cmp
and
dec
and
mov
je
es
lahf
jecxz
lahf
outsb
mov
imul
divb
sub
xor
dec
fwait
in
cmp
test
cwtl
push
mov
inc
mov
lret
cli
inc
adc
sbb
mov
out
xchg
test
xchg
sub
mov
insl
and
and
mov
pop
js
push
mov
cmp
into
cmp
sub
test
mov
push
push
mov
loop
xchg
add
pop
sub
push
push
xchg
and
mov
mov
test
ds
mov
mov
es
fisubs
push
xchg
xchg
mov
fsubp
popa
or
test
outsb
je
insl
mov
fistpl
out
inc
push
xlat
and
push
dec
in
in
imul
js
pop
setae
pushw
cmpsb
pop
iret
mov
cmpsb
insb
add
xor
xor
lcall
pushf
cwtl
cmpsl
out
shll
sbb
xchg
or
arpl
lret
lock
jbe
dec
repnz
add
leave
add
faddl
leave
jge
movsb
test
cmpsb
loop
sub
daa
sar
ljmp
adc
rorl
mov
addr16
mov
pop
sbb
leave
out
in
incl
jns
jmp
sarb
repnz
sub
loopne
cmp
add
in
in
clc
test
cmpsl
cmp
stos
xor
and
cmpsl
shll
or
pop
outsb
xlat
mov
xchg
scas
jp
pusha
jg
cmpsl
in
into
sub
leave
pop
cmp
mov
cmpsl
imul
outsl
insl
add
enter
adc
add
addr16
andl
cld
test
int3
test
xor
mov
fwait
jge
cmp
adc
ja
xchg
mov
or
xchg
js
js
xchg
pop
filds
sti
mov
mov
ss
in
into
push
or
aaa
or
cmc
and
or
push
cmp
or
cbtw
add
jecxz
mov
jle
jae
dec
clc
scas
mov
jb
fwait
jecxz
lods
into
xor
pop
jp
sbb
mov
push
jg
push
dec
data16
xchg
jle
cwtl
push
and
mov
es
addr16
es
jl
push
inc
cmp
cs
inc
push
leave
and
cmpsl
jl
orb
dec
add
dec
xchg
cmp
cmpsl
mov
or
subl
stos
push
in
cmpsl
test
aaa
jmp
mov
xchg
hlt
leave
data16
add
pop
cmpsl
ret
jne
dec
adc
leave
mov
mov
sbb
mov
call
aam
std
xchg
cld
aaa
outsl
lods
shll
enter
lods
imull
adc
adc
out
nop
add
ljmp
push
leave
gs
push
mov
jno
in
inc
ds
cmp
pusha
out
sbb
out
clc
lds
shl
push
ds
out
insb
add
cmp
cmpl
pop
sti
lods
mov
scas
xchg
jge
inc
xor
cmpsb
idiv
and
in
dec
frstor
popa
cli
dec
jb
shlb
das
mov
imul
pushf
mov
scas
inc
xor
jns
push
mov
sbb
jns,pn
mov
jbe
adc
ds
inc
pop
cld
lcall
call
add
jnp
test
cs
pop
mov
movsb
push
mov
std
iret
mov
jle
jl
push
js
pusha
mov
loopne
arpl
pop
mov
scas
mov
icebp
jecxz
push
pop
in
jecxz
leave
sti
test
and
std
lods
jnp
pop
lret
and
mov
out
sub
inc
rorl
or
ss
push
jp
push
testb
xchg
scas
pop
fldl
jns
cmp
sbb
mov
mov
xchg
cli
test
mov
cmpsb
cmpsl
jmp
and
fsub
xchg
adc
test
scas
and
stc
lret
adc
movsb
aam
js
js
xchg
pop
mov
mov
jae
fbld
and
inc
mov
mov
or
add
lods
push
mov
jmp
je
loope
pop
sub
jns
stos
jnp
jne
mov
mov
notb
ret
push
shlb
ret
pop
push
or
popa
inc
sbb
aad
xor
jbe
dec
repz
daa
nop
cmpsb
jp
and
jmp
sub
push
jns
push
in
adc
inc
push
sub
xor
sahf
pop
orb
cmp
inc
xchg
fwait
dec
mov
ret
icebp
add
add
cmp
mov
aad
subl
data16
or
dec
jno
xor
cmc
push
mov
sub
repz
les
mov
dec
stc
test
mov
sub
pop
xor
xchg
xchg
pop
fistpll
mov
ljmp
mov
jg
inc
mov
in
rcll
popa
movsl
mov
ljmp
pop
sub
sbb
mov
jmp
mov
inc
jmp
incl
stos
loop
outsb
lahf
fdivrp
mov
jg
aad
test
ret
addr16
jp
cmp
jbe
es
mov
es
cli
ss
jg
pop
mov
or
jae
lods
cld
dec
fimuls
pop
xor
xor
xchg
sbb
mov
cltd
dec
icebp
loop
loop
xor
sub
into
and
adc
cltd
iret
or
loopne
mov
and
lcall
xor
add
add
and
dec
jmp
inc
scas
and
in
mov
sbb
jae
jns
lcall
ja
xchg
pushf
lahf
mov
sar
mov
inc
out
cmp
imul
imul
push
test
add
out
mov
ds
mov
and
inc
mov
xchg
dec
xchg
xor
daa
cltd
ret
pop
outsb
jecxz
pop
jne
adc
and
aas
mov
push
in
cmpsb
cmp
call
dec
cs
sti
push
rorb
ja
sahf
daa
test
push
scas
inc
inc
adc
xor
mov
jmp
pop
xchg
dec
fidivrl
into
repz
and
lret
xchg
stc
mov
mov
outsl
cltd
fisttpl
fwait
pop
lret
adc
dec
jmp
adc
mov
hlt
add
pop
dec
popa
mov
jmp
jbe
mov
xchg
dec
fxch
sub
notl
notl
xchg
cli
sti
daa
jg
and
test
cltd
sbb
xor
jmp
lods
xorl
push
xchg
icebp
cmp
cli
push
loop
cs
shll
jg
ds
inc
cwtl
ja
mov
xchg
rcrl
cmpsl
xchg
jmp
lods
ret
mov
cmp
mov
jle
sub
mov
cmpsl
mov
mov
and
int
mov
bound
andl
pop
cmp
add
fwait
mov
mov
mov
fcmovnbe
dec
pop
push
mov
and
out
lds
mov
cmp
cmpsb
cmp
stos
popf
test
fwait
mov
adc
popa
jno
arpl
mov
add
mov
and
inc
andl
mov
dec
mov
sbb
mov
or
mov
sbb
lret
mov
cmpsl
nop
sub
cmp
aad
aad
jge
dec
cmpsb
out
lea
jmp
mov
cmp
mov
ffreep
clc
mov
dec
lret
ficomps
out
push
sbb
daa
orl
push
cltd
out
cmp
cmpsl
pop
arpl
xorl
and
add
and
lcall
jae
sub
imul
sub
dec
call
add
int3
xlat
adc
pusha
and
shll
outsl
or
and
xor
andl
mov
mov
mov
mov
movsb
sti
mov
gs
pushf
test
mov
imul
mov
mov
jecxz
mov
jp
mov
aas
and
scas
mov
cli
lods
test
out
aad
mov
jo
test
popf
cmpl
mov
or
mov
into
in
adc
push
sti
mov
or
rcrl
in
add
mov
mov
xchg
mov
pusha
pop
dec
jp
mov
xchg
mov
xchg
mov
gs
and
cmpsl
mov
andl
xchg
fwait
or
loope
mov
inc
jmp
shrb
mov
push
subb
add
and
cmpsb
and
test
mov
lds
sahf
mov
mov
dec
shll
lods
push
jecxz
gs
mov
mov
and
fs
xor
out
cmp
xchg
cmp
lcall
jmp
mov
aas
pop
mov
shl
dec
dec
inc
mov
xchg
mov
jl
je
jmp
cmp
faddl
cli
mov
mov
xlat
insb
mov
mov
and
mov
hlt
scas
xlat
mov
xchg
nop
outsl
push
lret
loope
mov
mov
cmpsl
mov
mov
adc
jecxz
and
jecxz
and
imul
test
and
into
mov
jmp
in
mov
push
out
mov
xchg
mov
or
mov
mov
gs
mov
nop
or
daa
and
mov
and
xchg
xchg
jge
mov
pop
mov
sub
loop
mov
add
fs
test
xchg
xchg
in
add
mov
add
xchg
push
mov
pop
outsl
jecxz
lods
out
ja
stos
mov
jnp
and
cltd
xchg
test
ljmp
stos
cmpsb
and
test
mov
mov
xchg
xchg
jge
cld
movsb
cmpl
cli
subl
xchg
xchg
cmpsl
fisubl
push
cmp
cmp
mov
xchg
sarb
mov
mov
leave
fnstsw
bound
xchg
data16
cwtl
lahf
xchg
test
test
add
jmp
das
gs
out
sti
jecxz
or
cmpsl
mov
leave
mov
cmpb
cmp
mov
mov
sbb
jbe
cltd
sbb
cmpsl
xor
mov
fildll
rcrb
test
pushl
mov
cmp
mov
and
mov
leave
xchg
in
mov
mov
cmp
out
test
mov
and
and
ffreep
push
mov
sahf
stos
mov
std
and
lods
in
xor
mov
mov
xchg
and
and
mov
jp
add
dec
mov
and
dec
mov
mov
mov
lods
mov
push
mov
dec
mov
and
jmp
test
cmpsl
mov
test
call
mov
sub
xchg
fsubl
cltd
idiv
mov
dec
pop
jl
lods
mov
test
xor
orl
and
cmpsl
xchg
inc
test
xchg
inc
cmpsl
cmpsb
mov
fwait
lcall
xchg
cmc
cmpl
cmp
clc
cmpsl
shr
mov
cmpsb
orl
mov
cmpsb
sbb
mov
mov
jecxz
test
jmp
mov
jecxz
jo
mov
int
and
popf
xchg
inc
xchg
jecxz
data16
sarb
das
push
dec
ret
test
popl
lcall
push
cltd
xchg
mov
cmp
mov
and
cmpsb
test
mov
sbb
mov
cmp
mov
mov
mov
mov
xor
fwait
mov
sti
mov
xchg
jecxz
out
mov
daa
daa
lcall
jns,pn
jecxz
cmpsl
xchg
add
mov
sbb
jecxz
stos
mov
sub
mov
cmpsl
insb
mov
mov
cmp
add
adc
call
out
mov
push
mov
mov
loopne
test
cli
out
movsl
lea
jl
int
mov
sbb
inc
mov
mov
and
or
movsb
scas
mov
rolb
mov
mov
lcall
test
mov
lret
mov
lret
mov
ret
xchg
lret
loope
sub
sbb
jno
mov
daa
mov
mov
out
sub
mov
sbb
sub
test
mov
mov
xchg
xchg
xchg
mov
daa
lcall
lahf
mov
cltd
push
mov
xchg
out
call
and
subl
popf
repz
sti
pop
iret
push
add
add
pop
sahf
orl
popf
cmpsl
cmp
mov
popf
xor
adc
cmc
scas
adc
mov
fsts
xchg
mov
ljmp
cli
pop
daa
adc
mov
shrl
xchg
pop
sahf
cmpsb
out
mov
mov
and
mov
adc
repnz
cmp
test
call
mov
adc
in
sub
mov
jg
movsb
push
mov
int
or
push
popa
popf
mov
xor
cmpsl
les
outsb
in
pop
cmpsl
loopne
data16
inc
sub
sbb
push
orb
mov
les
inc
fnstsw
test
out
mov
out
fcoms
out
cltd
inc
xchg
inc
push
js
repz
out
test
add
cmpsl
xor
mov
mov
mov
mov
and
cmp
mov
mov
inc
add
jno
or
cmpsl
lret
dec
cs
mul
jecxz
sbb
jb
fdivs
lahf
test
xchg
push
and
mov
mov
fstpt
ret
sti
and
xchg
cmpsl
or
dec
xchg
loop
out
jmp
mov
daa
sbb
mov
xchg
mov
lahf
cmp
cmpsl
mov
lea
cmp
ljmp
xchg
dec
pushf
es
in
cmp
mov
fucomip
xor
adc
mov
mov
push
stos
push
mov
xchg
ret
mov
pop
cmpsl
cmpsl
mov
out
mov
inc
popf
mov
mov
jl
mov
cmpsl
pop
movsl
in
add
enter
cmp
popf
mov
mov
sahf
and
out
mov
sub
in
xchg
mov
mov
popf
mov
jmp
mov
jecxz
sbb
mov
push
cmpsl
stos
mov
fiadds
sbb
add
test
xchg
mov
or
popf
test
scas
dec
mov
orl
test
loopne
fidivrs
cmp
mov
daa
jmp
jecxz
add
mov
push
mov
jecxz
test
cmpsb
dec
jnp
int
jecxz
cmp
lahf
stos
lock
test
xor
jecxz
mull
mov
maxps
xchg
cmp
pop
and
jg
pusha
mov
imul
and
lods
loopew
fimuls
mov
mov
mov
movsl
mov
xchg
test
add
jl
jns
inc
mov
dec
mov
cltd
imul
popf
jl
je
sub
push
orl
or
arpl
test
shrl
mov
jbe
mov
ss
sbb
fstpl
shl
jle
mov
and
test
mov
sahf
mov
mov
jg
mov
in
test
cmpsl
nop
and
rcrl
sti
scas
cmp
sub
xchg
cmp
xchg
negl
push
xor
cmp
cmp
shlb
sub
push
outsb
cmpsl
fistpll
repnz
stos
stos
sahf
mov
pop
xor
leave
xchg
in
sbb
lods
subl
mov
inc
and
fwait
cmp
sub
dec
or
and
ljmp
mov
cmpsb
test
mov
pop
fdivr
mov
dec
lea
xchg
xchg
and
mov
mov
dec
andl
sub
sbbl
into
or
lock
sub
mov
cltd
mov
xchg
mov
xchg
stos
cmp
xor
xchg
and
mov
mov
and
cmpsl
or
push
stos
mov
cmpsl
lret
xor
lea
or
lret
and
es
out
cmp
sbb
mov
repz
shll
in
pop
push
add
mov
mov
popf
sub
pusha
mov
xchg
stos
mov
das
push
xchg
jecxz
lea
fsubr
xchg
mov
sti
dec
nop
sub
lahf
cmp
xchg
out
loope
mov
or
jg
fwait
lods
mov
aaa
sub
test
sbb
dec
mov
cmp
mov
jnp
dec
stos
std
out
test
loop
cmpsl
and
data16
and
sub
stos
mov
sub
stos
xchg
mov
mov
mov
mov
test
mov
xchg
or
mov
fwait
xchg
ljmp
insl
mov
data16
lods
lret
mov
pusha
mov
mov
xchg
jmp
xchg
mov
test
scas
adcl
insb
mov
xor
scas
mov
mov
mov
or
in
xchg
arpl
jecxz
cmpsl
mov
jp
xchg
mov
jecxz
xchg
shll
test
jecxz
out
jecxz
lods
cmpsl
jno
mov
mov
push
test
test
in
jp
jecxz
cmpsl
loop
cmpl
mov
jnp
dec
mov
dec
and
push
test
mov
inc
scas
test
mov
movsb
push
jle
mov
rorb
cmpsl
pop
lock
mov
jne
mov
sti
mov
pusha
sbb
pop
out
mov
pop
inc
fistpll
push
lock
mov
cltd
xchg
xchg
repz
out
stos
sbb
popa
jl
in
pop
mov
lahf
movsb
ja
xor
out
sub
pusha
lea
jmp
sbb
jecxz
cmpsl
xchg
add
cmp
sub
xor
in
mov
mov
jmp
shll
es
daa
mov
push
lret
mov
notl
movsb
stos
mov
cmpsb
cmp
and
cmpsb
and
mov
mov
mov
pop
outsl
loopne
xor
in
movsl
and
loopne
and
cmp
or
sub
push
xchg
sub
jae
mov
xchg
and
push
sub
ljmp
cwtl
sub
pop
fildll
nop
outsl
mov
pop
xchg
mov
leave
dec
out
call
lods
lods
in
out
mov
es
mov
mov
cmpsl
sbb
mov
push
cltd
out
test
sub
or
xor
mov
mov
and
test
shl
cmpsl
adc
fidivrl
or
sub
cmp
lods
mov
jecxz
cmpsl
icebp
lcall
mov
test
out
test
lahf
test
and
mov
xchg
lret
and
scas
mov
mov
outsl
sub
mov
lods
xchg
in
cmp
clc
jnp
mov
jb
loope
cs
enter
ret
and
and
rcll
cs
and
and
gs
andl
vpmacssdd
cmpsl
mov
shll
ret
cltd
push
cmp
xor
aaa
daa
cmp
fwait
sub
jae
lods
push
stc
out
jb
sub
clc
mov
roll
test
mov
xchg
mov
lret
sub
scas
xlat
stos
shrb
popl
ficoms
imul
push
loope
xchg
xchg
imul
inc
dec
test
popf
mov
cmp
xor
scas
mov
test
mov
mov
and
mov
lods
stos
or
xchg
andb
and
subl
ds
add
pushf
test
mov
loope
sbb
test
in
data16
call
loope
fwait
mov
mov
mov
sub
xchg
xorb
andl
cmp
stos
and
repnz
insl
cmp
mov
or
mov
in
jmp
xchg
sub
and
icebp
and
test
lea
mul
cmpsl
fwait
cmp
mov
or
movsl
ret
sub
cmpsl
les
mov
test
lahf
jmp
std
sar
sub
mov
in
aaa
mov
lcall
lods
mov
sub
xchg
aaa
add
pop
sub
stos
cmp
rol
mov
cmpsb
pop
mov
in
lods
xchg
lahf
test
loop
enter
mov
cmp
cmp
orl
popf
mov
mov
mov
mov
cmp
adc
mov
lahf
mov
xor
mov
pop
out
inc
xchg
cmp
mov
or
fsubs
mov
out
out
bound
and
in
test
jl
xchg
mov
nop
cltd
mov
xchg
cmpsl
das
scas
rcr
jle
out
lods
jecxz
cmpsb
add
out
mov
fwait
lret
mov
es
scas
lds
lods
mov
mov
add
stos
movsl
test
cmovne
mov
jbe
mov
jecxz
shrl
mov
jecxz
loop
jge
pop
and
fcomip
cli
shrb
mov
mov
imull
cmp
cmpsl
sbb
or
inc
mov
adcl
in
jecxz
push
jmp
cltd
ret
mov
mov
test
ja
jmp
popf
adc
xchg
mov
test
or
and
popf
mov
movsl
daa
outsb
mov
fucom
test
mov
fisttps
sti
cmpl
cltd
cmpsl
scas
mov
sbb
mov
xor
mov
test
mov
fwait
dec
stos
pop
stos
test
xchg
mov
adc
repnz
bound
pop
sbb
cmpsl
mov
mov
mov
pop
cmpsl
mov
out
das
out
xchg
lea
pop
ret
pushf
lcall
stos
mov
xorb
bound
testl
mov
test
sub
lea
xlat
sbb
mov
jb
xlat
imulb
or
arpl
inc
jns
xchg
xchg
orb
xchg
arpl
xlat
fldcw
and
cmpsl
iret
jecxz
scas
aas
mov
pushf
sub
mov
mov
and
pop
fwait
inc
xchg
cmpsb
fiadds
sbb
push
cmp
outsl
in
ds
xchg
mov
cli
adc
cmp
inc
shrl
sbb
sbb
hlt
mov
lods
ljmp
cmpsb
lds
cmpsl
push
sbb
push
adc
mov
std
test
mov
add
mov
and
sbb
dec
and
andl
fwait
xchg
out
pop
test
fdivs
pop
mov
imul
sahf
xchg
add
push
call
mov
mov
mov
jecxz
ror
xchg
mov
sti
mov
das
mov
lea
ljmp
scas
mov
jecxz
push
jmp
and
data16
sub
xchg
jle
or
dec
push
and
sbb
xchg
and
aaa
cmpsl
mov
or
mov
shlb
dec
mov
cmp
mov
and
in
adc
icebp
pop
pop
shl
shlb
xacquire
mov
test
or
push
jge
xchg
or
mov
mov
sub
mov
insb
mov
mov
pushl
pop
sub
or
out
test
out
mov
test
cmpl
test
xor
mov
subb
out
test
cli
and
test
cmpsb
xchg
bound
mov
mov
cmp
stos
sub
xchg
lahf
cmpsb
test
xchg
in
mov
push
movsl
cmp
fwait
mov
loope
mov
mov
lds
lea
and
mov
lret
test
test
mov
add
cmc
bound
andl
gs
lods
mov
xchg
mov
and
mov
js
add
and
stos
xchg
mov
test
test
out
aas
adc
dec
pop
xchg
lods
test
andl
mov
lahf
xchg
mov
jns
sbb
iret
in
test
or
mov
mov
mov
mov
xor
xchg
inc
mov
xorl
jmp
js
adc
mov
fwait
pusha
test
xchg
mov
arpl
add
mov
lock
jecxz
push
push
push
in
and
mov
cmp
out
dec
pusha
pop
mov
and
push
push
mov
loop
mov
test
mov
cmpsl
mov
in
mov
pushf
lret
add
stos
mov
cmpsb
ficoms
mov
cmc
fwait
mov
test
mov
push
mov
cmp
scas
ljmp
mov
xchg
insl
out
sti
lods
ds
pop
jle
mov
mov
test
fidivs
out
or
inc
ficoml
loop
test
cmpsl
in
ret
mov
adc
mov
mov
repz
jge
dec
mov
or
out
cmp
scas
adc
stos
out
sub
sub
fildll
shlb
mov
test
pop
lret
lods
add
out
notb
test
test
test
test
imul
leave
cmp
cmpb
cltd
ret
bound
sub
dec
orl
or
cwtl
cli
mov
sti
mov
mov
lahf
ss
out
scas
push
cmpl
mov
mov
cmp
jno
push
int
lds
inc
lods
push
inc
mov
popf
xor
outsb
lods
mov
mov
lea
andb
add
es
pop
fwait
sbb
sti
mov
and
cmp
mov
and
cmpsl
mov
add
xchg
cmp
cli
lcall
mov
pop
aaa
sbb
sub
pop
ss
mov
mov
rol
mov
xchg
jne
adc
mov
mov
mov
and
ret
cmp
jnp
ss
dec
and
mov
jle
hlt
sahf
sub
in
lahf
test
ret
xchg
jnp
fidivrl
test
lret
add
jns
mov
xor
xchg
push
out
lock
mov
cli
jecxz
xchg
out
mov
mov
mov
mov
stos
and
or
test
movsl
jp
ja
mov
addb
sbb
loopne
test
xlat
mov
scas
mov
xchg
jno
xchg
mov
fwait
out
inc
and
sarl
data16
mov
mov
cmp
arpl
mov
pop
mov
les
mov
push
cmpsl
xchg
lahf
cli
out
mov
pop
xchg
sbb
xchg
jecxz
cmpl
lret
cmpsb
lahf
popf
test
inc
cmc
sbb
mov
mov
ljmp
adc
cmpsb
stc
test
cltd
mov
sub
jecxz
and
cmp
cltd
call
and
mov
sbb
subl
and
in
add
mov
cltd
jecxz
mov
sarb
mov
mov
mov
xchg
js
ljmp
sub
aas
mov
mov
cltd
sub
subl
sub
mov
cmp
das
push
push
mov
xchg
mov
mov
icebp
andl
in
mov
add
dec
mov
out
push
subb
loope
or
mov
mov
mov
scas
mov
or
or
cmpsb
aam
mov
mov
data16
or
sahf
mov
int
cld
mov
or
jecxz
mov
and
mov
adc
jecxz
jb
or
adc
test
mov
adc
mov
test
xchg
mul
mov
jmp
dec
test
adc
sub
icebp
xchg
xchg
test
nop
loop
mov
xor
cmpsl
sahf
cmpsb
jecxz
mov
idivl
aaa
lret
test
add
and
mov
mov
test
sub
pushf
mov
nop
dec
cmp
nop
out
sti
pusha
push
aam
xchg
mov
xor
jecxz
out
xchg
cmpsl
pop
mov
outsb
sub
mov
xorl
push
mov
xchg
shrb
loope
xchg
test
aad
cmpsb
sub
cmpsl
inc
and
xchg
fidivrl
mov
mov
mov
jp
xor
mov
cld
push
cmpsl
xchg
pop
inc
movsl
cmpsl
loop
lahf
mov
mov
test
mov
push
cmpsl
xchg
add
es
cmp
xchg
out
divl
and
cmpsb
cmp
dec
inc
jb
xchg
stos
cmpsb
and
sub
and
mov
and
cmp
sbb
mov
das
cmp
mov
xchg
lea
lods
sbb
ret
es
mov
xchg
ret
cmpsb
cltd
test
shll
movsl
push
leave
or
xchg
loope
mov
sahf
lahf
xor
mov
cmp
xchg
dec
dec
cwtl
or
mov
xchg
sub
push
test
mov
mov
mov
mov
mov
out
or
subb
jge
out
push
xchg
xor
push
out
fbld
arpl
dec
fisttps
and
movsl
loope
xchg
lods
mov
mov
movsb
aaa
pop
pop
mov
sub
test
stos
xchg
out
add
mov
pusha
test
aad
mov
mov
sub
mov
cmp
xchg
xchg
add
lds
repz
test
mov
push
inc
cwtl
fwait
push
cmp
sti
mov
fidivrs
mov
push
movsl
xlat
pop
cmpsb
popf
xchg
jle
dec
mov
out
mov
fiaddl
mov
mov
cmpsb
jecxz
sbbb
jmp
xchg
popa
rcll
xchg
mov
xor
mov
jo
mov
cmpsl
push
xchg
mov
mov
xchg
push
cmpsl
cli
push
test
adc
test
pop
add
xchg
sbb
xchg
fdivs
cltd
sub
mov
fsubs
cmpsb
jecxz
add
icebp
es
popf
repnz
mov
cmp
mov
lret
mov
jecxz
mov
jbe
lods
es
sbb
pusha
adc
inc
mov
rcrl
test
test
test
mov
adc
cmpsb
bound
add
xchg
mov
mov
call
cmp
mov
mov
lods
cmp
cmpsb
sub
mov
adc
adc
xchg
xchg
lret
cwtl
lods
xchg
ret
and
test
pop
mov
and
and
imull
xchg
mov
mov
pop
or
arpl
sarl
int
scas
sbb
andl
cmp
xchg
out
mov
mov
fwait
addb
ret
jp
mov
test
sub
inc
jbe
add
push
xor
mov
aas
test
cs
cmp
jp
je
test
push
adc
xchg
and
dec
xorl
jnp
pushf
and
push
xorl
or
out
or
loope
rorl
ss
dec
test
scas
push
popa
push
sub
test
add
mov
popa
subl
scas
xchg
add
int
and
cmpsl
test
testl
pop
jp
test
loopne
fwait
inc
leave
xchg
xchg
aaa
scas
out
fisubs
add
mov
fwait
bound
test
mov
xchg
adc
jmp
gs
out
add
or
test
movsl
add
cmp
mov
mov
les
mull
sbb
jmp
xchg
fwait
stos
movb
lea
call
pushf
pushf
pushf
adc
pusha
jmp
xchg
insl
pop
cmpsb
icebp
call
aaa
js
jmp
test
xchg
repnz
or
sub
cmpsl
sbb
cltd
jmp
push
stc
mov
cmpsl
sbb
enter
mov
mov
pop
mov
mov
jb
or
lock
fcomps
fsubr
jge
jno
fisubrs
pusha
hlt
sti
sub
and
dec
mov
ret
adc
inc
lock
lcall
mov
add
fidivs
mov
dec
cmp
cs
ljmp
add
popa
lret
mov
aaa
dec
adc
xor
mov
loop
pop
push
sbb
push
cmp
outsb
mov
dec
out
push
mov
sbb
cmp
mov
int
test
pushf
sarl
fmull
repz
jo
pusha
aaa
cmp
cmp
in
cmp
scas
dec
adc
jmp
cmp
and
mov
aad
rcll
xchg
mov
pop
xchg
mov
mov
xor
scas
loope
rcrl
jmp
in
test
arpl
mov
lods
mov
add
mov
test
and
xchg
inc
rcll
or
sahf
inc
clc
daa
cmc
arpl
dec
lea
int3
les
cmpsl
and
mov
xlat
ficoms
mull
jle
aas
daa
js
sub
das
add
push
pushf
std
rcrl
or
push
pop
repz
data16
aas
mov
out
call
cmc
into
stos
jbe
xchg
pop
xchg
push
add
not
bound
push
rclb
push
lcall
mov
pop
and
jno
xor
mov
mov
sbb
adc
in
jbe
cmp
xchg
iret
js
inc
inc
push
sbb
mov
jp
decb
jbe
lds
sbb
fidivl
fsub
add
push
pusha
daa
and
sub
fadds
add
inc
push
push
call
lcall
fldenv
and
incl
push
push
add
dec
add
int3
enter
and
jne
rcrl
add
mov
es
cmpsl
les
inc
lahf
push
sub
mov
jbe
test
jns
jbe
push
outsb
sub
push
test
cli
xchg
xchg
xchg
cmpsb
test
repnz
fs
punpckhbw
scas
or
repnz
ja
fidivrs
mov
add
mov
nop
rcrl
aam
in
jns
in
mov
jecxz
jmp
jmp
sar
neg
rol
mov
jmp
pushf
movb
lea
jae
shrd
mov
sbb
rcr
mov
movsbw
btc
rcl
mov
jmp
mov
addr16
mov
flds
xlat
data16
xor
repnz
inc
in
sbb
ja
sub
daa
in
dec
or
xor
addr16
sbb
js
add
jmp
loop
push
rolb
lea
adc
push
xor
jge
add
mov
imul
xchg
mov
repnz
and
jnp
adc
call
gs
add
xor
mov
dec
fidivrs
pop
jmp
mov
sbb
pop
into
cmp
mov
outsl
cwtl
mov
push
push
imul
cmc
out
loopne
shll
fs
pop
imul
cmp
enter
inc
cli
cmp
push
stos
mov
ljmp
pavgw
pop
imul
mov
decl
and
sbb
cmp
push
daa
outsb
add
dec
cli
xchg
mov
ret
cs
push
shr
xchg
imul
in
sub
hlt
out
icebp
add
repnz
push
pop
pcmpeqw
fisttpl
outsl
lea
or
aas
insl
mov
fsubrl
sbb
adc
add
loope
inc
mov
and
push
and
sub
rcrl
sub
inc
sahf
pop
js
cmpsl
mov
or
test
jb
decl
xchg
mov
sub
bsr
add
cmc
movsbl
mov
rol
inc
cmp
shl
mov
stc
call
add
inc
gs
outsl
fs
gs
imul
add
add
imul
jae
pusha
push
mov
pusha
movb
pushl
push
lea
jmp
cmp
jmp
pusha
jmp
jmp
leave
dec
mov
push
sbb
js
xor
mov
inc
and
loopne
push
xchg
or
cmp
xchg
push
shlb
inc
in
std
pop
push
sarl
arpl
cmp
call
orl
dec
sbb
and
adc
push
sub
leave
cwtl
dec
ret
mov
adc
add
aam
addr16
adc
js
shrb
jbe
or
mov
stos
mov
add
ret
ljmp
and
outsl
mov
loopne
add
imul
ss
push
call
lock
mov
outsl
mov
fld
fisubrs
lret
sub
popa
test
test
daa
mov
je
ds
add
add
out
testb
je
out
lock
push
iret
je
mov
hlt
out
stos
std
adc
cmpsb
stc
xchg
dec
cmpsl
gs
push
clc
jns
lcall
ret
leave
adc
call
push
push
dec
std
mov
movsb
out
call
push
fldt
fndisi(8087
xlat
aaa
or
add
and
lret
pop
js
popa
jb
es
cmp
add
dec
outsl
arpl
inc
jb
add
push
pushf
lea
jne
movsbw
push
mov
jmp
jmp
lea
jae
neg
mov
pusha
pushf
rcr
mov
shr
mov
push
clc
test
xor
pushl
repnz
pushf
lea
jne
shl
ror
mov
shl
btc
rol
pushf
sub
xor
lea
bt
sub
clc
mov
pushl
popl
pusha
clc
cmp
jmp
outsb
inc
sbb
addb
shlb
inc
rclb
xchg
in
pop
mov
cli
adc
int
or
push
shrb
das
addl
push
inc
inc
xchg
inc
std
lret
bound
sbb
and
xorl
sahf
shlb
aaa
xchg
mov
xor
in
inc
nop
fsubrl
inc
fbld
icebp
mov
lea
repnz
out
lahf
orb
out
pop
xchg
dec
mov
xchg
fwait
dec
pop
mov
jmp
lret
inc
jmp
pop
mov
or
test
movsbl
movzbw
movb
movsbl
lahf
push
movsbw
call
xor
sbb
or
hlt
dec
cmp
aad
mov
sbb
out
pop
xchg
repz
cltd
loop
adc
or
in
xchg
out
call
into
lods
sub
popa
jno
iret
dec
mov
sbb
jecxz
cmc
inc
xchg
shlb
mov
aad
outsl
iret
adc
or
fsubr
es
xor
sub
push
out
aam
jmp
clc
into
push
mov
or
adc
push
pop
jecxz
repnz
sbb
and
xchg
xchg
cmp
mov
pop
jmp
fxsave
es
adc
loopne
ja
je
mov
inc
mov
jge
icebp
inc
sti
jbe
add
ror
enter
lahf
inc
sub
cmp
inc
ljmp
mov
cmp
sub
add
adc
adc
mov
push
subb
pop
fildl
push
cmc
cmpsb
cmpsl
mov
jp
addr16
push
sbb
loopne
mov
jae
scas
or
add
cmp
mov
push
bound
addl
xchg
loope
lcall
les
jg
adc
xor
jl
xchg
repz
push
repz
outsb
xchg
in
fwait
nop
sub
repz
loop
insl
push
fcmovnbe
and
arpl
mov
mov
or
sub
adcl
push
aas
aam
or
mov
sbb
adc
lcall
xchg
xchg
xchg
jge
inc
test
sub
jle
adc
es
cmp
pusha
xorl
es
mov
je
bt
pushf
call
repnz
call
lea
jne
movzbw
movb
jmp
pop
adc
ljmp
repnz
or
les
inc
jae
cmpl
xchg
mov
xchg
mov
cmp
adc
xor
jle
ret
sti
test
pop
frstor
add
xor
imul
int
mov
mov
inc
ss
lret
test
lods
ds
stc
sti
sbbl
and
jmp
pop
or
or
in
jle
dec
jnp
out
xlat
cmpsb
sub
fisubs
mov
sbb
scas
push
xchg
jb
sbb
or
xchg
adc
repz
mov
mov
xchg
fs
mov
jb
dec
rorl
lcall
imul
dec
cmpsl
jl
adc
movsl
xor
mov
lock
push
ss
fcmovb
loop
mov
sub
xchg
call
fwait
int
icebp
test
or
adc
in
shrb
pop
sahf
jb
xchg
cmpsl
sbb
fs
mov
or
sbb
push
pop
dec
loop
data16
jo
lret
cmpsl
lods
sbb
push
lahf
xlat
mov
cmc
mov
xchg
scas
dec
pushf
popf
repnz
mov
push
xor
xor
fs
insb
add
data16
pop
xchg
adc
insl
lcall
ficoml
cs
test
and
int
negw
test
je
stos
pop
out
or
sti
sahf
fldt
jns
imul
add
mov
mov
out
aad
xor
lock
das
repz
repnz
fs
std
daa
test
mov
imul
sub
dec
int3
sahf
pop
aaa
jne
cld
repnz
mov
cld
call
push
jmp
out
cmp
sahf
scas
cmc
and
ret
jge
wrmsr
lret
xlat
sub
das
push
xor
inc
cli
in
jne
xchg
lcall
test
inc
jmp
in
popf
scas
outsl
stc
mov
out
icebp
in
jbe
incb
jae
imul
andl
mov
mov
cmpsb
jg
mov
aaa
sub
ret
inc
clc
sub
clc
pushf
pushl
cmc
neg
jmp
jb
push
cmpb
call
lahf
in
out
mov
jle
jbe
jno
cmp
iret
mov
add
imul
pop
sbb
outsb
lahf
push
inc
push
addl
mov
adc
dec
aas
dec
lea
pusha
sbb
scas
fldenv
pop
ss
and
insb
xor
pop
mov
nop
insl
aam
lahf
out
shlb
addl
shll
daa
cmp
mov
lods
jmp
jecxz
and
ret
sub
rorb
imul
mov
fwait
dec
cwtl
das
push
jno
push
inc
adc
add
jmp
fisubs
scas
imul
inc
clc
rcrl
sub
vmovntdq
mov
pop
int3
mov
dec
jle
test
mov
cmpl
in
pop
cld
or
in
rorb
cmp
push
mov
ljmp
nop
xchg
and
rol
push
test
jg
mov
pushf
in
cmpsb
clc
xor
xchg
mov
mov
addr16
mov
fadds
in
push
js
lret
insb
mov
push
xor
mov
and
es
insl
fs
xor
cs
insb
add
cmc
xchg
fildll
jecxz
mov
bound
shrb
adc
cmc
orb
xchg
pop
jns
nopl
xlat
adc
xchg
xchg
push
xor
loop
loop
cmp
hlt
cmp
mov
pop
xchg
xor
movl
sbb
sbb
jge
add
mov
call
cmpsb
push
mov
add
out
ret
xlat
ja
popa
out
mov
add
add
cltd
or
cmp
scas
lret
xor
sbb
mov
or
adc
or
push
nop
mov
das
and
stos
dec
bound
dec
push
sub
stos
shll
jae
fwait
push
pop
lods
push
and
sbb
jecxz
loop
sub
stc
dec
movsb
aad
cmp
add
mov
in
nop
xchg
fldt
shlb
rorb
popf
mov
imul
mov
xchg
inc
jl
dec
inc
rcll
aas
out
div
push
lock
push
repz
out
mov
cmp
inc
mov
std
cmp
insb
inc
sub
jns
jl,pn
es
add
add
add
imul
das
mov
sub
js
divb
int
xor
mov
lds
xchg
icebp
jno
mov
mov
xor
cmpsl
mov
rcrl
scas
inc
mov
sub
dec
std
cmpsl
mov
sub
js
not
fiadds
cmpsl
scas
outsb
cmp
call
push
inc
pop
push
push
mov
icebp
popa
bnd
jno
xchg
subl
xor
adc
add
das
scas
push
cli
les
fidivrl
fdiv
or
mov
mov
push
push
push
mov
xor
bound
sub
jo
xor
xchg
ja
or
or
lea
sbb
sbb
sub
lods
imul
lahf
push
in
sub
or
inc
push
adc
inc
and
cmp
dec
fadd
adc
push
sub
mov
cmp
pop
aad
mov
inc
ret
sarb
jo
push
cmp
cmp
call
cmp
jmp
push
push
call
xchg
stc
add
mov
clc
pusha
jmp
push
lds
mov
and
xor
cmp
cmp
lods
adc
subl
loopne
hlt
mov
incb
or
sub
subl
cmp
mov
cmp
mov
add
imul
lds
pop
repz
dec
out
dec
sbb
sub
mov
lods
mov
sti
or
sbb
daa
cmp
mov
cmpb
push
pushf
lea
jmp
pusha
cmp
push
mov
jmp
fldt
into
addr16
or
sub
les
push
jecxz
sub
xchg
xor
loop
into
mov
jmp
nop
push
inc
testl
push
push
aam
fiadds
dec
fimull
sub
or
in
fidivrl
mov
imul
mov
lods
mov
xchg
sbb
mov
cwtl
lds
fisttps
add
push
hlt
data16
rol
movsl
je
cmpsb
shll
montmul
cmpsb
inc
jne
pop
sbb
call
icebp
add
enter
inc
outsl
movsl
imul
sbb
mov
sbb
and
cs
cmp
xchg
stos
mov
jo
incb
xchg
insl
leave
jns
push
cmp
enter
sbb
xchg
or
repz
fldl
fildll
adc
incb
adc
xchg
in
jp
xor
inc
mov
ss
pop
inc
aas
out
jge
adc
insl
ret
push
popa
inc
xor
movsl
fmuls
fwait
lock
xor
push
lock
call
outsb
popf
or
mov
sub
or
adc
mov
pop
xchg
jge
pop
sbb
jmp
xorl
add
scas
into
sbb
mov
jle
xor
push
xchg
mov
jmp
mov
push
xchg
mov
lds
aaa
cmc
mov
adcb
pop
mov
std
and
push
lds
repz
adc
out
shlb
pop
cmp
sub
inc
mov
jbe
pushl
popl
cmc
pushf
cmp
push
jmp
jge
cld
jg
adc
ret
jl
fadd
jmp
lods
fcom
sub
imul
pop
lods
jle
cmp
jecxz
adc
xchg
pop
outsl
ret
pop
fists
xchg
call
mov
fs
inc
cmp
idivb
xchg
adc
cs
mov
add
std
nop
jb
in
mov
mov
xor
cs
cmpb
call
lea
jb
jmp
xlat
xor
test
or
pop
push
filds
dec
in
xlat
xchg
jge
pop
adc
mov
data16
mov
in
cwtl
xchg
das
hlt
push
jp
imul
or
sahf
subb
addb
mov
xchg
pop
dec
or
fs
imul
mov
cmp
es
scas
sbb
jge
jmp
inc
inc
in
cmp
cmc
subb
inc
mov
pop
movb
sub
cmc
movsbw
cmp
bts
sub
add
sbb
mov
dec
call
pusha
call
cmc
stc
cmp
pushl
lea
lea
mov
mov
push
pushf
lea
ja
pushf
call
mov
pusha
pushl
ret
xor
pusha
adcb
xchg
fmull
sarb
mov
js
rorl
adc
adc
in
test
aas
lret
push
nop
int3
sbb
xlat
mov
adc
je
mov
js
mov
xor
divb
scas
add
fs
mov
imul
jmp
mov
mov
xchg
pop
dec
jbe
mov
lods
cli
mov
xor
cltd
push
dec
sbb
sbb
icebp
adc
jle
fistpll
ror
pop
mov
mov
push
dec
push
cmp
fistpl
int
cmpsl
lock
mov
in
in
sub
mov
pop
xor
mov
inc
push
rcr
xor
in
sbbb
mov
fbstp
lcall
clc
dec
ficompl
rcr
test
cmp
push
jnp
loopne
mov
mov
dec
out
bound
lahf
addr16
push
inc
call
inc
shl
test
dec
out
cmp
cmp
push
inc
mov
mov
push
sub
loopne
pop
test
stos
loop
add
cld
mov
pop
aad
fs
mov
sbbb
sahf
inc
mov
es
mov
dec
movb
lret
xchg
notb
stos
mov
sti
mov
in
dec
mov
addr16
in
mov
dec
cs
es
repnz
ss
xchg
out
lock
sbb
xchg
ja
out
adcl
popa
popa
das
sub
cli
sub
or
mov
iret
dec
ja
orl
movsb
push
mov
sbb
fsubrs
xchg
add
negb
adc
mov
pop
lret
stos
and
out
xor
popf
ss
into
adc
movl
and
inc
mov
mov
pop
mov
add
add
jmp
into
push
dec
pop
imul
pop
mov
and
add
xchg
fs
cltd
ret
adc
movsl
sarb
jae
xchg
int3
sbb
jnp
add
push
dec
nopl
ljmp
push
lds
mov
sbb
mov
es
and
sbb
push
xchg
notb
arpl
in
mov
mov
add
iret
out
pop
cwtl
dec
mov
gs
xor
inc
cmp
icebp
test
out
pop
int
gs
jmp
ja
out
sbb
daa
fadds
push
adc
shll
fisubrs
mov
add
int
jmp
movsl
jns
inc
adc
mov
pop
sub
xchg
and
sahf
movsl
repnz
mov
mov
sub
inc
jecxz
xchg
xchg
popa
mov
fidivrl
jmp
push
inc
push
inc
push
dec
xor
cs
insb
add
test
add
add
or
inc
push
rorb
aad
cmpsl
pop
cwtl
bswap
repnz
popl
or
and
shll
xchg
add
dec
mov
movsb
outsl
shll
sbb
add
xor
es
inc
scas
sub
push
add
mov
mov
pusha
mov
sbb
loop
sbb
mov
es
mov
add
push
mov
call
mov
cs
push
aaa
sbb
push
add
sbb
mov
pop
rol
fsubp
scas
loopne
sti
idivb
movb
lds
push
pop
stos
gs
pop
lcall
aam
xlat
sbb
enter
xor
and
mov
lret
mov
xchg
out
test
es
dec
xchg
mov
call
pushf
xchg
adc
xor
cwtl
aam
dec
pop
add
pop
add
and
mov
cmpsl
shr
sbb
pop
test
or
adcl
fcoml
sbb
ret
xor
ja
out
xchg
xor
mov
cmp
cmp
xchg
int3
icebp
adc
loope
sbb
or
xchg
fucomp
lret
push
lods
std
pop
popa
mov
insl
call
rcl
aam
or
and
sbb
push
xchg
mov
cmc
mov
into
ljmp
add
ljmp
cmp
mov
push
inc
adc
mov
out
xchg
mov
scas
adc
stos
adc
mov
test
inc
je
and
mov
enter
cltd
cmp
xchg
leave
mov
stos
stc
std
add
rcl
mov
iret
dec
add
mov
and
mov
pop
repnz
mov
mov
sub
xchg
stos
scas
sbb
rcrl
dec
test
jbe
push
scas
inc
mov
inc
repnz
mov
lea
jmp
lea
jae
jmp
not
pop
bswap
pushf
mov
pushf
mov
jmp
pushf
ljmp
rcrl
adc
ret
orb
cmp
insl
fldl
mov
xchg
cmpl
xor
jl
xchg
sbb
fldl
nop
xchg
pop
mov
cmp
repnz
fwait
pop
dec
push
int
dec
xchg
mov
fwait
dec
cmc
jge
lret
andl
add
jbe
sbb
sti
lret
mov
jmp
add
movsl
xchg
cmp
fwait
or
sti
test
mov
sbbb
and
push
mov
pushf
movb
call
pmullw
adc
out
mov
aas
punpckhbw
jmp
inc
movsb
call
insl
add
js
jg
xchg
mov
popa
pop
repz
mov
mov
xor
shll
test
in
xor
repnz
orb
movsb
pop
or
mov
fs
xor
imul
and
dec
sbb
leave
mov
sldt
inc
insb
outsl
jae
push
jb
outsb
je
jb
out
cli
and
daa
cmp
cld
xchg
pop
dec
or
shlb
sbb
je
mov
je
jo
add
in
pop
sub
mov
jne
add
shlb
xor
in
add
lods
addb
shr
in
pushf
xchg
inc
fucomi
cltd
mov
clc
push
out
inc
lds
or
and
in
es
imul
sub
fsubrs
xchg
subb
cwtl
outsl
xorb
add
gs
dec
adc
sbb
and
je
lea
jb
call
call
add
clc
pusha
movzwl
push
sub
jg
mov
call
div
insl
pop
cmpsb
xchg
fs
bound
stos
adc
rorl
into
add
enter
imul
hlt
out
pop
sti
bound
adc
in
mov
cmp
pop
xchg
lahf
mov
xchg
cmp
repz
aaa
stc
xchg
cmp
es
xor
scas
lock
aas
insb
cmp
pop
aam
std
aas
aam
insb
mov
mov
leave
mov
xor
loope
jns
xchg
test
mov
xchg
in
sub
xor
pushf
lea
je
cmp
jmp
add
lods
mov
cmpsb
add
outsl
cwtl
or
fs
js
dec
rclb
popl
std
test
push
jno
hlt
iret
mov
dec
cmp
loop
popl
cld
cmp
outsb
pop
test
jo
add
and
or
xor
jns
repnz
cli
push
pop
ret
inc
push
or
in
mov
ficompl
push
inc
scas
jae
flds
daa
ljmp
mov
lea
pop
push
movb
sub
addb
fbld
negl
jo
mov
scas
insb
xchg
subl
mov
ljmp
sub
ljmp
xor
adc
jns
scas
or
std
lret
sub
dec
fwait
imul
jbe
sub
xchg
mov
bound
arpl
or
les
dec
mov
enter
daa
aas
pop
imul
repnz
jmp
enter
jl
daa
or
xchg
mov
js
lret
into
sarb
ret
or
nop
mov
rcrb
mov
jae
sbb
mov
shl
sub
dec
mov
inc
xchg
js
xor
stos
std
aad
loop
test
pop
lahf
xchg
cmp
ja
std
adc
js
adc
inc
dec
fwait
xor
push
pop
leave
adc
lods
cmp
mov
aam
mov
mov
push
mov
movw
mov
movsbw
jmp
and
xchg
push
sub
insb
push
lret
in
push
hlt
test
icebp
cltd
std
hlt
jbe
out
fcoms
lock
pushf
fcoml
ret
imul
std
repz
lds
ja
es
and
xchg
pop
loop
lds
xor
pop
jecxz
dec
and
daa
and
add
ss
lahf
jg
push
sub
cltd
dec
pop
nop
repnz
popf
mov
popa
add
mov
pushf
mov
test
leave
ss
aas
lods
test
add
cmc
ss
jnp
push
dec
dec
js
lahf
mov
mov
sti
lea
jae
pushf
lea
jg
jne
pusha
pushf
stos
pusha
push
pushf
lea
jmp
adc
out
shl
aad
push
push
subb
dec
test
lods
repz
inc
mov
mov
outsb
aam
ficoml
mov
and
xorl
stos
test
sysexit
inc
or
cmpsl
xor
cmc
mov
add
push
mov
sub
ja
dec
pop
jns
mov
push
pop
push
outsl
ss
adc
lret
or
xor
pop
mov
xchg
insb
xchg
daa
stos
adc
xchg
adc
jg
daa
mov
add
je
adc
jmp
pusha
or
call
lea
jae
mov
inc
call
push
cli
xor
test
jne
cwtl
push
and
jp
test
inc
cmp
jecxz
movsl
mulb
stos
fisubl
jmp
pop
mov
ret
and
movsl
mulb
and
jnp
lret
pop
call
push
je
and
sub
cld
sbb
das
or
dec
repnz
jp
pop
cmp
fildll
push
xchg
push
jno
xchg
jl
xor
jbe
sbb
pushf
push
out
fidivl
push
fsub
jns
mov
and
repz
lea
je
stc
pushf
test
pushl
cmp
call
dec
jne
mov
repnz
jbe
add
dec
call
test
sub
cwtl
in
stc
bound
dec
push
and
pop
jb
jbe
std
fdivs
lcall
xor
sbb
dec
or
insb
xor
ss
pop
add
enter
sub
scas
push
dec
pop
nop
mov
mov
or
sub
push
icebp
mov
fs
icebp
icebp
pop
mov
mov
addl
mov
test
adc
xchg
inc
adc
gs
adc
pop
xchg
cwtl
xchg
or
repz
repz
add
rol
jge
cli
or
lret
jbe
lock
gs
out
fistps
subl
js
sbb
xchg
xchg
in
xor
rolb
je
ds
sub
sti
fs
and
cs
test
in
pop
push
cmp
lods
movsl
ss
mov
out
and
or
push
inc
pop
mov
inc
mov
popf
adc
push
inc
fdivrs
jae
es
pop
std
sub
xlat
cmpsb
sbb
mov
sub
out
fildl
jne
mov
pop
sub
sub
pop
push
lock
sub
inc
in
and
testl
out
les
push
aad
xchg
jge
xchg
outsl
cs
mov
sub
jo
test
lods
mov
inc
bt
clc
clc
cmp
add
pushf
pusha
pushf
dec
jmp
test
inc
mov
imulb
mov
into
fisttps
or
test
mov
mov
xor
mov
into
fcomip
pop
es
and
movsl
mov
minps
jecxz
dec
insb
shll
fidivrs
lods
xchg
stos
leave
lcall
sub
adc
lret
js
inc
out
inc
jae
lods
xlat
jo
sub
xor
xchg
cmp
sub
out
aas
into
repnz
jg
aas
mov
inc
pop
je
sbb
sub
in
jne
mov
jnp
mov
jb
mov
sarb
dec
icebp
jp
pop
sub
mov
pushf
push
push
inc
push
xor
cs
insb
add
add
scas
mov
out
es
leave
lcall
pusha
sbb
in
jle
or
bound
mov
mov
rcrl
lret
arpl
mov
int3
push
dec
ret
bound
pop
iret
push
stos
insb
mov
dec
insl
push
stos
aas
adc
movsb
push
leave
xor
adcl
in
stos
mov
in
ljmp
sar
mov
out
mov
out
idivl
and
xor
xor
rolb
shld
dec
dec
loopne
and
fs
cs
or
mov
bound
jmp
push
imul
test
or
xchg
cmc
pop
loop
cld
mov
cmpsl
add
mov
mov
pushf
scas
ljmp
imul
iret
pop
addr16
rolb
and
adc
mov
adc
push
lret
test
test
add
inc
lods
xorl
xor
mull
adc
mov
dec
jecxz
ret
push
xor
lcall
cmp
rclb
and
inc
jge
pop
or
or
pop
fbld
push
popa
jno
into
mov
jmp
ret
push
sbb
jge
sarl
repnz
cmp
cmpb
insl
call
cs
fbld
xor
leave
sbbb
insl
stos
repz
insb
iret
outsb
inc
es
popf
or
pandn
jg
and
and
cmp
jmp
dec
dec
outsb
repz
jo
lahf
mov
cmp
rorb
cmp
loope
lret
xor
ficoml
adc
into
fidivrl
cmp
les
sub
call
xchg
dec
roll
test
inc
push
pop
push
jmp
cmp
ss
dec
pop
push
jno
mulb
shrl
int3
nopl
movsl
divb
pushf
dec
add
add
or
pop
hlt
inc
icebp
pusha
inc
dec
add
pop
sub
jnp
lahf
stos
out
std
es
lods
std
mov
adc
ljmp
loopne
adc
sub
test
lret
mov
icebp
enter
cmp
jp
and
roll
insl
mov
sbb
sub
xor
jns
mov
notl
jge
adc
push
push
loopne
scas
or
push
sub
test
push
nop
sbb
imul
inc
lea
fmulp
cmc
lea
sarb
dec
inc
xor
and
lret
rorb
loopne
and
test
outsb
movsb
sbb
rcl
test
fisubrl
xchg
sbb
test
jl
ds
lods
pop
jecxz
adc
jle
pop
mov
cmp
jge
xchg
adc
jae
xchg
mov
sub
jns
lock
mov
mov
jle
dec
ret
inc
popa
sub
cmp
loopne
sahf
push
and
add
mov
cmp
ror
ret
pop
mov
lods
lods
jnp
test
mov
insl
inc
sti
leave
test
cmp
xor
cld
ljmp
out
sbb
or
lcall
mov
inc
mov
cmp
pop
fcoms
aad
cs
push
sub
dec
add
add
and
cmpsb
ret
push
and
lods
xlat
out
fwait
int3
das
xchg
mov
addr16
and
outsl
mov
pop
mov
push
jae
fmuls
sbb
xor
mov
and
rolb
jo
int3
push
imul
lods
jle
sub
fpatan
ret
sahf
fisubrl
outsb
fldcw
fldcw
stos
or
inc
fistl
pop
dec
cmp
jle
pusha
or
pop
cmp
and
orl
cmc
mov
or
xchg
add
mov
inc
fstl
call
jge
push
sub
fwait
pop
push
inc
mov
subb
mov
add
pop
call
or
xlat
ret
jge
insb
xor
cmc
ret
fimuls
push
call
cld
dec
push
xlat
adc
daa
mov
mov
jnp
xchg
out
fisttpll
mov
pop
enter
xor
sub
or
xchg
loope
sti
push
push
xor
movsb
jge
pop
mov
fdivl
test
mov
jo
push
addb
add
inc
jne
jge
es
scas
lds
and
fs
je
not
adc
stc
add
add
sub
xor
stc
clc
sub
shr
sar
not
add
call
jp
xorl
xchg
and
jae
popa
jg
in
adc
in
lods
or
mov
insl
scas
sub
out
push
push
stos
mov
out
push
sub
adc
popa
mov
sub
cmpsb
sahf
popl
lods
xlat
jo
sti
fs
xor
js
or
mov
dec
icebp
and
mov
jb
pushf
inc
sub
lock
add
into
in
xchg
fidivs
lea
jl
add
orb
jb
dec
mov
lret
aaa
test
mov
loopne
sbb
cmc
movzwl
pop
mov
inc
jecxz
ds
jno
dec
sbb
lret
lahf
xchg
rorb
adc
or
mov
dec
sub
pusha
sub
sar
jb
xor
or
xor
push
push
dec
pop
imul
push
dec
lea
scas
jbe,pt
mov
dec
nop
test
and
lock
mov
add
ja
sub
lahf
nop
ja
jns
in
rorl
mov
sbb
fwait
inc
jns
in
cmpsl
pop
negl
lds
aad
js
mov
lods
mov
mov
push
popa
dec
cld
mov
bnd
lock
xchg
xchg
sbb
rcrl
shll
xchg
jae
xor
mov
pop
adc
scas
hlt
mov
mov
or
sbb
inc
test
push
push
je
test
ret
and
dec
adc
add
nop
mov
movsl
xchg
cmp
in
or
fbld
cwtl
mov
ds
or
int
arpl
cmp
jecxz
xchg
adc
adc
add
xchg
xor
cmc
mov
sub
sbb
fisttps
jp
or
leave
cmpsl
shll
out
mov
test
push
add
jl
ror
lret
jnp
in
cli
cmpsb
cmpsb
jp
mov
and
jl
ror
push
cli
sub
sub
popf
cmp
jne
mov
push
dec
cli
mov
push
mov
out
mov
xor
aaa
add
and
sbb
stos
cli
mov
mov
dec
cmpsb
jne
xchg
orl
push
mov
cli
or
mov
ds
test
mov
call
jne
add
xchg
pop
adc
fisubrs
xchg
xchg
pop
leave
and
adc
stos
inc
jmp
shll
pop
test
and
cmp
mov
push
sub
loopne
xor
mov
lcall
add
jecxz
mov
jmp
clc
movsl
sarb
fldenv
mov
cmpsl
or
cmp
lahf
inc
mov
xchg
rcrb
push
icebp
nop
int
sub
mov
jmp
sbb
or
push
lea
jne
bswap
mov
clc
btc
sub
movzbw
xor
mov
cmc
cmc
jmp
clc
or
mov
pusha
cmp
pushf
cmpb
pusha
pushf
lea
jne
aam
xor
movsbw
neg
shl
adc
mov
mov
cmc
call
lea
call
push
pusha
adc
pushl
jmp
lea
jae
call
bswap
cmp
xor
mov
jmp
add
pushf
movb
lea
jmp
bt
shr
test
cmp
pushf
push
lea
je
stc
test
cmp
pushf
pusha
jmp
pusha
jmp
repz
mov
movsl
and
call
sub
mov
sub
roll
lahf
cltd
push
jns
loope
jle
data16
jmp
xchg
push
inc
xor
lcall
mov
cltd
repz
sub
sti
lret
loop
pop
dec
sbb
cltd
test
ljmp
jge
cmp
jns
js
xor
lea
xchg
pop
or
enter
fs
ja
push
lea
jb
cmc
clc
clc
cmp
cmpb
pushf
lea
jne
shl
shld
bt
mov
pushf
cmp
pusha
bt
add
jmp
test
call
add
jecxz
and
mov
addl
leave
pop
movsb
mov
stos
stos
xchg
jge
repz
pop
cmpsb
dec
or
push
loop
stos
push
imul
imul
ja
testl
out
adc
xchg
out
push
or
pop
dec
push
outsb
pushf
ljmp
fsts
push
xchg
xchg
aaa
lods
fnsave
add
jns
adc
cmc
cmp
rcll
nop
pusha
rol
test
xor
neg
test
stc
cmc
sub
shl
neg
pushf
not
movb
stos
not
jmp
push
lea
call
jmp
adc
xchg
loope
testl
and
or
push
xchg
into
fstpl
push
jge
mov
cmpsl
sbb
sbb
stc
in
stos
adc
ja
xchg
inc
icebp
inc
and
insb
ret
pop
ja
add
cmpl
pop
push
insl
scas
or
jl
cld
test
jmp
pop
ds
in
cltd
inc
pop
push
sbb
lret
mov
mov
dec
into
jle
add
je
jb
gs
gs
fs
imul
xor
mov
push
cwtl
inc
sub
data16
or
iret
mov
xchg
jl
push
xor
lcall
inc
enter
mov
xor
shll
stos
vpaddb
icebp
ret
sbbl
cmpsb
xor
fisttps
sbb
addr16
xchg
movsl
test
test
clc
ljmp
dec
push
imull
js
cmp
xor
mov
mov
mov
push
adc
int3
pop
mov
lahf
pushf
lea
ja
sub
ror
sub
ror
add
sbb
clc
shl
mov
call
cmc
cmp
pusha
lea
ja
mov
not
call
jo
inc
xchg
and
sbb
cmp
mov
dec
test
imul
xchg
shrl
ret
mov
mov
into
in
pop
shrl
xorb
std
and
or
outsl
mov
inc
fucomp
scas
test
test
push
mov
mov
jae
ss
jp
mov
fisttpll
mov
adc
dec
dec
dec
inc
push
cs
insb
add
test
push
movb
lea
jmp
sets
lea
call
add
inc
aad
or
xchg
fs
frstor
jl
pop
or
dec
inc
sub
cltd
pop
rclb
adc
lds
fadds
push
or
pop
add
mov
inc
sbb
std
addr16
mov
testb
adc
mov
pop
mov
fldt
cmp
aam
mov
ljmp
jne
icebp
outsb
inc
dec
jo
push
mov
cld
jmp
mov
in
pop
inc
bound
movsb
mov
jns
pop
cmp
sti
xchg
inc
ds
je
gs
data16
addb
jecxz
cmp
mov
gs
data16
int
lods
xchg
ss
repz
jecxz
pop
mov
xor
rcrb
pop
cwtl
mov
ss
out
jae
rorl
lods
aaa
push
test
cmp
stc
daa
cmp
xlat
scas
out
jne
out
jae
in
mov
js
ret
icebp
jne
cwtl
scas
cmp
push
jns
test
pop
xchg
movsb
mov
lcall
outsb
and
int3
js
in
dec
sub
cmpsb
lret
rcl
mov
jle
add
mov
das
orl
pop
outsb
cmp
out
lods
es
clc
add
inc
xchg
stos
inc
into
outsb
lret
lahf
out
lock
push
xor
lahf
mov
and
jo
sbb
cmp
imul
xchg
repnz
xchg
int3
cmp
mov
mov
xchg
xor
enter
repnz
and
mov
icebp
clc
insl
jge
push
lods
jb
pusha
cmp
into
cmpsl
enter
mull
and
je
es
cmpsl
dec
adc
xor
sbb
add
popf
je
sub
cmc
repnz
cs
das
xlat
add
repnz
out
mov
movsb
pop
repnz
cli
inc
pop
mov
out
add
xchg
adc
xchg
or
inc
push
dec
jbe
pop
sub
in
jb
stos
pushf
movsl
lods
mov
inc
pop
push
cltd
mov
cmpsb
imul
and
pushf
pushl
pushf
call
push
lea
je
cmc
test
test
jmp
push
mov
pusha
mov
pushf
pushl
ret
notb
jg
pop
jbe
push
pop
repz
arpl
jbe
xor
cmp
xchg
lret
pop
mov
movsb
push
mov
iret
or
call
adc
fdivrs
mov
mov
aas
push
mov
jne
jbe
js
dec
add
mov
fst
xchg
rcr
add
cbtw
ljmp
mov
sub
and
sbb
push
hlt
dec
push
cli
cmp
xor
inc
inc
xchg
sbb
int
fldl
sar
outsb
push
sahf
iret
jmp
cmc
cmp
call
mov
cmp
push
add
shl
mov
sub
not
in
jle
lcall
in
sbbl
inc
out
dec
jnp
insl
push
add
andb
mov
inc
pop
cmp
fiadds
jl
subl
xchg
xor
xlat
enter
ss
lcall
ficoml
popf
push
push
sbb
sub
lods
cmp
dec
in
add
jle
ret
das
loop
dec
sbb
mov
dec
jecxz
lret
dec
and
cmpsl
fldcw
inc
pop
xchg
mov
inc
add
jo
loop
fcoms
mov
sub
push
add
sub
insb
je
sub
adc
mov
loop
or
xchg
cli
mov
movsb
daa
and
jp
out
push
cmp
mov
ficoms
inc
test
jl
in
ds
dec
hlt
jne
push
pushf
add
xor
mov
add
cmpsl
aaa
pop
adc
ret
gs
inc
aam
outsl
mov
push
hlt
popa
pushf
out
sbb
repz
add
adc
adc
out
pusha
mov
inc
pop
arpl
mov
shlb
fildll
or
add
and
aam
or
or
and
ss
rclb
jo
mov
and
mov
mov
inc
loop
lcall
and
in
jo
cs
roll
cld
mov
jl
push
lods
iret
cmpsb
fstl
xchg
or
lcall
pmuludq
call
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
cs
pop
mov
mov
xor
imul
inc
inc
xor
call
movsb
pusha
sbb
dec
jp
pop
pusha
outsl
sub
rorl
rolb
aam
xor
scas
sub
mov
cmp
jo
fldl
inc
push
aaa
xchg
sbb
sarl
pop
ja
fs
mov
or
mov
jmp
decl
pop
mov
jl
and
std
outsl
sbb
or
push
xchg
adc
call
pop
pushf
xchg
pop
sarb
mov
xchg
lret
sub
mov
int
std
test
mov
jg
call
std
aam
aam
push
dec
jnp
pop
cmp
ss
push
jbe
jp
mov
or
call
inc
mov
or
dec
das
sub
out
xor
jbe
xchg
mov
mov
cmp
pushf
movb
jmp
cmp
xchg
movsl
xlat
inc
sub
lret
cmp
in
shl
negl
jnp
ljmp
push
ffree
jae
sbbb
repnz
mov
fcomps
fucom
outsb
push
lock
cmp
int3
lret
xor
lahf
push
int3
jge
icebp
fs
iret
imul
fimull
inc
stc
sbb
adc
dec
call
shlb
in
mov
lcall
std
sub
enter
xchg
jb
inc
xchg
loop
mov
pop
and
inc
sbb
mov
in
xchg
sbb
xor
adc
push
test
adc
push
ljmp
mov
mov
lret
outsb
push
insb
xchg
sub
inc
pop
push
jb
pop
hlt
fstpl
ja
leave
jns
scas
mov
out
in
and
mov
inc
push
stc
jbe
in
and
lea
push
mov
xchg
lea
push
fisubrl
mov
or
mov
jecxz
das
or
ret
fisubrs
daa
hlt
lock
xchg
test
shll
es
sub
enter
cltd
sub
xor
mov
mov
loopne
out
push
inc
sub
out
roll
lret
xchg
adc
stc
or
ds
stc
testl
ficoml
xchg
lret
xchg
and
push
rorb
in
test
mov
jmp
out
add
and
xchg
pop
pop
sub
push
push
jb
popa
mov
push
mov
adc
sub
pop
mov
lahf
loopne
mov
out
cs
gs
or
into
in
enter
div
mov
add
lea
adc
mov
jns
jb
divb
add
in
dec
or
pop
iret
pop
ret
xchg
xor
adc
jae
call
dec
or
je
mov
pusha
cld
mov
jne
les
and
cli
sbb
dec
repnz
out
sbb
cltd
stos
cmpb
dec
out
insl
into
out
fdiv
inc
add
mov
sbb
push
add
cmpsl
mov
pop
ret
loopne
loope
cmp
pop
xchg
lods
addb
pop
je
mov
mov
sub
sbb
dec
add
mov
das
repnz
lret
adc
div
lds
rcrb
repz
pop
out
push
mov
and
lds
xor
out
jno
pop
push
fbstp
pop
inc
mov
imul
cltd
mov
insb
outsl
stos
rcrb
mov
jecxz
je
add
lods
call
jno
in
popa
fidivrs
xchg
jne
in
rolb
icebp
jae
stos
inc
mov
lds
negl
or
lods
sub
dec
push
icebp
fsubrs
jp
sahf
outsb
push
mov
insb
rcrb
or
push
add
pop
fsts
jo
lea
dec
movsb
mul
sub
aas
push
jl
pop
ja
jb
cmp
mov
or
cmp
xchg
xchg
jge
fs
or
mov
push
sahf
test
cld
jge
mov
pop
rclb
popf
or
and
dec
pop
mov
mov
sub
cmp
pop
xor
movsb
and
fsubl
inc
std
mov
clc
shll
call
mov
dec
sub
xchg
and
xchg
add
xlat
shl
dec
adc
and
xchg
iret
fs
push
or
in
bnd
jl
jl
or
xor
scas
pop
cmp
iret
xchg
jg
loopne
or
in
outsl
add
add
xor
mov
sarb
lret
sbb
lock
cmc
or
lahf
cmc
xchg
cltd
mov
push
ja
cld
insl
or
inc
inc
xchg
fstpl
add
xchg
in
inc
cwtl
mov
int
or
mov
or
or
xor
inc
setnp
dec
mov
xor
fnsave
xlat
adc
cmp
lods
jg
test
mov
fdivrl
loopne
jg
into
push
or
jbe
add
xor
out
add
or
cmpsl
jne
adc
decl
out
cwtl
scas
icebp
adc
sub
and
xchg
sub
jmp
lcall
and
cmpsl
push
mov
adc
imul
cmpsl
lods
push
push
stos
jl
jmp
dec
js
mov
fcmovnbe
insb
nop
add
lret
in
rorb
mov
js
push
lds
push
lods
jno
dec
sbb
insl
mov
mov
cmc
test
test
pushf
jmp
fnstsw
jo
in
cmp
pop
inc
pop
sub
xchg
cmp
jmp
or
loop
add
push
out
aad
dec
loopne
iret
pushf
pop
jge
out
loop
sub
insl
pop
out
or
subb
hlt
xchg
inc
adc
and
iret
sahf
aam
push
movsb
push
jmp
lret
out
cmp
arpl
or
addl
or
lret
or
pushf
scas
jg
test
push
inc
xchg
in
outsb
pop
xchg
repnz
xor
fsts
stc
xor
test
fsubrs
out
inc
jl
popa
or
dec
movsb
sub
add
popa
pop
mov
dec
mov
lods
test
xchg
incb
rcr
loope
popa
cld
cmc
mov
cmp
add
imulb
rol
aam
jns
es
or
cs
add
addr16
ja
cli
mov
mov
inc
pop
js
in
dec
mov
pop
add
pop
mov
mov
jecxz
mov
pop
add
cmpsb
lret
pop
arpl
mov
adc
push
or
idivb
int3
push
push
jo
in
jne
jecxz
pop
mov
jb
icebp
add
jl
mov
lea
dec
mov
mull
lock
pop
sar
mov
rcrb
and
add
sub
imul
sar
xor
mov
pop
push
loopne
or
ja
pop
subb
mov
fldcw
fmuls
sahf
movsl
pop
aas
push
add
scas
or
mov
dec
nop
mov
or
add
jecxz
inc
popf
pop
inc
push
fimuls
lret
dec
fs
mov
cmp
inc
incl
cwtl
pusha
mov
call
data16
adc
call
sahf
jne
push
cmp
rcr
xor
push
or
inc
adc
ja
jge
xor
add
aam
testb
movsl
rcrb
outsb
enter
test
loopne
mov
jno
mov
sbbl
fnsave
push
leave
test
adc
sahf
cmp
in
and
mov
push
and
add
popa
sbb
enter
xchg
call
loop
inc
nop
shrb
push
sbb
xor
ret
mov
push
out
or
dec
mov
jmp
cwtl
push
xchg
mov
mov
insl
imul
cltd
call
pushf
call
ss
add
pop
jmp
in
in
adcb
cmp
aam
inc
dec
fldcw
sahf
mov
cwtl
jg
idiv
mov
cmp
mov
lods
clc
ljmp
add
stos
aad
jne
pop
icebp
mov
iret
aas
sbb
fildll
and
je
pushf
push
cmp
jmp
mov
lods
push
sub
clc
ror
call
popa
sbb
and
push
xlat
cmp
stc
pop
xchg
inc
cmp
adc
add
jmp
mov
mov
inc
cld
sbb
jle
into
mov
arpl
jmp
mov
jp
jl
add
and
mov
imul
in
stc
rcr
in
cmc
subb
imul
ret
mov
popf
cli
loop
faddl
and
fs
add
inc
out
xchg
push
aam
call
mov
imul
in
call
pop
adc
daa
add
lods
loop
and
xchg
cmpsl
call
push
scas
enter
push
ljmp
in
je
add
cmp
xor
jl
shll
test
xchg
jo
pop
pop
sbb
mov
in
pop
pushf
push
add
icebp
jle
out
js
adcb
sub
xor
popl
dec
push
and
dec
sbb
movsl
jge
movups
cltd
dec
int3
or
popa
aad
insl
stos
mov
in
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
add
aad
test
mov
sbb
mov
push
pushf
dec
hlt
pushf
pop
fld
das
loopne
jno
mov
xchg
jo
xor
dec
xchg
add
inc
scas
inc
mov
scas
xchg
ja
cmp
pop
js
adc
std
addb
shl
xchg
ja
or
repz
pop
cltd
xchg
imul
and
pop
dec
inc
cmpsl
loope
pushf
cld
aam
lods
adc
xchg
jge
sub
insb
addr16
test
and
fst
stos
lods
sti
add
icebp
sub
xchg
std
movsb
nop
or
loopne
ss
es
stos
imul
push
outsl
jnp
ljmp
test
shr
mov
push
inc
icebp
mov
or
dec
pop
dec
aad
add
jae
push
lock
loopne
repz
je
lods
imul
xor
jg
mov
popa
mov
mov
mov
cmpsb
jp
popf
push
mov
inc
fistl
cmpl
jo
mov
jns
and
pushf
es
jbe
jecxz
inc
adc
sbb
cltd
mov
scas
ret
adc
shrl
dec
mov
mov
cltd
push
testb
adc
pop
push
mov
cmc
test
mov
pushf
pusha
jmp
jge
sti
testb
jne
jmp
or
and
mov
insl
subl
add
push
mov
add
and
mov
insb
dec
das
inc
push
and
cltd
and
fdivl
xor
xchg
aas
gs
adc
shr
cmp
jle
sub
or
leave
repz
adc
sbbl
mov
aas
xchg
mov
and
movsb
cmc
cld
pop
dec
add
cmp
data16
mov
push
jo
fsubl
xchg
or
roll
in
adc
mov
popf
ret
and
or
xor
mov
js
imul
hlt
and
ja
cmp
in
in
fs
stos
sub
hlt
gs
ret
scas
sti
repz
stos
sbb
jae
sbb
sbb
xor
pop
lret
dec
fcmovnbe
mov
xor
push
mov
push
lcall
adc
push
or
xor
mov
add
dec
lock
mov
dec
ds
sti
mov
xlat
pop
test
jmp
jl
ret
xor
sarl
daa
loope
cs
into
movsl
imul
push
in
jle
jecxz
inc
aam
xchg
test
aad
pop
cmp
in
inc
ja
call
and
or
scas
stos
hlt
add
mov
shrb
jne
insl
lahf
mov
pop
lret
pop
push
daa
sub
pop
out
inc
adc
jg
test
repz
fldl
xchg
int3
lret
cmp
inc
or
ss
idiv
adc
testb
pop
pop
xchg
addr16
pop
mov
add
mov
pop
cmp
inc
popa
mov
sbb
stos
ljmp
sahf
mov
push
and
out
cmpsl
stos
jmp
iret
jge
in
and
les
pop
test
mov
cld
or
lret
bound
inc
addl
cmp
jo
pop
fld1
outsl
iret
inc
sub
sbb
jnp
xchg
sbb
fs
add
adc
negb
mov
add
test
sahf
mov
add
jae
fs
jne
movsbl
sub
cmc
mov
shl
or
movsbw
sub
add
add
mov
test
sub
stc
push
cmc
pushl
popl
stc
cmc
test
cmp
call
xchg
movsl
shl
xor
dec
sbb
jae
fdivs
xor
dec
cs
cmpsb
mov
fildll
xchg
mov
das
xor
dec
lock
push
xchg
adc
xor
cmc
call
jge
lods
enter
in
jmp
adc
lock
inc
cmp
outsl
jae
adcl
lret
scas
lods
sti
jnp
inc
jge
stos
sbb
fildll
sbbb
call
cli
push
ficoml
je
cli
mov
mov
adc
sbb
stos
jns
and
data16
mov
xor
mov
sahf
sub
jb
shl
cmpsb
int
fisubrs
fnsave
icebp
cmpsl
rolb
sbb
fnsave
xchg
out
mov
sbb
xor
xor
test
lahf
and
mov
in
add
out
xchg
or
jge
xor
es
xchg
fcompl
outsb
add
and
jmp
out
mov
jbe
xorl
add
xor
xchg
fnstcw
jno
sub
imul
xchg
jl
mov
or
notl
xor
cmp
mov
or
jo
pop
push
and
mov
movsl
mov
jb
mov
pop
fstl
std
dec
mov
dec
out
test
mov
std
sub
dec
cwtl
sbb
lahf
inc
mov
vpslld
inc
inc
pop
movsl
js
movq
es
je
les
sbb
mov
imul
fisubl
xchg
scas
cwtl
insb
jo
jb
sahf
jecxz
pop
test
and
mov
in
xor
pop
sbbl
jecxz
or
call
punpckldq
popa
mov
jno
bnd
or
xor
or
js
scas
mov
addr16
or
xchg
mov
xchg
mov
mov
js
pop
adc
aaa
fbld
mov
mov
cltd
pushf
stos
cwtl
push
dec
mov
iret
xchg
test
jo
xchg
sub
jne
pop
dec
mov
adc
sub
hlt
xchg
inc
cld
mulb
sbb
push
pusha
mov
outsb
cmp
ret
adc
and
shrl
xchg
or
jge
jno
adc
test
int
les
fld
daa
in
lock
sbb
flds
es
ret
outsb
pop
mov
sbb
loopne
lock
aaa
adc
xchg
pop
pop
add
and
in
cmpsl
cwtl
jg
jb
jo
test
dec
lds
xor
sbb
push
into
sbb
xor
inc
and
cmpl
scas
push
add
xchg
push
xchg
mov
or
inc
xor
jae
sbb
leave
push
dec
mov
call
mov
cmp
jo
mov
outsl
pop
xor
and
cmp
insl
sub
data16
mov
xor
xlat
fcomip
adc
xor
cmc
mov
add
adc
mov
mov
mov
dec
test
repz
pop
jo
rsqrtps
movsb
leave
lock
mov
mov
pop
pop
movsl
test
mov
xor
stos
push
ja
jno
in
push
sahf
adc
push
mov
inc
les
dec
sub
jmp
ds
xor
sahf
test
push
cmp
aam
dec
mov
pop
ret
pop
sbb
mov
dec
mov
mov
pushf
sub
ljmp
or
popf
cltd
aas
push
je
imul
xchg
sub
rolb
pop
jno
arpl
outsb
mov
dec
imul
sbb
lods
xchg
jmp
mov
sub
outsb
dec
sub
mov
push
cs
ljmp
mov
cmpl
hlt
in
das
out
sub
push
push
in
pop
shrl
jmp
cmpsb
pop
sub
mov
fisubs
data16
mov
jmp
test
sub
out
adc
stc
sbb
lea
add
in
fldl
outsb
popa
pushf
xor
lcall
add
imul
adc
xor
jne
xchg
push
mov
cwtl
insl
cld
rcll
dec
xor
cwtl
mov
cltd
shlb
mov
push
pop
test
push
or
xchg
stos
adc
inc
sbb
push
mov
ja
pop
sub
mov
inc
xchg
jae
stc
cmp
in
mov
loopne
jp
inc
fsubrl
cwtl
hlt
test
fsts
lcall
fisubrl
vmread
xchg
pop
arpl
sub
mov
pusha
psubsw
add
xchg
pop
sbb
stc
add
xor
xor
mov
sub
mov
jns
dec
into
and
jns
scas
sub
fdivrs
sub
rorb
test
into
psrad
cmp
sbb
insl
je
test
or
icebp
subb
cmpl
jmp
mov
sbb
mov
aad
iret
push
ret
mov
jecxz
mov
and
pushf
xlat
xchg
out
mov
popa
lds
bound
pop
xor
inc
iret
and
dec
or
btsl
or
inc
pop
stos
sbb
decl
std
jp
pop
mov
fs
in
mov
outsl
push
data16
jle
jg
shll
loope
sub
sub
insl
hlt
arpl
pop
cmp
test
cmpsl
outsb
stos
cmp
cwtl
arpl
into
pushl
scas
push
xchg
and
icebp
mov
pop
pop
mov
jp
mov
test
sbb
pop
aas
push
or
sub
cmpsb
gs
stos
push
jbe
push
cmp
or
add
addb
out
push
sbb
or
inc
adc
cmp
pop
call
fcomip
loop
testl
jle
jmp
xchg
mov
sub
mov
repz
scas
add
enter
dec
pop
nop
xchg
outsl
fdivl
stos
jb
xchg
scas
ret
mov
xor
xor
nop
cmpsl
ss
js
addb
xchg
pop
inc
scas
adcb
pop
test
shll
out
or
imul
dec
shrl
xchg
shrl
lock
lret
push
or
and
insl
pop
mov
xchg
xor
stos
mov
in
ds
mov
xor
int
and
std
pop
sub
dec
lahf
jecxz
adc
xchg
addr16
cmc
leave
pop
jo
push
pusha
push
loopne
fsubrs
xor
pop
movsl
call
scas
xchg
adc
movsb
imul
dec
insb
sub
mov
incb
push
and
inc
pop
jae
push
fnstcw
cmp
std
push
add
pop
outsl
push
gs
popf
call
xor
push
mov
addr16
shl
out
lret
push
arpl
and
cmp
add
cs
ss
cwtl
or
pop
shlb
insb
inc
pop
daa
icebp
or
jle
cmp
jae
adc
jnp
adc
bound
pushf
jae
ret
lret
jle
bound
push
test
mov
adc
lahf
xchg
xor
jecxz
in
test
insl
add
rclb
test
mov
pop
dec
jno
sbb
out
popa
adc
in
popf
int
pop
insl
dec
adc
nop
adc
pmulhuw
repz
in
shrb
mov
xchg
mov
sahf
mov
xor
ja
sub
and
mov
dec
enter
lods
xor
cld
cmp
push
pop
xor
inc
xor
fdivrs
ds
pushf
mov
testb
jecxz
dec
xor
mov
xchg
mov
sbb
jl
pop
test
jae
in
repz
jnp
jp
add
xchg
movl
jg
xchg
add
pmaxsw
iret
loope
test
lret
push
test
cmp
fsub
fisubl
fsub
mov
mov
cmpsl
jbe
jmp
and
or
repnz
push
inc
lods
inc
sbb
inc
std
js
and
std
add
pop
xlat
mov
mov
mov
insl
lea
inc
dec
mov
sbb
arpl
sti
push
mov
sbb
in
jge
push
cmc
orb
lret
dec
pop
mov
add
fwait
add
xchg
inc
adc
dec
fwait
imul
rcr
mov
push
lds
bound
cld
or
xchg
sub
push
mov
and
incl
daa
subl
cmpsl
pop
or
icebp
popa
push
mov
push
xlat
fdivp
push
inc
insl
xor
roll
push
jle
or
mov
mov
jl
mov
outsl
inc
sub
out
jmp
or
imul
out
in
shlb
data16
out
popf
cwtl
loope
sbb
lods
decl
adc
mov
pusha
push
sbb
sbb
dec
test
clc
jbe
or
mov
or
js
lock
push
sub
int3
sbb
fmull
inc
push
rol
cmpsb
les
test
mov
shrb
adc
sub
adc
rolb
adc
xchg
outsb
mov
jo
pop
not
fisttpl
fimuls
push
popa
xchg
dec
cmp
pop
jno
mov
push
dec
pop
jp
xchg
mov
mov
ret
and
cmp
push
in
out
ja
rorb
shlb
push
shll
mov
mov
push
cmpsl
nop
ljmp
or
fs
sub
imul
mov
leave
pusha
xor
subb
mov
mov
cmp
test
or
mov
xchg
cmpsl
stc
adc
imul
jecxz
xlat
adc
ds
int3
xchg
sub
int
std
inc
push
cmpsb
iret
cmpb
shll
xchg
pusha
pop
cltd
out
test
imul
cmp
int3
pop
and
dec
xlat
je
loope
jp
std
dec
jle
pop
sbb
pop
pop
imul
inc
clc
int
add
jg
arpl
mov
jmp
cmpsl
mov
mov
push
cld
add
inc
jne
adc
dec
mov
pop
mov
testb
mov
mov
jno
pop
xchg
testl
push
fstl
mov
mov
push
push
jg
inc
mov
mov
push
jae
cmp
and
xor
xchg
sbb
call
mov
sub
pop
cmpsb
loope
das
pop
je
sbb
sbb
or
in
push
fwait
stos
sbb
outsb
popf
bnd
dec
cli
mov
popa
mov
lods
lcall
clc
dec
sub
gs
or
leave
jmp
dec
test
frstor
hlt
cmp
cld
mov
movsl
rcr
test
dec
inc
sahf
ja
push
ljmp
in
lods
xchg
stc
adc
mov
sbbl
arpl
sub
les
sbb
js
int3
pop
or
pusha
repz
std
mov
mov
cld
dec
imul
rol
mov
leave
dec
pop
in
aas
es
sbb
cmp
dec
mov
repnz
inc
mov
sahf
mov
sbbl
lret
cmp
jns
clc
movsb
outsl
dec
sysexit
cld
mov
pop
shl
outsb
inc
sub
repnz
xor
inc
adc
cmp
xchg
sub
shrb
lea
mov
fimuls
jbe
aaa
inc
xchg
and
lods
or
adc
shl
xlat
sub
gs
scas
jno
stos
push
fldt
cmp
push
inc
xchg
dec
and
sbb
ljmp
test
cmp
es
imul
xor
test
mov
cmp
test
adc
mull
push
jae
or
dec
fwait
pop
adc
out
push
test
cmp
cmpsl
add
aas
cltd
xor
xchg
call
xchg
xor
inc
jge
and
sbb
and
xchg
rcll
gs
and
jne
pop
sub
dec
mov
mov
adc
sbb
dec
add
sub
add
scas
xlat
stos
gs
mov
push
lods
mov
ret
ja
rclb
fstpl
jge
mov
xchg
mov
int3
lea
jae
aad
mov
jp
lea
rol
std
rolb
daa
sbb
and
fmuls
pop
rorl
sbb
adc
jbe
xchg
incb
pop
scas
and
jge
ret
stc
in
adc
scas
rcrl
sub
sub
mov
int
push
cmp
out
inc
cmp
popa
xor
rcll
pusha
sub
inc
push
loopne
mov
ds
adcl
inc
sarb
fs
xor
mov
int3
adc
fstpt
jb
test
sbb
jmp
jb
xor
je
push
add
jmp
adc
mov
inc
les
adc
js
insb
sti
mov
pop
xchg
inc
and
pop
sub
or
mov
in
inc
imul
je
mov
rcl
push
inc
xchg
out
pop
sub
and
enter
pop
cmp
dec
mov
mov
xchg
out
dec
and
sub
movsl
or
in
mov
or
lahf
repnz
dec
dec
xchg
aaa
cmpsb
cmp
stos
pop
aaa
lds
pop
cmp
popf
mov
fs
push
lds
ljmp
in
jb
mov
mov
ret
aad
push
sahf
lods
insl
fistpl
inc
xor
sahf
repnz
rcll
push
leave
xchg
mov
daa
pop
das
out
icebp
cmc
int3
inc
out
add
pop
outsl
shll
cmpsl
xor
jae
pop
push
test
and
pop
inc
push
inc
sbb
inc
add
lock
mov
sahf
or
stos
mov
pop
dec
pop
jnp
cwtl
cs
rcrb
rol
xor
sbb
push
jo
aad
sbb
je
push
fiaddl
jnp
out
cmpsb
mov
cmpsb
fs
xchg
ss
push
sub
in
cmpsl
mov
cmp
xorb
outsb
add
addr16
outsb
jo
or
ret
aad
cmc
and
loop
daa
sub
gs
and
xchg
mov
sub
mov
mov
iret
lods
mov
lcall
rcl
mov
push
inc
mov
movsl
insb
dec
pop
sub
mov
in
lds
aam
repnz
xor
jmp
fdivrp
std
aam
push
mov
mov
es
out
inc
push
jmp
test
jnp
in
xchg
repnz
or
and
push
arpl
jo
test
and
jg
fsubl
mov
pop
dec
sti
shlb
testb
xchg
imul
cld
aaa
test
fs
jo
mov
sahf
aas
imull
fstpl
xor
mov
mov
mov
in
je
sub
adcb
je
cmp
rcl
dec
and
adc
std
js
fcmovu
xor
cld
dec
ficomps
xchg
add
jmp
shrl
repnz
push
addr16
std
sbb
jle
adc
pop
mov
repz
pusha
pop
stc
dec
add
mov
in
lock
jge
lcall
jno
mov
ret
xlat
lock
jne
ret
pop
xchg
mov
mov
push
dec
cmp
push
divl
xchg
imul
filds
icebp
lcall
pop
iret
xchg
and
jbe
testb
jb
popa
loopne
adc
xlat
xchg
xor
ret
jnp
andb
mov
and
push
fwait
sub
in
jecxz
push
ja
sahf
repnz
dec
push
sbb
mov
xchg
xchg
jmp
sahf
push
inc
sbb
xchg
pop
bound
ja
push
mov
adc
pusha
pop
jb
fisttpll
in
inc
cmpsb
ds
and
xor
stc
xchg
insl
std
and
jg
inc
out
xchg
fsts
dec
ja
lahf
out
lods
call
jmp
fnstcw
lods
cmpb
out
fdivp
xlat
fiaddl
inc
xchg
mov
jg
insb
mov
jnp
pop
lods
sub
ds
adcl
xchg
xorl
in
cli
dec
add
cli
incl
xchg
jl
xor
fsubr
sub
movsl
clc
cltd
scas
sub
fistl
in
cmp
mul
mov
dec
pop
pop
sbb
outsl
ret
scas
push
inc
adcb
sub
repnz
xchg
xchg
lcall
jg
cld
xlat
mov
or
into
inc
pusha
movsb
mov
popf
lock
ret
in
sub
push
sub
xchg
scas
in
movsb
orb
xchg
cmp
das
sbb
or
insb
mov
xchg
cwtl
xchg
push
inc
out
or
adc
adc
leave
ds
and
add
testl
inc
jl
popa
xor
sub
and
in
lods
xor
mov
lods
mov
mov
dec
stos
sbb
sub
xlat
clc
std
aad
xor
adc
sub
push
data16
lods
mov
stos
int3
ja
dec
lods
mov
movsb
mov
repz
cmp
pop
insb
hlt
adc
iret
adc
test
and
sarb
or
pop
out
xchg
push
movl
xor
inc
push
xor
cmp
xor
bound
sbb
adc
sub
sbb
xchg
dec
cmp
mov
sbb
pop
or
xor
adc
add
xor
push
sub
cmp
jnp
mov
cmpsb
jge
sub
lock
les
xor
jnp
flds
into
inc
test
dec
or
dec
lea
movsb
movl
or
sub
pop
mov
dec
gs
lock
jp
cmp
iret
mov
or
cmp
aad
shrb
xor
inc
pop
ret
xchg
pop
in
jnp
xchg
sub
and
pusha
gs
clc
jnp
and
lods
xor
shlb
or
add
push
sub
movsb
mov
jmp
mov
push
ja
test
add
ret
addr16
lods
arpl
inc
mov
rcl
les
add
pop
sub
ds
or
mov
or
fs
inc
push
loop
ficomps
or
mov
std
push
push
loope
rolb
paddsw
loope
addps
repz
adc
out
add
cs
adc
cmc
push
inc
sub
mov
cmp
sbb
hlt
lea
std
bound
pop
sbb
cmp
rcrb
adc
xchg
insl
shlb
mov
loopne
aaa
pop
inc
push
rcrb
pop
jb
adc
push
fwait
add
nop
loop
jae
fisttpl
cltd
push
sbb
mov
cmp
imulb
mov
pop
sbb
xchg
mov
mov
dec
icebp
mov
out
daa
jmp
ljmp
lds
ficomps
in
add
mov
sub
fadds
sbb
inc
pop
ds
add
push
decl
movntq
push
fdivp
dec
or
call
popa
orl
cmp
jbe
cs
adcb
jbe
push
leave
pop
jle
pop
imul
push
movsl
out
shrl
sbb
push
pand
or
ret
popf
fisttps
insl
bound
test
rorl
inc
fs
pop
daa
sub
jle
imul
int
fucomp
imul
cltd
push
jecxz
jecxz
xor
cwtl
pop
xor
ss
je
aaa
xchg
push
lods
subl
call
fs
sub
mov
dec
push
sbb
sub
lock
aas
jnp
fcoms
inc
push
scas
fdivr
mov
xchg
mov
mov
int3
push
shll
dec
lods
adc
ss
lret
ficomps
lods
out
push
arpl
arpl
sbb
int
sub
lea
fisttps
mov
sbb
sub
sbb
and
inc
stos
mov
sub
pop
ljmp
xlat
cmp
arpl
lret
ret
packuswb
cltd
aad
jbe
jecxz
lcall
add
jo
je
dec
in
pop
imul
mov
lret
inc
pop
aas
adc
je
push
or
inc
mov
rol
cltd
cmc
or
scas
std
xor
jmp
xchg
cmp
xor
inc
add
dec
xor
fisubrl
aam
loopne
mov
fs
cmp
in
aas
sahf
push
push
pusha
dec
or
mov
out
jecxz
or
nop
movsb
incb
jp
fs
and
push
ja
cwtl
test
pop
in
inc
push
ja
xor
sbbb
mov
mov
adcl
xchg
and
sub
cmpsb
mov
sti
xchg
mov
jb
add
xchg
sub
mov
nop
std
out
inc
imull
aas
stc
adc
lock
data16
cmpsl
lods
test
jns
inc
jo
add
adc
mov
adc
push
sub
mov
movl
in
mov
pop
mov
add
les
jo
popa
add
and
xchg
lock
sub
cmpsb
es
mov
sub
or
jo
movsl
jge
mov
sub
dec
stc
popl
mov
fisttpl
jl
rol
xor
sub
cmp
pop
xor
push
dec
mov
cmp
out
scas
mov
adc
loop
jl
adc
loope
cmp
and
and
and
mov
mov
icebp
cmc
int3
inc
xchg
pop
sahf
adc
push
pop
adc
xor
fsubrp
inc
pushf
in
or
ljmp
push
inc
pushf
enter
shll
push
jno
stos
jg
aas
mov
inc
enter
nop
fs
lahf
test
cs
inc
out
nop
adcb
into
dec
mov
into
pusha
out
out
jae
jmp
push
mov
sbb
mov
leave
cwtl
jae
in
or
lahf
xor
mov
pop
mov
pop
or
fldenv
mov
and
enter
and
ljmp
out
pop
push
jmp
inc
jmp
push
ret
sbb
adc
fcoms
push
cmp
subb
and
in
pop
adc
xchg
nop
aas
sbb
scas
push
adc
addl
jmp
push
add
clc
popa
xor
repz
ds
xchg
ljmp
mov
mov
js
push
jb
jne
cmpl
ja
ds
push
add
loope
aas
inc
sbb
mov
fisubrl
gs
jecxz
loop
pop
daa
lock
aaa
jnp
and
test
push
pop
fldt
cmp
insb
dec
int
sub
and
fildll
xchg
imul
pop
loopne
movsl
pop
punpckldq
mov
inc
push
cmp
cld
push
lods
sti
mov
pop
ljmp
stos
push
loop
sub
test
arpl
insl
pushf
scas
or
xchg
and
lret
ljmp
fisubrs
xchg
cmp
pusha
lods
fstps
cmp
add
xor
sarl
cwtl
test
push
xor
std
adc
adc
pop
imul
repz
stc
std
dec
or
adc
xchg
add
mov
leave
jns
xchg
scas
sbb
jl
jne
ret
pop
jo
aaa
sbb
pop
jae
xlat
dec
repz
add
lret
xchg
jne
fs
pop
out
push
in
das
and
call
insb
xchg
imul
and
push
push
inc
andb
jecxz
filds
dec
mov
fistpll
cmp
push
nop
mov
nop
xorb
xchg
daa
xchg
rorb
aas
fxch
hlt
mov
cmp
ret
mov
imul
xorb
inc
adc
sbb
cmp
inc
rcl
out
xchg
sbbb
and
ss
push
cltd
jmp
mov
out
mov
mov
mov
adc
and
or
adc
push
inc
push
pop
ljmp
pusha
mov
rorl
push
push
call
addr16
cmc
ljmp
pop
popa
push
ret
ret
in
mov
ljmp
fnstcw
mov
xor
xchg
and
add
push
jne
das
push
loop
js
lret
mov
aas
icebp
cmc
int
and
addb
push
mov
aas
call
jne
add
jl
pop
in
js
sbb
xchg
in
xchg
fwait
int3
push
adc
fiadds
adc
testb
dec
xor
out
stc
dec
push
insl
insb
xor
mov
nop
push
jnp
xor
lea
inc
mov
popf
jno
pop
pop
dec
or
add
repnz
cmpsb
pop
ljmp
es
data16
popf
xor
xor
and
pop
je
dec
or
je
jo
roll
xor
scas
adc
xchg
ja
mov
cld
ret
cmp
mov
aaa
xor
cmpsl
mov
insl
das
pushf
mov
adcl
push
sahf
sub
out
jl
loopne
cmp
out
mov
xchg
xchg
mov
jle
pop
dec
and
xchg
sbb
dec
imul
lock
push
es
movsb
shl
lea
sbb
mov
sub
add
or
icebp
jp
jp
dec
rcrl
shlb
fdivrl
iret
fiaddl
lret
gs
sub
fwait
out
push
lods
mov
dec
pop
add
mov
insb
scas
xor
add
hlt
and
jg
cwtl
arpl
and
dec
or
jge
bound
fiaddl
xchg
sahf
cmp
sub
js
ret
jo
push
pop
inc
push
cmp
stc
std
aas
dec
fucomip
test
addr16
mov
cmp
jl
xor
pop
out
cwtl
jge
ja
pusha
or
aam
test
ja
stc
mov
lock
pop
lret
mov
xor
popa
js
hlt
ret
sahf
mov
fcomps
sub
aam
add
add
sbb
js
mov
jns
mov
mov
stc
pop
and
mov
lock
and
jb
dec
cmp
scas
pop
insl
out
adc
insb
mov
scas
test
push
in
movsl
test
or
scas
xchg
leave
orl
fldcw
fbld
adc
andl
out
fcoml
adc
outsb
sbbl
jg
lds
int3
into
cmc
and
sbb
rcl
pop
xor
dec
insl
shufps
popf
and
cmp
leave
pop
subb
icebp
xor
inc
adc
cmpsb
insb
sbb
push
in
call
inc
lcall
mov
aad
lahf
adc
das
hlt
bound
je
movsb
leave
push
pop
leave
outsb
aas
iret
sub
mov
pop
mov
int3
in
pop
ljmp
mov
inc
mov
xchg
bound
inc
ds
incb
fiaddl
xor
clc
jo
popf
xchg
jecxz
pop
cwtl
test
sbb
gs
ljmp
fldcw
sub
or
pop
mov
inc
jmp
popf
das
jp
call
push
leave
test
call
enter
loope
xchg
dec
push
xchg
sub
out
adc
sbbl
mov
mull
pop
dec
dec
xchg
xchg
and
add
sub
pushf
jno
add
xchg
ljmp
or
cli
test
lcall
fs
std
mov
sub
fisttps
inc
sbb
stos
add
jle
mov
cmp
add
out
jecxz
or
loopne
int
les
cmp
xchg
pop
or
push
imul
xor
mov
scas
fmuls
mov
jle
es
mov
sahf
fsubrl
scas
lret
push
out
fwait
popf
nop
enter
push
mov
rcrl
fistpll
fildll
insl
popf
out
mov
fs
jns
inc
lret
lea
push
jle
enter
testl
or
leave
popf
mov
and
lds
mov
cld
stos
lahf
out
mov
gs
add
and
sbbb
add
int3
pop
lea
xor
subl
mov
pop
out
inc
aam
mov
pop
or
mov
xchg
insb
aas
adc
js
pop
test
mov
xchg
jne
jns
xchg
sbb
nop
pop
ss
sti
in
movsb
lds
and
lret
pop
fmull
pop
dec
fdivrl
pop
jp
pusha
fldt
test
mov
ret
mov
pusha
add
imul
inc
push
xchg
imul
into
cmp
mov
test
arpl
das
std
mov
fstpl
lret
xchg
add
pushf
ja
ficomps
mov
and
rcrb
inc
mov
push
sub
daa
andb
aaa
sub
cs
xlat
test
mov
jmp
and
dec
pop
cli
cmp
aas
cs
cld
and
dec
lods
cmp
add
cmp
add
mov
and
mov
sti
loope
popf
push
addl
xor
mov
and
mov
mov
adc
stos
push
cmp
dec
enter
inc
adc
loope
stos
pop
jns
in
and
lret
mov
jle
pop
dec
push
mov
cmp
mov
dec
outsb
popa
icebp
dec
jmp
rcl
test
mov
sarl
lock
stc
bt
call
aam
mov
icebp
shll
cltd
sub
and
adc
fisttps
hlt
sbb
jo
scas
sub
sarb
cmp
pop
hlt
fidivs
and
pushf
push
lea
ja
pusha
jmp
jmp
cmc
jo
out
int3
test
adc
fildll
inc
and
xor
call
push
or
pushl
mov
shr
xchg
xor
inc
jnp
add
jnp
rcrl
mov
inc
lretw
mov
add
jp
cmp
imul
or
aas
int3
popf
cmpsl
ss
inc
mov
ficoml
lret
xchg
jecxz
imul
jp
je
push
lods
xlat
inc
dec
jnp
cmp
or
inc
enter
cs
repz
scas
inc
and
loop
nop
mov
cmpsb
xor
out
pop
inc
sub
adc
xchg
daa
fs
orb
cltd
mov
sarb
dec
movsl
daa
pop
out
dec
sti
or
mov
shll
into
sub
inc
jns
addr16
jecxz
sub
mov
jecxz
sbb
and
addr16
push
dec
loop
xchg
jle
xchg
inc
mov
sub
pop
lea
jb
clc
call
mov
jmp
inc
xchg
adc
shlb
mov
stos
sarl
jae
arpl
fidivl
dec
jbe
fcompl
pusha
push
pop
rcrb
sub
sbb
in
sarl
ss
fidivl
popf
adc
dec
adc
int3
bound
in
sbb
leave
push
popf
adc
jno
jmp
out
jbe
or
jmp
in
and
mov
add
mov
mov
test
call
cmp
stos
adc
test
mov
lods
pop
test
mov
mov
adc
scas
cs
adc
xchg
mov
mov
push
jg
push
pushf
mov
addr16
jp
add
imul
cmp
dec
clc
cmpsl
lods
inc
mov
test
or
inc
fistl
push
or
jecxz
shrb
inc
fsubp
push
mov
ljmp
adc
int3
and
jae
mov
mov
or
lret
gs
mov
push
test
mov
lret
add
setnp
mov
jmp
mov
mov
cmpb
pusha
pushl
call
notb
cli
cmp
pop
or
jo
popf
aaa
stos
cmp
xlat
rorb
mov
inc
xor
inc
mov
aam
xchg
or
sbb
outsb
arpl
insb
jl
inc
flds
scas
sub
mov
mov
mov
in
xchg
out
xchg
xchg
addb
clc
mov
jo
sbb
fwait
adc
mov
insl
fistps
stos
pop
test
addr16
fs
pop
or
mov
je
add
cltd
push
fildll
cmp
adc
or
mov
stos
hlt
lret
jbe
adc
arpl
lahf
dec
lods
lret
sahf
adc
xchg
iret
mov
inc
xchg
mov
sub
stos
cmpsb
ja
je
lret
in
shll
or
mov
jecxz
cmc
and
nop
push
inc
mov
push
lcall
mov
pop
push
lret
popa
cpuid
dec
out
add
pusha
loope
out
cmp
shlb
add
in
aas
shlb
sub
mov
loope
not
and
sub
bsr
mov
clc
sub
clc
push
pushl
popl
pusha
cmp
pusha
push
jmp
ds
icebp
inc
fsubrl
in
pop
enter
enter
jle
xchg
push
fists
adc
dec
iret
adc
repz
test
pop
pop
fists
dec
pop
iret
loop
enter
dec
fwait
in
pop
out
sub
imul
sti
je
pop
sub
push
inc
xchg
cmp
jge
insb
mov
shlb
popa
adc
js
and
lret
adcl
test
stos
data16
adc
mov
pop
pushf
adc
cltd
ss
push
cmp
dec
adc
xor
hlt
es
call
test
push
mov
xchg
dec
push
sub
out
sub
jg
sub
das
popf
pop
mov
hlt
arpl
push
inc
sub
inc
call
mov
cmpsb
push
push
into
jmp
sub
inc
mov
enter
push
comiss
mov
loopne
test
leave
or
push
sbb
call
mov
in
and
loope
ficoml
out
lahf
cltd
nop
xchg
ffree
xor
dec
and
xchg
mov
call
lea
pushl
movl
push
jmp
inc
push
sub
mov
push
les
push
js
lds
lret
lock
xor
lcall
inc
jecxz
mov
xor
or
rcr
in
sbb
mov
lret
neg
inc
mov
test
les
hlt
inc
mov
inc
pop
adc
fdivrs
jmp
pusha
clc
bt
test
cmp
pushl
call
dec
inc
in
push
pop
push
push
pop
divb
movsl
push
add
xchg
scas
test
push
mov
sbb
mov
dec
mov
inc
rcll
xor
aaa
int3
into
aad
sbb
jns
pop
rol
sbbl
scas
rol
push
lds
lea
xlat
jae
iret
pop
mov
cli
mov
leave
mov
or
mov
push
push
push
add
popf
lahf
xor
dec
ret
mov
scas
mov
mov
mov
insl
sbb
sbb
scas
mov
xchg
aam
fldlg2
mov
outsb
in
andb
xor
rolb
roll
fcompl
xchg
ret
xlat
out
push
jmp
dec
sbb
push
sbb
xchg
dec
in
cmp
push
ss
push
loop
mov
adc
push
sahf
aaa
xchg
mov
outsb
rclb
popf
cmp
outsb
cli
shrl
pop
cld
enter
sahf
in
inc
cwtl
jns
rclb
loop
fbld
push
loopne
inc
das
lret
fwait
mov
xchg
jb
aad
pop
adc
xlat
push
xor
data16
inc
xor
leave
loope
sarl
and
jb
cmp
clc
sarl
insb
mov
stc
pop
popf
mov
jmp
fs
sub
mov
fs
jno
and
sub
xchg
movsb
adc
xchg
ret
into
fidivs
shrl
js
jl
xchg
pop
clc
lcall
in
pop
push
lea
jle
jb
bt
cmp
push
push
jmp
call
int3
dec
jecxz
movsl
sbb
inc
test
fwait
enter
push
andl
adc
bound
pop
mov
je
out
aam
sahf
hlt
sbb
add
add
mov
lds
sbb
xor
insb
dec
mov
and
not
pushfw
popw
not
setle
rol
mov
call
mov
mov
xchg
mov
xor
pop
sbb
insb
push
les
adc
inc
mov
pop
xchg
fiaddl
mov
cmp
pop
mov
outsb
pop
inc
les
sub
mov
inc
lds
popa
cld
lds
and
aaa
mov
add
or
ds
cmp
sub
test
inc
int
loop
mov
pop
xchg
imul
cs
movsb
addr16
popa
sbb
iret
mov
cld
cwtl
add
ds
cs
push
mov
cwtl
mov
lcall
mov
arpl
shrb
jmp
sbbl
sbb
loope
add
xchg
pop
dec
aam
or
adc
cli
popf
mov
ret
xchg
dec
xlat
jo
mov
jnp
loope
add
test
clc
loope
push
iret
add
mov
in
pop
adc
mov
loopne
jb
xor
or
rcrb
pop
cs
xchg
rcr
adc
arpl
pop
jl
cmp
dec
sti
cltd
in
out
pop
lods
out
ljmp
cmc
je
xchg
or
movsl
decb
inc
outsb
mov
stos
push
shlb
sub
push
loope
test
cmpl
stos
push
lods
jbe
and
fimuls
data16
in
inc
cld
dec
imul
sub
aaa
mov
jno
mov
das
enter
and
popa
in
repnz
sbb
addr16
imul
stc
xchg
mov
cli
push
adc
aam
xlat
bound
test
add
push
push
pushl
stos
push
pushf
pusha
mov
lea
jmp
lea
je
cmp
bsr
not
or
add
and
cmc
not
test
mov
bt
pusha
add
lea
jnp
mov
movzbw
mov
stc
test
cmp
push
lea
jbe
cmp
jmp
call
clc
push
cmp
call
stc
test
pushf
pushf
pushf
lea
je
test
pushf
add
cmc
pusha
mov
cmp
jmp
lcall
pop
jb
sub
cmp
mov
dec
xor
or
enter
inc
fsub
inc
js
lds
ret
mov
je
loopne
xchg
adc
inc
sarl
cmpsb
stos
sbbl
inc
mov
sub
aas
jmp
fwait
mov
in
ja
scas
jl
push
cs
pop
lods
mov
hlt
push
daa
push
sahf
mov
xchg
pusha
lock
lret
pop
pusha
inc
imul
lock
pop
cmp
and
sti
add
movsl
decb
xchg
stos
and
not
mov
bt
cmpb
mov
lea
jne
cmp
and
xor
sub
rol
shr
mov
inc
and
test
add
shl
not
shl
mov
clc
test
push
lea
je
cmp
clc
cmp
sub
pusha
cmp
pushf
lea
ja
jmp
fwait
popa
sub
movsb
cli
fildll
gs
stc
sahf
into
jmp
jne
fdivs
lahf
ja
int
mov
sarl
sub
cmp
adc
fs
popf
dec
cmpsl
pop
or
std
aam
adcl
bound
mov
rclb
cmpsb
bound
shl
scas
ja
jo
sbb
pushf
add
dec
loopne
or
sbb
cmp
inc
punpcklwd
xor
mov
and
enter
movsl
sub
cs
inc
cmc
xorb
push
ror
jb
sbb
adc
and
pop
stos
fisttpl
imull
push
adc
stos
sbb
lret
and
jg
dec
mov
push
push
lods
test
mov
jle
mov
fs
mov
movsl
pop
ss
rol
imul
inc
xchg
dec
lret
push
js
dec
stos
cmp
insl
mov
or
push
mov
fisubrl
test
adc
push
mov
pop
loop
cmpsb
cmpb
shlb
lret
movsl
into
fcomps
xor
xor
and
sarl
shrl
jp
push
outsl
inc
nop
lret
mov
sub
int3
mov
sbb
fimull
cld
adc
repz
sar
loope
and
or
add
and
loop
jbe
jbe
enter
pop
aas
clc
jo
rcrb
sbb
jne
sub
xor
inc
out
and
insb
xor
xor
out
mov
xchg
out
fidivrl
cmc
xor
jne
ss
push
fmulp
rcrb
mov
or
jae
add
not
setb
lods
pusha
test
jmp
and
mov
hlt
or
dec
add
popl
loopne
shl
push
cmp
or
popa
sub
dec
cmpl
or
mov
dec
pop
lods
es
mov
xchg
mov
mov
xlat
mov
mov
addr16
sahf
pushf
jmp
jmp
add
pop
xor
jle
les
sahf
jnp
xor
rcrl
push
mov
and
lea
je
pushf
pushf
pushf
add
mov
cmp
mov
lea
jb
test
jmp
pusha
jmp
push
xchg
add
insl
cmp
jae
mov
in
pop
jno
adc
sarl
ds
loop
push
call
mov
jmp
or
fstl
and
aas
loop
pop
mov
pusha
adc
mov
pusha
sahf
sub
jns
push
movsb
into
push
push
sbb
pop
mov
jns
mov
mov
cltd
dec
ret
add
lret
out
or
jl
add
test
clc
mov
push
push
lock
std
std
addl
sbb
dec
sub
rorb
arpl
adc
pop
dec
ss
mov
jnp
in
cmp
push
and
aam
push
enter
and
aaa
test
or
add
lret
xchg
push
stos
movsb
mov
shl
add
mov
jmp
push
filds
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
sti
stos
cmp
jge
outsl
mov
and
fistl
mov
sbb
jmp
xor
pop
sahf
hlt
out
data16
sub
aas
xor
in
imulb
xchg
push
pop
jmp
in
lret
je
sub
cltd
cmp
rcrb
rclb
dec
push
cmp
out
popa
jle
push
sbb
lock
mov
enter
shl
mov
insb
shll
mov
in
mov
lock
jnp
jno
in
hlt
pop
mov
dec
fdivl
push
adc
xchg
jno
jmp
nop
ds
sbb
mov
jbe
adc
pop
mov
popf
ss
lods
or
outsb
out
into
inc
ljmp
mov
cli
lods
clc
inc
inc
out
dec
mov
pop
pop
xor
jnp
jb
adc
and
std
sbb
rorb
das
pop
xrelease
lea
jmp
sub
mov
xor
in
mov
mov
popf
imul
out
popf
neg
or
xchg
cli
or
cli
xor
test
mov
pop
inc
xchg
add
movsl
fidivs
or
orb
daa
and
data16
inc
mov
adc
xor
sub
lea
bound
mov
outsl
mov
bnd
pop
xchg
setbe
mov
lret
out
sbb
cli
stos
scas
movsl
dec
inc
fldt
int3
into
pop
stos
sbb
dec
sarb
js
and
push
faddl
insl
mov
dec
inc
test
jo
aaa
cmovno
xchg
fs
jle
loop
or
dec
mov
mov
pop
loop
push
stc
arpl
push
lahf
loop
out
loop
outsl
shrl
rolb
ja
pop
add
lods
push
sarb
inc
sub
mov
cmp
inc
stc
bound
cmpl
pop
xor
jne
mov
mov
clc
push
and
ds
in
mov
setb
adc
push
or
lret
data16
data16
in
adc
fidivrs
scas
aad
mov
mov
adc
sbb
push
aas
jg
imul
pcmpeqw
fs
int3
dec
in
sub
aam
aaa
icebp
xchg
cmp
bound
pop
xor
and
push
pop
adc
out
mov
inc
out
jns
pushf
clc
insl
jne
and
xchg
clc
mov
cmp
mov
adc
out
mov
fs
pop
dec
jl
add
xchg
xor
add
call
and
pop
xchg
sub
std
pop
xchg
push
dec
fs
and
int
mov
fiadds
or
jmp
outsl
inc
out
outsl
fcmovu
jne
dec
mov
clc
mov
sbb
sbb
icebp
push
out
lea
mov
inc
out
icebp
rcll
in
dec
adc
ljmp
adc
adc
sub
fmuls
mov
dec
lea
shr
pushf
bts
mov
push
add
test
cmp
stc
mov
call
and
ss
out
mov
dec
roll
pop
cmp
sub
ficoml
cld
in
sbb
dec
cwtl
out
rorl
push
sub
sbb
shlb
pop
fwait
lock
outsb
jg
lds
inc
add
in
shrb
adc
fisttpl
push
shrl
xor
xchg
js
insb
and
sti
jp
or
xchg
mov
xorl
xchg
imul
sarl
adc
push
mov
xchg
pushf
mov
pushl
pushf
pushl
ret
pushl
pushf
movb
lea
je
call
mov
push
or
mov
xchg
int
lods
dec
cmp
out
mov
sub
cmp
hlt
xor
cmpsb
cld
sbb
sub
sub
jnp
addr16
pop
sbb
lcall
insl
int
xchg
sbb
inc
push
push
xchg
and
xchg
fsts
insb
inc
stc
lret
loopne
add
xchg
ljmp
popa
fidivrs
pop
ds
imul
lret
add
int3
adc
pop
mov
test
add
add
addb
add
fidivl
add
add
add
add
add
jne
add
add
add
fimull
add
add
pop
sbb
add
add
outsl
insl
inc
add
add
add
stc
dec
add
add
add
inc
inc
add
add
add
add
addb
add
sti
dec
add
add
add
add
addb
add
enter
add
add
xlat
sbb
add
add
dec
inc
add
cmc
dec
add
mov
and
dec
add
add
add
add
xor
push
lea
call
pushf
pusha
pushl
lea
jae
call
dec
cmp
mov
out
or
sbb
arpl
scas
mov
leave
stc
mov
or
movsl
add
mov
mov
or
sub
dec
mov
or
xchg
frstor
cmp
scas
pop
lock
ret
cli
dec
stc
lahf
adc
bound
shll
pop
jmp
cmpl
xor
mov
mov
pop
sarl
and
push
ret
movsl
outsb
inc
lds
cmp
shlb
scas
and
push
js
mov
insb
daa
mov
and
mov
xor
sub
les
pop
addr16
xchg
pop
fsubrl
scas
adc
std
adc
cli
cmp
jbe
movsb
jl
sub
cwtl
sbb
sbbl
enter
scas
sbb
divb
outsb
fdivrl
lahf
lret
pop
mov
fmuls
sar
in
mov
mov
sub
sbb
fsts
js
in
fsubs
arpl
inc
and
outsl
dec
into
xchg
in
bound
inc
jmp
adc
sub
sarb
fs
sbb
adcl
push
sbb
test
pop
jmp
cs
mov
inc
jmp
add
clc
dec
gs
sahf
cmp
inc
xchg
add
ss
push
ret
loopne
in
daa
nop
cmp
insl
inc
xchg
add
test
push
dec
push
cwtl
mov
xchg
dec
fdivrl
aad
test
xchg
jmp
das
scas
adc
outsb
in
push
push
rcl
movsl
fsts
dec
and
add
rorb
repz
scas
out
cmpsl
mov
clc
call
shl
testl
and
mov
pop
mov
add
sub
xchg
mov
xchg
mov
ss
mov
pop
sbb
add
ss
fwait
dec
shrl
cmp
mov
ret
and
or
sbbl
subl
out
push
test
stc
dec
push
in
fyl2x
ljmp
mov
lcall
add
cmp
aas
pop
xchg
adc
movsb
cmp
push
es
lea
add
lret
push
add
pushl
clc
mov
bt
bt
pushl
test
test
jmp
pushf
stc
add
pushf
mov
mov
movw
clc
test
movb
lea
je
test
pushf
add
bt
cmp
call
je
movsb
sbb
lret
insb
sbb
mov
mov
sbb
dec
dec
sar
mov
xchg
push
jmp
sub
fistpl
push
jmp
cmp
or
cld
xor
jmp
and
pop
mov
jmp
scas
push
in
jns
jecxz
dec
jno
pop
fsubs
and
enter
cmpb
cmpsl
cmp
outsb
dec
test
mov
test
push
gs
mov
gs
je
mov
add
jecxz
add
mov
and
push
pusha
cmp
pushf
lea
jae
ror
btc
or
movzbw
mov
sub
shr
shl
clc
mov
pusha
jmp
add
movsl
ja
mov
nop
xor
cmp
inc
add
loopne
push
pop
cmp
xlat
adc
je
dec
addr16
push
mov
or
fs
and
es
or
xlat
add
sub
add
mov
mov
or
jns
lods
mov
dec
or
xchg
mov
sub
fwait
jle
dec
adc
je
leave
fldcw
inc
or
xchg
mov
jnp
push
sbb
xorl
dec
je
push
les
jno
dec
sti
push
insl
fildll
xor
xchg
sub
xchg
and
xlat
sbb
cmp
gs
mov
inc
xor
and
push
jl
test
loopne
push
out
or
and
and
push
mov
dec
lea
ja
setns
neg
cmc
sub
sub
bswap
sar
sar
dec
add
rcr
mov
test
and
cmp
mov
clc
stc
pushf
repnz
call
mov
test
pop
pop
subb
mov
add
mov
dec
dec
cltd
or
into
pop
popf
pop
ss
or
or
out
sbb
or
mov
sub
push
loop
xor
inc
mov
lea
aam
adc
nop
add
fisubs
aaa
test
adc
mov
iret
popf
jnp
mov
xchg
lods
or
mov
lea
lea
decb
sbb
stos
xor
push
pop
xor
sub
pop
pushf
fmuls
out
mov
pop
jne
or
fildll
cld
loopne
iret
in
sub
cld
or
fldcw
das
and
sub
xchg
leave
dec
jmp
mov
stos
mov
cltd
call
or
repnz
pop
insb
sbb
jne
and
call
mov
xor
lret
jp
or
lret
cld
cmpsl
gs
sub
in
mov
cmpsl
add
mov
and
movsb
sti
stos
sbb
push
xor
mov
rorl
adc
and
shlb
cmpb
mov
mov
and
int3
jo
ret
outsl
inc
aaa
xchg
xchg
dec
or
mov
sbb
sbbb
xchg
pop
dec
loopne
popf
mov
sbb
sub
mov
push
and
pushf
pusha
stos
mov
call
pushf
movw
mov
push
lea
jmp
push
sahf
mov
popf
jns
push
pop
scas
fstps
ja
pusha
cld
or
fisttpl
mov
out
fisubs
mov
movsb
arpl
rclb
cld
out
inc
or
into
movlps
push
jp
aad
add
and
sub
repz
or
sub
mov
repnz
mov
incb
and
cli
add
dec
jbe
leave
into
cmp
shrl
mov
jbe
pop
pop
xor
ret
mov
ret
cmpsl
mov
add
div
mov
sbb
xchg
xor
ret
int3
cmp
inc
inc
lods
pop
cmpsl
mov
test
jnp
sahf
jp
pop
cmpsl
mov
mov
jae
sub
mov
in
xor
xlat
xchg
loope
dec
ss
add
mov
lahf
clc
ds
push
data16
mov
mov
inc
push
sub
xchg
loopne
test
cmc
mov
add
lea
jne
btc
ror
mov
cmp
cmp
pusha
cmp
add
cmp
movzwl
xor
mov
test
test
push
call
lahf
jae
repnz
cmp
or
sti
sbb
addr16
lods
cmpsl
cmp
xor
sti
cmp
jg
lcall
adc
in
cltd
mov
lods
lret
inc
nop
test
enter
das
seto
jg
repz
repnz
and
dec
xchg
lods
cld
lahf
pusha
dec
mov
lcall
aad
inc
mov
or
add
jbe
dec
jmp
int
and
pusha
push
lea
jbe
btr
adc
adc
sub
sbb
adc
movzbl
adc
mov
shld
xor
jmp
sub
sub
out
fwait
sbb
gs
mov
shr
fld
dec
jns
cld
es
int3
xchg
or
push
repz
clc
or
fld
test
jmp
insl
xlat
pop
pushf
rorb
mov
sbb
fdivs
je
jg
dec
scas
or
dec
lahf
cmpsb
clc
push
imul
lret
in
frstor
push
stos
in
fsubrs
xchg
rorl
push
cld
jg
repz
mov
xchg
mov
out
mov
pop
dec
xor
cmp
stc
out
cli
mov
popf
pop
jns
clc
mov
cmp
insl
cwtl
mov
adc
push
dec
xchg
xchg
mov
xchg
rcrb
filds
mov
les
lea
pop
mull
sub
fldl
cmp
scas
dec
fwait
lea
push
andl
and
or
adc
stos
nop
cld
xor
shrb
inc
and
fldenv
inc
xchg
push
jno
xchg
lods
mov
cmc
inc
daa
cmc
mov
sbb
xchg
loop
jecxz
insl
lret
jl
repz
mov
aad
or
lcall
loopne
imul
inc
sbb
and
pop
ror
stc
test
mov
cli
add
mov
clc
mov
es
adc
int3
scas
mov
addl
sti
daa
in
in
jbe
and
push
lods
sub
dec
xor
push
mov
pop
xchg
push
cmpsb
in
inc
cmp
iret
push
xchg
icebp
push
daa
and
inc
cmp
in
mov
cmp
add
mov
insb
insl
and
rorb
and
fadds
stos
loopne
pop
xchg
hlt
xchg
jg
das
push
push
sub
mov
mov
mov
clc
jecxz
fdivp
out
mov
popa
pop
mov
fsubs
mov
jecxz
fiadds
mov
or
ljmp
cld
xor
cmp
movsb
shlb
arpl
dec
add
sub
arpl
xchg
or
fisubs
cltd
sub
leave
pop
mov
push
bound
push
movsl
mov
jmp
mov
adc
ja
adcl
lcall
cmp
pop
sahf
pop
pop
lahf
push
mov
fsubr
mov
pushl
jne
cmp
sbb
out
or
jo
cld
std
shl
loop
jo
xchg
dec
mov
mulb
ljmp
out
ljmp
div
ljmp
xor
ffree
push
pop
inc
xchg
dec
add
daa
push
addr16
xor
inc
sub
call
pop
push
jmp
sub
rcrb
xchg
and
aas
sbb
mov
shlb
dec
subl
mov
inc
push
mov
xor
mov
movl
push
push
push
push
lea
jmp
pushf
inc
dec
cwtl
in
jae,pn
dec
mov
fcoms
mov
cli
je
aaa
jbe
push
cli
out
mov
jg
dec
loopne
iret
test
push
repz
cld
int3
xchg
jp
and
hlt
pop
cmpsl
inc
or
mov
add
cmc
sub
add
int
ret
sub
aas
sub
les
adc
mov
cmp
jg
shll
stos
insl
cld
lods
dec
jmp
pop
fmull
lock
lret
xchg
int3
mov
cmp
ss
inc
sbb
and
cwtl
decb
xorl
out
xchg
add
xchg
mov
adc
or
dec
mov
dec
add
outsb
cmp
sub
pushf
fcomp
xlat
lcall
ret
xchg
lock
das
hlt
ret
out
xchg
je,pn
decl
fwait
aaa
lock
inc
lret
ja
pop
arpl
push
cmp
cli
xchg
loop
mov
or
in
repnz
pushf
int
mov
lret
dec
push
js
dec
pop
and
sub
incb
repz
negl
repz
and
mov
or
cmpsl
aad
xchg
pusha
icebp
pop
ja
loope
jbe
jle
pusha
mov
sub
jge
sub
cmp
jo
call
in
cmpsl
stos
jge
addl
decl
pop
das
icebp
test
sbb
loope
sub
inc
jnp,pt
xchg
jns
out
pop
adc
cmpsb
fistps
mov
test
xchg
ret
xor
push
push
pop
aaa
loop
shl
inc
inc
cmpsl
jnp
lea
add
rsm
mov
std
insb
cwtl
sbb
cmpb
pop
mov
mov
pusha
push
movl
push
call
lea
jae
jmp
bound
dec
pop
inc
jecxz
shll
pushf
dec
sub
xchg
sub
and
xor
push
ss
mov
sbb
xor
dec
lret
cmp
shlb
add
sti
in
lcall
jae
and
clc
cmp
pop
cs
shr
mov
test
sahf
iret
add
push
mov
popf
jle
repnz
sub
adc
xchg
add
ret
stos
inc
mov
jns
out
imul
mov
adc
mov
xor
lods
in
hlt
xchg
adc
jmp
xchg
mov
fimull
or
push
mov
dec
rcrl
imul
cmc
call
gs
mov
jae
mov
dec
loop
jmp
jge
pop
pop
mov
push
push
push
popa
mov
ljmp
jle
dec
notl
in
push
lcall
jno
fsubrs
int
orl
mov
pusha
fisttpl
daa
adc
test
lds
movl
lea
jmp
pusha
push
lea
je
pusha
jmp
fistpll
fs
xchg
sbb
icebp
and
lock
sbb
imul
sahf
sbb
sbb
jbe
mov
or
scas
rcll
clc
cmp
mov
dec
lret
sbb
fs
and
aam
or
mov
xchg
repnz
incl
xchg
mov
or
mov
and
cs
xchg
mov
sub
in
or
call
loop
add
ss
or
aaa
inc
xchg
inc
xchg
sub
cmc
lret
mov
imulb
scas
cmp
frstpm(287
jle
into
adc
xor
nop
xor
loope
add
xchg
lahf
hlt
xchg
adc
push
pop
sub
shlb
out
cmp
adc
dec
sahf
scas
mov
push
mov
xor
xchg
das
ror
mov
sbb
aas
insl
mov
pop
or
fscale
xor
jle
jo
mov
cli
or
add
idivb
xchg
push
xchg
jecxz
xor
or
stos
xor
lea
inc
imul
jbe
es
cmp
inc
mov
stos
add
out
fadd
int3
test
out
jge
mov
test
xchg
fisttpl
sbb
int3
jmp
test
add
bt
jmp
dec
lds
lds
loope
test
or
mov
fnsave
mov
outsl
enter
outsb
bound
inc
stc
xor
hlt
insb
mov
inc
jo
jns
rclb
jns
pop
mov
sbb
jmp
test
pop
repnz
dec
cmp
sub
imul
jne
pop
pop
cld
sahf
scas
or
cwtl
xchg
cmp
xchg
daa
sahf
aam
sbb
mov
xchg
add
mov
aas
push
daa
or
xchg
lahf
fidivrl
cs
ja
jno
sbb
in
mov
mov
repnz
addr16
mov
mov
jmp
add
pusha
xchg
das
ret
dec
mov
add
jge
push
cmp
lahf
pop
std
punpcklwd
sarb
dec
and
jmp
jnp
out
add
icebp
inc
stos
pop
dec
push
clc
mov
xor
push
jb
or
push
mov
mov
aaa
adc
xchg
in
xor
lods
sub
sbb
in
addr16
imul
arpl
cmc
dec
mov
lret
leave
pop
mov
push
mov
imull
inc
mov
dec
addr16
pop
mov
jecxz
and
xor
sahf
stos
cmpsb
data16
loope
push
call
data16
dec
sub
adc
inc
call
fisubrs
dec
sub
mov
dec
test
add
push
xchg
lds
cmp
push
add
jmp
mov
movsl
pop
stc
rcrl
popa
movsb
cwtl
push
and
movsb
stos
adc
out
icebp
sti
adc
sti
mov
lods
jmp
stos
jns
add
stos
lods
fistl
jl
ret
and
mov
or
push
push
fbstp
clc
in
ljmp
movsb
dec
adc
jno
scas
test
cmpsb
testb
cmp
adc
das
sub
xor
iret
cmpsb
ljmp
test
mov
add
ret
pop
xor
push
lcall
call
lcall
sbb
enter
xor
jnp
lret
push
call
xchg
pop
dec
divb
push
push
dec
dec
rorb
lcall
bound
dec
addb
lcall
lret
adc
jnp
jmp
dec
sub
arpl
or
pop
lret
push
imul
and
les
loope
inc
xchg
popf
and
jg
out
std
mov
rorb
fcomps
cmpsl
push
das
inc
sbb
mov
sti
daa
ljmp
jns
sbb
mov
or
movsb
and
add
stos
rcrb
cmp
fsts
mov
int3
ret
sbb
mov
test
dec
ja
test
and
loopne
test
dec
push
mov
dec
jg
loopne
sub
pop
fldt
clc
punpcklbw
jae
xlat
sub
jge
insl
inc
test
dec
mov
dec
mov
rorl
frstor
clc
sub
xchg
adc
lret
mov
push
out
inc
push
sbb
mov
prefetch
or
adc
lahf
into
xlat
sub
addb
addr16
push
sti
add
xor
inc
lock
sbb
rcll
stos
in
stc
in
cmp
nop
cmc
lahf
dec
jns
aas
das
pop
aaa
sbb
adcl
add
test
mov
jp
rcll
aad
push
cld
xchg
add
xor
mov
mov
roll
pop
inc
and
mov
popf
xor
mov
clc
adcb
xchg
add
pop
cld
movsb
jp
iret
add
lods
ret
or
push
sbb
sbbl
inc
orl
clc
aaa
sbb
in
pushf
xchg
repnz
data16
icebp
dec
shlb
inc
inc
cmp
ret
sti
xchg
iret
mov
xchg
cwtl
xchg
cmp
inc
sbb
cmp
shl
mov
test
mov
repz
lods
imul
adc
shl
lds
push
cmp
lahf
call
xor
into
lcall
push
insl
sarb
cld
mov
fsubrs
cli
pop
jmp
dec
dec
sub
sbb
mov
mov
push
mov
and
pushf
jmp
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
push
lea
ja
pusha
pusha
call
test
stc
add
pushl
stc
call
cmc
cmp
cmc
cmp
jmp
mov
mov
nopl
fists
call
les
fwait
or
aad
mov
fwait
gs
cmpsl
xchg
xchg
mov
sbb
pop
or
xchg
mov
stc
cli
xchg
inc
add
arpl
add
fdivs
pop
scas
or
or
loope
int3
xlat
cli
out
shlb
push
jae
fiaddl
in
mov
inc
xchg
mov
mov
push
mov
test
pushf
pusha
lea
je
shrd
movsbw
bt
shld
mov
bt
rcr
adc
add
and
pushf
movsbw
bswap
mov
stc
clc
test
call
stc
in
rcrb
lods
daa
push
cmpsl
pushf
or
sub
insb
pop
pop
clc
xor
lds
enter
icebp
sbb
sti
push
add
pop
data16
je
jne
outsb
jmp
sub
outsb
insb
cmpsl
icebp
xchg
add
cs
adc
sbb
les
mov
addr16
sub
mov
out
call
addl
pop
movb
mov
fidivl
mov
or
mov
or
push
punpckldq
and
imul
in
sub
cmpb
and
dec
dec
ret
jge
push
sub
popf
pop
or
and
fidivl
mov
adc
lea
clc
jne
sbb
and
adc
pop
cmp
push
decl
adc
add
push
in
push
nop
push
mov
sub
inc
push
pop
mov
mov
daa
ficoms
loopne
orl
and
add
jmp
xchg
lcall
mov
insl
lret
inc
sbb
cmc
and
mov
ljmp
jbe
mov
mov
lds
addr16
push
cmp
daa
inc
or
inc
cmp
dec
or
adc
cmp
movsb
outsl
push
dec
decl
in
enter
add
cmp
out
dec
test
adc
js
cmp
mov
movsb
add
dec
jmp
cs
mov
add
mov
je
sbb
sbb
push
inc
mov
xchg
adc
dec
push
insb
lods
es
lret
mov
out
jle
inc
movsb
sub
and
add
lret
and
mov
outsb
stos
movsl
aaa
push
test
xor
push
sbb
iret
mov
mov
cwtl
pop
gs
ljmp
out
push
test
mov
sbb
out
mov
jecxz
pop
mov
mov
adc
xchg
cs
mov
lds
jle
jns
sub
pushf
arpl
ds
xor
out
test
ja
jno
push
enter
loop
in
push
xchg
ja
jb
int3
cmc
imul
nop
stos
ret
cmc
aam
loop
jmp
xchg
cmc
aad
sub
repz
cmp
lea
in
and
cmpsb
mov
out
aaa
xchg
outsb
es
add
pandn
repnz
cmp
add
or
push
jge
xchg
cmpsl
les
mov
cld
lea
cmp
imul
or
shll
push
xor
xor
cmpb
jae
jmp
add
int
push
lret
sub
adc
sub
dec
mov
subb
lahf
ds
gs
mov
dec
sbb
adc
test
lods
cli
add
inc
out
cmp
and
pusha
push
movb
lea
jne
mov
pusha
movb
mov
mov
bswap
pop
lea
push
movl
pusha
mov
push
mov
pushf
pushl
ret
cmpsl
hlt
sbb
ja
jl
sahf
or
test
and
imul
leave
leave
pop
sbb
cmc
push
pushf
xchg
dec
xchg
ja
leave
jle
hlt
popf
scas
scas
rolb
xor
xor
sub
scas
mov
dec
cmc
sub
lahf
mov
cmp
inc
sub
jmp
fsubrl
cmp
sub
jo
mov
popf
data16
mov
mov
mov
mov
dec
jecxz
jbe
sub
cmp
push
sbb
jle
add
ss
test
lea
je
cmp
stc
cmp
jmp
test
sub
jmp
cmp
jmp
cmp
lcall
xchg
mov
adc
mov
ds
or
in
and
adcb
mov
pop
ds
jns
cltd
pushf
fildl
insl
rorl
pop
arpl
dec
inc
push
mov
cmp
lret
lea
clc
push
sar
neg
shl
mov
add
or
bts
push
bsr
add
push
btc
shl
adc
pushf
mov
shld
test
je
test
push
cmc
clc
dec
push
xadd
mov
rol
movsbw
shld
movzbw
mov
rol
inc
mov
call
in
cmp
aam
mov
call
ret
mov
push
fdivrl
js
ds
or
inc
outsb
repz
lret
cmpsb
addr16
std
cwtl
fisubs
addr16
lods
xchg
icebp
jmp
jne
pusha
movw
stos
push
pushf
pushf
lea
jmp
bt
clc
or
jmp
and
fucomp
jnp
gs
sub
pop
int3
mov
fs
or
push
or
add
push
cmc
mov
mov
lret
cmp
dec
fcoms
inc
inc
push
imul
icebp
clc
mov
cmpb
movsb
push
mov
pop
xor
jne
adc
sbb
movaps
dec
dec
pusha
push
cs
rcrl
jmp
fisubs
fidivl
fisttpll
sub
aam
loopne
aas
ud2
mov
je
movsl
push
lret
clc
repnz
cmp
fadds
mov
movsl
pop
add
cmp
jp
xor
mov
jne
adc
xchg
std
loope
insb
mov
sub
shlb
fldenvs
add
xchg
xchg
and
clc
aas
xchg
es
or
sub
jle
dec
in
adc
dec
aam
mov
lods
pusha
add
jmp
not
pushf
mov
call
inc
test
cmc
xor
bt
bt
cmp
lea
lea
pop
pushf
pop
mov
mov
jmp
push
lea
call
push
jmp
lods
jmp
lea
je
pushf
add
movw
bt
cmp
movw
pusha
pushl
lea
jb
clc
test
cmp
cmp
jmp
push
test
adc
sbb
loopne
and
sbb
cmpsl
push
push
and
push
mov
mov
xchg
imul
xor
mov
ss
outsl
cmp
sahf
pop
ss
fmull
cmc
lcall
sub
push
bound
ja
cmpsl
xchg
pop
dec
hlt
xchg
fisttpl
lods
jg
gs
pusha
repz
mov
fmull
inc
adc
push
pop
push
je
mov
cmpsb
mov
imul
lahf
fxam
and
inc
in
aaa
pop
stos
push
movsb
mov
subb
pop
aas
data16
jo
movsb
dec
pusha
cmp
lcall
test
pop
lods
pop
aaa
lret
cmpsb
push
inc
fmull
jo
ja
mov
arpl
movsb
inc
add
jne
fwait
jne
lret
inc
ljmp
nop
jno
add
xchg
mov
mov
popa
or
mov
cmpl
lods
push
cmp
lods
pop
push
cltd
lods
sub
and
mov
jns
das
les
daa
arpl
fstpl
lret
sahf
adc
std
xchg
inc
std
sbb
pop
sub
jl
dec
adc
mov
mov
ja
imul
aaa
rcll
lock
ss
sub
lcall
or
sub
lea
xlat
xchg
mov
pushf
nop
popa
movl
ja
jl
out
inc
and
mov
lret
enter
sbbl
stos
add
mov
out
test
push
scas
mov
jbe
scas
sti
das
call
scas
sbb
lock
push
mov
pop
pusha
stos
jmp
aad
sub
pop
or
std
mov
out
test
push
cli
decb
pushl
ret
sbb
pop
and
movl
je
add
out
pop
xchg
or
test
aaa
push
inc
shrl
and
mov
out
mov
or
shll
stc
ret
mov
inc
arpl
loopne
aaa
jno
outsl
fisubrs
jne
adc
or
jae
ss
jbe
adc
sarb
cmpsl
lret
mov
xor
inc
cmpl
adc
lods
push
lcall
lock
movsl
jl
sbb
enter
popa
pop
adc
inc
cld
xchg
fnstenv
jle
out
adc
pop
jmp
adc
test
sub
jg
xchg
inc
shrb
fnstsw
jge
sub
testb
lods
ljmp
fnsave
jae
and
jmp
inc
mov
inc
loopne
sub
lock
and
mov
adc
icebp
fs
fisubrs
jnp
cld
cltd
cmp
sbb
push
jecxz
int
addl
sti
popf
pop
xor
daa
test
jb
xchg
mov
clc
add
insl
sub
test
or
dec
icebp
add
push
out
pop
shl
dec
out
add
cmp
leave
inc
xchg
pusha
push
sahf
add
cmp
push
int
cmpsl
cmpsl
lret
imul
cli
test
test
out
dec
push
pushf
imul
inc
aad
stc
insb
inc
jmp
pop
mov
sbb
cmpsb
shlb
lret
decl
rcrl
sub
mov
pusha
shlb
jecxz
mov
pop
fchs
mov
imul
and
inc
int3
out
and
mov
adc
hlt
add
fisubrl
lret
add
push
pop
mov
out
sbb
sbb
fmul
push
mov
icebp
scas
mov
pop
shlb
xor
loop
pop
shll
dec
lock
ret
std
pop
dec
popf
mov
jg
push
cli
push
xor
mov
jp
ret
dec
cmp
insl
lea
je
cmp
sub
cmp
stc
clc
cmc
cmp
push
lea
ja
pusha
pusha
clc
imul
pushf
pushf
jmp
or
mov
rorl
sub
aaa
loope
insb
stos
lret
mov
dec
pop
fdivl
push
mov
lret
xchg
outsb
inc
jecxz
mov
dec
mov
dec
outsl
mov
cmpsb
ljmp
adc
xchg
mov
xor
in
movsl
mov
push
lahf
or
push
inc
fdivs
xor
adc
sbb
fiadds
mov
jg
ficompl
lods
mov
jmp
push
cltd
mov
pop
mov
mov
mov
sbb
fisttpl
inc
stos
enter
aam
cmpsb
inc
jle
shrl
pusha
xchg
dec
enter
sti
inc
add
jno
movsl
inc
xchg
add
and
cld
rolb
xlat
jae
sub
pushf
jbe
jno
xchg
repz
cltd
lock
xlat
push
out
sbb
jae
js
add
cmp
aad
xor
mov
or
mov
dec
push
cmc
push
dec
insb
lds
dec
xor
nop
es
sti
cmc
jl
test
mov
int
mov
xor
mov
mov
jmp
add
into
sarl
jbe
dec
mov
inc
adc
f2xm1
pop
sti
sub
push
push
mov
push
mov
jl
adc
addl
movsb
xor
or
gs
adc
clc
add
mov
cmp
test
call
je
jp
xchg
orl
dec
xor
shrl
mov
dec
adc
popa
scas
dec
pusha
xor
mov
sub
jmp
inc
sub
js
push
push
in
inc
mov
mov
add
xchg
mov
es
mov
adc
pop
mov
dec
and
xchg
push
and
lret
popf
push
in
movsl
jae
dec
mov
pusha
xchg
fildll
outsl
xchg
test
and
mov
in
add
nop
sub
dec
mov
dec
mov
xchg
pop
push
cld
sub
stos
cli
enter
dec
jge
fwait
mov
imull
stos
repz
cwtl
movsl
mov
out
sti
cmp
stos
stos
pusha
inc
lea
insb
add
popa
outsb
mov
out
jl
push
loop
es
inc
adc
lods
cmp
fwait
imul
inc
sbb
xchg
xor
jno
fsts
in
fnsave
insl
test
jl
pavgb
dec
cmp
sub
clc
stc
pusha
stc
ror
pushf
push
call
xor
or
scas
addr16
inc
sub
dec
jecxz
fwait
add
shll
je
adc
dec
push
cs
out
push
inc
sub
dec
push
cs
inc
rclb
cwtl
mov
or
pop
push
pushf
fildll
add
pop
daa
inc
adc
mov
outsl
inc
pop
aam
out
inc
jp
sub
pop
mov
cmc
xor
dec
xchg
mov
and
loope
pushf
cmp
fs
imul
push
jl
adc
or
ret
push
out
testl
adc
push
mov
inc
fldenv
test
lcall
jae
inc
mov
inc
mov
hlt
dec
jmp
jg
jg
cmp
push
repnz
jg
jg
ret
std
pop
gs
fildll
cltd
push
cmp
sbb
xchg
icebp
scas
lods
std
adc
stos
insb
push
cld
cld
sbb
add
push
adcl
inc
jne
mulb
cmp
add
pop
inc
repz
ljmp
fwait
gs
jnp
sub
js
dec
mov
mov
fcmovnu
mov
add
pop
jae
and
shl
dec
les
pop
mov
or
mov
mov
mov
or
and
inc
xchg
push
jns
into
nop
mov
and
fwait
xor
mov
jno
scas
inc
xlat
jae
adc
mov
push
xor
jle
or
xchg
dec
movsb
aas
xorl
dec
xlat
mov
scas
push
jge
inc
in
add
mov
sti
fisttps
jbe
lcall
and
pop
iret
imul
dec
or
bound
mov
stos
adc
fmulp
inc
xchg
pop
leave
test
leave
lock
add
imul
dec
cmp
std
adc
outsl
dec
out
test
movsb
and
mov
push
dec
add
pop
movsb
dec
mov
or
sub
adc
es
fiadds
rcr
hlt
sub
xlat
mov
push
pop
lcall
cmp
and
orl
setnp
inc
mov
inc
not
setle
pusha
inc
jmp
sub
js
aaa
mov
int
js,pn
loopne
xchg
jp
or
lcall
es
rorl
xchg
push
loope
test
jns
sbb
jne
push
mov
out
push
or
movsb
dec
inc
jp
out
cmp
in
dec
dec
cwtl
or
cld
ret
mov
jp
pop
scas
cs
rcll
cmp
add
rcr
xchg
and
jnp
or
or
and
push
mov
lds
lret
pop
jb
lods
mov
imul
and
roll
push
shr
cmp
not
movl
sar
movsbl
mov
test
cmp
test
pusha
cmp
pusha
jmp
pushf
lea
call
jmp
jle
addr16
and
adc
in
inc
add
adc
add
fucomip
pop
imul
lods
movsl
lahf
cli
add
out
sbbl
iret
pop
and
push
test
faddl
sub
sbb
movsb
push
subl
in
cmp
jae
sti
nop
xchg
loope
je
and
cmp
mov
movsl
cmp
push
pushf
repnz
movw
pushf
lea
jne
bswap
lea
call
push
call
div
pop
dec
xchg
mov
sub
ljmp
sub
xor
mov
push
lods
ror
pop
cmpsl
sub
sub
cmp
mov
sub
pop
cs
push
xchg
xor
jae
sbb
cltd
call
jns
out
push
sub
or
stc
mov
out
aad
xchg
mov
pop
int3
and
cmp
mov
mov
in
les
add
cmp
in
les
je
movsl
cld
jg
xor
jg
lods
test
outsl
sub
js
adc
and
push
add
pusha
repz
test
ja
in
adc
inc
daa
push
js
lcall
mov
ljmp
daa
out
je
sub
mov
xchg
add
adc
clc
xchg
ljmp
jg
jmp
jp
push
and
andb
int
sti
push
adc
sub
fwait
fwait
stc
cmpsb
push
sbbb
xor
sub
push
aas
pop
in
icebp
and
pop
inc
adc
cltd
int3
clc
cmp
shl
mov
popa
xor
in
aam
xor
push
sub
cmp
aad
adc
sbb
push
and
stos
and
mov
push
mov
pop
and
xchg
sbb
xor
add
pop
js
cmpb
xchg
cs
sbb
outsl
jo
cld
lea
incl
xchg
or
inc
es
add
push
sub
lahf
subb
fwait
pop
mov
or
jnp
not
bt
rcr
add
jmp
cmp
or
push
xor
xor
loopne
repz
test
aam
pop
jmp
mov
lret
imul
jmp
faddl
or
jne
mov
and
mov
add
xchg
in
out
mov
mov
dec
xlat
out
in
leave
mov
inc
aam
cltd
movsl
jae
inc
adc
in
clc
dec
dec
or
sbb
lret
push
loope
ljmp
psubusb
mov
mov
xor
xor
aaa
enter
xchg
loop
movsb
mov
fwait
or
cmc
dec
test
icebp
mov
pop
xor
cmpsl
and
adc
mov
cmpsw
or
inc
stos
repz
jmp
sub
push
pusha
adc
sub
cs
inc
enter
icebp
test
cmpsb
sub
xchg
push
lret
xor
cltd
jmp
mov
sbb
out
pop
cmp
push
and
int
add
lea
inc
aad
cwtl
stos
push
into
shrl
iret
push
lahf
xorl
mov
sub
fs
jae
test
pushf
stc
sub
movb
lea
jae
push
lea
call
js
pushf
pusha
lea
jae
clc
pusha
call
mov
push
adc
fdivrl
sub
push
hlt
and
lds
sbb
jb
icebp
out
mov
jp
push
mov
cmp
imull
insl
xchg
cmp
mov
jecxz
pop
adc
je
xlat
nop
lret
add
add
bound
imul
and
pop
pop
nop
add
icebp
add
cmpsb
les
outsb
call
jmp
enter
mov
int3
xor
in
js
sub
cmp
cwtl
cmp
leave
adc
xchg
mov
arpl
orl
pop
jbe
mov
neg
into
fmuls
fisttps
and
test
xchg
sbb
push
mov
dec
fs
jne
js
pop
fsubs
adc
cmovo
jl
jmp
xchg
add
incb
xchg
xor
and
lea
call
pusha
jmp
movl
sbb
and
xchg
pop
hlt
movsl
xchg
jbe
fwait
cmpsb
pop
leave
and
aas
xor
mov
xlat
ss
fidivrs
add
and
mov
push
sbb
dec
sub
cld
movsb
xchg
je
lds
add
mov
cld
mov
hlt
push
jmp
push
stos
mov
mov
or
pop
test
push
aas
cmp
mov
mov
dec
bnd
aam
xchg
xor
dec
lret
shrb
lds
xchg
out
js
cmp
push
mov
lahf
xchg
call
adc
pushf
lea
jae
jmp
xchg
mov
data16
xchg
scas
idiv
pop
mov
outsl
add
cli
and
or
pop
inc
cmpb
mov
sbb
int3
pop
jmp
inc
inc
xor
xchg
mov
fisubrs
sbb
shll
popf
in
or
xchg
pop
inc
push
lcall
push
rolb
sbb
and
insl
mov
imul
jo
sbb
or
leave
cmp
fcomps
pop
adc
xchg
fidivs
cmc
sub
enter
xchg
cmc
push
popf
or
mov
std
jecxz
jecxz
or
mov
repnz
pop
cs
mov
push
dec
es
sbb
fs
pop
jae
scas
mov
and
ret
mov
pushf
mov
inc
push
call
jnp
arpl
leave
test
jno
movsb
cmp
jno
subl
or
scas
push
cld
adcl
int3
xchg
inc
add
push
dec
in
mov
add
push
fcoms
movsb
mov
pop
jb
push
sub
xor
outsl
es
imul
xor
or
cmp
mov
out
push
mov
loope
lcall
mov
negl
loope
gs
into
mov
insl
pusha
fsubp
push
cld
mulb
xor
addb
adcb
popa
adc
inc
stos
cmpsl
pop
outsl
xchg
push
stc
outsb
adc
pop
or
sub
mov
insb
test
adc
out
xchg
pop
aam
pop
shll
mov
push
loopne
inc
out
push
jmp
in
mov
call
or
shrl
je
daa
test
icebp
and
jmp
mov
cmp
push
hlt
js
pop
int
jb
ret
xchg
ss
hlt
js
mov
jno
aam
scas
arpl
les
fstps
iretw
fidivs
sub
cmp
cmpsl
xor
lea
dec
jmp
pop
xchg
mov
movsb
push
js
xor
std
scas
add
outsl
jmp
mov
aam
xchg
sub
cmp
mov
or
shlb
insl
mov
clc
mov
push
jo
xchg
sti
ret
mov
sub
sarb
icebp
in
stos
cwtl
aam
js
sub
adc
push
fnstcw
shll
loope
repz
scas
jno
mov
enter
mov
add
aam
cld
mov
jmp
adc
das
dec
notl
sub
mov
mov
mov
pop
call
je
ja
mov
mov
cltd
inc
mov
xchg
add
iret
out
clc
cmpb
int3
pop
shll
xor
adc
arpl
sti
dec
enter
add
and
dec
arpl
mov
adc
adc
je
repnz
sbb
dec
repnz
xchg
fidivs
inc
or
lret
cld
mov
xchg
sbb
aas
sbb
xchg
popf
sub
adc
movb
pushf
lea
jmp
out
icebp
popf
xor
mov
sub
push
sbbl
int
dec
cmp
pop
imul
mov
mov
xor
jne
mov
ss
mov
mov
movsl
js
push
jmp
xor
push
jg
subl
push
push
testb
repz
pop
daa
xor
mov
ss
push
shlb
inc
xchg
mov
out
stc
cmp
call
movw
movb
lea
call
call
dec
xchg
in
adc
test
xlat
jecxz
sub
mov
add
push
loopne
or
test
inc
jb
cmp
and
inc
sub
adc
inc
test
pop
imul
xchg
cmp
xor
test
add
cmp
mov
shl
mov
mov
pop
aam
pop
inc
add
mov
and
xor
add
fstpt
sub
xchg
mov
aad
jge
jns
add
movsl
adc
jnp
sbb
mov
sub
in
dec
and
sub
pop
inc
pop
or
mov
outsb
xchg
shl
jmp
sbb
inc
add
insb
sub
and
and
add
sbb
mov
mov
or
lcall
xor
xlat
nop
lcall
cmpsb
push
jo
jno
xchg
fildl
dec
fs
xor
sarb
popa
addl
cmc
sub
mov
loop
xchg
add
pusha
push
push
clc
imul
cmc
add
mov
lea
jmp
mov
mov
inc
push
notb
or
fs
stc
lods
in
xor
mov
add
adc
in
xor
sub
dec
es
push
dec
loop
sub
xchg
les
inc
push
enter
stos
cltd
push
cmp
test
dec
out
jo
sub
mov
outsb
mov
mov
fnstsw
mov
setl
pushl
lods
jmp
ja
call
lcall
xor
mov
push
mov
cmp
andl
mov
mov
mov
pop
push
mov
out
add
ficompl
xor
test
bnd
mov
fdivrs
aas
bswap
add
fisttps
inc
cmp
test
adc
fcoms
lret
mov
and
repnz
sub
mov
mov
int3
sbb
bound
and
xlat
and
sub
jp
mov
out
scas
out
cmp
mov
pop
cli
leave
push
mov
out
add
rclb
mov
ret
xchg
cmp
push
repnz
xor
outsb
push
enter
cld
test
push
jae
test
out
pop
cmp
pop
rcrl
xor
push
mov
fistpll
mov
and
push
rol
cmc
cmp
add
pushl
test
pushf
mov
cmp
push
add
movw
stc
cmp
test
pushf
push
pushf
push
lea
jne
pusha
mov
jmp
mov
and
inc
cmp
mov
lds
add
mov
arpl
fadds
ret
xor
repz
inc
add
jecxz
pop
xlat
lret
sarl
cld
and
les
mov
shlb
jb
ss
mov
test
inc
psubb
dec
adc
call
mov
imul
push
cmp
scas
xlat
push
xchg
push
jge
mov
jecxz
inc
mov
rcl
test
gs
jle
inc
cs
mov
insl
aaa
dec
imul
es
test
enter
fcmovb
jl
nop
out
pop
popf
fisubrl
mov
mov
sub
test
sub
adcl
sub
in
jno
js
jns
sub
cmp
icebp
sbb
inc
dec
or
push
imul
cmp
stos
inc
insl
ljmp
stos
mov
and
and
and
mov
or
stc
xchg
push
mov
inc
leave
jb
and
mov
dec
repnz
movb
movb
lea
jmp
repnz
push
and
mov
mov
addr16
lret
jmp
push
push
cmp
clc
stc
sbb
shll
fwait
jbe
jmp
inc
add
stc
sbb
sahf
jecxz
mov
jg
scas
mov
ja
imul
xchg
dec
popa
mov
pop
push
sub
xor
ret
mov
test
test
sbb
pop
jl
mov
in
jp
and
add
inc
gs
outsl
arpl
push
imul
and
pop
movzbw
mov
push
pushl
ret
mov
pusha
call
fldenv
in
jns
sbb
sub
push
dec
mov
xor
mov
popa
dec
sbb
out
sbb
and
sub
sbb
out
into
mov
or
fs
dec
repnz
mov
dec
or
xchg
add
pushf
lea
call
pusha
jmp
adc
bswap
mov
pushl
shr
stc
pushf
cmp
pushf
pushl
lea
je
pusha
cmp
jmp
mov
add
and
mov
sbb
sbb
and
lcall
lds
iret
call
repnz
out
inc
pop
cwtl
les
enter
mov
sahf
dec
je
pop
sbb
inc
scas
fistpl
jle
adc
or
cmp
jle
lods
cmp
jle
outsb
insl
pop
push
fwait
mov
jns
cmp
jl
or
jle
push
inc
sbb
lock
lret
sbb
or
mov
sbb
cs
lret
movsl
frstor
mov
pop
adc
push
sub
ss
lea
pop
imul
xchg
hlt
mov
lock
mov
push
in
stos
cmpsb
lret
and
jne
je
mov
add
cmpsl
ret
pop
fsubrl
xor
scas
ret
das
int3
xor
xchg
repz
and
fcom
orb
mov
jmp
dec
movsl
sbb
std
pushl
lock
out
sarb
cld
nop
xchg
popf
les
loope
inc
in
test
dec
mov
mov
mov
and
mov
cmpsl
mov
sbb
shll
push
push
lods
pop
add
loopne
pop
jecxz
push
push
jle
mov
aam
aaa
je
lods
mov
fistl
popf
fsubs
jnp
and
push
lahf
add
jmp
dec
out
rclb
push
or
jp
and
mov
push
out
sahf
ljmp
in
jecxz
xor
push
daa
addl
xchg
adc
mov
xchg
mov
pusha
adc
or
and
mov
test
clc
jmp
out
xchg
cmp
mov
cmp
and
insl
rorl
out
and
jb
std
jnp
test
and
jmp
call
mov
stc
pushf
xadd
add
movzbl
mov
bsr
movsbw
sar
add
adc
lea
test
movl
or
mov
sub
cmc
cmp
push
pushf
pusha
lea
jg
jbe
shl
neg
sar
sub
shld
not
mov
rol
mov
bt
cmc
shl
sub
add
rcr
xchg
shr
bt
neg
mov
lea
stc
add
bswap
push
not
mov
lea
call
adc
or
int3
cmp
in
lcall
mov
pop
mov
xor
ds
mov
call
sub
out
xchg
push
mov
mov
mov
pop
insl
add
cmp
or
inc
data16
dec
shlb
cld
in
pop
xchg
es
mov
mov
es
adc
inc
rcrl
add
fwait
sti
into
xchg
jo
loopne
incb
lods
cmpsl
jecxz
stos
or
sbb
lcall
cs
bound
lcall
mov
lcall
dec
xor
sbb
inc
jo
push
mov
xchg
mov
mov
jnp
xor
test
outsl
add
add
cmp
add
jae
add
mov
mov
ret
nop
xchg
jg
jmp
xor
and
and
sbb
lock
mov
and
movsl
fmul
cmc
pop
jg
add
or
jo
pushf
xchg
add
adc
out
sub
adc
xor
popf
mov
in
sub
orl
cmc
add
out
cmp
aas
adc
and
in
inc
xchg
int
movsb
xchg
in
sub
lret
mov
sub
pushf
and
pop
jns
mov
fwait
jb
push
and
push
jno
sub
in
mov
in
jmp
mov
call
mov
icebp
mov
out
add
xor
mov
test
fs
jb
out
cmp
enter
dec
fistpl
cmp
fimuls
adc
cwtl
test
xor
pusha
or
pop
sbb
push
mov
push
mov
js
xchg
dec
push
xchg
sbb
mov
or
arpl
and
mov
sahf
icebp
xor
imul
pop
pop
adcl
insb
mov
negl
push
mov
or
aas
fmuls
fcomi
xchg
and
lret
cli
mov
mov
mov
push
ret
pop
mov
lods
mov
mov
xor
pop
sub
shlb
push
xchg
pop
mov
push
insb
clc
fs
popf
daa
pop
xchg
dec
or
rorb
mov
mov
test
ds
sub
movsb
adc
mov
cwtl
mov
or
mov
int
sub
movl
xor
jne
push
movq
loop
sbbb
bound
adcb
or
jmp
mov
lea
jg
cmp
mov
out
pop
push
lods
push
jl
inc
adc
cltd
les
push
adcl
push
lods
mov
lcall
pop
dec
out
pop
cld
jns
dec
mov
ljmp
sub
fsubrs
ror
xchg
push
fistpll
xor
cmc
push
pushl
popl
cmc
test
bt
test
cmp
call
pusha
rol
stc
xor
call
pop
call
dec
dec
jle
push
xor
pop
mov
adc
je
and
icebp
notb
imul
in
cmpsl
outsl
call
dec
outsb
cmp
icebp
notb
int3
push
outsl
outsl
clc
std
out
aas
mov
jmp
orl
xor
fdivl
cmc
fldt
add
mov
das
xor
cmc
or
and
call
lea
jne
rcl
push
cmp
mov
pusha
pushf
cmc
add
call
adc
es
test
push
lock
cmp
popf
scas
loopne
stos
cmp
and
in
jmp
and
icebp
mov
jle
pop
enter
mov
lock
and
push
or
mov
sbb
adc
scas
mov
xor
lahf
xor
xchg
sbb
add
cmc
add
jno
cmpsb
fsubs
andnps
fadds
xor
lcall
and
lea
jne
stc
sar
sub
mov
test
bt
add
stc
bt
clc
pusha
movzwl
inc
test
mov
cmc
add
bt
mov
mov
push
call
add
xchg
mov
loopne
sbbb
mov
sub
mov
pusha
jmp
inc
cmc
xchg
jmp
sbb
aam
cmp
xchg
test
stc
cmc
push
fsubs
sub
cmc
lcall
enter
icebp
mov
in
fidivl
mov
sarb
test
pop
rclb
nop
jnp
lea
xor
or
outsl
push
sub
in
pop
cli
xchg
pop
add
in
mov
out
enter
movsb
stc
mov
jmp
shl
xor
add
cmc
js
jge
imul
fwait
jns
cld
adc
pusha
rorb
clc
and
jbe
clc
jbe
adc
and
or
adc
add
sti
je
sbb
xor
cwtl
insb
add
popa
shlb
xor
scas
je
adcl
mov
mov
lahf
mov
fwait
ret
adc
test
cmc
pop
call
aam
sbb
sbb
test
sub
cltd
lret
mov
pop
sub
pop
and
jno
xchg
push
fwait
push
cli
jnp
and
and
mov
lods
sub
and
mov
pop
and
or
cmp
xor
sub
fildl
insl
cmp
clc
arpl
fsub
jge
mov
aad
sbb
adc
int3
sti
insl
dec
insl
pop
in
mov
test
mov
sbb
ljmp
sub
sahf
ja
subl
xor
aam
mov
or
jmp
xor
and
loopne
mov
nop
mov
fisubrs
dec
fs
call
testl
mov
outsl
jle
icebp
push
rcrb
in
sub
out
and
jmp
not
add
bsr
ror
dec
pusha
add
not
shr
test
mov
push
jmp
stc
test
or
pusha
pusha
lea
je
not
bts
cmp
sub
aas
pusha
dec
bts
mov
neg
mov
not
pusha
movzbl
rcr
shr
shrd
adc
shr
shl
mov
call
push
dec
dec
push
push
dec
dec
dec
cs
push
push
add
repnz
sbb
lahf
inc
ljmp
add
repnz
sbb
sub
push
push
out
pop
ljmp
xorl
cltd
fisubrs
mov
cmpsl
ljmp
mov
mov
xchg
enter
rclb
mov
xchg
mov
test
inc
aad
popa
cmp
mov
incl
add
rcrb
add
hlt
mov
xor
es
fisubs
add
das
lea
shr
pop
decl
jle
int
das
dec
jle
cmp
or
ret
movsl
inc
fnsave
pop
mov
xor
call
int
mov
jl
test
adc
call
rclb
cmpb
and
int
addl
bound
mov
and
aas
fisubl
xor
repz
xchg
inc
xchg
out
arpl
imul
bnd
mov
int3
loop
mov
sub
out
pop
mov
cwtl
lea
mov
and
push
daa
repnz
dec
into
pop
jb
aas
mov
push
icebp
addps
and
cmp
cs
and
lahf
cmp
mov
jbe
mov
outsb
inc
ja
notb
jns
mov
arpl
js
xchg
mov
ss
or
ljmp
and
inc
mov
mov
test
into
mov
ss
jp
jbe
je
push
jne
aaa
jle
in
mov
test
mov
bound
lock
jb
dec
cmp
and
jle
cmp
sarb
mov
aas
cltd
mov
mov
and
pusha
and
jbe
repz
fisttpll
push
inc
lock
arpl
mov
sbb
jmp
mov
and
stos
leave
cmpsb
mov
jmp
imul
mov
into
clc
xchg
cld
xchg
fnstsw
test
mov
cwtl
dec
jp
xor
or
fwait
mov
mov
leave
es
cmpl
in
jmp
sub
push
pop
insb
sub
mov
lcall
jnp
cmpsl
mov
cld
jle
mov
dec
dec
popa
pushf
jnp
stos
and
arpl
in
jmp
enter
jmp
jnp
sub
jnp
jmp
loope
sub
imul
push
mov
test
mov
jmp
stos
shll
mov
sarl
stos
mov
scas
xchg
sub
fwait
bound
xor
push
cli
arpl
mov
cmpsb
jbe
pop
and
xchg
mov
in
mov
mov
movsl
cwtl
jne
jmp
cmpsl
inc
mov
jmp
sub
mov
dec
mov
sub
sub
daa
lcall
sti
jmp
rcrl
mov
test
shrl
mov
mov
lods
mov
pop
inc
pop
jmp
jmp
mov
cmpsl
mov
imul
fnstcw
push
cwtl
out
jecxz
mov
jmp
jecxz
std
lret
mov
xchg
jl
jp
mov
mov
jmp
stc
push
neg
jecxz
loopne
sub
leave
addr16
cmpsb
insb
jno
jnp
fistpll
stos
call
or
imul
or
mov
mov
pop
and
test
out
sub
inc
call
mov
dec
xchg
cmpsb
add
lea
dec
xlat
adc
loope
test
cld
cmpsb
jbe
mov
mov
ret
cmpsb
outsl
decl
lret
scas
mov
mov
mov
xchg
pop
pusha
aam
outsb
mov
jbe
pop
into
xor
mov
dec
enter
sub
inc
xor
popf
mov
cmpsl
xchg
insl
inc
cmpsl
add
fisubl
mov
pushf
mov
inc
cmpsl
mov
test
mov
ljmp
jne
test
lahf
cmc
lahf
sub
mov
cmp
enter
jne
or
dec
mov
mov
out
jae
push
test
mov
mov
cmp
fadds
push
in
push
jecxz
mov
dec
data16
and
in
mov
mov
adc
movsb
mov
outsl
dec
cmpsb
mov
or
loope
mov
cmpsb
mov
mov
daa
subb
mov
mov
pop
test
mov
test
and
daa
jp
xchg
test
xor
outsl
insb
js
mov
test
or
movsl
fdivp
pusha
mov
mul
push
insb
addr16
movsl
xor
mov
and
test
shrl
shrl
movsl
xor
ret
mov
or
sbb
test
mov
add
imul
shll
mov
pushf
addr16
dec
test
cmpsl
addr16
scas
fiaddl
ss
cltd
subl
mul
mov
dec
mov
lds
jl
addb
and
xor
sbb
push
or
js
mov
test
mov
dec
mov
push
push
imul
xchg
mov
scas
mov
ret
mov
stc
dec
xchg
push
adc
test
test
mov
push
subl
mov
sub
ret
daa
mov
add
fs
scas
out
mov
fists
mov
mov
jo
push
pop
cmp
shl
mov
mov
xchg
inc
adc
mov
jne
jne
xor
xor
add
sub
or
push
cmp
add
jmp
daa
cmpb
jbe
pop
cmp
dec
or
dec
mov
cmpsl
andb
push
imul
xchg
jno
daa
mov
inc
clc
xlat
dec
mov
imul
mov
icebp
lods
daa
mov
push
addr16
pop
add
dec
imul
mov
xchg
addr16
xchg
in
and
mov
rol
or
movl
pushf
stc
in
push
daa
pop
scas
xchg
xchg
or
inc
cmp
mov
lods
or
fwait
mov
fwait
sub
cmpsl
inc
cs
fsts
cmp
xchg
mov
push
dec
cmc
mov
icebp
pop
and
and
dec
mov
and
shr
mov
mov
mov
mov
mov
mov
daa
xchg
mov
push
mov
lods
or
sbb
sahf
les
cltd
pop
and
imul
add
imul
test
dec
test
sbb
mov
jbe
imul
pusha
imul
stos
mov
cld
xorl
mov
aas
jmp
imul
scas
jmp
cmpsb
insb
and
jno
lock
scas
xor
lock
and
mov
ret
mov
out
ret
adcl
cltd
lret
outsb
test
mov
push
mov
push
cmpsb
jecxz
fnstsw
xchg
out
mov
lock
pop
test
lea
mov
mov
popf
cmp
cmpsb
mov
and
pop
ljmp
and
or
xchg
and
jae
cltd
push
mov
add
and
mov
dec
mov
pusha
flds
repnz
fisttpl
mov
movsb
mov
out
mov
sub
jecxz
out
cli
aaa
mov
and
into
test
xchg
cmp
add
imul
inc
and
je
jo
sub
mov
cli
lcall
mov
sahf
lcall
mov
icebp
cmp
mov
xor
xchg
mov
add
mov
mov
lret
adc
jns
mov
inc
and
add
cltd
jecxz
lret
insb
lock
sbb
sub
aaa
inc
aaa
loope
cmp
std
repnz
jbe
lea
mov
mov
clc
js
ljmp
jno
mov
mov
jecxz
xor
xchg
repnz
jb
cmc
xor
inc
xchg
pop
outsb
xchg
pop
fnsave
fstps
lret
dec
je
ja
ret
mov
movsb
add
cmp
cwtl
leave
lret
mov
mov
mov
mov
mov
and
sub
scas
std
jns
sti
insb
test
and
out
shll
mov
adc
dec
add
clc
mov
jmp
pop
adc
movsb
and
popl
ret
cs
fstpt
data16
stos
lea
mov
mov
xchg
imul
cli
mov
cwtl
dec
mov
xor
jle
push
lods
cmpsl
je
testl
cltd
ja
jmp
leave
sti
gs
mov
ja
je
icebp
mov
xchg
mov
jbe
cmp
mov
xchg
test
lea
andb
mov
movb
mov
and
das
mov
push
mov
cmpsb
stos
call
stos
mov
out
push
mov
andl
jo
call
loope
mov
stc
out
fisttpl
lea
bound
xchg
or
mov
mov
cmp
cwtl
imull
add
loopne
cwtl
or
xchg
push
daa
cmp
daa
jge
xchg
or
add
nop
cmpsb
or
cmp
daa
push
xor
dec
in
jl
aam
cmp
test
scas
xchg
mov
scas
cmc
jecxz
mov
ljmp
in
xchg
mov
mov
mov
subb
mov
mov
stos
mov
ss
repnz
mov
roll
pop
out
or
stos
pop
mov
or
mov
pop
mov
aam
enter
jbe
ja
push
jo
dec
mov
int3
xchg
addl
mov
xchg
sbb
cmp
sub
dec
pushf
ds
jae
mov
repnz
fadds
lds
mov
ja
push
adc
fwait
js
bound
adc
stc
stos
iret
repnz
test
inc
cmc
jo
cmpsl
outsb
jbe
icebp
or
js
xor
jno
mov
and
or
repnz
xlat
test
mov
xchg
out
stos
mov
or
je
pushf
xchg
stc
xor
or
lret
mov
cmp
mov
add
je
xchg
mov
xchg
jg
cmpsl
je
mov
sub
xchg
jo
movsl
cmp
popa
mov
insl
jp
bound
mov
sbb
int
mov
popf
mov
cmc
or
bnd
mov
add
or
mov
data16
aas
aaa
stos
xor
xchg
xchg
mov
mov
ss
mov
mov
jecxz
mov
cmp
dec
enter
insl
test
shlb
cmp
divl
jbe
and
xchg
push
orl
push
or
in
pop
cltd
jbe
jp
jecxz
sub
mov
jecxz
xchg
or
cmp
lods
ret
in
aaa
xlat
repnz
cmp
jp
xor
cli
mov
adc
add
clc
ja
dec
cmp
mov
mov
loop
xor
pop
cmp
add
ret
mov
add
or
in
and
pop
ljmp
sub
cmc
cmp
mov
pop
or
int3
or
out
stos
sub
jp
mov
mov
xchg
mov
xchg
fists
in
sahf
cmpb
cmp
mov
jne
xchg
adc
movb
sub
mov
add
aad
mov
test
xchg
jbe
test
outsb
enter
cmp
sahf
loopne
jl
mov
mov
bound
popa
jno
cwtl
nop
cmp
push
es
cmpsl
add
lods
or
mov
test
xchg
lock
jb
mov
imul
dec
call
test
mov
jmp
pop
clc
sti
stos
out
mov
cmpsb
aaa
xor
cmp
push
mov
addl
jecxz
adc
lock
movl
fstpt
xchg
lret
lret
adc
test
scas
and
addl
test
and
pop
sub
and
xor
clc
clc
mov
repnz
ljmp
imul
mov
mov
and
mov
mov
pop
xchg
inc
leave
cld
and
lcall
bound
shrl
mov
jbe
xchg
sub
daa
sub
mov
mov
ljmp
fdivrl
xchg
mov
daa
and
call
fidivrl
scas
jge
cmpsl
inc
test
mov
test
mov
xchg
cs
pop
ss
mov
clc
cmp
negl
xchg
data16
scas
push
sahf
std
lahf
adc
fistl
adc
pushf
sub
pop
mov
jecxz
out
xchg
mov
mov
xchg
cmp
outsb
and
sub
cmpsl
or
xchg
test
pop
mov
and
aas
test
repnz
int3
mov
jnp
mov
push
lret
cltd
jmp
mov
inc
jae
call
mul
imul
pop
xchg
stos
dec
sub
test
mov
mov
jb
or
mov
xchg
mov
xchg
xor
xchg
xchg
mov
sbb
mov
enter
xchg
cmp
loope
dec
xlat
imul
sbb
mov
movsb
jb
mov
cmc
loop
cmpsb
cmpsl
daa
xchg
std
lods
xorl
and
push
mov
xor
xchg
sub
dec
mov
and
popa
test
mov
jmp
mov
cmpsb
orl
jmp
mov
xchg
push
es
ljmp
or
mov
add
adc
cmpsl
popf
xchg
mov
test
xchg
mov
add
lods
pop
test
mov
stc
repnz
test
or
mov
xor
shll
mov
mov
in
mov
mov
mov
xor
push
cmpsb
mov
xchg
sti
mov
xchg
xor
cmp
jmp
loop
xor
test
ds
daa
xor
mov
xchg
fbstp
xor
jno
xor
mov
add
neg
je
mov
push
mov
mov
repnz
ss
es
mov
mov
pop
jecxz
mov
test
scas
movb
mov
je
cmp
mov
and
pop
xchg
mov
push
sub
xchg
xor
jb
xchg
or
mov
stos
arpl
bound
jb
movsl
lcall
jno
jg
xorb
push
cmpsb
mov
enter
push
int
mov
xor
mov
jae
and
xchg
popf
stc
sahf
push
and
xchg
add
leave
aad
test
mov
mov
icebp
jae
push
and
movsb
and
or
inc
fildl
xor
add
sbb
subl
gs
fsubrs
dec
add
sub
mov
jmp
notl
cmpsl
arpl
xchg
mov
or
jbe
test
movsl
xchg
mov
movzwl
into
cmpsb
stos
test
cs
push
or
clc
xchg
stos
mov
hlt
popa
cltd
cmp
mov
sbb
mov
mov
cmp
es
cmpsl
xor
dec
mov
leave
ss
ja
testl
mov
into
mov
ss
sahf
in
adc
sub
xor
sbb
mov
fwait
add
jbe
cmp
and
loop
mov
leave
or
add
mov
clc
lea
mov
lret
out
dec
or
daa
inc
and
mov
cli
stc
xor
cmpb
mov
or
daa
cmp
adc
xor
push
mov
dec
mov
sub
jne
mov
xchg
mov
or
pushf
dec
xor
add
ret
mov
addr16
ss
aaa
aam
dec
xchg
cmpsb
daa
mov
and
call
cmp
out
scas
or
enter
mov
and
adc
xchg
mov
mov
ds
mov
scas
jle
xchg
sbb
ret
mov
imul
jns
mov
mov
mov
mov
or
jecxz
mov
sub
mov
cwtl
mov
call
mov
shlb
lret
js
sahf
xchg
mov
sti
mov
mov
mov
mov
call
pushf
call
mov
call
movl
jmp
push
jmp
add
sbb
popf
aam
lcall
mov
mov
push
repz
jecxz
aam
jno
cmp
fs
andb
repz
xchg
outsb
jno
dec
dec
hlt
adc
jno
sub
inc
into
ja
fadds
add
mov
adc
lods
pusha
xchg
loope
in
repnz
mov
push
lret
aaa
imul
lret
call
ret
mov
xchg
mov
not
insl
mov
push
jl
sub
dec
mov
test
and
or
int
aaa
mov
dec
sub
dec
repz
outsl
jo
push
xor
sub
clc
mov
ljmp
mov
movb
jle
outsl
std
outsb
mov
sub
add
xor
mov
xor
mov
std
xchg
adc
add
or
leave
and
sbb
pop
dec
mov
xchg
sarb
les
fwait
sahf
push
mov
cmp
icebp
testb
mov
pop
popf
jae
mov
and
lret
data16
fisttpl
data16
rclb
pop
imul
stos
push
sbb
jae
mov
loope
pop
and
pop
dec
lds
fpatan
mov
mov
cmp
iret
dec
mov
or
cmp
adc
xor
aam
pop
icebp
push
mov
dec
and
mov
rep
push
push
les
mov
pop
mov
dec
push
cmp
pop
lahf
ret
test
mov
xor
mov
dec
xor
negl
call
inc
add
xor
lods
adc
or
or
mov
mov
dec
mov
out
fnstenv
test
outsb
int
jne
dec
mov
cmc
loope
addb
xchg
jns
jp
iret
mov
fcmovbe
xlat
inc
in
sub
adc
mov
sbb
ljmp
mov
push
mov
lock
lods
loop
push
fildl
out
xor
imul
outsb
xchg
pushf
lods
in
sbb
pop
pushf
jmp
pushf
arpl
icebp
ret
clc
pop
inc
lret
mov
scas
aas
int
and
push
dec
sbb
loope
jbe
lock
cmp
mov
jmp
lcall
mov
sub
pop
mov
lret
cltd
lods
dec
sarl
loopne
sahf
aas
mov
sub
cmp
push
jb
ret
sbb
xor
cmp
mov
pop
inc
inc
push
xchg
jno
mov
xchg
and
out
mov
cmp
and
sub
push
in
int3
rorb
sti
fmull
js
mov
stc
imul
jl
mull
cmpsl
inc
xchg
adc
inc
xor
inc
mov
notl
fildl
sub
ds
sti
dec
popf
imul
jle
dec
fs
cmpsb
xchg
fs
xchg
sbb
and
pusha
mov
push
sbb
jo
add
pushf
adc
inc
mov
lods
hlt
push
rol
daa
popa
fsubrl
out
mov
adc
lods
hlt
push
test
sub
flds
mov
sub
pop
push
jmp
lahf
shrb
sub
imul
inc
cld
pop
dec
lret
stos
xchg
or
repnz
dec
lret
dec
pop
mov
dec
cmp
and
lea
jae
cmc
bts
mov
mov
movzbw
stc
bswap
mov
adc
pusha
mov
bt
pushf
pusha
cmc
xor
cmc
cmc
pushl
bt
repnz
movb
push
lea
jmp
mov
or
add
lahf
mov
adc
stos
pop
jo
adcl
std
aaa
test
pushf
iret
leave
iret
dec
mov
test
and
mov
fsubr
std
loope
dec
stos
scas
lock
popf
xor
leave
hlt
lea
push
sub
ret
fwait
sub
add
mov
mov
loop
push
bnd
fisubrl
into
jnp
sbbb
or
outsl
repz
gs
pop
das
add
jbe
cli
les
fcmovu
in
and
popf
mov
and
mov
adc
dec
into
mov
mov
popf
neg
lds
setae
xor
test
xor
in
or
xchg
adc
sti
hlt
push
jno
lods
inc
jg
cwtl
xor
repz
inc
jbe
pop
fistl
test
mov
adc
icebp
inc
popf
insl
jmp
insb
xchg
xchg
xchg
testl
jp
and
jns
mov
cmp
and
or
mov
mov
mov
mov
test
jle
mov
cmp
pop
fs
pop
pop
pop
mov
shrb
cmp
arpl
cltd
shr
lret
out
inc
add
aas
xor
sahf
pop
lock
mov
mov
cmc
stos
jo
testl
arpl
cwtl
mov
add
popf
sbb
je
inc
mov
pop
fimull
mov
jbe
out
imull
popa
mov
cld
aam
loope
in
fbld
jnp
sti
add
xorl
sbb
add
lahf
je
mov
insl
dec
jle
fidivs
leave
shll
adc
dec
xchg
stos
mov
lea
jne
rol
btr
lea
shrd
xor
aad
bswap
inc
mov
stc
dec
shl
call
dec
out
lods
cli
dec
ror
jge
mov
sahf
jne
lret
cmp
test
cmp
push
jp
push
push
repz
mov
inc
add
sub
ja
cmp
push
icebp
sub
js
hlt
shlb
repnz
faddl
mov
cmp
movb
or
bound
popa
mov
cli
pop
inc
imul
in
mov
jp
and
inc
xchg
pushf
repz
xchg
jbe
or
shll
sub
mov
test
int
or
fs
push
sti
lods
fadd
xchg
inc
sti
push
mov
and
cld
sub
test
iretw
icebp
sbb
sti
cmp
cmp
cmp
xor
cld
sub
mov
or
pop
aad
leave
pusha
pop
adc
out
xor
cmpsb
or
lock
lock
inc
out
cld
mov
imul
out
dec
sbb
imul
mov
arpl
add
jnp
stc
in
push
imul
sbb
add
mov
movsb
mov
pusha
neg
pop
adc
or
sbb
mov
cltd
and
fs
fistl
xchg
push
in
fdivrs
mov
loope
lahf
push
mov
push
gs
imul
bound
mov
inc
mov
mov
in
rcll
testl
inc
and
stc
pusha
mov
clc
cmc
stc
repnz
movb
pusha
lea
jmp
shrd
mov
cmp
push
cmpb
lea
jns
jne
sub
pushf
sar
pusha
xor
not
not
daa
mov
dec
shl
add
stc
setno
mov
push
push
bt
clc
test
push
lea
je
jmp
ss
shll
mov
inc
nop
test
xchg
call
cmp
dec
and
icebp
cld
addr16
jbe
lret
dec
cmp
xlat
loopne
jmp
iret
stos
pop
ficompl
pop
mov
lock
das
xchg
push
bndstx
ljmp
dec
out
inc
sbb
push
push
add
sahf
js
sti
dec
inc
cmp
cli
dec
jno
mov
sbb
mov
pop
pushf
lea
je
push
stc
cmc
test
add
pushf
clc
bt
cmp
pushf
jmp
push
or
mov
test
rorl
mov
in
sarl
jns
lahf
int3
push
pop
push
repnz
imul
or
movsb
imul
filds
cmp
sbb
dec
push
mov
rcrl
lret
mov
adc
mov
jmp
call
xchg
in
cmp
test
into
sub
sarb
imul
jno
insb
sbb
push
sub
jo
xchg
aad
xor
push
pusha
mov
jbe
mov
pop
test
mov
sub
jp
lds
mov
push
in
mov
xchg
sbb
lock
xor
pop
pop
mov
es
outsl
mov
and
clc
xor
shlb
push
addb
push
fdivs
jbe
xchg
mov
push
jl
inc
shlb
xchg
or
test
jp
nop
dec
je
fbld
enter
inc
mov
dec
push
enter
ss
stos
sub
neg
popf
xor
and
cmp
fisubrs
iret
test
or
add
aam
imul
add
nop
mov
jmp
mov
push
pushf
and
push
bt
add
pusha
lea
jmp
lea
jb
pushf
bt
cmpb
pushl
lea
jne
stc
ror
jo
mov
jmp
add
inc
jb
popa
je
push
arpl
outsb
add
dec
pop
and
pop
sahf
push
popa
inc
sub
add
mov
dec
testb
in
push
lea
bound
popf
mov
push
in
stos
loopne
enter
inc
fnsave
mov
test
xchg
adc
repnz
push
scas
insl
mov
dec
loopne
sbb
sti
les
and
mov
dec
repz
and
addr16
pop
test
dec
nop
lret
mov
xchg
cmpsl
inc
in
inc
sub
cmc
mov
je
rclb
fidivl
and
fisubrs
fidivrl
cld
cmp
iretw
push
fcmovb
pop
push
bnd
adc
and
bnd
add
fwait
test
xor
insb
dec
push
aam
test
xor
push
out
stos
inc
lcall
fs
mov
ret
shlb
paddusw
xchg
ret
insl
sbb
and
outsb
mov
in
out
mov
add
mov
sbb
xchg
fdivrp
rcr
xor
bt
add
sub
shl
setle
or
add
neg
test
neg
not
mov
sar
shl
cmp
mov
jmp
push
in
xchg
mov
jnp
inc
outsl
aam
in
test
and
and
mov
sbb
rolb
adc
mov
aam
and
lahf
inc
dec
lret
sbb
sub
push
and
icebp
mov
in
add
dec
mov
ret
pop
mov
mov
dec
sbb
fs
ja
pushf
pop
pop
xchg
pop
pushf
mov
mov
mov
movl
pushf
pushf
mov
call
push
pusha
inc
call
push
inc
mov
xchg
fs
fnstcw
dec
clc
xlat
outsb
push
add
outsl
out
dec
mov
xor
sub
or
mov
sti
lahf
outsb
pop
mov
call
cs
sub
or
xorb
in
std
inc
dec
dec
mov
add
adc
pusha
cmp
leave
fldenv
stos
add
sub
stos
sub
ret
sbb
out
adc
xor
sbb
movsl
iret
call
mov
and
mov
push
mov
in
aad
in
mov
or
bsr
rol
mov
cmp
pusha
jmp
dec
rcr
mov
btc
xadd
mov
adc
mov
bt
xor
bt
call
add
add
test
out
sbb
ret
stos
fidivrs
out
fwait
mov
ja
mov
fisubs
mov
lods
xor
test
inc
jnp
cmpsb
mov
lds
add
stos
int
sti
fcos
or
das
cld
outsl
enter
sub
das
sub
mov
sub
dec
jle
mov
ja
lds
dec
pushf
mov
mov
call
lods
cld
aas
push
cwtl
or
and
push
push
int3
mov
inc
loopne
out
adc
sbb
dec
or
and
call
movsb
push
icebp
ja
mov
enter
pop
loopne
pop
std
dec
lods
add
les
mov
adc
bound
ret
lret
lcall
sub
fsts
testl
dec
pop
lods
add
xorl
divl
push
sbb
pusha
mov
dec
jae
mov
into
lods
mov
js
inc
jmp
and
scas
or
outsl
scas
cwtl
jnp
idivl
pop
jg
cli
xor
mov
outsb
mov
pop
adc
idivl
aas
movzbw
mov
pop
pusha
pushl
movb
pusha
pushl
ret
jae
or
aaa
shlb
inc
fisttps
pop
and
das
rorb
sbb
hlt
in
jmp
xchg
adc
mov
add
jmp
mov
mov
add
imul
jecxz
shll
and
mov
addr16
cld
push
nop
jle
mov
ret
push
pop
add
test
cmp
cmpsb
mov
mov
js
and
lcall
fwait
in
pop
inc
mov
xor
add
scas
pop
xchg
lds
test
cmp
movb
test
lods
cmp
mov
divb
sub
mov
jo
push
fbstp
jl
push
sub
push
or
ret
dec
pop
jno
jns
and
int
scas
fwait
or
pusha
repz
mov
dec
xchg
dec
aas
scas
xlat
mov
mov
mov
mov
cmp
in
push
out
pop
arpl
outsb
iret
fiaddl
xor
push
nop
fistps
jne
add
popa
pop
repz
test
iret
in
pop
xchg
ficoms
mov
add
mov
mov
in
cmp
pop
and
push
ret
cli
inc
jmp
or
push
mov
repnz
stc
cmc
sub
stc
push
stc
cmp
mov
lea
ja
pusha
pushf
lea
jmp
popf
call
dec
adc
or
popf
sub
lret
pop
les
push
sbb
call
push
jbe
movsb
mov
and
and
cld
push
or
xchg
and
mov
and
xchg
jge
rclb
cs
jp
cmp
sub
movb
stos
jb
mull
dec
js
add
xor
adc
nop
inc
adc
push
cmp
addr16
adc
xlat
or
sbb
in
std
mov
enter
xchg
xchg
xor
and
cmc
stc
pushf
cmp
pushl
call
pushl
lea
jne
call
inc
fadd
xchg
daa
xchg
movsb
push
jmp
out
cltd
sub
pop
add
aaa
lcall
sbb
cli
stos
shrl
popf
sbb
jb
lods
inc
sahf
popf
test
pop
adc
jmp
stc
mov
mov
add
mov
push
pop
enter
mov
mov
bound
fstenv
imul
and
fwait
jno
and
sbb
movsb
add
or
xor
jmp
mov
addb
add
cmp
mov
bound
push
add
insl
mov
loop
and
lret
dec
jp
sbb
add
outsl
add
mov
inc
sbb
or
pop
call
call
loop
push
xchg
dec
xor
loopne
test
cld
dec
popf
sbb
fwait
call
imul
push
addr16
pop
fiaddl
fildll
xchg
lret
and
je
pushf
pusha
lea
jmp
shr
jmp
clc
jae
xlat
out
mov
divb
rorb
popf
inc
arpl
stos
adc
mov
cmp
mov
outsb
xor
xchg
adc
jecxz
repz
leave
mov
mov
movsl
push
adc
loopne
movsb
xchg
xor
add
inc
push
out
ret
dec
add
ss
xchg
mov
cld
dec
mov
mov
ret
xor
loop
fsts
sub
imul
jle
cwtl
fisubrl
mov
pop
outsl
jecxz
mov
lods
and
dec
sub
inc
xlat
cld
imul
int
popf
clc
adc
arpl
js
mov
pop
dec
pop
sub
dec
xchg
out
sub
adc
outsb
cmp
jl
adc
ja
fs
push
inc
setnp
insl
cld
dec
lock
insl
pusha
cmc
and
jmp
sbb
sbb
loop
daa
aam
add
cmp
dec
xchg
mov
pushf
pushf
movb
mov
push
call
mov
inc
push
jge
push
lea
ja
pushf
sub
bswap
mov
pop
add
sub
rcl
shrd
mov
adc
mov
rcl
mov
cmc
repnz
pushf
lea
jne
pusha
lea
lahf
movl
movb
movsbw
lahf
mov
mov
movzbw
mov
lea
mov
movl
pushf
pusha
mov
pushl
pushl
ret
movb
pusha
mov
dec
call
mov
rorb
stos
add
js
mov
jnp
mov
aaa
pop
xor
cmc
inc
xchg
lea
sbb
lods
stos
xchg
ret
subb
pop
out
test
lods
stos
xchg
sub
dec
jmp
shrl
jne
pop
stc
pop
cld
mov
mov
cmpsl
mov
pop
aam
lahf
lods
add
mov
cmp
sbb
xchg
xchg
pop
mov
in
enter
or
or
ja
mov
mov
rclb
cmp
push
xor
add
mov
jecxz
pop
pushf
inc
adc
adc
push
mov
imul
mov
pushf
out
arpl
daa
jns
gs
popf
sbb
push
mov
sahf
pusha
mov
outsb
sbb
mov
loop
xchg
jecxz
cmp
lret
dec
jnp
mov
lahf
sahf
jle
mov
jp
sbb
sub
cmp
fnsave
xor
and
int
sbb
repnz
dec
cld
int
and
push
imul
push
jns
or
mov
std
jns
mov
cwtl
mov
dec
arpl
arpl
cmp
out
xchg
push
add
lret
movsl
test
nop
addb
enter
clc
fstps
test
lret
jnp
sbb
and
cmp
jo
test
mov
xchg
dec
sub
jle
jmp
jns
lcall
lea
sbb
sub
popf
xor
in
mov
sub
push
pop
push
ds
pop
pop
add
call
pushf
movsbw
pop
mov
call
pushf
movzwl
adc
add
cmp
mov
jmp
fcmovne
loopne
push
movsb
divb
xchg
cmpsl
xchg
call
and
scas
xor
imul
out
jae
ja
mov
or
jecxz
sbb
mov
xchg
lret
test
loopne
pusha
pop
ljmp
jp
cmc
in
pop
aam
repz
insl
xchg
cs
xor
movaps
test
leave
jmp
push
cmpl
imul
lods
push
loopne
je
clc
cli
mov
ds
xor
icebp
lods
mov
and
in
inc
jp
cmp
dec
push
dec
or
inc
sahf
pop
decl
cmp
and
je
pusha
lea
call
jmp
cmp
mov
xorb
addr16
mov
lret
sub
push
arpl
test
insl
jno
addr16
fdivp
scas
push
arpl
xchg
and
out
test
mov
pop
aaa
or
imul
lods
stos
int3
sahf
sahf
xchg
fldt
test
fcom
repz
rcr
mov
jno
cmp
daa
mov
flds
es
xchg
cltd
or
fldt
shl
repnz
xor
jp
and
jae
xor
lea
xchg
fisubrs
mov
stc
test
mov
into
xchg
mov
dec
mov
je
movsb
int3
xor
xchg
in
dec
stos
sub
dec
and
add
arpl
pop
ret
lret
mov
outsl
pop
lret
andb
jb
pop
fcomps
stos
or
cmp
hlt
inc
lahf
xchg
push
rcrb
in
mov
fwait
aas
cmp
in
jge,pn
popf
mov
sbb
loope
sahf
insb
jle
adc
rcl
iret
cltd
int
push
jle
and
sub
movb
ror
movw
call
xchg
scas
cs
cmp
push
out
ss
popf
mov
cmp
mov
and
xor
lahf
adcl
add
push
push
mov
notb
dec
rcrl
movsl
lock
sbb
addr16
jg
ds
adc
clc
aas
sub
push
mov
outsl
adcl
sbb
sub
gs
add
push
and
mov
lea
jae
bsf
shld
call
movzbw
neg
bsr
mov
bt
pusha
test
movb
and
cmc
pusha
add
push
push
lea
jmp
imul
lock
hlt
in
jmp
sub
test
xchg
data16
jb
pop
push
adc
cmpsb
gs
dec
test
jno
imul
test
push
xlat
jge
pop
leave
mov
pop
lock
or
divl
notb
xchg
mov
push
pop
cmp
movb
mov
add
lds
adc
add
jbe
and
lea
jne
rcr
mov
mov
jmp
lea
call
push
jmp
inc
rorb
jne
imul
sub
in
push
pop
xchg
xchg
add
and
adc
in
dec
cmp
hlt
xor
fimuls
xchg
imul
movsb
xor
stos
sub
imul
out
dec
sub
rcrb
and
jmp
mov
jbe
les
or
sbb
mov
cltd
lods
mov
mov
adc
jbe
cmp
xor
jns
repz
in
rcrb
or
or
mov
repz
or
jno
fisubrl
xchg
sbb
clc
xchg
vphsubbw
jno
xchg
or
popf
jnp
mov
in
mov
fstl
sbb
cld
inc
cmp
xor
mov
jnp
js
jne
xor
add
test
pop
add
adcb
push
mov
pop
ficomps
imul
jns
mov
out
xor
cli
cmc
lods
daa
arpl
dec
outsb
or
outsb
push
lds
sti
add
dec
mov
mov
outsb
or
lret
adcb
jp
jmp
in
or
aas
int3
cmpps
daa
sub
out
push
out
inc
lods
inc
aas
dec
fwait
sub
call
cmp
and
fdiv
jns
mov
dec
jmp
aad
stos
cmp
pop
out
push
or
getsec
pusha
sarb
sub
jo
xchg
fdiv
lret
adc
loopne
mov
adc
bound
sbb
inc
cmp
lea
push
xchg
dec
fisubl
dec
loopne
ret
push
in
cmp
in
and
in
shrl
jp
insl
adc
orb
cli
fwait
or
mov
data16
pop
cmp
mov
dec
sbb
and
dec
and
lcall
add
xchg
dec
mov
lret
insl
jbe
out
mov
cmp
loope
clc
leave
jnp
lahf
addl
jg
pop
xchg
inc
test
jle
pop
and
cld
push
fwait
xchg
xchg
jle
gs
sti
out
dec
gs
or
inc
push
loopne
test
loopne
cld
jp
sub
xor
mov
int3
test
add
arpl
fs
test
stc
lods
mov
sbb
loop
mov
inc
outsl
gs
mov
cmp
cmp
movb
jmp
mov
pushf
sub
lea
lea
lea
cmp
sub
pusha
cmc
pushl
popl
bt
stc
pusha
cmp
pushl
push
push
call
dec
inc
lods
jecxz
mov
xchg
es
shrb
fildl
cltd
sub
arpl
adc
or
pushf
arpl
aad
fnstsw
jg
lods
adcl
jge
lds
addb
jns
xor
mov
xor
cmc
and
mov
xchg
mov
or
rorl
jnp
aam
std
and
out
mov
jae
mov
xchg
insb
int
mov
push
adc
or
lret
jnp
sub
inc
add
lds
mov
push
outsb
into
cmp
dec
or
sub
enter
out
daa
icebp
insl
mov
psadbw
mov
push
dec
adc
bound
pop
mul
or
pop
mov
pop
les
push
cmc
ret
les
ror
mov
inc
xor
sub
jge
xlat
test
and
mov
clc
push
stos
adc
mov
stos
add
adc
push
loop
pop
into
adc
pop
in
cmp
imul
in
cmp
dec
out
dec
mov
lea
dec
in
stos
dec
mov
pop
xchg
add
test
repnz
call
mov
js
sub
xchg
xor
insl
adc
pop
adc
dec
movsb
xor
cmpsl
jp
pop
ljmp
insl
sahf
pop
pop
adc
sub
int
and
sub
bound
sarl
in
movsb
int
add
shr
movsb
sub
sti
in
les
inc
push
push
inc
push
adc
push
push
and
push
mov
cmp
loop
ljmp
mov
sti
push
pop
pop
mov
jno
add
sar
out
jmp
add
inc
push
xchg
and
and
arpl
jno
fcompl
mov
insb
test
sbb
dec
pop
add
and
push
insb
addb
jae
xor
fdivs
and
add
stc
bt
bt
stc
cmp
movb
pushf
lea
jb
pushf
cmp
pushf
push
pushf
lea
jae
shrd
rcl
mov
mov
cmp
not
mov
neg
mov
bt
pusha
xor
push
clc
repnz
movb
pusha
lea
jne
shr
shr
mov
bts
shl
btc
btr
sub
bswap
rcl
shl
cmp
mov
pusha
jmp
repnz
stc
mov
and
xchg
dec
xor
fstpl
mov
sar
insl
jo
xchg
mov
pop
sarb
mov
ljmp
pop
jp
sub
sbb
sti
cmp
cmp
dec
popf
pop
scas
or
loope
fildl
sahf
xchg
fadds
fnstsw
cmp
rol
add
dec
aaa
or
ret
xlat
or
mov
mov
dec
pushl
lea
jae
btr
rol
mov
dec
bsr
mov
dec
inc
mov
cmc
xor
push
pushf
cmp
test
repnz
movw
push
lea
jmp
jl
pop
stos
jnp
sbb
inc
adc
in
and
in
hlt
xchg
adc
sbb
das
adc
push
and
mov
dec
loope
int3
in
jg
jae
push
es
icebp
cmp
push
or
aam
mov
pop
dec
sahf
pop
negl
mov
or
push
enter
inc
cld
inc
push
ret
popa
cmp
bnd
add
fmuls
arpl
and
sbb
push
and
jl
push
mov
ja
add
loopne
dec
hlt
outsb
pop
sbb
aam
mov
fwait
out
cmp
inc
bound
nop
addr16
test
jg
les
and
cmp
fwait
outsb
mov
test
scas
ret
dec
adc
or
out
sub
call
mov
jno
les
fsub
pushf
and
rolb
and
mov
xchg
jp
incb
pop
es
insl
inc
sbbb
stos
lea
ljmp
es
add
mov
push
cmp
lret
jmp
inc
xlat
sub
enter
out
aas
ja
mov
push
xchg
sti
test
fldl
and
xchg
add
insl
xor
das
bound
pop
mov
dec
add
mov
mov
inc
cmpsl
insl
mov
inc
cmpsb
mov
push
int3
and
fwait
shl
pop
push
cld
loop
aad
and
push
insl
mov
cmp
imul
mov
mov
mov
cmc
repz
and
test
pushf
mov
sub
in
add
mov
push
fbld
cli
ret
inc
cld
xchg
jmp
add
dec
je
lods
pop
pop
repz
mov
leave
test
xor
divl
sbb
mov
cmpsl
jg
and
int3
into
push
loopne
jns
pop
push
push
xor
mov
sub
sti
addb
pop
call
mov
aad
adc
pusha
movl
call
jnp
xor
dec
lret
inc
ffreep
xor
gs
cld
aam
dec
sub
add
mov
cwtl
std
inc
insl
xor
cltd
mov
or
repz
out
jne
add
prefetch
aaa
xor
fildl
aad
adc
sub
imul
pop
pop
enter
jle
inc
mov
and
push
dec
negl
and
call
pop
jo
maxps
and
in
bound
out
cmp
add
aam
jecxz
int
cwtl
ja
out
jecxz
sub
jp
push
jecxz
dec
loope
jnp
fistl
in
clc
das
jp
xchg
nop
int3
std
xchg
mov
aam
inc
mov
sahf
adc
dec
js
push
mov
push
lcall
xchg
scas
lods
inc
mov
mov
outsb
xchg
popa
in
jnp
mull
sbb
loope
inc
insl
mov
pop
mov
daa
jbe
lods
fstpl
dec
lahf
xchg
cld
shl
mov
test
in
std
int3
mov
mov
shlb
pop
sbb
add
and
out
xchg
js
or
adc
dec
pop
cmp
mov
push
jecxz
out
outsl
fadd
pop
inc
test
cmpsb
mov
xchg
call
out
ret
push
sub
sbb
cmpl
or
bsr
push
jmp
lea
jbe
test
sub
push
xadd
sar
clc
mov
btc
lea
pusha
bswap
mov
sar
movsbw
add
bsr
mov
shr
shr
sar
bts
or
shr
mov
movzbl
add
mov
add
pushf
movsbw
mov
mov
mov
call
scas
addr16
leave
xlat
ret
ds
mov
icebp
iret
inc
aam
or
mov
add
lahf
mov
add
clc
les
popf
out
cmc
inc
int
les
lods
cwtl
xor
sbb
stc
push
pop
xor
orb
or
mov
mov
into
sbb
pop
inc
or
cmpb
insl
jnp
mov
cmp
loope
ds
in
cwtl
xchg
out
in
mov
std
and
cli
into
mov
xchg
push
lock
mov
imul
inc
addr16
inc
inc
lcall
outsl
sbbb
stos
mov
push
mov
cmp
scas
sub
cmp
je
or
mov
jne
dec
stos
add
push
cltd
adc
cwtl
repz
cltd
jmp
xor
scas
push
fsubs
cmpsl
lahf
lds
mov
cmp
loopne
mov
aaa
push
jno
dec
sbb
push
or
fcmove
aas
call
push
inc
scas
lahf
popw
xchg
push
cmpsl
stos
sub
and
int3
mov
enter
ja
mov
popa
fs
imul
add
mov
dec
pushf
shl
push
mov
bt
cmc
test
call
fisubl
movsb
call
out
sbb
sbb
push
dec
in
mov
dec
mov
je
mov
mov
imul
outsb
add
dec
scas
jne
lret
mov
ds
mov
in
push
sub
sub
cmc
mov
adc
mov
and
cmp
fildl
mov
mov
test
inc
jp
out
mov
push
daa
sub
fwait
dec
adc
mov
les
dec
sub
lahf
sbb
push
popa
dec
xchg
xchg
pop
leave
mov
xor
jo
popf
je
pop
push
push
pusha
inc
fimuls
imul
aad
mov
mov
pusha
out
bound
mov
rolb
imul
dec
xchg
aam
test
pmullw
or
mov
or
cmp
std
mov
push
dec
cwtl
ljmp
sbb
inc
lahf
add
mov
lret
cmp
into
sbb
daa
lock
sbb
test
in
and
adc
sbb
sub
add
fs
gs
int3
mov
sbb
sbb
mov
cwtl
ficomps
adc
test
mov
rclb
lods
iret
xor
adc
inc
xchg
mov
and
cmpsl
xchg
sub
test
jno
pop
mov
outsl
mov
and
call
lea
je
bt
movzbw
shl
not
add
mov
stc
and
dec
sub
or
shr
bts
not
sub
mov
shr
bsf
pushf
add
sar
cmc
setbe
add
call
movb
jmp
push
mov
call
jne
push
xchg
in
add
fwait
rcrb
inc
nop
mov
jb
pushf
ss
jmp
lock
in
loope
imul
jmp
lock
imul
insl
xor
cmp
enter
mov
xchg
cmp
xor
xor
xor
mov
xor
push
jo
mov
shlb
daa
scas
inc
lcall
and
inc
aad
out
inc
and
xchg
gs
mov
aas
jmp
cs
mov
xchg
push
xor
lods
dec
test
rorl
ja
jne
lods
mov
pop
das
xchg
sub
ljmp
mov
sbb
repnz
dec
inc
xor
xchg
repnz
in
gs
dec
cwtl
jnp
insb
push
je
loope
inc
ljmp
sbb
inc
sbb
mov
lock
sarb
and
ret
mov
push
cmp
and
adc
lahf
sarb
pop
push
sub
cld
mov
hlt
push
gs
enter
sbb
xchg
gs
in
push
push
lock
mov
inc
lahf
loop
mov
stos
mov
jl
jno
fldenv
mov
sbb
mov
adc
in
jne
pop
and
push
push
dec
adc
xlat
fnstsw
adc
lds
rorl
push
test
xor
andl
das
sbbb
insb
int3
pushf
fistpll
nop
add
rcll
or
es
pop
popa
cmp
rcrb
lret
in
mov
fimull
mov
dec
ror
sub
mov
bt
bt
add
bt
pushf
clc
mov
stc
test
test
mov
pushf
call
call
mov
bt
repnz
jmp
push
pushf
mov
jmp
add
push
push
js
arpl
gs
add
sti
sub
mov
jge
jb
cmpsl
fimull
mov
pushaw
std
ror
enter
jnp
fwait
repnz
and
ror
push
iret
jnp
scas
test
jge
outsl
mov
loop
sub
mov
pop
sub
es
cmc
xorb
inc
xor
sahf
inc
or
cmpsl
test
adc
cs
sub
sub
mov
fsubrl
cld
mov
cmpb
pop
cs
inc
mov
data16
pushf
adc
push
mov
push
mov
testl
mov
cmpsl
shlb
fdivr
dec
jne
loop
push
sbbl
dec
mov
pusha
and
daa
loop
jp
or
push
shrb
insl
sahf
dec
jmp
sub
mov
loope
repz
dec
pushf
xchg
mov
mov
mov
pop
adc
mov
int3
and
mov
dec
loopne
cwtl
out
es
clc
repnz
pop
leave
dec
dec
pop
fs
daa
jmp
sbb
js
and
cmp
das
push
bsr
dec
push
clc
movsbw
push
cmc
mov
shl
jmp
mov
int3
std
mov
xchg
daa
stc
test
icebp
jl
mov
sbb
inc
mov
test
jle
mov
mov
sub
cmpsl
daa
test
pop
pop
mov
push
cmp
mov
jge
or
adc
test
mov
mov
popa
addr16
imul
je
outsl
jns
dec
add
fsubr
mov
mov
pop
and
cmp
fisubl
inc
or
mov
mov
cmp
adcl
test
imul
add
push
dec
jge
mov
inc
and
cmpsl
pop
dec
push
sarl
mov
mov
mov
fwait
sub
je
push
leave
sahf
scas
imul
pop
scas
or
adc
pop
push
outsb
pop
into
sbb
mov
popa
push
add
int
mov
sbb
inc
push
in
pop
adc
sub
in
pop
out
dec
jmp
ljmp
mov
and
adc
inc
cld
xor
mov
movsl
aas
push
sahf
imul
or
jmp
xchg
mov
shll
call
loop
mov
in
test
movb
call
neg
push
pushf
pushf
bt
shr
lea
ja
push
pushf
lea
je
pushf
call
push
mov
inc
inc
seto
lea
jle
setp
mov
pushf
mov
push
movb
lea
call
push
adc
pushf
lea
jae
jmp
pusha
mov
lea
je
stc
bt
push
cmp
cmp
pusha
jmp
fcmovnbe
mov
jl
nop
mov
and
outsl
mov
and
inc
sbb
mov
gs
sub
xchg
mov
and
inc
mov
mov
mov
sub
scas
jno
pop
rcrb
mov
fidivrs
arpl
push
scas
cld
jp
pushf
pusha
mov
mov
dec
push
sarl
xorb
cmp
cmc
mov
mov
inc
bt
stc
cmc
call
lea
jae
pusha
jmp
cmp
cwtl
lds
aam
insb
xchg
xor
cli
xor
xor
rclb
pusha
dec
sbb
enter
sub
insl
js
cli
sbb
pop
sub
scas
push
push
and
push
test
inc
cld
jge
std
inc
rep
cmp
xchg
out
cmp
imul
imulb
and
stc
cld
sub
cltd
mov
dec
pop
and
loopne,pt
cli
push
jle
dec
or
sti
push
dec
mov
sbbl
sbb
ds
sbb
cmp
data16
cmp
stos
sbb
xlat
adc
add
popf
loop
xchg
shrb
shll
stc
in
sub
repz
movl
cld
push
lock
xchg
and
pop
fs
adc
cltd
mov
mov
inc
loope
loope
fs
jae
shr
rol
mov
btr
dec
test
movzbw
mov
shr
ror
pusha
shrd
mov
clc
xor
bt
repnz
pushl
lea
jne
cmc
shr
pusha
mov
rcl
not
shl
sbb
sub
bsf
lea
btr
lea
test
cmp
pusha
cmp
sub
pushl
pushl
popl
stc
push
push
cmp
pushl
push
call
pop
pshufw
xchg
adc
sub
je
sub
fistpll
jb
enter
data16
aaa
push
inc
test
rcrb
rcrl
sbb
enter
lret
out
aaa
mov
mov
inc
rcl
push
sbb
mov
xchg
movsl
mov
or
fdivrl
pop
inc
push
das
jo
sub
ficoms
jno
cmpsb
adc
mov
mov
sbb
and
jmp
mov
not
not
mov
movzbw
pop
push
pusha
pushf
pushl
ret
mov
and
xor
sbb
push
aam
fwait
xor
mov
out
lods
or
push
loopne
sub
das
outsl
lds
adcl
sub
movsb
sbb
inc
mov
sub
lea
shl
mov
mov
addb
xor
jecxz
xor
add
call
or
inc
push
sub
dec
mov
insb
movsl
mov
inc
adc
push
repnz
fwait
bound
and
lods
divb
push
div
rorb
iret
popa
and
and
repnz
cld
into
daa
push
stc
add
xchg
inc
dec
das
inc
xchg
sbb
jns
out
jg
imul
repnz
cmpsb
sbb
jl
and
movsb
test
sbb
adc
mov
jl
cmp
arpl
jnp
jecxz
imul
loopne
jg
ds
jo
inc
lret
scas
fists
mov
rolb
xchg
xor
rolb
das
ror
adc
jmp
xchg
inc
xchg
xchg
pop
imul
xchg
dec
cmp
stos
xor
xor
pop
inc
mov
push
xor
xor
inc
dec
push
lock
pop
inc
adc
enter
xchg
mov
cmp
mov
sti
mov
mov
mov
or
movb
lea
je
pushf
test
mov
add
call
sub
pusha
mov
bt
cmp
pushf
pushf
lea
ja
cmc
pushf
pusha
imul
push
add
pushf
pushf
pushf
lea
jmp
outsl
es
dec
fdivrp
pop
push
dec
fwait
jl
inc
mov
dec
add
sbb
jp
add
jl
cltd
push
jl
add
sti
xor
repz
incl
xor
xor
mov
ss
sbb
testl
in
jbe
ljmp
adc
stc
aas
mov
push
pushf
xor
inc
sub
fnstenv
sub
repnz
repz
ja
sbb
sub
adc
imulb
int
daa
or
adc
jl
cmp
scas
sbb
xlat
lds
scas
sbb
call
xor
cli
cmp
jbe
dec
ja
cmp
cs
out
mov
and
add
cmp
cmp
cmp
jmp
sub
mov
gs
dec
dec
fidivrl
mov
shlb
pop
jno
xor
sub
mov
sub
xchg
in
xor
jle
pop
cmp
mov
sub
lods
xor
sarb
mov
icebp
cmp
mov
and
sar
mov
cwtl
pop
popa
cld
sbb
jbe
and
rcr
fldl
scas
dec
or
jp
mov
xlat
sbb
in
mov
mov
and
push
dec
daa
fs
or
test
negb
add
push
mov
and
std
stos
arpl
jg
cmpsb
btrl
iret
sub
in
push
ljmp
out
ja
push
dec
cltd
xchg
jbe
lret
pop
add
pushf
frstor
adc
ret
adcb
cmp
cmp
xchg
adc
and
mov
insl
jb
sub
inc
xlat
in
hlt
movsb
clc
push
and
in
and
stos
or
push
jo
and
pusha
mov
jmp
sub
dec
fldcw
inc
cltd
lods
stc
test
lods
roll
push
movsl
jg
xchg
mov
popa
lret
adc
sbb
pusha
fwait
inc
xchg
xchg
inc
enter
cmpb
sbb
pusha
nop
xchg
xchg
bound
sbb
hlt
enter
xchg
in
lods
outsb
push
lods
bound
pop
in
cwtl
mov
aas
shrl
sub
mov
or
mulb
cmpsl
jecxz
ss
jbe
push
jmp
mov
xchg
popa
std
out
aas
into
aas
mov
dec
shll
jae
mov
iret
lods
iret
xor
sbb
or
push
std
sub
pop
or
adc
mov
cli
push
fiadds
adc
and
and
in
cli
push
xchg
mov
inc
dec
mull
push
test
aaa
mov
int
cmp
dec
push
addl
les
jge
adc
and
push
mov
scas
enter
sub
aas
mov
jbe
jp
and
ljmp
and
add
cltd
xchg
test
fdivrl
xor
fdivs
and
das
xchg
xlat
sub
lret
into
testb
call
push
shll
fbld
outsl
insl
test
cmp
rorb
adc
fisubrs
in
inc
mov
adc
aad
inc
jle
mov
imul
xlat
jmp
mov
loopne
sbb
sarb
mov
orl
pop
popa
xor
add
fidivl
mov
fcoms
cs
adc
lods
and
inc
out
mov
movsl
xlat
lods
adc
pop
pop
cmp
stos
out
jne
or
mov
xor
mov
and
or
insl
inc
stc
stos
push
dec
fwait
stc
ljmp
pop
dec
push
jno
xchg
lods
mov
or
call
lea
jo
fstps
mov
fimuls
bswap
mov
push
cmp
clc
add
clc
bt
cmp
jmp
pusha
test
movw
call
mov
or
out
stos
sti
movsl
jo
adc
outsl
xor
out
call
mov
push
cmpsb
outsl
push
sub
cmp
iret
movb
outsb
lds
incl
dec
outsl
push
aas
int3
dec
push
adcl
outsl
mov
loope
mov
push
xor
sbb
adc
cmpsb
inc
mov
dec
out
inc
push
mov
das
mov
lea
call
jp
pusha
pusha
movw
lea
jb
pusha
pushl
ret
and
in
push
imul
xchg
inc
push
loop
sub
xor
cmp
ljmp
mov
push
adcl
mov
aad
rcl
les
out
pushf
inc
mov
lahf
loope
cld
fmul
out
push
dec
rolb
outsl
jg
pop
pop
sub
mov
cmp
movsl
and
mov
popf
in
adc
aas
scas
es
ja
stos
loope
fucom
adc
sbb
inc
push
mov
lods
addr16
pop
stos
jp
shll
xchg
dec
shll
enter
nop
in
add
scas
push
xchg
push
inc
xchg
sarl
and
insb
mov
roll
push
enter
nop
mov
push
push
sbb
adc
push
push
jmp
imul
lea
fdivr
mov
jne
xchg
cltd
lret
pusha
pop
xchg
in
faddl
lret
push
icebp
inc
mov
in
push
mov
push
cmp
and
adc
add
xor
xchg
xlat
xorb
push
call
cld
js
add
out
into
in
fisttpl
or
sti
dec
mov
xor
rcrl
sbbb
cld
inc
mov
mov
fsubp
sahf
fadds
cld
daa
xchg
sbb
rcll
fcompl
dec
imul
adc
out
subb
scas
xchg
adc
lods
lret
outsb
inc
mov
out
imul
mov
xor
sahf
mov
adc
cmp
loope
fs
and
shr
clc
stc
bt
test
cmp
call
fildll
mov
xor
mov
dec
je
daa
push
mov
imulb
dec
int3
sbb
adc
sarb
or
jnp
mov
bound
enter
pop
and
cmp
aas
dec
dec
inc
xor
bound
nop
or
jg
cmpl
faddl
rcrb
test
fdivrp
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
fs
push
pushf
push
dec
inc
lea
pushf
xchg
lea
add
mov
add
mov
push
jmp
in
fstl
dec
out
xor
scas
jne
sub
lret
sub
push
paddsw
mov
leave
dec
xchg
cli
sahf
or
jmp
add
jl
fdiv
jns
aad
dec
xchg
cli
xchg
sbb
imul
std
or
out
test
adc
std
push
icebp
ret
test
mov
pop
in
sarl
int
add
mov
sbb
dec
adcb
jmp
pop
test
pusha
popa
lods
movsb
aam
ja
push
xchg
scas
jg
and
sahf
mov
fst
ret
vcvtsd2ss
mov
mov
xor
xor
test
xchg
mov
popa
mov
inc
idivb
test
sub
outsb
adc
mov
cmp
insb
and
jge
nop
push
movsb
push
pop
and
adc
inc
sti
add
stos
leave
mov
and
push
or
sbb
pop
or
dec
cmp
jne
and
aaa
jecxz
inc
cs
mov
mov
mov
movsl
insl
add
pop
mov
and
push
mov
out
fldt
mov
test
lods
mov
arpl
cmp
mov
into
push
mov
dec
add
jmp
data16
ret
push
loop
push
notb
push
ficomps
jmp
mov
xor
in
jg
xchg
pop
enter
out
cmp
popl
pop
cmp
aad
test
in
popa
testb
inc
lret
adc
inc
adc
sub
mov
out
imul
xchg
mov
loopne
sbb
push
dec
das
lret
imul
xchg
mov
rcrl
cmpsl
inc
lahf
cmp
loope
lcall
pop
loope
into
jbe
in
xlat
xchg
xor
or
mov
mov
inc
sbb
adc
out
repz
enter
imul
push
insl
dec
mov
sbb
clc
jmp
pusha
lea
jne
pusha
stos
pushf
pusha
push
lea
jmp
rcll
addb
mov
sbb
mov
and
sub
shlb
cmc
xchg
sub
jmp
sub
push
push
mov
jge
testb
dec
dec
xlat
pop
sbbb
cmp
push
cmpsl
int
mov
xor
jnp
add
loop
stos
jns
and
loope
xor
gs
jp
xchg
sub
nop
rclb
or
xchg
xlat
jg
mov
xor
fs
xor
cld
cmp
mov
mov
mov
lcall
popf
sbb
insl
jmp
mov
jge
sub
mulb
daa
test
dec
cld
daa
mov
mov
in
ljmp
cmp
icebp
xor
push
pop
ss
cmp
push
and
jne
ds
imul
adc
les
dec
in
adc
insl
popf
mov
and
repnz
xlat
out
mov
lcall
sbb
jp
xor
scas
jb
outsl
mov
jg
cmp
int3
push
dec
or
push
fcompl
aad
xchg
push
xchg
and
adc
pop
adc
pop
pop
mov
je
cmpsb
dec
sbb
std
cmpsl
movsl
insb
out
iret
mov
scas
xchg
sbb
arpl
pop
repnz
lahf
hlt
inc
cmc
jbe
add
subb
and
pusha
mov
lea
jae
cmp
bt
xor
push
movb
lea
call
pushf
pushf
lea
jae
stc
call
cmp
call
cmpb
jmp
lret
or
pop
ficoms
cli
or
pop
aaa
add
adc
mov
ss
mov
jae
in
push
test
std
mov
mov
scas
pop
stos
adc
xchg
adc
xchg
inc
xchg
fidivrs
push
adc
mov
fistl
dec
adc
jo
mov
gs
daa
roll
gs
mov
dec
iret
rorl
es
stos
push
and
in
addl
mov
outsb
dec
cmpsb
dec
shlb
mov
stos
pop
cmpsb
mov
mov
imul
mov
decb
ret
je
das
iret
clc
cmp
loopne
adc
inc
adc
pop
add
mov
sbb
je
add
pushf
xor
call
addr16
adc
jne
and
mov
push
sub
sbb
cld
outsb
mov
or
inc
mov
dec
jl
into
add
enter
or
pop
fiadds
inc
movb
adc
mov
xchg
lahf
cmpsb
push
jno
ror
inc
sbb
addb
mov
cmpb
jge
xchg
in
repz
add
and
dec
testb
addr16
xor
ljmp
jne
idiv
shr
cmp
btc
sub
bt
mov
rol
cmp
call
add
in
icebp
adcl
jno
test
mov
lahf
push
insb
or
and
inc
pop
xor
dec
cmp
dec
push
push
jo
scas
pop
pop
dec
dec
icebp
mov
aaa
jle
outsl
mov
jl
hlt
add
jo
out
out
add
adcl
pop
les
mov
sbb
fsubl
cmpsl
movsl
cmp
and
out
stos
pop
repnz
sarb
jno
ret
push
fwait
rorb
fidivl
or
loope
lret
dec
adc
fidivrs
data16
dec
add
lds
adc
sbb
jmp
xor
out
jmp
inc
pop
adc
or
fildll
push
fwait
or
daa
loop
sbb
xchg
call
imul
mov
imul
xor
in
mov
je
push
ror
pushl
call
pushl
call
push
mov
push
movsl
cld
mov
mov
adc
insb
pop
push
lods
mov
popa
inc
sub
cmp
mov
enter
cmp
adc
dec
sub
fdivrl
into
shll
jl
mov
or
test
inc
and
in
test
or
mulb
mov
push
cmpsl
add
test
inc
mov
outsl
out
xor
inc
mov
push
add
jmp
adc
mov
push
pusha
lea
jmp
adc
test
test
mov
push
call
movl
or
dec
or
aas
cld
rcr
push
mov
push
adc
movsl
dec
fisttps
int
jns
and
jp
ret
pusha
popa
dec
and
jmp
jmp
jns
scas
xor
cs
repnz
mov
notl
loop
jns
pop
clc
aad
mov
jno
dec
cld
and
or
je
insl
mov
addl
add
mov
ret
pop
or
and
or
lea
lea
call
pusha
pushf
jmp
pushf
movl
pushf
pushf
lea
jmp
pusha
lea
jne
jmp
add
rcl
mov
cmc
pushf
movb
test
pushf
pushf
lea
je
stc
test
sub
pushf
pushf
cmp
pushf
mov
jmp
push
dec
inc
dec
dec
xor
cs
insb
add
stc
aas
std
or
test
loop
sub
sti
jge
push
iret
or
mov
pop
add
dec
jge
bound
or
adc
sbb
pushl
das
ja
les
ret
mov
fimuls
sub
dec
into
jmp
lods
clc
adc
jo
fisttpll
movsb
push
in
mov
xor
mov
mov
cmp
loop
mov
jecxz
mov
fwait
pusha
mov
sti
sbb
mov
fnstcw
aad
aad
fsubr
cmpsl
adc
mov
es
sahf
or
imul
and
sbb
aad
cmp
inc
movsb
xchg
cmp
xchg
arpl
addb
out
out
inc
outsl
sub
arpl
jge
dec
repz
ljmp
push
sub
pop
imul
cltd
sahf
je
jo
cltd
call
aaa
push
push
lcall
rclw
test
inc
xor
push
mov
fidivs
push
mov
loopne
add
gs
push
jecxz
mov
add
scas
sti
unpckhps
xor
adcb
push
xchg
jecxz
dec
push
cmp
push
jl
push
ljmp
adc
das
mov
pop
insl
mov
push
in
ljmp
fidivl
fistpll
stos
push
in
arpl
jle
daa
test
mov
lods
and
popa
inc
xchg
inc
sub
decb
insl
jns
mov
test
arpl
ret
jl
jecxz
sub
rclb
jg
test
adcl
in
lret
ss
dec
inc
subb
jmp
das
cmp
pop
pushf
pusha
jmp
lea
je
pusha
cmp
pushf
lea
jae
cmp
call
ljmp
sub
hlt
mov
adc
lcall
lds
rclb
enter
mov
das
sub
rclb
sti
mov
aas
mov
sub
push
sub
cwtl
mov
lcall
mov
popf
xchg
in
inc
ljmp
nop
mov
cld
or
test
pop
and
push
test
into
out
ss
int
int
in
add
add
add
inc
adc
addr16
test
and
add
insl
imul
insl
push
gs
popa
jb
add
test
repnz
pushl
lea
jmp
std
js
cmpsb
mov
ss
sub
enter
dec
cld
and
jb
xor
dec
xchg
das
imul
cld
in
dec
jmp
jge
jge
jo
push
mul
sub
movsb
jno
stos
adc
jg
int
sbb
sub
jns
or
leave
mov
pop
insl
cld
sbb
icebp
stos
fildll
mov
or
xor
push
aam
adcl
sub
insb
and
cmp
int3
push
into
insl
xchg
daa
nop
xor
pop
jmp
xor
jb
inc
mov
scas
cmp
and
jmp
xor
or
pop
decl
add
lahf
fbld
jl
sbb
push
mov
push
shrl
fbld
cld
ss
inc
loopne
xchg
cltd
mull
dec
sbb
jae
mov
scas
adc
sub
dec
or
out
dec
cmpsl
mov
push
out
and
pop
decb
outsb
jg
sbb
mov
lds
leave
subl
jno
pop
addr16
popa
or
sub
movsb
clc
shll
and
fnstcw
xchg
push
pop
mov
inc
pop
mov
pop
bt
repnz
pushf
movw
movw
lea
jmp
pushf
pushl
lea
je
pushf
movb
bt
add
cmp
cmp
pusha
mov
lea
jb
push
jmp
jmp
push
push
lea
jne
call
outsl
insb
gs
cs
insb
add
add
dec
cmpsl
and
fs
jmp
bt
rol
push
bt
xor
bt
clc
stc
stc
sub
test
cmp
call
cs
insl
aaa
sub
rcl
push
outsb
sbb
insb
sbb
xor
adc
insl
dec
jns
shr
mov
stc
inc
in
lods
inc
sbbl
jp
mov
aad
mov
in
and
mov
shr
imul
sbb
xchg
inc
pushf
jp
aam
push
push
pusha
mov
pop
pop
fsubr
scas
cmp
out
sub
test
jle
in
rol
imul
sbb
mov
stc
push
mov
les
add
jmp
lahf
jecxz
xchg
mov
loop
push
mov
lea
jae
mov
pushf
push
lea
jmp
rcrl
cld
call
dec
mulb
cmpl
fcoms
push
push
jmp
enter
pop
mov
nop
cli
movsb
fstps
xchg
inc
js
dec
jle
bound
enter
insl
pop
mov
push
xlat
and
loop
notb
push
test
push
fdivrl
jecxz
jnp
shl
fidivrl
mov
jns
enter
aas
xchg
jmp
cmp
jge
fwait
inc
fistpll
cmp
call
movb
cmp
idivl
into
lret
jge
out
push
ror
icebp
jle
add
xorb
mov
cld
lcall
das
xorl
and
lods
addr16
add
movsl
push
fwait
push
dec
fistl
mov
jb
scas
adc
sti
testl
mov
mov
jae
mov
in
mov
inc
xor
pop
addr16
jmp
xchg
or
pushf
xor
jmp
popl
jl
dec
mov
xor
pushf
xor
xor
push
sbb
icebp
inc
inc
xchg
mov
repnz
cmpsl
mov
lods
inc
and
lahf
outsb
jne
loope
mov
sbb
ss
iret
enter
insl
sub
inc
add
les
insb
xchg
or
dec
push
loopne
sub
mov
sti
push
js
repz
dec
hlt
pop
mov
in
ja
lea
jno
add
call
or
sub
stc
adc
sbb
inc
or
sbb
cmp
inc
lcall
cmp
mov
xchg
push
push
jmp
mov
pop
outsb
jle
jmp
aaa
test
mov
lods
cmp
lcall
dec
pop
idivb
and
inc
cld
sbb
adc
jge
shlb
push
sbb
mov
or
roll
mov
jg
xchg
and
mov
outsl
cmc
lods
pusha
pushf
add
pushf
jmp
lea
je
stc
sub
jmp
add
inc
push
inc
outsl
insb
outsl
jb
add
imul
push
mov
lret
xrelease
insb
call
inc
loop
pop
mov
aad
sbb
jae
mov
sbb
push
jle
pop
lods
sub
and
mov
fsub
cmp
dec
nop
mov
int3
call
cltd
xlat
addr16
dec
or
aam
cmp
fwait
sub
std
or
enter
scas
inc
push
pushf
jb
cmpsl
push
xchg
pushf
mov
mov
ss
jae
pop
imul
movb
pusha
bt
ror
pushf
push
push
inc
clc
xor
mov
cmc
test
cmp
call
test
add
push
push
cmc
in
sbb
jnp
or
int3
xchg
fdivr
mov
push
dec
inc
out
add
cmpsb
xlat
lret
jle
cli
xor
push
out
sbb
fidivrs
leave
loope
mov
add
inc
adc
pop
inc
mov
imul
push
or
dec
add
adc
mov
xchg
pushf
sahf
test
jmp
sbb
and
cmp
pop
sub
add
aaa
xchg
push
rclb
fadds
cmp
push
ds
inc
mov
ja
pop
push
dec
jns
pusha
mov
test
fldenv
jmp
pop
and
pusha
cmpsl
shl
cmpsl
jl
cmpsl
cmpsl
xchg
and
jecxz
jmp
cmc
or
mov
pushf
test
movsl
andl
daa
test
scas
add
stos
inc
stos
mov
xchg
mov
in
stos
lahf
pop
sub
jmp
cmp
inc
xorl
test
mov
jecxz
cmp
mov
shrb
push
dec
out
dec
out
ds
push
mov
mov
jmp
test
mov
mov
mov
mov
imul
cmpsb
je
cmpsl
movsl
ret
sub
mov
xor
daa
sub
push
es
stos
test
cli
xchg
mov
jmp
mov
lea
int
jno
mov
push
add
sbb
sub
xchg
mov
fistl
push
pop
sbb
lcall
push
lahf
push
sbb
dec
movsl
sbb
push
pop
add
mov
mov
cmpsl
cltd
mov
cltd
mov
rcrl
fcompl
adc
push
stos
pop
lcall
mov
mov
out
xchg
sbb
ret
lahf
pop
insb
cltd
rcrl
sbb
fisubrs
fwait
xchg
xchg
fcom
fistps
pop
inc
movsb
adc
inc
mov
mov
adc
movsl
mov
test
push
jmp
and
mov
stos
aas
mov
xor
jmp
mov
dec
btc
aas
mov
jbe
pop
pop
push
mov
mov
icebp
mov
je
jmp
ficoml
inc
sbb
jne
mov
or
inc
fstpl
cmpsl
sbb
mov
push
cmpsb
ret
sbb
pushf
sub
loope
mov
imul
cmc
sbb
out
cmp
xchg
jb
call
popf
sbb
pop
mov
adc
mov
repz
mov
test
xchg
mov
mov
mov
pushf
mov
roll
cmpsb
jne
sarb
push
or
mov
mov
fs
loope
jecxz
sbb
cmpsb
push
out
cmp
stos
push
cmp
ret
mov
out
cltd
stos
mov
ret
fldenv
jg
loope
cltd
or
out
cmpsb
cs
mov
push
mov
push
jge
scas
push
jmp
jns
mov
push
cli
xchg
stos
test
pusha
ss
mov
cmpsb
mov
push
test
mov
insl
xor
stos
adc
aad
je
mov
cltd
or
ret
mov
aas
mov
or
shll
adc
in
fmuls
shrb
insl
mov
cmp
out
fnsave
hlt
mov
stos
arpl
xchg
push
add
mov
jne
inc
mov
xor
jae
adc
inc
mov
xchg
adc
stos
lods
cs
lods
push
inc
arpl
push
negl
mov
nop
ret
cmpsb
jae
out
mov
xor
mov
and
push
mov
nop
je
fiadds
mov
cmpsb
push
inc
mov
in
sarb
loopne
mov
sbb
test
aad
insl
adc
repnz
shlb
sub
mov
cltd
mov
gs
push
cmc
xchg
pop
mov
outsb
xchg
pushf
out
sbb
aam
inc
stos
adc
mov
cmp
xchg
xchg
mov
pop
sub
mov
shlb
neg
push
pushf
sbb
inc
mov
jne
rorl
nop
fadd
push
mov
stc
lock
jne
rcrb
mov
shll
mov
movsb
test
inc
mov
sbb
mov
movb
sub
popf
xchg
add
imul
push
test
mov
pop
jecxz
shrb
mov
mulb
xchg
jp
cltd
mov
adc
and
test
ss
test
and
pusha
dec
test
cmp
mov
mov
test
push
movsb
pop
movsb
inc
movsb
arpl
adc
mov
sbb
mov
jmp
stos
xor
xorb
rcrl
test
scas
cmpsb
cwtl
addr16
insl
mov
insb
shll
bound
test
xchg
push
lahf
mov
aad
cmpsb
pop
mov
imul
fistl
jge
icebp
cmp
leave
push
popf
enter
sub
sub
sub
and
out
jne
xchg
roll
sub
push
fs
out
and
or
ljmp
xor
clc
cmpsl
push
rorb
adc
int
mov
ret
scas
fstpt
ljmp
pop
sub
jle
fimuls
test
movsb
sbb
mov
cmp
sarl
out
jmp
loop
mov
ret
sub
shll
je
mov
xor
xchg
nop
stos
sub
aaa
mov
push
fdivl
pushf
rcr
fimull
les
mov
push
pushf
inc
in
jmp
or
popf
jae
xchg
into
xlat
sub
jg
leave
sub
inc
mov
lods
jg
fnop
insb
mov
ficoml
in
and
aam
in
and
add
es
xchg
mov
xchg
mov
lret
mov
cmpl
stc
jb
dec
subb
sub
mov
repnz
jle
aas
mov
test
clc
push
ja
sti
inc
or
out
sub
dec
repnz
daa
pop
jns
in
js
aas
jl
in
cwtl
rcr
shr
add
lcall
stos
pop
pop
insb
sbb
push
add
lahf
adc
cmpsl
shlb
shr
fistps
fldt
cmp
and
fists
in
inc
stos
pop
cs
ret
sbb
daa
or
cltd
pop
mov
push
das
dec
xlat
pusha
xchg
out
cmp
pop
insl
push
iret
mov
xchg
ret
cmpb
loope
pop
pop
sbb
and
fcoml
add
in
inc
cvtpi2ps
push
pop
enter
andb
mov
dec
sub
xchg
cmp
or
mov
mov
pop
lahf
and
fcomps
in
fistps
inc
xchg
cmp
jecxz
test
insl
cmpb
outsb
stos
pop
add
sbb
sahf
rclb
imul
and
ret
xchg
mulb
xchg
fisttps
sbb
add
in
push
xchg
fmuls
pop
push
fucom
popf
in
lcall
push
push
xchg
jecxz
sub
dec
sbb
test
fsubl
xchg
mov
mull
daa
cmpl
and
jb
mov
jae
mov
dec
mov
cli
mov
adc
mov
shll
ja
sub
cmpsl
aas
in
pop
out
sbb
jp
mov
mov
mov
int
dec
pop
andps
lock
repz
and
mov
mov
or
movsl
mov
icebp
cmp
mov
mov
jbe
mov
inc
xchg
mov
mov
mov
stos
cmpsl
jp
dec
xchg
es
jns
fistpll
mulps
addr16
jbe
push
icebp
inc
jno
cmpsb
cmp
dec
mov
xchg
inc
pop
jle
adc
sub
pop
adc
and
fdivrl
jmp
lods
lahf
pop
add
or
or
or
sti
cmp
sbb
sbb
xchg
mov
cmpsl
or
sub
loop
mov
add
ss
cmp
adc
lret
scas
fdivr
adc
testl
es
mov
pop
lret
sti
sub
push
test
cwtl
mov
arpl
femms
bnd
jmp
sti
or
es
sub
stos
mov
adc
cmpsl
daa
sub
insb
pop
pop
lahf
jge
and
xor
fmull
daa
cltd
movsb
pop
cwtl
rol
cwtl
add
call
mov
sahf
mov
popf
movsb
mov
daa
xchg
push
add
xor
pop
ds
mov
fldt
lock
sbb
mov
repz
pop
push
lea
rcrb
xchg
in
mov
jg
dec
mov
pop
cmp
test
cs
pop
or
mov
push
adc
dec
aas
stos
mov
jmp
mov
out
cmpsl
or
mov
sub
mov
and
aaa
test
mul
and
dec
mov
dec
in
arpl
mov
cmp
mov
call
sub
popa
je
ja
in
sub
cmp
sbb
and
mov
mov
cmp
leave
bound
scas
add
pop
or
mov
inc
xchg
test
ss
dec
cmpsb
push
sub
mov
in
loop
mov
sub
xor
cmp
jecxz
jbe
movsb
shlb
nop
mov
ret
cmp
mov
stos
test
stos
mov
dec
int3
inc
jb
mov
shll
mov
mov
sub
daa
cld
and
sbb
pop
cmp
jmp
and
cmpsb
sub
fcompl
cmp
fwait
scas
xchg
xor
imul
cmpsl
adc
sub
jns
cmpsl
out
mov
inc
push
sub
scas
cmp
fildl
xorl
mov
mov
cmp
loopne
sti
lods
cmpsb
inc
test
pusha
push
pop
push
mov
popf
mov
popf
dec
inc
call
pop
xchg
or
and
mov
mov
xor
mov
xchg
mov
ret
cmp
push
push
mov
mov
mov
mov
sub
xchg
daa
ss
cmp
xchg
mov
fldcw
in
sub
subl
push
mov
jmp
mov
aas
test
mov
enter
stos
movsl
mov
lock
sti
test
cwtl
mov
mov
cmpl
xor
sysenter
xor
jp
icebp
push
cmp
lock
mov
adc
bound
fs
or
mov
out
in
mov
xlat
test
cmpsb
mov
jmp
mov
jmp
dec
or
dec
and
mov
es
and
daa
loop
cmp
jle
loop
mov
test
adc
mov
jne
mov
and
xchg
mov
es
mov
sub
cltd
mov
es
mov
sub
popf
mov
es
mov
daa
and
cmpsl
andl
and
cmpsb
xchg
and
mov
movsl
mov
and
lea
es
mov
and
mov
arpl
mov
and
mov
bound
mov
and
mov
mov
mov
mov
xchg
mov
mov
jg
movsl
mov
jmp
cmpsl
mov
es
decb
cmc
sub
lods
push
scas
mov
stos
jno
icebp
xor
lock
into
or
or
cmpsb
test
sub
push
cmpsl
es
push
es
call
repnz
dec
push
sahf
jo
fs
xor
jl
stos
jecxz
pusha
mov
stos
movsl
cmp
jmp
stos
ds
and
mov
loopne
jle
jg
mov
xor
xor
dec
stos
repnz
in
movsb
in
imul
jg
sahf
sub
push
jp
sub
mov
adc
cmpsb
sub
movsl
sub
mov
lea
add
imul
sub
out
sub
cmp
outsb
test
cmp
adc
mov
pusha
jg
dec
popa
sub
mov
out
test
sub
jecxz
fs
and
mov
repnz
cmp
mov
out
mov
mov
movsl
test
and
push
out
test
fs
movsb
in
clc
mov
mov
cmpsb
bound
cltd
arpl
dec
in
mov
sub
cmpsl
push
ljmp
sub
bound
in
sub
sub
sub
cmpsb
and
stos
popa
pop
movsl
mov
loopne
ds
mov
sub
jge
jp
loopne
ds
and
jecxz
pusha
mov
cltd
and
loopne
scas
aas
xchg
jmp
cmpsl
movsl
push
sub
mov
add
jns
lret
daa
sub
push
jle
movsl
mov
mov
sbb
mov
mov
mov
sub
sub
jl
daa
and
sub
mov
ds
cmp
mov
or
sub
or
sbb
xchg
and
mov
cli
out
sub
movsl
aad
addr16
arpl
mov
fildll
mov
mov
clc
sub
test
or
mov
ss
movsl
out
movsb
ret
js
ss
mov
sub
test
or
arpl
cmp
cltd
mov
jge
sub
js
jecxz
xchg
nop
mov
loopne
enter
movsb
cmp
sub
fldenv
and
jnp
mov
movsl
cmp
sub
xor
mov
or
shlb
sub
and
mov
jge
mov
mov
subb
xor
fs
cmpsl
add
call
sub
ret
xor
xor
movsl
pushf
sub
addr16
cltd
mov
xor
sub
out
aas
popf
jle
stos
mov
aad
push
mov
stos
xor
test
fisubl
mov
test
mov
inc
sub
in
sub
mov
iret
pop
push
ds
jmp
and
jg
sub
dec
in
aad
ja
mov
ljmp
popf
or
mov
sub
adc
ljmp
dec
xchg
out
cmp
pusha
mov
and
cs
test
sub
in
cmp
lret
int3
or
sub
and
sub
test
bound
ja
loope
sub
add
jns
bound
mov
and
mov
bound
or
push
mov
sub
movsl
and
adc
testl
jmp
test
sub
push
mov
cltd
ljmp
dec
jecxz
aad
and
xchg
jg
xchg
jl
popa
aad
push
pop
sub
imul
lds
sub
and
mov
mov
xor
mov
sub
fs
mov
pop
sub
subl
pusha
movsb
sub
ret
mov
test
sub
arpl
mov
cmp
mov
sub
cmpl
pusha
sub
jg
jmp
jp
push
aas
cltd
and
add
and
sub
mov
sub
jecxz
mov
test
lahf
cli
fucomip
fs
push
cwtl
movsb
and
movsl
lods
movsb
lret
mov
inc
in
cmp
mov
test
jbe
sub
cltd
popa
int
movsb
mov
jge
jno
ljmp
sub
jecxz
jecxz
jp
mov
and
cmp
jl
pop
mov
mov
enter
out
mov
pusha
push
jg
jmp
mov
sub
pop
movsl
and
sub
in
jge
sub
arpl
or
sub
cltd
jecxz
mov
sbb
cld
sub
and
mov
xor
pop
add
daa
les
ret
xlat
mov
call
mov
arpl
inc
xchg
mov
aam
inc
sub
jns
sbb
mov
js
cltd
and
mov
sbb
movsl
xor
stos
es
movsl
push
jecxz
int
cmp
gs
cltd
jge
mov
ds
mov
arpl
and
sub
bound
in
dec
push
mov
sub
call
sub
movsl
adcl
sub
adc
pop
sub
cs
sub
cmpsl
int
cmp
daa
xchg
mov
mov
sbb
ret
sub
xchg
jbe
sarl
call
mov
in
cmpb
nop
mov
das
es
outsl
cmpsl
mov
movsl
push
and
and
loopne
ds
mov
cmp
adc
or
jge
cmp
mov
test
or
fs
jmp
mov
or
sub
mov
cmpsl
cli
movsb
mov
sub
mov
sub
cmp
sub
cmc
jg
popa
lret
jo
in
jge
and
loopne
lods
xor
inc
sub
xchg
test
jecxz
int
es
mov
jge
jmp
xor
int
daa
ret
sub
xor
bound
arpl
and
jb
mov
sub
mov
jns
subl
xor
or
mov
call
mov
cltd
loop
pusha
addr16
test
pusha
sub
call
cmpsl
idivl
sub
mov
sub
mov
lret
ret
and
cs
out
jge
mov
mov
sub
sub
mov
mov
and
in
ret
and
fs
and
movsl
sub
movsb
cld
xchg
in
lret
and
loope
sub
arpl
sub
push
jecxz
fs
fidivrl
popa
xor
and
mov
test
ret
jge
enter
sub
mov
mov
and
lret
and
mov
sub
jecxz
fs
and
in
and
movsl
in
push
or
bound
mov
fs
pop
aas
inc
jg
jmp
cmp
jle
in
orb
add
ds
movsl
push
movsb
out
jle
bound
arpl
in
cmp
cmpsb
sub
imul
adc
mov
mov
shrl
mov
or
jl
movsl
pushf
mov
and
ret
sub
mov
es
mov
jp
mov
sub
jp
cmpsl
mov
test
jge
cli
mov
mov
cmp
mov
popf
jmp
jge
addr16
sub
out
dec
imul
stos
ljmp
jmp
push
call
mov
fs
mov
cmp
js
test
cmpsb
pop
mov
addr16
sbb
subl
dec
mov
andl
test
fs
das
jnp
loope
pusha
mov
xchg
daa
cwtl
mov
test
push
lret
sub
jge
arpl
sahf
test
mov
and
or
sub
add
adc
aaa
or
popf
rcll
mov
or
mov
or
test
ja
lret
imul
pop
daa
test
xchg
mov
mov
and
mov
xchg
and
jg
mov
mov
ljmp
sub
test
call
aas
jecxz
scas
and
in
mov
xchg
mov
sub
daa
mov
loopne
scas
jge
movsl
movb
mov
sub
in
cs
xchg
add
jg
sti
pop
andb
addr16
or
or
mov
cmp
cmpsl
cltd
call
test
arpl
in
ds
cmpsb
and
scas
cmpsl
lcall
out
push
fisubrs
out
mov
nop
mov
mov
stos
sub
push
add
lea
mov
jmp
jae
stos
and
andb
sti
xchg
sub
sahf
sub
test
popf
daa
jge
mov
pop
pop
and
and
xchg
sub
popa
aam
mov
ljmp
sbb
mov
in
push
imul
and
aas
cltd
mov
subl
lea
adcl
pop
push
in
add
jg
in
addr16
das
ljmp
lret
cmpb
test
push
test
repnz
ret
or
push
test
lret
lahf
movsb
test
addr16
inc
imul
sub
mov
test
call
sti
sbb
lods
sub
and
add
orl
xchg
xor
stos
mov
add
mov
push
pushf
mov
sub
out
and
loop
es
mov
adcb
cmpl
aas
xor
cltd
popf
sub
cmp
lods
jmp
test
addb
add
popa
xor
pusha
xchg
jecxz
push
mov
jl
movsb
jae
mov
repz
add
pushl
xchg
jmp
test
pusha
mov
sub
mov
jb
mov
loop
mov
subl
addb
call
and
mov
adc
xchg
fisttpl
mov
inc
push
in
and
mov
stos
loop
sub
enter
xorb
add
icebp
repnz
push
xchg
mov
adc
lock
and
jecxz
and
and
test
es
adc
mov
movsb
popa
and
leave
push
adc
pop
mov
test
cmpsb
ret
sub
mov
sub
adc
je
mov
mov
mov
cwtl
sub
xchg
xchg
xor
and
sbbb
mov
mull
sub
test
mov
ljmp
and
arpl
and
xchg
stos
xchg
bswap
dec
rorb
es
data16
aas
xchg
ds
fs
sub
subb
mov
jg
mov
xchg
mov
or
mov
xchg
cwtl
sub
sbbb
jmp
or
movsl
mov
push
sub
mov
xchg
das
enter
mov
sub
sbb
lret
xor
mov
lcall
lahf
push
cmp
cmp
mov
mov
lods
aad
pop
jmp
out
into
dec
mov
mov
out
out
xor
xchg
js
mov
or
and
andl
sahf
adc
cmp
xchg
mov
or
mov
lea
inc
push
cmp
jmp
jmp
dec
rep
mov
imull
rep
repnz
popa
shld
lret
int
or
aas
and
xchg
mov
clc
mov
xor
scas
mov
sub
or
pushf
mov
test
lea
int3
lret
or
stos
test
adc
pop
loopne
ljmp
cmc
cmpsl
lods
mov
jae
pushf
mov
jge
add
and
andb
popa
movsb
ret
mov
and
pushf
xchg
cltd
lods
jg
push
or
rolb
shrb
dec
mov
repz
jmp
aas
test
adcb
sub
add
xor
cmp
push
add
cmp
mov
mov
repz
lret
dec
xchg
adc
je
lcall
cmp
xchg
jecxz
test
mov
in
push
or
xor
stos
int3
test
lret
cmpsb
push
mov
movsl
sbb
cmpsl
mov
lret
xor
jecxz
cli
add
mov
jmp
fisttpl
cmpb
lahf
lods
xchg
insl
rolb
and
cmpsb
cmp
loop
jo
notl
loope
jg
and
lock
xor
loop
cmp
mov
sbb
cmp
cmpsl
mov
andb
ljmp
mov
pop
icebp
scas
addr16
lods
imul
add
jnp
test
inc
and
cmpsl
test
add
lret
push
add
rorl
movsl
data16
imul
mov
xchg
adc
adc
push
movsl
mov
or
andb
mov
mov
and
xchg
jmp
mov
enter
xor
sti
popf
or
adc
lea
or
iret
push
jecxz
stos
mov
sub
adc
sti
xchg
inc
mov
mov
mov
pop
lret
mov
add
jecxz
pop
iret
add
lret
shrb
sbb
sbb
xor
or
test
jecxz
cmp
orl
jg
add
adc
dec
xchg
ljmp
loop
aas
clc
inc
and
es
cmpsl
in
sub
sbb
add
add
mov
sub
xchg
xchg
lret
scas
cmpsb
sub
mov
mov
or
sub
mov
lcall
push
scas
ljmp
add
add
sub
cmp
or
mov
xchg
lahf
fwait
test
sbb
js
in
add
pop
test
mov
lret
fsub
mov
xorb
mov
scas
les
xchg
pop
and
test
sbb
jae
xchg
and
mov
mov
mov
add
sub
sbb
or
movsb
mov
cmpsb
mov
xchg
xlat
mov
call
sbb
sub
sub
and
incb
stos
push
xchg
mov
aaa
data16
cmpsb
push
mov
adc
es
cmpsl
mov
mov
mov
icebp
cltd
or
sbb
mov
test
test
lea
dec
jmp
and
call
loop
loop
xor
aaa
out
mov
sub
push
sub
xchg
mov
add
push
mov
inc
inc
mov
daa
mov
stos
fwait
bound
andl
fwait
xchg
add
xor
cmpsb
stc
mov
add
add
adc
ret
cmpl
xchg
cmp
loope
cmpsl
fsts
mov
jb
loop
add
pop
xchg
adc
sub
jmp
jmp
add
fnsaves
or
ds
loopne
inc
repz
in
xchg
mov
mov
popf
sti
or
xchg
fwait
pushf
and
or
add
ret
stos
adc
and
mov
lret
cmp
cmpsl
jle
lret
int3
mov
lods
ljmp
test
lea
mov
cmp
loope
jo
loope
cmpl
cwtl
test
stos
ret
cwtl
lret
mov
push
inc
and
mov
test
add
sub
addr16
enter
cmp
sub
pushf
es
loop
sub
lret
jecxz
xor
test
pop
test
add
mov
xor
xchg
mov
or
mov
cmc
repz
mov
sub
in
cmpsl
sahf
lods
cmp
out
sbb
mov
sahf
xchg
mov
mov
or
mov
lock
subl
es
xchg
pop
lret
subl
pop
clc
jecxz
mov
wrmsr
popa
xchg
or
sub
test
mov
lods
cmp
movsb
daa
push
pop
test
cs
mov
ds
sbb
jbe
push
sub
stos
and
sti
mov
mov
movsl
add
subb
lcall
or
testb
loope
bound
mov
pop
cmpsb
add
ljmp
xchg
setb
and
test
mov
xchg
adc
mov
add
adc
ret
lods
cmp
ds
sub
adc
sub
inc
push
scas
bound
jge
loopne
clc
mov
add
sub
loopne
cmp
movsl
movsl
pop
lret
leave
or
inc
fs
lret
and
fs
clc
cmpsb
add
adc
loop
ljmp
test
lahf
add
repz
rcrl
mov
xchg
mov
out
and
cmpsl
push
jg
push
xchg
daa
test
nop
js
ss
mov
mov
es
and
mov
lahf
pop
mov
sub
sbb
ljmp
test
mov
inc
popa
and
les
push
sub
mov
dec
lods
cmpsb
jg
or
hlt
lret
mov
mov
es
mov
stos
or
testb
xchg
je
outsb
loope
fbstp
cmp
sbb
and
daa
lahf
mov
mov
mov
lcall
mov
fisubrl
jmp
sahf
ja
movsb
cmp
or
push
cmp
mov
loope
movaps
lret
push
or
cltd
pop
cli
and
aaa
mov
mov
sbb
mov
es
scas
pop
or
jo
and
mov
lahf
stos
push
mov
sbb
jae
jmp
jmp
mov
mov
movsl
pop
jmp
es
xchg
scas
mov
mov
add
lahf
adc
fmull
xor
movsl
bound
push
loopne
pop
mov
mov
push
inc
mov
mov
enter
xor
jmp
test
xchg
out
mov
adc
fs
movsb
fimuls
sbb
or
mov
mov
out
scas
xchg
test
mov
sub
pop
out
xor
in
mov
or
popf
stos
nop
cmpsb
add
push
add
sahf
sub
sub
mov
mov
lods
in
call
test
mov
add
test
push
jecxz
push
adc
mov
andl
mov
xor
pusha
js
jmp
fldenv
scas
push
xchg
mov
add
in
daa
pop
xchg
mov
mov
or
mov
mov
mov
sbb
or
sub
mov
pushf
lahf
sbb
jge
add
xchg
pushf
mov
test
mov
xchg
es
and
add
loop
adc
das
and
das
out
jecxz
mov
jecxz
mov
lahf
add
mov
pop
jecxz
ljmp
aaa
out
cmpsl
xlat
push
daa
and
xchg
imul
mov
jmp
adc
movsl
cmpsb
sub
mov
cwtd
lret
mov
mov
cmpsl
icebp
cmpsl
call
js
nop
mov
xchg
mov
dec
cmp
outsb
loop
addr16
aas
movsl
inc
lods
sarl
push
mov
xrelease
into
test
es
rcrb
ljmp
mov
xchg
push
fxch
adc
aaa
jmp
sub
movsl
sub
sahf
mov
mov
mov
mov
xor
pop
mov
imul
add
or
pushf
fimull
jbe
data16
pushf
bound
lods
aaa
mov
xchg
cld
and
xor
in
andl
mov
cld
daa
in
scas
mov
mov
lahf
mov
fs
in
mov
ljmp
xchg
lea
xchg
or
jge
and
ret
jp
push
es
loop
pop
push
pushf
call
in
test
lret
xchg
xchg
xlat
push
notb
xchg
mov
ja
mov
sub
push
and
mov
lret
pushf
jmp
notl
lods
popa
inc
popf
inc
pop
push
loop
mov
movsl
push
loop
xchg
sbb
lret
jg
pop
test
inc
mov
andl
es
xchg
sbb
mov
cmp
fnstenv
ret
sbb
mov
adc
fwait
pop
xchg
push
mov
cltd
sub
add
sub
xchg
dec
jmp
mov
mov
cmpsl
loop
aas
and
and
stos
sarl
push
es
adc
test
xchg
xchg
sbb
adcl
inc
sbb
mov
push
mov
sbb
or
jecxz
sbb
scas
mov
push
xchg
orl
popf
ss
or
pop
data16
or
cmp
add
xchg
adc
das
jmp
inc
mov
mov
fstpt
popa
mov
movb
cmpb
test
sub
in
xchg
mov
and
mov
jo
adc
xor
sub
dec
leave
mov
fwait
mov
in
in
xchg
mov
cmpsl
sub
add
rcrl
loop
pushf
mov
shrl
sub
popf
pop
cmpsb
mov
xchg
flds
es
and
negl
mov
push
bound
push
aaa
movsb
inc
test
xchg
das
enter
orl
mov
mov
popf
mov
sub
mov
mov
adc
add
orl
xor
mov
adc
jmp
loop
test
jl
es
cwtl
jbe
jmp
daa
loope
adc
test
mov
or
loope
mov
popf
xchg
mov
lret
test
fisttps
mov
popf
xor
movb
mov
sar
xchg
xor
or
ret
sbb
lods
gs
filds
mov
xchg
adc
add
mov
mov
mov
cmpsb
pop
addr16
icebp
adc
cmpb
rorb
or
dec
mov
xchg
sahf
xchg
cwtl
xchg
testl
cmpsb
push
inc
xchg
mov
aaa
test
add
in
insb
xor
pop
data16
ret
mov
cmp
push
mov
es
rorl
mov
mov
test
mov
push
mov
lcall
adcl
nop
mov
and
cmp
mov
push
jle
and
pushl
sbb
push
xchg
adc
mov
movsb
sahf
sbbl
movsb
mov
sbb
mov
mov
loopne
cmp
stc
mov
mov
xchg
xchg
mov
das
sbb
mov
in
mov
xchg
cs
daa
sbb
push
mov
cmp
shlb
pushf
test
xchg
push
call
xchg
in
movsb
cltd
and
and
lock
loop
sub
sbb
push
ret
jge
mov
xor
movsl
rorw
mov
inc
sub
cmpsb
jmp
cmp
lock
test
xchg
jae
cmpsb
in
mov
sub
test
scas
pop
sub
mov
mov
ss
shl
mov
sub
adc
inc
sbb
sbb
lret
xor
ret
ss
test
inc
sbb
jmp
xchg
roll
mov
pop
and
stc
push
dec
sbb
jge,pt
shll
bound
inc
in
jge
xlat
cmpsl
sub
xor
and
call
cli
movsb
sub
jmp
lahf
mov
fcomps
shlb
sub
popa
in
popa
ja
mov
xor
invd
or
call
addr16
daa
add
mov
inc
mov
cmp
stos
sbb
call
test
test
cmpsl
mov
xorl
ds
sarl
pop
loop
mov
mov
sub
ja
loopne
add
inc
call
fs
sarb
repz
ljmp
es
cmpsb
cmc
call
out
popa
mov
dec
sub
sub
mov
test
sub
movsb
cmp
sbb
out
or
and
loop
test
mov
lock
test
cmp
mov
add
out
iret
mov
movsl
sbb
sub
cltd
movsl
rorb
inc
mov
sbb
jb
aaa
call
xchg
dec
sub
call
and
xor
movsb
es
mov
add
test
add
cmpl
mov
sub
negl
test
in
popa
mov
stos
xchg
push
mov
subl
mov
bound
mov
mov
dec
and
cmpsl
call
ljmp
sahf
subl
lahf
jnp
jge
sub
movsl
inc
lcall
fistpll
incl
gs
or
mov
sub
mov
leave
cmp
jg
out
sub
out
cmp
inc
call
mov
mov
call
mov
push
mov
jge
popa
cli
call
in
loope
add
mov
mov
sub
cmpsl
mov
mov
or
fsubr
cmp
cmp
pushf
stos
sub
repz
outsb
lcall
lahf
call
or
jge
in
and
sub
and
loope
loopne
in
adc
cmp
mov
mov
push
add
insb
jg
jmp
subb
cmp
push
pushf
jae
mov
dec
lcall
test
push
mov
sub
and
std
sbb
sub
push
add
lock
pusha
and
and
mov
js
cmpsl
sub
cli
jnp
and
out
bound
mov
cmpsl
mov
stos
sub
cmpsl
pushl
sbb
bound
or
mov
aaa
mov
jnp
and
pop
nop
mov
xchg
ret
sbb
adc
mov
mov
or
popf
nop
mov
and
movsb
mov
cmpsb
ret
xchg
in
mov
sub
sub
test
mov
cli
xchg
shll
push
out
xchg
arpl
mov
mov
sbb
mov
jnp
sahf
ja
and
jns
mov
mov
sbb
adc
test
fs
or
xchg
or
xchg
pop
test
lods
mov
jge
mov
add
inc
mov
xchg
ja
out
les
and
mov
fbld
mov
jge
shll
pushf
mov
mov
leave
pop
imul
add
inc
add
cltd
mov
sub
add
adc
sub
ljmp
movsl
stc
loop
mov
adc
xchg
sub
and
and
mov
jmp
sbb
testb
outsl
cmpsl
nop
mov
adc
add
sbb
inc
in
xchg
loope
stc
jg
sbb
jmp
mov
push
and
sahf
or
add
mov
fldcw
mov
add
mov
or
scas
js
xchg
pushf
mov
cwtl
mov
imul
adc
lcall
push
cld
ret
add
mov
mov
sub
call
cmp
aas
sub
cmpsl
aas
fbld
mov
in
lret
sub
scas
fldenv
cmp
add
mov
add
push
addl
sub
stos
lds
mov
mov
mov
pop
mov
xchg
in
sti
lea
int
and
in
mov
xchg
lret
fldcw
push
xchg
sahf
lock
jle
loop
cmc
pop
cmp
sub
add
xchg
cld
sub
mov
cmpsb
sbb
xchg
xchg
mov
push
mov
pcmpeqw
sub
adc
stos
jge
pop
jne
and
mov
shll
and
scas
cltd
and
stc
mov
es
aas
mov
mov
mov
and
adc
popa
and
nop
mov
nop
andb
or
or
icebp
pushf
and
repz
jge
out
repnz
stos
sbb
lds
div
jmp
dec
xor
mov
dec
pop
pop
dec
shld
inc
rcrl
loope
push
jle
sti
test
xor
int
mov
es
mov
xor
mov
jo
repz
jmp
leave
xor
lock
dec
je
xchg
or
repnz
dec
xchg
test
mov
jmp
cmpsl
aas
jmp
inc
sahf
adc
xchg
lcall
mov
mov
dec
loop
sub
lods
mov
pop
fstps
pop
in
in
mov
xchg
pushf
rorb
cmpsl
mov
mov
test
sub
adc
pop
daa
mov
lret
pop
push
sahf
push
cmp
idivl
cmp
adcb
xchg
cmp
cmpsl
mov
pop
mov
cs
sub
xchg
push
scas
andb
clc
mov
call
xchg
movsb
aam
and
jle
je
mov
pusha
fistps
fs
mov
jl
js
cmp
mov
shlb
fwait
jmp
andl
mov
mov
mov
mov
mov
mov
test
sub
xchg
and
xchg
es
mov
cltd
and
andl
xchg
mov
mov
es
mov
and
lods
jae
in
jmp
cwtl
mov
test
es
mov
and
cmpsb
jb
test
cmp
cmp
stc
and
mov
es
mov
mull
ss
es
cmc
mov
test
dec
pop
pop
inc
into
push
xor
sbb
int
cwtl
dec
icebp
cltd
jmp
dec
mov
es
mov
or
mov
hlt
and
gs
sbb
jg,pn
mov
jae
in
gs
test
dec
lcall
cli
jg,pn
mov
jae
cwtl
sub
jmp
mov
packuswb
pusha
jbe
icebp
xor
xchg
cmp
shlb
std
sbb
cmp
mov
ds
pop
sbb
pop
shll
popl
popf
jbe
xchg
loope
das
cmpsb
inc
insl
sub
cld
inc
sbb
inc
shll
cmp
int3
dec
xchg
mov
cmp
cltd
jle
ds
jae
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
cmp
test
jns
bound
xchg
jbe
ss
mull
aaa
xbegin
push
cmp
stc
movsb
mov
cmp
cli
cltd
mov
xchg
sti
jmp
adcl
or
jbe
loop
cmpsb
popf
icebp
cmp
cmp
int3
call
dec
jp
into
call
mov
mov
std
cmp
cmp
aas
pop
mov
and
imul
mov
jecxz
adc
fistps
outsb
dec
and
aas
mov
dec
dec
cmp
xchg
pop
cmovg
repnz
nop
or
and
lods
sub
cmpsl
aad
mov
xor
mov
scas
out
pushf
xor
xchg
jmp
scas
and
mov
jns
icebp
mov
movsb
in
cvtdq2ps
ficoms
xchg
adc
aaa
pop
cld
xchg
cmp
mov
sbb
lock
mov
es
lods
mov
mov
in
movsl
mov
insl
scas
mov
es
mov
andb
mov
es
mov
mov
outsl
mov
jo
shlb
xchg
mov
push
and
shll
mov
xchg
mov
cli
push
out
xor
adc
pushf
and
andb
mov
mov
xchg
mov
adc
scas
icebp
out
and
adc
mov
xchg
and
adc
mov
scas
mov
push
mov
xlat
mov
adcb
es
mov
lcall
mov
jno
fldenv
scas
mov
gs
sbb
lahf
mov
mov
mov
sbb
jecxz
mov
pop
mov
fsubl
test
pop
mov
nop
leave
frstor
xchg
mov
pop
and
fisubs
mov
pop
cmpsl
lods
repnz
mov
gs
pop
jmp
lcall
ja
xchg
adc
es
lods
xchg
shlb
cmp
das
scas
popa
pop
sahf
scas
or
movsl
bound
jmp
mov
pop
sbb
push
add
fists
pop
cwtl
xchg
cs
shll
lods
subb
cwtl
je
xor
cmp
ja
adc
outsl
rcr
cmp
stos
cmp
sbb
cmpsb
inc
adc
mov
fstpl
push
xchg
mov
or
and
lahf
bound
fistl
nop
pushf
adcl
cmpsl
rcl
push
xchg
dec
mov
fistps
insb
jbe
sub
mov
adc
push
xchg
ficomps
add
jmp
or
cmp
bound
sub
xchg
adc
mov
daa
mov
mov
mov
jecxz
cmp
test
add
add
and
cmp
hlt
outsb
loope
loope
mov
pushf
cwtl
or
addb
aam
push
rcrl
xchg
pop
pusha
popf
sub
mov
push
shrl
push
sar
mov
test
and
xchg
mov
aam
cmp
xchg
mov
push
popf
sbbl
lret
cmp
adc
cmpsb
stos
aas
cmpsl
cmpsb
xor
cmpsb
leave
xchg
and
cmpsl
stc
insl
sbbl
cmp
mov
cs
push
push
cmpsb
mov
loope
ds
add
pushf
mov
in
sbb
es
inc
loope
test
jmp
xor
movsl
jmp
sahf
mov
mov
scas
xor
mov
adc
ds
cmp
mov
mov
loope
jecxz
ljmp
add
cmpsb
and
xchg
fwait
mov
lds
fdivl
test
flds
xchg
jecxz
xchg
fdivrl
mov
rcl
in
mov
fildll
cmp
mov
xor
lret
daa
cltd
inc
lahf
xchg
fcompl
mov
sbb
cmpsl
inc
sbbb
loope
insb
mov
test
pushf
movsb
mov
andb
mov
jle
pop
sbb
pushf
insl
xor
xchg
in
rol
mov
mov
push
mov
outsl
cmp
sbb
xchg
sti
sub
shr
cltd
sbbb
daa
mov
mov
inc
mov
xchg
mov
push
mov
jnp
outsl
adc
cmc
and
addl
mov
cmpsl
imul
mov
pop
shl
fcomps
push
push
cli
test
nop
push
rcrl
dec
cmpsb
cmp
mov
or
xchg
push
out
mov
insl
movsb
mov
fwait
sub
sbb
ja
mov
push
xchg
mov
pop
sbb
mov
movsb
mov
ret
adc
jp
dec
mov
into
push
mov
loopne
jo
sti
cmp
lret
lods
xlat
flds
js
mov
test
lock
mov
lret
test
es
cmp
dec
xchg
sbbl
leave
lods
icebp
mov
jl
xchg
add
mov
fs
aaa
or
ret
cltd
xor
xchg
sub
push
cmpsb
mov
xchg
es
test
or
js
sub
repz
sub
push
fists
outsb
add
and
push
push
int3
negb
out
pushf
jge
xchg
push
cmp
jg
pop
sub
fsubrl
mov
adc
pushf
and
roll
test
sbb
fistpl
push
mov
je
mov
hlt
xor
jae
mov
leave
xor
testw
and
mov
mov
leave
fcomps
mov
mov
pop
cmp
and
ds
adc
push
lods
ds
test
mov
xor
test
pop
mov
mov
xchg
add
xorb
cli
pop
aam
jmp
dec
in
cmp
sbb
dec
xor
xlat
movsl
popf
xchg
loopne
mov
inc
mov
push
orl
movsl
test
test
test
mov
mov
cmpsl
lds
and
cmpsb
mov
test
test
dec
or
stos
lahf
inc
test
sbb
cmpl
mov
cmpsl
push
or
shrb
mov
and
lret
xchg
pop
mov
sub
cli
mov
xor
and
and
dec
pop
mov
es
add
sub
sahf
das
pop
push
test
nop
test
pop
cltd
pop
sbb
sbb
ret
jecxz
push
push
repz
mov
sbb
sub
or
stc
mov
test
clc
test
ret
mov
into
pop
and
xlat
adc
cmpsl
jp
mov
pop
mov
stos
test
xchg
mov
mov
mov
into
repz
jae
jb
mov
jle
mov
daa
sbb
lods
push
add
or
loope
int3
pop
mov
pop
push
xchg
imul
cmp
stc
adc
movsl
ficomps
pushf
pop
test
sub
jl
int
divl
adc
test
jbe
repnz
shlb
stos
push
sti
lods
or
mov
into
js
stos
divb
ss
and
xchg
pop
fsubrp
xchg
mov
icebp
jb
lods
dec
lods
xor
mov
add
outsb
add
or
jbe
daa
insl
mov
fwait
lods
dec
xor
adc
js
and
mov
ss
and
loopne
int3
jp
ret
cmpsb
cltd
mov
pushf
mov
mov
dec
pusha
mov
scas
jecxz
mov
jecxz
cmpsb
push
test
pushf
or
push
mov
jle
lahf
jecxz
ret
cmpsl
or
cmpsb
xchg
jecxz
cmpsb
aad
out
lea
ds
jecxz
lds
fnstcw
loope
test
push
push
fcomps
je
and
movl
es
push
movsb
mov
mov
and
mov
jmp
xor
xchg
sahf
dec
cmp
and
mov
mov
mov
lods
cmp
mov
subl
sbb
mov
lret
mov
pop
and
xchg
xchg
pop
fwait
adc
and
xchg
fldt
adc
mov
cmpsb
cmpsb
pop
mov
adcb
mov
adc
mov
movsl
clc
or
sbb
rclb
aam
es
sub
mov
ja
test
cs
xchg
sbb
fs
pop
cs
subl
inc
xor
add
adc
push
inc
xor
xchg
stos
xchg
cltd
push
and
inc
adcb
pop
cwtl
adc
add
xor
sbb
sbb
pop
cs
test
push
lcall
sbb
out
sahf
push
pop
sbb
adc
ret
test
fsubl
mov
icebp
fwait
jl
push
push
notl
jb
popa
das
push
fcoml
push
out
outsb
loope
sub
add
rcrb
mov
cmp
or
mov
scas
leave
clc
dec
push
repnz
icebp
xchg
repnz
push
xor
push
xor
mov
cmpsl
pop
sbb
pop
stc
jno
cmpsl
pushf
pop
dec
mov
icebp
outsl
cmp
cltd
out
in
mov
sub
pop
movsb
aad
retw
mov
xor
mov
movsb
and
inc
icebp
lahf
and
mov
movsl
cmp
mov
psrld
add
xor
pushf
aad
xchg
cmp
int3
sbbl
mov
sub
ret
pop
pushf
fsubrl
cmpsb
sbb
fcomps
and
es
mov
movsl
xchg
mov
fmuls
inc
or
in
sbb
push
scas
add
dec
adc
mov
das
popa
mov
fistl
ret
inc
stc
mov
mov
es
loope
daa
ud2
in
in
and
scas
jecxz
and
lahf
movl
ficomps
adc
cltd
aam
mov
mov
jno
jecxz
xchg
lret
mov
test
sbb
mov
lea
aaa
sahf
xor
fcoms
fists
or
mov
rcr
insl
cmp
addl
mov
xchg
int
cmp
lea
push
add
adc
mov
icebp
sarl
and
push
xor
sbb
js
movsl
sbb
fcmovbe
insb
cmpsl
add
xor
add
push
pop
pop
pushf
out
pop
xchg
scas
es
scas
stos
cmpsb
repnz
mov
xchg
pop
pop
add
xorb
push
pop
mov
sub
mov
mov
mov
xorb
mov
adc
sbb
or
mov
mov
push
xchg
or
push
pop
movsl
jecxz
cltd
cmp
cmpsb
icebp
nop
mov
add
mov
sub
mov
xchg
inc
mov
aaa
xchg
incb
adc
sbb
jg
add
stc
popf
push
cmp
or
jl,pn
cmp
mov
push
xor
mov
nop
pop
mov
sbb
in
negb
jns
xchg
cmp
mov
push
add
lea
gs
pop
mov
mov
and
push
sahf
flds
xor
in
jecxz
or
xchg
jmp
out
punpckhdq
sbb
clc
rorb
mov
repz
mov
lahf
scas
sub
jl
clc
jbe
cli
inc
cmp
out
int3
dec
cld
aaa
mov
mov
sti
andl
or
mov
cmpsl
aam
arpl
jns
mov
mov
aas
mov
mov
jle
sbb
repz
sbb
movsb
jnp
daa
int3
icebp
and
jnp
pop
mov
jg
xor
stc
cmp
stos
clc
aaa
ja
divl
jbe
sub
xor
push
adc
push
pop
rol
or
iret
mov
cmp
pusha
jg
cmp
mov
and
jp
jae
nop
push
mov
repz
push
pop
inc
cli
push
adc
sbb
mov
jecxz
loopne
cmp
adc
aaa
inc
int
int3
and
lea
jg
cmp
mov
ss
and
mov
mov
popf
repnz
xor
into
xor
cmp
aaa
mov
insl
stc
dec
pop
pop
repnz
dec
xor
out
cmp
lahf
jecxz
bound
xor
imul
shlb
jp
mov
aam
pop
push
ret
mov
cmp
clc
dec
jbe
jmp
ds
mov
stc
div
stc
mov
pushl
xchg
or
adc
xor
jne
pop
stc
pop
jecxz
andb
mov
add
mov
xchg
cmp
cmc
xchg
cmp
jg
mov
stos
cmpsl
dec
dec
jns
mov
jmp
cmp
mov
sub
jmp
and
clc
fwait
inc
ja
inc
push
jp
leave
mov
mov
mov
movsl
scas
jbe
lahf
mov
push
fcmovu
cmpsl
mov
mov
sub
cltd
push
jnp
lea
pusha
test
push
cmpsb
mov
rol
and
repnz
and
movsl
cmc
or
push
mov
movsl
pop
xchg
fisubl
mov
cwtl
mov
push
sub
cltd
xor
movsl
bound
fimuls
daa
mov
push
push
push
xchg
test
shrl
mov
and
mov
xchg
xor
inc
movsl
divl
jno
movsl
fwait
mov
mov
cmp
inc
mov
movsb
inc
mov
out
fisttpl
sbb
cmp
mov
lret
mov
push
mov
fstpt
into
mov
cmp
gs
dec
dec
lock
testb
mov
test
cli
test
stc
add
and
repz
cmp
jno
xchg
ud2
sbbb
and
mov
dec
mov
ja
idivb
mov
mov
cmp
jbe
aaa
mov
pusha
cmpsb
inc
dec
mov
push
cltd
out
sub
pop
js
cmp
mov
bnd
ret
mov
or
inc
mov
rcrl
test
mov
mov
mov
or
dec
sbb
stc
lock
fcompl
mov
mov
sub
icebp
or
cltd
mov
mov
mov
dec
inc
adc
xchg
jns
lret
clc
repnz
ret
mov
xchg
out
xchg
sbb
aas
arpl
mov
popa
push
test
jecxz
xor
xchg
es
jb
out
js
xchg
mov
mov
or
mov
xchg
mov
icebp
and
mov
mov
sub
js
push
movsb
filds
sbb
scas
sar
ss
enter
xlat
mov
stos
sti
pop
inc
movsl
loope
mov
popa
lock
cmpsb
mov
loope
fs
loopne
fdivrl
insl
mov
xlat
lea
pshufw
xchg
repnz
or
inc
int
clc
sub
lahf
sub
mov
mov
mov
or
daa
ja
jle
jle
mov
push
loope
sarl
lods
pop
cmpsl
out
cmpl
fsubl
stos
jbe
jp
inc
lahf
xchg
lret
mov
icebp
inc
adc
dec
jbe
je
movsl
mov
pop
xchg
mov
movsl
stos
xchg
into
sahf
xlat
fs
mov
xchg
ret
and
arpl
and
mov
jbe
push
xchg
adc
shlb
and
xchg
xchg
xchg
ss
ljmp
and
int
mov
orb
cwtl
jge
and
mov
fs
or
mov
xor
mov
ss
jecxz
icebp
jecxz
mov
es
pop
dec
leave
jo
gs
bound
mov
fimull
aas
mov
ret
lret
orb
bound
inc
lret
xor
mov
aas
xchg
dec
mov
cmp
mov
sbb
mov
cmp
jmp
movsb
and
out
sarb
in
and
jo
mov
int3
fs
push
sbb
cmp
leave
clc
mov
icebp
sbb
mov
in
test
ja
mov
sbb
sub
into
dec
int
or
mov
push
mov
mov
sbb
mov
xchg
jnp
movsb
pusha
cmp
fwait
les
andb
and
sub
test
mov
cmpsl
lcall
sahf
mov
gs
mov
ja
xchg
jae
jmp
out
push
test
sahf
add
loop
je
mov
jmp
sub
cmpsl
test
insb
mov
stos
rorb
jmp
jp
jmp
jnp
test
sub
lods
mov
jmp
mov
mov
add
es
mov
movsb
leave
movsl
cmpsb
mov
test
ljmp
test
xchg
out
cltd
jmp
sahf
mov
xchg
mov
mov
stos
mov
call
imul
jmp
jp
sbb
addr16
cmpsl
cmpsb
mov
cmp
stos
mov
out
sbb
cmpsl
mov
push
jp
mov
mov
jbe
loope
mov
cmc
mov
mov
mov
mov
movsb
jne
and
mov
lret
test
dec
std
mov
es
cmpsl
ret
mov
addb
jns
pusha
pop
addl
movsl
imul
subb
or
stc
jecxz
mov
ret
inc
xchg
lods
cmpsl
mov
xor
mov
sub
fidivrs
sbb
test
rolb
xchg
out
shrb
ret
inc
sub
ljmp
jae
xor
ds
xchg
adc
stc
cmp
jae
push
jns
jecxz
xchg
enter
pop
mov
cs
and
cltd
inc
int
jge
mov
test
dec
cmpsb
xchg
jmp
daa
mov
mov
mov
mov
cmpsl
leave
jp
push
lcall
mov
jle
and
mov
push
cmpsl
in
xchg
imul
movsb
mov
mov
or
cmpsl
cmp
sub
and
stos
xor
jmp
mov
dec
sub
sub
xor
fucomip
mov
insl
cmp
in
in
jnp
and
push
lea
fwait
repz
mov
cmp
adc
jmp
xor
sbb
addr16
cmp
scas
test
xchg
stos
rcl
test
ret
mov
in
xchg
adc
mov
out
mov
stos
mov
daa
leave
scas
es
xchg
and
xchg
and
cwtl
and
fwait
es
lahf
and
es
test
and
mov
and
lea
mov
mov
lods
les
fsubr
mov
xchg
cmpsl
mov
mov
pusha
stos
inc
repnz
sti
mov
jnp
mov
jmp
stos
jmp
or
jl
sbb
mov
scas
adc
popf
sub
cs
push
stos
sub
movsb
mov
es
mov
or
add
shlb
test
ss
es
adc
sub
fs
cmp
xor
ud1
movl
leave
adc
sub
adc
xor
jb
int3
or
add
sbb
mov
push
out
and
cli
and
xor
push
inc
es
lods
mov
scas
or
je
mov
add
jmp
mov
test
shrl
push
enter
sub
jmp
xchg
mov
jecxz
or
fwait
pop
loopne
push
pushf
insb
movsl
lret
repz
xchg
lds
jmp
idiv
mov
mov
test
mov
jmp
test
jp
imulb
call
cmpsl
mov
cmpsb
jmp
ja
lods
lds
mov
mov
insl
or
mov
test
mov
cmpsl
cltd
test
and
popf
mov
mov
dec
leave
add
mov
jg
clc
mov
mov
mov
mov
mov
mov
mov
inc
aam
subl
mov
cltd
jp
mov
loopne
test
addr16
scas
es
lret
pushf
sbb
mov
fs
mov
pop
sub
stos
mov
pusha
andl
xchg
hlt
in
loop
push
pop
ja
push
dec
xchg
iret
add
daa
ljmp
jmp
cmpl
or
in
nop
mov
imul
lea
mov
mov
jns
sbb
cmp
stos
popa
std
enter
mov
lods
aam
pop
adc
les
add
or
loope
mov
and
add
lcall
outsb
insl
mov
push
cli
stos
repnz
pop
daa
add
subl
inc
cmp
xchg
gs
lret
dec
or
mov
xchg
inc
stos
inc
std
jl
popf
push
shlb
xchg
shl
std
cld
imul
add
mov
mov
xlat
in
std
dec
xor
xchg
loop
leave
in
push
jno
add
lods
outsb
popa
pop
add
flds
or
sub
mov
loop
xchg
xchg
stos
jmp
insb
jnp
cld
sub
cmp
push
ja
inc
addr16
dec
out
mov
mov
mov
pop
xlat
out
xchg
xchg
bound
fs
sbb
das
xchg
mov
mov
ljmp
stos
cld
pushf
cmp
xchg
adc
mov
dec
cwtl
cmp
stos
jg
je
clc
lcall
inc
push
stos
jbe
into
mov
add
stos
adc
xchg
cli
shl
fists
push
bound
adc
dec
or
stos
div
fisttpl
fbstp
cmp
push
das
jg
sub
push
call
mov
std
imul
int3
add
stos
pushf
mov
cmp
jb
sub
daa
imul
cld
mov
cmp
or
stos
loop
lcall
push
mov
mov
push
jl
xchg
mov
push
arpl
add
sbb
stos
push
aas
cmp
iret
and
stc
xchg
fwait
jne
ret
add
push
out
ss
inc
mov
loop
stos
xchg
loopne
mov
dec
jo
inc
cmc
stos
sbbb
xchg
sbb
add
xor
jne
mov
movsl
imul
mov
sub
adc
jmp
cltd
stos
aam
xchg
sub
push
movsb
jge
ljmp
jg
jnp
xchg
orb
sub
mov
enter
cmpsb
push
mov
js
add
dec
jge
clc
cmpsb
mov
emms
cmpsb
or
dec
push
inc
mov
cmpsb
pop
ljmp
inc
ljmp
mov
jbe
add
popl
inc
lods
add
dec
dec
ljmp
or
push
push
jecxz
mov
mov
test
xor
pop
or
std
or
mov
test
ja
xchg
test
cld
mov
cmpsl
dec
fwait
in
jmp
test
mov
jne
mov
jnp
xchg
push
jnp
mov
mov
mov
push
int
aaa
in
out
push
idivb
mov
movsb
leave
gs
fs
lret
movsl
je
inc
jecxz
and
mov
xchg
xor
mov
sti
xchg
jbe
mov
mov
xchg
cmp
cltd
cwtl
jecxz
xchg
jns
cltd
loope
mov
iret
xchg
mov
cmp
js
dec
loop
stos
mov
jl
adc
popa
pop
or
mov
push
pusha
loope
es
into
loop
sub
daa
mov
sub
loop
jb
add
aas
stos
inc
xor
xor
cmp
movsb
mov
jns
push
stos
clc
jecxz
mov
jle
fstpt
cmp
sub
out
bswap
push
jno
ret
sub
push
jl
std
inc
ds
idivb
dec
or
push
lret
ret
inc
jne
ljmp
mov
div
sub
das
idiv
sarl
sldt
mov
ljmp
js
jno
iret
or
aam
mov
stc
std
cli
mov
mov
mov
cltd
xor
cmpsl
mov
mov
ds
mov
jle
or
push
and
stos
inc
sbb
leave
aad
repz
mov
or
mov
sub
daa
stos
cmpsb
jmp
das
sbb
rclb
popa
mov
ss
mov
push
cmpsb
xor
in
dec
icebp
mov
xchg
in
stos
xorl
mov
add
mov
mov
orl
and
lahf
push
inc
rclb
push
test
fstl
jle
roll
addl
sti
mov
pop
aaa
nop
mov
les
hlt
addr16
mov
and
dec
sbb
inc
inc
dec
xor
cs
insb
add
test
movsb
test
mov
or
xlat
int
clc
cmpsb
push
cmpsl
lahf
mov
mov
xchg
pop
test
mov
cmpsl
lahf
mov
mov
xchg
ds
lods
mov
sub
movsl
jb
cmp
hlt
stos
js
nop
or
sbb
lock
dec
fwait
xor
idivl
inc
movsb
out
xor
push
xchg
mov
int3
fs
daa
mov
and
pop
out
push
adc
cmp
push
push
testl
test
enter
adc
jge
sub
push
push
aam
xchg
je
xchg
in
adc
jge
sbb
push
data16
adc
leave
jl,pt
pop
pop
mov
jl
xchg
lcall
mov
sahf
in
jmp
mov
shrb
pop
sti
pop
divl
rorb
or
clc
adc
lock
ret
and
test
fnstsw
hlt
lea
call
pusha
pushf
mov
push
pusha
mov
push
lea
jmp
push
lea
call
jmp
inc
mov
cmpsb
rcll
mov
and
fadd
insb
xchg
aas
xor
jecxz
add
lret
or
mov
jbe
outsl
test
repz
loopne
jl
ja
lock
jle
mov
jns
xor
mov
sub
fcmovb
cltd
and
push
scas
das
dec
fwait
in
mov
dec
lds
and
fcompl
in
imul
bound
addr16
sbb
push
mov
dec
popf
push
fs
scas
test
cmc
test
mov
mov
mov
push
bt
sub
jae
cmp
push
pusha
lea
jbe
btr
rcl
shld
mov
btc
sub
xadd
add
jmp
adc
jnp
add
mov
repz
out
fwait
js
andb
clc
pop
sahf
sbb
out
enter
pusha
push
add
sub
pop
arpl
shlb
out
frstor
std
mov
sbb
push
jge
lock
pop
repnz
pop
imul
jo
pop
enter
insl
pop
inc
ja
jecxz
mov
repz
dec
dec
inc
push
dec
xor
cs
insb
add
xchg
jp
lcall
mov
mov
call
aaa
sub
push
out
mov
or
or
xchg
add
inc
bound
mov
xor
test
mov
sub
cmp
and
xlat
cltd
and
stos
popf
out
rorl
push
dec
inc
and
enter
fldl
sub
das
adc
xlat
test
cld
pop
sti
les
fidivrs
mov
mov
dec
push
fwait
lods
pop
inc
hlt
es
push
sub
mov
test
push
lea
ja
pusha
pusha
lea
jmp
pusha
lea
jae
call
in
push
add
mov
test
mov
and
sbb
inc
mov
pop
mov
or
pop
push
mov
sarl
and
lea
xchg
add
jp
push
and
cmp
notl
jbe
fdivs
pusha
and
cmpsb
xchg
test
fmull
ret
dec
movsl
xchg
stc
or
cld
aas
push
sbb
xchg
fwait
mov
mov
cmp
test
and
insl
notl
bound
notb
push
mov
cmc
add
lock
cmp
out
cmpsb
pop
in
sub
je
jne
adc
pop
daa
out
arpl
push
push
mov
fldenv
fwait
mov
jle
orb
nop
inc
sbb
dec
mov
push
xchg
gs
ljmp
mov
dec
sbb
mov
cmp
xchg
or
mov
pop
dec
addr16
adc
dec
and
xor
mov
mov
cmp
test
add
sti
inc
mov
mov
mov
mov
pop
shlb
or
enter
out
ret
add
roll
mul
push
jns
sub
jnp
jge
push
or
or
pop
pusha
shlb
push
popa
jno
into
cmp
popl
push
jno
fidivrl
leave
mov
dec
imul
les
xchg
cld
cmp
cmp
xchg
lcall
mov
insl
mov
mov
repz
cld
cmp
insl
push
cmp
jg
lret
fildll
sti
ljmp
les
jo
mov
push
jl
mov
shl
jbe
push
movsb
cmc
ret
sbb
adc
xor
mov
and
das
jno
nop
jl
inc
pop
inc
or
sub
sbb
mov
clc
ficoms
mov
or
mov
jmp
into
leave
mov
outsl
adc
mov
pop
idivl
mov
mov
mov
sbb
mulb
mov
aam
dec
cwtl
or
cltd
cmp
ret
cmp
and
leave
mov
jae
jmp
fstenv
adc
mov
out
int
and
jg
push
push
lea
ja
shl
sub
bt
push
add
add
sub
add
shl
bsf
mov
not
or
ror
sbb
mov
cmp
test
cmc
test
repnz
jmp
cli
inc
jge
mov
fsubrs
cmpsb
inc
scas
mov
ja
lods
lret
or
in
xchg
aad
cmp
and
push
adc
lahf
xchg
aad
mov
addl
mov
push
push
aaa
mov
xchg
adc
std
push
stos
arpl
push
cltd
push
pop
push
cmp
les
and
pop
pusha
dec
lock
fdivl
gs
sbb
sahf
mov
and
xchg
shll
xor
mov
out
pop
sub
sti
jp
out
nop
mov
out
dec
or
das
mov
jno
bound
sbb
into
mov
mov
lea
test
add
dec
inc
add
xchg
leave
xor
stos
pop
ret
shlb
aas
stc
rcrb
fisubs
adc
sbb
mov
cs
fprem
inc
xchg
outsl
or
jecxz
popf
mov
daa
loopne
add
bound
data16
push
shll
push
inc
jno
push
movsb
mov
and
sub
test
xchg
xor
jle
imul
mov
mov
jbe
fbstp
xchg
xchg
dec
lret
sbb
mov
cwtl
dec
fadd
jmp
jno
xor
lods
add
jb
arpl
cmp
addb
vpcomb
sbb
xor
faddp
nop
sbb
add
out
mov
push
adcb
and
cltd
lods
cmp
les
adc
pop
pop
ret
or
push
jb
xchg
in
popf
enter
cmc
mov
lock
xchg
adc
das
mov
es
jnp
decl
dec
sarb
pop
mov
pop
es
mov
ja
mov
add
aam
out
sub
movsb
stos
lret
xor
mov
bound
mov
rclb
or
lret
and
bound
xchg
add
lret
and
or
xorl
daa
test
pop
sti
mov
js
sarl
lea
cs
xchg
out
add
cmpsb
mov
inc
and
push
sub
sub
div
stc
xchg
jecxz
roll
adc
enter
jo
jle
push
out
and
rcrb
or
cs
in
ret
mov
jecxz
or
mov
jno
xchg
sti
or
push
adc
cmp
or
test
add
pop
scas
fsubl
mov
clc
push
movsb
push
inc
imul
stos
out
pop
mov
mov
and
sub
in
testb
fcomi
rcll
bt
pushf
call
cmc
test
sub
je
inc
jmp
or
add
pusha
bsf
mov
pushf
clc
shr
test
cmc
cmp
mov
call
dec
xchg
push
popf
sub
jle
jmp
and
push
ret
js
mov
inc
ljmp
lods
adc
hlt
inc
popf
and
jnp
pop
sub
push
and
int
pop
lods
cmp
push
test
dec
jp
sub
jae
loope
lahf
bound
sbb
pop
aam
mov
push
adcb
popf
int
in
cmp
idiv
enter
sbb
add
inc
imul
ds
push
roll
cmp
adcb
add
movd
pusha
sub
mov
test
jecxz
push
push
loope
xchg
test
dec
cmpsb
movzwl
add
or
pushf
shrd
mov
cmc
call
mov
mov
mov
fs
jnp
push
pop
fadds
outsl
xchg
xchg
test
cmp
jns
dec
push
sbb
mov
or
ret
xorb
cmpl
mov
lcall
mov
rclb
or
jmp
mov
jg
ret
scas
adc
push
cltd
in
repnz
orb
pop
dec
aas
out
mov
mov
jae
not
movb
setle
cwtl
push
not
cwtl
lea
jmp
int
cmp
cmpsb
lret
fadds
fisttpll
aad
sbb
jae
jl
xchg
data16
call
add
std
es
xchg
aaa
adcl
push
pop
and
out
xor
jns
add
or
push
repz
cmpb
mov
dec
in
lcall
adc
das
jno
decl
clc
push
sarl
xor
and
loope
dec
jae
scas
clc
or
or
lret
je
mov
out
dec
es
dec
pop
sbb
repz
xor
cmp
fidivrs
movsl
adc
cmp
dec
cmp
sbb
loope
sub
push
xor
xchg
and
imul
in
gs
adc
loop
fisttpl
movl
outsb
add
adc
int3
jmp
jmp
lret
push
popa
mov
xchg
cmc
or
lret
cmp
ret
fnsave
cs
int
sub
lods
push
les
pop
dec
jb
int
sub
inc
dec
cwtl
adc
stc
xchg
cld
leave
shrl
lds
jge
fwait
dec
and
bound
in
inc
pop
daa
xor
push
mov
insb
mov
lods
in
or
add
cli
dec
ficoms
shl
xor
out
mov
dec
jbe
xchg
mov
pushf
push
jmp
lea
jb
jmp
and
sub
jbe
xchg
lock
cs
mov
mov
jp
roll
repz
pushf
nop
inc
mov
inc
sub
pop
dec
sub
and
xchg
jecxz
les
push
fisubs
pop
xlat
sahf
js
test
in
hlt
lods
adc
shrb
rcll
fsubs
add
pop
mov
dec
xor
loopne
xlat
flds
insb
inc
jecxz
xor
ret
xchg
mov
scas
mov
mov
cmp
or
cs
jae
mov
stos
cmc
cmp
aas
mov
ds
popa
sti
aas
mov
das
pushf
sbb
fucomp
inc
cld
les
stos
sti
dec
and
loop
jge
gs
ds
jne
loopne
jg
leave
int
push
in
sub
dec
xchg
js
xchg
fildll
jge
fnstsw
push
adc
mov
fwait
xchg
jne
add
je
mov
jns
shr
pop
inc
jecxz
or
adc
xchg
popa
sbb
ret
mov
xchg
in
and
xor
loop
adc
popf
jbe
test
sub
or
dec
sub
jp
sar
mov
fsubrs
sub
ljmp
ja
mov
or
je
fcomps
sub
scas
mov
inc
mov
dec
leave
cmp
cmp
sub
add
and
shrl
aad
scas
subl
cld
xor
or
add
scas
jl
mov
add
and
mov
insb
fcompp
repnz
ds
cmc
add
cmpb
leave
jmp
imul
imul
outsl
xor
hlt
and
sub
enter
jno
shlb
mov
bound
imul
das
cmp
push
in
pop
adc
daa
jae
sbb
ret
hlt
and
jp
xchg
popa
js
xchg
scas
leave
into
mov
inc
mov
hlt
sbb
jb
xlat
das
cmp
and
jne
dec
neg
dec
mov
jo
stos
addb
sahf
xor
mov
xchg
sahf
hlt
push
pop
mov
adc
jo
iret
fsts
les
mov
sub
mov
popa
pop
add
in
shll
out
out
enter
xor
cmpsb
mov
test
movsl
dec
push
xchg
dec
mov
lret
mov
ds
push
outsb
in
ds
cmp
push
jns
jge
xchg
fidivl
dec
sub
push
sti
mov
sub
mov
stos
cmp
scas
sbb
dec
ja
mov
add
inc
mov
push
add
imul
cli
out
lcall
mov
jns
pop
stc
insb
scas
and
in
lds
jae
outsl
xlat
xchg
shr
insb
add
cmpsb
push
out
fistl
pop
sub
or
xor
or
sbb
xchg
adc
mov
stc
bound
lds
xchg
bound
lcall
mov
mov
fisttpl
movsl
adc
sti
pop
sub
inc
adc
push
push
sub
xor
pop
std
std
test
xchg
insl
and
movsl
ret
jae
cld
mov
and
add
ss
fistps
and
dec
dec
mov
pop
int
mov
sbb
cmp
xlat
add
sbb
cmpsl
je
movb
mov
jmp
sbb
inc
sub
scas
xor
mov
sarl
pop
sbb
jno
sahf
sub
xchg
divl
gs
imul
out
rep
int3
pop
adc
push
lds
mov
cltd
insb
lret
fbld
xchg
xor
pusha
scas
xchg
in
int3
push
cmp
fdivrs
popf
mov
enter
xchg
shrl
lcall
mov
mov
sbb
mulb
push
pop
cmc
test
xor
add
xchg
ret
mov
lods
xchg
aam
push
int
fsubrs
xor
pop
jmp
stc
stc
cmp
pusha
lea
call
push
lds
mov
xor
pop
ret
xor
cwtl
cld
mov
push
mov
xor
movsb
idiv
lods
ret
aam
add
pop
xor
or
sub
jmp
shlb
mov
fstps
in
shlb
add
repnz
cmp
push
pop
adc
inc
sbbb
mov
jle
pop
and
mov
lea
call
push
mov
push
mov
lea
call
push
jmp
pushf
bt
imul
movb
mov
jmp
iret
inc
bound
out
cmp
mov
popf
neg
addb
mov
xchg
jmp
lret
xchg
mov
xor
movsl
fs
addr16
xor
fidivs
cmpsb
push
aas
sub
mov
in
cmp
test
dec
sarb
out
ds
loope
leave
xchg
fmull
lods
sti
mov
push
pop
int3
push
sub
fadd
cmp
cmp
aas
mov
xchg
sbb
jle
pop
push
in
mov
fiadds
mov
dec
or
notl
into
mov
out
aam
jle
fiaddl
sar
ret
adc
adc
mov
jnp
pushf
gs
or
inc
daa
cltd
loop
and
lret
outsl
enter
mov
shl
nop
mov
jae
ljmp
push
gs
movsl
sub
test
cmc
mov
fidivs
sti
inc
cs
cmp
andl
mov
addr16
xchg
pop
pop
push
es
stos
pop
mov
sub
insl
stos
sarb
filds
scas
imul
cmpsl
inc
jecxz
or
jnp
sarb
dec
pop
stos
xor
aaa
movsb
adc
popf
into
insb
dec
or
or
pushf
ljmp
sbb
ljmp
mov
push
push
sbb
out
mov
jnp
pop
mov
popa
sti
mov
hlt
ja
jne
aaa
test
cld
lods
mov
loope
and
ds
stos
xchg
movsb
ja
and
aad
test
lea
jns
not
sete
mov
lods
pushf
call
mov
jmp
add
push
pusha
inc
dec
cld
mov
jbe
xor
daa
shlb
aas
mov
and
mov
push
mov
int
and
ljmp
rcrl
push
leave
push
mov
dec
push
mov
adc
aam
test
or
mov
push
outsl
stc
loopne
push
and
jo
popf
jb
xchg
and
out
push
les
cltd
jmp
jmp
insb
jg
and
add
bt
call
inc
or
std
mov
jge
popf
hlt
push
push
mov
xor
es
xor
sub
loop
mov
mov
jo
mov
call
rolb
pop
lods
jno
loopne
push
cmpsb
mov
sbb
jns
fdivl
push
loop
scas
adc
ret
lods
and
inc
push
or
lahf
jle
or
cs
fstl
fcoms
mov
xchg
lea
jae
xor
shr
bsf
mov
shl
shl
xadd
sub
mov
sub
mov
cmp
clc
pusha
cmp
sub
push
repnz
movb
lea
jge
push
lea
jne
mov
stc
neg
mov
shrd
add
or
stc
sub
shl
mov
cmp
call
xchg
mov
jmp
pushf
xchg
sub
jb
mov
xchg
ret
lock
data16
or
mov
jne
test
ficompl
fpatan
add
jg
jle
lods
outsl
jne
test
daa
xacquire
shll
and
repz
sahf
fdivs
mov
js
repz
jecxz,pn
ja
push
or
adc
loopw
repz
or
hlt
inc
jb
and
outsb
cmpsl
adc
mov
mov
insb
mov
jp
idivl
jge
push
nop
add
push
and
xchg
mov
cli
ds
jae
aaa
sbb
xchg
cli
call
mov
in
mov
xor
xor
lea
je
stos
and
pop
scas
fsubs
xchg
out
rorl
and
adc
jb
inc
divl
sub
out
jnp
fiaddl
hlt
fnstcw
in
rcrb
inc
roll
xlat
add
aaa
push
adc
push
imul
in
ficoms
js
call
add
dec
test
and
out
dec
xor
inc
loope
jmp
mov
mov
xchg
push
flds
mov
jbe
pop
or
bound
xchg
and
push
pushf
inc
fsubrl
xchg
xlat
fisttpl
pop
xor
xor
xor
xchg
jle
ds
dec
loopne
inc
xlat
mov
sti
scas
lret
lods
sbbl
hlt
int3
loopne
jne
out
jg
popl
in
mov
mov
test
pusha
push
test
xchg
les
jmp
insl
xchg
insl
xchg
negb
lock
pop
push
mov
xlat
inc
popa
cli
xor
adc
in
push
pop
push
popl
lret
mov
pusha
push
outsb
dec
mov
in
xor
xlat
xchg
gs
sbb
mov
stos
jg
mov
sbb
pop
and
aad
mov
mov
cmp
rol
jmp
mov
std
dec
ljmp
stc
daa
pop
in
sub
jo
sbb
mov
cwtl
push
xchg
adc
leave
sti
xlat
mov
sub
mov
ss
cmpl
outsl
insb
xor
cs
insb
add
mov
pusha
bswap
cmc
lea
jl
pushf
movb
add
bt
pusha
stc
add
cmp
clc
add
pushf
push
clc
not
test
cmp
sub
call
xor
pushf
mov
rcr
mov
pusha
bt
sub
cmc
bt
cmc
mov
shr
call
jmp
pushf
neg
mov
bswap
jmp
push
or
test
xor
movl
inc
lea
jne
pushf
decl
lea
je
pushf
lea
jne
jmp
mov
mov
pushf
lea
jmp
call
add
pushf
mov
mov
push
mov
pushl
ret
add
pusha
movb
mov
pushf
pushf
lea
jmp
ror
bsr
bts
test
mov
rol
pusha
xor
mov
push
stc
movb
add
pushf
pushf
pushf
pushf
mov
push
lea
jmp
pushf
lea
jne
test
cmp
clc
sub
jmp
pushf
lea
jno
pushf
mov
pushf
lea
jmp
stc
movzbl
stc
mov
test
clc
pushf
or
pushl
lea
je
call
cmp
mov
sar
sub
dec
bswap
add
neg
movsbw
stc
and
neg
pushf
pop
mov
rol
cmc
shrd
sub
stc
not
lea
pop
ror
pusha
movzbl
btr
mov
jmp
jmp
movb
pushf
mov
pushf
mov
pushl
mov
pushl
movb
pushf
mov
lea
jmp
jmp
mov
movl
pushl
push
lea
jmp
mov
jmp
mov
mov
pushf
pusha
push
pushl
ret
daa
mov
rcr
shl
mov
call
lea
aad
mov
and
push
xor
cmp
mov
bt
sub
cmp
jmp
pushf
popl
movl
pushl
popl
push
pusha
pushl
lea
jmp
pusha
mov
push
movw
movw
lea
jmp
pusha
mov
movb
pusha
push
push
lea
jmp
adc
sbb
lea
mov
jae
sub
pusha
jmp
call
pusha
add
jmp
inc
mov
test
pusha
rcr
sub
clc
adc
rcr
sub
add
setno
bswap
pop
dec
pop
jmp
movb
sub
movl
clc
mov
call
pusha
mov
pushf
mov
push
mov
pushf
pushl
mov
lea
jmp
pusha
pushf
mov
pushl
lea
jmp
or
bt
mov
rol
test
adc
rol
mov
cmp
clc
push
test
add
pusha
call
movw
pushf
push
movl
pushf
mov
pusha
pushl
ret
lea
jno
pushf
dec
pushf
lea
jmp
push
mov
movl
mov
push
lea
jmp
or
mov
neg
mov
cmp
add
call
pusha
push
mov
mov
lea
jmp
not
pushf
movb
stc
and
pushf
pusha
mov
call
mov
pushf
pusha
lea
jmp
jmp
mov
push
push
lea
jmp
movsbw
btc
add
xor
mov
neg
or
seto
mov
push
jmp
pushl
popl
pushf
pushf
push
lea
jmp
test
sub
mov
call
mov
pushf
pushf
pushf
lea
jmp
bts
mov
cmp
xadd
mov
sub
rol
stc
cmp
mov
bt
add
push
shrd
jmp
jmp
call
call
pop
jmp
sub
push
call
sub
xor
cmp
xadd
rdtsc
call
pusha
pushf
movb
pushl
popl
push
push
pushf
pushf
lea
jmp
push
pushf
popl
movb
pushf
jmp
bsf
bts
mov
pusha
cmc
test
add
pushf
pushf
movb
push
lea
jmp
push
pushf
call
mov
cmc
rcr
lea
pushf
pushl
call
add
jmp
mov
pushf
jmp
mov
pushl
popl
pushf
push
mov
lea
jmp
bswap
pushf
popl
movsbw
mov
pop
bswap
mov
pusha
not
lea
call
mov
cmp
pusha
lea
jp
push
lea
ja
and
mov
not
not
lea
not
sub
aam
cmc
daa
jmp
pushl
popl
push
push
lea
jmp
call
shr
ror
cmc
mov
btc
mov
bt
call
cmc
bt
add
pushl
movw
lea
jmp
pusha
mov
pushf
movw
call
test
mov
not
adc
add
shr
mov
clc
jmp
test
add
clc
sub
jmp
cmpl
jmp
sub
clc
push
shl
push
call
mov
pushl
lea
jne
btc
mov
clc
pushf
and
test
cmp
call
pushf
pusha
pusha
mov
call
mov
pushf
popl
push
push
jmp
pushf
mov
push
jmp
jmp
pushl
mov
movb
pushf
pusha
lea
jmp
mov
mov
mov
push
lea
jae
mov
push
push
lea
jne
rcl
or
or
mov
cmc
and
test
cmp
stc
cmp
pushf
lea
jne
clc
xorb
not
pusha
movzbl
movzbw
mov
pushf
lea
jmp
bswap
lahf
mov
mov
lahf
lahf
setge
mov
push
pushf
pushf
divl
call
call
mov
mov
pushl
jmp
stc
sub
clc
shr
call
shl
mov
mov
pushf
lea
jnp
push
pushf
popl
pushf
pushl
popl
push
pusha
push
lea
jmp
mov
mov
mov
call
pushf
movw
mov
call
stc
add
call
jmp
mov
test
add
pushf
cmc
pushf
add
pushl
call
bsf
xor
das
das
mov
cmp
rcr
cmp
shl
mov
pushf
push
cmc
sub
test
stc
shr
jmp
pusha
pushf
pushf
mov
pushl
lea
jno
push
pusha
dec
cmc
cmp
pushf
sub
pushf
call
push
pusha
pushl
popl
pushf
lea
jmp
pushf
movb
lea
push
call
call
and
movb
jmp
call
mov
pushl
lea
jmp
sub
test
bt
pushf
cwtl
cmp
movb
test
cmp
sub
movb
call
push
call
xchg
pop
mov
not
mov
pop
pusha
pushl
pushf
xchg
movsbl
bswap
sets
lea
pushf
popl
shld
stc
shr
stc
mov
bsf
xchg
dec
cmc
pushl
popl
pop
movl
test
shl
push
mov
xor
sub
cmp
sar
ror
not
xor
pop
rol
bts
shr
dec
lea
adc
pop
lea
sub
xchg
shl
setae
mov
xor
mov
rcr
sar
push
shrd
add
call
push
push
jmp
pusha
jmp
pushf
pushl
mov
pusha
push
movw
movb
lea
jmp
pusha
dec
jmp
jmp
mov
cmc
push
rol
mov
cmp
cmp
push
cmc
sub
clc
cmc
stc
clc
add
lea
jl
push
movb
pushf
dec
pusha
bt
call
movw
mov
add
pushf
pushf
popl
pusha
movb
pushl
popl
mov
push
pushf
lea
jmp
mov
pusha
mov
jmp
dec
movb
not
test
pushf
movw
sub
jmp
not
pop
lea
bswap
pop
jle
push
movsbl
mov
setg
movsbl
jmp
shl
bt
mov
sub
mov
adc
call
bt
pushl
cwtl
cmc
clc
sub
pushf
push
jmp
push
mov
push
push
pushl
pushl
ret
shl
bts
bswap
and
mov
pushf
jmp
call
cwtl
movsbw
push
movsbl
mov
call
call
push
mov
jmp
pusha
movzbl
pushf
bts
btc
mov
clc
ror
pushf
bt
bt
add
pushl
mov
jmp
mov
not
cmp
push
pushl
pushf
not
pushf
cmp
jmp
bts
xor
aaa
mov
mov
bt
cmp
add
push
lea
jp
mov
jmp
pushf
mov
mov
push
pushf
lea
jmp
pusha
mov
pushl
movb
movb
mov
mov
jmp
cmp
call
dec
pushf
dec
pushf
mov
test
and
sar
pushf
mov
stc
cmc
sub
jmp
push
mov
push
pushl
pushf
pushf
lea
jmp
push
push
pushf
rep
and
test
btr
bsr
mov
ror
mov
stc
pushl
popf
mov
movb
movb
movb
lea
jmp
lea
pop
cmc
btc
btc
movzbl
rol
btr
pusha
mov
push
mov
ror
cmp
clc
call
mov
lea
js
push
jmp
mov
call
sub
shld
shl
xor
jmp
mov
call
push
mov
pusha
push
mov
mov
jmp
pushf
mov
push
mov
mov
jmp
dec
inc
movsbw
btr
btc
rol
clc
sub
mov
call
pushf
pushf
push
dec
cmc
cmc
ror
pushf
call
call
call
jmp
pusha
sub
cmp
sub
call
push
pusha
dec
stc
not
push
test
cmp
sub
call
movw
pushf
popl
jmp
mov
stc
cmp
sub
jmp
pushl
jmp
dec
sub
movzbw
dec
movzbw
and
lea
jmp
rcr
sub
mov
setne
adc
shr
mov
push
cmp
cmc
jmp
stc
or
setb
mov
bswap
pop
btc
xadd
movzbw
xchg
pop
cmp
aas
aam
pop
sub
bt
and
popf
jmp
pusha
pushl
pusha
pushf
mov
mov
pushl
movb
mov
pushf
movb
pushl
mov
mov
push
call
test
mov
pushf
pushf
sub
pushf
pushf
mov
pusha
pushf
movw
pushl
lea
jmp
cmc
sub
cmp
jmp
lea
jne
pushf
xor
pusha
jmp
push
call
pushf
ror
pushf
add
pushl
mov
mov
pushf
movw
push
pushl
ret
push
pushf
pushl
pushl
popl
pushl
pushf
pushf
mov
lea
jmp
mov
mov
pushf
jmp
cmp
and
pushf
mov
call
call
xor
pusha
call
pusha
mov
movb
lea
jmp
mov
mov
jmp
pushl
popl
movw
pushf
pushf
lea
jmp
pushf
mov
bt
jmp
bt
not
jmp
setnp
mov
seta
bt
push
mov
add
mov
setb
mov
push
mov
push
push
pushf
mov
lea
jmp
setne
mov
pushf
movl
mov
pushf
call
call
mov
mov
pushl
pushl
pushf
mov
pushl
pushf
movb
mov
lea
jmp
push
jmp
mov
pusha
lea
jmp
jmp
push
movb
push
call
call
call
pusha
pushf
mov
jmp
jmp
dec
mov
sbb
rcr
movzbw
or
mov
pusha
bt
push
call
mov
push
push
movw
mov
pushf
lea
jmp
mov
pushf
pushf
popl
pushf
pushf
xchg
pop
mov
bswap
lea
pusha
pushf
xchg
bswap
jmp
call
cmp
cmc
push
sub
jmp
call
jmp
jmp
cmp
jmp
clc
movb
sub
stc
sub
jmp
mov
mov
lea
jmp
xchg
bswap
bswap
pop
bswap
pop
jmp
pusha
pushl
jmp
mov
movb
movb
pushf
mov
pushl
call
inc
add
dec
inc
add
dec
inc
add
inc
adcb
inc
sub
inc
add
inc
inc
add
dec
inc
adcb
inc
xorb
inc
sbbb
xorb
inc
adcb
inc
add
inc
inc
andb
inc
add
inc
inc
adcb
inc
cmpb
add
inc
inc
add
dec
inc
adcb
inc
orb
add
dec
inc
andb
inc
xor
inc
adc
inc
add
dec
inc
xor
inc
orb
adcb
inc
orb
inc
andb
inc
adcb
inc
addb
add
inc
addb
add
inc
inc
andb
inc
add
push
inc
add
inc
add
inc
adcb
sbbb
inc
add
push
inc
or
inc
xorb
inc
add
inc
xorb
cmpb
xor
inc
add
push
inc
sbbb
orb
adcb
inc
adcb
xorb
inc
sbbb
inc
add
dec
inc
sbb
inc
add
inc
inc
or
inc
add
push
inc
or
inc
subb
cmpb
xorb
inc
andb
inc
add
inc
add
inc
cmpb
add
dec
inc
add
inc
inc
cmpb
add
inc
andb
inc
cmpb
add
inc
inc
subb
adc
inc
cmpb
and
inc
add
inc
orb
andb
inc
adcb
add
dec
inc
add
dec
inc
orb
or
inc
sub
inc
xorb
inc
addb
inc
subb
add
inc
inc
addb
add
dec
inc
andb
inc
add
inc
inc
sbbb
adcb
add
inc
sbbb
add
inc
adcb
inc
addb
add
inc
add
dec
inc
add
dec
inc
add
inc
addb
inc
addb
inc
add
push
inc
add
inc
inc
add
inc
inc
andb
inc
orb
inc
add
dec
inc
sub
inc
orb
inc
add
inc
inc
add
inc
inc
sbb
inc
sbbb
orb
add
dec
inc
add
dec
inc
xorb
inc
add
inc
inc
orb
sub
inc
add
inc
inc
add
dec
inc
adcb
add
inc
inc
add
inc
inc
sub
inc
add
inc
or
inc
add
inc
inc
addb
xorb
inc
add
inc
inc
add
inc
inc
add
inc
xorb
inc
orb
add
inc
sub
inc
add
inc
inc
andb
inc
xorb
inc
add
inc
inc
orb
adcb
inc
add
inc
inc
sub
inc
or
inc
sub
inc
add
inc
inc
and
inc
add
inc
inc
orb
inc
add
inc
sub
inc
add
inc
inc
sub
inc
adcb
orb
inc
orb
inc
orb
inc
add
inc
add
inc
inc
orb
add
inc
addb
addb
inc
add
dec
inc
addb
add
inc
inc
andb
inc
adcb
inc
andb
inc
addb
adcb
inc
orb
inc
xorb
adcb
inc
cmpb
add
inc
adcb
inc
subb
add
inc
xorb
adcb
inc
add
inc
inc
orb
inc
adcb
inc
andb
inc
add
inc
inc
and
inc
adcb
inc
xorb
inc
and
inc
adcb
push
mov
movb
mov
push
jmp
call
pushf
popl
call
call
rol
shrd
shr
adc
sub
movzbl
ror
bswap
lea
not
jmp
xchg
call
pusha
call
push
mov
mov
pushf
pushf
movb
pushf
mov
jmp
push
mov
mov
pushf
lea
jmp
or
shl
mov
push
call
pusha
mov
pushf
push
mov
lea
jmp
sbb
aam
shr
setae
mov
push
xchg
jmp
add
call
mov
pusha
jmp
sub
movb
mov
pusha
lea
jmp
shl
mov
jmp
mov
push
pushf
pusha
lea
jmp
push
pusha
mov
pushf
call
mov
push
pushf
lea
jmp
pushf
mov
call
bt
add
jmp
pushf
mov
mov
movb
mov
push
pusha
lea
jmp
stc
inc
mov
sub
call
pusha
call
pusha
test
call
call
push
call
pushf
jmp
call
mov
pushf
pushf
lea
jmp
lea
bts
sbb
and
movzbw
inc
stc
or
sub
jmp
pushf
jmp
stc
test
add
pusha
jmp
cwtl
mov
jmp
call
call
jmp
push
sub
test
stc
bt
jmp
rcl
shrd
daa
call
call
pushf
popl
pusha
pushl
popl
pushf
pushf
push
lea
jmp
neg
movzbl
bswap
movzbw
sub
dec
xor
pushf
movsbw
dec
rcl
btc
bts
sub
not
shld
pushf
rol
and
sub
bsf
neg
cmp
jmp
mov
push
pusha
call
pushf
pushf
mov
pushf
mov
call
stc
add
pusha
pushf
pushf
popl
pushf
movw
movb
mov
pushl
popl
pushl
movb
lea
jmp
cmp
sub
pushf
pusha
movb
mov
movl
pushf
push
push
lea
jmp
mov
call
movl
movw
dec
add
js
test
test
sub
jmp
pushf
mov
pusha
mov
jmp
jmp
cmp
cmp
sub
test
cmc
xor
jmp
push
pusha
pushf
jmp
jmp
cmp
call
mov
movl
jmp
mov
pushl
pushl
pushl
lea
jmp
call
cmc
mov
sar
btr
add
setb
movzbw
not
sub
btc
pusha
mov
pusha
mov
pushf
movb
shl
test
stc
shr
test
pushf
call
push
pushl
pusha
mov
movw
pushf
lea
jmp
btr
shrd
sub
bswap
not
mov
pusha
call
pushf
popl
jmp
jge
pusha
mov
pushf
movb
mov
pusha
mov
push
mov
pushf
pushl
lea
jmp
pusha
jmp
clc
not
jmp
pusha
movb
lea
jne
lea
shrd
not
xorb
movzbw
movzbw
pop
push
lea
jmp
jmp
call
mov
movb
movb
mov
lea
jmp
push
lea
ja
aad
mov
clc
and
aam
lea
and
xadd
lea
stc
sub
or
lea
shrd
sbb
bsf
movsbw
and
sar
call
pusha
call
mov
pushl
dec
movb
lea
jmp
mov
pushl
lea
jmp
pushf
popl
pushf
movw
call
jmp
pusha
mov
pushf
mov
lea
jmp
clc
cmc
rol
pusha
cmc
cmp
push
sub
mov
mov
pushf
sub
mov
call
xchg
jmp
pushf
dec
bt
sub
clc
push
call
push
pushf
pushl
mov
pushf
mov
push
pusha
lea
jmp
rcr
mov
clc
sub
movb
jmp
cbtw
call
jmp
sub
not
push
stc
sub
seto
rol
bsf
lea
xor
pushf
lea
jb
lea
inc
dec
pushf
and
btc
mov
mov
stc
sub
pusha
pusha
mov
pushf
push
movl
pushf
lea
jmp
mov
pushl
push
movw
lea
jmp
clc
not
push
pushf
rol
stc
bswap
shrd
lea
movsbw
call
mov
push
lea
jmp
jmp
pushf
call
mov
mov
pushf
lea
jmp
mov
stc
sub
lea
jnp
pushf
push
pushf
mov
pushl
pushf
pushf
movl
lea
jmp
call
pusha
lea
mov
jmp
test
call
pusha
push
mov
movw
movw
call
jmp
cld
cld
lea
jg
pusha
pusha
rep
ror
bswap
cmc
mov
push
dec
mov
std
cmc
test
stc
pushl
popf
mov
movw
mov
lea
jmp
cmc
add
jmp
pusha
pushf
jmp
movzbw
pusha
movzbw
lea
mov
pushl
call
inc
xor
shl
mov
sar
cmp
not
mov
bt
test
pusha
add
jmp
cmp
xchg
cmc
mov
stc
sub
jle
clc
cmc
sub
jmp
rcl
shl
aaa
shl
mov
pusha
clc
sub
pushf
jmp
mov
push
pushl
lea
jmp
mov
mov
mov
lea
jmp
movl
movw
mov
pushf
push
movw
mov
movb
mov
call
call
push
mov
jmp
dec
stc
sub
pushf
pushf
jmp
pushf
pusha
pushf
popl
jmp
lea
mov
mov
pusha
jmp
inc
mov
stc
push
sub
jmp
mov
push
jmp
sete
not
mov
jmp
call
pushf
inc
call
push
ror
pop
movsbl
dec
adc
setne
test
btc
sub
pushl
call
push
push
mov
dec
pushf
sub
movw
push
pushf
mov
pushf
pusha
push
lea
jmp
sub
cmp
cmc
sub
call
call
push
movb
mov
mov
push
mov
lea
jmp
call
push
pushf
pushl
popl
pusha
cmc
cmc
add
movb
stc
pushl
popf
pushf
pushl
lea
jmp
push
mov
call
lea
pushl
lea
jp
pushf
mov
pusha
pusha
mov
lea
jmp
sub
movl
pushf
movb
call
add
add
call
mov
call
sub
movl
rcl
movsbw
lea
btr
movzbl
push
btc
pushl
mov
cmc
ror
clc
add
pushf
pusha
pushf
pushf
mov
push
mov
pushl
ret
pusha
movl
pushf
movb
push
mov
movb
movb
mov
push
pushl
ret
mov
lea
cpuid
pushf
cmc
mov
sub
stc
call
push
jmp
call
movb
mov
pusha
pushf
mov
pushf
push
mov
jmp
ror
pushl
dec
jmp
mov
shl
mov
mov
jmp
pushl
mov
pushf
lea
jmp
push
jmp
jmp
movb
call
jmp
call
jmp
jmp
pushl
popf
pushf
lea
jmp
pusha
bswap
shl
xor
pushf
stc
rol
shl
lea
xadd
sub
shrd
mov
sbb
dec
xor
xor
mov
not
btr
mov
add
inc
btr
bsf
mov
mov
movzbl
sub
shl
cmc
bswap
add
movsbw
neg
jmp
notl
pusha
inc
stc
dec
mov
call
pushf
jmp
push
pushf
mov
pushf
pusha
jmp
pusha
sub
cmp
cmp
neg
jmp
bt
movzbl
bt
clc
stc
add
jnp
sub
stc
cmc
xor
call
test
pusha
call
mov
pusha
movb
pushf
lea
jmp
mov
pushl
pushf
lea
jo
push
mov
pushf
mov
push
pushf
pusha
mov
push
pushf
pushf
movw
lea
jmp
mov
call
pushf
pushf
popl
pusha
mov
pushl
pushf
pushl
popl
pushf
movb
push
movb
lea
jmp
jmp
jne
push
pushf
xchg
pushl
pop
mov
pusha
not
xchg
movb
pop
movsbw
mov
lea
not
sets
push
lea
push
push
jmp
jmp
mov
pushf
pushf
movw
lea
jmp
call
jmp
pushl
popl
mov
lea
jmp
lea
btr
shl
and
mov
call
pushf
movw
bt
add
bt
clc
pusha
pushf
ror
jmp
btc
sub
stc
neg
mov
btr
mov
stc
push
cmc
add
push
mov
pushl
lea
jmp
mov
pusha
pushf
clc
add
pushf
call
mov
pushl
lea
jmp
add
call
jmp
jmp
call
jmp
call
pushf
mov
jmp
pusha
mov
pushf
mov
mov
pushf
lea
jmp
xor
shld
mov
rcr
test
sbb
mov
sar
sar
mov
cmp
cmp
cmc
add
push
cmp
pusha
cmc
shld
movw
pushl
push
mov
call
lea
jg
pushf
mov
push
pusha
movb
lea
jmp
jmp
pusha
rep
movzbw
stc
inc
btc
mov
shrd
push
mov
push
call
push
lea
jno
push
add
movw
stc
sub
lea
js
mov
pusha
lea
jmp
stc
adc
sub
bsr
mov
lea
cmc
shl
mov
bt
bt
add
cmc
rcl
mov
rcr
setbe
sub
rcr
and
stc
add
bts
neg
setge
rcr
rol
or
shr
movzbl
call
pushf
pushf
popl
call
movw
mov
call
pushf
lea
jne
push
pusha
pushf
mov
push
lea
jmp
pushl
push
dec
push
push
lea
ja
push
rol
cmc
bt
stc
sub
clc
clc
test
add
jno
mov
bt
push
stc
jmp
pushf
pusha
mov
push
movw
pushl
mov
jmp
shr
bt
or
dec
mov
cmc
pushf
call
pushf
mov
movzbw
push
pusha
not
setnp
mov
mov
not
pushf
call
pushl
push
mov
pushf
call
mov
xchg
mov
xchg
movsbl
pushf
btc
bsr
movsbw
push
neg
stc
pushl
mov
push
pushf
rcr
pusha
mov
shrd
neg
rcl
sub
test
pop
xadd
add
je
xor
jne
not
bswap
rol
neg
pushf
shrd
lea
xadd
inc
sub
clc
rol
lea
mov
shl
shr
mov
stc
cmp
add
rol
mov
stc
sub
sbb
shl
sub
rcl
cmc
bswap
shl
add
sar
xor
rcr
neg
push
stc
rcr
bswap
rol
dec
pushf
dec
sub
pusha
movzbw
not
jmp
adc
call
push
pushl
add
movb
jmp
cld
push
mov
not
not
not
mov
std
pushf
cld
call
neg
test
stc
cmc
xchg
test
mov
movb
cmp
sub
jmp
mov
pushf
pusha
pushf
mov
mov
call
pushl
popl
mov
lea
jmp
pusha
call
pushf
jmp
call
pushf
mov
pushf
mov
sete
lea
pop
mov
pusha
pushl
ret
mov
pushf
lea
jmp
pushl
mov
push
movb
lea
jmp
push
pushf
pushf
pusha
lea
jmp
pushf
mov
jmp
call
mov
push
xchg
pushl
mov
not
dec
call
mov
pushf
push
pushf
popl
jmp
btc
bsf
bt
bts
mov
test
pusha
xchg
stc
pusha
push
mov
sub
test
sub
clc
bt
cmc
neg
mov
cmc
xchg
bt
pushf
lea
clc
test
movb
call
pusha
decl
pushl
pusha
lea
jne
jmp
mov
mov
lea
jmp
call
test
call
push
mov
mov
pushf
movw
movb
lea
jmp
push
mov
push
pushf
lea
jmp
jmp
pushf
sub
mov
mov
mov
pushl
lea
jmp
pushf
popl
push
pushf
pushf
pushl
popl
push
pushf
push
lea
jmp
sub
pusha
jmp
