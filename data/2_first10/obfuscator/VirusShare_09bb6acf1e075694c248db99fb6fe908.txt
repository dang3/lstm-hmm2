adc
test
inc
xor
test
sub
lods
test
test
rep
test
std
and
inc
lods
enter
in
push
inc
jo
push
push
and
push
fdiv
and
mov
test
push
call
movsl
idivb
or
mov
stos
and
call
in
push
dec
dec
incl
push
push
push
xchg
test
test
fsubl
inc
cmp
adc
inc
cmp
push
sbb
and
leave
popa
push
test
and
test
push
rorb
test
and
inc
lods
enter
sub
in
push
clc
ret
test
test
push
popf
stc
mov
push
push
push
and
and
and
call
dec
pop
leave
popa
push
test
mov
lods
test
test
and
inc
lods
enter
in
push
cmpsl
push
lods
into
mov
test
test
mov
mov
stos
mov
cmpsl
push
stos
or
mov
lret
test
push
lods
jecxz
call
mov
jmp
call
into
mov
call
fsubrl
in
push
leave
and
push
popa
imul
test
std
and
cltd
pop
xchg
fnstsw
mov
ljmp
mov
std
mov
and
movsb
inc
jbe
popa
push
test
je
mov
test
inc
iret
test
sub
push
test
and
test
push
push
push
test
lcall
popf
in
call
push
push
and
push
xor
bound
push
incl
push
push
push
shrb
push
push
push
sub
outsb
clc
shl
test
rcrb
test
inc
add
push
and
test
sarb
test
shrb
jmp
push
push
push
and
test
rolb
mov
fists
push
and
test
sarb
test
shlb
call
push
push
push
jmp
in
mov
and
jb
test
shl
jmp
push
push
push
stos
stos
push
js
div
imul
cwtl
lods
test
test
and
inc
lods
enter
and
mov
push
popf
jecxz
call
in
push
sub
push
lods
into
mov
test
test
mov
mov
stos
mov
cmpsl
push
stos
or
mov
popf
jecxz
call
mov
cmpsl
push
mov
mov
push
push
mov
jnp
and
test
andb
stos
outsb
stos
sub
leave
and
push
popa
mov
roll
sbbb
aas
jge
hlt
cwtl
xchg
jns
dec
mov
sub
scas
or
jge
jge
hlt
sub
jns
jge
jge
orb
sub
cmp
or
cmp
mov
jns
sub
dec
mov
jge
jge
hlt
cwtl
xchg
jno
testb
clc
mov
in
jge
idiv
jne
jge
hlt
cmp
cmp
cmp
jge
push
add
jno
jge
push
sub
jno
jge
sub
stos
les
jge
mov
and
add
jno
jge
idivb
mov
cmp
cmp
popf
jg
inc
jnp
cmp
mov
roll
jge
idivb
test
cmp
mov
add
jno
jge
idivb
jno
cmp
mov
cmp
cmp
cmp
inc
sti
idivb
xor
jne
jno
jge
jge
hlt
cwtl
xchg
jns
dec
mov
cmp
lret
xchg
daa
jge
or
cmp
cld
xchg
imul
or
jno
jae
cmp
mov
hlt
cmp
mov
jne
xor
cli
push
mov
push
ret
cld
fbstp
jge
jge
jl
jge
cmp
cmp
jge
pop
jl
jge
jge
std
aam
cmp
xchg
ja
jge
sbbb
aas
jge
hlt
cwtl
sbb
mov
adc
das
sub
sbbb
jns
jnp
ja
jge
xchg
rolb
cwtl
xchg
jne
dec
mov
jge
jge
testb
leave
rorl
cmc
cmp
jne
lret
xor
jge
or
jle
inc
jb
jg
sub
xor
idivb
or
cmovns
das
add
imul
hlt
mov
aaa
jne
mov
imul
sub
sub
mov
testb
testb
les
jge
mov
sbb
cmp
imul
jge
hlt
jge
jge
xchg
add
jl
sub
cwtl
sbb
mov
adc
sti
jno
jge
inc
jge
jge
or
or
test
addb
sti
dec
mov
inc
mov
ss
stos
insl
lock
jge
jg
test
mov
pusha
hlt
mov
push
lods
insl
imul
imul
jge
mov
jno
jge
inc
mov
inc
mov
jno
sub
orb
xchg
in
addb
test
insl
jns
jge
rcrl
mov
jns
jge
sub
cwtl
xchg
jns
imulb
jne
jne
jge
xor
orl
add
divb
jne
stos
insl
lock
jge
aas
jne
mov
subb
inc
jno
jge
push
mov
leave
dec
jno
jge
les
jge
mov
sbb
stos
insl
lock
jge
jg
lods
xchg
hlt
jg
xor
div
jne
jge
xor
dec
mov
jmp
jge
hlt
mov
push
mov
imul
jno
jge
push
mov
idiv
jno
jge
jl
push
mov
lock
jno
jge
hlt
insl
hlt
sub
jne
cmpl
cmp
sub
out
jno
jge
inc
lods
add
xchg
xchg
xor
mov
aad
ficomps
fcmovbe
pop
cs
mov
ficomps
fcmovbe
pop
add
aad
ficomps
fcmovbe
pop
xchg
sub
pop
pushf
push
pop
xchg
ficomps
sub
sub
ficomps
cwtl
out
out
adc
aad
ficomps
fcmovbe
pop
xchg
ficoms
mov
pop
sub
xor
aad
ficomps
pop
in
into
pop
lods
fidivrl
ficomps
fcmovbe
pop
movsb
rclb
pop
movsb
rcrb
adc
push
add
cwtl
and
icebp
ret
and
negb
xchg
ret
repz
lods
movsb
js
enter
jecxz
and
dec
inc
je
insl
test
inc
leave
insl
mov
mov
dec
fdecstp
xchg
push
clc
aas
add
add
in
js
ja
pop
lods
in
addr16
push
push
cmpsl
in
sub
icebp
xchg
jmp
inc
and
mov
dec
and
fstl
pop
sbb
test
mov
stos
sbb
repz
add
insb
mov
pop
je
mov
cmp
sub
stc
mov
out
mov
cmp
mov
sub
mov
push
pop
dec
xchg
or
lahf
xchg
out
out
or
mov
push
call
add
and
das
cwtl
into
pop
cmpsl
sub
out
.byte
.byte
.byte
jbe
ja
xor
xor
xchg
and
cmc
mov
cmp
jno
xor
and
mov
xor
fidivs
sbb
cmp
fs
pusha
push
and
xor
xchg
mov
lret
xor
sub
fnstenv
shll
lret
mov
cmp
ret
mov
xor
jecxz
mov
cmp
hlt
inc
cmp
lret
lret
lret
xor
jecxz
mov
cmp
xor
daa
pop
cmp
pushf
lret
lret
lret
mov
inc
cmp
xchg
lret
lret
lret
push
mov
xor
lcall
mov
push
mov
and
loop
aaa
popa
cmp
cmpsb
cmp
xor
mov
inc
cmp
ss
jno
mov
adc
jbe
pop
in
aaa
popa
cmp
cmpsb
and
xor
mov
and
popa
cmp
cmpsb
and
xor
mov
aaa
popa
cmp
cmpsb
cmp
xor
mov
inc
cmp
ss
jno
mov
push
mov
and
popa
cmp
cmpsb
cmp
xor
mov
in
aaa
popa
cmp
cmpsb
cmp
xor
mov
cmp
loop
mov
xor
pop
repz
mov
cmp
xor
push
mov
lea
xor
nop
push
push
mov
and
xor
nop
push
mov
xor
sarb
and
xor
nop
push
std
idivb
xor
test
bound
shll
clc
mov
xor
fmulp
lret
lret
mov
cmp
mov
mov
xor
jae
xor
hlt
mov
ss
xor
jae
lret
lret
lret
lret
mov
and
jae
xor
xor
add
cmp
and
and
jae
xor
arpl
repz
xor
aaa
xor
xor
or
and
xor
mov
mov
ss
xor
xor
add
mov
xor
int
mov
mov
xor
xor
adc
xor
xor
xor
gs
popa
mov
push
add
mov
xor
mov
xor
jle
fs
and
idivb
xor
jle
fs
xor
hlt
xor
repnz
sbb
mov
fdivl
xor
insb
mov
push
mov
repnz
sbb
mov
cmp
popa
and
xor
je
lret
popa
sub
hlt
pop
xor
xor
fs
inc
cmp
push
lret
lret
lret
cmp
outsb
xor
inc
and
push
mov
fs
cmp
jbe
xor
push
mov
inc
and
mov
sub
fldl
lret
lret
lret
std
imulb
in
jle
xorb
xor
popa
mov
cmp
inc
cmp
nop
push
std
idivb
xor
push
data16
add
jmp
add
add
add
jmp
add
in
mov
mov
mov
mov
imul
xor
popa
leave
ret
mov
and
add
add
cs
outsl
cmp
add
stc
push
rclb
lcall
movsb
jne
ret
pop
sldt
add
jae
jbe
mov
mov
and
add
add
add
loopne
add
push
and
cmp
je
jmp
pusha
mov
mov
mov
xor
mov
xchg
mov
imul
add
push
call
sbb
loop
mov
mov
push
xor
push
push
push
xor
call
lea
mov
sub
xchg
push
lods
mov
lods
mov
lods
mov
lods
mov
lods
push
mov
push
call
xor
sub
xor
mov
ror
pop
dec
jecxz
jmp
push
xor
xor
xor
xor
pop
mov
test
je
mov
xor
mov
inc
loop
pop
loop
add
call
xor
xor
popa
ret
scas
jne
in
repnz
or
repnz
repnz
jnp
xchg
cwtl
repz
or
xchg
xchg
cli
jns
ja
xchg
ret
xor
or
jnp
jns
ja
xchg
jns
loop
cmpsl
cli
jns
loop
xchg
jns
ja
xchg
std
dec
adc
xor
repnz
icebp
mov
jno
lock
or
lock
jno
divb
negb
and
xchg
cmp
div
mov
sbb
pop
daa
cltd
pop
xchg
mov
fildl
adc
adc
and
xchg
pop
fwait
pushf
ret
out
mov
dec
inc
mov
mov
sar
or
repz
add
or
dec
std
shl
mov
dec
das
cmp
std
xorl
mov
sbb
in
mov
nop
cwtl
jb
mov
mov
adc
push
add
fs
mov
add
jb
fwait
xchg
mov
xor
in
insl
pop
fbstp
jb
sarl
stos
push
test
popa
ja
cmc
sub
fistl
out
mov
xchg
mov
mov
adc
adc
jmp
jmp
jmp
jge
and
cmp
aaa
adc
sub
xor
aam
jb
es
cmp
hlt
es
clc
jnp
shl
sbb
mov
push
sub
lea
fucomip
mov
adc
adc
adc
adc
adc
and
adc
xor
add
or
sbb
inc
jle
jno
mov
fcoms
lods
mov
push
xchg
jmp
xor
mov
adc
dec
bound
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
cmp
dec
rcl
xchg
or
setg
scas
test
enter
jb
jecxz
psubw
dec
inc
fstl
divw
lods
fbld
ret
or
mov
xchg
ret
cli
dec
jnp
in
in
pop
push
stc
sbb
imul
sub
adc
cwtl
jecxz
push
popa
data16
pushf
adc
or
test
push
insb
mov
sti
inc
call
lcall
loop
sti
outsl
mov
cmpsl
loope
fsubp
push
fdivl
push
push
imul
xchg
pop
and
rcr
cmp
push
mov
jns
pop
lea
rclb
out
test
mov
inc
mov
push
stc
out
outsl
xchg
push
mov
mov
mov
imul
inc
or
sbb
stc
sub
aam
sarb
or
add
jl
sub
fstpt
jmp
in
inc
inc
dec
into
sub
out
xchg
pop
lret
mov
out
stc
shlb
sti
fists
sbb
mov
cmp
or
jp
and
arpl
loope
sub
test
cmp
fdivr
sti
add
stos
shr
insb
mov
cmpsl
movsl
add
lahf
lret
cmpl
loop
loope
mov
sub
sub
in
loope
jno
inc
shr
cmp
xor
inc
ja
les
pop
in
jl
je
fidivs
in
inc
mov
stos
or
mov
and
fidivrs
ret
mov
dec
push
aam
cltd
or
jg
pop
and
push
fldt
pop
pop
in
lock
mov
pop
test
xchg
push
movsl
cmpsl
in
iret
aad
mov
lahf
out
lcall
out
push
pusha
xor
inc
movsl
inc
shrl
and
jmp
loop
mov
out
cmp
loopew
decb
pop
cmp
xor
outsl
sbb
sbb
push
push
or
xor
stos
sti
lea
fadd
lret
jp
mov
xchg
sbb
xchg
pop
repz
xor
addr16
roll
push
adc
cltd
movhps
lea
mov
push
pop
xor
pop
sbb
mov
jle
sbb
add
xchg
mov
cmp
jle
dec
addr16
sbb
pop
pop
jno
adc
cltd
adc
cmp
or
inc
push
frstor
rcll
std
sub
inc
je
cmp
jge
pop
cltd
pop
push
mov
mov
in
insb
ss
pushf
push
fstl
adc
je
xor
add
call
adcl
xor
cmpsl
aad
jl
adc
sbb
push
cs
push
lea
nop
push
xchg
mov
cli
mov
aaa
sbb
sbb
xchg
lea
add
sahf
push
sbb
pop
ret
mov
jl
pop
adc
inc
das
je
dec
push
pop
xchg
cmc
mov
push
icebp
pop
test
jb
shld
lea
mov
add
inc
aam
fs
jae
add
adc
movsb
adc
mov
xchg
xchg
das
adc
insl
dec
push
les
jg
sbb
pop
inc
movb
push
hlt
mov
push
mov
push
ds
notl
sbb
aas
hlt
xchg
icebp
xorl
adc
aad
lods
push
rcll
js
fadds
push
adc
cmp
mov
jno
pop
jbe
jge
sub
mov
aad
sbb
inc
outsl
sub
loope
jno
push
adc
mov
inc
or
and
cmp
xor
xor
adc
test
nop
adc
sbb
cs
push
or
in
xor
jg
pop
mov
xchg
fcompl
push
xor
test
inc
icebp
push
push
fnsave
cmp
push
cld
inc
sbb
push
xchg
jne
adc
adc
or
adc
mov
jg
fadds
mov
and
mov
mov
xor
scas
xor
and
rolb
dec
or
xor
add
mov
jno
adc
fwait
or
arpl
shll
mov
pushf
stos
sbb
mov
dec
jecxz
shlb
sub
or
pop
test
jecxz
mov
lret
or
mov
js
mov
mov
mov
out
idivl
mov
and
ss
add
aad
mov
scas
shlb
bound
fwait
sbb
mov
pop
stos
push
sbb
arpl
jbe
add
imul
inc
pop
pop
fwait
leave
test
test
pop
jmp
es
mov
cli
stc
ja
add
mov
loope
and
sahf
and
pop
enter
nop
ret
adc
xor
outsb
imul
inc
insb
test
xor
out
stos
pop
incl
decl
push
icebp
dec
mov
push
pop
xor
cmp
cwtl
pop
movsb
pop
dec
adc
jg
jno
lret
cmp
clc
mov
mov
cmp
jg
jl
lahf
iret
or
cmp
test
ret
movsl
dec
negb
push
mov
frstor
scas
aaa
or
lea
pop
mov
jno
add
aaa
loopne
pop
xor
mov
dec
pop
decb
out
fiadds
and
mov
or
mov
stc
outsb
jnp
movsb
arpl
inc
iret
xchg
popf
in
mov
inc
outsl
mov
push
sahf
push
mov
xchg
iret
lods
inc
dec
xor
pusha
dec
or
mov
cmp
clc
enter
lods
negb
or
jl
pop
push
xor
and
mov
pop
lcall
cmp
sbb
jne
pop
fisttps
addb
jl
adc
test
and
jae
add
dec
mov
mov
sbb
rorl
add
adc
mov
cs
lods
rcrb
fmull
pop
pop
cmp
fdivrs
xchg
pop
addl
ljmp
pop
mov
sarl
shll
js
xor
jns
adc
inc
add
adc
sti
dec
cmp
dec
xor
mov
pop
popf
insl
push
push
mov
xor
xorb
or
mov
mov
jno
adc
lret
loopne
in
in
inc
loop
jae
mov
out
mov
adc
push
movsl
push
adc
push
add
ffree
or
pushf
push
push
push
push
bound
mov
jl
mov
sti
je
lcall
nop
adc
cmp
or
sub
push
mov
js
mov
aad
sub
xchg
xor
adc
add
mov
cmp
mov
in
push
jnp
add
push
add
mov
out
jne
testb
pop
push
test
dec
inc
loopne
imul
push
fwait
dec
js
pop
xchg
cmc
jbe
inc
sbb
add
pop
or
and
clc
out
sub
ds
aad
std
add
test
flds
pop
jl
xchg
enter
daa
roll
repnz
xlat
cwtl
stos
or
and
inc
mov
dec
rolb
cmc
adc
xchg
xchg
sub
aam
xchg
jno,pt
aam
mov
js
adc
leave
xchg
jmp
mov
pop
sub
cld
fistpl
sbb
jp
jmp
test
std
test
jmp
mov
mov
mov
pop
stc
mov
stc
pop
lds
in
cmpsb
call
lahf
clc
in
or
outsl
xor
pop
pop
or
adc
dec
js
stos
shl
repnz
sbbb
lods
pop
add
jg
jl
push
cmp
sub
dec
add
int
test
and
mov
sub
dec
cmp
ret
xlat
sbb
in
jnp
sub
shrl
xchg
shl
sbb
scas
sbb
pop
mov
xor
les
push
int3
xor
imul
xchg
inc
hlt
or
dec
mov
and
out
cwtl
or
pop
mov
xchg
jg
sbb
xchg
cs
or
arpl
and
icebp
call
addl
inc
andl
mov
xchg
and
divb
adcl
pop
out
jne
and
mov
add
mov
xchg
test
adc
xor
icebp
lret
in
sti
movsl
cmp
pop
inc
sbb
sbb
je
mov
idivb
pop
out
jle
mov
test
loope
jmp
jecxz
xchg
adc
shlb
xchg
addb
sub
jo
sub
icebp
sbb
xor
push
test
mov
sbbl
push
cld
out
shll
je
pop
mov
jecxz
cltd
jns
repnz
inc
lahf
adc
jp
add
sub
push
fwait
insb
or
inc
inc
mov
lock
add
es
cli
jmp
inc
sub
adc
cmp
add
pushf
mov
xchg
push
movntq
out
adc
mov
lds
xor
push
cmp
enter
shll
cmp
lds
mov
into
mov
mov
xor
add
test
adc
je
jno
popa
mov
mov
and
sar
mov
mov
xor
pop
test
add
sbb
mov
dec
aaa
cmp
jle
xor
inc
pop
mov
fsub
lock
mov
mov
add
cmc
test
xchg
insl
xor
push
inc
add
mov
sbb
cmp
loop
dec
mov
mov
dec
add
lock
add
js
movsb
jb
push
je
in
xchg
jbe
pushf
leave
push
sbb
add
mov
mov
sahf
add
mov
lret
inc
rcrl
roll
mov
xchg
cmc
xlat
xchg
mov
push
repz
pop
or
and
pop
cmpsl
push
xlat
push
mov
sbb
dec
add
dec
dec
pop
repz
mov
cltd
into
mov
arpl
xor
pop
subl
and
inc
xchg
pop
lods
push
mov
pop
dec
push
mov
sahf
int3
sbb
in
push
xchg
jbe
mov
xchg
inc
subb
cmp
jg
pop
rcrl
xor
lods
jl
or
inc
es
scas
and
dec
rolb
xchg
cmp
loop
sbb
ds
adc
mov
pop
pop
xchg
adc
mov
cmp
mov
js
fisttps
inc
mov
push
aas
cmp
xlat
repnz
jle
xor
fs
xchg
mov
shlb
dec
xchg
pop
cmp
cmp
lods
cmp
mov
in
leave
dec
and
cmp
jno
mov
gs
stos
cmp
jb
mov
jns
dec
cmp
lds
pop
rcll
ja
pop
repnz
test
cmpsb
sub
test
cmpsl
iret
sbb
push
ret
sub
sbb
mov
mov
aaa
scas
inc
lahf
push
xor
xor
rolb
rorb
add
lret
outsb
mov
rorl
int
add
notl
jl
int
pop
mov
mov
pop
inc
xchg
adc
out
mov
outsl
es
imul
cmpsl
mov
sti
or
sub
int
into
outsb
push
movsl
int3
jmp
or
clc
cmc
push
insl
jbe
outsl
fs
add
xor
xchg
jo
xchg
mov
das
negl
xor
dec
adc
or
and
inc
imul
inc
ljmp
lds
push
fidivs
into
sbb
insb
lcall
outsb
mov
test
mov
call
xor
xor
std
aas
inc
imul
clc
cwtl
int
dec
lret
dec
cmp
inc
mov
adcb
cld
into
pop
ret
outsl
lcall
arpl
pop
cs
sbb
sbb
test
xor
jmp
cmp
pop
fcompl
push
mov
mov
push
clc
xor
test
fyl2x
rcrl
scas
dec
movsl
mov
jecxz
arpl
lret
aaa
push
dec
loopne
pop
dec
loope
scas
aas
xchg
orl
mov
roll
lods
xor
add
aas
add
cmovae
arpl
add
ss
leave
xor
fnstsw
hlt
fadd
jmp
sahf
mov
jp
and
addr16
movsb
out
cwtl
roll
std
push
fimull
aas
cs
ret
repz
iret
test
xor
ret
push
sbbl
sub
push
xchg
stos
test
xor
cmpsb
nop
sbb
push
aas
call
push
stos
add
fdivrl
xchg
mov
les
adc
hlt
xor
into
sub
add
mov
cltd
mov
out
sbb
mov
cmp
outsb
jl
test
push
in
mov
movsl
stc
jo
adc
fnsave
mov
xor
arpl
cltd
jno
negb
stos
cmp
out
sbb
add
push
push
fistpll
adc
lret
adc
mov
or
idivb
int3
sbb
xchg
push
jno
mov
div
sti
jb
mov
or
cmp
repz
xor
lods
lret
test
sahf
sub
cmp
ret
fldt
jle
push
test
stos
stos
xchg
movsl
sbb
es
jge
sub
pop
fldenv
mov
mov
sbb
ljmp
jle
arpl
pusha
fwait
dec
pop
push
add
inc
daa
inc
dec
mov
mov
into
unpcklps
pop
dec
leave
adc
inc
add
cwtl
into
pop
int
lds
lods
repz
in
fs
jle
in
ds
movsl
mov
mov
push
add
dec
push
mov
xor
mov
pop
pusha
mov
mov
jo
imul
xchg
xor
xor
ljmp
mov
or
pop
jbe
pop
push
xor
sub
dec
lret
or
imul
xchg
jg
inc
mov
push
mov
mov
push
cmp
insl
outsb
fcompl
jl
push
jl
adc
movsl
xor
or
popa
add
out
xchg
test
or
sbb
dec
fidivrs
mov
sbb
dec
push
adc
scas
negb
xor
pop
aaa
xor
cs
xchg
mov
xchg
mov
jbe
sti
xchg
add
aam
pop
push
das
add
adc
inc
mov
mov
out
insb
and
bound
and
nop
lock
iret
xchg
sub
inc
adc
sbb
ret
aad
loopne
cli
sar
cmp
lea
inc
or
push
fld1
mov
sub
int3
fiaddl
jge
fsubrl
mov
mov
inc
leave
test
mov
icebp
push
xchg
fldenv
das
pushf
and
inc
icebp
pop
pop
push
sub
lock
cmp
mov
mov
out
jge
enter
pusha
inc
mov
mov
outsb
adc
push
cmp
popa
fdiv
ds
fistl
push
push
aam
loopne
jno
mov
mov
stos
lods
cmpsl
outsb
dec
fwait
andb
sbb
xchg
xor
dec
aaa
inc
aam
bound
push
sub
pop
lods
pop
shl
mov
mov
inc
and
fadds
xchg
jnp
nop
mov
repnz
lahf
arpl
lds
push
adc
lods
scas
xchg
addr16
dec
mov
mov
pusha
testl
pop
xchg
fisttps
mov
xlat
jns
scas
mov
das
flds
add
nop
shrb
mov
sub
push
add
adc
popa
mov
add
arpl
arpl
imul
push
clc
sbb
cmp
addr16
mov
je
xlat
les
mov
mov
jb
popf
adc
push
jns
aaa
mov
mov
aad
cltd
dec
std
js
jne,pn
es
pop
nop
pushf
movsb
hlt
adc
es
and
popf
mov
dec
jo
mov
rcll
sbb
mov
cmp
movsl
xorl
div
imul
xor
adc
xchg
dec
fstl
add
add
in
nop
cmpsl
dec
xchg
je
ljmp
cli
movsl
push
popa
cmp
pop
or
mov
pop
xchg
or
pop
cs
sahf
pop
aam
mov
or
pop
idiv
cli
mov
les
or
cmc
xchg
push
inc
adc
popf
push
mov
xorb
inc
enter
or
rol
xor
adc
sub
adc
fimuls
and
mov
cmp
jmp
push
mov
fsts
pushf
pop
mov
dec
fs
sbb
pop
dec
xor
lock
inc
jmp
xor
lds
and
dec
adc
add
sahf
fistps
xor
xor
jb
sahf
das
push
imul
jl
sbb
xchg
xor
xchg
mov
fistpll
jmp
cld
outsb
repz
mul
insb
mov
push
add
orb
lods
inc
imul
lcall
push
inc
cmc
xor
cmc
icebp
repnz
inc
mov
ss
popf
or
outsl
xchg
lock
or
pop
in
sub
je
and
xchg
pop
mov
mov
xchg
pop
jnp
dec
mov
inc
xlat
hlt
xor
adc
adc
std
jo
push
outsl
inc
mov
add
dec
notl
dec
jno
lea
jbe
cmp
xor
or
out
cmc
add
mov
mov
sbb
xchg
in
movsb
mov
popa
pop
in
add
jecxz
sub
lret
fcoml
mov
xchg
lret
insl
scas
add
test
xchg
popa
fcompl
scas
inc
push
jo
int3
cmpsb
insl
ds
jl
pop
add
cmp
push
mov
mov
add
movsb
mov
pop
mov
loopne
sahf
jb
daa
les
push
inc
or
and
jae
mov
mov
ret
lods
jmp
loop
dec
cmp
mov
xchg
cmpxchg
or
dec
sbb
mov
xor
mov
sbb
add
jp
nop
cmp
je
lock
or
hlt
ret
jge
ja
fsubrp
adc
repz
push
dec
inc
shll
les
aaa
sbb
inc
shll
xorb
push
push
xor
insb
adc
jno
push
inc
fists
rol
mov
push
cmp
ja
movsb
addl
mov
repnz
cmp
mov
test
mov
or
add
ja
bswap
out
jne
fsubl
addr16
sub
sub
jb
fdiv
mov
sbb
mov
or
pop
mov
xor
mov
pop
inc
fmull
mov
pop
pop
out
xchg
outsb
imul
adc
pop
cmp
push
and
sub
pop
es
les
popf
movsb
and
mov
ja
mov
adc
mov
mov
adc
xor
and
loop
jbe
pop
pop
xchg
pop
dec
daa
mov
adc
jg
add
add
gs
jnp
sub
mov
xor
mov
add
mov
out
xorl
adc
cld
aam
cld
aad
insl
idiv
leave
out
jnp
adc
mov
in
sbb
xlat
inc
in
push
sbb
test
adc
clc
and
shlb
movsb
stc
cmp
movsb
jno
inc
or
lcall
or
or
cld
cld
or
shll
nop
das
mov
xor
sub
cmc
mov
jo
lods
ret
dec
xchg
mov
sub
in
cmc
xor
adc
adc
cli
in
arpl
ja
out
inc
pop
mov
push
test
out
mov
sub
icebp
ret
jecxz
jp
cmp
push
outsl
push
fsubr
jp
call
xchg
shlb
mov
ss
xchg
pop
scas
and
mov
outsb
push
inc
push
adc
popa
mov
push
dec
and
or
mov
mov
sbbb
aam
leave
push
push
mov
sub
jo
adc
adc
mov
push
icebp
test
pusha
mov
ja
sbb
and
fcos
into
and
xchg
mov
push
pop
mov
push
inc
xchg
and
pop
push
sbb
pop
stc
out
cmp
jge
mov
cmp
aas
out
test
call
aaa
test
lret
xchg
pushf
or
data16
iret
lods
add
mov
add
dec
mov
sbb
xor
mov
es
push
cmp
mov
enter
inc
data16
pop
negl
lcall
jle
jne
adc
sub
push
mov
mov
pop
adc
xchg
xchg
add
out
sbb
lcall
add
add
nop
fimuls
xchg
mov
xor
push
into
aam
adc
xor
test
sub
xor
adc
cwtl
jne
ficomps
cmp
add
push
mov
cmp
int
repz
mov
lods
jbe
nop
dec
pop
mov
test
sbb
test
xor
nop
mov
xlat
xchg
cmovns
add
mov
es
push
out
pop
negb
stc
inc
dec
movsb
dec
xchg
mov
mov
lret
nop
mov
xor
mov
pop
cwtl
sbb
mov
mov
pop
lds
in
mov
aaa
adc
out
or
test
or
pop
aad
sbbl
xor
mov
std
mov
pop
cwtl
mov
jmp
xchg
and
sub
xor
push
sbb
es
inc
sbb
nop
add
scas
xor
xor
fistl
mov
js
cld
add
lahf
insl
and
xor
lret
adc
and
stos
test
xor
adc
pop
sub
es
pop
adc
lea
pop
push
push
gs
sub
or
ss
shll
inc
push
jae
test
clc
mov
fs
jo
addl
aam
movsb
mov
es
repnz
sub
sub
ljmp
fisttpl
xchg
cmpsl
lea
cmp
std
adc
mov
mov
or
std
rclb
adc
pusha
fs
addl
add
andb
scas
cmpsl
xchg
insl
push
sbb
daa
sbb
mov
mov
popf
xchg
jo
test
pop
xchg
dec
sbb
aaa
lahf
xchg
lcall
lret
xchg
mov
test
enter
adc
addl
cmp
sub
sub
addr16
je
pop
mov
or
fsubs
js
fs
mov
and
adc
add
jl
mov
mov
mov
sub
or
lods
jo
push
sbb
push
cmp
mov
mov
or
sub
in
or
ret
push
and
adc
pusha
pop
fcmovnbe
push
add
loope
mov
push
xchg
dec
insl
fwait
inc
push
push
je
rcrb
mov
push
cld
add
and
add
or
mov
sub
jge
mov
dec
sbb
xchg
shll
pop
push
xor
fxtract
les
sahf
mov
push
cmp
push
mov
push
xor
pop
popf
fsubl
adc
mov
jl
icebp
xor
jge
adc
fadds
push
fnstsw
imul
mov
add
mov
cmp
xchg
jnp
in
pop
aas
data16
and
dec
cwtl
loop
xchg
rcrl
iret
inc
adc
xor
insb
adc
xor
mov
xchg
sbb
stos
rcll
dec
rcrl
cmpsl
jecxz
test
pop
gs
xor
xor
pop
sbbl
movsb
jo
test
sbb
aad
mov
mov
shl
rolb
xor
ljmp
cmp
hlt
ret
dec
pop
xlat
inc
sub
xchg
mov
add
test
mov
mov
push
xchg
push
mov
lock
sub
dec
jns
cmp
pop
scas
rclb
test
gs
xor
xchg
fistpll
mov
je
adc
add
mov
xor
in
jnp
add
pop
inc
push
rorl
and
data16
and
inc
mov
mov
dec
cwtl
mov
sub
adc
and
dec
dec
lods
aad
mov
jns
scas
fsts
movb
inc
or
out
add
push
jae
lahf
and
cmc
push
mov
jle
mov
divb
adc
mov
xchg
mov
and
jp
jge
push
int3
fsts
leave
mov
outsb
xor
sbb
popa
shl
lods
inc
add
loop
mov
stc
pop
sub
mov
js
push
pshufw
jb
sbb
xchg
sbb
movsl
fildl
fadds
push
jne
and
lock
mov
mov
mov
popa
rorl
gs
bound
dec
cmpsl
push
rclb
or
mov
inc
pop
xor
xchg
cs
mov
xchg
sub
xchg
xchg
mull
rep
push
addl
xlat
mov
inc
leave
js
lods
push
popa
pop
cmp
clc
je
fadds
int
adc
sbb
sar
inc
js
test
pop
adc
or
xchg
xlat
jbe
or
mov
add
cmp
xor
popa
sbb
or
pextrw
xchg
or
rorl
dec
inc
mov
sbb
arpl
cmp
push
aas
add
mov
int3
mov
or
mov
sub
arpl
test
sub
outsb
cld
inc
add
shrb
mov
scas
enter
out
inc
dec
xor
sub
mov
adc
addr16
mov
sub
push
es
xlat
iret
push
gs
push
pop
xor
test
mov
cmp
aam
pop
mov
and
stos
outsb
data16
sub
repz
int3
pop
add
sbb
mov
das
or
push
push
jp
pop
push
jle
xchg
aas
pop
or
pop
or
inc
inc
add
loop
loope
push
mov
lret
inc
jle
pop
jp
xchg
cld
fsubrl
cmc
pop
lahf
push
xor
jge
lret
stos
push
xchg
cmpsl
out
rcrl
repz
call
add
pushf
out
fbld
dec
add
and
adc
les
xlat
and
inc
loopne
popa
hlt
dec
mov
sbb
cmp
cltd
jo
push
pop
stos
lret
pop
xor
sbb
adc
mov
cltd
je
xchg
pop
jle
push
pop
aaa
jbe
leave
mov
add
idivl
inc
mov
scas
sub
jp
xchg
push
add
push
push
daa
cmc
mov
or
sti
insb
lds
ja
jg
lahf
sqrtps
xchg
pusha
jns
mov
and
out
ret
xchg
xchg
sbb
cmpsb
adc
pop
cmp
pop
jge
out
inc
sub
jbe
out
stos
dec
out
cmpsb
mov
mov
mov
push
xchg
jl
cwtl
sahf
sub
pop
aaa
gs
mov
out
mov
aam
xchg
data16
sbb
addb
test
cli
xchg
adc
jp
sub
inc
jecxz,pn
aad
inc
xor
orl
cmp
hlt
mov
pop
outsl
outsb
cld
and
cwtl
into
mov
xor
test
cmp
inc
stos
andl
or
xchg
jns
xor
mov
or
xor
shll
mov
clc
jns
add
mov
xchg
push
arpl
addr16
jl
bswap
subl
test
and
inc
inc
subb
ds
mov
and
int3
movsb
dec
sbbl
pop
pop
jo
mov
add
leave
stos
je
add
push
stos
icebp
sub
jo
mov
mov
leave
add
pop
lock
shrl
jbe
adc
ja
inc
pop
mov
jl
pop
jbe
mov
fsubs
xor
push
sbb
cmp
xchg
push
mov
sub
insb
ja
movsl
push
gs
mov
xor
addr16
adc
fstpt
cmp
insb
jne
xor
cli
push
ret
ficomps
fcmovu
push
add
fcmove
decl
ljmp
jg
cmp
xchg
inc
dec
xor
mov
lock
popa
aam
adc
or
ficomps
sub
jecxz
aaa
iret
xchg
fwait
pusha
fwait
in
sub
ljmp
cmpsb
loopne
mov
sub
xor
add
sahf
movsb
push
mov
enter
int3
mov
pop
notl
int
jl
or
sbb
outsb
pop
mov
lock
pop
ja
shll
pop
iret
sub
pop
pop
inc
int
shl
nop
cmc
sub
jecxz
lds
sahf
mov
cli
and
inc
push
pop
inc
rcrl
sub
push
out
frstor
cmpsb
push
stc
pop
mov
dec
push
pop
mov
nop
call
das
and
out
xor
daa
je
ljmp
mov
aam
pop
xor
or
or
xor
xor
in
adc
cmc
xchg
xor
cmp
dec
mov
addr16
enter
xchg
out
mov
sbb
jnp
imul
push
insl
cmp
dec
rcrb
xchg
scas
out
mov
and
xchg
cli
jnp
adc
mov
push
sub
out
test
push
shlb
xchg
imul
inc
rorb
repz
or
pop
add
sub
and
in
ret
cli
ljmp
lds
mov
test
sbb
push
xchg
sbb
cld
jle
fdivrl
lret
cmpsb
stc
push
js
aam
dec
subb
stc
insb
inc
lock
adc
les
iret
sbb
adc
xor
movsb
fstl
and
std
pushw
push
insb
loopne
imul
nop
or
test
call
lret
or
sub
mov
adc
leave
inc
cwtl
push
add
xor
adc
jo
add
cld
stos
sub
push
sub
adc
push
inc
sbb
movsl
mov
jg
adc
jno
fdivrl
in
stos
inc
xchg
adc
je
mov
xchg
adc
les
lock
or
cmp
adc
push
aad
adc
cmp
push
dec
shr
sub
jle
inc
jmp
mov
dec
lds
xchg
fstpt
inc
scas
stc
scas
xchg
push
mov
push
mov
mov
add
ds
push
dec
imul
fidivl
gs
ds
cmp
cmpsb
mov
fiaddl
and
or
roll
adc
adc
mov
inc
mov
hlt
sub
lock
sub
cli
push
or
push
popa
in
adc
sub
int
das
mov
mov
xchg
repz
or
push
leave
stc
mov
iret
pop
lods
cld
xchg
mov
sub
xchg
jb
adc
mov
leave
mov
adc
jne
arpl
hlt
or
test
sub
nop
pop
insb
cli
ja
stc
sbb
cmp
insl
xchg
scas
fiaddl
mov
sarb
xor
cwtl
add
lcall
mov
dec
adc
xchg
mov
jne
fcomip
or
stos
out
sbb
push
push
cmovnp
lods
or
cmpsl
adc
imul
mov
aaa
outsb
imull
add
mov
clc
cmp
iret
mov
push
out
ret
scas
repz
sbb
sbb
js
fwait
and
adc
adc
adc
je
cld
sbb
fisttpll
lds
cmpsb
icebp
rorl
mov
jbe
xlat
daa
inc
pop
fmull
inc
gs
fildl
fs
push
add
mov
mov
adc
in
adcb
xor
jno
ret
sub
arpl
add
sbb
lds
out
in
jbe
xor
frstpm(287
push
cmp
call
pop
push
shl
sbb
test
xchg
out
dec
mov
xchg
adc
out
xchg
push
jns
test
stos
dec
mov
xchg
pushf
movsl
push
in
lret
movsl
outsl
imul
xor
add
cmp
sub
or
mov
fwait
addl
lret
lock
fdivs
mov
stc
xor
mov
call
negl
sbb
hlt
loop
pop
cmp
cwtl
das
cmp
jmp
or
fisttpll
outsb
sbb
pop
rcl
mov
sbb
loope
lea
mov
push
rolb
xchg
sub
movsl
xchg
xchg
nop
push
jp
notb
movsb
sbb
jb
in
inc
dec
popa
icebp
sbb
rcrl
inc
in
ret
insb
and
mov
adc
shlb
mov
mov
test
pop
push
es
push
fdivs
inc
orb
or
lahf
daa
popf
inc
inc
ss
jne
xor
xor
cli
xor
jnp
cmpb
ret
outsb
aad
push
mov
mov
inc
or
and
aaa
cld
adc
clc
inc
and
adc
cmp
std
and
or
fldcw
nop
addr16
movsl
mov
sbb
and
pushf
enter
mov
xor
xor
fsubrl
test
push
add
dec
push
cs
push
fnstenv
lahf
lahf
ds
mov
adc
and
loop
nop
mov
ljmp
and
rcrb
ds
mov
cmp
mov
push
shlb
inc
jl
stos
ss
mov
adc
sbb
or
mov
in
jp
push
lds
jg
mov
les
mov
lea
cmp
lock
xor
sbb
push
out
sub
mov
fcoml
in
aas
jp
lret
or
in
adc
sub
loop
mov
push
shlb
adc
aad
shlb
jg
pop
fistpll
jge
inc
mov
mov
leave
cs
sub
pop
dec
loopne
mov
xchg
push
jo
push
sbb
es
sbb
pop
insb
or
repnz
gs
cwtl
mov
repz
lcall
cmc
mov
jb
inc
stos
lock
fmulp
test
or
pop
stos
pop
xchg
out
sbb
test
sub
mov
lcall
in
xchg
pop
int3
imul
setno
add
cmc
inc
add
or
adc
inc
mov
pop
xor
cld
mov
mov
mov
xor
xchg
adc
in
adc
test
or
inc
cwtl
pop
shll
xchg
jne
loopne
icebp
cmpb
xorb
jecxz
mov
out
icebp
shll
cmpb
xchg
mov
inc
pop
jnp
pop
ja
dec
mov
das
es
jo
pop
add
movsb
roll
jmp
lods
pop
jl
in
mov
or
mov
cs
push
scas
int
ret
jmp
push
cmp
insl
mulb
insb
inc
fwait
ljmp
leave
sub
xor
lds
ds
mov
xchg
idivb
mov
bound
mov
aaa
add
or
mov
dec
pop
sti
dec
adc
loope
or
mov
add
pop
cmp
jne
jo
bound
movsb
pop
je
mov
inc
mov
or
jbe
pop
cld
pop
mov
push
dec
sbb
adc
mov
js
xchg
mov
xchg
mov
in
cmp
mov
xorb
adc
mov
push
es
sub
push
lret
sbb
sbb
std
and
test
adc
dec
clc
xchg
mov
sbb
xor
les
and
divb
push
mov
sbb
mov
and
ficoms
push
or
cli
and
insl
xchg
and
stos
stos
cmp
cmpsl
inc
std
dec
push
mov
ror
mov
ljmp
jns
adc
rcrl
insb
lods
sbbb
dec
xlat
sahf
hlt
js
fisubl
insl
outsb
add
pop
push
cmc
pop
sbb
mov
sahf
cmpsl
mov
push
out
pop
icebp
jb
pop
test
dec
addr16
repnz
nop
cltd
scas
lcall
sti
inc
repnz
movsb
xor
fsubrs
mov
sahf
cld
aam
sub
lea
stos
jp
shlb
dec
fiadds
les
aam
test
cs
roll
std
jmp
pop
test
loope
hlt
adc
jle,pn
jae
cmp
xchg
movsb
cmpsl
movsl
jb
call
lock
mov
mov
inc
test
jl
xorl
xchg
and
cmc
aaa
gs
enter
cli
das
inc
dec
mov
inc
jo
jno
out
sarb
push
loopne
fsubr
in
sub
push
xchg
mov
sbb
out
stos
sub
jl
fadd
js
sahf
adc
stos
rcll
push
mov
jge
or
xor
daa
mov
mov
lcall
insb
jae
pop
push
mov
lcall
sbb
lcall
cmp
scas
pop
scas
xor
jo
pusha
mov
add
outsl
cs
pop
adc
mov
jo
pop
sti
mov
mov
xor
xchg
mov
mov
je
test
dec
push
out
sub
fmul
push
pop
fxch
gs
sbb
lea
or
pop
repnz
int3
dec
arpl
mov
movsb
jo
scas
stc
jo
fwait
js
je
cltd
repnz
rorb
les
test
or
cmp
pop
jbe
stos
xor
pop
lahf
mov
cmp
mov
testl
jns
sub
scas
ficoml
sbb
mov
ret
cmp
aaa
push
stc
ljmp
or
lcall
and
movsb
repz
cmpb
jno
mov
int
fsubrs
addl
mov
push
cmpsb
mov
movsl
popf
je
mov
ds
add
push
jg
popa
cmp
int3
inc
xor
push
xor
jecxz
jb
or
cltd
or
lcall
sub
mov
mov
pop
mov
jl
out
jno
xchg
sahf
lret
out
pop
das
mov
sub
push
arpl
cmpsb
cmp
xor
lahf
std
sbb
cmp
sub
push
inc
xchg
jecxz
jge
popf
push
fldenv
inc
cltd
shrl
mov
pop
jne
ja
repnz
lods
lret
pushf
int
cmp
cltd
ljmp
xchg
or
js
movsl
inc
repz
syscall
xchg
jo
cwtl
out
repz
jp
fucomp
mov
sti
fbstp
add
call
inc
inc
outsb
je
sbb
call
out
add
jp
sbb
jo
cld
stc
or
das
jmp
mov
and
jmp
dec
test
mov
adc
push
jle
ja
and
xor
lea
loop
sub
test
movsb
add
hlt
addr16
sbb
add
out
sbb
pop
add
insl
std
dec
dec
sub
cwtl
sbb
leave
xlat
in
dec
xor
mov
cmpsl
jo
jbe
arpl
clc
pop
mov
test
mov
and
inc
mov
mov
repz
out
mov
cmp
xchg
push
jecxz
test
xor
pop
xchg
cs
sbb
in
sbb
mov
pop
hlt
lods
lahf
or
pop
mov
cmp
inc
sarl
jno
add
in
dec
popa
ja
and
call
ljmp
pop
jge
pop
push
jno
je
add
push
adc
mov
add
div
cmp
int
sub
adc
inc
lcallw
jle
pop
xor
or
sbb
xlat
cmp
stc
pushf
inc
mov
icebp
xor
inc
aad
push
xchg
sti
rcl
icebp
add
or
fstpl
and
sbb
dec
mov
sti
imul
xchg
cmp
mov
sbb
push
sbb
push
jne
cmp
xchg
fs
dec
pop
shl
mov
in
xchg
push
bsr
loopne
and
cmp
mov
xchg
xor
cli
adc
sub
mov
cmp
cs
lahf
xor
nop
cmp
mov
mov
sbb
test
ret
loope
gs
jl
push
push
mov
and
adcb
mov
xchg
in
mov
jae
pushf
stos
add
hlt
inc
daa
sbb
xor
inc
xchg
inc
lock
bound
push
mov
inc
xchg
mov
push
nop
dec
movsl
xor
sub
push
incl
add
gs
pop
outsb
push
mov
push
ds
mov
cmp
ja
sbb
dec
popa
push
jbe
sub
cld
cmp
push
inc
pop
inc
mov
add
xchg
push
mov
xor
mov
jne
call
xchg
cld
lahf
cmp
adc
inc
dec
xchg
fwait
mov
fs
adc
inc
popf
xor
stc
jbe
mov
adc
mov
test
imul
das
or
dec
lcall
outsl
andl
int
je
das
out
mov
ljmp
add
lods
inc
pusha
pop
jg
xor
jns
orb
add
subl
mov
pop
adc
sbb
stos
fcmovnu
adcb
jp
jle
dec
mov
cmp
jl
ret
add
add
ljmp
inc
mov
adc
testb
add
push
js
cmp
icebp
stos
sub
inc
mov
dec
insb
dec
push
int
in
or
inc
test
gs
sahf
cltd
in
ss
cmp
js
popf
adc
out
ret
cmp
clc
pop
mov
or
ja
add
mov
outsl
adc
fwait
mov
jecxz
add
lcall
ret
pop
inc
nop
sub
add
pop
ss
add
xor
mov
xchg
lret
sub
sbb
icebp
stc
adc
mov
lret
add
call
insl
mov
je
mov
or
xchg
jne
inc
imul
cmp
insb
add
imul
mov
and
orl
test
xchg
mov
fmull
fiadds
mov
clc
cmp
pop
ds
out
outsl
push
xor
xchg
cmp
xchg
sub
lds
pop
push
pop
mov
out
jne
cmc
mov
jnp
xor
push
cmp
mov
lds
fisttps
or
sti
inc
mov
ja
ficompl
mov
sbb
cmp
mov
aad
dec
mov
pop
out
or
popf
arpl
aas
stos
jge
fistpl
dec
adc
mov
push
xor
jecxz
adc
inc
xor
or
mov
out
sub
or
pop
xor
or
cmp
inc
adc
mov
leave
and
cs
mov
mov
push
mov
adc
xor
add
aad
sub
push
xor
xor
xor
xchg
jbe
jae
jo
ss
and
mov
sbb
inc
and
dec
sahf
sbb
pop
pop
inc
xor
push
xor
and
test
push
push
pop
out
jle
xor
jecxz
call
inc
jmp
push
mov
fnsave
push
pop
stos
push
sub
sahf
mov
dec
out
inc
pushf
bound
fnstcw
and
sub
dec
inc
dec
out
xchg
sbb
dec
push
mov
ljmp
mov
mov
js
or
lret
jge
inc
and
dec
mov
scas
cltd
dec
cmp
cmp
fcomps
add
lret
lea
pop
leave
mov
jmp
jno
xor
js
add
scas
mov
sub
test
mov
insl
inc
test
inc
or
push
mov
mov
les
movsb
pop
jb
xor
push
xchg
push
xchg
mov
sarl
icebp
cmpsb
inc
and
add
lds
cltd
in
cmp
shlb
pop
adc
dec
pop
mov
aad
push
test
jge
decb
js
push
mov
mov
mov
sbb
xchg
ljmp
lods
seta
in
mov
sub
push
test
adc
sbb
sbb
iret
bound
jl
xlat
jb
add
imul
and
pop
test
push
inc
fnstenv
lret
inc
pop
mov
in
add
out
and
lret
rcl
outsb
pop
out
xchg
inc
dec
adc
mov
int3
loop
jecxz
test
cmp
sti
add
scas
iret
popa
dec
popa
scas
mov
jnp
cli
pop
loop
cmp
popf
fwait
imul
outsb
and
inc
popf
cld
addr16
insl
mov
cmp
cmp
dec
dec
xchg
jge
add
movsl
lods
std
cltd
pop
cld
pushf
mov
and
cmc
adc
xchg
inc
lahf
repnz
mov
pop
mov
add
das
mov
xchg
pop
jae
mov
outsb
or
dec
sub
adc
xor
enter
int3
stc
lret
mov
lods
add
out
cltd
test
sub
adc
scas
cmpl
out
mov
xchg
jnp
sbb
and
pop
imul
insb
add
pop
in
adc
inc
clc
cltd
in
rolb
jns
push
cwtl
test
pop
lods
xor
into
shl
jmp
stc
mov
ret
movl
adc
jbe
lods
dec
sub
inc
and
insb
sbb
test
aas
add
mov
ds
into
divl
insb
cmp
daa
jge
test
mov
std
rorl
mov
sub
cmc
jb
lods
inc
int
sti
or
xchg
les
xor
fxch
dec
or
sbb
jo
jb
ljmp
and
js
bound
pop
lock
out
mov
adc
lea
push
dec
jle
mov
jno
stos
ja
inc
mov
bound
or
testb
xchg
jb
es
lea
dec
fstl
es
or
or
push
shll
push
fs
xor
pop
mov
mov
shl
divl
jp
mov
andl
out
mov
shrl
stos
xchg
in
pop
es
xchg
lods
fcoml
jmp
aaa
hlt
xchg
aas
xchg
mov
push
stos
cmp
dec
jmp
ret
adc
xor
xor
arpl
push
mov
hlt
sub
idivb
jno
shll
loope
ret
subl
xor
xchg
es
dec
test
fdivr
fs
mov
pop
pop
mov
lcall
fwait
mov
push
dec
int
fisubrl
add
mov
push
mov
xorb
data16
pop
loope
dec
cmp
mov
add
jl
inc
and
daa
aam
jne
and
fldt
pop
repnz
int3
xor
mov
fdivs
cmp
sahf
xchg
cli
iret
pop
imul
mov
adc
sub
lea
xchg
pop
pop
push
adc
loopne
inc
in
cmpsb
mov
and
arpl
ffree
int
xor
inc
jge
fs
enter
jae
xchg
test
aad
mov
ljmp
sbb
lea
and
pushf
out
xchg
sti
add
xchg
lret
inc
adc
test
sti
sbb
dec
xor
xor
xchg
data16
jno
add
loope
rcr
icebp
movb
clc
insb
shlb
pop
dec
sbb
call
nop
testb
cli
add
cltd
add
aas
cwtl
aaa
dec
dec
rcll
inc
lahf
xor
testb
icebp
shrb
lea
imul
xor
jne
mov
add
es
lods
jne
jg
xchg
sub
adc
roll
lcall
jne
pop
sbb
aad
jno
jbe
cmp
pop
mov
adc
jge
daa
xor
dec
xchg
or
test
cmc
movsb
cmp
jne
dec
out
pusha
push
ja
or
jge
dec
xchg
arpl
daa
jmp
lds
lods
hlt
or
imul
sbb
xlat
add
push
jp
insb
leave
adc
dec
xchg
pop
dec
mov
repnz
or
cmp
orb
cmc
add
fstpt
push
les
mov
mov
fisttps
mov
xchg
aam
inc
stos
xchg
rcl
inc
jb
imul
rorl
call
xor
and
add
add
sub
and
cwtl
shrb
push
push
loope
je
sub
pop
dec
ljmp
icebp
iret
test
push
mov
cmp
cld
xchg
ror
sub
insl
lea
loope
shll
dec
inc
xchg
sbb
sbb
pop
push
cmp
sub
nop
xchg
xor
cmp
out
js,pn
xor
and
loopne
xor
jle
mov
sbb
fisubrl
das
mov
aad
fidivrs
and
mov
incb
xor
imul
out
out
mov
mov
cmp
push
cmp
in
adc
mov
dec
mov
mov
inc
xorl
add
int
jae
nop
bound
mov
and
aam
cmp
mov
lods
sbb
sahf
imul
test
cmp
xchg
in
jo
dec
or
divl
cmc
xchg
hlt
in
scas
mov
mov
sbb
jecxz
dec
push
jns
in
pop
dec
cmp
mov
std
sub
test
xchg
ja
dec
sbb
das
sbb
xchg
dec
pushf
xor
sbb
sub
mov
ds
sbb
bound
test
or
mov
add
mov
adc
inc
sbb
lock
ljmpw
mov
test
aam
cs
les
push
adc
pop
xchg
sub
les
leave
pop
sarl
sub
mov
and
mov
aas
jmp
nop
pop
xor
and
xchg
pop
mov
jecxz
dec
aam
sub
sub
insb
mov
pushf
clc
outsb
mov
dec
jg
imul
dec
in
cld
adc
cmpl
int3
ret
fwait
lahf
cs
lods
pop
push
and
sbb
nop
das
cmp
push
or
in
push
and
xchg
in
jnp
mov
jle
mov
jge
dec
inc
mov
ljmp
or
fsubrs
sbb
nop
icebp
xchg
adc
outsl
xchg
push
adc
push
out
hlt
or
int3
jp
push
push
xor
popf
outsl
add
mov
xchg
push
out
push
rcrl
lcall
sub
jecxz
int
mov
outsl
sbb
loope
mov
ret
push
sbb
jmp
lahf
pop
adc
adc
mov
test
mov
icebp
dec
inc
push
push
movsl
dec
add
nop
dec
pusha
bound
cmpsb
push
mov
int
clc
lcall
jbe
jmp
xor
sbb
jbe
rcrb
jmp
jmp
push
and
and
clc
into
lds
jecxz
lock
mov
lret
arpl
shl
mov
iret
mov
xchg
or
repz
gs
repnz
prefetcht2
mov
loopne
shll
pop
pop
jg
test
fidivrl
sub
ljmp
jbe
inc
loopne
lds
insl
or
shrb
fstps
sbb
hlt
xor
xchg
scas
jb
mov
fldcw
dec
pusha
addr16
das
and
pop
mov
jns
das
or
pusha
push
or
notb
fistl
push
xor
xor
cmp
inc
mov
mov
inc
iret
dec
stos
mov
mov
ret
add
bound
and
mov
mov
xchg
jl
scas
adc
xchg
add
fcmovbe
cmp
mov
dec
inc
stos
lcall
jge
repnz
add
adc
adc
lock
push
xchg
pop
inc
and
es
out
dec
insb
loopne
leave
mov
dec
gs
mov
dec
int3
add
pusha
or
dec
in
sub
stos
ja
aad
jge
adc
fwait
movsl
mov
scas
and
xchg
js
sti
mov
mov
xchg
out
lds
repnz
jge
push
adc
outsl
mov
imul
cmp
jb
mov
cmp
mov
stc
xchg
push
mov
aaa
mulb
outsb
mov
and
imul
ja
cmp
aas
dec
lahf
shl
sub
adc
pushf
stos
mov
incl
out
xchg
in
les
mov
in
push
jns
sub
scas
lock
mov
into
clc
inc
jno
xchg
sbb
fidivrl
push
js
dec
adc
sub
mov
xor
inc
or
testl
jmp
add
sbb
pop
sbb
inc
xchg
xchg
pop
push
mov
sbb
push
lock
cld
xchg
test
roll
dec
shr
movsl
sahf
out
lods
mov
mov
into
ud1
xor
nop
call
jne
lea
lods
ljmp
sahf
pop
stos
ficoml
jle
in
lea
stc
dec
bound
lcall
mov
xchg
cmpsb
in
dec
fsubrs
out
add
dec
push
ret
xchg
jae
sti
jo
jo
xchg
loope
lds
ret
cmp
imul
in
sbb
jge
cli
dec
xor
sbb
bound
shll
pop
mov
lret
sub
mov
add
add
arpl
xchg
jecxz
data16
adc
mov
out
add
push
jmp
jbe
xor
jp
clc
inc
pop
sub
int3
adc
mov
ljmp
pop
ja
add
cli
subl
push
int
call
aas
jmp
mov
pop
iret
mov
mov
loop
mov
fs
mov
movsl
adcl
and
cmpsb
loop
inc
aaa
ret
out
inc
adc
cmp
sub
adc
pop
dec
cmp
push
push
lods
aaa
add
cmp
sub
rcll
mov
outsl
fbld
cmp
pusha
dec
add
ljmp
push
sbb
arpl
cmovae
pusha
dec
aaa
shlb
or
in
arpl
jecxz,pt
push
and
rcrb
jbe
sbb
out
sbb
xchg
loopne
lods
outsb
push
sbb
test
mov
cmp
push
jle
cwtl
mov
pop
cmp
mov
adc
add
bound
int3
std
xchg
xchg
add
pop
mov
jb
dec
adc
mov
add
ja
fidivs
cmpb
mov
pop
movsl
adc
rolb
mov
aad
in
mov
stos
add
sbb
bound
adc
push
mov
loop
mov
push
xchg
jno
rcrb
push
incl
or
pop
xchg
out
or
fwait
movsl
loop
inc
jo
movsl
xor
and
lcall
jge
push
dec
dec
test
sub
ja
xchg
das
test
pushw
inc
xor
add
dec
xor
mov
cmp
mov
ret
iret
adc
aad
cmp
rcrb
and
repz
xor
push
lea
cmc
jmp
jl
clc
fidivl
xor
pop
fldenv
push
popa
xchg
sub
mov
nop
push
xchg
das
loop
popf
jb
adc
fdivrs
mov
xor
sbb
xor
pop
aam
loope
xor
mov
stos
and
pop
adc
push
mov
lods
aad
movsl
dec
dec
test
jmp
mov
cmp
shrb
sbb
iret
loop
xchg
scas
mov
xor
in
gs
int
cmc
or
adc
or
push
movsl
push
or
loop
mov
xchg
pop
nop
out
in
ja
xchg
adc
fcoms
xor
mov
sbb
js
inc
movsb
fstps
push
sub
imul
jp
daa
add
jb
sub
or
fdivl
movsb
push
outsl
xor
lea
add
outsl
push
mov
mov
test
stc
mov
xlat
mov
lret
push
pop
ret
xchg
or
test
loopne
into
dec
or
dec
mov
cs
mov
iret
sti
and
gs
aad
pushf
arpl
aad
jmp
leave
pop
jb
add
add
mov
adc
test
sub
xchg
push
push
pop
cmp
lods
mov
popf
loope
in
aam
shlb
lret
rclb
clc
inc
inc
sbb
adc
or
xchg
gs
inc
loop
and
stos
xor
popa
push
test
dec
stc
mov
ret
sub
mov
out
ljmp
xchg
outsl
movsl
cmc
push
dec
cmp
jl
mov
mov
sub
ret
mov
adc
imul
fisubs
pop
dec
push
add
fldl
sbb
in
movsb
xor
mov
dec
mov
mov
pusha
xor
xor
bound
jl
gs
shrb
cmpsl
out
into
xor
mov
jns
lcall
jns
jnp
push
in
popf
lods
sub
out
gs
lret
clc
xchg
add
or
scas
nop
xchg
mov
popf
mov
push
push
fisubrs
inc
add
jae
mov
cmp
lds
push
jne
mov
in
clc
dec
sub
adc
popl
into
sub
or
addr16
push
inc
stos
inc
cmp
aam
mov
jl
push
icebp
das
cmp
push
mov
dec
mov
in
cmpsb
je
push
fsts
mov
stos
fwait
and
sbb
out
nop
popa
push
xor
popf
popf
nop
nop
inc
push
mov
xor
enter
xlat
fstps
sahf
cwtl
mov
sarl
jne
mov
test
dec
fwait
pop
fidivl
sub
cmp
mov
push
movsb
nop
jnp
and
repz
mov
add
loopne
push
mov
sbb
adc
ret
sbb
sbb
xchg
sbb
cmp
pop
adc
jecxz
sti
dec
incl
ja
into
pop
arpl
movaps
and
mov
imul
dec
push
or
xchg
out
fwait
roll
mov
pand
pop
xlat
inc
mov
lahf
inc
or
jge
inc
movsl
test
push
nop
xchg
cmp
xor
rcrb
sbb
imul
mov
test
test
out
mov
imul
loope
fldt
roll
pop
das
jge
loope
rcrb
sub
sti
adc
movsb
inc
cmp
cmp
jge
int3
and
ljmp
add
dec
xchg
dec
and
jg
cwtl
decl
or
cmp
mov
mov
inc
dec
or
pop
pusha
hlt
int
dec
iret
sub
jmp
adc
xchg
add
adc
cmpsl
orb
push
lcall
pop
lock
iret
hlt
xchg
insb
ljmp
in
loop
idiv
add
ljmp
inc
or
sti
sub
mov
sahf
movsl
test
inc
dec
imul
add
popf
leave
cwtl
inc
std
push
jns
out
mul
push
cmpl
orl
mov
adc
clc
pop
xchg
jle
test
push
add
dec
cld
push
mov
sti
popf
sbb
adc
inc
out
lods
daa
xchg
adc
ja
xor
aaa
out
inc
pop
pusha
fiadds
cld
mov
adc
psadbw
pop
movsbl
or
js
or
aad
or
fcomps
sbb
sub
mov
pop
rolb
ss
mov
test
mov
test
jl
sbb
rcll
and
stos
cmp
jg
cmpsb
mov
loop
dec
fisttps
mov
xchg
pop
mov
test
dec
push
pushf
sub
cwtl
fucomp
imul
pop
nop
xor
cld
add
sbb
lea
sbb
push
or
out
gs
iret
add
cmp
push
pusha
stc
sbb
stc
movsbl
mov
jb
xor
pop
jge
xchg
movsl
add
inc
nop
les
icebp
mov
jp
mov
xchg
pop
sub
icebp
lcall
in
dec
xor
inc
add
imul
mov
xchg
sar
push
es
xchg
mov
inc
lcall
movsl
insb
cmp
mov
push
mov
sti
inc
sti
mull
mov
test
xor
sbb
outsl
or
jb
push
mov
xor
xlat
mov
scas
sahf
inc
test
int3
jle
call
call
sub
ret
clc
pop
out
leave
pop
mov
cmp
mov
subl
jo
xchg
or
subb
std
repnz
popa
mov
leave
out
xchg
push
xor
mov
pop
lds
mov
or
pushf
inc
push
outsl
pop
xchg
inc
push
cmpsl
jno
jg
bound
dec
mov
jns
sbb
mov
jae
into
mov
push
or
pop
loop
pop
xor
daa
js
pushf
iret
jl
into
divb
inc
mov
lahf
add
movsl
imul
test
push
xchg
shrb
mov
adc
test
aas
sub
pop
faddl
stos
int3
jnp
xchg
out
test
xor
add
push
cmpsl
mov
or
stos
jnp
aad
mov
fnstcw
lahf
sbb
testb
stos
adc
clc
int
sbb
pop
cmpsb
pand
movsl
daa
push
mov
nop
inc
es
jnp
or
popf
mov
imul
dec
sub
dec
jg
adc
cmp
xor
inc
cmpsb
mov
adc
and
mov
test
ret
xor
cwtl
hlt
addl
ss
lea
or
popa
mov
adc
movsbl
mov
pop
imul
and
xor
and
arpl
scas
push
push
mov
push
and
mov
test
or
fsubrl
mov
sub
dec
and
jno
hlt
mov
fistl
cltd
pop
sbb
xor
mov
aas
jle
test
pop
in
ds
lahf
pushf
adcb
sbbl
aam
test
gs
and
jp
push
mov
leave
or
dec
mov
xchg
mov
push
fwait
arpl
xor
mov
add
ror
lock
aam
addr16
sbb
sahf
cmp
outsl
fcompl
push
mov
lds
or
inc
ljmp
pop
jo
aam
add
stos
cmp
adc
loopne
mov
cltd
shlb
out
outsl
xchg
mov
jmp
add
add
sub
mov
and
test
lcall
test
pop
push
mov
gs
adc
push
ja
xor
idiv
je
fidivl
xchg
outsb
mov
ds
cld
push
test
test
bsf
enter
les
pop
scas
dec
std
jp
movsb
lds
and
adc
jle
mov
cmc
and
push
das
shll
fucomip
mov
sbb
xor
xchg
in
dec
mov
mov
movl
push
push
jno
aaa
cmp
out
push
cmp
cmp
scas
lcall
xor
movl
jge
dec
rolb
mov
test
push
add
adc
nop
jno
loopne
clc
and
sahf
xor
int3
jne
xor
popa
call
lea
cwtl
and
cmp
adc
sub
fidivrs
push
jo
jb
pop
les
cmp
pop
cmp
outsl
out
sub
adc
pop
inc
cmpb
out
add
mov
inc
dec
mov
cmp
fwait
test
jne
pop
push
xor
loopne
repz
frndint
mov
push
jg
lods
fisubl
or
and
lret
into
dec
mov
ljmp
adc
pop
push
inc
add
inc
jge
insb
jo
push
scas
scas
daa
fwait
mov
mov
inc
sbbl
stos
movsl
gs
mov
adc
ss
xchg
daa
out
mov
cmc
push
mov
aad
aam
jnp
add
mov
adc
or
repnz
cmp
jl
sbb
popf
mov
xor
pop
test
mov
pop
push
add
mov
adc
sbb
pop
mov
pop
shlb
mov
mov
inc
out
cltd
inc
addr16
lea
aaa
div
mov
and
push
jae
xor
insl
sbb
jge
std
gs
nop
test
lcall
xchg
adc
jle
push
fwait
sbb
push
jo
and
and
inc
or
xlat
mov
in
and
hlt
inc
insl
stos
mov
mov
out
lds
sub
in
dec
mov
insb
mov
popa
test
outsl
sbb
mov
int
adc
lods
mov
xor
push
inc
xor
xchg
mov
mov
adc
push
ja
and
cmpsb
dec
and
vunpcklps
sub
inc
mov
push
outsb
mov
adc
pop
std
iret
jle
addr16
adc
aad
cmp
adc
xchg
sub
add
aaa
lcall
rcrl
testl
xchg
insb
hlt
scas
xchg
sub
add
or
stc
inc
fs
je
add
sbb
call
push
cmp
add
or
pop
xor
and
or
mov
popf
jb
lcall
aaa
sbb
test
pop
jecxz
jns
fsubs
xor
pop
pop
inc
fimull
push
sbb
or
testl
cmpsb
inc
pop
pop
or
dec
into
xor
add
jecxz
loop
pop
and
das
fistpl
out
adc
mov
jb
lcall
and
mov
jne
or
inc
cmp
or
mov
insl
mov
stc
push
int
push
mov
pop
mov
add
sbb
xor
rolb
or
insb
inc
mov
xorl
xor
mov
das
xor
lcall
pushf
push
mov
cld
or
scas
and
mov
inc
jge
xor
frstor
push
adc
test
xchg
dec
test
pause
add
or
xchg
js
sub
sub
xor
or
shrl
mov
fmulp
rclb
push
lcall
inc
mov
sbb
lock
popa
adc
mov
mov
fnsave
jbe
jae
add
shlb
popa
jb
bound
mov
xor
sbb
jge
mov
ja
nop
fmull
stc
incb
lods
mov
xor
aad
xor
and
sub
push
sub
add
jge
mov
push
stos
sbb
mov
or
mov
pop
dec
inc
mov
or
sti
xchg
lods
cmp
cbtw
mov
shl
test
jle
lret
sub
fdivrs
push
push
adc
xchg
int3
popf
cmp
mov
lahf
or
pushf
mov
push
xor
ficompl
insl
adcb
or
push
faddl
add
sub
mov
adc
call
cmp
or
cmp
xor
insb
and
dec
inc
outsl
push
lea
xor
pushf
mov
jecxz
inc
jl
sbb
mov
or
cmpb
and
ss
movsl
or
fwait
cmp
or
dec
jle
je
lock
inc
mov
fistpll
cmp
sbb
gs
jnp
insb
dec
or
into
jne
mov
mov
imul
lahf
push
xorb
stos
popa
or
xor
je
cmp
mov
mov
scas
sub
orl
jl
jnp
fmul
dec
push
rcr
add
sub
mov
shufps
dec
notb
out
xchg
adc
mov
cmc
clc
test
fbld
or
adc
and
call
pop
pop
rclb
cwtl
shll
int3
sub
sbb
xchg
inc
lcall
adc
mov
cmp
lret
sub
adc
xchg
stos
or
mov
sub
jg
leave
push
push
cld
negl
lds
test
cwtl
in
dec
clc
out
fdivrs
mov
int3
mov
inc
dec
pushf
mov
lret
leave
movsb
sub
mov
lea
sub
and
fcoml
cmp
inc
add
subb
jbe
sbb
cmc
inc
xlat
sub
dec
mov
jbe
add
pop
mov
in
addr16
dec
pop
cmp
cmpsb
mov
adc
mov
cmc
xchg
cmp
inc
xor
inc
dec
push
stos
mov
adc
push
sbb
es
fisubrs
out
les
add
sub
and
mov
js
jnp
lahf
mov
push
and
xor
cmc
lret
adc
sti
and
fsubl
and
orl
imul
mov
mov
inc
and
lcall
add
cmp
scas
es
shrl
rcrl
lret
mov
sub
data16
push
ret
mov
mov
pop
mov
sbb
mov
inc
mov
stos
sbb
inc
pop
mov
sub
sbb
xor
imull
mov
enter
in
jl
jecxz
push
or
mov
dec
inc
mov
push
les
jmp
or
inc
push
xor
je
mov
jnp
mov
xchg
xchg
cmc
cmpl
push
xor
push
inc
cmc
lods
gs
aad
stos
cmp
addb
xchg
aaa
cmp
sti
jo
cmpsl
and
lock
xor
dec
aas
adc
rorb
mov
cmp
paddsw
fsubr
adc
xor
rorb
push
dec
inc
maskmovq
mull
loopne
add
jbe
hlt
cmp
repnz
std
mov
jg
ljmp
sarl
sub
sub
mov
outsb
or
jae
das
stc
mov
xor
sub
dec
mov
insl
pop
push
outsl
jns
xchg
popf
nop
xlat
sub
mov
push
cmp
cmp
les
into
pushf
fucomip
sub
jo
or
aaa
je
std
fistl
aas
imul
test
jnp
cmovo
je
loop
jno
jno
aaa
cmp
cwtl
dec
data16
repz
cmc
inc
fdivs
add
ficompl
mov
jb
xor
pop
inc
cmp
insb
into
gs
push
jl
xchg
xchg
or
or
xor
loop
fs
pusha
xchg
pop
insb
ss
mov
stc
xor
shlb
sti
test
aad
inc
dec
cmpsb
movsl
cmp
mov
jmp
ds
enter
fs
ss
out
jp
push
jg
lock
xor
adc
add
mov
jecxz
mov
mov
jge
pop
adc
pop
push
xor
xor
pop
add
popf
mov
lcall
pop
popf
lods
jmp
sub
or
inc
dec
cmp
mov
lea
sub
pop
inc
nop
hlt
cmp
inc
fcoms
mov
popa
sbb
mov
push
cmp
push
sarb
iret
adc
inc
int3
dec
sbb
sti
std
aas
push
daa
mov
stos
nop
or
mov
mov
inc
in
push
jg
sub
push
aam
insl
test
add
loop
mov
pop
js
xor
xor
lretw
sub
syscall
push
lods
frstor
and
outsl
jge
or
jno
push
jp
mov
idivb
mov
dec
cmp
jle
movsl
cmp
dec
jecxz
dec
nop
test
push
sub
push
insb
add
push
test
dec
sahf
mov
jge
insl
arpl
je
in
mov
imul
push
fidivs
cs
jb
xor
inc
iret
mov
mov
dec
or
test
mov
dec
test
aaa
sub
sbb
push
cmp
xchg
dec
mov
pop
scas
leave
jno
inc
lahf
add
push
enter
xor
ret
xor
jo
fs
dec
stos
adc
sbb
stos
cmp
fdivrl
rcr
add
dec
leave
dec
sub
shrb
push
fbld
xchg
mov
into
xor
lahf
mov
inc
adc
inc
mov
push
mov
imul
fwait
loope
ror
lahf
mov
scas
mov
xorl
push
imul
jnp
mov
xor
out
rol
movsb
cmp
into
stc
adc
jg
lods
jg
es
pop
popf
fistps
and
sub
push
rclb
adc
idiv
sbb
jbe
adc
mov
cmp
xchg
inc
mov
lock
or
sahf
push
xor
and
adc
jl
push
lcall
fwait
sbbl
xlat
or
push
ss
push
ss
les
scas
pop
adc
xchg
or
or
xchg
mov
add
mov
mov
mov
push
mov
andb
stc
orb
testb
lahf
daa
cmp
pop
xchg
adc
gs
jge
aad
pushf
push
or
pushf
add
mov
test
inc
into
imull
scas
in
add
inc
rclb
in
shl
imul
stos
aaa
mov
imul
lds
cmpsl
mov
test
sub
aad
pop
push
push
hlt
cmp
dec
bound
jbe
xchg
jae
shr
or
sbb
sti
hlt
in
or
lds
and
mov
adcl
flds
mov
inc
rorl
xorl
out
les
int
xor
sbb
pop
xlat
lahf
cli
sahf
xchg
adc
lds
fsubl
inc
or
pop
stos
bound
outsl
push
xlat
or
out
sub
cltd
jnp
clc
xchg
cwtl
loopne
in
mov
sbb
je
mov
jmp
mov
mov
out
test
add
add
std
test
jbe
aas
and
pop
xor
nop
mov
gs
push
jno
add
pop
pushf
xor
cltd
push
add
sahf
hlt
rorb
rcl
cmpsl
lods
cmpsb
in
and
cli
addb
xchg
push
mov
add
lods
cmp
add
lods
add
adc
ss
cmp
roll
push
mov
push
insl
movsb
pop
enter
xor
add
pop
xchg
xchg
and
jle,pt
mov
cld
clc
int
adc
cmp
enter
xlat
jbe
adc
xchg
out
mov
rorl
sub
lock
dec
push
repnz
adc
push
pop
push
js
and
scas
mov
adc
fwait
out
pop
sub
cmpsb
xor
mov
push
push
adc
addr16
imul
sbb
xor
out
add
jp
sub
daa
ljmp
sbb
xchg
inc
in
inc
pushf
or
mov
je
add
pop
inc
pop
xchg
cmp
lret
inc
xor
adc
push
popf
jl
xlat
pop
add
sub
xchg
xor
xor
outsb
inc
mov
sub
lcall
jae
adc
fcompl
pop
jae
lea
add
filds
push
mov
cs
push
sub
leave
aas
add
imul
in
adc
ret
outsl
pop
js
mov
filds
imulb
mov
mov
int
scas
push
repz
mov
mov
into
xchg
push
mov
mov
push
fidivrs
xchg
inc
add
movsl
adc
mov
into
inc
mov
in
rcl
fcmovu
test
jae
cmp
orb
adc
jl
clc
cmp
cmp
lds
mov
aad
add
xor
mov
das
xchg
xchg
mov
pop
jmp
mov
popf
pushf
sti
int3
mov
xchg
push
outsl
cmc
and
scas
adc
and
imul
sub
lahf
mov
data16
dec
loope
xchg
fcoml
aad
cmp
fisttpl
push
cmp
sbb
mov
xchg
push
out
add
push
fcoml
inc
lods
outsl
insb
add
sub
outsl
out
jae
test
jl
xchg
daa
stos
insb
lock
je
lret
aad
out
enter
std
cmpsl
push
comiss
push
test
das
xor
sub
xchg
rclb
xchg
repnz
and
pop
sbb
test
out
jle
or
xchg
in
xor
fcmovnb
mov
adc
xchg
cwtl
inc
das
or
imul
stos
sbb
dec
stc
cmp
adc
clc
push
int
and
pushf
aas
mov
mov
aaa
cmp
inc
mov
xor
sbb
xchg
inc
hlt
jp
lea
and
dec
les
cmp
cmp
xor
repnz
popf
orb
push
outsl
fwait
mov
push
hlt
sub
mov
stc
xchg
outsl
ffreep
stos
push
mov
les
cwtl
dec
and
inc
sbb
enter
popa
sbb
in
daa
xchg
fs
add
repz
mov
dec
cmc
pop
aas
leave
fsubs
loopne
sbb
repnz
ss
sub
push
cmc
scas
mov
into
xor
add
call
test
movsl
lods
cmp
jle
jae
call
mov
in
outsl
insb
mov
mov
sbb
add
push
dec
pop
push
shlb
aad
and
into
ret
lods
fstl
lahf
inc
xchg
inc
dec
adc
sbb
and
xor
xlat
ss
or
adc
push
mov
jmp
daa
pop
jle
cmp
js
adc
jne
pop
rcrb
aam
xchg
xchg
cmpsl
test
pop
popf
rcl
lods
mov
mov
adcb
aad
into
cmpsb
add
and
or
adc
mov
and
bound
stos
push
push
je
stos
inc
lods
jmp
add
out
pop
mov
dec
add
mov
adc
cli
mov
mov
xor
sbb
mov
cltd
mov
cmp
aas
cmp
and
or
jo
xchg
sbb
xlat
ficoml
les
pop
pop
inc
push
pop
xchg
dec
inc
pop
bound
out
pop
pop
inc
push
aam
ljmp
xor
sbb
test
dec
pop
xor
or
je
cmpsl
jnp
inc
jle
scas
jg
pusha
jne
mov
pop
and
jmp
test
pushf
aam
adcl
inc
lods
pop
rorb
push
movsl
lcall
rorb
xchg
rcrl
jp
and
cs
movsb
rcr
push
mov
mov
xchg
fwait
bound
jb
popa
fs
mov
xchg
mov
pop
jmp
arpl
inc
movsl
pop
imul
add
imul
sub
shll
inc
stc
jb
jb
incb
in
cmpl
arpl
mov
insb
mov
sahf
cmp
cmp
push
mov
xor
mov
cmpsl
pop
xor
aas
inc
int
es
xchg
dec
xor
jae
loope
dec
filds
push
mov
pop
and
jge
decl
dec
jae
sub
in
dec
aas
jno
in
rcl
mov
test
mov
push
in
mov
test
and
loop
pop
mov
outsl
inc
rorl
pop
or
pop
sub
mov
sti
int
lret
scas
and
in
jge
in
sub
sub
add
outsb
pop
mov
cmp
cltd
ja
loop
sbb
mov
popf
adc
adc
nopl
pop
adc
popa
imul
pop
loop
mov
iret
pop
or
cmpsb
sub
xor
add
mov
push
dec
mov
xchg
imul
pop
pop
add
lods
mov
xchg
aad
cmp
stos
cwtl
add
mov
jnp
and
xor
mov
dec
sbb
mov
scas
nop
pusha
fstl
das
pop
cld
mov
mov
outsb
jmp
jnp
add
dec
insl
mov
push
out
mov
jl
arpl
inc
push
mov
dec
subb
sbb
popa
in
jo
jo
test
adc
mov
dec
and
jnp
and
lret
push
in
push
movsl
loopne
cmp
rorb
mov
test
push
lea
andb
mov
or
xor
popf
and
xlat
push
out
sub
aaa
sbb
xchg
pop
fstl
dec
dec
mov
cmp
rcll
push
hlt
xor
push
mov
push
out
sbb
or
cwtl
jno
cwtl
sub
loop
adc
adc
push
jmp
ficomps
imul
icebp
js
push
jo
hlt
je
arpl
xorb
add
add
lea
stos
aaa
addr16
cwtl
sbb
fcoms
enter
push
pushf
sahf
or
adc
xor
jb
adc
sti
cmp
xor
cmp
insl
sahf
mov
add
hlt
push
jnp
insb
test
lret
jmp
inc
mov
nop
in
mov
xor
aam
jge
xor
xor
jle
xchg
movsb
sub
roll
xchg
int
push
and
or
jb
icebp
or
pop
cs
xchg
imul
mov
push
loop
js
jno
jns
pop
sbbl
lahf
aaa
add
mov
xchg
inc
xchg
adcl
dec
insb
mov
orb
enter
mov
and
add
popf
and
xchg
mov
ja
xchg
adc
cmc
lds
push
fdivs
lds
test
cwtl
enter
fs
xchg
adc
loope
mov
in
pushf
mov
jge
movsl
sub
aam
fwait
test
sbb
fiadds
pop
pop
scas
xchg
nop
aaa
out
add
cmpsl
es
pop
andl
xorb
jo
xor
mov
bound
inc
sbb
mulb
out
pusha
mov
jnp
sub
cwtl
and
dec
pop
and
push
loop
insl
mov
add
mov
jl
lock
lret
xor
cwtl
push
cld
lahf
jge
add
or
sub
mov
xchg
cmc
sbb
sbb
movsb
test
sarb
push
adc
mov
pop
insl
mov
ja
aaa
adc
call
loop
test
mov
movsl
and
jge
xchg
pop
sub
cmp
pop
fnstcw
xchg
insl
jne
sub
push
outsb
in
into
idivb
mov
push
or
xchg
out
jno
mov
ja
cli
sti
sub
or
incl
mov
mov
push
cmp
or
mov
pop
ret
es
int3
cmp
fmul
sbb
xchg
out
xchg
inc
inc
hlt
mov
test
jg
out
dec
fdivr
pop
jb
les
push
adc
pusha
sti
or
fisubs
add
fstpl
push
sbb
pop
push
cli
in
dec
mov
pop
mov
je
pop
scas
mov
xchg
mov
aas
aam
imul
clc
imul
ret
adc
sbb
je
js
adc
sub
push
iret
mov
leave
jne
jmp
cmp
mov
rcrb
jno
mov
pop
repnz
popa
ficompl
repz
jl
push
and
movsl
or
pushf
mov
sbb
push
xchg
outsl
pop
leave
inc
push
push
xchg
sub
mov
arpl
adc
gs
jo
jno
inc
jb
mov
jne
aaa
jmp
pushf
loope
xchg
aad
data16
pop
add
adc
sub
pop
jne
pusha
mov
mov
shrb
scas
std
mov
psrld
jb
xor
inc
std
or
test
in
out
je
int
mov
pop
jne
ljmp
cmpsb
fidivrs
les
jl
cwtl
mov
xor
mov
pop
and
into
mov
movl
inc
xchg
push
xor
and
or
mov
cwtl
xchg
or
call
sbb
add
or
aad
insb
or
popf
inc
inc
mov
iret
out
sarb
mov
nop
pop
jae
push
sub
sub
psubusw
fsubl
test
loop
lret
rolb
pushf
xchg
cmp
inc
jno
rcl
mov
add
ficompl
jmp
mov
mov
sbb
sub
xchg
xchg
stos
push
pop
fs
std
ret
rcrl
push
fsubl
pop
pop
jle
pop
sub
jge
jns
and
jecxz
add
xchg
dec
mov
popf
jnp
mov
mov
icebp
mov
jb
es
and
sarb
sub
mov
lret
mov
inc
std
push
pop
shlb
sbb
scas
sub
js
inc
sahf
jo
xchg
scas
sahf
aam
pusha
popf
sahf
pop
in
enter
jecxz
xchg
push
shrb
inc
repnz
pop
mov
jle
jmp
add
ss
adc
and
sub
jmp
add
mov
fwait
add
fwait
fwait
xchg
dec
mov
xchg
and
mov
divl
xchg
mov
inc
mov
or
arpl
add
pop
mov
pop
and
leave
jle
push
cli
and
lcall
push
mov
xlat
ljmp
data16
jmp
cmp
or
out
xor
xchg
into
xchg
jg
sub
cld
dec
jl
inc
mov
xchg
sub
enter
xchg
aam
icebp
xchg
sbbl
mov
mov
shrl
cmp
push
mov
push
sahf
add
xchg
dec
xchg
xchg
mov
out
mov
cmp
or
imul
aas
add
mov
mov
adc
add
cmpl
mov
out
cld
das
or
ret
adc
out
xchg
pushf
mov
mov
das
cmp
hlt
lds
call
fdivrs
sbb
mov
xor
aad
shr
cmp
seto
mov
std
cmp
test
mov
inc
movsb
fisubrl
pop
mov
xor
enter
call
or
cmp
cwtl
add
pop
mov
push
cs
mov
les
push
and
and
je
daa
sbb
mov
pusha
mov
sub
xchg
xchg
dec
or
lret
lret
jge
dec
push
mov
dec
clc
stc
lds
imul
das
pop
inc
mov
sub
pop
xchg
popa
xchg
xor
fsubs
xchg
adc
xchg
ljmp
negl
inc
je
jnp
aam
and
inc
aas
adc
jno
jmp
in
xchg
les
sub
addr16
pushf
push
loope
rcrl
cmpsb
inc
test
mull
int
cmp
sub
xchg
add
popa
push
push
loop
xor
icebp
xlat
subb
test
test
push
sub
adc
sbb
fcoms
dec
das
push
aam
int
ja
pop
jae
aam
inc
jbe
hlt
mov
testb
mov
insb
xor
pop
lret
xor
mov
jo
mov
nop
insl
dec
fldt
push
mov
lods
repnz
sub
stc
pop
stc
lahf
sahf
aam
xlat
push
mov
or
jns
ss
push
mov
or
pop
jp
sarl
sahf
xchg
inc
xor
adc
jecxz
lahf
sub
jo
les
cmc
bound
jg
sbb
aas
or
cmp
mov
cmp
cmp
ja
pushf
mov
lcall
ja
in
cvtdq2ps
data16
push
and
jns
mov
sbb
adc
dec
and
fldcw
sub
sub
pop
xchg
adc
imul
push
imul
add
add
mov
sbb
jmp
cli
dec
daa
sbb
pop
pop
and
push
cld
adc
cmp
xor
cmpsl
js
jmp
push
inc
inc
pushf
lcall
mov
pop
sbb
imul
add
cmpb
fimull
cmp
add
jnp
sbb
subb
lock
push
sub
gs
mov
mov
xchg
lds
cmc
mov
mov
push
and
add
pop
fwait
xor
cmp
out
es
mov
std
mov
and
sub
mov
rol
jg
pop
add
jnp,pt
xchg
xor
stos
outsb
mov
into
add
mov
cmc
pusha
and
mov
cmpsb
shlb
sarb
loop
cmp
adc
inc
cmpsb
cmp
clc
and
mov
iret
adc
jg
xchg
in
mov
mov
push
or
inc
pop
mov
cmp
inc
lods
pusha
xor
xchg
push
inc
xor
adc
lret
aad
test
mov
cld
enter
push
cwtl
lock
loope
mov
in
xchg
push
cmp
cmc
xor
dec
adcb
pop
push
mov
push
pop
jp
mov
mov
mov
aad
cmpl
xchg
add
into
int3
mov
adc
dec
popf
mov
or
inc
rorb
imul
jmp
mov
sbb
or
mov
adcb
gs
dec
mov
xchg
mov
ds
dec
mov
movsb
jae
adc
adc
fdivrl
mov
xchg
dec
mov
mov
sub
cmp
pop
nop
pushf
pop
adc
mov
mov
rcrl
call
and
cmpsl
push
jne
loope
inc
es
inc
mov
mov
xchg
jae
jb
es
loopne
lock
stos
push
je
arpl
or
jb
dec
or
push
iret
dec
mov
adc
inc
test
mov
cwtl
cmpl
std
imul
or
lock
ret
mov
frstor
bound
repz
mulb
scas
pop
daa
and
xorb
xor
push
fistpll
push
xor
adc
mov
pop
loopne
aad
mov
add
jae
out
or
sbb
push
jmp
add
xorl
scas
stc
sbb
push
cli
xchg
in
test
dec
push
and
test
sub
sahf
cmpsl
adc
fwait
inc
jp
sub
mov
and
ficompl
cmp
jno
mov
push
fmull
cmp
and
or
inc
push
xchg
or
int
mov
loop
push
insb
je
add
sub
inc
push
mov
std
or
jge
test
xchg
xchg
pop
add
gs
mov
jno
movl
inc
icebp
into
cltd
cmp
xchg
mov
in
and
mov
jg
add
cmp
pushf
inc
popa
sbb
add
add
dec
cwtl
icebp
outsb
rcl
ret
fmul
mov
push
xor
popf
adc
lret
mov
jl
sub
enter
dec
cmpl
dec
add
popf
inc
js
push
adc
xchg
negb
popa
push
jge
and
test
cmpsb
mov
push
lahf
mov
mov
xlat
ret
and
rcrb
pop
mov
shll
jmp
jle
push
jg
push
jg
cmp
sbbl
push
filds
add
jo
inc
sbb
arpl
xchg
sub
jg
mov
les
lcall
je
bound
mov
add
add
fwait
sub
test
lock
in
imul
jb
lods
adc
pop
jle
mov
or
out
and
inc
adc
ret
imul
mov
xorb
into
cmpsb
mov
dec
xlat
aad
mov
sbb
pop
cmp
pop
ds
jns
mov
sub
jge
rolb
into
insb
fstps
jbe
mov
and
insb
pusha
sbb
push
comiss
xchg
fisttps
inc
pop
mov
in
sbb
jg
jno
bound
sub
xor
mov
mov
clc
lods
inc
mov
ds
popf
mov
call
int
jmp
pop
pop
movb
add
mov
inc
sub
pop
push
push
cwtl
ljmp
test
mov
jl
sbb
imul
sbb
popf
adcb
sbb
cmp
stc
cmpsl
inc
jg
cld
inc
movsl
dec
add
scas
leave
popf
insb
test
out
inc
movsl
dec
dec
int3
icebp
lea
mov
in
sub
dec
or
hlt
shll
mov
sbb
pop
and
pop
pop
sub
and
lret
pushf
push
sahf
add
inc
xchg
jno
sbb
pop
adc
daa
add
test
into
repz
mov
add
xor
cmp
ret
dec
dec
call
cmp
or
push
cmc
and
test
pop
jae
mov
inc
mov
inc
mov
push
xchg
pop
cmpsl
sbb
add
jl
xor
shrb
or
adc
rcl
jne
lret
fisttps
cmp
loopne
aad
sbb
aad
in
sahf
test
xchg
enter
nop
pop
jp
inc
nop
movsb
sbb
add
xchg
pushf
inc
lods
mov
pushf
scas
pushf
pop
inc
pop
jae
and
push
pop
pop
push
pop
pop
and
add
stos
pushf
fstl
dec
sbb
cmp
dec
xchg
xor
mov
jg
pop
int
sbb
mov
add
adc
adc
iret
ja
testb
lea
dec
adc
adc
iret
cmp
sub
inc
adc
xlat
cmpsl
lahf
adc
jl
fsubl
jl
sub
fsubrl
cwtl
cmp
sbb
cmpsl
mov
aad
push
sbbl
mov
sbb
cmp
cltd
and
mov
stc
cltd
inc
cwtl
add
fnstenv
jno
cmp
push
push
ss
lock
shrb
mov
js
mov
sub
cmpsb
pop
das
push
mov
hlt
in
push
and
xchg
daa
pushf
push
push
in
dec
mov
push
fildll
mov
push
lahf
cltd
in
push
enter
cmp
jno
sbb
mov
or
pop
aaa
dec
hlt
mov
rcll
push
aas
hlt
mov
in
addr16
daa
mov
adc
dec
mov
pop
push
lods
ja
push
pop
adc
inc
ret
mov
cld
test
test
xor
ss
dec
cmp
inc
fdivrs
add
dec
mov
push
outsl
test
clc
xchg
sub
xchg
lds
jge
js
xabort
testl
or
inc
sahf
out
insb
stos
sbb
xor
jbe
and
or
cmp
cmp
sarl
dec
enter
xchg
dec
shll
scas
popf
mov
cmc
inc
or
es
sub
mov
out
rcll
add
cmp
ja
xchg
dec
adc
pop
icebp
stos
xchg
add
gs
sub
sub
clc
mov
sbb
push
pop
gs
add
lea
adc
push
xlat
push
fimull
add
jmp
xchg
or
sbb
sub
dec
repnz
cmc
daa
rcrl
scas
dec
stos
dec
or
test
cmp
rorl
push
jne
pop
ja
and
push
ss
push
js
push
adc
and
mov
dec
push
push
mov
xchg
dec
xchg
adc
scas
xchg
mov
mov
loop
daa
pop
movsl
ds
cwtl
mov
lahf
clc
das
jne
sbb
aas
push
mov
cld
add
xchg
test
or
jnp
mov
xor
mov
jne
je
mov
pop
test
lret
or
mov
adc
cmp
addr16
add
inc
cltd
inc
jecxz
dec
andb
aam
or
and
sub
xor
imul
popf
add
lret
xchg
lds
xchg
ret
pop
cmpsb
mov
repnz
mov
mov
nop
jbe
ja
sub
mov
dec
pop
pop
pop
insb
mov
sbb
sub
mov
xchg
push
jmp
imul
popa
pop
mov
pop
jno
lahf
ret
fcoms
xchg
fcoml
nop
mov
dec
jo
add
xlat
out
pushf
mov
adc
xorl
add
push
rcll
xchg
aam
xchg
sub
add
pushf
cmpsb
and
inc
inc
pop
or
inc
pusha
mov
and
push
cmp
jbe
or
aad
cmp
add
fisubl
pop
mov
sbb
cmp
add
sbb
mov
js
fwait
pop
dec
std
mov
lea
rclb
ja
clc
sti
pop
xchg
movb
sbb
mov
ja,pn
repz
add
dec
dec
out
push
lcall
fcmovnbe
cld
out
inc
fisubl
std
std
inc
pusha
jo
sub
fs
cmp
je
jecxz
cmp
sti
out
stos
or
out
pop
int3
dec
pop
xchg
sahf
pop
movsl
dec
xor
pop
lods
and
stc
ja
sahf
lcall
rdtsc
test
mov
cmp
push
insb
icebp
dec
sarb
push
test
sbbb
leave
sub
cmc
popa
mov
add
je
push
ds
mov
je
adc
sbb
pusha
lret
push
std
mov
fcoml
push
xor
xchg
sub
cmpsb
dec
xor
pop
jp
int3
imul
xchg
add
and
je
cwtl
mov
push
cmc
adc
fldenv
iret
aam
movsb
add
xor
loop
scas
add
sar
pop
addb
es
imul
dec
mov
test
loope
aad
test
dec
push
cltd
clc
mov
sbb
cmpsl
mov
sbb
and
xor
jns
dec
iret
mov
fmulp
cmc
movsb
ret
addl
pop
scas
mov
pop
cwtl
and
dec
mov
imul
data16
ss
pushf
int
xor
inc
and
lds
sub
and
jle
test
stc
popa
data16
out
pop
aad
cmp
xor
enter
scas
mov
xchg
xor
xchg
jmp
scas
xor
jbe
xchg
icebp
fcompl
or
icebp
cmp
cmpl
dec
cmp
cwtl
add
or
jbe
sahf
popa
and
and
pop
rorl
pop
js
or
movl
addl
test
inc
mov
hlt
mulb
fwait
add
mov
popf
adcl
add
ljmp
je
dec
add
cmp
adc
push
mov
lds
in
insl
icebp
lret
scas
add
daa
xchg
adc
ret
sub
or
adc
xchg
jmp
and
or
jns
pop
cmpb
push
test
enter
and
cmp
push
mov
aas
mov
cmp
jle
addr16
cmp
loop
sbb
inc
push
and
insb
rcll
and
or
xor
xlat
mov
call
dec
push
dec
es
adc
adcl
dec
outsb
cmp
push
mov
xor
popa
orl
dec
push
nop
cmp
mov
pop
and
xchg
mov
adc
jge
arpl
fs
push
mov
xchg
rolb
pop
mov
cmp
je
lcall
ljmp
and
lds
ret
cmc
xor
cmpl
xor
scas
lock
clc
jl
mov
ret
shrb
cmp
mov
mov
stos
xor
jge
sar
and
xchg
loope
pusha
sub
test
dec
and
cmp
add
mov
mov
jo
pop
dec
lods
mov
test
push
mov
jo
jnp
addr16
and
xor
or
dec
loop
adc
push
mov
mov
movsl
add
pop
fstpl
push
mov
inc
pop
fsubp
or
or
fbstp
hlt
cmp
movsl
pop
push
fsubrl
xchg
jo
fsts
xor
and
dec
mov
mov
push
loop
xor
mov
sahf
and
mov
lods
dec
movsb
mov
push
test
ret
push
call
aam
cmp
mov
popf
mov
imul
fcom
inc
std
enter
xchg
movsl
dec
sub
in
add
mov
add
inc
sbb
push
add
or
push
imul
daa
lahf
mov
enter
js
mov
cmp
ss
jg
dec
int
and
push
pop
sbbl
mov
aad
cmp
in
pop
lret
push
cs
push
sub
jecxz
out
xchg
pop
jge
or
sti
ja
mov
fildl
push
test
and
push
pop
and
imul
push
out
in
es
inc
lods
out
movl
ret
mov
js
aam
add
push
add
in
jbe
mov
xor
movsb
idivb
mov
inc
fisubrs
and
cmp
ljmp
mov
mov
aaa
test
dec
cld
fsubs
and
xchg
popf
mov
pop
dec
inc
imull
push
cmp
aam
pop
imul
pop
in
nop
repz
sahf
shlb
xor
out
ss
lcall
mov
arpl
xor
add
add
dec
xchg
lahf
aad
js
inc
decl
test
lock
mov
divl
insl
or
jmp
mov
data16
xor
jecxz
adc
and
push
push
fdivl
pop
pushl
jbe
sbb
imul
daa
jb
iret
push
fwait
pop
mov
mov
inc
pop
sub
sahf
imul
mov
cmp
pushf
mov
ret
xchg
dec
lret
xchg
mov
dec
push
mov
jp
mov
xchg
xor
sub
dec
push
cwtl
loop
and
cmp
pop
lea
sbb
push
ss
add
repz
ljmp
aam
mov
ficompl
sub
mov
jp
pop
lods
out
jbe
andb
add
setb
jne
mov
pop
jnp
std
and
lret
xor
mov
clc
dec
sbb
and
cmp
pop
lahf
inc
xchg
jbe
rorb
mov
and
fmull
fisttps
push
repz
cmp
imul
ret
stos
cmp
or
cmp
lret
fldenv
add
lods
inc
mov
cld
xchg
mov
lret
xchg
lcall
pusha
cmc
shll
imul
xchg
push
cmp
pop
les
push
aas
pop
in
or
sub
cmp
inc
sbb
cmp
adc
mov
push
push
adc
das
mov
lret
push
out
xchg
push
repnz
sub
imul
add
add
cld
pushf
repnz
mov
or
jnp
inc
pop
push
jbe
push
out
jb
or
mov
scas
sbb
dec
xchg
popa
nop
inc
jb
sarb
les
jae
mov
cld
inc
jmp
lret
and
cwtl
bound
das
loopne
push
int
daa
jmp
insl
and
adc
ret
cs
cltd
add
dec
inc
into
jg
push
or
mov
int
and
loope
lahf
aas
mov
lcall
fldl
lcall
jle
ficompl
cmc
mov
dec
ret
cmp
cmp
sbb
inc
daa
aad
add
out
sbb
pop
and
mov
inc
sub
fimull
add
xor
mov
add
push
push
imul
pmaxub
dec
sbb
push
jecxz
outsb
dec
jno
or
dec
ret
adc
aaa
cmpsb
fsubl
adc
push
loope
cmp
sub
adc
mov
push
inc
xor
and
stc
sbb
unpckhps
sbb
fmull
xor
fs
xor
sub
sahf
pop
sub
xchg
xchg
sbb
lds
jae
bnd
push
es
xchg
mov
sbb
and
mov
mov
xor
mov
jg
dec
mov
push
bound
cmp
or
add
js
inc
xchg
lds
inc
jg
cli
sub
or
lods
lcall
adc
push
add
les
and
cmp
push
and
xchg
ret
jmp
setg
out
or
popa
xchg
loope
or
mov
xor
cmp
in
jl
adc
loopne
or
je
sbb
xchg
mov
in
jle
hlt
pop
jge
xchg
adc
mov
push
xchg
pop
xchg
or
cmpsl
pop
adc
test
adc
jle
jbe
sub
hlt
pop
sbb
sub
sbb
imul
dec
jnp
or
and
enter
loope
nop
lret
sub
mov
fldl
and
test
push
add
push
adc
jnp
testl
cltd
pusha
jnp
mov
cmp
and
xchg
jp
cld
mov
in
pop
adc
sub
jnp
sbb
and
adcl
sub
fisttps
and
xchg
jno
pop
sub
rcll
or
lret
leave
pop
jne
inc
test
adc
adc
mov
jge
out
jp
pop
pop
push
inc
mov
mov
subb
adc
mov
fsubrs
nop
scas
test
lahf
mov
fadds
xor
mov
mov
or
pusha
ja
roll
or
lea
lcall
cmp
dec
sahf
shll
and
push
insl
sbb
pop
fwait
sub
push
mov
xor
mov
dec
dec
mov
adc
std
notl
xchg
adc
les
out
in
sbb
or
push
mulb
dec
sbb
sbb
repz
inc
add
addl
mov
mov
and
sbb
dec
mov
pop
xchg
scas
insl
or
and
jb
pop
and
add
dec
mov
adc
adc
xor
cmp
dec
cmp
mov
daa
add
inc
mov
dec
jbe
cmp
bound
out
or
push
mov
into
push
lahf
push
push
std
adc
nop
add
add
xor
xchg
pusha
leave
das
sub
pop
iret
cmpsb
mov
jle
jno
push
out
dec
lahf
jae
xor
ss
xchg
mov
jmp
adc
imul
or
arpl
into
xchg
shr
cwtl
or
mov
shrb
inc
nop
mov
int3
push
fincstp
sbb
pop
dec
mov
cld
ljmp
fisttpll
xor
hlt
push
lret
hlt
mov
aad
add
add
stos
cmp
and
movsb
mov
jg
out
inc
std
inc
adc
push
mov
popa
push
lods
test
or
js
adc
push
outsb
pop
repz
pop
jno
das
jg
imul
sbb
in
sub
arpl
movq
cmp
mov
jl
xchg
add
adc
dec
cs
and
pop
xchg
int3
ds
imul
loop
mov
repnz
mov
inc
push
jo
aad
or
and
xchg
out
xor
inc
pop
popa
addr16
mulb
imul
shr
negb
pop
or
icebp
push
adc
loopne
sub
xchg
je
fcompl
jae
test
ss
push
jp
jne
mov
jns
add
imul
std
mov
mov
jnp
imul
movsb
jae
push
add
mov
out
sbb
adc
cmpsb
arpl
xchg
lock
mov
and
sahf
iret
or
sbb
mov
xlat
cmp
add
dec
adc
jge
insl
xchg
adc
inc
aas
orl
pop
sbb
adc
bound
push
cmp
fwait
orb
adc
sbb
add
cs
push
and
mov
rcll
lods
xor
xor
inc
stos
mov
jle
pop
pop
and
push
and
scas
xorb
inc
and
add
pop
push
dec
or
das
clc
inc
lods
stos
xchg
mov
cmp
cmpsl
cmp
adc
outsl
jne
hlt
cltd
push
sub
sbb
inc
push
and
xchg
fimuls
in
into
aam
movsb
lods
and
xchg
mov
push
ljmp
mov
cmpsb
and
or
xchg
adc
movsb
cltd
jae
jg
std
popa
xchg
sub
cmpsl
scas
mov
push
test
dec
pop
add
hlt
aas
mov
jl
mov
pop
adc
xor
sub
xchg
jno
dec
and
push
sbb
nop
lret
cmp
jbe
sti
std
ss
xchg
ljmp
ss
dec
rorl
add
mov
inc
or
jnp
lcall
clc
mov
sbb
push
leave
and
faddl
notb
mov
sahf
jle
test
and
mov
cwtl
xlat
cltd
aas
hlt
inc
pop
rorb
into
pop
xchg
sbbb
inc
movsb
sti
sbb
in
mov
pop
roll
shlb
inc
xchg
test
mov
adc
mov
xchg
clc
and
cmpl
or
fadds
mov
inc
push
mov
inc
clc
les
cmp
sub
lahf
les
push
adc
rclb
xor
jg
mov
sbb
cld
dec
lea
adc
jne
jmp
inc
add
sahf
repnz
add
and
xchg
jns
ja
mov
xor
pop
mov
jbe
test
push
into
out
inc
pop
or
pop
pop
inc
dec
inc
adcb
xor
xor
push
sbb
jne
and
fwait
mov
fwait
adc
mov
dec
test
clc
mov
aad
jno
add
icebp
mov
dec
ret
cltd
jle
add
lock
cmpsl
pop
fstl
push
mov
mov
daa
popa
add
dec
inc
ret
push
ret
inc
push
ja
xor
jae
jmp
push
sahf
test
fdivl
es
push
rcr
sub
pop
in
icebp
dec
dec
movsb
sbb
xor
dec
jnp
roll
jno
inc
mov
and
ss
xchg
or
xor
xchg
int
cs
lcall
adc
daa
xchg
mov
cmp
out
cmp
insl
xchg
adc
sub
add
loop
out
shlb
lea
sbb
mov
push
imul
dec
out
cmp
andnps
lahf
call
insb
push
sub
ja
cmpsl
sub
add
mov
add
or
pop
or
fdivl
cmp
sub
imul
inc
fwait
scas
adc
loop
sbb
call
cmpsb
sub
xchg
push
push
repnz
insl
add
pop
insb
loopne
sti
stos
adc
enter
xchg
sbb
xchg
into
adc
bound
mov
mov
js
mov
js
inc
push
ficomps
xchg
inc
sbb
cs
loop
mov
addl
xlat
rcll
push
movsl
jae
aam
imul
sbb
rorb
cld
xchg
testl
dec
shl
and
pmaddwd
aam
rorb
sbb
outsb
jg
add
sti
imul
xchg
out
mov
mov
xchg
nop
sbb
ljmp
pop
test
or
push
test
push
push
cmpsb
mov
adc
movsl
pop
xchg
outsb
test
adc
cld
sub
ficompl
lret
aaa
cli
cmp
dec
aad
adc
mov
call
mov
xchg
mov
adc
in
outsl
jl
xchg
mov
jl
aas
fdivl
push
repz
inc
pop
sti
push
aam
fidivs
fs
call
cltd
push
sub
mov
xchg
ret
adc
icebp
cmp
flds
jo
in
sbb
and
push
int3
mov
xchg
sub
loop
push
icebp
popa
sub
pop
mov
xor
dec
sub
add
mov
out
into
orb
cmp
inc
fisttpll
mov
xchg
or
fcomp
lahf
js
mov
or
push
mov
adcb
fwait
cld
push
pop
movsl
cmpsl
adc
jae
nop
das
adc
outsl
out
movl
shl
cwtl
popf
fnsave
xor
xor
sbb
cmp
push
dec
clc
fsubs
mov
jne
mov
lods
mov
js
sti
je
mov
mov
and
test
jae
and
or
xchg
mov
testb
sub
stos
repnz
cld
popf
dec
add
mov
inc
mov
xchg
les
lods
iret
pop
shl
cs
sarl
cmp
dec
or
and
inc
xchg
andb
dec
sbbb
out
adc
lret
sarb
sti
jns
or
pop
sbb
pop
cmp
sahf
sbb
lcall
inc
add
clc
or
push
negl
add
or
in
xor
out
iret
sbbl
stc
jbe,pt
mov
insl
out
and
jecxz
stc
cmp
pop
test
pusha
pop
inc
inc
push
push
adcb
jge
xor
sbb
push
mov
xor
inc
fs
cmp
scas
movsl
xchg
mov
aas
cmp
mov
int3
les
fs
and
pop
sbb
ja
aaa
ljmp
pop
push
add
imul
cs
repz
rclb
lods
stc
inc
in
dec
push
sbb
mov
xor
mov
push
add
test
add
popa
push
insl
ss
mov
cmp
mov
sti
sub
cmp
pop
xlat
pusha
or
sbb
add
inc
add
xor
std
mov
add
xchg
int3
adc
clc
cmp
or
loop
push
je
cld
decb
in
and
rolb
jne
sub
lods
dec
xor
inc
xorl
xchg
add
xor
imul
dec
mov
or
xchg
in
lret
mov
lock
dec
mov
enter
add
xor
add
inc
sbb
inc
nop
popa
push
cwtl
jbe
neg
xchg
jne
aaa
or
and
aaa
cmp
and
cmpsl
ret
mov
je
xorl
sbb
sbb
cmpsl
sbb
nop
cmp
aaa
les
inc
test
test
ljmp
or
inc
lcall
lods
cld
mov
jnp
jno
xor
xchg
dec
sti
out
adc
mov
in
aad
add
adc
dec
rcrb
loope
je
mov
je
mov
pop
cld
mov
js
mov
repz
adc
push
push
inc
js
adc
jl
stos
add
pop
popa
and
mov
rolb
mov
nop
and
add
push
ja
cmp
xchg
js
aam
dec
mov
cwtl
mov
pop
dec
push
notb
les
push
fdivrs
xchg
popf
lock
or
mov
aaa
lahf
je
mov
jae
cmp
repz
das
cmp
push
mov
out
shl
sarl
xchg
mov
add
stc
cmc
jne
xor
add
pop
ror
mov
mov
fcmove
int3
stc
andl
sub
lock
mov
mov
jns
mov
jecxz
movsl
lret
xor
ljmp
ret
sbb
aam
test
popf
and
adc
adc
hlt
cli
movq
or
test
icebp
out
add
testb
sbb
sub
sti
pop
stos
and
int3
leave
adc
ss
clc
add
enter
push
test
or
rol
jns
insb
arpl
push
std
mov
leave
or
inc
push
stos
add
pop
sub
aas
cmp
rcrb
pop
jmp
push
lods
mov
hlt
jb
dec
or
mov
mov
cld
push
mov
ja
xor
add
dec
push
mov
aas
add
mov
popf
insb
shr
mov
cltd
push
jl
mov
aaa
dec
movsb
xchg
inc
mov
ds
and
sub
shll
adc
mov
adc
jp
fbld
sbb
roll
and
fwait
je
popa
sub
outsb
mov
xchg
frstor
push
gs
icebp
daa
pop
jecxz
inc
icebp
adc
rclb
stc
icebp
dec
aam
movsl
seto
inc
xor
xor
cs
jecxz
pop
sbb
insb
xor
push
pushf
roll
or
hlt
xchg
sahf
call
pushf
push
fistl
js
mov
add
or
icebp
aam
jl
shl
imul
call
rclb
mov
jg
lret
pop
adc
jnp
sub
aaa
aam
loopne
inc
bound
jne
and
lods
das
aas
rorb
push
mov
and
les
roll
fwait
push
aaa
adc
sbb
test
pusha
dec
sbb
test
sahf
push
mov
xchg
or
mov
aam
mov
movsl
pop
loop
add
in
sbb
loop
ljmp
mov
out
dec
adc
inc
pop
dec
inc
cmp
lret
jo
pop
loopne
inc
xchg
addl
int
pushf
adc
add
insb
pusha
cmc
xlat
lcall
push
scas
pop
hlt
xchg
push
xor
sahf
aad
pop
push
gs
mov
inc
cmc
test
arpl
scas
mov
add
jl
in
sbb
cmc
push
jnp
sub
sbb
flds
int
orb
pop
in
fisubrl
stos
push
mov
stc
orb
fldcw
inc
mov
aad
sbb
loope
mov
push
cmp
je
add
cld
or
shlb
push
pop
sub
push
and
pop
xchg
inc
and
aaa
test
jno
not
adc
and
inc
ss
or
adc
xor
jecxz
adc
xchg
pushf
push
sub
push
push
xor
ficompl
je
push
dec
xchg
push
cmp
cltd
or
and
inc
fwait
bnd
or
add
js
mov
test
adc
jno
push
movsb
dec
bound
movsb
mull
push
mov
or
test
push
popf
aam
call
nop
xchg
gs
sbb
push
or
cld
lret
adc
in
mov
xchg
arpl
adc
repz
dec
pushf
jmp
inc
test
test
sbb
cld
push
fnstsw
sub
jbe
or
rcrl
pop
mov
jne
mov
mov
sub
or
jne
mov
sti
jbe
mov
sub
in
insb
jnp
push
pop
ljmp
pop
cmc
ret
push
mov
lds
test
pop
and
scas
adc
lret
xor
les
or
xor
aam
mov
ja
outsb
daa
fcomip
sti
mov
shll
adc
rolb
and
sub
in
xchg
jno
stos
pop
mov
fs
add
lds
fmul
mov
lcall
push
jbe
jle
xchg
fs
mov
gs
aaa
mov
fs
out
jae
jbe
push
mov
adc
mov
jne
xor
fs
movsl
sbb
pop
push
jg
xor
popa
xchg
in
and
mov
push
mov
push
pop
lcall
push
add
dec
pop
not
mov
arpl
jns
cmpsb
push
sub
fmulp
int3
repnz
int
rcrb
cld
negl
sbb
xor
adc
push
loope
nop
aas
and
leave
or
rcl
lret
xchg
xor
pop
dec
mov
inc
mov
and
jno
int3
outsl
sarl
dec
pop
mov
les
or
mov
or
mov
sub
dec
into
push
add
adc
in
cmc
or
xor
or
in
nop
adc
mov
decb
scas
xor
ljmp
inc
cmp
adc
hlt
cmp
pop
cmp
xchg
je
cs
call
xchg
std
out
in
pusha
jg
and
jbe
lods
hlt
imul
mov
dec
andl
test
pop
popf
ja
popa
popf
les
inc
sub
jo
adc
es
or
or
lock
cld
mov
jnp
dec
js
xchg
cmc
cwtl
add
xor
cmp
and
cmp
imul
push
rcrl
xchg
cmp
push
es
sub
pop
aam
jo
arpl
adcl
mov
movsl
pop
sbb
sbb
popf
in
push
call
and
pop
fwait
lret
test
sti
push
xor
shr
xchg
imul
jge
mov
rolb
ss
test
outsl
adc
test
or
out
outsb
pop
cmp
push
movsb
loope
insl
sbb
mov
push
pop
xchg
or
fisubrs
loope
pop
stos
scas
mov
cmp
push
sbb
xor
sub
test
adcl
sub
addb
adc
lock
pop
movsl
lea
addr16
clc
jmp
in
xor
lret
adc
movsl
icebp
pop
mov
nop
pop
cld
out
and
push
popf
dec
push
and
push
xor
add
dec
jp
lds
movsb
mulb
out
out
cmp
rorb
mov
xchg
mov
cmpsl
hlt
pop
mov
push
dec
cld
jnp
and
xchg
or
pop
dec
mov
adc
cmp
cmpsl
enter
jb
sub
fwait
and
mov
rorl
inc
adc
mov
lods
nop
push
cli
jmp
mov
push
adc
pop
lret
es
sbb
xchg
inc
js
or
and
sub
mov
inc
jno
pop
or
inc
inc
nop
jbe
push
mov
adc
pop
jg
mov
adc
stc
dec
add
jecxz
push
wrmsr
shlb
test
loope
clc
cmp
pop
sahf
testl
add
push
bound
out
pop
pop
xchg
add
sub
sbb
lds
gs
test
jno
mov
out
je
or
push
jb
pop
nop
movsl
leave
sbb
jl
sub
lcall
mov
les
xor
sahf
leave
cmp
cmpsb
mov
sti
aaa
mov
int3
pop
pop
mov
les
adc
ret
imul
cmp
or
je
ret
jo
aas
mov
sbb
stos
pop
ja
mov
pop
xor
lds
lea
pop
xchg
push
xor
test
popl
lods
mov
mov
fs
fsubr
cmp
mov
cmc
dec
mov
sbb
push
mov
lea
fs
lock
sub
mov
or
push
xor
dec
in
jne
inc
ss
xchg
rcr
data16
inc
into
pop
mov
xchg
je
mov
push
jo
push
xchg
int3
cmp
jns
mov
adc
rol
dec
fs
dec
jg
mov
rorb
scas
or
jmp
imul
push
je
mov
cwtl
jmp
lret
enter
sub
xchg
lds
daa
incb
sbb
and
mov
xor
push
jne
js
inc
push
xchg
inc
cmpb
adc
pop
adc
lds
mov
js
inc
out
rcrl
test
pop
pop
sahf
xor
pop
bndldx
cmp
xchg
sahf
fidivrs
inc
and
add
pop
dec
mov
ja
fdivrp
push
repnz
sub
stos
dec
inc
pushf
cmc
loopne
and
loope
pushf
push
jecxz
mov
push
adc
mov
cwtl
scas
les
mov
pop
push
or
pop
and
xlat
or
push
pusha
cld
adc
add
inc
jnp
pop
xchg
and
xchg
jno
sub
nop
dec
dec
dec
sub
arpl
mov
push
inc
adc
sbb
daa
int
test
xchg
sarl
movsbl
sub
rcr
push
fsub
rolb
adc
in
mov
in
dec
inc
push
mov
dec
test
or
xchg
out
or
cld
scas
pusha
fwait
mov
dec
jp
or
stos
push
xor
repnz
pop
stos
ja
pushf
mov
stos
pop
data16
adc
popl
cmp
xlat
idivb
jns
gs
sahf
sbb
fldcw
and
repnz
xchg
dec
jbe
clc
pop
add
lods
fisubrs
xchg
lcall
jno
xchg
popf
iretw
shll
mov
adc
imul
lods
xchg
in
outsb
add
movsb
push
add
mov
inc
pop
add
push
test
xor
repz
xchg
insb
push
mov
jl
out
ss
bound
roll
xor
inc
test
sbb
icebp
movsb
push
cmp
jnp
scas
mov
sub
pop
pop
pop
mov
fiadds
jne
jp
dec
roll
adc
fsubl
cmp
sahf
aaa
jno
adc
shll
add
test
cmp
adc
imulb
mov
rcrb
adc
xlat
mov
add
rolb
mov
or
popa
notb
push
xchg
mov
push
mov
mov
xor
dec
xchg
ret
sbb
cmc
pop
xor
pop
xchg
mov
mov
les
stos
in
mov
dec
cmp
push
add
stc
cmp
lds
test
pop
adc
movsb
pop
mov
cmp
sbb
add
inc
sarl
enter
cmp
xchg
jo
pusha
outsl
and
cmp
xorl
add
pop
mov
add
je
mov
and
sbb
movsb
rcrb
sbb
lods
xchg
aam
in
mov
xchg
and
pop
sbb
cmpb
adc
in
call
rcl
rdpmc
pop
xchg
enter
popa
je
adc
mov
rclb
daa
mov
lods
mov
negb
mov
mov
sbb
ljmp
xchg
pop
jne
test
sub
aad
into
pop
sbb
pop
mov
sbb
inc
inc
mov
xor
push
mov
pop
pop
scas
jbe
pop
dec
das
sahf
sub
pop
and
push
pop
insb
adc
inc
add
pop
push
mov
sbb
ja
ror
ljmp
add
mov
mov
mov
out
inc
cwtl
and
test
fcmovbe
sbb
sub
inc
xlat
cmc
dec
add
and
or
xor
or
cmp
aad
jbe
movsl
mov
jge
sbb
adc
repz
lret
push
adcb
adc
andl
push
scas
adc
xor
adc
xor
push
ds
adc
mov
out
pop
xor
aam
push
add
aas
pop
je
sbb
add
push
push
aam
pop
notl
adc
xor
in
mov
cmc
mov
bnd
or
ret
adc
sbb
pop
push
mov
dec
ljmp
lea
mov
jb
or
push
outsl
mov
add
mov
inc
add
jnp
inc
lds
cmp
push
xchg
xor
add
hlt
add
sbb
xchg
nop
add
test
jl
pusha
out
jp
cmp
jle
mov
mov
out
hlt
xlat
push
adc
rclb
inc
ret
pop
push
pop
ret
arpl
pop
xlat
cmc
inc
cmp
xchg
mov
aam
xchg
adcl
popf
pop
test
repnz
cmp
pop
shlb
and
aaa
mov
xchg
sbb
pop
imul
pop
aad
rorb
vpunpckhbw
xor
or
adc
fidivrs
jp
push
pushf
fs
dec
push
mov
push
lret
test
pop
shl
dec
push
xor
xor
mov
pop
push
and
add
add
push
jbe
mov
and
loope
add
cwtl
xchg
outsb
inc
inc
inc
int
das
movsl
pop
fiadds
xor
insb
sbb
inc
push
loope
and
sub
int
in
jno
sbbl
mov
pop
loop
mov
xor
xor
sahf
shlb
add
xchg
into
jle
inc
iret
or
shrl
jecxz
and
icebp
mov
rcl
push
lods
push
pop
push
xchg
insb
arpl
mov
cmpsb
ja
adc
je
sub
dec
addl
clc
xor
movsb
mov
sub
out
out
dec
add
and
mov
push
mov
mov
jmp
shrb
xlat
iret
jnp
fcomps
xor
sub
pop
xor
pop
add
cmp
movsl
sbb
ss
fistl
addl
mov
push
scas
cmp
shrl
xor
leave
cltd
mov
mov
sub
adcl
loop
ds
dec
pop
push
inc
push
add
imul
cmp
imul
rcr
rcrl
cmp
jnp
es
std
sti
xor
push
and
outsl
xchg
inc
aad
adc
lods
aas
pop
sbb
xchg
and
pop
sti
cmp
ss
fs
daa
fstpl
mov
cmp
adc
xor
rcll
or
je
nop
mov
xchg
sub
daa
dec
dec
push
lds
mov
jb
pop
xchg
xorl
push
filds
es
popa
pop
nop
inc
mov
lock
nop
in
aad
or
jg
dec
cmp
xchg
xor
pop
sbb
les
and
and
xchg
sbb
cli
lcall
mov
test
lods
mov
sub
int
imul
or
xchg
les
mov
test
jb
call
loop
sbb
stos
push
mov
arpl
int3
cmp
sbb
sub
aad
nop
cld
enter
xchg
mov
sbb
push
mov
pop
and
es
and
mov
sub
lret
lea
or
sahf
add
adc
mov
sub
pop
push
add
fistl
aas
xchg
rcrb
mov
pusha
xor
xchg
popa
fdivrl
inc
arpl
or
lock
push
pop
sub
aas
hlt
orb
xlat
mov
pop
enter
out
scas
aam
jns
mov
enter
cmp
daa
xorb
cmpsl
dec
pop
dec
dec
pop
div
jbe
out
pop
icebp
and
scas
xor
aam
aaa
inc
or
cmp
add
pop
lods
cmp
div
push
cmp
inc
pusha
push
sahf
mov
xor
mov
int
jo
jmp
in
add
xor
mov
dec
test
and
in
cli
xlat
mov
xor
adc
mov
push
inc
insb
das
std
cmpl
dec
inc
adc
int3
lods
jne
push
pop
or
pop
sbb
pop
inc
popl
test
mov
and
mov
cmp
call
dec
xchg
andl
push
stc
pop
pushf
dec
add
jne
pop
mov
add
mov
int
sub
jno
arpl
repz
stos
sbb
je
fisttpll
pop
ss
test
js
sub
xchg
push
std
negb
mov
and
imul
int3
sub
push
loopne
or
push
lods
push
bound
aas
xchg
push
xor
test
xchg
or
arpl
push
xchg
inc
jp
sti
push
clc
stos
cli
bound
outsl
je
sub
push
mov
sbb
push
pop
fstps
jl
cmp
das
adc
ret
adc
adc
pop
sbb
ss
mov
sbb
dec
aam
cwtl
arpl
and
xchg
add
rcr
dec
pop
jg
or
push
mov
out
add
mov
cmp
insb
inc
cmp
cmp
aad
adc
cmp
mov
xchg
xor
orb
faddl
cmp
ja
sub
dec
jl
xor
push
lahf
outsl
gs
pop
insb
call
lods
jg
cmpsl
jo
into
lea
or
push
adc
push
in
cmp
stos
xchg
movsl
dec
push
mov
mov
loopne
aas
xchg
push
into
or
lret
cmp
jbe
mov
pusha
jp
shrb
inc
push
gs
repz
aas
mov
out
lods
out
push
jno
js
pop
cmp
pop
inc
sti
lahf
and
cmpsl
jmp
pop
push
iret
inc
push
push
movsb
dec
cmp
movsb
jns
pop
push
adc
mov
mov
stos
push
inc
in
out
jbe
push
inc
adc
dec
cmp
loopne
jecxz
shlb
iret
test
and
xor
and
sbb
lods
dec
xor
xor
xchg
loope
and
push
in
aad
push
xor
and
adc
aas
rorl
in
lahf
and
lods
ror
das
movsb
nop
push
dec
mov
inc
ljmp
cmp
xchg
sbb
jecxz
adc
push
data16
jo
push
addl
push
xchg
push
imul
jmp
scas
adc
pop
sub
cmpl
mov
hlt
lret
lret
mov
mov
push
mov
stc
leave
cmc
xor
mov
xchg
gs
and
stc
push
std
mov
add
push
jo
sbb
and
xchg
jle
imul
fidivrl
mov
mov
gs
mov
cmp
push
movl
data16
addr16
arpl
mov
mov
push
fcoms
mov
dec
leave
pop
mov
xchg
jp
push
daa
or
inc
cmovbe
sub
je
sub
xor
mov
pop
mov
call
sub
or
sti
inc
jl
xor
jae
cld
cmp
or
dec
imul
fmuls
ss
fisttps
mov
jb
out
pushf
mov
out
push
inc
mov
cmp
lcall
test
push
stos
sbb
jg
scas
push
xor
pop
adc
jae
inc
insl
or
xlat
and
inc
arpl
pop
mov
test
sub
je
or
push
cmpsl
enter
leave
add
push
scas
in
inc
mov
sbb
scas
mov
sub
ret
inc
and
cmc
sbb
cmp
cmp
inc
imul
aam
lods
mov
xor
decb
daa
cltd
jns
mov
pop
push
nop
jbe
andl
push
push
adcb
adc
cli
dec
mov
nop
or
add
dec
sbb
dec
push
jmp
mov
cmp
notb
gs
cwtl
stos
mov
movsl
xchg
je
shll
or
or
sahf
shll
pop
adc
or
sub
xlat
inc
test
inc
fbld
aas
jno
hlt
cmp
mov
das
aas
leave
out
xor
adc
and
jo,pt
push
and
cmp
ret
aas
push
test
adc
jp
fildll
lods
cmc
or
jnp
add
mov
out
sub
xchg
into
cmp
xchg
clc
dec
dec
cmp
xor
cmp
scas
push
push
pop
adc
push
adc
loope
cld
subl
jne
push
pop
mov
int3
push
and
fcmovnbe
sub
leave
dec
adc
movsb
pop
inc
ficoms
sub
fimull
dec
xchg
lcall
test
sbb
push
jne
dec
sub
mov
and
xchg
fcoml
repnz
paddsw
loop
out
cmc
pop
sbb
divb
mov
cmp
insb
ds
adc
imul
sbb
lods
repz
pop
sub
repnz
scas
pop
mov
xlat
mov
add
lahf
pop
lods
mov
and
push
pop
mov
call
hlt
inc
sti
sbbb
cmp
loope
ja
add
fsin
adc
out
ja
cltd
cld
push
ret
xor
sub
lret
push
mov
lds
add
xlat
mov
dec
cwtl
test
rcll
pop
es
aad
mov
bound
inc
cli
pop
test
or
jb
push
sub
pop
test
inc
xor
sbb
xlat
cmp
cmp
lea
xchg
xlat
imul
mov
add
or
je
cmp
cld
popa
push
stos
lcall
movsb
xor
in
dec
pop
or
popf
sahf
repnz
mov
pushf
dec
dec
loopne
sub
adc
adc
xchg
xchg
jbe
ds
call
scas
jle
or
out
mov
mov
test
jge
xor
shll
loope
idivb
vandps
sub
jne
adc
imul
mov
sub
inc
repnz
popa
adc
xchg
pop
pop
push
xchg
out
mov
scas
or
hlt
pop
pop
lea
sbb
inc
push
xor
sub
aam
xchg
xor
orb
adc
in
and
push
xchg
sbb
addl
fisubl
adc
dec
adc
aam
in
inc
int3
push
push
std
add
cmp
pop
aas
sbb
xor
xor
or
fcomps
fwait
ja
sub
cmp
dec
and
lret
or
xchg
inc
frstor
inc
jne
xchg
testb
cmp
cmpb
adc
int3
das
xchg
movsb
cmp
rorl
nop
push
lret
je
cmp
xor
xchg
jnp
test
call
mov
int3
aam
add
xor
fldcw
add
mov
aad
push
or
daa
or
lods
dec
xchg
inc
fwait
pop
jl,pn
nop
cmc
push
xchg
add
aaa
and
xor
test
inc
xchg
inc
jae
add
inc
mov
sbb
cmp
call
daa
add
adc
fsts
ret
mov
imul
outsl
test
das
mov
mov
and
xchg
mov
repz
and
sti
cwtl
add
add
push
mov
dec
loope
inc
sbbb
mov
pusha
adc
movsl
xor
popf
ja
xchg
ja
nop
push
inc
push
cs
xor
push
xor
push
push
ret
push
hlt
data16
push
jge
push
pop
lahf
push
jne,pn
push
dec
shrb
roll
xchg
adc
or
inc
or
insb
movsl
push
mov
sbb
cmp
mov
add
scas
mov
xor
aas
pop
or
dec
aad
test
lret
jb
mov
fcompl
inc
jnp
aad
into
insl
movsb
insb
pop
test
and
inc
and
nop
jle
add
jbe
ficompl
jge
dec
and
sbb
aaa
cmc
shll
jno
ficoml
add
or
pushf
sahf
add
test
sbb
out
aas
hlt
jge
int3
or
dec
xchg
popf
push
js
std
mov
enter
inc
and
sbb
sbb
ja
sub
call
mov
aam
jmp
jbe
mov
adc
push
cmpsb
mov
notb
jno
jne
setbe
fwait
adc
mov
dec
mov
into
int
addb
pop
jecxz
fadd
xlat
lods
shlb
xchg
mov
je
push
fbstp
xor
add
aam
call
test
dec
pop
adc
adc
cmp
dec
pop
lret
xlat
enter
mov
test
xlat
add
sbb
dec
xor
repz
cmc
pop
mov
push
pop
adc
xor
lahf
inc
imul
fcomps
ficoml
xchg
pop
mov
sub
push
push
out
lock
mul
add
xor
bound
jge
xor
inc
jl
mov
xchg
sbb
or
or
or
test
rorb
cli
imul
bound
in
add
stos
mov
movb
out
mov
pusha
mov
aam
movsl
jne
cltd
or
fwait
stos
sahf
xchg
pop
and
jg
xchg
les
jp
adc
cmp
xor
xchg
sti
push
imul
dec
das
dec
fwait
inc
ja
push
add
inc
mov
lods
mov
adc
cwtl
lahf
jl
insl
add
inc
and
and
cli
mov
xchg
mov
add
sahf
mov
or
das
lock
fbstp
add
imul
mov
adc
cmp
pop
aad
test
nop
test
sahf
jge
jns
ret
or
add
lods
out
mov
shl
jae
mov
pop
pop
icebp
insl
bound
int
sti
pop
push
popa
cmp
aam
fstpl
inc
jbe
pop
aaa
lahf
aaa
cld
cmp
xor
jl
aas
bound
cwtl
dec
addr16
imul
lcall
sbb
adc
das
push
mov
outsl
lahf
insl
mov
popa
add
ret
out
xor
jae
jo
out
or
add
jo
jecxz
dec
dec
fidivs
and
mov
shll
pop
adc
adc
dec
pop
mov
xchg
jne
sub
sbb
xorb
ja
mov
adc
nop
jmp
xchg
mov
les
dec
xor
inc
popa
adc
sti
mov
daa
sbb
ja
cmpsb
inc
push
push
mov
mov
idivb
cmp
mov
xchg
roll
push
fwait
or
cwtl
dec
fdiv
adc
inc
xchg
push
push
hlt
gs
pop
inc
inc
sbb
jp
push
push
sbb
adc
xchg
pop
mov
jge
and
dec
add
xor
mov
dec
int3
and
sbb
inc
sbb
pop
bound
dec
int3
cmp
les
cs
sbb
xor
xchg
adc
add
pop
cs
aad
js
fisttpl
push
mov
sbb
dec
stc
les
divl
adcl
adc
jg
push
mov
das
stos
scas
xchg
inc
in
pop
jnp
xchg
sahf
rcrb
fiadds
sub
loopne
sub
or
cmp
mov
popa
fs
into
push
mov
mov
out
es
pop
pop
imul
sub
xor
leave
dec
jl
push
adc
arpl
pushf
pop
mov
xlat
rol
and
mov
nop
jns
and
subb
or
mov
movsb
add
in
dec
jnp
xchg
fs
push
mov
inc
push
popf
add
push
mov
nop
pop
shr
test
adc
jne
xchg
xor
add
sbb
aas
iret
pop
sahf
ja
repz
loopne
bound
sbb
push
out
mov
mov
mov
cmp
pop
sub
jg
xor
pop
inc
or
mov
or
pop
ja
ss
in
pop
adc
or
jne
mov
stos
add
dec
jl
sub
sbbl
sarb
inc
adc
dec
test
push
sbb
pusha
pop
scas
fsubl
mov
or
mov
mov
out
cmc
xchg
dec
add
fnstsw
ja
icebp
aam
or
data16
cmp
sub
inc
pop
mov
lea
xchg
mov
and
cmp
pop
pop
add
int3
movsb
jno
pusha
jle
lahf
mov
nop
ret
arpl
adc
imul
or
pop
jo
pusha
orl
dec
mov
addr16
push
sarl
or
cmpsb
cli
loope
or
dec
pushl
xorl
sahf
movsb
push
adc
imul
jno
in
ja
daa
push
rcrl
jmp
mov
add
push
add
pop
pop
cltd
mov
fnstsw
mov
sub
aaa
jo
insl
negl
push
dec
inc
xor
inc
adc
lea
sbb
push
stc
dec
int3
mov
lods
adc
pop
inc
inc
loope
aam
and
and
mov
sbb
sub
xchg
in
movsb
xchg
test
sbb
jge
in
movsb
aam
mov
in
test
cmp
cmp
xchg
dec
mov
cs
into
mov
imul
and
push
push
xor
cmp
dec
and
add
pop
fildll
adc
pop
insl
mov
fsubs
push
jl
jns
aaa
add
mov
das
daa
std
in
mov
push
insb
push
sbb
mov
adc
mul
fsubrs
test
pop
xor
inc
inc
dec
fstpl
xor
add
aad
stos
adc
push
cli
sub
push
filds
cmp
inc
xchg
and
push
and
cmpsb
je
sbb
inc
mov
pop
dec
mov
repnz
cmp
push
inc
mov
aaa
cmp
popf
orb
cmp
pop
leave
test
lahf
sbb
aaa
pop
aam
push
lods
adc
jnp
xchg
xor
cmpsl
fwait
stos
stc
mov
add
cmpsb
xlat
shll
inc
mov
rcr
jg
cmp
mov
aaa
into
shlb
fnstsw
dec
cmpsl
mov
sub
mov
pop
xchg
jb
test
sub
lock
popf
repnz
add
loop
sbb
jbe
out
xchg
pop
xchg
and
int3
shll
mov
xlat
sbb
lods
insb
cld
movsb
pop
js
cmp
sub
js
or
std
lret
shll
aad
mov
mov
and
dec
std
and
cmp
imul
jne
or
pushf
adc
mov
cli
mov
out
daa
cwtl
add
xchg
cld
mov
adc
or
sub
pop
mov
mov
scas
push
fisubrs
test
jns
nop
dec
jg
sub
in
out
in
shr
lods
sub
nop
inc
mov
or
add
xor
in
inc
adc
addb
subl
imul
cmp
lcall
mov
repz
lds
sub
ret
shll
inc
test
pop
jb
ret
lea
rolb
jne
cwtl
rcll
inc
ja
xchg
mov
enter
sub
add
aam
cmp
sub
loop
add
inc
lods
fwait
xchg
mov
pop
pop
fdivr
pop
pop
dec
mov
data16
xlat
mov
adc
xor
das
out
xlat
mov
ficomps
cwtl
mov
xlat
inc
xor
jmp
sub
sub
dec
mov
subb
fisttps
popa
sub
outsb
push
faddp
jmp
add
ret
xchg
xorb
pop
pop
ljmp
xor
or
pusha
push
mov
popf
hlt
mov
xor
or
xor
fcomps
dec
jo
rcl
push
push
push
or
adc
mov
xchg
jo
sbb
std
aam
incb
cltd
mov
mov
inc
test
mov
push
inc
stos
popa
sahf
outsb
in
lcall
xor
xor
andb
sti
sahf
popf
ss
outsb
push
inc
inc
jns
jmp
mov
int
sbb
les
xchg
jmp
mov
cmpb
xor
xor
xchg
addr16
or
xchg
cmc
lret
lds
pop
idivb
add
push
fadds
add
ja
mov
lahf
or
sbb
enter
adc
xchg
push
cld
bswap
xchg
cmpsb
mulb
push
insb
inc
push
mov
xchg
mov
sbb
adc
push
jnp
into
je,pt
and
pop
xchg
imul
les
in
add
pop
in
in
xor
push
mov
sbb
pop
aam
pop
lret
mov
adc
sub
mov
mov
in
sub
aas
sbb
sbb
cmp
stos
mov
xchg
jge
stos
push
adc
dec
add
and
or
xor
or
and
rclb
lret
mov
lock
xchg
ret
inc
mov
sbb
fwait
les
lds
xchg
pop
mov
xor
jo
mov
addb
pushf
divb
bound
add
cmp
enter
mov
dec
push
mov
sub
int3
inc
pop
lea
out
loopne
sbb
fcoml
mov
dec
icebp
ja
test
dec
sbb
loop
pop
cmp
aad
fidivrl
loopne
push
sbb
mov
arpl
mov
push
cmpsb
scas
or
lods
gs
mov
push
or
in
mov
and
mov
or
frstor
sbb
xor
lds
jl
clc
mov
sub
flds
push
add
mov
lds
jecxz
fnstsw
jle
rorl
xchg
leave
int
and
mov
sub
dec
inc
add
sbb
adc
sti
pop
pop
xchg
shlb
fldcw
jmp
arpl
push
jo
sbb
mov
mov
and
mov
lods
sub
xor
or
dec
rcrl
repnz
nop
sbb
cltd
lret
adc
adc
sbb
movsb
xor
test
cld
xchg
mov
adc
cs
inc
adc
mov
jb
xchg
movsl
mov
xlat
ds
divl
cmp
jo
xor
xchg
enter
push
or
fiaddl
and
cmp
mov
inc
mov
and
adc
ss
aaa
jl
sub
adc
adc
ss
inc
jbe
xor
cs
jns
jb
add
sbb
mov
dec
rcrb
adc
push
push
push
daa
lahf
mov
adc
xchg
push
loop
push
push
cwtl
add
xor
dec
add
fdivrl
adc
andb
aam
cmp
pop
popf
xchg
or
xchg
sahf
sbb
jmp
mov
xchg
lods
lcall
or
sub
mov
xchg
inc
pop
push
mov
fmuls
jmp
popf
push
jo
xor
cwtl
in
jl
sbb
repnz
sbb
outsl
xor
inc
mov
je
mov
push
in
loop
add
mov
pop
add
in
stos
xor
inc
in
in
push
cmp
push
lods
cwtl
inc
in
push
pop
loopne
add
std
sbb
stos
shlb
jno
push
adcb
push
adc
repz
jmp
sbb
push
mov
mov
fs
sahf
or
in
es
mov
mov
mov
mov
cmp
fsub
pop
lods
sahf
mov
sub
fildl
insb
push
push
sbb
sahf
not
test
adc
jae
jno
xchg
aad
sti
stos
xor
stc
in
shrb
push
cmp
lods
add
rclb
loop
iret
enter
jbe
push
rorl
push
mov
xor
push
aad
das
add
lret
and
mov
pop
xor
xchg
sbb
jecxz
and
push
jl
dec
jae
mov
push
and
shl
aaa
into
add
jae
les
fildl
rcl
dec
sub
sti
pop
aad
inc
cmp
xchg
and
dec
cs
xor
maxps
pop
sti
pop
jno
xchg
xor
pop
andl
xor
push
sub
out
fcoms
mov
daa
pop
mov
sbb
xor
sahf
out
adc
rcll
sbb
test
mov
pop
mov
or
mov
xor
sbb
subb
xchg
xor
dec
jg
add
scas
insl
jbe
adc
pushf
shlb
jo
xchg
fnstsw
out
in
mov
mov
out
pushl
in
cmc
xor
xlat
inc
xchg
lret
xchg
arpl
mov
movsb
pop
push
aam
push
pop
out
orl
sarl
mov
push
js
xor
xor
cmp
aad
push
push
pop
stos
jns
push
add
cmp
pop
adc
test
jmp
lret
cltd
aas
mov
shlb
xor
jb
add
in
fwait
loopne
jb
or
lea
sbb
lret
pushf
push
mov
cmp
pop
mov
xor
nop
pop
xor
mov
mov
cmpsb
sbb
dec
push
cwtl
mov
sbb
push
mov
rolb
jl
adc
or
push
dec
jo
mov
rcll
or
pusha
push
and
inc
cmp
lds
nop
mov
sti
cmp
sahf
popfw
xor
insl
xchg
xlat
les
add
xchg
xor
add
sbb
push
push
push
ss
adc
lahf
mov
jge
adc
or
popf
aaa
sub
push
ss
xor
xor
js
vmread
inc
dec
push
pop
sbb
mov
ss
xor
cmp
mov
test
adcb
vxorps
negl
cwtl
int3
inc
mov
aam
push
int3
or
push
popf
xacquire
xchg
gs
fimull
adc
push
fiaddl
fisttps
inc
pop
and
movsl
add
rolb
mov
dec
das
xor
mov
xor
mov
dec
cmp
mov
loopne
push
add
xchg
jg
xchg
les
lea
sar
adc
out
push
out
adc
fisubl
mov
in
ret
test
mov
dec
adcl
pop
xchg
sbb
dec
mov
adc
fdiv
cli
rclb
sbb
jbe
cmp
fucom
lods
push
mov
push
xor
xchg
xor
adc
rcr
add
bound
cmc
xchg
dec
movsl
sub
stos
sub
mov
xchg
and
mov
mov
cmc
and
mov
mov
aad
pop
jg
dec
mov
push
pusha
add
sub
pop
ret
mov
aaa
dec
pushf
and
insb
pop
sbb
xchg
dec
xchg
lock
push
fbstp
xor
mov
cld
ficoms
inc
inc
cmc
lods
in
and
push
push
and
or
pop
notb
cld
pop
pop
mov
stos
pop
das
fistps
cld
lods
sub
add
cld
xchg
dec
mov
jle
pushf
xchg
push
test
setne
aam
adcl
scas
pop
or
push
sub
and
sahf
aam
add
pop
add
sbb
cli
in
lcall
mov
lcall
cli
pop
inc
in
mov
test
lods
and
popa
jns
mov
xor
and
imul
cmp
xchg
mov
cmc
fdivr
rcrb
fsub
negb
test
pushf
movsb
sbb
call
fmulp
mov
je
inc
dec
xchg
fs
push
or
arpl
jno
push
movsb
loopne
std
push
xor
cmpsl
nop
sbb
xchg
out
mov
inc
sbbl
push
push
dec
cmpsb
mov
or
pop
inc
into
movsb
pop
faddl
add
cs
in
dec
or
fistpl
and
es
dec
adc
jp
sbb
push
mov
mov
or
sbb
sub
enter
jne
mov
mov
jg
aad
adc
or
addl
aaa
adc
inc
inc
cltd
aad
sub
inc
sbb
cli
call
jg
cmp
adc
repnz
or
cmpb
in
aam
adc
loop
add
mov
cmp
push
push
sbb
pop
dec
xchg
dec
adc
into
xchg
stc
add
sub
xchg
mov
jp
sub
push
cmpsb
jnp
push
or
test
pop
inc
pop
mov
das
mov
mov
sbbb
pushf
mov
adc
xor
ss
mov
or
adc
cmpsb
mov
loopne
test
or
fbstp
std
push
lock
xchg
insl
cmc
push
arpl
xor
je
cmp
or
popa
rorl
aaa
sub
hlt
add
xor
inc
in
rcrb
imul
xor
data16
je
mov
push
push
inc
shrl
sbb
lds
hlt
mov
lods
outsl
xchg
fdivl
push
or
lock
adc
cli
je
cmp
jbe
adc
in
test
and
loope
ss
push
lahf
inc
popa
push
push
fstpt
adc
adc
dec
js
mov
pop
sbb
or
fcompl
add
cltd
lds
divl
cmp
cmpsl
sbb
jl
push
sub
repz
fnsave
xchg
ret
cmp
push
push
dec
insl
push
push
rcll
sub
add
lret
and
inc
and
aam
jl
pop
mov
or
cmp
lret
sbb
xchg
insl
xlat
mov
out
pop
xchg
stos
aam
loopne
fstpt
xor
into
sbb
aaa
pop
sub
loope
pop
leave
pop
cmp
or
xrstors
and
shl
lahf
popf
call
pop
dec
mov
inc
mov
sbb
mov
mov
lods
sbb
movl
mov
or
mov
add
test
xor
sahf
jg
je
pop
xchg
jb
inc
mov
loopne
adc
or
mov
xor
pop
lcall
mov
pop
pop
scas
aad
cltd
jb
inc
outsb
xor
aad
pmaddubsw
cmp
fwait
jno
out
jbe
adc
mov
pop
je
out
aaa
dec
jns
adc
jb
xchg
sbb
xor
sbb
mov
ret
cmp
cmp
xor
insl
test
imulb
add
sbb
jp
pop
cwtl
add
or
ret
int3
cmp
mov
sbb
inc
sub
daa
iret
mov
xor
cmp
pop
push
int3
inc
mov
pop
cli
mov
mov
fisubl
inc
or
jecxz
or
xchg
jns
or
dec
mov
xchg
dec
mov
dec
enter
fsubp
aas
shlb
sub
leave
out
aad
xchg
out
fnstcw
sub
pop
push
stc
jnp
adc
hlt
and
adc
in
xchg
xlat
and
mov
loope
dec
test
sub
fs
push
sbb
push
adc
scas
frstor
lods
dec
sub
xor
jl
cmp
or
and
sub
mov
pop
sbb
aam
inc
xor
rclb
xchg
jnp
mov
dec
jae
adc
lcall
cmp
or
inc
aad
in
jecxz
movsb
negb
loope
outsl
iret
mov
imulb
repnz
scas
xchg
push
test
xor
xorl
adc
fs
insb
mov
adc
xchg
std
aam
pop
jne
lcall
ja
ljmp
lds
dec
push
in
or
rcr
or
cmc
call
sbb
adc
sbb
xor
aam
xchg
mov
fists
test
orb
and
ds
test
out
xchg
fwait
test
push
imul
push
sbb
cmp
dec
in
scas
dec
ficomps
incl
sbb
pop
mov
addr16
adc
insb
adcb
outsb
lock
mov
and
aas
in
xchg
loopne
push
into
sarl
jbe
mov
xchg
lea
lods
sbb
shll
int
mov
add
xor
popf
xchg
je
lock
adc
les
adc
ss
push
sbb
nop
into
pop
stc
sub
popf
xchg
xchg
mov
push
test
outsl
hlt
push
popa
mov
mov
daa
sbb
ret
xchg
inc
xchg
mov
jg
fnstsw
addl
test
pop
xchg
add
test
es
dec
xchg
inc
dec
popf
out
mov
xchg
jbe
push
mov
mov
fmul
and
mov
cmpsb
shrb
push
or
jbe
test
lds
fs
fdivrl
lods
sub
adc
icebp
adc
sbb
adc
movsl
daa
fwait
aas
add
es
cmp
aad
jno
xchg
lds
mov
shlb
add
lcall
sbb
push
hlt
jno
gs
in
fwait
clc
bound
in
push
or
pop
adc
xchg
xor
ret
adc
roll
adc
mov
sub
dec
in
cmp
dec
adc
dec
mov
bound
and
iret
push
cld
xor
cmp
dec
xchg
in
add
cmpsl
adc
inc
addr16
add
popf
jp
mov
xchg
add
xor
cmc
sub
mov
xchg
cld
push
or
out
sub
ret
popa
test
ja
loop
sub
icebp
nop
imul
dec
loopne
jmp
aaa
scas
aad
fsubrl
cli
movsb
enter
sbb
add
jno
loope
adc
cld
pushf
repnz
dec
mov
ja
adc
mov
xchg
lcall
mov
test
lods
push
xor
add
pop
and
jecxz
psubq
je
repz
bound
push
mov
jbe
jp
xor
fwait
sbb
push
push
push
loop
pop
out
add
cmpsb
push
fists
or
push
in
cmp
movsb
call
xchg
cld
mov
or
xchg
sbb
mov
jle
sbbb
or
mov
in
leave
xchg
cld
and
cmp
add
dec
stos
or
push
adc
mov
outsb
xor
sbb
mov
inc
daa
or
clc
test
lea
popf
sub
out
xor
sub
and
nop
rolb
push
pusha
outsl
hlt
sbb
ficoml
jne
outsb
push
lock
or
imul
xlat
int
repnz
test
xchg
mov
dec
mov
sti
sarl
sbb
and
leave
lds
inc
cmp
fs
cwtl
fdiv
mov
sbb
jae
mov
loopne
or
loope
scas
popf
and
adc
push
sub
popa
pop
pop
inc
inc
idivl
xchg
dec
pop
jl
lea
movsl
sub
push
mov
push
mov
pop
add
mov
sbb
mov
adc
or
sarb
rcll
aad
lcall
out
push
push
cltd
mov
je
xchg
cmpsl
mov
sbb
popf
cmpsl
idivb
lahf
pop
pop
loop
sub
xchg
pushf
mov
or
bound
xor
in
rcr
leave
addr16
divb
xchg
mov
push
add
outsl
fcom
les
xchg
cmp
mov
mov
out
or
cmpsb
in
mov
cmpsl
inc
add
and
mov
push
testl
xchg
mov
rcrl
scas
lcall
sbb
pop
sbb
xchg
and
cmp
jns
stc
add
pop
shr
cmp
or
xchg
repz
or
stc
leave
insb
jmp
inc
lahf
fs
push
lcall
stos
inc
dec
cli
stc
mov
xor
dec
xor
daa
xor
cmp
ret
add
mov
aam
mov
call
sub
hlt
test
bound
scas
cmp
or
pusha
pop
scas
dec
lahf
andl
sub
addr16
fwait
popw
pushf
dec
or
xor
in
loopne
jbe
inc
mov
sahf
daa
jo
or
pop
hlt
lods
add
mov
insl
pop
and
pop
sahf
aam
xchg
je
repnz
and
ret
mov
fildl
jl
xor
jbe
mov
out
adc
arpl
lcall
xor
xchg
adc
test
lods
ss
scas
mov
cmpsl
push
push
pop
lods
mov
push
insb
pushf
sub
fists
nop
inc
adc
dec
lret
test
sbb
das
daa
add
gs
nop
jnp
add
inc
test
mov
movsl
cli
js
test
iret
mov
les
push
shll
xchg
lods
push
pop
sbb
jbe
mov
je
inc
jnp
cmpsl
add
push
lds
into
mov
add
fnstcw
clc
jp
jae
mov
lcall
sub
fiadds
hlt
push
add
jns
scas
mov
mov
jbe
and
aam
mov
lods
popa
fnstenv
or
aas
cmp
mov
shrb
jnp
push
out
cli
cmc
fcmovnbe
xchg
add
je
push
mov
dec
sbb
loopne
fidivs
xchg
push
inc
jg
or
cs
orb
cltd
inc
push
jg
pop
loopne
xor
fdiv
adc
jle,pt
arpl
adc
mov
nop
hlt
add
cltd
addr16
or
push
mov
test
add
sub
adc
or
and
dec
test
push
icebp
inc
aam
and
into
icebp
arpl
test
mov
int
ret
sbb
fcoml
cld
sbb
mov
add
pop
lret
movsl
lahf
xchg
fisttpll
inc
jge
and
mov
cmpsl
jnp
pop
adc
movb
out
addr16
sbb
xor
mov
je
aam
int
mov
addl
jl
int
push
or
xchg
xor
jg
xorl
test
popf
sub
adc
adc
sbb
pop
push
loopne
adc
sbb
lea
fistpl
rcl
jp
add
fmull
xchg
push
and
dec
and
cmp
sbb
sbb
xor
xchg
mov
push
test
sbb
movsl
js
xchg
popa
xor
out
fs
pop
imul
jne
sbb
or
and
js
dec
notb
data16
jge
cld
push
enter
clc
or
test
jne
jecxz
pushf
cmp
insl
or
outsb
cs
sbb
mov
rcrb
inc
jecxz
pop
test
push
xchg
adc
ss
ret
hlt
or
hlt
inc
adc
adc
lcall
pop
mov
jl
push
or
xor
ficoml
dec
pop
iret
dec
cmpxchg
lcall
out
and
mov
and
add
sub
es
divb
inc
xor
iret
mov
out
push
jle
cmc
lret
xchg
das
adc
imul
or
push
or
xor
xchg
addl
cli
shlb
cmp
push
testl
add
jg
mov
outsl
mov
cld
arpl
sub
and
dec
stos
jge
xor
mov
cmp
sbb
cwtl
inc
out
pop
pop
push
xchg
xor
jecxz
mov
addr16
xor
adc
xchg
sbb
insb
or
sub
leave
cld
loope
adc
sub
xor
ja
pop
cld
rorb
stos
ss
mov
fucomi
lds
in
fstpl
fildl
inc
clc
push
push
out
mov
popf
popa
sbb
rolb
dec
mov
push
pop
mov
dec
pushf
or
mov
int
mov
mov
ss
fsubs
pushf
mov
int
sub
or
cmp
mov
ljmp
fidivl
pushf
push
and
adc
clc
inc
or
jnp
mov
mull
dec
jno
insb
jl
sbb
aam
clc
cwtl
addl
push
daa
sub
aam
push
ja
lock
pop
popf
add
mov
sub
dec
sbb
xchg
push
push
add
pop
scas
cmpsb
pushf
insl
xchg
lcall
mov
ds
cmp
mov
jnp
addr16
dec
or
cmp
push
mov
xorb
adc
mull
jae
or
inc
adc
adc
push
hlt
add
popf
mov
sarb
cmp
sbb
loop
push
adc
stos
std
rcll
sub
cmp
inc
add
cmpsl
and
int
cmc
xor
fstpt
popaw
sbb
dec
pop
adc
mov
adc
pop
pop
dec
adc
push
push
cmpsl
in
sahf
loop
insl
xor
leave
pop
std
push
adc
mov
hlt
add
stos
mov
aam
pop
lahf
ds
xchg
jl
arpl
adc
outsb
cmpsb
pop
or
test
bound
pop
add
iret
and
dec
sahf
add
and
xorl
jb
and
fldlg2
dec
gs
cmp
jnp
hlt
adc
loope
adc
push
and
sbb
add
leave
xchg
and
pop
jle
sub
outsl
adc
or
adc
aas
pop
sbb
sbb
mov
push
rcrb
sub
ficoms
push
fxch
outsb
cmpsb
insb
sbb
inc
outsl
je
insb
sbb
xor
pop
pop
inc
xchg
dec
mov
sbb
and
rcrb
and
stos
mov
or
mov
test
cmpsb
cmp
pop
sbb
jae
inc
xor
cmpl
xchg
pop
pop
adc
ret
mov
testb
mov
lods
xchg
sub
mov
arpl
popa
inc
mov
inc
mov
sub
mov
or
xor
push
mov
insb
js
gs
loopne
pop
sbb
inc
xchg
push
aas
rcrl
ss
adc
iret
adc
mov
imul
fwait
xor
fs
xor
negb
jg
movsb
adc
xor
gs
jmp
xchg
push
andb
cwtl
loopne
sub
shlb
mov
mov
repnz
mov
sub
aam
popa
sub
push
loop
ds
and
jae
lret
pop
xor
sbb
aas
fstpl
es
stos
mul
push
mov
sti
call
pop
sbb
pop
rorb
ja
mov
mov
inc
arpl
outsl
cld
sahf
leave
xchg
clc
add
lcall
leave
fidivrs
aam
addb
jne
dec
iret
pop
lahf
mov
adc
and
aas
lods
sbb
or
fldcw
test
std
fdivrs
pop
cmc
or
xchg
inc
jbe
sbb
xchg
addr16
adc
cmp
rcrl
inc
inc
jne
dec
cmpsl
addr16
push
xchg
and
and
jb
push
cmp
rclb
cltd
xchg
or
lahf
sbb
cmc
push
dec
add
imul
rcrl
jle
out
xchg
ret
push
loop
xor
movsb
imul
xchg
sub
or
mov
add
adc
cmc
push
mov
prefetchnta
dec
xchg
arpl
stc
loop
adc
sbb
rcrb
movsl
push
mov
cmp
fdiv
xchg
cltd
mov
jne
mov
inc
mov
pop
ret
sub
pop
add
or
xchg
leave
sahf
shrl
push
hlt
add
loope
cmpsb
push
testb
jge
into
lods
loopw
xchg
add
in
imul
mov
cmp
mov
insl
or
xchg
clc
movsb
push
sub
and
test
fidivrs
and
ret
aas
adc
cli
cmp
fisubs
out
outsb
insl
inc
sub
fdivs
test
aad
movsl
shrb
sub
aam
sahf
nop
jne
sbbl
bound
mov
lock
out
push
push
mov
aam
jg
and
lods
orb
push
mov
test
push
ret
sub
or
mov
sub
mov
stos
std
loop
arpl
add
loope
xchg
test
sub
imul
imul
test
mov
std
sahf
in
mov
addr16
mov
fcoml
pop
add
iret
add
lds
inc
mov
mov
or
test
les
cmc
cmp
add
mov
sbb
mov
mov
mov
push
add
mov
pop
ss
sahf
xor
sbb
cmp
in
jb
cmp
imull
hlt
sub
fcmovbe
push
mov
movsl
sub
pop
sbb
mov
add
adc
in
bound
hlt
std
loopne
stos
xor
fadds
adc
pushf
test
push
sub
lds
cwtl
push
xor
dec
daa
das
lret
les
jmp
adc
icebp
push
aam
sbb
gs
jns
xchg
lahf
push
push
adc
aam
cld
jnp
sub
xchg
push
cld
movsl
or
mov
cmp
or
hlt
jo
adc
or
addb
popw
insb
fs
add
adc
xchg
xchg
ret
ss
leave
test
xor
or
data16
bound
test
add
cli
xchg
pop
imul
js
sub
push
mov
out
das
shrb
push
mov
sarb
mov
int
cmp
aaa
push
data16
or
mov
mov
dec
jp
stc
fs
mov
repnz
and
daa
sbb
sub
jb
leave
subl
movsl
cmc
aaa
mov
push
push
ja
adc
cmp
arpl
xchg
sub
loopne
pushf
lds
js
mov
jle
into
xchg
int
je
negl
scas
cmp
int3
ja
rcrl
leave
loope
in
jecxz
insl
jecxz
dec
adc
mov
jne
sbb
jns
push
rol
ljmp
stc
ljmp
nop
adc
mov
or
inc
mov
insb
sbb
jmp
notb
divb
push
rcrb
cmpsb
fsub
popf
inc
shrb
lods
or
loopne
out
js
xchg
xchg
cmp
dec
hlt
jl
xor
xor
push
push
xchg
xlat
jle
jne
lds
add
fsubp
mov
dec
mov
or
mov
and
addb
mov
mov
imul
mov
cmp
dec
ret
js
fs
data16
sti
or
dec
dec
or
xor
mov
ret
cmpsl
and
pop
xor
fistl
pop
mov
lahf
cmp
push
dec
inc
add
ror
mov
push
cltd
add
xchg
xchg
cmp
mov
rorb
jecxz
cmp
int3
enter
jno
gs
mov
mov
dec
pusha
pop
fdivr
add
in
mov
sub
imul
lcall
add
shll
add
sub
enter
xbegin
sbb
sub
aaa
mov
fstpt
insb
push
loopne
adc
sbb
mov
or
sub
push
pop
mov
xchg
dec
mov
sbb
push
ret
mov
adc
sub
pop
xor
jge
mov
adc
pop
mov
pop
movsl
add
xchg
faddp
shr
les
jmp
jo
ret
bound
jne
cltd
push
pop
xor
jns
push
sub
xchg
out
mov
jl
pushf
and
int3
push
gs
inc
wbinvd
js
xchg
jns
mov
mov
push
outsb
pop
ljmp
xchg
das
cmp
sbb
adc
lods
and
xor
sub
cwtl
fildll
cmpsl
cmp
pop
and
mov
adcb
jl
cmpsb
xchg
pop
fsts
mov
sub
and
mov
clc
xchg
xor
roll
dec
aaa
mov
in
xor
inc
scas
and
adcl
add
hlt
push
xor
inc
and
rclb
inc
cmp
fxch
xor
rorb
lea
insl
dec
jae
push
mov
dec
lods
xor
pusha
add
pushf
mov
repz
cwtl
xlat
mov
sub
popl
insl
inc
andb
jns
dec
xor
sbb
inc
xchg
ds
das
and
repz
andl
dec
icebp
sub
xchg
cmc
rorl
xor
or
lret
adc
popf
xchg
popf
dec
sbb
push
mov
out
xor
mov
adc
addb
shlb
test
lcall
xor
popf
jnp
add
push
xor
dec
add
add
in
andl
jb
xor
in
add
addb
cwtl
fsincos
lods
nop
xor
xor
gs
sar
clc
adc
adc
add
lods
jbe
lret
xor
ljmp
loop
mov
in
xor
icebp
add
mov
hlt
nop
sbb
adc
dec
sub
nop
adc
es
lahf
je
sbb
sbb
adc
jl
sbb
sub
cmpsl
xchg
cwtl
bswap
test
mov
cli
mov
cld
repnz
pop
ret
scas
hlt
pushf
xchg
inc
testl
imul
sbb
mov
jl
ss
jmp
mov
loope
imul
sub
mov
push
hlt
aad
jae
push
mov
cmpb
xchg
sub
mov
sub
test
and
scas
add
sahf
mov
xchg
lret
popf
das
loop
cmp
insb
scas
xchg
fdiv
popf
dec
jmp
push
pop
cs
repnz
cmpl
sub
cli
cmp
mov
xchg
dec
int
sbb
cltd
dec
in
dec
cmp
movq
dec
imulb
mov
jbe
lahf
enter
rcr
dec
jl
jae
add
sbb
in
jle
gs
test
sarb
int
mov
bound
ds
fmull
or
sahf
test
out
cwtl
push
mov
mov
movsb
inc
nop
test
and
inc
dec
lods
clc
out
cmp
mov
push
mov
leave
inc
mov
add
mov
cmp
sbb
pop
data16
das
in
cmp
out
sbb
xor
inc
std
jl
push
hlt
inc
add
xor
mov
je
and
aaa
inc
or
jg
mov
std
sbb
outsb
and
ja
push
xchg
into
daa
scas
mov
daa
insl
mov
and
aad
mov
pop
stos
dec
lods
jae
cmpsb
outsl
push
jle
lea
pop
divl
lret
in
cmp
bound
xchg
lods
and
jno
and
mov
xor
clc
divb
mov
cmc
mov
push
push
xchg
ret
rclb
pop
lret
sbb
cmp
cs
xor
push
inc
pop
and
cwtl
repz
xchg
int
dec
ret
xchg
sbb
add
push
push
mov
out
cmp
mov
popf
mov
mov
pop
sub
bswap
mov
mov
sbb
popf
scas
dec
mov
je
cmp
insb
aam
sbb
mov
pop
out
mov
fbstp
mov
dec
pushf
sbb
pop
xlat
add
mov
sbb
dec
add
shll
jbe
or
movsl
loop
and
mov
pop
icebp
jno
mov
cmpsl
adcb
xor
shll
push
loop
or
jo
jae
push
jmp
adc
add
xor
mov
rolb
xchg
adc
lods
jg
lock
and
movb
adc
xor
xchg
xor
test
mov
push
psllq
std
test
jl
and
cld
jbe
ret
jae
repz
cmp
sbb
jns
test
jge
jle
lea
out
jl
adc
xchg
je
testl
sbb
out
mov
lret
loope
sbb
fisttpl
fsubp
xlat
lahf
mov
and
pop
js
jle
jb
or
and
std
xor
push
testb
xchg
sub
je
sbb
adc
mov
out
decl
mov
popf
push
movsl
ret
adc
cmp
mov
stc
xorb
adc
inc
test
pushf
sub
aaa
inc
je
jbe
scas
mov
inc
imul
push
pop
imul
fwait
jge
xchg
fimuls
pop
mov
lds
mov
xor
test
nop
adc
jnp
insb
cmp
xor
mov
or
sub
ficomps
adc
and
aad
stos
fs
sti
dec
call
repnz
pusha
or
scas
mov
fisubrl
and
jge
push
pop
out
sbb
hlt
testb
pop
js
pop
mov
add
out
cmpsb
testl
into
lods
inc
push
in
mov
xchg
pop
sbb
xchg
das
pop
mov
movb
test
pop
and
adc
lcall
repnz
pop
sub
notl
lret
and
fnstenv
sarb
bnd
aad
lock
dec
xor
dec
xchg
xor
xchg
jno
cmp
inc
cmp
mov
cwtl
dec
lret
add
push
inc
fistl
pop
cmp
es
xchg
push
xchg
sbb
int3
mov
dec
pop
xor
ret
jb
mov
push
mov
xor
push
lcall
aaa
jno
mov
dec
xor
mov
mov
inc
daa
sbb
xchg
lea
stos
or
xchg
or
jecxz
xchg
es
in
inc
mov
ds
xchg
into
cmp
fs
adc
xchg
xchg
imul
dec
fsubs
push
cltd
in
into
push
pop
push
hlt
pop
push
das
ljmp
rcrl
mov
sbb
or
lret
int
or
jg
xchg
inc
mov
and
push
js
pusha
cwtl
mov
hlt
loope
mov
aam
rclb
xchg
sti
aaa
sahf
mov
or
jns
std
push
dec
outsb
mov
lods
pop
testb
push
out
dec
mov
arpl
into
ja
out
sbb
and
pop
lret
hlt
popf
mov
sbb
inc
ljmp
je
push
outsl
lods
and
stc
fnstenv
out
js
cmc
pop
je
enter
mov
mov
and
xchg
rcr
pop
or
sbb
add
int3
mov
sbb
pop
mov
push
idivl
shlb
cs
mov
mov
mov
mov
aaa
ret
xor
cld
sahf
push
sbb
dec
pop
xor
xchg
mov
push
test
sub
or
fisttpll
and
mov
add
insl
cmpsl
cmp
int3
test
jae
dec
jo
fimuls
mov
inc
or
push
sbbb
cmp
mov
data16
nop
pop
adc
clc
adc
xchg
loopne
pop
popf
dec
pop
mov
sub
lds
mov
lret
push
sbb
sbb
lret
jae
test
std
mov
stc
lcall
adc
sahf
jg
cmp
push
mov
ljmp
test
sub
xor
xchg
ret
xor
xchg
lds
std
sub
push
dec
adc
xor
xchg
xor
push
adc
mov
xchg
push
mov
ret
jl
hlt
push
ja
movsl
mov
push
and
xor
jecxz
adc
sbb
and
ja
adc
pop
imul
sub
mov
push
mov
jns
xchg
push
pop
add
add
sarb
sbb
pop
sti
push
inc
repz
add
mov
pop
mov
push
loope
pop
rcl
repz
sarl
xchg
mov
aad
xor
movsb
fnsave
ficompl
pop
hlt
jl
jo
enter
sbb
push
and
test
mov
aam
mov
sbb
ljmp
inc
xor
or
push
mov
mov
xchg
cltd
inc
push
jne
mov
cmp
push
or
mov
xchg
cltd
xor
test
addr16
out
pushf
sbb
loope
out
fsubrp
std
mull
push
jg
pop
aam
sbb
cmp
dec
hlt
lea
ljmp
xchg
mov
notl
sub
or
sub
js
or
mov
lcall
aas
cmp
insb
call
lcall
jns
rcr
and
xor
sbb
dec
pusha
push
push
in
sbb
clc
xchg
cmp
adc
and
icebp
arpl
loop
sbb
cs
ret
fidivl
sub
adc
inc
lret
lahf
push
icebp
jbe
or
shl
push
mov
push
iret
mov
dec
add
inc
add
bound
xlat
jmp
or
hlt
pop
in
add
sarl
mov
xor
insl
adc
and
push
insb
adc
add
ss
dec
xchg
in
inc
lea
imul
aad
je
lret
inc
fbld
cmp
gs
lds
push
add
pop
add
dec
in
xchg
mov
dec
add
out
mov
jecxz
adc
les
test
pop
jne
sti
bound
push
sub
mov
jg
or
add
imul
nop
mov
and
pop
and
fbld
dec
rorl
inc
fcoms
xchg
jecxz
and
lea
inc
push
mov
push
dec
pop
jne
or
adc
mov
cmpsl
and
push
enter
adc
mov
jno
jmp
xor
cmp
scas
cmpsb
and
subl
shrl
pop
cmp
lret
fs
shll
repnz
loopne
xor
addb
xor
pop
shlb
push
mov
pop
in
and
jp
call
lcall
pop
ror
add
nop
popf
ja
and
movsl
push
xor
push
jle
test
les
pop
and
mov
pop
mov
cmp
int3
or
adc
ja
push
fbld
xchg
xor
sub
jmp
mov
adc
cli
out
inc
sbb
lret
int
or
xchg
hlt
pop
add
je
adc
dec
cmp
in
test
sub
iret
ja
push
sbb
ja
mov
stos
lret
sub
push
mov
jo
mov
int
sahf
push
cs
pop
sti
and
mov
mov
xor
sub
mull
pop
mov
popf
and
ss
push
cvtps2pd
push
pop
xor
out
mov
mov
data16
call
clc
loop
and
lret
setb
inc
cmpsb
loope
ret
inc
adc
subb
insl
sti
fdivl
sbb
sar
xchg
rcll
pop
or
push
mov
lahf
mov
scas
xor
lret
pop
or
inc
sub
popl
xor
lods
jmp
mov
and
or
push
adc
fucomi
xchg
jmp
aaa
mov
pop
pop
fistps
fwait
scas
mov
sbbb
lock
mov
movsl
or
add
adc
mov
fdivl
and
mov
das
push
pop
inc
scas
xor
mov
sub
into
es
jae
aaa
mov
add
mov
push
and
mov
xorl
pusha
aam
xor
inc
xor
je
and
inc
in
jp,pn
xlat
push
sub
mov
xlat
lock
xchg
xor
icebp
xchg
mov
jo
cmp
rcr
mov
lahf
pop
pop
movsl
jo
mov
push
cli
test
jmp
and
shlb
std
out
cmpsb
test
sbb
stos
je
dec
subb
cmpsb
pop
sbb
push
mov
jnp
pushf
aas
cmp
pop
mov
mov
aas
sti
test
test
mov
stc
daa
gs
xlat
mov
sub
loop
adc
mov
shr
or
pop
sbb
jmp
pop
sub
add
adc
movsl
cmp
stc
push
js
pop
loopne
aaa
pop
jle
mov
or
movsb
fs
mov
mov
jecxz
mov
cwtl
mov
xchg
xor
mov
jne
dec
popa
mov
je
das
fldcw
jmp
push
push
addr16
test
inc
cmp
mov
push
mov
sub
insb
xchg
inc
call
addr16
sbb
xor
std
xchg
inc
push
sub
sahf
lcall
cs
ds
push
mov
dec
daa
add
sub
leave
test
aas
aad
xchg
cmpsb
cmp
outsl
fsub
test
push
bound
and
dec
rcrl
jns
xor
mov
cltd
das
shll
lret
and
nop
js
test
xchg
loopne
sub
je
icebp
jo
pop
push
mov
test
clc
sub
fistpl
pop
aam
or
fst
jp
inc
mov
adc
push
add
dec
inc
sbb
push
movsb
pop
pop
pop
jno
inc
cmp
push
orb
push
out
xor
addr16
pop
inc
out
add
push
pop
xchg
xchg
push
add
scas
xor
and
push
mov
insb
int
mov
or
cltd
and
icebp
sahf
movsl
xchg
xor
repnz
dec
xchg
xchg
inc
rcll
fcmovnbe
xor
in
pop
ror
or
repz
cld
sub
cmp
daa
adc
mov
ja
mov
clc
pop
mov
sub
add
push
mov
pop
outsb
jg
mov
jg
xorl
pop
sbbb
cld
loopne
es
mov
addl
lods
mov
psadbw
xchg
dec
enter
sbb
lods
fs
outsl
adc
sub
adc
fiaddl
in
aaa
popa
sbb
mov
jmp
and
jl
pusha
sbb
adc
cmp
xor
shl
aas
les
popf
rcll
pop
outsb
push
mov
cmp
out
mov
iret
add
aam
pop
xor
imul
pop
inc
mov
scas
push
xorps
fcompl
sbb
inc
pop
xlat
testl
push
cmpsb
jg
lcall
fmull
push
xchg
jns
dec
movsl
or
sub
mov
loopne
jno
loop
push
or
mov
std
in
enter
nop
ljmp
mov
xchg
adc
inc
pop
leave
jno
adcb
andb
and
sbb
pop
sub
lea
scas
ret
dec
fisubs
and
sub
adc
sub
les
cmp
xchg
inc
jb
pushf
or
into
and
cmp
push
pop
mov
lock
adc
push
daa
pusha
or
add
pop
xchg
int3
xchg
pop
fs
sbb
jno
stc
fcoml
leave
push
ds
add
addb
aaa
cmp
dec
push
add
sub
adc
movsb
mov
cmp
lahf
sti
xor
mov
mov
mov
ss
cltd
mov
insb
adc
rclb
inc
cmpl
or
adc
xor
sti
fmulp
mov
jno
lret
adc
scas
fdivs
add
or
jl
mov
and
push
sti
and
push
xor
jp
push
stos
shrb
cmp
mov
add
adcb
imul
insl
rorl
std
nop
add
ret
lock
mov
popa
cmp
adc
test
dec
std
add
push
push
xchg
scas
int
mov
ss
jp
les
cmp
pop
mov
mov
pop
pusha
xor
ss
pop
lahf
xor
mov
popa
jmp
insb
fs
push
call
nop
mov
xchg
sub
push
pop
inc
xor
nop
push
add
xchg
loop
pop
jmp
cmp
cmp
ljmp
jp
imul
pop
ds
xlat
cmp
aam
orl
notb
lret
lds
addr16
std
add
mov
test
test
mov
fldenv
sbb
frstor
jp
cli
mov
cmp
mov
xchg
inc
das
jbe
add
mov
and
test
in
or
mov
cmc
in
sbb
push
sub
mov
pop
sub
sbb
and
mov
cld
xor
loope
push
mov
jo
add
adc
push
mov
jne
cwtl
loopne
inc
sbb
lret
stos
shrl
pop
jecxz
test
outsl
add
push
cmp
and
xlat
xchg
xor
pop
jno
pop
pop
shll
inc
cltd
mov
pop
xor
adc
fcomp
out
fstl
js
mov
add
add
push
cmp
fnstenv
movsl
push
div
add
pop
push
adc
xchg
and
out
roll
ja
jmp
dec
loope
enter
cmp
shll
jne
movsb
xor
push
aad
mov
repnz
repz
jb
push
or
add
leave
shlb
sbb
pop
cs
mul
ficomps
mov
jle
pop
pop
insb
fstpt
push
stos
add
cmp
shll
push
jmp
es
dec
sbb
test
xchg
mov
in
lods
inc
bound
sets
lcall
add
push
pop
or
inc
mov
aaa
shrb
mov
xchg
sub
pushf
mov
pop
adc
shlb
inc
and
movsb
mov
sarb
sbb
pop
in
shr
sbb
adc
sbb
sarb
pop
xor
push
add
push
add
mov
push
leave
into
cmp
xchg
lods
cwtl
or
sbb
adc
or
call
dec
test
xor
ret
mov
inc
xchg
or
mov
adc
adc
and
and
xchg
in
fidivrs
nop
iret
xor
cltd
push
fists
jmp
ret
push
inc
xor
cltd
or
push
inc
xchg
cwtl
mov
dec
xor
loopne
add
push
in
psllq
dec
or
jnp
adc
adc
push
out
mov
popf
xchg
mov
std
lahf
fwait
pcmpeqb
cmp
pushf
sub
repz
idiv
sub
push
adc
xchg
jmp
movsb
ficoms
mov
add
jg
xor
nop
js
adc
aam
imul
inc
or
push
or
xor
idivl
popf
outsl
cmp
scas
cmp
lods
out
outsl
push
inc
adc
sbb
cli
xchg
inc
add
mov
jae
push
insl
or
mov
push
mov
mov
mov
push
pushf
and
add
mov
mov
std
push
nop
mov
insl
fsubl
popf
push
pop
mov
pop
pop
dec
inc
fidivl
in
xor
lret
mov
push
cltd
xor
lahf
test
subb
pop
push
push
jne
xor
cmpb
arpl
inc
fwait
clc
mov
shrl
lret
in
sti
or
outsl
xor
or
dec
adc
jg
arpl
stc
out
dec
insl
add
and
xchg
mov
or
cmp
fstpt
fisttpl
sub
xchg
cmp
push
pop
inc
push
push
mov
popf
or
and
shlb
je
xlat
sub
and
xchg
sub
fs
sti
pop
gs
call
mov
mov
xor
pop
sbb
jb
lods
imul
cmp
push
lret
and
pop
cmp
add
jecxz
aad
dec
cmp
hlt
decb
jne
pop
iret
mov
cmp
and
into
push
add
iret
mov
xchg
and
addr16
add
outsl
pushf
jbe
mov
lds
add
xor
dec
push
ja
rcr
icebp
sbb
stc
rclb
aam
pusha
adc
cmp
mov
lock
push
fbstp
pop
cmp
lods
add
lods
enter
aas
nop
jle
sub
cmp
movsb
xor
xchg
inc
sbb
gs
cmp
rolb
addr16
mov
fwait
push
or
mov
pusha
xor
fbstp
ss
or
add
push
aas
setnp
popf
fs
pop
dec
sub
xor
mov
sub
or
loopne
sub
mov
icebp
dec
jl
inc
pop
dec
cmp
mov
add
sbb
and
add
inc
or
pushf
sbb
clc
sahf
mov
data16
sbb
cli
mov
test
cli
arpl
ljmp
push
icebp
ljmp
sub
jbe
loopne
scas
cld
push
sbbb
test
jns
jle,pn
sbb
ds
in
cmp
cmpsl
jo
sub
pop
outsl
popa
add
inc
dec
xchg
pop
add
inc
jle
out
xchg
adc
lea
fwait
pushl
pop
mov
push
xlat
cmp
mov
roll
sbb
testb
vphsubsw
loope
out
xchg
inc
dec
lahf
pop
lret
mov
push
pop
xor
adc
rcrl
js
and
add
mov
xchg
cs
xor
add
jge
in
and
es
add
dec
stos
xor
iret
sahf
xchg
mov
psubd
mov
jno
js,pt
jnp,pt
sbb
sbb
xor
shlb
addb
or
mov
and
sbbl
lret
aad
popf
in
mov
mov
adcb
mov
mov
gs
test
push
add
xchg
xchg
movsb
data16
in
or
div
jbe
add
rcll
std
stc
int
jne
mov
dec
inc
and
mov
jp
test
into
mov
fadd
jle
jo
fisttps
sbb
inc
mov
mov
inc
pushf
adc
sub
fldcw
call
mov
pop
gs
push
xchg
xchg
int
shlb
and
dec
lea
hlt
int3
test
xor
sub
xorl
mov
push
fdivs
es
dec
inc
and
mov
aam
push
push
scas
aam
cmp
dec
xchg
push
cmp
sub
dec
add
sbb
ljmp
mov
cs
cmp
push
insl
inc
xor
push
arpl
pusha
dec
dec
push
cwtl
mov
inc
inc
roll
sub
cmp
mov
or
and
mov
xchg
add
mov
mov
xor
mov
mov
sbb
push
push
mov
cmpsl
mov
pop
lods
cmp
cmp
dec
inc
sbb
xchg
popaw
push
adc
sbb
mov
es
loop
adc
shlb
jo
imul
lds
addr16
jae
pop
pop
inc
fistpl
mov
pop
cmpsl
lock
mov
push
pushf
adc
xor
repz
sbb
scas
adc
pop
cmpsl
mov
cmp
push
xchg
outsb
imul
js
dec
push
rcl
fsubr
dec
xchg
xchg
mov
gs
jbe
mov
sahf
sahf
add
sahf
pop
cwtl
pop
sahf
xlat
jbe
mov
xchg
movsb
mov
mov
adc
nop
repnz
pop
fwait
adc
sub
and
and
adc
jge
jno
lea
dec
test
sbb
test
fstpl
xor
dec
add
fldcw
out
jl
repz
push
cmp
sbb
orl
lock
jne
pop
mul
sub
nop
mov
lods
mov
add
lret
stos
mov
lods
jp
cmpsl
imul
dec
inc
mov
mov
jl
les
test
xor
pushw
enter
xor
add
lret
push
les
xchg
fistpll
add
stc
outsl
mov
ret
es
arpl
fcompl
loop
xlat
inc
xor
cmp
fwait
push
mov
push
int
out
dec
icebp
lret
adc
shll
jns
in
jg
test
das
int3
movsl
jecxz
xchg
std
mov
subl
dec
cmpsl
push
test
std
filds
inc
xlat
mov
call
or
xor
mov
mov
push
or
out
sub
loopne
mov
mov
dec
xor
xchg
jno
inc
icebp
pop
cmpl
popa
jmp
pop
mov
std
pop
pusha
mov
es
test
and
inc
vpackuswb
cmp
out
pop
sub
inc
lret
sbb
bound
xchg
push
fsubs
pop
aaa
movsb
xchg
test
clc
fildll
sub
jbe
jmp
mov
ja
push
sahf
mov
loope
mov
and
xchg
sbb
xlat
push
stc
lds
mov
sub
jbe
fstps
sub
js
xchg
rcrb
cld
and
popa
push
iret
daa
aas
push
cmpsb
icebp
into
test
cmp
xchg
mov
push
stos
mov
repz
nop
xchg
sbb
add
int
cmp
cmp
or
call
cs
sub
push
and
push
sbb
ss
xor
sub
mov
mov
aam
mov
xchg
add
mov
lea
or
fcoms
mov
jno
scas
out
mov
pushf
fstpl
sahf
fstl
pop
xor
in
mov
hlt
fyl2xp1
adc
enter
aas
cmp
add
sub
dec
mov
add
call
dec
std
jo
push
iret
outsb
or
dec
and
cld
cmp
or
mov
leave
mov
test
add
sbb
mov
into
outsb
cmc
imul
ret
test
cmp
jecxz
lahf
mov
lds
fisttps
ja
shll
shrl
push
adc
or
mov
cmp
push
cmp
pop
xchg
aas
int3
cmp
jp
fldenv
mov
cmpb
and
and
cs
mov
sbb
cmp
mov
push
cmp
mov
test
mov
cmc
data16
daa
push
fdivl
dec
fwait
adc
dec
mov
cld
inc
mov
xchg
xchg
pop
ret
sbb
mov
push
jp
aaa
inc
faddl
dec
mov
mov
popf
pop
mov
xchg
pop
test
mov
push
add
mov
in
xchg
adc
inc
mov
out
pop
mov
es
xor
push
js
xchg
inc
mov
cmp
cmc
cmc
dec
mov
rcll
mov
pop
push
sbb
sub
cmpsl
jge
nopl
pop
cwtl
push
add
mov
adc
adc
sub
add
push
cmp
pop
push
repz
sub
xor
cmp
push
pop
add
or
fs
mov
movl
fcoml
insb
push
push
sub
and
add
fstpl
xor
test
xchg
inc
mov
cmp
xlat
mov
xor
orb
sub
pop
push
xor
cmp
jmp
cwtl
call
daa
fcompl
popf
sbb
push
sbb
xor
insb
js
push
lock
add
ss
nop
xor
lds
xlat
push
test
les
or
cli
pop
jl
in
jbe
jge
lret
cld
fstl
subl
leave
fisubrs
stos
out
jecxz
in
outsl
pusha
std
data16
cmp
sahf
xchg
bound
das
cmp
iret
clc
pop
and
pop
icebp
mov
pop
xor
lea
sbb
push
test
jl
sbb
jmp
popa
addr16
outsb
sbb
and
lods
add
jo
jb
sbb
bswap
push
push
insl
iret
bound
movsl
cmpsb
packuswb
add
out
xchg
testb
or
fld
les
scas
jmp
lods
outsl
in
mov
outsl
icebp
mov
scas
cli
repnz
sub
arpl
rol
ret
fwait
and
pop
fucomip
jg
sub
dec
dec
jecxz
jno
int3
das
scas
mov
fistpl
call
scas
fbld
iret
popa
popa
stc
inc
ss
dec
jbe
cs
mov
imulb
into
xchg
call
mov
sahf
jge
lahf
jnp
imul
push
xor
jb
outsl
mov
int
jbe
mov
jns
sbbb
pop
or
cmp
mov
mov
cmp
mov
jo
outsl
and
push
mov
test
mov
mov
mov
xchg
xchg
cs
adc
ja
insb
inc
xor
testl
dec
cltd
dec
push
mov
loope
cmpsb
scas
mov
outsb
mov
jle
mov
mov
jo
in
xor
jno
insl
sub
inc
pop
das
ret
inc
xor
imull
dec
or
xchg
mov
jns
push
sub
dec
or
dec
mov
lret
jno
iret
je
repz
ret
pop
test
test
push
sarb
mov
dec
pop
xchg
jge
arpl
inc
add
dec
or
aas
in
call
adc
cli
push
lcall
mov
mov
dec
mov
mov
mov
mov
inc
xchg
mov
push
popf
mov
sub
addb
fildl
sahf
mov
inc
add
push
xchg
aaa
loope
push
pusha
sar
rcr
cmpsl
fldcw
mov
add
adc
sahf
push
dec
push
negl
dec
push
jo
int3
mov
push
sbb
xchg
std
enter
pop
rorb
jae
jns
sbb
lods
push
inc
push
and
adc
outsb
sub
xchg
add
add
xor
cmp
mov
and
daa
fcom
stc
sub
lds
daa
fidivrs
rorb
xorb
scas
add
movl
jbe
out
stc
pop
sahf
cmp
call
ret
add
push
pop
sbb
jge
hlt
push
sbb
push
pop
ret
andl
xor
out
sbb
scas
in
xor
cmp
in
shlb
pop
sbb
or
dec
push
cmpsl
repz
out
popf
or
or
push
fisttps
pop
mov
mov
pop
dec
popa
ja
dec
movsb
jo
aam
cmp
or
and
pop
sub
cmp
shl
push
push
out
push
sbb
repnz
arpl
enter
jno
in
adc
mov
insb
lods
ss
rcr
fs
ss
bound
cmp
xor
push
add
adc
cs
movsl
adc
sub
fs
jge
add
xor
adc
jbe
or
push
sbb
aam
cltd
mov
cmp
cmp
pop
fsubrs
mov
sbb
cmpsl
push
mov
iret
incb
jns
dec
jge
pop
xor
push
push
cmp
sbb
jg
push
pop
and
mov
lea
in
pop
and
fdivrs
clc
movsb
out
adc
sti
mov
push
mov
mov
cmpsl
fstpt
mov
pop
push
cmpsb
jle
xchg
ficoms
call
dec
repnz
jne
cmp
lcall
mov
dec
popa
or
dec
inc
and
push
mov
mov
sbb
and
jge
cmpsb
xor
mov
popf
mov
pushf
cmp
jg
adc
adc
sbb
xchg
mov
pop
and
inc
jge
test
push
insl
add
out
popa
jo
dec
popa
xchg
jp
scas
pop
mov
std
mov
ds
push
mov
push
repnz
jns
or
add
pop
rcrl
loope
sub
rorb
adc
pop
add
or
xor
jge
fcomps
fstps
sub
sub
lds
mov
pushf
and
adc
fisubl
les
lock
and
pop
jo
dec
sub
pushf
mov
rol
pop
push
les
add
loop
pop
xor
jo
xchg
sbb
daa
test
out
dec
jg
lahf
push
push
ficomps
mov
fsubs
and
into
and
popa
lcall
jg
push
les
insl
shlb
gs
ss
cmpb
dec
cmp
mov
mov
adc
mov
dec
mov
and
jb
and
mov
pop
add
roll
dec
sbbb
pop
sub
sub
fidivl
xchg
xchg
cmp
xchg
xor
xor
xor
int
xchg
sbb
push
sub
lock
inc
adc
pop
and
xchg
xor
xchg
jbe
xor
xor
inc
fisttpll
rclb
data16
lea
pop
push
sahf
and
push
xor
test
int3
and
sub
and
lcall
pushf
mov
and
loope
and
adc
lea
xchg
and
in
les
add
xor
push
sbb
push
hlt
adc
fcoml
push
sbb
or
cmc
adc
repz
jecxz
cli
addr16
mov
cmp
push
divb
push
adc
pop
cmc
adc
add
jmp
adc
adc
in
pop
xchg
shl
jmp
arpl
sbb
gs
adc
test
pshufw
xchg
and
test
out
repz
lds
xchg
add
sti
divb
shl
dec
pop
lret
sbb
xchg
lret
test
cmp
pop
sahf
sbb
add
enter
leave
cld
loopne
cltd
mov
sub
adc
jns
adc
or
outsl
scas
push
lret
outsl
lret
arpl
sti
and
rcrl
pop
mov
push
cmpsb
adc
xchg
push
dec
ljmp
jnp
dec
ret
or
in
fldl
or
jmp
int3
outsl
pop
lret
repz
sbb
sub
sarl
repz
adc
xchg
adc
kmovd
fisubrl
sub
les
sub
jmp
insb
mov
stos
inc
aam
js
cld
clc
sub
scas
in
popa
or
adc
sti
in
jnp
in
dec
aaa
push
add
jmp
inc
stos
arpl
insb
jnp
xchg
sbb
int3
lret
leave
sub
insl
mov
cmpsl
test
das
sub
mov
push
std
push
cmc
add
aam
sti
add
mov
jecxz
aas
dec
les
fisubrs
pop
ret
adc
inc
das
push
cmp
loope
xlat
lret
jecxz
fdivl
js
sbb
aam
je
imul
lret
imul
sarb
jg
fcmovbe
push
xchg
add
cmpsl
xchg
cmp
mov
xchg
into
sbb
outsl
into
push
iret
add
in
pop
xchg
out
mov
mov
cmp
cmpsb
imul
lret
addr16
cmc
lret
mov
adc
aam
and
jo
mov
add
pop
push
ljmp
shl
stos
pop
sysexit
jbe
rclb
daa
mov
jmp
jg
test
unpcklps
adc
adc
mov
icebp
incl
cmpl
sub
push
aam
jmp
stos
jnp
ret
ret
ret
xchg
lret
sarb
shll
ror
jnp
imul
jnp
iret
popa
cli
loopne
bound
xchg
jmp
int
and
aad
push
jg
leave
adc
decb
mov
shl
out
xchg
sahf
fistl
dec
sar
push
push
in
into
repnz
aam
push
aad
mov
lahf
mov
lods
sub
add
sub
mov
pop
xchg
shll
das
mov
dec
icebp
in
dec
inc
and
adc
outsl
test
xchg
mov
dec
pusha
xchg
push
pop
or
mov
int3
sub
sub
js
inc
aad
out
mov
pusha
jns
repz
dec
ljmp
dec
shlb
subb
inc
inc
mov
aas
in
ljmp
test
and
iret
rcrl
sub
scas
lret
repnz
insl
cmp
jecxz
faddp
cli
dec
mov
int
mov
lret
sbb
jno
dec
test
arpl
or
sub
movsl
dec
or
lea
add
test
and
rcr
arpl
and
mov
jg
in
aad
movsl
outsb
or
fistpl
in
iret
shl
fstpt
and
and
dec
dec
daa
fldenv
mov
ja
loopne
mov
mov
stos
daa
or
mov
clc
in
testl
shlb
pop
mov
xchg
fisubrl
fnstcw
sbb
mov
je
jge
mov
cmpsb
stos
cmc
push
mov
stc
mov
inc
push
fidivl
jp
pop
sub
addr16
mov
pop
popa
sub
rcrl
out
sti
sub
mov
icebp
sti
dec
push
popa
andb
mov
test
arpl
adc
test
daa
xchg
mov
cltd
lods
sbb
sbbl
daa
shrl
ret
jle
xorb
jne
jbe
sarl
ret
test
xor
cltd
popa
mov
and
mov
sarb
pop
push
add
jb
sub
insl
andb
jg
pop
or
in
mov
jnp
cmp
in
pop
mov
jbe
mov
cmpsb
jnp
rcrb
icebp
out
mov
fldl
cmp
fisubrs
fistpl
lret
xchg
daa
shlb
lods
cmp
mov
mov
pop
hlt
ret
repz
ret
imul
and
and
and
loope
pop
xor
sub
cmp
sbb
sub
mov
jp
lret
je
sbb
and
mov
inc
push
xchg
mov
jmp
addr16
mov
dec
xchg
cmc
pop
push
push
push
add
pop
mov
insb
pop
or
cmp
pusha
sti
sub
cwtl
std
or
andl
daa
cwtl
icebp
dec
into
movsb
cmp
mov
cs
stos
std
test
push
push
inc
test
pop
js
mov
movsl
and
fdivrs
sub
dec
inc
shll
fiaddl
js
std
dec
sub
ficomps
xor
sub
push
inc
roll
cmpsl
sbbl
xchg
xor
nop
std
insb
inc
pusha
xchg
jnp
jbe
jp
das
std
movsb
mov
mov
mov
cmovge
shlb
mov
hlt
rorl
stc
jle
xor
lods
mov
jae
mov
sub
cltd
aas
mov
jne
bound
and
pop
cmp
mov
es
in
dec
ret
dec
dec
push
cmp
sbbb
mov
mov
push
mov
fbld
dec
pop
nop
mov
repnz
decl
push
inc
and
mov
push
sbb
mov
out
cmp
or
lds
pusha
mov
movsl
or
pop
cmp
out
fiaddl
cmpsb
in
xchg
hlt
in
inc
and
bound
push
sbb
data16
fmul
test
bound
outsb
scas
loopne
mov
jo
sbb
lcall
imul
and
sub
aas
aad
fnstenv
outsb
jb
out
jnp
fidivs
lea
push
cmpsb
loop
sbb
leave
mov
cmp
test
adc
in
js
cmp
jne
sbb
inc
pushf
fisubl
xor
mov
cmc
and
jns
dec
inc
test
sti
jg
inc
xchg
xchg
cmp
add
xor
add
jp
mov
dec
aas
cmp
aad
jo
clc
pop
bound
popl
xor
ret
add
push
adc
mov
push
addr16
in
dec
insb
pusha
adc
push
into
jp
mov
int3
cmp
mov
add
dec
sbb
call
cmc
push
mov
fidivrs
pop
inc
jno
and
push
ss
ret
test
xorb
dec
ret
mov
jg
adc
inc
insb
mov
cltd
mov
or
pop
scas
mov
cld
dec
mov
inc
jns
icebp
push
sub
stos
add
sarl
jnp
inc
add
jbe
push
push
dec
test
xchg
inc
xorb
xor
adc
fstps
jbe
inc
and
xchg
stc
jg
dec
addb
imul
mov
xorl
xchg
jg
rcrl
jecxz
jg
ja
or
sarb
cmp
mov
fisttpl
pop
lahf
repnz
mov
lods
movsl
cmp
fmul
cltd
jg
iret
lret
addr16
pop
test
pop
negb
in
pop
iret
adc
lcall
xchg
mov
mov
xorl
nop
cmp
sub
dec
mov
xor
push
loop
mov
push
push
imul
mov
jge
dec
aas
pop
loopne
xor
sbb
cmp
mov
ret
cmpsl
inc
fstpl
popf
pop
push
xchg
adc
js
lods
fwait
add
pop
sbb
orl
sub
aam
inc
and
outsb
mov
loopne
add
popa
pop
outsl
inc
in
movsl
cmp
int3
mov
ja
mov
mov
mov
daa
pushf
dec
lret
cmp
leave
or
fldl
and
xchg
xor
mov
popa
inc
inc
dec
sarb
sbb
insb
ja
popf
lds
dec
cmp
inc
pop
cmp
jl
ret
pop
jbe
push
addl
push
inc
cmp
and
test
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
popa
repnz
jl
mov
sub
sarb
cmp
sahf
adc
inc
test
andb
sbb
sbb
jno
xchg
mov
add
scas
lods
xor
sub
mov
sub
notb
inc
push
roll
inc
sbb
pusha
adc
mov
push
bound
les
lret
sbb
popf
xchg
gs
mov
push
lods
fidivl
or
call
or
shrb
gs
sub
pop
lcall
mul
call
sti
outsb
mov
add
sbb
out
sbb
pop
popf
leave
in
and
xchg
dec
sbb
jle
aad
pop
gs
push
xor
add
not
add
or
push
or
mov
xchg
shrb
add
movl
adc
xchg
ja
inc
int3
aam
data16
add
and
jne
xor
cwtl
jne
xor
add
add
aaa
adc
or
sub
call
sub
pop
xor
push
mov
aam
cmc
and
jp
add
addr16
sub
sbb
insl
nop
stos
gs
jg
aam
scas
je
iret
and
int3
and
jle
jbe
sbb
xchg
and
iret
test
and
xlat
and
cmc
mov
sbb
jnp
or
and
jl
ss
sbb
or
push
mov
mov
test
sarb
testb
je
cmp
add
mov
jecxz
sbb
cmp
jno
outsl
lock
pop
and
nop
inc
repnz
cmp
lret
add
and
jg
lahf
pop
ss
mov
mov
xorb
outsl
ret
roll
icebp
fiadds
xchg
dec
pop
mov
sbb
inc
xchg
cmp
dec
cmp
mov
sbb
pop
xorb
test
jae
xorb
sahf
sbb
data16
xor
or
fistpll
icebp
add
fisubrs
push
insl
in
xor
outsl
add
in
test
add
in
fcompl
sbb
jnp
adc
xchg
xchg
aad
push
dec
iret
xor
clc
add
incb
incb
mov
cmc
xor
hlt
xor
enter
add
mov
push
scas
pop
xchg
pop
mov
dec
fnstenv
jno
push
out
sbb
jmp
daa
test
or
xchg
add
add
adc
pop
stos
adc
xchg
jmp
xchg
and
adc
adc
sbb
test
add
std
adc
mov
arpl
adc
add
cwtl
dec
xor
ds
sbb
mov
add
pop
nop
or
mov
mov
push
dec
out
xor
call
imul
fcoms
jno
and
and
push
mov
xor
jmp
push
andl
aam
mov
fidivrs
cs
push
jb
test
or
sbb
test
push
push
xlat
in
adc
in
sub
punpckhbw
cmp
or
jmp
fisttpll
insb
sbbl
in
mov
popa
inc
sub
sti
xchg
pop
ret
aad
icebp
hlt
inc
sub
jl
sbb
repz
testb
cmp
adc
xchg
push
out
aad
stc
divb
testb
pushf
sti
sahf
and
test
testb
in
push
in
xor
add
rcll
div
adc
xchg
es
stos
cmp
movswl
insl
testl
jle
insb
push
test
lods
call
cmp
mul
int
xor
hlt
orl
sub
call
loopne
lcall
push
xchg
in
sub
xor
test
mov
xor
sbb
and
inc
xchg
leave
push
in
ret
and
lret
ljmp
sbb
out
pop
jne
pop
dec
cmc
orl
sbb
pushf
or
fisubl
out
test
or
sub
sbb
ret
shll
popf
and
push
mov
lods
or
or
push
sbb
lret
pop
adc
xchg
fnstsw
or
sbb
sti
pop
add
repz
adc
adc
push
fdivs
lret
repz
lahf
js
fdivrs
inc
loopne
and
adc
jp
push
jae
adc
aam
adc
out
aam
or
fwait
mov
adc
pop
dec
xor
adc
adc
daa
fs
lods
insl
cmpsl
enter
sbb
mov
adc
adc
adc
adc
xor
add
push
repz
jbe
sbb
aam
pop
hlt
push
test
sub
jmp
dec
in
in
in
fs
test
loopne
aad
pop
hlt
sbbb
xor
sub
mov
sbb
pop
xchg
fwait
jecxz
pop
notl
mov
lret
fwait
adc
shl
hlt
push
jp
push
jns
and
in
jg
mov
in
pusha
lods
jb
insb
cmp
insb
push
out
add
xor
dec
push
nop
or
sub
dec
call
dec
push
out
mov
mov
pop
sub
insb
lds
push
add
cmc
jmp
shr
loop
hlt
mov
in
daa
fs
mov
aad
insb
cmc
scas
jp
inc
daa
in
mov
nop
sbb
mov
adc
pop
call
inc
dec
push
adc
sbb
push
sbb
aam
xor
inc
push
imul
jnp
inc
jns
sub
bound
and
enter
push
push
dec
mov
or
push
iret
jmp
stc
mov
lcall
cli
popf
int
adc
sub
sub
enter
outsb
sbb
into
cmp
mov
orl
stc
or
stc
adc
add
outsb
add
cs
into
cmova
cmp
mov
xchg
les
mov
mov
inc
sub
and
and
jl
fdivrl
loopne
xchg
cmp
push
inc
notl
in
repnz
lea
icebp
push
push
pop
lds
mov
andnps
sbb
pop
push
inc
adc
xchg
mov
sub
out
les
mov
popa
mov
popa
mov
cld
cs
das
ja
inc
idivb
les
jl
jmp
mov
dec
cld
xchg
push
fnstsw
lds
sbb
dec
sbb
cmp
push
pop
out
push
mov
mov
ss
jmp
sbb
mov
loopne
jnp
fs
loopne
jp
add
pop
pusha
outsb
sbb
add
aas
ret
xchg
xchg
ret
xchg
or
xchg
push
mov
rcll
hlt
xor
movsb
add
in
je
cld
je
lret
scas
aad
mov
lods
inc
adc
pop
aam
pop
aam
aaa
hlt
loop
in
fmul
adc
mov
je
push
and
in
cmc
xchg
jecxz
xchg
stc
jmp
ret
jecxz
fwait
in
mov
aad
in
fprem
aam
aam
cld
aam
repnz
lock
stos
xchg
mov
adc
adc
call
rol
adc
fists
out
rcll
call
dec
std
aad
fistl
xchg
mov
or
pop
push
in
adc
xchg
lret
dec
add
sbb
nop
test
xchg
push
adc
push
pop
in
push
insb
aam
je,pn
and
stos
mov
lods
sub
or
mov
inc
pop
aad
mov
aam
movsb
sbb
sbb
shl
push
xchg
dec
movsb
jb
dec
aaa
sahf
mov
in
pop
aad
je
pop
movsb
clc
pop
movsl
daa
pop
xchg
xchg
xchg
or
jbe
dec
movsb
test
pop
aas
dec
inc
add
jle
bound
popa
lcall
push
pop
movsb
xchg
xor
adc
idivl
xchg
add
dec
test
push
dec
sbb
imul
es
fucom
xchg
add
push
shrb
sub
add
adc
push
aam
mov
inc
mov
cmp
cmp
add
push
or
xchg
loopne
push
and
mov
jmp
xlat
into
xchg
cmp
push
cmpsl
jbe
xchg
popf
les
cld
add
adc
push
cs
mov
push
inc
mov
jl
popf
pusha
sbb
push
or
or
mov
xor
jp
adc
scas
adc
sbb
or
clc
dec
adc
xor
pop
fdivl
jno
mov
add
sbb
lea
push
psllw
out
stc
loop
cmp
dec
lods
loopne
rolb
xchg
and
adc
lcall
pop
jmp
das
fdivs
cmp
int3
lods
test
loop
push
jae
adc
cmp
pop
lock
rolb
pop
sub
jg
in
jp
gs
jmp
mov
push
loope
dec
sub
icebp
sbb
test
xor
push
ja
dec
xor
pop
std
push
lods
cltd
data16
xchg
fisttpll
or
mov
dec
adc
in
adc
sbb
stos
stc
inc
dec
jne
jmp
mov
dec
mov
add
lret
popa
jl
mov
aam
cltd
fcmovb
push
pop
insl
shl
add
cli
js
in
adc
pop
cltd
mov
mov
mov
cmpsl
push
mov
hlt
lret
dec
andl
inc
xor
push
je
scas
arpl
push
mov
dec
xchg
sbb
mov
fbstp
dec
inc
out
xor
inc
lods
xchg
out
lods
mov
cmp
ret
je
cs
xchg
arpl
and
mov
subl
inc
pop
dec
xor
imul
fstl
rorb
push
or
xor
ret
mov
lret
les
insb
lods
push
test
mov
cmp
dec
cmp
pop
in
ficompl
aad
pop
jno
imull
jae
add
mov
orl
push
pop
adc
std
imul
mov
inc
hlt
loope
jle
xchg
mov
stc
into
jecxz
fcmove
pop
adc
pop
inc
inc
in
cs
stos
push
fidivs
mov
int
bound
fs
xor
pop
mov
inc
clc
in
outsb
and
push
jb
pop
xor
lock
jecxz
and
inc
sub
adc
push
xor
scas
test
inc
gs
or
mov
das
xor
stos
and
xor
push
mov
sahf
lock
jle
mov
push
test
fucom
push
xor
mov
imul
mov
popa
sbb
outsb
in
inc
push
sub
ja
dec
pop
jb
mov
cmc
dec
test
mov
inc
stos
sahf
xor
sub
adc
or
lahf
push
push
push
mov
xacquire
cmp
popf
mov
out
inc
cmp
pop
mov
jne
inc
and
add
dec
dec
imul
push
jbe
add
jecxz
bound
xor
xor
mov
sbb
test
fldenv
jae
pop
hlt
add
add
jae
cmp
orl
sub
push
test
cld
xchg
cmp
push
adc
mov
fs
fcompl
mov
clc
mov
or
inc
pop
and
pop
xor
lret
xor
ret
jp
sahf
push
pop
pop
shlb
push
jno
mov
pushf
fcoms
push
push
dec
xchg
or
add
addb
aas
pop
and
add
dec
xchg
inc
sbb
test
call
xlat
out
and
adc
ss
inc
pop
mov
sub
mov
sbb
xchg
push
push
jmp
pop
les
clc
lock
mov
mov
je
ljmp
rorl
sahf
ficomps
mov
test
fdivrl
cmp
sbb
icebp
sub
arpl
push
jecxz
cmp
int3
mov
xchg
xor
in
in
in
jecxz
push
imul
aam
inc
insl
or
outsl
aam
sbb
fiaddl
pop
add
add
sti
lods
cld
nop
xchg
mov
fsubr
repz
xchg
mov
ljmp
test
jle
or
jl
scas
sub
adc
aas
jmp
push
jb
stos
mov
mov
mull
enter
test
lods
sbb
or
cwtl
cmp
xor
dec
push
aaa
pop
push
push
int3
mov
mov
or
mov
stc
mov
xlat
daa
popa
pop
and
cmp
xchg
fwait
or
sti
jbe
sub
in
jle
dec
lods
fs
inc
xchg
mov
pop
cmp
dec
inc
mov
gs
xchg
notb
out
xor
popa
cmp
xor
shrd
lods
xchg
adc
cmc
mov
pop
mov
mov
cmpsl
cwtl
fcomp
mov
or
jge
ss
mov
in
and
out
lds
jecxz
xlat
push
cmp
mov
test
jge
pop
dec
dec
xor
jg
stc
sub
jge
inc
out
pop
push
inc
jl
in
test
and
cmpsb
cltd
gs
mov
mov
add
js
pop
bound
mov
push
mov
scas
xor
movsb
inc
sbbb
push
xor
xor
dec
stos
inc
shl
add
and
lds
in
jle
push
fldl
or
je,pn
dec
rorl
mov
ret
pop
pop
and
loopne
les
add
shll
es
xchg
xor
bound
sarl
fstpl
lock
push
fsubl
jle
jae
cmp
mov
pop
test
int3
or
jbe
fdivs
pop
pop
jo
movsb
in
jecxz
loope
mov
xchg
push
push
push
lcall
and
xchg
fs
and
sub
in
sbb
cmp
dec
sub
mov
por
mov
cmp
icebp
shll
or
roll
xor
test
mov
shlb
jno
enter
scas
push
sahf
jb
xor
mov
pop
mov
mov
ficoms
popf
xchg
mov
push
xchg
push
push
je
push
fidivrl
mov
into
orb
lahf
pop
nop
aam
add
shlb
mov
fstp
pushf
nop
push
sbb
and
pop
cmp
popf
cmp
in
icebp
inc
pop
sbb
fwait
cwtl
popw
outsl
or
inc
loop
sbb
enter
in
mov
mov
loopne
xchg
je
mov
popa
jb
xor
adc
push
rorb
insl
and
or
pop
sbb
dec
xor
sub
les
xor
ror
mov
add
cli
fnsaves
xor
mov
dec
xchg
add
repz
in
daa
lcall
nop
push
mov
jle
xchg
loope
and
out
jmp
sbb
pop
out
push
lea
mov
lock
adc
pop
fistpll
adc
pop
test
in
inc
pop
out
mov
add
dec
call
add
data16
aad
push
loope
shll
loop
cmpsb
les
ja
adc
cltd
aas
mov
shlb
and
xchg
bound
xorb
loop
clc
adc
jge
in
or
mov
inc
icebp
add
add
out
pusha
pop
push
and
pop
or
adc
cmp
adc
and
sub
sub
and
mov
or
subb
rcl
fstl
sub
je
stc
sub
jb
sub
inc
sub
mov
adc
push
sarb
btc
cmpsl
mov
mov
push
xchg
decl
fldt
xlat
pusha
xchg
xorl
inc
and
addr16
xchg
inc
inc
xor
mov
adc
adc
mov
notl
insb
dec
adc
pop
cli
pop
shr
sbb
popf
mov
or
inc
gs
sub
jbe
into
push
pop
xchg
mov
add
lods
cmc
mov
dec
test
cli
cmp
and
mov
lret
mov
sbb
js
push
push
nop
pop
es
push
adc
adc
jb
push
jp
lds
es
rcrl
pop
adc
rorl
dec
pushf
mov
out
fnstenv
push
xor
es
pop
or
adc
mov
cmp
inc
out
xor
inc
xchg
push
inc
in
sub
pop
rcr
shrb
out
dec
fs
add
inc
mov
or
adc
pushf
xor
les
daa
jge
dec
or
cld
icebp
mov
xchg
xor
or
xchg
ds
push
cmp
xor
dec
mov
fmuls
inc
pop
mov
pop
or
adc
cmpsb
pop
scas
cmp
or
jp
mov
push
ss
sub
sub
test
jne
or
pop
je
icebp
xor
inc
test
cs
and
add
mov
fdivs
xchg
jno
push
movsl
or
aaa
xchg
mov
xor
mov
pop
xchg
add
xchg
mov
xchg
push
inc
inc
add
pop
mov
icebp
fnsave
push
mov
lds
into
cmc
push
in
fs
mov
movsl
popa
push
xchg
outsl
scas
lds
rolb
pop
mov
and
lahf
xor
es
mov
adc
lret
inc
sbb
push
cmp
xchg
in
inc
scas
jl
icebp
push
and
fldl
sbb
cmp
mov
div
dec
adc
test
and
cmp
pop
push
rclb
ror
int3
push
outsb
inc
sub
push
faddl
pop
push
popl
js
test
shlb
ljmp
cltd
push
mov
pop
int3
gs
xor
loopne
ficoms
ret
stc
and
mov
push
les
call
xor
inc
push
test
mov
imul
adc
add
sub
cmp
iret
xchg
cmpsl
xor
jns
lods
test
xor
unpckhps
and
adc
in
or
adc
xchg
loopne
adcb
loop
fucom
sub
enter
mov
jne
mov
cmp
clc
pop
imul
xchg
js
and
push
or
jno
test
js
push
mov
mov
mov
jb
inc
repz
xchg
inc
popa
mov
push
popf
lcall
into
imulb
lret
fmul
sbb
cmp
adc
xor
cmp
cmp
jae
jle
xor
push
pop
int
out
sbb
aas
add
xchg
mov
xchg
adc
pop
adc
push
es
insl
jge
popa
je
pop
nop
xchg
push
or
leave
xchg
inc
in
stos
stc
inc
cli
mov
aam
les
in
loopew
dec
mov
pop
pop
andl
mov
filds
outsb
mov
mov
adc
cltd
or
mov
sub
sub
ljmp
out
pop
int3
pop
push
xor
mov
loopne
jb
dec
jno
mov
sbb
out
cmpsl
aam
ljmp
mov
mov
popa
cmc
loope
repz
mov
mov
insl
enter
jno
or
or
loop
and
or
dec
push
jbe
in
stc
es
addb
xor
push
pop
push
pop
push
pop
mov
adc
pop
sbb
and
in
or
xor
push
in
call
pop
xor
rolb
movsl
adc
add
adc
pop
adc
lock
pop
in
cmp
cmp
lret
sub
push
cld
cmp
das
and
jmp
xor
add
adc
lcall
out
adc
mov
push
shll
or
gs
xor
dec
aad
add
fldl
sbb
lock
sub
xchg
cmc
sub
sbb
pop
ljmp
push
cmpsl
and
lods
outsb
rorb
movsl
sbb
push
hlt
aad
xor
outsb
sub
movsl
fnstenv
xchg
out
outsb
int
mov
leave
iret
andb
mov
pop
mov
push
push
shrb
cld
mov
fidivs
xchg
mov
jns
jp
or
sbb
lods
sbb
sbb
hlt
sbb
add
sub
enter
sub
mov
and
enter
pop
mov
pop
mov
cmp
aas
lea
cs
push
adc
pop
dec
sub
and
pop
sbb
xchg
pop
pushf
fcoms
mov
mov
jle
mov
pop
push
xchg
xor
jb
sbb
pop
dec
aam
sbb
test
notb
les
movhps
les
es
push
and
and
push
das
add
adc
das
xor
fisttps
push
or
push
sbb
aas
sbb
xchg
rcl
xor
test
mov
cmpsb
add
cmp
je
add
leave
enter
mov
aad
loopne
or
andb
scas
test
mov
pop
sbb
outsl
cmpsl
jno
out
loopne
xor
data16
lret
sbb
pop
dec
adc
and
aas
lahf
push
mov
mov
push
shlb
xchg
cs
je
inc
mov
xchg
insb
cmp
testb
lds
push
hlt
xchg
mov
imul
and
aam
out
arpl
fldcw
jge
mov
aad
jns
test
rolb
lods
enter
fs
adc
lret
xor
inc
cmp
in
popa
xchg
iret
movsl
pop
jo
add
mov
sahf
nop
push
pop
jbe
das
push
int
mov
out
ljmp
mov
dec
xor
sub
xor
xor
ds
mov
notl
scas
cmp
add
pop
xchg
or
adc
push
push
lods
shlb
mov
std
stos
lahf
push
and
scas
stos
push
sub
daa
mov
movsl
xor
imul
stos
test
cmp
push
pop
adcl
cltd
or
dec
int
xor
clc
xchg
std
lock
test
mov
add
incl
pusha
inc
mov
icebp
add
xor
cmp
popf
out
push
push
inc
movsl
or
cltd
adc
jecxz
lret
or
and
pop
aas
scas
rcrl
dec
out
insb
xchg
pop
lds
in
insl
pop
xchg
int3
or
fs
mov
xor
mov
hlt
push
adc
or
lods
xor
jl
out
stos
cli
pop
xchg
dec
fs
xchg
fcoml
fs
inc
cld
mov
cmpsl
dec
mov
xchg
xor
lcall
mov
mov
push
add
pop
inc
lea
cs
inc
into
xchg
je
adc
mov
dec
shlb
mov
dec
shlb
mov
pop
inc
insl
push
pusha
and
popa
pop
dec
push
sbb
flds
mov
cmp
mov
xchg
xchg
cmp
adc
adc
mov
mov
add
xchg
push
mov
in
rorb
or
and
mov
push
pop
pop
mov
cmpsl
jo
repz
divb
and
add
dec
dec
fs
mov
adcb
mov
call
inc
sahf
sahf
push
and
ds
mov
mov
push
je
xlat
push
push
mov
fs
inc
flds
into
jne
hlt
or
and
xor
inc
aad
mov
xor
pop
or
fadd
sbb
mov
push
adc
xchg
adc
orb
xchg
jne
popa
mov
push
dec
and
hlt
mov
dec
xorl
imul
push
jbe
or
or
cmp
inc
in
cld
add
pop
flds
or
and
rclb
push
adc
pushf
add
add
xchg
fdiv
ja
cmp
jns
jl
xchg
add
aam
jno
loope
sbb
pop
adc
adc
cmp
fstpl
cltd
aad
sarb
lock
xor
xchg
push
fisttpll
movsb
or
pushf
and
adc
push
call
mov
imul
jo
mov
movsb
fwait
ret
ja
adc
daa
xor
fdivs
cmp
or
xchg
insb
movsl
add
leave
nop
testb
leave
fdivrp
inc
mov
mov
cmc
and
pushf
mov
ljmp
jp
movsl
inc
clc
sub
out
sahf
and
les
add
shlb
cmpsb
or
jo
insl
add
or
or
xchg
ss
imul
lds
xchg
mov
add
cmp
decb
rorb
xchg
sbb
xor
popl
faddl
dec
add
in
jb
sbb
hlt
push
inc
jo
pmulhuw
fimull
fcoml
jl
movsb
sub
js
bnd
adc
repnz
push
out
jmp
fdivl
addl
push
add
icebp
cli
icebp
xchg
lods
push
dec
and
outsl
dec
mov
inc
pop
and
pop
into
gs
rolb
addl
sbb
add
fisttps
icebp
jo
dec
mov
cmc
cwtl
mov
adc
cltd
and
sub
jo
es
push
pusha
xor
push
test
es
in
jne
loopne
cmp
or
ficompl
filds
add
test
ds
bound
mov
inc
mov
push
test
lcall
add
das
shlb
inc
jno
movsl
push
lds
pop
sbb
jbe
or
push
push
mov
dec
scas
inc
fisttps
or
push
jae
xchg
fdivs
faddl
les
inc
cmpsl
xchg
sub
add
imulb
fisubrs
popf
sub
xchg
lds
dec
pushf
outsl
add
ds
inc
xchg
sub
aaa
lods
inc
nop
out
dec
push
test
sub
lea
mov
push
test
mov
pushf
loope
cltd
push
loop
add
add
dec
pop
jo
sbb
dec
rorb
lret
test
mov
test
and
xor
std
shlb
cmp
mov
inc
mov
lret
or
sub
lea
inc
aas
loop
xchg
sub
and
xor
add
test
je
sbb
push
pop
rcrb
push
push
test
xchg
xor
pop
push
mov
push
nop
mov
jne
fnstenv
adc
and
xchg
pop
dec
push
fdivrl
add
pop
movsb
jb
add
and
or
xor
or
loop
push
xor
mov
flds
push
push
sub
adc
adc
into
out
cmp
add
pop
roll
fisubrs
pop
pop
mov
pop
xchg
jl
sbb
shlb
inc
push
jo
cmc
sbb
adc
cmpsb
mov
pop
pop
add
ss
xor
push
pop
or
idivb
movsb
or
popf
rolb
xor
adc
dec
cmp
fidivrs
adc
mov
or
cld
hlt
lret
cwtl
inc
sarl
add
cld
inc
inc
mov
subb
gs
inc
rcll
lcall
test
jae
sbb
cmc
mov
imul
pop
les
adc
test
addb
gs
and
lea
jo
jl
sbb
cmp
mov
pusha
push
gs
cs
or
gs
mov
or
out
add
add
sub
les
push
push
inc
xchg
insb
lret
aaa
out
addr16
sbb
js
cld
fdivl
test
push
and
lock
dec
aaa
mov
scas
sbb
pop
and
mov
cld
sub
sti
stc
fdivrs
jo
loopne
sbb
inc
nop
adc
daa
or
and
push
mov
jne
sbb
sbb
sub
and
cmp
mov
gs
mov
push
xlat
push
lea
xor
push
dec
mov
lds
data16
inc
aas
dec
mov
int3
xor
or
lcall
stos
lahf
xchg
mov
push
out
pop
imul
sub
pushf
inc
or
je
movsb
xchg
in
add
mov
sub
dec
push
push
push
push
dec
push
sbb
mov
incl
out
loopne
xor
icebp
fidivs
mov
xor
jge
push
mov
inc
loopne
mov
dec
dec
adc
push
jnp
mov
out
pop
cmp
lds
sbb
xor
cmp
daa
mov
sarl
jae
xchg
mov
stos
popa
cmp
pop
push
in
and
xchg
jne
andl
or
dec
add
inc
test
and
push
sti
sbb
and
fs
xor
cmpsb
insl
pop
pop
xor
int3
outsl
dec
add
inc
fists
cmc
xchg
and
call
mov
jp
mov
mov
in
mov
mov
sub
mov
adc
testb
cmp
flds
cmp
pop
xchg
pop
mov
dec
add
jbe
and
adc
xchg
fistps
lods
inc
mov
xchg
jp
and
clc
fisubs
xor
mov
lea
clc
sub
ss
cwtl
inc
ds
std
mov
sbb
mov
dec
enter
cmpsl
push
mov
nop
xchg
sbb
mov
push
jecxz
sbb
cmp
push
fildll
push
movsl
cmp
and
aad
stos
test
xchg
push
aam
cmp
mov
mov
push
inc
enter
lods
mov
hlt
and
jg
inc
aaa
pop
cmpsl
mov
aaa
push
ret
push
hlt
idivb
popf
test
dec
xor
and
cwtl
or
jbe
mov
adc
lret
push
adc
pop
stos
movsl
add
dec
xchg
xor
mov
sbb
mov
jl
jne
pushf
icebp
inc
shl
lret
stc
jo
mov
imul
mov
xchg
loopne
jnp
loopne
fistps
stos
xchg
arpl
and
cmpb
imul
js
push
daa
dec
test
jo
xchg
and
inc
cs
mov
clc
inc
xchg
clc
sbb
jecxz,pt
mov
lea
dec
xchg
lret
jo
jg
pusha
dec
mov
push
ret
filds
jp
inc
out
pop
enter
stos
out
dec
sub
xor
lods
ljmp
add
in
sub
inc
aaa
cmpsb
in
mov
arpl
add
dec
jmp
sub
rclb
or
mov
bound
xchg
test
xor
ret
andl
lea
cmp
xchg
roll
stc
stos
sbb
es
push
in
jp
lahf
cmp
or
pop
imul
mov
in
and
jecxz
or
cmp
fstl
ret
shl
mov
imul
les
sbb
leave
int3
mov
and
sub
out
cmc
cmp
aas
shrl
inc
cmp
cmp
push
xor
loopne
sub
shlb
movsl
xchg
es
ficoms
ja
in
pop
out
inc
into
push
pop
inc
fcomps
aam
cmp
ds
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
jmp
jmp
jmp
jmp
jmp
pop
add
dec
icebp
bound
push
jnp
xor
int3
mov
adc
jb
and
dec
adc
lods
adc
xor
jbe
ret
dec
adc
adc
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
mov
stos
sbb
dec
cmp
xchg
mov
std
ds
mov
jne
lea
hlt
mov
sub
aaa
jg
jl
xor
pop
cs
rorl
jp
in
xchg
aas
xchg
dec
mov
pushf
test
inc
push
adc
mov
xlat
aad
cmpl
popa
daa
xor
arpl
out
dec
pop
shll
stos
push
mov
imul
xchg
scas
add
std
sbb
adc
test
mov
xchg
pusha
dec
aas
xor
imulb
fldenv
mov
das
xchg
aaa
adc
sub
xchg
stos
out
mov
call
dec
jo
mov
int
or
jge
sub
pop
movsb
or
inc
sub
mov
sub
dec
rclb
or
pop
das
ja
sar
push
fbld
sbb
rcrl
pop
inc
inc
mov
lret
sub
xchg
arpl
mov
pop
sbb
mov
xor
push
sbb
inc
add
mov
inc
add
xchg
inc
