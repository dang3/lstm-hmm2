add
jmp
sbb
rol
movl
add
xor
push
cld
pop
decl
sbb
dec
movw
adc
push
xchg
pop
adc
jbe
jmp
ds
shl
push
dec
pop
add
and
push
stc
pop
jmp
and
mov
pop
xor
punpcklbw
jmp
shr
and
add
sarb
out
out
push
cltd
pop
add
movw
shl
jmp
cmpsl
rclb
cs
aam
push
dec
pop
and
pcmpgtw
or
psrld
sbb
jb
adc
push
aaa
pop
dec
movb
or
jmp
sbb
in
call
jmp
add
xchg
cvtps2pi
xor
or
or
jmp
mov
mov
pop
mull
jmp
inc
add
jecxz
jp
rol
push
cld
pop
sbb
jp
sbb
sbb
jmp
movsl
loopne
mov
fsubrs
psubusb
or
jmp
insl
and
movb
psrlw
push
dec
pop
jp
shl
add
sub
and
add
and
sbb
sub
movl
pcmpeqd
adc
sub
cvtps2pi
and
movb
and
jmp
mov
pop
fldpi
push
hlt
dec
repz
jmp
and
mov
sub
push
sahf
pop
paddusw
add
js
add
movl
or
add
jmp
or
dec
arpl
xor
punpcklbw
sbb
sub
push
xchg
pop
js
movw
or
mulps
xor
rcr
and
and
adc
shr
jmp
cmp
or
cmpl
jne
sbb
mov
jmp
add
push
ss
out
je
push
mov
fldt
pop
push
pop
jmp
nop
cmp
inc
ficoml
inc
sbb
add
test
pushf
and
test
mov
cmp
lods
cmpsl
test
mov
ljmp
and
jmp
test
loop
xlat
movsl
gs
inc
ficoml
dec
xor
jmp
mov
and
test
push
addr16
mov
and
test
mov
adc
call
out
mov
test
std
and
test
mov
sbb
push
jmp
mov
and
mov
mov
push
imul
and
call
ljmp
cwtl
jmp
mov
cmp
push
push
mov
and
push
mov
add
push
add
cld
std
and
mov
ds
stos
jmp
subl
add
cmp
push
push
inc
ficoml
std
int
jmp
push
adc
sub
in
bound
and
and
ds
bound
in
sub
cmpsb
push
ss
and
ds
bound
adc
push
cmp
in
int3
dec
movsl
and
cwtl
pusha
cmc
sub
test
ss
std
sub
sub
cmp
andb
jns
sbb
test
mov
movsb
pusha
in
cmp
mov
scas
inc
or
mov
sub
test
sub
mov
jns
mov
jns
mov
jns
mov
jns
in
mov
mov
pop
bound
pop
iret
sbb
and
fldt
push
jmp
in
scas
jg
inc
jb
xchg
mov
loop
mov
adcl
in
mov
or
xchg
leave
add
xchg
cltd
xor
bound
push
sub
movsl
test
mov
and
test
mov
cmpsb
shl
mov
sub
ds
push
push
xor
stc
stc
mov
es
push
and
sub
mov
mov
loope
ficoml
mov
loopne
sub
and
cs
movsl
fsub
cwtl
ficoml
mov
loopne
sub
jg
insb
jge
mov
in
push
xchg
imull
xor
nop
mov
scas
pusha
push
sbb
jmp
xchg
scas
test
jl
insb
cmc
in
cmpsb
insb
in
ss
sub
scas
js
jge
test
ss
mov
fs
andl
and
mov
or
jmp
xchg
lods
fsubr
xor
mov
int
out
xlat
adc
push
sub
push
addl
int
jmp
jecxz,pt
xorl
jmp
jecxz,pt
subl
jge
mov
jecxz
mov
mov
and
outsb
in
in
dec
pop
std
and
test
inc
dec
push
std
and
test
xor
sub
mov
push
mov
push
lcall
dec
ficompl
iret
inc
int
jmp
ficompl
rorl
mov
imul
nop
cld
and
fiaddl
iret
inc
fistpl
rorl
rorl
cmpsl
leave
jo
test
push
incb
out
inc
lret
popf
aam
jmp
enter
fists
mov
fisubl
leave
je
mov
pop
loope
fisttpl
test
push
roll
inc
fistpl
mov
and
mov
push
cwtl
and
loope
fs
mov
add
xchg
add
in
add
add
add
add
add
addl
add
push
add
add
pop
scas
add
fiaddl
sbb
xor
sbb
jbe
mov
mov
push
fsub
cmp
dec
mov
aad
rcr
subb
mov
add
jbe
jo
stos
fildll
jg
mov
imul
push
push
in
mov
das
dec
mov
or
xor
cmp
ss
push
xor
sub
je
gs
insb
inc
scas
daa
sbb
or
sbbb
add
add
add
add
mov
out
pusha
push
add
add
add
pop
add
add
add
and
add
add
add
ljmp
add
jo
add
xchg
add
add
adc
add
add
add
lea
add
add
add
add
add
in
add
add
add
add
sub
add
add
add
add
das
add
add
add
int
add
ss
add
add
add
xchg
add
add
add
adc
add
add
add
je
add
add
add
add
mov
add
mov
push
mov
sub
outsb
insb
add
add
add
add
add
roll
lret
aam
add
add
js
add
add
add
add
or
add
mov
sarl
daa
rolb
ljmp
add
add
testl
inc
inc
int
mov
mov
je
jmp
cli
pop
fisubs
insb
mov
rcll
add
mov
mov
or
adc
add
dec
nop
add
repnz
clc
push
add
test
add
sahf
sbb
test
loope
rcrl
lret
repnz
inc
aas
lcall
xor
or
pop
stc
mov
jmp
mov
das
lods
inc
sahf
mov
repnz
shlb
sbbl
lds
xor
loop
aam
push
jo
xchg
xchg
sbb
mov
pop
mov
sahf
gs
xchg
dec
aad
xchg
test
pushf
loop
xchg
leave
loop
mov
inc
int
mov
scas
pop
scas
scas
not
addr16
push
test
es
or
cmpsb
faddl
lcall
movsb
xor
xlat
mov
in
negb
std
scas
push
adc
hlt
ja
push
daa
jbe
fldpi
aaa
mov
in
test
cwtl
dec
jne
and
inc
test
fnstsw
addl
mov
push
in
pop
and
test
adc
pop
test
repnz
sbb
cmpsl
adc
dec
subb
push
ljmp
adc
cli
push
repnz
jmp
dec
out
xor
fisubs
mov
repnz
movsl
mov
lcall
jp
sbb
addb
pop
dec
jns
insl
pop
ffree
push
imul
test
idivb
scas
sbbl
roll
jl
jle
shll
pop
fisubrl
jbe
in
lahf
lret
lea
lret
mov
add
imul
dec
mov
push
pop
push
lret
cli
push
fisttpl
loop
jbe
mov
jp
pop
mov
mov
mov
fwait
or
adc
mov
cmpsb
or
mov
push
jge
pop
stos
sub
lds
stos
es
jae,pn
rcrl
iret
sbb
fidivs
fistpll
mov
les
adc
arpl
ds
scas
insl
addr16
testb
push
hlt
lret
les
add
sbb
arpl
fiadds
lods
ret
sarl
jl
aad
adc
fwait
sti
add
lcall
outsb
sbb
pushf
test
test
pop
xchg
and
xor
or
and
xlat
dec
mov
mov
sbb
mov
pop
add
stos
fimull
int
out
rolb
fsubs
andl
cmpsb
shll
mov
mov
push
push
xor
xchg
xor
insb
mov
fsubrl
lcall
mov
popa
cmp
adc
sub
fsubr
or
dec
cmpsb
out
std
cmp
cli
sbb
fimuls
mov
adc
sub
jae
pop
mov
mov
inc
pop
lods
push
ja
into
sbb
inc
iret
dec
pop
mov
xor
push
icebp
mov
add
or
sbb
sahf
aad
cmp
movsl
push
dec
leave
or
add
add
mov
sti
inc
clc
gs
push
xchg
add
imul
inc
pop
cld
push
inc
push
jecxz
mov
mov
lea
sbb
jbe
xorl
int3
fsubs
fstl
sub
cmp
xor
adc
pop
fisttpl
sbb
dec
mov
les
jmp
icebp
xor
stc
mov
leave
sahf
les
mov
xor
mov
loopne
or
mov
push
mov
lahf
xchg
pusha
pushf
outsl
push
cmpsb
js
out
sbb
push
push
mov
das
lock
fsubrs
aad
push
fsubl
gs
jge
aam
aad
or
cmp
movsb
pop
xor
inc
rorl
pop
mov
cld
cmp
mov
call
decl
sti
dec
lods
lret
push
pushl
repz
mov
icebp
xchg
push
aam
jecxz
rorb
pop
or
sub
cmp
fs
in
fwait
jb
add
mov
jmp
dec
xchg
lcall
push
out
popa
out
cmpsl
mov
pop
subl
sub
cmp
xorb
mov
and
mov
aad
in
je
bound
fsubl
pop
decb
mov
fs
imul
cmpsb
add
mov
in
popf
xor
mov
cwtl
imul
mov
in
cmp
dec
sahf
lret
push
repz
pusha
sti
mov
adc
jle
dec
xchg
stc
lds
iret
sub
aas
xor
cmp
sbbb
pop
add
mov
mov
cmp
push
pop
jbe
push
pop
adc
punpckhwd
popf
jne
push
jns
repnz
insl
cmc
pushf
xlat
cltd
loope
pop
scas
mov
int
xchg
sar
pop
incl
fiaddl
icebp
mov
pop
sub
ja
lahf
jo
sbb
and
xchg
pop
popf
adc
xchg
addr16
and
fisubl
dec
push
inc
aad
aaa
pop
rol
mov
lds
negb
cld
test
out
push
dec
cwtl
test
adc
push
mov
mov
pop
clc
mov
insl
sahf
xchg
sbb
repnz
jl
pop
push
loop
leave
jmp
mov
xor
mov
and
arpl
imul
leave
xor
popf
mov
adc
dec
out
gs
fwait
add
loope
sbb
push
xor
ret
dec
or
rcrl
lret
inc
dec
iret
adc
cltd
jmp
shrl
icebp
cmc
fldl
insl
xlat
pop
jno
and
test
hlt
icebp
loopne
rcr
es
pop
scas
movsl
inc
outsb
sub
mov
insb
xor
sbb
pop
mov
mov
sub
mov
fisttpl
test
mov
mov
scas
mov
in
xor
insb
loop
in
lcall
inc
push
in
jmp
mov
mov
jmp
mov
xchg
dec
cmpsb
mov
scas
jg
lock
mov
sbb
mov
fwait
sbb
lcall
jnp
lock
pop
out
adc
mov
push
dec
add
xchg
xchg
cmp
imul
inc
mov
popf
lea
cmc
mov
stos
and
lcall
add
inc
cmpsb
fistps
push
sti
push
inc
jo
loope
pop
leave
mov
push
dec
cmp
cmp
iret
cmp
dec
repz
add
pop
hlt
in
xchg
add
mov
jo
push
pop
pop
push
fnstcw
push
hlt
imul
pop
dec
mov
cmp
pop
lret
icebp
cld
fimull
test
add
outsl
xchg
test
stc
movsl
mov
fcoms
mov
and
mov
cltd
pop
push
or
fucomp
cld
insb
mov
lods
xor
int3
out
mov
shlb
add
sub
adc
mov
add
into
out
and
fstps
and
ret
push
xchg
je
scas
jnp
int
adc
pop
xchg
cmp
inc
jmp
dec
mov
jp
loopne
test
xchg
mov
mov
repz
cmp
pop
inc
out
mov
rcrl
adc
int
sub
mov
pusha
push
cwtl
aam
orb
dec
mov
push
dec
mov
adc
cmp
je
ja
mov
mov
add
and
in
hlt
test
fildll
jl
adc
pop
lods
add
fistpl
int3
jecxz
pop
mov
mov
decl
call
lcall
sub
gs
push
ret
dec
jo
inc
dec
dec
stos
inc
jmp
push
xchg
push
stos
lods
jo
xor
mov
test
mov
push
xor
or
movsl
jae
mov
shl
mov
punpckldq
aam
dec
cmp
cmp
add
fs
adc
inc
mov
push
lods
jp
in
stos
stc
rorl
mov
shll
inc
dec
jge
pop
inc
inc
add
xchg
cmc
cmp
inc
ja
fldt
cli
push
fadds
imul
ficoml
xchg
insb
rorl
into
arpl
jge
push
lods
push
cli
es
lods
sbb
cmp
dec
ja
xor
or
shll
pop
loop
inc
xchg
fcomi
mov
xchg
push
add
lds
jbe
mov
push
stc
mov
out
and
add
inc
lret
imul
mov
std
sbb
and
push
push
int3
add
lds
arpl
aas
xor
jnp
pop
pop
dec
dec
ret
enter
leave
jl
js
dec
cltd
notl
fistpll
adc
xchg
jp
push
arpl
test
rcrl
fucomip
gs
inc
mov
and
dec
and
jmp
outsl
mov
sub
fldcw
xchg
ret
imul
in
daa
sahf
aam
jno
sub
sbb
add
xchg
stos
push
jmp
xchg
mov
fwait
rcrl
call
stos
jae
jg
lahf
pop
inc
mov
popf
xor
add
xor
orl
push
fucom
clc
mov
push
or
jnp
fs
push
jno
sbb
mov
hlt
je
ret
xchg
cmp
sub
sbb
dec
adc
insb
sub
imul
inc
ret
mov
cmp
test
sub
enter
xor
mov
aas
xlat
xlat
cmp
push
push
loope
repz
lods
outsl
cld
or
xor
add
xchg
js
or
pushf
adc
cli
clc
mov
mov
adc
in
mov
jmp
cltd
shlb
inc
enter
mov
add
sahf
sbb
ficomps
shlb
jp
xor
cltd
addb
dec
and
dec
loope
adc
loop
lcall
pusha
push
imul
loop
lahf
mov
jecxz
xchg
ret
into
mov
xchg
mov
or
mov
dec
fsub
add
pop
cs
ret
hlt
clc
push
repnz
pop
clc
data16
xor
sti
adc
cmp
xchg
mov
jno
fcompl
push
insb
lret
popa
repz
cld
lcall
pop
jae
mov
mov
inc
outsl
inc
loopne
jbe,pt
sbb
mov
arpl
jp
fildll
mov
cmp
push
mov
mov
pusha
test
xchg
scas
ret
sub
in
sbb
inc
xchg
mov
dec
addr16
ss
insl
popf
les
dec
in
enter
addb
call
mov
inc
addr16
dec
xchg
movsl
xchg
hlt
cmpsb
ds
std
in
xchg
add
xchg
push
xlat
flds
dec
mov
pop
mov
add
call
jmp
push
jge,pn
xor
es
jmp
in
ret
push
sbb
sar
or
out
mov
mov
lods
inc
imul
push
pop
mov
adc
xor
mov
jmp
movsb
inc
sub
jecxz
adc
es
adc
loope
mov
push
inc
jg
orl
es
in
cmp
hlt
insb
add
lcall
inc
fwait
call
cmp
pop
mov
ret
add
subl
jp
sahf
add
jbe
jnp
push
in
insl
cwtl
dec
mov
xchg
xchg
cmp
int3
aam
scas
outsl
dec
loopne
inc
scas
cwtl
enter
xchg
mov
push
test
jg
sub
test
movsbl
stos
ror
xchg
jp
imul
lods
pop
movsl
jecxz
js
xor
mov
sub
cmpl
inc
xor
hlt
pusha
lcall
es
mov
jb
movsb
push
imul
test
mov
xor
push
jno
mov
mov
nop
push
cltd
xor
push
movsb
lret
push
push
push
fsubs
mov
roll
inc
dec
int
movsl
jnp
jg
pop
cmc
orl
in
pop
and
xlat
xor
adc
call
mov
aad
sarb
push
push
out
ret
mov
sbb
pop
ljmp
dec
dec
ljmp
push
sbb
or
mov
sub
lock
push
cmp
fdivl
mov
dec
cmp
loopne
ret
das
in
bound
dec
rorl
adc
inc
test
xchg
clc
or
call
mov
sub
popa
push
addl
mov
bound
hlt
and
scas
xor
mov
sbb
repnz
repnz
pop
dec
mov
or
lock
mov
lods
clc
in
or
les
notb
das
xor
mov
bt
cmp
scas
mov
movsb
cmc
test
xchg
sub
scas
pop
pusha
loopne
dec
push
inc
and
cltd
or
dec
xchg
outsl
mov
fucomp
adc
sub
mov
outsb
insb
mov
outsb
arpl
adc
sub
lock
mov
mov
sbb
je
mov
dec
jmp
arpl
mov
xlat
jne
outsl
les
sarb
lret
lret
lret
or
mov
jnp
jne
pop
pop
mov
jp
cmpsb
aad
addr16
sbb
ficomps
mulps
pop
sbb
outsl
xor
subl
dec
sahf
jmp
mov
lret
add
xor
das
in
test
add
fdivp
iret
insl
es
ffreep
jge
and
pop
out
inc
popa
add
mov
in
in
ja
movsl
add
loop
xchg
into
sub
mov
je
ja
lock
sbb
pop
shr
fidivrl
mov
clc
and
das
repz
mov
add
dec
js
in
mov
dec
in
mov
xor
pop
and
dec
jle
xor
movsl
loopne
imul
or
add
sub
dec
je
test
xor
dec
in
mov
dec
or
cli
lods
lods
xchg
mov
push
scas
mov
sar
pop
out
jmp
loope
dec
xchg
rolb
jne
or
icebp
mov
fstpt
and
mov
add
pushl
ret
ss
pop
sbb
xchg
add
mov
insl
std
cltd
mov
aam
fdivrs
aam
cmp
sub
bound
xchg
sub
pop
cmc
lret
int3
push
mov
out
repnz
pop
sarl
sub
dec
pushf
pop
mov
mov
push
leave
mov
inc
imul
dec
push
jmp
pop
ljmp
adc
mov
fsubl
fldenv
std
shrl
push
pop
dec
ja
clc
mov
pop
xchg
mov
inc
inc
bound
xchg
inc
inc
dec
call
mov
sub
cmp
ret
adcb
mov
and
fidivl
insl
cltd
pusha
jae
cld
push
subl
ds
incl
or
xchg
in
dec
push
sbb
jmp
out
push
pop
jne
scas
push
lahf
lret
test
ss
dec
shl
and
daa
mov
push
pusha
cmp
ret
rorb
rclb
rclb
in
sbb
pop
inc
lret
mov
lcall
and
movsb
fnstsw
mov
lret
mov
je
popf
push
scas
push
jmp
int3
mov
or
mov
xchg
push
ds
push
or
arpl
popa
gs
ja
mov
xchg
test
jns
leave
push
stc
imul
int
pop
mov
popa
jge
adc
push
hlt
inc
cmp
aas
rorl
out
jne
lods
add
or
in
mov
stos
add
sub
jnp
xor
sub
cs
and
imul
fs
imul
inc
int3
mov
rcll
xchg
pop
loope
mov
xchg
aam
fidivl
rol
mov
pop
add
dec
call
rcrl
lret
jne
mov
in
rolb
dec
insb
mov
xchg
inc
js
push
adc
cli
push
outsl
movsl
pop
sub
or
mov
pop
mov
pop
lret
pop
sbb
movl
mov
push
data16
jb
fmul
xor
jle
inc
mov
sahf
div
jle
xor
bound
mov
stos
fs
or
dec
inc
sarb
pop
ljmp
into
xchg
push
es
xor
cwtl
sti
cmpsb
cli
loopne
push
aas
jle
test
loop
out
jno
and
mov
inc
js
shlb
xor
add
roll
mov
add
bound
pushf
lret
jecxz
cmc
mov
adcl
ds
sbb
movsl
test
dec
mov
stc
sbb
pop
aam
jecxz
inc
mov
jns
xchg
dec
stc
sub
cmp
stos
insl
fdivrl
or
xor
adc
sub
aaa
rep
and
insl
aad
stc
push
pop
sarl
sti
pusha
shll
add
aam
lds
mov
mov
cmp
in
test
iret
mov
push
xchg
popa
ss
fcmove
inc
loope
push
mov
mov
mov
test
out
lret
mov
movsl
test
push
xchg
std
xchg
xor
fsts
lods
push
fwait
es
dec
repz
iret
mov
test
into
lea
adc
mov
sub
jl
into
insl
lret
jle
ljmp
jmp
data16
add
or
jl
add
imul
cli
sahf
inc
insl
jp
fistps
fisubl
cmp
icebp
push
mov
sbb
pop
mov
push
jae
icebp
ds
das
mov
sub
jecxz
push
ja
jnp
les
stos
pop
inc
jmp
aas
or
add
push
sti
mov
movsl
mov
lcall
jnp
jne
jbe
into
dec
enter
add
in
in
lret
mov
or
ret
call
jb
push
leave
add
shll
arpl
mov
loopne
push
sti
leave
and
and
fsubr
mov
lcall
ljmp
cwtl
insl
mov
xor
aas
xor
outsl
rcrb
cltd
dec
jg
pusha
push
iret
idiv
cwtl
fldcw
mov
sarl
inc
sbb
dec
pop
test
mov
aaa
and
bound
cmp
lret
xchg
nop
add
js
pop
mov
adcb
cmp
cmp
lret
in
cli
jg
icebp
jne
test
stc
icebp
or
in
xchg
mov
ja
adc
add
aas
invd
jns
enter
xor
jnp
fs
adc
scas
lcall
in
pop
into
ret
dec
mov
mov
movsb
mov
ficoms
dec
adc
sarl
fnstsw
mov
stc
cwtl
mov
xorl
pop
sbb
js
xchg
mov
pop
mov
mov
popa
enter
es
shll
arpl
repnz
movsb
sub
mov
cmpsb
sub
insl
repz
fistps
cld
cli
in
in
mov
clc
dec
inc
outsb
pop
xchg
mov
sarb
inc
imul
jmp
pusha
lea
xchg
xor
aam
stos
add
stc
sbb
cltd
int
inc
and
push
jle
sbb
add
dec
push
add
or
mov
pop
call
cmpsl
mov
shr
movsl
shll
jo
int3
loop
das
jecxz
cmp
pop
or
add
dec
inc
jae
dec
lock
sub
stos
sub
cmp
add
cli
mov
addr16
lods
pop
rcr
pop
nop
jo
xchg
test
jle
fimuls
push
xor
outsb
and
je
into
aas
push
inc
fidivrl
mov
xchg
pop
dec
sub
inc
out
addr16
repnz
icebp
and
in
sbb
jns
dec
sarb
in
xor
inc
dec
jno
shrb
mov
scas
pop
icebp
dec
and
loop
aad
imul
into
or
inc
adc
in
in
sbb
mov
inc
gs
or
incl
mov
ret
sbb
pop
push
popa
push
stos
aaa
rcll
shlb
sbb
pop
mov
sub
xchg
dec
mov
xchg
orb
or
xor
xor
aad
test
pop
in
icebp
push
dec
xchg
cmp
cmp
mov
mov
je
push
inc
jo
or
dec
xchg
dec
inc
in
popa
or
gs
sbb
push
xchg
mov
cmp
cwtl
push
push
or
sub
mov
shrl
pop
lock
mov
jae
and
lds
jecxz
outsl
cmp
pop
fistpll
es
push
pop
mov
or
and
mov
js
or
or
ljmp
jns
leave
cmp
mov
ss
rolb
jecxz
dec
lods
jg
outsb
repnz
jns
dec
lds
roll
or
loope
int
xor
clc
sub
dec
xor
and
add
add
mov
popf
leave
sub
sub
daa
add
fidivrl
pop
pop
cli
inc
addr16
insb
or
arpl
inc
jge
aas
xchg
bswap
pop
mov
or
repnz
fbstp
cltd
dec
xchg
xchg
cmp
mov
push
sub
lock
or
test
dec
insb
repnz
xchg
or
jmp
dec
mov
cmp
stos
repz
mov
jle
push
lret
dec
mov
in
mov
mov
xchg
xchg
insl
mov
stos
fs
sbb
sbb
pop
arpl
cmp
into
cmp
cmp
cmp
mov
cmp
pop
test
sub
hlt
iret
cli
addb
jbe
jp
pop
pop
out
sub
xchg
ds
xor
test
mov
nop
sbb
data16
in
push
mov
loopne
aaa
loop
mov
iret
ficompl
dec
jns
outsl
sbb
popa
test
jbe
popl
insl
push
jmp
or
stos
aas
and
pushf
insb
lods
insb
das
mov
jne
mov
xor
cmp
xor
pop
sti
scas
jg
repnz
xchg
jne
fstps
popf
jg
aad
popa
xchg
mov
pop
or
subw
mov
mov
dec
lea
mov
push
ds
je
pop
ss
arpl
xor
adc
and
push
xchg
cmp
cmpsb
outsb
loope
sub
lds
mov
sahf
ss
stos
lock
inc
fsubr
jecxz
shrl
or
mov
mov
pop
stc
aam
push
sub
pop
xchg
push
cwtl
idiv
es
jnp
je
arpl
jge
sahf
nop
inc
add
pushf
jecxz
popf
in
mov
scas
pop
addb
jp
or
jmp
lds
in
xor
inc
cmc
notl
gs
loope
mov
rcrb
pop
into
loop
ret
mov
leave
xchg
and
lods
and
push
xchg
test
mov
imul
and
xchg
jns
cmpsl
hlt
call
nop
add
cmp
add
dec
or
andl
jge
cli
inc
mov
mov
lret
xchg
xchg
lea
cmp
lret
jge
loop
push
ja
sub
push
pop
and
xchg
cmp
push
imul
mov
pushf
or
movsb
sub
mov
dec
adc
int
inc
icebp
mov
orl
fidivs
inc
sbb
gs
xor
or
or
adc
cmc
hlt
in
shlb
hlt
jle
pop
jo
call
cltd
and
push
add
xchg
xchg
test
inc
and
cmc
movsb
and
int
ja
pusha
sbb
mov
test
nop
les
lahf
cmc
arpl
bswap
pop
mov
orl
and
sub
loope
dec
push
iret
hlt
iret
sbb
loop
mov
push
xor
sahf
lcall
jle
push
or
outsb
jp
mov
push
ret
sahf
cmp
call
mov
dec
in
call
repz
lcall
add
xchg
or
shl
xchg
mov
hlt
lret
or
add
subb
jb
addr16
call
mov
mov
adc
cltd
shr
push
and
sbb
xor
test
cli
adc
mov
stos
and
sub
insl
cmp
bound
lret
lahf
cltd
xorb
pop
or
xchg
fptan
mov
xlat
repnz
inc
out
or
and
cmc
push
adc
gs
ss
mov
pop
mov
xlat
gs
dec
shrb
cmovno
mov
dec
push
mov
call
cwtl
adc
pushf
adc
dec
js
add
inc
popf
push
or
push
adc
lods
jns
int3
inc
flds
es
ljmp
jg
adc
mov
lods
xchg
cmp
fdivrl
sub
adc
outsb
into
jmp
sub
pop
sbb
push
jns
cwtl
jecxz
push
mov
or
jmp
and
andl
sbb
adc
stc
push
inc
in
inc
decl
mov
jne
xchg
shll
out
mov
and
adc
adc
fwait
or
fs
in
xor
or
in
push
or
pop
or
or
inc
sahf
dec
leave
or
mov
push
inc
mov
lods
dec
pop
inc
aas
sahf
pop
sub
xor
pop
rol
mov
mov
lods
xor
and
ds
xor
cmc
fisubrs
dec
outsl
pushf
jl
pop
pop
adc
ja
into
inc
popw
xchg
push
iret
or
mov
or
push
aas
imul
push
add
xor
jmp
and
jb
lahf
data16
pushf
cmc
test
xor
xor
int3
dec
outsl
xlat
cmpsb
inc
ret
jg
push
push
cmp
and
xorb
lea
sub
out
adc
jmp
icebp
pop
mov
fisttpl
jbe
xchg
shlb
sbbl
dec
xchg
lret
pmaxub
mov
fwait
cmp
pushf
jne
repz
or
insb
inc
pop
or
jne
cmp
adc
push
adc
pusha
inc
daa
inc
sub
pop
mov
enter
jno
lcall
and
repz
sbb
xchg
shrl
add
mov
jl
test
pop
test
xor
subb
jmp
shl
std
or
push
loope
scas
inc
mov
pop
dec
or
pop
dec
mov
fs
push
movsl
cld
loop
jns
push
jge
inc
sub
aas
and
and
sub
addr16
ljmp
push
jne
xor
lahf
dec
pop
lds
mov
stc
or
adc
lcall
xchg
cwtl
dec
shl
cmp
rclb
gs
aas
sti
es
loope
or
pop
xchg
or
xchg
xchg
hlt
pop
in
dec
xchg
cmc
or
ljmp
test
xor
mov
ds
sbbl
sub
fsts
lret
pop
lock
cmp
enter
lret
xchg
cld
scas
shrl
shrl
xor
leave
push
pop
icebp
mov
push
pusha
ss
cmp
mov
sub
aas
cmp
xchg
adc
iret
xchg
loop
and
out
xchg
jmp
gs
lcall
int
mov
andl
test
lods
gs
sub
test
pop
xor
mov
sub
push
cltd
push
adc
cmp
fdivl
pop
adc
aas
dec
mov
test
inc
rcll
xor
aam
cmp
arpl
lods
and
jecxz
mov
gs
fs
inc
lods
or
and
repz
fwait
stc
imul
pop
jne
pop
popa
cmc
xor
mov
push
xchg
loop
jae
aaa
cmp
daa
movsb
ja
call
out
push
aad
jb
pop
testb
ss
cmp
les
insb
or
push
jl
fs
mov
mov
push
pop
push
xor
pop
adc
mov
lock
mov
icebp
lock
int
in
arpl
imul
dec
cld
inc
enter
cs
fwait
loopne
jns
lcall
sbb
scas
sub
mov
jae
pop
call
ret
popa
pusha
jg
xchg
gs
pop
jbe
jb
cmp
loope
data16
dec
enter
or
inc
dec
add
adc
dec
mov
xor
int3
shll
ljmp
in
jns
enter
bound
dec
dec
bound
nop
lock
dec
imul
push
ja
rorl
test
scas
adc
repnz
nop
popa
mov
cmp
cmp
mov
lcall
aas
inc
negl
in
mov
movsl
dec
cld
scas
rcr
push
sub
scas
outsb
push
fildll
push
lret
xor
subb
bound
mov
insl
xor
lahf
test
inc
int
in
ds
jge
xchg
in
out
or
push
je
jp
mov
cmp
add
jns
pop
mov
jne
xchg
pop
pop
enter
push
lds
enter
insb
xor
dec
nop
dec
stc
jl
je
or
jne
mov
in
cmp
dec
mov
mov
mov
cwtl
xor
cli
and
pop
lods
and
sub
lds
cmpsb
xchg
adc
adc
ss
pop
stc
icebp
xchg
xchg
or
push
or
movsl
sar
add
mov
push
jbe
cmp
mov
push
fildll
inc
data16
cmp
jg
ja
pop
push
clc
je
sbb
cmp
mov
adc
add
shll
mov
or
in
mov
jno
daa
xchg
dec
inc
push
cmp
xchg
out
lret
push
pop
mov
jbe
inc
cwtl
dec
popa
cli
movsl
jns
loope
and
xchg
leave
sub
bound
cmp
testb
pushf
mov
jne
jmp
subl
call
ds
jae
mov
lock
aaa
mov
cmp
clc
and
or
xchg
cmp
ds
dec
shlb
arpl
xchg
mov
aas
sub
insl
cmp
aaa
xchg
fiadds
add
bswap
mov
sbb
mov
lds
push
jle
inc
cli
lods
push
repz
popf
stc
ds
jb
and
les
mov
xchg
out
jg
sbb
sbb
inc
cld
das
push
adc
sahf
fcmovbe
imul
mov
test
xlat
stos
jo
add
cltd
pop
mov
std
xor
cmp
or
jg
addb
xchg
leave
das
xchg
sbb
add
popf
stos
insl
mov
not
shll
pop
aad
inc
icebp
cmp
mov
stos
repnz
cwtl
lahf
lret
int
dec
xlat
adc
iret
pusha
adc
mov
outsl
adc
xor
decb
dec
movsl
dec
mul
jp
out
mov
into
ret
lods
out
out
outsl
cmp
rclb
jne
dec
push
bound
sahf
xlat
call
xchg
rol
mov
outsl
pop
or
ret
cmp
fstpt
rcrl
pop
xchg
inc
jae
das
lods
fadds
imul
stos
lret
adc
fptan
xchg
xor
sub
dec
stos
sbb
clc
je
data16
lods
push
stc
push
jnp
repz
mov
cltd
das
push
sub
repnz
pop
push
dec
stos
sub
adc
insb
popf
fcoml
add
add
fstl
add
loop
xor
nop
into
push
jmp
mov
jp
mov
inc
xlat
insb
xor
popf
adc
pusha
dec
mov
imul
pop
inc
mov
xchg
enter
lods
jp
xlat
sahf
cltd
mov
push
jno
jnp
xorl
negl
mov
pop
inc
test
outsb
aam
lods
fwait
mov
shll
cwtl
loopne
pop
fcmovb
fisubrs
mov
cs
sahf
loopne
push
xor
mov
repnz
popf
inc
and
xor
out
addr16
enter
cmpsl
filds
push
iret
cmp
xorb
sub
mov
mov
jmp
pop
pop
adcl
mov
mov
or
call
mov
addb
push
pop
push
xchg
jecxz
fwait
jnp
and
xor
sbb
or
fidivrl
cwtl
inc
idivl
mov
push
icebp
sbb
and
mov
mov
movsb
jecxz
popl
stc
xlat
pop
leave
xor
daa
lds
nop
inc
mov
sbb
lods
icebp
in
testb
inc
and
adc
lret
cmp
jbe
mov
cmpsb
inc
sti
fstps
fwait
enter
fbstp
add
mov
xor
xchg
out
xchg
cmp
movsl
ret
sbb
adc
js
lods
jae
add
int3
or
fs
out
mov
or
inc
lcall
pop
inc
jo
mov
inc
rep
xor
adc
bound
xchg
ds
xchg
cmp
mov
repz
lods
mov
fnstenv
scas
add
mov
gs
adc
jne
push
xor
fs
pop
inc
leave
cmp
mov
ds
mov
aad
test
inc
imul
jp
dec
loop
push
cmpsl
jno
in
lahf
xor
ret
mov
repz
mov
loope
clc
adc
ret
ret
xchg
lds
sub
jp
jo
add
xor
xchg
add
scas
testb
shll
pop
repz
xchg
inc
sbb
cmp
mov
loope
xor
or
cmp
xor
jbe
test
les
push
int
dec
lods
and
shrb
in
push
ret
out
mov
cld
cmp
jbe
imul
jbe
pop
es
rorl
sbb
outsb
or
aas
dec
jnp
loopne
cmp
mov
loope
test
push
sub
add
out
and
adc
movsb
fisubs
push
pop
adc
movsl
mov
enter
shr
lahf
nop
mov
pop
xchg
push
ss
mov
mov
add
shrl
jp
add
sti
cmc
cmp
jno
fisttps
aad
test
cmp
and
add
movsl
imul
mov
mov
lds
mov
xchg
xchg
fwait
push
cld
sbb
adc
or
int3
jbe
mov
pop
sub
loopne
lods
mov
leave
push
and
add
stos
jns
arpl
mov
pop
test
dec
scas
es
into
ficompl
in
rorb
addr16
add
bound
ror
sbb
ss
mov
inc
cs
jle
int3
mov
push
ds
mov
pop
jae
sub
add
sbb
sbb
je
push
jbe
outsl
add
or
out
icebp
mov
sub
fimuls
lahf
cmp
push
cmc
test
lods
mov
cmpsb
scas
pop
addb
sub
mov
xchg
adc
sbb
js
out
add
inc
jecxz
rorl
xor
and
xchg
and
insl
cmc
sbb
jl
mov
pushf
and
cmp
nop
cmp
xor
out
stc
xlat
pmaxsw
inc
pusha
js
jge
add
fwait
or
mov
mov
dec
jmp
sbb
or
lods
sbb
or
sbb
repz
inc
stos
and
xchg
ljmp
loope
mov
mov
xor
mov
sbb
call
push
and
jp
lret
pop
movsl
sub
push
cmpl
call
insl
mov
movaps
or
aam
mov
xchg
sub
movsb
jmp
out
imul
xor
fiadds
lods
mov
imul
push
xchg
add
es
lret
jo
and
jae
out
loopne
outsb
ss
sub
das
daa
cmp
push
aas
out
out
pop
movsb
fwait
out
and
insb
mov
dec
pushf
clc
jnp
mov
test
in
rolb
fisttpll
mov
xor
or
cmc
xlat
faddl
mov
push
sarb
shrb
test
test
or
mov
jl
xor
sub
arpl
xchg
pushl
mov
mov
mov
sub
shll
sub
xchg
mov
not
pop
and
nop
xor
mov
int3
sarb
lds
inc
jo
stos
lret
cmp
cs
mov
lret
or
jae
imul
mov
in
js
daa
xor
push
test
shll
add
call
test
xchg
fadds
das
sahf
adc
aam
mov
add
repnz
and
jmp
mov
nop
jo
iret
nop
pop
adc
fmuls
mov
shrl
movsb
stos
push
cmp
push
aas
pusha
in
fs
jge
pop
stc
inc
insb
push
inc
das
outsl
add
repz
gs
add
pusha
loop
mov
ja
add
cli
imul
fadd
jmp
inc
mov
cli
call
cmpsb
lock
mov
mov
mov
adc
out
subl
hlt
into
add
imull
mov
out
mov
cmp
push
jnp
jecxz
jnp
inc
scas
jno
mov
or
jns
jb
add
or
push
xchg
es
stos
jo
mov
icebp
add
add
and
adc
pushf
popf
lcall
sahf
ljmp
test
cmc
cmpl
sti
or
stos
pop
jae
dec
in
fistpll
mov
cmp
loopne
es
sbb
test
push
mov
push
cmp
stos
sub
mov
arpl
imul
lcall
pop
jecxz
xor
pop
inc
xchg
movsl
jmp
sub
cwtl
imul
xchg
or
or
lods
xlat
loope
lret
fs
push
inc
movsb
sub
lahf
lods
sahf
pushf
cmpsb
mov
push
mov
mov
xor
pop
pushf
testl
mov
fisubs
mov
ret
ret
mov
sbb
pop
lret
cmc
pop
pop
imulb
pop
pop
mov
and
xorl
mov
daa
sbb
aaa
push
mov
jnp
aad
or
fwait
inc
cmpsl
cmp
push
ljmp
hlt
pushf
push
int
and
mov
insb
out
cmc
jns
jmp
orb
in
cmc
popl
add
xchg
shl
cmp
imul
dec
cmp
or
outsl
add
or
xor
scas
xchg
xchg
jp
loopne
cmp
pop
lret
mov
mov
jl
mov
leave
xchg
mov
lods
xchg
rclb
cmp
in
int3
ret
ja
jl
inc
sbb
and
jne
sub
nop
jecxz
aad
xchg
repz
xor
gs
das
pusha
fdivl
xchg
fcompl
mov
adc
jb
xor
adc
shlb
xorb
cmp
sub
pop
fistps
sub
idivl
push
jnp
js
scas
adc
cld
mov
add
mov
insl
in
stc
pop
or
aaa
mov
ljmp
add
stos
pop
mov
pop
aad
mov
ss
cltd
data16
mov
es
push
fmulp
ffreep
rcrb
ds
es
sahf
fildl
xchg
out
loop
add
push
out
jge
mov
lds
pop
test
or
in
jo
pushaw
ret
leave
cwtl
dec
negb
outsl
sbb
fsubp
push
push
sub
movsl
cltd
arpl
or
rcll
and
dec
fistps
iret
pusha
ret
adc
jg
aas
popw
in
add
sbb
mov
sbb
mov
js
icebp
dec
push
pop
pop
es
lcall
fnstenv
ret
dec
sub
seto
inc
mov
mov
and
bt
out
xchg
dec
repz
xor
loope
mov
cmc
xchg
mov
mov
sti
test
adc
sub
push
xor
ret
mov
sub
incl
mov
popa
push
cli
mov
pop
pusha
movsb
jae
hlt
jae
in
sub
notl
mov
push
ds
xchg
les
cmc
pop
push
and
or
fidivl
or
push
nop
cli
dec
mov
stc
push
mov
subl
clc
rcrl
nop
sub
xchg
out
outsl
pop
pop
xor
adc
cltd
cmpsl
dec
imul
inc
adc
repnz
inc
loop
adc
xor
test
mov
push
es
das
std
imulb
outsl
sub
sub
shrb
cmc
sar
inc
push
mov
push
and
lods
mov
push
cmpb
test
insl
pop
mov
jns
or
xor
mov
jbe
and
push
repnz
loopne
insl
inc
adc
xor
or
push
sbb
popa
dec
lods
push
sub
mov
test
mov
test
icebp
mov
in
outsl
inc
faddl
cmpsb
imul
frstor
jle
jns
orl
dec
sub
stc
mov
xor
icebp
int3
mov
jo
mov
popa
cmp
push
dec
les
repz
das
lds
sbb
out
aas
cmp
push
stos
and
hlt
imul
inc
lcall
and
lock
mov
mov
and
adcb
imul
mov
jge
out
sarb
arpl
sub
pop
test
lods
out
loope
and
out
add
inc
pop
aam
shll
mov
xchg
mov
adc
arpl
int3
push
sbb
mov
or
jp
sub
cmpsl
hlt
out
mov
jecxz
lods
fdivrl
daa
insl
fbld
das
mov
cli
pusha
xchg
imul
roll
stc
jmp
or
jg
pop
cmpl
out
mov
out
sahf
pushf
push
xor
pop
ret
arpl
inc
mov
mov
outsb
jbe
cmc
arpl
fucomp
cmpsl
or
mov
jne
test
shlb
cmp
cmpsb
jae
fs
ffreep
leave
lea
push
mov
xchg
movsl
out
dec
test
mov
ret
mov
je
std
mov
mov
fsubr
pop
popf
in
bound
pushf
push
xor
cmp
shll
adc
inc
std
fisttps
daa
pop
in
push
popa
jno
in
push
notb
insb
ret
xchg
mov
cmp
lods
es
pop
cltd
cmpsb
mov
push
ja
das
dec
mov
jbe
adc
ljmp
sub
fisttps
pop
pop
pop
aad
fldl2e
push
sub
mov
and
aad
and
sbbb
adc
inc
fidivs
xor
mov
cmpsl
mov
pop
orb
pop
daa
and
inc
fcoms
inc
mov
out
dec
cmp
xchg
cld
cmp
fwait
xor
push
cmp
mov
cltd
mov
xchg
or
loop
sbb
add
ror
popa
lcall
sub
sbb
xor
stos
scas
mov
cli
and
ljmp
jb
das
cli
mov
cwtl
out
sub
push
xchg
filds
mov
outsl
mov
ret
lods
imul
shlb
adc
sub
dec
cmp
sbb
adc
nop
sbb
das
or
enter
adc
call
xor
mov
lret
test
adc
mov
icebp
cmp
mov
mov
sti
xchg
movswl
xchg
shll
fdivr
jmp
mov
sbb
scas
movsb
and
jae
jbe
mov
or
in
adc
test
imul
dec
mov
cli
push
mov
mov
out
aad
sbb
sbb
fcmovu
sbb
mov
dec
ja
cltd
sub
mov
int
add
pusha
xchg
scas
mov
jne
cmp
sbb
adc
and
mov
push
add
xlat
adc
pushw
ret
sarl
xchg
sub
cli
jge
dec
mov
or
loopne
cmp
mov
sbb
sub
mov
mov
stos
inc
xchg
jne
cmpl
cmpsb
orl
xchg
stos
sub
cwtl
mov
mov
das
push
test
call
movsb
scas
adc
push
stos
sbb
or
mov
sub
addb
sub
sti
fadd
cmpsb
scas
or
cmp
mov
cs
in
ljmp
push
xor
mov
push
pop
rcr
sbb
das
push
jp
sbb
or
pop
inc
data16
and
dec
cli
xorl
insb
sub
mov
jno
jbe
dec
std
sbb
xchg
aas
push
ret
xor
push
shlb
sbb
subl
inc
stos
ret
push
push
cmpsl
mov
clc
jbe
mov
and
scas
push
sbb
push
mov
imul
stc
inc
sti
mov
test
decl
and
fistl
outsb
sub
pop
adc
push
jecxz
ljmp
push
in
xor
jl
lahf
mov
ljmp
jg
and
sbb
mull
stos
enter
jb
addb
fnsave
mov
sbb
xchg
and
mov
cltd
mov
shll
rol
and
mov
pop
sbb
hlt
sbb
inc
fucomip
in
mov
cmp
xorl
jns
xchg
mov
ja
cwtl
cli
push
leave
xchg
mov
push
xor
push
cwtl
pop
cmp
xor
fadd
push
repz
outsb
insb
push
lods
test
xlat
mov
sbb
push
das
sub
mov
fmuls
push
das
setge
or
jecxz
daa
sub
mov
roll
jp
insl
rcrl
sub
push
cmp
xchg
push
and
fnstenv
popf
je
xor
push
pushf
push
push
ds
inc
push
jle
imul
cs
jno
out
orl
jp
inc
insw
cmp
sbb
jno
or
xlat
push
jg
movsl
imul
aam
add
push
mov
jecxz
ds
pop
loop
push
loop
out
xor
xor
loop
sub
dec
faddl
or
scas
daa
into
xor
loop
jno
pusha
mov
or
jno
dec
ret
repz
pop
xchg
fwait
or
cmp
push
inc
dec
dec
insb
mov
pop
inc
mov
sbb
lock
jmp
cmp
lods
add
cwtl
xor
and
cmpsl
mov
push
incl
adc
sub
adc
mov
dec
push
mov
pop
fnstcw
mov
lahf
insl
lcall
iret
hlt
loop
out
mov
mov
push
mov
mov
adc
loope
mov
cmc
jg
cmc
sub
fs
cmp
stos
out
jb
movsb
pop
inc
xchg
sub
mov
cmp
jge
daa
out
icebp
xchg
xchg
std
pusha
cmp
js
cmpsb
jbe
mov
xlat
xchg
aaa
aad
mov
push
pop
jp
fnstsw
stc
enter
cltd
add
icebp
int3
aad
das
sub
aaa
imul
sbb
loopew
ret
push
mov
cltd
loop
hlt
push
sbb
notb
pop
jo
out
mov
flds
aaa
loopne
enter
xchg
test
jo
es
or
insb
inc
cld
rclb
jmp
dec
fistpll
dec
ljmp
push
push
sbb
iret
dec
mov
ret
dec
adc
outsl
jnp
jecxz
jns
dec
cmp
pop
add
dec
imul
dec
jle
lcall
xchg
mov
jmp
fsts
cltd
call
stos
xorb
cmp
ss
add
sbb
test
pop
add
popa
ljmp
and
xchg
jb
sahf
out
pop
repz
aaa
call
pop
and
cwtl
mov
cli
dec
adc
cld
imul
mov
aaa
and
in
mov
pop
push
or
ss
push
pushf
cmp
pop
das
dec
sub
sbb
fidivs
not
push
jp
sub
loopne
enter
xchg
lods
shl
pop
hlt
fiadds
ljmp
sbb
adc
stos
cwtl
adc
lret
xchg
aas
jg
and
push
insb
sbb
inc
push
and
test
movsl
cld
test
hlt
jl
inc
sub
orb
mov
loopne
mov
and
fbstp
in
loope
popf
pop
cmp
and
lods
pop
lds
lock
mul
stos
mov
insl
cmpsl
test
mov
push
inc
add
sbb
adc
and
in
mov
push
dec
push
fnstenv
mov
adc
sahf
jno
pop
push
xlat
stos
daa
jb
inc
fs
sar
push
leave
jp
jb
jno
dec
inc
or
adc
lock
mov
jmp
xor
cmp
add
cld
mov
cmp
out
mov
mov
jns
mov
sub
aad
arpl
xchg
pop
leave
mov
fisubs
pop
push
int
cmpsb
pop
add
xchg
add
sbb
xchg
push
stos
xchg
lds
mov
bound
int
or
push
hlt
dec
popf
push
xchg
hlt
sbb
jmp
jbe
dec
xchg
in
add
dec
pop
hlt
jle
das
push
pop
ret
outsl
scas
ret
jbe
das
and
inc
and
mov
xchg
out
ror
vpavgw
enter
adc
cmp
or
gs
out
and
sti
xlat
enter
xchg
add
mov
sti
and
mov
jmp
imul
sub
mov
xchg
ficompl
cmp
push
out
pop
and
subb
mov
mov
mov
adc
or
pop
mov
shrb
mov
mov
fs
test
xor
adc
jns
mov
pop
and
mov
mov
sub
sub
stos
sbb
jb
push
cli
pop
push
pusha
add
xor
mov
mov
outsl
mov
enter
jge
mov
xchg
cs
sar
repnz
je
popf
mov
shr
popa
jmp
fs
pushl
inc
loop
int3
mov
mov
fadd
in
mov
pop
movsb
push
cs
dec
shl
imul
xor
mov
or
dec
in
cmc
test
adc
aam
loope
pusha
mov
xchg
ds
sbb
xor
xchg
scas
call
jp
add
xor
dec
clc
andb
scas
or
jp
cmc
inc
mov
push
repnz
es
test
dec
lea
xor
lahf
pop
pop
addb
add
xchg
in
pop
das
push
xchg
cld
in
ss
mov
push
out
push
lcall
insl
pop
jbe
push
inc
sbb
inc
pop
popa
shlb
clc
inc
jne
add
sub
push
shrl
mov
xor
loop
loope
xor
xchg
add
push
sub
mov
jbe
sbb
inc
ja
outsl
pusha
arpl
out
push
inc
jecxz
mov
xchg
pushf
lea
lea
push
jae
iret
mov
sub
bound
jl
push
push
pop
adc
pushf
and
cmp
das
add
pop
push
hlt
sarb
int3
push
test
mov
and
mov
cmp
in
test
xchg
mov
into
add
adc
into
pushf
or
mov
ficompl
sub
enter
cmp
add
dec
shll
pop
adc
hlt
pop
adc
aad
sbb
popf
xchg
jle
jg
xchg
cmpsl
rolb
push
inc
outsl
pop
inc
scas
shld
aam
dec
out
ror
jb
mov
adc
iret
push
xor
and
js
cmp
mov
loope
xor
pusha
mov
mov
cmp
or
pop
inc
add
out
pop
pusha
stos
leave
imul
call
adc
adc
sub
cmpsl
repz
mov
mov
and
in
addr16
inc
and
add
ds
shrb
test
adc
pop
pushf
pushf
inc
or
push
js
lcall
cmpsb
and
mov
inc
and
nop
jb
sarw
sahf
popf
pop
insl
jbe
lcall
jb
add
call
mov
das
lcall
insb
clc
fadd
cmc
push
adc
sarl
int
xchg
jnp
ss
or
shr
incl
jno
insb
cmc
and
scas
gs
sbbl
pop
movsl
outsl
xor
cmpsl
call
adc
add
mov
xchg
or
packssdw
mov
push
daa
rolb
or
adc
dec
add
cmpsl
and
mov
aaa
fs
dec
inc
clc
in
mov
enter
divl
push
cmp
adc
mov
mov
jnp
dec
fldenv
push
popf
ja
mov
mov
jg
sti
mov
mov
mov
iret
pop
rclb
add
pop
dec
push
into
push
popf
idivb
sub
mov
movsb
sbb
das
pop
pop
jb
sbb
es
dec
lret
jae
jnp
jb
mov
test
aad
out
popa
fiaddl
inc
popf
xor
into
jecxz
jno
xchg
pushf
jnp
push
cli
mov
cmpsb
es
andb
fisttps
je
fisubl
in
test
shll
inc
and
insl
sbb
call
mov
dec
repnz
push
adc
das
ljmp
adc
or
std
nop
mov
lods
lods
mov
rcrl
sbb
notb
fistl
in
mov
or
enter
cmp
sub
lret
das
pop
dec
inc
in
jle
xor
xor
lahf
pop
cmp
aad
adc
mov
pop
aas
or
popf
loopne
into
out
clc
js
push
sbb
push
inc
inc
ffree
inc
decl
sbb
inc
pop
dec
xchg
pop
enter
mov
cmp
pop
and
lds
orps
inc
jp
rcr
xlat
jge
clc
hlt
or
mov
mov
jmp
lahf
addb
inc
pushf
mov
mov
push
add
dec
lret
inc
push
sahf
mov
mov
jb
aas
mov
xchg
jmp
adc
add
loopne
adc
ds
fwait
cmpsb
loopne
jo
push
sarb
loop
dec
loop
fmul
jp
mov
mov
sub
and
sub
fsubrs
xchg
sub
pop
xor
aam
mull
push
mov
dec
cmp
cld
sarb
pop
jnp
int3
addr16
sbb
enter
out
add
mov
adc
push
outsb
fsubl
nopl
mov
and
testb
inc
jl
and
cmc
add
adc
loop
adc
int3
rcrl
sub
movsl
aad
cmp
adc
outsl
mov
fstp
js
inc
jbe
jl
adcb
jb
jno
jg
ret
jns
add
adc
xlat
dec
push
popf
and
add
lock
sbb
mov
sub
cmp
xchg
negb
cmp
mov
int3
dec
cmp
cmp
sbb
into
out
fwait
cld
stc
xchg
add
jle
aam
int
mov
inc
es
fldt
push
inc
loopne
jecxz
add
or
hlt
fcoml
cmp
int
mov
shr
shlb
les
mov
pushf
add
and
iret
inc
dec
jnp
inc
lcall
and
jge
add
or
jns
dec
icebp
cmp
pop
xlat
xor
call
cmp
scas
sarb
mov
mov
scas
cmpsb
insb
xchg
insl
icebp
fidivs
dec
push
lahf
dec
js
fsts
pop
lret
loop
and
das
adc
and
adc
ljmp
lahf
cmp
out
push
xor
negl
pusha
jb
ljmp
inc
ljmp
sahf
sbb
mov
mov
imul
lret
call
push
inc
mov
pop
fwait
loop
sbb
mov
push
andl
repnz
xor
pop
sub
sbb
loope
pop
mov
push
dec
loope
stc
inc
iret
add
sbb
and
sub
add
sti
pop
test
and
loop
ds
jmp
lcall
lods
imul
cmp
adc
out
mov
loopne
negl
and
mov
cmc
mov
push
aaa
jno
push
push
sbb
inc
icebp
test
push
lds
mov
out
dec
aaa
inc
les
subb
jbe
pop
xchg
int
aam
pop
adc
repnz
dec
dec
js
aam
iret
mov
fwait
andb
pmaxsw
xlat
subl
jl
lock
test
pop
icebp
outsl
in
inc
pop
add
lret
add
sub
mov
int
xor
orl
sbb
sbb
xlat
or
mov
incb
fdiv
mov
mov
es
adc
sbb
inc
sub
inc
in
sarl
sbb
cmp
mov
xchg
mov
jne
fs
mov
xor
jmp
shll
add
add
popf
push
jecxz
repnz
jmp
dec
std
jecxz
shll
movsb
jg
in
push
lock
and
inc
cmp
jbe
add
push
mov
pop
scas
out
das
push
push
test
dec
insl
jo
and
lea
push
stc
repz
loop
or
push
push
les
or
cmpsb
jns
data16
lods
mov
mov
pushf
andl
push
adc
cs
bound
ja
or
inc
out
outsb
mov
pop
test
mov
stc
xchg
sub
pop
gs
pop
cmp
push
xor
xchg
shrl
push
cmp
or
out
mov
cltd
mov
xor
mov
inc
icebp
test
xchg
scas
in
ja
mov
call
rol
pusha
arpl
dec
adc
and
xor
xchg
mov
out
xor
jge
faddl
in
add
push
adcl
filds
mov
js
cmpsb
jno
mov
clc
pop
arpl
mov
rorb
mov
mov
int3
xchg
repz
mov
and
in
mov
pop
out
mov
dec
push
mov
push
sub
fs
xchg
inc
mov
adc
iret
pusha
adc
xchg
push
scas
scas
inc
rcrb
mov
push
push
mov
rolb
test
cmp
or
lock
loop
stos
fisttpll
push
daa
sub
lds
icebp
rcrl
int
mov
leave
xchg
pop
dec
push
cmp
mov
mov
dec
lahf
fdivr
dec
addr16
mov
lds
jl
mov
dec
mov
fstpt
inc
jmp
vpmulhw
jo
cltd
test
xchg
or
lods
sbb
sbb
sub
sbb
cmp
into
pop
adc
sub
mov
inc
sahf
mov
and
pop
push
stc
and
out
nop
popa
loop
jae
lock
daa
aad
cmp
std
mov
adc
cwtl
pop
mov
dec
aam
movsb
pop
mov
push
jnp
inc
insb
mov
mov
xor
adc
outsb
clc
test
xchg
jne
faddl
add
aam
stos
popf
add
push
scas
cs
push
adc
rorl
mov
fwait
xchg
vmwrite
hlt
jle
hlt
repz
filds
js
pop
xchg
mov
sti
test
jl
in
pop
cmp
cmpsb
mov
sub
bound
test
and
push
subb
fbstp
jecxz
jl
cs
and
sbb
sub
dec
int3
bound
jnp
loop
mov
movsb
add
lods
sbb
test
mov
push
push
mov
mov
fistl
ret
daa
clc
in
out
cltd
flds
fnsave
in
insb
movsb
jg
jb
jmp
fldl
lock
in
and
scas
inc
nop
or
mov
pop
ret
in
mov
push
sarl
mov
sub
jne
stos
sbb
pop
pavgw
int3
enter
adc
xchg
cmpsb
test
and
imul
fidivl
loope
push
test
dec
repz
pop
jnp
or
and
fdivrl
pop
and
stos
adc
jae
test
mov
and
inc
shlb
mov
or
cmpsl
lret
imul
aas
shrl
popf
in
bnd
mov
dec
sub
icebp
es
pop
inc
xor
into
jnp
dec
jp
addr16
int3
cmp
add
sbb
rcrl
pop
add
bound
pop
clc
xlat
xchg
rcr
adcl
and
gs
dec
lock
fldcw
mov
stos
xor
mov
pop
xor
movsl
in
pop
sub
orl
daa
data16
mov
mov
jmp
push
call
sbb
jl
decb
outsb
lods
fwait
mov
dec
mov
dec
out
jl
mov
jo
int3
fdivs
pop
jae
pop
scas
std
jno
insb
xor
jp
inc
cmc
repz
test
call
mov
cmp
cli
arpl
cmp
mov
push
and
sti
int3
push
pop
std
outsl
lahf
push
and
lcall
cltd
fisttps
scas
in
and
lea
loopne
mov
jl
out
jo
fs
out
in
test
dec
or
pushf
and
sub
jge
push
mov
movsb
push
je
jns
insb
ljmp
lret
repnz
push
mov
inc
out
addr16
pop
stc
int3
testb
push
mov
xlat
xor
xchg
mov
into
mov
test
in
mov
lret
push
xchg
mov
mov
push
in
js
adc
mov
cs
push
out
imul
les
daa
insb
inc
push
stos
mov
xlat
movsl
jl
mov
jae
cmp
jne
mov
xlat
jp
cmp
imull
push
popl
jne
pop
pusha
cwtl
xchg
pop
div
std
mov
mov
mov
and
lods
push
inc
mov
jne
mov
lret
or
iret
sbb
push
mov
xor
repnz
scas
imul
or
sbb
pop
test
dec
cli
mov
jb
insl
jno
inc
mov
js
daa
divl
inc
int3
xchg
jp
pop
push
xor
iret
cld
mov
sbb
xlat
or
and
shr
pop
adc
mov
mov
and
dec
dec
ret
inc
adc
dec
xor
ljmp
fcoml
pop
add
mov
add
icebp
lea
imul
add
hlt
pop
xor
jge
dec
adc
fisttpl
iret
push
cmp
sbb
loope
aas
orl
jno
sub
fpatan
and
xor
js
pop
xchg
mov
cmp
je
jg
sub
ret
popa
pop
out
pop
cmp
or
and
das
mov
push
mov
in
lods
stos
xchg
pop
sub
addb
arpl
pushf
test
inc
cwtl
aad
and
push
push
xor
sub
inc
and
lea
adc
daa
jae
movsb
outsb
mov
and
xor
into
subl
sub
lret
adc
insb
jbe
adc
inc
test
xchg
mov
sahf
add
stos
repnz
push
imul
es
hlt
inc
out
inc
test
mov
dec
lcall
addl
test
int3
xor
push
push
lods
movsl
mov
adc
xchg
cmp
push
insb
dec
inc
js
sti
inc
daa
mov
scas
add
pop
notb
mov
inc
push
aam
lea
inc
lea
xor
adc
ljmp
adc
add
ret
ja
xchg
daa
mov
mov
pop
cmpl
scas
cmpsl
jl
adcb
xchg
aam
xor
aam
test
jle
test
sub
inc
jl
inc
pop
and
dec
shll
hlt
sbb
sbb
aaa
fildl
movsb
ret
jg
cwtl
push
sub
mov
into
aas
imul
sbb
lcall
test
or
lods
inc
dec
les
movsb
push
fmull
jge
adc
pop
or
jns
iret
jae
jb
cmpsb
jne
xchg
imul
xlat
lds
loop
movsl
sub
outsb
pop
xor
sub
out
fs
cvtps2pd
and
or
lods
jns
mov
pop
lret
leave
xchg
and
into
mov
add
push
pop
bound
nop
mov
jae
push
mov
cmp
or
mov
cwtl
je
in
shl
inc
mov
cmpsb
mov
sbb
adc
jge
mov
xor
arpl
stc
mov
push
push
push
aaa
fs
adc
push
push
jbe
sub
mov
jg
and
insb
testb
insb
testb
scas
cmpb
adc
pushaw
adc
iret
cmp
repnz
inc
mov
outsl
stc
push
inc
out
out
aaa
in
dec
lds
add
push
filds
lcall
dec
leave
or
lret
inc
add
lret
test
je
push
fadd
jnp
dec
push
push
xor
out
das
sahf
push
mov
in
cmp
aaa
clc
out
adc
sbb
sbb
mov
inc
rol
jg
mov
mov
adc
jmp
pop
cmp
add
mov
popf
inc
inc
loopne
dec
repnz
pop
xchg
push
sub
adc
or
jmp
mov
inc
cmp
pop
mov
xlat
mov
mov
sbb
loope
sub
inc
xchg
jg
mov
rcll
push
les
ds
and
adc
lahf
sahf
lret
adc
jo
sub
push
jecxz
or
mov
ds
push
repnz
mov
imul
pop
repnz
insl
push
mov
test
xor
jge
pop
and
lock
jbe
dec
fmuls
xchg
in
xchg
jo
popf
dec
cmp
inc
nop
es
mov
or
inc
outsb
lret
pop
sub
xor
cmp
pop
and
das
inc
out
cwtl
hlt
pop
rolb
mov
jne
aas
loope
lods
mov
jno
insb
pop
int3
adc
sub
add
xor
sub
jbe
pop
pop
sbb
insl
addr16
push
out
test
fimull
pop
ds
movsb
test
fwait
out
mul
loopne
sub
pop
out
mov
cmpsl
sub
stos
or
mov
sub
xchg
rorb
sahf
inc
xchg
push
stos
cld
pop
mov
jl
jp
xor
data16
fisubrs
ljmp
pop
pop
cmp
push
sahf
sti
ljmp
adc
sbb
mull
inc
in
pushf
dec
outsl
add
mov
stos
push
aam
push
fwait
inc
or
mov
mov
lcall
scas
fmuls
pop
or
pop
sub
sbb
pop
xor
mov
and
int3
aam
adc
fcompl
pop
cmp
push
sti
fwait
mov
test
add
xchg
mov
inc
cmc
or
pop
andl
mov
fdiv
fists
es
push
push
in
rol
f2xm1
popa
mov
daa
pop
ret
mov
fsub
fisubs
clc
cltd
push
add
ffreep
mov
xorb
xchg
jbe
jmp
movsl
and
mov
mov
sbb
mov
leave
outsb
add
sub
cwtl
addr16
dec
mov
cmp
ret
mov
fcmovnb
mov
push
out
xlat
pusha
div
ja
adc
push
dec
mov
fs
jle
loopne
mov
inc
int3
jns
jo
dec
les
jne
sbb
push
jae
pop
xchg
lods
flds
int3
jne
divb
pop
xor
out
mov
ss
das
push
push
cmp
xlat
sub
loop
push
test
sub
cmc
jmp
iret
xchg
nop
mov
pop
cmp
xchg
dec
mov
fsts
inc
in
int3
inc
jnp
push
mov
push
jne
cmp
movsb
push
xchg
xorl
cmp
xchg
sbb
iret
push
ret
lods
fsubs
jg
and
sbb
addb
outsb
loope
push
sti
nop
push
cs
mov
sbb
mov
enter
pusha
std
std
divps
ret
jecxz
pop
leave
lret
daa
test
sbbb
daa
or
jnp
push
sahf
icebp
imul
mov
enter
xor
in
adc
test
mov
add
idiv
mov
imul
scas
les
pusha
xchg
xor
mov
add
jecxz
fildll
nop
mov
fcoml
xor
push
shrb
lea
daa
lcall
sbb
lods
push
popf
pop
test
or
pop
pop
push
and
subb
repz
ret
loop
and
cmc
dec
enter
xor
test
xor
loop
sub
icebp
popa
dec
cltd
in
or
adc
mov
xchg
push
repnz
outsb
add
aam
subl
test
fistl
xchg
sub
test
test
icebp
cmpsb
add
mov
inc
pusha
pop
scas
jbe
pop
repnz
add
pop
xchg
cmc
leave
jecxz
sbb
ret
and
test
xorb
push
sti
aam
jb
cmpsb
lret
jbe
fcomps
cmpsb
les
inc
out
imul
sub
fwait
das
and
cmp
xchg
popf
xchg
lds
mov
imul
inc
or
jmp
pop
xchg
je
mov
mov
pushf
jns
mov
jle
sub
in
les
mov
dec
inc
mov
lods
popa
andb
adc
jp
fmuls
je
jnp
rep
jae
or
cwtl
mov
push
lret
rolb
daa
int
fbld
dec
push
jno
and
out
or
adc
mov
jp
push
push
sbb
cltd
repz
scas
arpl
lea
jg
add
fwait
push
movsb
pop
lods
aam
loopne
ljmp
inc
cmp
fstpl
fistl
xor
call
add
mov
jp
push
cmc
jge
outsb
lds
sti
jecxz
xchg
outsb
ret
mov
adc
adc
arpl
into
ret
scas
xchg
pusha
and
jmp
jae
xchg
stos
dec
call
addr16
movl
out
roll
xchg
test
xchg
dec
add
out
xor
loop,pn
pop
movb
mov
call
addr16
cmp
mov
adc
adc
lods
adc
aas
sti
sbb
mov
into
mov
int
int3
enter
pop
xchg
push
stos
sarb
or
pop
dec
arpl
ret
add
scas
loopne
mov
mov
fs
subb
mov
mov
mov
jns
lods
sbb
aad
cmp
les
or
lret
lods
shlb
pop
fs
je
cmp
sti
stos
jg
jb
xor
lock
imulb
add
pop
xchg
adc
repnz
ret
cltd
in
inc
jmp
add
jbe
ret
fucomi
test
cmp
jne
test
or
pop
or
mov
fstpt
inc
pop
mov
fdivrs
xor
mov
insb
sub
xor
dec
mov
dec
pop
js
push
add
inc
sub
pop
fimuls
sbb
pop
mov
mov
mov
xor
mov
xor
arpl
pop
xor
enter
cmpsl
pop
inc
fstpl
fadds
dec
aaa
xchg
pop
push
xor
jl
cs
gs
fdivr
std
jnp
and
and
mov
mov
push
nop
imul
add
xchg
push
xchg
xchg
repnz
add
lret
and
test
inc
sub
int3
je
leave
icebp
mov
mov
icebp
adc
mov
and
in
adc
leave
daa
sti
dec
and
sbb
jmp
pop
insb
pop
enter
jae
cmp
sbb
xchg
or
mov
mov
fldcw
lods
sahf
jno
mov
xor
insb
incb
insl
mov
addb
loopne
sarl
mov
in
jns
mov
mov
test
mov
lea
je
jmp
adc
mov
adc
in
xlat
adc
lods
daa
adc
adc
leave
fsubr
bound
add
mov
clc
jo
cli
sbb
loopne
in
mov
dec
ljmp
inc
xor
inc
xchg
je
jecxz
lock
push
sub
add
jg
mov
loopne
jns
div
test
pop
mov
fmuls
dec
sub
iret
xor
in
int
dec
ret
pop
inc
jns
pop
mov
xchg
aas
insb
cmp
dec
cmp
cwtl
into
in
xchg
inc
movd
pop
pop
cltd
mov
or
pop
xchg
arpl
ss
lods
mov
cmpsl
es
jnp
mov
popaw
ja
cmp
xchg
sub
jg
push
jl
outsl
scas
shlb
xchg
cmp
test
pop
fisubrl
call
movsb
insb
push
leave
repz
cli
pop
fwait
or
pop
mov
dec
aas
leave
cld
dec
cmpsb
or
shl
arpl
jg
adc
mov
nop
mov
dec
repz
adc
mov
or
jno
mov
sub
insb
ss
sub
sti
pop
lods
ljmp
cmp
xchg
insb
mov
flds
cmc
push
mov
icebp
fcomps
out
mov
pop
hlt
xchg
insb
decl
adc
sub
jge
rcll
mov
aad
loop
push
nop
or
pop
or
rcll
loop
cmp
mov
adc
repnz
daa
lods
fistpll
pop
mov
pop
pop
and
jne
cwtl
pusha
add
rolb
imul
in
mov
divb
and
mov
xor
xor
cld
popa
xor
jbe
mov
sub
mov
add
mov
jnp
jmp
dec
mov
imul
dec
cmp
in
test
subl
jmp
and
imul
sbb
pop
push
scas
sub
jle
dec
rorl
adc
out
jnp
subb
push
xchg
xchg
push
and
adc
cmpsb
movsl
pop
cld
cltd
call
push
mov
lcall
call
test
bound
in
data16
lds
clc
sarl
aam
xchg
cli
cmp
push
and
mov
jl
mov
lods
push
or
add
and
mov
lds
cs
outsb
push
jb
cmp
jecxz
mov
rclb
imul
repz
lds
sub
mov
cltd
dec
outsl
pop
sbb
ds
in
xchg
push
arpl
sub
mov
iret
fstpt
xchg
cmp
rorb
xor
fwait
shlb
cmp
rclb
and
adc
jmp
jl
mov
dec
cmc
lret
jl
add
xor
jl
sub
push
sub
inc
out
not
sub
scas
loop
mov
and
mov
inc
jnp
mov
fidivrl
mov
outsl
nop
and
pop
and
push
jb
aam
mov
int3
test
fwait
lods
gs
test
cld
aaa
std
jp
scas
loop
scas
out
mov
sti
push
bnd
addl
insb
sbb
mov
cmpl
aaa
out
and
aad
mov
adc
rcrb
mov
fldt
rcll
add
mov
add
pop
mov
pop
lcall
cs
push
adc
repz
xor
loopne
iret
mov
out
not
fdivr
xor
cltd
mov
test
add
out
and
test
mov
into
cmp
call
in
cmp
mov
or
push
popf
xchg
loop
xor
outsl
out
movsb
imul
add
rcrl
cmc
adc
adc
movsl
dec
stos
sub
loope
call
scas
ds
cmp
sbb
shlb
fidivl
jge
scas
imul
cld
sbb
cmp
xlat
fnsave
xchg
fwait
cmp
mov
mov
lcall
in
inc
jg
adcl
lds
fiaddl
andl
sbb
jge
in
inc
add
pop
subb
adc
sub
inc
or
xorb
pop
add
cmp
clc
sub
xchg
ja
adc
dec
push
sbb
into
xchg
lcall
inc
bsf
in
push
xchg
gs
ss
pop
lods
aad
and
sahf
sbb
stc
xor
dec
cli
sub
lods
jb
sub
out
jecxz
lret
sbb
and
ljmp
mov
push
loope
cmp
xchg
mov
repz
repnz
lea
rolb
inc
mov
push
jmp
cs
gs
rol
dec
fnstenv
je
mov
int
sub
loopne
sbb
jmp
lret
int
movsl
int3
xor
push
mov
aas
inc
pop
lock
mov
sub
aam
xchg
nop
xchg
in
xchg
cs
inc
mov
push
addb
dec
jns
in
mov
aam
dec
lret
jns
mov
ret
push
mov
cmp
stos
add
inc
or
sub
pop
out
jecxz
fwait
cmp
data16
add
jae
into
fldt
inc
mov
mov
jecxz
mov
insb
mov
cmp
insl
sbb
ficompl
into
cmp
mov
sbb
jmp
adc
add
sub
inc
lahf
sub
icebp
shl
in
pop
mulb
leave
pop
dec
sbb
rol
fsubrs
or
sub
loop
dec
dec
mov
push
sbb
test
xchg
loope
push
icebp
std
mov
xor
jg
and
xchg
jmp
imul
cmpsl
rcll
xor
pusha
imul
loope
xchg
ljmp
imul
pushf
out
jg
push
jne
stc
mov
mov
or
sub
inc
ud1
push
jnp
inc
int3
xchg
setp
push
cmpsb
push
in
test
add
jns
mov
mov
pop
add
lret
cs
fwait
mov
dec
pop
jae
gs
mull
jg
lcall
int
sbb
dec
test
loop
adc
sti
add
shld
push
in
ss
outsb
shll
stos
xor
sbb
jns
dec
inc
sub
inc
mov
dec
pop
mov
jp
or
and
push
cmc
mov
arpl
icebp
xchg
ret
mov
mov
mov
add
les
jae
mov
fwait
pop
daa
mov
or
cmpl
lcall
fstpt
ficoml
or
sbb
mov
mov
leave
pop
or
dec
dec
popa
lret
loopne
sub
push
dec
repz
xchg
jbe
enter
aad
stos
loopne
push
cmp
sub
push
loop
cmp
xorl
mov
ljmp
cmpsl
arpl
push
addr16
fs
push
mov
fstpt
sbb
inc
loopne
and
sarl
aam
cmp
pop
nop
push
ds
inc
pop
stos
rcll
mov
test
pop
int3
jbe
sbb
or
sbb
xchg
ss
or
idivl
inc
pusha
rol
jne
cmp
xchg
in
cmp
xchg
scas
icebp
and
mov
dec
add
in
pop
test
dec
out
cmpsl
cmp
popf
and
xor
jp
jns
pop
jge
jecxz
lret
xorl
xor
mov
rolb
mov
sub
enter
xor
sub
movsl
sahf
sbb
adc
sti
sub
mov
xchg
push
in
push
fstpt
jnp
push
ret
mov
or
mov
and
fisubs
bnd
lret
or
jne
xor
or
lahf
jne
scas
push
movsl
mov
out
test
loope
cmpsb
sbb
into
mov
inc
out
test
or
fistpll
ss
push
inc
cmp
xlat
std
add
and
inc
lret
lock
add
std
aas
dec
sub
dec
jns
enter
loop
mov
loope
jnp
cmpb
add
pop
jp
jns
mov
lea
pop
stos
shr
push
xchg
or
fdivp
insl
sbb
lahf
mov
and
sbb
sarl
jns
ljmp
lds
or
lret
pop
or
out
mov
dec
sar
cli
or
sbbl
mov
xchg
ljmp
icebp
sub
xchg
pop
jbe
xchg
jge
lret
aam
or
mov
jecxz
pop
push
inc
out
loop
pop
cs
sbb
inc
xchg
xor
or
cmp
and
jle
aas
nop
in
sub
mov
ss
cmpsl
test
pushf
cmpl
push
sbb
movsb
push
mov
cmp
adc
lret
fdivp
inc
rclb
les
addl
sbb
cmpsb
fidivl
lret
stc
and
test
add
sbb
cmp
mov
stos
jp
ljmp
jge
xchg
fnstcw
inc
enter
mov
mov
into
and
test
xchg
xchg
loopne
mulb
push
mov
pop
sbb
push
mov
xor
cs
and
fiaddl
push
sub
aaa
dec
or
mov
mov
cmp
pop
jle
mov
ds
in
push
xor
fldl
adc
lods
in
sbb
sbbl
adc
sub
fsts
inc
bnd
xchg
fiadds
cmp
in
pushf
sbb
pushf
jnp
xchg
rdrand
ds
cmpsl
or
xchg
inc
mov
push
scas
andb
iret
push
test
dec
mov
cs
lock
push
xchg
rcr
ss
cmp
pop
out
cld
xchg
rcr
jb
push
in
enter
mov
and
mov
sub
cmp
mov
orb
cmp
repnz
fstpl
aam
sbb
add
clc
popw
jns
adc
cltd
jl
and
shl
stos
lret
jge
loop
movsl
test
mov
aad
dec
and
outsl
inc
or
push
cmp
push
pop
enter
cli
mov
pop
jle
mov
and
adc
jb
xor
fstpl
addl
fs
adc
test
ja
les
or
out
cmc
cmp
jae
push
aam
adc
movsb
pop
push
std
mov
xchg
jbe
aaa
adc
fwait
lods
loop
imul
dec
mov
mov
dec
nop
test
jno
cmp
bound
sub
aad
repnz
dec
out
test
dec
xor
cmp
popf
shlb
and
xor
xchg
orb
mov
jge
lcall
shll
hlt
xor
add
cwtl
xchg
jl
hlt
insb
pop
lret
push
pop
inc
int
jnp
les
roll
pushl
or
repnz
es
sub
xor
cmpsb
push
stc
lea
in
and
stos
in
xchg
add
pop
and
jae
lock
jle
scas
or
sub
jg
test
pop
fimuls
mov
bound
jo
mov
divl
dec
mov
mov
hlt
mov
stos
pop
ljmp
andl
cmpsb
sbb
push
mov
push
mov
mov
push
push
or
cmpsb
jns
push
mov
cmovo
fiaddl
fldt
jg
rorl
imul
aaa
inc
dec
insl
lahf
cli
lahf
mov
in
push
ja
dec
dec
mov
sbb
adc
xchg
lods
cmpsl
lock
gs
inc
sarl
popl
add
mov
jb
cmp
outsl
jl
jl
jnp
jo
xchg
aas
jmp
lahf
out
sub
mov
das
dec
lahf
fldt
enter
sahf
jge
imul
cmp
test
dec
pop
repnz
pop
jnp
push
cs
adc
jg
push
xor
movsl
inc
rclb
adc
aam
mov
sub
inc
popf
cltd
jp
or
dec
rcrb
ds
enter
test
fidivrl
mov
in
dec
andb
pop
setl
xchg
mov
or
shr
cli
pop
mov
fildl
or
mov
stos
movsb
hlt
pop
cwtl
stos
mov
mov
xor
scas
mov
jmp
lock
jae
repnz
frstor
ret
jg
arpl
lods
in
pop
comiss
roll
pop
and
sti
mov
mov
xchg
xchg
adc
nop
lcall
adc
pop
pop
mov
fdivs
jecxz
outsb
pushf
inc
jns
jbe
pop
jbe
dec
sub
outsb
sub
push
out
das
ljmp
icebp
mov
imul
repz
sbb
mov
int3
testl
lcall
sbbl
movsb
push
xchg
and
rorl
stc
cltd
lret
lea
ror
mov
adc
push
xchg
push
cwtl
ss
lahf
cmp
out
adc
popa
fsub
shrl
imul
xchg
je
pop
scas
jmp
cmp
mov
jge
ja
nop
xchg
or
stos
cmp
insb
mov
xchg
gs
cmc
jb
jns
cld
xorb
mov
jp
in
pop
in
mov
xchg
fstpt
rol
shl
cld
lock
dec
out
cmp
and
mov
test
push
cmp
push
inc
popf
repnz
mov
cmpl
int
mov
fnsetpm(287
scas
fldl
pop
mov
jmp
mov
fimull
push
cmp
add
in
in
xor
mov
lahf
lods
jge
out
int3
stc
sub
dec
mov
dec
jo
pusha
dec
pop
add
data16
fadd
lret
cmp
sbb
dec
mov
icebp
jb
pushf
pop
jl
xor
xor
lret
pop
xor
negb
mov
push
cwtl
ss
lahf
cmp
out
adc
pop
fsub
shrl
imul
or
cmp
inc
xor
daa
int3
mov
mov
or
pop
in
lret
jbe
xchg
jne
in
cmc
rcrl
or
push
mov
roll
pop
cmpsl
loopne
mov
and
cmp
cld
push
mov
popa
sub
shlb
leave
xchg
rcrl
dec
lahf
mov
push
jl
cmp
push
ds
addr16
mov
repnz
push
mov
mov
xor
push
inc
fiaddl
insl
add
inc
cmp
or
imul
or
mov
dec
push
cmc
mov
jmp
pop
jl
fwait
xor
out
mov
dec
popf
aad
in
das
mov
jne
inc
fwait
mov
xor
lret
lods
push
rcr
jmp
in
leave
xchg
fisttpl
pushf
push
mov
arpl
cwtl
movsb
enter
add
or
xor
or
int
sbb
fldcw
outsl
in
enter
xor
cli
mov
xchg
jl
and
out
test
outsl
fwait
mov
imul
cmp
xor
sbb
jecxz
fsubrl
fimull
cmp
jp
pop
sbb
lahf
ja
mov
xchg
inc
pusha
movsl
hlt
popa
inc
adc
pop
mov
scas
pop
ds
lods
sub
clc
and
iret
jne
xor
cmpsb
outsb
jne
or
add
mov
xchg
sahf
sti
xor
aas
movsb
icebp
xchg
addl
xchg
mov
mov
sbb
push
data16
sub
xchg
test
jnp
push
aam
mov
pusha
mov
xchg
or
pop
lahf
jno
mov
in
call
lfs
pop
out
mov
xchg
add
shrb
push
rorl
repz
dec
int3
shrb
test
fmul
xor
xchg
frndint
mov
mov
sbb
mov
lahf
jl
in
nop
int
lcall
inc
sbb
jbe
stos
enter
inc
out
dec
aaa
or
daa
daa
cmpsl
mov
pop
std
clc
rorl
xchg
push
stos
clc
inc
mov
sbb
flds
imul
cmpsb
iret
xor
jecxz
xor
out
pcmpeqd
inc
pop
add
enter
mov
dec
cmp
push
cmp
sub
mov
outsb
int
mov
xchg
fisttpll
add
insb
insb
dec
hlt
jne
sub
jo
cmp
mov
imul
sub
pop
xor
and
rcrb
cmp
aam
add
adc
xchg
out
pop
loope
sbb
and
and
push
mov
ja
jb
fcmovnb
cmp
or
fisubrs
sbb
xor
rolb
fcoms
xor
pop
dec
sbb
pop
ret
xchg
adc
stos
dec
sbb
daa
call
mov
rclb
je
loop
inc
lods
flds
sarl
mov
push
mov
addps
jge
lods
aam
lods
ret
loop
or
test
test
sti
scas
pop
push
dec
jle
xor
inc
out
shrl
fwait
cmp
cmc
add
call
outsb
push
jle
dec
jmp
repnz
dec
mov
pushf
sbb
pop
shrb
cmp
adc
mov
loope
movsl
cs
xchg
mov
cmp
or
and
add
cltd
pop
rcl
jo
mov
insl
outsl
or
fwait
rclb
gs
mov
mov
nop
fdivl
enter
or
je
sub
pushf
xchg
movsb
mov
dec
jmp
hlt
aas
jne
mov
shlb
mov
add
gs
sbb
int3
cmp
jb
sbb
cltd
mov
mov
insb
fistpll
sbb
sbbb
rcll
xchg
adc
sub
shlb
and
insb
fmul
push
mov
mov
das
and
out
cmp
rcrl
pop
test
ds
negl
ss
xor
jg
mov
cs
dec
push
mov
les
cld
push
xchg
jmp
dec
outsl
xchg
and
jl
das
pop
into
sub
xchg
lea
mov
inc
cmpsl
imull
pushf
and
hlt
sub
jg
xlat
jmp
loopne
sub
or
push
in
es
mov
sbb
cmp
inc
aaa
lods
ds
adc
lods
mov
jp
push
sbb
pop
data16
es
jne
leave
mov
sub
cwtl
xchg
push
push
xchg
pop
pusha
movsb
das
pop
mov
lock
sbb
inc
pop
ret
mov
push
loopne
js
sbb
out
dec
sub
jg
mov
mov
movsb
lds
jae
and
cwtl
scas
cwtl
mov
aas
xorb
xor
inc
jne
mov
decl
lret
ljmp
mov
ret
push
push
cli
mov
ret
dec
sbb
inc
inc
mov
jae
mov
adc
pop
ficompl
icebp
pop
mov
sbb
cwtl
shll
mov
or
cmp
add
or
ds
mov
xchg
push
and
dec
daa
push
inc
enter
lds
mov
repnz
ret
adc
sbb
daa
jecxz
mov
loopne
xchg
jae
out
add
mov
mov
mov
cli
add
aad
adc
stc
fiaddl
mov
aad
repz
jecxz
out
mov
adc
push
lods
into
sub
subl
test
sbb
mov
sub
insb
frstor
cmc
jmp
pusha
icebp
jp
push
mov
test
cmc
mov
and
in
inc
mov
aam
lahf
push
sub
xor
loop
leave
popf
add
daa
xor
push
adc
ret
mov
stos
dec
mov
mov
fcoms
lods
jecxz
jns
xchg
es
xchg
pop
mov
ljmp
nop
orb
xchg
jecxz
orb
aaa
add
loope
sahf
xchg
pop
repz
add
xor
repz
mov
lds
addb
sbb
sub
jl
pop
out
fsubr
cmp
les
es
in
mov
jp
fmuls
mov
ret
into
mov
int3
jecxz
lods
in
jecxz
sbb
daa
lahf
jge
daa
pop
xor
push
mov
popa
jae
frstor
push
pop
lahf
adc
shll
sbbl
fnstenv
sbb
mov
shlb
insl
imul
pusha
cmp
mov
mov
xchg
aaa
and
stc
inc
pusha
add
mov
lods
jbe
jp
mov
stc
repz
dec
adc
sub
mov
xchg
adc
int3
mov
cmp
jns
ss
fildll
and
std
xchg
xchg
lock
mov
out
shrb
xlat
pushf
scas
mov
negb
push
sub
movsl
mov
sub
inc
cmp
repz
cmp
imul
aas
inc
sarl
sub
les
jnp
mov
dec
jecxz,pn
cmpsb
jo
jnp
jmp
pop
jnp
jl
jp
or
dec
std
call
mov
push
or
xorl
shlb
insl
xchg
fistl
mov
xor
pop
mov
lock
aas
push
movsb
imul
pop
or
out
mov
sbbl
fmuls
pop
inc
mov
mov
ficomps
sub
ret
in
mov
pop
xchg
into
fwait
aam
mov
or
pop
push
xor
cltd
pop
addr16
xor
push
or
lahf
retw
cmp
popf
jae
fwait
mov
out
int3
outsb
sub
cmp
das
jle
inc
xorl
pop
sub
mov
lock
dec
cwtl
and
fiadds
and
into
repz
push
lret
aad
imul
mov
inc
aad
out
jns
aas
push
and
xor
iret
mov
sbb
inc
mov
push
cltd
xor
pusha
push
and
scas
lods
int3
lock
inc
push
ljmp
loope
sub
leave
mov
shlb
int
inc
cmp
adc
pop
mov
pop
int3
mov
dec
push
insl
mov
fwait
test
in
pop
xchg
cmp
jmp
and
cli
mov
lods
push
sbb
das
movsl
push
das
mov
daa
jbe
mov
sbb
xchg
sub
cwtl
add
mov
cmp
mov
sub
rcl
sub
pop
in
fldl
ljmp
sbb
je
iret
mov
or
cmp
out
lahf
in
lcall
lds
push
and
mov
ljmp
std
push
scas
jl
adc
sub
fs
jns
cmp
shrb
addr16
and
add
popa
es
sahf
fidivs
inc
mov
insl
adc
or
outsl
gs
dec
jl
or
jmp
lahf
xor
pop
fiadds
adcl
inc
adcl
jp
adc
dec
pop
or
add
push
cmpl
and
cmpsb
popf
mov
shll
cmc
sbb
cld
mov
js
push
sub
cmpb
loope
dec
ljmp
fistpl
fucomi
xor
cmpsb
cmp
popa
xchg
sbb
mov
or
cmp
std
stos
shll
dec
insl
cli
cmc
out
push
std
sbb
gs
les
xorb
xchg
pusha
push
cmpsl
fstpl
repnz
mov
mov
sbb
aaa
jmp
sar
push
out
cmc
inc
xchg
mov
push
and
pop
mov
xchg
cld
insl
data16
pop
mov
inc
sub
adc
lock
jmp
in
xchg
pop
inc
push
and
mov
fimull
lods
add
fdivr
push
or
dec
push
pop
add
loop
jns
push
push
mov
push
sbb
mov
lods
jne
push
mov
imul
mov
not
cmpsb
jecxz
out
lea
push
jmp
inc
push
jecxz
jae
add
pushf
js
adc
jnp
movsl
cmp
jg
add
mov
mov
xor
call
fcoms
cwtl
jl
adc
sbb
mov
clc
cltd
inc
xchg
push
and
pop
movntps
cltd
or
jne
and
loopne
mov
sarl
outsl
cltd
in
xor
cmpsl
push
outsl
les
dec
psubsw
out
fimull
or
mov
aas
lock
adc
mov
lcall
pop
testl
mov
inc
sahf
pmovmskb
icebp
add
fidivl
mov
fiadds
cli
lret
pop
adc
inc
jge
dec
stos
fs
mov
sub
dec
pop
out
mov
cmpsl
cltd
pop
loope
jnp
sar
pop
mov
pop
jecxz
ds
add
cmpsb
subb
mov
xor
inc
mov
mov
adc
inc
cmpxchg
negb
lahf
dec
mov
jle
loop
cwtl
sbb
xorb
leave
inc
or
jo
lock
adc
xor
or
adc
clc
call
jno
push
shrb
mov
pop
pop
insb
cltd
fwait
cmpl
jno
into
mov
mov
out
jb
lea
dec
outsb
ret
movsb
cmp
mov
or
fxch
mov
mov
je
jo
pop
pop
mov
out
mov
dec
mov
imul
push
cmovp
inc
jae
repnz
xchg
push
mov
push
cltd
dec
pandn
or
and
inc
test
lods
adc
sub
sub
push
mov
in
xor
enter
dec
jbe
neg
xchg
aam
push
add
mov
xchg
bound
jmp
push
shrb
mov
jecxz
rcr
jmp
sbb
adc
add
clc
dec
or
cltd
or
pop
aam
inc
xor
in
xchg
jge
clc
popa
adc
add
cmp
inc
dec
pop
popf
repz
aad
sbbl
out
out
and
xor
cltd
mov
mov
loopne
inc
scas
adc
lret
stc
jnp
fsincos
jo
std
jne
mov
test
jge
mov
lret
bound
pop
mov
inc
cmp
xchg
cltd
das
dec
sub
pop
push
sti
xchg
pop
push
inc
push
cmp
jb
adc
lahf
pushaw
arpl
jb
jl
jle
or
push
jmp
fisubl
pop
sub
adc
xchg
fstpt
xchg
push
not
es
push
cmp
xchg
mov
cmp
out
pusha
dec
mov
sub
add
jbe
es
dec
add
xchg
pop
popf
aaa
push
loopne
rolb
sbb
pop
daa
mov
repz
mov
arpl
adc
jmp
jge
and
mov
lea
push
sub
dec
out
mov
inc
gs
pop
pop
xchg
jge
sub
pushf
pop
mov
ja
shlb
popa
outsb
inc
and
adc
push
push
jp
nop
inc
mov
pusha
std
hlt
loopne
or
xor
test
ja
out
jns
sub
xchg
jns
aad
cmp
std
fstpl
or
mov
and
jne
adc
imul
aas
xor
xchg
mov
cmp
les
xor
addb
ret
mov
enter
push
cmp
test
mov
into
lret
jne
leave
daa
xlat
subb
scas
rclb
jae
stc
xchg
lock
dec
testb
sub
pop
adc
out
push
in
sbb
scas
xor
adc
loope
sbb
jne
mov
stos
rcrb
jl
notl
in
into
test
insb
adc
fistpll
jbe
pushf
stc
mov
xchg
mov
mov
jg
ljmp
or
inc
cltd
inc
cltd
jecxz
repnz
pop
cmp
add
ja
out
lds
rol
fisubs
push
pop
push
lods
xor
lods
cmc
fwait
stos
xor
mov
test
push
inc
sub
or
aad
pop
push
inc
icebp
lods
push
mov
push
adc
fmull
sub
sti
loopne
dec
jle
hlt
inc
scas
mov
roll
jle
insb
cmp
xchg
adc
stc
xor
cmp
fcompl
add
mov
stc
in
mov
mov
mov
cli
jge
stos
aad
dec
lock
push
rcl
inc
test
ss
les
adc
sub
addr16
in
lahf
adc
pop
jle,pt
scas
js
sbb
xlat
repz
test
es
jge
jecxz
adc
mov
lock
insl
idivl
arpl
nop
das
lahf
push
dec
in
or
out
inc
lret
sbb
and
test
jg
xor
or
bound
mov
repnz
jp
imul
mov
fwait
sub
movsl
aaa
jp
inc
adc
pop
inc
sub
and
pop
add
bound
jno
into
dec
dec
inc
dec
jnp
xor
xor
add
xor
push
shll
shll
adc
mov
fdivl
mov
lds
pop
dec
mov
add
push
mov
scas
or
fwait
les
or
repnz
clc
dec
cmpsl
pushf
mov
mov
das
out
aaa
mov
sbb
push
into
sbb
mov
add
das
pop
js
sbb
ljmp
lahf
push
push
sbb
bound
xchg
sbb
test
fs
fsubrl
adcb
cmp
into
lret
adc
mov
insl
out
cmp
pop
sub
jmp
ja
xchg
pop
push
fstps
insl
ljmp
aam
mov
sbb
fisubl
sbb
dec
inc
pop
outsb
xchg
icebp
sti
bnd
and
movb
mov
adc
mov
jnp
popf
loop
mov
pop
cltd
add
fwait
pop
xor
ja
popl
cmp
fstpt
bound
cs
scas
rol
xchg
cli
or
fisubl
test
pop
or
movsl
icebp
hlt
leave
dec
inc
cli
sbb
add
or
jnp
xchg
push
xor
adc
xchg
scas
add
or
mov
push
ret
push
pop
ficomps
push
sub
push
imul
sbb
gs
push
xchg
lods
xor
sarb
lret
test
fsubrl
popf
add
cmpsb
cs
push
mov
jns
add
adc
dec
cmc
or
fbstp
add
fcoms
xchg
cmpsb
out
adc
test
mov
pushf
cmpsb
cli
xor
mov
dec
std
repnz
lods
and
and
in
mov
pusha
call
dec
sub
imul
or
push
xor
mov
dec
icebp
fdivs
scas
or
cmpsl
mov
clc
or
and
cld
out
loope
test
xchg
gs
mov
mov
std
je
rcpps
das
incb
push
lods
xchg
jl
enter
or
xchg
xor
mov
adc
mov
inc
pusha
pusha
dec
push
xchg
jnp
mov
bound
cmpsb
stos
jnp
sbb
add
add
or
stos
mov
daa
out
lret
push
cmp
add
aaa
enter
dec
mov
cmc
sbb
addr16
nop
lea
push
fildl
aas
pop
push
scas
outsl
adc
and
sti
mov
jmp
leave
dec
pop
repz
jmp
xchg
call
pop
gs
adc
icebp
pop
lock
lcall
xchg
inc
mov
inc
pop
pop
ds
ror
mov
pop
cwtl
inc
test
jnp
fwait
add
aas
dec
dec
negl
frstor
in
clc
repz
and
rcrb
lds
or
lds
inc
cld
dec
repz
test
je
mov
push
outsl
dec
out
pop
cltd
and
sbb
cltd
jg
and
stc
mov
sarb
push
sub
sbb
dec
add
call
sbb
aad
fcompl
jno
cmp
stos
ficoms
push
movd
addb
sub
lods
fwait
sub
daa
jb
pop
fwait
sub
fiaddl
stc
int3
jne
call
jnp
mov
push
out
rol
popa
in
adc
es
fidivs
jno
lea
nop
xor
jo
xlat
in
dec
jl
movsl
das
jns
and
mov
pop
dec
cmp
xorb
inc
and
rclb
cmp
rcrb
push
clc
mov
cmp
add
cmp
das
jns
sub
adc
cltd
mov
jg
lcall
mov
iret
mov
faddl
mov
push
sti
mov
cmp
and
orl
test
jne
je
nop
and
push
sbb
outsl
pushf
loope
data16
jne
jae
inc
cld
mov
out
out
rolb
and
enter
idiv
adc
shrb
loopne
jbe
imul
inc
fidivrs
mov
add
mov
and
incb
jecxz
lock
or
rcl
pop
cmp
and
bound
hlt
daa
add
pushf
jbe
leave
insl
sti
in
inc
nop
lods
lods
cmpl
pop
fcomi
pushf
in
sub
repnz
insb
loopne
pop
in
sbb
jb
or
mov
into
scas
cwtl
mov
testl
dec
fildl
loope
cltd
jne
mov
loope
add
out
xchg
rcll
sub
mov
pushf
lahf
sbb
js
roll
sub
mov
stc
jnp
mov
ret
pusha
xchg
pushf
stos
mov
mov
dec
pop
repz
add
lahf
jne,pn
jno
lods
mov
es
mov
and
xchg
es
mov
bound
jae
inc
pop
in
ret
add
fildll
pusha
rcll
out
mov
test
mov
and
outsb
mov
in
inc
jnp
jae
aad
mov
sub
jno
clc
in
sbb
fs
loope
js
pop
add
inc
cld
xor
adc
sarl
mov
mov
jo
xlat
add
or
adc
mov
jl
nop
or
xchg
cli
sbb
adc
das
in
adc
stos
lret
fs
sbb
xchg
outsl
xor
pop
inc
inc
test
ss
and
push
push
ljmp
sarl
sub
inc
lods
jo
mov
and
incb
ja
xchg
push
dec
add
popa
or
push
push
lcall
in
xor
fisttpl
in
cltd
xchg
pop
sub
ds
mov
inc
popf
outsb
adc
loop
outsb
adc
sahf
cmp
aam
mov
inc
lds
roll
pushf
or
add
mov
outsb
jp
xor
pusha
mov
in
lret
add
ds
js
adc
in
sbb
and
push
fistl
xchg
xchg
xchg
push
arpl
cmp
outsl
adc
ljmp
sub
add
outsl
and
or
mov
jle
cmp
outsb
ds
sbb
or
or
ss
sbb
mov
or
imul
out
push
and
imul
sbb
mov
pop
or
fcompl
cltd
jne
outsl
cmc
cmc
dec
lods
imul
out
stos
dec
xchg
call
and
dec
cltd
xchg
add
adc
lods
dec
push
pusha
bound
jmp
jno
cwtl
push
pop
clc
pop
jg
lods
xor
fldcw
mov
lret
or
stc
std
inc
arpl
scas
sub
mov
cmc
cmpsl
adc
mov
and
hlt
adc
jbe
clc
xchg
mov
out
pop
and
add
push
das
adc
lock
dec
cmp
mov
stos
enter
mov
jne
enter
xchg
lcall
aaa
pusha
or
repz
out
xchg
jp
dec
leave
fs
dec
adc
xchg
xchg
dec
and
movl
mov
inc
cs
or
adc
mov
add
cs
dec
fwait
rcll
rclb
or
push
jnp
sbb
faddl
xor
mov
fwait
test
call
sub
sarb
xchg
sub
xchg
jnp
imul
loope
inc
sbb
imul
jns
andl
dec
pop
jo
mov
loopne
jle
dec
insl
int
ret
mov
scas
out
jl
or
rorl
mul
js
ljmp
pop
insl
call
jecxz
mov
pop
popf
sbb
cmp
adc
outsb
mov
iret
lds
scas
leave
dec
aas
shlb
mov
or
movsb
sbb
notl
mov
out
sbb
inc
lahf
dec
bound
sbb
inc
sahf
cmp
push
mov
adc
sbb
cmp
mov
push
mov
movsb
xor
into
movsl
sbb
sbb
dec
mov
mov
mov
in
jl
ja
xchg
lods
mov
mov
lret
stos
into
or
scas
pop
daa
cmp
out
xchg
mov
jns
pop
and
pop
stos
pop
aas
rcrl
push
scas
insb
scas
cmp
jmp
xchg
xchg
sbb
mov
subl
sub
jo
sub
scas
xchg
xchg
pusha
outsl
and
xor
or
cld
rol
xchg
js
js
stos
sbb
fcmovb
xchg
push
ret
adc
imul
sub
sbb
inc
cli
repnz
hlt
daa
pop
scas
sahf
mov
aam
in
cld
add
pop
or
add
add
por
xchg
xor
imul
call
fildll
lret
adc
lea
outsb
xchg
cmp
xchg
xchg
xor
adc
adc
mov
sub
push
shlb
jmp
call
ror
loope
push
scas
fisttpl
leave
aaa
sbb
cli
jge
adc
nop
call
out
test
mov
icebp
loope
push
imul
push
in
rclb
sbb
popa
test
nop
pop
ja
jno
sahf
in
cs
mov
and
daa
cwtl
xchg
lods
shl
xlat
leave
loop
xchg
inc
cli
test
repnz
sub
mov
test
test
push
popa
lea
enter
cmp
aam
xor
cs
sbb
jmp
sub
mov
aaa
jecxz
pusha
lods
hlt
and
movsb
push
aas
negl
xor
pushf
into
add
mov
out
lahf
xor
add
subl
out
sub
arpl
add
jmp
push
ss
jno
cmpsl
xor
roll
pop
sbb
fnstenv
fstpt
push
sarb
xor
lcall
cwtl
aad
xorl
stc
lret
stos
mov
push
lret
in
das
ja
addr16
cli
lret
adc
les
clc
inc
pop
shrb
lds
mov
cmp
sbb
fidivrl
push
or
mov
cmpl
xchg
sub
lods
fnstenv
repnz
iret
orl
pop
test
int3
or
jo
insl
add
sahf
cmpsb
insl
pop
pop
dec
xlat
jecxz,pt
mov
ret
sahf
cmp
mov
imul
test
xor
adc
cmp
arpl
dec
shr
sbb
fistl
push
mov
mov
lds
add
lods
xlat
jae
mov
rcrl
mov
into
push
sub
push
out
cmp
pop
mov
xchg
mov
int
adc
xor
jmp
out
ror
mov
repz
xchg
rorb
dec
rcll
lds
pop
xor
push
or
mov
in
adc
and
aad
leave
xchg
add
lock
lock
cli
xchg
or
call
idiv
sbb
push
inc
fidivs
mov
in
imul
xor
cmp
add
mov
push
jg
sub
and
loope
xchg
push
cltd
mov
push
cmp
push
jns
scas
xor
xor
mov
xlat
lock
lcall
mov
aaa
or
sti
loope
pop
jns
fdivs
add
cmp
jmp
dec
pop
inc
imul
out
dec
inc
test
push
or
adc
rcll
lret
fidivrl
in
and
jl
leave
mov
dec
add
sbb
push
mov
cmp
fsqrt
pop
cmpsl
pop
push
or
mov
sub
jl
out
adc
test
xlat
pop
icebp
lret
lods
clc
ret
lret
jae
push
cwtl
fadds
stc
in
sbb
repz
cmp
test
fstl
cmp
std
mov
jmp
cwtl
or
out
mov
add
fs
scas
jp
xor
push
out
shlb
in
repz
mov
push
mov
mov
cmc
xchg
and
pop
out
lods
pop
es
push
xchg
insb
mov
xor
enter
outsl
add
sbb
jnp
push
xchg
jb
rclb
lods
jp
testl
sbb
addr16
out
and
in
loop
dec
adc
out
sbb
pop
shll
nop
outsb
add
emms
bound
pop
lahf
xchg
jge
mov
lcall
nop
sub
adc
cmp
call
fcom
addr16
mov
outsl
clc
mov
cltd
jecxz
mov
std
jmp
lahf
jl
and
enter
cmc
test
xchg
pop
and
cmc
xlat
mov
mov
movsb
sahf
sahf
xchg
cmp
cld
mov
sti
dec
lds
mov
push
js
fsubrs
push
xor
jl
aaa
pusha
cmpsb
adc
dec
in
pusha
and
adc
lret
nop
push
std
pop
in
aaa
lods
pop
nop
adc
enter
and
fwait
lahf
mov
jno
mov
mov
je
or
push
xchg
ja
shlb
dec
cmpb
mov
fidivrl
sub
pusha
mov
inc
fsubs
mov
cmp
mov
inc
push
or
push
jmp
inc
arpl
sbb
lret
gs
les
mov
out
mov
or
sub
dec
push
aas
nop
in
js
in
xor
repz
icebp
push
pop
imul
mov
jno
leave
jno
push
mov
loope
mov
xchg
imul
jnp
push
aaa
lea
ds
aad
decb
xchg
xchg
cli
popa
sbb
mov
repnz
mov
js
popa
push
and
mov
inc
das
inc
sar
mov
in
loope
fstp
loop
dec
in
arpl
mov
adc
enter
pop
in
xor
adc
xlat
aad
xor
sbb
mov
mov
jp
jp
js
fsubl
push
iret
dec
mov
loope
dec
xchg
xor
imul
outsl
mov
shrb
mov
and
xchg
sar
icebp
jmp
mov
mov
push
aas
mov
insl
or
into
ret
cmp
cmpsb
mov
test
jp
mov
cmp
adc
rorb
xchg
lds
addr16
fisttpl
add
mov
mov
leave
int
pop
out
fmul
xlat
test
add
mov
jg
cmpsb
push
mov
xor
cmp
sbb
clc
push
outsl
fwait
push
push
xor
sub
rcl
negl
fucomip
sub
insl
push
clc
dec
xor
shll
cmp
cmpsl
out
rorl
and
out
ljmp
mov
movsl
call
rcrb
xchg
repz
aam
aam
and
scas
xchg
xor
xor
inc
fsts
mov
stos
into
mov
inc
push
or
sub
xor
jle
dec
mov
cmpb
push
mov
outsl
js
and
sub
das
cmp
sub
std
nop
cmp
pop
lock
pop
loopne
les
das
pop
loope
cmc
test
or
cmpsb
cmp
cmpsb
repnz
jg
shll
inc
xor
push
mov
int3
fs
xchg
push
push
inc
ss
imulb
push
cmpsl
add
ss
das
sub
inc
fidivrs
hlt
dec
xchg
adc
loop
xor
addl
out
stc
and
jmp
mov
loope
sub
subl
aad
aaa
int3
fwait
push
les
xor
push
incb
aam
mov
dec
pop
sbb
xchg
int3
mov
scas
jo
and
cmp
mov
fildll
std
and
out
in
xchg
mov
push
and
inc
dec
push
clc
jae
adc
and
std
adc
fxch
xor
lcall
mov
jno
iret
xchg
push
lds
in
jle
scas
dec
sbb
cmp
testb
ds
jl
mov
ljmp
xor
cwtl
fsub
fnstcw
jns
mov
sbb
mov
jecxz
call
into
mov
shll
cld
or
pop
xchg
out
cmp
pop
xor
add
test
sbb
outsl
sbb
push
iret
cmpl
sbb
cmp
stc
xchg
les
test
ljmp
jbe
pusha
cmp
and
cmp
mov
sub
dec
movsl
scas
xor
xchg
gs
ljmp
arpl
fcmovb
jbe
xor
nop
hlt
int
mov
push
push
lea
stos
test
pop
outsb
popf
mov
fisubl
and
pusha
cli
ljmp
movsb
ret
testb
mov
mov
jge
nop
dec
sbb
stos
clc
jbe
imul
sub
hlt
or
and
and
scas
add
sub
and
out
cmpsl
or
pusha
push
mov
xchg
pop
in
ds
pushf
sub
xor
sbb
int3
and
repz
lret
cli
xchg
sahf
push
inc
inc
or
int
xchg
push
push
scas
mov
ja
aad
sub
dec
sbb
std
dec
insl
cmpb
sbb
or
or
sti
pusha
hlt
add
jmp
data16
je
enter
push
pop
ret
push
jo
cwtl
lcall
dec
rorl
fcmovnu
jl
test
filds
mov
sbb
repz
cmp
test
jnp
or
out
mov
mov
mov
nop
scas
pop
fstpl
jmp
inc
pop
out
and
std
adc
fcmovb
xchg
and
sbb
and
enter
addr16
outsb
pop
inc
jge
add
testb
rcl
xchg
add
xor
jl
cmp
cli
call
jb
dec
and
test
mov
and
sbb
jo
jae
pop
das
jmp
int3
pop
sub
outsl
cwtl
pop
push
pop
in
or
iret
test
aas
scas
rcrb
pushf
jg
outsb
stos
push
xchg
shl
movsl
insb
rcrb
leave
adc
adc
adc
aad
jae
xchg
div
jns
cmpsl
addl
sti
cmp
in
cs
mov
pushf
lds
cs
mov
push
shl
in
leave
fsubp
adc
nop
decb
int
scas
repz
jmp
lea
in
dec
sbb
xchg
test
jle
and
shrl
adc
push
and
mov
mov
xchg
or
add
int
popa
daa
jae
add
das
repz
gs
stos
add
xor
aaa
cmp
aad
in
add
daa
lea
imul
jnp
dec
fidivrs
out
jle
and
pop
cld
sahf
cmp
xchg
jmp
mov
lock
push
and
mov
sub
scas
std
and
loop
inc
push
push
cld
popa
loopne
stc
fistpl
mov
dec
mov
repz
cmp
mov
loopne
test
jno
cmp
fmuls
std
sub
jge
cmc
mov
jl
in
stc
dec
test
mov
inc
and
stc
inc
inc
xor
push
jnp
xchg
rorl
js
pop
ret
and
daa
clc
push
xchg
or
pop
ret
arpl
mov
sbb
pop
jnp
daa
orl
call
je
jo
int3
call
cmpsb
test
xchg
ret
add
popf
repz
fwait
rorb
pushl
dec
nop
or
adc
ljmp
shlb
aas
mov
cmpsl
lods
aad
pop
movsb
add
shrl
in
ljmp
cwtl
iret
sahf
cmp
popf
arpl
add
cmp
mov
mov
jno
inc
fptan
pop
push
imul
push
mov
and
call
mov
enter
je
jp
fcmovb
adc
pop
mov
stos
roll
cld
dec
mov
and
rdmsr
jecxz
sbb
int
dec
and
xor
xchg
or
js
inc
push
shll
cwtl
cmpsb
add
cwtl
xor
shlb
lret
mov
add
or
test
push
mov
enter
jbe
jle
fldenv
ljmp
xchg
mov
out
fnstcw
mov
test
sub
add
mov
punpcklbw
dec
fisubl
shlb
push
mov
and
xor
scas
imul
inc
je
mov
inc
or
add
xchg
test
cwtl
sti
movsb
scas
test
popa
push
mov
ds
pop
adc
inc
stc
loopne
mov
pushf
push
daa
mov
imul
jp
shl
jp
jmp
jns
dec
add
rorb
add
and
mov
repz
insb
and
pop
xchg
frstor
and
jae
mov
testl
ret
ret
mov
xlat
mov
prefetch
sub
mov
cmpsl
add
es
hlt
fisubl
popa
and
fstpl
xchg
or
add
jge
dec
dec
adc
mov
ss
inc
daa
aaa
in
decb
jecxz
push
out
inc
imul
mov
push
sub
inc
sub
lea
mov
dec
popa
insb
sub
int
pop
or
int
in
inc
call
stos
sub
sub
inc
jb
push
adc
notl
xchg
push
xor
cs
inc
sbbl
outsb
lret
pop
cmp
push
nop
lods
lock
fs
sbb
outsb
enter
fwait
mov
out
lret
dec
and
lret
scas
into
mov
shl
mov
fldcw
push
hlt
lods
ret
popa
xor
pop
mov
sbb
jnp
adcl
push
cwtl
or
xchg
loop
outsl
inc
xchg
or
mov
mov
stc
stos
sub
pop
outsb
cmp
lahf
dec
outsb
inc
popa
or
popf
xor
push
adc
dec
push
lea
push
jge
sahf
sahf
leave
jns
sar
add
push
push
jmp
inc
mov
fs
adc
lods
cmp
jle
push
cmp
adc
and
and
adc
clc
cmp
faddp
xchg
insb
cli
sub
cmp
fisttpl
icebp
jp
lret
test
cli
xor
cmc
cmp
pop
adc
xchg
out
pop
cmp
dec
stos
jnp
and
test
rolb
insb
shlb
dec
rcl
out
lahf
add
push
icebp
jmp
or
sub
ret
pushf
in
xor
test
mov
inc
loop
inc
jae
sbb
stos
into
push
and
pop
mov
loop
fstps
pop
xlat
lahf
rorl
clc
push
test
or
xchg
mov
jns
and
imul
lret
stc
cmpsl
cmpsb
add
pop
outsb
sub
push
mov
shlb
ja
mov
xchg
push
cmpxchg
js
mov
setae
jmp
jg
fdivl
inc
inc
xchg
mov
sub
and
hlt
int3
in
mov
enter
xchg
mov
jg
js
add
fsubr
fistpl
aam
aaa
sbb
cmp
mov
aad
ja
xor
test
dec
mov
sbb
pop
roll
cld
pop
nop
pop
dec
dec
cmp
add
jmp
mov
fbstp
dec
sbb
mov
sub
cld
lods
out
pop
cmp
sbb
ljmp
gs
inc
jg
iret
cld
pop
lret
fnstcw
sub
jne
aad
and
xor
pop
div
jp
sbb
xor
push
cld
mul
int3
sub
sub
fisubrl
daa
test
cmp
jmp
cld
std
out
mov
hlt
sub
test
pusha
scas
ss
cld
fdivs
dec
cmpsl
cmp
rorb
test
test
xor
inc
loope
fdivp
mov
sbb
inc
xchg
sub
lahf
sub
or
jge
cs
rcrl
sbb
gs
add
into
and
pop
loop
and
dec
mov
push
data16
dec
xchg
dec
insl
or
xor
stos
push
stc
or
jmp
mov
out
js
icebp
mov
or
xchg
cmp
jbe
xchg
pop
sub
pminsw
inc
push
sbb
repnz
push
sti
hlt
add
bound
sbb
dec
jns
cltd
pop
test
xor
in
stos
pop
int
out
xor
rorb
push
in
cmp
inc
or
mov
scas
icebp
cmpsb
jo
mov
inc
lret
aas
insb
adc
mov
js
in
outsl
test
movsl
cwtl
das
cmc
inc
testb
repz
roll
push
jp
mov
fisttpll
out
aas
int
inc
gs
jne
fiaddl
jp
push
aaa
sbb
adc
arpl
xor
repnz
and
dec
sub
xchg
cltd
pop
lret
jl
test
push
push
sti
mov
cs
push
ficomps
mov
add
ljmp
ja
pusha
inc
mov
imul
dec
jmp
mov
pop
sbb
fsts
jle
or
pushf
sub
xor
pop
popa
out
mov
sbb
stos
nop
outsb
push
movsl
pop
mov
xchg
mov
jp
push
das
stos
pop
push
les
popa
ljmp
add
cmp
rorl
sbb
sub
add
pop
mov
dec
inc
sti
dec
cmpb
or
outsl
iret
loopne
mov
mov
fstp
mov
movsl
aaa
aam
cmp
movsl
push
jb
andl
or
mov
mov
cmp
test
shll
or
and
sbb
adc
mov
push
popf
jb
pop
test
cltd
in
mov
test
sbb
mov
test
and
jno
cli
mov
lds
es
dec
and
and
dec
decl
popa
and
les
imul
dec
cli
icebp
pop
and
lock
sbb
push
leave
mov
xor
ss
shlb
pop
pushf
in
adc
push
cs
out
ss
cmp
es
cmp
pop
mov
ret
dec
je
jge
jecxz
cmp
pushf
out
cmp
add
stos
fmull
out
aam
ret
xor
lret
icebp
adc
je
imul
int3
ss
pop
test
mov
push
cmp
pop
push
jb
jl
lcall
add
stos
mov
add
fs
inc
hlt
andl
or
adc
push
gs
xor
pop
inc
push
loopne
jmp
dec
cltd
fwait
int3
xor
xchg
cmp
mov
imul
pop
or
cmp
sbb
shl
xlat
adc
test
jnp
sahf
push
and
insb
test
push
mov
imul
lea
pop
cli
jg
stos
jle
cmc
sbb
inc
push
lret
mov
xor
cmp
adc
mov
sub
push
jae
and
xchg
add
adc
jp
or
in
pop
or
rol
cld
int
insb
int3
inc
dec
mov
arpl
cltd
xor
push
cmp
in
pop
inc
inc
data16
jl
mov
cli
jb
sbb
mull
stos
sbb
xchg
push
pop
pop
sbb
mov
cltd
mov
jb
pop
aad
clts
inc
or
les
mov
ret
xor
incb
add
notl
or
and
call
mov
inc
push
pop
sbb
mov
mov
addr16
and
cmpsb
stos
pop
xchg
lods
nop
and
jb
mulb
jecxz
xor
cltd
nop
int
ret
js
adc
push
xor
jae
in
or
fs
in
inc
mov
mov
push
out
sbb
xor
test
cwtl
out
lahf
adc
push
mov
icebp
ds
mov
xor
mov
cwtl
push
add
push
adc
xor
loope
xor
rol
mov
cli
cmc
mov
rcrl
icebp
popa
push
cltd
ss
mov
inc
mov
int
movl
push
pop
frstpm(287
imul
mov
mov
test
ficompl
dec
push
jae
jo
xor
data16
adc
xchg
mov
mov
mov
pop
mov
scas
xor
iret
mov
mov
je
out
pop
sahf
sti
fisubs
inc
inc
push
xchg
ds
adc
jbe
pop
out
addr16
cmp
stos
pop
or
mov
mov
movsl
jns
mov
mov
dec
or
lret
add
mov
mov
je
out
shrb
pop
out
cmc
testb
iret
pop
adc
mov
ret
xchg
adc
mov
nop
mov
push
test
jmp
add
adc
jg
push
xlat
or
sarl
leave
adc
push
lcall
mov
sub
add
pop
dec
push
jp
fcom
dec
fnstenv
out
sbb
jnp
mov
imul
imul
addr16
inc
lret
jmp
fdivrs
je
bound
push
testl
les
sbb
cld
test
into
sbb
das
icebp
pop
and
xor
push
call
push
loopne
aam
adc
add
aaa
mov
pop
and
cmpsb
stos
pop
xchg
cltd
sbb
test
loop
adc
dec
push
jecxz
dec
cltd
mov
dec
pop
ret
cltd
push
mov
cmpsl
pop
sti
or
jae
push
or
sbb
mov
jmp
aad
and
or
cltd
mov
xchg
ret
cwtl
push
fistpl
jne
sbb
xor
cltd
fwait
pop
ss
fisubrs
icebp
cli
out
or
in
and
shlb
sbb
push
gs
adc
sahf
inc
dec
scas
testl
into
cmp
inc
insb
pushf
mov
or
fnsave
mov
sti
xchg
aad
xor
dec
pop
lods
test
push
loope
jno
push
and
fwait
jg
push
push
cmc
dec
fstl
cmpl
cmp
add
mov
cltd
inc
and
stos
sbb
insb
mov
adc
mov
push
mov
add
and
sub
ljmp
test
sbb
add
mov
inc
mov
ficomps
mov
sbb
sbb
mov
fs
push
jge
or
cmc
pusha
adc
inc
out
mov
movsb
test
cmpb
shr
imul
ja
pop
inc
lods
std
cmp
push
popa
lret
mov
mov
icebp
cwtl
es
xchg
aas
addr16
add
adc
mov
insb
pop
mov
adc
dec
lret
jge
xchg
xlat
into
ds
push
mov
enter
mov
xchg
pop
jmp
push
cld
jmp
push
insl
popf
and
sub
add
fstps
in
mov
repz
push
and
pop
rclb
xor
lret
icebp
mov
sub
repnz
mov
insl
xor
xchg
clc
jo,pn
imulb
leave
stc
cli
and
mov
mov
lea
cmp
gs
cmp
fisubrl
sbb
lods
negb
sub
lds
fs
push
into
jmp
rol
xchg
fistpll
inc
js
mov
movsb
and
sarl
adc
sti
mov
jnp
dec
fs
push
inc
fisubrl
add
and
insb
mov
xlat
dec
xor
pop
pop
lods
std
or
or
insb
int
xchg
iret
rorb
jecxz
sub
insb
out
pop
adc
mov
mov
loope
popf
xor
popf
pop
inc
push
mov
and
and
cmp
call
lea
add
sbb
mov
fsubr
and
and
adc
ficomps
inc
inc
clc
bnd
push
add
pushf
jae
rcll
rol
mov
xchg
or
mov
jo
cwtl
sbb
xchg
and
add
inc
ja
inc
std
subl
popl
push
mov
push
out
jnp
xor
fcom
push
pop
aad
xor
cs
cmc
call
xor
dec
ret
sub
push
push
pushf
into
sub
adc
mov
icebp
insl
add
movsb
xchg
jecxz
loope
inc
mov
pop
ljmp
fnstsw
lahf
and
addr16
sti
mov
out
insl
inc
pop
test
and
in
xchg
xchg
mov
xchg
pushf
cmp
ljmp
loope
inc
pop
repnz
push
imul
ds
int3
sbb
push
insb
mov
das
cmp
pop
mov
xor
loope
pop
das
pop
cmp
cli
call
push
inc
cwtl
in
cmp
and
mov
stos
sbb
repz
scas
push
jno
jae
imul
in
daa
ds
sub
add
sbb
jbe
xchg
sbb
dec
fucomip
fdivrl
iret
sbb
cwtl
lock
test
jge
mov
xor
addr16
pop
add
inc
in
push
mov
mov
mov
push
dec
shll
push
xchg
jge
push
sub
mov
jle
inc
cmp
outsl
insl
sbb
jmp
imul
pop
inc
repnz
testl
dec
les
add
jno
cmp
push
mov
outsl
ret
das
adc
movsl
idivl
outsl
fistpl
pop
adc
scas
mov
leave
lret
xchg
xorl
in
adc
aad
daa
gs
or
aad
clc
ret
add
push
pusha
fsubrs
jecxz
adcb
cmp
fsubrl
shl
mov
mov
pop
xchg
xor
lods
jbe
push
xchg
in
stc
jge
jg
cmp
jge
gs
sbb
lea
mov
mov
jne
sub
cmp
sub
out
outsl
lahf
xchg
cwtl
clc
addl
insl
push
add
inc
cmp
or
iret
xchg
mov
inc
das
push
jb
sub
enter
lods
xchg
push
int
mov
js
repz
add
sbb
adc
jg
push
mov
rolb
shr
pushf
les
lcall
lahf
enter
movsb
hlt
mov
icebp
xor
push
orl
sahf
mov
rclb
lods
sub
aas
out
jl
push
or
lods
jmp
pop
cmpsb
sti
mov
add
pop
in
mov
jmp
mov
hlt
shrb
mov
cwtl
stos
fcom
test
imul
adc
fcoms
repnz
ljmp
aas
dec
cmp
ljmp
mov
daa
mov
push
inc
in
and
xchg
jecxz
dec
lods
inc
hlt
xchg
cmp
and
mov
in
and
fldt
sub
inc
cmp
xor
or
mov
scas
loop
mov
in
adc
sti
out
pop
dec
and
inc
notl
inc
lea
xchg
cmpsl
mov
lahf
loope
rcll
mov
roll
test
jmp
enter
mov
sub
ds
adc
adc
jae
pop
sbb
das
adc
sbb
or
xchg
push
xchg
lds
scas
insb
js
lock
mov
shll
xlat
xchg
pop
icebp
mov
fstl
dec
lret
in
mov
lret
push
sub
sub
stos
xchg
and
cltd
rol
jp
push
and
inc
mov
jmp
adc
push
lea
xor
gs
addr16
test
push
jg
push
rcll
xlat
loopne
cli
mulb
pop
or
iret
inc
dec
sbbb
pushf
mov
sbb
inc
push
fnstcw
inc
aaa
and
or
mov
aad
inc
push
and
pop
xchg
xchg
stos
jl
enter
sub
dec
add
ret
push
jbe
push
outsb
pushf
lds
dec
push
in
bound
negl
fmull
inc
fs
aam
into
stos
test
in
xchg
ret
ret
je
into
add
dec
fwait
data16
add
jmp
pop
pusha
mov
lods
cli
sub
inc
push
pop
call
and
sub
dec
popf
mov
sub
ficoms
into
insb
aaa
pop
push
arpl
notl
jbe
xchg
sahf
aaa
and
adc
adc
jb
imul
idiv
adc
lock
push
pop
scas
in
mov
lds
clc
sub
sbb
ds
add
sbb
pushf
rcl
push
dec
sub
and
pop
add
or
stos
push
std
cmp
idivb
out
xchg
or
subb
jl
sti
sti
clc
mov
sbb
pop
pop
jg
xor
filds
data16
sti
push
sbb
mov
or
incb
rorb
lds
sub
adc
adc
push
unpckhps
pusha
jb
in
mov
mov
xor
test
shlb
scas
mov
cmp
cli
sarb
mov
lods
jmp
cmp
mov
scas
pusha
das
jle
jae
jl
sbb
sub
cmp
hlt
xlat
test
sub
test
leave
xchg
in
rcrb
ljmp
iret
xchg
add
stc
loop
dec
mov
sub
or
ror
in
loopne
ja
dec
ja
sti
xor
cwtl
shlb
mov
add
or
je
fadd
pop
lea
into
cmpb
push
sbb
add
imul
add
dec
mov
push
mov
and
jg
js
addb
lods
sti
jb
push
pop
aas
xor
lods
push
jns
dec
add
mov
jg
cmp
xlat
pop
in
cmpsl
repz
sub
jns
aaa
jecxz
sub
fsubrs
arpl
call
xor
das
in
cmc
cmpsl
push
faddl
out
inc
sub
cltd
add
or
pop
leave
push
pop
mov
das
movsb
xchg
dec
xor
cmpsl
push
or
jb
outsl
and
pushf
mov
movsl
mov
mov
test
cmp
lret
sbb
inc
frstor
adc
fnstcw
or
push
fnstsw
inc
dec
sbbl
filds
cmp
xchg
jp
cltd
or
fstl
scas
pop
shlb
mov
cld
adc
aas
nop
push
push
or
xchg
in
sub
test
jge
rclb
jl
fstpt
arpl
mov
aaa
daa
scas
test
cld
cmp
sbb
in
stos
lahf
sub
inc
mov
gs
enter
sub
push
mov
int3
sub
mov
push
mov
repz
xor
xchg
mov
xor
sbb
jnp
mov
scas
fwait
rcl
mov
popa
outsb
scas
dec
je
stc
out
mov
shrl
int
sub
nop
sbb
out
pop
lret
mov
pushaw
into
stos
pop
dec
stc
sbb
sub
pop
out
repnz
out
mov
aaa
in
jle
out
gs
insb
inc
push
adcl
mov
ss
ret
lods
into
xchg
lock
push
test
fisubs
jb
orb
inc
sub
and
ficompl
clc
jl
cli
pushf
dec
faddl
xor
sti
pop
or
into
inc
fdivrl
aas
xor
pushf
arpl
popf
lock
sub
pop
push
sub
in
aaa
lret
mov
inc
jg
xchg
and
iret
sahf
fbld
sbbl
sbb
mov
nop
subb
repnz
jo
mov
ljmp
jecxz
hlt
aaa
mov
lea
and
pop
dec
int3
in
test
xchg
imul
sub
mov
lret
aas
out
popf
aad
pop
pop
pop
and
adc
pushf
aaa
cmp
jo
lahf
fcoms
movsl
cmc
and
mov
dec
jnp
adc
cmp
dec
fidivrl
push
iret
fdivrp
cmp
sti
or
sahf
sti
pusha
repnz
push
mull
insb
xlat
int
mov
mov
shlb
dec
scas
fs
push
push
cmp
ret
mov
pop
fcmovnu
inc
outsl
and
jmp
xchg
mov
push
es
push
bound
in
mov
pop
dec
js
xor
daa
adc
dec
adc
add
lock
push
inc
jl
add
adc
cwtl
insb
shrl
push
cmc
sbb
inc
sbb
mov
dec
popf
pushf
rcl
mov
mov
in
push
sub
pusha
or
lods
clc
rcl
mov
fsubp
adc
cltd
pusha
xchg
notl
leave
sbb
lret
mov
aam
pop
dec
jb
cmc
cmpsl
jne
or
loopne
dec
enter
or
imul
and
data16
ds
xlat
gs
xchg
fmull
mov
push
push
outsl
inc
push
cmpsl
inc
andnps
xchg
insl
xchg
jecxz
std
call
leave
add
gs
in
sub
mov
jle
hlt
fwait
jbe
leave
enter
mov
fwait
insb
fwait
lock
xor
ret
jae
in
cmp
pop
es
mov
jg
stos
pushf
mov
mov
test
sti
push
mov
movsl
inc
jge
dec
bound
mov
je
out
sbb
lods
mov
xor
xor
in
cmp
clc
andl
dec
or
les
mov
ficomps
fisttps
jnp
mov
push
lods
sub
data16
push
xchg
shl
and
movsl
popa
repnz
push
adc
clc
insb
dec
push
cmp
adc
mov
fcoms
dec
inc
ret
out
mov
mov
dec
inc
jg
mov
push
add
sahf
fildl
mov
sbb
xchg
add
fsubrl
dec
inc
dec
pop
fldenv
mov
cli
mov
stc
scas
adc
ds
jg
add
and
fisubs
add
shl
in
jle
jb
xchg
lds
fcmovu
cmp
xchg
frstor
and
cmp
inc
pushf
repz
xor
jnp
xor
pop
test
and
popf
pushf
ljmp
add
pushf
add
outsb
cmpsl
test
push
in
cmp
cmpb
xor
in
sub
fdivrl
add
xchg
or
pop
inc
ljmp
cmp
and
daa
add
imul
je
icebp
cmp
mov
pop
dec
xchg
mov
outsb
repnz
daa
sub
jnp
stos
xor
lods
push
push
jbe
test
in
inc
dec
mov
mov
insl
jge
push
pop
daa
adc
xor
add
fidivrl
fistpll
outsl
jbe
movb
outsl
hlt
mov
hlt
push
mov
sbb
xorb
mov
rcll
sbbl
inc
push
aas
jp
adc
xchg
xor
xchg
fbstp
mov
push
fidivrs
bound
cmp
pop
push
cwtl
into
test
pop
loopne
mov
push
xchg
les
jmp
in
sbb
mov
gs
rol
jbe
orb
inc
jp
mov
mov
mov
add
divb
jl
and
fnstenv
in
test
sbb
ror
add
and
ss
sub
pop
mov
aad
mov
jmp
mov
out
or
jb
mov
inc
inc
mov
mov
pop
lcall
fbld
js
jb
into
test
xchg
popf
cmpsb
ret
push
test
fdivrl
or
in
es
arpl
das
incl
incb
push
mov
mov
shlb
adc
adc
sbb
test
pop
iret
sub
xchg
popa
mov
aaa
pushf
int
add
scas
sub
test
push
push
dec
je
inc
jo
insl
mov
shlb
jbe
js
rorl
and
or
loop
jbe
add
inc
cmp
mov
push
mov
lcall
aas
push
test
sbb
dec
scas
sub
movsb
xor
loopne
mov
pushf
ret
insl
andb
dec
cmc
mov
ror
icebp
int
jnp
jmp
xor
inc
jo
aam
out
or
int
mov
lods
jmp
dec
jns
scas
rcrl
add
or
jge
push
sbb
or
fldt
jae
loop
jnp
cltd
pop
lds
out
sbb
add
mov
pop
pop
push
outsl
dec
arpl
or
sarb
xchg
ss
cmpsb
dec
call
mov
dec
inc
jb
dec
add
popa
or
addr16
and
mov
lahf
adc
mov
inc
outsb
pop
jo
popa
enter
add
push
mov
repz
into
out
sbb
add
dec
ds
mov
cmp
rcll
insl
mov
mov
in
mov
sub
stos
cli
rcrb
cmp
and
shll
clc
stos
out
sbb
xor
rcll
inc
add
inc
cmp
js
push
imul
push
jb
inc
adc
sbb
inc
nop
mov
lock
insb
push
cmpsb
lods
push
imul
dec
lock
xor
adc
shl
and
lds
inc
js
cmpsl
nop
ficoms
sbb
sbb
or
repnz
stos
push
dec
adc
xor
sub
inc
test
and
mov
push
movsb
shrl
mov
push
lock
jp
mov
push
add
in
cld
aaa
ss
mov
fwait
into
std
xchg
jmp
scas
push
xchg
push
and
xchg
xor
adc
lock
sbb
dec
pushf
dec
ret
ss
or
mov
sub
lret
and
push
and
adc
sahf
in
sub
pop
pusha
adc
aas
sbb
mov
xor
dec
iret
dec
stos
xlat
test
and
sbb
test
fs
add
lret
xor
fnsave
mov
lcall
sub
sbb
jle
out
add
and
test
stc
testl
test
rclb
iret
je
xor
fstpl
sub
aaa
inc
adc
dec
out
inc
mov
pop
mov
and
shll
sahf
mov
das
iret
pop
inc
dec
push
daa
jmp
or
pop
xor
fistps
or
repnz
repnz
mov
sti
stos
or
shl
cwtl
adc
fs
push
xlat
mov
cmp
mov
xor
pushf
xchg
lcall
insb
leave
add
pop
adc
imul
dec
in
clc
adc
rolb
xor
in
jno
pop
mov
das
xor
into
ficompl
cmpsl
in
fnsave
inc
sahf
cmp
xor
or
and
lcall
add
add
cmp
cwtl
das
iret
rclb
ja
sub
jne
jl
mov
pop
pop
and
or
and
leave
xor
xchg
inc
cmc
lds
mov
in
in
out
xor
sbbl
int
pop
ss
fisttpl
sbb
xchg
aaa
mov
or
cmp
mov
sbb
inc
pushf
jge
sarb
mov
fadds
lcall
fisttps
pop
add
dec
mov
cmpsb
scas
les
xchg
mov
mov
cmp
mov
fsubrs
dec
jle
sub
pop
pop
mov
pop
mov
inc
cmp
or
aaa
and
out
mov
add
repz
jnp
sar
push
rcrb
pop
stos
push
xchg
pusha
xchg
push
or
adc
pop
xchg
iret
cmp
adc
mov
jb
push
sub
lcall
cmp
and
xor
mov
inc
and
insl
lods
daa
enter
hlt
mov
scas
sub
and
sarl
xor
jae
pop
test
sbb
cmp
and
fadds
nop
xor
xorb
jge
fstpl
mov
lret
cmpsb
mov
pop
lahf
int
jecxz
divl
cmc
cmp
and
xchg
enter
mov
test
jnp
ljmp
int3
dec
push
jnp
xor
lahf
les
xor
lods
or
iret
adc
and
hlt
mov
pop
dec
in
mov
shl
and
and
std
in
cld
or
dec
test
fwait
mov
add
jb
popf
mov
adc
xchg
cmp
aad
shll
out
push
cmp
adc
xchg
ffree
mov
leave
push
inc
xor
outsl
ret
sarb
adc
push
es
sarb
fidivl
xchg
pop
xchg
xor
cmp
or
out
in
pop
mov
outsl
mov
jge
push
push
xor
lcall
inc
push
insb
jge
sbb
mov
imul
into
enter
push
scas
mov
gs
mov
rolb
or
cmp
jl
inc
sub
jo
push
pushf
mov
in
jmp
test
mov
popf
xor
mov
loop
add
dec
cmpsl
inc
jecxz
icebp
aas
sub
add
sahf
cli
arpl
aaa
jle
mov
mov
flds
and
rcrb
inc
inc
cmp
cmp
in
inc
out
pop
aad
test
inc
lea
push
sub
add
dec
xchg
cmp
mov
test
icebp
fisubl
imul
cmp
and
sub
push
fcmovbe
frstor
adc
jmp
pop
push
bound
pop
or
cmp
xor
push
or
and
enter
pop
andl
mov
push
push
incw
ss
fmulp
je
cmp
inc
cmp
adc
in
lret
test
or
mov
pop
pop
pop
lcall
mov
xchg
mov
xchg
xlat
push
xor
jo
xor
mov
aam
xor
test
cld
dec
ja
cmp
cmpsb
pushf
lods
xor
into
gs
push
outsb
jecxz
jp
push
imul
or
repz
dec
test
int
in
adc
nopl
pop
add
insl
insl
aas
fwait
out
loope
and
test
aaa
mov
xlat
xor
mov
sub
xor
lock
cmp
xchg
ret
fucom
test
push
mov
aas
ficoms
in
cmp
and
or
out
push
daa
rcll
subl
add
idivl
push
cmp
inc
push
jno
pop
sbb
or
jo
xor
mov
test
add
and
rcr
test
enter
push
iret
add
and
mov
data16
subb
out
push
nop
imul
push
ret
mov
push
loop
sbb
iret
aas
insl
in
test
jg
and
ss
cmp
lcall
nop
dec
pop
insl
dec
cmpb
aad
mov
outsl
pop
xlat
xchg
nopl
lret
je
xchg
shrl
aas
or
in
xchg
sub
je
push
int3
popa
adcb
ljmp
mov
xor
sbb
rcrl
pop
in
pop
push
jbe
lea
inc
jnp
stc
sub
leave
push
out
mov
cs
gs
or
aaa
xor
pop
push
arpl
xchg
sbb
cmp
cmp
sub
inc
push
mov
sarb
mov
jl
xchg
aaa
mov
lret
loopne
aas
daa
adc
xchg
int
out
lock
xchg
inc
mov
andb
add
mov
ljmp
rcrl
clc
les
arpl
mov
or
test
sbbb
pushf
mov
mov
push
mov
insw
mov
into
sarb
loope
fidivrl
sub
ret
hlt
loope
mov
int3
xchg
dec
inc
out
xchg
clc
out
sbb
jno
arpl
scas
sbb
iret
adcl
ds
jno
lock
sub
arpl
cmp
gs
js
push
adc
inc
and
stc
xlat
shll
pusha
iret
sub
sbb
jecxz
aad
ss
sbb
std
outsl
test
xorl
cmpsl
popf
pop
mov
cmp
sbb
jo
mov
bound
gs
pop
adcl
outsb
cmc
rorl
cmp
inc
sbb
push
jge
mov
sub
popf
mov
jle
pop
pop
subl
lahf
repnz
mov
aas
xchg
gs
rcrb
mov
inc
hlt
out
sbb
test
int3
push
adc
mov
sahf
movsb
dec
push
sub
mov
ljmp
imul
push
mov
in
push
std
stc
mov
gs
iret
loop
imul
adc
pop
add
sarl
mov
out
mov
or
sarl
lods
aaa
xchg
xor
sub
adcb
les
pop
adc
out
hlt
fwait
icebp
xchg
fdivr
push
lods
jp
shll
mov
popa
fldt
cmp
gs
pop
arpl
add
fsin
xchg
popf
cs
out
add
xor
pop
rolb
cld
iret
int3
negl
xchg
in
or
hlt
shlb
sbb
xor
mov
jmp
cmp
push
pop
bnd
pop
xor
aas
and
sub
ljmp
loop
popf
xchg
pop
pop
sbb
mov
je
inc
fisubrs
dec
mov
test
mov
sub
adc
sbb
lea
mov
lcall
and
sub
push
dec
jle
ret
cwtd
cmc
push
dec
inc
cmp
push
enter
push
jmp
lret
shlb
into
aaa
mov
je
sbb
shrb
cmp
xor
sahf
push
xor
les
shrl
pop
push
push
inc
es
ss
xchg
movsl
lods
sbb
stos
stos
pop
rcr
xor
cmpsb
cmp
mov
pop
pop
push
dec
adcl
cmpsb
negb
iret
fiaddl
sbb
shl
sub
push
sbb
out
add
xor
ds
add
mov
mov
mov
insl
stos
and
pop
repnz
fidivrs
aaa
sahf
add
enter
movsb
scas
jl
push
lea
pop
mov
pop
mov
clc
mov
ja
test
jns
mov
and
ficoms
movsl
ret
adc
aad
dec
jb
addr16
cmp
mov
jnp
jne
aaa
gs
out
xchg
das
mov
xchg
inc
jns
dec
mov
jb
scas
lds
mov
fwait
mov
xor
adc
rcll
push
jbe
pop
call
xchg
xor
lods
mov
pop
in
xor
xor
rcll
loope
les
cmpsb
lods
pop
mov
push
or
pop
xchg
enter
inc
push
jne
push
mov
add
lcall
jge
out
out
pop
xor
xchg
xchg
push
cli
push
cli
nop
xchg
jmp
aam
sbb
xchg
mov
mov
inc
fcmovbe
mov
jp
sbb
add
inc
gs
cmp
or
mov
stc
push
inc
lea
ret
mov
jge
cmp
mov
cs
sbb
out
fildl
xor
ficompl
xor
rcrb
ret
out
sti
rol
insb
add
mov
je
mov
sub
inc
add
adc
call
fwait
iret
je
pop
rcl
ds
push
mov
test
jmp
ficoml
sub
pop
mov
jbe
push
test
mov
and
lret
lods
pop
adc
sbb
xchg
jg
lea
test
pop
dec
and
jp
push
loop
push
addb
xor
mov
inc
push
lret
in
scas
cmp
outsl
fisubrl
andb
arpl
test
and
xor
faddl
xchg
xchg
js
stc
lahf
adc
mov
inc
stos
xor
pop
aas
fisttpl
sub
mov
loop
dec
mov
scas
jp
and
jbe
ja
test
adc
arpl
add
xchg
jns
jmp
jecxz
or
dec
popa
jo
call
pop
add
mov
mov
pop
stos
sbb
or
mov
sbbl
ds
or
outsl
mov
inc
cld
pop
xchg
sub
pop
repnz
jne
push
xor
fs
mov
aad
popf
adc
and
sub
xor
sti
addl
shrl
mov
xchg
pop
push
addl
jecxz
push
xchg
mov
loop
mov
push
add
adc
rolb
es
js
ficompl
jbe
jge
add
cs
imul
imul
pop
adc
lods
daa
idiv
jg
sbb
pop
add
pushl
aad
or
outsl
test
push
dec
lock
and
push
dec
dec
fwait
loop
cs
lods
aad
lcall
and
pusha
in
faddl
jge
xor
cmp
mov
cs
cmp
add
mov
mov
lds
cmp
pop
and
xor
jnp
mov
hlt
test
daa
mov
repz
inc
out
mov
leave
or
add
mov
shlb
in
add
mov
inc
ja
fistl
add
das
mov
jg
xchg
das
sbbb
inc
lods
lods
jmp
adc
xlat
loope
cltd
leave
jmp
mov
mov
je
sahf
pop
pop
icebp
cmp
xchg
and
adc
mov
cmpsb
mov
bound
call
jno
arpl
fistps
xlat
inc
cmp
cmpb
push
dec
cltd
mov
sbb
and
mov
call
push
int3
rcll
inc
pushf
push
push
xlat
mov
mov
ss
mov
lret
cld
addr16
add
into
lds
lcall
push
fwait
add
icebp
loope
cmpl
push
pop
adc
push
loopne
das
ss
jl
das
jns
mov
nop
dec
push
das
or
dec
shll
pop
scas
lods
in
sub
stos
clc
test
pop
pop
int3
add
outsl
nop
lods
test
lods
cwtl
inc
sub
pop
mov
cs
cwtl
or
outsl
out
mov
sub
in
and
outsb
or
fnsave
push
loop
adc
mov
push
cmp
cmp
mov
cmp
test
mov
ret
fbstp
mov
mov
jmp
mov
sbb
or
pop
and
shlb
and
jo
hlt
pop
movl
leave
jo
je
cli
call
mov
push
out
mov
pop
and
lds
shrl
xor
loope
cmp
sub
cmp
jno
hlt
pushf
kortestw
andl
inc
mov
sbb
jns
lret
push
or
popf
add
mov
inc
pop
pop
popf
or
and
pusha
and
inc
mov
add
mov
stos
out
sahf
or
out
test
mov
jle
mov
ds
pop
mov
popf
out
inc
jo
add
cmpsb
adc
sub
inc
dec
xchg
ljmp
jle
jno
pop
adc
pop
int
sub
pusha
cld
mov
fdivr
imul
xlat
adc
mov
inc
or
ja
and
ficompl
outsb
icebp
mov
pop
sub
pop
clc
ficompl
loop
cli
xchg
cmc
dec
idivl
out
add
xchg
fcomp
cmp
orb
es
pop
repz
ret
mov
je
mov
push
cltd
andb
mov
lods
in
mov
imul
rcrb
jbe
mov
call
scas
das
pushf
mov
adc
in
mov
test
pop
xchg
dec
fwait
into
jecxz
mov
das
jb
pop
data16
sbb
mov
jns
je
push
fwait
push
testb
push
sbbb
fiadds
icebp
ret
pop
cld
repz
lds
cwtl
ret
fcoms
add
dec
xchg
mov
jl
sbb
xchg
fldl
lock
xor
imulb
xchg
subl
imul
mov
inc
add
sbb
movsl
mov
or
rcrl
dec
iret
daa
aaa
cmp
movsb
pop
sub
icebp
xchg
repnz
sbb
sub
push
cmp
adcl
or
and
pop
repnz
popf
xor
pop
mov
into
daa
sbb
sbb
sub
add
mov
pushf
stc
push
call
xor
add
lahf
les
and
mov
pop
push
daa
push
dec
sub
xchg
lahf
sbb
addr16
or
fcmovbe
movsb
lods
and
push
jae
push
adc
sarb
rcrl
mov
push
cmp
sub
sub
dec
pop
pushf
nop
data16
js
xchg
insb
mov
in
js
add
dec
push
lods
loopne
data16
jae
jecxz
test
ud1
mov
ss
mov
gs
lahf
scas
push
adc
or
repnz
lret
xchg
insb
ror
adc
mov
adc
insb
adc
out
scas
std
xchg
inc
xor
shrb
fs
inc
outsb
cmp
in
mov
sar
ljmp
adc
sub
mov
jle
icebp
or
mov
push
and
xchg
xor
xlat
les
int3
les
and
cmp
ljmp
inc
scas
lahf
inc
and
stc
mov
fldenv
pop
sub
scas
dec
xchg
adc
push
cmc
int
aas
mov
xlat
mov
loope
gs
fadds
pop
lea
pop
mov
out
lcall
out
xor
mov
lret
cmp
rcrb
add
jle
jo
dec
jne
xor
sbb
adc
mov
cwtl
ljmp
dec
and
xchg
xchg
in
daa
in
enter
add
pop
std
or
movsl
je
jae
fistl
in
xor
cmp
test
imul
cwtl
fadds
ljmp
push
test
ficoms
iret
lret
sub
mov
mov
sub
or
loopne
add
adcb
cmp
add
mov
jae
out
jg
das
in
xchg
inc
test
aas
pusha
movsl
fcom
mov
scas
push
pop
fbstp
xchg
sbb
push
push
and
pop
icebp
cmpsb
sahf
cmpsl
jg
out
mov
cmp
mov
cli
adcl
push
cs
push
lds
lock
pusha
push
cmp
pop
fnstsw
mov
cs
inc
jbe
push
jbe
xor
cld
push
popl
ja
mov
out
xchg
xchg
adc
push
ds
loopne
es
int3
push
dec
aad
jge
inc
pop
shll
or
rcrl
pop
add
sbb
stos
jecxz
dec
lret
into
mov
sbb
loop
pop
adc
mov
das
dec
in
mov
pop
mov
and
push
stc
mov
jl
je
mov
lea
or
adc
jl
sysret
and
mov
jg
or
or
mov
xor
test
mov
out
rcr
imull
sti
test
orb
mov
js
addr16
sub
ljmp
jo
pop
sbbb
fsts
inc
add
in
out
mov
out
mov
in
or
adcb
dec
mov
mul
xchg
mov
imul
fdivrl
adc
push
mov
mov
in
popa
push
decb
add
add
outsl
out
into
pop
cmp
mov
sub
push
push
cwtl
push
lods
cmpsb
or
loopne
test
push
cmp
mov
inc
mov
xor
jecxz
xlat
jb
daa
mov
push
lock
sub
mov
aas
sub
mov
dec
mov
xor
fldenv
push
adc
fimuls
das
in
lret
test
pushl
and
push
fsubrl
sub
push
adc
fsubrp
sub
es
sbb
addr16
xor
xchg
jae
or
popa
sbb
adc
out
dec
xorl
mov
dec
mov
mov
imul
pop
mulb
test
mov
mov
mov
mov
pusha
mov
pop
jle
jb
jne
jno
iret
aam
popa
fwait
mov
push
iret
movl
jae
push
into
inc
popl
pusha
dec
xor
xchg
std
cmpsl
cmp
ret
enter
pop
add
sub
test
inc
repz
xor
push
cmp
xchg
pop
imul
xor
loop
lcall
lods
sbb
cmp
push
icebp
push
pop
ret
push
mov
mov
xchg
mov
lcall
ds
jbe
aad
mov
inc
ret
sbb
sub
scas
adc
push
out
cmpsb
pop
mov
popf
xchg
jle
mov
in
adc
cmpsl
mov
mov
sub
cltd
test
shll
or
pop
adc
outsl
mov
and
test
cs
in
mov
mov
cmp
xchg
or
and
out
dec
cmp
adc
xchg
push
xor
loope
mov
xchg
xchg
rep
fisttpll
cwtl
movsb
divl
les
shlb
dec
gs
ret
mov
sub
pop
dec
sbb
inc
addr16
cs
cld
mov
divl
cmp
xchg
and
dec
stc
jns
aas
sti
sbb
iret
scas
lock
test
xor
push
rcl
sub
mov
into
dec
add
or
push
js
data16
xor
and
xor
xchg
cmp
pop
stos
sub
clc
mov
mov
cmpsb
inc
enter
je
pop
and
mov
sahf
xlat
inc
push
jmp
sbb
fcmovbe
rclb
outsb
movsl
dec
xchg
sbb
push
cld
xor
pop
outsb
adc
adc
lea
stos
jnp
inc
push
dec
popf
shlb
cli
sbb
sbb
fidivrl
fbld
push
mov
sti
test
jg
adc
popa
jmp
jle
movsb
ficoms
js
lds
aam
lods
ja
mov
xrelease
fcompl
cltd
cmp
es
or
xchg
and
nop
idivl
gs
xor
inc
sbb
and
xor
pop
xchg
stos
sahf
adc
jge
inc
jmp
fisttpl
xor
push
lcall
mov
xor
or
and
loopne
xor
es
addr16
sbb
repz
in
mov
ds
adc
out
repnz
dec
push
push
shlb
imul
stos
aad
or
icebp
ret
xchg
test
sub
and
lods
loopne
insb
addr16
sbb
push
stos
cmc
or
sbb
les
sub
andb
xchg
loopne
mov
pop
dec
push
mov
cmp
and
les
std
arpl
mov
cmp
cltd
fs
mov
xor
mov
add
adcl
mov
insl
mov
mov
inc
mov
nop
jecxz
or
aam
inc
sub
or
and
jmp
scas
cltd
push
cmp
adc
cmc
test
out
cld
cmp
call
bound
adc
dec
jp
test
jl
xchg
cmp
mov
int3
scas
mov
lahf
xor
adc
shll
sub
dec
adc
or
iret
push
lock
out
mov
mov
inc
cwtl
lock
movl
push
outsb
adc
sub
daa
jecxz
or
aas
mov
pop
not
jmp
shr
cltd
pop
mov
jnp
cmp
into
pop
in
int
mov
and
idivb
add
icebp
xlat
or
mov
and
pop
and
mov
cmp
push
ja
pop
mov
jle
or
lods
bound
int
cwtl
mov
and
xchg
arpl
lock
add
dec
ljmp
xchg
es
mov
movsl
int3
divb
add
pop
sbb
movsl
jae
imul
enter
pop
push
pop
stos
cmp
inc
jmp
clc
sub
sarb
or
cmpb
and
pop
pop
push
rcl
pop
dec
push
lret
loope
xchg
adc
or
cmp
mov
mov
fnsave
lea
adc
ljmp
xchg
cmp
mov
inc
out
xor
xlat
imul
jl
jecxz
lods
int
sub
push
mov
test
rcrb
sub
xor
dec
fwait
pushl
cmpsb
sbb
mov
lods
clc
push
pusha
mov
jb
cli
sub
fnsave
push
cmc
roll
gs
pop
lods
mov
jns
add
jmp
out
pushf
popf
in
outsb
mov
xchg
and
lds
xchg
leave
pop
mov
mov
cli
and
push
clc
lahf
test
inc
fwait
mov
stc
movsl
add
and
sarl
sub
pop
or
inc
and
es
cwtl
icebp
test
in
scas
cmp
jecxz
cmp
pop
stos
inc
lcall
dec
push
cli
sar
outsl
push
push
loopne
xchg
add
push
addr16
lahf
pushf
mov
aam
ds
push
pop
int
js
lods
xchg
mov
xchg
nop
stc
mov
push
clc
sub
popf
jecxz
repz
cmp
jns
mov
aam
jecxz
fcmove
cmp
mov
adc
add
jnp
and
in
mov
int
jl
xor
in
push
ss
xor
fisubl
jnp
movsl
fscale
repz
and
pop
push
aaa
cld
inc
lcall
cmpsb
in
adc
imul
xchg
mov
or
test
lcall
sub
cwtl
mov
addb
in
insb
xor
jnp
sub
or
push
jmp
fstl
es
adc
adc
mov
sbb
out
ror
inc
arpl
pop
in
daa
push
scas
pop
mov
fwait
jae
push
lret
xchg
push
daa
push
mov
pop
jecxz
dec
fs
in
decb
sbb
cmc
ret
xor
adc
xchg
mov
add
out
movsl
test
pushf
xor
cmp
sahf
test
bound
sub
fisubrs
jp
ss
adc
and
mov
add
scas
xchg
pop
out
sahf
adc
adc
pop
push
sbb
ljmp
pop
push
jb
arpl
adc
dec
adc
and
hlt
pop
push
sarl
cmp
sbb
shll
shlb
call
add
scas
sarl
leave
mov
push
aaa
rcr
lcall
mov
mov
ss
push
jbe
push
insl
sbb
fcmovbe
lahf
lock
fimull
xor
cwtl
cmpsb
mov
mov
sbb
xor
mov
pop
push
pop
fbstp
pop
add
inc
or
cmp
subl
mov
xor
push
out
repnz
imul
sbb
add
ss
movsb
int3
sbb
ja
clc
lahf
in
pop
ret
or
testl
sub
imulb
ret
push
into
mov
push
addr16
adc
dec
into
out
sub
jmp
mov
inc
and
adc
fwait
mov
inc
aam
roll
lods
movsl
loop
lret
ja
cmp
xchg
push
insb
xor
push
lods
out
ljmp
jno
stos
or
cld
ja
jno
rorb
out
mov
xor
sbb
aas
jno
xchg
cs
dec
lret
adc
or
fsubr
mov
push
cmp
sahf
ret
out
pop
jb
ljmp
and
call
lcall
dec
ja
add
jbe
adc
adc
xchg
loope
and
int3
mov
or
fnstenv
and
pmaxsw
sbb
ja
mov
mov
divl
sub
sub
sahf
test
lock
mov
push
pop
mov
lods
adc
push
int
das
fldenv
push
into
out
loopew
mov
movsl
scas
dec
dec
lcall
jmp
xor
cli
or
pushf
jno
fs
iret
inc
lret
mov
adc
jg
xlat
popa
jmp
sbb
mov
jmp
adc
lods
lahf
vaddsd
xor
mov
in
test
stc
dec
sbb
push
mov
cmp
xchg
add
sahf
leave
fdivrl
sbb
sub
push
fadds
inc
mov
out
dec
mov
into
adc
pmuludq
sahf
cmpsb
shl
add
mov
mov
add
mov
mov
dec
sti
test
lods
fwait
and
or
mov
dec
adc
int
loope
sub
jecxz
xchg
jmp
xchg
in
nopl
leave
mov
jge
mov
out
iret
mov
lret
mov
adc
mov
out
sub
cmpsb
push
insb
add
in
fsubr
test
aad
sbb
and
not
jbe
repnz
and
or
cltd
jle
fcmovnbe
or
jbe
xlat
add
jg
adc
shrl
pop
dec
pop
sbb
jl
adc
sub
xchg
jle
jge
pop
dec
mov
mov
mov
sub
push
lea
sahf
das
clc
cmp
mov
push
inc
adc
xor
mov
ja
pop
sbb
jbe
mov
cmp
cmpsl
and
push
ds
jg
cmpb
je
sbb
mov
daa
push
jne
mov
in
cmp
call
mov
or
mov
les
loope
xchg
xchg
cwtl
sbb
inc
lods
cmp
mov
mov
fmuls
clc
mov
arpl
fs
jnp
sub
mov
adc
pop
lea
dec
andb
jae
sub
xor
mov
cli
xchg
sub
fsubrl
repz
cli
aad
sarb
dec
xchg
in
push
mov
inc
outsl
mov
mov
mov
cwtl
cmpsb
pop
jne
fsubrs
mov
or
add
push
or
mov
xor
pop
xchg
pop
leave
mov
jp
mov
and
cmp
cs
and
xor
mov
sub
or
push
dec
jge
push
push
push
xchg
sarb
in
sub
pop
sbb
hlt
jb
mov
lods
xchg
in
or
sub
cmp
aaa
dec
out
dec
out
lret
jns
repz
push
dec
sarb
lea
add
movsl
sub
rcll
mov
mov
fldcw
lahf
and
sub
sbb
insl
leave
pop
je
loop
aas
sub
lods
dec
hlt
dec
jns
lahf
idiv
andb
inc
push
test
xchg
outsl
xor
push
mov
sahf
shl
in
lret
addl
push
jns
mov
mov
out
enter
dec
rcrb
ret
or
cmpsb
lods
add
inc
fcompl
aaa
dec
cmp
jg
or
adc
loope
lcall
adc
or
pusha
pop
out
dec
cmpsl
inc
sbb
cmpsl
mov
test
inc
das
orl
aam
mov
push
ja
rcll
aam
idivl
fs
inc
sbb
xlat
inc
jb
lock
and
out
jbe
insl
mov
push
push
fxch
xor
dec
inc
popa
mov
dec
les
std
addr16
push
jp
rolb
push
and
push
popa
and
add
out
pop
mov
and
pop
stos
xor
xor
sbb
xor
push
into
dec
test
out
inc
mov
test
pop
mov
dec
push
cmp
js
sahf
and
aam
loope
aaa
and
fnstenv
data16
mov
mov
dec
rorb
xchg
jp
inc
and
into
addr16
sbb
and
mull
pop
jmp
inc
sti
xor
push
std
cli
aad
jne
sbb
jmp
mov
push
dec
into
lret
xor
scas
ds
adc
mov
push
mov
dec
fstpt
xchg
ss
sbb
loopne
outsb
jmp
aad
jae
arpl
add
mov
test
fcoms
jbe
fstpt
mov
loopne
pop
sub
jbe,pn
ljmp
xchg
fnstcw
pushf
pop
pop
add
inc
enter
outsl
inc
pop
push
imulb
xor
mov
imulb
jo
je
mov
jl
jb
push
testb
fbstp
push
pop
dec
jle
pop
aaa
loope
xorl
and
out
int
aam
dec
push
test
lods
ljmp
movl
pushl
and
adc
rolb
ret
jne
in
outsb
mov
jno
jns
mov
cmc
xor
icebp
cmp
jb
jl
bswap
stos
pop
lock
mov
cltd
mov
adc
push
movsl
stos
push
sarb
out
and
data16
int
test
push
jne
sbb
ss
fwait
adc
loop
lds
mov
ja
fisttps
cmpsl
ss
in
dec
or
inc
cmp
dec
out
dec
iret
insb
imul
dec
repz
mov
aaa
sub
stos
sub
cs
insw
imul
fstl
jbe
pop
jmp
lock
push
mov
or
jge
add
jns
int
sti
loop
mov
sub
mov
fstpl
cmpsb
cmp
xorb
scas
je
jno
pusha
jg
fcomps
cmp
mov
sbb
call
push
fildl
cld
mov
outsb
sbb
idiv
pop
add
inc
sbb
loopne
stos
mov
adc
xchg
decl
jns
mov
cld
je
cmp
test
sub
lcall
mov
xchg
mov
and
cmp
lret
push
pop
mov
xchg
and
lods
adc
rcrb
and
xor
inc
mov
dec
out
add
arpl
jb
xchg
divb
xchg
rcrl
pop
and
add
fnsave
shll
pop
xchg
lods
fs
cmp
loop
rolb
pusha
idiv
xor
pop
dec
cmp
or
and
and
inc
mov
into
pop
xor
dec
mov
daa
stos
out
sub
mov
cli
int3
mov
mov
push
into
xor
or
jecxz
fnstsw
sbbb
movsb
xchg
icebp
repz
outsl
iret
dec
rolb
xchg
hlt
sbb
daa
andl
mov
jp
or
fs
dec
jge
mov
shl
mov
mov
and
cmp
inc
cmp
dec
enter
ret
int
push
jge
lcall
adcb
lcall
xchg
dec
dec
sub
sbb
inc
cmp
shll
push
fs
gs
dec
push
mov
sub
lcall
mov
ret
cmp
mov
hlt
cmc
les
xchg
dec
cld
pop
jnp
pusha
mov
out
in
imul
sub
jns
ljmp
sub
mov
lcall
or
xor
mov
cld
dec
push
aaa
and
sbb
or
aaa
in
loop
int3
pop
xor
mov
stos
mov
int
pop
aad
push
mov
std
jne
data16
cmp
xchg
push
push
ret
data16
bnd
cltd
mov
jg
or
adc
mov
addl
aaa
cmp
lea
stc
in
lds
dec
fstpt
add
or
incl
int3
enter
mov
repz
fwait
ds
jge
push
iret
or
fisttps
inc
push
cmpsl
mov
cmpsl
lcall
stos
and
jo
imul
movsl
adc
pop
ljmp
ds
insl
sahf
mov
push
pop
std
sbb
sbb
inc
cmp
fucomi
incb
pop
pop
movsb
cltd
inc
jo
adc
push
aam
mov
fisttpl
mov
mov
push
sbb
add
or
and
cs
jge
mov
pop
lds
nop
push
jne
aad
mov
rcll
and
imul
dec
out
cmp
jbe
pusha
cwtl
adc
cld
in
cmp
push
lods
jecxz
dec
mov
je
pop
inc
pop
add
pop
lret
or
pop
testb
shrb
fiaddl
fcomps
mov
lret
sarb
or
cmp
inc
mov
mov
jne
insb
xchg
lret
je
push
shl
movsl
mov
gs
mov
jl
clc
inc
mov
out
dec
scas
mov
mov
mov
sbb
cmpsb
cld
push
in
cmp
ret
xlat
pop
popf
lock
int
leave
dec
jnp
dec
sbbl
or
push
or
inc
mov
into
push
add
mov
out
fwait
jnp
sbb
test
mov
push
in
cmp
les
push
mov
sbb
imul
sub
jl
lds
sub
arpl
xchg
in
pop
call
and
adcb
mov
mov
mov
clc
ljmp
cmpsl
scas
adc
ret
add
nop
or
pushf
into
cmpsb
dec
add
addl
jge
call
add
inc
pop
push
xor
push
mov
test
sub
imul
loopne
sbb
sub
lods
cmp
inc
adc
mov
ds
dec
xor
pusha
and
cmc
stos
in
mov
stos
fstpl
jmp
lahf
icebp
hlt
into
shl
les
js
inc
push
sahf
jae
hlt
mov
test
subl
cmp
or
cli
or
aaa
outsb
ja
rolb
int
mov
dec
cltd
push
cmp
inc
mov
stc
ljmp
sbb
je
jns
push
or
sub
orb
fdivrs
lock
xchg
lock
push
mov
aas
jb
xor
pop
rolb
jae
addr16
sub
fs
js
out
daa
push
decb
cmp
in
jno
sbb
dec
sbb
mov
dec
xchg
xchg
jne
adc
int3
sbb
mov
nop
lret
adc
mov
cmp
pop
pushf
jno
mov
mov
pushf
insb
je
mov
xor
mov
dec
jge
cmpsl
xchg
int3
cmp
mov
popa
mov
push
test
mov
fsts
or
inc
xor
jns
push
lret
out
push
call
ja
cmpb
xor
inc
mov
and
shll
push
push
mov
ds
data16
and
icebp
sbbb
mov
pop
push
ret
inc
sbb
lret
not
pop
xchg
in
push
lock
cwtl
add
cli
loopne
and
aad
rcrb
xor
or
movsb
scas
cmpsb
mov
jl
pop
testb
cltd
mov
or
mov
mov
mov
lods
ljmp
loopne
cltd
push
push
test
js
sub
fs
insb
sti
lret
cltd
jge
insb
loopne
jl
pop
mov
fdivl
mov
imul
mov
jp
nop
add
pusha
xor
dec
or
int
cwtl
xor
fwait
push
xor
int3
movl
dec
xor
mov
or
xchg
repnz
cld
sub
dec
repnz
mov
and
xor
leave
lea
add
push
scas
cmp
jp
je
lock
adc
add
fdivs
insl
nop
into
iret
loop
flds
mov
inc
jp
xchg
mov
subl
fldl
jbe
mov
dec
sbb
iret
sarl
aam
mov
sbb
mov
mov
pop
sti
loope
xchg
ds
mov
dec
inc
je
aaa
jbe
xchg
cmpsl
popa
out
add
stos
push
jg
lret
pop
pop
jmp
inc
aas
stos
std
ja
sbb
sub
lahf
rclb
xor
rcr
test
orb
sub
mov
imul
and
jnp
shll
inc
inc
inc
mov
shrb
push
fwait
mov
pop
mov
cmp
pop
popf
dec
dec
dec
mov
dec
add
cmp
mov
jae
and
mov
rorb
or
and
inc
ds
lock
outsb
push
jnp
sbbb
xchg
mov
xor
and
mov
mov
sahf
lcall
push
jne
cs
lcall
sti
ret
rcl
xor
stos
fdivrs
push
popa
js
jl
into
icebp
mov
mov
mov
test
out
stc
push
addl
sarb
pop
pop
cmp
pxor
popa
cmp
xchg
mov
push
lods
ret
ja
ja
bound
and
cmp
fdivl
es
cmp
pop
fs
in
fcoms
sub
mov
jno
popf
xchg
imul
sbb
inc
inc
iret
jl
pop
jmp
iret
outsw
sbb
pop
sub
pop
mov
lret
icebp
add
xor
and
fidivs
fst
add
lcall
bound
in
push
jne
mov
test
pop
inc
ljmp
cmp
test
clc
and
xchg
jbe
push
add
imul
add
jne
ret
clc
rolb
mov
pop
push
xchg
mov
or
lcall
loopne
fiaddl
pop
mov
xchg
loop
push
pop
adc
push
cmp
rcrl
cmp
xor
ds
sqrtps
loopne
xor
in
and
popa
mov
in
mov
out
lock
imul
mov
les
jle
cltd
cs
sar
cld
mov
sbb
nop
xchg
sahf
fchs
add
jo
mov
shr
dec
jns
dec
ret
push
xchg
jp
adc
jl
pop
lds
mov
pop
sub
mov
test
scas
mov
inc
or
adc
in
pusha
push
adc
cmp
incb
dec
out
rep
and
jle
mov
inc
xchg
int
pop
mov
aas
sub
movsl
mov
dec
in
cpuid
adc
mov
inc
repnz
or
and
push
inc
lods
mov
ljmp
lods
and
loop
mov
add
repnz
fs
int
mov
into
pop
pop
adc
iret
mov
clc
ffree
imulb
adc
repnz
daa
inc
aad
lods
mov
push
dec
mov
in
adc
dec
jne
rclb
and
je
lods
and
sub
jae
xchg
mov
fldt
fldt
jae
or
loopne
lods
pop
inc
test
mov
and
or
mov
lret
xor
xchg
and
add
inc
sub
inc
scas
testl
mov
fmuls
jg
into
fwait
sub
cmp
jmp
xor
add
sbb
out
sub
test
fwait
test
push
mov
dec
pop
mov
push
int
lods
stc
bnd
jbe
das
test
test
sahf
ja
iret
scas
mov
mov
fstps
push
stc
inc
aaa
mov
jo
ds
pop
sub
mov
sbb
imul
ja
je
popa
cli
jne
xor
out
cmp
sub
jbe
aad
add
dec
pushw
push
out
adc
inc
out
xor
cmpsl
adc
xlat
mov
ss
and
xchg
cwtl
dec
adc
insb
xchg
int3
pop
xchg
or
popf
xchg
mov
sub
sub
dec
scas
ss
out
push
hlt
cmp
or
repz
push
inc
or
pushf
loop
addr16
push
mov
add
lret
in
idivl
mov
xor
int
mov
movl
shrb
std
test
inc
jge
mov
fsubrs
leave
fcompl
push
push
lods
pop
or
pushf
andl
popa
xor
push
mov
repnz
add
jp
inc
cs
jl
mov
imul
pusha
in
in
imul
subb
mov
loope
jb
pusha
jl
xchg
sub
push
insb
and
pop
neg
insb
cmpsb
shlb
call
mov
das
nop
gs
addr16
clc
out
and
inc
or
movsb
push
mov
aam
cmc
jnp
xchg
in
adc
add
push
and
jmp
scas
sub
and
stos
sbb
pop
add
cwtl
cmp
fdiv
sub
mov
js
ljmp
mov
mov
orb
pop
fadds
mov
cmp
jbe
mov
movsl
sbb
xchg
jnp
pop
cmp
push
jmp
sub
jb
xchg
rcl
ret
sub
cmp
pop
mov
sbb
test
dec
jecxz
das
pop
cld
push
aad
mov
push
cmp
icebp
rolb
mov
sub
push
cs
ret
outsl
cld
adc
outsb
cvtdq2ps
leave
sti
or
and
jbe
cmp
out
mov
lods
into
popa
in
or
xchg
push
push
divb
and
xor
insb
scas
push
push
lock
lea
pushf
lret
sbb
push
mov
fistps
lods
dec
dec
lods
in
cli
nop
adc
push
lret
mov
das
in
push
push
insb
jb
sbb
push
sub
inc
inc
cmpsb
cld
cmp
pushf
mov
fmul
int3
ljmp
ret
in
gs
sub
mov
xor
imul
int
adc
jle
js
mov
inc
bound
jb
in
sub
out
dec
cwtl
ret
in
addr16
pop
fcompl
dec
mov
bound
and
aaa
and
in
mov
push
gs
mov
cmp
outsb
mov
stc
shrb
popf
jg
push
sub
sti
mov
lods
lret
push
cmp
add
jo
sbb
and
in
rorl
push
push
and
mov
lods
mov
rcll
xor
fstpl
subl
mov
sbb
and
stc
adc
les
push
mov
cmp
mov
mov
rorb
dec
jno
jg
out
xchg
adc
into
mov
in
jmp
cmc
mov
cmp
loop
cmp
andb
sub
loope
popf
sub
fs
sub
push
movsb
das
fisttps
int3
mov
aas
std
adc
xor
adc
inc
out
and
ret
iret
pop
pop
pushl
sarl
js
cmp
or
dec
push
clc
sub
sahf
movsb
les
sti
adc
push
outsl
into
push
mov
out
out
xchg
add
inc
into
stc
push
incl
add
adc
and
subb
loop
test
inc
sub
ret
jbe
cmp
jle
rclb
adc
mov
imul
mov
jmp
out
fcomp
in
jp
jp
mov
icebp
push
sbb
outsb
imul
push
cmp
ds
ret
mulb
fld
push
push
cmp
xor
fldz
mov
divl
and
sti
push
imul
pop
sub
inc
jmp
mov
push
loopne
jmp
rclb
shl
dec
inc
and
jo
add
popf
leave
mov
mov
xor
bound
sti
outsb
fsubrl
out
lods
loop
xchg
cmp
cmp
mov
sbb
leave
loopne
cmp
scas
or
int
lcall
in
lcall
sub
mov
fnstsw
out
cmpsb
jmp
xchg
loope
repz
push
ret
popf
loopne
xor
or
and
repnz
iret
xor
shlb
ficoml
jb
js
test
sub
ss
mov
clc
mov
mov
xor
pop
test
in
xchg
in
fisubrl
cwtl
cltd
jl
mov
orl
mov
push
and
jae
add
movsl
dec
inc
adc
in
outsl
ret
fcomp
pusha
add
mov
ret
cmp
mov
outsl
xor
sarl
xchg
repnz
and
xchg
pushf
fidivrs
loope
cmp
bound
mov
pop
stos
push
popa
out
and
jne
push
push
lea
mov
xchg
add
ficomps
jle
mov
lock
int
pop
jo
push
test
loope
dec
dec
cmpsb
cld
outsb
loopne
mov
test
lock
icebp
addl
xor
jg
adc
ja
mov
bound
dec
add
mov
inc
rclb
mov
arpl
cmp
les
clc
enter
sbb
xchg
xchg
pop
and
inc
test
je
pop
jp
lcall
roll
push
addr16
cltd
mov
shl
cmp
cmc
sub
jbe
adc
das
and
pop
jmp
sahf
pushf
xchg
shlb
add
movswl
out
scas
int
aas
data16
mov
pop
mov
ficompl
mov
dec
push
jg
and
lds
and
fmulp
stos
hlt
mov
mov
xchg
ret
ja
popf
sub
and
icebp
xchg
shrb
jle
in
in
es
cmc
ljmp
mov
push
pop
inc
popa
les
inc
or
lcall
mov
bound
les
lcall
std
xlat
test
fstl
mov
out
outsl
add
or
adc
imul
ret
adc
sbb
rcrb
jecxz
inc
and
xchg
push
movsb
and
fs
mov
rcll
sbbl
fldl
outsl
daa
js
sub
or
lods
add
enter
ds
or
fwait
jne
in
cmp
inc
loopne
scas
pop
pop
mov
sub
je
push
mov
movsb
dec
test
add
mov
aad
out
into
push
dec
push
aad
jnp
scas
fisubrl
or
icebp
adc
push
imul
cmp
push
outsb
push
ret
outsl
fistl
std
xor
mov
and
mov
pop
cmp
jb
dec
add
add
xchg
xor
pop
mov
test
je
shl
pop
out
ja
mov
or
leave
jmp
push
mov
adc
scas
jp
shr
xor
test
pop
imul
mov
aaa
in
subl
jmp
test
push
push
aad
jge
or
cmp
repz
jp
mov
or
ret
in
cmp
loopne
insb
inc
popf
fwait
xchg
lea
push
std
jbe
cmp
and
mov
es
movsl
xchg
dec
push
cld
push
push
and
sub
mov
out
inc
cmp
in
cld
dec
push
xchg
iret
inc
xor
adcl
popa
sbb
cmpsb
xlat
mov
test
ret
adc
mov
add
push
inc
popf
sarb
cli
add
mov
cmp
push
or
cmpsb
sahf
mov
inc
insl
push
mov
addr16
cmp
fs
inc
mov
mov
shl
xlat
adc
dec
sbb
mov
push
in
push
and
sti
jno
sub
pop
add
pop
in
sarb
mov
mov
sbb
push
sub
pop
cmp
ret
mov
dec
out
loop
cltd
hlt
popa
icebp
sub
mov
mov
sahf
neg
adc
pop
das
in
nop
fcomi
jecxz
movsl
adc
sub
mov
movsl
sub
cli
scas
dec
cmpsl
sbb
mov
enter
fnstsw
popf
adc
fidivrs
fs
fsubl
dec
lret
int3
cmc
insl
sub
mov
out
out
or
xchg
into
dec
int
push
inc
xor
enter
int
mov
xchg
loop
pop
xor
lds
fnstsw
lods
jns
ja
mov
bound
out
fmull
add
outsb
mov
popa
mov
cmpb
in
pop
int3
mov
clc
and
mov
mov
push
jg
mov
xor
cmc
roll
scas
ja
xchg
out
mov
pop
aam
testb
cmc
and
adc
test
xor
call
iret
data16
leave
mov
out
jnp
or
iret
jb
stc
mov
push
jp
sub
cmp
cmp
pop
das
jo
fwait
mov
adc
and
cli
icebp
adc
out
sahf
aam
mov
pop
cmp
mov
push
xlat
jne
push
enter
js
pop
shll
mov
inc
mov
loop
lods
mov
jns
sbb
xor
inc
push
xchg
stc
sahf
push
push
sahf
lahf
popf
pop
loopne
jg
dec
in
out
fwait
xor
fidivl
out
in
lods
repnz
inc
in
xchg
sbb
xor
lcall
mov
sbb
adc
imul
jno
cmp
outsl
insb
iret
add
pop
and
jecxz
mov
sbb
arpl
or
mov
push
std
mov
xor
pop
sub
mov
lods
stos
enterw
rorb
mov
jo
adc
inc
out
in
pop
push
std
dec
xchg
scas
mov
rclb
sub
xor
add
out
addb
pop
mov
xor
adc
ss
cs
shll
jbe
data16
push
mov
jnp
add
rolb
adc
jb
test
int3
inc
xchg
jbe
push
es
push
cmp
dec
cli
cmp
cmp
sbb
mov
clc
test
inc
jo
cld
sahf
fists
imul
rcrb
fninit
leave
cmp
add
loop
aad
xchg
in
sbb
mov
sbbb
enter
xchg
out
jp
out
jb
ja
call
jns
jbe
xchg
rcl
xchg
sub
and
push
out
das
mov
or
dec
push
cmp
mov
or
cmp
scas
cmp
fs
jl
loop
jl
jg
pop
out
cld
mov
call
fistl
adc
push
and
arpl
cli
inc
inc
call
cli
inc
bswap
aas
pusha
xlat
int3
mov
fadd
mov
out
sar
cmp
add
aad
mov
sub
dec
hlt
sub
pop
push
xchg
or
lret
xchg
negb
scas
mov
inc
outsb
popa
popa
push
out
rcl
out
push
xchg
pushf
cli
push
out
stc
outsl
dec
add
sub
bound
test
fwait
mov
stc
push
jae
mov
insb
mov
mov
fsubrp
pop
scas
gs
jae
scas
cli
adc
push
pop
lcall
lret
int3
in
je
cmp
ljmp
loope
negb
mov
push
lret
inc
pop
arpl
stc
lods
repz
inc
out
adc
add
mov
insl
mov
jl
lcall
nop
popa
add
lcall
aad
sub
adc
es
out
mov
inc
out
xor
ds
pop
push
mov
mov
mov
jecxz
jecxz
lcall
bound
push
movsb
lds
dec
pop
pop
inc
repz
mov
push
leave
mov
sub
or
aaa
fdivs
inc
arpl
xor
sub
ret
add
mov
inc
mov
mov
or
jnp
dec
fwait
sub
loope
stos
fsub
sbb
imulb
push
add
xorb
cmp
push
jnp
or
cwtl
out
in
push
pop
ljmp
movsb
push
mov
out
fsubs
ret
clc
fcmovb
lcall
ds
sti
scas
add
mov
and
adc
stos
mov
mov
cld
repz
sbb
into
aad
mov
xchg
in
loop
jo
inc
lret
mov
je
popf
xchg
inc
pushf
cmp
mov
xor
rcl
xor
mov
es
add
out
imul
or
mov
stos
xor
in
pop
mov
xchg
aam
mov
outsl
mov
dec
mov
pushf
add
pop
jmp
adc
hlt
jecxz
shlb
insl
mov
movsl
ret
shlb
jo
push
incl
jl
imul
pusha
xor
pop
sub
add
mov
dec
sbb
inc
jmp
inc
dec
sub
or
repnz
das
sbb
int
dec
push
std
sbb
insb
xor
inc
lds
mov
lcall
and
movsb
scas
xchg
sub
scas
lahf
sarb
mov
cmp
ljmp
mov
repnz
inc
in
dec
mov
jo
and
test
inc
xor
push
add
mov
sub
jo
fcoml
rorl
jge
xchg
pop
xchg
mov
inc
cmp
out
mov
add
jp
aam
out
cs
mov
sbb
sub
push
mov
mov
pushf
or
pusha
mov
xor
mov
mov
dec
mov
dec
bound
shlb
out
mov
mov
outsl
rorl
cltd
out
push
add
mov
sbb
and
mov
mull
lret
dec
adc
ljmp
jle
sbb
mov
aad
mov
and
dec
pop
loope
popa
vandnps
and
int
or
jl
inc
dec
sahf
les
shrl
pop
scas
sub
inc
jno
imul
test
outsb
mov
movsl
pushf
add
jmp
js
mov
mov
loop
push
xorb
arpl
dec
push
nop
sub
popf
add
pusha
cmp
mov
shrl
hlt
cli
insl
repz
gs
repz
stc
pop
and
shlb
dec
cmp
les
and
fs
pop
push
mov
mov
push
stos
adc
mov
sub
inc
rcrl
xchg
add
mov
mov
jp
inc
fmuls
mov
lret
mov
cmpb
lret
sbb
in
adc
mov
incl
mov
pop
test
arpl
mov
insb
adc
mov
pop
loope
pushaw
imulb
sbb
in
hlt
insl
xchg
scas
ljmp
loopne
dec
sub
rcrb
adc
inc
es
repnz
fistpll
mov
sub
jae
jecxz
cli
cwtl
pop
jmp
add
repnz
or
inc
call
ficoml
pop
fdiv
hlt
ret
add
mov
mov
push
push
out
ds
cmpsl
inc
inc
int
cmpsb
lods
cld
pop
lret
sbbl
push
and
leave
jg
cld
sbb
pop
dec
or
add
inc
mov
mov
xor
push
orb
ja
pop
add
loopne
jo,pn
out
pop
push
xchg
lock
hlt
adc
dec
loope
inc
jmp
add
cmp
sbb
push
cmpb
and
test
adc
repz
adc
add
mov
mov
popf
bound
push
adc
fldenv
push
repnz
mov
and
mov
mov
insl
dec
rcrb
lcall
mov
popa
out
xor
insl
pslld
iret
mov
decl
call
push
pop
jb
jb
rcrb
dec
out
and
addl
stos
sub
mov
adc
cld
scas
dec
shlb
xchg
imul
test
cs
add
pop
mov
jecxz
sbb
mov
xchg
pop
inc
cmp
ja
mov
sbbb
xchg
and
pop
jp
int3
or
mov
jle
pop
xchg
int
psrld
jmp
dec
out
dec
fstps
adc
mov
pop
loop
out
data16
icebp
cmp
add
cmp
jne
lret
mov
inc
test
arpl
sbb
mov
sbb
xor
mov
enter
ja
mov
lock
fistps
test
imul
add
sahf
add
orl
mov
ret
stos
call
inc
mov
js
mov
in
and
jp
test
dec
loopne
nop
pop
aas
addr16
sub
xor
pop
sub
and
pop
xor
scas
inc
mov
je
push
mov
mov
lods
or
jo
cmp
repnz
clc
imul
mov
mov
int3
jnp
in
sbb
loope
sbb
xor
sub
enter
test
outsb
jle
ret
paddd
fwait
pop
mov
sahf
mov
sub
cmp
mov
jmp
xchg
adcb
adc
fs
movsb
mov
and
cli
aam
ret
add
sahf
and
lcall
inc
jne
cmp
lret
sub
mov
bound
push
sub
int3
stos
lods
stos
jne
push
or
pop
sub
shrb
fadds
out
sar
jns
insb
and
iret
push
pop
dec
mov
lods
mov
push
mov
or
loope
and
data16
stc
sbb
mov
insb
push
bound
xchg
in
jmp
or
and
cmp
int3
jae
stos
jb
aad
dec
inc
sub
xor
push
mov
mov
pop
push
faddl
mov
out
out
loope
test
sbb
mov
or
in
jno
popa
adc
in
mov
add
jns
xchg
or
cs
dec
mov
dec
add
jae
adc
test
pop
stos
mov
shrl
negl
call
jle
mov
shr
push
sub
in
push
sbb
js
cs
daa
dec
pop
fists
test
xlat
out
orl
and
xorl
adc
into
sarb
loop
add
popf
xchg
add
mov
lret
data16
js
xor
stos
lods
xor
mov
loope
repnz
das
ss
testl
sbb
notb
push
mov
sar
add
lea
mov
sbb
cmpsb
addr16
dec
mov
and
push
test
lods
sbb
ror
fcomip
mov
decb
gs
shll
mov
sbb
outsl
jge
jno
out
pop
pop
or
enter
imul
scas
mov
push
sub
into
xchg
out
xchg
lock
and
and
addb
or
push
jae
aaa
pop
add
ss
jns
inc
arpl
gs
mov
out
jo
aad
or
pop
mov
cld
cld
sbb
mov
inc
and
jmp
mov
je
or
mov
or
push
fstl
imul
sub
clc
lcall
cmp
cmpsl
mov
lods
and
rol
loop
add
inc
aas
xchg
pop
push
cmp
cmp
cltd
cmp
call
adc
pop
push
push
adc
lcall
movsb
js
pop
and
je
push
jecxz
repnz
mov
repz
push
mov
pop
sbb
imul
imul
out
sub
mov
sbb
out
fildl
enter
add
mov
cld
push
mov
faddl
fs
pop
push
xchg
push
mov
jne
sbb
sbb
pop
pop
jge
in
mov
jmp
in
pushf
mov
ret
fdivrp
rcrb
pushl
mov
or
mov
mov
cmp
pop
push
das
in
mov
adc
mov
push
mov
mov
dec
gs
push
clc
push
popa
or
adc
cmp
mov
arpl
lret
dec
jbe
push
inc
or
mov
xchg
push
mov
pusha
cltd
sub
aam
in
mov
cmpsl
std
mov
xor
inc
fistpl
lea
mov
movsl
jle
and
jbe
inc
fisttpll
xlat
dec
pop
sub
mov
pop
lahf
out
mov
inc
cs
pop
nop
aam
ret
inc
pop
popa
and
jnp
xchg
popf
inc
in
loope
jecxz
dec
pop
inc
ja
popa
mov
test
push
adc
cli
outsl
bsr
push
xchg
std
cmp
ret
sbb
test
mov
movsl
lahf
sbb
sar
xchg
add
sub
push
aas
fwait
lea
sub
mov
les
repnz
pop
js,pn
notl
aas
cmp
lcall
jg
out
popf
pop
adc
clc
scas
rclb
mov
mov
dec
jge
scas
mov
xor
adc
cld
aad
flds
popf
mov
mov
xor
sub
pop
xchg
je
xchg
sbb
or
cmpsb
mov
or
lea
inc
or
arpl
repnz
das
sbb
inc
cmp
and
insl
shr
stos
jno
in
push
aad
sbb
insb
sbb
repnz
dec
pop
inc
ja
popa
mov
filds
xor
xchg
std
cmp
sub
pop
and
mov
mov
and
call
fisubs
ljmp
ds
lret
shl
inc
stc
jg
push
jmp
jae
and
sub
lods
lret
xchg
rep
lods
xchg
mov
add
push
lcall
cli
je
sti
pop
bound
adc
or
test
xor
inc
xchg
mov
adc
sti
jmp
and
les
pop
ret
cmp
and
insb
lcall
mov
gs
and
addb
inc
iret
es
loope
les
jp
mov
imul
pushf
rcl
pop
mov
pop
scas
jmp
mov
xchg
and
iret
mov
rcrl
mov
int3
jbe
fimuls
inc
add
mov
sti
cmp
mov
das
xchg
movsb
adc
es
aam
xchg
out
mov
pop
aam
mov
int
and
jmp
add
add
stos
and
inc
mov
into
dec
jl
mov
push
addr16
push
xchg
enter
ljmp
dec
adc
enter
jns
in
xlat
sysret
sbb
or
shll
mov
mov
int
lahf
pushf
cli
push
sbb
push
push
xchg
adc
orb
mov
xchg
pop
jle
cwtl
cmpl
cld
xchg
sbb
adc
sarl
stc
popf
inc
sbb
push
pop
jp
push
stos
and
xchg
mov
addl
push
bound
mov
ljmp
jle
sbbl
mov
and
mov
scas
and
or
fbstp
and
cltd
test
stc
lods
ss
jl
push
push
mov
int3
mov
push
or
mov
jb
ljmp
leave
jo
outsb
out
lcall
push
mov
sub
dec
out
add
out
sub
adc
iret
sbb
sahf
mov
add
cwtl
ss
adc
into
gs
or
mov
sbb
aas
sub
iret
faddp
lods
cmc
mov
cmp
pop
jg
jmp
jne
adc
jbe
adc
das
mov
push
jno
outsl
ret
sbb
test
leave
or
rol
mov
cmc
bnd
loopne
leave
add
xor
sub
pop
mov
in
addl
fisubs
adc
lds
sti
int3
sub
push
fidivs
xchg
pusha
int3
imul
cwtl
xor
outsl
mov
mov
dec
xchg
add
shlb
fcmovnu
sahf
sbb
int
adc
add
mov
push
pop
sbb
fsub
sahf
pop
in
aaa
jp
sub
pop
push
test
test
lock
movsb
jmp
inc
fldt
mov
cmp
push
pop
orb
aad
xor
nop
or
add
jle
stos
or
inc
shr
in
in
aam
add
sbbl
nop
sub
loop
fwait
cmc
xor
lods
test
xchg
mov
test
jmp
push
mov
lds
dec
pop
pop
add
jmp
jle
cli
push
fwait
pop
cmp
add
ss
inc
mov
push
pop
test
imul
dec
adc
shlb
cmp
adc
arpl
cmc
outsb
popa
shll
popf
cwtl
lcall
jl
cmp
out
mov
xchg
cmp
enter
sbb
adc
sub
adc
or
sbb
mov
pop
stos
mov
pop
lock
repz
jecxz
cld
push
push
sbb
test
xlat
cltd
fstpl
dec
enter
mov
xor
aam
push
test
rcl
loopne
repz
and
jb
adcb
adc
push
inc
adc
jae
sbb
adc
les
jg
mov
xor
imull
push
pop
fwait
cmc
push
sub
hlt
jle
popf
lds
movsb
inc
stc
jp
sbb
or
cmpsl
xor
sub
dec
pushf
inc
xchg
test
cmpsl
or
loopne
test
mov
dec
icebp
sahf
sub
fisubl
insl
fnstcw
pop
pop
fwait
aaa
xor
lock
out
jmp
inc
popa
jns
cmpsl
mov
mov
sub
insb
push
arpl
jge
inc
ss
test
mov
pushf
dec
xchg
pop
mov
popf
sbb
fwait
xor
mov
mov
mov
aas
xchg
arpl
mov
call
dec
not
jno
or
scas
push
test
xchg
stos
je
adc
ds
dec
pop
aam
scas
mov
jp
adc
outsl
cmpsb
ja
loope
adcb
sbb
lahf
xor
and
lea
scas
aam
jge
cltd
xlat
push
adc
cmpl
aaa
pop
mov
imul
xchg
in
rorl
push
aam
scas
iret
aad
xchg
lods
std
cmpb
sub
push
es
lock
lahf
or
pop
or
jae
pop
cmpps
in
jae
mov
inc
push
test
push
and
sbb
pushf
mov
cmpl
and
adc
iret
imul
lods
dec
sub
cltd
out
push
ljmp
and
jae
test
jnp
aam
xchg
add
pushf
push
sbb
ss
sub
test
les
leave
cwtl
out
mov
loope
mov
or
cmp
lods
dec
test
ja
mov
cmp
add
testb
dec
hlt
ret
mov
inc
sub
sbb
in
es
les
inc
sbbb
ss
xchg
xlat
scas
aad
jne
adc
rep
popa
pop
add
and
adc
movsb
sub
daa
cli
in
sbb
out
call
xor
mov
sub
pop
ss
pop
cs
out
loopne,pn
add
mov
out
push
push
data16
enter
jo
and
cmp
sub
inc
mov
pop
push
cmp
xor
push
cmp
and
mov
and
addr16
shr
pop
inc
cmc
lods
in
jnp
xor
ja
pop
jecxz
cltd
adc
add
out
icebp
push
mov
outsb
in
mov
bnd
cmpsb
xchg
bound
hlt
inc
mov
mov
scas
add
int
mov
sti
or
int3
mov
rcrl
movsl
xorl
inc
cmpsb
or
add
pop
rcrb
add
xlat
subb
jmpw
je
rcrl
mov
dec
lods
jmp
pop
repnz
nop
cmc
pushf
hlt
insl
xchg
cmpsb
jae
ljmp
or
xorb
xchg
fsts
sbb
and
jecxz
dec
lods
mov
movsl
es
clc
push
sbb
dec
mov
dec
or
je
popa
sub
dec
scas
sbbb
adc
insl
fcom
lods
and
lods
and
test
mov
cwtl
sub
push
inc
adc
sarb
push
movsb
push
lea
das
sbb
bound
mov
ja
fdivrs
pop
or
or
outsl
mov
adc
xchg
flds
adcl
mov
imul
mov
xchg
mov
shlb
jne
add
cltd
scas
ret
mov
lods
push
and
inc
xor
test
and
jo
push
and
cmp
mov
push
pop
daa
push
sbb
fs
add
aam
cli
fisttps
jns
add
mov
insl
les
mov
mov
fildll
push
pop
dec
jmp
or
push
mov
out
pop
sbb
xchg
or
xor
gs
xor
mov
or
negb
lods
subl
mov
mov
outsb
pop
out
push
push
add
call
pop
lea
and
repz
dec
loopne
mov
xlat
and
xor
xor
adc
call
mov
xor
jle
fnstcw
add
cltd
inc
pop
inc
mov
fldcw
jle
push
inc
dec
movsl
add
das
sub
mov
cmp
push
pop
aam
mov
and
and
aas
inc
cmpsl
pushf
mov
push
ljmp
sahf
outsl
sub
mov
adc
sbb
sbb
scas
stos
push
in
jmp
ffreep
data16
mov
insl
scas
pop
push
dec
jge
aas
lret
es
sub
mov
imul
cmpsl
movsl
ret
push
scas
sbb
sbb
xor
stos
aaa
shlb
out
inc
inc
pop
jns
mov
adc
std
jp
out
mov
loope
fs
xchg
pop
or
in
in
push
cs
push
xor
lds
lret
in
jnp
inc
adc
xchg
dec
scas
ss
andb
xchg
and
test
imul
dec
mulb
jne
mov
inc
aam
inc
pop
jge
mov
ljmp
mov
jno
mov
int
mov
dec
sbb
add
push
mov
decb
push
int
or
pause
or
lods
lock
push
je
xor
inc
outsl
xlat
sbb
mov
cld
jb
nop
jmp
lret
jno
ret
lock
enter
popf
mov
mov
cmpsl
jbe
xchg
clc
sbb
ja
xchg
addr16
add
aam
mov
push
sbb
adcl
mov
test
insb
xchg
adc
out
arpl
roll
cltd
add
cmp
mov
cmp
mov
xor
mov
out
xor
dec
push
aaa
push
and
jl
ss
xchg
in
das
add
jp
pop
push
xchg
subb
loope
mov
xchg
pop
xchg
xchg
andb
xchg
jae
dec
inc
icebp
jmp
xchg
or
add
xor
sbb
push
pop
js,pn
hlt
mov
push
data16
push
in
lcall
inc
add
push
jo
stos
ds
push
mov
mov
or
ud0
xlat
jmp
andb
stos
adc
push
adc
dec
rcrl
std
cmovle
shrb
adc
cmp
sbb
pushl
add
loop
or
adc
jb
xchg
lods
cmpsl
outsb
je
sub
jo
pop
cmp
sbb
aaa
test
jae
push
lock
movsl
lods
shrl
rolb
cmc
stos
and
in
in
fwait
dec
mov
dec
mov
mov
jbe
or
mov
cmc
adc
fidivrs
or
mov
out
insl
sbb
lret
and
mov
aaa
xor
cmp
scas
mov
mov
mov
add
and
movsb
clc
pushf
outsl
mov
lcall
lret
xchg
jl
push
mov
dec
push
adc
mov
jbe
ret
jb
push
push
scas
cmp
mov
cmp
jne
je
cs
jmp
negl
and
ficoms
adc
loop
pop
push
pop
xor
fmuls
leave
cld
js
mov
pop
int3
aaa
add
add
adc
ret
int3
insb
movsl
cli
inc
fistps
repz
adc
in
adc
call
sub
jg
shrb
mov
data16
and
push
fiaddl
in
loope
xor
fwait
mov
cmp
jp
arpl
dec
cmp
das
loop
out
xchg
in
and
jo
jecxz
sbb
pushf
or
mov
arpl
aad
jae
mov
sbb
mov
loopne
sub
ljmp
je
cmp
mov
clc
pop
stc
cmp
cmpsl
jae
mov
mov
stos
in
rcrb
push
jge
sarb
shrb
int3
xchg
and
cmp
loopew
rorl
std
inc
dec
and
pop
aad
out
dec
leave
lods
jge
fsts
jge
mov
stos
pop
cmc
test
sbb
push
and
popf
lahf
sub
or
fstpt
or
mov
and
cmp
nop
cmp
test
aam
lods
aad
nop
rorb
lods
lods
repnz
dec
and
pop
insl
xchg
mov
inc
sub
sbb
out
or
jge
sbb
jecxz
adc
fnstenv
pop
call
lock
push
mov
test
mov
jg
mov
sbb
add
int3
roll
and
jecxz
push
movsb
mov
adc
outsl
and
addr16
dec
scas
xchg
lret
outsb
pop
dec
popf
roll
xchg
pushf
sub
outsb
fsts
jmp
movsl
push
ss
dec
mov
clc
das
arpl
inc
xor
and
mov
cmp
cmpsl
adc
into
xchg
in
xchg
mov
inc
cmp
out
push
jno
mov
imul
push
and
sbbb
xchg
prefetcht0
mov
lds
xor
dec
dec
loop
mov
or
stos
mov
addr16
aad
test
xor
xchg
jp
mov
int3
inc
mov
push
xor
pop
inc
clc
cmpsl
loopne
call
and
push
add
in
mov
push
cmp
mov
scas
or
cmc
movsl
insl
push
call
xchg
mov
push
std
or
and
fisubrl
arpl
push
xor
and
movsb
daa
lea
xor
jle
pop
sub
mov
adc
in
dec
in
into
shrl
jmp
addb
and
dec
adc
shl
lret
enter
jle
xor
insb
xchg
xchg
jo
shl
aam
lret
xchg
push
jge
je
data16
in
lahf
or
sub
cmp
xlat
inc
test
adc
jge
pop
sub
adc
jp
insl
and
dec
insb
mov
sub
aad
lret
lea
shl
xor
enter
inc
lcall
loop
mov
push
scas
mov
cmp
or
rorb
out
mov
adc
jmp
add
faddl
dec
movsl
rcl
jmp
sbb
sub
inc
sbb
mov
loope
xor
aam
push
jbe
sbbl
lahf
insb
sub
dec
insb
or
aad
repnz
cmpsl
jne
sub
add
jecxz
sub
dec
adc
mov
shlb
les
xchg
imulb
es
idivl
mov
and
dec
sbb
xorl
xchg
gs
add
fildll
mov
or
adc
or
lret
cs
addl
lods
ja
icebp
imulb
add
xchg
adc
adc
sahf
pop
and
pushf
jecxz
lds
ret
mov
popf
cmpsb
inc
adc
sub
pop
sahf
stos
lock
insb
push
shlb
lds
mov
xchg
enter
or
jno
jae
imul
sub
sbb
mov
push
outsb
in
stos
loope
add
ds
and
adc
ret
sbb
addr16
adc
sbb
sbb
push
sub
shrb
pop
push
sbb
repnz
mov
lret
test
cmp
enter
pop
sahf
out
gs
lods
xor
lds
sub
mov
push
repnz
jmp
mov
xor
mov
mov
daa
cmp
aaa
insb
mov
ret
mov
xor
lret
not
imul
lret
xchg
pop
loop
or
sub
lea
ja
into
mov
add
call
imul
stos
mov
jnp
gs
and
imul
enter
adc
jge
loop
rcll
pop
push
outsl
or
add
stc
add
mov
mov
add
sbb
mov
xchg
pop
enter
mov
imul
mov
test
scas
sub
cltd
mov
lret
ror
mov
push
xchg
xchg
inc
sub
lds
mov
sub
jb
gs
add
mov
scas
lea
or
xchg
mov
imul
dec
int3
dec
out
add
cwtl
sbb
xchg
pusha
test
or
test
xor
addb
shrb
out
popa
pop
scas
shlb
pop
jns
xchg
lods
scas
cli
inc
movsl
out
shr
ficoms
xchg
dec
out
xchg
xchg
xor
inc
divb
movl
cltd
ss
pop
sub
iret
xchg
mov
nop
jb
xor
push
std
shrb
sbb
data16
mov
adc
dec
add
lret
movsl
pop
addr16
mov
push
loopne
add
insl
out
xor
and
inc
cwtl
mov
sub
lea
loope
call
push
ret
sub
dec
cmp
mov
or
lods
lahf
sub
fdivrs
mov
mov
fcomps
popf
push
xor
nop
jo
pop
repz
inc
aad
iret
movsl
xor
maxps
arpl
mov
add
in
push
gs
push
stos
and
mov
push
pop
mov
sbb
sahf
dec
cmp
mov
out
sub
xchg
xchg
test
cmp
mov
mov
and
dec
dec
aad
fcoml
mov
popf
movsl
mov
jmp
xchg
jle
ja
xor
dec
out
push
out
xchg
sub
xchg
pop
rolb
sbb
sbb
or
fcmove
adc
gs
pop
jmp
in
nop
out
mov
cmp
mov
inc
sahf
or
or
add
aad
sub
add
sub
jmp
daa
inc
cmp
fdiv
push
aad
les
addl
imul
or
mov
cmp
ficomps
mov
push
cli
test
in
popf
lea
jns
iret
lcall
pusha
cld
cmp
imul
mov
ljmp
add
test
dec
fiadds
in
and
mov
bound
add
xor
fcmovne
or
lret
aad
test
push
fwait
mov
movsb
pop
gs
adc
dec
arpl
inc
cmp
adc
out
push
out
jnp
mov
adc
jno
rorl
sti
xor
repz
xor
mov
mov
loop
divl
push
dec
push
xor
mov
ds
adc
adc
sbb
in
outsl
sub
cwtl
jae,pt
mov
mov
mov
and
push
fisubrl
fisttps
js
lods
push
xchg
jbe
repnz
sti
in
sbb
sub
cmp
mov
push
and
jp
mov
shll
pushf
adcl
mov
cmc
sub
and
cmp
mov
sbb
mov
cltd
and
lahf
and
and
sbb
inc
fdivrp
jne
rclb
mov
jnp
cmp
jp
je
sub
mov
adc
arpl
sbb
stos
repnz
push
hlt
imul
fiaddl
in
dec
cwtl
mov
jmp
dec
inc
mov
push
or
jl
cmpsb
int3
arpl
pop
ret
cmpsb
lret
lret
push
cmpsb
xor
test
mov
aas
icebp
lea
cmp
cmp
aas
pop
adc
push
pop
xchg
mov
adc
sub
mov
cmp
mov
mov
lahf
jl
in
inc
aaa
ss
push
sub
dec
js
ret
cwtl
mov
xchg
mov
mov
and
and
cmp
mov
outsl
shll
mov
add
adc
mov
gs
mov
jns
ss
in
sub
lret
cmpsb
nop
dec
aaa
mov
inc
xor
xchg
lahf
inc
fs
shrb
xchg
or
stos
mov
int
lods
xor
xor
or
scas
push
xchg
stc
and
test
arpl
xor
in
or
push
mov
loop
loop
mov
mov
js
iret
cmp
add
cmp
jb
fstpl
mov
bound
sub
mov
dec
mov
pushl
scas
add
outsb
mov
dec
sbb
lcall
mov
out
lds
jae
sub
aad
add
and
lahf
cmp
aam
inc
xor
push
or
rcll
loop
ja
scas
sub
push
je
in
cwtl
and
inc
xchg
mov
jb
cmc
mov
push
lods
cmpsl
jns
insl
or
add
data16
pop
sub
or
adc
and
inc
dec
in
cld
aaa
mov
push
xchg
mov
movsb
fiaddl
imul
jbe
fadd
cmpl
out
mov
icebp
stos
xor
push
pop
jmp
aaa
ja
test
ja
dec
pop
dec
call
mov
in
aaa
mov
sbb
pop
cs
sbb
sub
mov
inc
cld
hlt
aad
neg
imul
cmpsl
dec
popf
jle
sub
std
push
xchg
inc
xor
and
mov
fimull
sbb
push
ret
pop
mov
xor
jnp
pop
fnsave
xor
ss
out
cmpsb
sub
xchg
leave
dec
subl
add
scas
xchg
dec
sbb
lock
in
jp
clc
jle
je
sbb
mov
mov
push
pop
mov
mov
test
vmwrite
inc
rol
or
into
push
shl
mov
dec
scas
ficoml
neg
loopne
rcll
nop
and
aas
mov
mov
int3
shr
or
into
sar
cmp
iret
pop
jbe
insl
mov
xchg
clc
js
jne
mov
push
sbb
xchg
aam
lcall
jo
sbb
clc
adc
lahf
mov
imul
lods
cvtpi2ps
mov
ja
inc
movl
pushf
push
insb
xor
ret
pop
xchg
cmp
daa
in
xchg
sub
inc
cltd
ss
cld
inc
cmp
adc
jmp
mov
movsb
or
push
cmpsl
dec
ja
jnp
push
inc
mov
dec
dec
pop
pop
or
inc
add
sbb
push
and
or
imul
lods
into
insl
daa
sti
out
call
iret
out
ljmp
test
sbb
mov
add
es
jge
cmp
repnz
lcall
add
rcll
rcrb
sub
pop
stos
negl
jnp
or
sti
or
movsb
pop
add
push
cmp
sbb
aam
fisubs
daa
insb
jbe
loope
sbb
into
xlat
cmp
shrb
adc
mov
inc
push
push
sub
sbb
in
push
inc
dec
mov
roll
xchg
push
lret
out
pop
jge
lods
ret
adcl
mov
notl
jle
xchg
push
jge
mov
and
or
adc
dec
push
in
mov
push
int3
or
idivb
and
jo
or
xlat
test
xor
in
adc
inc
sub
pop
jecxz
sub
mov
push
sbb
pop
arpl
sbb
lret
and
hlt
jo
cld
clc
std
ljmp
stc
xor
cwtl
mov
or
lea
xchg
sub
sarb
mov
into
and
pop
adc
rorl
jo
fstpl
mov
fcmovb
lds
lea
xchg
leave
shlb
xchg
adc
ret
sub
or
lahf
cwtl
mov
std
fcoms
add
xor
movl
push
lods
arpl
mov
xchg
and
sbb
mov
je
mov
and
fs
adc
add
lods
push
arpl
loop
push
mov
inc
mov
fists
pop
mov
pop
inc
cwtl
int
push
pop
sbb
int
sub
scas
sub
xor
push
sarl
outsl
inc
pop
imul
mov
or
xchg
loope
movsb
pop
mov
in
shll
push
cli
mov
dec
push
in
mov
add
xchg
stos
mov
or
sub
ret
mov
push
cltd
xchg
inc
pusha
jno
push
sbb
cmc
fists
ffree
test
jnp
test
dec
jmp
insl
fildl
xchg
movsl
mov
xchg
scas
or
dec
and
in
dec
repz
jb
mov
mov
js
cwtl
in
mov
jns
in
add
jmp
fistps
push
arpl
mov
adc
xchg
xchg
mov
xlat
inc
lahf
cmp
andb
enter
xor
std
push
out
mov
lods
je
popa
pop
jbe
jmp
jle
cmp
adc
pop
xor
insb
cltd
int
imul
bound
lods
in
aaa
or
mov
fildl
xchg
cltd
test
testl
lret
and
cmc
jge
sti
lock
jmp
inc
out
jae
iret
jbe
add
ss
rcrl
cmp
cmp
hlt
adc
add
mov
mov
and
mov
or
outsb
jle
sub
add
inc
mov
nop
scas
or
sahf
lahf
test
pop
ljmp
push
pusha
push
rclb
int
enter
sub
jbe
mov
rolb
sub
int3
mov
push
pushf
stos
loopne
xor
rol
push
lods
add
inc
ljmp
xor
pop
mov
shll
repnz
jmp
jns
pop
jbe
inc
add
repz
scas
pop
xchg
sub
aaa
pop
pop
xchg
lahf
lret
lahf
sub
cmp
lods
lcall
mov
and
sub
mov
pop
imul
xchg
xchg
in
cmc
xchg
int3
jb
imul
cs
js
jnp
push
in
sub
sub
pusha
std
ror
dec
adc
push
int
mov
addb
xor
cmc
fisubrs
mov
xor
test
lret
sbb
fst
dec
iret
push
testl
ficoml
loope
sub
aam
or
add
mov
push
neg
or
and
sahf
cmp
leave
ss
clc
mov
adc
insb
outsl
fcomi
mov
xor
scas
sbb
shll
add
idiv
aas
xor
xlat
mov
push
or
inc
sub
xor
popa
pop
outsb
ficoms
ret
cmp
inc
pushf
out
xchg
push
pop
sub
pop
xor
out
sti
loope
jnp
jnp
sub
sbb
xor
add
sub
mov
movsb
mov
stos
in
fildll
insb
lock
xchg
enter
sub
aas
push
inc
mov
push
xchg
dec
fsts
push
mov
jbe
xchg
push
push
fnstsw
dec
pop
push
sub
push
jo
push
xchg
push
cmp
cwtl
push
cvtpi2ps
cmp
mov
mov
andl
mov
push
cmp
xchg
test
sub
sub
or
and
iret
sbb
xchg
sbb
insl
rorb
add
jno
arpl
inc
add
test
and
sub
cld
adc
leave
add
mov
cvtdq2ps
fstpl
mov
ss
out
mov
dec
inc
dec
bound
mov
xor
sub
lret
mov
mov
push
inc
dec
es
divl
push
dec
test
insb
scas
add
stc
xor
inc
frstor
jmp
out
icebp
mov
outsb
pop
pop
add
fst
ja
xlat
push
add
loop
repnz
jb
fsts
pop
sub
mov
sub
pushf
aas
dec
sbb
std
repnz
adc
call
push
or
or
inc
stos
mov
popf
pop
imul
daa
loope
mov
and
dec
loop
adc
xlat
aad
clc
mov
lea
add
test
les
pusha
pop
fstp
out
pop
shll
movsb
cli
pop
fs
test
jecxz
mov
inc
cs
add
movsb
enter
xchg
lock
jns
pop
jae
cltd
sbb
test
popa
pusha
lcall
adc
sarl
inc
sub
loopne
inc
jl
fdivs
push
mov
xor
sub
stos
adc
in
fwait
mov
sahf
inc
push
sahf
sub
and
jbe
sbb
jcxz
aas
out
and
enter
fisubl
mov
cmp
shrl
jo
aaa
mov
push
or
or
adc
or
aad
lds
lods
jge
and
outsb
cwtl
ret
inc
mov
xor
filds
ljmp
or
rcrb
repnz
inc
not
scas
shlb
imul
add
add
adc
or
xchg
pusha
inc
int3
cmp
decb
xchg
movsl
and
mov
daa
sub
aas
and
adc
xchg
mov
add
mov
inc
inc
cmp
test
pop
gs
bound
addr16
jl
aad
int3
test
cmc
mov
pop
movsl
call
popf
loop
in
mov
sidtl
sbb
sbb
pop
push
xor
fwait
xchg
pop
inc
adc
pop
ljmp
stc
outsl
mov
add
in
iret
push
shr
and
bound
jp
xchg
aaa
or
mov
and
xorb
inc
mov
cmp
mov
jg
sbb
lret
pop
pop
dec
lock
fwait
test
shll
xchg
cmp
inc
test
int3
fstpt
push
xchg
icebp
pop
cmpsl
add
push
hlt
notb
negl
bnd
mov
repnz
fisttps
xchg
mov
ds
cmp
jns
shll
popa
inc
fdivl
in
icebp
in
mov
daa
fdivrs
mov
fnsave
lds
movl
jnp
xor
int3
sbb
jne
scas
push
jge
lods
enter
stos
and
cmp
rcll
test
ret
ret
adc
mov
mov
out
add
cmp
adc
add
lods
daa
loope
add
into
mov
push
aaa
jp
add
push
inc
lock
inc
aam
ja
pushf
mov
loopne
inc
add
repz
daa
or
icebp
xor
add
push
in
add
inc
add
add
add
stos
cmp
stos
loop
add
add
add
popl
add
hlt
loopne
jp
mov
xor
es
add
push
repnz
insl
testl
mov
lock
jno
es
jg
cmp
pop
fldt
add
dec
movsl
jg
int
add
mov
jae
lret
push
in
add
cwtl
add
add
sbb
add
adc
and
mov
pusha
mov
loop
pop
fcomps
add
icebp
pop
fmuls
add
mov
or
xchg
add
cmp
add
das
and
inc
aas
adc
cmp
les
add
xor
cli
pop
adc
call
fcom
mov
xchg
add
sbb
mov
xor
in
in
inc
or
xchg
int3
ficoms
addb
jecxz
push
push
jle
xor
lret
lret
xchg
fldt
stc
into
adc
xchg
es
add
lret
stc
add
fnstenv
mov
jnp
pop
cmpl
cwtl
sub
and
sub
xor
js
add
push
add
add
or
jle
addr16
push
add
push
dec
xlat
push
sbb
es
mov
sub
jo
jns
or
jbe
loop
fadds
dec
add
and
sub
sub
add
add
fildll
add
hlt
push
and
add
push
lret
outsl
clc
aad
psubsw
lcall
xchg
call
add
pop
push
mov
nop
dec
push
mov
add
enter
jo
mov
aam
arpl
xor
lock
add
or
shlb
mov
mov
bound
add
mov
inc
test
fcom
lret
and
pop
leave
xor
sub
sbb
or
sub
fldl
data16
adc
add
push
fnstcw
cmp
lcall
push
addr16
pop
push
out
movsb
add
push
add
mov
xchg
pop
add
sbb
xchg
ljmp
push
sbb
cwtl
jle
adc
pop
das
iret
test
or
popl
inc
loop
scas
fldl
pop
stos
push
sbb
ja
add
loop
sbbl
out
jno
test
pop
add
jne
cmp
nop
xor
inc
lret
add
cmp
xor
hlt
and
mov
lahf
lock
or
add
jg
sbb
out
idivl
mov
adc
and
fstpl
adc
add
lret
dec
clc
idivb
add
push
repz
push
insb
add
inc
cld
testl
add
mov
add
dec
add
cmpsb
outsb
dec
out
or
cli
mov
add
mov
add
pop
pop
popa
add
dec
inc
popa
call
mov
add
add
xchg
push
sub
push
call
mov
push
popa
add
jno
add
out
hlt
inc
movsb
push
add
add
out
and
inc
out
inc
add
call
jae
xchg
xchg
enter
das
adc
push
insb
in
cmp
sbb
add
xchg
mov
repnz
jp
aas
add
or
add
repz
lret
mov
addl
ljmp
add
add
dec
lret
inc
jmp
push
adc
arpl
adc
sbb
test
sti
rcrl
test
sub
mov
pop
idivb
add
jne
add
sbb
mov
jle
scas
and
jecxz
popa
add
push
inc
adc
add
push
shrb
pop
movsb
mov
add
pop
adc
ror
popa
add
mov
out
add
popf
xor
add
fmull
je
pop
mov
xor
loope
jg
enter
inc
aaa
push
mov
pushf
push
pop
cmp
shrb
add
sub
adc
add
add
repnz
ror
add
fisubrl
incl
add
test
xchg
mov
pusha
add
ljmp
xor
or
add
push
cltd
mov
stos
roll
inc
leave
cwtl
add
jmp
push
fldl
pop
ss
popa
aaa
mov
push
imul
mov
jle
std
add
dec
xchg
mov
scas
in
insb
popf
decb
add
movb
lock
jp
cmp
stos
mov
dec
rclb
jnp
add
leave
xchg
add
popf
add
add
jmp
fwait
mov
add
dec
add
add
mov
add
popa
imul
arpl
add
into
inc
jbe
add
arpl
movsb
xor
jge
mov
jno
into
xchg
addl
out
adc
sbb
add
enter
add
add
add
dec
sahf
cld
xchg
add
lahf
push
jne
and
addl
rorb
fldenv
bound
je
xlat
add
adc
pusha
mov
add
adc
mov
lahf
cli
cmp
divps
add
cli
mov
or
pop
add
jl
add
ljmp
mov
mov
pop
daa
cli
sub
clc
js
xchg
xchg
dec
cmp
cmpsb
xor
leave
add
sub
fidivrs
shlb
add
inc
mov
cmp
jge
add
jbe
jns
add
xlat
enter
jne
xor
loope
sbb
add
mov
addl
mov
cltd
mov
add
xchg
xor
mov
and
scas
sbb
pop
adc
repnz
jp
lret
fwait
lock
mov
out
push
testb
iret
and
fdivrs
scas
sti
xor
add
mov
inc
mov
mov
jecxz
call
cmp
cmc
and
leave
jbe
cmp
arpl
lea
add
add
jecxz
mov
testl
dec
xor
add
popf
sbb
jno
shlb
add
sbb
push
pop
sub
add
loope
movsl
xor
int3
out
sub
sbb
cmp
scas
push
sbb
in
dec
sbb
adc
mov
dec
cli
hlt
int
lods
xchg
mov
outsl
rcrl
pop
sub
add
pop
xor
mov
adc
jns
add
add
imul
add
test
mov
popf
push
test
fsubrs
cmp
xchg
jo
add
add
lcall
xor
or
push
xor
jns
xchg
fs
je
add
cmp
in
ret
push
sbb
add
ficomps
and
mov
fidivl
add
cltd
cmpsl
lock
add
leave
hlt
xchg
mov
loope
add
mov
cli
xor
add
test
mov
lcall
popa
in
mov
mov
aam
sub
add
rcrl
add
dec
adc
add
andb
add
daa
fdivs
cwtl
add
add
sbb
push
inc
stc
xchg
pop
jae
iret
adc
jecxz
pop
push
loope
add
mov
inc
movsb
push
add
add
mov
lret
add
mov
pop
fdiv
sti
mov
push
mov
int3
pop
leave
popa
pop
mov
sbb
or
sbb
inc
jns
add
fsts
jne
aaa
inc
jmp
mov
xor
jl
xchg
mov
mov
add
jns
sub
and
inc
imull
add
loope
ss
call
mull
imul
mov
dec
ret
cmp
push
sub
add
xor
or
jl
int3
lea
dec
add
test
fwait
mov
pop
jecxz
das
mov
shlb
out
xchg
sbb
add
pushf
fnstenv
jmp
lock
add
in
movsl
in
leave
push
ljmp
sahf
or
fdivs
dec
loope
mov
outsl
and
add
or
sub
stos
aad
add
add
add
stos
int
in
lahf
mov
mov
sub
call
outsl
xor
pop
add
add
sub
aaa
inc
ret
cmp
mov
loop
mov
jbe
dec
add
add
movsb
mov
jnp
mov
sub
push
std
pop
popf
test
mov
lds
sbb
repz
ja
or
in
sti
push
iret
dec
call
pop
mov
or
add
xor
sub
add
adc
stos
mov
cli
sbb
test
aam
jle
addb
mov
jge
mov
mov
ss
dec
mov
add
push
add
fcmovne
pop
inc
adc
test
inc
scas
lock
xor
or
cmp
add
das
arpl
insb
cmp
daa
decl
xchg
or
mov
mov
cmpsb
popf
repnz
push
cmp
mov
hlt
fwait
data16
add
outsl
sub
js
mull
scas
div
dec
mov
push
and
mov
popf
dec
and
lds
mov
dec
sahf
fwait
dec
lods
cltd
clc
inc
and
add
call
inc
xor
int
add
int
cld
arpl
add
and
xor
loop
rcrb
insb
rorl
jg
int
mov
pushw
xlat
and
js
imull
dec
mov
loopne
mov
jp
push
sbb
mov
pop
jg
add
xchg
push
xchg
stos
cld
cli
cmp
mov
int3
sti
popa
aaa
push
sarb
fwait
dec
insl
lret
in
pop
pop
in
push
mov
mov
mov
sub
add
fucomp
add
or
add
pop
jns
add
lods
jge
jmp
scas
pushf
add
sahf
enter
sti
mov
add
fistl
xchg
cmp
cmp
ss
stc
cltd
ss
mov
or
inc
or
idivl
mov
jle
mov
cltd
and
bound
inc
cmc
xor
outsb
arpl
sbb
sbb
std
mov
add
sbb
cli
jns
outsb
push
les
adc
testl
xchg
std
fs
out
adc
movsb
lods
std
add
and
es
insl
xor
and
jo
add
xchg
aad
not
mov
add
mov
ds
jecxz
mov
fisttps
and
jae
lds
add
add
mov
test
mov
sbb
fidivrl
adc
fidivs
add
pop
and
inc
inc
add
add
adc
rorl
ror
pop
push
add
jo
outsb
fstpl
hlt
andl
or
or
pop
xchg
out
inc
repz
es
jns
inc
pop
push
jge
ds
and
fistl
dec
xchg
ret
add
cld
scas
jo
jle
jg
aas
sub
cmpsl
dec
xor
aam
addr16
push
add
pop
xor
mov
push
xor
into
shlb
push
fiaddl
or
enter
sub
sub
addl
xor
push
push
ficoms
out
out
adc
sarl
mov
add
dec
mov
pusha
ds
int
inc
cltd
add
sub
fcmovnu
xlat
js
push
add
adc
iret
or
add
insl
push
test
pusha
add
push
adc
mov
es
test
cmc
negb
call
lods
cltd
or
sub
sub
rol
add
push
cli
push
inc
add
add
sub
add
add
ja,pt
incl
pop
or
and
xchg
mov
ss
movsb
gs
lea
or
lea
push
push
incb
aad
add
push
inc
inc
shr
stos
mov
adc
add
std
pop
test
adc
add
pop
pop
xor
pop
aaa
push
jb
jle
add
loope
dec
cltd
jg
mov
add
mov
add
and
mov
push
stos
je
add
dec
fbstp
or
add
add
cli
jmp
add
push
xchg
jle
add
bound
push
ret
jecxz
add
or
test
loope
push
scas
sbb
daa
stos
xor
inc
inc
xchg
add
dec
inc
and
xor
adc
roll
add
add
cmp
pop
xor
adc
push
js
push
mov
push
repnz
pop
push
sub
stc
cwtl
xlat
sbb
jb
push
fadds
cmp
mov
dec
sti
or
dec
int3
test
imull
add
or
mov
mov
mov
test
adc
test
mov
cmp
fimull
add
cmp
or
pop
jecxz
cmp
out
jo
aaa
xor
popa
cmp
test
imul
xchg
or
and
test
push
xchg
sbb
orl
or
add
insl
into
jg
dec
out
push
add
add
ljmp
lods
ljmp
pop
sbb
add
cs
out
add
dec
mov
sbb
dec
lcall
outsb
xchg
xchg
pop
daa
lods
push
and
jmp
inc
sub
mov
mov
xlat
mov
iret
icebp
mov
es
sahf
fisubs
add
add
std
add
xorb
in
arpl
lea
jae
jl
mov
aam
dec
xor
clc
jb
xor
and
mov
rcrb
jmp
xchg
and
mov
sub
or
cmp
cmc
inc
std
fiadds
cmc
stos
jmp
scas
pushf
add
leave
ss
push
add
addr16
jbe
pop
int
lcall
xchg
popf
xor
add
lret
cmp
rcrb
movsl
test
add
sbb
xchg
cmp
popl
inc
pop
push
ret
imul
or
adc
dec
iret
dec
int3
cmpsb
test
mov
push
add
cmpsl
add
out
int
rol
cmp
add
xor
push
adc
xor
popf
leave
jl
mov
lods
outsl
movsl
cwtl
fwait
stos
fs
add
pop
jg
das
mov
bound
add
mov
bound
imul
dec
enter
fisttps
xrelease
push
pop
sub
add
sub
add
jns
mov
je
stos
sub
xor
sti
cmp
cmc
stos
repz
and
dec
pop
aad
js
mov
in
imul
clc
clc
inc
sbb
mov
sbb
scas
xchg
jmp
mov
push
add
in
pop
add
jae
lret
jecxz
add
inc
and
inc
enter
adc
out
mov
sti
add
add
fildll
sbb
xchg
fdivl
add
ja
popf
add
je
sahf
add
addr16
lods
xchg
add
add
sub
push
ret
imul
or
adc
cwtl
add
int3
xchg
test
xchg
xchg
xor
push
add
icebp
hlt
loop
es
jae
add
or
mov
add
adc
sub
adc
push
decb
data16
daa
shlb
add
push
sub
xchg
add
sub
rorb
add
add
in
add
add
jnp
pop
add
std
lea
add
fnsave
add
sbb
cld
xchg
or
sbb
xor
lds
dec
adc
xchg
hlt
add
add
outsb
mov
mull
mov
mov
add
xchg
xor
xchg
mov
xor
cs
add
cs
xor
fnstcw
sbb
cmp
or
add
stos
stc
lock
pop
xchg
in
fisttpl
fsubs
add
add
enter
or
pop
or
pop
sbb
push
int3
push
mov
adc
add
jecxz
mov
jb
loopne
test
and
fnstsw
add
pop
inc
push
mov
repnz
out
fsub
xchg
pop
mov
pushf
scas
mov
inc
cltd
add
xor
add
repz
fisubrl
fildl
add
push
mov
mov
insl
arpl
add
mov
repnz
mov
add
xchg
andl
mov
sahf
roll
and
jl
inc
sbb
jg
add
sar
fiadds
fidivs
add
test
cmc
aaa
or
dec
ret
xchg
dec
test
pop
or
test
add
jo
push
pop
int3
add
aam
add
lret
add
cmp
gs
add
mov
movsb
out
push
shlb
pop
fsubrs
test
cld
cmpl
add
fdivrs
mov
add
add
xchg
mov
push
add
add
std
pop
jae
mov
mov
add
add
xor
faddl
sbb
jae
jecxz
mov
add
pushf
imul
add
jge
mov
test
add
add
add
lods
pop
loope
add
add
xor
pop
negb
add
push
jae
loope
add
sbb
in
test
or
outsb
mov
sub
jmp
cwtl
push
out
push
cmpsb
jb
adc
jo
add
pop
daa
push
movsl
add
mov
fisubl
add
add
icebp
pop
aad
dec
add
arpl
mov
add
add
fcmovnu
add
and
rcll
stc
or
jae
inc
lds
mov
or
pop
xchg
cwtl
movsl
add
out
loop
add
cmc
lods
pop
add
push
fstpl
push
incl
dec
hlt
dec
cmp
add
mov
add
add
adc
pop
add
leave
cld
divl
into
add
add
scas
xchg
inc
mov
add
loopne
jecxz
rolb
inc
push
add
bound
xlat
aas
add
cmp
add
imul
sbb
xchg
xchg
pop
shrb
bound
lahf
push
add
rcll
or
cwtl
push
add
repz
stos
arpl
cmpl
jae
adc
cld
inc
add
mov
adc
add
dec
rolb
and
mov
roll
push
inc
ds
add
xchg
arpl
pop
mov
enter
stos
xor
repz
fidivrs
loop
push
dec
push
lcall
aad
and
fldl
push
stos
scas
cli
cltd
lahf
les
out
add
push
add
add
add
loop
xor
stc
jle
add
mov
inc
and
add
add
mov
add
xor
add
jmp
push
xlat
sub
lds
adcl
push
add
call
push
mov
jo
inc
mov
sbb
test
add
add
jecxz
jns
jbe
mov
add
add
cmp
scas
push
shll
leave
xchg
sbb
es
or
mov
cli
lods
add
mov
shlb
lret
add
add
in
mov
outsb
aas
es
test
fdivrl
stos
add
cmp
xchg
ret
ja
sbbb
add
imul
push
add
inc
clc
rcll
je
mov
cmp
jo
add
cmp
dec
lock
push
inc
into
mov
insb
xchg
add
pop
loope
test
mov
mov
aaa
mov
mov
out
test
mov
jge
test
movsb
clc
adc
call
add
xor
clc
or
pop
testl
dec
shll
lock
add
loop
push
pop
dec
cmpsb
mov
fwait
cli
test
cmp
cmp
add
sub
or
add
fnstsw
push
dec
sub
inc
and
jne
sbb
xchg
sub
icebp
add
imul
xor
mov
cmp
push
call
rolb
loope
es
xchg
add
into
out
mov
inc
les
pop
jecxz
inc
jb
adc
xchg
pop
mov
add
in
xlat
inc
mov
fisubs
daa
subb
orb
daa
xchg
pop
std
mov
sub
jg
ret
sub
fs
add
in
jmp
mov
jbe
dec
in
sbb
pop
add
imul
stc
pop
or
imul
pop
sub
sbb
or
pop
int3
in
add
adc
bound
xchg
cmp
scas
mov
mov
mov
sbb
sahf
lock
xchg
roll
adc
push
imul
sbb
mov
mov
xchg
inc
jb
adcl
mov
mov
lea
add
aad
add
pop
add
nopl
ja
call
sbb
mov
pop
and
push
sub
xorb
jge
mov
sub
fbld
cmp
cmp
add
add
xchg
hlt
jge
xchg
pop
in
cmpsl
gs
stos
arpl
stos
mov
out
cmp
ds
ret
loope
mov
jp
jbe
insb
adc
push
inc
popf
mov
sub
mov
out
repz
mov
hlt
cld
adc
ds
jmp
add
add
mov
mov
sub
cmc
pusha
arpl
in
mov
popf
jg
push
jl
push
xlat
movsb
enter
mov
cld
mov
ret
xchg
sbb
push
dec
add
sub
pop
enter
repz
ret
xor
mov
shlb
and
and
or
add
push
and
psadbw
sbb
data16
pusha
pop
and
das
push
mov
jbe
shrb
adc
push
inc
mov
push
sbb
aaa
add
fadd
jle
scas
adc
add
add
int
sbb
ds
mov
add
mov
xchg
add
mov
cmp
stos
roll
add
add
icebp
jns
cs
stos
xor
mov
and
pop
jbe
add
pushf
fbstp
push
stos
aas
test
push
aam
add
mov
add
repz
movsl
stos
mov
xchg
std
cltd
test
add
push
mov
or
add
add
es
mov
stos
xrelease
std
pop
aaa
push
dec
test
clc
add
int
mov
test
cmp
jl
shll
mov
mov
inc
scas
imul
movsb
push
jnp
aam
mov
add
sarb
sbb
sbb
test
mov
or
fwait
rolb
inc
lock
add
mov
dec
inc
mov
mov
xchg
mov
out
jle
insb
xor
push
mov
nop
repnz
dec
iret
push
data16
jecxz
jge
mov
std
jbe
aas
xchg
pop
and
mov
aas
aaa
ret
nop
je
cmp
pop
scas
in
data16
sbb
sbb
cmpsl
je
sbb
jl
sub
jb
xchg
add
into
jns
hlt
push
stc
or
jge
ljmp
dec
loop
sbb
rolb
lcall
into
movsb
cs
lcall
add
loope
add
sbbl
sarl
in
hlt
push
mov
out
xchg
add
jg
ja
testb
push
fsubs
rolb
sbb
push
lods
ds
test
rolb
inc
in
notl
pop
aad
add
jg
push
adc
sbb
add
sub
ds
inc
data16
cmp
aam
les
and
xchg
lds
xchg
mov
scas
leave
adc
jecxz
std
xchg
outsb
sahf
push
adc
add
mov
xor
cmp
dec
data16
lahf
mov
aam
in
pop
xchg
ds
leave
mov
inc
add
and
dec
or
lods
and
xchg
or
sub
adc
out
add
push
loope
fistpll
jbe
add
add
pop
arpl
and
pop
xor
fbld
mov
add
hlt
repz
add
lret
push
lahf
mov
xchg
add
add
inc
jmp
add
adc
shrb
jge
cmp
mov
rcrl
pop
add
call
aad
jnp
mov
sub
mov
repnz
add
dec
movsl
loop
inc
cmp
cwtl
outsb
mov
loope
lods
mov
add
std
sbb
enter
push
pop
lcall
int
add
xchg
cmp
enter
in
add
adc
mov
add
outsl
js
push
mov
pop
mov
add
data16
sbb
add
push
cmpsb
adc
inc
out
mov
jg
xor
nop
dec
xchg
in
cmp
std
jae
add
add
push
mov
je
imul
rclb
and
dec
ja
repz
test
aam
mov
xorl
sub
mul
out
outsb
xchg
push
jmp
jo
mov
out
jno
hlt
xchg
cmp
add
sti
insl
cli
add
bound
add
add
push
sub
push
fldl
add
outsl
fadds
scas
outsl
sbb
es
inc
inc
das
jb
mov
dec
mov
mov
subb
out
lods
jmp
push
inc
adc
jno
shrl
out
push
insl
xchg
add
mov
jns
jne
mov
push
mov
or
movsb
outsl
xor
fistps
rep
jo
add
stc
pop
hlt
push
mov
pop
pop
push
cli
dec
imul
cld
inc
sbb
add
imull
add
add
xchg
fucom
mov
xchg
xor
stos
inc
xchg
in
lcall
adc
scas
inc
add
add
jns
add
sbb
test
add
pusha
inc
add
sub
mov
add
scas
add
mov
jecxz
mov
subb
incb
popf
ret
mov
int3
lret
inc
mov
mov
test
add
js
imul
inc
out
out
jle
mov
add
jae
or
fs
mov
mov
test
xor
sub
add
add
jmp
jp
jae
cmp
pop
sub
roll
sti
testb
in
mov
stos
mov
mov
dec
inc
push
xorb
jecxz
pop
cmp
shl
xchg
adc
fistl
jns
shrl
lahf
leave
imul
inc
loopne
divl
pop
xchg
stos
pushf
pop
test
testl
jl
popa
arpl
lock
jne
push
push
divl
loop
and
sbb
and
mov
or
cmp
aam
aad
nop
xor
out
outsl
sub
imul
movsl
sbb
mov
mov
add
push
cltd
add
pop
jge
sarb
push
cli
jmp
or
ss
cmp
jno
adc
push
cmp
inc
test
mov
add
add
add
ret
out
sbb
push
pushf
lods
jne
mov
pop
insl
test
repnz
jns
fdivrl
add
lcall
js
add
dec
push
mov
mov
cmpsb
pop
out
inc
cmp
jmp
add
add
test
lret
insb
pop
dec
push
and
push
jae
outsl
xor
jg
push
in
std
call
jae
ret
dec
add
setle
mov
adc
inc
xor
iret
inc
rorl
aam
pop
mov
fwait
pop
adc
add
out
bound
push
sub
add
inc
or
xor
les
movsl
lahf
xchg
or
cltd
sub
lods
sbb
xchg
mov
add
pop
push
and
std
fs
loop
leave
jg
sbb
add
inc
mov
sbb
daa
mov
in
repz
sar
push
std
je
fidivrs
add
mov
shrb
mov
mov
dec
repz
and
pop
aad
and
xor
inc
xor
adc
stos
add
push
push
cli
mov
in
jns
add
les
loope
inc
cmp
add
or
sti
mov
add
inc
movsl
dec
les
cltd
pop
push
xor
or
dec
add
outsb
movsb
dec
jb
ror
data16
out
std
clc
xchg
add
add
jle
add
sub
jns
mov
fisubs
popa
add
loopne
cmp
sbb
test
mov
add
jge
xchg
repnz
jg
ret
pop
or
inc
xor
push
xlat
divl
enter
mov
jl
add
fcmovnbe
nop
in
inc
and
add
xchg
rol
xchg
and
mov
inc
insb
cwtl
cltd
jnp
jmp
int3
mov
mov
push
lret
filds
push
mov
add
mov
add
add
adc
or
lahf
js
ret
and
add
push
test
mov
xor
add
lea
sbb
es
in
fdivs
add
sub
jne
and
pop
mov
js
add
fsub
dec
add
movsb
mov
add
shll
push
aas
mov
sub
push
add
inc
and
pop
rorb
scas
hlt
fsts
into
hlt
enter
cmp
cmp
or
aaa
cmp
xchg
xor
std
cmp
mov
adc
cltd
jno
rcrl
cmp
push
rcrb
in
and
and
push
orb
adc
pop
xchg
imul
pop
mov
jg
add
add
cltd
mov
sbb
lret
stc
add
popa
lea
mov
cmp
xor
je
push
adc
jb
adc
inc
jp
lods
outsb
fprem
or
movsl
lret
adc
push
daa
loop
sbb
mov
ja
mov
inc
mov
cmp
andb
xchg
dec
fists
cli
xor
add
mov
mov
or
cmp
negb
cmpsl
jb
pop
mov
rcr
or
dec
lea
dec
xor
or
jne
xor
leave
cltd
nop
push
push
lret
nop
scas
jae
jge
daa
mov
sbb
gs
aam
xor
ss
ja
lods
adc
imulb
das
test
xor
and
addr16
enter
sub
loope
movsb
inc
popa
cli
lret
hlt
xchg
push
fsubrs
js
sti
icebp
lods
mov
mov
add
ljmp
clc
jmp
cmp
enter
fildll
adc
shll
nop
imul
int3
xor
push
add
out
jle
or
push
jge
jb
xchg
sti
mov
lods
cmp
cli
aam
or
add
fmull
push
lcall
popa
push
jno
stos
das
push
xchg
dec
stc
cmp
pop
int
pop
jl
lds
pop
xchg
cld
push
insl
ud2
jl
cmp
mov
dec
mov
sub
push
or
add
add
lcall
leave
dec
xchg
movsl
xchg
add
cld
leave
in
add
add
sbb
pushf
add
add
cltd
mov
add
push
ret
enter
call
insl
js
adc
testb
int
push
idivl
xchg
cmpb
xorb
movl
add
repnz
lcall
dec
fidivrl
and
mov
cmp
in
jmp
in
dec
popa
inc
enter
mov
in
cmp
ja
out
adc
mov
mov
inc
inc
pop
ja
ret
sub
sahf
in
xchg
jo
push
jmp
or
popl
dec
out
in
pop
xorl
dec
dec
add
dec
adc
pop
sub
imul
xchg
fisttps
lcall
jle
dec
cmp
mov
mov
scas
mov
jbe
jne
lea
test
mov
mulb
add
in
inc
push
cs
shrb
and
lcall
out
dec
jecxz
add
add
add
lock
mov
adc
inc
dec
inc
loopne
loopne
mov
dec
pop
sbb
cmp
sahf
fstsw
mov
mov
hlt
shrl
int3
push
jbe
out
ss
sub
mov
add
and
fdivrs
add
dec
sub
js
sbb
add
push
push
sub
push
add
or
loopne
lahf
lcall
cmp
in
pop
ss
imul
fcoml
icebp
out
call
rolb
add
mov
loope
add
or
ret
fidivl
dec
insl
stos
push
xchg
add
repnz
push
sbb
jnp
lret
aas
push
pop
jg
out
adc
add
add
fadds
inc
insb
xorl
add
pop
mov
jnp
adc
insl
lret
in
pop
mov
mov
clc
cmc
test
push
xor
xchg
xor
add
push
inc
dec
leave
gs
cmp
std
jae
or
xchg
and
test
add
sbb
add
mov
push
enter
out
dec
icebp
pop
mov
add
add
add
js
mov
sub
mov
out
mov
adc
cmp
daa
in
add
push
stc
cmc
jmp
add
fwait
aad
int
mov
mov
mov
cltd
ljmp
insb
dec
mov
outsl
mov
add
sti
or
std
add
loope
and
test
sbb
push
push
mov
add
roll
aad
xor
add
and
arpl
add
aaa
xor
mov
add
lods
mov
scas
xrelease
lcall
mov
mov
inc
xchg
xor
push
sub
mov
or
scas
lods
leave
cmp
dec
insl
add
adc
add
jg
jge
insl
add
out
xor
mov
xor
div
imul
out
in
cmp
jnp
aam
pop
pop
cmp
add
ret
shlb
popf
fisttps
mov
jp
add
fnstsw
xchg
sbb
fsub
lret
mov
rcl
push
pop
mov
lahf
add
xchg
out
add
add
adc
push
xchg
comiss
inc
mov
mov
popf
int3
in
movsb
inc
icebp
add
inc
mov
fcmovne
scas
adc
xchg
mov
clc
push
test
pop
addr16
sbb
add
mov
dec
add
stos
jns
inc
pop
in
jp
add
cld
push
stos
sbb
mov
add
mov
fcoml
jg
push
inc
pop
inc
mov
push
sbbb
xchg
adc
lret
xor
imul
fsubr
jnp
mov
dec
jnp
inc
push
nopl
data16
pusha
cmp
mov
into
adc
mov
add
or
clc
cmp
pushf
lret
dec
aas
movsl
ficomps
add
sub
fldt
out
into
pusha
sbb
pop
xor
xor
cmpb
ja
add
and
mov
dec
outsb
in
lret
insb
shlb
jl
mov
scas
adcl
into
out
jle
jle
mov
mov
sbb
in
cmp
out
out
push
mov
add
add
loopne
pushf
mov
test
add
pop
js
std
push
and
add
shlb
add
xor
aad
mov
add
gs
xor
add
rclb
add
add
push
jae
call
daa
sub
sbb
out
pop
mov
insl
xchg
push
cmp
test
cwtl
daa
mov
push
jle
fildll
outsl
addr16
movsl
add
add
mov
inc
cmp
jbe
xor
int3
or
fadds
mov
add
inc
pop
in
inc
jae
pop
mov
nop
xchg
inc
insl
fistpll
lods
or
add
cld
cld
cltd
pop
dec
mov
popa
cmp
adc
das
iret
mov
mov
inc
inc
push
xor
lret
dec
jge
ficoml
iret
mull
push
fwait
inc
mov
lods
xor
add
call
daa
fmul
jmp
add
lock
fdivl
shlb
ds
add
add
lret
mov
out
add
add
xchg
jle
sbb
add
add
add
imul
arpl
ja
fiaddl
add
gs
mov
pushf
fwait
mov
lods
add
add
enter
add
jae
dec
dec
push
out
add
aaa
xor
loopne
decl
notl
add
push
add
add
add
sbb
adc
movsl
add
add
cmp
or
add
sbb
vmovntps
add
mov
inc
or
ljmp
movsl
adc
hlt
sub
aas
push
sub
loope
aam
leave
xor
movsb
inc
dec
push
loopne
jle
sbbl
lock
int
add
les
call
sahf
pop
mov
mov
and
test
mov
cmpsl
es
add
add
ljmp
mov
fistl
enter
sbb
stc
jb
adc
pop
cmp
mov
sbb
mov
mov
sbb
divl
idivb
pushf
add
data16
add
xchg
ds
js
sub
mov
into
in
dec
pop
adc
dec
je
scas
and
inc
std
scas
repz
stos
shlb
cmc
fimull
roll
popa
adc
xchg
icebp
xchg
xor
rcll
add
cmp
les
add
inc
mov
jle
sbb
add
mov
es
ljmp
add
jle
decl
push
gs
add
push
cwtl
addb
inc
mov
and
ljmp
add
fs
push
dec
aas
push
lahf
xor
ja
lea
push
push
call
and
add
push
movsl
nop
call
add
adc
lock
cmp
add
out
inc
popf
push
add
push
mov
cmp
add
je
cld
fldl
add
into
inc
gs
int
fs
addl
add
popa
cmp
das
mov
push
test
subl
push
inc
sub
adc
out
add
add
jmp
aaa
fisttpl
xor
andl
aaa
idivl
adc
pop
out
insl
stc
add
xlat
adc
push
flds
dec
add
cmp
es
inc
in
jp
add
fbld
daa
dec
std
fucomip
add
mov
add
bound
push
fldl
jo
pop
add
add
les
bound
jb
stos
xrelease
testl
push
sbb
push
adc
jge
data16
and
sbb
xor
fadds
and
shrb
sub
jne
adc
add
iret
jnp
test
loope
or
pop
pop
add
mov
lret
popa
int3
add
xchg
lods
fisttpll
jle
xchg
enter
add
add
hlt
pusha
push
jnp
cmp
add
out
test
daa
dec
mov
pop
adc
pop
add
add
rolb
ds
mov
mov
add
xchg
mov
inc
shrl
add
mov
bound
add
jmp
leave
mov
jo
jmp
mov
sub
xchg
ss
add
lahf
xor
mov
das
cld
loope
cwtl
push
cmp
dec
mov
add
loope
sub
mov
movsl
adc
push
cmp
cmpb
jmp
sub
mov
add
cmc
mov
je
mov
add
sti
sub
mov
push
dec
add
pop
clc
stos
adc
pop
and
cmp
je
out
mov
loop
sbbl
out
jno
out
lods
je
add
call
inc
lods
insl
add
pop
mov
dec
xchg
and
push
repnz
push
and
add
loopne
add
cmp
std
aas
incl
shll
jb
pop
mov
nop
rolb
inc
in
idiv
loop
inc
test
mov
mov
add
inc
dec
inc
cmpsb
mov
push
jge
add
mov
int
pop
add
jae
jno
or
cltd
fmull
add
test
cmp
add
insl
out
popa
repnz
imul
sbb
loope
xor
dec
pushl
xchg
out
xlat
cli
je
dec
fcomps
push
outsb
cmp
add
add
rorb
add
sbb
xor
mov
cs
add
es
divb
add
add
in
mov
stos
arpl
mov
add
insb
pop
mov
or
xor
inc
in
fxch
rcrb
add
push
dec
or
add
mov
add
or
filds
cli
dec
inc
add
stos
mov
dec
cmp
cmpsl
sti
pop
add
inc
addr16
arpl
idivl
sbb
adc
cmp
add
sbb
wbinvd
push
mov
out
xchg
dec
mov
dec
cltd
idivl
add
fwait
lds
icebp
cmp
mov
pop
jge
loop
jecxz
dec
jne
pop
add
movsb
add
sbb
xor
add
enter
pop
aas
add
ja
jnp
fiaddl
or
in
and
les
in
int3
add
test
into
cmpsl
das
jnp
mov
jecxz
subb
sub
pop
je
cmc
imul
mov
inc
in
in
add
add
sub
sub
pop
pusha
arpl
incl
pop
push
aaa
fcmovnb
add
jb
mov
sar
imull
popa
jne
inc
dec
imul
jo
sbb
mov
in
lods
pop
aad
add
xchg
push
pop
adc
stc
xor
cmp
lods
fs
into
out
jne
push
mov
jne
repnz
addr16
add
add
push
add
std
hlt
jb
lods
xor
lds
xchg
sub
out
inc
xchg
insb
dec
push
add
call
movsb
jo
lcall
mov
cld
xchg
outsb
add
mov
add
ljmp
add
pop
add
fwait
aaa
add
or
out
adc
mov
insb
sbb
jbe
es
fs
cmp
push
and
sub
sbb
add
or
test
add
int
inc
pusha
dec
xchg
push
and
rcrb
fisttpll
cmp
add
mov
pushf
leave
ss
dec
sbb
repz
push
loope,pn
pop
rclb
hlt
in
mov
jns
movsl
repz
inc
pusha
sti
rcrl
xchg
arpl
add
add
ss
add
pop
add
pop
aaa
add
aaa
add
jmp
add
test
cmp
adc
or
jecxz
xor
sbb
or
mov
dec
mov
testb
loopne
in
xchg
das
notl
push
or
insb
mov
ss
jns
push
imul
out
add
add
arpl
test
jmp
sbb
inc
add
adc
push
jno
add
mov
inc
ljmp
xor
pop
and
pop
movl
addr16
or
cmp
sti
or
cmp
test
lods
xor
push
sub
addr16
xchg
fmul
xor
sub
outsl
add
add
out
sub
aam
ret
es
xor
push
add
add
pop
clc
fisttpll
sub
add
popa
xor
stos
push
je
xrelease
cmp
xchg
cwtl
sbb
add
add
aam
sbb
test
xchg
push
sbb
mov
inc
add
add
xchg
add
cmp
subl
mov
add
add
mov
jecxz
add
add
ljmp
divl
cli
add
add
movsb
data16
cmp
testb
add
test
adc
popa
add
add
std
jg
sbb
ja
add
lcall
inc
inc
fdivl
cli
xorb
cld
test
add
fnstsw
add
lods
jno
mov
loope
data16
pop
jno
add
add
and
leave
mov
mov
and
add
dec
fcompl
jle
mov
mov
jg
push
pop
jns
inc
mov
int3
fidivrs
outsl
fs
jmp
push
add
sub
sahf
aam
sbb
sub
inc
sarb
xchg
xchg
dec
outsb
xchg
mov
pop
popa
push
fs
outsl
push
cmp
add
push
jno
dec
adc
add
add
jl
outsl
cmp
push
gs
insb
add
add
xor
js
or
add
adc
int3
push
imul
mov
add
mov
inc
inc
fidivrs
movsb
out
push
add
mov
jbe
std
hlt
mov
jecxz
dec
fstpt
jge
or
xorb
add
add
and
cltd
data16
push
scas
das
scas
or
inc
and
out
mov
add
add
lods
push
cmp
ficompl
cmp
dec
add
add
jge
aas
scas
sbb
out
add
add
pop
aam
inc
ja
cmp
add
add
and
add
jmp
scas
sub
jb
inc
add
add
nop
je
add
add
mov
or
leave
mov
out
add
mov
fbld
mov
fnstcw
loop
mov
add
rcll
fwait
sub
je
shll
fwait
pusha
cmpsl
loop
out
mulb
add
mov
int
mov
fiaddl
adc
jle
cmp
cmp
enter
mov
repz
insl
lea
cmp
xor
jp
sarb
xchg
in
sti
or
xchg
lods
mull
add
mov
pop
add
in
sbb
sbb
dec
ds
mov
cmpsl
inc
or
jmp
mov
or
popf
inc
rol
aas
inc
dec
dec
lds
or
dec
pusha
push
icebp
dec
sub
jle
sbb
pop
jo
add
adc
add
popf
cmp
add
arpl
fnsave
push
inc
add
sub
jl
xor
or
adc
int
add
add
jl
dec
jno
pop
sub
pop
adc
and
or
in
cmp
xor
out
es
jo
hlt
imul
sbb
xchg
add
and
dec
sbb
add
xor
out
gs
cmp
and
cltd
mov
and
outsb
daa
fsubp
push
arpl
mov
fadds
hlt
xor
xchg
push
push
jecxz
rorl
in
mov
add
mov
stc
push
stos
sahf
add
es
outsb
mov
mov
mov
inc
inc
imul
push
in
movsl
sub
movsl
xchg
and
test
add
sub
arpl
adc
mov
pop
jo
jge
pop
jne
mov
sub
mov
jno
jae
pusha
testb
pop
mov
xor
cmp
lcall
andl
ret
add
add
dec
repnz
insl
mov
mov
jne
cmpl
insb
sbb
add
jle
jns
cltd
lock
repnz
pop
sbb
add
pop
mov
cmc
mov
fsubl
pop
mov
fistpll
imul
ja
or
das
jge
push
sbb
add
sub
sbb
pop
mul
xchg
jne
and
adc
pop
lds
cmp
dec
sub
lock
pusha
in
call
jnp
cmp
push
test
add
add
jle
imul
jl
xor
leave
subl
scas
inc
adc
push
or
cld
sti
mov
dec
movsb
adc
in
out
jno
or
add
or
xchg
add
xor
add
dec
mov
sub
dec
mov
cltd
or
cmc
popf
outsb
hlt
push
leave
add
add
sbb
in
das
xchg
jge
add
and
sti
add
add
adc
fcmovnu
add
jne
lods
addr16
mov
popf
rolb
add
xlat
xchg
jp
push
add
add
mov
mov
dec
pop
add
cmp
lea
add
add
stos
movsl
mov
rcrl
mov
add
mov
jbe
xchg
sahf
cmp
pop
sub
pop
in
stos
rclb
test
inc
leave
pusha
xchg
add
add
sbb
repz
fists
add
cmpsb
add
ljmp
ret
pushf
inc
mov
add
or
add
add
cwtl
fwait
or
out
add
cwtl
hlt
nop
roll
and
jb
daa
jl
cmpsb
add
int
add
mov
xor
jo
jg
add
add
mov
cmc
jae
mov
inc
shl
add
shlb
hlt
sbb
loope
inc
add
rorb
bound
mov
int3
push
mov
pop
arpl
sub
adc
adc
pusha
int3
add
les
jbe
lcall
ja
add
pop
add
cltd
jle
out
xor
mov
mov
xchg
dec
cmpsl
fadds
add
jg
and
outsl
dec
mov
add
aaa
add
dec
pop
lret
jle
pop
lds
sbb
sub
in
lret
cld
add
add
incl
add
adc
add
shlb
xor
sarb
pop
jbe
lret
addb
push
xor
add
jb
in
xchg
sahf
lcall
inc
add
push
hlt
push
test
adc
mov
cmp
jnp
in
cmp
and
mov
jle
mov
mov
pop
lret
adc
cwtl
push
add
js
add
add
daa
pop
je
xor
mov
enter
cmp
and
push
add
adc
mov
add
add
aad
adc
les
or
test
lret
add
dec
push
add
add
mov
sti
pop
cmp
and
mov
addr16
js
pusha
ss
jge
add
inc
pusha
cmc
mov
add
inc
inc
repnz
mov
js
add
cmp
push
add
iret
rolb
add
push
add
outsb
cld
in
arpl
cwtl
xor
mov
add
hlt
js
lret
add
mov
popf
xchg
pop
enter
jo
js
or
add
shlb
lods
sbb
mov
lahf
jecxz
cmp
add
ljmp
ljmp
dec
or
mov
es
pop
push
sub
xchg
mov
push
jns
adc
pop
test
call
das
push
jnp
aad
push
push
out
xchg
flds
add
mov
sub
pop
cld
out
push
iret
or
lea
dec
add
xchg
ds
lea
add
and
cmpsl
add
sti
push
add
mov
mov
mov
xor
inc
mov
lods
jo
jno
pop
jns
lods
cwtl
add
add
test
iret
dec
mov
jmp
fstl
in
jb
push
scas
mov
imul
jae
popa
mov
call
ret
and
mov
aad
pop
and
imul
inc
daa
std
push
jge
inc
dec
cld
xchg
test
lock
insl
cwtl
jb
pusha
xor
jns
mov
ss
or
jmp
sub
xor
jg
or
sbb
es
aad
iret
bound
cwtl
mov
inc
imul
test
test
loope
mov
and
addr16
add
push
mov
mov
pusha
or
jle
cli
inc
ljmp
addl
popf
pop
add
add
push
add
cmp
adc
jo
pop
int3
add
add
outsb
lea
add
popf
xchg
jg
xchg
push
push
out
cmp
cs
inc
jne
xchg
push
xchg
fnstcw
clc
or
fcmovnbe
clc
lds
add
add
int3
jne
add
stc
add
mov
subl
or
or
jmp
cltd
repnz
out
pop
pop
push
mov
mov
daa
mov
adc
xchg
dec
dec
inc
bnd
js
jecxz
daa
push
add
add
fldl
xchg
aam
pop
popf
lods
imul
in
movsl
mov
sar
mov
gs
jl
dec
fisttpll
popf
test
xor
popl
add
mov
and
bound
int3
lods
test
movsb
into
mov
push
xchg
xlat
sbb
loope
push
popa
mov
add
mov
mov
iret
or
imul
push
stos
aaa
sahf
cmpsb
stos
testb
bsr
xlat
add
mov
add
push
addb
loopne
jnp
push
sbb
ret
mov
add
mov
mov
adc
inc
or
mov
mov
and
add
add
lock
lret
add
sbb
add
push
inc
mov
jge
xchg
lea
sub
inc
add
or
dec
add
and
add
mov
mov
hlt
sbb
push
sahf
add
ljmp
loopne
and
imul
aas
or
dec
dec
jo
or
nop
subl
mov
aad
sbb
js
cmp
in
insl
xchg
mov
push
pusha
test
movl
push
dec
jns
mov
mov
or
aaa
cmpsl
adcl
mov
sbb
jns
mov
jbe
movsl
xchg
lods
jne
push
inc
in
rolb
mov
mov
mov
cmp
adc
sbb
mov
rclb
negl
xor
bnd
add
inc
mov
aam
cmp
inc
xor
sarb
adc
out
lock
mov
aad
pusha
inc
dec
push
in
inc
jl
inc
add
add
sub
mov
pop
fdivrp
xchg
xor
add
add
lret
imul
jecxz
cmpsb
mov
mov
xorb
cmpsb
mov
add
and
add
ret
pop
and
dec
out
popf
mov
fxch
std
mov
dec
out
pop
rolb
adc
arpl
pop
xor
mov
sbb
add
pop
out
adc
xchg
sahf
mov
repnz
in
add
add
lcall
cs
add
arpl
pop
repz
scas
fcompl
out
clc
into
loop
js
or
pop
dec
sbb
cmp
inc
mov
push
sub
lret
loope
cmp
add
add
fs
push
mov
call
xchg
dec
jno
mov
sahf
scas
sub
insb
pop
rolb
mov
mov
das
jae
xchg
test
pop
test
add
outsl
dec
je
adcl
xchg
cmp
fcomps
icebp
lds
adc
jmp
inc
cmp
fimull
sub
out
imul
stc
dec
xor
ss
add
add
jae
mov
push
pop
inc
loopne
add
popf
pop
cltd
stos
push
enter
rorb
jp
push
rorl
lea
pop
jnp
sbb
or
add
out
dec
add
add
lret
lcall
and
into
scas
mov
cmp
mov
ljmp
aas
and
or
pop
sub
testb
int3
or
leave
jb
jne
add
add
xchg
mov
dec
bound
clc
xchg
add
mov
adc
shrb
mov
je
add
aam
hlt
dec
sbb
add
xor
jecxz
pop
lret
xchg
push
cmpsl
out
sarl
rorb
int3
cmp
pop
xor
enter
add
add
pop
lcall
push
mov
add
add
inc
jge
push
jmp
in
adc
mov
sbb
cltd
aam
add
xchg
pop
jmp
loop
icebp
nop
mov
cmpsb
push
add
jmp
daa
jmp
mov
cmpsb
cmp
add
push
add
add
je
stos
movsl
repz
addr16
push
pop
add
add
cmp
paddw
mov
add
pop
mov
add
mov
loopne
xor
and
stos
int
arpl
incb
xlat
cmp
sbb
jmp
ret
neg
mov
stos
sbb
inc
jne
sarl
std
ljmp
int3
movsl
push
mov
fnstenv
loope
push
mov
push
jne
pop
popf
aad
jg
jnp
int
outsb
inc
outsl
xchg
insb
insl
xor
xor
cmpsl
push
add
push
cmp
adc
add
stos
ljmp
sbb
fldl
aam
daa
xchg
add
xchg
mov
push
push
cmp
jns
std
sti
add
cmp
pop
mov
lock
fwait
sbb
in
loop
mov
mov
add
ja
inc
mov
icebp
pop
cmc
addr16
mov
and
fs
mov
mov
add
pushf
jmp
lcall
push
cwtl
inc
data16
das
mov
jno
xchg
push
mov
cmpsl
push
jns
dec
jae
scas
pop
and
sti
loope
cmc
addl
imul
mov
clc
dec
sub
pusha
mov
ja
mov
aaa
ret
nop
mov
sbb
push
insl
ficoms
dec
sbb
movsl
icebp
add
xor
daa
gs
and
movsl
out
sub
push
fmull
mov
add
fcmovnu
add
add
aas
pusha
sti
or
cmp
and
fmul
ja
xchg
mov
add
and
mov
pusha
cmpsl
inc
popa
xchg
push
xchg
faddl
fnstcw
mov
and
add
fstpt
andl
lret
jge
aaa
adc
sub
dec
inc
das
jb
stc
lods
jmp
push
dec
mov
or
pop
sub
xchg
or
add
jnp
pop
outsl
into
enter
in
jle
scas
add
inc
xchg
in
inc
or
xchg
jne
in
or
and
rcr
fs
mov
shrl
lods
adc
std
sahf
xchg
repz
inc
lds
add
push
sahf
and
dec
add
sbb
enter
aad
int3
cmpsl
test
fidivrl
adc
mov
test
sub
jp
mov
mov
jle
add
mov
mov
mov
aaa
push
dec
outsl
inc
and
push
lahf
movsw
add
movsb
outsb
icebp
addr16
inc
mov
je
xor
cld
enter
xor
and
jbe
std
les
scas
fstpt
xor
data16
add
mov
add
dec
xor
push
sub
frstor
cmp
dec
hlt
or
das
stc
push
pop
sub
and
daa
xor
push
mov
cmpsl
hlt
loope
mov
das
pop
jae
ja
jae
in
ds
jp
xlat
xchg
movsl
call
leave
add
insl
and
testl
mov
out
inc
int3
aad
out
cmp
add
fidivrl
imul
inc
sub
in
xor
ror
pop
and
fiaddl
jmp
cmp
fistpl
lret
fbstp
push
add
lahf
mov
add
inc
sbb
fldenv
out
add
dec
jg
jl
lcall
jne
add
push
dec
jmp
xchg
imul
and
enter
lods
roll
jmp
dec
popf
add
aas
xorb
lahf
cld
aad
les
add
sub
enter
and
lret
out
and
scas
cwtl
add
dec
push
bound
out
jle
insb
sti
add
bound
std
lds
add
xchg
pop
dec
xchg
clc
repnz
clc
ret
js
leave
sub
add
lahf
dec
fildl
or
adc
add
int3
cmp
repnz
xor
test
add
inc
and
out
mov
arpl
jl
add
or
pop
and
add
xchg
xor
dec
add
xor
mov
pop
xlat
popf
sbb
push
jp
pop
and
cwtl
add
or
and
or
add
jne
mov
mov
push
out
add
add
inc
std
fadds
pop
sub
arpl
imul
xor
movsb
dec
lret
les
add
add
add
cwtl
cmp
xlat
pop
dec
adc
add
lods
sahf
xor
mov
add
loope
lmsw
mulb
sub
mov
movsb
roll
add
dec
addr16
mov
push
shrb
mov
add
push
cli
push
shl
mov
add
cmp
cmpsb
sbb
add
add
mov
add
jmp
mov
popf
lret
cmovbe
jbe
je
stos
mov
mov
push
dec
out
testb
sbb
stos
rorb
icebp
les
push
jg
ret
inc
mov
jns
jns
mov
sub
aad
stc
daa
inc
dec
push
nop
in
dec
pop
loopne
faddl
add
sbb
mov
ror
insb
int
xchg
and
jge
dec
mov
adc
roll
sbb
xor
add
rorl
add
je
cwtl
add
cmp
dec
add
add
gs
fisttpl
std
inc
jl,pt
jmp
test
cli
dec
xor
mov
outsl
cmp
imul
popa
std
dec
cwtl
mov
jecxz
mov
sbb
add
mov
pop
push
jmp
rcl
add
add
scas
outsb
sbb
xor
pop
push
lods
mov
hlt
mov
addr16
dec
testb
or
enter
and
add
dec
enter
fcompl
addr16
cmp
std
adc
sub
dec
out
push
inc
jmp
dec
call
push
jno
mov
sub
adc
ret
push
lret
jne
push
hlt
pop
add
adc
ret
mov
jno
and
loope
jge
sbb
out
xchg
push
dec
clc
push
aam
lods
xor
jbe
lock
xor
dec
mov
pop
cmc
cld
add
scas
xorl
cli
push
loop
or
shll
rcrl
sbb
int
lds
fdivl
divl
cmp
ds
stos
pusha
dec
xchg
xor
pop
out
dec
repz
sbb
loope
mov
mov
insl
push
mov
femms
test
sbb
lods
loop
lock
cwtl
sub
jno
hlt
xchg
and
jmp
and
sti
mov
in
lahf
inc
fwait
add
int
fistl
and
out
mov
jp
ja
xor
ljmp
fs
cmp
add
mov
jns
add
fcmovnbe
rclb
add
pop
jno
add
mov
inc
add
inc
push
imul
jp
repnz
add
push
insl
in
add
add
aas
mov
add
aaa
in
sbb
cmc
lods
jb
mov
flds
and
mov
push
add
jecxz
inc
pop
imul
in
push
aaa
push
add
loop
outsb
mov
popa
sbb
add
test
pop
sub
bound
out
cmp
cmp
add
inc
sarb
xchg
add
or
fwait
add
sarl
add
addb
jge
add
ret
xchg
jae
fisubl
dec
add
ljmp
mov
mov
mov
push
imul
imul
push
push
test
dec
loope
add
jbe
mov
cs
or
int3
in
adc
sub
push
jge
das
mov
dec
pop
sbb
mov
inc
pop
jb
in
fadds
jmp
mulb
add
or
add
mov
test
jge
mov
imul
jl
inc
hlt
notb
add
addr16
cwtl
mov
lret
mov
xchg
nop
and
popf
adc
xor
movsl
cmp
pushl
int3
test
lds
push
inc
lcall
fadds
cmp
inc
movsl
push
add
mov
mov
test
adc
call
and
push
cmpl
imul
mov
js
cmp
pop
shrb
inc
idivl
fisubrl
dec
pop
pop
out
xlat
arpl
scas
or
sbb
sbb
add
xchg
inc
jp
xor
sbb
xchg
insb
test
xor
adc
xor
es
or
dec
mov
xchg
int
sbb
add
jo
cwtl
ds
loopne
out
fmul
inc
xchg
xchg
out
add
mov
add
add
lret
adc
andb
jne
inc
mov
dec
es
push
lds
fildl
add
sub
push
inc
mov
or
mov
ret
leave
sarl
shl
cwtl
data16
mulb
mov
mov
test
inc
movsl
push
addr16
add
sub
xchg
mov
lock
dec
xlat
xchg
pop
addr16
sub
xor
sub
cli
popf
in
jle
pusha
jo
push
call
xchg
repnz
aaa
inc
int
adc
jle
jecxz
repnz
sub
ds
xchg
mov
add
add
or
shll
mulb
add
lcall
cmp
dec
popf
imul
fs
sbb
mov
inc
adc
mov
fcmovbe
std
cltd
push
mov
repz
les
add
add
or
mov
and
jmp
aas
lods
dec
inc
in
fwait
xchg
rcl
jge
shl
add
adc
pop
lea
jge
jmp
ret
jns
mov
iret
ds
aad
cmp
xor
xchg
push
pop
pop
or
idivl
sti
dec
mov
xor
loope
add
add
or
pop
mov
lds
push
mov
ret
add
jno
cs
mov
out
into
cmp
mov
rcrb
sti
add
out
mov
sbb
sbb
add
call
adcl
add
add
leave
cmp
test
or
cwtl
mov
push
fwait
scas
rcrl
jl
aam
adc
movb
add
in
add
cmpsl
fiaddl
stc
add
mov
lret
movsl
test
xchg
xchg
xchg
pop
addl
repz
mov
jno
mov
addl
jl
add
xorb
cwtl
je
sub
xchg
push
add
data16
ror
lcall
aad
lcall
xchg
shlb
add
dec
inc
xor
xor
cmp
insb
xlat
dec
clc
cmpsl
pop
hlt
push
movsb
cmp
xchg
lods
ss
adc
jg
push
push
dec
ds
sbb
movsb
adc
add
sahf
out
std
pop
pop
repnz
push
dec
push
loope
xor
mov
out
cmc
inc
cmpsl
jne
sarb
mov
mov
cmc
out
mov
sbb
pop
leave
orb
inc
push
inc
mov
jne
fisubs
imul
mov
mov
mov
lods
aaa
or
push
push
sub
add
or
mov
and
stc
xor
mov
dec
xor
cmp
add
add
insl
xor
sub
pushf
and
push
fistl
jle
mov
inc
loop
add
add
lock
dec
mov
pop
xchg
mov
bound
insl
push
movsb
add
dec
cmp
add
movsb
shr
cmp
mov
add
add
mov
sbb
add
add
dec
ret
fwait
mov
in
and
lahf
jo
push
loope
inc
jmp
and
dec
jmp
fsts
into
loope
pusha
pop
mov
outsb
stos
in
cmp
in
jl
xchg
sub
push
add
add
or
pusha
xlat
lret
mov
imul
sbb
pop
int
pop
cmp
mov
jl
ja
mov
stos
add
test
pop
mov
sub
dec
test
jecxz
add
add
add
ljmp
loop
cmp
adc
dec
or
xchg
mov
pop
repnz
cmp
mov
popf
adc
mov
inc
xchg
sbbb
sub
lods
lods
outsb
outsb
dec
pop
inc
jnp
jae
cmpb
or
shll
mov
sub
add
add
add
cld
cli
xor
test
cltd
pop
lock
test
fbstp
nop
shl
push
rolb
push
out
mov
bound
dec
stos
cld
cli
aas
xchg
aaa
cmp
push
out
sub
std
sub
test
insl
add
sbb
cmp
stos
cmp
inc
dec
push
pop
sbb
ss
jno
inc
xchg
sub
sub
xchg
cmp
cmp
dec
test
nop
xchg
ljmp
hlt
outsl
loope
pop
xor
mov
outsl
bound
fidivs
xchg
fsub
adc
outsb
testb
ror
mov
sbb
cltd
push
adc
daa
orb
pop
cmp
cmp
xchg
adc
and
push
cmc
pushf
and
loope
xchg
outsl
lods
es
push
sub
push
jle
dec
imul
mov
cmp
ja
add
pop
cmpsl
inc
sbb
xchg
jl
mov
dec
add
outsl
fs
add
cwtl
aas
add
jb
cs
in
add
dec
xchg
leave
and
insl
or
in
add
dec
mov
xor
add
mov
mov
pop
cwtl
lcall
out
dec
ret
push
pop
mov
int3
fidivrs
sub
es
adc
mov
sbb
nop
jp
inc
and
jne
mov
add
add
adc
lahf
sub
fdiv
add
add
lcall
pop
cmc
xchg
in
push
dec
outsl
mov
and
test
adc
bound
movsl
push
add
pusha
push
pop
xor
sub
inc
adc
call
loopnew
jg
dec
sbb
xchg
test
pusha
addb
adc
jne
sub
sti
xchg
js
lods
insl
xchg
int3
lock
xchg
sub
sti
or
fdivrl
cwtl
add
sti
enter
push
sub
rcll
jmp
push
cmp
bound
lret
cltd
jmp
cltd
pop
rclb
pop
lds
cmp
je
fwait
mov
jg
out
jl
and
xchg
cmp
aas
inc
dec
icebp
cmp
xchg
adc
dec
movsb
int
inc
dec
xchg
push
inc
aam
test
and
iret
sar
pop
push
jb
loopne
enter
mov
sub
test
sub
es
test
xchg
mov
addl
jle
push
jl
data16
mov
mov
lods
dec
aas
pop
push
adc
pop
in
add
std
fs
and
add
lcall
add
xchg
pop
mov
xchg
pop
outsb
data16
add
or
or
add
inc
jmp
movl
mov
sbbb
nop
add
add
mov
add
add
rcrl
add
add
mov
add
add
sub
add
jge
test
sub
mov
mov
mov
xchg
cs
in
push
lret
jge
adc
pminub
push
sbb
out
ficoml
inc
out
stc
mov
aad
add
sbb
xor
enter
inc
cmovbe
jge
mov
mov
cmp
out
std
repz
mov
clc
sbb
fists
imul
lret
es
in
fmuls
mov
push
popf
add
jno
movsl
subl
fisubl
clc
xchg
outsl
cmp
add
xchg
std
push
mov
dec
sub
js
jmp
inc
mov
dec
or
mov
xor
push
outsb
push
jae
sub
cmp
pop
test
imull
push
shlb
movsb
cld
inc
shlb
add
dec
push
mov
xor
inc
sub
insb
jo
dec
bound
aaa
lods
mov
jle
xchg
push
push
mov
push
add
jns
mov
insl
push
xchg
inc
adc
add
jnp
fmuls
fwait
shl
aam
cmpsl
pop
fcomp
lods
mov
sub
adc
sub
push
icebp
cmp
or
add
hlt
push
fcmove
pop
popa
adc
pusha
mov
xchg
mov
xor
push
icebp
popf
movsb
int3
add
imul
xor
xlat
mov
pushl
daa
mov
add
mov
cmpsb
pop
cli
pushf
push
cwtl
js
call
popf
pop
inc
pop
popa
pop
addl
add
into
repnz
call
cwtl
xlat
sti
jmp
xor
stos
jae
ja
scas
adc
sub
xor
sub
lcall
sbb
or
mov
and
cmpsb
sar
aaa
mov
jl
in
cli
insl
loopne
mov
jmp
ret
xchg
xor
xor
fiadds
xchg
imul
fidivrl
jg
jl
or
lods
add
test
popf
cmp
stc
dec
inc
jnp
add
adc
jnp
imul
push
out
decl
imul
ds
add
add
dec
andb
iret
shl
loop
inc
xchg
je
shl
add
add
add
into
lea
test
lcall
data16
cld
add
mov
push
add
jnp
or
lcall
pop
jmp
push
jle
in
or
cmp
test
scas
cmp
addr16
int3
clc
push
add
or
xor
xchg
pop
int
sub
fisttps
jbe
in
in
sbbl
pop
call
and
out
push
mov
aam
fiaddl
insl
dec
cmpsb
xchg
lahf
cmp
push
add
mov
add
dec
std
add
mov
add
addr16
add
jnp
add
xor
pop
ret
cmp
adc
mov
ficoml
clc
xor
call
mov
dec
push
mov
mov
dec
mov
xchg
xchg
das
add
push
or
insb
inc
cmp
add
add
into
lock
jle
fstps
and
out
mov
fisttpl
mov
inc
add
out
dec
mov
xchg
in
mov
inc
mov
test
jae
mov
sti
cwtl
std
insl
pop
lret
push
inc
xchg
mov
rcll
outsl
idiv
shlb
fimuls
cmc
cmp
sbb
mov
out
xchg
inc
mov
add
rorb
inc
jae
xor
ss
dec
xchg
cmp
test
dec
sti
insl
movsl
add
add
jbe
dec
add
add
mov
mov
pop
pop
test
ljmp
test
js
xor
adcb
add
jle
dec
mov
mov
loop
das
inc
scas
test
and
add
add
lret
nop
mov
pop
mov
je
jae
ja
ljmp
int3
mov
movl
aam
in
cltd
imul
sub
out
imul
clc
mov
out
int3
loope
data16
xor
cli
lcall
test
fsubrl
add
pop
add
or
add
test
lea
std
fs
sub
push
push
cwtl
outsb
hlt
je
ljmp
sbb
cmp
es
mov
xchg
loope
and
bound
sahf
leave
add
leave
out
rcrl
imul
push
adc
cmp
in
adc
and
int
dec
int
add
mov
mov
xor
fcomi
mov
and
inc
inc
sbb
imul
mov
xor
pop
andb
scas
jo
fimuls
dec
pop
add
dec
lret
xchg
cmp
cmp
popa
xlat
xchg
in
sbb
shll
add
sbb
xor
in
add
xchg
outsl
inc
add
add
xchg
test
popf
add
orb
sar
hlt
jno
dec
add
jecxz
push
mov
ret
push
add
xor
rorl
add
leave
and
test
sbb
pop
jge
sbbb
push
pop
cmp
out
outsb
mov
add
jne
dec
add
add
cmp
icebp
add
mov
xor
jp
mov
ja
ret
add
arpl
ret
adc
mov
aad
push
addl
insl
lahf
adc
jne,pt
add
push
jge
add
add
mov
or
push
add
icebp
aad
xor
das
clc
mov
leave
pusha
push
imul
and
sub
rclb
cli
jb
dec
daa
mov
pop
call
add
add
fldenv
iret
int
add
or
fwait
xchg
in
cmpsb
std
sti
cwtl
dec
mov
ss
add
fstpl
adc
sbb
inc
mov
adc
lods
aam
push
push
scas
xchg
mov
add
daa
int
push
cmp
xorl
mov
add
mov
fwait
cmpsl
add
inc
cwtl
xor
fwait
sbb
fimuls
add
add
sbb
pop
mov
jbe
inc
sub
add
add
dec
adc
aaa
dec
push
sub
loope
adc
mov
sarl
cltd
add
mov
jge
add
jbe
xchg
fimuls
fbstp
mov
inc
or
lea
add
add
imul
je
les
add
add
dec
inc
imul
loope
data16
dec
mov
test
in
mov
add
daa
push
adc
mov
add
jo
cmp
dec
pop
cltd
add
cld
je
sub
aaa
xchg
stos
stos
out
lret
fistpll
aam
fidivrl
je
xor
adc
out
ret
cmp
outsl
add
add
shlb
fsts
fistl
jp
inc
inc
sub
pop
jg
mov
inc
int3
xchg
add
stos
jbe
jle
pop
jnp
add
xchg
jge
mov
jno
pop
ljmp
jg
mov
jmp
jns
sub
cld
cmpsl
xchg
and
pop
lods
xor
add
sbb
cmp
stos
and
inc
std
dec
push
pop
and
xor
xchg
push
dec
push
xchg
mov
dec
ror
cmc
shl
ljmp
lods
adc
neg
fs
je
pop
push
ret
clc
sub
loopne
mov
add
sub
fildl
jg
mov
lods
lods
add
xchg
and
pop
mov
dec
cwtl
cltd
jnp
jmp
sarb
inc
push
les
jb
int
cld
shrl
add
insb
fldlg2
jle
cli
add
add
or
push
scas
inc
push
imul
dec
sahf
nop
xchg
inc
or
add
add
push
in
inc
add
mov
movsl
jmp
je
adc
push
ret
add
sub
cmp
mov
or
jle
pop
mov
test
sti
dec
and
arpl
lahf
lcall
scas
mov
iret
pop
xor
fidivrl
sqrtps
and
lahf
add
add
cmpsb
jl
fsubr
mov
xchg
ror
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
popf
sti
insb
cmp
fiaddl
gs
popa
je
fwait
add
pop
repz
and
lahf
insb
jecxz
or
add
xchg
out
shr
mov
xor
je
sub
das
mov
lock
add
sbb
scas
inc
popa
add
icebp
sbb
add
cmp
cmp
cmp
sbb
add
mov
xchg
test
stos
inc
lds
push
faddl
push
and
xchg
and
mov
in
push
adcb
fs
mov
test
mov
push
in
xor
push
dec
test
dec
in
rclb
dec
outsl
mov
jo
add
fimull
call
adc
in
mov
jp
and
or
pop
cmc
xor
mov
sbb
mov
sub
loopne
add
cwtl
push
dec
jb
shrb
pop
sbb
loope
and
or
enter
sti
ss
push
add
stc
jo
sub
sub
fnsave
ss
add
mov
inc
repnz
cmp
adc
popf
loope
mov
add
mov
dec
addb
jge
add
ret
div
mov
or
sbb
test
jl
in
inc
cmpsl
mov
sahf
cld
sub
xchg
add
cmpsl
fdivs
inc
push
sub
stc
lcall
idivl
mov
sbb
sbb
sbb
push
mov
add
popf
ljmp
add
out
jno
pmaxsw
aam
je
add
jns
xlat
cli
mov
xchg
iret
cmp
cmc
cmp
fidivrl
leave
lds
push
jg
pop
jmp
and
inc
sbb
pop
orb
add
push
or
sub
fcomi
dec
fcomp
or
mov
sub
out
das
xchg
cmp
mov
mov
sarb
ss
mov
xor
cltd
insl
pop
or
xchg
enter
repnz
xor
add
lret
add
fmull
aaa
add
outsl
jo
ja
test
ret
push
gs
loope
sbb
scas
out
add
out
pop
pop
sbb
jge
orl
lods
lahf
xor
es
sbb
add
fsubrl
push
inc
leave
ds
add
outsb
pop
inc
leave
add
add
ja
jle
addr16
mov
jp
mov
mov
std
ret
mov
adc
subb
jmp
and
push
sbb
add
pop
jns
lds
ret
xor
jnp
adc
dec
adc
in
enter
add
mov
stos
ret
jle
mov
or
cmpsb
shlb
dec
in
and
mov
lret
push
mov
push
cmp
add
add
imul
jb
idivl
mov
jns
mov
out
inc
add
add
vmwrite
mov
and
jecxz
lcall
fldcw
xchg
ja
inc
insl
mov
and
ljmp
dec
es
adc
push
pop
inc
add
pusha
pop
mov
inc
add
cmp
aad
sub
add
pavgb
test
hlt
mov
aaa
ds
add
add
ret
add
jb
lahf
mov
mov
scas
adc
fsubs
nop
jne
or
filds
and
rolb
pop
mov
dec
xchg
mov
enter
stc
xor
sbb
lods
fidivs
icebp
pushf
int
mov
popf
repz
rcll
into
jo
mov
cltd
mov
test
mov
hlt
mov
jg
and
jmp
test
xor
ret
mov
enter
and
mov
out
cmp
repz
push
jae
inc
out
mov
push
inc
inc
xchg
cld
js
add
gs
repz
xchg
out
sub
push
fistl
add
imull
inc
mov
jnp
lods
fisubrl
add
jecxz
add
sbb
fidivrl
sub
cmp
push
push
in
fs
outsl
or
jnp
inc
xorl
imul
jp
push
cs
sub
lds
loop
xor
fnstsw
or
mov
add
fadds
insl
or
sbb
add
xchg
std
add
cwtl
bound
ret
aaa
mov
andb
insl
dec
sub
insb
loope
imul
roll
push
mov
push
daa
or
mov
mov
fs
test
sbb
fldt
push
mov
lods
test
pop
fwait
lret
test
icebp
jns
lahf
test
inc
mov
xchg
std
mov
dec
dec
sub
scas
push
push
shrl
rclb
adcl
cmpsl
jp
jmp
cmp
dec
mov
pop
enter
into
mov
arpl
out
sub
ficoml
cmc
jb
addb
outsl
mov
dec
cli
call
insl
mov
xorb
shll
cmpsl
sub
push
in
pop
dec
mov
aaa
push
dec
sbb
push
sbbb
cmpsl
push
roll
pop
mov
outsl
or
cmp
in
xor
dec
xor
ds
mov
add
aam
dec
fbld
cli
mov
incl
out
hlt
or
imul
xor
and
subb
inc
rorb
test
xchg
jbe
sub
sbb
rcrb
and
push
test
push
mov
or
pop
test
fcom
out
mov
mov
cltd
add
add
adc
sahf
add
add
cmp
and
sbb
rol
mov
add
ror
mov
out
pop
or
mov
std
adc
xchg
popa
pop
addb
add
sbbl
data16
out
je,pt
cmp
sbb
stc
imull
pop
nop
sbb
test
addr16
mov
push
add
dec
rolb
add
cli
enter
imul
sahf
add
add
push
mov
adc
sbb
lea
mov
sti
adc
cmp
fnsave
mov
and
dec
and
xchg
push
lea
xor
jl
pop
xchg
jbe
mov
pop
sub
fwait
stc
dec
and
push
mov
add
ret
and
mov
add
mov
mov
add
push
or
jg
push
add
lds
inc
movb
push
add
sbb
add
mov
push
add
orb
mov
adc
add
fidivs
add
jmp
add
and
add
aam
int3
negl
xchg
fisubs
add
dec
add
add
sti
add
lret
movsl
add
pushf
add
aam
add
aas
popf
add
xchg
add
cmp
pop
add
call
add
inc
adc
jae
inc
add
dec
mov
add
adc
clc
or
add
in
jae
push
add
jle
add
jmp
add
outsl
pop
add
imul
jne
cmp
lock
add
roll
add
add
lds
xlat
adc
mov
mov
popa
xchg
add
pop
add
filds
and
adc
add
add
add
add
push
inc
jae
sbb
sbb
pushf
add
inc
dec
add
xchg
ss
js
in
lock
nop
pop
add
add
adc
popf
dec
dec
leave
into
add
add
loope
incl
fsub
push
aas
lret
jnp
add
add
add
add
xchg
lret
in
cmp
or
movl
cmc
push
mov
out
lods
jne
sahf
rorl
insb
push
lods
es
out
test
add
adc
cmp
dec
sbb
xor
push
cmpsl
out
sub
jl
cmp
out
faddl
pop
cld
push
cld
sub
idiv
inc
jecxz
repz
or
fst
and
adc
iret
xor
bound
mov
scas
pop
add
js
popa
fisubrs
imul
mov
and
pop
mov
add
add
dec
pop
popa
int
scas
cmpsb
lods
sbb
mov
cmc
mov
and
xchg
cmp
xchg
std
pop
pop
pushf
cmp
xchg
test
inc
pop
jg
jne
movsb
push
imul
xchg
shrb
xor
inc
inc
aaa
mov
xchg
adc
lds
cmp
int
shll
lods
pushf
ljmp
rolb
outsb
out
lods
lcall
andb
xor
out
mov
mov
daa
gs
mov
sub
push
xor
lret
push
sbb
pop
pop
arpl
mov
or
idivl
lcall
cmp
call
jb
mov
mov
js
pop
loopne
clc
repnz
movsl
in
in
mov
aas
xor
add
jmp
clc
mov
jae
push
xchg
stos
test
dec
pop
sub
sbb
add
jmp
stos
rcrb
rolb
sbb
mov
popf
mov
enter
dec
loop
icebp
adc
add
mov
mov
jo
loopne
cmp
add
pop
push
int
cld
add
imul
and
push
and
push
fisttps
cmp
and
push
scas
push
sbb
jbe
insb
fwait
dec
pop
stos
in
push
shll
leave
lods
jmp
test
push
ret
lcall
or
shlb
sbb
in
add
adc
gs
fmulp
push
mov
cmp
gs
insb
add
jno
inc
push
and
xor
add
mov
push
pop
loope
push
jno
sub
movsb
xchg
xor
add
ja
pop
cld
push
imul
cmp
add
add
les
cmpsl
xchg
imul
mov
mov
stc
xor
mov
dec
dec
jle
xlat
jp
out
pop
dec
sbb
scas
in
neg
mov
dec
jnp
add
add
repz
dec
mov
inc
dec
mov
lcall
in
jecxz
mov
std
sbb
cmc
nop
sbb
pop
inc
aad
or
dec
cmp
add
add
push
cmp
sub
dec
push
leave
cmp
jmp
js
repz
sbb
ret
sub
add
add
sub
aad
or
shrb
test
aad
mov
xchg
ja
out
xchg
scas
out
or
movsb
push
dec
add
mov
lret
ja
mov
add
in
arpl
orl
loop
fnstenv
inc
push
imul
push
xor
test
insb
or
ljmp
add
add
sbb
mov
mov
mov
in
cld
outsb
or
lock
stc
push
mov
repz
add
add
add
push
cli
fmulp
lds
jg
repnz
mov
push
sbb
leave
addr16
mov
adc
outsb
hlt
jb
hlt
jmp
dec
jnp
add
add
repz
dec
mov
inc
dec
mov
lcall
in
jecxz
mov
std
sbb
repnz
cmp
aad
push
inc
fldl
add
rcrb
push
insl
and
pop
mov
sbb
inc
adc
cmp
and
cmp
push
daa
fldcw
and
stos
test
jne
stos
xchg
loop
sub
fstpt
clc
nop
lret
push
fnstcw
add
out
mov
xchg
cmp
frstor
pop
lods
and
dec
ljmp
imul
push
inc
push
xor
lret
clc
gs
mov
jecxz
outsl
test
and
in
in
fsts
add
add
pop
test
adc
repz
jecxz
cmc
out
testb
pop
scas
leave
movsb
add
jecxz
sub
xor
inc
sub
pop
add
insl
out
xor
mov
add
cmpsb
aas
rcrb
xchg
mov
adcl
xchg
mov
jmp
arpl
lcall
sarb
inc
mov
push
pop
jae
js
lods
jo
add
add
add
icebp
and
mov
sub
enter
cld
cmp
xor
and
cmp
test
gs
mov
add
outsb
inc
add
mov
iret
add
rcl
mov
jecxz
rcl
push
mov
aas
repz
xor
test
int
ret
mov
xor
enter
add
add
xchg
add
movsb
mov
add
add
add
or
add
daa
add
add
add
add
add
fistpll
add
add
add
mov
add
add
add
add
add
sub
add
ljmp
add
add
add
add
jp
add
add
add
add
dec
push
add
add
add
add
add
add
add
add
add
add
jl
jmp
aad
xor
out
add
add
add
add
xor
cmp
fadds
add
movsl
add
add
add
add
add
in
add
xor
add
add
test
stos
arpl
repz
pushf
pop
add
add
jg
addl
mov
and
add
add
ss
mov
adcb
pop
sbb
xsha256
cmpsb
adc
lret
dec
add
in
incl
negl
jl
mov
test
dec
fwait
jmp
adc
add
inc
push
jnp
daa
js
mov
xor
add
pop
mov
repnz
jmp
ja
stc
cmp
adc
mov
mov
notl
icebp
sub
add
add
add
movsl
or
or
or
sub
cmpsl
arpl
fsubp
sbb
js
aam
jnp
insb
fnstcw
xchg
les
adc
jg
or
lea
das
sbb
inc
or
daa
fstpl
cld
sub
cmp
sbb
shlb
incb
insl
pop
push
notl
cli
push
stos
push
ljmp
cs
mov
cmp
cmp
ret
add
add
add
dec
add
add
add
add
add
add
add
dec
add
add
add
add
les
insl
add
push
add
mov
add
jl
js
lock
add
add
add
add
in
ja
mov
add
add
add
cs
add
add
add
add
add
add
push
add
add
add
cld
add
add
add
add
and
add
add
push
add
add
add
add
add
add
add
add
add
add
data16
add
add
mov
xor
out
lahf
add
mov
add
add
lahf
add
stc
add
ja
scas
add
add
dec
add
add
add
add
add
add
add
add
add
jecxz
fadds
mov
add
data16
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
jne
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
verw
mov
ret
in
sbb
insl
aam
pop
sbb
ja
push
xor
in
sti
pop
bound
cwtl
or
jge
xor
lcall
add
dec
add
add
add
push
outsb
adc
movl
cmp
adc
in
and
cltd
adc
aad
xorb
pop
bnd
imul
enter
in
ja
mov
sahf
add
add
add
add
mov
dec
add
add
add
add
scas
add
add
pushf
add
inc
add
add
add
add
add
add
pop
add
or
add
rolb
lldt
add
add
data16
add
ret
add
add
test
add
add
add
add
add
and
cmp
andb
or
cmpxchg
push
orl
outsb
push
int3
arpl
popa
add
mov
mov
sbb
fists
mov
ljmp
ja
js
cmp
jmp
pop
mov
sbb
ja
push
ss
adc
pop
bound
insb
fwait
or
jge
xor
lcall
add
sub
dec
outsl
inc
in
leave
addr16
dec
add
xlat
jb
add
pop
stos
clc
mov
jnp
or
cmp
sbb
in
faddl
push
inc
leave
paddusb
ficoms
push
push
adc
insb
loopne
inc
push
insl
mov
sub
pop
out
push
mov
aad
inc
pushl
jmp
push
movsl
scas
and
inc
xchg
imul
push
jb
ljmp
mov
xchg
jbe
mov
negl
test
stc
sbb
push
fsubr
xlat
and
dec
dec
inc
notb
xchg
and
loop
daa
inc
ljmp
jb
sbb
pop
dec
xor
cwtl
clc
adc
out
es
push
mov
add
push
inc
jge
das
ja
jecxz
fsts
push
in
sbb
jle
or
inc
out
in
mov
ljmp
dec
popa
dec
out
iret
popa
lahf
dec
sbb
aad
xor
inc
pop
movsb
testb
inc
rolb
inc
jl
sub
dec
loopne
ficomps
call
fcmovnbe
pop
bound
gs
dec
cmpsl
outsl
jl
push
dec
inc
pop
arpl
sub
pop
in
fs
mov
mov
mov
nop
daa
imul
call
movsb
mov
rolb
scas
dec
data16
cli
popa
test
xchg
enter
dec
dec
das
mov
mov
fidivs
pushf
ja
sub
popa
inc
xchg
jns
pop
sub
pop
imul
iret
into
lret
adc
cmp
adc
mov
xchg
dec
loop
push
mov
mov
xchg
cmpsl
cmp
imul
mov
push
add
xchg
sar
scas
mull
or
dec
xor
insl
pushf
imul
mov
outsl
gs
cmp
jg
add
scas
mov
loopne
data16
loop
rcrl
add
add
push
add
mov
test
leave
arpl
popf
imull
dec
mov
push
shr
out
mov
in
std
xchg
jmp
lret
loopne
fisubs
jge
mov
mov
push
mov
pop
cmp
xchg
je
adc
mov
dec
sub
stc
repz
andb
lret
psraw
fsubs
loopne
test
hlt
cs
leave
imul
imul
jbe
sub
pusha
inc
xchg
jp
and
sbb
pop
mov
int3
iret
aad
jne
jns
or
pop
mov
sbbb
cs
lods
jno
shr
mov
xchg
cmpsb
aas
pop
mov
inc
xchg
or
ret
ret
scas
hlt
data16
or
adc
insb
lahf
push
mov
int
imul
and
pop
add
add
scas
lea
pop
mov
and
inc
push
add
ja
jmp
add
jb
add
inc
add
push
xorl
add
push
fisubl
add
add
daa
nopl
mov
mov
push
add
add
cmc
neg
add
add
and
popf
add
add
aaa
xchg
repnz
add
add
mov
inc
pop
rolb
add
dec
sub
sahf
mov
add
mov
push
push
push
outsl
sub
inc
pop
scas
push
jo
add
rcr
add
rclb
add
cmp
jns
dec
call
sbb
loope
or
or
movsl
mov
jecxz
rolb
dec
inc
lods
add
insl
xorb
add
not
xchg
mov
push
call
adc
lcall
add
add
add
add
shrl
fisttps
add
mov
je
push
add
jl
add
add
sbb
add
cmp
add
jae
sbb
inc
cs
in
mov
sbb
int
pop
jmp
clc
arpl
sbb
jg
out
ja
in
loopne
and
ret
lock
cwtl
or
gs
in
add
add
add
add
add
add
jae
add
mov
add
ret
gs
and
inc
jl
add
sbb
jae
add
add
dec
sbb
mov
xlat
cmp
and
add
cmp
xchg
add
push
faddl
add
add
outsl
push
add
add
insl
xchg
int3
add
add
adc
add
add
arpl
or
add
add
int
inc
add
add
mov
add
mov
jbe
add
add
jecxz
xrelease
add
add
std
add
add
fwait
mov
add
add
insb
js
add
dec
lcall
sbb
bound
add
add
add
push
sti
mov
push
sbb
cmp
pop
lds
add
add
add
add
add
add
add
dec
pop
add
movsl
add
int3
add
add
add
add
add
add
add
scas
xor
add
add
add
add
add
add
ja
dec
add
add
pop
in
dec
add
add
or
add
add
add
lods
mov
add
pop
push
lcall
add
jae
add
add
add
add
add
add
add
jno
add
add
pop
lea
add
add
mov
loopne
add
add
fwait
in
jle
add
add
sbb
movsl
sahf
loop
add
sub
add
add
repnz
push
add
cmp
add
add
jg
sub
add
add
push
inc
mov
add
add
add
add
pop
mov
and
add
add
add
sbb
add
add
xor
ret
loope
add
add
inc
mov
add
sbb
add
add
add
sub
add
add
mov
add
add
add
add
add
add
add
add
add
xchg
cwtl
add
add
jp
sub
add
add
jb
outsl
add
add
dec
push
roll
add
add
xchg
int3
jns
add
add
test
add
add
jo
lret
add
add
adc
add
add
add
and
add
mov
fmul
add
add
jecxz
xrelease
add
add
insb
inc
add
add
add
lcall
push
add
add
dec
lcall
imul
icebp
cli
add
fildll
add
dec
and
mov
pushf
mov
mov
ret
and
or
add
pop
filds
testb
mov
loop
lcall
add
outsb
add
push
add
ret
push
pop
int3
add
inc
sbb
js
push
add
cwtl
faddl
movsb
loope
add
int3
mov
add
add
inc
add
adc
insl
add
pop
add
mov
add
dec
mov
or
bound
scas
jne
add
xlat
jge
ficomps
ret
xor
add
adc
loop
lret
imul
in
add
push
loop
mov
xchg
outsb
add
mov
add
push
movl
and
aad
cld
sub
add
add
add
lods
cmpb
cmp
add
mov
add
stc
mov
jo
loope
fiadds
and
mov
repnz
push
nop
sti
addr16
aam
or
pop
inc
push
insl
and
scas
pop
push
add
pop
mov
decb
stc
sub
outsl
stc
cmp
test
sbb
sbb
add
loop
dec
mov
sub
jp
add
pmuludq
xchg
stos
pop
xchg
push
add
jbe
mov
cmp
mov
not
jg
rolb
add
or
or
push
test
and
js
insl
pop
jb
jbe
add
xor
out
aaa
enter
cmp
and
jne
lds
pop
mov
aas
pop
loope
dec
hlt
pop
mulb
sbb
inc
call
repnz
imul
fildll
sbb
mov
mov
fnstenv
xor
popf
add
inc
ja
jbe
scas
test
jbe
dec
out
jge
mov
add
push
xchg
or
sub
add
das
rcrl
enter
jecxz
cmc
les
mov
xchg
lret
add
in
neg
push
inc
hlt
sub
cltd
mov
dec
push
push
dec
inc
add
lret
adc
flds
cmc
add
pop
adc
sbb
div
ja
cld
cmp
push
and
insb
test
loop
push
inc
scas
out
push
dec
lock
dec
xchg
mov
push
in
mov
ret
and
mov
imul
mov
out
aad
ja
insb
insb
pop
xchg
cmp
push
in
dec
stc
adc
add
inc
add
inc
dec
push
pop
cltd
jecxz
add
adc
sti
sub
dec
pop
cmp
loopne
aam
add
sub
test
out
add
outsb
adc
incl
out
testl
fildll
sub
mov
add
adc
inc
test
xor
or
mov
adc
jb
adcb
add
andl
movsb
xor
push
incl
sbb
xchg
mov
aas
nop
adc
xlat
mov
pusha
loop
fiadds
add
xchg
sub
xchg
out
popa
fwait
sti
bound
add
and
imul
insb
push
or
sar
cmp
mov
xor
push
fs
and
sbb
mov
mov
imul
xchg
testl
jp
ret
lcall
mov
add
lcall
add
mov
movsb
lds
mov
shlb
mov
push
push
out
in
add
jle
push
push
adc
sub
add
adc
add
add
loope
lds
dec
clc
push
cld
arpl
add
push
stc
repz
in
in
add
cmovns
or
sub
xor
pop
or
ja
jge
test
and
pop
inc
hlt
mov
cmpl
cmp
add
mov
fwait
mov
aas
nop
adc
sti
cwtl
in
jae
add
daa
repz
pop
loop
adc
push
add
stos
mov
inc
add
add
mov
pusha
outsb
and
fcmovnbe
sub
add
sarb
add
or
fucomip
jb
incb
xabort
add
push
pop
cmp
in
pop
shll
stos
and
add
faddp
lcall
mov
ds
sbb
movsb
or
and
add
in
mov
cwtl
outsl
int
push
add
or
push
and
and
add
mov
fsubr
or
cmp
push
inc
pop
add
je
push
in
mov
mov
or
or
add
inc
cmp
fidivl
scas
add
repnz
addl
in
add
lret
ret
add
add
add
add
push
add
add
add
rolb
add
add
add
add
add
cli
push
add
add
add
add
adc
add
add
add
xchg
fiaddl
or
add
nop
inc
int
cltd
add
add
add
add
test
inc
add
add
std
add
add
sar
mov
add
add
add
hlt
out
add
cmp
add
add
add
add
add
sti
jb
incl
add
sub
add
add
add
into
add
add
add
add
dec
mov
or
add
data16
add
add
sub
loop
repz
add
std
lcall
add
roll
add
add
add
xor
add
mov
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jno
add
mov
add
add
add
jl
add
dec
add
add
add
add
add
xor
add
int3
add
add
add
add
add
mov
add
add
add
sub
add
iret
add
add
add
add
add
add
add
cmpsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
arpl
add
stos
add
add
add
add
add
add
add
add
add
or
add
movb
add
add
add
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
roll
add
jnp
add
loopne
add
xor
add
pop
jb
add
add
add
add
add
lock
add
add
pop
add
popa
add
call
mov
add
faddl
loopne
dec
add
add
test
xchg
xchg
jp
mov
sarb
push
cld
add
add
add
xor
stos
gs
xorb
xorb
out
push
add
mov
mov
loopne
subl
xor
xchg
stos
lcall
add
add
add
call
xlat
loop
fsubs
jg
stos
xor
addr16
jmp
cmpsl
add
lret
jno
aaa
daa
or
movups
jne
cmpsl
lods
pop
push
ret
jne
add
add
add
js
mov
je
push
push
mov
insb
iret
add
in
test
xchg
daa
add
add
outsl
xchg
lret
mov
cld
xchg
int
pop
mov
add
add
add
adc
repz
scas
dec
stc
out
pop
push
add
pop
add
adc
xchg
add
dec
mov
add
add
shll
add
add
add
add
add
mov
add
push
mov
mov
add
mov
lds
xchg
jg
add
add
add
sbb
add
add
add
sarb
add
add
add
add
add
fdiv
add
add
add
enter
pop
nop
jae
sub
es
and
add
push
add
add
add
ljmp
into
add
mov
add
add
xor
xor
add
or
add
add
add
add
add
add
add
add
add
sub
or
push
add
insl
int
mov
movsl
add
xor
lods
add
add
add
add
add
add
add
add
add
jle
add
dec
cltd
add
add
add
add
xor
add
xor
fmull
fadds
add
add
jo
lret
push
aam
add
inc
mov
add
add
adc
pusha
add
xchg
pop
add
add
mov
aaa
add
loop
add
adc
insl
stc
clc
add
pop
add
cmp
add
shlb
movsl
xor
lock
bound
andb
adc
addb
and
add
lock
test
int3
add
testb
pop
mov
jl
rolb
lock
sbb
and
add
add
adc
add
jle
repz
add
addr16
ss
add
xlat
pop
add
jns
pop
aam
add
sti
add
add
int
add
add
add
push
lcall
xchg
test
add
cmp
add
and
movsb
js
add
aas
add
dec
jae
xor
add
fiaddl
and
rol
xor
or
inc
add
add
add
add
add
add
pop
arpl
add
xchg
add
add
cmp
nop
add
add
inc
dec
hlt
add
xchg
add
mov
sub
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
leave
out
add
loop
add
ss
add
or
push
fcoml
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
movnti
add
mov
add
dec
mov
add
add
add
mov
and
pop
sahf
xchg
pusha
insb
lcall
push
lods
push
stos
mov
movsl
insl
rorl
cmp
sbb
jge
dec
outsb
mov
mov
in
lods
mov
pop
fcmovnbe
mov
and
jno
pop
xchg
cmp
mov
mov
imul
add
and
pusha
inc
or
pop
and
nop
inc
popf
stos
jae
push
icebp
xchg
jns
cli
push
sbb
mov
stc
int
and
xchg
jo
or
loope
xlat
fidivl
iret
sub
cmp
int
sub
stos
and
mov
pop
pop
ljmp
sbb
scas
ret
js
add
imul
cmpsb
lods
pushf
inc
sub
cltd
sahf
pop
and
sub
test
cltd
push
add
xchg
aas
mov
jb
lea
out
daa
and
rcll
aas
ja
push
out
sub
dec
pop
fwait
xchg
outsl
loop
adcl
daa
cmp
in
inc
xor
stos
data16
mov
jo
dec
imul
out
mov
sbb
adc
push
cmp
mov
mov
xchg
arpl
iret
jl
inc
mov
movsl
insb
adc
aas
pushf
xchg
test
mov
in
pop
icebp
sub
leave
and
dec
adc
cmpb
inc
sbb
enter
xor
sub
and
jns
daa
cmp
aad
insb
js
cwtl
mov
or
inc
xchg
xchg
xor
push
sbb
mov
les
and
cmp
hlt
add
fs
pop
lods
lahf
inc
xor
popf
lcall
test
cwtl
add
mov
data16
insl
testb
movsb
push
jge
rclb
jle
push
adc
out
sub
dec
pop
lcall
xchg
outsl
andl
out
inc
xor
lea
imul
pop
mov
call
mov
fstp
pop
xchg
and
scas
shll
xchg
pusha
jns
pop
jns
push
xchg
adc
push
setge
mov
cs
adc
repz
jg
divl
xchg
jmp
sbb
lcall
sub
mov
push
popl
pop
dec
cs
lods
or
icebp
rorb
jp
push
in
sub
xor
and
push
hlt
push
pop
pop
lret
cld
add
mov
inc
test
cmpsl
leave
cmpsl
je
popa
jle
hlt
leave
clc
out
jl
mov
mov
dec
cmp
sub
cmpsl
add
jge
lret
in
sti
xor
sbb
and
dec
aaa
sbbb
add
jg
and
or
rcl
dec
push
enter
das
lock
das
adc
rcrb
test
iret
jns
jg
rorb
cli
negb
dec
jb
add
aam
out
in
cli
dec
sub
and
cmp
nop
xchg
cmpsb
inc
pop
mov
mov
xchg
mov
flds
leave
or
pusha
cmp
movsl
jne
cwtl
mov
inc
pop
je
lahf
mov
mov
inc
loopne
dec
jecxz
inc
dec
pop
pop
mov
jo
xchg
mov
mov
popa
test
and
iret
fwait
out
push
jmp
aas
push
mov
xchg
stc
add
lcall
in
inc
inc
jge
enter
scas
addr16
test
lret
shrl
mov
leave
mov
xchg
movsb
mov
push
mov
push
lret
les
push
leave
loop
xor
sbb
adc
inc
inc
and
testl
xor
aam
pop
les
lods
sub
sbb
and
rcr
insl
outsl
das
movsl
in
or
lods
cmpsb
popa
push
pop
jl
sbb
scas
hlt
jl
call
jmp
sbbb
sub
fistps
test
sub
xor
ficompl
push
push
lods
jmp
sti
in
daa
in
jo
push
xor
shlb
inc
and
cmp
je
mov
inc
push
lret
pop
sarl
mov
jb
stos
mov
stos
call
sbb
mov
adc
fs
das
dec
cwtl
push
cmpb
mov
shr
add
adc
xor
incl
pop
loop
test
jp
js
hlt
leave
les
cwtl
push
lahf
testl
pop
stos
dec
jb
mov
subb
and
pop
pop
dec
xor
pop
jnp
add
push
leave
sbb
fcmovnb
mov
adc
lea
mov
imul
in
adc
js
mov
arpl
xor
jbe
out
inc
out
jmp
testb
lcall
daa
xchg
xchg
mov
adc
mov
sbb
in
ficompl
rorl
aaa
icebp
add
addr16
sahf
fimuls
and
nop
mov
mov
inc
cld
inc
dec
out
sbb
pop
push
mov
jb
test
xchg
adc
mov
mov
adc
and
cltd
jmp
pop
out
add
sbb
adc
sub
dec
ja
aad
cli
push
clc
shl
les
jo
lahf
iret
lea
scas
cmpsb
mov
pop
mov
sbb
fidivrs
push
jmp
or
outsl
dec
xor
and
das
cmp
pushf
jge
cs
or
push
push
mov
adc
mov
push
pop
imul
rcll
js
fadds
movsb
jb
jp
repnz
xor
mov
data16
push
insl
jmp
push
xor
sbb
testb
inc
int3
out
sub
mov
push
cltd
pop
repz
rorl
outsl
mov
mov
testb
xor
push
fisttpll
sub
and
sbb
inc
pop
pop
xor
mov
add
sub
jl
in
mov
push
arpl
cmp
xchg
jmp
pop
iret
cmpl
xchg
and
lahf
xchg
loop
test
mov
mov
dec
jge
sbb
hlt
dec
les
stc
add
pushf
ja
push
stos
cmpsb
mov
push
test
dec
push
scas
ss
add
movsb
hlt
pop
inc
out
ss
add
fidivs
xor
pop
jp
test
andl
dec
push
out
cmpsb
fildl
mov
adc
mov
pop
lods
movsl
int
fldcw
lods
mov
push
xlat
jl
jns
fld
movsl
je
jnp
repnz
mov
out
inc
out
ljmp
ljmp
xchg
popa
inc
repnz
sub
mov
mov
mov
cwtl
xchg
repnz
pop
aas
enter
or
xor
cltd
lahf
testl
imul
stos
test
scas
sbb
pop
pop
mov
pop
test
shrb
sub
jp,pn
cmc
adc
cmp
pop
out
cmp
jo
and
pop
push
in
aad
mov
movsl
pop
dec
jecxz
stos
jg
jno
ret
repnz
divb
inc
pop
mov
push
xlat
scas
xor
mov
pop
shl
aaa
pop
sbb
pop
adc
xchg
dec
sub
stc
repz
andb
mov
out
iret
fiaddl
rorb
adc
addr16
lods
scas
push
lahf
dec
dec
mov
roll
cmp
jg
ss
andb
or
js
or
and
cltd
test
sub
js
and
lcall
sub
int
mov
or
loopne
pop
sbb
add
test
lock
jecxz
icebp
lea
jbe
int
dec
jmp
test
or
sub
inc
and
inc
dec
pop
lods
mov
lods
xor
push
push
jo
xor
test
jecxz
in
add
out
daa
popl
inc
mov
scas
adc
jbe
cld
add
xlat
inc
dec
pop
rorl
xchg
dec
adc
cs
mov
ret
in
mov
and
pop
inc
pop
mov
dec
sub
mov
adc
add
cmp
fbld
pop
std
adc
data16
xchg
test
lret
push
fidivl
mov
notb
cmp
push
fwait
jne
std
andl
cli
jo
jns
or
fcompl
repnz
push
xor
icebp
sub
jne
sub
ret
subl
mov
xlat
test
or
loop
shrb
mov
icebp
mov
dec
dec
and
push
jmp
cmpsb
movsl
inc
jmp
jbe
pop
pusha
mov
dec
pop
mov
das
xchg
jle
mov
pop
dec
and
jecxz
inc
adc
ret
and
sbb
inc
ljmp
or
jl
jb
ror
stc
pop
rolb
sahf
fmull
test
pop
xor
mov
dec
fbld
push
orl
daa
outsw
push
pop
pop
dec
cmp
and
subb
shll
sarb
push
xor
pop
adc
or
jb
hlt
cmp
fdivs
xor
jns
mov
cmc
les
jo
jg
or
add
div
stc
pop
cmp
inc
xchg
mov
out
mov
lret
sbb
iret
inc
xor
push
and
adc
out
jnp
push
dec
lcall
xchg
aas
or
jno
scas
push
mov
dec
lods
inc
inc
aam
jb
addr16
ja
xchg
mov
sbb
lahf
pop
mov
divl
bound
xor
movsb
push
clc
add
js
bound
xchg
out
sub
addl
sub
data16
sar
stc
outsb
adc
xchg
orb
scas
mov
push
mov
aas
leave
mov
lret
mov
mov
sbb
push
push
push
push
jbe
out
sbb
mov
sub
push
ret
xlat
dec
push
hlt
or
pop
adc
dec
stos
dec
int
ficoms
divl
lret
jns
jo
add
popf
or
gs
lret
jge
mov
cli
lds
call
insl
lahf
adc
daa
and
insb
adc
out
dec
xchg
scas
shrl
xchg
lahf
shrl
aad
xor
popf
mov
xchg
movsl
add
out
stc
mov
push
mov
dec
fisubs
inc
loopne
jne
pop
pop
orl
mov
rolb
pusha
mov
sub
cmp
push
std
int3
call
call
test
jecxz
pop
addr16
fcmove
bound
shl
shlb
test
inc
loop
stos
mov
test
inc
pop
fnstsw
fnsave
add
xchg
sbb
dec
sbb
xor
aas
les
andl
leave
loope
pop
clc
rcrl
adc
mov
jle
mov
cmp
bound
fiadds
sti
add
ret
jae
pusha
mov
ljmp
mov
push
cltd
scas
xor
sti
fucomp
and
cmpsb
sbb
mov
mov
out
mov
leave
leave
pop
sarb
in
lods
gs
jae
jae
out
fcmovb
mov
inc
push
rcrb
mov
mov
mulb
inc
xor
inc
inc
pop
int
jg
mov
mov
iret
pushf
add
jno
push
pop
mov
xchg
pop
jne
call
cmp
pop
xchg
pop
neg
test
clc
int
pop
jle
fmull
decl
iret
testb
mov
mov
clc
and
mov
cmp
flds
or
ja
dec
pop
sbb
gs
and
mov
inc
out
or
lret
jmp
inc
data16
ds
sub
sbb
hlt
push
mov
insl
sti
mov
in
adc
jb
adcb
xorl
jg
jp
and
ret
lock
pop
xor
push
jle
test
mov
int3
call
aaa
mov
lret
mov
cli
xor
das
dec
inc
pop
sub
xchg
rolb
inc
rcl
lcall
xchg
mov
lea
stos
mov
jnp
jp
ret
pop
pop
sbb
xor
jae,pn
test
mov
imul
test
inc
push
inc
adc
fwait
mov
mov
dec
in
sti
loope
dec
clc
in
repnz
push
ljmp
cmpsl
lods
or
pop
stos
push
pop
mov
inc
sarl
xchg
fwait
testl
sbb
push
pop
cmp
lea
cmp
push
jb
divb
xchg
loopne
and
pushf
inc
pop
mov
lret
cwtl
lds
repz
int3
fidivs
xchg
and
xor
popa
cmp
jl
or
cmc
xlat
loopne
xor
jp
ljmp
sbb
loope
cmp
inc
shll
ret
lods
lds
dec
mov
inc
aas
xor
fadds
movsb
lds
sub
lods
mov
mov
inc
jmp
fsts
dec
push
mov
sub
loopne
jmp
pop
xchg
fidivl
pop
nop
popa
cmc
jp
jle
mov
enter
xor
pop
pop
push
mov
cltd
jecxz
inc
cli
jecxz
int
dec
lds
add
ficoms
mov
cmp
and
shl
mov
jns
inc
and
cmp
loop
and
aas
jne
jmp
pop
stc
cmp
xchg
outsl
inc
mov
cmp
mov
push
pop
and
lds
cmpsl
xchg
imul
pusha
dec
arpl
inc
lds
imul
out
jg
repz
call
leave
pop
in
lret
mov
mov
mov
inc
mov
or
push
mov
mov
out
jbe
nop
aad
gs
cmp
sub
cs
add
arpl
jmp
fdivs
cmp
pop
scas
adc
mov
push
adc
in
fldl
pop
push
mov
stos
inc
jae
shl
sti
std
push
aam
cwtl
mov
xchg
pop
xor
mov
dec
inc
test
or
jo
mov
orb
nop
bound
inc
and
cmp
and
cmp
les
insl
ret
aas
sahf
adc
fstps
xor
mov
pop
mov
stc
out
rorl
jo
andb
add
popa
inc
jg
sbb
fmul
repnz
cld
shlb
les
adc
xor
jns
repz
or
pop
clc
in
movsb
mov
pop
xchg
push
scas
add
nop
roll
jmp
pop
mov
dec
rcrl
jle
xchg
pushf
jge
jb
jle
pop
inc
mov
cmp
sub
leave
and
out
mov
shlb
movsl
add
xlat
xchg
pop
sub
xchg
push
std
fbld
pop
imul
jae
inc
cld
xchg
into
loopne
push
mov
and
cld
or
dec
mov
aas
mov
or
subl
lahf
scas
pop
and
je
pop
cs
mov
cmp
xlat
iret
sub
adcl
fidivs
clc
cmp
add
xchg
dec
es
mov
lret
fnsave
loope
fldl
adc
ja
xor
jae
pop
add
ret
repz
stos
cs
inc
xor
mov
pushf
outsb
mov
sahf
pop
and
push
loopne
fwait
iret
cmp
sub
and
dec
mov
cmp
jecxz
loopne
pop
sub
xchg
es
ds
fs
in
xchg
jg
jnp
xchg
xchg
push
mov
mov
dec
sbb
ja
pop
call
and
cmp
es
pushf
inc
push
inc
das
mov
mov
push
fs
ror
push
cltd
inc
and
mov
rcll
loop
or
shl
pop
pop
mov
inc
ror
cmp
lret
sbb
mov
pushf
xorl
or
cmp
stc
fiadds
add
nop
fdivs
out
cmp
push
sub
aam
add
or
imul
jne
lcall
dec
shlb
fwait
and
icebp
sub
ljmp
adc
inc
stos
pop
mov
clc
out
xchg
and
push
xor
cltd
lods
mul
mov
mov
sti
sti
mov
jnp
inc
push
out
mov
sbb
lret
mov
push
lods
mov
sub
mov
rcrb
pop
jge
les
jp
jo
sahf
jl
push
scas
mov
cwtl
adc
inc
mov
das
cmp
jmp
jge
mov
gs
mov
out
sbb
push
mov
lahf
dec
inc
inc
xchg
dec
xlat
call
test
out
test
sbb
push
jae
xchg
push
aam
fs
out
mov
push
mov
pop
cmp
pop
jo
das
adc
aas
fimull
xchg
xor
mov
push
mov
js
mov
cmp
imul
sbbb
xor
in
push
repnz
clc
lock
add
scas
adc
stos
add
adc
pushf
loop
repnz
inc
jo
loope
jmp
into
ret
add
jmp
xchg
dec
cmpsl
add
out
add
in
jbe
sbb
lret
jae
sub
mov
adc
mov
mov
push
call
jae
es
sub
push
es
call
xor
xchg
stos
repz
addr16
push
cwtl
jne
push
test
push
ficomps
xchg
sahf
xchg
adc
sub
fidivrl
cmpsl
fidivs
cmc
sbb
xor
gs
sbb
cmp
fbld
sub
cmp
cmp
push
repz
xchg
sbb
jecxz
mov
inc
ret
mov
and
js
cltd
imul
pop
jo
mov
outsb
insl
fistpl
int3
push
imul
imul
mov
int3
fdiv
sbb
pop
sub
mov
rcl
fimull
jl
fwait
jo
adc
leave
int3
push
lods
repnz
xchg
fbld
xor
test
mov
fwait
xchg
jge
jge
insb
fnstcw
jae
xchg
add
dec
mov
lret
idivl
push
push
int
xchg
rcr
insl
imul
std
addr16
push
xchg
sti
pop
mov
scas
int3
sbb
pop
xchg
inc
fcomps
das
pop
dec
rolb
int3
push
popf
mov
or
mov
stos
imull
enter
lods
inc
push
cli
xchg
xlat
push
gs
or
mov
pushf
enter
movsb
jnp
outsb
and
push
gs
int
mov
xor
sub
or
xchg
sbbl
inc
addb
mov
sub
arpl
ret
pop
fwait
pop
sbb
mov
insb
push
push
add
cli
out
bound
jl
bound
push
dec
pop
gs
mov
out
xchg
sub
mov
call
or
test
mov
iret
push
in
sbb
std
aad
leave
pop
arpl
lods
jle
jle
pop
push
mov
fisubs
jl
scas
movsl
mov
add
leave
addr16
insl
out
cmp
xchg
hlt
lods
xchg
fldl
add
hlt
insb
add
and
xchg
xchg
stc
jo
push
loop
ret
dec
lcall
std
icebp
dec
lds
in
mov
out
sbb
jmp
push
or
mov
arpl
pop
cmp
movsl
mov
mov
jp
insb
cmp
gs
sbb
push
and
sti
lret
ret
xchg
jle
aad
xchg
xlat
fsubrs
cmp
inc
mov
xchg
movsb
dec
or
cmp
xchg
pop
xchg
push
sbb
xor
jnp
imul
cmc
bnd
cli
rcll
or
mov
jno
mov
outsl
in
lahf
dec
xchg
es
add
movsl
loope
mov
mov
jns
push
push
pop
mov
xor
in
pop
ds
adc
jg
xorb
lods
sbb
negl
xchg
xchg
mov
ret
outsb
out
in
push
int3
orl
mov
sub
xchg
sub
in
fisubrs
inc
sbb
nop
stos
xchg
enter
mov
ja
inc
xchg
pop
rcrb
nop
call
cli
loop
jl
push
int3
loop
shlb
adc
xor
hlt
pop
xor
je
inc
inc
xor
inc
push
cmc
sbb
das
movsl
push
sbb
and
in
sahf
ja
lds
or
jg
cltd
dec
mov
mov
mov
test
cmp
je
scas
push
lcall
dec
ja
cmpsl
pop
ret
loopne
rcr
mov
or
xor
sbb
sbb
pop
mov
sub
mov
fwait
lods
xor
stos
inc
mov
add
cmp
in
popf
lcall
mov
rcl
jnp
arpl
popl
xor
mov
jp
pushf
mov
mov
or
mov
fadds
sbb
sbbb
fwait
leave
xlat
xor
and
bound
jae
test
lods
and
xchg
jmp
mov
addl
jecxz
ds
and
loopne
in
int
shl
dec
lret
iret
mov
movsb
aam
pop
jg
loopne
sub
jnp
pop
push
imul
or
sub
hlt
xor
out
lods
in
sub
add
xor
dec
inc
and
push
mov
je
jmp
int
popa
dec
push
and
rclb
push
xchg
sub
cltd
popa
lret
shlb
and
mov
ret
les
out
jmp
mov
mov
cli
jmp
test
mov
sbb
xchg
inc
ja
stc
cwtl
js
sbb
lods
repnz
xchg
pop
mov
sbb
mov
sub
push
jb
xchg
xchg
addr16
insl
push
movsl
outsl
bound
bound
cwtl
push
inc
cmp
xor
loop
std
sbb
idivl
hlt
stos
mov
cmp
lcall
and
xchg
hlt
sub
arpl
xchg
lock
ds
push
push
xlat
loopne
pop
out
dec
enter
cltd
fnstenv
cmp
repz
stos
xor
mov
shlb
push
inc
cmp
pop
stos
xlat
mov
clc
das
pop
xor
dec
jae
loopne
leave
xor
fldl
rdtsc
bound
sub
cmc
fidivl
xchg
loop
adc
fwait
sbb
dec
adc
loop
iret
xchg
cmp
divb
mov
sbb
jecxz
add
stos
lock
mov
repnz
stc
xchg
ret
push
ljmp
popf
dec
int3
cltd
mov
repz
aaa
popa
je
push
mov
