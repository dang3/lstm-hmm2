inc
mov
cmc
outsb
stos
xchg
ret
mov
fistps
pop
jp
sub
rcrl
dec
sahf
and
cmpsl
cmc
aad
sub
mov
sub
mov
or
fildll
or
je
lcall
cld
lret
cmp
or
mov
addb
ljmp
dec
mov
dec
jg
ljmp
pop
mov
lds
sub
and
mov
or
xchg
and
ret
mov
mov
pop
fcomp
out
and
lods
ret
insb
shll
scas
sahf
jbe
adc
std
hlt
jns
and
lea
adc
cmc
or
andl
xchg
rcrl
aas
dec
fldt
dec
enter
aam
add
sub
test
cwtl
arpl
sbb
sbb
sub
repz
data16
push
mov
cld
pop
mov
cmp
int
aad
inc
cs
push
pop
jmp
mov
dec
not
sbb
movsb
pushf
push
pop
std
xchg
xlat
imul
stos
cmp
jae
sbb
push
daa
sub
mov
ret
add
std
sub
inc
mov
stos
xchg
and
push
cmp
clc
int3
in
mov
pop
push
lods
fisubl
repz
mov
lcall
mov
cmpl
mov
rolb
sbb
cs
cltd
push
mov
pop
jnp
or
repnz
jnp
ficoms
mov
ret
dec
cs
cmp
mov
cmpsl
xor
iret
addr16
sti
lcall
test
push
jno
mov
jge
fsubrl
popl
test
push
rcl
or
in
or
jmp
or
mov
push
dec
repz
xchg
lock
jo
push
imul
jb
stc
and
jbe
cmp
mov
fstl
jo
in
jnp
test
jbe
cld
xchg
pusha
lods
cmp
xchg
push
and
in
pop
push
sub
div
pop
push
stos
aaa
dec
icebp
push
lods
adc
data16
movsl
push
jo
push
pop
and
mov
pop
sbb
pop
add
scas
cmp
and
pop
insb
aaa
ret
mov
aas
frstor
sub
jnp
adc
xchg
inc
xor
fsubl
xor
lea
in
mov
fucomi
jecxz
stc
cmp
subl
inc
inc
inc
jo
aas
stos
dec
pop
push
daa
in
ffree
roll
jbe
xor
xchg
testb
cmp
mov
cmp
lock
push
mov
mov
pop
or
cltd
xor
add
mov
out
enter
addr16
mov
ret
iret
mov
fists
jp
test
push
jmp
testl
cmp
out
inc
xchg
inc
push
loop
popa
lahf
dec
lahf
mov
arpl
mov
pop
lcall
push
jge
insl
dec
push
mov
push
sbb
adc
fdivl
jecxz
xchg
sbb
mov
fsubl
bound
cmp
in
xchg
cmp
sub
jae
inc
mov
nop
jecxz
bound
test
mov
lret
fisubrl
mov
jmp
add
shl
adc
test
test
les
mov
ljmp
outsb
add
cmp
pusha
mov
mov
leave
popf
push
sbb
lea
hlt
xchg
xchg
xor
fstl
jo
cs
out
and
pop
cmp
xchg
fsubrs
mov
pop
and
mov
lahf
into
xor
add
add
adc
fnsave
pop
jb
dec
mov
lods
mov
xor
jbe
cmpsl
movsb
and
mov
xchg
cmp
dec
mov
xor
add
inc
stos
mov
scas
jl
xchg
lret
sub
jo
loope
mov
push
popa
ficompl
mov
repz
push
xchg
mov
lods
push
adc
imul
push
ljmp
sub
imul
and
dec
negb
lcall
mov
cmp
in
test
sub
push
nop
sbb
ljmp
or
push
jo
cwtl
jnp
mov
jmp
lods
subb
lahf
sti
dec
xor
fistpll
sub
ficoms
in
ljmp
dec
adc
xchg
in
out
add
or
je
fstpt
mov
leave
mov
ss
je
call
jae
sub
jb
mov
addr16
in
sbb
mov
rol
jo
popa
adc
dec
mov
and
jo
cmp
popa
movsl
cmp
jecxz
scas
cmp
vminsd
push
sahf
stos
gs
or
sub
es
add
xor
mov
xor
stos
mov
push
push
stos
roll
xor
loopne
add
into
and
cmp
dec
pop
int
cmp
scas
jo
hlt
mov
or
push
cli
subb
xchg
aad
mov
pushf
repz
dec
leave
mov
hlt
stc
xor
pushf
jno
or
pop
in
roll
jno
push
dec
or
roll
cmp
cmp
mov
sbb
fbstp
jns
cmc
out
sbb
sbb
cmp
sarl
jl
lock
sbb
insl
or
adc
pop
xchg
xlat
lock
js
inc
test
imul
mov
dec
daa
cmp
xor
fstpt
jae
cwtl
int
ret
fs
dec
cmp
push
loope
sbb
loope
pxor
gs
cmp
jae
int3
and
mov
ljmp
dec
xor
lret
xor
daa
data16
sarb
inc
incb
and
insb
cmp
in
pop
xor
and
cmp
push
clc
addl
mov
add
jo
imul
les
push
mov
adc
arpl
arpl
stc
repnz
scas
mov
jl
jno
ret
xchg
xchg
add
lds
into
sbb
cmp
call
add
or
jno
add
mov
and
or
jge
imul
into
ja
out
insb
jnp
push
xchg
daa
orb
int3
rcrb
insl
xchg
mov
shll
push
mov
incb
jl
rorl
sub
lret
scas
es
movsl
cld
mov
jge
mov
pop
lds
cmp
mov
int3
sub
xor
adc
lods
mov
or
pop
decb
mov
pop
enter
inc
pop
shrd
jbe
sub
lret
sbb
mov
cmc
inc
int
and
scas
cmp
dec
jmp
cwtl
jne
mov
xor
sbb
xchg
dec
mov
pop
imul
jo
cmpsb
push
fsubrs
mov
aam
jl
and
jns
mov
call
ds
loop
xor
jg
ret
xchg
dec
lea
mov
int3
xor
stos
out
pushf
or
push
xchg
cmpl
add
in
push
jb
mov
movsl
rcl
subb
jmp
xchg
xchg
aaa
jecxz
aad
dec
fsts
and
mov
lcall
xchg
mov
pop
jo
mov
lock
mov
cmp
and
sbb
mov
xchg
pop
jne
clc
mov
pop
pop
testb
xchg
je
cmp
hlt
bound
and
lds
clc
xchg
sahf
lds
idivl
push
pop
adc
pop
push
mov
add
lret
push
pop
pop
insb
insl
pop
std
mov
and
inc
sub
pop
call
js
cmc
aas
outsl
xchg
sbb
xor
cwtl
stos
xor
jbe
lret
xchg
mov
mov
mov
dec
push
jmp
adc
dec
inc
fstpt
jb
les
xor
cmp
cmc
mov
fistps
push
xchg
lahf
outsl
sub
movsb
adc
adc
adc
cmpsl
test
adc
dec
fsub
inc
lds
sub
and
out
lods
loop
cmp
std
idivb
push
stos
mov
rcl
lahf
cmp
sbb
xchg
push
pop
aas
imul
xor
jo
pop
and
popa
dec
sbb
pop
bound
aaa
inc
jecxz
xchg
mov
xor
jo
mov
mov
sbb
and
cmc
adc
stos
shl
push
addr16
mov
into
push
cmp
je
lret
inc
mov
push
lock
in
sti
adc
rcr
bsr
cmp
loope
mov
test
scas
pop
cld
int
fadds
jge
sbb
outsl
add
jecxz
dec
push
jae
insl
mov
and
xchg
push
orl
adc
decb
xchg
mov
push
sbb
push
pushf
sub
dec
das
inc
clc
mov
pusha
sbb
or
jmp
or
movb
xor
pop
pop
fcoms
mov
aas
test
mov
pop
sub
loopne
mov
data16
test
negl
clc
mov
faddl
outsb
sbb
mov
lods
sub
sahf
and
in
adc
add
inc
in
push
test
sarl
data16
mov
xchg
and
fwait
insl
jb
enter
xchg
lock
xor
dec
pop
outsb
pop
stos
outsl
or
lahf
mov
adc
or
jb
outsb
pop
dec
movsb
pop
push
xchg
icebp
sub
jb
hlt
lods
out
cmp
sub
xchg
sub
lods
cmc
popf
pop
fwait
sbb
xor
subb
push
fsubs
dec
fwait
popa
mov
jno
mov
xchg
jp
inc
push
lcall
jo
call
std
adc
sub
fcmove
loope
adc
dec
sub
imul
pop
jmp
or
mov
push
add
movsl
push
xor
pusha
test
aas
push
outsl
cwtl
xor
iret
sbb
inc
add
dec
inc
dec
bound
mov
push
rorb
rcr
decb
cmp
fisttpll
inc
add
jb
shlb
fidivs
outsl
adc
sub
out
mov
dec
push
dec
push
ljmp
mov
mov
imul
or
pop
push
ja
insb
adcb
cmp
imul
dec
push
adc
sbbl
xchg
sub
das
jbe
xadd
mull
jno
inc
sub
pop
mov
jae
and
push
xchg
rolb
pop
jmp
fidivrs
cmp
sbb
stos
lock
out
xor
in
push
mov
push
mov
call
and
jnp
sub
cmpl
stos
jge
mov
orb
jp
sub
sahf
in
or
push
cld
or
xchg
push
push
jg
mov
shufps
sub
adc
scas
sbb
pop
addr16
js
ja
mov
out
idiv
push
add
sbb
push
xor
ljmp
sub
jle
jno
popf
add
pop
insl
decl
adc
cmp
jb
jno
push
jo
stos
jo
lods
xor
jle
add
in
add
adc
jl
ja
mov
jl
jle
push
mov
daa
add
cmp
mov
inc
mov
sub
adc
ljmp
cs
fdivrs
pop
push
cld
cmp
push
xlat
inc
and
dec
add
mov
push
cmpsb
into
sbb
jnp
add
insb
setne
mov
sahf
hlt
sahf
leave
xchg
in
pop
push
xor
dec
rolb
ret
inc
jb
dec
push
xchg
jo
mov
stc
fistpll
cmc
cmp
iret
push
inc
adc
in
into
mov
in
or
cld
add
mov
fisubl
sub
xor
inc
cmpsb
int3
xchg
leave
dec
push
adc
lea
data16
dec
jmp
push
insb
sti
repz
pop
cltd
mov
clc
push
cli
pop
loopne
lahf
icebp
jl
xchg
add
stos
jae
dec
das
sbb
mov
mov
pushf
ss
negl
dec
cmp
inc
fstl
icebp
jo
push
ret
inc
fisttpl
mov
sub
fiaddl
ja
xchg
and
in
int3
xor
scas
jmp
jp
or
mov
mov
push
cld
hlt
xor
js
adc
and
hlt
pop
push
dec
add
push
jl
sbb
cs
subl
in
movd
dec
jge
push
mov
inc
out
leave
imul
mov
lret
mov
mov
mov
loope
add
or
jno
sbb
sub
scas
xchg
xchg
sub
adc
cltd
loop
test
mov
xor
push
pusha
mov
gs
aam
bound
xor
pop
leave
imul
aad
adc
movsl
popa
adc
jb
mov
lods
imul
cli
stos
add
loopne
mov
cwtl
mov
test
ret
lea
repnz
cltd
mov
add
inc
test
push
insl
push
add
outsl
adc
test
loopne
push
imul
adc
outsl
int3
sti
xor
mov
xchg
cmpsb
mov
pushf
push
inc
dec
outsl
into
je
lods
mov
xor
xlat
mov
ds
and
mov
pop
fwait
mov
adc
or
cmp
dec
or
fisubl
fs
int3
hlt
fnstcw
pop
imul
or
movsb
fsubl
xor
movsb
pop
loopne
sti
mov
and
push
loope
negl
fsubrp
lcall
std
test
repz
sbb
push
sbb
mov
mov
sbb
in
loop
cld
or
mov
popa
in
aam
and
ja
and
adc
repnz
mov
and
pushf
xor
jg
pop
shlb
cltd
xlat
sub
jp
and
cmpsb
sbb
mov
sbb
and
cs
test
aaa
outsl
fnsave
cli
pop
popa
mov
cltd
ljmp
shll
icebp
aas
inc
loopne
jmp
sub
dec
mov
mov
jmp
jecxz
lret
popa
in
cmp
add
push
out
xlat
and
gs
add
pop
mov
fcompl
mov
and
and
test
sbb
test
test
adcl
push
data16
push
shll
mov
jne
mov
andl
adc
xor
and
fnstenv
push
loopne
imul
mov
arpl
mov
inc
cwtl
add
movsl
inc
mov
cmpsb
js
jb
cmp
movl
ss
sti
cwtl
imul
xchg
iret
xor
pushf
ret
mov
mov
mov
rcll
movsb
xchg
in
cmp
pop
popl
sub
add
xor
arpl
mov
xchg
adc
fwait
mov
mov
mul
outsl
ds
sub
xor
inc
outsb
mov
lcall
outsb
inc
sub
sub
out
pop
xchg
cmc
mov
ja
xchg
shlb
add
es
add
and
pop
jb
inc
dec
out
pop
js
adc
dec
lock
sarb
ret
loopne
call
jb
pop
sub
inc
stc
testl
sbb
mov
ret
mov
pop
idivb
jl
roll
inc
das
jecxz
mov
jge
rcrb
lret
fstpl
lret
xchg
cli
adc
push
or
subb
push
daa
cmp
xor
jne
ret
stc
xor
lahf
pop
daa
xchg
cmp
ret
arpl
orl
rcll
out
pop
inc
leave
cmp
ret
sub
int
add
and
imul
popa
cwtl
cs
imul
mov
adc
pop
jae
incb
add
iret
mov
cmp
sahf
aaa
jbe
scas
add
cwtl
fsubrp
cmpsl
mov
add
sarl
jo
cmpsb
fstpt
push
pop
push
daa
pop
push
fsubrs
mov
push
and
rcrl
sub
gs
mov
xor
mov
push
sahf
fists
lods
mov
cwtl
out
adc
rcrb
pop
and
xorb
dec
or
push
inc
push
dec
xchg
fidivrs
mov
stos
adc
cmp
int3
repnz
into
cwtl
les
lods
cltd
adc
and
mov
dec
and
enter
arpl
add
stos
jns
outsb
imul
sbb
lar
sub
jge,pt
jg
or
mov
sbb
mov
xchg
repz
adc
xchg
cmpsb
fsubr
pop
clc
addb
mov
bound
push
cmp
scas
or
pop
or
push
cmpsl
xchg
add
or
mov
jge
int
push
pushf
shll
push
cmc
mov
mov
rol
push
imull
pop
hlt
dec
out
push
inc
sub
lock
pop
test
pushf
pop
push
dec
ret
jae
jbe
mov
add
mov
mov
push
sbb
daa
push
sub
pop
lsl
out
imul
and
cltd
stos
gs
cs
scas
pop
xlat
add
js
sub
int3
sub
adc
fstpt
pop
hlt
lods
ror
sti
into
shl
mov
adc
cltd
movsb
mov
icebp
mov
test
jecxz
hlt
push
mov
pop
mov
sub
push
add
push
mov
int
jmp
inc
iret
mov
cmp
jge
ds
mov
repz
pextrw
dec
enter
repz
inc
mov
loopne
ljmp
inc
in
testl
and
mov
and
jb
or
das
adc
sbb
sbb
shlb
adc
pop
fsubp
test
lahf
xchg
les
lds
outsl
int
and
mov
xor
fistpll
inc
and
push
cltd
arpl
or
and
fistpl
jbe
mov
jmp
ret
repnz
in
mov
bound
and
push
pop
movsb
test
mov
test
inc
and
dec
inc
scas
inc
dec
addb
mov
bnd
arpl
shll
loope,pn
test
fstpt
imul
leave
ficoml
aas
inc
lret
add
fbld
or
les
mov
js
negb
lahf
jae
pop
jecxz
dec
xor
cmpsl
and
jo
loope
push
in
sti
pop
cmpsl
clc
scas
mov
mov
jae
divl
add
repnz
pop
in
ss
add
push
push
xchg
js
xchg
scas
or
lret
scas
xchg
and
pop
insb
in
pushfw
cmp
dec
std
sub
add
jecxz
jo
testb
out
and
and
fcomip
mov
call
and
add
xor
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
