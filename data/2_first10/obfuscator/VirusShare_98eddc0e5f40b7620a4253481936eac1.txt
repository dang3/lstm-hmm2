loope
xlat
xlat
or
popf
fsubrs
xchg
and
xor
add
orl
pusha
fistl
add
pop
jo
dec
outsl
mov
ficoms
sub
jb
lcall
fwait
rclb
aam
mov
sub
mov
cmpsl
nop
or
mov
xchg
mov
xor
fnstcw
pop
xchg
push
mov
sbb
xor
pop
lret
int
mov
add
test
cmp
sbb
mov
inc
popl
aad
cmp
jg
pusha
cmp
cld
mov
movsl
push
fdivl
out
pop
out
lds
push
pop
idivb
mov
pop
fisttps
lea
popa
pop
aas
mov
lea
test
orb
inc
imul
cmp
jl
rcl
lret
sbb
repnz
mov
popf
and
cs
bnd
ret
stc
push
fbstp
sbb
call
dec
cmp
in
jg
mov
scas
mov
aam
jle
out
mov
fwait
fwait
mov
fs
imul
xchg
enter
cmp
jnp
push
push
mov
jbe
out
shl
push
out
sbb
lock
push
push
sbb
add
push
aaa
xchg
cwtl
movsl
adc
repz
xchg
inc
push
dec
stos
fcompl
push
sahf
test
jno
bextr
in
push
ds
sub
xorl
dec
movsb
dec
jmp
dec
mov
dec
dec
xchg
ja
push
cli
loope
mov
and
cmp
lcall
and
mov
sti
lock
xor
ljmp
bound
mov
adc
insb
aaa
into
and
arpl
testb
lret
call
in
cmp
add
push
and
test
mov
cmc
mov
sbb
lahf
adc
fcomip
popf
call
test
icebp
iret
jecxz
pusha
push
ss
mov
add
mov
cwtl
aad
das
ljmp
sarl
sbb
jmp
add
and
rcl
cmp
ss
push
in
xchg
mov
fistl
out
mov
sub
icebp
mov
sbb
xchg
sub
and
xlat
test
xchg
outsb
mov
sbb
popf
or
push
insl
adc
jae
sub
mov
fmulp
fidivl
dec
out
xor
test
stos
add
mov
cltd
xor
in
movzbl
pop
es
ret
addr16
add
movb
jmp
cmp
setae
movsbw
bswap
cwtl
lea
not
lea
je
pushf
mov
jmp
push
lea
jae
push
dec
mov
mov
inc
pushf
movb
call
test
lea
mov
push
pop
movzbw
or
push
neg
mov
not
bt
mov
pushf
inc
ror
sbb
mov
neg
setl
test
sub
lea
not
lods
and
xor
jmp
call
lea
call
pushf
pushl
push
push
lea
jmp
xor
test
iret
pop
add
aaa
clc
daa
sbb
scas
lea
push
rcll
inc
in
adc
jle
mov
sbb
loopne
sub
scas
clc
or
pop
mov
push
add
ret
mov
ja
adc
xchg
push
xchg
push
mov
cmpsb
pushf
pop
movsl
or
mov
sti
les
xchg
ljmp
fs
jne
or
add
pushf
mov
clc
add
pushl
push
movzwl
rcr
mov
movb
pushl
cmp
add
test
mov
mov
test
movw
test
jmp
or
pushf
pusha
push
lea
je
jmp
or
mov
lea
je
xadd
cmp
pushf
sub
bsr
mov
movsbw
movsbw
mov
pushf
shld
pushl
sbb
shr
lea
movzbl
and
neg
mov
pusha
pushf
clc
cmp
or
jmp
push
pusha
push
push
lea
jne
not
cmc
not
shl
mov
neg
cmp
sub
jmp
pop
movzbw
pushl
popl
pusha
bswap
mov
mov
pop
movl
movsbw
lea
not
bswap
lea
pushf
movl
call
mov
jmp
pushf
lea
jne
pushf
jmp
lea
push
call
pushf
pusha
lea
jne
pushf
push
stos
pusha
push
lea
jmp
shl
shl
mov
bt
cmc
movb
shr
pusha
cmc
pushl
bt
cmp
pushl
call
add
add
xchg
leave
dec
mov
cmpsl
in
add
mov
xchg
or
pushf
mov
movsb
add
lds
fwait
xor
mulb
add
pop
xchg
cltd
or
add
rcrl
dec
and
jl
xchg
test
cmpsl
xor
add
pop
xchg
jns
int3
stc
mov
sti
pop
xchg
dec
hlt
mov
add
cmp
aaa
sub
add
inc
pop
xchg
mov
stos
aaa
cltd
in
add
js
xchg
leave
lahf
mov
add
aas
pop
xchg
mov
mov
pop
xchg
dec
sbb
add
aas
pop
xchg
dec
movsb
dec
insb
out
rolb
add
xchg
leave
xor
out
in
add
inc
pop
xchg
mov
xchg
xor
and
xchg
imul
add
inc
pop
xchg
sbb
in
add
inc
pop
xchg
or
rolb
add
and
add
inc
pop
xchg
sbb
mov
mov
aas
pop
xchg
cltd
aas
test
push
imul
xchg
leave
mov
out
in
add
nop
pop
xchg
test
lea
test
outsb
in
add
inc
pop
xchg
fstps
add
add
mov
add
cs
xchg
or
and
sub
pop
xchg
or
dec
pop
fwait
test
pop
xchg
cmp
push
test
add
pop
xchg
dec
mov
in
add
inc
pop
xchg
mov
pushf
xor
add
add
xchg
dec
popl
add
aas
pop
xchg
mov
in
add
inc
pop
xchg
mov
in
add
inc
pop
xchg
fstps
inc
sub
pushf
add
cmp
sub
add
in
push
xchg
jmp
aam
add
jle
xchg
flds
andb
in
add
inc
pop
xchg
or
cmc
add
cmp
repz
ljmp
xchg
leave
mov
aas
push
pop
xchg
mov
leave
add
scas
pop
xchg
pop
dec
mov
add
cmp
into
jo
iret
mov
add
pop
xchg
or
rcrb
shr
bt
rol
add
setnp
adc
adc
mov
push
test
pushf
call
bt
bt
jmp
movsbw
jmp
lea
je
pushf
lea
jmp
bsr
movsbw
clc
sub
call
lea
ja
pusha
jmp
push
lea
jb
test
cmc
cmp
jmp
lea
jb
cmp
jl
bt
cmpb
pusha
pushf
mov
lea
jne
sub
pusha
call
lea
je
cmp
sub
bt
stc
cmp
pushf
lea
ja
clc
jmp
push
push
inc
push
xor
cs
insb
add
shr
xor
add
int
dec
mov
stos
mov
lea
jmp
mov
call
mov
mov
xor
jmp
adc
in
mov
pop
push
lahf
bound
adc
sbb
or
inc
adc
cli
sub
cmpb
js
or
cmc
outsb
pop
fsts
xchg
call
das
lfs
out
adc
repz
dec
pusha
jmp
jecxz
ficomps
movsb
ja
pusha
imul
push
inc
popf
fcompl
push
or
pop
filds
jae
xchg
cmp
ret
out
xor
jg
cwtl
movzbw
mov
mov
jmp
pop
jecxz
sbb
lods
xorl
xchg
cwtl
cmc
test
push
xor
mov
sub
xor
imul
test
mov
xor
fs
js
out
jne
call
jp
xchg
addr16
jns,pn
jb
inc
fnstcw
pop
lret
xor
repnz
cmp
dec
jno
adc
ljmp
fildl
xchg
pop
push
xchg
xchg
sbbl
cltd
mov
cwtl
mov
addr16
aad
lcall
sbb
fcoms
sbb
mov
rcr
addr16
std
add
lcall
sub
in
fsts
scas
mov
mov
mov
lcall
add
and
cwtl
mov
push
imul
xchg
adc
movsl
lea
push
dec
ja
movsb
add
sbb
in
mov
lods
in
sahf
in
shr
mov
mov
mov
add
outsb
fisubs
shrl
in
fnstcw
lahf
imul
sarl
test
push
scas
lahf
jmp
xchg
mov
inc
mov
inc
jecxz
xchg
mov
mov
jns
xorl
test
sbb
cmp
mov
xchg
mov
inc
test
rcr
out
cwtl
fisttpl
fcmovbe
loopne
loope,pn
notb
xchg
inc
add
test
mov
sbb
add
xor
push
xchg
mov
sbb
inc
dec
jecxz
xchg
cmpsl
fstpl
out
dec
push
lock
mov
jbe
adc
aam
push
mov
jo
cmp
xchg
mov
add
mov
mov
inc
rorl
test
sbb
in
fdivrp
setne
xchg
or
fcom
rcrb
repnz
ret
cli
adc
or
fisttpll
mov
jae
xchg
pop
inc
mov
inc
lahf
mov
out
push
push
in
or
cwtl
insl
mov
das
ss
std
lods
sub
sub
lret
or
inc
jmp
insb
push
lahf
pushf
pop
sti
mov
arpl
adc
popa
sti
dec
je
pop
mov
xor
xchg
mov
in
add
data16
mov
mov
or
xor
es
push
xor
aad
das
or
jecxz
out
mov
mov
mov
stos
cmp
pusha
mov
xor
dec
arpl
pusha
mov
popa
in
mov
mov
pop
rorl
jns
sahf
xchg
mov
insb
pop
mov
lret
outsl
dec
in
lahf
cli
mov
int3
fdivr
imul
inc
add
xchg
xor
fs
in
xchg
sub
imul
ret
mov
add
mov
push
xchg
dec
outsb
cs
mov
in
adc
lods
mov
dec
adc
jnp
add
jle
out
dec
lret
std
adc
dec
cmp
dec
add
mov
shlb
adc
addb
pop
mov
push
cltd
test
jnp
popa
xlat
lahf
inc
popa
out
sbb
jecxz
xor
mov
arpl
mov
mov
dec
int3
xchg
out
test
out
sti
mov
push
push
lcall
dec
popa
xchg
pop
inc
inc
in
lds
iret
pushf
dec
mov
pop
ret
les
dec
push
mov
inc
cmp
orl
test
dec
out
push
cld
jmp
pop
addr16
fistpl
xchg
aam
jnp
insb
mov
or
dec
addl
push
jne
test
mov
add
imul
pop
xchg
pusha
jp
cld
dec
xor
mov
mov
sub
sbb
movsb
dec
push
adc
loope
xchg
std
in
bswap
fdivrs
mov
or
add
add
addl
dec
loope
xchg
leave
arpl
popa
push
cltd
mov
dec
insl
mov
adc
mov
xchg
cs
inc
sbb
lcall
notl
fwait
popa
in
arpl
push
lcall
dec
sbb
mov
int3
mov
jmp
push
mov
shll
mov
clc
sub
outsb
and
imull
jmp
out
cld
fxam
jnp
pop
inc
stc
lret
int3
cmp
push
push
nop
cwtl
popa
jecxz
push
jg
insl
xchg
scas
dec
or
popf
into
inc
jae
jp
fidivrl
movsl
popa
mov
cmp
lahf
es
sbb
mov
jecxz
sahf
add
addr16
ljmp
rcrb
inc
mov
aam
popl
mov
addl
mov
add
cmp
inc
aad
and
and
lods
push
sti
cwtl
sbb
jecxz
cwtl
inc
push
lret
dec
jge
sbb
lcall
ss
or
push
dec
cltd
and
fistl
add
mov
mov
lds
mov
cmp
adc
pop
pushf
pop
pop
sub
mov
mov
xor
cli
sub
mov
mov
xchg
mov
stos
je
push
fsts
xchg
cmp
mov
jg
xchg
adc
mov
js
addl
ja
jg
push
sbb
pop
dec
addr16
mov
cmpl
push
ffreep
cmpb
dec
push
jmp
cmp
mov
negb
lahf
jnp
mov
mov
pop
adc
inc
loop
jb
ljmp
fcmovb
cs
mov
mov
cmp
xchg
cwtl
pop
mov
pushf
test
ja
jg
adc
inc
fidivrl
aas
inc
jb
dec
xor
or
inc
jnp
shrl
mov
adc
mov
repz
push
pop
mov
cmp
sub
inc
add
test
xchg
addr16
add
push
dec
ud1
es
adc
fistpl
lret
sbb
testb
test
or
loopne
movsb
sbb
push
push
push
dec
pop
sbb
mov
xchg
aaa
jnp
sub
jae
inc
rclb
jle
cmpsl
mov
aaa
shl
shlb
sub
inc
mov
pop
inc
mov
cmp
insl
add
jge
mov
xchg
or
or
pop
mov
or
nop
idivl
sub
movsb
inc
imul
insl
mov
pop
mov
mov
pusha
sub
int3
mov
stos
mov
jg
lea
iret
insl
stc
das
fistps
fisttpll
shlb
push
jg
adc
dec
jbe
jg
mov
and
les
sarb
mov
jbe
jg
mov
inc
imul
into
fistps
mov
mov
movsl
ret
lock
pop
fisttpll
imul
lods
push
into
adc
mov
pop
ret
in
mov
sub
adc
stos
pushf
mov
push
sub
inc
stos
mov
in
notb
lahf
mov
mov
mov
jae
mov
orb
sub
adc
xorl
inc
pop
or
rclb
mov
mov
addr16
imul
push
cmp
mov
sbb
aad
addr16
push
fbld
mov
pop
xchg
cmp
jbe
movsb
jno
and
lahf
add
sbb
sbb
lahf
mov
pop
xchg
xchg
jg
movsl
movsb
sub
outsl
jecxz
lea
popa
xchg
loopne
and
push
cwtl
mov
xor
mov
jns
pushf
xchg
pop
mov
loopne
push
imul
mov
xchg
mov
scas
add
push
xchg
mov
inc
adcl
ret
addl
js
dec
jecxz
arpl
or
mov
pop
and
mov
xor
lds
outsb
cwtl
mov
call
pop
mov
test
testb
xchg
add
mov
cmp
orl
push
ret
jecxz
mov
in
into
or
lods
lret
push
lret
jecxz
jns
in
arpl
out
xchg
fidivrl
icebp
das
xchg
fdiv
test
bound
push
pmaxsw
popf
inc
in
in
mov
xchg
in
push
mov
mov
mov
lods
js
std
in
popf
roll
rorl
out
ds
jmp
insl
push
in
jecxz
pop
lcall
ficompl
jecxz
pop
loop
ja
adc
popa
sbbl
nop
jns
stos
cmc
dec
inc
or
adc
imul
test
addl
xchg
mov
push
mov
out
cmp
mov
or
mov
adc
pop
jo
sbb
jmp
mov
dec
scas
stos
pop
add
cmp
inc
sub
dec
jne
aaa
outsb
mov
push
dec
cmp
test
loopne
mov
aaa
mov
sbb
pop
pushf
fwait
repnz
mov
test
stc
in
lea
add
inc
sbb
pop
pop
sbb
aad
aas
aam
jno
jns
mov
mov
mov
jp
cmp
clc
rolb
test
mov
orb
mul
mov
cmp
add
inc
orl
mov
or
aas
inc
mov
lret
and
mov
loopne
mov
in
in
push
ja
mov
xchg
mov
int
testl
rcr
ret
adc
sbb
out
pop
test
or
sub
aas
mov
loopne
mov
fsubl
push
ja
mov
xchg
fiaddl
pop
jmp
inc
push
jnp
mov
cli
adc
add
enter
pop
and
aaa
pop
mov
xchg
das
pop
loope
fcomi
cld
dec
push
sbb
fiadds
imul
in
dec
add
add
orl
nop
loop
mov
rol
hlt
rcr
add
inc
adc
dec
sbb
cwtl
or
jmp
mov
or
lahf
dec
lcall
add
ficomps
cwtl
mov
fstpl
fcoml
lret
adcl
xchg
add
sbb
inc
adc
subb
leave
mov
ss
sbb
lahf
pop
and
and
and
and
ss
aad
sbb
sahf
aam
sbb
sahf
ret
test
ljmp
sbbb
push
fwait
xlat
push
mov
out
ss
pop
ja
mov
adc
inc
or
add
notl
xchg
cmp
cmp
out
cmp
iret
pop
in
add
and
ds
sub
lods
pop
iret
rcrl
mov
fcomi
fs
aas
jnp
clc
pop
sbb
mov
loopne
mov
test
mov
lods
mov
inc
or
inc
mov
add
fwait
mull
popf
sbb
adc
in
pop
dec
sbb
inc
inc
inc
adc
mov
mov
out
scas
roll
cltd
sub
gs
outsl
mov
xchg
in
pushfw
inc
push
shrl
and
in
outsb
subl
fwait
inc
dec
push
pop
fstpl
aas
inc
orl
mov
xor
mov
cli
mov
fstpl
in
xchg
pop
push
push
xchg
dec
sahf
jecxz
cwtl
lcall
inc
cmpsl
cmpsl
mov
sbb
jecxz
sahf
mov
pop
leave
mov
jp
test
mov
test
inc
das
pop
sbb
xchg
mov
mov
mov
clc
and
jmp
jnp
xchg
inc
jecxz
mov
repz
aas
jmp
push
test
lds
dec
adc
in
or
cld
adc
loop
mov
shl
pop
xchg
xchg
fdivrs
lret
sbb
fadds
repz
arpl
mov
dec
into
pop
sbb
sbbl
inc
inc
lcall
sti
cmp
and
outsl
call
movsl
shll
xchg
sbb
jb
clc
cltd
xchg
add
jns
lahf
out
xchg
test
lcall
mov
xchg
adc
aas
cmpb
cmp
mov
jbe
mov
push
xchg
pop
repnz
or
in
mov
jnp
popa
das
adcb
pop
pop
outsb
inc
mov
lods
push
subl
lahf
insl
push
test
sbb
or
in
mov
mov
gs
enter
addr16
sbb
mov
mov
xchg
repz
mov
push
outsl
cmp
sbb
xlat
add
adc
outsl
push
insb
mov
or
sar
fnstsw
pop
pop
scas
lahf
in
adc
jmp
mov
dec
lret
pop
push
in
insb
lret
pop
aad
pop
loope
lods
fwait
loop
sbbb
pop
xlat
mov
mov
fidivrs
and
push
mov
xchg
outsb
jae
mov
int
cmp
adc
roll
shrl
cltd
arpl
lea
into
adc
pushf
loop
add
mov
inc
cmp
sbb
in
xchg
test
jg
fs
xchg
push
fsubrs
jnp
lock
dec
xchg
scas
xchg
push
push
aam
xchg
out
ret
pop
shll
rcrl
sbb
lock
lcall
out
mov
xchg
in
inc
jmp
adcl
pushf
sbb
stos
jnp,pn
add
cs
scas
ds
sub
cmp
cmpsl
jl
xchg
sub
loopne
inc
push
or
lcall
mov
sub
int
in
cmc
jge
cltd
mov
aad
cwtl
in
dec
popa
ja
xchg
arpl
pop
clc
call
jae
cli
inc
xchg
mov
ss
pop
inc
xchg
into
pushf
push
pop
roll
cs
stos
cltd
fimull
cs
push
testl
push
pop
fnstcw
add
dec
cmp
xchg
push
push
mov
lret
pop
sbb
popf
cmc
dec
xchg
pop
add
or
and
jae
jecxz
imul
in
les
lcall
xchg
jp
pushf
pop
sarl
cmpl
aam
popa
mov
mov
inc
ljmp
pop
negb
insl
jecxz
xchg
cwtl
push
pop
in
stos
cmpsl
sbb
xchg
dec
sbb
dec
cmp
dec
fsubs
mov
mov
fildll
pushf
pop
rcr
adc
test
pop
sbb
lahf
sbb
scas
loope
mov
mov
in
outsb
test
push
xchg
push
incl
lcall
inc
in
movsl
popa
mov
das
sbb
cmp
std
pop
sahf
imul
sbb
outsb
lea
stos
loop
xchg
mov
mov
fstps
sbb
insb
pop
icebp
adc
mov
sahf
int
cmp
xchg
call
inc
jp
mov
mov
add
or
jbe
jmp
xor
jb,pn
cmp
fs
repz
pushl
arpl
pop
cmpsl
xchg
mov
xchg
xchg
mov
pop
ret
mov
xor
bound
dec
je
dec
ja
aaa
adc
popfw
cltd
sbb
fwait
insl
scas
in
sahf
ljmp
repnz
andb
lahf
push
pushf
push
out
ja
stos
mov
repz
xchg
stos
jecxz
in
fadds
adc
lods
stos
loopne
add
rcl
adc
loopne
stc
aaa
lahf
mov
lock
data16
hlt
loopne
aam
push
pop
mov
xor
cltd
pop
dec
jns
adcb
jecxz
xchg
or
jno
addb
mov
mov
mov
dec
xchg
or
xchg
mov
fbld
add
and
sub
sub
jge
mov
xchg
jecxz
mov
add
das
outsb
je
addl
jmp
inc
cltd
pushf
into
subl
cmp
sbb
mov
xchg
jns
pushf
add
inc
mov
fldl
xlat
mov
jecxz
insb
ret
pop
ja
test
adc
push
cmp
mov
test
xor
sbb
lea
mov
ja
pushf
rclb
pop
pop
adc
mov
or
inc
inc
cmp
pop
sub
lahf
rcrb
mov
addr16
add
int
mov
mov
jb
or
or
cmpsl
mov
rcll
out
or
in
xchg
push
push
fnstenv
popa
sbb
inc
mov
xchg
lcall
xor
and
bnd
out
mov
jnp
xchg
mov
ljmp
stos
mul
inc
and
rolb
xchg
test
in
cltd
and
jns
fndisi(8087
inc
inc
or
dec
gs
int
sub
mov
mov
jns
shlb
jbe
mov
xchg
cli
popa
cmpsl
inc
pop
lret
inc
enter
xchg
and
pusha
cwtl
mov
mov
inc
bound
mov
pop
loopne
pop
imul
sbb
sti
dec
dec
jecxz
ficomps
jbe
sahf
in
inc
adc
in
jecxz
jecxz
xor
push
pop
fadds
jge
insl
fsubrp
fstl
and
dec
mov
push
sti
movswl
sbb
test
push
ja
pop
loop
dec
shlb
mov
bound
mov
dec
pop
xchg
xchg
mov
mov
pop
jne
xchg
lahf
mov
mov
stos
mov
xchg
push
imul
scas
xchg
mov
xchg
dec
mov
out
cmp
and
arpl
pop
test
inc
sub
sbb
fldt
or
mov
int
xchg
cmpb
movsl
lret
cmp
popa
lods
and
mov
int
mov
outsl
inc
mov
fidivs
and
and
ret
inc
xor
dec
jne
xchg
dec
or
lock
sub
push
inc
xchg
sbb
xchg
add
out
jmp
int3
cli
fnstenv
cmp
push
gs
int3
push
dec
loopne
popa
in
arpl
mov
add
bound
movsl
jbe
pusha
sti
xchg
pop
push
jmp
sbb
mov
rclb
popl
scas
iret
mov
add
pop
sbb
repz
lahf
xorl
mov
addl
xchg
mov
xchg
das
mov
push
inc
cltd
sbb
aam
daa
in
imul
pop
loopne
sbb
cmp
adcl
jecxz
rolb
inc
ret
cwtl
cwtl
ficompl
rorl
fwait
mov
push
sbbb
pushf
pop
flds
inc
dec
jnp
mov
repnz
sbb
pushf
and
xchg
inc
lahf
push
cltd
arpl
xorl
jp
push
rcll
adc
cmp
cwtl
bnd
pop
sbb
mov
out
xor
scas
dec
andb
mov
push
and
daa
mov
mov
jg
jmp
test
and
mov
adcb
mov
push
loopne
inc
xor
xchg
mov
lahf
addl
add
mov
pop
cmp
or
and
rcr
xor
pop
dec
fistl
pop
xor
stos
lret
das
pop
test
loopne
gs
test
jnp
mov
add
mov
test
jg
sbbl
mov
dec
fisttpll
push
jmp
test
dec
fsubrs
push
ja
xchg
mov
and
sarb
dec
cmpsl
jecxz
inc
xchg
ljmp
mov
aad
adc
popf
pop
cmc
pop
push
movsl
pop
ret
sahf
rcll
fdivs
mov
mov
adc
lahf
add
xor
outsl
inc
pop
lock
jmp
adc
mov
add
or
cltd
jno
es
mov
mov
in
mov
loopne
push
call
mov
jmp
js
outsl
in
pop
mov
mov
imul
dec
pop
cmc
stos
orl
mov
xchg
add
daa
int
dec
ret
xchg
push
inc
push
push
adc
daa
push
inc
std
jle
push
pop
lahf
loope
orl
lret
sti
or
xlat
pop
aad
rcl
stos
mov
orl
mov
ret
or
push
imul
ds
imull
shlb
pop
iret
mov
lret
cmp
jns
xor
pop
xlat
add
pop
push
aam
ret
test
jecxz
out
mov
sub
aaa
cli
inc
lcall
push
jns
call
clc
movzwl
movzbw
bsf
mov
cmp
test
add
call
push
cmp
push
movw
pusha
call
mov
lahf
add
sbb
and
sbb
adc
fmull
xor
jae
mov
xchg
fadd
int
adc
pop
clc
xchg
sahf
popf
in
mov
jl
add
mov
mov
push
inc
mov
ljmp
cld
aam
shrb
mov
add
test
add
pushf
call
jmp
push
pushf
mov
lea
je
pusha
pushf
cmc
mov
add
push
cmp
movw
lea
jb
clc
bt
cmp
push
jmp
push
lea
call
jo
pusha
adc
call
jbe
into
push
jmp
pop
clc
xchg
push
cmp
fmull
cmp
push
arpl
pop
jl
leave
push
xchg
pusha
out
sbb
xor
movsl
add
aaa
outsb
inc
shld
movsb
int
shlb
jmp
mov
cmovb
ret
xchg
enter
and
ficompl
xor
xchg
xor
mov
jb
mov
arpl
adc
pop
sub
jecxz
subl
insb
mov
mov
cs
mov
ja
add
and
popf
inc
push
mov
into
imul
and
and
call
push
push
pushf
call
and
cld
out
mov
in
ljmp
jns
inc
fsub
and
inc
adc
xchg
fimull
test
and
xchg
lret
pop
xchg
push
xchg
push
fst
mov
test
push
mov
xchg
lea
cmp
xor
ficomps
jno
xchg
or
sub
cmp
mov
imul
clc
test
ret
call
sbbb
cmc
mov
repnz
gs
sti
add
dec
sbb
call
sub
je
test
mov
sbb
push
xlat
add
sub
gs
and
ss
call
ret
movsl
icebp
inc
push
pusha
inc
pusha
movb
lea
jmp
cmp
sub
clc
cmp
call
pushf
movb
pusha
push
pushl
popl
movl
mov
pushl
pushf
pushl
ret
pushf
pushl
popl
pushf
pushl
ret
push
clc
shl
seto
movb
lods
clc
movb
xor
cmc
call
cmp
pusha
mov
test
mov
test
clc
jmp
pushf
fwait
push
ljmp
fwait
push
in
sbb
push
mov
leave
loop
into
in
in
aad
fcomp
ret
cwtl
sbb
pushf
and
jecxz
xchg
scas
jne
and
mov
mov
push
fwait
dec
arpl
and
xchg
pavgw
shrl
adc
test
arpl
add
pmullw
lahf
rolb
xchg
negl
ja
scas
mov
xor
mov
add
mov
lahf
push
adc
xchg
fwait
in
pop
dec
sbb
xchg
loop
call
lahf
inc
jecxz
cmpsb
xchg
jp
mov
cmc
cwtl
jmp
cltd
and
xchg
push
lahf
loop
mov
add
xlat
cmpsl
jecxz
movsb
mov
add
lods
addl
or
dec
adc
pushf
mov
mov
lcall
mov
std
loope
dec
add
imul
xchg
pop
loop
test
pushf
lahf
xchg
and
mov
fldlg2
cwtl
xchg
daa
lahf
add
aad
cmp
mov
push
iret
cmpsl
add
js
push
lahf
inc
jecxz
mov
packuswb
mov
lds
insb
dec
lea
and
sub
xchg
xor
xchg
mov
add
pop
mov
adcl
leave
enter
lds
or
pushf
sub
mov
push
icebp
fcoms
inc
xchg
fwait
arpl
xchg
mov
push
pushf
pop
stos
and
and
xor
out
add
adc
sti
and
push
mov
mov
push
sarl
mov
cmp
xchg
dec
jecxz
dec
cmpsl
mov
je
clc
jnp
add
mov
shl
pop
add
mov
out
add
sub
add
adc
mov
inc
xchg
jnp
roll
cltd
clc
xchg
jecxz
mov
sbb
out
aam
into
push
jnp
adc
pop
sbb
loop
mov
mov
lahf
jnp
in
or
pop
popa
inc
push
int3
pop
test
insb
test
outsl
xor
sti
or
pop
mov
inc
lcall
mov
scas
out
lahf
ficomps
pop
mov
in
inc
dec
jge
dec
lret
js
insb
cmp
inc
pushf
cmp
in
cmpsb
lahf
je
lcall
mov
inc
in
xchg
popl
pop
adc
lcall
mov
mov
xchg
dec
fucom
cmpsb
mov
subl
inc
jne
jge
ljmp
jle
fadd
loop
dec
mov
pushf
subl
aad
pushf
adc
cmp
xorb
sarl
cmp
or
add
aad
fdivrs
sub
cmpsl
mov
pop
lea
fwait
pop
jbe
ja
add
adc
stos
jmp
cwtl
xor
leave
push
adc
mov
xchg
sbb
inc
cltd
jecxz
mov
lods
mov
cwtl
cmp
fwait
jmp
mov
and
pop
pop
clc
sti
jmp
xchg
repz
mov
mov
js
rclb
imul
pop
sbb
rcll
xchg
imul
mov
pop
int
mov
ljmp
mov
cs
cli
and
into
sbb
pusha
imul
mov
into
xchg
negl
and
and
add
bswap
popf
dec
xor
mov
adc
sbb
sti
nop
sub
cmp
movsl
test
and
and
jecxz
cmp
popl
imul
aad
fldl2t
or
testl
cmpsb
ljmp
adc
and
xchg
jge
adc
pop
add
pop
mov
popf
mov
lahf
adc
std
outsl
and
ret
pop
iret
cltd
push
enter
or
mov
xchg
lods
push
leave
int3
dec
inc
inc
xor
rcl
sti
jmp
loope
test
addr16
test
std
gs
xchg
push
imul
jne
je
dec
sbb
inc
dec
xor
test
arpl
mul
xchg
ljmp
fs
ja
sbb
pushf
sbb
push
sub
sub
dec
cmc
movb
add
add
sub
mov
stc
mov
call
cmc
clc
cmpb
call
dec
pushf
lea
jne
cmc
bts
and
mov
clc
pushf
cmp
pusha
mov
lea
jbe
pushf
lea
ja
xchg
call
xchg
bswap
pop
seto
pusha
movsbw
mov
pusha
bswap
bswap
mov
call
push
bt
sub
pushl
lea
call
call
lea
call
jmp
movl
pusha
pushf
pushf
pushf
lea
jmp
movzbw
shld
movzbl
push
sub
mov
je
movsbw
clc
push
rcr
push
stc
shl
setp
test
push
xadd
xchg
push
jmp
lea
jne
mov
mov
pushfw
cmc
mov
bt
cmc
xor
bt
push
clc
sub
pusha
stc
movl
neg
bt
pushl
push
cmp
sub
pushl
jmp
pop
pop
cmp
dec
mov
jbe
add
dec
xchg
cmp
mov
clc
std
jecxz
cltd
xchg
fsubs
mov
cmc
lds
loopne
out
push
mov
jnp
mov
and
int3
sbb
hlt
add
addr16
aam
call
dec
leave
daa
jnp
or
push
negl
or
push
xchg
push
adc
cmp
loope,pn
sbbb
jle
mov
xchg
mov
outsb
fistpll
andb
mov
into
shll
fwait
push
add
outsb
pop
das
cmp
xlat
pop
lahf
sub
ljmp
fs
call
call
call
pusha
mov
mov
mov
lea
jmp
in
repz
cli
push
mov
arpl
inc
out
push
lret
pop
out
orl
xor
add
jne
and
mov
jnp
aam
cmp
xchg
mov
sti
mov
pop
cli
mov
dec
leave
dec
sbb
test
xor
pop
pop
aad
imul
insb
cmp
shrl
sub
scas
je
cmpb
pushf
jmp
clc
jne
xor
jl
adc
inc
pop
cli
dec
je
mov
sbb
cmpsb
iret
repnz
inc
rorb
mov
or
cmpsb
stc
jge
andb
iret
mov
setbe
push
fisubrs
push
stc
sub
push
movsl
mov
cltd
paddq
popf
lahf
sbb
test
cmp
inc
nop
arpl
int
sbb
ljmp
jbe
fldl
push
pop
sub
iret
cwtl
nop
ljmp
push
sti
adcb
pop
adc
xor
cwtd
std
xchg
xchg
fsub
and
mov
fiaddl
jns
scas
sbb
jo
call
stc
cmp
rcrb
mov
ja
push
lds
aad
jmp
or
cwtl
pop
out
mov
loope
into
sbb
je
pop
add
sbb
jl
imulb
adc
cmp
pop
xchg
mov
mov
add
in
or
mov
mov
stos
or
inc
clc
imul
ret
push
push
in
fwait
out
cmp
test
mov
aam
ret
mov
or
mov
outsl
addl
cltd
aam
mov
cld
jge
push
iret
les
or
xor
inc
dec
dec
jne
in
mov
mov
pushl
mov
pop
out
subb
ror
ss
lar
imul
push
fucomip
hlt
mul
mov
pop
xor
lods
fwait
loop
test
ret
jne
cmp
lcall
push
mov
add
and
mov
cmp
aam
lods
cld
dec
dec
inc
cmpb
test
adc
out
mov
loopne
mov
aas
mov
sbb
adc
aas
jmp
jno
ss
dec
jne
outsl
or
insl
call
jl
dec
push
jmp
lcall
dec
test
cli
leave
mov
mov
dec
scas
bound
cmp
mov
aad
adc
cmpsb
push
in
add
ret
cmpsl
popf
and
popf
loopne
dec
test
je
movsb
or
andb
or
inc
or
fstps
and
xchg
pushl
ffreep
shrb
sti
std
or
add
push
mov
pop
call
decl
insl
fcomps
mov
push
mov
insl
insb
add
push
bound
mov
arpl
pusha
mov
stos
dec
mov
lret
cs
xchg
pop
enter
xchg
dec
adc
out
mov
add
dec
cltd
ret
imul
cmp
jbe
cmc
call
je
sahf
or
inc
adc
test
jae
pop
in
cmp
orb
inc
sbbb
cwtl
xchg
sub
icebp
out
scas
clc
pop
lock
inc
jo
mov
dec
push
sahf
sub
add
dec
scas
fcmovb
std
cld
mov
sub
insb
mov
sub
mov
jne
sbb
sbb
in
jp
fbld
or
xor
add
mov
xor
push
cs
test
test
pop
lcallw
iret
sahf
insl
imul
dec
and
cmpb
in
pop
jne
fldcw
mov
adc
push
push
cmpsb
fstpl
add
mov
faddl
adc
notb
push
xlat
rcll
shr
lret
jns
push
lea
or
xor
sub
xchg
les
add
mov
add
dec
rorb
mov
push
shrb
and
outsb
xor
stc
pop
jl
inc
ds
xor
stos
sub
mov
adc
mov
mov
dec
out
mov
mov
scas
mov
add
push
xchg
sbb
mov
cld
dec
jae
lret
dec
daa
dec
and
imul
xor
jne
pusha
pusha
call
movb
jmp
ja
and
xor
add
call
test
xchg
pusha
mov
btr
stc
pusha
btc
mov
xor
and
dec
mov
stc
cmc
or
movb
lea
je
pusha
cmc
jmp
not
pushf
rcr
mov
setl
rol
shld
push
neg
bts
rcr
call
lea
ja
pushf
pusha
movb
lea
jb
test
cmpb
pusha
lea
jne
shl
mov
test
jmp
stc
jmp
cmc
imul
pushf
pushf
lea
jmp
push
lea
call
call
pusha
call
lea
jae
stc
bt
pusha
cmp
jmp
cwtl
pop
pushf
jmp
test
jmp
stos
push
lea
jmp
call
bswap
push
mov
pushf
push
pusha
push
lea
call
pusha
lea
jne
bswap
mov
pushf
pushf
pusha
lea
jmp
mov
setge
pushf
lods
test
xor
clc
clc
clc
add
push
pushf
ror
clc
add
cmp
cmp
mov
lea
jae
push
push
lea
pusha
call
mov
clc
stc
cmc
or
mov
btc
rcr
dec
neg
mov
cmc
pusha
mov
clc
sub
jmp
mov
cmp
loope
add
lret
sti
jb
add
sbb
mov
push
fnstcw
stos
cmp
aad
push
xor
xchg
mov
clc
or
cli
and
aas
dec
xchg
pop
pop
push
or
mov
test
xchg
and
test
out
sbb
movsl
push
xchg
mov
push
bound
sahf
push
inc
jne
clc
mull
xor
add
in
call
mov
pushf
push
push
movw
pushl
ret
clc
or
js
push
push
lea
jne
bsr
mov
bt
or
pusha
lea
je
mov
push
lea
pushf
movzbw
pushf
jmp
add
add
jmp
test
pushf
lea
je
pushf
cmc
bt
add
mov
jmp
or
call
test
cmp
js
jb
push
pusha
cmp
pusha
lea
ja
sub
test
and
add
sub
test
pusha
add
mov
push
clc
cmp
pushf
cmp
jmp
insl
cmp
sbb
or
ret
addr16
dec
push
push
xor
sub
and
add
icebp
popf
push
fsubrl
mov
push
and
in
fsts
inc
pop
mov
push
push
cmc
rclb
popf
scas
jp
push
mov
cmpsl
lods
sub
loopne
cmpl
sub
mov
stos
lds
dec
adc
adc
in
add
lods
mov
sbb
mov
fwait
lahf
add
xor
call
add
clc
bt
clc
mov
mov
test
jmp
mov
call
lea
jne
not
sub
jmp
test
call
jne
jmp
test
pushf
xor
stc
pusha
clc
repnz
push
jmp
cmp
pushf
pushf
pushl
jmp
mov
mov
pushf
movw
push
lea
call
call
mov
push
movw
pushf
pushl
lea
jmp
neg
adc
sub
setae
call
pusha
pusha
call
nop
negl
push
lret
mov
out
mov
adc
lret
sbb
arpl
iret
rol
inc
rcrb
or
push
adc
in
mov
testl
dec
mov
xchg
cmp
dec
inc
test
or
fimuls
or
and
sub
out
sub
push
in
mov
mov
cmp
pop
aas
jmp
mov
xchg
and
sbb
xlat
cmp
xchg
pop
lea
mul
insl
pushl
adc
outsb
xchg
dec
jae
mov
inc
shlb
pop
and
push
ljmp
lods
cmc
call
add
insl
gs
arpl
add
mov
sahf
les
dec
add
push
bts
push
mov
movsbw
mov
test
stc
xor
bt
repnz
pushf
pushf
pusha
lea
jmp
ljmp
cmp
jl
sbb
sbbl
cmc
or
mov
xchg
mov
and
stos
xor
ss
ret
mov
cmp
xchg
mov
loope
mov
lret
aaa
mov
jae
into
int3
jecxz
push
enter
sbb
xor
add
add
mov
sub
addb
jne
into
fwait
push
or
pop
sbb
ret
out
lea
je
movsbl
push
mov
pusha
mov
cwtl
jmp
in
lock
pop
shr
xchg
loopne
and
aam
mov
stos
mov
and
xchg
mov
mov
push
les
fcmovnb
insl
fadds
cmp
jne
push
js
hlt
xor
test
stc
insl
pop
push
shl
cld
stos
loope
movsl
mov
jo
jae
ss
xorl
dec
inc
flds
cmpsl
repnz
pop
mov
xor
mov
arpl
push
mov
sbb
sbb
cmp
add
or
dec
push
jns
xchg
das
stos
jg
loope
sub
ljmp
lea
ja
call
pushl
call
mov
jmp
mov
hlt
and
int3
into
cltd
loop
out
test
cmp
cs
add
dec
dec
aad
cmp
xchg
fsubs
pop
les
and
mov
jg
test
push
outsl
jns
loopne
call
add
inc
std
int3
movsl
aam
adc
jge
adc
adc
push
popa
cli
mov
lock
sbb
mov
pop
pop
icebp
fdivs
cmc
mov
push
sub
jmp
add
push
test
add
sub
xchg
imul
fs
pop
add
push
adc
stos
xchg
insb
xor
lods
inc
cmp
sub
pop
in
adc
das
clc
or
rolb
sub
sub
ljmp
inc
dec
cmpsb
movsl
lea
fstpt
inc
loopne
mov
pop
push
lret
xchg
lods
push
dec
test
stos
cltd
sub
and
mov
sub
ljmp
fyl2xp1
push
push
dec
mov
cmpsl
inc
ljmp
fs
jae
bt
call
in
push
cwtl
inc
psubsw
mov
dec
aas
push
lods
pop
mov
inc
dec
jg
pop
test
mov
jns
insb
cwtl
movsb
lods
aam
ja
pop
pushf
sub
iret
subb
pop
mov
int
xchg
push
and
cltd
or
popa
add
mov
icebp
mov
fcomp
bound
sub
in
fnstsw
jnp
or
cmp
push
jmp
xor
ljmp
stc
xchg
jle
cmpsl
push
inc
jg
lret
ljmp
add
adc
cli
mov
and
test
push
pusha
pushf
mov
lea
jmp
cs
cmp
jno
dec
sub
repz
fsub
mov
cmp
lret
mov
rol
in
enter
hlt
ljmp
push
pop
inc
jecxz
xor
jecxz
popf
lcall
sub
jecxz
sbb
sbb
cld
lds
iret
cltd
xor
dec
es
lret
xchg
and
sub
jge
mov
out
jns
movsb
push
fs
add
xchg
out
jnp,pn
and
cmp
dec
push
repnz
xchg
arpl
arpl
adc
xor
leave
sub
pop
and
cmp
test
xchg
iret
loope
rcrb
dec
aam
mov
and
stos
out
outsl
in
pusha
aaa
pop
push
add
mov
xchg
lea
repz
pop
imul
test
cmpsl
pop
nop
adc
mov
inc
add
in
into
xchg
mov
std
push
xor
push
or
mov
push
out
popf
sarb
and
sub
or
test
pushf
cmp
mov
add
push
iret
pop
push
xchg
cli
loope
aas
sahf
xor
jl
or
push
add
mov
hlt
inc
cwtl
jl
jne
leave
inc
xor
jb
inc
xchg
hlt
mov
mov
outsb
and
sarb
xchg
mov
jns
out
mov
dec
mov
stc
mov
xor
icebp
popa
imul
fsts
dec
and
ret
pop
movl
mov
int3
pop
ffreep
addr16
lret
fisttps
dec
orl
loope
mov
cvtdq2ps
dec
into
test
or
faddl
xor
je
adc
mov
sub
cld
mov
jo
jbe
push
mov
xor
jmp
int3
mov
pop
cmpsb
jo
in
mov
add
xor
and
add
xor
xor
ljmp
in
call
imul
fwait
andb
sub
fistpll
popa
out
iret
scas
inc
sbb
repnz
rcr
or
push
ret
push
cmp
ret
adc
mov
xchg
pop
aam
dec
iret
scas
lods
xchg
loop
add
push
push
adc
loope
ss
daa
imul
sbb
fstl
movsb
int3
push
or
xor
imul
push
outsb
sbb
add
push
js
fsubp
push
jb
mov
jge
and
movsl
jae
adc
ret
adc
jnp
in
out
adc
cmpsb
mov
sbb
cmpsl
push
mov
inc
fldt
push
dec
pop
mov
ret
adc
pop
test
sbb
sub
aad
cld
jbe
sbb
dec
lcall
das
push
adc
hlt
ljmp
inc
push
add
call
mov
movzbw
movsbw
movsbw
mov
pusha
movb
pushl
pushl
ret
dec
push
push
inc
push
cmp
cs
insb
add
movl
cmc
pushf
call
mov
and
movsb
mov
aaa
adc
test
xchg
mov
lods
stc
aaa
push
or
ss
xchg
mov
iret
iret
outsl
mov
shrl
xchg
adc
mov
sbbb
clc
xor
divb
inc
push
ljmp
add
ss
inc
dec
mov
cltd
nop
jnp
aas
js
or
or
sbb
in
cmpsl
fucomip
in
loope
xchg
sbb
lock
gs
fmull
lds
mov
push
pop
pusha
call
pop
mov
xchg
xor
xchg
jge
xchg
bound
xchg
ret
ja
lea
jne
movsbl
sbb
mov
push
pushf
stc
jmp
xor
pop
xor
cs
insb
add
add
add
test
in
cmp
pushf
call
movl
jmp
adc
xchg
and
jnp
sub
mov
dec
push
out
out
mov
stc
out
popf
push
cmp
push
cmpsl
sbb
mov
clc
or
imul
mov
lret
pushf
das
inc
push
aaa
xor
call
mulps
add
fcomp
sarb
sbb
loope
ljmp
inc
and
sbb
add
jmp
jp
orb
loope
sub
outsb
pop
inc
sbb
push
outsl
decl
fwait
sbb
jae
lods
add
xchg
or
dec
jecxz
andb
sbb
in
movsl
insb
or
jbe
out
xchg
jg
jg
push
or
nop
cmc
pop
fistpl
frndint
das
xor
das
test
adc
mov
pop
nop
loop
push
sub
and
ds
mov
ljmp
fs
adc
pushf
pushf
pushf
push
lea
jmp
movl
call
cwtl
pusha
call
pushf
pushf
movl
pushf
push
lea
jo
push
pusha
lea
jmp
pushf
jmp
int
ret
xlat
push
fidivl
pop
dec
push
mov
push
xchg
sahf
imul
adc
ljmp
lahf
sub
daa
or
mov
xchg
pop
fsub
movl
test
mov
xchg
dec
mov
xor
rcrb
cmc
pop
out
ret
lea
dec
or
int3
mov
rclb
shlb
ljmp
iret
out
call
mov
cmp
mov
ljmp
sub
jne
call
add
iret
addr16
adc
cmp
fbld
shlb
push
pushf
test
and
mov
lcall
bnd
cmp
cmpsb
mov
dec
mov
xchg
pop
rcll
sub
xor
rcl
pop
add
outsl
test
push
or
cmp
popf
jl
jmp
insl
ss
aas
jecxz
dec
pushf
movl
mov
lea
jmp
pushl
inc
push
setl
not
mov
jmp
pusha
cmc
or
call
pusha
pusha
lea
jne
add
clc
add
mov
rcr
sub
rcl
mov
stc
cmp
test
bt
sub
bt
bt
cmc
pushl
cmp
pushf
pushl
push
cmp
jmp
pusha
pusha
lea
jae
rcr
rol
mov
sub
jmp
lea
je
pusha
jmp
pusha
pushf
lea
jb
jmp
adc
push
mov
pushf
lea
jae
jmp
pushl
mov
pusha
mov
movl
lea
jmp
mov
cmp
fwait
xchg
mov
jl
sahf
and
int
arpl
cmp
call
pop
mov
mov
shrl
jae
in
aas
test
pusha
pushf
fists
xchg
sub
lea
fisubl
xor
dec
adc
push
inc
mov
clc
cltd
pop
fs
stos
movsl
and
push
push
fstpt
insb
hlt
data16
xor
das
mov
mov
inc
movsl
and
cmp
sti
pop
and
or
ja
repnz
add
enter
repz
push
and
addl
add
loop
stos
sbb
mov
out
add
iret
jmp
cld
mov
icebp
inc
aas
dec
dec
mov
ret
aad
and
xor
push
jle
mov
push
ljmp
scas
imul
out
pop
add
inc
rclb
mov
mov
xor
loop
sub
cmp
stos
add
inc
out
roll
call
add
out
sar
scas
mov
jb
cmp
mov
je
lcall
pushl
popl
movb
pushf
pushl
ret
push
sub
mov
pop
int
fucomp
dec
fisttpl
mov
pusha
or
sub
sub
xchg
mov
push
cmpsl
aas
lret
jp
sar
xchg
inc
cmp
ret
jbe
inc
xor
push
cld
xor
mov
inc
loop
repnz
push
lea
jae
call
jle
add
add
add
imul
add
xchg
add
add
add
add
add
add
add
xchg
sub
add
add
add
add
add
add
add
pushl
add
sub
add
add
add
jns
mov
mov
insl
fsubrp
js
sub
pusha
out
push
cmpsb
jno
mov
mov
test
pop
jnp
hlt
imul
cwtl
cmpsb
mov
mov
xor
push
adc
jmp
daa
xchg
test
jns
mov
int
popa
cli
adc
lods
and
sahf
nop
imul
lcall
ret
pop
ret
jae
push
bt
mov
stc
sub
pushl
pusha
lea
call
jmp
jg
out
leave
outsb
hlt
shr
bound
sbb
data16
adc
dec
fidivs
jmp
pop
adc
dec
xor
jno
sbb
push
inc
mov
movsl
out
outsb
lcall
imul
add
int3
nop
pop
adc
cltd
cmp
xor
mov
mov
mulb
bound
xor
pop
push
sahf
pushl
xorl
xor
repnz
cltd
jo
cwtl
add
ljmp
test
fcompl
mov
cmp
xor
movb
pushl
lea
jmp
cmp
pushf
stc
repnz
push
lea
jmp
pushf
xchg
bswap
seta
mov
not
lea
movw
mov
bswap
not
movl
mov
pop
setno
lea
call
pusha
movl
jmp
lea
call
pushf
lea
jbe
jae
pushf
call
movl
jmp
movl
call
add
push
gs
arpl
fs
je
push
movb
cmp
jmp
push
inc
ret
jmp
sbb
in
jg
lahf
cwtl
outsl
sbb
mov
xchg
pop
push
dec
and
lods
into
inc
shr
dec
sbb
xchg
mov
add
xor
mov
push
andb
insl
and
aam
jl
xlat
scas
pop
rcl
cmpsl
daa
jae
lcall
or
push
mov
lock
xchg
cmp
test
subb
outsb
das
pop
pop
outsb
xchg
pop
mov
dec
inc
or
dec
das
cmp
cmc
shlb
pusha
int
ljmp
mov
pop
push
movw
push
pushl
ret
mov
pushf
call
dec
test
sub
add
sti
sbb
push
fistpl
add
inc
cmp
mov
mov
inc
pushf
mov
test
jb
cltd
push
mov
jle
cltd
fadds
or
iret
mov
mov
jmp
arpl
mov
clc
jbe
pop
lods
and
mov
idiv
dec
loope
cmp
mov
cmpsb
mov
jle
dec
and
xchg
mov
scas
jne
ret
mov
pusha
jmp
bt
cmp
jmp
movl
pushf
lea
jbe
pushf
pushl
popl
pushf
pusha
push
push
pushl
ret
mov
dec
aas
mov
dec
sbb
repnz
inc
or
cs
fisubl
sbb
push
add
fdivrp
inc
xor
nop
test
clc
xor
iret
xchg
dec
es
in
scas
mov
xor
outsb
mov
mov
fwait
sub
adc
mov
cmp
push
jne
aaa
rorl
pop
movsb
mov
xchg
inc
push
in
jge
xorl
fstl
push
incb
iret
in
push
addb
movsl
rolb
and
cmp
repnz
vmaxpd
pop
jmp
lret
int
xchg
xchg
push
sbb
xor
call
test
push
or
pushf
sub
xor
jmp
and
call
xchg
sbb
cmp
insl
inc
orps
or
es
inc
dec
xchg
and
cmp
ljmp
bt
push
movzwl
btc
shl
mov
pushf
movb
clc
add
cmc
pusha
mov
clc
test
pushf
call
or
sbb
mov
sti
dec
pop
lahf
xor
es
push
inc
out
in
add
adc
mov
dec
inc
pushf
and
xchg
pop
cwtl
mov
and
mov
dec
dec
jns
cmp
dec
xchg
mov
jp
mov
aaa
pushf
push
sahf
ret
movsl
scas
ficoml
and
pop
jbe
jne
pop
dec
stc
mov
jo
jecxz
ljmp
or
fists
orb
stos
mov
ljmp
les
push
add
pushf
pusha
jmp
pushl
jmp
cmc
bt
add
bt
call
test
movzwl
dec
shrd
xor
bsr
mov
pushf
test
add
clc
stc
cmc
pushf
mov
stc
clc
bt
movb
test
pushf
lea
je
stc
pusha
stc
push
add
jmp
lret
xchg
test
movsl
les
fcoms
pop
sti
and
test
jp
sub
in
aaa
jmp
inc
add
dec
adc
cmp
popa
orl
popf
or
jno
mov
inc
insl
add
es
das
jno
jno
stos
in
cmpsl
nop
xchg
daa
xchg
adc
inc
leave
lds
out
dec
mov
repz
ljmp
fcomp
rorl
fldcw
lcall
pop
pushf
pusha
lea
ja
test
test
stc
jmp
lods
cltd
bound
add
jecxz
aas
ror
xchg
mov
in
stos
mov
icebp
lock
xchg
mov
int
push
sti
outsl
sbb
sub
push
dec
ret
fs
mov
sbb
repnz
shll
test
pop
testb
pop
add
mov
das
dec
jmp
repnz
add
adcb
repz
test
mov
pop
cmp
and
dec
addb
shrb
aad
icebp
adc
in
popf
ror
shrb
xor
ljmp
dec
cld
movzbw
not
test
sub
bts
or
shr
shld
shr
clc
bt
mov
cmc
bsr
add
clc
add
call
push
lea
jb
call
lea
je
pusha
clc
cmp
push
call
pusha
push
mov
jmp
lea
je
pushf
cmc
test
bt
cmp
lea
pushf
jmp
mov
mov
mov
pushf
pusha
mov
jmp
lea
jae
jmp
not
mov
mov
lea
movsbw
pop
movsbw
jbe
pop
lea
push
mov
push
mov
push
jmp
pushl
lea
je
pusha
stc
pushl
add
pushf
lea
jmp
add
dec
outsl
popa
fs
imul
add
add
jae
icebp
mov
jmp
mov
jmp
pushl
popl
call
jmp
popf
rdtsc
nop
pusha
pushf
movl
pushf
movl
pushl
push
movb
lea
jmp
cld
xchg
push
mov
mov
add
sahf
mov
mov
arpl
nop
outsb
adc
lret
add
add
adc
pop
ss
mov
nop
add
dec
mov
cmp
dec
adc
dec
loop
repnz
push
mov
lea
jo
pusha
pusha
lea
call
pushf
pusha
pushf
lea
jae
call
jl
ljmp
and
xchg
mov
jbe
rorb
movsb
mov
pop
xchg
fs
mov
loop
mov
clc
pop
lds
jbe
xlat
xchg
adcl
and
out
out
ret
mov
ficoml
out
and
jecxz
ficoms
inc
test
ja
stc
xchg
test
mov
push
sti
jb
js
add
push
sbb
pop
push
or
ret
fldenv
movzbl
pushf
movsbw
mov
call
call
lea
and
mov
aaa
push
cmpsl
push
leave
lret
dec
lods
push
adc
pop
or
fdivrs
rorl
cmp
cmc
mov
mov
mov
push
nop
popa
adc
jecxz
dec
pop
cld
push
push
xchg
sub
jo
or
dec
xchg
mov
push
pop
test
dec
cwtl
lret
gs
xchg
jg
cmp
sub
lret
ret
adc
outsb
dec
cli
mov
ret
test
sbb
outsb
std
adc
aaa
add
repnz
cs
lret
insl
adc
xor
pop
ucomiss
push
shl
jmp
lods
sbb
mov
push
jne
jnp
pop
insb
push
mov
mov
sbb
das
xchg
add
je
inc
adc
leave
sub
mov
frstor
rcr
mov
scas
fistl
adc
repz
mov
xor
enter
pop
imul
mov
lret
mov
ret
pop
mov
lds
xor
rcrb
pop
es
ficoml
dec
insb
cmpb
imulb
call
jecxz
push
cmpb
mov
dec
rol
lock
sahf
orl
sahf
sub
mov
dec
icebp
cmpsb
out
sub
into
push
jno
add
add
sbb
popf
out
gs
scas
cs
ficoms
mov
pushl
popl
pushf
pushl
ret
pusha
jmp
pushf
clc
mov
test
call
cmp
pushf
call
sbb
xor
add
int
sti
xor
ror
sub
scas
mov
pusha
xchg
cli
loope
mov
sbb
dec
into
sti
mov
adc
push
imul
and
scas
iret
das
ds
fisubs
aaa
popf
xchg
dec
in
pop
mov
adc
cmc
push
fs
cmpsb
dec
insb
stos
push
push
inc
xor
add
lcall
sahf
xchg
xchg
xchg
dec
mov
das
or
shld
xchg
adc
ljmp
lea
je
bt
pusha
mov
cmp
call
pushl
lea
jae
bsf
shl
jmp
fdivl
sub
jg
lods
and
enter
mov
mov
adc
fidivs
pushf
sbb
fucomip
movsl
repz
rorb
pushf
pop
test
hlt
xor
rcrl
lods
jmp
push
xchg
stos
mov
mov
push
shlb
add
jg
mov
in
adc
jp
jle
ja
lahf
fwait
jne
cmp
test
dec
cmp
mov
push
loop
ljmp
or
add
test
stc
cmp
add
push
pusha
lea
jmp
movb
jmp
jmp
pusha
lea
jae
pushf
lea
jne
jmp
jmp
popf
cmc
and
daa
out
das
inc
dec
movsb
push
push
je
xchg
sbb
sbb
imul
aam
inc
add
jmp
mov
stos
shlb
inc
std
sti
or
jmp
loop
sub
lahf
xchg
inc
into
dec
push
ljmp
pop
bts
mov
bt
cmpb
pushf
lea
jne
bsf
sub
rcr
sbb
mov
neg
test
push
add
shr
cmp
rcl
mov
stc
clc
test
jmp
es
mov
pop
dec
pop
mov
and
insb
mov
outsb
in
mov
adc
add
or
in
mov
mov
cltd
roll
jae
loopne
inc
cmp
jge
jl
mov
push
std
jnp
inc
clc
outsb
jecxz
xchg
in
lods
loop
pushf
jae
adc
sbb
cmpsl
iret
xchg
jne
dec
xchg
adc
push
xor
ja
pop
push
repz
dec
test
or
inc
in
and
movsl
jno
sbbl
mov
or
je
push
inc
jbe
sub
dec
jnp
xor
xchg
xchg
xor
sub
lea
mov
fsubrs
arpl
in
insl
lcall
or
or
pusha
sarl
aas
cmp
insb
adc
inc
mov
sub
dec
int
xor
and
mov
inc
fsts
xor
testb
mov
roll
fucomip
jmp
push
mov
rcr
stos
fldcw
cltd
in
inc
std
xchg
jnp
mov
dec
xchg
cmp
push
ret
cmpsl
in
adc
scas
mov
mov
lahf
stos
aad
mov
cs
dec
cmp
dec
cld
lods
xor
lds
xchg
add
fadds
mov
mov
sub
loopne
xor
mov
ret
testb
adc
add
cmpsb
daa
add
pop
add
fnstcw
cmpsl
adc
test
inc
inc
cli
xor
cmp
and
add
xchg
mov
xor
push
pop
iret
pop
dec
stc
ljmp
dec
clc
pop
in
lods
mov
jbe
dec
icebp
call
mov
add
mov
or
shl
or
mov
data16
dec
outsl
sbb
fcmovne
jl
lods
add
sbb
notb
dec
fsubrl
adc
or
js
addr16
xor
push
scas
pushl
mov
outsb
xchg
push
negb
sti
mov
leave
pop
enter
test
ret
out
adc
xor
mov
rorb
xchg
jb
cld
lods
mov
dec
inc
ss
mov
fs
pusha
sub
cwtl
in
mov
shll
fisttpl
jns
stc
inc
call
or
js
mov
gs
add
std
dec
leave
xlat
cmpsb
das
aaa
mov
cmp
loop
push
mov
push
pop
adc
mov
cmp
in
mov
ret
rcll
xchg
push
cmp
adc
fxch
shll
xchg
ret
fwait
gs
lea
stc
shrd
mov
cmc
bt
pusha
cmc
shr
cmp
clc
cmp
call
mov
bswap
movb
jmp
adc
shld
rcl
mov
cmc
sub
push
clc
pusha
jmp
pusha
cmp
movl
movl
push
lea
jbe
cmp
xadd
sub
bts
jmp
pusha
cwtl
movb
pushf
movzbw
mov
call
sub
cli
adc
fld
movsb
lret
mov
mov
sbb
xor
out
popa
add
jns
push
push
push
jg
push
ds
pop
adc
jg
mov
scas
xchg
imul
cmpsl
lods
push
xchg
jl
push
in
pop
stos
pop
push
dec
rolb
inc
jmp
popa
add
pop
push
popf
jge
push
jg
sub
pushf
xchg
faddl
mov
repz
jns
xchg
or
xor
sti
cltd
into
xchg
mov
lret
sti
push
and
mov
out
cmpsb
xchg
xor
test
lea
pop
ret
mov
push
cmp
cli
push
in
xor
fstps
addr16
xor
cli
inc
adc
xor
xchg
cld
inc
cmp
je
test
les
pop
movsb
pop
pushf
inc
cmp
cmp
adc
push
mov
pop
mov
xchg
aam
jecxz
notb
rcrb
std
jge
mov
aam
inc
and
aad
push
outsb
test
pop
dec
in
and
and
shlb
dec
ljmp
lcall
shr
jnp
add
add
pusha
pusha
pushf
movl
pushf
movl
push
pushf
movl
pushl
push
movw
lea
jmp
cmp
jne
sbb
dec
push
inc
pop
outsl
mov
shlb
lea
push
stos
pop
cli
jbe
ret
out
pop
sub
push
mov
lods
test
mov
sbb
cmp
sub
stos
and
adc
add
iret
arpl
in
dec
sub
mov
icebp
mov
xor
lret
jmp
dec
mov
and
push
push
adc
xor
in
push
pop
sbb
and
cmp
inc
rcl
or
xor
xorl
out
sbb
inc
mov
pop
jnp
pop
test
adc
jbe
stc
mov
aaa
cmp
xchg
mov
bswap
movzbl
movzbw
pushl
popl
bswap
mov
pusha
movl
movsbw
lea
call
bswap
push
pushf
movzbw
lea
lea
lea
movw
pusha
mov
pusha
movl
jmp
sub
xor
outsl
and
cmp
aam
sbb
outsb
inc
jge
or
push
movsl
cmp
push
cmpsl
leave
fisubs
jmp
mov
imul
aad
rcll
lcall
or
mov
imul
xor
inc
rcll
cld
loopne
add
inc
push
aaa
fisubl
jne
push
pop
daa
xchg
jno
ds
gs
aaa
lods
xor
mov
shlb
or
ljmp
adc
sbb
icebp
sub
xor
fsubs
jl
je
stc
cmc
aas
data16
fistl
cltd
popf
mov
stc
std
inc
xor
mov
sub
repnz
outsb
mov
arpl
mov
dec
cld
pushf
sarl
fdivrs
div
cmp
lods
mov
add
jmp
leave
dec
push
pop
movsl
incb
dec
pop
mov
lods
test
in
sbb
dec
imul
mov
ljmp
clc
pushf
stc
cmp
pushf
lea
jb
cmp
call
add
dec
outsl
arpl
inc
jb
add
add
in
adc
lea
push
jmp
neg
cmc
setle
mov
test
jmp
mov
pusha
mov
lea
movsbw
movsbw
call
call
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
sbb
scas
addr16
push
push
arpl
repz
xor
sub
test
dec
ret
scas
lcall
dec
push
push
sbb
mov
loopne
movsb
shll
test
clc
sbb
pop
in
mov
push
jnp
mov
je
sbb
mov
stos
fimull
loopne
cld
lock
xor
cwtl
jl
or
repz
movsl
dec
fcoml
lret
repz
aas
or
jns,pt
inc
enter
popa
cmp
in
mov
dec
test
add
sbb
xor
pusha
jnp
daa
xchg
and
dec
dec
xchg
sahf
mov
icebp
push
jl
and
xchg
popl
or
jl
mov
movsl
push
out
or
in
insb
fxch
pop
ret
lock
and
and
add
xlat
lea
je
jmp
mov
mov
pushl
popl
push
pushl
ret
pushf
mov
push
repnz
pushl
movb
pushf
jmp
aad
xor
push
pop
lods
stc
imul
and
sub
cmpsl
pushf
stc
es
mov
xchg
dec
fs
jge
seto
rcr
popf
outsb
fs
adc
repnz
dec
imul
xorl
fisubs
lea
subb
mov
cmp
rorl
movl
outsl
push
lret
in
int
inc
adc
jl
xor
mov
imul
pushl
popf
outsb
xchg
jno
loopne
inc
or
lea
lret
ret
mov
sub
stos
inc
sbb
inc
jecxz
push
out
sbb
lcall
cs
mov
push
les
gs
pextrw
mov
mov
shrb
test
pop
mov
xor
xchg
dec
ljmp
pushf
lea
jne
cmc
cmc
shl
mov
stc
pushf
cmc
or
jmp
movb
push
call
setl
movzbl
setge
mov
bswap
pushl
movzbl
lea
pushf
pusha
jmp
mov
lea
jne
shr
ror
rcr
sbb
mov
push
pusha
jmp
pushf
test
sub
pushf
call
lea
jne
setp
not
movzbw
movb
cwtl
jmp
xor
inc
push
cmc
mov
mov
stc
or
fwait
pop
pop
ss
cmpsb
jmp
mov
flds
dec
in
jg
or
test
cwtl
jns
cmp
lret
sbb
arpl
push
lock
push
mov
pop
pop
lds
in
pusha
and
and
push
xorb
aad
fs
cmp
or
test
clc
mov
sbbb
mov
ret
push
inc
lret
sahf
pushf
push
mov
lea
jmp
pop
lea
pusha
mov
push
mov
movzbl
pushl
popl
push
pushf
not
mov
call
and
mov
xchg
dec
mov
das
shrb
pop
mov
add
and
mov
lcall
cld
insl
jmp
xchg
aam
sbb
add
adc
adc
mov
ret
jnp
loop
jae
dec
jmp
mov
faddl
dec
cmp
fisttpl
repz
in
push
push
lock
or
jle
aad
fists
or
nop
stc
cmp
fidivl
mov
or
xchg
sub
ja
mov
jl
vmread
ljmp
test
inc
lock
pushf
pusha
movw
lea
jae
adc
or
mov
sbb
jnp
clc
rcr
mov
or
adc
mov
push
call
test
jmp
mov
cmc
cmc
bt
clc
and
bt
stc
cmc
jmp
pusha
push
pusha
movl
mov
mov
movw
movb
lea
jmp
push
push
jp
icebp
or
repz
dec
bound
pop
pop
pop
mov
mov
cmc
int
stos
es
push
fstps
arpl
call
jns
pop
adc
pop
dec
xlat
dec
stos
xor
mov
jle
mov
mov
jg
jo
cmp
jnp
cld
cmpsl
daa
and
add
lods
pusha
xor
frstor
push
mov
and
iret
mov
test
cs
fld
inc
dec
sbb
push
sahf
outsl
push
or
mov
mov
outsw
scas
imul
stos
fsubl
fsubr
in
or
inc
subl
or
mov
out
lcall
imul
xchg
notb
pop
sbb
cmp
lock
sub
lret
mov
jmp
add
dec
out
bound
les
movsb
sbb
insb
ret
mov
pop
ljmp
inc
and
mov
fs
jl
push
pusha
pusha
lea
jmp
pushf
movl
pushf
movl
movw
lea
jmp
and
cmp
insl
dec
popf
pop
cmp
cmp
lea
popf
cld
lea
pop
popf
cmp
popf
sub
lods
popf
pop
jl
cmp
pusha
cld
lea
in
cmp
sub
lea
pop
pusha
lods
cld
fsubl
cld
dec
dec
jl
std
pusha
xor
mov
in
xor
das
call
cmp
cmp
inc
jg
popa
lock
push
xchg
mov
jns
cmp
out
jae
adc
flds
add
out
andps
lahf
and
mov
cmp
aam
pop
mov
xchg
mov
cltd
popl
inc
in
addl
iret
dec
repnz
push
mov
call
mov
test
push
cmp
pop
movsb
push
fimull
xchg
push
push
mov
inc
loopne
fucomip
jns
pop
mov
xchg
imul
pop
xor
inc
fmulp
push
testl
jo
xor
xchg
add
pop
pop
bound
jg
pushl
setnp
mov
movb
pushf
pushf
call
lea
ja
jmp
setp
push
inc
inc
not
jmp
mov
jmp
or
shrb
or
bound
dec
insb
leave
orb
xchg
in
mov
out
test
sti
mov
cmp
dec
xchg
adc
cmp
test
cmp
nop
lock
dec
and
daa
cmp
aaa
pushl
in
fisubrl
rorl
fildll
std
pushf
popa
push
shrl
rolb
xchg
imul
xor
in
ja
mov
not
cwtl
push
sbb
pop
sub
sbb
sub
cmp
mov
pop
cmp
push
loopne
dec
xchg
sub
in
incb
icebp
in
sub
mov
movsb
addr16
call
cmp
and
out
dec
pusha
sbb
lods
fwait
dec
popa
pushl
jge
xchg
ja
ss
push
push
fsts
add
push
adcb
ljmp
mov
out
stc
aaa
inc
fdivr
lods
sar
adc
pop
pop
out
mov
enter
pop
stos
push
cmp
test
pop
or
aam
data16
mov
pop
rcrl
dec
push
dec
push
ror
cmp
imul
jle
mov
xor
gs
movsb
sub
imul
xchg
shr
repnz
sub
cmp
mov
test
dec
orb
sub
mov
addr16
push
push
loope
mov
or
scas
fcompl
sub
arpl
ret
or
push
cmp
mov
sahf
shrl
stc
mov
mov
popa
je
push
xor
ret
dec
push
pop
adc
gs
pop
int3
aam
pop
jbe
mov
push
jg
pop
outsb
xchg
js
fstl
pushf
or
pop
out
mov
ret
pusha
pop
xor
dec
inc
dec
xor
cs
insb
add
mov
add
movl
pusha
lea
jmp
pushf
call
movsbl
mov
bound
or
scas
mov
sbb
shrl
repz
mov
add
loope
frstor
mov
add
ret
fisttps
adc
daa
or
cmp
push
inc
cmp
lds
jno
jg
lret
clc
mov
dec
sbb
add
daa
lock
jae
jp
add
lods
push
sub
jl
ljmp
cld
push
add
call
lea
je
bt
pushf
sub
stc
cmc
cmp
push
lea
ja
pushf
bt
imul
add
test
add
pushf
lea
jmp
iret
xchg
lods
xchg
adc
xchg
out
cmp
ds
or
or
je
or
add
or
sub
pop
push
in
lods
xchg
mov
push
nop
pop
push
fnsave
popf
lea
enter
push
mov
cmp
leave
dec
xchg
out
fisttpll
sub
dec
out
int
and
pop
loop
ds
push
incb
add
ljmp
cs
jmp
sub
lea
jae
adc
bt
bts
mov
sbb
bsf
mov
rol
bsf
mov
stc
cmp
cmc
jmp
mov
pushf
pusha
pushl
ret
and
cmp
popf
dec
sub
lea
xor
lods
sub
lea
pusha
lods
popf
pop
jl
cmp
pusha
cld
lea
in
cmp
sub
lea
pop
pusha
lods
cld
fsubl
cld
dec
dec
jl
std
pusha
xor
mov
cs
lret
mov
mov
scas
mov
mov
jb
sbb
cmc
fsubrp
jp
add
sub
jp
or
dec
xchg
push
popf
mov
mov
mov
mov
fdivl
popf
mov
and
adc
ss
inc
pop
pop
daa
cmp
push
ret
int3
mov
cltd
pop
icebp
cmp
xchg
aad
ljmp
div
sahf
and
or
push
xchg
stos
cmp
popa
inc
test
mov
mov
lcall
ret
andb
mul
dec
dec
jl
jo
mov
dec
add
rcll
jns
mov
shll
dec
xor
stc
ret
ret
ss
pop
mov
mov
xchg
pusha
aam
or
mov
ja
mov
xchg
jnp
icebp
lcall
call
xchg
scas
sbb
arpl
notb
mov
add
or
divb
cltd
outsb
cmp
adc
movl
mov
stc
push
test
lea
bound
cmpb
cwtl
push
sti
and
push
sahf
stos
pop
loope
adc
scas
test
lock
push
jp
xor
add
cmp
out
add
mov
mov
mov
jns
cmp
cs
test
adc
push
mov
cmp
mov
mov
cmp
rorl
lea
xor
sbbl
insl
push
and
lock
out
lret
cmp
inc
push
push
jle
push
xlat
mov
ljmp
inc
and
mov
mov
lea
je
pushf
pushl
push
pusha
lea
jmp
sub
cmp
cmp
neg
stc
cmc
bt
stc
sub
clc
jmp
add
add
shr
pushf
mov
rcl
cmp
mov
aaa
test
test
daa
sub
shrd
push
lahf
push
or
aam
push
cmp
pushf
not
xor
pop
lea
pusha
mov
pushf
pusha
call
mov
pusha
adc
lea
cmc
mov
adc
shrd
add
btc
neg
sar
xor
shr
not
cmc
shld
mov
movzbl
pusha
test
add
add
pop
bswap
movzbw
mov
call
adc
mov
add
push
sub
xchg
xor
insb
dec
inc
lret
push
stc
jmp
mov
cwtl
xchg
inc
outsl
mov
insl
and
inc
pusha
and
and
insl
imul
add
test
gs
xchg
cmp
and
xchg
popa
xor
pop
dec
xchg
push
or
add
xor
xchg
xorb
shrb
push
inc
jg
ljmp
mov
add
mov
call
mov
mov
pop
scas
dec
push
sbb
aad
mov
mov
test
sub
dec
cmpsb
sub
lahf
std
jno
addl
mov
fnstsw
cli
lahf
xchg
je
sbbb
dec
nop
mov
and
pop
ljmp
bt
xor
cmp
pushw
popfw
call
jmp
push
movb
lea
jae
jmp
pushf
add
call
lea
jae
clc
pusha
xor
pusha
pushl
pushf
lea
call
push
lea
jae
pushf
jmp
call
aam
popl
push
pop
mov
scas
in
test
je
jbe
xchg
clc
cld
add
lahf
test
loop
xchg
cmp
movsl
mov
test
stos
jbe
andb
nop
iret
adc
lock
push
sub
jp
xchg
mov
outsb
adc
test
test
rorl
outsb
push
dec
cmpsb
outsb
mov
mov
stc
imul
mov
jae
xor
mov
nop
xchg
xor
lock
jge
inc
dec
cmc
inc
xchg
xchg
addr16
jns
sbb
and
out
or
adc
xlat
push
inc
cwtl
xchg
inc
in
mov
sub
mov
fsubr
cmpsb
fildll
fiaddl
sub
inc
push
dec
xlat
ss
dec
add
sub
cmp
add
xchg
addr16
push
cli
insl
push
jo
test
andl
mov
test
jae
push
ljmp
btc
test
mov
sbb
pushf
sub
mov
pushf
stc
pushf
repnz
pushf
call
lea
je
bt
sub
clc
cmp
pusha
lea
ja
call
push
xor
test
repnz
pushf
pushf
lea
jne
bswap
mov
adc
sub
bsr
mov
mov
cmp
cmp
sub
stc
call
lea
jmp
jmp
gs
mov
push
mov
iret
into
popl
add
inc
nop
or
mov
xor
mov
push
xchg
popa
or
stos
lock
mov
xor
hlt
aad
incl
cmp
ljmp
sbbl
add
jmp
and
mov
add
sub
shrd
mov
clc
sub
cmp
test
pushl
pusha
cmc
cmp
cmp
jmp
movw
movl
lea
jnp
push
push
movl
pushl
pushf
pushf
lea
jmp
add
inc
gs
outsl
fs
gs
imul
add
push
pop
add
cmc
add
test
pushf
clc
test
movw
lea
jne
push
pusha
mov
pushf
call
setp
movl
setl
movzbw
push
lea
pusha
pushl
jmp
pushf
xchg
pusha
call
bound
lods
xor
or
add
inc
divb
bnd
test
xchg
xchg
jle
mov
and
inc
pop
sbb
cmpsl
sarb
mov
and
mov
push
jno
es
fistl
pusha
mov
loopne
pop
xor
dec
or
mov
scas
mov
dec
pop
leave
push
inc
addr16
test
das
push
stos
call
cmpsl
enter
inc
push
inc
das
in
negl
lret
mov
ret
enter
and
add
mov
sbb
adc
jmp
decl
rcll
dec
je
push
inc
scas
jge
rcrl
xor
je
push
inc
in
add
test
cmpsb
nop
and
inc
stos
push
add
push
cld
pushf
add
out
fs
sti
jp
scas
dec
xor
test
cmp
cmp
add
jle
add
clc
cmc
pushf
clc
ror
push
call
mov
call
lea
jne
rcr
jmp
jmp
jmp
cmp
jmp
in
push
sub
pop
or
dec
xchg
inc
insb
jae
lahf
sahf
mov
mov
and
out
lret
push
cmp
cmp
outsl
adc
loope
cmp
clc
or
stos
jl
popf
sbb
xchg
sbbb
mov
mov
roll
push
mov
pop
ret
cmp
mov
add
ljmp
fbld
popa
mov
in
push
adc
and
xor
xchg
je
jmp
mov
test
inc
insl
scas
dec
repz
jle
call
pop
dec
jnp
stos
mov
ret
mov
push
cmp
ret
insb
sub
dec
sub
clc
and
cli
dec
fnstsw
add
push
les
and
lds
enter
sub
test
pop
lds
cmpsb
mov
fs
fsubr
mov
sbb
movaps
shll
das
cmp
bound
push
in
cmp
in
pop
inc
inc
pop
inc
arpl
mov
lds
ja
and
inc
xchg
xchg
or
cmp
sub
iret
pushf
int3
addr16
mov
sbb
ret
jp
int
mov
subl
cmc
mov
fwait
insb
ror
adc
leave
stc
dec
add
lahf
mov
test
rorb
repnz
mov
mov
aad
dec
out
sbb
stc
bound
xlat
push
aam
andb
mov
xor
getsec
data16
pop
mov
mov
jb
inc
imul
test
pop
inc
fbstp
int3
gs
inc
nop
pop
inc
pop
mov
sarl
sub
cmp
outsl
les
stos
sbb
ds
fcoml
mov
jl
or
pop
dec
cld
enter
ljmp
ljmp
cmp
pop
and
in
sub
stos
mov
ds
jo
test
sub
xor
mov
push
faddl
inc
sahf
rcrb
popa
adc
xchg
mov
push
rcrb
adc
inc
add
repnz
mov
jbe
ja
xor
addl
mov
and
mov
sbb
out
ljmp
in
mov
mov
push
rcl
add
sub
js
jle
xor
sub
mov
inc
cmp
repz
jae
int3
cmpl
add
push
lcall
adc
inc
loop
sub
push
pop
xchg
and
andb
fistpl
pop
inc
cmp
pop
push
dec
push
dec
xlat
scas
mov
inc
xchg
pop
mov
and
inc
std
xchg
pusha
scas
xor
rcrb
jns
mov
repnz
mov
or
repz
jbe
pop
lock
shlb
pop
mov
mov
mov
xlat
xlat
mov
addb
dec
mov
outsb
test
jb
jmp
faddl
push
or
outsb
xchg
daa
dec
cld
cli
prefetch
or
jmp
inc
dec
dec
scas
lods
in
push
in
repnz
push
add
adc
mov
lahf
dec
push
jmp
mov
sahf
push
sbb
pop
adc
inc
ja
incb
jle
lret
adc
sarl
mov
cmp
fwait
add
scas
shrb
lds
ljmp
mov
sub
in
cmp
outsl
rcl
ljmp
lea
mov
scas
inc
pushf
xorb
insb
xchg
jo
jbe
cmpsl
ljmp
lea
in
fcompl
std
cmp
jbe
in
push
dec
lahf
adc
jae
add
cmp
inc
lock
push
icebp
jns
mov
inc
ficoms
stos
mov
mov
int3
add
jb
lods
xor
aaa
lods
repz
xor
pop
sbb
mov
cmp
dec
lret
jbe
repnz
or
fbld
adc
dec
add
inc
fsub
in
and
outsb
cs
daa
js
cltd
mov
inc
adc
pop
mov
sub
shlb
fidivl
shlb
jecxz
fimuls
xchg
xor
pop
loopne
shll
sub
push
aam
mov
ret
mov
add
pushl
movl
movw
push
movl
pusha
mov
lea
jmp
pushf
lea
ja
stc
pushf
sub
cmp
mov
lea
add
pusha
push
movw
pusha
lea
jmp
shr
mov
stc
pusha
call
call
pushf
push
pushf
adc
push
lea
jae
jmp
call
lea
je
cmc
add
test
stc
cmp
pushf
pusha
push
pushf
lea
jb
test
pushf
bt
cmp
pusha
push
call
mov
out
xor
bound
jnp
xchg
das
in
push
xor
in
sub
fdivr
outsl
jmp
insl
jno
stc
jae
push
mov
xor
inc
cmp
sti
outsb
jne
mov
rcl
mov
fsubl
cs
xor
pop
iret
inc
pop
test
pop
xchg
xor
and
add
or
rolb
test
repz
xchg
mov
loope
jb
jp
pop
fcoms
mov
fcom
xchg
ret
pop
out
outsb
push
add
call
jmp
push
mov
cmp
sbb
or
adc
mov
imul
push
xor
test
add
pop
ja
add
mov
jge
cmc
mov
cltd
fmull
xlat
ficoml
rclb
lods
sub
popa
jno
jb
or
pop
cmp
push
sti
pop
pop
das
stos
mov
jns
push
mov
jmp
imul
pushl
movsb
outsb
xchg
mov
and
lret
out
imul
add
jno
cli
jg
xlat
jmp
mov
icebp
pop
setp
call
sub
test
call
movl
jmp
mov
loop
pop
rcl
popf
outsb
adc
jae
mov
pushf
adc
outsl
jg
dec
pop
pop
or
xchg
cmp
mov
ret
sub
fdivrs
mov
or
aas
imull
mov
mov
shr
mov
xor
ljmp
dec
mov
adc
mov
aas
cmc
lods
push
xor
call
shl
xchg
lcall
push
pop
pusha
stos
mov
sbbb
lret
mov
rep
dec
fxtract
aas
testb
test
xor
mov
test
enter
xor
ljmp
cld
cmp
test
push
lea
je
bt
call
jmp
add
test
bt
movzwl
call
shr
sub
shl
rol
adc
or
xor
pusha
sets
call
test
movzwl
shr
bswap
clc
mov
jmp
pop
mov
js
int
repz
inc
leave
rol
xor
outsb
outsl
jae
mov
inc
outsl
leave
jecxz
into
dec
enter
in
push
aas
inc
xchg
or
das
cmp
jae
mov
sbb
or
xor
mov
test
pop
fstp
lahf
aad
scas
lcall
lock
ljmp
hlt
adc
jmp
and
sub
xchg
or
test
cmp
xor
ret
mov
add
pusha
pushf
push
pushf
movl
pushf
pushf
mov
movb
push
pushl
ret
jmp
movzbw
mov
call
imul
pop
in
cmp
mov
out
cwtl
xchg
cwtl
addr16
cli
add
in
fisubl
imul
fwait
ljmp
add
out
in
mov
add
inc
shl
mov
add
mull
repz
popf
cmp
aaa
sub
sub
dec
ret
incb
xor
fs
xchg
cmc
mov
aas
jb
sub
outsb
fcoms
sarb
mov
fwait
insb
lret
pop
pop
les
xlat
pop
mov
pop
addl
inc
or
push
addr16
ret
shll
dec
add
sub
call
out
dec
inc
cmpsl
pop
cmpsb
call
mov
adc
dec
test
mov
inc
dec
cmp
jg
andb
add
inc
jo
add
lods
cwtl
pop
fists
enter
adc
sti
addr16
je
stos
in
ljmp
mov
and
push
fs
mov
inc
sbb
shrw
xchg
mov
inc
clc
mov
loopne
lcall
fsubrl
dec
jmp
ja
shrl
clc
iret
inc
pop
addr16
mov
testb
call
mov
xor
fldl
adc
ret
int
sbb
dec
loopne
sub
cwtl
push
pop
hlt
hlt
fisubrl
fdivrl
scas
in
mov
aad
push
cmpsl
sub
lret
adc
jbe
and
pop
adc
out
mov
jge
bound
xor
hlt
pop
negl
das
pop
es
and
jae
add
mov
mov
es
aaa
imul
shrl
cld
dec
stos
fcomps
xor
pop
lock
std
xor
dec
push
cmp
pop
push
mov
pop
sarb
push
fnstsw
jmp
push
sub
mov
jmp
sub
je
push
enter
mov
xorb
jno
mov
or
ljmp
je
xor
shrl
icebp
pop
test
hlt
int3
jge
adc
nop
dec
pop
cmp
sbb
mov
inc
lahf
shl
mov
jl
test
mov
dec
mov
xchg
inc
subl
mov
dec
inc
fwait
pop
jnp
sub
loope
fmul
add
xorb
mov
mov
mov
mov
mov
das
test
out
hlt
test
loope
loop
add
or
rolb
or
decl
in
or
data16
pop
lds
xchg
push
lds
push
pmaxub
inc
ljmp
lods
test
dec
or
lds
outsb
jl
mov
dec
out
fbld
je
pop
stos
jle
icebp
adc
lahf
xor
and
testb
cmp
cmpsl
js
fisttpll
mov
scas
push
mov
mov
add
pop
xchg
mov
jno
mov
addl
dec
out
pop
rorl
adc
adc
lock
and
add
inc
mov
jo
les
adc
xlat
lahf
lds
mov
cltd
lods
push
pop
mov
sub
pop
inc
je
sbb
jmp
dec
lret
xor
adc
mov
sbb
les
sbb
mov
sbb
and
repnz
call
inc
addr16
nop
jo
or
xchg
xchg
cmp
testl
fisttps
fmull
lret
pop
and
and
dec
fcomps
outsl
lret
inc
in
test
xchg
cli
mov
xor
add
sbb
enter
test
pusha
or
addb
jl
nop
fcoml
loope
mov
xor
outsl
aaa
pop
dec
mov
mov
insl
testb
adc
cmp
jecxz
in
loope
js
and
ljmp
pop
popa
lcall
cmc
addr16
in
cmpsl
or
push
inc
sarb
push
fsub
jne
sahf
xchg
mov
pop
cmc
ljmp
rorb
inc
fs
dec
fimull
test
loopne
nop
sub
test
std
inc
and
testb
inc
inc
nop
jmp
dec
or
dec
into
insl
mov
out
repz
dec
arpl
repnz
sbb
std
xor
jne
cmpb
adc
inc
shlb
dec
jno
and
or
mov
cmp
sub
jl
outsl
sti
je
push
dec
imulb
sbb
lock
mov
out
mov
push
and
push
mov
shl
xchg
pop
push
mov
adc
mov
outsl
loopnew
mov
lahf
pop
fbld
hlt
adc
in
jae
clc
mov
shlb
sub
or
sub
cmp
push
sub
pushf
mov
adc
push
sbb
fmuls
int3
xchg
cmp
dec
fnstcw
lret
lcall
push
mov
mov
aad
mov
test
outsb
add
mov
in
jge
sub
jg
pop
js
cld
roll
aas
xor
clc
and
sbb
jno
mov
sub
fisttpl
or
test
outsb
xor
jae
sbb
push
sbb
bound
mov
sbb
adc
inc
popf
ds
pushf
push
fs
and
fldt
xor
push
imul
mov
stos
adc
cltd
in
aas
inc
xchg
or
push
inc
pop
push
mov
sub
inc
in
in
inc
inc
adc
add
sbb
les
add
add
mov
lret
into
aam
loopne
fstps
jne
pop
and
jb
mov
pop
jnp
jne
and
iret
icebp
cmc
adc
ljmp
dec
inc
fisttps
subl
and
sub
ljmp
inc
rclb
inc
dec
into
inc
sbbl
jno
mov
hlt
nop
ljmp
test
sub
pop
jge
data16
movsl
adc
out
jmp
lret
add
lock
add
xchg
dec
cli
aam
fsubrl
add
ljmp
in
push
lret
lcall
in
andb
outsl
sbb
mov
shlb
out
in
add
mov
adc
push
sub
mov
jbe
popf
fcompl
dec
fists
ss
psrld
shrl
jae
lock
popa
pusha
jo
ret
pop
addr16
pop
mov
jmp
testl
pop
adc
ret
mov
mov
jmp
pop
out
sub
push
sbb
cmp
popf
jb
pusha
sti
sbb
or
out
in
loop
fsubr
les
xchg
mov
inc
ret
ss
pop
enter
stos
in
and
jmp
stc
jbe
fisttpll
xchg
ret
fsubrl
mov
filds
sarl
out
in
ret
push
dec
sbb
pop
add
scas
out
push
sbb
outsl
inc
lahf
push
inc
xor
push
add
aam
push
int
imul
and
cmp
sbb
pop
cld
sbb
sti
stc
or
jo
daa
ret
xor
ror
sub
and
das
cmp
bound
popa
ficoms
inc
or
movsb
arpl
fists
xlat
fdivs
or
adc
jne
add
icebp
ret
mov
scas
dec
imul
pushf
sub
fcomps
popa
cltd
inc
fwait
cwtl
xor
ljmp
jo
incl
pusha
cmc
bt
mov
pusha
jmp
push
push
lea
call
call
fnstsw
mov
xor
aaa
in
lret
repnz
mov
jno
jno
and
add
jne
push
adc
icebp
pusha
mov
pop
das
mov
inc
in
imull
fcompp
mov
ret
pop
fs
sub
cmc
icebp
hlt
decl
cli
sub
xchg
pop
mov
cld
jbe
push
pop
imul
rolb
cmpb
add
fiaddl
inc
sbb
and
movsb
idivb
sbb
xor
fsub
push
mov
loope
lret
inc
push
push
dec
xchg
sbb
jge
fmulp
sub
add
lea
jmp
rcrl
fwait
jle
dec
imul
out
out
out
pop
or
in
mov
inc
leave
xorl
shlb
bound
dec
inc
mov
mov
cmpsb
fnstcw
mov
sub
mov
or
cmpb
or
push
jnp
inc
cmp
adc
test
sub
sbb
movsl
data16
shll
ljmp
cltd
sub
fisubl
and
test
jl
push
jno
cs
fdivs
test
faddp
and
push
ret
jp
xchg
movsl
loop
sbb
ret
mov
push
mov
mov
add
test
push
add
lahf
mov
pusha
pusha
pushf
push
lea
jmp
lea
jne
sar
shr
mov
cmp
add
bt
movzwl
shrd
btr
pusha
mov
call
cmp
pusha
jmp
sub
pushf
sub
je
add
clc
jmp
testl
mov
or
dec
cmp
mov
pop
lret
ret
icebp
fwait
jp
stc
sti
rcrb
push
xor
mov
cmpsl
aam
pop
lahf
fdivrl
push
jg
lock
daa
mov
daa
mov
adc
pop
sbb
repnz
xor
jo
mov
pop
mul
inc
sbb
inc
push
xor
pusha
repnz
pushl
pusha
lea
jnp
jne
bt
cmc
neg
mov
stc
pusha
pushf
sub
pushf
shl
stc
lea
cmp
sub
test
pushf
test
bt
pushl
popl
clc
cmc
stc
push
cmp
pushl
lea
ja
bt
sub
bt
and
add
lea
not
lea
mov
setne
mov
call
call
mov
xor
clc
stc
test
shr
call
lret
cmc
int3
les
sub
nop
xchg
fmulp
pop
cmovle
fdiv
cmp
movsb
lods
jns
pop
sarl
roll
sub
outsb
mov
xchg
push
xlat
repz
daa
adc
jo
cmp
xchg
dec
out
cmp
data16
mov
pop
dec
cwtl
inc
ss
fcompl
jmp
push
xorl
inc
movsb
out
or
xchg
ret
xor
push
lcall
lret
iret
sbb
ja
ljmp
ret
fs
inc
popa
data16
ljmp
lea
jae
cmc
pushf
xor
mov
pusha
pushf
movb
lea
call
push
pushf
call
pop
and
frstor
movl
adc
jb
add
jge
ds
or
imul
pop
call
fwait
loope
xchg
cmp
fildl
mov
xor
add
mov
ret
scas
decl
jmp
mov
jge
dec
es
repz
int
lea
lret
imul
mov
mov
and
mov
pop
loop
xchg
sbb
in
mov
pop
dec
ss
into
pop
int
adc
and
sub
hlt
icebp
jno
xor
push
jg
jl
add
popf
call
add
in
mov
out
mov
mov
mov
xor
call
mov
into
test
iret
js
arpl
push
test
push
les
mov
xor
ret
lods
aas
push
sub
add
add
or
fdivrl
ljmp
mov
incl
int3
lret
data16
sbb
mov
inc
inc
push
ret
popf
xor
and
enter
inc
jb
xchg
jnp
fistpl
outsb
lret
lock
mov
fistpl
cmp
dec
sti
inc
add
xor
pop
rcll
jge,pn
xor
mov
mov
dec
push
dec
lahf
bswap
mov
jmp
in
popa
imul
pop
outsb
enter
xor
add
cmpsb
mov
pop
js
call
call
xor
in
lods
sbb
negb
scas
lea
and
cmp
push
loopne
in
mov
push
rorl
push
fbld
xchg
inc
mov
fiadds
sbb
or
cmp
cmp
notb
cmp
outsb
loope
jo
xlat
sbb
mov
or
xchg
outsb
xchg
lcall
sub
pop
xor
fnstcw
ljmp
sti
add
mov
pusha
lea
je
clc
stc
push
mov
cmp
pushf
lea
je
pushf
lea
jmp
lea
call
call
sbb
movsb
mov
sahf
enter
jl
imul
xchg
dec
pushf
push
cmpsl
fsubs
cmp
push
call
sbb
mov
notl
mov
adc
shl
iret
inc
sahf
add
enter
fucom
and
or
sub
xor
scas
cmp
out
and
cld
jl
cmp
lahf
out
push
sub
out
adc
jne
add
stc
jl
bound
loope
xchg
adc
mov
sub
ss
or
adc
or
divl
xchg
xor
std
addr16
pop
test
imul
adc
out
xchg
mov
sub
orl
mov
ja
mov
mov
and
imul
mov
mov
icebp
mov
enter
cltd
gs
cmc
inc
ss
add
xchg
xor
hlt
and
lret
mov
mov
cmp
enter
fnstsw
divb
push
cmpb
cmp
xor
rolb
xor
insb
inc
lds
ljmp
sbb
add
jb
push
lahf
loopne
fs
lcall
dec
in
ja
test
incl
stos
adc
dec
push
xchg
push
pop
cli
out
sbb
inc
les
push
jecxz
popl
or
sar
jl
jge
or
cwtl
iret
cli
mov
cmpb
push
jo
mov
push
pop
cld
arpl
inc
adcl
cs
dec
push
sub
sbb
jecxz
mov
push
pop
into
ret
outsb
pushf
and
xor
mov
test
push
movsb
mov
lahf
sbb
mov
shr
sbb
push
shll
in
out
xor
push
cmp
sub
adc
outsl
pop
jbe
dec
or
dec
rclb
aas
shrb
pop
pop
dec
dec
lret
data16
stos
enter
sub
int3
les
pusha
mov
adc
cs
jmp
je
pop
mov
or
add
mov
sti
out
push
jbe
dec
xor
iret
cltd
das
mov
mov
in
sti
mov
inc
sub
sub
arpl
cmp
in
cmp
jnp
add
xchg
ret
mov
push
mov
shlb
movsb
movsl
jl
js
imul
imul
insb
test
call
mov
out
aam
ljmp
bt
test
cmp
push
pushf
pushf
pusha
lea
jb
bt
pusha
cmp
call
pushl
pushl
push
movl
pushf
movl
push
pushf
mov
lea
jmp
btr
inc
mov
test
clc
bt
add
cmp
call
push
dec
mov
aad
xor
push
pop
push
add
dec
cmp
fs
jns
notl
mov
shl
fwait
dec
test
xchg
adc
bound
and
inc
in
fwait
adc
push
mov
pop
popf
ljmp
fidivl
dec
pop
sbb
mov
mov
and
stos
insl
ljmp
jmp
fs
jb
pushf
call
lea
jbe
and
sub
rcr
btr
mov
shl
adc
xchg
sub
mov
movsbw
dec
shl
add
sub
sar
shr
xchg
cmc
movzbw
sub
mov
btr
shl
bts
rol
add
lea
bswap
pusha
mov
pusha
call
push
repz
rcrb
push
and
adcb
or
dec
pop
sub
hlt
cld
pushf
xor
push
sbb
mov
xchg
dec
ja
sbb
inc
int3
or
out
out
push
pushf
pop
stos
jmp
repnz
prefetch
or
inc
sub
enter
lods
fistpl
shrb
in
mov
mov
into
pop
xor
lock
pop
jns
fwait
and
jl
fiaddl
xor
leave
push
test
test
dec
lret
arpl
cwtl
xchg
bound
leave
or
mov
jb
popa
inc
out
inc
aas
mov
int3
cmpsl
jge
call
outsb
xchg
incb
jmp
push
scas
push
add
fiadds
pushf
loope
push
int
pop
add
call
xlat
adc
xchg
test
shll
popf
dec
and
inc
jl
inc
icebp
dec
push
test
ret
repz
xor
inc
or
push
jp
mov
rcr
repz
scas
das
int3
adc
dec
push
cmp
mov
mov
movsl
pusha
outsb
mov
jae
jns
mov
addr16
mov
add
mov
mov
out
mov
mov
ret
sbb
or
ljmp
into
push
add
push
lea
jae
pushf
push
lea
jne
pusha
stos
movw
push
lea
jmp
in
rorb
lods
ret
mov
sbb
insl
xchg
inc
mov
shll
and
sub
mov
xchg
rclb
pushf
push
out
ret
dec
lcall
and
sbb
mov
and
stos
arpl
in
iret
iret
sub
mov
cltd
jns
popf
adc
orl
lock
cmp
push
insb
stc
stos
out
iret
sti
adc
lcall
mov
ljmp
mov
btr
mov
lea
movsbw
shld
mov
bts
shr
sbb
sub
mov
pusha
xor
mov
test
repnz
pushl
call
repnz
cld
sub
int
sub
cmp
dec
popf
dec
pusha
xor
mov
push
movl
lea
jmp
cmpb
push
pusha
jmp
push
pushf
pushl
lea
call
push
call
call
push
pushl
jmp
or
add
int3
bound
cmp
loopne,pt
iret
repz
ficompl
mov
jae
shlb
sbb
idivl
dec
jle
orl
icebp
mov
jmp
mov
cmp
cld
in
sarb
into
pop
sahf
push
jno
and
pop
cmc
mov
mov
and
call
movl
pusha
lea
jmp
mov
xor
sub
cmp
sub
out
test
enter
sub
mov
imul
fucom
jp
jns
aad
inc
mov
push
xchg
mov
pusha
lods
cwtl
in
and
cli
inc
pop
cmc
xor
hlt
repnz
xorl
clc
adc
hlt
jne
sub
cmpsb
out
and
cmpb
xchg
sbb
aad
sbb
xlat
mov
ret
cs
pusha
pusha
lea
je
movsbw
add
bsr
sub
movzbw
bts
mov
inc
shr
bsr
jmp
lea
jg
pusha
lea
call
call
cli
roll
inc
std
lahf
add
pop
and
dec
jmp
add
mov
lock
fdivl
mov
mov
fnstenv
jo
adc
xchg
xor
mov
xorb
stc
inc
rorb
icebp
inc
fldl
mov
mov
call
shr
add
add
test
adc
add
sub
inc
or
and
jmp
call
add
in
shrl
pusha
pop
dec
lret
aam
aad
xor
cmp
lahf
and
pushl
js
xchg
mov
popa
nop
sub
xlat
loopne
pop
dec
nop
iret
xlat
ljmp
jp
movsb
mov
mov
fwait
pop
rclb
adc
aad
popa
or
pop
pop
aaa
push
test
mov
mov
insl
sub
js
and
mov
jp
inc
mov
xor
aam
btc
xchg
bsr
mov
test
shl
call
mov
push
adc
pusha
call
push
call
push
movl
push
push
lea
jmp
neg
clc
sub
pushf
rcl
call
test
insb
insb
or
adc
mov
lcall
mov
push
stos
call
jecxz
fs
and
jno
and
fldt
insl
cmpsb
jo
jns
cmp
mov
lea
sub
mov
das
lret
jge
out
pop
into
ljmp
pop
and
pushf
call
lea
ret
add
adc
cmp
addb
mov
jns
push
sbb
lea
push
xor
lret
xchg
adc
adc
insb
inc
dec
cmpsl
lahf
out
bound
cltd
xchg
in
movsl
mov
sbb
mov
cmp
mov
mov
pop
dec
pop
xchg
aam
inc
dec
scas
insl
es
push
sahf
cmpsl
mov
ljmp
push
aad
sbb
rcr
cli
movl
cmc
push
imul
in
dec
pop
push
ror
pop
fldt
jne
push
jmp
pop
sbbb
jnp
pop
lods
and
outsb
sbb
inc
je
and
mov
insl
data16
out
mov
lret
mov
add
outsb
imul
inc
and
dec
pop
xchg
fisubrl
xchg
fnstcw
mov
test
dec
adc
xchg
mov
and
xchg
or
lahf
shrl
mov
xor
inc
mov
repnz
insl
pop
iret
scas
push
adc
movsb
mov
mov
adc
and
fldl
daa
mov
adc
rclb
sub
mov
pop
jecxz
inc
movsl
mov
mov
push
add
ret
inc
lds
fs
jb
bt
clc
cmp
jmp
jmp
add
cmp
add
add
add
ret
add
add
add
lods
push
add
dec
mov
add
add
add
or
add
push
mov
add
add
add
lock
add
jl
add
pop
mov
add
add
add
lods
push
add
pusha
mov
add
add
add
ret
add
add
add
xor
cmp
pushf
lea
jb
stc
stc
cmp
call
sub
pusha
bt
call
adc
inc
rcl
mov
cmc
push
mov
cmp
pushf
call
mov
test
call
pushf
cmp
xor
stc
test
stc
movw
add
clc
ror
movb
test
bt
add
call
push
movb
lea
je
pushf
push
jmp
push
jmp
cmp
mov
insl
mov
pop
lds
jp
mov
inc
scas
xchg
cli
mov
ss
mov
out
inc
data16
cmpsl
gs
mov
loope
inc
dec
test
push
je
or
dec
push
push
leave
cmp
movsl
push
mov
cmp
mov
insl
fwait
nop
in
aam
inc
inc
sbb
rclb
sbb
sbb
mov
add
mov
mov
fucomip
inc
outsb
data16
mov
dec
sbb
idiv
mov
pop
fmuls
nop
pop
and
xor
or
sbb
xor
xchg
push
xchg
cmpsb
ror
outsb
data16
cmpl
mov
pushf
sbb
sub
scas
pop
pop
call
fsubs
dec
lcall
dec
xor
sbb
leave
dec
cwtl
insl
xor
fadd
and
shr
ret
adc
sbb
mov
je
mov
icebp
push
dec
pusha
aas
lods
mov
push
popa
out
jno
sbb
pop
push
and
sbb
add
scas
pop
pop
outsb
outsl
push
sbb
sbb
ret
mov
arpl
inc
fildl
or
jnp
push
cwtl
mov
push
lods
push
sub
sub
jae
movsl
push
sbbb
and
lds
mov
push
xor
andb
lock
and
loopne
pop
jg
test
pusha
out
int3
enter
sub
cmpsb
leave
lret
int
cmpsb
lods
cmpsb
lret
lcall
jnp
xor
cmp
xchg
xor
popa
leave
mov
outsl
and
movsb
mulb
sbb
xchg
mov
pop
mov
mov
sbb
pop
addr16
shll
lods
push
imul
lcall
popa
add
gs
loopne
popf
inc
add
xor
clc
sti
mov
test
ret
sbb
jns
mov
jnp
lock
aaa
xor
add
fistps
xlat
cld
popf
inc
xchg
sbb
add
loope
pusha
movsb
insl
sub
sub
adc
dec
out
jl
shrb
ffreep
test
cmp
or
lea
ret
pop
pop
aam
das
inc
push
in
mov
fcoml
adc
ss
add
mov
mov
xchg
mov
pushl
in
outsb
xchg
test
popf
test
jl
test
fsubl
dec
ljmp
imul
loope
lahf
mov
dec
aas
test
or
fidivrs
test
fstpl
addr16
jnp
pop
dec
add
ret
and
mov
pop
inc
test
push
loope
loope
jge
scas
int
testb
ds
inc
mov
out
pushf
mov
and
sbb
stos
popf
insb
adc
mov
adc
lahf
int
pusha
shlb
push
sbb
adcb
lods
mov
movsl
jno
ret
outsb
xchg
stos
push
dec
adc
xchg
pusha
cmc
in
ljmp
mov
xchg
mov
pushl
movsbl
mov
lea
mov
jmp
lea
je
call
rcl
mov
call
jmp
pushl
pushf
lea
jne
pushf
call
shrd
mov
test
clc
cmpb
call
mov
jmp
mov
movw
lea
ja
pushf
pushf
movb
lea
jb
bt
jae
clc
cmpb
call
movl
push
push
pushf
mov
pushl
popl
pushf
pushl
pushl
ret
repnz
push
push
pushf
lea
jne
adc
mov
pusha
mov
dec
jmp
js
xchg
mov
push
outsl
xor
nop
jg
gs
in
out
aam
jmp
mov
xor
inc
fwait
jmp
cmpl
dec
stos
inc
out
dec
je
adc
lock
je
xlat
dec
jmp
cmp
push
ss
repz
dec
xchg
push
and
mov
xchg
cwtl
gs
cld
test
cmc
xchg
cmp
cmp
sub
fs
pop
push
jmp
popf
mov
xor
bound
addr16
clc
xor
pop
jo
dec
lods
mov
notl
jl
mov
pop
mov
mov
mov
jns
xorl
cs
fwait
lahf
lds
pop
push
mov
jo
call
cmc
insb
xchg
cmp
ja
jmp
mov
fcoms
nop
inc
or
xchg
dec
pop
lret
and
adc
mov
mov
mov
xor
xchg
loopne
and
sub
sbb
or
push
mov
inc
mov
mov
cld
mov
fistl
mov
dec
push
aaa
es
in
or
fbld
outsl
std
or
push
dec
imul
and
xor
mov
sbb
sub
cmpsb
mov
mov
in
out
pop
sbb
jp
andb
lahf
and
dec
test
mov
addb
dec
dec
mov
xchg
jne
mov
lods
xor
lret
rcll
adc
test
out
xchg
push
jge
mov
int
ret
fnsave
add
dec
push
mov
daa
cld
in
mov
ret
out
push
out
aaa
adc
je
mov
inc
mov
inc
push
fstps
mov
pusha
inc
fwait
shlb
or
sub
cmc
subl
mov
loopne
cld
dec
jmp
push
xor
or
xor
xchg
push
or
sahf
pop
ret
mov
sbb
fildll
sbb
jg
xchg
mov
movsl
xor
out
jbe
xchg
and
lods
add
or
lret
popf
dec
loope
pop
mov
jne
stos
sbb
xchg
lods
jns
addb
ficompl
pop
pusha
imul
popa
push
and
mov
es
out
mov
sub
xchg
fwait
pop
or
pop
cmpb
cs
mov
mov
mov
xor
das
hlt
jmp
pop
insb
addr16
popf
in
jne
mov
xchg
sbb
repnz
movsb
sahf
popa
in
fstpl
addr16
aad
cmp
dec
shl
mov
in
mov
xchg
aaa
mov
push
cmp
push
xchg
dec
lret
dec
dec
pusha
mov
lcall
movsl
inc
sub
add
bound
scas
in
jno
fsubrl
mov
pushf
add
nop
cmpsl
push
ljmp
fs
je
stc
cmp
pusha
lea
jne
jmp
pushf
call
es
sbb
cmp
inc
loop
sahf
ljmp
mov
frstor
xchg
subb
mov
mov
and
pop
pop
shlb
xchg
pop
dec
sub
or
fildll
out
mov
jno
std
and
push
lea
ret
pop
shll
fcomip
rol
lock
adc
cmp
mov
add
bt
clc
jmp
jmp
mov
jmp
lea
je
jmp
xchg
mov
pop
out
arpl
loope
xor
push
inc
ds
adc
enter
pusha
addb
out
mov
or
rcrb
dec
into
xor
ret
and
shld
ja
push
idivb
cmp
jno
notrack
add
add
xchg
mov
call
stos
sbb
jae
ljmp
xchg
stos
popf
cmpsb
add
test
sti
xlat
xchg
cmp
cmp
sbb
mov
fsts
pop
mov
or
pusha
mov
cmpb
dec
stos
pop
cld
jl
or
icebp
jno
mov
insl
xchg
stos
push
insl
add
movsb
mov
xrstor
lds
inc
stos
les
stos
pop
cld
jecxz
out
data16
inc
dec
loopne
outsl
xor
lret
xor
xchg
repz
ret
in
adc
call
pop
lea
movl
mov
lea
call
add
jle
add
add
add
imul
add
xchg
add
add
add
add
add
add
add
xchg
sub
add
add
add
add
add
add
add
pushl
add
sub
add
add
add
add
das
push
ret
lret
shlb
mov
jmp
jmp
pushl
lods
pushf
mov
push
movb
xor
call
movl
pushf
jmp
lea
jne
pusha
call
insb
xor
or
push
movsl
icebp
xchg
xchg
inc
test
icebp
inc
notl
popa
test
pop
mov
das
add
test
mov
jmp
inc
mov
lods
repz
sub
sti
jge
imul
pop
jo
pop
lahf
mov
fmuls
jnp
outsl
cld
in
in
xor
mov
mov
mov
aas
fwait
mov
mulb
inc
mov
cs
sbb
dec
lock
hlt
mov
jp
xlat
sbb
pop
in
fdivl
fisttpl
testl
lret
sahf
clc
notb
mov
leave
andl
mov
xchg
popa
leave
outsb
ss
mov
xchg
inc
mov
jb
dec
addr16
jne
mov
ss
adc
dec
cmp
hlt
inc
shrl
mov
xchg
xor
cmp
sub
xchg
xchg
inc
sahf
mov
and
cmc
add
pop
dec
jecxz
imul
xorb
pop
stc
xchg
mov
cli
gs
jo
icebp
jge
rorb
ja
aas
push
bound
mov
sub
pop
or
ud0
mov
aad
push
and
cmpsl
arpl
roll
inc
mov
repnz
stos
mov
imull
fcoms
mov
scas
dec
ds
jmp
ficomps
shlb
mov
push
xchg
aam
xor
ds
popl
push
jnp
scas
adc
xchg
je
lods
aam
popf
cmp
add
cmp
sti
fidivs
sub
int
aas
cmp
out
mov
push
outsb
out
nop
add
sub
push
jnp
cmp
xor
ljmp
add
push
lea
jmp
pop
push
adc
lahf
sbb
lock
and
xlat
jl
add
fwait
dec
mov
xor
jl
data16
sub
xchg
sbb
out
out
sub
mov
cmp
pop
jnp
iret
out
sbb
sbb
test
repz
mov
mov
repnz
addl
jge
hlt
ss
cmp
out
dec
gs
jmp
std
mov
inc
jecxz
dec
mov
adc
mov
cwtl
or
sbb
pop
out
mov
jmp
push
fstl
adc
pushf
sti
movsb
shl
xor
xchg
imul
fwait
in
icebp
push
cmp
and
aas
and
add
sub
call
push
shll
mov
sub
sbb
arpl
loopne
xchg
es
mov
orb
es
ret
sti
aam
sub
frstor
inc
dec
aad
cmp
pop
mov
out
pop
in
inc
mov
js
dec
imul
ja
test
jne
xlat
ds
ljmp
bt
cmp
jmp
push
call
xor
call
lea
je
pushf
add
clc
pusha
bt
pusha
cmp
jmp
data16
adcb
push
loopne
insl
fisubl
dec
jnp
mov
xor
cli
ds
xor
test
shufps
push
sub
jnp
xor
and
inc
mov
cmp
les
enter
cmp
sbb
mov
fcmovne
lret
cmp
lods
movsl
addr16
xchg
pop
int3
adc
or
out
adc
xor
or
imul
jecxz
mov
jbe
xor
push
orl
bound
inc
sahf
xchg
jo
inc
and
push
inc
push
sub
test
lock
mov
cwtl
xor
dec
or
imul
popa
mov
cmp
loope
push
fisttpll
push
jg
ret
sbb
jmp
in
pop
push
lret
test
xchg
xchg
in
jo
pop
ljmp
add
sbb
leave
dec
sbb
mov
sub
cmp
sarb
into
adcl
loope
cmpb
shl
out
cmc
icebp
dec
cwtl
xor
cwtl
push
sub
push
jnp
inc
jae
adc
fildll
ljmp
shrb
sub
sub
lea
jb
bt
pushf
cmc
cmp
pushf
call
lea
ja
jmp
lea
jb
stc
cmp
cmp
clc
cmp
pushf
pusha
push
lea
jae
movsbl
bts
mov
neg
xor
mov
call
and
jp
xchg
cmpsl
sub
imul
jl
sarb
push
mov
and
sarl
add
pushf
add
or
cwtl
xor
pop
push
sbb
push
jge
pop
dec
mov
fcoms
and
popa
mov
and
clc
stos
in
cmpb
inc
mov
call
roll
and
and
xchg
push
push
inc
test
push
pop
cmp
mov
pop
and
jmp
xor
dec
rcll
rol
test
sarb
or
lahf
sbb
and
movl
pusha
lea
jmp
jle
push
mov
movl
pusha
pusha
movl
push
pushl
lea
jmp
dec
shr
add
shl
rcr
bsr
test
mov
test
cmp
stc
or
call
pushf
movl
pusha
pusha
call
lea
je
pushf
push
lea
jmp
call
bound
loop
out
out
mov
jb
les
int3
outsb
inc
cmp
stos
add
popa
push
jmp
lahf
sbb
test
adc
pop
pop
and
rclb
push
xchg
filds
adc
out
mov
jmp
adc
lock
mov
jb
stc
fcoml
push
mov
xchg
aaa
fs
xlat
pop
dec
pusha
outsb
cmpsl
and
push
test
mov
mov
sbb
add
mov
push
icebp
loop
enter
ret
adc
add
push
pusha
mov
lea
jb
pushf
pushf
mov
pushl
ret
fistps
mov
jno
jmp
xor
push
inc
sahf
fimull
fwait
fwait
mov
fidivs
mov
ljmp
inc
je
xorb
mov
cmp
and
inc
mov
sbb
outsl
or
out
mov
mov
popa
dec
pop
and
mov
scas
pop
jb
jl
mov
cmp
or
rcrb
loope
std
cmpsb
mov
sahf
ljmp
enter
sti
pushf
bsr
movsbw
cmp
lea
add
lea
jmp
test
bt
cmp
setg
movzbl
call
ss
and
out
mov
fmuls
and
mov
jae
mov
or
and
jmp
mov
mov
fsubrl
xor
insl
fs
and
sti
sub
bound
jb
inc
insl
icebp
decl
sti
push
mov
mov
inc
or
fisubl
adc
mov
insb
enter
xchg
mov
cmp
mov
loopne
add
xor
ljmp
inc
and
adc
add
pusha
jmp
lea
jo
push
movl
pushf
pushf
pushf
lea
jmp
jmp
add
inc
js
je
jb
arpl
jae
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
test
mov
call
inc
fcoml
mov
jmp
cmc
imul
sub
adc
xor
pop
inc
push
dec
jbe
ret
lcall
ret
in
fistps
mov
mov
scas
lea
push
jmp
call
imulb
adc
sti
inc
punpckldq
adc
mov
cmp
scas
xchg
scas
mov
mov
test
mov
test
xor
ds
dec
in
xchg
mov
int
test
aaa
jbe
mov
jns
inc
or
or
js
xchg
pop
add
fistpll
jp
pop
add
outsb
aam
fcmovnb
sub
cli
call
pop
lods
lds
or
mov
idiv
call
xor
push
mov
imul
je
jbe
cmp
fistpll
sub
push
pushl
popl
cmc
cmc
push
cmp
pushf
lea
ja
stc
dec
sub
rcl
add
pusha
jmp
and
adc
xchg
clc
add
aad
mov
into
popa
mov
dec
jno
les
jmp
aas
xor
adc
and
aas
out
pop
fsubs
push
adc
in
and
cmpsb
out
test
addr16
xchg
pop
fcoml
cmp
jecxz
adc
pop
cmc
lods
pushf
sub
push
cmp
test
out
je
xlat
outsb
pop
test
gs
ljmp
call
pusha
jns
cmpsb
fwait
sbb
add
movsb
add
mov
fwait
push
push
push
aad
lret
fwait
es
out
add
sub
imul
ljmp
addr16
repnz
in
pop
cmpsb
int3
dec
js
xchg
xchg
scas
test
fmul
fwait
psrld
and
inc
fwait
push
sbb
xchg
mov
inc
inc
xchg
adc
loop
mov
test
dec
sub
mov
std
fmul
lcall
sub
jbe
push
int
pop
push
lock
cld
ljmp
fs
jbe
shrd
sar
rcl
ror
sub
shr
cmc
sub
mov
movsbw
not
bts
mov
test
pushf
sbb
xor
add
not
movw
shr
shld
mov
shrd
lea
clc
add
pushf
pushf
not
mov
push
pusha
push
call
add
call
pusha
mov
lea
jae
add
mov
movzbw
btc
pusha
rol
mov
btc
stc
shl
mov
cmp
mov
bt
clc
xor
pushl
bt
repnz
pushf
pushf
lea
jne
lea
add
mov
bsr
sub
dec
adc
and
mov
stc
sub
cmp
test
jmp
jmp
call
pusha
pushf
movl
pushf
pushl
lea
jmp
lea
je
neg
shl
mov
ror
sbb
add
rcl
sar
shrd
and
mov
call
mov
and
fldenv
leave
push
jne
or
push
sub
clc
imul
out
fsubs
in
enter
cmpsl
dec
int
pusha
popf
lret
and
in
das
sub
sbb
int3
aam
fcoms
cmp
push
sbb
cmpl
and
js
out
adc
repnz
push
ljmp
cmpsl
test
insl
insl
stc
inc
lds
dec
and
pop
push
rcrl
and
adcl
xchg
repz
sub
mov
pop
push
or
ret
pushf
test
leave
ja
sbbb
sub
cmp
sbb
dec
into
das
push
push
in
or
push
rorb
ss
cmpsl
add
int3
in
insl
inc
mov
sub
push
and
adc
cmpsl
jnp
iret
movb
push
dec
pop
mov
jmp
inc
dec
loope
repnz
xor
inc
stos
sub
ja
mov
movsl
fwait
popf
enter
mov
cmc
jno
dec
sbb
out
adc
dec
adc
inc
xchg
xor
ret
jmp
or
sahf
jmp
orb
mov
addl
jns
adc
cli
cli
cs
data16
and
push
dec
sbb
mov
pop
or
xor
and
pop
and
scas
and
adc
cld
int3
jbe
lods
inc
fdivrl
aas
and
jnp
cmp
mov
ss
mov
repnz
add
in
push
mov
or
cmp
loop
mov
fcompl
aad
push
sbb
lods
cmpsl
inc
iret
sbb
xchg
pop
mov
sbb
pop
and
roll
enter
inc
ja
adc
xchg
icebp
jmp
fistps
push
adc
lea
or
cltd
jecxz
fists
push
rorb
les
xchg
fistl
aas
mov
pop
jo
bound
mov
mov
cmpsl
in
cmp
pop
push
adc
push
scas
sbb
sbb
std
mov
lret
loopne
mov
enter
mov
add
pop
mov
add
ret
gs
mov
sbb
xor
aad
repnz
dec
rcll
jns
insl
xchg
mulb
lea
pop
or
mov
push
adc
dec
fists
insb
jecxz
ret
jbe
ret
inc
movsb
mov
lea
je
clc
cmc
add
bt
cmp
jmp
pop
cmp
es
sbb
cli
dec
loop
xor
ret
mov
mov
lret
pop
jbe
popa
lret
inc
pop
fst
stc
in
xchg
adc
sbb
fs
testl
sub
insl
test
addr16
loopne
xor
mov
mov
sbb
add
test
call
xlat
mov
cld
xor
pop
mov
scas
add
je
mov
xchg
div
popf
sub
push
ljmp
bt
cmc
pushl
test
call
mov
pop
adc
test
loopne
lock
push
mov
push
iret
ss
outsb
jo
in
xchg
adc
adc
inc
movsl
fcomip
add
imul
aaa
ret
cmp
dec
stc
jmp
fnstcw
ss
in
je
and
mov
dec
jmp
daa
sahf
lret
xchg
inc
call
xor
xchg
push
mov
xlat
inc
loope
sbb
aad
mov
lods
ja
push
pop
jle
dec
jnp
xchg
inc
jns
std
adc
sub
mov
pop
sbbb
jb
sub
sub
lea
outsb
mov
lret
cs
dec
fildll
mov
xlat
push
hlt
lods
jecxz
push
aaa
cmpsb
inc
or
xor
sbb
mov
std
ljmp
cmp
cmp
mov
or
lcall
adc
mov
imul
add
cmpsl
and
lcall
push
in
decl
sbb
adc
mov
call
push
pushl
popl
push
mov
pushl
ret
jmp
add
xchg
js
ja
and
rcl
fcmovbe
push
orl
mov
cmp
adc
leave
popf
mov
sbb
mov
jb
ss
jle
pop
push
or
mov
aad
sarl
push
orb
jnp
addr16
rcl
out
dec
and
jl
dec
adc
loop
pushf
mov
movl
mov
pusha
pusha
lea
mov
mov
pushf
push
pushf
pushl
ret
stc
mov
push
bt
jmp
cmp
pusha
call
scas
clc
mov
inc
lret
pop
sarl
inc
cs
sbb
scas
dec
and
out
ffreep
js
inc
ret
jb
mov
fdivrl
lods
insl
cmp
jnp
add
pusha
icebp
adc
pusha
xchg
nop
loop
fidivrs
mov
pop
adc
stos
or
rcrb
mov
out
subl
pop
fmull
sarl
in
mov
mov
pop
xor
or
loop
rcrl
mov
mov
and
xchg
enter
lcall
int
out
lahf
in
and
pop
inc
in
insl
std
cmc
sarl
int
inc
pushf
aas
rdtsc
dec
aam
xchg
call
aaa
pushf
dec
add
push
clc
lock
pop
imul
fcomi
testl
push
add
cmp
inc
pop
in
pop
push
or
icebp
and
les
xchg
iret
inc
xor
aam
ret
jbe
jns
fstp
fists
icebp
pop
sbbl
je
js
push
negb
clc
and
cmp
lret
loopne
pop
rcll
aaa
sbb
add
add
enter
imul
popa
inc
add
ret
mov
sahf
sub
jp
insb
lods
add
pusha
fsubrl
and
add
js
inc
adc
ret
push
aad
fs
js
je
pushf
add
neg
btc
sub
adc
shld
sub
shl
shr
movzbw
mov
btc
stc
add
jmp
and
lods
push
enter
test
adc
imul
mov
mov
mov
add
dec
and
test
ret
stc
jmp
ljmp
sbb
dec
outsb
je
jb
outsl
arpl
fs
js
push
add
std
in
decl
test
pushf
cmc
stc
movzwl
rcl
mov
pushf
test
call
cmc
mov
bt
mov
cmp
push
stc
clc
test
jmp
outsb
sub
push
xchg
mov
mov
adc
add
leave
mov
stc
and
rorb
sbb
push
xchg
lret
push
mov
mov
xor
out
mov
lods
fwait
sbb
neg
fnstenv
rolb
hlt
mov
fs
bound
xor
pop
mov
xor
push
fsubs
cwtl
in
mov
int
inc
adc
and
stos
dec
add
inc
sarb
and
bound
out
xchg
push
insl
sbb
scas
lret
ret
frstpm(287
mov
push
pushf
movsb
cld
ja
add
fiadds
add
ljmp
and
pop
divb
dec
pop
and
adc
out
add
outsb
add
xor
adc
push
add
fwait
xchg
xor
mov
xchg
mov
dec
int3
mov
cmp
mov
mov
or
ss
push
jg
inc
cmpsl
push
dec
lea
ljmp
mov
lcall
push
pusha
lea
call
push
adc
call
push
pop
mov
push
lock
divl
outsb
xchg
jo
sbb
cmpb
scas
and
sub
add
xchg
mov
pop
mov
or
dec
int
js
adc
add
cld
outsb
cmpsl
jno
lods
sub
fistps
iret
sbb
nop
fcomp
or
adc
xchg
or
ds
push
ds
leave
mov
mov
dec
lea
and
out
imul
ljmp
rcrb
push
pop
inc
cmp
dec
outsl
je
ret
pop
jle
pop
jmp
mov
pop
into
jg
mov
xchg
jae
cmpsb
inc
mov
aas
push
xchg
jno
mov
movb
jge
inc
adc
dec
push
xchg
dec
xor
lods
inc
ret
daa
add
jl
nop
add
push
inc
repz
pushf
rolb
adc
mov
jnp
cmc
mov
jo
pushaw
dec
sub
adc
fcompl
ljmp
call
jmp
mov
xor
stos
jns
adc
jbe
insl
sbb
in
push
lcall
xchg
out
out
sbb
enter
leave
ret
outsl
arpl
xor
lock
dec
adc
push
inc
cld
movsl
mov
pop
mov
cmpsb
fidivl
dec
xor
adc
xchg
xor
cmpsb
cltd
push
in
pop
std
std
xchg
movsb
adc
ljmp
push
loop
ja
fcompl
sbb
ret
std
sub
or
dec
ljmp
cltd
sub
sub
dec
xchg
push
mov
inc
mov
pop
cmpsl
jo
ret
adc
push
in
orb
mov
jae
fstps
dec
sbb
cld
add
mov
iret
pop
push
lret
ret
fbld
incl
shll
loope
adc
fcompl
loope
gs
dec
scas
add
xchg
sub
ljmp
xlat
lds
push
in
jnp
mov
push
dec
dec
xchg
loope
scas
push
leave
pop
fcompl
push
mov
sbb
lret
pop
movsb
iret
and
lds
in
xchg
cmp
jmp
andl
ja
idivl
inc
adc
jge
pusha
paddw
pusha
pop
ret
mov
pusha
mov
inc
and
cld
stos
rcrb
adc
cwtl
push
push
xchg
xchg
stos
fwait
jle
mov
and
xchg
fwait
test
bound
shlb
fwait
add
dec
cwtl
adc
leave
mov
dec
add
sti
test
lcall
fcomps
mov
or
jp
dec
dec
xor
das
out
test
fwait
pop
xlat
ljmp
xor
mov
dec
out
sti
sar
or
rol
sbb
dec
leave
out
xchg
lret
daa
inc
insb
out
lds
cmp
fcompl
inc
sbb
loopne
add
andb
pop
push
cmp
or
add
cmp
rcrl
xor
pop
xorl
subb
inc
lcall
arpl
sub
cmc
jg
jl
js
bound
jge
jo
iret
push
mov
cwtl
dec
jbe
jl
cmp
imul
push
hlt
cmp
cmp
data16
das
lea
fwait
inc
xchg
push
insb
insb
jge
lods
mov
xchg
in
fwait
push
pop
inc
addr16
push
or
jae
pop
xchg
mov
cwtl
ljmp
add
adc
out
std
repnz
or
mov
imul
inc
dec
mov
lahf
fwait
sub
or
pop
xor
stos
cwtl
cli
sti
add
out
cwtl
in
adc
out
add
aam
push
adc
pop
xor
femms
or
sbb
pushl
pushf
sbb
pop
or
xor
icebp
rcrb
stos
test
fucomip
es
add
push
cmp
in
in
cli
stc
clc
imull
inc
dec
fwait
dec
jo
jle
dec
push
pop
xchg
inc
xchg
dec
dec
push
mov
inc
dec
jb
lea
data16
or
push
jns
je
xchg
pusha
jg
mov
mov
stos
lods
lods
sub
pushf
mov
shrl
jle
jp
pop
jns
ja
push
hlt
mov
cmc
push
loop
ret
repz
out
int3
out
lods
jmp
fwait
adc
shr
loop
fstps
or
pop
push
add
inc
xor
aas
fwait
and
cmp
cmp
adc
or
jae
cltd
and
imul
std
cwtl
pop
mov
test
movsl
loopne
cmpsb
scas
xor
sarb
pop
dec
dec
inc
inc
inc
pop
inc
aam
out
loopne
cltd
in
fistps
rol
clc
fcmovu
in
xchg
int3
pop
or
sbb
pop
fstps
dec
push
pop
inc
jb
data16
pop
fwait
mov
stos
mov
cmpsb
mov
xchg
jbe
outsb
insl
insb
cmp
mov
mov
rcrl
test
fwait
sahf
lahf
popf
inc
inc
pop
dec
dec
mov
pop
push
inc
jnp
ret
shr
jmp
push
xor
or
cs
mov
sub
call
sub
arpl
not
into
ret
rcl
pop
fcmovne
pop
pop
sbb
add
pop
imul
mov
test
mov
lods
xchg
cltd
test
inc
pop
cwtl
inc
inc
inc
pop
pop
sub
imul
adc
ficoms
fs
sbb
lsl
push
add
xor
pop
cmp
fisubl
in
sub
cmp
sbb
pop
cltd
push
repz
rcr
cld
aam
xor
mov
sub
ljmp
sub
lahf
and
sbb
adc
sub
in
call
std
cli
mov
imul
out
imul
jae
stos
out
ret
xor
loopne
enter
adc
das
push
loope
sti
lods
fwait
orb
cld
fwait
cmc
sti
stc
loopne
adc
cmp
fwait
scas
mov
andb
je
jb
jo
dec
xchg
dec
jae
adc
repz
jecxz
loopne
sub
das
insl
ss
in
fdivr
call
xor
mov
or
and
pop
xorb
int
cmp
cmpsl
cmpsb
movsl
movsb
rcl
fwait
popaw
pop
inc
jle
orb
imul
popf
fs
xchg
popf
xchg
mov
pop
outsl
arpl
pusha
push
dec
jb
dec
filds
addl
or
or
jae
xchg
jmp
sub
push
cmp
int3
iret
ror
int
fcmovnu
mov
xchg
lods
pushf
xchg
pop
dec
jnp
dec
or
xchg
push
daa
push
fistpl
cmp
sub
or
mov
sti
icebp
jecxz
adc
cmp
aam
xchg
hlt
adc
and
notb
iret
std
sti
cltd
ds
cmp
aas
mov
andl
xchg
lahf
pop
popf
sbb
pop
dec
cli
sub
add
push
orb
cltd
xor
popf
ja
inc
mov
xor
popa
jge
push
jae
xchg
ja
sahf
dec
arpl
orb
sarb
sarl
jg
lcall
pop
call
push
sbb
xchg
fwait
mov
loopne
cwtl
adc
pop
shrb
adc
in
data16
dec
pop
ret
add
adc
imul
ljmp
sbb
dec
subb
fwait
add
jno
lods
int
push
mov
mov
fimull
push
ret
incb
pop
mov
pop
scas
pushf
out
jbe
xchg
int3
mov
fwait
arpl
dec
push
jl
data16
sub
data16
ja
dec
cmp
out
out
pop
adc
mov
sub
xor
outsl
pop
cmp
mov
pop
jg
mov
fsubs
clc
in
dec
lahf
pop
cmpb
jecxz
adcb
bound
inc
outsb
fwait
stos
inc
push
cltd
push
lret
lret
mov
mov
jmp
mov
fistpll
cltd
push
pop
push
mov
push
rcl
or
mov
lret
mov
mov
jae
jnp
arpl
imul
add
or
xor
cmp
shrb
push
sbb
or
ret
repz
imul
sbb
subl
mov
mov
not
imul
push
jae
jnp
arpl
imul
imul
add
sub
inc
inc
arpl
adc
pushf
mov
xchg
mov
ljmp
xchg
adc
xor
aam
mov
lcall
push
fisubl
cwtl
adc
fnstcw
mov
out
jae
and
jbe
lcall
mov
shrb
in
pop
icebp
cltd
repz
add
lahf
pushl
out
orb
mov
add
dec
sbb
mov
mov
inc
test
sar
mov
mov
orb
ja
imul
mov
inc
repz
mov
mov
loop
stc
or
xlat
or
rcr
pop
xchg
sbb
pop
mov
lahf
inc
data16
xor
int3
or
fcoms
loope
sub
push
jecxz
rcrb
je
addr16
pop
call
fwait
aas
movsl
push
push
adc
pop
jecxz
jecxz
fwait
popa
mov
cmp
fwait
insl
mov
fcoml
mov
fs
nop
xchg
fwait
xchg
and
mov
cmpsb
pop
xchg
inc
pop
shrl
sbb
adc
movsl
inc
imul
mov
and
xor
push
sub
out
fisttpl
fwait
and
into
outsb
lcall
add
sarl
sbb
insl
pushw
lea
adc
popl
add
and
fwait
iret
orb
and
pop
adc
shrb
fwait
xchg
ret
mov
sarl
fwait
pop
inc
pushf
nop
ss
xchg
das
cmpsl
imul
dec
scas
sbb
imul
jecxz
cwtl
cwtl
pop
pop
lods
pop
cmp
mov
iret
test
sti
enter
jle
sub
popf
mov
aaa
imul
mov
data16
sti
fwait
mov
mov
pop
xchg
fwait
mov
pushf
fwait
loop
pop
stos
sti
les
mov
xchg
fwait
dec
test
icebp
sub
fnstsw
fwait
in
dec
out
sahf
ds
fs
loopne
dec
fwait
dec
pop
sub
mov
jb
fisttpl
stos
imul
fwait
push
into
leave
icebp
decb
push
fwait
cmpsb
mov
call
orl
std
fwait
lods
imul
dec
fwait
dec
xchg
sbb
xchg
mov
fwait
clc
xor
jmp
lcall
rcr
or
lds
popf
sub
sub
repnz
loopne
fildl
fcomps
jae
mov
insb
movsb
xchg
mov
fldt
fwait
loope
je
lcall
push
sahf
ja
cmp
fwait
inc
mov
or
cli
enter
dec
add
fwait
incb
iret
out
cmp
stos
imul
xchg
pop
or
stc
xchg
outsb
jg
push
pop
repnz
cs
jne
into
fdiv
fwait
dec
sbb
movl
cmp
xchg
xchg
pop
jle
dec
jecxz
pop
pushf
aad
dec
insl
fwait
lahf
addr16
cmp
push
es
lcall
cmpb
jne
repz
iret
out
xchg
aam
mov
jge
stos
fwait
loop
jne
inc
adc
cwtl
jb
xlat
sub
jecxz
jbe
mov
mov
gs
xchg
outsl
jno
in
and
inc
pushf
jo
insl
push
imul
jnp
fwait
xlat
sub
adc
push
fwait
inc
bswap
mov
vpmadcswd
xlat
xor
mov
mov
test
jb
push
dec
icebp
push
pop
ret
shll
stc
sbb
outsb
iret
adc
pop
mov
icebp
fwait
xchg
sbb
mov
mov
mov
sahf
sub
cmp
cmp
scas
lock
test
into
push
xchg
pusha
sbb
push
cmp
xchg
fldl
call
rcrb
lret
lcall
ret
push
fistl
mov
bound
cltd
cwtl
cmp
mov
out
xchg
sbb
repz
xchg
sar
sub
and
pushf
pop
aad
dec
pop
sbb
or
inc
cld
add
in
pushf
mov
call
imul
fwait
pop
xchg
or
push
popf
gs
lcall
sbb
cmp
rol
cmp
stc
ljmp
loope
pushl
jbe
outsb
xchg
aam
test
xor
cmp
xchg
ljmp
push
aaa
popl
test
jmp
ja
fcoml
or
fs
inc
movsl
fisttpl
lods
fisubl
add
lcall
and
sub
cli
xchg
arpl
lahf
dec
inc
add
call
fldl
add
rorl
fwait
je
sbbb
adc
fsubrl
xor
loope
sbb
aad
push
push
push
xor
into
sbb
rcr
gs
add
fbld
call
mov
cmp
jbe
in
stos
dec
lret
lock
cmp
mov
es
mov
js
xor
stos
pop
xor
fadds
jmp
stos
roll
push
push
shr
xchg
fwait
pop
repnz
dec
mov
adc
adc
push
pusha
push
imul
cltd
aaa
mov
sub
int3
enter
mov
jmp
mov
cmp
cltd
add
sarb
xor
test
mov
xor
cmp
sub
dec
pop
ljmp
sub
fs
ret
lea
jne
pushf
jmp
mov
pushf
mov
pushf
movb
lea
jmp
nop
aas
jl
arpl
add
or
push
sti
and
jb
pop
jne
and
lret
jnp
les
inc
incb
shll
shlb
xchg
addb
xchg
in
xchg
pop
push
call
push
popf
and
mov
cld
cmp
adc
cwtl
cmp
test
stc
ret
and
addr16
mov
jb
cmp
inc
rcrl
adc
sahf
pop
idivb
ljmp
lahf
imul
call
lea
jne
test
cmp
mov
cmc
cmc
jmp
pop
fwait
cmc
pop
push
sub
lcall
pop
test
popf
mov
jmp
mov
or
orl
pop
jl
or
xchg
pop
outsb
cwtl
xchg
mov
cmpsl
mov
sbbl
cmp
mov
sbb
sbb
stc
sbb
mov
mov
ja
xlat
mov
negb
stos
mov
sbb
mov
xchg
ret
pop
nop
xchg
dec
jmp
rcr
push
xchg
or
mov
push
lcall
mov
adc
mov
pop
xor
addb
ss
cwtl
jg
sbb
sbb
dec
pop
sar
mov
xor
sbb
mov
pop
lea
xorl
aaa
ja
lods
or
aaa
mov
in
scas
insb
aaa
jnp
xchg
in
pop
mov
ret
add
ret
inc
negb
mov
hlt
pop
loop
mov
jo
sub
ret
mov
lea
mov
bswap
lahf
push
mov
pushl
call
push
lock
std
std
xchg
loop
sub
dec
imul
pop
dec
sub
mov
pop
cmpsl
ss
push
iret
cmp
jge
cmp
loope
dec
dec
aaa
and
aam
push
les
in
cs
test
inc
fstl
add
lea
in
xchg
push
xchg
lods
inc
aad
ss
mov
inc
imul
jmp
sbb
dec
pusha
pushf
movb
lea
ja
not
inc
push
mov
push
inc
sub
cmp
rcl
not
xchg
daa
mov
sub
test
rol
ror
mov
bt
push
add
mov
cmc
sub
pushf
pusha
pushf
rep
pushf
lea
mov
push
lea
jmp
pop
fsubrs
out
inc
adc
test
mov
jp
sub
jae
sahf
inc
xchg
xchg
adc
aam
xchg
or
mov
xor
or
adc
enter
inc
bound
and
andb
push
or
push
fnsave
scas
je
imul
or
cwtl
stos
out
xor
int
xchg
mov
gs
mov
out
enter
mov
inc
push
jmp
add
xor
push
outsb
pop
movsl
mov
sub
ret
push
xchg
mov
xchg
sbb
stc
ljmp
mov
mov
clc
pop
iret
mov
sbb
out
je
add
xor
xor
xor
sbb
orb
dec
in
inc
inc
lock
sbb
push
mov
loopne
adc
or
pushf
pusha
mov
lret
or
push
dec
divb
push
icebp
xchg
mov
jge
lret
rcrl
ss
lods
into
push
clc
mov
push
in
notb
pop
arpl
push
jge
mov
fsts
sbb
or
pusha
movsb
and
cltd
adc
xchg
sarl
and
jns
cmp
leave
cmpsl
xor
pop
mov
daa
stos
and
mov
mov
ret
jne
xor
mov
pushf
xchg
loopne
mov
ret
or
je
xchg
push
mov
push
jae
pop
addb
mov
in
popa
cwtl
pop
push
test
movsl
xchg
and
xchg
or
movsb
cmp
pop
push
pop
jmp
sub
ficoml
out
or
orl
adcb
cmp
mov
in
rorb
into
xchg
adc
jnp
pop
adc
and
test
aad
and
in
xchg
cli
xchg
or
mov
cmpsl
stos
mov
outsb
xchg
fcmovbe
repz
lahf
into
adc
pushf
cmp
and
ret
mov
mov
dec
outsb
ret
idiv
jbe
jle
push
mov
push
loop
sarl
outsb
inc
fwait
xorb
cmp
push
lahf
mov
and
fldt
ret
cmpsl
cmpsb
and
and
mov
and
in
lahf
adc
xchg
mov
push
dec
mov
sbb
sbb
imulb
jp
cmp
xchg
adc
inc
sbb
pop
xchg
shl
gs
ret
icebp
cs
lea
ja
jmp
or
neg
jmp
pusha
lea
jae
xadd
mov
jmp
sub
lea
jmp
jmp
cmp
jmp
movb
cmp
pushf
movb
pushl
pushf
lea
jb
jmp
pushf
sub
bt
push
neg
bt
push
sub
call
movl
mov
lea
jmp
movl
pushf
call
pusha
movl
push
lea
jmp
str
pushf
mov
push
movl
pushl
movl
mov
pusha
pusha
lea
jmp
sub
movl
cmp
xor
clc
push
cmc
jmp
add
jmp
dec
xor
mov
cmp
lock
mov
pop
add
fucom
cmpsl
jns
loope
or
push
jmp
imul
addb
loop
ret
sbb
cmp
and
push
ja
mov
data16
daa
mov
adc
out
mov
je
adcl
addr16
adc
or
stos
cwtl
pop
add
jmp
testb
adc
inc
out
nop
arpl
inc
mov
jmp
ss
fildl
mov
sbb
fwait
out
test
aam
stos
jecxz
mov
rcrl
fistps
out
es
in
push
fldenv
mov
cmp
lock
adc
ret
mov
mov
push
lods
push
mov
popf
sub
out
xor
in
push
pop
test
xor
test
es
pop
out
aad
int3
out
dec
sub
mov
mov
imul
divb
js
lcall
stc
pushl
mov
outsb
xchg
cmpsl
imul
mov
jns
inc
sbb
ljmp
movl
pusha
pushf
lea
je
bt
btc
rcl
xor
rcr
jmp
dec
stos
je
mov
inc
sti
add
xor
jl
lock
push
sub
cmp
or
mov
call
into
ret
mov
pop
mov
adc
push
clc
outsl
iret
jl
pop
add
sarl
xlat
mov
and
sahf
xchg
scas
test
mov
push
inc
adc
adc
xchg
std
dec
xor
loopne
hlt
sub
pop
mov
xchg
adc
push
int
jge
adc
ljmp
movzbl
lea
pop
mov
pop
call
pushf
push
lea
ja
jmp
and
mov
pusha
pusha
and
test
cmp
add
pushl
push
pushl
lea
jmp
mov
pusha
push
mov
sub
clc
rol
cmp
jmp
jmp
jmp
pushf
mov
stc
sub
pushf
jmp
sub
mov
and
cltd
loop
mov
pop
repnz
cmp
cmpsb
lods
das
pop
loop,pn
or
or
stos
in
xor
insb
insl
mov
dec
mulps
lea
jo
xor
dec
sarb
int
cmp
cmp
mov
fcmove
xor
sub
jecxz
test
cld
lock
xor
adc
push
inc
adc
cltd
int3
test
mov
ret
dec
pop
push
lods
lock
mov
adc
into
mov
aam
jo
hlt
jmp
pop
aam
cld
scas
ljmp
les
aas
gs
les
pop
cmpsl
leave
mov
jg
int3
loope
mov
bswap
int
mov
movsl
movsl
mov
lock
xchg
push
dec
nop
and
aam
inc
inc
jp
cmpsb
push
sub
sbb
sahf
imul
mov
ret
sub
push
sub
popf
dec
mov
ret
mov
and
jbe
shl
mov
cmp
pop
push
cmp
fwait
xchg
mov
xchg
and
cmpsl
xlat
push
xor
jne
outsb
shll
frstor
aaa
mov
fbld
xchg
lods
test
pop
ja
popf
xor
int
cmp
or
adc
in
mov
and
mov
bound
test
jb
sbb
cmp
repnz
mov
mov
js
movsb
cli
jmp
jg
xchg
negb
arpl
ljmp
xor
movups
out
inc
enter
jle
cli
cmp
or
inc
dec
sarl
or
inc
fmul
cmc
jns
sbb
or
lock
xchg
bound
and
xchg
sbb
push
pop
aas
mov
call
and
push
pop
mov
cmp
jnp
mov
pusha
repz
jecxz
mov
ret
int
shl
mov
clc
btr
mov
sbb
push
mov
bt
test
pushf
jmp
push
mov
pushf
call
bt
jmp
jmp
pushl
lea
jae
push
movw
call
movl
pusha
movl
pushl
pushf
lea
jmp
movb
push
mov
jmp
lea
jb
push
test
cmp
movw
lea
ja
clc
jmp
cmp
call
es
scas
lret
sti
xor
test
pop
cmpl
sub
faddl
nop
jno
mulb
xchg
mov
sbbb
cli
xchg
fs
fidivrl
sbb
nop
cmp
add
push
sub
add
and
or
sub
and
pop
aam
stos
sub
movsb
and
pop
mov
stos
xchg
out
mov
stos
aaa
dec
fwait
jp
pushf
ja
ljmp
pop
jp
jmp
loopne
ljmp
push
mov
xor
test
movsbw
mov
sar
bswap
sub
pushf
lea
test
call
call
jmp
call
xor
xchg
xlat
ss
adc
pop
pop
mov
and
dec
mov
stc
sbb
in
jo
dec
les
mov
scas
stc
in
repnz
mov
mov
shlb
push
push
cmp
sub
add
xor
cwtl
cmp
cltd
bound
sarb
fisttpl
xchg
inc
inc
add
imul
mov
test
mov
push
and
fcomps
in
fcoml
das
xor
pushf
movzwl
sub
rol
bt
bswap
btc
mov
jg
cmc
stc
add
pushf
pusha
stc
mov
jmp
mov
lea
jmp
lea
je
cmp
add
push
call
add
dec
gs
popa
addr16
outsl
js
add
sub
push
cmpsb
repnz
xor
je
scas
inc
cmp
mov
nop
test
pop
sarl
xchg
add
dec
in
sbb
dec
mov
lds
mov
push
in
out
dec
add
push
mov
fimuls
dec
ret
cs
aas
xor
and
xchg
xchg
and
or
push
cmpl
loope
sbb
fisubrs
aam
push
jl
int3
mov
dec
ret
xor
dec
sbb
push
dec
lcall
ljmp
repnz
call
xor
fsubrs
shlb
clc
mov
mov
mov
aam
pop
xchg
leave
mov
add
jl
and
jae
aaa
jo
dec
push
lea
sbb
adc
cwtl
fs
shl
adc
mov
insb
int3
movsl
mov
test
es
jp
inc
cmc
jo
ljmp
mov
fs
call
call
movzbw
lea
pop
movsbw
mov
pusha
pusha
lea
call
push
lea
jne
movsbl
mov
pusha
pusha
pushf
pushf
lea
jmp
movsbl
stc
btc
daa
mov
pushf
movb
cmp
cmc
shl
pusha
mov
lea
jo
je
push
pushl
call
lea
jae
pushf
pusha
pushf
pushf
lea
jmp
je
fwait
iret
mov
es
in
cs
adc
cmpsb
stos
repnz
inc
fstps
ja
ret
loopne
ret
pop
push
repnz
es
cmc
add
push
pushf
movsb
inc
out
fadds
movsl
lcall
cld
push
pop
popf
jge
out
ret
in
inc
test
repz
int3
inc
mov
sbb
scas
data16
inc
dec
mov
jo
sbb
arpl
fldt
push
push
test
cpuid
nop
call
lea
ja
pusha
pusha
pushf
push
lea
jb
bt
cmc
cmp
cmpb
push
push
call
movl
movw
movw
push
pushf
lea
jmp
lea
ja
bt
test
cmc
add
push
pusha
stc
or
jmp
push
pusha
pushl
clc
cmpb
jmp
pushf
movw
pusha
lea
jae
bt
add
pushf
movl
lea
jl
mov
pusha
pusha
pushf
lea
jmp
push
lea
pop
movzwl
mov
lea
jmp
pushl
popl
pushl
cmc
movb
bt
cmp
call
mov
push
data16
and
push
pop
in
cmpsl
cmp
push
cmp
push
out
jecxz
stos
sub
pop
dec
mov
sbb
ljmp
jnp
cld
mov
aam
jb
sti
into
mov
nop
cwtl
cmp
dec
addr16
mov
stos
filds
xchg
mov
lea
xor
mov
leave
or
jmp
sahf
xor
adc
lods
jl
ret
dec
sbb
fs
jae
bswap
neg
mov
mov
shl
bsf
rcr
rol
mov
or
xor
mov
cmp
cmc
clc
cmp
sub
cmp
bt
repnz
push
pusha
pushf
lea
jmp
cmp
dec
cmp
sub
lock
add
add
stos
mov
mov
int3
arpl
aaa
popf
and
clc
in
xor
out
stos
push
mov
loopne
or
or
cli
lods
insl
repz
xor
or
push
int3
icebp
shl
xchg
push
fs
int
getsec
inc
xchg
cs
je
inc
pop
ret
ljmp
ljmp
rolb
and
jmp
jmp
call
cmpsl
xchg
les
push
sbb
xorb
repnz
push
pop
mov
adc
fstl
sbb
mov
dec
lods
jb
sub
xchg
push
adc
test
sbb
aaa
loop
hlt
daa
cltd
mov
push
jbe
pop
pop
cmpsl
push
sbb
orl
sti
mov
mov
adc
ljmp
push
cld
inc
add
cmpsb
add
push
pusha
push
push
pushl
lea
jmp
lea
jne
or
mov
stc
pushf
bt
or
call
jmp
pusha
lea
jae
mov
inc
mov
shrd
dec
bts
shl
mov
bsf
rcr
cmp
and
mov
clc
jmp
arpl
sub
int
inc
pop
xchg
push
in
mov
xchg
in
cmp
inc
lock
lcall
cmc
push
or
xchg
fildll
roll
rorl
sbb
push
cwtl
cmp
adc
loop
loope
mov
data16
insl
sahf
lds
dec
adc
push
stc
inc
pop
add
dec
push
or
shll
push
mov
clc
cmpsl
and
cld
xchg
cmp
jns
addr16
ljmp
call
out
xlat
jge
data16
adc
or
or
lcall
pop
mov
add
call
out
mov
fdivrl
inc
pop
add
pusha
xor
and
mov
nop
mov
mov
push
int
lcall
and
idivl
jne
and
movsb
and
jmp
rol
lret
mov
mov
and
inc
aaa
cmp
dec
adc
inc
mov
jle
adcl
push
fbld
dec
push
pushf
scas
ja
jae
push
movsl
rcll
pop
pop
stos
or
and
dec
scas
je
pusha
pushl
addb
mov
out
push
lret
leave
out
cmp
pop
lret
aas
iret
xor
aas
rclb
jle
xor
and
fsts
cmp
mov
stos
jle
shll
jnp
adc
jge
and
lea
cmp
ret
dec
test
repz
jmp
in
sbb
cmp
andb
shl
pop
lods
out
aas
mov
addb
cmp
xchg
pop
xchg
push
cmpsl
sbb
lods
xchg
adc
mov
fs
daa
pusha
enter
std
xchg
inc
adc
pop
in
lea
insl
push
xlat
push
nop
jno
jne
adcl
xlat
mov
lret
or
sbb
cld
and
cmc
push
sti
mov
xor
loopne
dec
ljmp
inc
and
seta
mov
movb
push
lods
bt
xor
push
pushf
mov
add
jmp
cmp
test
jmp
mov
pusha
lea
jae
jmp
mov
sets
inc
jmp
lahf
not
movl
setl
setns
pop
push
lea
push
jmp
ret
mov
add
and
pop
pop
fsub
mov
or
push
and
jae
mov
xchg
jmp
sti
pop
lea
notb
lcall
mov
mov
mov
mov
mov
sbb
cmp
push
add
push
mov
cli
xchg
daa
fiadds
test
lds
popa
out
mov
pop
push
lock
enter
test
scas
xchg
cmp
ljmp
dec
leave
in
mov
sub
sbb
sub
aam
test
cld
nop
stos
inc
inc
mov
jb
stc
cld
cmp
cmp
mov
mov
ss
fnstsw
enter
sbb
mov
push
push
cwtl
cmpsb
cmp
inc
add
mov
ja
ljmp
jbe
jge
push
jl
orb
sbb
movsb
xchg
test
jecxz
arpl
les
out
aas
cs
jae
mov
mov
or
aam
lods
clc
add
pushf
mov
inc
call
movsb
mov
sbb
mov
stc
pusha
push
jo
or
or
aas
dec
inc
cmpsl
aam
vmovlps
mov
clc
sub
mov
arpl
xchg
mov
lahf
sbb
push
jns
mov
ret
push
std
aad
sub
inc
enter
sub
nop
push
dec
popf
stos
jae
sti
cld
sbb
test
pusha
shrl
out
pop
mov
out
mov
ret
leave
jne
movsb
jmp
push
or
inc
in
mov
mov
insb
test
lea
and
push
mov
mov
divb
leavew
jb
dec
xchg
xchg
ljmp
in
imul
pop
push
lret
xchg
jns
daa
jae
dec
idiv
push
in
or
push
jg
cli
push
dec
mov
mov
sub
in
xor
adc
in
cmp
add
dec
jnp
fwait
mov
fisubl
lock
xorb
stos
jno
out
inc
cmc
clc
test
adcl
xchg
jp
pop
test
dec
jp
push
push
enter
out
pop
push
jmp
lahf
scas
movsl
dec
int3
pop
push
xchg
and
pop
je
dec
jo
arpl
inc
mov
pop
ljmp
push
cmpsl
call
cld
lcall
sub
outsb
lds
inc
fnstenv
cmc
jp
xor
add
and
inc
cltd
sbb
ja
sbb
roll
in
lock
push
mov
das
mov
stos
mulb
fidivl
push
fwait
push
inc
sub
iret
mov
mov
add
add
loope
pop
add
mov
pop
sti
mov
or
iret
push
movups
pusha
add
xchg
mov
dec
cmp
pop
movsb
adc
mov
jnp
ljmp
pop
fs
in
enter
ficoms
adc
add
neg
dec
sbb
ss
xchg
fadds
add
jne
int
jl
notb
xchg
add
mov
scas
out
js
mov
popa
mov
inc
movl
fldl2e
ret
jnp
movsbw
mov
pop
pop
mov
pusha
pushl
mov
lea
pop
pusha
pushf
pushl
ret
adc
xor
sbb
das
jnp
sarb
cmc
inc
imul
mov
lret
mov
mov
lods
cli
cmc
pop
jnp
nop
push
ret
stc
xor
add
gs
cli
sub
js
in
int3
aaa
cmpsl
rcrb
mov
insl
clc
jb
lcall
fxch
je
aam
cmpsl
and
push
fs
and
out
fcoml
shlb
xchg
push
mov
in
scas
pop
adc
jbe
nop
ljmp
inc
and
fsts
leave
jmp
inc
and
jae
hlt
mov
jmp
fs
jne
pusha
stos
pusha
movl
pushf
pushf
lea
jmp
jmp
lea
jbe
shl
mov
not
movzbw
btc
add
test
mov
sar
add
xor
shld
shl
cmp
movl
clc
bsr
test
mov
bt
stc
cmp
pusha
push
pushf
jmp
pushf
lea
jne
bswap
xor
bsf
ror
not
stc
mov
adc
inc
push
add
call
lea
call
jmp
inc
sahf
jae
mov
aaa
pop
insl
pop
dec
fistl
pop
jo
sub
ret
shlb
mov
sub
pop
clc
xchg
or
jne
sub
cli
fimull
shr
dec
xor
roll
mov
ljmp
or
pusha
pusha
call
addr16
es
sub
cmp
pushl
and
lea
jl
shll
loopne
sarl
hlt
jmp
int
sbb
out
cmc
or
mov
insl
pop
mov
loopne
jmp
jp
adc
jns
and
cmc
cltd
or
and
xor
ss
sub
pop
sbb
pop
int3
pop
mov
mov
pop
in
faddp
jge
cmpb
sbb
loopne
xor
ret
xchg
jg
push
mov
xor
in
stos
imul
mov
xchg
popf
cmp
dec
mov
das
das
jmp
in
mov
fisttps
mov
xlat
sbb
out
xor
xchg
aam
in
push
jne
aaa
sarl
fcomps
or
iret
inc
dec
mov
cmc
pop
xchg
push
repz
loop
ja
adc
or
pushl
cld
or
repnz
in
clc
mov
mov
xchg
outsb
icebp
ljmp
add
test
mov
jl
aam
scas
mov
mov
inc
mov
aas
shlb
out
shr
ret
gs
xor
out
add
fs
imul
pop
xchg
push
insl
jecxz
inc
cmp
int
sbbb
bnd
arpl
xchg
lea
scas
xor
clc
test
and
orb
mov
and
push
and
adcb
mov
in
not
cmc
jo
cmp
push
mov
cmpsb
cmp
inc
and
and
mov
popf
xchg
ud1
imul
add
mov
push
push
flds
ficoml
ljmp
lock
push
scas
jle
jp
cmpsl
cmc
loope
ds
fsubs
push
enter
jg
imul
rcrb
adc
into
mov
add
or
push
rorb
pop
cmpsb
jno
xchg
mov
jecxz
add
out
pop
loope
imul
and
pop
add
fwait
nop
cwtl
inc
or
mov
mov
cmpsl
mov
movsl
test
insb
cltd
ret
dec
dec
aad
roll
push
and
sti
inc
test
mov
cmc
mov
xor
and
push
lods
cmp
shll
mov
data16
or
je
xor
loop
jnp
inc
adc
std
pop
dec
mov
nop
mov
or
mov
ret
adc
push
out
and
pop
lret
into
repz
sub
rclb
sbb
dec
std
mull
insl
pop
outsl
sub
pop
arpl
ficoms
fsubr
movb
push
lea
ja
stc
sub
setno
adc
not
cmp
add
call
pushf
mov
pushf
movl
pusha
lea
jmp
test
sub
add
pusha
push
lea
jmp
pusha
dec
test
call
jmp
push
lock
std
std
mov
xchg
push
fwait
pusha
jge
loopne
les
and
icebp
pushf
mov
pop
stos
ss
ud0
sar
dec
dec
insl
and
aam
push
roll
fsubrs
adc
test
mov
loope
cmp
push
inc
ss
xchg
push
es
in
push
jle
cmp
push
aam
fs
jl
mov
fidivs
xchg
xor
jo
cmp
mov
add
jnp
push
fs
fsubrl
gs
mov
in
ss
xchg
sbb
inc
xchg
hlt
pop
cmp
add
lret
or
add
mov
cmpsb
jno
clc
bound
cmpsl
mov
cltd
adc
pop
leave
cmc
not
cmp
mov
mov
movsl
jl
leave
movsb
xor
in
ficompl
lret
data16
push
jbe
lret
sbb
scas
lahf
mov
mov
push
and
into
rcl
mov
jecxz
in
outsb
fcomps
mov
pop
dec
sbb
ret
out
jmp
fidivrs
cltd
jl
enter
mov
xlat
ds
sub
imul
subb
ja
aas
sub
imul
push
pushf
sti
dec
pop
pop
and
lret
sub
push
imul
repnz
jb
and
or
shlb
mov
je
pop
or
sti
sub
fsubr
stc
js
cmp
or
push
pusha
pushf
lea
je
call
stos
pushl
movb
mov
movb
lea
call
push
call
add
imul
add
mov
inc
nop
fstl
dec
pusha
aaa
push
push
mov
mov
shr
ljmp
xor
out
xchg
push
mov
jg
xor
add
test
push
push
aad
mov
xchg
das
jae
stos
push
bound
leave
dec
daa
cmp
push
fcmovne
andl
repnz
dec
push
into
sbb
xor
xchg
push
xchg
mov
pop
sbb
in
cmpb
cld
shll
pop
push
out
push
adc
lods
fldenv
cltd
js
imul
jbe
ss
sub
stos
test
fs
sbb
mov
hlt
das
inc
pop
push
mov
push
pop
inc
out
aaa
data16
mov
gs
in
jne
shll
push
push
mov
push
scas
or
mov
jecxz
jmp
scas
xchg
ljmp
das
pop
test
inc
dec
fwait
push
or
clc
std
mov
inc
and
test
pop
cmc
test
mov
pop
inc
adc
or
sbb
cli
push
add
fcompl
adc
pop
push
add
sarl
push
add
and
push
adc
jns
pop
xchg
mov
outsb
adc
inc
pop
clc
cmp
popa
ret
ljmp
cmp
in
mov
and
or
push
mov
movb
or
xor
ljmp
dec
xor
pop
outsl
sbb
mov
pushf
mov
push
cmp
ljmp
fsubrs
cmp
ret
xchg
call
jmp
cld
movsl
and
aas
or
pusha
outsl
lock
lcall
stos
fs
bound
mov
or
aaa
in
fldl
mov
jno
jae
xchg
inc
xchg
adc
or
sarb
scas
jle
test
xchg
sbb
ljmp
mov
loopne
mov
pop
dec
shll
cmpsl
dec
ret
ret
mov
jmp
scas
mov
jae
mov
outsl
jecxz
pop
pop
cmp
test
inc
ljmp
cmpsl
xorb
push
std
mov
mov
aas
mov
xchg
xchg
jp
mov
cmp
div
jnp
mov
cmp
adc
icebp
push
pop
mov
or
pop
stc
int3
inc
fstps
daa
adc
arpl
xlat
xor
out
add
mov
xor
jbe
aam
bound
mov
mov
xor
jae
pop
pop
jl
jno
inc
ret
mov
flds
imul
leave
ljmp
jne
push
in
xor
mov
loope
inc
xchg
sbb
mov
mov
add
roll
pop
jne
cwtl
movsl
movsb
jae
fwait
dec
cmpsb
ljmp
push
adc
test
ss
call
icebp
pop
movsl
xor
loop
rolb
mov
out
push
push
es
jno
scas
jge
ret
pop
imul
or
lea
call
push
call
call
pusha
push
lea
jae
clc
sub
call
ror
mov
push
jmp
call
pushf
movb
lea
jne
mov
call
lret
nop
inc
xchg
out
fs
sbb
inc
push
iret
cmp
sbb
cwtl
and
es
mov
jmp
mov
mov
cmp
test
cmp
jmp
xchg
outsb
xchg
lds
scas
stc
sub
je
xor
push
or
xor
xor
cmp
and
mov
push
pop
je
cld
insl
xor
call
sub
outsb
xor
imul
and
sub
jns
pop
mov
loop
data16
fsts
pusha
or
adc
sbb
add
movsb
add
out
pop
jmp
fmuls
lods
stos
movsb
add
add
push
je
ljmp
pushf
sahf
sti
pusha
inc
addr16
test
mov
xor
mov
ret
pop
mov
bt
test
cmp
movb
movb
jmp
mov
mov
leave
int
jge
cmp
sahf
scas
shl
call
or
popa
imul
sbb
inc
inc
aad
and
or
xchg
popl
out
pop
out
aad
push
out
xor
push
loopne
popa
dec
out
adc
dec
fwait
push
shrl
mov
pop
es
ret
cmpsb
inc
add
jmp
pusha
call
jmp
push
push
mov
lea
jmp
add
fisttpl
add
add
add
add
add
add
add
add
mov
add
add
add
push
mov
mov
ret
inc
xchg
stc
jecxz
loop
out
jg
lahf
cli
sarb
popf
cmp
jge
adc
mov
test
mov
les
out
adc
lret
loopne
aas
test
push
shrb
cmp
cmpsl
outsl
mov
xchg
sbb
xor
jg
fs
pushf
xlat
out
inc
sbb
push
push
add
cmpsb
or
adc
shr
sahf
push
stos
imul
mov
dec
push
ret
add
jle
push
loop
push
cmp
shr
mov
pop
and
sub
imul
push
push
data16
adc
lds
fsubrs
ret
push
xlat
mov
push
aaa
fldenv
mov
mov
mov
inc
rcrl
pop
in
leave
mov
mov
push
mov
cmpsw
fbld
addr16
stc
movsl
aam
stos
jb
lcall
sbb
test
popf
sub
jle
sbbb
std
inc
cmp
pop
mov
sti
lock
ljmp
filds
stos
cltd
andl
xchg
and
out
sti
hlt
test
mov
or
inc
test
pop
shr
in
sub
sub
xchg
mov
push
add
in
notb
das
mov
mov
cmc
pop
mov
xorb
push
cmp
inc
push
int
sahf
jnp
jmp
cli
test
xchg
fwait
or
mov
mov
dec
loop
addr16
stc
pop
add
arpl
lods
movsb
movsb
jne
cmpl
pop
repnz
push
push
aam
adc
lock
aas
cmc
sub
in
dec
mov
xor
push
cwtl
and
cmp
dec
or
adc
scas
rclb
xor
dec
inc
pop
hlt
adc
dec
dec
fldl
xchg
scas
pop
push
dec
sahf
vshufpd
aad
std
mov
inc
lods
jae
fiadds
repz
inc
push
pop
cmp
mov
mov
or
arpl
mov
pop
scas
ficompl
jae
dec
int3
or
sub
pop
xchg
shlb
add
lods
cmpsl
push
jnp
mov
mov
lods
or
jg
jne
icebp
fwait
addr16
jae
pop
push
lahf
pop
sahf
iret
xchg
or
xorl
sub
xchg
push
push
adc
js
lods
cmp
push
pop
mov
pop
pop
ljmp
mov
mov
cmpb
cmp
sbb
push
add
or
xchg
add
fists
pop
int3
or
xchg
jle
loop
mov
push
jo
mov
jns
lods
inc
aas
iret
xor
in
mov
xor
lret
or
jge
dec
inc
jp
add
mov
mov
cmpsb
cmp
lret
rcrb
inc
ljmp
pop
cmp
fldt
ds
or
int
cli
adc
cmp
out
xchg
pop
aad
roll
jg
repnz
es
dec
jbe
gs
mov
jp
mov
inc
sarl
sbb
jge
sti
adc
inc
mov
out
pop
popa
mov
fadds
inc
inc
mov
scas
push
rorl
pop
dec
lods
scas
jnp
xchg
mov
jnp
sub
icebp
adc
pop
pop
and
ja
push
je
or
push
mov
jbe
push
popa
sbb
jge
mov
mov
mov
sub
or
xchg
mov
aad
out
jno
scas
mov
shlb
add
mov
adc
push
pushf
cmpsb
js
lds
jb
push
cs
mov
aaa
cmp
and
push
dec
pop
mov
sbbb
cmp
push
cmc
adc
repz
inc
aas
cs
lret
inc
lock
lret
inc
jns
repz
cmp
sbb
xchg
lock
push
push
sarl
inc
or
rcrb
sub
mov
push
dec
or
cltd
mov
stos
les
push
xchg
pop
xchg
push
xor
or
push
mov
fdivrs
ret
aad
loop
dec
stos
in
xchg
pop
jmp
xor
data16
push
outsb
lods
repnz
mov
sbb
lcall
dec
lahf
lret
dec
jp
sub
pop
adc
add
mov
push
outsb
pop
mov
fmuls
xchg
mov
pop
push
inc
cmpsb
inc
test
idivb
inc
testb
mov
cs
inc
sbb
cmp
push
or
dec
sbb
ja
ja
sbb
pop
addl
pop
push
jge
int
popa
sub
lock
adc
jle
adc
xchg
es
inc
sub
out
add
inc
cmp
lods
mov
jne
out
push
sbb
push
xor
xor
sbbl
pop
sub
subl
lret
cwtl
rcrl
cmp
mov
test
repnz
mov
ret
add
sub
je
aad
push
push
data16
pop
add
adc
idivl
xchg
mov
and
sub
push
fs
add
cltd
and
mov
test
subl
in
rcrl
jb
jge
and
push
lods
jge
jnp
inc
jns
mov
mov
add
push
and
pop
outsb
cmc
jne
call
mov
mov
test
xor
jle
into
dec
jbe
hlt
adc
pop
ret
pop
sbb
ds
or
mov
dec
mov
dec
das
inc
xchg
jmp
imul
sub
xor
add
push
push
dec
loope
push
mov
sarl
test
pop
push
frstor
fimull
shrb
mov
pop
mov
mov
push
leave
ljmp
pop
mov
pop
mov
or
clc
dec
lcall
push
cs
sahf
movsb
outsb
cmc
lret
daa
in
jnp
jb
and
out
mov
ljmp
cmp
insb
scas
inc
and
sub
aam
push
lods
mov
shlb
mov
loop
push
lahf
popl
push
add
int3
sub
jge
andl
mov
or
jo
in
add
or
cmc
mov
adc
pop
lcall
mov
out
sbb
pop
push
ja
fnsave
push
adc
shr
inc
xor
fs
add
call
xor
bnd
mov
data16
ds
dec
imul
test
cmp
push
mov
into
adc
jg
aad
out
shr
jno
sub
js
aaa
mov
or
cmp
pop
push
or
jl
xchg
insb
jmp
xchg
cmpsb
jmp
nop
stos
test
sub
cmpsb
pop
popa
adc
outsb
jl
daa
push
shll
adc
test
pop
fildl
ds
inc
add
xlat
mov
xor
ret
inc
out
mov
aas
mov
or
incl
les
lock
mov
test
or
aam
mov
cli
out
cld
out
mov
mov
pop
and
push
outsl
fcmovu
add
je
lcall
jge
jnp
aaa
outsb
jbe
mov
aam
mov
push
rcrb
imul
and
pop
mov
xchg
push
int3
test
mov
lock
adc
dec
and
les
adc
test
or
mov
pop
pop
gs
out
addl
pop
mov
mov
inc
daa
dec
das
mov
fimuls
sub
cmc
push
bound
push
push
push
shr
xchg
mov
push
xor
fidivrs
testb
xor
push
lahf
push
pop
and
push
shrb
out
loopne
jae
push
xchg
repz
loop
ret
add
mov
push
cmp
push
dec
pop
inc
cltd
nop
push
mov
dec
inc
jns
rorl
mov
sar
aad
negl
mov
mov
adc
mov
aad
call
lds
dec
daa
xchg
loopne
adc
insb
dec
jb
xchg
inc
jb
fs
push
lea
adc
int3
mov
in
in
ret
mov
adc
xchg
loopne
pop
sar
sbb
gs
xchg
push
adc
rorl
icebp
pop
cmp
in
add
and
sub
adc
movsb
pushf
cmp
loopne
dec
xchg
mov
adc
aad
outsb
sbb
xor
cs
sarb
in
or
adc
push
shlb
dec
fcoml
cmp
cmpsl
and
imul
fs
and
inc
ret
enter
loopne
mov
xchg
xchg
cs
andl
pop
cmp
jnp
lods
fs
dec
dec
aas
ret
popf
sub
mov
push
pusha
dec
scas
loopnew
call
and
popf
mov
cltd
in
sub
jg
jo
xchg
orl
xor
pop
arpl
xor
xor
repz
mov
adc
outsb
mov
jne
dec
aam
data16
or
out
or
out
cmp
jno
aaa
or
test
push
int3
lds
ficoms
cld
in
adc
pop
data16
jl
push
xchg
dec
xor
pop
dec
ret
or
and
push
or
adc
cmp
sub
inc
jnp
insl
cmc
cmp
xchg
dec
in
pop
xor
cmp
push
push
fs
pop
fnsave
push
xchg
pop
popa
ds
sbb
imul
repnz
dec
sahf
mov
addr16
sub
jmp
test
sbb
fsubrl
sub
mov
mov
xchg
push
xor
dec
lahf
pop
pop
movsl
repz
sbb
push
lods
lahf
or
and
cwtl
inc
pop
cmp
push
scas
mov
mov
fcoml
cmp
insl
add
or
out
leave
jns
fdivrl
hlt
stc
mov
leave
mov
fstpt
int
ret
lea
lea
push
mov
cli
imulb
loopne
lcall
and
or
cs
fdivrl
mov
out
xchg
popa
lret
dec
jg
jg
jno
and
pop
lahf
jnp
test
mov
imul
daa
dec
fcompl
test
or
in
fisttps
jo
cmpb
ret
xor
stc
pop
push
fs
hlt
add
shll
push
mov
push
cmpsl
xor
adc
imul
jno
dec
sub
loopne
ret
cld
and
stos
rol
jle
inc
jnp
and
loop
bound
or
in
or
icebp
lds
push
xchg
mov
adc
inc
imul
xchg
call
movl
push
movb
pushf
push
lea
jmp
lea
jae
mov
call
pushl
movb
movl
pushf
pushf
movl
mov
push
mov
mov
push
pushl
ret
jmp
call
pop
pushf
pusha
movl
call
push
lea
mov
cwtl
mov
bswap
call
push
adc
fstpl
and
add
and
add
sub
and
mov
aas
shrl
push
icebp
push
aam
data16
icebp
jmp
scas
xchg
sub
xchg
hlt
in
jle
xor
mov
mov
sub
addr16
mov
xchg
dec
sarb
jnp
pop
js
mov
roll
shll
rcr
mov
btr
shrd
and
mov
jmp
push
jmp
mov
shl
adc
test
push
mov
bt
xor
cmc
cmc
pusha
repnz
pushf
mov
pushl
lea
jmp
jle
jl
dec
or
stos
mov
mov
in
mov
cld
cmp
push
lods
inc
leave
cmp
je
jns
dec
int3
in
imul
dec
sbb
xchg
jno
pop
jg
movsl
mov
mov
xchg
xchg
addr16
mov
cmp
fs
jns
push
scas
mov
out
outsb
out
lock
jno
mov
xlat
cwtl
and
sbb
insb
sti
rcrb
xchg
fwait
popf
lret
push
cwtl
lret
or
mov
stc
je
jne
icebp
pushf
cmp
adc
jmp
xchg
mov
mov
cmp
js
cmp
fwait
mov
andl
sbbb
loop
and
orl
movsb
ret
adc
dec
mov
lcall
pushf
and
das
ret
fwait
in
in
add
lcall
jae
jecxz
mov
jnp
into
xchg
ficoml
xchg
push
ja
scas
loop
pop
mov
jnp
in
flds
rorl
sbb
jnp
bound
and
adc
xlat
adc
mov
inc
sbb
xchg
cwtl
dec
ud0
sub
add
cmp
push
gs
out
pop
out
clc
cmpb
jle
ficomps
xchg
mov
enter
mov
jecxz
xchg
addl
cltd
popf
adc
int3
mov
pop
lahf
sbb
inc
leave
in
xchg
outsb
adc
push
setns
lea
inc
jno
cmp
or
addr16
sub
pushf
mov
enter
adc
in
or
fwait
push
lret
adc
rcrl
xchg
dec
sti
in
jecxz
dec
mov
mov
add
scas
mov
fildl
mov
push
jae
jns
inc
adc
sti
add
fistl
dec
pop
xor
ja
or
stc
test
mov
dec
dec
and
loope
inc
sbb
jecxz
mov
xor
or
cli
ljmp
rcll
fwait
push
xchg
test
fimull
mov
fldt
cmpl
add
sbb
xor
cmovnp
bnd
test
add
out
arpl
mov
cltd
mov
adc
inc
lret
pop
xchg
popa
push
sbb
and
mov
mull
add
loop
or
or
pop
push
sbb
jb
bound
js
iret
jno
dec
pop
mov
ret
adc
inc
loop
dec
add
jmp
popf
dec
push
fcomi
mov
loope
fstl
lcall
pop
sbb
sbbl
aaa
add
mov
inc
aam
mov
div
sbb
test
jp
mov
dec
loop
xor
pop
pop
jecxz
pop
cli
out
jmp
iret
jnp
std
fstps
push
sahf
test
cltd
mov
add
mov
fidivl
inc
inc
mov
cmpsl
sbbl
add
shlb
fsubrs
mov
add
out
fwait
jb
jno
sbb
mov
jp
lahf
std
xor
cld
ret
in
push
add
dec
pushf
mov
sub
or
push
xchg
aam
inc
btc
add
stos
das
mov
ret
jb
mov
test
pop
cld
shr
pop
out
fst
or
rol
adc
cwtl
faddl
in
mov
adc
sbb
cmovp
mov
daa
pop
jecxz
mov
out
push
clc
xor
lds
add
cmpsb
sub
mov
pop
jecxz
dec
pop
jmp
test
sbb
insb
sbb
mov
lret
orb
out
icebp
daa
push
and
fidivrl
ret
jecxz
xor
das
mov
lods
ror
rcrb
js
jecxz
mov
lret
pop
cmp
movsb
mov
fwait
leave
divl
lret
jecxz
pop
mov
leave
mov
negl
popl
out
jns
lods
mov
pop
outsb
sbbb
mov
test
arpl
cmp
jecxz
lahf
xlat
xchg
in
fcoms
push
fisubrl
ja
in
sub
or
mov
hlt
sbbb
cld
mov
add
fcompl
into
mov
sbb
jne
in
pop
jg
mov
jecxz
adc
lods
sarb
or
jle
enter
stos
lcall
inc
shl
jle
arpl
jns
push
push
and
adc
jecxz,pt
lcall
lahf
fcmovnb
cwtl
arpl
es
mov
dec
in
push
xor
das
enter
pop
rcrl
jbe
fs
or
mov
in
out
leave
orl
jne
fldl
dec
setp
mov
jecxz
cmp
inc
fisubs
xchg
imul
xchg
lahf
dec
fistpll
cmpsb
fistl
cwtl
movb
loope
mov
xchg
aas
adc
pop
shlb
xor
loop
cli
adc
add
mov
and
add
out
xor
jmp
sub
mov
mov
mov
mov
mov
mov
xchg
popf
mov
daa
or
xlat
jecxz
mov
pushf
iret
imul
outsb
stos
lds
fistpl
sub
mov
adc
add
cltd
movsb
jmp
jne
int
pop
xchg
ret
mov
add
dec
out
aad
push
push
dec
mov
out
mov
add
xchg
mov
xlat
inc
inc
faddl
ret
inc
loope
cmp
and
cmp
and
jnp
in
les
les
mov
inc
xchg
adc
cmp
and
adcl
mov
xor
xchg
jp
loop
xchg
and
jae
inc
pop
subl
pop
and
jmp
xor
cltd
dec
xor
aaa
or
movsl
sbb
mov
xchg
jnp
adc
lahf
mov
xor
mov
dec
fistpl
xchg
sub
lock
ds
inc
add
ja
subb
call
mov
adc
mov
mov
in
mov
test
push
mov
lret
xlat
inc
shlb
sbb
mov
cs
lret
ss
repnz
dec
pop
shrb
inc
jecxz
sarl
mov
aaa
add
loopne
dec
jno
dec
adc
scas
inc
xchg
and
xchg
lret
cs
mov
pusha
sub
int
dec
movsb
jne
in
stc
lret
jg
sbb
aaa
lds
popa
sbb
clc
dec
xchg
xor
add
and
pop
aaa
lret
xchg
ret
out
shlb
ds
fistpl
mov
add
jl
jecxz
add
inc
test
aas
fidivrl
adc
cmpsb
dec
out
sbb
mov
int
stc
rcr
adc
mov
ja
or
ljmp
bound
add
pop
add
shl
jnp
adc
fsubl
and
loop
mov
enter
jle
dec
fcmovu
fistl
movsb
scas
enter
lcall
jmp
aaa
push
in
sbb
unpckhps
pop
cmp
mov
mov
sahf
lcall
je
cmp
lock
jne
fisubrl
repz
sti
ja
cmc
subb
xchg
stos
jecxz
enter
mov
pushf
dec
test
and
iret
fwait
mov
aas
addr16
mov
fiadds
hlt
mov
mov
sub
sti
fcmovnb
adc
fldcw
adc
lret
jecxz
pop
pop
xchg
adc
inc
sub
jbe
inc
sub
mov
rcrb
jns
push
out
push
inc
sub
cmp
sahf
leave
outsl
inc
push
mov
inc
jecxz
sahf
pop
add
dec
jbe
mov
pop
mov
les
out
xor
mov
xchg
ret
scas
popa
pop
cld
inc
in
add
cwtl
mov
xor
pavgw
and
leave
aam
jno
or
ficompl
or
adc
test
data16
arpl
pop
pop
jb
fs
push
enter
or
sub
rolb
xor
js
ret
cmp
push
mov
data16
test
dec
addb
pushf
mov
mov
pop
push
adc
mov
rorb
jns
pop
mull
fldcw
cltd
cmpsl
into
out
int
pop
jl
push
popa
out
scas
loop
ret
xchg
fs
add
mov
arpl
add
fwait
sub
jne
pop
testl
mov
mov
adc
out
fcmovu
mov
and
inc
shll
and
jae
bound
stos
sar
out
popf
shlb
xor
cs
cmovnp
push
add
ljmp
mov
cli
call
xor
cmpsl
xchg
adc
pop
mov
cmp
jecxz
hlt
or
pop
inc
pop
aaa
fdivrl
pop
cltd
push
loopne
sbb
pop
arpl
mov
lret
icebp
loop
ja
adc
fs
jne
xor
aam
ret
out
mov
and
or
pop
lods
inc
and
ffree
fcomps
fdiv
cmc
mov
inc
sbb
fsubs
loop
cmc
xlat
cmp
adc
inc
ds
movsb
int3
inc
or
adc
leave
mov
mov
push
fstp
loope
and
lahf
shrl
out
jne
xchg
mov
jne
pop
cmc
mov
inc
xor
popa
pushf
ds
xchg
jnp
fstps
dec
nop
stc
addl
jge
in
leave
cli
mov
repz
ret
cmpsl
xor
ret
push
sbbb
test
pop
xchg
sub
push
jmp
lret
addb
out
jne
jle,pn
mov
cmp
test
lret
out
mov
and
adc
in
xchg
sbb
mov
inc
popf
daa
add
mov
repz
rcrb
push
sub
test
filds
dec
clc
mov
inc
in
popa
lahf
inc
pop
push
in
lret
pavgw
xchg
pop
mull
jmp
mov
daa
fcoms
sbb
aas
mov
fwait
xchg
lcall
mov
xchg
mov
sub
add
cmpl
cmp
dec
xchg
push
and
loopne
mov
movsl
xor
std
inc
stc
jne
js
lods
jl
loopne
push
cmp
pop
pop
and
inc
mov
fisttpl
jle
icebp
jnp
cmp
sar
adc
jmp
mov
popf
push
es
loope
out
pop
gs
mov
stos
mov
shll
add
mov
jnp
cmp
rcll
push
mov
push
push
sub
mov
jecxz
xor
lock
pop
std
mov
lahf
mov
push
lds
mov
mov
mov
push
cmp
dec
sbb
incb
xchg
jecxz
xchg
sbb
and
pop
sbb
jne
mov
cld
push
mov
xchg
divb
jae
fldcw
mov
or
add
lcall
mov
lock
xchg
inc
in
mov
fcomi
xchg
sbb
loope
jmp
mov
lods
mov
negl
ja
test
dec
mov
out
out
mov
aam
arpl
mov
ret
mov
sar
jle
add
loopne
mov
pmuludq
push
lret
dec
mov
jecxz
js
repz
sbb
adc
lods
in
sti
xchg
jne
sbb
loope
out
btc
faddl
add
dec
add
push
pop
lret
scas
negl
insl
pop
dec
push
out
adc
add
fmull
pop
inc
les
pop
push
add
jg
cltd
add
jg
push
test
iret
in
mov
aaa
ficompl
outsl
sbb
add
add
add
aaa
push
mov
pop
popa
sub
mov
loop
mov
mov
jno
outsb
lahf
lcall
in
clc
mov
cmpsl
dec
jecxz
push
inc
jnp
mov
aaa
imul
pop
sub
xor
mov
mov
jmp
out
add
mov
mov
sbb
sub
add
adcb
ret
fs
mov
dec
aaa
mov
dec
pop
push
mov
stos
pop
out
mov
mov
mov
jnp
into
stos
mov
roll
sub
push
aaa
sub
jle
arpl
int
add
mov
fs
jmp
inc
scas
or
xchg
jmp
pop
out
loop
out
sbb
mov
jns
or
sbb
test
mov
pop
fsincos
push
jae
mov
fdivrl
dec
ds
mov
fs
add
xchg
and
xchg
add
dec
pop
mulb
fldl
pop
mov
or
call
mov
dec
jecxz
inc
jge
cmpsl
xchg
lret
and
add
shr
jp
packsswb
mov
sbb
mov
out
mov
lcall
and
lds
sub
mov
xchg
mov
dec
insb
cwtl
lds
scas
sbb
mov
adc
lcall
mov
pop
push
xorb
mov
jno
and
sbb
and
test
std
jo
mov
jl
scas
shl
repnz
mov
xor
dec
in
lcall
or
addr16
iret
lock
cld
mov
pop
mov
mov
ss
daa
ret
xchg
in
adc
sti
cli
enter
std
mov
jecxz
loope
loopne
adc
sub
test
and
in
out
pop
out
stc
mov
mov
hlt
cltd
fildl
in
lret
lods
inc
cltd
js
mov
mov
popa
adc
sbb
xchg
sbb
cmp
xor
rorb
ss
xchg
jg
mov
lock
xchg
arpl
xchg
mov
es
pop
mov
sbb
lret
adc
dec
outsl
push
inc
ret
lcall
stos
out
adcb
cltd
adc
xchg
adc
sub
test
andl
arpl
mov
sbbb
dec
imul
mov
sti
inc
and
cmp
mov
incl
lods
mov
bound
addr16
sub
jge
movsl
cli
icebp
xlat
jo
arpl
jg
stos
mov
shrl
sahf
push
pop
inc
lds
mov
xchg
pusha
outsb
mov
push
inc
aas
roll
ljmp
pop
ds
sbb
mov
dec
mov
sub
fninit
shlb
loop
xor
add
xchg
arpl
in
outsb
pop
ret
add
ret
in
and
pop
mov
loop
sti
sbb
mov
adc
cltd
sti
clc
or
dec
mov
push
xchg
movsb
loop
jb
mov
add
pusha
push
ret
mov
cmpb
sbbb
xchg
out
in
ss
xchg
loope
pop
iret
mov
movsl
lcall
lcall
int
out
jnp
rcrl
jns
xor
mov
fwait
mov
sub
into
mov
ficoml
dec
push
push
adc
cwtl
cld
fwait
inc
out
aad
sbb
jmp
add
fucom
xchg
sti
flds
pop
push
and
mov
push
inc
iret
fwait
xchg
mov
mov
adc
mov
pop
cmp
mov
pusha
or
mov
arpl
hlt
test
cli
mov
loop
jmp
aad
cltd
aas
test
xlat
aad
pop
orl
xchg
adc
inc
xor
push
dec
mov
pop
ds
mov
xchg
sbb
leave
add
inc
ret
push
push
jnp
jb
xchg
mov
inc
pusha
xchg
xchg
aaa
sbb
ss
ss
inc
and
xor
outsb
mov
stc
sub
xor
sbb
stc
jg
inc
dec
das
lods
mov
in
repz
jp
in
dec
fimull
mov
mov
xchg
mov
inc
icebp
inc
pop
incb
mov
or
push
mov
add
subb
pop
fsubrs
lock
xchg
mov
xchg
faddl
jno
jp
pusha
out
inc
popa
idiv
ljmp
in
pop
fwait
mov
fs
cld
shr
pop
xor
sbb
aad
jnp
xlat
rcll
out
push
enter
mov
out
xchg
push
scas
jb
inc
fildll
and
cltd
mov
out
xchg
jl
packssdw
mov
aad
or
das
fldenv
outsl
and
inc
jae
adc
mov
fstpl
shlb
inc
mov
hlt
push
movsb
sub
jge
jnp
aaa
in
dec
adc
out
adc
push
insl
push
mov
mov
inc
jnp
push
hlt
adc
daa
add
sarb
cmp
mov
jne
adc
mov
int3
fsubl
cld
rcrb
jp
xchg
sub
cmp
mov
jae
add
sub
sub
subl
xor
dec
cmp
mov
jle
cmc
xchg
and
jmp
mov
stos
lds
sub
mov
in
sti
imul
cmovo
pusha
mov
jno
lret
jmp
sub
test
pushf
repnz
xchg
loop
fistpll
ret
pop
fcmovnu
dec
fcmovne
lret
test
mov
or
outsb
fidivs
negb
add
mov
insb
call
sbb
cmp
mov
loope
incl
xor
orl
mov
mov
fcmovbe
cmp
pushf
aas
mov
cmpb
add
or
das
pop
push
cli
push
jne
xchg
mov
and
sti
insb
mov
outsl
add
enter
add
mov
lret
inc
adc
jno
leave
and
std
jle
cmpb
fsubr
mov
repz
outsl
clc
mov
and
xorb
adc
or
repz
movsb
into
jnp
lret
sar
in
xor
adc
adc
out
divl
mov
loope
pop
inc
fmuls
das
dec
xlat
add
arpl
or
inc
je
in
fldpi
push
xchg
push
fsubrs
aas
inc
dec
pop
mov
aas
cmpsb
push
push
jecxz
xor
xor
int3
in
xchg
lcall
inc
jmp
fcmovu
adc
push
mov
xchg
loop
xor
xchg
xchg
mov
lds
scas
mov
sub
ret
pop
in
xlat
sub
cltd
loop
jmp
sub
or
sbb
leave
in
mov
test
mov
mov
push
jecxz
dec
and
cmp
jae
xchg
arpl
sarl
sarb
loop
testb
mov
sti
pop
and
sarl
fcompl
push
pop
push
push
mov
idivb
into
mov
and
adc
sub
scas
stos
shrb
jnp
in
or
rcrl
mov
push
shlb
test
mov
out
add
sbb
ret
adc
mov
outsl
pop
mov
mov
xor
push
daa
rcrb
mov
ret
sbb
sub
inc
add
int
pop
sub
mov
adc
ret
adcl
add
mov
xchg
cli
add
mov
pop
xlat
int
push
mov
mov
push
test
loop
xorb
in
aam
negl
cmc
and
mov
dec
lret
ret
mov
data16
mov
pusha
sub
inc
aaa
leave
jp
xchg
pop
add
pop
or
dec
jecxz
inc
mov
push
pop
mov
xor
xchg
xor
mov
adc
daa
or
jecxz
mov
jae
test
sbb
jo
pop
pop
sub
out
into
adc
pop
imul
rolb
repz
loopne
pop
cmp
in
adc
rorb
cmp
fidivs
je
mov
inc
sbb
out
outsb
mov
test
adc
mov
mov
mov
cld
cmpsl
add
int3
xlat
std
fwait
mov
push
lock
sub
cltd
es
cltd
stos
dec
push
sbb
xchg
sbb
jge
aaa
push
mov
mov
cmp
or
mov
dec
or
daa
sub
xchg
xor
adc
cmpl
xorl
mov
xchg
stos
mov
mov
jae
push
arpl
push
pop
pop
xor
push
pop
sbb
jecxz
inc
sbb
lret
push
test
sub
pop
sbb
push
cmpb
stos
subb
inc
cmpsl
cmp
xor
sbb
fadds
xlat
arpl
pop
inc
adc
test
push
cmp
imul
dec
lret
fiadds
sbb
aas
lahf
ss
cmpsl
sbb
mov
aaa
arpl
mov
ficoml
outsl
push
sub
xchg
dec
rdtsc
sbb
and
mov
or
xchg
xchg
push
lahf
jne
lret
cmp
andb
rcr
fbld
xor
or
pop
jae
movl
pop
pop
pop
adcb
dec
add
inc
mov
mov
pop
or
roll
mov
add
pop
sbb
rcrb
sbb
cmp
lahf
pop
addr16
stos
mov
dec
xor
inc
inc
lret
mov
repz
mov
xor
or
pop
addr16
sbb
or
mov
and
mov
sbb
adc
mov
sub
cmp
or
mov
inc
push
push
cmp
addr16
add
imulb
ja
repz
lfs
sub
mov
dec
pusha
inc
xchg
jnp
out
push
das
xchg
jmp
sub
inc
sti
iret
jmp
sbb
test
push
fucomi
rcll
repz
int
aas
xchg
jecxz
lcall
mov
ficoml
test
push
jb
int3
scas
cs
push
mov
dec
mov
loop
mov
xchg
psrad
stc
push
imul
mov
xchg
cmc
scas
sbb
pop
add
lret
js
hlt
mov
fwait
lcall
add
or
jmp
cmp
or
cmp
loopne
shrl
pop
loop
jnp
pushf
sbb
sahf
pop
add
mov
dec
push
stos
push
mov
lret
icebp
inc
arpl
xor
dec
add
out
shll
rcrl
pusha
shrb
jecxz
fistps
xchg
pushf
push
imul
xchg
cltd
pusha
pop
xor
in
daa
sbb
sub
cmc
xor
xchg
in
or
lds
or
dec
in
enter
test
sbb
aad
dec
mov
scas
fnsave
mov
lcall
push
ficomps
fildl
sub
xlat
test
add
cli
leave
rol
and
push
addb
in
jecxz
dec
ds
fucomi
xchg
cltd
mov
mov
inc
mov
sti
repz
xchg
jecxz
fisttpll
dec
add
nop
sub
xchg
push
pop
fildll
es
and
adc
movsb
out
xchg
mov
ret
inc
adc
xchg
push
mov
in
shll
notl
cs
jecxz
inc
jecxz
jnp
loop
add
mov
in
ds
xchg
mov
sti
inc
fmuls
roll
mov
or
arpl
shl
addr16
gs
lret
ja
mov
loop
clc
jb
adc
adc
push
fadds
bound
mov
push
orb
loopne
icebp
mov
cmp
pop
cmp
stc
loop
pop
cmp
cltd
dec
lds
xchg
push
mov
fwait
adc
in
les
mov
arpl
jecxz
loopne
push
add
insl
fisubl
or
pop
adcb
lds
stos
idivb
repz
lods
movsl
add
or
cmp
xchg
mov
bound
push
ljmp
xorb
mov
cld
lds
sbb
xchg
aad
dec
xor
or
mov
subl
and
jae
test
orb
test
xor
or
ret
push
push
jg
fnclex
pop
fsts
test
mov
rcrb
ds
dec
lcall
in
pop
jnp
pop
fisttpl
sbb
out
mov
in
inc
ror
icebp
lcall
sub
lds
inc
std
mov
pop
lock
push
xchg
lahf
inc
mov
adc
pusha
inc
push
sti
add
sub
fwait
arpl
push
or
add
mov
in
movsb
hlt
cmp
add
aad
push
push
shrl
in
inc
add
or
cwtl
add
js
rcrl
dec
mov
jne
fnstsw
mov
and
or
iret
das
push
jno
mov
or
add
jns
in
jecxz
cli
lock
jge
jle
pop
dec
and
negb
aad
push
xlat
pop
ret
xchg
ljmp
push
jecxz
cmp
adcl
lea
fsubrs
hlt
inc
sbbb
or
xchg
cltd
pop
clc
inc
repz
and
sub
arpl
fs
jnp
lahf
adc
sbb
mov
pushf
add
cmpb
mov
in
lcall
cmpsl
lret
pop
push
in
test
pop
mov
push
add
cmp
and
mov
jecxz
movsl
incb
push
mov
sub
rcrb
loop
lds
sub
pop
push
adc
mov
ret
and
add
imul
pop
dec
mov
mov
sarl
imul
jns
pusha
mov
mov
push
sub
mov
test
sbb
pop
mov
sub
jmp
adc
fwait
leave
test
sub
dec
mov
jns
inc
fwait
dec
xchg
sbb
adc
jne
inc
or
mov
mov
lahf
pop
mov
aam
xchg
or
enter
nop
pushf
push
out
mov
in
fsts
es
push
mov
adc
xchg
arpl
lods
leave
jno
or
push
pop
mov
jecxz
ret
lds
loop
inc
and
ja
and
lods
cmpsl
lret
stc
scas
rcl
xor
gs
sti
cmp
out
pushf
mov
or
aas
shll
jmp
xchg
adc
popf
and
gs
cmp
mov
jns
jmp
adc
push
xlat
pop
lds
rsqrtps
push
jmp
inc
ds
roll
adc
sbb
cmc
cmp
xchg
ret
sub
arpl
xlat
imul
enter
shll
pop
jmp
ljmp
jb
jo
push
fidivrs
xchg
inc
pop
loope
lcall
ret
add
fwait
pop
popf
inc
mov
filds
push
jp
mov
cmpsb
mov
mov
bound
pop
mov
xchg
cmp
insl
jg
pop
pop
icebp
pop
ss
adc
dec
lahf
dec
mov
fbld
int
lcall
lock
xchg
adc
iret
or
xchg
out
imull
cli
fwait
mov
mov
xchg
mov
jmp
mov
jb
fwait
enter
lahf
stos
sti
sbb
push
mov
inc
mov
in
sub
scas
lahf
lret
aaa
inc
add
movsb
lds
mov
les
out
adc
push
movsb
xchg
std
push
pop
fwait
or
lahf
mov
push
and
icebp
popf
mov
popa
xlat
mov
cmp
cmp
mov
sbb
repz
xor
mov
pop
scas
pop
inc
pop
fldl
jecxz
ficomps
test
cmp
xchg
mov
and
sbb
push
inc
xchg
jmp
pop
push
mov
jmp
mov
lea
pop
fisubs
leave
fwait
imul
lret
mov
adc
repnz
xchg
and
test
dec
xchg
mov
outsl
aad
or
jne
shl
add
mov
pop
inc
mov
nop
cltd
jno
cmp
shr
push
mov
or
inc
xchg
add
lcall
aam
mov
icebp
push
leave
cmpsl
call
sbb
fdivl
mov
lret
jnp
cmp
mov
mov
in
clc
xchg
cmp
cs
popf
mov
scas
xchg
push
lcall
rcrl
lahf
mov
add
fcompl
dec
or
jo
insb
jl
lds
lcall
repnz
out
in
pop
icebp
adc
ja
lcall
lds
dec
inc
cmp
cwtl
fadds
outsb
adc
lcall
mov
cmp
subb
xchg
sbb
mov
mov
push
pusha
or
adc
pop
mov
adc
movsl
sbb
and
add
xchg
ljmp
imul
jmp
jb
dec
nop
jecxz
cmp
fwait
sbbb
out
mov
mov
into
ficoms
xchg
add
adc
adc
or
sbb
int3
lods
loop
gs
dec
aam
sub
loop
dec
mov
test
rolb
cli
dec
add
sbb
iret
sarb
xchg
add
cmp
je
push
adc
cmpsl
mov
ss
mov
pop
lock
fnstcw
jb
add
scas
add
push
dec
dec
xchg
cmovge
pop
mov
mov
lods
sub
pop
testb
mov
lods
mov
les
out
cmp
fneni(8087
jnp
mov
push
xchg
ds
xchg
push
outsl
es
loope
loop
pop
adc
adc
das
xor
jnp
and
movsl
mov
nop
pop
pushf
xchg
fmull
mov
lcall
pop
stos
push
popf
adc
fisttpll
xchg
test
inc
pop
js
call
scas
push
inc
add
orl
loopne
mov
loop
or
jecxz
lret
sub
and
push
dec
jo
js
and
sbbb
leave
push
add
mov
inc
rclb
lods
arpl
xlat
clc
mov
and
insl
mov
jecxz
addb
xor
mov
cld
insl
push
add
xchg
dec
xlat
scas
inc
sbb
mov
lea
mov
fistpl
mov
mov
test
test
add
push
fnsave
mov
ss
add
out
jne
xchg
in
or
cmc
jae
jecxz
jno
mov
mov
jnp
push
jne
pop
test
mov
ja
sbb
out
or
and
xor
stos
jecxz
sub
ss
les
and
mov
orb
hlt
cmp
js
lret
mov
xchg
mov
test
pop
into
ss
jecxz
pop
cltd
sbb
push
aam
mov
test
mov
dec
xor
add
mov
sbb
fwait
and
out
push
inc
inc
xor
nopl
sub
mov
dec
fnstcw
add
xor
pop
ja
pop
jae
dec
push
lret
mov
nop
aam
sub
dec
int
and
dec
addl
bound
sbb
clc
mov
enter
mov
mov
jnp
pop
add
mov
mov
jmp
out
test
divl
adc
pop
mov
mov
sbb
rcr
inc
jae
insb
add
mov
addb
inc
ja
pop
dec
lret
xor
in
sbb
cmp
inc
in
mov
add
mov
imul
out
repnz
pop
jecxz
lret
mov
loop
or
rorl
inc
jecxz
jl
adc
mov
int3
push
sub
clc
jecxz
add
pop
fnstenv
jo
dec
push
xchg
test
adc
test
orl
jnp
out
clc
add
arpl
sbb
popf
add
mov
mov
pushf
adc
add
mov
cs
and
enter
lods
sub
lods
mov
sbb
lret
sbb
outsl
pop
imul
jbe
daa
nop
std
scas
xor
loop
dec
gs
inc
dec
lahf
or
sbb
sub
mov
daa
shlb
test
add
fwait
cmp
jb
loopne
jns
hlt
pusha
sub
fwait
jl
mov
fwait
add
sbb
cltd
jo
pop
cmpsb
dec
sbb
fcmovb
fwait
popfw
lods
js
test
fs
sti
loopne
scas
adc
cmp
fwait
fs
xorl
aas
jecxz
daa
mov
mov
das
and
cmp
js
cmp
lcall
push
mov
fwait
ss
ficompl
shrb
imul
int3
sbb
adc
pop
hlt
dec
sub
lods
fs
fwait
mov
pop
shrl
fdivrs
adc
mov
fwait
inc
in
int
scas
pop
inc
lcall
sbb
movhps
push
loopne
dec
fwait
ss
cwtl
adc
jmp
cli
xchg
fwait
xchg
jl
xlat
sbb
cld
fwait
shlb
and
lret
fwait
test
inc
scas
inc
push
lcall
mov
cwtl
cmp
stos
cltd
push
push
inc
push
pop
add
in
xchg
dec
nop
imul
pop
mov
fistl
mov
add
mov
cli
sahf
and
imul
push
test
cmc
xor
jae
inc
call
int3
ss
sub
add
inc
je
sub
mov
mov
ficoms
mov
sti
jb
jae
pushf
notl
and
movsb
push
push
fnstsw
cwtl
dec
add
dec
mov
daa
add
mov
sbb
je
pextrw
negb
sub
sub
mov
orl
adc
mov
mov
outsb
sbb
mov
sahf
fwait
mov
popf
mov
push
dec
dec
xchg
ficompl
scas
cld
sbb
in
scas
fwait
dec
sbb
and
mov
sbb
lods
in
push
addr16
jmp
add
xor
cmp
adc
fbstp
xorl
cmp
test
sub
inc
xchg
ret
add
sub
mov
test
jbe
lahf
xchg
mov
cmp
fiadds
push
testl
call
mov
push
fwait
mov
dec
shlb
lods
xor
and
cltd
sbb
or
pop
scas
call
pop
in
into
xor
xchg
stos
ret
sbb
mov
sbb
adc
jmp
in
data16
int
cmp
cli
cmp
std
out
jle
outsb
outsl
jae
sbb
lea
leave
add
jne
pusha
fwait
out
dec
and
and
xor
push
sahf
orl
mov
mov
mov
decb
cmpsl
in
popf
leave
jmp
arpl
and
and
fwait
pop
sub
outsb
fwait
inc
out
sti
inc
std
sbb
adc
cmp
fucomp
xchg
pop
lret
or
jne
mov
gs
xchg
fwait
dec
ret
xor
pop
fwait
push
movsb
push
repnz
inc
pop
lret
lcall
sub
push
sub
popa
pop
mov
push
push
cli
repnz
and
sbb
mov
xchg
inc
cmp
add
fcom
rclb
out
popa
pop
sbb
std
jge
out
popf
dec
outsl
push
push
fwait
test
in
aam
mov
or
stc
sub
in
rorb
pop
jbe
cmp
mov
mov
adc
push
fwait
lea
and
mov
push
fwait
mov
outsb
pushf
stos
or
sub
mov
cmp
icebp
movsl
fwait
push
inc
insb
call
fwait
lods
pop
or
adc
ss
enter
insb
push
mov
fwait
mov
subb
stos
aad
pop
fwait
xor
movsl
imul
mov
pushf
add
mov
inc
cwtl
sahf
sbb
push
xor
push
outsl
lods
sub
cmp
push
jnp
aad
loope
or
jae
pop
mov
sbb
xor
adc
xchg
cwtl
and
and
out
popa
fwait
sub
in
push
enter
fwait
mov
inc
rcrw
int3
mov
xchg
add
ret
inc
das
clc
mov
sbb
xor
push
arpl
mov
call
mov
movsb
pop
add
shlb
sbb
into
mov
lret
arpl
stos
cwtl
out
sbb
mov
fwait
push
sbb
fwait
imul
cld
je
in
lcall
fldcw
popa
mov
xor
push
fwait
std
dec
push
mov
push
pusha
call
jp
sbb
push
sti
imul
data16
sub
inc
int
mov
mov
pop
filds
nop
ja
jmp
push
insb
push
jmp
pushf
mov
mov
sub
shr
cmp
fwait
xchg
scas
add
lcall
lret
imul
aas
das
movl
sbb
inc
ror
pop
sbb
xchg
out
push
push
hlt
repnz
push
xor
jle
inc
aaa
mov
or
pop
imul
ds
psrlq
cmpsb
xlat
xchg
fwait
pop
dec
or
imul
push
repz
fwait
ja
ret
insb
loopne
sbb
fwait
out
pop
push
stos
andl
pop
shll
cmpsl
sbb
je
mov
cmp
push
inc
inc
in
fildl
push
sti
fwait
loopne
pop
pop
xchg
cmpsl
stc
jl
dec
mov
mov
clc
and
fwait
adc
scas
leave
sub
pop
mov
inc
fwait
insl
mov
pushf
cmp
sbb
cmpsl
mov
out
stc
movsb
xchg
sti
imul
or
lea
lock
and
loope
test
xchg
fdivrp
nop
inc
fwait
inc
je
ret
mov
pop
test
fwait
pop
add
fbstp
ds
addb
int3
loope
mov
outsl
and
test
inc
or
mov
jecxz
shll
cmp
cli
fimull
fwait
jnp
inc
repnz
sahf
mov
dec
and
xchg
inc
mov
test
imul
or
push
push
adc
pushf
jmp
negl
pop
cmc
pop
add
xchg
mov
imul
fdivs
movntps
mov
add
adc
fldl
pop
xchg
xchg
and
hlt
out
daa
scas
adc
mov
pop
or
mov
loop
mov
cltd
mov
ja
jmp
adc
mov
push
stos
xor
xchg
repz
mov
adc
lods
fwait
push
xor
addr16
push
aad
fucomip
jo
xor
aam
jecxz
mov
add
into
add
fwait
js
jbe
jmp
xchg
fistpl
cmp
fsubrp
xchg
rclb
cwtl
add
jo
shl
dec
data16
leave
ja
scas
ds
fisubl
movsb
adc
pop
out
fwait
inc
mov
cltd
cmpsb
push
fwait
imul
insl
mov
shl
cmp
out
sub
sbb
fwait
jns
inc
aam
loopne
ds
call
lds
fistpl
mov
inc
adc
xlat
lcall
xchg
out
and
in
pop
movsl
aaa
das
xchg
or
mov
popf
lds
mov
cmp
imul
gs
fwait
jmp
loopne
and
mov
pop
rcrl
xor
pop
ret
outsb
inc
imul
lods
sbb
xchg
xor
xchg
outsb
jnp
das
rcrb
mov
rcl
adc
fwait
push
fcompl
cwtl
fwait
loopne
cld
xor
add
lds
into
jns
hlt
leave
fwait
dec
sbb
inc
mov
xchg
rcrb
pop
inc
mov
xchg
popf
jmp
mov
bound
inc
loop
je
stc
dec
ljmp
das
inc
cmp
cmpsb
mov
fnsave
pop
jne
idivl
push
inc
sub
lahf
fwait
jl
jo
cwtl
mov
popa
fwait
jbe
and
xchg
pop
das
xchg
int
movb
ret
stos
seta
dec
es
cmp
jno
push
cmpsb
aas
xchg
sbb
xchg
jno
addl
mov
or
arpl
movsb
test
lcall
loop
pop
push
push
push
sbb
stos
lahf
add
in
mov
push
loop
ja
xor
and
dec
inc
inc
scas
punpckldq
mov
fwait
repz
mov
testb
add
aam
push
pop
out
or
cwtl
add
nop
in
mov
push
sbb
jnp
mov
mov
sti
add
bnd
cwtl
jb
sbb
sahf
movsb
imull
psrad
aam
xchg
mov
dec
add
decb
and
jae
lret
push
stos
addl
jecxz
push
cmp
rcrb
aam
jecxz
inc
push
mov
push
das
pusha
sbb
fldt
icebp
push
sbb
negb
or
rcrl
adc
movsb
jecxz
setp
pop
push
push
jmp
aas
ss
push
gs
pop
cwtl
push
or
ficompl
loope
movsl
add
vpackssdw
xor
xchg
fs
sbb
pop
jecxz
inc
jae
xchg
mov
in
cmpsb
out
in
and
mov
push
sub
mov
cwtl
arpl
jnp
and
adc
addr16
jl
loop
out
push
popa
and
dec
add
xchg
xor
jb
out
sbb
inc
rolb
sbb
addl
or
pop
mov
out
pop
mov
popa
imulb
xchg
sbbl
mov
flds
inc
dec
add
cs
xlat
xchg
lea
test
ret
mov
cmp
pop
iret
stos
pop
dec
into
inc
dec
push
pop
and
test
cwtl
push
dec
jmp
xchg
decl
pop
inc
or
mov
aas
sub
mov
jecxz
lods
mov
jae
arpl
adc
xchg
sub
pop
push
bound
or
loope
das
pop
mov
dec
push
jae
imulb
and
dec
mov
and
mov
ja
addb
repnz
xchg
sbb
nop
adc
insb
insl
pop
and
jnp
aaa
jae
xchg
mov
ja
or
jae
dec
inc
add
xchg
mov
pop
aad
js
mov
pusha
hlt
and
fistl
dec
inc
adc
mov
push
jmp
outsl
sub
aaa
xor
in
stos
lret
dec
mov
jecxz
add
push
es
scas
cmp
sbb
and
scas
xchg
sti
scas
mov
xchg
jns,pt
mov
aaa
or
inc
mov
dec
push
fwait
and
inc
xchg
mov
mov
jne
jnp
jmp
cmp
mov
mov
jae
and
or
mov
cltd
jecxz
jne
cltd
jae
sbb
mov
fistpl
stos
push
sbb
lods
xchg
push
jmp
mov
fmuls
inc
stos
lret
stos
fistl
jp
inc
mov
mov
cmp
cmpsl
fnsave
xor
comiss
push
imul
mov
repz
or
cmpsb
mov
les
shrl
xchg
aam
inc
sbb
jp
sbb
fisubrl
lcall
pop
ret
stos
jb
ficoml
mov
lahf
xchg
add
filds
adc
mov
fidivrs
pop
dec
xor
jne
adc
hlt
sbb
aaa
daa
add
sbbb
out
dec
mov
xchg
adcl
jb
mov
lahf
pop
add
mov
lock
inc
mov
pop
jmp
push
test
push
push
adcl
icebp
fistl
mov
add
orb
mov
popf
jecxz
fsubrl
mov
sub
cmp
inc
mov
add
mov
int3
fisttps
cmp
mov
mov
push
hlt
in
aaa
fucomip
add
mov
mov
adc
inc
xor
mov
inc
xor
das
shl
mov
sbb
jmp
xchg
lods
mov
mov
outsl
xor
sbb
and
inc
stc
or
add
stos
lea
pop
jg
xchg
cmp
jns
add
or
xchg
mov
test
pop
mov
and
pop
sbb
prefetcht1
inc
pop
fists
cli
ds
lret
pop
sub
mov
or
or
sti
mov
jno
inc
xchg
es
dec
jbe
push
ja
movlps
jae
pop
dec
mov
and
mov
cltd
int3
shl
mov
and
jecxz
into
sbb
cmp
cmp
and
mov
sahf
mov
iret
movsb
aam
and
stos
adc
or
ficompl
cwtl
mov
mov
or
xchg
or
mov
add
pushf
fisttps
sbb
inc
repz
and
add
cmpsl
xchg
in
js
aas
and
or
andb
testl
outsl
or
sahf
inc
push
mov
or
mov
add
insl
pop
shrb
push
sub
xchg
inc
push
fs
outsl
and
mov
mov
sub
mov
inc
pop
mov
push
stos
lahf
fs
and
lea
je
inc
inc
int3
mov
jp
push
mov
add
stc
cltd
push
or
in
cmp
les
ret
ljmp
xlat
rep
stos
pushf
fimuls
pop
add
cmpsl
xchg
dec
jecxz
lcall
inc
imul
stos
xor
dec
imul
nop
cmp
mov
xchg
fstpt
xor
jo
cmpsl
test
cmpsl
sahf
rol
pop
sub
push
or
leave
cwtl
sub
mov
cmpsb
ljmp
mov
popf
and
ljmp
popf
mov
pop
inc
test
mov
mov
arpl
mov
xchg
in
stos
sub
ja
stos
cmp
enter
xor
jae
or
mov
loop
cltd
movsl
inc
and
xchg
dec
orb
inc
out
mov
push
mov
or
fcmovbe
cltd
das
xlat
adc
dec
divl
xchg
pop
repz
cmpb
xchg
divl
jecxz
adc
xchg
xchg
mov
stos
fldt
inc
cmp
mov
jnp
cwtl
and
stos
jns
inc
in
cltd
mov
sbb
jge
fildl
pop
int
rcrl
aas
adc
ret
or
xchg
popa
daa
sbb
xchg
rclb
adc
cwtl
push
ret
mov
add
bound
out
xchg
ret
aaa
push
dec
mov
jnp
fs
sub
cmp
mov
dec
into
stos
and
imulb
xchg
dec
in
or
lahf
mov
mov
lcall
push
sbb
bound
xchg
xchg
mov
push
pop
sbb
add
negb
inc
inc
sbb
xchg
pop
inc
fsub
pop
jne
fdivp
test
insb
jecxz
les
dec
jns
popf
jg
xor
inc
mov
int3
mov
rcrb
xchg
push
and
into
stos
in
subl
jnp
sbb
jns
jp
loopne
jnp
jno
inc
dec
pop
mov
adc
xchg
and
sbb
mov
fadds
xchg
enter
jp
fldenv
pop
pop
sti
pop
and
pop
sbb
subl
call
add
inc
in
sub
rcll
sbb
mov
cmpsl
xchg
xor
inc
sbb
add
stos
fsts
cltd
inc
inc
cld
push
mov
mov
lods
repz
lahf
adc
xchg
cli
cwtl
mov
mov
out
pop
into
ret
jno
pop
xlat
pop
rorl
and
mov
testl
fnstenv
fiadds
cmpb
arpl
sbb
aam
and
or
xchg
sahf
std
pop
or
ljmp
mov
add
mov
rcrl
fdivl
mov
repz
scas
xchg
mov
mov
add
call
cmp
aas
pop
sub
pop
inc
fwait
cmovnp
pop
cmpl
aam
test
mov
subl
in
sbb
pop
xchg
pop
pop
or
xor
mov
jae
inc
xlat
shl
loop
inc
sbb
jae
cmp
arpl
movl
lcall
inc
add
cmp
out
inc
push
or
lcall
xchg
addl
mov
push
cwtl
lahf
mov
mov
jae
lret
jmp
mov
dec
pop
pop
xorb
fldt
mov
pusha
ret
arpl
lds
and
iret
leave
add
mov
push
push
sbb
por
popa
sub
jmp
cltd
xchg
cltd
push
sub
inc
leave
ret
jmp
adc
shr
and
mov
dec
andb
mov
xchg
out
dec
mov
addl
inc
ret
incl
ret
dec
mov
cmp
pop
sub
std
cmp
sbb
jns
pop
addb
ja
cmp
xchg
xor
mov
sbbb
bswap
mov
fisttpll
and
inc
jg
addr16
test
add
cwtl
xchg
sub
mov
outsb
jne
leave
jmp
bound
dec
or
xchg
cmp
or
jnp
stos
push
aam
popa
mov
add
sahf
sub
mov
andl
or
inc
adc
je
mov
cli
sti
mov
xchg
or
jecxz
dec
inc
mov
jns
fistpl
push
call
mov
jnp
daa
sbb
aaa
jmp
js
cmp
roll
mov
push
mov
pop
test
push
popl
add
xchg
daa
mov
mov
pop
ja
mov
xor
and
mov
sub
movsb
stos
daa
add
inc
pop
aaa
adc
js
scas
jbe
cmpsl
mov
ss
gs
pop
or
xchg
xlat
cli
xor
mov
jbe
xchg
ss
inc
cwtl
cmpsb
xchg
mov
xlat
pop
das
mov
mov
fldt
lret
jno
ja
push
and
lock
inc
jmp
and
or
scas
addr16
mov
add
mov
test
mov
out
mov
les
mov
push
add
iret
xchg
in
xchg
cmpsl
pop
stos
xchg
and
cmpl
mov
adc
test
inc
mov
mov
jbe
in
lods
inc
xor
mov
ds
arpl
sti
out
push
inc
clc
sbb
repnz
daa
sub
or
sahf
push
mov
mov
jno
ja
cwtl
xor
int
outsl
add
dec
addr16
shrb
inc
lret
ljmp
lahf
add
scas
cmp
test
inc
and
push
xchg
jae
add
iret
mov
mov
stos
push
or
out
sub
lea
cltd
cmp
push
xchg
push
filds
sbb
pop
push
or
cmp
adc
mov
dec
adc
or
pop
cmp
cs
mov
push
fsubp
adc
test
fwait
or
inc
sbb
xor
cltd
ljmp
lods
mov
xchg
nopl
pushf
lds
shrb
and
jb
xlat
cs
div
or
pushf
inc
or
jmp
push
jecxz
sbbl
xchg
call
pop
jg
dec
fimuls
andb
gs
into
xorb
sbb
jno
imul
xor
pop
mov
dec
test
shrb
add
adc
jnp
sarl
imul
sub
inc
test
xchg
add
out
ds
sahf
scas
mov
outsl
sub
sarl
jg
xor
icebp
pop
std
mov
xor
and
mov
sub
xor
in
mov
and
fsts
lahf
cmp
or
mov
xor
jg
loop
fldl
push
test
push
pop
cmp
cmpb
and
fsub
rcr
and
jmp
call
mov
sbb
test
sbb
sbb
enter
inc
mov
jno
repz
adc
and
mov
popf
push
jns
lock
mov
test
cltd
popa
mov
out
daa
sub
mov
mov
addb
arpl
sbb
sub
push
push
xor
lahf
mov
outsl
mov
sub
scas
dec
push
icebp
mov
roll
fsubrl
or
sbb
xchg
adc
xor
mov
mov
std
and
cwtl
mov
outsl
jae
dec
and
imul
cmp
jnp
aam
cmpl
cmp
mov
and
andb
out
jecxz
mov
ds
sbb
xor
insb
ds
mov
aam
sbb
pop
push
mov
mov
inc
fbstp
addr16
mov
mov
out
ficoms
sbb
sub
push
not
mov
loopne
mov
xchg
push
fs
stos
sub
xchg
fisttpll
and
mov
mov
dec
subl
push
lea
mov
scas
push
mov
adc
inc
sarb
iret
mov
pop
xchg
adcl
fsts
sub
inc
inc
lock
arpl
arpl
loopne
cmc
sub
xchg
nop
repz
mov
jb
mov
jle
dec
inc
fisttps
test
out
xor
adc
mov
lret
popl
mov
stc
lahf
aaa
pop
ds
or
xchg
mov
aas
jno
bound
sub
pop
lret
and
add
or
mov
filds
cltd
negl
push
mov
sbb
mov
cmpsb
iret
sub
mov
jg
stc
mov
push
jge
and
fsub
cltd
mov
adc
xor
ljmp
xchg
jb
stos
cli
ret
jle
xchg
scas
mov
xchg
jb
mov
mov
dec
pop
out
les
jnp
fsubrl
in
arpl
aas
cld
daa
inc
dec
mov
dec
add
sbb
pop
lods
mov
xchg
jbe
and
xchg
push
xchg
ds
xchg
jb
xchg
pop
sbb
fistpl
loopne
sbbl
xor
fistl
outsb
insb
ja
inc
sub
or
xchg
inc
aam
sub
jge
jnp
xchg
sub
mov
adc
jle
xchg
dec
cmp
and
sbb
dec
dec
daa
fs
or
outsl
pop
pop
test
cwtl
push
add
xchg
not
das
je
xor
jne
mov
add
xchg
mov
arpl
cltd
push
and
or
mov
xchg
mov
jae
popf
sbb
out
jmp
adc
pop
daa
sbb
fs
jae
outsb
jecxz
lcall
cmp
mov
push
xchg
pop
repnz
inc
lahf
in
mov
xchg
mov
mov
adc
pushf
pop
pop
inc
aas
or
popa
loop
lcall
mov
mov
shlb
xchg
mov
nop
sbb
inc
mov
insb
pop
or
inc
push
xor
pop
dec
xchg
mov
inc
mov
sti
cwtl
and
aaa
mov
jmp
sbb
das
pop
or
cli
sbb
add
imul
sbb
orl
pop
and
pop
shrb
out
mov
stos
jecxz
lcall
xor
movsb
ss
mov
imul
jecxz
mov
add
scas
iret
addr16
aad
test
adcb
popf
inc
lods
dec
cmp
pop
ja
xor
aaa
cwtl
imul
adc
mov
lods
jge
adc
flds
gs
jae
les
aaa
cltd
pop
arpl
cmp
outsl
filds
fsubs
addr16
jmp
jp
and
pop
sbb
inc
mov
adc
sbb
dec
popf
xchg
inc
movsl
pushf
push
cmpsl
jp
push
mov
nop
xchg
xchg
mov
lahf
jecxz
stos
sbb
in
cltd
movsb
inc
push
ljmp
inc
mov
aas
mov
jbe
stos
sbb
imul
popa
mov
inc
pandn
xor
cwtl
pop
imul
cmpsl
ficompl
or
cmpsb
ja
fistl
pop
inc
ja
stos
cmp
cmpsl
or
scas
cltd
fstl
vgetmantsd
lods
mov
adc
dec
jmp
fcom
push
mov
mov
cmp
mov
pop
xor
in
push
mov
pusha
or
mov
sbb
pushf
adc
xchg
shrd
test
dec
lods
mov
sub
dec
dec
fists
xchg
inc
fnstsw
cmp
add
mov
push
stos
xor
test
loopne
pusha
pop
xchg
fwait
imul
xor
sahf
jnp
hlt
shr
xor
popf
or
ljmp
sbb
jge
inc
inc
aas
xor
das
mov
test
loop
mov
fwait
ret
lret
add
js
jecxz
hlt
in
mov
in
fisubl
sbb
adc
fwait
mov
mov
jns
jg
mov
xchg
xlat
les
jecxz
movsb
mov
mov
stos
jae
fistpl
jp
push
xchg
icebp
int
mov
fisubl
sbb
jnp,pn
sbb
movsb
cld
add
mov
pop
add
push
pop
jg
mov
and
pop
add
ret
lret
aas
test
sti
enter
mov
pop
insb
movsl
cltd
add
pop
inc
jo
insb
jecxz
jmp
xchg
jnp
xor
or
ljmp
mov
btc
push
xchg
xor
filds
sub
ret
and
and
pop
pop
lret
sub
cmp
loop
or
jl
inc
lahf
sub
mov
add
and
pop
es
cltd
enter
adc
sub
loopne
pop
sbb
add
arpl
sub
mov
push
add
ret
lods
jae
das
dec
pop
xchg
dec
xchg
int
pop
xchg
test
sar
hlt
lcall
imul
scas
push
mov
sub
stos
insb
adc
ret
and
mov
test
icebp
inc
push
fwait
mov
adc
xchg
pusha
aad
cmc
call
adc
cmpsl
mov
jecxz
pop
aas
rcrb
out
ljmp
jbe
xlat
mov
mov
jmp
test
xchg
adc
xchg
ret
lods
lcall
inc
ja
insb
rcll
sbb
dec
jnp
std
push
fwait
adc
sarl
fwait
pop
push
mov
stc
shll
push
mov
es
sub
out
mov
mov
inc
in
adc
pop
fwait
loop
sub
insl
iret
adc
dec
pop
pop
pop
in
decl
cmp
fwait
mov
pop
aam
lcall
add
mov
jecxz
in
dec
aaa
clc
fwait
sbb
mov
sbb
mov
cmc
push
stos
jecxz
jns
popf
add
in
push
pop
pushf
add
aad
std
add
pop
add
xchg
and
mov
push
cmp
jle
and
add
outsb
ds
xlat
inc
sbb
lret
adc
in
xchg
aam
dec
cs
inc
inc
xor
fisubl
mov
pop
and
xchg
push
test
lret
push
add
ret
inc
loop
dec
out
imul
cld
mov
mov
mov
jecxz
test
lods
mov
xchg
jb
shld
xchg
jns
pop
in
xchg
jl
lcall
aam
inc
jnp
inc
pushf
pop
inc
inc
loop
jnp
xor
add
dec
repz
mov
test
push
mov
adc
mov
jnp
sbb
out
fcomps
jle
divb
jp
pop
aad
rcrb
addb
or
sbb
jnp
cwtl
dec
xor
and
add
movsl
stos
repz
sub
mov
pop
xor
mov
scas
xchg
lods
or
fwait
xor
xchg
xchg
scas
out
push
nop
mov
fcomps
aaa
push
enter
fdivl
fwait
js
andb
mov
pop
les
popf
or
cltd
subb
mov
mov
pusha
jmp
xchg
in
pushf
and
mov
xchg
pop
hlt
mov
cwtl
and
add
xor
jo
xor
stc
adc
outsl
pusha
fwait
shl
add
sbb
cwtl
mov
mov
ret
fwait
imul
leave
lcall
scas
jmp
out
mov
pop
mov
shll
fstl
es
fwait
mov
divl
jecxz
fwait
cmp
add
mov
dec
fwait
ret
cmp
loopne
add
xchg
fwait
xchg
sub
lds
popl
sub
jp
jb
loopne
in
mov
addl
xlat
iret
sbb
imul
fwait
push
outsb
inc
fmuls
mov
fwait
stc
iret
popf
in
mov
fwait
sub
push
stos
or
fwait
into
cmc
cmp
and
sbb
mov
lcall
sbb
adc
clc
lcall
repz
or
push
jmp
mov
lea
mov
adc
sti
inc
insl
cmpsb
fwait
mov
cmc
mov
mov
out
aam
jo
fwait
mov
popa
sbb
sub
out
xchg
xchg
fwait
icebp
sbb
xlat
or
adc
push
sarl
lret
mov
test
lret
fwait
mov
xor
sbb
sbb
sub
jmp
sbb
push
mov
data16
cmpb
sbb
mov
ja
sub
sub
in
add
jecxz
mov
and
pop
xchg
stos
shl
jmp
scas
or
jmp
jecxz
adc
xchg
add
mov
mov
sbb
mov
das
pop
pop
je
fisttpl
jae
popf
stos
lds
movsl
rcr
sbb
in
inc
dec
fnsave
insl
lahf
lds
cmovae
mov
add
sub
lock
fistl
dec
xchg
ficompl
lret
into
addr16
testb
jecxz
mov
mov
or
popw
mov
stos
adc
imul
push
xchg
jne
mov
mov
ret
arpl
stos
xor
imul
xchg
andb
mov
out
bound
cmp
mov
in
mov
inc
loop
dec
clc
scas
aam
xchg
cmp
mov
jno
inc
add
sub
cmp
sti
sub
ret
or
test
adc
inc
push
stos
xor
and
mov
cmpsb
sub
adc
fwait
arpl
inc
mov
adc
jge
jbe
shrl
mov
cmp
mov
or
repz
ret
add
push
pop
dec
xlat
sub
lahf
jnp
adcb
mov
jne
fs
sub
mov
int3
je
pop
sbb
jnp
cmp
inc
or
mov
fstpt
daa
xchg
imul
cmpsl
dec
mov
push
loop
xor
andl
inc
stc
aad
mov
in
sub
scas
dec
sahf
mov
jnp
cmpps
dec
mov
les
fistpl
mov
jae
call
mov
popf
add
xchg
or
fdivrs
arpl
scas
jae
cmpsl
cwtl
arpl
pop
decb
xchg
sbb
rcll
arpl
adc
test
in
mov
add
xchg
out
or
xchg
test
stos
cmp
cmp
fadds
sahf
jb
sbb
or
inc
pcmpgtd
faddl
stos
subb
push
cmpsb
push
lret
lea
jns
xchg
dec
adc
or
adc
xor
lds
repnz
cmpsl
rcrb
or
sub
dec
loop
mov
cmpsl
cmpordps
mov
cli
out
fwait
mov
ss
ficomps
por
mov
add
pusha
ds
call
scas
fsubp
push
push
flds
es
packsswb
mov
xchg
cmpl
push
sahf
dec
mov
fnsave
mov
add
push
jno,pt
inc
pop
out
or
xchg
cmp
dec
pop
add
rcr
pop
xchg
fisubrs
ss
jp
jl
add
rorb
repz
fidivs
jmp
mov
or
iret
or
or
loop
movb
movsb
addr16
in
fiaddl
or
test
pop
out
pop
mov
out
hlt
test
jecxz
xlat
mov
and
arpl
xchg
sbb
aam
mov
pop
loop
mov
adc
add
jecxz
lcall
sbbl
sub
and
sbb
push
aas
inc
cld
sub
cmp
and
mov
test
add
scas
pop
ret
mov
jo
ja
adc
sbb
and
scas
out
xlat
fmuls
dec
sub
and
mov
add
mov
dec
movsb
xchg
cltd
out
pop
jecxz
adc
add
inc
flds
shl
cmpsl
lret
push
inc
sbb
sub
mov
in
fistl
in
or
cmc
mov
mov
inc
ficoms
mov
roll
mov
inc
arpl
sahf
sub
and
jnp
push
pop
mov
fists
cld
jecxz
adc
sbb
shrl
icebp
adc
dec
fsubrl
pop
mov
sbb
notl
sub
loop
insb
jns
out
add
stc
fwait
negl
les
xor
mov
sub
sub
adc
into
fwait
stos
mov
scas
fwait
jae
xchg
nop
ficompl
arpl
and
xor
fwait
cmp
or
sbb
inc
xlat
or
push
call
sahf
roll
xor
aad
push
fwait
sub
pop
cmp
pop
xor
fucomi
sub
in
hlt
or
das
aam
pop
pop
mov
mov
push
hlt
push
dec
dec
fwait
in
mov
adc
inc
adc
lcall
insb
xlat
xor
fwait
mov
xchg
adc
out
and
lret
lods
faddl
sbb
push
push
leave
inc
outsb
or
sbb
adc
mov
mov
shl
mov
cmp
push
mov
push
icebp
lcall
lret
sti
push
rcrb
call
lods
into
lock
hlt
mov
clc
adc
fwait
push
pop
xor
xchg
pop
mov
mov
pop
sbb
fwait
fisttps
mov
inc
mov
icebp
pop
ljmp
adc
lahf
mov
imulb
or
popf
and
cmp
sbb
lcall
jnp
fwait
pop
fimuls
or
fwait
mov
outsb
jne
fdivl
fwait
jle
dec
cmp
jg
pop
fcoms
mov
mov
sbb
imul
ret
fimull
cmc
clc
sbb
lret
sub
stos
cmp
inc
mov
inc
sbb
push
sarl
test
out
xchg
mov
roll
fldt
dec
xchg
xor
adcb
dec
mov
jb
nop
out
mov
sbbb
movsb
dec
xchg
push
mov
push
sbb
jno
mov
pop
out
fwait
ss
ret
add
std
adc
push
fwait
stc
adc
sets
inc
pop
xchg
push
push
xchg
or
scas
repz
ret
fwait
mov
dec
adc
hlt
xchg
pop
fwait
mull
pusha
sub
inc
ja
fwait
test
pop
outsl
outsb
pop
push
add
lcall
call
xor
adc
jae
xor
dec
lods
pushf
outsl
and
out
cwtl
mov
or
add
sti
lahf
push
push
insl
push
rcrb
test
xchg
mov
or
dec
or
call
mov
nop
aaa
or
cmpsb
mov
mov
cmp
ss
inc
sbb
cmpsl
lahf
jae
aam
and
fcomip
in
adcb
lea
cmp
cmc
xchg
je
int
pop
in
push
pop
popf
in
rorb
sbb
lock
push
pop
add
inc
dec
mov
rorl
lock
ret
xchg
sahf
xor
mov
ljmp
jge
mov
cld
lods
aaa
shll
adc
and
daa
ret
sarl
rcrb
xchg
fwait
stos
call
lcall
in
jb
fwait
scas
add
fwait
insb
xchg
stc
sahf
outsb
xchg
sub
dec
mov
fwait
push
push
xlat
push
xchg
or
xchg
xor
fsts
mov
shll
pop
inc
cld
add
fs
mov
sub
fwait
loop
jb
loope
imul
sub
sbb
push
fwait
sti
orl
cmp
sbb
stos
cli
fwait
pop
jbe
scas
add
insl
add
into
fistl
add
lcall
jne
popa
sti
mov
jg
pushf
cmp
adcb
clc
dec
mov
cwtl
stos
cmp
stc
orl
int3
or
movb
fwait
mov
adc
mov
dec
test
ret
adc
dec
xor
cmp
mov
xor
xchg
cwtl
shr
and
cmp
pand
loopne
fwait
inc
sbbl
gs
cltd
lock
dec
push
fistpl
xchg
dec
fwait
mov
fs
data16
idivl
test
pop
cmp
mov
pop
push
sub
sarl
inc
pop
or
jmp
fwait
inc
iret
addl
fwait
jo
loop
loope
cmp
js
jecxz
pop
ss
out
cmp
add
sub
fimull
dec
xor
xchg
ja
and
ret
adc
pop
mov
rcr
adc
lahf
xchg
jnp
js
push
jmp
out
fsubrs
in
js
and
mov
and
stos
push
xchg
movb
cmp
loopne
push
js
ljmp
mov
adc
or
jno
pop
loop
in
fcoms
pop
and
mov
test
in
out
mov
add
cs
mov
mov
clc
push
or
insl
sub
mov
jecxz
fistpl
mull
mov
fwait
rorl
jmp
mov
xchg
jnp
adc
dec
mov
dec
cmpb
fwait
cwtl
repz
mov
fwait
push
adc
fwait
cmc
jmp
mov
stc
adc
cmp
fwait
pusha
fldl
or
add
test
jno
push
outsl
mov
ljmp
frstor
jbe
cltd
sub
mov
xor
mov
inc
lcall
mov
jno
arpl
adc
rcr
xchg
dec
movsb
loope
jae
push
push
fwait
icebp
lret
sbb
out
std
je
aad
push
mov
fwait
cmc
push
sbb
mov
cmp
sub
or
lods
std
xor
outsb
pushf
iret
fstps
mov
test
fwait
xchg
nop
lds
insb
dec
jmp
push
daa
js
pushf
imul
mov
jl
fwait
or
jmp
notl
sub
adcb
fwait
add
mov
dec
xchg
inc
les
cmp
dec
in
lcall
inc
xlat
xchg
and
or
outsl
lods
xchg
fadds
cmpsb
lock
cmp
add
adc
lret
inc
mov
shrl
fldcw
popf
sbbb
into
push
adc
fistpl
add
mov
test
jne
mov
pop
adc
movsl
jmp
or
fwait
jle
mov
clc
pop
iret
cmp
jne
sti
sahf
lret
insb
or
repz
jecxz,pn
cwtl
xor
stc
cmp
jne,pt
sbbl
mov
jl
ja
fistpll
mov
imul
gs
sti
jp
icebp
mov
fwait
aaa
int3
mov
mov
inc
or
rcrl
scas
pop
mov
xor
lods
xor
fwait
punpckhwd
mov
mov
test
cwtl
ljmp
cmpsb
add
loope
lea
jns
mov
test
or
fbstp
sub
and
rorb
fwait
dec
and
jmp
fwait
cld
rcr
ljmp
xor
fwait
jbe,pt
call
inc
fwait
call
clc
je
mov
mov
push
mov
jb
fcomps
lcall
sar
ljmp
pop
rep
sti
fwait
xor
jo
push
fwait
pop
cltd
cmp
cmp
mov
repz
fs
scas
std
mov
cmpsb
sbb
mov
into
nop
inc
arpl
pop
sub
repnz
xchg
insl
sbbl
ret
sbb
sahf
or
sarl
add
dec
inc
pusha
jbe
mov
push
sub
and
loop
repz
xor
or
fwait
mov
add
and
cmp
cmp
out
insl
jb
sti
mov
xor
cltd
fwait
sbb
std
je
ja
xchg
fwait
es
adc
popl
bndldx
ds
stc
cwtl
jmp
aaa
fsubs
mov
xchg
sub
add
jae
popa
sbb
jbe
mov
fwait
in
inc
insb
in
clc
pop
push
fwait
fs
lea
fstpt
rcl
sbb
xor
sub
mov
xchg
inc
fwait
daa
xor
mov
fwait
shll
or
dec
jns
mov
lcall
pop
xor
orl
sbbl
fwait
pop
mov
pop
or
insb
ds
stc
loopne
push
aaa
pop
ficompl
fwait
pop
xchg
mov
push
popf
fwait
cli
cmp
loope
sub
fwait
repz
xor
cmpsb
fwait
outsl
add
andb
pusha
bound
push
fwait
xchg
adc
das
sahf
sti
fwait
cmp
and
fwait
pop
pop
jnp
cmc
roll
mov
push
push
xor
call
pushf
mull
outsb
arpl
xchg
fwait
mov
loope
or
dec
pop
imul
orb
lea
les
or
fwait
pop
push
mov
push
fimuls
fwait
movsb
jp,pn
push
jnp
sahf
fwait
addl
mov
mov
fwait
lock
xchg
fisubl
cmp
xor
fwait
push
out
mov
in
in
dec
not
cwtl
rcr
in
ja
push
fwait
popl
add
push
mov
pop
out
jmp
dec
pop
lcall
inc
repz
adcb
std
cmc
add
xor
mov
mov
xor
cwtl
jnp
popf
icebp
pop
sbbb
jne
sbb
fwait
cmp
sbb
cmp
fwait
push
out
add
mov
mov
aam
sbb
sarb
lcall
cmp
cwtl
jmp
movsb
xor
int3
sbb
and
xchg
xchg
cmp
adc
xlat
xlat
loope
inc
cmpsl
es
mov
loop
dec
mov
fwait
add
jbe
inc
dec
sub
mov
inc
out
and
paddsw
or
inc
or
sbb
pop
cld
into
std
out
aaa
cmpb
xor
test
mov
mov
arpl
imul
int
cmp
mov
in
xor
cli
mov
xor
mov
int
or
xor
shrb
mov
mov
inc
mov
out
loop
decl
cmc
cli
xor
test
sub
jno
pop
fwait
lods
imul
add
fwait
sahf
cwtl
dec
cmp
fwait
or
push
jecxz
jg
mov
sahf
popf
and
xor
fistl
lods
nop
cmpl
adc
fiaddl
jns
push
in
fwait
loop
push
xchg
inc
sub
fwait
mov
dec
je
cmp
ror
adc
mov
outsb
cmp
jae
mov
aaa
mov
cmp
scas
inc
push
popa
dec
js
inc
decb
fwait
lds
sbb
sbb
dec
mov
es
xorl
mov
mov
cltd
push
ret
cwtl
and
mov
pushf
dec
fwait
inc
andb
out
fwait
inc
inc
sbb
sub
adc
mov
dec
ja
fwait
in
add
sbb
fwait
shrl
dec
pop
mov
bound
popf
adc
add
andb
pop
push
test
mov
fwait
xchg
pop
sub
xor
stc
and
outsb
mov
fwait
imul
cwtl
test
clc
fwait
shlb
adc
bound
cmp
xchg
sarl
lods
out
jmp
imul
mov
cwtl
sbb
es
sub
cmpl
pushf
jb
or
xchg
pusha
lds
fwait
jo
movsb
ja
fwait
sarl
lret
xor
jp
ds
pop
mov
sbb
xchg
lea
fwait
pop
cmpsb
push
push
and
jno
inc
xor
call
dec
imul
and
fwait
repnz
or
cmp
mov
dec
jg
jge
xchg
cli
add
in
mov
push
out
dec
lods
pop
stc
fwait
sahf
mov
negl
mov
std
js
push
mov
lcall
inc
pop
popf
mov
mov
sbb
xor
dec
outsb
daa
fwait
int3
loop
out
pusha
lods
fcomps
rclb
jecxz
mov
xor
dec
ds
fwait
xor
dec
xchg
sbb
popa
fwait
pop
outsb
add
test
mov
inc
popf
inc
imul
pop
fwait
jge
or
lock
jns
xchg
or
fisttpl
das
movsl
mov
fwait
aaa
cli
add
int
addr16
mov
mov
out
clc
or
hlt
out
xor
jl
push
add
sub
ss
dec
xchg
mov
jg
imul
les
mov
pop
lock
fistps
hlt
repnz
add
jae
gs
mov
repz
pop
cwtl
in
mov
cmp
and
rcrl
ret
out
repz
or
mov
mov
fwait
cs
shll
fwait
adc
jnp
lahf
fwait
lret
cmp
mov
mov
and
sub
adc
dec
ret
pop
xorl
lcall
jl
outsb
inc
loop
lret
lods
loope
push
cmp
adcb
insl
push
imul
mov
cmp
stos
pop
push
xor
mov
cmp
dec
test
dec
fnstcw
es
mov
or
dec
pusha
cwtl
xchg
insb
push
adc
icebp
pop
mov
loop
aas
jnp
or
cld
or
fwait
xchg
cs
in
loopne
jg
mov
or
mov
std
bound
mov
inc
fwait
pop
or
or
sarb
push
fwait
outsl
movd
push
jmp
adc
mov
pop
stos
sub
dec
xor
inc
adc
push
lcall
cltd
js
imul
cld
jg
dec
aas
xor
cmp
jg
xor
in
and
push
cmc
scas
lcall
cmpsl
testl
xchg
stc
lock
ret
push
in
enter
lcall
in
adc
lcall
daa
call
fwait
andl
sub
mov
inc
pop
add
sbb
lcall
repnz
sti
ss
enter
cmp
bound
rcrl
mov
sti
pop
cmc
into
test
pop
scas
push
and
jae
ds
jle
push
add
enter
mov
sbb
sub
in
les
aaa
xor
cmp
cmc
pusha
jle
je
and
es
in
fdivl
dec
mov
dec
sbb
fwait
ret
outsb
and
fcoml
xchg
sahf
nop
dec
int
xor
scas
sub
shrb
xchg
das
mov
mov
in
dec
fwait
dec
rol
mov
clc
cmpsl
jno
cs
popa
xchg
mov
fucomip
cmp
sub
push
in
cmp
ja
inc
fwait
in
idivl
xor
lods
hlt
add
popf
outsl
jno
and
roll
push
adc
push
fwait
pop
and
sbb
in
mov
pop
sbb
mov
lods
std
stos
pop
xchg
pop
and
fwait
pop
mov
add
jns
mov
inc
rcrb
fcmovu
dec
nop
inc
pop
xchg
adc
xor
jmp
mov
mov
push
addr16
sbb
pop
mov
out
hlt
leave
xor
xchg
adc
jbe
jecxz
cld
push
mov
testb
pusha
es
stos
jl
jg
popa
or
out
mov
or
xor
dec
xchg
dec
xchg
arpl
je
adc
jecxz
out
daa
insb
mov
pop
scas
call
lahf
pop
in
in
int
and
repz
movsl
or
dec
push
xorl
jns
inc
push
xchg
cmp
out
sub
jnp
mov
packsswb
mov
pop
pop
sub
push
jmp
mov
dec
fcmove
push
xchg
dec
stos
or
mov
adcl
movsl
lcall
mov
pushf
fst
lahf
push
or
jle
sub
scas
andl
xor
pop
jnp
imul
mov
cmp
push
jg
out
xchg
loop
clc
movsl
lcall
or
jecxz
roll
pop
jecxz
sahf
mov
aad
sbb
pushf
or
or
adc
fcoml
out
push
repnz
insl
xchg
popa
fisttpll
cmp
loop
hlt
sahf
dec
push
pop
adcl
std
pusha
mov
out
jno
add
movsb
push
xor
out
dec
loopne
pop
arpl
dec
mov
jo
daa
in
sti
shrb
cmp
adc
out
aam
xor
popf
pop
das
mov
insl
lret
sbb
mov
pop
sti
lcall
sbbl
fwait
xchg
xor
in
cmp
je
fwait
cwtl
push
jb
mov
scas
fwait
jmp
jns
mov
cmpsb
movsl
sbb
jge
pop
push
pop
xchg
sub
push
sbb
test
dec
push
jns
jecxz
jl
into
push
cmp
and
into
jecxz
mov
aaa
pop
mov
pop
mov
mov
mov
mov
fadds
imul
dec
in
int
cmp
sbb
lds
imul
popa
ret
jmp
mov
dec
or
push
xchg
push
jp
mov
stc
fwait
xor
je
cmp
lods
dec
xlat
fwait
js
inc
iret
fxch
das
mov
insb
sbb
testb
pop
mov
ljmp
std
popa
in
mov
push
push
gs
mov
enter
icebp
sysenter
and
es
and
jns
cltd
mov
sbbb
xor
add
inc
leave
fwait
dec
nop
inc
int3
add
sbb
popf
push
mov
in
aad
movsb
imul
pushf
sbb
fwait
jmp
in
insb
sbb
cmpb
jle
mov
push
dec
fdivrl
rclb
push
repz
stc
std
xorb
les
mov
mov
mov
pop
pop
hlt
jecxz
mov
dec
xchg
sub
pop
jae
rcrb
int3
enter
dec
xchg
out
jbe
lock
rcrl
movsb
popf
cmp
sub
addr16
notl
fstpl
push
aam
pop
shrl
lcall
out
and
mov
jge
std
movsl
call
aaa
fwait
mov
mov
lock
mov
sarl
movsl
scas
adc
loope
fwait
xchg
int3
jnp
lds
pop
inc
fwait
xchg
idivb
fwait
stos
cmp
or
jno
fwait
mov
in
cmp
call
outsl
jb
lea
adc
sbb
xchg
mov
stos
lcall
ss
fwait
mov
mov
cmp
jg
pop
fwait
jp
jle
pop
fwait
xorl
fwait
cmp
shlb
jnp
out
aaa
jb
bound
or
jg
xchg
outsb
fwait
loopne
mov
pop
fwait
ja
mov
xlat
arpl
fwait
movsb
lcall
mov
dec
int
fwait
loope
or
iret
lods
inc
xlat
lock
sub
fwait
addr16
pop
lcall
rcrl
fwait
dec
and
popf
cmp
xchg
inc
int3
xor
fwait
ret
and
je
or
rclb
cwtl
mov
xchg
into
ja
aaa
push
cmpsb
xor
lahf
aas
mov
or
push
cmc
je
inc
fwait
ret
testl
jno
inc
add
ljmp
subl
testb
jmp
lds
clc
fisttpl
or
cmp
stc
inc
xchg
insl
imul
arpl
ret
adc
jecxz
xor
movsl
cmp
fwait
mov
mov
stos
jl
lods
out
cltd
or
pop
shl
fildl
dec
scas
lret
push
fwait
popf
lock
hlt
loope
fwait
mov
mov
push
fwait
mov
cmpsb
push
int3
pop
xchg
sti
fwait
cmp
cmpsl
adc
dec
lds
push
aad
or
push
ds
sbb
jge
inc
fwait
enter
pop
insb
jae
fwait
aaa
inc
stc
cmp
aas
adc
fwait
mov
jl
out
sub
sbb
imul
cwtl
stc
xor
sahf
jmp
push
cmp
mov
or
out
sbb
add
cmp
xchg
and
mov
lcall
jo
xor
cwtl
scas
cli
out
pop
stos
sub
pop
ljmp
sbb
mov
fwait
call
xor
and
or
lds
lcall
cmp
mov
std
aam
xchg
cwtl
and
test
push
imul
mov
aam
repz
loop
or
cwtl
pop
dec
jmp
xlat
int3
dec
out
ja
xor
push
xchg
icebp
fmulp
and
dec
shll
rcrl
fisubrl
mov
fcmovnu
out
and
lcall
lahf
sub
lock
arpl
orl
mov
push
sbbb
lcall
jae
popf
xlat
outsl
and
pop
mov
inc
push
out
movsb
adc
popa
dec
mov
push
pop
arpl
or
cmp
push
dec
fidivs
fmuls
cwtl
and
jp
leave
xor
fwait
push
scas
adc
mov
pop
jge
push
fwait
add
mov
jno
push
fwait
mov
leave
add
pop
imull
mov
mov
jbe
adc
shrb
inc
jecxz
daa
jns
xlat
jo
outsb
pop
shl
xchg
sbb
xchg
inc
push
pushf
filds
enter
insb
push
jge
mov
jo
sub
lret
popf
scas
xchg
sti
dec
outsb
xor
int3
insl
mov
sbb
adc
es
fwait
stc
das
aad
fdivs
xor
mov
inc
pop
out
scas
dec
fwait
lret
adc
sti
addr16
fistl
push
mov
out
pop
xchg
leave
pop
fstps
sub
ja
nop
mov
adc
cli
in
cmpsb
testb
cs
gs
sbbl
mov
outsl
adc
xchg
stc
lret
mov
js
or
pop
xlat
icebp
test
push
mov
mov
inc
lahf
fwait
lock
lcall
add
cwtl
adc
fwait
dec
ljmp
fwait
into
inc
popf
repnz
loopne
mov
js
pop
outsb
fwait
lds
pop
aaa
push
sti
fistpl
scas
dec
xor
aad
cmp
jmp
js
cwtl
mov
inc
and
push
lock
add
ja
mov
fiaddl
mov
sbb
cmp
or
xor
out
fisubrs
out
sbb
inc
xchg
in
dec
xor
or
mov
pop
fwait
leave
pop
inc
rolb
push
pop
push
jl
xchg
and
mov
cmp
lods
mov
push
mov
scas
mov
pop
mov
daa
rorl
or
dec
fistpl
jle
sbb
inc
fwait
sarl
inc
pop
iret
adc
adcb
lods
cmp
cmc
jnp
sub
sbb
cld
fwait
pop
mov
inc
popf
fwait
dec
sti
inc
movsb
sbb
adc
inc
cs
sub
mov
push
jo
movsl
fwait
mov
mov
sbb
ljmp
dec
scas
leave
daa
or
cmpsl
fwait
push
mov
jle
fwait
mov
or
rcrb
pop
jb
ja
jno
sahf
xchg
out
inc
xchg
popf
jp
loopne
fistl
incb
xchg
or
fwait
xchg
mov
fwait
sub
sbb
pop
dec
cmp
sbb
jl
cmp
fwait
mov
aad
sbb
out
imul
add
xchg
maxsd
xchg
repz
mov
mov
xchg
sbbl
mov
jle
pop
sub
sub
xchg
push
stc
inc
xchg
jnp
test
rcrl
fwait
movsl
lret
inc
pop
rolb
rcrl
and
add
das
shlb
jae
cmp
and
mov
adc
mov
sti
cwtl
mov
jl
fstpt
cmp
jmp
test
fwait
xchg
xor
xchg
jb
nop
push
imul
or
adc
aad
lods
inc
cmp
lcall
fcmovne
dec
test
jns
pop
mov
test
iret
pop
sub
xor
rcrb
xchg
push
loopne
mov
repnz
sbbb
jo
adcl
sbb
pop
mov
int3
push
jns
lret
xchg
scas
int
jmp
mov
scas
fcom
js
test
inc
into
mov
mov
and
daa
and
mov
xchg
push
inc
nop
sub
push
add
pop
mov
xlat
lcall
test
lret
jg
sbb
ljmp
cmp
popa
dec
fstps
jb
jo
jne
hlt
lret
xchg
inc
pop
fcomps
or
out
add
or
in
add
cmpxchg8b
sahf
testl
fildl
dec
push
jle
dec
fwait
in
xchg
ja
push
inc
sbb
mov
inc
fwait
sbb
or
in
fwait
dec
cs
shrb
nop
xor
decl
cltd
sub
mov
loope
outsl
loop
mov
sub
fwait
jb
ljmp
sub
mov
pop
js
fwait
xchg
inc
sub
ret
xchg
cmpsl
add
push
imul
mov
arpl
pop
outsb
lods
sbb
cmp
fwait
sahf
dec
cld
add
fwait
stos
outsl
stc
mov
fwait
jno
lret
sarl
pop
lcall
bound
shrl
fwait
cmp
jne
repnz
sub
cmp
and
es
fwait
inc
ja
fmulp
ljmp
or
sahf
jg
cwtl
add
popf
or
fwait
in
incb
daa
bound
cmpsl
xor
cli
cmp
fwait
or
push
insl
pusha
pop
sti
fwait
call
jno
jb
add
sbb
ret
loope
fwait
in
sub
dec
data16
shll
fwait
subl
rcrb
sbb
vmovntps
int3
push
or
xorb
loope
push
xor
mov
or
jns
sub
jno
mov
iret
inc
inc
das
fmuls
lret
ljmp
bound
cmp
loope
leave
sti
or
jmp
pop
inc
sub
dec
jne
rcrl
cs
or
adc
jbe
loop
loope
jbe
sti
mov
or
test
int3
sbb
cmpsl
mov
mov
sarw
repz
loop
xor
scas
and
test
sub
and
inc
ret
mov
jge
inc
or
ja
jnp
pop
jnp
inc
das
mov
adcl
fsubrs
mov
sbb
push
das
jecxz
std
dec
imul
mov
rorl
jecxz
outsl
sub
xor
and
add
test
xchg
pop
into
cli
repnz
sbb
push
loop
xchg
xor
arpl
mov
jno
aad
loop
gs
xchg
push
loope
cltd
jecxz
in
xor
loop
sbb
add
pop
lods
arpl
jo
xor
xchg
scas
cmp
cmp
cmc
xor
loop
arpl
add
and
xchg
sub
xchg
inc
mov
inc
shl
push
inc
lds
fmuls
jnp
lahf
movsl
loop
int3
sbb
xchg
dec
mov
rep
cmp
lcall
in
fistpll
and
movsl
mov
or
stos
shrl
or
ljmp
mov
subl
push
xor
dec
inc
mov
dec
or
sub
popa
and
add
add
scas
pop
rcr
dec
mov
lret
mov
fwait
adc
dec
add
cmp
test
mov
mulb
in
mov
mov
icebp
lret
pushf
add
mov
dec
mov
outsb
rorl
inc
cmp
insl
cltd
xchg
and
lret
out
testl
or
scas
das
stc
sbb
mov
sbb
sbb
add
call
clc
imul
mov
push
push
fnstsw
incb
into
fstps
loope
jl
add
cld
jns
inc
push
dec
inc
aaa
scas
mov
mov
orb
les
fwait
dec
inc
push
mov
ret
xchg
add
pop
loop
lret
cli
jecxz
repnz
mov
call
jecxz
iret
push
sub
outsb
and
inc
add
push
subl
into
mov
adc
inc
outsl
mov
popa
jns
fwait
outsl
mov
lcall
mov
push
enter
fsubp
icebp
sub
jp
add
mov
roll
fsts
lods
cmp
bndstx
enter
shlb
insl
or
insb
or
add
or
mov
pushf
mov
mov
mov
mov
ljmp
pop
pop
xchg
arpl
jno
xor
leave
sqrtps
cmc
clc
and
add
pop
icebp
jecxz
ja
pushl
adc
add
pop
push
inc
rorl
inc
lods
fidivrs
push
cmp
add
jnp
out
test
fbstp
sbb
andb
or
jns
inc
jecxz
inc
into
and
iret
rolb
fnsave
ds
push
ud1
cmp
inc
xchg
jnp
jecxz
xor
sahf
loop
push
xchg
adc
fistpll
mov
mov
xchg
sbb
dec
loop
sbbb
jmp
shll
cmp
xchg
test
outsb
jnp
popf
xchg
movsb
inc
sahf
ret
je
mov
push
shrb
lcall
mov
fbld
mov
jecxz
push
mov
imul
mull
lahf
inc
mov
adc
and
ficoml
outsl
dec
sbb
inc
xchg
jb
movsl
loop
bound
imul
insl
jecxz
lds
inc
test
pusha
cmp
or
cmp
jnp
lret
push
sbb
xchg
arpl
aas
divb
lahf
addl
jecxz
push
fdivl
ja
mov
inc
pop
lret
es
into
push
sahf
ss
fisttps
aad
cltd
lret
mov
inc
fildl
and
scas
repz
aas
movsb
dec
cmp
or
lods
sub
xchg
cmovne
jne
jge
jle
and
loopne
andb
arpl
mov
pop
sbb
add
notb
dec
pop
xor
add
icebp
push
cltd
adc
mov
pop
in
xorb
lahf
call
cmpsl
jecxz
dec
lcall
pop
inc
loop
sbbl
arpl
out
push
sbb
ret
pop
gs
clc
mov
jg,pt
push
ja
mov
pop
push
jne
push
enter
mov
fcoms
jecxz
push
and
sbb
xor
cmp
cmp
mov
fs
xor
shll
sub
popf
popa
fdivrl
cmp
fbstp
add
shlb
pop
dec
xchg
xchg
inc
dec
cmp
mov
fbstp
int3
sbb
imul
std
in
stos
loope
inc
push
stos
mov
dec
jecxz
push
or
fnstsw
cmp
sbb
fmuls
fildl
or
sbbb
cmp
jecxz
lret
adc
scas
fwait
jle
xchg
mov
sub
sti
les
lock
mov
rcrb
test
adc
shl
lods
jnp
ds
sbb
xorb
mov
mov
les
aas
push
in
cmp
loope
or
or
pop
xchg
and
lahf
arpl
adc
jnp
out
push
push
and
sub
pusha
sbb
bsr
icebp
mov
popa
mov
es
out
lds
fs
jecxz
nop
mov
ret
cltd
fidivl
add
sbb
xchg
fisubrs
ljmp
add
outsl
mov
adc
lahf
cltd
pop
mov
xorb
in
pop
lds
xor
or
hlt
leave
dec
leave
pop
mov
or
popf
add
cmpsl
adc
popa
or
outsl
je
pop
lcall
xor
jg
cmp
mov
adc
test
jnp
jp
push
dec
orb
fadds
or
test
mov
pop
aam
or
repz
and
xor
sub
push
loop
leave
fcoms
les
sbb
outsl
and
pop
pop
dec
sub
inc
xor
sbb
cmovnp
dec
outsb
stos
add
jns
divl
out
inc
ficomps
jmp
mov
sub
mov
mov
rolb
repz
inc
pop
inc
push
push
adc
test
mov
inc
cld
leave
mov
sbb
cmpsl
add
into
enter
std
inc
pop
dec
sbb
outsl
mov
mov
icebp
or
lahf
lcall
xchg
cmp
das
mov
arpl
push
inc
dec
mov
fisubrl
mov
inc
mov
fistl
lret
mov
xchg
bound
add
cmpb
sahf
sub
movl
jecxz
lds
addr16
loop
hlt
pop
lret
lahf
pop
xor
jns
and
xor
mov
dec
into
xchg
push
lahf
mov
and
inc
xchg
add
jg
push
mov
pop
mov
testl
int
arpl
push
inc
dec
int3
enter
das
dec
or
fisubs
cwtl
sarl
pushf
xor
lret
push
xor
mov
push
shlb
lret
lahf
or
push
lret
cltd
cmc
loop
testl
sbb
imul
push
xor
lret
inc
scas
fwait
push
ss
popf
pop
xchg
fcomps
cmp
mov
idiv
jg
andb
clc
push
fcomip
jp
pop
fwait
or
lret
sti
mov
gs
jmp
inc
add
adc
mov
clc
scas
dec
loopne
arpl
out
sahf
and
mov
addr16
roll
mov
fwait
mov
es
mov
inc
out
fwait
test
das
clc
lret
or
hlt
mov
push
cwtl
mov
pop
cmpsb
dec
fwait
jns
fisttps
inc
pop
add
push
ja
lods
inc
arpl
mov
sti
adc
mov
jl
scas
mov
sub
movsl
int3
fwait
jle
push
pop
arpl
jbe
mov
rolb
sbbb
lods
xchg
xor
fisubl
std
sahf
fwait
in
add
inc
xchg
pop
fwait
xchg
popa
add
mov
bound
pop
enter
xchg
xor
adc
cmp
in
daa
std
fwait
scas
xchg
push
dec
ds
cmp
outsl
push
mov
or
xchg
stos
mov
call
jns
fwait
pop
push
mov
and
fstps
out
dec
jmp
xor
xor
les
or
sub
leave
sub
rep
sti
call
aas
lods
out
fsubl
test
into
ss
gs
mov
sub
lahf
je
mov
ds
pop
cmp
pusha
sub
insb
decb
std
lods
inc
inc
lcall
subl
jle
out
xlat
add
das
fwait
add
decb
hlt
js
ror
lret
push
sub
fwait
sbb
sbb
out
lcall
loope
xchg
mov
cmp
or
test
mov
addb
sbb
xchg
push
xchg
add
popa
sbb
mov
fwait
pop
stos
das
mov
fwait
bound
popa
mov
movsw
fwait
mov
mov
mov
jmp
sarb
rclb
push
inc
int
jmp
xchg
orb
cmp
nop
or
xchg
fwait
push
cwtl
aad
push
jecxz
adc
mov
out
xor
push
dec
inc
jle
loope
fwait
outsl
jns
jecxz
mov
cmp
fmulp
xor
je
adcb
xchg
sarb
mov
hlt
fwait
mov
push
in
fsts
jmp
cmp
mov
pushf
jbe
pop
xor
mov
ret
fwait
push
push
and
lods
mov
test
loopne
call
fwait
out
xchg
iret
mov
rclb
fwait
and
jmp
int
inc
sub
jnp
dec
mov
inc
xor
cmpsl
jns
jne
jp
js
cli
push
adc
idivb
jae
flds
pushf
jno
sbb
mov
sbb
jns
pop
fwait
rcrb
roll
jl
cwtl
ljmp
mov
push
insl
fmulp
mov
das
sub
cmp
push
jmp
int3
lcall
mov
mov
fwait
mov
loope
ret
icebp
xchg
mov
stos
cmp
adc
not
int3
out
aas
iret
loopne
mov
mov
in
js
adc
mov
sbb
xor
or
out
or
xchg
roll
ret
dec
or
arpl
and
cltd
cmp
sbb
nop
xlat
movb
push
mov
mov
imul
mov
mov
and
arpl
inc
popf
push
jecxz
in
arpl
or
cmp
cltd
xor
leave
add
lret
inc
jecxz
xchg
push
test
add
mov
sbb
arpl
loopne
scas
or
or
lea
add
mov
out
test
stos
pop
sbb
imul
mov
in
add
lcall
xchg
lfs
arpl
xor
fisttpll
daa
ficompl
push
sbb
sbb
mov
cmp
lea
mov
lds
push
ja
cmp
lock
popf
cmp
out
xor
dec
xor
sub
fwait
jb
add
inc
mov
or
sbb
add
sbb
adc
or
hlt
push
in
bound
rcrl
out
shrl
fwait
out
add
mov
aaa
rcr
or
xor
adc
test
jmp
fwait
in
and
mov
movsl
fstpl
sub
mov
das
adc
fwait
xor
test
in
cwtl
cmpsl
hlt
call
adc
add
stos
sbb
daa
inc
dec
adc
lcall
and
movsl
fwait
imull
ss
inc
lahf
imul
sub
or
cwtl
xchg
mov
repz
incl
xor
popf
inc
cld
aam
fildl
fwait
loopne
pop
repnz
sti
pop
xlat
xchg
push
cmpl
mov
lcall
int
jno
fwait
mov
or
nop
pop
popa
lods
imul
fwait
push
fldenv
inc
sub
fwait
jne
js
ret
stc
mov
fcmovu
cld
negl
and
jno
mov
loope
cmp
shll
pop
mov
ds
pextrw
adc
pusha
push
insl
lods
scas
icebp
je,pt
inc
sbb
and
scas
push
xchg
mov
test
cmp
rclb
cmp
das
ds
sub
lods
jecxz
xchg
das
loopne
push
pushf
add
dec
fadds
es
fwait
push
xor
les
sbb
ficompl
jmp
and
jmp
jp
clc
cmc
in
loop
adc
push
ja
mov
add
mov
fidivrs
scas
enter
mov
xor
loop
std
add
xchg
imul
jecxz
mov
js
fstpl
fcmovnu
inc
add
push
xchg
and
rclb
inc
and
xchg
arpl
xor
enter
fnstcw
mov
xchg
push
es
test
sbb
sahf
or
mov
mov
xor
sahf
lods
mov
mov
jecxz
cmp
add
push
es
ret
stos
push
and
loop
jo
mov
xor
fcmovbe
inc
mov
add
mov
sbb
sub
mov
ss
mov
and
arpl
xor
sti
fbld
pop
jecxz
mov
outsl
mov
cs
lret
pop
jecxz
in
sbb
pop
lret
in
sub
xchg
xchg
and
push
test
fdivrs
sbb
xchg
mov
cmpl
or
mov
movsl
xor
in
jecxz
dec
ss
add
loop
cmp
out
jle
xor
inc
arpl
mov
out
lcall
sysret
push
aas
dec
jnp
push
movl
addr16
lods
in
or
aam
xrelease
push
ja
out
push
pop
outsb
jnp
jecxz
add
jns
xor
jne
dec
inc
pop
or
mov
test
adc
jecxz
mov
ja
aad
daa
adc
inc
stos
add
push
icebp
xchg
pushf
jno
push
mov
jecxz
and
jp
jo
lods
imul
mov
inc
aas
orl
loop
mov
dec
dec
pop
inc
sub
cltd
arpl
scas
insb
fiadds
cmp
cltd
sbb
xchg
insl
fstpt
xchg
lret
fisttps
or
mov
scas
xchg
pushf
rcll
int3
in
or
mov
fsubrl
sub
or
push
cmpsl
mov
push
inc
mov
jnp
lret
decl
mov
add
out
fldt
pop
cmp
dec
rcll
mov
cwtl
inc
mov
cltd
pop
xor
pop
dec
cs
inc
add
xchg
mov
cmp
fisttps
pop
adc
cwtl
xchg
out
mov
inc
inc
jbe
mov
push
jne,pn
and
mov
pop
das
mov
mov
mov
sub
out
clc
xchg
roll
ds
sti
cwtl
mov
dec
iret
sbb
dec
inc
dec
jne
popf
aad
add
cmp
or
jecxz
scas
cmc
or
movsb
insb
cltd
sub
fdivs
test
sbbb
inc
mov
imul
mov
push
movsb
pop
imul
push
pop
jne
dec
faddl
pop
sbb
jl
mov
inc
pusha
dec
insl
and
js
or
aas
pop
icebp
xchg
inc
mov
sub
jmp
ss
fwait
xchg
call
sbb
mov
mov
test
add
lahf
popa
or
pushf
or
loop
mov
xchg
inc
mov
push
mov
sbb
notb
sbb
mov
loope
cltd
xchg
xor
ja
cmp
into
stos
mov
roll
aaa
pop
daa
cs
mov
pop
ja
dec
push
pop
xchg
mov
push
sahf
pop
jnp
xlat
repnz
sub
push
fstpt
or
ficompl
fistpll
fwait
add
and
mov
push
fwait
sbbl
add
fwait
add
adc
push
roll
fwait
es
filds
in
aam
xchg
outsb
xchg
push
adc
mov
loopne
lods
mov
sbb
into
nop
inc
js
pusha
test
jno
push
mov
clc
dec
and
mov
adc
mov
sbb
xchg
pushf
mov
clc
pop
notb
es
jmp
add
inc
mov
and
or
decb
inc
mov
sahf
jb
xchg
inc
lods
stc
cwtl
fwait
mov
and
jge
insl
rorl
fstps
repz
rorl
sbb
sbb
scas
mov
into
jp
test
adc
jl
or
cwtl
daa
mov
lods
pop
es
pop
mov
sbb
push
aam
lcall
or
outsl
dec
orb
push
jmp
jg
fwait
cmp
lahf
pop
push
rorb
fsubp
xor
xchg
sahf
xchg
lods
aaa
push
or
mov
stc
aam
xchg
push
fwait
pop
lahf
loope
fwait
enter
gs
inc
imul
imul
or
call
fcoms
loope
pop
xchg
push
loopne
mov
xlat
scas
sti
jbe
adc
sbb
rclb
push
stos
cwtl
cltd
sbb
mov
out
repz
dec
aaa
shll
sbb
sub
fwait
xor
adc
cwtl
or
mull
mov
fnstsw
inc
das
lods
jae
dec
mov
fwait
shlb
cmp
cmpsl
fwait
sahf
ficoms
dec
jns
xchg
int
out
mov
es
push
lcall
shl
or
jp
cs
fstl
xchg
cmp
push
mov
cmp
inc
js
inc
pop
fldt
xchg
aas
out
fcmove
arpl
mov
inc
mov
insb
jae
scas
mov
hlt
int3
aaa
add
pop
jb
out
mov
arpl
sub
adc
loop
out
loope
mov
ds
ret
stos
je
or
dec
iret
jl
push
and
aad
push
or
mov
push
pop
pop
mov
in
mov
stos
es
ficomps
aam
ror
loope
cs
pop
mov
pop
sub
cmpsb
and
xchg
iret
int3
cmpsb
pop
in
sbb
aad
int3
into
lret
mov
sbb
incb
xlat
push
cmpsl
adc
inc
inc
inc
dec
and
enter
fcompl
fistl
fwait
std
loop
mov
fwait
sub
loopne
xchg
xlat
loope
push
mov
mov
mov
pop
int
add
mov
sbb
loop
dec
push
cmp
push
dec
cmp
jnp
lods
and
test
cltd
arpl
aad
cwtl
lock
jp
fcomp
xor
out
mov
add
dec
les
push
stos
jmp
mov
mov
xchg
add
cwtl
cmp
adcl
mov
mov
xchg
adc
or
testb
lcall
pop
jns
fwait
push
pusha
mov
xchg
jge
inc
sbb
lahf
pop
in
xchg
mov
mov
sub
fwait
add
cmp
pop
mov
popf
lds
xlat
pushf
push
nop
movsl
mov
push
jae
push
inc
jge
sub
pop
sti
shrb
jno
push
insl
push
mov
push
pop
fwait
or
xchg
dec
inc
mov
ds
pushf
pop
fwait
cld
cmp
pop
lds
addl
clc
cmp
mov
mov
mov
call
call
xchg
pusha
roll
mov
test
adc
or
pop
cmp
lods
xchg
movsb
fwait
pusha
cmpsl
rolb
out
fwait
xlat
ret
bound
add
mov
daa
cmp
adcb
add
dec
out
popf
mov
sbb
mov
clc
lret
jp
mov
jl
insl
js
pushf
and
push
scas
fwait
mov
popf
jb
pop
push
mov
adc
and
xorb
xchg
jns
and
push
inc
js
and
mov
xchg
xchg
in
dec
push
sub
or
std
jp
dec
bound
in
test
sbb
push
fcomps
leave
push
jp
fwait
out
jo
sbb
out
or
and
enter
fs
aad
ret
call
mov
repz
loop
add
idivb
sub
xor
sub
jl
mov
orb
scas
xlat
popa
popf
xchg
test
stos
mov
xor
mov
test
mov
adc
inc
addr16
scas
sbb
mov
xor
jge
or
jle
push
inc
fwait
inc
nop
fcoms
and
loope
xor
push
jne
out
out
push
mov
clc
aam
and
dec
leave
fwait
pop
xor
aas
dec
add
inc
fwait
rcrl
call
jle
mov
sahf
xchg
fistl
xchg
jae
out
aam
shr
adcb
scas
movsb
mov
pop
xchg
ja
and
sub
fwait
push
dec
out
jecxz
jmp
fwait
hlt
pop
xlat
mov
fwait
cmp
and
stos
xchg
dec
sarb
sbb
clc
and
inc
sbbl
mov
jl
das
sbb
out
mov
test
incb
rcr
js
les
cld
cmp
mov
push
scas
mov
fwait
outsl
jle
jge
ret
inc
out
fwait
and
cwtl
xor
sub
popf
inc
loope
mov
push
fwait
or
in
xchg
call
jnp
ds
push
shl
je
dec
sbb
adc
cmpb
jmp
mov
sahf
jne
pop
pop
cli
and
fnstsw
or
and
or
fwait
cmp
nop
mov
sub
sub
ret
sbbb
mov
fisubs
outsb
lock
out
mov
or
sbb
fwait
or
cld
jle
rcrl
aaa
mov
mov
push
push
gs
loop
adc
dec
cmp
push
xor
fsubp
push
sub
stos
push
mov
dec
mov
mov
jle
loopne
or
ret
test
cltd
adc
mov
ret
sbb
insb
fwait
sbb
mov
xor
lret
mov
xchg
or
adc
push
repnz
mov
sbbb
dec
sarb
push
femms
jnp
mov
leave
fwait
in
or
andl
lcall
fidivl
negb
cmp
stc
jg
mov
aas
mov
sbbl
cwtl
into
insl
in
cmp
jl
add
xor
jno
fmul
sbb
adc
jbe
fwait
inc
subl
cwtl
rolb
ljmp
push
fwait
mov
cwtl
int3
jne
mov
sbb
incb
jg
pop
addr16
push
xchg
push
lret
nop
fidivrs
repnz
mov
aaa
adc
aam
push
bound
insl
test
mov
push
dec
lock
lcall
sub
outsl
xor
lahf
es
mov
fwait
fs
cmp
xchg
xor
cmpsl
inc
fwait
shl
sbb
adc
pavgb
jecxz
dec
jecxz
repnz
jne
mov
mov
fbld
outsl
daa
mov
jae
push
divl
int3
mov
sti
add
mov
xor
insl
fisubrs
xchg
pop
mov
test
fwait
xor
imul
and
mov
loope
arpl
pop
sub
sbb
ljmp
shrl
add
or
std
cmp
sbb
cmc
fs
fwait
or
jns
jl
xlat
fwait
int
mov
add
jnp
sbb
mov
pop
fwait
insb
test
cmpsl
outsb
sub
pop
mov
enter
xor
pop
xchg
cmp
dec
push
cs
fwait
lea
js
scas
std
dec
mov
test
into
mov
imul
enter
adc
mov
pop
xor
addr16
fwait
outsb
cli
mov
adc
inc
mov
or
xor
fwait
int
xor
cmp
cltd
loopne
jnp
and
hlt
xchg
cmpb
mov
adc
fldt
push
jmp
fstps
stos
cmpsb
loopne
sti
lods
sub
mov
andl
xchg
cwtl
mov
jns
inc
adc
outsb
jecxz
lret
mov
pop
mulb
jb
dec
push
pusha
cwtl
jg
out
iret
or
adc
aam
push
inc
fwait
xchg
rorb
testb
fwait
jns
sbb
mov
in
fwait
loopne
inc
enter
cmp
push
xor
add
or
add
fsubl
lret
cwtl
sub
mov
out
insb
xchg
xchg
leave
scas
iret
jg
cmp
pop
push
mov
cli
pop
cmp
pop
pop
repz
jns
outsb
mov
test
lcall
lcall
negl
fwait
xchg
aad
or
mov
jp
out
jg
push
xchg
and
sbb
xor
jp
dec
ja
clc
retw
fisubs
mov
imul
cwtl
iret
sbb
rcrb
fcompl
sahf
fists
pop
icebp
lcall
adc
fwait
les
inc
jne
inc
bound
mov
sbb
jb
mov
jo
mov
cs
fimull
dec
es
fwait
int3
xchg
je
sub
pop
pop
cltd
out
cwtl
rcrl
sti
lret
mov
cwtl
sub
lahf
or
pushf
fwait
insb
jl
or
mov
mov
and
pushf
jno
push
es
sti
inc
pop
add
pop
inc
fldenv
lcall
leave
int3
ret
out
adc
dec
jb
xor
or
fwait
ror
loope
test
mov
cwtl
repnz
fwait
std
xor
ljmp
sub
fldl
fmulp
test
pop
clc
adcb
mov
inc
fs
sbb
sub
insb
fwait
push
adc
push
in
rorl
adc
push
xchg
scas
lret
out
fisubs
mov
jne
out
enter
jbe
lock
push
into
fwait
rcrb
pop
sbb
and
imul
rcrl
pop
xchg
jb
les
sbb
movsb
or
xor
cmpsl
insb
scas
push
and
flds
fcom
adc
push
js
mov
dec
sbbb
xchg
mov
jns
sti
sub
adc
fmuls
test
sub
dec
fwait
mov
dec
or
fwait
insb
mov
sbb
xchg
lods
lcall
addl
cmpsb
cmpsl
ret
fwait
mov
mov
insb
fwait
lea
aaa
and
out
popa
insl
jecxz
je
cmp
fwait
ljmp
cli
loope
into
and
repz
mov
push
loop
xor
adcb
add
push
std
movsl
mov
xchg
sbb
sbb
or
mov
and
inc
sbb
xor
mov
clc
cwtl
and
cwtl
dec
jmp
out
add
mov
lret
insl
mov
fcmovnu
int3
outsb
mov
pop
fwait
cvttps2pi
pushf
pushf
movsl
cmpsb
roll
imul
scas
dec
subb
neg
ds
fwait
mov
movl
sti
mov
xchg
pop
dec
fwait
push
push
or
cmp
cwtl
fwait
les
push
jne
test
rolb
lea
push
lahf
and
stc
pop
mov
xchg
loopne
mov
pop
pop
jge
add
ja
fwait
daa
xor
stc
sti
xchg
pop
in
fs
cmp
xchg
adcl
and
test
fwait
pop
mov
mov
enter
dec
inc
pop
ret
into
mov
jecxz
xor
fidivs
mov
popf
and
push
xor
and
sbb
leave
mov
test
pop
fsts
movsb
or
daa
ficompl
pop
add
aad
fnstsw
jg
mov
pop
test
cmp
clc
test
shll
dec
dec
dec
iret
loop
mov
adc
xor
cwtl
mov
mov
push
movsl
sub
sbb
adc
xlat
jae
pop
rep
sbb
aas
mov
push
mov
je
or
xchg
fnstcw
xchg
pop
xchg
loopne
sbb
sahf
mov
mov
push
sbb
and
dec
popf
mov
pop
lcall
inc
mov
cmp
ret
xor
lahf
fiadds
out
movsb
mov
mov
push
fwait
mov
xor
sbbl
inc
or
mov
jge
icebp
sbb
jmp
aad
fdivr
pop
mov
mov
sbb
pop
sbb
mov
outsb
imul
dec
mov
icebp
mov
sbb
imull
sahf
add
xlat
sub
je
mov
add
popf
out
mov
sbb
sbb
fwait
xchg
or
daa
cmp
pop
sbb
ds
sahf
mov
fstpt
outsb
xchg
xor
mov
mov
iret
mov
aam
lock
mov
fwait
xor
pop
or
pop
mov
cmp
in
jecxz
popf
xchg
mov
and
sub
repz
xlat
sbb
push
daa
popf
fldenv
push
enter
aam
jle
jg
cmp
test
sti
inc
test
into
lcall
pop
push
cltd
mov
dec
dec
aad
lock
iret
outsl
out
into
xor
mov
fistl
fimuls
push
scas
ss
sbb
and
iret
test
fwait
cltd
jbe
daa
pop
fstps
es
rclb
adcl
xchg
sbb
fwait
cld
outsl
sahf
outsb
insl
mov
pop
inc
ficomps
cmp
cmc
iret
pop
push
push
pop
cltd
inc
xor
mov
pop
lods
adcb
xor
aas
pop
or
aam
popa
sub
or
jmp
icebp
ds
pop
sbb
xchg
jecxz
test
xor
adc
inc
sbb
jl
xchg
dec
sti
adc
jb
fnstsw
mov
into
inc
loopne
jb
jl
fwait
inc
fimull
and
cmp
fwait
lret
xchg
jae
mov
push
aam
sti
loopne
dec
xor
inc
pop
dec
cmp
push
push
inc
or
mov
sub
fsubl
fwait
aam
xchg
dec
xchg
in
fwait
push
cmp
mov
lcall
sbb
pop
sti
lret
cwtl
mov
jmp
adc
fwait
cmp
fistps
fwait
cwtl
std
inc
cmp
dec
movsb
pop
fwait
test
mov
mov
adc
xor
icebp
sbb
aas
push
jecxz
push
dec
scas
push
ret
mov
rcll
flds
jnp
repz
or
mov
fwait
mov
outsb
sbb
or
jo
inc
std
mov
dec
rolb
fucomp
sbb
add
push
mov
inc
pop
jmp
pop
pusha
push
fwait
mov
ror
inc
xchg
xchg
loopne
mov
push
fwait
aam
test
mov
adc
sti
mov
cltd
sbb
fwait
in
mov
and
fwait
inc
push
repnz
mov
sbbb
mov
psubd
sarb
jmp
cld
jg
pusha
aaa
insl
fildl
sub
push
cltd
inc
jl
cltd
inc
addr16
inc
ljmp
mov
mov
add
aam
adc
sbbl
push
mov
inc
test
cmp
rorl
pop
dec
cmc
push
jl
pop
sub
sbb
hlt
pop
out
push
fwait
sbb
loop
xchg
cmp
fs
or
cltd
mov
push
bound
enter
fwait
aad
inc
loop
inc
roll
fwait
xor
pop
sub
aam
ret
insl
add
mov
mov
and
or
jne
std
mov
push
mov
sbb
mov
lcall
in
fwait
jb
mov
ficoms
cmc
push
addr16
insl
mov
fsub
sbb
mov
cltd
fwait
test
fstpl
dec
pop
popl
lcall
andl
sbb
test
lea
stc
jg
add
stos
pop
sub
mov
xchg
sub
xchg
aam
loope
dec
cmp
mov
fwait
jle
add
mov
sub
mov
mov
pop
cmp
subb
fwait
dec
xchg
xchg
mov
push
pop
int
sbb
add
pop
call
jo
iret
loopne
xchg
cmp
pop
out
mov
add
hlt
pop
pop
or
xchg
adc
xchg
push
aad
push
cmc
ret
dec
lcall
test
pop
mov
loop
fwait
mov
dec
sbb
jl
or
and
inc
fwait
cwtl
ds
xchg
xchg
xchg
xor
mov
mov
into
mov
mov
pushf
pop
loop
js
fstps
fwait
adc
stos
adc
pushw
fs
clc
cmpsl
fisubl
enter
lock
push
mov
fwait
mov
or
imul
dec
fwait
mov
jns
add
adc
mov
lea
mov
cld
stos
cltd
sti
aaa
push
inc
cmpsl
and
sub
dec
jecxz
or
adcl
mov
sub
jo
in
xchg
mov
inc
and
sarb
fsubrl
xchg
jno
out
sbb
int
sbb
iret
adc
push
int3
arpl
call
out
inc
stos
mov
sbb
mov
cltd
fwait
jle
call
iret
jae
ja
fwait
loopne
dec
test
jl
dec
xchg
pop
cltd
cmpsl
pusha
leave
loop
mov
ret
std
push
pop
push
xchg
addl
mov
or
fwait
inc
in
std
mov
inc
fnstenv
sbb
fistps
or
jmp
mov
mov
pop
fnsave
lds
stos
test
rcrl
mull
rcrb
mov
ds
cmc
xor
gs
bound
cwtl
cmpsl
mov
fwait
inc
loop
xchg
scas
jne
in
jge
add
nop
js
jg
xchg
sarb
mov
lds
cmp
xchg
cltd
mov
popf
das
pop
mov
ret
ds
fwait
or
inc
adc
dec
xchg
inc
fwait
shll
jl
test
out
and
xor
pop
pop
dec
ds
enter
icebp
fwait
adc
xlat
call
fwait
dec
jae
clc
xchg
sbb
outsl
sub
jno
mov
jge
lock
jne
leave
jae
ret
loop
pushf
notb
jo
out
pop
int3
mov
cmp
or
out
pop
inc
pop
mov
rcrl
lods
sub
ds
jnp
inc
xchg
jo
or
dec
cmpsb
cltd
add
aad
roll
mov
mov
push
xchg
insb
jae
mov
cli
fdivrs
cwtl
aam
mov
stc
daa
stos
add
pop
dec
xlat
mov
fwait
mov
mov
push
mov
leave
mov
push
or
sub
addl
lret
mov
shlb
sbb
sub
cltd
mov
out
cmp
jb
dec
push
and
xor
lret
or
mov
daa
cmpl
out
scas
pop
cmp
rcrl
inc
jnp
dec
mov
jnp
jo
fwait
push
push
into
fwait
adc
imul
cwtl
inc
inc
cwtl
loop
cmp
ds
pop
mov
add
scas
inc
xchg
fwait
push
push
fbstp
imull
mov
adc
cmp
lcall
mov
mov
pop
add
lret
dec
cs
inc
push
mov
mov
cli
std
mov
sbb
push
adc
add
inc
mov
mov
adc
mov
adc
mov
push
mov
cmc
cmp
fs
cld
pop
shlb
subb
cmpsb
repnz
pushf
mov
adc
cltd
sbb
std
call
ret
cs
imul
andb
sub
iret
lds
jmp
enter
push
fwait
add
fwait
adc
mov
lcall
push
stos
mov
sbb
or
or
or
ret
dec
dec
xchg
negl
fldl
pop
int
pop
jp
cwtl
les
loopne
in
lret
or
jno
inc
enter
cmp
mov
inc
jg
sbb
bound
jp
adc
repnz
xor
pop
jnp
lcall
push
mov
cmp
inc
lcall
mov
mov
shll
std
mov
sbb
and
adc
jnp
out
mov
cltd
adc
jl
fsubl
xchg
inc
mov
mov
xchg
fs
fwait
cmpsl
cltd
jmp
fwait
in
sub
cs
sbb
fwait
jg
add
mov
xchg
frstor
fwait
hlt
dec
jb
jbe
xor
rorl
jg
lcall
add
cmp
lret
inc
xchg
or
pop
pop
test
shlb
mov
sti
or
into
lock
mov
adc
lcall
xchg
fwait
xchg
jmp
mov
bound
pop
fwait
dec
jecxz
jge
pop
aam
pop
mov
fwait
sbb
divb
js
inc
and
jmp
push
mov
dec
xchg
in
fistpl
lret
hlt
inc
arpl
xchg
pop
cmpsl
scas
repz
push
pop
push
pushl
mov
add
fcomps
fldl2t
cwtl
inc
scas
hlt
pop
mov
in
inc
fwait
mov
push
out
xchg
mov
fwait
call
mov
xor
lods
mov
fs
mov
inc
js
fmuls
lcall
pushf
inc
stos
adc
stos
mov
fcomps
cmp
sub
fcom
enter
call
xchg
or
movsb
xor
mov
mov
mov
out
fisubrl
cltd
mov
ret
jno
jnp
ja
pusha
ljmp
sbb
sbb
cmp
imul
cli
cli
loopne
sti
xchg
negl
cmpsb
pusha
or
inc
idiv
cmp
fsubrs
enter
call
jae
jbe
push
or
sub
out
out
test
inc
jecxz
cmp
sub
cs
out
adc
mov
scas
push
scas
sub
sahf
roll
scas
pop
lods
inc
lods
xchg
lods
push
lods
sbb
lods
lods
fisubrs
pop
xchg
dec
pop
addr16
faddl
fmull
fcoml
aam
jmp
imul
outsl
shrb
cmc
xchg
scas
mov
or
push
mov
or
or
or
adc
lods
mov
je
adc
xor
aam
hlt
sbb
add
or
hlt
ret
hlt
loop
jmp
in
mov
mov
mov
cli
jbe
jg
push
mov
popf
adc
or
sbb
add
add
push
mov
or
pop
out
xor
ud0
scas
outsl
rcrl
rclb
scas
add
cmp
or
lcall
inc
inc
dec
imul
or
xor
fisubrl
test
mov
fcompl
dec
sub
pop
adc
adc
adc
sbb
xor
aas
xlat
pop
repz
sti
out
out
out
xchg
shrb
mov
lods
inc
test
notb
call
call
xchg
lods
sahf
testl
add
or
aas
out
sub
cs
enter
ljmp
addr16
gs
xchg
es
outsl
out
adc
sbb
rcrb
sub
mov
jg
out
xchg
pop
insl
add
sub
or
or
or
or
or
or
or
or
or
or
or
or
or
adc
test
movsb
je
add
addr16
hlt
cmp
cli
mov
mov
repz
scas
out
inc
loop
ljmp
addr16
sbb
and
dec
sbb
repz
movsl
adc
or
sbb
inc
pop
dec
sbb
fdivrl
fsubrl
pop
fcompl
faddl
fmull
fdivl
fdivrl
fsubl
fsubrl
ret
dec
iret
hlt
div
push
out
out
cli
xchg
rcrl
repnz
mov
adc
pop
adc
dec
adc
jg
adc
pop
adc
adc
adc
adc
mov
mov
std
adc
aas
cltd
cmpsl
out
shr
xor
jmp
ficompl
mov
fsts
nop
jnp
shlb
scas
xor
sub
cmp
loopne
pop
jns
add
rorb
scas
stos
insb
test
imul
movsb
xchg
cmpsl
out
dec
rcl
data16
cmc
cwtl
shl
scas
in
add
popf
aas
test
or
or
mov
movsb
nop
mov
push
mov
scas
imul
xchg
rorb
iret
cmp
mov
jnp
xlat
jecxz
dec
rorb
inc
xchg
sbb
les
loop
sbb
cwtl
shlb
dec
rorl
ror
or
in
imull
xor
pop
sbb
sarl
mov
or
and
rcrb
mov
mov
pop
aaa
shll
repnz
outsl
mov
lahf
stos
lret
stos
in
or
sbb
and
outsl
shl
popf
mov
rcr
cmpsb
pop
or
sub
sbb
add
jno
cmpsl
add
cltd
xor
adc
jmp
lcall
bt
push
mov
mov
push
call
push
popa
mov
imul
rcrb
bound
mov
sti
push
jge
sbb
sub
or
jnp
addr16
inc
inc
ret
in
cli
movsb
les
icebp
cwtl
lret
call
mov
jbe
movsb
and
addb
dec
or
cli
sbb
mov
cmp
add
ret
mov
sub
jb
xchg
mov
sub
lea
push
loope
cmp
enter
fcmove
int
mov
inc
iret
inc
popf
daa
xchg
mov
es
rclb
push
lods
pop
adc
cmpsl
nop
fsubr
jp
nop
pop
cwtl
cmp
scas
push
or
adc
add
mov
jo
jae
lret
popf
lods
outsb
xchg
mov
jg
out
jb
sbb
or
mov
ljmp
imul
and
je
movsbw
call
mov
btr
clc
movzbw
not
push
bswap
bsf
call
jg
xchg
push
inc
cmpb
push
popa
mulb
out
fcmovu
call
fdivrp
andl
dec
adc
out
into
into
xchg
shlb
rclw
sti
push
das
sarb
addr16
in
testb
sub
xlat
sub
sbb
xor
mov
loop
inc
ret
test
xchg
xlat
insb
adc
xchg
addr16
lahf
push
sub
sbbb
pusha
cmpb
movb
mov
movw
push
lea
jne
sub
shr
rol
mov
pusha
stc
add
jmp
pusha
clc
sub
jp
sub
rol
shr
clc
neg
neg
inc
setnp
sub
sub
adc
adc
call
bsf
push
sbb
mov
pushf
sub
shl
movsbw
push
xor
cmc
stc
push
push
pusha
mov
inc
pushf
call
repnz
jmp
or
mov
not
push
pushf
add
movzbw
add
pusha
not
shr
btr
mov
stc
shr
stc
cmp
jmp
push
movl
push
jmp
clc
mov
clc
pushf
and
pusha
clc
clc
add
add
stc
add
call
fcoms
pop
rorl
pop
rorl
dec
jno
and
dec
lret
inc
inc
push
gs
lods
aam
and
pop
shl
pushf
popa
jno
stc
cmp
daa
jl
mov
xor
in
gs
xchg
loope
test
or
lret
ss
shrb
xchg
inc
cltd
sub
mov
adc
lea
sub
sbb
aaa
mov
mov
sbb
dec
lret
dec
pop
sbb
mov
mov
cmp
iret
inc
xchg
dec
adc
jp,pn
jmp
jnp
sub
xor
mov
ret
out
push
out
dec
xchg
cmpsl
sub
sbb
xchg
rcrb
xchg
mov
or
sub
mov
negl
insb
jecxz
in
idivl
lret
shll
ds
push
ljmp
fs
je
pushf
not
lea
movzbl
movzwl
pusha
movw
pushf
lea
movsbw
pushf
pop
mov
call
pop
pop
test
jecxz
repz
inc
jb
adc
jno
jle
dec
ret
inc
dec
neg
test
xchg
clc
imul
add
inc
rcpps
adc
dec
push
into
scas
or
lahf
leave
xor
rclb
or
jl
pop
dec
fistps
mov
nop
pop
push
jb
into
jmp
jecxz
jmp
ja
cwtl
insl
in
ljmp
add
pusha
pushf
pushl
movl
pushf
pushl
jmp
add
adc
add
sbb
adc
add
add
add
je
add
add
add
add
add
movzbl
lea
mov
push
pushl
push
pushl
ret
jmp
xchg
jmp
clc
pushf
cmc
ror
cmp
call
pop
mov
adc
daa
dec
pop
inc
das
sahf
popa
ljmp
push
pop
out
push
hlt
fimuls
and
mov
push
adc
jns
dec
mov
ss
rorl
popa
imul
jns
dec
scas
mov
or
int3
mov
pop
sbb
xchg
adc
jnp
add
or
out
lds
inc
movsl
xor
mov
add
movsb
xor
movsl
pushl
mov
xchg
movsl
adc
int
mov
jb
pusha
xor
mov
aaa
cmp
lea
jne
pushf
stos
pusha
pushf
mov
pushf
lea
jmp
bsr
lea
push
setg
inc
rcl
lea
mov
and
xadd
cmc
mov
xor
push
shrd
pop
mov
cmc
jmp
jmp
jmp
call
lea
je
shld
bts
add
btr
mov
cmp
stc
test
pushf
add
add
jl
mov
shrd
mov
pushf
cmp
mov
lea
jbe
shr
mov
btr
btr
add
cmc
shl
pushf
not
mov
sbb
bt
inc
add
cmc
movzbw
movl
pushf
lea
shrd
lea
mov
sub
jns
pusha
cmp
push
lea
jo
jbe
bts
rcl
neg
rol
sub
rcl
pushf
mov
add
push
mov
dec
inc
bsf
add
movzbw
add
shr
shr
test
mov
rol
rcr
add
jmp
pushf
mov
lea
jae
pushf
setge
pushl
jmp
mov
nop
stos
aaa
leave
adc
sbb
push
and
adc
pusha
loope
std
pushf
xor
ret
ret
stos
sub
ja
rcrl
test
int3
fadds
jmp
mov
mov
scas
lcall
and
adc
enter
push
sahf
push
sarl
ja
jge
out
arpl
pop
adc
xorb
lods
in
and
aaa
sbb
sbb
add
adcl
ret
nop
iret
aam
pusha
lea
ja
pusha
call
xchg
push
mov
mov
out
in
cmp
outsb
repz
iret
cld
dec
je
xor
daa
sub
lcall
nop
or
mov
cmp
cmp
adc
nop
xchg
cwtl
mov
popf
jmp
push
lea
call
call
push
jl
leave
jp
fwait
mov
sub
hlt
jecxz
out
stos
push
call
mov
mov
sub
lea
jle
outsl
lcall
inc
mov
das
cmp
fsubrs
cmp
mov
stc
jo
mov
enter
mov
xor
loop
int
hlt
in
mov
ljmp
jmp
movsbw
mov
pushl
pushf
mov
pushf
mov
call
clc
cmp
jmp
mov
pusha
pushf
call
push
mov
mov
jmp
clc
cmp
jmp
mov
mov
mov
mov
cmc
push
test
push
pusha
lea
je
bt
add
call
cmp
bt
add
pushf
call
dec
dec
popa
jae
dec
lret
imul
xor
ficoml
inc
dec
fists
fs
xchg
loope
adc
insb
in
xor
dec
push
cmc
in
and
fwait
sbb
mov
popf
xchg
inc
outsb
add
sbb
int
ja
mov
repz
cwtl
test
cmc
stc
rcr
clc
mov
lret
pushf
xchg
xor
push
inc
outsl
loopne
mov
inc
movsb
mov
andb
dec
push
movsb
insb
xor
add
bound
cmp
xchg
mov
ret
xchg
popf
dec
jmp
pusha
lea
jb
cmp
cmpb
pushf
movb
lea
jne
shld
bswap
cmp
mov
pushf
pusha
mov
add
cmc
call
lea
je
xchg
bswap
movzbw
pushf
lea
lea
xchg
not
lea
xchg
movzwl
call
call
add
inc
xor
jb
popa
je
inc
outsl
outsb
je
add
test
push
cmp
pusha
movb
lea
je
clc
pusha
cmc
pusha
cmp
push
call
stos
inc
pop
push
pop
jle
out
adc
push
dec
dec
inc
mov
test
mov
mov
adc
cmp
push
filds
mulb
nop
push
sub
mov
icebp
movsl
pop
sub
in
arpl
mov
dec
xor
arpl
lods
xchg
and
or
inc
mov
cs
pushf
cld
inc
std
inc
sbb
inc
fsubrs
sub
andb
adc
cmpsb
jmp
ss
out
lcall
lcall
cmpsl
aaa
push
ja
arpl
loopne
lods
movsl
sahf
pop
into
jmp
jle
xlat
fistps
or
cmpsl
dec
add
add
imul
adc
repz
ss
in
xchg
ds
pop
inc
lods
stos
sub
pop
and
sub
aam
mov
cmp
cmp
pop
addr16
fs
jg
punpcklwd
repnz
xchg
inc
into
add
je
cmpsb
sbb
mov
xchg
mov
aas
cmp
pop
dec
xchg
cmp
pop
push
xchg
pop
pop
pusha
dec
xor
mov
fiadds
cmpb
ret
mov
stc
pop
fimuls
jae
inc
lds
scas
into
push
sbb
adc
mov
mov
xor
jmp
aaa
popl
test
cmp
pusha
jmp
add
jmp
bt
sub
jmp
stc
cmp
push
xor
sub
bt
jmp
popa
cmp
in
jnp
ret
or
mov
sbb
int
adcb
mov
jecxz
jmp
mov
mov
xchg
jg
cmp
daa
mov
mov
dec
inc
sub
inc
adc
mov
sbb
scas
scas
es
aaa
ss
ds
fsubrp
test
jecxz
mov
mov
lret
mov
push
cmpsb
mov
pushl
push
outsb
xchg
lods
mov
lret
inc
ja
jge
sbb
pop
call
ljmp
shr
dec
call
bt
push
bt
add
jmp
clc
mov
cwtl
movl
pushl
clc
jmp
test
bt
add
push
pushf
lea
jmp
test
pushl
jmp
pushl
popl
push
pushf
movb
pushl
lea
jmp
call
call
pushf
mov
not
push
call
mov
push
jmp
movzbw
push
mov
mov
movzbw
push
jmp
lea
jne
push
sub
push
pushf
pushf
xchg
pushf
movl
mov
mov
push
movb
pusha
pushl
ret
cmp
stc
stc
add
mov
mov
mov
lea
jmp
movsbw
movzbw
mov
bswap
repz
popl
neg
xchg
rcr
shr
pushl
popl
movsbl
pusha
bsf
movl
movsbl
movzbw
sar
mov
shld
add
lea
xor
add
bsf
shl
neg
pusha
not
ror
dec
lea
or
bsr
clc
shrd
sub
call
jmp
pusha
mov
call
mov
lea
jne
push
mov
not
pushf
movsbw
mov
pusha
pushf
pusha
bswap
repz
popl
test
shl
bts
sub
mov
or
pushl
popl
btc
call
pusha
pushf
xchg
movzbw
pushl
push
call
dec
clc
cmc
bt
mov
xor
pusha
movw
cwtl
jmp
dec
cmp
test
pushf
xor
bt
bt
test
cwtl
pusha
cmp
sub
call
pushf
call
clc
shrd
shrd
aas
mov
push
sub
stc
clc
add
jmp
test
pushl
sub
pusha
pushf
pushf
mov
pushl
call
mov
jmp
lea
sub
jb
test
clc
push
sub
sub
jp
push
neg
call
lea
je
stc
call
push
cmc
mov
sub
pusha
mov
pushf
lea
jmp
add
mov
movb
pushf
push
lea
jmp
movsbw
sub
ror
btc
rol
jmp
shrd
bsf
or
mov
xor
mov
pushf
bt
cmp
pusha
add
jmp
pushl
popl
pushf
movw
movb
lea
jmp
lea
movzbl
jmp
pusha
and
jmp
pushf
mov
pushf
pushf
movw
movb
lea
jmp
push
mov
pushf
movb
mov
pushf
lea
jmp
pushl
popl
push
push
push
lea
jmp
call
call
jmp
pushf
sub
movw
pushf
mov
pushf
pushf
pushf
pushf
lea
jmp
mov
pushf
jmp
movb
lea
js
pushf
jg
popl
pusha
lea
jmp
btr
cmc
rol
mov
dec
setge
neg
add
mov
push
add
jmp
ror
mov
clc
ror
jmp
inc
bt
call
cmp
xor
pushf
call
mov
not
call
mov
pushf
mov
lea
jmp
neg
pushf
pushf
jmp
movb
pusha
mov
mov
pusha
lea
jmp
dec
xchg
add
mov
sub
mov
cmp
stc
push
clc
sub
bt
stc
jmp
jmp
mov
movsbl
pop
call
mov
bswap
pushl
inc
rcr
pusha
rol
push
cmp
stc
pushf
sub
sub
bt
dec
mov
pushf
clc
bt
add
cmp
add
lea
jbe
pushf
mov
push
pusha
lea
jmp
mov
pusha
movb
push
movw
lea
jmp
jmp
pushl
mov
mov
pushf
pusha
mov
movb
push
push
push
mov
push
mov
movl
movb
lea
jne
shl
rcl
mov
cmc
jmp
mov
movl
lea
jmp
test
mov
test
mov
bt
jmp
push
pushf
lea
jl
push
mov
push
pushf
movzbw
movzbl
movzbl
mov
pusha
mov
call
pushf
pushl
mov
push
mov
lea
jmp
lea
js
pushf
pushl
popl
pushf
lea
jmp
movb
movb
pushl
popl
pushl
lea
jmp
pushf
call
pushf
pushf
popl
push
pushf
pushl
popl
pusha
movb
lea
jmp
repz
popl
pushf
shr
shl
stc
mov
shl
pushl
popl
and
clc
add
movl
inc
mov
test
test
cmc
add
pushf
pushl
lea
jmp
mov
add
pusha
pushf
popl
call
add
add
pusha
jmp
cmc
test
and
test
bt
cmc
cmp
call
mov
or
xor
cmc
add
push
lea
jne
pushf
mov
mov
mov
pusha
lea
jmp
neg
inc
and
test
stc
test
mov
cmp
bt
pusha
add
pushf
push
mov
movb
lea
jmp
dec
rcl
bts
mov
push
add
pushl
mov
push
pushf
mov
movb
pusha
lea
jmp
mov
lea
jl
pusha
lea
jne
bts
xorb
push
pushf
movsbw
jmp
inc
movzbw
clc
jmp
xor
adc
rcl
sar
mov
rcr
not
rcl
shrd
mov
call
call
mov
pusha
pushf
pushf
mov
lea
jmp
pushl
popl
push
mov
lea
jmp
pushf
mov
pop
bswap
jmp
clc
dec
movzbl
bt
cmc
cmp
bt
sub
bt
cmc
pushf
pushf
xor
pusha
cmc
pushf
cmp
neg
lea
je
pusha
ror
stc
bt
sub
jmp
bt
xor
cmc
cmp
neg
push
jmp
btc
push
bts
sub
mov
pushf
add
movb
pusha
lea
jmp
call
mov
pushl
pushf
pusha
pushl
lea
jmp
mov
call
pushf
pushf
popl
pusha
jmp
movl
lea
jmp
pushl
mov
jmp
mov
not
mov
rcr
mov
cmp
clc
add
pusha
pushf
mov
pushl
push
movb
lea
jmp
movsbw
mov
pushf
mov
lea
jp
repz
and
stc
adc
pushf
mov
sar
call
mov
pushf
lea
jmp
pusha
sub
pushf
movb
pushf
call
xchg
lea
push
movsbw
not
push
bswap
call
movsbw
pushf
mov
call
pushl
popl
push
push
lea
jmp
mov
lea
lea
lea
push
mov
pushf
mov
pushf
pushl
ret
adc
cli
sbb
add
mov
adc
test
add
lea
add
xchg
adc
iret
adc
std
push
adc
push
adc
clc
mov
add
in
add
dec
adc
divl
add
jns
add
lea
add
out
add
inc
adc
ret
or
jns
add
sbb
add
xor
adc
sti
mov
adc
cli
sbb
add
push
add
dec
adc
call
adc
lcall
pop
dec
adc
test
add
ficoms
add
cltd
adc
clc
mov
add
push
adc
adc
adc
out
adc
pop
adc
dec
adc
lea
add
lcall
divl
add
jmp
add
inc
adc
cld
and
add
xchg
adc
clc
mov
add
dec
adc
cli
sbb
add
xchg
adc
stc
adc
add
ficoms
add
add
adc
inc
adc
push
add
ja
add
xchg
adc
clc
mov
add
mov
add
mov
add
lcall
add
adc
dec
adc
notb
add
mov
add
dec
adc
adc
adc
adc
adc
std
push
adc
test
add
test
add
dec
adc
lcall
clc
mov
add
cmp
add
out
add
xor
adc
dec
adc
xor
adc
cmc
adc
divl
add
out
add
ficoms
add
inc
adc
adc
adc
ret
cld
and
add
cmc
adc
dec
adc
cli
sbb
add
push
adc
dec
adc
pop
adc
lea
add
xchg
adc
divl
add
notb
add
test
add
clc
adc
in
add
inc
adc
push
adc
inc
adc
testl
add
adc
add
dec
adc
test
add
int3
adc
cmp
add
ja
add
int
add
lea
add
test
add
nop
adc
mov
add
call
adc
cld
and
add
add
adc
notb
add
dec
adc
iret
adc
test
add
push
adc
divl
add
in
add
dec
adc
ficoms
add
out
add
notb
add
ficoms
add
jmp
add
test
add
in
add
nop
adc
ret
add
add
pop
adc
cltd
adc
clc
nop
adc
divl
add
push
adc
int
add
int
add
jmp
add
inc
adc
cltd
adc
mov
adc
push
adc
clc
adc
dec
adc
sbb
add
and
add
ja
add
lea
add
adc
adc
dec
adc
push
adc
in
add
adc
adc
test
add
nop
adc
mov
adc
sbb
add
push
adc
mov
add
ja
add
int3
adc
inc
adc
sbb
add
xchg
adc
jns
add
adcl
add
push
adc
dec
adc
cld
ficoms
add
test
add
dec
adc
test
add
test
add
cmc
adc
divl
add
pop
adc
clc
mov
add
clc
adc
inc
adc
jmp
add
lea
add
mov
adc
out
adc
push
add
dec
adc
in
add
test
add
mov
add
ja
add
adcl
add
dec
adc
jmp
add
mov
add
mov
adc
in
add
sbb
add
mov
adc
dec
adc
clc
adc
add
adc
divl
add
iret
adc
lea
add
out
add
ret
cld
and
add
push
adc
mov
add
ret
add
adc
dec
adc
call
adc
mov
adc
divl
jl
incl
and
jmp
mov
movsbw
bswap
bswap
pop
mov
bswap
lea
mov
push
push
mov
mov
pusha
pushf
not
mov
jmp
add
push
movb
dec
bt
clc
cmp
sub
bt
mov
clc
sub
lea
jne
pushf
mov
movb
pushf
lea
jmp
shr
call
mov
movb
push
lea
jmp
jmp
call
rol
push
rol
movzbl
movb
clc
pusha
test
sub
pusha
lea
js
pushf
inc
clc
bt
bt
xor
pusha
call
mov
not
push
pushf
mov
push
push
movzbw
mov
movsbw
mov
jmp
aam
mov
call
div
pushf
call
push
sub
setbe
rcl
rol
shr
cmp
adc
movzbw
neg
jmp
mov
call
mov
movb
movb
pushf
lea
jmp
call
mov
push
call
call
stc
pushl
popl
pushf
push
add
push
bt
call
shr
pushl
mov
pushl
mov
jmp
pushf
jmp
pushl
mov
call
pushl
push
mov
pushf
lea
jmp
mov
pusha
sub
clc
jmp
pushf
mov
pushf
pushf
pusha
lea
jmp
pusha
push
pushf
mov
mov
movzbw
not
mov
push
pop
movsbl
lea
mov
pushl
lea
mov
lea
jne
bswap
pusha
mov
movsbw
pusha
lea
jmp
mov
pusha
lea
jmp
push
shr
call
lea
jmp
inc
bt
clc
shl
movzbl
xor
bt
sar
mov
sub
rcr
rol
call
btc
bsf
mov
test
sub
jmp
xor
sub
neg
mov
pusha
pushf
shl
cmp
call
shl
mov
call
call
push
mov
pushl
popl
pusha
mov
pushf
pushf
lea
jmp
push
call
mov
push
push
repz
popl
cmc
btr
shld
mov
shld
jmp
cmc
pusha
sub
pushf
sub
call
dec
pushf
test
test
pusha
mov
push
cmc
cmc
or
jmp
jmp
not
mov
movsbw
repz
popl
add
bts
push
dec
pushl
not
bswap
bts
push
movl
jmp
mov
jmp
jmp
aas
test
sar
mov
clc
test
jmp
test
movl
add
pusha
mov
mov
push
lea
jmp
cmp
not
stc
cmp
sub
test
clc
sub
push
movb
pusha
lea
mov
call
pusha
movb
pushl
popl
pushf
movw
lea
jmp
add
pusha
pushl
pushf
lea
jmp
shrd
push
lea
add
cmp
mov
shrd
push
sbb
add
sub
shld
sbb
mov
sar
lea
bsf
test
jmp
call
mov
pusha
jmp
pushf
mov
mov
lea
jmp
shl
stc
mov
sub
add
adc
or
call
bt
stc
stc
cmpl
call
mov
push
call
jmp
pushf
pushl
pushf
popl
jmp
mov
call
pusha
jmp
bsf
stc
mov
clc
call
or
mov
rcr
sar
neg
mov
jmp
dec
dec
call
mov
pushf
popl
pushl
jmp
test
cmp
movzbw
mov
bt
cmp
mov
test
push
clc
sub
stc
jmp
xor
test
add
sbb
ror
bsr
sub
movzbw
dec
cmp
xor
mov
call
mov
movsbw
movsbw
repz
popl
test
shrd
inc
mov
movsbl
pushl
popl
dec
movsbw
cmc
movl
bt
bt
xor
btr
mov
mov
stc
add
pusha
push
pushf
lea
jmp
movsbl
mov
mov
push
mov
call
shl
sub
clc
movsbl
xor
bswap
movzbw
rol
jmp
shld
rol
shl
rol
mov
sbb
shr
neg
add
mov
cmc
sub
pusha
shr
push
pushf
movw
jmp
add
pusha
dec
call
mov
inc
pushf
decl
jmp
jmp
jmp
pushf
popl
mov
call
pusha
pushf
movb
mov
push
pushf
mov
lea
jmp
pushf
call
pushf
push
inc
push
cmp
xor
pushf
jmp
mov
pusha
pushf
push
mov
pushf
popl
push
jmp
pushf
test
sub
cmc
lea
jp
mul
call
stc
add
push
mov
push
lea
jmp
push
mov
bswap
jmp
pushf
add
pushl
pusha
lea
jmp
test
lea
mov
cmc
jp
clc
add
call
mov
movb
pushf
pushf
pusha
mov
pushf
pushf
mov
push
movb
movb
mov
lea
jmp
pushf
pusha
mov
mov
push
jmp
call
not
pusha
mov
lea
pushl
pushf
mov
call
pusha
jmp
mov
pushf
mov
jmp
movsbw
mov
call
pushl
sub
push
shl
pushl
call
jmp
ror
push
pushf
sub
pushf
movw
cmc
cbtw
push
pushl
stc
cwtl
cmc
test
sub
movb
bt
stc
call
pushf
push
mov
lea
bswap
lea
movsbw
mov
not
pushf
push
mov
lea
pushl
mov
push
lea
movw
movzbw
mov
pusha
mov
movzbw
mov
bswap
movsbw
jmp
pushf
pushf
popl
jmp
mov
add
movw
pushf
lea
jmp
pushf
mov
lea
movsbl
mov
bswap
mov
jmp
jmp
bt
stc
push
bswap
call
mov
pushf
call
jmp
call
pushl
popl
cmp
or
sbb
or
movl
shrd
bswap
mov
call
jmp
call
pushf
mov
pusha
movl
movb
pushf
lea
jmp
call
pushl
popf
pusha
pushf
mov
pushf
lea
jmp
jmp
neg
sar
push
call
shl
call
pusha
mov
movl
push
lea
jno
pushf
pusha
pushl
popl
pusha
movb
pushf
movb
lea
jmp
pushf
call
bt
mov
btr
mov
call
bsf
inc
movl
lea
mov
bsr
mov
cmp
pushl
call
pushf
mov
mov
not
movsbw
bswap
mov
movzbl
pushf
pop
not
mov
pop
pushf
pushf
movzbw
mov
push
mov
movzbl
not
mov
movsbw
movzbw
repz
popl
and
mov
and
pushl
popl
inc
shl
or
rcr
movl
shl
shld
mov
pushf
stc
stc
jmp
push
jmp
mov
jmp
mov
call
push
movb
add
jmp
push
mov
pushf
movl
push
pushl
lea
jmp
std
push
bswap
mov
push
pushf
mov
lea
not
bswap
lea
pusha
call
jmp
mov
mov
add
movb
mov
movb
push
lea
jmp
movsbl
shl
movl
xor
xor
mov
cmc
jmp
lea
jne
jmp
jmp
movw
mov
movb
mov
lea
jmp
pushf
push
pushf
mov
mov
jmp
jmp
pushf
cmc
call
pusha
movw
jmp
movzbl
pusha
movzbl
rdtsc
mov
bswap
movsbw
mov
pushf
push
divl
call
push
pushf
pushf
mov
pusha
push
lea
jmp
neg
pushf
mov
push
pushf
dec
bt
push
cmp
cmp
xor
pushf
pushl
lea
bt
mov
sub
pushf
mov
mov
mov
push
pushf
pushl
lea
jmp
jmp
pusha
sub
cmp
stc
cmc
clc
neg
push
dec
cmp
jmp
neg
sub
neg
movzbl
dec
ror
mov
adc
sub
jmp
movsbw
dec
xadd
mov
rcl
mov
cmp
clc
sub
call
mov
pusha
pushl
movzbw
mov
movzbw
mov
push
bswap
mov
pushf
mov
mov
pop
push
mov
movw
pushl
pushf
pusha
repz
popl
movzbw
ror
bt
mov
dec
bsf
pushl
popl
bswap
btr
shr
mov
movl
shld
clc
sar
mov
bt
cmc
stc
pushf
add
pushf
push
lea
jmp
mov
pushf
test
clc
pushf
sub
call
sar
mov
pusha
xchg
stc
xor
pushl
jmp
jmp
push
pushl
pushl
popl
push
pushf
pushf
pusha
lea
jmp
cwtl
mov
pusha
lea
cpuid
pushf
bt
sub
jmp
jmp
cwtl
mov
std
pop
dec
pop
xor
pop
sub
sbb
popf
mov
lahf
not
pop
push
rdtsc
cltd
movsbw
mov
lahf
setge
mov
pushf
movsbl
mov
pushl
mov
movsbl
pop
jmp
pushf
pushf
mov
xchg
not
pushf
jmp
add
pushf
pushl
push
lea
jmp
pushl
pushf
bt
or
test
xor
call
lea
repz
bts
jbe
push
xor
mov
rcr
ror
rcl
clc
pushl
not
rcr
push
adc
sub
shl
xor
mov
test
pusha
add
pusha
pushl
lea
jmp
mov
pusha
lea
mov
movzbw
not
lea
mov
lea
movsbw
call
mov
pop
mov
movzbw
pop
repz
popl
pushf
shl
bt
bsf
mov
lea
pushl
popl
add
movl
ror
pop
mov
stc
jmp
pushl
pushf
popl
call
sbb
and
clc
rol
stc
mov
stc
pushl
stc
sub
jmp
movl
bt
ror
adc
and
mov
pushf
add
mov
lea
jmp
mov
pushl
movb
jmp
call
pushf
pushf
popl
call
mov
call
mov
sub
mov
call
pushl
add
mov
movb
lea
jmp
push
movb
pushl
popl
pusha
push
movw
lea
jmp
xchg
inc
mov
pushf
sbb
push
call
pushf
jmp
mov
mov
mov
jmp
mov
pushf
push
pushf
pushf
lea
jmp
shl
lea
pusha
cmp
movw
lea
ja
movsbw
bts
mov
xchg
shl
btc
lea
aaa
lea
not
sub
jmp
bt
add
pushf
jmp
movb
pusha
mov
movb
mov
pushf
popl
pushf
pushl
popl
pushf
pushl
movb
pushf
lea
jmp
pushf
test
sub
push
mov
movw
sub
push
mov
mov
pushf
pushf
lea
jmp
pushl
call
pushl
repz
popl
xor
cmp
cmc
cmp
mov
not
dec
pushl
popl
and
call
btc
sub
rcl
mov
call
push
mov
pusha
mov
mov
pushf
pushl
ret
pushf
jmp
pushf
call
mov
jmp
lea
movzbw
pushl
mov
bswap
movsbl
mov
mov
movzbw
movzbw
lea
push
not
push
jmp
pushf
movsbw
mov
mov
bswap
setb
lea
xchg
setb
pop
movzbl
mov
setns
xchg
bswap
bswap
mov
not
jmp
lea
jne
adc
pusha
rol
xorb
call
pusha
xchg
pushf
mov
movsbw
pushf
mov
movsbw
mov
mov
pop
push
movsbw
bswap
mov
pushf
bswap
mov
mov
call
call
mov
pusha
lea
jmp
mov
call
call
mov
add
pushf
movw
mov
push
mov
lea
jmp
pushf
pushl
popl
pushf
movb
lea
jmp
mov
bswap
stc
pop
neg
pushl
popl
bts
clc
jmp
stc
add
pushf
mov
pushf
mov
pushl
mov
lea
jmp
pushl
popl
movl
lea
jmp
mov
bt
jno
add
push
call
call
call
jmp
movl
pusha
dec
mov
pushf
push
call
mov
push
call
add
pusha
mov
rol
inc
jmp
or
sbb
mov
cmc
sar
neg
mov
pusha
push
pushl
cmc
add
pushf
jmp
pushf
mov
neg
movzbl
pusha
clc
sub
pusha
bt
call
cbtw
cmp
cmc
cwtl
movl
jmp
push
pushf
popl
pushf
movb
jmp
mov
jmp
bswap
mov
movzbw
push
call
mov
lea
mov
mov
pop
pop
repz
popl
bsf
not
bsf
btr
mov
call
pushf
mov
mov
pusha
push
mov
jmp
pushf
popl
lea
jnp
pusha
movb
push
pushl
popl
pushf
pushf
lea
jmp
pusha
pushf
pusha
xchg
movsbl
bswap
not
not
mov
jmp
pusha
mov
jmp
pushf
pushl
popl
mov
mov
movl
movw
lea
jmp
sar
aad
mov
cmc
shr
sub
mov
call
bsr
mov
bt
add
movb
movb
mov
lea
jmp
mov
movzbw
repz
popl
neg
sub
cmc
push
mov
shrd
pusha
pushl
popl
clc
movl
not
sub
mov
cmc
jmp
pushf
call
jmp
push
dec
mov
pushf
mov
movl
cmp
sub
call
sub
cmp
daa
pusha
notl
aas
dec
shl
mov
bt
cmc
pushf
sub
cmc
movb
and
pushf
pushf
push
pushf
popl
pushf
pushf
movb
pushf
pushl
popl
mov
push
lea
jmp
xor
adc
shld
shl
mov
sub
seta
push
add
pushf
push
pushf
mov
jmp
jmp
shr
mov
shl
mov
cmp
pushf
xchg
bt
pushf
pushf
xor
bt
clc
call
mov
pushl
pushf
mov
mov
jmp
aad
bswap
shld
mov
lea
shld
clc
cmc
mov
rol
pushf
mov
mov
pusha
add
stc
movb
pusha
shrd
movw
pushf
mov
jmp
jo
pushf
mov
pusha
pushl
push
movb
lea
jmp
push
jmp
cmc
pusha
jmp
jmp
repz
popl
clc
bsr
ror
shl
mov
cmp
shl
shl
bsf
pushl
popl
ror
and
shl
movl
rol
shrd
shr
stc
mov
cmp
cmp
add
mov
lea
jmp
shl
call
lea
jae
mov
pushf
mov
pushf
pusha
lea
jmp
mov
jmp
clc
cwtl
rdtsc
pusha
jmp
call
pushf
bswap
dec
stc
shr
push
sub
sub
add
sar
and
movzbl
rol
bsf
not
inc
mov
movb
bswap
stc
call
stc
stc
lea
jns
add
jmp
movzbw
push
call
bsr
mov
shld
shld
movsbw
mov
rcl
mov
cmc
mov
call
push
mov
mov
lea
jmp
test
sub
clc
pushf
mov
mov
rol
aad
daa
mov
push
movsbw
mov
call
pushf
call
sub
bt
mov
movb
pusha
sub
call
push
call
bt
ror
cmc
bt
clc
sub
test
clc
bt
clc
sub
jmp
jmp
pushl
jmp
push
call
call
btc
stc
movl
cmc
or
cmp
mov
cmc
cmp
push
mov
add
movw
pushf
push
lea
jmp
call
pusha
xchg
pushf
jmp
mov
movb
mov
mov
movl
lea
jmp
jmp
bts
shl
xchg
jmp
add
cmp
cmc
pusha
shld
pushl
mov
jmp
pushl
popl
pushl
pusha
pushf
pushf
lea
jmp
stc
push
call
shr
sub
mov
mov
pushf
rol
pushl
popl
cmc
test
bts
movl
add
mov
pushl
clc
cmp
bt
add
movb
lea
jmp
jmp
movw
stc
stc
sub
cmp
cmc
mov
movl
sub
jmp
cmp
mov
sub
bt
cmc
jmp
mov
call
test
add
jmp
add
bts
mov
test
bt
bswap
call
pushf
pushf
mov
pushf
pusha
lea
jmp
sub
push
dec
test
bt
pusha
add
jno
bswap
clc
test
stc
not
call
jmp
mul
call
lea
pusha
lea
mov
pushf
push
mov
not
movsbl
lea
mov
movsbw
mov
pushf
call
mov
jmp
movsbw
movzbl
movzbw
repz
popl
jmp
test
call
jbe
pusha
pushl
popl
movb
lea
jmp
pushf
mov
movb
mov
mov
pushf
lea
jmp
push
pushf
popl
jmp
pusha
rol
test
stc
call
pusha
call
btr
adc
sbb
mov
cmp
sub
mov
shr
xor
not
neg
mov
ror
neg
movzbl
sub
call
mov
mov
call
rol
jmp
cmp
stc
movl
and
pushf
mov
bt
add
pushl
pushf
push
movw
lea
jmp
jmp
push
not
cmp
not
cmc
mov
and
call
mov
mov
pusha
pushl
lea
jmp
shld
movl
rol
shrd
and
sub
mov
pushf
cmc
cmc
test
add
pushf
lea
jmp
clc
sub
mov
call
cld
xchg
bswap
not
pushl
push
mov
std
std
std
movb
cld
mov
movb
push
movl
rep
and
mov
cmc
mov
mov
pushl
popf
pushf
pushf
movb
lea
jmp
push
xchg
lea
pushf
movzbl
not
mov
not
pushf
mov
movzbw
mov
pusha
mov
mov
push
movzbw
mov
mov
movzbl
movw
mov
movsbl
mov
lea
mov
not
movzbw
jmp
not
pusha
lea
mov
lea
repz
popl
add
bsr
sar
or
mov
bsf
sar
adc
pushl
popl
movsbl
neg
movl
bt
bt
adc
mov
pushf
call
jmp
not
mov
pushf
pop
bswap
mov
not
pusha
bswap
pushf
mov
lea
not
mov
bswap
pushf
mov
jmp
jmp
mov
pushl
movsbw
pushl
mov
movw
repz
popl
pusha
mov
bt
sbb
bswap
cmp
pushl
popl
not
call
mov
call
push
pushf
not
lea
repz
popl
xor
push
bt
pushl
neg
call
pushf
popl
call
clc
call
mov
pushl
popl
mov
lea
jmp
test
not
stc
movb
not
bt
sub
cmc
and
pushf
mov
push
call
push
pushf
mov
pusha
lea
je
push
not
mov
not
pusha
mov
lea
not
mov
mov
mov
pop
mov
pusha
mov
bswap
pop
mov
pushf
mov
mov
repz
popl
neg
mov
bsf
shl
btr
bsr
pushl
popl
call
not
pushf
mov
jmp
pushl
popl
bswap
call
mov
jmp
movb
lea
push
mov
push
pushf
mov
pushf
lea
jmp
bts
and
btc
daa
mov
push
push
add
pushf
call
sub
call
pushl
popl
movb
pushf
mov
pushf
lea
jmp
pusha
jmp
sub
jle
test
add
pusha
mov
pushl
lea
jmp
cmp
lea
rcr
and
shrd
mov
shrd
shr
sub
movsbw
mov
bswap
mov
pushf
jmp
xor
cmc
xchg
cmc
mov
jmp
mov
pushl
lea
jmp
movl
pushf
popl
jmp
sub
pusha
movw
mov
mov
pushf
movb
mov
lea
jmp
pushf
push
mov
pushf
pushf
lea
jmp
jmp
pushf
popl
pushf
call
pushf
xchg
movsbl
push
not
mov
push
mov
bswap
not
pusha
mov
movsbw
not
mov
movsbw
pushl
pop
jmp
add
pusha
movb
pushf
mov
lea
jmp
repz
popl
rol
neg
cmc
mov
shr
pushl
popl
pop
movl
not
push
call
push
jmp
rol
pusha
not
pushl
popl
lea
pushf
lea
cmp
movl
dec
clc
mov
mov
pusha
pushf
add
pushf
push
lea
jmp
add
add
add
add
add
adc
and
or
add
xor
add
mov
add
fimuls
add
xlat
and
add
lods
xor
add
aaa
add
cld
icebp
add
