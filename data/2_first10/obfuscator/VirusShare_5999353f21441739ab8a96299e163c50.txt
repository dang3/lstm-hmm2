out
mov
in
add
sub
sub
sub
add
movl
mov
jg
icebp
mov
mov
add
mov
mov
mov
mov
mov
sti
mov
repnz
add
add
cmp
rorb
cmp
shrb
mov
test
je
mov
ljmp
sbb
mov
mov
pop
fcmovnb
data16
cld
sub
mov
adc
out
fdivrp
insl
pop
subl
mov
popa
movb
and
outsl
fbstp
adc
pop
add
push
cld
add
mov
xchg
adc
jbe
adc
scas
mov
add
ss
insl
push
add
mov
fbstp
rcll
or
mov
add
mov
mov
shll
fbstp
fidivl
in
add
imul
insl
rorb
push
mov
inc
clc
stos
mov
and
adc
adc
xor
push
leave
cltd
add
xlat
mov
mov
dec
and
add
mov
and
and
scas
mov
popa
jmp
add
add
sbb
push
inc
adc
rcl
xchg
movb
sub
jg
xchg
pop
int
mov
push
mov
add
mov
fistpl
add
ret
add
add
cmp
push
imul
pusha
push
pop
lods
sbb
mov
sarb
add
sbb
mov
fnstcw
fwait
sbb
mov
lock
popa
xchg
ret
fldt
adc
cmp
or
sub
jnp
mov
in
mov
sub
jle
mov
outsl
out
mov
into
add
inc
lock
insl
ret
cs
xor
hlt
repnz
lods
lret
cmp
sbb
mov
ja
popa
popa
mov
adc
mov
clc
call
or
xchg
add
jge
filds
or
xor
addb
mov
mov
mov
sbb
insl
fcomi
lods
sti
inc
ret
test
sbb
jo
fildl
adc
add
push
sbb
xbegin
add
adc
mov
in
mov
sub
add
movb
pop
or
add
pop
fisttpl
jg
shl
scas
leave
add
pop
xor
ja
pop
mov
sahf
sub
in
sbb
mov
dec
imul
adc
into
adc
in
mov
mov
insb
rorb
js
scas
mov
mov
dec
adc
xor
popa
or
les
ljmp
cld
imul
xor
adc
fisubs
mov
shrl
push
sbb
push
sub
sbb
or
push
mov
ret
pop
push
add
out
sbb
jbe
mov
mov
insl
sbb
pop
jge
loop
jle
dec
mov
and
pop
pop
and
int
arpl
test
sbb
mov
pop
shll
adc
aas
pop
cmpsb
pop
pop
test
popa
add
clc
out
out
out
add
addb
pushf
and
push
push
push
jmp
or
adc
jge
bound
out
dec
popf
in
fcmovnbe
std
or
sub
xor
int
adc
add
iret
jl
addr16
loope
call
daa
loop
sub
mov
sbb
leave
rcrb
push
testb
or
mov
mov
aaa
adc
adc
stos
sub
negb
ljmp
loope
adc
mov
or
mov
mov
dec
sub
sbb
gs
out
add
xor
push
movb
insb
lcall
adc
adc
mov
inc
test
inc
push
mov
in
data16
add
mov
dec
ret
test
mov
and
mov
pop
xchg
xor
std
add
pusha
jo
lods
add
add
xlat
mov
push
xor
imul
jo
mov
out
and
mov
mov
enter
fadds
cltd
cli
push
mov
mov
ret
sbb
ret
loopne
in
inc
mov
or
outsl
outsl
sub
sub
dec
out
push
push
imul
sbb
pop
push
add
dec
loop
lods
jo
jnp
js
add
dec
sbb
or
test
xchg
lret
mov
lea
push
dec
repz
lea
adc
mov
mov
mov
mov
es
add
sbb
pop
push
icebp
lret
push
outsb
repnz
sbb
jmp
movsb
test
inc
xchg
or
mov
bound
xor
pop
sbb
test
mov
js
jecxz
add
or
repnz
or
push
push
adc
jnp
xor
fisubl
mov
xor
cwtl
inc
sbb
insl
mov
loope
mov
push
add
rcl
sarb
mov
call
sbb
mov
or
mov
sbb
fisttpl
adc
jo
pop
mov
je
daa
and
js
xor
xor
ret
or
loopne
mov
dec
sub
jecxz
jecxz
mov
push
add
sub
mov
adc
mov
sub
call
jns
mov
fisttpl
sbbb
xchg
or
ret
sbb
sarb
test
mov
sub
pop
enter
mov
das
aas
mov
repnz
inc
loopne
xchg
cwtl
add
jl
sbb
fisubrl
ljmp
jo
lds
pop
roll
mov
dec
or
xlat
mov
jne
mov
mov
mov
push
adc
jae
mov
push
fadd
addr16
bound
mov
push
add
test
or
push
mov
mov
adc
mov
and
push
xor
push
std
mov
ret
sbb
mov
and
mov
dec
add
stc
lds
ja
push
push
sbb
dec
call
and
jb
mov
js
dec
test
cli
push
add
inc
adc
mov
inc
or
sub
cltd
mov
adc
insl
add
push
sub
xor
jl
jmp
jge
fstpl
push
and
add
or
test
mov
ja
jg
pop
or
push
push
cli
mov
or
mov
daa
rcrb
imul
sbb
push
mov
lret
jecxz
mov
mov
in
neg
pop
pop
or
mov
pop
push
push
sbb
inc
mov
pop
cmp
lret
rorb
push
lcall
pop
aaa
xor
incb
clc
push
pop
mov
dec
into
adc
ss
ss
popf
xor
test
test
imul
and
and
outsb
mov
fsubrl
sbb
stc
ret
add
or
cmp
push
pop
or
mov
cld
sbb
and
loopne
xor
leave
loope
fidivrl
mov
ficompl
orb
aam
popa
adc
cmp
mov
in
stos
mov
test
push
pop
mov
mov
cmpsl
pop
mov
or
push
pop
mov
inc
pop
in
test
adcb
mov
into
xchg
sbb
xor
mov
jo
in
push
push
cs
push
pop
cmc
lret
pop
mov
jg
xchg
mov
mov
and
add
push
outsl
xchg
jo
sbb
lods
cmc
sbb
pop
mov
orl
fidivl
sbb
sbb
lret
xchg
je
xlat
mov
out
sbb
push
pusha
cmp
loopne
pop
aam
push
mov
mov
sub
clc
das
js
push
push
and
test
les
adc
dec
adc
mov
mov
cmp
mov
aam
sbb
push
sbb
iret
adc
jmp
dec
push
push
push
shll
clc
or
or
lock
add
in
inc
mov
cmp
xlat
sub
push
insb
inc
sub
arpl
mov
aad
mov
lods
mov
sbb
jnp
and
mov
inc
sub
mov
cli
ret
loop
jp
push
sarl
movsb
jno
xchg
push
mov
hlt
pop
cwtl
cmp
pop
cmp
notb
adc
mov
arpl
out
push
pop
push
adc
mov
push
imul
push
push
pop
mov
jb
into
xchg
add
cmp
sub
sbb
push
jne
negl
mov
sbb
pop
jge
mov
jne
outsb
adc
gs
jg
rorb
in
sbb
pop
cmp
lcall
mov
mov
push
test
dec
lret
call
add
adc
rclb
adc
push
shlb
and
push
call
sbb
shlb
orl
scas
inc
mov
adc
lret
adc
jo
sbb
test
pop
ljmp
sbb
dec
shl
adc
out
xchg
adc
push
cmp
adc
xorb
test
jbe
push
test
and
lds
sbb
pop
jl
jge
ja
shr
sbb
adc
call
dec
pusha
jo
subb
pop
fwait
mov
add
pop
pop
into
cmp
and
jbe
xor
js
ret
add
enter
pushf
lret
insb
xchg
pushf
test
aad
pop
add
insl
enter
push
mov
mov
adc
sbb
xchg
sti
and
pop
inc
push
sbb
jg
mov
mov
test
int3
bound
push
mov
pop
mov
or
xor
push
push
sahf
fcom
into
mov
add
dec
pop
cmp
jnp
add
push
outsl
add
or
and
nop
adc
and
cmp
or
mov
adc
loopne
xchg
xchg
sbb
es
enter
add
pop
movsl
jo
mov
dec
xchg
jge
mov
xchg
pop
outsb
lock
lret
adc
sub
pop
and
lock
mov
push
sbb
enter
mov
testl
pop
dec
inc
and
xor
inc
add
stc
scas
jle
push
fwait
stc
test
jge
lock
adc
stc
sbb
sbb
mov
mov
scas
pop
ljmp
ds
xchg
mov
repnz
cwtl
ret
rcr
bound
push
sub
adc
repnz
imul
sub
jmp
push
insl
or
xchg
jge
mov
sub
stc
or
and
mov
pop
pusha
ljmp
daa
jo
xor
inc
or
bound
aad
ss
jg
inc
les
and
xchg
fisttpll
pop
repnz
sub
pop
js
cmc
push
shrb
orb
repnz
mov
mov
add
mov
add
and
or
dec
arpl
jg
jl
inc
sbb
push
sub
insl
fcoml
and
mov
movsl
jb
and
push
div
sub
sbb
sbb
scas
icebp
mov
addl
push
call
call
mov
push
icebp
cmp
adc
lods
loope
pop
mov
cmc
addr16
inc
scas
lret
sub
rorb
leave
out
daa
andb
xor
sahf
out
sbb
mov
mov
in
and
pop
adc
mov
mov
shl
nop
add
xor
aam
xchg
cmp
push
mov
fs
mov
fcoms
cmp
cli
mov
push
ret
adc
xor
mov
add
cmp
in
mov
pop
sbb
sarb
sbb
je
sub
fdivs
ret
into
sti
ret
pop
mov
cmc
ret
push
psubsw
add
sahf
xor
addb
jbe
adc
test
pop
xor
inc
xor
sub
mov
scas
sub
inc
inc
add
insl
inc
out
pop
push
insb
pop
leave
addr16
mov
jge
add
or
ret
adc
test
push
pusha
mov
adc
bound
mov
loopne
cmc
rorl
into
lcall
or
fwait
adc
dec
and
and
push
push
add
inc
das
push
xchg
and
lea
push
dec
mov
in
pop
or
adcl
xchg
cmp
idivb
test
or
xor
inc
dec
iret
rorb
dec
loope
mov
sbb
mov
xchg
inc
aam
das
jo
lcall
mov
sbb
cltd
inc
sub
inc
pushf
add
cmp
ffreep
adc
test
hlt
mov
xor
jns
push
fst
or
lret
xlat
push
or
test
call
mov
jge
or
pop
lds
adc
inc
les
mov
shrb
or
cmpsb
sbb
jge
pushl
or
ror
sbb
ret
and
repnz
shlb
dec
dec
enter
mov
pop
call
les
idivb
or
inc
rcr
push
xorb
mov
push
repnz
push
mov
mov
aas
lds
roll
pop
sti
ljmp
push
jp
dec
mov
sbb
lahf
jb
imul
and
fcomps
jge
das
lds
ret
push
push
xchg
test
adc
adc
pushf
mov
sbbb
fs
mov
lret
mov
insl
pop
mov
out
push
xor
shrl
data16
or
cmp
push
pop
mov
jl
addr16
mov
es
pop
mov
push
sub
imul
push
adc
in
push
dec
jns
xchg
rcll
mov
das
jbe
lret
pop
mov
pop
pop
pop
xor
adc
and
frstor
inc
xor
mov
inc
and
or
and
add
fcoml
divb
fcomps
mov
fisttps
enter
xor
inc
add
addb
ds
insb
aad
push
push
sub
ss
lock
aas
mov
in
push
and
aam
add
dec
icebp
push
fmull
jg
xor
lcall
push
imul
jb
test
test
xchg
outsb
cltd
adc
push
stos
adc
jl
imul
add
pusha
or
or
sbb
push
shll
sbb
push
xlat
or
add
push
orb
sbb
inc
lods
data16
test
dec
scas
sbb
jb
mov
scas
sub
add
xchg
rclb
and
mov
sbb
shr
sarb
sbb
outsb
shr
and
into
clc
pop
xor
add
add
push
push
mov
in
shlb
xchg
in
xor
mov
mov
xor
je
or
add
push
add
rorb
repnz
cld
dec
push
insl
push
test
push
inc
aam
les
outsb
or
subb
enter
xor
push
int
jp
dec
mov
push
aas
mov
pop
inc
push
insl
add
icebp
ljmp
xor
and
call
dec
mov
mov
mov
mov
jb
jb
pop
or
dec
xlat
icebp
icebp
sub
sbbl
hlt
adc
mov
mov
or
mov
hlt
aaa
jo
in
ret
pusha
scas
ret
js
in
jg
int
stos
mov
in
xor
lcall
adc
movsl
mov
test
push
or
or
je
xchg
js
jge
mov
inc
pusha
mov
push
mov
push
lret
dec
add
or
jbe
add
xor
xor
sahf
pop
mov
push
shlb
rcr
mov
bound
cmp
addb
ss
pop
pop
and
inc
pushf
adc
ficoml
es
or
insl
dec
fistpll
insb
sbb
mov
cmc
push
out
add
add
lock
fmull
dec
pop
mov
int
push
sbbb
xor
mov
lds
pop
mov
xor
push
je
pop
inc
into
mov
pop
lock
add
mov
lret
mov
pop
enter
das
test
addr16
adc
jge
add
int3
adc
jp
add
jne
push
push
pop
cmp
xor
sub
int
or
or
arpl
je
mov
or
ret
in
cmp
adc
xchg
mov
push
dec
ja
repnz
fcoms
xchg
and
in
sbb
mov
xorb
aad
ret
aam
jg
fisttps
push
sub
jg
jo
in
push
mov
into
xor
aad
and
into
nop
sub
das
cmp
dec
mov
gs
mov
push
sub
mov
inc
or
or
jle
gs
mov
ficompl
push
xor
add
lcall
das
pop
adc
pop
cmpsl
cmp
jmp
inc
es
das
adc
movsl
pop
sbb
add
dec
arpl
sbb
negl
loopne
pop
push
into
push
xor
pushl
movsb
cmp
movsb
inc
push
push
shr
sub
lds
loope
mov
pop
ja
adc
pop
rcl
les
sub
leave
and
xchg
push
clc
inc
pop
cmp
xchg
push
push
add
popa
push
sbb
mov
ja
aaa
adc
mov
jne
and
pop
lahf
fwait
lahf
jo
push
pop
jo
inc
leave
ret
popf
cli
outsl
adc
add
sbb
stc
mov
xchg
enter
or
adcb
divb
inc
pop
pushf
icebp
xor
push
repnz
incb
mov
jg
xor
sbb
sbb
adc
mov
stos
push
xchg
and
jno
and
aam
sub
ja
inc
in
mov
or
mov
nop
sar
mov
or
test
pop
sub
dec
testb
inc
dec
mov
call
mov
cmpsb
sbb
xchg
fsubrs
xchg
adc
fldcw
and
testb
es
imul
cltd
mov
into
push
leave
fdivl
pop
adc
xor
stos
aam
push
dec
push
inc
leave
add
adc
loope
pushf
loop
pop
rclb
aam
dec
push
push
call
dec
push
xchg
stos
sbb
sbb
scas
cwtl
add
lds
jle
push
mov
fcomip
ficoml
idivb
sub
push
cli
lock
add
or
mov
stos
fisubl
pop
ljmp
add
rcl
or
jo
xor
enter
mov
xchg
or
push
inc
sbb
push
das
out
mov
mov
popf
mov
pop
ret
push
dec
and
int
add
push
pusha
jo
push
cmp
xor
mov
daa
pop
lods
and
inc
and
addl
mov
xor
jb
dec
pusha
xchg
sub
ds
mov
push
mov
and
insl
mov
mov
fwait
or
and
mov
lea
clc
call
dec
movsl
pop
mov
out
lock
leave
dec
push
and
sub
xchg
imul
test
inc
push
dec
cmp
or
sbb
lods
shl
mov
inc
mov
shrl
js
push
xlat
test
mov
push
jne
add
or
or
push
inc
xor
repz
fisubrl
leave
inc
sub
add
xor
mov
rcll
roll
push
mov
pop
xchg
aad
push
ror
clc
mov
mov
dec
or
popf
or
add
push
push
loop
rolb
or
mov
adc
inc
adc
or
lcall
lea
ja
jns
inc
or
outsb
jno
jge
push
fcomps
adc
enter
or
mov
movsl
ljmp
push
cmp
dec
push
jp
xlat
bound
dec
jl
and
or
add
icebp
xchg
sub
dec
arpl
push
repnz
pop
pop
jge
pushl
pop
sbb
cmp
lcall
fstl
jg
call
and
out
cltd
jno
sahf
subb
cmp
int3
enter
cwtl
adc
outsl
mov
movsl
cltd
inc
mov
out
lock
inc
jmp
add
dec
xchg
add
cmc
sub
shlb
stos
subl
sti
loopne
sub
jg
movl
insb
or
push
add
in
jecxz
dec
sbb
or
xlat
add
repnz
lret
and
mov
enter
ljmp
addb
dec
pop
xchg
jl
jae
adc
push
nop
and
sbb
enter
lock
xlat
adc
addr16
pop
sti
fwait
mov
nop
pop
pop
lods
cltd
sbb
jb
in
jl
xor
cs
clc
pop
scas
out
or
repnz
std
into
data16
mov
bound
inc
ds
imul
inc
jl
and
cmp
lcall
xchg
mov
pop
loopnew
iret
repz
pop
stc
enter
iret
rclb
sbb
sbb
sti
leave
and
mov
jbe
ja
and
pop
xchg
push
pop
and
cmp
and
pop
push
xchg
sbb
push
lahf
jl
sub
dec
ficompl
mov
pop
and
xor
dec
and
stc
fdivrs
ds
aaa
mov
arpl
lret
sbb
fdivl
lahf
jge
xor
pop
sbb
and
sti
leave
jmp
jb
mov
xor
arpl
xchg
xlat
loop
movb
repnz
arpl
jns
xchg
lock
mov
lcall
in
ljmp
dec
sar
xchg
jl
fstpl
push
ficoms
scas
add
and
repnz
insl
sbb
mov
jbe
popa
leave
and
stc
mov
insb
int3
pushf
fs
jle
jl
sub
mov
mov
pop
stc
xchg
pop
inc
movq
xlat
enter
stc
lcall
fcoml
sti
in
pop
stc
mov
cmc
loopne
bound
clc
in
lahf
jl
and
int
jl
aas
repnz
jl
adc
scas
or
in
addr16
lods
in
pop
jno
cwtl
inc
sbb
jns
inc
pop
mov
mov
lret
addr16
jns
sub
xor
lock
and
jle
in
pop
stc
loop
or
insl
mov
mov
in
aas
jns
fimuls
push
xor
sti
mov
xchg
jl
dec
push
mov
mov
stc
enter
rcr
testl
mov
in
add
fiadds
xchg
fwait
stos
lret
leave
ffreep
inc
test
mov
cmpsl
cmp
mov
outsb
cmp
xor
repnz
ss
jge
inc
push
roll
push
add
stc
enter
repnz
ficoms
pop
test
jl
and
iret
sub
imul
out
adc
vpmacssdqh
dec
insl
push
es
mov
sbb
jle
fldenv
scas
mov
mov
repz
negb
stc
enter
sub
cmp
and
mov
in
inc
orb
iret
into
fldl
repnz
push
push
sti
or
inc
add
jle
enter
imul
jmp
or
pop
stc
enter
jl
pusha
insl
imul
sti
in
xchg
sahf
test
pop
loopne
lods
loopne
sbb
mov
leave
jmp
cmpsb
jl
insl
mov
mov
aam
jae
enter
lea
add
xor
xor
sbb
dec
sub
enter
sbb
popa
adc
cltd
inc
pop
scas
push
pop
dec
ds
and
jmp
fmul
sbb
jbe
cmp
dec
sahf
or
xchg
gs
jl
and
loope
dec
inc
and
xchg
mov
lea
rclb
inc
ds
sub
xchg
sti
xor
out
lock
mov
xor
jl
push
cmpsl
pusha
imul
mov
jp
dec
sbb
sarl
enter
out
xor
inc
in
loopne
xchg
jae
enter
xchg
xchg
pusha
scas
imul
in
pop
stc
aaa
lahf
push
jmp
ja
mov
in
xchg
jl
scas
vfpclasssd
aad
addr16
adc
jl
fs
push
and
inc
scas
sub
pop
notb
inc
cmpsb
mov
mov
jo
jle
notb
ds
add
shlb
pop
mov
add
jns
mov
imul
sbb
outsb
pop
jne
sahf
sub
pop
stc
enter
sub
gs
pop
test
pop
arpl
push
dec
lds
cmp
jns
dec
scas
pop
aam
adcl
and
and
cld
or
jle
and
dec
sbb
ljmp
int
mov
sub
in
cmp
std
in
test
shrl
and
inc
lods
enter
mov
incl
adc
and
stc
test
int3
enter
in
and
repnz
jl
insl
jmp
scas
fisubs
jo
stc
enter
xchg
add
fs
dec
jl
and
out
or
js
popf
js
ds
mov
nop
jg
xor
pop
pop
stc
enter
in
xchg
loop
ret
pop
cs
push
aas
jns
and
cs
adc
jge
jl
arpl
movsb
add
jl
xchg
ja
sbb
enter
jns
es
jl
xchg
mov
push
inc
sbb
mov
sub
aad
pop
push
in
jl,pt
and
or
jne
fimull
lds
xor
jle
xchg
inc
jl
and
cmp
and
ds
jmp
cmp
push
pop
addr16
fsubrp
cmp
stc
enter
out
fwait
dec
js
mov
jl
and
stos
or
movsl
sbbl
repnz
out
add
in
popf
inc
mov
mov
shrl
enter
mov
fsub
daa
mov
call
std
in
pop
stc
stos
pop
jno
stc
mov
sarb
call
adc
insl
inc
dec
mov
pop
sub
add
hlt
cmc
enter
arpl
jns
and
rclb
adc
jl
enter
test
jno
jge
xor
jno
jmp
enter
ss
lret
inc
adc
dec
into
fsubs
pop
stc
jp
jne
mov
inc
out
loop
push
enter
sub
pop
stos
rcrb
mov
ret
scas
std
push
add
xchg
lds
enter
lods
lcall
push
xchg
leave
jle
lahf
pop
push
sub
adc
jecxz
and
addb
jne
pop
test
negb
mov
fucomi
jge
and
stc
enter
mov
lea
inc
xchg
mov
fldenv
xchg
push
fdivr
mov
cwtl
xor
jecxz
lahf
das
xor
push
xchg
or
sub
cmp
and
lods
sbbl
and
fninit
icebp
bound
bound
insb
in
daa
jl
aam
mov
or
sub
mov
jns
and
or
int
sub
notb
push
arpl
mov
enter
dec
or
lds
jl
and
jo
push
pop
call
icebp
dec
ds
dec
dec
and
push
movsb
sub
addr16
ljmp
ds
aas
imul
push
xor
jb
pslld
clc
movsb
das
bound
xchg
cli
jne
ficoms
mov
and
fs
repnz
dec
sub
and
loopne
leave
ds
clc
int
lea
mov
insb
imul
cmp
sahf
imul
out
gs
add
enter
inc
or
and
jmp
mov
mov
mov
in
inc
sti
cmpsl
and
inc
outsb
enter
sahf
inc
movl
sub
aas
in
pop
stc
pusha
xor
and
adc
mov
ret
mov
push
repnz
jl
sarl
inc
bound
pop
cmp
stc
enter
jge
filds
push
pop
xchg
mov
jo
in
pop
js
xchg
ror
int3
int3
xor
jl
xchg
adc
inc
insl
jnp
jge
cmp
sbb
cmp
loop
dec
or
xor
pop
stos
lahf
sub
mov
pop
fstpl
push
xchg
jl
xchg
rep
test
inc
inc
nop
inc
ds
es
fsubrl
push
dec
mov
scas
fdivr
ret
repz
in
push
aas
jg
cld
sbb
mov
aam
popa
mov
fcoml
repz
lahf
push
hlt
mov
pop
stos
xor
fisttps
jg
cld
stc
push
fnstenv
repnz
cmp
mov
lds
cmp
aas
jnp
jo
pop
sbb
jae
cld
stc
repz
add
xchg
push
fists
lahf
aas
jg
xor
cmpsb
mov
stc
repz
aaa
dec
fistl
pop
into
inc
cltd
mov
daa
aas
jg
jp
mov
and
mov
cmp
mov
loopne
mov
mov
jge
mov
imul
pop
out
gs
adcl
in
xchg
xor
sub
jge
pop
jns
xchg
add
jl
arpl
mov
pushf
pop
pop
adc
mov
repnz
les
loop
push
iret
bound
repnz
lds
mov
leave
setno
in
dec
and
stc
enter
mov
pop
mov
in
lock
xor
idivb
cmp
movsb
leave
inc
ds
aas
das
mov
outsb
push
loope
inc
notb
insb
jg
cmp
mov
rorb
icebp
push
les
jl
out
lahf
test
or
les
adc
stc
mov
push
and
pop
in
scas
cmp
mov
add
iret
lahf
aas
ljmp
std
add
repz
mov
dec
es
push
nop
push
iret
lahf
aas
out
cmp
shrl
ja
mov
pop
cs
sbb
dec
and
pop
inc
mov
loop
lahf
aas
jg
lret
sub
inc
inc
icebp
jb
push
cld
stc
repz
pop
and
insb
and
shlb
push
pop
jp
lahf
lahf
aas
jg
xchg
enter
clc
sub
xchg
add
into
cmpsb
fdivs
daa
inc
or
lods
inc
adc
mov
jge
data16
mov
xchg
ds
repnz
pusha
loope
cld
bound
push
sub
repz
fs
addr16
mov
xor
cld
fcomi
ja
das
mov
bound
iret
lahf
out
mov
xchg
mov
cld
stc
pop
and
push
or
cmpsb
push
push
cmp
dec
out
lahf
aas
mov
or
jb
cld
stc
repz
bound
add
push
popf
iret
lahf
aas
jg
mov
push
stos
push
cmp
cld
stc
repz
sbb
adc
icebp
lock
addr16
lahf
aas
jg
xchg
popa
ljmp
adc
ret
stc
repz
jmp
fs
lods
sbb
push
jb
sahf
cld
lock
pop
loopne
mov
loope
lss
dec
and
das
loop
lods
jl
and
inc
lea
xor
mov
pop
stc
fadds
daa
subl
into
cmp
int3
and
pop
test
jnp
out
test
pop
std
in
xor
ret
rcrl
fisttpl
push
dec
mov
mov
pop
sti
les
xor
je
repz
insl
arpl
jns
cmp
cmp
mov
or
sti
push
mov
inc
js
xor
insb
je
sub
loope
call
lret
mov
stc
mov
xchg
loop
inc
enter
sti
cli
dec
mov
and
es
dec
fmul
push
in
dec
test
pop
sarl
stc
push
dec
or
cmovs
jl
jbe
mov
js
pop
jle
es
jl
inc
pop
cld
mov
push
cmc
iret
lahf
jg
test
sub
scas
rcr
outsb
cld
stc
repz
push
jnp
enter
sbb
sub
lahf
aas
jg
orl
ja
pushf
rorb
gs
stc
repz
inc
sbb
inc
push
fidivs
jg
cld
mov
cmpsb
jbe
pop
rolb
repz
lahf
arpl
movb
std
cli
sbb
cld
stc
sarl
scas
dec
ret
push
leave
bound
jns
test
or
lea
jecxz
push
cld
stc
repz
cmp
xor
loopne
inc
iret
lahf
aas
jg
cmp
movsb
jmp
dec
pop
test
out
xchg
in
mov
fisttpl
or
and
mov
cld
outsb
addr16
mov
xor
push
sub
sahf
hlt
mov
mov
fdivs
adc
and
sub
subl
and
icebp
add
pop
jl
and
clc
jmp
leave
xchg
dec
pop
jge
inc
xor
repnz
cmp
xchg
out
pop
in
or
inc
add
pop
sti
loop
cmpsl
mov
jae
inc
imul
and
sti
push
cmp
jne
push
out
lcall
sbbl
repnz
inc
incb
es
mov
xchg
inc
repnz
ficompl
xchg
xchg
bound
neg
adc
stc
enter
xor
xlat
inc
pop
fld
ret
xchg
or
and
jmp
or
mov
pop
out
jl
arpl
int
push
leave
into
leave
cmp
pushf
mov
ds
vprotw
jge
jge
lret
stc
enter
pop
setle
test
cmp
and
sub
cltd
hlt
adc
and
in
xchg
enter
rol
in
lahf
jl
ret
loope
sub
imul
out
dec
hlt
mov
into
loop
mov
in
pop
stc
cwtl
in
dec
dec
stos
das
stos
mov
imul
xor
sti
test
out
insl
or
dec
xchg
enter
push
shrl
push
addr16
add
pop
xor
roll
repnz
inc
mov
int3
ror
mov
push
xor
or
cld
and
int
in
rcr
dec
outsb
imul
xor
iret
lahf
aas
jg
sbb
movsb
inc
cmc
out
scas
cli
data16
cld
stc
repz
imul
jl
mov
push
add
arpl
popf
bound
fwait
or
inc
fstpt
jns
pusha
stos
add
jecxz
in
leave
or
or
push
or
xchg
std
push
mov
dec
mov
out
mov
sbb
enter
out
mov
add
inc
test
pop
or
rcr
popa
cld
mov
addr16
test
jle
mov
and
gs
enter
or
repz
lahf
and
jns
and
hlt
loope
xchg
xchg
das
xchg
mov
das
cmovg
mov
adc
jmp
mov
std
in
fnstenv
jl
bound
pop
gs
in
push
imul
lods
fadds
cmp
jae
out
or
mov
in
pop
stc
popa
insb
inc
or
out
and
sti
cmp
pop
cmp
or
daa
nop
jecxz
repnz
pop
shlb
loop
ja
lea
stc
enter
lret
iret
js
out
add
leave
and
fs
enter
push
jmp
sub
mov
in
pop
je
lret
jb
arpl
pop
pop
dec
jne
jg
testb
and
icebp
leave
sbbb
in
mov
ds
lret
xor
sti
inc
push
pop
mov
scas
adc
xchg
sbb
stc
rcl
xchg
push
pop
clc
cld
stc
repz
jo
sub
xchg
xchg
sbb
mov
incb
sub
mov
cmp
xchg
mov
xchg
add
jg
cld
pop
push
push
sbb
clc
sbb
cmpsb
out
stos
repz
lahf
mov
aas
cmp
in
stc
pop
and
stc
dec
lfs
rolb
pop
loope
jg
dec
and
loopne
lea
iret
lahf
push
or
inc
add
repz
jl
mov
sub
cld
stc
pop
sti
jns
dec
imulb
je
daa
fdiv
mov
aas
fwait
dec
fcoml
or
stc
repz
shlb
mov
cld
out
sti
imul
iret
lahf
aas
jg
hlt
imul
cmpsb
xchg
clc
jl
repz
xchg
mov
out
lods
cld
stc
inc
xor
rolb
pop
adc
lahf
aas
jg
and
stos
xlat
insb
js
jns
loope
cld
stc
repz
jle
add
adc
mov
cld
and
adc
imul
push
mov
lret
into
into
int
mov
mov
adc
adc
dec
pop
je
jns
and
push
jl
lds
push
sbbl
daa
lock
vunpckhpd
ds
adc
jp
pop
or
xchg
loop
test
jmp
pop
dec
and
pop
cmpsl
cmp
ds
lahf
dec
imul
inc
mov
enter
xchg
inc
mov
mov
push
sbb
enter
and
shl
mov
addr16
ds
jle
xor
bound
sti
faddl
repnz
lahf
jmp
sbb
and
stc
enter
inc
insb
and
aad
jl
xorb
cli
mov
and
daa
jge
mov
out
push
ljmp
imul
aam
jnp
in
and
sti
inc
stos
insl
outsb
dec
mov
ret
inc
push
aas
jns
ss
fmul
lret
pop
xchg
sbb
repnz
lahf
cmp
sbb
cmp
icebp
rorl
jae
in
int
sub
rorl
das
cmp
sahf
add
push
mov
repnz
lahf
pop
adc
or
xchg
pop
jnp
inc
inc
lret
cld
or
xchg
fwait
sbb
iret
lahf
aas
jg
jge
aas
fdivr
sub
lock
cmp
out
push
inc
xor
es
push
jns
lcall
inc
fst
xor
out
into
in
lahf
out
lock
aad
inc
push
sbb
jle
in
das
outsb
inc
xlat
dec
push
push
sub
lea
ds
enter
xchg
flds
in
xchg
push
mov
inc
notb
adc
pop
fmuls
pop
stc
enter
mov
xor
jl
js
or
push
in
insl
test
add
test
repnz
rol
jb
rcl
or
adc
fdivrs
stc
enter
xchg
ret
in
inc
or
sbb
pop
inc
cmp
pop
stc
sbb
fadds
gs
orb
xchg
jl
xor
fisttps
adc
ds
cmc
mov
es
pop
push
cs
push
stc
xchg
in
mov
lahf
pop
stc
enter
popf
aam
fdivr
repz
push
push
jg
jns
and
pop
rcl
ficoml
jg
sbb
aas
aas
sbb
out
lahf
stos
adc
repz
jmp
imul
jg
cld
stc
es
rcrl
xor
jg
out
lahf
aas
pop
push
inc
xor
or
xor
add
in
xchg
bound
out
push
out
cld
mov
fmulp
bound
aaa
cmp
xchg
repz
add
mov
mov
cld
sbbl
push
push
stos
out
incl
sahf
dec
lods
lea
add
aas
jg
sub
lods
or
push
stc
repz
repz
jbe
decl
xchg
cmp
lea
repnz
std
jno
cmp
cmp
repnz
enter
hlt
mov
add
outsb
out
mov
xor
xor
mov
pop
sbb
xlat
int
aaa
xchg
mov
jl
and
orb
ds
jge
shll
out
pusha
inc
adc
xchg
icebp
cmpsl
pop
inc
shl
shl
mov
cmp
shll
subb
pop
test
ds
out
cli
jle
add
orl
cld
pop
lahf
aas
jbe
mov
enter
in
leave
pushf
cmp
aas
jg
jge
mov
popa
in
pop
cmp
cmp
repz
jb
mov
push
jge
shll
mov
mov
imul
in
lahf
cmp
popa
xchg
inc
cltd
push
push
lods
es
repnz
mov
pop
popf
jl
fsubrs
stos
mov
sub
notb
scas
add
push
jne
xchg
sub
lock
inc
and
int3
or
add
add
sbb
fistpll
iret
lahf
aas
jg
xlat
sahf
and
jnp
sub
and
stc
repz
and
mov
cmp
sbb
gs
clc
inc
jle
lsl
daa
cmpsl
fidivrl
adc
rorl
jl
sub
mov
enter
xor
lcall
mov
xor
outsl
data16
add
in
mov
out
mov
cld
stc
add
mov
int3
dec
bound
out
lahf
aas
loopne
xor
notb
in
mov
leave
mov
cmp
jg
cld
stc
jmp
cmp
cmpsb
fnstsw
mov
iret
lahf
aas
out
pop
mov
cltd
fsubrs
jge
cld
stc
repz
ret
or
jl
out
and
cltd
mov
call
pop
push
mov
cmp
pop
sbb
pop
sub
lahf
aas
pop
out
scas
sti
or
xchg
mov
dec
sbb
or
cvtps2pi
iret
jecxz
adc
out
inc
jle
mov
rcll
mov
pop
pop
cld
stc
repz
or
lods
lods
movsb
push
dec
repz
sbb
iret
lahf
aas
jg
insb
pop
xor
push
stos
push
and
sub
stc
repz
loope
sub
call
in
in
jno
aas
jg
iret
out
and
lds
stc
repz
xor
mov
mov
loop
push
push
xor
jg
cld
mov
mov
sbb
mov
out
lahf
xor
add
aad
popf
mov
cld
stc
dec
mov
mov
fsubrs
lret
xchg
pushf
xchg
adc
iret
lahf
aas
pop
loop
js
xor
orl
pop
or
cmpsb
rol
jg
mov
lahf
aas
jg
mov
cmp
pop
dec
insl
mov
stc
repz
jecxz
cmc
cmc
jno
cmpsb
mov
loop
lahf
aas
jg
add
xor
mov
sahf
stc
repz
jmp
mov
lods
mov
xchg
stc
xor
jp
pop
or
pop
movsb
jne
jl
daa
mov
lea
mov
adc
push
or
jge
xchg
popf
popf
sbb
push
dec
pop
stc
enter
fisubs
int3
aad
push
ja
inc
clc
leave
and
pusha
nop
lods
lea
addb
leave
mov
xchg
xchg
cld
pop
nop
xchg
inc
dec
sbb
jb
ds
enter
scas
lea
ret
pop
xchg
in
pinsrw
and
cmp
stc
repz
push
and
sbb
and
add
andl
in
and
enter
je
dec
xor
in
daa
adc
sub
add
sti
jge
or
in
pop
je
jnp
adc
cmp
lret
enter
lret
mov
lds
pop
or
or
out
out
push
shlb
in
pop
mov
repz
fs
inc
ds
jmp
pop
dec
shl
inc
jl
aam
imul
ss
repnz
inc
pop
add
xor
repnz
or
iret
fcmovb
pop
stc
enter
bound
lock
dec
push
jns,pt
and
push
push
mov
sbb
popl
js
in
std
ret
out
lock
add
mov
std
std
jge
daa
fidivrl
ret
mov
xchg
adc
stc
lods
push
adc
push
and
lods
loope
jge
aad
pop
jo
iret
lahf
aas
jae
ja
mov
push
inc
movsb
cld
stc
repz
lcall
loope
lahf
aas
jg
inc
push
lods
mov
rcr
sub
pop
dec
mov
pop
cmp
imul
aas
jg
adc
push
dec
sahf
xlat
xchg
ret
iret
repz
lahf
mov
lock
stc
mov
fistpll
cld
stc
xchg
loope
pop
adc
or
out
cmpsl
test
adc
gs
push
add
int
dec
dec
cmp
cld
stc
repz
jb
inc
mov
mov
scas
decl
divb
pop
cwtl
add
iret
lahf
aas
cltd
and
inc
mov
fcmovu
into
mov
stc
repz
pop
mov
fstl
inc
inc
iret
lahf
aas
jg
sub
mov
xor
pusha
aaa
and
xchg
and
repnz
popa
mov
jg
ror
push
pop
repnz
add
mov
xchg
sub
movsb
sahf
mov
add
inc
mov
mov
aas
jg
jno
out
or
fwait
in
pop
shlb
mov
dec
ds
sbb
sbb
ds
lahf
aas
adc
mov
adc
stc
repz
pop
ret
mov
lahf
add
jbe
lahf
aas
jg
jnp
test
cmp
stc
repz
clc
icebp
insl
inc
in
cmp
push
movsl
push
mov
lahf
inc
cld
repz
add
inc
clc
pop
sti
call
repz
inc
dec
push
jae
out
jns
dec
aas
jg
cld
sti
out
mov
stos
stos
f2xm1
jmp
out
lahf
dec
sbb
adc
mov
insl
repnz
xchg
pop
push
push
test
push
stc
repz
aaa
or
sub
inc
pop
and
in
xchg
cmp
stos
or
rolb
jl
test
mov
adc
stc
enter
addr16
cld
jmp
cmpsb
push
mov
xchg
bound
mov
mov
sub
inc
mov
add
loop
arpl
xchg
adc
les
xlat
mov
xchg
mov
mull
jg
cld
call
jb
out
fs
xor
sbb
fld
mov
or
stc
repz
mov
pusha
and
ret
ljmp
mov
cwtl
cli
flds
mov
sub
cmpsl
mov
stc
push
and
mov
push
das
test
insl
jne
mov
outsl
dec
scas
inc
ds
dec
push
or
imul
ds
enter
inc
adc
test
cmpsl
jmp
stos
mov
mov
xchg
fisttpl
std
out
rcrb
jmp
in
cmp
or
das
and
jne
decb
jg
push
cmpb
cld
inc
inc
xor
aad
arpl
add
pop
cld
repz
lahf
push
adc
hlt
pop
loope
pop
pop
cld
cld
stc
xor
out
jb
mov
push
lea
pop
lds
dec
mov
add
stc
adc
out
jae
pop
jecxz
xchg
pop
mov
aas
mov
sti
jg
xor
pop
scas
cld
stc
repz
or
cmc
mov
iret
lahf
aas
jg
adc
jge
push
int3
inc
ficomps
test
xchg
xor
lods
ffreep
and
xchg
sbb
in
add
inc
or
xchg
inc
notb
add
xor
jle
enter
daa
pop
jg
pop
sbb
addr16
stc
enter
inc
adc
hlt
stc
enter
lret
jne
cmp
div
cli
daa
jl
in
movsl
mov
jo
and
jl
sub
sub
ror
ds
repnz
movsl
in
arpl
jge
std
sbb
icebp
mov
ds
or
in
inc
ds
in
test
dec
push
pop
stc
movsl
mov
jnp
out
testb
in
aas
jns
jne
in
xchg
jo
jns
push
push
repnz
jl
nop
adc
push
stos
and
notb
in
cwtl
sbb
rcll
enter
adc
inc
in
pop
stc
sbb
xor
fidivrl
fcompl
mov
subb
inc
mov
jg
cld
dec
mov
lea
stos
cmp
and
incl
adc
sub
add
cwtl
push
pop
adcb
jnp
pusha
inc
or
aas
jg
jle
add
test
xchg
or
jne
aas
jnp
out
aas
iret
dec
lods
repz
xchg
in
pop
pop
mov
adc
xor
fldenv
xor
or
or
insb
loopne
fmuls
lods
fsqrt
fisubrl
in
stc
enter
cwtl
or
jl
sub
lods
in
in
gs
pop
lret
jmp
mov
cmp
test
xchg
cmpl
mov
jmp
aas
jmp
das
das
or
jp
repz
lahf
ret
jmp
push
test
sbb
push
pop
pop
sahf
cld
stc
pusha
test
jmp
and
and
sbb
ds
jle
leave
mov
xor
rcrb
cmp
and
stc
enter
andl
jl
loopne
adc
lods
and
and
dec
mov
xor
xor
adc
pop
int
push
jno
dec
push
stc
mov
inc
or
subb
mov
stc
pop
add
xchg
xlat
mov
and
cmpsb
cld
stc
sbb
sbb
lahf
cmp
inc
cmp
push
stos
sti
fsubrs
repnz
and
jne
arpl
int
dec
cmp
sti
in
sbb
jns
outsb
outsb
vdivss
lret
jno
out
ret
dec
jl
int3
lds
data16
scas
xor
xchg
gs
pop
inc
or
scas
xchg
iret
lahf
sbbb
adc
add
hlt
cld
stc
pop
icebp
ret
rcrb
daa
js
stos
test
decb
in
sub
and
stc
repz
das
and
jb
clc
fdivrs
inc
in
in
mov
mov
insb
mov
ficoms
iret
lahf
push
xor
cmp
pop
iret
in
dec
jp
mov
repnz
repnz
addl
fcmovne
inc
ds
es
shrl
cltd
imul
push
stc
sbbb
loopew
ss
ds
popl
ffreep
out
dec
scas
das
out
jle
jle
pop
stc
enter
lret
fidivs
xchg
jl
and
ds
mov
push
iret
push
in
xorb
in
shl
cmp
inc
ds
sbb
lods
jbe
pop
ror
add
adc
int3
in
sub
mov
push
or
mov
adc
mov
ds
mov
mov
lret
adc
std
repnz
pop
cwtl
and
aas
push
mov
xchg
jl
jb
or
xor
push
cmpxchg
repnz
aad
jg,pn
xchg
mov
std
in
fwait
xor
cmc
pop
mov
mov
enter
je
and
lock
push
icebp
push
jno
bnd
popf
sbb
cld
stc
std
mov
jmp
insl
les
ds
xchg
lahf
aas
sub
adcl
jl
or
enter
cmp
xor
jo
je
shl
fcmovne
lahf
aas
push
lret
jle
movsl
push
nop
bound
sti
in
dec
and
bound
push
cld
stos
out
jl
and
enter
adc
lds
orl
iret
add
insl
out
aad
sub
adc
or
repz
mov
vshufpd
jecxz
ljmp
xor
push
inc
loope
push
sub
iret
mov
mov
cld
xor
push
lods
out
and
mov
stos
iret
ljmp
in
aam
push
js
add
and
jnp
or
jmp
lret
jl
add
rcrb
std
frstor
das
cwtl
sub
iret
pop
loopne
outsl
lahf
rcll
repnz
repz
scas
mov
mov
into
mov
aas
jmp
mov
mov
nop
add
out
lahf
sti
sti
xor
imul
aam
jl
cmc
movsb
shll
push
lea
aas
jg
sbb
cmpsb
out
sub
mov
repz
scas
subb
dec
xor
aas
jg
cld
sbb
inc
aam
push
pop
test
fisubrl
paddq
movsb
mov
xchg
inc
mov
movsb
cld
stc
repz
inc
popa
mov
pusha
adc
out
mov
inc
loope
mov
stc
repz
push
sti
aam
pop
mov
orb
std
test
aas
jg
cld
xchg
push
pop
cld
sbb
add
insb
lods
mov
repnz
lahf
pop
dec
leave
mov
mov
jno
into
cld
cmpl
ss
js
sbb
stos
daa
jg
sbb
push
or
jns
iret
mov
xchg
mov
jl
xchg
adc
add
mov
repnz
mov
xor
out
inc
nop
popa
sbb
ds
jbe
stos
outsl
repnz
dec
ds
movsl
out
imul
enter
xchg
dec
mov
sarl
jl
and
inc
mov
mov
cmp
jno
or
or
xchg
out
sub
imul
inc
ds
xorb
adc
out
dec
jle
repnz
pop
sti
xlat
mov
jecxz
mov
mov
xor
mov
and
ds
in
inc
cmp
mov
push
mov
repnz
call
inc
pop
push
or
jge
push
jne
cmp
dec
mov
enter
dec
rol
lahf
sub
scas
push
sbb
in
pop
mov
shl
pop
movsb
fnstenv
shl
mov
into
icebp
dec
pop
leave
lahf
push
dec
sbb
push
add
pop
inc
call
jmp
cld
scas
lods
mov
fnsave
jnp
jns
out
repz
lahf
xor
pop
insl
js
fisubl
jg
cld
stc
pop
orb
nop
add
xor
ss
iret
lahf
aas
pop
mov
cmp
sbb
cmc
cld
stc
repz
out
adc
popa
or
mov
lahf
jl
mov
mov
stc
repz
out
lods
jns
scas
aam
pop
aaa
xchg
enter
xchg
ret
mov
js
insb
aas
mov
leave
cmpsb
ljmp
jmp
or
imul
push
in
call
repnz
shll
ret
test
in
stc
enter
and
mov
push
sbb
lcall
insb
ret
lods
dec
mov
fldenv
pop
out
loopne
xchg
cmpsb
jle
fisttpl
aas
incl
pop
inc
jmp
stc
repz
mov
pop
fidivrs
outsb
movsb
xchg
sbb
aas
jg
cld
xchg
push
mov
rol
dec
pop
dec
pop
pop
cmpsl
pop
mov
jmp
fbstp
inc
test
adc
jno
cs
stc
pop
ficompl
pop
cmc
jno
enter
mov
pop
stc
or
lds
jg
dec
lret
mov
rcr
sub
out
lahf
aas
addb
loop
sub
cltd
ja
shl
cld
test
iret
or
mov
or
jg
and
cwtl
xchg
into
rcrb
ror
aas
add
cs
frstor
cld
stc
repz
push
fcom
sbb
aas
push
aas
ret
mov
shll
repnz
fisubrs
fstpt
mov
push
dec
mov
enter
jl
mov
lods
mov
xchg
call
das
push
gs
and
jb
loopne
cmp
enter
and
mov
shll
in
inc
push
jp
outsb
sbb
out
mov
ds
aas
or
stos
aam
sahf
adc
cld
hlt
xlat
adc
test
mul
mov
cld
add
sub
pop
repnz
jge
dec
das
sbb
ss
xor
leave
inc
adc
mov
es
xchg
sbb
push
test
stc
enter
imul
xchg
repnz
pop
xchg
push
mov
push
lds
pop
jl
out
add
stc
pop
fs
stos
scas
cmc
mov
scas
bswap
lahf
aas
jg
inc
loopne
jne
mov
repnz
repz
ror
push
out
fists
push
out
sbb
test
stos
pop
dec
xor
inc
bnd
pop
fsubrs
fcompp
cli
fldenv
pop
stc
scas
mov
mov
jae
mov
data16
mov
imulb
and
js
call
arpl
stc
rep
pushf
adc
mov
pop
mov
ljmp
iret
lahf
aas
jg
jnp
arpl
loopne
outsl
xchg
push
stc
repz
fdivrp
lock
fwait
xor
aas
jg
inc
adc
rorl
mov
repz
cmc
xlat
out
or
stc
dec
or
pop
sub
iret
lahf
aas
xor
dec
jno
repz
not
sbb
cld
stc
repz
fs
ljmp
shlb
and
xchg
mov
xor
iret
lahf
pop
lahf
xchg
and
subl
cld
stc
mov
cmp
jmp
and
pop
aam
ds
adcb
cmp
out
ss
sbb
into
out
stos
and
pop
stc
or
sub
push
movhps
in
aaa
or
inc
dec
leave
mov
shrb
roll
outsl
loope
iret
lahf
aas
movsb
pop
cli
jnp
sub
jge
rorl
loopne
dec
mov
in
inc
movsl
dec
push
pop
dec
cld
stc
repz
xor
lea
enter
or
iret
lahf
aas
jg
shll
or
fcomip
pop
js
stc
repz
add
popf
insb
sub
push
or
aas
shrl
dec
mov
aas
jg
rorl
clc
das
jno
cmp
iret
lahf
addb
or
mov
pop
daa
addr16
inc
lock
je
mov
leave
fwait
lahf
aas
jg
out
jg
jle
test
out
cwtl
rcl
cwtl
repz
xchg
xor
imul
xchg
jge
jg
out
imul
xor
loop
cmpsl
inc
cli
ror
jl
jecxz
insl
inc
in
insl
inc
popa
negl
adc
xchg
pop
push
in
lret
stos
cmpsl
sbb
adc
dec
push
stc
enter
and
mov
sub
pop
stc
fadds
xlat
sub
sarb
mov
pushf
jl
adc
out
gs
into
add
popa
mov
pop
mov
xchg
nop
pop
daa
aad
pop
shlb
pop
push
pop
mov
repnz
lods
aas
jg
cld
or
jne
mov
adc
out
lahf
or
inc
fcmovnbe
xchg
fcoms
or
jns
ds
stc
loopne
stc
pop
fcmove
call
aam
popf
std
in
leave
movsl
mov
sti
add
jmp
mov
mov
cld
stc
repz
dec
mov
mov
fnstenv
push
pop
iret
lahf
aas
jg
and
jle
push
sub
and
cld
stc
repz
stc
aam
shlb
aas
xchg
ret
sbb
mov
cmp
adc
out
cmpsb
ja
jg,pt
cld
jnp
xchg
inc
lods
mov
ret
and
pmullw
imul
enter
je
lret
lcall
in
pop
stc
pop
mov
andl
cmpsl
sarb
scas
lahf
dec
mov
repnz
jl
divb
dec
inc
das
mov
repnz
leave
inc
add
add
mov
sub
cmc
sbb
dec
iret
lahf
aas
jg
sbbl
xchg
fists
out
iret
in
dec
push
push
pop
cld
adc
add
xchg
cmp
mov
in
leave
lods
add
jmp
fbstp
jbe
pop
dec
pop
cmp
adc
js
fidivs
and
dec
xchg
xchg
aad
test
sub
push
dec
push
cmp
and
aam
fstps
inc
call
lahf
push
add
int3
bound
and
stc
enter
pop
icebp
call
mov
add
iret
pushf
inc
cwtl
iret
movsl
mov
lahf
aas
lea
xchg
leave
out
mov
mov
add
fsubs
pop
sti
cs
div
bound
and
jle
filds
xchg
and
mov
and
stc
movb
push
movsb
add
adc
repnz
cli
or
xor
cmp
enter
stc
enter
outsl
inc
pop
jns
and
mov
and
loope
push
push
sub
dec
sarl
push
or
mov
push
stc
pop
mov
data16
rcl
adc
fimuls
push
and
mov
cmpsb
hlt
in
lahf
stc
pop
jl
and
shlb
xor
mov
cld
stc
adc
lock
pusha
in
pop
xchg
aam
hlt
lret
iret
lahf
aas
jg
lds
std
cmp
dec
cld
in
out
pop
add
aas
addr16
add
jmp
data16
cmpsb
push
ljmp
stos
cmc
jns
iret
lahf
mov
aad
shrb
mov
iret
and
call
cwtl
cld
dec
movsb
lahf
icebp
leave
arpl
adc
sub
sbb
aaa
addr16
jl
and
mov
call
repnz
test
mov
mov
inc
insb
jne
inc
outsl
xor
sahf
jl
jns
mov
outsb
jg
add
clc
cli
or
inc
mov
out
lahf
aas
jecxz
aad
inc
test
enter
in
cld
stc
repz
pop
in
stos
aaa
xor
ret
jmp
iret
lahf
aas
jg
sbb
mov
das
js
push
inc
cld
stc
repz
mov
sbb
xor
addr16
jle
jbe
inc
aas
and
dec
xchg
jl
inc
jne
pop
cltd
ret
dec
xchg
ds
dec
je
imul
les
dec
clc
leave
pop
test
adc
jg
cld
or
sbb
mov
aas
in
out
pop
sbb
lret
sbb
stc
repz
addr16
in
xchg
into
enter
iret
push
adc
iret
lahf
aas
jg
mov
mov
les
loope
mov
stc
repz
loope
push
dec
lods
leave
cmp
sarb
test
push
mov
mov
fucomip
pop
mov
iret
dec
jecxz
outsl
mov
out
outsb
icebp
outsl
nop
dec
jge
jg
cld
outsb
js
xlat
jge
sti
jae
xchg
dec
mov
pop
inc
cmc
xchg
iret
lahf
dec
mov
push
push
xchg
lcall
test
fmull
dec
or
mov
dec
xor
lahf
jl
arpl
pop
inc
sti
sbb
stos
inc
xor
xchg
lahf
aas
inc
jno
outsl
mov
xchg
fstpl
loopne
mov
repnz
leave
cli
sbb
sub
iret
jmp
jg
fisubl
lret
mov
cmpsl
adcb
inc
adc
lret
jl
and
adc
mov
xchg
mov
js
loopne
mov
aam
mov
lds
frstor
scas
mov
inc
scas
pshufw
xchg
and
jg
cld
push
sub
ret
daa
sbb
jl
int3
xor
push
repz
lahf
in
inc
add
loopne
ljmp
jle
stc
shll
jns
arpl
loopne
addr16
jle
enter
pop
movb
mov
enter
leave
xor
stc
or
pop
jle
enter
add
stos
jmp
stc
enter
add
sbb
inc
jp
push
sbb
adc
inc
ds
addr16
fistl
sti
xlat
add
pop
stc
sub
mov
push
sub
and
sti
push
cwtl
cwtl
les
in
ds
lahf
jl
push
ret
iret
mov
push
xchg
sub
stc
enter
xchg
jns
or
mov
cld
and
and
aad
aas
mov
lahf
aas
jg
outsb
fstpt
test
adc
int3
add
dec
rcl
repz
push
xor
lcall
js
inc
jo
repnz
or
cmpsl
pop
mov
ficompl
inc
icebp
jg
jle
sbb
test
jmp
lahf
in
xchg
lahf
aas
pop
scas
cmp
push
and
push
repnz
inc
fldl
rcrl
lahf
aas
ljmp
shrb
aam
xchg
mov
rcrb
stc
repz
rorb
fldt
insb
out
aas
jg
cld
stc
jecxz
imul
in
dec
add
xchg
inc
iret
xor
out
lahf
inc
js
fcoml
adc
jae
dec
jg
cld
stc
dec
pop
pop
add
shll
pop
xchg
dec
inc
out
lahf
aas
xor
in
fs
movsb
lods
cld
stc
repz
sbb
mov
mov
mov
iret
lahf
aas
push
lds
cmp
mov
or
inc
mov
dec
mov
aam
jge
in
pop
jl
fildl
aad
push
pop
ds
popl
adc
xor
std
and
ds
enter
push
lods
xchg
xchg
test
repnz
and
mov
mov
xchg
jnp
fwait
sub
push
pop
cmp
pop
mov
sub
jp
js
aas
jns
inc
dec
adc
arpl
stos
sbb
pop
leave
and
stc
add
inc
pop
fcomp
out
les
sub
push
lods
cld
stc
repz
enter
mov
xchg
iret
lahf
aas
jg
ja
shlb
or
cmpsl
jge
jb
stc
repz
test
js
sub
loop
dec
jle
push
sbb
mov
das
loopne
jg
cmovb
mov
jl
out
lahf
or
sub
push
leave
jae
aas
jmp
aas
jg
cld
stc
pusha
cmp
dec
lahf
cmp
mov
call
lahf
aas
and
xchg
sub
mov
shrb
movsl
cld
sub
leave
scas
inc
pop
gs
adc
xor
outsb
lahf
aas
jg
fistpl
sbb
push
cmpsb
jp
enter
jle
std
sti
aaa
clc
movhps
aaa
push
out
shll
inc
xchg
pop
out
out
lahf
gs
xor
imul
les
jno
stc
cld
stc
dec
scas
cmpsb
push
lahf
dec
mov
jo
fmulp
lahf
jg
sahf
mov
sbb
addr16
stc
repz
xchg
jge
sahf
push
stos
xor
test
fwait
add
andl
push
cld
stc
repz
addr16
hlt
jmp
popa
idivb
lea
jge
lahf
aas
jg
cmp
scas
mov
push
mov
stc
repz
push
inc
lcall
out
mov
cld
and
hlt
stos
push
adc
adc
repz
pop
or
into
movsb
cmpb
jg
cld
mov
inc
sub
cmpb
insl
push
jecxz
mov
hlt
xchg
iret
lahf
jbe
das
cli
fcompl
add
stc
repz
push
rcr
fs
inc
inc
or
sahf
jl
cld
jns
ret
bound
mov
dec
sub
test
cld
stc
outsb
push
lods
jns
pusha
adc
jne
add
inc
in
lret
lahf
aas
imul
mov
popf
cwtl
call
repz
mov
push
adc
cmpl
inc
repnz
jle
sub
jmp
repnz
lret
lods
arpl
push
ljmp
xor
xchg
lods
aas
iret
ret
adc
or
repz
stos
xlat
mov
pop
lods
fcompl
jmp
cmp
repz
mov
popf
mov
sub
ds
aas
stc
cld
div
push
imul
push
iret
lahf
jg
jmp
cli
mov
xor
cmp
repz
les
mov
lea
sahf
and
lahf
jg
add
pusha
mov
cld
jnp
out
out
in
cmc
repz
mov
jb
arpl
insl
imul
and
xor
xchg
pop
daa
pop
pusha
cmpsb
std
sahf
stos
imul
push
repnz
jae
cld
mov
jp
sti
clc
gs
cmp
leave
pusha
enter
jmp
push
push
lahf
cmp
mov
pop
adc
pushf
test
imul
jle
fs
test
repnz
mov
add
stc
repz
lea
cld
aas
shl
rclb
std
lahf
aas
jg
cmpb
enter
insb
ss
ljmp
stc
repz
fcmovnbe
lods
push
xchg
fdivrs
adc
inc
jnp
aas
jg
cld
fidivs
mov
ljmp
mov
test
dec
cli
lret
std
adc
movsb
sahf
cld
stc
sbb
adc
mov
jnp
repz
scas
andb
inc
and
push
sbb
add
rorb
mov
outsl
sbb
mov
add
stc
add
stos
dec
insb
dec
pop
imul
cld
stos
sahf
mov
pushf
and
and
dec
nop
lahf
aas
jg
icebp
mov
sub
out
mov
add
inc
jbe,pt
and
jnp
adc
mov
ds
sbb
mov
test
sbb
mov
cmp
stos
lock
cld
int
std
enter
mov
sbb
lods
cli
cmpsb
sbb
leave
ret
cli
in
popa
ljmp
jg
cld
cmpl
push
adc
dec
pusha
jmp
iret
lahf
aas
pop
call
push
les
inc
ss
cld
stc
repz
stos
fisttpl
incl
iret
lahf
aas
jg
jbe
jp,pn
fsubrl
out
adc
lock
cmp
out
ljmp
gs
in
sahf
xchg
aas
fsts
mov
hlt
scas
aam
mov
cmpsb
xchg
mov
mov
cmp
aaa
popa
movsl
mov
pop
xor
repz
icebp
repnz
mov
cwtl
scas
xor
iret
xchg
lret
xchg
ss
out
sub
test
mov
inc
mov
cmpl
stos
mov
and
lods
scas
inc
ds
jmp
jnp
sub
inc
fcoml
jle
enter
movsl
jp
sbb
aas
push
or
push
les
push
mov
iret
dec
xchg
sub
testl
jl
cld
inc
mov
imull
lahf
aas
jmp
cmpsl
mov
lods
stc
repz
sar
movsb
in
pop
dec
fistl
inc
pop
mov
inc
dec
cld
mov
dec
mov
jle
iret
lahf
jg
push
or
lret
cld
stc
repz
setb
enter
jb
jae
out
push
iret
lahf
aas
jg
fadds
cmc
in
mov
fsubrl
das
cli
in
mov
inc
cltd
sbb
clc
in
mov
mov
and
lahf
aas
aas
clc
cmp
push
cwtl
pop
mov
cld
stc
repz
add
nop
iret
das
push
loope
pushf
daa
popf
dec
pop
cmp
sahf
aas
jg
fs
testl
dec
cmc
shll
mov
mov
loope
push
mov
das
call
dec
and
cld
stc
cmp
int
orl
ljmp
lds
or
mov
lahf
aas
aad
mov
ja
mov
clc
leave
out
out
mov
pop
jae
cli
mov
aas
jg
test
stc
ljmp
ljmp
inc
push
add
dec
aam
outsb
jp
inc
inc
mov
test
lret
enter
cmp
lea
aas
call
out
adc
cltd
cmc
cmp
mov
sti
cs
scas
jae
sbb
test
std
in
iret
stos
push
orb
jg
stos
sub
cmpsl
add
push
mov
mov
js
out
sub
daa
and
or
xchg
aas
jg
or
mov
loope
into
out
jl
and
push
cld
sbb
sub
fstpl
repnz
xchg
push
mov
and
xchg
dec
cmp
fwait
jle
enter
adc
push
pusha
nop
mov
cmpsb
inc
pop
stc
enter
mov
xchg
or
mov
mov
fwait
jb
xor
xchg
jmp
cld
mov
push
push
cmp
outsb
add
jg
movsb
out
ret
aam
sti
leave
and
add
fcomp
lahf
jae
xor
enter
xchg
divb
adc
lret
loopne
clc
in
pop
fucomi
inc
lret
sbb
xchg
xchg
jle
stc
enter
xor
cwtl
loope
add
xor
and
test
arpl
sub
xor
jl
push
in
out
lret
sti
pop
push
mov
cmpsl
sti
in
mov
lods
or
xchg
aas
jg
jg
pop
jecxz
pop
daa
fsubrp
std
cld
stc
repz
adc
lods
xor
adc
loope
sbb
mov
aas
jg
aaa
mov
int3
ret
and
es
lock
cmpsb
mov
jge
enter
mov
ds
cmp
lock
sti
in
pop
outsb
cmp
ss
mov
or
in
ds
adc
sahf
cld
mov
xchg
dec
push
pop
jnp
leave
xor
mov
xor
loopne
mov
pop
xchg
inc
ds
mov
repnz
icebp
inc
sub
sub
jmp
int
fimull
cwtl
cmp
repz
cld
cld
stos
das
pushl
mov
sbb
scas
pop
adc
out
lahf
jno
popa
jmp
mov
fildl
cmpsl
jg
cld
stc
bound
fwait
pusha
push
dec
fsubp
das
daa
inc
test
pop
out
lahf
aas
xchg
pop
inc
pop
mov
dec
sbb
cld
stc
repz
cmp
les
adc
stos
lahf
jl
xchg
into
or
jl
and
xchg
out
bnd
add
xchg
mov
xor
xchg
or
cli
mov
cmp
add
mov
sbb
nop
insb
jle
enter
bound
xchg
or
pop
cmpsl
stc
sti
sbb
out
jnp
or
adc
pop
ljmp
mov
jl
xchg
xchg
adc
adc
iret
inc
adcl
mov
cld
stc
inc
popf
sub
decb
outsl
sub
in
mov
jle
sub
jbe
jge
cmc
sub
lcall
outsb
in
or
stc
enter
mov
jmp
push
mov
loop
ds
clc
imul
xor
jl
or
fsub
sbb
or
jg
cld
stc
or
out
mov
int
mov
aas
mov
in
push
loope
jg
cmp
or
pop
push
pop
mov
push
adc
xchg
jl
test
pop
mov
sub
sbb
pop
or
das
dec
jg
pop
stc
gs
ljmp
cmp
out
adc
testb
sbb
pop
inc
pop
jge
xchg
mov
stos
andl
out
lahf
add
pop
mov
sti
stos
bound
aam
mov
cld
stc
clc
push
add
inc
sub
pop
rcrl
ret
lahf
aas
inc
jl
and
jg
in
sub
cld
stc
repz
xchg
mov
cltd
push
add
cs
sbbb
adc
mov
stc
repz
insb
call
pop
rorb
mov
xchg
das
xchg
gs
mov
out
scas
mov
repz
lahf
ret
dec
gs
pop
add
dec
dec
mov
cld
stc
dec
es
and
out
hlt
hlt
jecxz
and
dec
daa
mov
xchg
and
stc
repz
pop
jp
sahf
lahf
cmpb
push
or
pop
push
out
aas
jg
fs
jnp
mov
jno
cld
stc
repz
popf
fsubl
sti
cmp
mov
jmp
out
stc
repz
pop
mov
push
adc
mov
mov
addr16
push
jb
cmpsl
sarb
dec
adc
push
out
out
lahf
xchg
jns
xor
mov
inc
mov
lahf
fcomip
inc
lods
jl
jmp
arpl
ss
and
lahf
aas
pop
sbb
mov
popa
add
push
cmp
in
sahf
inc
or
in
pusha
mov
sbb
or
test
repz
aas
pop
icebp
loope
lock
dec
bound
sti
stos
jg
cld
stc
xchg
jecxz
jo
and
in
jge
cmp
andb
pop
jl
outsl
dec
rcrb
or
enter
mov
stc
repz
nop
pop
jne
in
dec
loopne
sarl
jg
cld
sub
sub
and
jb
jne
enter
lahf
jmp
xor
jne
cs
push
mov
outsl
jg
cld
stc
mov
cmp
pushf
loope
jecxz
pop
pushf
pop
cwtl
nop
iret
lahf
aas
call
test
pusha
dec
repz
icebp
mov
push
or
and
jg
cld
stc
push
inc
stos
jecxz
sub
jl
fidivrl
movsb
mov
jbe
mov
xchg
clc
loope
mov
cmp
movsl
leave
and
cmp
pop
mov
rclb
pop
fdivrs
jg
push
cmc
mov
repz
fstpl
dec
out
lahf
aas
xor
sub
mov
out
cld
cmpl
mov
dec
stc
out
stc
adc
decb
add
push
aas
add
nop
adc
pop
clc
ja
mov
in
iret
fwait
sahf
inc
ret
xor
pushf
inc
adc
jb
sbb
push
xchg
push
test
mov
mov
xchg
movsl
test
cld
fstp
adc
popa
and
lahf
aas
scas
add
lds
jbe
stc
pop
cmc
fdivrl
divb
ss
xor
loop
mov
push
stc
repz
aad
mov
fcmovnu
dec
push
sahf
cmp
ljmp
testl
pop
cli
js
out
lahf
iret
xor
test
shlb
jbe
cld
stc
xor
outsl
cmp
mov
ret
out
lahf
aas
add
sub
sbb
cld
stc
repz
ds
add
mov
or
movsl
out
iret
lahf
aas
jg
scas
negb
divb
add
stos
xchg
out
std
stc
out
fs
outsl
xchg
sarl
aas
jg
test
inc
popa
push
mov
repz
imul
iret
inc
push
cmpsl
add
mov
push
jl
sbb
jg
cld
jp
fxch
xchg
call
out
lahf
adc
cmp
data16
fwait
jg
cld
stc
mov
push
jnp
sub
xchg
and
add
iret
lahf
aas
or
pop
inc
and
hlt
dec
call
in
jecxz
popa
xchg
mov
jbe
xchg
push
stc
or
lods
jb
aas
push
sbb
clc
sub
push
hlt
xor
pop
mov
cld
stc
arpl
jnp
adc
sub
add
pop
out
lahf
aas
arpl
sub
sbb
repnz
repz
notb
lea
inc
push
lret
lds
push
sub
and
push
add
stc
inc
push
enter
cli
cmp
out
lahf
aas
mov
out
sub
inc
popf
push
lcall
repz
insb
xchg
rcll
mov
sub
int
or
aas
jg
push
sub
inc
inc
dec
inc
ss
std
in
out
cmp
add
ds
cwtl
push
jecxz
popfw
mov
mov
mov
cmpsb
pop
add
dec
aaa
cld
stc
repz
sbb
insl
xchg
int
dec
xchg
push
lahf
aas
jg
pop
clc
ds
fcmovu
jp
out
insb
adc
push
jge
repz
sbb
sub
fisttps
push
sub
cld
inc
xor
and
pop
mov
aas
ljmp
cwtl
jbe
push
lret
mov
repz
or
icebp
jp
sbb
or
push
popf
cld
inc
add
stc
repz
fcmovbe
adc
sub
jge
or
jle
aas
jg
cld
pop
and
dec
mov
test
push
ljmp
and
sbbb
and
fcmovne
pop
mov
jns
mov
mov
mul
ret
shrb
cld
stc
adc
mov
push
flds
out
sub
dec
jg,pt
mov
mov
add
stc
repz
inc
jne
sbb
and
xor
incb
cmp
mov
xlat
je
push
repz
mov
jae
shl
cld
stc
xchg
inc
pop
xor
xchg
mov
mov
jg
xchg
dec
aam
and
out
lahf
inc
ret
insb
add
bound
cld
stc
xor
imul
xchg
iret
lahf
aas
sbb
stos
pop
cmp
icebp
jp
jecxz
or
in
inc
inc
xchg
nop
mul
iret
lahf
aas
or
stos
inc
shrl
sahf
and
cld
stc
repz
idivl
out
push
mov
fnsave
int
cli
repz
and
pop
aam
push
jl
cld
stc
jb
lea
in
clc
mov
lahf
ss
inc
push
jno
jl
test
push
xor
pop
inc
xchg
enter
or
jo
cmc
jbe
adc
and
stc
and
call
cli
in
rcrl
iret
lahf
aas
decl
and
xchg
std
add
jnp
popf
add
cld
stc
repz
mov
jae
scas
mov
or
stc
shrb
dec
dec
jecxz
or
call
pop
insl
loope
cli
movsl
icebp
mov
out
pop
and
push
push
aas
mov
cld
stc
repz
xor
int3
cltd
cltd
add
cmpl
cmpsl
jne
mov
imul
out
jg
cmpsb
push
stc
aas
stc
cld
stc
pop
loop
sets
insl
xchg
data16
inc
jne
lcall
out
mov
stc
add
aad
clc
ja
pop
add
stc
test
js
or
push
adc
add
sub
popa
dec
dec
iret
lahf
aas
jg
xlat
mov
xchg
addb
sti
cld
stc
repz
mov
and
outsl
imull
call
sub
jbe,pt
test
dec
jmp
out
in
leave
arpl
dec
ss
xor
call
aam
jp
sbb
pop
and
pop
jmp
and
lcall
or
mov
cld
mov
iret
lahf
aas
jg
movsb
lods
adc
and
leave
out
xchg
mov
es
and
cld
in
push
adc
js
call
dec
loop
andb
sbb
stc
repz
cld
mov
leave
in
insb
and
and
jg
dec
lret
xlat
jne
cmp
cld
stc
repz
jecxz
mov
insb
repnz
aam
sub
enter
jg
dec
adc
cld
mov
and
dec
and
push
out
inc
cld
push
lret
dec
cld
out
nop
mov
dec
add
out
lahf
aas
ror
clc
repnz
sub
pusha
outsl
inc
insl
icebp
stos
cld
stc
repz
xchg
xor
call
xchg
iret
lahf
aas
jg
or
cmc
std
popa
scas
sbb
pop
cli
sub
jb
sub
mov
adc
add
dec
pop
pusha
repnz
fadd
adc
stc
inc
je
stos
cmc
aaa
or
fcoms
push
jg
pop
jns
int3
test
cwtl
enter
lahf
inc
mov
rcl
enter
cld
stc
and
and
xchg
inc
es
or
iret
lahf
aas
push
mov
sahf
mov
enter
das
nop
ds
stc
repz
scas
and
xchg
inc
dec
negb
ret
ljmp
add
repz
adc
nop
mov
or
imul
ds
das
add
das
clc
and
das
sub
pop
stc
mov
fyl2xp1
repz
ret
inc
aad
dec
daa
pop
in
dec
dec
mov
jg
cld
and
pop
jl
cli
push
xchg
push
sub
xchg
pop
pop
dec
xor
aad
fcmovnu
lcall
fildl
ret
inc
lods
cld
stc
push
vcvtsd2si
shrb
cld
data16
rcl
repnz
stc
repz
das
push
mov
jo
fidivrl
cmp
js
jno
sbb
jb
cld
stc
incl
fnstsw
mov
or
add
fs
xchg
movsl
cld
stc
repz
cmp
cltd
mov
jo
jecxz
sub
jg
sub
mov
inc
xor
out
aam
mov
jno
aaa
xor
mov
aas
jg
mov
pop
adc
adc
in
out
mov
jge
cmpsb
pop
push
cmp
aas
fs
loopne
add
lcall
dec
adcb
jl
lahf
jl
arpl
xchg
mov
or
sbb
dec
push
add
pop
daa
stc
adc
or
aas
jg
cld
int
test
in
pop
and
out
lahf
fmulp
cli
mov
jge
je
int
lret
std
in
add
pop
loope
dec
incb
scas
mov
mov
out
adc
stos
xor
lahf
lods
adc
pslld
stc
mov
sbb
stos
outsb
iret
lahf
aas
jg
out
dec
pop
push
aam
lahf
in
loop
stc
repz
sti
idivl
inc
cmp
jo
mov
cld
js
call
inc
inc
xor
adc
out
lahf
fimuls
inc
fldcw
mov
pop
cmp
cld
stc
imul
sbb
dec
push
or
out
lahf
aas
pop
sbb
icebp
sub
cld
stc
repz
xchg
mov
cmp
clc
push
mov
jg
xlat
or
mov
mov
adc
out
pop
dec
sub
repnz
jge
mov
shll
stc
enter
sbb
add
ljmp
jmp
pop
out
jge
test
loopne
in
pop
daa
aaa
lock
push
pop
fwait
xchg
movsl
ret
in
lahf
into
dec
popf
cwtl
sub
popl
mov
bound
in
jnp
mov
enter
xchg
je
scas
sbb
push
lods
mov
test
adc
stc
repz
in
daa
cmp
add
cld
test
inc
stos
cmc
cs
cmp
iret
lahf
aas
jg
or
into
lea
dec
sub
sub
jmp
je
push
push
fildl
cli
test
jle
xor
jns
inc
push
mov
mov
xchg
lahf
xor
dec
insb
ds
xlat
fstp
sar
dec
ds
sub
push
jecxz
jnp
stos
leave
and
rcl
mov
pop
push
and
add
xchg
in
xchg
lahf
jg
lods
push
test
dec
pavgb
or
jns
xchg
jae
cmc
dec
mov
pop
imul
jbe
fstps
adc
leave
and
push
cli
in
mov
out
push
stos
dec
xor
add
pop
stc
enter
ss
add
push
inc
adcl
in
inc
cmpsb
and
and
loope
shl
data16
mov
hlt
popf
jle
leave
mov
jl
or
daa
aas
add
andb
leave
and
pop
jo
stos
stc
stc
and
mov
dec
adc
std
in
repnz
xchg
mov
stc
pop
dec
push
jecxz
enter
add
jl
in
xor
and
ljmp
jg
jg
inc
js
rclb
stc
repz
or
push
mov
mov
movl
icebp
mov
cs
repz
lahf
nop
sub
mov
or
jg
cld
stc
push
add
das
xor
les
cmp
sub
out
lahf
aas
sbb
inc
sti
sbb
movsb
jo
cld
stc
repz
subl
and
insb
sub
xchg
decb
lahf
aas
jg
std
aam
repnz
cmc
dec
pushf
or
push
stc
adc
xchg
jo
roll
mov
dec
jle
cld
add
sub
push
lahf
aas
jmp
popa
sbb
xchg
inc
mov
stc
repz
icebp
xor
pop
jno
ficoml
or
aas
jg
cld
pop
pop
hlt
push
sub
nop
dec
outsl
lahf
adc
dec
gs
cld
stc
push
cmc
dec
ret
mov
dec
pop
push
pop
sbb
aas
inc
lahf
cld
sub
leave
inc
xor
nop
adc
out
lahf
pop
add
mov
push
mov
idivb
cld
stc
int
inc
iret
nop
out
cld
pop
popa
in
mov
inc
das
repnz
aas
cld
lea
dec
sahf
pop
stc
enter
mov
push
lahf
fwait
mov
and
jmp
cmp
xor
add
mov
outsb
and
sub
sbb
dec
cmp
lods
movsl
xchg
jl
push
xor
xchg
lret
cld
stos
ds
das
or
out
mov
not
lahf
aas
jg
adc
out
push
int
pop
jp
cmpsl
stc
repz
lock
icebp
jmp
push
pop
std
inc
lock
sub
cmp
iret
jge
stos
sbb
xchg
repz
fisubs
add
adc
movsl
lods
ret
insb
jl
out
cmpsl
inc
jmp
xrelease
jbe
lahf
aas
jg
shlb
in
add
push
lock
iret
mov
adc
adc
clc
movsl
aas
jg
cld
pop
xchg
mov
jbe
push
push
les
iret
lahf
jo
push
mov
int
jp
xchg
movsb
aas
jg
adc
les
pusha
lods
jl
ljmp
iret
lahf
inc
cmp
je
xchg
ja
and
jg
cld
stc
mov
mov
cmpsb
into
fwait
or
mov
and
sub
out
lahf
aas
fisubrs
mov
mov
stc
repz
pop
ja
inc
addr16
adc
inc
jecxz
xchg
mov
sbb
xchg
or
push
xchg
ret
cld
stc
repz
sbb
popa
push
daa
and
pop
adc
int3
xchg
aas
jg
hlt
std
in
repnz
mov
daa
pop
stc
fadds
stos
loope
outsb
arpl
mov
and
xchg
pop
adc
adc
dec
mov
cmp
xchg
inc
jne,pt
mov
cltd
sbb
or
and
inc
lods
push
loope
lahf
scas
cld
stc
repz
jecxz
mov
div
movsl
mov
aam
outsb
aaa
je
aas
jg
mov
fidivrl
roll
sbb
shrb
stc
repz
add
enter
scas
mov
cld
jns
ljmp
fwait
mov
in
iret
lahf
out
testb
ja
xor
cmpsl
sbb
popf
stc
enter
xchg
fmull
push
fsubrp
cwtl
scas
leave
jb
and
xor
aad
xchg
pushf
fisttpl
or
inc
adc
test
or
mov
xor
jns
add
or
lea
xchg
iret
orb
jge
and
in
mov
insb
dec
cld
dec
push
movb
subb
mov
or
pop
cmp
mov
pop
movsl
pop
lea
ljmp
xchg
movsl
ret
mov
mov
cld
andl
mov
int
out
lahf
aas
jp
xchg
out
shlb
stos
xor
sub
repnz
and
or
jno
scas
jb
pop
or
push
mov
adc
leave
insl
mov
sahf
sarb
dec
dec
lods
aas
jg
cld
sbb
dec
dec
cltd
leave
ja
cld
cld
aad
out
lahf
fdivrs
ja
sbb
mov
jg
cld
stc
pop
jp
icebp
call
mov
movsb
xchg
iret
lahf
aas
sbb
outsl
dec
dec
cmc
loope
incb
cld
fldcw
icebp
mov
xchg
aad
cld
xor
sti
cmp
pop
mov
icebp
rorb
sub
loopne
negl
jno
jns
jg
arpl
xor
or
into
leave
and
sti
aas
dec
push
sti
cmpsl
pusha
sub
cmc
and
nop
ljmp
dec
ja
rcr
aam
hlt
sub
pop
stc
xlat
push
pop
sbb
repnz
icebp
ret
cmp
push
lret
cmp
ja
dec
ds
cmc
mov
cmp
cmp
push
pop
xlat
add
inc
dec
mov
cwtl
push
je
loopne
in
dec
xlat
xchg
hlt
mov
cld
stc
pop
pop
in
mov
sub
adc
daa
movsl
daa
jb
mov
mov
jmp
pushw
push
hlt
bound
pop
stc
test
cs
cmpl
xchg
fwait
imul
cmpsl
test
ljmp
jg
stc
sti
sar
and
jge
sbbl
pop
mov
stc
mov
lds
iret
xchg
das
not
pop
push
and
mov
cld
inc
fwait
js
ror
addl
out
lahf
inc
scas
nop
lds
and
pslld
stc
add
xchg
adc
clc
js
cmp
mov
push
inc
mov
push
movsb
inc
xchg
enter
sbbb
jp
jno
in
add
ljmp
push
adc
in
outsb
mov
mov
mov
fcoms
inc
lret
aas
test
dec
dec
adc
jg
out
test
mov
and
xor
adc
stos
dec
jge
out
rcrl
cmpsb
sbb
jmp
cmp
xchg
andb
in
je
pop
sub
jl
loopnew
jge
pop
sti
fs
pop
pusha
jo
inc
ds
cmp
sub
mov
stc
enter
mov
vpacksswb
jl
sub
cltd
jp
incb
cs
enter
fsubs
repz
cmp
aas
ja
pop
out
pslld
and
imul
test
je
add
inc
ror
jl
push
push
xlat
adc
iret
repz
in
pop
stc
nop
mov
stos
push
or
in
cmpsl
mov
or
stc
stc
repz
cmc
shll
inc
inc
and
xor
dec
test
popf
mov
jl
fs
mov
ljmp
repnz
test
call
jl
and
cmp
xor
sub
inc
ret
mov
shl
std
in
rolb
repnz
pop
sbb
aas
ds
in
daa
test
jae
adc
daa
jmp
ss
cmp
xchg
cld
stc
repz
clc
scas
jl
into
aas
ds
aas
jg
push
inc
cmp
or
repnz
jnp
pop
fwait
stc
repz
mov
out
jmp
sbb
cld
movsl
fadds
pop
sub
lods
in
ret
in
iret
lahf
clc
ret
add
add
enter
jl
lds
mov
xor
mov
iret
lahf
cmp
testb
jb
cmp
mov
jge
push
testb
xchg
mulb
sbb
push
dec
es
stc
enter
lcall
pop
or
aas
adc
mov
shll
sbb
iret
icebp
push
and
mov
test
jg
cld
stc
pop
popaw
mov
mov
sahf
scas
filds
mov
daa
aas
adc
inc
push
bound
test
hlt
inc
push
out
mov
mov
jns
ljmp
repz
dec
dec
out
push
leave
lahf
out
incl
aas
jg
cmp
int
or
mov
movsl
xor
or
stc
repz
xor
and
add
and
into
cmpsb
mov
lahf
cld
cld
jmp
mov
imul
iret
lahf
aas
jg
pop
jg
add
xchg
pusha
std
cmpb
stc
repz
cmp
sub
inc
xchg
add
out
lahf
jle
sub
aad
stc
push
push
gs
cld
stc
repz
imul
fs
fs
iret
lahf
aas
jg
fmulp
popa
sbb
negb
imul
repz
xchg
cltd
or
mov
jnp
xor
dec
aas
mov
pop
sbb
stos
push
inc
stc
repz
sbb
xor
rorb
aas
jg
cld
jo
hlt
and
push
imul
or
stc
fsubs
test
jg
js
xchg
jne
jl
and
xor
xchg
popa
roll
cmp
xchg
aam
int3
jge
negb
and
xchg
jl
dec
insb
mov
add
ds
scas
xor
push
in
adc
in
pop
stc
cmp
jmp
cltd
pop
push
pop
inc
test
outsl
or
fstl
jp
dec
mov
sub
pushf
aas
jg
add
inc
dec
aaa
adc
shrb
fldl
xchg
sub
cmp
xchg
cmp
or
push
daa
jge
dec
adc
mov
pop
inc
call
outsb
pushf
lcall
in
cmp
aad
push
dec
mov
pop
dec
iret
lahf
jg
hlt
dec
or
cmp
inc
cld
stc
repz
adc
mov
ficoml
stos
cmp
ds
rorb
hlt
mov
test
dec
aam
repnz
mov
cmp
jae
sti
add
into
xor
push
jg
jne
je
xchg
in
mov
shrd
xchg
ret
pop
pushfw
loopne
stos
push
cmp
call
orb
lahf
leave
and
cld
cmc
lret
cmp
xchg
rcrb
dec
xchg
mov
fxch
lahf
rolb
fwait
pop
inc
iret
stos
in
mov
cmp
xchg
lahf
jg
lcall
inc
or
leave
iret
mov
add
dec
pop
mov
jl
push
mov
mov
sarb
incb
pop
dec
rolb
jns
repz
lahf
outsl
out
cmpb
out
add
and
jle
cld
stc
sub
jmp
in
cs
inc
cmp
ds
jecxz
mov
xor
ds
enter
pop
or
das
js
mov
repnz
cmp
cmp
pop
pusha
inc
jno
jno
enter
xor
test
dec
and
stc
or
adc
sbb
jae
iret
lahf
aas
jmp
jge
packssdw
shl
sbb
and
stc
repz
add
jle
repz
mov
jge
lahf
aas
jg
es
mov
cmp
adc
ficompl
dec
fcmovu
lods
cwtl
lods
mov
imul
xor
or
push
sub
mov
daa
loop
and
mov
xchg
test
ds
pop
sub
inc
sub
cwtl
clc
addb
ss
jge
repz
mov
repz
notb
outsl
lds
inc
and
ljmp
cmp
aas
add
mov
fidivs
pop
repz
lahf
popa
mov
cltd
movsl
fsubrs
cld
stc
dec
fstpl
xor
sub
into
push
push
pushf
inc
push
xor
and
lahf
aas
mov
call
popl
in
pop
sti
sub
jmp
je
repnz
jl
ja
negb
loope
jbe
enter
rorl
dec
pusha
lcall
fmuls
aaa
pusha
iret
arpl
imul
and
pop
adc
cmpsl
or
xchg
mov
enter
movsl
rclb
xchg
and
sbb
add
je
loop
pop
sti
in
lea
push
inc
xor
fiadds
and
mov
cmp
xor
int
mov
jns
insl
add
leave
leave
jns
ja
aas
inc
iret
bound
loop
inc
jp
xchg
out
repz
sub
xlat
sti
dec
and
push
push
aas
aas
jg
cld
call
sbb
out
push
jae
add
sub
in
lahf
push
xchg
fwait
clc
sub
les
jg
jae
pushf
stos
inc
inc
outsb
and
loopne
xchg
fldl
jle
dec
mov
cmp
xor
cld
sub
mov
xchg
push
pop
out
mov
lahf
aas
jg
idivb
push
add
cmp
out
add
push
xchg
jg
pushf
mov
xchg
fsts
dec
into
outsl
cs
repz
mov
cmp
cs
cmp
jg
cld
mov
mov
aam
adc
leave
lahf
sbb
jae
fistps
iret
lahf
aas
jg
jge
ret
sub
mov
mov
dec
imul
std
mov
adc
cld
stc
repz
inc
addr16
mov
pop
cmpsl
daa
outsb
repnz
loope
iret
mov
les
add
cld
stc
repz
fs
je
out
push
jne
and
idivb
sahf
mov
mov
nop
pusha
xlat
push
test
in
in
jmp
and
and
lret
jl
repnz
jl
leave
jmp
and
jl
mov
pop
or
lahf
imul
lahf
xchg
pop
in
mov
insb
fwait
enter
jle
stc
enter
popa
push
inc
xchg
cmp
jo
push
mov
adc
and
dec
aas
jg
adc
clc
scas
aam
cmpsl
out
inc
or
out
lahf
or
and
add
fisubs
js
pushf
cmp
xor
jns
cld
add
add
dec
pop
into
nop
fldcw
into
push
mov
arpl
mov
push
jnp
pusha
jns
and
stc
dec
ffree
test
xlat
fwait
adc
xchg
jl
ss
push
out
inc
xor
dec
add
enter
mov
lahf
aas
pop
fldt
jl
mov
dec
dec
sbb
cld
stc
repz
into
je
fcmovbe
xchg
loope
cld
sub
cmp
adc
jo
jp
rolb
cld
stc
loopne
pop
mov
mov
jecxz
insl
fsubs
aas
iret
inc
push
gs
sbb
jl
ds
mov
cmp
mov
xchg
hlt
icebp
xchg
and
mov
xchg
add
in
inc
mov
cld
cld
test
adc
jns
in
imul
sbb
scas
out
or
cmpl
xor
lock
sar
repz
mov
outsl
jl
aad
mov
cmp
sbb
mov
mov
mov
divb
outsb
stc
repz
outsb
jno
jb
arpl
adc
fistpll
jg
cld
xchg
pcmpeqb
xlat
movsb
mov
pop
jne
push
repz
lahf
push
int
xlat
add
jno,pn
idivb
in
add
jmp
mov
jp
mov
ret
jno
bound
lods
cwtl
push
xor
push
add
into
aas
jg
cld
mov
imul
mov
rcr
stc
repz
xor
mov
cmp
aad
jg
cld
mov
aam
enter
mov
sub
out
lahf
pop
pop
aam
push
ljmp
push
aas
stc
cld
stc
subl
or
sbb
push
pop
ds
mov
lahf
aas
jg
lret
in
mov
inc
cmpsl
fnstenv
repz
out
cli
in
in
es
mov
daa
mov
leave
out
lahf
jg
shl
shll
mov
inc
xchg
loop
xacquire
gs
movsb
test
cld
mov
lea
rolb
clc
dec
sbb
sahf
fwait
mov
mov
cli
and
dec
in
or
sub
lahf
aas
jmp
jp
push
cmp
inc
cld
stc
repz
or
popa
inc
jl
cmpsb
or
add
decb
clflush
jbe
repz
insb
das
sub
fsubl
adc
dec
mov
mov
cwtl
idivb
and
ljmp
or
cld
stc
lds
stos
pusha
add
lahf
aas
add
stos
and
fld
sbb
repz
call
sub
xchg
lret
sub
cld
enter
mov
mov
out
repz
lahf
in
data16
jmp
cmp
jg
cld
stc
out
sub
inc
adc
stos
arpl
jno
iret
lahf
aas
sub
mov
mov
sbb
inc
incl
jp
cmp
cmp
mov
gs
mov
add
iret
lahf
aas
mov
xlat
in
and
adc
push
mov
inc
mov
push
lahf
jl
arpl
mov
mov
sbb
mov
pop
lret
pop
jge
mov
into
in
fldt
fldl
sbb
or
xor
fucomp
sub
cmp
leave
inc
xor
aas
sarl
repnz
fcmove
xchg
or
lea
inc
add
adc
pop
imulb
notb
add
sbb
xor
or
cmpsl
mov
mov
mov
push
out
daa
call
aas
lcall
xchg
lret
cld
stc
repz
in
sub
cmp
stos
fildll
iret
lahf
aas
jg
js
jge
add
jg
pop
jnp
cld
jns
mov
out
push
loop
xor
aas
jg
pop
sub
inc
mov
nop
mov
cmp
repz
xchg
dec
out
adc
push
add
iret
lahf
aas
inc
dec
mov
rcl
addb
es
shll
mov
std
mov
jg
popa
rol
std
mov
mov
in
in
jle
sbb
clc
packuswb
into
xchg
mov
mov
inc
xchg
subps
in
pop
stc
repnz
mov
pop
jg
xor
stos
sub
in
aas
jns
pop
push
mov
pop
cli
repnz
jg
mov
sahf
loope
and
fistps
sti
in
pop
stc
cmp
insl
rcll
jle
out
xchg
jl
lret
hlt
mov
data16
adc
fistps
fwait
popa
popa
push
xchg
inc
test
fiadds
mov
push
out
aad
rorl
cltd
mov
dec
lahf
aas
jg
aaa
jl
xchg
hlt
test
pop
out
insb
stc
repz
adc
adc
jae
sub
mov
cld
adc
sarb
and
lock
in
lahf
jg
repnz
into
mov
sub
popf
in
jg
inc
lock
sub
out
cmp
push
fwait
sub
fmuls
jno
inc
xor
bound
sub
cmp
leave
arpl
push
dec
push
push
inc
in
shll
pushf
addr16
movsl
in
jge
cld
js
andb
std
rorl
loope
stc
jecxz
repz
ljmp
pop
adc
aas
jg
cld
in
mov
sar
clc
xor
repnz
repz
lahf
add
add
pushf
xchg
dec
dec
pop
adc
cld
stc
dec
out
cmpsl
shlb
scas
sub
add
iret
lahf
aas
push
jne
mov
test
stc
repz
bound
popf
mov
repnz
jl
mov
repz
jge
jno
jge
imul
testb
adc
test
daa
lahf
aas
jg
fisubl
push
pop
ljmp
and
in
iret
jl
mov
sub
shll
rcrl
and
mov
pop
call
in
popa
xor
inc
inc
out
mov
xor
lods
lods
pop
daa
ds
lahf
aas
jg
xchg
mov
ret
inc
loop
in
cld
stc
repz
adc
xchg
lahf
dec
add
mov
dec
js
movsl
rclb
aas
inc
or
aam
push
vmovdqa
div
add
ljmp
jl
ret
or
sahf
and
loope
in
mov
pop
mov
jl
cmc
mov
dec
cld
stc
inc
push
nop
mov
add
mov
fs
andb
mov
repz
test
mov
xor
jns
sub
out
int
in
pusha
pusha
gs
mov
iret
lahf
cmp
sti
or
xchg
jg
inc
jl
int
xor
addb
in
lahf
aas
cmc
add
cmp
es
inc
idivb
or
imul
enter
cmp
mov
sbb
jg
incb
xchg
xchg
push
cs
out
enter
iret
lahf
or
push
jp
ja
fiadds
lods
pop
adc
idivl
add
in
mov
jne
out
aas
loop
add
ss
aas
dec
xor
pminsw
push
xchg
or
repz
pop
fcoms
fmull
lahf
aas
jg
jl
jp
xchg
jg
fprem1
gs
sbb
repz
pop
push
pop
and
adc
scas
adc
pop
mov
stos
out
lods
mov
jnp
xchg
mov
iret
lahf
outsl
aam
cmp
in
les
cmp
popf
aam
int3
xchg
pop
pop
sub
aas
adc
xlat
daa
jb
incl
jbe
and
cld
stc
repz
insb
xchg
int3
leave
push
sbb
out
int
mov
jg
test
inc
jno
scas
mov
lret
sahf
sbb
inc
data16
add
xchg
aas
push
or
outsb
arpl
lahf
aas
jg
rcl
enter
jecxz
shlb
stc
repz
popa
adc
push
movsb
shrl
sahf
aas
jg
movsb
push
inc
pusha
sbb
jne
push
fsts
mov
arpl
out
popa
jne
mov
repnz
fwait
xlat
enter
in
in
daa
cmp
adc
xchg
mov
es
jl
and
rcrl
out
mov
xlat
pop
stc
pop
lahf
movl
mov
dec
ror
stos
or
mov
enter
add
pushf
pushf
aad
arpl
mov
sub
pusha
sub
iret
add
int3
mov
call
sub
xor
adc
scas
cmpsl
stos
repnz
jle
js
outsb
sbb
dec
insb
and
fnstenv
xchg
scas
xor
incl
pop
cmp
xor
repnz
jl
pop
push
or
insl
std
icebp
stc
enter
xchg
loopne
sahf
xchg
xchg
sti
in
pop
or
enter
dec
cld
repnz
pop
pusha
ficoms
stos
add
stos
mov
es
sbb
inc
pop
xchg
push
test
pop
stc
cmovbe
frstor
or
rorl
inc
shl
cmpb
adc
sbb
arpl
sbb
dec
add
out
loop
sub
loop
cld
stc
repz
push
xor
ljmp
push
pop
or
sbb
shrl
inc
pop
pop
dec
je
repz
loop
testb
cmp
dec
adc
jg
cld
xor
imul
in
or
xor
lahf
loopne
dec
dec
not
add
nop
add
cld
stc
jnp
push
mov
xchg
xor
fists
in
iret
lahf
aas
mov
adc
xchg
andl
rep
daa
in
cmp
dec
cmp
cmpsb
pop
push
push
jmp
lahf
aas
jg
fwait
xchg
jne
ljmp
push
inc
ds
mov
xorl
lock
out
or
dec
enter
in
repz
sbbl
inc
xchg
out
in
aas
call
push
cmc
xlat
insl
pusha
nop
jae
repnz
popl
or
call
sbb
cld
cld
test
pop
mov
outsl
je
in
ljmp
push
mov
fsubl
cmpsb
mov
add
mov
arpl
add
lret
add
push
cltd
mov
scas
adc
pop
push
pop
mov
fdivrl
je
push
mov
cwtl
ret
mov
cmp
pop
rorl
or
adc
gs
push
push
push
mov
push
cmp
sti
rorb
mov
push
lods
rolb
inc
adc
mov
cmp
hlt
ljmp
testb
insl
mov
add
aam
push
pop
mov
fmull
mov
iret
out
insl
or
fdivrs
shrb
test
ss
out
ret
dec
inc
aad
sar
shlb
sbb
ljmp
stc
jmp
mov
aam
or
and
pop
dec
adc
sarl
xchg
mov
push
jnp
add
mov
push
iret
mov
je
mov
mov
mov
outsl
jns
ret
fisubrl
xorb
and
movsl
sbbb
fdivs
insl
lods
fildll
mov
mov
popf
test
jo
add
test
pop
ret
xchg
add
add
scas
mov
push
xor
adc
xchg
add
call
adc
add
or
mov
sub
jg
inc
lret
ss
push
jne
xor
push
inc
mov
cmp
and
add
adc
inc
aam
mov
push
xor
jo
push
sbb
je
add
das
adc
push
fcmovnbe
lcall
mulb
call
inc
sbb
jl
mov
adc
jo
push
enter
mov
jnp
mov
push
mov
test
cmpsb
push
call
add
ljmp
pushf
in
movsb
xchg
and
es
leave
adc
mov
pop
fsubl
sbb
mov
mov
mov
push
and
mov
jb
pop
shll
inc
push
testb
iret
jnp
sub
daa
je
data16
fs
push
rorb
jge
sbb
ljmp
aaa
mov
cmp
stos
adc
shrb
mov
sub
arpl
sbb
jge
daa
sbb
adc
adc
into
push
fmul
insl
ljmp
and
mov
xchg
and
cmp
fdivrl
sub
mov
push
fidivl
add
rcrb
jae
and
into
adc
cmc
sub
pop
aam
daa
fstps
shr
adc
cli
push
stos
add
test
sbb
sub
push
stos
mov
aad
push
add
fldt
xor
mov
inc
adc
sub
jge
add
cmp
mov
es
rcrl
mov
outsb
dec
push
sbb
adc
push
mov
jge
push
pushl
test
sub
cmp
stos
mov
push
sub
push
aas
sub
push
inc
movsl
cmpsb
pop
or
lcall
push
sub
dec
bound
int3
xor
mov
xor
mov
test
sbb
ljmp
call
sbb
or
add
icebp
js
pop
int
fwait
mov
enter
xchg
ret
out
ss
shll
adc
or
shrb
sub
dec
es
test
andl
ret
aam
or
adc
jle
mov
xlat
sbb
push
add
fcmovnb
mov
pop
mov
bound
leave
aad
sbb
or
add
sub
mov
sbb
inc
fidivl
push
wrmsr
mov
sti
sub
mov
cld
add
mov
mov
pop
shl
mov
sbb
or
xor
or
jmp
loop
push
push
push
push
call
jno
lcall
xor
sub
call
lock
mov
bound
pop
jb
inc
mov
mov
mov
cmpsb
mov
pusha
ficomps
push
lods
or
xchg
int
xlat
xor
imul
jle
fiadds
adc
push
push
push
cmp
into
push
rcrl
nop
sbb
rolb
mov
adcl
and
loopne
xor
inc
mov
in
arpl
push
push
rorb
fistpl
push
and
mov
push
pop
sbb
enter
sbb
sbb
mov
or
add
pusha
sbb
lds
aaa
sarb
bound
bnd
sub
andb
sub
dec
sub
shl
push
push
pop
clc
mov
mov
xchg
pop
push
sbb
mov
rcrl
fnop
adc
mov
mov
xor
outsb
lods
jne
aaa
mov
push
mov
adc
push
mov
repnz
add
aaa
insb
and
xchg
jnp
push
inc
arpl
psadbw
movb
jmp
cmpsb
mov
or
inc
lods
mov
jmp
out
js
jne
sub
mov
dec
mov
aad
mov
adc
idivl
int3
lock
push
movsb
pop
icebp
inc
int
push
arpl
sbb
or
pop
sti
mov
sti
sahf
mov
jecxz
or
in
test
fisubl
sbb
out
push
ds
xor
xchg
aas
pop
les
fcomps
jg
sbb
push
cltd
outsb
test
cmp
sub
or
sub
sti
inc
mov
or
mov
mov
push
loop
rcrl
mov
mov
pop
or
test
sbb
push
pop
fstps
xchg
jne
mov
outsl
push
add
mov
pop
xchg
aam
pop
scas
repnz
inc
hlt
sub
out
and
stc
sbb
rclb
pop
push
mov
or
push
rolb
jae
ficoml
divb
cmp
subl
data16
mov
mov
dec
mov
xchg
push
sbb
sbb
sub
sbb
mov
sub
push
gs
data16
ret
add
call
jg
aam
pop
mov
push
pop
negb
test
fucomi
adc
addl
mov
sub
mov
sbb
rcrl
sbb
ja
fst
cs
and
xor
leave
ja
and
mov
add
and
pop
ljmp
add
add
add
movsl
pop
pop
mov
cmp
pop
jne
mov
push
push
xor
and
data16
or
sbb
decl
je
jbe
xor
cmp
rcr
push
mov
addr16
sub
jb
pop
adc
dec
mov
fidivs
adc
cld
out
inc
mov
fstpt
sbb
mov
rolb
ja
xlat
vprotw
sar
sti
mov
push
sbb
push
sub
sub
lret
mov
lods
mov
fdivs
jle
and
mov
incb
ret
cli
je
or
sub
shl
mov
xor
mov
clc
mov
fidivrs
test
in
xor
inc
push
aaa
pop
sar
and
lcall
insb
adc
adc
rol
in
pop
add
or
sbb
mov
test
fs
cwtl
sbb
cmp
fs
sbb
and
add
or
pushl
pop
push
and
aas
add
test
lret
dec
shr
rcrb
mov
mov
xlat
cmp
mov
push
xor
fmuls
sub
mov
push
push
test
cmp
push
loope
gs
sub
mov
leave
xchg
pusha
outsl
inc
sub
mov
in
or
add
sbb
sbb
add
loopne
out
incl
lds
cmp
je
cmp
test
push
cmp
cltd
js
push
xor
push
fisubs
add
adc
xor
xchg
ret
xor
lcall
jnp
fs
call
les
xor
popa
mov
cmp
push
push
pop
xor
int
xlat
clts
cmp
jg
adc
loopne
push
cmp
and
sti
or
mov
push
outsb
jmp
mov
cmp
pop
jae
fistl
jb
pop
pop
or
jmp
ficoms
mov
test
pop
rorl
jmp
rcr
mov
xor
cmp
jne
sbb
mov
cld
add
add
push
pop
std
test
push
mov
daa
mov
fimull
sbb
cmp
mov
cwtl
nop
xor
sbb
je
push
jle
adc
add
jmp
mov
out
in
pop
jne
push
push
adc
jmp
idivb
push
pusha
cmp
pop
jae
push
leave
mull
pushf
pop
pop
je
push
or
fisubrs
adc
loop
mov
imul
je
mov
lock
incl
sub
inc
adc
jne
cwtl
mov
int3
adc
test
lea
insl
test
cmp
jb
ds
ss
fists
out
ds
cmp
je
push
sub
stc
ds
jmp
jmp
mov
mov
or
in
mov
push
popa
insb
adc
xor
jmp
out
xchg
mov
or
xchg
data16
lock
repnz
jnp
inc
or
add
and
mulb
push
add
stc
cld
jle
aad
push
add
sbb
out
repnz
add
jo
cld
mov
or
and
add
call
mov
arpl
inc
idivl
sbb
adc
in
inc
cmp
mov
std
ja
icebp
jae
add
add
test
push
rclb
adc
mov
std
fadds
cmp
out
int3
aas
outsb
addr16
mov
inc
xchg
insl
push
cmp
and
fucom
and
mov
cld
or
add
es
add
inc
cmp
add
jne
arpl
pop
push
add
sbb
mov
test
jbe
or
cmp
clc
outsb
aas
nop
dec
inc
xor
push
das
and
test
xchg
add
js
cld
jle
xor
pop
in
pushl
adc
push
or
mov
jmp
push
iret
inc
mov
cmp
not
mov
xchg
std
in
and
lea
cmp
mov
push
or
inc
pop
mov
loopne
sub
jp
and
xor
jbe
jne
mov
push
mov
lock
push
xchg
push
xchg
out
mov
inc
mov
cmp
dec
push
jo
stos
sub
cmp
push
aam
inc
mov
imul
and
cmp
jb
mov
neg
imul
ret
jae
sbb
rcr
jle
adc
loope
mov
test
xorl
jmp
sub
jne
pusha
imul
adc
fidivrs
dec
pusha
adc
or
dec
add
std
in
stc
or
cld
jne
inc
mov
cmp
mov
inc
dec
stc
cmp
jge
imul
push
pop
push
iret
enter
cmp
push
cmp
add
aaa
nop
cmp
jl
pop
add
insl
cmp
or
inc
orl
jle
fdivrl
dec
cmp
lahf
test
cmp
lea
stc
cmp
push
cmp
jns
mov
jbe
mov
clc
outsb
xchg
out
mov
pop
in
adc
inc
clc
cmovbe
enter
leave
ret
xor
cmp
jp
mov
xlat
mov
pop
cmp
push
push
cmp
ja
test
cs
pop
mov
fnstcw
imul
sete
scas
pop
stc
movzbl
test
testl
inc
xor
pop
lods
movsl
xchg
push
cmp
pop
gs
cmp
add
inc
jmp
mov
cmp
jne
push
inc
lret
mov
cmp
pop
jno
ror
test
mov
inc
push
jmp
xor
mov
jle
pop
push
sub
je
push
ret
js
rclb
cmpsb
push
add
mov
add
cmp
jne
decl
mov
mov
movl
pop
mov
mov
scas
or
adc
sarb
mov
push
jno
push
or
add
je
or
cs
or
cld
pop
clc
pop
push
cld
mov
rolb
sbb
pop
test
dec
call
ss
push
dec
ret
push
inc
dec
adc
clc
out
push
outsl
or
jl
incl
mov
test
pop
jo
xor
test
add
dec
add
inc
xor
xlat
aad
inc
insb
mov
xorl
cmp
push
xchg
repz
jmp
sbb
loopne
out
add
mov
divl
pusha
push
inc
inc
and
lods
push
into
aam
imulb
hlt
rorb
inc
lock
sub
cmc
adc
mov
fnstsw
leave
jne
lret
std
je
mov
or
je
sub
mov
je,pn
in
sub
fs
pop
fdivrl
out
add
sbb
push
mov
fdiv
sbb
xor
adc
leave
scas
in
lods
shrb
movsl
sub
sub
sub
js
jno
mov
mov
xchg
push
cwtl
mov
in
xor
in
pop
cmp
shrb
add
cld
lea
push
xor
lea
jp
cmp
mov
idiv
aas
jae
jle
adc
jae
pushf
inc
mov
add
jb
jo
sub
subl
mov
push
push
inc
adc
push
cs
mov
outsl
lods
out
cmp
add
mov
jbe
xchg
pop
nop
mov
pusha
pusha
out
das
pusha
test
or
add
sub
ds
or
and
jb
js
mov
mov
imul
push
bound
mov
or
cmp
xchg
lea
lds
sbb
push
repnz
pop
sub
sub
push
sar
inc
and
shll
aam
sarb
jmp
push
adcl
into
adc
and
in
xor
and
pop
mov
pop
mov
fstpl
call
jmp
cmp
pop
cmp
adc
xchg
popa
jecxz
xchg
jge
mov
jge
inc
cmp
idivb
imul
orl
or
mov
xchg
les
mov
sahf
test
xor
call
sbb
inc
pop
jae
inc
xlat
pop
loop
push
push
push
pop
sbb
adc
iret
jge
jg
imul
insb
lea
addl
sub
add
and
add
or
cmp
inc
ret
sti
insl
mov
xor
int3
cmp
jge
mov
inc
rcrb
sbb
mov
lea
hlt
mov
jnp
xor
add
lea
push
inc
loopne
fs
fisttpl
and
sti
add
mov
xchg
inc
cmc
btc
cmp
xchg
adc
cmp
jb
mov
aas
jl
jmp
or
shrb
jle
pop
jae
lods
fsubp
lods
insl
add
aaa
ret
je
mov
test
xchg
test
jne
push
sub
std
fildll
cmp
sbb
clc
add
out
add
div
pop
sub
xor
popf
push
mov
jle
out
leave
bound
jp
sub
fnstsw
add
loopne
xchg
mov
repz
xor
xor
mov
cmp
orb
jmp
push
push
dec
orl
rorl
fcmovnu
faddp
dec
neg
sbb
inc
leave
jbe
insl
mov
das
inc
imul
in
lock
ds
inc
jmp
or
lcall
xchg
je
xchg
pop
call
movl
jl
xor
inc
lock
fs
mov
xchg
insl
push
fimuls
add
mov
lods
xchg
mov
jnp
mov
mov
mov
mov
iret
lea
push
push
push
clc
lock
push
push
cld
xor
push
add
pop
add
push
lods
mov
add
push
jle
filds
lea
jbe
xchg
insb
rclb
cmpsb
mov
push
sbb
sub
fdivs
jmp
fdivrp
ja
loope
fistps
push
fildl
mul
mov
push
nop
jle
push
sbb
nop
imul
sbb
sbbb
mov
push
lcall
cmp
sub
or
xlat
dec
cmp
fldcw
add
pop
jbe
add
andl
lods
adc
sbb
xchg
pusha
cli
adc
dec
mul
pusha
je
xchg
push
push
sub
divl
lcall
xchg
push
inc
fcomps
mov
xchg
lahf
adc
addb
clc
mov
dec
xor
enter
mov
inc
mov
inc
mov
pushl
sbb
sub
xchg
cvtdq2ps
cltd
cld
xor
inc
push
dec
mov
jne
add
js
push
mov
jl
in
cld
mov
sbb
mov
xchg
add
or
pop
xor
mov
mov
adc
stc
push
mov
push
mov
das
adc
push
sub
mov
sarl
dec
or
ljmp
pusha
test
jmp
cmp
adc
push
xchg
xchg
sbb
shl
es
out
add
enter
test
xor
dec
enter
dec
pop
cmp
pushf
adc
dec
jle
ret
or
mov
jp
and
push
adc
adc
pop
ss
sub
sbb
lea
mov
movsl
cmpl
inc
das
push
adc
or
cmp
sahf
repnz
mov
and
fildll
inc
je
lods
pop
ja
adc
les
sti
enter
pop
or
pusha
movsb
inc
mov
and
cmp
je
xchg
mov
inc
pusha
loopne
or
dec
sbb
and
push
inc
mov
pop
outsb
pop
or
test
mov
xchg
int3
int3
jge
add
mov
mov
and
or
mov
popf
add
push
dec
mov
js
push
shll
push
sbb
mov
mov
sbbl
and
pusha
or
pop
addr16
pop
add
shll
cld
mov
and
pop
leave
ja
jecxz
cmp
adc
in
pop
fs
push
jb
insl
or
pop
add
lcall
aam
jbe
mov
insb
push
mov
jecxz
fcmovb
pop
cmpsb
push
daa
pop
xor
xor
adc
addl
lret
int3
fcmovnbe
ret
frstor
mov
out
push
jmp
lea
loopne
add
adc
xchg
lds
decl
pushf
popa
imul
lock
inc
dec
fdivrl
clc
fisttpll
mov
mov
pop
push
pop
fcoms
dec
lds
pop
adc
and
clc
fimull
push
jecxz
or
insl
outsl
insb
adc
movl
or
push
add
xor
cmp
mov
inc
jnp
fwait
sub
movsl
xchg
fcmovu
cmpsw
pop
cmp
xor
shrb
xor
lea
out
add
mov
mov
je
lea
dec
xchg
loope
mov
pop
xchg
sbb
mov
mov
add
adc
sbb
jne
cmpb
je
lds
mov
mov
sub
dec
scas
sbb
fcomps
cmp
sub
je
stos
sub
mov
fdivs
xchg
adc
xor
out
mov
push
push
aad
enter
ficomps
dec
or
push
jge
cmp
out
jno
jnp
cmp
push
lret
mov
push
push
and
xchg
adc
pop
das
and
adc
push
push
mov
decb
push
or
not
mov
and
xlat
clc
jne
mov
dec
jp
lret
or
lock
sub
cwtl
sub
xor
fcmovu
mov
ja
jmp
test
loopne
or
mov
not
pop
jl
nop
lods
mov
int3
insl
lds
inc
js
pushf
lcall
lret
mov
fdivs
adc
cmc
cmpsb
cmp
shll
cli
sub
mov
push
test
mov
jmp
mov
idiv
and
shlb
andl
ret
ss
icebp
push
mov
adc
push
fcmovb
rcll
test
sbb
dec
shl
andl
mov
or
jl
sub
je
stc
sbb
sub
push
pop
out
outsl
shrb
lds
and
insb
inc
sub
cmpsl
pop
cld
sbb
mov
sbb
inc
inc
jge
push
push
add
loopne
lea
cmp
mov
jmp
push
push
fdivrs
sbbl
mov
int3
fcompl
nop
push
das
jne
or
push
and
push
add
pop
ret
push
fadds
push
xor
pop
sbb
jmp
push
mov
push
xor
xlat
fistps
xor
sub
arpl
push
sub
dec
test
pop
subb
xchg
repnz
inc
mov
fistl
and
std
pop
sub
push
mov
movsb
testl
std
mov
xchg
jl
js
outsb
out
pop
and
xchg
mov
pop
jo
mov
insb
gs
test
fnsave
add
ljmp
fadds
bound
push
pop
mov
jle
jle
inc
andb
mov
mov
rcr
inc
cs
mov
shlb
aam
mov
inc
icebp
xor
sarb
inc
or
add
pop
push
sbb
xor
pop
lods
cld
loopne
out
add
xchg
enter
mov
pop
jmp
inc
pop
jmp
sbb
xor
cmp
cmp
insb
icebp
notb
lea
pop
adc
adc
add
sub
vpclmulqdq
pop
enter
loopne
ret
fisttps
push
and
ret
adc
mov
add
mov
sub
inc
lea
xorb
sub
lea
jle
lods
cmp
add
js
inc
ss
lods
push
lock
or
mov
sbb
add
adc
adc
pop
stos
or
and
lea
push
inc
xchg
hlt
jg
je
sar
push
lea
scas
xor
pushl
mov
sbb
mov
push
or
add
jae
or
and
daa
sbb
push
in
xchg
fists
adc
jge
call
jns
cmpsb
jle
outsl
pop
mov
sbb
sub
in
pop
push
lock
insl
add
cmc
lea
inc
xor
mov
mov
inc
push
jb
ss
add
les
je
or
je
mov
add
fmuls
xadd
sbb
xor
shll
icebp
in
test
movzwl
push
outsl
mov
mov
jno
rcl
push
or
jbe
jge
loopne
mov
cmp
jb
xchg
jb
sahf
rcrb
jb
pop
pop
jns
lcall
mull
popa
mov
aad
shlb
push
or
repz
scas
push
int
mov
testb
sbb
or
and
call
add
bound
add
ret
xor
inc
add
add
cmp
push
adc
mov
mov
xchg
aam
jg
fcomp
sbb
push
cmp
dec
movl
or
ljmp
push
jmp
add
shll
sbb
push
aam
inc
cs
and
in
bound
xor
pop
je
mov
pop
sub
je
add
fs
popf
aad
inc
mov
sub
adc
jnp
ja
or
out
add
pushl
mov
fcomps
and
mov
ljmp
sub
je
dec
je
dec
stos
xchg
push
pushw
mov
aas
mov
scas
dec
aam
jmp
or
shr
or
lock
fsubrs
in
mov
xlat
loopne
inc
pop
sub
xchg
sub
dec
lods
pop
addl
aad
push
fbld
add
mov
aam
inc
pusha
jnp
fnstenv
jne
or
fs
insl
mov
cs
adc
or
mov
adc
adc
les
test
test
pop
inc
adc
push
das
mov
jmp
xor
outsb
pop
clc
pop
sbb
inc
pop
push
fs
call
jmp
dec
cmc
inc
sbb
in
add
test
sbb
in
mov
push
or
bound
or
or
cmp
and
ret
jg
and
ret
adc
loopne
cwtl
insb
sbb
lock
xchg
movsl
jae
add
adc
add
pop
add
inc
clc
and
inc
outsl
adc
fdivs
push
into
cli
fstps
cmp
or
ret
push
out
add
and
jecxz
mov
out
cmpl
rcrl
in
pop
xchg
cmp
hlt
add
sbb
in
hlt
inc
jg
add
fistl
adc
and
mov
gs
jnp
clc
jns
add
mov
imul
js
rclb
jns
lcall
cmp
adc
insl
vpsrlw
push
push
mov
sbb
xor
adc
cld
or
pusha
mov
xchg
add
fnstcw
pop
wbinvd
xor
add
push
xlat
mov
add
or
notb
outsl
test
jns
or
or
andl
jbe
sub
je
iret
je
mov
cs
add
sbb
xlat
jp
testb
mov
xchg
dec
subb
xchg
movsl
mov
adc
and
cmp
xor
je
insl
push
es
push
je
mov
popa
leave
adc
adc
xchg
leave
inc
jo
mov
pop
adc
rorl
xor
and
sbb
rol
out
imul
jne
sarb
ja
sub
pop
pop
or
cmp
dec
sbb
jmp
mov
cmp
add
inc
dec
jg
out
mov
mov
inc
inc
cmp
mov
rcl
imul
inc
fcomps
and
sub
sub
daa
pop
adc
and
dec
adc
jne
push
jbe
sub
scas
or
mov
cmp
cmp
push
inc
rorl
std
fiaddl
sbb
or
fs
push
or
scas
imul
decl
out
cmp
popf
mov
lea
xchg
jne
pop
push
lcall
test
dec
mov
or
test
add
sub
lock
dec
adc
pop
push
lea
jno
jle
add
stos
mov
je
mov
cmp
test
add
mov
test
insb
movsl
out
outsl
mov
jmp
lea
sub
xchg
std
cld
push
and
and
mov
push
int
sarl
or
call
fldl
jle
add
inc
rclb
xor
hlt
call
xor
xor
dec
addl
push
push
movb
arpl
jp
testb
push
add
mov
push
cmp
adcl
pop
nop
test
push
mov
xchg
or
cmp
push
orb
mov
ja
outsb
or
inc
add
testb
pop
fstl
jne
adc
or
xor
pop
stos
popa
test
xchg
sbb
xchg
mov
push
movzbl
loopne
mov
adc
push
dec
jne
pop
jno
push
jl
mov
sub
inc
adc
scas
scas
ljmp
popa
jo
xlat
bound
push
add
add
aam
ret
sub
push
mov
outsb
repnz
or
je
dec
je
add
add
adc
or
div
xchg
lock
lret
pop
sbb
push
mov
mov
add
or
lea
stos
decl
pop
sub
mov
mov
inc
or
testl
cmp
fiaddl
adc
add
sbb
cwtl
jo
push
xorb
lods
enter
ffree
bound
test
jecxz
push
outsb
jb
inc
mov
mov
pop
mov
add
fiadds
push
ja
lods
xchg
or
sub
inc
mov
inc
insl
sbb
or
cwtl
fs
insl
xchg
xorb
stos
xchg
jne
fcoml
adc
xor
divb
testl
jae
push
fwait
das
and
mov
pushf
dec
arpl
sahf
mov
pushl
dec
push
sbb
push
jmp
adc
je
and
inc
insl
ja
mov
cs
in
or
shr
lea
jmp
sub
inc
orb
lods
mov
lea
add
leave
pop
push
outsb
sahf
in
add
jmp
cmp
push
and
and
sbb
inc
cmp
jb
mov
cld
pop
xor
pop
dec
pushf
push
xor
fnstcw
or
add
mov
rolb
cmpl
pop
mov
push
and
icebp
fstl
jecxz
mov
cmp
call
out
in
push
outsl
fs
mov
sub
sub
loope
mov
add
adc
jne
push
push
subl
or
movl
int
inc
incl
pusha
cmp
cmp
std
mov
sub
fistl
cld
dec
lock
das
xor
jmp
cmp
mov
xor
pop
lods
out
xor
push
fiaddl
or
push
movsl
ljmp
stos
push
mov
pop
and
inc
mov
out
sub
aam
mov
fbld
ficoms
cmp
adcl
or
add
mov
cmp
cmp
pop
dec
adc
adc
jne
sub
add
inc
sbb
jb
in
fsubrs
sub
cmp
jnp
mov
das
mov
jbe
push
iret
fisttpl
out
test
pop
ret
mov
add
mov
bound
repz
mov
in
in
xorl
mov
mov
inc
cmp
xor
sbb
cmpb
jmp
loopne
sbbb
lock
clc
out
inc
cmp
clc
jbe
incl
adcb
mov
mov
add
jb
mov
xchg
movl
pop
and
push
mov
ja
lea
sbb
pop
mov
inc
data16
inc
inc
dec
fimuls
mull
mov
add
div
out
in
pop
jle
mov
push
mov
mov
jne
mov
push
push
mov
jg
push
sbb
add
mov
mov
xor
xlat
aaa
jb
cld
mov
notb
test
mov
je
add
cli
ret
and
mov
in
in
inc
add
cmc
or
addr16
aad
xor
xor
mov
mov
fwait
add
and
shlb
fs
mov
cld
pop
movsl
xchg
mov
jne
sbb
adc
jecxz
cs
push
pop
push
imul
ss
dec
fnsave
jmp
iret
idiv
sbb
or
or
inc
orl
clc
add
test
dec
pop
or
push
adc
call
popa
cmp
dec
sbb
sbb
mov
add
pop
jle
xchg
loopne
pop
movsb
adc
jle
sub
jmp
mov
jmp
aas
jne
cmp
and
fnstenv
push
mov
testb
mov
sub
inc
aam
jne
sub
inc
cmp
inc
jmp
mov
adc
push
scas
xor
push
in
int
mov
sub
jne
lods
xchg
lods
dec
adc
repnz
test
mov
jmp
sahf
push
sbb
xor
mov
daa
cmp
jbe
aad
jne
rcr
call
aaa
andl
or
and
xor
lahf
adc
inc
add
adc
in
popf
incl
and
rcrl
mov
mov
and
dec
mov
xorps
pop
mov
push
adc
rol
jbe
xlat
xchg
or
jb
jb
jnp
fdivl
sbb
sub
dec
rorl
mov
and
pop
push
add
call
adc
loop
fdivs
sub
jmp
outsb
mov
test
popf
loopne
sub
call
iret
ss
pop
push
and
fucomi
cli
push
xchg
mov
add
fstps
pop
int3
sub
sahf
lea
sub
leave
jae
add
add
inc
add
dec
xlat
add
cwtl
shll
dec
nop
mov
inc
in
call
in
in
lock
hlt
fimull
xor
clc
cld
cld
lea
pop
sbb
mov
sub
cmpsb
jnp
add
out
sub
inc
test
adc
adc
fildl
je
addr16
cld
test
mov
or
or
jo,pn
fcoml
cs
imul
mul
in
sub
push
fcomps
test
insl
add
outsl
repnz
or
add
pop
out
add
fwait
and
out
sub
mov
fisubs
sub
rol
jne
mov
push
dec
shll
cmp
dec
dec
rcl
xor
addr16
sbb
sbb
adc
adc
xor
rorl
or
add
ja
dec
add
add
xchg
shlb
lods
mov
or
add
ja
adc
scas
push
stos
mov
ret
mov
cmp
jne
or
push
mov
or
call
add
adc
out
adc
sub
sbb
mov
shl
jne
inc
mov
sbb
push
iret
adc
add
sbb
mov
rcrb
and
mov
xchg
in
cmp
push
je
cmp
mov
jle
xor
cmp
jne
or
cmp
adc
pushl
xchg
dec
jae
and
or
cmp
cmc
int
pushf
cmp
inc
inc
or
mov
hlt
inc
adc
fldenv
test
shrl
adc
or
dec
shr
mov
dec
jge
cmp
in
pop
mov
pushl
jae
shll
pop
cmpl
sub
jecxz
push
enter
cld
je
add
xor
dec
leave
xlat
arpl
adcl
push
leave
mov
or
fwait
push
or
xchg
sbb
xorl
cmpl
jnp
int3
les
fimull
stc
movnti
dec
jae
imul
adc
sbbl
mov
and
lret
aaa
and
testl
ss
sbb
pop
sbb
mov
imul
das
daa
add
inc
and
lods
sahf
push
jo
mov
cld
lea
mov
je
adcb
rol
dec
jmp
adc
ret
ret
push
loopne
shlb
scas
cmc
fldl
push
xchg
outsl
sbb
pop
test
lods
out
xlat
or
xchg
pop
adc
sub
dec
mov
push
pop
adc
inc
push
jne
sub
cmp
fiaddl
ljmp
dec
leave
inc
adc
sub
ljmp
out
jnp
lea
inc
enter
imul
dec
push
or
sbb
sbb
sarl
adc
add
fs
ret
je
cli
add
sbb
mov
push
mov
mov
mov
inc
mov
inc
jae
mov
shr
lea
out
incl
shll
pop
mov
and
lea
sbb
jp
rcrl
cmpsb
push
stos
mov
cmpsb
pop
or
dec
push
mov
push
add
ret
xchg
sub
frstor
mov
stos
movsl
jne
adc
mov
outsl
add
mov
dec
pop
cmp
jbe
fiadds
ja
fprem
xor
cmp
addr16
pusha
push
jno
jno
cmp
mov
pop
mov
shr
not
and
add
and
jmp
lea
pop
mov
sbb
mov
push
imul
scas
dec
fisttpl
lods
or
jb
or
xor
fiaddl
jge
inc
outsl
int3
fistps
int3
push
sub
mov
je
add
mov
lock
adc
dec
paddd
inc
mov
adc
cmpb
push
dec
push
insl
test
scas
xor
pop
inc
cmpsl
add
sbb
sub
push
and
arpl
mov
or
mov
pop
test
cld
pop
push
mov
repz
insb
dec
ret
sub
xchg
sbb
shl
add
int
mov
push
mov
pop
xor
in
mov
or
push
mov
sbb
movsb
mov
ds
add
dec
adc
call
add
adc
push
mov
or
pop
adc
adc
dec
movb
xchg
mov
in
aaa
cmp
in
push
lea
lcall
les
rorb
sub
jbe
insl
or
mov
and
sbb
sbb
mov
inc
cmp
xchg
mov
xor
mov
xchg
cmp
jne
jmp
adcl
mov
add
sahf
xor
and
inc
and
jmp
es
dec
and
xchg
push
sbb
lods
rolb
in
fisttpl
orl
ds
ljmp
adc
cmp
inc
shll
ret
lea
cmp
rcrb
stos
inc
dec
stc
mov
imul
insb
mov
pop
mov
add
dec
jne
orb
mov
jns
push
aas
push
dec
aaa
xchg
lea
out
fimull
js
ja
sbb
sub
inc
adc
dec
lods
orl
ljmp
out
faddp
inc
cld
lock
sti
fdivrl
push
add
sub
or
addr16
jne
push
pop
fcoml
data16
add
sbb
mov
inc
mov
dec
push
mov
sahf
sub
testb
mov
jne
or
pusha
nop
ljmp
sbb
leave
imul
xchg
or
or
push
and
jp
sub
pop
shr
pop
jge
pop
mov
cld
cmp
dec
cmp
lods
mov
adc
xchg
jle
push
aam
sbb
inc
out
fnop
roll
out
cmp
jbe
sahf
dec
push
inc
xor
nop
xchg
lods
scas
cmp
fistpl
cmp
fs
sbb
faddl
nop
sbb
xchg
es
sbb
sbb
dec
or
or
push
mov
jg
jns
nop
sub
add
mov
mov
or
std
pop
dec
sar
dec
cmp
inc
lea
ljmp
pop
pop
imul
dec
inc
pop
sub
mov
dec
pop
pop
push
pop
mov
dec
rcll
incl
sbb
mov
sbb
iret
cmp
and
jp
cmp
mov
mov
adc
xor
jae
cld
fistl
pop
in
mov
jo
clc
cmp
ret
jg
cmp
cmp
lea
inc
sbb
mov
sub
and
pop
xor
test
cmp
add
cmp
cmp
rcrb
mov
add
cmp
adc
sbb
dec
loopne
ss
into
je
outsl
push
or
insb
mov
js
push
ja
ja
dec
inc
je
imul
xchg
add
mov
add
dec
add
xor
repz
paddd
in
stc
mov
into
mov
popf
addr16
setns
adc
adc
inc
les
and
cld
pop
fisubrs
dec
xor
pop
xchg
pop
and
lcall
dec
xchg
jge
or
shr
cmp
or
je
lret
push
mov
arpl
fldpi
imul
or
cli
decb
xlat
jne
inc
push
fdivrs
sbb
out
push
jne
mov
in
movsl
lahf
fnstenv
jmp
jnp
add
subb
rcrb
xor
and
mov
adc
mov
sarb
mov
mov
outsb
fstpl
mov
cli
ljmp
test
insb
clc
mov
mov
dec
iret
push
dec
js
jne
mov
dec
pop
cmp
dec
add
cmpsl
stc
push
xchg
mov
cmpsb
jmp
imul
dec
inc
pusha
and
pusha
and
sub
loop
xor
leave
inc
test
and
or
jp
ret
call
jle
jecxz
dec
xor
setne
imul
cmp
out
es
insb
sar
jno
in
and
mov
xchg
pcmpeqw
in
repnz
push
mov
shr
sub
mov
scas
and
jne
and
lret
or
and
addr16
ficompl
gs
dec
jp
pop
xchg
daa
xchg
and
push
add
or
and
and
add
fiaddl
dec
xor
or
mov
gs
and
mov
mov
out
or
pop
jp
jb
sbb
adc
popf
faddp
or
add
aad
xor
add
aam
xor
jne
cmp
popa
outsb
dec
cmp
mov
leave
lds
lea
jg
mov
loop
jne
repz
sbb
inc
and
mov
push
sti
sbb
push
in
push
cld
sbb
les
mov
loop
mov
xor
cmp
je
inc
xor
or
cli
or
bnd
lea
jae
push
mov
sbb
aas
int3
fst
int
push
or
jmp
fs
insl
icebp
stos
mov
sbb
dec
add
or
lahf
push
ret
pop
sub
sub
movsb
or
enter
sbb
add
jl
adc
push
lcall
dec
dec
mov
out
adc
pushl
add
sub
push
cmpsb
outsb
cmpsb
test
push
mov
sbb
out
rcrl
pop
mov
mov
ljmp
int
sbb
sub
outsb
xor
adcb
mov
adc
in
add
and
xchg
in
frstor
mov
icebp
addb
cmpsb
and
add
cltd
sub
jle
mov
or
and
push
adc
jg
call
leave
jmp
adc
inc
ljmp
andb
push
js
dec
ja
or
test
dec
mov
xchg
push
cmp
fdivs
add
stc
aaa
add
xor
mov
popa
add
pop
cs
add
mov
ds
inc
xor
stc
push
adc
fistpll
into
pop
ja
test
stos
pop
or
ljmp
fisubrs
sub
jns
push
jne
mov
setne
aas
sbb
pop
in
sbb
sbb
jmp
data16
sbb
cmpb
adc
pusha
leave
push
cmp
add
inc
shlb
clc
rorb
lock
and
inc
mov
add
bound
lds
outsl
xchg
cmpl
xchg
xor
adc
call
xchg
push
cs
mov
pop
fs
sbb
clc
inc
pusha
and
fs
or
push
add
push
push
jb
and
add
dec
cmp
sub
cmp
cmp
fldt
jo
sub
dec
cmp
adc
mov
das
cmp
stos
rorb
inc
and
push
and
clc
jne
push
and
cwtl
dec
xor
mov
outsb
jge
stos
push
sbb
mov
das
dec
subl
push
push
mov
negl
aaa
mov
or
test
cmp
mov
sbb
inc
dec
push
push
aaa
or
inc
popa
xor
dec
outsl
hlt
jg
subb
insb
hlt
push
cmp
mov
hlt
je
mov
or
xchg
and
les
xchg
dec
icebp
fucomi
cmpsl
int
and
xor
inc
or
je
dec
sbb
mov
sub
dec
or
mov
sbb
sbb
stos
inc
and
and
jae
jle
mov
cmp
leave
push
hlt
cmp
je
movl
fsubr
sbb
sbb
sub
push
arpl
dec
ret
mov
data16
jmp
mov
push
pop
jae
or
jae
pop
cmp
fcmovne
add
mov
test
bound
sub
test
shll
and
cmp
add
ffree
mov
movsl
sbb
push
or
lcall
aam
sti
xchg
ret
push
push
sbb
inc
or
in
cmpsl
imulb
cmp
in
adc
repnz
cld
cmp
je
movl
int
ljmp
mov
mov
test
dec
rorb
fdiv
jno
xor
jmp
sbb
adc
pop
inc
pop
push
and
in
mov
jge
adc
lock
ficomps
mulb
ds
xor
pop
jae
add
das
dec
mov
mov
orl
sbb
xchg
adc
loopne
inc
xor
popa
lret
flds
sub
call
and
jecxz
inc
cmp
adc
imul
add
aaa
repnz
add
xchg
cmpsl
mov
push
pop
mov
repnz
leave
iret
add
add
add
repnz
xor
sbb
adc
sbb
adc
jg
xor
mov
lock
or
inc
adc
popa
push
fldl
dec
mov
leave
push
ljmp
jmp
or
dec
mov
int3
int3
leave
ficompl
inc
ret
das
sub
rcrl
adc
push
pop
sbb
fsubl
sbb
sub
notb
sbb
cli
push
movl
mull
and
or
ljmp
in
out
orb
cmp
push
ja
jecxz
or
and
jbe
inc
and
xchg
leave
andb
cmp
std
loopne
xchg
mov
xor
mov
jb
xchg
inc
sub
push
xchg
iret
cmp
sub
jmp
push
insl
in
pop
push
pop
or
add
mov
jne
xchg
addl
mov
push
push
call
rcll
cmpb
pop
je
xor
push
fiaddl
push
and
clts
inc
arpl
pop
jb
jo
test
rolb
iret
inc
imul
rol
or
xchg
jne
xor
pop
or
imul
icebp
mov
stos
ss
push
and
inc
test
mov
dec
in
push
add
aaa
in
sbb
xchg
mov
inc
outsl
leave
clc
roll
or
adc
push
ja
test
imul
dec
cmp
or
out
clc
sub
inc
bound
mov
sub
test
sbb
sbbb
and
cmp
jmp
shr
sub
pop
fs
inc
cmp
dec
testl
sarl
leave
mov
or
mov
loopne
sahf
fwait
add
pushf
mov
divb
xchg
gs
and
shlb
cld
dec
addr16
mov
and
fucomp
pop
dec
dec
push
xchg
shll
imul
push
jp
rorb
andl
push
and
cli
stos
loopne
jl
adc
dec
dec
dec
adc
mull
lret
xor
add
xor
mov
jbe
jns
adc
or
push
shrb
int3
jl
aam
pop
cmp
gs
stos
jmp
mov
jmp
push
add
or
or
mov
enter
pop
pop
roll
fcmovnbe
mov
adc
pop
call
sbb
and
cmp
mov
push
add
add
and
fwait
int
mov
adc
jg
outsl
data16
insl
ss
jbe
jle
sbb
jge
int
jg
jg
jg
jo
mov
lea
dec
jne
mov
adc
xor
movsb
xchg
fwait
cmpsb
inc
sbb
test
imul
movsl
mov
jae
clts
cltd
imul
adc
sub
dec
push
mov
roll
or
pop
push
icebp
je
into
cmp
ja
and
and
push
pushl
incl
rcrl
push
in
add
sub
loope
in
stos
xchg
fldt
sub
jne
xor
in
ror
insl
mov
adc
mov
push
push
popa
lods
scas
pop
adc
ss
pop
repz
mov
loop
lock
stos
loopne
negl
mov
stos
stos
mov
adcl
jg
or
push
or
adc
push
cmp
sbb
push
and
push
sbb
sub
sbb
xor
cmp
dec
add
cmp
inc
adc
nop
roll
pop
dec
dec
mov
push
sbb
pop
addb
fs
pusha
fs
sbb
insb
jo
xchg
fs
inc
js
jb
push
mov
or
and
xchg
and
pushf
mov
movsb
test
sub
inc
mov
out
test
mov
mov
adc
mov
pop
xchg
and
aas
jle
or
and
xor
jo
add
xor
sbb
xor
and
jl
xor
and
andb
sub
dec
push
sbb
test
add
mov
loop
push
ret
add
jmp
xor
mov
bnd
sbb
mov
imul
dec
testb
mov
dec
or
lea
dec
cmp
lods
pusha
das
push
add
bnd
push
sbb
push
cwtl
nop
pusha
add
add
leave
add
add
xlat
lds
inc
jae
add
loopne
dec
shll
ror
sarb
gs
shll
hlt
add
cmp
cmp
pop
das
push
mov
push
and
and
pop
inc
xlat
add
or
das
push
push
enter
push
mov
pop
push
push
add
add
jl
xchg
jne
adc
and
roll
mov
adc
int
fnstsw
pop
xchg
push
mov
insb
int
xor
data16
addb
movsl
fnstcw
adc
dec
in
mov
sub
arpl
arpl
pop
add
lea
loop
push
outsb
dec
test
inc
jmp
mov
push
mov
pusha
push
or
testb
add
or
mov
out
or
test
mov
mov
add
xor
test
sbb
add
insb
push
or
or
adc
mov
push
push
push
dec
outsb
push
adc
jo
sbb
pop
xor
call
pop
lret
cs
mov
and
and
sahf
push
pop
popf
sbb
push
push
popa
adc
ret
aad
push
push
push
sbb
pop
cltd
xchg
jg
lea
mov
outsl
jg
je
cmpl
push
cmp
in
sbb
mov
or
jl
sub
sbb
mov
or
mov
fadds
mov
jg
mov
orl
jge
or
push
or
cmp
mov
mov
or
or
inc
cltd
imul
cli
pop
pop
pop
pop
pop
rorl
or
or
inc
outsl
test
in
shr
add
testb
and
inc
call
pusha
jo
push
add
xor
jne
adc
cwtl
cmp
shlb
subb
je
sbb
xchg
out
das
jb
inc
inc
pop
test
cmpsl
inc
add
mov
out
push
clc
dec
rep
mov
cs
pop
lock
stc
push
or
iret
xor
ljmp
stc
cmpsl
push
xchg
aam
stc
jnp
or
push
jno
inc
add
ja
ljmp
pop
jmp
pushf
or
xchg
add
pop
or
mov
cmp
scas
lcall
adc
cwtl
mov
movb
pop
jmp
loope
sub
xor
or
int
dec
icebp
mov
test
pusha
add
cld
push
push
loop
jge
mov
mov
test
inc
hlt
push
lock
pop
pusha
jb
jbe
and
orb
lock
aad
add
or
rcrl
or
cld
adc
pop
pusha
mov
push
push
push
add
or
outsb
lock
mov
mov
enter
xor
mov
push
sbb
pop
in
and
add
data16
xor
sbb
bswap
pop
lock
push
mov
push
mov
add
jge
or
dec
xor
arpl
inc
lcall
movl
mov
fcoms
pop
icebp
aas
lock
inc
cmp
jle
cmp
ss
push
in
je
sub
mov
fdivrl
push
jge
ret
ficomps
adc
or
in
in
add
cmpsb
ss
sbb
push
in
push
or
pusha
mov
int3
lret
mov
push
and
push
push
lock
inc
pusha
das
loopne
pop
dec
aam
pop
jne
shll
and
cmp
fildl
adc
mov
je
and
mov
push
and
pushf
loopne
xchg
or
enter
test
add
sahf
lea
inc
mov
rclb
icebp
and
push
xchg
vpcomud
out
pop
add
cmp
xor
jmp
nop
sub
cmp
inc
or
in
cld
push
xlat
fwait
mov
mov
call
sar
popf
pushf
pop
sub
je
push
popf
mov
sbb
pop
loopne
aas
add
jne
push
xor
pop
testl
pop
icebp
or
adc
loope
aad
inc
jne
pusha
push
jo
pop
push
and
movsb
or
clc
cmp
mov
sbb
js
mov
and
stos
pop
cli
mov
cmp
jb
mov
xchg
dec
mov
ret
sub
add
push
sub
jo
jns
in
ljmp
pop
add
orb
jp
push
adc
cmp
stc
shl
xchg
jnp
mov
adc
add
jl
add
loop
pop
push
push
mov
adc
cs
cmpl
loop
mov
out
or
jmp
xchg
out
pop
push
mov
inc
xor
xor
incl
movl
add
adc
jne
dec
mov
dec
pop
lods
leave
jl
test
and
aaa
sub
in
and
pop
cmp
sahf
out
sbb
cmp
adc
and
adc
lods
loope
adc
jnp,pn
add
jo
out
jne
inc
bound
pop
mov
mov
test
test
aam
inc
mov
sbb
std
aaa
fidivl
sub
cmp
push
ja
lods
dec
add
dec
adc
sbb
adc
jb
dec
mov
and
add
sbb
bound
dec
cli
and
or
mov
pop
xor
mov
pop
adc
mov
add
xchg
arpl
js
jne
test
adc
mov
outsb
xchg
ja
loop
cmp
jbe
popf
negb
dec
sub
push
add
push
pop
push
dec
mov
and
imulb
pop
cmp
and
inc
add
popa
mov
pop
jmp
and
jae
mov
inc
mov
push
testb
shll
jo
fcomps
and
adc
pop
push
outsl
push
js
fisttpll
leave
je
sbb
mov
mov
pop
jle
pop
mov
shll
or
gs
std
mov
es
jb
cmp
ja
add
cmp
inc
push
jge
or
cmp
jne
ret
rcr
sub
or
mov
neg
mov
sbb
push
rclb
das
ret
push
mov
or
mov
mov
xchg
jnp
pop
inc
ret
mull
movb
call
out
shr
inc
or
and
jmp
shll
lods
jne
div
das
and
push
fstp
mul
sub
ja
sub
fstpl
jbe
dec
sub
sbb
adc
fisttpl
or
fisubl
mov
arpl
shlb
mov
pop
fs
lods
jne
mov
add
das
in
addr16
add
pop
ds
lea
rclb
stos
out
xchg
sub
sbb
cmp
push
jae
je
pop
rcll
pop
js
je
test
sub
fistl
cs
fcoms
shl
push
or
add
divl
lret
xchg
stc
orl
aad
call
iret
xor
sub
loope
fldenv
jle
jo
or
stos
jbe
adc
jnp
cld
inc
popa
sbb
ss
mov
data16
lods
fnsave
jmp
sub
loopne
rolb
cld
xchg
xchg
mov
lcall
sbb
sbb
xchg
xchg
xchg
adc
add
in
movb
push
inc
cmp
jl
inc
dec
push
pusha
add
sahf
iret
out
in
or
or
adc
inc
dec
and
cmp
xchg
sbb
addr16
and
or
sbb
frstpm(287
jb
fisttpl
movsl
es
push
repnz
cmovae
inc
js
je
jb
arpl
jae
insl
jae
adc
gs
insb
add
outsb
je
insl
and
sbb
sub
or
push
push
adc
pop
sti
add
add
dec
inc
add
inc
adc
std
push
outsl
jg
xor
xor
inc
outsb
and
jo
imul
push
outsl
or
jae
insl
popa
fs
popa
pop
je
gs
jo
fcmovnbe
je
je
and
pop
push
jmp
bound
jb
and
xchg
cwtl
arpl
or
repnz
fisubrl
sbb
outsb
je
xor
daa
pop
jae
push
sbb
jne
daa
insl
and
insl
aam
or
cmp
lahf
xor
outsb
jmp
jne
dec
fmuls
in
pop
mov
insl
bound
jae
insl
bound
and
dec
and
jbe
fs
imul
cmpb
das
adc
jnp
xchg
cmp
bound
mov
outsl
cmp
and
sub
gs
fidivl
into
lods
ret
outsl
pop
xchg
iret
lock
insb
insb
sub
mov
imul
insb
jb
sahf
sub
outsl
arpl
popa
xchg
outsb
push
sbb
adc
sbb
dec
mov
aaa
jnp
popa
imul
gs
ret
add
push
cs
inc
jo
mov
das
cwtl
sub
pop
xor
gs
push
push
outsl
or
cmp
pop
xorl
ja
lahf
pusha
fs
push
out
out
cmp
popa
bound
orl
test
ss
dec
and
fs
jo
std
jbe
xorb
and
mov
sub
mov
sub
das
pop
push
das
in
fs
fsub
pop
xor
imull
lods
loope
push
xchg
sbb
jo
aaa
nop
push
push
xor
stos
and
or
aaa
insl
jbe
push
dec
mov
insl
mov
xor
mov
cs
repnz
and
mov
push
pop
xchg
adc
mov
aam
out
sbb
inc
ja
test
add
mov
or
adc
movsl
nop
iret
sub
jne
jp
sti
sub
xor
je
leave
mov
mov
add
insl
fwait
icebp
faddp
add
push
mov
adc
sub
pmaxub
daa
or
jo
pushf
imul
fbld
daa
imul
cwtl
jnp
outsb
ja,pt
inc
cmpsb
and
push
cmp
mov
add
mov
enter
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
gs
in
lahf
sbbl
jae
add
push
gs
pushf
jae
nop
mov
or
insb
sbb
out
daa
jmp
or
xor
inc
in
push
jo
pop
faddl
pop
mov
insb
jae
xorl
push
std
and
pop
push
lret
push
je
pop
push
jae
xchg
sarb
inc
dec
mov
in
sbb
inc
pop
jbe
gs
ja
fldcw
inc
push
push
popa
addr16
inc
outsl
js
push
push
call
add
push
pop
or
decl
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
or
sub
mov
ss
cmp
cmp
cmp
cmp
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
pop
outsl
insl
pop
pop
pop
pop
pop
pop
cmp
arpl
data16
imul
jno
test
jbe
add
jp
jl
jle
xchg
nop
dec
cmpsb
insb
and
sub
nop
mov
add
adc
addl
adc
add
and
add
add
insb
fsts
add
enter
add
add
push
fnstenv
repz
lret
adc
and
add
and
or
inc
adc
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
jmp
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
inc
rol
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
jmp
loope
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
ljmp
add
and
push
adc
mov
jg
adc
sub
jg
inc
lahf
add
cmp
jge
int
jno
fs
dec
and
jns
mov
or
das
jns
push
dec
test
adc
add
mov
dec
in
mov
mov
adc
movsl
sbb
aad
cmp
shll
gs
inc
imul
dec
pop
arpl
gs
test
or
je
jnp
mov
push
dec
inc
inc
neg
jnp
aaa
jns
aas
cmp
and
out
popa
fnstenv
sbb
or
pusha
pop
test
push
call
jl
push
jne
dec
cmp
adc
pop
inc
cmp
fistpll
aaa
das
daa
and
add
pushf
add
lds
adc
pop
jnp
cmp
daa
cs
into
cmp
mov
in
cmp
mov
xchg
popf
iret
push
push
pop
orb
ret
lcall
mov
daa
mov
xchg
nop
shlb
xlat
cmpxchg
add
mov
add
scas
add
cmp
aas
push
mov
fadd
push
in
xchg
adc
and
sahf
add
push
roll
xchg
add
flds
enter
in
aas
rcrb
out
test
sbb
sbb
loop
pop
sub
aas
sub
xor
cmp
mov
inc
repnz
and
out
fcoml
dec
dec
add
add
add
jae
push
jns
xchg
pop
add
add
data16
xchg
inc
sahf
cmp
or
jns
in
mov
adc
xchg
daa
cmp
sbb
movsb
sbb
in
insb
sbb
push
and
arpl
and
xchg
inc
sahf
mov
bound
sahf
cmp
repnz
sarb
cld
mov
dec
lods
lods
or
sbb
fs
push
imul
inc
push
nop
xchg
xchg
jmp
add
pop
rcll
sub
enter
call
pop
enter
pop
pop
cltd
lea
mov
mov
lcall
imul
add
movsb
sbb
pop
nop
roll
sbb
push
orl
push
adc
adc
stc
xorb
and
cmovno
xor
push
push
pop
push
pop
push
pop
mov
jnp
pop
insl
stos
and
cmpsb
imul
push
sti
das
xorb
push
sbb
xchg
sub
push
sbb
sbb
mov
into
pop
xlat
pusha
leave
ret
pop
xor
and
add
mov
adc
and
inc
xor
adc
or
xchg
inc
je
add
sub
inc
and
arpl
mov
add
add
push
pusha
cmpb
cld
in
rcll
filds
mov
cld
adc
cld
inc
jle
test
shll
popl
inc
mov
jg
enter
pop
iret
mov
in
repz
pop
jle
push
add
in
ficompl
pop
pop
fisubrl
xor
fcomp
loopne
cmp
adc
jb
jle
insb
add
inc
pop
mov
ja
stos
add
add
pop
or
outsb
add
js
jae
xor
nop
das
pop
inc
filds
jmp
mov
mov
mov
cmp
jb
add
sub
sbb
xor
cmpsb
imul
call
loopne
ror
enter
dec
sarb
shll
test
pushf
nop
dec
aaa
dec
rorl
push
pop
push
dec
cmp
or
dec
shll
adc
or
fldl
xchg
add
sbb
inc
inc
cmp
sbb
js
jae
xor
cmp
lock
scas
push
leave
sub
xor
inc
ffreep
mov
adc
push
cmp
lcall
mov
repz
mov
adc
xor
add
cmpsb
imul
mov
lcall
insb
stos
sub
add
loop
mov
adc
pop
arpl
mov
sub
dec
gs
fiaddl
inc
push
dec
arpl
sub
pop
adc
adc
sub
mov
sbb
jae
movntps
push
outsb
mov
rclb
fs
cmp
lods
mov
inc
inc
imul
jb
insl
pop
jae
cmovge
jne
dec
xor
jb
push
nop
out
or
jb
fldenv
cmp
fs
xchg
popa
insl
cmp
inc
and
push
jae
sub
das
icebp
in
fstl
push
jne
fs
shll
dec
mov
inc
jns
jno
in
push
loope
leave
push
adc
data16
cld
mov
jnp
mov
inc
or
inc
inc
mov
push
and
or
into
push
push
push
cmp
jnp
insl
test
or
jno
and
or
push
nop
in
jge
dec
fs
inc
gs
insb
imul
push
cmp
jns
inc
das
into
and
jge
push
adc
in
push
rcr
xorl
mov
adc
rclb
lods
mov
dec
pop
adc
pop
jae
insl
dec
push
jbe
outsb
lds
addr16
inc
dec
or
or
add
in
adc
dec
jae
mov
sbb
or
jae
mov
scas
or
mov
fldcw
rorl
or
dec
inc
dec
or
adc
mov
mov
popa
pop
jl
or
pop
jp
mov
notb
or
je
test
imul
push
jae
dec
pop
add
arpl
arpl
mov
dec
inc
dec
das
push
pop
in
ret
sub
push
xchg
mov
nopl
jne
outsb
and
nop
mov
xchg
dec
and
jnp
insl
push
adc
jae
and
jbe
sahf
push
mov
inc
mov
add
adc
into
jne
arpl
and
and
xor
push
jle
in
pop
inc
outsb
sbb
mov
mov
xchg
int
ret
gs
and
lcall
mov
adc
test
add
xor
add
mov
divb
insb
addr16
jne
fldenv
mov
dec
gs
popf
and
or
sbb
dec
mov
loop
outsl
fcoml
insl
imul
inc
inc
jmp
jg
outsb
imul
lock
sti
and
or
adc
jg
adc
and
push
mov
or
pop
js
or
adc
add
idiv
pop
sbb
push
or
or
or
cmp
nopl
or
or
incl
sbb
and
push
lods
or
or
or
or
lods
add
or
add
or
adc
sbb
pop
aaa
push
adc
pop
adc
push
xor
inc
or
sbb
adc
and
pop
add
or
adc
and
insb
push
or
mov
scas
fldl
add
or
in
outsb
outsl
ljmp
push
sbb
and
and
xchg
inc
push
push
pop
push
pop
add
pop
in
mov
or
add
or
popf
mov
or
xchg
adc
rorb
sbb
stc
lods
std
sbb
push
sbb
and
or
or
sub
outsl
in
and
mov
and
popf
or
sub
and
or
sub
push
adc
imul
push
lock
mov
add
xchg
or
test
lods
cmp
add
daa
adc
ud0
fucomi
jns
push
push
lock
add
icebp
add
pop
lock
mov
push
or
xor
and
xor
bound
jne
sti
pushl
adc
push
pop
sbb
sub
push
adc
adc
iret
test
add
inc
xor
mov
add
sub
push
pop
add
dec
push
add
or
push
and
xor
dec
inc
inc
inc
fs
adc
sbb
inc
add
sbb
or
adc
push
add
add
imul
dec
pop
sbb
cwtl
add
cmp
in
inc
roll
mov
or
xor
sub
cmp
dec
movups
or
xor
xchg
scas
and
test
sbb
or
push
pushl
adc
and
push
inc
pop
adc
cmp
push
push
and
xor
ret
in
inc
lock
lock
add
adc
xor
pop
or
and
cmpsl
push
pop
adc
or
in
push
out
add
adc
lock
adc
xor
push
add
sub
pop
lock
or
sbb
and
sbb
jle
cmp
or
or
hlt
fiaddl
cld
psubw
lock
lock
add
add
adc
add
stos
mov
or
add
lds
sar
dec
add
dec
sbb
orb
or
adc
add
or
sbb
pop
add
negl
inc
subl
xchg
sub
fs
xchg
jl
mov
add
rolb
add
sbb
lods
stos
pop
test
shrb
je
leave
pop
xlat
push
add
and
fwait
sub
push
jle
add
fs
ja
pop
inc
add
es
pushf
sbb
shll
push
add
in
imul
repz
das
orb
insb
dec
aaa
dec
push
jnp
mov
dec
cwtl
orb
xchg
add
add
add
add
add
incl
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
