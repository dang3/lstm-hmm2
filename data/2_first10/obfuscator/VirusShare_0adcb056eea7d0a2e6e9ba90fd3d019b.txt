idiv
pop
nop
add
in
add
sub
imul
imul
mov
std
jbe
sbb
icebp
adc
mov
clc
push
jg
mov
mov
sub
add
movl
sti
ljmp
jmp
mov
es
push
mov
rclb
add
sbb
pop
add
pop
pop
mov
fsin
shrl
adc
add
jae
add
outsb
mov
mov
jnp
shrb
roll
xchg
or
roll
push
xor
push
jnp
mov
or
rorl
jbe
xor
fwait
out
cs
mov
sub
add
cmp
mov
lock
add
mov
mov
adc
fidivs
xchg
dec
sbb
mov
ljmp
sbb
adc
ja
jl
mov
and
imul
add
fucomi
xchg
and
or
adc
sbb
outsb
popa
ret
loope
sbb
adc
insb
outsl
pop
or
repnz
add
add
adc
insl
fcmovnb
popa
add
add
or
jge
mov
mov
mov
pop
pop
jl
sub
push
into
add
mov
push
leave
add
or
mov
mov
mov
mov
pop
push
ret
fwait
jae
enter
mov
sbb
rolb
mov
sbb
lods
adc
fbstp
mov
push
push
fdivr
repnz
outsl
insl
mov
and
or
test
pop
bswap
cmp
pop
xlat
or
mov
addr16
add
sub
push
into
ljmp
jmp
shrb
shll
pop
and
fistl
rcrl
mov
shl
xor
das
popa
mov
lock
cmp
sub
out
mov
in
cmp
mov
nop
repnz
aaa
ret
add
cmc
js
sarl
jge
add
sub
sub
or
cld
sbb
fistps
pop
and
pop
push
decb
mov
jnp
or
inc
lret
insl
iret
sub
repnz
sti
sbb
dec
loope
mov
or
mov
cmp
idivb
ljmp
imul
insl
mov
add
insb
add
ss
mov
lret
jge
mov
lock
les
adc
mov
jne
pop
mov
xchg
mov
mov
mov
pop
sub
mov
out
mov
or
sub
pop
popf
into
or
je
xchg
adc
sbb
and
inc
dec
mov
mov
adc
inc
mov
push
xor
mov
loopne
pop
sub
xchg
adc
stos
ljmp
xchg
call
leave
xchg
sub
jnp
jno
push
stc
cmp
mov
out
mov
mov
ljmp
cmp
pop
add
in
popl
mov
jo
imul
pop
or
mov
xor
mov
sub
inc
clc
test
shlb
insl
loope
mov
push
add
or
ficoml
popl
sbb
xchg
ret
cld
insl
out
pop
or
mov
add
or
sbb
push
jg
inc
cltd
mov
cli
repnz
adc
loope
mov
rorl
lods
pop
test
or
push
inc
cld
mov
adc
mov
in
sbb
mov
movsb
pop
stos
insl
test
add
jmp
dec
dec
sbb
push
sub
leave
ret
outsb
arpl
cmp
sahf
mov
inc
mov
js
jecxz
cli
sbb
adc
adc
cli
mov
or
icebp
sub
lods
and
push
jo
mov
mov
sbb
and
cmp
shrb
popf
mov
mov
popl
adcb
adc
ja
adc
xchg
mov
rcrl
push
lret
cmpsb
mov
mov
sbb
pusha
push
faddl
daa
sbb
inc
mov
aad
imul
clc
mov
push
xor
cmp
lds
sbb
repnz
push
gs
xor
pop
push
cmp
js
mov
jle
xor
add
mov
sbb
rorl
je
fisttpl
rcrl
shlb
xor
mov
xor
xlat
inc
imul
jno
roll
jbe
lods
inc
mov
or
or
cld
nop
fiaddl
test
ret
pop
movsl
sahf
mov
daa
or
cmp
sbb
push
andnps
add
mov
lods
mov
push
ds
in
ljmp
ret
sub
ret
popa
fstps
movaps
je
add
mov
jae
pop
pop
sbb
or
popa
insb
mov
mov
dec
les
aam
pop
lods
aam
in
popa
jbe
ficoms
sahf
ss
add
icebp
sbb
xor
mov
fsubs
add
push
or
add
dec
enter
mov
push
test
sbb
negb
imul
or
fdiv
repnz
in
mov
dec
push
or
jle
add
jne
inc
fldl
out
and
sbb
ret
xlat
adc
lock
push
xor
ret
xchg
fiaddl
or
subl
aad
rcl
shrb
jge
jecxz
int
cmp
or
jbe
out
adcl
repz
out
pushw
sub
inc
lods
sub
or
sbb
fmuls
sbb
ss
adc
adc
int3
pop
pop
xor
inc
sti
ret
sub
pushw
pop
xchg
jge
inc
or
daa
pop
idivb
xor
and
negb
lods
xor
inc
push
mov
int
popa
pop
pop
push
mov
xor
das
or
push
daa
or
fwait
jecxz
pop
mov
push
clc
rorb
add
or
jp
scas
xor
dec
add
enter
jmp
out
in
clc
adc
and
adcl
cmp
jne
insl
test
repnz
pop
arpl
js
fsubrs
push
lock
dec
xchg
imul
pop
dec
mov
ret
lods
dec
mov
inc
xchg
inc
push
add
hlt
rcll
rorb
mov
or
test
mov
lods
pop
insl
loope
sti
lret
rcll
push
add
pushl
aaa
mov
ja
mov
pushf
mov
push
out
shrl
icebp
prefetchwt1
mov
fcomps
xchg
or
insl
out
mov
cmp
and
rorb
das
sbb
cs
sbb
jae
sub
mov
cmp
icebp
cli
out
add
sbb
call
and
adc
cmpsb
jb
dec
pusha
mov
xchg
jl
lods
lods
add
xor
xchg
rcll
sbb
jge
test
aaa
add
adc
pop
js
call
lahf
dec
fcmovnb
add
clts
push
mov
mov
nop
or
lds
push
pop
inc
pop
cmp
insb
outsb
lret
mov
imul
leave
insb
add
ret
pop
jae
bound
inc
lock
not
inc
call
mov
pop
insl
ret
push
es
rolb
pop
lahf
mov
pop
pop
add
mov
sti
rol
mov
pop
insb
mov
mov
in
sub
cmp
orl
xchg
lret
sbb
mov
xchg
call
pop
dec
sbb
fcompl
pop
leave
push
imul
jb
pusha
into
dec
mov
in
rorb
add
into
inc
pop
test
cli
mov
mov
int
mov
dec
sub
jecxz
scas
mov
sub
lret
popf
adcl
xor
insl
sub
mov
cli
xchg
in
mov
icebp
pop
sbb
jo
xlat
rcll
shlb
sbb
mov
or
faddp
int
rcll
mov
es
into
jns
sbb
jb
or
rcll
out
pop
mov
sbb
andb
xor
xchg
jmp
add
jecxz
aam
inc
jae
out
pop
out
pop
fildl
inc
or
jmp
mov
add
aad
xor
xchg
xor
call
outsb
adc
add
movsb
inc
dec
jne
ds
leave
add
icebp
sarb
shrl
mov
xchg
insl
push
ret
mov
in
pop
popa
xchg
insw
rolb
sub
sbb
add
jne
adc
rcl
add
adc
icebp
fildl
dec
mov
addr16
push
jge
rolb
pop
call
mov
lcall
pop
scas
xor
pop
loopne
lods
insl
adc
dec
add
int
pop
repnz
push
dec
or
rclb
out
mov
dec
bound
popa
mov
mov
jb
cmp
add
les
pop
push
ret
mov
scas
mov
das
cli
xor
fadds
testb
aaa
ljmp
std
pop
clc
sub
call
or
sub
mov
int
sbb
outsl
jge
test
add
push
cmp
add
out
shl
ds
inc
cmpsl
jge
adc
mov
test
mov
xor
or
adc
popa
scas
jle
outsb
shl
inc
ret
inc
stc
sbb
loopne
mov
add
daa
gs
into
sub
enter
push
adc
rcl
fstpl
mov
inc
xor
xchg
mov
mov
sub
stc
and
rcll
sub
push
cmp
adc
or
mov
pop
ret
sti
sbb
dec
push
add
ds
clc
sub
inc
notb
in
mov
pop
cld
lea
lcall
loop
inc
or
bound
or
mov
push
imul
ficoml
dec
int
xlat
jns
push
add
lock
sbb
rcll
fimuls
test
punpckhdq
inc
sub
les
hlt
orl
jbe
dec
clc
fimuls
shrb
rclb
scas
push
jo
out
cld
cld
out
cmp
orb
sbb
push
and
sbb
adc
mov
pop
popa
loope
push
or
mov
xor
or
pusha
icebp
mov
or
in
mov
ss
jo
arpl
outsl
inc
inc
sub
sbb
sbb
xor
in
arpl
ret
add
xor
adc
jo
jb
mov
or
sbb
shlb
xchg
cs
add
or
inc
xchg
mov
inc
push
xor
or
pop
push
jl
push
inc
ds
es
jnp
jle,pt
pop
movsl
mov
dec
jno
mov
add
fimull
insl
mov
mov
in
push
stc
xor
mov
cmp
es
pop
mov
lds
leave
repnz
adc
adc
in
or
sbb
loope
pop
punpckhwd
clc
or
mov
jl
lret
cmpsl
pop
fldcw
push
shrb
subb
mov
fsubl
dec
into
fiaddl
push
out
jbe
add
xor
popf
inc
pop
sub
adc
lret
mov
mov
push
pop
addr16
mov
add
cld
jae
xchg
or
lods
pop
addb
xlat
xchg
test
punpckhbw
push
pop
pop
inc
adc
push
pop
mov
mov
sahf
sub
scas
fcoml
es
add
cs
or
or
pop
add
ret
mov
shl
mov
out
lods
icebp
dec
push
mov
sbb
add
test
and
and
cld
ljmp
scas
std
or
adcl
push
fbstp
xor
js
add
stos
in
ss
inc
in
clc
fdivrs
jle
into
push
or
loopne
aad
aad
and
jae
out
mov
lods
pop
adc
add
push
sub
mov
shll
sbb
mov
push
sti
repnz
fnstcw
pop
mov
and
lea
stc
push
add
enter
xchg
shrl
in
fs
jno
loope
pop
bound
pop
rcrb
repnz
jbe
xor
or
insl
hlt
xor
sub
cmpsl
sbb
lods
xor
push
cmp
dec
ret
loopne
je
enter
into
call
mov
ljmp
cmp
mov
ret
mov
mov
lods
xor
stos
xchg
data16
add
push
ss
xchg
fiadds
sbb
push
and
sbb
dec
xchg
out
inc
or
jno
push
cmc
int
mov
bound
movsl
dec
sub
adc
pop
rolb
xor
sbb
out
jae
stc
adc
push
leave
inc
sub
add
ret
pusha
cmpl
sub
jmp
daa
outsb
and
push
or
shll
fsubs
in
add
ljmp
xor
shlb
scas
sbb
fst
inc
cld
enter
popa
mov
faddl
pop
add
mov
push
in
adc
rclb
out
in
scas
or
adc
or
arpl
aad
test
add
mov
xor
pop
pop
dec
jge
test
inc
jb
cwtl
cmp
into
into
fdivl
roll
adc
and
mov
ljmp
or
push
xor
mov
out
mov
sub
rcrl
xchg
xchg
push
pushf
enter
lcall
outsl
xorl
js
mov
or
inc
xor
shl
ret
adc
sbb
loop
mov
xchg
in
jmp
adc
push
jl
push
inc
and
add
push
push
or
push
stc
push
andb
es
jnp
pop
rorb
mov
nop
rolb
inc
scas
sbb
jp
jbe
dec
push
and
mov
in
mov
mov
pop
sub
insb
mov
sub
rcrl
sub
loope
cmp
cmpsl
push
aad
ljmp
icebp
imul
test
sbb
sub
fwait
xchg
loop
ret
or
rcl
push
add
lcall
adc
mov
dec
pop
je
lods
xchg
andb
cmc
lock
push
pop
adc
inc
push
jb
bound
enter
or
shrb
add
mov
mov
sbb
add
pop
mov
jmp
xor
fisttpl
adc
push
sbb
out
les
cmp
inc
sub
orb
sbb
testb
xor
test
test
mov
or
add
in
cmp
sti
imul
ret
mov
pop
xchg
lcall
sbbl
shrb
push
push
pop
adc
or
adc
call
mov
rcr
loop
jecxz
lock
push
mov
jmp
xor
jmp
push
shrl
lret
xor
js
lret
shlb
imul
aaa
pop
and
jne
push
dec
std
subb
xchg
xor
cmp
inc
push
sbb
pop
stos
lret
adc
sbb
sub
rorl
pop
loope
sbb
cmp
adc
icebp
pushf
std
xchg
les
stc
adc
rcrb
jnp
add
or
enter
or
imul
ficomps
cmp
push
les
fs
sub
mov
and
movsl
mov
push
aad
xor
insl
xchg
push
and
fwait
test
pop
stc
test
inc
add
ror
mov
sub
sbb
and
call
inc
pop
mov
loopne
dec
std
xor
push
pop
add
xor
pop
sub
adc
das
cmp
inc
daa
in
rcrb
sbb
push
mov
inc
movsb
cmp
stos
ret
aad
cmp
cs
or
mov
push
xchg
jl
mov
push
pop
push
sub
lcall
pop
pusha
push
push
pop
imul
push
lcall
aad
ret
or
stos
mov
mov
inc
adc
mov
sub
mov
xchg
out
add
rclb
jecxz
jecxz
daa
xchg
xchg
fcomps
push
add
out
jo
call
cli
xchg
rcl
add
xchg
sbb
dec
jne
ret
mov
or
cmp
mov
inc
sbb
mov
adc
aas
sbb
in
pushf
add
mov
call
lret
mov
or
pop
add
inc
or
xchg
push
add
cmpsb
lods
adc
rclb
or
sbb
push
popa
xor
and
icebp
mov
or
ret
mov
inc
add
pop
leave
popl
enter
mov
and
loop
pop
pop
bound
lret
dec
js
add
push
cmp
sbb
sahf
push
push
adc
push
leave
push
or
rcrl
ret
dec
pop
je
sub
mov
ja
jne
jb
insb
pop
rcrl
xchg
rcpps
sub
mov
jmp
sbb
daa
iret
push
push
inc
test
adc
inc
cmp
je
mov
push
mov
push
lock
xor
xor
mov
or
push
mov
fxch
insb
bound
sbb
test
adc
test
bound
dec
repnz
adcl
or
pusha
mov
jl
push
or
or
pushf
inc
adc
scas
sbb
leave
dec
inc
or
lock
adc
dec
jge
add
idivb
jb
xor
insl
xor
stos
shll
mov
mov
sub
ror
inc
sbbl
dec
cld
sub
ficoml
subl
sarl
dec
or
sarl
lds
add
aad
mov
ljmp
mov
ret
and
adc
inc
popa
sbbb
jge
movhps
sbb
out
jne
pop
push
mov
aaa
xlat
orl
fmuls
or
xor
jbe
out
add
mov
icebp
mov
or
push
or
sbb
shlb
les
dec
outsl
push
or
enter
test
xchg
push
sbb
mov
adc
sbb
jmp
cs
scas
fidivs
dec
or
into
movsl
and
xor
andl
mov
mov
sub
pusha
push
stc
fs
bound
out
outsb
lret
dec
popa
cmp
push
inc
mov
fdiv
xlat
sbb
mov
sbb
mov
dec
inc
in
add
shr
and
rcrl
sub
data16
push
mov
add
jmp
test
lret
sub
push
pop
adc
pop
test
pop
fnsave
and
scas
mov
pop
fst
inc
pop
popa
jmp
arpl
dec
inc
test
dec
adc
xor
cmc
sub
add
test
imulb
add
adc
mov
pop
mov
in
push
sbb
divb
shlb
icebp
xor
and
push
stos
or
mov
push
jge
ret
mov
cld
pop
aas
pop
xor
mov
sbb
sub
and
pop
add
cmp
adc
ror
sbb
addr16
xlat
into
movsl
add
jmp
addps
inc
pop
xchg
int
mov
xchg
cmp
xchg
shr
icebp
sbb
lret
addr16
ret
fwait
js
push
jp
push
xchg
stc
adc
mov
xchg
mov
and
push
inc
ret
cmp
dec
addr16
sarb
xor
test
jne
scas
and
dec
pop
xor
hlt
adc
shl
dec
push
sub
or
xchg
jae
inc
rolb
push
cmp
add
pop
inc
sub
test
sbb
rcl
int
xchg
add
adc
inc
sub
push
push
clc
add
fstps
push
add
data16
or
push
adc
scas
flds
or
xor
add
sub
bound
pushf
inc
mov
add
das
adc
shl
mov
adc
out
sub
jle
jne
ret
pop
xchg
or
jle
faddl
pop
ret
in
stos
les
jb
or
xor
pop
lea
hlt
push
pop
cmp
or
adc
inc
andb
adc
lcall
data16
pop
mov
imul
fdivr
xchg
jp
sub
hlt
imul
test
sbb
test
sbb
rolb
xchg
shlb
pushf
add
jl
and
inc
loopne
mov
sbb
add
hlt
faddl
jg
push
in
mov
shrl
or
add
inc
push
push
out
or
scas
adc
xchg
or
add
xlat
sub
sahf
xlat
pop
repnz
adc
jne
sub
jle
xor
xchg
notb
cmpsb
out
push
xor
imul
sbb
jns
push
xor
xor
orb
inc
cmp
jmp
pop
mov
push
push
inc
test
sbb
inc
inc
mov
loop
sub
insb
sahf
adc
bound
adc
jo
xchg
push
push
jno
andl
xchg
inc
adc
push
or
ret
sahf
sub
sbb
icebp
push
lcall
popa
sub
push
add
mov
clc
aas
rcrb
push
cmpsl
ret
or
in
shlb
test
loopne
add
into
ror
push
test
stc
adc
repz
adc
sbb
js
add
add
add
popa
imul
xchg
fwait
cmp
dec
mov
inc
mov
jno
and
xchg
fidivrl
sbb
push
out
or
cmp
jne
push
fdivl
lock
test
test
xchg
mov
and
jo
lret
push
ljmp
roll
mov
inc
inc
cmp
shrb
icebp
shll
jo
xor
inc
push
add
mov
or
js
repz
xchg
je
sbb
push
ficoms
inc
sub
xlat
repz
push
sbb
fldt
sbb
xor
je
sbb
push
inc
scas
test
push
and
rclb
sub
je
sbb
or
test
shlb
mov
mov
lods
and
in
hlt
orb
insb
lods
push
and
ljmp
or
pop
sub
push
mov
pop
popa
mov
jmp
add
rcll
test
or
fisttpl
xchg
std
mov
imulb
pop
cmpsb
pop
mov
jmp
scas
push
adc
inc
sarb
loope
pop
je
push
xor
add
daa
push
push
xchg
clc
inc
or
leave
in
or
or
out
pop
adc
cmpb
cs
mov
dec
daa
sarl
ret
test
lret
or
scas
ror
pop
xorl
rclb
test
add
ljmp
leave
jb
je
xorb
adc
mov
xchg
int
mov
push
rol
mov
pushf
inc
inc
jnp
sub
push
cmpsb
mov
adc
outsb
push
and
cmp
adc
roll
sbb
cmp
fstpl
lcall
and
paddusb
push
sbb
adc
or
or
mov
xchg
adc
lcall
adc
adc
cmpsb
rclb
pusha
or
push
sub
adc
pop
loopne
popf
cltd
mov
xor
fsubrs
sti
jmp
rcrb
bound
pusha
add
or
mov
mov
repnz
xchg
xchg
mov
mov
rcrl
mov
xor
push
or
and
shrl
adc
sub
push
shlb
push
in
dec
jl
jecxz
jno
orb
add
push
inc
lret
xchg
push
add
pusha
and
pop
pop
inc
sub
notb
adc
into
pop
push
adc
jecxz
stos
push
or
rclb
inc
test
cltd
xor
mov
or
fsubrp
add
pop
subb
fsubrp
stos
push
cmc
or
adc
jle
notb
adc
xchg
add
jne
stos
inc
loopne
add
jae
lds
xor
sub
fidivrs
and
cmp
mov
jmp
adc
add
inc
mov
mov
or
push
mov
mov
xchg
or
or
aam
aam
push
jecxz
nop
sbb
nop
test
push
jbe
movsb
stos
adc
pop
imul
pusha
cltd
jg
sbb
scas
mov
mov
pop
aam
fadds
pop
mov
loopne
adc
or
ja
sub
mov
pop
les
loopne
aad
scas
push
xchg
mov
mov
mov
xor
inc
loop
sbb
adc
mov
lods
ja
sub
rorl
adc
cmp
sbb
cmp
div
add
shl
mov
jmp
xchg
lret
inc
rorl
testb
je
sub
inc
mov
mov
or
add
xchg
and
icebp
push
sbb
aas
pop
dec
push
shlb
push
push
xor
sti
sarb
test
inc
push
xchg
shlb
lcall
imul
sbb
data16
and
sub
mov
mov
test
les
jmp
cltd
call
cmp
xchg
cmp
sbb
lods
sbb
in
pop
mov
mov
ficomps
psrlw
icebp
jp
orb
mov
sarb
or
pop
std
mov
cmp
or
mov
lock
jno
dec
inc
xor
sub
scas
push
addb
pop
jnp
inc
rcl
or
pop
lock
jnp
jp
or
sub
cli
mov
add
sbb
push
mov
xchg
add
add
push
push
sbb
fistl
push
sbb
add
push
xchg
mov
filds
cmp
adc
js
or
and
sbbl
ljmp
mov
mov
xchg
shlb
pop
xor
faddl
cmp
pop
push
fs
add
movsl
fdivrl
xchg
jl
pop
enter
test
imull
inc
lods
add
pop
ss
mov
pop
dec
inc
mov
inc
dec
cwtl
mov
testb
pop
mov
mov
sbb
int
mov
mov
mov
in
add
lcall
add
dec
mov
dec
pop
mov
rclb
sarl
pop
mov
push
xchg
cwtl
adc
sbb
jb
xorb
add
xchg
mov
or
adc
and
jl
ret
pushf
std
sbb
or
add
jl,pn
rol
jns
push
data16
or
test
add
dec
mov
xor
daa
pop
scas
pop
xchg
push
mov
sbb
mov
int3
shr
adc
sbb
or
mov
clc
add
push
loopne
push
fistpl
pop
push
or
les
cld
ret
push
fcompl
pop
cltd
mov
outsl
jmp
out
or
out
cmp
push
aas
rolb
repnz
adc
mov
mov
or
adc
mov
and
pop
push
sbb
icebp
je
punpckhbw
ret
enter
in
mov
cli
add
xchg
pop
dec
and
dec
nop
sub
pop
mov
bound
add
out
xor
push
icebp
cmp
mov
into
cmpsb
push
orl
cmp
lret
push
dec
lods
ret
mov
push
mov
cmpl
mov
xor
sarl
sbb
aad
loope
test
add
stc
jno
rolb
mov
inc
fldcw
sbb
popa
test
mov
ljmp
icebp
dec
cs
lds
sbb
add
fists
int
addl
jo
sbb
in
or
and
xor
pushf
mov
sbb
push
sbb
int
or
or
and
add
sbb
incl
jb
imul
xor
rcll
sahf
push
out
mov
push
xor
mov
stos
push
ret
sub
cmp
adc
xchg
mov
ss
inc
jae
push
sub
sbb
push
movsl
xor
sbb
or
sub
add
loope
inc
jge
pop
es
xor
daa
call
push
xor
add
hlt
add
mov
cli
mov
jmp
or
adcl
test
aam
shll
sbb
lods
js
cld
clc
push
stos
movb
xchg
shll
xor
add
or
sbb
mov
lret
js
pop
jmp
in
cs
and
push
or
mov
jo
stos
or
loopne
fadd
stc
or
jne
dec
jmp
xor
xchg
shlb
sarl
sbb
xor
push
lahf
rorl
pop
pop
push
pop
push
mov
add
and
mov
filds
xor
adc
hlt
jmp
or
test
add
es
test
arpl
inc
repz
fcoms
push
scas
xor
shlb
push
add
sub
sbb
lock
or
sbb
push
pop
inc
pop
leave
shll
jo
xchg
mov
into
decb
mov
mov
call
dec
lcall
jmp
add
cmpsb
inc
hlt
lods
outsl
mov
or
mov
or
jl
in
stos
or
mov
xchg
mov
xchg
adc
pop
les
not
mov
sbb
sub
inc
fcmove
mov
inc
xchg
bound
cmpsb
pop
je
add
mov
add
lahf
jae
or
mov
mov
fcompl
into
pop
roll
jae
pusha
pop
loop
mov
or
cwtl
daa
das
push
push
inc
pop
dec
add
pusha
rclb
orl
mov
jl
adc
inc
cld
rclb
call
ret
outsl
mov
and
xor
mov
bound
pop
cmpsb
lret
pop
fs
or
aaa
adc
or
and
shlb
cmp
adc
xchg
pop
sbb
ljmp
adc
ret
sub
gs
cmp
inc
mov
in
nop
aam
sti
push
rcrb
add
and
pop
xor
rcll
mov
inc
xor
pop
and
mov
inc
mov
pop
ljmp
add
rcr
test
mov
push
mov
push
add
sbb
clc
jns
mov
push
mov
rorl
adc
sbb
add
mov
mov
and
add
in
cltd
inc
and
push
aam
loopne
cmp
mov
popa
mov
sbb
fwait
push
push
popa
pop
aad
std
aam
sbb
cld
or
or
iret
adc
cmp
pop
shll
fstl
push
mov
mov
mov
push
mov
xchg
push
sub
pop
push
out
mov
cltd
sub
push
mov
pop
lods
add
es
add
popf
bound
icebp
and
fidivs
icebp
rorl
ret
ss
out
adc
xchg
and
adc
popa
lret
sbb
sbbl
add
lds
mov
mov
sbb
bound
fsubs
xlat
push
je
loop
mov
jg
adc
dec
xchg
test
jb
adc
shrl
push
test
inc
xor
jo
pop
test
and
inc
or
leave
adc
rclb
push
lods
adc
scas
flds
ret
push
repnz
rcrl
fisubs
pop
in
jmp
xor
outsb
mov
sub
cld
sbb
fadds
popf
out
pop
mov
xor
idivb
sbb
sbb
sbb
cmp
or
push
stos
push
ret
fmuls
enter
inc
xchg
das
xchg
aad
stos
inc
add
movl
xchg
sub
or
aad
mov
or
rcll
inc
and
lahf
in
jno
adcb
into
mov
lock
stos
xchg
xchg
ficompl
mov
dec
inc
mov
push
push
add
rol
sbb
imulb
sbb
mov
sbb
push
scas
cmp
or
sbbb
cmp
cmp
mov
mov
mov
iret
push
bound
fstl
dec
dec
fs
loop
sub
mov
hlt
add
add
rcrb
enter
mov
jno
addb
je
popa
lret
fcmovnb
popf
push
push
push
push
or
gs
popf
xor
mov
add
xor
shrl
push
jg
popa
popf
xchg
mov
inc
mov
sbb
lret
pop
lods
mov
and
lock
in
push
mov
add
dec
xchg
pop
fimull
or
sbb
stos
es
push
loope
dec
jo
dec
subl
lret
push
push
jnp
inc
mov
and
pop
dec
shr
stos
mov
enter
xchg
cmp
mov
rorb
pop
mov
push
xchg
enter
in
loopne
push
pop
adc
mov
push
sbb
xor
adc
adc
sbb
push
pushf
mov
clc
mov
add
pop
adc
pop
es
and
enter
jae
dec
pushf
push
es
cmpsl
adc
mov
jo
test
or
dec
popa
or
adcb
mov
mov
jo
lret
jmp
add
push
pop
les
sub
scas
call
pushf
mov
stos
sbb
enter
and
ss
fwait
lret
inc
mov
sbb
pushf
mov
mov
insb
pop
xor
bound
lahf
dec
adc
xchg
pop
cltd
mov
sahf
test
pop
sbb
or
stos
add
add
stos
xchg
xchg
mov
js
mov
jmp
sbb
ret
mov
lds
loope
xchg
in
dec
inc
call
shll
cld
pop
pop
jmp
hlt
test
clc
push
sub
lods
mov
test
push
jge
stc
adc
orl
icebp
mov
adc
div
out
bound
inc
lods
and
adc
fcomps
loope
cli
nop
xlat
subl
into
into
bound
fdivs
stos
cmp
sub
in
mov
into
loopne
adc
dec
jmp
or
sti
rclb
shl
inc
andl
xchg
ljmp
mov
pop
dec
in
and
cmp
or
sbb
cmp
add
push
cmp
push
adc
aad
push
jae
out
pop
add
push
sub
jp
sub
cmp
sbbb
pop
dec
push
imul
pop
pushf
leave
rcl
push
or
mov
lahf
sub
bound
lock
or
dec
pop
icebp
xlat
inc
pop
rorl
into
jne
adc
cmp
pop
jne
sub
scas
cmp
and
repnz
iret
sarb
mov
add
sarb
xor
shrb
dec
cmc
mov
enter
pop
data16
in
jp
adc
xor
and
shlb
stos
pop
loope
cmp
repnz
push
xchg
push
cld
sub
sub
mov
inc
into
xor
sbb
outsl
sbb
stos
xor
cmp
xchg
mov
add
push
lea
add
bound
mov
mov
pop
add
dec
push
repnz
aam
sbb
mov
es
gs
lahf
testb
arpl
sbb
add
and
jl
std
popf
rcr
inc
push
lds
push
js
div
cmc
mov
mov
subl
inc
sbbb
mov
adc
mov
mov
xor
push
xchg
jmp
inc
or
es
cmc
add
ret
inc
shlb
pushf
push
pop
inc
cmp
sbb
adc
xchg
or
mov
je
xor
arpl
mov
xchg
sti
popl
lock
fwait
cmp
xchg
and
push
sub
mov
or
sbb
mov
out
cmp
push
dec
or
push
popf
inc
add
add
xchg
xorb
arpl
addr16
popf
cmp
jg
xchg
push
pop
add
add
inc
dec
repnz
test
pop
inc
loopne
add
js
lret
xchg
mov
sbb
lret
add
pusha
sub
push
test
test
push
xchg
movl
xor
jl
sub
aam
lcall
cmp
cmp
adc
or
push
mov
push
sbb
inc
decl
inc
xchg
sub
push
mov
shrl
inc
jge
mov
cmp
push
push
push
inc
adc
pop
jbe
popa
jo
push
mov
ret
jo
icebp
sub
or
loopne
idiv
jge
pusha
stos
cltd
scas
stc
outsl
mov
push
shll
sbb
push
xchg
sbb
sbb
mov
mov
mov
add
lods
nop
push
sub
inc
cmpsb
pop
push
dec
xchg
jo
int
and
jae
pop
stos
es
add
pop
or
or
daa
adc
xor
adc
mov
push
je
sbbb
push
pushf
mov
pop
aam
es
push
enter
cmp
push
add
mov
in
push
ljmp
or
insb
in
das
push
dec
imul
and
in
xchg
into
in
sbb
adc
sub
sub
rolb
roll
add
pop
cwtl
fimull
inc
aad
pop
xor
dec
sbb
cs
sahf
dec
sbb
ret
xor
mov
sbb
mov
and
push
pop
jae
jl
or
xchg
addl
xor
add
and
push
test
sbb
sub
aas
jmp
or
xchg
cltd
mov
dec
outsb
adc
xor
push
xchg
mov
or
push
add
adc
mov
push
lret
push
adc
pop
jne
stos
sub
and
sbb
add
ret
mov
fimuls
sbb
add
jo
sbb
or
mov
test
sub
sbb
adc
cwtl
xor
mov
aam
push
fildll
inc
pop
sub
mov
test
test
ss
inc
arpl
mov
add
ret
mov
lret
add
int3
push
scas
xchg
and
cmc
mov
jnp
sbb
mov
mov
adc
enter
pop
test
sub
aaa
add
dec
push
jb
mov
adcl
repnz
jmp
jo
out
mov
adc
jae
gs
add
sub
mov
mov
mov
rolb
sub
inc
dec
enter
mov
sahf
mov
mov
test
xchg
cli
pushf
push
roll
sub
fwait
sbb
or
bound
or
pop
jmp
xchg
xchg
sub
sbb
add
xorl
pusha
mov
pop
add
inc
adc
in
dec
lock
icebp
xor
push
mov
aad
mov
push
leave
cltd
cmc
mov
rcrb
imul
sub
mov
push
notb
sub
xchg
pop
mov
cmp
or
push
mov
adc
inc
inc
sub
in
and
jecxz
aad
loope
cltd
and
pop
xorl
adc
scas
sbb
inc
dec
rolb
push
test
adcb
adc
add
cli
pop
cltd
xor
gs
adc
push
cltd
push
aas
insb
stos
or
call
inc
cwtl
call
add
scas
mov
aam
js
iret
leave
add
inc
das
scas
mov
and
sbbl
loopne
outsl
jmp
in
clc
mov
js
pop
dec
loope
daa
rcrb
pop
push
jo
mov
cwtl
adc
pop
dec
add
pop
bound
dec
rclb
push
dec
xor
inc
adc
dec
shl
lds
xchg
adc
ret
mov
xor
and
jo
jo
jns
xor
loopne
jb
test
sub
mov
add
rolb
xor
int3
add
pop
dec
mov
clc
jnp
xor
sub
dec
sub
punpckhbw
je
gs
pop
or
rcll
stos
push
adc
dec
cltd
mov
or
mov
sub
push
les
adc
push
mov
add
add
mov
jecxz
push
add
xor
cmpsb
cltd
insb
out
fs
inc
movsb
dec
xor
mov
mov
hlt
lret
inc
add
cwtl
test
nop
fdivrl
jge
xor
cmp
ret
enter
mov
xor
fdivr
pushf
test
or
mov
or
add
adc
push
jmp
xchg
rorl
jl
inc
leave
mov
cmpsl
push
mov
fimuls
push
out
rol
mov
sub
inc
pop
push
addb
cmpsl
adc
add
jne
push
dec
dec
mov
fisubl
cltd
sbb
mov
adc
ss
or
or
and
mov
jmp
mov
fistl
push
xchg
and
test
ljmp
mov
adc
push
jp
or
mov
loop
sub
push
movsb
mov
cwtl
dec
cmp
sahf
test
rcrb
notb
stos
xchg
push
xchg
cmp
adc
imul
fsts
inc
lods
cld
stc
sbb
cmpsb
sub
loopne
repnz
and
or
mov
jb
mov
sbb
and
mov
test
les
push
pusha
sub
push
rolb
rcrl
xchg
mov
cltd
bound
leave
test
cmpl
cmp
push
or
mov
fmull
call
sbb
gs
mov
ljmp
add
sbb
push
lods
stos
loop
push
sub
into
pop
mov
pop
outsl
test
int3
pushf
jo
fiaddl
mov
push
sub
lods
xor
nop
pusha
fadds
or
data16
and
mov
das
sbb
mov
les
adc
aaa
inc
and
jmp
xor
xchg
sub
mov
shrb
sbb
gs
sub
rorl
add
push
inc
int3
mov
add
outsb
inc
adc
roll
js
mov
cmpsb
jb
out
sub
jmp
pop
pushf
out
or
adc
test
xor
sub
mov
sbb
add
sub
dec
jle
lret
sbb
sub
xor
iret
loope
adc
sub
xchg
test
mov
loope
pop
outsb
je
cli
pop
mov
adc
fdivrl
mov
nop
mov
and
fs
and
or
aad
push
syscall
mov
add
lds
fadd
cmp
push
add
xchg
cmp
addl
xor
mov
cmp
mov
mov
ja
sahf
push
test
in
add
xor
push
adc
mov
mov
inc
cmp
inc
cmp
add
int3
hlt
adc
sbbl
mov
cmp
lret
cmp
adc
getsec
cmp
ffreep
lcall
push
shrl
jns
loopne
add
pop
mov
push
movsl
imul
sbb
push
lea
cs
cmp
aad
xchg
sbb
fs
mov
fucomi
add
sbb
mov
cmp
mov
add
pop
es
pop
in
daa
push
mov
std
inc
inc
lods
sbb
jo
dec
aam
scas
mov
mov
cltd
inc
into
pusha
mov
pop
inc
push
iret
in
loopne
mov
xor
adc
lea
insb
or
jo
jae
rclb
or
sub
fcompl
arpl
fsub
jnp
mov
js
adc
ret
dec
push
call
push
or
inc
xor
push
sbb
xchg
jo
and
enter
sbb
pop
pop
fmul
scas
ret
scas
jno
inc
insl
cmp
pop
push
xchg
lcall
jp
pusha
cmp
or
in
or
sti
mov
mov
adc
cmpsb
sub
nop
lcall
dec
jb
in
and
rorl
push
adc
push
push
stc
leave
jl
into
inc
xchg
sub
jae
mov
dec
pop
push
shlb
mov
lods
ret
popa
loopne
inc
hlt
add
xchg
mov
xor
cmp
lret
popa
push
xchg
rcrl
sarb
shrl
dec
push
mov
leave
lock
test
mov
fwait
inc
aad
adc
lcall
xchg
pop
inc
leave
cmp
popf
clc
loopne
add
movsl
add
fimuls
lds
inc
or
in
mov
mov
sbb
mov
adc
loope
cmpsb
cli
push
or
add
andnps
scas
push
aad
fdivl
test
xchg
cmp
stos
pusha
jp
je
jno
mov
cmp
in
rcrl
rol
or
das
push
adc
inc
pop
adc
pop
or
dec
clc
push
inc
int
test
and
mov
rolb
mov
adc
dec
cmc
cwtl
add
xchg
sarl
sbb
add
push
push
sub
xor
mov
das
inc
pop
pusha
add
or
jo
adc
sub
adc
mov
shlb
rcll
xor
fnsave
inc
xor
sub
sbb
adc
inc
xchg
jmp
mov
into
loopne
int
inc
lret
lcall
add
push
rclb
xor
movsl
fcmovnu
aam
or
das
outsb
scas
push
mov
push
cld
shrl
inc
or
or
inc
shrb
push
xor
aaa
or
pop
inc
in
fcompl
lock
rcrl
mov
loop
call
icebp
adc
cmp
jno
xchg
adc
dec
sbb
xchg
sbb
lds
clc
or
cmp
mov
aas
in
lahf
fs
ja
mov
test
loope
adc
jne
icebp
cmp
sar
add
loopne
or
jmp
adc
push
je
movsb
push
push
lcall
daa
push
push
popa
roll
push
or
xor
adc
ret
xchg
or
sbb
cmp
mov
pusha
push
adc
stos
add
xchg
leave
int3
jecxz
and
shll
push
nop
test
xchg
test
lea
dec
mov
bound
popa
fstpl
das
and
icebp
negb
xchg
xchg
nop
enter
or
lock
mov
mov
adcb
pop
rolb
jp
sbb
test
movsl
cmp
mov
lahf
push
stc
adc
sbb
mov
aam
js
pop
sbb
pop
in
inc
lea
out
adc
xor
movsb
fisubl
cmp
dec
adc
sbb
push
pop
and
cmpsb
pop
daa
inc
mov
or
divb
push
pushf
dec
loop
push
sbb
mov
sub
mov
adc
popl
insb
jge
inc
leave
rclb
push
mov
xor
dec
jge
sbbb
mov
rclb
imul
cmpsl
cmp
or
push
inc
push
push
adcl
lods
sub
cmp
lock
cmp
adc
int
rol
xchg
or
test
pushf
and
xor
or
push
cmp
cli
pop
fimull
push
mov
arpl
shrb
lret
hlt
or
outsb
mov
inc
cmp
lods
sbb
in
push
dec
scas
xchg
push
aad
add
pop
push
or
or
add
and
mov
imul
sbb
xor
fnsave
stos
shl
mulb
shll
adc
cmpsb
sbb
scas
xor
push
insl
jge
push
sbb
push
cmpsb
out
adc
in
add
popa
test
xchg
lret
lret
add
leave
add
cmp
in
hlt
sbb
or
pop
mov
mov
call
lock
mov
bound
test
mov
pop
add
jl
xchg
mulb
lret
ret
enter
sahf
push
or
inc
mov
cmp
stos
or
repnz
sub
or
push
into
jmp
or
sbb
addl
xor
and
push
cli
or
fxch
adc
fisubl
pop
mov
test
adc
sub
rorb
ret
fiadds
dec
enter
popa
pop
xchg
adc
out
push
jl
jmp
mov
ljmp
andl
jle
jg
pop
inc
test
outsl
lock
or
cmp
notb
and
lret
lea
pop
pop
xchg
loop
fisttps
cwtl
xor
pop
mov
sbb
xor
sbb
sub
hlt
xor
outsb
cmp
loope
and
push
inc
or
lds
jmp
jp
lret
jmp
cmp
push
shl
pop
mov
pushf
cmpsl
push
xlat
sbb
pop
xchg
into
je
sub
setns
into
icebp
mov
adc
test
addb
test
push
call
adc
imul
adc
pop
fcoms
cmp
jo
sahf
int3
rolb
out
sbb
or
add
mov
jne
mov
sbb
sahf
stos
and
inc
cli
roll
loopne
incb
mov
or
adc
push
roll
psrlw
mov
mov
pop
or
xor
lds
pop
xchg
mov
and
mov
pop
lret
add
inc
rorb
mov
test
push
std
mov
sub
or
repz
pushf
push
fwait
mov
orb
pop
imul
xor
loope
rorl
sbb
mov
cltd
jo
push
and
inc
cmp
je
sbb
in
add
outsl
std
sbb
jo
xchg
mov
les
popa
into
daa
push
scas
sbb
mov
dec
adc
adc
ss
cwtl
and
loopne
orb
push
icebp
leave
js
sarb
addb
pop
or
mov
mov
shll
and
or
push
xchg
mov
mov
sbbl
inc
xor
lret
pop
or
out
add
in
rcrb
or
in
dec
adc
xadd
and
sbb
jno
fsubl
mov
gs
icebp
loop
xor
push
sbb
loopne
es
adc
sbb
inc
xor
inc
test
lea
or
out
push
rolb
jecxz
lds
lret
pop
movsb
inc
sub
push
in
mov
adc
add
mov
and
dec
xchg
lret
cltd
shl
add
add
cmp
add
cmpsb
push
or
ret
imul
jp
jg
mov
xor
push
punpckhdq
repnz
cmp
lret
fldt
push
scas
or
adc
pusha
pop
push
push
jo
rcll
pop
sets
rorl
rorl
lret
sbb
mov
pop
rolb
inc
ljmp
adc
mov
cmc
mov
add
sbb
aam
jb
rolb
je
sbb
pop
int
popf
movsl
mov
and
ret
mov
jb
rorb
inc
mov
mov
in
lea
or
add
add
xor
sbb
loop
push
push
push
add
fs
stos
es
pop
sysexit
pop
pop
iret
sbb
mov
ret
aad
adc
jge
inc
rolb
test
addb
mov
adc
dec
jmp
adc
call
lcall
mov
lcall
addb
push
and
add
leave
rclb
and
mov
mov
add
mov
add
mov
add
js
inc
cltd
rcl
dec
and
xor
mov
xor
loopne
mov
cmp
and
inc
xor
push
jle
push
arpl
ret
loop
sub
mov
shll
fs
mov
push
lods
cld
cmp
push
or
pop
orb
xor
push
mov
push
add
sub
test
push
add
sbb
mov
cltd
sub
jge
lods
scas
cmp
pop
jns
push
xor
mov
push
cltd
or
inc
cmp
lret
sbb
or
add
add
sbb
ljmp
pop
dec
imulb
pop
adc
test
loopne
dec
mov
inc
or
mov
mov
insl
shl
pop
sahf
inc
sbb
aad
adc
jne
jp
or
dec
shrl
sub
loope
mov
sub
jae
sub
pop
or
hlt
sbb
sahf
mov
clc
mov
shlb
push
mov
fimuls
cwtl
or
lock
push
and
fiadds
testb
jb
and
repz
rcll
sub
mov
adc
nop
add
data16
mov
sub
inc
or
shl
leave
add
mov
fwait
push
inc
mov
adc
stos
icebp
pop
fisttpll
push
pop
sub
jle
in
cli
or
mov
rorb
js
inc
int
add
sub
pop
inc
cmpsl
faddp
inc
outsl
or
sub
out
leave
add
out
jbe
aam
dec
mov
jb
add
popa
rorb
cli
cs
dec
sbb
jg
xchg
jae
or
popa
mov
push
mov
sti
inc
je
popa
jae
test
ja
xor
mov
xor
push
std
add
mov
jl
dec
push
repnz
pop
push
into
xchg
shlb
xlat
add
in
les
or
mov
adc
jnp
adc
fcomps
shl
push
mov
pop
daa
sbb
cwtl
ljmp
cmp
bound
in
js
inc
push
push
inc
loop
jb
mov
mov
xor
enter
scas
mov
sub
mov
lods
mov
push
jae
sbb
test
pop
jecxz
push
push
mov
stos
xor
icebp
icebp
mov
inc
loope
out
or
outsl
inc
loope
lds
rcl
pop
xchg
and
mov
xchg
sub
rcl
add
add
sub
jg
mov
mov
shrl
rolb
push
push
divl
pop
dec
rcll
mov
pop
mov
jo
mov
outsb
es
sbb
pop
sub
jmp
pop
lods
das
leave
add
xor
paddusb
addl
pop
scas
xchg
jns
xor
shl
jmp
cltd
pop
xchg
in
lds
aas
pop
jae
adc
jmp
cmp
fisttpl
sahf
leave
imul
pop
scas
jle
movsb
and
sbb
add
push
mov
fsubrs
jge
scas
rcll
dec
xor
mov
and
pop
sub
mov
fisubrs
js
pop
test
icebp
and
inc
or
cmp
popa
test
rclb
clc
stos
push
xor
adc
sub
cmp
cmp
das
adcb
outsb
cmp
dec
scas
call
jecxz
mov
popa
lahf
pop
lock
xor
loopne
or
lahf
rolb
inc
sbb
movsb
popa
sar
shll
sbb
push
aas
or
lock
xor
dec
sub
rolb
iret
movsl
sbb
jno,pn
out
jno
push
xor
xchg
push
std
mov
movsl
call
push
inc
or
ret
dec
push
insl
nop
stos
stc
sub
and
cltd
movsb
jecxz
xchg
ret
nop
jmp
loopne
mov
in
mov
or
adc
popa
adc
inc
shll
cmpsb
add
add
cmp
add
mov
push
push
out
mov
int
mov
ljmp
sbb
and
ljmp
js
aad
sub
sbb
lcall
push
je
mov
or
aam
cmp
jl
mov
mov
push
loop
bswap
aam
cwtl
xchg
cmp
adc
iret
push
lods
add
cmpsl
dec
repz
cltd
js
jge
movl
rclb
bnd
add
test
roll
push
jo
add
mov
xor
out
push
cmp
add
sub
push
dec
or
xor
fimull
faddl
pusha
test
fstps
ret
xchg
sub
mov
mov
add
in
lods
fcoml
jp
lret
or
icebp
push
hlt
push
pop
mov
mov
cltd
stos
pop
lds
xor
out
pusha
mov
inc
xchg
icebp
lods
push
shlb
push
push
lods
mov
inc
jl
adc
pop
addl
pusha
mov
add
add
jne
adc
mov
adc
pop
je
add
mov
scas
js
movlps
frstor
jge
inc
pop
adc
sbb
pop
lret
sub
psubw
pop
fmul
jae
pop
cli
les
adc
lea
jo
xchg
test
sub
or
rclb
shlb
xchg
cmp
imul
mov
ss
sahf
nop
shr
mov
ret
and
stos
test
dec
aam
popf
cmp
das
jb
leave
cli
imul
cmpsb
iret
push
ss
adc
xor
cmp
inc
xor
mov
mov
push
and
push
or
inc
sbb
adc
and
repnz
mov
adc
cmp
mov
push
leave
mov
in
into
leave
andps
imul
push
aam
or
push
movsb
daa
and
add
and
loop
mov
pop
out
or
jp,pn
push
popa
sbb
adc
mov
adc
testb
mov
inc
push
pop
push
mov
sbb
or
add
dec
movl
ret
or
mov
add
or
js
ret
shlb
xor
sub
ss
sub
mov
adc
lods
add
mov
add
pop
addr16
in
cmpsb
test
aaa
shlb
dec
pop
scas
sub
sbb
cwtl
rorl
push
mov
mov
adc
jne
add
jae
mov
ret
pushf
aaa
pop
cmp
and
jnp
dec
jne
hlt
adc
lret
pop
adc
sub
aad
stos
push
mov
adcl
inc
adc
test
mov
cltd
adcb
pop
mov
adc
adc
jb
sbb
mov
cmp
jb
lods
or
push
cmp
mov
dec
inc
pop
or
pusha
inc
and
adc
and
or
sub
rcrl
sub
cs
pop
adc
push
cmpsb
or
jo
daa
int
add
andl
sbb
mov
popa
int3
dec
adc
les
sbb
xchg
test
sub
into
or
jb
call
pop
roll
cmc
inc
push
mov
clc
inc
popa
cmp
pop
sbb
or
js
shll
mov
mov
mov
mov
ficompl
xor
push
orl
or
cs
adc
add
inc
pop
ror
jae
and
test
scas
add
sbb
sub
inc
cmp
inc
adcl
dec
xchg
insb
cltd
orb
add
jo
aaa
xor
ss
pop
fisubrl
ret
mov
mov
in
mov
cmpsb
and
xchg
xor
dec
mov
push
movb
add
inc
enter
cmp
xor
add
xor
out
push
inc
push
clc
rcrb
test
addr16
or
idiv
into
aad
push
test
imul
push
dec
pcmpeqb
adc
dec
loopne
adc
sub
pop
aad
mov
xor
cmp
push
repz
rolb
add
push
loopne
mov
jnp
pushf
pop
push
jge
lcall
xchg
and
andb
cli
mov
subb
addr16
mov
push
adc
ljmp
std
cltd
test
push
rclb
adc
jne
add
jbe
mov
xor
or
dec
out
cmc
shll
and
rol
out
jae
inc
xchg
stos
push
push
in
sbb
pop
push
mov
jmp
es
xor
adc
inc
decl
mov
icebp
je
dec
loopne
cs
push
mov
sub
mov
adc
or
out
adc
pop
mov
cmp
push
cwtl
sbbb
ret
push
push
add
scas
push
in
test
xor
hlt
jmp
push
jo
stos
or
sbb
pop
mov
test
cmp
call
dec
adc
jne
mov
enter
mov
int3
mov
inc
sar
adcl
dec
xchg
leave
adc
sbb
inc
mov
shll
dec
sti
jmp
jg
stos
imul
fwait
jg
cmpsl
inc
sbb
adc
cmp
rclb
cwtl
loop
mov
adc
push
fildll
xlat
dec
loop
test
sbb
push
es
dec
mov
dec
mov
xorl
push
es
decb
repz
std
mov
mov
bound
pop
push
jnp
sbb
sbb
sbb
or
mov
mov
test
andl
dec
iret
inc
hlt
aad
pushf
sub
ret
addb
nop
mov
icebp
or
add
push
mov
pop
loop
rcrb
adc
pop
inc
cmp
push
add
add
or
inc
dec
je
es
mov
ja
sbb
and
fmuls
shrl
jo
pop
addb
shrl
mov
aas
cs
in
adc
pop
push
subb
roll
ret
enter
jo
lods
dec
pop
scas
add
push
add
lret
jl
cmpb
leave
mov
xorb
orb
in
or
sub
jno
dec
dec
std
adc
cmp
adc
movsl
dec
ret
push
cmp
cli
add
gs
mov
enter
pop
cs
jno
add
movsl
xchg
sbb
dec
adc
sbb
add
mov
cmp
lahf
and
and
xchg
sbb
jle
push
pop
or
and
mov
or
adc
out
lods
push
popa
iret
jp
adc
push
enter
mov
push
or
add
addl
ret
scas
dec
call
push
xchg
ret
jb
daa
mov
cmp
inc
stos
inc
push
xor
push
nop
mov
ret
and
dec
mov
or
mov
roll
push
sbb
rol
or
and
aad
push
enter
sbb
jp
pop
pop
cs
xchg
jnp
sbb
jbe
andl
or
sbb
adc
adc
jge
xor
shlb
push
daa
cmp
pop
lcall
cmpb
je
add
xor
sbb
sub
bnd
add
mov
mov
arpl
adc
push
dec
cmp
fldcw
arpl
popw
cmp
ljmp
or
lret
and
nop
pop
nop
mov
in
dec
adcl
loopne
sbbl
fs
movb
std
ljmp
push
out
pop
scas
mov
leave
dec
adc
lahf
in
or
addr16
jmp
mov
lods
sbb
popf
mov
je
rcrb
aam
test
jp
sbb
xchg
icebp
out
int3
xchg
add
cwtl
lds
cmpl
lods
sbb
adc
jae
pop
rol
jle
jg
mov
je
test
push
dec
adc
cmp
pop
add
adc
jo
push
insb
inc
scas
js
loope
or
push
cmpsb
addr16
push
mov
faddl
mov
in
fisubs
ljmp
xor
and
mov
mov
sbb
and
add
aam
mov
mov
dec
fldt
mov
mov
sbb
cmp
stos
enter
xchg
or
add
or
add
inc
mov
mov
adc
out
adc
or
sbb
pop
bound
xchg
es
dec
stos
pushf
arpl
cmpsl
push
push
loop
add
or
pop
shrb
mov
pop
mov
ficomps
push
xor
rcll
and
shll
xor
in
mov
jnp
les
and
adc
add
pop
daa
mov
rclb
mov
mov
fcomi
cmp
jnp
aad
jmp
pop
cmp
mov
and
sub
xor
stos
xchg
jl
mov
call
mov
int
or
call
cmpsl
xor
fwait
mov
push
aaa
xlat
dec
jp,pn
shlb
mov
mov
lea
mov
mov
fwait
inc
and
pop
inc
test
push
test
pop
push
stos
test
je
or
and
adc
popa
enter
mov
sbb
leave
fimuls
orl
cmp
mov
repnz
xor
sbb
push
xor
pusha
mov
mov
rclb
push
in
cmpl
loop
bound
loope
pop
push
inc
adc
push
sahf
jae
push
aam
mov
adc
push
call
cmp
sub
push
clc
enter
rcll
jae
mov
push
mov
xchg
ds
fisubs
pop
shlb
cmp
pop
jbe
add
sub
jae
mov
mov
sbb
pop
filds
ds
push
mov
mov
pop
mov
xchg
sub
aad
dec
xchg
push
aam
dec
or
adc
dec
enter
jb
push
mov
andl
inc
cmp
mov
xchg
movsb
pop
orb
inc
or
leave
sub
stos
scas
mov
cli
push
adcl
dec
mov
cmp
adc
pop
shlb
adc
jno
das
mull
cmp
mov
cmp
or
or
repnz
femms
inc
mov
rolb
cmp
inc
add
xor
push
ret
dec
cmp
and
inc
push
cld
or
adc
mov
pop
in
or
call
mov
cld
out
cmp
test
adc
js
push
loop
or
xchg
sbb
mov
dec
xchg
subl
jno
jo
push
add
cmp
mov
inc
xchg
or
outsl
dec
jge
je
mov
or
cwtl
fsubs
adc
dec
js
mov
adcb
xor
jnp
push
push
les
movsl
ret
inc
mov
ret
mov
es
add
add
loope
sbb
aaa
jnp
and
inc
cmp
cmc
addb
lods
test
mov
rep
sar
push
sub
cli
rdtsc
or
negl
add
or
add
push
pop
push
cli
dec
sarb
pop
sub
jne
or
mov
test
jns
mov
mov
pop
mov
xor
jno
inc
mov
mov
push
adc
mov
xor
xchg
jge
cltd
add
pop
push
aad
add
pop
fucomp
pop
inc
and
dec
les
inc
jne
movsl
mov
adc
add
add
sahf
mov
mov
or
test
cli
or
shll
pop
pusha
pop
or
pop
and
cmp
adc
dec
mov
push
mov
movsl
sbb
add
push
or
xor
lods
xchg
push
pop
add
dec
ret
cmp
ret
pop
push
cmp
mov
lea
push
int3
test
pop
sarb
pop
push
inc
rcrb
push
add
in
pop
mov
push
lock
jge
ret
mov
sbb
int
movsl
sbb
pop
sar
sbb
or
add
mov
adc
adc
ficoml
sub
adc
call
loopne
cmp
jge
adc
fdivl
outsl
sbb
repnz
push
movsl
loop
jl
arpl
or
push
sbb
cmp
cmpsb
aam
testb
or
stos
or
push
mov
clc
push
push
rcrb
or
cmp
and
and
mov
xchg
sub
rcll
or
adc
mov
test
push
call
xor
pop
mov
imul
push
mov
push
jp
adc
repnz
pop
adc
adc
adc
pop
repnz
sahf
xchg
and
or
test
mov
jne
lods
xor
adc
cmp
pop
shll
inc
xchg
mov
push
or
mov
mov
cmp
mov
add
ja
mov
push
ret
scas
cmp
cli
fdivr
add
sub
mov
adc
or
loop
popa
pop
mov
idiv
or
pop
shrb
add
xor
sbb
out
into
mov
xchg
inc
pop
xor
xchg
jb
orb
or
mov
or
orb
inc
xor
xor
mov
push
jnp
aam
or
fcoms
adc
dec
cmpsb
mov
inc
ss
enter
adc
sub
xchg
jle
mov
scas
mov
add
test
je
subl
pop
nop
and
jb
icebp
hlt
in
add
xor
jl
cwtl
daa
shlb
or
add
ljmp
sbbl
pop
out
add
orb
std
mov
jnp
cmp
movb
dec
sbb
add
push
pushf
sub
sbb
loopne
setae
mov
cmpl
pushf
ljmp
push
stos
repnz
bound
mov
and
popa
test
add
inc
pop
inc
xchg
mov
mov
xchg
roll
sub
xchg
add
pop
mov
ror
or
inc
xor
imul
mov
and
loopne
es
xor
testl
addb
pop
outsb
pop
leave
das
add
jae
imulb
test
add
and
adc
lods
push
lock
sub
scas
inc
imul
cmp
adc
pop
sub
push
js
or
and
outsb
imul
pop
cmpb
sub
aad
add
add
xor
loope
dec
test
mov
add
mov
mov
xor
pop
subb
push
rcrb
jbe
mov
mov
jb
test
sub
add
test
cmp
xchg
inc
mov
mov
adc
popa
dec
notb
mov
shrb
and
test
mov
insl
movb
pop
inc
addr16
sbb
jo
pop
inc
xor
sahf
clc
andb
pop
sbb
sub
push
xchg
xchg
lods
mov
rcr
pop
and
inc
sbb
aas
add
test
inc
adc
cmp
daa
mov
sub
pop
sub
sbb
pop
inc
daa
adc
push
jg
roll
xchg
rclb
inc
in
xchg
nop
xorl
arpl
dec
cmp
notl
aam
dec
mov
dec
fstl
sub
loopne
fisubl
push
pusha
cmp
repnz
mov
clc
adc
pusha
push
pop
aam
mov
adc
inc
xor
push
xor
cmp
sub
push
les
push
jnp
xlat
sbb
mov
mov
inc
lods
push
mov
add
pop
xchg
or
mov
mov
mov
sub
mov
mov
pinsrw
cld
imul
fcompl
cmp
gs
adc
mov
push
jne
pop
stos
or
popf
mov
repz
js
pop
daa
movsb
gs
mov
or
push
push
cmp
mov
or
sbb
ljmp
xor
es
cmc
adcl
test
aam
lcall
cmp
or
sub
int
dec
movsl
enter
outsb
ret
push
mov
pextrw
jo
aam
mov
inc
xor
pop
aad
mov
mov
dec
test
pop
or
icebp
rcrl
sub
inc
repz
sbbb
cwtl
sbb
sbb
test
lea
outsl
or
lock
mov
subl
push
shrb
dec
pusha
jb
mov
adc
mov
test
mov
push
jg
sbb
shlb
adc
in
add
adc
or
mov
add
mov
jnp
stos
stos
xor
lock
xlat
test
sub
inc
and
ret
xchg
addl
jl
push
or
pop
cli
or
push
mov
sbb
stos
dec
sbbb
mov
call
test
adc
sbb
loop
imul
inc
cmp
cmp
cmp
sahf
in
enter
pop
addr16
pop
lods
push
mov
test
inc
dec
inc
push
test
movsl
out
add
scas
or
int
cmp
fimull
sub
adc
gs
xorb
lock
sbb
inc
out
inc
lock
inc
cmp
pop
rcll
push
into
ret
mov
sub
and
xchg
sahf
or
lcall
lcall
push
add
push
xchg
inc
mov
sbb
pop
in
sub
pop
cld
cmp
push
shl
sbb
pop
lret
or
mov
lea
inc
fwait
packsswb
stc
adc
xor
jb
or
sub
roll
push
inc
push
push
shl
inc
pop
lcall
mov
push
xor
dec
icebp
fisttpl
and
arpl
cmpsb
cwtl
add
aaa
mov
cmpb
pop
jbe
pop
je
das
rclb
test
push
sbb
jo
pop
sahf
nop
fldenv
dec
xor
add
aad
cmp
cs
mov
insl
rorl
add
loope
sahf
add
ret
test
push
inc
rcll
dec
mov
out
push
xor
icebp
or
pminsw
rolb
jp
lret
aaa
push
jnp
dec
popa
mov
inc
xlat
push
je
lret
bound
mov
or
mov
aas
sbb
sbb
xchg
call
xchg
sbb
push
inc
cwtl
sub
rclb
pop
sbb
bound
clc
imul
xchg
mov
add
push
sub
lcall
or
hlt
push
enter
test
ficoml
sbb
push
inc
push
ret
add
push
adc
push
mov
movsb
orb
test
test
call
mov
std
add
lret
sub
ret
mov
dec
test
rorb
rolb
jge
inc
or
loope
lock
into
mov
cmp
lret
push
xor
nop
or
je
pop
jae
or
push
mov
jae
xor
mov
mov
loop
ds
push
lods
xchg
inc
mov
pop
dec
fs
sub
dec
push
xchg
ror
loop
cwtl
aam
pop
les
add
sar
lods
xor
jp
xor
mov
xchg
sub
xor
sbb
pop
gs
pop
sbb
sub
push
lock
inc
loopne
xor
mov
jle
in
mov
rcr
pop
out
add
inc
daa
push
cmp
push
stc
add
sbb
sbb
inc
pop
or
xor
xchg
shrb
jg
mov
xor
jge
inc
cli
mov
lret
ret
test
xchg
adc
push
leave
add
pusha
sub
outsb
sbb
add
push
and
mov
add
adc
push
mov
rcr
aad
mov
inc
lret
adc
sub
add
jne
or
adc
inc
cmpsl
sbb
xchg
add
and
lret
mov
inc
sbb
pop
mov
cmpsl
into
jecxz
rclb
add
push
and
jecxz,pn
sar
or
xchg
mov
inc
lods
xor
adc
add
test
sbb
pop
pop
add
mov
xor
push
jp
and
cmp
dec
mov
in
or
jmp
add
mov
mov
loope
or
roll
and
push
adc
dec
sub
mov
dec
xor
mov
mov
nop
leave
orb
push
into
andb
invd
add
xchg
jne
popa
pop
insl
push
mov
popa
icebp
lods
push
scas
push
xor
stos
out
jp
andb
inc
shll
sub
loopne
pop
mov
sub
sbb
xor
sbb
add
pop
les
inc
cmp
cmp
or
xor
push
push
shl
or
adc
pop
or
push
stos
add
dec
hlt
xchg
imul
movsb
ds
xchg
and
sbb
and
adc
or
dec
inc
lock
fs
aaa
and
mov
jb
icebp
add
adcb
jecxz
lcall
aaa
imul
dec
mov
jmp
or
xchg
test
adc
rcr
add
push
cmpsb
push
inc
dec
testl
push
gs
repz
push
enter
mov
into
or
int3
loopne
mov
mov
lret
dec
test
xlat
pop
mov
add
cld
push
pop
aam
cmp
iret
jmp
cmp
sbb
add
sbb
pop
scas
push
repnz
or
inc
out
jge
mov
xor
rorb
add
mov
push
sbb
mov
shrb
icebp
sbb
xorb
adc
jbe
dec
scas
add
dec
addl
or
mov
ljmp
scas
sbb
aad
mov
nop/reserved
or
pop
lods
sbb
or
mov
rclb
dec
leave
and
pop
sarb
les
add
or
or
inc
pop
aas
pop
push
inc
pop
inc
push
aam
push
pop
test
into
shr
notl
mov
das
inc
xor
cmp
push
push
push
pop
dec
in
jae
lock
call
inc
push
cli
sbb
mov
mov
pop
mov
dec
aas
lcall
mov
icebp
push
jmp
jo
fisttpll
add
shll
pop
jae
mov
mulb
cmp
sub
push
or
sbb
sbb
sub
sbb
subl
fmull
push
inc
pop
mov
push
jmp
test
sti
sbb
mov
or
cmp
jecxz
add
or
inc
xlat
or
test
fiadds
inc
jg
jg
stos
es
or
cmp
adc
xor
mov
jb
and
and
mov
dec
inc
dec
xor
mov
out
add
mov
adc
xchg
mov
mov
stos
add
jo
push
xchg
cmp
cltd
xor
out
push
adc
cmpsl
push
add
outsl
fildll
in
pop
punpcklbw
adc
ret
add
rclb
mov
ret
insl
jle
push
push
popf
lods
movl
cmp
fsubs
push
dec
into
ret
cmp
jecxz
and
sbb
scas
adc
push
adc
mov
fs
fwait
test
jmp
or
xor
daa
add
sbb
sub
push
inc
xor
clc
mov
arpl
or
inc
xchg
lds
test
sbbb
jne
adc
sub
or
adc
pop
les
mov
sahf
mov
push
push
adc
adc
pop
pushf
adc
jo
sub
adc
addb
cmp
or
xchg
add
or
adc
lcall
outsb
inc
add
inc
adc
sbb
adc
decb
inc
fwait
repnz
inc
pop
inc
test
lds
sbb
sbb
mov
lret
test
jmp
ret
popf
xor
mov
fldenv
pop
pop
imul
push
leave
cmp
clc
enter
mov
mov
lock
sbb
js
fcoms
jge
jl
scas
fwait
jb
popa
adc
notb
xchg
push
movsl
nopl
xor
call
push
pop
and
and
xor
push
pop
ss
adc
push
mov
popa
sub
jp
test
sub
push
negb
jmp
ror
sbb
test
push
xchg
sbb
das
push
sbb
andl
fildll
mull
xor
inc
add
and
xchg
ret
pop
hlt
mov
adc
xor
incl
pop
lods
jo
pop
push
mov
mov
sbb
das
aad
rcr
adc
add
sbb
sbb
inc
iret
mov
add
lcall
xchg
xor
mov
add
sbb
adc
movl
push
add
stc
aam
inc
mov
add
pushf
cli
mov
mov
lds
add
lods
ret
sub
xor
aad
rclb
mov
dec
lds
inc
and
subb
push
add
fucomp
push
push
sub
mov
loop
add
pop
or
hlt
ret
add
stos
add
inc
orb
fs
outsb
pop
insl
call
ficompl
scas
rclb
sbb
adc
adc
gs
dec
push
jae
fs
loopne
pop
add
out
cmp
es
inc
xchg
push
mov
jmp
popf
add
dec
xchg
stos
out
repz
addb
jge
adc
sbb
icebp
loop
xchg
nop
mov
push
or
dec
les
dec
xchg
ljmp
mov
cmp
mov
sbb
cmpl
in
pop
inc
add
test
ljmp
imul
faddl
loopne
movsb
or
or
in
push
mov
sub
push
xor
ret
xchg
push
aam
mov
je
dec
rol
sbb
mov
sbb
inc
stos
jo
dec
popf
fdiv
add
loopne
mov
add
push
sbb
ret
rorl
or
adc
add
lock
inc
aam
rolb
add
adc
ret
inc
inc
cmp
mov
mov
add
repnz
sbb
out
cmp
add
mov
jmp
rclb
mov
sbb
mov
shrb
test
ret
scas
aad
imul
jl
mov
int
inc
inc
stos
sbb
add
enter
pop
inc
push
pop
xchg
sbb
mov
cltd
push
ljmp
sbb
adc
adc
adc
and
leave
sbb
lods
pop
xor
test
or
push
lret
xor
jmp
inc
push
orw
call
shrl
jnp
add
inc
sub
test
inc
push
inc
xor
push
mov
add
add
pop
add
in
adc
mov
or
adcl
sub
and
daa
cltd
xchg
add
mov
cmpsb
ret
inc
sbb
and
mov
bound
daa
sti
dec
icebp
subb
mov
inc
int
add
push
xchg
mov
or
out
ss
stos
inc
je
adc
add
adc
cltd
add
add
push
inc
mov
stos
hlt
cmp
stos
xchg
out
pop
xor
dec
roll
data16
iret
push
or
sbb
cltd
fiaddl
jnp,pn
push
loope
movb
lcall
sub
test
or
cmp
adc
idivl
pop
shl
xchg
stc
ret
sbb
or
mov
and
sbb
pop
or
push
dec
push
pop
or
push
fsubr
mov
gs
push
stc
pop
add
loope
das
shll
and
push
std
ljmp
imul
nop
sub
or
add
xchg
lock
xor
test
push
push
jecxz
xchg
dec
add
dec
xorb
imul
ss
shll
fcomps
mov
je
push
jbe
adc
scas
sbb
and
call
loope
mov
add
cwtl
xor
push
xchg
pushf
mov
or
xchg
fs
cmp
clc
mov
jo
sbb
mov
mov
fildll
loop
or
push
sahf
jo
mov
shlb
jb
pusha
stos
sbb
mov
xorb
mov
sbbl
sbb
mov
call
adc
mov
hlt
subl
xor
adc
hlt
or
inc
and
pop
adc
adc
jp
push
orl
sub
insb
lret
call
jno
test
loope
test
stc
cli
ficompl
fmul
push
jmp
inc
adc
or
rcll
mov
es
add
into
test
lock
mov
mov
adcb
add
mov
or
adc
xchg
lret
or
add
mov
test
movsb
sub
adc
pop
insl
pop
aam
arpl
sbb
push
jnp
add
out
xchg
add
xchg
cwtl
stos
divb
fwait
stc
mov
gs
in
or
mov
lret
nop
mov
xchg
adc
aad
mov
lds
dec
push
sub
inc
shrl
sbb
xor
jbe
imul
loop
add
idiv
scas
lods
xor
insb
into
and
mov
popa
push
inc
into
lock
paddq
pusha
adc
xchg
xor
std
xor
adc
add
pop
adc
cmpsl
inc
lock
xchg
inc
and
push
jo
or
das
cli
sub
add
xor
or
rolb
jg
cmc
clc
cmp
fdiv
sbb
dec
pushf
mov
mov
testb
mov
orl
push
std
xchg
add
test
add
fiaddl
sti
roll
aaa
cs
adc
inc
mov
leave
std
call
ret
mov
repnz
push
fcomps
xlat
add
scas
add
daa
mov
sarl
push
fmul
push
and
icebp
stc
or
mov
jbe
inc
sarb
sub
mov
lods
rorb
mov
push
or
rclb
call
and
cmpsl
sbb
jmp
mov
lea
inc
xor
ret
call
sbb
add
push
popf
sbb
gs
rcr
sbb
inc
dec
push
push
push
sub
sbb
adc
mov
fbstp
adc
add
and
loop,pt
xor
pop
enter
xlat
sbb
stos
cmp
scas
xchg
push
push
adc
adc
adc
xor
push
sbb
int
xchg
mov
stos
and
addl
out
sub
sub
xlat
inc
sti
pop
in
int
push
mov
loop
int
stc
hlt
jae
dec
test
rcrl
and
mov
dec
sub
test
loop
jno
pop
sbb
mov
out
add
jb
push
xor
xchg
call
sub
dec
cmp
js
call
clc
add
push
pop
popa
ljmp
or
rcrb
lret
adc
ret
div
push
shrb
push
insl
pop
mov
daa
pop
leave
or
cmpsb
or
jp
xor
or
int3
out
dec
scas
adc
test
push
andb
xlat
mov
fsub
or
movsl
shrb
or
and
enter
mov
test
cmc
mov
inc
sbb
xor
mov
fimuls
ret
or
sbb
mov
lock
mov
push
andl
cmp
pop
mov
xchg
cmp
add
push
mov
mov
lret
into
push
stc
add
add
cs
out
clc
add
shlb
sub
add
inc
mov
data16
jb
cmp
clc
pop
sbb
push
int3
mov
cmp
adc
sub
popf
add
adc
sbb
add
sbb
xchg
loop
mov
adcb
add
adcb
fsts
jne
push
je
inc
mov
loopne
out
pusha
repnz
push
fadds
push
inc
add
push
sar
push
fwait
sub
bound
push
cs
adc
test
inc
je
dec
and
fistpl
inc
mov
jp
inc
movsl
inc
test
sbb
pop
xlat
into
rolb
and
dec
bound
test
outsl
push
test
cltd
push
sbb
les
sub
repz
xlat
adcb
or
add
cltd
enter
cmpl
addl
sbb
mov
ljmp
les
sub
lcall
or
clc
or
lock
rclb
popf
inc
or
or
push
inc
pop
jge
sbb
push
sub
cli
inc
int3
daa
ja
push
add
adc
xchg
mov
and
sbb
or
pop
xor
and
nop
mov
and
icebp
jp
or
adc
pop
inc
mov
mov
or
jo
adc
movsb
pusha
adc
add
rolb
fwait
mov
daa
jmp
aas
scas
sbb
sarb
rcll
stc
ret
inc
psubsb
je
negl
sbbb
addb
outsl
and
adc
mov
pop
mov
pop
and
mov
xor
or
push
shl
fs
cmp
cmovle
sub
pop
inc
pushf
pop
mov
dec
sbb
pop
add
int
gs
jb
or
loopne
mov
or
add
sub
andl
ja
push
sub
loope
mov
dec
cmp
adc
adc
cmpsl
dec
push
pop
add
movsb
push
test
aas
icebp
pop
adc
push
add
add
sub
shl
push
rolb
and
or
or
ret
lcall
inc
inc
cmp
adc
ret
js
push
add
xor
add
in
adc
pusha
pop
adc
jge
lret
shlb
mov
out
sub
imul
or
ret
pop
lds
rorb
ret
mov
add
jp
and
ret
sub
int3
mov
mov
enter
sbb
xorb
sub
pop
push
inc
push
and
add
cli
pop
or
adc
lret
mov
lock
cmp
xchg
leave
mov
int
sub
cmp
or
jp
es
test
mov
or
adc
loop
ffree
push
push
stos
push
adc
or
adc
lcall
or
sub
inc
push
or
pop
cmpl
pop
push
loope
mov
enterw
xchg
push
enter
dec
not
sbbb
pop
or
cmp
mov
jecxz
mov
int
ret
cmp
icebp
or
pop
xlat
out
push
xchg
cmc
jb
sbb
inc
loope
loope
movsl
es
lods
in
inc
sbb
dec
sahf
push
stos
sbbb
arpl
pop
xor
adc
lods
popa
xchg
add
stos
stos
cmp
stos
push
mov
jae
scas
push
rolb
cmc
mov
push
and
or
jne
loopne
xor
inc
fbld
cli
push
and
les
cmpsl
sub
daa
hlt
leave
es
inc
ret
mov
jl
cmpsb
fisttpll
xchg
rorl
xchg
loope
stos
mov
mov
shrl
mov
mov
add
out
js
jb
in
sbb
sbb
and
pop
jno
xchg
mov
sub
or
dec
test
loopne
push
or
pop
js
or
mov
xchg
mov
add
pop
mov
add
popa
pop
std
testb
adc
rorb
sbb
push
inc
mov
pop
add
adc
mov
leave
add
scas
mov
push
push
leave
cmp
negl
push
dec
lret
in
and
cltd
or
jo
mov
pop
ret
inc
xchg
pop
cmp
outsb
repnz
dec
inc
and
push
fucom
or
enter
jp
or
ljmp
enter
xchg
ljmp
insl
pop
rcrl
popa
pop
adc
cmp
adc
data16
mov
sbb
sti
icebp
adc
adc
subb
push
cld
push
cmpsb
push
sub
mov
or
scas
pop
xlat
sbb
cmp
jl
testb
dec
mov
sahf
cmp
xlat
lret
or
sub
sbb
add
dec
add
lret
int
mov
xchg
stos
inc
add
pop
mov
and
add
dec
sar
idiv
mov
mov
push
mov
int3
push
sbb
icebp
imul
xchg
pop
movsb
inc
sub
push
inc
dec
mov
jno
pusha
ret
lcall
inc
push
mov
xchg
jecxz
lret
ljmp
inc
xor
adc
adc
or
inc
xor
bound
push
ret
dec
arpl
fiaddl
dec
adc
push
push
xchg
adc
mov
mov
pop
mov
ja
cli
pop
mov
test
rol
into
imul
adcb
add
pop
pushf
lret
adc
xchg
push
adc
add
mov
dec
loop
punpckhbw
push
jne
push
dec
sbb
orb
add
inc
mov
insl
add
or
sbbl
jo
cmpsl
pop
and
inc
cmpsb
inc
dec
insb
lahf
fldenv
pop
clc
pop
dec
ret
inc
cmp
popf
ffree
nop
push
orb
rolb
lods
test
inc
adc
inc
sbb
je
jb
enter
shl
push
sub
mov
dec
gs
add
jge
bound
fists
inc
add
in
add
ret
lret
push
sub
cmp
mov
lds
lods
inc
in
sti
and
cmp
push
stc
popf
lret
shrb
or
sbb
xchg
xchg
xor
xor
ret
mov
dec
lret
and
ljmp
clc
and
push
aam
sub
push
sub
out
adc
push
cmc
xor
movl
jo
lds
mov
mov
cmp
dec
fsub
adc
jmp
scas
cmp
mov
data16
js,pt
xchg
pop
inc
xor
stos
lds
or
or
mov
adc
clc
sbb
test
push
add
in
inc
icebp
add
xchg
pushf
popf
adc
mov
cmpsl
xor
loope
pop
add
jmp
mov
out
inc
xchg
in
sub
and
mov
subb
adc
lret
xchg
shll
or
lret
inc
repnz
aam
adc
aaa
lahf
sub
cmp
rclb
clc
dec
cmp
push
fmuls
and
or
adc
imul
negb
xor
inc
orl
dec
xchg
pop
mov
mov
pop
inc
shll
inc
push
xor
mov
lea
xchg
jge
ljmp
mov
adcl
xchg
jg
inc
out
dec
into
cmp
mov
or
imul
add
dec
add
mov
pop
aas
pop
or
rorl
out
into
enter
jno
mov
adc
mov
or
inc
or
dec
loope
ljmp
adc
mov
sub
mov
sbbb
mov
outsl
flds
cli
fisubrs
popa
dec
mov
push
addb
sub
das
test
and
pop
push
test
xor
fisubl
dec
pop
inc
add
or
subl
push
call
out
in
add
pop
shl
cli
jae
xor
popa
rolb
lock
nop
adc
lds
cli
adc
push
push
fsubl
push
mov
icebp
or
jl
sbb
sbb
out
outsb
mov
test
sti
pop
in
push
cmp
push
inc
or
adc
sbb
int
enter
inc
push
cltd
jo
daa
add
xchg
adc
orb
mov
push
push
leave
leave
std
rcrl
inc
sbb
pusha
push
mov
mov
mov
mov
push
mov
mov
pop
test
sbb
mov
cltd
lea
and
lock
inc
jmp
cmpsb
adc
cmp
loop
es
inc
js
mov
push
rolb
fld
pop
pop
and
and
xchg
sbb
out
push
mov
dec
push
mov
jmp
cmp
add
and
add
pop
sub
roll
and
int3
insl
aad
ljmp
enter
cmp
adcl
jo
jge
leave
insb
xchg
mov
leave
xchg
add
pop
dec
js
mov
jnp
and
add
xchg
cli
or
dec
push
or
dec
mov
enter
test
xor
enter
adc
addr16
add
enter
test
sub
pop
test
or
and
mov
pop
test
lds
lea
in
stc
cwtl
test
sub
jl
nop
stos
push
inc
sahf
lods
sbb
std
cmp
out
ret
dec
pop
out
sbb
add
je
sbb
test
cmp
push
mov
xchg
sbb
pop
jl
out
add
into
sub
push
jo
push
xchg
mov
test
mov
cmp
ret
jne
pushl
or
push
adc
push
call
sbbl
lret
add
rclb
test
sarl
cmp
into
push
adc
leave
inc
in
aaa
mov
lock
push
imul
mov
call
mov
test
mov
ja
push
add
and
mov
xor
add
pop
into
xchg
popa
mov
dec
mov
out
add
fwait
jb
mov
xchg
inc
mov
jnp
mov
push
push
mov
or
cltd
sub
dec
mov
repnz
stos
cmp
push
jne
iret
nop
sbb
or
push
addl
call
pop
rcll
cs
repnz
scas
adc
push
cmp
loopne
addb
add
inc
hlt
and
push
pop
add
cmp
jbe
iret
add
adc
sbb
sub
cs
add
dec
adc
sbb
lods
repnz
sbb
push
test
add
cmpsb
mov
jl
ret
xchg
call
jne
pushf
leave
inc
aas
jecxz
mov
popa
faddp
pop
rcrb
test
sub
dec
add
in
mov
nop
and
imul
shll
scas
jb
test
dec
scas
mov
psllq
loope
inc
and
int
mov
scas
sbb
adc
aam
lock
clc
ljmp
mov
cs
rdmsr
cmp
test
pop
sbb
inc
push
cmp
mov
in
pop
jo
test
sbb
xor
mov
or
sub
inc
pop
xchg
fists
lret
or
pop
mov
jecxz
out
fstpl
shl
mov
sar
xlat
xor
add
dec
jne
stos
inc
fisttps
js
push
rorb
lcall
pop
stos
sub
and
sub
and
pop
and
orb
and
mov
push
cmp
dec
add
adc
adc
enter
jb
push
inc
lods
jmp
shlb
or
inc
movsb
add
sbb
push
sbb
mov
rcrb
mov
movsl
lret
testb
push
add
rorb
mov
inc
mov
stos
jne
insl
add
rcll
negl
push
pop
test
xchg
into
clc
cmpsb
adc
inc
daa
movsl
js
add
push
popf
rcll
cmc
or
adc
adcb
cmp
testb
xlat
loope
loopne
mov
dec
pop
js
cmp
iret
cmc
add
mov
mov
insb
pushf
sub
push
adc
push
lret
pop
xor
rcll
ret
sarb
popa
add
and
ret
ret
xor
sbb
shlb
adc
pusha
pop
jne
ret
pushf
push
in
inc
adc
lcall
outsb
imulb
dec
push
wbinvd
push
xor
pop
aad
xor
inc
dec
sbb
cmp
and
idivl
stc
mov
lret
enter
or
rcll
pop
lcall
idivl
pop
fs
dec
pop
clc
mov
sub
or
rcll
test
push
je
repnz
adc
adc
mov
sub
sub
xchg
xor
jne
cmpsb
mov
add
mov
mov
or
mov
sbb
scas
add
lret
xor
loope
xchg
shlb
and
dec
push
je
mov
adc
rcrb
mov
adc
test
jbe
cmp
or
shl
mov
pop
leave
mov
sub
and
mov
pop
adc
jb
loopne
cmp
cmp
call
mov
inc
movmskps
pusha
push
xchg
ret
loop
es
rcll
lret
lea
or
add
and
or
xor
add
adc
pop
sbbb
mov
push
loope
mov
addb
jae
mov
push
adc
into
test
mov
push
or
cvtpi2ps
test
fcomps
push
jge
rcrb
inc
pop
mov
pop
pop
sbb
enter
pop
pop
sbb
es
mov
or
dec
adc
mov
call
pop
add
push
mov
xor
and
xor
inc
imul
clc
sbb
stos
inc
loop
xchg
mov
push
push
inc
inc
imul
push
xchg
adc
push
fldt
inc
into
icebp
pusha
shll
testb
sbb
dec
jecxz
inc
add
fistps
jae
jmp
xchg
rcr
js
daa
or
sahf
sbb
sub
inc
pusha
pop
xlat
mov
adc
push
rclb
adc
xchg
pop
inc
icebp
sub
shll
sub
mov
inc
add
jbe
pop
ret
adcb
add
sbb
xchg
push
daa
js
mov
fbstp
push
cli
clc
or
test
push
sub
mov
xchg
mov
cwtl
or
pop
cli
out
and
cmp
push
jnp
or
pop
loopne
and
dec
orl
repz
sbb
or
and
jo
orb
and
inc
lret
clc
test
testl
add
sbb
sub
mov
pop
sbb
jo
shr
jecxz
mov
adc
mov
in
add
call
xchg
or
push
sub
mov
loop
cmpsl
cmc
jo
pop
xchg
or
mov
mov
xchg
lahf
fwait
mov
ss
xchg
rorb
addb
or
or
cmp
xchg
adc
add
pop
add
push
test
pop
cmc
insb
cs
shlb
pop
in
movsb
imul
adc
xchg
ret
push
or
push
rclb
dec
pop
into
fadd
mov
jnp
and
fs
lcall
inc
and
pusha
push
or
dec
cmc
mov
pop
inc
and
mov
adc
mov
lret
or
ljmp
dec
cmc
stos
cmp
push
xchg
test
test
push
pushf
sbb
push
sub
int
mov
mov
mull
mov
ret
mov
ja
add
jmp
adc
inc
outsb
adc
dec
ret
rol
insb
xchg
adcb
push
arpl
call
test
out
push
les
lea
jbe
sub
sub
lahf
inc
add
test
shrb
andl
sub
pop
jge
sub
sub
stos
lds
ficoml
call
sub
dec
and
repnz
adc
jae
and
mov
pop
push
push
and
adc
clc
push
setl
add
adc
cmp
mov
mov
add
xor
jb
jp
stos
sti
jle
ret
cmp
cwtl
aam
or
das
mov
push
inc
or
movsb
cmpb
js
xor
mov
mov
dec
add
cmp
adc
mov
adc
int
fs
stos
dec
push
in
cwtl
rolb
push
bound
mov
pop
cs
and
aam
loopne
imul
cmc
mov
or
pop
movsl
and
iret
les
push
test
ds
test
sbb
jo
in
inc
loope
adc
cmpsl
addb
inc
adc
and
xor
loopne
mov
cmpsl
sbb
push
js
stos
loope
cmp
daa
lods
xor
nop
push
shrl
push
sub
jne
enter
out
dec
out
lock
inc
mov
int3
dec
add
and
add
mov
pop
outsl
add
dec
mov
push
les
pop
pop
stc
jns
mov
and
leave
int3
mov
adc
test
aaa
sub
fsubr
adc
and
or
or
adc
pop
movl
sub
sub
leave
sub
sarb
loope
inc
arpl
aaa
into
mov
add
mov
je
jl
or
sbb
push
cmp
out
pop
ret
call
stc
sbb
scas
fbld
or
call
inc
adc
mov
inc
dec
into
loopne
popa
push
push
loopne
sbb
out
loopne
inc
add
cmpl
mov
push
mov
mov
add
pop
lods
orb
daa
push
sub
nop
sbb
push
push
jle
aas
push
inc
pushf
mov
push
adc
push
popa
and
cmp
sbb
jbe
idivl
jo
pusha
adc
sbb
movsl
dec
xchg
pushf
push
lock
push
push
cmp
test
add
xor
and
cmp
add
push
inc
mov
mov
add
push
inc
repnz
inc
lsl
dec
sbb
pop
inc
jae
inc
jo
adc
stos
mov
pop
icebp
or
adc
cltd
lods
inc
adc
frstor
jb
inc
int
sbb
cmp
ss
and
ret
mov
push
fidivl
jnp
lods
lock
testb
sub
jae
rcrb
dec
daa
push
or
and
stos
jb
add
sti
mov
adc
pushf
mov
test
mov
add
sarb
bound
cmp
and
push
cmp
push
dec
sbb
insb
dec
leave
lock
cmpsb
inc
and
and
rolb
xchg
cmp
and
jo
leave
sbb
or
or
push
pop
push
push
sub
sbb
and
xor
fistpl
push
adc
dec
add
push
or
lret
adc
addr16
xor
sbb
adc
inc
and
stos
aaa
sub
orl
push
push
push
pop
adcl
shll
insl
mov
push
ljmp
lods
or
inc
adc
push
adc
pop
cmp
push
sbb
lret
gs
mov
mov
push
sbb
xor
rolb
dec
mov
call
or
fnstcw
mov
adc
mov
mov
adc
cmc
rol
xor
mov
rclb
push
inc
subb
das
jb
sub
sub
ret
das
sarl
insl
aad
loopne
lret
ret
icebp
add
adc
push
or
adc
mov
mov
fwait
cwtl
push
cmc
hlt
xchg
add
and
adc
call
in
xchg
xor
or
sarb
pop
cmp
xor
hlt
mov
jo
in
xor
xlat
push
push
and
cmp
pusha
mov
ret
scas
and
add
fldenv
push
add
xor
rolb
dec
sbb
add
scas
mov
andb
jge
dec
int
mov
sbb
xchg
imul
add
mov
jp
inc
sbb
pop
int
sbb
or
loopne
pop
pop
push
push
add
out
enter
xor
js
test
shlb
call
mov
rcll
lea
xchg
clc
pop
jmp
pop
mov
ljmp
or
cmp
rolb
fcmovb
scas
inc
adc
adc
ljmp
inc
div
adc
xor
mov
fsub
stos
jmp
ret
mov
jnp
pop
mov
sbb
call
in
ds
sbb
sbb
and
out
xor
push
xchg
lock
jecxz,pn
clc
shlb
mov
sub
sbb
pop
add
jb
sub
or
sbb
cmpsl
push
cmp
sbb
aad
dec
adc
rolb
dec
inc
pop
sbb
enter
push
insb
or
add
inc
mov
sub
shlb
sarb
cmp
mov
pop
enter
mov
sbb
stos
roll
jge
int
stc
icebp
push
push
lock
test
add
mov
sbb
shlb
lods
shl
mov
pop
test
or
test
idivb
or
adc
and
cmp
pushf
pop
mov
dec
adc
ljmp
jo
cmp
mov
loope
push
cmp
jecxz
imul
add
adc
mov
pop
cs
jbe
mov
or
adc
mov
pop
cmp
mov
or
push
adcb
icebp
cli
or
inc
adc
push
stos
sub
pop
cmp
pop
int
loopne
lcall
rcrb
xor
ret
daa
sbb
push
mov
in
push
add
loope
add
jle
stos
mov
fadds
or
inc
ss
ret
xor
call
push
cmc
inc
lods
insl
aad
std
aas
dec
push
mov
pop
push
lret
jmp
inc
mov
call
jo
sub
and
movsl
mov
mov
lock
xchg
clc
mov
test
sti
call
add
test
cmpsb
xchg
mov
inc
jge
lret
dec
cmp
jnp
xchg
mov
add
mov
adc
xchg
loop
inc
lods
add
stos
js
sbb
dec
inc
scas
andl
push
inc
adc
mov
xchg
add
shrb
mov
bound
arpl
xor
insl
adc
push
xor
out
or
test
push
push
adc
pop
mov
mov
push
out
loopne
lods
gs
pop
in
cwtl
or
mov
cmc
stc
xlat
inc
mov
adc
inc
addr16
mov
daa
pop
mov
es
sub
subb
mov
add
mov
fildll
push
popa
push
push
push
je
mov
and
stos
lds
adc
fldenv
push
hlt
mov
es
shll
inc
out
mov
inc
xchg
inc
push
pop
aam
mov
shrb
jnp
dec
aad
cmp
int
pop
push
pop
jne
sbb
cmp
stos
adc
xor
or
scas
pop
rol
adc
movsl
dec
scas
bound
rol
cmp
dec
mov
jle
push
lret
inc
or
xor
or
mov
test
dec
mov
xchg
out
jmp
sub
inc
adc
mov
adc
in
push
xor
push
cmp
sarb
push
dec
xchg
jne
ljmp
xor
and
xorb
add
rcr
add
int3
addb
sar
sub
cli
incb
push
and
mov
cmp
gs
ljmp
jo
cmp
movl
cwtl
xor
push
loope
es
push
enter
or
mov
push
cmovne
inc
mov
pushf
push
inc
cmp
lret
mov
mov
cmp
push
pusha
xor
fsts
adc
xchg
jb
mov
adc
loopne
sbb
gs
rclb
or
adc
or
stos
pop
cmc
rolb
mov
inc
jae
test
in
inc
pop
or
push
add
add
pop
pop
xor
icebp
jg
pop
xchg
add
mov
add
push
into
sbb
pop
jmp
push
adcb
lret
sub
shrl
jecxz
jp
enter
stos
adc
add
or
lsl
mov
adc
pop
cmp
or
inc
mov
repz
push
push
fbld
xchg
les
xchg
mov
and
mov
cli
add
mov
jmp
mov
adc
mov
push
sub
add
ljmp
push
adc
shlb
mov
jo
pop
addr16
add
js
and
iret
jmp
inc
scas
adc
ljmp
cmp
mov
add
or
adc
mov
movsl
ret
xor
mov
orl
pop
xor
filds
je
mov
mov
cvtpi2ps
lcall
pushf
or
push
cwtl
push
inc
out
push
jge
sti
lret
sbb
or
je
in
xor
xor
inc
rorb
xchg
lret
mov
add
and
sbb
cwtl
jp
pop
neg
xchg
dec
scas
call
push
or
clc
loope
pop
jmp
and
orb
scas
push
mov
aam
and
mov
push
cs
adc
or
inc
mov
pop
mov
shrb
sahf
push
sbb
add
pop
inc
rcl
and
adc
push
hlt
lds
inc
lock
movsb
lcall
inc
inc
mov
cli
jbe
cmpsl
jo
adc
negl
mov
andb
mov
pop
popa
add
xor
pop
dec
inc
popa
push
adc
push
inc
or
mov
dec
sbb
orb
push
mov
mov
lds
out
notl
push
and
sbb
cld
push
or
jne
jp
adc
dec
push
sbb
cmpsb
call
inc
popa
push
mov
mov
push
mov
or
mov
push
shll
add
aad
cmpsb
dec
mov
pop
push
sub
aam
fimull
aam
ret
cltd
push
daa
inc
scas
inc
ret
int
cmp
jb
mov
push
inc
push
addl
adc
in
mov
push
add
or
xor
scas
orb
push
negb
ret
adc
push
mov
xor
in
mov
jns
in
push
cmc
cmp
push
push
adc
test
stos
pop
add
hlt
les
jnp
inc
shll
dec
cmp
mov
imul
sbb
push
movl
mov
pop
xor
jno
sbb
xor
enter
mov
clc
mov
scas
sub
inc
or
roll
fcomps
or
inc
push
lock
gs
and
push
loope
stos
cmp
call
add
inc
inc
int3
icebp
or
cmp
fldl
jle
sarb
fucomp
push
inc
inc
scas
jp
mov
stos
add
and
mov
cli
shl
mov
hlt
sub
cmpsb
dec
inc
lret
jne
fcomps
adc
pop
push
add
insb
add
jno
pushf
add
pop
adc
lods
cltd
ror
add
pop
add
mov
je
or
ret
pop
daa
xchg
mov
mov
xchg
orl
jo
scas
or
flds
push
call
adc
rcrb
and
pushf
push
push
nop
lods
xchg
jb
xor
mov
cmp
adc
or
js
push
imul
push
or
cli
call
and
or
pop
mov
pusha
cmp
hlt
lods
mov
mov
out
mov
jl
test
gs
jo
mov
mov
lock
shrb
jne
cmp
or
test
push
lret
lods
adc
inc
je
in
pop
inc
cltd
jp
jg
lret
shlb
test
nop
add
mov
sbb
push
jg
inc
mov
sti
or
pop
sbb
lret
loopne
sub
inc
insl
adc
pop
subb
lds
test
or
test
loopne
imul
mov
in
mov
in
mov
add
pop
sub
push
jmp
sub
cmp
shrb
ljmp
push
test
ficomps
fsts
xchg
inc
pushf
loop
sub
jb
addps
add
dec
add
lods
or
mov
inc
mov
jae
das
mov
push
adc
fdivrp
pushf
stos
enter
scas
and
leave
js
ret
clc
outsl
pop
scas
lock
xchg
add
sub
cmpsb
xchg
int
cmp
mov
cmovge
movsb
dec
call
adc
loop
cmp
lret
push
add
pop
xor
xor
mov
test
and
jp
pop
cwtl
enter
pop
sbb
test
xor
inc
and
sub
bound
shrl
push
pop
iret
adc
pop
pop
sarb
and
jbe
into
jo
and
push
add
ds
or
outsb
hlt
and
mov
jp
in
cli
xchg
or
or
jg
addl
std
scas
fcomip
push
jo
xor
pop
inc
cmpsb
adc
and
ret
and
pop
inc
movsl
push
push
and
in
adc
sbb
adc
sbbb
ficomps
and
add
sbb
cmp
cltd
lock
xchg
and
ljmp
mov
sub
and
mov
es
dec
adc
insl
in
addr16
or
adc
cs
les
inc
shrl
fcompl
mov
je
push
out
add
test
dec
cmp
cmpsb
inc
rclb
mov
ss
or
subl
add
cmc
mov
inc
add
int3
xlat
inc
call
pop
add
inc
jne
and
jmp
push
sub
or
shlb
mov
arpl
sub
or
test
inc
pop
cmp
pop
test
xor
xor
cmp
inc
or
test
push
aam
shl
xchg
mov
sbb
pushf
enter
jb
adc
push
sbb
push
das
or
sub
push
ret
sbb
into
mov
inc
sub
push
jg
inc
sub
push
ret
imul
mov
xorb
or
xor
adc
hlt
push
mov
or
inc
lods
pop
adc
push
movl
sbb
or
stos
lods
jnp
jae
aad
push
push
fcoms
mov
ror
inc
cli
stc
dec
xor
popa
loop
fidivl
xor
xor
xor
mov
lock
xchg
xor
lock
add
rorl
scas
or
push
push
push
les
sub
or
mov
lahf
repnz
aam
les
sbb
es
loope
jb
daa
ret
pop
push
cmp
in
add
add
cmp
or
loope
sub
out
adc
add
adc
sub
mov
repnz
or
xor
xchg
inc
push
and
mov
cmp
scas
adc
push
cmp
out
cmp
out
sub
mov
shrb
rorb
push
inc
sbb
fisubrl
add
lock
mov
subl
push
cmp
sbb
mov
or
rolb
arpl
xor
cmp
loop
nop
test
into
stos
add
ret
dec
adc
push
sub
or
test
mov
add
inc
add
sub
mov
test
sub
adc
adc
out
mov
xchg
lret
inc
dec
dec
mov
dec
sti
jb
aam
adc
inc
scas
inc
xor
xchg
cmp
test
adc
mov
rorb
push
mov
mov
push
push
xchg
sbb
pop
or
cmp
rol
lcall
stos
mov
add
add
or
bound
sub
inc
xor
ror
int
ds
mov
lcall
adcl
mov
insb
sbb
mov
into
pop
push
fiaddl
push
aad
mov
pop
push
jp
push
mov
inc
adc
aas
mov
xor
icebp
stos
call
and
lahf
push
das
ret
pop
popf
subb
push
cltd
mov
jle
js
test
push
mov
lret
sub
xor
pushf
sbb
sub
cmp
lock
sub
cmp
xchg
mov
loopne
jne
sbb
inc
call
push
jle
cmp
stos
loope
lcall
inc
scas
mov
scas
add
das
push
adc
or
mov
and
xchg
js
xor
repnz
in
js
sbb
cmp
pusha
rcrl
dec
inc
movsl
bound
inc
or
pushf
leave
or
xor
leave
xor
hlt
popa
or
jge
push
adc
sbb
xor
mov
add
mov
pop
adc
jnp
jge
movsl
cmp
sbb
add
and
rcrb
mov
or
cmc
push
imul
mov
call
cmp
sub
mov
test
bound
mov
inc
or
inc
fsubr
and
push
or
dec
add
push
sub
ret
adc
add
leave
mov
sub
scas
or
sbb
rclb
in
sbb
add
cltd
pop
inc
and
adc
sbb
sub
push
push
ret
inc
aam
clc
cmp
jmp
adc
or
mov
cmpsl
or
sbb
adc
cld
push
mov
dec
push
and
mov
dec
inc
sbb
push
dec
ror
shlb
add
sbb
sbbb
pop
mov
rcll
call
mov
shlb
mov
adc
addb
sti
dec
pop
les
lock
mul
push
sbb
pusha
in
mov
jne
push
cwtl
or
xchg
mov
cwtl
js
movl
cwtl
movsb
push
add
push
cmpb
jmp
mov
mov
fwait
xchg
repnz
or
sbb
mov
arpl
lods
mov
pushf
push
add
int
imul
push
sub
into
add
movsl
inc
pushf
adc
test
dec
mov
mov
jl
test
dec
pop
je
jg
sti
pop
fwait
repz
pop
mov
push
adc
pop
stos
ds
or
xor
cmp
cld
dec
adc
add
vandps
mov
out
lahf
mov
mov
test
jb
es
jg
cld
stc
mov
fsubrs
fidivrs
mov
fistps
int3
sar
fisubl
cld
stc
repz
inc
out
xchg
xor
rcrl
pushf
out
iret
lahf
aas
jg
jno
push
jecxz
daa
cld
stc
repz
pop
mov
push
sbb
sbb
and
loop
test
aam
pusha
out
repz
ss
or
xorl
jmp
cmpb
cld
scas
std
popf
mov
imul
sub
cmp
add
lds
mov
stc
jle
stos
add
push
add
mov
rcrl
in
jno
out
dec
mov
loope
stc
stc
repz
inc
out
mov
sub
cmp
decl
push
xlat
fwait
mov
mov
out
pop
insb
adc
call
shrl
aas
mov
aad
adc
pop
jbe
cld
stc
repz
xchg
iret
fdivs
iret
lahf
aas
jg
inc
je
add
or
mov
cld
stc
repz
add
lds
pop
sub
mov
scas
and
push
stc
repz
mov
movl
sbb
rcl
jg
cld
test
xchg
sub
jo
leave
cmp
xchg
jne
and
out
lahf
rol
shrl
loopne
vmwrite
cld
stc
loope
stc
ret
cli
xchg
movsl
add
or
inc
inc
call
aas
jnp
call
and
in
sarl
dec
cld
stc
repz
mov
sub
cmpsl
nop
and
xor
dec
xor
sbb
aas
jg
sub
mov
lock
lahf
or
push
in
mov
out
cld
stc
rep
mov
jo
or
aaa
lods
inc
ja
lahf
aas
jg
cmp
addr16
pop
jns
mov
sti
sub
stc
repz
add
sbb
fsts
cmp
lahf
aas
jg
mov
fsubs
shl
add
adc
jne
repz
mov
mov
dec
insl
cmp
or
jg
cld
xor
pop
xor
stos
jne
lahf
repz
lahf
sub
xchg
and
sub
cltd
jnp
cld
stc
xor
data16
les
add
mov
pusha
sbb
stc
repz
aam
enter
sbb
clc
sub
jg
cld
movl
call
popf
clc
lret
iret
lahf
sbbb
cmp
sbb
cld
stc
adc
adc
iret
cmc
jge
jmp
cmp
stos
lock
lahf
aas
sub
rclb
iret
lahf
aas
jg
lcall
xor
jbe
cld
stc
repz
or
cmp
inc
pop
sarb
fcmove
lahf
aas
jg
lcall
cli
out
pushf
sar
stc
repz
incl
mov
mov
pop
jns
das
stos
lahf
aas
jg
push
jnp
fwait
mov
push
pop
xor
iret
aad
xchg
int
mov
and
dec
out
iret
lahf
aas
jg
arpl
cmpsl
daa
pop
mov
pop
or
stc
repz
mov
or
pop
xchg
pop
dec
or
add
imul
shrb
out
test
cli
icebp
lcall
cld
les
shll
and
repz
lahf
cs
sub
mov
cmp
cld
stc
repz
xchg
mov
push
movsb
push
negl
int
mov
iret
lahf
aas
xor
stos
xlat
mov
pop
push
add
repz
loope
cmpsl
repz
push
iret
lahf
aas
jg
xchg
lods
loopne
jnp
ret
scas
jns
ret
icebp
cld
stc
repz
mov
iret
cmpsl
jnp
loope
shrl
mov
lods
rolb
sub
push
or
repz
push
jbe
pushf
imul
mov
cld
ss
and
sbb
lds
pusha
cmp
out
lahf
out
xor
mov
or
and
mov
cld
stc
aam
test
bound
leave
xlat
jo
mov
push
or
scas
popf
daa
jg
cld
stc
sub
rcl
or
add
out
lahf
aas
adc
dec
pop
fcmovnb
popl
stc
repz
lret
push
cmp
lock
sahf
sbb
iret
lahf
aas
jg
xchg
repnz
cmp
addr16
popa
sar
stc
repz
lret
sbb
adc
das
jnp
jae
mov
mov
iret
dec
sbb
lods
cmc
fists
lahf
lret
cmp
mov
stos
stc
inc
nop
out
jo
aas
jg
cld
push
in
add
stos
lcall
rolb
sub
jno
fcomps
icebp
xor
xchg
outsl
orl
out
push
push
fsubp
iret
lahf
aas
fs
jbe
cmpsl
cli
or
sbb
repz
mov
and
out
aas
lahf
mov
movsb
and
scas
jg
cld
stc
adc
das
dec
mov
xor
popf
push
sahf
and
in
pop
ds
lahf
aas
iret
jne
enter
xor
xor
outsb
cld
stc
repz
call
pop
enter
sub
aas
jg
lret
pusha
sbb
inc
jle
adc
cld
stc
repz
mov
and
push
push
lcall
popf
lods
xchg
aad
xlat
idivl
psubsb
in
iret
xor
insb
out
mov
jg
cld
arpl
es
xchg
fcoms
xchg
out
xchg
aas
pop
xchg
dec
outsl
push
jg
shlb
cld
cld
stc
repz
out
notb
sbb
pusha
lds
popf
daa
pop
and
mov
call
pop
push
dec
scas
cmp
push
jb
lcall
stc
repz
cwtl
and
leave
decb
cli
mov
iret
lahf
aas
sahf
fldcw
ds
movsb
add
inc
jge
cld
stc
repz
fldt
mov
bound
xchg
and
push
iret
lahf
aas
jg
pop
ljmp
ljmp
out
addr16
mov
xlat
in
jb
adc
js
inc
popa
fmull
push
sbb
stc
repz
cltd
or
inc
mov
jmp
pop
push
ficoms
stos
aas
jg
cld
test
dec
fildl
inc
or
push
xor
iret
lahf
ss
inc
loopne
cli
movsl
push
lret
sbb
aaa
out
cmpsl
inc
mov
ja
cld
stc
rep
inc
out
sub
pop
add
pusha
xor
daa
in
and
cmp
jae
adc
repz
xchg
scas
xchg
insb
sub
mov
add
lahf
aas
jg
mov
leave
jae
iret
lods
mov
out
mov
xor
jno
or
lahf
aas
pop
stc
jmp
sbb
dec
add
lock
jb
push
nop
sub
out
scas
mov
lds
ds
sub
jns
movsb
and
push
repz
lahf
and
adc
mov
mov
stc
or
xor
mov
iret
lahf
aas
testl
dec
js
sbb
inc
fisttps
icebp
std
jbe
xor
mov
mov
fimuls
cltd
add
push
xchg
push
in
movsl
enter
icebp
or
pop
sub
jg
shlb
hlt
sbb
cltd
cmp
out
lahf
jb
aad
jl
jae
or
mov
cld
stc
shll
inc
or
dec
cld
outsb
pop
sbb
mov
out
lahf
aas
data16
int3
std
arpl
jl
sub
pop
gs
ret
sbb
xchg
lods
push
aaa
iret
lahf
aas
jg
das
out
jle
out
subl
push
cld
stc
repz
mov
inc
fidivrl
stos
daa
lahf
aas
jg
xchg
xchg
movb
pop
iret
js
out
shl
xchg
cmc
mov
call
lahf
aas
lcall
roll
jnp
cld
stc
repz
jmp
pop
es
je
mov
push
outsl
lock
iret
lahf
aas
jg
xchg
fisubrs
adc
sub
mov
iret
insl
inc
pop
adc
rorl
in
cmc
sbb
jg
cld
repz
or
pop
inc
inc
test
lahf
jl
es
xchg
push
movb
pop
xchg
jg
cld
stc
sbb
into
inc
addr16
add
lahf
aas
and
mov
jg
and
repz
mov
popa
cli
inc
addb
hlt
clc
iret
lahf
aas
jg
mov
xchg
fisttpl
repnz
cld
stc
repz
sti
fwait
ja
xchg
push
sub
mov
or
adc
cmp
mov
sub
stc
repz
mov
lret
imul
pushf
cltd
pop
mov
jg
cld
mov
out
out
jne
mov
jb
out
lahf
enter
jmp
dec
add
sbb
jl
int
mov
testb
out
repz
lahf
movsl
pop
into
rcll
jb
pop
in
mov
cld
stc
jae
and
cmp
loopne
lds
sub
pop
inc
out
lahf
aas
mov
popf
dec
push
in
jge
cld
stc
repz
xor
bound
mov
mov
cmpsl
popf
pop
icebp
xchg
hlt
iret
lahf
aas
jg
xchg
into
mov
dec
leave
mov
enter
out
pop
cwtl
xor
cld
lock
cs
adc
aas
jg
add
setge
out
push
inc
adc
mov
gs
aas
jg
stc
lret
sbb
mov
pop
adc
iret
lahf
sbb
push
mov
cld
stc
jp
lret
mov
int3
test
mov
lahf
aas
aam
adc
shl
ljmp
xor
or
xor
scas
add
andl
lahf
push
jl
into
iret
lahf
aas
jg
pop
fs
lret
mov
in
stc
repz
out
mov
push
loop
cmpsb
adc
in
lahf
aas
jg
sbb
repz
pop
mov
dec
jl
stc
repz
or
xchg
rclb
xchg
in
sarl
jg
cld
mov
ret
test
shlb
repz
lahf
movb
adc
jne
sbb
xor
cld
stc
orl
pop
push
movsb
sbb
mov
xchg
into
sub
inc
xchg
lods
ljmp
dec
and
and
hlt
enter
into
pop
ret
insl
outsb
mov
mov
dec
jle
cld
loope
out
in
sbb
jbe
scas
adc
jg
jae
adc
xchg
outsb
cs
lods
mov
sbb
push
in
mov
mov
lar
lahf
aas
incl
sub
cmpsb
cmp
cmc
cmp
cld
stc
repz
inc
dec
cld
cwtl
mov
ret
insb
pop
arpl
xchg
aas
jg
xor
xor
fs
mov
sbb
pop
mov
fwait
xor
leave
or
mov
fnstsw
jecxz
ss
js
mov
aaa
outsl
fiadds
xor
or
in
fldl
out
fcomps
xchg
sub
movsl
test
aam
outsl
fidivrs
ds
scas
fwait
add
xchg
repz
fwait
enter
out
push
dec
mov
js
jg
jb
inc
das
jg
cmp
lods
and
subl
lods
cmp
outsb
outsl
mov
sub
ja
divl
and
shrl
dec
repz
lahf
jg
xlat
pop
insb
addb
xchg
lahf
js
or
sub
inc
dec
lahf
aas
fiaddl
mov
sub
or
stc
repz
xor
pop
cmp
movw
push
mov
inc
es
mov
aaa
clc
lds
mov
xchg
and
mov
or
cld
stc
rcll
in
cmp
lret
ret
test
out
lahf
aas
lods
clc
sti
mov
push
aas
xlat
dec
cld
stc
repz
jo
fiadds
sub
xchg
outsl
sub
mov
jae
fstp
xchg
stc
repz
outsb
dec
ret
mov
cmpb
loopne
jg
cld
lods
sbb
jmp
add
inc
jno
mov
mov
lods
cld
stc
repz
leave
push
clc
ret
pop
xorl
fnstenv
aas
jg
jle
mov
xchg
pop
ja
int3
int
repz
sub
xchg
and
mov
aas
jg
cld
aad
jb
and
std
ret
aaa
cmp
stc
push
stos
and
push
nop
cmp
jg
cld
ret
ficoml
fst
aad
lahf
js
cmpsb
cwtl
pop
repz
lahf
icebp
inc
jno
lcall
cld
stc
int3
fsubl
pop
stos
xor
aas
push
sbb
iret
lahf
aas
fadds
test
out
lcall
pop
shrl
jge
or
dec
leave
cmp
stc
jae
lahf
aas
jg
inc
jl
repz
stos
add
mov
shll
repnz
in
sbb
pop
imul
fidivrs
jne
sub
aaa
fwait
aaa
outsl
aaa
or
movsl
pop
dec
out
pop
cmp
jne
jns
out
leave
enter
mov
push
sbb
fsubrp
dec
adc
call
imul
int
push
push
pop
movsl
jo
push
scas
cmp
fidivrs
rol
push
adc
repz
fwait
pop
out
sbb
mov
xchg
aas
hlt
outsl
fidivrs
test
hlt
aad
inc
jecxz
inc
out
fwait
aaa
js
push
movsl
pushl
or
arpl
repz
or
inc
cli
test
testl
and
mov
test
jl
mov
aaa
push
outsl
jmp
cmpsb
sub
into
fwait
aaa
outsl
fimuls
mov
push
pop
hlt
stc
fmuls
subb
pop
xlat
adc
mov
jg
fdivrl
mov
cmp
cmp
out
lahf
mov
pop
in
mov
jg
jl
jbe
xorl
sbbb
rcrl
and
dec
ss
ret
clc
jns
out
std
orb
and
std
pop
aaa
outsl
fidivrs
xchg
int3
repnz
pusha
jb
jl
ret
repz
fwait
shll
xchg
int
push
decb
jns
test
test
outsb
stos
dec
cmp
je
int
aaa
and
fsubs
rcrb
mov
jns
inc
pusha
movsl
jle
sbb
jle
cmp
xchg
push
enter
fcoms
stos
lcall
adc
jo
push
int
sbb
fistl
repz
lahf
out
in
movzwl
lret
mov
lahf
addr16
cltd
adc
sahf
jle
stc
hlt
sbbb
lahf
aas
pusha
adc
fdivs
add
repz
andb
and
dec
mov
jg
movsb
iret
xorl
flds
cld
stc
repz
lea
sub
push
aas
jg
mov
push
xor
jmp
inc
xchg
push
loopne
xor
subl
sbb
sbb
aas
jg
cld
aam
xchg
ja
orb
adc
in
lahf
dec
dec
dec
loop
in
add
data16
jg
cld
add
fs
nop
push
jmp
inc
mov
lahf
jne
mov
cltd
pop
popf
jmp
cld
stc
inc
jbe
sbb
xor
cmp
xchg
subps
lahf
hlt
sbb
jb
jg
cld
stc
pop
sub
or
push
es
xchg
fists
aas
pop
or
pop
inc
test
repz
test
rclb
sbb
dec
jbe
jmp
aaa
pushf
out
mov
dec
jns
test
xchg
repnz
ret
std
add
and
or
mov
les
stc
repz
in
hlt
orb
cmp
pop
lea
push
inc
aas
jg
cld
das
pop
xorb
cwtl
inc
sbb
fwait
sarl
mov
lcall
cmp
or
call
cld
cmc
nop
push
pop
pop
aad
jns
cmpsb
lahf
call
sbb
adc
sti
gs
aaa
outsl
fisubrs
clc
lahf
cs
inc
out
mov
popa
daa
lock
int
mov
pop
popf
pop
push
ud0
fwait
aaa
outsl
and
mov
mov
into
push
jns
out
inc
mov
sti
jle
aam
rolb
mov
or
ljmp
cmp
cld
test
clc
xchg
push
mov
out
lahf
aas
push
daa
push
dec
adc
movsb
pxor
cld
stc
rep
xor
sbbb
or
lahf
aas
jg
bound
sbb
imul
stc
repz
repz
fcmovnu
jecxz
sti
aas
xchg
push
imul
incb
movsb
push
or
dec
jne
repz
inc
jg
adc
or
or
fidivrs
loop
repnz
push
pushf
xchg
ds
sti
repz
fwait
sahf
lret
rcr
in
out
imul
stos
outsl
fidivrs
xchg
lods
popf
out
std
cmp
out
fwait
aaa
push
and
xor
xor
fidivrs
sbb
pop
outsl
push
push
out
and
outsl
leave
fcmovnu
jmp
push
fs
push
jmp
cld
jns
orb
mov
push
push
iret
lahf
aas
jg
pop
or
sti
inc
push
mov
out
das
sbb
mov
lahf
aas
jg
outsl
repz
dec
aaa
inc
dec
stos
ror
call
out
icebp
enter
push
adc
lods
movsl
sarl
cmp
repz
decl
jnp
out
mov
iret
lahf
inc
ja
xor
loopne
jecxz
cmpsb
dec
sub
cld
stc
js
scas
mov
cli
jg
adc
stc
enter
lahf
aas
sbb
xor
jae
push
addr16
dec
sti
lds
mov
inc
jae
dec
jle
fs
lahf
aas
jg
mov
test
xor
push
enter
stc
enter
xchg
stos
cmpsb
and
mov
out
notb
scas
cltd
fistpll
stc
repz
popf
xorl
xchg
cmpsl
add
jmp
adc
scas
dec
mov
fidivrs
cmpsb
and
inc
loop
ljmp
fwait
cmp
inc
sbb
xchg
jecxz
mov
fsubr
imul
sub
loop
add
mov
out
gs
cmpsl
std
jecxz
test
dec
mov
stc
ja
add
aad
xchg
or
lahf
aas
jg
nop
popf
mov
xchg
and
adc
iret
stos
dec
mov
aas
jae
ss
cld
ucomiss
jnp
into
cmc
aam
dec
cmp
mov
fnsave
xor
push
cmp
out
cld
stc
in
and
stos
mov
pop
pop
enter
push
and
clc
push
jae
lea
out
mov
fdivrl
xlat
repz
push
arpl
mov
sub
push
pushf
pop
sub
xor
stos
sahf
xor
out
lock
mov
int
aaa
outsl
xrelease
int
pop
push
lret
daa
lahf
imul
cmpsl
inc
inc
lret
cli
ljmp
push
aas
imul
sar
rclb
fs
rcll
and
jb
pop
fcmovnb
sub
int
push
fs
stos
stos
add
pop
out
xor
aaa
outsl
fidivrs
jl
push
and
mov
xor
push
fidivrs
mov
fidivrs
mov
xchg
popa
push
ret
add
int
aaa
jmp
adc
xor
cld
stc
testl
xchg
dec
sub
aas
inc
adc
lahf
aas
jg
mov
mov
push
out
cld
stc
repz
and
and
mov
adc
inc
push
lahf
aas
jg
nop
adc
push
lcall
mov
iret
pop
out
rcrl
push
jo
stc
rep
pop
aas
mov
lea
jge
fcomps
movsl
mov
mov
push
lahf
mov
stc
repz
iret
or
fcmovbe
loop
and
xor
jg
cld
and
inc
mov
adc
aaa
test
iret
lahf
adc
mov
pusha
out
dec
dec
jp
movsb
lock
cld
stc
ds
or
cwtl
xchg
das
push
out
mov
aas
je
jp
nop
mov
mov
cld
stc
repz
fs
sbb
cmp
es
daa
lahf
aas
jg
shll
inc
jg
dec
loope
rolb
pusha
sub
dec
stos
aad
push
sbb
or
aas
jg
imul
inc
cmp
xchg
adc
sub
out
call
mov
scas
mov
test
adc
and
movsb
inc
fidivrs
add
pop
mov
stos
repnz
stc
pop
pop
jo
pusha
movsb
pusha
lret
adc
daa
int
ja
xchg
div
xchg
in
sub
popa
dec
jnp
repz
dec
push
inc
add
cmpsl
ret
les
mov
xor
and
cmp
out
fwait
movsl
xchg
movsl
movsb
movsl
dec
add
sub
fiadds
cmp
sub
mov
call
pop
and
and
mov
mov
cld
jmp
sbb
les
arpl
pop
add
rcrl
popf
push
pop
dec
sbb
jg
xor
jle
shl
ret
repz
daa
aam
inc
xor
in
cmp
lahf
aas
jg
add
gs
sub
testb
stc
repz
out
fstpt
dec
xor
mov
dec
mov
jg
out
or
popa
jae
out
iret
rcrl
pop
pop
mov
repz
outsl
cmp
test
dec
push
icebp
lock
lahf
movsb
out
xor
movsb
lahf
cli
movsl
cld
stc
repz
jns
xor
pop
rcll
into
test
jg
add
rolb
les
gs
negl
lahf
pop
ret
bswap
mov
dec
inc
insl
fs
mov
outsl
fdivrp
cs
and
jnp
popa
sub
fwait
jae
sahf
push
into
adc
cmpsl
lcall
ret
push
es
sub
mov
or
jmp
aaa
mov
test
jne
xor
repz
ja
stc
lods
lret
nop
xchg
lcall
aaa
outsl
scas
pop
dec
int3
mov
dec
cmp
loopne
sbbl
jp
cmp
loopne
cmc
leave
iret
fcmovnbe
call
ja
je
pop
repz
lahf
add
inc
loopne
push
mov
cmpsb
ja
fnstcw
jg
stc
push
mov
or
push
lds
cld
stc
ret
dec
mov
xchg
faddp
popl
test
cmp
andl
dec
jae
repnz
mov
adc
pushf
cmpsl
sti
fs
jge
aas
and
mov
inc
push
or
stc
or
jg
cld
stc
jle
mov
notl
sbb
in
add
sub
cmp
iret
lahf
aas
ret
shr
in
jae
cmp
int3
jge
cld
stc
repz
repnz
fsubrl
fsubrs
nop
call
jg
fcompl
cmp
dec
je
jle
pop
cld
stc
repz
ds
out
arpl
xor
dec
inc
popf
sahf
xor
mov
incb
and
outsl
out
cmpb
nop
daa
lahf
aas
jg
repz
mov
xchg
jns
scas
loopne
or
stos
pop
hlt
imull
outsl
fidivrs
add
jb
call
repz
fwait
daa
not
or
mov
dec
sub
jns
scas
sahf
add
cmp
lret
out
fwait
aaa
mov
push
sbb
imul
or
mov
mov
jo
cld
dec
cmp
insb
ficoml
xor
xchg
push
dec
repz
and
mov
cld
stc
pop
arpl
and
popf
mov
pop
xchg
xchg
lahf
aas
inc
push
xchg
in
xchg
notl
dec
icebp
mov
push
sbb
jle
mov
xor
nop
arpl
in
mov
mov
and
pop
into
lcall
cld
jnp
out
mov
mov
fcmovnbe
jo
lahf
aas
jg
mov
push
lcall
cli
aas
inc
cld
jmp
cmp
pusha
insl
lahf
aas
jg
push
arpl
test
imul
lret
stc
repz
dec
mov
xorb
adc
jg
cld
sbb
mov
data16
push
repz
lahf
jo
mov
pusha
adc
sub
inc
and
repnz
mov
dec
inc
and
pop
push
cmc
mov
cmp
sub
pop
stc
stc
repz
jnp
lock
xorl
lahf
aas
push
push
sub
lcall
jo
cld
stc
repz
test
push
xchg
loope
stc
out
push
xchg
call
dec
mov
test
js
repz
pop
xor
jp
add
sub
cmp
cld
push
or
push
push
out
pop
dec
push
pop
push
data16
out
mov
out
mov
lret
sbb
movsb
sbb
pop
xchg
jne
cltd
in
std
cmpsl
cmpsb
mov
sub
dec
stc
repz
xor
xchg
lahf
jmp
pusha
rol
cwtl
aas
jg
cld
sbb
jae
push
cld
test
xchg
cmpsb
mov
jecxz
rcr
push
or
addr16
cwtl
daa
ja
ds
scas
inc
xor
cli
out
cmp
cli
adc
mov
repz
adc
pop
js
pop
mov
cld
sub
mov
inc
jg
test
jg
test
xchg
es
pop
stc
xchg
mov
sbb
add
movsl
and
repz
sub
xchg
lea
shl
mov
mov
scas
inc
js
mov
xchg
aaa
outsl
fiadds
insb
dec
jl
adc
inc
out
fcomip
insl
pop
aaa
outsb
addr16
cld
cmpsb
test
decl
mov
jns
out
add
jnp
popa
mov
shlb
out
aas
cld
fnstsw
leave
dec
jns
mov
jg
jge
in
cmpsl
shl
in
mov
std
ja
in
iret
lahf
jge
jg
push
lret
xchg
fiadds
pusha
xchg
nop
addr16
rcll
ret
xchg
aaa
outsl
loopne
add
leave
lods
mov
stc
stc
jb
dec
testb
daa
adc
mov
inc
jg
jg
aas
aam
adc
cmp
loop
dec
stc
repz
jbe
test
outsb
outsl
ss
aas
jg
cld
cwtl
add
xchg
xor
popa
push
iret
lahf
jne
push
aaa
ret
mov
jns
cmc
sbb
stc
stc
loope
pop
rorb
sbb
out
mov
loop
jg
or
lahf
jl
cld
in
mov
push
fsubrl
fcoml
fiadds
inc
pop
jb
lret
lods
pop
jle
int
aaa
outsl
movsb
mov
mov
iret
repnz
and
jle
push
testb
jmp
nop
ret
ljmp
ret
insl
in
mov
daa
or
ret
test
ds
imul
ja
test
adc
push
xchg
rolb
jmp
out
xlat
jge
pop
dec
push
jns
and
sbb
iret
xchg
aas
jg
xchg
jmp
fcompl
xchg
xchg
pop
imul
mov
dec
push
movsb
mov
testl
mov
or
aas
jg
mov
sbb
bound
xor
ljmp
dec
pop
sub
jg
sub
and
jg
cld
dec
iret
into
inc
test
push
or
sarb
mov
pop
cmp
int
dec
mov
js
int3
jns
out
ja
addb
pop
add
outsl
fidivrs
aam
leave
test
push
inc
jl
jg
push
movsl
cmp
mov
repz
xchg
push
les
mov
lods
daa
outsl
jns
cld
push
daa
test
repnz
cld
stc
repz
add
movsl
icebp
lret
rcrb
inc
in
ror
lahf
aas
jg
mov
mov
aad
stc
repz
popa
push
xor
pop
sub
mov
lods
inc
inc
imul
aaa
outsl
ficoms
sbb
jle
call
mov
push
pop
jns
out
sub
cmp
popf
jmp
aad
idivb
fnstcw
push
pop
adc
outsl
sub
push
call
and
mov
mov
push
popa
inc
jne
repz
fwait
sti
lret
int3
pusha
stos
jp
cltd
jle
sbb
mov
imul
sbb
jg
adc
int
aaa
mov
leave
repnz
jbe
mul
fidivrs
int
out
fwait
add
fnsave
int
aaa
outsl
mov
aam
jg
shl
loope
mov
pop
adc
or
fwait
stos
inc
jns
jle
clc
fwait
aaa
outsl
ficoms
ror
mov
fsubrs
int
jno
pop
add
roll
loopne
pop
mov
aaa
les
inc
lods
into
aas
into
aaa
add
into
stos
add
mov
roll
aas
into
push
ja
mov
cltd
out
fidivrl
mov
jp
test
ds
mov
jo
popf
fwait
aaa
outsl
push
jecxz
cmc
sub
sbb
or
iret
pop
mov
and
xchg
jge
pop
push
xchg
iret
mov
pop
pop
add
addr16
sbb
sub
fadds
into
cld
stc
repz
push
shr
test
fisttpll
sub
and
jg
ljmp
lods
mov
repz
shl
mov
cmp
stc
repz
outsl
cs
jmp
inc
mul
inc
aas
jg
cld
lods
sbb
cwtl
xchg
dec
lea
jp
pop
pushf
pop
jp
repz
lahf
mov
lret
fdecstp
dec
fisubrl
cld
stc
xchg
or
das
push
lods
ret
cld
cld
hlt
mov
lahf
aas
dec
inc
outsl
lret
mov
ret
stc
repz
pop
jp
mov
andb
jl
lahf
aas
jg
nop
mov
dec
pop
push
xlat
adc
mov
xlat
jecxz
enter
imul
cld
push
popa
movsl
cld
mov
ds
push
hlt
and
popa
cmp
mov
fdiv
out
aas
mov
push
fdivrs
movsl
jno
test
sarb
xor
add
cmp
iret
lahf
aas
cmp
ret
push
xchg
ja
pushf
add
cld
stc
xrelease
in
mov
push
jnp
jle
sbb
adc
dec
add
testb
xchg
out
inc
sbb
movl
repz
icebp
mov
stc
dec
cltd
add
outsl
lods
xlat
stos
js
xchg
outsl
sbb
stos
cmp
clc
sahf
lret
mov
lods
rclb
outsl
fidivrs
adc
lods
clc
push
mov
out
fwait
scas
add
je
add
fidivrs
jle
fldt
jnp
ljmp
int
aaa
flds
or
push
mov
aas
fidivrs
sbb
ds
out
jmp
insl
cmp
fwait
aaa
outsl
and
jge
mov
sbb
loopne
xor
lcall
cli
mov
stc
repz
mov
icebp
mov
in
adc
out
aas
jg
cld
pop
pop
and
mov
cmc
std
pop
lahf
mov
lahf
imul
mov
shl
repz
pop
fistpll
mov
add
stc
mov
popa
adc
call
pop
cmpsb
pop
lahf
sub
out
lahf
aas
sub
fsubrs
in
ss
mov
jle
stc
repz
xor
add
xchg
stos
xchg
lahf
sbb
iret
xchg
adc
ds
pop
dec
lock
iret
stc
cmp
mov
xchg
dec
pop
xor
leave
test
das
repz
lock
or
lahf
jle
out
dec
rcr
outsl
fidivrs
mov
fcmove
sub
aaa
les
inc
or
cmp
fwait
fwait
or
mov
mov
dec
icebp
adc
ret
and
mov
and
loopne
faddl
iret
mov
int
adc
mov
cld
stc
jl
and
imul
fcmovnu
fdivl
push
xchg
lahf
aas
std
dec
lahf
decb
daa
dec
jns
xchg
ret
aas
cmc
test
mov
outsl
fidivrs
es
push
mov
sbb
aam
loop
fwait
jno
jg
push
decb
repz
es
dec
rcrl
push
inc
iret
lahf
push
mov
je
scas
lock
int3
test
cmp
repz
dec
mov
push
push
out
aad
iret
xchg
lret
jbe
and
xchg
jns,pt
mov
lods
int
in
hlt
mov
out
fwait
aaa
pop
sub
xor
mov
fdivrl
call
push
fcmovu
fsubs
xlat
adc
psraw
mov
mov
aas
jg
mov
incb
sub
and
inc
in
enter
cs
aaa
and
cmp
pop
adc
pop
pushf
test
sub
xchg
cmpl
pusha
int
loopne
xor
cli
sbb
ljmp
in
out
fcomps
xcrypt-ctr
cmpsl
fidivrs
cmc
mov
jae
and
jae
xchg
fistl
mov
daa
fs
fwait
ja
dec
in
fbstp
sub
hlt
enter
fists
out
bound
outsl
fidivrs
loope
and
sub
sub
int3
addr16
cld
not
dec
repz
mov
sbb
xchg
repz
pop
inc
aas
out
mov
or
sbb
and
adc
pop
aaa
outsl
fidivrs
jbe
xor
aam
cmc
xchg
int
fs
sbb
xchg
add
rorb
daa
jns
and
jb
ficoms
add
idivb
int
aaa
outsl
inc
pop
push
test
es
out
jne
push
cmp
cld
mov
loopne
cmp
dec
jle
push
orb
imul
out
jbe
out
lea
jl
repz
sbb
sbb
mov
fsubl
fwait
dec
int
repz
xor
scas
lahf
ljmp
xor
outsl
fidivrs
lahf
cli
out
int3
imul
pop
pop
popl
pop
and
repz
sbb
sub
stos
push
mov
add
outsl
jno
adc
push
add
les
rcr
bound
les
xchg
cld
fadd
lret
lock
repnz
cmp
cld
stc
jmp
imulb
push
es
fnstcw
std
sbb
fcoml
sub
cld
stc
add
or
cmpsl
cltd
lcall
iret
lahf
aas
jg
das
cs
cmp
ret
push
or
cmpb
out
cmp
mov
outsl
and
push
inc
add
iret
lahf
adc
sbb
push
test
push
adc
ja
rorl
aas
outsl
mov
jbe
push
pop
sub
mov
in
hlt
into
je
imul
mov
and
in
mov
fidivs
out
push
insl
outsl
mov
jg
cld
stc
bound
insb
pushf
or
dec
daa
mov
jne
aaa
push
andl
sti
cld
stc
repz
and
sub
mov
adc
lahf
aas
jg
mov
pop
or
sub
stc
repz
sbb
xchg
mov
cmp
aas
jg
int
roll
pop
in
sbb
aas
lock
iret
int3
shl
sbb
add
push
add
in
add
cld
stc
push
and
xchg
jno
lcall
out
lahf
aas
pop
lea
int3
sub
jecxz
add
pop
shrb
mov
inc
and
enter
jb
popa
out
mov
fwait
aaa
sbb
push
sbb
xchg
mov
fidivrl
jae
inc
test
push
fsubrl
and
outsl
ficoms
pop
xor
pop
adc
sub
lods
mov
cld
stc
ret
stos
xor
int3
hlt
mov
fimull
push
ds
lahf
aas
jg
jo
xor
mov
shrb
pop
xchg
mov
xchg
pop
jno
push
clc
inc
aas
xchg
mov
cmp
pop
outsb
adc
int
jmp
js
insb
push
data16
pop
add
cmp
outsl
fidivrs
add
mov
mov
repz
fwait
xor
lcall
and
add
fidivrs
hlt
inc
fs
sub
pop
call
int
mov
add
test
ja
mov
adc
xchg
inc
vphadduwd
enter
in
lds
mov
pushf
fistps
dec
jns
out
dec
adc
mov
mov
outsl
fidivrs
notb
pop
add
push
repnz
fwait
stc
test
inc
xchg
sbb
pop
xlat
jb
fidivrs
ja
iret
dec
push
out
sbb
jle
cltd
pusha
xor
fisubl
inc
cmp
int
add
adc
shl
mov
ja
jl
mov
sub
ficoml
fisttps
pop
out
fwait
aaa
sbb
and
xchg
jns
push
pop
push
jp
xchg
jp
sbb
fadds
cmp
jo
push
lcall
xchg
movsb
jns
and
sti
fidivrs
xlat
inc
sbb
stos
int
aaa
outsl
adc
into
mov
xor
inc
mov
pop
dec
jp
cmp
mov
outsl
fdivrp
dec
jmp
daa
lods
subb
cmp
repz
fwait
cmp
inc
push
test
sbb
fisubrs
mov
jmp
inc
stc
inc
es
popf
xchg
int
aaa
stos
fisubrs
in
push
clc
mov
repz
cmp
pop
jno
fnsave
or
rclb
pop
adc
incl
or
xor
rcrl
dec
jle
cld
cmp
jno
jp
push
arpl
cld
stc
xrelease
iret
mov
imul
je
aas
jg
inc
and
xor
jecxz
add
mov
stc
repz
jp
pop
scas
fstpt
dec
aaa
sarl
jg
cld
xchg
shll
dec
sub
stc
repz
in
and
rorl
pushf
cli
pushf
aas
jg
cld
das
cld
cmp
cli
into
xor
stos
ror
inc
pop
pop
insl
or
adc
mov
jg
cld
stc
fidivrl
sub
pop
aad
add
sub
out
lahf
aas
or
xchg
pop
cmp
es
repnz
lods
jns
clc
pmaxub
pushf
add
movsb
cmpsl
fnsave
jmp
aaa
xor
insb
or
mov
test
out
fsubs
mov
add
xor
mov
adc
mov
ficoms
sgdtl
inc
outsb
xor
cmp
notb
out
fwait
aaa
int3
lock
jb,pn
push
sbb
push
mov
lds
mov
pop
cmp
sub
aaa
outsl
int3
jns
cmp
es
dec
ja
xchg
loopne
lret
decl
and
out
int
leave
sub
or
add
in
jmp
test
mov
xchg
jno
sti
lahf
pusha
cmp
or
out
pop
sbb
test
jg
cld
stc
into
xor
jge
loope
or
out
lahf
aas
lret
mov
popl
repz
pop
sar
stc
repz
jp
xor
or
outsl
push
jb
push
push
xchg
lahf
aas
jg
push
inc
orb
jnp
mov
add
xchg
pop
jl
mov
mov
lcall
inc
dec
je
arpl
add
out
push
mov
stos
adc
pop
ret
lahf
aaa
outsl
fidivrs
xorl
repz
fwait
shll
adcl
fiadds
inc
ss
xchg
inc
xchg
inc
outsl
icebp
adc
sbb
fcomi
enter
lcall
add
push
dec
add
cld
jmp
inc
ds
sbb
aas
jg
call
call
scas
xchg
cs
xchg
push
ljmp
aas
jg
cld
mov
bound
dec
jg
ja
jecxz
addb
loopne
iret
lahf
test
mov
inc
fdivrs
fadd
xlat
mov
aaa
outsl
fdivrp
arpl
cs
bswap
add
loopne
repz
outsb
jb
xor
pop
jge
dec
outsl
enter
outsl
sub
fimull
lahf
loope
pop
mov
sbbb
dec
fldcw
std
cwtl
fidivrs
sbb
mov
mov
int
aaa
outsl
outsb
popl
fidivrl
sub
mov
out
repz
cmp
loopne
pop
cmpsb
adc
cmp
mov
daa
lret
lods
jmp
sbb
xor
fwait
aaa
outsl
cmp
and
pop
inc
flds
mov
rcll
repz
inc
aaa
xchg
aaa
outsl
fiadds
mov
mov
stc
repz
sub
dec
sub
sbbl
cld
sahf
jnp
cs
push
mov
sahf
call
iret
lahf
push
mov
xor
popf
pop
and
cld
stc
sub
dec
data16
arpl
repnz
mov
xchg
add
iret
lahf
aas
imul
jmp
lret
mov
imul
fiadds
fwait
clc
mov
lahf
aas
jg
ljmp
mov
cmp
stc
repz
or
pop
cmc
xchg
jnp
xor
xchg
aas
jg
cld
sbb
xlat
xor
aad
ret
xchg
divb
lods
or
aam
lahf
jns
xlat
push
push
push
inc
inc
push
xchg
push
mov
fwait
aaa
outsl
fidivs
or
and
sub
jns
out
cmpsl
inc
mull
out
jbe
aaa
outsl
fidivrs
hlt
inc
and
adc
xor
pop
add
std
lods
js
sub
xlat
jne
jnp
popf
inc
cmp
fiadds
xor
imul
fwait
aaa
outsl
pop
pop
inc
add
mov
or
aas
call
ret
dec
js
test
aaa
rcrl
testb
repz
mov
xchg
pop
mov
dec
xchg
push
jl
repz
loope
mov
cld
mov
dec
pop
repz
shrb
xor
xlat
cmp
and
out
lahf
mov
in
dec
mov
jmp
addr16
cld
stc
sahf
pop
xchg
aad
lds
icebp
add
iret
lahf
aas
add
xchg
push
jg
cli
mov
repz
imul
popf
insl
inc
lret
movsb
icebp
in
lahf
mov
shlb
sub
fidivrs
xor
fmull
pop
cmp
fwait
aaa
outsl
mov
mov
dec
ljmp
mov
add
jl
jo
mov
pop
lcall
inc
sbb
and
clc
jle
fadd
repz
shrb
outsl
inc
mov
sub
jns
fisubs
mov
pop
add
call
lahf
aas
call
push
jg
hlt
jmp
mov
repz
push
sbb
lret
push
imul
out
cli
sub
fwait
aaa
push
cmpsl
add
adc
fiaddl
ret
jns
out
mov
dec
xor
roll
xchg
push
cwtl
lods
mov
cmp
fisubs
int
and
arpl
push
jno
addl
and
push
std
mov
or
xchg
adc
fs
cs
nop
adc
pop
lds
cmp
out
mov
das
jae
mov
fisubrl
jns
or
xchg
out
mov
mov
test
inc
filds
jns
out
negb
mov
in
pop
mov
xchg
mov
jo
mov
and
fs
nop
movsb
enter
nop
hlt
cmp
mov
aas
jb
adc
repz
mov
cmp
push
mov
aaa
outsl
fidivrs
xor
fstpl
out
fwait
cs
fisttpl
ret
mov
jnp
jns
pop
pop
or
fbld
movsl
call
fwait
aaa
mov
sub
test
fidivrs
mov
mov
fcmovnb
loope
xor
and
ficoms
cvtps2pd
jle
movsl
inc
pushf
mov
aaa
adc
push
xchg
sbb
xlat
mov
leave
mov
outsl
fidivrs
stos
adc
mov
inc
aas
jg
shlb
inc
and
enter
scas
repz
lahf
fldenv
push
xchg
call
jg
cld
stc
sbb
add
into
jg
sbb
iret
lahf
aas
sbb
inc
push
adc
add
push
xor
cld
stc
repz
lock
sbb
shl
mov
iret
lahf
aas
jg
mov
insb
int
pusha
inc
outsb
inc
jg
repz
cmp
daa
xlat
mov
ja
repz
lahf
pop
out
jnp
es
cld
xchg
and
sti
aas
jg
cld
stc
add
into
sub
lahf
push
jo
nop
push
sti
out
lahf
aas
mov
jecxz
mov
xor
push
pop
sbb
cld
stc
repz
aad
loop
mov
mov
mov
out
iret
lahf
aas
jg
cmc
xchg
cs
pop
xchg
cld
stc
repz
out
les
sti
xlat
sub
daa
mov
push
outsl
in
adc
adc
mov
stc
repz
iret
xchg
rorb
cld
in
mov
mov
add
mov
jge
repnz
xchg
orl
fisttpll
repz
shrb
push
push
pushf
ljmp
je
inc
and
aas
jg
jle
push
cmp
xchg
in
cmpsb
decb
stc
repz
cmp
sbb
scas
add
mov
decb
push
and
mov
push
in
iret
pushf
sub
leave
push
push
arpl
icebp
in
aas
aas
jp
fisubl
clc
or
mov
jae
or
add
pop
in
stc
mov
xchg
xchg
imul
out
fwait
ja
pop
mov
pusha
roll
push
cwtl
cmpsb
jp
pause
mov
inc
lret
mov
push
clc
enter
mov
aam
sarb
adc
bound
push
sahf
mov
clc
jle
out
fwait
aaa
mov
test
loope
fidivrs
jnp
out
stos
lods
ficoml
shl
test
int
aaa
outsl
in
iret
sbb
adc
ja
stos
cli
mov
adc
jbe
roll
std
dec
subl
fwait
aaa
outsl
fidivrs
lea
inc
and
jne
repz
jnp
arpl
stos
ror
xchg
pusha
popf
adc
pop
fnstcw
mov
les
fwait
ja
jae
push
subl
push
sti
mov
aad
insb
push
cmp
cmpsl
shl
add
add
jl
dec
xchg
pop
cmp
lret
arpl
out
fwait
aaa
insb
add
fdivl
pushf
enter
fidivrs
push
dec
pop
push
aaa
push
sbb
ret
pop
and
and
xor
cmpl
inc
sbbl
fwait
loopne
mov
xchg
adc
faddl
dec
sbb
stos
pop
fisttps
int
sub
aaa
outsl
ficoms
sbb
and
aam
cld
fistps
fisttps
imull
cmpsb
aad
dec
jmp
fwait
aaa
outsl
out
scas
or
out
js
lret
sub
call
rcr
or
push
or
pop
mov
outsl
mov
sub
mov
out
mov
push
sahf
hlt
out
dec
inc
std
sub
cli
stos
test
imul
out
popl
fwait
das
cld
int
popf
xor
clc
movsb
sub
in
jg
test
decb
outsl
mov
cmp
pop
lods
cmp
out
pop
mov
iret
push
outsl
push
imul
dec
cmpsl
sbb
pop
dec
sbb
int3
jl
sbb
aaa
adc
stc
mov
out
movsb
dec
mov
mov
lahf
js
and
inc
or
leave
enter
int
scas
xor
movsb
rcr
aam
shl
mov
fwait
xchg
cmp
jl
and
leave
out
pop
lahf
xor
mov
mov
fwait
aaa
outsl
faddp
shrb
cwtl
test
jns
stos
bnd
out
push
and
in
testb
mov
insb
fidivrs
inc
xchg
loope
dec
clc
out
cmp
jecxz
dec
sub
mov
push
adc
test
sbb
cmc
int
aaa
outsl
in
xor
lret
sbbl
jns
out
push
pop
das
push
and
fwait
mov
aad
cwtl
fwait
aaa
outsl
fisubrs
or
mov
out
popaw
loopne
xchg
bound
stc
sub
outsl
fidivrs
ret
mov
ds
mov
repz
fwait
dec
mov
gs
mov
push
sti
enter
mov
aaa
inc
int3
xor
aas
lds
enter
lahf
scas
push
jmp
jns
inc
fucomip
addb
jo
xchg
repz
aaa
decb
fisttps
cmc
mov
cmp
mov
pop
jle
push
pop
repnz
aaa
add
or
rcr
outsl
jns
out
jmp
inc
das
and
sbb
and
repz
mov
mov
mov
cld
stc
sbb
fstpt
scas
cmp
fcoms
out
lahf
aas
mov
push
movsl
jmp
icebp
jns
cld
stc
repz
xchg
popa
imul
outsl
xlat
xchg
aas
jg
mov
push
scas
clc
or
cs
push
adc
inc
leave
loope
jbe
and
jns
xchg
and
lods
xchg
mov
lret
mov
xor
add
cld
jmp
and
and
ss
push
sub
jg
and
mov
push
ljmp
xchg
in
cmp
add
add
push
fs
mov
adc
aaa
rclb
insl
push
add
sbb
jns
out
add
sub
jno
enter
inc
in
repz
sbb
rcrb
sub
cld
stc
mov
lret
push
and
jl
test
aas
xchg
insl
loopne
xor
in
ljmp
stc
repz
bound
les
inc
mov
iret
lahf
inc
sbb
sbb
stos
push
ja
lret
repz
xlat
cmp
jne
loope
fwait
pusha
push
cmpsl
out
movsb
cli
testl
push
je
add
dec
adc
out
mov
out
cmp
inc
les
xchg
adc
pop
cld
stc
repz
mov
lret
imul
mov
jg,pt
jle
mov
test
and
push
imul
aas
mov
dec
mov
lahf
pop
jge
repz
je
mov
loope
setl
aas
std
ja
dec
xlat
pop
cld
stc
repz
movsl
xchg
mov
dec
jle
adc
xchg
jl
jns
fiadds
cld
into
xchg
jmp
cltd
shl
int
aaa
outsl
and
mov
les
or
jle
xor
dec
inc
inc
outsl
fmulp
aad
outsl
lret
pusha
xorl
out
aam
xchg
jg
roll
stos
and
push
outsl
fidivrs
leave
ja
in
add
jae
int
ja
xchg
aaa
push
sub
cmp
sub
xorb
out
fwait
cs
xchg
stc
push
int
aad
decb
fidivrs
insl
push
dec
xor
data16
aaa
mov
inc
ss
jne
iret
lahf
aas
lock
insl
imul
fistl
jg
cld
stc
repz
test
and
cli
into
mov
pushf
xorl
and
jg
adc
or
insb
pushf
sub
in
dec
mov
aas
jg
mov
scas
cmpsl
push
sub
inc
jle
mov
pop
push
and
out
lahf
mov
out
rolb
loopne
cld
stc
movsl
or
dec
push
push
cmp
jmp
cmp
add
aas
mov
shll
out
jg
std
in
pop
sub
js
sub
out
lahf
aas
cmpsl
loope
repz
or
cld
stc
repz
stos
inc
add
jne
int
icebp
iret
lahf
aas
jg
pop
xor
adc
fs
imul
sub
fwait
aaa
outsl
ficomps
mov
in
out
movsl
and
jns
out
test
or
inc
jle
jge
nop
push
or
aaa
outsl
fidivrs
jp
xchg
inc
daa
inc
mov
and
nop
aam
push
mov
cmp
scas
push
fdivl
sarl
cli
enter
ds
cld
xlat
jne
icebp
jne
ds
iret
lahf
mov
lcall
jg
cld
stc
cld
mov
pusha
lcall
ret
mov
aas
dec
pop
cltd
sbb
pop
pop
xor
imul
xchg
adc
in
out
sub
outsl
jns
fildll
iret
ljmp
test
pop
pop
push
push
xlat
fwait
aaa
outsl
faddp
mov
add
adc
ss
sub
repnz
shll
pop
jbe
xchg
inc
push
test
adc
sub
in
mov
aaa
outsl
fidivrs
push
in
mov
nop
and
out
fwait
insb
sub
cmp
and
mov
mov
cs
imul
test
iret
lahf
aas
decl
test
mov
sahf
mov
cld
stc
repz
fidivl
mov
fistpl
fcompl
xor
lahf
aas
jg
cld
inc
sub
lods
movsb
lds
hlt
mov
out
or
dec
pop
add
push
arpl
aaa
mov
cld
dec
out
cltd
sub
dec
aad
int
aaa
inc
xchg
addr16
sub
mov
ljmp
cmp
mov
insb
fisubs
adc
sub
cmp
cmp
push
int3
xchg
repz
inc
in
push
insl
and
cmpsb
rcrb
lods
aam
push
sbb
aas
fs
sub
add
and
push
repnz
mov
mov
jbe
iret
clc
jp
sahf
stos
cld
stc
repz
leave
push
fsubrl
push
and
dec
in
aas
jg
adc
xchg
pop
shll
adc
xchg
js
xchg
pusha
int
loop
movsb
sub
imul
or
push
cwtl
lret
adc
ja
cmp
inc
fsts
push
mov
add
mov
int
ljmp
cld
lods
cmc
testb
lods
sbb
push
adc
outsl
fiadds
jecxz
jle
add
mov
stc
roll
lcall
pand
aas
jg
stos
inc
xchg
out
xchg
in
push
and
es
repz
test
sbb
ss
jns
cld
push
fucomp
mov
inc
fwait
aaa
add
fwait
nop
aaa
imul
or
out
es
mov
or
rcrb
idivb
mov
outsb
jmp
daa
jecxz
movq
in
int
setb
xchg
pusha
adc
out
pop
fwait
inc
cmp
test
clc
jl
subss
mov
xchg
adc
fisubl
xchg
xchg
subps
xor
cld
stc
repz
mov
fs
dec
aas
insl
push
mov
adc
dec
jg,pt
das
ficoml
fimuls
mov
pushf
imul
xchg
sub
arpl
adc
out
lahf
cs
aad
dec
inc
mov
mov
stc
outsl
aaa
lods
lea
cli
cmpsb
push
or
pop
test
out
clc
cmc
aas
jg
cld
outsb
inc
mov
out
xchg
and
loope
iret
lahf
xor
mov
or
sbbb
pop
jg
cld
stc
inc
mov
mov
jmp
dec
add
out
lahf
aas
loope
inc
sbb
test
out
pop
cld
stc
repz
lds
and
xor
cld
stc
add
iret
xlat
in
rcrb
push
and
sahf
pushl
insb
mov
in
sbb
movsl
and
jmp
popa
jns
jge
dec
aas
mov
mov
and
or
jmp
aaa
outsl
cld
in
xchg
inc
jecxz
sbb
dec
inc
mov
inc
adc
sub
pop
fwait
aaa
outsl
ficomps
mov
adc
adc
and
cs
xchg
out
jp
and
lret
xor
ffree
outsb
int
aas
outsl
fidivrs
mov
scas
mov
dec
insb
inc
lret
fwait
aaa
xor
mov
mov
lds
xchg
jo
fidivrs
inc
mov
aam
std
ret
in
ljmp
nop
in
sub
inc
icebp
adc
cmpsb
cld
stc
repz
or
test
jbe
outsl
mov
cli
popf
sub
add
sbb
mov
stc
repz
lock
add
sbb
adc
dec
cld
mov
jmp
loop
fwait
aaa
push
jbe
pushf
call
mov
jns
add
fbld
gs
mov
mov
stos
lahf
bound
adcl
fmulp
mov
jb
stos
add
scas
shl
xchg
and
in
and
movsl
scas
clc
subb
jns
mov
cmp
mov
ljmp
aaa
das
inc
jp
fwait
loopne
adc
roll
repz
in
mov
push
and
call
repz
cli
xchg
sbb
mov
fwait
sub
cmp
roll
mov
jns
out
ret
dec
lock
cltd
scas
sub
fwait
aaa
outsl
fisubrs
pop
out
pushf
push
dec
shll
mov
int
pop
je
fwait
into
mov
xchg
push
repnz
addr16
mov
aas
cmp
or
pop
add
movsb
push
into
testl
fsubrs
mov
sbb
mov
test
scas
cmp
sbb
stc
xchg
mov
aad
push
add
jg
xorb
scas
jae
paddsw
out
call
sarb
mov
or
or
outsl
dec
inc
push
aaa
outsl
fidivrs
mov
fisubrs
mov
repz
fwait
inc
or
leave
xchg
je
inc
adc
xor
dec
pop
fnstcw
fneni(8087
dec
adc
setns
es
cld
stc
inc
out
mov
cld
orb
loopne
lahf
aas
jg
test
scas
inc
xor
repz
cmp
add
cmp
xor
lahf
aas
jg
cld
add
fbld
dec
and
iret
mov
mov
out
sub
test
mov
cmp
aas
jg
jecxz
adcl
xor
push
cld
stc
repz
imul
shll
outsl
fiadds
or
sahf
test
and
push
xlat
dec
mov
lahf
jle
jns
cmpsb
flds
cmp
lret
insb
cmp
aad
aaa
outsl
ficomps
ja
and
or
jns
out
pop
and
xor
pop
push
stos
fimuls
lahf
aaa
outsl
fidivrs
lahf
ret
mov
nop
cmpsb
sub
push
xchg
repz
fwait
js
scas
shl
cltd
outsb
xchg
insl
in
xor
outsl
fidivrs
xorb
inc
sbb
dec
bound
int
aaa
xor
and
mov
jns
jne
icebp
jg
subb
sub
sub
aaa
outsl
fisubrs
xor
stos
push
xchg
xor
xchg
or
dec
fwait
or
cmpl
call
loopne
pop
push
or
pop
adc
rorb
stc
outsb
test
dec
ror
rorl
shrb
push
and
aas
in
jne
mov
jo
insl
mov
fistpl
cmpsl
mov
fwait
aaa
outsl
fisubs
or
insl
arpl
push
mov
fs
sub
mov
fwait
iret
mov
enter
mov
adc
orl
test
imul
dec
inc
mov
add
sbb
insl
sub
and
inc
push
fidivrs
adc
fiaddl
pop
test
aam
fwait
aaa
outsl
adc
jns
xchg
jb
fimull
push
or
inc
mov
sarl
pop
xchg
and
mov
or
aam
test
lahf
aas
jg
push
push
push
incb
stc
repz
mov
dec
sub
ret
iret
loop
push
mov
inc
out
sub
adc
mov
stc
push
out
fwait
aaa
popf
mov
xor
mov
dec
mov
jns
fucomp
movsl
xchg
repnz
mov
loope
sbb
fwait
aaa
outsl
test
dec
fimuls
les
je
lods
fsubrl
jns
movsl
xchg
aas
cmp
jge
iret
inc
rorl
xadd
outsl
fiadds
cmpsb
mov
push
pop
repz
fwait
cltd
lods
arpl
cmpl
sub
outsl
fidivrs
or
aam
add
push
sbb
das
dec
jno
push
aaa
xchg
mov
data16
stos
push
cmp
inc
mov
push
fwait
aaa
outsl
fisubs
pop
cmpl
pusha
jle
lods
loope
les
int
lods
push
xchg
lods
xor
adc
aaa
outsl
fidivrs
enter
pop
mov
cs
lock
cmpsl
fidivrs
mov
mov
jge
notl
outsl
jo
push
jns
sbb
test
out
test
imul
jne
xchg
jns
enter
pushf
das
je
dec
out
lahf
jg
rolb
mov
repz
xor
aad
add
ffree
repnz
jle
push
mov
jnp
adc
stc
and
dec
stos
fsubrs
mov
fiadds
mov
shl
push
int
aaa
outsl
in
and
scas
loop
lods
push
cld
roll
in
mov
xchg
sbb
int
orb
push
push
push
ror
mov
sbbb
xchg
jno
in
cmc
in
int
int3
subb
je
sub
out
lahf
aas
ja
in
mov
loopne
mov
inc
jne
cli
leave
dec
ja
idivb
inc
cmp
shlb
sub
stos
outsb
out
xorps
push
xchg
loope
enter
mov
test
test
out
hlt
lods
fisubrs
out
fiadds
scas
nop
outsl
fidivrs
ja
ja
or
sbb
cwtl
test
js
data16
pop
test
mov
mov
mov
incl
ss
lods
xchg
sahf
sbb
test
aaa
outsl
gs
xor
aaa
arpl
mov
dec
dec
add
jp
sbb
bt
mov
dec
test
adc
xchg
enter
aaa
popf
pushf
jecxz
in
lret
push
cmp
repnz
xlat
mov
inc
lahf
idivl
jbe
push
test
jo
sub
stos
inc
outsb
jmp
mov
out
cmp
movsb
mov
das
jnp
bnd
outsb
fidivrs
sub
mov
leave
lret
iret
mov
out
or
push
pop
adc
test
lock
mov
cmp
mov
and
cmpl
mov
mov
add
and
dec
lea
xchg
repz
loopne
fwait
aaa
and
test
idivl
insb
fidivrs
shl
call
aaa
add
int
mov
repz
out
or
lahf
sub
in
insl
xchg
aaa
outsl
fidivrs
xor
lcall
push
jne
int
in
push
stc
xchg
fists
jns
out
dec
inc
dec
mov
or
xor
and
mov
insl
fildll
sarb
icebp
je
popl
mov
in
mov
cld
cld
stc
repz
out
jecxz
xor
xorl
ljmp
iret
out
fwait
aaa
mov
xchg
cld
or
push
leave
fidivrs
les
sbb
fsub
adc
outsl
add
pop
sti
jmp
sbb
or
inc
out
icebp
xchg
aaa
mov
ss
out
jo
repz
xchg
into
jl
add
mov
clc
add
jmp
daa
xor
xchg
lock
repz
dec
inc
je
push
xor
xchg
push
arpl
stc
cld
rcrl
mov
dec
mov
aaa
outsl
adcb
lahf
mov
sbb
xchg
fprem
popf
test
xchg
stos
xlat
cld
sti
enter
imul
outsl
mov
dec
popf
push
movsl
xchg
insb
iret
lahf
aas
jg
or
lods
pushf
mov
cld
stc
repz
rcl
jecxz
jecxz
jb,pt
inc
ret
pop
lahf
aas
jg
jmp
ljmp
sub
rolb
enter
pop
lods
mov
mov
imul
xchg
gs
jne
dec
int
cmp
mov
shl
fcmovne
cs
inc
repnz
out
fwait
push
sub
or
jnp
repz
inc
sti
clc
outsl
or
repnz
jns
jge
cmp
cld
aaa
fwait
push
lahf
and
int3
inc
enter
das
and
mov
test
push
aaa
pop
mov
jno
sbb
outsl
mov
inc
fldenv
and
fimull
aaa
jnp
jns
out
fs
lods
fildll
push
aam
lahf
aas
ds
les
int
xor
aas
in
test
jl
out
ficoms
cltd
push
ljmp
mov
loop
sub
lcall
adc
push
or
in
int
insb
cmpsl
xor
shll
xor
jno
inc
pop
dec
and
pushf
scas
jmp
pop
jb
pop
cmp
call
rcr
inc
aas
imul
int
aaa
outsl
jg,pn
xchg
stc
xchg
cmp
imul
jb
out
pop
js
test
rcrl
jns
ja
dec
stc
xchg
int3
mov
mov
and
fwait
aaa
outsl
scas
test
lcall
outsb
ljmp
sbb
sub
les
rol
add
mov
fwait
cmpsl
inc
sbb
repz
xlat
fs
and
je
enter
mov
add
test
mov
cmp
inc
out
aas
sbb
pop
dec
or
repnz
lahf
in
mov
popf
and
xchg
push
subb
xchg
dec
rcl
aaa
outsl
fidivrs
into
or
adc
lea
repz
fwait
xor
sti
pushf
in
jmp
inc
outsl
fidivrs
fs
inc
dec
in
mov
sub
mov
push
mov
xchg
push
jg
jno
cmp
cmp
push
sub
iret
aas
push
and
jp
pop
adc
cli
sbb
adc
repz
movsb
outsl
xor
clc
leave
cmpsl
pop
dec
inc
fstl
outsl
fidivrs
clc
stc
jmp
mov
jne
out
fwait
xlat
jecxz
pop
cmpsb
xlat
mov
jne
outsl
fidivrs
imul
sbb
mov
xchg
push
mov
fidivrs
sub
ret
adc
mov
pop
sbb
xor
fwait
aaa
outsl
jae
xchg
xchg
pop
imul
inc
mov
hlt
xchg
push
and
inc
xchg
fnstenv
jb
jns
cmp
sbb
jns
scas
loopne
pop
adc
dec
inc
inc
or
xchg
add
outsl
fidivrs
adc
push
dec
inc
in
xchg
int
in
int
dec
andb
add
movsb
roll
out
xor
enter
insb
popa
adc
push
sbb
cltd
dec
jns
push
cli
enter
scas
arpl
cmc
frstor
xor
inc
fidivrs
pop
push
movsb
scas
out
insb
adc
outsl
daa
sbb
stc
repz
je
jb
jmp
xchg
and
out
gs
cmp
repz
xlat
fistps
and
mov
xlat
push
repz
sbb
or
test
inc
jne
push
stc
mov
jbe
sti
fidivrs
ret
movsb
inc
jmp
int
aaa
outsl
or
add
or
jns
out
and
out
jl
test
call
fisubrs
dec
and
lds
scas
inc
add
leave
dec
mov
lds
xor
mov
mov
pop
outsl
and
mov
cmpsb
ja
imull
fwait
aaa
outsl
ret
xor
mov
push
sub
mov
or
arpl
fwait
ja
and
and
hlt
add
push
sbb
icebp
jnp
lock
push
cmp
cli
aas
imul
inc
mov
ja
testb
cld
stc
pop
jg
xchg
push
mov
loopne
xchg
or
mov
jg
or
imul
aas
imul
sub
jb
or
repnz
mov
push
add
bound
mov
pop
cli
mov
mov
je
xchg
or
test
and
mov
nop
jnp
fwait
aaa
outsl
fdivrp
cwtl
lret
xchg
clc
push
mov
sbb
adc
enter
pop
ljmp
sub
cs
rcrl
cmpsb
je
xrelease
xchg
addl
pop
std
in
pusha
or
xchg
cmc
pop
test
xor
incl
pop
cmp
cld
stos
pop
xchg
inc
int
add
mov
pop
flds
daa
cmp
aaa
add
rorl
adc
mov
in
fwait
repnz
jmp
push
push
sbb
inc
jle
pop
in
ljmp
jns
xor
pop
hlt
clc
mov
out
loop
push
stos
xchg
jecxz
pop
shl
fwait
aaa
outsl
adc
bound
fbld
lea
int
in
jecxz
mov
inc
or
dec
subb
outsl
fidivrs
shlb
pop
and
xor
out
fwait
imul
mov
test
cli
lds
daa
das
insl
addl
shlb
push
push
xchg
aas
push
lahf
rcr
jns
out
pop
sub
sbb
cmp
outsl
mov
out
xchg
inc
aad
int3
mov
int
aaa
fcmovu
xchg
xor
jo
and
mov
nop
mov
mov
mov
cld
stc
repz
mov
stc
lret
dec
imul
divl
pop
lahf
aas
jg
jle
sbb
add
daa
lods
rcll
repz
push
xor
jg
mov
in
jg
cld
sti
sbb
nop
jb
mov
sub
mov
lahf
pop
add
iret
lahf
aas
jg
call
movsb
sbb
mov
out
push
jne
popf
xor
xchg
add
jo
push
aas
stc
dec
xchg
data16
mov
jg
pop
xor
stc
push
inc
mov
push
loop
int3
dec
sbbl
jmp
sbb
repz
cmp
or
add
sti
cmc
mov
aas
jg
jge
jns
das
pop
out
popf
lock
rorb
jnp
out
lahf
in
not
sub
dec
mov
push
stc
mov
cld
stc
test
mov
sbbl
adc
out
lahf
aas
scas
push
jne
add
pop
mov
push
sub
xchg
fidivrs
pop
nopl
sbb
sbb
cld
jle
sarb
sti
sahf
imul
stc
repz
pop
jle
fistpll
ja
or
sub
imul
mov
cmpsl
int
fwait
aaa
adc
mov
enter
cmpsb
movsl
int3
mov
sahf
dec
xor
arpl
or
aaa
outsl
fdivp
mov
repz
imul
repz
and
out
adc
pop
jb
outsl
fidivrs
imull
addb
out
sbbl
into
mov
shrl
test
mov
pop
fnstcw
arpl
out
lcall
push
cmp
sahf
fimuls
js
dec
notb
popa
mov
mov
fsubrs
sahf
mov
repz
clc
repnz
mov
ret
push
lahf
aaa
outsl
fidivrs
pop
cli
outsl
fcoml
popf
repz
fwait
out
or
filds
scas
xlat
jmp
mov
popa
jg
xchg
movsb
xchg
mov
mov
or
ljmp
je
ljmp
dec
mov
inc
rolb
cli
dec
mov
mov
jle
idivl
int
ja
pushf
add
popa
or
movsb
orb
and
mov
sub
rcrl
out
pop
xlat
ljmp
in
arpl
test
or
dec
aas
mov
pop
fldt
mov
mov
nop
xchg
aaa
outsl
fisubrs
mov
test
mov
mov
sbb
jae
enter
mov
ficoms
sub
lcall
or
and
outsb
into
fs
repnz
pop
fcoml
mov
dec
sub
push
cmp
test
ret
fidivrs
and
pop
daa
fs
mov
xchg
int
jg
les
lods
xchg
cmp
decl
icebp
xorb
sub
test
imul
push
add
push
jb
mov
dec
mov
pop
sub
pop
popa
jo
outsl
fidivrs
ljmp
insb
test
int
aaa
xchg
adc
dec
stos
out
fidivrs
popf
stos
fcmovne
xchg
mov
xchg
and
jecxz
xchg
scas
xchg
push
jp
inc
ljmp
aaa
push
jl
mov
mov
inc
negl
int
rcr
sbb
mov
aas
imul
jo
test
mov
mov
pusha
ds
psrad
pop
jb
and
js
sub
repz
pop
call
jmp
push
aas
jg
cld
mov
xlat
jl
and
jno
mov
xchg
aas
push
and
shrb
test
ljmp
iret
push
addr16
dec
add
fstps
stc
mov
fsubp
pop
push
lcall
stc
lret
adc
mov
pop
shrl
sbb
adc
fidivrs
in
xchg
cmp
ja
push
push
mov
and
out
adc
jns
out
jno
and
cmp
enter
mov
adc
push
pop
push
adc
out
out
cmpsb
cmp
popa
lahf
sahf
insl
ds
nop
xchg
leave
xor
xchg
and
lcall
inc
mov
cld
stc
repz
in
xchg
push
aad
jmp
jbe
lahf
aas
jg
call
mov
inc
jnp
in
call
es
inc
leave
xchg
jp
cmpsl
int
cld
std
and
mov
pusha
mov
out
lahf
xchg
mov
mov
aad
mov
imul
xor
data16
out
inc
jno
mov
mov
fldcw
jg
cld
stc
add
pop
imul
mov
jmp
imul
mov
fistpll
pop
xor
test
mov
out
aaa
outsl
fimuls
daa
bound
adc
mov
out
jle
ljmp
pop
repz
shl
inc
paddb
or
add
or
hlt
sub
push
sbb
adc
flds
divl
lahf
sub
stc
lahf
jg
andb
jno
sbb
sarl
iret
mov
sub
dec
mov
pop
mov
punpckldq
ja
bound
jns
push
mov
aas
mov
lret
aas
cmp
dec
lods
xchg
cmc
aaa
add
jo
cld
stc
rcrl
jne
out
sbb
push
out
scas
pop
mov
mov
jg
cmpsb
clc
jnp
xor
mov
jg
cld
jmp
xor
mov
cwtl
pop
xor
aas
mov
mov
push
mov
push
je
shll
adc
mov
pop
lcall
sbb
into
sub
lock
int
aaa
outsl
or
cmp
repnz
fstl
stc
mov
fcmove
jno
test
pop
fistps
sbb
dec
push
fwait
aaa
outsl
ficoms
push
test
cs
and
ret
cs
jg
enter
inc
notl
add
repz
lahf
or
and
dec
and
cld
stc
shll
hlt
sbb
push
hlt
pushf
add
sbb
out
lahf
aas
stc
lods
xchg
mov
test
in
insl
lcall
pop
ficompl
aaa
cmp
daa
push
mov
nop
cmp
push
mov
stc
jle
mov
jecxz
cmp
push
dec
repz
sub
xchg
insl
xor
mov
repz
ja
sahf
mov
xchg
pop
pop
push
jmp
fwait
aaa
outsl
mov
das
in
pop
sbb
jmp
repz
lret
insl
aad
jae
push
jns
cmpsb
push
push
add
outsb
faddp
lods
push
pushf
scas
dec
push
jp
ja
cld
pop
jecxz
scas
testb
cld
jecxz
fwait
pop
and
scas
movsl
icebp
mov
lahf
aas
jg
adc
insl
push
out
pcmpeqd
or
pop
xchg
jge
dec
cwtl
push
clc
jg
rcr
repnz
repz
sbb
imul
loopne
fsubl
push
in
xchg
gs
daa
je
push
iret
ror
pusha
in
pop
xchg
repz
shlb
cli
fidivrl
iret
pop
ret
mov
pusha
sbb
outsb
inc
stos
pop
add
inc
repz
cmp
cmpb
popf
and
ja
stc
add
dec
and
push
fidivrl
dec
aaa
outsl
fidivrs
cmp
xor
loopne
aad
loop
repz
fwait
push
inc
dec
addr16
dec
inc
jle
mov
mov
pop
add
sti
sbb
pop
rolb
rclb
addb
mov
mov
or
scas
aas
stos
outsb
popa
pop
outsl
fidivrs
fnstcw
ret
sbb
loope
pop
mov
or
fwait
aaa
stos
inc
fs
shll
mov
sub
cmpsb
xor
xchg
aaa
out
add
sti
adc
nop
xchg
push
jmp
fwait
aaa
rclb
xor
leave
out
cld
jl
sbb
aam
or
cmpb
jecxz
dec
out
sub
fisubrs
xlat
int
orb
out
iret
outsl
and
out
enter
add
adc
jp
test
push
aaa
outsl
fidivrs
inc
setnp
mov
pushf
shrb
repz
int
lret
xlat
or
and
out
out
icebp
shll
xorb
in
add
es
in
fwait
aaa
out
jecxz
cmc
cmc
add
mov
scas
js
fldl
adc
or
inc
test
sub
jb
xchg
pushf
rcrl
lcall
repnz
lahf
jecxz
cmpsb
jmp
sahf
mov
daa
std
jg
cld
stc
icebp
xor
fdivs
sub
iret
lahf
aas
adc
mov
push
insl
in
xor
mov
les
push
or
mov
pop
add
les
push
xchg
jns
out
mov
popf
jl
adc
int3
outsl
adc
outsl
fidivrs
mov
xchg
in
out
out
fwait
iret
cmp
popf
mov
outsl
fidivrs
popa
add
sub
xor
test
int
aaa
fstpt
xchg
ds
rep
scas
test
insl
xchg
rorl
out
mov
xchg
pop
femms
fidivrs
add
xchg
test
std
ffree
pop
int
aaa
outsl
in
inc
aaa
aas
pop
sbb
imul
xchg
jle
lods
call
sub
iret
lahf
jg
push
mov
jmp
stc
repz
mov
mov
mov
cmpsl
lret
test
aas
jg
lret
or
push
inc
jb
fdivrl
mov
jge
rcrb
lahf
data16
in
mov
jo
add
sbb
xrelease
pop
sbb
aas
cmp
in
jns
cld
stc
inc
repnz
in
cmc
hlt
hlt
orb
ljmp
das
inc
test
imul
insl
stc
repz
and
pop
cmp
mov
ja
repnz
xchg
sar
inc
jmp
push
jnp
enter
fnstsw
pop
adcb
lahf
aas
clc
sub
cwtl
adc
cmp
stc
repz
div
call
adc
mov
fstp
push
push
mov
dec
sub
iret
lahf
jg
out
jo
jmp
std
aaa
lahf
idiv
cld
stc
rep
or
inc
dec
add
sub
gs
lahf
aas
jg
and
aaa
mov
mov
repz
dec
sbb
adc
pop
sbb
mov
call
es
jb
pop
mov
dec
dec
enter
inc
pop
sub
push
loope
shlb
in
push
mov
lret
cli
push
gs
pop
test
xor
dec
xchg
dec
sbb
fisubrs
jp
mov
inc
es
out
out
fucomip
mov
and
pop
mov
aaa
outsl
pop
das
jne
call
pushf
push
sbb
cmc
enter
pop
bound
aas
cmp
call
mov
mov
dec
cmp
repz
repz
mov
mov
push
fdivs
push
and
add
or
add
aas
cmp
dec
mov
cmp
aas
ljmp
inc
jo
or
shll
xchg
out
push
popf
cli
xor
mov
adc
stos
test
mov
adc
lret
push
xor
xchg
aas
fistpll
sbb
push
jb
inc
aas
imul
mov
inc
inc
fiadds
xor
xor
nop
fwait
aaa
outsl
cmc
into
fdivl
jbe
push
repnz
pop
inc
daa
outsl
mov
decb
inc
cmp
jne
mov
mov
add
movsl
pusha
sub
xchg
fdivrp
add
add
mov
xchg
cwtl
pop
and
out
xchg
ds
or
stos
fnstcw
pushf
call
mov
stos
cmpsl
jbe
dec
mov
rorb
mov
fsubp
and
and
xchg
fwait
aaa
outsl
lea
and
push
lods
ljmp
mov
jg
ret
sub
std
sbb
leave
push
ljmp
loope
iret
pop
pop
push
and
mov
ds
push
es
inc
out
out
into
sti
mov
stc
repz
lahf
fucom
out
mov
or
sub
mov
hlt
lahf
aas
jg
and
into
movsl
rorl
cmp
lcall
or
nop
lahf
cli
push
in
sarl
jno
mov
lahf
aas
jg
pop
or
inc
hlt
jb
flds
jne
repz
and
pop
mov
into
stos
sbb
lret
mov
cld
mov
jl
jle
mov
outsb
fiadds
mov
icebp
mov
clc
nop
fstp
out
out
adc
ss
jg
cmp
cld
stc
repz
stos
mov
stos
and
aas
lcall
stc
scas
int
jae
lret
xor
iret
mov
inc
mov
add
adc
pop
sub
push
shrb
out
sbb
sar
mov
repz
mov
cmp
sbb
sti
mov
lret
cmc
xchg
fwait
aaa
outsl
add
fwait
mov
and
orb
int
call
call
insb
ljmp
mov
sarb
mov
cs
sbb
xlat
jmp
mov
scas
cmp
pop
rclb
loope
mov
adc
push
mov
addr16
out
fwait
mov
jno
mov
push
pop
stos
add
mov
sub
cs
in
xchg
orb
lahf
insl
cmp
mov
bound
call
jl
lahf
jmp
shll
int
jmp
repz
movsl
push
mov
sub
cmp
aad
push
adc
push
out
mov
jns
add
dec
push
movsl
jmp
add
fdivrl
fucomp
shlb
fiadds
jg
sti
fisubl
xor
sarb
aaa
out
das
lods
or
adc
fmuls
mov
pslld
lahf
aas
call
insb
rclb
data16
int
dec
cmp
stc
repz
flds
cmp
dec
and
fisubs
in
out
mov
scas
push
jns
repz
rorl
push
rclb
dec
jl
stc
push
sbb
pop
scas
lret
pop
inc
sbbl
or
aas
jg
sbbb
loopne
ja
scas
or
and
iret
jl
mov
lret
popf
loopne
repz
pop
insl
mov
mulb
into
pop
jl
xchg
inc
fidivrs
adc
cli
inc
movlps
fisubl
mov
testl
repz
push
mov
mov
dec
mov
aas
jg
cld
jo
mov
repnz
pusha
pop
lods
enter
repz
lahf
xchg
adc
add
cld
stc
es
mov
jge
cmpsb
rol
add
mov
jge
aas
xor
outsl
fidivrs
call
pusha
jne
xchg
repz
ficomps
imul
outsl
fidivrs
jbe
ret
arpl
aaa
adc
rcr
xlat
mov
out
mov
adc
daa
into
iret
repz
gs
aaa
inc
pop
fldcw
sub
inc
je
repz
fwait
cmovae
xchg
arpl
xchg
sbb
mov
inc
andb
cmp
adc
mov
outsl
fiadds
fs
movsb
nop
test
insl
stos
xor
out
inc
mov
lds
loope
dec
mov
xor
repnz
loop
insb
gs
fwait
aaa
outsl
fsubp
inc
xchg
pop
mov
data16
lret
add
out
adc
cltd
arpl
aaa
aaa
outsl
fidivrs
pop
sbb
movl
enter
outsb
addl
imul
pop
scas
loop
stc
repz
mov
out
scas
imul
cs
aas
jg
cld
add
fadds
stos
fstpl
mov
iret
lahf
cld
xor
hlt
loop
fdivrl
cld
stc
push
incl
imul
mov
xchg
lahf
aas
ret
pop
sub
mov
stc
lock
cld
stc
repz
push
in
inc
loope
cmp
shll
jge
cmp
aas
stc
jo
repz
jae
fdiv
out
fwait
mov
int3
scas
sub
fldenv
jns
jno
mov
push
jle
sahf
in
mov
jecxz
mov
jno
mov
jns
les
xchg
dec
sub
fmul
fwait
aaa
outsl
clc
clc
cs
and
call
bound
mov
ja
sub
stc
sarb
cmpsl
or
cmpb
ss
rolb
repnz
dec
lds
in
loopne
imul
sbb
pop
jo
add
pop
scas
sbb
in
insb
and
xchg
hlt
push
insb
add
je
cmpsl
repnz
pop
fwait
aaa
outsl
ficomps
push
bound
sbb
xchg
sub
mov
out
jg
ja
xchg
fadds
cmp
mov
imul
sahf
dec
mov
pop
mov
popa
or
loopne
mov
cld
cld
mov
scas
pop
in
fsubrl
stc
xlat
add
cmp
and
jg
insl
pop
imul
pop
ret
sbb
dec
add
pop
sub
fs
xor
mov
lods
sub
pop
neg
jge
lods
lods
xchg
push
add
pandn
mov
add
sub
out
fwait
shlb
and
mov
mov
pop
aad
cltd
mov
aaa
add
adc
lret
addb
xlat
aas
lret
imul
ds
test
repz
xchg
lock
insl
repz
sbb
jns
push
pop
hlt
pop
pushf
movb
je
stos
xor
fwait
aaa
outsl
fdivp
sahf
adc
into
jmp
jg
les
dec
mov
mov
jge
mov
popf
sbb
nop
mov
mov
outsl
fidivs
pop
in
push
mov
out
roll
gs
call
mov
subl
sub
imul
and
cmp
pop
sbb
out
aad
mov
rclb
adc
push
fistpl
lahf
fwait
ljmp
loopne
jmp
ret
pop
les
out
fwait
mov
jge
adc
out
dec
into
outsl
fidivrs
cmpsb
shl
mov
dec
sbb
lea
es
int
aaa
hlt
xor
jge
pop
stc
stc
divl
push
xor
add
jne
iret
lahf
aas
add
inc
jb
in
inc
dec
xor
pusha
je
xchg
js
fldl
adc
dec
mov
lahf
ljmp
mov
push
fisttps
jmp
insl
jmp
iret
lahf
jg
call
mov
dec
and
push
fdivrp
cld
stc
repz
sbb
and
push
cld
xorl
lahf
aas
jg
adc
cmp
es
decb
adc
and
mov
adc
jl
cld
mov
iret
pushf
shr
or
add
sub
sbb
pop
mov
pusha
mov
aad
fwait
aaa
outsl
push
jne
cmp
shrb
sbb
mov
sub
push
cmpb
or
test
in
iret
pop
pop
daa
push
push
loopne
xlat
jmp
mov
jl
mov
mov
add
repz
mov
adc
lahf
gs
lea
cmpsb
or
lcall
jnp
sti
lds
sarb
pop
jb
out
mov
push
and
inc
or
jns
cltd
aad
pop
outsl
fidivrs
lcall
fiadds
int
aaa
in
dec
adc
push
pop
in
ja
sbb
cmp
scas
and
sbb
cwtl
lahf
test
and
jg
gs
sbb
xchg
incb
xlat
and
or
cld
stc
ret
dec
cmp
mov
int
aad
xor
sub
fnstcw
ret
aaa
sub
adc
addb
das
fidivrs
xchg
lcall
and
and
mov
mov
adc
add
sub
cmpsb
shl
out
mov
fsub
jbe
repnz
pop
and
lock
jecxz
in
int
mov
cmpsl
sub
in
xchg
cmp
loopne
sbb
cld
icebp
daa
sub
adc
aaa
jnp
sub
add
int3
sub
ret
popa
adc
and
fwait
aaa
outsl
ljmp
xchg
test
mov
divl
lret
out
fucomip
shll
sub
push
fwait
aaa
outsl
ficomps
pop
or
mov
imul
in
int
push
push
inc
dec
fwait
aaa
outsl
adc
cmp
pop
pop
lds
sbb
icebp
mov
fs
jg
in
inc
or
sub
fsubrl
outsl
ficoms
cmp
add
and
out
fwait
aaa
popa
pop
std
pushl
or
push
jle
inc
push
wrmsr
jnp
test
mov
int
ja
ja
call
repnz
jns
out
adc
stos
das
arpl
mov
out
aam
adc
sbb
push
jns
out
jg
mov
pusha
mov
add
inc
sbb
push
mov
mov
jns
out
sub
stc
push
xlat
adc
shll
cmp
or
sbb
mov
int
mov
adc
and
add
xchg
lahf
jg
nop
push
jne
xorb
insl
jecxz
in
iret
fstpl
xchg
bound
orb
fsts
adc
inc
xchg
mov
push
jns
out
sub
pop
jg
test
std
mov
outsl
or
mov
mov
cs
das
dec
jecxz
mov
dec
lcall
mov
cmp
out
fwait
ja
cli
fs
sub
test
jns
ljmp
jmp
lret
mov
adc
out
lahf
dec
rorb
adcl
mov
imul
stc
sbb
cmp
mov
clc
mov
fsts
pop
mov
inc
dec
loopne
mov
clc
enter
jge
rcr
int3
dec
inc
dec
or
xchg
lds
mov
push
inc
jle
cld
repz
sub
xchg
repnz
rorb
nop
xchg
aaa
insb
or
ss
mov
div
pop
lcall
das
push
and
scas
sub
outsl
fiadds
andl
push
push
addr16
inc
xchg
int
shll
mov
in
test
add
fwait
aaa
outsl
fsubp
call
daa
inc
fmul
data16
mov
scas
sahf
sti
adcl
fneni(8087
mov
dec
xlat
push
dec
mov
in
xor
outsl
fidivs
imul
je
repz
add
out
icebp
test
aaa
mov
dec
lods
mov
mov
ret
sub
adc
inc
sub
out
mov
xchg
mov
and
outsl
fidivrs
pop
adc
inc
inc
mov
int
ja
popl
jmp
mov
xor
sbb
add
sub
fidivs
jge
nop
lret
add
sub
out
mov
fnstcw
cmc
add
lods
pop
add
mov
cmpsl
cmp
mov
iret
lahf
jg
xor
dec
jbe
xchg
or
fldenv
stc
repz
pop
fldenv
insl
xrelease
mov
aas
jg
filds
in
fsubr
sub
cmp
or
stc
mov
mov
addr16
jnp
mov
mov
sbb
pop
fcoml
int
aaa
outsl
arpl
test
jecxz
xchg
nop
and
mov
nop
and
mov
repz
mov
xchg
jbe
js
lret
dec
aas
sti
sahf
orb
scas
jg
sbb
xor
ljmp
sbb
or
cld
addr16
add
and
iret
hlt
jp
int
aaa
outsl
aaa
aad
fisubrl
inc
daa
adc
pop
mov
sub
cli
lahf
lea
js
call
xchg
icebp
out
imul
mov
xchg
cmp
mov
fdivs
mov
repnz
aaa
add
xor
imul
shlb
aaa
outsl
fiadds
jne
jge
mov
push
std
test
jns
out
mov
cmpsb
inc
test
cmp
stc
ret
jl
mov
ljmp
rolb
add
cmpsb
and
int3
sub
lahf
aas
jg
aaa
out
or
push
test
jge
call
icebp
leave
iret
cmovb
je
adc
cmp
mov
mov
pop
inc
xor
das
outsl
fidivrs
push
fnstsw
rcrl
adc
fwait
aaa
test
js
les
pop
inc
ja
mov
pop
cmpsl
imul
push
or
fnstcw
cs
sbb
aaa
das
inc
push
jecxz
pop
mov
inc
jecxz
dec
lods
lahf
aas
jne
enter
bound
aam
stc
repz
fiaddl
sub
std
push
cmp
pop
sub
cld
ror
repz
das
sahf
pop
mov
or
sub
lahf
sti
push
inc
pop
nop
or
ljmp
leave
push
int3
icebp
repnz
jns
mov
stos
dec
xchg
sbb
popa
or
int
aaa
outsl
test
mov
jae
sub
jae
out
cld
inc
and
add
mov
test
cld
cltd
stos
push
repnz
sar
shrd
sbb
jno
or
lock
outsl
fidivrs
sbb
push
popa
sbb
repz
fwait
int
pop
push
sbb
imul
cld
sti
dec
daa
jno
sub
out
fwait
add
inc
jle
xchg
repz
mov
jl
outsl
pop
mov
cmpl
cmp
sti
pusha
inc
adc
aaa
outsl
mov
aas
xchg
mov
mov
adc
sbbb
add
test
xor
sub
fmull
fcmovb
lds
out
adc
out
shrb
fs
js
fidivrs
inc
inc
fst
or
mov
dec
jb
lods
and
fwait
aaa
pushf
xchg
adc
movsb
rclb
scas
call
pop
imul
jge
scas
and
ljmp
and
xor
jnp
int
aaa
dec
mov
push
jno
sbb
sbb
fidivrs
stos
mov
jbe
ret
movsl
fwait
jecxz
in
enter
mov
rorb
das
sahf
lahf
xrstor
repz
xor
sub
cmpsl
xchg
daa
inc
mov
int
sub
inc
or
out
sbb
into
cld
jmp
mov
jmp
scas
mov
jle
loopne
lods
mov
outsl
aas
jle
outsl
aad
inc
test
and
mov
and
push
fidivrs
mov
notl
mov
dec
pop
push
int
aaa
outsl
inc
es
dec
jg
xlat
push
insb
gs
ret
in
stc
mov
push
sbb
out
sbb
loope
je
pop
aas
imul
cmp
outsb
mov
push
dec
or
mov
je
out
fwait
ljmp
insb
pop
bound
sub
sarb
push
repnz
outsl
ficoms
lcall
mov
jp
dec
cmp
shll
aaa
lock
outsl
in
int3
cwtl
lds
inc
jns
pop
test
jns
out
aas
mov
mov
repnz
das
movsb
cmpsb
sti
gs
ret
xlat
and
inc
sar
stc
repz
xor
mov
mov
xor
jle
jo
ja
fadd
sub
outsb
in
jecxz
dec
out
stc
repz
addr16
adc
cmp
sub
fists
mov
addr16
bound
lcall
xchg
jg
icebp
xor
sbb
setno
out
lahf
aas
iret
push
rcr
inc
xchg
inc
stc
lea
pop
mov
mov
call
cmp
mov
iret
lahf
aas
lcall
or
dec
mov
mov
ljmp
gs
and
or
pop
stos
sbb
in
pop
xchg
add
daa
aas
jg
ja
notb
pushf
pop
int3
aas
ss
sar
mov
enter
fistpl
notl
sbb
outsl
jle
push
rcll
cld
jg
xor
lahf
jg
cmp
stc
sub
jecxz
es
push
xor
mov
lds
mov
sub
fwait
mov
int
jg
xchg
fsubl
loopne
shlb
loop
test
inc
jge
push
sbb
jg
mov
jns
out
mov
mull
push
cmp
repz
jmp
popa
lea
outsl
ficomps
into
mov
arpl
outsl
fiadds
ss
std
in
pop
inc
jns
aam
xor
mov
inc
psrld
add
jle
das
mov
jle
push
mov
stc
adcl
loop
hlt
in
aaa
outsl
xorb
aam
add
lds
repz
xor
xchg
ficomps
hlt
jle
das
arpl
mov
mov
mov
xchg
int
lahf
xchg
adc
notb
pop
loopne
movsb
or
push
mov
repnz
xor
inc
stos
push
mov
fbstp
adc
xchg
cmpsl
movsl
inc
aaa
insl
test
es
lcall
out
arpl
cld
or
jmp
in
cmp
jl
movsb
ret
mov
loop
fucomip
pop
pop
and
int
ja
push
sbb
pushf
pop
lods
mov
lahf
add
add
mov
jp
pushf
idivl
adc
int
aaa
outsl
int
arpl
dec
lret
pusha
pop
test
es
cmpsb
cmpsl
inc
sub
mov
sub
lret
outsw
bound
fwait
ja
aas
add
aad
cmp
repz
adc
arpl
push
inc
mov
mov
mov
inc
jbe
fwait
aaa
outsl
faddp
psubsb
mov
fwait
mov
out
ret
mov
xchg
je
lea
adc
mov
mov
pop
jg
hlt
in
cmp
ljmp
pop
repz
or
iret
lahf
aas
into
mov
shlb
mov
repz
sbb
mov
cmp
out
lahf
cld
add
dec
je
mov
repz
js
inc
fldt
and
lret
div
shr
lcall
lods
dec
push
dec
or
movsb
sbb
push
inc
add
call
push
xor
lcall
or
add
cmp
shl
or
inc
xor
mov
adc
sub
jo
push
mov
pop
leave
mov
call
mov
js
adc
push
jne
cmp
mov
mov
int
dec
add
cmp
test
mov
jp
push
insb
cmp
mov
inc
rorb
fnstcw
mov
mov
push
add
scas
xor
in
sahf
fcoml
push
in
inc
sbb
loopne
adc
rolb
xor
adc
movsl
or
dec
add
jp
ljmp
add
add
in
leave
stos
orb
add
shr
pop
inc
loopne
and
sub
add
jnp,pn
add
lods
sub
cmp
pop
call
add
or
sub
push
loop
movsl
aam
add
repnz
push
sbb
add
clc
add
add
push
sbb
dec
adc
test
pop
push
mov
adc
push
sub
rclb
push
fiaddl
mov
pop
push
xchg
add
rcrb
sub
test
lcall
dec
inc
icebp
sub
loopne
pusha
mov
mov
mov
push
add
push
andb
mov
mov
mov
pop
dec
adc
xor
mov
adc
aam
dec
inc
stos
and
cmp
stos
jo
loope
fstpt
inc
test
ljmp
and
sahf
jecxz
add
cmp
push
push
cs
je
push
insb
pop
movzbl
mov
push
adc
clc
jbe
xor
pop
sub
cmp
xor
sbb
push
rolb
push
inc
sbb
push
jle
inc
shll
pop
cmp
and
ss
rorb
dec
cmp
mov
push
rcrb
adc
and
fistpl
adcb
enter
jo
jae
jno
push
push
dec
adc
adc
push
jp
adc
rcrl
das
orb
pop
out
or
or
add
int3
inc
add
xorb
lds
or
or
inc
add
push
lcall
std
push
and
pop
push
and
andb
sbb
in
adc
stc
clc
jecxz
lock
mov
push
daa
decb
mov
bnd
dec
and
mov
sbb
mov
jns
adc
mov
or
push
add
cld
push
mov
mov
stos
inc
sub
and
adc
bound
inc
xor
mov
and
test
and
inc
roll
push
out
pop
leave
rcrb
mov
adc
stc
sbb
dec
stos
out
scas
inc
adc
xor
ret
hlt
inc
add
fucomi
mov
ret
or
adc
fidivrl
sub
ljmp
or
sbb
xchg
adcb
test
sbb
push
popa
andb
jle
adc
jbe
repnz
adc
mov
add
addr16
add
or
rcll
dec
push
lods
sub
sub
lock
fwait
or
pop
mov
enter
push
inc
add
push
pop
ret
popa
jg
inc
mov
inc
sbb
add
jo
jbe
mov
inc
jecxz
bnd
ficoml
roll
int
pusha
push
add
jae
push
into
loopne
push
mov
push
jo
cwtl
jecxz
push
push
push
mov
int
ds
loope
mov
adc
push
pop
leave
inc
nop
ret
xchg
andl
pop
fistpl
add
lret
push
dec
fimuls
cmp
sbb
adc
cmp
fdiv
xchg
mov
jp
adc
adc
dec
imul
mov
adc
adc
pop
pushf
jmp
push
push
cs
push
bound
xor
call
inc
adc
mov
or
sbb
xor
test
adc
inc
hlt
cmp
mov
adc
out
mov
xchg
add
push
inc
out
enter
repnz
inc
cmpsb
jmp
arpl
push
pop
push
xor
cmp
xchg
adc
inc
sbb
js
test
cmp
add
clc
push
not
negb
cltd
cmp
testb
pop
testl
cs
add
mov
xlat
icebp
shlb
lahf
dec
scas
xorb
adc
push
mov
imul
adc
incb
sbb
adc
mov
adc
xorl
dec
jg
and
jp
nop
lret
inc
mov
or
xchg
adc
into
or
loopne
cmp
adcl
fiadds
cwtl
mov
jo
rorb
pop
mov
mov
data16
leave
mov
push
mov
ror
out
xor
insl
cli
sub
pop
and
inc
add
dec
fwait
xor
bound
sub
adc
inc
mov
pop
push
ret
mov
fwait
popa
sub
ret
xor
pop
mov
roll
mov
insb
std
jge
or
xor
sbb
pusha
push
cmpb
out
add
cs
inc
fsubrl
dec
test
cltd
mov
shl
add
jmp
loopne
mov
cmp
lods
scas
mov
xor
xor
mov
or
popa
arpl
sbb
out
sbb
les
js
andl
sti
mov
lcall
mov
mov
addr16
and
mov
add
cld
sub
lea
push
push
add
inc
lds
arpl
push
add
push
ret
imul
cli
push
cmp
adc
fidivl
nop
mov
jo
test
add
adc
xchg
sub
mov
or
insl
daa
push
outsl
repnz
aam
mov
dec
ss
jne
mov
out
fsubs
add
mov
mov
int3
mov
rcrb
lock
sub
xor
inc
mov
cmp
jnp
jnp
sub
xor
hlt
addr16
push
in
leave
sbb
xor
shrb
xlat
pop
dec
dec
mov
sub
popa
ret
jnp
push
add
xchg
pusha
movsl
popf
cmp
dec
mov
mov
fistpll
or
test
nop
or
sub
pop
or
sub
mov
xchg
fildl
mov
add
xlat
cli
sbb
add
ret
rcll
addl
sub
sti
jo
inc
lods
push
jge
sbb
je
int
jnp
adc
outsl
mov
inc
hlt
mov
xchg
sahf
add
mov
mov
or
fsts
es
repnz
or
sub
rcl
push
lea
mov
adc
cli
je
scas
xchg
jnp
lods
sbb
and
mov
int
pop
js
push
push
rorb
pop
fwait
sarb
test
add
or
add
gs
inc
add
into
jge
cli
adc
push
mov
push
lcall
inc
inc
xor
add
and
shll
stos
mov
gs
xlat
adc
ds
mov
ljmp
cmp
jne
adc
sbb
push
xlat
ret
popa
ljmp
mov
dec
cwtl
jae
call
inc
inc
xchg
daa
add
mov
ficoml
adc
mov
add
inc
mov
mov
lods
or
mov
add
lret
mov
jo
mov
mov
rorl
fmull
xchg
ret
push
and
mov
pop
sbb
add
adc
insl
fmuls
ret
popa
or
push
adc
std
dec
sbb
popf
out
imul
sub
jne
add
or
jo
or
adc
pop
and
inc
repz
jmp
or
push
adc
adc
cmpxchg
pop
aad
notb
and
dec
mov
push
push
adc
rolb
stc
stc
adc
push
rcl
xor
dec
push
add
faddp
nop
mov
loop
into
add
rolb
pop
sbb
lock
sbb
int3
inc
sbb
add
or
icebp
rclb
mov
nop
sarb
adc
aas
adc
scas
rclb
test
or
sbb
vcmpps
stc
insb
shrb
add
imul
push
imul
in
mov
mov
and
sub
sbb
adc
pop
loopne
lea
inc
out
inc
xlat
imul
inc
push
mov
addr16
xchg
cmp
inc
inc
pop
pop
jge
jae
push
in
inc
inc
push
inc
inc
add
shll
pop
mov
sbb
out
rcrb
add
push
mulb
lret
sbb
mov
mov
or
add
add
or
push
mov
data16
sahf
aas
xor
rcll
cmp
mov
jbe
lds
add
mov
dec
add
sbb
sub
jnp
push
les
icebp
inc
push
addr16
mov
inc
add
cltd
xchg
push
scas
sbb
inc
cmc
mov
test
fisubrl
or
push
inc
or
imul
rclb
enter
je
pushf
adc
adc
add
vcvttpd2dq
sbbb
sarb
mov
loop
sbb
enter
mov
push
push
sbb
out
add
sub
imul
pop
mov
mov
or
mov
leave
or
push
outsl
lods
sbb
lahf
lret
mov
mov
cmp
inc
inc
aad
sbb
push
out
xchg
add
out
add
push
xor
shlb
jo
xor
add
add
dec
mov
stos
pusha
adc
sub
shrl
stos
enter
imul
mov
jae
cmc
adcb
imul
push
adc
es
push
icebp
fiadds
push
addb
mov
test
orb
add
adc
int
jnp
or
mov
rcrb
pop
in
push
mov
invd
out
jp
sbb
pop
jl
or
and
mov
ljmp
cld
or
cmp
jae
js
or
icebp
pop
leave
push
loopne
jb
fwait
pop
add
js
andl
loope
xorl
stc
or
aam
add
mov
sub
aam
shll
inc
sbb
in
dec
cmp
stos
add
jb
push
fcoml
cmp
push
mov
and
cmp
lret
xchg
add
mov
insb
inc
inc
lods
sti
rol
sbb
fdiv
popf
cs
rclb
mov
pop
inc
sbb
pop
movsl
xor
in
pop
lret
dec
xor
leave
inc
sarb
add
sub
shll
rorb
ss
add
inc
scas
sbb
xor
dec
mov
sbb
loop
push
shll
test
push
fwait
sub
aas
daa
rcrl
mov
push
pop
iret
push
add
push
jb
sub
sbb
lret
loope
fs
cmpsl
stos
into
mov
iret
pop
fiaddl
stos
sub
sbb
push
or
in
lcall
mov
sarb
pop
subl
ficoml
add
pop
mov
adc
jne
jo
dec
add
ret
push
rol
push
int
push
mov
jmp
inc
mov
sub
inc
push
pusha
adc
insb
pop
mov
daa
inc
icebp
imul
add
sbb
call
popf
push
dec
adc
adc
adc
out
sbb
sub
or
pop
shlb
lret
jne
adc
inc
and
xor
adc
adc
xor
cmp
popa
push
push
adc
mov
xor
mov
adc
inc
mov
push
adc
jle
mov
sub
add
sti
sbb
and
jl
rolb
imul
pop
idiv
lock
pop
mov
in
sbb
and
jle
adc
sbb
test
push
enter
test
add
or
pop
shlb
mov
rcl
test
test
inc
or
mov
push
xlat
cmp
stc
shrl
ret
sbb
pop
test
lods
stc
inc
jmp
idivb
mov
adc
lds
add
cli
push
testb
ret
loopne
cmpsl
adc
imul
pop
adc
mov
fcmovnbe
into
jmp
sub
call
outsb
into
cltd
sbb
mov
cmp
bound
sub
enter
add
mov
shlb
inc
adc
andl
xorl
jo
andb
add
push
or
add
inc
inc
call
mov
shr
pop
adc
add
cmp
or
sub
mov
sbb
mov
cli
lock
add
loop
xor
bound
xchg
adc
int
mov
inc
mov
pop
sub
sub
clc
sbb
add
xor
lock
idivb
test
cmpsl
and
lock
lods
icebp
jo
push
add
lods
aad
test
sbb
sbb
outsl
shlb
sub
xlat
addr16
mov
mov
mov
lock
test
dec
rorb
int
js
nop
out
add
cmc
dec
out
addb
inc
push
dec
data16
icebp
mov
mov
dec
clc
mov
pop
jmp
xor
push
jo
dec
loopne
stos
mov
lret
cmp
adc
shll
test
in
jg
mov
lret
subb
lods
ja
sub
leave
xor
xor
push
rcrb
jmp
inc
xchg
call
arpl
cmp
scas
mov
or
aad
pop
movl
push
add
mov
xlat
cltd
sub
adc
add
mov
pop
adc
fs
cmp
mov
call
scas
sbb
std
or
adc
stos
add
and
test
or
or
lret
push
movsb
lds
and
mov
dec
xchg
jmp
xchg
or
add
push
mov
stc
add
adc
cmp
mov
jle
cmp
sbb
add
lcall
insl
stc
mov
push
pop
dec
jb
stos
jge
adc
insl
mov
aas
in
cmp
enter
cpuid
cmp
test
loop
push
sbb
test
bound
dec
pop
scas
imul
add
jb
push
mov
add
sbb
inc
mov
sub
nop
stos
fwait
stos
add
subb
repz
nop
test
xchg
lcall
push
pop
adc
stos
xor
mov
jne
sub
inc
outsb
push
xchg
cmp
mov
or
loopne
aam
xchg
adc
ficoms
inc
add
mov
mov
shlb
add
pop
push
sub
rcrb
xor
ja
sbb
test
or
and
mov
aad
mov
subl
jmp
idivb
push
in
pop
stos
inc
addl
adc
pushw
sub
or
shll
mov
lock
mov
adc
dec
and
push
jnp
mov
jp
add
lahf
add
push
pop
hlt
and
jnp
ret
adc
xchg
enter
add
cwtl
stos
cmp
jb
mov
dec
je
mov
add
repnz
rclb
mov
xchg
stos
sbb
ss
sub
sub
stos
fdiv
or
out
out
add
and
cwtl
sbb
test
push
in
in
in
add
adc
mov
adc
sbb
add
test
sub
cmc
mov
mov
jge
ret
pusha
test
ret
sub
or
test
shlb
out
or
push
xchg
inc
dec
aad
les
cwtl
mov
mov
mov
inc
ret
push
push
sub
cmp
sarl
pop
inc
jnp
mov
ret
mov
out
inc
inc
mov
loope
stc
xchg
stos
mov
cltd
jbe
adc
loop
fstpt
xchg
dec
push
aaa
jmp
loopne
mov
cmp
add
scas
add
scas
lret
into
imulb
pop
adc
sbb
inc
xor
shlb
xchg
jnp
jo
xchg
adc
adc
fst
pushf
sbb
mov
adc
addb
je
ljmp
rolb
or
neg
or
push
adc
sbb
push
push
movb
std
dec
faddp
add
push
in
mov
push
push
cmp
xor
and
int
sub
mov
add
movl
dec
push
sub
fld
add
push
jl
xor
push
or
jle
pusha
enter
push
mov
and
lds
pop
adc
inc
stos
pop
cmp
out
rolb
fbstp
rcrl
in
je
push
fucomp
ret
xchg
stc
or
and
push
xchg
jae
lret
adc
push
inc
mov
shrl
xchg
sahf
add
sub
xchg
xor
subl
add
adc
cli
insl
pop
and
cmc
push
adc
pop
inc
adc
mov
xlat
add
adc
mov
lock
push
int
and
idivl
test
scas
ljmp
shrb
incl
addr16
push
and
aam
xorb
mov
push
cmp
bswap
dec
mov
sub
add
push
in
movsb
jns
ret
add
push
cli
enter
adc
ss
pop
getsec
pop
push
ret
test
mov
inc
scas
adc
xor
scas
inc
xor
adc
mulb
sbb
sbb
pop
loopne
or
shl
mov
sbb
mov
pop
into
push
out
test
mov
inc
adc
adc
inc
cmp
xchg
shrl
daa
scas
xorb
pop
push
test
js
shl
push
ret
jno
cmp
sub
push
inc
mov
mov
mov
out
or
test
test
or
std
loopne
pop
push
add
test
add
jge
mov
pop
inc
mov
push
aam
dec
scas
mov
sbb
sahf
add
ds
sub
ret
mov
adc
xor
mov
test
mov
mov
addr16
push
adc
xchg
jno
xchg
repz
jmp
push
fsubs
mov
sub
inc
xchg
sbb
sbb
or
sbb
test
add
add
adc
fcompl
cmc
sub
inc
shlb
push
sub
int
jmp
and
or
ds
inc
sub
push
scas
sbb
dec
xchg
mov
or
cwtl
pop
xchg
add
jg
add
enter
arpl
adc
mov
or
gs
roll
xlat
movsb
stos
sub
mov
ret
enter
sub
cmpsb
xchg
push
and
jae
jge
mov
xor
adc
ja
xchg
sahf
fcmovu
cmp
sub
inc
fstpt
xor
cmp
jge
andb
repnz
add
sub
mov
pop
outsl
clc
adc
adc
sbbb
push
cmpsl
or
roll
shl
push
inc
out
adc
mov
push
outsl
push
xor
sbb
pop
push
push
adc
jne
mov
cmpsl
add
pop
push
adc
in
dec
cmp
or
sbb
mov
aam
shl
movsb
fwait
sti
enter
add
in
loope
inc
out
push
lods
rolb
push
inc
push
inc
sahf
jb
sbb
xchg
enter
push
mov
roll
lcall
jo
mov
inc
cmp
lock
rcll
jo
dec
rcrl
ret
rcll
ret
add
mov
sbb
loop
dec
lods
add
pop
ret
or
into
aam
push
add
cmpl
pop
sarb
into
add
int3
or
sub
sbb
roll
cmp
push
sbb
sbb
jp
sub
fs
ret
and
adc
ret
inc
jmp
xchg
sub
push
cli
sub
mov
add
notb
psubw
push
out
shll
enter
ja
sub
int
sub
ljmp
insl
xchg
xchg
mov
cmp
ret
imull
aad
xchg
or
push
scas
cmp
jge
je
lea
fisttps
add
js
and
mov
push
jmp
sub
clc
add
jge
mov
or
mov
cld
sbb
sahf
call
cltd
popa
enter
xor
loopne
cvtps2pi
popf
sbb
lahf
sbb
or
insl
fdivrl
pop
sbb
leave
fsubl
cli
add
icebp
mov
adc
xchg
shll
mov
stc
addr16
adc
sbb
es
and
push
lcall
mov
sbb
inc
test
shll
xchg
xlat
mov
add
xor
loope
add
in
enter
fwait
divl
xchg
sbb
popf
fwait
mov
fcom
and
mov
pop
pop
popa
mov
jno
push
in
mov
push
mov
and
lret
movsb
lcall
mov
test
faddl
or
xchg
mov
or
add
hlt
mov
cltd
pop
inc
sbb
add
cmp
dec
cmp
cli
pinsrw
loopne
cltd
mov
inc
xchg
call
sbb
mov
cmpb
sub
add
lret
popa
jecxz
call
xchg
daa
jge
inc
stos
cld
mov
stos
add
inc
stos
fisubl
add
push
shrl
jp
xor
dec
leave
cwtl
add
push
ss
shll
xchg
repnz
push
imul
pop
popa
dec
je
stc
cltd
setae
push
or
mov
push
scas
inc
imul
pop
addr16
adc
xor
mov
add
inc
mov
popa
sbb
inc
mov
mov
jmp
pop
ret
hlt
into
out
xchg
push
add
orl
jns
rolb
fstp
pop
leave
pop
push
cltd
cmp
mov
rclb
xchg
stos
enter
ja
sbb
outsl
dec
aad
mov
pop
xor
dec
fimull
cmp
out
add
push
and
test
pushf
push
and
dec
mov
and
leave
and
xchg
dec
adc
sbb
pop
test
mov
hlt
adc
mull
adcb
subb
js
call
jmp
jo
mov
add
mov
push
push
sub
repnz
into
dec
pop
push
mov
adc
mov
sbb
pop
and
cmp
aam
xchg
adcb
and
bnd
push
int
xlat
ret
add
ret
loop
ds
clc
or
sbb
adc
push
jmp
pusha
add
cmp
push
xor
imul
push
or
stos
dec
lods
push
aas
mov
sub
or
mov
stc
lret
mov
pop
mov
add
test
or
add
rdtsc
jb
xor
les
and
sub
mov
mov
fs
add
je
inc
sub
jno
in
loopne
add
inc
ret
xor
xchg
adc
mul
sbb
and
outsb
pop
js
xorl
sbb
sub
mov
xchg
scas
add
dec
add
leave
orb
mov
mov
enter
sbb
lcall
and
add
imul
lds
sbb
mov
in
inc
and
sbb
aas
xor
jns
sahf
js
rorl
adc
jp
shll
mov
jmp
add
sbb
les
subl
inc
out
iret
test
js
mov
inc
movsl
xchg
or
jb
add
rorb
popf
cmpsl
icebp
push
sub
sbb
mov
fisttpl
out
mov
mov
addl
or
pop
xor
sbb
lret
push
xor
mov
mov
pusha
outsb
mov
and
rcll
jge
aaa
mov
xorl
int3
clc
adc
push
cwtl
mov
popf
or
adc
mov
pop
sub
mov
sub
mov
pop
pop
dec
xchg
mov
sub
insb
xorb
cmp
int3
add
pop
push
addr16
xchg
adc
sub
popf
or
js
and
cltd
lcall
sub
test
out
lret
aam
mov
dec
ret
movsb
pop
jecxz
outsb
sti
test
adc
push
ds
xchg
mov
repnz
out
adc
and
adc
push
popa
divps
sbb
push
rolb
or
xchg
add
pop
cwtl
subl
push
mov
sbb
sbb
rclb
xchg
dec
icebp
xorl
ret
and
cmc
test
lds
sbb
gs
or
pushf
push
xor
flds
cmp
daa
xchg
pop
movsl
dec
fadds
cmpsb
aas
test
sbb
jge
adc
invd
mov
and
adc
scas
cmp
pop
add
sub
enter
adc
shrb
rcl
and
rorb
or
or
cltd
addr16
ret
or
addb
inc
jmp
dec
push
clc
add
push
pop
faddl
push
or
outsb
jo
lock
mov
add
or
dec
push
mov
inc
aaa
subl
sub
xchg
mov
stos
mov
enter
push
call
xchg
mov
push
push
aam
cmpsb
push
loopne
in
dec
into
mov
sub
nop
push
push
lret
mov
movsl
mov
popf
stos
loope
push
stos
jae
mov
mov
jne
xchg
leave
test
iret
or
ret
outsl
arpl
out
sbb
je
jo
add
adc
addb
test
lea
push
into
ret
in
sub
movsbl
push
cmp
jle
sbb
xor
push
test
ss
or
pushl
adc
fdivr
mov
or
ret
or
dec
add
inc
xchg
sub
dec
xor
jne
repnz
mov
stos
push
data16
lahf
leave
in
or
push
inc
rorl
push
ret
shll
xacquire
sahf
in
lcall
aad
push
cwtl
inc
xchg
push
sub
and
loope
pop
and
mov
jecxz
pop
push
and
pop
xor
adc
subb
push
lods
sub
adc
cmp
mov
mov
dec
add
inc
xchg
adc
and
clc
rorl
cmc
and
jne
add
or
xor
into
pop
lds
inc
cs
nop
and
mov
adc
xchg
sub
xor
xor
fwait
mov
xor
push
pop
lds
mov
ret
adc
sahf
adc
ret
adc
bnd
or
shr
add
lret
and
sbb
adc
or
xor
or
fcmove
sahf
roll
mov
std
pop
js
xor
push
popf
inc
cmp
test
repz
sbbb
push
or
or
dec
add
ror
cltd
and
and
aam
dec
push
inc
mov
mov
ror
repnz
pop
push
int
adc
push
jp
mov
nop
xor
test
mov
ret
and
sbb
push
xor
adc
lret
mov
ror
or
xor
subl
jmp
adc
jle
fwait
clc
loop
ret
shlb
clc
xor
pop
push
mov
inc
roll
sbb
sbb
clc
and
push
push
xor
mov
inc
pop
inc
movsb
sub
in
stos
and
data16
mov
fadd
sahf
xor
int
icebp
in
test
sbb
cmp
or
cmp
mov
push
inc
mov
pop
test
pop
add
aam
and
repnz
xchg
and
push
sbb
or
cmp
rcll
je
inc
jno
dec
fistpll
test
mov
pop
lock
push
dec
mov
add
pop
add
xchg
loop
add
or
stos
stos
xor
add
dec
push
push
outsl
adc
add
mov
jnp
into
roll
mov
cmc
dec
scas
pop
inc
test
or
lock
test
aas
push
pusha
inc
rorb
add
adc
rcrb
adc
sub
pop
mov
adc
push
xor
pop
test
xchg
and
cltd
jae
shll
div
push
cmpsl
xor
cmp
mov
sbb
addb
sub
jne
scas
push
leave
mov
xor
icebp
or
sbb
jo
mov
lock
push
jb
add
and
adc
sub
inc
mov
pop
pop
jl
lcall
ffree
ret
loope
jp
sbb
stos
push
mov
mov
pop
pop
pop
push
test
notb
sbb
xchg
and
les
es
stos
mov
inc
es
cs
out
xor
divl
add
cmp
test
or
popa
jb
aad
sarb
aam
mov
sbb
in
adc
push
adc
js
pop
and
pop
orl
add
and
lret
jae
sets
adc
rorb
pop
adc
stc
mov
push
es
lock
or
mov
fdivrl
popa
pop
mov
insl
add
push
mov
and
cmp
and
push
mov
ret
jns
addr16
test
fld
push
scas
dec
rolb
xchg
inc
adc
sub
mov
sbb
sahf
lods
push
rcl
sahf
jnp
adc
sbb
or
push
and
push
sbb
or
mov
add
ds
nop
mov
mov
and
das
or
subb
nop
leave
nop
std
mov
cmpb
lea
jp
les
push
add
xor
scas
inc
push
adc
mov
add
call
mov
test
repnz
adc
sub
push
mov
push
mov
pmaddwd
add
and
sar
call
jp
daa
pop
and
mov
ss
fs
into
mov
dec
je
ret
les
push
hlt
jge
and
pop
inc
push
cmpsl
mov
mov
cwtl
aad
mov
shll
cmp
stos
add
aam
inc
mov
shlb
or
test
add
je
mov
or
test
inc
push
add
xor
push
fmul
inc
sub
rclb
adc
push
jb
cmp
push
test
pop
jge
adc
xchg
and
loopne
test
mov
mov
rol
sbb
call
or
sarb
mov
cmp
icebp
das
test
imul
out
inc
mov
or
sbb
rcrb
bound
mov
cmc
inc
cmp
xchg
adc
sbb
xor
stc
add
jbe
inc
xor
cmp
cwtl
imulb
lcall
sub
out
and
loopne
rclb
cmc
sahf
dec
jnp
push
or
sbb
mov
pop
jge
mov
jg
ret
push
add
pop
lea
push
mov
mov
mov
mov
stos
rcrb
inc
mov
inc
sub
xchg
sahf
call
add
and
imul
adc
and
out
ds
or
mov
jg
mov
shll
ret
add
sub
pop
adc
pop
ret
call
and
jl
lret
sbb
mov
sbb
xor
fdecstp
sbb
mov
push
shll
daa
adc
sbb
xor
cmpsb
loopne
mov
push
add
mov
mov
sbb
mov
sbb
push
inc
cmp
adc
adc
cltd
iret
hlt
ljmp
adc
push
dec
inc
sub
inc
jle
ss
mov
lret
pop
loope
int3
or
popa
push
push
cli
test
lock
rclb
push
add
sbb
cmp
add
loope
mov
addl
hlt
pop
roll
or
idivb
adc
and
add
jb
pop
pushf
jl
inc
xor
test
test
jmp
lock
adc
call
adc
subb
clc
pop
out
push
mov
sbb
add
inc
into
lret
mov
or
aad
adc
sub
xchg
enter
cmpb
mov
pop
push
int3
push
xchg
inc
sbb
pusha
adc
adc
in
lret
or
js
jae
lcall
dec
or
sub
add
inc
cmpsb
adc
jp
hlt
pop
jecxz
mov
dec
shl
loopne
and
sahf
mov
clc
fdivrl
xchg
add
int3
or
lods
popa
or
inc
jne
loop
into
insb
xor
stos
mov
daa
push
fdivr
out
mov
scas
jo
mov
push
mov
daa
fisttps
jb
xor
stos
dec
mov
wbinvd
je
sub
adc
ljmp
out
push
es
add
imul
or
fstpt
push
mov
lods
je
sub
and
adc
sbb
push
das
push
call
stos
popl
push
mov
pop
shr
adc
call
or
mov
adc
adc
mov
cmp
xchg
ret
add
xchg
std
mov
push
cmp
mov
jne
push
dec
or
rcl
inc
inc
clc
xlat
sbb
clc
mov
add
sub
cs
push
and
push
push
and
mov
mov
adc
or
bound
sbb
sub
pop
scas
loop
fcmovu
mov
imul
or
xchg
mov
xchg
lds
dec
lret
xor
cwtl
sahf
push
jmp
add
push
test
pushf
jb
or
in
bound
cmc
jge
xchg
sub
pop
xor
or
push
jno
xchg
push
mov
loopne,pn
dec
sub
out
adc
sti
ss
and
ss
and
xchg
and
cltd
js
rclb
jmp
inc
das
cwtl
dec
rclb
lahf
stos
outsl
or
push
push
stos
adc
or
lret
dec
push
out
jnp
loop
imull
in
mov
push
jb
sbb
add
stos
xor
and
push
setge
faddp
imul
push
cmp
add
fiaddl
sub
and
xchg
repnz
cli
add
ret
test
adc
lods
xor
mov
cmp
xchg
or
ret
cwtl
mov
mov
cli
add
mov
or
push
lods
xchg
or
and
add
fistpll
stos
pop
movsl
call
and
addb
sbb
movsl
push
pop
sbb
mov
pop
out
or
mov
adc
inc
nop
xchg
icebp
dec
mov
sub
xchg
push
mov
or
pop
loopne
inc
xchg
sti
into
leave
adc
adc
mov
dec
mov
mov
cmp
fnstsw
mov
test
adc
scas
mulb
sbb
xchg
ret
add
mov
jnp
sbb
orb
scas
sbb
loopne
sub
xchg
mov
in
jno
mov
add
mov
or
outsl
push
push
pop
hlt
dec
mov
jb
mov
enter
andb
inc
call
xor
mov
adc
push
or
shl
pop
cmpsl
rcr
mov
loope
stc
jo
pusha
ret
xchg
inc
mov
sub
nop
lret
adc
orl
repnz
adc
lahf
ljmp
cmp
rorb
push
jmp
dec
test
mov
xor
add
dec
sub
sub
or
arpl
mov
loope
test
add
add
aam
push
cwtl
addb
test
or
addr16
ret
pop
add
push
outsl
sub
fldcw
daa
sbb
add
or
pop
mov
or
aaa
es
push
and
cmc
jno
mov
lea
sbb
test
inc
mov
int
jmp
lock
sub
xor
subl
sarb
push
fs
inc
push
shlb
pop
sti
pop
add
aas
imul
rol
mov
mov
pop
or
dec
rcll
push
aad
add
adc
push
pop
sub
xor
test
ret
jge
fwait
pusha
mov
push
sub
sbb
jl
into
or
adc
stos
nop
dec
cli
mov
add
ss
xor
cmp
notb
xor
mov
cltd
lret
sti
or
pop
xchg
loopne
mov
rorl
mov
mov
loopne
pushf
inc
push
jo
mov
sub
pop
inc
xor
push
lret
ret
dec
add
sbb
xchg
sbb
pop
loopne
mov
pop
cmp
or
ljmp
andl
pop
add
inc
cmpsb
mov
mov
add
push
push
mov
adc
lret
inc
add
inc
nop
cmp
sub
lock
sahf
push
pop
cmpb
das
testb
lret
add
es
into
vandps
push
cmp
popa
cmpsl
rclb
sbb
jle
sbb
push
push
sahf
test
sub
adc
sub
xor
or
inc
add
or
daa
ret
pop
fsubp
xor
push
pop
add
pop
pop
push
cmp
rolb
inc
push
cmp
aad
mov
in
sbb
inc
mov
fcompl
mov
or
push
js
test
or
call
in
orb
inc
test
inc
lret
inc
push
mov
gs
dec
add
js
push
insb
lods
add
clc
fisubrl
scas
mov
roll
cmp
into
inc
and
xor
pusha
jge
jnp
push
sub
push
mov
mov
sbbl
enter
cmp
clc
sbb
dec
cmp
inc
push
imul
mov
sar
inc
call
xor
es
fcmovnb
xchg
or
outsb
xchg
ljmp
add
ljmp
or
imul
andl
rcrb
or
push
stos
push
ljmp
inc
shl
inc
sbb
stos
das
orb
push
mov
sbb
push
or
add
jb
sbb
inc
mov
cmc
or
jmp
sbb
mov
aaa
xor
xor
bound
div
ja
mov
adc
movb
push
push
mov
sarb
adc
cmp
leave
and
mov
jne
inc
imul
xchg
orl
sbb
imul
sbb
shr
jns
cmp
test
xchg
adc
push
sbb
pop
jne
notb
adc
jo
mov
xchg
icebp
xlat
cmpsb
rclb
or
lock
push
push
out
test
jl
inc
inc
mov
or
imul
sbb
lock
adc
mov
xor
lea
ret
fistps
push
inc
je
sub
mov
jge
inc
shll
test
inc
int3
adc
push
add
.byte
.byte
push
idiv
pop
nop
add
in
add
sub
imul
imul
mov
std
jbe
sbb
icebp
adc
mov
clc
push
jg
mov
mov
sub
add
movl
sti
ljmp
jmp
mov
es
push
mov
rclb
add
sbb
pop
add
pop
pop
mov
fsin
shrl
adc
add
jae
add
outsb
mov
mov
jnp
shrb
roll
xchg
or
roll
push
xor
push
jnp
mov
or
rorl
jbe
xor
fwait
out
cs
mov
sub
add
cmp
mov
lock
add
mov
mov
adc
fidivs
xchg
dec
sbb
mov
ljmp
sbb
adc
ja
jl
mov
and
imul
add
fucomi
xchg
and
or
adc
sbb
outsb
popa
ret
loope
sbb
adc
insb
outsl
pop
or
repnz
add
add
adc
insl
fcmovnb
popa
add
add
or
jge
mov
mov
mov
pop
pop
jl
sub
push
into
add
mov
push
leave
add
or
mov
mov
mov
mov
pop
push
ret
fwait
jae
enter
mov
sbb
rolb
mov
sbb
lods
adc
fbstp
mov
push
push
fdivr
repnz
outsl
insl
mov
and
or
test
pop
bswap
cmp
pop
xlat
or
mov
addr16
add
sub
push
into
ljmp
jmp
shrb
shll
pop
and
fistl
rcrl
mov
shl
xor
das
popa
mov
lock
cmp
sub
out
mov
in
cmp
mov
nop
repnz
aaa
ret
add
cmc
js
sarl
jge
add
sub
sub
or
cld
sbb
fistps
pop
and
pop
push
decb
mov
jnp
or
inc
lret
insl
iret
sub
repnz
sti
sbb
dec
loope
mov
or
mov
cmp
idivb
ljmp
imul
insl
mov
add
insb
add
ss
mov
lret
jge
mov
lock
les
adc
mov
jne
pop
mov
xchg
mov
mov
mov
pop
sub
mov
out
mov
or
sub
pop
popf
into
or
je
xchg
adc
sbb
and
inc
dec
mov
mov
adc
inc
mov
push
xor
mov
loopne
pop
sub
xchg
adc
stos
ljmp
xchg
call
leave
xchg
sub
jnp
jno
push
stc
cmp
mov
out
mov
mov
ljmp
cmp
pop
add
in
popl
mov
jo
imul
pop
or
mov
xor
mov
sub
inc
clc
test
shlb
insl
loope
mov
push
add
or
ficoml
popl
sbb
xchg
ret
cld
insl
out
pop
or
mov
add
or
sbb
push
jg
inc
cltd
mov
cli
repnz
adc
loope
mov
rorl
lods
pop
test
or
push
inc
cld
mov
adc
mov
in
sbb
mov
movsb
pop
stos
insl
test
add
jmp
dec
dec
sbb
push
sub
leave
ret
outsb
arpl
cmp
sahf
mov
inc
mov
js
jecxz
cli
sbb
adc
adc
cli
mov
or
icebp
sub
lods
and
push
jo
mov
mov
sbb
and
cmp
shrb
popf
mov
mov
popl
adcb
adc
ja
adc
xchg
mov
rcrl
push
lret
cmpsb
mov
mov
sbb
pusha
push
faddl
daa
sbb
inc
mov
aad
imul
clc
mov
push
xor
cmp
lds
sbb
repnz
push
gs
xor
pop
push
cmp
js
mov
jle
xor
add
mov
sbb
rorl
je
fisttpl
rcrl
shlb
xor
mov
xor
xlat
inc
imul
jno
roll
jbe
lods
inc
mov
or
or
cld
nop
fiaddl
test
ret
pop
movsl
sahf
mov
daa
or
cmp
sbb
push
andnps
add
mov
lods
mov
push
ds
in
ljmp
ret
sub
ret
popa
fstps
movaps
je
add
mov
jae
pop
pop
sbb
or
popa
insb
mov
mov
dec
les
aam
pop
lods
aam
in
popa
jbe
ficoms
sahf
ss
add
icebp
sbb
xor
mov
fsubs
add
push
or
add
dec
enter
mov
push
test
sbb
negb
imul
or
fdiv
repnz
in
mov
dec
push
or
jle
add
jne
inc
fldl
out
and
sbb
ret
xlat
adc
lock
push
xor
ret
xchg
fiaddl
or
subl
aad
rcl
shrb
jge
jecxz
int
cmp
or
jbe
out
adcl
repz
out
pushw
sub
inc
lods
sub
or
sbb
fmuls
sbb
ss
adc
adc
int3
pop
pop
xor
inc
sti
ret
sub
pushw
pop
xchg
jge
inc
or
daa
pop
idivb
xor
and
negb
lods
xor
inc
push
mov
int
popa
pop
pop
push
mov
xor
das
or
push
daa
or
fwait
jecxz
pop
mov
push
clc
rorb
add
or
jp
scas
xor
dec
add
enter
jmp
out
in
clc
adc
and
adcl
cmp
jne
insl
test
repnz
pop
arpl
js
fsubrs
push
lock
dec
xchg
imul
pop
dec
mov
ret
lods
dec
mov
inc
xchg
inc
push
add
hlt
rcll
rorb
mov
or
test
mov
lods
pop
insl
loope
sti
lret
rcll
push
add
pushl
aaa
mov
ja
mov
pushf
mov
push
out
shrl
icebp
prefetchwt1
mov
fcomps
xchg
or
insl
out
mov
cmp
and
rorb
das
sbb
cs
sbb
jae
sub
mov
cmp
icebp
cli
out
add
sbb
call
and
adc
cmpsb
jb
dec
pusha
mov
xchg
jl
lods
lods
add
xor
xchg
rcll
sbb
jge
test
aaa
add
adc
pop
js
call
lahf
dec
fcmovnb
add
clts
push
mov
mov
nop
or
lds
push
pop
inc
pop
cmp
insb
outsb
lret
mov
imul
leave
insb
add
ret
pop
jae
bound
inc
lock
not
inc
call
mov
pop
insl
ret
push
es
rolb
pop
lahf
mov
pop
pop
add
mov
sti
rol
mov
pop
insb
mov
mov
in
sub
cmp
orl
xchg
lret
sbb
mov
xchg
call
pop
dec
sbb
fcompl
pop
leave
push
imul
jb
pusha
into
dec
mov
in
rorb
add
into
inc
pop
test
cli
mov
mov
int
mov
dec
sub
jecxz
scas
mov
sub
lret
popf
adcl
xor
insl
sub
mov
cli
xchg
in
mov
icebp
pop
sbb
jo
xlat
rcll
shlb
sbb
mov
or
faddp
int
rcll
mov
es
into
jns
sbb
jb
or
rcll
out
pop
mov
sbb
andb
xor
xchg
jmp
add
jecxz
aam
inc
jae
out
pop
out
pop
fildl
inc
or
jmp
mov
add
aad
xor
xchg
xor
call
outsb
adc
add
movsb
inc
dec
jne
ds
leave
add
icebp
sarb
shrl
mov
xchg
insl
push
ret
mov
in
pop
popa
xchg
insw
rolb
sub
sbb
add
jne
adc
rcl
add
adc
icebp
fildl
dec
mov
addr16
push
jge
rolb
pop
call
mov
lcall
pop
scas
xor
pop
loopne
lods
insl
adc
dec
add
int
pop
repnz
push
dec
or
rclb
out
mov
dec
bound
popa
mov
mov
jb
cmp
add
les
pop
push
ret
mov
scas
mov
das
cli
xor
fadds
testb
aaa
ljmp
std
pop
clc
sub
call
or
sub
mov
int
sbb
outsl
jge
test
add
push
cmp
add
out
shl
ds
inc
cmpsl
jge
adc
mov
test
mov
xor
or
adc
popa
scas
jle
outsb
shl
inc
ret
inc
stc
sbb
loopne
mov
add
daa
gs
into
sub
enter
push
adc
rcl
fstpl
mov
inc
xor
xchg
mov
mov
sub
stc
and
rcll
sub
push
cmp
adc
or
mov
pop
ret
sti
sbb
dec
push
add
ds
clc
sub
inc
notb
in
mov
pop
cld
lea
lcall
loop
inc
or
bound
or
mov
push
imul
ficoml
dec
int
xlat
jns
push
add
lock
sbb
rcll
fimuls
test
punpckhdq
inc
sub
les
hlt
orl
jbe
dec
clc
fimuls
shrb
rclb
scas
push
jo
out
cld
cld
out
cmp
orb
sbb
push
and
sbb
adc
mov
pop
popa
loope
push
or
mov
xor
or
pusha
icebp
mov
or
in
mov
ss
jo
arpl
outsl
inc
inc
sub
sbb
sbb
xor
in
arpl
ret
add
xor
adc
jo
jb
mov
or
sbb
shlb
xchg
cs
add
or
inc
xchg
mov
inc
push
xor
or
pop
push
jl
push
inc
ds
es
jnp
jle,pt
pop
movsl
mov
dec
jno
mov
add
fimull
insl
mov
mov
in
push
stc
xor
mov
cmp
es
pop
mov
lds
leave
repnz
adc
adc
in
or
sbb
loope
pop
punpckhwd
clc
or
mov
jl
lret
cmpsl
pop
fldcw
push
shrb
subb
mov
fsubl
dec
into
fiaddl
push
out
jbe
add
xor
popf
inc
pop
sub
adc
lret
mov
mov
push
pop
addr16
mov
add
cld
jae
xchg
or
lods
pop
addb
xlat
xchg
test
punpckhbw
push
pop
pop
inc
adc
push
pop
mov
mov
sahf
sub
scas
fcoml
es
add
cs
or
or
pop
add
ret
mov
shl
mov
out
lods
icebp
dec
push
mov
sbb
add
test
and
and
cld
ljmp
scas
std
or
adcl
push
fbstp
xor
js
add
stos
in
ss
inc
in
clc
fdivrs
jle
into
push
or
loopne
aad
aad
and
jae
out
mov
lods
pop
adc
add
push
sub
mov
shll
sbb
mov
push
sti
repnz
fnstcw
pop
mov
and
lea
stc
push
add
enter
xchg
shrl
in
fs
jno
loope
pop
bound
pop
rcrb
repnz
jbe
xor
or
insl
hlt
xor
sub
cmpsl
sbb
lods
xor
push
cmp
dec
ret
loopne
je
enter
into
call
mov
ljmp
cmp
mov
ret
mov
mov
lods
xor
stos
xchg
data16
add
push
ss
xchg
fiadds
sbb
push
and
sbb
dec
xchg
out
inc
or
jno
push
cmc
int
mov
bound
movsl
dec
sub
adc
pop
rolb
xor
sbb
out
jae
stc
adc
push
leave
inc
sub
add
ret
pusha
cmpl
sub
jmp
daa
outsb
and
push
or
shll
fsubs
in
add
ljmp
xor
shlb
scas
sbb
fst
inc
cld
enter
popa
mov
faddl
pop
add
mov
push
in
adc
rclb
out
in
scas
or
adc
or
arpl
aad
test
add
mov
xor
pop
pop
dec
jge
test
inc
jb
cwtl
cmp
into
into
fdivl
roll
adc
and
mov
ljmp
or
push
xor
mov
out
mov
sub
rcrl
xchg
xchg
push
pushf
enter
lcall
outsl
xorl
js
mov
or
inc
xor
shl
ret
adc
sbb
loop
mov
xchg
in
jmp
adc
push
jl
push
inc
and
add
push
push
or
push
stc
push
andb
es
jnp
pop
rorb
mov
nop
rolb
inc
scas
sbb
jp
jbe
dec
push
and
mov
in
mov
mov
pop
sub
insb
mov
sub
rcrl
sub
loope
cmp
cmpsl
push
aad
ljmp
icebp
imul
test
sbb
sub
fwait
xchg
loop
ret
or
rcl
push
add
lcall
adc
mov
dec
pop
je
lods
xchg
andb
cmc
lock
push
pop
adc
inc
push
jb
bound
enter
or
shrb
add
mov
mov
sbb
add
pop
mov
jmp
xor
fisttpl
adc
push
sbb
out
les
cmp
inc
sub
orb
sbb
testb
xor
test
test
mov
or
add
in
cmp
sti
imul
ret
mov
pop
xchg
lcall
sbbl
shrb
push
push
pop
adc
or
adc
call
mov
rcr
loop
jecxz
lock
push
mov
jmp
xor
jmp
push
shrl
lret
xor
js
lret
shlb
imul
aaa
pop
and
jne
push
dec
std
subb
xchg
xor
cmp
inc
push
sbb
pop
stos
lret
adc
sbb
sub
rorl
pop
loope
sbb
cmp
adc
icebp
pushf
std
xchg
les
stc
adc
rcrb
jnp
add
or
enter
or
imul
ficomps
cmp
push
les
fs
sub
mov
and
movsl
mov
push
aad
xor
insl
xchg
push
and
fwait
test
pop
stc
test
inc
add
ror
mov
sub
sbb
and
call
inc
pop
mov
loopne
dec
std
xor
push
pop
add
xor
pop
sub
adc
das
cmp
inc
daa
in
rcrb
sbb
push
mov
inc
movsb
cmp
stos
ret
aad
cmp
cs
or
mov
push
xchg
jl
mov
push
pop
push
sub
lcall
pop
pusha
push
push
pop
imul
push
lcall
aad
ret
or
stos
mov
mov
inc
adc
mov
sub
mov
xchg
out
add
rclb
jecxz
jecxz
daa
xchg
xchg
fcomps
push
add
out
jo
call
cli
xchg
rcl
add
xchg
sbb
dec
jne
ret
mov
or
cmp
mov
inc
sbb
mov
adc
aas
sbb
in
pushf
add
mov
call
lret
mov
or
pop
add
inc
or
xchg
push
add
cmpsb
lods
adc
rclb
or
sbb
push
popa
xor
and
icebp
mov
or
ret
mov
inc
add
pop
leave
popl
enter
mov
and
loop
pop
pop
bound
lret
dec
js
add
push
cmp
sbb
sahf
push
push
adc
push
leave
push
or
rcrl
ret
dec
pop
je
sub
mov
ja
jne
jb
insb
pop
rcrl
xchg
rcpps
sub
mov
jmp
sbb
daa
iret
push
push
inc
test
adc
inc
cmp
je
mov
push
mov
push
lock
xor
xor
mov
or
push
mov
fxch
insb
bound
sbb
test
adc
test
bound
dec
repnz
adcl
or
pusha
mov
jl
push
or
or
pushf
inc
adc
scas
sbb
leave
dec
inc
or
lock
adc
dec
jge
add
idivb
jb
xor
insl
xor
stos
shll
mov
mov
sub
ror
inc
sbbl
dec
cld
sub
ficoml
subl
sarl
dec
or
sarl
lds
add
aad
mov
ljmp
mov
ret
and
adc
inc
popa
sbbb
jge
movhps
sbb
out
jne
pop
push
mov
aaa
xlat
orl
fmuls
or
xor
jbe
out
add
mov
icebp
mov
or
push
or
sbb
shlb
les
dec
outsl
push
or
enter
test
xchg
push
sbb
mov
adc
sbb
jmp
cs
scas
fidivs
dec
or
into
movsl
and
xor
andl
mov
mov
sub
pusha
push
stc
fs
bound
out
outsb
lret
dec
popa
cmp
push
inc
mov
fdiv
xlat
sbb
mov
sbb
mov
dec
inc
in
add
shr
and
rcrl
sub
data16
push
mov
add
jmp
test
lret
sub
push
pop
adc
pop
test
pop
fnsave
and
scas
mov
pop
fst
inc
pop
popa
jmp
arpl
dec
inc
test
dec
adc
xor
cmc
sub
add
test
imulb
add
adc
mov
pop
mov
in
push
sbb
divb
shlb
icebp
xor
and
push
stos
or
mov
push
jge
ret
mov
cld
pop
aas
pop
xor
mov
sbb
sub
and
pop
add
cmp
adc
ror
sbb
addr16
xlat
into
movsl
add
jmp
addps
inc
pop
xchg
int
mov
xchg
cmp
xchg
shr
icebp
sbb
lret
addr16
ret
fwait
js
push
jp
push
xchg
stc
adc
mov
xchg
mov
and
push
inc
ret
cmp
dec
addr16
sarb
xor
test
jne
scas
and
dec
pop
xor
hlt
adc
shl
dec
push
sub
or
xchg
jae
inc
rolb
push
cmp
add
pop
inc
sub
test
sbb
rcl
int
xchg
add
adc
inc
sub
push
push
clc
add
fstps
push
add
data16
or
push
adc
scas
flds
or
xor
add
sub
bound
pushf
inc
mov
add
das
adc
shl
mov
adc
out
sub
jle
jne
ret
pop
xchg
or
jle
faddl
pop
ret
in
stos
les
jb
or
xor
pop
lea
hlt
push
pop
cmp
or
adc
inc
andb
adc
lcall
data16
pop
mov
imul
fdivr
xchg
jp
sub
hlt
imul
test
sbb
test
sbb
rolb
xchg
shlb
pushf
add
jl
and
inc
loopne
mov
sbb
add
hlt
faddl
jg
push
in
mov
shrl
or
add
inc
push
push
out
or
scas
adc
xchg
or
add
xlat
sub
sahf
xlat
pop
repnz
adc
jne
sub
jle
xor
xchg
notb
cmpsb
out
push
xor
imul
sbb
jns
push
xor
xor
orb
inc
cmp
jmp
pop
mov
push
push
inc
test
sbb
inc
inc
mov
loop
sub
insb
sahf
adc
bound
adc
jo
xchg
push
push
jno
andl
xchg
inc
adc
push
or
ret
sahf
sub
sbb
icebp
push
lcall
popa
sub
push
add
mov
clc
aas
rcrb
push
cmpsl
ret
or
in
shlb
test
loopne
add
into
ror
push
test
stc
adc
repz
adc
sbb
js
add
add
add
popa
imul
xchg
fwait
cmp
dec
mov
inc
mov
jno
and
xchg
fidivrl
sbb
push
out
or
cmp
jne
push
fdivl
lock
test
test
xchg
mov
and
jo
lret
push
ljmp
roll
mov
inc
inc
cmp
shrb
icebp
shll
jo
xor
inc
push
add
mov
or
js
repz
xchg
je
sbb
push
ficoms
inc
sub
xlat
repz
push
sbb
fldt
sbb
xor
je
sbb
push
inc
scas
test
push
and
rclb
sub
je
sbb
or
test
shlb
mov
mov
lods
and
in
hlt
orb
insb
lods
push
and
ljmp
or
pop
sub
push
mov
pop
popa
mov
jmp
add
rcll
test
or
fisttpl
xchg
std
mov
imulb
pop
cmpsb
pop
mov
jmp
scas
push
adc
inc
sarb
loope
pop
je
push
xor
add
daa
push
push
xchg
clc
inc
or
leave
in
or
or
out
pop
adc
cmpb
cs
mov
dec
daa
sarl
ret
test
lret
or
scas
ror
pop
xorl
rclb
test
add
ljmp
leave
jb
je
xorb
adc
mov
xchg
int
mov
push
rol
mov
pushf
inc
inc
jnp
sub
push
cmpsb
mov
adc
outsb
push
and
cmp
adc
roll
sbb
cmp
fstpl
lcall
and
paddusb
push
sbb
adc
or
or
mov
xchg
adc
lcall
adc
adc
cmpsb
rclb
pusha
or
push
sub
adc
pop
loopne
popf
cltd
mov
xor
fsubrs
sti
jmp
rcrb
bound
pusha
add
or
mov
mov
repnz
xchg
xchg
mov
mov
rcrl
mov
xor
push
or
and
shrl
adc
sub
push
shlb
push
in
dec
jl
jecxz
jno
orb
add
push
inc
lret
xchg
push
add
pusha
and
pop
pop
inc
sub
notb
adc
into
pop
push
adc
jecxz
stos
push
or
rclb
inc
test
cltd
xor
mov
or
fsubrp
add
pop
subb
fsubrp
stos
push
cmc
or
adc
jle
notb
adc
xchg
add
jne
stos
inc
loopne
add
jae
lds
xor
sub
fidivrs
and
cmp
mov
jmp
adc
add
inc
mov
mov
or
push
mov
mov
xchg
or
or
aam
aam
push
jecxz
nop
sbb
nop
test
push
jbe
movsb
stos
adc
pop
imul
pusha
cltd
jg
sbb
scas
mov
mov
pop
aam
fadds
pop
mov
loopne
adc
or
ja
sub
mov
pop
les
loopne
aad
scas
push
xchg
mov
mov
mov
xor
inc
loop
sbb
adc
mov
lods
ja
sub
rorl
adc
cmp
sbb
cmp
div
add
shl
mov
jmp
xchg
lret
inc
rorl
testb
je
sub
inc
mov
mov
or
add
xchg
and
icebp
push
sbb
aas
pop
dec
push
shlb
push
push
xor
sti
sarb
test
inc
push
xchg
shlb
lcall
imul
sbb
data16
and
sub
mov
mov
test
les
jmp
cltd
call
cmp
xchg
cmp
sbb
lods
sbb
in
pop
mov
mov
ficomps
psrlw
icebp
jp
orb
mov
sarb
or
pop
std
mov
cmp
or
mov
lock
jno
dec
inc
xor
sub
scas
push
addb
pop
jnp
inc
rcl
or
pop
lock
jnp
jp
or
sub
cli
mov
add
sbb
push
mov
xchg
add
add
push
push
sbb
fistl
push
sbb
add
push
xchg
mov
filds
cmp
adc
js
or
and
sbbl
ljmp
mov
mov
xchg
shlb
pop
xor
faddl
cmp
pop
push
fs
add
movsl
fdivrl
xchg
jl
pop
enter
test
imull
inc
lods
add
pop
ss
mov
pop
dec
inc
mov
inc
dec
cwtl
mov
testb
pop
mov
mov
sbb
int
mov
mov
mov
in
add
lcall
add
dec
mov
dec
pop
mov
rclb
sarl
pop
mov
push
xchg
cwtl
adc
sbb
jb
xorb
add
xchg
mov
or
adc
and
jl
ret
pushf
std
sbb
or
add
jl,pn
rol
jns
push
data16
or
test
add
dec
mov
xor
daa
pop
scas
pop
xchg
push
mov
sbb
mov
int3
shr
adc
sbb
or
mov
clc
add
push
loopne
push
fistpl
pop
push
or
les
cld
ret
push
fcompl
pop
cltd
mov
outsl
jmp
out
or
out
cmp
push
aas
rolb
repnz
adc
mov
mov
or
adc
mov
and
pop
push
sbb
icebp
je
punpckhbw
ret
enter
in
mov
cli
add
xchg
pop
dec
and
dec
nop
sub
pop
mov
bound
add
out
xor
push
icebp
cmp
mov
into
cmpsb
push
orl
cmp
lret
push
dec
lods
ret
mov
push
mov
cmpl
mov
xor
sarl
sbb
aad
loope
test
add
stc
jno
rolb
mov
inc
fldcw
sbb
popa
test
mov
ljmp
icebp
dec
cs
lds
sbb
add
fists
int
addl
jo
sbb
in
or
and
xor
pushf
mov
sbb
push
sbb
int
or
or
and
add
sbb
incl
jb
imul
xor
rcll
sahf
push
out
mov
push
xor
mov
stos
push
ret
sub
cmp
adc
xchg
mov
ss
inc
jae
push
sub
sbb
push
movsl
xor
sbb
or
sub
add
loope
inc
jge
pop
es
xor
daa
call
push
xor
add
hlt
add
mov
cli
mov
jmp
or
adcl
test
aam
shll
sbb
lods
js
cld
clc
push
stos
movb
xchg
shll
xor
add
or
sbb
mov
lret
js
pop
jmp
in
cs
and
push
or
mov
jo
stos
or
loopne
fadd
stc
or
jne
dec
jmp
xor
xchg
shlb
sarl
sbb
xor
push
lahf
rorl
pop
pop
push
pop
push
mov
add
and
mov
filds
xor
adc
hlt
jmp
or
test
add
es
test
arpl
inc
repz
fcoms
push
scas
xor
shlb
push
add
sub
sbb
lock
or
sbb
push
pop
inc
pop
leave
shll
jo
xchg
mov
into
decb
mov
mov
call
dec
lcall
jmp
add
cmpsb
inc
hlt
lods
outsl
mov
or
mov
or
jl
in
stos
or
mov
xchg
mov
xchg
adc
pop
les
not
mov
sbb
sub
inc
fcmove
mov
inc
xchg
bound
cmpsb
pop
je
add
mov
add
lahf
jae
or
mov
mov
fcompl
into
pop
roll
jae
pusha
pop
loop
mov
or
cwtl
daa
das
push
push
inc
pop
dec
add
pusha
rclb
orl
mov
jl
adc
inc
cld
rclb
call
ret
outsl
mov
and
xor
mov
bound
pop
cmpsb
lret
pop
fs
or
aaa
adc
or
and
shlb
cmp
adc
xchg
pop
sbb
ljmp
adc
ret
sub
gs
cmp
inc
mov
in
nop
aam
sti
push
rcrb
add
and
pop
xor
rcll
mov
inc
xor
pop
and
mov
inc
mov
pop
ljmp
add
rcr
test
mov
push
mov
push
add
sbb
clc
jns
mov
push
mov
rorl
adc
sbb
add
mov
mov
and
add
in
cltd
inc
and
push
aam
loopne
cmp
mov
popa
mov
sbb
fwait
push
push
popa
pop
aad
std
aam
sbb
cld
or
or
iret
adc
cmp
pop
shll
fstl
push
mov
mov
mov
push
mov
xchg
push
sub
pop
push
out
mov
cltd
sub
push
mov
pop
lods
add
es
add
popf
bound
icebp
and
fidivs
icebp
rorl
ret
ss
out
adc
xchg
and
adc
popa
lret
sbb
sbbl
add
lds
mov
mov
sbb
bound
fsubs
xlat
push
je
loop
mov
jg
adc
dec
xchg
test
jb
adc
shrl
push
test
inc
xor
jo
pop
test
and
inc
or
leave
adc
rclb
push
lods
adc
scas
flds
ret
push
repnz
rcrl
fisubs
pop
in
jmp
xor
outsb
mov
sub
cld
sbb
fadds
popf
out
pop
mov
xor
idivb
sbb
sbb
sbb
cmp
or
push
stos
push
ret
fmuls
enter
inc
xchg
das
xchg
aad
stos
inc
add
movl
xchg
sub
or
aad
mov
or
rcll
inc
and
lahf
in
jno
adcb
into
mov
lock
stos
xchg
xchg
ficompl
mov
dec
inc
mov
push
push
add
rol
sbb
imulb
sbb
mov
sbb
push
scas
cmp
or
sbbb
cmp
cmp
mov
mov
mov
iret
push
bound
fstl
dec
dec
fs
loop
sub
mov
hlt
add
add
rcrb
enter
mov
jno
addb
je
popa
lret
fcmovnb
popf
push
push
push
push
or
gs
popf
xor
mov
add
xor
shrl
push
jg
popa
popf
xchg
mov
inc
mov
sbb
lret
pop
lods
mov
and
lock
in
push
mov
add
dec
xchg
pop
fimull
or
sbb
stos
es
push
loope
dec
jo
dec
subl
lret
push
push
jnp
inc
mov
and
pop
dec
shr
stos
mov
enter
xchg
cmp
mov
rorb
pop
mov
push
xchg
enter
in
loopne
push
pop
adc
mov
push
sbb
xor
adc
adc
sbb
push
pushf
mov
clc
mov
add
pop
adc
pop
es
and
enter
jae
dec
pushf
push
es
cmpsl
adc
mov
jo
test
or
dec
popa
or
adcb
mov
mov
jo
lret
jmp
add
push
pop
les
sub
scas
call
pushf
mov
stos
sbb
enter
and
ss
fwait
lret
inc
mov
sbb
pushf
mov
mov
insb
pop
xor
bound
lahf
dec
adc
xchg
pop
cltd
mov
sahf
test
pop
sbb
or
stos
add
add
stos
xchg
xchg
mov
js
mov
jmp
sbb
ret
mov
lds
loope
xchg
in
dec
inc
call
shll
cld
pop
pop
jmp
hlt
test
clc
push
sub
lods
mov
test
push
jge
stc
adc
orl
icebp
mov
adc
div
out
bound
inc
lods
and
adc
fcomps
loope
cli
nop
xlat
subl
into
into
bound
fdivs
stos
cmp
sub
in
mov
into
loopne
adc
dec
jmp
or
sti
rclb
shl
inc
andl
xchg
ljmp
mov
pop
dec
in
and
cmp
or
sbb
cmp
add
push
cmp
push
adc
aad
push
jae
out
pop
add
push
sub
jp
sub
cmp
sbbb
pop
dec
push
imul
pop
pushf
leave
rcl
push
or
mov
lahf
sub
bound
lock
or
dec
pop
icebp
xlat
inc
pop
rorl
into
jne
adc
cmp
pop
jne
sub
scas
cmp
and
repnz
iret
sarb
mov
add
sarb
xor
shrb
dec
cmc
mov
enter
pop
data16
in
jp
adc
xor
and
shlb
stos
pop
loope
cmp
repnz
push
xchg
push
cld
sub
sub
mov
inc
into
xor
sbb
outsl
sbb
stos
xor
cmp
xchg
mov
add
push
lea
add
bound
mov
mov
pop
add
dec
push
repnz
aam
sbb
mov
es
gs
lahf
testb
arpl
sbb
add
and
jl
std
popf
rcr
inc
push
lds
push
js
div
cmc
mov
mov
subl
inc
sbbb
mov
adc
mov
mov
xor
push
xchg
jmp
inc
or
es
cmc
add
ret
inc
shlb
pushf
push
pop
inc
cmp
sbb
adc
xchg
or
mov
je
xor
arpl
mov
xchg
sti
popl
lock
fwait
cmp
xchg
and
push
sub
mov
or
sbb
mov
out
cmp
push
dec
or
push
popf
inc
add
add
xchg
xorb
arpl
addr16
popf
cmp
jg
xchg
push
pop
add
add
inc
dec
repnz
test
pop
inc
loopne
add
js
lret
xchg
mov
sbb
lret
add
pusha
sub
push
test
test
push
xchg
movl
xor
jl
sub
aam
lcall
cmp
cmp
adc
or
push
mov
push
sbb
inc
decl
inc
xchg
sub
push
mov
shrl
inc
jge
mov
cmp
push
push
push
inc
adc
pop
jbe
popa
jo
push
mov
ret
jo
icebp
sub
or
loopne
idiv
jge
pusha
stos
cltd
scas
stc
outsl
mov
push
shll
sbb
push
xchg
sbb
sbb
mov
mov
mov
add
lods
nop
push
sub
inc
cmpsb
pop
push
dec
xchg
jo
int
and
jae
pop
stos
es
add
pop
or
or
daa
adc
xor
adc
mov
push
je
sbbb
push
pushf
mov
pop
aam
es
push
enter
cmp
push
add
mov
in
push
ljmp
or
insb
in
das
push
dec
imul
and
in
xchg
into
in
sbb
adc
sub
sub
rolb
roll
add
pop
cwtl
fimull
inc
aad
pop
xor
dec
sbb
cs
sahf
dec
sbb
ret
xor
mov
sbb
mov
and
push
pop
jae
jl
or
xchg
addl
xor
add
and
push
test
sbb
sub
aas
jmp
or
xchg
cltd
mov
dec
outsb
adc
xor
push
xchg
mov
or
push
add
adc
mov
push
lret
push
adc
pop
jne
stos
sub
and
sbb
add
ret
mov
fimuls
sbb
add
jo
sbb
or
mov
test
sub
sbb
adc
cwtl
xor
mov
aam
push
fildll
inc
pop
sub
mov
test
test
ss
inc
arpl
mov
add
ret
mov
lret
add
int3
push
scas
xchg
and
cmc
mov
jnp
sbb
mov
mov
adc
enter
pop
test
sub
aaa
add
dec
push
jb
mov
adcl
repnz
jmp
jo
out
mov
adc
jae
gs
add
sub
mov
mov
mov
rolb
sub
inc
dec
enter
mov
sahf
mov
mov
test
xchg
cli
pushf
push
roll
sub
fwait
sbb
or
bound
or
pop
jmp
xchg
xchg
sub
sbb
add
xorl
pusha
mov
pop
add
inc
adc
in
dec
lock
icebp
xor
push
mov
aad
mov
push
leave
cltd
cmc
mov
rcrb
imul
sub
mov
push
notb
sub
xchg
pop
mov
cmp
or
push
mov
adc
inc
inc
sub
in
and
jecxz
aad
loope
cltd
and
pop
xorl
adc
scas
sbb
inc
dec
rolb
push
test
adcb
adc
add
cli
pop
cltd
xor
gs
adc
push
cltd
push
aas
insb
stos
or
call
inc
cwtl
call
add
scas
mov
aam
js
iret
leave
add
inc
das
scas
mov
and
sbbl
loopne
outsl
jmp
in
clc
mov
js
pop
dec
loope
daa
rcrb
pop
push
jo
mov
cwtl
adc
pop
dec
add
pop
bound
dec
rclb
push
dec
xor
inc
adc
dec
shl
lds
xchg
adc
ret
mov
xor
and
jo
jo
jns
xor
loopne
jb
test
sub
mov
add
rolb
xor
int3
add
pop
dec
mov
clc
jnp
xor
sub
dec
sub
punpckhbw
je
gs
pop
or
rcll
stos
push
adc
dec
cltd
mov
or
mov
sub
push
les
adc
push
mov
add
add
mov
jecxz
push
add
xor
cmpsb
cltd
insb
out
fs
inc
movsb
dec
xor
mov
mov
hlt
lret
inc
add
cwtl
test
nop
fdivrl
jge
xor
cmp
ret
enter
mov
xor
fdivr
pushf
test
or
mov
or
add
adc
push
jmp
xchg
rorl
jl
inc
leave
mov
cmpsl
push
mov
fimuls
push
out
rol
mov
sub
inc
pop
push
addb
cmpsl
adc
add
jne
push
dec
dec
mov
fisubl
cltd
sbb
mov
adc
ss
or
or
and
mov
jmp
mov
fistl
push
xchg
and
test
ljmp
mov
adc
push
jp
or
mov
loop
sub
push
movsb
mov
cwtl
dec
cmp
sahf
test
rcrb
notb
stos
xchg
push
xchg
cmp
adc
imul
fsts
inc
lods
cld
stc
sbb
cmpsb
sub
loopne
repnz
and
or
mov
jb
mov
sbb
and
mov
test
les
push
pusha
sub
push
rolb
rcrl
xchg
mov
cltd
bound
leave
test
cmpl
cmp
push
or
mov
fmull
call
sbb
gs
mov
ljmp
add
sbb
push
lods
stos
loop
push
sub
into
pop
mov
pop
outsl
test
int3
pushf
jo
fiaddl
mov
push
sub
lods
xor
nop
pusha
fadds
or
data16
and
mov
das
sbb
mov
les
adc
aaa
inc
and
jmp
xor
xchg
sub
mov
shrb
sbb
gs
sub
rorl
add
push
inc
int3
mov
add
outsb
inc
adc
roll
js
mov
cmpsb
jb
out
sub
jmp
pop
pushf
out
or
adc
test
xor
sub
mov
sbb
add
sub
dec
jle
lret
sbb
sub
xor
iret
loope
adc
sub
xchg
test
mov
loope
pop
outsb
je
cli
pop
mov
adc
fdivrl
mov
nop
mov
and
fs
and
or
aad
push
syscall
mov
add
lds
fadd
cmp
push
add
xchg
cmp
addl
xor
mov
cmp
mov
mov
ja
sahf
push
test
in
add
xor
push
adc
mov
mov
inc
cmp
inc
cmp
add
int3
hlt
adc
sbbl
mov
cmp
lret
cmp
adc
getsec
cmp
ffreep
lcall
push
shrl
jns
loopne
add
pop
mov
push
movsl
imul
sbb
push
lea
cs
cmp
aad
xchg
sbb
fs
mov
fucomi
add
sbb
mov
cmp
mov
add
pop
es
pop
in
daa
push
mov
std
inc
inc
lods
sbb
jo
dec
aam
scas
mov
mov
cltd
inc
into
pusha
mov
pop
inc
push
iret
in
loopne
mov
xor
adc
lea
insb
or
jo
jae
rclb
or
sub
fcompl
arpl
fsub
jnp
mov
js
adc
ret
dec
push
call
push
or
inc
xor
push
sbb
xchg
jo
and
enter
sbb
pop
pop
fmul
scas
ret
scas
jno
inc
insl
cmp
pop
push
xchg
lcall
jp
pusha
cmp
or
in
or
sti
mov
mov
adc
cmpsb
sub
nop
lcall
dec
jb
in
and
rorl
push
adc
push
push
stc
leave
jl
into
inc
xchg
sub
jae
mov
dec
pop
push
shlb
mov
lods
ret
popa
loopne
inc
hlt
add
xchg
mov
xor
cmp
lret
popa
push
xchg
rcrl
sarb
shrl
dec
push
mov
leave
lock
test
mov
fwait
inc
aad
adc
lcall
xchg
pop
inc
leave
cmp
popf
clc
loopne
add
movsl
add
fimuls
lds
inc
or
in
mov
mov
sbb
mov
adc
loope
cmpsb
cli
push
or
add
andnps
scas
push
aad
fdivl
test
xchg
cmp
stos
pusha
jp
je
jno
mov
cmp
in
rcrl
rol
or
das
push
adc
inc
pop
adc
pop
or
dec
clc
push
inc
int
test
and
mov
rolb
mov
adc
dec
cmc
cwtl
add
xchg
sarl
sbb
add
push
push
sub
xor
mov
das
inc
pop
pusha
add
or
jo
adc
sub
adc
mov
shlb
rcll
xor
fnsave
inc
xor
sub
sbb
adc
inc
xchg
jmp
mov
into
loopne
int
inc
lret
lcall
add
push
rclb
xor
movsl
fcmovnu
aam
or
das
outsb
scas
push
mov
push
cld
shrl
inc
or
or
inc
shrb
push
xor
aaa
or
pop
inc
in
fcompl
lock
rcrl
mov
loop
call
icebp
adc
cmp
jno
xchg
adc
dec
sbb
xchg
sbb
lds
clc
or
cmp
mov
aas
in
lahf
fs
ja
mov
test
loope
adc
jne
icebp
cmp
sar
add
loopne
or
jmp
adc
push
je
movsb
push
push
lcall
daa
push
push
popa
roll
push
or
xor
adc
ret
xchg
or
sbb
cmp
mov
pusha
push
adc
stos
add
xchg
leave
int3
jecxz
and
shll
push
nop
test
xchg
test
lea
dec
mov
bound
popa
fstpl
das
and
icebp
negb
xchg
xchg
nop
enter
or
lock
mov
mov
adcb
pop
rolb
jp
sbb
test
movsl
cmp
mov
lahf
push
stc
adc
sbb
mov
aam
js
pop
sbb
pop
in
inc
lea
out
adc
xor
movsb
fisubl
cmp
dec
adc
sbb
push
pop
and
cmpsb
pop
daa
inc
mov
or
divb
push
pushf
dec
loop
push
sbb
mov
sub
mov
adc
popl
insb
jge
inc
leave
rclb
push
mov
xor
dec
jge
sbbb
mov
rclb
imul
cmpsl
cmp
or
push
inc
push
push
adcl
lods
sub
cmp
lock
cmp
adc
int
rol
xchg
or
test
pushf
and
xor
or
push
cmp
cli
pop
fimull
push
mov
arpl
shrb
lret
hlt
or
outsb
mov
inc
cmp
lods
sbb
in
push
dec
scas
xchg
push
aad
add
pop
push
or
or
add
and
mov
imul
sbb
xor
fnsave
stos
shl
mulb
shll
adc
cmpsb
sbb
scas
xor
push
insl
jge
push
sbb
push
cmpsb
out
adc
in
add
popa
test
xchg
lret
lret
add
leave
add
cmp
in
hlt
sbb
or
pop
mov
mov
call
lock
mov
bound
test
mov
pop
add
jl
xchg
mulb
lret
ret
enter
sahf
push
or
inc
mov
cmp
stos
or
repnz
sub
or
push
into
jmp
or
sbb
addl
xor
and
push
cli
or
fxch
adc
fisubl
pop
mov
test
adc
sub
rorb
ret
fiadds
dec
enter
popa
pop
xchg
adc
out
push
jl
jmp
mov
ljmp
andl
jle
jg
pop
inc
test
outsl
lock
or
cmp
notb
and
lret
lea
pop
pop
xchg
loop
fisttps
cwtl
xor
pop
mov
sbb
xor
sbb
sub
hlt
xor
outsb
cmp
loope
and
push
inc
or
lds
jmp
jp
lret
jmp
cmp
push
shl
pop
mov
pushf
cmpsl
push
xlat
sbb
pop
xchg
into
je
sub
setns
into
icebp
mov
adc
test
addb
test
push
call
adc
imul
adc
pop
fcoms
cmp
jo
sahf
int3
rolb
out
sbb
or
add
mov
jne
mov
sbb
sahf
stos
and
inc
cli
roll
loopne
incb
mov
or
adc
push
roll
psrlw
mov
mov
pop
or
xor
lds
pop
xchg
mov
and
mov
pop
lret
add
inc
rorb
mov
test
push
std
mov
sub
or
repz
pushf
push
fwait
mov
orb
pop
imul
xor
loope
rorl
sbb
mov
cltd
jo
push
and
inc
cmp
je
sbb
in
add
outsl
std
sbb
jo
xchg
mov
les
popa
into
daa
push
scas
sbb
mov
dec
adc
adc
ss
cwtl
and
loopne
orb
push
icebp
leave
js
sarb
addb
pop
or
mov
mov
shll
and
or
push
xchg
mov
mov
sbbl
inc
xor
lret
pop
or
out
add
in
rcrb
or
in
dec
adc
xadd
and
sbb
jno
fsubl
mov
gs
icebp
loop
xor
push
sbb
loopne
es
adc
sbb
inc
xor
inc
test
lea
or
out
push
rolb
jecxz
lds
lret
pop
movsb
inc
sub
push
in
mov
adc
add
mov
and
dec
xchg
lret
cltd
shl
add
add
cmp
add
cmpsb
push
or
ret
imul
jp
jg
mov
xor
push
punpckhdq
repnz
cmp
lret
fldt
push
scas
or
adc
pusha
pop
push
push
jo
rcll
pop
sets
rorl
rorl
lret
sbb
mov
pop
rolb
inc
ljmp
adc
mov
cmc
mov
add
sbb
aam
jb
rolb
je
sbb
pop
int
popf
movsl
mov
and
ret
mov
jb
rorb
inc
mov
mov
in
lea
or
add
add
xor
sbb
loop
push
push
push
add
fs
stos
es
pop
sysexit
pop
pop
iret
sbb
mov
ret
aad
adc
jge
inc
rolb
test
addb
mov
adc
dec
jmp
adc
call
lcall
mov
lcall
addb
push
and
add
leave
rclb
and
mov
mov
add
mov
add
mov
add
js
inc
cltd
rcl
dec
and
xor
mov
xor
loopne
mov
cmp
and
inc
xor
push
jle
push
arpl
ret
loop
sub
mov
shll
fs
mov
push
lods
cld
cmp
push
or
pop
orb
xor
push
mov
push
add
sub
test
push
add
sbb
mov
cltd
sub
jge
lods
scas
cmp
pop
jns
push
xor
mov
push
cltd
or
inc
cmp
lret
sbb
or
add
add
sbb
ljmp
pop
dec
imulb
pop
adc
test
loopne
dec
mov
inc
or
mov
mov
insl
shl
pop
sahf
inc
sbb
aad
adc
jne
jp
or
dec
shrl
sub
loope
mov
sub
jae
sub
pop
or
hlt
sbb
sahf
mov
clc
mov
shlb
push
mov
fimuls
cwtl
or
lock
push
and
fiadds
testb
jb
and
repz
rcll
sub
mov
adc
nop
add
data16
mov
sub
inc
or
shl
leave
add
mov
fwait
push
inc
mov
adc
stos
icebp
pop
fisttpll
push
pop
sub
jle
in
cli
or
mov
rorb
js
inc
int
add
sub
pop
inc
cmpsl
faddp
inc
outsl
or
sub
out
leave
add
out
jbe
aam
dec
mov
jb
add
popa
rorb
cli
cs
dec
sbb
jg
xchg
jae
or
popa
mov
push
mov
sti
inc
je
popa
jae
test
ja
xor
mov
xor
push
std
add
mov
jl
dec
push
repnz
pop
push
into
xchg
shlb
xlat
add
in
les
or
mov
adc
jnp
adc
fcomps
shl
push
mov
pop
daa
sbb
cwtl
ljmp
cmp
bound
in
js
inc
push
push
inc
loop
jb
mov
mov
xor
enter
scas
mov
sub
mov
lods
mov
push
jae
sbb
test
pop
jecxz
push
push
mov
stos
xor
icebp
icebp
mov
inc
loope
out
or
outsl
inc
loope
lds
rcl
pop
xchg
and
mov
xchg
sub
rcl
add
add
sub
jg
mov
mov
shrl
rolb
push
push
divl
pop
dec
rcll
mov
pop
mov
jo
mov
outsb
es
sbb
pop
sub
jmp
pop
lods
das
leave
add
xor
paddusb
addl
pop
scas
xchg
jns
xor
shl
jmp
cltd
pop
xchg
in
lds
aas
pop
jae
adc
jmp
cmp
fisttpl
sahf
leave
imul
pop
scas
jle
movsb
and
sbb
add
push
mov
fsubrs
jge
scas
rcll
dec
xor
mov
and
pop
sub
mov
fisubrs
js
pop
test
icebp
and
inc
or
cmp
popa
test
rclb
clc
stos
push
xor
adc
sub
cmp
cmp
das
adcb
outsb
cmp
dec
scas
call
jecxz
mov
popa
lahf
pop
lock
xor
loopne
or
lahf
rolb
inc
sbb
movsb
popa
sar
shll
sbb
push
aas
or
lock
xor
dec
sub
rolb
iret
movsl
sbb
jno,pn
out
jno
push
xor
xchg
push
std
mov
movsl
call
push
inc
or
ret
dec
push
insl
nop
stos
stc
sub
and
cltd
movsb
jecxz
xchg
ret
nop
jmp
loopne
mov
in
mov
or
adc
popa
adc
inc
shll
cmpsb
add
add
cmp
add
mov
push
push
out
mov
int
mov
ljmp
sbb
and
ljmp
js
aad
sub
sbb
lcall
push
je
mov
or
aam
cmp
jl
mov
mov
push
loop
bswap
aam
cwtl
xchg
cmp
adc
iret
push
lods
add
cmpsl
dec
repz
cltd
js
jge
movl
rclb
bnd
add
test
roll
push
jo
add
mov
xor
out
push
cmp
add
sub
push
dec
or
xor
fimull
faddl
pusha
test
fstps
ret
xchg
sub
mov
mov
add
in
lods
fcoml
jp
lret
or
icebp
push
hlt
push
pop
mov
mov
cltd
stos
pop
lds
xor
out
pusha
mov
inc
xchg
icebp
lods
push
shlb
push
push
lods
mov
inc
jl
adc
pop
addl
pusha
mov
add
add
jne
adc
mov
adc
pop
je
add
mov
scas
js
movlps
frstor
jge
inc
pop
adc
sbb
pop
lret
sub
psubw
pop
fmul
jae
pop
cli
les
adc
lea
jo
xchg
test
sub
or
rclb
shlb
xchg
cmp
imul
mov
ss
sahf
nop
shr
mov
ret
and
stos
test
dec
aam
popf
cmp
das
jb
leave
cli
imul
cmpsb
iret
push
ss
adc
xor
cmp
inc
xor
mov
mov
push
and
push
or
inc
sbb
adc
and
repnz
mov
adc
cmp
mov
push
leave
mov
in
into
leave
andps
imul
push
aam
or
push
movsb
daa
and
add
and
loop
mov
pop
out
or
jp,pn
push
popa
sbb
adc
mov
adc
testb
mov
inc
push
pop
push
mov
sbb
or
add
dec
movl
ret
or
mov
add
or
js
ret
shlb
xor
sub
ss
sub
mov
adc
lods
add
mov
add
pop
addr16
in
cmpsb
test
aaa
shlb
dec
pop
scas
sub
sbb
cwtl
rorl
push
mov
mov
adc
jne
add
jae
mov
ret
pushf
aaa
pop
cmp
and
jnp
dec
jne
hlt
adc
lret
pop
adc
sub
aad
stos
push
mov
adcl
inc
adc
test
mov
cltd
adcb
pop
mov
adc
adc
jb
sbb
mov
cmp
jb
lods
or
push
cmp
mov
dec
inc
pop
or
pusha
inc
and
adc
and
or
sub
rcrl
sub
cs
pop
adc
push
cmpsb
or
jo
daa
int
add
andl
sbb
mov
popa
int3
dec
adc
les
sbb
xchg
test
sub
into
or
jb
call
pop
roll
cmc
inc
push
mov
clc
inc
popa
cmp
pop
sbb
or
js
shll
mov
mov
mov
mov
ficompl
xor
push
orl
or
cs
adc
add
inc
pop
ror
jae
and
test
scas
add
sbb
sub
inc
cmp
inc
adcl
dec
xchg
insb
cltd
orb
add
jo
aaa
xor
ss
pop
fisubrl
ret
mov
mov
in
mov
cmpsb
and
xchg
xor
dec
mov
push
movb
add
inc
enter
cmp
xor
add
xor
out
push
inc
push
clc
rcrb
test
addr16
or
idiv
into
aad
push
test
imul
push
dec
pcmpeqb
adc
dec
loopne
adc
sub
pop
aad
mov
xor
cmp
push
repz
rolb
add
push
loopne
mov
jnp
pushf
pop
push
jge
lcall
xchg
and
andb
cli
mov
subb
addr16
mov
push
adc
ljmp
std
cltd
test
push
rclb
adc
jne
add
jbe
mov
xor
or
dec
out
cmc
shll
and
rol
out
jae
inc
xchg
stos
push
push
in
sbb
pop
push
mov
jmp
es
xor
adc
inc
decl
mov
icebp
je
dec
loopne
cs
push
mov
sub
mov
adc
or
out
adc
pop
mov
cmp
push
cwtl
sbbb
ret
push
push
add
scas
push
in
test
xor
hlt
jmp
push
jo
stos
or
sbb
pop
mov
test
cmp
call
dec
adc
jne
mov
enter
mov
int3
mov
inc
sar
adcl
dec
xchg
leave
adc
sbb
inc
mov
shll
dec
sti
jmp
jg
stos
imul
fwait
jg
cmpsl
inc
sbb
adc
cmp
rclb
cwtl
loop
mov
adc
push
fildll
xlat
dec
loop
test
sbb
push
es
dec
mov
dec
mov
xorl
push
es
decb
repz
std
mov
mov
bound
pop
push
jnp
sbb
sbb
sbb
or
mov
mov
test
andl
dec
iret
inc
hlt
aad
pushf
sub
ret
addb
nop
mov
icebp
or
add
push
mov
pop
loop
rcrb
adc
pop
inc
cmp
push
add
add
or
inc
dec
je
es
mov
ja
sbb
and
fmuls
shrl
jo
pop
addb
shrl
mov
aas
cs
in
adc
pop
push
subb
roll
ret
enter
jo
lods
dec
pop
scas
add
push
add
lret
jl
cmpb
leave
mov
xorb
orb
in
or
sub
jno
dec
dec
std
adc
cmp
adc
movsl
dec
ret
push
cmp
cli
add
gs
mov
enter
pop
cs
jno
add
movsl
xchg
sbb
dec
adc
sbb
add
mov
cmp
lahf
and
and
xchg
sbb
jle
push
pop
or
and
mov
or
adc
out
lods
push
popa
iret
jp
adc
push
enter
mov
push
or
add
addl
ret
scas
dec
call
push
xchg
ret
jb
daa
mov
cmp
inc
stos
inc
push
xor
push
nop
mov
ret
and
dec
mov
or
mov
roll
push
sbb
rol
or
and
aad
push
enter
sbb
jp
pop
pop
cs
xchg
jnp
sbb
jbe
andl
or
sbb
adc
adc
jge
xor
shlb
push
daa
cmp
pop
lcall
cmpb
je
add
xor
sbb
sub
bnd
add
mov
mov
arpl
adc
push
dec
cmp
fldcw
arpl
popw
cmp
ljmp
or
lret
and
nop
pop
nop
mov
in
dec
adcl
loopne
sbbl
fs
movb
std
ljmp
push
out
pop
scas
mov
leave
dec
adc
lahf
in
or
addr16
jmp
mov
lods
sbb
popf
mov
je
rcrb
aam
test
jp
sbb
xchg
icebp
out
int3
xchg
add
cwtl
lds
cmpl
lods
sbb
adc
jae
pop
rol
jle
jg
mov
je
test
push
dec
adc
cmp
pop
add
adc
jo
push
insb
inc
scas
js
loope
or
push
cmpsb
addr16
push
mov
faddl
mov
in
fisubs
ljmp
xor
and
mov
mov
sbb
and
add
aam
mov
mov
dec
fldt
mov
mov
sbb
cmp
stos
enter
xchg
or
add
or
add
inc
mov
mov
adc
out
adc
or
sbb
pop
bound
xchg
es
dec
stos
pushf
arpl
cmpsl
push
push
loop
add
or
pop
shrb
mov
pop
mov
ficomps
push
xor
rcll
and
shll
xor
in
mov
jnp
les
and
adc
add
pop
daa
mov
rclb
mov
mov
fcomi
cmp
jnp
aad
jmp
pop
cmp
mov
and
sub
xor
stos
xchg
jl
mov
call
mov
int
or
call
cmpsl
xor
fwait
mov
push
aaa
xlat
dec
jp,pn
shlb
mov
mov
lea
mov
mov
fwait
inc
and
pop
inc
test
push
test
pop
push
stos
test
je
or
and
adc
popa
enter
mov
sbb
leave
fimuls
orl
cmp
mov
repnz
xor
sbb
push
xor
pusha
mov
mov
rclb
push
in
cmpl
loop
bound
loope
pop
push
inc
adc
push
sahf
jae
push
aam
mov
adc
push
call
cmp
sub
push
clc
enter
rcll
jae
mov
push
mov
xchg
ds
fisubs
pop
shlb
cmp
pop
jbe
add
sub
jae
mov
mov
sbb
pop
filds
ds
push
mov
mov
pop
mov
xchg
sub
aad
dec
xchg
push
aam
dec
or
adc
dec
enter
jb
push
mov
andl
inc
cmp
mov
xchg
movsb
pop
orb
inc
or
leave
sub
stos
scas
mov
cli
push
adcl
dec
mov
cmp
adc
pop
shlb
adc
jno
das
mull
cmp
mov
cmp
or
or
repnz
femms
inc
mov
rolb
cmp
inc
add
xor
push
ret
dec
cmp
and
inc
push
cld
or
adc
mov
pop
in
or
call
mov
cld
out
cmp
test
adc
js
push
loop
or
xchg
sbb
mov
dec
xchg
subl
jno
jo
push
add
cmp
mov
inc
xchg
or
outsl
dec
jge
je
mov
or
cwtl
fsubs
adc
dec
js
mov
adcb
xor
jnp
push
push
les
movsl
ret
inc
mov
ret
mov
es
add
add
loope
sbb
aaa
jnp
and
inc
cmp
cmc
addb
lods
test
mov
rep
sar
push
sub
cli
rdtsc
or
negl
add
or
add
push
pop
push
cli
dec
sarb
pop
sub
jne
or
mov
test
jns
mov
mov
pop
mov
xor
jno
inc
mov
mov
push
adc
mov
xor
xchg
jge
cltd
add
pop
push
aad
add
pop
fucomp
pop
inc
and
dec
les
inc
jne
movsl
mov
adc
add
add
sahf
mov
mov
or
test
cli
or
shll
pop
pusha
pop
or
pop
and
cmp
adc
dec
mov
push
mov
movsl
sbb
add
push
or
xor
lods
xchg
push
pop
add
dec
ret
cmp
ret
pop
push
cmp
mov
lea
push
int3
test
pop
sarb
pop
push
inc
rcrb
push
add
in
pop
mov
push
lock
jge
ret
mov
sbb
int
movsl
sbb
pop
sar
sbb
or
add
mov
adc
adc
ficoml
sub
adc
call
loopne
cmp
jge
adc
fdivl
outsl
sbb
repnz
push
movsl
loop
jl
arpl
or
push
sbb
cmp
cmpsb
aam
testb
or
stos
or
push
mov
clc
push
push
rcrb
or
cmp
and
and
mov
xchg
sub
rcll
or
adc
mov
test
push
call
xor
pop
mov
imul
push
mov
push
jp
adc
repnz
pop
adc
adc
adc
pop
repnz
sahf
xchg
and
or
test
mov
jne
lods
xor
adc
cmp
pop
shll
inc
xchg
mov
push
or
mov
mov
cmp
mov
add
ja
mov
push
ret
scas
cmp
cli
fdivr
add
sub
mov
adc
or
loop
popa
pop
mov
idiv
or
pop
shrb
add
xor
sbb
out
into
mov
xchg
inc
pop
xor
xchg
jb
orb
or
mov
or
orb
inc
xor
xor
mov
push
jnp
aam
or
fcoms
adc
dec
cmpsb
mov
inc
ss
enter
adc
sub
xchg
jle
mov
scas
mov
add
test
je
subl
pop
nop
and
jb
icebp
hlt
in
add
xor
jl
cwtl
daa
shlb
or
add
ljmp
sbbl
pop
out
add
orb
std
mov
jnp
cmp
movb
dec
sbb
add
push
pushf
sub
sbb
loopne
setae
mov
cmpl
pushf
ljmp
push
stos
repnz
bound
mov
and
popa
test
add
inc
pop
inc
xchg
mov
mov
xchg
roll
sub
xchg
add
pop
mov
ror
or
inc
xor
imul
mov
and
loopne
es
xor
testl
addb
pop
outsb
pop
leave
das
add
jae
imulb
test
add
and
adc
lods
push
lock
sub
scas
inc
imul
cmp
adc
pop
sub
push
js
or
and
outsb
imul
pop
cmpb
sub
aad
add
add
xor
loope
dec
test
mov
add
mov
mov
xor
pop
subb
push
rcrb
jbe
mov
mov
jb
test
sub
add
test
cmp
xchg
inc
mov
mov
adc
popa
dec
notb
mov
shrb
and
test
mov
insl
movb
pop
inc
addr16
sbb
jo
pop
inc
xor
sahf
clc
andb
pop
sbb
sub
push
xchg
xchg
lods
mov
rcr
pop
and
inc
sbb
aas
add
test
inc
adc
cmp
daa
mov
sub
pop
sub
sbb
pop
inc
daa
adc
push
jg
roll
xchg
rclb
inc
in
xchg
nop
xorl
arpl
dec
cmp
notl
aam
dec
mov
dec
fstl
sub
loopne
fisubl
push
pusha
cmp
repnz
mov
clc
adc
pusha
push
pop
aam
mov
adc
inc
xor
push
xor
cmp
sub
push
les
push
jnp
xlat
sbb
mov
mov
inc
lods
push
mov
add
pop
xchg
or
mov
mov
mov
sub
mov
mov
pinsrw
cld
imul
fcompl
cmp
gs
adc
mov
push
jne
pop
stos
or
popf
mov
repz
js
pop
daa
movsb
gs
mov
or
push
push
cmp
mov
or
sbb
ljmp
xor
es
cmc
adcl
test
aam
lcall
cmp
or
sub
int
dec
movsl
enter
outsb
ret
push
mov
pextrw
jo
aam
mov
inc
xor
pop
aad
mov
mov
dec
test
pop
or
icebp
rcrl
sub
inc
repz
sbbb
cwtl
sbb
sbb
test
lea
outsl
or
lock
mov
subl
push
shrb
dec
pusha
jb
mov
adc
mov
test
mov
push
jg
sbb
shlb
adc
in
add
adc
or
mov
add
mov
jnp
stos
stos
xor
lock
xlat
test
sub
inc
and
ret
xchg
addl
jl
push
or
pop
cli
or
push
mov
sbb
stos
dec
sbbb
mov
call
test
adc
sbb
loop
imul
inc
cmp
cmp
cmp
sahf
in
enter
pop
addr16
pop
lods
push
mov
test
inc
dec
inc
push
test
movsl
out
add
scas
or
int
cmp
fimull
sub
adc
gs
xorb
lock
sbb
inc
out
inc
lock
inc
cmp
pop
rcll
push
into
ret
mov
sub
and
xchg
sahf
or
lcall
lcall
push
add
push
xchg
inc
mov
sbb
pop
in
sub
pop
cld
cmp
push
shl
sbb
pop
lret
or
mov
lea
inc
fwait
packsswb
stc
adc
xor
jb
or
sub
roll
push
inc
push
push
shl
inc
pop
lcall
mov
push
xor
dec
icebp
fisttpl
and
arpl
cmpsb
cwtl
add
aaa
mov
cmpb
pop
jbe
pop
je
das
rclb
test
push
sbb
jo
pop
sahf
nop
fldenv
dec
xor
add
aad
cmp
cs
mov
insl
rorl
add
loope
sahf
add
ret
test
push
inc
rcll
dec
mov
out
push
xor
icebp
or
pminsw
rolb
jp
lret
aaa
push
jnp
dec
popa
mov
inc
xlat
push
je
lret
bound
mov
or
mov
aas
sbb
sbb
xchg
call
xchg
sbb
push
inc
cwtl
sub
rclb
pop
sbb
bound
clc
imul
xchg
mov
add
push
sub
lcall
or
hlt
push
enter
test
ficoml
sbb
push
inc
push
ret
add
push
adc
push
mov
movsb
orb
test
test
call
mov
std
add
lret
sub
ret
mov
dec
test
rorb
rolb
jge
inc
or
loope
lock
into
mov
cmp
lret
push
xor
nop
or
je
pop
jae
or
push
mov
jae
xor
mov
mov
loop
ds
push
lods
xchg
inc
mov
pop
dec
fs
sub
dec
push
xchg
ror
loop
cwtl
aam
pop
les
add
sar
lods
xor
jp
xor
mov
xchg
sub
xor
sbb
pop
gs
pop
sbb
sub
push
lock
inc
loopne
xor
mov
jle
in
mov
rcr
pop
out
add
inc
daa
push
cmp
push
stc
add
sbb
sbb
inc
pop
or
xor
xchg
shrb
jg
mov
xor
jge
inc
cli
mov
lret
ret
test
xchg
adc
push
leave
add
pusha
sub
outsb
sbb
add
push
and
mov
add
adc
push
mov
rcr
aad
mov
inc
lret
adc
sub
add
jne
or
adc
inc
cmpsl
sbb
xchg
add
and
lret
mov
inc
sbb
pop
mov
cmpsl
into
jecxz
rclb
add
push
and
jecxz,pn
sar
or
xchg
mov
inc
lods
xor
adc
add
test
sbb
pop
pop
add
mov
xor
push
jp
and
cmp
dec
mov
in
or
jmp
add
mov
mov
loope
or
roll
and
push
adc
dec
sub
mov
dec
xor
mov
mov
nop
leave
orb
push
into
andb
invd
add
xchg
jne
popa
pop
insl
push
mov
popa
icebp
lods
push
scas
push
xor
stos
out
jp
andb
inc
shll
sub
loopne
pop
mov
sub
sbb
xor
sbb
add
pop
les
inc
cmp
cmp
or
xor
push
push
shl
or
adc
pop
or
push
stos
add
dec
hlt
xchg
imul
movsb
ds
xchg
and
sbb
and
adc
or
dec
inc
lock
fs
aaa
and
mov
jb
icebp
add
adcb
jecxz
lcall
aaa
imul
dec
mov
jmp
or
xchg
test
adc
rcr
add
push
cmpsb
push
inc
dec
testl
push
gs
repz
push
enter
mov
into
or
int3
loopne
mov
mov
lret
dec
test
xlat
pop
mov
add
cld
push
pop
aam
cmp
iret
jmp
cmp
sbb
add
sbb
pop
scas
push
repnz
or
inc
out
jge
mov
xor
rorb
add
mov
push
sbb
mov
shrb
icebp
sbb
xorb
adc
jbe
dec
scas
add
dec
addl
or
mov
ljmp
scas
sbb
aad
mov
nop/reserved
or
pop
lods
sbb
or
mov
rclb
dec
leave
and
pop
sarb
les
add
or
or
inc
pop
aas
pop
push
inc
pop
inc
push
aam
push
pop
test
into
shr
notl
mov
das
inc
xor
cmp
push
push
push
pop
dec
in
jae
lock
call
inc
push
cli
sbb
mov
mov
pop
mov
dec
aas
lcall
mov
icebp
push
jmp
jo
fisttpll
add
shll
pop
jae
mov
mulb
cmp
sub
push
or
sbb
sbb
sub
sbb
subl
fmull
push
inc
pop
mov
push
jmp
test
sti
sbb
mov
or
cmp
jecxz
add
or
inc
xlat
or
test
fiadds
inc
jg
jg
stos
es
or
cmp
adc
xor
mov
jb
and
and
mov
dec
inc
dec
xor
mov
out
add
mov
adc
xchg
mov
mov
stos
add
jo
push
xchg
cmp
cltd
xor
out
push
adc
cmpsl
push
add
outsl
fildll
in
pop
punpcklbw
adc
ret
add
rclb
mov
ret
insl
jle
push
push
popf
lods
movl
cmp
fsubs
push
dec
into
ret
cmp
jecxz
and
sbb
scas
adc
push
adc
mov
fs
fwait
test
jmp
or
xor
daa
add
sbb
sub
push
inc
xor
clc
mov
arpl
or
inc
xchg
lds
test
sbbb
jne
adc
sub
or
adc
pop
les
mov
sahf
mov
push
push
adc
adc
pop
pushf
adc
jo
sub
adc
addb
cmp
or
xchg
add
or
adc
lcall
outsb
inc
add
inc
adc
sbb
adc
decb
inc
fwait
repnz
inc
pop
inc
test
lds
sbb
sbb
mov
lret
test
jmp
ret
popf
xor
mov
fldenv
pop
pop
imul
push
leave
cmp
clc
enter
mov
mov
lock
sbb
js
fcoms
jge
jl
scas
fwait
jb
popa
adc
notb
xchg
push
movsl
nopl
xor
call
push
pop
and
and
xor
push
pop
ss
adc
push
mov
popa
sub
jp
test
sub
push
negb
jmp
ror
sbb
test
push
xchg
sbb
das
push
sbb
andl
fildll
mull
xor
inc
add
and
xchg
ret
pop
hlt
mov
adc
xor
incl
pop
lods
jo
pop
push
mov
mov
sbb
das
aad
rcr
adc
add
sbb
sbb
inc
iret
mov
add
lcall
xchg
xor
mov
add
sbb
adc
movl
push
add
stc
aam
inc
mov
add
pushf
cli
mov
mov
lds
add
lods
ret
sub
xor
aad
rclb
mov
dec
lds
inc
and
subb
push
add
fucomp
push
push
sub
mov
loop
add
pop
or
hlt
ret
add
stos
add
inc
orb
fs
outsb
pop
insl
call
ficompl
scas
rclb
sbb
adc
adc
gs
dec
push
jae
fs
loopne
pop
add
out
cmp
es
inc
xchg
push
mov
jmp
popf
add
dec
xchg
stos
out
repz
addb
jge
adc
sbb
icebp
loop
xchg
nop
mov
push
or
dec
les
dec
xchg
ljmp
mov
cmp
mov
sbb
cmpl
in
pop
inc
add
test
ljmp
imul
faddl
loopne
movsb
or
or
in
push
mov
sub
push
xor
ret
xchg
push
aam
mov
je
dec
rol
sbb
mov
sbb
inc
stos
jo
dec
popf
fdiv
add
loopne
mov
add
push
sbb
ret
rorl
or
adc
add
lock
inc
aam
rolb
add
adc
ret
inc
inc
cmp
mov
mov
add
repnz
sbb
out
cmp
add
mov
jmp
rclb
mov
sbb
mov
shrb
test
ret
scas
aad
imul
jl
mov
int
inc
inc
stos
sbb
add
enter
pop
inc
push
pop
xchg
sbb
mov
cltd
push
ljmp
sbb
adc
adc
adc
and
leave
sbb
lods
pop
xor
test
or
push
lret
xor
jmp
inc
push
orw
call
shrl
jnp
add
inc
sub
test
inc
push
inc
xor
push
mov
add
add
pop
add
in
adc
mov
or
adcl
sub
and
daa
cltd
xchg
add
mov
cmpsb
ret
inc
sbb
and
mov
bound
daa
sti
dec
icebp
subb
mov
inc
int
add
push
xchg
mov
or
out
ss
stos
inc
je
adc
add
adc
cltd
add
add
push
inc
mov
stos
hlt
cmp
stos
xchg
out
pop
xor
dec
roll
data16
iret
push
or
sbb
cltd
fiaddl
jnp,pn
push
loope
movb
lcall
sub
test
or
cmp
adc
idivl
pop
shl
xchg
stc
ret
sbb
or
mov
and
sbb
pop
or
push
dec
push
pop
or
push
fsubr
mov
gs
push
stc
pop
add
loope
das
shll
and
push
std
ljmp
imul
nop
sub
or
add
xchg
lock
xor
test
push
push
jecxz
xchg
dec
add
dec
xorb
imul
ss
shll
fcomps
mov
je
push
jbe
adc
scas
sbb
and
call
loope
mov
add
cwtl
xor
push
xchg
pushf
mov
or
xchg
fs
cmp
clc
mov
jo
sbb
mov
mov
fildll
loop
or
push
sahf
jo
mov
shlb
jb
pusha
stos
sbb
mov
xorb
mov
sbbl
sbb
mov
call
adc
mov
hlt
subl
xor
adc
hlt
or
inc
and
pop
adc
adc
jp
push
orl
sub
insb
lret
call
jno
test
loope
test
stc
cli
ficompl
fmul
push
jmp
inc
adc
or
rcll
mov
es
add
into
test
lock
mov
mov
adcb
add
mov
or
adc
xchg
lret
or
add
mov
test
movsb
sub
adc
pop
insl
pop
aam
arpl
sbb
push
jnp
add
out
xchg
add
xchg
cwtl
stos
divb
fwait
stc
mov
gs
in
or
mov
lret
nop
mov
xchg
adc
aad
mov
lds
dec
push
sub
inc
shrl
sbb
xor
jbe
imul
loop
add
idiv
scas
lods
xor
insb
into
and
mov
popa
push
inc
into
lock
paddq
pusha
adc
xchg
xor
std
xor
adc
add
pop
adc
cmpsl
inc
lock
xchg
inc
and
push
jo
or
das
cli
sub
add
xor
or
rolb
jg
cmc
clc
cmp
fdiv
sbb
dec
pushf
mov
mov
testb
mov
orl
push
std
xchg
add
test
add
fiaddl
sti
roll
aaa
cs
adc
inc
mov
leave
std
call
ret
mov
repnz
push
fcomps
xlat
add
scas
add
daa
mov
sarl
push
fmul
push
and
icebp
stc
or
mov
jbe
inc
sarb
sub
mov
lods
rorb
mov
push
or
rclb
call
and
cmpsl
sbb
jmp
mov
lea
inc
xor
ret
call
sbb
add
push
popf
sbb
gs
rcr
sbb
inc
dec
push
push
push
sub
sbb
adc
mov
fbstp
adc
add
and
loop,pt
xor
pop
enter
xlat
sbb
stos
cmp
scas
xchg
push
push
adc
adc
adc
xor
push
sbb
int
xchg
mov
stos
and
addl
out
sub
sub
xlat
inc
sti
pop
in
int
push
mov
loop
int
stc
hlt
jae
dec
test
rcrl
and
mov
dec
sub
test
loop
jno
pop
sbb
mov
out
add
jb
push
xor
xchg
call
sub
dec
cmp
js
call
clc
add
push
pop
popa
ljmp
or
rcrb
lret
adc
ret
div
push
shrb
push
insl
pop
mov
daa
pop
leave
or
cmpsb
or
jp
xor
or
int3
out
dec
scas
adc
test
push
andb
xlat
mov
fsub
or
movsl
shrb
or
and
enter
mov
test
cmc
mov
inc
sbb
xor
mov
fimuls
ret
or
sbb
mov
lock
mov
push
andl
cmp
pop
mov
xchg
cmp
add
push
mov
mov
lret
into
push
stc
add
add
cs
out
clc
add
shlb
sub
add
inc
mov
data16
jb
cmp
clc
pop
sbb
push
int3
mov
cmp
adc
sub
popf
add
adc
sbb
add
sbb
xchg
loop
mov
adcb
add
adcb
fsts
jne
push
je
inc
mov
loopne
out
pusha
repnz
push
fadds
push
inc
add
push
sar
push
fwait
sub
bound
push
cs
adc
test
inc
je
dec
and
fistpl
inc
mov
jp
inc
movsl
inc
test
sbb
pop
xlat
into
rolb
and
dec
bound
test
outsl
push
test
cltd
push
sbb
les
sub
repz
xlat
adcb
or
add
cltd
enter
cmpl
addl
sbb
mov
ljmp
les
sub
lcall
or
clc
or
lock
rclb
popf
inc
or
or
push
inc
pop
jge
sbb
push
sub
cli
inc
int3
daa
ja
push
add
adc
xchg
mov
and
sbb
or
pop
xor
and
nop
mov
and
icebp
jp
or
adc
pop
inc
mov
mov
or
jo
adc
movsb
pusha
adc
add
rolb
fwait
mov
daa
jmp
aas
scas
sbb
sarb
rcll
stc
ret
inc
psubsb
je
negl
sbbb
addb
outsl
and
adc
mov
pop
mov
pop
and
mov
xor
or
push
shl
fs
cmp
cmovle
sub
pop
inc
pushf
pop
mov
dec
sbb
pop
add
int
gs
jb
or
loopne
mov
or
add
sub
andl
ja
push
sub
loope
mov
dec
cmp
adc
adc
cmpsl
dec
push
pop
add
movsb
push
test
aas
icebp
pop
adc
push
add
add
sub
shl
push
rolb
and
or
or
ret
lcall
inc
inc
cmp
adc
ret
js
push
add
xor
add
in
adc
pusha
pop
adc
jge
lret
shlb
mov
out
sub
imul
or
ret
pop
lds
rorb
ret
mov
add
jp
and
ret
sub
int3
mov
mov
enter
sbb
xorb
sub
pop
push
inc
push
and
add
cli
pop
or
adc
lret
mov
lock
cmp
xchg
leave
mov
int
sub
cmp
or
jp
es
test
mov
or
adc
loop
ffree
push
push
stos
push
adc
or
adc
lcall
or
sub
inc
push
or
pop
cmpl
pop
push
loope
mov
enterw
xchg
push
enter
dec
not
sbbb
pop
or
cmp
mov
jecxz
mov
int
ret
cmp
icebp
or
pop
xlat
out
push
xchg
cmc
jb
sbb
inc
loope
loope
movsl
es
lods
in
inc
sbb
dec
sahf
push
stos
sbbb
arpl
pop
xor
adc
lods
popa
xchg
add
stos
stos
cmp
stos
push
mov
jae
scas
push
rolb
cmc
mov
push
and
or
jne
loopne
xor
inc
fbld
cli
push
and
les
cmpsl
sub
daa
hlt
leave
es
inc
ret
mov
jl
cmpsb
fisttpll
xchg
rorl
xchg
loope
stos
mov
mov
shrl
mov
mov
add
out
js
jb
in
sbb
sbb
and
pop
jno
xchg
mov
sub
or
dec
test
loopne
push
or
pop
js
or
mov
xchg
mov
add
pop
mov
add
popa
pop
std
testb
adc
rorb
sbb
push
inc
mov
pop
add
adc
mov
leave
add
scas
mov
push
push
leave
cmp
negl
push
dec
lret
in
and
cltd
or
jo
mov
pop
ret
inc
xchg
pop
cmp
outsb
repnz
dec
inc
and
push
fucom
or
enter
jp
or
ljmp
enter
xchg
ljmp
insl
pop
rcrl
popa
pop
adc
cmp
adc
data16
mov
sbb
sti
icebp
adc
adc
subb
push
cld
push
cmpsb
push
sub
mov
or
scas
pop
xlat
sbb
cmp
jl
testb
dec
mov
sahf
cmp
xlat
lret
or
sub
sbb
add
dec
add
lret
int
mov
xchg
stos
inc
add
pop
mov
and
add
dec
sar
idiv
mov
mov
push
mov
int3
push
sbb
icebp
imul
xchg
pop
movsb
inc
sub
push
inc
dec
mov
jno
pusha
ret
lcall
inc
push
mov
xchg
jecxz
lret
ljmp
inc
xor
adc
adc
or
inc
xor
bound
push
ret
dec
arpl
fiaddl
dec
adc
push
push
xchg
adc
mov
mov
pop
mov
ja
cli
pop
mov
test
rol
into
imul
adcb
add
pop
pushf
lret
adc
xchg
push
adc
add
mov
dec
loop
punpckhbw
push
jne
push
dec
sbb
orb
add
inc
mov
insl
add
or
sbbl
jo
cmpsl
pop
and
inc
cmpsb
inc
dec
insb
lahf
fldenv
pop
clc
pop
dec
ret
inc
cmp
popf
ffree
nop
push
orb
rolb
lods
test
inc
adc
inc
sbb
je
jb
enter
shl
push
sub
mov
dec
gs
add
jge
bound
fists
inc
add
in
add
ret
lret
push
sub
cmp
mov
lds
lods
inc
in
sti
and
cmp
push
stc
popf
lret
shrb
or
sbb
xchg
xchg
xor
xor
ret
mov
dec
lret
and
ljmp
clc
and
push
aam
sub
push
sub
out
adc
push
cmc
xor
movl
jo
lds
mov
mov
cmp
dec
fsub
adc
jmp
scas
cmp
mov
data16
js,pt
xchg
pop
inc
xor
stos
lds
or
or
mov
adc
clc
sbb
test
push
add
in
inc
icebp
add
xchg
pushf
popf
adc
mov
cmpsl
xor
loope
pop
add
jmp
mov
out
inc
xchg
in
sub
and
mov
subb
adc
lret
xchg
shll
or
lret
inc
repnz
aam
adc
aaa
lahf
sub
cmp
rclb
clc
dec
cmp
push
fmuls
and
or
adc
imul
negb
xor
inc
orl
dec
xchg
pop
mov
mov
pop
inc
shll
inc
push
xor
mov
lea
xchg
jge
ljmp
mov
adcl
xchg
jg
inc
out
dec
into
cmp
mov
or
imul
add
dec
add
mov
pop
aas
pop
or
rorl
out
into
enter
jno
mov
adc
mov
or
inc
or
dec
loope
ljmp
adc
mov
sub
mov
sbbb
mov
outsl
flds
cli
fisubrs
popa
dec
mov
push
addb
sub
das
test
and
pop
push
test
xor
fisubl
dec
pop
inc
add
or
subl
push
call
out
in
add
pop
shl
cli
jae
xor
popa
rolb
lock
nop
adc
lds
cli
adc
push
push
fsubl
push
mov
icebp
or
jl
sbb
sbb
out
outsb
mov
test
sti
pop
in
push
cmp
push
inc
or
adc
sbb
int
enter
inc
push
cltd
jo
daa
add
xchg
adc
orb
mov
push
push
leave
leave
std
rcrl
inc
sbb
pusha
push
mov
mov
mov
mov
push
mov
mov
pop
test
sbb
mov
cltd
lea
and
lock
inc
jmp
cmpsb
adc
cmp
loop
es
inc
js
mov
push
rolb
fld
pop
pop
and
and
xchg
sbb
out
push
mov
dec
push
mov
jmp
cmp
add
and
add
pop
sub
roll
and
int3
insl
aad
ljmp
enter
cmp
adcl
jo
jge
leave
insb
xchg
mov
leave
xchg
add
pop
dec
js
mov
jnp
and
add
xchg
cli
or
dec
push
or
dec
mov
enter
test
xor
enter
adc
addr16
add
enter
test
sub
pop
test
or
and
mov
pop
test
lds
lea
in
stc
cwtl
test
sub
jl
nop
stos
push
inc
sahf
lods
sbb
std
cmp
out
ret
dec
pop
out
sbb
add
je
sbb
test
cmp
push
mov
xchg
sbb
pop
jl
out
add
into
sub
push
jo
push
xchg
mov
test
mov
cmp
ret
jne
pushl
or
push
adc
push
call
sbbl
lret
add
rclb
test
sarl
cmp
into
push
adc
leave
inc
in
aaa
mov
lock
push
imul
mov
call
mov
test
mov
ja
push
add
and
mov
xor
add
pop
into
xchg
popa
mov
dec
mov
out
add
fwait
jb
mov
xchg
inc
mov
jnp
mov
push
push
mov
or
cltd
sub
dec
mov
repnz
stos
cmp
push
jne
iret
nop
sbb
or
push
addl
call
pop
rcll
cs
repnz
scas
adc
push
cmp
loopne
addb
add
inc
hlt
and
push
pop
add
cmp
jbe
iret
add
adc
sbb
sub
cs
add
dec
adc
sbb
lods
repnz
sbb
push
test
add
cmpsb
mov
jl
ret
xchg
call
jne
pushf
leave
inc
aas
jecxz
mov
popa
faddp
pop
rcrb
test
sub
dec
add
in
mov
nop
and
imul
shll
scas
jb
test
dec
scas
mov
psllq
loope
inc
and
int
mov
scas
sbb
adc
aam
lock
clc
ljmp
mov
cs
rdmsr
cmp
test
pop
sbb
inc
push
cmp
mov
in
pop
jo
test
sbb
xor
mov
or
sub
inc
pop
xchg
fists
lret
or
pop
mov
jecxz
out
fstpl
shl
mov
sar
xlat
xor
add
dec
jne
stos
inc
fisttps
js
push
rorb
lcall
pop
stos
sub
and
sub
and
pop
and
orb
and
mov
push
cmp
dec
add
adc
adc
enter
jb
push
inc
lods
jmp
shlb
or
inc
movsb
add
sbb
push
sbb
mov
rcrb
mov
movsl
lret
testb
push
add
rorb
mov
inc
mov
stos
jne
insl
add
rcll
negl
push
pop
test
xchg
into
clc
cmpsb
adc
inc
daa
movsl
js
add
push
popf
rcll
cmc
or
adc
adcb
cmp
testb
xlat
loope
loopne
mov
dec
pop
js
cmp
iret
cmc
add
mov
mov
insb
pushf
sub
push
adc
push
lret
pop
xor
rcll
ret
sarb
popa
add
and
ret
ret
xor
sbb
shlb
adc
pusha
pop
jne
ret
pushf
push
in
inc
adc
lcall
outsb
imulb
dec
push
wbinvd
push
xor
pop
aad
xor
inc
dec
sbb
cmp
and
idivl
stc
mov
lret
enter
or
rcll
pop
lcall
idivl
pop
fs
dec
pop
clc
mov
sub
or
rcll
test
push
je
repnz
adc
adc
mov
sub
sub
xchg
xor
jne
cmpsb
mov
add
mov
mov
or
mov
sbb
scas
add
lret
xor
loope
xchg
shlb
and
dec
push
je
mov
adc
rcrb
mov
adc
test
jbe
cmp
or
shl
mov
pop
leave
mov
sub
and
mov
pop
adc
jb
loopne
cmp
cmp
call
mov
inc
movmskps
pusha
push
xchg
ret
loop
es
rcll
lret
lea
or
add
and
or
xor
add
adc
pop
sbbb
mov
push
loope
mov
addb
jae
mov
push
adc
into
test
mov
push
or
cvtpi2ps
test
fcomps
push
jge
rcrb
inc
pop
mov
pop
pop
sbb
enter
pop
pop
sbb
es
mov
or
dec
adc
mov
call
pop
add
push
mov
xor
and
xor
inc
imul
clc
sbb
stos
inc
loop
xchg
mov
push
push
inc
inc
imul
push
xchg
adc
push
fldt
inc
into
icebp
pusha
shll
testb
sbb
dec
jecxz
inc
add
fistps
jae
jmp
xchg
rcr
js
daa
or
sahf
sbb
sub
inc
pusha
pop
xlat
mov
adc
push
rclb
adc
xchg
pop
inc
icebp
sub
shll
sub
mov
inc
add
jbe
pop
ret
adcb
add
sbb
xchg
push
daa
js
mov
fbstp
push
cli
clc
or
test
push
sub
mov
xchg
mov
cwtl
or
pop
cli
out
and
cmp
push
jnp
or
pop
loopne
and
dec
orl
repz
sbb
or
and
jo
orb
and
inc
lret
clc
test
testl
add
sbb
sub
mov
pop
sbb
jo
shr
jecxz
mov
adc
mov
in
add
call
xchg
or
push
sub
mov
loop
cmpsl
cmc
jo
pop
xchg
or
mov
mov
xchg
lahf
fwait
mov
ss
xchg
rorb
addb
or
or
cmp
xchg
adc
add
pop
add
push
test
pop
cmc
insb
cs
shlb
pop
in
movsb
imul
adc
xchg
ret
push
or
push
rclb
dec
pop
into
fadd
mov
jnp
and
fs
lcall
inc
and
pusha
push
or
dec
cmc
mov
pop
inc
and
mov
adc
mov
lret
or
ljmp
dec
cmc
stos
cmp
push
xchg
test
test
push
pushf
sbb
push
sub
int
mov
mov
mull
mov
ret
mov
ja
add
jmp
adc
inc
outsb
adc
dec
ret
rol
insb
xchg
adcb
push
arpl
call
test
out
push
les
lea
jbe
sub
sub
lahf
inc
add
test
shrb
andl
sub
pop
jge
sub
sub
stos
lds
ficoml
call
sub
dec
and
repnz
adc
jae
and
mov
pop
push
push
and
adc
clc
push
setl
add
adc
cmp
mov
mov
add
xor
jb
jp
stos
sti
jle
ret
cmp
cwtl
aam
or
das
mov
push
inc
or
movsb
cmpb
js
xor
mov
mov
dec
add
cmp
adc
mov
adc
int
fs
stos
dec
push
in
cwtl
rolb
push
bound
mov
pop
cs
and
aam
loopne
imul
cmc
mov
or
pop
movsl
and
iret
les
push
test
ds
test
sbb
jo
in
inc
loope
adc
cmpsl
addb
inc
adc
and
xor
loopne
mov
cmpsl
sbb
push
js
stos
loope
cmp
daa
lods
xor
nop
push
shrl
push
sub
jne
enter
out
dec
out
lock
inc
mov
int3
dec
add
and
add
mov
pop
outsl
add
dec
mov
push
les
pop
pop
stc
jns
mov
and
leave
int3
mov
adc
test
aaa
sub
fsubr
adc
and
or
or
adc
pop
movl
sub
sub
leave
sub
sarb
loope
inc
arpl
aaa
into
mov
add
mov
je
jl
or
sbb
push
cmp
out
pop
ret
call
stc
sbb
scas
fbld
or
call
inc
adc
mov
inc
dec
into
loopne
popa
push
push
loopne
sbb
out
loopne
inc
add
cmpl
mov
push
mov
mov
add
pop
lods
orb
daa
push
sub
nop
sbb
push
push
jle
aas
push
inc
pushf
mov
push
adc
push
popa
and
cmp
sbb
jbe
idivl
jo
pusha
adc
sbb
movsl
dec
xchg
pushf
push
lock
push
push
cmp
test
add
xor
and
cmp
add
push
inc
mov
mov
add
push
inc
repnz
inc
lsl
dec
sbb
pop
inc
jae
inc
jo
adc
stos
mov
pop
icebp
or
adc
cltd
lods
inc
adc
frstor
jb
inc
int
sbb
cmp
ss
and
ret
mov
push
fidivl
jnp
lods
lock
testb
sub
jae
rcrb
dec
daa
push
or
and
stos
jb
add
sti
mov
adc
pushf
mov
test
mov
add
sarb
bound
cmp
and
push
cmp
push
dec
sbb
insb
dec
leave
lock
cmpsb
inc
and
and
rolb
xchg
cmp
and
jo
leave
sbb
or
or
push
pop
push
push
sub
sbb
and
xor
fistpl
push
adc
dec
add
push
or
lret
adc
addr16
xor
sbb
adc
inc
and
stos
aaa
sub
orl
push
push
push
pop
adcl
shll
insl
mov
push
ljmp
lods
or
inc
adc
push
adc
pop
cmp
push
sbb
lret
gs
mov
mov
push
sbb
xor
rolb
dec
mov
call
or
fnstcw
mov
adc
mov
mov
adc
cmc
rol
xor
mov
rclb
push
inc
subb
das
jb
sub
sub
ret
das
sarl
insl
aad
loopne
lret
ret
icebp
add
adc
push
or
adc
mov
mov
fwait
cwtl
push
cmc
hlt
xchg
add
and
adc
call
in
xchg
xor
or
sarb
pop
cmp
xor
hlt
mov
jo
in
xor
xlat
push
push
and
cmp
pusha
mov
ret
scas
and
add
fldenv
push
add
xor
rolb
dec
sbb
add
scas
mov
andb
jge
dec
int
mov
sbb
xchg
imul
add
mov
jp
inc
sbb
pop
int
sbb
or
loopne
pop
pop
push
push
add
out
enter
xor
js
test
shlb
call
mov
rcll
lea
xchg
clc
pop
jmp
pop
mov
ljmp
or
cmp
rolb
fcmovb
scas
inc
adc
adc
ljmp
inc
div
adc
xor
mov
fsub
stos
jmp
ret
mov
jnp
pop
mov
sbb
call
in
ds
sbb
sbb
and
out
xor
push
xchg
lock
jecxz,pn
clc
shlb
mov
sub
sbb
pop
add
jb
sub
or
sbb
cmpsl
push
cmp
sbb
aad
dec
adc
rolb
dec
inc
pop
sbb
enter
push
insb
or
add
inc
mov
sub
shlb
sarb
cmp
mov
pop
enter
mov
sbb
stos
roll
jge
int
stc
icebp
push
push
lock
test
add
mov
sbb
shlb
lods
shl
mov
pop
test
or
test
idivb
or
adc
and
cmp
pushf
pop
mov
dec
adc
ljmp
jo
cmp
mov
loope
push
cmp
jecxz
imul
add
adc
mov
pop
cs
jbe
mov
or
adc
mov
pop
cmp
mov
or
push
adcb
icebp
cli
or
inc
adc
push
stos
sub
pop
cmp
pop
int
loopne
lcall
rcrb
xor
ret
daa
sbb
push
mov
in
push
add
loope
add
jle
stos
mov
fadds
or
inc
ss
ret
xor
call
push
cmc
inc
lods
insl
aad
std
aas
dec
push
mov
pop
push
lret
jmp
inc
mov
call
jo
sub
and
movsl
mov
mov
lock
xchg
clc
mov
test
sti
call
add
test
cmpsb
xchg
mov
inc
jge
lret
dec
cmp
jnp
xchg
mov
add
mov
adc
xchg
loop
inc
lods
add
stos
js
sbb
dec
inc
scas
andl
push
inc
adc
mov
xchg
add
shrb
mov
bound
arpl
xor
insl
adc
push
xor
out
or
test
push
push
adc
pop
mov
mov
push
out
loopne
lods
gs
pop
in
cwtl
or
mov
cmc
stc
xlat
inc
mov
adc
inc
addr16
mov
daa
pop
mov
es
sub
subb
mov
add
mov
fildll
push
popa
push
push
push
je
mov
and
stos
lds
adc
fldenv
push
hlt
mov
es
shll
inc
out
mov
inc
xchg
inc
push
pop
aam
mov
shrb
jnp
dec
aad
cmp
int
pop
push
pop
jne
sbb
cmp
stos
adc
xor
or
scas
pop
rol
adc
movsl
dec
scas
bound
rol
cmp
dec
mov
jle
push
lret
inc
or
xor
or
mov
test
dec
mov
xchg
out
jmp
sub
inc
adc
mov
adc
in
push
xor
push
cmp
sarb
push
dec
xchg
jne
ljmp
xor
and
xorb
add
rcr
add
int3
addb
sar
sub
cli
incb
push
and
mov
cmp
gs
ljmp
jo
cmp
movl
cwtl
xor
push
loope
es
push
enter
or
mov
push
cmovne
inc
mov
pushf
push
inc
cmp
lret
mov
mov
cmp
push
pusha
xor
fsts
adc
xchg
jb
mov
adc
loopne
sbb
gs
rclb
or
adc
or
stos
pop
cmc
rolb
mov
inc
jae
test
in
inc
pop
or
push
add
add
pop
pop
xor
icebp
jg
pop
xchg
add
mov
add
push
into
sbb
pop
jmp
push
adcb
lret
sub
shrl
jecxz
jp
enter
stos
adc
add
or
lsl
mov
adc
pop
cmp
or
inc
mov
repz
push
push
fbld
xchg
les
xchg
mov
and
mov
cli
add
mov
jmp
mov
adc
mov
push
sub
add
ljmp
push
adc
shlb
mov
jo
pop
addr16
add
js
and
iret
jmp
inc
scas
adc
ljmp
cmp
mov
add
or
adc
mov
movsl
ret
xor
mov
orl
pop
xor
filds
je
mov
mov
cvtpi2ps
lcall
pushf
or
push
cwtl
push
inc
out
push
jge
sti
lret
sbb
or
je
in
xor
xor
inc
rorb
xchg
lret
mov
add
and
sbb
cwtl
jp
pop
neg
xchg
dec
scas
call
push
or
clc
loope
pop
jmp
and
orb
scas
push
mov
aam
and
mov
push
cs
adc
or
inc
mov
pop
mov
shrb
sahf
push
sbb
add
pop
inc
rcl
and
adc
push
hlt
lds
inc
lock
movsb
lcall
inc
inc
mov
cli
jbe
cmpsl
jo
adc
negl
mov
andb
mov
pop
popa
add
xor
pop
dec
inc
popa
push
adc
push
inc
or
mov
dec
sbb
orb
push
mov
mov
lds
out
notl
push
and
sbb
cld
push
or
jne
jp
adc
dec
push
sbb
cmpsb
call
inc
popa
push
mov
mov
push
mov
or
mov
push
shll
add
aad
cmpsb
dec
mov
pop
push
sub
aam
fimull
aam
ret
cltd
push
daa
inc
scas
inc
ret
int
cmp
jb
mov
push
inc
push
addl
adc
in
mov
push
add
or
xor
scas
orb
push
negb
ret
adc
push
mov
xor
in
mov
jns
in
push
cmc
cmp
push
push
adc
test
stos
pop
add
hlt
les
jnp
inc
shll
dec
cmp
mov
imul
sbb
push
movl
mov
pop
xor
jno
sbb
xor
enter
mov
clc
mov
scas
sub
inc
or
roll
fcomps
or
inc
push
lock
gs
and
push
loope
stos
cmp
call
add
inc
inc
int3
icebp
or
cmp
fldl
jle
sarb
fucomp
push
inc
inc
scas
jp
mov
stos
add
and
mov
cli
shl
mov
hlt
sub
cmpsb
dec
inc
lret
jne
fcomps
adc
pop
push
add
insb
add
jno
pushf
add
pop
adc
lods
cltd
ror
add
pop
add
mov
je
or
ret
pop
daa
xchg
mov
mov
xchg
orl
jo
scas
or
flds
push
call
adc
rcrb
and
pushf
push
push
nop
lods
xchg
jb
xor
mov
cmp
adc
or
js
push
imul
push
or
cli
call
and
or
pop
mov
pusha
cmp
hlt
lods
mov
mov
out
mov
jl
test
gs
jo
mov
mov
lock
shrb
jne
cmp
or
test
push
lret
lods
adc
inc
je
in
pop
inc
cltd
jp
jg
lret
shlb
test
nop
add
mov
sbb
push
jg
inc
mov
sti
or
pop
sbb
lret
loopne
sub
inc
insl
adc
pop
subb
lds
test
or
test
loopne
imul
mov
in
mov
in
mov
add
pop
sub
push
jmp
sub
cmp
shrb
ljmp
push
test
ficomps
fsts
xchg
inc
pushf
loop
sub
jb
addps
add
dec
add
lods
or
mov
inc
mov
jae
das
mov
push
adc
fdivrp
pushf
stos
enter
scas
and
leave
js
ret
clc
outsl
pop
scas
lock
xchg
add
sub
cmpsb
xchg
int
cmp
mov
cmovge
movsb
dec
call
adc
loop
cmp
lret
push
add
pop
xor
xor
mov
test
and
jp
pop
cwtl
enter
pop
sbb
test
xor
inc
and
sub
bound
shrl
push
pop
iret
adc
pop
pop
sarb
and
jbe
into
jo
and
push
add
ds
or
outsb
hlt
and
mov
jp
in
cli
xchg
or
or
jg
addl
std
scas
fcomip
push
jo
xor
pop
inc
cmpsb
adc
and
ret
and
pop
inc
movsl
push
push
and
in
adc
sbb
adc
sbbb
ficomps
and
add
sbb
cmp
cltd
lock
xchg
and
ljmp
mov
sub
and
mov
es
dec
adc
insl
in
addr16
or
adc
cs
les
inc
shrl
fcompl
mov
je
push
out
add
test
dec
cmp
cmpsb
inc
rclb
mov
ss
or
subl
add
cmc
mov
inc
add
int3
xlat
inc
call
pop
add
inc
jne
and
jmp
push
sub
or
shlb
mov
arpl
sub
or
test
inc
pop
cmp
pop
test
xor
xor
cmp
inc
or
test
push
aam
shl
xchg
mov
sbb
pushf
enter
jb
adc
push
sbb
push
das
or
sub
push
ret
sbb
into
mov
inc
sub
push
jg
inc
sub
push
ret
imul
mov
xorb
or
xor
adc
hlt
push
mov
or
inc
lods
pop
adc
push
movl
sbb
or
stos
lods
jnp
jae
aad
push
push
fcoms
mov
ror
inc
cli
stc
dec
xor
popa
loop
fidivl
xor
xor
xor
mov
lock
xchg
xor
lock
add
rorl
scas
or
push
push
push
les
sub
or
mov
lahf
repnz
aam
les
sbb
es
loope
jb
daa
ret
pop
push
cmp
in
add
add
cmp
or
loope
sub
out
adc
add
adc
sub
mov
repnz
or
xor
xchg
inc
push
and
mov
cmp
scas
adc
push
cmp
out
cmp
out
sub
mov
shrb
rorb
push
inc
sbb
fisubrl
add
lock
mov
subl
push
cmp
sbb
mov
or
rolb
arpl
xor
cmp
loop
nop
test
into
stos
add
ret
dec
adc
push
sub
or
test
mov
add
inc
add
sub
mov
test
sub
adc
adc
out
mov
xchg
lret
inc
dec
dec
mov
dec
sti
jb
aam
adc
inc
scas
inc
xor
xchg
cmp
test
adc
mov
rorb
push
mov
mov
push
push
xchg
sbb
pop
or
cmp
rol
lcall
stos
mov
add
add
or
bound
sub
inc
xor
ror
int
ds
mov
lcall
adcl
mov
insb
sbb
mov
into
pop
push
fiaddl
push
aad
mov
pop
push
jp
push
mov
inc
adc
aas
mov
xor
icebp
stos
call
and
lahf
push
das
ret
pop
popf
subb
push
cltd
mov
jle
js
test
push
mov
lret
sub
xor
pushf
sbb
sub
cmp
lock
sub
cmp
xchg
mov
loopne
jne
sbb
inc
call
push
jle
cmp
stos
loope
lcall
inc
scas
mov
scas
add
das
push
adc
or
mov
and
xchg
js
xor
repnz
in
js
sbb
cmp
pusha
rcrl
dec
inc
movsl
bound
inc
or
pushf
leave
or
xor
leave
xor
hlt
popa
or
jge
push
adc
sbb
xor
mov
add
mov
pop
adc
jnp
jge
movsl
cmp
sbb
add
and
rcrb
mov
or
cmc
push
imul
mov
call
cmp
sub
mov
test
bound
mov
inc
or
inc
fsubr
and
push
or
dec
add
push
sub
ret
adc
add
leave
mov
sub
scas
or
sbb
rclb
in
sbb
add
cltd
pop
inc
and
adc
sbb
sub
push
push
ret
inc
aam
clc
cmp
jmp
adc
or
mov
cmpsl
or
sbb
adc
cld
push
mov
dec
push
and
mov
dec
inc
sbb
push
dec
ror
shlb
add
sbb
sbbb
pop
mov
rcll
call
mov
shlb
mov
adc
addb
sti
dec
pop
les
lock
mul
push
sbb
pusha
in
mov
jne
push
cwtl
or
xchg
mov
cwtl
js
movl
cwtl
movsb
push
add
push
cmpb
jmp
mov
mov
fwait
xchg
repnz
or
sbb
mov
arpl
lods
mov
pushf
push
add
int
imul
push
sub
into
add
movsl
inc
pushf
adc
test
dec
mov
mov
jl
test
dec
pop
je
jg
sti
pop
fwait
repz
pop
mov
push
adc
pop
stos
ds
or
xor
cmp
cld
dec
adc
add
vandps
mov
out
lahf
mov
mov
test
jb
es
jg
cld
stc
mov
fsubrs
fidivrs
mov
fistps
int3
sar
fisubl
cld
stc
repz
inc
out
xchg
xor
rcrl
pushf
out
iret
lahf
aas
jg
jno
push
jecxz
daa
cld
stc
repz
pop
mov
push
sbb
sbb
and
loop
test
aam
pusha
out
repz
ss
or
xorl
jmp
cmpb
cld
scas
std
popf
mov
imul
sub
cmp
add
lds
mov
stc
jle
stos
add
push
add
mov
rcrl
in
jno
out
dec
mov
loope
stc
stc
repz
inc
out
mov
sub
cmp
decl
push
xlat
fwait
mov
mov
out
pop
insb
adc
call
shrl
aas
mov
aad
adc
pop
jbe
cld
stc
repz
xchg
iret
fdivs
iret
lahf
aas
jg
inc
je
add
or
mov
cld
stc
repz
add
lds
pop
sub
mov
scas
and
push
stc
repz
mov
movl
sbb
rcl
jg
cld
test
xchg
sub
jo
leave
cmp
xchg
jne
and
out
lahf
rol
shrl
loopne
vmwrite
cld
stc
loope
stc
ret
cli
xchg
movsl
add
or
inc
inc
call
aas
jnp
call
and
in
sarl
dec
cld
stc
repz
mov
sub
cmpsl
nop
and
xor
dec
xor
sbb
aas
jg
sub
mov
lock
lahf
or
push
in
mov
out
cld
stc
rep
mov
jo
or
aaa
lods
inc
ja
lahf
aas
jg
cmp
addr16
pop
jns
mov
sti
sub
stc
repz
add
sbb
fsts
cmp
lahf
aas
jg
mov
fsubs
shl
add
adc
jne
repz
mov
mov
dec
insl
cmp
or
jg
cld
xor
pop
xor
stos
jne
lahf
repz
lahf
sub
xchg
and
sub
cltd
jnp
cld
stc
xor
data16
les
add
mov
pusha
sbb
stc
repz
aam
enter
sbb
clc
sub
jg
cld
movl
call
popf
clc
lret
iret
lahf
sbbb
cmp
sbb
cld
stc
adc
adc
iret
cmc
jge
jmp
cmp
stos
lock
lahf
aas
sub
rclb
iret
lahf
aas
jg
lcall
xor
jbe
cld
stc
repz
or
cmp
inc
pop
sarb
fcmove
lahf
aas
jg
lcall
cli
out
pushf
sar
stc
repz
incl
mov
mov
pop
jns
das
stos
lahf
aas
jg
push
jnp
fwait
mov
push
pop
xor
iret
aad
xchg
int
mov
and
dec
out
iret
lahf
aas
jg
arpl
cmpsl
daa
pop
mov
pop
or
stc
repz
mov
or
pop
xchg
pop
dec
or
add
imul
shrb
out
test
cli
icebp
lcall
cld
les
shll
and
repz
lahf
cs
sub
mov
cmp
cld
stc
repz
xchg
mov
push
movsb
push
negl
int
mov
iret
lahf
aas
xor
stos
xlat
mov
pop
push
add
repz
loope
cmpsl
repz
push
iret
lahf
aas
jg
xchg
lods
loopne
jnp
ret
scas
jns
ret
icebp
cld
stc
repz
mov
iret
cmpsl
jnp
loope
shrl
mov
lods
rolb
sub
push
or
repz
push
jbe
pushf
imul
mov
cld
ss
and
sbb
lds
pusha
cmp
out
lahf
out
xor
mov
or
and
mov
cld
stc
aam
test
bound
leave
xlat
jo
mov
push
or
scas
popf
daa
jg
cld
stc
sub
rcl
or
add
out
lahf
aas
adc
dec
pop
fcmovnb
popl
stc
repz
lret
push
cmp
lock
sahf
sbb
iret
lahf
aas
jg
xchg
repnz
cmp
addr16
popa
sar
stc
repz
lret
sbb
adc
das
jnp
jae
mov
mov
iret
dec
sbb
lods
cmc
fists
lahf
lret
cmp
mov
stos
stc
inc
nop
out
jo
aas
jg
cld
push
in
add
stos
lcall
rolb
sub
jno
fcomps
icebp
xor
xchg
outsl
orl
out
push
push
fsubp
iret
lahf
aas
fs
jbe
cmpsl
cli
or
sbb
repz
mov
and
out
aas
lahf
mov
movsb
and
scas
jg
cld
stc
adc
das
dec
mov
xor
popf
push
sahf
and
in
pop
ds
lahf
aas
iret
jne
enter
xor
xor
outsb
cld
stc
repz
call
pop
enter
sub
aas
jg
lret
pusha
sbb
inc
jle
adc
cld
stc
repz
mov
and
push
push
lcall
popf
lods
xchg
aad
xlat
idivl
psubsb
in
iret
xor
insb
out
mov
jg
cld
arpl
es
xchg
fcoms
xchg
out
xchg
aas
pop
xchg
dec
outsl
push
jg
shlb
cld
cld
stc
repz
out
notb
sbb
pusha
lds
popf
daa
pop
and
mov
call
pop
push
dec
scas
cmp
push
jb
lcall
stc
repz
cwtl
and
leave
decb
cli
mov
iret
lahf
aas
sahf
fldcw
ds
movsb
add
inc
jge
cld
stc
repz
fldt
mov
bound
xchg
and
push
iret
lahf
aas
jg
pop
ljmp
ljmp
out
addr16
mov
xlat
in
jb
adc
js
inc
popa
fmull
push
sbb
stc
repz
cltd
or
inc
mov
jmp
pop
push
ficoms
stos
aas
jg
cld
test
dec
fildl
inc
or
push
xor
iret
lahf
ss
inc
loopne
cli
movsl
push
lret
sbb
aaa
out
cmpsl
inc
mov
ja
cld
stc
rep
inc
out
sub
pop
add
pusha
xor
daa
in
and
cmp
jae
adc
repz
xchg
scas
xchg
insb
sub
mov
add
lahf
aas
jg
mov
leave
jae
iret
lods
mov
out
mov
xor
jno
or
lahf
aas
pop
stc
jmp
sbb
dec
add
lock
jb
push
nop
sub
out
scas
mov
lds
ds
sub
jns
movsb
and
push
repz
lahf
and
adc
mov
mov
stc
or
xor
mov
iret
lahf
aas
testl
dec
js
sbb
inc
fisttps
icebp
std
jbe
xor
mov
mov
fimuls
cltd
add
push
xchg
push
in
movsl
enter
icebp
or
pop
sub
jg
shlb
hlt
sbb
cltd
cmp
out
lahf
jb
aad
jl
jae
or
mov
cld
stc
shll
inc
or
dec
cld
outsb
pop
sbb
mov
out
lahf
aas
data16
int3
std
arpl
jl
sub
pop
gs
ret
sbb
xchg
lods
push
aaa
iret
lahf
aas
jg
das
out
jle
out
subl
push
cld
stc
repz
mov
inc
fidivrl
stos
daa
lahf
aas
jg
xchg
xchg
movb
pop
iret
js
out
shl
xchg
cmc
mov
call
lahf
aas
lcall
roll
jnp
cld
stc
repz
jmp
pop
es
je
mov
push
outsl
lock
iret
lahf
aas
jg
xchg
fisubrs
adc
sub
mov
iret
insl
inc
pop
adc
rorl
in
cmc
sbb
jg
cld
repz
or
pop
inc
inc
test
lahf
jl
es
xchg
push
movb
pop
xchg
jg
cld
stc
sbb
into
inc
addr16
add
lahf
aas
and
mov
jg
and
repz
mov
popa
cli
inc
addb
hlt
clc
iret
lahf
aas
jg
mov
xchg
fisttpl
repnz
cld
stc
repz
sti
fwait
ja
xchg
push
sub
mov
or
adc
cmp
mov
sub
stc
repz
mov
lret
imul
pushf
cltd
pop
mov
jg
cld
mov
out
out
jne
mov
jb
out
lahf
enter
jmp
dec
add
sbb
jl
int
mov
testb
out
repz
lahf
movsl
pop
into
rcll
jb
pop
in
mov
cld
stc
jae
and
cmp
loopne
lds
sub
pop
inc
out
lahf
aas
mov
popf
dec
push
in
jge
cld
stc
repz
xor
bound
mov
mov
cmpsl
popf
pop
icebp
xchg
hlt
iret
lahf
aas
jg
xchg
into
mov
dec
leave
mov
enter
out
pop
cwtl
xor
cld
lock
cs
adc
aas
jg
add
setge
out
push
inc
adc
mov
gs
aas
jg
stc
lret
sbb
mov
pop
adc
iret
lahf
sbb
push
mov
cld
stc
jp
lret
mov
int3
test
mov
lahf
aas
aam
adc
shl
ljmp
xor
or
xor
scas
add
andl
lahf
push
jl
into
iret
lahf
aas
jg
pop
fs
lret
mov
in
stc
repz
out
mov
push
loop
cmpsb
adc
in
lahf
aas
jg
sbb
repz
pop
mov
dec
jl
stc
repz
or
xchg
rclb
xchg
in
sarl
jg
cld
mov
ret
test
shlb
repz
lahf
movb
adc
jne
sbb
xor
cld
stc
orl
pop
push
movsb
sbb
mov
xchg
into
sub
inc
xchg
lods
ljmp
dec
and
and
hlt
enter
into
pop
ret
insl
outsb
mov
mov
dec
jle
cld
loope
out
in
sbb
jbe
scas
adc
jg
jae
adc
xchg
outsb
cs
lods
mov
sbb
push
in
mov
mov
lar
lahf
aas
incl
sub
cmpsb
cmp
cmc
cmp
cld
stc
repz
inc
dec
cld
cwtl
mov
ret
insb
pop
arpl
xchg
aas
jg
xor
xor
fs
mov
sbb
pop
mov
fwait
xor
leave
or
mov
fnstsw
jecxz
ss
js
mov
aaa
outsl
fiadds
xor
or
in
fldl
out
fcomps
xchg
sub
movsl
test
aam
outsl
fidivrs
ds
scas
fwait
add
xchg
repz
fwait
enter
out
push
dec
mov
js
jg
jb
inc
das
jg
cmp
lods
and
subl
lods
cmp
outsb
outsl
mov
sub
ja
divl
and
shrl
dec
repz
lahf
jg
xlat
pop
insb
addb
xchg
lahf
js
or
sub
inc
dec
lahf
aas
fiaddl
mov
sub
or
stc
repz
xor
pop
cmp
movw
push
mov
inc
es
mov
aaa
clc
lds
mov
xchg
and
mov
or
cld
stc
rcll
in
cmp
lret
ret
test
out
lahf
aas
lods
clc
sti
mov
push
aas
xlat
dec
cld
stc
repz
jo
fiadds
sub
xchg
outsl
sub
mov
jae
fstp
xchg
stc
repz
outsb
dec
ret
mov
cmpb
loopne
jg
cld
lods
sbb
jmp
add
inc
jno
mov
mov
lods
cld
stc
repz
leave
push
clc
ret
pop
xorl
fnstenv
aas
jg
jle
mov
xchg
pop
ja
int3
int
repz
sub
xchg
and
mov
aas
jg
cld
aad
jb
and
std
ret
aaa
cmp
stc
push
stos
and
push
nop
cmp
jg
cld
ret
ficoml
fst
aad
lahf
js
cmpsb
cwtl
pop
repz
lahf
icebp
inc
jno
lcall
cld
stc
int3
fsubl
pop
stos
xor
aas
push
sbb
iret
lahf
aas
fadds
test
out
lcall
pop
shrl
jge
or
dec
leave
cmp
stc
jae
lahf
aas
jg
inc
jl
repz
stos
add
mov
shll
repnz
in
sbb
pop
imul
fidivrs
jne
sub
aaa
fwait
aaa
outsl
aaa
or
movsl
pop
dec
out
pop
cmp
jne
jns
out
leave
enter
mov
push
sbb
fsubrp
dec
adc
call
imul
int
push
push
pop
movsl
jo
push
scas
cmp
fidivrs
rol
push
adc
repz
fwait
pop
out
sbb
mov
xchg
aas
hlt
outsl
fidivrs
test
hlt
aad
inc
jecxz
inc
out
fwait
aaa
js
push
movsl
pushl
or
arpl
repz
or
inc
cli
test
testl
and
mov
test
jl
mov
aaa
push
outsl
jmp
cmpsb
sub
into
fwait
aaa
outsl
fimuls
mov
push
pop
hlt
stc
fmuls
subb
pop
xlat
adc
mov
jg
fdivrl
mov
cmp
cmp
out
lahf
mov
pop
in
mov
jg
jl
jbe
xorl
sbbb
rcrl
and
dec
ss
ret
clc
jns
out
std
orb
and
std
pop
aaa
outsl
fidivrs
xchg
int3
repnz
pusha
jb
jl
ret
repz
fwait
shll
xchg
int
push
decb
jns
test
test
outsb
stos
dec
cmp
je
int
aaa
and
fsubs
rcrb
mov
jns
inc
pusha
movsl
jle
sbb
jle
cmp
xchg
push
enter
fcoms
stos
lcall
adc
jo
push
int
sbb
fistl
repz
lahf
out
in
movzwl
lret
mov
lahf
addr16
cltd
adc
sahf
jle
stc
hlt
sbbb
lahf
aas
pusha
adc
fdivs
add
repz
andb
and
dec
mov
jg
movsb
iret
xorl
flds
cld
stc
repz
lea
sub
push
aas
jg
mov
push
xor
jmp
inc
xchg
push
loopne
xor
subl
sbb
sbb
aas
jg
cld
aam
xchg
ja
orb
adc
in
lahf
dec
dec
dec
loop
in
add
data16
jg
cld
add
fs
nop
push
jmp
inc
mov
lahf
jne
mov
cltd
pop
popf
jmp
cld
stc
inc
jbe
sbb
xor
cmp
xchg
subps
lahf
hlt
sbb
jb
jg
cld
stc
pop
sub
or
push
es
xchg
fists
aas
pop
or
pop
inc
test
repz
test
rclb
sbb
dec
jbe
jmp
aaa
pushf
out
mov
dec
jns
test
xchg
repnz
ret
std
add
and
or
mov
les
stc
repz
in
hlt
orb
cmp
pop
lea
push
inc
aas
jg
cld
das
pop
xorb
cwtl
inc
sbb
fwait
sarl
mov
lcall
cmp
or
call
cld
cmc
nop
push
pop
pop
aad
jns
cmpsb
lahf
call
sbb
adc
sti
gs
aaa
outsl
fisubrs
clc
lahf
cs
inc
out
mov
popa
daa
lock
int
mov
pop
popf
pop
push
ud0
fwait
aaa
outsl
and
mov
mov
into
push
jns
out
inc
mov
sti
jle
aam
rolb
mov
or
ljmp
cmp
cld
test
clc
xchg
push
mov
out
lahf
aas
push
daa
push
dec
adc
movsb
pxor
cld
stc
rep
xor
sbbb
or
lahf
aas
jg
bound
sbb
imul
stc
repz
repz
fcmovnu
jecxz
sti
aas
xchg
push
imul
incb
movsb
push
or
dec
jne
repz
inc
jg
adc
or
or
fidivrs
loop
repnz
push
pushf
xchg
ds
sti
repz
fwait
sahf
lret
rcr
in
out
imul
stos
outsl
fidivrs
xchg
lods
popf
out
std
cmp
out
fwait
aaa
push
and
xor
xor
fidivrs
sbb
pop
outsl
push
push
out
and
outsl
leave
fcmovnu
jmp
push
fs
push
jmp
cld
jns
orb
mov
push
push
iret
lahf
aas
jg
pop
or
sti
inc
push
mov
out
das
sbb
mov
lahf
aas
jg
outsl
repz
dec
aaa
inc
dec
stos
ror
call
out
icebp
enter
push
adc
lods
movsl
sarl
cmp
repz
decl
jnp
out
mov
iret
lahf
inc
ja
xor
loopne
jecxz
cmpsb
dec
sub
cld
stc
js
scas
mov
cli
jg
adc
stc
enter
lahf
aas
sbb
xor
jae
push
addr16
dec
sti
lds
mov
inc
jae
dec
jle
fs
lahf
aas
jg
mov
test
xor
push
enter
stc
enter
xchg
stos
cmpsb
and
mov
out
notb
scas
cltd
fistpll
stc
repz
popf
xorl
xchg
cmpsl
add
jmp
adc
scas
dec
mov
fidivrs
cmpsb
and
inc
loop
ljmp
fwait
cmp
inc
sbb
xchg
jecxz
mov
fsubr
imul
sub
loop
add
mov
out
gs
cmpsl
std
jecxz
test
dec
mov
stc
ja
add
aad
xchg
or
lahf
aas
jg
nop
popf
mov
xchg
and
adc
iret
stos
dec
mov
aas
jae
ss
cld
ucomiss
jnp
into
cmc
aam
dec
cmp
mov
fnsave
xor
push
cmp
out
cld
stc
in
and
stos
mov
pop
pop
enter
push
and
clc
push
jae
lea
out
mov
fdivrl
xlat
repz
push
arpl
mov
sub
push
pushf
pop
sub
xor
stos
sahf
xor
out
lock
mov
int
aaa
outsl
xrelease
int
pop
push
lret
daa
lahf
imul
cmpsl
inc
inc
lret
cli
ljmp
push
aas
imul
sar
rclb
fs
rcll
and
jb
pop
fcmovnb
sub
int
push
fs
stos
stos
add
pop
out
xor
aaa
outsl
fidivrs
jl
push
and
mov
xor
push
fidivrs
mov
fidivrs
mov
xchg
popa
push
ret
add
int
aaa
jmp
adc
xor
cld
stc
testl
xchg
dec
sub
aas
inc
adc
lahf
aas
jg
mov
mov
push
out
cld
stc
repz
and
and
mov
adc
inc
push
lahf
aas
jg
nop
adc
push
lcall
mov
iret
pop
out
rcrl
push
jo
stc
rep
pop
aas
mov
lea
jge
fcomps
movsl
mov
mov
push
lahf
mov
stc
repz
iret
or
fcmovbe
loop
and
xor
jg
cld
and
inc
mov
adc
aaa
test
iret
lahf
adc
mov
pusha
out
dec
dec
jp
movsb
lock
cld
stc
ds
or
cwtl
xchg
das
push
out
mov
aas
je
jp
nop
mov
mov
cld
stc
repz
fs
sbb
cmp
es
daa
lahf
aas
jg
shll
inc
jg
dec
loope
rolb
pusha
sub
dec
stos
aad
push
sbb
or
aas
jg
imul
inc
cmp
xchg
adc
sub
out
call
mov
scas
mov
test
adc
and
movsb
inc
fidivrs
add
pop
mov
stos
repnz
stc
pop
pop
jo
pusha
movsb
pusha
lret
adc
daa
int
ja
xchg
div
xchg
in
sub
popa
dec
jnp
repz
dec
push
inc
add
cmpsl
ret
les
mov
xor
and
cmp
out
fwait
movsl
xchg
movsl
movsb
movsl
dec
add
sub
fiadds
cmp
sub
mov
call
pop
and
and
mov
mov
cld
jmp
sbb
les
arpl
pop
add
rcrl
popf
push
pop
dec
sbb
jg
xor
jle
shl
ret
repz
daa
aam
inc
xor
in
cmp
lahf
aas
jg
add
gs
sub
testb
stc
repz
out
fstpt
dec
xor
mov
dec
mov
jg
out
or
popa
jae
out
iret
rcrl
pop
pop
mov
repz
outsl
cmp
test
dec
push
icebp
lock
lahf
movsb
out
xor
movsb
lahf
cli
movsl
cld
stc
repz
jns
xor
pop
rcll
into
test
jg
add
rolb
les
gs
negl
lahf
pop
ret
bswap
mov
dec
inc
insl
fs
mov
outsl
fdivrp
cs
and
jnp
popa
sub
fwait
jae
sahf
push
into
adc
cmpsl
lcall
ret
push
es
sub
mov
or
jmp
aaa
mov
test
jne
xor
repz
ja
stc
lods
lret
nop
xchg
lcall
aaa
outsl
scas
pop
dec
int3
mov
dec
cmp
loopne
sbbl
jp
cmp
loopne
cmc
leave
iret
fcmovnbe
call
ja
je
pop
repz
lahf
add
inc
loopne
push
mov
cmpsb
ja
fnstcw
jg
stc
push
mov
or
push
lds
cld
stc
ret
dec
mov
xchg
faddp
popl
test
cmp
andl
dec
jae
repnz
mov
adc
pushf
cmpsl
sti
fs
jge
aas
and
mov
inc
push
or
stc
or
jg
cld
stc
jle
mov
notl
sbb
in
add
sub
cmp
iret
lahf
aas
ret
shr
in
jae
cmp
int3
jge
cld
stc
repz
repnz
fsubrl
fsubrs
nop
call
jg
fcompl
cmp
dec
je
jle
pop
cld
stc
repz
ds
out
arpl
xor
dec
inc
popf
sahf
xor
mov
incb
and
outsl
out
cmpb
nop
daa
lahf
aas
jg
repz
mov
xchg
jns
scas
loopne
or
stos
pop
hlt
imull
outsl
fidivrs
add
jb
call
repz
fwait
daa
not
or
mov
dec
sub
jns
scas
sahf
add
cmp
lret
out
fwait
aaa
mov
push
sbb
imul
or
mov
mov
jo
cld
dec
cmp
insb
ficoml
xor
xchg
push
dec
repz
and
mov
cld
stc
pop
arpl
and
popf
mov
pop
xchg
xchg
lahf
aas
inc
push
xchg
in
xchg
notl
dec
icebp
mov
push
sbb
jle
mov
xor
nop
arpl
in
mov
mov
and
pop
into
lcall
cld
jnp
out
mov
mov
fcmovnbe
jo
lahf
aas
jg
mov
push
lcall
cli
aas
inc
cld
jmp
cmp
pusha
insl
lahf
aas
jg
push
arpl
test
imul
lret
stc
repz
dec
mov
xorb
adc
jg
cld
sbb
mov
data16
push
repz
lahf
jo
mov
pusha
adc
sub
inc
and
repnz
mov
dec
inc
and
pop
push
cmc
mov
cmp
sub
pop
stc
stc
repz
jnp
lock
xorl
lahf
aas
push
push
sub
lcall
jo
cld
stc
repz
test
push
xchg
loope
stc
out
push
xchg
call
dec
mov
test
js
repz
pop
xor
jp
add
sub
cmp
cld
push
or
push
push
out
pop
dec
push
pop
push
data16
out
mov
out
mov
lret
sbb
movsb
sbb
pop
xchg
jne
cltd
in
std
cmpsl
cmpsb
mov
sub
dec
stc
repz
xor
xchg
lahf
jmp
pusha
rol
cwtl
aas
jg
cld
sbb
jae
push
cld
test
xchg
cmpsb
mov
jecxz
rcr
push
or
addr16
cwtl
daa
ja
ds
scas
inc
xor
cli
out
cmp
cli
adc
mov
repz
adc
pop
js
pop
mov
cld
sub
mov
inc
jg
test
jg
test
xchg
es
pop
stc
xchg
mov
sbb
add
movsl
and
repz
sub
xchg
lea
shl
mov
mov
scas
inc
js
mov
xchg
aaa
outsl
fiadds
insb
dec
jl
adc
inc
out
fcomip
insl
pop
aaa
outsb
addr16
cld
cmpsb
test
decl
mov
jns
out
add
jnp
popa
mov
shlb
out
aas
cld
fnstsw
leave
dec
jns
mov
jg
jge
in
cmpsl
shl
in
mov
std
ja
in
iret
lahf
jge
jg
push
lret
xchg
fiadds
pusha
xchg
nop
addr16
rcll
ret
xchg
aaa
outsl
loopne
add
leave
lods
mov
stc
stc
jb
dec
testb
daa
adc
mov
inc
jg
jg
aas
aam
adc
cmp
loop
dec
stc
repz
jbe
test
outsb
outsl
ss
aas
jg
cld
cwtl
add
xchg
xor
popa
push
iret
lahf
jne
push
aaa
ret
mov
jns
cmc
sbb
stc
stc
loope
pop
rorb
sbb
out
mov
loop
jg
or
lahf
jl
cld
in
mov
push
fsubrl
fcoml
fiadds
inc
pop
jb
lret
lods
pop
jle
int
aaa
outsl
movsb
mov
mov
iret
repnz
and
jle
push
testb
jmp
nop
ret
ljmp
ret
insl
in
mov
daa
or
ret
test
ds
imul
ja
test
adc
push
xchg
rolb
jmp
out
xlat
jge
pop
dec
push
jns
and
sbb
iret
xchg
aas
jg
xchg
jmp
fcompl
xchg
xchg
pop
imul
mov
dec
push
movsb
mov
testl
mov
or
aas
jg
mov
sbb
bound
xor
ljmp
dec
pop
sub
jg
sub
and
jg
cld
dec
iret
into
inc
test
push
or
sarb
mov
pop
cmp
int
dec
mov
js
int3
jns
out
ja
addb
pop
add
outsl
fidivrs
aam
leave
test
push
inc
jl
jg
push
movsl
cmp
mov
repz
xchg
push
les
mov
lods
daa
outsl
jns
cld
push
daa
test
repnz
cld
stc
repz
add
movsl
icebp
lret
rcrb
inc
in
ror
lahf
aas
jg
mov
mov
aad
stc
repz
popa
push
xor
pop
sub
mov
lods
inc
inc
imul
aaa
outsl
ficoms
sbb
jle
call
mov
push
pop
jns
out
sub
cmp
popf
jmp
aad
idivb
fnstcw
push
pop
adc
outsl
sub
push
call
and
mov
mov
push
popa
inc
jne
repz
fwait
sti
lret
int3
pusha
stos
jp
cltd
jle
sbb
mov
imul
sbb
jg
adc
int
aaa
mov
leave
repnz
jbe
mul
fidivrs
int
out
fwait
add
fnsave
int
aaa
outsl
mov
aam
jg
shl
loope
mov
pop
adc
or
fwait
stos
inc
jns
jle
clc
fwait
aaa
outsl
ficoms
ror
mov
fsubrs
int
jno
pop
add
roll
loopne
pop
mov
aaa
les
inc
lods
into
aas
into
aaa
add
into
stos
add
mov
roll
aas
into
push
ja
mov
cltd
out
fidivrl
mov
jp
test
ds
mov
jo
popf
fwait
aaa
outsl
push
jecxz
cmc
sub
sbb
or
iret
pop
mov
and
xchg
jge
pop
push
xchg
iret
mov
pop
pop
add
addr16
sbb
sub
fadds
into
cld
stc
repz
push
shr
test
fisttpll
sub
and
jg
ljmp
lods
mov
repz
shl
mov
cmp
stc
repz
outsl
cs
jmp
inc
mul
inc
aas
jg
cld
lods
sbb
cwtl
xchg
dec
lea
jp
pop
pushf
pop
jp
repz
lahf
mov
lret
fdecstp
dec
fisubrl
cld
stc
xchg
or
das
push
lods
ret
cld
cld
hlt
mov
lahf
aas
dec
inc
outsl
lret
mov
ret
stc
repz
pop
jp
mov
andb
jl
lahf
aas
jg
nop
mov
dec
pop
push
xlat
adc
mov
xlat
jecxz
enter
imul
cld
push
popa
movsl
cld
mov
ds
push
hlt
and
popa
cmp
mov
fdiv
out
aas
mov
push
fdivrs
movsl
jno
test
sarb
xor
add
cmp
iret
lahf
aas
cmp
ret
push
xchg
ja
pushf
add
cld
stc
xrelease
in
mov
push
jnp
jle
sbb
adc
dec
add
testb
xchg
out
inc
sbb
movl
repz
icebp
mov
stc
dec
cltd
add
outsl
lods
xlat
stos
js
xchg
outsl
sbb
stos
cmp
clc
sahf
lret
mov
lods
rclb
outsl
fidivrs
adc
lods
clc
push
mov
out
fwait
scas
add
je
add
fidivrs
jle
fldt
jnp
ljmp
int
aaa
flds
or
push
mov
aas
fidivrs
sbb
ds
out
jmp
insl
cmp
fwait
aaa
outsl
and
jge
mov
sbb
loopne
xor
lcall
cli
mov
stc
repz
mov
icebp
mov
in
adc
out
aas
jg
cld
pop
pop
and
mov
cmc
std
pop
lahf
mov
lahf
imul
mov
shl
repz
pop
fistpll
mov
add
stc
mov
popa
adc
call
pop
cmpsb
pop
lahf
sub
out
lahf
aas
sub
fsubrs
in
ss
mov
jle
stc
repz
xor
add
xchg
stos
xchg
lahf
sbb
iret
xchg
adc
ds
pop
dec
lock
iret
stc
cmp
mov
xchg
dec
pop
xor
leave
test
das
repz
lock
or
lahf
jle
out
dec
rcr
outsl
fidivrs
mov
fcmove
sub
aaa
les
inc
or
cmp
fwait
fwait
or
mov
mov
dec
icebp
adc
ret
and
mov
and
loopne
faddl
iret
mov
int
adc
mov
cld
stc
jl
and
imul
fcmovnu
fdivl
push
xchg
lahf
aas
std
dec
lahf
decb
daa
dec
jns
xchg
ret
aas
cmc
test
mov
outsl
fidivrs
es
push
mov
sbb
aam
loop
fwait
jno
jg
push
decb
repz
es
dec
rcrl
push
inc
iret
lahf
push
mov
je
scas
lock
int3
test
cmp
repz
dec
mov
push
push
out
aad
iret
xchg
lret
jbe
and
xchg
jns,pt
mov
lods
int
in
hlt
mov
out
fwait
aaa
pop
sub
xor
mov
fdivrl
call
push
fcmovu
fsubs
xlat
adc
psraw
mov
mov
aas
jg
mov
incb
sub
and
inc
in
enter
cs
aaa
and
cmp
pop
adc
pop
pushf
test
sub
xchg
cmpl
pusha
int
loopne
xor
cli
sbb
ljmp
in
out
fcomps
xcrypt-ctr
cmpsl
fidivrs
cmc
mov
jae
and
jae
xchg
fistl
mov
daa
fs
fwait
ja
dec
in
fbstp
sub
hlt
enter
fists
out
bound
outsl
fidivrs
loope
and
sub
sub
int3
addr16
cld
not
dec
repz
mov
sbb
xchg
repz
pop
inc
aas
out
mov
or
sbb
and
adc
pop
aaa
outsl
fidivrs
jbe
xor
aam
cmc
xchg
int
fs
sbb
xchg
add
rorb
daa
jns
and
jb
ficoms
add
idivb
int
aaa
outsl
inc
pop
push
test
es
out
jne
push
cmp
cld
mov
loopne
cmp
dec
jle
push
orb
imul
out
jbe
out
lea
jl
repz
sbb
sbb
mov
fsubl
fwait
dec
int
repz
xor
scas
lahf
ljmp
xor
outsl
fidivrs
lahf
cli
out
int3
imul
pop
pop
popl
pop
and
repz
sbb
sub
stos
push
mov
add
outsl
jno
adc
push
add
les
rcr
bound
les
xchg
cld
fadd
lret
lock
repnz
cmp
cld
stc
jmp
imulb
push
es
fnstcw
std
sbb
fcoml
sub
cld
stc
add
or
cmpsl
cltd
lcall
iret
lahf
aas
jg
das
cs
cmp
ret
push
or
cmpb
out
cmp
mov
outsl
and
push
inc
add
iret
lahf
adc
sbb
push
test
push
adc
ja
rorl
aas
outsl
mov
jbe
push
pop
sub
mov
in
hlt
into
je
imul
mov
and
in
mov
fidivs
out
push
insl
outsl
mov
jg
cld
stc
bound
insb
pushf
or
dec
daa
mov
jne
aaa
push
andl
sti
cld
stc
repz
and
sub
mov
adc
lahf
aas
jg
mov
pop
or
sub
stc
repz
sbb
xchg
mov
cmp
aas
jg
int
roll
pop
in
sbb
aas
lock
iret
int3
shl
sbb
add
push
add
in
add
cld
stc
push
and
xchg
jno
lcall
out
lahf
aas
pop
lea
int3
sub
jecxz
add
pop
shrb
mov
inc
and
enter
jb
popa
out
mov
fwait
aaa
sbb
push
sbb
xchg
mov
fidivrl
jae
inc
test
push
fsubrl
and
outsl
ficoms
pop
xor
pop
adc
sub
lods
mov
cld
stc
ret
stos
xor
int3
hlt
mov
fimull
push
ds
lahf
aas
jg
jo
xor
mov
shrb
pop
xchg
mov
xchg
pop
jno
push
clc
inc
aas
xchg
mov
cmp
pop
outsb
adc
int
jmp
js
insb
push
data16
pop
add
cmp
outsl
fidivrs
add
mov
mov
repz
fwait
xor
lcall
and
add
fidivrs
hlt
inc
fs
sub
pop
call
int
mov
add
test
ja
mov
adc
xchg
inc
vphadduwd
enter
in
lds
mov
pushf
fistps
dec
jns
out
dec
adc
mov
mov
outsl
fidivrs
notb
pop
add
push
repnz
fwait
stc
test
inc
xchg
sbb
pop
xlat
jb
fidivrs
ja
iret
dec
push
out
sbb
jle
cltd
pusha
xor
fisubl
inc
cmp
int
add
adc
shl
mov
ja
jl
mov
sub
ficoml
fisttps
pop
out
fwait
aaa
sbb
and
xchg
jns
push
pop
push
jp
xchg
jp
sbb
fadds
cmp
jo
push
lcall
xchg
movsb
jns
and
sti
fidivrs
xlat
inc
sbb
stos
int
aaa
outsl
adc
into
mov
xor
inc
mov
pop
dec
jp
cmp
mov
outsl
fdivrp
dec
jmp
daa
lods
subb
cmp
repz
fwait
cmp
inc
push
test
sbb
fisubrs
mov
jmp
inc
stc
inc
es
popf
xchg
int
aaa
stos
fisubrs
in
push
clc
mov
repz
cmp
pop
jno
fnsave
or
rclb
pop
adc
incl
or
xor
rcrl
dec
jle
cld
cmp
jno
jp
push
arpl
cld
stc
xrelease
iret
mov
imul
je
aas
jg
inc
and
xor
jecxz
add
mov
stc
repz
jp
pop
scas
fstpt
dec
aaa
sarl
jg
cld
xchg
shll
dec
sub
stc
repz
in
and
rorl
pushf
cli
pushf
aas
jg
cld
das
cld
cmp
cli
into
xor
stos
ror
inc
pop
pop
insl
or
adc
mov
jg
cld
stc
fidivrl
sub
pop
aad
add
sub
out
lahf
aas
or
xchg
pop
cmp
es
repnz
lods
jns
clc
pmaxub
pushf
add
movsb
cmpsl
fnsave
jmp
aaa
xor
insb
or
mov
test
out
fsubs
mov
add
xor
mov
adc
mov
ficoms
sgdtl
inc
outsb
xor
cmp
notb
out
fwait
aaa
int3
lock
jb,pn
push
sbb
push
mov
lds
mov
pop
cmp
sub
aaa
outsl
int3
jns
cmp
es
dec
ja
xchg
loopne
lret
decl
and
out
int
leave
sub
or
add
in
jmp
test
mov
xchg
jno
sti
lahf
pusha
cmp
or
out
pop
sbb
test
jg
cld
stc
into
xor
jge
loope
or
out
lahf
aas
lret
mov
popl
repz
pop
sar
stc
repz
jp
xor
or
outsl
push
jb
push
push
xchg
lahf
aas
jg
push
inc
orb
jnp
mov
add
xchg
pop
jl
mov
mov
lcall
inc
dec
je
arpl
add
out
push
mov
stos
adc
pop
ret
lahf
aaa
outsl
fidivrs
xorl
repz
fwait
shll
adcl
fiadds
inc
ss
xchg
inc
xchg
inc
outsl
icebp
adc
sbb
fcomi
enter
lcall
add
push
dec
add
cld
jmp
inc
ds
sbb
aas
jg
call
call
scas
xchg
cs
xchg
push
ljmp
aas
jg
cld
mov
bound
dec
jg
ja
jecxz
addb
loopne
iret
lahf
test
mov
inc
fdivrs
fadd
xlat
mov
aaa
outsl
fdivrp
arpl
cs
bswap
add
loopne
repz
outsb
jb
xor
pop
jge
dec
outsl
enter
outsl
sub
fimull
lahf
loope
pop
mov
sbbb
dec
fldcw
std
cwtl
fidivrs
sbb
mov
mov
int
aaa
outsl
outsb
popl
fidivrl
sub
mov
out
repz
cmp
loopne
pop
cmpsb
adc
cmp
mov
daa
lret
lods
jmp
sbb
xor
fwait
aaa
outsl
cmp
and
pop
inc
flds
mov
rcll
repz
inc
aaa
xchg
aaa
outsl
fiadds
mov
mov
stc
repz
sub
dec
sub
sbbl
cld
sahf
jnp
cs
push
mov
sahf
call
iret
lahf
push
mov
xor
popf
pop
and
cld
stc
sub
dec
data16
arpl
repnz
mov
xchg
add
iret
lahf
aas
imul
jmp
lret
mov
imul
fiadds
fwait
clc
mov
lahf
aas
jg
ljmp
mov
cmp
stc
repz
or
pop
cmc
xchg
jnp
xor
xchg
aas
jg
cld
sbb
xlat
xor
aad
ret
xchg
divb
lods
or
aam
lahf
jns
xlat
push
push
push
inc
inc
push
xchg
push
mov
fwait
aaa
outsl
fidivs
or
and
sub
jns
out
cmpsl
inc
mull
out
jbe
aaa
outsl
fidivrs
hlt
inc
and
adc
xor
pop
add
std
lods
js
sub
xlat
jne
jnp
popf
inc
cmp
fiadds
xor
imul
fwait
aaa
outsl
pop
pop
inc
add
mov
or
aas
call
ret
dec
js
test
aaa
rcrl
testb
repz
mov
xchg
pop
mov
dec
xchg
push
jl
repz
loope
mov
cld
mov
dec
pop
repz
shrb
xor
xlat
cmp
and
out
lahf
mov
in
dec
mov
jmp
addr16
cld
stc
sahf
pop
xchg
aad
lds
icebp
add
iret
lahf
aas
add
xchg
push
jg
cli
mov
repz
imul
popf
insl
inc
lret
movsb
icebp
in
lahf
mov
shlb
sub
fidivrs
xor
fmull
pop
cmp
fwait
aaa
outsl
mov
mov
dec
ljmp
mov
add
jl
jo
mov
pop
lcall
inc
sbb
and
clc
jle
fadd
repz
shrb
outsl
inc
mov
sub
jns
fisubs
mov
pop
add
call
lahf
aas
call
push
jg
hlt
jmp
mov
repz
push
sbb
lret
push
imul
out
cli
sub
fwait
aaa
push
cmpsl
add
adc
fiaddl
ret
jns
out
mov
dec
xor
roll
xchg
push
cwtl
lods
mov
cmp
fisubs
int
and
arpl
push
jno
addl
and
push
std
mov
or
xchg
adc
fs
cs
nop
adc
pop
lds
cmp
out
mov
das
jae
mov
fisubrl
jns
or
xchg
out
mov
mov
test
inc
filds
jns
out
negb
mov
in
pop
mov
xchg
mov
jo
mov
and
fs
nop
movsb
enter
nop
hlt
cmp
mov
aas
jb
adc
repz
mov
cmp
push
mov
aaa
outsl
fidivrs
xor
fstpl
out
fwait
cs
fisttpl
ret
mov
jnp
jns
pop
pop
or
fbld
movsl
call
fwait
aaa
mov
sub
test
fidivrs
mov
mov
fcmovnb
loope
xor
and
ficoms
cvtps2pd
jle
movsl
inc
pushf
mov
aaa
adc
push
xchg
sbb
xlat
mov
leave
mov
outsl
fidivrs
stos
adc
mov
inc
aas
jg
shlb
inc
and
enter
scas
repz
lahf
fldenv
push
xchg
call
jg
cld
stc
sbb
add
into
jg
sbb
iret
lahf
aas
sbb
inc
push
adc
add
push
xor
cld
stc
repz
lock
sbb
shl
mov
iret
lahf
aas
jg
mov
insb
int
pusha
inc
outsb
inc
jg
repz
cmp
daa
xlat
mov
ja
repz
lahf
pop
out
jnp
es
cld
xchg
and
sti
aas
jg
cld
stc
add
into
sub
lahf
push
jo
nop
push
sti
out
lahf
aas
mov
jecxz
mov
xor
push
pop
sbb
cld
stc
repz
aad
loop
mov
mov
mov
out
iret
lahf
aas
jg
cmc
xchg
cs
pop
xchg
cld
stc
repz
out
les
sti
xlat
sub
daa
mov
push
outsl
in
adc
adc
mov
stc
repz
iret
xchg
rorb
cld
in
mov
mov
add
mov
jge
repnz
xchg
orl
fisttpll
repz
shrb
push
push
pushf
ljmp
je
inc
and
aas
jg
jle
push
cmp
xchg
in
cmpsb
decb
stc
repz
cmp
sbb
scas
add
mov
decb
push
and
mov
push
in
iret
pushf
sub
leave
push
push
arpl
icebp
in
aas
aas
jp
fisubl
clc
or
mov
jae
or
add
pop
in
stc
mov
xchg
xchg
imul
out
fwait
ja
pop
mov
pusha
roll
push
cwtl
cmpsb
jp
pause
mov
inc
lret
mov
push
clc
enter
mov
aam
sarb
adc
bound
push
sahf
mov
clc
jle
out
fwait
aaa
mov
test
loope
fidivrs
jnp
out
stos
lods
ficoml
shl
test
int
aaa
outsl
in
iret
sbb
adc
ja
stos
cli
mov
adc
jbe
roll
std
dec
subl
fwait
aaa
outsl
fidivrs
lea
inc
and
jne
repz
jnp
arpl
stos
ror
xchg
pusha
popf
adc
pop
fnstcw
mov
les
fwait
ja
jae
push
subl
push
sti
mov
aad
insb
push
cmp
cmpsl
shl
add
add
jl
dec
xchg
pop
cmp
lret
arpl
out
fwait
aaa
insb
add
fdivl
pushf
enter
fidivrs
push
dec
pop
push
aaa
push
sbb
ret
pop
and
and
xor
cmpl
inc
sbbl
fwait
loopne
mov
xchg
adc
faddl
dec
sbb
stos
pop
fisttps
int
sub
aaa
outsl
ficoms
sbb
and
aam
cld
fistps
fisttps
imull
cmpsb
aad
dec
jmp
fwait
aaa
outsl
out
scas
or
out
js
lret
sub
call
rcr
or
push
or
pop
mov
outsl
mov
sub
mov
out
mov
push
sahf
hlt
out
dec
inc
std
sub
cli
stos
test
imul
out
popl
fwait
das
cld
int
popf
xor
clc
movsb
sub
in
jg
test
decb
outsl
mov
cmp
pop
lods
cmp
out
pop
mov
iret
push
outsl
push
imul
dec
cmpsl
sbb
pop
dec
sbb
int3
jl
sbb
aaa
adc
stc
mov
out
movsb
dec
mov
mov
lahf
js
and
inc
or
leave
enter
int
scas
xor
movsb
rcr
aam
shl
mov
fwait
xchg
cmp
jl
and
leave
out
pop
lahf
xor
mov
mov
fwait
aaa
outsl
faddp
shrb
cwtl
test
jns
stos
bnd
out
push
and
in
testb
mov
insb
fidivrs
inc
xchg
loope
dec
clc
out
cmp
jecxz
dec
sub
mov
push
adc
test
sbb
cmc
int
aaa
outsl
in
xor
lret
sbbl
jns
out
push
pop
das
push
and
fwait
mov
aad
cwtl
fwait
aaa
outsl
fisubrs
or
mov
out
popaw
loopne
xchg
bound
stc
sub
outsl
fidivrs
ret
mov
ds
mov
repz
fwait
dec
mov
gs
mov
push
sti
enter
mov
aaa
inc
int3
xor
aas
lds
enter
lahf
scas
push
jmp
jns
inc
fucomip
addb
jo
xchg
repz
aaa
decb
fisttps
cmc
mov
cmp
mov
pop
jle
push
pop
repnz
aaa
add
or
rcr
outsl
jns
out
jmp
inc
das
and
sbb
and
repz
mov
mov
mov
cld
stc
sbb
fstpt
scas
cmp
fcoms
out
lahf
aas
mov
push
movsl
jmp
icebp
jns
cld
stc
repz
xchg
popa
imul
outsl
xlat
xchg
aas
jg
mov
push
scas
clc
or
cs
push
adc
inc
leave
loope
jbe
and
jns
xchg
and
lods
xchg
mov
lret
mov
xor
add
cld
jmp
and
and
ss
push
sub
jg
and
mov
push
ljmp
xchg
in
cmp
add
add
push
fs
mov
adc
aaa
rclb
insl
push
add
sbb
jns
out
add
sub
jno
enter
inc
in
repz
sbb
rcrb
sub
cld
stc
mov
lret
push
and
jl
test
aas
xchg
insl
loopne
xor
in
ljmp
stc
repz
bound
les
inc
mov
iret
lahf
inc
sbb
sbb
stos
push
ja
lret
repz
xlat
cmp
jne
loope
fwait
pusha
push
cmpsl
out
movsb
cli
testl
push
je
add
dec
adc
out
mov
out
cmp
inc
les
xchg
adc
pop
cld
stc
repz
mov
lret
imul
mov
jg,pt
jle
mov
test
and
push
imul
aas
mov
dec
mov
lahf
pop
jge
repz
je
mov
loope
setl
aas
std
ja
dec
xlat
pop
cld
stc
repz
movsl
xchg
mov
dec
jle
adc
xchg
jl
jns
fiadds
cld
into
xchg
jmp
cltd
shl
int
aaa
outsl
and
mov
les
or
jle
xor
dec
inc
inc
outsl
fmulp
aad
outsl
lret
pusha
xorl
out
aam
xchg
jg
roll
stos
and
push
outsl
fidivrs
leave
ja
in
add
jae
int
ja
xchg
aaa
push
sub
cmp
sub
xorb
out
fwait
cs
xchg
stc
push
int
aad
decb
fidivrs
insl
push
dec
xor
data16
aaa
mov
inc
ss
jne
iret
lahf
aas
lock
insl
imul
fistl
jg
cld
stc
repz
test
and
cli
into
mov
pushf
xorl
and
jg
adc
or
insb
pushf
sub
in
dec
mov
aas
jg
mov
scas
cmpsl
push
sub
inc
jle
mov
pop
push
and
out
lahf
mov
out
rolb
loopne
cld
stc
movsl
or
dec
push
push
cmp
jmp
cmp
add
aas
mov
shll
out
jg
std
in
pop
sub
js
sub
out
lahf
aas
cmpsl
loope
repz
or
cld
stc
repz
stos
inc
add
jne
int
icebp
iret
lahf
aas
jg
pop
xor
adc
fs
imul
sub
fwait
aaa
outsl
ficomps
mov
in
out
movsl
and
jns
out
test
or
inc
jle
jge
nop
push
or
aaa
outsl
fidivrs
jp
xchg
inc
daa
inc
mov
and
nop
aam
push
mov
cmp
scas
push
fdivl
sarl
cli
enter
ds
cld
xlat
jne
icebp
jne
ds
iret
lahf
mov
lcall
jg
cld
stc
cld
mov
pusha
lcall
ret
mov
aas
dec
pop
cltd
sbb
pop
pop
xor
imul
xchg
adc
in
out
sub
outsl
jns
fildll
iret
ljmp
test
pop
pop
push
push
xlat
fwait
aaa
outsl
faddp
mov
add
adc
ss
sub
repnz
shll
pop
jbe
xchg
inc
push
test
adc
sub
in
mov
aaa
outsl
fidivrs
push
in
mov
nop
and
out
fwait
insb
sub
cmp
and
mov
mov
cs
imul
test
iret
lahf
aas
decl
test
mov
sahf
mov
cld
stc
repz
fidivl
mov
fistpl
fcompl
xor
lahf
aas
jg
cld
inc
sub
lods
movsb
lds
hlt
mov
out
or
dec
pop
add
push
arpl
aaa
mov
cld
dec
out
cltd
sub
dec
aad
int
aaa
inc
xchg
addr16
sub
mov
ljmp
cmp
mov
insb
fisubs
adc
sub
cmp
cmp
push
int3
xchg
repz
inc
in
push
insl
and
cmpsb
rcrb
lods
aam
push
sbb
aas
fs
sub
add
and
push
repnz
mov
mov
jbe
iret
clc
jp
sahf
stos
cld
stc
repz
leave
push
fsubrl
push
and
dec
in
aas
jg
adc
xchg
pop
shll
adc
xchg
js
xchg
pusha
int
loop
movsb
sub
imul
or
push
cwtl
lret
adc
ja
cmp
inc
fsts
push
mov
add
mov
int
ljmp
cld
lods
cmc
testb
lods
sbb
push
adc
outsl
fiadds
jecxz
jle
add
mov
stc
roll
lcall
pand
aas
jg
stos
inc
xchg
out
xchg
in
push
and
es
repz
test
sbb
ss
jns
cld
push
fucomp
mov
inc
fwait
aaa
add
fwait
nop
aaa
imul
or
out
es
mov
or
rcrb
idivb
mov
outsb
jmp
daa
jecxz
movq
in
int
setb
xchg
pusha
adc
out
pop
fwait
inc
cmp
test
clc
jl
subss
mov
xchg
adc
fisubl
xchg
xchg
subps
xor
cld
stc
repz
mov
fs
dec
aas
insl
push
mov
adc
dec
jg,pt
das
ficoml
fimuls
mov
pushf
imul
xchg
sub
arpl
adc
out
lahf
cs
aad
dec
inc
mov
mov
stc
outsl
aaa
lods
lea
cli
cmpsb
push
or
pop
test
out
clc
cmc
aas
jg
cld
outsb
inc
mov
out
xchg
and
loope
iret
lahf
xor
mov
or
sbbb
pop
jg
cld
stc
inc
mov
mov
jmp
dec
add
out
lahf
aas
loope
inc
sbb
test
out
pop
cld
stc
repz
lds
and
xor
cld
stc
add
iret
xlat
in
rcrb
push
and
sahf
pushl
insb
mov
in
sbb
movsl
and
jmp
popa
jns
jge
dec
aas
mov
mov
and
or
jmp
aaa
outsl
cld
in
xchg
inc
jecxz
sbb
dec
inc
mov
inc
adc
sub
pop
fwait
aaa
outsl
ficomps
mov
adc
adc
and
cs
xchg
out
jp
and
lret
xor
ffree
outsb
int
aas
outsl
fidivrs
mov
scas
mov
dec
insb
inc
lret
fwait
aaa
xor
mov
mov
lds
xchg
jo
fidivrs
inc
mov
aam
std
ret
in
ljmp
nop
in
sub
inc
icebp
adc
cmpsb
cld
stc
repz
or
test
jbe
outsl
mov
cli
popf
sub
add
sbb
mov
stc
repz
lock
add
sbb
adc
dec
cld
mov
jmp
loop
fwait
aaa
push
jbe
pushf
call
mov
jns
add
fbld
gs
mov
mov
stos
lahf
bound
adcl
fmulp
mov
jb
stos
add
scas
shl
xchg
and
in
and
movsl
scas
clc
subb
jns
mov
cmp
mov
ljmp
aaa
das
inc
jp
fwait
loopne
adc
roll
repz
in
mov
push
and
call
repz
cli
xchg
sbb
mov
fwait
sub
cmp
roll
mov
jns
out
ret
dec
lock
cltd
scas
sub
fwait
aaa
outsl
fisubrs
pop
out
pushf
push
dec
shll
mov
int
pop
je
fwait
into
mov
xchg
push
repnz
addr16
mov
aas
cmp
or
pop
add
movsb
push
into
testl
fsubrs
mov
sbb
mov
test
scas
cmp
sbb
stc
xchg
mov
aad
push
add
jg
xorb
scas
jae
paddsw
out
call
sarb
mov
or
or
outsl
dec
inc
push
aaa
outsl
fidivrs
mov
fisubrs
mov
repz
fwait
inc
or
leave
xchg
je
inc
adc
xor
dec
pop
fnstcw
fneni(8087
dec
adc
setns
es
cld
stc
inc
out
mov
cld
orb
loopne
lahf
aas
jg
test
scas
inc
xor
repz
cmp
add
cmp
xor
lahf
aas
jg
cld
add
fbld
dec
and
iret
mov
mov
out
sub
test
mov
cmp
aas
jg
jecxz
adcl
xor
push
cld
stc
repz
imul
shll
outsl
fiadds
or
sahf
test
and
push
xlat
dec
mov
lahf
jle
jns
cmpsb
flds
cmp
lret
insb
cmp
aad
aaa
outsl
ficomps
ja
and
or
jns
out
pop
and
xor
pop
push
stos
fimuls
lahf
aaa
outsl
fidivrs
lahf
ret
mov
nop
cmpsb
sub
push
xchg
repz
fwait
js
scas
shl
cltd
outsb
xchg
insl
in
xor
outsl
fidivrs
xorb
inc
sbb
dec
bound
int
aaa
xor
and
mov
jns
jne
icebp
jg
subb
sub
sub
aaa
outsl
fisubrs
xor
stos
push
xchg
xor
xchg
or
dec
fwait
or
cmpl
call
loopne
pop
push
or
pop
adc
rorb
stc
outsb
test
dec
ror
rorl
shrb
push
and
aas
in
jne
mov
jo
insl
mov
fistpl
cmpsl
mov
fwait
aaa
outsl
fisubs
or
insl
arpl
push
mov
fs
sub
mov
fwait
iret
mov
enter
mov
adc
orl
test
imul
dec
inc
mov
add
sbb
insl
sub
and
inc
push
fidivrs
adc
fiaddl
pop
test
aam
fwait
aaa
outsl
adc
jns
xchg
jb
fimull
push
or
inc
mov
sarl
pop
xchg
and
mov
or
aam
test
lahf
aas
jg
push
push
push
incb
stc
repz
mov
dec
sub
ret
iret
loop
push
mov
inc
out
sub
adc
mov
stc
push
out
fwait
aaa
popf
mov
xor
mov
dec
mov
jns
fucomp
movsl
xchg
repnz
mov
loope
sbb
fwait
aaa
outsl
test
dec
fimuls
les
je
lods
fsubrl
jns
movsl
xchg
aas
cmp
jge
iret
inc
rorl
xadd
outsl
fiadds
cmpsb
mov
push
pop
repz
fwait
cltd
lods
arpl
cmpl
sub
outsl
fidivrs
or
aam
add
push
sbb
das
dec
jno
push
aaa
xchg
mov
data16
stos
push
cmp
inc
mov
push
fwait
aaa
outsl
fisubs
pop
cmpl
pusha
jle
lods
loope
les
int
lods
push
xchg
lods
xor
adc
aaa
outsl
fidivrs
enter
pop
mov
cs
lock
cmpsl
fidivrs
mov
mov
jge
notl
outsl
jo
push
jns
sbb
test
out
test
imul
jne
xchg
jns
enter
pushf
das
je
dec
out
lahf
jg
rolb
mov
repz
xor
aad
add
ffree
repnz
jle
push
mov
jnp
adc
stc
and
dec
stos
fsubrs
mov
fiadds
mov
shl
push
int
aaa
outsl
in
and
scas
loop
lods
push
cld
roll
in
mov
xchg
sbb
int
orb
push
push
push
ror
mov
sbbb
xchg
jno
in
cmc
in
int
int3
subb
je
sub
out
lahf
aas
ja
in
mov
loopne
mov
inc
jne
cli
leave
dec
ja
idivb
inc
cmp
shlb
sub
stos
outsb
out
xorps
push
xchg
loope
enter
mov
test
test
out
hlt
lods
fisubrs
out
fiadds
scas
nop
outsl
fidivrs
ja
ja
or
sbb
cwtl
test
js
data16
pop
test
mov
mov
mov
incl
ss
lods
xchg
sahf
sbb
test
aaa
outsl
gs
xor
aaa
arpl
mov
dec
dec
add
jp
sbb
bt
mov
dec
test
adc
xchg
enter
aaa
popf
pushf
jecxz
in
lret
push
cmp
repnz
xlat
mov
inc
lahf
idivl
jbe
push
test
jo
sub
stos
inc
outsb
jmp
mov
out
cmp
movsb
mov
das
jnp
bnd
outsb
fidivrs
sub
mov
leave
lret
iret
mov
out
or
push
pop
adc
test
lock
mov
cmp
mov
and
cmpl
mov
mov
add
and
dec
lea
xchg
repz
loopne
fwait
aaa
and
test
idivl
insb
fidivrs
shl
call
aaa
add
int
mov
repz
out
or
lahf
sub
in
insl
xchg
aaa
outsl
fidivrs
xor
lcall
push
jne
int
in
push
stc
xchg
fists
jns
out
dec
inc
dec
mov
or
xor
and
mov
insl
fildll
sarb
icebp
je
popl
mov
in
mov
cld
cld
stc
repz
out
jecxz
xor
xorl
ljmp
iret
out
fwait
aaa
mov
xchg
cld
or
push
leave
fidivrs
les
sbb
fsub
adc
outsl
add
pop
sti
jmp
sbb
or
inc
out
icebp
xchg
aaa
mov
ss
out
jo
repz
xchg
into
jl
add
mov
clc
add
jmp
daa
xor
xchg
lock
repz
dec
inc
je
push
xor
xchg
push
arpl
stc
cld
rcrl
mov
dec
mov
aaa
outsl
adcb
lahf
mov
sbb
xchg
fprem
popf
test
xchg
stos
xlat
cld
sti
enter
imul
outsl
mov
dec
popf
push
movsl
xchg
insb
iret
lahf
aas
jg
or
lods
pushf
mov
cld
stc
repz
rcl
jecxz
jecxz
jb,pt
inc
ret
pop
lahf
aas
jg
jmp
ljmp
sub
rolb
enter
pop
lods
mov
mov
imul
xchg
gs
jne
dec
int
cmp
mov
shl
fcmovne
cs
inc
repnz
out
fwait
push
sub
or
jnp
repz
inc
sti
clc
outsl
or
repnz
jns
jge
cmp
cld
aaa
fwait
push
lahf
and
int3
inc
enter
das
and
mov
test
push
aaa
pop
mov
jno
sbb
outsl
mov
inc
fldenv
and
fimull
aaa
jnp
jns
out
fs
lods
fildll
push
aam
lahf
aas
ds
les
int
xor
aas
in
test
jl
out
ficoms
cltd
push
ljmp
mov
loop
sub
lcall
adc
push
or
in
int
insb
cmpsl
xor
shll
xor
jno
inc
pop
dec
and
pushf
scas
jmp
pop
jb
pop
cmp
call
rcr
inc
aas
imul
int
aaa
outsl
jg,pn
xchg
stc
xchg
cmp
imul
jb
out
pop
js
test
rcrl
jns
ja
dec
stc
xchg
int3
mov
mov
and
fwait
aaa
outsl
scas
test
lcall
outsb
ljmp
sbb
sub
les
rol
add
mov
fwait
cmpsl
inc
sbb
repz
xlat
fs
and
je
enter
mov
add
test
mov
cmp
inc
out
aas
sbb
pop
dec
or
repnz
lahf
in
mov
popf
and
xchg
push
subb
xchg
dec
rcl
aaa
outsl
fidivrs
into
or
adc
lea
repz
fwait
xor
sti
pushf
in
jmp
inc
outsl
fidivrs
fs
inc
dec
in
mov
sub
mov
push
mov
xchg
push
jg
jno
cmp
cmp
push
sub
iret
aas
push
and
jp
pop
adc
cli
sbb
adc
repz
movsb
outsl
xor
clc
leave
cmpsl
pop
dec
inc
fstl
outsl
fidivrs
clc
stc
jmp
mov
jne
out
fwait
xlat
jecxz
pop
cmpsb
xlat
mov
jne
outsl
fidivrs
imul
sbb
mov
xchg
push
mov
fidivrs
sub
ret
adc
mov
pop
sbb
xor
fwait
aaa
outsl
jae
xchg
xchg
pop
imul
inc
mov
hlt
xchg
push
and
inc
xchg
fnstenv
jb
jns
cmp
sbb
jns
scas
loopne
pop
adc
dec
inc
inc
or
xchg
add
outsl
fidivrs
adc
push
dec
inc
in
xchg
int
in
int
dec
andb
add
movsb
roll
out
xor
enter
insb
popa
adc
push
sbb
cltd
dec
jns
push
cli
enter
scas
arpl
cmc
frstor
xor
inc
fidivrs
pop
push
movsb
scas
out
insb
adc
outsl
daa
sbb
stc
repz
je
jb
jmp
xchg
and
out
gs
cmp
repz
xlat
fistps
and
mov
xlat
push
repz
sbb
or
test
inc
jne
push
stc
mov
jbe
sti
fidivrs
ret
movsb
inc
jmp
int
aaa
outsl
or
add
or
jns
out
and
out
jl
test
call
fisubrs
dec
and
lds
scas
inc
add
leave
dec
mov
lds
xor
mov
mov
pop
outsl
and
mov
cmpsb
ja
imull
fwait
aaa
outsl
ret
xor
mov
push
sub
mov
or
arpl
fwait
ja
and
and
hlt
add
push
sbb
icebp
jnp
lock
push
cmp
cli
aas
imul
inc
mov
ja
testb
cld
stc
pop
jg
xchg
push
mov
loopne
xchg
or
mov
jg
or
imul
aas
imul
sub
jb
or
repnz
mov
push
add
bound
mov
pop
cli
mov
mov
je
xchg
or
test
and
mov
nop
jnp
fwait
aaa
outsl
fdivrp
cwtl
lret
xchg
clc
push
mov
sbb
adc
enter
pop
ljmp
sub
cs
rcrl
cmpsb
je
xrelease
xchg
addl
pop
std
in
pusha
or
xchg
cmc
pop
test
xor
incl
pop
cmp
cld
stos
pop
xchg
inc
int
add
mov
pop
flds
daa
cmp
aaa
add
rorl
adc
mov
in
fwait
repnz
jmp
push
push
sbb
inc
jle
pop
in
ljmp
jns
xor
pop
hlt
clc
mov
out
loop
push
stos
xchg
jecxz
pop
shl
fwait
aaa
outsl
adc
bound
fbld
lea
int
in
jecxz
mov
inc
or
dec
subb
outsl
fidivrs
shlb
pop
and
xor
out
fwait
imul
mov
test
cli
lds
daa
das
insl
addl
shlb
push
push
xchg
aas
push
lahf
rcr
jns
out
pop
sub
sbb
cmp
outsl
mov
out
xchg
inc
aad
int3
mov
int
aaa
fcmovu
xchg
xor
jo
and
mov
nop
mov
mov
mov
cld
stc
repz
mov
stc
lret
dec
imul
divl
pop
lahf
aas
jg
jle
sbb
add
daa
lods
rcll
repz
push
xor
jg
mov
in
jg
cld
sti
sbb
nop
jb
mov
sub
mov
lahf
pop
add
iret
lahf
aas
jg
call
movsb
sbb
mov
out
push
jne
popf
xor
xchg
add
jo
push
aas
stc
dec
xchg
data16
mov
jg
pop
xor
stc
push
inc
mov
push
loop
int3
dec
sbbl
jmp
sbb
repz
cmp
or
add
sti
cmc
mov
aas
jg
jge
jns
das
pop
out
popf
lock
rorb
jnp
out
lahf
in
not
sub
dec
mov
push
stc
mov
cld
stc
test
mov
sbbl
adc
out
lahf
aas
scas
push
jne
add
pop
mov
push
sub
xchg
fidivrs
pop
nopl
sbb
sbb
cld
jle
sarb
sti
sahf
imul
stc
repz
pop
jle
fistpll
ja
or
sub
imul
mov
cmpsl
int
fwait
aaa
adc
mov
enter
cmpsb
movsl
int3
mov
sahf
dec
xor
arpl
or
aaa
outsl
fdivp
mov
repz
imul
repz
and
out
adc
pop
jb
outsl
fidivrs
imull
addb
out
sbbl
into
mov
shrl
test
mov
pop
fnstcw
arpl
out
lcall
push
cmp
sahf
fimuls
js
dec
notb
popa
mov
mov
fsubrs
sahf
mov
repz
clc
repnz
mov
ret
push
lahf
aaa
outsl
fidivrs
pop
cli
outsl
fcoml
popf
repz
fwait
out
or
filds
scas
xlat
jmp
mov
popa
jg
xchg
movsb
xchg
mov
mov
or
ljmp
je
ljmp
dec
mov
inc
rolb
cli
dec
mov
mov
jle
idivl
int
ja
pushf
add
popa
or
movsb
orb
and
mov
sub
rcrl
out
pop
xlat
ljmp
in
arpl
test
or
dec
aas
mov
pop
fldt
mov
mov
nop
xchg
aaa
outsl
fisubrs
mov
test
mov
mov
sbb
jae
enter
mov
ficoms
sub
lcall
or
and
outsb
into
fs
repnz
pop
fcoml
mov
dec
sub
push
cmp
test
ret
fidivrs
and
pop
daa
fs
mov
xchg
int
jg
les
lods
xchg
cmp
decl
icebp
xorb
sub
test
imul
push
add
push
jb
mov
dec
mov
pop
sub
pop
popa
jo
outsl
fidivrs
ljmp
insb
test
int
aaa
xchg
adc
dec
stos
out
fidivrs
popf
stos
fcmovne
xchg
mov
xchg
and
jecxz
xchg
scas
xchg
push
jp
inc
ljmp
aaa
push
jl
mov
mov
inc
negl
int
rcr
sbb
mov
aas
imul
jo
test
mov
mov
pusha
ds
psrad
pop
jb
and
js
sub
repz
pop
call
jmp
push
aas
jg
cld
mov
xlat
jl
and
jno
mov
xchg
aas
push
and
shrb
test
ljmp
iret
push
addr16
dec
add
fstps
stc
mov
fsubp
pop
push
lcall
stc
lret
adc
mov
pop
shrl
sbb
adc
fidivrs
in
xchg
cmp
ja
push
push
mov
and
out
adc
jns
out
jno
and
cmp
enter
mov
adc
push
pop
push
adc
out
out
cmpsb
cmp
popa
lahf
sahf
insl
ds
nop
xchg
leave
xor
xchg
and
lcall
inc
mov
cld
stc
repz
in
xchg
push
aad
jmp
jbe
lahf
aas
jg
call
mov
inc
jnp
in
call
es
inc
leave
xchg
jp
cmpsl
int
cld
std
and
mov
pusha
mov
out
lahf
xchg
mov
mov
aad
mov
imul
xor
data16
out
inc
jno
mov
mov
fldcw
jg
cld
stc
add
pop
imul
mov
jmp
imul
mov
fistpll
pop
xor
test
mov
out
aaa
outsl
fimuls
daa
bound
adc
mov
out
jle
ljmp
pop
repz
shl
inc
paddb
or
add
or
hlt
sub
push
sbb
adc
flds
divl
lahf
sub
stc
lahf
jg
andb
jno
sbb
sarl
iret
mov
sub
dec
mov
pop
mov
punpckldq
ja
bound
jns
push
mov
aas
mov
lret
aas
cmp
dec
lods
xchg
cmc
aaa
add
jo
cld
stc
rcrl
jne
out
sbb
push
out
scas
pop
mov
mov
jg
cmpsb
clc
jnp
xor
mov
jg
cld
jmp
xor
mov
cwtl
pop
xor
aas
mov
mov
push
mov
push
je
shll
adc
mov
pop
lcall
sbb
into
sub
lock
int
aaa
outsl
or
cmp
repnz
fstl
stc
mov
fcmove
jno
test
pop
fistps
sbb
dec
push
fwait
aaa
outsl
ficoms
push
test
cs
and
ret
cs
jg
enter
inc
notl
add
repz
lahf
or
and
dec
and
cld
stc
shll
hlt
sbb
push
hlt
pushf
add
sbb
out
lahf
aas
stc
lods
xchg
mov
test
in
insl
lcall
pop
ficompl
aaa
cmp
daa
push
mov
nop
cmp
push
mov
stc
jle
mov
jecxz
cmp
push
dec
repz
sub
xchg
insl
xor
mov
repz
ja
sahf
mov
xchg
pop
pop
push
jmp
fwait
aaa
outsl
mov
das
in
pop
sbb
jmp
repz
lret
insl
aad
jae
push
jns
cmpsb
push
push
add
outsb
faddp
lods
push
pushf
scas
dec
push
jp
ja
cld
pop
jecxz
scas
testb
cld
jecxz
fwait
pop
and
scas
movsl
icebp
mov
lahf
aas
jg
adc
insl
push
out
pcmpeqd
or
pop
xchg
jge
dec
cwtl
push
clc
jg
rcr
repnz
repz
sbb
imul
loopne
fsubl
push
in
xchg
gs
daa
je
push
iret
ror
pusha
in
pop
xchg
repz
shlb
cli
fidivrl
iret
pop
ret
mov
pusha
sbb
outsb
inc
stos
pop
add
inc
repz
cmp
cmpb
popf
and
ja
stc
add
dec
and
push
fidivrl
dec
aaa
outsl
fidivrs
cmp
xor
loopne
aad
loop
repz
fwait
push
inc
dec
addr16
dec
inc
jle
mov
mov
pop
add
sti
sbb
pop
rolb
rclb
addb
mov
mov
or
scas
aas
stos
outsb
popa
pop
outsl
fidivrs
fnstcw
ret
sbb
loope
pop
mov
or
fwait
aaa
stos
inc
fs
shll
mov
sub
cmpsb
xor
xchg
aaa
out
add
sti
adc
nop
xchg
push
jmp
fwait
aaa
rclb
xor
leave
out
cld
jl
sbb
aam
or
cmpb
jecxz
dec
out
sub
fisubrs
xlat
int
orb
out
iret
outsl
and
out
enter
add
adc
jp
test
push
aaa
outsl
fidivrs
inc
setnp
mov
pushf
shrb
repz
int
lret
xlat
or
and
out
out
icebp
shll
xorb
in
add
es
in
fwait
aaa
out
jecxz
cmc
cmc
add
mov
scas
js
fldl
adc
or
inc
test
sub
jb
xchg
pushf
rcrl
lcall
repnz
lahf
jecxz
cmpsb
jmp
sahf
mov
daa
std
jg
cld
stc
icebp
xor
fdivs
sub
iret
lahf
aas
adc
mov
push
insl
in
xor
mov
les
push
or
mov
pop
add
les
push
xchg
jns
out
mov
popf
jl
adc
int3
outsl
adc
outsl
fidivrs
mov
xchg
in
out
out
fwait
iret
cmp
popf
mov
outsl
fidivrs
popa
add
sub
xor
test
int
aaa
fstpt
xchg
ds
rep
scas
test
insl
xchg
rorl
out
mov
xchg
pop
femms
fidivrs
add
xchg
test
std
ffree
pop
int
aaa
outsl
in
inc
aaa
aas
pop
sbb
imul
xchg
jle
lods
call
sub
iret
lahf
jg
push
mov
jmp
stc
repz
mov
mov
mov
cmpsl
lret
test
aas
jg
lret
or
push
inc
jb
fdivrl
mov
jge
rcrb
lahf
data16
in
mov
jo
add
sbb
xrelease
pop
sbb
aas
cmp
in
jns
cld
stc
inc
repnz
in
cmc
hlt
hlt
orb
ljmp
das
inc
test
imul
insl
stc
repz
and
pop
cmp
mov
ja
repnz
xchg
sar
inc
jmp
push
jnp
enter
fnstsw
pop
adcb
lahf
aas
clc
sub
cwtl
adc
cmp
stc
repz
div
call
adc
mov
fstp
push
push
mov
dec
sub
iret
lahf
jg
out
jo
jmp
std
aaa
lahf
idiv
cld
stc
rep
or
inc
dec
add
sub
gs
lahf
aas
jg
and
aaa
mov
mov
repz
dec
sbb
adc
pop
sbb
mov
call
es
jb
pop
mov
dec
dec
enter
inc
pop
sub
push
loope
shlb
in
push
mov
lret
cli
push
gs
pop
test
xor
dec
xchg
dec
sbb
fisubrs
jp
mov
inc
es
out
out
fucomip
mov
and
pop
mov
aaa
outsl
pop
das
jne
call
pushf
push
sbb
cmc
enter
pop
bound
aas
cmp
call
mov
mov
dec
cmp
repz
repz
mov
mov
push
fdivs
push
and
add
or
add
aas
cmp
dec
mov
cmp
aas
ljmp
inc
jo
or
shll
xchg
out
push
popf
cli
xor
mov
adc
stos
test
mov
adc
lret
push
xor
xchg
aas
fistpll
sbb
push
jb
inc
aas
imul
mov
inc
inc
fiadds
xor
xor
nop
fwait
aaa
outsl
cmc
into
fdivl
jbe
push
repnz
pop
inc
daa
outsl
mov
decb
inc
cmp
jne
mov
mov
add
movsl
pusha
sub
xchg
fdivrp
add
add
mov
xchg
cwtl
pop
and
out
xchg
ds
or
stos
fnstcw
pushf
call
mov
stos
cmpsl
jbe
dec
mov
rorb
mov
fsubp
and
and
xchg
fwait
aaa
outsl
lea
and
push
lods
ljmp
mov
jg
ret
sub
std
sbb
leave
push
ljmp
loope
iret
pop
pop
push
and
mov
ds
push
es
inc
out
out
into
sti
mov
stc
repz
lahf
fucom
out
mov
or
sub
mov
hlt
lahf
aas
jg
and
into
movsl
rorl
cmp
lcall
or
nop
lahf
cli
push
in
sarl
jno
mov
lahf
aas
jg
pop
or
inc
hlt
jb
flds
jne
repz
and
pop
mov
into
stos
sbb
lret
mov
cld
mov
jl
jle
mov
outsb
fiadds
mov
icebp
mov
clc
nop
fstp
out
out
adc
ss
jg
cmp
cld
stc
repz
stos
mov
stos
and
aas
lcall
stc
scas
int
jae
lret
xor
iret
mov
inc
mov
add
adc
pop
sub
push
shrb
out
sbb
sar
mov
repz
mov
cmp
sbb
sti
mov
lret
cmc
xchg
fwait
aaa
outsl
add
fwait
mov
and
orb
int
call
call
insb
ljmp
mov
sarb
mov
cs
sbb
xlat
jmp
mov
scas
cmp
pop
rclb
loope
mov
adc
push
mov
addr16
out
fwait
mov
jno
mov
push
pop
stos
add
mov
sub
cs
in
xchg
orb
lahf
insl
cmp
mov
bound
call
jl
lahf
jmp
shll
int
jmp
repz
movsl
push
mov
sub
cmp
aad
push
adc
push
out
mov
jns
add
dec
push
movsl
jmp
add
fdivrl
fucomp
shlb
fiadds
jg
sti
fisubl
xor
sarb
aaa
out
das
lods
or
adc
fmuls
mov
pslld
lahf
aas
call
insb
rclb
data16
int
dec
cmp
stc
repz
flds
cmp
dec
and
fisubs
in
out
mov
scas
push
jns
repz
rorl
push
rclb
dec
jl
stc
push
sbb
pop
scas
lret
pop
inc
sbbl
or
aas
jg
sbbb
loopne
ja
scas
or
and
iret
jl
mov
lret
popf
loopne
repz
pop
insl
mov
mulb
into
pop
jl
xchg
inc
fidivrs
adc
cli
inc
movlps
fisubl
mov
testl
repz
push
mov
mov
dec
mov
aas
jg
cld
jo
mov
repnz
pusha
pop
lods
enter
repz
lahf
xchg
adc
add
cld
stc
es
mov
jge
cmpsb
rol
add
mov
jge
aas
xor
outsl
fidivrs
call
pusha
jne
xchg
repz
ficomps
imul
outsl
fidivrs
jbe
ret
arpl
aaa
adc
rcr
xlat
mov
out
mov
adc
daa
into
iret
repz
gs
aaa
inc
pop
fldcw
sub
inc
je
repz
fwait
cmovae
xchg
arpl
xchg
sbb
mov
inc
andb
cmp
adc
mov
outsl
fiadds
fs
movsb
nop
test
insl
stos
xor
out
inc
mov
lds
loope
dec
mov
xor
repnz
loop
insb
gs
fwait
aaa
outsl
fsubp
inc
xchg
pop
mov
data16
lret
add
out
adc
cltd
arpl
aaa
aaa
outsl
fidivrs
pop
sbb
movl
enter
outsb
addl
imul
pop
scas
loop
stc
repz
mov
out
scas
imul
cs
aas
jg
cld
add
fadds
stos
fstpl
mov
iret
lahf
cld
xor
hlt
loop
fdivrl
cld
stc
push
incl
imul
mov
xchg
lahf
aas
ret
pop
sub
mov
stc
lock
cld
stc
repz
push
in
inc
loope
cmp
shll
jge
cmp
aas
stc
jo
repz
jae
fdiv
out
fwait
mov
int3
scas
sub
fldenv
jns
jno
mov
push
jle
sahf
in
mov
jecxz
mov
jno
mov
jns
les
xchg
dec
sub
fmul
fwait
aaa
outsl
clc
clc
cs
and
call
bound
mov
ja
sub
stc
sarb
cmpsl
or
cmpb
ss
rolb
repnz
dec
lds
in
loopne
imul
sbb
pop
jo
add
pop
scas
sbb
in
insb
and
xchg
hlt
push
insb
add
je
cmpsl
repnz
pop
fwait
aaa
outsl
ficomps
push
bound
sbb
xchg
sub
mov
out
jg
ja
xchg
fadds
cmp
mov
imul
sahf
dec
mov
pop
mov
popa
or
loopne
mov
cld
cld
mov
scas
pop
in
fsubrl
stc
xlat
add
cmp
and
jg
insl
pop
imul
pop
ret
sbb
dec
add
pop
sub
fs
xor
mov
lods
sub
pop
neg
jge
lods
lods
xchg
push
add
pandn
mov
add
sub
out
fwait
shlb
and
mov
mov
pop
aad
cltd
mov
aaa
add
adc
lret
addb
xlat
aas
lret
imul
ds
test
repz
xchg
lock
insl
repz
sbb
jns
push
pop
hlt
pop
pushf
movb
je
stos
xor
fwait
aaa
outsl
fdivp
sahf
adc
into
jmp
jg
les
dec
mov
mov
jge
mov
popf
sbb
nop
mov
mov
outsl
fidivs
pop
in
push
mov
out
roll
gs
call
mov
subl
sub
imul
and
cmp
pop
sbb
out
aad
mov
rclb
adc
push
fistpl
lahf
fwait
ljmp
loopne
jmp
ret
pop
les
out
fwait
mov
jge
adc
out
dec
into
outsl
fidivrs
cmpsb
shl
mov
dec
sbb
lea
es
int
aaa
hlt
xor
jge
pop
stc
stc
divl
push
xor
add
jne
iret
lahf
aas
add
inc
jb
in
inc
dec
xor
pusha
je
xchg
js
fldl
adc
dec
mov
lahf
ljmp
mov
push
fisttps
jmp
insl
jmp
iret
lahf
jg
call
mov
dec
and
push
fdivrp
cld
stc
repz
sbb
and
push
cld
xorl
lahf
aas
jg
adc
cmp
es
decb
adc
and
mov
adc
jl
cld
mov
iret
pushf
shr
or
add
sub
sbb
pop
mov
pusha
mov
aad
fwait
aaa
outsl
push
jne
cmp
shrb
sbb
mov
sub
push
cmpb
or
test
in
iret
pop
pop
daa
push
push
loopne
xlat
jmp
mov
jl
mov
mov
add
repz
mov
adc
lahf
gs
lea
cmpsb
or
lcall
jnp
sti
lds
sarb
pop
jb
out
mov
push
and
inc
or
jns
cltd
aad
pop
outsl
fidivrs
lcall
fiadds
int
aaa
in
dec
adc
push
pop
in
ja
sbb
cmp
scas
and
sbb
cwtl
lahf
test
and
jg
gs
sbb
xchg
incb
xlat
and
or
cld
stc
ret
dec
cmp
mov
int
aad
xor
sub
fnstcw
ret
aaa
sub
adc
addb
das
fidivrs
xchg
lcall
and
and
mov
mov
adc
add
sub
cmpsb
shl
out
mov
fsub
jbe
repnz
pop
and
lock
jecxz
in
int
mov
cmpsl
sub
in
xchg
cmp
loopne
sbb
cld
icebp
daa
sub
adc
aaa
jnp
sub
add
int3
sub
ret
popa
adc
and
fwait
aaa
outsl
ljmp
xchg
test
mov
divl
lret
out
fucomip
shll
sub
push
fwait
aaa
outsl
ficomps
pop
or
mov
imul
in
int
push
push
inc
dec
fwait
aaa
outsl
adc
cmp
pop
pop
lds
sbb
icebp
mov
fs
jg
in
inc
or
sub
fsubrl
outsl
ficoms
cmp
add
and
out
fwait
aaa
popa
pop
std
pushl
or
push
jle
inc
push
wrmsr
jnp
test
mov
int
ja
ja
call
repnz
jns
out
adc
stos
das
arpl
mov
out
aam
adc
sbb
push
jns
out
jg
mov
pusha
mov
add
inc
sbb
push
mov
mov
jns
out
sub
stc
push
xlat
adc
shll
cmp
or
sbb
mov
int
mov
adc
and
add
xchg
lahf
jg
nop
push
jne
xorb
insl
jecxz
in
iret
fstpl
xchg
bound
orb
fsts
adc
inc
xchg
mov
push
jns
out
sub
pop
jg
test
std
mov
outsl
or
mov
mov
cs
das
dec
jecxz
mov
dec
lcall
mov
cmp
out
fwait
ja
cli
fs
sub
test
jns
ljmp
jmp
lret
mov
adc
out
lahf
dec
rorb
adcl
mov
imul
stc
sbb
cmp
mov
clc
mov
fsts
pop
mov
inc
dec
loopne
mov
clc
enter
jge
rcr
int3
dec
inc
dec
or
xchg
lds
mov
push
inc
jle
cld
repz
sub
xchg
repnz
rorb
nop
xchg
aaa
insb
or
ss
mov
div
pop
lcall
das
push
and
scas
sub
outsl
fiadds
andl
push
push
addr16
inc
xchg
int
shll
mov
in
test
add
fwait
aaa
outsl
fsubp
call
daa
inc
fmul
data16
mov
scas
sahf
sti
adcl
fneni(8087
mov
dec
xlat
push
dec
mov
in
xor
outsl
fidivs
imul
je
repz
add
out
icebp
test
aaa
mov
dec
lods
mov
mov
ret
sub
adc
inc
sub
out
mov
xchg
mov
and
outsl
fidivrs
pop
adc
inc
inc
mov
int
ja
popl
jmp
mov
xor
sbb
add
sub
fidivs
jge
nop
lret
add
sub
out
mov
fnstcw
cmc
add
lods
pop
add
mov
cmpsl
cmp
mov
iret
lahf
jg
xor
dec
jbe
xchg
or
fldenv
stc
repz
pop
fldenv
insl
xrelease
mov
aas
jg
filds
in
fsubr
sub
cmp
or
stc
mov
mov
addr16
jnp
mov
mov
sbb
pop
fcoml
int
aaa
outsl
arpl
test
jecxz
xchg
nop
and
mov
nop
and
mov
repz
mov
xchg
jbe
js
lret
dec
aas
sti
sahf
orb
scas
jg
sbb
xor
ljmp
sbb
or
cld
addr16
add
and
iret
hlt
jp
int
aaa
outsl
aaa
aad
fisubrl
inc
daa
adc
pop
mov
sub
cli
lahf
lea
js
call
xchg
icebp
out
imul
mov
xchg
cmp
mov
fdivs
mov
repnz
aaa
add
xor
imul
shlb
aaa
outsl
fiadds
jne
jge
mov
push
std
test
jns
out
mov
cmpsb
inc
test
cmp
stc
ret
jl
mov
ljmp
rolb
add
cmpsb
and
int3
sub
lahf
aas
jg
aaa
out
or
push
test
jge
call
icebp
leave
iret
cmovb
je
adc
cmp
mov
mov
pop
inc
xor
das
outsl
fidivrs
push
fnstsw
rcrl
adc
fwait
aaa
test
js
les
pop
inc
ja
mov
pop
cmpsl
imul
push
or
fnstcw
cs
sbb
aaa
das
inc
push
jecxz
pop
mov
inc
jecxz
dec
lods
lahf
aas
jne
enter
bound
aam
stc
repz
fiaddl
sub
std
push
cmp
pop
sub
cld
ror
repz
das
sahf
pop
mov
or
sub
lahf
sti
push
inc
pop
nop
or
ljmp
leave
push
int3
icebp
repnz
jns
mov
stos
dec
xchg
sbb
popa
or
int
aaa
outsl
test
mov
jae
sub
jae
out
cld
inc
and
add
mov
test
cld
cltd
stos
push
repnz
sar
shrd
sbb
jno
or
lock
outsl
fidivrs
sbb
push
popa
sbb
repz
fwait
int
pop
push
sbb
imul
cld
sti
dec
daa
jno
sub
out
fwait
add
inc
jle
xchg
repz
mov
jl
outsl
pop
mov
cmpl
cmp
sti
pusha
inc
adc
aaa
outsl
mov
aas
xchg
mov
mov
adc
sbbb
add
test
xor
sub
fmull
fcmovb
lds
out
adc
out
shrb
fs
js
fidivrs
inc
inc
fst
or
mov
dec
jb
lods
and
fwait
aaa
pushf
xchg
adc
movsb
rclb
scas
call
pop
imul
jge
scas
and
ljmp
and
xor
jnp
int
aaa
dec
mov
push
jno
sbb
sbb
fidivrs
stos
mov
jbe
ret
movsl
fwait
jecxz
in
enter
mov
rorb
das
sahf
lahf
xrstor
repz
xor
sub
cmpsl
xchg
daa
inc
mov
int
sub
inc
or
out
sbb
into
cld
jmp
mov
jmp
scas
mov
jle
loopne
lods
mov
outsl
aas
jle
outsl
aad
inc
test
and
mov
and
push
fidivrs
mov
notl
mov
dec
pop
push
int
aaa
outsl
inc
es
dec
jg
xlat
push
insb
gs
ret
in
stc
mov
push
sbb
out
sbb
loope
je
pop
aas
imul
cmp
outsb
mov
push
dec
or
mov
je
out
fwait
ljmp
insb
pop
bound
sub
sarb
push
repnz
outsl
ficoms
lcall
mov
jp
dec
cmp
shll
aaa
lock
outsl
in
int3
cwtl
lds
inc
jns
pop
test
jns
out
aas
mov
mov
repnz
das
movsb
cmpsb
sti
gs
ret
xlat
and
inc
sar
stc
repz
xor
mov
mov
xor
jle
jo
ja
fadd
sub
outsb
in
jecxz
dec
out
stc
repz
addr16
adc
cmp
sub
fists
mov
addr16
bound
lcall
xchg
jg
icebp
xor
sbb
setno
out
lahf
aas
iret
push
rcr
inc
xchg
inc
stc
lea
pop
mov
mov
call
cmp
mov
iret
lahf
aas
lcall
or
dec
mov
mov
ljmp
gs
and
or
pop
stos
sbb
in
pop
xchg
add
daa
aas
jg
ja
notb
pushf
pop
int3
aas
ss
sar
mov
enter
fistpl
notl
sbb
outsl
jle
push
rcll
cld
jg
xor
lahf
jg
cmp
stc
sub
jecxz
es
push
xor
mov
lds
mov
sub
fwait
mov
int
jg
xchg
fsubl
loopne
shlb
loop
test
inc
jge
push
sbb
jg
mov
jns
out
mov
mull
push
cmp
repz
jmp
popa
lea
outsl
ficomps
into
mov
arpl
outsl
fiadds
ss
std
in
pop
inc
jns
aam
xor
mov
inc
psrld
add
jle
das
mov
jle
push
mov
stc
adcl
loop
hlt
in
aaa
outsl
xorb
aam
add
lds
repz
xor
xchg
ficomps
hlt
jle
das
arpl
mov
mov
mov
xchg
int
lahf
xchg
adc
notb
pop
loopne
movsb
or
push
mov
repnz
xor
inc
stos
push
mov
fbstp
adc
xchg
cmpsl
movsl
inc
aaa
insl
test
es
lcall
out
arpl
cld
or
jmp
in
cmp
jl
movsb
ret
mov
loop
fucomip
pop
pop
and
int
ja
push
sbb
pushf
pop
lods
mov
lahf
add
add
mov
jp
pushf
idivl
adc
int
aaa
outsl
int
arpl
dec
lret
pusha
pop
test
es
cmpsb
cmpsl
inc
sub
mov
sub
lret
outsw
bound
fwait
ja
aas
add
aad
cmp
repz
adc
arpl
push
inc
mov
mov
mov
inc
jbe
fwait
aaa
outsl
faddp
psubsb
mov
fwait
mov
out
ret
mov
xchg
je
lea
adc
mov
mov
pop
jg
hlt
in
cmp
ljmp
pop
repz
or
iret
lahf
aas
into
mov
shlb
mov
repz
sbb
mov
cmp
out
lahf
cld
add
dec
je
mov
repz
js
inc
fldt
and
lret
div
shr
lcall
lods
dec
push
dec
or
movsb
sbb
push
inc
add
call
push
xor
lcall
or
add
cmp
shl
or
inc
xor
mov
adc
sub
jo
push
mov
pop
leave
mov
call
mov
js
adc
push
jne
cmp
mov
mov
int
dec
add
cmp
test
mov
jp
push
insb
cmp
mov
inc
rorb
fnstcw
mov
mov
push
add
scas
xor
in
sahf
fcoml
push
in
inc
sbb
loopne
adc
rolb
xor
adc
movsl
or
dec
add
jp
ljmp
add
add
in
leave
stos
orb
add
shr
pop
inc
loopne
and
sub
add
jnp,pn
add
lods
sub
cmp
pop
call
add
or
sub
push
loop
movsl
aam
add
repnz
push
sbb
add
clc
add
add
push
sbb
dec
adc
test
pop
push
mov
adc
push
sub
rclb
push
fiaddl
mov
pop
push
xchg
add
rcrb
sub
test
lcall
dec
inc
icebp
sub
loopne
pusha
mov
mov
mov
push
add
push
andb
mov
mov
mov
pop
dec
adc
xor
mov
adc
aam
dec
inc
stos
and
cmp
stos
jo
loope
fstpt
inc
test
ljmp
and
sahf
jecxz
add
cmp
push
push
cs
je
push
insb
pop
movzbl
mov
push
adc
clc
jbe
xor
pop
sub
cmp
xor
sbb
push
rolb
push
inc
sbb
push
jle
inc
shll
pop
cmp
and
ss
rorb
dec
cmp
mov
push
rcrb
adc
and
fistpl
adcb
enter
jo
jae
jno
push
push
dec
adc
adc
push
jp
adc
rcrl
das
orb
pop
out
or
or
add
int3
inc
add
xorb
lds
or
or
inc
add
push
lcall
std
push
and
pop
push
and
andb
sbb
in
adc
stc
clc
jecxz
lock
mov
push
daa
decb
mov
bnd
dec
and
mov
sbb
mov
jns
adc
mov
or
push
add
cld
push
mov
mov
stos
inc
sub
and
adc
bound
inc
xor
mov
and
test
and
inc
roll
push
out
pop
leave
rcrb
mov
adc
stc
sbb
dec
stos
out
scas
inc
adc
xor
ret
hlt
inc
add
fucomi
mov
ret
or
adc
fidivrl
sub
ljmp
or
sbb
xchg
adcb
test
sbb
push
popa
andb
jle
adc
jbe
repnz
adc
mov
add
addr16
add
or
rcll
dec
push
lods
sub
sub
lock
fwait
or
pop
mov
enter
push
inc
add
push
pop
ret
popa
jg
inc
mov
inc
sbb
add
jo
jbe
mov
inc
jecxz
bnd
ficoml
roll
int
pusha
push
add
jae
push
into
loopne
push
mov
push
jo
cwtl
jecxz
push
push
push
mov
int
ds
loope
mov
adc
push
pop
leave
inc
nop
ret
xchg
andl
pop
fistpl
add
lret
push
dec
fimuls
cmp
sbb
adc
cmp
fdiv
xchg
mov
jp
adc
adc
dec
imul
mov
adc
adc
pop
pushf
jmp
push
push
cs
push
bound
xor
call
inc
adc
mov
or
sbb
xor
test
adc
inc
hlt
cmp
mov
adc
out
mov
xchg
add
push
inc
out
enter
repnz
inc
cmpsb
jmp
arpl
push
pop
push
xor
cmp
xchg
adc
inc
sbb
js
test
cmp
add
clc
push
not
negb
cltd
cmp
testb
pop
testl
cs
add
mov
xlat
icebp
shlb
lahf
dec
scas
xorb
adc
push
mov
imul
adc
incb
sbb
adc
mov
adc
xorl
dec
jg
and
jp
nop
lret
inc
mov
or
xchg
adc
into
or
loopne
cmp
adcl
fiadds
cwtl
mov
jo
rorb
pop
mov
mov
data16
leave
mov
push
mov
ror
out
xor
insl
cli
sub
pop
and
inc
add
dec
fwait
xor
bound
sub
adc
inc
mov
pop
push
ret
mov
fwait
popa
sub
ret
xor
pop
mov
roll
mov
insb
std
jge
or
xor
sbb
pusha
push
cmpb
out
add
cs
inc
fsubrl
dec
test
cltd
mov
shl
add
jmp
loopne
mov
cmp
lods
scas
mov
xor
xor
mov
or
popa
arpl
sbb
out
sbb
les
js
andl
sti
mov
lcall
mov
mov
addr16
and
mov
add
cld
sub
lea
push
push
add
inc
lds
arpl
push
add
push
ret
imul
cli
push
cmp
adc
fidivl
nop
mov
jo
test
add
adc
xchg
sub
mov
or
insl
daa
push
outsl
repnz
aam
mov
dec
ss
jne
mov
out
fsubs
add
mov
mov
int3
mov
rcrb
lock
sub
xor
inc
mov
cmp
jnp
jnp
sub
xor
hlt
addr16
push
in
leave
sbb
xor
shrb
xlat
pop
dec
dec
mov
sub
popa
ret
jnp
push
add
xchg
pusha
movsl
popf
cmp
dec
mov
mov
fistpll
or
test
nop
or
sub
pop
or
sub
mov
xchg
fildl
mov
add
xlat
cli
sbb
add
ret
rcll
addl
sub
sti
jo
inc
lods
push
jge
sbb
je
int
jnp
adc
outsl
mov
inc
hlt
mov
xchg
sahf
add
mov
mov
or
fsts
es
repnz
or
sub
rcl
push
lea
mov
adc
cli
je
scas
xchg
jnp
lods
sbb
and
mov
int
pop
js
push
push
rorb
pop
fwait
sarb
test
add
or
add
gs
inc
add
into
jge
cli
adc
push
mov
push
lcall
inc
inc
xor
add
and
shll
stos
mov
gs
xlat
adc
ds
mov
ljmp
cmp
jne
adc
sbb
push
xlat
ret
popa
ljmp
mov
dec
cwtl
jae
call
inc
inc
xchg
daa
add
mov
ficoml
adc
mov
add
inc
mov
mov
lods
or
mov
add
lret
mov
jo
mov
mov
rorl
fmull
xchg
ret
push
and
mov
pop
sbb
add
adc
insl
fmuls
ret
popa
or
push
adc
std
dec
sbb
popf
out
imul
sub
jne
add
or
jo
or
adc
pop
and
inc
repz
jmp
or
push
adc
adc
cmpxchg
pop
aad
notb
and
dec
mov
push
push
adc
rolb
stc
stc
adc
push
rcl
xor
dec
push
add
faddp
nop
mov
loop
into
add
rolb
pop
sbb
lock
sbb
int3
inc
sbb
add
or
icebp
rclb
mov
nop
sarb
adc
aas
adc
scas
rclb
test
or
sbb
vcmpps
stc
insb
shrb
add
imul
push
imul
in
mov
mov
and
sub
sbb
adc
pop
loopne
lea
inc
out
inc
xlat
imul
inc
push
mov
addr16
xchg
cmp
inc
inc
pop
pop
jge
jae
push
in
inc
inc
push
inc
inc
add
shll
pop
mov
sbb
out
rcrb
add
push
mulb
lret
sbb
mov
mov
or
add
add
or
push
mov
data16
sahf
aas
xor
rcll
cmp
mov
jbe
lds
add
mov
dec
add
sbb
sub
jnp
push
les
icebp
inc
push
addr16
mov
inc
add
cltd
xchg
push
scas
sbb
inc
cmc
mov
test
fisubrl
or
push
inc
or
imul
rclb
enter
je
pushf
adc
adc
add
vcvttpd2dq
sbbb
sarb
mov
loop
sbb
enter
mov
push
push
sbb
out
add
sub
imul
pop
mov
mov
or
mov
leave
or
push
outsl
lods
sbb
lahf
lret
mov
mov
cmp
inc
inc
aad
sbb
push
out
xchg
add
out
add
push
xor
shlb
jo
xor
add
add
dec
mov
stos
pusha
adc
sub
shrl
stos
enter
imul
mov
jae
cmc
adcb
imul
push
adc
es
push
icebp
fiadds
push
addb
mov
test
orb
add
adc
int
jnp
or
mov
rcrb
pop
in
push
mov
invd
out
jp
sbb
pop
jl
or
and
mov
ljmp
cld
or
cmp
jae
js
or
icebp
pop
leave
push
loopne
jb
fwait
pop
add
js
andl
loope
xorl
stc
or
aam
add
mov
sub
aam
shll
inc
sbb
in
dec
cmp
stos
add
jb
push
fcoml
cmp
push
mov
and
cmp
lret
xchg
add
mov
insb
inc
inc
lods
sti
rol
sbb
fdiv
popf
cs
rclb
mov
pop
inc
sbb
pop
movsl
xor
in
pop
lret
dec
xor
leave
inc
sarb
add
sub
shll
rorb
ss
add
inc
scas
sbb
xor
dec
mov
sbb
loop
push
shll
test
push
fwait
sub
aas
daa
rcrl
mov
push
pop
iret
push
add
push
jb
sub
sbb
lret
loope
fs
cmpsl
stos
into
mov
iret
pop
fiaddl
stos
sub
sbb
push
or
in
lcall
mov
sarb
pop
subl
ficoml
add
pop
mov
adc
jne
jo
dec
add
ret
push
rol
push
int
push
mov
jmp
inc
mov
sub
inc
push
pusha
adc
insb
pop
mov
daa
inc
icebp
imul
add
sbb
call
popf
push
dec
adc
adc
adc
out
sbb
sub
or
pop
shlb
lret
jne
adc
inc
and
xor
adc
adc
xor
cmp
popa
push
push
adc
mov
xor
mov
adc
inc
mov
push
adc
jle
mov
sub
add
sti
sbb
and
jl
rolb
imul
pop
idiv
lock
pop
mov
in
sbb
and
jle
adc
sbb
test
push
enter
test
add
or
pop
shlb
mov
rcl
test
test
inc
or
mov
push
xlat
cmp
stc
shrl
ret
sbb
pop
test
lods
stc
inc
jmp
idivb
mov
adc
lds
add
cli
push
testb
ret
loopne
cmpsl
adc
imul
pop
adc
mov
fcmovnbe
into
jmp
sub
call
outsb
into
cltd
sbb
mov
cmp
bound
sub
enter
add
mov
shlb
inc
adc
andl
xorl
jo
andb
add
push
or
add
inc
inc
call
mov
shr
pop
adc
add
cmp
or
sub
mov
sbb
mov
cli
lock
add
loop
xor
bound
xchg
adc
int
mov
inc
mov
pop
sub
sub
clc
sbb
add
xor
lock
idivb
test
cmpsl
and
lock
lods
icebp
jo
push
add
lods
aad
test
sbb
sbb
outsl
shlb
sub
xlat
addr16
mov
mov
mov
lock
test
dec
rorb
int
js
nop
out
add
cmc
dec
out
addb
inc
push
dec
data16
icebp
mov
mov
dec
clc
mov
pop
jmp
xor
push
jo
dec
loopne
stos
mov
lret
cmp
adc
shll
test
in
jg
mov
lret
subb
lods
ja
sub
leave
xor
xor
push
rcrb
jmp
inc
xchg
call
arpl
cmp
scas
mov
or
aad
pop
movl
push
add
mov
xlat
cltd
sub
adc
add
mov
pop
adc
fs
cmp
mov
call
scas
sbb
std
or
adc
stos
add
and
test
or
or
lret
push
movsb
lds
and
mov
dec
xchg
jmp
xchg
or
add
push
mov
stc
add
adc
cmp
mov
jle
cmp
sbb
add
lcall
insl
stc
mov
push
pop
dec
jb
stos
jge
adc
insl
mov
aas
in
cmp
enter
cpuid
cmp
test
loop
push
sbb
test
bound
dec
pop
scas
imul
add
jb
push
mov
add
sbb
inc
mov
sub
nop
stos
fwait
stos
add
subb
repz
nop
test
xchg
lcall
push
pop
adc
stos
xor
mov
jne
sub
inc
outsb
push
xchg
cmp
mov
or
loopne
aam
xchg
adc
ficoms
inc
add
mov
mov
shlb
add
pop
push
sub
rcrb
xor
ja
sbb
test
or
and
mov
aad
mov
subl
jmp
idivb
push
in
pop
stos
inc
addl
adc
pushw
sub
or
shll
mov
lock
mov
adc
dec
and
push
jnp
mov
jp
add
lahf
add
push
pop
hlt
and
jnp
ret
adc
xchg
enter
add
cwtl
stos
cmp
jb
mov
dec
je
mov
add
repnz
rclb
mov
xchg
stos
sbb
ss
sub
sub
stos
fdiv
or
out
out
add
and
cwtl
sbb
test
push
in
in
in
add
adc
mov
adc
sbb
add
test
sub
cmc
mov
mov
jge
ret
pusha
test
ret
sub
or
test
shlb
out
or
push
xchg
inc
dec
aad
les
cwtl
mov
mov
mov
inc
ret
push
push
sub
cmp
sarl
pop
inc
jnp
mov
ret
mov
out
inc
inc
mov
loope
stc
xchg
stos
mov
cltd
jbe
adc
loop
fstpt
xchg
dec
push
aaa
jmp
loopne
mov
cmp
add
scas
add
scas
lret
into
imulb
pop
adc
sbb
inc
xor
shlb
xchg
jnp
jo
xchg
adc
adc
fst
pushf
sbb
mov
adc
addb
je
ljmp
rolb
or
neg
or
push
adc
sbb
push
push
movb
std
dec
faddp
add
push
in
mov
push
push
cmp
xor
and
int
sub
mov
add
movl
dec
push
sub
fld
add
push
jl
xor
push
or
jle
pusha
enter
push
mov
and
lds
pop
adc
inc
stos
pop
cmp
out
rolb
fbstp
rcrl
in
je
push
fucomp
ret
xchg
stc
or
and
push
xchg
jae
lret
adc
push
inc
mov
shrl
xchg
sahf
add
sub
xchg
xor
subl
add
adc
cli
insl
pop
and
cmc
push
adc
pop
inc
adc
mov
xlat
add
adc
mov
lock
push
int
and
idivl
test
scas
ljmp
shrb
incl
addr16
push
and
aam
xorb
mov
push
cmp
bswap
dec
mov
sub
add
push
in
movsb
jns
ret
add
push
cli
enter
adc
ss
pop
getsec
pop
push
ret
test
mov
inc
scas
adc
xor
scas
inc
xor
adc
mulb
sbb
sbb
pop
loopne
or
shl
mov
sbb
mov
pop
into
push
out
test
mov
inc
adc
adc
inc
cmp
xchg
shrl
daa
scas
xorb
pop
push
test
js
shl
push
ret
jno
cmp
sub
push
inc
mov
mov
mov
out
or
test
test
or
std
loopne
pop
push
add
test
add
jge
mov
pop
inc
mov
push
aam
dec
scas
mov
sbb
sahf
add
ds
sub
ret
mov
adc
xor
mov
test
mov
mov
addr16
push
adc
xchg
jno
xchg
repz
jmp
push
fsubs
mov
sub
inc
xchg
sbb
sbb
or
sbb
test
add
add
adc
fcompl
cmc
sub
inc
shlb
push
sub
int
jmp
and
or
ds
inc
sub
push
scas
sbb
dec
xchg
mov
or
cwtl
pop
xchg
add
jg
add
enter
arpl
adc
mov
or
gs
roll
xlat
movsb
stos
sub
mov
ret
enter
sub
cmpsb
xchg
push
and
jae
jge
mov
xor
adc
ja
xchg
sahf
fcmovu
cmp
sub
inc
fstpt
xor
cmp
jge
andb
repnz
add
sub
mov
pop
outsl
clc
adc
adc
sbbb
push
cmpsl
or
roll
shl
push
inc
out
adc
mov
push
outsl
push
xor
sbb
pop
push
push
adc
jne
mov
cmpsl
add
pop
push
adc
in
dec
cmp
or
sbb
mov
aam
shl
movsb
fwait
sti
enter
add
in
loope
inc
out
push
lods
rolb
push
inc
push
inc
sahf
jb
sbb
xchg
enter
push
mov
roll
lcall
jo
mov
inc
cmp
lock
rcll
jo
dec
rcrl
ret
rcll
ret
add
mov
sbb
loop
dec
lods
add
pop
ret
or
into
aam
push
add
cmpl
pop
sarb
into
add
int3
or
sub
sbb
roll
cmp
push
sbb
sbb
jp
sub
fs
ret
and
adc
ret
inc
jmp
xchg
sub
push
cli
sub
mov
add
notb
psubw
push
out
shll
enter
ja
sub
int
sub
ljmp
insl
xchg
xchg
mov
cmp
ret
imull
aad
xchg
or
push
scas
cmp
jge
je
lea
fisttps
add
js
and
mov
push
jmp
sub
clc
add
jge
mov
or
mov
cld
sbb
sahf
call
cltd
popa
enter
xor
loopne
cvtps2pi
popf
sbb
lahf
sbb
or
insl
fdivrl
pop
sbb
leave
fsubl
cli
add
icebp
mov
adc
xchg
shll
mov
stc
addr16
adc
sbb
es
and
push
lcall
mov
sbb
inc
test
shll
xchg
xlat
mov
add
xor
loope
add
in
enter
fwait
divl
xchg
sbb
popf
fwait
mov
fcom
and
mov
pop
pop
popa
mov
jno
push
in
mov
push
mov
and
lret
movsb
lcall
mov
test
faddl
or
xchg
mov
or
add
hlt
mov
cltd
pop
inc
sbb
add
cmp
dec
cmp
cli
pinsrw
loopne
cltd
mov
inc
xchg
call
sbb
mov
cmpb
sub
add
lret
popa
jecxz
call
xchg
daa
jge
inc
stos
cld
mov
stos
add
inc
stos
fisubl
add
push
shrl
jp
xor
dec
leave
cwtl
add
push
ss
shll
xchg
repnz
push
imul
pop
popa
dec
je
stc
cltd
setae
push
or
mov
push
scas
inc
imul
pop
addr16
adc
xor
mov
add
inc
mov
popa
sbb
inc
mov
mov
jmp
pop
ret
hlt
into
out
xchg
push
add
orl
jns
rolb
fstp
pop
leave
pop
push
cltd
cmp
mov
rclb
xchg
stos
enter
ja
sbb
outsl
dec
aad
mov
pop
xor
dec
fimull
cmp
out
add
push
and
test
pushf
push
and
dec
mov
and
leave
and
xchg
dec
adc
sbb
pop
test
mov
hlt
adc
mull
adcb
subb
js
call
jmp
jo
mov
add
mov
push
push
sub
repnz
into
dec
pop
push
mov
adc
mov
sbb
pop
and
cmp
aam
xchg
adcb
and
bnd
push
int
xlat
ret
add
ret
loop
ds
clc
or
sbb
adc
push
jmp
pusha
add
cmp
push
xor
imul
push
or
stos
dec
lods
push
aas
mov
sub
or
mov
stc
lret
mov
pop
mov
add
test
or
add
rdtsc
jb
xor
les
and
sub
mov
mov
fs
add
je
inc
sub
jno
in
loopne
add
inc
ret
xor
xchg
adc
mul
sbb
and
outsb
pop
js
xorl
sbb
sub
mov
xchg
scas
add
dec
add
leave
orb
mov
mov
enter
sbb
lcall
and
add
imul
lds
sbb
mov
in
inc
and
sbb
aas
xor
jns
sahf
js
rorl
adc
jp
shll
mov
jmp
add
sbb
les
subl
inc
out
iret
test
js
mov
inc
movsl
xchg
or
jb
add
rorb
popf
cmpsl
icebp
push
sub
sbb
mov
fisttpl
out
mov
mov
addl
or
pop
xor
sbb
lret
push
xor
mov
mov
pusha
outsb
mov
and
rcll
jge
aaa
mov
xorl
int3
clc
adc
push
cwtl
mov
popf
or
adc
mov
pop
sub
mov
sub
mov
pop
pop
dec
xchg
mov
sub
insb
xorb
cmp
int3
add
pop
push
addr16
xchg
adc
sub
popf
or
js
and
cltd
lcall
sub
test
out
lret
aam
mov
dec
ret
movsb
pop
jecxz
outsb
sti
test
adc
push
ds
xchg
mov
repnz
out
adc
and
adc
push
popa
divps
sbb
push
rolb
or
xchg
add
pop
cwtl
subl
push
mov
sbb
sbb
rclb
xchg
dec
icebp
xorl
ret
and
cmc
test
lds
sbb
gs
or
pushf
push
xor
flds
cmp
daa
xchg
pop
movsl
dec
fadds
cmpsb
aas
test
sbb
jge
adc
invd
mov
and
adc
scas
cmp
pop
add
sub
enter
adc
shrb
rcl
and
rorb
or
or
cltd
addr16
ret
or
addb
inc
jmp
dec
push
clc
add
push
pop
faddl
push
or
outsb
jo
lock
mov
add
or
dec
push
mov
inc
aaa
subl
sub
xchg
mov
stos
mov
enter
push
call
xchg
mov
push
push
aam
cmpsb
push
loopne
in
dec
into
mov
sub
nop
push
push
lret
mov
movsl
mov
popf
stos
loope
push
stos
jae
mov
mov
jne
xchg
leave
test
iret
or
ret
outsl
arpl
out
sbb
je
jo
add
adc
addb
test
lea
push
into
ret
in
sub
movsbl
push
cmp
jle
sbb
xor
push
test
ss
or
pushl
adc
fdivr
mov
or
ret
or
dec
add
inc
xchg
sub
dec
xor
jne
repnz
mov
stos
push
data16
lahf
leave
in
or
push
inc
rorl
push
ret
shll
xacquire
sahf
in
lcall
aad
push
cwtl
inc
xchg
push
sub
and
loope
pop
and
mov
jecxz
pop
push
and
pop
xor
adc
subb
push
lods
sub
adc
cmp
mov
mov
dec
add
inc
xchg
adc
and
clc
rorl
cmc
and
jne
add
or
xor
into
pop
lds
inc
cs
nop
and
mov
adc
xchg
sub
xor
xor
fwait
mov
xor
push
pop
lds
mov
ret
adc
sahf
adc
ret
adc
bnd
or
shr
add
lret
and
sbb
adc
or
xor
or
fcmove
sahf
roll
mov
std
pop
js
xor
push
popf
inc
cmp
test
repz
sbbb
push
or
or
dec
add
ror
cltd
and
and
aam
dec
push
inc
mov
mov
ror
repnz
pop
push
int
adc
push
jp
mov
nop
xor
test
mov
ret
and
sbb
push
xor
adc
lret
mov
ror
or
xor
subl
jmp
adc
jle
fwait
clc
loop
ret
shlb
clc
xor
pop
push
mov
inc
roll
sbb
sbb
clc
and
push
push
xor
mov
inc
pop
inc
movsb
sub
in
stos
and
data16
mov
fadd
sahf
xor
int
icebp
in
test
sbb
cmp
or
cmp
mov
push
inc
mov
pop
test
pop
add
aam
and
repnz
xchg
and
push
sbb
or
cmp
rcll
je
inc
jno
dec
fistpll
test
mov
pop
lock
push
dec
mov
add
pop
add
xchg
loop
add
or
stos
stos
xor
add
dec
push
push
outsl
adc
add
mov
jnp
into
roll
mov
cmc
dec
scas
pop
inc
test
or
lock
test
aas
push
pusha
inc
rorb
add
adc
rcrb
adc
sub
pop
mov
adc
push
xor
pop
test
xchg
and
cltd
jae
shll
div
push
cmpsl
xor
cmp
mov
sbb
addb
sub
jne
scas
push
leave
mov
xor
icebp
or
sbb
jo
mov
lock
push
jb
add
and
adc
sub
inc
mov
pop
pop
jl
lcall
ffree
ret
loope
jp
sbb
stos
push
mov
mov
pop
pop
pop
push
test
notb
sbb
xchg
and
les
es
stos
mov
inc
es
cs
out
xor
divl
add
cmp
test
or
popa
jb
aad
sarb
aam
mov
sbb
in
adc
push
adc
js
pop
and
pop
orl
add
and
lret
jae
sets
adc
rorb
pop
adc
stc
mov
push
es
lock
or
mov
fdivrl
popa
pop
mov
insl
add
push
mov
and
cmp
and
push
mov
ret
jns
addr16
test
fld
push
scas
dec
rolb
xchg
inc
adc
sub
mov
sbb
sahf
lods
push
rcl
sahf
jnp
adc
sbb
or
push
and
push
sbb
or
mov
add
ds
nop
mov
mov
and
das
or
subb
nop
leave
nop
std
mov
cmpb
lea
jp
les
push
add
xor
scas
inc
push
adc
mov
add
call
mov
test
repnz
adc
sub
push
mov
push
mov
pmaddwd
add
and
sar
call
jp
daa
pop
and
mov
ss
fs
into
mov
dec
je
ret
les
push
hlt
jge
and
pop
inc
push
cmpsl
mov
mov
cwtl
aad
mov
shll
cmp
stos
add
aam
inc
mov
shlb
or
test
add
je
mov
or
test
inc
push
add
xor
push
fmul
inc
sub
rclb
adc
push
jb
cmp
push
test
pop
jge
adc
xchg
and
loopne
test
mov
mov
rol
sbb
call
or
sarb
mov
cmp
icebp
das
test
imul
out
inc
mov
or
sbb
rcrb
bound
mov
cmc
inc
cmp
xchg
adc
sbb
xor
stc
add
jbe
inc
xor
cmp
cwtl
imulb
lcall
sub
out
and
loopne
rclb
cmc
sahf
dec
jnp
push
or
sbb
mov
pop
jge
mov
jg
ret
push
add
pop
lea
push
mov
mov
mov
mov
stos
rcrb
inc
mov
inc
sub
xchg
sahf
call
add
and
imul
adc
and
out
ds
or
mov
jg
mov
shll
ret
add
sub
pop
adc
pop
ret
call
and
jl
lret
sbb
mov
sbb
xor
fdecstp
sbb
mov
push
shll
daa
adc
sbb
xor
cmpsb
loopne
mov
push
add
mov
mov
sbb
mov
sbb
push
inc
cmp
adc
adc
cltd
iret
hlt
ljmp
adc
push
dec
inc
sub
inc
jle
ss
mov
lret
pop
loope
int3
or
popa
push
push
cli
test
lock
rclb
push
add
sbb
cmp
add
loope
mov
addl
hlt
pop
roll
or
idivb
adc
and
add
jb
pop
pushf
jl
inc
xor
test
test
jmp
lock
adc
call
adc
subb
clc
pop
out
push
mov
sbb
add
inc
into
lret
mov
or
aad
adc
sub
xchg
enter
cmpb
mov
pop
push
int3
push
xchg
inc
sbb
pusha
adc
adc
in
lret
or
js
jae
lcall
dec
or
sub
add
inc
cmpsb
adc
jp
hlt
pop
jecxz
mov
dec
shl
loopne
and
sahf
mov
clc
fdivrl
xchg
add
int3
or
lods
popa
or
inc
jne
loop
into
insb
xor
stos
mov
daa
push
fdivr
out
mov
scas
jo
mov
push
mov
daa
fisttps
jb
xor
stos
dec
mov
wbinvd
je
sub
adc
ljmp
out
push
es
add
imul
or
fstpt
push
mov
lods
je
sub
and
adc
sbb
push
das
push
call
stos
popl
push
mov
pop
shr
adc
call
or
mov
adc
adc
mov
cmp
xchg
ret
add
xchg
std
mov
push
cmp
mov
jne
push
dec
or
rcl
inc
inc
clc
xlat
sbb
clc
mov
add
sub
cs
push
and
push
push
and
mov
mov
adc
or
bound
sbb
sub
pop
scas
loop
fcmovu
mov
imul
or
xchg
mov
xchg
lds
dec
lret
xor
cwtl
sahf
push
jmp
add
push
test
pushf
jb
or
in
bound
cmc
jge
xchg
sub
pop
xor
or
push
jno
xchg
push
mov
loopne,pn
dec
sub
out
adc
sti
ss
and
ss
and
xchg
and
cltd
js
rclb
jmp
inc
das
cwtl
dec
rclb
lahf
stos
outsl
or
push
push
stos
adc
or
lret
dec
push
out
jnp
loop
imull
in
mov
push
jb
sbb
add
stos
xor
and
push
setge
faddp
imul
push
cmp
add
fiaddl
sub
and
xchg
repnz
cli
add
ret
test
adc
lods
xor
mov
cmp
xchg
or
ret
cwtl
mov
mov
cli
add
mov
or
push
lods
xchg
or
and
add
fistpll
stos
pop
movsl
call
and
addb
sbb
movsl
push
pop
sbb
mov
pop
out
or
mov
adc
inc
nop
xchg
icebp
dec
mov
sub
xchg
push
mov
or
pop
loopne
inc
xchg
sti
into
leave
adc
adc
mov
dec
mov
mov
cmp
fnstsw
mov
test
adc
scas
mulb
sbb
xchg
ret
add
mov
jnp
sbb
orb
scas
sbb
loopne
sub
xchg
mov
in
jno
mov
add
mov
or
outsl
push
push
pop
hlt
dec
mov
jb
mov
enter
andb
inc
call
xor
mov
adc
push
or
shl
pop
cmpsl
rcr
mov
loope
stc
jo
pusha
ret
xchg
inc
mov
sub
nop
lret
adc
orl
repnz
adc
lahf
ljmp
cmp
rorb
push
jmp
dec
test
mov
xor
add
dec
sub
sub
or
arpl
mov
loope
test
add
add
aam
push
cwtl
addb
test
or
addr16
ret
pop
add
push
outsl
sub
fldcw
daa
sbb
add
or
pop
mov
or
aaa
es
push
and
cmc
jno
mov
lea
sbb
test
inc
mov
int
jmp
lock
sub
xor
subl
sarb
push
fs
inc
push
shlb
pop
sti
pop
add
aas
imul
rol
mov
mov
pop
or
dec
rcll
push
aad
add
adc
push
pop
sub
xor
test
ret
jge
fwait
pusha
mov
push
sub
sbb
jl
into
or
adc
stos
nop
dec
cli
mov
add
ss
xor
cmp
notb
xor
mov
cltd
lret
sti
or
pop
xchg
loopne
mov
rorl
mov
mov
loopne
pushf
inc
push
jo
mov
sub
pop
inc
xor
push
lret
ret
dec
add
sbb
xchg
sbb
pop
loopne
mov
pop
cmp
or
ljmp
andl
pop
add
inc
cmpsb
mov
mov
add
push
push
mov
adc
lret
inc
add
inc
nop
cmp
sub
lock
sahf
push
pop
cmpb
das
testb
lret
add
es
into
vandps
push
cmp
popa
cmpsl
rclb
sbb
jle
sbb
push
push
sahf
test
sub
adc
sub
xor
or
inc
add
or
daa
ret
pop
fsubp
xor
push
pop
add
pop
pop
push
cmp
rolb
inc
push
cmp
aad
mov
in
sbb
inc
mov
fcompl
mov
or
push
js
test
or
call
in
orb
inc
test
inc
lret
inc
push
mov
gs
dec
add
js
push
insb
lods
add
clc
fisubrl
scas
mov
roll
cmp
into
inc
and
xor
pusha
jge
jnp
push
sub
push
mov
mov
sbbl
enter
cmp
clc
sbb
dec
cmp
inc
push
imul
mov
sar
inc
call
xor
es
fcmovnb
xchg
or
outsb
xchg
ljmp
add
ljmp
or
imul
andl
rcrb
or
push
stos
push
ljmp
inc
shl
inc
sbb
stos
das
orb
push
mov
sbb
push
or
add
jb
sbb
inc
mov
cmc
or
jmp
sbb
mov
aaa
xor
xor
bound
div
ja
mov
adc
movb
push
push
mov
sarb
adc
cmp
leave
and
mov
jne
inc
imul
xchg
orl
sbb
imul
sbb
shr
jns
cmp
test
xchg
adc
push
sbb
pop
jne
notb
adc
jo
mov
xchg
icebp
xlat
cmpsb
rclb
or
lock
push
push
out
test
jl
inc
inc
mov
or
imul
sbb
lock
adc
mov
xor
lea
ret
fistps
push
inc
je
sub
mov
jge
inc
shll
test
inc
int3
adc
push
add
mov
push
push
jb
adc
js
fs
mov
aam
movsl
add
testb
push
xor
pusha
ds
dec
inc
icebp
and
adc
adc
and
inc
shlb
xchg
imull
inc
sbb
test
xchg
inc
xor
sti
lret
push
pop
pop
mov
subb
push
jl
sbb
adc
shrl
hlt
aad
inc
enter
or
sbb
mov
jo
test
cmp
sbb
cmp
in
lods
add
push
ljmp
shr
cmp
and
jg
push
cmp
jo
shl
add
cmp
test
pop
mov
sub
into
xor
loop,pt
push
mov
lcall
push
sbb
sarb
in
sub
mov
xor
into
popa
mov
test
into
scas
lds
mov
mov
and
xchg
push
loopne
js
ljmp
mov
mov
inc
and
cmp
adc
mov
add
in
enter
sbbl
jp
pusha
sub
and
push
or
shrl
mov
pusha
pop
adc
adc
xor
push
mov
sub
jne
test
rorb
sbb
inc
pop
push
cltd
cwtl
fadd
mov
cmp
push
xchg
cmovne
sub
or
out
daa
stos
jo
js
out
test
add
xchg
pop
dec
sub
enter
enter
sub
xlat
sub
out
fdivrl
cmpsl
in
push
sbb
hlt
aam
icebp
rorl
mov
lret
mov
stos
lret
addr16
dec
jns
xchg
add
or
ret
fidivl
and
adc
jo
cwtl
lret
ret
lods
fsubs
out
xchg
sub
popf
add
scas
and
cltd
cmp
sub
adc
rorb
arpl
jo
push
mov
jbe
mov
add
into
adc
out
test
bound
push
push
fildl
mov
adc
add
or
or
sbb
push
cmp
push
addb
aas
fcmovnb
cmp
xchg
pop
xchg
mov
aam
dec
xor
mov
cmp
or
repnz
adc
mov
and
repz
test
cltd
repnz
loopne
xchg
or
cmp
inc
push
push
pop
push
xchg
inc
les
rclb
shrb
leave
jmp
cmp
mov
dec
mov
enter
xchg
cmc
xchg
sbb
inc
or
or
adcl
add
es
cmp
iret
ljmp
repnz
inc
xchg
jo
mov
rcll
sub
jecxz
mov
sarb
cmp
adc
test
sub
push
jle
andl
aad
sub
sub
cs
push
rorl
adc
push
jb
add
push
loope
fs
sbb
xchg
push
push
jae
pushl
mov
stos
or
dec
cmp
mov
imul
xor
pop
dec
mov
lods
mov
stos
roll
dec
push
popa
sbb
mov
sub
lds
test
sbb
xchg
ret
push
loop
or
arpl
jle
or
inc
and
add
pusha
lret
popa
mov
adc
in
push
and
add
dec
pop
push
push
fs
add
sbb
jle
xchg
arpl
cmpl
in
decl
sti
divb
rclb
bound
push
icebp
in
rcrl
es
shrb
mov
jne
sub
je
cs
xchg
ss
js
push
es
lahf
adc
or
fldl
xchg
andl
jp
imul
add
inc
and
imul
cmpsb
rolb
or
sbb
aam
pop
in
imul
pop
loopne
or
inc
adc
push
jne
shlb
out
and
and
mov
and
popa
add
adc
mov
cmpsb
push
fs
aam
add
scas
fdivl
add
or
xlat
addb
adc
jne
xlat
roll
test
inc
or
mov
fdivl
cwtl
mov
push
and
jno
jge
mov
or
cmpsl
add
mov
les
mov
adc
or
jae
cmpsb
inc
mov
jo
inc
scas
sbb
insl
imul
or
push
inc
insl
add
rcrb
pop
xchg
sub
sub
ljmp
adc
stos
adc
sbb
sti
lock
test
inc
add
rclb
push
test
dec
js
push
add
adc
pop
or
pop
aam
add
add
push
or
inc
pop
loope
fucom
out
leave
push
xchg
mov
mov
aad
or
fs
push
add
ret
mov
push
sub
orl
scas
or
pop
inc
loopne
in
rclb
dec
rclb
or
popa
aam
push
scas
and
push
inc
add
pop
inc
lcall
push
rorl
inc
pop
xchg
adc
push
jnp
push
cmp
fistps
jne
cli
sub
repz
jl
mov
test
stos
lock
imul
xor
pop
out
fadds
dec
cmpsl
sub
adc
movsb
add
mov
in
add
mov
dec
xchg
enter
imul
xchg
cltd
or
mov
rorb
mov
rorl
data16
aam
push
push
sub
and
and
xchg
mov
mov
adc
push
mov
int
adc
or
test
sub
or
inc
or
int
mov
xchg
int
loopne
scas
inc
mov
push
rcll
nop
cmp
inc
mov
add
sti
add
jmp
aam
push
je
adc
sub
mov
repnz
or
enter
out
mov
mov
and
mov
xor
pushf
mov
pop
mov
clc
sub
adc
inc
push
cltd
push
xor
ja
mov
sbb
add
hlt
mov
fadds
js
lods
pop
inc
loopne
leave
pop
push
mov
pop
rolb
push
add
cmp
pop
cwtl
sub
or
dec
xor
orb
insb
stos
adc
add
out
xadd
fsubs
pop
dec
add
adcb
jb
cmp
push
stc
cmp
insb
lods
xor
mov
inc
nopl
cli
adc
push
or
mov
das
xlat
sub
push
shlb
or
insl
ret
stos
clc
push
sbb
cld
add
cltd
lock
inc
add
adc
sub
ret
fstps
sbb
or
inc
sub
std
ret
and
mov
adc
pop
es
mov
mov
dec
mov
test
dec
mov
xor
sarl
jb
push
mov
add
adc
add
mov
repnz
adc
out
sub
leave
push
test
popf
and
popf
shrb
add
mov
adc
out
sbb
adc
jp
cmpsb
loope
inc
cmpsb
aas
cmc
mov
sbb
pop
sub
daa
in
jbe
jbe
mov
sbb
add
jl
pop
insl
shll
adc
xor
inc
and
cltd
dec
push
mov
loop
push
push
dec
adc
sbb
or
inc
jl
or
and
loop
add
jp
xorb
rol
or
ret
xchg
pop
les
pop
loope
ja
mov
fdivrs
push
pop
jecxz
adc
mov
and
mov
push
xor
add
lcall
push
ret
and
sbb
enter
in
add
xor
pop
jg
jno
icebp
dec
xchg
je
mov
push
add
sarb
or
roll
stos
jb
mov
sbb
xchg
mov
adc
loop
mov
mov
jb
adc
and
inc
push
adc
mov
into
add
push
lods
pop
jo
mov
or
insl
aaa
push
mov
sbb
add
hlt
stos
mov
rcrl
aaa
inc
pop
mov
or
add
pop
shll
push
adc
orl
and
add
ja
out
inc
jmp
mov
shrl
inc
xchg
and
pop
xor
fwait
cmc
mov
add
push
or
sbb
xor
jnp
sbb
push
push
js
stos
out
dec
push
in
out
mov
mov
inc
test
sub
aas
ret
jb
mov
or
mov
mov
xchg
shl
ret
adc
inc
cs
imul
inc
pushf
std
xchg
mov
bswap
adcb
lahf
pop
fisubrl
mov
aam
push
sti
loopne
into
add
sub
push
adc
inc
or
mov
and
insb
xchg
or
jmp
xchg
ljmp
stos
cmp
scas
adc
inc
pusha
push
and
push
cmp
and
mov
out
jb
xor
sbb
enter
andl
push
or
stos
cli
xor
mov
pop
add
and
in
clc
add
mov
call
and
cmp
sub
adc
xchg
adc
push
icebp
cmp
xor
jmp
sbb
jnp
adc
push
outsb
push
test
xorl
inc
add
movb
jo
repz
mov
or
or
sbb
inc
and
xlat
roll
mov
push
and
ljmp
test
dec
adc
mov
push
adc
insb
and
das
loopne
fiadds
adc
repnz
jno
andb
add
or
xor
loop
rclb
fdivrl
sub
dec
lret
hlt
mov
mov
dec
movb
shr
xchg
sub
add
jecxz
xchg
and
cs
add
inc
cmpsl
mov
es
and
in
mov
pop
mov
lock
xchg
mov
pop
push
test
mov
jns
sbb
push
cmp
sbb
test
in
cmpsb
add
mov
into
add
out
push
imul
cmpsl
xchg
sub
push
jge
aad
and
test
inc
sbb
loope
mov
mov
ljmp
pop
xchg
and
adc
adc
push
pop
mov
xor
jo
push
pop
add
lahf
or
push
scas
mov
xchg
arpl
fiadds
nop
push
les
push
add
xchg
loope
inc
jbe
mov
jb
in
fstp
xlat
adc
loopne
ret
leave
push
push
or
and
xlat
push
or
lea
xor
fs
sub
cmp
push
adc
jo
pop
pop
es
or
sub
sub
testl
shrb
pushf
hlt
leave
enter
sub
cmp
push
addr16
mov
add
mov
fdiv
in
loope
pop
and
imul
push
adcl
adc
std
or
xchg
leave
fisttpll
repnz
js
lcall
dec
rclb
xor
cmpsb
push
cmp
adc
repnz
sbb
xchg
mov
xorl
jmp
pop
push
in
enter
dec
adc
jge
mov
and
nop
stos
add
jmp
orb
lock
call
dec
inc
or
mov
mov
and
pushf
adcl
xchg
sub
out
inc
outsb
sbb
pop
jmp
jb
out
xchg
scas
sbb
or
sbbb
rcr
push
mov
mov
add
cwtl
add
les
imul
cs
insb
and
roll
xchg
sub
sub
xchg
es
push
cmp
or
adcb
pop
pop
scas
call
lock
popa
push
or
push
sti
das
out
sbb
stos
rcl
and
or
cmp
pop
outsl
mov
and
loope
scas
and
les
or
add
add
mov
xchg
sub
and
adc
dec
stos
push
mov
leave
aas
dec
jg
mov
ljmp
xor
jmp
pop
lret
mov
push
push
mov
call
std
sbb
rorb
mov
fsubrl
mov
cmpsl
lret
shr
aas
add
adc
lret
shlb
jbe
sti
or
pop
add
xor
mov
jne
or
inc
pop
les
pop
sbb
adc
fstpt
mov
or
sbb
sar
ljmp
testb
or
mov
testb
je
movzwl
jmp
imulb
add
pop
sbb
and
and
push
jne
push
ds
mov
or
sti
or
or
pop
pop
ret
mov
jne
push
jbe
jnp
push
cmpl
or
and
or
adc
push
push
das
and
mov
inc
and
mov
add
mov
adc
or
push
add
ficompl
jns
add
ret
push
add
subb
in
adc
add
mov
mov
adc
cmp
jne
sbb
std
or
jl
add
pop
and
mov
call
repz
adc
mov
jno
int3
pop
adc
je
xchg
cmp
cltd
sbb
jns
push
jmp
out
out
pop
je
or
in
repnz
dec
aad
ficoml
lea
out
mulb
push
mov
enter
movb
movsl
popl
ret
jo
push
sbb
inc
ret
pushl
or
or
pop
je
inc
ret
pop
or
pop
or
outsb
push
add
sbb
sub
fdivl
loop
dec
push
int
mov
js
add
lret
xor
icebp
jnp
shl
push
aam
push
xchg
jge
lea
dec
shll
push
or
and
cmp
and
cmp
jl
mov
imulb
pop
jle
cmp
movl
dec
jmp
cmp
cmp
inc
test
cmp
cmp
cs
popl
push
cmp
jbe
push
jge
pop
iret
rcrl
js
pop
jmp
call
test
jg
mov
or
jmp
addr16
pop
leave
inc
sbb
insb
mov
push
popa
cmp
sbb
mov
lea
add
inc
jae
cmp
jne
out
adc
mov
push
pop
or
mov
pop
or
sbb
cmp
cmp
jne
mov
inc
add
je
test
dec
movzbl
das
outsl
fcmovnu
shlb
je
inc
jmp
cmpb
or
shlb
in
jbe
inc
or
ja
xor
add
jmp
or
xor
cmp
jmp
cmp
je
cmp
je
inc
scas
jg
pxor
or
lea
add
add
pop
fists
pop
cmp
mov
int3
sbb
mov
iret
std
cmp
cmp
cmp
negb
cmpb
and
cmp
das
push
cs
jle
push
pushl
js
pop
bound
std
aaa
jne
lock
push
cmp
sbb
js
mov
add
pop
mov
fucomip
lret
sub
push
pop
jle
imul
mov
cmp
dec
mov
fcmovu
mov
mov
push
add
push
push
push
lahf
push
pop
mov
sub
cld
fmuls
popa
xchg
scas
mov
outsb
xchg
and
push
push
xor
pop
les
lock
hlt
shl
dec
sbb
fdivrl
andl
jne
jecxz
or
movsl
push
test
sbb
ret
sti
aaa
add
mov
cmp
inc
cmp
aaa
mov
shlb
testb
xor
std
test
jo
adc
aad
into
outsb
out
or
andb
inc
inc
sbb
inc
push
add
add
inc
sbbl
fdivr
sbb
je
or
or
mov
add
dec
jmpw
xor
lcall
xor
add
pop
enter
scas
std
mov
incl
rcl
test
pop
jne
inc
jo
icebp
out
inc
jmp
xchg
sub
ret
add
mov
cmpb
jecxz
jmp
jecxz
or
sbb
notb
xchg
ret
shr
mov
dec
test
fdivrp
mov
push
pop
inc
mov
jne
andb
jl
lock
add
out
je
sub
loop
pop
int
or
sbb
inc
add
scas
inc
je
inc
xor
push
adc
sbb
jb
cs
mov
pop
push
out
push
dec
and
sub
xor
ffree
popa
or
aad
repz
xor
out
jnp
hlt
jmp
pop
inc
int3
cltd
pop
mov
ljmp
pop
adc
dec
lret
data16
jne
or
daa
ret
push
jae
not
pop
jmp
or
jne
push
push
sub
das
inc
cmp
clc
mov
test
add
xor
cmp
je
xor
je
sbb
push
xor
and
and
aam
adc
pop
or
dec
inc
cmp
jne
movsl
test
je
pusha
mov
je
and
dec
mov
sti
add
sub
sbb
push
into
stos
rorl
sti
jmp
mov
ss
lds
xor
jmp
pop
pop
insl
mov
cwtl
dec
in
dec
push
jae
cmp
xor
ss
lock
pop
sbb
and
lock
jae
outsl
add
mov
data16
movb
mov
pop
or
and
mov
pop
add
cmp
in
das
pop
cli
mov
cmp
mov
add
fimuls
jbe
clc
jl
pop
addr16
mov
dec
add
push
cmp
andl
mov
pusha
or
pop
lcall
roll
xchg
mov
push
mov
add
jle
lock
sub
pop
pop
inc
lcall
push
movsl
test
push
and
rorl
pop
or
shll
push
fiadds
mov
inc
add
inc
push
mov
mov
pop
and
cmpl
lea
lods
push
loop
jne
ss
das
enter
cli
in
negb
xchg
ret
dec
neg
sbb
or
jge
cmp
pop
push
jo
and
ret
ds
orb
xchg
fcomp
mov
or
add
addb
jl
fiaddl
dec
pop
test
fadds
pop
xor
mov
dec
cmp
cmc
and
data16
mov
cmp
outsl
pop
adc
adc
sbb
dec
adc
or
fcompl
xor
inc
shrb
lea
mov
in
mov
ficompl
adc
data16
rorb
or
and
mov
insb
es
push
pop
adc
xchg
mov
jge
add
xor
fcoml
mov
scas
mov
xlat
mov
ss
and
punpcklwd
push
ret
int3
int3
mov
sbb
iret
xor
pop
mov
sbb
mov
pop
xlat
dec
testl
xchg
into
je
jmp
out
popf
sti
stos
add
ret
adc
push
push
inc
mov
data16
aad
adc
cmp
lea
in
jbe
mov
dec
push
mov
pop
jl
jne
adc
jp
std
fldt
call
ret
popl
orl
add
das
mov
push
push
or
push
xchg
push
mov
inc
or
or
fcmovnbe
or
dec
add
pop
mov
ret
push
inc
xor
pop
inc
xor
push
outsb
mov
popf
pop
or
adc
in
adcb
subl
and
fnclex
mov
xchg
jbe
popl
inc
push
push
lea
test
pop
pop
inc
or
xor
and
add
push
or
sub
outsl
fimuls
mov
push
or
or
sbb
pop
mov
jmp
leave
jmp
pop
fldcw
mov
aas
pop
push
xchg
mov
cmp
push
add
push
and
xor
jo
mov
orl
repnz
jge
aam
int3
in
call
ss
loope
adc
insb
clc
xchg
mov
or
inc
inc
push
mov
icebp
je
ja
test
mov
xchg
sbb
addr16
mov
call
dec
or
jne
les
xlat
icebp
std
test
cwtl
add
mov
xor
pop
mov
add
sbb
pop
inc
inc
pop
gs
sub
popf
sbb
clc
or
pop
mov
add
inc
loopne
cltd
sub
jb
xor
inc
adc
or
sbb
pop
sti
insb
shll
adc
and
jae
sub
adc
mov
mov
imul
mov
xor
or
cmpsl
jg
cli
xchg
jmp
pop
addr16
inc
jl
orl
sbb
pop
in
mov
sbb
sub
loopne
mov
cmp
imul
push
fisubs
adc
mov
jmp
scas
cmpl
or
outsb
dec
mov
stos
push
rcrl
sbb
xorb
sbb
test
repz
push
mov
lds
les
inc
jne
mov
jno
movzwl
bound
mov
ds
fwait
xchg
inc
sbb
xchg
cmp
cmp
icebp
sbb
mov
inc
xchg
push
mov
pop
pop
jne
jmp
mov
fimuls
push
push
ss
fistps
js
sbb
inc
push
push
push
call
pop
cmp
popa
fistpl
fwait
and
andl
xchg
fdiv
fdivrs
rep
stos
mov
xchg
pop
cmpb
test
je
mov
cmp
pop
or
jbe
inc
decl
jne
jnp
shlb
out
jmp
jae
dec
lea
add
cli
sbb
sahf
xchg
pop
cmp
lret
je
mov
shrb
add
xchg
ja
adc
cld
mov
inc
inc
adc
inc
inc
cmpb
push
sarb
jge
daa
or
fnstenv
fs
int3
lods
fisttpll
movsb
adc
cmp
push
jl
push
shll
movsl
pop
mov
inc
jns
jno
aas
jge
shlb
or
xchg
jb
push
fcompl
bound
sub
jmp
mov
pop
add
push
loope
or
jo
pusha
xchg
outsl
add
insb
idivb
xchg
mov
xchg
or
jnp
xor
inc
sub
dec
cmp
cmpsb
fistl
mov
mov
adc
push
mov
cld
shlb
adc
dec
fstps
push
push
mov
xchg
lock
or
adc
jge
sbbb
rcrb
int3
pop
cmp
mov
iret
pop
xchg
sub
adc
push
push
aas
sarb
shl
xor
mov
jb
mov
movb
sub
push
repz
pop
and
sub
push
and
mov
shr
test
std
imulb
lock
inc
inc
mov
xor
rcrb
push
negb
ss
cli
mov
dec
mov
push
mov
xchg
jge
std
sbb
scas
xchg
mov
and
cld
dec
outsb
dec
lret
or
daa
jb
lret
aas
arpl
adc
ret
add
mov
mov
je
mov
out
pushf
and
mov
jecxz
inc
inc
add
mov
insb
fiaddl
aaa
pop
mov
lret
fcmovnu
aas
enter
mov
jb
jp
mov
and
and
dec
addl
dec
mov
push
sbb
pop
pop
inc
mov
dec
cmp
mov
mov
adc
or
sbb
push
sub
pop
imul
pop
push
imul
insb
mov
aas
mov
jmp
lea
mull
pop
roll
mov
inc
sarl
push
jne
mov
add
xor
jle
sub
test
call
test
je
fsubp
pop
xchg
add
int
sub
jmp
add
jmp
std
jmp
cld
aaa
insl
or
sbb
inc
ljmp
mov
out
jmp
mov
jecxz
xchg
adc
mov
pop
jbe
xor
add
test
jno
lea
cmp
dec
push
js
inc
icebp
or
mov
add
adc
cwtl
xchg
jmp
cltd
jl
loopne
and
add
cmp
aam
adc
popa
jp
das
ret
fiaddl
loope
inc
push
jo
ja
test
or
mov
sbb
cmp
add
adc
xchg
inc
out
test
pop
leave
and
xchg
adc
inc
push
pop
jb
pop
xor
inc
leave
and
and
sub
ret
or
std
not
or
cld
jle
push
aad
push
enter
shlb
sarl
mov
jbe
clc
jb
jbe
test
loop
sbb
pop
sub
rep
jmp
mov
adc
jb
loopne
enter
push
lock
call
adc
jne
add
sub
and
mov
mov
mov
mov
mov
add
xchg
cmp
int3
lea
sub
add
add
nop
and
inc
aas
mov
xor
pop
mov
movsb
int
shll
xchg
mov
inc
in
xor
shll
in
in
lock
clc
cld
daa
mov
or
cmp
add
dec
cmp
lea
int
shll
popf
or
adc
inc
inc
jo
or
js
lea
jl
cld
jg
ret
testb
jo
fldenv
sbb
cmp
and
stc
sub
into
sahf
and
jo
mov
mov
shrb
cmp
dec
pop
mov
nop
scas
dec
push
mov
pop
ja
pop
inc
mov
lock
or
and
pop
fsts
inc
pop
mov
pop
push
and
sub
lcall
push
imul
cmpsb
imul
imul
xor
add
or
mov
xchg
push
ret
adcl
pop
adc
mov
pop
or
adc
sbb
add
ja
cmp
adc
shrl
sub
push
insl
and
jne
push
or
and
and
lods
mov
jle
jmp
push
inc
push
paddsb
jmp
jmp
add
xchg
imul
jo
push
mov
je
push
pop
mov
push
mov
pop
test
divl
inc
mov
pop
imul
addr16
pop
add
or
and
lcall
imul
fiaddl
inc
pop
push
or
add
push
rorl
jp
imul
fidivrs
mov
inc
cltd
test
mov
pop
inc
dec
dec
or
test
or
jne
rcrl
aas
dec
pop
or
iret
jbe
int
adc
inc
and
dec
nop
or
inc
outsl
push
jae
mov
dec
add
xlat
or
inc
decb
sub
cmp
and
loopne
cmpl
mov
adc
or
jns
push
adc
adc
insl
outsl
or
add
or
sar
mov
mov
icebp
aas
jnp
pop
das
mov
call
ds
arpl
push
clc
dec
pop
cmp
cmpsb
jbe
insl
lods
imul
inc
ds
insl
jecxz
cli
jbe
cli
mov
push
xchg
xchg
add
mov
or
mov
adc
mov
shlb
xchg
dec
push
lret
insl
mov
add
jo
mov
in
or
cmp
dec
inc
add
lea
xor
mov
push
mov
mov
add
push
pop
add
mov
dec
paddd
mov
jae
mov
fnstsw
mov
jmp
or
or
lea
sbb
sub
lea
sbb
pop
add
popf
test
or
mov
sbb
pop
mov
call
or
shl
add
push
fisttpl
push
andb
push
push
call
pop
mov
and
xor
push
or
out
lea
roll
ret
test
out
paddd
or
jns
adc
pusha
add
adc
sub
jo
push
adc
adc
jbe
sub
hlt
jmp
add
cmp
enter
adc
paddw
push
lea
push
dec
xor
incl
js
test
gs
mov
mov
lods
mov
out
sub
dec
mov
cmp
sub
cwtl
ss
jbe
pop
push
or
push
xor
adc
out
or
clc
mov
jmp
shlb
shr
push
add
dec
test
fdivrs
icebp
jg
lock
mov
cmp
sub
decb
iret
jne
add
cmp
sti
pop
jne
mov
cmp
es
add
pop
and
addr16
pop
push
jnp
or
aaa
jmp
xor
out
nop
es
mov
aad
or
jmp
push
test
adc
jg
sub
inc
ja
outsb
test
jmp
jmp
jge
test
mov
cli
dec
xchg
mov
mov
nop
inc
mov
adcb
mov
jo
push
fstl
fidivrl
or
mov
jne
xchg
test
subb
hlt
fucomip
mov
and
or
je
mov
popa
int
pop
dec
jbe
push
into
sti
mov
pushw
fs
test
jl
shl
inc
jmp
mov
mov
stc
inc
or
jg
jnp
incb
inc
mov
jle
pop
aam
imul
and
and
adc
push
adc
jl
pushf
shl
in
sub
pop
mov
decb
jne
call
hlt
and
jmp
pop
sub
mov
ss
xchg
jae
subb
xlat
gs
clc
add
insl
aas
adc
and
sub
dec
lods
movsl
and
fs
jnp
je
decb
jge
les
mov
arpl
mov
cmp
sub
pop
jmp
sub
dec
mov
jnp
mov
lods
pop
pop
je
mov
cmp
pop
outsb
jmp
cld
mov
fcomi
fistl
out
shll
add
xor
lahf
mov
and
jne
arpl
dec
cmp
imul
in
inc
add
hlt
dec
mov
add
mov
jmp
pop
jne
pop
mov
loope
shlb
pop
mov
xchg
cwtl
cmp
je
xor
push
push
inc
xor
xor
mov
je
push
sbb
push
mov
sbb
mov
jo
mov
dec
xor
lds
orl
rorl
jmp
jmp
enter
fcmovnb
dec
loopne
ret
aaa
imul
adcb
and
or
add
jmp
mov
dec
push
sti
test
out
jns
mov
iret
adc
aaa
cltd
shll
sub
or
ja
shll
dec
repnz
mov
movl
jmp
movsl
dec
add
sub
adc
push
sub
push
frstor
xchg
jbe
cmovg
dec
and
mov
outsb
das
pop
popl
sahf
inc
inc
mov
pop
mov
sub
jno
dec
inc
cmpsb
or
mov
jo
push
and
adc
adc
inc
pop
xor
mov
testl
popa
fs
imul
adc
test
jle
push
or
push
js
out
xlat
call
cmp
add
mov
pop
sbb
jnp
and
inc
ror
add
cmp
cs
xchg
jp
push
mov
jne
mull
push
and
jno
clc
push
dec
mov
inc
inc
inc
inc
dec
je
fidivl
jne
sub
add
mov
sbb
or
pop
je
cmp
cltd
adc
push
adc
xorb
cs
sub
mov
les
xchg
arpl
sbb
push
add
sub
sbb
jne
cmp
sbb
adc
add
fildll
mov
push
icebp
push
or
pop
pop
jne
andb
mov
test
jb
inc
sbb
jg
in
das
nop
jne
push
push
or
xor
xchg
push
mov
or
and
stos
dec
or
cmp
test
and
shll
nop
pop
adc
adc
cmp
aaa
inc
or
js
pop
pop
call
int3
nop
out
sbb
pop
shrb
inc
in
cwtl
dec
fsubrl
imul
fisubl
sbb
in
pop
mov
andb
or
aaa
mov
fidivs
dec
cmp
sbb
xlat
push
aaa
mov
or
mov
mov
push
jmp
mov
idivb
adc
mov
push
dec
fsubl
push
fnstenv
hlt
dec
in
sbb
xor
dec
divl
inc
or
add
mov
aad
push
enter
dec
rorb
xor
addr16
add
inc
mov
xchg
mov
fmull
xchg
mov
pop
mov
mov
je
push
fs
je
pop
insl
jbe
mov
add
jmp
mov
push
in
xor
cmp
mov
js
jno
add
mov
test
push
decl
scas
ss
sub
in
inc
lock
xchg
mov
and
lret
sub
add
dec
and
sbb
mov
lods
cmpb
inc
in
mov
pop
push
push
movsl
mov
xchg
xor
push
dec
push
pop
out
daa
sahf
mov
xchg
pop
mov
icebp
jne
repnz
add
enter
xor
mov
pop
ss
xchg
sbb
outsb
pop
loopne
je
test
insb
adc
cs
jl
push
or
out
cmp
sub
or
mov
dec
loopne
pop
sbb
cmp
clc
xlat
xchg
pop
xchg
xchg
mov
add
int3
mov
pushf
or
and
mov
js
lahf
add
and
lret
loopne
je
sbb
mov
stc
jmp
cmpl
shll
mov
dec
adcb
adc
in
xchg
jmp
push
rep
cmp
and
sub
fisubs
in
mov
cmpl
scas
jmp
pop
sub
adc
add
or
add
das
inc
mov
mov
popl
lcall
fs
push
adc
test
mov
or
lock
add
mov
mov
cmp
or
adc
mov
inc
and
xor
jg
add
hlt
cld
and
add
daa
mov
pop
add
push
mov
lahf
push
cmp
add
jb
sub
add
mov
out
les
loope
mov
mov
sbb
sbb
les
sbb
sbb
je
lock
sbb
in
fsub
loopne
sbb
sbb
or
mov
aam
add
fisttpl
mov
enter
hlt
pushl
je
insl
and
jb
jb
or
add
push
push
adc
add
dec
inc
std
gs
pop
add
inc
adc
push
xor
cmp
jns
or
insb
je
and
imul
fnstenv
popa
jo
daa
aaa
outsb
outsl
je
mov
cmp
and
popa
arpl
data16
outsl
ja
mov
popa
push
outsl
outsb
aaa
and
jae
fs
jo
jb
jbe
jb
jne
xor
fdiv
and
insb
sub
neg
jbe
pop
sub
pop
das
pop
push
fdivrl
pop
xor
imull
gs
fucomi
out
xor
pcmpgtb
arpl
jo
insl
xor
inc
and
gs
inc
mov
push
and
repnz
mov
lods
je
mov
arpl
lods
adc
xor
jo
int
mov
add
pop
sti
add
addr16
insl
and
ss
xor
dec
adc
or
sub
xor
lock
stc
sub
popa
jb
jne
jae
xlat
sahf
xchg
xor
outsb
outsb
xorb
outsl
add
out
js
push
cmp
push
imul
inc
sub
and
dec
imul
xor
daa
or
adc
aam
ret
add
loopne
sub
insb
ja
ds
mov
dec
popa
xor
jbe
push
scas
imul
in
jne
adc
push
xchg
fs
pop
jg
jae
popa
addr16
outsl
js
add
and
sub
add
inc
mull
add
add
popa
add
pop
lods
ds
xor
add
arpl
notb
imul
jp
jae
je
add
pop
add
or
or
orb
or
orb
nop
or
orb
xchg
pop
xor
pop
js
or
push
fldenv
or
and
sbb
fists
sbb
pop
add
or
jns
inc
or
or
adc
adc
leave
xchg
daa
cwtl
adc
sbb
cmp
adc
inc
call
sbb
leave
xchg
daa
push
js
jns
jp
cmp
and
sbb
or
push
shlb
pop
xor
dec
dec
push
testb
add
add
enter
das
movsb
add
jns
and
cmp
movsl
sbbl
inc
fdivs
shll
incb
or
mov
inc
or
mov
mov
in
call
idiv
jle
push
add
pop
pop
fisubrl
xor
mov
fsubp
stc
cmp
jle
mov
dec
pop
clc
add
add
dec
xor
sub
orb
add
test
and
xor
addl
aas
addb
pop
or
and
inc
push
pop
and
mov
add
add
mov
inc
add
add
popa
ljmp
insb
insb
outsl
arpl
dec
outsl
fs
gs
popa
push
shlb
fs
popa
xor
dec
outsb
outsw
adc
jb
cs
push
insb
or
jb
insb
lods
push
sub
idivb
adc
inc
jne
jb
outsb
and
imul
outsb
push
jo
inc
mov
imul
popa
insl
and
inc
cmp
jo
sub
mov
jb
addr16
push
push
imul
gs
bound
outsl
dec
xor
pop
adc
push
mov
push
pop
incb
jne
add
mov
push
adc
gs
rolb
pop
inc
mov
insb
jae
push
popa
insb
jne
or
add
adcb
idivb
test
xor
inc
add
sbb
lahf
mov
sbb
push
je
cmp
inc
ja
pop
loop
je
adc
push
pop
dec
or
sub
pushf
jo
je
outsb
push
adc
dec
push
jbe
lds
in
cmp
or
dec
inc
dec
or
lds
xor
pop
fadds
fs
dec
shll
mov
jbe
sub
xchg
and
fadds
or
btr
pop
inc
xorps
push
xchg
mov
push
inc
filds
mov
sub
outsl
mov
ss
insl
insl
scas
mov
jmp
dec
add
cs
bound
outsb
and
cld
sub
mov
or
repnz
push
ss
pop
mov
int3
incl
mov
je
popf
fcoml
push
push
or
dec
call
dec
xlat
jne
sub
stc
sbb
insb
addr16
jne
out
mov
xchg
push
jo
aas
stos
push
in
push
imul
sti
jg
lods
push
lock
add
outsb
addl
cmp
lock
sti
mov
dec
test
mov
popf
lock
lock
in
lock
inc
add
repnz
xchg
add
jp
inc
add
sbb
les
add
add
push
sbb
cmp
inc
jg
add
ss
push
sbb
add
test
add
mov
or
add
sti
jnp
outsl
jnp
clc
add
gs
xchg
jae
xchg
es
in
ljmp
pop
aas
lock
add
jne
add
jae
jmp
in
in
decl
add
mov
mov
test
add
sahf
lock
mov
jp
addl
in
mov
add
ds
ss
xor
cmp
lock
push
lock
push
or
pop
outsl
mov
ja
aaa
inc
dec
jmp
dec
test
sbb
jp
mov
cmp
inc
lock
jo
test
repnz
insb
mov
lods
add
inc
lock
ja
add
imul
dec
xorb
stos
add
js
push
outsb
das
lock
sbb
jb
add
out
jno
add
cmp
adcb
aas
ret
sub
mov
outsl
outsl
cli
inc
mov
or
jg
icebp
add
jg
sti
fcomi
imul
dec
dec
test
sbb
jne
inc
idivb
mov
mov
ja
lea
dec
jmp
mov
pop
aas
xor
pop
adc
call
jg
xchg
decl
nop
xchg
add
lock
add
jns
cmp
cmp
push
cmp
lds
ret
mov
jae
testb
add
cmp
mov
mov
dec
ds
daa
aad
cmp
xor
and
mov
mov
sbb
add
jbe
ret
add
sub
jecxz
inc
push
xor
lock
or
ret
sbb
lock
dec
flds
add
xor
fstl
jne
nop
out
lock
inc
jae
mov
xor
mov
lret
test
icebp
insb
mov
test
testb
sbb
insl
push
mov
js
mov
mov
adc
lock
push
jle
add
fisubrl
mov
cmpsl
push
xor
mov
pop
cmp
mov
outsl
fistps
fwait
js
inc
ds
jmp
sti
add
fwait
jecxz
mov
add
pop
movsb
pop
mov
add
cli
add
shll
mov
arpl
cmp
in
shl
xor
sub
sub
dec
inc
mov
testb
add
orl
or
mov
pop
imul
add
lods
mov
ficoml
imulb
decl
aas
push
into
add
loopne
add
std
outsl
ljmp
or
popa
or
xor
or
or
adc
pop
or
or
push
push
push
test
cmovl
xor
inc
or
adc
sub
add
sbb
aas
mov
call
ds
pop
adc
and
push
xor
adc
add
mov
or
adc
sbb
adc
sbb
sbb
hlt
movlps
or
outsb
adc
cmovb
or
adc
adc
sub
outsl
sub
adc
sbb
or
adc
and
and
mov
pop
adc
mov
je,pn
or
inc
cwtl
add
push
outsl
outsl
cli
fistpll
push
test
and
push
movups
es
cmp
ret
out
sahf
std
fistpl
pop
scas
add
sub
sbb
add
dec
push
add
or
pop
insl
aas
and
sbb
push
or
jecxz
insb
ljmp
dec
add
push
sbb
adc
or
fimuls
pop
push
jno
inc
cmpsb
lock
add
adc
test
prefetcht1
or
int3
adc
or
daa
cmp
sbb
sbb
pop
mov
mov
sbb
pop
push
xor
sbbl
adc
lods
test
rcrl
jmp
lock
lock
add
add
jmp
add
adc
lock
add
push
inc
cmp
lock
stos
sbb
dec
scas
loopne
test
stos
aam
mov
iret
xchg
std
sub
lret
sbb
adc
mov
or
add
flds
adc
pop
neg
out
loopne
inc
subl
cld
pop
and
fs
add
js
add
rolb
popa
inc
ja
orb
jo
jmp
cmpsl
cld
push
je,pn
or
xor
add
adc
jb
or
xor
lret
mov
add
jne
inc
add
es
sbb
xchg
xor
pusha
push
inc
shrb
jae
arpl
dec
aaa
data16
dec
or
pop
xchg
or
pop
dec
xchg
lcall
sbb
add
add
add
add
add
cmp
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
